push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
pop
jmp
inc
jl
jl
xor
jl
adc
and
popa
pusha
sub
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
push
mov
daa
sbb
push
lcall
jbe
loope
gs
imul
pop
shlb
mov
inc
pop
fs
rcr
mov
fs
mov
emms
cmpsl
lds
jg
or
pop
or
sub
add
xlat
cmc
rolb
xchg
mov
mov
add
cmp
xor
stos
pop
dec
mov
mov
jle
daa
mov
mov
mov
dec
fistl
sub
rcrb
and
rolb
fisttpl
aas
arpl
mov
cmp
clc
mov
mov
and
loope
jnp
nop
out
mov
lea
inc
insl
ss
push
push
mov
repnz
mov
cmp
xor
cli
mov
in
inc
ret
jmp
pop
push
les
jge
fstpt
test
repz
pop
mov
adc
int3
imul
sbb
clc
jb
and
shl
cmp
je
inc
add
in
cltd
pop
cmp
in
data16
jnp
lahf
aaa
inc
daa
pop
dec
std
jns
pop
add
outsb
mov
pushf
mov
testl
pop
mov
jecxz
out
sbbl
fisubrs
das
ficoml
sub
lcall
sar
rep
cmp
pop
xchg
jmp
sub
and
pop
lret
mov
insb
addr16
mov
jbe
mov
mov
dec
fwait
xlat
pushf
xchg
call
mov
jle
pusha
mov
mov
sub
cmp
loop
out
mov
push
sahf
lcall
movsb
sbb
jge
mov
and
xchg
inc
movsb
loope
es
xor
jb
cli
and
dec
and
loop
rorl
or
idivb
and
cmp
orb
jg
addr16
loop
sub
ja
out
cwtl
adc
cs
out
add
mov
xlat
lock
shll
lret
andl
cmp
imul
aas
arpl
fidivs
cltd
jge
adc
stc
daa
adc
dec
es
inc
jne
and
mov
jbe
pushf
jge
xchg
fdivrs
fildl
data16
add
pop
icebp
inc
cmpsl
aad
dec
jg,pt
mov
mov
jb
iret
loope
sub
xchg
sub
testb
mov
fisttps
es
add
or
add
fucom
bound
or
mov
outsl
scas
leave
fcom
xchg
into
sbb
add
mov
leave
push
sbb
sbb
hlt
repnz
repz
xlat
xor
in
cmp
xchg
xor
rorb
sub
xor
xor
sbb
das
je
pop
movsl
cmpsb
sbb
shr
adc
out
xchg
std
dec
in
leave
mov
adc
and
das
mov
inc
cwtl
push
faddl
inc
or
cmpsl
loope
cmp
sub
cld
xchg
mov
popf
pop
push
daa
push
mov
xchg
imul
fcmovne
xchg
decb
add
lret
clc
iret
xchg
std
xchg
mov
cmc
loop
lods
faddp
clc
fistps
cmp
mov
dec
iret
jae
aam
ficompl
cmp
sub
dec
psrld
mov
dec
mov
dec
mov
sub
ret
mov
mov
push
cmpsb
sarb
mov
cmpsb
xchg
adc
clc
push
ja
sbb
std
push
cmp
jg
mov
cmp
popf
adc
test
dec
iret
inc
sbb
fldt
mov
popf
xor
and
jge
lret
pop
repz
lret
sti
fsubrl
ljmp
adc
mov
loop
mov
int
int
push
xor
ret
je
xlat
outsb
xchg
jno
outsl
fs
call
xor
add
out
mov
mov
push
dec
insb
sub
jge
shrb
push
xlat
xchg
mov
xor
lods
mov
fisubl
mov
addl
pushf
mov
xchg
lret
and
dec
push
mov
lahf
xchg
sub
and
lret
mov
mov
add
dec
outsb
aam
lahf
outsb
scas
lret
loopne
push
or
lock
cmp
es
and
xchg
fisubs
xchg
push
push
push
lret
adc
mov
cmp
aad
push
push
mov
rcrb
mov
dec
pop
push
pop
sbb
rcrl
cmpsl
pop
mov
loope
inc
jbe
movsb
push
insl
pop
data16
and
mov
lcall
sarl
cmpsl
mov
outsb
push
lods
adcl
mov
pop
jb
addr16
mov
iret
adc
ss
sub
addl
andl
int3
notb
loopne
push
stos
insl
mov
mov
nop
repz
mov
lea
push
dec
mov
ss
xchg
pusha
test
sarl
sub
cmp
push
dec
jg
cmp
mov
rcr
js
push
jno
rcll
addr16
adc
call
ds
or
jne
lret
inc
je
push
std
fnsave
arpl
mov
jb
cltd
cmp
jmp
and
nop
mov
xchg
lea
dec
adc
jl
adc
and
pushf
xchg
or
fcoml
mov
lret
fxch
mov
hlt
ror
fisttpll
movsb
cmp
pusha
sub
ss
jl
xorl
cwtl
outsl
or
outsl
sub
lcall
adc
daa
fsubrl
mov
cld
mov
dec
mov
icebp
and
push
fidivrs
jns
fldenv
pop
sub
out
pushf
dec
lea
mov
push
xchg
inc
sbb
pop
mov
ja
aad
pop
fsubl
xchg
pusha
flds
dec
dec
sbb
xchg
jge,pt
pop
xor
mov
inc
inc
dec
mov
and
xchg
push
xchg
xchg
lret
cmp
mov
sbb
push
lret
or
fnsave
mov
into
push
jnp
imul
jp
mov
or
repnz
pop
dec
xchg
xchg
or
mov
mulb
mov
pop
cmp
push
push
pop
dec
push
cmc
ret
shrb
jl
sarb
das
mul
psllq
jmp
push
pushl
fs
and
push
mov
loopne
push
lock
popa
dec
rcrl
push
movsb
cmpxchg
mov
sbb
addr16
movsl
ja
ficomps
in
add
mov
inc
mov
fistpl
popa
outsb
mov
fisttps
nop
mov
push
jg
roll
sub
fwait
lods
daa
fcmovnbe
lcall
and
jne
push
repz
jl
jnp,pt
cmpl
movsb
cmp
fwait
test
adc
cmp
jg
xchg
aaa
jp
jbe
jne
jg
mov
fiaddl
pop
sub
or
pop
dec
mov
pop
jmp
popa
aas
les
jo
stc
mov
xor
fsubrs
jg
imul
ret
xchg
jbe
lds
cmp
les
xchg
lea
fmull
jp
adc
or
popf
and
in
jns
jae
jge
sbb
sbb
adc
popa
xor
dec
cmpsb
jno
into
insl
mov
je
adc
push
lcall
scas
stc
dec
push
adc
mov
pop
cmpb
push
movq
cs
je
fwait
sub
jbe
pop
mov
xor
mov
ds
jae
push
lock
out
cmp
out
cmp
cmp
pushf
cmp
pop
jmp
push
filds
or
sbb
jns
cmpsb
std
cmpsl
xchg
cmp
inc
fcmovnb
loop
out
in
cmp
fstpl
xacquire
bound
adc
mov
and
mov
xor
adc
bound
jl
leave
icebp
and
out
pushl
mov
dec
mov
outsb
test
ret
ret
push
loopne
dec
adc
xchg
sbb
insl
push
pop
add
xchg
dec
out
test
inc
or
lods
popa
jl
sub
bound
add
push
stc
sti
inc
rorb
insb
sbb
mov
or
outsb
pop
push
pop
arpl
mov
sbb
mov
mov
hlt
cmpsl
dec
inc
mul
inc
iret
jmp
test
and
iret
mov
add
cld
sbb
push
mov
les
sub
sarl
movq
push
lahf
and
mov
jl
aaa
out
inc
push
scas
add
xor
jl
in
pop
or
xchg
stc
mov
adc
mov
pop
and
fwait
lods
cld
mov
mov
mov
xchg
push
gs
push
lret
inc
sbb
leave
jg
cli
call
push
adc
ret
mov
daa
out
ja
dec
loope
mov
or
sti
out
js
xor
aad
repz
insb
xchg
lcall
clts
lea
repz
arpl
call
std
xor
cmpsb
divl
cwtl
xchg
cmp
lcall
xchg
cmp
jge
push
lahf
push
jle
dec
mov
pop
lret
stos
outsb
inc
ds
push
std
lret
shrl
mov
movsb
dec
cltd
notl
pop
fucomi
imul
push
test
das
sbb
push
dec
mov
dec
and
lret
cmpsb
aad
scas
insl
sub
mov
xchg
pop
push
repnz
pop
jb
test
mov
cmpsb
jle
mov
adc
pop
or
push
mov
call
add
subl
inc
and
mov
jb
jecxz
push
sub
dec
shl
mulb
mov
in
and
imul
aad
in
hlt
push
sub
jne
xor
jmp
dec
add
movups
adc
mov
rcrb
mov
dec
push
daa
pop
mov
mov
inc
aam
loope
int3
andb
out
pop
sub
lret
rcrb
xchg
shll
add
lds
notl
pop
push
sbb
dec
jp
roll
add
lret
xchg
xlat
adc
shlb
jne
pop
xor
mov
jne
inc
mov
mov
loop
dec
mov
ficoml
pop
and
mov
fcomi
ljmp
insb
and
dec
mov
xchg
jo
mov
nop
loopne
inc
mov
dec
pop
in
fcmovnu
push
fdivl
lea
lea
fdivs
push
pop
popa
popf
loop
sahf
push
popf
loopne
mov
add
subl
lret
rolb
push
bound
push
pop
out
loope
jnp
and
pop
lret
call
into
mov
or
fimuls
sub
outsl
lret
jl
repz
mov
add
push
xor
mov
test
mov
dec
dec
ffree
imul
imulb
jl
mov
xlat
orl
stos
cmp
int3
fdivrl
xor
xchg
jmp
dec
lahf
lds
push
cs
and
or
nop
mov
and
mov
lret
xchg
sub
mov
in
xchg
cs
out
clc
out
xor
mov
jecxz
push
outsb
dec
rolb
and
xchg
mov
dec
pop
fstl
adc
or
mov
mov
inc
mov
ret
inc
xor
mov
std
pop
lea
add
jge
frstor
xchg
mov
fisttpl
orl
scas
or
inc
stos
mov
jecxz
lret
js
xor
dec
or
addb
xor
cmp
jg
jne
xchg
iretw
dec
sub
inc
xchg
xchg
lahf
mov
lret
insl
cmpsl
cmp
or
popf
jb
dec
scas
ret
jae
std
jmp
pop
jecxz
sarb
pop
or
aam
aas
add
rcll
cmp
mov
sub
xor
xchg
lret
loopne
nop
inc
xor
and
lea
push
mov
es
jp
pop
push
cmpsb
mov
jg
test
pushf
insl
fldcw
or
in
nop
push
ret
loope
push
test
cmp
stos
push
loope
repz
sbbb
insl
in
xor
lock
mov
inc
repz
fidivs
cmp
xchg
jle
add
clc
js
xor
pop
test
imul
push
jo
mov
dec
sbb
cli
das
lea
test
sbb
jbe
jp
adc
mov
xchg
jns
xorb
mov
cmp
mov
add
cmp
fs
and
lock
and
cwtl
mov
xchg
lahf
push
push
pop
cmp
and
xchg
jg
cmp
or
adc
and
add
popf
in
mov
xchg
xchg
mov
fwait
movsl
push
insb
repz
iret
in
call
orl
add
jecxz
mov
jecxz
popa
mov
icebp
shrl
mov
ficomps
mov
sbb
fs
pop
jbe
inc
jae
inc
imulb
cmp
xchg
or
adc
stos
std
cld
xorb
popa
sub
pop
loop
jmp
push
jle
adc
cs
jmp
or
and
xchg
addr16
loope
fnstenv
cltd
push
pop
xchg
add
mov
inc
mov
ret
ret
or
in
pusha
xchg
cmp
test
cli
jb
pop
adc
and
shll
mov
jge
mov
mov
out
lcall
pusha
adc
jno
push
sub
shlb
jnp
cwtl
shll
push
inc
mov
fbstp
push
shl
mov
push
adc
mov
cmp
int3
jge
mov
mov
jle
ds
arpl
cmp
cli
or
add
lcall
mov
mov
std
push
lods
rolb
out
and
cmp
mov
stos
push
push
and
pop
xchg
mov
jmp
jge
xchg
lods
sbb
adc
mov
jp
maskmovq
mov
cwtl
ljmp
push
mov
sub
mov
push
mov
push
cwtl
add
cltd
mov
sub
lcall
dec
fstpt
mov
iret
jmp
sbb
or
shl
fidivrl
mov
adc
lret
and
and
fwait
jnp
orb
jp
xchg
sbb
xchg
repnz
xor
lcall
arpl
sub
dec
ljmp
lock
jmp
out
scas
roll
pop
out
mov
cmc
lock
push
jnp
hlt
and
jl
jno
cmc
pushf
iret
dec
or
or
adc
jne
push
ljmp
mov
and
xchg
sbb
push
add
xchg
add
mov
inc
insl
jns
jg
dec
daa
dec
pop
hlt
pop
lfs
mov
xchg
mov
js
rcl
push
push
shlb
sbb
xchg
jecxz
divb
add
pop
shlb
lcall
push
das
pop
mov
out
push
pop
repnz
inc
stos
and
bound
mov
and
sub
mov
lock
icebp
sub
pop
sbb
sti
and
aad
jl
lods
mov
fsubrs
loopne
jmp
mov
sub
jg
arpl
sbb
cmp
outsl
adc
xchg
lret
push
add
leave
add
cmp
outsl
pusha
or
pusha
pop
jl
add
mov
add
push
je
adc
je
sub
and
or
lret
mov
pop
movsl
jl
xchg
add
pop
pop
jge
sbb
xor
andl
sub
sbb
loope
test
pop
fcompl
aam
test
push
sbb
sub
mov
jle
adc
adc
je
add
insb
fcomps
xchg
arpl
push
mov
push
rcl
jp
cli
hlt
cmpsl
inc
leave
add
push
jne
imulb
inc
add
mov
call
jnp
pushf
ja
dec
cli
cmp
mov
fistpll
test
imul
xlat
cmp
cmp
fildl
pop
lods
ret
xor
push
or
add
sbb
dec
cwtl
mov
cli
insb
sti
jmp
jg
das
or
mov
push
push
insb
pop
sti
dec
dec
nop
and
aas
sub
jg
pop
clc
lods
push
xchg
xor
popf
mov
xor
js
loopne
ret
stc
hlt
pop
dec
insb
push
fsub
add
push
or
jge
lock
xchg
xlat
mov
add
ljmp
mov
call
cmp
fs
cwtl
arpl
jae
sub
mov
cld
ret
mulb
sub
ja
sub
push
mov
push
js
iret
cmp
stos
mov
int3
pop
loopne
arpl
mov
jl
je
fcmovnu
insl
mov
dec
pop
lret
mov
fxch
ljmp
iret
fbld
stos
cltd
jns
inc
adc
in
mov
decl
pop
adcl
cmovbe
outsb
xchg
jmp
or
jmp
divb
xchg
cmpsb
shrl
and
push
sbb
nop
in
lret
jo
loope
mov
and
pop
aas
in
mov
dec
xchg
dec
les
test
aam
add
adc
sbb
sbb
adc
mov
pop
cmpsl
inc
testb
cwtl
pop
cmp
mov
and
mov
cltd
jg
call
pop
jae
cmp
rclb
push
pop
clc
scas
fmuls
cmp
xchg
add
aaa
es
jg
sub
dec
push
pop
xchg
or
lock
or
fwait
inc
mov
jo
ds
and
mov
mov
sbb
xlat
and
shrl
sbb
jge
mov
cmpsb
std
lcall
add
mov
lods
loope
aad
sub
jo
ljmp
test
dec
into
pop
or
or
cmc
repz
mov
mov
lahf
cmc
mov
dec
jg
lahf
inc
stos
cmp
xor
mov
inc
xchg
xchg
aad
pop
xchg
sub
dec
loope
or
dec
cltd
call
mov
andl
or
addb
mov
mov
dec
xor
xchg
in
or
inc
sbb
popa
xorl
repnz
and
out
xchg
xchg
adc
jb
clc
pop
jecxz
xchg
jae
mov
test
iret
aaa
rcrl
sub
out
xchg
sarl
imul
sbb
xor
ljmp
sub
fsub
test
jmp
xchg
es
or
push
sbb
lods
sti
aam
ja
dec
inc
stos
in
xor
sub
das
rcll
fstpl
pop
xor
loop
push
pop
mov
push
adc
call
pop
mov
loope
les
popf
mov
fadds
push
lods
shlb
jae
inc
dec
inc
dec
cmp
mov
out
adc
fmulp
or
in
sbb
pop
mov
in
dec
loope
shl
jle
sub
clc
mov
jno
jmp
xor
sti
imul
jae
outsb
fmull
ja
fldenv
dec
xor
mov
xor
pusha
xlat
pop
mov
ret
movsl
mov
rorl
pop
int3
cmp
xor
inc
in
in
cmpb
inc
jecxz
jnp
add
sbb
int
into
jecxz
sahf
and
lods
and
scas
push
inc
mov
xchg
sahf
in
push
cmpsb
sbbl
cmp
inc
xor
inc
adc
cmp
bound
cmp
out
pop
or
jge
leave
cmp
clc
into
test
out
mov
mov
add
ja
xor
jo
hlt
ljmp
jecxz
sahf
loope
adc
call
pop
outsl
push
push
mov
out
push
sbb
rcrl
or
inc
jns
sbb
add
or
out
pusha
jnp
push
pop
pop
xchg
arpl
iret
sub
imul
subl
cwtl
push
xchg
add
cli
inc
pushf
out
mov
push
out
xor
xor
xor
repnz
mov
sbb
test
test
jge
enter
cli
sti
inc
mov
sub
push
into
jecxz,pt
jbe
dec
mov
mov
pop
fs
scas
rclb
pop
add
jge
mov
push
ds
sbb
push
xor
push
rcr
in
mov
aaa
jne
push
inc
addb
clc
sbb
movsl
dec
aaa
dec
pusha
mov
mov
jns
popf
in
insb
ret
adc
test
xor
push
adc
iret
sti
jo
fnstcw
push
in
pop
iret
out
daa
mov
and
imul
and
and
inc
cltd
push
mov
sub
icebp
cmp
js
neg
es
sbb
je
or
dec
data16
sub
ja
cmp
cmp
movsl
cs
and
shr
cmpl
cmp
jns
fcoml
fldenv
jecxz
adc
stc
mov
loope
xchg
enter
xchg
bound
mov
enter
xlat
pop
int3
daa
lock
and
cmp
pop
out
sub
int3
pop
mov
jo
repnz
inc
cmp
adc
xor
pop
or
adcb
loop
lds
ret
mov
loope
mov
lock
in
repz
in
pop
xchg
push
insl
scas
sub
add
mov
xchg
inc
pusha
jl
push
icebp
adc
adc
aam
mov
shl
shrl
cli
mov
sbb
adc
xchg
pop
scas
lea
mov
call
or
xorl
inc
add
xor
pop
pop
cmp
js
addr16
mov
adcl
or
or
lock
and
pop
mov
or
cmp
sbb
icebp
push
loop
loopne
sub
gs
cltd
roll
mov
mov
sub
sbb
std
jbe
mov
nop
scas
out
insb
push
and
cwtl
jmp
rol
jecxz
outsl
jno
addl
insl
pop
cmp
stos
jne
pop
sahf
orb
lock
add
or
nop
adc
aas
sub
fnstsw
aas
or
xor
jg
mov
icebp
cmpsb
movsl
push
movsb
mov
ss
adc
mov
sahf
mov
loope
push
xor
into
xor
cld
jb
stos
mov
out
cmp
movsl
cmp
adc
and
mov
push
sahf
sbb
daa
sub
testb
mov
test
out
insb
add
in
popf
clc
dec
push
push
mov
mov
jg
mov
sub
imul
push
mov
lahf
cld
pop
popf
ljmp
test
jb
xlat
or
jecxz
sahf
mov
js
call
adc
xchg
fnstenv
shlb
cwtl
fs
das
pop
arpl
jle
lods
loopne
ds
push
ja
sub
movsb
lea
cli
and
lret
int
pop
sbb
mov
cwtl
or
sub
mov
arpl
pop
push
add
sti
leave
push
jp
sar
inc
mov
orl
pop
cmp
ljmp
imul
push
ret
pusha
fmuls
out
out
out
add
push
lcall
pop
and
mov
inc
push
shr
out
jecxz
mov
add
xor
jle
dec
mov
in
test
lret
mov
adc
ror
inc
repz
add
push
sbb
das
out
and
lret
rorl
mov
push
xchg
in
push
sub
popf
into
stos
sti
jo
sbb
mov
test
cltd
and
aam
mov
push
lret
xchg
pop
push
fwait
popf
scas
aad
pop
sbb
jns
xchg
lods
js
fistpl
sbb
pop
test
rol
ss
inc
lea
pop
cmp
or
pushf
pushf
xchg
xor
mov
xchg
lahf
jp
mov
or
bound
sbb
lds
jp
das
ret
popa
mov
xor
mov
fwait
enter
xor
cmp
test
mov
je
add
jecxz
sub
into
aad
sub
jae
add
or
aaa
popa
or
xchg
mov
call
ss
jp
shr
out
inc
mov
xchg
xor
hlt
jo
addb
daa
xchg
fwait
cltd
out
rorl
insb
in
aad
adc
xchg
xorb
sub
jae
scas
xor
jl
adc
sub
mov
pop
js
sub
push
notl
sub
adc
and
test
mov
addr16
and
into
jmp
pop
test
jns
adc
ss
out
push
push
jmp
gs
fwait
push
xchg
or
or
or
add
dec
mov
and
sub
loope
cmpb
mov
cmc
mov
cmp
inc
loope
mov
jle
mov
pop
fs
jp
hlt
fistpl
xchg
pop
cmp
leave
cmp
mov
dec
xor
js
arpl
and
mov
inc
mov
popl
push
adcl
mov
mov
sbbb
insb
iret
loope
dec
rorl
inc
in
xchg
add
inc
scas
scas
cmp
bound
mov
mov
repnz
jp
adc
scas
mov
xor
popa
les
xchg
mov
sub
sti
aaa
dec
adc
pusha
push
aam
ret
push
push
cltd
cmpsb
add
and
mov
lcall
dec
add
adc
pop
mov
mov
repnz
mov
fistl
jmp
nop
into
into
or
in
adcl
popa
nop
orb
mov
pop
mov
popa
or
xor
cli
loope
or
push
inc
add
lods
dec
pop
pop
fmull
pop
mov
jle
cmp
or
dec
mov
cmpsb
add
mov
roll
pop
sub
fistps
cltd
dec
xchg
pop
in
push
imulb
scas
jae
scas
push
push
popf
adc
push
fsts
inc
add
lcall
lcall
stos
push
dec
and
mov
clc
cmp
mov
sub
sub
in
dec
jae
adc
rep
in
lcall
mov
sub
sub
rcrb
pop
js
and
push
js
fsub
or
loop
push
in
cmp
jmp
bound
xor
or
or
or
mov
push
cmp
movsb
xor
mov
icebp
movsb
fwait
cli
mov
xor
jl
sub
sub
add
cld
sub
ds
aam
stos
call
lret
xlat
add
cmc
cli
mov
fstps
dec
or
outsb
adc
mov
xor
cli
push
mov
cmp
xchg
jle
loopne
xchg
in
cwtl
push
dec
out
ja
pop
inc
les
aaa
dec
pop
arpl
jno
neg
cmp
add
mov
insl
jmp
lds
push
adc
shlb
sbb
mov
push
mov
incl
mov
xor
in
fildl
pop
mov
insl
add
cmp
sub
test
daa
cmp
sub
sbb
jle
inc
daa
sub
pop
cmp
ja
jne
jmp
mov
or
das
adc
in
mov
ds
push
push
aas
and
daa
push
xchg
ja
push
call
or
std
lds
sbbb
adc
fs
lods
shlb
cmp
mov
mov
dec
aaa
mov
rcll
jle
loopne
das
js
in
nop
ror
iret
stc
stos
push
cwtl
pop
sub
xor
out
and
sub
cli
adc
scas
mov
shl
cli
or
adc
imul
stc
or
popa
sbb
xchg
and
int3
shlb
xchg
repz
leave
es
int
mov
jge
sahf
sub
test
icebp
xorl
decb
mov
imul
in
scas
imul
test
dec
mov
pop
xchg
cmp
sti
mov
das
or
out
cmp
inc
push
dec
xchg
lods
or
outsl
add
int
bound
mov
rcll
adc
fimull
hlt
and
into
mov
dec
imul
pop
pop
pop
loope
cwtl
gs
aas
jge
push
adc
leave
loopne
inc
dec
push
inc
aam
inc
in
repz
pop
xor
cmpsl
int
pop
mov
adc
lret
orl
mov
mov
shrl
in
repnz
imul
xchg
orb
sbb
jbe
imul
push
cmpsl
iret
mov
ret
mov
lods
jle
jo
push
js,pt
cmp
or
mov
and
cmp
mov
dec
es
jp
out
xor
sbb
out
adc
in
xchg
push
cmp
inc
maxps
aaa
pop
add
shlb
or
popf
add
test
stos
into
js
push
jae
cli
mov
andl
and
sbbb
push
pop
negl
and
sbb
enter
rolb
fld
adc
inc
leave
into
rcr
jne
ss
fnstenv
fldenv
dec
call
dec
cmp
stos
insb
scas
jns
sbb
jmp
add
aam
mov
sub
xchg
js
xchg
mov
ret
lahf
addb
pop
ficoml
mul
aas
jno
daa
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
cli
scas
xor
jl
dec
pop
jl
scas
sub
xchg
add
cmp
sti
add
lcall
inc
test
popa
cmp
push
insl
add
mov
add
call
stos
ret
jno
sbb
cmpsb
repnz
sbbb
ja
ljmp
and
mov
sbb
jmp
pop
rclb
loope
cmp
inc
pop
and
push
sub
fucomi
ret
mov
outsb
dec
jno
mov
fs
mov
inc
push
jo
add
and
stos
and
test
in
jb
mov
inc
jmp
cmpsl
or
lret
mov
in
insl
enter
arpl
icebp
fwait
test
push
orb
dec
test
ss
je
js
push
or
daa
loop
hlt
cs
sub
jnp
lea
add
adc
mov
pushf
lods
dec
jge
jo
incb
pop
ja
and
repz
add
adc
loopne
xor
clc
popf
addb
mov
or
add
movsb
mov
dec
inc
inc
data16
ljmp
push
nop
xchg
push
jns
mov
xchg
push
mov
rorb
push
pop
ss
pop
rorl
fwait
mov
es
stos
jne
ljmp
fnstsw
sahf
adc
mov
std
idivb
mov
cmpsb
mov
fwait
popf
sarl
clc
cmpsl
js
out
xchg
pop
and
frstor
je
das
mov
movb
mov
mov
push
out
dec
adcb
imul
fisubl
sbb
dec
jmp
sbb
lea
orl
push
dec
std
xchg
lods
push
es
fldenv
cli
nop
push
lods
adc
fidivrs
ljmp
arpl
mov
mov
mov
popf
sub
cwtl
in
adc
push
and
inc
sub
ret
mov
mov
int
pop
push
jo
jge
inc
lods
pop
fsubrs
pop
popa
mov
jg
pop
bound
jb
add
repz
sub
and
in
pop
xchg
adc
int
xchg
mov
inc
cs
adc
sbb
mov
jle
in
ja
jge
lcall
inc
int
pop
insb
push
das
xchg
or
or
jns
sti
xchg
dec
fs
push
test
push
in
mov
lock
movsl
cltd
push
or
pop
cld
scas
dec
xchg
push
xchg
ret
push
jle
mov
mov
sahf
fwait
insl
adc
adc
push
or
mov
lods
inc
dec
xchg
mov
leave
mov
or
shrl
in
add
push
test
jge
push
scas
jbe
fldcw
imul
mov
mov
sbb
dec
scas
xchg
stos
add
and
fs
lods
jo
cmc
xor
cmp
arpl
gs
mov
adc
jo
arpl
out
xlat
mov
notb
lds
sbb
cmpsl
out
pop
xor
sahf
and
xchg
loope
fcmove
or
sbb
insl
xor
cmp
jecxz
fwait
scas
je
cld
xchg
pop
jbe
jae
mov
lods
mov
adc
scas
repnz
xor
add
loop
in
push
out
jbe
fimuls
call
repnz
cmp
out
xor
cmp
in
hlt
mov
xor
jns
xchg
leave
lea
push
xchg
mov
xchg
sbb
sti
loope
cltd
test
mov
lods
ljmp
push
xchg
lods
pushf
loopne
push
int
dec
sbb
clc
adc
or
inc
adc
mov
fildl
or
push
adc
stos
mov
lds
sbb
into
or
dec
pop
cmpsb
or
out
shll
inc
dec
sti
jo
into
pop
das
jl
and
or
add
inc
ds
bound
shlb
dec
sbb
lea
jb
pop
cwtl
push
cld
push
fcom
aam
movsb
aam
push
lret
outsb
xchg
in
pop
or
fwait
clc
sti
cs
lahf
fadd
out
jecxz
cltd
lds
xchg
aam
out
cmp
jg
mov
loopne
andl
mov
jecxz
mov
add
sub
adc
movsb
pop
mov
int3
call
jne
pushf
xor
stos
mov
in
dec
out
outsb
adc
dec
xchg
ret
jbe
scas
xchg
movsb
icebp
dec
imul
xor
adc
or
sub
movsl
sbb
push
int
je
cmp
push
ds
xor
movsb
je
rcl
subb
sub
mov
xchg
add
add
jecxz
or
cld
mov
xor
pop
xchg
pop
lods
fwait
daa
daa
lret
push
and
shlb
jns
mov
mov
hlt
int3
add
jb
mov
arpl
jno
inc
movsl
adc
cmp
push
sub
fdivp
cmp
and
sub
loope
repz
pop
aam
push
mov
popa
fcmovu
mov
xorl
fdivs
inc
rol
test
pop
cwtl
dec
adc
std
jae
push
xchg
or
shrl
inc
jns
sbb
cmp
sbb
inc
jae
pusha
cmp
push
xlat
xchg
fcoml
xor
inc
or
movsb
insl
fistps
shll
dec
test
out
popf
push
pop
mov
push
dec
inc
jb
cmp
adc
fwait
pop
mov
pop
sbb
int
fdivrp
xor
jnp
out
iret
sahf
cmpsl
add
out
inc
leave
mov
mov
add
dec
xchg
decb
dec
scas
or
inc
popa
dec
xchg
mov
or
les
imul
mov
test
push
add
push
sub
push
adcl
aad
repz
push
or
jno
adc
mov
movsb
ja
insl
stos
cmpsb
pop
xor
inc
cmpb
das
jo
adc
adc
lahf
jns
fstpl
clc
fcmovnb
test
xor
les
and
fstp
sbb
fldcw
jo
cld
xchg
imul
pop
mov
movsb
rorb
mov
mov
into
mov
cmpsb
dec
or
roll
xor
inc
push
cmp
sub
or
int3
jno
mov
int
fiadds
clc
adc
das
cmpsl
in
into
push
call
pop
and
and
dec
and
dec
divl
sbb
jmp
xchg
mov
mov
mov
int3
scas
sbb
sbb
outsl
xor
inc
mov
jg
pop
jnp
loopne
cltd
out
jnp
ret
cvtdq2ps
push
lods
lahf
mov
pop
in
jo
hlt
xchg
rorl
push
sub
popa
sti
ja
aas
push
out
pop
xor
and
lret
outsb
xchg
xor
sar
xchg
outsb
mov
mov
int
and
sarl
and
shll
in
sbb
hlt
or
sub
fs
into
jecxz
fdivrs
ss
xor
fwait
pop
movsb
aam
add
adc
adc
pop
pop
mov
out
in
xor
outsl
popf
lret
mov
xor
scas
push
leave
push
jbe
xchg
mov
xor
mov
stc
lods
dec
fwait
add
push
outsl
inc
rorl
fildll
test
inc
lods
push
scas
psubsw
out
sub
xchg
or
test
das
orl
sub
xlat
inc
push
xchg
jge
fisubrs
add
out
or
inc
jne
repz
in
scas
aam
mov
out
loopne
inc
shlb
mov
mov
mov
dec
ficoms
cmc
xchg
xchg
mov
mov
push
xor
outsb
push
repz
in
pop
or
sarb
cmc
adc
mov
nop
imul
inc
lret
repnz
cmpl
pop
dec
addl
mov
adc
sbb
popf
dec
sti
xor
icebp
dec
sbb
rcll
enter
pop
xorl
sbb
push
rcl
fs
out
jp
dec
insb
jns
add
mov
and
push
lret
inc
and
cmpsl
rcl
addr16
push
int3
push
aad
dec
dec
xchg
adc
xor
les
cs
mov
inc
loope
or
push
ret
mov
add
mov
push
out
repnz
sti
jge
jmp
sub
push
cmp
clc
push
pop
xor
mov
sub
vorps
leave
das
roll
ret
ret
mov
lds
cmp
into
mov
call
push
es
int
call
push
push
shlb
mov
and
sub
xchg
loopne
xor
filds
cmp
sub
mov
popa
and
mov
mov
lock
dec
and
imul
lea
cmp
test
out
lahf
push
or
pop
xchg
sbb
xor
rcrb
mov
outsl
jae
leave
sar
out
xlat
fdivrl
andb
mov
cmpsb
jl
ss
js
mov
sti
push
and
ret
sbb
mov
sbb
push
shrb
inc
outsl
shr
mov
mov
pop
iret
push
adc
clc
sub
paddsb
jmp
xor
jmp
enter
mov
lock
ss
pop
fnstenv
pop
xchg
and
cmpsl
mov
std
push
push
dec
jmp
mov
cmpl
pop
ss
dec
pop
ja
fstl
inc
addr16
js
loopne
mov
mov
int3
loop
inc
bound
in
jmp
nop
lcall
pusha
hlt
mov
cli
fidivl
test
lea
xchg
push
pop
jae
fmull
pop
pop
int
pusha
ret
stos
mov
idiv
xor
adc
fcompl
sar
dec
adc
mov
xchg
imul
push
jnp
dec
dec
inc
inc
push
adc
pushf
jne
jo
call
dec
sbb
insl
sbbl
sbb
cmp
test
in
jmp
jnp
repz
cmp
pop
jns
xchg
push
add
clc
outsl
inc
jp
push
or
daa
push
aad
pop
pop
cmp
mov
int3
ficoms
js
in
call
mov
movsb
fstps
sarb
int
dec
pop
add
jp
mov
out
bound
xor
dec
in
jo
xchg
or
dec
jge
xor
pop
popa
in
test
andl
mov
pop
es
fwait
lahf
mov
jo
in
jbe
pop
sub
pop
xchg
push
inc
cmp
dec
nop
dec
negb
loope
dec
fsts
pop
data16
push
aas
pushf
sbb
les
push
lret
push
popf
xor
mov
inc
sub
cmp
sub
inc
adc
push
inc
hlt
jl
cwtl
mov
push
stos
cld
cmp
add
out
xor
mov
pop
push
jbe
pop
ljmp
ljmp
aas
mov
xlat
std
pop
mov
dec
dec
fwait
jmp
bound
fs
test
mov
sahf
in
sbb
mov
and
imul
mov
jo
loop
inc
push
fidivrl
cmp
fnstenv
dec
xchg
mov
subb
sub
repnz
and
mov
fstl
cmp
push
inc
fidivrl
cld
push
test
adc
rclb
xlat
rorl
jbe
add
dec
insl
add
call
sub
xchg
rcrb
push
movsb
push
add
lea
je
cwtl
push
idivl
and
std
cmp
pop
mov
pop
sub
cwtl
lret
or
cwtl
dec
subl
pushf
cmp
xor
ds
mov
fwait
pushf
cltd
pop
dec
rolb
mov
inc
push
outsl
leave
and
or
mov
jg
out
addr16
or
inc
xchg
and
xchg
and
sbb
dec
fisubs
ljmp
repnz
ret
notb
jecxz
add
stos
dec
call
cs
push
enter
mov
int3
in
and
popf
lcall
mov
gs
sahf
cmpsl
mov
addl
pop
lahf
xor
hlt
subl
fadds
pop
push
clc
jae
std
xchg
dec
lods
ds
add
jmp
ret
in
stos
mov
in
pusha
push
cs
cmp
repnz
mov
xor
pop
pop
pop
arpl
pop
insl
out
mov
or
loop
add
nop
pop
pop
aam
mov
add
pminub
push
cli
ja
sub
fsubrs
inc
mov
add
mov
repz
jle
clc
sub
add
stos
cwtl
mov
fucom
add
popf
ret
iret
jp
das
jo
lds
jne
add
ret
jno
cmpsb
mov
mov
and
jo
fistps
sub
xchg
cmp
cmp
dec
rcll
dec
mov
ret
ror
pop
loop
inc
lock
pop
cmp
loopne
mov
xchg
shr
pop
or
in
in
dec
adc
jecxz
add
in
mov
out
pop
and
fistpl
jg
push
mov
out
jno
sub
mov
js
cmp
stos
into
mov
lods
xor
pop
xchg
sahf
add
add
bound
pop
push
or
lds
roll
inc
jnp
or
mov
sbb
inc
mov
scas
sbb
push
scas
movsb
nop
lea
dec
insb
cmp
mov
mov
nop
jno
insw
sub
push
lcall
lret
icebp
icebp
add
test
sub
je
in
mov
enter
sub
sub
repz
lock
out
das
push
pmuludq
scas
mov
cs
sti
or
pop
pusha
push
jg
mov
push
sbb
flds
jno
cmp
ret
fs
in
test
xchg
jbe
fmull
jl
imul
fdivl
pop
cltd
jno
pop
inc
test
jmp
mov
xor
xor
sbb
lods
jmp
add
mov
enter
mov
push
pmaddwd
mov
rclb
xor
pop
aas
mov
push
in
add
lds
xor
dec
imulb
test
push
pop
cltd
xchg
jb
pop
orl
mov
add
das
mov
inc
out
or
cmp
sub
test
mov
inc
popa
loop
sub
mov
sbb
ljmp
pop
xor
pop
sbb
insb
js
out
daa
mov
sub
xor
jmp
lret
sbb
and
es
sar
mov
jnp
imul
lret
inc
jnp
jo
out
add
in
pop
aam
xchg
sbb
and
sub
in
pop
scas
mov
in
lods
mov
fdivl
scas
ffree
lahf
in
mov
mov
sub
clc
mov
sub
lock
inc
mov
loope
hlt
mov
fucompp
pop
insb
pop
sub
into
and
sbb
mov
add
movq
mov
mov
sbb
adc
add
rcrl
stc
lahf
pop
push
fwait
jns
test
mov
int
imul
arpl
ds
insb
jnp
loopne
xchg
das
inc
dec
add
jge
lahf
mov
or
lock
sub
in
lods
jp
pushf
insb
adcl
mov
fisubrl
dec
xor
in
add
xchg
fst
shrl
lock
fsubr
repnz
mov
mov
fiaddl
call
lods
sub
inc
xor
popa
pusha
gs
xchg
mov
int3
fldl
test
pop
test
iret
repz
xchg
sub
hlt
insb
int3
and
std
mov
aam
pusha
sbb
and
lret
push
xchg
lods
xchg
jmp
and
scas
pop
imul
sti
popf
rcll
cld
lahf
mov
fistpl
fisubrl
movsl
mov
movsb
xor
pushf
and
xlat
push
hlt
mov
cmpsb
inc
popf
outsl
rcll
pop
push
fwait
insl
inc
add
mov
fidivs
sub
sbb
push
push
mov
push
test
mov
push
cmp
adc
or
inc
push
sub
out
inc
dec
xchg
out
add
pop
ret
int
push
and
jg
aaa
xchg
add
testl
pushf
das
cltd
js
sbb
imul
mov
cmp
stos
push
pushf
inc
movsb
lret
and
lock
push
leave
ror
repz
insl
sub
decl
sub
int
sbb
loope
fs
adc
in
xchg
sub
cmp
mov
pop
ds
in
pop
dec
aam
sbb
imul
dec
xlat
testl
lods
mov
pusha
loop
enter
das
pop
mov
rclb
test
xchg
lret
cmp
nop
lds
pop
jns
test
mov
or
nop
adc
dec
inc
stc
pop
pop
cmp
and
int
jmpw
stos
addr16
out
in
ljmp
fs
je
mov
sbb
adcb
sbb
cmpsl
fs
cwtl
pop
jns,pn
jge
sti
sbb
inc
rcll
xchg
incl
scas
fimuls
add
mov
mov
push
paddusb
loopne
rorb
push
cmp
addr16
aam
icebp
fisubs
sub
dec
pop
push
push
movsb
shrl
cmp
push
loop
test
jae
xchg
mov
adc
add
dec
iret
nop
into
jp
sbb
ss
fimuls
mov
pop
xchg
imul
add
or
fwait
or
loope
push
jmp
sub
add
fstp
push
jbe
fisubrl
sub
in
dec
hlt
xor
xchg
add
addr16
sbb
fs
adc
and
test
or
das
sub
jo
test
ja
nop
ret
leave
out
mov
and
adc
xchg
daa
into
dec
jle
gs
add
enter
repz
and
jo
shrl
xchg
mov
sub
cmpsb
cmp
icebp
sbb
sarl
pop
in
adc
lods
inc
loopne
or
and
sar
adc
dec
imul
frstor
gs
lods
mov
adc
dec
shll
mov
bound
mov
jp
sub
fdiv
mov
mov
orb
into
sahf
dec
pop
rclb
mov
cmp
das
pop
stos
mov
data16
sbb
arpl
xor
gs
mov
test
loop
movsl
test
add
fldt
pushf
inc
imul
sbb
and
std
push
inc
push
lods
xchg
xor
stos
cmpsb
mov
fsubl
mov
nop
sub
sub
xchg
fwait
jno
jb
lret
add
loope
outsl
hlt
jnp
push
sbb
push
xor
add
out
jae
ret
dec
fists
and
shrl
shll
mov
outsb
nop
sar
sbb
jb
ret
jp
mov
imul
cli
add
das
sbb
fs
adc
arpl
lea
aam
jno
push
add
and
out
inc
test
in
adc
jne
mov
mov
lods
lret
and
mov
fdivl
lods
dec
push
roll
mov
fisubl
xchg
js
sub
in
adc
cld
pop
add
mov
pop
mov
push
aam
in
inc
cmp
and
popf
xchg
inc
test
aaa
pop
jp
xor
rcr
sub
cmpl
mov
or
or
jbe
test
insb
outsb
mov
and
ja,pn
lods
adc
lods
test
repnz
mov
bound
fsubs
add
lcall
xchg
xchg
int
inc
push
xchg
pop
addr16
scas
and
push
nop
sbb
adc
add
push
stos
in
or
xchg
dec
stos
leave
int
xchg
repnz
mov
call
add
sub
fwait
mov
lock
clc
adc
sub
and
ljmp
xlat
cmp
mov
jbe
pop
cmp
mov
mov
xor
mov
or
aad
es
and
xor
lods
hlt
into
mov
mov
test
sti
out
icebp
jne
pusha
jno
jle
out
rcl
jne
das
cs
in
imul
xchg
jmp
cmp
arpl
fstps
push
and
dec
lods
add
das
dec
nop
test
imul
jl
dec
push
andb
jl
add
sbb
adc
jne
das
ja
xchg
adc
cld
push
xchg
or
jl
subb
fimuls
cli
ja
add
mov
push
scas
lcall
push
int3
imul
or
jnp
loop
popf
mov
mov
fistpll
cwtl
mov
jg
ror
cmc
fdivr
fisttpl
out
cld
sub
mov
loope
fnstenv
jbe
out
ret
nop
cmp
xor
fwait
mov
es
movlhps
negl
pop
fbld
push
adc
pop
cmp
push
xchg
icebp
sbb
jl
pop
lock
pop
add
dec
subl
je
cmp
test
cs
movsb
ljmp
aam
push
mov
aam
mov
mov
mov
scas
je
and
clc
inc
push
mov
sahf
test
ficompl
lea
loop
loop
mov
sbb
enter
jo
pop
jae
push
mov
adc
jbe
in
jb
fsubl
test
mov
xchg
lea
scas
cli
mov
mov
jecxz
pushf
shl
mov
mov
or
pusha
or
fwait
xchg
repnz
add
data16
in
dec
and
or
push
xchg
add
pop
addl
jbe
lock
pop
xchg
mov
fdivrl
mov
loope
push
fildll
sub
adc
call
imul
mov
int
jbe
or
test
and
daa
push
stos
add
jae
cmp
fwait
pop
out
aaa
out
xlat
rorl
cs
xchg
mov
cmpsb
jp
sarb
and
rcr
jns
data16
inc
imul
scas
mov
inc
outsb
pop
jae
pop
cltd
push
jle
cmp
movsb
incl
shr
bound
xchg
in
or
negb
mov
test
push
xor
push
stos
ror
outsl
or
jmp
clc
fimuls
mov
pop
shrb
mov
xchg
ja
in
jb
mov
rclb
iret
aad
call
int3
lret
dec
mov
cmp
dec
xchg
bound
dec
iret
or
or
je
xchg
iret
adcb
jae
ds
push
rolb
cld
lds
inc
add
nop
add
pop
mov
addb
int3
sub
mov
xchg
mov
sbb
mov
arpl
sahf
test
sub
or
jmp
mov
fmul
out
rcr
dec
mov
ja
adc
xor
pop
add
mov
lcall
and
mov
push
push
inc
inc
mov
sub
sub
hlt
aad
sbbb
add
and
mov
mov
mov
imul
out
loop
fcomp
mov
insb
flds
jno
pusha
mov
pop
push
daa
inc
outsl
fiaddl
stos
sarl
jne
data16
orb
test
push
iret
xorl
fimull
scas
rcll
mov
jb
mov
jecxz,pt
push
mov
adc
mov
jae
adc
jmp
jns
or
xchg
inc
hlt
mov
xchg
mov
jo
out
outsl
imul
push
out
loope
xor
mov
push
cmp
sti
scas
dec
cmc
sub
test
pop
jns
in
jle
arpl
ficomps
cmp
imul
lcall
pop
aam
mov
daa
mov
or
scas
add
inc
xchg
mov
pop
dec
mov
dec
xor
outsl
sub
cltd
jbe
adc
mov
or
mov
nop
mov
sub
push
outsl
aam
jne
cmp
bound
add
xor
test
imul
mov
mov
xchg
mov
pusha
mov
popf
xchg
mov
inc
cmpsl
sub
pop
cmp
push
repnz
imul
js
mov
push
adc
cmp
adc
push
mov
outsl
and
jns
adc
sbb
jb
mov
scas
sbb
pop
mov
lods
pop
mov
mov
lods
aaa
xchg
jns
stos
lcall
dec
add
lahf
sbb
repz
jle
fcompl
mov
data16
movsl
xchg
mov
pushf
je
mov
dec
add
aaa
and
hlt
ss
jae
sub
inc
jnp
rcrl
clc
movhps
adc
lcall
xor
cwtl
mov
mov
inc
sbb
adc
into
cmp
lds
xchg
push
test
xchg
je
and
fmuls
mov
loope
ficomps
jle
test
xchg
xor
mov
jae
add
in
xor
mov
sub
leave
shll
out
pop
ret
in
adc
push
and
mov
xchg
xchg
movsl
mov
xchg
jb
pop
hlt
pusha
out
xor
mov
mov
mov
cmp
std
mov
je
adc
xor
sub
sbb
push
xor
rcll
ficompl
data16
clc
dec
in
pop
mov
lahf
arpl
xchg
repz
or
push
test
pop
and
rcr
iret
push
stc
test
inc
mov
ss
cmp
in
imul
sti
pop
js
push
std
rolb
insb
mov
push
mov
cmp
mov
xorb
adc
xor
repnz
and
sub
dec
push
jle
sbb
dec
adcb
cli
push
push
insb
ja
adc
dec
push
mov
je
push
pop
data16
sarb
rcll
xor
xchg
mov
stos
aam
sbb
xchg
enter
add
sub
dec
add
push
push
cld
scas
outsl
sbb
or
cld
and
loop
mov
and
push
mov
sbbl
outsl
mov
cmpsb
test
arpl
cmpsb
stc
mov
lahf
xchg
pop
or
pop
or
pop
lods
push
dec
push
add
std
sbb
scas
inc
push
int3
jge
dec
imul
movsl
push
push
out
sbb
filds
jle
inc
inc
testl
xchg
xchg
jp
cli
loope
pop
pop
pop
nop
loope
xchg
lds
dec
lock
in
fucomp
test
xor
cmpsl
lods
pop
xchg
sub
or
xor
icebp
movsb
cmpsb
pop
rcrl
add
adc
movsb
push
xchg
addr16
divb
mov
dec
packssdw
push
in
lahf
or
xchg
xor
fneni(8087
cltd
daa
dec
arpl
scas
test
sarb
jmp
jge
lock
jbe
ljmp
dec
inc
mov
call
jo
cmpsb
add
mov
pop
adc
ret
test
adc
loopne
xor
push
add
fisttpll
dec
mov
and
lea
cmp
orb
scas
sbb
je
bound
imulb
mov
out
icebp
ljmp
and
mov
jg
mov
or
mov
xor
and
cli
aaa
fstpt
or
cmpsl
fwait
in
ljmp
addps
jb
cmc
bswap
fbstp
insb
jge
pop
jns
or
fidivrl
in
sbb
pop
int3
push
inc
mov
dec
hlt
jo
jecxz
mov
in
inc
push
pop
adc
lds
push
xchg
and
fs
ret
add
daa
mov
xchg
sub
jb
subb
loopne
sbb
or
bound
sub
jno
aas
push
lods
lock
dec
js
loop
rcl
and
int3
gs
hlt
and
pop
pusha
cmp
cs
js
lods
mov
loopne
dec
aaa
mov
xchg
pop
jns
xor
cltd
nop
scas
data16
stos
loope
scas
aam
pop
mov
and
packssdw
xor
lret
cvttps2pi
loope
cmp
pop
add
pop
sbb
cmovge
jmp
add
shll
cmpsb
daa
inc
cltd
xchg
inc
cmpsl
jnp
xlat
ret
push
fcmovnbe
cmc
sarl
push
dec
fs
push
jmp
push
cmpsb
cmpl
loopne
ljmp
pop
mov
xlat
add
pop
fiaddl
mov
dec
into
push
movsb
xchg
aad
jnp
enter
jbe
add
repnz
xor
sub
jno
ds
sbb
adc
ljmp
les
mov
fdivs
outsb
scas
cmp
cltd
in
sub
daa
lret
cmp
cmp
test
jo
fwait
xchg
xchg
cmp
cmc
sbb
dec
daa
lcall
data16
lea
gs
adc
dec
inc
mov
pop
dec
add
mov
insl
mov
stos
jle
lahf
xchg
outsl
arpl
and
sbb
ljmp
and
aaa
iret
in
push
cmp
mov
adc
lcall
push
push
jmp
insl
sbb
filds
daa
fildl
or
xor
adc
jno
mov
cltd
sub
fildl
mov
or
xchg
mov
outsl
js
mov
adc
pop
clc
pop
mov
mov
cltd
inc
mov
and
cltd
sbb
outsl
pushf
cwtl
xor
std
lret
scas
lret
lods
push
shl
mov
push
xchg
test
push
addr16
xor
lahf
popf
ds
in
pop
inc
push
sbb
mov
fisttpll
mov
cmc
jnp
lds
adc
cmc
ret
cwtl
jg
aaa
fdivrs
daa
imul
and
outsl
or
andb
inc
mov
jno
lahf
out
rclb
inc
test
sub
sub
xchg
ljmp
cmp
js
test
shll
mov
test
jno
adc
in
in
mov
fsts
dec
imul
adc
shll
push
imul
into
aaa
xchg
scas
sbb
inc
fistps
int3
pop
movsl
inc
inc
hlt
mov
pushf
in
mov
dec
jmp
mov
cmp
mov
sbb
sahf
push
cmp
pop
jl
lock
movsl
sbb
scas
test
pop
mov
and
jo
enter
mov
dec
sub
jl
jge
xor
mov
pop
fistpl
xchg
and
mov
jmp
adc
xchg
dec
std
pop
test
jno
xor
addr16
dec
push
inc
repz
loopne
out
iret
lret
mov
xchg
jmp
pushf
mov
jp
das
stc
jle
cwtl
lods
push
ret
mov
out
push
jae
dec
xchg
movsb
sti
push
movsb
dec
pop
int3
insl
and
add
int3
inc
jmp
ja
je
or
adc
popl
add
sub
xchg
xlat
es
std
mov
and
imul
and
mov
das
aam
sti
cmp
xchg
jnp
sarb
xor
inc
pop
inc
ret
dec
mov
orb
int
or
xchg
pop
sbbl
loop
and
mov
setp
jbe
push
ljmp
icebp
xchg
adc
jae
xchg
mulb
or
xchg
cld
je
mov
add
xchg
jl
add
push
xor
dec
add
or
pop
sub
mov
insl
cmp
jmp
aaa
pop
mov
jne
mov
iret
gs
je
std
push
mov
add
xor
push
mov
xchg
xor
outsl
gs
sub
xchg
pop
aad
ret
rcl
mov
in
push
popa
jle
shll
hlt
rcl
sahf
outsb
mov
scas
pushf
popf
mov
sbb
int
jmp
dec
scas
lcall
inc
jno
jo
ret
cltd
aam
sbb
ds
cmp
ss
ror
pushf
adc
pop
push
mov
fidivs
stos
scas
jae
xor
mov
pop
pop
inc
dec
cmp
enter
movsb
pop
mov
mov
or
jno
hlt
icebp
jo
jne
insb
push
jbe
push
adc
stos
cmc
sarb
lahf
fld
and
sbbl
pushf
out
lret
mov
addr16
icebp
or
aaa
in
pop
xchg
fidivl
xchg
inc
jnp
push
subl
sbb
pop
outsl
pop
out
lds
shll
sub
ret
imul
dec
divb
and
mov
xchg
es
movsb
cs
pop
leave
xchg
in
popa
sbb
inc
xor
cmp
mov
mov
jns
out
das
fisttps
sbb
pop
fidivrs
inc
push
or
inc
add
popf
cmp
andb
or
sub
dec
ror
push
or
inc
sbbb
icebp
inc
sbb
and
dec
sub
fmuls
fists
xorb
cmp
iret
xor
and
cltd
jmp
push
cmp
pushf
daa
push
jg
mov
fstpl
ret
or
repnz
leave
fdivl
mov
cmpsl
int3
fisttpl
jle
jae
cmpsl
enter
arpl
bt
xor
ja
mov
xchg
and
pop
popa
mov
popf
jmp
adc
jmp
mov
jno
mov
and
inc
dec
insl
test
or
bound
movsl
fbstp
push
movsb
xlat
xor
and
in
negb
jmp
cs
clc
sub
add
int3
cltd
push
hlt
push
outsb
repnz
enter
test
push
stc
add
xchg
xor
insl
lods
pop
addl
mov
push
mov
xor
push
jge
and
jns
xlat
in
mov
or
dec
fcompl
shll
or
cmp
fldl
sarl
pop
leave
mov
push
aad
mov
jge
loope
sti
sub
push
shlb
pusha
mov
testb
xchg
dec
sbb
sub
add
jle
add
leave
mov
mov
or
aad
jnp
dec
mov
sub
test
jno
daa
sub
rclb
enter
jmp
ret
fstps
rorl
jnp
jp
inc
push
push
jbe
mov
jbe
inc
jmp
fucomi
pop
leave
xchg
sbb
adcb
adcl
push
xchg
aam
push
jecxz
ss
ja
outsl
cwtl
sub
adc
jge
clc
insb
pop
popf
adc
test
inc
outsl
lret
fnstsw
pop
jnp
or
xchg
add
in
or
xchg
fwait
inc
xor
adc
add
imul
cmpsb
nop
mov
aad
push
inc
adc
ficompl
jge
mov
dec
mov
xor
and
movsb
jge
scas
je
addb
fstpl
push
mov
fsub
jbe
aaa
mov
popa
xchg
ja
jno
in
rolb
ret
inc
xchg
hlt
mov
mov
fcmovbe
pop
pop
or
test
rorl
jne
pop
adc
lds
mov
cmpsb
xor
push
enter
or
ds
adc
ds
or
push
sahf
add
sbb
fsub
xchg
lea
or
dec
mov
push
xchg
cmp
jns
mov
aad
inc
in
xchg
enter
adc
xchg
outsb
jmp
push
jb
aad
cmpsb
out
jae
test
lods
sbb
sbb
dec
jmp
imul
in
sub
popf
mov
loop
lahf
fadd
dec
cld
in
sti
aaa
fxch
in
shrb
clc
push
clc
xchg
insb
adcl
mov
and
js
jg
repnz
imull
cmp
xor
adc
pop
xor
outsb
jne
inc
lcall
dec
gs
pop
cld
pop
sub
cmp
xchg
repnz
popf
mov
gs
fisttpl
dec
cmp
sub
sbb
fldt
mov
lods
push
xor
mov
inc
add
mov
pop
mov
int
jbe
push
enter
cmpsl
inc
add
cmp
mov
std
out
push
pop
sub
cld
pop
mov
ret
lahf
jae,pn
mov
pop
dec
in
and
cld
xor
adc
jecxz
movsw
icebp
outsb
mov
inc
mov
movsb
nop
cmpl
jl
add
mov
or
bound
jmp
inc
pop
sub
mov
mov
xchg
lcall
stc
movsl
mov
sub
cmpsb
mov
mov
je
adc
es
jg
push
xor
mov
fstpt
dec
sub
stos
sti
fwait
andb
cltd
rclb
test
inc
ja
mov
dec
dec
enter
xchg
out
dec
loope
jmp
xchg
jnp
add
addr16
repnz
push
sbb
add
int3
das
jne
inc
out
test
or
ficoml
cmp
movsl
jecxz
mov
cld
inc
stc
jecxz
mov
out
jb
mov
je
push
mov
push
xchg
repnz
pushf
iret
and
cmpsb
xchg
inc
jo
sub
pop
icebp
jge
inc
push
xor
dec
cmp
sbb
in
fsubl
pop
sti
cmp
lcall
orl
jg
inc
lea
and
sbb
cmc
outsl
pop
sti
out
push
stos
dec
dec
scas
dec
or
pop
cltd
sub
or
jno
hlt
mov
imul
mov
add
inc
jae
sbb
mov
repz
ja
sarb
dec
movsb
lret
add
xlat
pusha
fwait
push
cmpsb
push
pop
or
adc
mov
pop
mov
mov
scas
rcll
mov
jle
cmp
loop
aas
adc
adc
xor
jp
and
push
jne
aam
push
aaa
cmpl
push
xor
pusha
xor
jne
and
adc
or
out
pop
ja
fwait
pop
adc
push
xor
adc
mull
mov
leave
popf
xchg
dec
nop
xor
stc
mov
jl
test
rcr
xchg
pusha
test
fstl
add
test
inc
and
xlat
insb
xor
sbb
or
or
adc
mov
pop
push
js
aad
mov
sbb
add
mov
mov
xor
xor
pop
cltd
nop
insb
call
addr16
pop
mov
pmulhw
ja
dec
shll
inc
mov
xchg
mov
add
in
test
cltd
in
cmovbe
xchg
cmp
lcall
fmul
repz
jle
xchg
mov
outsl
xchg
leave
in
shl
sub
jmp
mov
cmp
das
aam
fsub
cmc
mov
add
mov
lahf
lret
lods
rclb
cltd
int
cs
mov
aam
sbb
test
mov
jmp
adc
out
les
push
shrl
sbb
scas
imul
cmpsb
pop
mov
fwait
lds
sbb
add
mov
sbb
xchg
ret
pop
sub
push
shlb
pop
call
les
push
jecxz
and
pop
mov
and
out
add
push
lods
inc
jecxz
hlt
scas
cmpsl
sbb
mov
inc
mov
pop
je
sub
stc
dec
das
loopne
outsl
outsl
pop
ret
xor
testl
divb
adc
xchg
js
cmp
fbld
jns
jmp
mov
fildl
push
sarb
mov
jb
dec
cmp
inc
xor
call
xlat
xor
mov
lcall
push
call
or
test
sub
test
pop
addl
dec
or
cmp
inc
fdivr
aad
pop
mov
out
adc
mov
outsl
pop
and
push
sub
mov
mov
push
aaa
fidivrs
rclb
xor
xchg
or
jnp
push
out
xor
and
mov
aam
sub
sti
mov
jnp
imul
mov
jecxz
mov
mov
push
jno
jl
jne
outsl
push
lods
sub
xchg
in
fs
shll
mov
cs
sahf
imul
push
mov
std
lret
or
jge
xchg
inc
push
mov
add
hlt
push
hlt
bnd
outsl
hlt
aas
lret
out
pop
aas
mov
in
mov
or
lods
sbb
cmp
cmp
cmc
test
ss
sbb
pop
out
fwait
ja
push
decl
incl
push
cld
jl
insb
dec
lock
and
and
sub
sti
jo
scas
fs
inc
pop
hlt
sbb
xchg
inc
je
xor
jmp
xor
js
cmpsb
ja
test
fcomp
pop
adc
stos
mov
mov
xor
mov
or
dec
imul
adc
mov
sub
rcrb
sub
scas
repz
xor
enter
pop
pop
call
lods
aas
jl
sbb
hlt
rorb
outsl
int
push
or
les
and
sti
pop
test
adc
lods
mov
push
dec
mov
cmp
lods
pop
mov
sbb
scas
dec
lea
jbe
adc
sub
movsb
adc
push
fwait
inc
mov
mov
stos
out
pop
popa
xchg
xchg
xor
adc
sub
mov
sbb
mov
jnp
mov
fistpl
mov
cs
xor
shll
xor
imul
arpl
in
popa
mov
pop
cmpsl
dec
sub
sbb
or
inc
adc
mov
cwtl
test
test
dec
cmp
idivl
jge
rcr
mov
adc
inc
inc
mov
mov
cld
cs
jecxz
xor
jbe
push
mov
in
jl
fisubl
sub
push
cld
out
push
mov
pop
and
and
inc
cmp
fistpl
jmp
dec
pop
pushf
or
sub
sbb
inc
jae
fcompl
jnp
int3
or
mov
loop
cmpsb
stc
arpl
add
dec
sub
mov
xchg
pop
mov
jno
scas
fistpl
addr16
jle
jo
lahf
stos
loope
xor
jne
add
mov
imul
call
in
std
cld
test
imul
pop
and
arpl
movsl
jns
sbb
cmc
lret
or
in
outsl
ja
lret
dec
xor
jb
jns
xor
push
daa
setl
mov
ss
cmp
insb
xor
pop
sub
int
ret
cmp
pop
add
lret
jo
or
or
sbbl
mov
dec
jg
dec
nop
shr
jb
into
jl
cltd
jecxz
pop
or
dec
xchg
sbbb
fimull
jae
or
push
mov
xor
test
cvtps2pi
sbb
jns
mov
dec
gs
jo
xor
scas
ffreep
pusha
sbb
pop
iret
push
inc
sbb
stc
sbb
sub
stos
inc
in
sub
jmp
push
push
in
out
jg
push
nop
bound
fsts
mov
add
mov
sub
mov
div
stc
push
add
sti
or
in
jle
or
add
jno
repz
mov
cli
push
out
jo
xor
mov
adc
cmp
out
or
cmpsb
pop
bound
sub
out
rcl
fidivrl
in
mov
mov
fcomip
stos
or
dec
shlb
mov
popf
and
xchg
arpl
inc
enter
fdivs
cmpsl
fidivs
sub
jecxz
mov
pop
ds
outsl
dec
sbb
push
dec
mov
push
sbb
add
jne
or
cmp
arpl
jmp
sbb
mov
pop
test
lods
mov
cltd
pop
call
mov
and
xor
int
mov
push
dec
aaa
repnz
inc
popf
leave
scas
inc
and
and
out
xchg
es
cmp
mov
mov
jbe
add
or
test
sub
adc
js
aam
out
test
xor
mov
insl
cmp
loopne
add
daa
int
cmc
inc
fstps
adc
add
inc
mov
push
push
xorl
daa
outsl
dec
enter
add
mov
add
jne
scas
sarb
sub
inc
and
movsl
add
jg
mov
mov
inc
dec
mov
jno
shlb
or
or
push
test
push
inc
or
push
sarb
lods
out
push
mov
repnz
insl
stc
dec
std
xchg
lds
cmp
js
movsb
adcl
push
mov
push
pop
in
das
lea
xor
cmp
add
cmpsb
xchg
jl
fildll
fwait
adc
jmp
js
xor
cmp
fwait
adc
fmul
mov
pop
xchg
shll
mov
out
inc
or
xchg
popf
push
popa
mov
out
mov
test
mov
mov
pusha
int3
pop
pop
push
cmpsl
pop
idivl
inc
cltd
pop
ja
add
test
mov
out
add
mov
cmp
das
out
cli
mov
mov
loop
lea
add
xchg
inc
movsb
es
mov
dec
sar
push
adc
sbb
jle
out
leave
jo
xchg
sti
out
sbb
sti
adc
pop
shr
leave
push
xlat
or
pop
push
into
dec
xor
sub
mov
stc
push
jo
int
mov
jle
jne
mov
xor
imul
icebp
out
mov
daa
ror
negl
arpl
mov
stos
pop
push
add
jp
or
dec
imul
movsb
add
jmp
ret
or
mov
add
rcr
pushf
add
push
repz
js
mov
sbb
push
sbbb
pop
clc
fs
aad
push
outsb
xchg
cmp
stos
idivl
mov
xchg
sbb
sub
icebp
daa
sbb
leave
loop
add
pop
fmul
cltd
inc
cwtl
out
les
adc
jno
fldenv
nop
outsb
cmp
lds
add
aam
pop
hlt
insl
ret
loopne
pop
imul
ror
lods
xchg
dec
and
or
sbb
mov
fcmovnbe
push
je
cmp
bound
movsl
mov
or
sarb
and
mov
jns
mov
mov
repz
mov
imulb
jge
popa
jnp
cmp
or
pusha
pop
cmc
sub
shll
out
cltd
cmp
fbstp
add
pusha
xlat
js
pusha
mov
aam
jb
sub
mov
add
test
or
push
outsb
mov
or
sub
xchg
sti
fbld
movsbl
into
ss
cmc
mov
stos
aad
and
add
outsb
inc
sub
inc
push
lea
ja
outsl
mov
ss
cwtl
scas
sbb
jmp
sub
sub
lock
hlt
xorl
mov
fldcw
mov
pop
adc
repz
scas
hlt
adc
push
ret
cld
xor
scas
push
xchg
dec
in
inc
mov
jb
push
mov
adc
imul
mov
sbb
sbb
decl
lret
adc
stos
mov
dec
sti
mov
ss
mov
fldt
and
aaa
js
jo
stos
jl
mov
shll
sahf
mov
jbe
in
mov
inc
xor
mov
int3
add
movb
cs
pop
int3
adc
xchg
jbe
inc
push
xorb
pop
aaa
jmp
fdivs
mov
sub
inc
lret
rcrl
das
pusha
jp
or
sbb
lret
and
xor
cltd
and
or
mov
lret
aad
cmp
stos
jg
xchg
sarb
cmp
push
mov
xchg
xor
mov
sbb
inc
sar
pop
pop
fsubp
ja
cmp
fcompl
lods
jae
mov
sub
shll
mov
inc
out
cwtl
out
pop
outsb
cmp
in
lds
sbb
jo
or
call
movsl
call
arpl
mov
dec
mov
mov
pusha
xchg
pop
js
jns
push
rol
movsb
push
and
clc
inc
xor
mov
mov
mov
mov
out
daa
cwtl
jmp
cmpsb
ror
lods
xor
push
and
stos
fwait
or
sub
dec
iret
es
dec
jle
les
sbb
push
adc
xor
movsl
cmpsl
mov
aaa
stos
out
or
and
dec
or
shlb
mov
dec
lds
xchg
xor
int
mov
test
insl
int3
dec
pop
iret
scas
add
enter
js
sub
es
xchg
test
inc
mov
add
int
scas
mov
push
movsl
push
out
mov
outsb
daa
fcoml
push
loope
mov
aaa
jle
inc
jle
lods
mov
jae
dec
js
xchg
mov
fidivs
mulb
adc
pinsrw
test
lret
push
jb
push
lcall
fsubrs
add
dec
lret
jnp
popf
lcall
mov
lods
inc
inc
dec
dec
mov
lret
push
cld
xchg
mov
add
or
stc
or
sbb
sbb
mov
out
xchg
fcompl
sbb
pop
xchg
pop
sub
daa
outsb
inc
jg
pop
push
stos
in
hlt
rol
dec
sub
dec
out
sub
cwtl
ret
jb
xor
push
cmp
movsb
push
jo
ret
lahf
fnsave
push
mov
call
mov
sub
sbb
in
mov
cwtl
hlt
repz
pusha
dec
add
gs
adc
or
fstp
xchg
aam
push
dec
xor
addps
push
sarb
mov
xor
sbb
mov
inc
jb
inc
cmp
push
cmpb
inc
rcr
out
jnp
jmp
into
add
movsl
lret
cmp
out
jg
push
or
xchg
jo
sub
fwait
push
jge
icebp
xchg
push
aam
pop
add
mov
inc
pop
cmp
cli
in
sahf
imul
je
and
test
filds
and
dec
xor
push
add
jl
push
insl
movsb
xchg
cmp
push
cwtl
pop
dec
sub
popa
movsb
inc
push
add
push
add
loopne
jbe
sub
aad
arpl
loopne
in
mov
sti
xchg
sub
cmc
sbb
test
xchg
adc
cld
or
sub
mov
xchg
jno
fwait
test
xchg
push
and
inc
pop
test
mov
inc
xor
aam
cmp
mov
ja
inc
xchg
out
fbld
fdivrl
leave
jo
div
test
push
insl
xchg
and
xorb
repnz
test
mov
xor
sbb
and
add
cmp
adc
sbb
push
popa
mov
insb
daa
xor
xchg
cltd
stos
movsl
adc
inc
cs
movsb
rcrb
add
adc
xchg
inc
push
jle
inc
mov
icebp
outsb
int3
and
in
fadd
or
mov
mov
cmpsb
adc
dec
ret
clc
dec
adc
outsl
leave
mov
inc
mov
mov
ljmp
orb
incl
shlb
test
add
jbe
jne
cmovae
clc
dec
sar
pop
mov
rcrw
inc
icebp
dec
fnstsw
testb
mov
loopne
xor
lahf
mov
lret
int3
xchg
sbb
jle
adc
xor
repnz
mov
cltd
sbb
mov
out
push
scas
in
pop
iret
clc
push
or
jnp
aaa
or
mov
stc
pop
xchg
mov
data16
mul
jne
mov
jbe
jmp
mov
test
jo
mov
cmc
mov
outsb
outsb
lret
movsb
jbe
leave
xchg
push
inc
lcall
sub
jo
mov
adcl
movsb
movsb
loope
pop
and
enter
lahf
fcmove
repz
and
ja
insb
mov
shrl
cmpsb
push
mov
adc
sbb
pusha
or
sub
add
out
mov
subl
ljmp
or
cmpsl
xor
sub
lahf
std
pop
std
cmpsl
sar
outsb
insb
orl
mov
insb
mov
lods
cwtl
push
push
mov
ljmp
mov
dec
cmp
jno
push
stc
mov
jecxz
inc
lds
lcall
add
sub
ficoms
dec
ret
outsl
stos
jns
daa
mov
mov
popa
outsb
fldcw
jns
mov
inc
mov
mov
aaa
sub
xchg
xor
call
out
xor
inc
addr16
add
in
mov
shll
scas
mov
lods
xor
call
mov
add
mov
rcr
cltd
fcomi
jmp
lret
or
mov
mov
mov
rorl
add
jb
jae
fidivl
andl
mov
jae
xchg
mov
mov
add
cmp
out
cmp
hlt
sub
sbb
out
xor
push
pop
fisubs
mov
insb
sar
fmull
jle
xor
loopne
xchg
mull
add
cltd
cmp
and
shlb
cltd
push
xor
xchg
stos
mov
add
add
add
adc
mov
xlat
sahf
xor
push
sbb
fmull
dec
push
push
jp
cmpsb
push
lds
or
sub
or
xor
leave
dec
cwtl
lock
in
lea
push
mov
mov
inc
inc
pop
push
and
mov
mov
loopne
sbb
dec
fldcw
or
xor
repnz
ljmp
jae
mov
xchg
mov
and
xorb
jbe
les
xchg
mov
xchg
mov
out
sub
cld
sahf
mulb
arpl
clc
mov
sti
mov
test
add
inc
mulb
pop
mov
test
xchg
jns
pop
insl
movl
lods
repnz
loop
xchg
aaa
inc
lcall
and
or
inc
adc
dec
pop
push
call
xchg
out
sbb
dec
aad
pop
mov
jg
mov
cmp
cwtl
leave
sbb
jb
decb
ljmp
fadds
sub
jge
mov
je
pop
jge
scas
xor
test
in
dec
mov
mov
loope
out
add
rcrb
cld
ret
js
insb
and
outsb
ds
inc
insl
inc
mov
nop
outsl
call
mov
mov
ret
nop
xchg
push
jmp
fisubl
in
push
aam
test
xchg
mov
outsb
aam
mov
insb
outsb
inc
cld
clc
lods
sbb
add
loopne
stos
cmc
out
into
inc
push
je
lret
pop
mov
cs
loopne
rol
enter
sbb
push
int
jl
mov
cli
aam
mov
stos
mov
and
ret
add
sti
ss
dec
fadd
arpl
stc
leave
inc
inc
int
ljmp
cmp
enter
add
pop
rorl
lds
into
sub
sahf
fmull
xchg
test
popf
cmp
push
mov
dec
sub
fstl
sbb
in
mov
leave
xor
xor
and
cmp
rcr
inc
push
aaa
pushf
xchg
inc
and
inc
dec
push
sbb
ljmpw
test
out
xor
cmp
xchg
shrb
and
jmp
shll
pushf
sub
adc
pop
lods
or
sbb
xchg
adc
jmp
sub
pushf
lret
inc
cmp
push
push
sub
ljmp
ret
jge
cs
pop
std
mov
jmp
xor
rorl
add
mov
jne
add
lcall
ds
std
pop
mov
push
cmp
clc
cmp
or
lea
cs
popa
fstl
and
sbb
push
xor
jnp
dec
cmp
push
addr16
icebp
jae
push
pop
lods
xchg
sbb
adc
rorb
xlat
sti
adc
sbb
xchg
pop
lret
lods
ds
fnstenv
sbb
sbb
notl
and
pop
in
enter
mov
ss
xor
mov
cmpps
xchg
bound
sbb
push
dec
std
push
loope
aaa
punpckldq
push
cmp
imul
lret
mov
cmpsb
sbb
jnp
pop
mov
jmp
mov
stc
mov
loope
popl
or
ret
fucomip
mov
sub
fimull
addl
out
rcrb
mov
jecxz
or
adc
sbb
les
sub
lret
shrb
addr16
call
cli
lret
pop
add
xchg
mov
adc
jo
inc
int3
scas
pusha
daa
sub
int3
push
arpl
jle
add
pop
and
pop
mov
mov
lcall
cmpl
sbb
loop
dec
out
xchg
enter
xchg
test
dec
test
sbb
mov
lcall
daa
icebp
sub
clc
add
jb
mov
sbb
sub
insb
popf
or
into
add
sub
in
call
mov
fldl2e
pop
rolb
push
or
jp
je
mov
rclb
and
aas
and
pusha
xlat
sub
lock
call
imul
jbe
push
ret
xchg
push
pop
xchg
arpl
clc
ret
adc
push
or
cld
lahf
js
cmc
fcoml
repz
or
loope
ffreep
arpl
fisttpl
sbb
daa
fistps
hlt
sbb
mov
cwtl
rcrl
sub
xor
jno
add
xor
mov
mov
add
pop
js
sahf
stos
xor
shlb
out
mov
jo
mov
inc
aam
xlat
and
pop
add
rcrl
cmpsl
xchg
sbb
xchg
sub
sub
sub
enter
and
dec
pop
fstpl
lahf
in
cmp
adc
mov
xor
scas
mov
leave
insb
and
pop
movsl
js
mov
pop
jnp
shlb
loop
data16
sbb
inc
test
and
movsl
jg
ret
imul
hlt
dec
adc
data16
cmp
push
fildll
mov
rorl
mov
mov
loop
aaa
jge
ficoml
jg
loope
cmp
lock
adc
push
inc
push
push
mov
hlt
insb
cld
das
and
mov
mov
mov
xchg
add
aad
adc
push
stos
loopne
iret
fsub
aad
xor
in
push
icebp
or
mov
icebp
int
shr
fbld
sarl
mov
in
cs
cmp
es
repz
mov
pop
aas
mov
shrb
outsb
mov
mov
mov
push
adc
in
pop
and
cmp
cmpsb
pop
sbb
cmpsb
xor
or
cmp
push
in
xchg
add
jne
clc
or
mov
imul
mov
lea
cwtl
lahf
sub
xchg
sub
adc
movsb
mov
cs
cs
jnp
lods
int
cmp
mull
adc
pop
fucomp
xchg
jge
aad
xchg
lea
mov
or
sub
sub
cmp
dec
dec
add
ds
push
std
icebp
outsb
mov
mov
aad
push
call
xchg
fsubl
xor
mov
lds
mov
add
stos
jb
lcall
add
ret
inc
sbb
int3
push
mov
daa
jmp
rcrb
movsb
push
nop
adc
fimuls
or
or
rolb
pop
sub
cmpb
cwtl
arpl
dec
bound
orl
mov
fiadds
jge
jl
ds
adc
fistps
lods
les
jmp
and
aam
dec
push
push
pop
mov
jae
decb
cmp
sub
push
ss
jecxz
loope
jb
sub
repz
repnz
xor
cmp
xlat
mov
fcomip
je
nop
mov
mov
or
cltd
push
addr16
push
cmp
dec
push
push
mov
and
or
in
fwait
in
loop
xlat
mov
add
mov
add
jb
inc
nop
mov
sti
sahf
and
mov
out
or
je
aaa
arpl
loopne
and
push
mov
push
outsl
sbb
xor
xor
subl
shrb
inc
in
test
out
push
jne
xchg
sti
cmpsl
push
dec
test
add
add
js
inc
or
cmp
loop
out
ds
lods
cwtl
push
inc
push
add
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
cmp
jl
dec
pop
jl
adcl
jbe
cmp
out
add
repz
mov
dec
mov
jp
pop
pop
mov
les
xchg
or
adc
push
inc
pop
std
std
icebp
sti
xchg
mov
negl
xchg
push
loope
adc
xchg
jae
add
dec
jns
faddl
shlb
js
jle
push
push
dec
mov
clc
repz
inc
shrl
clc
fstpt
xchg
fwait
js
mov
cmp
pcmpeqw
pop
add
addr16
icebp
bound
aad
out
movsb
imul
mov
mov
inc
pop
mov
pop
insb
push
mov
cs
adc
aas
outsb
adc
shr
add
cmp
mov
dec
rcll
ficoml
mov
dec
jmp
jg
push
test
cwtl
jge
lds
leave
adc
imul
push
cli
jo
push
dec
pop
cmc
roll
mov
jle
cmpsl
push
cmp
jl
insb
movsb
push
adc
sbb
sahf
and
or
hlt
and
xchg
add
cwtl
cmpb
xorl
push
jmp
push
in
rorl
cmc
mov
pusha
movsb
jmp
lret
mov
push
arpl
call
mov
hlt
jb
in
xor
int
shlb
lret
sbb
outsl
out
pop
mov
js
sbbl
iret
push
pop
dec
or
es
lcall
dec
jg
das
sbb
and
sbb
pop
enter
xor
stos
ja
inc
inc
sbb
xor
sub
sbb
sub
loop
cs
inc
lcall
roll
or
arpl
lods
and
cmp
sbb
or
or
add
outsb
out
mov
inc
xchg
push
in
push
es
cmpsb
enter
jae
ficoml
cwtl
inc
add
negb
enter
mov
mov
imul
push
fwait
cmp
int3
mov
jb
loopne
pop
in
mov
sbb
and
mov
sbb
jo
or
test
sub
cmp
inc
icebp
in
icebp
add
inc
mov
pop
jns
inc
push
lea
stos
aaa
test
out
mov
popf
int3
out
mov
int3
inc
add
dec
jp
nop
dec
adc
test
xlat
inc
mov
sarb
mov
add
test
mov
sub
lods
stc
lret
mov
sbb
mov
sub
adc
adc
jno
lret
aam
push
mov
and
insb
sti
pop
cmp
addr16
dec
xor
dec
push
sub
cmp
fcmovnbe
icebp
cmp
fdivrs
test
or
pop
and
es
push
fs
hlt
out
ds
aam
lea
cs
dec
xchg
clc
mov
cld
cmp
stos
pop
jns
pop
lock
mov
aas
and
ret
mull
into
addr16
mov
adc
sbbb
jne
testb
int
stos
push
cli
movsl
fbld
or
xlat
lret
aam
fwait
mov
pusha
lds
mov
pop
push
mov
dec
js
pop
imul
mov
cmp
mov
fcmovne
cltd
xchg
sub
push
fcmovb
pop
xchg
cmpsl
in
test
sub
dec
insb
pop
psubq
inc
sub
pop
hlt
sub
popa
add
inc
sbb
and
rclb
arpl
dec
mov
cmpsb
pop
arpl
push
dec
int
and
add
sbb
push
mov
scas
lds
ljmp
lea
dec
mov
sbb
lea
cmc
push
es
inc
mov
dec
add
inc
sti
ja
or
sub
and
aam
mov
pop
rcrl
fdivs
cmp
xchg
imul
pop
or
add
mov
mov
pop
inc
xchg
shlb
mov
inc
mov
insb
orb
mov
sub
xchg
dec
sub
push
cmp
clc
mov
mov
inc
outsl
lret
mov
jp
push
sbb
outsl
mov
push
pop
scas
and
ds
and
pop
jbe
xor
fisubs
out
aad
arpl
cld
fcmovbe
dec
shll
xor
mov
jmp
sbb
sbbb
shrd
mov
pop
jno
jb
jb
repnz
or
push
int3
add
cld
orb
verr
mov
push
sahf
jb
das
std
push
cs
loop
jns
das
xchg
cmc
test
cmp
sub
sarl
add
or
push
xor
xchg
mov
xlat
inc
in
inc
pusha
out
mov
fptan
mov
mov
cmp
aas
pop
lods
cli
flds
xor
outsb
mov
jno
in
ljmp
mov
jge
mov
punpckhdq
and
hlt
mov
push
jmp
call
testl
xor
and
lret
insl
mov
in
mov
adc
inc
adc
and
adc
jge
sub
leave
in
pop
add
leave
or
repz
push
xchg
mov
pop
aas
xchg
dec
xor
arpl
dec
sub
mull
orl
add
pop
inc
pop
in
push
dec
adc
adc
or
bound
xlat
out
mov
mov
cmc
out
testb
iret
les
mov
mov
adc
stos
lock
xor
mov
xchg
cltd
pop
imul
andb
into
cmp
popf
clc
mov
test
movsl
and
imul
out
jae
add
out
out
sti
sbb
cmp
mov
pop
adc
addr16
push
repnz
and
inc
imul
xchg
mov
loop
fdiv
pop
add
inc
cmp
lahf
or
outsb
into
jnp
arpl
test
enter
jp
clc
sbb
jg
out
das
imul
popa
leave
mov
xchg
jl
adc
cmp
aaa
xchg
push
stos
pushf
pop
mov
mov
mov
out
in
cs
jmp
xchg
cltd
jg
insb
and
add
daa
loopne
mov
mov
pop
lret
scas
adc
mov
aad
popa
sahf
push
adc
stos
mov
ror
pop
add
daa
les
adc
sub
addl
scas
adc
outsb
gs
cmp
push
cmp
out
jle
out
push
push
fldcw
jbe
out
xchg
sbb
idivb
aam
loopne
ret
lahf
sbb
mov
jno
and
adc
mov
xor
rorb
mov
shrb
loope
stc
ljmp
mov
psubusw
mov
sbb
int
push
jno
xchg
in
and
pop
or
sub
add
scas
and
mov
xlat
insb
xor
pop
mov
loopne
rcrb
pop
nop
test
xchg
sar
cmp
mov
mov
lods
imul
adc
sbb
imul
adc
jp
repz
test
repz
mov
adc
cld
out
es
cmp
xchg
inc
pop
mov
xor
adcb
sti
aad
xchg
lahf
jns
dec
sub
imul
add
cmpb
outsb
push
dec
nop
filds
outsl
sub
loop
xchg
xlat
js
cmc
imul
in
inc
adc
mov
repz
dec
mov
insb
jmp
test
inc
pop
add
es
mov
dec
pusha
fidivrl
mov
add
sub
and
fnstenv
add
jnp
and
in
ja
outsb
or
or
mov
dec
nop
sub
rolb
sbbl
or
pop
add
push
pop
add
xchg
inc
jmp
xchg
dec
mov
addb
add
cwtl
stc
push
sub
add
push
sbb
repnz
dec
ret
mov
fstpl
mov
inc
or
sbb
out
xchg
rcll
jle
gs
mov
shl
xchg
dec
mov
mov
mov
and
fadd
test
mov
dec
shll
dec
data16
inc
outsl
out
push
insb
lea
insb
adc
movl
and
mov
fstps
fstpt
sarb
fmull
sub
pop
or
sti
and
in
daa
ljmp
das
cli
or
cmp
cwtl
xor
ret
faddl
nop
jp
sub
pop
shrb
inc
ret
fisubl
out
enter
cmp
add
sbb
push
sti
nop
pop
stos
mov
and
scas
dec
bnd
sahf
xchg
arpl
adc
cmp
outsl
dec
push
sub
xor
xchg
lods
add
out
sbb
push
push
push
xchg
les
push
shlb
mov
jo
stos
popf
leave
push
add
push
push
enter
pop
divl
sub
popa
aad
xchg
pop
cmp
orb
dec
gs
lret
das
push
icebp
add
sub
iret
push
dec
jmp
ja
fcoml
xchg
mov
gs
stos
shll
sbb
jg
lea
lds
aad
fcmovnbe
lcall
lret
daa
sbb
adc
fwait
movsl
jle
xor
adc
cmc
lock
mov
stos
lods
bound
push
sbb
aad
mov
scas
xchg
test
push
pop
mov
mov
cld
nop
mov
sbb
and
adc
pop
popa
add
mov
fcoml
mov
or
sbb
lods
pop
shl
mov
dec
xor
aaa
sbb
pmaxsw
ucomiss
jns
adc
dec
shll
ljmp
push
outsl
and
mov
repnz
fmull
test
outsl
arpl
xchg
push
jno,pn
push
or
xchg
pop
pop
into
lods
int3
push
xor
mov
mov
cmp
pop
xor
sbb
fwait
loope
mov
iret
push
lret
cld
push
mov
dec
xchg
and
adc
stc
test
push
int
dec
jg
mov
add
shll
ljmp
and
mov
mov
xor
cmp
or
sub
push
add
maskmovq
testl
loopne
sbb
outsl
test
dec
int
mov
xchg
jp
mov
jl
imul
jg
sbb
add
sbb
xor
out
push
movsb
icebp
insl
pop
push
inc
ljmp
add
and
stc
popf
mov
pop
cmp
push
sbb
and
daa
out
xor
mov
test
nopl
fmul
cs
jecxz
popf
push
jo
push
scas
cmpl
pop
test
xchg
loopne
sub
add
dec
loop
add
arpl
jne
and
pop
inc
inc
mov
inc
mov
imul
test
and
aas
xchg
cmc
xlat
je
and
ds
pop
testb
popf
mov
push
cli
mov
mov
insl
out
fs
in
inc
sbb
pop
aad
imul
mov
mov
jecxz
adc
or
lret
test
push
xchg
lds
outsl
cmpsl
jae
aad
mov
psubusb
sub
mov
xchg
ja
nop
jb
and
movsb
jae
and
sub
dec
xorl
cmp
out
push
pop
ret
xchg
int
mov
fsubs
scas
out
jbe
fcomi
lods
xchg
popa
mov
push
scas
icebp
sbb
je
cmc
testb
mov
dec
or
repnz
adc
or
es
cmp
jns
std
cmpsl
lds
mov
pop
into
jb
xchg
outsb
add
lock
sbb
shlb
pop
rclb
cmpsb
mov
loopne
xchg
scas
or
xchg
rorb
aad
and
in
adc
lods
aad
fldcw
movsl
pop
je
xor
pushf
sbb
rclb
mov
jno
scas
fists
inc
dec
xchg
xor
lods
pop
adc
jmp
das
sbb
pop
das
mov
clc
xchg
cs
and
imul
sub
movsl
call
adc
fists
xlat
test
test
loope
scas
jnp
push
cmp
sarb
stos
sub
dec
inc
xor
test
mov
lret
lret
xchg
xchg
data16
push
loope
es
mov
push
pushf
loopne
inc
in
ljmp
mov
or
cmpsb
test
sbb
in
mov
fsubrl
mov
mov
call
cmpl
or
ljmp
repnz
mov
mov
xchg
movl
ljmp
outsl
cs
js
cwtl
jl
mov
xchg
mov
mov
arpl
pop
jl
popl
das
xor
mov
cmp
aaa
xor
inc
sub
sbb
adc
stc
xlat
das
leave
daa
pop
in
sub
lods
pop
je
mov
jl
stos
adc
stos
or
ret
addl
lret
pop
das
sub
divl
or
mov
jno
jmp
mov
jmp
and
lods
pushf
mov
lods
jge
hlt
adc
rcll
mov
jle
and
jg
jb
cli
ja
cmpl
and
jmp
xchg
in
jecxz
cld
jle
push
test
movsb
sar
pop
jns
mov
mov
mov
pop
mov
jno
jb
pop
mov
lret
jns
aas
sbb
out
sub
dec
xchg
jle
cmp
insb
jno
dec
cli
in
cwtl
loop
xchg
aam
jl
sbb
xchg
jae
lcall
pop
in
pop
into
mov
lock
adc
hlt
pop
mov
xor
xchg
flds
aad
inc
icebp
aam
std
push
stc
adc
test
push
es
popf
mov
adc
jae
sub
ss
enter
push
ja
mov
and
lea
pop
loop
or
outsl
scas
adc
test
incl
in
sbb
ret
lods
dec
dec
fnstsw
addr16
adc
and
arpl
jnp
mov
pop
shlb
pop
jo
fadd
sarl
arpl
mov
decb
push
dec
dec
divl
mov
jecxz
je
push
or
test
ja
inc
xor
jno
dec
xchg
cmc
insl
pop
mov
fs
adc
sbb
movsl
rcrl
pop
mov
add
in
cmpsl
pop
dec
jp
cmp
jns
dec
xor
cmp
stc
jbe
cmpsl
shr
popf
clc
pop
outsl
dec
fstpt
out
cmp
enter
stc
ja
fistl
mov
jb
addr16
testb
lcall
int3
xor
mov
add
adc
dec
sub
pushf
mov
nop
push
mov
sbb
leave
inc
cltd
ljmp
aas
jecxz
xchg
aas
mov
mov
loope
or
leave
insb
cmpsl
out
repnz
test
rcrb
mov
sarb
or
xor
mov
push
or
es
dec
adc
xchg
add
xor
xchg
cmp
jae
test
xlat
inc
cmp
ss
push
mov
lcall
test
fldt
insl
das
aaa
mov
dec
sahf
aaa
pop
adc
push
out
nop
fldl
push
jb
mov
sbb
inc
in
xor
loopne
add
aaa
rclb
cmp
sarl
sbb
sbb
int3
add
out
inc
loop
ret
lahf
lcall
rorl
inc
adcb
push
jns
aas
test
call
mov
jns
push
data16
xchg
or
dec
cld
fldenv
jmp
pop
repz
jne
dec
call
adc
jns
mov
subl
lds
jbe
cmp
sarl
mov
lret
or
nop
iret
clc
imul
mov
testb
ss
or
mov
test
xorl
mov
js
inc
bound
clc
mov
stos
cli
jmp
cmp
sub
mov
inc
scas
clc
popf
mov
pop
ret
enter
int3
cmp
or
cwtl
hlt
xor
fst
pop
cwtl
xchg
jo
fdivl
shr
insb
sbb
mov
add
add
inc
cmpsb
int
or
es
in
dec
xor
inc
inc
sti
fnstsw
into
xchg
mov
jbe
and
fdivl
xchg
mov
fimuls
cmpsl
mov
adc
les
xchg
out
shl
sahf
jne
mov
mov
add
stc
dec
daa
lock
xchg
arpl
pop
sub
addl
and
jne
sbb
cmp
adc
sub
outsb
pop
adc
jecxz
or
ret
fists
adc
sub
inc
in
jb
inc
insb
fs
movsl
jmp
addr16
mov
jg
ljmp
xchg
inc
dec
ljmp
xor
sahf
nop
pop
jae
lods
jne
andb
pop
jno
cs
leave
jns
loop
cmp
push
das
ret
in
into
pop
daa
pop
pop
mov
xor
repz
into
int3
adc
out
add
mov
loop
popf
je
dec
adc
cmpl
pop
mov
and
mov
idivl
pop
imul
sub
push
aad
or
push
test
pop
mov
in
mov
mov
adc
xchg
jmp
dec
inc
inc
pop
jmp
add
iret
sub
loope
dec
testl
aaa
popa
push
push
sub
imul
cmp
andb
add
push
das
cmp
mull
lods
lds
push
dec
jnp
xor
xchg
jne
sbb
ds
test
sbb
lds
or
add
adc
jo
pop
test
idivl
jmp
hlt
mov
push
mov
ja
cmp
or
jmp
aas
lods
cmpsl
push
sub
xchg
xchg
sub
mov
dec
push
filds
outsl
inc
push
mov
aas
fists
mov
fidivs
mov
in
sarl
aad
xchg
sbb
fisttpl
int3
aaa
cli
icebp
xor
mov
aaa
aad
inc
jmp
into
cmp
pop
lret
rcll
sub
fmull
adc
stc
pop
jl
mov
jns
mov
scas
sub
xchg
cmpsb
loop
in
popf
cli
lcall
adc
mov
xor
ss
jnp
lret
push
rolb
xor
hlt
dec
or
push
or
mov
jno
xor
sub
es
fbstp
mov
aad
dec
movsl
out
shll
repnz
inc
mov
push
out
lea
aaa
inc
ret
mov
jne
std
enter
mov
imul
je
jecxz
je
fldt
insl
pop
or
or
sbb
rcl
leave
mov
add
xor
inc
lretw
fdivrs
pop
in
sysret
inc
inc
in
aas
mov
inc
cmc
jns
or
or
scas
outsb
sahf
sar
push
out
and
or
les
cli
int3
inc
pop
sbb
ljmp
loop
adc
je
cltd
iret
inc
call
add
movl
cmp
bound
add
push
jno
xor
or
std
cmp
xchg
fcomip
xor
dec
lods
rep
inc
pop
and
cmpsl
xor
cmpl
int3
mov
add
xor
insl
ret
jno
rcl
insb
repnz
xchg
cmp
xor
dec
hlt
push
and
jl
aaa
pop
pop
mov
dec
adc
ret
scas
loopne
push
mov
inc
ja
ret
pop
and
inc
dec
xlat
ret
sub
push
fs
adc
push
inc
and
xor
aas
daa
add
jecxz
inc
cwtl
jno
add
stos
idivb
inc
pop
popa
scas
into
cmpsb
jb
mov
lds
jbe
add
push
mov
lods
enter
stc
add
pop
rcrb
aaa
sub
inc
fistpl
data16
mov
hlt
pop
incb
adc
dec
ljmp
push
imulb
push
dec
icebp
mov
insb
jns
mov
jo
push
cld
cld
jbe
adc
xchg
jnp
shlb
cmc
cld
leave
mov
xchg
negl
pop
cmp
jg
cmp
pushf
insl
aam
xchg
movsb
sbb
js,pn
shrl
aas
jae
xchg
insl
jb
popf
ret
out
sub
cmpsl
pop
dec
fdivrp
int
mov
add
mov
insl
cwtl
push
int
jp
add
push
cs
cmp
loop
add
cmpl
nop
xchg
mov
outsb
int3
dec
and
cmp
loop
and
fmull
lods
adc
cmp
push
pop
loop
int
adc
aam
adc
push
shrb
sbb
xor
fnstcw
inc
pop
inc
lahf
lcall
mov
jecxz
pop
push
fst
push
mov
out
jmp
mov
sub
jp
or
jbe
dec
mull
inc
std
mov
scas
sbb
ret
jmp
add
sbb
mov
sbb
bnd
fcmovb
cltd
js
adc
pushf
out
push
iret
movl
fnstcw
test
cmp
push
add
lock
insl
xor
repnz
mov
es
mov
out
aad
mov
rol
jp
adc
dec
cld
inc
jle
int
std
sbb
xchg
loop
mov
imul
mov
pushf
pop
pop
sti
popf
xchg
xlat
cmp
fld
jecxz
imul
mov
push
je
lret
pop
loopne,pt
or
or
les
add
xor
mov
test
xor
jle
inc
arpl
call
ret
fdivrl
jne
xchg
aam
jecxz
in
fcompl
dec
inc
mov
adc
lcall
stos
mov
pop
test
outsl
inc
push
jb
adc
scas
and
aam
push
mov
xchg
sub
pop
andb
mov
jge
xchg
imull
push
xchg
loopne
and
lods
test
push
xchg
insl
aaa
cmp
mov
js
xchg
cmp
mov
aam
cltd
testl
mov
test
insl
in
adc
lods
inc
or
mov
cmp
sbb
mov
mov
loope
push
nop
jle
xchg
jo
inc
xor
push
lret
sti
mov
repnz
xchg
andb
or
test
lods
test
jp
test
add
mov
rdtsc
push
loope
cmp
lods
or
xchg
xor
xchg
adcb
sbb
int3
aam
jns
mov
jno
cmp
xor
rcrl
jno
enter
or
sub
testb
ss
or
in
mov
ret
loope
aam
inc
popa
xchg
sub
or
hlt
cmpsl
rcl
push
andl
jmp
sub
loope
push
cmc
orb
lea
pop
cld
mov
dec
popf
mov
fbld
mov
push
cltd
insl
jb
mov
fidivrs
pusha
dec
cmp
xchg
lahf
mov
lcall
ljmp
out
out
data16
cmc
mov
loopne
and
mov
inc
adc
cltd
js
cmp
fs
adc
js
inc
imul
adcl
or
xchg
or
rclb
movsl
mov
gs
lcall
sub
repnz
sbb
mov
mov
mov
and
adc
jo
hlt
aas
mov
sub
int3
xchg
push
lret
or
fsubr
outsb
repz
stos
push
andl
cmc
das
ljmp
xchg
call
cmpsl
stos
fwait
mov
dec
scas
stos
inc
xor
cli
imul
shr
lds
in
fstpl
lea
push
inc
jecxz
loope
pop
testb
outsb
push
add
and
aad
cmp
cmpsb
outsl
fwait
jmp
popf
cwtl
std
inc
xchg
or
cli
inc
fiaddl
adc
nop
test
mov
add
stos
cmp
test
pop
les
test
dec
in
add
sbb
xchg
fisubrs
pop
out
outsb
jnp
xchg
push
je
cmp
add
leave
jb
inc
outsb
iret
into
push
lahf
dec
rcr
daa
sub
push
popf
dec
adc
fnsave
aas
test
fs
mov
push
repz
add
push
cmp
mov
pop
jne
sar
push
sub
jne
adc
jg
or
daa
jg
lock
cmc
outsl
dec
sbb
mov
shll
loope
lahf
adc
jle
push
scas
sbb
popa
movsb
out
xchg
xor
jp
pop
xchg
mov
add
add
sub
sub
add
mov
mov
mov
add
out
sub
ja
pop
nop
and
and
jmp
pop
xchg
dec
incl
sub
arpl
ret
insb
scas
outsl
mov
lods
outsl
shlb
in
sbb
ja
gs
aaa
cmp
ljmp
inc
orb
in
jge
inc
inc
scas
cwtl
std
pop
jnp
jp
idivl
pop
sub
adc
ja
sbb
cmp
mov
mov
inc
and
mov
lods
cmp
call
jge
js
pop
das
gs
nop
aad
jmp
pop
test
push
testl
push
iret
aas
push
mov
test
adc
sub
xor
roll
mov
push
push
sbb
out
pop
mov
mov
dec
lods
sbb
fisttpll
jmp
add
rorl
iret
sub
and
pop
punpcklwd
test
insl
inc
dec
inc
loope
mov
imul
fisubrs
jge
adc
sub
out
gs
popf
pop
das
cltd
xor
lahf
das
in
pop
xor
mov
mov
into
mov
cltd
mov
incb
nop
negb
sbb
aad
and
seta
push
lahf
ret
movsl
mov
cmp
aad
mov
lahf
imul
mov
aad
cmpsb
repz
inc
pop
cmp
or
out
xchg
ja
nop
icebp
xor
and
rol
dec
pusha
dec
sbb
cmpsb
fldcw
jge
sub
jecxz
xor
movsw
sbb
dec
and
lea
lods
enter
mov
or
push
mov
adc
ret
ds
lds
inc
mov
insl
adc
xchg
pop
jno
cwtl
fldlg2
mov
mov
repz
fdivs
aad
and
xor
or
add
or
and
gs
out
stos
je
in
sbb
inc
pop
aad
loop
rolb
cmp
out
test
jo
pop
cmc
es
cmp
mov
jmp
mov
pop
sbbb
xor
in
ds
add
pusha
inc
inc
stos
sbb
mov
ja
xchg
inc
stos
mov
add
sub
pop
xor
adc
arpl
or
ret
mov
jb
jo
aas
sbb
jne
inc
cmp
fisubrl
enter
int
mov
jmp
mov
pop
add
jbe
mov
icebp
call
mov
les
mov
cs
aam
aas
mov
jmp
mov
mov
sub
mov
mov
dec
mov
add
cmp
stc
imul
les
xchg
in
lret
push
sbbb
lods
test
shll
sbb
push
inc
ret
ret
rorb
loop
cmpsl
dec
push
jl
or
clc
or
and
inc
xor
stos
lcall
pop
gs
mov
dec
cmp
xor
mov
sub
mov
jle
das
sub
jb
pop
and
mov
sbb
outsb
nop
outsl
or
or
clc
mov
test
enter
adc
popa
push
cmp
fsubrl
bswap
imul
cmp
dec
sub
jecxz
aaa
dec
push
add
imul
add
cmp
sahf
jae
jmp
mov
xor
test
cli
daa
jnp
push
ja
enter
jns
jno
dec
hlt
jmp
cmpsb
mov
jbe
mov
cli
clc
shll
adc
xchg
mov
out
mov
push
cmp
int
cmp
pusha
push
pop
popf
pop
iret
nop
xchg
pop
gs
sti
fsubs
js
inc
rcll
cmp
xor
and
adc
jge
cli
aaa
sub
sarb
dec
insl
or
lods
dec
sbb
rcrl
mov
cmpsl
faddp
or
lds
sti
mov
inc
push
inc
out
mov
jno
pop
sti
bound
test
loope
into
sbb
in
arpl
push
sbb
pop
lret
add
mov
sub
mov
dec
scas
dec
insb
repz
in
inc
mov
mov
xchg
or
lods
jnp
shll
std
inc
cmpl
inc
push
in
sub
rorl
or
push
mov
xlat
enter
dec
mov
loope,pn
stos
icebp
daa
add
mov
mov
rclb
das
popa
into
inc
add
mov
icebp
sub
enter
mov
out
fadds
cmp
idivb
xchg
sub
rolb
or
mov
mov
je
nop
js
cmpsb
mov
inc
push
jo
jbe
push
rorb
xor
ja
dec
pop
push
fistps
xchg
or
cli
push
sbb
mov
faddl
mov
int
jmp
jle
cltd
pop
stos
inc
cmc
add
mov
mov
ds
repnz
out
jb
mov
stos
xchg
mov
mov
dec
push
es
test
enter
pushf
enter
adc
int
and
jecxz
and
mov
mov
inc
jmp
xor
sub
das
test
rorl
mov
inc
dec
xor
inc
mov
mov
inc
mov
daa
and
inc
imul
or
test
push
scas
or
jecxz
hlt
daa
pusha
inc
push
xchg
loope
inc
sbb
lret
hlt
movsb
sbb
or
lods
inc
in
mov
jns
or
xchg
adc
scas
out
lds
push
sbb
fldt
hlt
mov
outsb
pop
sbb
sahf
cmp
pop
enter
ret
push
cld
adc
or
sbb
movsb
adc
lds
mov
push
fcmovnu
das
mov
cli
lods
jo
rcrb
pop
add
lock
out
sahf
pop
mov
scas
mov
cld
push
and
mov
test
sub
sbb
xchg
test
cltd
mov
ret
xchg
test
pop
adc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
cmp
mov
pop
jl
mov
stos
xor
out
ret
cli
push
outsb
dec
xchg
pusha
jge
dec
add
ret
cmpsb
push
push
lea
outsb
stos
push
lcall
test
mov
push
mov
xor
std
xchg
sub
mov
xchg
aam
xor
mov
ror
and
arpl
fists
test
sub
mov
pop
mov
sub
cmp
lea
push
scas
sub
jp
xor
scas
pop
adc
sti
icebp
xor
jp
mov
cli
sti
cld
inc
mov
fisttps
mov
xchg
ret
and
stc
sub
sub
rcr
pop
or
fisttps
mov
sbb
sbb
aam
mov
sahf
jl
cmp
xor
inc
mov
shll
mov
cmp
shll
push
and
pop
movsb
mov
mov
cmc
push
pop
xchg
and
cltd
xchg
loope
push
dec
jge
add
pop
cmp
mov
shl
pop
ret
pop
insb
xchg
ja
mov
cmp
or
mov
mov
icebp
adc
cli
sub
nop
cmp
inc
xchg
hlt
sarl
leave
es
and
mov
mov
repnz
out
mov
mov
jo
push
and
aam
pop
and
xchg
jbe
lods
and
sti
adc
jnp
hlt
imul
pop
mov
mov
push
inc
sub
and
mov
mov
push
lods
adc
adc
jp
sbbb
les
xlat
dec
orb
sbb
pop
lcall
jbe
aaa
push
and
pop
mov
sub
in
imull
sbb
mov
mov
stos
ficompl
push
pushf
jmp
pop
jnp
push
lods
std
gs
push
push
add
sbb
cmp
clc
fwait
cmc
adc
mov
sub
mov
repz
or
outsl
adc
test
ss
xchg
and
add
outsb
push
sub
push
data16
sub
nop
sub
fcompl
cmc
mov
jle
pop
mov
stc
cld
ss
mov
lods
dec
clc
inc
push
or
adc
sahf
loope
mov
ss
jecxz
stos
jbe
push
push
mov
shlb
dec
sub
mov
fisubrs
pop
mov
psadbw
out
cmp
rorb
and
push
imul
rorl
ret
std
enter
push
inc
xchg
dec
fcoml
push
test
adc
inc
adc
into
out
cli
rorb
add
xchg
sahf
cmp
out
sbb
sub
or
int
inc
stc
add
and
cmp
push
dec
cmp
insl
dec
pop
cmp
xchg
xor
cli
push
scas
sti
jns
dec
cwtl
add
sbb
mov
cmp
and
insb
mov
cwtl
adc
repz
mov
pop
arpl
push
aad
inc
inc
mov
es
inc
out
lock
cmpsb
leave
in
pop
pop
xchg
icebp
inc
jne
mov
and
shl
add
xor
aas
jno
fldt
idivb
push
shl
jle
mov
xlat
ret
mov
jb
mov
rorb
push
and
adc
sub
js
movsl
ss
dec
or
dec
cli
push
icebp
sbb
mov
movsl
sub
cmp
sub
xchg
outsb
lods
cmpsl
ljmp
add
mov
add
gs
lret
popa
push
mov
sti
enter
mov
adc
cmc
mov
call
jbe
cld
sub
sbb
cmp
and
sub
and
push
inc
push
xor
push
or
rcr
cmpl
in
sub
jge
stos
addr16
push
pop
into
mov
imul
sbb
mov
pop
or
mov
dec
mov
mov
xor
inc
adc
mov
test
dec
daa
insb
es
shll
mov
inc
inc
mov
mov
mov
push
mov
xor
inc
aas
lret
mov
je
popf
dec
adc
stc
and
insb
mov
jp
shrl
inc
int3
bound
jo
repz
or
pop
fs
mov
mov
dec
cwtl
nop
mov
jbe
aas
mov
xchg
cmp
xor
les
dec
cwtl
mov
pop
inc
and
je
sub
mov
fdiv
mov
mov
orb
lds
rcl
shll
fwait
cmp
mov
xlat
lret
pop
xlat
add
mov
push
or
sbb
lods
fisubl
cmpl
in
into
out
add
mov
cmc
push
fcmovnb
push
inc
adc
jns
out
test
adc
and
xor
jbe
ss
nop
std
lcall
dec
inc
sbb
inc
dec
push
xchg
dec
mov
dec
rcll
shlb
stc
xchg
mov
je
pop
ss
jne
orl
mov
lds
popa
sbb
dec
loopne
inc
cltd
jnp
fisubs
cli
xor
push
imul
cmpsl
in
mov
sub
outsl
jge
jg
pop
cld
bnd
cmpsb
cmp
scas
cmc
fwait
dec
cmpsl
mov
push
add
adcb
enter
cld
fs
test
jo
fidivrs
mov
mov
les
call
movsb
sub
icebp
sbb
sbb
ss
out
adc
lock
sub
test
sub
mov
jbe
movsl
iret
fistps
push
fcmovnbe
dec
aam
rcrl
stos
sbb
mov
rol
dec
and
pop
xlat
xchg
push
stos
out
mov
scas
je
sbb
push
cmp
push
xchg
cmp
in
inc
int
xchg
imul
outsb
fwait
jo
jp
pop
pop
mov
or
movl
mov
and
sub
fisttpll
dec
nop
pop
inc
xchg
aad
lods
dec
mov
aas
jle
rcrl
dec
xchg
fcoml
insl
mov
lahf
jmp
fdiv
lret
and
stos
int
into
sbb
shll
jnp
push
jae
cmpsl
xor
es
stos
ret
repz
cmpsb
ja
outsl
jge
in
mov
mov
push
mov
daa
mov
or
movsb
and
enter
mov
movsb
xchg
adc
pop
mov
dec
sbb
imul
pop
push
rcrb
xor
xchg
roll
out
cmp
insl
push
lahf
fcoms
sbb
int3
scas
ret
out
scas
cs
mov
mov
cmp
and
outsb
sti
aam
cmc
les
fs
shl
adc
pushw
popa
in
xor
xor
pop
pushf
adc
fcmovnbe
paddsw
in
or
dec
imul
movsl
int3
sarb
imul
mov
clc
jl
mov
int3
cmp
pop
pusha
cs
shll
outsb
add
fwait
and
rclb
ljmp
insb
daa
in
decl
dec
aam
loopne
xorl
in
jns
dec
cli
in
cmp
shlb
or
dec
adc
xor
push
jl
inc
inc
scas
popa
adc
cmp
aam
fldcw
bswap
shll
insl
jae
adc
or
cld
xlat
aaa
cli
sbb
inc
movsb
les
loopne
fbstp
gs
xchg
inc
cmp
sahf
outsb
jecxz
insl
daa
sar
jae
cmp
jns
aaa
bound
and
adc
push
cltd
adc
or
cmpsl
aaa
cmpsb
das
fstl
xor
ret
jl
addr16
dec
add
jp
lcall
shlb
stos
pop
and
dec
pop
leave
mov
lds
popl
in
add
loope
mov
mov
lds
or
xor
rorl
pop
fadds
push
mov
sbb
lcall
in
pop
stos
jecxz
mov
pop
sbb
into
add
call
aad
mov
popl
mov
jp
pop
jbe
popa
sub
dec
daa
cmp
scas
adc
fildll
sub
or
ficoml
and
iret
push
cmp
mov
mov
shrb
nop
add
test
fs
cltd
inc
sti
jnp
in
fisttps
int3
xchg
insb
push
fcompl
scas
pop
icebp
adc
ja
outsl
xchg
shlb
cmp
sbb
mov
cmc
enter
adc
sti
sahf
mov
mov
cmp
and
jecxz
mov
lea
lods
icebp
pop
or
xchg
fimull
fs
or
adc
dec
jnp
mov
dec
lds
pop
sbbl
fwait
popf
dec
lods
or
cmpsb
and
ret
aad
shll
xor
inc
mov
nop
push
and
xor
jns
pop
inc
rcl
lret
push
inc
das
inc
out
aaa
adc
push
mov
pop
sbb
mov
add
push
add
shrb
popa
stos
jnp
push
mov
jle
mov
add
int
jno
jns
call
pop
sti
fldz
xor
repz
mov
add
lock
sub
in
adc
xchg
lcall
and
mov
scas
cltd
inc
cwtl
jae
xor
jl
call
rcr
cmp
inc
inc
js
add
aaa
cmp
scas
mov
pushf
and
sub
xor
dec
jnp
out
imul
cmpsl
xlat
rolb
pop
pop
orb
sub
inc
add
lret
repz
add
dec
int3
test
in
xor
sbb
lret
jecxz
cmp
sbb
mul
mov
push
sarb
mov
ja
xor
lcall
mov
das
push
cmp
movsb
filds
push
daa
out
pop
inc
jae
call
gs
xchg
rcrb
dec
or
andb
add
cmpsb
mov
xor
pop
lds
scas
mov
mov
mov
mov
sbb
xchg
icebp
gs
out
lret
mov
xor
leave
mov
addb
add
add
dec
sbb
xchg
movsb
or
sar
jnp
out
data16
adc
cmp
sbb
pop
adc
mov
push
int
or
and
iret
clc
mov
inc
shr
ret
inc
mov
sbb
jno
sub
push
jecxz
mov
lods
out
or
insb
and
jmp
ljmp
adc
shl
dec
jnp
nopl
and
lcall
ret
dec
nop
jns
pop
ds
loop
je
loope
pop
sbb
cmp
mov
mov
loope
inc
aad
hlt
dec
stos
sub
xor
lret
xchg
loopne
test
rep
cld
repz
test
sub
popf
ss
sub
sbb
ret
pop
add
sub
jmp
sahf
sub
mov
lret
pusha
pop
and
jb
sub
and
sub
add
loop
dec
popf
sbb
sarb
fwait
std
xchg
lds
fwait
les
cmc
fidivl
inc
nop
inc
sub
mov
jle
ss
dec
arpl
jnp
jle
enter
jbe
mov
add
or
into
jl
pop
and
pop
dec
xor
mov
pop
dec
jle
jmp
popa
dec
push
xor
jo
add
adc
add
in
and
jns
xchg
ljmp
cmp
add
adc
gs
gs
mov
loope
cmp
sub
incl
cld
xchg
lods
mov
push
test
adc
add
inc
pop
lahf
jmp
imul
push
jmp
pop
sbb
inc
dec
pushf
adc
dec
sbb
sub
pop
pop
stos
addr16
jp
cmp
sub
in
jg
mov
or
push
push
dec
xor
mov
add
xlat
dec
mov
xor
pop
shll
pushf
shl
inc
mov
in
add
ljmp
mov
scas
push
bswap
mov
pop
fnstenv
mov
imul
mov
xor
imul
sub
add
ja
pop
call
push
daa
push
addr16
pop
rclb
cmp
mov
and
adc
repnz
jecxz
es
sbb
push
cmpb
push
insl
xor
or
movsb
push
outsb
push
fidivrl
inc
mov
push
cmp
mov
cld
in
cmp
push
out
mov
dec
push
data16
push
fisubs
xorb
in
mov
in
sbb
pop
mov
xchg
outsl
stos
push
insb
sbb
push
sbb
das
fistpll
adc
cld
mov
popf
aas
pop
xchg
bound
incl
jl
scas
and
push
decb
rorl
mov
push
inc
sbb
and
mov
add
push
dec
enter
es
outsl
aaa
mov
out
mov
mov
cltd
jbe
mov
fbld
sub
xor
inc
and
mov
es
outsl
inc
iret
jecxz
xor
stos
leave
test
lds
scas
mov
movsb
cmp
mov
inc
push
pusha
adc
cmpb
and
mulb
or
push
push
sub
mul
dec
rol
or
and
dec
adc
cmp
jecxz
pop
push
fildll
decb
mov
lea
jns
and
loopne
out
aad
daa
scas
fsts
inc
xor
ds
jbe
pop
lahf
shl
jp
mov
push
push
lea
loop
add
out
pop
push
idivb
fwait
mov
pop
mov
xor
xor
pusha
arpl
or
mov
xor
arpl
add
fldenv
jnp
adc
sub
into
pop
and
jg
shlb
sahf
popf
mov
push
pushf
or
push
xchg
pop
dec
jns
mov
insl
push
ja
mov
sub
shrl
lods
or
xchg
andl
sub
out
fiadds
pop
test
cmp
sub
out
pop
cltd
out
cwtl
aam
inc
mov
push
sbb
inc
mov
sarl
jns
mov
sbb
dec
jl
mov
xor
roll
arpl
sbb
sbb
sti
cltd
push
imul
xchg
adc
popa
inc
fwait
pushf
mov
outsb
loop
cld
lret
aad
lods
inc
sarb
mov
imul
push
xor
fiaddl
mov
sbb
fidivrl
pop
div
ret
sub
lahf
imulb
jb
add
jae
js
cmc
outsb
mov
outsl
mov
push
fists
xlat
lcall
push
subb
repz
addb
gs
inc
fistpl
or
adc
adc
rep
mov
cmc
mov
sarl
shlb
mov
stc
test
jns
in
jge
inc
xlat
sqrtps
xor
sub
loope
sbb
pcmpgtb
mov
test
testl
ja
lods
cmp
cmp
mov
mov
in
dec
aaa
sub
and
xchg
mov
jae
pop
pop
ftst
xlat
rcrb
shl
sub
mov
jb
test
jle
pop
faddl
cmp
sub
or
hlt
inc
or
mov
pop
std
xchg
lock
xchg
in
sub
stos
mov
lahf
jmp
arpl
push
fnstenv
mov
mov
je
addr16
shl
int
xchg
lret
jmp
dec
mov
ljmp
jp
adc
cs
sub
mov
push
mov
dec
lea
push
test
lea
and
out
rcrl
sub
push
rorb
in
jbe
push
cs
push
test
mov
scas
mov
sbb
aam
addl
inc
mov
enter
mov
rcrl
cmc
das
mov
imul
aaa
push
mov
lcall
lods
pusha
jb
and
add
mov
jno
lea
stc
add
mov
push
jb
aad
or
or
or
in
jne
mov
sbb
notl
and
js
jl
jmp
dec
sbb
sub
mov
data16
shll
xlat
xchg
ss
iret
fsubrl
mov
scas
pop
movsb
shll
movb
or
xor
nop
gs
cmp
jb
mov
jo
cmp
aas
sbb
hlt
jmp
adc
mov
inc
xor
pop
test
cli
pushf
sbb
xchg
lock
and
mov
lret
out
rorl
sbb
inc
scas
in
in
adcb
in
test
mov
or
xchg
mov
dec
sbb
cltd
add
fdivs
test
arpl
mov
inc
scas
ja
dec
add
cmpsb
xor
cmpb
jle
test
in
sub
inc
xchg
js
inc
adc
mov
push
ror
jg
sbb
jbe
std
mov
divb
mov
cmc
add
xor
adc
dec
fldenv
cmpsb
lret
cmp
pop
mov
and
int3
xchg
mov
shlb
xchg
xchg
notb
or
sbb
call
inc
icebp
mov
pop
push
push
inc
push
jb
mov
daa
mov
inc
cmp
shll
and
int3
js
scas
into
daa
filds
cmc
in
push
mov
mov
push
ficoml
jns
hlt
inc
out
daa
aaa
pop
cwtl
xchg
out
jmp
mov
out
push
scas
cmp
push
test
push
fsubrl
js
push
fcompl
stc
loopne
ja
data16
pop
stc
out
jg
push
xchg
insl
dec
add
pop
jo
fs
xchg
inc
sbb
xor
mov
jmp
mov
fidivs
insb
dec
push
push
mov
jge
jne
xor
pop
push
mov
sbb
aam
or
popa
subb
lea
pop
aam
aas
inc
xlat
push
popf
rorl
ds
mov
ret
inc
dec
cld
sub
int
lahf
or
loop
cmpsl
out
je
jnp
sbb
out
enter
test
pop
pop
adc
xchg
inc
lock
outsl
lods
test
adc
lock
fxtract
iret
sub
rcll
sbb
dec
xlat
xchg
imul
int
cld
popf
inc
imul
dec
pop
xor
sbb
inc
mov
fisttpll
pop
movl
mov
adc
mov
pop
repz
mov
add
jnp
cmp
ds
fiadds
outsb
mov
jno
mov
movsl
test
dec
lock
dec
movsl
mov
out
rorl
lahf
sub
repnz
mov
mov
mov
mov
sarl
xchg
dec
cmp
mov
xchg
dec
loope
push
sbb
stos
stos
nop
mov
mov
sqrtps
sub
jg
fsub
pop
xor
cmc
fimuls
add
or
xor
pop
mov
daa
sahf
fsubs
mov
mov
inc
out
data16
cld
nop
fsubl
mov
in
adc
or
mov
mov
nop
push
push
xchg
add
sahf
ds
or
xchg
lods
xor
lahf
sub
movsb
pop
and
insl
imul
fcom
jl
es
jp
mov
and
push
mov
mov
pop
push
lea
nop
out
mov
fcomps
jecxz
adc
push
fmull
mov
or
rcr
xchg
mov
les
lods
xchg
shlb
jae
mov
call
push
cmp
test
out
mov
jnp
repz
jle
nop
sub
inc
mov
repz
std
push
xchg
jp
inc
sahf
pop
js
jne
movsl
mov
aad
xchg
cwtl
std
mov
orl
insb
pop
mov
fadd
fisttps
pop
arpl
and
lds
jne
gs
add
fdivr
push
ret
out
push
data16
pop
rorb
out
push
gs
pop
or
adcb
add
adc
mov
or
and
into
mov
adc
sub
xor
imul
xlat
push
das
jno
push
mov
and
dec
push
jl
mov
sbb
cmpsl
test
call
lods
mov
outsb
cmc
jecxz
mov
xchg
pop
adc
add
xlat
jne
xor
test
inc
adc
cmpsl
iret
cmp
push
jge
and
mov
bound
popf
lds
ret
or
stos
or
cmp
daa
pushf
leave
adc
adc
cmp
insb
stos
xchg
mov
gs
out
sub
andnps
dec
dec
int3
mov
xor
xchg
push
int3
cmpsb
pushf
test
icebp
std
loopne
inc
les
sbb
pusha
mov
xorl
sbb
movsb
int
or
cwtl
push
dec
fsubl
and
fisttps
fiaddl
je
movsl
jp
pop
pop
lods
jecxz
iret
ss
out
adc
je
fwait
addl
cmp
sarb
cli
sbb
or
fwait
mov
popf
std
mov
push
push
adc
arpl
movb
push
out
pop
cwtl
imul
adcl
fiaddl
inc
mov
arpl
rorl
push
out
fbstp
faddp
mov
pop
xor
imul
add
dec
scas
inc
xchg
aaa
aad
lret
adc
lret
jle
fidivrs
inc
push
sbb
nop
pop
mov
cmp
ret
mov
cmpsb
call
movsb
push
fimull
sub
xchg
adc
ds
das
lret
sbb
js
and
loop
leave
xchg
add
out
jecxz
sub
cltd
pop
jno
xchg
pop
hlt
adc
push
xor
lock
add
leave
out
push
std
jns
leave
xchg
mov
imul
jbe
aaa
movsl
test
pop
push
add
shlb
xor
push
sti
and
jnp
imul
les
jnp
cmp
push
or
pushf
rcll
add
add
pop
scas
rorb
movsb
sarb
flds
adc
ret
push
mov
and
in
and
jno
into
sbb
jbe
and
sbb
aas
mov
pop
xchg
nop
fwait
daa
cltd
add
lods
cmp
dec
icebp
sbb
int3
adc
mov
aaa
jg
dec
inc
lods
and
mov
leave
aaa
or
loope
loopne
rolb
adc
aad
sub
loope
pop
iret
or
pop
addr16
imul
xchg
mov
lcall
mov
ss
adc
jno
fdivr
lods
movsl
push
test
int3
pop
cmp
cmp
sub
inc
xchg
movsl
dec
pop
into
in
mov
dec
cmp
jbe
aas
incb
fcomi
sub
lea
mov
and
jl
sbb
outsl
xchg
and
hlt
es
add
pop
push
inc
dec
adc
push
dec
xchg
fisubrs
popa
push
jbe
or
cmp
add
push
mov
addb
loop
jne
lret
dec
and
xchg
js
into
idivl
pop
push
cmp
mov
mov
aad
mov
sub
std
nop
push
lcall
add
pop
jne
mov
stc
mov
int
inc
popa
push
push
pusha
adc
aam
jnp
xchg
hlt
jno
nop
mov
pop
mov
mov
test
xor
sub
call
mov
xchg
ficompl
fs
push
daa
push
mov
insl
stos
idivb
lock
mov
inc
ljmp
xchg
push
xor
clc
xor
cld
lds
mov
div
or
shll
push
js
das
mov
mov
xor
in
push
int
ret
jmp
mov
push
lock
sahf
shlb
jecxz
and
mov
dec
mov
aam
and
and
jg
arpl
iret
or
sub
xchg
and
fdivrl
pop
dec
xlat
scas
rorl
aad
scas
mov
insb
jge
push
push
dec
stos
in
stc
inc
popl
jp
push
cmp
inc
dec
ret
adc
xor
inc
mov
imul
jo
adc
cmp
addb
negl
jns
inc
cltd
jge
sub
mov
cmp
jmp
mov
psubusb
fwait
jmp
shrb
mov
bound
sub
adc
add
std
jno
inc
jecxz
lds
data16
ja
xchg
shl
and
cmp
push
call
xor
lcall
add
pause
jno
mov
sahf
movsl
int
or
not
fwait
int
sahf
enter
sbb
jp
pop
rolb
pop
fimull
lock
push
or
dec
pop
push
sahf
or
out
push
xchg
xor
outsl
or
out
sahf
inc
movsl
jnp
ljmp
in
lods
mov
call
add
lahf
icebp
push
pop
lods
insb
xor
lret
daa
pop
das
sub
xchg
sbb
dec
pusha
or
lcall
pushf
das
scas
addr16
mov
scas
lret
sub
out
insl
pop
out
notl
stos
mov
rorl
inc
pop
xlat
push
outsb
lahf
cli
push
out
adc
sub
outsb
cli
cmpsb
je
xchg
xchg
movsl
jne
stc
sbb
ja
add
add
js
push
jns
jmp
mov
or
movsb
mov
jge
pop
mov
jg
push
or
add
xor
dec
repnz
push
jp
xor
cmp
xchg
xchg
addr16
aas
mov
jge
adc
rcr
frstor
adc
xlat
jl
mov
dec
lea
in
movsl
movsl
dec
cwtl
pop
pop
imul
cmp
dec
js
dec
adc
pop
popf
jecxz
into
mov
sub
xor
mov
lds
mov
add
push
xor
cmp
mov
sub
test
mov
adc
sub
pop
or
imul
scas
sub
cmp
enter
stos
mov
dec
ret
add
and
call
or
popl
js
and
js
std
sbb
lahf
insl
or
ds
xorb
out
in
leave
push
dec
inc
repnz
insl
pop
dec
daa
mov
rcl
cmp
das
pusha
repz
lea
pop
or
and
sbb
pushf
outsb
lahf
inc
pop
loopne
cli
or
xchg
cli
ror
pop
mov
fstps
mov
pop
inc
jae
scas
dec
sbb
out
aaa
aad
out
insb
cli
fcompl
lahf
gs
mov
cld
repz
insb
rcl
lock
push
addr16
ss
jne
xchg
mov
add
bound
icebp
add
jb
dec
push
dec
out
push
mov
or
xchg
inc
or
push
cli
fsubl
mov
or
push
lods
das
mov
xchg
rcr
pop
ficomps
cmp
mov
push
je
insb
loopne
dec
lret
mov
jecxz
add
popa
or
xor
mov
scas
cmp
cmp
adcb
aad
add
pop
jg
push
xor
cs
add
fisubrl
xor
xchg
jle
mov
jge
test
std
shll
test
nop
sub
jle
scas
shll
mov
mov
out
sbb
imul
cmp
mov
insb
cld
sub
pop
push
movsb
mov
mov
push
jecxz
das
jns
mov
sub
xor
pop
pop
fs
test
pop
sub
fwait
repz
mov
dec
cwtl
sbbb
mov
in
mov
xchg
mov
test
jb
enter
shr
mov
sahf
enter
push
jmp
or
mov
movq
fs
xor
das
inc
add
or
push
or
push
jge
je
mov
or
addr16
xor
sbb
lcall
int3
cmp
popf
lret
dec
push
cmp
out
leave
lods
sbb
pop
pop
xor
stc
int3
jns
insl
jg
repz
mov
popf
cwtl
add
dec
cli
mov
aam
movsl
inc
pop
jno
xchg
cmp
loope
add
add
icebp
push
ret
out
dec
push
sub
xlat
cmp
jbe
popf
mov
adc
sbb
mov
popf
mov
cmp
lret
cmpb
outsl
jecxz
shr
aam
lods
jb
mov
stc
inc
jae
dec
lods
cld
jnp
insb
push
ret
imulb
adc
and
repnz
push
test
lahf
xchg
ds
pop
mov
aaa
dec
imul
fiadds
inc
cmpsl
or
jns
leave
push
jne
std
sub
test
push
iret
mov
addr16
mov
movl
mov
loopne
and
push
movsl
mov
into
sbb
subl
fcompl
bound
sbb
leave
je
sbb
out
outsb
scas
aaa
outsl
xor
jg
pop
adc
cltd
ret
jne
in
pop
ja
push
lods
push
fldcw
subb
in
xchg
push
aam
sub
cmpsl
jmp
pop
movsl
mov
fcmovu
aas
mov
movsl
std
or
jbe
nop
popa
pop
xchg
out
dec
sbb
ds
lcall
ja
addr16
in
stc
mov
cld
out
jle
sbb
and
add
incl
jb
dec
mov
adc
in
jb
pop
or
inc
xor
sti
dec
add
shr
lea
out
push
lahf
test
mov
data16
mov
mov
lock
xchg
jo
test
add
mov
inc
jmp
ss
fimull
out
pusha
sub
inc
push
sbb
adc
sub
aam
push
dec
mov
xchg
push
inc
push
sub
xchg
insl
jae
adc
jno
cmp
push
adc
sahf
dec
inc
xchg
and
sub
aaa
add
mov
jne
add
push
decl
fs
das
lock
push
insb
loope
push
sub
mov
xchg
jns
or
push
imul
js
clts
dec
dec
or
or
cltd
or
push
aad
jle
test
pop
push
cmp
loopne
jmp
shlb
out
imul
test
fstl
mov
cli
mov
lock
inc
jmp
xor
andl
jl
sbb
ror
test
lret
popa
lds
stos
shl
or
in
jmp
loopne
roll
hlt
push
leave
lods
outsl
int
clc
inc
out
and
fwait
xchg
xor
inc
xor
les
call
jmp
mov
mov
nop
loope
mov
xor
xchg
mov
mov
cli
jnp
push
xchg
adc
mov
data16
daa
cmp
inc
fcomp
dec
mov
xchg
andl
andb
mov
jno
enter
rol
jb
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
xor
arpl
inc
pop
jl
cmp
jg
test
movsl
xlat
jbe
adc
int
jp
fucom
mov
testb
pop
gs
mov
insw
jmp
ja
dec
les
xchg
sub
icebp
sbb
les
subl
xor
mov
arpl
ja
ret
out
xor
shl
popf
nop
inc
lret
xlat
cltd
mov
xor
xchg
sbb
dec
mov
mov
ret
es
cmc
xchg
js
jns
add
xchg
sbb
inc
adcl
mov
in
leave
pop
shr
cli
cmc
lods
push
mov
aaa
jge
shl
jae
xchg
pop
jg
aas
dec
mov
jne
sub
jl
mov
lock
xlat
push
jb
xor
sub
xor
stos
ret
xchg
loopne
inc
and
in
cmp
jnp
mov
bound
into
mov
cmpsl
out
mov
dec
imul
cmc
cltd
sbb
inc
scas
lods
xchg
mov
divl
movsl
push
dec
stos
xchg
pop
popf
mov
push
xor
inc
sub
push
fistl
xchg
xor
and
mov
shl
or
dec
sti
scas
pop
rcrl
or
mov
jne
outsl
push
std
inc
sub
sbb
or
sub
mov
mov
int3
repnz
testl
movb
push
shlb
call
imul
pop
mov
enter
dec
popf
jne
push
add
xchg
pop
jle
fs
mov
add
or
pop
xchg
pop
pop
fistps
iret
pop
aaa
mov
mov
push
sub
aam
sahf
lahf
mov
pop
sti
jno
outsl
aad
pushf
cmpsl
aas
cs
jb
sbbb
pop
lcall
dec
imul
mov
lahf
push
push
cmp
imul
jge
mov
and
in
xchg
jl
jns
and
or
xor
out
mov
lds
pushw
insb
inc
mov
pop
arpl
push
inc
mov
mov
xor
xor
xchg
ss
scas
insl
rol
adc
push
cli
jne
add
fbstp
loopne
push
xor
pop
cmpsb
imulb
sahf
pop
cmc
sub
cmp
sbb
dec
lds
aad
inc
sub
jae
fistpll
adc
inc
sub
loop
mov
pop
push
arpl
push
xlat
jbe
nop
push
or
std
out
fwait
or
and
and
outsb
jl
push
pop
neg
xchg
push
es
cmp
push
mov
fwait
je
fisttpll
psubusw
out
shlb
sbb
jl
es
arpl
dec
dec
lea
lret
or
leave
push
and
jne
repz
push
daa
and
ds
xor
pop
mov
lret
pop
cmp
jno
enter
cli
into
push
cmp
xchg
pop
add
fldenv
subl
inc
repz
or
mov
jb
cmp
adc
cwtl
adc
add
rorl
enter
mov
xchg
je
cmpsb
fisubs
jge
xchg
inc
call
mov
fidivrl
dec
mov
nop
fsubrs
mov
add
call
and
mov
shlb
sub
imul
mov
outsb
ds
push
loopne
sarb
jge
rolb
leave
pop
shrb
pop
test
pop
mov
js
in
fstpt
sub
inc
jnp
add
xchg
mov
pop
mov
out
dec
jg
orb
push
ja
push
jl,pn
add
mov
cmpsb
imul
outsb
jo
mov
lret
mov
aaa
xorl
push
jg
cmpsl
and
fcoml
mov
je
mov
push
pop
arpl
xor
or
nop
dec
cld
ja
xor
cmc
xchg
jecxz
mov
hlt
or
pop
stos
sbb
mov
pop
cmp
push
adc
call
ret
sti
push
dec
int
xchg
add
out
mov
add
mov
lcall
sub
in
xor
push
add
cmp
jle
in
or
ja
leave
push
or
aam
push
out
pushf
sahf
xchg
xor
add
popa
popf
testl
pop
mov
imul
das
daa
add
jl
xor
pop
mov
sbb
imul
or
inc
mov
out
mov
mov
std
jp
sti
pop
mov
pop
xchg
mov
ja
cmp
push
add
ja
xchg
dec
into
scas
jg
frstor
mov
test
sub
and
push
rcl
subl
jno
and
in
pop
lcall
jl
jmp
mov
out
mov
stos
shrl
dec
mov
idiv
mov
add
outsl
enter
sub
jg
gs
sbb
push
adc
xchg
xchg
xchg
in
dec
push
jbe
es
inc
push
xchg
jle
shrl
out
stos
ret
nop
mov
shlb
int
or
pop
adc
pop
ss
test
lods
and
es
pop
adc
sbb
je
scas
lret
push
shll
xor
pop
out
jns
add
adc
mov
icebp
fucom
stc
sbb
push
iret
inc
or
enter
jnp
xchg
subl
dec
jae
shlb
mov
push
sub
ljmp
sub
sbb
xchg
mov
push
pop
fcoms
sbb
imul
mov
or
xchg
xchg
cmp
mov
ds
xlat
cmp
leave
add
in
dec
pushf
repz
push
mov
xchg
cld
pop
leave
mov
lcall
push
pop
test
jb
and
and
dec
vpsubsb
adc
push
xor
inc
pop
loope
arpl
cmp
sahf
dec
negb
pop
lret
jbe
inc
mov
imulb
mov
fs
lods
fldt
arpl
cmp
sub
jno
mov
inc
push
or
ret
test
xchg
enter
and
lods
cli
in
inc
les
inc
mov
mov
add
pop
test
jbe
stc
add
sub
bound
and
and
or
pop
rcrl
dec
push
sub
dec
outsb
jle
jl
cmp
pop
ja
shll
jmp
and
and
add
lret
aad
xchg
subb
pop
jl
mov
rolb
jo
outsb
inc
and
or
sub
xlat
and
xchg
movsb
pop
pop
push
push
jg
dec
inc
and
adc
push
nop
sbb
popf
test
inc
mov
push
xchg
add
loopne
aam
add
mov
and
mov
adc
and
sub
sbb
bound
pop
mov
sti
and
and
pop
imul
inc
jbe
pop
repz
pop
add
dec
inc
inc
js
ja
imul
and
repz
into
fwait
xor
mov
cmp
hlt
sub
repz
sub
pushl
push
inc
icebp
aam
in
cld
and
ljmp
dec
insl
scas
mov
push
out
cmpl
push
jnp
mov
js
push
scas
lods
xor
xlat
inc
repz
test
xchg
cmpl
mov
and
testl
mov
xchg
jle
pop
aad
ds
mov
pop
and
jecxz
push
pop
sbb
lock
or
mov
or
fidivs
rclb
push
jnp
cmp
popa
lods
hlt
cmovle
pop
es
inc
hlt
iret
loop
or
jne
xchg
inc
icebp
lods
mov
add
ljmp
mov
lcall
add
mov
js
and
jne
imul
mov
xor
pop
push
movsl
adc
cltd
cmp
pop
sahf
xchg
adc
push
insb
shr
and
cmp
pop
mov
popa
adc
lcall
sub
lea
repz
mov
cmp
ja
ds
jg
push
and
pop
push
push
xchg
in
or
out
push
xchg
jbe
or
pop
cmp
inc
cmp
or
cmp
cld
xor
push
sahf
mov
repz
dec
lods
fucomi
sub
add
pop
jp
lods
fsubs
cmp
sub
sbb
jnp
and
sub
test
xor
mov
in
jne
popf
jge
jb
iret
insl
push
jae
imul
rolb
imul
inc
jmp
icebp
pop
pusha
and
and
xchg
loope
mov
lret
and
jo
xor
xchg
add
cmp
into
mov
mov
mov
sti
push
shlb
fimull
xor
aaa
neg
inc
aad
lret
xchg
test
pop
push
loopne
cs
push
xchg
sub
popf
out
movsl
mov
in
jl
xchg
jns
and
nop
pusha
sbb
dec
and
mov
sub
movsb
mov
cmp
mov
sbb
out
jp
cwtl
xchg
shr
jnp
call
arpl
xor
pop
mov
insl
ficompl
push
jg
mov
add
je
cmp
push
push
mov
jb
outsb
jge
aam
mov
clc
cltd
incl
push
mov
out
das
mov
rcl
inc
stos
loop
clc
leave
xchg
sbb
lea
dec
adc
add
divl
xorb
mov
dec
adc
mov
push
push
arpl
js
fnstsw
out
lods
cld
xchg
push
and
cwtl
daa
inc
cmovge
std
pop
push
xchg
cmp
cs
push
xor
cmp
mov
pop
in
and
adc
pop
rcll
mov
nop
mov
shrl
aas
in
add
or
ret
lahf
call
dec
add
push
or
cmc
out
cmpb
mov
push
sbb
jge
push
aam
sbb
cmp
jp
repz
and
loope
add
xor
rol
fsubrp
movl
mov
dec
dec
data16
mov
mov
mov
loope
div
test
xchg
in
jle
sbb
stos
cmp
insl
dec
lahf
xchg
aaa
pusha
xchg
repz
or
mov
cmc
jae
std
sbb
mov
in
jno
and
add
test
mov
mov
fidivl
rcll
adc
or
les
out
jp
cmpsb
xchg
sub
cltd
push
dec
xor
andl
mov
xor
ja
iret
lcall
out
into
xor
cmp
out
xchg
mov
pop
sysret
jmp
push
pop
movsl
shl
stos
cs
xor
sti
out
loopne
dec
xchg
xorl
xchg
xchg
xchg
stos
pushf
idivl
lret
mov
lcall
call
xor
std
push
ljmp
adc
mov
stos
les
pop
pop
fsubrl
les
inc
mov
or
divb
pop
jno
rcrb
adc
inc
and
and
jb
pop
add
mov
sahf
mov
cmc
cmp
adc
push
and
into
cmpsb
xor
int
adc
stos
out
into
mov
cmpsl
cmp
and
adc
jecxz
or
mov
repz
push
out
movsb
inc
xor
cmp
pusha
ret
add
and
mov
loope
sbb
sub
mov
les
xchg
and
mov
sbb
mov
jae
pop
lods
add
inc
jmp
in
test
xchg
mov
mov
movsb
xchg
or
xor
add
cmp
lods
fimuls
fcoms
mov
cltd
popa
ret
adc
xchg
add
push
mov
das
push
pop
jns
scas
mov
mov
loopne
push
mov
in
mov
shr
and
mov
int3
jecxz
aas
stc
add
mov
testb
movsl
push
or
icebp
insb
xchg
cmpsb
mov
xor
loop
test
inc
cmp
sub
push
and
icebp
add
push
lods
sbb
stc
cwtl
ja
ret
cmp
push
jp
cmp
inc
push
shl
das
in
mov
testb
addr16
or
push
xor
outsb
stc
lds
scas
bound
push
inc
adc
test
out
cmp
and
mov
push
pop
daa
add
data16
call
push
push
and
cmp
xchg
nop
push
mov
and
xor
hlt
repnz
xchg
and
les
fwait
jmp
dec
add
dec
mov
rcll
sub
jg
fbld
clc
push
cmc
add
xor
cmc
fs
adc
outsb
fsubs
inc
popa
outsl
or
mov
aas
scas
scas
sub
xor
mov
xchg
out
jmp
or
xchg
pop
xlat
adc
pop
out
fidivrl
lret
xor
dec
orb
sahf
and
sti
mov
cmp
clc
push
dec
nop
adc
fsts
iret
ret
mov
leave
int
xlat
mov
pop
inc
into
ss
mov
xchg
pop
movsl
and
ss
add
rcrb
xor
or
dec
add
ds
pop
dec
mov
jno
inc
inc
dec
les
addr16
pop
push
mov
add
scas
sub
mov
dec
icebp
push
mov
pop
cmp
adc
aaa
addl
sbb
mov
mov
mov
es
xchg
cmc
stc
push
mov
cs
subb
mov
push
in
cwtl
das
jns
mov
cli
in
aam
adc
push
dec
dec
insl
mov
loope
iret
orb
jne
and
fldcw
dec
adc
iret
push
jecxz
sahf
cmp
xor
jns
push
sub
lcall
lcall
pop
mov
fsubrp
mov
ucomiss
add
dec
lods
mov
jnp
cld
fnstenv
out
sbb
dec
aaa
mov
mov
and
push
inc
stc
ds
mov
jp
cwtl
mov
and
xchg
jne
add
lcall
mov
enter
mov
add
ror
sbb
inc
leave
pushf
adc
test
fidivrl
mov
lea
call
push
jno
out
scas
xchg
dec
icebp
jmp
push
adc
sbb
pop
add
push
jb
out
xor
mov
mov
add
daa
in
push
insb
sub
push
lret
mov
les
push
cmc
aaa
xor
icebp
mov
nop
mov
push
fs
aad
inc
movsl
into
mov
sti
fisubrs
dec
rorb
xor
push
cld
jns
xor
mov
pop
push
xchg
add
mov
mov
pop
cli
xchg
addl
push
cmp
fsubs
mov
jno
fstp
add
mov
jo
div
mov
mov
cmp
cmp
addb
out
aaa
pop
pusha
xlat
lcall
sbb
fwait
adc
gs
inc
std
mov
sub
jne
xchg
sbbb
lods
in
and
lock
in
xchg
mov
test
test
repnz
and
mov
push
lret
orb
not
sbb
pop
xchg
xchg
icebp
loope
push
push
jbe
cwtl
adcl
mov
das
orb
cmpsb
pop
imul
sahf
clc
pmaddwd
mov
xchg
lock
jne
push
ss
aam
sub
hlt
aam
iret
add
cmp
add
in
mov
mov
push
inc
call
pop
hlt
rcll
aad
or
iret
cli
ret
mov
add
jno
cmc
shll
or
pop
test
int
in
sub
fisubl
and
fxch
push
fsts
jb
popf
push
jp
lcall
add
scas
jg
ret
or
icebp
adc
fistpl
sub
not
int
ja
mov
xchg
jns
aas
shrb
dec
in
repz
xchg
or
pop
rcrb
jns
fnsave
sub
ss
sbb
je
push
mov
xchg
enter
jl
jg
push
lock
pusha
mov
cli
in
pop
imul
add
into
mov
or
cltd
sub
scas
leave
icebp
sahf
adc
cmp
mov
sarl
sbb
jle
das
jns
push
adc
jo
out
cmp
test
leave
test
jae
or
push
fistpl
lahf
mov
xchg
repnz
invlpg
roll
loope
fdivl
mov
frstor
cs
adc
and
mov
push
inc
imul
ja
sysexit
mov
cmp
pop
mov
je
adcb
inc
add
push
dec
dec
dec
repnz
cmc
jns
mov
mov
jo
sub
xor
mov
in
or
jae
jg
push
cmc
xchg
cmpsl
mov
out
popl
xchg
aaa
push
fs
sbb
sahf
adc
mov
add
incb
cmp
clc
fdivl
pop
jmp
lret
pop
push
repz
pop
dec
and
fnstenv
adc
jg
cmp
fnstsw
repz
xor
imul
xchg
pop
popf
jmp
mov
pop
add
insl
ljmp
movsl
test
cwtl
push
dec
cs
mov
adc
add
int
shrb
mov
insb
xchg
jnp
xchg
subl
mov
xlat
ret
fstl
repz
or
fimuls
decb
adc
mov
jl
arpl
mov
push
ja
rcrl
jbe
xorb
or
mov
fidivrl
xor
test
mov
out
je
inc
fsts
mov
cmp
movsl
dec
iret
popa
adc
popa
std
and
pop
or
mov
or
out
and
pop
mov
aaa
in
fdivp
stos
inc
sahf
mov
sbb
imul
inc
shlb
ss
popa
pop
aam
and
enter
pop
lcall
out
es
std
divl
dec
hlt
push
cmp
sbb
pushf
xor
pop
xchg
enter
sbbl
aam
pop
aas
aad
jnp
lock
sub
mov
adcb
push
adc
push
popl
imul
adc
cmc
sub
push
xchg
scas
pusha
and
out
cltd
js
jp
cmp
data16
xor
and
js
notb
rorb
sbbl
mov
imul
mov
mov
sub
xor
dec
pushf
ljmp
dec
sbb
mov
test
stos
sub
into
sbb
jne
push
dec
bound
cltd
lods
popa
lcall
mov
das
lock
lahf
incb
imul
push
in
inc
and
test
fucomi
jecxz
fidivl
flds
cld
shl
mov
xchg
mov
stos
xor
ret
or
dec
insb
adc
ljmp
mov
sarb
ds
push
cwtl
jae
outsl
jecxz
mov
insb
cld
fisubl
sbb
movsl
ss
or
mov
lods
cld
lcall
nop
insl
in
dec
imul
dec
mov
cmp
leave
ret
pop
sub
mov
dec
mov
into
fists
push
and
fdivrs
jmp
in
in
xor
clc
xlat
loopne
sub
sub
xor
mov
lret
icebp
loop
mov
insl
jecxz
sbb
xorl
aaa
fldcw
movsb
mov
push
mov
sahf
pop
sub
outsl
out
pop
dec
into
fdivrl
inc
fnclex
jne
mov
rolb
push
mulb
lahf
push
jge
mov
xor
cmc
repz
adc
in
cmp
add
sub
das
pop
iret
movsl
pop
dec
imul
sbb
enter
dec
cmc
pop
mov
jne
iret
and
push
mov
stc
outsb
xor
xchg
lret
xchg
outsl
cmp
insb
rcrl
out
aas
stc
push
inc
fsubp
sbb
loope
xchg
and
xor
or
lcall
push
xorb
dec
or
lahf
pop
sub
push
fsubrl
loope
insb
loop
notl
adc
sub
add
or
and
jg
in
insl
jae
adc
dec
into
pop
xor
scas
jge
js
push
outsb
sbb
xor
outsb
out
mov
aad
movsb
cmp
sbb
sub
inc
cld
cmpsl
test
sahf
cmc
sub
cmp
lods
push
mov
bound
xlat
mov
dec
adc
or
aam
fs
xchg
inc
ffreep
xchg
mov
add
pop
jge
xchg
cwtl
nop
out
test
lret
mov
cmp
jmp
jle
xor
mov
scas
outsl
mov
ds
cmp
xor
cmp
fistpl
xchg
and
int3
jo
add
cmc
push
mov
cmp
cmp
add
dec
jno
and
out
jb
lret
push
loope
fidivrl
arpl
cmp
jmp
test
out
push
fstps
lret
sbb
push
jmp
adc
jg
hlt
addr16
mov
or
js
lret
flds
std
sbb
cmp
or
jnp
mov
jns
jecxz
mov
xchg
adc
cld
outsl
in
sub
fcomps
mov
imul
cmpsb
fistpl
cwtl
stos
cmpsb
mov
jmp
stos
xor
pop
inc
xchg
xchg
data16
xor
xor
xchg
lret
lret
in
lock
std
mov
subl
jo
dec
or
cld
dec
adc
popa
sti
shll
shlb
in
pushf
test
push
in
pop
add
xchg
fnsave
cmc
int3
mov
or
inc
mov
sbb
mov
lahf
adc
sahf
jecxz
sub
pushf
xor
popf
dec
repnz
lahf
push
dec
sbb
inc
mov
mov
mov
xor
pop
jl
pop
lcall
in
mull
sahf
scas
int3
inc
lret
rorl
mov
lret
stc
lahf
cwtl
xchg
lea
fisubrs
jecxz
push
pslld
xchg
or
out
enter
adc
jae
add
and
jno
addl
mov
add
pushf
mov
fsubl
dec
sub
mov
outsb
inc
mov
fs
sub
or
xchg
ja
xor
packuswb
or
inc
inc
cwtl
inc
xchg
mov
sarl
push
dec
nop
insb
and
mov
and
xor
lods
int
addr16
and
sbb
outsb
loop
cmc
add
rol
shl
andb
cmp
jnp
movsb
sub
rorb
lret
arpl
xchg
xchg
leave
mov
icebp
push
imul
jnp
or
imul
cmp
scas
gs
jmp
mov
push
popa
push
mov
hlt
jg
frstor
sbb
inc
outsb
sbb
inc
xor
xor
cmp
std
stc
sbb
shrb
cwtl
jne
repz
add
out
dec
mov
popa
inc
fcomp
and
inc
xchg
adc
pop
inc
lds
push
lahf
jl
sbb
mov
mov
adc
or
subl
inc
outsb
lret
sub
add
pop
sub
mov
pop
dec
movsl
jno
ljmp
je
ret
in
aaa
xchg
or
les
mov
mov
das
call
jbe
imul
xchg
pop
out
lret
adc
mov
mov
and
jp
in
push
lods
fcmovnb
gs
pop
inc
movsb
jmp
stc
xor
or
je
es
test
mov
orb
xchg
mov
cmp
or
mov
mov
lock
icebp
mov
ja
fists
mov
or
mov
fldt
and
in
mov
int
mov
icebp
and
rclb
mov
not
mov
mov
pop
inc
adc
adc
mov
pop
push
ja
lcall
test
mov
das
rcl
cmp
mov
in
das
push
fwait
inc
push
fs
cwtl
and
push
add
test
sbb
cmpsb
adc
aaa
add
push
mov
sahf
xchg
sub
arpl
imul
addr16
push
sub
mov
and
xchg
in
and
fdivl
adc
sti
mov
fisubrl
call
lcall
mov
in
jecxz
cmp
inc
sbb
mov
dec
lahf
into
jle
xchg
in
mov
pop
jecxz
cmp
or
jne
sub
das
adc
jno
jg
pop
dec
inc
dec
ret
xchg
pop
dec
imull
test
dec
ja
mov
and
pop
lcall
sahf
sub
imul
std
sahf
mov
inc
insb
mov
cmp
movsl
sub
les
ss
inc
jno
imul
lahf
dec
cmp
pusha
adc
jl
lock
loope
int3
lock
mov
jns
inc
fidivs
xchg
insl
fidivrl
cmp
jmp
or
clc
fnstcw
ficoms
xchg
lds
sbb
pop
leave
xchg
mov
js
pop
add
pop
or
or
cmp
adc
inc
xchg
sbb
sbb
xchg
add
adcb
inc
xor
mov
jecxz
lods
sub
je
into
and
adc
out
adc
ljmp
push
insb
xchg
sub
inc
push
push
or
adc
aam
xor
cmp
adc
out
int3
add
fsubr
jb
in
push
insb
add
movsb
test
cmp
aaa
dec
adc
daa
jl
sbb
adc
add
push
and
push
mov
xchg
notb
adc
pop
loop
mov
cltd
or
mov
push
and
cmp
mov
xchg
xchg
or
lds
std
icebp
ficompl
aas
or
sub
inc
and
cmp
mov
xchg
ds
fstpl
push
int3
adc
pop
lods
ret
pop
aas
lret
push
pop
sbb
cmp
lods
xchg
lds
mov
dec
add
push
int3
jb
ret
rolb
xor
dec
cmp
pop
out
cltd
xchg
pop
insb
aas
mov
push
add
leave
fdivrs
push
or
enter
pop
lahf
les
lahf
mov
mov
mov
adc
adcl
dec
sarb
sbb
pushf
jne
xchg
mov
adc
or
data16
jecxz
inc
clc
add
pusha
inc
jecxz
and
xchg
andl
adc
sbb
jp
inc
gs
pop
mov
leave
xor
mov
cmp
add
cld
test
lea
negl
jp
fbld
bound
mov
jno
outsl
adc
cmp
scas
lret
cmp
mov
mov
je
push
int
mov
add
fsubs
fldcw
xchg
das
mov
adc
dec
decl
test
fdivs
insb
mov
sbb
jno
mov
push
leave
mov
push
ss
pop
pusha
mov
std
or
in
xor
adc
and
mov
scas
aas
idivb
hlt
lds
sub
lret
mov
jle
repnz
add
sbb
jo
mov
pop
mov
insb
cld
and
arpl
sbb
into
push
aas
stos
jno
aad
aaa
aaa
jge
je
cmp
iret
mov
jno
pop
add
pop
cmp
jg
pop
outsl
pop
mov
cwtd
sub
mov
loope
iret
fildll
push
repz
xor
add
dec
push
cmp
adc
ljmp
cmp
dec
push
inc
js
arpl
adc
shl
outsl
push
jo
sbb
scas
fwait
aaa
jae
xor
sbb
ret
inc
insb
dec
mov
shld
testb
fldenv
push
pusha
mov
ffreep
push
adc
das
mov
aad
cld
roll
int3
xchg
testl
dec
outsl
push
stos
bound
out
or
mov
lods
orl
pop
outsb
imul
repnz
pop
or
add
sub
cmp
adc
pop
jge
xor
dec
jno
sub
negl
rcll
fidivl
and
loop
addr16
pop
cmp
mov
mov
mov
fwait
dec
mov
clc
into
jl
sti
rclb
sub
pop
mov
mov
pop
aas
rclb
jmp
jnp
inc
mov
mov
pop
in
pop
packssdw
adc
mov
dec
in
stc
cmp
pop
push
adc
jno
mov
xchg
in
arpl
pop
or
cmp
pop
mov
or
jmp
adc
dec
add
rcrb
inc
lods
jo
mov
or
mov
into
je
ja
lret
and
xchg
lret
movups
rorb
dec
adc
loopne
repnz
xchg
push
dec
add
dec
cmp
push
mov
jl
and
adc
xor
out
xchg
mov
mov
pop
inc
sub
pop
lock
ficoms
add
xchg
push
imul
adc
fucomi
mov
cmp
push
shrb
lret
aam
clc
push
movsb
dec
imull
or
sub
outsl
outsl
pusha
sbb
or
arpl
inc
mov
test
lock
jne
mov
xchg
das
push
movsl
out
push
cmp
xchg
mov
aaa
xor
pusha
mov
in
fnstsw
mov
lds
sbbl
push
adc
ret
dec
mov
push
xor
jb
shll
or
out
jge
mov
mov
js
lods
adc
aas
addr16
adc
imul
jnp
clc
or
ljmp
das
ficompl
adc
add
jno
ja
inc
or
loop
sub
or
mov
xchg
cmp
sti
sarb
arpl
push
push
out
cmp
iret
testl
mov
xlat
mov
mov
pushf
stos
pop
scas
mov
push
sbb
popf
inc
lret
movsb
int
cli
cmovae
cmp
cld
xchg
aaa
rolb
pop
ret
lret
xchg
inc
pop
out
or
loopne
cmp
xlat
fimuls
dec
or
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
into
in
adc
inc
scas
jl
inc
pop
jl
loop
mov
inc
dec
clc
cmp
and
add
sbb
popf
jno
dec
cltd
xchg
hlt
adc
lock
cmp
out
xchg
dec
je
fwait
jb
inc
jnp
sub
cmp
pop
or
inc
xchg
lods
scas
inc
fsubs
sahf
cmc
jg
shll
mov
and
ds
lret
jbe
neg
stos
xchg
push
shl
cwtl
sbb
jb
mov
je
imul
xorb
cltd
mov
and
daa
scas
lods
stc
scas
cmovo
mov
adc
ret
and
mov
sub
pause
icebp
cmpsb
shrl
adc
or
mov
scas
dec
popa
scas
xlat
mov
testl
rorb
jp
movsb
out
pop
jo
xor
sahf
push
adcl
rolb
inc
xor
stos
cmp
pop
sti
mov
lret
sbb
push
mov
popa
mov
movsb
js
faddl
xchg
fisubrs
mov
cld
sti
push
addr16
cmp
sub
xor
add
cwtl
xchg
sub
xchg
repnz
push
addb
and
xor
mov
or
mov
movsb
movsb
jge
add
mov
fiaddl
pop
es
mov
mov
pop
leave
jno
pop
push
daa
jno
adc
mov
pop
divl
lahf
fidivrs
nop
cmpsb
lds
pop
inc
add
rorb
loopne
dec
daa
dec
push
or
out
fadd
stc
inc
out
roll
push
stc
rcrb
das
pop
loopne
pop
dec
sub
stos
jp
xchg
scas
push
jae
mov
popf
dec
xchg
cmpsb
and
cmc
dec
cmpsl
push
testl
out
ret
cmovle
push
push
stos
jo
mov
pop
add
mov
xchg
sub
adc
not
ret
lcall
mov
aam
pop
mov
dec
inc
jecxz
xor
or
loop
pop
cld
out
xchg
test
vmread
fwait
mov
add
dec
in
jle
xchg
pop
jp
jae
ja
notb
movsb
jb
mov
ljmp
adc
dec
sub
aad
sbb
xor
sti
movsl
les
adc
outsb
mov
inc
fxch
and
pop
jg
loop
icebp
push
pop
lret
xchg
xor
dec
inc
pop
jne
in
out
push
xchg
pop
pop
sub
in
inc
scas
dec
adc
negb
lret
sub
mov
loopne
stc
daa
or
jmp
out
lahf
lock
pop
fisubs
jne
test
cmc
pushf
aaa
ss
je
ror
push
sbb
inc
mov
and
outsb
jno
lcall
jle
cwtl
rcll
pop
inc
mov
popf
sbb
mov
hlt
das
inc
jge
or
or
in
or
fstp
pop
jp
dec
sahf
xlat
int
push
mov
xor
cld
cmpsb
repnz
inc
lgs
mov
mov
add
fs
ret
cmp
push
aam
addr16
dec
lret
mov
icebp
fwait
jg
mov
mov
ljmp
ror
adc
pop
jecxz
lods
pop
jb
xlat
pop
int3
lret
int3
call
cmpsl
adcb
xchg
sbb
mov
insb
gs
leave
push
loopne
xchg
mov
mov
mov
bnd
addr16
mov
push
nop
cld
sub
daa
iret
and
shl
cmpl
adc
xchg
cmp
movsb
mov
cmp
imul
mov
xor
dec
adc
cli
cwtl
mov
fdivl
cmpsl
movsb
pop
enter
or
inc
shlb
xchg
xchg
movsl
loop
lcall
clc
movsb
imul
imul
out
cmc
lock
mov
jne
icebp
sub
xchg
mov
ja
notw
loope
fcomp
fisubl
notl
lods
sub
inc
or
lret
daa
cwtl
cwtl
aaa
icebp
stos
and
jl
aas
loopne
or
or
mov
roll
test
sbb
insl
push
rclb
and
test
mov
test
dec
and
mov
cmp
xor
femms
cmp
shlb
mov
sub
add
xchg
sbbl
mov
mov
and
je
stos
adc
mov
sahf
test
pop
sbb
jl
jb
mov
call
rcrl
iret
add
fistps
mov
push
pop
fsts
cwtl
pop
rorb
cli
call
inc
cmp
adc
shlb
shrb
mov
ret
add
stc
lcall
xchg
fmulp
adc
cmp
add
fwait
add
loope
push
pop
sub
les
mov
addr16
mov
inc
lds
sbb
xor
dec
add
aaa
test
out
pop
ja
push
xchg
ss
push
mov
cltd
sbb
sti
lret
lock
pop
or
ds
mov
mov
ret
add
cmp
idivb
adc
or
push
std
sub
and
lods
pop
ficoml
scas
js
jl
jb
jecxz
mov
cmp
and
pop
int3
stos
ret
lahf
sub
into
test
es
cmpsl
mov
inc
lret
lret
xchg
nop
lret
repz
xor
in
addr16
sarl
mov
mov
ret
cld
daa
sbb
test
jecxz
xor
sti
or
xor
xchg
adc
pop
pop
movsb
push
add
inc
sub
int
push
int
mov
inc
mov
xchg
je
cmp
nop
sbb
cmc
stos
ljmp
fiaddl
pop
cltd
repnz
and
loop
fldt
sbb
add
push
sahf
add
ja
movsb
lcall
xor
add
mov
jae
js
dec
lds
loope
shrb
sub
aas
loope
pop
xor
inc
mov
outsb
insb
aam
lock
dec
xor
sbb
shrl
rcr
ret
xchg
in
test
roll
std
push
cmp
in
pop
lods
adc
ret
sub
popa
mov
test
or
scas
rolb
dec
mov
xor
adc
pop
outsl
push
insl
popa
jg
int3
xor
mov
mov
test
das
dec
lret
negl
inc
in
mov
lea
push
negl
shll
jb
fwait
sar
sub
loop
pop
xor
mov
movsb
or
cmp
movsb
pop
cmp
adc
fidivl
mov
jbe
mov
cmp
inc
mov
fsubrl
in
ret
mov
lds
fsincos
jne
mov
dec
fimuls
imul
test
push
push
mov
mov
mov
jp
jo
mull
data16
mov
xchg
int
cli
fwait
inc
jecxz
aam
enter
xor
push
daa
jb
add
dec
mov
pop
jno
popf
les
js
mov
xor
int3
je
test
mov
iret
pop
dec
add
adc
xlat
movsl
mov
xchg
jae
mov
subl
repnz
lods
sub
xor
or
test
or
add
mov
popa
inc
out
inc
or
stos
dec
jne
mov
shlb
push
mov
fs
mov
sub
daa
push
sub
mov
icebp
std
and
sbb
insb
pop
gs
and
mov
jge
jmp
and
lret
and
std
xor
xor
mov
fnsave
and
mul
out
jno
sub
pop
lret
adc
rolb
loop,pn
lods
aaa
stos
repnz
lods
fmuls
jae
ljmp
ljmp
pushf
ja
xor
pop
sarb
cmp
adc
test
mov
js
mov
dec
push
out
push
das
aaa
sub
enter
pushl
pop
in
aas
fcmovnu
repnz
and
fdivrs
imul
fs
xor
push
sbb
fistps
sub
push
arpl
xchg
add
cmpsl
rcl
add
dec
mov
movsb
xchg
push
lcall
push
call
xor
ljmp
add
xor
pcmpgtd
sub
es
pushf
out
hlt
pop
or
inc
push
out
scas
jo
lock
ret
ja
ficoml
xchg
cltd
aaa
push
inc
pop
xchg
mov
and
sbb
sahf
push
push
ja
in
mov
cmp
data16
ljmp
js
and
addr16
jl
jno
jnp
mov
adc
mov
sbb
scas
push
mov
xchg
stos
out
adcl
push
cltd
mov
inc
push
add
or
add
lods
add
sbb
data16
into
scas
jl
pop
fldcw
js
push
pop
jle
sti
push
cltd
mov
mov
ds
movsl
fiaddl
adc
xlat
sbb
dec
push
in
hlt
add
fidivs
sar
scas
jl
loope
fldcw
sbb
xchg
pop
jo
sahf
lret
and
repz
sti
inc
addb
push
inc
and
call
xchg
int3
jmp
rorb
dec
push
lahf
cltd
mov
add
xchg
ljmp
fidivrs
add
orb
test
test
addr16
aas
adc
xlat
in
jns
or
test
fldl
cmpb
or
xchg
repz
cwtl
lea
mov
lods
pop
stos
movsb
adc
dec
add
inc
in
aam
outsb
lahf
xchg
cmp
insl
rorb
xchg
arpl
mov
xchg
jl
inc
push
dec
push
mov
xchg
out
jmp
adc
xor
inc
push
push
std
jb
stos
repnz
fwait
push
jl
mov
sub
cltd
fwait
sahf
add
push
xchg
push
test
test
adc
les
sbb
pop
lcall
bound
hlt
jle
add
dec
stos
popa
add
imull
rcl
mov
cwtl
mov
aaa
mov
sub
pop
mov
mov
jge
sahf
dec
lcall
fwait
movsl
int
add
repz
addr16
es
mov
sarl
lahf
pop
mov
arpl
inc
mov
xchg
cs
pop
mov
fneni(8087
leave
jo
pop
and
mov
iret
jae
lret
mov
xor
ljmp
dec
clc
sbb
daa
and
hlt
add
sub
mov
push
jae
push
jae
subl
mov
mov
adc
popa
sti
fxch
and
jne
shrb
andb
xchg
jge
lcall
aad
pminub
lea
jge
jle
leave
sahf
adc
and
inc
mov
pop
lret
jbe
and
addr16
push
out
adc
std
pop
popf
mov
stos
cmp
push
in
pusha
adc
outsl
add
push
adc
sub
mov
std
in
inc
loop
or
jmp
addr16
adc
dec
adc
popa
aam
inc
jb
clc
outsl
test
paddq
push
sub
push
cmp
lcall
iret
mov
dec
xor
das
fisttpl
ss
jmp
fisttpl
mov
insb
mov
xor
movsb
xchg
jp
test
mov
or
xchg
sbb
out
mov
mov
lahf
and
push
sahf
test
or
pop
jle
in
jmp
inc
cltd
push
mov
stos
sub
int3
jae
xchg
cmp
scas
cmp
ss
add
daa
adc
sub
mov
fisubs
lods
inc
sbb
ret
sub
and
popf
rcll
movsl
rorb
mov
pop
push
xchg
and
popa
test
cmpb
adc
out
xor
outsl
jns
hlt
ret
mov
xor
push
jg
aas
inc
fs
in
pop
outsl
mov
or
bswap
rorl
cmpsb
ds
cwtl
cmp
fstl
xor
pop
rcr
lods
inc
inc
cwtl
movsl
cmp
pop
mov
cmpsl
cmpsl
push
xor
stc
not
je
dec
pop
out
loopne
imul
dec
fs
sbb
mov
scas
add
pop
lret
xlat
mov
sbb
jg
loope
cli
out
mov
ror
mov
repnz
adc
js
lea
setb
das
mov
int3
or
addl
in
sahf
test
sarl
popf
inc
mov
pushf
mov
fbstp
inc
xchg
subl
mov
jle
mov
sbb
rolb
jle
movsl
je
jl
jo
test
pop
dec
and
cmpsl
fdivl
mov
add
push
rorl
cs
bound
lock
cmp
mov
sbb
outsb
inc
ficompl
and
imul
scas
test
add
inc
je
sbb
data16
pop
popa
ljmp
inc
xlat
shll
outsb
icebp
jbe
inc
jg
sub
xchg
das
xchg
aad
or
in
xchg
lret
jo
pusha
add
pop
lock
aas
imul
aad
push
sbb
in
fdivrs
arpl
jmp
add
add
arpl
xchg
out
pushf
cld
outsb
mov
es
hlt
fiaddl
pop
adc
fdivrs
sbb
inc
movl
and
arpl
jne
mov
iret
mov
rcrb
adc
inc
out
jle
mov
push
push
or
sbb
hlt
cmp
pushf
inc
mov
mov
xchg
sbb
outsb
in
pop
lret
inc
mov
lea
xor
or
fisttpll
pusha
loopne
subl
cli
jb
imul
rclb
push
jnp
add
hlt
je
mov
nop
xlat
test
lret
jge
aam
lods
jns
adc
pop
pop
mov
adc
rcll
xchg
movsl
or
xorl
jle
push
dec
test
sti
mov
addr16
int3
pushf
inc
and
sub
mov
and
and
pop
sti
dec
mov
addr16
aad
outsl
adc
xchg
jl
fwait
push
es
fildll
pop
dec
divl
int3
fistpll
xchg
pop
jne
sar
sar
inc
mov
sub
fsubs
pop
stc
fnstcw
mov
xor
xchg
cmpsl
adc
pop
xorb
sbb
cmp
push
xchg
and
cmp
dec
icebp
loopne
pop
xchg
sbb
cmpb
repz
int3
data16
out
outsl
data16
sbb
cmp
in
cld
leave
jp
shr
xor
or
sub
into
pushf
mov
pop
cs
and
pop
and
fcom
dec
lods
call
jbe
fists
jne
fsubrl
add
fsubrs
push
jge
jg
jl
pop
sbb
cld
cli
mov
cld
jno
clc
outsl
shlb
leave
stc
test
xchg
fdivs
or
mov
movsl
sti
sti
pop
jp
push
out
ja,pt
jns
push
cmp
repnz
dec
popf
int3
shlb
pop
pop
or
cmc
fbstp
insb
push
fsts
movsb
mov
sub
mov
into
cmp
loop
nop
add
mov
mov
mov
mov
stc
mov
mov
pop
sbb
rol
sub
cmp
add
sbb
push
lahf
lahf
push
push
cwtl
add
test
cmp
mov
xchg
ds
lcall
push
out
movsl
mov
mov
idivb
divb
pop
mov
leave
test
repz
cmp
cmp
cmpsb
xchg
stos
push
cmp
jg
aaa
mov
sub
bound
cmc
scas
sbb
mov
leavew
stc
int
jo
push
pop
lahf
call
jb
scas
mov
mov
sbb
mov
mov
jne
loope
lods
std
insb
lcall
push
dec
xchg
xlat
mov
sbb
mov
sbb
bound
mov
cld
adc
in
aam
rclb
add
sub
aaa
inc
sahf
push
mov
lods
and
adcb
xor
or
leave
test
cmp
les
adc
and
dec
push
lret
jecxz
jge
sub
hlt
ja
hlt
sbb
ret
shlb
pop
adcb
mov
cmp
or
jp
fs
out
fldpi
mov
rcl
jge
pop
jmp
adcl
mov
mov
lcall
add
mov
aas
mov
mov
std
out
dec
repnz
adc
loop
pop
pop
aaa
pop
push
pop
sti
pop
cltd
xor
push
and
iret
daa
or
mov
shufps
pop
bound
sbb
sbb
iret
aam
sbbl
pop
sbb
xchg
mov
sub
fstl
sbb
orl
adc
int3
cltd
ret
cmpsb
pushf
inc
xchg
jg
xor
ja
mov
lahf
push
cmp
adcl
xchg
mov
cmp
nop
and
test
ljmp
dec
mov
jnp
rcrb
sbb
stc
mov
pop
in
das
push
dec
fistpl
jb
push
or
cwtl
outsb
movsl
js
sub
insb
mov
ja
scas
jns
and
xchg
mov
mov
lds
mov
fisttpll
pop
push
mov
push
cmp
adc
mov
mov
orb
or
sub
daa
inc
loop
je
or
mov
sub
push
adc
out
xchg
aad
cmp
push
push
add
pop
movsb
imul
push
fmuls
in
xchg
lods
xor
movsl
and
pushf
stos
ret
cmp
and
cltd
fdivrp
xchg
lea
enter
lea
pop
lods
ret
inc
je
add
vpslld
pop
movsb
mov
cmc
pusha
test
repnz
dec
adc
add
jmp
es
mov
lds
mull
aad
jl
std
or
in
loope
add
jmp
mov
mov
repnz
pop
inc
push
push
jo
adc
mov
in
inc
sbb
leave
lea
test
jno
sbb
cld
cmc
cmp
cmp
jnp
out
mov
lcall
mov
inc
jae
push
pop
movsb
push
sbb
fcmovu
pop
add
fs
or
test
mov
sbb
sub
push
sub
repz
sub
out
mov
out
fwait
outsl
push
je
cmc
sar
jmp
pop
dec
mov
inc
aaa
jne
or
adc
jecxz
les
sahf
jns
or
xchg
mov
adc
jmp
jnp
int
sbb
stos
cmp
and
jge
adc
push
cmp
sub
addb
sti
jae
jne
mov
sbb
pushf
or
push
ds
xchg
in
xchg
sub
shll
dec
in
insl
sbb
dec
and
mov
xchg
in
mov
in
sbb
xchg
mov
cltd
inc
paddusw
movsl
sub
push
push
std
in
pop
sbb
adc
jge
into
je
jge
pop
bswap
add
loop
push
sbb
sbb
jbe
aaa
push
mov
mov
or
push
leave
aad
mov
or
negl
aam
das
sub
dec
je
mov
sbbl
xor
pop
imul
mov
add
add
or
lret
adc
pop
dec
icebp
fstpt
jb
scas
jb
mov
push
xlat
iret
stos
dec
adc
jno
lea
add
pop
mov
jbe
pop
xchg
pop
or
xor
xor
fnstcw
sub
fucom
faddl
mov
mov
leave
xor
loope
jae
imul
lahf
aad
out
sub
mov
in
push
xor
test
fisubrl
adc
mov
popf
push
pop
pop
adc
or
popl
movsb
inc
inc
roll
shl
cmpsl
xor
aas
add
and
dec
xor
or
sub
roll
adc
es
outsb
jge,pt
push
hlt
pop
insb
jp
imul
sub
les
mov
xchg
sbb
out
stos
shlb
fldl
lea
daa
stos
imul
mov
push
ficomps
xchg
or
add
push
mov
loope
cmpsl
popf
inc
loopne
sbb
into
loopne
sbb
cmp
push
lret
mov
cs
in
pusha
mov
filds
mov
icebp
dec
adc
mov
test
add
mov
shrb
adc
sbb
xorb
cmp
mov
int3
push
imul
fdivrs
stos
sti
ss
repz
sub
lret
hlt
mov
into
scas
adc
iret
mov
std
cli
andl
ret
xchg
mov
mov
or
in
rclb
lret
out
mov
popf
or
push
in
dec
cmp
lock
push
loope
and
aad
xor
das
out
test
sbb
incl
ljmp
mov
and
outsb
shrl
mov
xchg
sbb
loopne
mov
hlt
dec
pop
inc
repz
push
popa
adc
icebp
mov
xor
push
or
test
xor
into
push
add
mov
fdivs
cli
add
iret
push
imul
loopne
add
cltd
gs
and
add
ret
pop
add
pop
mov
fsub
scas
ja
and
sbbl
ret
xchg
mov
cmp
add
out
push
inc
fld
lds
cli
push
jae
adc
push
push
das
cld
sub
lds
push
push
ljmp
shll
xor
inc
lods
ror
mov
fs
xor
cmp
pop
mov
stc
pop
inc
push
out
daa
sti
loop
mov
push
stos
call
pop
cwtl
mov
das
mov
jmp
ja
pop
test
test
sbb
push
xchg
adc
push
pop
xchg
scas
outsl
sub
cvttps2pi
dec
jnp
out
inc
jecxz
fdivl
ljmp
aas
bound
cmp
push
jl
cmp
into
cmpsl
cmc
push
test
out
loop
mov
aaa
mov
add
mov
dec
ds
mov
insl
repz
idivb
aaa
adc
sbb
mov
cmp
or
lahf
and
out
popa
gs
dec
loopne
mov
lahf
jb
outsb
pop
notl
push
pop
inc
and
andl
push
mov
or
mov
fcoml
sbb
lods
hlt
lods
ja
pop
les
jae
sub
mov
cmp
xor
mov
popa
jnp
imul
mov
pop
cmp
dec
mov
cltd
stos
fwait
jb
das
insl
inc
cs
add
sub
adc
xchg
xor
fcmovnu
add
xor
lcall
mov
mov
xor
je
insb
rclb
lret
popf
sub
mov
mov
cmp
cmpsb
push
sbb
inc
mov
push
dec
push
dec
mov
add
aas
lock
cmp
insb
popa
jno
push
out
xor
mov
ja
in
lret
test
xchg
movsb
lret
mov
mov
lods
or
stc
into
aaa
sub
inc
dec
cmc
mov
jne
sbb
and
jb
enter
stos
xchg
adc
and
test
pop
ljmp
pop
and
dec
sti
fmull
inc
in
mov
hlt
pop
repz
jl
mov
jecxz
mov
insb
aam
xchg
mov
mov
mov
mov
sub
push
add
pop
sub
test
xor
sub
pusha
sbb
sub
daa
subl
loop
xorb
mov
sbb
fsubl
dec
insb
jmp
jge
cmpsb
dec
and
xchg
bnd
inc
or
testb
stos
jl
ja
repz
push
test
jae
sbb
add
inc
xor
fwait
mov
adc
test
sbb
adc
ret
sbb
add
jnp
or
cmc
pop
pop
insl
mov
push
out
adc
in
jmp
lahf
es
pop
lret
mov
inc
outsl
dec
je
jmp
jns
push
mov
mov
mov
pusha
rorb
sbb
hlt
lods
jo
adc
jle
mov
mov
xor
iret
lcall
dec
movd
inc
jns
xor
pop
loop
dec
lcall
cltd
pushf
jnp
fmull
test
dec
jns
js
faddl
stos
dec
ja
mov
xor
push
les
ja
jmp
mov
cli
mov
pop
rcr
xor
and
xchg
test
jnp
cs
jb
jmp
cs
xchg
sub
addr16
dec
pushf
and
les
stos
and
xor
and
subb
lds
mov
scas
sub
pop
pusha
in
popf
and
cmp
aam
adc
sub
mov
cmpsb
popa
sbb
and
push
ljmp
andb
lret
xor
and
mov
fucomi
mov
sub
and
fdivrs
bound
mov
es
adc
sub
xor
out
fisubrs
dec
push
aaa
loope
mov
pushf
pop
or
rolb
or
add
push
adc
mov
scas
or
out
sub
mov
adc
jno
dec
adc
xchg
test
out
movsl
inc
sub
or
aas
adcb
inc
ds
sbb
xchg
or
insb
pop
xchg
fcoms
sub
and
lret
adc
ljmp
push
jae
cmp
andb
pop
jl
pop
push
dec
xor
scas
loope
paddusw
out
aaa
mov
subl
ljmp
repnz
or
jb
loope
pop
adc
or
aaa
mov
setp
ss
stos
add
and
cmp
mov
mov
fwait
and
jl
add
sub
mov
add
fwait
mov
xor
pop
popa
mov
fs
movsb
xchg
out
mov
call
cmpsl
data16
popf
xor
add
imul
test
and
cmp
scas
jge
ficoml
leave
scas
jmp
inc
push
out
xor
push
test
rorl
adc
stc
mov
stc
movb
hlt
cmc
out
pop
mov
or
mov
fidivrl
sti
daa
out
rorb
lods
pop
inc
leave
xor
outsl
sbb
dec
loopne
cs
inc
lds
dec
fnsave
enter
xchg
sbb
jmp
fmulp
shll
imul
cmp
sub
jns
adc
fimull
lods
scas
push
enter
call
pop
mov
add
mov
mov
ljmp
or
jo
leave
jno
in
loope
clc
sub
xchg
and
sub
mov
lret
cmp
inc
xchg
enter
push
jmp
cld
add
xchg
sahf
ljmp
enter
xchg
incb
mov
jnp
roll
lock
push
std
lods
jecxz
lret
push
lock
mov
std
cmc
pushf
jg
lock
xor
dec
popa
das
enter
or
into
lret
int
cmp
fsts
lods
and
mov
cmp
mov
sub
cmpb
cmp
xor
stos
clc
sub
shrl
out
aam
jae
pop
or
mov
or
mov
push
or
lcall
fwait
rorb
jge
mov
mov
lea
push
pop
pop
cwtl
jp
jecxz
int
and
inc
jle
out
lahf
xor
jl
ret
fcoml
push
and
adc
xchg
push
sub
jae
dec
insl
dec
imul
lcall
cmpl
sub
ljmp
and
push
movsl
push
xchg
flds
hlt
stc
pop
inc
iret
mov
popf
lods
sbb
notl
lea
and
sub
in
cmp
sub
adc
mov
sti
in
cmpsl
test
in
pop
cli
jne
push
int
jl
inc
xchg
push
push
sbb
test
lahf
sub
gs
cmpsl
dec
cmpsl
xor
jmp
repnz
xor
push
push
lock
jno
pop
pusha
jle
jnp
repz
add
lahf
mov
jecxz
popa
add
scas
fwait
hlt
xor
sbb
inc
andb
movsb
loopne
mov
or
add
cmp
cmpsb
jnp
xor
sub
mov
mov
sub
add
add
ljmp
pop
insb
inc
mov
mov
ljmp
dec
sbb
cmovno
movsb
sbb
pop
fisubrl
iret
inc
pop
push
sarl
mov
scas
in
lret
js
sbb
inc
mov
inc
scas
sbb
sub
sbb
cmc
arpl
dec
sar
lds
cmp
xor
cmp
iret
in
cmp
mov
mov
jge
pop
push
stos
mov
out
push
xor
cli
out
push
test
dec
xchg
popa
imul
push
repz
cs
mov
into
jns
pop
mov
pop
cmp
xor
addb
add
jb
std
cmp
and
outsl
loopne
xchg
or
mov
pop
mov
xchg
cmc
stc
mov
sub
mov
outsb
movsl
sbb
sub
cli
xor
cltd
jo
mov
xor
ljmp
rclb
mov
xchg
cli
imul
jb
je
and
insl
lock
add
adc
testl
lods
popf
clc
sahf
inc
add
fdivl
sbb
jo
mov
mov
inc
mov
shlb
inc
mov
mov
pop
jnp
imul
push
inc
push
mov
sahf
pop
repnz
mov
imul
mov
out
fidivs
pop
jge
and
test
ss
mov
int3
xlat
xorl
sub
mov
aas
lock
sbb
scas
popa
pop
and
pop
jl
mov
xchg
push
cmp
cmpsb
fbld
mov
and
mov
lret
scas
xor
pop
inc
push
cmp
sbb
adc
push
jo
loop
lcall
cmp
loop
js
dec
out
es
mov
insb
lds
loopne
ja
int
inc
scas
push
mov
ja
xorb
adc
loope
mov
movsl
sub
push
jae
mov
out
inc
ljmp
scas
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
mov
jl
inc
pop
jl
jp
test
push
mov
outsb
or
dec
cmp
or
adc
ss
jg
addl
rorb
or
loope
in
inc
xor
test
mov
mov
sub
push
xchg
sbb
lock
mov
in
mov
rolb
loopne
mov
aas
mov
add
xchg
jb
clc
mov
jp
std
mov
lcall
add
dec
cltd
push
int3
popa
xchg
and
add
in
lcall
push
fisubrl
in
push
cmp
dec
subl
dec
push
jnp
nop
imul
stc
cmpsb
and
xchg
dec
pop
int
dec
pop
rol
rcl
pop
aas
mov
dec
sbb
cmp
arpl
pop
das
mov
loope
mov
sub
mov
repnz
cmpsl
dec
loope
or
xor
aas
push
mov
call
imul
or
lods
jp
insl
mov
outsl
out
dec
mov
adc
imul
mov
es
xorb
into
fisttpl
imul
sbb
mov
xor
jae
cmpsb
test
rcl
leave
cs
mov
jmp
xor
rolb
sbb
dec
jg
push
mov
sarb
popl
jns
adc
lea
insb
sar
scas
xlat
and
xchg
mov
sub
in
movntps
xor
test
call
inc
lods
fisttpll
mov
les
xor
aam
xchg
ds
loopne
lock
push
out
sbb
sbb
movsb
addb
add
sub
cmpsl
lea
adc
decl
jns
pop
lea
popf
popf
push
xlat
daa
push
cmpsb
pushl
xchg
lods
enter
mov
fmull
test
or
push
jo
cmpsb
dec
in
outsb
bound
cmp
mov
and
xor
outsl
insl
mov
mov
add
sub
test
mov
mov
jl
cwtl
lods
jne
pop
mov
push
into
test
addr16
iret
xchg
xchg
mov
sarl
sbb
sbb
xchg
outsb
sub
stc
mov
ja
xor
push
add
adc
add
subb
sub
outsb
cmpsb
stc
and
je
mov
ljmp
out
sub
clc
cld
jle
jl
daa
popf
je
mov
popa
jge,pn
pop
test
decb
std
push
xor
push
xchg
lods
in
cmp
xchg
insb
and
in
sub
xchg
mov
fcoms
insb
push
sbb
dec
enterw
fcmovnbe
sahf
or
sub
sub
inc
jnp
rcl
mov
scas
fstps
stos
lods
xchg
fistl
ret
sbb
addr16
ja
clc
jns
lods
cmp
mov
or
dec
arpl
adc
xchg
adc
or
mov
inc
out
jno
test
pop
pop
xor
out
ljmp
jp
in
adc
imul
aaa
lcall
mov
orl
pop
out
sbb
es
int
mov
sbb
add
jb
sbbl
leave
push
cmpsl
out
cs
movsl
int
jmp
xor
filds
sub
roll
jbe
cmp
scas
mov
repz
jne
cmpb
jne
dec
std
hlt
xchg
push
scas
mov
test
mov
fcmovb
or
inc
outsl
fisttpl
jnp
mov
push
popf
push
mov
jb
cmp
inc
mov
lock
fsubrs
jp
and
sbb
add
lret
insl
hlt
mov
mov
loopne
xchg
mov
mov
push
movsb
and
int3
mov
out
std
add
inc
inc
nop
pop
cld
xor
inc
mov
sarl
cmpsb
mov
lret
adc
das
frstor
jge
jae
jnp
dec
xchg
pop
aas
add
sub
pop
stos
pop
clc
inc
sbb
add
pusha
cmpsl
adc
repnz
sbb
push
push
pop
push
pop
nop
and
fcomip
inc
mov
in
xlat
mov
cmp
daa
cmp
mov
test
daa
das
cmc
test
testb
mov
cmp
in
lret
xor
jne
add
lret
das
cmp
insb
shrl
sbbb
and
sarl
in
popf
ds
adc
cltd
insb
mov
stos
add
and
and
je
lock
lods
mov
xchg
stos
push
leave
cmc
and
inc
dec
jle
jo
retw
add
fisubl
loopne
lret
outsb
iret
adc
add
int3
insl
sbb
aaa
or
repz
jmp
xchg
xchg
clc
stc
aaa
dec
cmp
rcl
and
das
lods
push
cmp
aam
cmp
mov
wrmsr
arpl
mov
mov
lea
push
add
mov
fxch
jns
sbb
add
and
jle
mov
dec
and
std
dec
pop
adcl
mov
xor
cli
and
bound
test
leave
ficoms
lods
arpl
dec
sti
sahf
dec
lods
xor
pusha
mov
xchg
pop
int3
aas
xchg
xchg
xchg
rclb
pop
mov
and
aaa
fcompp
and
mov
inc
adc
push
jle
ffreep
test
shrb
cmpl
cwtl
add
inc
add
mov
dec
sub
ds
cld
inc
fwait
inc
sbb
cmp
lret
cmpsb
adc
mov
and
sbb
jno
xchg
lret
mov
fstpl
sub
sub
fstpl
and
jecxz
call
aad
push
jno
sbb
fcoml
sbb
pop
or
aaa
lds
lock
mov
fists
fisubrl
adc
jbe
pop
fpatan
cld
push
cmp
xlat
outsb
jmp
std
inc
mov
mov
dec
lret
jae
rcrb
fidivrs
movb
xor
jno
insl
orl
fnstenv
fscale
dec
inc
movsb
ja
mov
xchg
sub
jae
jmp
int3
repnz
xor
sbb
lods
clc
ss
pusha
cld
fcoml
cltd
adc
aaa
loop
lods
ffreep
test
mov
inc
pop
push
ljmp
mov
fldt
mov
add
mov
pop
push
pushf
inc
jno
dec
mov
mov
test
xor
sbb
stos
sbb
add
daa
lock
out
pop
stos
imul
into
mov
cmpsl
xchg
inc
lret
xor
mov
pop
cmp
aam
cmpsl
sbb
cmp
mov
jns
xlat
rcll
xchg
popa
iret
mov
lods
adc
fildll
stc
adc
loopne
or
sti
shl
add
or
adc
ljmp
push
out
in
fucomi
fisubrl
jmp
sub
xchg
adc
mov
das
aaa
cmpsb
pop
cmp
mov
xchg
sar
loope
push
lahf
aad
mov
scas
inc
rcrb
jb
das
popa
mov
pop
add
adc
sbb
enter
mov
xor
out
test
repnz
xor
pop
push
lods
sub
pop
movsb
xchg
in
imul
mov
xchg
push
rclb
stos
pusha
out
jo
sub
out
xor
fsubs
cmpsb
aaa
lret
ror
mov
pop
sahf
pop
sub
out
jmp
loope
iret
dec
xchg
mov
popf
jl
in
out
adc
xchg
hlt
jo
test
sbb
adc
fcom
ja
cmpsb
pop
loope
fisubs
or
lcall
push
adc
call
fmuls
test
jae
pop
in
cmp
pop
pop
xor
pop
loopne
dec
add
lock
rcrb
stos
cmpsl
jmp
int3
xor
push
data16
mov
jo
ljmp
pop
xchg
cmp
call
pop
pop
pop
pop
fnstcw
jnp
testl
push
add
fs
pushf
dec
ror
cmp
mov
stos
inc
iret
cmpl
pop
jne
into
stc
xchg
adc
jmp
stc
sbb
inc
mov
pop
mov
add
vpinsrw
xlat
aaa
pop
mov
mov
test
mov
stos
int3
stos
xchg
mov
lret
outsb
jns
cmpsb
loope
push
jmp
ret
sbb
mov
jns
cld
out
mov
cwtl
pop
adc
pop
lahf
pop
je
loop
clc
popa
cmp
push
nop
pop
popf
mov
jl
cmp
sbb
dec
push
jecxz
pop
sbb
jnp
xor
adc
insl
sbb
inc
sbb
inc
div
pusha
pop
dec
sarb
push
pop
out
mov
xor
sarb
cmp
push
jge
in
sub
mov
hlt
fstpt
out
outsb
arpl
cmpsb
fistpl
mov
je
or
imul
sbb
sbb
sar
mov
lahf
cli
cmp
dec
aaa
sbb
jp
mov
dec
in
shrl
pop
out
dec
xchg
cli
add
cli
adc
xchg
fldcw
add
int
xchg
xchg
jo
ljmp
sbb
fnsave
sub
pop
jae
and
mul
push
or
les
pop
add
push
lahf
nop
js
add
sub
mov
push
mov
leave
inc
add
movsb
jl
arpl
and
cmp
decl
xor
cld
mov
test
push
sub
add
pop
push
push
jb
fmulp
jmp
xor
insb
ret
imul
pop
test
mov
push
cmp
in
mov
inc
and
mov
into
lods
pop
xchg
mov
jmp
jns,pn
enter
dec
xchg
lret
adcb
push
fisubrs
icebp
stc
add
adc
xchg
shll
push
inc
lcall
repz
mov
stos
pop
loopne
fldl
jo
push
dec
cmp
or
add
pop
or
je
and
loopne
lcall
dec
jno
inc
mov
repnz
mov
mov
daa
sti
jae
loope
jno
xchg
das
cmpsl
ret
push
inc
mov
fnop
jb
cmp
insl
adc
pop
rcrl
shll
js
in
rolb
scas
jl
pop
fnstcw
sarb
cmc
sbb
cli
mov
adc
push
pop
cltd
xor
xchg
push
into
pop
nop
sub
roll
repz
outsl
xchg
xor
into
repnz
jo
or
xchg
cmp
out
mov
lahf
orb
out
cmp
popa
or
test
push
cmp
dec
out
cmp
nop
ss
roll
xor
pop
add
mov
mov
movsl
aam
xlat
mov
add
or
sti
mov
divb
rcrb
add
in
mov
out
les
orl
pop
in
sub
and
pop
outsl
fbld
mov
shrl
pop
inc
test
inc
cmp
jmp
out
not
aas
push
xor
fadd
sbb
xor
aas
clc
mov
sbb
leave
adc
cmp
push
div
repz
mov
sbb
lock
or
data16
or
neg
cmpsl
push
xor
test
jae
dec
add
cmpsl
sub
adc
daa
in
pop
mov
dec
es
xchg
cmp
dec
push
lahf
xchg
cli
or
mov
cli
sbb
mov
jmp
inc
push
roll
nop
push
arpl
aaa
cmp
jnp
clc
in
ss
rclb
fwait
imul
and
cmp
mov
adc
add
jbe
hlt
jle
rorl
xchg
fwait
sub
pop
cmp
sahf
adc
outsb
push
int
ret
sub
loopne
orb
sub
fwait
and
xor
out
cmc
pushf
cs
rcrb
or
divb
int
dec
call
imul
adc
sbb
std
push
mov
sbb
popa
mov
inc
flds
fwait
sub
adc
jns
jo
out
test
sarl
sbbl
push
pop
int
lock
mov
mov
jg
xor
mov
dec
jl
aad
mov
xor
add
and
cmp
sub
sub
cmpl
cmc
sbb
decb
stos
and
aad
jecxz
out
rorb
sub
adc
fnstsw
lds
mov
fildll
scas
and
xchg
sub
iret
loopne
or
pop
ror
mov
in
xor
jle
sarl
jnp
in
mov
dec
xchg
pop
aad
mov
xchg
mov
mov
mov
pop
or
out
cmp
adc
inc
dec
adc
lret
push
sahf
inc
repz
or
cmpsl
cmp
cmpsb
or
xchg
jno
imul
sti
or
mov
mov
test
aad
jb
pop
push
testb
dec
std
std
add
divl
jle
setl
or
shll
cmp
or
frndint
xor
and
stos
push
dec
jg
jbe
and
lock
ret
dec
or
push
cmp
js
pusha
xor
int3
cmp
cltd
lcall
mov
decl
popa
mov
mov
xchg
icebp
mov
mov
aas
pop
aaa
shr
pop
jp
or
jl
dec
xlat
mov
leave
pop
ja
inc
shrb
push
inc
and
pop
stos
scas
dec
out
jne
jo
addr16
inc
mov
sbb
mov
push
inc
testb
loop
adc
sbb
mov
mov
enter
mov
xor
fistpll
mov
inc
push
mov
jecxz
lds
movsb
aad
mov
adc
sub
sub
add
jle
push
push
push
fs
fistpll
cmpb
xchg
inc
cli
inc
pop
xchg
je
add
outsl
aam
mov
push
mov
and
mov
fmuls
mov
push
loopne
rcrb
push
inc
push
xchg
cwtl
icebp
repz
movsb
adc
out
push
std
mov
fwait
xchg
stos
push
inc
push
mov
pop
dec
mov
add
push
jge
mov
jl
movsl
pop
sbb
bnd
mov
scas
or
mov
pop
imull
aam
or
dec
cwtl
pop
inc
sub
adc
hlt
pop
popf
outsl
add
jecxz
addr16
add
dec
or
lods
ret
push
js
iret
mov
or
mov
cmp
pop
test
in
or
dec
aad
xchg
push
and
daa
jmp
mov
mov
sahf
or
pop
mov
iret
nop
imul
xchg
add
sbb
repz
sub
int3
pusha
mov
mov
mov
lds
ja
pushf
adc
and
sbb
in
rolb
cmp
mov
addr16
cld
xor
ljmp
mov
inc
mov
push
cltd
xor
gs
push
dec
out
orl
push
fwait
sbb
push
sbb
mov
sarl
fidivl
in
int3
xor
data16
cmp
test
inc
push
jnp
push
fcmovbe
push
or
imulb
mov
jne
stc
mov
test
push
enter
mov
vpmullw
add
stos
fidivs
sbb
scas
jae
js
mov
xchg
push
leave
aaa
mov
ss
pop
mov
das
stos
mov
cmp
repz
loopne
jmp
and
mov
insl
lahf
movsl
mov
mov
pop
dec
and
pop
outsb
push
mov
or
cmp
pop
vmread
xchg
aam
or
out
push
stos
sub
fsubp
sub
loope
jne
inc
lods
sub
pop
fs
sti
cmp
repnz
stos
sti
push
pop
add
aaa
clc
data16
mov
gs
sub
sbb
add
cmp
pushf
sbb
sub
popa
fwait
ljmp
xchg
adc
push
add
repz
lds
dec
fldenv
mov
insb
mov
out
cmp
fwait
lea
fsubrl
mov
out
movsb
pop
mul
jmp
dec
gs
mov
add
mov
negb
pop
push
sahf
jge
in
add
fnstsw
cmc
mov
icebp
incb
push
stos
insb
movsb
out
mov
lods
cmp
lret
js
in
dec
addr16
lea
pop
rcrl
es
lcall
out
outsl
jnp
repnz
add
clc
dec
into
lods
jg
or
xchg
pusha
jmp
rorb
scas
clc
mov
push
or
adc
adc
mov
pop
shl
movsb
mov
sbb
mov
sub
sub
sbb
subb
or
lods
and
mov
mov
or
leave
inc
in
lcall
call
mov
movsb
jmp
out
and
lcall
mov
and
out
pusha
ficomps
mov
pop
cmp
mov
jmp
push
imul
mov
stos
shlb
shlb
pop
or
and
mov
sub
mov
ds
and
push
shll
xor
xor
lcall
clc
push
inc
sub
and
fwait
dec
pushf
cmp
fldt
fildl
jge
mov
dec
xchg
mov
lahf
jnp
addb
ds
xor
mov
jmp
sbb
test
and
inc
arpl
mov
pushf
pop
mov
es
add
incb
ljmp
mov
lcall
add
mov
fdivl
jns
repnz
jns
dec
ja
mov
jb
cwtl
pop
cmpsb
pushf
lcall
hlt
dec
mov
inc
lods
sbb
mov
jp
scas
pusha
call
or
fwait
pop
add
ja
ret
mov
and
shl
ljmp
and
je
cwtl
adc
dec
das
and
adc
fmul
or
cli
lcall
push
outsl
jl
jbe
jno
popf
insl
shll
mov
sti
out
inc
adc
sbb
push
and
push
inc
out
andl
push
fstps
mov
fidivl
mov
mov
icebp
lcall
aaa
in
hlt
dec
mov
mov
mov
out
ljmp
jp
hlt
insl
inc
xor
mov
lea
dec
outsb
add
push
and
push
pop
inc
jl
aad
in
sbb
push
add
inc
cltd
leave
jmp
and
adc
pop
mov
xor
lods
cmc
cmp
ljmp
mov
arpl
lahf
je
xchg
push
pop
push
mov
push
sar
mov
sub
dec
fmuls
pop
std
mov
dec
repnz
mov
xchg
insl
sub
xchg
xchg
adc
aad
fsts
jo
xchg
jne
sahf
xor
add
fbld
sahf
dec
mov
shrb
stos
aas
icebp
jecxz
imul
add
lods
add
and
adc
fdivp
and
out
dec
push
cmpl
adc
push
pop
jp
in
adc
sarl
dec
movb
enter
ljmp
jnp
add
and
mov
dec
aad
add
ja
test
xor
leave
xor
inc
pop
adc
popf
data16
stc
and
mov
popf
sbb
and
mov
mov
cs
cmp
mov
mov
lea
xor
dec
loop
and
outsb
dec
les
ror
aas
js
xor
cs
mov
add
fists
dec
les
lods
mov
fwait
data16
out
imul
cld
mov
test
popf
movsb
mov
aam
and
add
sbb
cmp
loope
or
dec
jbe
adc
push
mov
out
or
mov
imul
loopne
xorl
lock
and
push
cmp
rclb
cltd
add
xchg
xor
aas
jge
or
cltd
out
dec
xchg
pop
sahf
xor
insb
icebp
daa
push
push
cmp
in
sub
push
push
hlt
movsl
stos
std
sub
pop
lds
inc
mov
test
sub
stc
movsl
xor
and
bound
add
mov
daa
xor
je
addr16
mov
popf
pop
xchg
xchg
loopne
adc
adc
pop
divl
clc
test
popa
adc
cs
lret
pop
sub
dec
scas
popa
fadds
pop
lods
inc
cmp
mov
sbb
ljmp
inc
mov
insl
ljmp
add
mov
sti
mov
in
jno
movsb
inc
repnz
in
jbe
mov
pop
adc
inc
sub
xchg
pop
repz
pop
enter
sbb
popw
gs
repnz
pushf
iret
mov
daa
lret
fmuls
push
or
loopne
cmc
push
movsb
mov
mov
jle
inc
loope
jno
hlt
div
sarb
stos
mov
and
cs
fwait
adc
arpl
test
add
mov
pop
dec
scas
int3
push
adc
or
scas
add
rcl
lds
cmp
lahf
ss
and
cmp
test
bound
mov
lea
test
pop
inc
add
mov
inc
sub
push
inc
inc
sbb
jnp
mov
sbb
inc
decb
mov
loop
dec
jns
or
mov
mov
sbb
push
jecxz
addr16
pop
lods
insl
and
lahf
fwait
lods
and
das
or
xchg
hlt
push
sarb
push
cmp
pusha
pop
daa
mov
lret
fs
aaa
inc
sbb
stos
fldenv
dec
sahf
mov
aas
mov
cmpsl
pop
les
sub
test
lock
dec
or
cs
jb
lock
add
mov
popf
aaa
xor
iret
cmp
cmp
jge
mov
cmpsl
or
jnp
add
ja
loope
outsl
clc
xchg
cmp
dec
pop
stc
addl
sbb
mov
jecxz
adc
mulb
push
xchg
cmpsb
adcb
mov
orl
in
sbbb
repz
insb
ret
out
jle
nop
mov
imul
lret
popa
bound
out
std
es
push
fimull
aas
outsb
sub
sub
cmpsl
ds
movsb
lea
shr
xor
shll
aaa
jp
ret
insb
loop
popf
cs
dec
hlt
pop
or
dec
mov
aad
add
ds
pop
mov
nop
lahf
mov
cmp
and
mov
or
mov
jnp
push
push
loop
testl
pop
jge
pop
jle
enter
xor
cmc
in
mov
in
sbbl
jnp
testb
ljmp
aad
out
jne
insb
mov
mov
fisttpll
sarb
inc
ret
test
or
mov
or
out
out
mov
mov
cmp
inc
aam
sbb
shlb
in
inc
mov
data16
dec
pop
aaa
repz
sahf
push
js
push
fcom
pop
les
or
mov
in
lret
js
js
out
add
popa
pop
mov
lea
push
inc
cld
or
dec
das
jl
idivb
cmp
stos
lods
mov
mov
scas
jmp
shll
adc
and
mov
xchg
lcall
or
iret
cmpsb
fstpl
fistl
push
in
leave
jmp
cmpsl
sbb
lret
test
add
mov
mov
ror
fsubrl
cld
cmpl
push
mov
sbb
and
lds
mov
xor
lret
sbb
dec
das
insl
push
add
cs
mov
or
push
or
push
pop
loope
mov
xchg
add
xor
stos
push
dec
pop
adc
or
sahf
xchg
addr16
iret
xchg
outsl
mov
and
push
scas
add
lods
ja
mov
lret
dec
sbb
shll
lahf
icebp
fldl
fwait
mov
push
pop
cltd
fwait
adc
out
sbb
push
in
and
addr16
pop
jne
inc
cmp
in
int3
clc
inc
jne
or
push
ret
jns
add
sbb
leave
and
lods
imul
sti
nop
add
je
fisttps
cmp
xchg
inc
mov
scas
xor
pop
sub
repnz
lahf
stos
and
push
pop
sbb
pop
fld
imul
addr16
inc
jg
add
dec
shl
cmpsl
jnp
pop
fstp
in
fidivs
loop
inc
or
sti
iret
pavgb
les
sub
mov
rcr
mov
insl
jmp
push
xor
mov
xchg
flds
or
in
out
orl
add
repnz
xchg
fidivl
fldenv
daa
add
cmpsb
inc
sub
iret
cs
dec
add
sbb
dec
add
repz
or
mov
outsb
xlat
push
mov
jo
fwait
les
adc
hlt
mov
inc
mov
or
scas
xor
dec
adc
mov
sub
ljmp
lods
dec
or
push
jl
push
pop
or
dec
clc
mov
out
jo
cmp
mov
rclb
push
push
or
stos
fcoml
push
mov
xor
es
shl
sub
dec
push
push
popa
fstpl
insb
xlat
jl
dec
mov
inc
imul
xlat
xchg
push
adc
das
lds
fisubrs
je
mov
push
loopne
xlat
inc
fst
call
dec
loope
stc
xor
shrl
add
popf
xor
push
mov
lret
or
cltd
adc
ljmp
xchg
mov
pop
call
repz
xor
sbb
and
mov
je
filds
addl
bound
cmp
xchg
mov
pop
imul
dec
mov
enter
movsb
rcrl
subb
pop
addr16
inc
dec
out
mov
aam
cld
out
pop
xor
aam
push
test
movl
jnp
cwtl
test
cltd
cli
imul
popa
orl
xor
xor
test
mov
fdivs
add
movsl
cs
mov
out
out
rorl
jmp
unpckhps
out
and
ret
and
popf
sub
cmp
bound
xor
push
js
jns
out
cmpsl
loop
idivb
push
movsl
pushf
ja
cmp
frstor
adc
lods
scas
ja
fisubl
lods
add
cli
in
push
adc
mov
push
jmp
outsb
pop
pop
icebp
xor
or
data16
pop
jmp
clc
into
aam
lret
shlb
shll
ljmp
sub
sbb
mov
daa
push
mov
dec
mov
lock
jns
sbbl
mov
sub
into
cmc
mov
cmpsl
mov
xor
movsb
cmpb
jge
push
stc
sub
dec
cmp
and
ror
sbb
xchg
fcompl
sar
add
jb
pop
push
aad
mov
add
lcall
cli
cmp
or
inc
outsl
jnp
mov
cltd
pop
stos
xlat
mov
movsb
icebp
inc
pop
sarl
shll
xor
pop
scas
dec
push
xlat
lods
xor
ret
mov
js
cmp
cmp
cwtl
mov
lret
and
into
std
inc
cld
dec
das
mov
inc
inc
push
pop
jno
out
in
insl
push
jns
gs
enter
in
sbb
divl
fs
mov
xorl
inc
fldt
or
loopne
xchg
jo
inc
jmp
sahf
imul
rol
aaa
fisubl
add
adc
push
mov
ret
aad
jno
mov
in
scas
xor
insl
add
arpl
aas
xchg
sub
jno
pop
inc
sbb
clc
or
lods
inc
push
jno
push
or
adc
es
sbb
adc
in
push
lret
int
pop
mov
and
jo
push
lret
push
sub
lcall
das
pusha
push
mov
lock
inc
or
call
frstor
mov
add
mov
in
pop
shlb
les
addl
jns
std
shrl
jo
inc
jmp
std
and
jnp
sbb
xor
call
call
xchg
mov
inc
mov
mov
mov
icebp
lcall
and
mov
sub
push
and
arpl
mov
clc
lds
dec
mov
and
xchg
rolb
sub
ds
aam
es
mov
subl
sti
into
icebp
cwtl
jge
arpl
xchg
fcoms
jb
xchg
pop
pusha
and
in
sbb
inc
inc
add
decl
in
clc
xchg
push
jle
xchg
jecxz
dec
push
pop
cmp
pop
fcomps
jb
mov
jbe
sub
push
cs
insb
das
adc
mov
push
jno
shll
xlat
shlb
loope
inc
cld
pop
xchg
or
adc
dec
movsl
sbbb
mov
out
inc
dec
out
dec
xchg
out
cld
push
ret
push
mov
or
mov
aas
push
loope
cmp
or
into
jmp
ret
bound
mov
dec
cmc
lods
out
and
adcb
dec
and
fsubrp
arpl
movsb
pop
mov
mov
fistpll
dec
scas
mov
aam
bound
mov
repz
scas
out
int3
insb
xchg
jle
mov
mov
in
push
je
ds
les
std
mov
pop
xchg
sbb
xlat
std
cld
pop
xchg
in
and
int
xchg
addr16
fisubrs
dec
sub
outsb
aad
cs
push
in
mov
outsb
bound
popa
cmp
fisubl
cmpsl
pusha
cmpsb
fdiv
push
add
test
sbb
stc
in
mov
repz
lock
dec
into
push
dec
icebp
adc
jnp
leave
dec
xlat
sbb
inc
bsr
push
push
push
adc
imul
into
not
pop
gs
fstpl
in
ljmp
ret
lock
addr16
ja
in
push
cs
aaa
retw
insl
es
rorb
jl
or
shll
hlt
jmp
scas
jns
out
cmp
pop
push
ret
add
rcrb
call
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
rcrb
and
pop
push
xchg
xorl
stos
pop
cmp
inc
sbb
sub
fwait
imul
enter
icebp
lods
pop
add
cli
rol
shll
and
notb
inc
fs
pop
movsl
mov
mov
shlb
rolb
lret
aaa
clc
stos
cli
mov
cmp
mov
dec
sub
movsl
bound
sbb
leave
sbb
push
int
add
je
mov
jne
outsb
fs
lcall
push
and
jge
dec
pusha
sbb
xchg
pop
ret
lcall
push
loope
cmp
scas
aad
fdivl
inc
hlt
adcl
adc
test
add
lret
mov
sbb
sub
sahf
test
fdiv
test
test
jmp
pop
pop
mov
cmpsl
mov
gs
rol
cli
int
shll
mov
or
shl
add
das
int
cs
int3
inc
mov
add
in
in
mov
cli
jae
lcall
push
mov
cmc
jge
push
loope
push
xor
daa
sbb
sbb
in
dec
mov
repnz
add
jbe
jo
movsl
flds
push
aam
inc
fcompl
lret
or
mov
inc
mov
xchg
xchg
shlb
mov
xchg
mov
rcll
pop
lea
xlat
mov
cmc
ret
imul
add
mov
incb
hlt
cmp
inc
xor
hlt
outsl
aaa
jno
popf
cmp
pop
imull
lods
pop
cmp
xchg
sbb
pop
inc
bound
hlt
inc
cld
mov
mov
repnz
cmpsb
adc
rorb
add
sahf
add
xor
sub
pop
stos
mov
andl
rcl
pop
fstps
pop
adcb
adc
inc
mov
int
sahf
or
test
mov
jae
pop
mov
push
mov
mov
jb
mov
xchg
fimuls
repnz
testl
aaa
add
out
push
sub
add
hlt
iret
sahf
push
mov
jbe
test
shlb
xor
fidivs
stos
push
sbb
mov
xchg
add
aas
mov
loope
repz
iret
icebp
fildll
fsubrl
jnp
in
push
clc
or
frstor
test
mov
cmp
push
add
leave
xchg
dec
scas
lods
dec
mov
mov
push
orb
sbb
adc
adc
jecxz
mov
data16
inc
dec
aaa
adc
mov
loop
jo
push
or
adc
push
xchg
addr16
xchg
not
ret
or
rolb
icebp
out
stos
popa
nop
adc
test
mov
cmc
pop
outsb
sub
xchg
mov
rcr
and
or
cli
adc
dec
test
sti
or
pusha
xchg
jle
in
xchg
or
mov
in
push
mov
shll
mov
ficoml
jbe
mov
mov
lret
loop
adc
stos
mov
das
enter
dec
lret
and
cmc
xchg
pop
je
pop
pop
cmpsl
and
stc
cmpl
pop
mov
fnstsw
ud1
into
into
jp
out
mov
pusha
cli
fstl
dec
and
outsl
fadd
popf
mov
add
inc
gs
pusha
in
or
xchg
jg
jmp
sub
add
or
mov
scas
dec
sti
sub
cs
fsubrl
out
test
popf
test
push
movsb
inc
in
and
dec
xor
push
ffreep
mov
rcrb
mov
js
pop
inc
loopne
sub
mov
sbb
fs
test
jmp
jno
xor
xor
ljmp
js
mov
xchg
mov
mov
aaa
jnp
jle
mov
or
hlt
sub
addr16
adc
iret
push
mov
pushf
sub
hlt
int3
aad
icebp
idiv
test
dec
push
mov
pushf
cs
rorb
repnz
push
fldl
inc
mov
stos
je
lods
or
jae
sub
lret
scas
shll
xchg
or
dec
jnp
stos
mov
nop
or
testb
mov
jo
call
adc
xor
mov
sub
fsubr
xlat
fwait
mov
push
inc
inc
fs
jmp
es
dec
repz
pop
adc
sub
xorb
push
sub
repz
xchg
loope
jno
lock
add
roll
les
lods
ds
mov
push
xor
ds
bound
or
jne
sbb
pop
test
mov
pop
xchg
push
mov
push
ds
cmp
fiaddl
mov
repnz
push
xchg
es
stos
stos
cmp
int
sti
mov
sbb
pop
and
dec
sbb
and
cmc
cmpsb
mov
mov
and
aas
icebp
stc
iret
lock
jge
push
movsl
xor
pop
lock
mov
and
sub
call
out
movsl
popa
imul
or
push
or
inc
jg
in
clc
int3
jnp
inc
das
xor
add
insl
popa
xchg
push
push
and
xor
fists
pushf
jne
dec
pushf
jge
aas
inc
in
ja
es
sar
xor
andl
aam
clc
in
push
jp
ja
insl
shlb
mov
cmp
in
push
rcl
test
ret
clc
popa
and
fimull
dec
jecxz
pop
pop
jge
mov
adc
sahf
fcomps
mov
shll
movsb
sahf
push
adc
popf
push
add
push
inc
fwait
xchg
cmpsb
fmul
xchg
adc
dec
js
pop
filds
sbb
jge
iret
mov
dec
icebp
and
movsw
sbb
add
mov
pop
fucom
lods
in
clc
inc
dec
and
filds
adc
decl
js
cs
or
lret
push
inc
lods
inc
xor
xor
pop
add
fidivl
jb
mov
out
or
jnp
addr16
popa
adc
hlt
outsb
push
jl
xor
enter
lcall
jbe
and
das
inc
fadds
pushf
dec
jg
mov
and
xchg
int3
jg
push
sub
xchg
push
mov
mov
lcall
sub
dec
adc
pop
push
pusha
add
test
mov
mov
cmc
xchg
int
faddp
or
push
mov
xor
mov
sbb
xchg
int3
cmpsb
and
out
in
sbb
sarl
cmp
dec
pop
arpl
xor
xchg
jns
stc
push
mov
stc
stos
cmp
int
pop
inc
fists
or
pop
test
out
mov
iret
mov
subl
inc
mov
lret
push
je
xchg
dec
inc
in
pop
mov
lret
push
jg
scas
add
pop
pop
lcall
mov
add
mov
in
sbb
int3
and
adc
pushf
loop
sbb
mov
lcall
into
inc
lret
sub
fs
cmpsl
pop
mov
in
xor
mov
cmpsl
jne
dec
jnp
out
data16
cmp
inc
jae
pop
push
xchg
sbb
xorb
stc
int
mov
inc
add
ja
cltd
adc
subl
xchg
push
in
bound
adc
idivb
faddp
lcall
xchg
lock
xchg
fidivs
fmul
push
pop
bound
sub
dec
xchg
test
sarb
ficoms
mov
loopne
sbb
and
push
aaa
rclb
or
mov
mov
lahf
in
pop
or
xchg
nop
add
jb
pushf
sbb
dec
push
pusha
testb
adc
fdivl
and
stos
add
jo
dec
xchg
stc
fwait
dec
dec
xchg
nop
daa
lds
fsubl
cmp
adc
fninit
sarl
sbb
pop
lods
bound
cmp
frstor
out
call
pop
popf
lret
sub
add
nop
push
pop
inc
cwtl
mov
jecxz
mov
lea
mov
int
cmpsb
imull
mov
sub
push
nop
lds
mov
jo
jecxz
insb
sub
inc
pop
mov
mov
sahf
mov
mov
insl
loope
loop
mov
sub
mov
sub
mov
inc
fldl
xchg
in
lds
loopne
js
popa
ss
in
push
in
pop
loopne
inc
and
ret
fidivrs
stc
lahf
pop
push
aas
cmpsb
adc
xor
les
and
imul
jae
outsl
pop
aas
mov
adc
mov
or
mov
pop
jp
jmp
pop
fldl
adc
xchg
pusha
jmp
mov
xchg
dec
test
mov
daa
repz
lahf
sbb
dec
adc
cmpsb
iret
mov
cmp
faddl
jo
hlt
arpl
fnstsw
sub
pusha
les
jb
pop
test
enter
mov
push
push
pop
dec
mov
push
cmp
adc
cltd
into
ret
lods
stos
sahf
loop
ds
stc
sbb
dec
xlat
dec
fsubr
mov
mov
xor
jle
clc
movsl
add
sti
shr
add
sub
inc
pop
mov
faddl
cli
fs
mov
push
mov
sbb
test
popf
adcl
hlt
test
cmpsl
mov
or
scas
out
insl
in
repz
pop
push
ficoml
push
adc
push
rclb
mov
mov
adc
sbb
mov
stc
sub
cmp
icebp
and
repnz
test
xor
test
fistl
dec
push
mov
mov
pmovmskb
mov
in
aad
or
push
mov
dec
push
push
push
jle
and
int
cltd
aam
xchg
jmp
pop
or
test
add
pop
pop
mov
and
push
jmp
push
push
adc
sub
ljmp
mov
pop
xchg
popl
lods
fldenv
or
pop
sahf
shrb
or
mull
sbb
xor
lcall
add
outsb
repnz
adc
cli
insl
mov
inc
pushf
int
and
insb
incl
fs
lcall
jle
dec
adc
push
mov
repz
lods
lret
dec
aam
jae
rolb
jne
test
push
push
cmp
mov
into
push
xchg
cltd
add
sbb
dec
add
dec
enter
imul
shr
imulb
stc
subb
cltd
dec
es
fcompl
ss
sbb
sub
push
shll
ret
dec
loope
int3
cmp
jg
dec
test
xchg
mov
out
mov
cmp
enter
dec
out
push
xchg
lsl
rcll
pusha
jle
pusha
push
pushl
add
or
xchg
mov
push
mov
push
in
cmp
je
push
sar
add
add
and
call
jg
test
icebp
cmp
sub
mov
inc
sub
shrb
pop
cmpsb
xor
insl
stos
cwtl
repz
movsl
les
xor
jmp
mov
sbb
pushf
std
cmp
add
xor
push
repnz
mov
repnz
shlb
xor
or
adc
pop
push
cmpl
xchg
fwait
lods
xor
xor
push
add
cmpsb
inc
inc
mov
out
orl
out
inc
push
stos
dec
loopne
cld
jl
lcall
in
sbb
inc
fs
lea
fisubrs
das
pop
ja
push
jbe
pop
icebp
cmc
mov
jno
into
out
shrl
adc
jnp
push
cmp
loop
add
dec
aaa
mov
ret
fninit
loopne
lret
shrb
ljmp
pop
stc
fdivl
or
or
jo
cmp
push
cli
arpl
cmp
xchg
out
pop
cmpsl
stc
test
out
enter
or
push
jp
cld
shl
mov
mov
mov
in
cwtl
dec
or
adc
clc
add
addb
xlat
test
mov
test
dec
push
aaa
cmp
jae
jne
mov
popf
xor
inc
imul
popf
inc
pop
cmpsb
mov
aam
push
stos
pushl
jp
xchg
test
mov
jg
aas
rorl
add
lds
mov
inc
cmp
test
inc
jae
sub
int
in
repz
js
les
loop
fs
cmp
test
lods
es
and
sbb
xchg
adc
in
add
ret
xchg
rolb
inc
mov
ret
insb
adc
and
imul
jge
into
and
xchg
lods
sbb
roll
push
lods
inc
fstl
jp
cmp
add
iret
fldenv
enter
ss
movb
out
test
or
aaa
adc
rorb
test
or
lahf
mov
mov
scas
and
ds
negl
ret
cmp
sub
xchg
ret
mov
dec
mov
fidivrl
push
rcl
push
sub
fcoml
test
xor
ds
out
mov
ja
movsl
int3
xor
inc
xlat
daa
inc
pop
mov
xor
sub
pusha
in
popa
cs
das
xchg
enter
mov
dec
inc
sbb
inc
and
rcl
push
scas
ret
pop
pop
mov
andb
mov
gs
std
sub
xchg
insb
mov
lret
jne
jl
push
xor
sub
mov
imul
and
popf
jns
stos
fwait
xchg
sub
aad
sub
push
mov
xor
add
push
xchg
incb
xchg
lret
pop
dec
cmpsl
add
int
sbb
mov
fistpl
imul
in
cmp
push
pop
test
mov
add
cli
mov
seto
xor
fiadds
loope
jle
adc
sub
sarb
xor
stc
rorl
imul
add
fidivrl
lds
in
dec
mov
outsb
rol
jecxz
lock
jns
stc
ret
test
dec
mov
arpl
leave
lds
imul
push
push
inc
pop
rol
cmp
inc
push
lods
scas
mov
or
pop
adc
sbb
test
dec
cs
cmp
cmp
add
add
mov
or
inc
pop
mov
xor
jae
in
popf
mov
imul
xor
mov
popa
mov
xchg
lret
dec
or
adcl
sub
jns
add
sahf
inc
push
in
and
sub
push
jg
addr16
jo
rorb
push
adc
push
jnp
add
lea
and
sub
icebp
and
push
in
jb
mov
loopne
or
sbb
xor
movsl
out
jle
mov
bound
xchg
adc
aaa
inc
mov
or
mov
cli
push
enter
xor
cmp
xchg
test
mov
and
xchg
imul
gs
dec
ss
adc
dec
push
xchg
ret
xchg
mov
orl
pop
add
in
cli
ds
jg
aad
push
clc
pushf
jno
pop
sbb
aam
rcll
mov
cmp
ss
cmp
loope
jnp
xchg
nop
mov
pop
aas
mov
ret
lods
cmp
dec
loop
xchg
xchg
das
sub
sub
sbb
xchg
mov
inc
push
pop
out
cmp
decl
fsubrl
ss
inc
xor
dec
inc
scas
rcll
or
lods
push
mov
repnz
stos
add
cmp
adc
jns
push
jl
pop
aaa
inc
int3
sahf
mov
adc
pop
xor
dec
insb
mov
cld
push
xchg
mov
notb
cmp
xlat
inc
lea
push
out
xchg
xchg
addl
or
int
imul
mov
out
xor
insb
cwtl
sub
addr16
sbb
xor
scas
xchg
or
scas
and
lock
sbb
lcall
mov
and
test
sub
fimuls
xchg
add
fldl
js
and
mov
stos
pop
pop
aad
out
mov
sbb
out
mov
add
add
mov
fidivs
std
cmpsl
mov
or
idiv
pop
loope
movsb
mov
jp
xchg
mov
xchg
inc
pop
dec
xchg
int3
das
jg
jecxz
and
imul
daa
adc
enter
clc
and
repnz
xor
adc
insl
dec
frstor
pop
pop
pushf
insb
dec
pop
inc
out
pop
pop
pop
cmc
shll
scas
cmp
pop
mov
in
push
lcall
popl
push
lods
mov
cmpsl
xlat
dec
ficoml
ljmp
cmp
fs
push
test
test
pop
mov
sbb
mulb
cmp
xchg
lcall
stc
pop
stos
sbb
mov
dec
xor
or
xor
leave
sub
mov
fdivl
push
sub
scas
cld
sarl
mov
jmp
popa
clc
pop
pop
rclb
jo
add
or
subl
je
aas
iret
cwtl
stos
inc
mov
fwait
loop
jne
hlt
filds
sub
dec
pop
add
xchg
inc
push
loop
fdivrs
ror
pop
cmp
js
in
test
lahf
and
aad
in
xlat
mov
dec
sbbl
xchg
insb
in
push
xchg
inc
hlt
sub
inc
jne
push
je
clc
sub
xor
sbb
adc
andl
cwtl
insl
fcmovnbe
nop
lods
push
adc
iret
fidivrs
jae
sub
aad
or
mov
jne
mov
fucomi
subl
call
push
stos
and
pop
mov
mov
cmpsl
and
gs
aad
and
pushf
pusha
cmp
mov
fisubrs
mov
or
bound
pop
gs
es
jmp
leave
shrl
cmpsb
pop
push
mov
adc
mov
adc
xor
lret
and
outsb
jo
dec
sti
movsl
push
fs
pop
xchg
and
mov
fsubs
xchg
dec
jecxz
fwait
das
and
andl
xchg
rcrb
test
mov
mov
popf
or
jl
inc
sub
push
mov
xor
into
mov
pop
sub
loopne
xchg
xor
xchg
subl
inc
stos
repz
push
sarb
or
lods
pop
int
xchg
sahf
dec
or
jl
xchg
test
mov
dec
sbb
lock
sbb
dec
cmp
aad
in
mov
popa
mov
pop
fildl
das
rcrl
mov
out
aaa
and
sub
stos
movsb
sbb
add
jns
mov
inc
sub
sub
ljmp
pop
jns
rolb
lods
addr16
inc
mov
cmp
dec
push
iret
jo
fwait
mov
pop
fsubl
popa
lock
loopne
jbe
iret
sahf
or
inc
mov
jle
orl
andl
stc
add
inc
adc
lret
dec
sub
sub
sbb
inc
or
insb
hlt
inc
mov
or
cmp
lret
or
add
xor
lods
fadds
ds
aam
xor
sti
jmp
cli
lcall
rorl
es
cmpsb
aam
inc
or
jle
pop
loop
jns
leave
mov
xor
loop
push
sbb
cmp
xor
cmc
inc
orb
js
shl
mov
add
mov
jnp
push
sub
dec
shlb
push
cmp
add
or
loop
loopne
call
jp
lcall
imul
lret
dec
cwtl
shr
sahf
ljmp
stos
jae
jno
mov
pop
lock
pop
sbb
repnz
aaa
insb
push
sub
mov
pop
add
xchg
xorb
daa
test
mov
and
mov
jne
jmp
jmp
push
add
pop
adc
arpl
and
lret
daa
stos
xor
cs
sub
push
fs
mov
into
jmp
aad
mulb
gs
loop
int3
mov
jge
mov
sub
jle
sti
dec
cmpsb
outsb
dec
lahf
lock
pop
scas
mov
mov
iret
mov
addb
add
pop
rcll
adc
jne
in
inc
xchg
iret
sub
sbb
and
mov
int
adc
dec
sti
jge
adc
test
push
push
in
in
in
xorl
call
lods
outsl
je,pt
or
movsl
testl
cld
cmp
pop
or
or
pop
add
pushf
int
cmpsb
inc
lsl
cmc
xor
bsf
dec
subb
sbb
insb
lahf
add
mov
mov
ret
inc
jge
lret
aaa
test
jbe
std
jo
test
dec
inc
ja
sub
push
ret
lea
jae
lea
cltd
insl
cmpb
addr16
xchg
in
repnz
movsb
mov
notl
pop
or
clc
and
dec
sbb
xor
ljmp
sbb
push
mov
mov
nop
mov
mov
pushf
jge
shl
pop
lock
and
jp
xchg
stos
loop
cmp
loopne
imul
mov
stos
sub
sub
xchg
inc
pop
push
imul
sub
and
or
dec
cs
sbb
inc
stc
cmp
popa
mov
push
arpl
stos
mov
sbb
xor
fdivp
mov
push
loopne
jo
dec
adc
ror
xor
add
xorl
aad
xor
in
add
loop
sub
mov
mov
ja
jecxz
and
imulb
sahf
push
imulb
add
shrd
outsl
lea
jp
inc
mov
sub
cwtl
sub
pop
cld
push
insb
repz
fsub
push
pusha
mov
sbb
ja
lods
inc
lret
mov
lea
inc
fildll
xor
jmp
pop
fnsave
mov
mov
and
das
daa
outsl
mov
aad
bnd
mov
out
test
xchg
sbb
outsb
bound
pop
mov
sbb
je
lock
pop
jo
inc
js
inc
cmp
in
call
sub
xor
push
icebp
stos
and
iret
in
es
and
mov
ljmp
test
xchg
sub
mov
inc
sbb
dec
out
lcall
cmpsl
cmpsl
lret
push
and
add
push
incl
mov
sub
or
xor
test
or
pop
mov
xor
mov
das
enter
fdivl
inc
loopne
je
mov
xor
push
pushf
scas
push
sub
ja
pop
fs
popa
sbb
fsubr
repnz
mov
mov
jecxz
cmp
pop
sub
das
cs
lret
xchg
pop
outsl
popa
jg
pop
pop
inc
daa
or
cld
int3
adc
jmp
scas
mov
inc
js
jae
dec
jb
addl
push
jl
jns
push
fldt
add
xchg
cld
pop
test
jecxz
add
mov
fwait
mov
aas
sub
sub
dec
push
loop
add
jmp
cld
sbb
jb
sbb
movsl
xor
loope
xchg
ljmp
lock
lret
ljmp
gs
xchg
xor
jo
repz
in
clc
sub
cmp
jge
cmp
mov
leave
sub
inc
mov
inc
call
cmp
das
dec
mov
adc
andl
movsl
fisubl
jp
jl
xor
leave
pop
sub
int
lret
sbb
sub
pop
or
call
mov
mov
mov
jp
das
aam
std
test
ret
je
push
and
sarl
cmp
jge
adc
push
outsb
and
adc
js
test
sbb
pop
in
daa
test
inc
pop
fs
sbb
int3
into
or
jb
fildl
cwtl
sbb
je
sbb
mov
push
mov
mov
push
push
fcompl
cmp
add
pop
sub
push
inc
incl
inc
sub
push
movsb
loopne
test
xchg
movsl
pop
cmp
pop
pop
data16
imul
xchg
mov
xchg
in
movsb
ja
mov
mov
and
sub
mov
sbb
mov
int3
mov
outsb
popf
outsl
jle
mov
jmp
push
das
sbb
scas
loope
in
jp
in
xor
jnp
in
cld
mov
mov
inc
sarb
in
adc
test
in
movsl
or
push
subb
mov
dec
loop
jle
pop
clc
jle
pop
inc
sub
mov
pop
scas
mov
xor
push
push
pop
aas
lds
lods
lea
fldt
jge
shll
cmpsl
shll
sub
jecxz
cltd
loopne
push
add
push
les
add
pop
cmp
cmp
mov
cmpsl
mov
cmpsb
push
sbb
pusha
cmp
shr
mov
lret
mov
xor
jmp
fsubs
mov
cs
lret
inc
or
int3
lcall
inc
or
mov
mov
pop
clc
cltd
xchg
shrl
sbbl
mov
or
cmp
or
adc
dec
subb
jp
mov
adc
pop
mov
lcall
ja
or
pop
mov
cltd
mov
gs
mov
scas
xchg
adc
sub
pop
cmp
mov
rorb
test
or
lds
xor
sbb
push
xchg
dec
das
mov
xchg
pop
push
pop
popf
cmc
in
cmp
xlat
xor
popf
int3
cmp
push
sbb
push
xchg
nop
pop
sub
push
nop
std
or
jle
call
mov
push
lods
adc
push
xor
jg
fcmove
cmp
pop
sub
mov
mov
leave
cmp
sub
stc
aam
jno
inc
imul
adc
movsl
sbb
divl
jecxz
aam
loopne
fcomps
xchg
or
mov
cmp
ds
xor
out
jmp
loop
mov
test
mov
cs
in
test
xor
dec
mov
imul
fiaddl
ljmp
xlat
push
xchg
push
mov
rcrl
aas
insl
push
shrl
xchg
cli
je
mov
das
out
mul
mov
inc
push
clc
rorl
mov
add
mov
mov
adc
imul
into
jo
popa
stos
lock
or
das
ss
inc
mov
xchg
and
int
insl
jbe
adc
in
std
in
mov
sub
sub
jp
fistpll
je
and
sbb
imul
cmpsb
in
xor
sub
cmp
fcoms
scas
or
adc
push
ljmp
je
mov
dec
mov
mov
les
fisubrl
add
stc
leave
into
shrl
ret
cwtl
jno
mov
adc
sbb
inc
sub
mulb
loopne
mov
inc
push
dec
imul
cmpsb
push
shrl
lods
or
push
mov
aad
in
jmp
int3
jb
xchg
stos
inc
push
push
fidivrs
out
cld
out
cld
push
push
fdiv
cmp
stos
fdivl
xchg
insl
sub
mov
cld
out
jns
mov
jmp
shl
in
addr16
add
ret
mov
cmp
shll
lods
sahf
sbb
bound
mov
adc
jge
stc
xchg
movsb
push
dec
in
or
sub
xor
adc
mov
test
and
xchg
and
loopne
sbb
rorb
fs
pop
sbb
xchg
jle
xchg
xor
add
aaa
mov
xchg
test
daa
xchg
and
pop
cltd
push
divl
aaa
xchg
mov
popa
rorl
xor
shlb
iret
imul
lret
test
lret
out
push
cmp
and
xor
push
add
pop
sarb
lcall
shlb
test
mov
cwtl
addb
pusha
jecxz
mov
mov
mov
mov
loop
add
ja
add
sub
js
dec
mov
xchg
sarb
fistpl
pop
and
ret
stos
pop
mov
or
out
jmp
and
inc
inc
repz
jecxz
mov
out
sub
pop
sti
ficoms
xor
mov
inc
push
sub
or
nop
iret
outsl
mov
outsl
cld
and
pop
mov
cmc
jecxz
add
adc
inc
mov
adc
ljmp
cmp
mov
pavgw
mov
xlat
int3
cmc
adc
mov
fwait
add
ret
mov
inc
pushf
cmpsb
jecxz
add
push
leave
out
jp
dec
cmpsb
cmc
in
mov
mov
sbb
adc
jp
adc
call
and
xor
mov
push
scas
mov
pop
test
mov
xor
movsb
icebp
das
subb
fisttps
cmp
imul
pop
fxch
call
jnp
jo
jo
loopne
call
dec
fdiv
jl
adc
xor
std
aam
jp
pusha
jae
xchg
xchg
call
in
mov
adc
insl
mov
adc
insb
test
aaa
ss
add
push
mov
movsb
into
mov
mov
pop
or
imul
scas
movsl
shrl
pop
inc
jg
mov
loop
nop
dec
or
sahf
add
dec
push
sbb
xchg
rcr
les
adc
daa
sub
addr16
out
ja
sub
pop
test
jmp
dec
inc
in
test
jne
rcrl
repnz
popf
decb
mov
movb
movsb
cs
or
gs
push
stos
sti
fimull
int
xor
loopne
test
xchg
or
std
frstor
jp
movsb
pop
mov
aaa
test
and
adc
push
jp
pop
xlat
sbb
xor
push
jns
sub
jae
fsubrl
pop
scas
xchg
lret
in
sar
dec
mov
cmp
scas
je
les
mov
dec
std
push
push
push
and
popf
loop
pop
popf
dec
mov
cmp
sahf
sub
les
pop
jl
mov
lock
repnz
or
pop
adc
add
call
mov
les
inc
out
cmpsl
and
cli
rcrl
jae
sti
xor
cmp
xchg
xchg
pop
movb
pop
mov
pop
adc
iret
inc
in
xchg
fsubrl
mov
push
iret
and
aad
sbb
popa
add
cmp
cmp
or
shll
xor
decl
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
jns
int
int3
xor
inc
pop
jl
ja
lcall
mov
cli
mov
mov
sub
repz
mov
sub
out
out
sub
pop
push
sahf
inc
fldt
dec
movsb
hlt
fwait
in
outsb
fimull
aam
sub
outsl
aam
stos
jnp
mov
push
iret
ret
inc
ja
scas
sub
ljmp
adc
scas
lock
std
fisubl
das
or
in
mov
in
loop
inc
dec
in
or
sbb
cmpsb
push
arpl
daa
mov
push
adc
sub
adc
stc
or
pop
cmp
lea
hlt
sbb
sub
lahf
jo
add
lods
test
insb
jecxz
xor
jecxz
das
adc
mov
divb
test
data16
mov
jmp
mov
ss
fsubrs
into
xchg
lahf
mov
ret
std
mov
xchg
fst
out
sbb
ret
dec
mov
or
adc
pushf
sub
popl
in
fsubrp
push
mov
dec
inc
push
pop
ret
negl
push
cmp
cltd
insb
cmp
popl
lods
imul
ja
sbbl
scas
xor
and
nop
lahf
push
addr16
ljmp
inc
inc
les
sahf
inc
fstpl
mov
inc
xor
test
mov
dec
enter
mov
xchg
aad
sub
inc
pop
loopne
sbb
std
mov
insl
xchg
shlb
ficompl
sar
push
stos
xchg
inc
jl
dec
fisubs
lahf
cmpsb
ds
mov
mov
xchg
shlb
test
inc
xor
fisttps
cmp
int
mov
add
or
inc
and
addl
inc
mov
jle
pop
fstpl
xchg
mov
jb
push
addr16
movhps
enter
cwtl
divl
inc
negb
dec
loope
js
mov
ret
dec
ret
ljmp
test
mov
xor
cmc
jno
or
dec
ret
inc
jl
ja
xchg
inc
ja
je
add
cmpsb
or
and
or
imul
hlt
pop
dec
insb
add
and
cmc
mov
xchg
movsl
int
mulb
inc
or
popa
fiaddl
push
xor
inc
in
das
arpl
cmp
stos
pop
rclb
add
push
das
cvtpi2ps
jne
pusha
push
or
psrad
pop
dec
cmp
mov
xor
push
cmpsl
sbb
ret
rolb
gs
stos
movsl
mov
cmp
or
aad
jle
rol
sub
mov
sub
jo
push
stos
rorb
xor
mov
jp
sub
bound
xchg
mov
fisubrl
jg
test
xchg
pop
icebp
cmp
pop
je
repnz
rep
xor
and
push
shll
es
mov
sbb
daa
clc
bswap
rcrl
adc
xchg
sub
test
jae
fisubl
add
fst
push
cmp
cmp
out
ja
lahf
movsl
mov
inc
xchg
outsl
neg
jp
aaa
sti
leave
mov
add
out
icebp
xor
sub
fdivp
mov
ret
sbb
or
add
inc
pop
mov
push
push
std
lods
ds
addr16
test
mov
inc
arpl
push
jl
add
dec
sti
pop
mov
out
xchg
inc
aam
outsb
jle
mov
rcrl
loop
push
loopne
fcmovnb
dec
stos
out
icebp
push
movsl
fimull
mov
inc
in
mov
jns
fisubl
movsb
jne
es
incl
xchg
mov
ret
cmc
ds
aaa
pop
ss
cwtl
adc
pop
aaa
mov
pop
outsb
pushf
mov
insb
dec
loop
loopne
mov
mov
insl
sarl
jl
sub
jecxz
or
imul
pop
or
add
test
or
movsb
jnp
sub
inc
cmpsl
pushf
cltd
jns
xlat
cld
and
addl
sbb
pusha
fiadds
pop
mov
out
call
dec
jg
movsb
cmp
push
cmp
scas
sarl
pop
mov
mov
pusha
push
out
mov
cmp
adc
pop
mov
out
and
adc
pop
orl
mov
xchg
pop
mov
addr16
cmp
add
or
cmp
pop
fcom
and
mov
mov
mov
lea
push
mov
fdivl
jns
repnz
lcall
mov
or
mov
sub
fsubrs
stos
in
lds
push
push
jbe
ret
adc
xor
or
repnz
xor
fdivrl
lods
cwtl
mov
and
fmuls
gs
cmpsb
sti
adc
arpl
into
adc
sub
xor
jno
dec
lods
shl
stos
lock
jb
pop
fdivp
cmp
and
push
sbb
call
into
daa
and
loopne
or
adc
fistl
aad
fisubs
mov
mov
fwait
pop
xor
add
pop
add
hlt
out
fcmovnu
pop
dec
adc
repnz
loop
xchg
ss
mov
cmp
es
das
pop
hlt
mov
incb
jns
mov
push
call
adc
xchg
inc
popa
lods
xor
sub
pusha
lock
sub
repnz
pop
mov
into
and
pop
cmp
jne
pop
imul
fldenv
enter
mov
cmp
call
gs
setle
or
sub
xchg
mov
jne
inc
fcmovne
fs
sbb
cmp
or
sahf
out
aad
popa
rcll
xor
mov
or
les
xchg
cmpl
sarl
mul
mov
lret
inc
test
add
das
sarb
mov
xchg
mov
sub
lahf
insl
repnz
pop
mov
loope
lock
daa
inc
xchg
adc
insb
xadd
outsb
push
dec
xorl
lock
mov
fbld
adc
mov
test
xchg
imul
adc
mov
push
inc
inc
nop
inc
add
dec
imul
das
adc
sub
inc
cmp
jp
mov
pop
mov
dec
das
out
pop
repz
xchg
sbb
add
popf
mov
out
ss
rcl
cwtl
and
call
xor
fdivrs
mov
dec
lcall
push
fistpl
dec
es
inc
sub
shll
inc
inc
lock
shll
xchg
insb
jb
xchg
bound
mov
adc
pop
popa
fildl
jp
pushf
loop
dec
call
mov
enter
f2xm1
push
outsb
mov
loope
inc
out
shlb
pop
std
cmc
movl
bound
inc
sub
mov
mov
cmp
cmc
loop
cmp
mov
add
inc
pop
push
bound
outsb
mov
out
xor
push
sbb
loop
int3
mov
lods
fldenv
gs
jo
mov
mov
pop
or
and
inc
loopne
std
aad
das
jl
pushf
sub
cltd
jp
pop
inc
mov
scas
movl
jo
inc
out
aad
xor
out
jmp
jg
rclb
dec
lahf
sti
cld
iret
cmc
mov
inc
call
leave
aad
fwait
jne
bound
cltd
inc
faddp
and
pop
test
daa
mov
push
or
and
cmp
aas
cltd
fldl
inc
mov
xlat
gs
xchg
jecxz
push
adc
cmp
push
xchg
sbb
push
fsubrs
sbb
pusha
insb
movsb
jg
xchg
fcompl
inc
xchg
in
lock
push
test
xchg
test
sahf
dec
int3
cmp
dec
sbb
out
mov
or
shll
fcmovu
hlt
shr
add
xlat
push
test
xor
mov
sub
xor
dec
jo
pop
dec
inc
int
and
rcl
jp
cld
add
push
dec
xor
les
scas
xor
loop
pop
lcall
adc
inc
jae
lret
sub
adc
popa
mov
cmp
adc
cs
cmp
lahf
push
mov
loopne
inc
fsubrl
rclb
jecxz
repnz
in
bound
stos
jle
icebp
add
cmpsb
subb
ret
aas
mov
pushf
mov
sbb
xchg
bound
in
mov
aas
sub
xchg
and
cmp
repz
xlat
ja
jge
jnp
scas
jp
dec
jno
inc
jmp
jle
leave
cs
xor
dec
xchg
fdiv
mov
sbb
in
and
xchg
mov
push
xchg
mov
gs
xchg
jne
das
mov
mulb
xchg
fsubrs
ret
ljmp
dec
sub
iret
fcomip
mov
fcmove
mov
xor
out
out
mov
rcl
sbb
xchg
xchg
cmp
dec
push
loope
xor
movsb
movb
sar
inc
or
inc
jae
sub
insl
es
push
popa
shlb
cwtl
inc
addb
push
mov
push
shll
nop
fimuls
mov
test
jno
movsb
fwait
cmpsb
sbb
lret
and
pop
add
jmp
fnstenv
inc
lea
es
sbb
mov
jg
or
loopne
sbb
xchg
mov
mov
add
mov
xor
lret
or
je
or
cs
insb
push
xchg
push
inc
aas
in
cmpsb
sbb
sub
inc
mov
xchg
cmp
insb
push
sar
adc
push
lea
out
hlt
mov
xor
push
mov
cltd
add
dec
sbb
leave
push
cmp
addb
nop
or
enter
imul
mov
loope
or
push
into
pop
clc
xor
es
fs
into
mov
and
movsb
adc
insb
lea
mov
call
mov
stos
or
mov
push
or
cli
add
adc
stc
push
xor
test
jno
call
add
hlt
adc
jb
pop
insl
sub
mov
ss
mov
sbb
loop
int
mov
addr16
xlat
inc
sarl
test
push
jo
call
into
frstor
mov
inc
sbb
inc
push
jnp
movsb
dec
call
sbb
inc
xchg
mov
repnz
movsl
aad
cmp
enter
sbb
loope
inc
mov
xchg
mov
mov
shl
fdivrl
jle
fadd
push
xchg
aas
fstpl
pop
insb
data16
insl
dec
stc
push
negb
push
inc
aam
jge
push
cltd
out
pop
aas
inc
addr16
mov
in
dec
cs
xor
push
sbb
push
cmpsb
push
push
std
ror
mov
xchg
push
or
push
out
mov
shll
sbb
in
mov
and
add
insb
inc
js
shr
and
xchg
mov
jb
push
push
pop
lock
ss
mov
scas
std
jle
sbb
inc
mov
int3
mov
xchg
out
addr16
mov
in
push
xchg
pop
scas
popa
out
adc
or
sbb
je
lods
xor
mov
fs
mov
lds
mov
shrb
popa
ds
or
jae
pop
lret
inc
push
jp
pop
mov
aas
aad
xchg
or
lcall
add
test
cmpsb
aaa
lret
fisttpll
or
adc
nop
and
xchg
add
mov
nop
cmp
popa
in
or
dec
iret
cwtl
jno
leave
daa
xor
push
xchg
push
pop
sbb
or
es
test
jo
push
out
jno
in
sbb
adc
fnstsw
roll
push
sub
imul
lahf
mov
test
sbb
mov
popa
das
pop
clc
cmpb
fcomp
push
aam
and
dec
imul
sbb
dec
xchg
add
in
pop
jne
test
sub
icebp
xchg
scas
int3
lods
push
pop
leave
and
xor
sbb
ds
addb
sub
lods
or
jnp
fucomip
mov
sbb
inc
dec
je
ficoms
rolb
iret
pop
xor
add
mov
sbbl
lcall
in
xchg
jp
cld
mov
sbb
mov
pop
in
sub
ffree
roll
lahf
cs
lods
inc
jbe
repz
mov
cltd
out
icebp
sbb
push
inc
dec
lahf
ficoms
mov
adc
mov
cmpsb
sti
mov
inc
mov
daa
push
xchg
in
ret
lahf
add
repz
out
sahf
or
mov
mov
orb
dec
je
dec
loop
xor
pop
shll
std
xchg
mov
mov
dec
int3
adc
insb
cmpsl
mov
mov
pop
mov
jne
dec
mov
sub
sub
cmp
cwtl
ret
push
cmp
mov
enter
ja
std
mov
mov
inc
dec
std
insb
fisttps
xorl
mov
xchg
push
test
je
or
mov
mov
mul
movsb
push
cmp
xor
push
in
andb
sbb
and
in
es
pusha
mov
xor
jp
pop
jno
loopne
daa
addr16
pop
jo
fcomps
cltd
jo
mov
cld
pop
or
lea
xor
sbb
sahf
test
mov
scas
test
xchg
cwtl
shll
imul
frstor
jnp
xor
adc
daa
sbb
adc
adc
test
push
mov
jne
mov
sub
xchg
aaa
xchg
mov
adcb
inc
leave
jb
sbb
test
int
repz
jns
cmpsl
cwtl
and
movb
aad
clc
mov
out
std
push
lea
cli
mov
jge
repz
pop
push
push
jg
cmp
ljmp
jle
xchg
addl
out
cmpsb
cmp
or
jle
mov
mov
fucom
mov
xchg
ja
cmpsb
iret
hlt
lret
jo
mov
repnz
jb
pop
out
aas
adcb
in
out
xchg
stos
int3
ret
lock
mov
loopne
loope
add
imul
push
movsb
adc
jl
sub
cld
outsl
stos
clc
or
lock
clc
fnstsw
push
fs
in
lds
mov
outsl
mov
adc
loop
inc
xor
popa
push
jmp
cmp
dec
push
sbb
popa
add
ret
jno
test
mov
negl
dec
jns
lret
dec
cwtl
pop
pop
mov
inc
pop
sahf
int3
or
leave
and
pushf
sbb
ss
mov
mov
dec
out
sbb
inc
sub
fsub
into
push
pop
andb
xor
cmp
or
jae
jecxz
mov
fisubl
jge
cmp
gs
scas
cli
pop
dec
stos
mov
mov
or
call
and
in
add
fistpl
and
jle
jmp
pop
inc
push
mov
sub
data16
repz
call
jl
les
pop
loope
jmp
rcrl
add
dec
pop
mov
inc
test
dec
push
leave
or
cli
push
jge
pop
xor
aam
push
mov
add
movsl
sbb
loop
and
mov
int3
lods
ljmp
add
in
adc
sbb
sub
cs
dec
addr16
cmp
inc
push
or
data16
bound
mov
push
xor
mov
jecxz
jl
aaa
nop
xchg
stos
imul
jb
jp
lcall
orl
imul
fldl
add
enter
sub
insb
jb
dec
mov
test
je
xor
sub
mov
push
mov
mov
pop
les
inc
mov
push
pop
popa
adc
and
mov
das
popf
in
pushf
jo
movsl
psrlw
jle
stos
push
cmpsb
mov
mov
mov
add
adc
into
filds
or
js
pop
push
ret
jecxz
push
repz
add
data16
outsb
rclb
daa
mov
jb
ret
out
icebp
lods
sub
xlat
xor
das
daa
add
mov
cwtl
jl
mov
push
cwtl
pop
sbb
pop
das
lds
add
js
jo
dec
rclb
xor
pop
dec
mov
inc
adc
mov
sbb
in
lock
ja
cs
pop
pop
inc
xchg
and
cs
daa
xchg
aaa
arpl
adc
sti
xchg
push
mov
pop
xor
or
or
fcmovnbe
ss
negb
pop
hlt
xchg
data16
hlt
lahf
lea
or
sub
adc
xor
loopne
outsb
adc
pusha
rclb
stc
adc
add
push
cs
mov
xor
mov
jbe
into
lret
mov
or
jae
ljmp
jecxz
inc
mov
das
and
stos
pop
jp
aad
dec
add
imul
stos
pop
lods
std
fsubr
lods
and
adc
std
inc
movsw
push
pushf
aam
fwait
jae
sbb
scas
lret
rorb
jb
adc
addr16
scas
cwtl
pop
adc
adc
add
icebp
clc
push
aaa
jb
dec
pop
sarl
movsb
dec
mov
out
inc
jmp
leave
sub
sub
pop
mov
sarb
mov
cld
ljmp
jno
jecxz
push
pushf
mov
cmp
outsl
mov
dec
popf
mov
push
fnstcw
sub
mov
es
ljmp
push
sbb
movsl
out
adc
in
cmpsl
lods
cmc
sub
cmp
imul
scas
decl
es
dec
sbb
movlps
data16
stc
movsl
cmp
mov
jno
jno
jg
pop
add
arpl
ljmp
adc
sar
loope
xchg
pop
cmpsb
adc
lcall
and
mov
mov
inc
inc
push
jle
mov
inc
dec
mov
jae
and
and
jmp
adc
ljmp
xor
test
dec
pop
outsb
cld
dec
int
add
cwtl
je
mull
stos
insl
cmp
imul
inc
sub
aam
jo
and
popa
jbe
js
pop
std
lret
adcl
fs
test
inc
sub
sbb
xor
inc
xchg
popf
nop
cmp
fdivrs
scas
fwait
pop
jb
into
dec
movsl
popf
ja
call
mov
pop
inc
ret
sti
and
roll
ret
pop
pop
sbb
cltd
or
movsb
cmp
orb
aam
lcall
xlat
sbb
pop
rol
pusha
mov
sub
xchg
sbb
lock
popf
sub
in
push
mov
lock
in
jmp
pop
dec
dec
cwtl
or
mov
mov
inc
out
jl
repnz
cmp
les
jo
dec
popa
inc
in
arpl
shr
push
lds
jno
mov
lods
mov
sub
adc
adc
and
scas
jmp
or
inc
xchg
add
inc
or
imul
enter
mov
pop
xor
pop
inc
std
ss
dec
pushf
mov
mov
lret
mov
pusha
mov
loope
add
sub
push
movsl
in
aaa
insb
sbb
lret
int3
sbb
mov
and
popa
mov
imul
fwait
mov
inc
push
test
popa
lcall
pusha
add
outsl
testl
mov
test
mov
add
lods
test
out
add
push
and
mov
or
mov
pop
maskmovq
rorl
dec
xor
ficompl
pop
inc
xor
insb
mov
mov
mov
cmp
add
insb
test
push
adc
push
addr16
sub
jne
je
mov
fbld
ljmp
popa
xchg
mov
push
repz
cmp
xchg
roll
jae
mov
push
xchg
fs
inc
int3
cmp
ds
or
cwtl
scas
cmp
shrb
and
int
lcall
dec
jmp
ds
adc
mov
xchg
shll
sub
ret
leave
in
shll
in
push
ficoms
cmp
adc
jp
es
arpl
gs
in
xchg
jg
shl
xchg
jnp
add
inc
hlt
sub
shl
fwait
testl
dec
mov
mov
aam
push
xchg
ss
inc
add
pop
and
inc
inc
addl
orb
jge
fldcw
sbb
mov
rorb
repnz
fucomi
in
jmp
ret
inc
adc
cmc
jle
fs
pop
pop
std
ds
iret
adc
jno
rolb
ljmp
sbb
jp
inc
mov
mov
pop
adc
subb
jp
fwait
sub
stos
push
das
test
fcmovu
and
in
scas
jle
cmp
xor
sbb
and
std
lret
sub
fcoml
mov
jle
pusha
loope
es
xor
flds
cltd
lret
jnp
insb
notl
repz
add
ret
mov
adc
cld
adc
test
outsl
or
jg
das
jne
dec
mov
mov
pop
ret
imul
lcall
int3
xlat
dec
mov
movsl
loopne
jmp
pop
ret
pop
jmp
adc
ret
and
pop
dec
or
cs
add
ficoml
addr16
lea
int
ljmp
rorb
jb
cmpsb
out
arpl
andb
mov
dec
cmp
ss
insb
negb
inc
sbb
mov
sub
xor
mov
in
lock
cs
mov
cltd
lods
or
repz
lcall
ret
sbb
bound
dec
sarl
sub
lea
mov
fwait
jae
adc
test
xchg
jns
dec
xchg
hlt
dec
mov
dec
pop
and
mov
dec
fwait
xchg
stos
inc
jg
push
loop
inc
push
test
orb
mov
or
cmpsl
sub
in
and
jae
mov
in
cltd
std
leave
lret
dec
sbb
push
fcoms
xorb
hlt
mov
insb
movsl
xchg
mov
cmp
mov
imul
cmc
sbbl
push
xchg
fwait
test
jo
lret
insb
filds
gs
or
push
push
fsubrp
cltd
and
adc
mov
mov
ret
test
xor
mov
pop
xor
fwait
mov
or
mov
iret
out
ljmp
pushw
cmp
jl
lret
and
hlt
cmp
cld
shl
mov
cmpsb
jb
pop
or
mov
or
pop
pop
icebp
dec
mov
sub
inc
mov
add
xchg
stc
stos
dec
pop
mov
inc
mov
pop
std
dec
out
lods
jb
mov
cmp
sbb
inc
test
jmp
cli
adc
cmpb
pop
jb
mov
push
rcll
inc
in
fmuls
mov
xor
xchg
mov
sahf
mov
in
int
add
mov
push
push
xchg
push
mov
cmp
xor
lret
pushl
lods
cmp
iret
pop
lcall
rcll
jno
pop
aas
mov
push
inc
push
push
jge
into
out
popf
pop
nop
out
sub
jne
sub
cmpsl
sbb
mov
les
int
fsts
mov
repz
hlt
push
scas
pop
mov
std
or
jo
stc
add
sbb
das
cmp
ficompl
daa
les
mov
cld
out
cli
xor
adc
loope
push
rcll
lods
and
mov
stos
out
jns
adc
mov
xor
mov
sub
loope
fstpl
ret
mov
sbb
push
sub
repz
or
mov
jle
dec
lret
and
mov
push
lods
dec
daa
add
ljmp
dec
test
out
insb
add
loopne
roll
or
sbb
push
cmp
inc
adc
fcmovnu
shlb
sub
in
mov
cmp
popf
js
adc
cmp
jg
bound
repnz
pop
xchg
push
cwtl
shlb
mov
pop
and
sub
out
sbb
adc
fcompl
addl
mov
sub
push
cmp
les
mov
dec
pop
mov
enter
out
jne
out
cmpsb
or
inc
dec
int
or
clc
fadds
jg
lods
pop
cmc
cmp
adc
or
jns
scas
sti
mov
jge
pop
push
mov
mov
mov
dec
push
cmp
jo
adc
pop
adc
lods
jb
sahf
dec
pop
es
mov
lcall
fdivrs
xchg
sbb
push
outsb
mov
sbb
test
popa
push
bound
je
pop
jns
mov
inc
pop
in
sti
sbb
pop
stos
and
inc
sub
and
xchg
inc
mov
cld
pushf
in
mov
cmp
and
or
test
push
mov
fildll
movsl
movups
sarb
es
jg
xchg
ret
outsl
xchg
das
mov
xlat
sbb
iret
mov
push
in
and
cmp
mov
std
inc
inc
mov
add
mov
movsb
pop
push
mov
dec
iret
sti
xlat
inc
and
stos
dec
xlat
test
push
mov
xchg
sti
xor
or
mov
jns
xlat
sub
and
dec
mov
lods
adc
mov
in
pop
adc
sbb
loopne
inc
xchg
pop
movsl
fisttps
ficoml
sub
pop
std
push
rcll
xor
mov
js
inc
lds
loopne
xor
stos
fisubs
clc
sbb
inc
cmc
pop
inc
xchg
mov
fidivrl
sub
rorb
cmc
aad
cmp
add
movsb
inc
jle
xchg
cli
push
mov
xchg
mov
pop
pop
rol
mov
jl
push
push
jae
call
subb
lahf
addr16
scas
movsb
push
push
fiadds
rcrb
jl
movsl
xchg
push
out
inc
cmp
push
popf
dec
sbb
fs
mov
adc
or
push
stos
sarb
pop
push
imul
adc
out
push
sbb
popa
mov
lahf
ss
push
nop
aam
testb
add
add
inc
xor
lods
jmp
pop
insb
enter
push
std
add
ret
or
mov
jmp
add
xchg
or
cmp
loopne
xchg
xor
dec
sub
subb
call
dec
es
insb
xor
mov
repz
jbe
repz
adc
xchg
fstpt
shll
push
pusha
fucomi
mov
nop
jns
cmp
data16
loopne
fdivl
shlb
push
addr16
pop
push
add
inc
adc
sbb
or
bound
jmp
mov
push
test
out
sbb
pop
and
dec
outsb
js
dec
divb
test
icebp
jo
out
xlat
imul
shll
push
fisubs
daa
mov
ror
mov
movsb
int3
jns
xchg
jp
aad
addr16
fsubs
jge
imul
pop
dec
add
jle
pop
push
scas
ret
lret
mov
ljmp
or
dec
jge
push
inc
and
sub
outsb
in
add
push
das
cwtl
xchg
shrl
ljmp
dec
in
mov
sbb
inc
daa
lahf
cli
call
ss
lcall
bound
jne
and
adc
pop
repnz
movb
sbb
sub
pop
fmull
lahf
js
adc
jle
cmp
xor
xchg
pop
inc
pop
int
out
test
out
das
and
popf
cwtl
adc
and
out
into
xor
pop
jle
jnp
sub
dec
icebp
mov
sub
mov
mov
xchg
cmp
fwait
mov
push
fwait
inc
push
jbe
mov
mov
pusha
test
xor
sub
hlt
outsl
adc
xor
adc
push
jo
out
add
xor
shrl
lods
cmpsb
lea
xchg
ror
push
jnp
pop
rol
cmpsl
jg
add
arpl
jl
sbb
out
dec
movb
push
test
push
dec
in
adc
xchg
loope
insl
inc
mov
out
pushf
movsb
leave
jl
push
dec
lret
add
pusha
push
decl
dec
inc
fistps
dec
out
cmc
add
dec
or
jb
push
test
cmp
sub
push
mov
sub
push
add
push
adc
mov
xchg
int
jl
sbb
dec
out
je
lahf
je
out
cli
sbb
pop
lret
or
pop
inc
dec
icebp
push
out
add
nop
cli
addr16
sub
cmp
dec
jae
push
jmp
in
fwait
sbb
popf
xorl
cli
lcall
out
and
stc
mov
jnp
adc
inc
add
xchg
xor
dec
movsb
jp
adc
push
aas
xor
mov
xorb
mov
dec
mov
fidivrl
mov
int
orb
mov
mov
in
push
xor
inc
fdiv
xchg
xlat
mov
ja
hlt
shl
xchg
ds
fidivs
lret
jb
ret
fsubs
jecxz
imul
loope
lret
xchg
sbb
mov
popf
clc
xor
xor
arpl
jae
mov
outsl
jbe
out
adc
imul
fmull
loopne
stc
inc
cmpsl
jne
subl
sbb
fwait
jecxz
sarb
add
ret
loopne
les
shrl
pop
lods
fsts
add
sub
xchg
ljmp
das
icebp
push
mov
mov
push
aam
mov
aam
ss
sub
pand
inc
push
dec
dec
rcrb
xor
icebp
xor
in
rcrl
inc
std
push
arpl
mov
push
into
adc
and
xor
mov
mov
bound
xor
das
rorl
jae
aas
lret
or
scas
ds
ljmp
mov
daa
in
sbb
xchg
mov
in
repnz
mov
mov
sub
jns
mov
mov
aas
pop
push
jno
das
mov
test
sbb
sbb
pop
addl
scas
insl
adc
pop
test
mov
jb
pop
lods
and
std
mov
test
test
mov
stc
sub
dec
popf
push
scas
or
inc
sub
fsubl
mov
lea
jge
xor
push
adc
add
adc
xor
cld
add
imul
movsb
xchg
mov
cmp
cmpsb
fsubrs
imul
fdivl
mov
jle
bound
cmp
int3
fsts
mov
adc
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
mov
adc
inc
pop
jl
inc
call
sbb
fadds
imull
enter
mov
test
outsl
in
cmp
dec
or
pop
movb
cmp
stos
jl
sbb
ret
cmp
lods
cmc
mov
fistpll
bound
pop
lods
xlat
leave
dec
mov
push
mov
inc
push
into
lahf
and
fnstsw
scas
jae
nop
or
add
pop
movsb
xor
scas
xlat
mov
jno
sub
subb
fucom
sbb
and
push
add
rorl
mov
adc
jle
push
ss
mov
xchg
push
dec
xor
sub
das
pushf
cld
sahf
fimull
addb
rol
in
shrb
sub
repnz
push
rcl
mov
xor
insb
in
and
lahf
fyl2xp1
lock
addr16
mov
sti
jecxz
push
add
fiadds
insb
dec
jle
and
inc
push
and
aaa
popf
inc
add
mov
xchg
mov
mov
or
movsb
test
cmpsl
out
and
mov
imul
and
loopne
out
mov
or
clc
cmp
fildl
pushf
xchg
or
xchg
scas
pop
inc
aam
pushf
cmp
fstps
adc
mov
jo
pop
jnp
pusha
lret
push
rcrb
cwtl
push
add
pusha
adc
mov
out
scas
lret
aaa
mov
aas
repz
cs
lods
adc
iret
jae
dec
cmp
test
mov
ja
clc
test
mov
idivl
orl
and
sbb
enter
jb
movsl
xchg
scas
sbb
inc
and
arpl
sbb
fnstsw
ret
xchg
mov
and
sti
ficoml
subb
int
rorb
mov
pop
popa
ret
ret
cmp
push
jo
mov
adc
mov
jp
rol
jae
decl
repz
repz
xchg
mov
xchg
cs
sbbl
cli
mov
dec
push
mov
fistl
ret
sub
push
imul
sti
sbb
pop
imul
xchg
sub
xor
sub
or
pop
testb
dec
jbe
repz
imul
adc
fisubrl
daa
or
arpl
mov
loop
lret
mov
dec
gs
inc
xchg
mov
jmp
pop
outsb
add
arpl
sbb
out
fstpl
cmp
into
add
push
push
pop
test
xchg
and
stc
jae
fwait
ds
mov
data16
inc
dec
xchg
or
pushf
push
mov
hlt
ficompl
push
sub
xor
je
sbb
jne
sub
mov
push
xor
xchg
incl
aam
inc
xchg
xor
jae
jbe
insb
and
les
adc
inc
imul
xor
out
jno
ror
scas
jne
int3
pushl
repz
daa
sub
add
xchg
push
in
aam
jb
jo
pop
pop
jle
cmp
xor
dec
lret
mov
test
sub
js
sbb
mov
lret
sub
xchg
push
ja
fmuls
lret
js
jno
daa
repnz
hlt
aaa
xor
inc
lea
dec
pop
rclb
insb
int3
xchg
xchg
andb
push
lcall
mov
jmp
jae
insl
dec
sbb
outsl
cmp
mov
loope
mov
std
lods
add
mov
pop
pushf
les
xchg
insb
and
mov
push
push
lods
inc
add
es
hlt
stc
lods
sti
pop
jbe
adc
les
addr16
xor
cwtl
sub
mov
imul
add
in
dec
lea
jns
je
stos
out
cmc
pop
or
mov
sub
sbb
lock
xor
in
movsl
xchg
aas
mov
popa
fidivrl
orb
adc
xor
pop
pop
adc
sbb
cmpsl
xor
adc
jne
rolb
repnz
add
sbb
cwtl
jns
movsb
cmp
js
enter
mov
push
lea
pop
ret
xchg
pop
loope
mov
jo
jo
cmp
data16
das
insl
imulb
dec
xchg
fmulp
jb
jae
add
aad
inc
push
test
sub
test
out
fucomip
mov
or
pop
mov
mov
mov
shll
xchg
add
imulb
dec
pop
and
adc
repnz
mov
repnz
push
push
and
jb
daa
push
enter
iret
mull
aas
in
mov
mov
xor
fldcw
out
out
das
js
mov
scas
push
xchg
lcall
adc
neg
movups
xchg
xor
test
ds
nop
pop
and
cs
lcall
xor
or
aaa
ret
test
mov
lods
fdivr
push
sbb
mov
int3
mov
xchg
addl
jmp
sbb
push
jmp
mov
enter
pop
xor
and
subb
jno
scas
and
mov
loop
inc
fstl
clc
leave
loopne
push
adc
lods
jg
push
dec
movsl
jbe
push
mov
jmp
lcall
cmp
and
je
js
lods
leave
jae
loopne
loopne
in
popa
js
pop
aaa
jo
in
dec
lcall
mov
incl
xchg
ret
hlt
xchg
cmpsb
lds
inc
aaa
dec
push
inc
xchg
pusha
lods
loopne
sbb
jne
shll
sub
fcoml
jbe
fdivrl
pop
sub
mov
mov
test
ja
lret
xor
cltd
shlb
popa
stos
xchg
pushf
addr16
cld
fildl
ret
pop
repnz
das
movsb
mov
fs
xorps
jbe
inc
mov
cs
aam
push
rcll
cmp
inc
xor
dec
ds
in
aas
fmull
push
mov
xor
cmp
mov
add
xchg
int3
xor
inc
das
lods
mov
pop
xor
mov
cmc
mov
pop
xor
arpl
sbb
mov
pop
inc
xlat
push
push
push
sti
movsb
in
pop
push
and
aam
imul
gs
mov
lret
pop
dec
cmp
sarb
jno
or
mov
in
cwtl
jae
stos
cmp
repnz
xchg
out
add
sbb
adc
inc
shrl
mov
jno
cmc
pushf
cmpsb
fdivs
lret
mov
outsb
pop
es
mov
add
add
xchg
cmp
push
xchg
pop
adc
xor
xchg
out
and
sbb
push
std
push
mov
dec
lods
aaa
sub
scas
mov
push
sbb
sub
push
inc
push
cmp
mov
mov
aad
adc
pop
loope
daa
add
pop
cltd
in
fimull
push
js
sbb
push
ror
jae
dec
push
mov
int
or
inc
push
iret
cs
sub
fstpt
mov
mov
and
lret
pop
fwait
rcll
jg
mov
xchg
dec
fwait
xchg
pop
repz
stos
popf
flds
pushf
add
enter
mov
lods
and
adc
pusha
xchg
or
mov
mov
call
aas
shlb
push
stc
cmp
xlat
mov
pop
pop
inc
sbbl
cs
movsb
cmp
test
cmp
add
pop
adc
fdiv
push
jp
xor
into
jae
fcom
mov
xchg
jo
popa
out
rolb
out
ror
sub
or
iret
mov
cmp
call
push
in
jge
push
mov
fidivrs
sbb
fdivl
bound
mov
xor
icebp
push
fwait
or
mov
in
movsb
loopne
mov
mov
sub
lcall
adc
outsl
in
stos
cmpsl
inc
or
push
inc
push
test
or
jo
jns
aaa
and
mov
ja
jmp
clc
lahf
cs
shrl
lds
add
and
shr
fnstsw
sti
pop
arpl
es
pop
js
cli
push
mov
xor
push
lods
fnstsw
jae
pop
push
std
mov
cmpsl
test
pop
mov
ret
in
and
mov
ret
repz
push
lcall
jb
call
pop
ljmp
xor
lahf
test
loopne
mov
inc
adc
das
dec
fidivl
imul
and
lahf
lcall
jg
sbb
inc
mov
add
inc
mov
stos
andb
dec
iret
pop
aam
push
in
pop
xor
pop
push
insb
fdiv
mov
and
lods
leave
jmp
pop
pop
push
fs
push
pop
jo
and
jmp
and
addb
lret
mov
loop
pop
mov
push
hlt
xor
daa
leave
repz
cmp
pusha
in
inc
je
mov
in
js
dec
jmp
out
call
pop
aaa
xchg
mov
test
xlat
cld
imul
idivl
cmp
xor
les
movsl
cmp
ficoml
push
mov
jecxz
and
sar
push
cmpsb
incb
pop
loopne
mov
fmull
movsl
sbb
jns
ds
cmp
dec
rorl
dec
xor
cmp
addr16
xchg
add
arpl
leave
add
test
xor
jnp
or
dec
scas
mov
inc
rcr
or
in
clc
adc
pop
sti
test
pop
in
push
pop
scas
cli
add
scas
pushw
mov
jl
das
je
or
mov
inc
mov
inc
ljmp
movsb
jne
or
fs
sahf
insl
imul
divl
fistpll
insl
movsb
xchg
lods
popf
xchg
in
mov
mov
rclb
js
dec
clc
xor
aad
shll
icebp
popf
rorl
jno
pop
daa
adc
or
dec
and
sub
push
jge
push
je
pop
xchg
mov
push
in
xchg
jecxz
pop
ds
pop
subb
lret
hlt
push
cmp
jmp
lret
testb
ja
mov
gs
into
inc
adc
pop
int
mov
movsb
psubusb
out
repz
aas
das
and
lods
add
xchg
pop
or
mov
adc
mov
aad
sbb
fcoml
fsubrl
repz
mov
jbe
cmp
cmpb
adc
or
inc
cmp
outsb
sub
add
nop
sub
test
mov
jl
push
sub
push
dec
loopne
pusha
testl
mov
test
dec
sub
inc
sbb
mov
cmp
pop
and
cltd
rclb
or
js
sub
inc
dec
movntps
jae
dec
jae
pop
int
pushf
mov
idivl
mov
xchg
repnz
aad
ret
lret
lret
les
aaa
aad
cmpb
nop
mov
ds
cmpsl
shlb
int
in
repz
inc
pop
push
in
jnp
outsl
pop
add
into
xor
hlt
ss
push
nop
mov
mov
mov
or
in
in
test
imul
popa
test
add
lock
jg
into
addl
movsl
mov
popa
dec
shl
into
dec
mov
sub
xchg
cmp
mov
adc
divl
aad
inc
sub
clc
xor
mov
cmc
sbb
add
and
inc
bswap
mov
jle
bound
in
sub
js
or
mov
icebp
insl
lret
adc
addr16
pop
movsl
dec
mov
cmpsl
repz
sbb
sti
cmp
sbb
lret
cmpsl
popa
lea
pop
out
int3
pop
js
out
pop
das
xchg
or
xchg
outsl
mov
fistpl
iret
push
pop
pop
add
cmp
ret
or
cwtl
pushf
adc
push
pop
sbb
push
or
push
into
mov
inc
movq
loopne
inc
int3
adc
jb
addr16
mov
shr
test
jo
pop
push
sbb
les
mov
mov
shrl
enter
inc
test
aad
xchg
mov
enter
dec
test
repz
or
out
sub
fwait
mov
adc
inc
mov
xchg
fiadds
and
cmp
inc
xchg
and
xorl
push
iret
leave
mov
movsb
mov
pop
arpl
inc
mov
jo
out
cmp
and
jno
sub
pusha
mov
mov
movsb
sti
inc
rcr
cltd
adc
push
shlb
out
lds
test
sbb
lods
add
cli
insl
jbe
mov
dec
fs
jnp
aas
xor
sub
in
leave
cmp
ficoml
outsl
rol
xor
push
cmpsb
inc
mov
mov
por
in
repz
out
adc
inc
sbb
out
or
sub
adc
xor
scas
cwtl
fcoml
mov
cmpsb
mov
arpl
inc
movsl
addl
or
cmc
push
inc
mov
cmp
cld
ja
getsec
and
push
lock
inc
pop
fs
divb
ss
movsl
clc
rcrl
daa
es
js
sbb
hlt
orb
add
mov
into
inc
lock
push
sar
mov
inc
sar
pusha
adcb
test
or
dec
decb
icebp
jge
cmp
adc
xor
scas
mov
sub
xor
push
and
dec
add
fwait
in
add
data16
decb
xor
mov
push
ds
inc
dec
int
lcall
imul
sub
push
inc
stc
in
outsb
sub
fdivrs
mov
mov
mov
pushf
cmp
mov
sarl
lcall
mov
insl
or
sub
cmp
add
push
add
lahf
jg
mov
pop
jnp
cmpsb
xchg
jne
add
pop
mov
out
stos
xchg
push
js
fdivrl
sub
ds
fdivl
mov
insb
cmp
cli
scas
fdivrl
adc
mov
outsb
shrl
inc
sub
or
xor
dec
jb
cmpsl
dec
xchg
xor
cld
maskmovq
idivl
icebp
jo
and
pop
data16
rsqrtps
xor
lods
leave
sub
xor
adc
pop
xor
scas
fildll
pushf
repz
sbb
push
testl
sub
pop
inc
push
xor
jno
dec
sbb
pop
add
lahf
insb
or
jecxz,pn
lcall
out
call
incl
repz
test
into
lret
int3
xor
popa
mov
rcrb
stc
dec
insb
iret
xchg
xchg
jae
jno
pop
cmp
call
xor
pop
sub
test
fs
icebp
inc
mov
fcoml
cs
call
pop
push
and
ss
out
ja
push
mov
aas
dec
popfw
xchg
aad
sub
mov
addl
sub
push
mov
js
dec
int3
mov
pop
lods
sub
mov
filds
std
aad
jl
ret
pop
repnz
repz
ljmp
inc
xor
test
cs
lahf
and
call
imul
and
fistpll
mov
mov
cmc
dec
jo
inc
nop
xchg
int
add
outsl
mov
out
loope
sub
fsubrl
sahf
adc
mov
sub
sarb
jmp
loop
jae
jg
and
shll
jno
insb
aam
popa
popf
stos
jb
dec
dec
shll
xor
cltd
lods
rcrl
mov
rcrb
xchg
adc
sbb
adc
scas
out
std
mov
bound
or
mov
mov
cmp
inc
xor
repnz
inc
and
insl
shlb
loop
mov
scas
adc
add
clc
sbb
in
jb
aam
sbb
ja
in
loop
xor
inc
pop
adc
dec
push
pop
sbb
xor
sub
cwtl
in
int
fdivrp
sub
xchg
in
fiaddl
mov
addr16
jae
test
lds
mov
fadd
in
jp
dec
popa
pop
xchg
inc
add
xchg
pop
or
lahf
out
ficomps
nop
adc
lea
cs
and
or
wrmsr
shl
insl
dec
mov
adc
cmp
add
cmp
sti
lahf
xchg
push
incb
ret
push
or
popf
pop
sbb
fnsave
sbb
stos
jge
pop
jo
or
or
and
and
pop
sar
inc
sub
outsb
and
dec
lcall
sbb
push
loopne
cmpsl
pop
aad
mov
enter
inc
call
sbb
inc
inc
enterw
hlt
push
adc
pop
js
repz
cli
dec
push
hlt
stc
in
testb
xor
js
sbb
int3
and
ret
or
fwait
pop
roll
std
rcrb
xchg
mov
cmpsl
lret
mov
in
and
pop
inc
aam
xlat
jbe
test
rcll
cmp
or
mov
sub
mov
ficompl
loope
lea
xchg
lret
push
push
sub
xchg
mov
push
adc
xchg
inc
push
cmp
mov
faddl
rcrl
or
dec
call
out
arpl
mov
jp
jno
lret
and
ja
sub
pop
add
dec
fnstenv
mov
aam
fisttpl
cmp
mov
jl
rcr
stc
outsl
push
test
inc
imul
pop
cmc
jns
xchg
inc
in
sub
in
xchg
je
jns
ja
mov
clc
mov
ss
pop
aaa
mov
push
or
mov
repnz
ficomps
jae
mov
hlt
dec
int3
or
cli
and
int3
cmovs
mov
repz
andb
mov
adc
jo
mov
or
sbb
in
mov
adc
push
fadd
xchg
arpl
loope
xchg
pop
ds
daa
fsubrl
pop
jle
stos
cmp
jmp
cs
pop
sub
iret
or
push
lcall
add
cmc
ret
sbb
xchg
je
xchg
jns
insl
cmp
inc
inc
test
into
add
icebp
xor
repz
iret
sub
les
push
inc
cmp
jns
jne
jbe
iret
mov
xor
jg
dec
sub
xchg
stos
and
mov
les
xchg
dec
and
jb
dec
mov
push
aam
add
add
lcall
mov
out
in
xchg
lea
inc
les
jns
xor
xchg
fcmovu
adc
ret
lock
loop
sbb
inc
rclb
jge
xorb
adc
mov
and
xor
push
mov
int
sbb
pop
mov
or
xchg
add
dec
sub
or
inc
fs
push
ret
jl
insb
add
mov
movsb
pop
insb
lcall
jg
je
test
push
sub
jns
jne
cli
sahf
and
pop
push
stos
stos
mov
jno
cmpsl
fnstcw
cmpsb
inc
mov
push
in
aas
sub
jmp
rcrb
jg
out
mov
sub
mov
movsl
outsb
das
cld
dec
cmp
mov
mov
mov
and
int3
aaa
aaa
mov
pushf
insb
pop
cmp
jl
mov
jnp
push
adc
out
je
lret
imul
and
sub
lods
cli
arpl
mov
test
push
and
rcl
dec
add
or
mov
add
sbb
clc
ffreep
sbb
cmc
shlb
xor
dec
lcall
inc
leave
ss
scas
jb
les
adc
pop
vcvtpd2psx
cmp
ja
xchg
mov
dec
ja
add
mov
imul
mov
adc
add
push
sub
ljmp
jmp
pop
add
or
cs
in
das
cmc
lret
mov
lock
movsl
push
pushl
sub
dec
arpl
cmp
mov
aas
nop
pop
pop
mov
fsubs
cmp
add
test
stc
mov
in
movsl
jp
mov
cvttps2pi
inc
out
ficompl
push
lret
inc
movsl
jl
test
mov
xchg
xchg
adc
stc
or
mov
pop
pop
int
cwtl
lcall
inc
pop
mov
test
cld
fmull
packuswb
dec
pop
sbb
pop
xchg
mov
xorb
mov
loopne
or
push
out
pusha
test
ret
loope
or
pop
das
in
test
mov
mov
jns
push
dec
arpl
dec
movsb
mov
add
sbb
cli
push
cmp
push
mov
mul
xchg
adc
add
in
test
jae
mov
std
scas
xchg
adc
fwait
stos
hlt
push
arpl
mov
inc
in
sbb
jmp
fs
mov
and
test
outsb
shl
pusha
pop
lcall
cmc
icebp
inc
xchg
push
push
push
dec
mov
jl
ds
and
std
enter
push
push
shlb
pop
aas
call
inc
mov
dec
aas
dec
rcrb
mov
shll
add
add
or
pop
addl
push
pop
dec
insb
arpl
sbb
jns
mov
and
rcll
mov
je
xchg
loope
fwait
inc
adc
jg
push
in
lds
clc
xor
pop
mov
push
mov
inc
bound
pop
bound
psrlw
xor
lods
ret
and
mov
fcomps
xchg
push
xchg
cltd
push
cltd
sub
adc
icebp
mov
call
insb
les
xchg
mov
jae
leave
sar
dec
jecxz
jecxz
jmp
bound
mov
out
dec
iret
rolb
mov
cmp
cmc
sub
inc
cmpsb
ljmp
xor
mov
dec
and
mov
jg
pop
or
sbb
clc
mov
das
or
adc
daa
jp
popa
pusha
imul
mov
push
movsb
cmp
jns
addr16
jl
sub
xchg
sbb
xchg
loope
pop
pop
sub
ja
mov
jle
cs
cld
in
cld
or
ja
into
ja
cs
mov
xor
xlat
xor
dec
fistpll
lds
out
iret
xchg
pop
xchg
adc
ds
push
xor
inc
das
or
mov
dec
in
lret
and
pop
cli
repz
std
mov
mov
mov
test
scas
lods
inc
mov
sub
fistl
mov
cmpsl
aaa
add
xor
jno
sti
mov
out
push
lock
sub
popa
loope
jmp
add
aaa
add
adc
dec
lea
fidivrl
add
notb
xchg
inc
mov
cmp
or
adc
or
vrsqrtps
ret
into
pop
movsb
add
add
push
xchg
call
lea
mov
imul
mov
mov
fcom
and
push
cmp
and
lcall
fisubrs
or
repnz
adc
nop
inc
insb
js
dec
pop
fwait
dec
pushf
jmp
je
scas
jp
lret
es
imul
add
jp
repz
lock
xor
push
dec
pop
fdivs
push
mov
inc
jno
jge
aam
scas
push
xor
sub
xlat
in
ret
js
aas
sub
test
mov
xchg
xor
sti
out
rol
add
sub
or
add
mov
ljmp
data16
gs
je
shll
or
mov
mov
fdivrs
dec
fnclex
shlb
repnz
jg
add
xchg
xchg
adc
cmc
ret
sbb
xchg
ret
cmp
adc
mov
fsubr
movsl
subb
and
xor
fsts
mov
xor
test
fwait
add
in
xchg
jge
xchg
add
insb
jg
jl
ficomps
mov
js
jmp
dec
push
cmp
sbb
mov
mov
dec
xor
jl
jmp
dec
jns
pop
inc
and
mov
jmp
or
rcrb
lds
or
lock
mov
into
loope
mov
pusha
das
dec
test
xchg
into
jnp
cmp
mov
cmp
lgs
or
cmpb
inc
and
lahf
inc
pop
movsb
sub
popf
mov
pop
dec
inc
pushf
pop
mov
pop
fdivp
das
xor
out
push
mov
sbb
lock
and
out
sbbb
adc
sub
sub
hlt
nop
mov
daa
stos
outsl
arpl
pop
push
adc
jae
fucomp
aaa
popf
jo
cmp
nop
sbb
das
out
stc
mov
jl
lds
xor
sahf
or
xor
test
lret
adc
push
sub
insl
mov
int
add
hlt
and
jne
jg
mov
sbb
in
adc
fiadds
aas
lea
addr16
sbb
fucom
mov
mov
addr16
and
and
insb
rorl
add
outsl
xor
int
mov
pop
xor
inc
es
jnp
mov
and
dec
daa
call
je
movb
in
test
jg
pusha
mov
mov
inc
test
pop
cmp
add
cmp
and
popf
push
dec
sub
inc
mov
cmpb
push
mov
sti
andl
outsb
lahf
icebp
xchg
inc
jae
shlb
inc
push
sahf
ret
pop
mull
jne
pop
lods
mov
sbb
jns
mov
and
les
mov
sbb
fistpll
mov
push
inc
out
call
scas
jp
or
mov
sub
iret
sub
scas
fnstcw
out
jno
sbbl
sbb
pop
setnp
les
lds
adc
cmpsl
jp
mov
fiaddl
popa
dec
test
push
sub
inc
jnp
inc
mov
lahf
and
cld
xor
fldenv
mov
stos
cmp
scas
push
jp
xor
cmp
scas
inc
ds
subl
adc
adc
ljmp
pop
stos
dec
cmp
out
or
loopne
movsb
loop
xchg
notb
xor
jge
jmp
xor
add
je
scas
data16
xchg
ret
stc
sbb
add
imul
or
cmpsb
ljmp
das
jg
push
or
dec
insb
jecxz
push
dec
mov
ds
ret
inc
scas
dec
cmp
jecxz
xchg
adc
mov
imul
and
xchg
sbb
jae
xor
test
leave
mov
daa
fisttps
add
inc
ljmp
mov
cmpsb
push
sub
jp
cltd
fldcw
test
mov
popa
shlw
xor
test
cmp
or
in
xor
push
mov
xor
mov
push
jl
jne
push
pop
into
mov
dec
pop
fcomps
popf
sbb
adc
jle
xchg
mov
adc
aas
jge
mov
pop
test
jmp
ret
adc
push
ss
fs
mov
dec
pop
fs
adc
shrl
pop
cmc
ljmp
cmp
mov
push
lea
es
ljmp
pop
xor
adc
int
and
sarl
xor
push
das
mov
jb
mov
cwtl
adcb
leave
sbb
jnp
push
cmp
pop
jno
adc
and
inc
dec
and
movsl
inc
stc
and
repnz
jo
lock
aaa
repnz
inc
dec
into
or
aaa
dec
shrb
movsb
jo
rcl
mov
cmpsl
cwtl
mov
scas
fmulp
sbb
repnz
mov
jns
movsb
jb
inc
adc
in
push
and
push
cmc
xchg
cmp
sahf
xor
dec
jmp
xor
fwait
xchg
dec
mov
fimull
das
mov
sub
int
out
loopne
jo
dec
jae
sub
aad
loop
pxor
bound
inc
lret
xor
loop
xor
aaa
add
out
cmp
inc
pop
dec
cmpsl
push
dec
stos
ss
mov
inc
inc
adc
xor
int3
or
fisubrs
mov
sbb
addl
mov
dec
cmp
loope
xor
mov
cmp
or
mov
xchg
and
aam
gs
mov
push
cmpl
test
mov
es
aam
scas
inc
ficoml
cs
fsubs
cltd
lcall
xor
shlb
inc
les
xor
iret
nop
pop
int
jecxz
pop
sub
imul
mov
and
repz
int
rclb
dec
lock
clc
push
test
push
jmp
shr
mov
pop
dec
into
or
xchg
fisttpll
popf
push
jbe
bnd
sti
mov
in
add
es
aas
mov
lcall
stc
cwtl
scas
jmp
les
pushf
dec
icebp
xor
add
addl
sbb
repz
add
cmp
mov
jae
movsb
mov
call
clc
lret
lods
sub
lods
xchg
inc
loop
and
cwtl
test
stc
stc
sbb
pushf
xor
mov
das
adc
mov
pop
mov
out
loop
xchg
fsubs
add
popa
and
sub
pop
lds
jno
in
cmpsb
sbb
outsl
clc
dec
js
push
lods
mov
jge
rorb
xor
xchg
push
mov
stc
push
imul
cmp
fs
jl
pop
inc
push
sbbb
lret
adc
hlt
popf
popa
or
lret
mov
icebp
cmp
mov
lods
jbe
fs
jnp
jae
mov
xor
lods
adc
jmp
add
xor
stos
adcw
mov
adc
fwait
ds
mov
mov
dec
jo
ds
sub
push
pop
push
pop
lret
pop
hlt
xor
mov
cltd
div
add
mov
in
mov
aad
push
mov
mov
mov
call
inc
add
cwtl
mov
pop
and
jno
scas
fsubrl
lods
fcoml
and
cmp
push
push
push
push
jl
sub
or
call
int
aad
fcomip
push
movsl
xchg
movsb
mov
inc
cmc
cmp
sub
fstp
jae
pop
mov
shll
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
repz
pop
hlt
cmp
inc
inc
xchg
adc
arpl
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
addl
std
add
add
lahf
mov
or
pop
adc
enter
enter
nop
cmpsb
push
cmpsb
pop
lret
add
roll
mov
pop
add
mov
aam
add
es
and
add
cmp
movsb
insl
cmpsb
and
ret
add
add
xor
inc
jge
mov
xor
xor
inc
xchg
mov
sbb
mov
mov
imul
sub
in
ret
sub
jbe
sarl
repnz
loope
cmp
jnp
hlt
inc
mov
bswap
pop
or
and
rorl
sub
mov
sub
cmp
sbb
jmp
sub
in
xchg
stos
or
std
iret
lret
pop
pop
mov
mov
add
das
or
ss
xlat
and
and
mov
je
in
and
lahf
add
or
fcompl
mov
je
aas
mov
pushf
fwait
es
je
lock
mov
sbbb
mov
icebp
push
sub
icebp
cs
lret
or
dec
jno
xchg
dec
dec
sub
jge
ds
cmp
mov
pop
mov
ss
add
test
repz
sar
mov
fistpll
pop
pop
sub
test
ljmp
in
loopne
or
pop
sub
outsl
outsb
push
dec
iret
jmp
mov
cltd
and
ret
dec
dec
add
into
push
lock
push
push
lret
outsb
outsl
aas
xchg
push
add
inc
xchg
lock
and
or
inc
lahf
pop
scas
ja
inc
mov
out
add
daa
mov
xor
push
mov
andl
jae
jle
dec
dec
jmp
mov
jp
or
fistps
dec
into
out
lods
dec
add
add
idiv
jg
mulb
stc
xor
add
add
sub
fstpt
push
stos
xor
mov
and
std
sbb
lret
jne
jnp
pushf
mov
shrl
jle
cmc
popf
jb
cmp
cwtl
jmp
cltd
mov
repz
stos
lds
add
fmul
std
aas
data16
and
push
mov
icebp
adcl
push
lds
dec
cmc
std
cli
outsb
mov
repz
fcoml
es
inc
and
dec
sahf
mov
or
loope
sbb
inc
fbstp
dec
call
adc
mov
jno
inc
and
adc
sbb
rcl
test
jp
mov
ss
add
xorl
jae
je
add
jle
int
ret
cltd
ja
fistps
mov
mov
add
xor
dec
mov
sbb
or
xor
subb
out
testl
ficoml
jle
cld
jo
add
addl
sbb
imul
gs
dec
sub
nop
inc
scas
out
dec
xchg
push
ret
xlat
jg
or
cmpsb
xchg
in
pop
enter
inc
sub
mov
xlat
outsb
sub
out
shrl
jg
jns
sti
xor
stos
test
push
cli
xor
cmp
sti
test
pop
enter
icebp
push
sub
mov
or
xchg
ljmp
test
vmread
pop
imul
nop
push
aaa
pop
cmp
cli
xor
nop
jo
arpl
dec
mov
arpl
dec
lods
out
out
inc
pop
jbe
add
aaa
jmp
cmpsb
ret
xor
out
mov
popf
push
add
add
sbb
pop
std
jg
pop
dec
sub
xchg
add
add
add
ds
push
es
and
pop
sub
pop
push
out
adc
pop
mov
inc
nop
pusha
ds
cmpsb
mov
inc
repz
xchg
shl
and
jp
aas
push
sub
xor
mov
xor
push
mov
adc
rcrl
rol
inc
loope
test
sub
sub
xor
je
adc
out
pop
sub
sar
sahf
cmpl
mov
lds
js
outsl
shll
int3
sar
fimull
mov
or
fucomip
mov
or
sahf
mov
add
aam
movsb
mov
lcall
mov
pop
fnop
lea
push
mov
enter
sbb
cmpb
cwtl
xorl
fwait
out
std
loop
dec
int3
or
add
fildll
int3
testb
or
dec
test
fs
push
cs
ficompl
xchg
das
insl
xchg
lods
push
stc
call
jnp
jg
sub
pop
inc
jbe
push
xor
lcall
push
les
or
and
lea
outsl
mov
pop
ss
sbb
cltd
call
leave
repnz
push
ja
lods
add
dec
push
push
mov
loopne
mov
jmp
jnp
push
insb
dec
push
lret
jecxz
jmp
and
push
mov
mov
jns
add
push
in
mov
dec
push
fdivl
jmp
int3
neg
iret
repz
das
xchg
in
popf
dec
push
addr16
xor
or
xlat
dec
stc
enter
lret
ds
jb
repz
inc
mov
fcoms
imul
dec
insl
xor
cmp
xor
adc
ud2
xchg
mov
pop
add
sti
shll
sbb
add
push
add
mov
int
mov
inc
decl
add
mov
adc
repz
jmp
addb
in
add
xchg
prefetch
or
sbb
push
stos
jl
push
push
cltd
les
jmp
imul
add
sbb
inc
dec
mov
mov
inc
aad
stos
fists
add
popf
int
jp
push
push
fdivs
setl
push
add
dec
sbb
cmp
jnp
pop
ret
out
push
scas
andl
mov
andl
or
pop
cs
out
mov
aam
jmp
add
fildll
inc
dec
outsb
sbb
inc
sti
mov
test
jge
in
mov
push
out
test
lods
lcall
pop
cmp
gs
mov
mov
sahf
pushf
out
aas
mov
lds
rorb
test
std
sub
cld
jl
push
scas
cmp
ret
sub
cmpsl
xchg
mov
into
fistpll
loop
and
push
popl
adcl
cmp
lret
mov
adc
push
adc
outsl
fistps
enter
icebp
sub
clc
jl
mov
pop
divl
daa
inc
aas
ffree
clc
xor
in
cmc
or
and
movsb
xchg
iret
sbb
adc
sub
xchg
or
sti
in
pop
xchg
hlt
adc
inc
pusha
icebp
sar
push
mov
lods
je
stos
xchg
fmulp
inc
add
push
push
mov
mov
or
cmpb
push
and
mov
vmwrite
cmc
xor
xchg
gs
repz
imul
cltd
leave
call
push
lcall
jp
xchg
je
nop
mov
pop
cmp
adc
jg
scas
fs
fucomp
mov
mov
add
inc
jl
inc
xor
xchg
push
out
add
add
hlt
mov
std
jl
xor
jg
mov
loope
mov
add
add
add
lock
pop
das
test
push
mov
pushf
in
inc
leave
sbb
jbe
push
in
clc
cmp
data16
ffree
sub
fnstcw
mov
aaa
into
sub
orb
les
stc
mov
dec
xchg
stos
inc
cmp
add
jmp
jne
ds
or
adc
nop
jge
ret
fmul
inc
into
adc
xor
mov
nop
or
test
adc
insb
mov
cltd
ljmp
clc
xchg
cltd
xchg
mov
mov
out
icebp
mov
inc
out
imul
arpl
xor
add
mov
into
das
cmp
je
sub
xchg
sbb
jle
vpmaxub
mov
cld
ds
pop
mov
in
inc
test
inc
gs
mov
xchg
fbld
lods
cwtl
xchg
iret
adc
movsb
mov
mov
xlat
sub
clc
xchg
jno
add
jns
lea
inc
insb
dec
and
aad
sbb
push
inc
in
int
sbb
sub
push
inc
jnp
es
jae
aam
lcall
xchg
js
shrl
jg
lds
inc
aas
in
dec
lahf
mov
sbb
xchg
pop
push
pop
inc
loop
in
addr16
jnp
and
roll
xor
mov
adc
ror
jge
dec
testb
inc
shl
imul
loop
push
aaa
insl
scas
mov
push
es
out
iret
aaa
es
fcomps
decl
in
stc
popf
dec
stos
add
bound
lock
sub
dec
xor
shrb
xor
out
ja
mov
hlt
mov
imulb
mov
push
arpl
cmpsb
aaa
shll
pop
or
leave
pushf
std
or
xchg
mov
cmpsl
sbb
xor
fcoms
lcall
inc
add
sbbb
sbb
mov
add
add
add
add
imul
fdivrl
rcrb
xor
mov
add
add
add
pop
mov
push
xchg
pop
sbb
stc
push
cmpsb
inc
mov
movsl
mov
jg
dec
ljmp
dec
in
sbb
mov
mov
dec
pop
or
imulb
adc
inc
jae
icebp
add
pop
jg
fstpl
lods
icebp
xchg
fisubl
lret
push
xlat
mov
xor
icebp
shrl
xor
add
in
mov
mov
cmp
dec
cld
scas
shlb
mov
push
cmpsl
inc
xchg
dec
or
inc
mov
pop
jle
js
sub
dec
rorb
sub
jl
mov
fnstsw
fldt
repnz
shrb
inc
mov
fistpll
aas
sbb
nop
cmp
adc
pop
cmpsb
out
mov
pop
adc
add
xchg
lods
imul
sbb
addr16
cmc
lcall
sub
add
insb
lock
fcompl
data16
nop
and
pop
ljmp
sbb
jb
iret
imul
sbbb
xchg
fcmovb
pop
pushf
je
or
mov
fadds
mov
loopne
cmp
mov
sbb
inc
pop
pusha
addr16
sbb
out
idivb
pop
movsb
sub
sbb
pop
jl
jecxz
mov
xor
and
adc
insl
or
or
out
aas
shlb
test
sbb
loopne
test
movsl
xchg
out
fisttpl
arpl
push
mov
cwtl
jecxz
and
repz
out
push
jmp
subb
cmp
xor
cmpsb
mov
push
xchg
out
dec
mov
and
adc
sahf
ja
adc
add
add
jg
pop
fstps
testb
add
je
fwait
xchg
cld
or
push
sub
add
nop
xchg
sbb
jmp
test
pusha
inc
mov
outsb
push
cmpsb
int
std
hlt
cwtl
test
add
mov
xor
adc
inc
ljmp
pop
xchg
xchg
sbb
addr16
dec
dec
jl
popf
and
out
jns
mov
mull
imul
push
movsb
lea
iret
mov
xor
mov
cld
inc
cwtl
out
jne
sub
je
sub
scas
loope
xor
lea
sub
dec
jge
test
jmp
push
add
aad
je
cmp
popa
std
cli
cltd
leave
inc
sub
int3
jge
js
jae
lods
add
pop
ja
cwtl
mov
pusha
mov
or
xchg
outsb
orb
daa
mov
outsb
xor
aad
in
fildl
ja
xor
dec
aas
mov
add
inc
cwtl
fdivl
stos
mov
mov
pushf
sbb
push
cmpsb
in
mov
and
inc
shlb
dec
mov
jo
lods
cmp
xlat
arpl
testl
xor
and
daa
mov
jnp
lods
or
xor
adc
jge
push
push
sti
imul
push
sbb
xchg
xchg
or
sub
lods
mov
sbb
mov
fisttps
xchg
lret
lcall
inc
adc
in
stc
jno
ret
aas
pop
lds
or
sbb
inc
bound
push
sub
rolb
out
cmpsl
mov
out
es
outsl
mov
mov
add
test
and
pushf
or
mov
dec
test
loope
lock
outsb
cmpsb
call
sbb
loopne
lods
int3
mov
popf
paddd
fidivl
popf
or
push
pause
add
std
add
add
jg
or
adc
out
xor
mov
lahf
frstor
mov
popa
adcl
mov
jae
fimuls
ljmp
sbbl
xchg
fs
into
aas
mov
rol
mov
es
pop
mov
sub
push
sti
icebp
mov
jb
push
mov
cmp
inc
and
push
das
adc
inc
dec
mov
nop
add
repnz
and
cld
rcrl
aam
rolb
sbbb
cmp
xchg
aad
sti
and
sub
cmp
jno
cmpsl
mov
dec
mov
mov
bound
call
mov
push
fwait
jae
xchg
inc
inc
mov
push
lods
leave
movsb
insl
test
ss
and
inc
sub
in
fisttpl
lahf
mov
adc
pop
repnz
mov
push
addr16
int
movsl
push
popa
aad
cmp
out
cmp
out
bound
jnp
fldcw
xchg
mov
std
push
mov
mov
jbe
repz
arpl
shl
sub
cmp
cmp
dec
outsb
xchg
push
jnp
inc
push
dec
ret
cmp
add
jp
jb
push
lock
push
adc
jne
pop
add
add
or
popa
xlat
rcll
push
add
stos
aad
out
les
test
push
sub
and
mov
mov
cmc
into
ficomps
mov
imul
mov
add
sahf
in
cmc
stos
cmp
fildll
push
xchg
jns
mov
stc
push
xchg
or
pop
adc
adc
int
pop
add
xor
lret
inc
out
rorb
or
sbb
test
xchg
fidivrl
sbb
fldenv
jl
xchg
fstl
push
sbb
add
add
push
movsb
lea
sub
divb
popf
lock
add
std
add
add
sub
pop
int3
mov
and
push
or
cmp
pinsrw
cmpsl
mov
and
lods
enter
jno
daa
stc
push
lret
xchg
daa
push
sub
mov
test
pushf
jae
adc
sub
cmp
dec
notb
mov
rorb
xor
sbb
xor
lcall
cli
jb
lahf
inc
and
sbb
push
jmp
scas
shrb
orb
pusha
dec
adc
insb
leave
ret
xor
xor
iret
fwait
mov
cmpsb
sbbb
ficoms
pop
in
loopne
or
or
inc
lret
add
sub
push
dec
sbb
imul
inc
popf
cwtl
lret
and
fdivrp
outsb
clc
mov
fstpt
test
or
cmpsl
loop
cmc
aam
cwtl
std
mov
sbb
push
dec
or
les
es
repnz
ss
jne
xchg
data16
mov
mov
pop
cmp
mov
rolb
ds
sbb
imul
sub
dec
repz
mov
test
subb
fbld
outsl
push
or
addl
xchg
ljmp
aad
xchg
pop
fstpl
sub
and
adc
jl
add
daa
popw
mov
pop
aas
add
repnz
dec
cmc
xchg
nop
bound
fstl
xor
lock
xor
mov
shl
mov
mov
testb
stc
insl
sbb
call
imul
popf
push
int3
aas
and
cmp
xchg
adc
movsl
fsts
pop
and
mov
into
xchg
ja
push
cwtl
or
movb
int
rcl
imul
jno
xchg
loop
mov
add
add
test
mov
insl
in
xchg
add
std
add
add
repnz
mov
and
orb
or
cmpsl
mov
popa
mov
mov
lock
mov
fldt
cltd
mov
out
xchg
scas
clc
sub
add
test
jle
jp
in
loope
xchg
adc
mov
in
add
outsb
jo
jle
mov
xchg
pop
dec
lods
rclb
sbb
dec
aaa
cmpsb
in
dec
xlat
std
mov
cmpsl
push
jle
std
test
xchg
sbb
stos
dec
arpl
mov
push
gs
test
imul
add
repnz
rolb
xchg
loope
lret
or
mov
add
aaa
lods
xchg
xor
dec
ret
leave
mov
fbld
xor
and
faddp
mov
es
sub
gs
or
mov
adc
movb
sub
fsubrl
shr
test
or
lahf
mov
cld
cli
inc
cmpsl
jmp
adc
insl
testl
cmc
pop
mov
dec
jno
lret
outsl
shrl
mov
lret
sub
mov
cmp
push
and
mov
pop
jns
jg
mov
pop
inc
hlt
xor
addr16
xlat
gs
jmp
mov
dec
mov
shlb
add
pushf
push
jmp
mov
or
jge
push
xor
roll
sub
std
pop
jae
pop
inc
mov
dec
sti
out
shr
daa
jge
jns
lret
repnz
fcomps
inc
cmpsb
dec
int
dec
movsl
sbb
jno
cli
repz
mov
hlt
data16
pop
sub
fcmovb
data16
or
call
scas
and
adc
cwtl
sbb
lds
sti
loopne
xlat
das
dec
pushf
data16
add
xchg
std
jg
mov
ljmp
add
add
scas
es
arpl
nop
xchg
push
inc
insb
js
pushf
test
or
ja
cltd
add
inc
mov
lods
ret
mov
fwait
in
jae
icebp
mov
pop
flds
js
idivl
jmp
mov
adc
sbbb
in
jns
push
mov
insl
jno
out
jne
jbe
push
adc
xchg
add
push
pop
into
fbld
in
mov
icebp
mov
das
aas
arpl
lret
adc
aad
sbb
xchg
push
mov
add
loope,pt
inc
xor
daa
je
push
imul
add
mov
cld
sbb
icebp
sub
add
pop
cltd
push
cmpsb
sti
clc
jl
mov
mov
aas
std
mov
xchg
or
lds
adc
les
mov
das
jmp
lods
and
mov
das
sbb
push
dec
add
and
sbb
or
xchg
in
or
inc
out
dec
sbb
nop
sahf
outsb
mov
cmp
and
push
cmp
insl
cltd
sub
xor
rol
mov
test
mov
jae
pop
xor
add
fwait
aas
jb
shr
fcoml
push
push
imul
jge
aad
xor
clc
xor
movsb
repnz
mov
xchg
push
stos
aas
and
mov
sbb
test
jae
shlb
sti
ss
pushf
sub
fstps
xchg
dec
adc
add
out
xor
not
sarl
mov
xor
sub
filds
outsb
adc
adc
dec
push
rcr
cmpsb
push
jle
jmp
adc
mov
loopne
out
in
pusha
ljmp
jbe
popf
mov
cmp
pop
stos
inc
insb
xorl
dec
mov
mov
idiv
iret
rorl
sbb
fcoms
out
add
std
add
add
pop
test
test
aad
xchg
jne
pop
dec
bound
movsb
fldenvs
pop
and
das
fs
mov
loopne
pop
mov
ror
mov
add
sbb
jnp
mov
fs
xor
hlt
cli
lds
sahf
nop
iret
js
push
pop
sub
test
jno
mov
out
in
ret
lods
pop
lods
push
xor
cmp
pop
pop
pop
fisubs
mov
adc
in
mov
sti
mov
daa
mov
ljmp
push
repnz
test
add
neg
andl
cmp
enter
outsl
xchg
jbe
fsubrs
mov
outsl
adc
xchg
in
in
mov
clc
mov
rcl
push
sub
or
scas
adc
data16
ljmp
subl
scas
clc
ss
add
cmp
data16
pushf
dec
mov
cwtl
mov
adc
push
push
hlt
sbb
cwtl
outsb
mov
and
add
sarl
daa
leave
out
xchg
std
and
sub
xchg
adc
mov
test
imulb
insl
sbb
imull
imul
jne
mov
lret
bound
lods
daa
aad
dec
or
lret
lods
andl
add
outsl
jg
pop
dec
mov
dec
jbe
in
lcall
mov
mov
pop
iret
xchg
je
aam
aam
jg
mov
sub
sahf
and
ljmp
jns
enter
fnstenv
insl
into
sbb
scas
mov
stc
enter
adc
or
movsb
push
dec
fsubrs
and
lret
adc
and
and
test
pop
in
andb
gs
in
mov
mov
data16
add
ret
mov
ja
or
and
in
add
std
add
add
repz
rcrb
je
loopne
xor
push
dec
in
or
mov
lcall
add
jo
inc
add
sti
insb
pushf
sbb
and
pushf
jecxz
pop
in
arpl
lea
xor
inc
addr16
call
jns
call
insl
sbb
mov
or
test
rcrb
ficomps
scas
sahf
jno
insb
sbb
inc
mov
mov
data16
cwtl
faddl
lahf
arpl
kunpckwd
inc
adc
mov
and
jmp
pop
and
fs
les
adc
jg
or
scas
mov
sub
insl
insb
test
pop
jmp
xor
rcrl
sub
je
or
fdivrl
push
pop
jns
in
jae
sbb
xchg
test
cmp
xor
jl
dec
repnz
cld
or
or
mov
sbb
and
jl
loop
fmuls
pop
jl
cld
enter
rcl
imul
push
mov
xor
xchg
sahf
push
out
mov
popf
and
mov
outsl
fs
es
lods
nop
xor
insb
in
mov
xchg
sbb
xchg
xor
cs
fsubl
jno
jg
pop
xor
fcos
scas
out
mov
jge
and
cwtl
jno
xor
frstpm(287
cmp
icebp
arpl
jb
fs
sahf
enter
fsubr
mov
sbb
xor
aas
push
into
cmp
adc
adc
cmp
jno
pop
inc
jno
popf
jge
arpl
pop
adc
dec
faddl
leave
push
xchg
mov
lods
sub
fsubr
sub
mov
fwait
xor
sub
jbe
adc
dec
aam
pop
mov
data16
int
pushf
push
or
add
add
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
inc
cwtl
sbb
add
arpl
rcrl
arpl
int3
cmp
loope
lret
cmp
es
mov
jecxz
and
outsl
jae
lahf
ja
fcmovnb
mov
outsl
sbb
jle
xor
jp
cwtl
jmp
mov
cmp
je
das
or
mov
icebp
mov
xor
frstor
mov
int3
push
fwait
inc
addr16
cmp
shll
xchg
pop
sub
pop
lods
pop
dec
cmc
popf
jl
cmc
mov
sbb
hlt
and
sbb
jg
mov
or
lods
call
daa
rcll
mov
cld
pop
movnti
dec
pop
xchg
xchg
cli
sbb
mov
sub
pop
sarl
add
leave
push
sbb
lahf
nop
mov
pop
jns
shrl
mov
fistpll
out
sbb
or
pop
ja
daa
push
or
hlt
fwait
inc
adc
rcr
dec
cs
and
mov
sub
push
mulb
xchg
sti
cmp
sbb
fwait
xchg
push
repz
iret
sub
mov
data16
dec
sar
sub
loope
mov
mov
ret
loop
push
les
dec
iret
test
pop
js
int
mov
lods
in
mov
and
mov
test
dec
into
mov
lret
adc
roll
sub
mov
fdivl
insb
int
shll
add
mov
loope
push
mov
jnp
jle
pusha
dec
mov
mov
and
push
fnstcw
sbb
sub
dec
bound
shlb
push
negb
jle
fcmove
mov
test
ss
sbb
cmpsl
xor
push
and
adc
rolb
push
insb
and
test
roll
mov
adc
or
pop
out
repz
fucomp
rol
in
ficomps
add
sarl
xchg
mov
xor
ror
pop
in
lret
or
aam
pushf
xchg
clc
sub
imul
jae
mov
test
cwtl
and
mov
test
adc
cmpsl
out
pop
lds
lds
ljmp
out
jmp
es
ds
stos
mov
lds
lock
xor
jge
mov
add
in
test
xlat
push
ljmp
pop
sbb
push
aad
scas
cld
jmp
jp
xchg
addr16
stos
mov
fwait
pop
test
inc
or
push
add
jne
add
outsb
inc
hlt
sub
lahf
push
subl
jnp
dec
sub
addb
inc
pop
fsub
mov
mov
loope
cmpsb
fimull
xor
cmp
enter
movl
ret
add
or
dec
test
push
xor
ja
and
pop
mov
sub
pop
fs
cmpsl
push
fiaddl
inc
lods
cmpsb
mov
cmc
daa
sti
push
enter
subl
insl
sub
ds
fadds
dec
pop
test
pusha
pop
mov
js
cwtl
cmpsl
add
mov
push
xor
jo
lret
push
incl
pop
jecxz
gs
out
xchg
imul
and
add
push
inc
adc
inc
dec
jmp
addb
lret
das
cld
jle
sub
mov
jmp
js
repnz
jg
nop
xor
adc
test
shll
jno
push
cmpsb
hlt
fs
je
push
and
add
and
inc
adc
in
pushf
pop
les
mov
jb
cmp
imul
xchg
ja,pt
iret
scas
movsl
dec
fisubrs
and
mov
rorl
fsubrl
add
add
xchg
insl
mov
out
nop
sbb
divb
pop
add
xchg
rcr
scas
adc
test
bound
mov
and
pop
test
fistl
outsb
mov
daa
pop
gs
push
inc
cmp
sbb
add
fistpl
inc
daa
iret
mov
xchg
insb
dec
rorl
cmpsl
testb
sbb
nop
inc
outsb
cmpsb
stc
repz
push
loope
je
loop
xor
sub
and
cmpsl
js
cmp
aad
int
iret
jo
push
xchg
je
in
or
aas
je
arpl
inc
jne
in
jne
imull
pop
cli
sti
inc
addr16
leave
ds
bound
xor
mov
push
dec
dec
adc
adc
pop
jnp
rorb
mov
ljmp
sti
jp
addr16
popf
daa
sub
in
outsb
xchg
pop
lods
jnp
and
or
mov
movsl
xchg
int3
adc
pushf
mov
inc
les
pop
es
test
cmp
xlat
jbe
xchg
inc
andb
mov
movsl
add
int
pop
push
sbb
iret
inc
jbe
ret
ffree
or
imul
xchg
mov
dec
sbb
sbb
jle
mov
cmp
add
lods
mov
inc
cwtl
ds
iret
repz
bound
sahf
jecxz
ja
scas
jae
imul
mov
xchg
pop
je
imul
adc
inc
pushf
sbb
or
push
setle
mov
sbb
xor
lcall
fildll
mov
mov
cli
ret
insb
mov
cltd
dec
sub
xlat
add
cmc
inc
stos
xlat
lret
call
out
imul
in
lret
inc
push
pushf
add
lea
add
cli
sub
mov
add
dec
out
ja
idiv
pop
out
cmp
or
std
add
add
mov
pop
and
jge
mov
test
ret
repz
popa
dec
pop
push
in
pop
sbb
push
aad
mov
push
aad
push
out
mov
test
and
jnp
jmp
icebp
add
push
cmp
pop
or
xor
mov
repz
mov
sbb
inc
rorl
sarb
roll
cltd
les
cmp
arpl
push
add
popf
and
aaa
adc
lds
pusha
sahf
into
add
jns
xor
mov
mov
pop
push
aam
subl
pop
sub
mov
pop
lret
push
fnstcw
repz
lret
mov
es
inc
aaa
xor
jge
les
cmp
out
jmp
cmp
jae
pushf
or
loopne
daa
repz
movsb
test
or
ret
mov
inc
shrb
push
push
push
scas
call
xchg
mov
cs
lret
stos
cmp
jp
sar
or
add
in
and
repnz
mov
pop
push
jns
sub
adc
pop
or
push
mov
stos
jne
push
and
mov
push
mov
mov
jp
call
mov
jecxz
cmpsl
inc
mov
imul
fldl
jmp
call
fs
scas
cmc
inc
and
mov
popa
mov
in
mov
test
inc
popa
inc
mov
rcrl
inc
stos
cmp
cmp
add
movsb
out
ljmp
fidivrl
cmp
jbe
jmp
xchg
cld
or
push
push
test
rcll
lea
inc
sub
es
or
out
jge
and
sbb
cmp
add
mov
pop
jecxz
sti
mov
inc
cltd
insl
insl
xchg
movsb
add
std
add
add
add
push
aam
aad
popa
or
fldl
in
shrl
push
jbe
push
pop
cwtl
popf
xchg
fsts
repnz
push
push
pop
jo
push
mov
out
sbbl
cmp
cld
in
mov
sub
sahf
movb
mov
mov
xor
jae
add
push
mov
leave
push
ljmp
mov
loop
push
adc
aam
mov
dec
rcll
or
in
or
rolb
out
in
jns
and
lcall
pop
aam
aad
xchg
jp
mov
inc
mov
push
and
sarl
inc
xchg
push
jmp
dec
jmp
scas
imul
fbstp
into
andl
addr16
ds
add
ret
xchg
mov
cmpsb
sahf
test
cli
lcall
enter
cmp
mull
dec
dec
jbe
js
xor
or
sbb
mov
rorb
mov
ljmp
mov
daa
clc
sub
pushf
xor
or
inc
cmp
cmp
stc
sbb
add
jmp
mov
mov
loopne
pop
xor
iret
je
xor
loope
js
jns
dec
stos
adc
iret
lods
mov
test
sub
insl
jo
mov
or
imul
cmp
fs
ja
xor
shll
jo
adc
jae
pushl
data16
les
fcmovb
pop
fiaddl
cmc
repz
mov
xor
sbb
lret
cltd
enter
cld
es
mov
shll
xchg
fldz
setg
cmpl
xchg
xlat
out
xor
aam
ret
dec
outsl
clc
mov
jne
sub
ss
pop
pop
add
add
sahf
xor
sub
cmpsb
add
std
add
add
je
loop
jge
xchg
cwtl
mov
pop
daa
mov
clc
jae
mov
hlt
call
dec
mov
mov
mov
call
cmp
lea
and
out
lea
nop
xchg
push
popa
divb
jne
jb
bound
push
leave
sub
enter
mov
js
lcall
rcrb
and
and
pop
icebp
clc
dec
les
test
cmp
aaa
and
rcrb
call
push
orl
or
add
mov
and
add
scas
mov
jge
cmpsl
pop
xlat
hlt
adc
outsb
cmp
ret
popa
add
fcom
xchg
shll
daa
icebp
rcrb
addr16
mov
sbb
cmp
repnz
ror
das
lods
fimuls
xchg
jecxz
lret
xor
lock
aaa
aas
adc
jp
adc
fs
bound
daa
imul
scas
mov
cmc
in
jo
scas
pop
in
jmp
inc
or
movl
call
xchg
sub
xchg
std
pop
push
jo
in
out
lret
movsb
push
or
cwtl
addr16
mov
out
pop
sbb
in
adc
insl
cmp
jae
icebp
inc
test
sbb
sbb
dec
inc
pop
fcoml
mov
sub
lds
jp
imul
out
sbb
aaa
aaa
xchg
cmp
inc
cmp
or
mov
pop
lret
push
add
jne
add
mov
ret
jb
int3
xor
and
test
add
sbb
add
inc
cmc
lods
xorb
mov
jmp
inc
xchg
shr
cmp
and
pop
loopne
push
add
add
std
in
mov
mov
std
cmp
dec
out
test
add
add
add
add
mov
inc
js
or
out
push
outsl
aas
sbb
test
cltd
loopne
scas
pop
jle
adc
int
pusha
in
pushf
std
std
push
or
call
xchg
xchg
movsb
mov
out
jmp
mov
mov
pop
cwtl
lcall
pushf
stos
mov
int3
mov
insl
das
icebp
movb
shr
inc
jne
push
mov
in
jl,pn
mov
adc
cmp
xchg
outsl
sar
jbe
out
addr16
int
mov
push
sub
xor
cmp
das
or
outsl
and
mov
daa
cs
ss
int
dec
scas
inc
cmp
adc
cmp
out
pop
out
jne
push
lds
aas
insl
cs
sahf
popf
mov
jb
adc
pop
outsb
mov
xor
sbb
loope
and
xchg
test
jmp
mov
aaa
push
xor
test
cmp
sbb
mov
xchg
or
push
fistpl
inc
outsl
inc
fidivrl
sub
imul
mov
dec
das
mov
push
pop
rclb
pop
enter
sub
or
inc
sub
into
filds
sub
mov
push
add
ja
sahf
jnp
xchg
jl
fisttpll
xchg
stos
das
xlat
pop
lcall
inc
out
jo
out
jnp
addr16
popf
sahf
movsb
ficomps
hlt
inc
test
xchg
xchg
orb
dec
mov
mov
sbb
mov
sub
fcompl
mov
insb
les
aas
inc
divb
sbb
in
hlt
jg
stos
inc
jecxz
and
mov
mov
pushf
aas
divl
add
dec
or
cmc
test
jns
idivl
icebp
fs
pop
mov
jge
test
mov
add
add
add
add
rolb
testb
inc
sbb
stos
add
std
add
add
mov
jle
and
icebp
pop
push
outsl
iret
push
sub
ficoms
mov
sbb
mov
push
jle
or
add
push
sahf
mov
xchg
in
sub
fnstcw
xchg
out
xchg
std
shlb
int
adc
das
lods
mov
sarl
dec
and
ss
lcall
fsubrl
fsubl
add
outsb
cmc
push
xchg
mov
xor
std
sbb
push
pop
test
inc
pop
xchg
stos
sbb
pop
and
out
sbb
call
jne
mov
mov
push
ss
inc
mov
mov
clc
dec
or
mov
stos
sub
sbb
daa
jmp
arpl
sbb
sub
das
cmc
push
pop
rorb
mov
or
add
push
mov
mov
inc
jae
sub
sub
pop
clc
inc
adc
popf
jge
enter
aas
and
sbb
jg
lret
xor
xchg
xchg
std
pop
lock
lcall
add
outsb
lea
add
pop
aad
mov
cmp
xchg
cltd
popa
sbb
cmc
push
or
dec
dec
rcll
mov
les
lret
mov
aas
pop
subb
into
and
aad
int3
lods
ror
push
scas
cld
add
dec
dec
stc
lock
fildll
clc
mov
pusha
in
push
cmp
pushf
sub
jge
das
mov
nop
jp
jne
shrb
outsb
inc
jne
push
addr16
test
fdivs
and
ret
les
sbb
push
ffreep
mov
mov
lcall
fadds
mov
test
and
jecxz
pop
arpl
inc
cmp
faddl
stos
and
dec
xor
adc
push
jno
mov
ret
fs
rorl
lret
fimull
dec
xchg
aam
add
bound
add
inc
inc
popa
data16
gs
mov
dec
icebp
xor
leave
lods
add
std
add
add
or
cmp
mov
add
pop
outsl
decb
shr
into
clc
out
xchg
xor
add
fs
movsb
mov
cwtl
mov
push
push
inc
add
imull
inc
or
repz
repz
dec
clc
out
add
outsb
mov
das
fisttpll
mov
pop
xor
loopne
mov
ret
adc
popf
sbb
adc
xor
repz
inc
and
pop
or
pop
push
sbb
shlb
xor
test
or
mov
lds
outsb
dec
js
js
scas
stos
dec
icebp
fildll
lea
pop
pop
mov
mov
popf
cld
out
pop
cmp
adc
inc
jl
push
jl
adc
push
mov
movsb
into
cld
add
loopne
add
outsl
and
scas
inc
push
push
sub
xor
rorl
pushf
xor
ja
adc
jnp
fdivs
xlat
cmp
dec
push
mov
and
clc
stos
xchg
ficompl
ljmp
cltd
sub
mov
add
sbb
cmc
loope
lcall
repnz
or
insb
xor
sbb
dec
adc
mov
jne
mov
popf
loop
out
pop
leave
adc
movsb
pop
shlb
int
xor
xor
lahf
jg
or
xchg
and
jge
mov
cmp
mov
xor
call
insl
pop
cmp
and
mov
mov
mov
aam
push
pushf
int3
ret
fwait
lcall
cmpsl
sbb
cmp
or
lcall
lea
pop
ret
jmp
sub
paddsb
arpl
clc
xor
lret
push
test
mov
dec
sub
outsb
inc
mov
and
add
mov
rcrl
repz
cli
cmp
adc
popf
mov
cmp
scas
add
std
add
add
sub
stos
cld
xchg
xchg
or
xor
fcoms
repz
filds
divb
jmp
stos
stos
add
dec
stc
xchg
out
mov
mov
and
cmc
fidivrs
inc
fisubrs
cs
pop
mov
and
sbb
sar
cmp
jle
mov
and
mov
mov
or
dec
jp
cmpsl
cmp
dec
ficompl
loop
les
into
or
cltd
push
sbb
add
aad
sbb
hlt
out
icebp
pop
pop
ret
dec
jp
mov
test
pop
push
push
push
je
mov
imul
mov
push
jg
jae
adc
and
lret
push
xchg
inc
test
rcl
scas
int
adc
lahf
es
insw
lahf
xchg
mov
xchg
in
cmp
xchg
jle
pop
inc
sub
dec
push
rclb
sahf
mov
fstpt
iret
sbb
mov
mov
adc
jp
scas
nop
xchg
jmp
xchg
or
mov
dec
adc
mov
sbb
xchg
mov
adc
jb
stc
xor
mull
sti
sbb
xchg
leave
in
jg
xchg
pushf
cmp
jnp
popa
bound
dec
cwtl
and
imul
lock
fdivrs
rcrl
xchg
movsl
sti
out
jnp
int3
ljmp
mov
leave
stos
bound
fs
dec
adc
mov
popf
fildl
jecxz
inc
fwait
mov
xor
inc
mov
mov
psubusb
js
sub
cmp
add
lods
int
sub
mov
inc
mov
push
es
jl
fwait
andb
adc
xchg
sbb
sbb
sbb
loope
mov
aad
daa
adc
and
pop
inc
or
leave
clc
push
pusha
add
add
and
push
push
cmp
add
das
outsl
ret
mov
add
add
add
repnz
inc
mov
sbb
sub
gs
ljmp
add
mov
outsb
xchg
mov
push
ja
fisttps
xor
insl
mov
insl
jge
dec
xchg
sbb
cli
cmp
aaa
cmpsl
push
mov
inc
loope
test
popa
aas
mov
and
divl
add
jns
fnsave
fld
or
mov
or
jnp
fdivrl
pop
push
ret
sbb
pop
orb
test
adc
or
lods
or
ja
dec
push
stos
pop
das
lret
mov
jae
jge
pop
nop
out
ficoms
cmp
push
mov
lahf
push
test
jp
mov
sti
jb
dec
sbb
outsb
sub
sbb
das
test
rcl
ficomps
bound
push
push
pop
pop
pop
adc
jp
jno
or
sub
loop
div
xchg
stos
mov
mov
outsb
cmpsb
pop
adc
ss
xor
add
shrl
clc
test
inc
fisubrl
popa
in
xchg
pop
les
sbb
out
inc
lret
mov
mov
push
std
xor
or
jae
xor
mov
repnz
aam
das
call
bound
jnp
aas
jge
int
dec
pop
push
fmul
fmuls
rol
hlt
push
adc
mov
jg
dec
data16
lea
rorb
fcomps
pop
dec
pop
mov
outsb
sub
adc
fidivrs
stc
or
or
sbb
or
aaa
mov
lcall
inc
cltd
lods
jnp
dec
stos
addb
sbb
xchg
nop
outsl
outsl
xor
imul
jmp
push
test
int3
jmp
ret
repnz
sub
jb
xchg
inc
sub
nop
fs
add
cmp
mov
in
outsb
fs
cmpsb
jle
mov
mov
add
add
add
and
das
lds
or
lcall
pop
js
or
fcompl
inc
pop
push
xchg
mov
xor
in
dec
cmpsb
pop
cmp
or
jns
shll
pushf
xor
inc
scas
data16
add
mov
lds
push
cmpsb
inc
fstpl
std
mov
adc
push
es
mov
add
adc
daa
lret
xor
adc
sub
lock
test
inc
fdivs
jmp
cmpsl
mov
mov
push
push
shl
dec
xor
adc
sbb
sub
and
xlat
subl
test
lods
roll
or
stos
or
jmp
sbb
movsb
xchg
dec
push
out
xlat
ljmp
das
test
xor
repnz
xor
fidivrs
pop
and
fdivrl
xchg
jno
lock
out
dec
xchg
xchg
ror
test
sub
xchg
xor
out
sub
mov
jo
insb
mov
pop
push
xor
cmp
or
fbld
dec
adc
mov
rclb
adc
mov
test
sub
mov
xchg
push
movsl
mov
fs
adc
add
jmp
and
push
out
sbb
mov
and
ficoms
xchg
imul
dec
dec
sub
mov
mov
orl
pop
fisttpll
sahf
ds
or
xchg
inc
inc
rol
xchg
lods
icebp
dec
xchg
sbb
pop
inc
enter
fildll
ss
mov
mov
add
xchg
iret
fsubrs
lahf
sub
jmp
push
add
fmuls
adc
test
addl
add
inc
mov
jb
push
aad
mov
add
add
cmp
cli
mov
inc
pushf
test
xchg
outsl
push
cmp
mov
lahf
lret
enter
pop
sbb
mov
enter
pushf
sub
lret
sub
in
add
mov
inc
repnz
add
mov
push
cmc
mov
pop
fstps
pop
pop
jmp
mov
lret
jmp
and
ror
psubsb
push
mov
xlat
fsubs
and
scas
dec
inc
inc
or
adc
mov
add
loopne
rcr
rcr
out
sub
pushf
into
mov
lret
push
lock
fstp
inc
arpl
dec
das
inc
stc
mov
sub
sub
add
arpl
pop
sbb
jbe
sub
popa
dec
sahf
popa
add
mov
in
pop
cmp
ljmp
jns
jbe
pusha
mov
sub
sbb
mov
push
lods
inc
jle
or
popf
xor
cmp
inc
aas
into
jo
and
sbb
out
xchg
in
test
popf
xchg
fiaddl
stc
xchg
push
insl
int3
enter
jecxz
jo
jmp
loop
aam
or
shlb
sub
pop
sub
cli
mov
fistl
leave
std
je
repnz
sahf
xchg
jmp
inc
push
xor
cmp
sub
pop
ret
fimull
es
adc
xor
test
call
sarb
std
add
inc
lcall
popf
dec
insl
bound
rorl
imul
mov
and
leave
lock
pusha
int
idivl
inc
inc
push
jns
dec
dec
lret
adc
and
bnd
jo
xor
jo
clc
mov
pop
ret
jnp
mov
xchg
add
sub
sbb
leave
xor
addr16
add
mov
cmp
mov
enter
mov
add
add
add
mov
adc
lahf
jb
xor
in
stos
popf
mov
cltd
popa
sub
les
lret
call
push
xchg
pop
or
sbb
or
xchg
xchg
or
in
xchg
ss
test
pop
cmp
insl
xlat
mov
jbe
outsl
sbb
ljmp
push
pop
test
je
bound
pop
in
sahf
mov
xchg
push
jmp
add
mov
xlat
sub
fstl
adcl
aam
adc
int
into
cmc
outsb
mov
cmpb
xor
cli
or
outsl
dec
arpl
jmp
push
pop
cld
cwtl
mov
test
or
mov
or
fists
mov
iret
cs
cmp
movl
dec
and
or
mov
push
mov
add
icebp
xor
bound
inc
xorb
aas
push
mov
sbb
insl
cltd
push
or
fwait
xorl
bound
mov
or
movsl
in
mov
mov
cmp
loope
cmp
xchg
lock
pushf
pushf
and
sbb
mov
sub
int3
fnsave
mov
pop
and
clc
mov
cltd
mov
ds
stos
mov
sub
popa
popa
ficoms
rcll
or
push
aaa
inc
fcmove
cmp
notb
push
xchg
stos
loopne,pt
jge
mov
add
mov
jne
and
push
ds
push
filds
addr16
or
out
or
add
adc
clc
popf
jecxz
push
lea
jae
dec
arpl
and
cmp
inc
and
push
aaa
into
xchg
mov
inc
jecxz
sub
in
stc
xor
imul
lods
je
sbb
arpl
popf
stos
dec
pop
lcall
popa
mov
lcall
add
add
add
sbb
out
idivl
test
add
mov
add
std
add
add
jmp
shll
popf
add
lret
pop
fs
pop
cltd
sbb
mov
fildll
adc
inc
xchg
aam
sub
push
push
fmul
out
sti
in
test
dec
shlb
pop
mov
out
xor
stc
sbbb
push
push
cld
loop
jmp
xor
mov
xor
mov
xor
fcmovnb
mov
push
icebp
xorl
jb
pop
or
push
cmpsb
paddsb
in
adc
clc
and
or
and
inc
jl
hlt
inc
sbb
pop
fnstsw
pop
mov
nop
leave
mov
dec
leave
cmpsl
or
mov
pop
add
xchg
xor
int
loop
lea
push
mov
pop
out
fsubs
add
dec
xchg
repnz
xchg
mov
cmp
or
dec
push
mov
adc
ja
faddp
mov
cmpsl
push
push
cmp
xchg
adc
adc
and
mov
cmp
rclb
mov
imul
and
pop
idivl
pusha
inc
sahf
jecxz
and
pop
jae
push
mov
pushf
stc
pop
nop
test
nop
test
cmpsb
cmpsb
dec
xorb
jecxz
jle
fnstcw
imul
cmp
pop
xlat
les
push
nop
subb
push
jb
push
and
into
popf
sbb
sbb
mull
sub
push
lahf
jns
mov
stos
lahf
mov
pop
pusha
enter
in
xchg
rcr
xor
lret
js
xchg
add
mov
jmp
lret
sub
cli
xor
mov
loope
sbb
jns
aam
dec
dec
adc
fildll
lds
mov
cmp
push
loop
ljmp
mov
faddl
int3
ja
lahf
sahf
hlt
mov
js
pop
std
add
add
sbb
fsin
out
fs
popf
outsb
xchg
cwtl
inc
aas
mov
add
std
add
add
mov
mov
jmp
das
cmp
mov
pop
mov
cmp
cmp
aaa
lret
inc
lods
pushf
jg
ds
mov
cmpsb
xchg
rcr
decb
outsl
insb
ret
cld
xchg
push
repz
test
dec
movsb
xchg
sbb
aas
jbe
js
sti
inc
aad
or
sbb
icebp
or
mov
aaa
addl
in
outsb
movsb
inc
mov
and
mov
call
jnp
lret
mov
push
sbb
stos
mov
sarb
fadds
sub
mov
pop
pop
lcall
repz
scas
push
fimuls
dec
mov
test
jne
nop
mov
outsb
mov
movl
movsl
repnz
mov
dec
enter
jg
divl
adc
aad
sahf
sub
adc
dec
and
lds
icebp
fildll
jnp
stos
lock
add
push
imul
fdivrp
loope
in
popa
xor
push
push
loope
andps
mov
aas
xorb
lcall
sub
xor
mov
sub
xlat
js
mov
pop
cmp
xor
mov
xchg
jno
cld
push
xchg
and
out
or
xchg
add
adc
pop
in
jmp
or
bound
dec
aaa
xchg
inc
scas
cmp
inc
insl
pop
jecxz
dec
cmpsl
mov
mov
pushf
mov
hlt
push
insb
dec
repz
rolb
sbb
inc
shlb
pop
xchg
inc
clc
jg
sbb
out
ss
sub
dec
out
std
frstor
or
fidivl
mov
cmc
lret
xchg
pop
fisttpll
dec
cli
push
lea
push
rclb
jp
addr16
mov
test
sub
mov
scas
jp
pop
loop
gs
mov
int3
mov
jecxz
sub
hlt
mov
add
add
add
add
fsubs
jmp
adc
jl
dec
dec
scas
mov
add
add
add
loop
das
add
in
sub
out
vcvtpd2dq
mov
pusha
enter
or
repnz
xchg
jno
outsl
out
pop
jg
or
dec
shrb
jnp
mov
dec
adc
jle
adc
push
insl
bound
add
lods
adc
aad
lret
stos
popf
dec
jbe
or
negl
xchg
dec
lret
cltd
xchg
mov
dec
push
mov
mov
addr16
dec
mov
add
stc
mov
or
push
test
jnp
and
mov
xor
cmp
out
rcrb
xor
inc
jl
imul
insl
testb
xor
push
xchg
mov
jae
sub
mov
mov
mov
mov
movsl
pop
cmp
loopne
mov
outsb
xor
mov
std
ficoms
and
xchg
add
fwait
add
mov
sbb
and
cmpsl
jno
jns
sbb
pop
ret
in
pop
push
push
push
test
int3
mov
dec
in
rcll
fistps
pop
sub
cmp
mov
call
std
and
clc
stos
dec
pop
jo
fsts
arpl
jmp
ljmp
xor
sbb
sub
int
pop
or
ret
hlt
jge,pt
mov
int
mov
test
ds
xchg
dec
pop
clc
sub
test
test
pop
lods
mov
jns
and
in
cltd
std
bound
mov
repnz
divb
call
push
sub
mov
inc
and
int
or
jo
adc
sarl
sbb
in
lret
inc
cmp
mov
add
push
and
xor
sub
push
scas
mov
add
fdivrl
pop
xor
into
or
enter
cmp
call
ret
adc
rorl
fs
das
xor
xor
out
addl
sbb
push
pop
pop
pusha
mov
cmpsb
pop
fisttps
mov
out
xchg
xchg
inc
jecxz
leave
pop
aaa
aad
lea
jge
fmulp
imul
addl
scas
ds
push
je
test
sti
gs
jle
sbb
cltd
mov
push
sahf
mov
negb
xor
mov
lods
mov
insl
mov
out
sbb
add
jb
dec
jns
mov
pop
mov
js
ret
stos
out
pushf
clc
sbb
mov
pop
fst
xorb
ret
popa
pop
dec
clc
mov
inc
cmp
stc
pop
aam
xchg
xor
std
or
push
inc
xor
ss
subl
notb
movsl
movsl
and
xor
scas
xchg
dec
mov
pop
jl
lods
popa
test
add
cwtl
or
call
sbb
adc
pusha
scas
aaa
mov
je
sbb
mov
xchg
test
lcall
mov
inc
test
xchg
scas
jbe
clc
pusha
or
xchg
jl
rcl
push
sbb
nop
jmp
cmpb
mov
dec
cmp
mov
sahf
stos
clc
test
and
add
jno
les
or
iret
ja
iret
xor
pusha
ficompl
insl
add
xor
loope
jg
or
pop
mov
movsb
jno
mov
lds
cmp
and
mov
ja
in
shll
or
shlb
in
fwait
jb
out
popf
pop
sub
cmp
fdivs
ds
test
scas
mov
std
jb
in
movsl
adc
xchg
add
pop
mov
jg
data16
sbb
push
insb
sbb
add
add
fs
pop
hlt
imul
xchg
fwait
inc
out
loopne
sti
in
jns
dec
out
daa
dec
add
andl
pop
cs
jb
xor
icebp
cmp
stc
pop
mov
push
pop
ret
pop
mov
andb
cmp
mov
lret
pop
les
mov
hlt
rcll
rorb
ret
jbe
pop
stos
clc
je
mov
mov
or
jo
rolw
insl
rol
jg
jne
mov
pop
les
adc
in
aad
jno
test
push
je
outsb
pop
mov
jecxz
mov
subb
jae
pop
jp
push
mov
xor
das
cmp
mov
out
push
ds
ljmp
mov
cmpl
lcall
jle
adc
fstpt
inc
mulb
cmp
sub
stc
lret
mov
pop
or
dec
fdivrl
pop
out
push
lock
call
iret
stc
stc
leave
xchg
adc
jb
mov
mov
les
mov
rcll
lock
in
sub
mov
push
jns
test
aas
dec
pop
mov
loop
pop
shll
pusha
js
dec
fwait
pop
push
xchg
push
cmp
cwtl
or
push
enter
mov
in
mov
add
stc
cmp
icebp
sbb
fnsave
pop
push
mov
and
mov
xor
inc
fcompl
rol
jne
add
mov
call
scas
jmp
xor
push
orl
push
pop
or
pop
mov
rcl
pop
xchg
adc
sbb
loop
inc
jecxz
and
push
in
and
ds
jno
lea
add
inc
push
pusha
jbe
out
test
stos
xchg
push
mov
ret
std
add
add
push
test
lret
sbb
pop
sarl
push
test
or
pop
aad
ret
stos
dec
pop
loopne
das
pushf
adc
xchg
or
insl
stos
sbb
push
test
test
mov
sbb
adc
iret
inc
sarl
aad
adc
mov
mov
dec
test
jb
dec
aam
inc
sbb
jg
clc
mov
xchg
aam
es
lock
cmp
mov
jmp
ficomps
inc
add
mov
fs
xchg
loop
or
sbb
xor
sub
int3
and
sbb
sbb
sbb
nop
mov
cmp
enter
int3
adc
push
das
popa
and
dec
add
lock
dec
std
push
in
push
mov
cs
mov
dec
sub
cwtl
lret
mov
xor
inc
es
add
mov
push
inc
insb
sub
mov
xlat
mov
pop
push
dec
mov
and
cmp
addr16
popa
mov
mov
repz
jmp
imul
nop
shlb
dec
jle
fildl
mov
scas
lret
mov
cltd
les
adc
je
idiv
fwait
out
jg
xchg
imul
mov
jge
addl
mov
loopne
xor
ret
xchg
dec
ljmp
sbb
lcall
mov
les
aam
mov
or
mov
cmc
mov
pop
out
fs
test
cmp
adc
push
sbb
jp
stos
xchg
xor
stos
idiv
ss
shrl
icebp
mov
adc
push
addr16
xchg
push
insb
daa
inc
xor
jo
add
add
pop
lcall
addr16
and
shll
add
xchg
jmp
mov
fistpl
cmp
pop
xchg
outsb
cmpl
dec
ja
fnsave
pop
addb
psraw
xchg
jb
test
cltd
lods
push
divl
rcll
and
cmp
inc
fnstsw
adc
and
out
jno
cmp
mov
cmp
mov
adcb
jno
popf
cmp
push
fimull
adc
das
imul
add
stos
andl
adc
ljmp
dec
lret
ret
add
loopne
int3
outsl
aam
mov
in
adc
fwait
adc
push
bnd
adc
or
or
adc
mov
jmp
adcl
pop
scas
add
mov
aad
cld
js
ds
sub
out
push
test
xchg
lds
cmp
icebp
pop
mov
pop
dec
ds
sbb
push
mov
test
xor
ds
pop
jbe
loopne
adc
loope
add
sbb
js
add
mov
mov
dec
aas
add
subb
ja
push
mov
scas
mov
cwtl
sbb
mov
fcomps
push
push
shll
test
or
mov
push
jg
fidivl
outsb
clc
mov
in
mov
fildl
jl
jle
jg
arpl
adc
dec
push
mov
adc
imul
xor
push
fisttps
cmp
cwtl
pusha
mov
neg
inc
sbb
jns
push
nop
int3
lods
rorl
cmp
xor
aas
sbbl
outsl
xchg
mov
lds
pusha
pop
test
adc
pop
mov
lods
lods
jns
sub
fldt
or
add
add
outsl
daa
insl
push
addb
cmp
and
add
add
scas
sub
ja
push
inc
or
xchg
and
fcompl
scas
xchg
cltd
insl
pop
mov
jle
add
mov
mov
mov
bound
mov
or
mull
cmc
inc
mov
and
cmpsl
inc
rorb
nop
mov
add
imul
out
cmp
push
pop
jae
ja
fcmovnb
mov
jge
jo
push
lock
pop
mov
shl
inc
inc
lret
pop
in
inc
xchg
push
icebp
sahf
adc
mov
repnz
jo
jne
pop
push
xchg
add
popf
aad
ror
out
cmpsl
adc
xchg
mov
or
push
sbb
xchg
in
or
in
pop
pop
inc
sub
push
aaa
xor
iret
cli
arpl
faddl
push
pop
es
lret
call
incl
shll
add
mov
xchg
mov
cmp
push
dec
loope
xchg
mov
cs
inc
aad
sub
ret
stc
dec
adc
movb
dec
dec
and
pop
lret
lods
xlat
cld
rolb
lods
ret
sahf
xor
mov
or
imul
pop
mov
sti
mov
out
and
cs
pusha
fwait
jne
aad
pop
sbb
adc
lods
or
mov
popf
mov
jecxz
push
add
pop
add
inc
and
dec
movsl
mov
lds
in
inc
jns
adc
push
mov
push
jmp
test
xchg
mov
js
add
add
xchg
aaa
fldenv
inc
std
cmp
loope
dec
fmul
mov
push
loop
xbegin
lock
xor
fs
xor
ret
movsl
inc
cmp
lods
fidivs
push
sti
loop
rorl
call
or
add
inc
lea
and
mov
out
leave
enter
push
mov
add
add
add
mov
pusha
pop
jg
add
inc
cld
cs
sub
sahf
lahf
fisttps
push
or
fnstcw
gs
js
mov
sbb
xchg
mov
mov
sub
push
sub
cmp
and
es
addr16
shlb
aas
inc
fistl
cmc
cmp
leave
xchg
test
xchg
dec
rolb
jl
fldt
mov
and
int
xchg
adc
lret
adc
jns
js
jo
push
lea
push
sub
orl
jecxz
push
mov
scas
std
outsl
sub
mov
data16
or
repnz
mov
ja
stos
mov
icebp
pop
cmp
mov
cmp
rcl
add
test
pop
mov
int
js
gs
fldenv
sub
adc
test
cmp
nop
xor
sub
mov
push
je
mov
fimull
add
pop
sbb
inc
ret
aas
xor
lahf
jge
mov
stos
mov
mov
sahf
jae
fstpl
cltd
adcl
testl
or
cld
scas
imulb
mov
sub
lcall
or
xor
scas
fs
mov
fstps
in
inc
pop
cmpb
mov
mov
pop
stos
and
push
mov
and
movsb
pop
inc
movsl
cwtl
adcb
push
popf
iret
add
jno
int3
inc
add
dec
mov
ror
inc
cwtl
pop
imul
mov
inc
mov
cmpb
lcall
loop
push
rcrb
das
lret
lods
jge
mov
ds
sahf
adc
lcall
dec
mov
pop
sub
shll
add
xchg
rcr
push
sbb
sub
adc
jl
insb
fildl
add
hlt
cmp
mov
mov
lret
std
add
add
lods
test
push
xchg
shl
ret
sbb
xor
jge
adc
push
ret
pop
pop
lret
sahf
jl
arpl
es
add
and
fistpll
sti
jle
cmp
and
xor
in
fs
aad
gs
inc
iret
lods
lahf
sahf
test
pop
inc
out
pushf
xor
insl
jnp
movsl
icebp
test
roll
gs
data16
xor
or
push
mov
xchg
add
out
popf
add
push
clc
push
push
addr16
imul
or
cld
outsb
std
inc
sub
mov
cmp
jp
pushf
lods
ja
xchg
sub
fstps
imul
xor
loop
cmp
add
push
cmp
dec
xor
jno
pop
jl
xchg
inc
daa
cs
inc
and
adc
dec
cmp
mov
or
jge
xor
outsb
js
inc
push
adc
mov
sub
and
test
cmc
mov
test
pop
adc
in
aam
and
and
xor
sahf
xor
fdivs
cmpl
jbe
add
dec
jmp
icebp
out
cmpsb
cwtl
int3
pushf
mov
dec
arpl
test
push
test
mov
push
push
pusha
cmpsb
jmp
xor
xchg
push
or
xchg
fistpll
mov
push
mov
in
les
lret
or
cmpsl
add
adc
xchg
add
fwait
jne
adc
cli
hlt
lea
xchg
into
adc
jmp
es
scas
push
add
rclb
fsubrs
inc
jnp
cmp
dec
aam
bound
jmp
jl
loop
in
or
or
es
jb
push
mov
hlt
repz
cli
mov
cs
mov
xor
add
push
ds
outsb
sbb
aam
dec
scas
or
pop
cltd
int3
add
std
add
add
sub
pop
cs
ljmp
mov
add
dec
movsb
add
iret
push
aam
xchg
mov
xlat
jno
mov
push
nop
push
inc
pop
add
inc
inc
or
mov
imul
dec
mov
push
test
sub
out
mov
dec
xchg
mov
aad
lret
les
stc
psubb
ficoms
rclb
sar
hlt
lret
jmp
jnp
arpl
fistpl
cmc
imul
pusha
or
push
testl
in
push
jl
lea
rolb
push
dec
mov
adc
lcall
cltd
and
adc
int
or
inc
test
ret
or
imul
pop
mov
call
mov
shl
cmp
into
mov
lcall
mov
inc
lret
test
push
outsl
pop
add
and
out
xor
sbb
add
or
add
iret
ud2
push
shl
cltd
pandn
mov
flds
inc
mov
loop
cmp
xchg
dec
sub
les
insb
jae
xor
dec
dec
cmp
adcl
mov
jbe
sub
mov
adcb
cmp
enter
loopne
add
rorl
jl
or
mov
mov
push
pop
lahf
popl
pop
cmp
rolb
jo
mov
out
iret
inc
mov
das
push
push
data16
in
xchg
adc
sbb
add
pop
mov
popa
fldcw
jne
mov
lcall
cmp
aad
jnp
pop
icebp
inc
cwtl
mov
loope
jo
sub
add
pop
sub
pop
enter
add
mov
mov
nop
mov
in
call
std
add
add
clc
test
lahf
mov
jnp
push
push
addr16
pop
dec
pop
or
popl
bound
leave
out
mov
enter
mov
sbb
dec
jmp
adc
or
jl
sti
sub
xchg
adc
jl
add
adc
js
int
test
fdiv
imul
cmpsb
mov
pop
mov
inc
shrb
xlat
lret
shlb
jge
pushf
icebp
dec
push
pop
adc
rcll
mov
mov
in
push
fmull
mov
xchg
rcrb
lret
cmp
ror
mov
sub
cli
div
fildll
mov
adc
dec
xorl
and
insl
jg
shr
sub
je
lret
fldlg2
mov
add
int3
sbb
jo
push
inc
cmp
out
mov
jecxz
add
or
xor
mov
xor
jl
imul
aaa
fwait
int3
and
xor
stc
popa
push
popf
dec
cltd
loop
in
xchg
icebp
ret
dec
xor
xchg
jnp
mov
or
out
not
in
adc
bound
pop
sub
cmp
repz
hlt
inc
icebp
das
call
pop
xchg
mov
cmp
jns
in
fnstsw
add
push
sub
mov
fadds
arpl
sbb
push
jae
ret
inc
fwait
negl
pushl
ljmp
or
in
sub
aaa
mov
sub
imul
or
cmp
mov
sub
movsb
data16
inc
cmpsb
xor
mov
add
aad
popa
sbb
outsl
repz
jl
fnstenv
shlb
testl
pop
movsb
xor
add
dec
inc
mov
in
dec
cmp
andl
add
popa
push
mov
mov
stos
jno
mov
push
mov
ror
stos
and
andl
add
add
push
pop
or
dec
sub
mov
lds
aas
pop
inc
push
xor
pop
decl
cs
lds
bound
and
xchg
inc
cmp
test
mov
mov
push
lds
add
pusha
cmp
cwtl
and
mov
push
jo
xchg
ret
mov
aam
nop
imul
add
rolb
enter
push
sub
scas
iret
popf
sub
sbb
in
push
or
mov
push
fs
leave
sbb
rolb
gs
fidivrl
imul
adc
cwtl
daa
sahf
pop
cmp
or
xorl
gs
ljmp
jae
repnz
push
nop
test
adcl
std
mov
out
inc
sub
lods
adc
scas
pop
pop
out
pop
rcrb
dec
cmc
xor
jnp
mov
es
sti
stc
idivl
iret
cwtl
sub
push
push
lret
adc
mov
call
mov
jne
sbb
jg
and
lret
pop
pop
mov
dec
and
mov
add
bound
daa
outsb
lret
nop
rolb
adc
addl
mov
sub
or
cmp
pop
mov
je
clc
xchg
push
xor
jmp
subl
cmpl
mov
cmovo
mov
inc
fldt
cmp
sub
or
cmp
movsb
jno
stc
cmc
dec
xor
mov
inc
mov
cs
inc
out
ja
cld
dec
sub
cmp
das
mov
xchg
push
mov
pusha
sti
ret
jle
adc
add
fldcw
sub
mov
nop
rolb
add
add
add
dec
sub
cmp
call
aad
out
loopew
loope
or
xchg
lahf
lods
xchg
sub
repz
jle
mov
dec
mov
and
cmp
icebp
test
cmpsb
push
rclb
xor
shll
jecxz
mov
divb
ja
push
pushf
jg
subb
dec
mov
mov
cmpsb
xor
add
pop
repnz
mov
aaa
flds
xchg
repnz
pop
and
and
adc
mov
scas
test
xchg
cmp
fsubrl
mov
pushf
mov
pusha
mov
subl
addr16
pop
ret
jb
mov
je
cld
shrb
pop
push
pop
jo
outsb
hlt
add
pop
xor
xchg
and
or
mov
adc
pusha
mov
xchg
cs
popa
adc
mov
adc
test
loope
cltd
nop
xor
mov
nop
xor
add
cmp
jmp
sub
xchg
add
int
lods
or
and
fwait
mov
jl
cmp
inc
les
inc
adc
leave
inc
xchg
adc
ds
xchg
cmp
push
inc
mov
fwait
das
data16
jno
fimull
dec
jnp
adc
mov
mov
push
push
pop
stos
and
inc
clc
imul
xchg
mov
mov
or
out
fcmovnu
mov
sub
dec
leave
inc
sarl
dec
in
dec
cmp
mov
jne
loopne
xor
pop
sub
ja
stos
fistpll
mov
mov
inc
js
jno
hlt
sub
mov
addb
popf
aaa
movb
jmp
jns
ja
test
xlat
xor
xlat
pop
cs
movsb
xor
add
push
dec
pop
xchg
cli
jae
aam
add
add
add
mov
lock
pop
sub
ljmp
push
jno
filds
sbb
push
pop
fnstenv
push
in
jg
mov
popf
inc
inc
imul
int3
lods
int
inc
insl
pop
mov
test
inc
fsubr
sub
test
lods
mov
addr16
push
sbb
mov
push
pop
subl
dec
push
stos
mov
int3
fucom
into
mov
ret
fs
mov
fs
aas
ret
jnp
jge
pop
dec
lcall
or
fsubs
std
movsl
loopne
incb
aas
mov
xchg
pop
sub
and
mov
xor
and
dec
xor
ljmp
js
or
jecxz
xor
xchg
aas
push
inc
movsl
fs
fs
repz
jge
sbb
pop
push
fadds
sbb
call
sbb
and
lock
fwait
aaa
popf
mov
jmp
aad
mov
repz
loopne
pop
add
mov
leave
scas
inc
insb
pop
out
hlt
sti
mov
dec
jnp
dec
mov
ret
movsl
sbb
sub
sbb
mov
out
leave
and
jno
sbb
je
shll
int3
jl
fldl
xor
repz
adc
add
jb
bound
outsl
sub
fsubs
test
int
inc
inc
mov
lock
pop
jge
xchg
mov
sbb
xchg
hlt
test
sarb
sub
xor
into
mov
inc
pop
xor
inc
push
mov
inc
sbb
xchg
dec
jae
cli
cmp
or
int3
and
sbb
and
mov
pushf
jbe
fdiv
test
xor
and
fdivrl
ret
roll
rorl
add
or
dec
mov
sub
sub
lods
cmp
add
add
mov
fmulp
xorl
outsl
cs
ret
mov
sbb
xchg
outsl
dec
jecxz
fisttps
scas
pop
jns
push
int3
jns
mov
lret
mov
divb
cmpsb
push
mov
scas
dec
insl
mov
incl
stc
mov
fld
js
fcmovnbe
mov
push
xchg
xlat
xchg
repnz
push
mov
or
cmp
shlb
fdivr
int3
sbb
popa
sbb
add
fmuls
sbbb
mov
mov
adc
ret
out
add
lods
je
lret
out
insl
pop
divb
mov
sahf
ret
mov
hlt
push
dec
in
jnp
ljmp
js
gs
push
ds
inc
out
movsb
push
cmp
dec
xchg
das
xchg
nop
inc
sub
push
inc
iret
incl
or
xchg
xchg
push
or
lods
and
push
sbb
ljmp
les
xchg
xchg
aam
cs
faddp
mov
adc
lahf
fnstcw
mov
rol
cltd
sbb
push
int
lods
out
in
mov
fisubrs
xor
mov
pop
in
je
xor
sub
test
ss
mov
rorb
add
loop
sti
std
inc
arpl
std
sub
loopne
jbe
or
xor
xchg
mov
xchg
lds
std
mov
pop
jnp
pusha
push
pop
lds
stos
xchg
hlt
mov
pop
pop
push
mov
test
loopne
sub
ficoms
testb
inc
sbb
jecxz
inc
fisttpll
sub
in
lret
or
js
pushf
and
daa
and
fsubrs
or
cltd
imul
cmp
bound
jecxz
testl
push
lods
lret
sbb
popa
or
das
arpl
add
ret
and
dec
repz
fldt
clc
movsb
idivl
xchg
add
std
add
add
xchg
mov
jbe
xchg
lea
aam
dec
adc
repnz
mov
cmp
in
pop
mov
and
mov
stos
add
rcll
ret
xchg
bound
mov
js
pop
sbb
mov
movsl
mov
sti
dec
mov
mov
mov
js
xchg
push
jp
xchg
pop
cmpsl
movsb
outsl
xchg
fs
test
jmp
xchg
cwtl
rorb
xchg
bound
add
adc
stos
call
pop
sbb
mov
repnz
and
mov
pop
mov
arpl
scas
cltd
aaa
sahf
daa
imul
lea
mov
imul
imul
pop
mov
in
pop
lock
pop
test
cmp
shlb
sti
inc
jmp
loop
dec
xor
gs
xorl
ss
shl
cli
mov
inc
mov
rol
js
adcl
pop
test
mov
jno
mov
js
mov
data16
jmp
add
sbb
xor
or
sub
pop
adc
fnstcw
push
ja
cld
jecxz
xor
pop
ret
lahf
adc
pop
mov
hlt
ret
test
pop
aam
stos
mov
aad
ror
out
fadd
adc
push
push
xlat
push
add
lock
insl
rclb
jmp
lods
mov
pop
lcall
daa
cmp
mov
add
cmc
cmc
sub
gs
in
adc
dec
icebp
xchg
das
mov
or
lds
add
sbb
mov
jge
add
add
lcall
rcrl
add
std
add
add
ljmp
mov
and
call
pop
fwait
lahf
push
pop
xchg
jo
ja
orb
repz
imul
jns
std
lcall
enter
mov
out
test
nop
popf
pop
dec
stos
int3
xchg
arpl
push
call
mov
fsubr
sub
out
int3
mov
sbbl
test
popa
cli
adc
or
push
stc
sub
loop
lds
lcall
mov
das
ja
jb
sub
inc
or
push
jbe
test
sub
inc
ja
jecxz
enter
gs
in
out
and
or
pop
out
in
and
cltd
or
inc
jo
dec
outsl
fnstsw
xchg
shl
loope
mov
mov
lcall
jo
les
sub
out
mov
loop
notb
fcomp
xor
mov
push
xchg
and
jecxz
cmp
arpl
pop
add
lea
push
cmp
mov
mov
xchg
mov
add
xchg
imul
jmp
add
lea
jns
movb
pushf
das
xor
daa
aad
adc
outsl
stc
jp
cmc
decl
pop
int3
adc
icebp
or
dec
or
or
sub
stc
mov
mov
xlat
or
sbb
std
adc
dec
dec
das
sub
test
lahf
js
xchg
mov
mov
dec
mov
push
push
xchg
notb
imul
cmpsl
into
mov
add
filds
xchg
fs
cmp
std
jo
adc
xor
fisubrl
push
or
or
or
addr16
mov
into
push
data16
jns
ss
mov
inc
cmp
push
cs
insb
mov
sub
aaa
pop
stos
stc
sbb
rolb
dec
idivl
jg
pop
or
add
add
add
lds
sub
leave
cmp
adc
insb
mov
mov
adc
lret
data16
mov
add
mov
dec
sbb
jge
mov
sbb
inc
mov
movsb
std
in
jmp
mov
jp
mov
dec
dec
sbb
add
adc
jns
jl
and
dec
mov
lock
adc
movmskps
repz
jl
xchg
xchg
cmp
lods
jbe
or
arpl
push
lea
xchg
xchg
pop
mov
pop
pop
jge
cmpsb
cli
xchg
pop
es
dec
and
dec
fidivs
pop
into
fidivrl
xchg
lret
lahf
nop
dec
mov
or
aaa
push
movsb
addl
xor
sub
inc
pusha
cmp
aad
outsl
outsb
andb
sub
mov
sti
jnp
cmpl
jmp
adc
jne
cld
das
popf
dec
and
lcall
mov
lret
out
loop
inc
cmp
rorl
hlt
movsb
cli
outsb
cmc
xor
cmpsl
in
out
and
jnp
push
cmpsb
repnz
or
mov
mov
xchg
out
enter
test
mov
pushf
in
rclb
push
xchg
bound
shrl
lcall
out
inc
pop
mov
or
push
mov
sbb
cmp
mov
lea
adc
sbb
push
sub
mov
push
inc
test
xchg
lcall
adc
mov
fisttpll
xchg
sbb
sub
ret
mov
xor
and
sbb
push
mov
xor
dec
xchg
jns
lret
inc
mov
std
adc
cmp
jne
add
mov
lods
mov
mov
call
mov
jne
std
and
add
std
add
add
sarl
jecxz
push
jl
mov
pop
lret
cmp
outsl
imul
mov
aaa
inc
xchg
or
add
icebp
mov
lods
cmp
repnz
stc
cmp
dec
test
daa
jbe
lcall
xchg
repz
aam
jg
ret
cli
rcrl
sarl
mov
sub
jns
cmc
iret
add
hlt
adc
and
add
push
test
jne
sahf
jecxz
lods
aas
ret
sbb
test
mov
scas
cwtl
je
mov
je
xor
in
jnp
push
mov
scas
sbb
pop
mov
cmp
jecxz
sbb
fsubrl
adc
sbb
ficoml
adc
jae
roll
inc
inc
add
cli
fsubrs
rclb
scas
scas
clc
push
rclb
loope
movsl
dec
push
mov
mov
iret
sub
jge
mov
fwait
pop
out
jl
mov
mov
sbb
fucom
push
pop
rcll
cmp
mov
sbb
push
dec
sub
orb
jns
mov
sbb
inc
ret
data16
gs
xorl
dec
xor
xchg
nop
ja
lds
mov
dec
int3
mov
pop
mov
movsl
jecxz
xor
dec
arpl
mov
in
add
pop
pop
cmp
jae
cmc
loope
into
ret
daa
lods
mov
inc
mov
add
and
invd
insb
pop
push
or
add
lods
push
jmp
push
xor
mov
xor
push
gs
dec
add
outsb
adc
mov
xchg
das
in
fisttpll
addr16
mov
filds
adc
xor
inc
enter
sbb
dec
mov
aas
and
cmp
add
ficompl
mov
pop
xor
add
std
add
add
divb
fucom
int3
adc
jne
or
mov
mov
ljmp
cli
mov
outsl
in
dec
hlt
sahf
sarl
inc
insl
jb
xlat
inc
loop
xchg
roll
gs
stc
mov
add
lret
icebp
xor
dec
rcrl
rcrl
es
test
clc
lock
out
mov
xchg
cmp
lahf
mov
jmp
test
cltd
das
mov
mov
aaa
leave
mov
mulb
sub
ret
or
sub
mov
mov
js
lods
jle
cld
popf
test
sti
ljmp
js
stos
push
sbb
daa
pop
shl
into
sub
js
in
mov
enter
push
inc
cld
mov
stos
cmp
sub
test
sbb
fstpt
sub
push
xor
in
shll
mov
sbb
jb
lret
push
cwtl
pop
xor
scas
sub
mov
cmp
out
ret
mov
inc
mov
sub
adc
cmpsb
sbb
or
hlt
mov
data16
mov
mov
pop
mov
fwait
lods
out
jo
adc
cmpsb
fcmovb
sbb
sbb
jl
mov
adc
sbb
or
jge
aad
mov
sti
adc
loope
mov
add
sub
and
iret
xor
cmp
push
jns
cld
insb
clc
roll
ret
in
in
dec
xor
mov
arpl
push
dec
sbb
pop
jns
ljmp
jecxz
jns
cmp
pop
cwtl
xlat
and
pop
das
lods
push
and
fnstcw
pop
imul
daa
les
adc
xor
xlat
jne
loope
movsb
lock
ja
in
sub
inc
jne
add
inc
stos
pop
sbb
cli
inc
cli
mov
sbb
add
std
add
add
or
vpsrad
jnp
add
fmuls
or
mov
imul
or
xchg
xor
ret
das
mov
and
clc
cmpsl
fxch
or
cmp
lods
dec
dec
rorl
fcompl
mov
jae
arpl
mov
cltd
insl
inc
push
adc
movsl
lret
fs
addr16
adc
xor
mov
jge
mov
mov
mov
lods
push
and
orb
mov
jae
and
inc
je
add
xor
mov
cmp
cmp
push
int
in
or
or
add
lea
daa
dec
cli
in
mov
adc
lahf
dec
dec
xor
and
jmp
lds
jmp
js
notl
xor
outsl
cmpb
fs
mov
popf
xchg
adc
fmul
rcll
jmp
mov
dec
mov
adc
sub
repz
jno
sti
arpl
xchg
nop
pop
sub
jbe
xchg
xor
movsb
push
sub
xchg
insb
inc
fisttpl
daa
xchg
pusha
outsb
data16
fmuls
jl
cltd
jo
leave
push
notb
sbb
fs
jmp
push
sub
cmp
sbb
arpl
sahf
addr16
mov
sbb
repz
jmp
cs
jp
cmc
xor
add
cld
scas
mov
mov
das
cltd
inc
movsb
loope
xchg
push
inc
mulb
cmp
dec
push
adc
xchg
or
adcl
vmwrite
dec
ds
adc
xchg
cmp
pushf
fwait
std
not
in
mov
rep
push
mov
xlat
push
xlat
ja
out
push
lahf
daa
dec
stc
data16
add
std
add
add
xor
xchg
xlat
adc
and
push
movsb
mov
mov
mov
hlt
jno
and
sbb
std
xchg
or
mov
xchg
pop
jmp
cmp
push
out
rcl
loopne
jmp
mov
ljmp
lock
xor
add
xchg
cmc
lea
nop
jnp
and
mov
mov
dec
out
push
cmp
xor
std
hlt
pop
clc
or
sub
jmp
and
aam
out
dec
and
push
movsb
dec
adc
sarb
mov
dec
mov
fnstcw
mov
outsb
pop
mov
cmp
lahf
add
dec
dec
inc
loopne
mul
sahf
test
cwtl
pop
push
jne
add
and
insl
dec
push
or
xor
push
ficoms
cmp
outsb
aam
and
aaa
mov
fs
add
out
std
jb
out
mov
dec
add
subl
pop
jne
jecxz
jae
stos
and
pop
inc
mov
cltd
jge
lahf
or
xorb
mov
xchg
mov
sub
daa
inc
mov
dec
push
adc
aaa
outsl
inc
or
mov
imul
xchg
mov
and
dec
adc
pop
or
or
test
sub
inc
test
ja
mov
and
xor
les
jo
loopne
cmc
out
and
shl
inc
mov
fdivrl
lock
shl
and
push
pop
jno
cmc
subb
testb
and
push
dec
mov
orl
repnz
add
add
jno
shll
testb
add
rcll
jmp
jnp
xchg
jb
add
std
add
add
rcrb
dec
pop
incb
inc
pop
movb
sub
mov
pop
xchg
fs
mov
mov
fldenv
nop
mov
sarb
mov
out
imul
ret
mov
add
sub
push
icebp
mov
nop
xor
je
vmovsldup
push
sub
insl
into
dec
aaa
add
stos
sub
jb
mov
lret
movsl
daa
cmp
loopne
xchg
in
fisttps
jae
sub
dec
sbb
pop
icebp
in
cmp
outsb
push
fcmovnbe
mov
xor
cwtl
aad
popa
push
movsl
sbb
push
fldenv
sub
mov
and
xor
jl
sbb
pop
and
mov
inc
push
shrb
xor
dec
leave
and
repnz
out
or
outsb
add
and
ja
jecxz
pop
xor
or
mov
insl
cmc
lret
inc
push
add
jecxz
ror
cmpsb
out
out
js
mov
sbb
aas
out
inc
loopne
movsl
mov
out
mov
js
sarl
cs
jge
mov
decl
push
jno
mov
xchg
int3
ljmp
mov
in
popf
in
adc
in
jno
and
mov
cli
push
and
ficomps
ret
fscale
mov
push
in
inc
enter
rorl
adc
push
test
mov
mov
leave
fwait
jmp
out
bound
adc
cmp
mov
cltd
lds
sbbl
sub
xor
inc
jo
mov
rorb
lcall
mov
sub
ljmp
cmp
scas
push
push
mov
ret
or
jp
pop
lcall
sbb
aam
movsl
neg
roll
add
negb
mov
int3
or
add
add
add
ret
and
sub
pop
xchg
imul
test
adc
and
mov
mov
lock
jl
test
jb
out
xchg
ret
sbb
push
adc
lea
dec
add
lahf
sub
dec
lods
cld
fidivrl
stc
insl
arpl
in
dec
jl
and
mov
mov
sbb
stc
mov
mov
push
fcmovu
jmp
lock
aad
andl
push
or
adc
scas
pushf
sub
push
jge
mov
add
jmp
faddp
mov
adc
aas
dec
lret
or
inc
add
mov
mov
pushf
xchg
hlt
dec
pop
dec
add
pusha
movsl
fidivrs
mov
outsb
cmpl
adc
jge
xchg
movsb
ficoms
or
sbb
sbbl
xor
sarb
cmp
xlat
fcmove
je
adc
push
mov
jg
mov
sbb
outsl
cmc
imul
xor
jno
and
icebp
idiv
xlat
aad
scas
fnsave
in
shr
mov
test
pop
faddp
mov
gs
insb
mov
push
xor
lds
repz
add
in
fcmovne
into
or
lret
push
popa
dec
sub
ss
popa
xor
pop
imul
add
mov
in
or
cwtl
push
cmp
mov
ss
and
ljmp
fneni(8087
out
pop
add
lock
idivb
cmp
adc
dec
mov
sahf
mov
or
insl
add
ja
or
dec
inc
das
sbb
loopne
push
dec
pop
icebp
mov
lcall
dec
pop
push
inc
mov
mov
cltd
mov
test
xchg
fimull
mov
push
jne
clc
lret
adc
jg
add
add
sub
ja
jno
dec
inc
lock
add
add
add
xchg
jb
aas
cmp
cld
mov
sbb
hlt
lds
sbb
dec
mov
sti
addr16
js
inc
xchg
int
mov
sbb
pop
push
iret
pushf
in
jo
and
ficomps
pop
addr16
add
pop
ljmp
loope
xchg
xchg
mov
add
pop
dec
pop
mov
jecxz
adc
mov
insb
lods
push
jae
jae
cmc
insl
inc
jecxz
mov
add
imul
jge
or
add
lret
jns
inc
nopl
push
mov
arpl
sub
cmp
sub
std
outsb
mov
sub
test
add
frstor
push
jae
stos
in
adc
push
dec
dec
jp
frstor
xor
cmp
xor
xor
mov
sub
jp
mov
jnp
movsl
lods
out
data16
xchg
test
adc
pop
inc
inc
lcall
popa
les
xchg
mov
add
jge
stos
mov
mov
inc
fimuls
mov
fnstenv
push
xchg
bound
push
jne
into
out
ret
scas
or
add
or
lcall
mov
fsubl
das
dec
int
enter
xchg
testl
lcall
mov
data16
lock
fnstenv
fadds
shll
call
mov
sbb
pushf
or
cltd
mov
pushf
lahf
add
push
sahf
jo
outsb
xor
popf
ret
mov
test
popa
ljmp
and
ljmp
push
add
add
fcoms
ret
jno
inc
repnz
ja
aas
pop
cltd
mov
jb
pushf
scas
cmp
push
xlat
inc
adc
pop
add
lcall
cltd
enter
mov
stc
popf
jecxz
inc
je
in
add
std
add
add
out
sbb
push
xchg
or
dec
cmp
mov
xor
in
push
out
inc
lods
fsubl
bound
xor
jecxz
cmpb
fucomp
popa
cli
mov
or
adc
and
cs
sbb
cs
rcr
roll
and
js
or
lods
push
stos
insb
sub
bound
repz
loopne
cmp
sti
sub
orl
or
in
adc
roll
pop
mov
in
xchg
aas
sbb
xchg
mov
repz
push
outsl
push
lcall
mov
push
fimuls
jne
notb
outsb
mov
fs
push
jge
adc
pop
lcall
add
mov
pavgw
pop
jns
jmp
dec
aas
xchg
insl
test
sarb
or
ret
outsb
mov
cmc
cmp
sbb
xchg
adc
mov
ss
mov
scas
push
pop
cwtl
dec
fs
mov
ret
icebp
inc
inc
dec
orl
gs
ds
and
jbe
stc
or
test
add
push
cmp
movsb
mov
lods
pop
ret
aam
fisubrl
insb
cmc
add
jecxz
popf
rep
ljmp
ss
lret
xor
ret
mov
mov
loope
fwait
sub
faddl
xor
sub
push
cmc
sub
inc
push
rclb
mov
repnz
enter
sub
enter
in
jae
fdivl
aam
sub
sbb
and
ret
cmp
cmp
pushf
mov
mov
jne
add
in
sub
mov
add
push
cmp
jecxz
mov
repz
mov
cli
les
cmpsb
inc
sub
mov
add
sbb
jge
and
dec
ret
cmp
add
add
add
scas
or
daa
filds
pop
xchg
mov
test
imulb
inc
lcall
mov
insb
and
xchg
out
int3
into
sub
jae
daa
jo
dec
jo
inc
or
jg
mov
lock
mov
and
mov
push
cmp
xchg
je
arpl
cli
std
ss
pusha
mov
mov
decl
push
push
cmp
pop
pop
insl
mov
push
push
pop
sar
nop
xchg
cmpsl
fsubr
aad
or
nop
push
repz
int
jne
sbb
loope
aam
push
pop
in
out
dec
dec
push
or
xor
mov
push
cmp
rorb
cltd
mov
cmp
mov
mov
inc
ror
das
dec
xchg
mov
sub
pop
pusha
stos
sub
push
loopne
pop
cmp
add
adc
test
xor
mov
mov
mov
or
xor
cmp
addb
pop
xor
jmp
fsts
leave
int
xchg
je
jb
andl
ret
test
into
mov
cli
or
and
sub
fwait
lds
cmc
mov
jmp
pop
aam
pop
inc
mov
scas
lock
pop
pop
xor
xchg
push
xchg
and
lea
adc
inc
lea
ljmp
mov
sub
xlat
mov
int3
adc
and
out
jle
mov
add
mov
clc
fucomip
rcrb
dec
mov
out
mov
frstor
in
icebp
jns
dec
movsb
xor
mov
jecxz
popf
xchg
xchg
mov
clc
cmp
adc
pusha
sarl
test
add
add
roll
pop
arpl
mov
arpl
add
std
add
add
lret
sti
jp
int3
cmpsl
push
loope
mov
lcall
mov
push
xchg
pop
outsb
xchg
fadd
dec
fbld
fimull
ret
cmp
jo
or
inc
aad
cmpsb
daa
es
repz
jl
sub
les
loop
leave
cmpb
fsubs
es
jecxz
push
in
mov
sbb
in
iret
cwtl
push
and
cmp
or
mov
aad
arpl
sbb
mov
xor
jp
cmp
and
out
add
rcll
scas
jno
cmp
shrb
or
orb
add
cmc
mov
jge
sub
adcb
mov
fdivl
push
cs
scas
sbb
std
or
and
cmp
jmp
ret
cmpsb
stc
imul
repz
rorb
scas
daa
imull
mov
cmc
push
sub
jne
pop
icebp
outsb
cmpsb
xchg
jl
push
mov
sahf
cmp
pop
loope
inc
jmp
ret
bsf
pop
sti
mov
mov
pop
jg
mov
pop
mov
addb
pop
adc
xor
mov
ljmp
push
out
adc
sbbl
add
xor
jbe
arpl
shrl
ss
and
sbb
stos
loop
push
ja
cld
xchg
cmp
cmp
f2xm1
and
in
add
and
aaa
mov
cmpsl
pop
dec
push
sbb
fprem1
imul
pusha
push
scas
stos
xor
mov
sarl
inc
in
aaa
inc
js
popl
mov
std
mov
mov
or
xlat
pop
sbb
mov
inc
and
sub
sbb
push
outsl
testb
lret
push
add
add
daa
pushf
cli
mov
xchg
out
cltd
add
add
std
add
add
dec
cmp
aam
lea
pushf
or
outsb
les
xchg
out
pop
xor
add
loop
mov
push
pop
sti
push
cmpsb
xchg
xor
sub
popf
push
bound
dec
push
test
mov
rcr
into
xchg
cs
fists
pop
jge
leave
mov
xchg
jecxz
clc
cwtl
push
mov
fsubrs
inc
push
pop
jne
stc
cs
pop
sti
xor
add
sbb
mov
sub
stc
sub
in
mov
xchg
fcomps
mov
ds
adc
push
xor
pushf
cmpsl
jmp
shlb
scas
rclb
or
add
dec
lcall
leave
dec
xor
pop
inc
jg
adc
dec
enter
fildll
inc
fcmovb
mov
outsb
sahf
das
jp
sahf
mov
xlat
test
mov
dec
ljmp
adc
fcomi
rolb
ja
jmp
cmp
std
shr
or
insl
addl
inc
mov
arpl
lods
adc
popf
ljmp
push
inc
dec
out
dec
in
xchg
sti
cmpsb
push
cs
insl
lea
repz
les
mov
add
xlat
push
sub
pop
xorb
leave
repz
dec
scas
dec
call
push
cli
decl
ret
mov
jbe
cltd
pop
ret
mov
add
sbb
and
nop
adc
pop
repnz
xchg
imul
xchg
ret
mov
fcoms
fildl
adc
jnp
cmp
daa
xor
push
js
push
mov
fsts
sarl
xor
mov
xchg
dec
xorb
xchg
mov
xor
add
add
add
fisubl
and
sbb
add
std
add
add
fists
push
jecxz
cmp
jecxz
lret
sbbb
enter
decb
dec
add
sub
sbb
add
pop
fsubrs
and
mov
push
xchg
dec
add
mov
clc
sbbl
pop
arpl
and
ret
cmp
inc
aad
cmp
lds
push
fisubrl
jp
loop
push
inc
mov
jp
jno
mov
adc
inc
clc
sbb
fmuls
scas
les
pop
jno
lahf
popa
inc
fmul
movsb
mov
push
xchg
push
test
jbe
or
mov
xor
xchg
xchg
sahf
in
inc
jmp
insl
aam
jne
lcall
jecxz
in
push
iret
in
mov
push
push
fs
xor
ja
mov
or
xchg
inc
std
xchg
cmp
stos
in
outsb
stc
jl
shrl
subb
lahf
push
mov
dec
inc
or
les
jne
mov
mov
aam
sahf
inc
jmp
paddsw
cwtl
scas
push
sbb
movsb
xchg
mov
push
lret
movsb
out
mov
pop
data16
cmp
push
jno
mov
cmp
dec
call
insb
fsts
xchg
out
movsl
inc
addr16
mov
cmp
jp
ret
rcll
enter
mov
es
test
cmp
mov
pop
jl
aad
xchg
push
cltd
pop
add
lds
jl
fcoms
or
adc
popa
fisubs
add
test
daa
cmovle
jnp
and
jns
mov
and
mov
stos
aas
fwait
xchg
mov
pop
pop
bound
adc
test
shl
out
pop
sub
push
dec
xor
mov
int
xor
scas
nop
dec
test
les
xchg
push
add
cmpsb
sub
xor
jb
or
add
add
iret
cmc
sti
pushf
and
push
dec
ljmp
std
add
add
int3
jge
mov
mov
lcall
add
js
dec
les
aas
rcll
decb
ret
aaa
xor
pop
rol
and
adcl
pop
test
stos
repz
push
add
ret
or
jle
repz
mov
femms
adc
out
inc
pop
sahf
or
pop
dec
adcb
mov
cmpsb
std
adc
jno
pushf
icebp
pop
cmp
push
push
andb
gs
pop
ljmp
mov
xlat
jnp
mov
pop
aaa
or
fimull
leave
or
loope
lods
adc
or
mov
movsl
iret
xchg
inc
shll
mov
adc
mov
lods
add
inc
popf
movsl
das
xchg
xor
hlt
sbb
sbb
or
mov
sbbl
outsb
cwtl
movsb
outsb
cs
pop
femms
mov
jecxz
add
pop
push
push
faddl
enter
jmp
lods
out
jbe
imul
ss
mov
lds
adc
dec
mov
lock
cmp
pop
xor
gs
out
dec
inc
add
mov
jge
in
sbbl
sbb
sti
jbe
dec
jae
adc
xor
gs
jno
cmp
jno
xchg
and
or
out
adc
pop
rorl
call
pop
xchg
mov
jge
cli
dec
mov
sub
adc
and
mov
push
mov
mov
fst
fistpl
mov
pop
lcall
inc
mov
fidivrs
ret
mov
jl
fistl
jns
fidivrl
outsb
xchg
jp
mov
das
jge
cwtl
add
add
cmp
stc
jl
stc
jne
into
mov
push
clc
add
std
add
add
xchg
mov
and
mov
or
repnz
fisubl
mov
and
out
adc
lock
ljmp
cwtl
lods
loop
lds
xchg
in
ret
push
add
leave
lret
cmpl
push
cmp
mov
fdivl
movb
dec
push
mov
mov
mov
rcr
inc
sub
inc
jae
inc
ss
jmp
insl
dec
cmp
add
or
fbld
mov
sbb
mov
pop
mov
loop
call
icebp
aas
repz
push
arpl
jl
add
push
pop
and
out
movsb
lcall
sub
mov
cmp
cmpsl
mov
cmp
and
imul
xchg
mov
mov
pop
push
fdivs
push
js
mov
and
push
int
inc
popf
push
mov
sbb
or
add
and
notl
dec
jo
popa
pop
lock
add
cmp
out
cmp
dec
movl
push
jb
mov
inc
dec
pusha
and
dec
jns
xchg
push
sbb
or
inc
outsb
jnp
mov
push
ret
push
cmp
mov
out
sbb
push
pop
or
dec
xor
clc
data16
push
insb
push
inc
lock
mov
lods
jnp
bound
iret
imul
hlt
mov
loopne
pop
sti
sub
std
mov
add
and
adc
lret
movsl
jbe
ds
lods
lods
mov
cmp
mov
or
lods
push
push
dec
dec
cli
call
das
xchg
inc
imul
pop
inc
cmp
in
fmulp
inc
mov
mov
aam
movl
xchg
adc
and
push
adc
