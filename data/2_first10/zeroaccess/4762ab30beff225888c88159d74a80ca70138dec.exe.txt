push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
stc
inc
mov
mov
push
ds
lds
xlat
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
cmp
jnp
cmp
jle
mov
shl
xchg
rol
sbb
insb
nop
aas
jecxz
mov
inc
leave
movsl
inc
ss
xchg
rclb
pop
mov
adc
js
jns
or
dec
mov
xor
adc
dec
cmp
mov
std
std
mov
sbb
add
lcall
cltd
ficompl
inc
jne
es
sub
sarb
jmp
shll
shrb
push
mull
nop
push
xor
add
addr16
mov
outsb
xor
ja
pop
in
sti
lret
sbb
inc
sub
fwait
cmp
mov
xchg
shlb
loopne
inc
jne
in
sbb
scas
inc
xchg
xorb
js
sbb
jmp
pop
rol
add
scas
sub
loopne
cli
mov
add
inc
push
cmp
arpl
mov
inc
pop
mov
test
mov
push
fsts
jns
push
inc
dec
jecxz
cmp
cltd
sar
pop
jecxz
lret
ljmp
or
jns
aam
inc
pop
push
or
mov
fadd
push
aam
pop
pop
lock
movsl
or
scas
or
sbb
push
js
enter
lret
dec
insl
mov
inc
out
dec
outsw
mov
pop
and
pop
das
dec
fnsave
js
jns
call
add
adc
into
inc
cmp
inc
dec
popa
prefetch
or
cli
jno
mov
push
push
pop
js
orl
xchg
mov
cli
sub
sbbl
pop
mov
pop
jae
cwtl
adc
popf
pop
or
in
add
sbb
or
movsl
cltd
mov
xchg
jg
pop
std
sub
pop
mov
test
lret
mov
imull
in
outsb
sbb
fcompl
dec
cmpsb
dec
ljmp
test
fstps
aam
push
pop
xchg
dec
aas
mov
sub
dec
mov
pop
shrb
cld
cs
mov
xchg
imul
jnp
in
cld
out
xchg
cmp
jne
mov
jmp
fisubl
daa
scas
sub
mov
pusha
jne
jle
lods
enter
fstcw
lret
mov
rclb
stos
pop
inc
sahf
or
lock
nop
mov
out
cld
and
add
add
scas
shrl
push
rolb
sti
mov
sbb
cli
jmp
sbb
push
xor
fisubrl
xor
inc
fwait
xchg
shrl
imul
push
inc
jg
pop
mov
sbb
cwtl
das
mov
pop
aad
xor
jmp
sub
mov
mov
jno
sbb
mov
jecxz
stc
or
cwtl
fdivs
out
dec
in
pop
xchg
jecxz
mov
or
adc
push
mov
add
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
insl
jle
fldcw
sub
cmpb
roll
xor
in
test
cmp
sbb
aam
jne
rcr
jnp
xor
jp
jo
jl
repnz
iret
shll
jle
xchg
xorb
adc
sub
test
push
dec
mov
dec
popf
pop
lds
in
mov
dec
negl
dec
aas
jge
mov
stos
adc
mov
test
xor
lcall
sub
mov
xlat
jg
xchg
or
adc
insl
lret
xchg
lret
push
pop
aad
sarb
mov
lret
jg
xor
jg
sbb
popf
jge
pop
test
jmp
push
jle
lcall
ds
sub
lret
lea
mov
scas
icebp
cwtl
in
cmp
xchg
pop
mov
loop
cmpsl
or
add
decb
jge
cmp
and
aad
in
cs
pop
and
cmp
faddl
fs
sahf
inc
aas
cmpsl
mov
jl
imul
rcl
nop
ljmp
and
enter
pop
dec
daa
lret
testb
inc
pop
pop
jp
hlt
ss
xchg
pop
ficoms
imul
dec
cmc
out
pusha
hlt
sbb
mov
leave
push
jle
or
push
fnsave
lods
repz
sbb
dec
les
sbb
iret
ret
jb
sti
cltd
or
and
push
int3
adc
popf
push
jmp
inc
aas
pop
add
cmp
filds
adc
test
pcmpgtb
in
popf
insb
add
sub
push
bnd
daa
and
lds
in
xchg
jo
jnp
loope
push
and
xchg
psllw
push
add
out
cmp
jo
sub
mov
enter
push
nop
ror
inc
jecxz
frstor
mov
push
mov
cmp
pop
push
pop
nop
js
test
and
and
dec
std
fstpt
pop
jmp
test
xor
inc
ret
pusha
jbe
pop
in
sub
shll
outsb
xchg
cmp
push
fwait
dec
pop
jo
js
inc
addb
cmpsb
leave
lret
xchg
fmul
std
pop
push
movsl
dec
inc
jle
push
repnz
leave
lods
cmp
pop
fwait
mov
push
neg
into
add
fwait
or
or
xor
fs
pusha
inc
lods
es
push
xchg
dec
adc
shll
xlat
arpl
xchg
pusha
ficoml
cmp
loop
pop
xchg
icebp
mov
adc
adc
push
fldl
loop
cmp
stos
hlt
and
sbb
xor
sub
and
cmp
sub
pop
les
pop
repnz
or
push
inc
inc
add
sbb
scas
mov
out
gs
aaa
daa
jmp
repz
pop
push
in
mov
xchg
xchg
sub
xchg
adc
sbb
wrmsr
call
or
and
push
in
arpl
cltd
into
les
push
loop
mov
and
xchg
pop
shl
rcrb
fwait
dec
or
xchg
add
jle
mov
xchg
sahf
dec
movsl
ja
or
cmp
mov
sbb
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
loope
add
ja
test
repnz
pushl
push
jl
jecxz
push
imul
inc
pop
xchg
daa
and
pop
out
fs
jp
pushf
in
mov
movsb
cmp
sbb
aas
lods
std
sub
sub
pusha
sub
lods
out
mov
in
out
out
sub
push
cmc
push
cmpsb
push
enter
push
jecxz
adc
jnp
in
pop
in
test
inc
ret
mov
imul
sahf
mov
test
in
fcmovbe
pop
sti
inc
cmp
data16
mov
jmp
xchg
push
nop
mov
pop
xchg
inc
jecxz
loopne
add
cmc
jb
rorb
jl
ja
cmp
mov
pop
in
inc
xlat
repz
in
sub
daa
sbb
lock
lea
inc
dec
pop
cld
out
scas
leave
mov
push
in
aam
add
popa
jp
out
jl
addr16
js
xchg
cmp
jne
imulb
jns
daa
and
jmp
cmpsb
jnp
mov
xchg
bt
dec
sub
mov
stc
mov
push
or
lods
fisubrl
push
int
sarb
pop
fwait
push
adcb
xor
sbb
push
xchg
jmp
jo
xchg
rclb
notl
insl
sbb
js
push
or
aam
xor
imul
cmp
jmp
les
pop
and
jecxz
or
sar
mov
add
inc
mov
call
pop
into
nop
mov
jb
int3
add
imull
sbb
out
loop
and
mull
stc
fimull
int3
pop
sub
in
cs
and
mov
push
dec
stos
out
pop
fstl
les
movsb
push
sub
int
jne
sbb
pop
adc
mov
stos
arpl
cmp
push
xor
inc
ljmp
push
xor
addr16
sti
or
mov
mov
xor
mov
iret
data16
adc
sbb
int3
mov
inc
ja
and
call
mov
fcomps
xchg
pop
xor
pusha
jo
add
iret
repz
dec
xchg
rclb
ljmp
xchg
and
pushf
cmpsl
hlt
ret
sbb
xor
repz
fstpt
jl
xchg
icebp
stc
xchg
jmp
stc
add
sbb
dec
pop
pop
fbld
int
into
push
mov
rolb
sub
push
cld
cmp
mov
pop
push
and
sti
test
and
in
cltd
cmc
cmc
pop
ja
or
in
adc
test
sub
push
push
cmp
fbld
loopne
lcall
fstps
adc
lods
push
push
sub
push
xchg
cmpsl
adc
ljmp
stc
and
sub
fucomi
dec
inc
xlat
lods
and
jbe
scas
fsubs
adc
clc
outsl
adc
mov
aas
mov
scas
roll
mov
pushf
test
aaa
hlt
pop
adc
xor
xor
mov
mov
push
sub
jle
xchg
lds
out
sbb
int
mov
push
xchg
and
scas
jge
in
neg
ret
outsl
jb
mov
or
xchg
jnp
lods
sti
call
cwtl
or
jg
mov
mov
ja
rol
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
jae
stos
jecxz
sarb
mov
shl
and
fwait
inc
or
daa
aad
in
jle
cs
sbb
out
iret
incb
subl
insl
jae
push
cmpsw
pop
out
test
mov
mov
inc
ficoms
iret
inc
lret
or
xor
cmp
jb
pop
or
jl
cmp
xor
push
int
outsl
or
aad
pop
dec
inc
repz
inc
lock
xchg
ss
in
jb
scas
xor
iret
or
add
std
cwtl
rol
add
in
xor
sub
iret
adc
mov
pop
jp
xchg
rclb
popf
pushf
movsb
movb
jb
sbb
sub
std
mov
cmp
stos
ja
cs
leave
testb
fs
clc
outsl
xchg
sbb
add
je
or
cmp
xchg
push
push
or
fldcw
lods
push
push
ljmp
in
xor
lods
ror
push
dec
testb
aas
mov
push
iret
dec
hlt
imul
dec
movl
outsl
popf
jg
inc
cmc
daa
sbb
cli
popf
mov
push
pop
notb
xchg
add
hlt
loop
inc
lcall
cli
imul
outsl
sbb
lea
cmp
inc
add
cmp
xchg
addr16
lret
sub
pop
cld
lods
pop
fiaddl
aad
loope
pop
mov
adc
subb
sbb
mov
bound
ja
push
xor
jge
cli
push
insl
data16
inc
inc
xchg
and
cmp
fwait
cmp
push
adc
or
xchg
dec
mov
sbb
adc
call
sub
repnz
xorl
xchg
or
cmpb
mov
enter
mov
jecxz
in
inc
imulb
lret
mov
adc
clc
xor
cltd
movsb
mov
aaa
test
pop
arpl
mov
push
mov
lret
je
sbb
cmpsl
xor
xor
jg
xchg
mov
movsb
sbb
pop
push
mov
imul
mov
adc
lock
mull
dec
dec
aam
lods
or
adc
or
push
mov
mov
xor
inc
js
adc
inc
mov
mov
jo
clts
jge
inc
push
loope,pt
aad
cmpb
out
lock
adc
cmp
add
xlat
push
push
insb
inc
shr
sbb
divb
sub
jp
negb
ret
lret
mov
mov
push
sub
add
pushf
gs
lret
cli
mov
jecxz
out
fwait
out
mov
sub
jnp
add
xor
sbb
xlat
adc
fdivrl
jp
jle
test
jno
xchg
and
pop
in
push
scas
out
sub
push
mov
mov
xlat
jo
jne
mov
addr16
adc
push
loope
xor
scas
idivl
pop
xor
cld
dec
fnstenv
es
lock
js
inc
jne
jge
loop
sarl
and
test
cmp
pop
xor
test
mov
sbb
cmp
dec
cmp
or
mov
sub
pop
test
addl
cwtl
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
popf
pop
je
mov
les
mov
aaa
push
das
cmpl
jne
jne
sbb
test
out
or
sub
div
jmp
push
popf
sti
loope
lock
push
arpl
sbb
aam
and
arpl
add
mov
scas
ret
mov
in
in
mov
push
bound
cmp
jle
dec
jnp
inc
cmp
push
pop
lods
mov
ret
xchg
ret
push
add
mov
fldcw
push
outsl
mov
pop
pop
into
decl
jmp
and
dec
mov
fistpl
lds
lcall
or
inc
das
add
loop
out
aas
outsb
push
out
fdivrs
mov
jl
icebp
xor
in
and
stos
cltd
jnp
insb
jmp
sarb
jbe
push
push
adc
mov
into
repnz
mov
mov
jmp
aaa
pop
into
ror
imul
insl
shlb
aas
rcl
dec
jg
mov
add
jbe
fisubrs
rolb
push
lea
addr16
mov
fisubrl
das
jb
mov
dec
aas
jmp
popf
cld
cwtl
cs
add
mov
jp
scas
dec
push
insl
add
dec
popa
loopne
stos
lods
lds
xlat
mov
push
sub
xor
mov
xlat
fmulp
nop
std
jmp
inc
xor
sar
and
stc
pop
stc
push
daa
test
fbld
xor
mov
cli
ljmp
mov
lock
fcompl
jnp
fsubr
ret
mov
sbb
inc
out
dec
mov
fstcw
xchg
add
pushf
notl
xor
mov
mov
bnd
loope
rorl
pop
cmpsl
xchg
xor
push
pop
arpl
stos
mov
mov
iret
add
xlat
mov
add
and
mov
xchg
addr16
dec
cmp
js
shlb
xor
pusha
xor
test
cltd
jne
push
xchg
xchg
int3
mov
frstor
inc
mov
out
aas
lret
pop
fstl
enter
sub
mov
aam
push
xchg
mov
pop
movsl
sub
fmuls
adc
imul
int3
push
and
mov
xor
loopne
cmp
movb
and
sbb
mov
jns
int3
mov
lock
push
or
in
pop
loop
lahf
lret
or
push
lcall
mov
cli
or
inc
xchg
jle
lods
test
mov
ret
inc
popf
and
imul
ss
sbb
inc
stc
iret
scas
pop
in
iret
popf
jae
push
mov
xlat
push
enter
not
mov
stc
cmp
dec
fistl
push
test
adc
aaa
mov
lret
in
dec
sahf
test
jne
mov
xor
pop
hlt
cltd
icebp
mov
mov
jp
push
icebp
sbb
stos
and
xchg
lcall
bound
mov
dec
insb
adc
add
lahf
jp
inc
imul
mov
pop
fcomp
jp
jns
cmp
and
orb
add
sbb
add
test
add
add
add
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
push
hlt
iret
mov
les
ret
adc
cmpsb
fldt
dec
cmp
pushf
int
fcompl
jb
lock
jns
or
and
jb
adcl
popa
aam
das
aas
jne
mov
ficomps
imul
push
add
adc
adc
lods
sub
lds
push
pop
mov
stos
adc
xor
ret
arpl
scas
mov
daa
test
je
or
shrb
dec
mov
dec
mov
inc
or
aad
scas
pushf
push
push
sahf
dec
xor
fsts
and
lods
dec
sub
iret
mov
push
mov
mov
jg
jnp
push
mov
shll
pop
or
add
mov
cmp
and
aaa
push
jae
rclb
aad
enter
mov
push
mov
cltd
jg
orb
sub
dec
xor
test
jg
xchg
in
xor
add
add
jbe
inc
ds
push
andl
and
out
shl
imul
and
add
leave
push
lret
es
dec
push
cmpsl
fldenv
ja
lahf
fistps
adc
fcompl
out
out
hlt
hlt
jmp
pop
or
sub
fs
add
out
hlt
jl
fcmove
rcr
xor
pop
pop
fcoml
dec
sub
rolb
int
in
cmpsl
mov
repz
xchg
fidivrs
enter
and
rcll
sbb
test
cmp
and
test
mov
mov
cwtl
mov
jnp
ret
xor
das
cltd
jmp
push
pop
lea
imul
ds
std
adc
hlt
jp
mov
xchg
fs
mov
sub
xor
xchg
mov
popa
jbe
pop
mov
inc
cmpl
dec
out
push
jp
stos
fists
stos
js
pop
imul
adc
loopne
xor
inc
ret
mov
xor
in
lcall
fs
jo
in
sti
loopne
lds
stos
mov
scas
js
lea
xlat
pop
xchg
mov
xor
lahf
mov
adc
sub
add
sarl
out
shlb
movsl
adc
or
arpl
and
mov
or
sbb
cmp
fadd
fisubl
lret
imul
out
cmc
inc
inc
imul
movsb
xchg
daa
mov
xchg
inc
pop
mov
cwtl
jmp
adc
lcall
add
fcmovu
jne
jmp
stos
mov
testb
popf
ds
neg
sahf
int3
inc
pop
loope
mov
in
jmp
inc
jo
xchg
mov
or
dec
sub
in
pushf
add
mov
push
test
adc
inc
out
push
cwtl
insb
andl
mov
cmpsb
repz
add
adc
loope
pop
mov
jb
inc
fs
sahf
js
xchg
in
ja
xor
xchg
lds
leave
pop
int3
lock
into
mov
lock
dec
mov
mov
adc
jo
jg
rorl
mov
divb
cmpsl
out
dec
or
outsb
rol
flds
int3
divl
jmp
push
fcomp
xchg
mov
fidivl
push
fbld
cmp
mov
xor
dec
sub
in
inc
mov
add
jge
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fstl
stos
jecxz
call
mov
xchg
les
mov
pop
imul
adc
and
mov
neg
insb
pop
sub
and
in
shlb
dec
popf
add
stos
push
dec
and
test
xor
stos
ret
xor
call
insb
daa
movsb
daa
mov
push
stc
test
adcb
out
xchg
xor
adc
pop
push
sbb
sub
jbe
cmp
cmp
sbb
lahf
jp
ja
aam
xlat
mov
imul
sub
loope
mov
std
xor
ror
filds
xor
mov
lcall
test
mov
xchg
lock
jl
je
add
xchg
push
mov
sub
lea
pop
int3
in
pop
loop
lds
in
inc
mov
lods
outsb
adc
push
adc
cs
lahf
movsl
addb
and
and
push
subl
andl
lds
sub
mov
lcall
sbb
adc
ljmp
sbb
inc
sbb
sub
gs
aaa
mov
mov
das
fimull
sti
clc
fucomi
mov
jp
test
mov
push
cmc
popa
ljmp
stc
popa
pushf
gs
pop
mov
sbb
enter
lret
test
pop
mov
sub
enter
outsl
popf
and
pop
faddl
xchg
push
fistpl
and
out
fdivrl
and
inc
testl
in
pop
ret
sbb
jb
ljmp
les
rclb
push
pop
xor
or
fists
cltd
mov
adc
push
int
lods
je
xchg
jns
scas
add
popa
fs
xchg
arpl
mov
add
fldt
push
xor
sub
mov
sub
imul
inc
int3
fsub
pop
jmp
sbb
add
inc
dec
int
lock
or
and
inc
cmp
mov
inc
and
inc
xchg
aad
sbb
sub
push
sti
test
fdivl
rorl
daa
jns,pn
lahf
jmp
add
jmp
xchg
sub
lds
sub
nop
mov
and
ret
add
aam
xchg
icebp
mov
xchg
stos
adc
push
cmp
push
cmpsb
imul
push
xchg
pop
nop
fldlg2
movsl
repz
mov
sbb
stos
aaa
mov
pop
movsb
aaa
jle
mov
rorb
aas
add
jnp
imul
in
mov
mov
cld
inc
shll
pop
pop
sub
shl
data16
out
stos
jle
loopne
mov
or
mov
out
in
lret
out
outsb
in
mov
pushf
popf
cmp
mov
mov
in
aaa
imul
cmp
sbb
enter
xor
pop
xor
jp
cmp
and
sarl
psrad
popa
lcall
xlat
inc
in
test
jne
mov
jl
aam
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
roll
cmp
movb
lods
or
or
lahf
mov
lods
xchg
dec
pop
mov
cmp
pop
mov
pop
mov
scas
insb
cmp
mov
loopne
loop
lods
and
out
ljmp
leave
xor
out
stc
in
mov
or
mov
fildll
and
jne
outsb
jae
leave
jno,pn
cmp
movsl
pop
test
decb
frstor
cmp
jno
jbe
add
nop
orl
sbb
orl
or
rcll
jne
daa
push
add
mov
fldt
xchg
imul
rclb
notb
dec
xchg
mov
test
hlt
aas
icebp
sbb
ret
push
cwtl
cli
orb
mov
jbe
or
ficomps
and
mov
ja
or
push
lahf
idivb
aad
dec
je
add
pop
insb
inc
push
mov
jbe
lret
cmp
mov
ds
int
mov
test
pop
pusha
xor
jbe
or
adc
sub
sbb
leave
int
jge
cwtl
outsb
imul
xor
popf
int3
jnp
rorb
scas
into
rorb
into
pop
enter
sbb
js
insb
imul
pushf
and
push
cli
jle
icebp
inc
sub
icebp
ret
xor
in
test
xor
lret
ds
outsl
lock
loope
or
jno
lret
jb
sahf
mov
pop
daa
out
push
ja
jne
cmp
mov
and
insl
mov
mov
dec
xchg
xchg
and
cmpsb
fisttpl
std
aad
dec
lock
fstps
lcall
lea
movsl
cmp
pusha
cmp
mov
mov
insl
popa
pusha
mov
inc
mov
and
xchg
stos
cmp
ja
bound
mov
imul
jl
xor
mov
adc
cmp
dec
and
sub
adc
mov
jb
dec
stc
adcl
ret
pop
fdivrs
ret
test
ljmp
mov
sub
and
mov
movsl
jmp
daa
cwtl
add
sbb
mov
pop
pop
cmp
test
sbb
roll
xlat
add
scas
cs
fdivrs
dec
lods
out
shlb
mov
pusha
sub
pop
pop
mov
xchg
in
and
inc
mov
inc
outsb
pop
test
addl
sub
rorl
lods
movsb
imul
mov
lcall
and
jbe
mov
pop
inc
adc
and
ror
jg
push
jp
and
scas
and
bound
out
stos
and
mov
addr16
std
insb
pop
cwtl
jl
fistl
out
add
cmp
daa
adc
iret
sbb
xchg
jecxz
push
repz
dec
sub
add
in
and
push
add
shrl
hlt
or
mov
arpl
mov
inc
cmc
les
mov
or
imul
jo
sub
adc
add
mov
xor
test
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
roll
cmpsb
jecxz
cmc
mov
mov
fsubl
loop
jno
aad
ljmp
loopne
fdivs
xchg
cmc
aas
mov
cmp
xor
cmpsl
xor
jle
daa
dec
mov
aaa
mov
and
sbb
aas
test
jle
and
movsl
or
pop
xchg
mov
dec
push
scas
adc
fcmovb
or
sub
mov
ret
xlat
test
pop
add
mov
lcall
loope
xchg
fistpl
ficomps
push
lods
icebp
xchg
and
das
add
lcall
mov
repz
in
or
test
jl
fiadds
js
push
int
mov
jae
movsl
push
xlat
or
or
int
cli
adc
es
pop
loop
cmp
xchg
mov
adc
fscale
aad
sti
inc
inc
or
mov
inc
test
test
mov
jo
mov
std
lret
rcr
lcall
jmp
je
mov
and
in
xchg
xchg
mov
mov
mov
jnp
out
in
cmp
int3
rcll
jmp
shll
movsl
bound
jbe
dec
fcoms
lds
movsb
frstor
aam
cli
jbe
sub
and
adc
xchg
orb
fwait
mov
cwtl
xor
rclb
xor
sbb
push
ljmp
mov
sbb
xchg
in
jno
and
add
pop
mov
and
ds
or
std
std
je
test
adc
mov
rcrl
mov
jo
outsb
mov
xchg
sbb
push
mov
insb
adc
faddl
add
pop
mov
imull
iret
stc
jmp
xchg
sbb
sub
jg
addr16
push
mov
xchg
test
add
dec
fisttpl
cmp
and
or
pop
lret
clc
mov
mov
enter
addr16
leave
mov
cwtl
push
push
fimuls
mov
outsb
sarl
cltd
lret
and
fbstp
adc
lret
out
mov
fists
cmc
pop
repnz
xchg
cmp
sti
adc
sub
fcmovb
shrl
mov
add
nop
pusha
xchg
jne
add
mov
cmp
xchg
mov
cmp
stc
sbb
sbb
testb
or
pop
sub
sbb
pop
dec
pop
stc
ret
push
in
and
aad
out
dec
aam
repz
jmp
scas
xchg
push
adc
push
rorb
xor
leave
inc
scas
add
pushf
cmp
fdivs
addr16
cmp
pop
popf
add
jp
jo
jle
test
das
add
add
and
mov
shll
mov
scas
and
sbb
mov
dec
xchg
lcall
jo
adc
and
cwtl
push
sahf
out
jns
inc
mov
insl
addl
aaa
into
pushf
mov
adc
shlb
and
dec
in
pop
stc
xlat
adc
mov
hlt
mov
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
insb
lock
out
cld
pop
xchg
rclb
adc
add
sbb
mov
sbb
loop
dec
cmpsb
aad
mov
inc
lahf
scas
pushl
lret
movb
lret
sbb
sti
xchg
int
out
jge
shll
sbb
jno
pop
xlat
mov
jns,pt
js
imul
inc
pop
mov
ds
sbbl
adc
pop
adc
mov
jl
call
mov
jns
adc
notb
rorb
or
ret
popa
jp
push
cmpsl
sarl
push
push
pop
mov
push
cmpsl
pop
es
subb
dec
sub
insl
aad
pop
adc
ret
filds
jnp
sub
repz
insl
mov
rolb
test
or
jmp
icebp
fs
rcl
jle
lret
push
inc
jge
rcr
pop
fs
push
push
mov
adc
or
inc
mulb
imul
imul
pop
add
rcrb
rcrl
push
add
je
imul
stc
imul
mov
or
pop
cs
lret
pop
add
test
mov
stos
jo
je
outsb
pusha
mov
repnz
xchg
and
sub
dec
shrl
iret
jae
int
mov
sbb
push
jno
pop
xor
out
loope
je
pop
add
sbbl
dec
xchg
cmpsb
lds
sbb
adc
jne
loop
dec
dec
or
in
mov
shlb
add
jnp
imul
xor
mov
pop
jbe
or
push
pusha
xchg
inc
push
cmp
xchg
push
mov
pop
mov
xchg
mov
lret
ja
pop
mov
cmp
inc
push
sbb
es
outsb
sarl
and
iret
push
lds
pop
ja
in
lock
mov
je
mov
mov
ss
sub
add
arpl
daa
loopne
and
lret
in
leave
cmp
fistpll
lret
fstpl
pop
gs
add
sub
aas
fistl
enter
or
lea
sar
sti
cltd
jno
mov
sbb
cmp
adc
mov
cmc
jns
pop
lea
jo
pop
sbb
lods
xor
pop
jl
cmp
cmpsl
out
movsb
adc
push
addr16
imul
sub
mov
add
ds
and
mov
aam
mov
xor
or
pop
dec
jnp
pop
xchg
mov
mov
sub
mov
addr16
dec
data16
test
pop
daa
inc
xchg
mov
mov
cld
aas
xchg
lahf
dec
mov
gs
pop
ljmp
mov
and
adc
jge
or
xchg
fnstenv
out
fsubrp
xchg
xchg
in
jns
lea
das
xchg
arpl
dec
cmp
inc
fstl
fisubl
jno
mov
jecxz
pop
movsb
cmp
inc
mov
data16
fwait
andb
es
and
in
add
sbb
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
jmp
outsb
fnstsw
les
mov
mov
mov
lds
jb
pop
fldenv
cmpsb
mov
xchg
sar
enter
xchg
add
sbb
and
sbb
fsubs
icebp
push
pusha
xchg
lret
xchg
xor
pop
cmp
jne
scas
enter
idivb
rcll
adc
xor
cmpsl
mov
cmp
dec
call
ret
push
outsl
push
mov
jae
arpl
mov
xor
je
inc
movsl
cld
mov
or
scas
clc
cmp
adc
cmp
inc
mov
or
pop
xlat
sub
mov
pop
jl
jbe
sub
dec
test
dec
stos
dec
bound
add
adc
mov
jge
jp
and
in
jl
pushf
jg
mov
rcrb
mov
aaa
shl
repnz
cmp
xchg
pop
xor
shll
and
push
sub
or
aaa
sbb
mov
push
xchg
mov
mov
imul
rorb
push
lret
push
in
shrb
dec
mov
cmpsb
fwait
cmp
jl
xor
arpl
in
push
fnsave
das
dec
ficoms
add
in
test
fisubrs
jmp
xor
mov
shl
cmp
mov
imul
xor
xor
rcr
xchg
lds
outsb
pushf
icebp
cmpsb
adc
mov
mov
mov
pop
jmp
inc
mov
mov
mov
hlt
icebp
popa
cmpl
iret
fadds
lods
mov
shrb
iret
mov
adc
sbb
cwtl
jb
inc
cmp
ljmp
jle
lcall
adc
dec
xor
push
xor
dec
rcrb
lcall
shlb
add
and
mov
clc
xor
cltd
jmp
jb
clc
cli
add
sbb
test
repz
pop
mov
cltd
jae
push
sbb
in
repnz
scas
jbe
shll
xor
mov
cli
lods
xor
sbbl
jns
add
xchg
lahf
sub
cli
add
xor
aaa
sbb
mov
fnstenv
hlt
mov
das
mull
pop
sub
adcb
inc
ret
mov
adc
push
pop
scas
jmp
aam
inc
fisubs
cmp
adc
shlb
movsb
cld
leave
pusha
mov
pop
shrl
lcall
sub
adc
fisttpll
mov
fidivs
cltd
push
lea
add
push
adc
icebp
iret
das
jmp
jae
xlat
mov
adc
cmp
xchg
inc
bound
push
push
int3
dec
lcall
sbb
loop
dec
insl
xlat
insl
jns
pop
jg
inc
shrl
xor
cmp
test
fidivrs
lock
mov
cmp
inc
test
addr16
mov
stos
sbb
sub
enter
push
mov
adc
push
lea
ljmp
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
jg
scas
iret
mov
les
roll
mov
outsl
mov
adc
cltd
shll
sub
test
cmp
and
inc
fnsetpm(287
adc
rcrb
xchg
ss
rolb
aas
gs
out
pop
outsb
clc
in
sbb
ss
ficomps
in
pop
mov
psubq
dec
add
push
repnz
data16
pop
jo
fstl
push
mov
loop
inc
xlat
add
fsubl
movl
mov
xor
cmp
lods
rclb
mov
mov
jne
js
test
loop
add
inc
xor
dec
loop
and
dec
mov
pop
stos
jmp
mov
inc
mov
mov
push
inc
push
test
mov
jge
movsb
mov
inc
and
jne
pop
loope
repz
xor
nop
adc
arpl
leave
xor
mov
lcall
les
pop
pop
sti
inc
cmpb
hlt
inc
aam
sub
adc
and
ss
fisttpll
jno
iret
aaa
cmp
mov
xchg
enter
lods
mov
in
jns
jo
add
test
bound
adc
ret
inc
jns
lahf
push
mov
push
hlt
dec
daa
pop
add
imul
outsl
in
int
stos
sbb
int
sub
cmp
lods
dec
iret
dec
outsl
test
stos
mov
jne
lret
jae
outsl
xor
mov
mov
shll
mov
out
pop
jecxz
lods
or
arpl
jmp
mov
pushf
inc
sub
popa
ret
xor
push
insb
mov
bound
jno
jge
or
sub
pop
sbb
pop
adc
or
xchg
sbb
fdiv
mov
pop
push
and
pop
lods
out
call
ss
pop
xchg
inc
pop
cld
insb
sbb
sub
dec
adc
inc
fbld
stc
ds
cmp
mov
push
xor
mov
xor
call
testb
outsb
dec
aam
lcall
sti
adc
aam
cmp
sbb
popf
test
and
adc
insb
jnp
shrl
imul
loop
addr16
ficoml
xor
ss
pop
scas
es
lahf
jle
stc
fs
pop
movsl
cmpsl
mov
mov
loope
push
mov
fldlg2
fiadds
pop
shll
inc
sbb
sar
ljmp
and
xor
inc
and
daa
lds
aad
inc
imul
nop
test
test
jne
mov
jg
mov
bound
mov
add
std
aas
dec
jg
fcomps
jne
lods
pop
std
out
or
adc
lods
sub
sbb
ficoml
add
add
pop
sahf
shrl
iret
cmp
xor
outsl
add
in
push
pop
jo
jbe
pushf
push
cwtl
ss
mov
int
inc
cmp
pop
cmp
in
clc
outsl
in
loopne
mov
fnsave
sbb
test
cmp
jp
and
sarl
push
dec
xchg
inc
aam
add
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
enter
adc
mov
movb
mov
xchg
xchg
pop
jnp
lods
lcall
or
add
push
aas
test
jbe
cmp
jns
in
or
sub
and
inc
xchg
mov
mov
cmp
and
aaa
sbbb
mov
cwtl
pop
jl
insl
sbb
adc
imulb
in
or
mov
addr16
inc
adc
or
sbb
inc
pop
ret
aas
test
scas
lahf
cmp
pushf
pop
test
mov
xchg
cmp
and
mov
adc
mov
xchg
insb
xchg
xchg
stos
mov
push
aad
add
adc
pop
mov
cld
inc
add
add
mov
sbb
push
out
xchg
xchg
dec
push
add
xor
rclb
lcall
cmpsl
adc
cmp
sbb
xchg
jle
dec
movl
jno
loopne
mov
xlat
push
clc
sub
xchg
andb
adc
sarl
sarb
lods
imul
pop
pop
ss
addr16
ja
out
dec
fimuls
or
out
mov
sahf
outsl
adc
sbb
das
cli
insb
adc
rolb
pop
in
aaa
jb
daa
popa
in
mov
cmp
push
jle
cmp
push
push
push
ret
xchg
and
lods
arpl
pushf
fstps
lret
sbb
mov
ret
mov
xchg
scas
cmp
cwtl
loop
pop
jae
sbb
packssdw
rclb
fs
loope
xlat
popf
imul
mov
xchg
fldenv
je
imul
shll
add
inc
fisubrs
pop
cmp
ss
adc
pop
ret
mov
out
xchg
xchg
mov
sbb
pop
lock
adc
or
mov
xlat
adc
xor
shr
pusha
scas
movsl
test
jne
push
int3
aam
push
fsubrs
stos
stos
jbe
test
cmp
jnp
jecxz
and
pop
or
fwait
into
sbb
in
js
pop
push
jb
dec
jge
das
mov
or
out
mov
xor
std
jle
pop
pop
test
fstpl
bound
jle
scas
pop
push
outsl
pop
cld
xlat
dec
sarl
mov
iret
imul
aas
pop
outsb
and
shll
mov
lods
div
int
and
or
pop
outsl
jecxz
mov
mov
mov
and
push
loope
call
xor
scas
cmp
xchg
pop
in
xchg
andl
gs
xor
pop
mov
fnstsw
mov
push
mov
mov
dec
and
and
cld
add
mov
movsb
ljmp
lock
lahf
mov
mov
pop
add
popf
xchg
cmp
sbb
dec
or
sbb
enter
xchg
mov
dec
mov
out
stos
dec
int
outsb
xlat
and
outsb
bound
repz
adc
test
out
daa
add
inc
arpl
in
ljmp
fldl
aaa
adc
xchg
ret
rorb
mov
dec
xor
jmp
jno
xor
enter
add
loopne
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
repnz
lret
movsb
mov
les
xchg
fs
and
cmp
test
fmulp
jg
in
rcl
cmpb
jg
adcb
mov
out
mov
inc
sub
jmp
push
xor
lds
jno
repnz
orl
stos
repnz
push
cltd
dec
into
pop
mov
adc
in
ljmp
mov
popf
dec
sub
andb
xchg
test
jnp
test
or
aad
xchg
scas
sub
cmc
rolb
jo
mov
pop
sub
dec
pop
push
ret
hlt
into
icebp
add
icebp
nop
popa
lock
mov
mov
mov
lret
call
roll
jp
je
mov
lods
cmc
ljmp
mov
mov
idivl
push
fiaddl
jl
test
add
xchg
loop
push
mov
or
jne
pop
sbb
cs
pop
mov
sub
les
dec
pop
sbb
ja
push
fwait
add
pusha
or
mov
lock
xlat
aam
mov
pop
sbb
xor
mov
xor
jmp
cmp
call
cmpsb
js
jge
push
lret
mull
dec
les
sub
inc
jge
mov
sub
sahf
pop
movsl
lds
and
mov
jg
clc
into
ret
inc
push
xchg
xor
nop
xor
addr16
enter
dec
or
sarb
icebp
cmpsl
adc
mov
mov
loopne
or
std
dec
sbb
pop
lea
xchg
shl
div
mov
ret
ss
pop
daa
xchg
xor
add
fisubl
cmp
cmp
imul
in
outsb
jecxz
jo
lods
and
lds
xlat
in
enterw
and
push
sub
sub
pop
in
mov
int3
hlt
adcb
loopne
cmp
dec
add
add
std
inc
cmpsl
popa
sahf
rcrb
xchg
cltd
ja
xchg
fsub
mov
jae
pushf
shrl
xchg
or
pop
pop
sub
and
andl
push
hlt
sahf
int
sahf
cmp
sub
push
sub
sub
or
out
add
fdivl
mov
sub
add
and
setge
stc
out
lahf
jp
jnp
sbb
cwtl
shl
ficoml
mov
cmc
mov
and
imull
rolb
pop
daa
lock
sbb
xchg
adc
fidivrs
sub
vpshlq
aas
lock
xorl
das
xor
mov
push
inc
jge
ficomps
dec
ret
or
inc
and
scas
aas
push
fsubr
pop
dec
ret
dec
or
mov
aaa
mov
pop
ret
std
mov
jl
lock
jne
ret
cmpsl
dec
push
lret
push
or
pop
pop
mov
fs
adc
push
fsubl
stos
stos
into
xor
push
and
xor
push
inc
dec
aaa
push
dec
and
cmpsb
mov
xchg
lea
mov
loopne
and
cmpsl
jge
scas
les
mov
sbb
push
fsubs
aad
jae
xor
or
mov
dec
not
jmp
int
mov
sbb
mov
shrl
push
mov
sahf
lret
inc
dec
test
pop
test
xchg
inc
pop
std
mov
cmp
lods
or
cs
pushf
dec
push
ds
jno
xor
out
adc
xor
aam
mov
adc
cmpsl
cli
cmc
pop
cmp
pop
pop
xor
xchg
pop
jns
cmc
ffree
andl
cmp
out
subl
lea
mov
aaa
sbb
jl
sbb
scas
adc
mov
jbe
mov
out
inc
mov
stos
mov
mov
shll
push
mov
dec
cli
push
cli
aad
loopne
xchg
lds
pop
testl
lods
jnp
data16
test
sahf
dec
mov
in
jge
pop
ret
inc
mov
ret
push
in
pop
call
jp
outsl
add
fildl
xor
pop
repz
test
shr
push
cli
lock
sub
out
adc
xor
cmp
outsb
and
imul
jbe
adc
pop
sar
in
fdivr
mov
pushf
or
sbb
mov
hlt
test
cwtl
sbb
jae
iret
sbbl
jnp
sub
and
mov
movsl
jae
outsl
faddl
fcmovnu
jne
ja
das
mov
sahf
ret
sub
mov
addb
sbb
dec
sub
imul
push
pop
or
jp
icebp
pop
in
xchg
dec
test
cmp
xor
adc
mov
jmp
mov
add
das
loopne
push
inc
imul
add
or
mov
outsb
outsb
and
push
aad
inc
pop
pop
jecxz
in
mov
jmp
inc
and
fdivrs
pop
stc
sub
pop
mov
jecxz
add
pop
xchg
cmpsb
pop
movb
push
mov
xchg
clc
pop
mov
pop
cs
cmp
clc
pop
cmpsb
add
push
dec
cmp
push
sti
ds
out
fwait
xchg
lods
lcall
ljmp
mov
jg
add
xor
test
out
ds
movsb
lock
xchg
clc
in
fstl
mov
adc
jae
iret
jl
lahf
mov
adc
popa
lret
ss
mov
ljmp
hlt
lret
insl
inc
pminub
mov
adc
and
xor
sbb
out
daa
or
test
mov
xor
cld
pushf
push
jb
xor
fiadds
rorl
xor
scas
jl
lea
addr16
shrd
shlb
cmp
pop
pop
aas
mov
stos
mov
jns
clc
int3
push
loope
sbbl
dec
sbb
mov
inc
xchg
insb
sbb
xchg
bound
mov
mov
or
stos
aaa
fs
xor
and
jl
mov
iret
xor
add
ficoml
push
loopne
jg
test
out
scas
or
pop
push
push
mov
dec
out
scas
sub
pop
mov
adcl
jnp
cmp
fcmove
mov
stc
sub
cs
hlt
std
andl
jp
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
xor
and
mov
xchg
cmp
adc
cmp
add
xchg
push
lahf
insl
inc
into
cmp
out
test
xor
cld
or
add
fsts
push
push
fs
xor
adc
insb
bound
lock
hlt
rcrl
clc
xchg
jns
mov
ret
pushf
sub
outsb
shrb
xchg
jne
push
in
out
jp
sub
push
je
mov
xchg
sbb
pop
fisubs
imul
inc
push
and
fsubrs
fcoml
outsl
roll
jg
repnz
fadds
inc
popa
pop
bndstx
rcl
xchg
notl
mov
inc
dec
hlt
cmp
cmp
xchg
pop
aad
xchg
cltd
cmp
mov
in
fistps
jb
jae
in
mov
mov
stc
inc
and
push
aam
int3
xchg
test
jge
sbb
dec
and
dec
jmp
jl
mov
xchg
insl
aad
sub
call
dec
lret
bound
push
icebp
test
out
and
rolb
ss
cli
test
push
fwait
pop
fisubl
jnp
push
push
daa
loope
cld
fcoml
jmp
mov
cmpsl
jns
loope
int
mov
mov
scas
dec
or
insl
mov
xor
pop
push
cmp
test
mov
sub
or
mov
jae
xchg
cli
xchg
insl
jge
iret
scas
shl
shl
testl
mov
aaa
cmpsl
mov
cmpsl
pop
pop
pop
add
lcall
xor
cltd
loop
adc
movsl
arpl
outsl
int3
jno
ljmp
pusha
pop
cmpsb
jns
out
cmpsl
fcompl
or
pop
lods
ja
push
lahf
xor
cmp
push
and
cmpsb
daa
xchg
aas
pusha
sbb
adc
mov
or
rol
sbb
xchg
cmpsb
or
outsl
call
cmp
inc
sub
mov
dec
push
mov
jp
mov
mov
aad
sbb
jmp
pop
mov
test
xchg
cmp
jge
icebp
ficoml
adc
into
hlt
mov
sub
les
inc
lods
arpl
jle
movlps
negl
inc
psubusw
inc
leave
cmpsb
cmpb
in
insb
or
lds
jg
add
mov
in
fs
dec
sbb
je
js
mov
pop
cwtl
outsl
in
or
out
mov
mov
mov
inc
in
pop
adc
mov
pushf
loope
jmp
dec
xchg
mov
orb
adc
xchg
fptan
dec
fcompp
xchg
dec
sbb
pop
das
mov
push
mov
out
jmp
rep
cmp
inc
xchg
adc
cmp
dec
dec
inc
mov
lock
test
cs
lret
test
jb
mov
arpl
cltd
lods
or
pop
push
xchg
mov
mov
cmp
sbb
add
lahf
bound
fdivs
jae
arpl
cwtl
sub
jno
push
mov
es
mov
cmc
rcrl
js
or
int
call
jb
and
jle
jne
pop
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
ds
test
jecxz
sub
mov
xchg
sub
push
mov
xchg
adc
mov
xor
mov
xorl
in
outsb
bound
sahf
int
mov
fcomps
lea
or
and
mov
xchg
xchg
xchg
xor
in
mov
mov
jno
inc
pop
js
xchg
lea
cli
movb
mov
jne
ljmp
jge
das
push
dec
arpl
mov
mov
push
push
in
mov
movsl
xor
pop
jo
xchg
sub
ficoml
outsb
daa
iret
sbb
xor
ret
pop
test
jae
iret
sbb
cmpl
jns
mov
fnsave
shrl
jmp
cltd
adc
jae
jo
and
fdivrl
repz
lcall
xchg
std
repz
or
adc
xor
add
inc
enter
push
mov
sub
xchg
fldenv
clc
int3
add
sarl
add
add
test
dec
mov
out
test
jb
nop
test
jecxz
add
push
dec
ret
dec
cmpsl
sbb
sbb
shlb
in
je
push
mov
adc
scas
imul
imul
lret
ljmp
fsts
dec
out
cmp
in
in
bnd
dec
mov
sub
xchg
mov
stos
in
pushf
pop
add
sbb
loopne
lcall
aam
cld
dec
sbb
pop
shrb
dec
dec
dec
shll
xchg
jbe
in
scas
push
adc
pushf
and
xchg
rorb
daa
and
stos
cs
cmp
add
test
iretw
dec
push
jp
dec
sbb
dec
in
mov
dec
jne
lret
in
enter
jmp
cmp
test
test
fsubrl
pop
push
dec
inc
push
stc
adc
imul
insl
jb
sbb
push
insl
enter
sub
sub
mov
icebp
pop
xchg
jmp
jmp
dec
or
je
and
fsubs
dec
xor
cwtl
flds
pop
sbb
adc
addl
dec
scas
ja
sub
std
andb
cmp
fs
dec
loopne
push
mov
insb
je
inc
cmp
and
push
cmp
fmull
rcl
push
mov
ret
test
jmp
add
bound
repnz
pop
jae
push
stc
scas
sarb
addr16
aad
loope
mov
or
ss
mov
lcall
dec
or
sub
pop
cmpsb
jno
push
stc
cmc
mov
arpl
stc
rorl
push
jp
pop
jnp
add
aad
mov
movsl
jp
std
sub
lods
and
addr16
out
lret
pop
ret
sub
out
pop
adc
and
in
dec
jno
imul
insb
gs
imull
fistps
jle
or
mov
sub
gs
dec
fdivrl
jnp
shrb
pop
lods
cmpsb
rcll
call
icebp
ja
jns
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
ret
iret
mov
les
sarl
mov
popa
xor
lock
add
dec
fwait
mov
jl
fdivs
xorl
fstps
addr16
mov
addl
push
jl
into
push
inc
loop
xchg
jge
repnz
mov
gs
lock
push
dec
cs
dec
sub
sbb
adc
xor
std
xchg
test
jno
leave
ficomps
xchg
int3
nop
outsb
arpl
loopne
mov
pop
pusha
clc
dec
or
pop
shll
ja
cmpsl
mov
dec
sub
arpl
notb
shlb
into
sti
fldcw
insl
out
jg
dec
dec
push
mov
ja
mov
movsl
mov
jns
jmp
push
shl
mov
in
rcrb
inc
xchg
fistpll
std
xor
out
leave
adc
adc
mov
sarb
or
sti
sbb
adc
out
mov
cltd
aam
js
cmpsb
mov
sbb
call
popf
xchg
add
mov
mov
mov
outsb
or
ja
dec
dec
pop
popa
xor
xor
lcall
xchg
pop
dec
mov
pushf
aas
pusha
xor
and
inc
je
test
out
shr
and
cmp
loop
add
push
imul
pop
push
cmc
and
pop
outsb
push
mov
pop
dec
cwtl
mov
movsb
das
mov
jno
pop
mov
and
pop
leave
cmpb
arpl
cmp
adc
lods
in
dec
push
inc
and
mov
out
das
sbb
sbb
pusha
mov
call
add
lods
fwait
mov
outsb
nop
arpl
and
cmp
pusha
test
sub
dec
pop
lea
stos
ljmp
leave
stos
jle
aad
and
jae
mov
adc
pop
mov
mov
add
gs
lds
fcomps
adc
ds
out
mov
imulb
mov
es
aaa
dec
mov
in
dec
push
shll
cmp
add
add
int3
cwtl
jmp
ffree
mov
jb
xchg
mov
mov
and
inc
jbe
mov
arpl
dec
cmpsb
lds
xor
dec
adc
jmp
aas
cmp
push
test
mov
dec
dec
popa
test
adc
xchg
xchg
fdivrl
into
fcomp
rcl
and
stos
pop
xor
sbb
mov
out
rol
sbb
mov
repnz
ret
and
rcr
inc
mov
mov
icebp
gs
out
and
dec
add
mov
lcall
push
and
mov
cmpsb
les
sbb
cltd
pop
mov
icebp
mov
xchg
push
sbb
gs
jp
mov
gs
jmp
lods
mov
push
out
xchg
xchg
mov
mov
mov
repnz
xchg
push
mov
pop
lods
arpl
jo
int3
stc
mov
push
sub
push
and
in
dec
sub
test
in
ljmp
bound
xor
cmpsb
and
ss
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
cmpsb
jecxz
cmp
mov
stc
and
push
inc
lret
mov
pusha
xchg
dec
lret
cmc
or
push
mov
cmc
pop
sbb
fstpl
sub
clc
push
test
arpl
push
jmp
aaa
aam
xchg
cli
insl
adc
inc
andb
pop
lea
push
jl
jbe
es
mov
popa
popa
aam
push
push
repnz
xor
inc
and
mov
test
mov
repnz
clc
sub
sub
in
dec
xor
sub
push
xor
jae
mov
push
orb
mov
bnd
inc
imul
or
sahf
int3
stc
leave
js
cmp
sbb
sbb
jae
xor
or
lods
mov
pop
jge
inc
addl
jbe
outsb
repnz
push
or
testb
adc
cli
xchg
clc
sub
dec
or
jno
aam
push
mov
pop
fadds
add
dec
hlt
in
push
push
xchg
sub
in
sahf
xchg
cli
lret
xor
loope
je
mov
mov
popf
dec
and
faddp
imull
push
xor
and
sbb
into
jnp
cmc
xor
movsb
mov
sub
mov
je
cltd
adc
add
dec
inc
push
stos
mov
adc
jo
into
xchg
jae
dec
fwait
test
adcb
inc
rcrl
lods
xacquire
movsb
testl
xadd
cli
pop
ds
pop
imul
add
jb
mov
ror
mov
in
aam
xchg
or
fists
xor
push
jg
add
push
add
add
fwait
into
inc
fiadds
pop
or
push
jb
sbb
mov
ret
add
jo
mov
mov
fisubrl
dec
dec
or
dec
out
mov
cmp
fidivrs
xor
mov
add
and
jno
data16
xor
mov
mov
sbb
add
inc
daa
xchg
push
lock
push
xor
push
test
pushf
and
mov
and
cltd
pushf
shl
pop
or
or
insb
sbb
cli
mov
adc
inc
stc
pop
fisubl
jnp
mov
inc
popw
dec
mov
cmc
sub
cmp
pop
push
test
fcmovb
lahf
mov
ror
mov
pop
xchg
icebp
xor
xchg
dec
imul
mov
xchg
insl
push
ljmp
pop
outsl
lock
ljmp
xchg
and
lock
movb
sub
ret
add
repz
push
jge
lock
pop
mov
sub
jne
mov
fldl
std
push
add
ret
and
enter
mov
out
sbb
xchg
lock
jae
rolb
dec
fsubp
inc
add
fiaddl
shrl
scas
inc
xor
jno
push
or
fsubrp
pop
sub
inc
push
in
cmp
push
sub
cs
xchg
push
out
int
loop
clc
movsl
filds
xor
stos
inc
dec
ret
rorb
enter
adc
jecxz
xchg
aam
ret
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
sahf
imul
mov
inc
sub
mov
fsubrl
adc
aad
push
aad
add
cld
or
pop
lods
jbe
sbb
rcll
repz
in
mov
inc
pop
or
dec
xchg
cmpsl
loop
das
enter
lahf
cmc
add
xor
lods
pop
mov
rcll
icebp
jp
lahf
std
jl
sbb
mov
cld
fimull
add
push
pop
sbb
mov
xchg
push
fwait
cmpsb
jl
aam
daa
mov
jmp
jle
aad
inc
cmpsb
adc
jmp
and
repnz
pop
sahf
xor
mov
shrb
fisubrs
pop
xor
dec
in
lea
xchg
clc
popf
mov
loope
cmp
adc
mov
mov
mov
pop
jp
inc
dec
cmc
sbb
cli
shrl
aaa
js
adc
popa
xchg
cmpsl
dec
pushf
cmpsl
imull
mov
dec
push
jmp
test
call
inc
xor
jmp
pop
cmc
pinsrw
div
push
or
in
mov
push
add
ds
or
lods
stos
xlat
mov
sbb
or
loopne
pop
mov
push
sub
loop
adc
ljmp
mov
add
add
add
outsb
adc
pop
inc
clc
and
loope
mov
xor
arpl
faddl
bound
fcoml
push
out
mov
jl
int
test
or
rcrb
lock
out
movsl
popf
and
int
mov
outsb
sub
or
mov
ljmp
sbb
aam
sbb
push
loope
pop
add
jl
icebp
adc
xor
testl
hlt
ret
fs
pop
aas
dec
mov
loope
fs
sbb
xorl
pop
test
pop
into
call
mov
outsl
xchg
dec
pop
or
mov
jmp
xchg
mov
xchg
xchg
cs
jo
fstpt
int
popa
xchg
jg
push
call
jnp
imul
or
imul
mov
pop
jnp
hlt
jae
lret
push
mov
mov
dec
xlat
add
adc
jno
xor
push
mov
jne
test
test
icebp
cmpsl
lock
jl
dec
or
xlat
sbb
inc
cmp
xchg
in
ljmp
adc
jno
xor
fidivrs
int
in
mov
jge
mov
xchg
std
in
and
pusha
mov
js
ret
call
push
insb
jns
js
test
sbb
shll
inc
out
and
stos
gs
lea
inc
pop
ss
dec
mov
inc
xchg
lret
jmp
xchg
jmp
mov
das
push
stos
push
aaa
cmp
mov
and
out
pop
mov
mov
stos
dec
mov
add
lock
es
sbb
inc
mov
ljmp
push
ficomps
arpl
inc
data16
and
fsubrl
sahf
int
fs
mov
aam
aad
dec
inc
fidivl
insb
adcb
or
cs
stc
dec
fisttpl
stc
adc
jne
jge
cmpsb
insb
and
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
xchg
pop
inc
inc
add
mov
cmp
cli
pop
andb
xor
repz
shll
pop
mov
cltd
addr16
scas
movsl
pusha
or
mov
sbb
movsl
shll
out
mov
xchg
fsts
pop
lahf
dec
or
rcrb
dec
jmp
cmp
mov
in
xlat
mov
test
out
enter
imul
push
push
ret
movsl
ret
mov
fistpll
dec
je
or
sub
mov
cwtl
into
push
aaa
cmpsl
inc
add
mov
lret
fcmovnu
das
fidivs
jno
push
testb
pop
and
roll
inc
cmpsl
xor
fadds
mov
call
imul
iret
push
test
inc
mov
push
pusha
cmovl
push
cmpsb
xchg
and
in
and
xchg
mov
daa
mov
inc
cmp
arpl
test
mov
mov
aad
loop
or
fildl
xlat
iret
insl
xchg
pop
and
les
in
cmp
adc
xchg
cmp
fdivr
icebp
and
stos
int3
imul
sub
filds
pop
inc
out
outsb
and
test
jmp
icebp
pop
cli
cmc
sbb
sarb
jb
push
jg
imul
jecxz
push
sbb
sbb
iret
cmp
mov
fsts
shll
mov
std
call
das
xchg
xchg
loope
inc
mov
das
mov
imull
outsb
ss
aad
stos
xor
add
xchg
pop
inc
mov
sarb
jmp
jl
fisubrs
push
push
lods
mov
movsl
rorl
fsubl
cmp
mov
cmp
dec
lret
xor
out
jae
cmp
jns
jecxz
push
in
in
mov
in
mov
cmovo
add
cmp
loopne
jnp
lcall
pop
lods
adc
pop
ljmp
and
sbb
loop
inc
scas
or
loopne
sbb
cmp
lods
or
bound
leave
cmc
jle
add
gs
inc
ja
ficompl
mov
inc
sbb
je
push
pop
push
loop
push
xor
jmp
mov
in
ret
dec
mov
lret
dec
mov
mov
jbe
xor
lods
add
mov
or
push
shll
push
cmp
mov
subb
add
pmaxub
dec
mov
adc
xor
push
jg
and
imul
movsb
cwtl
sub
fs
lods
jo
bound
jecxz
ds
dec
mov
mov
mov
rclb
cmp
or
sbb
fnstcw
add
sarb
jmp
sahf
push
xchg
sub
pop
rolb
mov
rorb
sbb
cmp
ret
mov
push
xorl
mov
sub
icebp
and
inc
rcrl
jecxz
adc
test
cmp
xchg
add
loopne
jge
sub
lahf
pop
pop
xchg
mov
xor
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fucom
repz
iret
mov
les
ret
pop
lahf
mov
push
out
dec
jmp
addr16
ret
sub
addr16
stos
addb
and
add
rcr
cmpb
xchg
mov
xor
clc
hlt
ja
xchg
dec
iret
imul
jl
push
lret
xchg
mov
jno
mov
xor
sbb
pop
addl
imul
xchg
sahf
xlat
mov
lcall
mov
movsl
push
xchg
xchg
pop
xchg
dec
jg
repnz
push
adc
inc
adc
adc
iret
rclb
mov
sbb
add
test
cs
jecxz
mov
lods
jle
mov
xchg
push
out
cmp
mov
je
cltd
xchg
popf
movsb
outsl
lret
scas
imulb
ss
es
xchg
pop
addr16
push
nop
cmp
fdivrl
sub
je
fwait
fs
outsl
fs
sarl
pop
shrb
sub
push
pop
in
mov
pop
xchg
adc
and
push
sbb
pop
fmull
push
push
test
fs
icebp
jns
addb
jmp
inc
ljmp
insb
or
add
lds
jle
out
inc
test
push
aaa
pop
and
sub
mov
cmp
add
pop
jmp
jp
cmpsb
mov
stc
loopne
lods
mov
jg
xchg
adc
ds
inc
dec
xor
cmp
mov
adc
pop
popa
ror
ficoml
lds
mov
fisubrs
mov
fmul
mov
push
dec
addr16
add
mov
aas
idivb
stos
pop
xchg
jg
inc
std
test
stos
arpl
inc
mov
xchg
mov
rclb
test
cmp
test
inc
test
lahf
lock
ja
push
mov
pop
mov
mov
and
testl
aam
js
jmp
cmc
iret
cld
insb
mov
cmp
cmp
insb
stos
jge
mov
or
sub
ljmp
insl
push
ljmp
mov
or
adc
dec
out
jmp
xor
testb
rcrb
inc
lcall
into
repnz
sbb
mov
sub
sti
rcll
inc
sub
jo
mov
lock
aad
mov
adc
xlat
in
mov
dec
dec
bound
lods
dec
arpl
mov
lock
mulb
outsl
sbb
gs
rolb
mov
push
mov
mov
out
pushf
push
mov
mov
je
jae
mov
roll
call
mov
scas
insl
xor
lods
xor
jl
sbb
loop
cmp
jno
dec
ds
dec
iretw
cld
mov
pop
xchg
int3
mov
mov
mov
or
mov
jae
addr16
ret
shlb
mov
in
jbe
daa
pop
fimuls
fs
jns
mov
add
mov
incw
call
repz
xchg
ror
iret
cwtl
fcomps
xchg
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fnsave
mov
mov
les
xchg
mov
out
jl
aas
pop
pop
int
arpl
fdivr
or
stc
mov
sbb
jg
mov
aas
dec
clc
fmulp
inc
pop
push
cmpsb
mov
cmpxchg
rolb
mov
hlt
inc
pop
imul
jl
mov
out
dec
mov
or
lea
cmp
jne
and
sarl
repnz
mov
cmpsl
shlb
test
mov
mov
push
lods
in
fdivrs
mov
out
mov
adcl
or
scas
xor
out
or
pop
sahf
daa
sbb
shl
call
dec
call
ds
mov
std
mov
xlat
xchg
mov
ret
push
add
hlt
jle
das
in
stos
movsb
mov
stos
xchg
std
scas
push
ds
pop
adc
and
popf
mov
inc
inc
out
mov
jecxz
cmpsl
xchg
jnp
xchg
cmp
mov
mov
adc
mulb
adc
cs
dec
popl
xchg
or
push
mov
push
out
inc
pop
xchg
icebp
mov
jge
clc
inc
sub
mov
sbb
xchg
pop
xor
sahf
fwait
jo
adc
mov
rorl
xchg
pop
pop
push
mov
lods
cmpl
dec
jo
inc
jne
mov
add
mov
aad
xor
jnp
in
fstpl
jecxz
sahf
arpl
add
and
cltd
jne
push
ljmp
push
push
dec
sti
xor
cltd
cld
clc
into
push
rclb
mov
lret
cwtl
pop
or
notb
adc
inc
test
xchg
stos
test
xchg
fcompl
jbe
xchg
add
aaa
push
and
cmp
push
ja
in
inc
xor
inc
jo
mov
shll
xchg
pusha
pop
xchg
and
sbb
xchg
hlt
lret
test
inc
mov
clc
daa
imul
fistpl
and
bound
rcrb
mov
insl
add
pop
out
bound
mov
xlat
repz
ljmp
clc
test
push
in
loopne
leave
ss
loop
mov
dec
aam
add
leave
push
and
add
fsubrs
xor
sbbb
in
popf
outsb
sbbb
or
jno
ret
push
ret
rcrl
mov
inc
fs
cmpsl
inc
push
push
rorb
xor
in
jb
js
call
add
adc
test
xor
cmpsl
xor
faddl
push
in
xor
aas
mov
add
ret
das
dec
lock
stos
movsb
push
fsts
or
movups
or
pop
push
mov
mov
rcll
or
xchg
pop
loopne
xor
pop
xchg
mov
shlb
movsl
test
and
mov
mov
cmp
adc
cld
test
xchg
daa
inc
mov
fld
movsl
mov
mov
lret
sti
fs
rcll
imul
push
and
jp
cmp
mov
xor
jo
insl
sub
outsb
mov
dec
xchg
orb
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
mov
pop
mov
mov
jno
icebp
adc
fcoms
imul
rcrb
idivl
out
lret
movl
gs
sar
mov
arpl
sbb
int
mov
nop
ss
hlt
inc
hlt
xor
imul
mov
xor
inc
test
push
mov
stos
mulb
dec
jp
sub
rolb
jmp
arpl
push
sub
and
lods
pop
inc
orb
sbb
adc
int3
pushf
data16
jg
mov
sbb
pushl
xchg
and
jg
mov
repnz
icebp
iret
cmp
pop
mov
mov
pop
mov
pop
cmc
cmp
repz
cld
insb
pop
pop
lock
cld
enter
xor
es
mov
inc
xchg
cwtl
in
xor
js
sbb
mov
mov
inc
adc
mov
jge
cmpsl
pop
out
push
shlb
decl
test
and
in
pop
adc
sub
rcrl
xor
mov
sub
push
add
js
cmpsb
loop
push
push
and
testb
sbb
mov
add
xchg
shl
jmp
mov
add
xchg
push
push
add
scas
stos
cwtl
mov
popf
mov
jl
jl
mov
xor
ficoml
mov
cmpsb
ja
iret
add
fcoms
and
push
lret
nop
mov
into
or
in
or
les
fucom
aad
sub
sbb
iret
xor
inc
fisubl
cmp
ds
adc
mov
addr16
or
push
mov
or
and
inc
cmp
popa
xlat
andl
push
jo
adc
in
imul
sarl
lds
inc
cmc
jo
movsb
jg
ja
jle
cmp
adc
jno
sahf
mov
dec
jmp
mov
mov
and
fimull
imulb
cmp
cli
cmc
imul
fists
and
out
lock
sub
neg
or
ret
push
pop
lods
push
cli
xchg
pushf
xchg
mov
mov
lds
lock
sub
inc
or
mov
test
and
jecxz
cwtl
in
mov
fsubs
and
shl
je
out
mov
lcall
or
adc
addr16
movsl
xchg
jbe
les
cs
inc
inc
ret
repnz
sub
sbb
or
xchg
inc
popa
ljmp
pop
adc
stc
movsl
test
ja
pop
cmp
mov
mov
push
push
ja
push
lret
test
cmp
lcall
sbb
daa
pop
xchg
test
jl
nop
iret
imul
shl
cs
cmp
in
push
inc
das
and
add
mov
pop
mov
adc
jle
or
inc
pop
push
mov
adc
aad
mov
push
mov
inc
add
or
das
icebp
xlat
xchg
fiaddl
inc
fildl
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
insl
mov
les
xchg
subl
fbld
and
jno
movsb
nop
xor
sub
pop
out
and
rolb
mov
dec
arpl
loope
cltd
inc
shll
aaa
inc
in
test
lods
xchg
and
adc
repnz
pop
jnp
aam
jg
arpl
and
loopne
sarl
movsb
jge
cmp
stos
mov
add
lea
mov
in
cmp
or
add
adc
inc
ljmp
dec
int3
dec
mov
repz
sbb
mov
jo
lret
ret
in
fst
pop
or
sbb
and
aad
mov
mov
rolb
xchg
rcll
aam
out
fnstenv
mov
adc
push
aaa
fadds
jg
shrl
jl
sar
mov
cmp
sbb
cld
aad
mov
js
mov
pop
jge
mov
xchg
cs
arpl
pop
inc
add
xchg
scas
xor
popa
mov
jmp
sbb
or
test
ret
lret
mov
and
xchg
xorl
pop
movsl
mov
out
lods
xlat
cltd
mov
dec
and
xchg
push
mov
loop
popa
fsubs
cmpsb
jns
stos
dec
mov
push
mov
test
jge
inc
lahf
lret
push
stc
sbb
cmp
jno
jl
in
push
push
loop
stc
cmp
in
or
aas
or
adc
cwtl
stc
dec
movsl
sbb
in
lret
test
pop
repz
jmp
out
add
push
sahf
lods
dec
mov
jge
in
out
mov
jle
icebp
scas
shll
mov
fldt
jl
gs
scas
cwtl
mov
ds
pop
mov
adc
sbb
xchg
pop
test
lcall
in
mov
push
push
mov
imul
add
dec
dec
mov
rcll
cmp
es
fldl
loopne
f2xm1
std
enter
jl
rcrb
lock
sbbb
inc
sub
xchg
dec
sbb
and
mov
ljmp
cmp
loope
fcmovne
mov
shrl
shrb
jbe
fst
loop
shll
cli
push
repz
mov
rcrl
lock
daa
mov
pop
xchg
loopne
icebp
or
out
lcall
mov
inc
adcb
ljmp
mov
loopne
mov
sub
popa
add
div
andb
sub
xchg
sub
shll
mov
test
in
push
and
xlat
int
mov
iret
sub
mov
mov
in
stos
add
mov
sub
mul
inc
lea
xor
jecxz
das
test
imul
pop
push
xchg
clc
sub
push
lods
test
insb
cwtl
in
push
push
sub
cmp
rcr
sbbl
add
jae
dec
mov
push
inc
or
sbb
test
rorb
ret
pop
daa
inc
add
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
mov
cwtl
jecxz
imul
jne
and
fwait
push
stos
mov
ret
jmp
test
das
mov
repz
pop
orb
push
lcall
jae
jbe
xor
and
ret
cmpsb
daa
cli
loop
mov
vpminub
fistl
mov
xor
arpl
test
jmp
lds
outsb
fidivs
popa
arpl
cli
jb
add
sbb
test
mov
mov
jne
push
xor
push
cmp
aaa
jnp
mov
je
std
call
in
and
es
pushf
jne
repz
xchg
mov
and
push
out
add
ret
arpl
test
movsl
lds
inc
in
cmp
xchg
cmpsb
sarb
jp
icebp
in
xchg
sbb
pop
sub
fisttpl
in
rcll
testb
scas
hlt
push
lods
jo
inc
sbb
inc
andl
lret
popf
xchg
push
mov
push
mov
addr16
je
xchg
mov
sub
jmp
sub
pushf
jge
out
or
ret
dec
lods
js
int3
fcomps
inc
mov
mov
sub
pop
fwait
xchg
mov
mov
xor
pusha
mov
pop
jb
mov
in
pop
inc
test
xchg
std
sbb
mov
pop
movsb
xchg
mov
int
pusha
xor
out
inc
jns
mov
aad
je
jge
stc
sbb
std
xchg
xchg
stos
jae
scas
andl
mov
jl
sub
or
mov
xor
pop
ljmp
add
mov
sbb
adc
sbb
sbb
xchg
push
sub
stc
std
insb
and
add
jae
sbb
and
mov
push
push
fsub
cmc
xor
push
ljmp
lcall
push
stos
xchg
or
mov
imul
cmc
dec
out
bound
enter
test
inc
xchg
stos
mov
adc
mov
lcall
mov
push
sub
das
mov
lret
jp
fisubl
inc
mov
ret
xor
mov
adc
mov
sub
imul
ret
ret
fs
sub
sub
inc
stos
mov
fadds
cld
mov
mov
pushf
mov
data16
cld
push
mov
js
insl
push
add
jmp
cld
add
mov
and
jl
mov
dec
or
out
fimull
imul
add
mov
rcll
pop
sbb
ret
dec
pop
and
pop
push
dec
std
xchg
or
pusha
xchg
add
xchg
lods
adc
pop
fdivrs
dec
outsb
cs
mov
stc
out
out
scas
cmp
js
xchg
popf
out
outsl
insb
lret
cmp
mov
lahf
mov
rcrl
adc
push
mov
sti
push
push
jg
pop
lret
pop
inc
jno
popf
les
cmpl
or
jg
scas
test
fstps
inc
lds
or
and
clc
jb
leave
outsl
pusha
or
sarb
imul
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
insl
movsl
push
sarl
les
frstpm(287
insl
or
jmp
mov
mov
roll
push
loop
xchg
mov
ja
cmp
aaa
mov
into
aaa
jmp
inc
pushl
out
les
leave
lret
sbb
mov
sarl
mov
out
imul
add
push
xor
fdivrs
imul
pop
scas
cld
imul
xor
out
mov
mov
xchg
insl
sbbb
loopne
adcl
ret
push
insl
insl
mov
push
jb
cli
pop
pusha
jno
outsl
fucomi
inc
mov
cmpsb
xchg
adc
bound
push
outsb
mov
lea
pop
sbb
lea
shr
lret
pusha
rcll
clc
jp
lea
lahf
pop
dec
lret
ja
jg
in
insb
cmp
int
sub
dec
mov
adc
ficompl
push
sbb
lds
int
mov
lods
aas
xchg
pushf
roll
aaa
outsb
dec
or
int
cmp
lock
inc
adc
and
stos
add
inc
jns
xor
or
mov
xchg
sbb
iret
push
mov
in
enter
in
mov
push
mov
lea
inc
jecxz
sbb
xor
loope
insl
out
popa
lret
test
int
popf
pop
jbe
es
out
insl
sub
sub
jnp
addr16
movsb
mov
inc
mov
jge
and
ret
jge
xchg
sbbb
push
xchg
pushf
pop
sub
lds
sbb
test
lods
push
sbb
in
sbb
add
and
inc
adc
call
mov
divb
test
sbb
insb
mov
cltd
mov
pop
clc
sbb
inc
and
mov
fisttpl
jo
out
pop
mov
pushf
inc
scas
inc
and
int
cmp
negb
test
mov
pop
sahf
pop
fidivrs
adc
movsl
jmp
xchg
pop
push
jmp
xlat
clc
js
stos
aas
loop
div
pushf
jmp
rol
and
sub
out
in
and
in
mov
jb
cmp
inc
dec
iret
mov
sbb
pop
int3
int3
in
jne
xor
sti
mov
movsl
mov
sbb
dec
or
pushf
idivl
xor
stc
dec
jp
mov
scas
popa
jno
das
xchg
dec
insb
stc
clc
fdivrl
sbb
inc
mov
aas
pop
arpl
clc
repz
mov
divl
sbb
in
lods
xor
push
add
pop
idiv
movsb
scas
mov
ja
stos
or
mov
jb
pop
pop
insb
gs
dec
mov
sub
mov
jg
pop
push
js
mov
pushf
lret
fadd
inc
popl
pop
js
pop
xchg
outsb
sbb
leave
and
mov
jbe
mov
or
fistps
pop
xchg
test
xchg
movsb
test
dec
xchg
push
iret
roll
imul
cmpsl
pop
mov
xor
mov
imul
pop
lahf
mov
add
gs
pusha
mov
mov
pop
or
shll
sub
rorb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
xor
jns
mov
ja
stos
fcompl
xchg
out
jae
mov
sub
lret
mov
push
in
clc
jmp
ret
bound
test
inc
mov
stos
shll
push
out
sbb
loope
xchg
cmp
jmp
jno
mov
lcall
jle
fisttpl
ret
sub
packssdw
out
add
add
push
or
pop
ja
cmpsb
pop
arpl
push
xchg
gs
jnp
mov
push
sub
test
sbb
lea
jmp
xor
ja
mov
mov
cli
add
scas
cli
mov
ljmp
scas
movsb
js
pop
mov
pop
inc
je
jge
in
insl
mov
mov
mov
sub
out
mov
addr16
je
subl
pop
rol
pop
adc
insb
jmp
lods
fistpl
cmp
pop
jecxz
adc
popl
add
inc
es
pop
add
pop
push
sub
cmc
xor
mov
fstpt
sahf
pop
jae
jge
test
sbb
inc
jno
movsb
adc
jp
xchg
inc
popa
add
fists
lods
jp
adcb
movsb
dec
pop
repnz
pop
outsb
mov
iret
add
mov
mov
dec
popf
aam
test
les
les
repnz
jnp
sub
xchg
scas
mov
mov
mov
pop
fstpl
stos
xorb
cmp
sbb
mov
push
insb
call
das
mov
out
ret
mov
imul
mov
push
mov
enter
mov
xchg
cmpsb
movsb
sti
aaa
in
cmp
bound
sub
xchg
mov
pop
je
jl
lcall
arpl
stos
fadds
stos
imul
mov
hlt
inc
mulb
xor
jne
testl
mov
jnp
lret
cwtl
mov
dec
pop
or
cwtl
xchg
pusha
cmpsl
push
out
mov
xlat
leave
test
cmp
in
xor
inc
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
pop
pop
dec
xchg
jp
mov
mov
sub
subb
add
cmp
movsb
fisubs
sti
mov
movzbl
or
aas
lds
cmc
or
lods
push
sbb
call
fwait
add
sub
bound
lahf
mov
push
pop
sti
push
hlt
ja
push
out
stos
push
jg
and
mov
push
add
test
outsl
inc
mov
xchg
shl
bound
jb
scas
cmp
mov
push
mov
pop
adc
mov
test
in
setne
mov
jne
jecxz
add
pop
nop
mov
ret
sbb
or
ljmp
lods
daa
popa
and
out
out
dec
fdivl
lret
out
out
addr16
xchg
or
mov
push
leave
push
cmp
das
sbb
sbb
sbb
repz
push
mov
les
pushf
mov
inc
pop
hlt
cltd
jno
xchg
mov
cld
pop
cwtl
mov
mov
call
mov
and
icebp
jae
inc
popf
rcr
push
lret
dec
hlt
call
sbbb
iret
pop
imul
dec
ja
int3
jmp
fimull
mov
and
jb
and
rol
imul
lods
jg
cs
dec
jno
fisttpll
push
mov
outsb
fldcw
data16
stc
dec
and
out
mov
xchg
js
mov
mov
jp
iret
pusha
dec
clc
in
and
add
loopne
cmpsl
ss
push
xor
sbb
xchg
mov
int3
cmpsb
lret
push
fistpll
dec
daa
xadd
cmpsl
dec
out
leave
outsl
xorb
inc
inc
stos
sbb
pop
dec
icebp
call
xchg
lods
aaa
add
or
mov
std
and
push
fbstp
dec
lahf
xchg
jg
stos
fldl
andb
xchg
insl
fs
add
out
popf
adc
mov
push
iret
dec
push
xor
mov
in
and
cmp
outsb
test
mov
sahf
cld
and
les
pop
daa
cmp
push
dec
movl
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
dec
sbb
jns
mov
shrl
and
push
sbb
mov
sub
loop
es
sbb
fsub
and
stos
sbbb
sbb
mov
and
dec
sub
mov
sub
rorl
repnz
popa
enter
jmp
out
in
sbb
inc
sbb
frstor
mov
test
adc
ror
mov
mov
loope
or
sahf
idivl
fildl
cwtl
cs
lods
jne
inc
test
fbstp
ds
lock
stos
cmp
cs
add
pop
fsub
pusha
push
lods
pop
jmp
dec
xchg
lods
ret
or
js
ja
mov
mov
in
addb
or
sbb
mov
dec
jmp
push
lahf
mov
bound
out
dec
mov
xlat
add
sbb
cs
and
add
sbb
pop
outsb
shlb
mov
xor
fwait
popf
pushf
or
dec
cld
cmpsl
das
mov
mov
pop
xchg
iret
leave
inc
xor
mov
into
xor
outsl
sbb
lods
popa
lahf
mov
pop
test
loopne
insb
mov
sub
jno
inc
ss
mov
lods
inc
into
add
push
aad
shl
xchg
cmp
sub
scas
les
push
loop
dec
or
pop
inc
insb
addr16
mov
scas
js
mov
ds
loope
popf
sbb
xor
das
push
in
test
or
lock
adc
stc
pop
push
mov
fcmovne
mov
sub
shrl
cmp
addr16
add
add
hlt
sub
mov
dec
inc
xchg
xchg
xor
or
jne
mov
xchg
lods
ds
stc
cmp
rcrl
rorb
mov
popa
aas
stos
rcl
icebp
sbb
jge
ret
ret
sub
mov
xor
jge
push
leave
xor
inc
mov
sbb
aas
scas
mov
lret
aad
jns
sti
inc
mov
push
pop
xchg
inc
dec
imulb
mov
lcall
jae
pushf
mov
ret
loopne
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
mov
xchg
mov
add
bound
push
lcall
aaa
pop
shll
cmp
dec
and
dec
pop
sub
mov
mov
imul
out
xchg
outsl
jb
xchg
test
iret
jg
sahf
inc
call
andb
mov
andb
sub
jmp
loop
repnz
xchg
pusha
pop
push
push
les
jb
jecxz
dec
jo
mov
pop
lcall
xor
outsl
sbb
dec
inc
pop
dec
rcrl
lahf
icebp
inc
popa
xor
les
sub
xchg
fcoml
shlb
andb
loopne
inc
push
xorl
xchg
repnz
xchg
sbb
add
mov
lahf
xchg
inc
fstp
push
cmp
push
pop
jb
aad
mov
push
es
mov
mov
mov
shr
je
scas
xchg
fdivrl
pop
rcr
outsl
mov
jne
jmp
ret
push
imul
outsb
ds
or
test
pop
xor
pop
mov
sub
jecxz
repz
ljmp
jmp
xchg
popa
mov
and
ds
sub
outsl
les
push
add
pop
test
popf
push
dec
loope
cmp
daa
das
call
xchg
and
fdivrp
stc
cmp
cmp
cmp
roll
cmc
push
push
or
data16
lcall
shll
mov
push
jg
mov
mov
mov
push
mov
pop
xor
push
inc
jb
push
mov
pop
cltd
sarl
nop
xor
sub
aad
mov
std
dec
test
jno
pop
sarb
add
mov
mov
jno
test
xor
iret
imul
and
arpl
and
fdiv
xchg
add
pop
mov
ljmp
jp
pop
adc
push
xor
rclb
mov
adc
lds
mov
in
cmp
push
out
fsubrs
adc
imul
ret
xor
cld
in
xlat
push
cmp
imul
pop
jge
mov
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
cltd
dec
xchg
scas
mov
mov
arpl
cmp
bound
aam
hlt
sbb
xchg
lods
in
lret
cmp
rorl
daa
ret
or
out
mov
gs
testb
ljmp
add
sbb
pop
push
cmpsb
rolb
add
vpsubw
leave
repnz
in
fdivr
jmp
cmp
lods
test
sbb
sub
das
adc
mov
add
adc
popf
or
call
addr16
push
xor
cmp
push
inc
js
or
por
and
dec
pop
cmp
call
cmp
decb
lcall
pop
sarb
rorl
sub
push
pop
push
push
movsl
add
repnz
or
dec
ljmp
jp
dec
pop
nop
std
mov
xrelease
shrl
cmp
fwait
push
cwtl
xchg
push
fisttpll
xlat
jno
or
push
cmpsb
jno
dec
jbe
sub
push
xchg
jmp
rcr
adc
xchg
mov
mov
inc
shrb
jl
in
repz
orb
fisubrl
sbb
xchg
cmp
xor
loope
lods
xor
jge
xchg
out
and
xlat
push
hlt
and
andb
add
jns
js
addr16
jl
push
lcall
pop
mov
jae
adc
sub
fstpt
dec
or
inc
stc
push
or
into
or
push
xchg
cli
and
jae
cmc
add
pusha
add
jg
insl
mov
jbe
adc
xchg
dec
cli
loopne
and
test
and
lret
aas
out
jmp
iret
in
arpl
dec
xchg
loope
and
jne
pcmpeqw
adc
loop
sub
imul
and
clc
mulb
insb
mov
test
cld
adc
push
int3
test
mov
test
and
mov
enter
sub
test
cs
ja
in
mov
mov
xor
aad
sub
in
arpl
push
sub
mov
jle
imul
adc
add
add
std
addr16
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
je
imul
jl
push
popl
jb
mov
fidivrl
cmp
call
push
pop
push
add
testb
adc
adc
xor
mov
adc
jecxz
mov
ficoml
test
sbb
lret
pop
shrl
nop
adc
scas
cs
inc
jb
lds
fistps
pop
movsl
adc
dec
les
fsubr
data16
xor
xlat
mov
or
les
repz
ficompl
mov
je
jmp
xor
fprem
cltd
pop
dec
andb
push
xchg
xor
cmpsl
sbb
inc
movb
repnz
stos
inc
cltd
andl
out
pop
dec
std
sbb
call
fisubrs
push
inc
std
icebp
mov
enter
push
adc
adcb
lret
inc
inc
popa
mov
xchg
das
rcrb
rorb
pop
xchg
fsubrl
xor
out
xor
jb
jbe
cs
push
bnd
add
icebp
and
movsb
out
cwtl
call
xor
repnz
push
jmp
testb
mov
call
push
inc
mov
mov
mov
dec
mov
aaa
data16
cmpsl
rcrl
stos
ja
adc
rorb
pop
loop
and
mov
int3
lcall
aam
xor
adc
or
das
pushf
stos
cs
dec
mov
lcall
and
leave
test
inc
cmp
nop
mov
mov
out
sbb
out
lods
push
xor
movsl
and
mov
sub
sbb
sbbl
lds
mov
faddl
loopne
leave
lahf
and
pop
bound
push
inc
inc
rcrl
out
imul
sti
data16
add
push
or
dec
aad
mov
cmp
data16
orb
jbe
inc
loopne
in
imul
rclb
lds
mov
jb
jle
mov
inc
adc
xor
and
jne
gs
daa
fmul
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
xchg
dec
xchg
es
mov
mov
sub
insb
cmp
or
cmp
loop
rorl
outsb
imul
adc
and
data16
and
enter
sbb
mov
pop
pop
cli
xchg
lock
mov
jmp
popa
jns
add
cmpsl
adc
and
hlt
jle
cmp
jg
sub
fiadds
jg
test
das
mov
test
dec
inc
mov
lahf
orb
enter
add
cs
rorl
jns
dec
fisubl
and
orl
add
imul
and
cld
jns
test
push
sub
add
push
xlat
ss
xor
add
fnstsw
push
sub
sbb
sbb
addr16
les
mov
imulb
hlt
out
fimull
test
push
aad
mov
mov
dec
rolb
fcoms
inc
loopne
push
daa
int3
leave
xchg
xor
cmp
rcl
cmp
add
push
das
pop
mov
int3
or
lods
mov
outsl
cltd
addr16
xchg
loop
sbb
arpl
cltd
xchg
imul
ret
ljmp
dec
push
adc
mov
sub
push
les
jg
pop
adc
outsl
testb
add
mov
jno
add
pushf
mov
mov
xchg
jne
in
lock
adc
push
xor
popf
ljmp
sub
shr
sub
adc
aas
mov
orl
sub
leave
or
sahf
lret
rcr
data16
insb
inc
loope
cmpsb
add
jno
out
shlb
loope
jge
jecxz
repz
inc
jp
mov
lds
inc
pop
loope
mov
test
leave
or
cmpsb
adc
fistps
std
xor
outsl
sbb
test
and
in
jne
sbb
insl
test
iret
sbb
dec
xchg
hlt
inc
das
xchg
cmpsl
subb
xlat
pop
dec
jmp
aas
popf
sbb
or
fnstsw
aam
and
jecxz
mov
cmp
and
jecxz
adc
xchg
jecxz
mov
repz
inc
insl
addr16
and
outsb
dec
inc
popa
je
adcl
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
jp
pusha
sahf
adc
mov
mov
cmc
cmp
jp
sbb
aam
and
mov
sti
add
jg
mov
pop
xor
ljmp
inc
xor
add
inc
jb
cltd
mov
std
imul
outsl
pusha
andl
js
xor
test
xchg
data16
jl
mov
mov
jno
fs
in
and
cmp
lcall
popa
in
xchg
jl
sbb
push
gs
jl
lcall
nop
insl
mov
cmc
jmp
xchg
or
hlt
lahf
adc
orl
adc
icebp
repz
scas
movsl
stc
pop
cmp
loopne
adc
and
pop
xchg
mov
pop
add
test
es
lret
mov
inc
fsubl
cmp
ja
sbb
jg
das
sub
cld
push
cs
dec
xor
roll
sbbb
jno
aaa
data16
rolb
sbb
sti
cmpsl
std
sub
xchg
sbb
ret
cmp
push
std
data16
sahf
lahf
hlt
pop
mov
jbe
shll
jl
push
js
push
lcall
xchg
pop
outsl
popa
xchg
sbb
mov
mov
mov
outsb
faddp
mov
sbb
adcl
sbb
fdiv
xchg
mov
xchg
dec
test
repz
fidivs
roll
loopne
add
addr16
cmp
xchg
scas
ss
fdivr
dec
jg
mov
lods
ja
loope
push
jnp
sub
dec
popf
add
push
jne
icebp
mov
push
cmovg
in
cmp
ja
mov
xchg
or
lret
mov
inc
mov
jp
mov
sbb
ja
pop
push
and
jbe
loopne
movsb
xorb
cmpsb
aas
mov
jae
out
jmp
les
and
pusha
xor
mov
pop
inc
mov
cmpsb
test
cmp
cmp
mov
adc
loope
lcall
sub
push
mov
sub
leave
pop
lcall
pop
or
sti
lahf
aas
call
out
test
xchg
int3
das
daa
push
sub
out
sbb
out
fimuls
in
mov
add
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
outsb
lods
mulb
ret
pop
mov
xchg
xor
xor
fcoms
adc
aas
pop
in
mov
repnz
sub
xlat
sbb
xchg
inc
aas
leave
aas
push
jp
inc
fwait
dec
fistl
inc
ficompl
ljmp
ja
sbb
cmpl
jl
out
inc
fs
mov
pushl
pop
mov
inc
inc
das
dec
and
daa
icebp
ljmp
cltd
bound
cmp
fildll
push
inc
jle
test
adc
mov
adc
pusha
movsb
cmp
or
dec
dec
mov
mov
jg
fiaddl
dec
inc
dec
aas
mov
js
sahf
inc
jo
and
xor
jae
cmp
xor
or
insl
cmp
rsqrtps
add
inc
ret
add
daa
dec
xor
dec
in
movsb
cmp
pop
jmp
mov
push
push
cmc
adc
fcompl
sub
or
ljmp
push
mov
and
rcr
fdivrs
mov
int
adcb
inc
mov
in
inc
adc
mov
ds
movsl
int3
cli
push
add
pop
jbe
mov
test
pop
mov
xchg
in
push
add
xchg
aad
leave
aaa
addr16
adc
xlat
cmpsb
xor
lea
jle
mov
fwait
gs
lds
mov
repz
stos
xor
dec
stc
push
xchg
push
add
cli
mov
out
add
stos
rorb
leave
ss
inc
insl
xchg
push
pop
cmpsb
mov
cltd
mov
inc
inc
sbb
push
sub
or
insb
icebp
cmpsl
or
inc
std
adc
ja
jne
xor
add
and
add
inc
fldt
sub
pushl
xlat
pop
imul
xor
mov
test
test
jne
je
inc
adc
push
les
pop
mov
lahf
inc
movsl
or
dec
push
push
out
cmc
ljmp
movb
sbb
add
imul
inc
inc
push
mov
dec
lret
or
int3
sub
in
dec
icebp
pop
je
gs
pop
bound
rolb
ss
push
cmp
push
aas
cs
mov
jns
mov
shl
cld
out
iret
or
adc
nop
aam
jns
xchg
insl
loopne
sahf
push
in
int
adc
negl
fs
negb
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
xor
sub
ljmp
mov
jae
loopne
je
aad
shlb
ret
xchg
mov
dec
inc
daa
mov
and
rcrl
mov
jns
push
cmp
ret
and
jne
adc
subb
cld
mov
pop
fwait
ss
cld
sub
movsb
add
in
ret
jge
lea
push
sbb
mov
lds
cmp
pop
rcll
and
push
inc
int
dec
cltd
pop
xchg
call
mov
sbb
adc
lret
xor
sysenter
mov
inc
fisubrl
aaa
outsl
paddd
cmpsl
rorl
xchg
xchg
rolb
jbe
or
add
cli
imul
mov
sbb
mov
pop
out
pop
jmp
push
dec
adcl
incb
adc
adc
aad
xor
sarb
roll
int3
cltd
adc
cpuid
ds
dec
iret
jnp
push
out
jne
pop
cmc
lea
repz
lock
jne
es
insl
scas
pusha
jo
add
jmp
popa
pop
jle
add
mov
jmp
mov
jns
cmpsb
add
rclb
ds
loopne
add
cltd
push
jbe
dec
mov
shl
dec
sbb
fldl
cmp
push
subl
icebp
and
cmpsl
pop
loope
and
repnz
and
mov
je
mov
icebp
xchg
lock
xchg
xorb
jo
lock
mov
xchg
cmp
cmp
sbb
out
xchg
mov
xor
call
adcb
nop
adc
stc
jno
sbb
jge
ljmp
push
insl
lcall
out
fadd
aam
pushf
xchg
dec
call
das
mov
insl
mov
mov
lock
decb
mov
xchg
sub
pop
ds
int3
cld
add
cltd
aam
lods
push
push
rolb
jae
pop
aaa
fisttpll
cmc
mov
cmp
mov
lock
das
pop
lret
pop
out
leave
or
sbb
push
les
sub
gs
das
mov
mov
xor
adc
rol
inc
call
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
sahf
aad
mov
mov
stc
in
push
and
xorb
mov
xchg
js
into
data16
mov
sti
xchg
popa
popf
cs
data16
out
fldl
mov
lret
sti
aaa
mov
mov
adc
testl
inc
adc
and
xorl
push
test
mov
aam
cmp
xchg
lret
push
sbb
sbb
pusha
icebp
js
or
sbb
sbb
add
xor
int
dec
xchg
addb
loop
sbb
mov
inc
inc
popf
fmul
icebp
push
xor
lahf
loopne
out
jle
xchg
push
adc
push
mov
not
mov
xorl
pop
mov
sbb
ljmp
mov
outsl
aaa
jmp
dec
pushf
add
jnp
pop
xchg
fstpl
ret
pushf
adc
adc
js
jmp
mov
jnp
rorb
dec
negb
hlt
fcmovnb
add
aam
push
arpl
xchg
pop
and
sbb
call
xchg
fsub
sbb
pop
pop
xchg
stc
xchg
bound
jg
sub
cmp
xchg
mov
gs
push
inc
xchg
pop
xchg
lret
dec
stc
mov
cmp
out
dec
std
lods
push
fisubl
mov
int3
out
loop
mov
push
movsl
and
int
jmp
push
add
dec
dec
daa
dec
adc
cmp
xchg
xchg
inc
sbb
aaa
xchg
push
subb
mov
loop
cmp
ja
aam
xchg
cmpsl
pushf
dec
push
sbb
imull
and
push
inc
or
mov
dec
mov
loope
jp
and
jnp
mov
fstps
mov
or
cmp
dec
lret
adc
pop
ficomps
sbb
insl
lea
scas
push
stos
push
arpl
fadds
dec
imul
or
push
xor
push
push
jnp
xchg
adc
js
lock
adc
daa
leave
int
fistpl
mov
mov
js
sub
inc
daa
stos
jnp
pop
add
es
cmp
dec
mov
add
mov
enter
sbb
popf
push
notb
jmp
sub
mov
cld
int
xchg
push
xchg
or
loopne
scas
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
frstor
and
ret
mov
xorb
xchg
push
in
mov
xor
lea
add
inc
rcll
lret
repnz
in
inc
cltd
inc
int3
insb
aam
cmpsl
stos
cmp
cli
push
xchg
and
jp
sbb
insl
and
shlb
mov
pushf
push
cmp
jae
subb
sahf
cmp
fcomip
aam
mov
push
cmp
and
add
pop
clc
adc
fidivrs
add
pushl
ss
test
faddl
cs
dec
and
add
popa
jl
mov
push
jne
test
sbb
mov
loop
popf
pop
nop
mov
mov
jp
mov
or
test
and
xchg
stos
and
fs
xchg
lock
cmc
lahf
scas
mov
das
sbb
not
lods
adc
mov
popf
jp
aaa
lds
push
data16
shl
mov
test
push
aad
mov
sbb
jge
xor
adc
fstps
fisubrl
jle
pop
xor
lea
jb
std
adc
push
pop
mov
sub
test
cmpsl
aaa
inc
int3
stos
scas
dec
inc
push
test
out
mov
inc
adc
mov
cld
mov
movsl
cmp
push
imul
inc
dec
cltd
fldcw
aam
jno
lea
sub
out
repnz
cmp
movsb
inc
mov
jmp
xchg
xchg
dec
adc
outsl
jbe
loop
pop
pop
lds
in
sbb
mov
xchg
and
fiaddl
mov
ljmp
mov
mov
iret
lahf
jo
pop
xchg
sbb
xlat
dec
aad
cmc
out
stos
add
stos
and
adc
cltd
js
shlb
scas
and
fucomip
or
imul
mov
mov
int3
movsl
and
lret
mov
sub
shll
dec
sbb
pop
sub
push
lret
call
inc
push
mov
mov
fwait
mov
mov
lret
rolb
push
pop
flds
sar
ja
lea
dec
repz
pop
loope
push
mov
shrb
sti
shl
sbb
fsts
inc
mov
std
int
push
jl
hlt
enter
and
mov
or
fisttpll
cmp
lock
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
repz
adc
test
cmp
mov
cltd
cmp
divl
jg
lret
dec
pop
movsl
stc
sub
inc
pop
dec
leave
cs
xchg
andb
lds
outsl
mov
pop
repnz
cmpsb
or
daa
push
rclb
js
aaa
rcrl
cmpsl
aad
ds
push
mov
cmpsl
stos
cmp
adc
lahf
pop
mov
pop
and
lahf
aaa
mov
sti
lret
lcall
out
sub
in
inc
add
cmpsl
mov
sbb
push
or
inc
xchg
dec
mov
cmp
repz
mov
in
dec
adcb
pop
or
sub
sub
rcll
mov
mov
popfw
mov
shrb
call
ja
sbb
push
bnd
lret
add
jle
mov
pusha
iret
cmp
adc
repnz
je
pop
inc
adc
or
push
mov
dec
test
xlat
mov
dec
mov
mov
in
adc
std
out
cmp
pop
ljmp
sbb
or
loope
push
pop
test
jne
fwait
arpl
repnz
inc
scas
inc
jmp
xchg
rcrb
movsl
mov
sbb
mov
dec
and
out
int
jbe
adc
push
xchg
addr16
aaa
and
cmp
repnz
mov
push
xchg
hlt
lds
mov
mov
cmp
test
les
movsb
push
out
rorb
testb
js
push
pop
xor
fucomp
adc
add
sbb
adc
mov
lds
xchg
sbb
test
dec
cli
hlt
lret
outsl
stos
gs
mov
add
lahf
push
aas
mov
int3
pop
out
lods
lods
stos
in
ljmp
shlb
leave
iret
fucomip
bound
pop
inc
daa
xchg
shrb
repz
daa
rol
mov
flds
push
lock
or
lock
pop
pop
je
sbbb
xchg
cmp
lret
loop
cli
popf
push
lods
je
sbb
cmp
rolb
ja
mov
dec
fimull
nop
or
add
adc
lods
mov
lahf
dec
out
cmp
aaa
pop
dec
jnp
in
mov
sub
inc
addr16
xchg
dec
sub
nop
int
pushf
and
push
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
or
xchg
les
faddl
ds
aaa
ret
pushf
or
lods
add
mov
push
out
push
push
dec
mov
daa
ret
inc
lods
je
mov
adc
sub
bound
add
sbb
or
out
mov
push
mov
xor
hlt
push
fst
jmp
jns
popf
push
ret
stc
jnp
pop
int
aad
or
ss
mov
pop
pop
push
xchg
loopne
add
call
inc
pop
xor
jmp
loopne
cltd
xchg
daa
lahf
pop
fs
dec
mov
aas
dec
xchg
jle
pop
outsb
mov
rcrb
movsl
sar
aam
jno
scas
pop
frstor
std
xor
frstor
xchg
jmp
notb
fcomi
sub
insb
pop
out
dec
mov
mov
push
scas
clc
ret
push
lds
mov
scas
out
jo
aad
enter
mov
sub
pop
jnp
xchg
push
negl
push
cmp
adc
adc
icebp
test
ja
fcmovbe
mov
cmp
lea
outsl
clc
xor
dec
jno
push
cmp
jo
pop
jp
and
add
mov
scas
xchg
stos
jae
popa
lods
lea
or
and
inc
pop
mov
push
sub
test
push
xchg
pushf
push
sbb
mov
scas
xor
dec
adc
push
and
ret
inc
inc
push
mov
jo
into
je
mov
das
testb
push
push
ret
mov
popf
test
pop
xor
pop
mov
arpl
xor
jne
test
xchg
iret
sbb
push
dec
pop
mov
lock
and
dec
pop
es
add
xchg
data16
sbb
data16
insb
cmp
fucomip
push
lds
loop
add
mov
outsl
fidivl
idivb
pusha
out
jno
mov
jno
aas
daa
mov
sar
jns
jle
iret
shl
push
pop
cmp
rolb
popa
popa
adc
nopl
or
jno
aas
pop
mov
std
idiv
cmp
dec
out
mull
cltd
mov
loope
cltd
out
loope
movl
aam
dec
push
and
fcmovbe
mov
push
jmp
cmp
add
xchg
std
loopne
dec
cltd
and
mov
dec
repz
notl
les
leave
or
adc
mov
mov
clc
sub
cmp
scas
and
das
sub
and
cli
sub
xchg
dec
or
inc
push
jnp
repz
mov
jo
jb
xchg
in
aam
imulb
push
sbb
jb
xchg
ljmp
xchg
cmp
jmp
mov
or
fistl
cmc
cmp
sbb
and
in
or
aas
jae
adc
jecxz
rcl
pop
cmp
and
push
decb
outsb
xchg
and
mov
sbbb
mov
in
xchg
and
imul
lods
xchg
scas
ljmp
clc
sub
aaa
dec
out
push
sbb
fwait
adc
imul
stos
jge
inc
enter
mov
push
dec
pop
loope
jge
inc
pop
imul
push
jb
and
jne
xchg
mov
inc
pop
or
fwait
mov
lock
leave
es
cld
lret
mov
xchg
xchg
sarl
pop
jne
xchg
cmpl
das
aaa
mov
push
loop
cmpb
inc
iret
inc
pop
mov
xchg
nop
pop
jg
js
test
je
fdiv
xor
xchg
push
loopne
pop
sbb
pusha
xchg
mov
das
and
inc
cld
ret
add
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
sbb
outsb
mov
mov
rcll
stc
pop
nop
and
pop
sub
daa
stos
js
sub
movsl
dec
dec
dec
pop
xchg
movsl
sub
xlat
xchg
ret
sub
jl
fidivl
xor
lods
ret
stc
xchg
push
icebp
addl
fwait
adc
dec
mov
xchg
jmp
sbb
addl
lock
cmp
or
lods
add
test
into
cltd
outsb
jp
movsb
push
add
cmc
sahf
aaa
mov
inc
imul
dec
es
xor
nop
mov
inc
and
pop
mov
addr16
xlat
jmp
dec
flds
aas
push
pop
imul
arpl
cmp
scas
mov
lea
adc
push
jb
push
dec
outsb
arpl
clc
dec
push
enter
fdivrl
js
add
in
lea
jp
dec
cmpsl
inc
cmp
ds
pushf
adc
dec
rcll
js
lds
pop
cmp
dec
repnz
pushf
cmp
jmp
sub
inc
add
es
repz
fldt
addr16
push
jo
mov
xchg
sti
in
cmp
or
push
loope
xchg
push
push
int3
and
js
les
repnz
popa
sub
dec
mov
insl
adc
ds
sbb
mov
in
mov
sbb
stc
in
outsb
fmuls
sub
xchg
jp
lahf
icebp
pop
icebp
lock
xchg
mov
dec
and
mov
mov
test
into
andl
mov
cmp
or
out
stos
dec
mov
sub
test
insl
or
ds
cwtl
into
outsl
scas
insb
jo
adc
outsl
lods
fstl
push
mov
inc
xchg
gs
adc
xchg
mov
dec
mov
cmp
cli
nop
arpl
sub
jl
xor
out
xlat
fdivrl
cmp
adc
out
jbe
cmp
in
in
inc
imulb
outsl
mov
lods
mov
sub
cli
push
push
push
push
nop
aaa
je
and
or
inc
out
push
add
dec
dec
incl
lods
mov
cli
push
fwait
stos
stc
lock
dec
xor
mov
inc
pop
out
data16
cs
mov
in
sub
out
mov
in
cmc
into
iret
xchg
sbb
adc
imul
add
mov
or
shll
decl
xchg
mov
scas
outsl
xor
jl
jae
pop
fcmovb
pop
push
es
ret
sbb
out
add
mov
jae
push
sahf
std
sub
scas
mov
out
shl
jp
mov
cmc
mov
popa
repz
imul
and
lods
aaa
and
enter
cwtl
push
xchg
movsb
xchg
enter
adc
cmp
push
add
and
xor
mov
ds
dec
lea
popa
inc
into
mov
lock
aam
mov
pusha
sbb
cld
das
nop
xor
jmp
or
cmpsb
sbb
arpl
sub
xor
lahf
inc
out
mulb
pop
pop
mov
cmp
add
xlat
mov
jnp
and
xor
xlat
push
testl
and
mov
divl
pop
addl
test
inc
scas
and
and
es
js
inc
dec
push
cltd
mov
lahf
dec
fildll
and
mov
fidivs
xchg
cmp
loop
cltd
leave
cmp
dec
loop
es
push
test
bound
int
push
out
xchg
jge
icebp
int
aad
adcb
nop
mov
add
pop
hlt
and
pop
call
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
sahf
inc
mov
mov
or
push
mov
je
pop
mov
enter
sub
aad
and
test
out
cli
cs
xor
ljmp
pop
movsl
sbb
imul
cmp
and
insl
inc
gs
mov
xor
jmp
or
dec
fldenv
aam
mov
sbb
incl
cmpsl
loope
jmp
inc
add
push
daa
popf
add
aam
xor
int
jg
int
sub
mov
or
pop
xor
sbb
lock
xor
sub
fbld
das
aas
push
push
cltd
inc
or
enter
cmp
adc
ret
jae
mov
xlat
pop
jno
jp
sub
xlat
addr16
sub
in
pop
iret
lret
push
stc
je
mov
mov
cmp
in
imul
ss
dec
sub
sbb
mov
push
jne
lret
jge
mov
and
or
insl
in
int3
test
cltd
insl
jae
sbb
inc
push
stos
pop
xor
and
mov
xor
nop
in
pop
in
test
mov
popf
push
mov
test
loop
hlt
mov
testl
xchg
inc
lcall
sbb
je
inc
push
jge
mov
mov
xchg
negl
xlat
or
inc
xor
inc
cmp
cmp
imul
insl
test
cmpsb
jno
cmp
jo
sub
js
icebp
xchg
sbb
mov
adc
add
sbb
sub
loop
bound
add
sub
mov
push
loope
lahf
pop
jp
stos
sbb
cmpsb
jno
lcall
decl
icebp
cmp
xor
pop
roll
pop
scas
adc
mov
xor
sbb
push
mov
movsb
push
std
jecxz
dec
cmc
pop
mov
add
aas
fcoml
ret
mov
daa
pop
pop
jp
fucom
cwtl
jp
pusha
fs
sub
test
jae
ret
push
cli
fs
sti
lea
mov
adc
pop
and
cmp
pop
imul
pop
mov
mov
mov
and
jns
lahf
rcll
add
cmp
cmc
mov
sbb
iret
jecxz
imul
imul
sub
sub
xchg
rcrb
push
ficompl
xor
daa
xlat
mov
loopne
arpl
fisttpll
js
imull
clc
fiaddl
cld
xor
inc
pushf
dec
dec
jne
addl
xor
dec
xchg
xlat
insb
test
xchg
xchg
and
cld
adc
cld
je
pusha
stos
lcall
inc
andb
adc
dec
xchg
int3
sbb
cmc
ja
fcoms
loopne
mov
lret
xor
cmpsb
imul
scas
cmp
mov
sahf
jb
sbb
ja
xchg
push
leave
inc
rclb
and
sbb
shll
sub
add
jecxz
scas
jns
bound
cmpsb
jno
xchg
mov
insl
cmp
mov
nop
inc
push
cli
ret
xchg
dec
out
jno
jo
fstps
cmpb
xor
and
cld
or
lret
imul
sahf
jb
ljmp
data16
xchg
scas
add
adc
pop
push
adc
add
lods
jge
outsl
mov
insl
hlt
jne
out
mov
ret
dec
lock
movsl
cmp
ret
out
fnstcw
jnp
stc
mov
das
cmpsl
loope
test
adc
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
aam
outsb
incl
cmc
imul
in
xchg
insl
mov
pop
out
call
mov
pusha
in
pop
sub
mov
and
test
ljmp
in
icebp
jae
je
sbb
or
shl
out
ficoml
inc
add
outsl
lds
fucomip
lods
sti
mov
xchg
ja
mov
pop
vpsraw
mov
mov
jp
adc
mov
xchg
outsl
stc
inc
add
and
mov
inc
add
push
enter
das
adc
cmp
xor
mov
fwait
outsl
gs
cmp
gs
inc
stos
lods
adc
aad
subl
pop
jbe
sbb
shrb
repz
fdivs
jp
jns
mov
inc
arpl
or
aam
xchg
test
add
lea
sbb
mov
rcll
pusha
in
andl
ret
lock
rolb
push
les
mov
mov
and
push
fsubs
stc
out
pop
dec
jg
in
pop
fsubrs
das
repnz
adc
xchg
xor
nop
negb
mov
int
lods
jns
bound
dec
push
shl
dec
outsb
mov
pop
and
push
test
and
aaa
mov
pop
aaa
mulb
popf
stos
and
jl
cmp
out
jmp
mov
out
inc
jb
mov
lret
psadbw
xor
stos
mov
pop
lea
ss
jecxz
movsb
sbb
repnz
or
ds
pop
test
sahf
shlb
shrl
or
dec
mov
add
cltd
mov
test
dec
scas
mov
push
add
jb
sub
int
mov
sti
imul
sbb
inc
or
add
mov
loope
clc
jge
mov
push
xor
rcll
fwait
jnp
js
mov
push
fbld
div
fdivr
sub
jmp
cld
inc
cmp
push
sub
lcall
mov
notl
insl
popf
bound
mov
enter
pop
cld
lods
notb
movsl
push
add
out
addr16
leave
xlat
pop
fldenv
cmp
gs
cmp
pop
cld
lret
jle
into
aaa
xor
enter
pop
rcll
lock
loope
ljmp
out
repnz
test
xchg
test
test
lret
jmp
cwtl
sub
testb
repz
dec
and
mov
addb
outsb
test
mov
sahf
mov
das
sbb
stos
jb
and
mov
in
cmp
in
dec
push
add
insl
pop
dec
mov
mov
addr16
lahf
sub
js
hlt
pop
out
out
ds
cmp
adc
je
pop
kunpckbw
sbb
jnp
add
movsb
imul
cmp
push
inc
xchg
idivl
cld
mov
rcrb
inc
lret
push
sbb
cmpsb
into
mov
test
xchg
lcall
cld
adc
lds
loopne
sub
outsl
push
cmc
pmullw
mov
and
mov
mov
dec
xchg
jne
dec
in
cmp
adc
sub
jp
test
mov
adc
sub
add
into
lcall
add
ret
outsl
cli
lret
and
mov
les
mov
sbbb
jnp
or
pop
mov
jmp
jmp
cmp
mov
fistl
mov
sbb
movl
movl
mov
jmp
fisubrl
mov
or
ror
xlat
mov
mov
flds
cltd
mov
mov
or
mov
outsb
mov
imull
push
lock
lcall
gs
lahf
add
sub
pop
cld
and
jmp
or
pop
cmp
xchg
repz
dec
out
mov
xor
movsb
idivb
addl
dec
stos
dec
adc
dec
jl
add
inc
push
cmp
iret
mov
lahf
adc
insl
add
and
cmp
lods
lock
pop
stc
or
mov
cmpsl
fistl
inc
xchg
out
insb
sbb
stos
mov
push
stos
cmc
xor
mov
out
adc
dec
test
stc
or
sbb
or
cmpsb
in
insl
push
scas
push
pop
fistl
test
inc
clc
ss
lcall
sbb
add
and
mov
adc
jp
ds
cmp
lret
inc
mov
pop
mov
mov
mov
lds
repnz
repz
xor
push
push
stos
pop
and
add
push
outsl
add
popf
add
push
cmp
jno
mov
or
daa
mov
pop
push
rorl
and
dec
iret
push
jg
pop
loop
pop
sbb
push
in
sbb
pusha
inc
dec
lock
push
cmc
cmc
out
in
adc
cmp
and
das
jp
addb
pusha
repnz
aas
iret
leave
mov
inc
mov
cld
cwtl
in
xorb
inc
xorb
sub
fnstsw
jno
loop
fsts
push
out
in
push
dec
imul
cmpsl
fmuls
or
inc
xor
scas
cld
jg
rcr
dec
xor
int
hlt
pop
mov
cmpsb
sbb
pop
addr16
pop
sahf
push
sub
pusha
push
mov
mov
repz
ret
arpl
xchg
adc
call
loop
sub
js
or
jne
adcl
iret
lret
pop
and
aas
add
mov
je
push
mov
xchg
pop
stc
xlat
lret
push
aas
dec
addr16
sarl
test
or
jns
jecxz
pop
and
cli
adc
ljmp
daa
add
or
fwait
movsl
or
xor
mov
jl
fldenv
cmp
rcll
std
es
sbb
jmp
aas
lods
sti
rclb
sub
jl
inc
ljmp
idivb
or
daa
xchg
int3
push
push
pop
arpl
adc
xchg
in
lcall
jo
outsb
fcom
sti
ret
fwait
in
in
sti
sub
sbb
clc
mov
js
mov
or
cld
or
call
mov
mov
push
adc
fildll
imul
mov
lds
jecxz
pop
movsb
sub
sbb
arpl
pusha
sub
stos
arpl
sub
fs
xor
xchg
out
lods
xor
or
jae
mov
jge
pop
mov
adc
aam
xor
stos
notl
int
adc
out
clc
test
int3
jns
scas
stc
sub
je
jl
xchg
jo
adc
scas
mov
mov
je
inc
cmpsb
sub
les
push
push
add
mov
aam
les
repz
pushf
mov
arpl
mov
push
xchg
shrl
incb
inc
push
inc
jmp
fisubl
xor
mov
stos
or
fimull
fmuls
leave
incl
decl
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
pop
mov
mov
adc
and
mov
aad
dec
pop
jle
pop
rorb
pop
adc
icebp
jmp
and
mov
adc
sub
ret
adcb
outsl
repnz
popa
jne
dec
and
mov
mov
sub
test
int
gs
mov
int3
dec
push
cmp
fiaddl
fidivs
cmp
dec
cmp
std
adc
movsb
fildll
pop
jae
icebp
sti
mov
rcll
add
outsl
jnp
inc
xchg
xchg
aad
fwait
int3
xchg
dec
das
cmpsl
pop
mov
jmp
ljmp
cmp
xchg
fdivs
subb
fsubr
das
jne
jae
in
das
mov
jae
insl
sub
rcll
mov
std
std
scas
lahf
loop
loopne
aas
mov
sub
test
mov
xor
fcmovbe
lock
nop
xor
mov
xchg
ljmp
rcr
popa
xlat
mov
dec
nop
fcom
jnp
xor
jge
pop
cld
sbb
mov
jnp
inc
scas
mov
mov
je
mov
add
mov
out
mov
leave
sti
imul
or
in
cmpb
jne
xchg
sbb
jb
pop
daa
cmpsl
xor
cmpsl
mov
push
jmp
shll
leave
cwtl
shlb
roll
das
sbb
inc
fdivrs
adc
sbb
out
icebp
loopne
cs
add
cmpsb
call
adc
push
jecxz
stos
jmp
lods
sub
push
fsubrs
sbb
into
adc
sub
push
adc
js
mov
std
movsl
fwait
add
loope
fsts
flds
inc
jl
dec
mov
xchg
sti
dec
les
repz
out
push
in
jns
inc
pavgw
xorb
mov
lock
pop
jo
mov
sbb
adc
jle
add
stc
xchg
xor
leave
push
sbb
push
and
xchg
mov
ja
jne
mov
adc
in
jno
jae
rorb
pop
bound
hlt
arpl
xchg
into
popa
cmpsb
pusha
movsb
test
fistpll
or
jnp
xor
adc
xor
pop
in
hlt
push
iret
sub
pop
notb
sbb
mov
sbb
mov
fxch
mov
push
aad
xorb
mov
mov
leave
sbb
rcll
xchg
dec
push
cmp
out
inc
cmp
cmp
lahf
or
das
mov
enter
adc
fidivrs
mov
es
jge
mov
inc
push
loop
sub
test
adcl
or
jne
cld
out
xchg
inc
cmc
hlt
sbb
ret
xor
inc
popf
fucomi
pop
push
loope
add
jnp
mov
mov
rcrl
jb
mov
in
cmc
dec
cltd
or
popf
mov
popf
mov
pop
fidivl
cmp
sub
das
push
cmp
jg
xchg
xchg
cmpsl
inc
jg
hlt
inc
and
negl
dec
scas
cltd
xchg
sbb
dec
orl
mov
sub
pop
negb
sub
lret
or
outsl
dec
test
push
mov
gs
scas
out
mov
xchg
sarb
and
mov
inc
imul
mov
fsubrs
lods
or
int
pop
clc
subl
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
push
push
adc
xchg
les
mov
jmp
out
arpl
or
stc
dec
ret
jp
inc
mov
jb
mov
add
pop
add
ss
sahf
xor
fsubrs
ja
flds
dec
call
cmp
jle
cwtl
test
ror
mov
adc
out
in
aad
sbb
call
jp
loop
popa
and
shll
and
and
inc
repz
cmc
fbld
push
imulb
jbe
dec
adc
les
xor
inc
sub
mov
loope
add
mov
jno
jb
sub
movsb
out
rcll
iret
rcr
lods
cmp
insl
xchg
dec
pop
daa
or
ret
fidivrl
xchg
mov
cld
out
mov
lahf
and
xor
jne
loop
std
sub
jno
pop
pop
adc
movsl
mov
lea
lcall
xor
ss
enter
inc
cmp
repz
and
mov
mov
push
ret
adc
or
aam
loopne
inc
xchg
int
iret
test
add
lock
adc
push
pop
cs
js
mov
pop
cmp
add
xchg
iret
addr16
xchg
cmpsb
jae
in
ret
jae
shl
scas
mov
xchg
cmp
orl
adc
aam
in
xchg
push
xor
mov
fs
outsl
add
mov
push
pop
inc
jp
lret
fyl2xp1
jno
fstpt
in
pop
cs
mov
and
fcomip
lock
lret
loope
dec
sbb
xchg
adc
cmp
gs
enter
aaa
mov
jle
cmpsb
in
push
push
test
push
mov
ret
sub
or
pop
mov
jae
dec
test
jl,pt
shrl
jle
dec
xor
xchg
inc
mov
mov
jmp
add
push
insl
push
xchg
cmp
insb
inc
push
sub
mov
xor
pop
imul
fcmovu
into
sbb
pop
test
jnp
pop
pop
xor
sub
out
adc
rorb
fadds
ret
jno
int
lret
pop
in
fdivl
or
sbb
lahf
ja
push
cmc
cmp
nop
movsb
fwait
out
xlat
mov
and
test
or
sbb
mov
and
adc
fdecstp
xor
lea
xchg
imul
mov
hlt
jg
mull
pusha
rorl
cli
icebp
sbb
rep
pop
popf
adc
mov
dec
enter
movsl
or
push
or
cmp
jb
fsqrt
fsubrl
push
pop
into
lods
addb
and
sbb
xor
add
aad
sub
cmp
inc
test
cmc
sahf
push
movsb
dec
daa
mov
dec
stc
fmuls
out
cmpsb
cmp
popa
add
lock
inc
aam
sbb
xchg
jae
dec
loopne
mov
addl
mov
or
xchg
fidivrl
adc
cld
stc
es
mov
pusha
inc
stos
dec
data16
adc
push
mov
ds
pop
inc
loop
push
ds
inc
fbstp
std
cwtl
leave
nop
jmp
cli
out
outsb
repnz
aas
sbb
cmp
iret
mov
push
notb
pop
out
rcr
mov
sbbl
sbb
xor
lcall
push
mov
jge
scas
cmc
popa
mov
or
inc
scas
imul
cwtl
dec
imul
push
aas
xchg
dec
pusha
jge
int3
cwtl
nop
mov
pop
jg
je
adc
pusha
cmc
xor
inc
cmpsb
and
dec
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
or
sahf
gs
mov
mov
cmp
push
jl
or
fnstcw
popf
scas
push
pop
inc
inc
mov
push
pop
jl
pop
sbb
cld
inc
jp
clc
ret
popf
xchg
xchg
sbb
insl
xor
add
mov
les
aaa
inc
icebp
push
fldl
es
sub
lea
pop
dec
pusha
cmpsl
inc
icebp
pop
dec
insb
ret
push
and
ds
push
lock
sub
jmp
push
xchg
fiaddl
pop
sbb
inc
pop
adc
lods
fwait
loope
or
fsubrl
popf
xor
shll
scas
sti
lahf
rolb
dec
xchg
cwtl
add
xchg
push
inc
add
adc
fdivrl
stos
lea
stos
inc
fsubp
adc
test
pop
xor
imull
push
fsub
in
cmp
hlt
push
dec
stc
jl
xchg
cmp
push
movsb
add
push
push
fisubl
sub
rclb
aam
cmp
jne
std
and
and
frstor
sbb
arpl
in
cltd
testl
xchg
das
out
push
and
xlat
or
push
jns
fcomp
das
cmpsb
mov
and
inc
imul
jmp
sbb
push
mov
xlat
loopne
testl
cmc
das
push
int3
in
mov
imul
inc
push
xchg
sarl
inc
push
mov
mov
or
outsl
lock
shll
cs
xor
incl
movsl
icebp
adc
imulb
xchg
sub
lea
test
push
pop
mov
or
adc
push
out
and
arpl
or
xchg
ret
sbb
sbb
std
inc
jb
inc
roll
jne
jmp
xchg
loope
sub
mov
inc
jmp
dec
mov
lcall
je
pop
jo
jnp
imul
dec
cmp
rorb
rcll
aaa
das
push
xchg
bound
cmpsb
into
add
sbb
mov
mov
pop
ja
lods
xchg
pop
movntps
cmpsb
mov
hlt
add
int
scas
out
sub
add
add
jns
pop
sbb
xor
fcompl
xchg
xor
int
push
mov
jae
adc
in
pop
cmp
and
xchg
cmp
mov
pop
or
dec
fstp
je
idivb
jecxz
imul
mov
sub
cwtl
repz
cmp
or
outsb
xchg
rcrl
jp
mov
push
adc
and
idivb
fcomps
mov
int
mov
sarl
xchg
pop
pop
jp
scas
gs
out
inc
inc
xchg
int
daa
pop
nop
dec
fcmovbe
into
fcomps
sub
in
mov
and
mov
into
add
add
std
mov
js
cmpsl
ffree
mov
jle
sbb
aas
and
shl
cmp
xor
or
jb
xchg
imul
add
in
repnz
repz
push
mov
orb
xchg
lret
dec
rcr
or
cmp
out
xchg
sbb
gs
arpl
mov
dec
cmc
imul
insb
lcall
cmpsb
test
xchg
dec
mov
out
into
stos
arpl
mov
xchg
mov
sbb
and
pop
mov
push
into
jp
pushf
mov
mov
test
inc
push
xchg
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
rorl
dec
sahf
cmp
mov
mov
mov
add
pushf
ficompl
cmp
cmc
arpl
xchg
push
bound
push
test
dec
fs
pop
rcrl
jecxz
push
and
pop
lahf
cwtl
add
in
or
lea
fwait
add
mov
repnz
loop
jbe
aaa
xchg
sbb
int
movzbl
mov
addb
mov
sub
dec
test
mov
fs
dec
xchg
jne
outsl
pop
loope
imul
sbb
jne
stos
jnp
dec
bnd
in
xchg
xchg
ja
dec
mov
adc
xor
sub
sbb
lods
test
push
inc
shrb
sahf
movsl
iret
pop
jp
ficomps
sbb
add
inc
and
mov
inc
daa
addr16
pushf
scas
ss
out
jl
in
dec
jns
cltd
pop
loop
lret
aaa
cwtl
mov
mov
adc
xor
dec
or
mov
pusha
sub
clc
xchg
mov
cmp
sbb
rorb
shrl
xor
cmp
icebp
and
or
jb
insb
sarl
and
xor
and
in
rcl
mov
and
adc
adc
movl
daa
mov
in
in
lcall
jne
cmp
daa
cmpsl
dec
add
fists
lret
leave
aad
lret
inc
xchg
pop
or
loope
dec
lcall
and
mov
add
push
aas
push
mov
insl
stc
cmc
outsb
jle
mov
je
pop
dec
mov
subb
pop
inc
cltd
jno
lahf
in
out
fwait
scas
in
jp
jns
sbb
or
cs
mov
pop
mov
jp
mov
inc
mov
xor
fdivrs
or
pop
dec
cmp
pop
xor
pop
shufps
cmc
sub
enter
test
inc
push
pop
in
scas
addr16
hlt
cld
filds
inc
popf
xor
das
sub
mov
sahf
mov
push
sbb
or
leave
stc
movsl
jle
shrl
shr
inc
jmp
inc
push
add
add
and
hlt
mov
adc
mov
imul
lods
scas
ds
push
adc
push
add
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
push
xchg
cld
mov
mov
xor
out
mov
push
dec
arpl
in
leave
call
jle
sbb
leave
dec
insb
cltd
dec
in
imul
ljmp
and
gs
jp
in
sub
enter
sbbb
mov
and
sbb
jno
xchg
push
mov
scas
das
mov
nop
scas
cmp
jae
push
add
dec
mov
mov
ficompl
hlt
xchg
sub
cmp
pop
mov
xor
dec
aad
andl
popf
xor
loop
loope
loopne
mov
addl
fstpl
in
sbb
dec
std
inc
call
inc
movsb
xchg
sbb
aaa
lret
push
hlt
sub
sub
pop
das
fadds
push
mov
xchg
out
mov
cmc
call
rcrl
pop
dec
cmpsb
push
popa
add
xor
jecxz
insb
nop
pop
icebp
jmp
sbb
nop
pop
aas
inc
pop
jg
pop
fists
pop
pop
sahf
mov
outsb
cmp
idivl
xchg
mov
pop
and
push
sub
sub
and
cmp
mov
stos
stos
mov
test
adc
and
cltd
jns
xchg
imul
pop
xor
int
hlt
sti
js
rorl
stos
int3
xlat
in
cmpsb
test
sbb
or
fwait
and
cmp
cmp
inc
ss
dec
sbb
xor
push
dec
mov
push
pop
push
jae
adc
pushf
cmp
faddl
popa
inc
jg
xchg
rclb
xchg
dec
in
jp
and
dec
push
xor
lods
xlat
faddl
xor
loop
lahf
sbb
dec
lock
xor
dec
leave
sbb
lcall
mov
decb
mov
fwait
or
mov
shl
dec
adc
or
gs
xor
mov
dec
ljmp
ret
pusha
int3
dec
mov
xchg
add
bound
ja
sub
lea
in
imul
in
scas
lcall
jmp
sti
jb
sub
into
and
rep
lret
add
or
xchg
jo
ljmp
push
xor
add
inc
in
jge
add
inc
call
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
xchg
or
icebp
add
mov
add
ja
mov
ret
jns
es
inc
in
mov
fninit
fdivr
jno
sub
lds
mov
xlat
xchg
push
dec
insl
jecxz
sub
ficomps
hlt
inc
rorl
mov
xor
add
add
ja
cmc
pop
divl
ss
cmpsb
inc
mov
call
inc
xchg
sub
inc
clc
adc
inc
mov
out
fildl
and
dec
adc
mov
inc
sbb
stc
loop
jae
add
jp
mov
jo
aas
push
adc
cltd
inc
xor
mov
out
push
jecxz
lret
das
xchg
icebp
cmp
inc
pop
aad
adc
data16
sbb
push
loope
and
shll
in
lahf
adc
frstor
mov
inc
sub
add
and
sbb
sarl
fcomps
pushf
testb
jl
movsb
adc
pushf
xor
out
xor
pop
mov
pusha
pop
cmp
stc
inc
call
hlt
inc
lcall
lods
shll
mov
imull
push
pop
sbb
mov
repz
aad
cmp
or
mov
insb
sbb
xor
mov
int3
jno
xchg
ljmp
jg
pop
ret
cltd
push
daa
les
sub
fstl
inc
and
mov
add
add
fwait
push
fdivl
ljmp
aaa
cmpsb
xchg
gs
scas
sahf
bound
daa
xor
push
jle
sahf
mov
lahf
mov
xchg
aas
cmp
pop
jecxz
fldenv
mov
fimull
sbb
push
dec
insl
jmp
or
popf
lds
jecxz
push
loopne
pop
dec
mov
into
cmp
clc
and
sti
popa
pop
fadd
int
or
leave
mov
sub
les
add
idivl
cmc
movsl
push
inc
shr
lret
inc
stos
push
cmp
mov
and
repz
jbe
mov
sbb
orl
jmp
jmp
sbb
int3
popa
push
movsl
mov
add
sbb
enter
loop
aaa
rol
push
inc
jl
or
jae
and
push
imul
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fstp
inc
ror
push
mov
mov
es
data16
xchg
mov
add
adc
inc
out
mov
js
jmp
out
mov
mov
in
push
in
mov
dec
mov
push
lahf
testb
movsl
rorb
ja
iret
xchg
aaa
in
das
jno
push
mov
adc
xor
aad
adcl
mov
gs
dec
and
mov
mov
cli
icebp
imul
sbb
clc
lret
imul
dec
rorb
or
or
mov
xchg
push
xchg
and
sbb
dec
mov
xor
push
cmpsb
dec
push
cmp
movsb
bnd
push
fldl
cmp
dec
add
mov
ja
outsb
iret
fwait
pop
bound
mov
mov
and
jecxz
and
loopne
xor
ja
fstpt
cmpsl
push
std
adc
popa
dec
mov
pop
fmull
pushf
xor
aas
add
lret
xor
xor
addr16
mov
insb
out
pop
outsb
cld
test
inc
and
pusha
stc
mov
mov
test
into
cmpb
loope
stc
jnp
xor
xor
xor
repnz
icebp
dec
fisttpll
dec
nop
jecxz
sahf
inc
pop
jle
xor
inc
mov
pop
add
mov
or
loop
cmpsb
stos
jno
movb
jle
pushf
aad
jge
sub
pop
sbb
stos
inc
sub
shl
sbb
repnz
shlb
cltd
push
jno
jmp
pop
popf
or
outsb
xchg
pop
adc
cmpsl
fbstp
jo
outsb
pushf
jbe
add
cs
jb
dec
jecxz
push
jecxz
and
ret
adc
cmpb
mov
adc
ret
pop
jle
xor
fildll
or
cmp
and
cmp
cmp
outsb
orb
xchg
outsb
outsb
dec
xor
add
jle
add
in
mov
lods
les
or
and
aas
imul
sbb
aam
repnz
ret
mov
fistpll
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
les
mov
mov
pop
aas
fsubr
jmp
pop
sbb
cmpsb
cmovs
mov
pop
pop
dec
cmp
xchg
add
and
sub
stos
push
ficoms
call
maxps
fsubrl
rcrb
icebp
adc
jg
dec
fcoms
xchg
movsl
mov
cmpsb
xor
fldenv
aad
mov
mov
cmp
shlb
xor
sahf
test
dec
ja
repnz
ret
pop
xchg
fcoml
push
dec
add
mov
adc
sbb
ret
mov
sbb
outsl
sbb
pop
xchg
or
stos
gs
mov
movl
outsl
inc
cmp
testb
lock
lock
out
enter
lret
sub
leave
mov
scas
stos
aaa
jecxz
push
sub
repz
adc
data16
cmp
mov
pop
add
cmp
dec
arpl
call
push
insb
aas
sub
mov
int3
xor
pop
fwait
js
out
adc
xor
loopne
mov
or
xchg
pop
es
or
cmp
or
lods
out
xchg
aaa
dec
and
mov
loop
sub
ss
lahf
fimull
ss
mov
cmp
aaa
dec
jns
iret
dec
lods
inc
xchg
aaa
fcomps
ljmp
xor
xor
xchg
add
test
lea
arpl
fadds
movsl
jle
xor
pusha
in
jl
nop
xor
jbe
pop
push
push
add
sarl
mov
icebp
mov
fmul
fld1
xor
and
stos
cmp
cmp
call
jp
cmc
test
jl
es
xchg
lock
lret
sahf
mov
into
mul
aad
fsts
flds
rclb
sarb
and
mov
pop
inc
push
sbb
dec
out
jg
sbb
xchg
popa
sub
enter
dec
gs
sub
mov
insl
popf
aam
gs
lods
or
cli
sub
cs
fdivrl
adc
lods
ja
pushf
cld
jge
push
or
addb
das
jae
jb
fadd
cmp
mov
test
and
lock
loop
mov
pop
push
dec
stos
fsubl
sub
xchg
xchg
dec
enter
adc
lcall
sahf
mov
aam
shr
imul
push
or
hlt
mov
push
shll
dec
pop
sub
sbb
test
xchg
add
or
lcall
bound
jmp
add
lea
es
insb
mov
fisttps
xchg
mov
jl
test
cmp
add
xchg
add
push
sahf
inc
adcl
cltd
mov
sbb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
sbb
pushf
jecxz
adc
mov
xchg
aad
loope
mov
lcall
jno
fdivr
imul
int3
and
adc
adc
add
fs
fs
cmp
add
push
xchg
inc
pop
popf
test
insb
in
fmuls
inc
mov
or
mov
or
pop
pushf
dec
cmp
and
call
inc
xor
and
xor
movsl
mov
fcoml
lret
call
mul
and
cmpsl
lods
sarl
sbb
mov
sbb
mov
sub
mov
dec
cs
fists
gs
test
insb
sub
mov
aad
repz
push
popa
ja
imul
repz
and
mov
stos
int3
sub
call
cmp
xor
sarb
cmc
inc
push
rcrl
icebp
mov
jmp
mov
cmc
dec
dec
incl
pop
jmp
adc
sti
outsl
mov
mov
cmpsl
out
inc
clc
xchg
sub
xor
and
mov
nop
inc
movsl
sbb
add
inc
je
inc
imul
dec
stc
add
outsb
sub
dec
add
jo
dec
or
add
jbe
std
outsl
insl
fmulp
rcrb
add
xchg
cmpsl
mov
xor
fnstsw
add
push
ja
sbb
test
add
fiaddl
mov
mov
leave
adc
das
cltd
mov
out
push
push
vpcomw
dec
inc
loop
inc
and
out
sbb
outsb
mov
push
fdecstp
jle
sbb
pop
mov
push
les
xchg
addb
sti
jbe
iret
and
rorl
dec
mov
inc
push
jp
xorb
pop
std
negb
mov
jo
cwtl
sahf
mov
rcll
jecxz
fnstsw
push
inc
pop
flds
out
mov
das
fwait
stos
pop
mov
sahf
outsb
mov
mov
and
sti
mov
fwait
adc
stos
add
jecxz
insb
movsb
and
pop
pop
inc
lret
adc
push
aas
push
insl
mov
std
aam
jns
push
repnz
lcall
cmc
mov
jns
pop
orb
sub
xor
leave
lods
nop
mov
or
es
jae
pop
scas
mov
xor
mov
or
jb
rol
push
sub
cltd
add
sub
or
iret
outsl
push
cmp
xor
jne
mov
loopne
mov
xchg
push
xor
inc
xchg
ja
mov
in
add
cmp
aad
call
pop
xlat
pop
cmp
pop
je
pushf
lods
jo
xor
pop
outsl
jecxz
jne
mov
sub
sbb
shlb
push
lock
jecxz
xor
add
movsl
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
xor
xor
mov
mov
push
fsubs
mov
and
int
aaa
jge
iret
and
lahf
dec
push
xchg
icebp
dec
iret
or
add
xor
adc
mov
mov
push
lcall
xor
jne
insb
and
add
sub
adc
lea
and
cld
fdivrs
inc
mov
cmp
fstps
mov
pop
pop
addr16
rolb
jo
pop
fldcw
cltd
cltd
int
xchg
push
mov
sub
xlat
in
test
inc
pop
insb
push
lods
lahf
push
add
mov
push
or
stos
pop
das
imul
or
lcall
mov
pop
cmpsb
loope
insb
jne
pop
push
mov
das
out
cmp
loopne
fidivrl
jbe
shrb
stc
test
add
jb
inc
into
push
adc
pop
xchg
mov
and
pop
enter
cld
mov
sub
loopne
lods
add
repnz
add
inc
pop
xchg
idivb
lret
fwait
ss
mov
sbb
pop
cli
cld
dec
adc
lods
icebp
push
es
je
int
lea
jno
xchg
sti
out
sarl
stc
cmp
fisubrs
daa
test
dec
adc
pop
mov
int3
mov
test
dec
addr16
or
sbb
xchg
in
add
xchg
xchg
enter
test
inc
in
xor
push
sbb
push
sti
inc
out
int3
out
popa
sub
dec
lret
cli
fmulp
mov
xchg
call
fs
scas
mov
sub
or
icebp
inc
sub
dec
cwtd
push
std
roll
cmp
push
insl
jg
repz
pop
into
sbb
scas
loope
loopne
cs
std
mov
sbbb
dec
nop
sbb
jg
inc
daa
xchg
fiadds
or
test
shll
mov
mov
adc
pop
jnp
mov
xchg
add
dec
test
pop
popl
lock
ja
cmovb
push
or
xchg
xor
add
jae
cmp
and
push
jp
inc
leave
imull
in
lret
cmp
or
fisubs
cmp
loopne
cmc
pop
cmp
inc
push
scas
add
cmc
sti
sbb
and
int3
pop
scas
sub
icebp
fimull
out
push
dec
mov
adc
adc
fistps
fdivr
data16
daa
mov
out
lds
xchg
jnp
xchg
inc
xchg
push
push
popf
stos
incb
mov
mov
roll
jns
push
insl
test
ja
and
fiadds
mov
jne
leave
add
adc
movsb
sbb
hlt
pop
jmp
push
addr16
fidivrs
add
xchg
dec
sbb
hlt
out
jae
and
outsl
dec
das
pop
sub
mov
push
mov
cmp
push
arpl
imul
lahf
loope
xchg
and
lods
fidivl
stc
je
outsl
pop
lret
cld
jg
lock
push
lds
int3
cld
out
into
lods
ficoms
popf
xor
leave
jl
pop
sbb
dec
inc
inc
out
sub
or
cmp
mov
sarl
pop
leave
inc
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
jmp
and
pop
push
mov
mov
shll
rclb
push
and
outsl
loopne
pusha
cmp
adc
mov
in
push
cltd
stos
shrl
pop
add
mov
pop
clc
fistl
fs
sahf
jp
ds
and
out
xchg
pop
dec
inc
sti
lret
rolb
std
ljmp
dec
mov
rorb
mov
xchg
std
sbb
rcr
divb
push
lea
popa
cltd
dec
lods
stos
leave
or
sti
push
in
sbb
enter
and
cmp
pop
dec
sahf
fwait
leave
push
push
inc
aas
mov
mov
rcll
outsb
out
mov
sbb
jbe
cmp
dec
aaa
mov
sbb
or
shlb
je
mov
out
mov
mov
push
cmpsl
push
xor
and
not
insb
sbb
adc
fldt
add
push
scas
adc
out
outsl
fstl
popaw
fs
lea
mov
sbb
dec
inc
fmulp
fs
sbb
sub
add
xor
sub
mov
test
ret
pop
inc
pop
scas
ds
adc
sahf
loope
xchg
pop
sub
into
lock
imul
mov
inc
inc
and
in
push
fidivrl
add
xchg
lock
xor
lds
or
out
js
dec
jecxz
cmp
cmpsl
out
aaa
or
push
xor
imul
inc
aaa
pop
inc
mov
mov
rcll
pop
scas
out
sbb
cmc
pop
ret
lods
loope
jp
xchg
mov
or
les
and
pop
mov
adc
mov
and
fwait
xchg
adc
jne
call
mulb
idivb
inc
dec
stos
test
lret
sbb
push
popf
shrb
shl
leave
xchg
mov
jns
cmp
add
mov
iret
insl
pop
xorb
lret
je
mov
sbb
inc
out
pop
and
fistps
mov
jp
inc
adc
inc
adc
mov
leave
ja
sub
aam
dec
jae
and
cmp
lods
and
stos
dec
pop
mov
pop
stos
add
xchg
mov
stc
movsb
sub
mov
ss
sub
adc
push
push
mov
fmull
xchg
outsb
adc
xchg
mov
and
sbbl
ficompl
ds
mov
pop
mov
scas
xchg
inc
xchg
cmp
mov
adc
dec
int3
shl
push
aam
dec
in
push
sti
dec
repz
jmp
jno
jl
mov
lea
inc
ffree
adc
and
test
add
pop
add
insb
and
mov
test
dec
and
pop
gs
insb
dec
and
mov
xchg
pop
sub
adc
sti
std
push
jmp
icebp
sub
js
inc
sub
jg
mov
popl
pushf
iret
mov
pop
or
aam
fmull
or
leave
pusha
push
andb
cmp
jl
outsb
out
repz
dec
jl
aas
sbb
loope
adc
call
xchg
stos
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
enter
jge
mov
mov
sbb
fstpt
mov
mov
dec
cmp
adc
test
jb
pop
fistpl
jl
sub
cwtl
test
adcl
push
pusha
aad
mov
adc
enter
in
std
lds
sub
inc
cli
sbb
lds
mov
call
jbe
cmp
inc
lea
in
sahf
lahf
fcoml
cmp
pop
mov
insl
in
int3
mov
inc
mov
pop
sub
add
push
push
cmc
mov
xchg
sbb
xchg
mov
jbe
pop
xchg
pushf
sbb
mov
mov
xor
jge
ret
loope
fcompp
jae
in
mov
adc
repnz
outsl
xchg
mov
mov
and
out
cmp
leave
and
movsb
pop
filds
out
imul
in
xor
leave
mov
loopne
leave
fs
repnz
rclb
outsb
test
in
mov
lcall
out
das
inc
gs
in
pop
mov
iret
filds
aad
xor
sahf
push
dec
subl
xchg
adc
cmovo
mov
pushf
jmp
xchg
int
mov
out
xor
inc
lcall
sbb
sbb
mov
stos
xchg
add
ljmp
or
push
out
dec
sub
cmc
xchg
jecxz
arpl
stos
lea
cmp
cmp
mov
cmpsl
xchg
and
test
loop
std
clc
xchg
adc
dec
addr16
and
xchg
lret
test
push
insb
sbb
cmp
cltd
push
cld
aaa
ret
aam
and
loope
test
push
xchg
call
out
jne
inc
test
cli
in
sub
sbb
ret
sub
insl
cwtl
stc
out
dec
pop
das
xorb
movsl
jo
pusha
mov
addl
inc
stos
shll
test
mov
xchg
sub
popa
mov
and
fdivs
jge
or
inc
lea
xlat
cmp
repnz
mov
xlat
push
in
les
sub
xor
int
inc
and
adc
icebp
add
mov
jmp
dec
scas
mov
cwtl
icebp
data16
push
data16
mov
inc
adc
aas
test
clc
pop
aaa
fildll
xor
aad
hlt
pop
sbb
dec
mov
jle
rcr
cmp
scas
scas
dec
xchg
pop
lea
popa
xor
inc
or
mov
cmp
jnp
loope
and
dec
pop
push
add
xorb
pop
insb
fs
inc
das
fimull
leave
inc
sbb
adc
shlb
and
jbe
inc
adc
lret
cmp
fistpl
mov
sub
pusha
adc
out
or
inc
sbb
mov
cmp
pushf
mov
push
test
rorl
pmulhw
test
aaa
insl
add
cli
pop
xor
mov
xchg
daa
push
call
push
or
fcmovnb
cwtl
int
sub
pop
out
add
arpl
fwait
int3
mov
loopne
cltd
movsb
jp
cmp
out
cmp
cli
int3
loope
inc
sbb
xchg
sub
cmpsb
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
pop
stos
jecxz
sub
mov
popf
push
js
pop
sbb
mov
inc
mov
mov
and
insl
xchg
aas
xchg
jl
adcb
sub
movl
ret
mov
insb
in
sbb
mov
jle
out
inc
mov
jp
xor
push
stos
es
sbb
fnstenv
push
add
out
cmp
xor
jo
pop
clc
insb
push
sub
adc
outsb
cld
push
xchg
and
jl
cmp
jo
test
inc
rcrl
fndisi(8087
mov
push
stos
enter
mov
in
jns
inc
mov
ret
jne
sub
sub
mov
rcrb
pop
pop
cwtl
xor
addr16
or
dec
dec
in
mov
arpl
sub
mov
call
add
imul
es
in
loope
pusha
les
inc
mov
popf
inc
movsb
jne,pt
jge
add
fs
adc
punpcklwd
push
inc
rcr
subb
jns
fwait
mov
sub
data16
leave
das
mov
mov
testb
adc
lds
pop
cmp
xchg
push
dec
mov
icebp
aaa
icebp
pop
adc
dec
mov
mov
cli
subl
out
test
pop
xchg
das
loope
inc
sbb
imul
mov
sbb
sub
jnp
cmp
dec
sbb
mov
cmpsl
xchg
outsb
imul
cmp
cmpsl
mov
sub
and
dec
push
sub
sbb
cmp
lret
sbb
or
adc
iret
jne
sbb
mov
or
das
mov
stos
xchg
mov
jecxz
popf
out
movsl
push
lea
push
ja
jne
mov
mov
shlb
outsl
sub
or
ret
addl
add
xor
inc
int
aaa
push
lods
aas
in
dec
and
cmpsl
jge
dec
mov
fdivr
xlat
sub
movsb
lahf
roll
lahf
in
ds
fcomps
jno
std
inc
xor
dec
cmp
aaa
enter
int
imulb
stos
fnsave
adc
loop
aad
mov
stc
or
repnz
out
test
or
mov
mov
xchg
sbb
or
add
mov
popa
jno
icebp
push
out
add
xchg
gs
int3
jb
cmp
xor
cmp
and
inc
jnp
adc
orb
and
cmpsb
popf
sbb
xor
and
mov
sahf
jecxz
jbe
cs
pop
add
incb
lahf
cmp
ror
jmp
mov
and
adc
outsl
fildll
dec
lret
dec
xchg
mov
add
xchg
scas
adc
aaa
arpl
rdmsr
adc
repz
xchg
xchg
testl
or
or
jne
and
movsb
popa
ljmp
sbb
xchg
addr16
rorb
push
pop
das
or
mov
push
popa
inc
cmpsl
cs
lahf
shrb
cs
data16
loopne
ljmp
mov
mov
fisubl
icebp
lods
mov
and
jns
mov
cld
fidivrs
cmc
dec
int
das
mov
push
jge
adc
out
sub
mov
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
xor
or
xor
mov
inc
pop
mov
shll
pop
sbb
cmpsl
mov
xchg
or
and
jne
sub
ret
and
mov
xorl
xchg
adc
rcl
xchg
pusha
add
xchg
sti
add
mov
fcmovu
xor
ja,pn
cmc
in
cmp
jne
adc
aad
mov
je
or
dec
clc
in
mov
insl
cmp
rol
pop
into
mov
xor
aad
cmp
leave
loop
pop
test
out
xlat
int3
sub
push
loope
sbb
sbb
cmc
notb
inc
stos
std
inc
mov
push
sub
sbb
dec
or
mov
cs
rorb
clc
xchg
mov
inc
js
and
xor
cmp
fisttpll
push
mov
outsb
test
outsl
cmp
cwtl
sarb
push
add
mov
ficoms
sahf
or
fisubrl
aas
stos
ds
mov
cmc
imul
push
mov
pmulhuw
insl
dec
xchg
out
mov
out
fstps
and
pop
sub
sbbb
icebp
data16
fwait
sbb
lock
pop
imul
cmp
cli
cmp
mov
pop
test
add
js
test
dec
sbb
sbb
pop
fwait
jecxz
or
lods
insl
xor
idivl
cs
xchg
insl
es
fs
sbb
add
inc
out
xor
in
inc
and
mov
fisubs
jp
inc
test
into
mov
pop
mov
inc
xchg
ficomps
fiaddl
dec
sbb
pop
gs
in
jmp
pop
push
int3
orl
xor
mov
add
xor
pop
shrl
sahf
dec
insb
add
imul
sub
cmp
in
inc
or
enter
mov
xchg
call
int
hlt
mov
xchg
jmp
push
jge
cmp
pop
mov
add
xchg
daa
out
mov
cld
bound
les
add
sub
mov
mov
ss
ja
xlat
fists
cwtl
mov
jp
stos
aam
out
repnz
adc
pop
fcmovu
mov
and
iret
xchg
mov
loop
jns
test
mov
pop
lahf
jecxz
ret
int3
dec
xchg
mov
jbe
aaa
pop
gs
pop
lds
jmp
fsubrl
cmpsl
push
aaa
int
lcall
popa
imul
push
mov
shlb
iret
pop
adc
jp
jne
in
inc
lds
sbb
mov
pop
movups
push
pop
push
pop
add
fidivrl
mov
add
sub
aas
outsb
add
mov
cmpsb
mov
sbb
pop
adc
lods
fdivrs
fs
push
insl
mov
ret
lods
rcrl
repnz
and
or
je
mov
lcall
sbb
cwtl
sti
in
clc
adc
mov
in
cmc
sarb
jb
rdmsr
xor
loope
lahf
pop
jecxz
lods
nop
outsb
and
add
lods
adc
cld
ljmp
imul
xor
lret
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fisttpll
ret
iret
out
cmp
mov
aad
rol
mov
dec
adc
hlt
mov
jo
and
xorl
sbb
mov
cmc
and
mov
je
cltd
mov
mov
mov
mov
and
popa
aam
lods
andl
test
in
in
mov
stc
inc
je
fs
mov
and
adcl
sbb
ljmp
sub
aaa
outsb
jbe
dec
jecxz
fidivs
stc
mov
and
add
ja
dec
dec
cmp
ss
lret
fwait
mov
xchg
mov
sti
mov
pushf
inc
sbb
repz
sub
sub
lcall
mov
add
or
mov
jmp
jmp
mov
pop
sub
lods
pop
clc
dec
add
scas
adcb
pop
out
int3
decb
sbb
sbb
mov
push
insl
outsl
testl
aaa
movsb
pusha
mov
mov
mov
inc
mov
adc
cmpsl
shr
les
mov
in
popf
and
jecxz
adc
lds
xchg
dec
ljmp
rol
and
mov
sti
mov
dec
sti
or
icebp
xchg
leave
pop
xlat
pmovmskb
int3
push
inc
cvttss2si
jle
mov
ret
out
xorb
add
mov
mov
and
in
pop
and
push
ficoms
xor
dec
adc
pop
mov
outsb
mov
cmc
aam
mov
jle
inc
insl
jo
jbe
push
mov
xor
popf
cmp
and
mov
daa
pop
repz
fcomps
das
jae
pusha
push
in
idivb
or
pop
movsw
mov
jnp
adc
fdivr
mov
gs
and
out
mov
roll
lods
fstl
lret
add
bound
push
sub
fwait
sbb
and
adc
popa
mov
int3
push
orl
test
lcall
dec
popf
mov
push
push
dec
mov
dec
cmp
sbb
cmpsb
mov
cmp
mov
push
mov
xchg
ds
outsl
imul
ret
jb
fbld
movsl
stos
pop
push
addr16
jns
sbb
xor
cmpsb
sbb
xlat
in
sbb
int3
mov
pop
stos
and
xor
xor
jo
xchg
mov
data16
ror
xor
scas
pop
and
outsb
mov
xor
and
sub
dec
in
pusha
test
repnz
push
cld
lds
lcall
sub
pop
pop
push
xor
inc
xchg
xchg
push
lods
rclw
into
jae
leave
fwait
inc
add
popf
out
mov
in
ds
stc
xchg
inc
xchg
lods
insb
mov
lods
or
sbb
clc
mov
sbb
adc
cmp
loop
fcmovbe
ss
jne
loop
call
inc
sub
test
in
xchg
cltd
jg
cld
mov
push
jns
and
xchg
fisubrs
aas
cmp
jmp
mov
sub
and
add
aad
sub
ds
sbb
inc
pop
rcrl
das
test
xchg
push
mov
cs
dec
mov
lea
lods
mov
pop
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
iret
push
inc
mov
mov
jg
sub
mov
imul
lret
jp
xor
adc
sbb
fdivs
call
push
xchg
nop
add
push
mov
test
jl
pop
jae
outsb
insb
repz
mov
sarl
aaa
add
xchg
pop
jle
or
into
in
in
cmp
jno
mov
andl
out
adc
push
out
dec
xchg
mov
xchg
ljmp
sbb
xchg
mov
xchg
or
outsb
scas
xchg
and
es
pop
jno
xchg
pop
push
adc
das
pop
dec
cwtl
in
imul
mov
xor
dec
push
dec
mov
fwait
aaa
popa
movsl
push
sarb
divl
repnz
fistl
outsb
rcll
xor
pop
andl
or
inc
shll
sti
or
dec
out
mov
sub
add
leave
ds
testb
lods
jl
pop
and
ja
sbb
rcl
negl
lea
enter
or
jecxz
imul
adc
stc
ficompl
xlat
std
mov
sarl
sub
test
mov
adc
adc
aam
rol
adc
pop
adc
or
outsl
mov
stos
in
sbbb
mov
xchg
repz
fcomps
adc
push
les
cmova
and
clc
xchg
sub
rclb
xor
xor
aad
add
and
inc
call
pop
cld
mov
cmp
jl
add
adc
cmp
sbb
mov
mov
loop
lods
mov
fcom
das
pop
push
in
dec
inc
ret
sub
pop
out
imul
lods
loop
fidivl
movq
sbb
andb
gs
jp
sub
addb
dec
lds
shll
push
ret
lods
pop
fiadds
fwait
sub
loope
pop
imul
sti
out
mov
pop
cltd
add
push
push
subl
xor
cmp
lock
adc
cmp
fs
dec
adc
dec
lods
outsb
dec
pop
dec
cmp
pop
lds
lods
adc
pop
fnstcw
hlt
jb
pop
lret
xchg
fisttpll
lahf
movsl
cld
ficoms
movsb
mov
lret
lock
sar
ds
cmc
aad
arpl
shrl
cltd
sahf
xor
mov
xchg
mov
sarb
mov
inc
cmpsb
push
push
test
mov
sub
add
or
push
in
xor
mov
jb
cltd
pop
jnp
fldt
pop
faddl
daa
cltd
rclb
mov
ja
lea
in
xchg
jmp
mov
or
hlt
xchg
fcomps
negb
in
loop
mov
loopne
ljmp
andb
loopne
das
fyl2xp1
pop
mov
mov
lcall
mov
iret
push
mov
dec
scas
adcb
test
add
sbb
int
push
pop
sub
cmp
into
in
fidivrs
add
jae
mov
add
or
mov
or
test
sti
cld
stos
jl
ret
jbe
std
outsb
adc
jmp
xchg
xor
std
mov
or
pop
push
cmp
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
sahf
psllw
mov
mov
inc
jp
lret
cld
test
sbb
pop
out
inc
push
inc
data16
sti
mov
push
cwtl
mov
in
mov
outsl
cli
push
mov
cltd
lds
sbb
add
daa
push
xchg
jecxz
rcr
aam
or
jge
ret
cwtl
js
aad
shrb
aaa
dec
mov
add
ret
xchg
test
pop
or
push
mov
ret
sti
jge
popf
out
aas
clc
sbb
sahf
out
test
sub
outsb
adc
xchg
mov
cmp
outsl
cmp
sub
mov
stos
js
mov
rcll
jne
out
cli
jb
xchg
and
lods
inc
inc
cmp
cmc
jae
ficompl
outsl
or
adc
ja
sbb
push
aas
lret
daa
xor
cs
xor
jl
imul
mov
loope
mov
or
cltd
mov
cmp
xor
pop
mov
push
arpl
loop
xlat
rcrl
push
or
dec
movsl
xchg
pop
and
add
add
adc
mov
sub
adc
mov
sbb
cmpsb
mov
mov
mov
jp
add
shrl
cmp
scas
sub
mov
cwtl
mov
push
sbb
pop
lods
movl
or
inc
leave
pop
jne
fmul
and
jns
xchg
test
pushf
jno
push
fs
sub
xor
mov
adc
into
cs
adc
mov
inc
or
sti
flds
pop
ret
mov
pop
inc
insb
inc
inc
cli
syscall
fistps
inc
insb
mov
das
add
jp
add
bound
pop
out
mov
sbbl
xchg
movsl
sbb
jle
sbb
add
pop
inc
addr16
jl
xor
and
push
inc
ret
mov
call
mov
fists
sbb
xchg
nop
aad
xchg
xchg
dec
mov
test
add
clc
cs
inc
movsl
addl
sub
lock
mov
add
add
movl
movl
jmp
pop
daa
fcompl
mov
aad
and
leave
movsb
or
mov
xchg
xchg
cs
or
jb
jne
sub
sbb
jl
mov
call
stos
jae
sbb
jno
ds
cli
push
test
loop
add
sub
repnz
imul
inc
js
in
pop
cltd
nop
movsl
sub
mov
lea
bound
add
mov
lds
xlat
scas
lret
cmp
loope
sub
aam
imul
adc
or
xchg
mov
push
ret
sbb
cmp
xchg
mov
add
insl
rcll
mov
mov
iret
push
mov
mov
jo
sub
test
mov
mov
sbb
into
jno
add
xchg
mov
xchg
cmp
rclb
cmp
inc
cmp
xor
jle
clc
pop
pop
shl
mov
repnz
mov
push
and
xchg
cmp
int
sub
sub
xlat
mov
xor
push
xor
mov
orb
lods
lock
sub
inc
inc
mov
push
sahf
xchg
inc
jl
addr16
popl
adc
push
and
lret
aas
xor
mov
orl
mov
cmc
out
sarl
fidivrs
push
sbb
or
adc
pop
cmpb
in
xor
xor
int3
add
inc
pop
repz
int3
xchg
ret
test
pop
pop
out
cld
adc
repnz
rcll
mov
sub
xchg
and
and
andb
add
sbb
mov
leave
test
outsl
and
mov
cld
cmp
int3
dec
jle
add
jbe
lods
pinsrw
and
and
lock
jp
sbbl
push
test
lcall
aad
js
daa
cmpsb
outsl
sbb
mov
cli
and
test
sub
xor
addr16
inc
cmp
jp
mov
inc
mov
lds
xchg
loope
aaa
xchg
ljmp
orb
inc
cs
push
sarb
mov
cmpb
pop
sbb
out
add
dec
insb
mov
pop
cmp
mov
jb
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
pop
rcll
cltd
les
ret
scas
int
rcl
cld
cmp
lcall
loope
test
pop
add
jno
and
push
sub
outsb
jae
cmp
imul
add
sub
or
inc
inc
cmp
lret
mov
filds
jo
es
sub
mov
loopne
imulb
mov
cmp
shlb
sub
sub
mov
lcall
lcall
cli
jecxz
fnstcw
cmp
jnp
scas
adc
dec
test
mov
bound
fdivl
les
loop
icebp
ss
inc
push
ret
cwtl
out
mov
add
mov
add
push
xor
shlb
out
cs
jp
out
and
pop
int3
dec
jne
mov
and
xchg
lods
pop
mov
sub
cmp
xor
mov
in
pop
stc
les
xor
cwtl
xor
popf
and
stc
mov
sahf
lds
test
mov
adcb
frstor
cmp
fdivr
fwait
xlat
rcll
add
lea
jb
ja
cltd
xchg
das
stos
sub
pop
outsb
out
imul
ret
jno
pop
and
insl
cmp
push
dec
sub
push
leave
push
add
mov
loopne
dec
lret
push
fs
cmp
icebp
cmp
inc
jbe
mov
push
xor
cmp
adc
imul
imul
xchg
add
lret
sbb
test
cmpsb
repnz
les
and
jns
or
dec
xor
aas
pop
aam
aas
int3
rorb
lret
add
push
pop
pop
mov
mov
les
lds
clc
bound
in
pop
lods
sbb
out
push
mov
pop
jmp
mov
inc
xor
popa
dec
sub
pop
je
mov
mov
pop
addr16
insb
ficompl
hlt
js
add
adc
subb
pop
aaa
pop
mov
jge
leave
psrlw
lea
rcrl
adc
or
jecxz
pop
mov
cmp
repz
sbb
sbb
scas
xchg
shl
cld
cmp
inc
cmp
push
mov
sbb
hlt
fstpl
mov
mov
aas
dec
jle
dec
mov
sub
push
jae
xlat
pop
inc
xchg
adc
popf
inc
xor
mov
int
jmp
int
fstl
clc
sbb
sub
add
mov
ss
jb
rcrl
sbb
jl
add
andl
adc
cmp
xchg
sub
stos
mov
adc
xor
xchg
in
or
add
roll
fnstenv
pop
jg
mov
xlat
mov
fstpt
lods
fisttpll
cltd
ss
es
mov
pushf
test
in
or
sbb
fsubrp
mov
mov
or
push
aam
mov
xchg
jae
test
add
xlat
xchg
push
lcall
fists
shrl
les
jg
in
ss
jp
xor
pushf
out
std
push
mov
xchg
pop
and
xchg
or
scas
xchg
iret
gs
je
cld
sbb
add
repz
fisubl
pop
mov
outsb
icebp
xchg
js
js
jns
test
cmp
inc
test
dec
cltd
movsl
dec
clc
pop
push
inc
test
test
cmp
dec
jae
xchg
icebp
sub
cmc
mov
jp
or
push
inc
xchg
int3
je
stos
es
mov
push
std
mov
xchg
loop
xor
or
stos
pop
repnz
subb
jno
jl
or
out
jmp
ds
icebp
dec
add
push
dec
sbb
imul
pop
stos
inc
jo
fs
loopne
pop
add
dec
mov
mov
adcl
sub
lods
jo
dec
or
ror
jnp
push
mov
xchg
aas
fcomps
push
loopne
push
dec
data16
ljmp
sub
mov
and
dec
icebp
mov
add
stc
ficompl
adc
jg
xlat
jno
in
inc
lcall
inc
or
lcall
pop
das
xchg
stc
xchg
imul
std
mov
pop
loope
test
pop
test
notb
jbe
je
adc
fcoml
inc
mov
fmul
repz
sbb
mov
adc
lea
stos
add
mov
add
jge
out
xor
push
dec
gs
sahf
popa
mov
cmp
or
mov
cmc
daa
xor
aad
cmp
mov
scas
cli
inc
shrb
imul
jecxz
test
imul
lret
lods
mov
int
mov
push
pop
movsb
pop
cli
inc
movb
loope
bound
rcl
cwtl
xor
push
dec
or
mov
mov
inc
imul
shlb
mov
stos
icebp
pop
mov
or
inc
aam
out
jp
or
imul
inc
out
push
xchg
daa
mov
jno
pop
push
sbb
and
fnsetpm(287
cld
lret
fbstp
rcrl
div
lock
jae
aam
aad
add
sbb
add
pop
pop
fs
sbb
mov
fldcw
sahf
jg
inc
bound
mov
and
in
cmp
inc
dec
rorl
imul
mov
nop
fs
loop
pop
lahf
pop
lods
add
jecxz
test
inc
xchg
push
in
stos
inc
cli
lods
repnz
jno
mov
pop
jle
ficompl
mov
outsb
psubsw
pop
insb
mov
testb
les
pop
test
or
dec
out
or
mov
fidivl
outsb
mov
add
test
out
test
in
mov
sub
push
jmp
addb
sbb
cmp
stos
dec
iret
shll
aad
mov
dec
adcb
outsb
mov
fidivs
xchg
aaa
dec
ss
sbb
imull
cmp
mov
add
fwait
test
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
pop
into
iret
nop
mov
mov
fistpll
add
dec
jb
xor
sub
add
out
mov
lcall
add
sub
dec
push
jae
test
inc
mov
or
pop
loopne
dec
and
out
pop
test
dec
jle
es
movsb
dec
fsubr
or
rclb
dec
out
ds
jge
jl
sahf
and
jge
mov
xchg
dec
sahf
sub
dec
cmp
leave
frstor
sub
inc
dec
test
pushf
mov
fmull
stos
xlat
aas
fsubr
shr
and
cli
and
call
andb
xchg
pop
cmpsl
pop
ret
insb
adc
cmp
pop
jne
testl
nop
and
xchg
jb
adc
pusha
mov
sub
fcmovb
inc
lret
pop
mov
jno
sysexit
or
scas
pushf
sbb
or
divl
ss
dec
mov
cmp
nop
pop
aam
xor
jge
mov
jns
rorl
sub
subl
sbb
jne
mov
out
fdivs
iret
sub
xor
aas
lock
scas
push
inc
in
cmp
push
ficompl
out
adc
mov
cmp
inc
cwtl
mov
inc
into
and
push
xor
pop
sbb
jmp
mov
mov
push
xchg
cwtl
jp
inc
mov
xchg
jg
int
loopne
and
mul
jae
xchg
jg
push
push
shlb
ja
flds
lea
inc
ljmp
repnz
push
andl
sub
xor
add
loop
inc
dec
adc
jge
mov
lcall
push
dec
mov
out
insl
xchg
out
xchg
scas
sub
mov
and
dec
mov
xchg
shl
mov
fldl
sahf
and
push
fisttpll
ja
ffree
scas
mov
jmp
test
inc
lods
mov
add
in
aad
daa
outsl
insb
sub
xor
rcl
mov
mov
bound
jnp
dec
or
jo
inc
adc
shrb
dec
addr16
ss
xor
xor
fadds
sub
adc
push
mov
int3
leave
pop
outsb
loopne
pusha
test
ja
fidivrl
dec
mov
cwtl
mov
das
cmp
jmp
cwtl
aam
ja
ret
xchg
imul
test
jo
shl
xchg
add
or
xchg
cmpsl
cmp
adc
in
xchg
pop
sarl
adc
popa
mov
rcrl
lahf
enter
push
mov
popa
push
lea
out
inc
test
icebp
sbb
mov
fildll
cld
fisubrl
nop
sarb
add
ret
sbb
add
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
jne
jle
pop
mov
ret
jbe
lret
rorl
jp
inc
pop
mov
pop
add
cwtl
cltd
js
inc
stos
and
mov
mov
iret
hlt
ror
xor
filds
nop
cltd
loop
stos
dec
xchg
inc
sbb
pop
insl
fnsetpm(287
fstpt
xchg
xorb
add
ja
xorl
pop
sarb
dec
push
lea
mov
and
ror
js
sbb
ret
adc
inc
or
pop
xchg
mov
test
pop
sbb
fdivrl
mov
aam
inc
inc
fstpt
mov
movsb
out
das
jbe
es
pushf
adcb
mov
cmpsb
push
adcb
cmp
mov
pop
ds
pop
and
jmp
lods
sub
test
xchg
push
gs
cmpsl
push
scas
push
pushl
and
add
cmp
mov
mov
pop
xchg
fs
and
adc
lods
inc
ds
push
inc
push
out
scas
jae
push
cmpsl
shlb
stos
sub
lret
rclb
xor
repz
cmp
icebp
jno
pop
cmp
mov
inc
in
shlb
sbb
adc
cmp
aas
stc
sub
shlb
cwtl
repz
pop
mov
xor
scas
pushf
jl
pop
ja
lret
popa
xchg
dec
xchg
call
js
outsb
clc
incl
lock
mov
test
pop
insl
mov
push
mov
add
push
stos
xor
xor
mov
pusha
push
xor
mov
mov
fsubrl
loopne
ret
out
orb
sub
aad
pop
imul
inc
fmul
jne
xchg
and
push
fwait
add
fsub
or
adc
or
jo
sub
pop
adc
fdivs
scas
ds
adc
dec
imul
mov
fisubrl
data16
test
aad
es
and
jne
ret
push
ja
push
adc
scas
nop
xor
push
pushf
movsb
dec
mov
ficompl
imul
lret
and
xchg
cmpsb
xchg
mov
insb
sbb
fbstp
scas
outsl
outsl
jae
jo
in
out
std
jp
adc
sbb
cs
lds
push
mov
sub
and
jge
push
mov
inc
cmc
sbb
adc
xchg
movl
mov
fsubrl
xor
je
aaa
es
lret
pop
fstpt
push
into
lea
adc
ljmp
add
inc
push
sbb
lret
pushf
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
dec
mov
mov
mov
int
popf
mov
stc
and
cmp
scas
dec
sbb
rorb
mov
mov
aas
add
mov
jp
mov
mov
in
cmpsb
push
lds
rorl
sub
cltd
xor
xchg
cmc
sahf
add
scas
clc
mov
ljmp
andb
mov
lret
outsb
addb
cs
push
push
aam
mov
xchg
in
push
push
arpl
pop
pop
rcl
mov
add
ss
mov
insb
subb
daa
jno
lods
dec
add
shrb
mov
pop
shlb
mov
mov
sbbb
adcb
pop
add
loop
xor
outsb
xchg
sub
mov
and
icebp
cmpsb
shll
xor
decb
xor
adc
je
sub
or
in
dec
outsb
or
mov
std
adc
addr16
adc
std
push
test
lea
adc
xor
cs
orl
xchg
aaa
sti
cltd
xchg
shrl
fsubs
sub
pushf
and
shll
push
push
adc
xlat
cmp
push
testl
cltd
pop
inc
push
negl
sbb
adc
fs
fmull
leave
iret
out
daa
mov
jge
add
adc
xchg
enter
mov
leave
push
xchg
stc
pop
aaa
cmp
ds
ja
and
adc
push
ret
xor
cltd
test
mov
sub
mov
aas
repz
xchg
and
push
fildll
icebp
cmp
add
xchg
fiaddl
push
mov
nop
dec
xor
lret
fmuls
mov
ja
insb
cmpsb
js
int3
inc
lds
pop
mov
shl
adc
enter
pushf
and
ret
cmpsl
dec
imul
xor
testb
es
pop
lahf
ret
sbbl
jl
imul
add
scas
dec
mov
mov
pop
and
fcomps
jnp
mov
mov
stos
ja
xor
mov
mov
scas
mov
ficoms
inc
gs
andb
sbb
adc
mov
addr16
push
push
jb
jno
sub
or
and
jl
pop
outsb
pop
ja
sahf
gs
and
aas
push
into
cmp
call
mov
or
aas
lds
sub
add
add
push
in
jbe
les
pop
lods
fsub
cli
and
inc
in
into
push
adc
rorb
add
xchg
shrl
stc
imul
rolb
jne
push
jmp
or
sahf
shrl
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
js
pop
jb
mov
rcrb
popf
fidivl
push
cltd
and
push
add
les
mov
int
or
je
push
es
cmp
mov
enter
fwait
xlat
mov
mov
jecxz
imul
cld
add
jo
cmp
mov
xor
xchg
aas
shrb
stos
pusha
xor
mov
mov
aas
and
scas
addr16
das
or
orl
xchg
fs
and
xchg
stc
dec
inc
push
cmp
movsl
jmp
push
js
iret
mov
mov
clc
hlt
into
push
aaa
sbbb
add
les
ja
xchg
xchg
xor
fcmovnbe
pop
scas
loop
fcompl
dec
lock
subl
sahf
mov
adc
loop
shr
mov
in
dec
mov
repnz
and
mov
cmpl
scas
inc
fs
push
mov
lds
jbe
jecxz
lods
daa
dec
into
mov
jp
sbb
data16
jp
sub
push
mov
icebp
lock
sbb
add
ljmp
mov
data16
insb
movsl
mov
jns
push
push
in
push
sarb
inc
and
cmp
adc
mov
mov
addr16
dec
aam
xchg
pop
pop
imul
bound
add
jae
jmp
scas
jle
mov
iret
movsl
jo
lret
lahf
out
insb
mov
cmp
outsb
jge
adc
fisttpl
mov
pop
aad
adc
dec
rorb
fistl
pop
jo
inc
sbb
adc
add
lods
cmp
dec
movsb
sahf
scas
jnp
sub
clc
mov
in
aad
cmp
add
pop
bound
mov
adc
jge
push
xchg
cmpsl
add
jp
push
je
das
pop
push
or
push
inc
dec
cli
jecxz
sahf
gs
aas
mov
outsl
sub
jbe
add
mov
add
enter
jae
jmp
cmp
jne
movl
cmpsl
fisttpl
mov
test
mov
cwtl
cmp
lods
enter
enter
pop
shll
test
jge
push
and
mov
fisttpl
mov
add
mov
imul
iret
test
mov
inc
clc
xchg
mov
in
out
fs
das
shrl
icebp
cmp
lret
loop
sub
pop
mov
xor
xchg
rorb
call
or
cmp
notl
push
clc
xchg
ss
dec
sarb
xor
dec
mov
push
jb
inc
adc
xchg
ret
xchg
lcall
stos
fwait
sbb
mov
test
out
xchg
psrlw
cmp
aaa
outsb
xor
sbb
into
out
lea
jbe
test
and
mov
jle
mov
cld
sub
mov
xchg
jmp
shl
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
cwtl
sbb
les
lods
inc
pop
ja
cwtl
fyl2x
repz
dec
insl
rol
xor
pop
xor
std
and
pop
int3
jge
fstl
ficoml
mov
pop
int
call
adc
hlt
test
push
jg
loop
dec
icebp
inc
and
rolb
cwtl
dec
test
xchg
fwait
push
aas
inc
stos
lods
out
push
mov
pop
mov
cs
popf
les
subl
add
sub
cmp
fadds
lock
and
mov
test
dec
repz
adc
repnz
dec
push
push
jg
pop
and
cmp
mov
pushf
jg
movsb
mov
lea
loopne
xchg
jae
addl
int
loopne
fs
xchg
test
mov
fstpt
flds
insl
hlt
mov
push
dec
jns
sub
outsl
lods
ja
push
or
jg
es
xchg
and
dec
ret
pusha
push
xchg
xor
hlt
push
mov
test
mov
xchg
adc
sbb
adc
out
icebp
inc
cmp
pushf
fmull
mov
repz
or
out
xchg
xchg
push
fidivrs
stos
cmp
xchg
fxch
inc
sti
rorb
aad
out
xchg
adc
cwtl
adc
addb
loope
sub
pop
repnz
shl
add
inc
cmp
insl
ja
pop
dec
cmpsl
jae
cmp
jnp
cmp
push
iret
xchg
add
mov
je
inc
push
mov
push
std
loope
adc
cwtl
lock
mov
lret
fmuls
cmp
pop
rcrb
inc
push
lcall
call
idivl
jns
xchg
fldenv
dec
fdivrs
mov
lds
cld
sub
mov
sub
and
jle
imul
iret
xchg
imul
pushf
sub
je
addr16
fwait
and
mov
mov
in
lods
loop
sbb
push
mov
dec
mov
jnp
add
push
inc
cmp
stos
addr16
jmp
addl
pop
call
fdivrl
or
fsubl
adc
inc
xchg
sub
sbb
push
adc
fcomip
enter
or
or
lods
jmp
or
jl
mov
lea
jno
insb
inc
mov
orl
inc
mov
test
sbb
mov
data16
sahf
ret
cmp
pop
in
add
loopne
shl
and
out
sub
adc
stos
inc
push
pop
fcoms
enter
sub
xlat
fisubrl
xchg
cmpsl
or
rcr
cmp
test
scas
mov
jae
fiaddl
jns
cmp
pop
cld
inc
lods
dec
jae
sub
in
out
mov
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
sahf
rol
iret
mov
les
ret
cmp
jmp
shlb
add
out
jmp
mov
sub
sbb
stos
fstpl
mov
inc
dec
mov
std
add
mov
in
lock
in
mov
xor
jp
add
dec
cmpsl
inc
jmp
int3
test
daa
sbbb
in
mov
cmp
addr16
daa
xor
mov
add
jno
pop
push
inc
push
push
std
aaa
adc
xchg
dec
test
or
fwait
pushf
mov
xchg
mov
add
cltd
or
inc
cmp
sub
pop
insb
es
imul
cmp
or
inc
xor
ljmp
daa
jmp
mov
test
jo
sti
xor
sub
inc
xchg
xorb
xchg
jo
mov
sub
test
int
jecxz
cmp
mulb
adc
mov
clc
nop
inc
jbe
arpl
mov
cmp
add
xor
pusha
call
or
sbb
js
xchg
or
les
xlat
fwait
pusha
shlb
idivb
outsl
rorb
ret
ret
testl
dec
dec
mov
xor
sbbl
xchg
and
xchg
stos
cli
add
mov
out
divl
mov
jo
xchg
cmp
mov
mov
push
in
jecxz
clc
jb
outsl
sbbb
jl
gs
inc
int
mov
cwtl
xor
pop
mov
hlt
ficomps
push
mov
sti
cmpsb
cmp
imul
stos
movsl
mov
cmc
mov
mov
fistpll
and
ret
mov
ss
repz
jo
stc
inc
testb
mov
dec
mov
cmp
cs
jge
jle
push
mov
push
mov
cld
loopne
fdivl
sbbb
and
je
push
xchg
mov
inc
pop
sbb
les
enter
mov
clc
fwait
cmp
cmp
insb
and
test
out
fcmovnbe
rclb
mov
dec
pop
lahf
movsl
mov
xor
push
out
int3
mov
call
test
mov
sub
xor
in
loop
fildl
push
stos
add
push
mov
lea
shlb
popa
ss
cmpl
push
xchg
imul
sub
mov
divl
aas
in
pop
stos
mov
fists
dec
pop
loopne
outsl
add
mov
orb
push
js
jl
push
sub
lret
adc
test
sbb
jmp
lds
lcall
mov
mov
inc
add
mov
in
addr16
jmp
or
call
js
aas
out
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
mov
shr
xchg
mov
scas
pop
and
mov
xchg
push
xlat
xor
sub
sbb
push
bsf
pop
pop
dec
jp
push
adc
adc
in
dec
mov
lcall
nop
daa
imul
repnz
push
insb
dec
cli
ret
and
imul
mov
addr16
sub
sub
mov
xchg
sti
xchg
clc
data16
mov
stos
xlat
fisttpl
and
xor
push
adc
sub
cmpl
mov
insb
xchg
cld
enter
imul
push
adc
js
inc
out
sbb
ud0
or
pop
cmp
inc
pop
sar
push
fistpl
addb
loop
or
inc
adc
das
insl
outsb
xchg
shr
rol
adc
xor
sahf
mov
pop
mov
shll
xchg
js
std
xchg
andb
xor
cld
das
lock
cli
inc
dec
or
arpl
sbb
iret
insl
cltd
lods
outsl
gs
ds
add
sub
xor
aad
pop
push
mov
sub
jbe
pop
jmp
ds
jecxz
gs
xor
mov
pop
push
pop
cs
mov
lds
cmp
pop
leave
dec
ret
mov
sti
icebp
inc
cli
jno
xchg
push
xchg
inc
sub
mov
mov
or
xor
and
pop
enter
rcrb
dec
fdivl
jae
sbb
adc
addl
iret
push
jbe
lods
in
subl
lahf
jle
xor
sbb
jl
or
int3
jno
adc
fsubs
out
cmp
and
out
mov
rcrl
shlb
push
mov
outsb
out
gs
stos
cld
scas
dec
mov
mov
sub
shll
dec
mov
jl
jno
cli
sub
loop
cmp
ret
nop
mov
outsl
fs
sti
push
sub
inc
leave
cmp
pop
cld
mov
and
test
push
popf
inc
lds
add
daa
sar
dec
cli
pop
in
fs
cmc
adc
jp
shlb
jg
test
cmpsl
dec
or
pop
jbe
or
push
mov
adc
subb
daa
jmp
es
fdiv
cld
add
push
inc
sbb
mov
dec
xchg
pop
out
fwait
sahf
xor
mov
stos
fsubs
das
imul
lods
cli
xchg
push
xchg
add
pop
and
cwtl
lcall
sbb
sti
insb
mov
into
in
jmp
push
jnp
lods
leave
lods
nop
or
dec
xlat
xor
dec
psubusb
ret
cmpsl
sarl
sub
push
fcomp
jmp
mov
push
cmp
pop
mov
adc
jns
add
lock
and
icebp
or
cwtl
add
and
mov
adc
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
jle
sbb
mov
xlat
jnp
inc
push
outsb
ret
sbb
daa
daa
add
pop
cltd
in
dec
sub
push
dec
pop
xchg
jb
push
test
dec
inc
dec
int3
loope
jg
cmp
dec
mov
jge
cmp
shr
push
ret
jge
outsl
sub
cwtl
in
in
jns
shl
sahf
fdivrl
and
fldt
and
jge
jg
mov
rcrb
jg
jmp
inc
jmp
mov
out
insb
scas
mov
cli
in
mov
cmp
push
add
mov
out
dec
js
lea
mov
les
test
xchg
mov
adc
jae
jg
gs
in
push
jns
cltd
mov
repz
jle
scas
fisttpl
leave
jp
leave
dec
add
cmp
xor
sbb
and
inc
and
inc
inc
sahf
arpl
insb
cmpsl
fidivs
nop
xor
cwtl
jo
add
mov
loope
jo
jnp
jmp
adc
sbb
mov
inc
dec
test
fsubrl
or
andb
ret
lods
and
mov
push
push
adc
xchg
ret
repz
cmp
push
enter
sbb
insl
ss
xchg
sti
and
ja
cli
clc
sub
rcrb
mov
inc
mov
dec
push
popw
sub
ja
xor
sub
popf
shll
dec
pop
in
adc
jb
jae
ret
ds
mov
notl
push
call
cwtl
push
out
inc
es
rorl
fcmovu
stc
imul
shll
dec
lret
cltd
xor
ret
movsb
pop
mov
cmp
dec
jl
sub
sub
cmpb
pop
sahf
insl
xor
movl
inc
mov
jl
push
mov
pop
lock
and
aad
in
in
arpl
jmp
fcmove
sahf
outsl
out
push
movsl
lcall
pop
test
cwtl
mov
or
xchg
insl
pop
imul
xor
ficoml
sar
cmp
push
xor
lahf
cmp
fsubrl
pop
ror
push
shll
fistl
pop
lds
mov
loopne
test
and
pushf
fmull
mov
imul
fdivrl
mov
std
imul
adc
lret
or
mov
das
pop
jb
movsb
mov
cld
dec
sub
loope
lret
jle
cmpsl
and
add
decb
leave
shrl
rorb
out
mov
sub
mov
push
stos
imul
call
cld
cmc
fildl
jecxz
dec
or
cmp
mov
or
stc
push
dec
stos
push
jle
pop
dec
sbb
jae
fstpt
inc
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
inc
fisttpll
mov
mov
ljmp
mov
es
nop
lfs
pop
push
mov
insl
and
xor
call
mov
pop
pusha
pushf
pop
in
and
mov
mov
nop
fildll
gs
sbbl
jae
or
jbe
cltd
mov
imul
hlt
sbb
xchg
imul
sub
enter
mov
mov
and
mov
stos
stos
and
mov
mov
int
les
push
outsb
sbb
add
sub
push
or
lods
imul
push
lret
mov
lods
xor
lahf
fbstp
cmp
pop
add
outsl
stos
xor
fcmovne
xor
pop
daa
or
push
xchg
push
jecxz
rclb
arpl
scas
outsb
pushf
loop
testb
push
mov
addr16
fsubs
arpl
add
mov
bnd
inc
sbb
and
xchg
movsb
xchg
xor
int
adc
test
faddp
jmp
cwtl
addb
cmp
pusha
out
inc
jbe
jo
pushf
jmp
ljmp
sahf
les
in
stc
sub
dec
push
add
mov
mov
push
test
pusha
fisttpll
dec
arpl
pop
sarl
jae
mov
jmp
mov
jg
aas
inc
and
adc
mov
lds
mov
orl
iret
aas
or
in
pop
add
das
pop
sahf
cmc
mov
cs
movsl
fwait
in
test
loope
mov
xor
pop
cli
lds
jg
cli
sub
lods
xchg
xrelease
roll
adc
jp
orb
pop
sub
addr16
jb
jp
push
cld
sub
push
sub
xor
cmpsl
mov
shrb
ss
lods
mov
adc
stos
lock
jae
dec
std
aad
scas
ret
ljmp
aad
and
mov
mov
mov
pop
test
push
andl
jbe
pop
int3
add
imul
mov
add
dec
ljmp
dec
mov
add
movhps
imul
or
add
sti
jle
out
pop
xor
cli
cmpsb
mov
cmp
pop
pop
dec
sbb
sbb
inc
mov
mov
arpl
inc
pop
cmp
fldl
mov
and
or
shll
jl
negl
and
mov
stc
mulb
lret
cmp
push
cmp
adc
cmp
jp
mov
cmp
inc
mov
lret
xor
aas
cwtl
lret
cmp
jno
sub
mov
mov
add
xchg
mov
rorl
shrd
shr
xor
jmp
cmp
sub
xchg
adc
cwtl
mov
mov
ret
lret
jb
mov
js
les
cmp
and
in
ds
je
outsl
inc
cltd
loop
fbld
int3
std
clc
mov
cmp
xchg
push
xchg
fidivs
push
cwtl
cmp
ljmp
sub
push
into
lret
lcall
push
mov
jo
mov
sbb
sbb
notl
subb
bound
rcr
pusha
pop
mov
xlat
xor
jl
loop
jbe
xchg
inc
test
fnstsw
mov
insl
cmp
or
les
sbb
cmp
outsb
xor
imul
add
repnz
jo
fildl
jno
shlb
ret
test
mov
inc
sti
mov
into
pop
sub
outsb
out
adc
mov
imul
int
jo
mov
fnsave
addr16
adc
and
dec
cltd
xor
adc
mov
jbe
fcomip
ret
jmp
cmp
imulb
fistpll
or
clc
stos
pop
pop
sub
pop
sahf
add
jmp
jge
sbb
push
shr
mov
lock
out
xchg
sbb
cmp
xlat
jecxz
repnz
add
cmp
fidivrl
into
rorb
clc
mov
outsl
push
pop
rcl
mov
cltd
gs
mov
add
or
inc
scas
push
inc
clc
or
add
or
mov
pop
pop
cmc
mov
mov
dec
lret
pop
sbb
and
mov
xor
xor
lods
jmp
in
out
jp
sbb
jle
dec
lds
cs
pop
mov
or
popf
dec
xorb
sub
jge
cmp
cmc
fstpt
xlat
iret
mov
xlat
pop
and
fistpl
loop
jb
popa
xchg
push
or
data16
pop
rcl
cmp
mov
ds
xor
lcall
add
push
aam
rolb
mov
gs
mov
or
adc
dec
sub
jp
jns
sub
pop
scas
scas
cmp
mov
mov
xchg
scas
subb
mov
adc
xor
cmp
pusha
addr16
and
int3
add
jb
pusha
xchg
mov
mov
xchg
jle
inc
loope
dec
pop
jmp
mov
cmp
loop
mov
mov
aas
and
ja
xchg
insl
into
mov
push
fbld
ja
pop
push
xchg
daa
adc
dec
or
sub
mov
push
lock
xchg
js
je
test
repz
xchg
mov
stc
jns
aaa
cmovl
push
and
xor
add
lret
loope
add
dec
and
lds
outsw
ja
cmpsl
fildl
sbb
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
sbb
stos
sahf
mov
mov
sub
sub
stc
xchg
ss
ljmpw
popa
mov
sti
add
xor
xor
mov
ljmp
adc
push
icebp
sbb
adc
dec
inc
cmp
fisubs
push
xor
adc
xchg
xchg
aam
pop
push
mov
sti
fsubr
dec
cmpsl
add
lahf
mov
mov
inc
shlb
sarl
fldcw
imul
hlt
nop
adc
inc
inc
add
out
movsl
cmp
stos
jnp
repz
or
and
add
push
push
push
clc
data16
xlat
lds
inc
mov
push
and
sub
jg
cs
sub
and
movsl
pop
mov
sub
push
lods
ljmp
dec
sbb
mov
xor
xor
data16
mov
xchg
sub
sbbb
jbe
fdivrs
hlt
jne
repz
pop
fdivs
lcall
ficoml
imul
test
test
dec
mov
rcrb
subb
es
inc
mov
cmpsl
rolb
movsb
xor
mov
mov
mov
adc
decb
push
push
dec
iret
cltd
cmpsb
xchg
ja
aad
js
mov
lea
out
xor
in
push
pop
mov
das
bnd
iret
repnz
fucomi
adcb
ret
std
xchg
cmpl
jmp
nop
xchg
mov
or
pop
dec
nop
dec
fnstcw
pop
hlt
lahf
mov
push
out
out
movsl
add
add
jge
cmp
aam
push
xchg
movsl
std
jno
icebp
jle
ja
pop
jnp
je
or
adc
jge
cmp
cli
and
stos
outsb
adc
mov
sbb
pop
jl
mov
int
ja
sarb
aad
test
fdivr
xchg
scas
inc
je
lods
xchg
div
add
inc
mov
sub
std
pushl
insb
shll
or
not
mov
fsubrs
sarb
and
fisubrl
xor
call
mov
adc
lods
dec
test
imul
pop
dec
or
xchg
in
cmp
mov
insl
adc
adc
inc
js
mov
inc
outsl
jbe
jge
or
xor
icebp
stos
add
into
and
loope
bound
add
icebp
inc
in
pop
outsl
in
jle
jb
or
daa
xchg
ret
lds
xchg
push
roll
dec
adc
popf
inc
xor
jl
clc
hlt
gs
cmp
nop
mov
mov
aam
cli
mov
bound
std
pop
int
dec
mov
das
andl
or
std
insb
cltd
repz
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
add
mov
sbb
mov
clc
sbb
test
jne
mov
jmp
sub
out
bound
aam
xlat
jnp
jnp
cmp
jns
lods
jl
add
and
push
lret
test
push
movsb
cmc
jmp
imul
subb
sti
pop
push
and
pop
hlt
in
mov
cwtl
movsb
stc
dec
js
mov
cmp
data16
mov
je
cmp
mov
lret
js
mov
mov
push
jle
aas
mov
adc
std
xorb
shl
fnstsw
lea
push
bound
xor
jbe
sbb
lods
mov
ljmp
push
cmp
iret
or
lahf
cmpsl
jp
mov
imul
add
fldenv
xchg
pusha
fisubl
popf
scas
aas
dec
movsl
or
inc
inc
movsb
mov
shll
jne
call
cmpb
sarb
mov
loope
aas
lret
cmp
aas
jp
inc
mov
sbb
movsb
cli
js
mov
loop
mov
xchg
flds
or
push
pop
stos
cmp
cmpb
mov
pop
push
enter
xchg
mov
cld
in
mov
ret
cli
idivl
dec
idivb
ja
jb
jecxz
fs
fiaddl
adc
icebp
sub
out
cmp
movsb
and
and
nop
scas
notb
test
lods
and
mov
imul
rorl
push
out
dec
and
cli
mov
fcoml
fstpt
push
loopne
fnstenv
sub
inc
shll
testl
pop
cmp
mov
clc
popf
fldl
nop
mov
sub
sub
xor
int3
and
sub
mov
iret
cli
popa
bound
arpl
lods
mov
mov
mov
lahf
push
lret
orl
scas
sbb
aam
jns
dec
test
clc
dec
jno
pushf
insl
push
xor
add
mov
adc
sar
enter
repz
xor
mov
xor
dec
adc
popf
lahf
js
data16
outsl
xchg
cmp
jl
int3
cmp
ret
sub
addb
call
pop
sub
add
mov
mov
add
mov
dec
dec
call
pushf
xlat
mov
mov
sub
dec
and
aas
lcall
adc
mov
test
xchg
push
repz
push
pop
push
gs
xor
shlb
mov
jle
loope
lret
mov
push
mov
push
push
lods
jne
lahf
adc
and
xor
movsl
sub
pop
call
nop
movsl
fwait
xchg
fdivr
cmc
inc
jnp
cmpsl
pop
stos
int
enter
add
call
mov
mov
pop
push
sahf
or
mov
mov
out
fs
jp
aam
fadd
loop
cmpb
inc
push
in
jb
pop
leave
xor
mov
push
out
mov
lods
and
gs
cmpsl
mov
jl
nop
jb
testl
xchg
sub
or
movsb
and
push
mov
xlat
xor
xor
fwait
sub
stos
stos
ja
stc
ret
adc
out
cwtl
sub
jge
mov
pop
or
or
cmpl
xchg
push
rcll
mov
jl
in
adcb
pxor
push
ret
xor
and
das
test
pop
divl
lret
gs
mov
mov
call
shlb
test
je
int
loope
adc
loop
outsl
mov
add
push
popl
std
shll
push
imul
fisttpl
loop
js
aam
cmpsb
sub
pop
or
rolb
jge
lahf
jno
dec
inc
mov
aad
inc
and
adc
mov
data16
jae
test
addr16
mov
cmp
pop
repz
inc
pop
std
cld
int
jae
mov
insb
lods
in
mov
popf
jns
pop
loopne
mov
xor
and
mov
imul
adc
pushf
pop
fisttpl
hlt
dec
push
fisubs
cli
bound
xchg
mov
lret
mov
ds
out
adc
test
mov
mov
fs
sub
jmp
xchg
repnz
sti
push
in
lret
int3
repnz
mov
sti
stos
in
and
mov
xlat
inc
jmp
stos
test
dec
dec
mov
xor
in
lea
imul
add
sti
push
jae
ficoml
lods
mov
movsb
ds
das
or
add
or
cmpsl
in
imul
fsubl
aas
push
dec
push
jmp
ss
andb
mov
mov
adc
out
pushf
and
rcrb
test
das
fsubrl
out
sar
loope
pop
leave
ljmp
call
mov
pusha
mulb
mov
mov
loopne
enter
out
xor
cmp
jne
add
das
pusha
pusha
mov
jno
sahf
pop
sbb
jne
mov
mov
push
out
pushf
jg
test
popa
xorl
cmp
clc
nop
xor
gs
add
filds
fisubrl
lods
shll
shll
lods
mov
bound
mov
jae
ss
negl
jae
push
adc
cmp
and
lea
andl
data16
lret
mov
in
lods
inc
sub
push
call
shrb
rcll
cli
notl
je
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
lods
push
sahf
nop
cmp
mov
mov
xor
cwtl
out
popa
sub
int
test
adc
pop
sbb
mov
push
pop
mov
lret
mov
fisubrs
push
mov
out
in
cmpsl
jge
mov
lret
inc
pop
fisttpl
call
pushf
adc
add
sub
adc
sbb
dec
outsb
or
dec
inc
pop
inc
stos
inc
sbbb
out
ror
and
cmp
mov
sbb
pop
dec
in
fsubs
inc
cmpsl
adc
push
roll
pop
in
lret
jno
and
push
shlb
or
sbb
mov
lea
mov
adc
sub
gs
in
call
sub
or
pop
dec
mov
add
mov
lret
xchg
or
fs
ret
mull
pushf
cmp
mov
ret
lock
xor
sarl
sbb
les
sbb
repz
push
push
pop
jno
sub
and
mov
or
movsb
mov
enter
pop
inc
sbb
mov
test
adc
out
mov
xchg
pop
cli
mov
shll
inc
stos
and
int3
cmp
xor
popf
iret
xor
or
fimuls
jg
cmp
xchg
inc
scas
sbb
andb
add
jnp
popf
mov
test
pop
pop
inc
and
sbb
in
scas
rcl
fistpl
cmp
lret
pop
nop
jge
divl
clc
into
rorb
add
popa
push
mov
mov
pop
es
sub
cmpsb
mov
or
insl
aad
dec
cmp
faddl
sbb
jbe
or
mov
adc
sub
mov
outsb
cmp
adc
or
and
in
scas
jne
in
pop
sub
add
sub
aaa
test
mov
mov
adc
mov
das
inc
push
lahf
loope
stos
mov
mov
fwait
pusha
jmp
iret
sahf
sarl
or
push
cmpb
nop
jnp
jne
add
loop
inc
lahf
scas
push
push
stos
fs
sahf
xorb
xchg
push
lret
sbb
pop
repz
sbb
xchg
test
or
mov
and
jle
xchg
mov
fs
dec
in
and
jl
adc
jb
dec
mov
test
push
rorb
cmpsl
lods
lret
bound
add
arpl
xlat
inc
pop
sarl
push
pop
cmp
and
pop
mov
test
push
ret
mov
outsl
add
cmp
dec
or
insl
dec
out
and
or
or
push
mov
mov
ficoms
sbb
mov
hlt
lea
lods
xchg
lods
sahf
ret
cld
aam
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fstpl
mov
insb
mov
mov
in
pushf
shrl
stos
adc
shr
push
lock
jnp
and
idivl
xor
cmp
cmp
iret
xchg
mov
mov
jecxz
call
in
sti
cmp
mov
ljmp
lock
pop
inc
xchg
shlb
fisubs
inc
lret
and
add
repz
orb
jb
test
push
shr
adc
pop
addr16
xchg
push
test
jecxz
or
cmp
addr16
orb
outsb
scas
mov
sub
leave
sub
adc
stc
pop
sub
mov
xchg
enter
lret
sub
sti
imul
loopne
pop
sahf
test
test
cmp
mov
dec
imul
sub
add
adc
push
icebp
push
add
rcrl
sbb
ret
ja
sub
adc
jo
sahf
fiaddl
ret
daa
pop
xor
lods
and
orb
dec
dec
lods
and
lcall
and
hlt
mov
and
clc
fisttps
or
dec
pop
adc
cld
popf
pop
fwait
jno
push
mov
jae
jp
nop
jge
jne
jle
xchg
pop
pop
divl
push
xor
sub
repnz
sub
jns
dec
rcl
xor
fsubr
sbb
popa
xchg
int3
pop
pop
cmp
shlb
mov
adc
xor
or
push
pop
sub
cmp
pushf
stos
xchg
or
push
nop
ds
jge
in
mov
cli
xchg
daa
daa
nop
stc
clc
pop
int
dec
jl
mov
popa
ret
sbb
addl
xchg
jle
decl
out
scas
loopne
dec
sbb
mov
nop
mov
mull
xlat
sub
test
fs
imul
je
out
stos
out
push
loopne
fs
adc
mov
lret
jecxz
fwait
jbe
ret
loope
xor
add
cmpb
iret
mov
mov
xor
inc
repz
repz
ret
repnz
into
pop
fidivrs
js
mov
cld
and
call
movsb
rcrl
mov
aaa
sbb
pushf
lcall
adc
xchg
xchg
mov
out
sbb
scas
cmp
cli
pop
cmp
adc
add
jne
pop
xor
cld
jnp
push
xor
push
sti
repnz
cmpl
jno
xchg
in
xor
cmc
ret
inc
xchg
fpatan
outsb
pusha
cmp
cwtl
push
sarl
fbld
lret
cmpsl
test
inc
cmpsl
cmp
out
lods
test
fcoms
mov
jg
mov
iret
gs
scas
sbb
lods
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
sahf
pushf
mov
mov
mov
call
popa
out
dec
ficomps
jo
and
out
loope
pop
sbb
shll
pop
lret
cmc
scas
mov
mov
adc
movsl
pop
pop
aad
cltd
insb
cwtl
das
test
xor
imul
or
scas
aad
push
loopne
leave
cmp
pop
dec
mov
fdivr
jecxz
adc
mov
cmp
add
xlat
mov
mov
push
icebp
inc
imul
cmc
xchg
sbbl
push
sub
adc
imul
scas
mov
xchg
jo
dec
cs
rcll
shr
mov
imul
das
dec
adc
jns
testb
hlt
push
rcrb
iret
fsubp
out
dec
leave
ja
add
cs
jns
adc
pop
in
mov
rcrl
scas
jmp
jne
xor
cmc
or
stc
das
dec
dec
sbb
xlat
xor
imul
dec
cs
in
xchg
cmp
push
sub
insb
clc
cmp
mov
pop
cmp
pop
shlb
mov
loopne
in
hlt
mov
es
mov
sbb
clc
out
cmp
dec
test
daa
mov
pop
xor
sahf
pop
jge
cmc
lret
lret
jbe
xchg
cmp
movsl
int3
cmp
lcall
icebp
sahf
cmpsl
psubsw
or
add
test
sub
dec
or
les
ja
icebp
cmpsl
cwtl
and
icebp
in
imul
shll
sub
data16
arpl
mov
add
push
inc
sub
xchg
int3
orb
daa
mov
hlt
lds
jg
sbb
jae
test
inc
aaa
out
mov
jp
pop
repz
cmc
gs
cmp
lods
xchg
insb
and
divl
mov
popf
mov
mov
inc
fwait
mov
sub
gs
or
mov
ret
jp
adc
cmp
xchg
fstpt
or
inc
out
arpl
add
shlb
cmp
std
stos
pop
jmp
aaa
push
pop
repz
loopne
or
mov
leave
hlt
loope
std
jns
jno
ret
push
lods
mov
out
and
mov
dec
pop
push
adc
test
jae
sbb
or
sbb
xchg
mov
cmp
dec
and
lds
jecxz
repnz
push
mov
dec
xor
adcl
loopne
ret
jbe
pop
xchg
jmp
sub
sub
cli
repz
cld
lret
jno
jle
jbe
test
ljmp
mov
lods
pop
cs
push
jo
jp
sbb
das
insb
pmullw
mov
xchg
mov
push
mov
inc
rclb
xlat
int
sahf
adcb
test
cmp
sbb
in
adc
sbb
mov
pop
push
inc
scas
sbb
or
pop
sti
jl
sub
in
xchg
std
mov
cmc
js
int
mov
mov
dec
in
iret
mov
ja
fiaddl
cs
movsl
out
popa
test
sub
push
cmp
ljmp
mov
fdivl
xchg
jecxz
int3
test
ret
cmp
jno
sbbl
xor
and
ret
mov
mov
jl
sbb
movsb
imul
mov
loope
mov
jge
sbbb
pusha
stc
mov
repz
mov
adc
dec
movsb
pop
dec
test
aam
fadds
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
iret
insb
sarb
int
rcrl
pop
test
mov
dec
inc
sub
jmp
sub
xlat
pushf
mov
or
shrb
lcall
out
sub
inc
and
push
in
mov
cmp
dec
pusha
cmp
lahf
jno
mov
fimull
cmpsb
dec
mov
stos
mov
or
test
pop
mov
or
pop
cwtl
inc
mov
loop
or
or
sarb
loop
sub
insb
cmc
fsubr
stos
sbb
and
rorl
test
push
inc
movswl
aad
xor
push
cmc
sbb
inc
mov
mov
out
ljmp
dec
dec
pop
xor
in
sub
or
in
stos
jnp
push
sbb
xor
mov
jb
mov
stos
mov
popa
fsubs
fldcw
into
xchg
inc
hlt
push
jns
ljmp
inc
pop
shll
fcoml
rorl
sti
jae
sub
test
inc
mulb
ret
dec
inc
pusha
xchg
sarb
mov
cltd
gs
dec
pop
mov
mov
sub
out
xchg
lea
pop
test
mov
xor
aaa
std
adc
xor
xor
mov
subl
pop
mov
jle
and
shll
jg
inc
loope,pn
push
mov
or
imul
adc
or
cltd
jbe
push
jl
pop
add
cli
fisttpll
add
pop
sbb
jbe
jb
pusha
loopne
sbb
xor
xor
jnp
and
and
sub
nop
test
xor
mov
lret
pop
pop
scas
outsb
cwtl
pop
aad
jnp
sub
sub
sahf
mov
inc
loope
and
icebp
aam
mov
cmpsl
mov
test
cld
mov
out
clc
push
mov
and
test
sub
int3
lods
mov
roll
sbb
jbe
in
xor
andl
out
pop
pop
inc
sub
push
xor
hlt
lcall
pop
int3
fldcw
jmp
in
xchg
xchg
daa
mov
shl
lret
xchg
in
shr
adc
cmp
hlt
aad
mov
sti
push
mov
add
std
mull
sbb
dec
jnp
pop
mov
jb
adc
lret
xchg
push
inc
js
rol
mov
cltd
std
xor
pop
mov
fs
xor
adc
int
std
jmp
mov
idiv
sub
add
xor
repnz
pop
jns
cmp
sbb
out
xchg
pop
lods
xchg
addr16
dec
push
inc
aas
cli
out
mov
push
mov
lods
fwait
mov
xchg
jg
sbb
jp
mov
pushf
es
aaa
jns
mov
xor
imul
cwtl
addr16
aas
ficoml
fwait
sub
dec
sub
das
push
imul
push
dec
out
inc
jecxz
pop
mov
jmp
popf
fs
inc
adc
nop
enter
and
test
fiadds
jbe
push
jbe
inc
sbb
jle
movsl
imul
lods
testb
in
pop
push
lds
cli
lock
sub
movb
push
lahf
je
sahf
mov
data16
push
inc
sbb
fidivs
es
inc
out
scas
mov
inc
hlt
jecxz
and
scas
cltd
sub
mov
mov
aaa
mov
xchg
inc
push
arpl
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
sbb
xchg
jecxz
int3
sarb
mov
xchg
aas
mov
mov
or
dec
pop
sbbl
pop
mov
bound
mov
ljmp
mov
in
loopne
xchg
xchg
mov
repnz
jmp
popa
in
incb
lret
jmp
and
lret
call
repz
mov
push
arpl
xchg
int
jle
int
push
inc
js
adc
aam
inc
xchg
daa
pop
mov
xchg
pop
jne
stos
adc
add
fidivl
inc
test
test
cmp
roll
xchg
ja
fwait
aas
movsb
push
lcall
sahf
and
les
jbe
cld
adc
adc
mov
cmpsb
dec
aaa
adc
mov
adc
mov
stos
movsl
dec
xchg
adc
lods
jbe
or
jns
mov
jae
dec
push
fildl
sub
and
push
cmpsb
sub
mov
int3
fadds
push
ror
push
sti
adc
ja
push
pop
hlt
out
test
sbb
cs
mov
outsb
fadd
push
stc
push
xor
je
into
bound
jno
sub
push
rorb
xor
rolb
xchg
xchg
fsubrl
sub
cltd
mov
aas
sub
dec
in
xchg
xchg
lods
mov
jl
mov
inc
sub
rcrb
cmp
jge
ret
orb
fdivs
mov
movsb
ja
out
in
sti
push
fsubrs
out
pop
cltd
jns
push
clc
mov
in
out
out
sbb
fildl
loop
push
inc
pop
mov
and
sbb
xchg
push
add
test
mov
and
fcmovnu
test
outsl
push
dec
in
aas
cmp
shll
arpl
enter
gs
popf
dec
mov
jl
orb
xchg
repnz
push
out
push
sub
cmc
add
mov
sbb
call
testb
sbb
aam
jns
xchg
mov
fwait
dec
cmp
lahf
ds
push
and
jmp
mov
fldcw
push
pushf
std
icebp
daa
loopne
dec
cmpsl
pop
insb
lret
xrelease
pop
mov
cld
push
or
mov
jecxz
in
aam
push
pop
jno
pop
sub
cmp
or
sbb
adc
or
jp
mov
cltd
jp
das
mov
or
mov
clc
xor
cmc
xlat
jl
fs
lods
addr16
jne
mov
jge
dec
je
pop
inc
lret
sbb
jbe
ror
mov
sbb
leave
dec
mov
mov
pop
cmp
sbb
xor
jae
adc
loopne
hlt
mov
inc
je
lret
adc
sub
imul
inc
push
out
cmp
sahf
adc
xchg
jmp
sbb
pop
and
push
sti
mov
roll
gs
jb
mov
in
and
xchg
jmp
mov
loopne
jbe
loopne
sbb
or
dec
mov
fisttpll
inc
sub
fimuls
jae
call
loop
xor
push
xchg
dec
in
lods
into
mov
add
insl
fisttpl
push
jmp
test
adc
mov
dec
add
pop
and
call
test
cmpsl
test
scas
test
mov
mov
mov
nop
push
in
cltd
and
mov
rol
sub
dec
mov
loopne
int
pop
ljmp
loop
jb
stos
daa
shll
lcall
sbb
jl
inc
inc
stos
bound
enter
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
sub
sarb
lahf
aam
inc
sarl
xchg
xor
xlat
cmp
push
fistpl
cmc
jle
cmpsb
cmp
jp
stos
out
pop
int3
cld
fwait
sub
push
sub
clc
dec
fdivp
int3
sub
mov
add
xchg
cmpsl
int3
jl
cmp
sub
sar
repz
loop
lea
mov
into
jnp
push
andb
push
popf
cli
loop
xor
out
repnz
mov
sub
add
pop
out
fs
dec
shrb
cltd
bound
xor
fisubrl
inc
fdiv
mov
fistl
pop
neg
dec
ljmp
sub
popf
and
jne
jmp
fcoms
bound
lahf
fbld
stos
in
jne
lods
ret
lret
inc
add
cmp
out
sub
inc
cs
inc
pop
dec
adc
dec
outsb
std
and
test
push
jmp
lahf
xor
stos
ret
cmp
push
fcoms
out
xchg
and
or
xor
or
insl
jmp
loope
faddl
adc
and
dec
mov
pop
jnp
pop
jg
fldenv
cwtl
loopne
out
xchg
cvtdq2ps
ja
or
mov
out
outsl
dec
popa
mov
mov
push
cmp
stos
push
jg
cs
test
pop
mov
jne
rclb
call
jmp
out
out
loop
jno
movsb
lock
dec
mov
icebp
dec
jo
pop
sbb
fxch
mov
push
pushf
clc
sbb
adc
popa
filds
pop
out
mov
scas
ret
les
push
std
mov
jmp
pop
ljmp
jle
adc
int
xchg
sarb
out
out
shll
test
jo
adc
movsb
cmpsl
xchg
jg
add
xor
or
adc
arpl
dec
push
pop
pop
sbb
shl
loop
inc
int
ret
stos
push
mov
dec
scas
or
mov
push
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
xor
test
sarb
test
rol
popa
dec
out
out
sbb
scas
add
mull
fstl
ds
jo
mov
cmp
mov
movsl
ljmp
cmovo
into
xchg
int
xor
in
movsl
sbb
je
imul
jo
push
insl
jae
test
mov
test
pop
clc
xchg
mov
xchg
sub
adc
mov
clc
dec
sbb
insl
add
fs
add
mov
sbb
les
fistpl
icebp
jne
in
out
push
or
call
cmp
lock
rclb
jae
xchg
dec
inc
stos
int
bound
mov
cltd
aam
pop
rorb
mov
arpl
cmp
inc
cmp
gs
mov
dec
repz
sbb
pop
push
cld
jnp
jnp
scas
aaa
xchg
sahf
daa
pop
in
add
aad
ficompl
stc
sub
movl
pusha
xor
and
pop
sbb
mov
fcoms
mov
mov
sarb
jle
xchg
or
ds
icebp
lcall
cli
outsl
test
mov
repnz
inc
orb
nop
les
movl
mov
stos
insl
aam
nop
and
mov
outsl
mov
mov
pushf
xchg
jbe
push
inc
or
pop
mov
cmp
lods
idivl
push
jo
jl
cwtl
cmp
mov
pop
jns
push
mov
test
push
test
adc
push
dec
mov
mov
push
pop
int
fadds
mov
push
dec
imul
int
xor
int
mov
pusha
out
popf
cmp
inc
fs
sbb
push
and
inc
mov
rcl
or
adc
pop
sbb
aaa
dec
rorl
js
xor
mov
cmp
cld
cmp
jmp
xchg
lret
and
push
xor
add
out
inc
and
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
jg
in
sti
faddp
mov
or
addr16
lret
mov
inc
loopne
jle
mov
mov
mov
lsl
ficompl
mov
xor
pop
popa
xlat
inc
sub
int3
sbb
test
mov
jecxz
outsl
clc
ja
jle
xchg
inc
sub
push
push
sti
fbstp
lock
inc
iret
ds
add
data16
ja
test
mov
mov
jge
into
in
and
push
ficoms
rcrl
cmpsb
inc
push
dec
mov
jp
test
stc
js
dec
pop
jne
sbb
iret
xchg
sti
pop
mov
dec
cld
fisubl
push
sarb
and
xor
xor
or
test
mov
test
xchg
sub
fnstcw
inc
mov
insb
loopne
or
cli
push
and
push
sub
aad
push
stos
ret
push
jae
mov
imul
pop
pop
mov
mov
adc
js
repz
adc
ljmp
movsl
lret
dec
fs
jle
in
aam
gs
adc
xchg
mov
decb
jo
pop
enter
sbb
xchg
jo
outsb
mov
cmpsl
ret
and
xchg
in
add
outsl
dec
enter
movsb
rorb
pcmpeqb
fs
pop
int
lock
mov
fstpl
sub
mov
sbbl
ss
mov
std
in
push
and
arpl
dec
aad
nop
mov
loopne
xchg
xchg
pop
sbb
mov
cs
test
icebp
aad
inc
jne
gs
mov
testl
iret
sarl
sbb
jne
mov
jb
cmp
imul
bound
repnz
enter
ss
mov
cmp
and
in
jb
jecxz
les
mov
rclb
in
mov
out
or
sub
daa
cmpb
mov
add
ja
mov
mov
pop
mov
mov
adcl
jmp
and
fstl
jb
sahf
nop
xor
fists
xor
nop
inc
les
add
sbb
cmp
incb
mov
push
push
pop
or
out
mov
loop
jle
out
cltd
nop
pop
insb
imul
ss
scas
push
push
jle
rcrl
pop
jle
adc
and
mov
mov
mov
in
add
jmp
xlat
lods
scas
repz
test
and
ja
clc
aaa
sbb
pusha
push
sbb
std
jns
inc
sti
aad
mov
fstps
xchg
pop
andl
test
test
fdecstp
xor
push
fildll
shrl
adc
adc
insl
dec
push
scas
add
pusha
imul
xchg
imul
pop
push
cmp
cld
out
je
fcoml
adc
xchg
cli
enter
scas
sub
xor
sub
in
stc
and
scas
mov
hlt
mov
xor
pminub
push
xlat
cmp
xchg
inc
mov
fisttpl
stos
pushl
inc
lods
je
mov
jge
in
adc
xchg
mov
cmp
jns
sbb
sbb
aas
mov
pop
jle
jle
xchg
inc
mov
pusha
mov
push
mov
cli
iret
inc
inc
jge
movsb
sahf
sbb
les
mov
cmpsb
outsl
mov
rorb
xor
and
dec
cmp
and
aaa
nop
xchg
mov
xchg
out
and
adc
loop
clc
repz
push
jp
cmp
test
inc
mov
lcall
xor
adc
jb
insl
and
jp
data16
das
in
dec
mov
scas
in
fiaddl
std
das
cmc
cli
jne
in
push
and
lds
mov
nop
cltd
out
push
or
jmp
scas
push
adc
ds
loopne
out
sub
cmp
push
scas
mov
movsb
push
inc
push
sub
call
jmp
add
pop
aam
add
mov
xor
mov
xchg
sbb
push
xchg
inc
mov
inc
mov
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
in
leave
movsb
jmp
sarb
inc
stc
xchg
add
addr16
repnz
dec
in
mov
fcom
mov
xor
ret
cmpsl
pop
imul
cwtl
bound
inc
cmpl
xchg
dec
int
push
fcomps
push
pusha
xor
addb
out
fisttps
jl
mov
fs
or
cli
mov
jl
mov
mov
xor
aad
sbb
xchg
jno
aam
sbb
lea
mov
add
and
push
jp
mov
lea
pop
cltd
adc
js
int
mov
xor
pop
or
mov
movsl
cmp
mov
push
inc
jl
inc
movsl
adc
push
inc
enter
es
xchg
xor
cmp
xor
cs
rcl
or
iret
mov
fs
pop
push
and
xchg
push
out
jl
scas
int
mov
jo
jle
pushf
cmp
leave
mov
jge
loop
sbb
adc
outsl
aam
add
adc
int3
scas
cmp
lahf
dec
fmuls
mov
orl
les
repz
xor
lcall
adcl
lea
inc
lods
cld
inc
jne
pop
xor
cmpsl
push
xchg
adc
sar
imul
jnp
sahf
xor
mov
js
sbb
cwtl
jmp
bound
scas
xchg
cli
in
in
adc
std
fildll
repz
int
out
mov
sbb
jno
dec
out
movsl
in
cmp
scas
rorl
leave
js
mov
in
loop
and
add
aam
mov
mov
or
or
and
out
push
popf
adc
sub
mov
mov
aad
xchg
pop
cmpsb
adc
and
adc
rcr
int3
push
and
inc
xchg
cld
mov
inc
cld
and
fldcw
sarl
imul
testl
inc
sbb
pop
sub
pop
fnstenv
mov
jl
test
add
add
add
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
in
pop
shll
mov
jle
cmp
shll
mov
ljmp
cltd
ret
gs
lahf
mov
pop
cmp
inc
daa
or
jecxz
ja
movsl
jne
or
in
cwtl
adc
and
insb
nop
adc
adc
mov
cmp
xlat
xor
and
adc
fisubl
xchg
cwtl
adc
or
adc
cld
arpl
int
jnp
int
add
add
ja
ja
mov
fmuls
push
dec
or
sbb
jecxz
ljmp
jbe
dec
add
stos
add
inc
dec
leave
mov
sub
dec
fldcw
adc
fwait
and
in
add
push
dec
mov
mov
mov
pop
cmp
clc
cld
add
in
inc
lret
push
das
dec
les
sub
xor
and
insb
ficoms
push
xorb
jnp
sbb
mov
push
push
cli
dec
sbb
jg
sbb
sti
subb
jo
inc
cmp
cmp
enter
sub
jns
into
add
stos
mov
sbb
movsl
adc
mov
cmp
mov
xchg
shll
push
adc
dec
jl
das
ficompl
dec
icebp
test
lcall
dec
push
and
push
adc
cld
mov
jno
inc
sub
jp
stos
xchg
data16
push
inc
clc
inc
sbb
in
fisubrs
and
in
std
sub
adc
xchg
repz
ljmp
stos
add
ljmp
shr
push
lret
pusha
rcl
mov
xor
pop
push
push
xor
lahf
xor
xchg
imul
xchg
in
cmp
hlt
cwtl
scas
ss
and
sbb
cmp
mov
xor
mov
xlat
andl
jg
rcr
xchg
outsb
and
push
div
push
rclb
out
inc
outsb
pop
sub
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
xchg
fsubr
sarb
and
loop
dec
lock
scas
bound
aas
cmp
test
push
movsl
shrl
loop
or
js
or
imul
mov
add
dec
sub
vmaxss
xorb
adc
pop
loope
in
rorl
add
lahf
ljmp
dec
sbb
xor
add
sahf
movsb
xchg
jae
movsl
push
cmpsb
push
inc
adc
push
pushf
mov
jae
outsb
aam
loop
imul
movsb
mov
inc
jns
sti
adc
jge
cltd
js
pop
sub
sbb
xchg
sbb
xchg
jge
xchg
add
outsl
ds
mov
std
loope
ljmp
lock
sbb
mov
xor
dec
lock
addr16
movsl
int
cld
xor
mov
cmp
jo
scas
rcl
sub
lahf
std
aaa
adc
mov
mov
pop
shl
push
jns
loope
mov
fcomps
out
xor
sbbl
add
and
movsb
std
sbb
rorb
leave
dec
sub
sub
andb
cld
scas
push
dec
mov
shlb
mov
cmpsb
inc
push
sub
xor
jmp
cmc
iret
sbb
xchg
bound
cli
lahf
mov
or
jne
in
push
jmp
not
xlat
cwtl
aas
ja
pop
push
dec
imul
jg
repz
inc
lods
mov
mov
dec
dec
out
sub
mov
jge
out
inc
lret
jp
sub
jae
mov
jp
leave
sti
das
arpl
sarl
outsb
popa
and
bound
ds
adc
sub
adc
fmuls
les
cmpsl
mov
jb,pn
ret
test
sub
jge
in
mov
pusha
dec
inc
sti
data16
ss
cmp
lret
in
mov
jl
aam
push
inc
ss
cwtl
mov
rorb
aas
sub
cwtl
pop
or
cwtl
pop
test
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
movsb
push
repz
push
in
dec
and
dec
movsb
add
mov
bound
sbb
dec
jae
loopne
mov
xor
add
gs
dec
mov
push
je
mov
data16
movsl
adc
pop
mov
mov
mov
mov
mov
cmp
push
subb
cmp
in
cmp
add
cli
int
mov
push
pop
jmp
push
cld
ds
mov
inc
push
aam
in
fiaddl
or
dec
or
xor
sub
testb
repz
int3
fs
mov
jns
mov
add
test
clc
daa
cs
inc
mov
notb
arpl
in
pop
mov
ds
mov
ficomps
dec
leave
push
into
arpl
test
xchg
call
insl
sti
mov
aaa
inc
mov
inc
sbb
mov
xor
mov
dec
mov
or
push
mov
or
dec
int
push
addw
jmp
sahf
in
test
mov
xor
fsubrs
mov
cmpsl
sub
dec
lret
add
aad
movsb
pop
add
outsb
add
arpl
cmp
js
mov
sub
shr
ja
enter
loope
adc
mov
rclb
enter
pop
js
and
cli
cmpsb
lcall
sub
sar
pop
inc
or
stos
mov
dec
mov
fisubl
push
xchg
mov
pop
cs
mov
negb
jge
pop
dec
xchg
or
int3
mov
ljmp
push
inc
stos
enter
rcll
ficoms
ss
jo
aaa
pop
adcb
adc
cs
xchg
movsl
push
repz
mov
das
movsl
mov
xlat
pop
and
xor
test
inc
rcrl
cmc
aas
xchg
cwtl
std
outsb
out
aaa
aaa
in
iret
and
or
mov
iret
push
or
loop
out
adcb
add
dec
jo
mov
cmp
std
push
xchg
push
add
decb
and
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
add
adc
xor
out
mov
mov
mov
insb
or
mov
lods
into
jle
orl
fwait
pop
movsb
js
rcl
inc
dec
mov
aam
mov
mov
popf
inc
xchg
fisubrl
push
arpl
in
mov
insl
adc
sub
push
scas
pop
mov
inc
dec
sub
mov
loop
nop
mov
icebp
or
xchg
mov
cld
stc
lcall
daa
jne
fistpl
fidivs
xor
les
mov
ret
repz
push
sbb
call
mov
sbb
sbb
arpl
pushf
lods
xlat
inc
or
js
push
jecxz
ja
pop
dec
clc
xor
jp
or
mov
push
xchg
rol
dec
sarb
in
xor
add
push
sbb
adc
lds
pushf
outsb
cwtl
cli
add
ljmp
or
push
or
aam
jns
xor
push
inc
mov
pusha
int
lods
mov
mov
or
xchg
daa
cmp
lcall
and
fmul
mov
sbb
push
lret
fistpl
das
cmpsl
xchg
push
add
in
addl
outsb
xor
sub
xor
mov
or
sub
sub
lock
mov
adc
out
shl
and
leave
aaa
sbb
dec
scas
sub
jbe
adc
jmp
sub
insl
sbb
xchg
mov
lods
rcrb
jp
dec
insb
std
jmp
sbb
lahf
lods
or
sub
js
push
insb
insb
sub
stos
dec
test
add
xchg
push
test
mov
mov
adc
sbbb
mov
out
cmp
div
xor
movsl
dec
jg
dec
jbe
jmp
adc
xlat
repnz
add
pop
add
cmpsb
xchg
or
loopne
fwait
jg
roll
sub
repnz
ret
inc
lea
xchg
fs
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
movsb
inc
sti
sarb
out
out
xchg
loopne
loopne
lcall
stos
dec
push
out
and
push
cmp
inc
pop
in
idivl
clc
js
loop
adc
xchg
and
pop
arpl
add
jae
leave
mov
cs
std
adc
jmp
fstpt
dec
cli
xchg
or
fmuls
clc
add
es
mov
jge
mov
mov
sbb
inc
cmp
fisubrs
xchg
pop
or
pop
pop
in
xor
scas
lret
cmp
mov
das
repz
inc
push
mov
cmp
push
paddd
lea
mov
fchs
hlt
mov
aaa
push
and
cltd
cmp
out
sub
mov
inc
dec
addl
outsb
mov
gs
int
mov
in
mov
das
out
jecxz
sub
ret
add
aas
in
xorl
stos
or
push
jne
dec
inc
daa
add
xchg
push
insl
cmpsl
and
js
mov
jmp
stos
clc
pop
push
sub
insb
mov
sbb
jmp
ret
inc
xchg
or
popa
xchg
das
mov
sub
mov
fmull
test
aaa
inc
inc
xchg
out
mov
mov
nop
incl
test
call
test
mov
pushf
jae
popf
aam
lock
cs
add
adc
lods
popa
stos
mov
mov
adc
push
scas
mov
mov
jl
gs
or
mov
aad
mov
sti
mov
pop
or
pop
pop
pop
sbb
fwait
loop
es
mov
or
mov
icebp
stos
xchg
ss
ret
jne
lahf
inc
inc
repnz
jnp
aad
sub
mov
std
shll
movsb
sub
jle
inc
dec
out
insl
cmpsb
mov
sbb
push
sub
mov
stos
insl
or
lret
lods
sti
fsts
pop
xchg
out
outsb
cmp
cltd
bound
jns
dec
mov
mov
push
in
mov
push
sbb
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
into
push
ret
iret
mov
ret
aad
aam
xchg
dec
mov
std
push
xchg
pop
lret
stc
add
fmull
fyl2xp1
sub
fnstenv
dec
and
mov
sbb
jae
loope
rol
jae
pop
mov
pop
or
imul
fwait
pop
testl
test
icebp
add
and
popf
sub
stos
in
xlat
scas
mov
sti
fwait
mov
cltd
xchg
mov
push
rcrl
push
ret
cmp
sub
loope
adc
pop
in
shrb
into
mov
enter
sub
dec
loope
mov
or
enter
push
cld
adc
push
ljmp
mov
in
popa
test
push
sub
mov
jnp
sbb
imul
adc
pop
push
push
adc
mov
data16
xchg
push
stos
cs
call
mov
sub
add
mov
dec
ja
imul
out
xor
das
dec
jne
and
xchg
mov
add
push
adc
ret
inc
jns
mulb
lret
imul
loope
rcll
inc
cld
lock
test
dec
test
sub
into
add
push
cmp
das
outsl
aas
add
ljmp
cmpsb
adcb
fwait
lret
push
jg
shlb
add
or
sub
mov
cwtl
movsb
iret
jge
xchg
inc
andb
fcomps
loopne
cwtl
std
sub
mov
dec
push
mov
jle
xorb
clc
shll
imul
cmp
push
mov
cmpsl
stos
dec
les
movb
xchg
add
sub
sbb
ficomps
outsl
pop
mov
add
dec
dec
mov
lret
push
jge
lret
or
repnz
or
outsb
adc
iret
pop
push
outsl
jno
pop
out
inc
or
xor
in
stos
sub
push
mov
fsubs
inc
fucomp
jb
jp
jp
cs
in
xor
movsl
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
mov
add
mov
mov
adc
in
or
push
adc
mov
int3
pop
push
jo
fsts
inc
add
or
sbb
neg
jle
mov
or
jo
push
std
popf
loope
mull
mov
jmp
lea
or
inc
xchg
out
sti
sti
sub
sbb
jae
jmp
out
or
and
add
sbb
out
inc
loope
outsb
insl
sbb
xchg
sbb
mov
fcmovnbe
or
xchg
int
add
adc
call
or
in
ret
addr16
pushf
push
rclb
lea
add
repz
pop
push
push
jmp
inc
ja
inc
in
push
imul
bound
pop
mov
leave
je
mov
push
sbb
mov
shr
in
push
lcall
jecxz
or
push
ljmp
dec
adc
repz
sahf
aam
arpl
aam
xor
inc
idivb
xor
lret
outsl
cmc
inc
pop
jecxz
fwait
push
fnstcw
sbb
into
repnz
sub
adc
idivb
push
and
sbb
aas
fstl
sahf
fbld
out
ljmp
clc
enter
movsl
aaa
xlat
test
inc
inc
push
faddl
popa
jmp
xorl
loope
add
aas
push
xor
sub
dec
test
divb
movsl
call
xor
push
imul
test
jmp
jmp
loopne
pop
xor
mov
mov
in
test
and
stc
pop
mov
cmp
adcb
adc
sub
adc
adc
or
xor
and
orl
xchg
jno
aas
push
cmp
aas
pop
sahf
mov
popf
fnstcw
int
push
and
mov
jbe
inc
pusha
mov
xor
lods
out
jno
add
in
dec
mov
and
mov
ret
add
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
inc
dec
mov
stos
or
mov
or
lods
xchg
cmp
mov
mov
nop
pop
cmp
out
insb
cmp
sbb
daa
imul
sbb
push
shrb
lcall
fildl
dec
fadds
jle
dec
cmp
fcomps
sub
mov
mov
std
insb
insb
cwtl
in
dec
call
mov
xchg
adcw
push
or
cli
cmpsl
add
outsl
dec
loope
std
jne
stos
rorb
push
adc
cs
mov
sbb
cmpb
fisubrs
pop
popf
cld
pushf
xchg
test
jge
je
xor
jecxz
add
jp
icebp
mov
test
cs
dec
sub
cmp
pop
push
lods
jge
jns
push
add
dec
cli
or
lea
movsl
clc
add
outsl
cwtl
xor
mov
adc
sub
leave
cmpsl
fadds
mov
orl
inc
enter
fnstsw
ljmp
test
jns
add
mov
cmp
xor
or
ja
mov
neg
sbb
in
mov
hlt
pop
jg
push
inc
fwait
mov
aas
ja
jecxz
scas
aad
roll
add
pop
int3
xlat
loop
sub
bound
lret
sub
iret
jmp
jo
dec
outsb
or
and
cwtl
or
movb
push
shlb
cmpb
aas
cltd
or
lock
jo
cmp
notl
mov
inc
sbb
jb
push
or
jmp
xchg
inc
and
insb
push
adc
nop
out
push
notb
repz
sub
icebp
adc
fisttpl
lcall
cmp
lcall
in
pusha
cmp
sarl
xchg
pop
mov
pop
xchg
leave
shld
pop
cmc
leave
and
call
fidivrl
leave
jae
xchg
jg
adc
or
repnz
xor
clc
jle
dec
std
xorb
fisubrl
push
xchg
add
ret
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
insl
and
xchg
and
sarb
popa
jmp
dec
sbb
js
push
stos
push
pop
shll
int
or
cli
or
dec
cmp
loopne
jle
in
cwtl
adc
xor
imul
leave
add
js
inc
outsb
shrl
fcoml
test
daa
in
loopne
lret
sbb
add
xor
fsubl
mov
cwtl
add
xorl
add
adcb
fwait
stos
xchg
pop
cmp
jl
clc
dec
xchg
pop
dec
icebp
jmp
jp
cmpsl
jno
or
add
mov
jno
cmp
mov
adc
cmp
jno
sub
xchg
mov
xor
andl
cmp
pop
dec
pusha
push
sti
js
push
inc
fsubl
iret
outsl
cmpsb
dec
mov
xor
xchg
mov
enter
jno
jnp
xor
add
fcoms
lret
repnz
or
clc
scas
xor
lret
jb
xchg
idiv
out
sub
pop
sbb
pop
lret
jno
cli
addr16
sbb
lods
push
or
jl
lock
push
rcr
pushf
xchg
or
sbb
repnz
and
xchg
sti
cmc
test
or
movsl
xlat
ss
fnstenv
or
aam
push
shlb
adc
pop
movsb
add
outsl
aam
stos
stos
add
mov
xchg
test
cmpsb
xchg
sti
or
mov
repnz
jno
xchg
cmc
test
mov
jecxz
mov
sbb
sub
stos
cmp
adc
aas
xchg
test
xchg
push
pop
mov
gs
mov
mov
jb
ljmp
push
out
in
pop
cli
jmp
rol
hlt
cwtl
notl
je
cmp
lea
jb
pusha
push
or
cmpsb
jno
add
addl
lea
jp
bound
aad
or
test
sub
call
cmp
xor
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
push
pop
fninit
pushf
adc
mov
mov
movsb
jns
test
insl
mov
jmp
cmp
fistl
lods
sub
dec
lret
or
mov
xor
push
cmc
insb
repz
into
pop
jne
inc
fistl
imul
mov
xchg
in
push
rol
test
xor
clc
imul
sbb
cltd
outsl
mov
pop
out
push
sub
mov
mov
sub
data16
xchg
xor
cmp
stc
inc
popa
push
mov
pop
lret
or
jbe
dec
jle
incl
push
sbb
testb
mov
xor
lock
test
and
iret
std
scas
pop
scas
jl
mulb
mov
jl
iret
daa
iret
cmp
cmpsb
pop
jno
lahf
or
jl
jecxz
aaa
fbstp
add
pop
add
mov
int
dec
xchg
xchg
rol
and
push
iret
push
mov
jnp
mov
sti
lods
outsb
fdivrl
outsb
sub
aam
mov
cwtl
xchg
dec
dec
xchg
pop
cmp
insb
mov
sbb
pop
push
pop
push
xchg
clc
movsb
int
jle
cmpsl
cs
push
cmc
rorl
loope
sbb
test
mov
cs
push
cmpsb
or
push
jbe
adc
push
or
imul
push
mov
jbe
inc
rorb
rcrb
dec
test
jp
repz
dec
xor
adc
xor
push
out
dec
sub
pop
sub
mov
mov
pushl
in
icebp
sub
dec
ret
test
adc
repnz
testb
ljmp
mov
xor
psraw
ds
jl
pop
jnp
mov
jecxz
push
sub
adc
bound
fidivrs
cmc
push
not
inc
push
sbb
mov
sub
inc
dec
push
jne
adc
add
outsb
lcall
cmp
out
jns
mov
movsl
test
push
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fstpl
repnz
adc
sarb
add
push
adc
std
lock
inc
pop
scas
addr16
add
cmp
enter
pop
xor
adc
into
mov
or
and
xchg
cmpsl
cmp
push
mov
dec
scas
dec
cmp
aas
fmul
loop
daa
cmpsb
mov
scas
push
mov
in
jl
ss
repnz
cmpsb
mull
lret
mov
or
or
aaa
sbb
and
mov
out
dec
lret
and
icebp
dec
jno
pop
js
imul
inc
out
repz
jnp
push
std
ljmp
sub
orl
nop
cmpsl
dec
jb
xchg
shlb
hlt
inc
cmp
mov
pop
mov
mov
out
fwait
sub
pop
mov
nop
push
sbb
add
jnp
and
push
or
outsb
mov
mov
and
or
gs
cltd
jle
mov
nop
add
pop
dec
sbb
push
push
jmp
pop
fcoms
sub
xlat
fs
dec
icebp
xor
jbe
es
cmp
inc
lods
int3
sub
and
jo
test
sti
mov
int3
pop
xchg
adc
aas
inc
cmpsb
aam
jbe
add
and
adc
inc
inc
outsb
fidivrl
notl
xchg
jmp
lods
es
jp
push
jl
mov
cmpsl
push
pop
out
rol
jmp
or
cmp
lock
ljmp
push
mov
call
cmp
cli
addr16
inc
addl
jmp
push
push
xchg
mov
adc
and
test
rcl
mov
arpl
cmpb
ljmp
aaa
das
into
pop
dec
add
xor
outsb
add
insl
and
and
add
andl
push
mov
jbe
xchg
stos
movsb
cmp
mov
xor
add
push
pop
scas
lahf
imul
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rcl
call
sarb
push
dec
mov
xor
fists
aaa
cltd
nop
push
outsb
sub
in
sub
adc
and
jo
mov
mov
pushf
mov
add
out
mov
xchg
or
test
push
push
mov
test
bound
xor
test
xchg
mov
rep
xchg
jae
push
pop
les
mov
push
jns
dec
sahf
push
rolb
xor
sbb
pop
xchg
movsb
add
aam
das
aam
into
popf
jo
cld
push
lcall
lcall
in
jnp
pop
aaa
dec
mov
in
shlb
or
hlt
jmp
push
stc
scas
xor
insb
push
mov
inc
mov
lahf
outsb
gs
fdivrl
mov
movsb
mov
mov
cltd
pop
pusha
ss
inc
xor
lret
fistl
sub
push
fsubrs
lock
jmp
mov
cmp
push
inc
mov
mov
sub
repz
mul
adc
dec
push
xlat
rcr
ljmp
mov
bnd
cmp
popa
and
mov
sub
into
jo
test
cltd
ljmp
iret
dec
imul
bound
dec
rorl
push
cmp
push
scas
test
xchg
jbe
outsb
mov
pop
loope
nop/reserved
xorb
js
pusha
loope
jecxz
cmp
xchg
fsubs
push
sub
inc
sub
inc
fistps
mov
xor
mov
inc
out
stc
gs
jb
lret
in
xor
sahf
cli
cmp
sbbl
mov
add
mov
jo
mov
lret
daa
scas
int3
pop
mov
hlt
mov
test
test
scas
aam
popa
repz
fmull
pop
cmp
and
pop
jg
add
psadbw
inc
mov
pop
fstp
in
inc
cmp
cmp
jmp
or
cltd
loop
cltd
mov
jmp
pop
loopne
mov
fldcw
cmc
loope
or
fsubrs
dec
or
in
cli
add
jno
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
out
pop
or
pop
sarb
or
repnz
or
lret
sbb
pop
mov
sbb
add
add
jmp
jp
rcr
mov
jnp
int3
add
sbb
jg
rorb
loope
fcomps
daa
jp
loopne
mov
sbb
sub
in
scas
hlt
sub
repz
imul
jecxz
inc
mov
outsl
movsb
dec
xor
xor
movsb
test
sub
mov
and
loopne
xlat
push
push
adc
or
pop
and
js,pt
cmc
ljmp
cld
xlat
cmpl
xor
stos
cltd
aam
add
and
cmp
cmpsb
icebp
jae
out
add
and
sti
stc
fisubl
inc
and
jle
es
movsb
adc
repz
loopne
push
dec
xlat
xchg
pop
adc
and
in
cmp
cli
jnp
cmp
jno
mov
mov
lret
stc
mov
push
cwtl
add
or
xchg
std
daa
dec
mov
iret
cli
sub
adc
push
mov
jge
ljmp
xor
jmp
aaa
jle
sbb
pop
jecxz
inc
les
push
push
push
rcr
xchg
pop
or
mov
push
push
mov
jg
sbb
and
xor
aad
or
ss
aas
pop
push
mov
testb
pop
stos
stos
arpl
jb
mov
inc
dec
mov
push
jnp
sub
mov
xor
mov
lods
xchg
xor
dec
fnstsw
arpl
popf
je
adc
addl
jbe
mov
js
mov
in
scas
pop
add
pop
mov
mov
mov
jno
mov
in
jp
inc
repz
mov
int
insl
xchg
int
test
in
jne
xchg
mov
scas
movsb
sbb
mov
xchg
mov
pop
mov
push
xchg
jne
jb
lock
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
inc
xor
jl
sarb
popf
imul
int3
fldl
push
mov
mov
push
jle
mov
pop
outsb
fidivrl
pusha
pop
hlt
mov
push
sub
cwtl
jns
push
addr16
cs
add
sbb
testb
or
fimuls
leave
sbb
mov
push
flds
pop
jno
and
aad
ss
movsb
push
sbb
mov
and
loop
test
adc
out
call
add
ss
mov
popf
daa
ljmp
pop
add
icebp
xchg
jnp
aad
mov
leave
mov
xor
scas
loopne
add
or
outsb
ja
xlat
xchg
pop
push
adc
rcrl
rcll
pushw
and
mov
sbb
js
mov
mov
dec
jecxz
push
lret
lret
xchg
lea
ds
pop
in
add
outsl
mov
shlb
inc
pushf
jecxz
mov
into
ret
or
loope
cli
add
cmpb
mov
sbb
mov
jp
mov
cmc
inc
jns
std
or
rol
ret
fimuls
jl
repnz
dec
lock
in
outsb
rolb
xor
mov
outsl
cmpsb
mov
sbb
test
mov
jge
inc
scas
add
xchg
xchg
in
sbb
jge
push
loope
sbb
mov
push
push
xchg
cwtl
lods
adc
mov
les
inc
push
fstl
lea
stos
adc
insb
mov
outsl
out
faddp
jecxz
dec
dec
lcall
sub
mov
push
cmp
leave
mov
mov
out
mov
xor
push
rorb
push
in
push
xchg
aad
dec
and
sarl
lds
inc
hlt
add
mov
pop
out
xor
je
dec
bound
push
inc
mov
jae
int3
sbb
add
sti
pop
mov
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
aam
xchg
repz
mov
loopne
mov
mov
push
xchg
dec
movsb
ljmp
aad
push
frstor
les
cltd
and
xor
gs
xchg
call
aaa
orb
or
shlb
mov
mov
pop
jle
mov
fisttpll
jl
fstl
inc
dec
pop
add
leave
loopne
out
insb
xor
mov
mov
mov
pop
ficompl
clc
adc
aam
cs
shlb
xchg
cmp
add
sbb
fcompl
xlat
repnz
cmp
daa
push
jbe
adc
xor
xchg
out
xchg
data16
mov
push
imul
inc
and
xchg
shrb
or
jg
pop
lret
jmp
pop
icebp
jb
lods
lea
jns
inc
push
iret
or
mov
mov
inc
mov
cmpsb
outsl
into
jns
sub
xchg
mov
decb
dec
jno
subl
nop
add
je
test
adc
mov
push
leave
add
pop
cmp
lahf
push
mov
rorb
movsb
clc
adc
in
call
mov
cmp
inc
imul
mov
xor
xor
push
inc
inc
fcomps
repz
leave
mov
mov
movsl
int
push
push
mov
das
inc
roll
int
jmp
mov
xchg
jne
out
fwait
call
pop
arpl
cmc
aam
or
lcall
pushf
enter
shll
mov
outsl
rcrl
mov
inc
test
sarl
jo
xor
fidivrs
dec
xchg
mov
sub
sti
push
stc
jbe
aam
xor
out
cmc
sti
hlt
sub
dec
pop
jle
xorb
adc
xchg
and
cli
scas
mov
pop
mov
add
test
xchg
or
push
xor
shl
scas
or
jge
or
incl
inc
and
and
jmp
xor
frstor
test
or
shrl
sarb
lret
mov
xchg
or
testb
test
mov
jae
test
jb
rorb
sub
sub
aaa
xchg
and
mov
leave
pop
cld
cmpsl
and
rcl
jb
popf
pushf
sub
mov
xchg
mov
cmp
cmp
inc
aam
mov
cs
inc
insl
cmp
stos
push
sbb
orb
lods
cmpsl
popf
add
ljmp
jmp
rcl
das
xor
out
icebp
adc
faddl
inc
jl
xor
loopne
movb
aas
cmc
sub
stc
jge
js
xor
and
out
mov
mov
push
pop
pusha
inc
out
push
popf
test
mov
loope
jb
xchg
and
in
sub
push
into
call
and
pop
pop
cld
fiadds
in
daa
mov
mov
jns
nop
sub
frstor
dec
lcall
lock
hlt
cmp
xchg
dec
push
cmp
mov
add
push
es
popf
leave
outsl
int
xchg
rclb
or
adc
or
fisttpl
jae
daa
and
call
dec
push
adc
xor
push
cmc
sub
push
orb
and
ja
jae
jo
push
cmp
pushf
clc
add
test
movsb
neg
sbb
push
fcoml
cmp
imul
mov
notb
aam
lret
cmp
fwait
nop
nop
cld
jns
ret
mov
int
adc
pop
in
lods
std
mov
sarl
cltd
jne
das
or
push
sub
lea
dec
outsb
mov
into
sub
inc
sbb
mov
sbb
jo
or
outsb
jecxz
fmull
std
push
jp
daa
xchg
movsb
aam
sub
mov
adc
mov
xchg
popa
dec
mov
loop
sub
jl
movsl
xchg
mov
push
out
xchg
out
push
ja
jl
and
sbbb
add
mov
movl
mov
jmp
sub
ljmp
in
xchg
lsl
jecxz
xor
mov
into
in
xchg
and
pusha
inc
rolb
jmp
enter
or
xor
enter
xchg
dec
addr16
sahf
cmp
jne
sub
add
jbe
dec
loope
pop
imul
fcompl
orb
decl
int
or
add
fs
mov
loop
imul
cmp
in
push
mov
fcompp
push
jo
sbbl
subl
add
or
dec
mov
frstor
add
pusha
mov
std
ret
mov
icebp
pop
ljmp
dec
fcompl
cltd
in
cmpl
repnz
aam
rcrl
xchg
jg
or
mov
pusha
mov
dec
mov
std
popa
sbb
enter
jp
test
mov
rcll
inc
adc
lahf
test
xor
int3
mov
fidivrs
aas
xchg
repz
push
sub
xor
lcall
lods
imul
xor
sbb
inc
in
and
outsl
aaa
outsl
mov
mov
cmp
dec
movsb
lock
movsl
je
mov
rolb
cmc
adc
inc
mov
sub
imull
mov
xchg
add
pushf
and
cmp
fstl
movsl
lret
int3
mov
inc
or
aad
lea
cmp
cmpsb
and
cmp
scas
mov
add
or
outsb
push
outsl
jno
push
jbe
test
dec
xor
mov
cmpsl
sub
mov
in
cmp
mov
cwtl
jnp
adc
mov
pop
in
cmp
ja
scas
mov
jno
mov
mov
idiv
scas
pop
das
mov
fsub
bound
push
movsl
pushf
outsl
xchg
mov
push
movsl
leave
pop
push
aas
mov
daa
loopne
roll
pop
pushf
pusha
sub
in
imul
das
push
sbb
xor
and
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
fsubr
in
pop
xor
mov
xchg
dec
mov
lret
arpl
ja
in
fmull
call
inc
cs
push
aam
push
mov
mov
cmp
dec
test
lock
mov
ds
adc
xchg
pop
fstpl
add
jle
fmuls
ret
lahf
or
xlat
je
inc
mov
jg
push
movsl
inc
lock
shll
mov
testb
mov
push
and
mov
pop
pop
push
jp
jp
mov
sti
or
int3
inc
test
loope
orb
sub
sub
cltd
cmpsl
lcall
add
mov
lret
inc
sahf
pop
test
loop
adc
push
and
hlt
mov
popf
loopne
jge
or
sbb
sbb
dec
pop
and
mov
daa
mov
aam
sar
out
mov
mov
mov
jp
xchg
lret
push
fmul
lods
push
push
mov
jle
mull
sub
push
fsubl
mov
cmp
lcall
lods
call
mov
push
pop
enter
insl
push
dec
loope
push
cmp
aas
bnd
test
cmp
imul
iret
mov
in
fdivl
sub
xchg
mov
in
aaa
inc
mov
int3
push
call
rolb
mov
adc
rcl
lahf
fs
imul
pop
pop
das
pop
sub
inc
imul
data16
inc
mov
lret
repz
inc
orl
sbb
sub
adc
mov
and
add
mov
sarl
dec
fbld
ljmp
imul
mov
adc
sub
icebp
inc
fisubl
mov
sbb
sbb
cli
fbstp
pop
and
js
rcrb
mov
mov
in
dec
cli
aam
sbb
stos
jo
std
adc
sbb
sbb
sub
sub
es
add
in
cli
lea
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
rcl
cmp
mov
adc
xchg
mov
mov
jne
cltd
or
in
jle
mov
jle
fisttpl
push
push
mov
dec
mov
mov
xchg
jno
push
add
jns
inc
cmpsl
out
insl
fadds
xchg
sbbl
mov
jnp
cwtl
flds
je
call
xchg
adc
mov
mov
xchg
push
test
adc
out
cmpl
lret
cmp
jp
stos
sahf
and
movsl
mov
jo
int3
mov
inc
jbe
insl
imul
and
mov
xchg
ret
out
pushf
icebp
dec
cmpsb
sub
inc
sarb
pop
cmp
add
sahf
test
cmpsl
das
mov
xchg
push
in
in
adc
cli
les
sahf
out
jle
and
pop
sbb
or
cs
mov
add
hlt
push
or
mov
stos
xor
jp
xor
xor
sbb
push
sti
push
push
mov
lahf
pop
dec
testl
mov
add
rorb
push
sub
push
int
lock
dec
aad
lcall
sarl
fdivrp
cmp
inc
mov
fstps
loope
cmc
cwtl
or
pop
stos
rcl
dec
ljmp
mov
les
mov
sahf
sub
out
adc
mov
fidivrl
scas
jle
jne
sbb
clc
or
sbb
dec
push
xchg
mov
cmpsl
push
cld
and
movsl
sbb
fucomi
mov
adc
adc
xchg
jge
jae
or
lret
pop
aaa
repz
mov
dec
cld
out
jg
push
sbb
push
push
pop
ja,pt
cmp
sbb
ljmp
add
rorl
push
jae
pop
mov
xchg
je
and
fs
inc
cmp
fs
nop
xor
sbb
push
icebp
ret
and
fdivrs
loopne
arpl
mov
lgs
imul
js
xor
int3
mov
mov
out
add
adc
mov
push
and
mov
cmp
fadds
push
pop
cmp
adc
sub
cmc
arpl
es
fbstp
cmpsl
add
push
lahf
cltd
push
sub
daa
popa
shll
xchg
ret
adc
push
add
jnp
add
lea
mov
jbe
in
scas
mov
fcmovb
arpl
cmp
ss
idivl
arpl
push
lea
jb
xchg
cmp
mov
adc
push
in
jbe
add
pushf
mov
lds
out
std
insl
arpl
xchg
mov
and
fwait
push
test
pop
pop
push
lcall
push
stos
mov
xchg
mov
leave
and
cmp
inc
adc
cmpsb
test
xchg
loope
std
das
mov
es
ret
in
cmpsl
lret
xchg
sub
insl
cmp
ss
add
addb
lods
aad
jecxz
cmpsl
jmp
js
sbb
cvtps2pi
sub
mov
and
mov
das
adc
sub
cmp
jle
jb
jne
mov
out
sbb
loop
dec
mov
scas
push
out
sbb
fsubrl
cmpsl
flds
movsl
xor
add
lods
jl
inc
sbb
xor
pusha
jle
int3
or
xlat
orb
or
sub
jbe
or
fs
ljmp
mov
in
jl
mov
add
add
test
lcall
jnp
add
test
ljmp
add
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
sbb
sarb
fadds
test
cmp
sarb
scas
add
mov
jns
insb
cli
xor
aaa
out
push
xchg
dec
ja
pop
push
loopne,pt
mov
addb
leave
adc
sub
pushf
mov
std
or
jmp
mov
mov
iret
mov
push
push
mov
mov
dec
add
mov
adc
mov
push
lods
push
fisubl
shll
cmc
notb
dec
push
stos
and
or
testb
int3
mov
or
jg
sub
out
repz
mov
jae
in
pushf
add
pop
jle
add
xchg
inc
adc
mov
inc
xchg
icebp
mov
mov
out
jbe
pop
fiadds
mov
packssdw
cmp
loope
xchg
mov
mov
adc
int3
arpl
rcll
mov
mov
pop
xor
inc
lock
scas
mov
dec
pop
je
lock
inc
mulb
ret
enter
adc
int3
mov
leave
dec
mov
int
adc
mov
in
pop
and
cltd
into
jmp
and
fcmove
ficomps
mov
aaa
iret
inc
add
les
sbb
iret
push
repz
out
jo
xchg
je
test
sahf
cwtd
and
and
outsb
loopne
lret
pop
sub
ljmp
pop
dec
push
push
push
jno
in
cld
pop
loopne
xor
jmp
push
mov
dec
jmp
xchg
xchg
xor
jne
xor
ret
incl
cltd
mov
and
mov
int3
xchg
xor
pop
dec
pop
enter
scas
push
push
or
int3
fsubrp
nop
mov
in
repz
mov
push
cld
xchg
dec
sub
call
push
mov
stc
push
mov
scas
iret
stc
jle,pt
jmp
or
lret
incb
cld
inc
fs
cltd
add
pop
dec
pop
shlb
out
inc
int
mov
mov
ds
fisttpll
xor
int3
mov
add
jb
addr16
cmp
lret
cli
xor
ja
cmp
icebp
fsubrl
jno
sbb
cmp
push
adc
jnp
xchg
lea
mov
cs
enter
dec
jle
mov
dec
mov
sub
scas
popf
aam
xor
into
pop
lods
mov
push
inc
scas
pop
cmp
dec
push
inc
sub
dec
cmp
cmp
dec
ds
sub
sbb
shrl
and
movsbl
sbb
int3
das
insb
cli
jae
inc
cs
pop
int3
subl
and
lahf
cwtl
push
cmc
loopne
mov
repz
lahf
push
iret
mov
and
mov
ret
movsb
mov
sub
aam
cld
xor
mov
fisubrs
popf
cmp
and
xchg
dec
xorl
push
or
pop
cmpsl
cmpsb
or
mov
bound
inc
or
or
loop
popf
or
sbbb
sub
add
daa
jno
push
es
fcmovnb
jns
xchg
mov
mov
push
lcall
jge
jbe,pn
add
out
stos
inc
xchg
add
jecxz
add
fsubs
shll
jge
or
pop
divl
shlb
mov
pop
jmp
mov
xlat
dec
or
popf
addb
inc
dec
mov
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
mov
nop
jmp
sarb
fwait
dec
les
cmpsb
filds
in
inc
and
or
sbb
insl
fildll
fldt
inc
fwait
ret
arpl
sub
jecxz
repnz
pop
dec
outsl
jmp
xchg
push
sbb
cmp
out
test
popa
adc
or
test
mov
test
pushf
lds
push
push
bound
add
decl
dec
jne
push
push
sarl
loop
out
xlat
push
mov
ja
insb
rclb
and
xor
ljmp
xchg
sahf
mov
fadds
sbb
mov
or
cmc
ret
mov
mov
arpl
sti
aas
xor
mov
popa
ja
dec
lock
jno
mov
or
fsts
dec
repnz
dec
popf
das
sbb
lret
jmp
aam
xchg
jb
sar
fstpl
ror
movsb
push
cmp
mov
addr16
pop
inc
shl
leave
aad
cmpsl
push
lods
pop
lret
lock
pop
sbb
push
in
mov
cmp
cltd
scas
fiadds
je
jge
dec
pop
add
ret
inc
inc
scas
arpl
lea
pop
mov
mov
xlat
sub
dec
and
lods
sub
fidivl
mov
outsl
xor
hlt
imul
in
push
imul
adc
or
aad
clc
daa
pushf
dec
mov
jns
popf
add
mov
lods
xchg
adc
scas
dec
lods
fwait
insl
aas
mov
ret
loop
inc
sti
lods
jnp
or
mov
aad
or
dec
dec
or
idiv
sub
mov
mov
mov
pop
lods
ficompl
mov
mov
rolb
cmc
sub
jne
std
push
stc
adc
cld
das
data16
aaa
add
fwait
outsb
xchg
pop
mov
fucom
rcl
cmc
or
jg
stc
insb
fwait
push
sbb
ja
insl
xlat
jmp
outsb
loop
mov
in
negl
sbb
fldcw
stc
sbbb
js
add
mov
jnp
icebp
je
repz
bound
xchg
roll
cmp
popa
sub
xor
jp
push
int3
scas
or
pushf
pushf
mov
adc
test
pop
testb
mov
or
jns
inc
xchg
push
pop
add
jecxz
and
mov
adc
shlb
push
popa
mov
push
in
subl
shl
xchg
clc
call
jne
popa
cmpl
or
repz
adc
stos
mov
jb
adc
pop
call
mov
sub
outsb
cli
fsubl
dec
xchg
and
cli
inc
inc
sbb
sub
test
mov
lcall
orl
xor
int3
and
xor
lcall
mov
fcoml
incb
xchg
in
std
repnz
mov
and
lock
and
iret
jmp
leave
in
shl
fisubrl
nop
cld
ret
push
mov
jno
or
pop
push
inc
sarb
xlat
jbe
sbb
les
ds
pop
mov
test
ljmp
aas
push
ret
ljmp
push
xchg
inc
fcomip
dec
mov
jne
add
xor
ljmp
orb
mov
mov
fmuls
fildl
cs
mov
sbb
xchg
xchg
add
cmp
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
push
test
xchg
jge
inc
clc
negl
xor
lock
sub
inc
pusha
xchg
dec
loop
stos
sbb
add
lods
xor
mov
xor
in
xor
xchg
sub
adc
enter
cld
sub
pop
out
js
push
loope
cmp
dec
outsb
cmp
sub
sub
je
mov
mov
je
jb
mov
movsb
iret
int3
sbb
mov
jl
nop
sbb
mov
fwait
push
fstps
sbb
push
fidivrl
insl
pushf
push
mov
shrl
xchg
xchg
adc
aam
push
pop
mov
push
insl
mov
lahf
xor
mov
or
shrl
jp
das
nop
hlt
ds
mov
icebp
mov
ret
rcl
dec
mov
and
add
and
fwait
add
push
mov
les
orl
out
jle
or
test
sub
cmpsb
fcmove
xchg
scas
dec
mov
mov
fdivrs
lret
sub
dec
out
sarb
jle
jg
xchg
mov
popf
mov
xor
fisubrs
pop
ficompl
and
das
mov
pop
pop
vucomiss
bound
cmp
sbb
fdivr
jno
sbb
imul
test
test
or
arpl
pop
or
inc
icebp
mov
pop
ja
jge
rcrl
das
push
sbb
fcompl
adc
nop
out
arpl
push
clc
mov
loopne
adc
aas
xor
mov
sub
pop
out
sub
sarb
jno
sahf
mov
or
pop
push
jl
mov
xor
xlat
pushf
or
jne
inc
xor
xchg
dec
mov
in
shrb
fadd
mov
push
xchg
sub
test
popa
shlb
sub
cmpsb
inc
pop
and
lcall
mov
and
ret
adc
adc
out
pushf
xchg
incb
sbb
test
lret
cmp
jbe
mov
sbb
lock
aam
cmp
mov
test
cmp
in
inc
cli
pop
mov
mov
jmp
pop
scas
jge
les
xchg
les
sbb
js
pop
imul
aad
add
cmc
xchg
and
sub
je
xor
fcomps
xor
lds
sahf
or
loop
cld
mov
inc
sahf
push
stos
pop
jae
cld
sub
rcll
pop
daa
js
mov
mov
pop
fsubrs
pop
mov
movsb
das
jmp
popa
cwtl
pop
pop
mov
push
inc
mov
cmp
sub
xchg
cmp
xor
sti
sti
in
dec
mov
ljmp
stos
fwait
out
mov
xchg
mov
ss
and
push
imul
cli
aas
push
and
sub
xlat
dec
mov
xor
push
fsubrs
fdivs
imulb
popa
std
cmpsb
ss
in
out
jb
rorl
adc
ss
icebp
mov
cmp
fwait
je
lcall
adc
mov
jp
aam
inc
xchg
mov
jle
call
lods
in
dec
jg
mov
adc
mov
mov
and
mov
mov
mov
cmp
cwtl
fnstcw
push
inc
push
lods
cmp
sub
add
das
mov
xor
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
inc
mov
sarb
mov
fiaddl
ret
faddl
icebp
in
mov
and
xchg
lret
int3
cld
push
adc
jl
sub
or
adc
les
in
gs
pop
push
and
bound
sbb
add
mov
or
es
add
movsl
enter
addb
and
mov
test
inc
in
addr16
sub
inc
aaa
mov
push
stos
mov
ss
shlb
xchg
out
lahf
xchg
orl
adc
mov
movl
lock
fcmovnu
lret
cwtl
inc
orb
xchg
jne
in
xor
mov
loope
pop
data16
out
jge
stos
das
mov
mov
jae
push
xor
repnz
cwtl
hlt
xchg
add
sub
push
data16
xor
cwtl
fs
les
xchg
inc
cli
jecxz
jb
jbe
xor
mov
xor
out
out
adc
fidivs
sbb
mov
and
adc
and
adc
cld
pop
in
sarb
rcrl
mov
inc
push
xchg
out
push
push
iret
cld
add
push
jbe
mov
dec
pop
fsubrp
and
jge
idivb
fisttpl
lods
jbe
xchg
in
pop
lahf
push
push
mov
cld
add
lahf
adc
addr16
cmp
pop
push
jl
jge
push
clc
inc
xchg
mov
push
xchg
aad
adcb
jb
mov
jns
xchg
and
ds
push
test
in
ja
mov
test
lret
loopne
aaa
jecxz
mov
sahf
inc
sbb
outsl
aas
add
inc
stc
lahf
cwtl
es
mov
test
pop
push
pop
mov
roll
mov
cmp
cmp
jne
or
aaa
adc
sti
xor
mov
into
xchg
push
and
ret
adc
dec
push
add
mov
icebp
out
arpl
xor
lahf
mov
mov
jne
lret
aas
mov
popl
popl
repnz
orl
movsl
ljmp
and
add
es
in
cwtl
pushf
aad
test
ja
push
jae
add
std
scas
aad
xlat
sub
push
push
pop
cwtl
mov
xor
and
or
pop
mov
int
lea
sbb
dec
push
and
leave
loopne
pop
filds
mov
xor
test
or
into
dec
cmp
sub
mov
pop
cmp
stos
push
dec
dec
aas
negl
or
push
xchg
fildl
and
mov
cmpsl
pop
decb
adc
and
pop
shl
adc
cs
sbb
dec
insl
scas
test
stos
add
dec
in
xor
aad
adc
mov
mov
jg
push
mov
jecxz
out
jl
mov
push
add
fldl
and
std
roll
mov
fsubs
addl
inc
mov
jg
mov
ficoml
mov
inc
cld
xor
sub
out
xchg
pop
pusha
jbe
pop
cwtl
mov
mov
adc
add
inc
mull
push
loopne
imul
pop
inc
fdivrl
mov
scas
push
push
pop
ficoml
xchg
xchg
xor
and
hlt
or
imul
jae
push
mov
testb
xor
inc
nop
sub
imul
jecxz
leave
in
jmp
cmp
add
cmp
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
sbb
mov
push
or
push
addr16
jae
or
out
mov
or
mov
dec
sbb
jle
movsl
repnz
in
insl
add
sbb
or
int
dec
test
dec
fmull
mov
mov
loope
inc
pop
fcomps
es
adc
push
mov
es
out
jne
xchg
fistps
push
test
je
or
cmpsb
imul
aam
das
dec
mov
add
das
xlat
sahf
stc
stos
mov
inc
fisubrl
daa
neg
mov
xor
ficomps
fadds
nop
pop
cmp
nop
sbb
and
pop
mov
mov
pop
xchg
xchg
in
pop
mov
xchg
mov
sub
push
jbe
cmp
cmp
lods
fs
dec
stc
mov
aaa
loope
dec
leave
mov
push
cmp
lock
ret
cli
push
add
movsb
jbe
inc
xlat
adc
or
mov
dec
stc
clc
sbb
inc
fs
xchg
mov
inc
add
inc
mov
pop
adc
fcmovb
push
mov
jp
arpl
sbb
aad
scas
sub
jbe
mov
lds
aaa
int
shrb
inc
xor
lahf
cltd
rcl
jns
sbb
stos
mov
subl
jae
add
push
movsb
pop
and
or
mov
pop
adc
add
hlt
orl
push
xchg
or
inc
pop
push
imul
loope
mov
inc
icebp
mov
mov
inc
shll
imul
add
jg
mov
nop
rolb
mov
xchg
push
jl
push
dec
mov
and
xchg
test
or
aad
xchg
cwtl
test
lahf
sub
lods
add
jge
mov
dec
hlt
sub
rorl
in
adc
test
inc
push
addb
fs
enter
pop
shl
rcll
lcall
inc
shrl
fisttps
das
dec
fdivrl
xchg
jo
shll
xor
divb
insb
pop
arpl
cmp
mov
and
aas
inc
pushf
or
sbb
mov
iret
mov
ret
add
xchg
outsb
add
enter
add
mov
xorb
fmull
pop
mov
ret
xor
clc
cmp
out
js
leave
mov
push
aam
add
inc
xchg
mov
mov
cmp
mov
rcr
adc
call
inc
mov
iret
cwtl
in
or
inc
das
push
mov
adc
mov
dec
insl
rol
push
xchg
sbb
test
es
and
stos
dec
mov
adc
shl
pushf
rorb
cmp
call
dec
mov
sbbb
cmp
andb
std
cld
dec
push
lds
aam
into
mov
addr16
rcr
scas
mov
jns
int
pop
add
sbb
imul
lcall
notl
mov
dec
loopnew
pop
mov
add
jae
scas
and
into
push
sbb
xor
int
int3
daa
jle
aas
adc
mov
add
add
jbe
sub
nop
jg
cmp
mov
inc
xchg
insb
cmp
xor
movb
scas
cmp
mov
lahf
mov
out
lods
xchg
bound
push
movsl
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
cmp
lods
jecxz
sarb
mov
jg
mov
fstps
lahf
data16
lret
jbe
sahf
loopne
loope
ja
cmp
add
popa
daa
jb
sub
call
xchg
xchg
and
ja
xchg
fwait
movsb
inc
in
mov
sbb
imul
and
in
xchg
cmp
pop
insl
jo
aam
ret
push
and
lods
inc
jge
jae
cmpsl
fs
xlat
lahf
and
fbstp
into
sbb
xchg
jno
loopne
ja
cmp
xor
adc
repz
lret
mov
push
aas
pop
xorb
sub
push
and
mov
sub
ljmp
dec
add
arpl
jle
mov
xchg
bound
outsl
mov
or
decb
imul
test
add
jo
fbld
jbe
xor
pusha
daa
adc
js
insl
adc
jg
mov
cld
js
add
cltd
call
inc
insl
ror
dec
xor
xor
lock
or
mov
test
xor
push
mov
jbe
inc
fwait
ljmp
lods
sti
xchg
fs
int
push
jg
pop
push
xchg
adc
jno
cmp
test
and
sti
lods
cltd
jmp
sub
in
push
cmpsl
add
inc
xchg
cmp
or
fcomps
dec
daa
jecxz
insb
mov
inc
xor
push
jo
mov
or
iret
bound
mov
loop
mov
xchg
jns
stc
adc
ds
xor
xchg
into
jecxz
jg
mov
lods
mov
cld
int3
ss
cmpsl
bound
ja
mov
iret
js
dec
push
mov
and
push
in
and
sbb
cmp
std
dec
ret
xor
mov
dec
dec
mov
xchg
insb
hlt
out
xchg
stc
cli
lock
or
push
in
push
xchg
fcmovnu
mov
add
pop
nop
dec
mov
jge
dec
ljmp
shlb
mov
cmpsl
in
push
mov
or
inc
mov
mov
xchg
xor
add
inc
gs
addr16
fldl
cmp
scas
cmp
and
xor
in
lods
push
ror
imul
adc
nop
jge
mov
mov
xchg
fistl
mov
fucomp
popa
fwait
inc
jp
aad
test
or
ja
push
mov
mov
push
movsl
sub
push
mov
mov
sbb
mov
sub
xor
jge
push
ljmp
movsl
cmp
ds
popfw
or
mov
or
mov
dec
sub
pop
jmp
movsb
ds
loope
add
bound
cmpsl
xchg
je
test
stc
jle
outsb
mov
test
xchg
test
and
cmp
sti
add
in
ljmp
iret
sub
mov
cli
and
xchg
hlt
adc
ljmp
pusha
cltd
sbb
pop
jge
jge
addr16
in
clc
jne
cs
cmpsl
inc
outsl
inc
sarl
int
push
lds
cmc
mov
push
push
xchg
addr16
daa
subb
mov
inc
add
popl
enter
inc
xor
cmp
add
pop
lcall
sar
mov
xchg
mov
inc
test
call
jmp
jno
xchg
sbb
clc
lcall
jp
ret
in
jg
call
std
pushf
ret
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
ret
add
mov
call
rcl
xor
lea
scas
xchg
cmp
inc
ret
push
aaa
movsl
gs
cmp
jle
dec
or
std
cltd
fwait
cmpb
xchg
or
loope
mov
xchg
mov
and
aam
jae
movsb
xor
stc
cmp
mov
mov
mov
movsl
and
push
pop
sar
jbe
out
pop
jmp
negl
cld
lret
inc
adc
mov
shll
mov
insl
pop
add
inc
sahf
sbb
jge
jnp
in
dec
xor
arpl
daa
ss
mov
loopne
cwtl
add
mov
aas
in
xchg
dec
imul
or
jae
movsb
xchg
add
jmp
add
stos
mov
cmpl
stos
jp
sti
mov
jge
daa
xchg
repz
add
ret
addr16
inc
fs
adc
loop
lods
icebp
xchg
leave
jmp
or
les
mov
jns
clc
lods
repz
mov
mov
lret
inc
lods
movsl
adc
fs
xor
xchg
jle
add
imul
push
inc
fnsave
hlt
dec
pushf
push
loop
jno
mov
mov
cmp
test
cmp
pop
xor
pop
jne
sbb
int
cmpsl
adc
inc
add
jnp
fwait
push
rcr
mov
cmp
inc
push
xor
dec
sar
loop
add
adc
dec
fistl
cmp
dec
jl
adc
dec
jecxz
lds
and
sbb
or
mov
fists
mov
fists
lret
xor
push
add
loop
lretw
push
lret
bound
jecxz
inc
ss
jecxz
xor
or
sbb
das
push
dec
cmc
mov
int
pop
xor
jl
dec
cli
mov
mov
dec
les
das
or
xor
pushf
mov
lahf
lret
lea
outsb
jmp
inc
lock
xor
push
xchg
push
or
or
mov
pop
cmc
mov
into
test
xor
pop
mov
es
push
ss
and
out
shr
cld
jge
mov
sub
mov
je
mov
jae
and
rcrl
enter
jne
adc
jb
adc
mov
jb
insl
mov
sub
mov
mov
push
ret
cmp
pop
int3
lea
cmpsb
fimull
iret
xor
aaa
lahf
xlat
jae
adc
fmuls
lea
xchg
xor
jge
xchg
rorl
or
dec
int
cwtl
je
iret
ftst
negl
sub
cmpsl
scas
cmpsb
sbb
fnstcw
orb
cmpsb
rorl
loop
int3
mov
mov
lods
push
cwtl
push
and
jl
scas
fnstsw
lret
pop
pop
inc
mov
pop
add
add
push
out
aad
cmp
int
jg
add
adc
pop
lds
dec
adc
push
inc
inc
je
loop
xor
inc
sbb
ljmp
cmp
cld
leave
lods
mov
jp
rorl
mov
dec
jns
cmpsb
mov
sub
les
mov
lock
push
dec
fistpl
rol
mov
xchg
test
lods
cmp
cmpsl
sub
int
out
mov
bound
out
int3
je
stc
sub
andb
pop
jne
jo
orl
push
add
add
jmp
cld
sbb
mov
sahf
sub
ja
mov
push
adc
lds
pop
das
add
lea
test
jbe
adcb
pushf
or
sub
es
test
mov
sbb
push
push
pop
xlat
pop
imul
ss
jecxz
pop
repz
jnp
lcall
mov
loope
sbb
iret
jg
jns
test
mov
pop
xor
lahf
jnp
pop
xchg
adc
rcrb
aas
scas
push
sbb
pop
or
es
ret
bnd
inc
xor
mov
xlat
fadds
mov
mov
dec
push
rcll
or
ret
mov
std
pop
addr16
addr16
mov
daa
mov
sbb
jg
repnz
daa
fbld
lea
dec
and
popa
fnstenv
imul
rcrb
lods
xchg
and
fisttps
popa
dec
dec
dec
jo
push
ret
out
push
xlat
insb
das
mov
sarb
loope
in
lds
mov
icebp
mov
mov
xor
shl
push
rclb
ljmp
pop
push
mov
stos
mov
and
adc
cmp
dec
adc
jno
pop
sub
testb
ret
mov
scas
stc
xchg
stos
subb
imul
xchg
ljmp
cmp
jecxz
into
ret
lar
xchg
into
dec
out
jp
mov
es
mov
cmpsl
scas
lds
mov
scas
or
rcll
fidivrl
loope
fldl
sub
mov
out
or
in
xor
and
push
xchg
jo
in
dec
cmp
cwtl
imull
mov
lret
stos
mov
jno
pop
ljmp
imul
daa
test
mov
mov
je
in
in
push
movsl
out
push
adc
test
jnp
insl
fldt
fldcw
inc
add
js
add
les
flds
mov
js
imul
sbb
mull
fisttpl
jb
cmp
in
mov
out
jp
imulb
adc
nop
filds
inc
or
pop
xorl
repz
rorb
jnp
mov
xchg
stos
je
test
mov
bound
adc
mov
xchg
je
dec
add
push
insl
xor
mov
movsl
or
xchg
adc
jecxz
inc
push
insb
add
sub
mov
loop
push
push
das
ss
out
data16
mov
das
jge
jns
hlt
flds
sub
aas
loope
lds
test
mov
pop
cwtl
fildl
mov
out
mov
jnp
dec
nop
lods
pusha
sub
addr16
pop
jp
mov
pop
sub
and
sti
lret
insl
aad
pop
mov
sti
sti
lods
bound
unpckhps
les
pop
shll
xchg
mov
pop
mov
dec
out
lahf
dec
cmp
es
or
pop
sbb
and
dec
adc
lods
addb
or
leave
push
inc
movsbl
sub
push
cld
cwtl
dec
adc
push
out
mov
movsb
jmp
out
cmpsb
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
mov
mov
pop
xorl
push
dec
bnd
lahf
fnsave
cld
adc
jge
imul
sbb
icebp
dec
pop
fwait
push
dec
jno
jb
sahf
sbbl
pop
fistpl
arpl
adc
push
jl
pop
push
jbe
pop
test
lahf
sub
xchg
sub
fdivrl
and
and
mov
enter
testb
xchg
xchg
js
jb
dec
xchg
add
pop
les
popa
mov
test
adc
and
xor
into
stos
sbbl
jg
ss
push
popa
pop
mov
addr16
pop
push
stos
xchg
in
or
out
xchg
dec
testl
and
test
adc
or
lods
jnp
dec
es
jmp
add
cmp
mov
push
pop
cli
jecxz
pop
data16
test
lcall
push
pop
mov
dec
mov
mov
popf
mov
push
out
leave
popf
dec
xchg
mov
mov
lahf
cmp
ja
xor
inc
scas
addr16
add
cmp
mov
sub
loope
adc
nop
fs
ret
sbb
mov
int
outsb
xchg
inc
fldenv
cmp
shrl
adc
fwait
inc
mov
or
sbb
add
mov
nop
jns
inc
dec
sub
xchg
sbb
enter
jg
xor
aad
insl
mov
lahf
adc
sub
inc
bound
dec
xlat
call
mov
pop
jl
xorb
sbb
icebp
repz
sub
push
cmp
push
pop
enter
or
decb
stos
ficoms
add
mov
shll
cli
roll
mov
xchg
cmpb
pop
cmpb
cli
repz
inc
xlat
and
sahf
mov
popf
cmp
mov
cs
aaa
rcr
push
inc
cmp
xchg
test
jno
add
sbb
jnp
add
mov
scas
jecxz
ret
sbb
mov
fs
out
sub
pop
jo
leave
fwait
push
mov
fcmovne
and
or
and
pushf
inc
sub
push
and
lds
addr16
idivb
ljmp
xchg
sbb
pop
fmulp
or
cltd
dec
and
xchg
dec
jb
ljmp
fcomp
out
xor
andb
xchg
mov
xchg
js
arpl
fisttps
push
cmpsb
inc
mov
add
movsl
outsb
adc
mov
shll
dec
cmpl
stc
push
or
sbb
negb
mov
adc
xlat
mov
push
lret
dec
rcrl
jecxz
xchg
pop
aaa
fdivl
rorb
xchg
dec
push
push
es
fistpll
dec
push
cli
jg
mov
jmp
jae
js
jae
sbb
mov
fcmovbe
hlt
fwait
lods
insl
pop
inc
mov
mov
cmp
aas
pushf
xor
mov
mov
fldt
inc
in
jle
loop
ret
cmp
xor
gs
bound
xor
iret
rcr
data16
cmpsl
roll
add
sahf
mov
mov
jecxz
insb
xor
xchg
jmp
pop
inc
fisttpll
sbb
jns
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
dec
clc
mov
mov
push
xchg
mov
leave
jl
cmp
mov
mov
insb
push
push
xlat
pop
inc
in
mov
cmpsl
and
xchg
inc
sub
sbb
ret
and
mov
pushl
sub
inc
inc
lret
push
mov
sti
imull
adc
inc
and
outsb
lods
xchg
add
fsubrl
mov
shll
scas
rcrb
popa
sarl
push
dec
or
mov
sahf
in
sbb
data16
fdivs
or
arpl
cmp
or
insl
pop
arpl
jmp
mov
sub
push
test
jae
insl
lds
mov
push
mov
pop
mov
enter
repnz
and
mov
xchg
into
xor
sub
push
and
stos
mov
lret
pop
sarl
ret
addr16
jl
jg
xchg
mov
test
cmpsb
push
data16
lcall
aas
inc
stos
xchg
test
pop
rep
or
add
sbb
push
roll
insb
inc
daa
outsb
mull
shlb
jle
xchg
outsl
addr16
cmpsb
mov
xchg
inc
add
xchg
inc
ss
in
xchg
jg
jp
mov
fsts
out
scas
shlb
decl
mov
incl
sub
xor
xchg
int3
scas
out
or
cmp
pushf
pop
cmp
adc
push
ss
mov
clc
mov
ljmp
je
cmp
add
andb
call
into
insb
mov
bound
and
xchg
loope
gs
clc
dec
xchg
jo
mov
shll
jmp
outsb
loopne
daa
sbb
jl
push
xor
jns
jmp
arpl
mov
gs
cli
add
sub
jl
repz
xchg
xor
mov
mov
movsb
testl
loop
push
lcall
fildl
jle
adc
push
in
add
push
in
pop
lds
mov
push
cs
push
xchg
iret
and
and
cmp
lods
mov
in
in
xor
xor
fs
test
jne
out
aaa
lods
jmp
loop
cmp
adc
ljmp
lods
cmp
movsl
shl
sub
add
out
into
stos
pop
lock
dec
movsb
js
xchg
iret
sub
fcomip
test
sbb
pop
mov
stos
jnp
add
adc
cmp
adc
dec
fwait
or
jl
lds
cmp
or
xchg
adc
add
mov
subb
sbb
cmp
addb
aaa
cmp
sti
das
out
pop
push
test
push
cmc
lods
loop
add
add
xchg
andl
rcrb
mov
pop
cmp
filds
cltd
inc
mov
jne
aam
out
ja
xchg
or
aad
sbb
add
scas
ljmp
shrl
mov
fcoms
mov
enter
insb
push
ret
inc
dec
std
imull
push
dec
dec
sbb
movsl
xor
jne
je
nop
leave
jle
push
lods
adc
inc
and
stc
sub
fmull
lods
int
sub
sbb
pop
lds
rcr
mov
addl
xchg
cli
cmp
jnp
test
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
popa
or
mov
mov
sbb
mov
xchg
add
xlat
jmp
add
and
ljmp
sbb
stos
dec
mov
imul
rolb
faddl
jae
into
push
mov
mov
stos
imul
jmp
add
xor
andb
imul
jge
in
leave
mov
in
in
in
inc
cmp
xchg
dec
stos
movsb
outsb
fadds
cmpb
adc
enter
jecxz
fs
xchg
icebp
jb
inc
mov
xor
add
bound
inc
jno
jmp
dec
cmp
adc
imul
xchg
jl
cld
popf
bound
sbb
out
flds
pop
mov
xor
insb
mov
ficomps
xor
test
das
scas
pop
adc
mull
pop
ret
jp
enter
xchg
cmp
sub
std
add
xchg
add
jmp
pop
mov
add
push
mov
idivl
pop
in
daa
push
sbb
aaa
insb
dec
stc
scas
push
outsl
xchg
lahf
in
inc
pop
rolb
xchg
push
xor
fidivs
insl
push
orl
int3
rep
push
push
ret
add
xor
jp
push
push
jge
sti
pushf
mov
mov
xor
cmp
ds
push
enter
loopne
sub
push
xchg
test
rorl
fisttpl
int3
pushf
add
inc
divl
adc
fists
push
test
push
data16
push
inc
jecxz
mov
enter
cwtl
jno
data16
xchg
cmp
fsubrl
jno
test
icebp
fsubp
test
inc
dec
jecxz
call
fsts
sarl
in
fimull
inc
xchg
dec
in
xorl
jb
popa
std
sbb
mov
add
mov
orl
rcll
lea
ret
xchg
adc
mov
xlat
cmc
pinsrw
int
inc
xor
lret
rcll
push
das
loop
mov
in
mov
mov
shl
jne
jp
lahf
incl
jb
gs
imul
out
outsl
int3
mov
or
dec
jge
iret
out
inc
mov
cmc
adc
or
cmpb
jne
adc
or
add
dec
cmpsl
mov
add
xchg
fdivrp
pusha
lods
icebp
cld
rorl
jae
jmp
push
push
push
mov
xchg
loop
mov
imul
push
xor
add
ds
push
and
pop
je
dec
loopne
stc
cs
mul
jmp
jns
lods
jo
icebp
sar
shrb
sub
icebp
popa
inc
pop
mov
xor
cmp
cmpsl
lds
mov
push
pop
push
sti
cmp
push
movb
push
cli
lret
popf
add
adc
mov
push
xor
xchg
aaa
adc
iret
insl
test
jns
fwait
adc
adc
aas
inc
xorl
cmpsb
jp
dec
or
mov
mov
inc
cmp
adc
pop
lahf
int
xchg
jge
inc
xlat
push
jb
jns
lcall
popf
cmc
sbb
pop
cmp
and
and
fisubrl
or
loope
mov
hlt
in
rcrb
std
jge
add
pushf
fdivs
xor
jge
lret
movsl
cwtl
bswap
pop
leave
push
ljmp
daa
adc
adc
pop
cmp
pop
inc
mov
fildl
test
in
ljmp
sar
xor
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
cltd
loopne
xchg
arpl
mov
fcoml
sbb
les
fstpt
xor
popa
adc
xor
cmp
fnsave
and
cmp
mov
mov
outsl
mov
mov
invd
es
dec
cmpsl
jl
inc
push
dec
scas
cs
andb
pop
gs
bound
adc
pushf
mov
out
out
push
sahf
dec
in
fwait
es
mov
xchg
cld
and
fdivrl
fiaddl
aas
or
mov
inc
push
jo
mov
cmp
test
push
or
imul
xlat
sbb
mov
in
push
mov
xor
mov
xor
pop
ljmp
in
sub
add
fnstsw
rorl
clc
pop
or
stos
pop
fisttps
mov
lea
sahf
setb
push
inc
pop
pop
jg
fistl
dec
inc
mov
xor
daa
pop
xor
out
ljmp
outsb
cmc
ret
inc
flds
jne
inc
cmc
mov
sub
leave
pop
test
test
jnp
aas
add
or
jbe
fmuls
cmpsb
and
ret
dec
xorl
push
loop
jmp
sub
pop
mov
inc
ret
subb
add
mov
jnp
cmp
fisubs
popw
lea
cmpsl
out
sub
iret
inc
jl
and
ret
sub
cmp
insb
sti
ret
outsb
cmp
dec
xor
xchg
call
adc
push
sbb
xor
js
mov
addr16
pushf
icebp
xchg
push
enter
adc
popf
imul
rsm
gs
out
xor
pop
inc
cmpb
jnp
hlt
hlt
push
dec
pop
mov
mov
mov
mov
pop
push
movsb
jmp
dec
sub
pop
fwait
mov
lret
outsb
jbe
fwait
xor
mov
jo
inc
insb
cmc
or
stos
mov
stos
loopne
inc
out
push
push
sub
pusha
push
imul
mov
mov
outsb
and
fiadds
xchg
add
mov
mov
loope
call
mov
lods
mov
test
std
jmp
inc
outsl
sbb
and
add
adcb
int
mov
lods
out
outsl
push
notl
data16
in
sbb
int
cmp
mov
adc
sbb
mov
pop
in
cmpsb
sub
pop
cmp
je
loope
pop
test
cli
jl
leave
pop
pandn
sahf
or
push
mov
dec
dec
jnp
loopne
dec
push
mov
adc
jnp
xor
mov
test
adc
adc
shl
mov
lea
mov
xchg
sbb
cmc
adc
dec
add
inc
adc
rorb
test
mov
or
xchg
push
mov
xchg
enter
sti
and
push
xchg
dec
inc
out
jmp
adc
mov
push
imul
hlt
ret
lret
es
sbb
pop
adc
add
daa
or
repnz
pavgw
and
mov
xchg
pop
xchg
mov
pop
add
and
jle
rcrb
enter
ret
movq
xlat
and
fmull
jbe
push
add
sbb
popa
dec
out
xchg
jbe
push
fisubrs
push
mov
loop
pop
adc
add
mov
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
mov
dec
les
ret
out
sarl
fsubrl
movsb
js
add
test
icebp
mov
dec
inc
push
cltd
jbe
cmp
pop
or
sbb
sbb
aas
inc
xchg
jbe
sbb
jo
jge
repz
xor
mov
and
std
popf
mov
mov
or
sbbb
mov
in
aam
and
adc
push
adc
mov
lods
gs
call
lods
pushf
loopne
pop
mov
roll
add
popf
xchg
dec
popf
leave
xlat
sub
mov
rol
xchg
mov
push
or
leave
into
cli
shlb
inc
xchg
jmp
shr
mov
sub
mov
out
adc
lock
jno
mov
xlat
stos
jle
call
pop
dec
dec
and
add
fsubp
push
mov
push
jns
sub
jg
jecxz
cmp
or
stc
pop
sub
hlt
loop
int
sub
mov
daa
lods
mov
shll
mov
or
jle
pusha
xchg
test
xchg
or
xchg
fucomip
dec
sbb
cltd
push
outsb
add
and
sub
insb
inc
cmc
sbb
jno
jns
cmc
arpl
cs
in
xor
movsb
fisttps
scas
xor
lahf
jnp
jecxz
cmp
repz
jno
push
fistpll
and
cmovnp
pop
aad
inc
dec
ret
aaa
outsb
out
jmp
push
fisttps
es
xlat
and
push
pop
cmp
pop
in
ja
repnz
icebp
scas
and
pop
jbe
rcll
mov
leave
pop
in
push
push
andl
xchg
mov
test
adcb
pop
cmpsb
call
and
inc
fisubrs
pop
pop
xchg
punpcklbw
decl
inc
cli
outsb
sub
es
jge
sub
fimuls
dec
int3
dec
movsb
jge
push
dec
rcrb
push
push
add
add
xchg
aam
lret
inc
into
out
out
hlt
in
or
cmp
sub
fldl
ficoml
movsb
loopne
push
and
cltd
sub
rorb
loopne
into
or
ljmp
stc
cmpb
daa
cmp
dec
gs
lcall
and
into
xlat
jae
divb
stos
mov
rorl
mov
out
arpl
mov
adc
lds
jp
push
adc
lods
pop
xchg
sbb
pop
scas
sub
test
inc
jle
in
jmp
test
pop
out
mov
ja
dec
cmpl
mov
and
bound
mov
stos
jmp
and
cltd
mov
mov
cld
push
mov
loopne
cmp
lahf
lret
dec
divb
xlat
fldcw
fisubs
inc
adc
repnz
fwait
jno
outsb
ja
in
movsb
push
mov
add
add
jl
xchg
adcb
and
mov
shlb
rcrb
adc
sahf
sub
xchg
hlt
int3
mov
pop
cmp
inc
push
or
lods
mov
in
inc
fadds
adc
mov
cmpsl
jne
inc
lret
notb
aas
add
ds
mov
fcompl
pop
cwtl
jmp
ret
pushf
lret
push
push
cwtl
ds
loope
sbb
pop
xchg
sub
repnz
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
cmpsl
ss
iret
jl
sarb
cltd
into
ret
mov
push
cmpsb
mov
add
sbb
sbb
sbb
addr16
or
mov
xchg
pop
dec
cmc
xchg
js
xor
mov
mov
mov
mov
sahf
push
add
cmpsb
les
data16
inc
mov
mov
xchg
into
iret
jnp
dec
lea
iret
lret
sbb
mov
xchg
mov
push
push
sub
int3
jecxz
jl
mov
in
leave
cli
cmp
negb
sub
popa
push
outsl
inc
mov
lret
sbb
das
ljmp
movsl
sar
xchg
sarl
fnstsw
lock
inc
pop
mov
jno
lea
add
sbbl
cmp
push
sbb
lret
push
pop
hlt
rcrl
or
add
jnp
and
jge
sbb
pushf
pop
sub
cmp
jp
rolb
push
push
xchg
inc
popf
push
mov
push
gs
and
out
ss
hlt
lds
mov
cmp
pop
xchg
stc
std
rorl
loopne
mov
inc
mov
push
mov
mov
sbb
push
xor
mov
aam
ret
mov
pop
pop
mov
nop
and
xor
daa
mov
mov
ret
pop
pop
dec
scas
repnz
push
testl
stc
or
dec
das
xchg
addr16
sbb
pop
xor
sub
stos
outsl
mov
push
mov
add
and
lret
xchg
pop
dec
dec
lret
inc
or
pop
mov
sbb
std
xchg
rcr
and
push
sub
jnp
push
jae
or
test
pop
int
push
and
mov
fwait
mov
mov
jg
dec
dec
cli
adc
imul
dec
shl
movsl
mov
mov
jmp
xchg
cwtl
cmp
test
sbb
push
push
or
adc
cmp
pushf
mov
pop
call
les
icebp
mov
xchg
mov
out
cmp
dec
test
pusha
jnp
xor
outsb
aad
push
pop
push
sbb
neg
and
nop
xor
in
dec
into
cmpsb
lret
ret
subb
mov
pushf
mov
outsl
or
inc
mov
pop
and
or
cmpsl
rorl
pop
sub
leave
test
jge
mov
imul
xchg
stos
jbe
enter
jp
in
mov
repz
pushl
mov
pop
mov
mov
mov
dec
mov
add
cmp
out
nop
push
inc
pop
out
fdivs
inc
data16
cmp
mov
xchg
in
cld
cmp
addl
push
or
xchg
test
orl
add
pop
aaa
outsb
lahf
xchg
xchg
movsl
ljmp
sub
cwtl
inc
sub
add
arpl
int3
jp
pop
and
push
std
cmp
jo
std
jge
test
jns
mov
mov
mov
sbb
icebp
jns
sub
aas
xchg
iret
inc
mov
rcrb
xchg
fnsave
mov
leave
jmp
dec
sbb
mov
xchg
in
push
mov
pop
outsl
dec
dec
jp
clc
jl
dec
addb
jbe
in
sbb
sbb
jge
leave
cmpsl
mov
push
inc
and
popa
inc
and
lahf
sub
xlat
xor
pop
inc
subb
stc
lret
pop
xor
pop
mov
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
sarl
imul
jnp
and
mov
daa
cmp
popf
sub
mov
add
sbb
cmp
mov
mov
sahf
inc
lods
dec
lds
cmpl
je
mov
lcall
aaa
out
mov
inc
push
or
outsb
add
push
sbb
add
xor
push
push
aaa
dec
popf
cwtl
out
mov
add
je
ror
mov
scas
inc
or
cmpl
int3
jge
jbe
jno
and
bswap
pop
jp
lahf
rorl
pop
xor
arpl
push
xchg
mov
dec
xchg
cmp
adc
sarb
add
ja
imul
outsl
pop
rcl
mov
lods
loop
sub
movsb
fcomi
jns
ljmp
or
mov
test
movsl
shrl
jo
dec
push
repnz
orl
rcrb
stos
or
jmp
jle
or
and
mov
xlat
sub
mov
xchg
rcrb
adc
dec
inc
mov
popf
leave
xchg
jecxz
mov
scas
adc
mov
bsf
fstps
add
aas
psllw
adc
mov
sub
loop
sahf
lea
in
jae
sti
add
xor
dec
or
cmp
xchg
dec
xor
adc
jp
dec
scas
lret
adc
addr16
gs
or
in
mov
rorb
jo
xchg
clc
xchg
lcall
dec
mov
mov
scas
mov
adc
xlat
dec
mov
js
aam
idivb
pop
jae
jg
cmp
rcrl
mov
mov
divl
add
stc
test
ret
add
push
stos
mov
add
jmp
inc
cmp
sub
out
mov
adc
push
adc
jg
arpl
fnstenv
icebp
cmpsb
test
push
pushl
popa
sbb
jne
in
out
pop
rcll
push
inc
jmpw
mov
fsubl
xchg
test
mov
stos
sub
pop
push
pop
in
fsubl
std
fnsave
mull
mov
adc
pop
pavgw
mov
mov
cltd
inc
jae
shrb
int
pop
cmp
push
sti
add
push
fdivrs
and
pop
jb
in
roll
je
popa
test
mov
lret
std
lret
aaa
loopne
push
insl
loopne
testl
jmp
out
cmp
jno
push
jae
iret
int
enter
outsl
mov
fucomip
sti
add
fwait
push
xor
push
mov
nop
enter
cmpsl
mov
pop
adcl
mov
rorl
sub
int
cmp
push
mov
addl
pop
and
jo
cmp
loopne
and
add
subl
and
popf
jae
pop
pop
or
outsl
notl
fwait
xchg
xor
jg
leave
sub
xor
xchg
xchg
inc
cld
lock
mov
lret
das
push
push
add
mov
xchg
pop
adcb
and
and
or
gs
pop
jae
imul
das
ja
sbb
movsb
mov
into
xor
mov
mov
push
cmp
adc
jbe
inc
aas
pop
cmp
xor
pop
or
test
sar
test
jmp
psllq
jo
in
xchg
repnz
dec
dec
inc
push
lahf
rcl
cld
inc
xlat
popf
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
clc
rcll
dec
les
les
mov
mov
add
mov
inc
adc
andb
inc
inc
fnstenv
xlat
nop
jno
inc
xchg
pop
lods
inc
in
sub
pop
andl
xchg
jbe
in
ret
mov
cmp
mov
cmp
mov
xor
cwtl
add
pop
jbe
sub
fs
mov
pop
mov
jg
dec
data16
cli
adc
ficompl
jns
jecxz
push
xchg
icebp
mov
ljmp
out
rorl
xor
or
mov
or
adc
aam
mov
and
and
xchg
jmp
repz
std
add
inc
stos
and
mov
icebp
js
add
out
xchg
aad
ret
test
scas
xor
outsb
inc
fwait
es
pop
mov
cmp
mov
push
jns
popf
clc
dec
pop
xchg
inc
jbe
in
nop
ret
mov
mov
jne
mov
or
in
add
lods
jle
out
push
test
sbb
dec
dec
pop
mov
loope
jo
xchg
jbe
sub
lock
cmp
test
xchg
push
mov
cli
lods
das
pop
xchg
xchg
cli
rcrl
ret
in
in
mov
mov
push
mov
sbb
sub
jmp
inc
aaa
mov
lret
nop
scas
fisubrl
jl
jne
call
cwtl
hlt
dec
sar
scas
mov
or
xchg
out
or
mov
arpl
iret
cmp
imul
add
push
xchg
and
pop
movsb
mov
mov
loop
inc
call
fst
out
xchg
xor
mov
cli
push
push
dec
sub
test
movl
xchg
enter
scas
xor
fsub
push
mov
xor
inc
pop
fidivs
cli
xor
xchg
out
add
js
pop
jmp
mov
or
pop
dec
enter
mov
mov
adc
add
jmp
subb
cwtl
jns
dec
idivl
aaa
cmp
testl
xor
jne
out
xor
popa
dec
cmp
mov
call
mov
lods
add
mov
sub
adc
mov
push
sbb
fchs
stc
jg
push
or
in
push
or
fsubs
mov
push
sbb
mov
fisttps
dec
negl
mov
aas
arpl
add
insl
sbb
adc
mov
xchg
lds
mov
fidivs
xor
fimuls
push
jle
outsb
clc
push
mov
xchg
loop
cmp
inc
std
xchg
dec
mov
xchg
test
xchg
xorl
rcll
in
fildll
popf
jge
cmp
outsb
sub
stc
sahf
push
xchg
xor
scas
or
es
adc
add
push
ljmp
lret
or
std
roll
inc
inc
daa
mov
dec
push
cmp
xchg
mov
mov
cmpsl
mov
sub
sub
jg
xchg
xor
push
lods
fsubs
adc
sarb
out
movsl
ret
cmp
daa
and
add
leave
dec
adc
pop
xchg
ja
jmp
mov
mov
pop
cmpsl
insb
jo
fbstp
inc
dec
inc
adc
pop
dec
pop
aaa
movsb
insl
and
adc
jp
sbb
xor
outsb
jno
pushf
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
pop
xchg
add
pop
mov
mov
mov
mov
out
in
adc
aaa
adc
jge
das
jns
out
dec
mov
cld
cmp
xor
mov
mov
lds
ljmp
jmp
mov
xlat
mov
cmp
fmulp
gs
xchg
dec
sub
addl
mov
je
adc
subl
loop
test
pop
hlt
aaa
jo
mov
xchg
lahf
insb
jl
fcomp
mov
push
dec
js
dec
negb
inc
cli
rcl
out
or
arpl
in
dec
dec
jo
lcall
jo
xchg
movsb
and
xchg
aaa
test
inc
push
cmp
out
lret
inc
add
push
push
aam
insb
test
adcb
in
sbb
inc
popf
xlat
out
popa
mov
or
in
std
sub
repnz
cltd
test
push
jno
lods
fwait
jae
shrl
pop
fistl
lahf
adc
or
sarb
test
pushf
jl
lods
bswap
dec
or
cltd
fidivs
ret
sbb
lods
xchg
stc
nop
in
mov
jecxz
or
mov
mov
out
xchg
push
jle
or
mov
dec
loop
inc
mov
pop
andl
fimuls
data16
pop
mov
stos
arpl
inc
repnz
sbb
pop
std
ss
cmp
xor
loop
leave
mov
sbb
push
push
cmp
shlb
mov
jl
jg
pop
fs
inc
cmp
jo,pt
mov
add
sbb
in
imul
pop
cmpsb
mov
and
jb
pop
mov
sarl
call
js
sti
sbb
xchg
pop
notl
mov
mov
pop
and
movsl
gs
hlt
out
outsb
push
jp
lahf
jl
shlb
shrl
add
icebp
ja
lods
ret
dec
leave
mov
decb
je
add
outsb
mov
sub
inc
ss
inc
in
mov
ljmp
subl
jns
cmc
ds
mov
rolb
pop
inc
gs
sbb
jecxz
in
cltd
les
jmp
mov
call
pop
mov
mov
xchg
addr16
jmp
lock
mov
pop
ret
push
insl
lea
fdivrs
mov
or
sbb
dec
mov
dec
adc
inc
int3
sbb
andb
xor
adc
out
mov
lea
hlt
cmp
andb
xor
and
adc
repz
pop
sbb
movsb
mov
pop
lcall
push
sub
xchg
dec
mov
and
adc
and
es
lods
push
pop
cld
je
or
nop
scas
inc
mov
lock
mov
push
add
cltd
add
subl
aaa
in
mov
std
mov
dec
xchg
lock
in
fimuls
xchg
push
pushf
pop
test
clc
jg
sbb
dec
inc
dec
pop
pop
test
jno
adc
mov
push
xor
jb
imul
cld
fidivrs
jl
ret
fsubs
outsl
jle
sbb
sbb
mov
push
addr16
push
test
inc
roll
xor
test
cmp
dec
and
mov
add
jmp
push
jecxz
in
cmp
mov
retw
xor
pop
popf
add
ljmp
xchg
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
aas
pop
fninit
lods
rol
dec
les
xchg
sarl
push
loop
xor
ret
cli
inc
pushf
sub
ret
iret
push
bound
and
mov
jmp
add
jbe
aad
fildll
xchg
iret
mov
dec
test
adc
xor
mov
or
push
dec
addr16
mov
jns
or
shlb
insl
stos
add
aam
in
out
jo
jmp
icebp
mov
push
sub
insb
sbb
jb
add
decb
test
mov
orb
mov
js
sub
xchg
aaa
ss
iret
popa
jg
fdivl
arpl
fnstcw
int
adc
xchg
adc
outsb
ret
jecxz
adc
out
pop
jecxz
and
jmp
bound
or
in
cmp
or
fnstsw
test
adc
arpl
add
mov
test
call
xor
pushf
push
ja
int
push
cmpsb
fbld
rdtsc
jp
inc
ds
and
fstps
pop
add
shrb
out
jp
mov
jp
push
push
push
insb
in
adcl
xchg
xchg
lahf
rclb
test
push
out
xchg
cmp
es
pop
lahf
scas
rolb
ret
gs
xchg
in
test
ds
push
imul
add
push
cmc
push
cmpsb
out
ret
jmp
lds
cli
add
sub
das
cmp
fstpl
pusha
sbb
xor
mov
add
test
scas
sbb
mov
push
ja
pop
rorb
into
repz
sbb
or
and
mov
push
adc
subl
cs
push
xor
mov
push
jo
int
adc
xlat
nop
int
aad
shlb
inc
adc
or
lret
jecxz
add
je
push
in
sub
int
mov
pushf
leave
cmp
dec
push
mov
out
inc
pop
scas
cmp
repz
shll
mov
or
pushf
insb
mov
sbb
sbb
ret
push
outsl
ret
notl
adc
pop
call
pusha
cmp
mov
shl
or
push
lods
add
out
add
jae
push
push
jp
out
setne
inc
push
test
popa
jb,pt
bound
int
cli
hlt
add
shll
sbbb
add
and
jecxz
int3
cwtl
sarb
out
mov
rol
insl
frstor
xchg
sbb
pushf
gs
shrb
xchg
mov
pop
jecxz
out
push
push
jbe
or
cmp
lods
ret
push
cmpsb
ret
mov
add
std
add
jne
mov
hlt
out
fidivl
and
shl
push
push
push
xor
decb
pop
fsts
add
push
inc
push
enter
iret
and
shlb
fisubrs
mov
aas
fldl
push
dec
push
aas
jae
es
daa
movsl
push
xor
popa
and
in
aad
iret
cmp
ljmp
mov
test
xlat
pop
fstp
leave
out
mov
negb
or
dec
mov
es
cmp
ss
push
or
sub
jno
loop
inc
addb
xor
xor
or
mulb
jno
inc
pop
mov
in
mov
aas
in
inc
mov
negl
cli
movsl
lret
mov
loope
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
ror
leave
sarb
imul
std
jle
lret
sub
add
lret
gs
mov
incb
mov
je
fcomp
cmp
fidivrl
clc
xor
fsubs
dec
fnstcw
xchg
or
dec
int3
jl
xor
jmp
dec
jmp
call
lods
loop
fisubrs
scas
mov
scas
aas
pop
xor
int
or
pushf
shrl
push
fs
divl
mov
loopne
mov
xchg
and
mov
addr16
inc
out
fstpl
mov
test
sub
ljmp
cmp
jl
sub
ds
out
ret
pop
and
dec
es
and
fldenv
add
inc
xor
hlt
pop
notb
or
lret
add
or
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
cld
and
add
gs
arpl
push
outsl
inc
jne
jae
jb
test
add
add
add
inc
sub
dec
sub
add
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
mov
inc
add
inc
add
add
daa
inc
add
jle
add
inc
add
sub
movsb
daa
inc
add
sub
or
inc
add
push
movsl
scas
or
inc
add
inc
add
inc
add
daa
inc
add
inc
add
sub
push
sub
scas
fwait
push
movsl
cmp
mov
xor
inc
add
daa
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
movsb
and
inc
add
push
movsl
cmp
xlat
movsl
dec
add
mov
inc
sbb
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
lods
daa
inc
add
sub
jbe
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
addl
addl
addl
addl
test
sub
add
test
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
test
imul
add
inc
add
inc
add
inc
add
test
mov
add
test
cltd
test
popf
test
mov
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
in
inc
add
test
in
test
icebp
test
cmc
test
stc
test
std
test
add
inc
add
test
or
test
adc
test
sbb
test
xlat
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
test
imul
inc
add
inc
add
inc
add
inc
add
test
mov
inc
add
test
cltd
test
popf
test
mov
add
sub
mov
add
add
pusha
xchg
add
add
add
add
add
add
add
xor
add
inc
xchg
add
xor
add
dec
mov
add
add
js
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
add
push
add
jl
add
xchg
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
jb
add
test
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
add
pop
mov
add
add
orb
mov
add
mov
mov
add
mov
add
mov
add
add
and
add
inc
lea
add
add
add
jb
add
xchg
add
stos
lea
add
lea
add
lea
add
lea
add
lea
add
add
adc
add
xor
add
push
mov
add
add
jbe
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
inc
popl
add
add
je
add
orb
add
popl
add
popl
add
popl
add
popl
add
add
sbb
add
sub
add
dec
nop
add
pop
nop
add
push
add
jl
add
xchg
nop
add
scas
nop
add
les
add
call
nop
add
push
xchg
add
sbb
add
sub
add
cmp
add
pop
xchg
add
outsb
xchg
add
jl
add
nop
xchg
add
sahf
xchg
add
stos
xchg
add
mov
xchg
add
loopne
add
notb
add
adc
add
sub
add
dec
xchg
add
pop
xchg
add
push
add
jp
add
mov
add
add
add
mov
add
les
add
out
xchg
add
add
add
sub
add
cmp
add
inc
xchg
add
pop
xchg
add
push
xchg
add
nop
xchg
add
mov
xchg
add
les
add
fcoml
add
push
xchg
add
sbb
add
xor
add
add
fs
add
je
add
xchg
xchg
add
lods
xchg
add
mov
xchg
add
out
add
cli
xchg
add
or
add
xor
add
push
xchg
add
pusha
xchg
add
jo
add
xchg
add
lods
xchg
add
ret
add
xchg
add
ficoms
add
cld
xchg
add
adc
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
mov
add
add
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
