orl
push
mov
sbb
mov
push
sub
jmp
sbbb
mov
cmp
cld
or
add
loop
add
add
insl
push
push
arpl
call
cmp
push
jmp
int
fcomps
loope
movzwl
and
into
dec
xchg
xchg
pop
cwtl
hlt
push
inc
retw
xchg
mov
roll
adc
inc
and
push
pushf
mov
int3
stc
inc
sbb
in
push
cmpsb
jmp
mov
aam
mov
xor
imul
xor
pop
mov
cld
inc
lret
mov
jo
idivl
cmp
mov
fmuls
fldt
push
cltd
lock
rcrb
mov
or
mov
es
jmp
sahf
sub
and
mov
gs
into
jo
je
in
xchg
sahf
cli
aad
jecxz
mov
pop
popf
loopne
in
jne
push
add
jb
cmpsb
rorb
or
pop
out
mov
jae
pop
cmpsl
addr16
in
jne
stos
jecxz
xor
test
push
js
out
ret
cld
dec
ljmp
lret
dec
mov
in
xor
inc
lods
pushf
add
lcallw
sbb
in
jg
aad
xor
enter
loopne
pop
pop
nop
mov
popf
mov
bound
pop
repz
jno
hlt
in
ret
or
into
fldl
lods
mov
adc
jbe
test
or
dec
push
int3
push
push
pandn
cwtl
fbld
out
ret
jnp
push
movsl
dec
clc
mov
rcrl
mov
push
jg
daa
fdivrp
dec
cs
and
or
dec
xchg
fsubrp
xchg
pop
jle
and
inc
cmp
addr16
movsl
repnz
jge
pop
cwtl
mov
pushf
push
cmp
xchg
aaa
iret
jnp
pop
outsl
pop
repnz
in
test
push
mov
inc
and
or
movl
jne
mov
adc
mov
xor
not
div
cmpl
jle
and
jmp
pushl
push
push
push
call
mov
mov
div
mov
jmp
mov
adc
mov
mov
mov
mov
adc
mov
shr
rcr
subl
jmp
clc
mov
push
sub
sbb
gs
fsub
add
or
add
xchg
int3
lret
jl
inc
lahf
sub
adcl
test
out
xlat
sub
lahf
stos
clc
scas
add
pop
or
icebp
jno
aas
das
mov
lock
out
dec
add
add
jo
shrb
movsb
dec
mov
xchg
sbb
fnsave
cmp
mov
xor
or
jb
fisttps
loope
or
mov
mov
pop
pusha
or
sub
jmp
pop
test
icebp
or
dec
pop
test
adc
aas
test
sbb
xor
pop
lods
loop
sbb
adc
cmp
mov
push
sbb
sahf
insb
stc
aas
int
stos
loope
loopne
mov
mov
int
inc
xchg
inc
inc
jmp
and
daa
jb
orl
sti
dec
test
ja
push
pop
popf
push
xor
mov
sbb
jmp
dec
ds
aad
pop
je
outsl
add
jne
mov
aam
out
sarb
pop
insb
xor
mov
iret
in
outsb
mov
test
movsb
lea
dec
loope
dec
popf
adc
jg
aaa
in
and
sub
mov
xor
lret
cld
popl
stos
cmpl
lods
dec
xor
mov
cmp
fs
xor
pushf
cmpsl
lret
dec
stc
pop
es
add
add
mov
test
jecxz
inc
pop
xchg
fdivl
inc
pop
jg
xlat
in
out
pop
in
out
test
and
sbb
jmp
mov
pop
in
cmp
insb
test
cmpsb
into
or
push
pop
jae
inc
sub
add
scas
or
call
push
xchg
xchg
movsl
or
mov
int
aad
lea
cwtl
inc
pop
xor
cmp
sbbb
lods
popf
mov
adc
ljmp
mov
repz
mull
mov
mov
mul
jmp
pop
cmp
ja
fistpll
lock
add
or
add
push
pusha
add
jbe
call
dec
dec
cwtl
jne
push
push
mov
and
enter
add
push
add
xchg
testb
xchg
mov
cmp
sbb
xchg
mov
mov
ret
fwait
inc
sbb
testb
pop
jne
xor
dec
cs
sarb
xchg
add
xor
out
pop
and
dec
jl
rcrl
push
pop
sbb
jmp
scas
pushf
or
sub
fsubrs
popa
fidivs
add
cmp
lock
add
fimuls
stc
push
dec
loopne
adc
jg
adc
inc
inc
out
rcrl
sarl
xchg
out
sub
pop
mov
stos
ficompl
xor
cmpsl
out
jge
sub
xor
imul
xchg
aad
sub
outsb
sbb
arpl
aam
fcoms
inc
les
push
lea
adc
subb
out
popa
cmpsb
jno
stc
add
imul
jno
pop
daa
pushl
pop
ret
fidivrl
push
xchg
fidivrs
jne
pop
daa
pop
mov
push
xor
jle
xlat
pop
test
add
xchg
inc
ljmp
or
ja,pn
andl
xchg
pop
lcall
subl
cmp
xchg
mov
jne
rcll
mov
outsb
insb
arpl
cmpsb
sbb
xor
fstl
jp
sub
ret
inc
jecxz
adc
rcr
repz
cmpsl
cmp
not
inc
jmp
popa
mov
adc
sub
fcmovne
fdivrl
scas
call
dec
repz
or
fcomps
cmpsl
js
pop
pop
mov
addr16
mov
jae
mov
int
imul
push
mov
gs
lods
in
cmc
imul
and
es
xor
pop
sub
mov
addr16
loopne
rorl
adcb
add
add
fistps
dec
sbb
std
inc
repnz
hlt
call
add
jbe
int3
out
and
out
xchg
inc
mov
ret
mov
imul
inc
xor
mov
mov
pop
mov
inc
cmpsl
adc
xchg
in
js
sub
sbb
fwait
jle
ss
mov
outsb
inc
mov
mov
jns
cmpsl
arpl
movsl
dec
outsl
lcall
dec
push
psubw
pop
and
xchg
test
sub
nop
push
mov
repnz
iret
dec
scas
mov
and
sbb
outsb
inc
sahf
fwait
mov
stos
stos
add
or
stos
sub
fs
or
mov
jmp
test
pop
loopne
dec
aaa
jge
jae
sub
bound
loopne
or
ja
fbstp
mov
mov
fcoml
loope
aad
ret
decl
cli
fsubrs
pop
clc
push
or
jae
rol
inc
dec
xchg
jbe
push
jge
mov
gs
in
repz
mov
outsl
cmp
inc
mov
xlat
aas
movsb
cmp
mov
adc
add
test
pop
xor
fmulp
sbb
jg
lods
xchg
loop
shr
popf
cmpsl
loop
pop
sub
xor
mulb
push
jmp
cld
rorl
xchg
xchg
inc
mov
push
test
mov
mov
xchg
out
mov
mov
outsl
push
jecxz
loop
pop
adc
cs
pop
mov
test
inc
push
ds
fdivs
push
jg
and
fwait
imul
pop
dec
aas
inc
roll
inc
dec
mov
cmp
lahf
in
adc
push
sbb
shrl
jae
pop
pop
xchg
xchg
lds
ds
cmpsb
push
ja
cmp
in
ljmp
fldenv
leave
or
jmp
imul
jmp
xchg
add
cmpb
and
jmp
int
aaa
sbb
push
jmp
add
add
insl
adc
jecxz
and
sahf
cld
cwtl
sub
mov
icebp
cmc
jle
mov
sarw
lahf
xor
pop
movsl
lret
inc
in
xchg
push
pop
repz
scas
mov
dec
add
cmc
mov
pop
gs
mov
sub
scas
not
mov
out
mov
mov
mov
cmc
xchg
outsl
in
imul
xlat
ljmp
cmp
pop
mov
sbb
mov
sub
sub
jmp
and
sbb
sbb
pop
adc
test
sub
gs
test
loope
pop
mov
mov
imul
fistl
mov
and
mov
mov
push
pop
popa
loop
mov
mov
scas
aas
sbb
mov
inc
mov
adc
bound
cs
push
sahf
push
sbb
frndint
lahf
dec
dec
inc
sbb
sub
mov
popf
xor
dec
insl
xchg
dec
es
test
add
in
movsl
pushf
xlat
outsb
adc
lahf
hlt
nop
jmp
loop
ljmp
nop
pop
movsb
test
sub
movsb
in
add
push
push
test
lock
jbe
inc
jne
in
mov
lret
loopne
mov
inc
lds
test
mov
cmp
push
stos
mov
add
sbb
push
sbb
and
mov
test
sbb
mov
ss
lods
scas
jo
xchg
xchg
xchg
push
or
ret
neg
jg
push
fdivrl
or
sub
dec
aam
mov
leave
loopne
ret
inc
mov
ds
sub
ja
mov
mov
mov
repnz
les
lret
jmp
jle
dec
fbstp
push
ret
mov
pause
cmp
imul
loop
ja
jb
jmp
popa
push
xlat
mov
sbb
mov
or
add
or
add
sbb
cmp
mov
inc
ficoms
mov
faddl
sub
mov
xchg
and
push
cmp
out
mov
cwtl
pop
push
jb
sbb
aas
jnp
cmp
jbe
add
data16
inc
dec
popa
out
fisubrs
incb
inc
xor
pop
pop
adc
lods
push
xor
imul
dec
jno
adc
push
push
mov
dec
add
fiadds
xchg
mov
mov
xor
dec
sbb
or
lea
dec
mov
xchg
jge
mov
rcl
xor
adc
mov
insl
fimull
jo
std
dec
and
inc
imul
popa
add
cwtl
push
xchg
jb
mov
jg
inc
test
outsb
std
push
cmpsl
imul
jmp
cwtl
or
mov
jmp
loope
push
imul
sub
pop
outsb
sub
idivl
out
int
jle
aad
jmp
mov
inc
lea
out
rclb
insl
mov
xchg
cs
pop
xor
ljmp
dec
lea
jae
jp
sbb
sbb
outsl
arpl
and
adc
xchg
wrmsr
cmp
hlt
test
ds
cmp
rcl
mov
das
fucom
loopne
fs
insb
xor
and
lcall
mov
repnz
cs
mov
mov
es
ss
sarb
push
notl
scas
pop
repnz
dec
in
xchg
jbe
push
clc
adc
rol
shr
mov
xchg
in
mov
and
add
inc
jb
push
or
dec
mov
sub
mov
lret
int3
or
mov
cmpsl
roll
push
out
push
aad
dec
outsl
gs
inc
nop
mov
lahf
sbb
das
cs
fld
mov
dec
out
mov
or
xchg
add
add
shr
and
add
lea
push
out
lahf
fnstenv
imul
add
or
add
sbb
mov
xchg
jge
cmpsb
mov
cmp
sub
pop
dec
or
aad
push
mov
movb
sbb
lods
and
ljmp
test
mov
movsb
daa
lock
sub
loopne
test
sbb
addb
out
in
gs
sbb
icebp
test
lods
xor
loope
lods
xchg
xchg
shlb
cmp
in
out
addr16
add
sub
dec
cmp
inc
push
xor
add
in
inc
cli
push
inc
mov
jmp
or
adc
sub
lods
push
popa
push
fdivl
popf
inc
fs
xchg
pop
rolb
cmp
adc
pop
mov
ds
lret
jle
pop
insb
push
mov
push
subb
add
aam
jne
outsl
repnz
rol
sbb
test
pushf
sbb
mov
jmp
mov
loopne
dec
adc
push
stos
es
hlt
pop
test
push
int
xor
mov
sub
lods
xchg
fcoml
imull
mov
stc
mov
dec
pusha
mov
scas
jo
incb
push
in
cmp
jns
ljmp
les
lret
lock
mov
movsl
mov
scas
popf
decl
ja
mov
push
clc
xchg
shlb
lahf
dec
in
cmp
push
out
and
loopne
pop
nop
clc
mov
mov
loop
test
pop
xchg
jns
xor
and
push
or
mov
ja
icebp
stc
or
imul
jecxz
pop
mov
ja
les
cmpsl
sti
mov
cmp
aaa
sar
mov
mov
xlat
push
enter
inc
jge
xchg
test
mov
ret
pop
pop
ret
jg
mov
mov
cmp
inc
cld
add
add
sub
push
pop
inc
pop
dec
pop
push
or
or
inc
adc
adc
test
syscall
pop
push
adc
repnz
sbb
add
test
enter
or
adcb
fs
cmp
push
movsb
out
dec
jae
iret
lock
jnp
mov
dec
pop
jb,pn
femms
mov
int3
orl
pop
jge
pop
push
mov
shll
stc
inc
cmp
fbld
push
or
push
jbe
ss
sub
mov
and
ds
pop
shr
or
adc
inc
mov
int3
jecxz
lcall
inc
das
sub
dec
sub
sbb
and
pusha
cmc
cmpsb
nop
icebp
outsl
sub
ret
cmpsb
insb
test
dec
mov
inc
test
lds
sbb
sbb
mov
mov
push
xor
mov
push
pop
daa
idiv
cmp
xor
xchg
bound
sbb
sbb
dec
push
or
arpl
xchg
faddl
mov
lds
mov
popf
rcrb
movsl
adc
xchg
out
pop
mov
jl
data16
dec
insb
mov
xchg
fiadds
sub
pushf
in
push
sbb
scas
mov
incb
jne
movsl
test
cld
fcmovnb
adc
add
int3
scas
data16
mov
cmp
jle
popl
add
shll
gs
xchg
mov
inc
push
in
shll
dec
push
mov
nop
insl
sbb
addr16
or
sub
int3
mov
cli
xchg
mov
or
add
adc
pop
test
insl
hlt
push
inc
popf
mov
daa
push
pop
jmp
adcl
je
ljmp
das
nop
pop
or
inc
add
stos
cmpsl
imul
cltd
bound
test
dec
and
ret
dec
jb
shl
push
fdivl
mov
add
xlat
das
adc
add
ret
ficoml
inc
lret
push
in
fcomps
xor
pop
aad
xor
sbb
inc
mov
cli
mov
sbb
inc
mov
pop
lods
pushf
movhps
test
movsb
shl
fnstcw
sti
lahf
jge
adc
add
dec
jge
jne
fiadds
out
mov
inc
iret
stc
in
mov
lss
pop
pop
sahf
jns
mov
jecxz
std
adc
jg
repnz
lock
inc
bnd
xchg
mov
jb
es
xchg
aaa
push
rolb
dec
mov
sbb
pushf
mov
aad
pusha
fwait
aam
je
pop
sub
xor
pop
jne
pop
cmp
jns
push
loop
mov
xchg
std
mov
int
inc
jl
xchg
jmp
mov
pop
shl
mov
xorb
or
sub
inc
lods
mov
cmp
inc
xor
aam
pop
subb
test
pusha
stos
or
adcb
enter
cmp
icebp
js
cli
pop
and
or
push
cmpsl
xor
push
jmp
jle
add
xchg
add
fcompl
jns
cmp
xor
fs
cmp
pop
lods
lods
pusha
in
lahf
add
call
mov
cmpsl
xchg
push
push
outsb
mov
and
pop
push
cmp
push
mov
add
or
fildll
sub
inc
shl
sub
popf
push
popa
sub
sti
fs
add
mov
sbb
inc
mov
xchg
push
jmp
subl
stos
outsl
jns
cmp
push
jl
lock
ja
cltd
movsl
sub
mov
ror
add
add
ss
enter
aas
cltd
mov
sbb
ror
cld
cmpsl
loop
pop
push
lea
xchg
dec
cli
adc
cmp
fcomps
jg,pn
dec
es
pushf
pop
outsb
mov
mov
dec
js
mov
shrb
sbb
loop
fnop
mov
lcall
jmp
cmp
rol
jecxz
jnp
or
repnz
je
in
mov
test
aam
adc
cs
xor
push
adc
xchg
clc
cmp
mov
adc
int
jl
jno
push
xchg
test
adc
adc
idivl
lods
adc
and
pop
jp
push
in
mov
out
jbe
rcl
out
cmpsb
mov
jnp
jmp
popf
sub
sar
hlt
or
shrl
or
push
dec
xchg
repnz
fildl
cmpl
jp
jnp
or
push
mov
inc
loop
enter
xor
xchg
fwait
xor
pop
jno
sbb
xor
lcall
sti
xor
outsl
das
scas
and
sbb
xchg
dec
adcb
inc
mov
imul
fs
mov
das
and
pop
sub
mov
adc
std
jg
inc
roll
nop
push
mov
pop
lds
mov
add
inc
jno
stos
scas
pop
pushf
insl
cmp
xor
test
or
xchg
lahf
push
cmp
mov
mov
sbb
idiv
mov
xorl
negb
ficompl
mov
hlt
shr
and
mov
pushf
repz
fiaddl
sub
test
or
xlat
mov
sbb
and
movsb
out
push
push
aas
orb
fwait
mov
bound
test
xchg
cmpsl
push
lds
shlb
test
or
mov
rcrl
xchg
ds
dec
mov
push
aad
adc
leave
or
xor
addb
add
lea
fnstenv
mov
divb
aaa
movsb
out
in
faddl
gs
insl
aaa
outsl
pop
scas
or
lcall
ret
fstp
sub
pop
pop
and
xlat
cltd
fsubs
sbb
fldl
sub
and
loopne
and
loope
xor
das
sub
push
int
push
hlt
lds
mov
mov
jbe
into
mov
ja
lea
push
add
aam
jne
dec
mov
popa
add
popa
and
mov
xor
cltd
mov
add
sub
loop
test
std
push
add
out
push
repnz
push
cmp
sbb
rorl
push
mov
mov
add
mov
imul
jp
shll
sti
adc
cmpsl
jbe
xor
sahf
cld
imul
mov
pop
icebp
or
add
stos
loop
mov
lock
adcb
mull
cli
or
xlat
adc
dec
jo
mov
loop
mov
jb
js
and
push
jge
ljmp
inc
xchg
aad
aad
sub
outsl
lea
inc
push
fdivs
mov
pushf
add
lret
xchg
adc
sbb
cmp
rclb
dec
push
or
pop
cmpsb
adc
xchg
sub
adc
insb
mov
fsubrs
jne
xor
insb
dec
call
xor
loop
sar
add
sarb
push
xchg
mov
adc
inc
out
dec
mov
add
sbb
push
jo
adc
hlt
fsubl
into
xchg
adc
inc
xor
ja
lock
sti
cltd
mov
pop
add
sahf
and
add
dec
mov
jecxz
sub
clc
rcrb
cmc
out
mov
mov
mov
pop
and
fistpll
inc
sub
or
push
cli
sbb
and
jmp
cwtl
push
mov
fisttps
adc
jle
mov
add
push
fwait
movsb
jne
movsb
and
out
push
stos
jecxz
mov
shr
sub
clc
add
cmp
imul
cltd
pop
push
xor
out
ds
jnp
sti
jg
pop
pop
inc
mov
shlb
xchg
inc
testb
clc
fistpl
out
in
fcompl
pop
out
jno
ficomps
adc
insl
mov
shr
or
int
inc
xchg
xlat
xchg
stos
mov
js
lret
insb
les
rcll
lds
test
jmp
in
das
std
xchg
in
adc
fidivl
and
push
daa
jno
out
pop
out
dec
push
xchg
jge
xchg
mov
jg
xor
xchg
aas
js
mov
xor
cli
mov
mov
pop
movsl
dec
jnp
jbe
loope
mov
std
adc
out
iret
jmp
pop
sub
aad
ret
inc
add
push
or
push
mov
dec
adc
cmp
sub
adc
imul
into
push
jae
mov
shr
mov
xor
aam
lock
int3
sub
sbb
ss
push
pushl
push
scas
cmc
in
aas
xor
jecxz
xor
aaa
jl
xchg
push
inc
pop
flds
jnp
bound
jo
iret
fwait
jg
mov
jge
dec
hlt
ret
aad
and
xchg
fs
in
pop
nop
adc
pop
test
sbb
push
mov
push
cli
sub
mov
push
mov
sar
fs
insb
cltd
into
ret
add
pop
xor
mov
mov
addr16
dec
fld1
pop
aad
ja
insb
les
nop
fiaddl
test
mov
xor
xchg
xchg
loopne
xor
frstor
sbb
lods
fisubrl
dec
mov
sub
lret
pop
inc
push
out
xchg
out
rcrl
repnz
imul
popf
ja
movsl
loopne
test
jo
subl
jge
sti
std
jno
xchg
stos
repz
add
push
pop
fistps
daa
mov
fs
xor
xor
aas
fwait
pop
sbb
wrmsr
sub
push
push
shrl
shll
fisttps
repnz
jnp
jecxz
pop
js
push
in
and
add
xor
sub
dec
fcmovne
sub
mov
mov
fistl
xor
out
call
sub
or
invd
fisttpl
mov
pop
shlb
in
mov
sub
xor
loop
std
cmpsl
mov
add
push
and
dec
popa
xchg
stos
shl
cmp
dec
pop
lahf
mov
iret
cmp
adc
addr16
loope
lods
or
cltd
and
jl
movsb
jecxz
push
inc
fs
mov
pop
outsb
sbb
mov
add
push
pusha
stc
push
pop
int3
pop
insb
sub
cmpsb
and
sub
lret
adc
mov
pop
dec
inc
or
movsb
or
dec
pop
or
out
lods
adc
jl
not
mov
xor
ja
rcll
mov
ss
sbb
sti
mov
test
loope
pop
fwait
maskmovq
imull
or
xor
std
dec
push
xor
mov
out
xchg
int3
mov
sub
std
movsl
xchg
and
cld
jecxz
mov
pop
push
pusha
outsl
xchg
rcrb
add
xorl
orb
mov
out
pop
testb
fists
xchg
push
in
push
add
fcmovbe
xchg
incb
outsl
fwait
push
lock
pop
jmp
test
cmp
or
ja
xor
lds
xor
push
dec
cmp
push
scas
xchg
int
push
rolb
jp
leave
pushf
jecxz
jl
rolb
mov
xchg
push
push
inc
cmp
mov
inc
mov
cmp
mov
fldln2
push
das
push
sbb
bound
ret
icebp
mov
cmc
cmp
nop
cmp
and
mov
mov
pop
out
mov
push
and
inc
adc
fsubrl
test
addr16
xchg
pop
mov
clc
jmp
clc
and
add
cmc
xor
jne
pop
test
cmp
shll
rcrb
add
mov
cmpsl
iret
mov
int3
pop
push
inc
das
push
cmc
xor
jg
sbb
pushf
xor
sbbl
sub
or
das
dec
and
xchg
aam
sbb
adc
in
test
or
lret
pop
iret
inc
ret
sbb
scas
jmp
sbb
or
fmul
out
fdivs
mov
dec
cli
call
aaa
mov
xchg
lock
xchg
xchg
mov
andb
mov
fucompp
loop
mov
cmp
outsb
lret
cli
insl
dec
jb
xchg
cmc
xor
lcall
inc
mov
fst
stos
push
push
mov
sub
jmp
jnp
mov
sti
lret
pop
cmp
sub
icebp
add
or
add
add
mov
lods
pusha
das
cs
xor
add
mov
lds
xor
call
aas
jg
es
stos
mov
cli
inc
mov
sbb
dec
or
mov
leave
jp
push
sti
negb
add
lahf
loop
mov
cli
ret
xor
add
cmp
mov
jnp
pop
iret
cmp
mov
mov
lods
inc
outsl
mov
cmp
clc
mov
imul
add
and
pop
xor
xlat
insl
jbe
add
sbb
adc
bound
fwait
jle
lods
jge
loopne
jae
cs
arpl
jne
inc
ret
pop
fdivrs
jg
pop
cld
pop
and
sub
and
jae
pushf
jb
test
sub
jle
sbb
mov
negb
inc
bound
and
pop
adc
push
orb
push
add
nop
roll
mov
cmpsl
and
push
xchg
fwait
mov
andb
xor
in
sub
mov
mov
or
sbbb
mov
pop
xchg
push
ret
insl
fs
lea
aas
push
out
ss
push
nop
and
aad
pop
imulb
test
jecxz
mov
or
icebp
dec
fnstenv
aas
insb
mov
iret
fnstsw
dec
pop
mov
insb
xlat
push
enter
xor
lahf
ficomps
cmp
sub
mov
adc
pop
adc
mov
add
out
ret
sub
sbb
xchg
push
mov
adc
and
mov
pop
je
loope
mov
sbbl
movsl
xor
push
pop
fmuls
stos
ja
adc
cmp
sahf
mov
and
nop
push
push
jmp
aam
or
jle
jmp
notb
cmp
add
add
add
jb
loope
out
xchg
dec
lahf
andb
mov
mov
je
fwait
test
push
xchg
enter
add
dec
mov
jmp
and
insl
xlat
sub
scas
dec
mov
adc
ret
mov
dec
jno
pop
in
or
sbb
iret
daa
sub
das
dec
push
imul
pop
mov
outsb
ret
daa
pop
loopne
mov
xor
sbb
inc
cld
js
jle
pop
ja
leave
xchg
jo
mov
mov
push
femms
mov
bound
xor
lcall
lahf
andb
push
lret
scas
add
pop
push
imul
lcall
add
fdivrp
pop
sbb
popf
shrb
filds
mov
jns
sahf
movsl
out
loope
ret
inc
xchg
xor
push
cmp
xor
push
mov
xchg
inc
jge
sub
push
inc
pop
sbb
cmp
mov
outsb
cmp
jbe
and
jmp
imul
push
jbe
loope
into
pop
dec
cmp
es
sub
xchg
loop
icebp
jl
in
mov
notb
xchg
inc
mov
pop
dec
addb
push
mov
jmp
jns
in
fisubs
mov
lods
sarb
fsubrl
les
out
dec
arpl
ret
mov
jb
xor
jae
mov
push
es
data16
repz
inc
xchg
into
xor
outsl
mov
mov
ret
dec
std
or
push
xchg
mov
mov
pop
hlt
jl
jno
cmc
fnsave
pop
pop
test
or
out
push
outsb
ljmp
jg
mov
test
cmp
cld
mov
mov
xor
cld
push
cmp
jecxz
cmp
inc
push
xor
repnz
stc
shlb
movl
jmp
pop
mov
imul
pop
stc
jae
loopne
std
mov
add
or
add
sbb
rorl
movsl
les
dec
bound
leave
call
xchg
incb
scas
addl
pop
xchg
mov
lret
mov
subb
cli
fs
push
or
push
cmpsb
shr
push
test
adc
pop
mov
cmpsl
or
lock
xchg
inc
mov
les
paddusb
out
popf
xchg
test
xchg
or
and
adc
sbb
dec
sub
push
ja
shlb
addr16
int3
jmp
add
and
xchg
and
mov
cmc
and
dec
movsb
addb
jmp
nop
packssdw
leave
stos
fnstcw
out
test
ret
pushf
xor
inc
mov
cld
and
aaa
or
xchg
add
push
cmpsl
dec
shlb
jae
aas
adc
jno
das
movsb
mov
mov
subb
push
mov
notl
push
fwait
std
test
cmp
aas
dec
xchg
outsb
repnz
mov
xchg
jmp
in
int3
xor
push
out
add
push
adc
cmc
cmp
in
into
jo
data16
fistpl
sbb
and
popf
lret
xor
pop
sub
aas
test
in
dec
mov
xor
cmp
insb
das
mov
enter
push
xchg
cli
or
sbb
cmpsb
inc
cltd
jno
hlt
or
adc
xor
lock
stos
test
mov
xchg
mov
sbbl
add
xor
xchg
adc
gs
in
push
pop
fs
dec
das
shll
mov
mov
or
movsl
pop
push
pop
ljmp
fdivl
pop
mov
push
and
pop
mov
aaa
push
add
xor
or
ss
aaa
enter
inc
lock
jmp
rcrl
mov
call
jg
jb
mov
ss
aas
testl
add
shl
mov
insl
pop
jp
gs
fs
leave
sub
sub
sarb
test
push
jmp
movsb
mov
repnz
add
xchg
cli
mov
pop
ja
shlb
out
xchg
iret
sub
hlt
jno
push
pop
mov
stos
cwtl
xchg
lret
loop
sbb
push
test
jecxz
movsl
sub
out
push
or
shl
idivb
arpl
insb
sti
in
pop
in
addr16
in
out
insl
or
divb
xchg
sub
stos
dec
ffreep
sarl
and
xlat
push
push
sub
ljmp
imul
mov
cmp
sbb
xchg
push
pop
ds
out
cmpsl
pushl
push
repnz
movsb
adc
and
mov
mov
cmp
in
addr16
pop
inc
aam
ret
das
lock
xchg
dec
stos
push
ljmp
jmp
add
into
push
in
add
je
cmp
inc
jmp
or
fs
aam
int
xchg
rcrb
add
push
arpl
stos
and
test
sub
pop
add
cmp
mov
cs
dec
cmp
push
sti
ds
std
and
push
xor
mov
lods
sbb
gs
pusha
xchg
or
emms
cmp
je
mov
mov
test
outsl
mov
pop
inc
push
pop
or
je
ja
cmpb
xchg
scas
mov
je
or
push
pop
xor
jb
push
jp
sahf
ret
jg
addl
sub
mov
out
imul
test
das
or
fadd
jmp
inc
push
sub
out
adc
mov
push
add
cmpsl
test
push
push
mov
inc
ret
push
dec
mov
hlt
xor
add
inc
clc
jge
add
movl
movl
jmp
fimuls
dec
stc
fistps
aad
rorl
add
add
add
sub
sub
lret
testb
mov
lret
mov
lcall
mov
mov
lds
xor
mov
je
negb
aaa
pop
aam
jbe
push
jne
push
stos
jl
jmp
add
pop
jle
loop
sub
and
or
or
inc
add
in
push
data16
mov
lea
add
scas
inc
xor
int3
rolb
insl
popa
or
test
lds
cwtl
mov
pop
add
arpl
imul
jecxz
jns
enter
mov
lods
xchg
mov
jb
dec
loope
jge
push
ret
leave
scas
push
sub
and
pop
iret
pusha
roll
cmc
int3
inc
jg
jb
mull
negb
cmpsb
sub
mov
push
lret
mov
clc
inc
test
ss
jp
inc
add
jg
pop
mov
jg
sti
je
shlb
aam
and
dec
int
mov
aam
lds
pop
mov
push
jecxz
mov
fwait
daa
pop
orb
push
xchg
pushf
loopne
adc
xor
jp
push
sbb
out
xchg
pusha
inc
xor
js
xchg
xchg
mov
icebp
cmpsb
xchg
in
lret
pop
dec
and
push
xchg
shr
jnp
pop
jbe
leave
fmull
ljmp
add
sbb
enter
mov
js
mov
push
sbb
or
push
in
inc
mov
iret
jb
adc
lcall
stc
mov
int
xlat
mov
test
pop
insb
stos
pop
mov
cmpb
jp
xchg
dec
or
xchg
dec
pop
sbb
das
xor
imul
fisttpll
mov
popa
mov
add
fnstsw
inc
rolb
add
add
inc
aam
pop
add
xor
jmp
xor
jg
ja
sub
mov
add
add
add
xor
mov
dec
loopne
jmp
test
and
sbb
in
stos
pop
cmp
mov
ds
nop
xchg
insl
jg
jae
leave
sub
mov
sti
cli
cmp
stc
cmpsb
jp
movb
lods
andb
out
cmp
xor
in
adc
mov
pop
xchg
rorb
in
push
cwtl
and
insl
leave
insl
cmp
testl
mov
aaa
dec
mov
imul
push
inc
int3
je
fcoms
scas
imul
bound
outsb
sub
pop
icebp
jl
fidivl
test
cmpsb
or
repnz
imul
mov
or
sbb
nop
negb
push
sbb
xor
jb
mov
cmp
dec
xchg
xchg
rorb
mov
lret
mov
fiaddl
mov
popa
sub
push
lret
mov
xchg
xchg
add
iret
xor
rcr
mov
mov
push
push
sahf
add
xlat
ja
popf
or
outsb
out
repz
push
sti
sbb
lahf
adc
icebp
cmp
es
imul
pop
xchg
repnz
or
pop
pop
outsb
jge
jnp
add
movsl
xchg
cmc
lods
addr16
jmp
test
fnsave
fwait
out
push
sub
test
aam
lret
aas
jno
adc
imul
fwait
jae
or
fisttpl
lods
xchg
scas
mov
lret
repnz
pop
xchg
dec
shl
ljmp
scas
leave
negb
lods
cltd
add
es
movsb
xor
sub
add
fadds
push
or
xor
push
xor
adc
push
in
repnz
jl
mov
insb
jp
mov
adc
cmc
ds
cmp
mov
sub
pop
dec
nop
fadds
or
xlat
sbb
mov
lods
es
aas
add
inc
mov
jmp
xlat
inc
call
xlat
mov
test
add
add
add
cld
mov
jb
or
fnsave
jp
es
and
rol
mov
arpl
push
add
clc
daa
into
shr
xchg
shl
xchg
and
or
roll
jp
inc
fldl
adc
imul
repnz
pop
dec
and
arpl
push
xchg
sub
cs
std
pop
sub
scas
cmpsl
ljmp
sub
inc
dec
imul
gs
andb
jl
fwait
jp
js
xor
stos
pop
jno
rdmsr
loopne
pop
push
shlb
push
inc
outsb
repz
add
sbb
or
dec
inc
cmpsb
xchg
add
or
aaa
dec
das
daa
in
or
hlt
jmp
adcb
in
icebp
cli
pop
es
or
mov
inc
or
or
xchg
fisubs
inc
cmp
in
and
mov
cmp
outsl
adc
add
and
mov
or
cmp
jl
sub
inc
push
dec
inc
dec
int
xchg
push
imul
xchg
ss
lahf
mov
jmp
sarl
lret
xor
inc
mov
imul
mov
sub
push
scas
or
jl
or
cmpsl
popf
out
cmp
xor
mov
jg
sbb
insl
sub
loop
jg
cmpsl
pop
lahf
xlat
ret
pop
ror
xorl
add
aas
mov
subb
mov
icebp
lcall
and
sarb
xor
sbb
or
in
in
mov
xchg
sub
cmc
adc
testb
lret
flds
xchg
lds
jmp
jne
les
std
cmc
inc
mov
mov
in
in
xchg
jae
and
movsb
fstl
jnp
xlat
js
insb
inc
inc
test
cltd
mov
mov
and
or
imul
xor
mov
div
mov
lea
xor
jmp
movl
jmp
mov
mov
aam
push
lds
add
or
add
cltd
jne
pop
les
dec
pop
mull
loopne
adc
fdivrs
mov
cwtl
inc
jecxz
jp
dec
add
push
lcall
xchg
mov
gs
adc
js
icebp
xchg
hlt
fcoms
and
vmovupd
in
mov
ret
jbe
xchg
icebp
ljmp
mov
aaa
addb
pop
pop
ja
xlat
xor
repnz
subl
cmpsb
xor
lcall
imul
pop
xchg
mov
xor
or
pop
sbb
push
pushf
fs
jp
xchg
imul
in
xor
cwtl
pop
jno
popa
sahf
cwtl
mov
xchg
in
in
mov
dec
sub
pop
negb
arpl
cmp
push
push
cmc
xchg
pop
mov
sbb
jns
sbb
push
mov
mov
leave
cmp
test
adc
js
pop
pop
push
adc
imul
sti
loopne
or
dec
push
subl
insb
std
aad
int3
sbb
dec
push
fcomp
sbb
cs
xchg
mov
dec
adcb
push
sub
sub
lahf
sbb
jecxz
push
mov
sbbb
mov
in
lahf
into
push
ja
pop
cli
add
ds
lods
cmpsl
jb
lahf
pcmpeqb
pop
pop
xchg
push
repnz
pop
and
sbb
loopne
movl
cmp
andl
sti
push
cwtl
cmp
sub
pusha
jecxz
out
push
out
sbb
mov
pop
aaa
cmpsb
sbb
in
or
push
push
sub
popa
sub
dec
adc
cmp
xchg
ja
dec
sbb
pusha
and
sub
dec
mov
push
clc
test
jbe
xor
push
dec
or
fistpll
rcrl
fucomp
mov
cli
sub
call
movl
mov
xor
movl
mov
mov
jmp
mov
neg
jle
mov
dec
mov
add
add
add
enter
push
mov
fldenv
jl
enter
push
pop
sub
movb
cmp
xor
jle
fstl
imul
clc
xchg
loop
js
gs
testb
sub
fs
repnz
adc
aad
pop
push
jp
push
pusha
stos
add
mov
cli
xor
push
mov
push
lods
lods
xchg
lods
cli
incl
and
mov
loopne
sahf
mov
aaa
xor
ljmp
jmp
cmp
xor
jae
ficompl
cli
sub
push
push
push
mov
clc
sbb
cmp
mov
imul
lods
and
push
mov
fdivr
cltd
push
jg
adc
jp
iret
or
inc
jo
adc
in
sub
xor
jmp
lds
repnz
mov
jp
fsts
inc
fstl
es
jmp
jnp
mov
jns
ds
fmul
jmp
dec
inc
cmp
jp
and
push
dec
add
addr16
dec
jl
loope
pop
or
mov
ljmp
out
stos
push
xor
in
pop
mov
jecxz
or
fwait
push
and
dec
outsl
mov
icebp
push
pop
push
sub
jo
sti
shll
adc
hlt
rcrl
jecxz
je
daa
test
or
mov
daa
sub
cltd
das
adc
and
popf
fistl
mov
mov
inc
sarl
jmp
out
fcmovnb
sub
pop
pop
xchg
xchg
cmp
dec
jns
jp
pushf
or
stos
xchg
adcl
inc
cmp
std
testl
xchg
add
movsl
sbb
aas
rol
jmp
ljmp
sub
je
jmp
sbb
mov
push
loopne
repz
xor
div
add
mov
and
mov
jmp
bts
scas
mov
jne
add
or
add
adc
add
stos
aaa
inc
cmp
roll
adc
xor
or
or
sub
jo
out
mov
cmpsb
lock
pop
rcll
test
out
mov
add
inc
es
mov
adc
lcall
mov
and
jno
pop
pop
mov
sahf
fs
aaa
arpl
push
scas
aas
adc
lret
lret
mov
xchg
fcomi
add
pop
pop
leave
cmp
sti
xor
push
outsl
in
data16
in
hlt
in
jmp
xor
fbstp
adc
cmp
lahf
imul
lret
cmpsl
dec
shll
add
cmpsb
iret
mov
pop
sub
decl
sahf
adc
pop
out
push
scas
out
dec
inc
inc
push
sarl
ja
pusha
das
jae
or
inc
add
pop
jge
fbld
push
insl
into
lea
ds
aad
inc
mov
daa
lcall
push
pushf
pop
xchg
pop
or
xlat
xorb
pop
into
pop
mov
pop
dec
or
ljmp
adc
push
push
sbb
dec
stos
jg
adc
or
sub
add
arpl
in
lea
ret
push
sbb
jp
jle
dec
sub
xchg
jns
shll
xor
lods
into
jle
adc
jb
sbb
das
mov
dec
xchg
mov
jne
cmp
out
mov
pop
cmp
ds
sti
je
inc
adc
mov
in
int
cmp
adc
xchg
jbe
jl
xor
dec
xor
lret
dec
addr16
test
scas
inc
mov
push
adc
sbb
adc
sahf
imul
add
push
stos
mov
inc
push
push
cmpsl
mov
add
and
mov
ror
adc
xlat
aas
push
sub
jge
icebp
push
sub
inc
push
sahf
ficomps
push
pushf
pop
push
sub
mov
mov
mov
xor
and
or
sub
mov
mov
mov
mov
mov
xor
div
mov
mov
jmp
dec
cmp
jmp
add
push
loope
gs
jle
add
or
add
mov
es
cmp
in
pop
dec
sbb
xchg
inc
aas
add
xchg
sbb
xlat
push
mov
leave
jle
lds
ret
ja
movl
pusha
repnz
sti
cmp
push
imul
outsl
idiv
xchg
ds
or
mov
cmp
fiaddl
es
cmpsl
mov
push
and
and
mov
sbb
jmp
pop
or
in
stos
pop
sub
incl
out
jmp
cmpsl
dec
push
repz
js
fbld
gs
mov
mov
mov
ret
mov
mov
decb
xorb
cmpb
jne,pt
mov
mov
sub
test
adc
jg
cmpl
xor
sbb
repz
push
adc
push
cmp
stc
shlb
stc
jo
xlat
dec
and
sbb
push
mov
jmp
mov
mov
jmp
pusha
js
stc
sub
movsb
jne
and
repz
pop
xorb
push
pop
mov
scas
pop
mov
repnz
xchg
inc
push
sbb
dec
mov
aam
pop
mov
repnz
lret
out
xor
mov
pop
out
lds
lds
cmpsb
nop
add
mov
popl
sti
outsb
pop
in
mov
lods
sbb
pop
ljmp
dec
xchg
add
xor
call
in
int
cld
push
pop
mov
xchg
loopne
cmp
xchg
mov
iret
stos
stos
enter
mov
outsb
and
xchg
xor
ds
scas
push
scas
mov
jmp
call
fimuls
xor
cmpsb
push
xor
iret
aaa
call
jns
jl
inc
movsb
jl
and
in
loope
pop
jno
xchg
aam
and
mov
push
push
xor
xor
div
jmp
test
add
aas
mov
insl
sbb
cltd
movb
add
cmp
int
jb
mov
or
add
xchg
mov
sub
loopne
push
sub
adc
pop
lds
add
lret
add
jb
test
mov
out
jns
xchg
ficoml
inc
fisttpll
imull
jns
stos
cmp
add
cmp
dec
push
add
addr16
push
sbb
mov
cs
cmp
rorl
imul
dec
call
iret
imul
sbb
lahf
fdivs
aaa
imul
jne
notb
aad
int
pop
cld
jle
push
or
nop
movsb
dec
lea
mov
pop
imul
dec
mov
shrl
xchg
xor
fs
pop
or
rcrl
pop
in
or
mov
and
std
pop
sub
dec
pusha
arpl
add
in
mov
popf
outsl
fidivs
dec
mov
loopne
mov
xorb
arpl
or
cwtl
xchg
jge
loope
cmpsb
mov
aad
out
imul
mov
mov
jmp
push
andb
cmpsl
into
popf
lea
scas
es
and
fs
add
sub
push
scas
aas
js
nop
mov
loop
fmul
and
outsl
push
xchg
je
cwtl
or
mov
xor
jl
cwtl
loope
inc
cli
scas
pop
push
aaa
out
es
sub
pop
insb
addr16
pop
inc
xchg
test
es
cmp
popa
in
repnz
and
pop
outsl
cmp
xchg
add
stos
cmp
gs
mov
and
inc
fsubrl
cwtd
addl
in
out
mov
xor
lea
mov
jmp
mov
mov
jns
cs
dec
je
in
nop
or
add
add
add
ret
mov
cmp
pop
stc
add
xchg
sti
adc
call
mov
lock
out
enter
cli
xor
out
movsb
sti
and
add
or
leave
fs
ljmp
push
xchg
sbb
or
fdivs
push
xchg
stos
inc
js
cmp
mov
mov
bound
push
popf
ja
sbb
movsl
cltd
xchg
sub
push
in
mov
out
movsl
xchg
cmpsb
xchg
out
xor
push
test
push
test
cmc
imul
cmp
mov
push
pop
sbb
scas
repnz
and
jne,pt
jmp
mov
out
xchg
sub
xchg
call
or
popf
loopne
scas
push
decl
int3
addb
inc
push
mov
adc
sbb
fs
push
and
pop
add
cmpsb
bt
ss
xor
cmpsl
mov
xor
jbe
push
dec
or
xor
testl
pop
ror
aam
inc
and
movsl
mov
xchg
inc
dec
push
in
inc
jbe
cmp
cmp
xchg
mov
mov
loope
test
add
test
aas
test
jno
imul
ja
and
sub
fs
adc
pop
loopne
add
mov
ja
ss
lret
jne
or
jae
lahf
pop
mov
daa
mov
xchg
movsb
into
mov
subl
dec
sub
ret
sub
sbb
ja
sub
or
leave
xchg
xor
ds
mov
scas
mov
sub
ja
rolb
lods
in
repz
stos
xor
sub
pop
mov
out
outsb
sub
dec
inc
bswap
mov
popa
push
xlat
imulb
insl
cmpsb
sti
out
jmp
xchg
ret
jg
mov
push
mov
clc
and
jmp
lea
jge
jg
lock
sbb
push
or
add
add
add
push
inc
insl
xor
fwait
aaa
dec
unpckhps
push
xor
sub
pop
lea
int3
push
pop
sbb
ja
mov
xlat
adc
aaa
cmp
jne
insl
push
mov
pop
popf
ret
rcrb
cltd
mov
sbb
mov
add
jns
insl
pop
out
mov
dec
shrl
loopne
loopne
pop
ss
cmp
cmp
adc
mov
stos
add
lahf
mov
add
inc
std
push
ljmp
insl
out
mov
xor
cmpsl
mov
mov
xchg
mov
lret
aas
jmp
adc
lcall
loopne
les
fwait
sbb
mov
adc
and
cmc
jne
cltd
or
test
cmc
xor
jnp
lahf
dec
imul
cld
pop
inc
add
fcomps
rorl
jp
jbe
ja
xchg
int3
sub
in
cltd
jle
inc
cli
int
rol
xlat
mov
push
xchg
loopne
sub
mov
loopne
repnz
xor
pop
fwait
lds
jnp
pop
shll
inc
fimuls
repnz
adc
pop
ret
mov
in
pop
mov
fcoml
mov
push
ss
cmpb
xor
xchg
sbb
push
xchg
mov
movsb
and
adc
out
scas
pop
inc
cmp
cmp
lods
repnz
add
xchg
pop
bound
fstps
out
mov
lret
cmp
movsl
jo
test
shr
dec
push
dec
jle
xor
pop
mov
enter
outsl
lahf
dec
push
lcall
pop
loopne
das
testb
pop
xlat
sub
jmp
ds
push
xor
test
mov
xchg
sbb
scas
lcall
and
daa
scas
lahf
stos
ret
jmp
xchg
add
out
inc
xchg
jo
and
mov
add
add
xor
enter
stc
push
les
repz
push
mov
cmc
jl
jo
cmp
xor
scas
xchg
push
pusha
cld
loopne
jb
pop
outsl
ret
push
and
arpl
dec
ret
cltd
data16
pop
pop
inc
push
std
adcl
out
xchg
mov
add
adc
addl
daa
stos
fisttpl
test
pop
fwait
aad
cmp
push
sbb
push
xor
mov
lahf
out
xchg
add
and
jecxz
sub
shl
addl
clc
jmp
or
add
test
das
mov
pusha
xchg
jmp
es
dec
adc
sbb
add
repnz
pop
sub
int3
mov
lds
mov
dec
es
or
xchg
fisubrs
pop
mov
jl
data16
in
fldt
xchg
jecxz
jb
mov
push
push
sarl
bswap
cmp
popw
dec
subl
lahf
xchg
inc
jno
fwait
test
sub
add
daa
int3
rolb
and
jb
push
iret
dec
mov
movsl
inc
test
aas
and
push
rcll
xlat
adc
xor
arpl
shlb
pushf
pop
gs
cmpsl
cmp
mov
mov
dec
xor
js
jle
fmull
dec
jecxz
sbb
imul
int
ljmp
repz
xor
adc
adc
dec
dec
pop
std
and
jg
pop
xor
jge
movsb
enter
lods
mov
pop
lret
fwait
ja
ss
mov
mov
or
xchg
jecxz
or
fstpl
je
and
rclb
or
cltd
push
ret
jae
or
cli
xchg
jno
push
repz
dec
mov
pop
mov
hlt
lea
cmp
jb
movl
movl
jmp
std
xchg
mov
push
cmp
das
sbb
dec
es
stos
sgdtl
or
add
mov
inc
jo
adc
outsl
mov
jns
test
ljmp
xor
and
aam
adc
test
cmp
jge
outsb
fnsave
in
dec
adc
stc
roll
subl
add
data16
lret
mov
sahf
push
jbe
pop
enter
sbb
std
imul
pop
cmpb
fwait
lret
push
mov
jne
and
cmpsb
mov
fidivs
add
arpl
cmp
pop
push
les
insb
pop
xor
and
xchg
jmp
out
mov
inc
int
jp
mov
loopne
daa
fcomi
add
iret
sti
inc
in
daa
stos
mov
iret
push
sub
adc
mov
xchg
stos
and
clc
mov
sahf
mov
sub
fidivrs
lcall
jle
cli
aam
inc
cmp
ficompl
clc
mov
mov
xor
aas
jmp
data16
inc
mov
shl
xchg
gs
jnp
push
popa
adc
sub
imul
hlt
inc
mov
mov
call
out
pop
fsubs
pop
cltd
inc
jne
inc
cmpsb
hlt
out
lcall
xchg
lock
pusha
leave
push
lds
xchg
fcomps
lahf
in
int
push
mov
scas
out
add
int
mov
test
mov
pop
fwait
mov
adc
popa
xchg
lcall
loop
mov
testl
sub
mov
push
pop
sub
jmp
fwait
push
xchg
inc
sub
mov
aam
imul
aaa
in
ljmp
scas
xor
das
aaa
fimuls
js
or
or
push
xor
xchg
das
in
mov
jb
lahf
jle
fsubs
mov
xor
xchg
rcl
test
xchg
cmp
shlb
outsb
dec
pop
in
mov
pop
push
and
sub
movl
movl
jmp
sarb
mov
rcll
lds
imul
add
add
add
push
fwait
inc
in
sbb
testb
insl
sub
dec
adc
ret
cwtl
jl
push
in
pop
int3
push
iret
mov
push
stos
and
dec
movsl
out
rclb
stc
mov
dec
fld
imul
sahf
ljmp
xor
cmp
mov
icebp
jns
jnp
jae
sub
sbb
inc
cltd
xor
mov
jmp
xchg
or
sahf
jnp
movsb
or
xor
lahf
sti
and
pusha
dec
cmp
mov
repz
add
aam
xchg
pop
or
push
gs
mov
lods
aad
lods
addr16
sbb
hlt
inc
dec
cmc
adc
xchg
outsl
sti
jmp
test
mov
lds
out
nop
andl
das
cld
sarb
cmp
xchg
xchg
push
add
mov
test
ds
inc
je
sbbb
lcall
fdivrl
or
out
add
xchg
cwtl
push
pop
dec
out
inc
leave
cmp
das
or
imul
das
movsb
push
sti
inc
mov
dec
outsl
lahf
stos
adc
mov
and
roll
outsb
out
hlt
or
cli
xor
rorb
jo
add
pop
es
push
jne
ja
mov
sbb
js
dec
dec
in
push
popf
sub
outsb
sub
push
pop
dec
data16
mov
loope
or
enter
ja
inc
cltd
pushf
add
or
hlt
mov
fisttps
jbe
mov
mov
fwait
mov
sbb
sub
pop
iret
addr16
pop
mov
es
test
inc
jle
add
call
into
daa
push
xchg
test
mov
xchg
jbe
sbb
cltd
imul
mov
sahf
lods
mov
fs
push
mov
mov
sahf
cmp
inc
and
or
adc
add
inc
lock
adc
add
inc
in
and
add
jmp
cmp
mov
aam
aam
mov
add
add
sub
xor
inc
dec
ret
mov
enter
outsl
sbb
mov
or
mov
cs
jl
arpl
loope
sub
je
and
insb
mov
pop
add
aaa
mov
cmc
sahf
out
and
int
dec
stc
xchg
push
mov
mov
aad
mov
mov
in
aas
inc
rclb
loope
lret
jg
stos
push
test
js
adc
push
rcpps
sub
notl
iret
aad
lahf
inc
insb
pop
cmp
movsl
js
nop
enter
push
jnp
hlt
sti
ret
sub
movl
stc
test
mov
dec
mov
lods
push
int3
adc
hlt
mov
aam
and
sahf
jecxz
dec
cmp
xchg
movsb
pushf
out
hlt
xchg
pop
xchg
sbb
lcall
arpl
and
das
inc
inc
cmp
aas
sub
test
shll
outsl
aas
test
scas
daa
push
push
lea
inc
sar
in
inc
or
mov
jbe
mov
mov
fwait
dec
fisttpll
xabort
loopne
das
xor
leave
lahf
pop
and
shl
push
and
icebp
fwait
mov
mov
setle
xchg
mov
cmp
scas
mov
sbb
lcall
pop
sbb
and
mov
and
cmp
or
adc
daa
das
shlb
push
and
pop
incl
cmp
push
ret
test
sub
fsubrs
sbb
jbe
stos
push
cmp
push
push
sbb
and
stos
dec
mov
and
test
fldcw
fisubs
mull
in
dec
call
inc
cmpsl
adc
mov
fnstsw
adc
into
js
pop
aam
add
sub
into
jmp
push
ffreep
inc
call
jmp
loope
ret
mov
push
jg
test
lcall
add
add
add
sbb
mov
mov
push
cmc
jb
ljmp
rcrb
test
sub
sbb
ret
dec
inc
mov
cmpsb
xor
mov
mov
or
or
inc
popa
cmpb
gs
imul
xchg
fidivrl
leave
cmp
mov
sbb
popa
icebp
push
xchg
enter
mov
inc
aas
mov
inc
pop
fcoml
xor
mov
hlt
movsl
push
jnp
push
mov
cmp
xchg
sbb
shr
sub
repz
and
push
xchg
jg
inc
mov
sbb
adcb
popf
or
nop
std
sub
loop
dec
dec
mov
test
jp
add
push
in
xchg
push
sub
add
cmp
push
icebp
mov
lea
shl
imul
mov
ret
aas
pop
adc
ljmp
sub
loope
loop
jbe
add
push
fcoms
push
jno
xor
rclb
adc
loope
pop
jg
dec
mov
xor
pop
ret
ret
or
addr16
je
jb
shrl
lret
repz
and
icebp
js
test
enter
outsl
imul
pop
lea
mov
push
mov
lock
outsl
test
sbb
gs
outsl
js
shl
xchg
enter
insb
jo
aad
cmp
in
add
add
mov
in
loope
fstl
and
mov
in
fistps
or
ss
add
push
xchg
sbb
push
adc
daa
pop
mov
xchg
push
jmp
fnstsw
sub
loop
xchg
movsb
inc
mov
in
jae
inc
aas
popf
lret
iret
inc
cmp
mov
in
jnp
ja
movl
jmp
rorl
jle,pt
jg
scas
lock
iret
pop
add
or
add
lds
je
adc
test
rclb
jae
pop
or
roll
rclb
pop
jge
sub
xor
push
fdivrs
pop
data16
call
aam
lahf
jns
mov
rorl
int3
ljmp
stc
pop
aaa
cmpsb
xor
shrl
or
addr16
xchg
shr
pop
pop
inc
mov
fcomp
mov
mov
and
rcrl
fidivrl
xlat
aad
test
repz
icebp
loopne
push
fxch
dec
xor
lock
inc
pushf
pinsrw
add
xchg
cli
scas
xor
jge
mov
repnz
lcall
cmpsb
add
dec
test
ss
ret
mov
mov
jl
js
imul
mov
pop
push
lcall
push
jp
inc
aam
sti
jno
movb
cmpsb
gs
jl
jno
adc
jl
aam
movsl
repz
outsl
iret
fistps
out
fsubrp
cmpsb
subl
and
and
xchg
and
je
adc
test
cs
cmp
mov
inc
call
test
pop
lods
das
std
jno
pusha
mov
loope
xchg
push
dec
or
into
out
xchg
movsb
in
iret
dec
cltd
out
insb
fnop
js
cmc
push
data16
cltd
inc
call
js
push
clc
fidivrl
pop
and
pop
adc
push
and
and
insb
mov
sub
add
mov
xchg
jl
pop
or
dec
sub
mov
repnz
fwait
or
adc
cmp
loopne
ljmp
lock
outsl
push
inc
les
pop
repnz
mov
add
fs
std
dec
incb
out
cs
adc
or
and
jmp
jbe
mov
or
jbe
jecxz
ja
mov
add
or
jmp
mov
lods
fsubr
fdivp
pushl
les
jno
and
sbb
add
add
add
jae
mov
mov
filds
inc
subl
out
dec
pop
cmp
out
or
push
test
xchg
hlt
bound
mov
mov
jge
out
and
push
mov
es
sub
dec
sub
int
imul
mov
outsb
xchg
sbb
test
xchg
mov
nopl
adcb
inc
xor
or
sbb
stos
pop
push
mov
fwait
out
test
xorl
inc
insb
cmp
ljmp
aaa
dec
and
sti
push
int3
add
sub
mov
push
test
push
mov
sub
mov
and
push
xchg
push
sbb
aam
daa
rorl
jnp
pop
inc
or
xchg
shlb
push
scas
mov
cltd
xchg
icebp
add
pop
and
sub
or
and
cmp
test
aas
outsb
and
aas
jbe
mov
orb
cwtl
lret
lea
mov
rorb
push
outsl
iret
dec
inc
push
movsl
sahf
fcmovnbe
addr16
lock
push
xchg
test
and
insb
movsl
cmp
ficoms
jp
arpl
in
mov
aas
xor
mov
add
push
mov
pushf
shrl
insl
adc
or
mov
lret
into
adc
cmc
movsb
fwait
outsl
jae
outsb
in
jmp
inc
push
adc
andl
or
ds
repz
add
mov
dec
iret
and
out
mov
jl
push
lock
insb
aad
call
adc
mov
fdivrs
popf
leave
jge
lcall
fmul
add
mov
jmp
mov
push
jge
repnz
dec
aad
xchg
mov
add
sub
cmp
stc
test
movsb
popf
nop
sbb
pop
ja
loopne
mov
sub
jmp
mov
jmp
jo
mov
mov
out
mov
or
xchg
aaa
jnp
loope
add
or
add
scas
fmulp
sbb
cli
or
mov
repnz
jmp
xor
jae
push
sbb
fstps
jnp
jl
mov
fiaddl
adc
push
movsl
and
inc
cltd
movb
addb
push
cmp
sub
lods
insb
fsubp
jl
mov
cmc
mov
sub
cmp
mov
pop
pop
push
push
je,pt
out
pop
jno
ljmp
leave
cli
mov
cltd
push
dec
test
enter
movsb
cmpsl
pushf
jecxz
cmpsb
loope
icebp
mul
jle
dec
xorb
mov
scas
add
and
enter
aad
mov
fstpt
cmp
bound
add
dec
mov
xchg
pop
inc
or
cmp
imul
add
xor
rclb
adc
out
cmpsb
cmp
cmp
adc
lods
call
insb
push
or
and
jbe
pop
jl
adcl
ja
iret
clc
push
out
insl
sub
push
jne
inc
sub
dec
pusha
pop
aas
aas
jne
cmp
jge
sbb
stc
ja
pop
mov
popa
lcall
insl
mov
push
les
or
fildl
and
test
pop
sar
outsl
lea
jae
mov
aas
ret
loop
dec
xor
sub
jle
sub
fnstenv
shrb
jecxz
stc
repnz
fstp
int3
mov
pop
lahf
enter
xchg
adc
and
and
lret
jo
lret
and
add
inc
stos
or
pop
test
push
mov
sub
cmp
mov
into
in
jge
fadds
jmp
push
pop
mov
sub
dec
data16
dec
js
les
test
stc
js
mov
pop
mov
inc
mov
mov
xor
xorl
pop
into
mov
inc
int3
and
add
fcoml
xor
add
inc
fdivs
add
movl
mov
jmp
loopne
pop
fstpt
out
stc
xor
insl
ljmp
add
bound
push
and
pop
lcall
and
out
test
xchg
pop
enter
ret
popf
decl
dec
addb
fcmovnbe
gs
mov
jg
xchg
aaa
xchg
add
dec
leave
jecxz
inc
jno
les
or
or
push
popa
push
ret
pop
inc
xchg
jbe
push
scas
jmp
mov
cmpsb
outsb
daa
int3
lods
enter
cli
xchg
sbb
std
adc
out
arpl
rol
lea
pop
pop
cmpsb
xor
add
push
pushf
cld
and
movsb
clc
aam
adc
xlat
cli
imul
pop
inc
pusha
and
cld
in
imul
mov
fmulp
sub
sbb
xor
pop
cmp
rclb
or
aad
in
aaa
sarl
movsl
int
daa
xor
test
sub
mov
cmp
xorb
add
aam
ret
or
push
mov
or
out
fstps
std
add
or
inc
leave
leave
mov
mov
cmp
call
in
xchg
sub
popa
repz
fcompl
jb
pushf
shll
xchg
push
aaa
fisttpll
lea
imul
and
out
loop
loope
setnp
movsb
dec
inc
xor
pop
mov
xchg
jmp
xchg
mov
inc
mov
add
and
nop
xchg
popa
xchg
mov
je
mov
fistps
loope
sub
mov
mov
scas
sbbl
out
pop
in
repnz
movsb
add
and
cmp
inc
les
in
dec
xor
arpl
lret
cmp
out
xchg
les
xchg
mov
or
mov
jne
in
pushf
clc
and
and
das
aaa
dec
xorb
dec
subb
jmp
stos
jl
mov
jge
xor
shr
div
jmp
xorb
mov
pop
cli
add
pop
add
or
add
out
push
fwait
js
pop
jns
and
jl
mov
negb
mov
jg
inc
rcr
in
xlat
add
out
mov
pslld
insl
mov
daa
push
mov
sbb
cwtl
cmp
xor
jnp
faddl
sub
repnz
movsl
or
or
cmp
daa
bound
comiss
mov
inc
push
jns
dec
mov
popf
imul
lret
and
push
fists
inc
sahf
cmc
movsl
jle
in
xor
push
jmp
mov
and
mov
fbld
fbstp
xchg
jl
jns
push
lods
jae
fyl2x
and
mov
mov
or
pop
insl
in
sub
ja
lret
movsb
or
pop
addr16
pop
mov
cwtl
push
push
addr16
mov
fdiv
and
cmp
loopne
cld
lock
aad
dec
push
cmc
add
add
xor
sahf
and
arpl
repnz
or
inc
shlb
jnp
xchg
or
loop
pop
sbb
notb
mov
pop
lods
sbb
xchg
addr16
shll
shl
das
jl
dec
add
ja
sub
sub
mov
cmp
fnsave
pop
xchg
mov
shrb
add
add
sti
loopne
xor
dec
cmp
jae
aas
icebp
cmpsb
rcl
out
lock
int
dec
sahf
test
imul
mov
cmp
or
mov
mov
dec
or
push
pop
pop
out
add
mov
inc
xchg
and
into
cltd
mov
push
mov
sub
pop
push
ja
cltd
ljmp
cmp
and
mov
pop
clc
and
jo
lock
pop
adc
jle
test
xchg
mov
daa
mov
imul
jmp
push
lea
xlat
fst
lods
cmpsl
rcl
sub
add
add
add
add
in
xchg
shlb
icebp
in
pop
in
shr
aad
lds
mov
ror
out
subb
mov
jbe
push
imul
sarb
jmp
in
jmp
mov
rcll
lret
fidivs
dec
dec
pop
lcall
mov
pop
pop
cmp
rcr
pop
fcomi
and
sub
mov
jne
dec
push
or
push
out
cmpb
xchg
leave
fadd
adc
mov
jl
inc
pop
add
cmpb
pop
xchg
out
sahf
xor
aam
inc
pusha
or
lock
cltd
out
fcompl
lret
dec
stos
popa
inc
popa
lds
xor
xchg
mov
call
xchg
sub
jle
xchg
push
sbb
push
leave
mov
loope
scas
jb
pop
stos
inc
mov
mov
jl
mov
fwait
cmp
cwtl
xchg
push
pop
icebp
dec
popf
shl
jne
leave
jge
ljmp
in
xchg
cmp
push
cmp
fsubrs
sar
xlat
sahf
cltd
push
mov
mov
xchg
dec
test
xchg
jae
sbb
testb
xor
pop
iret
mov
ds
jg
xchg
es
pop
loop
pusha
fsubrl
in
popf
repz
in
push
mov
stos
xchg
pop
sarb
jmp
addr16
rorb
leave
shlb
add
and
cld
cmp
mov
add
fwait
mov
sbb
push
jg
cmp
sbb
mov
pushf
not
outsl
cltd
jge
mov
cmp
outsl
insl
pop
lock
test
in
je
iret
stc
andb
pop
pop
dec
lcall
add
insb
xchg
ret
lds
jecxz
test
gs
imul
ss
mull
push
cltd
into
lahf
data16
ret
test
imul
xor
sub
mov
add
mov
mov
or
xor
xor
div
mov
jmp
enter
mov
ds
xchg
int3
add
add
add
mov
mov
pushf
xor
rsqrtps
inc
cmp
dec
fbstp
mov
sub
add
mov
imul
dec
inc
imul
pop
sub
ret
mov
cmp
mov
cmp
dec
cld
lods
push
in
inc
pop
in
call
push
enter
sbb
or
mov
js
mov
xchg
mov
fistpl
movsl
jge
lods
pushf
xor
xor
mov
imul
lret
sbb
sahf
sbbb
rorl
mov
movsl
dec
xor
xchg
sbb
lock
lret
jae
ror
push
inc
int
mov
jge
mov
pop
or
xor
inc
sbb
pop
cmpsl
xchg
xchg
fisttpll
aaa
dec
mov
rep
andb
lret
jle
mov
icebp
xor
insb
adc
xchg
lret
jbe
jnp
pop
and
mov
mov
sbb
cmp
mov
mov
loopne
rcrb
mov
push
sbb
cmpsb
cmp
inc
adc
and
jae
mov
push
loope
inc
test
aaa
in
mov
lcall
fldt
cmc
mov
shl
xchg
mov
decb
pop
add
in
test
fs
orb
cmpsl
rcrl
pushf
inc
test
sub
dec
popa
sarl
dec
add
stos
ret
pop
sti
fdivrl
enter
div
mov
sbb
and
mov
aam
adc
push
in
outsl
sbb
adc
lods
out
sbb
mov
dec
sub
push
inc
lret
sbb
mov
cmp
xor
sbb
mov
mov
xchg
outsb
and
jecxz
fstl
push
xlat
sbb
mov
jne
and
int3
fxch
lods
adc
mov
mov
jmp
push
clc
xchg
scas
lcall
pop
hlt
popa
std
xchg
xor
add
or
add
push
or
and
pop
repz
push
int3
pushf
mov
pop
dec
aaa
mov
mov
pop
out
sub
xchg
sub
push
loopne
dec
pop
push
mov
loop
sbb
aas
push
jns
scas
sub
xor
stc
adc
mov
xchg
pop
test
or
icebp
cltd
or
fisttpl
cmp
mov
lds
nop
jno
push
aas
mov
neg
adc
std
cmp
aad
pop
xchg
add
outsl
dec
in
ss
adc
sub
popf
andb
add
enter
push
ds
stos
aas
pop
cmp
dec
mov
add
addr16
sahf
sbb
bound
or
xchg
mov
fcom
adc
xlat
fldz
push
movsl
sbb
push
enter
pop
cmp
cmpsl
dec
push
std
inc
call
mov
push
test
push
subb
sub
adc
push
adc
mov
mov
dec
xor
popa
ret
mov
dec
into
stos
mov
pushf
or
inc
clc
mov
push
loopne
cmp
jne
dec
cmp
add
lock
adc
pushf
das
mov
inc
rolb
popf
in
fsubrs
push
dec
das
lods
ljmp
push
jmp
xchg
sub
mov
dec
dec
andl
xchg
xchg
jae
mov
out
sbb
cwtl
xchg
ljmp
mov
xchg
fiaddl
testl
push
xadd
dec
ss
jp
ljmp
fmuls
pop
sub
ret
out
cmc
test
stc
lret
icebp
cmc
mov
pop
pop
clc
xchg
pop
xor
scas
pop
push
mov
adc
mov
and
icebp
sarb
fidivrs
mov
stos
sub
mov
dec
push
jnp
addr16
cs
adc
rorb
pop
jmp
xlat
xor
mov
in
jmp
sbb
pop
sbb
add
or
add
lods
sbb
aas
pop
sbb
enter
mov
out
imul
into
push
std
sbb
ret
jl
outsl
mov
fcomps
jne
mov
or
out
shll
int
cmp
or
in
aaa
lret
inc
xor
ficoms
jb
int
and
cmp
dec
cs
icebp
jbe,pt
insl
aaa
push
stos
dec
or
in
inc
lahf
lea
scas
inc
lods
push
movsl
imul
fldl
sbb
mov
pop
mov
imul
lock
out
arpl
mov
and
mov
mov
fldenv
cmpsb
fdivl
lock
pop
push
arpl
test
inc
hlt
out
push
fcmovb
add
sti
jmp
inc
mov
enter
jno
insl
inc
xor
sbb
orb
sarl
push
add
xor
push
sbb
dec
fidivrs
lods
movsl
stos
sub
sub
cmpsb
rol
push
xchg
lods
dec
addr16
jle
mov
iret
ret
pop
mov
mov
int
xor
lret
sub
lret
filds
out
lods
lock
imul
mov
cmc
jecxz
aam
and
lds
or
out
scas
fwait
lea
cmp
xor
inc
inc
and
test
jns
int
ret
cmp
jnp
add
mov
mov
loopne
mov
loopne
push
aad
insl
mov
inc
addr16
cmp
cmc
adc
ds
rorb
push
js
cmpsb
sub
pop
jo
inc
test
adc
fsubrs
popa
xchg
fcomp
mov
arpl
push
xchg
inc
sbb
jecxz
sub
inc
pop
iret
mov
mov
data16
mov
fprem
aad
lret
mov
sbb
fcompl
cmc
shll
daa
pop
ret
test
mov
add
call
in
and
mov
jmp
mov
mov
push
fstpl
add
add
add
shll
js
mov
clc
outsb
xchg
inc
cmp
gs
cmp
movsb
sub
aad
and
jne
push
xor
mov
add
jmp
or
push
adc
xchg
test
rclb
mov
mov
pop
inc
pop
stc
lods
popa
fistps
clc
pushf
and
out
or
repnz
ljmp
imul
mov
mov
xchg
xchg
sbb
jo
jg
adc
push
dec
or
daa
mov
mov
mov
aas
lock
jbe
add
or
push
outsb
dec
cmp
pushf
jge
xor
push
cmp
je
inc
scas
cmpsb
and
cmp
test
mov
sbb
sbb
and
xor
fwait
inc
dec
pop
or
enter
out
in
mov
out
adc
leavew
leave
pop
lret
xchg
push
lcall
push
push
stos
cmpsl
fwait
pop
mov
imul
dec
dec
pop
lcall
mov
mov
test
add
jge
add
fs
xchg
incb
iret
xchg
adcb
or
add
push
cmpsb
mov
repz
pop
or
aam
pop
push
and
jb
es
or
xor
adc
lods
push
std
cmpsl
int3
inc
sub
mov
adc
push
adc
aad
cmp
cld
pop
in
rcl
xchg
movsl
xchg
cmp
xchg
pop
imul
rcll
arpl
pop
out
dec
jl
push
fs
or
xchg
mov
pop
xchg
mov
push
pop
jne
jb
mov
push
inc
jb
cmc
xchg
ds
cmpsb
lds
das
test
mov
sub
lods
xchg
dec
mov
jp
add
shr
and
add
push
pop
add
pop
xchg
jl
outsb
adc
pushf
sub
add
add
add
sbb
outsb
ret
pushf
js
enter
in
xlat
jo
int3
xor
scas
repnz
cmp
jbe
and
test
sbb
shlb
add
and
pop
push
jae
pop
cltd
jle
and
stc
mov
jge
xor
stos
mov
cmp
push
sbb
mov
cmpl
pop
mov
jno
sub
sub
pop
xlat
dec
jle
push
dec
jne
add
sahf
gs
pushf
enter
orb
pop
xchg
ljmp
out
inc
shr
lret
xlat
movsb
mov
push
cltd
out
and
outsl
inc
aad
push
sahf
sbb
adc
pop
pop
mov
mov
sub
jne
icebp
adc
add
cld
and
cmp
ret
mov
and
mov
xchg
fdivr
and
dec
add
mov
sbb
ficoml
fcmovne
cmp
fwait
out
out
jbe
into
aam
or
mov
aam
add
pop
loop
testl
enter
imul
rorl
push
and
xor
push
lcall
into
popf
add
mov
nop
jnp
and
inc
xor
pop
xor
and
xchg
repz
jo
fs
mov
gs
add
sahf
gs
jne
cltd
pusha
cmp
and
adc
test
imul
cmc
gs
mov
pop
call
dec
mov
push
repz
lcall
js
aas
pop
mov
jns
imul
jne
arpl
jbe
adc
loop
lods
xchg
sub
fs
mov
arpl
insl
jne
cwtl
int
mov
ds
jl
push
mov
or
cwtl
sbb
inc
or
xor
add
add
insl
repz
idiv
sti
jmp
gs
add
add
add
gs
and
pop
test
in
lock
sbb
adc
stos
dec
or
mov
adc
xchg
xchg
repz
dec
add
jo
jns
sbbl
mov
pop
xlat
add
pop
xchg
jnp
mov
cs
or
push
pop
xchg
rolb
inc
in
clc
mov
push
into
dec
loopne
loopne
out
aaa
nop
push
iret
sub
rclb
std
das
mov
cmp
sbb
xchg
push
call
movsl
jo
enter
sbb
out
stos
jo
pop
scas
pop
sbb
cmp
pop
movsb
sub
scas
cmpl
inc
lea
mov
cmp
pop
xor
push
imul
xor
push
icebp
or
inc
cmc
jb
sub
add
cmpsl
into
lcall
xor
int
loope
sub
dec
dec
pop
bound
scas
aam
lret
mov
sbb
cmp
out
fsubrp
fistl
flds
in
cmp
or
testl
or
sbb
dec
ficoml
push
fcmovne
xchg
adc
shrb
jge
xor
icebp
mov
xor
cwtl
ret
xor
dec
xchg
in
movsl
push
imul
std
adc
bextr
in
fsubr
ret
fistl
mov
push
loope
xchg
adc
inc
add
dec
push
mov
pop
and
lahf
or
cwtl
in
imulb
push
cmp
cmpsb
add
call
js
xlat
cli
xchg
jle
adc
jg
inc
mov
xor
mov
jle
jno
in
adc
mov
xchg
imul
mov
mov
shrl
mov
xor
xor
or
mov
xor
sub
xor
cmp
jne
jmp
mov
iret
cmc
push
std
sahf
or
add
or
add
pop
rdtsc
call
fwait
push
mov
pushf
lcall
ror
push
stos
in
cmp
cli
scas
fucomip
mov
orl
iret
mov
pop
in
jne
rep
pop
pop
scas
rcrb
xchg
fcoms
imul
dec
mov
xchg
jmp
push
les
scas
and
adc
icebp
mov
inc
add
add
jns
sub
fsubl
jecxz
aad
push
mov
cmp
int3
outsb
and
jae
repnz
andl
in
xchg
mov
cmp
int
sub
hlt
cmpb
pop
fs
mov
adc
sub
test
jg
push
pop
inc
inc
xor
xlat
mov
addr16
dec
mov
stos
je
cmc
sub
in
ljmp
mov
fbstp
imul
das
cmpsl
cld
iret
int
sbb
dec
push
insb
adc
fwait
cmp
pop
xchg
gs
stos
scas
mov
mov
vandpd
mov
icebp
cmc
test
imul
pop
out
or
xchg
cltd
loope
xchg
es
movsb
sbb
inc
aas
sbb
mov
out
andl
or
nop
sbb
xchg
jo
jmp
iret
adc
inc
mov
lahf
and
sbb
mov
scas
sub
mov
and
lcall
sub
jge
out
scas
cltd
pshufw
jmp
jp
mov
jg
outsb
add
jmp
out
inc
imul
leave
push
je
ljmp
out
sbb
jb
pop
sub
adc
and
dec
adc
mov
sub
mov
mov
js
sbb
scas
inc
or
incl
mov
leave
xchg
jnp
sbb
test
std
std
pop
mov
pop
and
cltd
mov
adc
cmpsb
in
das
xchg
mov
inc
int3
adc
or
inc
or
jge
add
inc
hlt
mov
add
movl
movl
jmp
pop
pop
jg
jg
pop
ficoms
popa
mov
add
add
add
or
imul
inc
aad
mov
mov
or
cmp
adc
jns
cmpsb
push
lock
cmpsl
into
sahf
xchg
ljmp
rorb
cmp
roll
cmp
insb
pop
test
popa
inc
mov
test
lcall
in
imul
mov
jg
shl
int3
rorb
mov
xchg
adc
xchg
outsl
cmpsl
sahf
mov
enter
dec
cld
stos
ret
xchg
xchg
lods
dec
rcrb
lea
mov
daa
movb
jb
and
lahf
cmp
xchg
cmp
jmp
outsb
cltd
test
jmp
push
stc
xor
pop
gs
inc
les
je
and
imul
int3
inc
scas
cwtl
lcall
mov
test
jmp
aad
cmp
jecxz
push
jg
aas
insl
sti
push
cltd
out
cmpsb
push
popf
in
out
pop
push
fcmovnu
mov
push
xchg
ja
enter
scas
push
stos
and
bound
pop
sbb
aad
push
adc
sbb
daa
jge
adc
mov
mov
std
lret
jno
mov
hlt
in
insb
loop
imul
jmp
iret
add
out
mov
ss
out
daa
imul
test
or
dec
mov
add
aaa
inc
js
adc
xchg
dec
push
push
js
push
dec
xchg
adc
lahf
sub
test
call
std
movsl
pop
add
and
out
inc
push
or
orl
dec
jge
in
test
ret
int
mov
inc
mov
cmp
je
outsb
mov
mov
mov
jae
xchg
add
adcb
fs
stos
pop
ss
inc
call
movl
movl
jmp
out
fwait
pop
mov
fucom
sub
mov
out
test
or
add
pop
jmp
sub
pop
adc
sub
mov
call
pop
icebp
je
cmp
push
jmp
mov
or
xor
inc
cld
stc
aam
call
lock
mov
sub
daa
push
daa
push
fstpl
mov
and
cmp
cmpsl
sbb
adc
cmp
inc
pop
adc
ja
cmp
rclb
mov
inc
fmul
dec
push
fwait
push
sbb
cmpsb
aam
scas
js
add
nop
arpl
in
ja
mov
jmp
shrb
jno
repnz
jbe
pop
push
mov
or
outsb
xchg
adc
xor
inc
push
out
cmp
shl
in
push
das
pusha
enter
pop
pop
push
jg
cmp
lds
mov
mov
push
out
addb
mov
inc
fimull
lds
dec
sbb
push
out
jmp
iret
addr16
loope
jns
xchg
cwtl
test
and
jne
dec
xor
test
mov
pop
iret
dec
cmp
and
cmp
outsl
test
jb
dec
fists
xor
mov
inc
sub
adc
cmp
test
xchg
loopne
inc
jbe
sub
dec
cs
fimuls
pop
or
jno
push
cltd
out
sub
jno
imul
mov
lahf
mov
sub
cmpsl
div
and
cmp
std
cli
lea
adcb
gs
aam
add
xor
hlt
pop
mov
xor
iret
jno
push
call
fsub
stc
lret
push
mov
inc
loop
dec
scas
fists
cmp
mov
pushf
iret
aam
inc
mov
lea
test
in
or
dec
data16
mov
xchg
xor
lds
adc
sub
insb
in
into
xchg
xor
push
sti
sti
jbe
mov
inc
fsubr
insl
add
mov
mov
jmp
xor
pop
xlat
std
fistpll
cld
push
xchg
push
add
or
add
icebp
inc
mov
bound
je
fisttpll
sub
xchg
inc
xchg
adc
jnp,pn
std
or
push
xor
push
mov
or
push
xor
int3
dec
enter
jg
and
das
push
mov
roll
xchg
fwait
out
cmp
mov
into
xor
cmp
or
mov
je
dec
add
ss
cmp
fistl
out
jmp
insl
and
sub
sub
add
push
test
je
cmc
mov
cmp
cmp
fcmovnu
sbbl
or
mov
mov
adc
and
adc
sbb
lods
mov
cmp
int3
pop
pushf
es
in
rorb
adc
cmp
mov
nop
pop
xor
rclb
andl
ja
ffreep
xchg
ljmp
loopne
imul
cltd
rclb
rcrl
stos
pop
out
fdivrs
pop
daa
mov
lock
test
or
fisttps
and
aad
adc
rcll
mov
pusha
andl
or
push
mov
or
insb
fwait
dec
inc
lods
add
inc
out
mov
ret
or
scas
pop
or
mov
arpl
scas
dec
pop
rclb
sbb
fisubrs
fstp
es
repnz
popf
sbb
cmpsl
mov
sub
fwait
inc
sub
test
pop
rcl
mov
or
pop
out
ds
fdivs
push
loope
idivb
addl
repz
xchg
ss
in
dec
in
sub
or
fidivrl
in
inc
hlt
fcomp
inc
jae
or
aad
xchg
mov
cli
sti
sub
mov
pop
sbb
add
and
add
cs
aas
not
aaa
cmpsl
and
cmp
add
add
add
icebp
sti
movsl
sub
dec
pop
aad
mov
arpl
sahf
add
or
ret
jg
jae
mov
or
lret
and
in
mov
pop
mov
push
push
cmp
xchg
jge
pop
xor
jge
repz
scas
sarb
xchg
shl
mov
jecxz
rcll
into
sti
sub
sbb
fstpl
and
aam
mov
adc
mov
cltd
stos
imull
or
inc
out
das
mov
outsl
stos
pusha
jbe
push
jno
xchg
bound
clc
sysexit
popa
arpl
pop
adc
in
call
mov
pop
push
sbb
push
mov
mov
in
dec
cmc
push
shr
sti
mov
ds
mov
xor
dec
hlt
or
leave
xchg
aam
sub
mov
into
movsb
mov
sub
mov
xchg
out
lea
repz
imul
jg
out
dec
adc
xchg
shll
dec
sub
xor
xor
xchg
add
xchg
push
or
dec
hlt
pushf
add
dec
fs
aas
jo
adc
push
out
lods
in
jmp
lret
mov
shlb
aaa
fmull
iret
hlt
scas
ja
repnz
imul
mov
sub
dec
cld
push
or
xor
cmp
and
arpl
cmp
mov
inc
movsl
jne
leave
cli
addl
ret
push
mov
stc
or
arpl
ret
cmovs
ja
loopne
andl
jmp
jecxz
push
jg
lock
bound
lcall
pop
ret
sbb
xor
or
scas
aaa
fdivl
out
xor
xor
push
test
fnstenv
cmpsb
add
aas
sbb
leave
xchg
stos
mov
push
sub
cli
rolb
in
mov
lret
cmp
push
into
movsb
fistps
div
mov
mov
and
sub
jmp
jg
clc
sar
sti
jg
xor
mov
mov
add
or
add
or
and
cmp
jmp
fldenv
lret
jge
mov
dec
push
jecxz,pt
inc
es
jns
mulb
movsb
push
fidivrl
iret
or
jmp
dec
and
inc
cmp
jae
and
mov
xchg
dec
je
mov
out
in
mov
test
push
push
mull
add
mov
push
jge
lret
daa
mov
push
add
pop
icebp
fsts
mov
sub
dec
cld
xor
repnz
and
or
repnz
popf
sbb
addl
jne
sub
mulb
push
or
testl
in
ret
neg
aam
jp
cld
test
std
adc
lods
jb
lods
ds
sbb
cmc
lea
hlt
mov
jb
sbb
cmp
and
lea
jbe
fstps
mov
add
add
pop
cmp
push
adc
push
dec
jg
dec
mov
test
arpl
mov
orl
outsb
cltd
mov
sub
xchg
sub
data16
pop
outsb
mov
sbb
gs
dec
daa
mov
in
int3
insb
in
add
xchg
fisubs
xchg
hlt
xchg
xlat
jecxz
lods
xchg
mov
mov
stos
dec
add
fwait
cmp
or
test
js
stc
lcall
mov
ffree
jnp
xrelease
repnz
pop
push
or
test
inc
add
rcll
inc
mov
mov
cmpsb
push
sarl
pop
cmp
dec
pop
mov
gs
cwtl
or
push
scas
pop
idivl
xor
stos
jno
sbbb
jp
or
cmpsb
mov
dec
cmpsl
movsl
push
mov
shll
xor
pop
jmp
jb
pop
mov
pop
pusha
pop
and
sbb
jmp
push
es
cli
pop
scas
cs
shrl
cmp
add
add
add
mov
jbe
adc
in
jmp
cmp
mov
loope
adc
sub
jmp
test
push
insl
push
and
cltd
stos
test
mov
rorb
dec
popa
lock
mov
std
fldl
sub
push
cs
fisttps
mov
in
jg
and
xor
adc
push
add
jnp
scas
pop
xchg
test
and
into
loopne
lcall
lahf
test
cmp
or
je
add
lods
and
or
xor
fwait
negb
std
outsb
xor
pushf
sub
movsl
dec
xor
hlt
fstpt
jo
pop
fists
mov
inc
cli
cmpsl
test
adc
lock
cmp
scas
stos
mov
jb
pop
jb
gs
or
adc
xlat
pusha
push
rcr
arpl
ret
cmp
sarl
mov
ss
push
fwait
scas
jecxz
int3
inc
aaa
jp
cld
arpl
imull
push
jns
ret
pop
pop
scas
shlb
insl
xchg
mov
pushf
mov
xor
outsl
popf
push
jno
jae
cltd
or
xlat
mov
test
scas
and
jbe
mov
addr16
sbb
movsl
jmp
jmp
inc
mov
dec
sarb
lret
lret
xchg
ficoms
repnz
in
scas
sub
fmuls
outsl
loope
imul
add
movsl
mov
mov
test
mov
loope
repnz
or
dec
sbb
shrl
add
adc
ss
call
or
fwait
sub
mov
sub
sub
jo
fmuls
xor
fcmovbe
sbb
outsl
ret
or
push
mov
les
cmp
js
mov
movl
movl
jmp
pop
mov
idiv
fistpll
adc
jp
add
or
add
pop
cltd
movl
jne
out
pop
movsb
outsb
cmp
dec
scas
or
mov
push
xchg
sahf
out
decb
jns
cld
repz
lock
int3
jmp
fbstp
jbe
xchg
repz
pop
adc
xor
fbstp
jne
inc
ljmp
xchg
loopne
mov
fs
pop
cli
mov
or
stos
add
jns
cltd
rolb
dec
xor
rcll
pop
lods
mov
mov
sbbl
out
stos
push
ss
out
out
pminsw
fimull
cli
addr16
arpl
movsl
xchg
bound
loopne
dec
test
jnp
sahf
inc
jecxz
cmpsb
lcall
xchg
js
mov
in
mov
pushf
cmpl
hlt
lds
and
bswap
loopne
add
in
ror
push
inc
jne
cwtl
fmuls
mov
and
lea
stos
out
int
mov
les
in
xor
sub
in
fstpl
test
stos
pop
and
orb
xchg
cmpsl
or
jne
cmp
and
jmp
inc
lret
movsl
push
sub
cmp
je
push
mov
fwait
cli
jle
jne
icebp
jl
lahf
sub
int
push
sbb
test
ret
or
out
sbb
pop
mov
rolb
xchg
inc
mov
adc
inc
mov
jno
aam
add
cmp
adc
imulb
inc
sbb
sub
or
jb
and
dec
pop
mov
mov
add
add
xor
jb
dec
jo
mov
ret
add
jle
mov
inc
mov
push
shll
mov
in
mov
pop
cmp
daa
mov
push
xor
mov
jae
aad
lea
cmpsl
test
xchg
movl
movl
movl
movl
mov
and
jmp
mov
out
mov
push
cs
addl
or
add
test
and
adc
mov
lahf
mov
cmpsb
scas
add
xorb
adc
int3
leave
ss
out
sub
fisubs
loopne
cmpsl
jmp
pop
add
sti
sbb
cli
pop
and
jmp
ja
insb
in
push
fimull
lea
in
and
push
pop
push
hlt
push
nop
mov
push
xlat
test
cmp
push
cli
adc
cmp
ds
mov
mov
out
pop
push
iret
dec
je
jne
pop
xor
cwtl
ljmp
dec
sub
rorb
adc
mov
outsl
test
jg
xchg
test
add
push
dec
pop
aaa
in
rcrl
mov
jmp
test
adc
mov
int3
sar
jmp
mov
add
icebp
iret
lea
mov
clc
adc
jo
mov
and
leave
adc
push
push
test
xor
in
cmc
or
decb
ds
insl
aam
push
cmpb
xchg
push
xor
int
add
xchg
lret
imul
inc
or
in
sbb
push
stos
imul
adc
add
mov
push
sub
and
lahf
xchg
in
out
int
sub
jb
adc
out
enter
mov
xchg
out
mov
jg
int3
imul
add
lret
jns
cmp
cmp
inc
fwait
notl
fldt
les
repz
int3
add
jne
or
ret
dec
inc
loopne
enter
imul
and
mov
pushf
jbe
std
out
mov
imul
shrb
jnp
sti
stc
stos
outsb
mov
add
and
dec
ljmp
js
bound
negb
xlat
mov
sahf
sbb
les
mov
and
fs
xchg
pusha
sbb
add
mov
jmp
or
out
out
adc
mov
add
add
add
dec
push
sbb
int
ljmp
sahf
dec
lea
sbb
gs
lds
gs
dec
loope
int3
adcb
mov
jl
ss
sbb
cmpsb
cmp
into
mov
push
mov
mov
sub
ja
pop
imul
jo
arpl
cmpsb
mov
add
inc
and
or
aas
and
jns
dec
aas
mov
cmc
add
mov
dec
cwtl
ds
push
xor
in
gs
inc
std
cmp
aam
loope
adc
push
fisttpl
imul
jp
lahf
push
test
outsb
sub
in
enter
lods
test
cmp
stc
and
pop
pop
in
dec
std
xchg
ss
push
dec
ds
ret
divl
test
mov
or
mov
rclb
push
jmp
mov
mov
icebp
mov
sub
mov
mov
mov
mov
add
lret
fisttps
xchg
adc
repnz
int
out
ret
dec
pop
push
xlat
push
mov
xchg
arpl
inc
inc
dec
sbb
loop
negb
mov
or
mov
outsb
int
lcall
dec
push
cli
mov
cwtl
mov
jle
inc
mov
repz
jae
shll
lcall
ret
mov
or
test
xor
addr16
mov
mov
dec
adc
cmp
ret
out
add
int
idivl
fwait
test
cmp
sbb
mov
lahf
imulb
jae
test
or
jne
or
inc
mov
jl
fmull
outsl
adc
add
cmp
cmp
and
mov
jnp
adc
mov
das
shll
jle
and
xor
mov
jmp
inc
add
push
out
repz
aas
mov
and
inc
add
or
add
insl
jns
mov
cmp
out
push
mov
mov
or
xchg
outsl
ret
cld
cs
pop
and
rcr
addb
sbb
or
inc
dec
repnz
sti
add
js
or
sub
packuswb
movsl
ror
popa
fwait
xchg
jns
add
mov
test
pop
lahf
push
mov
dec
mov
enter
xor
push
lock
cmc
jo
xchg
sub
push
aad
movsb
negb
jno
mov
push
enter
leave
roll
mov
test
inc
call
cli
mov
aas
push
fdivr
test
jg
loope
out
test
fisttps
ret
xor
les
jle
insb
mov
push
xchg
sti
mov
and
mov
push
fcmovnu
sub
decb
xchg
stc
lds
std
nop
sub
lods
dec
movl
xor
pop
rcll
pop
sbb
sub
hlt
in
xor
dec
jmp
stos
test
repz
push
sbb
inc
into
pop
sub
jge
stc
xchg
jecxz
aas
cmpsb
adc
nop
jmp
pushf
into
xchg
push
or
jo
push
push
mov
cwtl
jne
into
mov
std
mov
push
lds
shll
xor
push
push
push
xor
pop
cmc
inc
cmp
popl
and
jbe
stos
roll
mov
and
stos
mov
nop
aaa
lcall
and
or
fwait
mov
iret
sbb
test
movsl
xchg
sbb
pusha
fisubrl
scas
dec
sbb
insl
arpl
push
mov
xor
outsb
and
lea
xor
lea
mov
push
mov
add
push
jecxz
mov
into
repz
add
rorb
aam
test
pop
insl
add
jmp
adc
sbb
mov
clc
incb
adc
add
add
add
jmp
cli
les
jmp
pushf
into
int
xchg
push
aam
testl
ja
sbb
lret
and
daa
push
scas
push
cltd
pushf
and
and
push
pop
xor
mov
sbb
dec
fdivrl
xchg
clc
lahf
scas
pop
jnp
sub
and
cli
inc
loop
aam
jns
test
popa
ss
lea
or
inc
dec
add
pusha
adc
push
and
jmp
inc
shll
ret
xor
sbb
aad
sub
xchg
icebp
out
ja
dec
add
pushf
pop
xor
add
push
clc
lret
mov
roll
xor
loopne
out
sbb
js
inc
push
pop
addr16
push
mov
sub
andl
repz
jbe
xor
outsl
dec
xchg
pop
sub
movsb
push
cmpsb
jbe
jp
popa
push
mov
push
fstl
nop
sti
sbb
inc
adc
lods
dec
rcrb
rolb
lods
lret
cmp
adc
sbb
imul
lods
rorb
movsb
outsl
dec
cmp
addr16
push
sahf
push
or
xchg
es
pop
mov
dec
cmove
jbe
add
and
mov
cmpb
out
inc
imul
inc
inc
lahf
call
xchg
bound
fnstenv
scas
sub
jns
pusha
loop
pop
in
mov
out
aad
mov
call
sub
adc
mov
xor
ss
hlt
les
pop
xlat
dec
daa
data16
push
stc
pop
or
inc
mov
cltd
inc
jmp
mov
pop
mov
or
or
and
dec
int3
mov
and
xchg
or
mov
cld
dec
int3
lret
into
mov
jae
pop
dec
pop
push
ss
scas
dec
lahf
sbbl
push
addr16
mov
inc
mov
lcall
add
add
add
mov
lahf
sub
aam
dec
add
or
add
lock
scas
dec
push
lcall
stos
inc
je
sarb
movsl
dec
add
in
xchg
xor
dec
inc
lret
inc
lahf
stc
push
mov
cwtl
jo
nop
adc
popa
and
and
gs
in
cltd
mov
into
loopne
lock
lret
cmpsb
insb
jmp
sub
inc
into
jg
cmpsb
icebp
hlt
std
test
xlat
jnp
ljmp
or
dec
mov
cmp
cmp
inc
movsl
cltd
jns
lods
or
in
xchg
push
pop
adc
cmp
and
jl
fistps
inc
xor
jae
repz
mov
push
rorb
cli
inc
test
mov
add
scas
clc
add
fimuls
push
pop
push
fistps
add
fisubrs
push
int3
dec
imul
mov
xchg
frstor
mov
cmp
stos
lahf
adc
sti
push
adc
and
sub
les
sbbb
xor
push
xchg
stos
dec
pop
cltd
aam
cltd
adc
loopne
out
cwtl
stos
mov
int
mov
pop
negl
addl
cli
xor
push
jecxz
cmp
jl
jns
mov
js
clc
mov
and
cs
xchg
push
lds
and
mov
jnp
aad
cmpsl
xor
orb
pop
jns
push
test
sub
cwtl
sbb
jl
dec
cwtl
outsb
jge
imul
mov
les
cmp
fs
inc
mov
mov
xchg
cmp
sub
inc
stos
cmpsb
push
add
and
pop
leave
mov
xchg
jo
fiadds
push
insb
sub
imulb
enter
pop
xor
rcrl
pop
bound
or
push
bound
lret
and
js
push
cmpb
insl
jnp
testb
std
dec
dec
aaa
testl
xor
shr
imul
mov
mov
xor
sub
jmp
iret
cmc
pusha
sarl
std
sub
sbb
dec
test
pusha
mov
add
or
add
das
sub
fs
pop
xchg
lods
fstpt
add
xor
rorl
xchg
cmp
add
adc
pop
adc
sahf
mov
cmp
fdivrs
jle
xchg
adc
mov
fs
pop
push
jnp
ds
xchg
pcmpgtw
out
sarl
jle
inc
xor
mov
out
inc
popf
stos
mov
pop
sbb
adc
arpl
push
xor
iret
pusha
push
vaddsubpd
adc
stos
dec
std
add
mov
and
adc
jl
push
sbb
sub
or
pop
cmp
lds
fwait
and
out
imul
icebp
jmp
or
stos
inc
sbb
scas
inc
adc
inc
mov
pop
insb
sub
aam
cltd
sbb
push
push
cmp
out
xchg
sbb
lret
jl
fsubp
cld
fisubrl
xor
or
leave
xor
pushf
sub
rorl
ljmp
shl
in
cmp
cld
jp
push
dec
mov
dec
cli
ficompl
push
cmp
cmp
test
inc
push
sub
adc
sahf
insl
xor
mov
add
cltd
xor
mov
cmp
hlt
sbb
ds
push
int3
mov
jl
sub
jp
push
jmp
sub
mov
jle
dec
lea
ret
fbld
in
ret
out
bound
pop
or
sbb
repz
lods
and
mov
dec
push
aaa
mov
jle
ja
std
ljmp
inc
lea
sub
ds
jp
test
nop
xchg
clc
dec
inc
pusha
or
ljmp
sbb
dec
insb
inc
out
mov
rolb
sahf
mov
mov
mov
mov
jmp
cmp
mov
test
ja
push
dec
add
or
add
add
mov
push
imul
sbb
xchg
les
jb
dec
out
pusha
mov
adc
mov
shlb
insl
mov
xchg
jge
frstor
les
jb
arpl
adc
and
outsl
xchg
push
imul
sbb
std
jl
mov
fstl
lret
sbbb
test
mov
push
ja
push
arpl
pop
popa
xchg
inc
pop
insl
and
add
pop
inc
addl
xchg
adc
sub
dec
and
cmp
pop
inc
push
fcoml
test
fsubrs
es
leave
xor
cltd
sub
in
jmp
xchg
inc
or
and
and
xchg
ret
mov
std
insl
pushf
mov
jb
cmp
loop
inc
fsubr
lcall
in
outsb
pusha
xchg
mov
pop
fwait
cmp
xchg
and
rol
inc
arpl
push
sub
push
or
addr16
mov
adc
inc
das
mov
aas
scas
xchg
fisubl
movsl
cmc
jae
pop
push
cmp
fists
inc
inc
int3
pop
orb
pop
mov
and
or
jo
xor
nop
cmp
xor
push
daa
sub
insl
mov
adc
mov
xchg
dec
cmc
pop
mov
in
push
gs
das
mov
addl
pop
scas
mov
sarl
mov
add
and
inc
ret
or
sbb
outsb
bound
enter
or
add
push
dec
mov
in
lcall
dec
push
js
sbb
iret
inc
int3
sub
cmc
repz
movsl
aas
pop
mov
xor
ja
add
aaa
add
sub
aam
sbb
repz
nop
mov
imul
mov
jmp
and
xor
icebp
scas
jg
repnz
push
jecxz
bound
dec
add
or
add
icebp
sub
stc
xor
test
dec
popa
xor
int
mov
stc
mov
in
aad
shld
hlt
shr
popl
imul
aaa
push
sarl
lea
mov
stc
pop
popa
dec
cwtl
jg
jg
jg
call
fstps
mov
js
pop
pop
aam
cmpl
insb
inc
mov
pop
mov
push
out
jbe
stos
xlat
popf
test
dec
mov
addr16
dec
cmc
mov
jo
dec
ds
jl
mov
imul
mov
aaa
pop
out
mov
aad
pushf
outsl
xchg
clc
push
outsb
movsb
movsl
mov
call
xorl
pop
sbb
sub
lods
test
mov
xchg
fdivrl
out
mov
sahf
aad
sbb
and
xorl
and
inc
in
fiadds
loop
mov
outsl
cltd
sub
insb
les
sbb
cmp
adc
jmp
je
cmp
ja
mov
push
xchg
adc
mov
call
test
loopne
cltd
inc
sbb
or
movsb
icebp
jb
dec
mov
cmp
in
test
push
out
xor
movsl
push
xor
mov
jbe
mov
push
pop
stos
test
push
in
ljmp
loopne
dec
xchg
ja
xchg
icebp
or
dec
test
inc
adc
adc
orb
cmp
push
jns,pt
dec
loop
lock
fcmovu
call
mov
inc
mov
jg
xchg
inc
mov
out
ficoml
in
add
push
js
xor
add
mov
sbb
pushf
cmp
mov
push
jbe
mulb
inc
and
cmp
mov
repz
xor
into
test
sub
sub
xor
div
jmp
ret
pushf
fadds
filds
fnsave
aam
aam
or
lret
push
add
or
add
shrb
pop
mov
call
call
mov
andl
jns
inc
daa
adc
loope
lods
call
out
push
out
aaa
adc
movsb
stc
lods
mov
dec
or
cltd
test
sbb
in
sbb
fs
mov
lods
rorb
aad
mov
mov
fmul
and
or
xchg
push
mov
enter
int
ror
cmp
xor
sub
int
xor
in
dec
xor
clc
icebp
or
adc
psubd
xchg
sti
mov
push
into
js
and
cs
sbb
adc
jl
add
addr16
fldl
lds
fnstcw
or
movsb
sbb
pusha
mov
insl
fidivrl
js
test
loopne
data16
cwtl
ret
dec
jge
mov
outsl
xor
out
lret
adc
jo
into
lock
xchg
bound
push
mov
std
xlat
mov
xchg
sub
out
push
scas
jb
aaa
fcompl
pop
mov
inc
inc
cmp
nop
clc
xorb
je
sub
je
cwtl
jo
iret
cmp
lds
jecxz
pop
cmc
add
pushf
je
dec
jb
ret
lret
test
mov
scas
out
cli
lcallw
mov
cmpl
cs
cwtl
movsb
pop
scas
cld
jbe
adc
push
adc
fidivl
jle
sbb
and
arpl
mov
sarb
sub
sub
ljmp
cmp
xchg
push
fwait
clc
fnstsw
lds
sub
jmp
pop
add
test
push
or
adc
les
pop
jne
fidivs
fcomps
js
xor
fld
repz
in
sub
out
js
adc
push
cs
sti
out
sbb
decl
in
sub
or
mov
sub
add
xor
cmp
jne
pop
pop
pop
leave
ret
addl
fcmovnu
fcmovnb
fildll
jl
aam
sub
push
add
push
adc
cmc
sub
in
ljmp
inc
cmp
mov
movsl
dec
xor
fs
fcoml
mov
jbe
mov
cltd
pop
sub
adc
and
jbe
mov
pop
test
shll
loopne
je
mov
leave
mov
nop
cmp
xchg
stos
lea
fldcw
enter
jnp
jl
add
pop
xchg
out
pop
fisttpll
sub
cwtl
and
ljmp
push
leave
sbb
popa
data16
in
mov
jae
add
cmpsl
add
lret
popf
cwtl
add
stc
pop
mov
xor
xchg
mov
xor
das
push
scas
sub
out
mov
xor
inc
dec
insb
pop
aad
mov
sub
or
sbb
pop
pop
jns
mov
xor
xor
add
in
inc
dec
mov
mov
jg
int3
frstor
data16
dec
xlat
fstps
loope
lret
mov
in
xchg
stos
jl
cmp
mov
dec
sbb
shlb
rolb
fdivrs
cld
addr16
cli
stc
clc
jmp
jecxz
and
push
sbb
out
cli
fisubs
ret
int
mov
insl
in
adc
aas
sbb
mov
push
push
int
dec
je
aad
xor
or
fprem1
lcall
push
repz
sbb
pop
in
push
dec
add
mov
sahf
cmp
aad
pop
xchg
test
out
xchg
out
and
mov
std
outsl
sbb
push
jmp
mov
and
inc
mov
inc
lcall
andb
mov
outsl
movsl
or
addr16
jae
dec
dec
sub
and
xchg
pop
and
idivb
and
mov
fldt
push
sbb
push
cmp
or
gs
enter
sbb
sbb
jo
in
stc
in
pop
push
sbb
add
aad
cmp
aad
pop
nop
mov
ret
adcb
fs
pop
js
pop
loopne
pop
in
pushf
dec
popa
and
mov
xlat
push
js
jnp
pop
inc
fsubrp
adc
inc
lcall
pop
mov
mov
add
insl
pop
add
ret
ja
ljmp
and
jg
mov
xchg
cmp
sbb
mov
xor
out
cmp
and
fisubl
mov
mov
and
test
outsb
push
jle
mov
jb
incl
mov
stc
sub
mov
and
movsl
cmp
std
cli
fiadds
jnp
hlt
adc
push
in
mov
jne
fadd
in
scas
xlat
in
mov
adc
shll
pop
mov
data16
test
push
lods
mov
iret
in
insb
push
mov
mov
xchg
rclb
jnp
fst
pop
mov
jge
rclb
sti
cmpb
adc
in
lock
aas
fsubp
test
loope
xchg
outsb
xlat
mov
fidivrl
sbb
aas
mov
inc
outsl
fs
mov
jge,pn
push
in
daa
xchg
pop
xchg
mov
mov
fisttps
roll
cmp
aas
cmpsl
adc
lahf
jecxz
scas
loope
lods
pop
push
lds
loope
sti
xchg
movsl
xor
jmp
ja
push
sbb
ds
lock
mov
adc
in
enter
lock
ret
dec
xchg
imul
stc
fcoms
in
jo
mov
gs
orb
inc
mov
mov
mov
ja
push
pop
mov
je
orb
sbb
push
andl
daa
jbe
imull
xor
cld
jo
mov
mov
and
std
jmp
jb
filds
int3
mov
aad
xchg
jmp
pushf
add
xor
dec
pop
stos
les
fsubs
in
xlat
push
lcall
pop
cmp
inc
cmp
stos
xchg
ds
pop
adc
das
inc
dec
and
or
repnz
pop
cs
test
icebp
sub
inc
jp
jmp
sbb
in
jp
gs
adc
mov
jnp
lret
mov
addr16
mulb
clc
pop
and
mov
xchg
add
and
fstl
sub
scas
mov
push
push
ja
das
pop
jns
mov
push
daa
push
int
scas
adc
pop
dec
mov
cld
xchg
popf
iret
lret
jecxz
test
adc
mov
and
push
shl
jge
pop
popa
lods
pushf
mov
arpl
mov
push
pop
push
jnp
mov
test
jle
divl
outsb
shrb
testb
xchg
push
jae
push
psubusw
and
mov
mov
outsb
adc
pop
push
pop
mov
addr16
test
repnz
arpl
test
mov
mov
stc
push
out
inc
add
adc
mov
int3
pop
inc
add
add
jnp
pushf
mov
dec
jecxz
fninit
or
loope
call
dec
sbb
adc
and
sub
mov
and
ret
andb
jne
xchg
sbb
mov
inc
jae
lcall
dec
pop
add
mov
xchg
insb
imul
cmp
xchg
xor
popa
ret
push
pusha
xor
loope
jb
or
xchg
scas
stc
shl
fwait
pop
fwait
insb
mov
ljmp
aam
or
mov
loope
adc
adc
mov
sub
jle
mov
jmp
mov
adc
push
push
stc
pop
pusha
lret
push
repz
lods
and
test
fimull
out
addr16
mov
bnd
cltd
adc
lret
lret
test
mov
xor
pop
inc
push
gs
adc
inc
and
xchg
xchg
test
cwtl
and
mov
pop
push
fistl
cmc
lret
or
loop
shll
aad
inc
xchg
sahf
mov
ljmp
xor
mov
enter
pop
test
push
jnp
jle
mov
push
mov
or
mov
scas
test
int
push
pop
aam
add
mov
movsl
repz
push
pop
mov
jo
xlat
fsubp
pop
push
lahf
push
sub
push
ja
add
daa
ss
mov
sarl
loope
jmp
scas
push
addr16
add
dec
push
mov
sub
es
aaa
jge
sbb
idivb
jp
fcomps
ficompl
mov
mov
pop
sbb
jp
ds
loopne
sbb
adc
idivl
inc
mov
add
movsb
xor
xor
call
and
popa
pop
fsubrl
sub
fs
cli
lretw
js
inc
sbb
or
pop
lods
sbb
xor
and
les
fs
aad
dec
mov
mov
cli
push
dec
mov
call
sbb
test
xchg
mov
test
scas
inc
rcrb
push
in
clc
jb
mov
mov
inc
sub
lahf
bound
repnz
mov
xchg
test
lock
jnp
jne
mov
mov
addr16
in
popf
mov
ljmp
lods
icebp
mov
push
popf
sahf
dec
fadd
sbb
outsb
mov
pop
xchg
adc
push
shll
hlt
push
and
repz
sbb
lock
mov
cli
xlat
test
cmp
aam
outsb
mov
cmp
lds
test
popf
add
gs
mov
inc
punpckhwd
inc
rcrl
push
ret
sbb
fisubrl
test
or
cmp
pop
mov
int3
out
test
scas
pop
mov
frstor
add
ret
test
and
divb
sti
xchg
fdivrs
pop
jmp
jmp
xchg
xchg
ljmp
scas
xor
adc
in
jnp
sub
xchg
or
mov
push
sub
int3
lds
out
inc
fldcw
pop
rcr
in
ret
iret
mov
xlat
cmp
ret
rolb
iret
lret
inc
or
pushf
push
mov
pop
outsl
sbb
hlt
push
cs
mov
cmp
mov
adc
fiadds
push
fsubrs
outsb
jae
lret
adc
xchg
out
lret
arpl
popa
popf
cmp
arpl
sub
arpl
lahf
mov
fstp
idiv
cmp
jge
arpl
push
sub
pop
decl
and
jo
xlat
insl
lods
mov
int3
sbb
les
or
xchg
push
and
out
push
idivl
mov
adcb
jb
imul
jl
out
shll
dec
mov
inc
push
jb
inc
jne
lea
add
ds
pop
cmpb
pop
insb
or
lods
jp
cmp
repnz
sub
push
std
cmc
mov
stc
mov
xor
pop
daa
mov
orb
jg
fimuls
orb
and
mov
xor
cmpsb
in
or
lcall
insb
sti
jne
lods
es
cmp
xor
mov
into
push
pop
fimull
pushf
or
jmp
xchg
xchg
xchg
xchg
movsb
fistps
xchg
cmp
fdivrl
pop
js
cmp
faddl
pop
imul
popa
jle
leave
xor
xchg
pop
or
orb
lds
jle
notl
jne
stos
xchg
enter
mov
push
push
jo
test
bnd
xchg
mov
jge
rolb
loop
les
jnp
jle
or
push
dec
fidivrl
mov
std
mov
mov
cmc
fucomp
ss
jbe
test
divb
bound
xor
ja
jmp
mov
pop
xor
mov
mov
jg
add
adc
push
lods
cs
xchg
inc
cltd
or
push
test
push
pushf
aas
les
es
and
shrb
mov
xor
push
scas
adc
jno
sahf
mov
mov
pushf
int
mov
mov
cmp
mov
or
mov
mov
push
xchg
in
add
sti
test
in
sbb
idiv
cmc
int3
dec
test
lcall
lret
repnz
test
mov
std
push
sahf
pushf
sub
or
arpl
jle
loop
stc
inc
neg
jp
lea
mov
and
out
push
sbb
out
rclb
hlt
pop
sub
pushf
ja
push
push
mov
xor
pop
loope
scas
std
iret
cmp
cmpsl
push
pop
xchg
stc
loopne
and
les
mov
and
push
add
repz
lahf
lea
push
testb
adcb
movsb
movsl
mov
push
data16
and
push
out
fsts
sub
add
inc
daa
cmp
js
js
lds
addr16
lods
ja
add
les
xchg
jo
push
add
rol
jno
int3
jp
mov
cmp
sub
mov
fyl2xp1
sub
mov
add
test
cld
cmc
daa
into
add
ficoml
aas
subl
sub
jg
aad
ljmp
adc
xchg
arpl
fldl
dec
xchg
mul
and
and
push
ja
out
xor
push
inc
inc
sbb
fldcw
push
fsts
rol
out
je
andb
xor
enter
xchg
out
or
int3
aam
test
add
cmp
dec
jno
inc
or
cmp
hlt
int
mov
loopne
inc
or
inc
inc
pop
and
sbb
mov
dec
xor
push
xor
mov
cmp
mov
cs
rcll
jmp
push
js
lcall
jp
rorl
nop
jno
lods
into
sahf
pop
xchg
scas
jo
jmp
out
mov
aam
push
int3
cli
rclb
inc
pop
fldl
jmp
imul
mov
lock
lret
mov
scas
pop
stos
inc
cwtl
jae
mov
jg
dec
push
xchg
fimuls
xor
arpl
adc
jne
xor
mov
loopne
aas
xchg
pop
and
rorl
loop
cmp
jmp
mov
in
sbb
imul
pop
xor
push
mov
or
push
movsl
loopne
mov
testl
test
and
inc
pop
les
inc
shll
leave
mov
dec
add
mov
movsb
mov
sub
in
inc
mov
inc
sbbl
mov
mov
ret
inc
std
ja
dec
repz
in
stos
cld
repz
add
sub
pop
mov
sub
cmp
xor
aam
sarb
fnsave
mov
scas
arpl
stc
jp
js
jmp
shl
aaa
ja
data16
mov
mov
push
cmp
xchg
fcomps
xchg
out
mov
mov
xchg
xchg
xor
sbb
scas
adc
fs
nop
add
das
mov
mov
cmp
mov
rcl
test
sub
outsb
adc
inc
dec
adc
push
filds
cmc
adc
xor
dec
test
mov
jb
adc
cmp
pushf
movsb
int
sub
pusha
jge
icebp
cmp
pop
or
adc
popa
cs
sub
movsl
xorb
lods
sbb
sti
xchg
mov
jl
sub
lds
cmc
mov
sbb
lods
les
mov
jnp
adc
cmp
xchg
loop
dec
hlt
jmp
sub
cmpsl
mov
mov
sbb
dec
lock
loop
jl
rorl
test
sub
test
mov
dec
push
leave
jge
es
mov
pop
outsb
mov
xchg
pop
dec
jbe
sub
jl
enter
push
out
xor
push
mov
pop
inc
or
sub
je
jnp
call
inc
jae
inc
lea
mov
cmpsb
pop
in
mov
pop
cmpsl
mov
mov
xchg
sbb
sarl
cmpsl
gs
mov
cwtl
fwait
add
pop
push
dec
sbb
mov
mov
xor
inc
jae
sbb
daa
dec
sbb
adc
inc
out
neg
cmpsl
mov
mov
shlb
mov
and
xchg
das
sbb
inc
addr16
sbb
out
and
lret
mov
or
repnz
sar
add
subb
xchg
pop
mov
xchg
push
push
jecxz
cmc
lret
repnz
dec
jne
xchg
imul
enter
stos
cmp
leave
sub
fldl
rorb
cmp
imul
jae
lahf
xlat
mov
or
aam
pop
cli
cwtl
mov
or
cmp
jl
and
mov
dec
xor
mov
pop
xchg
repz
sub
sbb
cwtl
fcompl
fistps
cmpsl
sub
mov
jecxz
dec
ja
test
lret
xor
pop
sbb
fistpll
fucomp
xor
mov
sub
shll
cmpsb
cmp
push
cwtl
add
cmp
pop
jbe
shlb
push
xchg
movsl
xchg
dec
aad
cmpsl
pop
mov
dec
mov
ret
negb
push
cld
test
push
call
lcall
push
mov
pop
inc
dec
dec
fisubl
js
lods
xor
jp
mov
inc
and
fldt
enter
or
rolb
sbb
ja
neg
xlat
add
inc
sti
btl
and
jne
push
adc
fiadds
xor
pop
mov
jp,pt
cs
sub
cmp
lret
clc
xchg
push
lea
jl
and
sub
loopne
mov
mov
mov
inc
push
pop
xchg
mov
dec
bound
out
data16
ljmp
pop
int3
xchg
loopne
xchg
sbb
mov
adc
mov
or
pusha
mov
aas
mov
jecxz
iret
inc
aam
inc
jg
lcall
scas
ret
stc
in
in
imul
pop
je
xchg
aad
aam
aas
test
push
xor
shll
and
cli
and
xchg
addr16
sbb
mov
mov
cmp
outsb
mov
push
adc
push
cmpsb
inc
jg
fdivr
mov
sbb
out
sub
jno
popa
mov
pushf
mov
mov
popf
xchg
fildll
mov
jg
out
mov
xor
jge
jns
sbb
mov
loopne
movsl
dec
lcall
xchg
loopne
jp
imul
and
pop
movsb
sahf
push
sub
mov
inc
fidivrl
inc
int3
add
lods
imul
icebp
incb
push
scas
loopne
pop
rcll
inc
jle
fwait
imul
jns
out
inc
mov
ret
mov
nop
adcl
sub
sahf
pop
adc
jge
mov
and
mov
pop
inc
hlt
mov
cmp
ja
insl
inc
jbe
xchg
jae
sub
jmp
je
push
aas
mov
sbb
les
mov
nop
stos
lret
mov
push
ljmp
inc
das
pop
daa
xchg
and
or
mov
mov
in
in
repnz
xchg
inc
fstl
sbb
cli
cs
out
shlb
aas
scas
dec
es
arpl
test
xchg
inc
inc
aaa
les
out
push
mov
cmp
imul
mov
outsb
add
cmp
push
addr16
adc
inc
data16
adc
fdivrs
not
andb
lahf
mov
scas
mov
pop
repnz
xchg
xchg
mov
idivb
xchg
lods
and
mov
sarl
pop
jo
inc
insl
out
mov
jne
push
push
loopne
std
pop
xor
jg
jns
test
stos
cs
loop
push
and
aad
lret
mov
ret
mov
loop
mov
loopne
lahf
inc
sbb
shlb
shll
dec
and
pop
and
jne
inc
negb
in
das
dec
jb
js
xchg
dec
lahf
adc
stc
arpl
bound
stos
cmp
adc
sub
in
mov
xor
daa
mov
subl
adc
add
mov
popa
pop
repnz
loopne
jbe
in
mov
add
mov
xchg
call
or
mov
sub
fstpl
in
outsb
add
cmpsl
rcr
leave
scas
ret
jno
or
cltd
es
mov
sti
cmpsb
mov
es
xlat
out
push
decb
sti
sbb
stos
sbb
inc
xchg
dec
jg
movsb
cli
test
sti
movsl
sub
ja
mov
cltd
dec
sbb
pop
jnp
cmpsb
jo
pop
mov
adc
jge
cli
xor
and
jae
sbbb
arpl
test
sbb
push
mov
shlb
pop
bswap
jno
jp
add
mov
pop
mov
xchg
int
cld
push
jne
add
scas
jg
popa
lods
jp
mov
and
scas
insl
loope
cmp
in
inc
arpl
inc
aas
lea
cwtl
inc
shl
xchg
sub
adc
clc
outsl
addr16
test
int
fld
ss
pop
mov
mov
mov
int
sbb
call
mov
testl
or
mov
daa
mov
mov
dec
jecxz
pop
push
in
xor
and
scas
cs
cmc
sub
dec
orb
jae
jnp
and
add
enter
cmp
jbe
push
iret
jne
mov
cmp
aaa
inc
adc
pop
jl
mov
pop
push
sbb
clc
jmp
mov
hlt
adc
lods
fs
paddd
imul
pop
insb
mov
xchg
adc
dec
cltd
test
xchg
scas
mov
and
stos
mov
push
cli
rcl
mov
jns
mov
jecxz
mov
pop
mov
rolb
and
sahf
or
or
jg
push
xchg
or
out
repnz
test
and
in
pop
pop
lea
push
or
xchg
daa
into
xchg
add
rcrl
inc
cmp
xor
cmpsb
out
lds
roll
loopne
mov
mov
cmp
fwait
inc
xchg
dec
mov
pop
inc
inc
test
std
or
iret
xchg
in
add
xor
fsubrs
cmpsl
push
inc
shl
fsubrl
xchg
adc
sbbl
cmp
ss
and
fcmovnb
imul
cltd
xorb
jb
push
add
mov
push
adc
fs
scas
pop
xor
pushf
jg
xchg
movsl
ret
lods
mov
das
das
mov
and
inc
push
fsubr
xchg
or
mov
scas
stc
xor
xlat
fwait
jnp
hlt
daa
ret
add
fs
movsb
adc
movsb
imul
add
aas
sub
das
dec
inc
jl
pop
rcrl
arpl
inc
out
scas
outsb
sbb
outsl
xchg
movl
xlat
lret
leave
pop
mov
inc
push
outsb
pop
mov
decb
mov
lds
hlt
xchg
add
in
insl
inc
aaa
addr16
pop
jmp
popa
or
mov
or
jmp
xchg
in
les
pop
adc
cmp
cmp
sbb
mov
mov
aaa
mov
pop
inc
mov
dec
repz
out
outsl
in
cmp
fdivr
add
notb
or
int3
add
into
pop
bound
pop
adc
push
stos
mov
add
es
xor
sub
mov
or
and
dec
daa
out
fmul
add
mov
or
push
fidivrs
xor
or
ljmp
fwait
std
out
int
data16
jns
outsb
inc
adc
sti
xchg
mov
add
mov
addr16
loope
mov
fwait
rorl
es
pop
in
ja
sti
insl
divb
shll
movsb
aam
xchg
xor
mov
sub
pusha
loope
aad
push
sbb
mov
ljmp
cmp
mov
and
mov
dec
inc
inc
sub
push
rcr
inc
xchg
push
adc
aam
inc
jae
push
loop
imul
pusha
lahf
fxch
jae
cmp
or
sub
and
lods
mov
adc
dec
daa
add
mov
lods
xchg
cmp
push
pop
shl
push
movsb
imulb
jge
sbb
pusha
inc
iret
aam
in
xchg
jle
xchg
push
mov
divl
divl
adc
icebp
subl
sbb
inc
xchg
pusha
sbb
mov
fisubs
push
std
fwait
mov
sbb
ficomps
out
mov
push
data16
mov
mov
pusha
or
stos
shlb
sbb
je
push
jecxz
mov
or
sbb
lods
add
idiv
in
mov
popf
sbb
sbb
out
pushf
in
cmp
arpl
sbb
in
out
pop
jns
push
cwtl
mov
ljmp
sbb
pusha
fsub
daa
push
divb
mov
xchg
loopne
gs
mov
test
cmpsl
popl
popa
imul
sbb
sbb
test
add
xchg
add
cwtl
push
insb
loopne
xlat
js
scas
mov
rcrb
jbe
push
mov
scas
cli
popf
sbb
jnp
lds
ljmp
shll
cmp
inc
adcb
lea
divb
in
pop
mov
dec
dec
xchg
ja
push
test
aam
setae
out
loop
ljmp
and
pop
jno
mov
mov
aad
into
in
mov
cmc
pop
push
test
add
loop
or
dec
sbb
nop
cwtl
dec
add
xor
shlb
mov
iret
sub
leave
aam
pop
sbb
out
pop
fistpl
into
inc
dec
add
jbe
cmp
lcall
addr16
setge
pop
jns
rolb
xchg
test
jno
dec
test
mov
sarl
int
mov
jl
and
cld
inc
daa
jg
mov
ja
inc
or
mov
jb
mov
bound
mov
loopne
aad
pop
xchg
and
repz
sub
movsl
imul
xor
decb
out
adc
or
es
or
push
xor
xor
add
add
es
lcall
pop
push
mov
jl
loop
inc
mov
mov
add
loope
cld
mov
xor
fiadds
in
call
xchg
pop
cmp
mov
xchg
rolb
imul
push
add
jb
pop
sub
cmp
sahf
sbb
add
test
xchg
mov
punpckhwd
sub
inc
pop
out
pop
in
and
shll
sub
mov
add
mov
mov
sbb
js
sbb
hlt
cltd
inc
rorb
jp
cli
orl
xor
mov
or
dec
cmp
dec
fs
push
cmp
repz
ljmp
shll
push
mov
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jns
mov
aad
mov
sahf
aam
add
adc
add
movsl
in
out
xchg
movsb
pop
loope
nop
add
leave
sahf
pop
sub
sbb
ljmp
ret
sub
and
and
insb
add
lcallw
pop
xlat
inc
frstor
inc
es
test
mov
add
mov
daa
inc
inc
jns
cmp
jl
scas
out
iret
decl
adc
into
das
xchg
inc
and
and
int3
cmc
and
popa
mov
sub
pop
dec
rol
cmp
pop
movsl
test
pop
push
cli
mov
movsb
push
jle
in
fwait
daa
cmp
into
sbb
ffreep
enter
loopne
cmp
push
imul
out
aaa
sub
sbb
sbb
aas
add
add
stc
xor
orb
mov
xor
repnz
adc
or
call
test
sub
aad
adcl
mov
push
jb
in
ss
mov
fistpll
mov
add
shlb
add
mov
pop
int3
jle
insb
filds
push
or
and
aad
sbb
sahf
lret
out
dec
loope
cld
int3
jns
xor
push
or
fistpl
repz
jp
inc
sbb
fisubrs
aad
mov
xor
gs
iret
sub
hlt
add
ret
fldcw
mov
addl
dec
or
jge
mov
mov
sti
into
push
and
xor
pop
inc
int
sub
leave
mov
jmp
xor
rolb
aaa
adc
ljmp
cmpsb
std
pop
test
sqrtps
sbb
pop
enter
cmc
jge
jl
xchg
jp
nop
or
adc
xor
or
dec
repz
jmp
sub
xor
mov
clc
jne
and
inc
and
cltd
sar
mov
and
fldz
leave
pop
jl
subl
add
movl
jmp
or
dec
out
push
into
ljmp
and
push
add
adc
add
sbb
jle
dec
jnp
aad
mov
lock
in
outsb
pop
sub
fcomi
fistpll
lea
push
data16
sub
popa
or
jb
popf
adc
cli
mov
shl
les
insl
or
fisttpl
mov
popa
mov
mov
fwait
jb
repz
dec
sbb
xor
mov
nop
adc
cwtl
pop
lret
cltd
push
pop
dec
jne
ds
fdivr
jb
push
inc
mov
push
mov
mov
mov
movsl
js
xchg
jno
jle
imul
mov
imul
iret
xor
cmpl
sbbl
ss
js
nop
dec
dec
mov
imul
popf
in
les
cmp
mov
mov
or
mov
adc
pop
pushf
ret
mov
cmp
sub
xchg
xchg
pushf
lock
jle
dec
lods
dec
repz
outsb
jbe
and
in
nop
lcall
adc
leave
xchg
cmpsl
and
xor
jns
insb
scas
pushf
scas
ja
std
push
cli
outsb
mov
leave
in
outsl
popa
dec
loopne
dec
cmp
int3
aam
jb
mov
or
cld
arpl
push
mov
enter
adc
adc
fildl
out
pop
out
mov
test
inc
hlt
pop
jne
arpl
adc
nop
jecxz
inc
add
mov
decl
dec
fmuls
loop
gs
add
sahf
mov
add
xor
icebp
jne
outsb
mov
in
jp
lods
lcall
mov
lds
arpl
inc
or
stos
outsl
pop
pop
push
icebp
test
sar
mov
pop
and
dec
mov
cltd
jp
in
dec
add
popf
sbb
int
push
mov
jmp
cmp
leave
or
dec
add
movl
movl
jmp
inc
add
imull
push
outsl
roll
push
add
adc
add
fcomps
xchg
scas
sub
lret
in
add
stos
int
add
lret
xchg
out
lea
fnstenv
int
test
lock
bound
or
aas
int
repnz
lock
xchg
xor
add
lods
cmpl
pop
inc
inc
jl
loopne
sbb
hlt
fsubr
jo
and
popf
cmp
jl
cmpsl
fwait
inc
lahf
lods
mov
dec
pusha
sbb
pop
ss
sti
xchg
and
mulb
pop
sti
mov
mov
aad
jno
cmpsb
jmp
jge
aaa
jmp
cs
pop
sub
or
sarl
lcall
lock
cld
xchg
cmp
mov
pop
dec
pop
or
push
mov
add
das
int3
pop
movsb
adc
pushf
in
inc
repz
dec
icebp
cmp
sub
out
cmp
fcoml
in
and
push
popa
mov
arpl
sub
sar
adc
int
int3
lea
scas
fisttpll
stc
std
xchg
sahf
lret
outsl
call
daa
mov
dec
push
mov
lock
mov
add
movsb
ja
sub
fiaddl
dec
jb
lret
mov
push
enter
rcrb
mov
pop
roll
test
unpcklps
xchg
iretw
pop
aad
leave
and
adc
dec
out
adc
jne
pop
cmp
in
mov
imul
lods
fadds
dec
dec
fstps
test
cmp
mov
xor
mov
mov
cmp
pusha
add
lret
push
xor
sti
xchg
dec
sub
loop
aad
sti
stos
das
cltd
jns
mov
mov
out
mov
push
cmp
pop
and
lcall
pushf
mov
jl
pusha
and
fsts
and
jns
inc
and
cmpsl
inc
mov
test
movl
jmp
adc
pop
pop
push
dec
sub
inc
iret
test
pop
add
adc
add
mov
sub
lcall
out
cmp
imul
hlt
mov
inc
mov
stos
jmp
and
cmp
sahf
pusha
rcll
in
cmp
loope
in
jecxz
es
movsl
stos
into
mov
lret
mov
testl
loope
fwait
or
push
dec
pop
sub
sbb
mov
and
sbb
push
jno
test
pop
and
sahf
cld
or
ss
shlb
sbbb
cwtl
xor
add
adc
xchg
js
mov
push
jl
inc
push
and
dec
lods
cld
pop
sbb
dec
or
cmp
push
adc
cmpsl
cmp
add
add
or
dec
pop
rcrl
outsb
mov
cmp
jg
or
stos
xor
pop
sub
addr16
mov
popa
push
lds
jg
rol
mov
mov
or
push
pop
ret
shr
call
push
fmull
cld
pop
stos
mov
push
jbe
ret
mov
dec
push
inc
dec
xor
cli
fmuls
cmpb
add
enter
mov
inc
push
add
jl
and
rcrl
outsb
inc
lock
push
inc
repz
aaa
sbb
adc
mov
and
inc
adc
mov
sbb
loopne
inc
xchg
enter
inc
outsb
les
in
les
add
icebp
addl
xchg
mov
iret
jl
jle
mov
and
test
dec
and
jb
xor
or
cli
cld
jo
daa
roll
sub
jecxz
cld
lret
adc
push
in
push
lods
dec
lock
leave
sbb
pop
sub
mov
mov
dec
and
pop
sti
push
jmp
jge
sbb
imul
pop
fldenv
movsl
push
inc
fmull
inc
loopne
add
add
inc
int3
aas
add
movl
movl
jmp
xchg
fwait
pop
sti
pop
out
in
pop
add
fnstcw
add
add
dec
cmpb
leave
popa
sbb
inc
mulb
cltd
test
sbb
imul
adc
xor
test
mov
push
jae
sub
jmp
enter
in
pop
push
jno
sbb
mov
bound
fchs
and
mov
xchg
cld
insl
lret
adc
cli
in
outsb
mov
inc
push
push
adcl
dec
sub
sub
mov
mov
jmp
mov
rorl
inc
addb
mov
xor
add
cmpsb
insb
addr16
cmp
cmpl
mov
mov
xchg
aam
aaa
xchg
cmc
mov
js
iret
movsb
or
push
lds
ljmp
lret
data16
pusha
bound
enter
repz
mov
mov
popf
aas
dec
fcmove
adc
dec
in
xchg
inc
insl
inc
mov
mov
das
mov
pop
mov
insl
xchg
mov
or
int3
mov
jle
repz
dec
sahf
jecxz
and
jmp
mov
adc
sub
and
or
xorb
scas
xor
fmuls
pop
mov
lcall
push
xlat
shlb
dec
jle
mov
push
jb
addl
iret
ja
test
aas
filds
lcall
stos
adc
subb
shll
pop
xor
insl
fsubl
negb
mov
or
test
loope
aam
ffreep
mov
imul
cli
mov
xor
lds
int
push
mov
push
inc
call
push
daa
out
xor
or
js
mov
xor
mov
lahf
insb
pushf
aaa
cs
daa
xchg
inc
mov
rcll
cmp
mov
sbb
jne
sbb
mov
dec
sub
mov
ljmp
add
movl
movl
movl
movl
movl
mov
mov
mov
jmp
je
dec
pop
outsb
pop
je
or
jle
or
and
add
add
into
repnz
push
pop
fptan
push
inc
jns
pop
jae
mov
mov
cmp
mov
lret
rorb
push
push
mov
cmp
dec
add
jge
cmp
sarl
sbb
mov
push
xor
adc
sets
inc
xor
sbb
mov
jae
push
inc
jne
cmc
lahf
lea
sbb
sbb
popa
hlt
push
leave
hlt
ud2
test
sub
xchg
popa
dec
in
add
and
adc
jle
test
test
inc
rclb
add
ja
jmp
jmp
sbb
mov
push
mov
sahf
sti
mov
fdiv
jmp
xor
push
xlat
jecxz
inc
cli
cs
adc
fnsave
ss
mov
mov
dec
daa
cmp
mov
dec
outsb
fstp
xchg
mov
adc
fs
repnz
add
rorb
dec
rorb
roll
das
inc
sub
cld
add
lret
pop
mov
dec
push
test
jg
lds
into
cmp
mov
ret
inc
push
jnp
loope
pop
add
cmpsb
scas
jno
and
pop
addb
adc
inc
xchg
out
dec
hlt
mov
cmp
mov
xlat
lds
lods
popf
int3
es
in
add
sub
xor
mov
in
leave
mov
cmp
pop
and
nop
cmp
arpl
sbb
es
or
cltd
aaa
pop
add
mov
lea
stc
xor
stc
out
shr
cli
arpl
mov
ja
mov
sahf
mov
into
or
cld
mov
push
inc
rorl
out
ret
add
lret
leave
fldenv
mov
in
mov
pop
mov
cmp
cmp
pop
lods
or
jno
or
sbb
icebp
xor
stos
and
mov
flds
inc
fisubs
in
pop
faddl
iret
mov
jmp
movsb
out
mov
mov
test
rorl
adc
add
notb
pop
into
push
in
jg
add
cmpsl
push
inc
sbb
push
add
mov
lret
add
xchg
mov
inc
sbb
outsl
inc
push
dec
mov
fmull
xor
dec
ljmp
dec
sbb
add
stc
add
xchg
adc
xor
or
aad
fucom
or
pop
sahf
insb
xor
mov
mov
sti
jns
mov
sbb
fbld
fs
cs
enter
pop
dec
shr
sub
or
stos
inc
xor
sub
in
sahf
int
inc
lcall
ss
xchg
mov
or
movsb
inc
in
mov
sub
add
lahf
bound
and
cltd
popa
fsubr
repnz
pop
in
inc
stos
sub
xchg
cmp
into
mov
xor
jl
push
test
fidivs
jbe
inc
sbb
es
ja
and
lods
nop
dec
push
mov
or
push
xchg
mov
ret
jl
les
dec
repnz
mov
pop
inc
mov
mov
add
sub
insl
rorb
xchg
push
iret
fisttpl
and
fadds
add
mul
jmp
mov
lret
inc
push
es
addr16
rorb
out
jnp
ret
mov
or
push
cmp
or
xchg
hlt
fsubs
add
mov
sub
cs
sbbb
xchg
jp
test
sub
jmp
repz
jne
sti
data16
inc
push
out
sbb
jne
jbe
sub
lcall
out
xor
cmp
sarl
dec
cmp
push
cmp
add
or
out
pushf
xor
inc
cmc
inc
jp
ja
jnp
jae
and
leave
insl
aaa
add
push
push
cmpsl
test
adc
sbb
add
add
enter
inc
add
add
sub
add
cmp
data16
jle
jl
pop
nop
popf
add
add
adc
add
out
push
orb
in
dec
pop
gs
cli
test
movl
push
push
pop
nop
dec
or
and
sbb
addr16
mov
sti
push
and
or
hlt
mov
das
xor
std
cmp
test
adc
shrb
push
stc
mov
push
imul
subl
or
nop
cmc
aas
scas
push
dec
fstpt
divl
lods
push
jnp
stos
add
sub
out
lcall
mov
xor
adc
and
jecxz
xor
in
lret
jnp
sbb
xchg
ret
push
adc
in
daa
inc
dec
in
cltd
scas
popa
dec
push
xor
push
jbe
jp
inc
xlat
push
xor
xor
ja
dec
sub
cmpsb
inc
cmc
mov
mov
imul
shr
add
pop
xchg
push
mov
mov
pushf
pop
icebp
imul
mov
pop
popa
cmpsl
dec
jl
int3
mov
je
xor
inc
fwait
inc
sbb
rorb
pop
lahf
data16
or
cmp
push
into
push
lahf
xchg
mov
inc
test
repz
jbe
push
int3
addl
scas
xchg
into
pop
push
test
aas
jp
aas
cmp
push
sbb
aad
adc
or
roll
call
cmp
pop
push
leave
loop
test
iret
jne
cmp
jle
outsl
mull
scas
adc
jno
int
cmp
mov
out
fcompl
xchg
fldl
mov
inc
sti
xchg
sub
pop
adc
mov
add
loope
xchg
call
push
test
cmp
cmp
stc
or
fstpt
cmp
jns
add
add
dec
aam
arpl
jle
adc
int
pop
lods
or
out
lahf
xchg
xchg
repnz
mov
sbb
jmp
xchg
add
fstl
js
mov
je
add
adc
add
or
lods
mov
xchg
pushf
sub
sub
jecxz
add
stos
inc
sbb
and
int
inc
push
mov
and
add
xchg
dec
adc
mov
iret
cmp
inc
mov
mov
adcl
hlt
loope
popa
lds
and
inc
add
aad
xchg
xor
pop
ss
and
pop
and
mov
mov
mov
sub
jmp
and
insl
out
jo
scas
cmp
sbb
dec
outsl
mov
push
bound
rorl
xor
mov
jmp
jno
xchg
adc
decl
rolb
nop
fimuls
jge
movsl
or
daa
stos
nop
ret
lret
stos
adc
and
test
loopne
rcrl
je
test
sub
xchg
jae
loope
dec
leave
add
scas
add
sbb
adc
pop
into
mov
mov
cmp
cmp
xchg
loop
xor
xor
push
dec
shrb
pop
ret
xchg
movsl
pop
cmp
mov
and
sbb
int
in
sti
xor
or
jbe
lret
xor
popf
stc
es
push
ss
das
sbb
call
rorl
inc
popf
notl
inc
ret
mov
dec
sub
loope
dec
mov
aaa
test
push
add
shl
fcmovnb
sahf
dec
adc
jbe
sub
adc
pop
movsl
call
adc
es
popa
fbstp
xchg
sub
cs
test
and
sub
sub
or
dec
iret
inc
ss
mov
fisttps
into
sub
rcll
outsl
lds
ret
jno
popa
fldt
flds
cwtl
sub
imul
jmp
clc
cmp
iret
cld
cmp
pop
push
add
mov
add
add
inc
cli
xor
insb
mov
and
mov
pop
cld
push
mov
rolb
mov
clc
lret
inc
in
xor
sbb
mov
gs
sbb
xchg
inc
jne
jne
cld
add
fisubrs
lret
and
jb
inc
aam
and
mov
xor
pop
scas
mov
sbb
in
jle
dec
mov
std
dec
jle
loopne
pop
roll
mov
push
pop
push
in
clc
or
mov
mov
mov
push
imul
lods
cmp
fldenv
and
or
jmp
outsb
sub
das
xchg
dec
cmp
sub
ss
ljmp
ret
or
dec
dec
sub
cwtl
xor
dec
and
jg
fildll
mov
loop
test
mov
lret
pop
cltd
mov
xchg
loop
cmp
mov
mov
out
nop
rcr
push
sti
xor
xchg
adc
outsb
call
add
iret
and
subl
rcll
dec
lea
push
movsl
imul
sbb
hlt
xchg
jge
add
dec
in
insb
lcall
and
insl
les
ds
dec
cmp
insb
cwtl
jae
jl
out
push
pop
push
cmp
stc
mov
pushf
insl
mov
cmp
jnp
jb
adc
insb
test
arpl
fdivr
inc
test
nop
pusha
mov
shlb
rcll
sarb
pop
scas
jmp
out
add
icebp
jecxz
stos
int
add
data16
sbb
int
xchg
fldz
aad
add
shlb
nop
push
sti
rcrb
and
fists
and
jl
lret
pop
lds
les
push
mov
negb
cs
xchg
or
add
adc
cltd
jmp
insb
cltd
pop
sar
xlat
in
mov
or
js
pushf
add
adc
add
negb
leave
xchg
sti
jns
push
mov
subl
sub
jno
scas
inc
mov
in
scas
loopne
mov
add
push
in
ds
fwait
or
mov
and
or
jb
movsl
loope
test
pop
psubsb
notl
mov
negb
movsl
xchg
mov
int
imul
mov
mov
std
inc
mov
adc
or
daa
or
mov
and
test
lret
fistps
cmpsl
add
jecxz
jge
or
es
jo
test
cmp
out
xlat
push
movsb
push
test
xchg
or
test
insb
hlt
cld
mov
lods
ljmp
mov
mov
pop
jg
mov
xor
jae
cmp
cs
insb
hlt
inc
mov
clc
das
movsl
pop
cmpsb
imul
add
cld
adc
sahf
mov
adc
inc
lock
inc
icebp
mov
test
ficompl
pushf
test
cmp
pushf
insb
add
pop
add
pushf
fstp
int
call
mov
iret
fmull
mov
mov
pop
pop
pop
sbb
xchg
push
mull
dec
or
hlt
xor
lods
mov
mov
out
jbe
mov
stc
push
and
jge
fs
in
cmpl
fistl
mov
add
push
adc
dec
push
imul
push
xor
int3
xlat
add
push
testb
cmp
cli
push
pushf
fldenv
aam
data16
pusha
pop
aad
gs
outsb
push
adc
rorl
das
mov
xor
mov
data16
cmpl
ja
leave
in
out
xchg
adc
aas
data16
cmp
jmp
ja
mov
pushl
fisttpll
lods
jo
insl
mov
add
adc
add
incb
add
ss
into
ss
and
in
sub
xor
cwtl
dec
repz
jle
es
jmp
enter
shlb
lock
cmp
dec
aam
sti
fistpll
std
xor
jp
stos
and
and
sahf
cmpsl
daa
cli
dec
pop
mov
test
sbb
hlt
mov
mov
mov
popf
cmp
lds
xchg
jne
enter
mov
div
cmpl
cltd
test
imul
mov
popa
das
cmp
jle
negb
jae
mov
stc
mov
cmc
fisubrl
cmp
mov
std
jl
pop
enter
ret
rcrb
add
loope
fs
mov
nop
inc
xchg
ret
mov
cltd
mov
jno
ss
pop
ja
in
jmp
shl
inc
sub
jmp
into
dec
pop
add
mov
jp
arpl
mov
push
push
xchg
or
divl
test
xor
sti
hlt
packsswb
icebp
dec
mov
fidivs
cmp
adcl
xchg
mov
pushf
push
mov
xacquire
jp
or
lock
inc
push
adc
sub
repnz
fcoms
inc
call
jbe
and
jns
scas
mov
pop
jae
out
mov
cmc
les
cmp
cmp
movsl
cwtl
jle
clc
mov
and
pop
pushf
incl
test
lret
popa
shrl
fwait
popf
dec
dec
mov
aam
lds
jbe
cmp
in
std
fs
add
fs
arpl
push
inc
dec
push
inc
cmp
jl
test
lods
mov
mov
stos
loop
addb
repnz
js
inc
mov
cld
xor
and
pop
mov
xchg
add
in
pusha
into
cmpsl
sub
xchg
int
mov
mov
mov
xor
test
add
jmp
aas
jecxz
inc
fdivl
ljmp
cwtl
mov
imul
adc
add
cli
sub
pop
sub
out
xchg
mov
shl
and
inc
xor
cmp
push
icebp
int
dec
inc
in
jl
push
orl
js
or
ljmp
lcall
popw
pop
outsl
xor
sbb
or
and
pop
lock
sub
or
sub
or
push
mov
dec
in
jns
sbb
mov
cmp
ret
fs
xor
je
push
cmp
xchg
xor
or
add
mov
push
mov
in
jecxz
loopne
andb
mov
les
fwait
or
inc
dec
mov
inc
pop
push
loopne
lds
rcrb
inc
into
fisttps
inc
dec
xchg
dec
xor
fldt
xor
movl
mov
stos
jl
and
sbb
mov
ja
lods
xchg
sub
dec
test
rcl
add
hlt
out
sar
dec
hlt
test
mov
rorb
cmp
mov
add
sub
adc
and
sub
xor
pop
fcoms
or
mov
ja
std
mov
pop
lock
jle
and
pop
je
pop
popf
dec
mov
or
xor
inc
cld
sbb
sbb
adc
jecxz
jae
add
stc
popf
sub
mov
push
insb
ja
xchg
jl
xchg
mov
rcr
jecxz
xchg
popf
sbb
in
sbb
dec
popf
xor
aaa
inc
mov
add
loop
lret
inc
jbe
lret
xchg
xchg
mov
sbb
mov
popf
mov
xchg
out
adc
pop
mov
push
inc
dec
je
in
or
pusha
jmp
or
sub
mov
sub
jmp
movsl
inc
or
out
fidivs
loope
sub
fsubrs
add
add
in
jmp
cmp
sbb
or
fldl
jnp
lret
stos
push
mov
push
mov
lret
mov
push
sarl
mov
jns
scas
pop
inc
jns
call
xor
das
outsb
lods
push
push
iret
xorl
or
test
rcr
mov
ljmp
sub
fldl
nop
cmc
sti
or
mov
pop
inc
xor
xlat
cmp
sbb
mov
pop
mov
pop
aam
lods
or
ja
lods
sub
xlat
sub
stos
int
cmp
fwait
stc
fidivs
hlt
push
mov
or
sub
pop
pop
xchg
gs
pop
push
inc
rcll
push
adc
frstor
mov
xchg
dec
cltd
pop
das
incl
adc
pop
xlat
stos
dec
pop
ret
fldl
ja
or
les
adc
negl
and
dec
hlt
add
sub
sbb
and
in
push
lret
jmp
jg
mov
lahf
jmp
mov
mov
xor
out
lret
addr16
fistpll
push
nop
mov
lahf
in
mov
outsb
in
sbb
adc
sub
lods
out
jno
imul
push
xor
out
cmp
insl
xchg
dec
xchg
xor
std
clc
push
aas
xor
js
dec
aam
mov
clc
ss
repnz
gs
add
xchg
lahf
mov
push
jno
adc
popf
mov
popa
jle
mov
outsb
adc
add
mov
fwait
add
test
lock
imul
les
lods
test
xchg
ds
pop
mov
xchg
sub
and
cmp
jge
and
jno
push
das
mov
je
subl
aas
je
mov
mov
mov
mov
push
jmp
mov
adc
jne
outsb
sub
shr
outsl
add
adc
add
stos
sub
lahf
cli
sbb
dec
aad
mov
int3
dec
movsb
and
and
mov
rclb
xchg
scas
cmp
mov
lds
pop
adc
mov
sub
mov
push
mov
push
mov
icebp
lods
ret
dec
pop
adc
sahf
pop
pusha
cmp
cmpsb
out
sub
mov
int
imul
bnd
inc
jb
inc
sub
imul
push
fmuls
push
mov
xor
hlt
cmpb
gs
outsb
in
in
pop
lea
inc
jbe
test
sbb
repz
push
clc
daa
xor
ret
pop
sub
dec
loop
jns
inc
dec
sti
fs
mov
or
insl
mov
out
cmp
push
fsubr
sbb
pop
jmp
addr16
xchg
jbe
jle
lds
or
xchg
je
stos
daa
int
jae
mov
xchg
or
dec
imul
push
jbe
push
dec
mov
test
dec
das
mov
data16
cltd
push
sbb
cmp
je
arpl
or
in
aaa
adc
mov
push
fsubrs
inc
fucomi
add
dec
cmp
insl
or
jnp
scas
fsts
cmpsb
jo
in
push
fwait
push
loopne
stc
sbb
adc
cmp
or
int3
jecxz
out
ja
sub
leave
into
insl
jmp
push
arpl
sub
nop
lea
cwtl
mov
mov
fcoml
push
es
cmp
adcl
sahf
rcrb
xchg
orb
stos
mov
mov
outsl
fldcw
jb
adc
mov
add
in
dec
ret
es
loopne
ret
jmp
mov
roll
pop
outsb
shrl
inc
cmovnp
loopne
mov
shl
dec
jp
test
call
adc
fwait
arpl
mov
add
into
jmp
jg
imul
gs
rorb
add
add
add
daa
xor
test
dec
cmp
inc
movsb
test
hlt
lret
loopne
repz
addb
pop
xorl
adc
mov
aam
movsl
sahf
cmc
pusha
xchg
mov
cmp
fdivrl
adc
imul
xchg
sub
jle
sbb
mov
sbb
mov
incl
push
lea
and
cmp
mov
or
mov
movb
cmp
cli
push
add
sbb
mov
jmp
dec
jle
push
into
cmpsb
es
xchg
movsb
hlt
or
push
push
mov
xchg
dec
clc
pop
mov
dec
mov
adc
js
les
pushl
sbb
cmc
mov
cmp
fmuls
adc
or
insb
das
je
mov
jne
push
jl
push
jg
inc
lcall
idiv
xchg
dec
cltd
adc
daa
dec
stc
push
lahf
ss
mov
test
jp
jnp
pop
lods
into
call
in
jge
adc
orb
pop
aas
adc
pushf
jmp
neg
popf
pop
lret
daa
jb
test
lcall
mov
mov
insl
pushf
xchg
dec
cmpsb
clc
xchg
inc
popf
xchg
mov
ror
cld
outsl
xlat
out
cwtl
inc
cmpsl
ffree
insl
pop
inc
pop
aam
call
inc
stos
iret
add
dec
popa
mov
push
inc
inc
xchg
inc
cwtl
push
cmc
aad
repnz
cwtl
mov
sub
push
pop
fwait
out
push
mov
imul
test
ds
xlat
rolb
pop
sbb
or
jmp
pop
sbb
jns
aaa
cmp
push
inc
jo
jg
xchg
mov
test
bound
xor
ficoms
jecxz
daa
mov
sbbb
dec
icebp
aam
sbb
lods
push
scas
dec
add
imul
dec
mov
xchg
cmp
dec
inc
xchg
xor
stos
pop
push
jg
jno
out
xchg
cwtl
jge
outsb
adc
push
call
push
jmp
insl
popa
lds
out
jmp
mov
je
add
add
mov
mov
andb
repnz
imul
cld
scas
push
jns
sbb
arpl
pop
in
scas
in
push
jo
pusha
xor
xchg
sbb
stos
sbb
cmp
or
jl
or
push
testb
sti
cs
rorl
outsb
cmp
leave
inc
shr
push
pusha
imul
lret
add
sahf
jecxz
sbb
mov
cmp
cld
mov
jmp
and
mov
adc
mov
hlt
subb
js
fs
xchg
jmp
pop
and
ss
pop
mov
pop
loopne
jle
aaa
in
lods
or
jmp
cwtl
sbbl
imul
push
push
xor
repz
es
inc
xchg
ljmp
adc
xor
xchg
push
xchg
xchg
cmp
call
mov
cmp
pop
fldl
lcall
or
dec
es
cmp
ret
das
xchg
mov
jge
lret
jae
jnp
aas
pop
fst
push
xlat
cld
fsubrl
repnz
cmc
sti
shll
dec
cmpl
test
test
sub
subl
pop
movsl
mov
sbb
icebp
add
pop
sbb
pop
ljmp
jmp
dec
dec
inc
aaa
pop
pop
sub
cmpsb
popa
mov
dec
js
lock
in
push
in
xlat
inc
js
test
push
push
mov
xchg
xchg
mov
fstl
xor
sbb
and
std
mov
and
pushf
xorb
xchg
je
jnp
cmp
repnz
rcrl
mov
ret
sbb
lcall
cmp
or
or
bnd
mov
ljmp
push
call
jmp
jae
divb
divl
test
pop
lock
adc
add
pushf
nop
adc
pushf
cwtl
int3
sub
out
sub
sub
jle
cli
enter
mov
loopne
pop
in
mov
jno
out
loop
cli
popf
mov
repz
ds
orb
cwtl
cmp
popf
daa
fucomi
adc
pop
cmpsb
add
add
cmp
orb
cltd
cmpsl
xchg
sbb
out
jae
xlat
les
leave
mov
aas
jnp
test
jmp
stos
sti
sbb
jo
xlat
push
xlat
arpl
call
xchg
mov
jno
gs
insb
push
push
ffree
jmp
push
xchg
cmp
xchg
cmp
push
mov
ja
adc
sbb
int
js
mov
jbe
mov
dec
in
sbb
insl
pop
fwait
ret
pop
pusha
push
sbb
int
data16
rorb
push
dec
cmp
cmpsb
or
mov
out
pusha
add
testb
cmpsb
or
rorl
cld
rorl
pop
xorl
mov
push
fimuls
in
dec
push
orl
test
test
ret
mov
cmp
pop
lock
push
sti
fiadds
xor
or
lahf
cmp
jne
lcall
icebp
movl
pop
add
pop
push
test
ss
ljmp
out
add
cli
and
sti
ret
iret
push
cmpsl
scas
pop
dec
loopne
xor
mov
sub
daa
jle
aad
subb
sbb
faddl
orl
or
shl
mov
sub
mov
je
adc
enter
mov
dec
call
stc
xchg
outsl
mov
outsl
ss
pop
loope
jmp
popa
sbb
rorb
in
iret
stc
push
inc
add
les
push
xor
rcrb
dec
fdivrs
xchg
and
mov
enter
les
jl
or
add
add
cld
test
jns
pushl
adc
js
add
add
es
into
add
movsl
push
mov
addr16
xor
sti
repz
rorb
inc
jmp
fisttpll
int3
xchg
fbstp
std
add
addr16
push
sarl
cmp
mov
add
dec
inc
pop
mov
fisttpl
out
sub
xor
aaa
leave
ja
lock
xor
jno
icebp
dec
cmpsl
xor
out
mov
mov
xor
and
cltd
mov
fwait
push
cmp
test
pop
xchg
int3
fcoml
adc
adc
add
push
add
mov
fstpt
push
jg
inc
or
in
aas
insl
dec
jne
test
sbb
and
inc
adc
push
js
movsl
pop
cmp
movb
ret
outsb
cmp
cld
insl
lds
jbe
or
fisubs
mov
mov
dec
xchg
inc
add
jnp
fwait
pop
fistpll
sbb
sub
addr16
enter
mov
rcll
add
xchg
dec
and
xchg
inc
cmp
pop
aaa
out
sub
sub
mov
inc
clc
lods
mov
sub
fwait
mov
or
inc
mov
stos
in
daa
adc
pushf
ret
add
inc
cmp
add
fdivr
adc
pop
clc
js
sbb
or
mov
cmp
jg
mov
and
push
mov
mov
dec
lahf
mov
loope
dec
xor
pop
inc
icebp
xor
dec
jl
fidivrs
mov
test
sbbl
aad
xlat
xchg
lahf
add
iret
pop
inc
idiv
mov
mov
jl
cmpsl
rcll
fnstcw
sbb
or
mov
fistps
mov
mov
and
xchg
and
cwtl
pop
daa
aaa
push
dec
sarl
roll
push
or
push
fcmovbe
cmp
das
dec
out
dec
inc
and
lds
mov
jmp
bound
jle
jg
cmp
fiadds
pusha
push
adc
push
jp
add
add
mov
gs
jae
int3
dec
xor
sbb
bound
in
xor
dec
pop
pop
stos
and
jo
adc
in
repnz
stc
or
xchg
int
pop
dec
movsl
fs
pop
das
sub
add
shr
in
mov
adc
lds
fstl
mov
pop
mov
mov
mov
xchg
mov
std
daa
cmc
xchg
cmp
incb
loop
je
adc
loope
and
cmpsl
sub
jb
pop
je
and
rcll
rcrb
fildll
aad
out
out
inc
mov
imulb
jmp
jbe
xchg
mov
imul
loopne
int
jae
shrb
rcl
xor
cli
push
shlb
sbb
mov
out
xor
jbe
addl
cmpsb
xor
mov
imul
out
hlt
jl
out
adc
jle
and
dec
mov
ror
mov
lock
loopne
stc
out
push
cmpl
jge
outsl
lea
imul
sbb
push
mov
sbb
call
leave
testb
or
cmp
orb
pop
rcll
stc
jne
sub
rcll
lods
sub
push
ret
enter
pop
or
cmpsb
xchg
lret
pop
movsb
dec
dec
jns
pop
adc
pop
inc
inc
ret
jo
mov
cmpsl
rclb
mov
sub
jb
idivb
lea
cmp
fstps
je
pop
sbb
sbb
xchg
jo
popa
lret
xchg
in
mov
push
aaa
fisubl
pop
sub
and
sbb
xor
sti
stos
aad
int
or
adc
mulps
sub
adc
add
push
loopne
mov
add
rorl
mov
mov
or
jmp
xbegin
mov
sar
into
add
add
adc
add
mov
adc
in
sbb
jns
mov
into
pop
cmpsl
pushw
add
inc
sbb
jns
adc
das
enter
xor
or
sarl
insb
jnp
and
sub
mov
clc
cld
mov
sbb
icebp
test
mov
fcompl
rorb
int3
in
setnp
or
into
lea
test
sub
adc
dec
jbe
sub
xchg
mov
mov
ljmp
pop
pop
jnp
inc
lret
outsb
inc
and
jns
imul
ljmp
add
loopne
mov
aad
enter
sahf
jge
jno
aam
pop
mov
push
fdivrl
in
add
in
jne
or
jne
jb
xchg
mov
movsb
xchg
loope
call
fwait
call
les
adc
inc
xchg
inc
cld
sti
or
jns
and
in
lds
add
imul
iret
out
in
jns
movsb
or
push
mov
and
inc
inc
mov
shrl
out
jb
in
jl
xlat
aad
sbb
xor
mov
idivb
push
test
sar
sbb
stc
arpl
imulb
dec
cmp
call
lock
cld
or
xor
dec
fldenv
mov
test
jb
fidivs
aad
loopne
adc
fisttpl
and
push
xor
or
out
mov
mov
gs
jmp
dec
inc
jge
es
and
add
mov
mov
into
add
neg
push
js
hlt
lea
mov
js
add
pop
add
out
cli
sarl
xor
mov
mov
ret
cmp
inc
cmp
incl
jmp
add
iret
scas
out
addr16
cmp
sub
js
add
adc
add
jae
and
cmp
je
mov
add
mov
dec
lret
cwtl
mov
pop
xor
addb
dec
scas
jmp
sbb
mov
sub
aam
lahf
inc
jns
outsb
pop
rol
inc
mov
into
sbb
cmp
inc
mov
xchg
jmp
lcall
out
mov
pop
lret
int3
imul
fsts
mov
fcoms
sahf
xor
shrb
in
xchg
push
insb
arpl
lods
call
out
push
js
sbb
add
call
mov
inc
ja
adc
and
movsl
shrb
leave
incb
add
movsb
xlat
pop
stos
leave
adc
ret
push
test
sbb
adc
jmp
int
leave
jae
xchg
cmp
or
pop
pop
fldcw
jmp
outsl
fdivl
push
xchg
xchg
gs
loop
stos
add
lock
cld
shll
mov
cmp
ljmp
dec
scas
pop
movsl
inc
lods
es
dec
sti
push
aaa
bndstx
inc
push
jmp
pop
aam
push
mov
and
cmp
shlb
mov
lcall
repnz
sbb
sub
mov
aas
test
dec
dec
adc
add
push
jg
int3
fcmove
xchg
xor
sbb
xchg
and
push
imul
inc
sahf
rep
cs
mov
in
add
cld
inc
testl
ret
cmpsl
and
insl
xchg
pop
test
outsl
jnp
pop
push
or
daa
and
pop
sbb
xchg
adc
jae
sub
mov
daa
dec
mov
fucom
pop
jne
or
out
adc
pop
movsl
pop
cwtl
dec
hlt
mov
xchg
sbb
dec
and
mov
imul
or
idivb
enter
sub
add
bnd
jmp
fwait
jl
push
testl
aas
aam
outsl
mov
mov
add
addr16
and
sub
push
dec
call
fcoml
dec
adcl
pop
dec
ffreep
divb
dec
lea
push
repz
xchg
inc
inc
fistl
cli
insl
push
pop
nop
sarl
xchg
jecxz
cwtl
jg
into
xlat
pop
xchg
mov
js
cmp
and
lret
clc
cmp
ret
insb
xchg
cld
rol
or
icebp
in
sub
orb
js
loopne
cmpsb
call
push
fildl
xor
mov
push
call
vfrczpd
outsb
ror
pop
lahf
xchg
jl
jg
xor
adc
into
into
and
gs
sub
push
pusha
push
add
enter
lods
inc
mov
or
lea
cmp
scas
sti
imull
movsb
nop
push
repnz
adc
sbb
push
mov
mov
ds
out
lea
adc
cwtl
pop
pop
jno
into
sbb
ficoml
push
mov
cmp
mov
cmpsb
jo
gs
pusha
push
xchg
pop
add
arpl
int3
dec
xchg
mov
je
lret
fistpll
shrb
jns
je
imul
sbb
sbb
jns
popa
mov
dec
mov
sbb
lcall
sbb
popa
fstps
jo
pop
fwait
pop
fucomi
cmc
or
mov
fs
into
sub
addr16
push
arpl
sbb
jns
dec
xor
sbb
mov
out
add
sti
inc
dec
jl
mov
out
addr16
sbb
and
test
cmovne
aas
pop
jmp
aad
icebp
shrl
xor
pop
ja
mov
dec
mov
cmp
pop
repnz
cli
cmp
lret
xor
cmc
push
sub
lea
cli
mov
lret
or
mov
mov
pop
into
mov
dec
clc
sub
imul
mov
xor
div
mov
xor
sub
mov
div
mov
jmp
inc
insw
jl
jg
jle
add
insl
mov
add
add
je
xlat
pop
push
adc
mov
push
and
ficomps
sub
jne
rorl
hlt
adc
sahf
inc
ds
fldenv
add
xor
inc
cmp
dec
test
dec
sbb
push
jns
test
cmp
ljmp
subl
mov
push
mov
cli
mov
fs
aam
xchg
inc
lahf
aam
test
xchg
push
lret
mov
jge
xchg
xlat
fmulp
cld
in
jo
dec
dec
push
jno
pusha
add
aaa
mov
mov
aaa
pop
add
pop
mov
fistpll
cmp
push
clc
push
xchg
dec
add
sbb
xchg
scas
rcll
sbb
leave
repnz
lahf
loope
add
into
inc
mov
cmc
mov
mov
xchg
pop
push
xchg
aaa
sub
js
out
add
ljmp
jns
cld
pop
or
or
das
add
and
jge
imul
add
jecxz
sbb
std
xchg
push
pop
scas
test
xlat
xchg
mov
scas
out
dec
into
in
lret
xchg
mov
xchg
sbb
pop
rorb
fildl
jecxz
loop
mov
enter
jl
adc
dec
movsb
mov
lods
negb
lock
add
inc
add
popa
nop
cwtl
andl
sti
mov
js
xor
xchg
out
loop
ss
arpl
loope
loope
hlt
mov
cmp
sub
inc
mov
jg
lahf
shrb
cli
cmc
mov
dec
and
xor
mov
pop
mov
sub
or
and
int
add
js
mov
pop
xor
mov
cmp
in
cmp
sbb
dec
dec
out
mov
inc
and
xor
sub
push
ss
outsl
mov
cmpb
xchg
inc
and
sub
dec
leave
and
lret
sub
or
rorb
jmp
pop
pop
pop
mov
idiv
ljmp
lret
mov
add
adc
add
shrl
and
xor
out
jmp
mov
das
out
lahf
jl
push
repnz
and
repz
rolb
scas
adc
ret
and
mov
sbb
jno
cmp
popf
movsb
lds
fimull
jge
mov
das
dec
ffree
lea
cmpsl
sbb
push
jl
jle
and
mov
add
addb
push
dec
aaa
adc
repz
lahf
and
test
jno
lods
and
mov
cmp
pop
mov
rclb
xor
push
jle
mov
push
mov
int
data16
in
dec
sub
filds
je
xor
or
js
jmp
les
sbb
adc
pop
mov
enter
fisttpll
je
jne
sahf
add
dec
scas
sbb
movsb
into
mov
negl
mov
cli
mov
add
adc
sub
pop
lcall
cli
rcr
mov
popa
sbb
mov
shll
dec
movsl
cmp
push
fdivrs
hlt
xor
push
pop
mov
inc
repnz
adc
jae
mov
roll
adc
daa
pop
ss
and
dec
pop
cltd
and
jnp
pop
fwait
pop
jne
pop
inc
adc
pop
cmc
jae
cwtl
cld
cmpl
testb
sub
adc
dec
dec
test
cwtl
js
scas
jae
mov
ss
dec
jo
dec
sbb
fcmovne
int3
icebp
push
mov
aad
xor
sub
push
fsub
iret
stc
or
iret
sub
rorl
push
mov
pop
push
test
push
int
std
rcrl
js
jns
jne
mov
lods
das
pop
inc
push
jp,pn
add
popa
cmpb
sbb
scas
mov
stos
xlat
xor
jmp
out
fs
in
divl
je
push
add
xchg
add
add
andb
repnz
dec
test
mov
iret
xor
xchg
sbb
pop
stos
int
cmc
cmpsl
aad
loopne
jge
mov
test
push
mov
push
mov
and
adc
xchg
fidivrl
dec
inc
jg
mov
mov
pop
je
scas
xor
ret
mov
adc
mov
clc
je
jp
out
fdivs
cltd
and
popf
mov
xor
xor
jnp
fwait
cld
adc
xorb
mov
inc
fcompl
mov
and
aad
adc
clc
mov
dec
mov
jge
or
jnp
jecxz
cmpsl
lock
xchg
test
mov
fistpl
fisttps
gs
dec
sbb
repz
push
dec
mov
add
pop
cmp
sub
jle
jb
mov
inc
mov
pop
push
test
out
int3
inc
nop
ljmp
push
hlt
add
jp
mov
ljmp
mov
xchg
inc
jae
leave
push
mov
in
int
in
jnp
test
rclb
adc
inc
jmp
xor
push
xchg
repz
or
cltd
push
inc
loope
lea
dec
insl
cs
fsubp
test
out
or
cmpl
mov
jo
dec
pop
inc
add
mov
adc
and
clc
push
fsubs
dec
adcl
movsl
mov
jne
or
sub
lods
jmp
jg
inc
fs
iret
fidivrs
mov
insl
inc
fld
sbb
or
ss
cmc
pop
add
mov
push
mov
or
jg
loopne
adc
fwait
mov
idivl
addr16
test
inc
and
sbb
inc
shrl
inc
in
mov
and
div
xor
mov
add
mov
mov
sub
mov
div
mov
mov
jmp
adc
in
mov
lcall
repz
mov
add
add
lahf
push
cmp
rorb
mov
shrl
dec
or
out
les
sti
imul
cmp
pop
adc
movsb
shll
subl
in
sti
es
popa
jns
mov
or
dec
push
stc
cmp
ss
inc
out
ficomps
mov
mov
pop
jo
out
mov
cmpl
ror
dec
pop
pop
jno
add
leave
and
pop
pushf
movsb
add
xor
xchg
dec
bound
mov
cwtl
test
pop
lret
arpl
pop
jbe
dec
pushf
mov
nop
dec
mov
clc
mov
push
lret
xchg
and
enter
cli
jno
xchg
movsb
cmp
mov
mov
clc
das
bound
shll
lret
lods
addr16
mov
loop
mov
push
mov
inc
in
shrb
stc
cmpsl
jl
push
mov
shrb
pop
sub
xchg
ret
add
xor
mov
cmp
lods
pop
xchg
cmc
xor
fcomps
push
push
mov
ss
jge
adcl
adc
cmp
mov
and
xor
mov
mov
or
sub
xchg
addb
loopne
pusha
imul
push
daa
sub
xor
insb
and
push
and
xchg
adc
sbb
sub
mov
cltd
mov
stos
sbb
lock
or
imul
daa
inc
fidivrl
sub
das
push
scas
popf
aam
dec
insb
mov
sub
das
xchg
ljmp
push
mov
inc
aad
int3
mov
mov
mov
punpckhwd
and
bnd
push
mov
cli
dec
or
hlt
pop
dec
xor
pop
inc
ds
add
sbb
pop
mov
popf
mov
add
add
dec
inc
jg
dec
aas
cmpsb
in
aam
and
and
mov
add
add
or
mov
fs
sub
jne
movl
jo
popa
or
xchg
jns
pop
repz
xchg
mov
aam
sbb
mov
mov
lret
pop
popl
push
sbb
faddl
mov
push
rolb
mov
xor
out
sub
dec
repnz
xor
push
or
jecxz
movsb
aaa
cmpsb
push
ljmp
add
push
dec
aad
lcall
sbbb
int3
lret
inc
cltd
cli
adc
jbe
inc
push
mov
lea
std
dec
shl
xchg
insb
or
and
lds
es
sbbb
sub
test
pop
add
sar
cltd
fldl
addr16
mov
aam
inc
popa
adc
enter
lods
lret
leave
push
mov
bswap
mov
inc
js
scas
pop
or
push
cmpsl
pusha
mov
insl
stos
sub
sahf
sbb
repz
jp
jne
pop
adc
ja
and
imul
and
or
stc
pop
cwtl
cli
jns
or
into
jg
xchg
jne
sbb
mov
loope
addr16
add
lea
fsts
xchg
les
xchg
repnz
sbb
cmp
gs
push
ds
mov
pop
sbbb
into
mov
js
or
icebp
cmp
pop
sub
and
in
cmpsb
je
cmp
add
or
mov
mov
and
shrb
mov
ja
call
jmp
nop
daa
dec
fdivs
fisubl
xchg
subb
xor
inc
lea
and
push
push
in
ret
in
insb
add
mov
les
push
xchg
aaa
dec
pop
inc
lods
lahf
and
ljmp
ret
mov
xchg
ret
test
rcrl
pop
mov
push
fisttpll
imul
lea
mov
mov
jmp
into
mov
cmc
sub
push
into
sbb
add
add
adc
add
xchg
js
lods
lods
add
xor
mov
and
pop
adc
sti
stos
mov
mov
xchg
xor
shll
jne
out
popf
icebp
fwait
int3
fildl
test
jbe
mov
in
je
jnp
xchg
push
aas
xchg
jbe
mov
sbb
xchg
lret
push
sub
xor
adc
sbb
pop
jne
movsb
in
mov
inc
aaa
cmp
xchg
mov
pop
or
jmp
mov
xchg
pop
movsb
xchg
testb
jmp
pop
pop
hlt
push
cmp
ret
xchg
mov
jno
push
dec
scas
loop
add
aad
rclb
dec
cmp
neg
push
dec
mov
mov
and
xchg
jp
test
clc
dec
sbb
mov
sub
test
cmc
in
inc
mov
push
in
pop
lock
sbb
nop
cmpsl
xchg
sub
inc
sarb
sar
sub
in
xchg
push
cwtl
xor
das
sbb
popf
fsubrl
pop
mov
add
pop
mov
jne
test
mov
cmp
inc
and
cltd
daa
arpl
xlat
mov
fxch
sub
mull
fildll
ljmp
or
std
mov
pop
cmp
leave
mov
sub
adc
jecxz
mov
popa
push
sbbb
sbb
sbb
xor
push
sbb
mov
mov
jnp
sahf
pop
data16
out
cmpsl
gs
mov
push
mov
mov
sub
fcmovnb
test
dec
mov
iret
std
or
repnz
lods
aas
lret
fcoml
cmp
mov
pop
mov
adc
jecxz
xchg
sub
es
sti
imul
lds
mov
insb
mov
push
out
pop
into
lds
fidivrs
mov
pusha
jnp
jp
icebp
inc
pop
add
imul
mov
jmp
mov
test
add
je
sub
sbb
add
aas
pop
pop
cld
fmull
out
call
cld
scas
push
sbb
lret
orb
gs
inc
cmp
cmpsl
fisttpl
popa
lods
mov
mov
sub
adc
pop
sbb
mov
xchg
cltd
cmp
adcb
sahf
dec
push
dec
out
icebp
imul
jbe
jecxz
xchg
fistps
inc
cmp
pop
test
ret
ds
and
mov
mov
aad
or
xor
cwtl
adc
test
in
xor
call
daa
addr16
clc
or
sub
jl
icebp
js
mov
das
inc
out
scas
lret
dec
or
fisubs
js
ljmp
daa
iret
pop
lods
sbb
mov
sti
ja
mov
cmc
or
mov
cmp
test
pop
pop
das
push
mov
sub
adc
ror
mov
jnp
cmpsl
in
or
sti
sbb
xchg
fucomi
cmpb
sahf
dec
movsl
push
or
adc
jle
adc
mov
ss
add
aas
jge
fcmovu
call
mov
sbbb
push
mov
xor
pop
push
ret
orb
lods
fimull
enter
mov
or
xor
outsb
insl
sub
xor
lods
ret
or
sub
popa
jl
imul
mov
out
aad
dec
roll
rcrb
dec
out
int
push
outsb
inc
adc
cmpsb
jo
pusha
repz
push
scas
lret
pop
jne
punpckhdq
cwtl
jge
out
mov
cmpsl
ss
iret
sub
jl
daa
push
aas
stos
mov
pop
sub
push
lods
cmpsl
mov
incb
mov
test
mov
xchg
xchg
xchg
loopne
aaa
jle
jbe
mov
mov
dec
fbld
inc
add
push
and
ret
sti
faddl
xchg
cmp
xchg
sbb
fisttpl
leave
imul
jmp
icebp
adc
repz
cmp
rep
mov
add
adc
add
xchg
pop
lret
mov
jo
outsl
push
cmp
pushf
sbb
cmc
subb
push
mov
push
inc
test
ror
mov
call
xor
jmp
subb
clc
push
mov
jmp
orl
cmp
xchg
outsl
push
enter
mov
enter
cmpsb
in
adc
mov
add
outsl
jp
push
cld
mov
sbb
jg
rcll
push
test
stos
and
call
scas
fstpl
in
stos
add
cmp
cmpl
inc
add
jno
outsl
mov
jg
xor
and
adc
xor
mov
insb
mov
pop
push
and
sub
sbb
in
mov
xchg
adc
ret
je
dec
ljmp
movb
jo
push
mov
adc
stos
fwait
out
call
push
repz
xor
sbb
inc
jae
push
mov
sbb
mov
inc
push
pop
aam
or
dec
test
xor
sub
mov
jecxz
mov
cmpl
loopne
mov
mov
mov
add
push
imul
mov
cltd
adc
loope
popa
in
sbb
stos
into
inc
fsubrl
loope
aam
mov
add
cld
push
xor
lods
pop
sahf
mov
out
adc
stc
idivb
xor
add
push
jecxz
mov
jl
sbbb
std
push
xchg
inc
and
push
adc
add
xor
pushf
pop
mov
cmpb
adcb
or
iret
xchg
xchg
sbb
and
rorb
or
scas
mov
push
ret
adc
inc
mov
lret
add
add
jnp
adc
mov
jg
jb
outsb
mov
lret
push
inc
xchg
add
adc
add
test
jmp
xor
adc
xor
int
dec
sbbb
std
xchg
mov
jmp
fs
push
xchg
push
test
cmp
in
int
mov
push
test
pop
cmp
lret
adc
pop
jp
mov
sbb
cmc
push
jno
adc
mov
out
ja
decb
and
add
dec
cmp
pop
js
jp
xchg
cmp
gs
mov
dec
aaa
ficoml
cli
push
adcb
dec
jmp
cmp
pushf
or
xor
pop
out
push
cmp
insb
outsb
push
push
inc
daa
daa
sahf
or
add
cmp
je
jae
pusha
repnz
sub
jbe
and
jl
push
jae
lea
sub
testb
and
sub
jg
jmp
je
sbb
outsl
orl
sbb
dec
xchg
mov
mov
inc
fdivl
mov
lods
inc
mov
ret
lds
out
test
lahf
dec
pop
in
dec
sbb
aad
inc
or
aaa
imul
add
insl
movsl
out
scas
mov
or
xchg
inc
mov
insb
mov
and
in
leave
inc
mov
xchg
mov
xchg
cmc
shlb
fs
pop
lds
repnz
sbb
xchg
jne
inc
inc
cmp
xor
add
lds
test
leave
mov
mov
push
mov
push
push
push
mov
loopne
mov
iret
pop
test
push
insb
mov
shlb
lea
test
cld
cmc
pop
fiadds
mov
xchg
dec
sub
out
lds
ds
lea
popa
fisubrl
pop
adc
dec
xlat
out
ret
mov
add
sti
jmp
xor
repz
add
push
xchg
add
adc
add
test
fcomip
dec
mov
popl
mov
jecxz
lcall
aas
lret
test
push
popf
push
pop
int3
push
rcrl
jne
xchg
insb
push
sub
sub
shrb
sarb
and
jl
pop
mov
lods
in
pop
push
clc
faddl
shlb
mov
addl
mov
add
cmp
push
stc
push
xchg
sahf
cli
insb
stos
data16
repz
jmp
lea
sbb
repnz
push
fiaddl
dec
xadd
ss
clc
pushf
mov
xor
cmp
sub
pop
adc
pop
cli
cmp
push
cmp
jno
push
lahf
repz
test
inc
rol
mov
add
fistpl
jmp
das
fmuls
pushf
imul
inc
add
dec
stc
xchg
loope
jno
lret
aaa
mov
andl
pop
icebp
mov
js
call
jg
mov
sti
ret
cmpsl
aad
xor
sbb
jae
dec
xchg
imul
adc
out
dec
shrl
fwait
cmp
xor
jbe
fcomp
lock
and
repz
cmp
pop
and
inc
cltd
or
inc
ljmp
arpl
jns
enter
mov
cmp
test
pop
lret
cwtl
enter
ficoms
push
imul
mov
std
push
mov
add
jg
lcall
jb
push
push
xorb
fnstenv
xor
xchg
cmp
mov
fistpll
add
sbb
mov
mov
mov
jecxz
mov
cmp
push
sarl
cmpsl
out
cli
inc
daa
dec
cmpsb
cmp
lcall
inc
jbe
jg
pop
cli
out
test
dec
push
jp
dec
jl
vpunpckhwd
dec
dec
mov
xchg
add
or
add
add
repz
aas
sti
mov
clc
sub
xchg
add
adc
add
inc
mov
shll
xlat
inc
inc
in
inc
jne
inc
mov
mov
push
jo
imul
pop
pop
repz
jo
xchg
aam
cmpsb
adc
aas
rorb
leave
idivb
packsswb
cmp
mov
es
inc
dec
leave
mov
test
xchg
xor
hlt
xor
popf
add
inc
inc
or
popf
cmp
lahf
sbb
mov
and
and
jns
test
imull
mov
dec
add
sbb
push
mov
or
dec
and
leave
and
cmpsb
add
dec
or
rorb
mov
dec
push
sahf
fwait
mov
imul
inc
mov
test
push
out
pushl
lods
fcom
add
nop
clc
xchg
xor
pop
notl
inc
mov
push
repnz
mov
int3
cs
xchg
js
sbb
test
mov
cmpsl
and
jo
fiaddl
mov
cmp
or
adc
fadds
sbb
xor
lods
xchg
add
jns
cltd
insl
or
xchg
jp,pt
push
cmp
lock
jno
les
xlat
add
fisttpll
ret
mov
outsb
sbb
pop
jmp
jge
testl
add
and
push
add
loop
jge
xlat
cmp
fstl
xchg
xor
sub
aam
in
js
fisttpl
adc
insb
mov
cs
je
mov
inc
sahf
inc
test
xor
pop
inc
cs
cmc
sub
neg
sub
xor
popa
inc
mov
enter
sbb
imul
and
or
adc
insb
inc
xchg
mov
loopne
outsb
aaa
push
shll
popa
lahf
inc
aaa
sub
jae
inc
xchg
lods
nop
lock
jne
int3
aaa
adc
mov
pop
mov
sti
in
outsl
adc
cwtl
push
jp
sub
adc
xchg
pop
out
in
lock
push
mov
mov
mov
jmp
stc
fmul
fsubrp
stc
pushl
cmp
push
fs
jl
add
adc
add
mov
mov
cmp
mov
cmp
imul
pop
pop
xchg
addr16
push
fsubl
dec
adc
xor
xor
aad
or
js
sbb
loopne
lea
stc
stos
sarl
loopne
xor
ljmp
sub
mov
jle
jl
mov
and
jne
xchg
rol
adcl
xor
clc
or
pusha
in
insl
dec
xchg
or
adc
cmpl
cwtl
andl
sysret
sahf
outsl
stc
jge
xlat
outsb
inc
stos
inc
push
je
or
aas
jno
inc
hlt
dec
pusha
sbb
je
add
bound
movsl
arpl
cs
dec
adcb
dec
je
jge
add
in
loope
xchg
cld
jbe
xchg
sbb
push
cmpsl
sbb
outsl
mov
rdpmc
cmp
pop
push
divl
xor
push
fs
push
aas
rcl
jae
mov
push
inc
bound
outsl
mov
jne
scas
outsl
pop
lcall
pusha
mov
aaa
insl
aad
setg
lcall
arpl
hlt
fdivrs
fs
hlt
cld
cli
scas
jno
xchg
shll
add
jle
scas
fcompl
mov
or
roll
out
mov
xchg
push
roll
int
cmp
les
rorb
iret
sarl
movb
outsb
loope
in
test
push
xchg
mov
pop
fists
iret
push
jae
call
aad
sub
xchg
test
hlt
pop
test
add
lock
mov
pop
add
add
mov
mov
cltd
ret
inc
push
stc
mov
fiadds
stos
push
subb
sub
xor
mov
dec
mov
add
sarl
scas
subl
and
and
xor
xor
or
mov
jmp
dec
and
push
jge
pop
fstpl
mov
add
add
cmc
popa
rol
cld
negb
xlat
fs
imul
into
pop
inc
cmp
and
push
sti
loopne
mov
rcl
adc
xor
push
dec
cwtl
jle
imul
xor
mov
sub
repnz
cmp
lahf
dec
out
lcall
mov
and
xchg
sub
mov
ss
mov
out
inc
lret
lcall
dec
inc
xlat
add
dec
or
pop
xchg
fimull
lahf
bound
xlat
push
inc
cmp
enter
jae
std
pop
and
pop
ljmp
roll
push
cltd
pop
insb
jg
adcl
or
cltd
mov
js
sbb
xchg
lods
or
pop
sub
popa
mov
loopne
jle
cmp
jnp
jecxz
iret
mov
loope,pn
aaa
jmp
lock
jge
fsubrs
jnp
aas
xchg
loopne
sub
bswap
and
test
test
sub
pop
jecxz
xor
mov
pop
adc
jmp
into
dec
cltd
incb
stos
call
xor
repnz
andl
xchg
lret
and
das
sub
adc
dec
jae
mov
ds
and
adc
mov
xor
sbb
cli
push
dec
and
push
mov
jp
jmp
hlt
shlb
adc
mov
inc
sub
dec
jnp
push
mov
adc
jb
adc
push
or
into
clc
or
incb
cs
gs
mov
mov
xchg
sub
mov
lret
fadd
mov
jmp
stos
dec
adc
movsb
cli
pop
inc
mov
and
pop
push
xor
js
fildl
cmp
sarl
rol
outsl
xchg
cltd
iret
push
movsl
mov
sub
inc
imul
and
or
add
jmp
pop
scas
pop
mov
call
mov
lea
add
adc
add
popa
jmp
inc
adc
sub
jp
sbb
xchg
into
push
xorl
insl
lahf
sbb
lods
pop
es
subb
jo
movsl
mov
or
mov
test
lds
popf
jmp
test
jne
and
mov
mov
popf
pop
add
and
cltd
adc
push
aam
shll
xor
add
add
or
js
cmp
inc
aaa
flds
pushf
push
mov
lods
es
and
mov
cmpsb
push
or
addr16
and
imul
jne
fs
mov
arpl
cmp
lods
fs
fcoms
xor
push
dec
and
cmp
outsb
xchg
inc
add
sub
xchg
aaa
add
lds
sti
add
fwait
lcall
lock
and
imul
push
add
lea
out
or
sbb
loope
in
push
cmp
outsl
sbb
mov
cs
xchg
repnz
test
arpl
adc
and
js
std
popf
inc
repnz
outsl
jnp
mov
jle
push
inc
cwtl
cmp
sbb
jo
push
inc
ds
mov
je
push
push
int
dec
imul
fisttpl
dec
mov
add
xor
xchg
inc
xor
shlb
push
fcomp
pop
fildl
leave
xor
or
xchg
push
push
jne
cmp
mov
loop
xchg
jno
jmp
data16
inc
xor
sti
iret
jl
pop
xor
xchg
stos
xchg
inc
cwtl
push
ja
jo
jle
or
xchg
adc
mov
fisubs
mov
cltd
fisubrs
icebp
outsl
push
mov
test
push
in
aaa
js
push
mov
test
xchg
push
sub
test
pop
imul
lea
sbbb
sub
add
popf
add
fbld
mov
mov
add
add
mov
repz
xor
test
adc
dec
sahf
cmp
flds
jmp
enter
repz
aas
out
out
lahf
jmp
fnstsw
cwtl
xchg
push
aad
pop
mov
xchg
pop
fnstenv
out
mov
cltd
mov
cmpsl
xor
cmp
sub
cmc
or
data16
mov
add
add
sti
dec
shll
xchg
and
sti
adc
mov
mov
sub
pop
cltd
aaa
pop
cld
pop
mov
gs
nop
sub
inc
repnz
xchg
clc
cmp
lcall
leave
outsl
push
or
sbb
into
int3
sbbb
cmp
aam
jno
mov
add
xor
outsl
sub
loop
xor
movsb
insb
xor
paddusw
inc
faddp
insl
fnsave
fs
inc
pop
adc
adc
imul
cmpl
mov
xor
aad
or
rol
ret
sbb
adc
stos
incl
mov
fistpll
jns
adc
push
insb
adc
pop
iret
cmpsl
das
rol
xor
lds
scas
push
sbb
jge
roll
sub
and
dec
xorb
aad
and
inc
pop
pop
fsubl
mov
cld
movsl
shl
shlb
push
out
or
jnp
lds
adc
mov
mov
cmpsb
or
mov
out
stc
out
test
loopne,pn
xchg
and
fs
xor
mov
ss
mov
push
mov
loop
dec
ret
mov
mov
jns
fwait
cmpsb
mov
pop
sub
and
gs
push
test
pop
fdivs
xchg
or
jg
cmp
cltd
loop
push
ljmp
mov
cmc
xor
mov
xchg
adcl
cmp
jne
cmp
jne
mov
or
shr
push
xor
pop
div
mov
sub
jmp
rol
mov
mov
fucomip
xchg
dec
loopne
sub
and
int3
mov
add
and
dec
mov
out
ret
lods
leave
jge
cmp
or
mov
sub
fldt
test
pop
popa
sbb
mov
roll
inc
fistl
dec
pop
pushf
std
mov
stc
daa
je
ja
push
cmp
in
xlat
fsts
loopne
fld
mov
movsl
popa
scas
pop
xchg
lret
mov
or
cmpsb
jmp
or
sub
xchg
push
lret
js
cmpsl
adc
cmc
mov
addl
cmpsl
test
mov
mov
popf
pusha
xor
push
les
daa
xor
push
stos
mov
mov
ja
adc
push
push
imul
test
arpl
cmp
leave
or
leave
mov
imul
mov
dec
xchg
adcl
stc
pop
mov
inc
aas
inc
sub
icebp
aas
and
xor
lahf
cmpl
and
push
clc
sahf
or
inc
add
std
popf
inc
inc
aam
repz
ljmp
or
std
mov
leave
jmp
cmp
test
xor
mov
test
testb
aas
xchg
loopne
data16
loop
fwait
xor
loopne
jge
das
jb
arpl
negb
aas
mov
je
out
push
mov
sbb
sbb
ret
gs
inc
xchg
pop
xor
sbb
xchg
xor
dec
sub
bnd
enter
sbb
adc
imul
cmp
lahf
sub
push
ficoml
in
lock
xor
pop
or
cs
cmp
andb
into
test
mov
mov
push
fdivl
outsb
in
ja
ret
pop
pop
push
inc
in
mull
fxam
rolb
xchg
fsubrs
inc
xchg
aaa
enter
and
pop
sub
dec
rolb
mov
adc
in
add
xor
add
mov
jmp
mov
pusha
jno
inc
aad
shrl
add
adc
add
jg
loope
pop
xchg
mov
ss
stos
adc
mov
cld
jbe
outsl
inc
ljmp
pusha
mov
data16
daa
jno
pop
lret
sub
mov
sbb
push
movsl
dec
mov
pop
nop
push
xchg
push
loope
cld
les
cmp
inc
xchg
into
adc
sub
in
aaa
jmp
jno
xchg
loope
popf
add
iret
pop
push
gs
mov
sbb
ret
insl
and
bound
mov
bnd
in
push
shl
cmpsl
cmc
cmp
fs
dec
cmp
loope
lock
mov
jb
gs
out
sub
pop
jmp
das
and
cmpsl
inc
ss
adc
mov
mov
dec
jmp
mov
jge
push
add
sub
dec
mov
call
add
push
je
dec
in
mov
popf
inc
inc
cmc
mov
xchg
sub
mulb
or
push
jbe
add
dec
xor
push
pop
mov
jno
pop
push
stos
dec
das
sti
mov
sbb
sbb
sahf
nop
aas
add
loopne
lods
ja
outsb
cmp
sbb
iret
lret
sub
mov
adc
ljmp
setno
sbb
and
dec
mov
loope
inc
push
or
sub
pop
cmpl
xor
and
cmp
loope
repz
movsb
sub
stos
ja
lock
fnstsw
out
sarl
out
shll
movsb
adcl
rcll
mov
clc
ror
inc
add
mov
and
ljmp
lock
vmovlps
dec
push
ror
out
icebp
cmp
pop
cmp
icebp
jns
mov
cmp
sahf
mov
or
jbe
iret
pop
and
ret
xchg
pop
adcl
popa
and
xor
jecxz
test
imul
lcall
add
ret
add
or
push
pop
pop
inc
cltd
dec
push
xchg
add
sub
outsb
xchg
cmp
mov
jg
or
std
fisttps
fcoml
shrl
adc
inc
sbb
and
aaa
xchg
and
and
mov
sub
mov
cmp
push
add
push
pop
and
cmp
mov
jo
clc
pop
push
xchg
dec
lods
sub
mov
pop
sbb
stos
bound
mov
xor
int
sub
roll
lods
cmp
imul
push
jne
lods
je,pn
mov
test
imul
sub
mov
cltd
testl
pop
push
mov
lret
dec
mov
out
aad
rcrl
xor
hlt
je
mov
enter
and
loope
or
ds
data16
out
jp
fcomps
push
sbb
push
es
jae
pop
popa
pop
add
and
xchg
rcr
repz
inc
jmp
imulb
and
mov
mov
inc
mov
xchg
xor
jle
push
xor
push
pop
xlat
lea
bound
and
movsl
lahf
push
jge
cmp
jne
data16
pop
xchg
hlt
push
cmp
ss
frstor
daa
rcr
xlat
ss
xor
cmp
stos
jp
mov
cmp
adc
in
jge
jmp
mov
daa
das
mov
mov
jb
cmp
jmp
fnstenv
sahf
dec
xlat
sub
loop
sub
rcll
les
and
rclb
push
sbb
adc
cli
cmpsl
inc
ds
pop
xchg
adc
test
jb
sbb
aam
leave
out
pop
test
mov
xchg
xabort
add
or
loope
mov
mov
push
xchg
in
fwait
pop
sbb
and
mov
mov
and
out
or
imul
jmp
add
test
adc
mov
xchg
jb
or
xor
sbb
mov
sbb
adc
frstor
push
and
xchg
pop
push
xchg
mov
loopne
push
data16
out
dec
mov
mov
subb
push
add
icebp
movsl
daa
pop
mov
test
inc
mov
leave
scas
xlat
mov
xor
inc
jp
lods
cltd
sbb
xchg
add
jl
imul
mov
repz
or
fwait
out
xchg
jns
lcall
fadds
scas
outsl
out
mov
int
pop
jae
into
out
push
leave
fwait
test
jnp
jp
fcmovnb
pop
adc
mov
sub
test
int3
scas
outsb
mov
pusha
add
out
inc
fcmovbe
sub
inc
jecxz
rol
and
aas
sub
xor
and
inc
out
and
jno
dec
push
ds
add
ret
or
mov
or
mov
bound
aad
mov
pusha
cltd
xchg
dec
mov
es
cwtl
fildll
ret
adc
inc
mov
push
xor
sub
mov
xchg
dec
mov
cmp
jnp
add
jbe
rolb
fsubrs
loope
push
int3
outsl
push
insl
fcmovne
orb
fildll
add
icebp
test
cli
xchg
into
fnstcw
pop
jl
cmpsb
sbb
sbb
mov
xchg
inc
repz
imul
dec
ja
outsb
mov
adc
sahf
xor
hlt
fsts
xor
pop
jno
push
daa
add
ror
cmpb
fnstcw
xor
pop
fmul
cltd
and
jp
or
mov
loope
bound
sub
cltd
cs
xor
cld
push
and
sarl
jnp
pop
dec
in
orb
jnp
imul
in
aaa
in
arpl
xchg
in
mov
cmp
mov
daa
fwait
or
cmp
insb
xor
or
jne
pop
xchg
popa
xchg
adc
out
xchg
mov
mov
xchg
pop
cmp
xchg
push
mov
pushf
jg
enter
nop
adc
sub
leave
pop
enter
jns
xchg
sub
adc
mov
pushf
mov
dec
cltd
std
push
and
aaa
add
add
xchg
mov
cli
lcall
push
ja
jo
fwait
test
jmp
jg
lea
cmp
movsl
int
mov
push
or
push
shlb
mov
push
and
fs
jae,pn
pop
mov
dec
jne
jg
push
nop
pop
cmp
pushf
inc
adc
pop
sbb
cmp
mov
adc
push
sub
push
fs
lds
std
test
pop
enter
mov
cli
shrl
pcmpgtw
add
icebp
out
mov
scas
sbb
sub
sub
push
ljmp
cmpsl
sub
jmp
scas
and
ds
and
add
incl
lahf
pushf
sub
or
dec
jecxz
fdivs
mov
mov
into
xchg
xchg
pop
mov
fisubrl
adc
out
xchg
bound
xlat
mov
outsl
std
mov
stos
jne
in
stos
pop
jmp
inc
mov
pop
pop
pop
lea
pusha
dec
hlt
jns
sbb
mov
push
push
mov
jge
jne
pop
leave
fdivrs
cli
out
out
imul
adc
mov
jmp
adcl
jne
mov
and
leave
xor
push
push
repz
add
dec
or
test
add
push
sbb
roll
cmpsl
pop
dec
pop
mov
loop
scas
ficoml
cmc
inc
sub
cs
aad
mov
adc
and
mov
aas
xor
mov
inc
and
loope
iret
xorl
repnz
pop
jp
test
xchg
dec
cmpb
push
jne
mov
lcall
fcoms
aas
mov
scas
inc
fcmovbe
das
ss
pop
test
sub
inc
inc
push
mov
pushf
loopne
dec
call
stos
mov
loop
mov
mov
pop
cld
leave
test
and
jns
ja
adc
nop
iret
adc
sbb
ss
clc
mov
je
clc
popf
fstpt
insl
mov
mov
cli
clc
stc
pop
das
jg
pop
rolb
xchg
sarb
ja
test
hlt
mov
inc
ret
inc
aas
jle
addr16
pop
popf
fmuls
adc
and
shlb
cmpsl
sub
sbb
popa
and
and
bound
shrb
dec
imul
out
test
fists
lret
lret
xor
mov
cwtl
les
push
negl
dec
out
fists
mov
aad
pop
mov
xor
enter
dec
cmp
addb
adc
or
cmp
sbbl
scas
enter
adc
mov
cmpl
xchg
xchg
mov
jno
cmp
jae
and
pusha
int3
add
xchg
mov
scas
aad
mov
or
andl
or
fwait
pusha
aad
xor
cli
enter
jecxz
arpl
or
dec
fst
jns
es
xor
pop
icebp
jns
mov
dec
mov
enter
lahf
call
leave
or
pop
dec
stc
into
call
mov
pop
mov
inc
idiv
push
dec
sbb
loope
mov
in
clc
pop
sub
mov
add
add
jo
jbe
mov
inc
filds
arpl
aaa
int
sbb
cmpsl
loop
in
cld
mov
xchg
fidivl
cs
sub
hlt
mov
xor
hlt
out
cmp
inc
das
xor
movsl
icebp
popa
cmp
fs
sti
push
lods
ds
daa
mov
loope
imul
fwait
ss
mov
lock
mov
or
mov
cltd
mov
xchg
clc
pop
add
mov
pop
mov
mov
push
mov
jno
adc
sbb
push
insb
mov
push
pop
xor
or
xchg
mov
mov
add
gs
test
loopne
in
stos
std
jl
xor
ret
sbb
inc
orb
mov
test
stc
lods
arpl
iret
inc
jnp
sub
das
adc
icebp
push
fwait
lods
out
dec
fadds
lret
test
jmp
push
shlb
daa
stos
xchg
mov
sub
clc
and
leave
adc
filds
js
mov
sbb
addr16
scas
push
test
dec
iret
mov
aaa
je
pop
decb
push
lret
pusha
xorb
inc
sub
lret
cld
pop
xor
ljmp
inc
mov
or
js
outsb
popf
sub
push
fistps
adc
loopne
outsb
test
mov
test
icebp
ds
cmp
gs
inc
pop
out
divl
lock
xor
push
dec
add
mov
inc
sub
fdivrp
and
add
stc
mov
shl
arpl
and
sub
inc
jbe
xchg
mov
push
push
cli
mov
cmc
out
stos
stos
ss
popf
je
aam
mov
int
xor
and
jl
mov
loopne
push
lds
push
mov
nop
jno
out
inc
sar
pop
mov
pop
jle
push
ljmp
nop
clc
gs
adcl
cmp
push
imul
mov
aaa
dec
and
pusha
cmpsl
inc
adc
or
inc
xlat
stos
inc
and
cmp
adc
test
mov
inc
mov
daa
mov
or
lahf
xlat
enter
add
jbe
mov
and
sub
loopne
addr16
mov
ss
xchg
shrl
popf
cmp
add
cmpsl
mov
mov
dec
dec
adc
xchg
xor
add
pop
outsl
xchg
mov
sbb
xchg
xchg
pop
mov
inc
data16
inc
jmp
aad
in
cmc
lret
scas
push
decb
or
pop
push
loop
jmp
xchg
les
sub
lock
adc
and
jl
ja
insb
xor
sub
je
in
stos
jnp
sub
mov
mov
add
out
out
cwtl
icebp
push
add
lret
xchg
and
lods
or
std
lcall
pop
mov
add
cmp
push
add
jns
cmp
sbb
jge
jns
xchg
test
jmp
sbb
into
pop
mov
xchg
jb
fdivl
xchg
xor
imul
add
loopne
push
mov
adcb
stc
arpl
ss
ret
cmpsl
ret
jmp
push
in
mov
fstps
lahf
out
and
std
mov
cmp
cltd
loopne
sbb
xchg
xor
scas
aad
mov
test
jb
mov
pop
push
xchg
mov
ljmp
pop
pop
jg
mov
aam
insl
cmp
xor
fucomip
inc
mov
or
lret
repz
xchg
jecxz
insb
xchg
pop
je
xor
mov
stc
jle
rolb
jns
dec
push
pop
inc
cmp
sbb
lret
fnstenv
xchg
leave
jnp
js
repz
rorl
sbb
jmp
mov
adc
xor
and
stos
pop
push
stos
mov
std
mov
push
mov
add
iret
sub
mov
out
jmp
pop
mov
pop
sub
cmpsl
or
jns
jge
clc
cld
subl
test
std
in
inc
lret
inc
xchg
jmp
stos
adc
xlat
jne
sub
push
and
inc
add
iret
in
jmp
sbb
and
ss
test
and
jl
inc
push
add
add
pop
ss
xchg
push
jle
enter
jno
lock
sbb
enter
inc
or
or
faddl
mov
jo
push
idivb
xor
inc
in
mov
lock
sub
adc
insb
knotw
pop
push
repz
in
xor
fucom
ficompl
mov
in
xchg
cli
out
test
dec
movsb
fimull
jbe
dec
cld
scas
or
ret
jb
imul
or
outsb
stc
repnz
and
cwtl
jns
dec
divb
lea
iret
add
movsl
ja
mov
hlt
xchg
mulb
int3
sub
adcl
fs
lock
sub
mov
xor
addr16
sbb
or
sbb
lcall
jmp
sbb
sub
popf
sub
daa
scas
adcl
jmp
cmp
sub
out
std
filds
or
out
ja
js
movsl
add
add
jge
leave
cli
add
xchg
push
xor
aam
js
xchg
idivl
imul
hlt
arpl
out
orb
stos
ds
mov
test
nop
adc
iret
xor
and
dec
int
cmp
pop
outsl
iret
xor
fnsave
inc
inc
push
push
hlt
mov
fists
daa
cld
leave
cmpsb
mov
sub
adc
sarb
jmp
out
push
push
push
enter
icebp
cmp
add
cwtl
js
in
dec
cs
add
aam
or
arpl
call
cli
in
sahf
mov
push
ljmp
test
mov
sub
inc
ja
xchg
push
push
inc
push
ret
jns
call
xchg
mov
pop
mov
pop
lock
nop
pop
jnp
xorb
fwait
sub
dec
popa
pusha
scas
nop
call
and
lahf
cmp
pop
push
inc
sahf
cmp
fbstp
repnz
mov
std
ret
push
pushf
jnp
ficoms
lea
cmp
pop
repz
push
rorb
loop
mov
or
imul
sbb
frstor
aad
mov
mov
add
jbe
shlb
incl
iret
movsl
movsl
pop
jmp
fmull
xor
xchg
loope
push
and
cmp
jmp
aas
add
movsl
aaa
mov
in
fcoms
cld
es
sub
adc
cli
fs
xchg
mov
out
rolb
aad
xor
fnstcw
mov
push
fs
or
and
mov
inc
jne
or
arpl
push
out
fcmovbe
sub
cmpsl
push
imul
or
and
nop
xor
inc
xchg
mov
std
jns
test
arpl
ds
push
mov
pusha
adc
scas
orl
aam
xchg
lret
mov
andl
mov
sbbl
or
movzbl
jmp
test
test
xchg
clc
rcll
in
stc
cmpsl
add
add
mov
xor
pop
jle
testb
mov
ds
dec
mov
aad
xor
je
aaa
push
mov
and
push
cmp
xchg
push
jo
and
add
incb
aaa
xchg
mov
leave
pop
aam
pop
aam
imulb
out
fsubrl
push
out
inc
movsl
leave
or
jecxz
push
cmp
or
test
adc
fs
dec
adc
sarb
ss
gs
repz
das
imul
sbb
in
xchg
xchg
shlb
stos
mov
rorb
or
nop
sbb
insl
sbb
sub
call
mov
fiaddl
lea
inc
mov
lahf
out
pop
and
enter
testb
fwait
sub
push
and
or
xorb
pop
pop
int
test
dec
adc
call
cmpsb
cmc
add
ficomps
loope
movsb
ljmp
and
loop
push
jne
fistpl
fnstenv
aaa
cli
or
push
sti
add
insb
les
pop
ds
test
insl
xor
clc
adc
xor
mov
ror
push
aam
push
bound
out
dec
fs
or
or
and
add
fwait
dec
rol
sbb
adc
mov
adc
les
push
cmp
inc
add
icebp
das
xor
mov
push
cmp
ret
mov
adc
push
in
pop
fmul
xchg
mov
xlat
or
jle
outsb
std
aaa
mov
add
stos
movd
pop
pop
mov
stos
test
push
dec
mov
addr16
xlat
inc
push
pop
inc
mov
mov
inc
rcrb
mov
ja
mov
mov
icebp
femms
and
xorl
fs
stc
sbb
bound
negb
or
rcl
inc
or
shrb
loopne
rcrb
mov
jne
cmpl
jb
inc
jmp
push
call
jmp
mov
out
mov
mov
test
add
repz
add
out
dec
cmc
mov
mov
nop
push
sarb
test
filds
out
ja
xlat
push
test
or
pop
cs
lock
jg
fnstcw
lods
cmpsl
ds
jne
mov
push
cmp
cmp
lds
rcrl
lods
cld
jbe
mov
and
fildl
cmp
movsb
add
push
push
mov
leave
push
bound
dec
cmpb
jae
xchg
push
mov
mov
mov
and
out
mov
mov
xchg
call
stos
test
aas
sbbb
aas
dec
lahf
cmc
push
sub
jns
lret
and
xor
dec
jae
jnp
mov
jno
xchg
addr16
push
imul
fs
push
lods
out
or
mov
push
pop
xor
psllw
ss
inc
adc
cmc
cmp
lcall
mov
mov
addr16
stc
int3
rcr
lret
jmp
aad
push
das
pusha
jg
jmp
jp
shl
xchg
add
cmp
cltd
aaa
cmp
adc
jne
rcll
lods
adcl
mov
inc
mov
aam
rcrl
xchg
mov
mov
add
xchg
insl
js
or
jb
pop
dec
jmp
or
push
sbbl
or
call
adc
call
jmp
jge
xchg
xor
or
gs
sahf
call
ret
lcall
push
fsubrp
adc
jecxz
xor
mov
mov
cli
xor
mov
inc
jns
sbb
push
rorl
test
adcb
or
push
les
push
pop
mov
ss
mov
jmp
ret
sbb
rcrl
fs
xchg
fsubrl
add
add
subl
test
mov
jge
enter
mov
testb
subl
ret
psubq
sub
nop
sub
data16
leave
pop
sub
push
jg
mov
imul
leave
sub
out
jne
in
and
cli
and
xor
xor
sti
rorb
mov
js
lods
aad
lcall
rclb
add
gs
mov
mov
or
mov
xor
add
aam
rcrb
and
mov
ret
mov
sub
lret
arpl
mov
dec
out
mov
aas
int
cmpsl
pop
mov
lahf
dec
out
jbe
call
mov
xor
xchg
subl
aaa
inc
cmc
sbb
decl
ljmp
add
stos
pop
rcll
mov
call
aaa
cmp
dec
mov
lock
clc
xor
in
aaa
or
sbb
mov
inc
push
pop
cmp
repz
test
mov
stos
sub
cmpsl
inc
in
mov
push
test
cmp
fldt
xchg
aad
xlat
add
cld
loopne
push
sbb
insb
sub
and
sub
mov
sbbl
cmpsl
aad
inc
es
jecxz
fld
fidivrl
jg
aam
adc
sbb
fbld
dec
jp
cmc
aaa
iret
push
sbb
dec
xor
mov
sub
mov
lods
fnstenv
bnd
aam
mov
xor
test
cmp
ss
enter
mov
cmp
dec
cmp
mov
data16
pop
imul
lahf
shrb
cmpsb
or
repnz
ret
xorl
outsb
shl
cmpsb
mul
ret
push
mul
jmp
int3
or
dec
and
pop
jle
mov
scas
add
add
hlt
daa
dec
mov
shrl
es
sbb
mov
aas
popa
push
mov
mov
sub
xchg
lret
jb
xchg
xchg
nop
movsb
daa
push
into
scas
sub
lods
add
jp
stc
cmp
ja
pop
push
shll
sub
xchg
xor
iret
repz
lret
xorl
stos
and
fidivl
push
pop
fcompl
cmp
cmpsb
xor
movsb
dec
adc
int3
sbb
das
sub
std
mov
xor
out
adc
and
imul
dec
pop
sti
ds
shrl
lret
popa
and
ljmp
scas
pop
mov
ds
iret
and
lods
sbb
rol
ss
adc
xchg
or
sub
cltd
or
pusha
fistpl
sub
jge
outsl
shrb
jns
mov
lret
in
sbb
lods
mov
js
xlat
mov
push
aad
mov
jecxz
xchg
and
dec
adcl
lock
fdivrs
cmp
divl
das
mov
enter
nop
data16
das
lret
push
mov
cmp
cltd
outsl
cmp
sub
xor
jno
scas
mov
jl
inc
shll
adc
out
shlb
hlt
sub
stc
subl
lahf
dec
lods
or
push
jb
fiadds
test
loopne
into
inc
test
fldt
and
int3
mov
and
xchg
or
inc
jl
xchg
aam
mov
fimuls
aaa
mov
pop
pop
cli
inc
mov
arpl
dec
dec
and
jmp
xor
mov
and
js
fisttps
pop
push
cmpsb
jle,pn
xchg
inc
push
add
repnz
xchg
bound
inc
xchg
push
ss
mov
mull
add
mov
mul
add
pop
ret
or
push
lock
stos
jae
push
rolb
lret
cmp
add
scas
push
mov
jae
aad
and
imul
cmpsl
or
pop
mov
aam
jne
dec
cmp
dec
out
cmp
xor
mov
in
or
push
or
sbb
jmp
and
inc
inc
int3
out
stos
dec
mov
pop
adc
push
pushfw
repz
xorb
mov
adc
mov
mov
lret
in
inc
rcr
dec
push
mov
cld
popf
icebp
cli
and
cmp
or
dec
loope
stos
sahf
xchg
out
push
sub
push
xorl
imul
outsl
push
push
mov
jbe
pop
jecxz
addr16
inc
cld
shll
sahf
dec
imul
fists
mov
cmpsl
inc
nop
stc
jo
lret
inc
cwtl
popf
mov
fadd
ljmp
push
bound
push
jl
aaa
sahf
jns
shl
xor
outsb
out
ja
jle
mov
fiadds
add
push
mov
and
ret
movsl
aam
leave
mov
notb
jg
xchg
add
xor
xor
add
jae
arpl
xchg
sub
das
jo
push
sar
lds
add
incl
shrl
mov
cmp
ret
test
cmp
pop
xchg
inc
pop
xchg
std
loope
pop
mov
notb
jbe
mov
pop
adc
ss
sahf
or
mov
push
jl
gs
mov
imul
push
sbb
push
jle
in
dec
adc
std
mov
in
dec
scas
out
mov
rorb
outsl
fmuls
cmp
sub
adc
add
rorl
dec
cmpsl
lret
jbe
scas
inc
pop
dec
mov
xchg
arpl
clc
jl
or
fsubrs
enter
rcrb
sub
cmpsb
pop
sub
mov
loop
gs
dec
add
sbb
popf
jne
inc
inc
cmp
das
sub
call
cwtl
lods
jg
inc
push
sub
lret
pop
add
add
adc
popa
jp
fisubl
test
jae
adc
jl
je
mov
clc
xor
mov
pop
into
popa
lods
outsb
sub
test
and
mov
fadds
add
pop
and
add
inc
sahf
insl
jle
xor
ret
sbb
idivb
cwtl
push
ljmp
sti
and
arpl
xchg
sbb
xor
xchg
in
pop
sarl
mov
lcall
jg
ds
std
or
aam
xor
mov
xchg
jne
js
cwtl
push
iret
notl
pop
movsb
cmp
ret
mov
mov
ja
mov
daa
adc
inc
sti
or
leave
dec
ret
aad
sub
fmul
and
aad
mov
hlt
jmp
out
mov
pop
punpckhwd
loope
adc
repnz
ja
in
push
xchg
dec
xor
out
pop
mull
jg
leave
xchg
iret
mov
movsl
cld
lret
pop
sbb
jae
push
mov
out
jl
push
test
imul
out
add
rorb
or
out
movsb
and
bound
aaa
jl
mov
enter
mov
loope
jl
push
mov
insb
lcall
cmp
or
stos
add
cmc
xlat
je
add
in
shll
xchg
inc
sbb
xchg
fdivs
adc
nop
xchg
jno
jmp
sahf
lahf
int3
jbe
or
mov
sarl
addl
and
sbb
ds
popa
insl
insl
popf
mov
cmp
xchg
push
pop
mov
pop
push
mov
loopne
aas
rcll
adc
aad
add
int
dec
in
cmp
ret
jl
inc
in
mov
xlat
pop
or
push
and
sub
xchg
es
shlb
xor
sbbl
add
inc
sub
fs
shrb
insb
mov
lcall
negb
sub
push
out
cwtl
cmpsb
and
shr
mov
add
ss
int
andl
jle
stc
gs
icebp
push
mov
loopne
cmp
pop
stos
sbb
mov
inc
xchg
lcall
sub
inc
pop
arpl
dec
lahf
lahf
xor
addr16
ret
addr16
xchg
aaa
xor
stos
cld
mov
nop
repz
mov
out
or
icebp
lret
ds
mov
or
sbb
insl
ss
mov
repnz
lods
stos
sahf
arpl
cmp
cmp
sbb
fisttpl
sub
insl
daa
sub
je
iret
aaa
inc
stos
add
add
add
loopne
loope
mov
jecxz
inc
test
stc
add
lahf
out
cwtl
cli
sbb
jmp
xor
xor
mov
adcb
cmp
and
push
negb
jle
push
stos
int
mov
cmp
xor
jbe
mov
out
xor
add
outsb
sbb
sub
clc
lods
int3
lods
mov
or
adc
lods
jle
scas
adc
sbb
int3
fsts
orb
sbb
popf
rcrl
addr16
mov
push
cmpsl
int3
sub
inc
xchg
push
sahf
jge
sub
in
jb
jno
cmpsl
dec
mov
mov
cmp
lret
mov
xchg
loopne
imul
movsl
aas
aad
xor
mov
sbbb
pop
rcrl
dec
cmp
out
stos
lods
out
xchg
subl
jb
dec
rcl
jbe
add
test
in
jne
fmuls
jecxz
cmc
out
mov
outsb
push
inc
and
mov
shrl
push
rcrb
stos
out
lret
cwtl
add
push
xchg
xchg
push
add
and
xor
add
lahf
sub
cmp
jbe
add
mov
aad
dec
aam
mov
push
repz
icebp
xlat
jae
add
pop
sbb
loope
xor
aad
mov
mov
cld
imul
jae
inc
dec
dec
jo
ljmp
cmp
xor
mov
idivl
xchg
cltd
xlat
sub
add
pop
aaa
aam
pop
add
sub
inc
aam
pop
mov
lcall
xor
ja
es
add
xor
test
xchg
pop
sub
pop
sub
std
sti
xor
mov
jne
ror
cmpl
js
fsubrl
jg
cmp
ret
aaa
lock
lock
cmpsl
testl
test
jecxz
mov
adc
rcll
sti
mov
rolb
cmc
loop
and
ret
data16
mov
arpl
jmp
lock
pop
aam
in
push
mov
fs
mov
cmp
bnd
or
stc
lret
movsl
loope
add
aaa
pushf
jo
scas
xlat
rcl
jge
jns
and
cmp
xor
imul
cmp
inc
orb
bound
dec
adc
shll
xchg
mov
inc
mov
lods
xchg
mov
loopne
loopne
mov
cmp
popa
std
cwtl
shrb
adc
fcmovnbe
mov
dec
cmpsl
aad
loope
out
test
cld
repz
inc
inc
add
sti
lock
mov
sbb
adc
pop
or
mov
jmp
divb
cmp
popa
xchg
pushf
vmovsldup
fdivp
xchg
pop
imul
mov
ja
or
push
sbb
js
push
mov
push
fs
fisubl
movsb
or
ljmp
mov
jmp
xchg
push
cmc
shll
cmp
arpl
pop
and
lock
pop
mov
mov
fildll
inc
fsubl
pop
and
or
dec
fnstcw
sbb
pop
xchg
push
pop
jo
aaa
dec
hlt
out
movsb
imul
ficoml
mov
cmpsb
xor
fst
sbb
adc
jmp
cmpsb
jbe
xchg
cwtl
out
pop
dec
pop
sarl
xor
inc
jne
or
es
fucomi
scas
loope
jb
jge
add
cmpsl
aad
repnz
cltd
cli
dec
adc
mov
lret
sub
loope
gs
inc
fildll
adc
xor
es
jg
mov
add
dec
adc
or
cli
pusha
dec
dec
jge
sbb
add
jnp
mov
lds
in
out
sbb
mov
add
pop
adc
loope
inc
mov
jae
in
test
xor
adc
adc
xchg
inc
xchg
scas
sub
movl
mov
lods
test
or
inc
ljmp
mov
or
js
jb
fisubrs
inc
push
inc
jo
clc
int
cli
jecxz
std
sti
sbb
inc
enter
xor
mov
pop
mov
popf
lret
pop
cmp
shlb
or
mov
les
in
in
into
inc
mov
and
ss
mov
inc
mov
mov
jne
inc
xor
xchg
mov
add
pop
sbb
pop
cmpsb
fadds
jg
adc
gs
dec
mov
test
ror
xchg
push
cwtl
cmp
sbbb
mov
leave
aad
jmp
leave
or
cld
repz
adc
jle,pt
mov
ror
jg
icebp
jne
mov
dec
dec
bound
aas
inc
in
outsb
das
xor
stos
js
pop
shlb
xchg
sarb
sub
sbb
cmp
adc
mov
or
cmpsb
das
jg
jp
push
add
push
mov
test
pop
push
ret
ret
pop
inc
adc
xchg
outsb
dec
arpl
shlb
imul
push
popa
pop
stos
or
sub
aaa
clc
pop
imul
rclb
sbb
in
push
pop
icebp
and
and
stos
add
xchg
and
loope
lods
inc
dec
add
push
sahf
push
ss
insb
test
mov
daa
rcrb
daa
push
inc
mov
or
stc
stos
inc
cmp
push
lret
sbb
std
or
xchg
ljmp
lea
jae
fstps
movsl
hlt
daa
pop
xor
cmpsb
adc
je
sub
sbb
icebp
adc
aas
cmp
cltd
cmpb
dec
xlat
sbb
scas
bound
jns
test
lea
adc
je
dec
fdivrs
stos
adc
push
and
xlat
orb
les
mov
repz
adcb
adc
pusha
cmp
mov
xor
adc
sub
cltd
jp
dec
adc
inc
rclb
cmp
add
fs
xchg
movsb
or
gs
inc
pop
xlat
iret
inc
enter
cwtl
rorb
jns
repz
fists
std
jae
ljmp
jecxz
mov
stc
sahf
mov
test
into
sub
in
loope
xchg
into
and
outsb
add
dec
cltd
int3
push
mov
dec
ja
fwait
adc
add
ret
leave
addr16
pop
inc
icebp
popf
mov
xchg
repnz
pop
mov
fwait
and
and
and
lea
repnz
and
add
push
mov
and
fistpll
lods
orl
jbe
insl
outsl
inc
ja
data16
aaa
pop
sti
in
sub
sub
add
jmp
pop
jnp
or
dec
pop
addr16
lahf
test
adc
scas
sti
xchg
sbb
nop
pusha
dec
movsb
repnz
into
mov
cli
aas
add
sti
xor
adc
cs
push
mov
leave
ds
jmp
adcb
adc
sub
jae
stc
lcall
loope
and
fsubl
je
ret
mov
push
xor
pushf
sahf
inc
pop
mov
xchg
or
push
movsb
mov
jecxz
pop
add
and
mov
fwait
xchg
ret
jmp
popf
gs
dec
pop
ror
xchg
jno
sbb
adc
out
fs
inc
insb
xchg
inc
insl
xchg
lds
or
xchg
testb
xchg
bound
mov
mov
xchg
ret
jmp
sbb
mov
testb
xor
cwtl
sbb
or
add
lods
pushl
cmc
sbb
cmc
mul
and
fwait
cmp
in
sub
jmp
sbb
mov
pushl
dec
insl
rcrl
add
push
add
add
mov
in
mov
in
xchg
dec
repz
sbb
jl
mov
rolb
and
inc
pusha
in
dec
push
je
repnz
add
push
and
das
inc
int
mov
test
rolb
xor
inc
xchg
cwtl
add
pop
mov
ljmp
rcll
jecxz
hlt
ret
insb
jmp
pop
scas
cmp
xor
and
sbbl
mov
sbbb
jmp
mov
insb
cmp
nop
sub
mov
scas
jb
sub
inc
push
xchg
insl
insb
xor
jmp
add
lock
imul
sbbb
lods
mov
data16
das
mov
cmp
shll
mov
cld
test
ret
and
pop
or
adc
xlat
add
mov
jl
jmp
std
fstp
xlat
or
xor
imul
pop
pop
inc
fmuls
gs
and
mov
push
in
jmp
stos
jne
adc
arpl
nop
push
mov
popf
dec
add
jne
lods
jl
pop
mov
jns
cmp
fs
pop
stos
xchg
push
xor
dec
and
mov
dec
pop
xor
shrl
sbb
in
test
dec
mov
iret
mov
sarl
mov
push
out
add
inc
in
enter
test
in
xchg
loope
and
mov
movsl
lock
rorb
push
push
popf
arpl
sahf
frstor
rcrl
push
test
push
xchg
jle
mov
icebp
xlat
sbb
xor
fcomps
mov
stos
stos
shll
cltd
lea
xchg
imull
sbb
int
or
adc
sti
sub
sub
cmp
xchg
jl,pn
push
xchg
adc
test
jno
jle
frstor
in
or
jp
mov
mov
cmpl
ja
subl
notl
jmp
pushl
push
push
call
jmp
fcompl
fstp
and
test
jnp
mov
add
add
add
sbb
dec
xor
sbb
pusha
jl
enter
and
lods
sbb
test
int3
ret
jae
ja
mov
fwait
and
or
sub
aam
fnstenv
into
xchg
pop
out
test
mov
xlat
sub
or
pop
aaa
jle
inc
cmpb
mov
popf
stos
xor
sub
scas
cmp
jg
movl
ret
push
or
mov
sub
int
xor
push
mov
test
or
jp
xchg
data16
fs
js
mov
lock
xor
inc
mov
inc
div
rcll
fwait
sub
pop
add
push
pop
mov
adc
pop
imul
imul
popa
add
or
push
roll
test
aaa
out
mov
outsb
jl
rol
aam
add
daa
sub
xchg
or
dec
nop
jp
xchg
repnz
jb,pn
aaa
sbb
fldt
jmp
xor
into
mov
in
ja
pop
add
mov
mov
jle
jge
xor
cmpsb
popl
mov
xchg
mov
les
daa
pop
out
ds
mov
and
push
or
popa
rcrl
pop
in
xchg
cmp
xlat
cmp
sub
mov
push
mov
adc
pop
insb
xchg
stos
cmpsb
ficompl
lcall
pop
loopne
jge
mov
mov
bound
push
fldenv
cmpsb
add
sahf
xor
mov
mov
stos
pusha
pop
fcomps
pop
xor
add
sbb
cmpsl
test
insl
pop
sti
sahf
nop
dec
bound
jge
std
mov
fs
xchg
mov
mov
adc
sbb
rolb
outsl
sbb
pop
inc
adc
xchg
xchg
leave
arpl
mov
sub
jmp
std
cs
imul
std
pushl
xor
fidivl
add
push
add
add
push
cmpsl
xchg
sbb
add
cmc
jbe
aam
in
push
out
mov
das
inc
cmc
ret
mov
push
adc
js
ret
adc
push
mov
ds
xor
and
xor
into
out
in
jns
xchg
sbb
inc
xchg
dec
and
dec
mov
fimuls
and
mov
adc
in
js
inc
jbe
xor
and
mov
jge
mov
test
mov
int3
outsb
bound
mov
fcomi
int
outsb
sbb
pop
gs
sub
jno
je
sbb
fsubr
push
pop
xchg
mov
fs
test
scas
push
pop
jg
aas
mov
aas
inc
jo
nop
mov
mov
dec
or
dec
mov
imul
test
xor
inc
adc
fnstenv
mov
add
or
mov
mov
enter
cld
cmp
sbb
mov
push
mov
xlat
or
mov
mov
pop
mov
cmp
aad
pusha
sub
cltd
ja
ds
xlat
push
das
out
lret
push
mov
or
into
inc
leave
cmp
xor
or
xchg
jae
and
and
jmp
enter
fsub
pop
xchg
jne
push
adc
fldenv
or
dec
icebp
pop
and
inc
in
push
jp
sbb
in
mov
out
loopne
xchg
les
sub
fwait
push
aad
mov
fst
push
xchg
mov
std
popl
pop
sarb
pop
mov
inc
out
mov
scas
push
sbb
dec
shll
mov
and
fbld
into
mov
push
xchg
ret
movsl
fcmovbe
push
and
mov
jae
bound
sub
sub
out
jmp
jmp
cmp
cmp
cld
fistpll
pusha
fcmovnu
xor
mov
add
add
add
cmp
fisubrs
or
lahf
xor
push
enter
jmp
test
mov
icebp
dec
lock
mov
icebp
mov
push
loope
add
xlat
hlt
xor
mov
sbb
cmp
add
repnz
mov
inc
out
push
std
iret
xor
cli
cmpb
je
push
mov
inc
fimull
into
in
pop
ljmp
inc
sti
sbb
jecxz
dec
loopne
cld
inc
xor
sbb
into
into
outsl
mov
icebp
icebp
leave
sub
sub
gs
clc
fucomi
mov
jle
in
xchg
push
dec
inc
mov
fnsave
add
mov
mov
pop
aad
fiaddl
xor
pop
gs
cld
xorb
leave
outsl
add
xor
fmul
addr16
xlat
push
rcrb
in
test
in
movsl
fwait
jmp
adc
xchg
fwait
ja
scas
jmp
cs
int
pop
sbb
sub
mov
imul
xor
and
cltd
sub
imul
xchg
js
mov
ret
push
fiadds
inc
and
mov
jl
outsl
mov
inc
and
pushf
jb
pushl
int
fmul
sub
mov
xor
sbb
clc
andl
imul
stc
pop
pop
adc
add
and
rol
scas
hlt
jne
into
and
dec
mov
jno
out
mov
add
outsb
dec
int3
cs
sub
stc
jo
sbb
insb
int
sub
or
dec
pop
movsb
mov
mov
mov
pop
fucomip
gs
ja
mov
push
sub
xor
push
lods
jp
mov
cmp
pusha
repnz
push
push
mov
jns
sahf
jmp
clc
pop
push
shlb
movsl
mov
adc
xor
add
cmc
in
fimull
mov
mov
pop
es
add
adc
orl
sbb
jmp
jmp
xor
mov
and
test
add
push
add
add
jmp
push
popf
adc
scas
jge
out
dec
mov
push
sti
jns
fistpll
aam
jge
pop
mov
sub
lea
iret
stos
push
cvtdq2ps
adc
xchg
fnsave
xor
js
icebp
xlat
mov
push
lods
adc
jbe
push
adc
sbb
cmp
add
pushf
add
pop
and
lock
jb
and
push
sbb
mov
xchg
add
cwtl
dec
inc
test
repnz
stos
mov
or
addr16
cmpsl
mov
pop
sti
bound
aaa
imul
adc
or
xchg
cmp
lds
hlt
icebp
and
rclb
and
dec
sub
je
daa
in
xchg
cmpsl
sub
adc
pop
sub
addr16
and
leave
out
dec
pop
ror
rcrl
xchg
inc
lahf
mov
mov
lds
mov
test
dec
sbb
lods
bound
pop
pop
push
cmpsb
push
jns
stc
or
out
ja
fwait
xchg
or
mov
adc
iret
or
fidivs
jl
pop
inc
push
mov
inc
fwait
rorl
jne
cmpsl
pop
data16
mov
or
subl
lods
popf
sarb
out
mov
mov
ljmp
jl
pop
les
ljmp
rcl
rclb
inc
jl
sub
rcl
loop
call
xchg
enter
adc
rol
out
cmp
ss
pusha
clc
xor
scas
stos
dec
push
out
jge
cmp
ss
out
dec
push
shrl
ss
ja
pop
cltd
mov
dec
divb
push
aas
mov
sahf
popa
loope
jmp
popa
xchg
clc
add
lea
mov
adcl
mov
xchg
xchg
xchg
jge
sbb
daa
orl
mov
cmpl
jg
or
jmp
push
pushl
pushl
call
mov
mov
jmp
add
mov
in
or
sub
add
push
sub
scas
inc
lods
sub
or
popf
dec
scas
push
repz
clc
cmpsb
test
scas
lods
mov
push
lods
scas
xor
fisubs
out
inc
mov
jle
sub
insl
insb
pop
enter
mov
jle
and
inc
loop
xchg
mov
and
pop
pop
cld
clc
movsb
xchg
push
xchg
pop
fs
fwait
mov
and
jae
push
inc
bound
mov
sub
out
adc
gs
stos
adc
es
mov
sbb
and
jbe
push
pop
in
sub
jno
dec
scas
sbb
jmp
out
push
jns
push
xor
lcall
pusha
mov
push
sarb
xor
bound
mov
or
jl
add
push
das
lret
pop
or
lret
xchg
shll
fcomi
lcall
ja
sbb
xor
mov
inc
jne
aad
xlat
or
jmp
cmp
dec
mov
adc
outsl
mov
decl
cmp
push
mov
dec
mov
nop
cmp
or
pop
sarl
lret
push
add
ja
aam
push
cmpsb
imul
test
inc
and
cmp
sub
add
fwait
sub
hlt
sbb
aam
int3
in
scas
jae
fidivrs
add
aad
movsb
cmpl
jecxz
roll
dec
lret
sub
xor
dec
sbb
lock
inc
out
push
dec
icebp
and
hlt
mov
shl
xchg
fidivs
mov
push
add
mov
sbb
cmp
ret
pusha
fcomps
push
test
xor
les
cmp
test
or
jbe
and
mov
and
xchg
pop
inc
das
mov
jmp
fcmovne
sub
cmp
dec
pop
icebp
fnstcw
adc
cld
xor
add
test
mov
mov
push
call
lods
xor
es
and
idiv
mov
mov
mov
das
ss
bound
shlb
mov
push
shll
push
daa
in
push
jae
lods
jmp
mov
xchg
pop
inc
jo
mov
pop
movsb
ret
jp
shll
arpl
loopne
das
jg
sahf
sub
orl
inc
mov
mov
adc
fnstenv
in
ja
mov
mov
xchg
jmp
push
sti
hlt
pop
jp
mov
mov
push
jnp
sub
iret
icebp
jno
adc
add
mov
pop
pop
push
cmp
dec
sahf
mov
fs
out
ja
mov
mov
ja
dec
inc
aad
loopne
mov
mov
jecxz
mov
jl
jp
add
loop
or
jl
mov
ret
stos
enter
in
mov
call
mov
mov
xor
pop
outsb
icebp
mov
les
xchg
push
dec
movsl
cmp
out
fsub
and
insl
clc
pop
xchg
pushf
xor
ret
scas
pop
adc
out
psrlq
ficompl
pop
test
cmc
lcall
add
fidivrl
pop
adc
cmp
ret
mov
leave
jae
cld
mov
andb
out
xor
adc
or
movsb
pop
out
add
mov
xlat
ja
jno
pop
jmp
sbb
sbb
mov
js
cli
lcall
inc
jge
daa
mov
clc
cwtl
cmc
mov
std
sbb
out
jae
repnz
or
push
cmpsl
push
aaa
jmp
iret
cmp
loopne
mov
xor
push
mov
jp
cltd
sub
sbb
inc
fstl
pop
cmpsb
mov
cmp
dec
mov
mov
sbb
and
mov
mov
and
jmp
mov
ljmp
adcl
aaa
mov
add
into
adc
ret
aam
mov
ss
shl
rcll
lahf
xchg
std
mov
jo
mov
push
pop
mov
cmp
testb
cmp
test
pushf
andl
lock
loop
int
cmp
push
daa
mov
mov
cltd
negb
jl
or
stc
cli
mov
mov
divl
loopne
jns
hlt
jp
dec
jp
test
rcl
push
test
xchg
jo
push
add
push
mov
lods
pop
in
add
jo
ret
sti
inc
das
sub
xor
and
call
test
int3
mov
pop
lods
fnstsw
movsb
jecxz
dec
jecxz
or
or
lock
hlt
dec
cmpsb
into
sarl
mov
xor
pop
jg
loopne
and
sti
adcl
cmp
scas
mov
mov
movsl
imul
fmuls
push
inc
adc
cmp
xchg
clc
inc
cmp
mov
adc
sbb
mov
lret
push
add
jle
inc
jbe
or
mov
sbb
pop
movsl
or
sub
cmp
into
sub
mov
cmp
pop
sbbb
push
enter
jle
push
ds
xorl
icebp
cmpsl
test
push
xor
imul
push
inc
lret
in
aas
sub
fsubl
mov
push
sbb
lods
pop
sub
mov
or
test
add
fsubrs
or
stos
adc
xrelease
rclb
sub
movsb
sti
dec
pop
sbb
xor
dec
xor
mov
mov
test
ret
ret
shlb
into
cmp
lods
pop
fcompl
cld
mov
jnp
shll
hlt
pop
mov
lock
add
rolb
adc
sub
imul
orl
cmpl
jge
and
jmp
pushl
pushl
pushl
push
push
pushl
call
lea
mov
jmp
dec
jge
aaa
jb
outsl
jge
dec
xchg
inc
mov
cmp
add
add
inc
mov
rcrb
xchg
mov
std
inc
shl
push
mov
enter
or
push
imul
shlb
leave
jge
xor
xchg
lret
ror
mov
jg
xchg
dec
sbb
push
iret
and
mov
push
sbb
into
dec
adc
das
jo
xchg
pop
shr
inc
cltd
mov
inc
scas
or
mov
and
xchg
sub
test
dec
ret
in
aas
xchg
fsubl
mov
fistpll
pop
fdivrs
pop
nop
ret
push
sti
loope
adc
gs
mov
lret
sub
pushf
cmp
cld
mov
push
stc
into
jg
das
xchg
and
int
pop
xorl
xor
inc
push
cmpsl
les
das
jecxz
xor
pop
and
jb
mov
shlb
pop
mov
insb
push
icebp
mov
jecxz
push
and
pusha
leave
jg
bound
call
jge
mov
enter
adc
loope
cltd
sti
test
imul
xchg
mov
test
xchg
fiadds
mov
inc
sbbl
mov
xor
lock
lret
xor
and
out
aaa
test
adc
fisubs
into
sbb
test
adc
xchg
jo
inc
repnz
and
jno
cmc
sub
repz
mov
jmp
mov
push
popa
jle
test
sub
mov
fisubrl
jle
mov
ds
dec
ljmp
mov
adc
aam
mov
lret
rcll
inc
mov
inc
sbb
ret
add
pop
stc
xchg
fistpl
xor
inc
mov
fisubrs
test
or
mov
cmp
rol
xchg
and
mov
mov
jmp
lret
adc
fidivrs
mov
add
aam
xchg
sub
inc
ret
push
add
add
in
mov
cmp
add
jno
mov
mov
lret
push
out
movsb
sub
adc
or
push
js
rclb
inc
push
jno
sub
mov
sbb
cmc
arpl
in
push
mov
jecxz
rclb
fdiv
mov
push
xor
adc
insl
int
inc
mov
fs
jb
jne
daa
gs
cmpsb
rorl
enter
ljmp
mov
je
cmp
xor
loop
fnstenv
mov
push
push
sbb
inc
fcomps
cltd
jnp
sbb
fsubs
inc
sbb
int
or
push
mov
mov
inc
dec
ds
and
ret
ljmp
mov
jp
lods
aaa
lock
cs
xchg
mov
sbb
cwtl
lcall
mov
dec
pop
cmp
in
push
xlat
jno
mov
xchg
xor
loope
je
fwait
mov
pop
xchg
clc
inc
adc
lds
fildl
mov
sbb
cmpsl
mov
jmp
mov
cmp
jle
daa
sub
aad
into
sbb
jmp
pop
and
mov
arpl
test
lea
push
shrb
aam
outsb
test
in
cmp
mov
sub
cmpsb
dec
xchg
mov
or
movsl
loope
daa
pop
mov
stos
mov
dec
push
daa
sub
cld
orb
dec
in
jp
pusha
jl
pusha
adc
fcoms
xor
frstor
leave
mov
jmp
xchg
or
and
add
dec
add
int3
push
mov
ss
int
test
xor
jae
iret
push
add
sub
jmp
scas
xchg
aad
jle
aad
pop
mov
test
adc
les
add
add
add
add
mov
in
cmpsb
mov
mov
sbb
jnp
mov
jge
sbb
jae
sbb
push
lock
les
arpl
jne
leave
cmp
cmp
clc
outsl
int
fildl
into
pop
mov
cmp
outsb
xor
xchg
jne
shlb
push
jg
fcompl
cltd
leave
out
and
push
xor
add
into
loope
movsb
xchg
push
or
pusha
outsl
aaa
repnz
add
xchg
loopne
imul
ret
jmp
mov
js
pop
cmp
ds
sub
std
mov
lods
cmp
popf
dec
and
xchg
and
ss
push
stos
mov
mov
mov
icebp
jp
xchg
loopne
call
inc
push
mov
sub
insb
xchg
xchg
data16
scas
jp
cmp
mov
iret
xchg
sub
jns
jns
pop
insb
jnp
gs
pushf
aaa
and
adc
je
cmp
addb
sti
pusha
cmp
dec
andb
fnsave
adc
xchg
daa
movsl
xchg
popf
and
mov
mov
xor
sbb
xchg
jno
aas
jnp
sbb
adc
mov
sbb
pop
aas
pop
and
stos
pop
push
adc
mov
aaa
and
push
clc
stos
pop
sarl
push
adc
rcl
imul
cs
inc
jp
jne
push
lods
test
pop
je,pn
or
nop
imul
adcb
sub
mov
into
mov
leave
add
jae
lock
adc
cld
in
sub
cwtl
sbb
sbb
or
xchg
inc
pusha
dec
mulb
xor
dec
mov
mov
mov
insl
xor
and
xchg
out
out
aaa
cmpsb
out
inc
mov
pushf
aad
in
jo
mov
adc
jmp
cs
push
out
ds
sbb
or
add
push
add
add
pop
sub
mov
fs
lcall
sub
push
cmp
xor
data16
daa
mov
testl
add
div
fnsave
sbb
cli
lea
shrl
jle
std
inc
or
pop
adc
mov
ret
cmp
cmc
cmpsl
push
pop
or
cld
movsl
aaa
push
mov
cmpsl
push
repz
das
stc
sahf
arpl
stc
test
rcrl
insb
push
inc
xchg
sub
repz
xchg
push
and
idiv
test
dec
jns
cli
sbb
repz
mov
inc
rcr
fdivrs
mov
mov
hlt
jb
es
dec
push
mov
jmp
pop
fistl
movsl
xor
dec
cmp
loope
xor
shrb
or
mov
or
mov
es
stc
xchg
sbb
jno
xor
xor
fcoms
jnp
cbtw
aad
xchg
dec
jecxz
mov
push
mov
test
pop
add
testl
and
xchg
pushf
ss
jnp
out
idivb
repnz
lcall
adc
or
sti
pusha
push
aad
out
lods
cld
lcall
scas
shr
jmp
inc
in
test
and
test
xorb
push
xlat
push
mov
fs
or
mov
loop
leave
adc
pop
inc
or
inc
jge
or
clc
enter
or
in
inc
imul
or
jnp
sbb
lods
imul
or
adc
push
lret
into
rcll
adc
lods
ljmp
push
mov
aaa
mov
inc
in
in
sub
mov
sbb
push
fwait
cmpsl
hlt
popa
jae
es
faddl
test
into
fs
mov
enter
mov
lods
data16
insb
inc
repz
mov
subl
jmp
sbb
insb
pop
jg
adc
xchg
imul
push
add
add
es
pop
push
enter
mov
push
movsl
mulb
std
mov
aas
ss
pushf
pop
xor
jle
inc
insl
lcall
jb
mov
inc
adc
daa
fbstp
mov
int3
popf
sbb
mov
enter
shll
inc
movl
icebp
insb
pop
mov
adc
adc
stos
ret
stos
and
je
mov
ret
push
sub
sbb
out
stc
push
mov
sub
fs
jecxz
movl
test
xlat
mov
imul
repnz
xor
pop
add
aas
cmp
divl
stos
xor
mov
sbb
xchg
out
shrl
add
imul
jb
xchg
sub
xchg
sub
dec
jne
dec
test
pop
pop
icebp
add
push
add
add
xchg
ret
cmp
mov
xchg
push
xchg
js
fdivl
std
pushf
hlt
leave
adc
ja
pop
jge
sti
mov
cs
bound
cwtl
inc
dec
mov
mov
jo
outsl
inc
pushf
scas
bound
push
push
jmp
fwait
stc
inc
cli
loopne
push
dec
pushf
jae
leave
sbb
insb
inc
cmp
xor
jbe
sbb
push
fldenv
in
adc
add
pop
sub
ja
std
or
gs
cmp
imul
sbb
dec
pushl
imul
lret
mov
jne
sbb
ret
addl
mov
mov
cmpsl
adc
sbb
fwait
je
movsl
stos
jp
mov
mov
gs
jl
scas
rep
and
jecxz
pop
and
mov
mov
cmp
jmp
or
lods
cwtl
mov
stos
sub
mov
sbb
push
sbb
add
ja
add
jmp
push
call
jmp
test
aam
aad
mov
add
lds
add
push
add
add
cmp
lret
dec
aaa
inc
ret
out
adc
inc
xchg
adc
jno
xchg
insb
mov
adc
out
sub
xchg
movsb
scas
mov
xor
cmpsl
test
daa
xor
cmp
out
cltd
jae
cmp
aas
sbb
out
add
jecxz
mov
jg
cltd
inc
in
popa
or
cmpsb
dec
pop
xor
mov
add
stos
jb
lock
jge
cmp
cmpsl
cmp
xor
push
imul
lahf
pop
rcll
aas
jo
mov
scas
pop
loopne
xchg
lret
jecxz
mov
dec
shlb
into
xchg
shlb
fisttpll
in
xchg
gs
mov
fidivs
shrb
data16
mov
or
hlt
pop
out
jns
loopne
nop
outsl
add
or
test
movsl
xchg
mov
jecxz
das
das
mov
scas
jp
inc
cmp
cmp
movsb
sbb
sub
mov
arpl
fucomi
fmuls
push
jbe
mov
outsb
int
push
insb
filds
dec
scas
pop
mov
aad
stos
sbb
je
mov
push
xor
cltd
mov
push
cltd
movsl
lahf
stos
inc
scas
or
or
mov
pop
mov
lods
ja
push
sub
repnz
mov
lea
neg
ret
fwait
pop
pop
sbb
neg
mov
xor
mov
je
xchg
nop
aas
shlb
ljmp
int
icebp
pushf
xchg
jl
jecxz
sarl
ss
add
cmc
mov
movsb
add
jl
mov
dec
in
ja
je
inc
aaa
addb
ja
cmpsb
mov
inc
popa
jbe
xchg
mov
bswap
xchg
fidivrl
rorb
pop
sub
icebp
or
cmp
andb
gs
scas
mov
cmp
jne
lds
leave
xchg
and
push
add
add
testl
and
fldcw
int3
add
push
add
add
mov
imull
pop
jmp
mov
inc
pop
inc
inc
negl
icebp
addb
xchg
sbb
sti
lds
out
dec
jb
inc
enter
adc
add
fsubs
jne
push
sub
adc
dec
clc
loope
stos
jp
int
dec
xor
in
lret
arpl
add
outsb
pop
das
inc
aam
cld
test
mov
cmp
leave
xor
push
mov
enter
arpl
cmp
sahf
iret
ficomps
add
fmuls
and
inc
push
adcb
lods
adc
push
lahf
mov
nop
lahf
imul
int3
pushf
pop
out
fnstsw
or
stc
inc
mov
stos
out
clc
repz
pop
repnz
rcr
filds
lock
test
testl
pushf
xchg
aad
adc
jns
adc
cld
jbe
lds
xchg
and
add
in
adc
arpl
mov
pop
sbb
push
shlb
lahf
pop
lock
sub
xchg
mov
imul
pop
jg
jge
ret
out
ja
xchg
jb
mov
cwtl
mov
aad
mov
jno
mov
icebp
mov
mov
sub
or
or
xchg
in
lea
leave
int3
scas
add
inc
cmp
xor
mov
xor
imul
lds
test
push
fs
cmpsb
and
xlat
fiaddl
add
mov
inc
jae
sub
sub
mov
imul
cwtl
aam
test
mov
insb
mov
cmp
lea
or
mov
or
call
addr16
push
inc
pop
rcr
pop
inc
icebp
push
sub
out
xchg
mov
arpl
shrd
xor
shr
mov
jmp
outsb
jmp
cmp
dec
push
inc
sti
mov
into
add
push
add
add
xor
js
and
divb
inc
push
pop
jp
mov
int3
sbb
push
subb
xchg
mov
push
and
lret
add
aaa
movsl
out
jle
push
push
out
mov
outsl
lret
mov
shll
shl
and
xlat
loop
rclb
cmp
dec
stc
push
out
testb
dec
mov
mov
push
mov
jg
fistl
lcall
test
adc
dec
shrl
ret
pop
testl
addl
fstl
mov
push
out
les
sbb
movsl
and
fsubrl
push
shld
push
jbe
gs
cmp
inc
sahf
je
jb
hlt
adc
in
aam
xchg
into
movsb
pop
inc
jo
jmp
das
mov
mov
cld
repnz
adc
mov
sbb
test
add
cmpsb
xor
push
push
and
inc
and
cmpsl
or
push
imul
ror
mov
nop
and
add
xor
repz
push
or
stc
xlat
xchg
adc
cmp
aad
out
loopne
ret
in
leave
xor
in
or
fwait
aam
push
mov
inc
rclb
mov
adc
fldz
fadd
sbb
cmp
adc
push
jecxz
pop
mov
or
jne
xchg
cli
enter
add
fistpl
je
test
cmp
mov
es
lahf
xchg
popf
pop
mov
stos
jl
idivl
or
cmp
imul
fsts
movsl
movsl
lahf
fwait
insb
cs
xchg
cmpsb
add
jg
xor
jbe
lret
dec
xor
pusha
jnp
stc
test
lods
inc
adc
inc
popa
push
in
call
sbb
xor
xorl
jmp
pop
mov
pop
incl
mov
rolb
add
add
add
or
mov
jl
mov
movsl
add
in
mov
inc
dec
jle
in
leave
or
push
decb
push
add
div
jmp
inc
imul
data16
sub
dec
pop
jecxz
pop
or
orl
add
xchg
cmpsl
mov
mov
into
lock
int
mov
dec
pop
mov
fistl
add
sahf
ret
xorl
sub
sub
leave
add
test
cmc
jne
pop
push
inc
mov
iret
sbb
in
in
lods
lock
cmp
out
leave
aad
mov
lahf
inc
std
flds
int3
add
ficoms
fisttpl
cmp
rcr
adc
xor
and
push
add
mov
xchg
fidivrl
hlt
jb
in
in
mov
xchg
xchg
xchg
pop
lret
mov
mov
mov
inc
inc
lods
mov
ja
lods
sub
insl
cmp
fs
jp
cltd
pop
xchg
xor
lods
sub
lods
or
xorw
push
mov
lcall
sub
pushf
fsubrl
cmpl
pop
add
rolb
fcmovne
call
cmp
stc
or
mov
mov
lock
imul
cmpsb
scas
adc
mov
loope
fstpt
cmp
add
jae
int
loope
xchg
adcb
sub
inc
xor
and
cmp
outsb
aaa
inc
cmp
xchg
xchg
adc
test
das
mov
pop
cmpsb
push
out
dec
mov
ss
sub
or
push
in
mov
movsl
pop
scas
xor
pop
mov
orb
js
data16
iret
fdivrl
jns
incb
sahf
cmpsb
loope
cmp
es
loopne
push
jnp
or
cmp
dec
dec
or
mov
xor
jmp
js
mov
fstl
fidivrl
add
add
add
insb
push
mov
les
fnsave
inc
iret
lds
dec
mov
jo
sub
je
call
loop
push
cli
xor
out
pop
mov
sbb
push
lahf
out
pop
lods
js
xlat
or
mov
stc
int
aad
pop
popa
outsb
cltd
sbb
mov
pusha
cs
mov
xor
decb
repnz
and
inc
divl
mov
jae
iret
mov
xchg
adc
push
mov
inc
lret
mov
sti
in
pop
les
and
pop
jnp
xlat
add
fdivl
les
fistps
dec
adc
sub
jl
dec
lock
mov
pop
xchg
sbb
movsb
jo
jne
sbb
add
cmp
xor
sbb
fistpll
dec
jo
and
dec
sbbl
sub
dec
or
pop
mov
int
sbb
cmp
adc
adcb
pop
loopne
fucomip
cmp
pop
lds
mov
xchg
push
inc
test
jp
pop
cmp
hlt
test
int
lock
fmull
adc
dec
sub
std
xchg
je
inc
ds
imul
dec
loope
cmp
into
sbb
cwtl
jecxz
xlat
jae
cmp
adc
xchg
imul
std
jae
and
cmp
scas
pushf
push
adc
and
mov
shrl
aam
stos
jle
adc
ret
test
dec
rorb
cld
dec
push
sbb
jmp
loopne
xchg
cmp
test
sbb
add
or
jg
mov
and
inc
push
lds
lcall
and
jb
cs
adc
inc
nop
dec
cmp
pop
es
add
inc
xchg
or
add
movl
add
movl
movl
sbb
movl
mov
xor
mov
jmp
jnp
sbb
je
in
outsb
out
ret
jns
add
push
add
add
popf
push
lods
addb
and
lock
fcom
fcmovnbe
cmc
fdivrl
sahf
in
mov
lret
insl
iret
jne
arpl
fisttpll
ljmp
imul
adc
dec
sahf
daa
movsb
xchg
cli
mov
push
push
jg
xchg
ds
pop
repnz
pop
lds
cwtl
lea
xchg
daa
add
into
xor
dec
pop
std
xor
push
mov
and
jno
int
add
mov
adc
repnz
int
iret
js
dec
add
cmp
outsl
decb
lds
add
inc
xchg
aad
sbb
scas
aam
jo
xor
sbb
jg
add
fsubrl
sub
fsubr
lret
mov
divb
in
das
add
sub
sbb
push
loop
sbb
outsl
xacquire
test
ret
sarl
push
pushf
jle
lret
testb
clc
sbb
testl
push
jnp
roll
xchg
hlt
or
xchg
mov
jmp
adc
xchg
cmpl
sub
sub
addr16
or
push
cmp
pop
add
inc
movsl
lret
inc
cmpl
inc
mov
dec
enter
mov
shl
dec
push
popf
mov
inc
push
addr16
xor
int3
push
push
pop
leave
cs
rorl
je
xchg
sbb
test
mov
xchg
loope
cmp
inc
push
shlb
jecxz
xor
mov
add
insb
loop
mov
enter
in
test
call
sub
cmpps
lahf
pop
mov
ret
xchg
pop
lds
iret
sub
sub
ficoml
adc
stc
mov
repz
ficomps
daa
sub
add
add
jl
orl
jmp
push
push
pushl
push
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
sub
movl
cmpl
ja
jmp
push
call
movl
movl
movl
movl
mov
jmp
xchg
in
adc
shl
rorl
aam
add
push
add
add
fisttpll
sub
fiadds
cmp
xchg
and
cmpsl
mov
ljmp
xchg
sub
movsl
cli
call
sahf
xchg
xor
shr
mov
inc
sbb
insl
aaa
add
jns
jne
std
push
cmp
adc
dec
inc
or
fsubl
sbb
mov
ror
dec
loopne
mov
inc
xor
clc
popfw
adc
adc
adc
fcmovu
je
pop
mov
test
mov
pop
xor
adc
sbb
aad
mov
test
fdivs
xchg
test
out
imul
test
mov
into
ffree
cltd
loope
repnz
cmpl
popf
or
js
or
stc
stc
dec
mov
out
cs
outsb
rorb
call
xchg
fwait
inc
jbe
jbe
push
push
lcall
adc
jo
ret
sub
add
xchg
jg
or
jmp
mov
sbb
std
lock
subl
cmpsl
xorl
add
iret
cltd
add
lret
cmp
lahf
adc
sahf
lcall
sub
maxps
decb
jae
cwtl
xlat
mov
xchg
jecxz
jnp
mov
cwtl
test
mov
push
push
cmp
std
push
dec
lret
iret
pop
xchg
xchg
call
push
inc
mov
sub
push
push
into
dec
dec
push
fadds
scas
cmp
out
mov
sti
sub
fstpt
xchg
insl
adc
jmp
dec
fisttpll
popa
and
sub
lea
xchg
xor
push
mov
mov
inc
mov
adc
jecxz
push
push
je
mov
mov
andb
sub
adc
in
mov
sbb
sub
mov
mov
mov
sbb
mov
dec
mov
or
cmpl
jbe
sbb
jmp
push
pushl
call
add
mov
mov
imul
jmp
pop
out
mov
mov
mov
stos
test
adc
push
test
add
push
add
add
outsl
or
pushl
lods
out
push
mov
mov
lods
push
mov
aad
sbb
daa
pop
sbb
int3
nop
pusha
je
mov
adc
mov
ss
jmp
arpl
shl
mov
cmp
iret
add
ds
push
jno
xor
loop
push
push
push
cld
jnp
rclb
xor
jb
ret
jnp
jg
push
es
or
fwait
pop
repz
add
fnstcw
add
pop
and
mulb
loop
fnsave
jecxz
push
aas
pop
inc
and
aas
lret
sahf
adc
daa
dec
lret
sub
fsubl
sbb
loopne
xchg
inc
push
inc
bsr
cli
ljmp
pusha
and
xchg
lods
push
hlt
mov
mov
sti
xchg
mov
je
mov
out
cmp
push
in
sub
repz
mov
push
sub
dec
pop
push
mov
sbb
sti
dec
pop
dec
mov
jb
scas
pop
push
sbb
nop
cmp
insb
lds
adc
jno
mov
push
stos
jl
bound
jne
shrl
cmp
add
and
add
xor
cmp
xchg
shl
jae
dec
insb
fnsave
add
mov
and
mov
cmc
insl
hlt
xchg
fstp
mov
dec
mov
dec
dec
in
adc
push
push
fmull
mov
mov
adc
add
dec
pop
xchg
ffree
mov
scas
push
into
sub
add
lods
in
fbld
inc
dec
jp
push
mov
outsb
or
mov
dec
lea
andb
pop
arpl
leave
stc
pop
insl
in
lret
add
adc
fists
sub
mov
orb
int
sahf
adc
add
sub
sub
xchg
mov
mov
addl
imul
jmp
fwait
shlb
in
lahf
repnz
add
push
add
add
pop
mov
sti
stos
jmp
mov
in
repnz
xor
and
xchg
jle
mov
mov
stos
xchg
dec
out
inc
ljmp
mov
dec
lret
add
mov
mul
xor
iret
xchg
xor
mov
inc
sub
lds
ja
pop
outsb
push
sbb
adc
mov
nop
pop
mul
into
mov
push
xor
sub
lcall
inc
fwait
enter
fwait
sub
je
sarb
pop
push
xchg
cld
aam
leave
pop
lods
call
dec
and
jne
mov
call
mov
mov
cmpsl
mov
insl
fld
xor
stos
sbb
shll
mov
fsubl
and
or
mov
or
outsl
sub
push
ret
popf
sbb
jae
lock
xchg
add
fists
xor
cs
loopne
push
cmp
pop
shl
sub
push
daa
lods
mov
repnz
lods
cmp
fwait
mov
movb
cli
inc
ljmp
call
bound
mov
cmp
ss
inc
push
aas
movsl
pop
add
adc
sahf
jno
or
ret
stc
xchg
adc
popf
ljmp
adc
or
push
sbb
mov
pop
cmpsb
ljmp
pop
adc
fiadds
iret
pop
adc
xchg
jp
shrb
inc
add
xchg
dec
aad
sub
mov
rorb
jge
sti
jp,pt
arpl
dec
mov
out
sub
mov
jno
rolb
xchg
sub
ljmp
mov
insl
aaa
cld
xchg
xor
cwtl
xchg
cmp
out
dec
stos
xor
or
inc
shlb
test
ljmp
leave
rclb
push
add
add
xchg
fstp
jg
insb
int3
and
add
push
add
add
dec
mov
inc
lret
das
xchg
and
mov
or
je
jae
pop
mov
push
xchg
cmpsl
mov
imul
aad
add
fmull
ret
inc
push
mov
mov
cmp
xchg
orl
or
sti
push
repnz
xchg
notb
js
std
rolb
stos
mov
cmp
orb
pop
mov
das
es
cmp
scas
cs
cmp
jl
mov
mov
movsl
push
out
sahf
cmp
pop
test
rclb
dec
imulb
inc
mov
cli
scas
sbb
stos
mov
movsl
dec
aaa
push
pop
sbb
xchg
or
pop
cmp
xor
or
and
add
sub
xor
dec
movsl
loop
sub
addr16
negb
xchg
inc
rcrl
sbb
and
hlt
mov
out
or
lock
jg
cmp
jb
lds
in
jno
mov
mov
dec
in
shlb
je
outsl
cmp
pop
sti
mov
ret
dec
push
mov
cmp
clc
out
mov
pop
hlt
or
shrl
jl
pop
test
push
lods
xchg
cmpsb
inc
jno
notl
or
xor
das
sub
ds
lret
mov
cli
daa
sbb
enter
hlt
stos
inc
push
pop
pop
cmpl
pusha
fbld
cmp
add
push
test
push
jo
lea
test
xchg
dec
loop
mov
cltd
and
jecxz
push
leave
lret
mov
push
pop
cmp
xor
dec
std
xchg
xlat
pop
movsb
xor
push
jl
inc
aam
js,pt
addl
sub
xor
jmp
outsb
add
outsl
mov
push
cmp
cld
xchg
fiadds
add
add
add
or
pop
iret
enter
or
or
push
test
fimull
in
fcmovnb
jne
in
inc
aas
and
xchg
sbb
and
jno
pushf
bound
dec
mov
xchg
jp
push
loopne
ljmp
notb
loop
add
aad
dec
add
xchg
sub
sarl
xchg
movsb
push
inc
adc
filds
jno
cli
hlt
enter
inc
xor
xchg
insb
testl
mov
sub
mov
cld
and
sub
iret
rol
daa
mov
mov
dec
fmull
push
popa
cmp
int
mov
push
cmp
je
out
xchg
push
std
jmp
mov
pop
cmpsl
cli
push
loope
outsl
and
xchg
stc
adc
neg
add
mov
or
hlt
lret
loope
in
xor
and
aas
jo
sbb
push
dec
shl
dec
push
in
push
imul
fstpt
pop
jns
cmovb
mov
cld
sahf
movsb
cmp
sub
addb
gs
ret
push
in
das
mov
jge
loopne
test
popf
adc
in
and
lcall
push
mov
imul
xchg
inc
je
inc
mov
cmpb
loop
stos
ljmp
jle
pop
js
sbbl
mov
inc
lret
in
push
adc
cmp
cmp
adc
dec
daa
adc
mov
cmp
adc
push
cmp
jp
movaps
mov
idiv
and
pop
and
clc
in
aad
dec
inc
and
ja
mov
push
or
rcll
sbb
mov
loop
xor
and
push
mov
xor
addl
jmp
cmp
mov
and
mov
add
add
add
mov
test
dec
xchg
lret
cltd
adc
and
and
xor
mov
mov
inc
mov
jge
add
fisubs
add
lret
js
mov
sti
mov
inc
ja
pop
clc
cwtl
pop
mov
adc
daa
scas
cld
popf
dec
mov
lcall
jns
adc
xchg
pop
out
lret
sub
fisttps
fwait
mov
dec
or
out
adc
scas
mov
js
xor
loopne
jns
popf
jb
mov
cs
pop
stos
push
jns
xor
and
lret
push
fwait
mov
mov
repz
xchg
out
jge
lret
inc
hlt
xor
cmp
test
sbb
and
mov
rcl
and
push
pop
mul
adc
sub
movl
pop
lds
cwtl
stos
xor
mov
repz
cwtl
xchg
sahf
adc
div
mov
hlt
stos
jmp
aam
shrb
lahf
pop
adc
in
dec
xor
cmpl
testb
jl
pop
lods
mov
fiadds
push
lcall
pop
xchg
jno
sarl
enter
aad
or
aad
popa
shlb
movb
or
or
movsb
inc
dec
call
push
pushf
sub
stc
mov
out
mov
sbb
push
popa
out
jle
pushf
mov
mov
dec
push
fmul
or
cmpl
pop
xor
insb
sub
xlat
dec
nop
xchg
fs
mov
sbb
mov
cmp
inc
js
push
xchg
mov
inc
shll
inc
in
adc
xor
adc
imul
and
int
mov
and
cmpsb
jno
jge
add
sub
xor
subl
and
movl
cmp
movl
jne
sbbl
mov
cmpl
jbe
jmp
push
push
push
push
pushl
push
call
mov
jmp
movsl
dec
mulb
sbb
mov
add
add
dec
sub
sbb
in
rcrb
cmc
sub
lret
pop
jecxz
sub
or
mov
and
jl
not
jge
cmp
ret
mov
xor
push
jno
cld
pop
in
pop
sti
loop
push
icebp
cmp
outsl
test
fmull
cmp
xor
mov
movsb
leave
inc
or
bound
xchg
aas
push
pop
sbb
enter
cmp
mov
cld
sub
fnsave
dec
dec
sub
or
enter
lods
sub
jne
or
sbb
pop
xor
cld
mov
mov
mov
lds
inc
out
lahf
adc
cmpsb
xchg
sub
ret
mov
ljmp
bound
test
sub
ret
mov
in
ret
movsl
adc
jne
test
adc
pop
mov
out
push
inc
jbe
sets
insl
arpl
push
ffree
add
aas
add
bound
into
nop
rorl
mov
add
mov
inc
push
lahf
mov
pop
push
adc
push
stc
dec
inc
or
cmp
mov
and
enter
fsubr
mov
shl
sbb
or
jge
loopne
flds
pop
je
cs
jae
mov
sub
adc
lods
sti
test
cwtl
std
or
ljmp
cmp
jg
cmp
clc
clc
outsl
aad
sbb
sub
dec
aam
jo
daa
xchg
jo
pop
adc
fistpll
ljmp
jle
jae
imul
movsb
pop
push
dec
mov
fildl
fsubrl
insl
mov
and
add
scas
sub
or
fstp
in
insb
cmp
adc
out
mov
icebp
cmp
into
shrd
shr
mov
jmp
xchg
cmp
jns
test
leave
mov
add
push
add
add
dec
outsl
rcrb
out
lea
sub
push
cs
or
fimull
popf
repnz
mov
add
add
daa
mov
cmp
dec
inc
arpl
rcll
push
in
sbb
mov
pop
sarb
scas
jp
xchg
icebp
mov
mov
xlat
mov
aad
adcl
test
push
jne
mov
lods
cwtl
in
push
mov
daa
jp
cli
incb
ficoml
hlt
mov
mov
jecxz
addr16
ficoml
pop
xchg
xchg
jmp
mov
test
push
call
outsb
stos
sti
mov
xorb
or
jae
lods
lea
inc
adc
icebp
or
pop
cmc
adc
adc
inc
pop
stos
mov
dec
adc
xchg
jno
cmpsb
xchg
jne
insb
insl
cmc
xor
nop
ja
push
frstor
mov
lcall
pop
test
dec
cmp
push
pop
pop
mov
mov
ljmp
rcrb
push
and
test
push
test
fcompl
fdivrl
sub
push
loop
fildll
lock
pop
dec
pop
push
jecxz
xor
neg
cmpsl
dec
push
jne
and
pop
mov
insl
dec
aaa
enter
in
dec
pop
cltd
mov
int
fidivl
int3
mov
fsubrs
push
sub
bound
jp
jae
mov
push
jnp
mov
pushf
pop
cld
inc
xchg
sti
mov
idivl
push
pop
lods
popa
push
bound
cmc
cmp
push
adc
xchg
cli
push
lea
int
xchg
push
inc
insb
arpl
jne
mov
repz
inc
adc
ret
loop
push
cmpsl
mov
jno
sbb
or
int
lret
es
les
sub
mov
ficoms
mov
shl
xor
sbbl
jmp
mov
into
push
shr
aam
rolb
add
add
add
arpl
inc
mov
adc
std
js
jecxz
push
pop
pop
and
xor
fildl
imul
cvttps2pi
xchg
dec
cmp
push
sbb
push
jl
stos
dec
xchg
call
pop
ds
push
andl
jno
jnp
mov
mov
incl
outsl
out
fildl
mov
xchg
add
push
inc
xor
xor
testl
mov
ret
lcall
pop
imul
jmp
addb
movsl
add
aad
sbb
dec
daa
push
push
sbb
int3
scas
gs
movb
jo
in
loopne
cld
jle
mov
jne
stos
fcmovnb
xor
js
fnstcw
lods
test
push
enter
xlat
add
call
jge
inc
xor
mov
dec
xor
mov
out
enter
jecxz
fstpl
pushf
out
shll
in
push
loopne
mov
lock
and
out
adc
push
dec
ret
loopne
or
movsb
sahf
cmp
mov
lret
add
dec
imul
repnz
xor
int
loopne
stos
iret
inc
into
imul
fldenv
push
sub
xchg
adc
jnp
daa
mov
iret
scas
or
adc
shl
iret
lret
and
mov
mov
movsl
popf
lods
shrb
and
repz
xchg
jne
sbb
leave
jne
pusha
loope
or
adc
dec
inc
in
enter
xchg
mov
adcb
pop
xor
es
repz
dec
ret
xor
inc
adc
mov
fs
insl
js
jo
push
add
xor
pop
test
xor
in
jmp
ret
icebp
sbb
cld
fisttpl
dec
jg
in
push
adc
xor
or
movl
mov
movl
cmp
movl
jne
cmpl
jge
sub
jmp
push
pushl
call
mov
mov
xor
mov
jmp
inc
fnsave
mov
add
imul
add
gs
mov
shl
imul
test
lods
sub
push
mov
out
adc
arpl
dec
pop
jno
fcompl
jl
cmp
imul
repz
mov
pop
dec
jns
or
daa
lods
scas
iret
xchg
xchg
fnstcw
pop
inc
sbb
lret
iret
sahf
mov
stc
sar
jle
fsts
jg
mov
add
movsl
sub
std
mov
test
mov
sub
mov
mov
ja
adc
push
add
movsb
dec
jae
pusha
cmp
push
add
dec
xchg
lcall
movsb
int
lret
cld
pop
aas
movsl
cmpsl
int
sti
mov
cmc
xor
in
sbb
rclb
inc
sarl
daa
pop
loopne
ljmp
and
mov
sbbb
data16
jbe
or
test
ja
int3
fdiv
jge
movups
stc
fistl
cmpsl
daa
xor
pop
inc
mov
jo
sbb
jnp
loopne
add
mov
sub
insl
stos
scas
sub
cmp
mov
cmc
or
push
lods
lahf
jg
adc
and
mov
iret
imul
xchg
dec
call
in
imul
int
cli
xchg
adc
xlat
pusha
push
sbb
mov
test
cmp
loop
mov
cwtl
cmp
inc
sbb
fnsave
lcall
jnp
fnstenv
push
sbb
push
jecxz
mov
adc
add
mov
rcll
mov
movsb
testl
loope
sbb
or
mov
sti
dec
arpl
cmp
pushf
sub
in
pop
sbb
fldenv
stc
insb
hlt
testl
sub
adc
and
xor
movsb
dec
mov
xor
or
mov
jmp
mov
inc
mov
lds
cltd
add
add
add
aam
sahf
jb
jns
sti
jns
sub
loopne
loope
in
add
nop
and
bswap
xor
jge
stos
jge
jnp
fimull
cmp
into
push
incl
sahf
adc
shlb
stos
rcrb
dec
or
xchg
jge
inc
jmp
repnz
xchg
outsl
jg
sbb
mov
sarl
negb
lock
scas
mov
jg
das
sbb
dec
add
prefetchnta
adc
xor
ret
push
adc
sarl
inc
or
jmp
xor
mov
jno
push
xor
aas
mov
lret
mov
mov
add
loope
xchg
ljmp
lahf
inc
leave
das
jno
mov
push
imul
dec
adc
fisubrs
repz
je
mov
sar
sub
push
pop
nop
daa
lcall
jle
je
adc
cvtps2pd
push
mov
adc
dec
adc
jg
fldt
cmp
jge
jnp
mov
les
sbb
mov
lods
jb
and
dec
imul
dec
fdivrs
pop
in
in
pop
xor
mov
adc
cmpl
dec
push
cli
aaa
movsb
nop
jmp
mov
pushf
ja
inc
add
and
scas
cmp
xor
pop
jecxz
mov
add
pop
int3
test
xorl
pop
mov
jmp
mov
cmc
mov
inc
or
icebp
outsb
and
mov
outsl
test
dec
out
test
sahf
stc
leave
mov
dec
jae
ret
dec
aad
xchg
daa
test
add
stos
ret
stc
inc
cli
icebp
sbb
pop
inc
push
ds
ret
adc
mov
pop
es
inc
outsb
pop
stos
push
aaa
mov
adcl
shrd
andl
mov
adc
jmp
mov
sti
out
cmp
jge
daa
push
repnz
shr
add
add
add
test
mov
mov
pop
push
xor
loopne
xor
jno
cmp
inc
cmpsb
cmp
pop
das
push
add
icebp
sub
cmp
mov
or
cmp
shlb
dec
mov
clc
scas
pop
cmp
jne
pop
aas
sbb
xchg
loope
sarb
xor
clc
push
inc
fadd
xchg
call
adc
pop
popa
lock
add
das
aad
fsubrl
insl
mov
push
idivb
or
jbe
es
fs
mov
mov
or
push
test
je
das
js
xchg
and
adc
movsb
xor
fidivrl
sbb
mov
mov
pop
test
lock
pusha
es
insb
jns
pop
or
jbe
dec
adc
xchg
xor
aam
add
jmp
push
push
test
ljmp
jbe
rcl
push
pop
pop
xchg
int3
xchg
fstpl
or
mov
inc
push
mov
out
pop
push
adc
mul
dec
lahf
add
icebp
mov
enter
lahf
pop
imul
dec
dec
dec
push
in
or
push
inc
sub
cmp
mov
or
mov
or
pushf
jb
hlt
movsb
repnz
dec
push
mov
popa
pop
pop
mov
xchg
push
push
repnz
and
stos
rorl
cmp
enter
dec
inc
sbb
add
sti
test
cmp
dec
xchg
popf
shrb
adc
jnp
fisttpl
sbb
mov
jmp
add
mov
mov
push
sbb
sub
inc
frstor
cmp
mov
ds
jns
cmp
jbe
or
lods
and
inc
jne
sbb
arpl
xchg
pop
sbbl
add
lock
and
leave
sub
and
repz
in
addl
shr
orl
jmp
pop
cmc
add
ljmp
aam
xchg
sarb
add
push
add
add
or
cs
sub
es
jbe
in
sub
xor
setb
dec
imul
pop
mov
cmp
outsb
test
aad
cmpsl
add
cwtl
inc
sti
and
mov
movhlps
ret
add
push
jns
mov
insl
int
test
dec
add
mov
jo
or
cmp
pop
cmp
mov
test
int3
or
fistpll
popa
insb
bswap
dec
leave
cmc
mov
add
adc
rcr
repnz
mov
mov
mov
addr16
mov
aam
std
test
and
add
jge
sbb
imul
mov
mov
pop
mov
jge
inc
dec
testb
sbb
notl
pop
push
adc
cmc
iret
adc
push
mov
jge
cmp
scas
add
jp
dec
test
loopne
sahf
js
xchg
xchg
xor
aad
adc
dec
pop
xor
mov
jl
loope
ficoms
scas
cld
add
fsubr
test
cmp
mov
sahf
jb
rcll
lret
rolb
push
mov
shlb
lahf
add
inc
mov
std
mov
stos
jle
mov
js
jae
cs
out
je
imul
or
dec
pop
jne
into
lret
testl
popf
scas
mov
push
jne
sbb
fwait
add
inc
fs
jbe
rorb
shrl
jmp
test
hlt
jnp
xchg
push
cmp
jns
xchg
pop
inc
inc
pop
jbe
cmc
fdivrl
and
lahf
movsb
mov
inc
orl
lret
lret
in
sub
add
add
mov
imul
sbb
or
or
inc
pop
jmp
mov
pop
sbb
fildl
add
inc
add
push
add
add
in
jmp
and
lock
push
add
add
test
jb
popf
xchg
in
loopne
xor
in
mov
xor
ds
xchg
add
xor
sbb
push
insb
sti
popf
mov
nop
mov
movsl
ret
push
jle
int3
add
xor
and
comiss
nop
push
pop
mov
mov
insl
ficoml
inc
cld
push
imul
or
rorl
rorb
push
pop
jne
pop
mov
sub
mov
sbb
pop
shll
mov
lds
bound
testl
shlb
repz
push
add
shll
jle
sub
inc
sub
in
push
fcoms
insl
cmp
dec
andb
push
mov
lret
add
push
std
add
xor
xor
popf
aad
push
fiaddl
sub
mov
loopne
mov
in
push
xchg
dec
jl
adc
jno
roll
jmp
cmp
fmuls
out
dec
cmp
out
dec
mov
mov
repnz
xor
xchg
sub
pop
jge
jp
jo
mov
dec
in
cs
xor
and
sbb
hlt
sbb
jo
rcr
mov
subl
jo
mov
inc
test
cld
jno
cmp
int3
pusha
or
dec
fwait
inc
xchg
adc
aam
in
ja
pop
jo
into
xor
sbb
dec
es
fxtract
or
sbb
dec
aam
push
mov
es
jae
push
push
and
pop
xor
jge
aas
xchg
push
mov
shll
enter
mov
jnp
repz
std
test
xor
and
mov
out
hlt
cltd
ret
aas
sub
clc
scas
lret
outsb
jno
lahf
xchg
xlat
dec
orb
mov
in
subl
shl
mov
add
sub
jmp
adc
mul
iret
pop
push
js
jp
std
shl
add
push
add
add
aas
xchg
pop
and
gs
xchg
loopne
std
fmuls
arpl
call
mov
sub
xchg
imul
add
loope
daa
jmp
jle
sbb
cmp
movsb
subb
push
insl
lcall
jo
sbb
inc
jge
fiadds
push
cmp
int3
pop
jmp
push
insl
sub
push
cmpsb
add
stos
mov
mov
jo
test
bound
sbb
stos
pop
sbb
lods
insl
xor
nop
enter
inc
jae
xor
pop
jbe
pusha
outsb
dec
stc
xor
mov
adc
and
in
add
loop
ds
shll
arpl
push
mov
popa
arpl
fidivl
insl
sbb
adc
sbb
push
mov
stos
and
nop
mov
or
push
ja
or
pushf
ret
jmp
stos
jmp
jmp
pop
ficompl
push
shl
mov
sub
dec
add
loopne
stc
call
incb
addb
add
cmpsl
sub
pop
mov
push
stc
inc
call
dec
mov
rcrb
aad
jnp
xor
add
fcom
or
pushf
dec
cwtl
add
inc
and
push
push
das
dec
mov
jmp
sub
mov
mov
xchg
movsb
push
mov
aas
imul
sbb
dec
ret
sbb
add
lea
add
ds
cwtl
es
movsb
pop
inc
cmp
cmp
push
add
fwait
jns
sub
rcrl
and
push
mov
lods
xchg
ret
lods
mov
sbb
mov
cmpsb
das
mov
mov
mov
dec
inc
push
rorb
movsb
pop
jmp
divl
lretw
xor
xor
jmp
adc
decb
mov
lock
jge
dec
jne
xchg
and
mov
adc
mov
add
jmp
aaa
mov
dec
mov
fiaddl
mov
hlt
add
push
add
add
imul
cli
adc
sbb
scas
icebp
jp
ds
fmull
pushf
daa
sub
pop
xchg
cmp
sbb
sub
les
mov
sub
cmpl
add
lods
std
in
out
fmuls
insl
or
or
int
xor
xor
cwtl
adc
xor
xchg
push
xor
jae
int
jmp
aas
cvtps2pi
push
pop
test
xor
xor
outsb
test
push
mov
inc
xor
pop
mov
aam
fadd
call
mov
inc
daa
inc
jno
testl
in
inc
sbb
dec
or
lods
push
fisttpll
and
loopne
ss
js
inc
shl
xchg
addr16
fists
jbe
xchg
test
sub
dec
pop
mov
adc
cmp
mov
add
imul
fists
push
loope
adc
mov
rcll
push
std
and
mov
xor
fwait
cmp
sub
out
ret
mov
test
std
fwait
js
sbb
and
add
ffree
bound
xchg
dec
sbb
hlt
push
sbb
sub
addr16
arpl
shl
mov
in
adc
sbb
aad
je
lahf
mov
into
inc
stos
pusha
aad
ret
shr
push
add
js
rcrb
ror
dec
lock
cmp
mov
dec
int3
xor
jbe,pn
jbe
repnz
cmpsl
int3
repnz
cs
lea
sub
mov
sbb
pop
test
std
xor
or
mov
adcl
in
xor
fnstsw
add
sbb
imul
daa
insb
mov
mov
xchg
lock
adcb
pop
sti
pop
xor
or
add
adcl
jmp
ss
sbb
mov
cltd
int3
dec
fsubs
fcomip
add
push
add
add
loope
jmp
xor
or
js
cld
rorb
jg
lcall
cmp
mov
sahf
cmc
dec
lods
aam
push
data16
add
int
sarl
xchg
cli
dec
gs
lds
int
lods
incl
hlt
pop
cmp
mov
enter
ret
mov
jmp
daa
fsubs
dec
decl
sbbb
shr
into
leave
mov
cld
call
or
in
xor
shlb
inc
or
notb
lea
fidivs
mov
push
mov
inc
mov
mov
scas
mov
lret
sbb
dec
test
je
lods
dec
cwtl
js
ss
inc
adc
popf
jge
neg
xlat
fcomi
lahf
adc
xchg
add
repnz
or
push
imul
inc
xchg
cld
fisubs
or
cwtl
jg
dec
sar
add
js
jb
or
or
sub
inc
and
cmp
std
loope
cmpsl
lds
cmc
addl
mov
mov
xchg
inc
dec
cli
push
std
shl
popa
jge
stos
xcrypt-ofb
cmpsl
scas
testl
outsl
pushf
imul
pop
mov
adc
scas
aas
inc
or
xlat
flds
inc
cmp
adc
fwait
sub
shl
push
movsl
je
add
sbb
insb
popf
in
pushf
fstps
jle
xchg
leave
jno
adc
imul
movsl
ret
pop
or
outsl
ret
pop
pusha
sub
jae
cmp
xor
testb
jnp
adc
fiaddl
add
cs
or
jns
scas
xchg
mov
into
or
arpl
mov
xchg
nop
xchg
sub
xchg
push
xchg
adcb
ljmp
add
mov
mov
cmpl
jbe
orl
jmp
pushl
pushl
call
mov
jmp
push
pop
scas
fsin
stc
ja
or
mov
adc
in
add
push
add
add
fidivrl
push
or
cld
shll
loopne
xchg
cmp
fdivrl
adc
jo
roll
and
hlt
or
dec
pop
push
or
mov
sbb
faddl
jp
lcall
push
mov
mov
outsl
fsubrs
mov
imul
mov
enter
das
lret
dec
xchg
pop
das
test
or
xchg
pop
mov
cmpsb
test
add
cmp
loop
sub
sub
cmpsb
das
pop
sub
rcr
add
fadd
xchg
mov
scas
in
fwait
inc
test
xchg
sbb
mov
mov
imul
js
fwait
int
add
shlb
mov
cltd
int3
pop
int3
call
arpl
xchg
jge
jns
xor
sub
and
fs
daa
popf
mov
jl
jo
test
pop
sub
mov
mov
fimuls
jmp
xor
adc
scas
loopne
adc
push
xor
xchg
xor
enter
pop
xchg
divl
ljmp
mov
es
pop
das
popf
rcl
xchg
push
idiv
pop
xor
add
shlb
fisubs
push
cmp
push
and
push
lods
out
ror
pop
jns
xor
clc
stos
cmp
inc
sbb
mov
inc
add
inc
push
aam
jbe
clc
inc
sbb
dec
jae
mov
std
int3
push
mov
loope
mov
gs
xor
push
cli
xor
test
lods
ja
fstp
pop
cld
jbe
dec
rorl
push
loope
inc
mov
addb
aaa
cmp
jg
stos
xchg
inc
repnz
lea
adc
mov
test
xor
lds
scas
cli
fdivr
adcb
shrd
jmp
ficompl
std
mov
cmp
insl
jmp
add
push
add
add
pop
and
ret
es
std
sub
add
jle
imul
xchg
rol
mov
cmp
loope
adc
pop
or
lahf
add
dec
push
push
mov
cld
dec
or
add
xor
loopne
mov
insb
popa
pop
and
movsb
inc
fidivl
out
popf
popa
fimuls
insb
xchg
hlt
nopl
bnd
or
dec
push
daa
pop
add
pop
add
push
jns
ja
mov
movsb
sbb
test
or
test
std
or
fisubrs
inc
pop
std
sbb
xor
mov
push
data16
xor
jecxz
mov
or
stc
adc
dec
pop
stos
dec
leave
pop
xchg
bound
jns
jmp
mov
gs
mov
fistpl
ljmp
imul
repnz
adc
scas
in
mov
shr
lock
fistpll
lods
cwtl
iret
out
inc
fucomp
adc
mov
mov
inc
mov
add
stos
into
into
in
sbb
aam
dec
bnd
gs
or
call
sub
xchg
mov
dec
cmp
jg
in
pop
mov
sub
add
scas
lock
in
mov
fwait
leave
and
in
nop
mov
shr
andb
lea
add
jb
aaa
inc
and
xchg
addl
jb
add
jbe
iret
mov
sbb
rorl
ja
jae
popf
cld
inc
frstor
ja
jecxz
lods
xchg
outsl
gs
fadd
push
pop
dec
pop
lods
into
dec
ret
in
xor
negb
std
inc
pop
test
jmp
push
jns
push
push
add
pop
jnp,pn
lock
and
mov
jae
pop
bound
call
add
push
add
add
lahf
sub
mov
jp
dec
push
push
xchg
push
icebp
cld
add
push
add
add
mov
aaa
inc
nop
or
gs
adc
je
or
test
jl
sub
in
loop
imul
dec
pop
leave
push
jmp
mov
push
sahf
xchg
subb
mov
or
subl
cmpsb
stos
aad
cmc
pop
sahf
fneni(8087
fwait
sahf
lods
mov
xchg
or
pop
pop
cmp
adc
lret
mov
sti
push
pop
jge
push
sub
es
std
sbb
leave
shll
inc
pop
mov
mov
jg
and
jb
das
mov
or
std
aad
xchg
push
lods
jb
jle
in
mov
add
push
call
dec
aas
mov
jb
mov
aam
or
cmc
dec
add
mov
imul
push
in
cld
fwait
stos
mov
inc
imul
out
cmp
sbb
aad
int3
fidivrl
xor
aaa
clc
rcl
mov
mov
bnd
dec
push
xor
out
ret
cmp
aas
pop
fcoms
jo
and
lcall
cmp
aaa
pop
mov
jno
imul
dec
sbb
div
sbbl
pop
xchg
test
sbb
xor
sbb
ljmp
dec
jnp
iret
icebp
rorl
jl
sbb
and
ljmp
outsb
pop
mov
loopne
fildl
loop
out
insb
fcom
lret
hlt
fdivl
jle
leave
lahf
inc
mov
jbe
cmpsl
add
outsb
xchg
push
jns
dec
push
sub
mov
xor
xchg
push
fsts
mov
data16
nop
in
outsb
mov
ljmp
pop
and
jmp
mov
sti
mov
push
push
scas
insl
lret
add
incb
add
add
add
scas
inc
mov
mov
cvtdq2ps
add
mov
jno
pop
push
ds
pusha
or
roll
mov
incb
inc
inc
les
sub
mov
sbb
sbb
fsubrp
sti
cmp
mov
and
dec
pusha
ja
jns
lea
xorb
fwait
sub
inc
lcall
mov
mov
stos
jo
and
pop
mov
iret
adc
mov
xchg
lods
int
shll
cs
rorl
ja
jmp
pop
es
jge
cmpl
push
and
dec
lddqu
lcall
hlt
xlat
or
lea
or
sub
xor
into
call
cmp
sar
xor
shrl
lret
push
inc
push
and
dec
sub
lahf
fidivs
and
push
sub
scas
out
mov
es
iret
xor
mov
cmp
pop
pop
int
cs
xlat
orl
jg
sub
cld
sub
adc
popf
push
mov
push
mov
cwtl
sbb
jg
add
jecxz
popa
loope
in
add
sbb
fs
test
mov
and
lcall
pop
jne
pop
and
xor
add
and
xor
gs
add
jns
ficompl
mov
xchg
lret
ja
roll
out
aad
xchg
outsb
sbb
rcr
mov
shrb
jmp
or
dec
mul
fbstp
cmp
xchg
sub
out
or
loop
ja
fcompl
out
mov
push
pushf
cs
pop
mov
dec
fadds
ljmp
ret
mov
sbbl
shrd
adcl
shr
subl
mov
cmpl
ja
jmp
push
push
push
call
mov
mov
xor
jmp
cld
sbbb
jg
decl
mov
add
add
add
add
dec
fmul
sahf
into
sbbb
and
sub
inc
les
pop
sbb
dec
mov
jo
loopne
mulb
jmp
imul
in
jge
je
call
push
mov
fistps
out
sub
out
mov
mov
fmulp
inc
cmpsb
or
test
mov
sbb
mov
push
jns
dec
sbb
lods
cmp
lods
jecxz
insb
lods
sbb
xchg
cwtl
cwtl
lret
popa
lods
rcll
addr16
jecxz
xor
insl
cmp
push
sbb
ret
xlat
bound
setne
jl
mov
and
imul
pop
push
xchg
test
push
push
add
pushf
popa
mov
cmpsb
imul
nop
fucom
mov
rclb
roll
dec
in
inc
fildl
inc
adc
shlb
mov
mov
jnp
xor
ds
test
mov
mov
shrl
mov
insl
cs
sub
test
mov
inc
dec
in
xor
jl
xor
test
sbb
jp
inc
sbb
or
mov
and
inc
and
xchg
sub
inc
and
mov
mov
jne
fwait
movsl
xchg
xchg
jo
fisubrs
add
int3
mov
xor
mov
imul
shll
lret
push
pop
mov
inc
xchg
xchg
cs
orl
test
and
cli
xchg
out
out
pop
cmp
mov
inc
inc
dec
imul
lahf
adc
lods
xchg
je
pusha
push
xor
cmpsl
xchg
xchg
dec
fs
push
inc
adc
jnp
test
mov
lds
out
cmpsl
ds
aad
jb
fisttpl
pop
in
loop
lea
jmp
xor
lods
jmp
out
ja
jns
testb
cltd
xor
add
add
add
add
mov
xchg
aam
std
xor
clc
push
insb
lret
insl
or
test
xor
inc
mov
or
in
pop
mov
xchg
orb
inc
and
aad
sbb
in
and
cltd
xor
jecxz
cmp
dec
and
imul
jnp
clc
inc
cwtl
push
fwait
fwait
imul
cmpsl
call
jnp
mov
ret
mov
mov
and
ret
inc
pushf
adc
cwtl
stc
loop
int
add
mov
iret
in
xlat
nopl
das
dec
mov
inc
arpl
hlt
jo
lret
dec
inc
fwait
mov
stos
jmp
push
push
mov
pop
adc
clc
rorb
and
in
mov
mov
inc
fimuls
adc
out
pusha
add
fsubs
pop
iret
subl
ret
mov
mov
fwait
pop
les
sti
les
imul
add
xor
mov
mov
std
xchg
aaa
or
rcr
icebp
ss
dec
jmp
cmp
ret
movsb
insl
jnp
xor
push
repnz
test
pop
inc
outsb
sbb
xchg
call
xchg
sub
jo
sbb
repnz
inc
ja
jge
inc
xor
paddusw
and
push
jmp
sti
out
sub
test
shl
inc
lret
outsb
icebp
test
in
mov
icebp
adc
fstps
dec
add
mov
push
pop
and
adc
ret
xor
add
mov
cltd
push
sbb
mov
out
jbe
and
dec
or
push
xorl
pop
leave
mov
mov
xchg
jae
adc
sub
test
push
mov
jnp
addl
add
add
add
mov
outsl
pop
mov
cmp
add
add
icebp
dec
sahf
xlat
adc
repz
int3
mov
fcmovnb
lret
nop
pop
fldcw
clc
sbb
mov
cwtl
sarb
cltd
fcoms
jb
add
mov
pop
pop
xor
lahf
out
sub
mov
jnp
xor
dec
addr16
movsb
cmpsl
cmp
inc
aad
sahf
mov
aaa
inc
mov
in
inc
xchg
or
loopne
dec
subl
inc
lods
fdivl
mov
inc
mov
data16
fstp
pop
pushf
jp
pusha
fldl
aas
repz
dec
jmp
idivl
shrd
sarl
roll
std
movl
adc
mov
mov
lea
inc
xchg
leave
and
inc
push
jg
xor
inc
mov
mov
mov
mov
sub
andb
cmpsl
jns
insb
jge
dec
adc
aam
or
sbb
insb
repz
lret
repz
xchg
push
bnd
xor
pop
je
mov
aam
mov
push
sahf
jbe
lea
shl
dec
stos
dec
mov
sub
pusha
sti
test
outsb
cmc
xor
cmp
sub
roll
icebp
into
add
cmc
jle
cmc
stos
push
xor
fisubs
jl
sbb
movsb
push
mov
aad
test
cld
cmpsl
jge
frstor
fcmovnbe
sbb
leave
xchg
in
mov
lods
sub
or
leave
shll
jp
in
pop
jb
sub
fidivrl
lods
mov
adc
mov
fucom
mov
mov
push
inc
or
cs
out
or
std
pushl
ret
sbb
push
push
mov
cmc
jnp
or
outsb
inc
add
xchg
and
xchg
cmp
stc
stos
dec
push
aad
jne
ret
mov
repz
ret
cli
cli
push
mov
fmulp
lock
mov
stos
shrd
shr
cmpl
jb
incl
jmp
pushl
push
pushl
pushl
push
call
jmp
nop
pushf
mov
cmc
std
cld
iret
jnp
rcrl
cs
sysret
add
push
add
add
int
fisttps
jns
into
lret
ljmp
clc
test
xor
cmc
daa
pop
jmp
ds
dec
cmp
outsb
mov
xchg
scas
sbb
or
shrl
or
jl
xor
adc
adc
in
call
mov
pop
and
js
mov
fistl
or
cmp
xor
push
loop
jp
hlt
jl
mov
dec
inc
dec
xlat
mov
roll
shlb
stos
adc
aas
xchg
sub
cmpsl
and
rorb
mov
mov
xor
xchg
inc
jbe
push
mov
or
mov
mov
lret
out
pop
iret
mov
inc
lods
cmp
mov
add
and
cmp
adc
xlat
out
lcall
jmp
notl
push
hlt
loope,pt
scas
pop
outsl
in
fistl
pusha
les
loope
sub
arpl
mov
loopne
call
add
cli
pop
push
in
inc
data16
pop
in
and
dec
mov
dec
fstps
shl
or
sti
inc
fnstcw
in
fcompl
xchg
into
inc
jb
dec
sbb
and
pop
daa
inc
xor
jle
sub
cmp
std
mov
incl
leave
mov
xor
mov
popf
outsb
adc
xor
ja
jmp
das
les
mov
add
cltd
aaa
daa
loope
lcall
lahf
rcl
and
xchg
jo
jae
push
xor
jle
pusha
mov
leave
cmpsl
cmp
sbb
jp
roll
push
inc
sbb
in
rcll
stos
int
dec
movsl
jmp
lahf
lds
and
daa
into
ja
out
bound
cmp
js
adc
sbb
xchg
aam
dec
hlt
pop
icebp
mov
mov
mov
jmp
add
sti
aad
ss
mov
es
push
add
add
mov
sbb
leave
gs
mov
in
or
mov
inc
call
push
add
xchg
mov
jno
rclb
mov
mov
push
or
push
jb
imul
sbb
inc
int
cmpsb
mov
add
lods
jmp
clc
fstpt
jmp
popf
xchg
push
ljmp
xlat
push
ja
jmp
cmp
jne
dec
lret
mov
ja
cmp
xchg
inc
mov
adc
xor
lret
mov
ljmp
sbb
lds
mov
sti
mov
sahf
cmp
into
jae
mov
aas
roll
out
test
jle
jmp
fcmovne
insl
mov
sbb
mov
inc
enter
sub
daa
sub
jmp
xchg
inc
jge
jbe
pop
or
cs
pushl
stos
pop
jecxz
pushf
and
mov
or
pop
push
mov
arpl
sub
nop
enter
into
shl
or
lret
rcr
push
adc
lock
cld
jno
jns
cmp
imul
sahf
ja
pop
std
add
sbb
pop
enter
pusha
je
call
or
xchg
js
cmpsb
fsubl
adc
xor
add
cmpsl
loope
inc
pop
xchg
loopne
test
jns
ds
pop
lods
iret
cli
ds
cmp
mov
ljmp
sahf
fcompl
dec
mov
fsts
int3
or
les
mov
pop
dec
add
push
test
cmc
dec
out
pop
pop
jecxz
icebp
out
in
cmp
mov
insb
mov
xchg
out
adc
dec
xchg
lahf
mov
cmpsb
enter
repz
jno
int3
aaa
push
call
cli
jb
movsl
inc
out
cmpsb
clc
hlt
daa
jmp
fbstp
jne
inc
adc
dec
in
fdivs
rorb
in
adc
jmp
inc
add
jecxz
movzbl
xor
imul
mov
adc
mov
shrd
addl
mov
mov
xor
shr
orl
mov
adc
mov
xor
jmp
mov
fidivl
std
sti
cmp
add
add
add
add
testl
xchg
xor
movsl
lcall
aad
scas
addr16
stos
ja
jp
xchg
dec
adc
ret
fstpl
scas
adc
shll
or
into
sbb
cmp
int
mov
es
sbb
fs
lea
xchg
rcrl
cli
stos
mov
enter
push
outsl
aas
rclb
sub
hlt
movl
inc
cmpsl
les
and
daa
mov
mov
and
push
or
dec
daa
imulb
test
sbb
ret
leave
cmp
jo
xchg
jno
repnz
ja
stc
cmp
repnz
cmp
into
enter
dec
les
lcall
shll
jnp
shll
in
dec
rcrb
xchg
and
rcrb
ficompl
mov
sbb
jne,pt
sub
repz
aam
arpl
fcmovnbe
mov
mov
mov
mov
and
jne
mov
pop
lret
or
mov
and
xchg
sahf
lcall
cmp
push
loope
out
jmp
or
or
sahf
addr16
add
jmp
arpl
add
stc
mov
ds
test
nop
add
xchg
or
and
inc
inc
push
pushf
jb
push
add
jbe
movsl
je
cli
call
gs
xchg
lods
arpl
loopne
pop
out
jmp
pop
push
cs
pop
lock
aad
in
mov
les
or
rorl
fdivs
mov
imull
adc
xchg
mov
mov
push
sbb
jecxz
xor
js
jle
dec
dec
mov
lds
adc
clc
mov
icebp
aas
mov
jecxz
orl
sub
not
mov
cmp
mov
movl
jmp
mov
ljmp
mov
cli
insl
and
add
or
aaa
fimuls
negb
or
mov
clc
mov
loop
mov
jb
sbb
ret
frstor
cmp
inc
ljmp
loopne
push
ds
cmp
or
jo
adc
orb
aad
popa
int3
cmp
dec
jle
incl
gs
jns
adc
lret
leave
outsl
mov
mov
out
data16
push
xchg
dec
jge
repnz
insl
push
dec
fs
or
sbb
jg
jo
call
into
fwait
shl
rclb
push
ret
mov
popa
cmp
in
mov
ljmp
cmp
lds
cmp
clc
imul
loop
out
xor
jmp
xchg
loopne
or
pop
or
or
shll
adc
rcl
cmp
das
stos
and
push
push
adc
scas
outsl
out
aad
divl
leave
pop
je
mov
fstl
cmp
sbb
jecxz
cwtl
ss
xor
mov
xchg
mov
gs
popa
and
xor
push
add
pop
repnz
jnp
lcall
push
sub
lret
pop
fs
mov
clc
ret
sahf
ljmp
fwait
pop
cmp
dec
mov
pop
cmp
je
push
jmp
add
lods
lods
add
push
mov
sahf
cmp
insl
daa
push
cs
cmp
push
rclb
mov
addr16
in
andb
xor
je
xchg
paddusb
cmpsl
and
jne
hlt
mov
mov
inc
insb
add
aaa
rorl
mov
fstpl
ret
das
lahf
inc
popf
xchg
lahf
adc
push
hlt
shrb
test
xorl
and
nop
jnp
pop
sbb
jmp
mul
jg
iret
push
and
sbb
mov
jg
add
jmp
hlt
sub
ljmp
sti
sub
mov
lar
push
add
add
lods
popa
test
cld
cld
gs
repz
xchg
xchg
push
cltd
cs
dec
inc
adc
outsl
cmp
or
mov
xchg
and
inc
add
out
in
or
dec
push
les
hlt
mov
ljmp
inc
scas
lcall
mov
sti
and
aad
sub
addr16
inc
dec
loope
mov
shrl
sbb
int
hlt
clc
sbb
dec
jmp
imul
leave
stos
push
loope
xchg
and
idivl
bound
lcall
jbe
dec
das
je
jae
push
out
sbbl
mov
test
jecxz
dec
push
mov
add
lods
or
sbb
dec
aaa
add
rclb
aaa
cmp
xchg
fnstcw
fmull
jmp
and
and
mov
std
mov
mulb
or
dec
daa
stos
into
mov
fdivrl
push
lahf
mov
cmp
sbb
loop
jns
out
movl
sbb
add
pusha
mov
mov
push
or
jle
into
arpl
mov
push
loope
push
mov
test
xchg
fdivrs
pop
sub
rdtsc
out
mov
and
mov
in
xchg
or
mov
in
aaa
xchg
adc
xchg
xchg
in
cmp
lds
jl
lret
push
fistpll
add
add
insl
jae
xlat
cmpsb
insb
sahf
enter
pusha
lcall
shlb
cs
cs
jnp
pop
pop
fstpt
jmp
add
sbb
inc
mov
enter
inc
es
mov
test
jne
jb
mov
or
mov
xchg
ss
cs
mov
push
sbb
add
jle
subl
jmp
pushl
push
push
call
jmp
mov
mov
std
add
insl
lds
add
add
add
shrb
push
repnz
cltd
jae
mov
cmpsb
fdivl
nop
sub
xor
pop
jns
mov
cmc
jnp
dec
mov
jbe
mov
push
mov
out
mov
push
into
jge
jb
iret
jmp
fldcw
add
pop
fwait
sbb
lds
cmp
jbe
lret
gs
in
add
add
popa
sarl
sbb
test
mov
and
mov
lea
push
or
ret
js
gs
cs
dec
adc
out
jl
lret
and
mov
nop
xorb
ljmp
inc
inc
inc
jmp
xchg
jnp
add
iret
jmp
popf
inc
xor
inc
xor
andb
xor
daa
cmp
out
lods
cmp
cmp
xlat
mov
scas
lods
push
stc
cmpsl
mov
mov
cli
push
or
negb
adc
jge
pop
jmp
jmp
mov
fxch
fdivrs
jae
adc
dec
push
dec
shrl
jne
hlt
inc
xor
fistpl
dec
lods
inc
fxtract
and
loop
mov
fcoml
mov
add
adc
mov
or
cmp
lock
push
fidivl
lahf
xchg
xchg
dec
cwtl
jne
pushf
cmp
movsb
icebp
fcoml
push
push
iret
mov
push
insb
mov
dec
inc
sub
xchg
push
jne
sub
and
test
sub
inc
bound
sub
mov
sub
xchg
jbe
jns
es
stos
or
mov
cltd
cs
mov
pop
mov
lods
cmpsl
push
adc
pop
cmp
jg
flds
fdivl
loopne
and
inc
pushf
mov
aas
shll
cmp
aaa
xor
mov
shrd
mov
mov
xor
shl
jmp
xchg
into
lods
fscale
sti
test
sbb
add
push
add
add
gs
filds
pop
pop
push
xchg
insl
mov
mov
movsl
cmpsl
js
sbb
insl
push
xchg
imul
repnz
add
rcrl
mov
dec
mov
cmp
in
cld
cmc
aaa
in
addr16
outsb
cmpsb
sbb
xor
push
rcrl
movsl
add
jns
in
cmp
pop
int3
jnp
jae
test
inc
icebp
fwait
js
mov
xor
mov
and
lcall
icebp
sbb
and
cmp
pop
lret
repz
mov
in
ds
arpl
adc
leave
xchg
adc
lcall
xor
sub
pop
imul
rorl
or
mov
jp
dec
xchg
imul
repz
shlb
push
mov
mov
lcall
movsl
ss
mov
js
mov
sub
inc
cmp
jg
cmp
push
mov
inc
push
jmp
and
add
ljmp
test
mov
aam
aam
xor
mov
mov
xchg
popf
xlat
scas
cwtl
cmp
inc
xchg
mov
xor
mov
xchg
or
lret
add
fbld
imul
mov
popa
pop
mov
sbb
sahf
insb
aas
mov
cld
push
loop
adc
push
pusha
lock
lock
push
xchg
jg
paddsw
repz
push
xchg
loop
cmp
add
and
inc
fs
pusha
adcb
or
jbe
pop
inc
mov
sub
out
mov
inc
outsl
xchg
mov
jns
flds
imul
in
xor
mov
movsl
repnz
or
popa
lret
std
mov
mov
jmp
mov
push
in
sbb
ja
inc
add
jmp
pop
sbb
push
hlt
mov
sub
mov
mov
shrd
orl
shr
xor
mov
add
mov
sbb
mov
xorl
xor
xorl
xor
adcl
or
shl
jmp
loopne
out
out
in
adc
push
arpl
lds
adc
add
sub
inc
fwait
and
pushf
pop
mov
lock
out
pushf
add
stos
xrelease
lea
mov
mov
cmp
or
cltd
pop
hlt
xor
lcall
inc
adc
push
add
in
mov
mov
add
mov
fstl
loope
out
sbb
es
mov
and
add
aaa
jno
pushf
and
mov
push
in
ja
out
pop
cs
push
ss
push
jb
inc
call
push
push
addb
push
imul
pop
mov
and
fcmovnb
inc
mull
add
sarl
cmp
sub
mov
xchg
outsb
adc
test
adc
lea
jmp
push
xchg
mov
lret
leave
push
in
sbb
pop
sti
int
xchg
push
mov
jae
pop
add
insl
lds
mov
push
lock
rol
gs
xor
pop
pop
cwtl
cmp
pop
dec
add
mov
clc
add
add
sub
into
lods
jno
daa
dec
sub
sbb
aas
or
jns
cs
push
scas
dec
daa
xor
in
xchg
popw
pushf
sbb
jecxz
push
sub
add
and
in
int
fnstsw
xchg
and
sbb
fsub
sub
fs
dec
imul
push
adc
xchg
addr16
push
sub
int
cli
dec
pop
jnp
aas
xor
int3
sbb
cmc
sub
outsl
mov
js
jnp
test
addr16
push
icebp
aam
inc
jo
iret
mov
mov
cmpsl
jle
loope
dec
outsb
mov
push
mov
cli
mov
rcrb
int
dec
sbbb
dec
jecxz
mov
xor
adc
jbe
mov
mov
ret
adc
adc
imul
jmp
test
push
mov
nop
jne
ror
jns
int3
aas
pop
add
push
add
add
out
call
and
repnz
xchg
sbb
mov
adc
pusha
out
jg
aam
xor
arpl
fiaddl
add
push
fldl
into
movsb
jge
mov
test
aam
jg
cmp
lcall
sub
test
cmp
jg
cwtl
xchg
dec
adc
pop
enter
sbb
or
shll
xor
pop
movsl
cli
add
mov
mov
pop
dec
xor
jl
in
outsb
iret
xor
xor
inc
mov
push
clc
iret
inc
xchg
test
div
adc
and
lahf
addl
nop
aad
addl
outsl
out
shlb
loop
mov
arpl
imul
sbb
out
mov
sub
andb
sbb
dec
sub
mov
sahf
sarl
adc
dec
sar
in
jecxz
imul
sub
and
mov
fcom
mov
jns
mov
jmp
mov
mov
xlat
sub
adc
fildl
mov
scas
fsubrs
jg
lret
cmp
test
jne
xchg
jg
adc
imul
cld
and
sub
loopne
push
pop
and
rol
xchg
sub
popa
dec
into
adc
dec
js
shr
ja
pop
lcall
mov
or
adc
sub
push
xchg
in
mov
lret
inc
cmp
xchg
testb
ja
lahf
loopne
sbb
outsb
mov
pop
jle
aaa
mov
dec
mov
push
push
pop
lock
push
incl
jae
xchg
jmp
and
in
pop
loop
jl
pop
adc
test
dec
aaa
adc
cmp
xchg
popa
sub
jmp
mov
mov
movl
shrd
andl
jmp
xchg
mov
lahf
sub
push
push
fmuls
lds
add
push
add
add
push
clc
cs
or
mov
clc
hlt
add
lods
or
ss
sti
inc
pop
inc
fsubrl
xor
lret
mov
mov
fdivs
push
dec
mov
pushf
sub
ja
xor
shl
or
aad
test
mov
lods
fldt
fs
sub
push
sbb
push
cmpsb
pop
out
ljmp
inc
push
ficompl
ud0
mov
mov
inc
add
pushf
int3
cmp
fcomp
aas
aas
hlt
jge
iret
add
shrl
fs
lods
rcll
mov
ja
jp
and
dec
lret
pop
cwtl
fs
or
outsl
xchg
icebp
loopne
dec
mov
ljmp
jge
xor
mov
aaa
ljmp
push
pop
adc
xor
bound
cld
jl
inc
jmp
jnp
loopne
push
fimull
ret
adc
or
test
daa
jb
in
cmp
xor
push
movsl
and
shlb
test
push
int3
cmpsb
addr16
sarb
adc
fiadds
jne
push
jnp
inc
fiadds
insl
cmc
scas
xor
jb
jbe
add
adc
movsl
cs
mov
clc
adc
shr
dec
mov
rcrl
push
std
sub
add
fbstp
stos
in
lcall
cltd
xor
push
mov
xorl
sbb
in
and
mov
mov
add
jno
xor
negl
sbb
xchg
ds
lret
popa
sub
fdivrp
mov
push
pop
xchg
fs
inc
fmuls
jnp
push
adc
mov
ds
cmp
out
or
pop
jb
cmp
outsl
jno
jl
mov
and
mov
adc
nop
mov
shrb
inc
sbb
insb
inc
int
and
inc
es
add
and
inc
add
dec
in
sub
jg
inc
add
push
add
add
xor
iret
ds
push
dec
pop
out
ja
jmp
dec
sbb
add
add
add
sub
fadds
ljmp
in
or
inc
nop
push
mov
dec
xchg
jl
mov
mov
es
lds
into
test
sbbb
inc
cwtl
scas
fmuls
shlb
or
mov
pushl
jmp
fwait
inc
test
sbb
negb
or
leave
jnp
pusha
jl
jle
inc
and
mov
jae
xor
je
les
xor
and
aad
not
pop
int
adc
fsubrl
das
ret
ja
jae
and
insb
and
add
sbb
out
cmp
mov
push
or
sbb
add
pop
enter
jne
push
adc
dec
push
dec
push
and
mulps
das
xchg
sbb
pop
push
aas
adc
es
xor
dec
shr
jg
nop
xor
ds
mov
fisttpl
loop
cmp
add
popf
sbb
int
jno
stos
insl
loopne
insl
enter
stos
fiaddl
lea
ljmp
xchg
imul
xchg
sbb
lds
push
mov
pop
push
sub
push
icebp
sub
push
mov
dec
pop
mov
adc
sti
add
jecxz
cmp
and
int
ja
and
inc
jbe
shrl
ret
mov
fldenv
cs
data16
int
xor
sub
or
pop
fcmovb
push
mov
mov
into
jnp
pop
jb
jae
mov
popa
xlat
lret
and
add
inc
xor
sti
in
clc
syscall
mov
mov
in
add
stos
jecxz
cli
jo
push
push
mov
sbb
mov
push
or
cltd
sub
outsl
in
scas
cmp
scas
push
push
stos
mov
shl
subl
xor
or
shr
movl
jmp
cmp
cltd
fnstcw
out
outsb
sub
out
mov
push
sbb
add
lret
mov
loope
test
loop
rcrl
xchg
daa
push
sbb
negl
in
push
add
addps
enter
out
lret
enter
push
aam
cmp
mulb
fidivrs
rclb
dec
scas
sbb
adc
popa
xchg
cmp
addr16
in
pop
mov
fsubs
mov
subl
clc
or
popf
jae
in
or
inc
in
das
iret
ficompl
lds
mov
jp
cmp
adc
setg
rcl
ret
sbb
iret
ror
adc
push
test
dec
adcb
dec
pop
sbb
xchg
call
pop
push
jns
in
push
das
in
cwtl
xlat
mov
add
mov
iret
lret
cmp
jno
jbe
mov
jecxz
flds
fldcw
mov
mov
mov
push
sbb
pushf
in
inc
mov
sub
mov
ja
sbb
clc
add
cld
mov
mov
pop
dec
jmp
cmpb
jns
mov
arpl
mov
sub
pop
push
mov
movswl
dec
clc
mov
lcall
das
lea
push
test
lahf
add
lahf
cmp
lock
or
adcb
jge
sub
in
add
mul
mov
push
subb
loope
loope
imul
cmpsl
rol
stos
mov
pushf
lods
ror
jg
add
pop
pop
scas
sahf
add
dec
jo
in
sahf
cmpsl
imul
fldenv
dec
loop
arpl
cmp
decl
addr16
notl
dec
andb
sub
aas
cmp
or
and
jp
pop
add
jecxz
or
add
das
es
add
daa
es
add
jg
jmp
pushl
call
jmp
loop
loop
jecxz
out
lcall
push
pop
add
push
add
add
pop
sub
mov
sbb
test
in
cmc
mov
repz
sub
loopne
push
in
cmp
fdivs
dec
fcomps
gs
or
mov
mov
stos
repz
sahf
aad
adc
call
push
scas
loop
mov
jg
inc
inc
and
and
stc
movsl
sbb
mov
test
pop
or
dec
add
mov
jecxz
movb
cmp
dec
push
mov
add
int
stos
or
push
xchg
mov
and
movsl
call
scas
add
stos
int
cltd
jl
shr
pop
and
pushf
rcrl
jo
inc
dec
outsb
add
or
stc
outsl
sbb
inc
lret
int3
sahf
je
leave
or
push
add
into
sbb
sbb
enter
mov
add
xlat
pop
into
call
clc
add
sti
jle
out
lods
fwait
les
rcrb
mov
push
fcomps
add
dec
inc
mov
jnp
testb
in
dec
lea
sarl
mov
cwtl
js
add
loope
adc
je
pushf
mov
add
inc
xor
lock
leave
in
cld
dec
pop
push
addr16
movsb
inc
and
xchg
pop
ljmp
xchg
cmp
lock
xor
push
pop
xor
push
jp
dec
bound
or
xchg
movsb
push
mov
sti
xchg
mov
dec
push
dec
push
and
mov
js
jo
mov
mov
add
bound
pop
enter
dec
sbb
in
sbb
out
fdivr
popa
jmp
insb
push
pop
push
aam
pop
shrl
mov
push
aas
adc
int3
scas
push
pusha
arpl
inc
and
pop
in
js
icebp
shr
sbb
pop
int
mov
shrd
jmp
xor
fcomip
aas
push
dec
or
cmpsl
mov
pop
and
add
add
add
and
cwtl
sbb
jg
adc
hlt
mov
mov
add
mov
xchg
lock
popa
push
mov
daa
and
shlb
mov
gs
adc
pop
les
push
push
scas
lahf
aas
adc
jg
bound
stos
mov
pushf
cs
add
xchg
es
pop
adc
push
lahf
sbb
dec
lock
rolb
pop
test
test
jecxz
fsubl
mov
sbb
mov
push
subl
mov
scas
cmpsb
inc
add
mov
dec
cmp
pusha
sub
xor
sub
adc
movsb
ficoms
das
lods
lret
push
push
jmp
sti
cmp
add
sub
add
pop
push
scas
pop
std
lods
mov
fwait
jo
add
inc
pop
loop
daa
iret
add
sbb
lods
aas
jle
mov
imul
mov
fs
xchg
ljmp
scas
test
scas
xor
addr16
scas
sub
mov
mov
pop
scas
jo
cwtl
add
repz
je
pop
mov
xor
daa
popa
subl
xchg
out
ds
hlt
or
sti
push
mov
inc
mov
and
neg
cmp
in
push
adc
xchg
cmp
mov
call
fldenv
mov
mov
add
es
cld
inc
mov
mov
scas
js
in
movsl
aam
inc
push
dec
pop
push
xor
fdivl
imul
pop
lea
stos
sbb
add
incb
sub
cltd
sahf
pop
sbb
sbb
lret
sbb
or
push
and
sbb
cld
dec
outsb
xor
push
mov
fsubr
shlb
stos
shr
jmp
sbb
pop
fildll
add
push
add
add
xchg
jbe
jb
ds
stos
lret
loopne
adc
pop
test
in
adc
mov
sahf
fildll
or
sbb
vminsd
out
inc
cs
jns
aad
push
cli
adc
mov
xor
pop
insl
xchg
subl
push
add
xchg
mov
clc
jmp
xor
scas
outsb
nop
push
xlat
push
adc
int3
and
inc
push
mov
adc
addr16
push
dec
iret
mov
lock
add
out
adc
test
clc
daa
pop
xor
or
loope
xor
ret
sub
dec
out
push
xor
nop
jp
mov
adc
lods
pushf
sbbl
dec
mov
cmc
mov
and
xor
stc
addr16
pop
cmp
and
sbb
ds
loope
test
insb
push
mov
sti
cmpl
inc
scas
sub
pop
add
adc
in
lods
adc
push
in
jg
ljmp
hlt
iret
inc
rclb
cmp
clc
pushf
dec
fdivl
aaa
lods
stos
pop
cs
lret
in
inc
or
sbb
jge
dec
inc
adcb
push
sub
fldl
dec
mov
repz
push
clc
pop
pop
lods
cltd
fwait
xor
mov
idivl
test
add
fxch
pop
xor
leave
cmpsb
inc
iret
cmp
leave
jg
sar
mov
xchg
aam
fwait
loope
or
mov
mov
arpl
mov
fwait
sbb
or
and
rol
xor
dec
lods
out
adc
cld
divl
xchg
sbb
add
cli
imul
lods
fistps
daa
or
xor
jae
ficoml
iret
push
cwtl
add
and
sbb
add
rcrl
loope
pop
and
lock
inc
cmp
pop
in
adc
ss
add
out
sbb
and
push
in
push
sbb
push
add
add
shrl
neg
ret
jecxz
push
jbe
push
add
add
add
data16
addr16
dec
in
out
call
andl
push
loope
syscall
ret
mov
cmp
inc
aam
stc
test
movb
mov
jb
mov
sub
push
in
jge
push
jecxz
pop
pop
stos
fwait
leave
mov
pop
cltd
cwtl
mov
popf
and
int
dec
push
pop
sbb
sahf
inc
cs
or
push
push
sbb
cli
xchg
lret
pop
incb
jns
hlt
fucomi
jns
pop
sarb
lds
int3
scas
in
ret
int
sub
cmc
mov
cwtl
or
sbb
mov
clc
mov
fwait
and
js
xchg
shrb
out
bound
fcoms
cltd
cmp
loope
loope
bswap
jnp
out
mov
mov
inc
fldt
loop
orl
sbb
dec
mov
hlt
push
push
in
xchg
enter
sti
pop
mov
outsb
jne
fs
ret
lcall
xor
cmpsb
bound
andb
sbb
or
in
jne
push
insl
insl
inc
js
bound
enter
imul
cmp
insb
js
ret
aas
aaa
adc
rolb
cmp
jnp
mov
dec
fwait
mov
mov
lock
test
mov
xor
or
xchg
sbb
in
or
mov
dec
inc
xlat
popa
dec
data16
and
pop
mov
testl
ja
mov
xor
or
dec
adc
shrb
add
xor
sbb
roll
mov
cmpsl
testl
push
xchg
mov
pop
jae
or
andl
cmp
sub
fldl
lock
push
in
mov
fwait
cmp
in
shrl
push
loope
jb
sti
imul
mov
pop
sbb
dec
in
sub
xor
xor
jmp
push
or
pop
out
idiv
imul
outsl
daa
add
push
add
add
xor
and
or
inc
out
fyl2x
pusha
clc
in
inc
adc
repz
jb
mov
xchg
icebp
sar
xor
ret
lods
dec
mov
rclb
addb
xchg
lahf
lock
mov
sub
mov
cmpsb
not
aaa
gs
lods
cmp
aaa
or
leave
insl
pop
cmc
inc
insb
rorb
in
into
and
or
dec
fs
pop
frstor
push
push
pushf
pop
jecxz
pop
pop
stc
cmp
les
mov
ss
fdivp
pop
nop
cli
sub
stc
mov
aas
popf
paddq
hlt
cmp
mov
popf
jo
mov
data16
fs
aaa
adc
or
jb
sub
cmp
push
filds
or
push
inc
enter
lods
pop
popa
call
test
leave
icebp
aas
movl
or
xchg
jecxz
mov
xchg
mov
mov
loope,pn
sub
jmp
ret
cmpsl
adc
outsl
pop
pop
push
and
imul
dec
xchg
cmp
and
lock
and
xor
jnp
out
outsl
mov
sub
out
inc
lea
jge
pop
idiv
jecxz
adc
icebp
lods
mov
dec
movsl
pop
add
or
jb
xchg
lret
mov
lret
mov
cmpl
push
or
push
ret
mov
jg
pop
insl
add
dec
enter
mov
cmp
insb
nop
push
pop
or
inc
leave
adc
stos
fimuls
mov
cmpsb
sbb
sub
icebp
test
jl
jle
into
mov
cmpsl
lods
adc
jnp
stc
xchg
loop
repnz
mov
or
pop
cmpsl
dec
dec
inc
test
push
fnstsw
stc
sub
inc
xchg
mov
jge
xchg
outsl
iret
dec
or
orl
shl
add
add
mov
sbb
mov
cmpl
jl
jmp
pushl
push
pushl
push
call
shrd
shr
mov
mov
xor
jmp
pop
sbb
jg
push
aas
jnp
add
jmp
add
add
add
inc
push
shrb
fcoml
mov
jnp
lds
dec
cmpsl
jbe
dec
or
hlt
or
xchg
out
or
mov
subl
ljmp
out
push
push
data16
mov
shll
pop
incl
lods
int3
fstl
es
inc
sbb
xor
sbb
enter
ds
icebp
movsl
and
cs
jnp
fmulp
imul
cmp
cmp
push
in
rol
mov
sub
cmp
xor
pop
lret
dec
sub
rcrb
repz
or
lods
in
movsl
xlat
mov
int3
xor
aam
pop
mov
dec
dec
sbb
repnz
scas
call
adcl
xchg
pop
jno
push
add
ffree
cs
dec
aas
push
or
or
pop
pop
fsubrl
push
js
loop
dec
icebp
cltd
lock
addr16
cmc
jp
push
mov
mov
jo
jg
cmp
push
scas
dec
movsb
mov
jne
aad
into
adcb
jbe
and
fcomps
test
iret
test
fistl
cmp
cld
inc
xor
push
insb
jne
repz
cmp
rol
xchg
push
insl
lea
add
imul
pop
adc
ret
aaa
cltd
mov
out
sub
xchg
addl
or
frstor
aas
xor
add
xor
ret
cli
loop
xchg
vfmaddps
dec
cmp
cltd
stos
push
xchg
adc
icebp
adc
mov
mov
lods
repz
jo
popf
mov
xchg
adc
rcll
mov
sti
jne
xchg
inc
push
mov
cltd
mov
sar
cld
push
in
es
xchg
adc
sbb
push
imul
push
add
add
in
scas
shll
push
sti
jnp
add
push
add
add
push
daa
adc
iret
xor
inc
in
std
cmpl
and
clc
fs
xchg
insb
mov
ret
mov
push
adcb
das
ja
push
adc
jle
fmull
pop
dec
insl
sahf
sbb
int3
xchg
jl
outsb
fwait
xchg
mov
dec
ljmp
or
mov
jp
dec
inc
xor
mov
cli
ja
jae
aas
xor
loop
jb
fwait
xchg
sbb
insl
imul
adc
add
sub
jb
leave
fiadds
arpl
sbb
dec
jp
fidivrl
nop
subb
in
adc
or
rorb
mov
call
fadd
mov
or
adc
sub
pushl
pop
loopne
cmpsb
orb
adc
mov
mov
mov
mov
or
outsl
inc
mov
sbb
hlt
dec
dec
pop
enter
sub
clc
rclb
and
jecxz
cmp
test
pop
sarl
dec
mov
fcmovnbe
lods
stc
shr
test
xorb
into
xor
jl
imull
subb
test
fdivrs
xor
xchg
aam
push
xor
inc
push
inc
je
fists
scas
xlat
sti
add
cmp
adc
push
rcl
xor
testl
mov
shr
cmp
mov
ret
mov
inc
nop
jecxz
lods
imul
hlt
jmp
loop
outsl
mov
sbb
les
shlb
mov
push
ror
movl
repz
inc
jmp
insl
jl
xor
and
mov
mov
out
fs
lds
xchg
out
ror
jno
mov
pop
test
call
fdivs
rolb
jecxz
inc
add
add
mov
movl
mov
jmp
mov
incl
data16
movb
add
sbb
mov
adcl
sbb
pop
sbb
mov
sbb
inc
stos
mov
movsb
pop
add
ret
nop
mov
cltd
xchg
fs
inc
ds
test
or
inc
jle
adc
or
add
test
xchg
lcall
xchg
push
add
jne
ror
lret
fiadds
sarl
out
shlb
lods
add
fwait
cwtl
mov
xchg
mov
out
daa
push
cwtl
inc
inc
mov
fists
cs
mov
pop
mov
idivl
stc
jg
in
xchg
pop
pop
sbb
xchg
mov
test
pop
les
lods
or
stos
invd
or
mov
pop
mov
mov
mov
xor
sahf
mov
jbe
xchg
icebp
mov
mov
jbe
popf
jp
enter
int
cltd
mov
addr16
pop
ss
adc
ja
mov
fiaddl
jp
cmp
lds
je
popa
xor
push
arpl
dec
popf
mov
pop
inc
pop
out
push
test
aam
pop
sub
inc
inc
xchg
add
int
push
mov
jmp
shl
decl
jns
and
mov
fiaddl
popf
add
jp
push
and
jmp
std
rolb
inc
insb
pop
lea
mov
into
stos
lds
and
jecxz
lret
sbb
mov
sub
add
xchg
mov
mov
in
ret
pop
in
iret
jne
jb
push
xchg
in
aad
add
push
jae
iret
test
inc
repz
ds
jle
xchg
sbb
outsl
flds
sbb
add
daa
add
xor
dec
push
ja
mov
movl
mov
sbb
movl
mov
mov
mov
sub
xor
movl
andl
jmp
and
in
out
xor
push
hlt
jae
int3
sahf
mov
add
add
add
sbb
or
sub
add
adc
inc
xchg
lcall
cmpsl
inc
mov
adc
mov
enter
daa
push
or
jl
les
test
sarb
ret
add
mov
inc
movsl
jp
mov
sahf
lret
loop
cmp
std
ret
dec
incl
stos
cli
push
adc
mov
imulb
xor
xchg
inc
and
out
inc
lods
dec
test
jge
dec
dec
lods
mov
dec
push
mov
scas
or
lods
into
mov
jl
pop
xor
jmp
xchg
mov
movsb
into
cli
rorl
push
jp
mov
iret
add
shl
push
test
shr
adc
jecxz
stos
fwait
je
xchg
jno
shr
push
xchg
cmp
push
add
ret
insl
dec
mov
pop
movsb
or
jmp
rcr
pop
sub
nop
pop
das
dec
sub
pop
sti
jns
xchg
ja
jbe
cs
fsubrl
out
aas
xchg
mov
lock
psubusw
or
rorl
ja
sti
out
and
adc
mov
addr16
ret
popa
pop
jno
cmp
outsl
rcrb
arpl
sbb
bswap
add
jno
std
inc
adc
sbb
push
adc
data16
adc
and
xor
repz
sbb
into
pop
mov
arpl
roll
cli
add
sbb
jo
scas
pop
push
or
lods
movsl
fldt
in
jo
dec
mov
inc
adc
mov
jg
jno
mov
push
xchg
push
cmp
and
in
jno
stos
jnp
sahf
mov
insb
mov
mov
jmp
nop
mov
mov
and
cmp
mov
add
add
fwait
int3
in
sub
mov
xor
and
xor
mov
and
push
cld
clc
add
test
cmp
ret
inc
adc
jle
ja
pop
add
faddl
dec
dec
dec
jnp
fiadds
clc
out
lahf
je
push
mov
mov
test
das
imul
lcall
movsl
add
mov
pop
cli
adc
mov
pop
or
js
inc
nop
sbb
mov
lods
scas
mov
outsl
lret
repz
pop
xor
aad
cmp
cmp
movsl
lcall
popa
push
icebp
xchg
mov
pusha
xor
in
sahf
xor
mov
js
push
stos
idivl
xchg
mov
in
pop
or
mov
pop
push
cmpsl
xchg
jne
dec
stc
jg,pn
test
outsb
jns
adc
inc
and
aaa
outsb
test
mov
popf
add
jle
push
sub
cmpsl
xor
mov
std
fcompl
sbbl
sbb
out
ds
xor
test
cmp
sahf
fisttpl
mov
das
jbe
sbb
lods
movsb
fldcw
filds
insl
test
in
fwait
lock
aam
inc
or
jmp
inc
push
fwait
movsb
jge
outsb
pop
jb
mov
pop
pusha
test
repnz
xchg
dec
push
test
or
mov
push
adc
cmpsb
push
aad
lds
les
arpl
cli
into
xchg
inc
add
pop
mov
addl
out
es
push
push
rcrl
adc
movsl
mov
in
fwait
iret
cmp
nop
dec
xorl
in
sbb
inc
dec
cmp
push
and
pop
pop
scas
ror
xchg
pop
movsb
loope
mov
imull
je
vmwrite
in
loop
mov
mov
shrd
shr
mov
mov
sub
sub
mov
adc
jmp
fs
jne
jge
jno
and
push
xor
xor
add
add
add
nop
xchg
sub
push
xchg
lods
pop
jmp
mov
mov
jmp
mov
push
inc
xor
mov
dec
or
cmp
adc
test
insb
lock
arpl
outsl
mov
shrb
ret
lods
add
push
sbb
adc
cmp
pop
push
in
adc
pop
sbb
icebp
inc
mov
mov
hlt
xchg
fucomip
xchg
or
sbb
sahf
jb
scas
sub
in
xchg
mov
imul
repz
mov
add
lds
and
xor
scas
stos
and
sub
stos
cmp
mov
jo
jbe
push
int3
cli
inc
mov
jecxz
gs
lret
or
popa
jge
or
cltd
push
or
jecxz
adc
push
add
sub
mov
mov
mov
jmp
fisubrl
pop
popa
testb
jmp
addb
inc
or
lcallw
mov
into
xchg
sub
cli
xchg
cmp
push
aas
add
dec
das
xor
xchg
inc
jecxz
sahf
jb
inc
rclb
and
pushf
rcr
iret
jno
mov
orl
test
lock
scas
sbb
cwtl
inc
jp
cs
xchg
sbb
sub
mov
out
dec
mov
push
dec
rcrl
add
fstp
stos
shlb
and
decl
stc
cmp
aam
mov
or
cld
inc
sub
aas
fs
sbb
cs
call
jb
inc
out
pop
movsb
xchg
repnz
pop
jmp
xchg
leave
sub
jl
repnz
aaa
fwait
cli
fsubrl
push
cmp
add
pop
jecxz
push
test
mov
nop
inc
sbb
push
clc
lahf
xchg
shr
out
shl
jae
pop
inc
pop
mov
xor
andl
shl
xor
sbbl
or
cmpl
jl
xorl
jmp
push
call
jmp
sti
std
mov
jmp
vpaddd
xor
add
jae
push
push
fcmovbe
or
lock
insb
in
jnp
popf
popf
lret
xchg
in
xor
dec
add
dec
mov
ror
mov
pushf
dec
xchg
pop
bound
dec
jne
fadd
stos
cmp
sahf
dec
lock
push
cmpsl
aaa
dec
pop
dec
mov
xor
pop
dec
sub
pop
outsb
add
cmp
inc
or
mov
mov
dec
xchg
addr16
mov
outsb
cli
adc
jl
xor
xchg
cltd
pop
and
dec
push
dec
int3
jl
adc
test
xor
or
pusha
xchg
in
cltd
jae
adc
and
adc
cmp
mov
sbb
clc
shr
or
or
pop
xchg
mov
dec
mov
out
mov
cmc
adc
stos
movsl
arpl
movsb
sahf
mov
mov
xor
arpl
repz
loope
sbb
jl
add
push
and
cmp
in
jg
mov
int
dec
jae
xchg
push
add
outsb
push
mov
pop
into
enter
pop
repz
mov
test
jnp
push
cmpsb
jbe
xchg
shll
push
pop
xor
pop
aaa
movsb
insl
ror
mov
mov
and
dec
insb
aam
cwtl
call
int3
mov
fcmovnbe
xchg
cmp
push
or
lods
pop
orb
inc
aam
inc
loopne
push
in
lods
rolb
shr
mov
mov
shl
movl
mov
xor
xor
or
mov
andl
mov
sub
xor
sbb
mov
mov
shrd
movl
shr
cmpl
jge
jmp
push
call
mov
mov
xor
shl
xor
or
lea
sub
mov
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
shr
mov
mov
shl
mov
orl
xor
adcl
xor
orl
or
mov
cmpl
jl
or
jmp
call
mov
or
mov
mov
shrd
shr
mov
mov
orl
xor
xorl
shl
xor
or
cmpl
jge
jmp
push
call
lea
mov
mov
mov
shrd
shr
mov
mov
sbbl
xor
andl
shl
mov
addl
xor
or
mov
add
mov
add
cmpl
ja
or
jmp
pushl
call
mov
mov
shrd
xor
shr
mov
movl
mov
addl
xor
sbbl
or
negl
lea
adcl
mov
cmpl
jle
and
jmp
push
push
pushl
call
mov
shl
mov
shrd
xor
shr
mov
movzwl
or
mov
xor
or
mov
adcl
shl
mov
mov
mov
or
cmpl
jl
incl
jmp
push
call
mov
mov
shrd
shl
shr
mov
movl
mov
xor
mov
xor
sbbl
or
neg
mov
adcl
dec
negl
not
and
subl
xor
add
mov
xor
add
adc
xor
mov
mov
mov
sub
xor
or
and
mov
cmpl
ja
mov
or
jmp
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
mov
adc
mov
xor
mov
andl
xor
shl
adcl
mov
incl
or
mov
mov
cmp
movl
je
add
mov
sub
mov
or
mov
xor
xor
mov
and
shrd
sbb
shr
mov
cmpl
jge
xor
jmp
push
push
call
mov
mov
mov
shl
or
xor
or
mov
xorl
mov
sbbl
mov
xorl
mov
cmpl
ja
jmp
push
pushl
push
pushl
push
call
xor
mov
xor
mov
mov
mov
shrd
andl
shr
mov
orl
mov
xorl
mov
shll
xorl
xor
subl
mov
or
or
andl
mov
andl
mov
mov
andl
or
movl
mov
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
je
movl
jmp
mov
or
mov
xor
xor
mov
mov
or
shrd
movl
shr
cmpl
jb
xor
add
sub
jmp
push
push
call
mov
mov
mov
mov
adcl
xor
or
mov
addl
mov
mov
adcl
shl
or
xor
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
add
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
and
xor
mov
mov
mov
xor
push
pushl
shr
mov
mov
push
push
call
or
xor
or
mov
mov
mov
xor
xor
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
add
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
mov
shl
shr
mov
xor
or
mov
or
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
and
xor
mov
mov
mov
xor
push
pushl
shr
mov
mov
push
push
call
mov
or
xor
or
xor
xor
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
shl
or
xor
mov
mov
mov
shrd
mov
mov
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
jo
mov
mov
js
or
add
icebp
xor
test
cwtl
sahf
icebp
out
adc
test
pop
gs
cmp
outsb
push
push
int3
mov
and
test
fbstp
jb
cmp
sub
lcall
lret
xchg
insl
cs
stos
bnd
sbb
fchs
pushf
call
adcb
push
adc
inc
jo
test
jno
adc
fwait
les
mov
enter
pop
xor
pop
loop
pop
jg
adc
popa
lahf
lret
icebp
push
scas
sbb
shl
insl
cwtl
int
push
xchg
dec
lret
stc
sarb
ljmp
ja
sbb
mov
fdivrs
xchg
sahf
rcll
ljmp
adc
insl
je
jg
jnp
fidivl
xor
xchg
shll
cmpl
push
push
fisttpll
movsl
jmp
dec
mov
and
sbb
notb
pop
lret
scas
xor
mov
push
cli
adc
jmp
sbb
cltd
add
cmc
add
push
test
outsb
pop
and
jecxz
das
adc
lcall
lods
add
xor
in
fnsave
sub
inc
sub
insl
push
sub
addr16
pop
xor
add
lret
jno
lods
sbb
into
mov
mov
push
hlt
push
add
sbb
fimull
scas
stos
mov
nop
mov
jge
jo
inc
sbb
icebp
push
jne
push
fwait
das
jns
jmp
and
out
jns
mov
aaa
cmp
xor
push
jo
cmp
xchg
test
sub
cli
or
adc
xor
xor
test
imul
aam
loope
mov
test
pop
clc
inc
add
repz
sub
and
jg
jge
aad
push
je
jecxz
adc
cwtl
rolb
push
jns
in
loope
or
or
movsl
pop
push
mov
scas
dec
frstor
daa
jnp
rcr
push
inc
inc
pop
adc
ja
push
and
rep
arpl
push
outsb
sub
jbe
adc
jle
test
mov
orb
aas
mov
xor
aas
loop
bound
mov
je
mov
lock
mov
aas
and
sbb
xor
mov
mov
xchg
or
sbb
lods
xor
popf
mov
ror
in
cmp
dec
and
movsb
lahf
aaa
mov
dec
pop
pop
or
fimuls
fidivl
sub
in
sub
jbe
push
das
lret
cmpsb
add
popa
add
clc
mov
dec
push
ss
xor
add
jecxz
xchg
call
sbb
adcb
push
div
xor
lods
test
xchg
xor
sarb
or
loop
push
cmc
sub
pop
pop
jb
mov
rcrl
sub
jae
mov
in
repnz
xor
dec
clc
mov
cmpsb
push
mov
aam
inc
mov
cltd
mov
inc
pop
xchg
mov
sbb
push
mov
mov
loop
dec
pushf
in
lds
inc
mov
mov
ret
inc
and
frstor
mov
pop
mov
fsts
xchg
add
popf
fisubrl
push
xchg
xchg
out
test
stos
and
sub
js
pop
sub
loop
roll
mov
dec
and
cmp
out
fimull
push
cmp
push
sahf
pop
sbb
and
sub
lahf
inc
enter
xchg
add
arpl
popf
aaa
out
pop
push
jmp
popf
jl
in
ficomps
lret
and
inc
mov
imul
stos
sub
bound
xchg
or
mov
sahf
fadd
cld
mov
pop
mov
addr16
mov
ret
loopne
fs
mov
mov
loop
pop
push
mov
shr
or
sbb
negl
in
mov
rcrb
jb
lret
aam
dec
mov
shll
dec
adc
and
mov
lods
es
jbe
sub
sbb
mov
pusha
je
add
lea
scas
stos
jecxz
in
sub
pop
popf
lret
pop
mov
jge
test
cltd
xor
cmp
aam
into
and
cmp
es
mov
cli
das
mov
scas
in
sub
idivl
push
inc
cs
push
and
fs
mov
xchg
mov
sbb
hlt
mov
test
xchg
stos
mov
ljmp
pop
ja
lock
and
dec
fstpt
imul
pusha
movsb
pop
jle
jns
mov
sub
jnp
nop
rcll
push
aam
mov
mov
rcrb
mov
rcll
mov
or
cmp
ds
xchg
insl
mov
or
adc
cltd
fbld
out
push
mov
pop
add
addr16
sub
movsb
aad
pop
jo
jae
cwtl
rdpmc
or
js
xchg
push
and
add
mov
xchg
adc
mov
movsl
adc
and
sbbb
test
rol
cli
adcb
lcall
pop
stos
xchg
addl
pop
sub
inc
and
xchg
iret
dec
in
shrb
cmc
push
movsb
push
cltd
outsb
xor
jle
mov
dec
and
mov
cld
iret
xchg
ret
je
fiaddl
jp
pop
add
ret
cmovnp
pop
lock
adc
xor
in
jg
add
sahf
push
imul
shrl
ret
xchg
adc
xchg
and
inc
imul
jle
movl
lea
mov
jecxz
sahf
pop
cmp
or
aad
and
repz
fiadds
jne
lods
outsl
pop
mov
or
mov
jbe
outsb
insl
jo
cli
ret
fidivs
inc
fadd
test
dec
or
and
imul
push
stos
push
icebp
xlat
add
jle
scas
inc
icebp
sti
int3
or
cmp
lcall
cmp
mov
inc
je
push
mov
rol
or
dec
dec
cli
adc
and
jae,pt
decl
outsb
loope
push
push
das
and
mov
cmpsl
xor
mov
mulb
mov
push
mov
add
or
ds
in
pushf
jo
fwait
imul
push
test
loope
movsb
sub
pop
dec
movsl
clc
leave
mov
nop
mov
xor
mov
mov
movaps
mov
cli
sbb
mov
inc
fsubrl
repnz
decb
dec
mov
aad
sarb
vaddsubps
scas
adc
bound
jo
dec
imul
sahf
mov
inc
rclb
mov
popa
dec
out
int3
bound
sti
test
adc
lods
std
sti
aad
and
xchg
add
inc
push
or
jo
test
rcl
pusha
in
bound
and
ds
mov
lcall
mov
or
xchg
pop
cmp
nop
imul
adc
scas
push
out
or
loopne
scas
imulb
or
jl
insl
and
and
test
divb
inc
mov
outsb
lcall
stos
and
test
fimull
daa
out
jmp
pop
and
addr16
rorb
jl
inc
stos
rolb
cmp
lods
out
clc
enter
sti
xor
cmp
fiadds
sbb
adc
push
sbb
jns
dec
pop
cmp
repnz
lret
jno
jns
fnstsw
fldcw
ret
push
orl
xchg
inc
inc
je
mov
aad
xchg
lahf
lea
push
lea
les
and
aam
incb
test
fbld
sub
mov
scas
mov
sub
mov
cmp
mov
xchg
cmp
jbe
cld
ljmp
sub
icebp
mov
frstor
lds
xor
hlt
mov
mov
daa
test
push
insb
sbbb
aam
insl
fcompl
and
mov
pusha
inc
fldcw
lods
push
jp
jge
movsl
cmp
iret
dec
orl
or
mov
push
mov
adc
jae
repnz
lcall
jle
aas
xchg
push
loop
jp
push
js
and
jbe
dec
popf
insl
xchg
sbb
out
inc
push
xchg
sbb
xor
popa
cmp
sti
pusha
popf
imul
rol
cwtl
xor
sarb
or
adc
inc
push
or
into
lds
jb
xor
sahf
icebp
xor
inc
sti
lret
test
icebp
or
call
jns
cmp
or
jle
scas
ret
mov
pop
sub
xchg
lret
jb
or
mov
cmp
push
mov
fwait
mov
sub
inc
dec
adc
sub
push
and
mov
in
sahf
sub
xor
cmp
faddl
jb
popa
pop
test
dec
adc
sub
sti
idivl
nop
fldl
fistpl
adc
mov
inc
add
mov
push
call
incl
xor
jbe
adc
pop
xchg
dec
aad
jae
mov
mov
inc
jns
popf
popf
sahf
xchg
xchg
xorl
push
adc
sti
addr16
je
mov
divl
and
mov
iret
fdivrl
cld
out
push
xchg
mov
mov
add
iret
add
in
inc
and
mov
popa
jbe
dec
imull
loopne
sti
and
stos
xor
push
mov
inc
mov
aaa
mov
mov
mov
nop
add
xor
stos
pop
jmp
pop
push
or
jne
pop
mov
enter
mov
xor
mov
roll
daa
mov
add
psllw
cmp
scas
lcall
xor
stc
out
pushf
incb
add
int
es
or
rcrl
call
ja
enter
mov
std
arpl
fwait
cmc
inc
sbb
faddl
adc
test
leave
leave
push
aam
daa
imul
and
mov
cmp
lds
push
push
mov
add
mov
add
mov
add
push
jnp
add
dec
sarl
adc
es
pushf
pusha
lahf
loope
icebp
gs
gs
int3
cmpsb
inc
es
int3
jecxz
cmp
mov
stc
sub
cwtl
xchg
lret
push
inc
iret
dec
loop
cli
or
pop
movsl
xlat
or
addb
ret
sub
mov
mov
sbb
jne
dec
lock
movsb
jg
test
imul
or
stc
jae
adc
fistps
inc
adc
scas
dec
push
sbb
sub
pushf
insl
sub
lahf
sub
iret
sub
adc
pop
addr16
stc
jecxz
ljmp
push
ljmp
adcb
sub
and
int3
test
aad
sbb
or
sub
mov
inc
mov
mov
push
cltd
bound
loop
enter
mov
or
mov
dec
push
fisttpl
add
ljmp
sub
fdiv
leave
inc
lds
push
leave
mov
and
outsl
rcl
ss
xor
jl
lods
pop
pop
leave
xor
adc
cmpsb
dec
les
fidivrs
movsl
mov
or
jne
cmp
dec
lds
pop
sbb
cltd
jg
jnp
sub
xchg
in
xlat
imull
repz
icebp
mov
hlt
fstpl
movsl
popf
or
pop
and
fwait
mov
xchg
je,pt
in
inc
hlt
orl
das
mov
cli
push
shlb
aaa
adcb
mov
in
ljmp
call
dec
outsb
and
xchg
adc
mov
movsl
mov
or
inc
shl
out
or
out
inc
testl
jecxz
pop
cmp
mov
scas
sbb
pop
std
ret
add
xchg
xor
sti
in
dec
roll
sub
mov
add
pop
jne
mov
int3
clc
sbbb
mov
jnp
mov
cwtl
dec
cmp
lcall
jg
test
fidivrs
jp
dec
mov
es
rcll
sub
push
push
movl
movl
movl
movl
movl
xor
push
movl
mov
mov
push
push
push
call
mov
mov
sub
mov
mov
add
xor
mov
xor
inc
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
add
push
adc
push
push
call
mov
mov
push
push
push
push
call
lea
mov
mov
mov
xor
and
xor
div
mov
xor
and
div
xor
mov
movl
movl
movl
movl
mov
mov
xor
and
mov
sub
mov
xor
mov
mov
movl
movl
mov
mov
shr
add
xor
mov
mov
mov
movl
mov
mov
or
add
xor
div
mov
pop
pop
sub
mov
mov
movl
movl
movl
movl
mov
mov
and
mov
sub
mov
and
and
sub
leave
ret
xchg
mov
mov
sub
rorl
add
sub
mov
push
mov
ja
sbb
iret
andb
sub
dec
fwait
lcall
sbb
pop
cmpsb
push
or
add
cs
stos
sar
sub
addr16
inc
pop
xchg
testb
push
pop
mov
lock
sarb
aam
push
aam
inc
test
mov
fwait
inc
sub
imul
and
jg
sbb
mov
lock
push
pop
pop
sbb
push
ss
andl
xor
in
jae
xchg
jmp
call
test
xchg
movsb
mov
dec
xlat
outsl
mov
xchg
push
fcmovne
mov
jmp
inc
push
divps
fmul
add
rolb
mov
inc
and
xor
xchg
xchg
lahf
xchg
mov
loopne
aad
push
clc
xchg
movsl
sbb
fs
pop
mov
sti
cmp
addr16
mov
add
cwtl
scas
add
push
inc
pop
mov
mov
sbb
add
fildl
dec
dec
fdivr
popf
clc
dec
aaa
fstp
xchg
jg
mov
inc
dec
pop
xchg
dec
xchg
sbb
pushf
xor
adc
push
xor
rorb
xchg
rorb
fnstenv
fimuls
popa
mov
int3
push
shlb
movq
dec
sub
add
push
and
add
push
setl
idivb
jmp
push
ror
dec
movb
lret
lods
mov
xchg
push
jmp
add
testb
pop
jno
jns
pop
jo
cmp
iret
fnstcw
xchg
push
hlt
dec
xchg
push
les
add
sbb
cmp
sub
push
cmc
in
sbb
and
mov
push
adc
sbb
or
mov
push
mov
jmp
push
mov
adc
sti
test
mov
or
or
inc
inc
mov
mov
scas
loop
dec
rorl
adc
loopne
xlat
dec
ret
cmc
pop
push
insl
fidivl
outsb
ss
push
adc
jge
sub
pop
pushf
test
inc
adc
lods
xchg
mov
jb
lods
pop
mov
sub
outsb
mov
push
mov
rcr
int
fmuls
sahf
dec
push
sub
dec
js
jge
scas
mov
pushf
push
fstpl
and
add
cmp
outsl
dec
mov
mov
mov
inc
movsl
or
mov
fdivs
inc
in
das
cmp
xor
mov
insl
xchg
jg
je
mov
icebp
inc
dec
sahf
pop
int
add
loope
mov
inc
lcall
pop
add
jle
dec
push
repz
sbb
xchg
cmpsl
push
inc
imul
or
add
ret
mov
adc
xorl
dec
pusha
pop
jmp
int
sbb
sub
lock
pop
lods
cmp
pop
nop
out
sbb
nop
in
sbb
push
negb
pop
mov
insl
xchg
add
jns
sahf
in
jp
fistps
inc
int
mov
push
push
pop
enter
pop
sbb
mov
sub
mov
or
lods
cmp
sahf
lock
ljmp
js
sub
pop
add
xlat
jno
jae
mov
call
movsb
or
ja
push
jl
dec
out
mov
imull
sbb
pop
add
repnz
inc
les
fwait
adc
xchg
outsl
dec
adc
add
jge
shll
inc
xchg
ljmp
js
or
inc
cmp
lods
loop
jg
sbb
sti
enter
cmp
jo
lea
mov
fstp
cs
sbb
stos
into
repnz
mov
mov
scas
inc
push
mov
in
or
mov
and
stc
sbb
mov
std
stos
push
add
sub
lods
add
dec
push
push
dec
cli
stos
or
inc
iret
outsl
pop
repnz
xchg
ror
xor
ja
cmp
inc
clc
add
xchg
clc
mov
push
fsubp
out
add
pop
adc
or
insl
mov
mov
jp
fidivrl
loop
shr
gs
pop
add
mov
es
inc
sbb
dec
imul
lret
dec
sub
imul
sbb
cmpsl
js
insl
in
dec
outsl
sub
jmp
sbb
jecxz
ds
aam
sub
stos
and
sbb
or
repz
iret
dec
sbb
jg
pop
loopne
outsb
dec
cli
shll
addr16
dec
fxam
xor
stos
inc
in
movsb
jle
jb
fstl
rcll
mov
mov
mov
push
scas
scas
or
cmp
fbld
mov
subl
xchg
movb
cmp
jmp
push
iret
jl
sub
add
shlb
dec
and
fucomp
call
push
out
into
sbb
aad
test
sar
push
cmp
jb
jne
cwtl
mov
xchg
pop
aas
notl
jecxz
lea
cmpsb
rorl
push
xor
sub
mov
dec
mov
pop
adc
sahf
divb
pop
and
pop
cmp
ljmp
cwtl
imul
je
jno
leave
divb
pop
or
lods
pop
sbb
sbb
sbb
insl
lods
cmp
out
aam
inc
pop
popf
or
jae
jbe
mov
ss
xchg
fs
cmc
test
mov
adc
mov
pop
test
mov
jge
add
jge
imul
mov
popf
add
sub
dec
mov
xor
jecxz
add
dec
nop
decl
pusha
fwait
cmc
rclb
fstp
in
cmpb
sbb
repnz
add
or
mov
or
dec
sub
push
mov
repnz
addb
in
pop
inc
rcr
repz
jge
ja
add
pushf
mov
mov
inc
jg
pop
pop
adcb
jle
es
xor
out
xchg
sub
push
cmp
push
fadd
inc
push
nop
sbb
pop
jl
loope
es
gs
inc
jl
out
sti
sub
in
mov
aas
mov
inc
mov
lods
xchg
cld
mov
adc
or
div
or
pop
call
jbe
and
test
std
or
mov
cwtl
adc
sbb
inc
sbbb
mov
or
mov
mov
test
and
lret
xchg
icebp
dec
cs
jle
out
enter
xchg
mull
outsl
mov
add
xchg
movsl
and
scas
fldcw
stos
imul
mov
xlat
mov
scas
aad
adc
mov
jl
and
push
push
mov
add
imul
sub
jnp
pop
jp
je
pop
mov
lcall
pop
jle
add
stc
ljmp
movsl
dec
int
add
rol
fsubs
mov
cmpsb
je
push
dec
or
add
adc
mov
and
sbb
lcall
sub
das
adc
pop
fwait
repnz
lock
pop
xlat
sar
fiadds
fidivrl
sub
ss
movsb
mov
add
fildll
xor
or
cmp
data16
jmp
mov
loope
into
mov
psubd
dec
and
push
jno
fptan
xchg
notb
push
mov
pushl
pop
pop
pop
stc
and
sbb
and
pop
push
fdivr
mov
das
or
sub
jno
xor
hlt
loopne
test
int3
xchg
xchg
jge
xchg
xchg
jae
ret
and
mov
dec
sbb
movsw
in
mov
pop
jo
int
std
shl
mov
into
adc
dec
or
sub
mov
fadd
sarb
jge
vpcmov
xor
cwtl
pop
in
jne
mov
div
jg
mov
imul
jge
adc
daa
inc
ja
jl
adc
loope
inc
in
push
movsl
leave
in
imull
xchg
and
dec
xor
les
lahf
jo
mov
rorl
stos
int
enter
inc
mov
adc
xor
push
cmpsb
xchg
mov
cmpsb
sbb
inc
rolb
std
in
in
sbb
dec
mov
leave
ror
dec
mov
adcb
je
cmpsb
ret
pop
jb
into
mov
clc
cmp
dec
add
xorb
loopne
cltd
paddusw
inc
popa
push
and
and
mov
cltd
ds
loopne,pt
xchg
mov
data16
mov
inc
out
cmpsl
rolb
addr16
add
sbb
dec
cmp
lcall
mov
jge
cmp
test
or
lret
std
inc
adc
cmp
test
out
xchg
mov
inc
out
mov
mov
in
adc
cbtw
aas
rcr
sub
push
ret
ret
jle
mov
add
xchg
insb
cmp
cmpsl
xchg
mov
sub
pop
mov
int3
stos
jge
movsb
pop
jmp
outsb
fdivl
rolb
xor
inc
mov
adc
enter
mov
movsb
out
mov
ljmp
stc
popa
ja
push
adc
adc
dec
cmp
mov
fs
and
mov
inc
sub
iret
sbb
xchg
mov
lret
addr16
xchg
fsub
jle
mov
cmpsb
imulb
pop
subl
xor
sbb
mov
enter
in
xlat
cld
in
xchg
mov
cmp
sar
mov
mov
xor
cmp
xorb
or
ja
lods
lea
loope
pop
pop
in
inc
dec
negb
clc
aad
cmpsl
mov
subl
ss
mov
push
adc
ret
sbb
sahf
in
es
and
cmpsb
clc
mov
add
xchg
sbb
outsl
fs
adc
ljmp
jge
dec
sbb
mov
cli
pushf
pusha
cmp
int
clc
xchg
mov
add
mov
or
and
cltd
cmp
int
cli
orb
popa
cmp
ja
mov
popl
ss
adc
or
push
ret
and
pusha
inc
xchg
adc
lret
std
jb
mov
leave
add
or
xchg
inc
sub
mov
fisttpll
and
fwait
jbe
jne
inc
add
fisubs
icebp
push
cmpsb
xor
lahf
pushf
insb
inc
push
mov
pop
adc
xchg
lods
rolb
test
xchg
pop
mov
repnz
sub
stc
xchg
push
add
mov
inc
incb
cmp
int3
dec
dec
dec
cmp
aad
in
fucomi
dec
jecxz
xchg
sbb
inc
mov
loopne
pop
jmp
pushf
add
in
pop
mov
cltd
loopne
pop
dec
sub
and
rorb
das
std
mov
sbb
sahf
cld
inc
nop
sbb
leave
repnz
dec
or
imul
dec
loope
dec
outsl
repnz
test
icebp
mov
into
mov
imul
das
or
dec
out
cmpsb
sbb
fs
add
add
xchg
repnz
fwait
repz
mov
xchg
aad
repnz
sub
or
sbb
addr16
push
insb
loopne
cmc
outsl
sub
pop
lea
xor
and
sbb
fstl
mov
and
pop
loop
cmc
inc
aaa
data16
inc
clc
push
pop
inc
outsl
mov
movsl
mov
mov
xchg
mov
popa
repz
iret
pop
add
rcrl
nop
or
sbb
repz
lret
mov
mov
imul
add
arpl
aas
leave
addb
and
xchg
fimuls
mov
into
das
dec
mov
cmp
pop
inc
cmpsl
imul
pop
lods
lea
pop
fisubs
leave
insl
mov
lret
mov
shll
shll
shr
cmp
sub
testb
bound
mov
out
stos
jnp
sbb
sub
sub
and
add
mov
mov
fmuls
or
out
dec
mov
imul
mov
push
aad
ds
sbb
leave
jae
push
dec
or
mov
into
sti
dec
or
movsl
sub
divl
popa
and
and
cmp
clc
xchg
call
mov
adc
jae
pop
or
adc
cmp
aas
and
pop
loopne
push
cmp
jne
pusha
pop
in
sbbb
jecxz
push
lahf
sub
repz
das
pop
gs
lret
ss
sbbl
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
or
mov
and
mov
mov
imul
mov
xor
mov
or
sub
xor
mov
div
and
xor
mov
mov
sub
mov
mov
xor
mov
and
xor
mov
jmp
movl
movl
mov
mov
xor
mov
or
sub
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
xor
xor
mov
div
mov
mov
or
xor
div
mov
add
mov
mov
imul
mov
xor
mov
or
sub
xor
div
mov
sub
mov
mov
xor
mov
and
xor
mov
xor
sub
sub
cmp
jbe
pop
pop
pop
leave
ret
gs
mov
cs
cltd
mov
add
sub
mov
cld
imul
jmp
fs
xchg
lea
xor
lret
sub
fstpl
push
lcall
mov
in
test
ficoml
xchg
jle
pop
aad
inc
aad
sahf
test
out
adc
push
shll
inc
sbb
add
sbb
mov
sbb
pop
and
sub
xchg
outsl
aad
inc
fcoms
and
cltd
jmp
movsb
jns
pop
jmp
sub
imul
sub
pop
jno
xlat
repz
jmp
in
movsl
sub
movsl
push
fs
add
cmc
inc
ficomps
lods
xchg
fcomp
and
mov
jno
sarl
fcmovu
sbb
icebp
inc
mov
push
data16
shlb
mov
sbb
sbb
push
int
sbb
sbb
dec
mov
cmc
rolb
movsb
pop
pop
cmp
fdivrl
stos
ret
xor
and
cmp
mov
push
push
pop
outsl
mov
sbb
ss
testb
test
test
mov
fldcw
mov
mov
adc
mov
fdivl
add
sub
imul
pop
in
in
inc
mov
and
push
ds
mov
adc
popa
orb
lock
lds
dec
hlt
sub
imul
pop
push
mov
adc
adcb
xchg
scas
xor
dec
pushf
data16
push
cmp
and
outsl
inc
jno
outsb
dec
loope
mov
aam
outsb
ljmp
pop
arpl
xchg
mov
mov
lods
push
rorl
adc
aam
sbb
xchg
mov
cwtl
insl
push
cmc
push
xchg
hlt
test
mov
cmp
xchg
cmp
out
xor
pop
pusha
mov
mov
ljmp
stos
lock
sub
adc
jne
xchg
dec
popf
sarb
mov
inc
jb
icebp
cli
stos
fldcw
dec
xchg
sbb
ja
popa
loop
dec
and
addb
pop
adc
inc
or
nop
dec
add
ret
mov
je
jne
cmp
scas
adc
test
cli
inc
outsb
mov
comiss
aad
movsl
xor
push
push
sarb
xchg
mov
dec
mov
nop
jnp
outsl
test
xchg
xor
loope
pop
pop
and
cmpsb
adc
inc
add
es
outsb
mov
out
inc
js
call
mov
push
in
cmp
mov
lcall
jl
or
frstor
arpl
or
sub
leave
movb
test
shll
pusha
rcrb
ret
test
jmp
inc
insb
lods
loop
bound
cmp
dec
cs
xchg
sub
cmp
ja
stos
sbb
xor
jge
jl
push
movsl
mov
cmp
stos
mov
and
pushf
xorl
xchg
data16
scas
dec
shr
std
mov
mov
inc
sub
dec
rorl
repnz
sbb
sub
xor
shrl
push
dec
lds
or
push
xor
stc
inc
dec
add
nop
sarb
mov
ret
mov
jo
leave
daa
popa
rcrb
push
and
adc
gs
aas
mov
imul
mov
add
jmp
add
lcall
fbstp
rcll
loop
or
in
incb
std
mov
loop
mov
fcmovu
inc
jno
ss
cwtl
ds
sub
arpl
mov
jae
ds
outsl
imul
mov
roll
and
int3
test
and
das
jmp
push
sub
into
test
xor
shlb
imul
mov
push
push
scas
sbb
push
test
pop
pop
adc
ss
adc
inc
jne
push
int
imul
outsl
test
cmpsb
and
push
cli
mov
test
pop
mov
aas
arpl
or
cltd
mov
movsb
mov
and
inc
or
pop
mov
outsb
shlb
or
and
mov
or
ds
cmp
cmp
cmc
jp
mov
cmp
movsl
adc
clc
fnsave
movlps
cmpb
repz
lcall
mov
or
lea
push
mov
in
add
mov
lods
cs
push
xor
and
push
inc
xchg
insb
jmp
push
shrb
mov
arpl
adc
rclb
and
jno
pop
sahf
mov
or
xor
cmp
lret
dec
leave
rol
dec
xor
aad
rcrl
or
mov
pusha
mov
push
ret
aad
xor
mov
cmp
frstor
sbb
push
xchg
add
mov
inc
or
pusha
add
in
or
pop
sbb
ret
push
mov
into
popa
mov
ret
lds
loop
sbb
push
das
or
scas
outsl
mov
adc
shrb
mov
orb
cmc
lods
int
fcmovnb
mov
jno
pop
adc
inc
fldenv
rorb
dec
scas
nop
gs
mov
outsl
fsubrl
js
push
sub
fwait
push
inc
sbb
not
inc
testl
cli
push
loopne
test
mov
cmp
scas
movsl
jmp
sub
sahf
and
inc
xchg
in
adc
cmc
xor
pop
mov
sub
cmc
sub
popa
out
int
xchg
movb
or
push
pop
jp
test
jp
stos
mov
sahf
div
rorl
mov
pusha
fs
pushf
adc
sbb
cmp
inc
fistl
xchg
sub
cmp
iret
push
shr
push
nop
dec
adc
hlt
rorl
leave
in
das
in
ret
mov
xlat
dec
mov
xlat
mov
ret
add
orl
movsb
or
and
inc
jg
adc
push
imul
mov
inc
or
sbb
xor
loope
xor
stos
push
xor
jg
adc
mov
pop
pop
shlb
call
fdiv
xchg
mov
pop
repz
xchg
xchg
scas
pop
mov
int3
and
cmpsb
mov
or
aad
add
lcall
pop
adc
adc
mov
loopne
and
mov
iret
movsb
fdivl
in
and
mov
rcrb
movsb
shrl
push
fsubrl
aaa
lock
std
lret
jl
fdivr
mov
sbb
pop
xor
cmp
inc
xlat
mov
movsb
loopne
or
hlt
sub
xchg
pop
push
mov
stc
dec
js
test
js
loop
dec
leave
ljmp
or
aam
nop
or
xchg
sub
jp
imul
in
xor
enter
std
cmc
dec
add
ljmp
push
shl
add
daa
int
cmp
or
xchg
scas
sbb
inc
xchg
sbb
orl
arpl
push
sbb
or
push
jge
xchg
mov
and
xor
mov
jmp
pop
add
pop
and
sub
ret
jp
mov
xor
icebp
enter
ficomps
jnp
repnz
add
inc
dec
daa
clc
and
andl
mov
xchg
lds
pop
adc
fildll
stos
call
push
sub
cwtl
xchg
xchg
or
lock
xor
push
fcmovne
test
mov
add
jnp
sarl
cmp
mov
mov
lcall
aam
out
test
sti
scas
jg
aas
push
dec
and
dec
sbb
jbe
clc
sub
sub
cltd
add
lret
dec
xor
push
mov
dec
push
lcall
mov
jae
or
pop
adc
jne
pop
cs
mov
shll
push
ljmp
daa
in
bound
loope
out
push
mov
mov
in
adc
sahf
arpl
or
pusha
inc
xor
sti
push
sahf
cltd
or
sbb
leave
add
inc
stos
xor
aas
outsl
push
mov
stos
mov
and
cmp
fmuls
push
push
testl
loopne
push
pop
or
out
lock
and
push
addb
rorb
sar
xchg
sbb
clc
sub
mov
fcompl
imul
fchs
iret
push
sub
outsl
in
xor
mov
shrl
xor
shrl
aad
sti
enter
gs
pusha
scas
lret
sbb
arpl
into
add
dec
sub
pusha
jl
outsb
gs
mov
sub
push
clc
add
imul
xor
mov
ret
loope
add
jbe
or
movsl
loop
loop
dec
imul
lcall
pop
add
xchg
xchg
seto
loop
call
repnz
in
pop
sub
fisubl
movsb
mov
xchg
icebp
adc
lret
xchg
ret
lahf
sbb
mov
cmp
lds
mov
push
sbb
adc
dec
rclb
pop
sbb
jl
int3
cmpsl
out
rolb
leave
fdivrp
pop
push
mov
das
mov
or
push
stc
mov
or
mov
push
test
or
rorb
pop
xor
cltd
daa
inc
sbb
fstpt
add
and
push
pop
cmpsl
jg
in
fdiv
mov
sub
push
xor
and
insb
sub
lahf
loope
lods
in
mov
or
sti
inc
sub
xor
cmp
xor
loopne
sti
andb
int
cli
clc
je
sub
aas
push
lock
jb
neg
loop
in
xchg
cmp
push
xor
ret
sbb
sbb
sbb
out
mov
pop
pop
pop
enter
xchg
add
xchg
or
mov
push
mov
mov
mov
mov
cwtl
cltd
repnz
mov
xor
lea
setnp
sar
mov
jge
adc
int
js
push
lea
ss
sahf
ljmp
mov
xor
fadds
outsl
in
adc
pop
cs
mov
fidivl
cld
sarb
lds
ja
cmpsb
mov
pop
leave
int3
roll
orl
jbe
sub
cltd
in
sub
in
push
sbb
imul
les
stos
jge
fnsave
enter
sub
or
jbe
xorb
jno
adc
mov
xor
mov
mov
or
fnstsw
and
mov
push
and
sti
shll
xor
or
cmp
sbb
jo
lods
pop
mov
dec
mov
inc
sbb
pop
mov
cmp
lea
jno
or
lea
lods
sahf
or
lret
into
into
shll
xchg
jmp
negb
or
xor
and
fiadds
sub
stc
jno
jmp
iret
inc
cmp
push
sub
icebp
inc
inc
xor
stc
imul
mov
bound
jb
and
inc
cmp
es
inc
jecxz
dec
pusha
imul
jg
jmp
mov
dec
pop
hlt
rcrb
add
iret
sub
jae
sub
loop
cmp
fdiv
mov
cmpl
mov
mov
int3
in
loope
mov
jbe
shlb
outsl
dec
sbb
xlat
in
stc
jnp
ret
fwait
test
adc
aaa
mov
push
xor
andl
test
push
xor
fwait
mov
xor
xor
push
mov
xor
lahf
rorb
lea
addl
les
mov
hlt
sub
lret
jmp
cmp
daa
jl
cmc
cmp
lret
xchg
push
xor
and
pop
adcl
je
addr16
jp,pt
jns
hlt
inc
dec
stos
ljmp
xor
mov
or
push
xor
dec
pop
jb
mov
jge
sbb
mov
dec
fisttps
pop
adc
mov
fwait
subb
inc
pop
ret
pop
adc
pop
inc
pop
sbb
jbe
out
pop
cmpsl
sub
ret
and
jo
or
lods
loope
lcall
aas
fstpl
mov
mov
sub
push
movl
xor
push
or
push
mov
sub
mov
xor
movl
mov
mov
andl
mov
xor
or
mov
and
mov
xorl
add
mov
mov
sub
imul
mov
mov
xor
add
adcl
mov
imul
movl
movzwl
movzwl
shr
or
sub
mov
cmpl
jb
movzwl
or
jmp
pushl
pushl
call
mov
mov
shrd
shr
mov
cmpl
jl
movzwl
and
mov
mov
xor
jmp
pushl
push
push
push
call
mov
xor
adcl
xor
addl
or
addl
movzbl
push
lea
adcl
push
sbbl
shl
xorl
call
mov
add
mov
mov
mov
xor
mov
mov
shrd
shr
addl
mov
orl
xor
addl
xor
xorl
shl
inc
mov
subl
or
movl
cmp
movl
je
mov
sub
mov
cmpl
jl
sub
jmp
pushl
call
mov
mov
add
mov
movzwl
shr
orl
mov
mov
orl
mov
orl
add
addl
imul
movzwl
cmpl
jge
movzwl
and
jmp
push
pushl
call
or
mov
mov
mov
add
mov
orl
movzwl
sbbl
shr
addl
mov
xor
mov
add
mov
mov
sub
imul
movzwl
mov
shl
or
sub
mov
cmpl
jge
jmp
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
xor
xorl
xor
addl
or
add
mov
shl
movl
cmp
movl
jne
cmpl
jge
add
jmp
push
pushl
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
cmpl
jg
add
jmp
push
call
mov
xor
xor
or
jmp
mov
mov
xor
xor
xor
shld
add
mov
mov
mov
mov
shrd
shr
mov
mov
shl
mov
mov
xor
xor
or
cmp
je
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
cmp
je
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
mov
shl
mov
mov
mov
xor
xor
shrd
xor
shl
shr
or
or
or
jne
mov
mov
shrd
shr
xor
mov
mov
pop
xor
pop
shl
or
pop
leave
ret
mov
mov
shrd
shr
xor
mov
mov
jmp
pusha
aam
mov
notb
insl
cmp
test
sub
inc
arpl
push
cs
xchg
movsl
adc
lock
mov
mov
lahf
stc
and
mov
cltd
dec
and
add
cld
movb
outsb
inc
xor
out
cltd
push
xor
mov
addr16
mov
dec
or
mov
adc
inc
daa
cli
pop
inc
xor
xor
pop
or
aaa
xchg
je
cld
xor
outsb
sub
lods
in
outsb
lods
aaa
push
adc
in
adc
adc
pusha
xchg
pushl
adc
mov
dec
add
jmp
cltd
aad
arpl
in
fidivrl
mov
test
std
xchg
mov
repnz
sub
mov
fistpl
push
mov
stos
arpl
repnz
bound
cmpsb
fisubl
in
enter
mov
mov
jp
outsb
and
in
outsl
jno
loop
jle
sbb
inc
or
into
dec
push
rclb
push
cmp
mov
test
cmpb
stos
loopne
daa
aaa
inc
and
add
ds
pop
pop
pop
in
push
jbe
adc
dec
ljmp
in
int3
xchg
mov
dec
inc
push
lock
push
add
xchg
ret
add
je
enter
jmp
roll
sub
mov
mov
sbb
dec
adc
fwait
lds
movsl
jae
jbe
sub
sub
fdivl
arpl
mov
addr16
sbb
sub
in
dec
movsl
xlat
aas
jecxz
lods
or
fsubrs
adc
es
ficomps
push
jg
or
mov
dec
mov
decl
int3
sub
mov
test
into
rclb
sub
addr16
mov
pop
divb
scas
and
hlt
adc
xchg
push
adc
mov
daa
cmc
jns
xchg
scas
std
jp
icebp
dec
cld
out
dec
scas
cmp
push
shl
lret
sbb
movl
dec
xchg
int3
inc
fnstenv
in
je
mov
adc
sti
addl
dec
sbb
lock
pushf
cmp
jo
lcall
push
pop
mov
xchg
sbb
add
pop
out
hlt
xor
in
lock
adc
ja
in
sub
jmp
inc
in
mov
xor
jmp
jb
jb
or
xchg
sarb
pop
pop
xchg
mov
mov
pop
xlat
push
rolb
xor
push
adc
xchg
mov
dec
sbb
flds
mov
out
xlat
fdivl
sub
outsl
into
lret
fdivr
xchg
ret
int
inc
rcrl
adc
and
popf
pop
mov
mov
fists
mov
push
inc
jg
pop
fnop
jnp
repz
cmp
mov
cmp
mov
ret
jecxz
testl
stos
scas
test
pop
push
xchg
divb
cmp
subl
mov
xor
sbb
and
and
bound
idivb
imul
cmpsl
scas
jle
mov
mov
adc
add
push
push
into
ss
inc
mov
pop
aam
sbb
mov
divb
aaa
mov
mov
insb
sar
adc
mov
dec
out
xchg
sub
xlat
outsb
imul
xchg
popf
fldt
ss
sub
xlat
lea
ret
xor
adc
inc
ljmp
ja
mov
mov
dec
add
push
lcall
popf
mov
sub
jecxz
push
push
jmp
jl
lcall
out
pop
or
ret
fwait
stc
push
and
mov
inc
repnz
lds
mov
aam
ds
inc
fs
mov
imul
xchg
clc
xlat
cmc
jg
mov
jae
sti
rcr
push
stc
sub
mov
call
mov
or
sub
test
movsb
lret
pop
sbb
fdivl
lods
divl
or
push
out
dec
repnz
jno
jne
cltd
jl
jno
das
std
push
jl
loopne
icebp
rolb
mov
imul
shlb
and
pop
divl
rcrb
or
sbb
push
in
dec
adc
or
inc
xor
mov
cmp
xchg
jg
jnp
xlat
jnp
orl
daa
popa
daa
ret
mov
int
aaa
pop
daa
push
mov
in
stc
inc
pushf
add
push
cmp
clc
mov
xor
inc
sub
pop
bound
ret
std
inc
rol
dec
add
dec
loope
adc
inc
and
sahf
mov
fbld
ja
inc
scas
outsb
dec
pop
inc
mov
ret
mov
add
inc
aas
mov
push
not
lock
inc
mov
jne
adc
sub
inc
int
fadds
pop
fs
loop
bound
idiv
test
jno
or
sbb
add
jne
mov
sarb
lods
mov
movsb
insl
mov
jmp
inc
int3
ja
xor
insl
imul
cld
mov
jmp
xchg
push
dec
sub
mov
mov
cmpsb
stos
inc
and
btr
insb
js
adc
jno
cmp
aam
xor
out
jbe
xlat
sub
ror
ss
fs
mov
xchg
lret
lret
jge
inc
jb
xchg
mov
xor
scas
movl
arpl
push
movsl
inc
mov
test
neg
pop
enter
mull
mov
jns
outsl
les
bound
sub
mov
repnz
pusha
inc
fsubrl
or
xchg
decl
jbe
or
xor
inc
rclb
pop
hlt
add
dec
dec
mov
push
xorb
mov
sarl
inc
dec
lock
dec
sbb
hlt
push
imul
sbb
ljmp
pop
jle
in
test
filds
xor
cmp
mov
jns
mov
push
jl
cmpsb
popa
pop
in
lret
cmpsl
in
aaa
sbb
out
and
mov
int
add
mov
inc
add
insb
repz
in
mov
xchg
je
xchg
dec
sti
xor
call
loope
xchg
lds
int
jmp
sbb
fbld
push
and
cmp
and
mov
sbb
arpl
std
pop
iret
mov
or
in
xchg
jne
sbb
push
inc
leave
xchg
mov
jp
arpl
jb
push
stos
fistpll
push
xor
sbb
mov
into
mov
nop
push
push
icebp
push
push
loope
and
sti
inc
jae
xor
in
push
push
push
xlat
rcrb
pop
shll
aad
pop
inc
inc
stc
stos
movsl
ljmp
movsl
cmp
jmp
test
mov
fildll
sub
mov
imulb
xor
test
scas
repz
push
das
cltd
lea
lods
or
adc
mov
sarb
push
int
movsl
sbb
cmp
mov
mov
sub
fisttpll
jecxz
mov
xchg
pusha
in
fdivs
mov
out
mov
cmc
int3
xor
cwtl
ss
mov
xchg
cmpsb
das
inc
pop
mov
fwait
cmp
mov
cmp
push
mov
stc
movsl
movsl
out
pop
inc
cmp
sbb
dec
push
repz
jns
adc
mov
gs
test
repz
sahf
push
fdivrl
nop
jmp
jns
add
push
lea
insl
addr16
sahf
hlt
scas
cwtl
dec
jp
push
mov
xchg
psubsb
sub
add
fs
fnstenv
and
add
inc
push
or
mov
jae
or
gs
dec
stos
dec
mov
sub
jo
mov
std
clc
mov
iret
out
js
adc
cmp
sarb
push
mov
mov
xchg
pop
xchg
test
jp
std
test
fnstsw
mov
ror
xchg
ja
icebp
mov
loope
lea
flds
loopne
xor
insb
and
mov
or
jo
xor
mov
movsl
into
lea
addl
dec
dec
test
fs
dec
inc
shll
xor
pop
mov
cmp
scas
test
jbe
mov
cmp
mov
sbb
ldmxcsr
xor
imul
jmp
inc
rclb
push
cmc
lret
cmp
int3
arpl
cmp
outsb
aaa
int3
mov
test
sub
or
sbb
xchg
sbb
das
iret
test
cmp
sbb
push
fcmove
and
aaa
ret
xchg
test
mov
aad
in
mov
test
out
ljmp
daa
cmpsb
cmp
inc
in
into
mov
ret
fwait
and
jae
in
popa
flds
cwtl
push
or
dec
sahf
outsb
adcl
int
es
and
add
int3
std
aaa
fcoms
cmpsb
push
jmp
push
lahf
insb
sarl
fs
xchg
xchg
mov
inc
pop
cli
dec
push
mov
sbb
int3
scas
dec
lods
stos
pushf
stos
and
xlat
xchg
dec
js
push
push
mov
mov
stos
in
popf
inc
pop
std
mov
shrl
push
xchg
pushf
fnsave
xchg
xchg
gs
or
jg
adcb
rcr
fidivrl
or
push
test
je
in
popf
and
int
gs
aam
bound
jno
test
jno
xchg
xchg
mov
push
lret
xchg
shlb
insb
push
mov
cmc
lds
mov
push
jns
data16
adc
popf
xor
repnz
jae
jmp
cld
sarb
dec
add
out
and
pop
mov
mov
mov
mov
rcll
jns
out
sbbl
jns
sbb
dec
repnz
push
popa
out
das
int
push
sub
mov
in
in
sbb
xor
ss
outsl
xchg
xlat
xchg
bound
sti
clc
xor
mov
popf
push
or
mov
mov
ret
cwtl
fnstenv
xor
cmpsb
mov
and
cwtl
fidivs
and
mov
dec
mov
aaa
add
mov
and
inc
jns
lods
rcll
add
dec
sbb
push
dec
mov
cmp
repz
mov
sub
sarb
add
mov
daa
add
lods
jb
mov
xchg
xlat
inc
xchg
lock
or
mov
inc
adc
lcall
cmp
popf
or
sub
pop
fwait
loop
loopne
aad
xlat
cmpsl
push
int
gs
dec
fadd
je
sbb
sbb
or
mov
je
int
xchg
lds
addl
adc
andl
mov
ret
lods
fistpll
add
aad
das
push
hlt
int
mov
les
push
insb
lds
clc
pop
sbb
add
push
dec
and
repz
je
xlat
imul
lock
push
leave
sub
xor
daa
xor
push
mov
enter
or
test
xor
push
fwait
jae
test
les
orl
lahf
and
loopne
cmp
in
mov
out
push
sbb
mov
jb
add
and
inc
cmp
push
xor
mov
inc
ficompl
mov
sub
enter
pop
rol
pop
leave
imul
cmp
iret
lds
inc
out
lods
sahf
jnp
xchg
stos
xchg
pop
mov
es
shl
movsl
orb
mov
fxam
pop
pop
adc
insb
mov
iret
jno
stc
sub
adc
xchg
in
push
or
xchg
call
call
psubusb
dec
sarl
test
in
jne
in
fsubs
bound
cmp
xchg
out
cmp
out
push
and
mov
sub
push
dec
test
or
and
add
inc
cmp
insb
shll
loopne
add
inc
cld
xchg
lahf
data16
xor
sub
inc
sub
jge
jp
add
dec
pop
push
mov
aam
sub
loopne
and
fisubrl
loope
out
mov
inc
nop
bswap
das
mov
push
test
stos
test
lods
inc
pusha
adc
cmp
mov
int3
and
mov
sub
push
push
movl
movl
movl
movl
mov
mov
lea
mov
and
imul
mov
xor
div
mov
xor
push
lea
mov
movl
movl
mov
mov
add
or
shr
xor
mov
lea
mov
movl
movl
movl
movl
mov
pop
div
mov
xor
div
mov
sub
mov
lea
mov
movl
movl
mov
mov
and
and
sub
or
mov
sub
mov
movl
mov
add
xor
sub
imul
add
mov
movl
movl
movl
mov
mov
and
xor
mov
sub
sub
mov
movl
movl
movl
mov
mov
xor
mov
or
push
pop
shr
xor
mov
div
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
push
push
push
push
call
mov
mov
add
adc
and
and
add
adc
xor
mov
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
mov
xor
lea
add
push
mov
mov
and
mov
and
sub
sub
xor
mov
div
lea
xor
add
push
mov
mov
mov
mov
xor
add
mov
mov
add
mov
mov
and
mov
mov
or
xor
add
mov
push
mov
sub
mov
or
push
xor
xor
pop
div
sub
call
mov
mov
mov
mov
and
or
xor
div
xor
mov
div
cmp
jne
mov
mov
and
mov
xor
div
push
pop
xor
div
mov
or
sub
xor
lea
push
mov
imul
mov
div
mov
xor
push
mov
add
push
mov
div
mov
imul
mov
or
mov
xor
mov
mov
and
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
mov
xor
xor
and
cmp
jne
cmp
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
pop
pop
leave
ret
add
repz
cmc
cmp
scas
jg
xchg
jg
add
pop
icebp
mov
jbe
lret
cmp
int
addr16
pusha
xor
ljmp
fsubr
push
loopne
add
int
mov
cmc
scas
xchg
xor
addr16
in
pop
sbb
int
int3
pop
sbb
cmp
cmp
test
jge
push
clc
add
pop
cmpsl
aam
imul
cltd
and
jle
ja
bound
les
scas
cli
sbb
dec
out
dec
cmp
jl
pop
daa
sbb
fs
mov
loope
int3
sub
sub
movsb
pop
fildl
repz
dec
cltd
outsl
xchg
mov
insb
in
mov
pop
and
mov
dec
mov
cmc
inc
xchg
mov
scas
outsb
sahf
dec
sbb
cld
xchg
aam
inc
inc
aas
in
movsb
add
sub
bound
lret
push
inc
pop
push
lret
adc
outsb
cmp
fwait
clc
shrl
jns
imul
push
test
jns
int3
test
mov
rcll
pop
push
jmp
into
testb
mov
repnz
sbb
int
out
sar
ss
lock
popf
inc
decl
xchg
scas
cs
sub
sub
xchg
in
shl
mov
adc
je
lock
xor
pop
and
repnz
out
data16
test
or
inc
jmp
cld
cmp
push
inc
dec
lods
aam
cmp
mov
ror
fiaddl
lret
ds
mov
test
and
cmp
push
in
ss
mov
sbb
push
mov
pop
in
aas
mov
mov
pushf
cmp
cli
in
fildll
shlb
push
icebp
sbb
dec
xchg
sub
jne
xchg
fs
in
pop
fistl
ret
test
mov
dec
mov
insl
dec
int
cmc
inc
shlb
ja
ljmp
push
jnp
and
mov
out
scas
lods
mov
lahf
cltd
xor
sbb
push
js
dec
pop
shll
aam
jb
pushw
mov
clc
out
jae
mov
mov
or
sbbl
sbb
push
cs
dec
mov
nop
cs
nop
cmpsl
out
pop
out
dec
and
and
dec
mov
adc
inc
add
xchg
popf
pop
mov
dec
cmp
das
pop
mov
movsb
xchg
mov
ret
sbb
lahf
push
dec
fidivrl
rcrb
lea
jb
data16
dec
mov
add
push
mov
decl
pop
cmp
test
out
push
adc
adc
flds
mov
lret
sub
add
leave
sub
dec
mov
jle
or
mov
mov
mov
xor
pop
jbe
mov
xchg
mov
cmp
adc
jnp
xchg
add
adc
test
negl
fdivrs
mov
mov
push
sbb
add
neg
int
cmp
jg
mov
cmp
xor
xchg
jmp
inc
fists
addl
add
dec
cmpsl
outsb
cltd
out
adc
clc
adc
sar
lods
mov
rolb
pop
mov
mov
jno
adc
dec
inc
aam
push
jg,pn
add
add
xchg
cmpsb
out
or
out
call
jae
add
xor
mov
push
dec
adc
mov
out
cmpsb
ja
adcl
add
in
pop
ss
sahf
popf
jnp
imul
fildll
xlat
or
fnstcw
js
addl
cwtl
gs
aad
int3
clc
mov
lods
sub
jge
mov
andb
inc
pop
mov
test
ret
cmp
clc
fcomps
repz
pop
ret
fwait
aaa
shll
inc
idiv
test
push
jg
lcall
out
sub
loop
sbb
ljmp
rcr
jg
push
popf
lret
dec
inc
cmp
jge
inc
cmp
mov
inc
enter
out
mov
cmc
test
dec
imul
into
insb
mov
mov
cmp
jb
addr16
jg
push
roll
jmp
ficoms
sbb
shrl
movb
xlat
ret
push
push
leave
add
cwtl
loopne
jge
test
outsb
inc
cmp
inc
leave
int3
ljmp
dec
adc
subb
cwtl
pop
xor
xchg
popf
mov
imul
enter
out
lret
xchg
and
scas
inc
fs
and
mov
out
sbb
add
mov
inc
jg
xchg
fdivs
cmpsl
fadds
xorb
push
test
adc
sar
popa
cmpsl
jge
vreducesd
push
and
dec
jns
and
push
inc
add
mov
lock
mov
aad
popf
in
and
push
xlat
mov
xorl
pop
fsts
and
popa
sbb
push
aas
mov
pushf
add
jle
dec
push
divl
lock
or
or
call
jle
dec
pop
adc
lds
int
out
or
std
mov
mov
lret
xchg
sbb
add
xchg
dec
leave
sub
add
fwait
adc
fisttps
sbb
icebp
sbbl
adc
lcall
sbb
int
jnp
jecxz
sbb
cmpsl
mov
xchg
movsb
push
dec
mov
mov
enter
pop
jp
dec
pop
les
dec
mov
xchg
roll
test
mull
push
out
rorb
loop
mov
sbb
icebp
mov
data16
sub
dec
int3
xor
dec
fcomps
add
pop
push
test
pop
push
or
fs
sbb
int
lock
inc
inc
jb
imul
add
jg
mov
popa
pop
mov
hlt
out
stos
test
or
pop
xlat
fmuls
nop
mov
xor
jns
xchg
pop
xor
divb
idivl
ret
cs
pop
push
sbb
icebp
fcoml
add
inc
out
dec
hlt
pop
xchg
jg
push
xlat
and
mov
ljmp
jmp
inc
sbb
call
cli
jno
push
xor
outsb
pop
ja
adc
add
push
js
mov
testl
xchg
or
lock
iret
mov
inc
dec
push
xlat
aas
sbb
push
mov
and
leave
sub
movsl
roll
fsubrl
pop
sahf
pushw
or
sub
mov
mov
andl
stos
sarb
xchg
and
sub
aas
adc
jnp
push
inc
adc
int
fst
push
and
mov
or
xor
outsl
xor
insl
xchg
ss
repnz
xor
test
es
outsl
mov
and
inc
fdivrs
xlat
jae
jge
loop
xor
dec
add
jns
xor
ljmp
fsubrl
movsb
add
cmp
mov
in
scas
movsb
insb
push
testl
enter
repz
lret
add
ljmp
pop
dec
mov
mov
adc
xor
mov
cmp
pushf
sahf
fimuls
and
movsb
push
xor
sub
mov
mov
outsl
fists
lahf
mov
cmpsl
pop
out
in
fsts
pushf
inc
mov
mov
and
sub
shll
xlat
std
mov
cs
mov
and
in
inc
inc
pop
scas
fwait
and
jg
dec
xchg
push
sbb
adc
out
imul
pop
notb
test
fst
and
or
dec
jo
pop
test
lds
jns
in
pushf
pop
mov
outsb
fbstp
dec
test
inc
lock
imul
mov
sbb
shlb
push
pop
out
mov
pop
xchg
mov
mov
out
inc
sbb
dec
jp
xor
icebp
bound
jb
sbb
add
xor
rclb
iret
jb
sbb
cmpsb
ret
data16
xor
pop
or
sti
or
fcmovb
push
jl
mov
pop
or
sbb
xor
call
hlt
int3
jb
roll
js
mov
cmp
std
jne
xlat
jns
in
ret
sbb
and
xchg
mov
mov
call
out
lods
mov
push
xor
addr16
popa
jbe
mov
push
mov
or
movsb
jo
loop
out
jb
sbb
pop
cmp
pushf
jmp
insl
adc
out
mov
cmpsb
es
aad
lret
or
mov
pop
jge
cmp
lods
or
dec
lods
pop
ljmp
push
cmp
xchg
ret
stos
cmc
mov
xchg
lahf
inc
lods
push
mov
cmpsb
cmp
xchg
xor
xlat
jg
dec
jnp
or
mov
push
xchg
adc
mov
negb
pop
sarb
jle
and
imul
push
fldl
lods
sbb
leave
pop
sub
test
incl
push
inc
mov
lcall
shlb
into
adc
push
jno
rcll
xor
leave
jno
dec
inc
insl
inc
or
mov
cmp
lods
in
cmp
push
push
scas
lcall
data16
sub
mov
test
push
clc
movsb
ret
popa
out
mov
jb
dec
enter
out
push
sbb
or
rep
mov
inc
test
cmpb
aad
insl
ret
pop
dec
xor
cmp
jo
inc
gs
loop
xchg
es
lock
jo
jne
add
push
xor
ret
pop
lahf
fs
sarl
movsl
mov
aad
stc
or
jo,pn
cwtl
andl
aad
cmpsb
ret
stos
lds
xchg
movsl
pop
cltd
enter
xchg
mov
and
jge
cmp
pop
cmp
call
jmp
push
bsf
imul
and
cmp
mov
stc
pop
mov
lds
fbstp
shlb
jle
pop
clc
sub
adc
mov
jecxz
cmp
aad
pop
je
xchg
stos
std
imul
push
das
mov
xchg
lods
mov
inc
shll
pop
leave
mov
aas
mov
sub
nop
mov
nop
dec
fucomip
test
cmp
stos
nop
mov
cmc
cmp
sbb
loopne
les
mov
or
lock
imulb
insl
pop
jnp
scas
mov
push
dec
sbb
add
cmpsb
stos
sub
fimull
pusha
and
push
jno
or
aaa
loope
lcall
push
xchg
cmpsb
cmp
and
rol
in
push
insb
popa
les
xchg
adc
stc
rclb
mov
arpl
adc
popf
cmc
fisubrs
mov
inc
or
sbb
inc
mov
and
loopne
fcmovnbe
cmpsl
inc
sbb
mov
jno
dec
cwtl
add
jecxz
aaa
adc
mov
push
in
xchg
add
in
sbb
bound
repz
fisttps
push
mov
fwait
push
mov
dec
out
out
cli
mov
mov
bound
cmp
fcomps
inc
push
xor
stc
imull
xchg
test
lods
sarb
gs
leave
inc
pop
aas
lret
sbb
inc
cld
rcr
and
arpl
xor
cmpsl
bound
sbbl
push
cmp
cmp
ja
les
dec
mov
loopne
test
cmp
scas
cmp
xchg
adc
and
inc
push
test
insl
out
adc
pop
push
sbb
daa
jg
or
subb
loop
into
pusha
lret
mov
mov
pop
mov
xlat
arpl
icebp
sub
xchg
push
sub
pop
cwtl
adcl
sbb
jo
adc
jl
repnz
sub
rcll
sbb
xchg
xlat
loope
or
sub
cmp
or
gs
mov
lahf
movsl
scas
dec
dec
add
fldt
mov
jg
jge
iret
dec
lds
outsb
push
ret
push
dec
xchg
aas
sub
mov
pop
inc
ljmp
jae
jb
int
mov
jl
negb
mov
int3
pop
push
jb
xor
xchg
push
lahf
sbb
subl
push
loope
push
sbb
add
arpl
fldcw
arpl
adc
pop
stc
push
insl
and
jmp
sahf
xchg
push
jbe
mov
jecxz
mov
push
mov
and
sub
mov
add
lea
adc
mov
cmpl
jge
adc
jmp
push
pushl
pushl
call
mov
mov
mov
sub
push
push
sbb
addl
mov
orl
orl
andl
lea
push
lea
push
adcl
call
sbb
mov
mov
mov
sub
sub
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
mov
cmpsl
stc
jae
mov
and
lea
add
ds
filds
jbe
leave
sti
xchg
ret
adc
dec
in
in
jmp
add
clc
outsl
les
mov
call
aas
push
shrl
nop
test
jg
mov
addr16
push
je
mov
push
cwtl
test
add
sbb
adc
aaa
stos
mov
mov
movsl
shll
xor
repz
data16
inc
mov
mov
aaa
add
lods
loopne
push
push
push
insb
push
pop
js
adc
mov
mulb
into
imul
xor
imul
sbbl
repnz
mov
stos
pop
rolb
lods
shrl
push
cmp
xor
and
nop
rol
pusha
push
mov
test
inc
inc
sbb
outsl
inc
sar
mov
js
fsubs
in
call
and
das
frstor
mov
pop
in
sbb
mov
out
arpl
lahf
xchg
imul
xchg
or
jge
xchg
dec
fidivrl
repnz
pop
mov
xchg
or
popf
mov
cs
add
gs
movsl
lret
mov
push
enter
xor
test
cmp
js
lcall
mulb
mov
add
inc
and
cwtl
ds
dec
loopne
shr
sub
cmp
loopne
inc
mov
mov
or
fistpl
lahf
sub
subb
call
inc
or
ret
jmp
shll
mov
inc
push
fs
push
inc
add
es
jmp
mov
movsl
adc
mov
mov
pop
fnsave
or
notb
aaa
mov
sbb
mov
or
push
jle
push
ret
or
scas
call
outsl
mov
ja
sub
nop
xor
or
arpl
sub
in
lds
test
outsb
ret
cmp
or
xor
insb
mov
xchg
cmp
cmp
test
jp
pop
push
or
mov
lcall
sbb
adc
pop
sub
icebp
repz
adc
negb
push
repnz
cmc
jge
sbb
mov
mov
fnstcw
scas
cmpl
inc
or
aaa
sbbb
xor
mov
outsl
test
int
arpl
inc
sbb
mov
sbb
xorb
popa
xchg
jle
pop
mov
imul
rorb
mov
mov
or
jecxz
mov
jno
or
mov
nop
adc
testl
mov
pop
mov
sub
xchg
or
push
xchg
mov
imul
loopne
bnd
mov
jecxz
mov
incb
inc
nopl
pandn
popa
mov
inc
daa
dec
sub
mov
sub
fidivrs
rcrl
mov
push
xlat
push
push
loope
enter
frstor
xchg
fdivr
xor
or
push
and
je
mov
push
out
pop
mov
shrb
sbb
clc
testb
xor
addb
mov
pop
sbb
je
push
mov
mov
bound
sub
cmp
insb
xchg
loopne
cmp
mov
xchg
cli
lods
jmp
mov
adcl
enter
sbb
adc
sub
fst
sbb
pop
imul
pop
hlt
xor
addb
pop
jmp
test
int3
addr16
cmp
es
cmpsl
rorb
xor
and
mov
mov
adc
hlt
pop
xor
add
lcall
scas
jl
add
outsb
cvtps2pd
lahf
jno
add
add
lds
sbb
fdivrl
xchg
pop
lds
iret
jae
cmpsb
xor
outsl
imul
je
enter
lock
ficomps
imul
test
stos
fadd
popa
test
jge
inc
xchg
jb
adc
mov
sub
xlat
leave
call
cwtl
add
loopne
or
adc
jnp
mov
cmpsb
out
das
add
fisubl
jno
mov
pop
adc
ret
sub
test
andb
xchg
cmp
and
sub
mov
loop
hlt
sub
mov
bound
and
pop
add
inc
pop
lahf
mov
fwait
mov
push
add
add
hlt
mov
aaa
in
ja
xchg
fsubrp
dec
pop
dec
mov
addr16
rol
xor
lods
sahf
pop
mov
mov
jae
push
xchg
xchg
sbb
sarb
mov
push
imul
js
aas
roll
jmp
daa
or
lahf
flds
mov
push
lahf
xchg
push
lidtl
fsubs
mov
lret
lods
mov
out
fnsave
fisubs
mov
pop
sti
mov
pop
rclb
arpl
es
lods
or
imull
cmc
orl
or
leave
jno
sub
xchg
sub
aam
mov
adc
dec
adc
insl
sar
stc
loop
inc
jns
add
je
mov
pop
cmpsb
jp
xor
subb
dec
inc
pop
call
inc
mov
insb
ljmp
repz
jecxz
push
cmp
aam
aad
aas
add
xor
in
movl
inc
jmp
fucom
arpl
xor
dec
sub
pop
movsb
cld
sbb
ss
adc
stos
popf
adc
push
dec
jne
test
mov
lods
ds
nop
hlt
das
outsl
jg
insl
xor
or
insl
arpl
cmpsb
adc
push
jno
cmp
in
jno
jg
test
test
aas
pushf
aad
sub
mov
push
repz
push
xor
shrb
clc
and
adc
sti
dec
lcall
push
mov
push
sbb
mov
sbb
dec
pusha
out
mov
call
aam
out
insl
test
test
bound
enter
andb
xor
outsl
dec
adc
out
jge
insl
and
sbb
ret
dec
sbb
and
arpl
pop
pop
cmpl
rorb
inc
cmpl
icebp
xlat
mov
pop
out
divb
not
mov
cmp
stos
jbe
push
mov
sub
rcr
jg
dec
cmp
mov
push
xchg
repz
mov
mov
sub
pop
mov
test
loop
xchg
into
ret
push
sbb
fisubs
pop
mov
xorb
sub
push
fwait
sub
jb
mov
lea
ss
cmpsb
testb
push
fsub
sub
loope
and
adc
jle
jle
push
xchg
out
movsb
lahf
cld
shlb
rol
jnp
add
pusha
jno
iret
push
inc
pop
adc
mov
arpl
adc
lret
mov
movsb
in
lods
mov
ds
xchg
pop
popa
sub
outsl
data16
pop
movsl
pusha
mov
sub
xchg
dec
cmp
call
jmp
call
pop
pop
sbb
mov
es
dec
jmp
gs
in
mov
rcll
out
insl
jae
das
shrb
aaa
stos
sbb
outsl
xchg
xor
push
add
lcall
cmc
push
add
xchg
lods
jbe
out
inc
jmp
addb
push
out
dec
jmp
fisubs
mov
push
pusha
or
pop
idiv
mov
mov
or
add
inc
stos
vmovapd
mov
addl
pop
lcall
xor
add
ljmp
mov
add
lods
jne
lea
loop
mov
pop
inc
fldl
or
xchg
pop
out
das
push
dec
add
mov
fiaddl
test
cmp
jno
mov
lods
inc
jl
xchg
addr16
movsl
jl
adc
mov
rcr
cmc
cs
loop
xlat
lret
jp
int3
fnsave
rcl
jecxz
test
sti
repnz
bound
std
hlt
jbe
outsl
cmp
push
xor
sub
cmp
imul
fidivl
aam
inc
cmp
outsl
mov
loop
sbbl
add
fisubs
inc
xchg
cmc
sahf
xchg
and
pop
into
lods
insb
adc
add
sbb
and
insb
sbb
pop
je
sub
fwait
adc
test
shl
daa
addl
xchg
mov
mov
or
sbb
fs
loope
mov
jmp
out
loop
and
test
pop
sub
shlb
mov
out
call
jmp
cmp
pop
aas
adc
mov
mov
into
xchg
fnsave
test
pushf
jmp
xchg
aad
sbb
addr16
jb
lret
jmp
cmpsb
cmpsb
or
lcall
pop
jnp
shrl
pop
mov
cmp
lds
or
fistpll
inc
inc
adc
ret
and
cwtl
jle
and
dec
xor
popa
dec
lods
ds
and
mov
mov
inc
sahf
negb
fldenv
lods
inc
es
imul
inc
xchg
ds
inc
ret
out
lcall
shll
pop
mov
fiaddl
add
add
mov
pop
ds
xchg
sub
addl
pusha
push
adc
inc
push
and
dec
sbb
dec
data16
mov
rolb
dec
bound
push
xchg
inc
sti
mov
pop
test
cmp
cmp
push
sub
xlat
inc
imul
adc
cmp
js
fcmove
xchg
inc
fs
stos
pop
cmp
jno
adc
xchg
dec
jg
fs
add
out
inc
jg
mov
pop
jo
inc
repz
shll
pushf
dec
jns
add
cli
aad
push
fldcw
adc
jne
or
imul
or
ja
jg
mov
add
xchg
and
mov
repnz
mov
ror
push
mov
jae
cwtl
aas
mov
lahf
push
push
push
loop
movb
sahf
je
fadds
roll
xchg
enter
dec
xlat
dec
mov
push
mov
clc
xchg
sbb
dec
mov
push
pop
hlt
jo
mov
ja
or
xchg
into
mov
or
sbbl
and
mov
cmpsl
stc
cs
rol
test
rcrl
repz
dec
out
enter
adc
lods
das
and
mov
call
bound
pushf
dec
faddl
fldcw
xor
mov
xor
mov
stos
push
aad
sub
pop
inc
xchg
cmpsl
lock
xlat
lcall
and
mov
fsubrs
xor
aaa
pop
xor
hlt
or
push
xchg
and
stos
repnz
lret
xchg
sbb
push
jmp
loopne
bound
scas
cld
cmp
in
rorl
aas
cmp
pushf
sub
push
mov
decb
inc
xor
inc
jnp
movsb
jge
mov
outsb
pop
jmp
mov
repnz
sub
cmc
xchg
add
insl
sahf
jl
xchg
mov
jge
pop
adc
sbb
sub
sbb
xchg
cwtl
mov
jae
add
sbb
js
scas
dec
dec
xor
xchg
out
mov
lea
mov
push
xchg
pop
jns
sahf
insl
insl
sbb
xchg
insl
rclb
cld
mov
mov
jp
fimuls
mov
sbb
pop
loopne
or
push
cmpsb
cmp
cmp
sti
and
imul
imul
pusha
movsb
jae
rcrb
call
or
in
je
sahf
les
ss
cwtl
pop
fcomip
pusha
pop
out
out
xlat
xchg
insb
in
icebp
cmp
out
mov
sbb
dec
xchg
inc
lea
notl
addr16
lahf
in
popa
cmp
adc
mov
and
mov
add
int3
mov
stc
adc
jae
mov
popf
lcall
test
mov
mov
out
cli
cli
bound
xchg
mov
test
push
mov
and
sub
push
push
push
push
call
push
lea
push
push
call
cmp
jne
sbbl
xor
inc
jmp
movl
movzbl
sub
mov
not
mov
movl
mov
and
lea
cmpl
ja
adc
movzbl
sub
mov
jmp
push
call
mov
lea
mov
mov
mov
or
mov
incl
lea
add
neg
shl
xor
xor
shr
or
add
mov
mov
and
sub
add
mov
xor
movl
movl
mov
mov
sbb
mov
mov
xor
cmpl
jg
sub
jmp
push
pushl
push
push
push
push
push
call
sub
mov
movl
movl
movl
movl
mov
xorl
mov
movzwl
sub
or
cmpl
jge
orl
xor
or
sub
jmp
push
push
pushl
call
xor
mov
or
cmpl
jg
jmp
push
call
mov
xor
div
mov
mov
cmp
ja
mov
mov
cmp
movl
jne
add
mov
mov
add
shrd
adc
shr
mov
sbb
mov
xor
movl
xor
or
sbb
mov
mov
movl
mov
xorl
mov
cmpl
ja
or
jmp
pushl
push
pushl
pushl
push
push
call
shl
mov
shrd
shr
mov
mov
xor
subl
xor
or
mov
addl
mov
shl
cmpl
jge
sbbl
jmp
push
push
call
mov
shrd
shr
mov
mov
xor
andl
xor
sbbl
shl
xorl
or
mov
cmpl
jge
and
jmp
push
push
push
call
movl
mov
mov
mov
shrd
shr
cmpl
jge
sbb
jmp
pushl
call
mov
mov
xor
xor
or
mov
addl
push
orl
pushl
xorl
lea
sbbl
push
subl
shl
orl
call
mov
orl
mov
orl
mov
mov
andl
mov
mov
lea
sbbl
push
lea
push
orl
lea
mov
push
orl
call
xorl
push
subl
push
pushl
call
orl
mov
adcl
mov
mov
or
mov
cmpl
jb
adc
jmp
push
push
push
call
add
shl
add
shr
or
mov
xor
add
xorl
mov
lea
mov
lea
sbb
mov
mov
adc
mov
cmpl
jg
sbb
jmp
pushl
push
pushl
push
call
mov
shrd
xor
shr
mov
mov
xor
orl
or
xorl
mov
lea
xor
xor
or
mov
or
cmpl
jl
xorl
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
adc
movzwl
shl
movzwl
or
xor
and
movzwl
imul
subl
movzwl
orl
or
andl
or
mov
subl
mov
andl
mov
mov
mov
mov
mov
add
mov
orl
mov
andl
mov
andl
mov
subl
movzwl
subl
movzwl
xorl
and
mov
sbbl
movzwl
adcl
imul
xorl
mov
imul
movzwl
subl
and
movl
mov
movl
movzwl
movl
cmp
movl
jg
or
movl
cmpl
jg
and
jmp
pushl
call
movl
movl
mov
mov
sub
xor
cmpl
jbe
xorl
jmp
push
call
mov
sub
and
mov
movl
movl
and
movl
add
mov
mov
adcl
xor
or
andl
mov
and
sub
movl
mov
movl
cmp
movl
je
or
mov
mov
add
xor
add
xor
cmpl
jge
sbb
jmp
push
call
mov
xor
shld
mov
mov
mov
cmpl
ja
subl
sub
jmp
push
call
mov
add
mov
cmp
jne
mov
movl
cmp
movl
je
sbb
mov
subl
mov
and
mov
mov
sbbl
sub
orl
sub
xor
addl
xor
shr
shl
subl
or
xor
adcl
sub
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
add
shr
or
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
movl
mov
mov
xor
xor
xor
mov
mov
shld
add
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
xor
xor
shrd
mov
shl
xor
shr
or
mov
or
mov
mov
xor
cmp
jne
cmp
je
movl
movl
movl
mov
mov
sub
xor
mov
sub
and
mov
movl
movl
movl
mov
mov
xor
or
mov
and
sub
mov
cmp
je
lea
push
lea
call
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
push
adc
mov
push
xor
mov
xor
push
push
call
mov
mov
mov
mov
xor
xor
add
push
adc
push
xor
xor
push
push
mov
call
mov
shr
xor
or
or
mov
mov
xor
xor
mov
push
mov
mov
mov
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
and
and
mov
xor
mov
xor
sub
mov
mov
sbb
mov
add
mov
adc
mov
mov
mov
mov
mov
xor
xor
add
adc
xor
xor
add
push
adc
xor
mov
xor
mov
mov
shrd
shr
add
push
adc
push
push
call
or
mov
or
mov
mov
mov
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
adc
mov
ffreep
pop
lods
andl
out
fwait
add
sub
notb
sbb
imul
jo
ficoms
faddl
mov
and
push
and
ret
sub
loop
outsl
fwait
push
clc
out
jp
adc
sbb
push
cmp
aas
mov
mov
and
sbb
cs
in
push
roll
sbb
shlb
and
sub
sahf
dec
in
pop
and
enter
roll
idivb
jmp
aas
in
into
xchg
rcll
aas
scas
xlat
shlb
cs
jp
fidivs
lock
push
cld
mov
adc
insl
in
mov
add
add
push
sbb
mov
test
and
or
push
in
or
imul
call
jl
out
mov
inc
add
scas
dec
lea
jle
inc
and
cmp
xor
inc
jecxz
test
out
mov
dec
fimull
lea
cli
fnstcw
sarb
in
jl
pop
sub
sbb
mov
dec
loop
pop
insb
and
repnz
popf
sahf
adc
sti
sub
jns
movsb
adcl
cmp
leave
xor
inc
adc
aad
out
xchg
and
sbb
leave
out
cmpsb
ret
xchg
sahf
std
jge
fs
pushf
popf
jnp
inc
je
test
jp
hlt
out
lcall
icebp
mov
mov
adc
scas
mov
mov
sbb
mov
pop
es
inc
sbb
xchg
xchg
add
add
cmc
and
adc
movsl
sub
push
fst
imul
cmp
call
pop
push
cwtl
xchg
add
pop
lea
xor
mov
or
mov
std
inc
pop
aaa
into
inc
xchg
sub
sbb
push
lcall
inc
ret
aas
mov
movsb
or
mov
or
repnz
sahf
rorb
xchg
xchg
int3
cltd
xlat
dec
push
cld
dec
sub
add
push
pop
sub
adc
xchg
push
addb
xor
movsb
lret
lahf
insb
mov
pop
out
and
js
inc
out
pop
rcr
pushf
into
inc
mov
dec
mov
sbb
or
jecxz
stos
adcl
mov
imul
push
mov
mov
ror
js
xchg
jmp
mov
jbe
pushf
psrld
dec
push
loop
jae
pop
test
or
call
aaa
addr16
sarl
sahf
pop
dec
xchg
xchg
orl
jae
lret
push
adc
mov
leave
jb
inc
mov
or
adc
stos
cmpsb
mov
xor
stos
stos
or
out
int
or
mov
push
int3
dec
aad
int
js
cmp
sbb
mov
jne
lods
mov
cmp
jle
push
dec
out
test
das
push
or
adc
mov
lret
add
push
scas
out
inc
sub
lret
xchg
clc
cmp
cwtl
shrl
and
push
sbb
mov
fisubl
dec
arpl
dec
add
cld
push
outsb
imul
pusha
ja
xor
ret
mov
push
fistps
push
add
xchg
ret
bound
dec
rorl
iret
outsb
lock
dec
jg
sub
mov
jle
pushf
push
daa
out
sub
sldt
lods
es
stos
add
pmullw
mov
aad
cs
push
imul
hlt
cmc
mov
lock
or
mov
cmpsb
pop
sbb
dec
sbb
testl
fnstsw
and
add
and
mov
lret
lds
nop
loop
jl
fucom
insl
lods
jg
addr16
mov
cld
icebp
adc
cld
jo
sbb
push
pop
xchg
idivl
add
movsb
xor
repz
mov
or
push
aad
mov
popf
flds
pop
push
or
mov
fcoml
sub
cmp
ljmp
or
dec
dec
jb
mov
push
mov
hlt
sbb
aam
mov
jb
jae
jb
and
cld
cmp
xor
imul
cmp
ljmp
lds
addr16
sub
leave
dec
xchg
push
cmp
lahf
pushf
imulb
cmp
sbb
andl
out
es
push
sbbb
lods
pop
cli
enter
and
or
sub
es
sub
test
fcomi
jle
mov
lret
dec
push
rcll
mov
fidivl
fadd
cmp
mov
mov
std
jo
aaa
inc
test
xchg
lcall
insb
rcl
xor
pop
and
mov
sbb
jnp
das
enter
leave
scas
out
push
call
sbb
leave
outsb
aaa
insb
cmp
add
mov
add
mov
pop
and
lods
outsl
xor
mov
lods
fistl
push
fidivs
in
je
mov
xor
push
mov
pop
lds
clc
pop
pop
sbb
jo
pushf
or
sbb
xor
pop
sbb
push
mov
aam
rcr
pop
lea
aas
xor
add
mov
aad
mov
stos
inc
pop
pop
dec
divb
les
cmpb
repz
mov
das
subl
pop
repz
lea
in
mov
cmp
loopne
cmp
dec
mov
sub
pop
sbb
data16
imul
mov
ds
or
cmpsl
jns
sarb
in
pop
sub
xlat
aad
cwtl
sub
inc
pushf
dec
addr16
xchg
addr16
int3
clc
adc
scas
inc
rorl
adc
adc
mov
and
roll
mov
or
arpl
xchg
jmp
jmp
stc
add
iret
pop
mov
push
sub
inc
out
es
movsl
jg
popa
cltd
call
imul
add
inc
arpl
lds
imul
mov
fistl
mov
xchg
push
pop
das
cmp
cwtl
sub
ss
into
js
and
movl
test
lods
std
sub
inc
push
insl
xchg
aad
ljmp
loope
adc
dec
fstpt
lods
bnd
dec
aas
cmpsb
sbb
mov
ljmp
xor
arpl
or
roll
outsl
in
adc
mov
imul
mov
fs
mov
les
or
fcmove
leave
test
pop
fsubrl
inc
pop
mov
push
xor
push
daa
xlat
dec
lods
testb
push
loop
mov
lret
push
push
mov
dec
and
outsl
rcr
and
in
lds
mov
ljmp
pushf
and
gs
mov
mov
add
push
mov
nop
loopne
xchg
inc
push
stos
pusha
pop
ds
jp
addr16
clc
sahf
mov
lock
cmp
out
fdivs
inc
outsl
insb
repnz
div
mov
jns
pop
adc
mov
xor
push
scas
in
bound
insb
add
pop
dec
inc
jge
out
or
in
inc
ljmp
xchg
std
scas
imul
out
sub
sbb
pop
outsl
fisttpll
test
popf
push
sbb
xor
jnp
fcomps
daa
mov
pop
jp
imul
js
out
jno
cmp
aaa
loope
in
jb
imul
xor
popf
cltd
add
or
jmp
mov
fisttpll
rcrb
xorl
xor
dec
pop
xlat
aaa
push
out
shlb
loopne
dec
mov
ds
push
jo
outsl
loop
mov
lea
sub
js
and
mov
clc
jb
or
in
test
pop
mov
cmc
in
fwait
pop
mov
xchg
cli
repz
mov
shrb
and
push
adc
lea
popl
es
mov
jp
cli
out
fidivrl
pop
ja
push
iret
xor
mov
mov
ret
push
adc
shlb
cli
dec
jno
mov
inc
scas
jo
neg
subl
push
xchg
daa
cltd
mov
leave
lahf
mov
dec
inc
jns
nop
dec
mov
call
sbb
iret
xchg
push
jecxz
lds
mov
xor
jle
pop
and
je
sub
lahf
jns
and
or
loopne
mov
mov
fs
or
stos
aaa
das
subb
push
les
aam
repnz
sub
cmpsl
xchg
cmpsl
sbb
mov
sbb
mov
xor
mov
dec
jnp
imul
in
jbe
push
imull
test
xchg
popa
dec
mov
aam
js
adc
pop
push
movsl
xor
add
outsb
test
lea
pusha
adc
in
xchg
aad
scas
adc
cmp
xchg
out
adc
push
lret
cmpsl
mov
xchg
xor
pop
adc
inc
mov
movsb
sbb
sub
pop
mov
int3
daa
movsl
bound
test
or
inc
aaa
repz
rcrb
mov
les
js
sahf
sbb
fidivl
push
push
imul
sub
add
fisttps
lahf
into
loopne
mov
repz
inc
cmp
ret
add
addr16
ljmp
or
mov
sbbb
cmp
nop
out
lahf
test
sti
das
adc
pop
add
sub
or
lds
mov
push
repz
mov
mov
stos
inc
insb
xchg
lea
mov
cmpb
mov
sub
test
bound
insb
jae
scas
or
sbb
mov
movsl
cmp
mov
mov
sub
mov
xorl
or
mov
aam
arpl
xchg
jno
jae
in
jecxz
in
jb
push
call
sub
shl
push
pop
popa
stos
lods
add
pop
dec
sub
sahf
mov
cmpsl
sub
gs
js
enterw
mov
ja
movsb
movsb
ret
mov
pop
retw
mov
mov
dec
js
cltd
xchg
add
adc
fwait
mov
clc
mov
mov
push
sub
pop
mov
ja
pop
sbb
stos
xchg
loopne
divb
push
adc
mov
mov
inc
mov
and
mov
fst
sub
adc
outsb
jmp
ret
or
lock
arpl
ljmp
outsl
adc
dec
or
pushf
shlb
sub
int
in
ljmp
pop
pop
lds
push
repnz
fs
push
mov
jns
pushf
or
fcompl
cld
stc
inc
loope
cmp
fmull
push
mov
xchg
imul
mov
out
fstps
ljmp
mov
cmc
jno
and
cs
jmp
cmp
outsl
mov
repz
push
loopne
inc
and
xchg
sub
pop
pop
mov
add
mov
dec
and
daa
inc
cmp
mov
movsl
add
aaa
inc
cmp
sbb
aam
jbe
lods
cmc
lcall
mov
pop
not
cmc
enter
fwait
popf
mov
push
movsl
pop
sahf
out
mov
subb
add
inc
mov
jp
cltd
cwtl
popa
cltd
aad
add
ret
inc
mov
cltd
insb
int
in
icebp
xchg
add
lds
cltd
xor
add
hlt
in
fstl
xor
and
cld
lahf
in
xlat
add
movsb
scas
jb
push
and
xor
rep
in
sbb
jg
mov
sete
lock
insl
mov
popa
xlat
imul
xlat
sbb
ss
sbb
mov
rorl
subb
in
repz
ds
loop
popf
or
mov
ja
aaa
cld
and
ret
fdivrs
dec
cli
leave
mov
out
xchg
lock
pushf
popf
out
fmuls
sub
jo
and
mov
sarl
sti
lods
ret
add
mov
add
lret
push
rcrb
sbb
inc
out
add
pusha
fsubrl
xchg
dec
adc
pop
xlat
add
sbb
jl
mov
jg
inc
or
dec
dec
lret
movsb
sti
push
lock
scas
das
ret
in
cltd
jl
mov
in
scas
push
inc
cmpsb
pop
incb
jmp
ret
and
mov
sbb
and
inc
movsl
xor
imul
push
adc
fimuls
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
xor
div
mov
xor
div
mov
mov
shr
xor
sub
mov
sub
xor
cmp
jne
mov
mov
imul
mov
and
or
mov
sub
add
mov
imul
and
mov
or
mov
shl
mov
mov
add
sub
mov
lea
add
mov
mov
mov
sub
mov
imul
mov
or
mov
or
mov
imul
mov
add
cmp
je
mov
jmp
mov
mov
imul
xor
and
mov
lea
jmp
movl
movl
mov
mov
xor
div
add
xor
sub
leave
ret
outsb
push
ja
ja
decb
and
xchg
sbb
add
sub
test
mov
movsb
xchg
test
cmpsl
ret
jo
jo
movsb
lods
adc
jae
nop
inc
push
pop
test
ds
push
pop
or
out
mov
cmp
fdivrl
and
xor
ret
pop
shl
leave
jp
jmp
mov
mov
sarl
xchg
js
subb
cwtl
mov
lock
les
or
pop
or
mov
daa
fisubrl
cwtl
add
fs
inc
mov
fidivl
jp
dec
push
std
dec
loop
jb
adc
cwtl
cmp
test
je
repnz
push
pop
push
call
cld
dec
xor
data16
ja
adc
cmp
inc
test
int
ret
rcl
sahf
pop
xchg
cmpsb
mov
adc
imul
jl
in
or
cmp
jecxz
xor
mov
sahf
add
or
sbb
fwait
cmp
adc
sub
pop
ja
mov
rcrb
xchg
and
mov
test
cld
xchg
scas
jno
xchg
jge
les
sbbl
pop
ljmp
cld
insl
jae
lods
test
mov
adc
sbb
inc
mov
mov
push
cmp
movsl
sub
push
or
xchg
xchg
sahf
mov
scas
test
jb
mov
mov
mov
inc
mov
push
pop
adc
jne
add
movsl
xchg
mov
adc
call
out
nop
clc
hlt
pop
fwait
aad
adc
mov
out
jbe
and
out
icebp
in
mov
mov
lahf
push
fists
inc
pop
jg
mov
ja
out
fsubl
or
orl
cltd
jecxz
ljmp
pop
cli
cwtl
cmpsb
jp
sbb
inc
fnstenv
jno
sub
jle
scas
mov
or
adc
pop
push
mov
and
inc
loope
sbbb
sarl
dec
cmp
adc
daa
push
jae
jge
idiv
jae
rcll
xchg
add
add
xchg
les
add
sub
adc
adc
and
dec
cmovno
add
ja
daa
mov
jecxz
jle
add
nop
aaa
xchg
inc
pop
jecxz
pop
and
icebp
andl
pop
mov
xchg
xchg
or
mov
sub
push
sbb
rclb
lods
xor
cmp
mov
adc
fsubl
repnz
mov
cs
lea
mov
cmpsb
cld
mov
add
mov
push
jecxz
out
adc
arpl
push
scas
or
test
dec
pop
mov
stc
jecxz
stos
call
mov
mov
adc
dec
sahf
push
pop
out
in
mov
aad
pop
push
addr16
sbb
imul
in
repz
insb
clc
lcall
data16
adc
pop
pop
or
sbb
xor
xchg
out
mov
inc
adc
data16
fisubs
cltd
cmp
iret
hlt
mov
test
lret
addr16
dec
cmpsb
fs
pop
je
loope
inc
adc
push
fdivp
loopne
sub
mov
dec
jecxz
mov
lcall
xor
outsb
lds
jo
mov
add
outsb
xchg
lcall
in
sbb
or
sbb
and
push
imul
or
fucom
push
add
or
popa
popf
pop
test
pushf
push
xor
xor
inc
rorl
insb
sub
or
push
push
add
insl
mov
outsl
mov
popf
cmp
daa
mov
push
mov
mov
aam
or
out
fistps
lods
into
and
jl
fwait
mov
jne
call
xor
mov
or
and
shrl
fldl
cmp
mov
std
sub
cmp
push
mov
jae
xchg
pop
pop
cltd
xchg
pop
in
cld
lds
int3
sbb
pop
jg
mov
push
jb
add
and
insl
cmp
mov
sbbb
mov
testb
daa
adc
fcmove
or
jb
pop
decl
flds
mov
nop
mov
leave
aam
push
dec
frstor
loop
pop
xchg
inc
and
add
sahf
mov
jge
cmp
in
add
lahf
pushf
xorl
mov
jbe
pushf
loope
pop
lods
stc
mov
sub
cmp
xchg
hlt
icebp
lods
test
pop
loopne
push
or
js
add
or
daa
jmp
out
inc
add
dec
fcomps
dec
lcallw
push
lahf
and
es
movsb
or
push
call
repz
jmp
mov
mov
push
dec
cmpsb
or
cld
cltd
ror
adc
jno
xor
mov
xchg
jnp
jnp
fwait
xor
clc
xchg
cwtl
mov
sti
aaa
icebp
loope
test
js
divl
jecxz
fcompl
or
add
pop
dec
out
movsb
fcoms
lcall
mov
je
xorb
shll
stos
mov
sub
mov
aad
push
xchg
fsts
rcrl
pop
dec
sub
pop
dec
adc
lds
mov
sbb
mov
push
icebp
sub
test
inc
push
pmuludq
xor
insb
adc
mov
sar
std
movsl
xchg
sbb
adc
fnsave
addps
ret
lret
imul
push
inc
sbb
pop
fmull
lahf
pushf
insl
push
pop
dec
sub
arpl
fsubs
dec
gs
iret
xchg
in
testl
decl
mov
xlat
mov
jnp
fwait
sarb
push
inc
ret
lock
jbe
stos
fsubrp
mov
jbe
cmp
mov
and
push
jge
idiv
jne
out
cmpsb
popf
call
sub
test
add
repz
inc
ficoml
cmpsb
cmpl
repz
pop
xchg
mov
outsl
hlt
jp
dec
pop
out
jl
sbb
push
and
cli
mov
or
pushf
in
addr16
ds
fildll
jmp
aas
stc
jecxz
jb
movsl
mov
movsl
mov
push
shl
repnz
mov
lret
adc
clc
stc
push
jge
xorb
cld
mov
and
test
sub
cmpsl
jb
lock
data16
push
inc
inc
sub
clc
mov
repnz
cmp
sub
lret
aad
and
test
mov
cwtl
loope
pop
popa
mov
dec
stos
mov
and
fucomip
mov
out
xchg
shll
sub
cmp
push
addr16
jl
sbbl
push
mov
jbe
fisttpl
and
jae
nop
dec
pop
cmp
mov
pop
xor
pop
xchg
pushf
mov
sub
sti
enter
or
push
cmpl
sub
or
cmp
outsb
sahf
cmp
pop
aam
and
pop
fisttps
ljmp
xor
mov
movl
in
test
inc
and
inc
ss
enter
push
jo
cmp
add
mov
xor
and
movsb
mov
fisttpl
jge
pop
xchg
push
sub
jno
cltd
mov
cmpsl
imulb
jbe
cmp
nop
fcompl
je
cli
dec
pcmpeqd
pop
fwait
pop
add
add
jmp
out
push
dec
sbb
xor
sbb
mov
lretw
and
jnp,pn
data16
inc
or
bound
sub
leave
mov
xchg
cmc
data16
inc
sbb
hlt
add
je
jbe
call
sbb
push
loop
sbb
ja
ret
jecxz
mov
or
aas
jo
jno
into
mov
stc
mov
adcl
xchg
mov
push
sbb
add
ss
fiadds
in
je
xor
mov
sbb
popa
xor
out
sub
dec
das
bound
mov
es
out
mov
xchg
dec
xor
popf
and
shr
ficompl
xchg
push
in
insb
cmpsb
in
stc
jp
sbb
jecxz
push
lret
sbb
xchg
jns
mov
fsubrp
push
aas
shll
push
dec
scas
ds
dec
jle
sbb
test
xchg
test
or
mov
push
rclb
cwtl
mov
inc
daa
test
bound
sub
lret
cwtl
dec
lret
and
paddsw
mov
je
add
data16
cmp
adcb
xor
mov
icebp
push
add
xor
xchg
inc
cmp
pop
repnz
nop
gs
and
addr16
xchg
or
fnstsw
imul
loop
or
push
pop
sbbb
cmp
dec
sub
cmp
xchg
shlb
out
sub
and
data16
and
dec
cld
sahf
lret
addr16
aam
js
pop
sub
jmp
dec
and
sahf
test
mov
adc
aaa
fs
fsts
sbb
enter
cltd
arpl
insb
jp
cmp
repz
jbe
mov
clc
repnz
mov
dec
lods
cmp
outsb
lds
imul
jns
fildl
loop
loop
cmp
push
dec
sbb
mov
adc
xchg
mov
enterw
fsts
clc
xchg
jmp
dec
inc
stos
loopne
mov
addb
outsl
mov
xchg
call
sbb
call
imul
gs
loope
sub
jae
or
enter
pop
ret
adc
bound
hlt
jbe
sbbb
fcmovne
xor
and
sbb
test
cld
popl
xchg
arpl
out
or
filds
aad
and
sub
jns
xchg
test
hlt
push
int3
mov
aaa
lcall
lahf
jecxz
aad
pop
mov
je
aad
loop
dec
sahf
jmp
mov
decb
mov
aam
mov
hlt
fidivl
mov
out
pop
sbb
xor
and
scas
shrb
inc
stos
das
jmp
push
mov
cmpsb
pmaddwd
adc
add
mov
dec
mov
pop
lcall
jno
mov
mov
or
sti
or
jl
fcom
scas
int3
insl
lds
jne
arpl
cli
es
xchg
dec
out
ret
and
mov
dec
mov
test
add
pop
or
andb
or
mov
push
xchg
enter
inc
sub
or
cld
ja
sub
jecxz
push
cmpsl
sub
push
pushf
jp
sti
aad
and
pop
xchg
fs
xchg
insl
cwtl
daa
pusha
in
xchg
lea
push
addb
call
add
arpl
add
lret
cmp
rolb
jg
dec
pop
mov
cmpsl
shlb
xchg
js
push
add
rorl
adc
cmc
add
adc
mov
call
cmpsb
scas
inc
shlb
xchg
add
jge
cmpsb
scas
cmpsb
jg
repz
xchg
inc
pop
inc
int
xchg
fdivrp
or
scas
repnz
push
sbb
fdivrl
dec
xchg
out
inc
jns
data16
lcall
lods
adc
and
lds
pop
movsb
fbld
inc
out
repz
lods
xchg
jg
mov
lea
fcoms
insl
fwait
subl
lahf
sub
mov
xorb
sbb
pop
movsl
and
xor
out
mov
xchg
xor
mov
ret
jecxz
iret
mov
or
xchg
xchg
icebp
inc
lods
and
inc
cmpsb
movl
push
not
jl
xchg
in
pushf
shl
scas
jp
movsl
jae
adc
dec
in
and
icebp
jl
mov
call
mov
sbb
and
inc
ljmp
in
xor
ret
sarl
add
xchg
adc
push
daa
xchg
push
lret
dec
mov
popa
bound
adc
ja
fcmovu
les
imul
jmp
jae
sbb
add
pop
int
je
mull
sti
add
insb
jo
adc
and
jno
inc
inc
comiss
movsl
mov
push
push
adcl
xchg
fnstcw
sub
jbe
stos
add
imul
ret
arpl
mull
jl
mov
in
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
mov
mov
imul
mov
sub
shr
shr
and
sub
xor
and
add
mov
sub
mov
mov
and
xor
div
mov
mov
push
imul
mov
and
xor
xor
pop
sub
cmp
ja
push
movl
movl
movl
mov
add
mov
and
imul
mov
sub
add
mov
mov
xor
xor
push
pop
div
mov
mov
push
sub
mov
add
mov
mov
mov
xor
xor
div
mov
sub
add
mov
lea
mov
mov
imul
mov
sub
shr
shr
and
sub
xor
mov
sub
mov
mov
and
xor
div
mov
imul
mov
and
xor
xor
pop
sub
cmp
jbe
pop
pop
pop
leave
ret
hlt
xor
fsub
frndint
cmp
imulb
bound
mov
add
add
scas
pop
add
jnp
loop
lds
gs
stos
sub
push
push
mov
pop
ja
jp
add
shl
xor
mov
aad
jo
repz
mov
lods
sbb
imul
xor
test
cmpsl
repnz
adc
sahf
sub
insl
mov
pop
cmp
jns
stos
push
cmpsl
ljmp
pushf
jbe
inc
insl
fs
mov
cmp
pop
gs
popf
cwtl
or
fistpll
xchg
imul
mov
jge
mov
sub
ss
rolb
in
pushf
test
sub
inc
jns
mov
push
jle
inc
pop
jecxz
es
iret
std
pop
imul
or
mov
sub
cmp
sbb
push
nop
outsb
sub
popw
in
aas
xchg
xorb
cmp
or
cs
ljmp
test
inc
jmp
jno
inc
sbb
push
push
and
cmpsl
sub
cwtl
cltd
popa
add
jne
andl
insb
pop
pop
jnp
add
inc
aam
outsb
pop
inc
pop
sarl
fisubrs
js
aaa
or
fdivrs
mov
mov
shlb
jne
cwtl
fimuls
call
xor
stos
xchg
in
sbb
and
cmc
mov
in
add
mov
and
or
in
in
div
ret
pop
mov
insb
popa
mov
pushf
bound
std
or
mov
jne
ds
lods
cmp
pop
lods
imul
ljmp
and
or
cmp
xchg
rorl
push
shll
add
pop
andb
mov
sti
and
or
add
mov
jb
add
sub
adc
sbb
mov
bound
fwait
or
idivb
sbbl
andb
data16
inc
pop
stos
sub
sbb
sbb
imul
inc
mov
mov
into
enter
lret
ljmp
scas
dec
jno
sub
insb
xlat
imul
inc
push
push
adc
outsb
fs
out
adc
inc
clc
adc
les
add
aaa
sbb
stos
sub
inc
add
scas
push
push
arpl
movsl
and
pop
jge
jnp
test
aas
mov
jnp
stc
mov
and
push
lahf
cmpsb
mov
mov
jle
rcrl
xchg
lret
and
ljmp
cmp
lahf
jbe
mov
in
addl
rcl
loope
mul
sbb
in
scas
push
cmp
ret
les
fistps
ljmp
mov
es
fisttpl
fwait
aam
jo
jl
dec
jl
sbb
push
outsl
jns
or
ret
mov
mov
jae
pop
or
aas
or
in
outsl
jo
xchg
loope
insl
push
mov
fwait
rcll
pop
lods
cmp
gs
sbb
mov
add
mov
adc
scas
cmp
xchg
imul
sub
inc
push
sbb
push
jecxz
cmp
adc
les
fmull
enter
lret
xchg
imul
inc
negl
mov
xchg
rcll
xchg
cwtl
sub
leave
dec
cwtl
sahf
lret
mov
imul
fstpl
and
pop
sbb
cmc
or
mov
sub
mov
sub
inc
aaa
rolb
sub
enter
xor
mov
cmc
sub
sub
iret
push
lods
int3
xchg
les
sub
sbb
push
mov
push
pop
mov
inc
gs
adc
mov
push
adc
sahf
dec
cwtl
das
mov
rcrl
fwait
aaa
xlat
mov
or
les
dec
sbb
sbb
cwtl
sbb
ss
jne
dec
sbb
jnp
cmpsl
or
adc
adc
mov
leave
test
hlt
mov
push
lods
mov
mov
push
jp
lock
rcr
clc
popa
ja
adc
mov
dec
lret
gs
aad
xor
loopne
cmp
popf
jmp
rclb
sahf
int3
push
mov
frstor
cmc
cld
imul
stos
push
xchg
adc
and
jl
adc
sbb
xchg
adcl
js
mov
push
sub
sub
jne
jl
aam
shll
hlt
mov
mov
add
pop
and
shl
dec
and
adc
dec
inc
pop
out
xchg
or
insb
lcall
imul
pop
sub
add
or
repnz
je
mull
jmp
lods
mov
aas
out
add
movsl
jecxz
repz
mov
push
dec
inc
icebp
inc
or
xor
xchg
repnz
shlb
mov
cmc
daa
scas
or
adc
add
daa
std
sbb
nop
jge
fwait
pop
ljmp
clc
and
pop
sahf
jg
loopne
inc
fcompl
sbb
mov
stos
insb
and
sub
jbe
add
sbb
jp
jecxz
aam
cmpsl
test
scas
push
loop
in
add
lea
repnz
adc
ljmp
jecxz
adc
outsb
in
mov
xor
xchg
add
xrelease
add
mov
insb
lahf
imul
out
cltd
or
mov
adc
loop
clc
push
adc
mov
cld
pop
aad
and
rcrl
sub
mov
or
or
movsl
loope
add
adc
or
mov
dec
pusha
xor
dec
push
movsl
mov
push
cmpsb
sbb
adc
jecxz
je
lock
stc
sub
mov
or
cmp
sub
lods
cmc
cmpsb
lods
dec
ljmp
shlb
xor
inc
cmp
cld
aad
xchg
and
push
jg
pop
push
xchg
xor
gs
fimuls
push
inc
fldl
and
loop
sbb
pop
fdiv
xchg
insl
cwtl
and
les
movsl
loopne
adc
inc
mov
or
std
cmpsl
fmuls
jecxz
pop
dec
dec
out
cwtl
testb
jb
mov
mov
mov
dec
pop
sbb
mov
sbb
test
xchg
aam
xchg
movsb
js
mov
ret
insb
daa
arpl
test
sub
lahf
aad
sti
rcrl
rclb
outsb
das
jo
pushl
mulb
enter
fidivrs
pop
outsl
sbb
repz
mov
aad
add
data16
xlat
sti
test
lret
popa
add
or
inc
imul
cld
xchg
dec
adc
gs
xchg
aaa
sbb
pushf
es
xor
or
cmp
stc
push
mov
jp
sbb
pop
push
dec
push
push
cmp
fistps
mov
shlb
and
push
ret
nop
out
out
sub
lds
jne
sbb
or
nop
mov
mov
fcomip
jnp
mov
xor
fsub
orb
or
pop
mov
sub
mov
pop
cmpb
mov
xlat
mov
cltd
and
push
or
dec
inc
push
cmp
nop
sbb
jge
mov
jns
outsb
push
xchg
shll
icebp
add
popf
xchg
cmpsb
jae
push
sbb
test
xchg
imul
pcmpgtd
test
push
jle
gs
aad
sub
fnstsw
dec
bswap
leave
mov
dec
push
jno
xchg
scas
or
sub
mov
inc
and
lret
addb
mov
rcrb
scas
mov
dec
lret
or
inc
inc
ja
push
add
sbb
add
pop
inc
push
inc
sar
mov
or
loope
ret
jecxz
shll
clc
les
fstpt
lahf
xor
imul
cld
je
inc
adc
mov
lcall
pop
rcrb
shll
icebp
add
gs
push
mov
xchg
pop
jb
mov
xorb
aad
ja
lret
je
repz
fs
and
adc
add
pushf
int3
pop
das
push
out
outsl
mov
xchg
into
jno
add
and
cli
bound
sub
xor
push
mov
pop
mov
popa
insl
xlat
adc
push
push
into
stc
cmp
push
and
or
mov
adcb
or
call
mov
xlat
dec
sub
mov
pop
jp
mov
mov
xchg
inc
xor
and
in
sub
add
xchg
lcall
xor
or
ljmp
outsb
out
pusha
fidivl
mov
add
test
xchg
ja
sbb
cmp
cmp
dec
stos
sub
mov
pop
adc
repz
ja
in
jmp
lret
sbb
sub
out
mov
inc
push
fildl
push
es
push
out
das
outsb
mov
stos
cld
jnp
adc
pop
insb
lea
mov
imul
push
iret
fisttpl
lds
mov
mov
ljmp
mov
or
insl
mov
adc
xor
mov
push
std
mov
push
cwtl
aas
out
int
fisubl
addr16
mov
int3
insl
int3
pop
rclb
shrl
pop
das
mul
maxps
or
aad
xchg
mov
dec
shl
pop
fsts
push
cmp
lods
decb
subl
mov
fbld
pop
cs
call
lock
xor
xchg
sahf
std
cmp
push
sbb
sbbl
loopne
ds
aad
push
into
inc
shrb
xor
inc
outsb
movsb
ret
lods
push
fists
or
insl
xchg
push
cs
jmp
xchg
and
sarb
popa
or
insl
loope
adc
int3
dec
mov
fst
dec
push
sbb
jae
jge
pusha
or
dec
int
sub
pushf
adc
jle
xor
es
outsb
repnz
add
loopne
cli
test
xchg
jp
in
inc
push
fdivrp
iret
outsb
out
sub
inc
bound
das
enter
mov
jb
pop
bound
add
aad
pop
sbb
scas
outsb
xchg
pop
clc
jo
mov
jb
insb
sbb
lods
add
add
sub
xchg
mov
ret
imul
mov
inc
mov
scas
jae
dec
lods
mov
push
pop
push
loop
inc
mov
jp
mov
mov
cs
popa
mov
add
push
cmp
xchg
jo
and
fmull
repnz
notl
pusha
lret
insl
sbb
stos
push
daa
adcb
and
mov
inc
popa
sub
push
adc
inc
inc
mov
arpl
jmp
mov
adc
shll
lods
adcl
mov
testl
mov
fstpt
xlat
int
mov
in
push
mov
fsubrl
inc
bswap
add
add
sbb
sti
cmc
cmp
xor
push
dec
push
inc
xchg
xor
jns
aam
in
dec
dec
ret
movsb
aas
push
pop
test
je
fwait
jo
mov
sub
add
push
fs
andl
add
gs
test
cwtl
fistl
imul
mov
xor
sub
push
stos
jl
mov
aas
cmpl
and
test
fistps
sahf
arpl
xchg
xlat
cli
ljmp
dec
push
add
cmp
call
dec
inc
js
aas
hlt
andl
repz
jle
test
jae
je
aad
jnp
jb
out
aas
adc
adc
test
rcr
sarl
pop
mov
gs
add
jbe
mov
stos
loopne
mov
mov
stc
jne
in
fsubrs
icebp
test
cmc
adc
and
or
dec
es
popf
sub
nop
ljmp
xchg
into
fisttpll
mov
sbb
pop
idivb
dec
cmp
call
jge
jmp
dec
mov
outsb
xchg
cltd
mov
lea
lea
sbb
mov
cld
mov
int3
cmpsb
das
xor
and
aas
xlat
clc
jl
xchg
in
pop
xchg
xchg
aaa
push
shrb
add
xchg
cmp
mov
lods
roll
pop
xorl
lret
inc
inc
mov
aaa
pop
fildll
popa
in
out
jne
mov
and
in
sub
adc
movl
movl
xorl
movl
mov
or
mov
xor
addl
or
mov
add
mov
sub
xor
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
mov
mov
and
xor
sbbl
div
mov
orl
xor
push
push
xorl
push
push
movl
or
mov
xor
mov
mov
movl
or
sub
adc
mov
xor
movl
cmpl
jbe
not
jmp
pushl
push
push
pushl
push
call
movl
movl
movl
movl
mov
mov
xorl
div
sub
mov
xor
div
or
mov
cmpl
ja
adc
jmp
pushl
push
call
or
imul
mov
sub
mov
mov
or
movl
sub
sbb
mov
xorl
xor
xorl
add
orl
xor
mov
mov
sbb
movl
andl
movl
movl
cmpl
jbe
jmp
push
push
pushl
call
movl
mov
mov
xor
mov
sub
mov
adcl
div
mov
sbbl
xor
notl
xor
cmpl
jg
xorl
sub
jmp
push
push
call
xor
mov
sub
mov
movl
mov
cmpl
jle
adc
jmp
push
push
push
pushl
pushl
call
add
shr
pop
div
sub
mov
movl
movl
xor
cmpl
jge
adc
jmp
push
pushl
call
inc
mov
mov
movl
mov
mov
xor
xorl
xor
sbbl
div
mov
adcl
xor
div
mov
movl
or
mov
andl
sub
mov
mov
xor
or
sub
sub
movl
mov
and
movl
cmpl
jl
add
add
jmp
push
push
call
movl
mov
mov
lea
mov
xorl
or
cmpl
jg
movl
jmp
push
pushl
call
or
sub
mov
movl
movl
movl
sub
mov
mov
mov
add
mov
subl
xor
or
mov
sub
add
adc
mov
mov
sbb
movl
movl
subl
mov
or
mov
xor
subl
or
sub
mov
movl
cmpl
jb
movzwl
or
jmp
pushl
pushl
pushl
pushl
call
movl
movl
mov
mov
imul
or
adcl
lea
subl
push
call
mov
sub
mov
xor
sub
mov
and
mov
mov
div
sbb
mov
or
imul
cmpl
jbe
mov
xor
add
sub
or
jmp
push
call
imul
mov
sub
and
add
andl
mov
movzbl
sub
mov
movl
movl
movl
xor
movl
movl
xor
movl
cmpl
jb
sbb
adc
jmp
push
push
call
movl
movl
mov
sub
or
xor
or
and
xor
mov
div
xor
mov
cmpl
jle
or
jmp
pushl
push
call
lea
mov
mov
mov
sub
add
mov
or
cmpl
jg
jmp
push
push
push
push
call
mov
or
xor
mov
sub
add
movl
dec
mov
cmpl
jl
jmp
push
call
mov
mov
movl
mov
mov
mov
shrd
addl
shr
sub
mov
add
mov
sbb
xor
or
shl
xor
mov
mov
addl
xor
or
or
movzwl
sub
mov
mov
cmpl
jl
inc
jmp
pushl
push
pushl
call
shrd
shr
mov
mov
xor
xor
or
imul
movzbl
mov
shl
cmp
movl
je
cmpl
ja
sbb
and
jmp
push
call
movl
mov
mov
sub
shl
sub
xor
adc
xor
shr
cmpl
jb
jmp
push
push
pushl
call
or
lea
mov
mov
mov
mov
mov
addl
shrd
shr
cmpl
jge
sbb
jmp
push
push
pushl
pushl
push
pushl
push
call
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
imul
mov
shl
cmp
je
mov
mov
shrd
xor
mov
shr
mov
xor
shl
mov
or
imul
add
mov
mov
jmp
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
xor
mov
shr
mov
xor
or
shl
imul
mov
mov
mov
and
or
and
xor
xor
div
or
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
shr
imul
mov
mov
add
imul
mov
mov
add
xor
sub
mov
mov
sub
add
mov
imul
imul
add
mov
lea
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
mov
xor
mov
and
mov
xor
mov
mov
add
xor
mov
xor
add
mov
sub
mov
lea
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
xor
div
xor
push
pop
xor
mov
mov
imul
add
and
div
mov
xor
mov
xor
sub
mov
mov
imul
div
mov
xor
xor
mov
or
add
mov
lea
mov
mov
cmp
je
mov
mov
add
mov
pushl
pushl
call
mov
mov
test
jne
mov
inc
cmp
jne
jmp
mov
movzwl
mov
mov
mov
mov
test
je
mov
add
mov
mov
mov
test
je
mov
test
je
mov
shl
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
incl
mov
mov
cmp
jne
mov
call
xor
inc
cmp
je
add
mov
mov
pop
pop
pop
leave
ret
push
mov
loopne
loopne
inc
inc
push
insl
repz
mov
add
sub
fucom
jno
cmpsl
das
add
cwtl
adc
arpl
inc
orl
lcall
lret
test
pusha
mov
repz
or
enter
cs
nop
icebp
add
jbe
andb
fimuls
insl
mov
sub
rclb
hlt
leave
bound
fs
push
mov
mov
popa
inc
das
jecxz
gs
orb
or
adcl
test
movsl
mov
xchg
pop
ljmp
pusha
jnp
call
jbe
cmc
dec
rcll
shll
repz
cli
mov
push
aaa
xor
cmpsb
shlb
xchg
dec
out
sbb
pop
in
adc
mov
adc
sub
sbb
icebp
les
cli
aaa
add
movsl
movsb
stos
stc
jmp
scas
aas
rclb
call
mov
jnp
in
nop
icebp
and
mov
and
sub
aas
stos
roll
fiadds
or
pop
mov
cld
add
add
mov
sti
adc
dec
fisubrs
jle
dec
cli
adc
mov
sbb
add
and
mov
cmpl
add
push
cmp
mov
mov
fstps
mov
aaa
sbb
cld
fldcw
or
push
rcll
test
shl
sti
fsts
adc
jae
or
fidivs
aad
adc
jmp
fabs
xor
loop
jae
cmc
jmp
test
jmp
popf
fdivrl
jno
jo
jno
movsb
andb
fs
fsubrs
mov
adc
fnstcw
xchg
pop
jmp
push
ret
add
cmp
fstpt
or
in
dec
xchg
sar
add
stos
cmp
std
mov
inc
stos
cmc
sub
ret
loopne
adc
adcl
pop
jmp
imul
sahf
call
cmp
ficoml
sub
sub
stc
out
or
scas
mov
stos
rclb
and
into
cmc
xchg
ficompl
ss
and
push
xchg
lcall
mov
jne
stos
pop
cwtl
push
push
cs
sti
xchg
fdivr
add
push
mov
sub
adc
jg
push
xor
fidivl
enter
adc
and
mov
push
int3
push
cs
outsl
popa
cmp
push
or
jg
add
inc
in
sbb
jge
xchg
and
cmp
dec
mov
cmp
loope
adc
push
into
xchg
mov
push
pop
mov
in
mov
fwait
scas
add
inc
mov
cmp
sub
or
mov
pop
pop
dec
lahf
pop
nop
push
sbb
mov
rcrb
bound
jo
push
cld
popa
in
sub
mov
div
insl
pushf
cmpsb
popf
sbb
cwtl
mov
push
mov
dec
into
mov
cmc
fdivl
imul
xchg
mov
cltd
inc
push
mov
add
push
jns
xor
jle
mov
cltd
in
sub
pop
repz
fidivl
jae
lahf
dec
jge
lods
jge
pusha
daa
fdiv
iret
stc
mov
inc
xor
xchg
clc
inc
sarb
orb
test
xlat
cmc
sub
sub
outsb
sti
mov
lods
cld
jns
orb
xchg
mov
xor
in
sahf
jnp
mov
test
lahf
jge
mov
xchg
xchg
dec
dec
pop
add
stc
inc
pusha
push
add
ja
insb
test
lret
sub
inc
jne
lret
dec
int
xchg
aas
sbb
aas
out
mov
mov
fwait
dec
push
lret
jnp
dec
int
jo
pop
cmp
bound
mov
jno
stos
cmp
rorl
push
jmp
jno
jns
adc
es
nop
enter
mov
mov
xchg
cmpsb
push
cs
add
mov
pushf
pop
fistpl
add
xchg
daa
mov
cwtl
mov
stc
nop
jbe
fs
out
mov
add
adc
fistpl
or
mov
loopne
nop
xchg
jge
movsl
arpl
ss
call
jnp,pt
pop
xchg
stos
movsl
dec
fimull
cmc
push
adc
loop
cmp
mov
pop
mov
fs
leave
or
or
addr16
incl
hlt
ljmp
fs
lods
fistpll
insl
add
or
incl
lods
mov
pop
pop
cmpsl
loop
fldenv
add
mov
movhps
fs
dec
es
out
xchg
xchg
inc
push
xlat
and
pop
pop
or
cmp
loop
faddl
jg
or
adc
mov
xchg
sbb
in
in
int3
xor
sbb
test
cmp
or
pop
pop
dec
fucomp
lods
xor
dec
push
shl
pop
outsl
xor
ret
shlb
sbb
or
shlb
andl
call
push
or
aam
inc
xor
stos
ret
mov
sub
inc
pop
decw
sti
and
sbb
cmp
rorb
and
imul
mov
ss
pop
into
push
pop
jnp
or
cmpsl
inc
mov
test
popf
addb
loopne
js
outsb
fldt
mov
push
push
fsubr
das
ja
leave
shrl
pop
in
mov
dec
sbb
inc
subb
mov
sarl
add
ficomps
mov
adc
sub
jecxz
ljmp
pop
out
push
and
test
push
add
sub
in
xor
shll
mov
cmpsb
and
mov
mov
rolb
adc
loop
mov
inc
push
add
jge
add
mov
jbe
mov
lret
and
mov
into
pop
sbb
dec
pop
in
push
into
call
sub
cli
jo
dec
cmp
mov
movsl
xchg
adc
pop
insb
mov
xor
ret
jb
mov
and
inc
mov
pop
ss
push
xorl
or
lods
and
sahf
or
jp
inc
sub
add
pop
loopne
add
pop
mov
mov
push
add
aad
out
ss
and
push
add
popa
jecxz
xbegin
pop
fstpt
insb
jle
xchg
pop
js
add
repz
mov
cmp
ljmp
pushf
pop
cltd
ljmp
std
outsl
cmp
popa
je
inc
adc
cs
negb
movsl
jmp
orl
in
idivl
fisttps
pop
add
add
or
js
sub
and
push
inc
out
les
call
movsb
add
mov
xchg
cmc
adc
adc
xor
jns
mov
xchg
xchg
cmpsl
rclb
xchg
adc
ret
fs
ret
cmp
push
dec
mov
pushf
in
aad
push
popa
jns
jns
daa
pop
mov
pop
sbb
arpl
lods
rcrl
popf
mov
mov
and
jns
push
add
out
mov
scas
adc
orb
imul
iret
mov
mov
or
js
leave
adc
or
ret
test
xor
dec
daa
push
aaa
loop
nop
daa
pop
aaa
cld
scas
mov
ljmp
sarb
movsb
dec
fwait
je
lret
add
fidivrs
and
cltd
out
push
pusha
pop
mov
mov
repnz
xor
mov
jo
sbbb
outsb
push
mov
aam
out
add
jo
mov
out
incl
icebp
or
shlb
sub
and
pop
pop
call
mov
dec
bound
cmc
insl
push
cld
jmp
add
fsts
into
mov
shr
seta
xor
fdivrs
jbe
push
pop
xchg
test
and
std
rcll
shrb
loop
lods
lahf
mov
das
mov
jae
push
fwait
and
hlt
adc
sbb
jno
push
sbb
adc
dec
xchg
mov
jle
adc
and
sbb
sbb
xchg
or
icebp
lods
pop
pop
testb
cmp
lret
out
shrl
outsl
xchg
pop
sbb
xor
cmp
pop
stos
or
rcrl
jge
add
jge
sub
ret
insb
jb
enter
fdecstp
in
subl
push
decl
arpl
rcll
xchg
jbe
pop
mov
imul
cli
inc
pop
fldl
pop
inc
jmp
push
pop
fidivs
lea
jmp
pop
sbb
lea
mov
jp
into
cmp
mov
fcompl
into
rcll
jne
iret
les
mov
and
xchg
xor
inc
dec
and
mov
test
mov
xor
ljmp
or
data16
in
cmpsb
adcl
insl
xchg
xchg
leave
insb
sarb
xor
add
rcll
out
dec
and
test
inc
jle
mov
push
or
outsb
test
xchg
cmp
add
dec
mov
into
push
mov
push
sub
popf
or
fnstenv
adc
push
pop
mov
fdivl
xor
pmullw
fistpl
mov
mov
and
dec
mov
lret
cs
push
ror
inc
jecxz
jmp
fisubl
sub
jg
and
out
scas
or
mov
jo
stos
add
jbe
scas
sub
mov
ljmp
xor
idiv
jae
repz
add
ja
loopne
outsl
jle
xchg
cmpsb
pop
jb,pn
ret
imull
sarl
push
in
cs
mov
mov
sbb
pop
ret
xchg
imul
xor
sub
push
dec
adc
test
and
add
mov
jecxz
mov
pop
fstpt
pinsrw
inc
repnz
imul
test
add
dec
lock
pop
nop
inc
sub
int
in
pop
std
mov
scas
insl
ja
inc
xchg
ficoms
inc
sub
push
jp
pop
add
mov
mov
add
js
mov
sub
filds
and
adc
lret
mov
mov
fcompl
les
fcomps
inc
outsb
jl
mov
sbb
addr16
mov
pop
fs
test
or
lock
dec
loope
mov
lahf
xchg
popf
cmpb
out
out
pop
inc
fcmovnu
mov
or
or
addl
ret
stos
dec
aaa
stc
xor
in
cmpsb
aad
outsb
out
pop
adc
mov
clc
lods
mov
mov
scas
insl
xchg
inc
fadds
jae
ss
jns
int3
rolb
push
or
push
insb
xchg
iret
aam
fidivrs
ds
sub
out
inc
outsl
mov
iret
push
icebp
into
jns
push
fisttpll
cli
sub
data16
ss
mov
inc
cmp
repz
loop
aad
sub
imul
mov
mov
popa
push
dec
inc
mov
mov
fimuls
adc
xchg
enter
mov
sbb
lock
ja
imul
sub
or
hlt
or
sbb
andb
inc
push
sub
add
mov
sbb
nop
jmp
orl
mov
dec
jbe
popf
jmp
packsswb
jne
mov
dec
cltd
mov
dec
and
bound
int3
jecxz
dec
adc
fstl
xor
es
push
test
shlb
mov
ljmp
adc
int3
mov
or
xchg
xchg
out
jno
insb
mov
loopne
or
jge
das
scas
hlt
icebp
imul
lock
mov
pop
or
push
rcrb
push
mov
jp
or
xchg
loop
sbb
int3
xchg
mov
int
cmp
sahf
iret
repz
cmc
xor
jne
cli
sbb
clc
das
xor
pop
addr16
mov
jns
call
das
cs
mov
sub
cltd
adc
push
dec
pop
jmp
lods
xorl
dec
pop
out
iret
cpuid
les
popa
mov
xchg
add
mov
pop
into
stos
dec
dec
and
repz
in
sub
mov
sbbl
mov
xor
shrd
shr
mov
cmpl
ja
jmp
push
call
mov
push
push
xor
push
mov
xor
addl
or
mov
mov
or
mov
add
shl
mov
mov
sub
shrd
cmpl
jb
mov
and
jmp
pushl
pushl
pushl
pushl
call
xor
shr
mov
mov
xor
or
mov
mov
cmpl
jl
mov
mov
sub
xor
mov
mov
or
jmp
pushl
pushl
push
push
pushl
push
call
mov
mov
and
mov
cmpl
ja
adc
jmp
push
push
pushl
push
pushl
push
call
mov
mov
mov
mov
mov
mov
xor
shl
xor
cmpl
jb
sub
jmp
push
push
push
call
mov
xor
shld
mov
mov
mov
add
movl
movl
movl
mov
cmp
jne
movl
cmp
movl
je
and
mov
mov
cmpl
ja
and
sbbl
jmp
push
push
push
call
xor
xor
xor
mov
mov
sbbl
shld
add
movl
cmp
movl
jne
movl
cmp
je
mov
mov
sub
add
mov
xor
sub
xor
shl
negl
mov
subl
xor
sbbl
shr
orl
or
sub
cmpl
ja
subl
xorl
jmp
push
push
call
mov
mov
mov
mov
mov
cmpl
jg
jmp
pushl
push
call
mov
push
pop
sub
mov
add
lea
mov
movl
mov
movl
movl
jmp
andl
mov
mov
cmpl
jge
addl
inc
jmp
push
push
push
pushl
call
mov
sub
xor
shl
sub
xor
shr
or
andl
sub
xorl
mov
cmpl
jle
incl
adc
jmp
push
pushl
call
movl
mov
sub
mov
sub
adcl
xor
notl
xor
xorl
shl
addl
shr
or
sub
push
lea
andl
push
lea
push
negl
call
decl
mov
mov
sbbl
sub
mov
or
sub
xor
cmpl
jl
xorl
jmp
pushl
call
xor
shl
shr
or
sub
push
adc
lea
push
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
sbbl
or
lea
movl
push
notl
shl
call
mov
sbb
mov
mov
cmpl
jge
mov
sbb
mov
andl
jmp
pushl
call
sub
sub
xor
mov
sub
mov
xor
shl
shr
movzbl
sub
or
and
sub
add
push
xor
lea
addl
push
cmpl
jg
jmp
call
mov
mov
shrd
shr
mov
mov
xor
orl
xor
or
sbbl
lea
adcl
push
andl
shl
call
add
mov
mov
xor
sub
xor
sub
movzwl
sub
shr
xor
neg
shl
or
and
sub
push
lea
push
xor
mov
xor
mov
shrd
mov
sub
shr
cmpl
jg
or
jmp
push
call
mov
mov
xor
xor
or
shl
mov
xor
or
xor
mov
mov
shrd
adcl
shr
cmpl
ja
jmp
pushl
pushl
pushl
push
push
call
mov
mov
xor
xor
or
add
lea
subl
push
shl
addl
call
mov
neg
mov
movzbl
or
sub
xor
add
shr
cmpl
jbe
mov
adc
adcl
jmp
push
call
sub
xor
shl
or
cmpl
jg
andl
jmp
push
call
sub
push
lea
push
mov
mov
cmpl
jbe
jmp
push
push
call
shrd
shr
mov
mov
xor
shl
mov
adc
xor
or
adc
mov
shrd
cmpl
jle
jmp
push
push
call
shr
mov
mov
xor
xor
or
shl
add
xor
or
add
mov
mov
shrd
shr
mov
mov
xorl
xor
xorl
xor
andl
or
shl
xorl
add
lea
xorl
push
andl
call
mov
movzbl
xor
mov
mov
sub
sub
xor
not
shl
and
mov
sbb
xor
add
shr
or
sub
orl
mov
mov
or
lea
cmpl
jg
orl
jmp
pushl
push
push
push
push
call
push
mov
mov
shrd
shr
mov
mov
sbbl
xor
xor
subl
or
push
mov
push
negl
pushl
shl
call
lea
push
mov
mov
mov
mov
sub
shrd
and
shr
adc
mov
cmpl
ja
subl
sub
jmp
push
pushl
call
mov
xor
xor
or
push
not
mov
adcl
push
xorl
pushl
addl
shl
xorl
call
mov
mov
cmp
movl
jne
addl
xorl
xorl
decl
movl
jne
movl
mov
xor
mov
mov
lea
subl
mov
movl
shl
adcl
add
addl
shr
addl
or
notl
xor
sbbl
add
cmp
movl
je
movl
cmpl
jle
jmp
push
push
pushl
call
mov
mov
mov
movl
mov
movl
mov
xor
mov
addl
or
xor
sbbl
and
sbb
and
cmpl
jle
orl
xor
jmp
push
pushl
call
mov
movl
movl
mov
mov
and
xor
xor
div
mov
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
xor
mov
mov
cmp
jbe
add
mov
mov
movl
mov
movl
mov
mov
or
xor
and
and
mov
movl
movl
mov
mov
and
xor
xor
div
mov
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
mov
xor
mov
add
jmp
mov
mov
mov
mov
inc
mov
cmp
jb
mov
movl
mov
movl
mov
mov
or
xor
and
and
mov
movl
movl
mov
mov
and
xor
xor
div
mov
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
xor
mov
mov
cmp
jbe
add
mov
mov
movl
mov
movl
mov
mov
or
xor
and
and
mov
movl
movl
mov
mov
and
xor
xor
div
mov
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
mov
movl
movl
mov
mov
or
xor
and
and
mov
mov
movl
mov
mov
and
xor
xor
div
mov
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
mov
movl
movl
mov
mov
or
xor
and
and
mov
mov
movl
mov
mov
and
xor
xor
div
mov
addb
cmp
jae
movl
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
rorb
mov
mov
mov
mov
mov
inc
mov
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
pop
xor
pop
shl
or
pop
leave
ret
pop
xchg
pop
mov
lret
xlat
sahf
stos
addb
cmp
aam
add
jge
out
ljmp
cmpsb
mov
popf
imul
lea
je
test
or
mov
clc
xor
adc
insl
jecxz
pop
xchg
jmp
and
push
and
test
in
inc
dec
movb
mov
stos
or
xor
push
fwait
mov
rcrl
in
sub
jae
fnstcw
mov
test
cmpl
mov
imul
je
stc
mov
rcll
insl
cltd
mov
outsb
fidivs
sbb
xchg
jb
nop
jno
aaa
and
jl
pop
sub
cltd
jge
adc
pop
jnp
lret
push
pop
clc
or
das
and
dec
je
pop
xchg
mov
adcl
pop
inc
sarb
data16
ds
addr16
jl
push
mov
lea
mov
xchg
inc
popa
std
sbb
std
pop
sub
test
pusha
popa
sbb
push
xor
aam
nop
in
adc
adcl
in
lret
cli
sbb
flds
push
sub
dec
sarl
adc
sbb
or
mov
sub
and
shl
sbb
clc
mov
lret
in
and
lahf
arpl
dec
push
aas
inc
ret
fs
aaa
push
mov
xchg
ja
jp
lahf
sbbl
out
pushf
insl
pop
push
lods
gs
xor
hlt
cwtl
cmp
mov
out
xchg
jg
mov
jge
roll
adc
sarl
adc
scas
add
loopne
test
inc
add
pop
push
mov
mov
jle
sbb
das
add
aaa
xchg
das
xchg
mov
sbb
jne
pop
pusha
int3
pop
movl
inc
push
inc
lcall
xchg
iret
movl
dec
popa
jg
xchg
push
out
dec
inc
pop
sbb
ljmp
cmc
pop
adc
stos
cmc
xorl
rorl
jl
push
cld
mov
enter
and
ret
mov
popa
mov
cmpsl
in
movb
xor
sbb
push
scas
in
outsl
outsb
xchg
lcall
push
lret
imul
out
dec
insl
arpl
xor
dec
dec
ret
inc
xchg
sub
sti
std
sbb
clc
mov
outsb
data16
or
addr16
push
dec
add
dec
and
outsb
es
rcrl
mov
fmull
push
lret
mov
push
inc
jmp
repz
lds
rcr
adc
stos
dec
inc
sbb
test
nop
inc
repnz
pop
clc
fs
shl
outsl
sub
pop
pop
inc
in
hlt
stos
insl
and
call
out
les
mov
jns
popa
adc
ret
push
aas
dec
into
test
mov
ficoml
roll
mov
imul
adc
mov
xor
js
xchg
out
sub
cmc
and
pushw
scas
sbb
repz
adc
xchg
mov
adc
mov
add
fwait
iret
cmp
xchg
stos
pop
out
pop
dec
sbb
dec
adc
pop
test
pop
popf
lcall
nopl
and
inc
sbb
icebp
add
adc
cmpsl
addr16
sub
xchg
jg
iret
mov
jl
inc
fbld
pop
addr16
mov
sbb
pop
setae
inc
cwtl
std
xchg
pushf
rcrb
pop
mov
and
aam
cltd
pop
adc
and
stos
push
push
add
mov
cmpsb
adc
mov
pop
test
aam
jae
insl
neg
test
mov
cmc
fs
shlb
fmull
xor
jb
jbe
sti
lods
adc
stos
pop
dec
adc
adc
push
xor
loopne
rorl
call
dec
js
sarb
imul
sarl
movsb
fistpl
test
divb
sbb
ret
push
test
dec
push
inc
pop
icebp
fmull
mov
xor
cmpsl
and
insb
fldt
out
lcall
mov
bound
add
stos
iret
cli
fs
mov
lret
jne
mov
pop
lea
sub
daa
mov
ss
and
cmp
xor
cld
push
pop
and
mull
mov
mov
movsl
mov
push
dec
scas
mov
aas
and
mov
inc
sub
cmp
sub
popa
cltd
push
out
mov
shll
mov
xlat
xchg
or
pusha
scas
jl
fildl
jbe
cmp
das
push
roll
mov
adc
lahf
and
out
loopne
mov
enter
cli
pop
mov
shrl
cmpsl
and
add
sbb
mov
mov
sbb
lret
orb
jbe
jb
aas
cmp
push
xchg
lock
ficoms
sbbl
fisttpll
jg
cmpsb
enter
cld
inc
pop
mov
scas
mov
pop
push
adc
hlt
jo
inc
lahf
pop
and
cld
nop
dec
mov
ss
mov
sbb
ljmp
mov
add
xlat
and
sub
in
int
sub
inc
gs
pop
sbb
sbb
or
jae
jp
push
in
cs
sub
and
addr16
adc
dec
mov
cmpsb
jb
repnz
lea
mov
add
inc
dec
rclb
cwtl
cmp
inc
insb
out
fisubs
dec
fs
sbb
push
pushf
dec
dec
dec
aas
rol
mov
clc
daa
rolb
adc
inc
and
movsb
cmp
scas
sbb
mov
pop
pop
jnp
jne
inc
and
cwtl
std
mov
push
into
mov
in
xchg
dec
push
mov
or
cmp
aam
cld
testl
daa
jmp
cmpsl
fyl2x
cmc
repz
hlt
jo
xchg
repnz
mov
out
les
ret
mov
xchg
xchg
cmp
mov
mov
mov
add
push
pop
pushf
iret
mov
cli
push
test
int3
fldl
cmp
daa
into
inc
pop
inc
xlat
push
inc
xor
add
test
icebp
cwtl
dec
inc
pop
cs
or
jbe
lock
sub
fwait
test
cli
out
outsb
insl
cmpsl
add
orb
fs
cmp
cli
jae
test
fmulp
popf
or
repnz
pop
lods
lds
repz
bswap
pushf
les
mov
cmp
test
mov
mov
repnz
in
lret
pop
testl
frstor
jb
dec
fmul
leave
sub
sbb
or
add
jo
out
jbe
inc
mov
dec
mov
hlt
mov
pop
enter
imul
push
pop
sbb
not
lods
inc
cwtl
mov
sbb
jl
pop
in
jae
in
out
out
xor
jmp
mov
sub
scas
leave
and
dec
jp
aaa
dec
shrl
pusha
push
cmp
bound
fsubrl
aas
or
xchg
and
leave
adc
bound
jo
lock
out
fwait
lcall
or
mov
mov
xor
xor
das
pop
aad
dec
inc
dec
add
test
mov
jns
daa
jns
es
movsl
filds
movsl
push
or
cli
xchg
gs
push
insb
jae
lret
in
inc
in
sub
icebp
push
repz
insl
adc
xor
sbb
mov
cmp
or
sti
das
inc
and
cmpsb
xor
push
mov
das
push
stos
fstl
negb
pop
movsl
xchg
or
cmp
cmp
xor
pushf
outsb
mov
ret
xchg
movsl
gs
lods
cwtl
in
aam
insl
xor
rclb
lods
cs
adc
std
mov
mov
inc
sbbl
push
add
int3
gs
xchg
adc
sbb
loope
mov
add
adc
and
dec
cli
add
shrb
in
mov
insl
adc
mov
mov
cs
iret
test
js
pop
nop
xor
aas
out
pop
scas
pop
xlat
cmp
fstps
add
sbb
lock
int
cmp
jecxz
movsb
push
std
adc
gs
push
test
jno
outsl
dec
jmp
or
cmpsl
inc
add
lret
mov
sub
push
mov
or
jl
dec
loopne
xor
lods
clc
adc
lcall
jmp
ja
and
repnz
mov
push
mov
xor
shll
test
and
sub
pop
mov
fiaddl
pushf
iret
sbb
aad
rcll
test
andb
sub
cmp
das
pop
pusha
dec
movsl
cli
neg
shrl
mull
inc
notl
xorl
mov
xor
pop
loopne
jbe
inc
add
lcall
cmc
out
jae
inc
push
jae
fwait
test
mov
inc
js
loope
hlt
rorl
cltd
fsubrl
ljmp
stos
into
andb
push
int3
xor
xchg
inc
mov
xor
stc
jle
orl
imul
daa
test
xchg
repnz
xor
xlat
mov
mov
push
pushf
mov
cmc
loopne
mov
mov
xor
hlt
jg
inc
sub
addl
cmp
cmp
add
pop
dec
adc
adc
add
dec
rcll
loop
sbb
xchg
add
mov
and
sub
rcrl
jl
xor
push
imul
push
icebp
outsb
out
mov
sub
mov
insl
movsl
inc
int
hlt
lret
rorl
dec
ss
scas
jnp
xor
sbb
add
or
inc
ja
repz
mov
lea
ljmp
inc
adcl
xchg
mov
cwtl
or
cmpb
ja
sbb
pop
pop
push
lahf
loop
dec
xor
out
push
call
jle
sbb
pop
dec
mov
lock
in
hlt
sbb
add
ja
in
pop
cmp
mov
mov
lret
sar
rcrb
mov
stc
inc
imul
mov
ds
lcall
push
pop
jno
pop
std
ret
test
mov
pop
xchg
andl
add
xor
xchg
mov
loopne
jb
outsl
dec
xor
es
movsb
cmc
jp
mov
add
btr
bound
lret
dec
imul
adc
pop
lea
mov
xchg
mov
lret
into
movsb
test
push
sbb
fcomip
in
mov
gs
rorl
sub
sti
mov
jbe
and
pop
hlt
adc
mov
sahf
adc
ret
pop
xchg
in
dec
scas
mov
mov
mov
dec
cwtl
popf
adc
hlt
mov
mov
aad
pop
or
pop
pop
pop
jle
fistl
scas
out
cmp
cmp
je
pop
outsb
shl
dec
fdivrs
aaa
xor
push
out
popa
ss
or
cwtl
mov
xchg
loope
jo
lock
pop
jne
dec
inc
mov
inc
adcb
and
lds
out
cmpsb
lods
outsl
xor
add
lods
push
fidivl
and
lods
mov
fisubl
js
cmp
ds
xor
inc
add
push
ljmp
popl
cmp
add
test
jle
popa
das
fscale
divb
dec
sub
sub
cmp
push
lea
xlat
mov
push
and
mov
cmp
jo
ds
ljmp
dec
push
insb
insl
push
sub
bound
pusha
mov
mov
dec
pop
add
pop
dec
idivb
inc
adc
push
int3
xchg
xchg
movsl
pop
mov
mov
rclb
xchg
add
jnp
mov
push
xchg
mov
dec
xchg
lret
sub
lods
pop
or
jle
fstl
rol
daa
add
mov
test
inc
dec
stos
stos
fimuls
fisubrs
mov
pop
adc
mov
hlt
les
fs
push
scas
lcall
xchg
mov
mov
hlt
aaa
adc
lahf
mov
sub
outsl
inc
call
adc
ljmp
mov
arpl
rol
jno
mov
nop
sahf
push
pop
cmp
inc
dec
pop
push
pop
inc
inc
xor
inc
inc
dec
cmp
cmp
pop
pop
dec
dec
inc
add
push
xor
xor
cmp
pop
add
ss
pop
push
push
push
push
pop
dec
add
dec
aaa
xor
inc
add
inc
pop
dec
cmp
push
push
add
pop
xor
cmp
add
dec
pop
cmp
xor
xor
inc
dec
dec
pop
inc
dec
inc
xor
inc
dec
pop
pop
dec
add
push
pop
inc
dec
push
pop
inc
pop
pop
pop
aaa
inc
add
inc
pop
xor
dec
push
push
add
xor
xor
inc
push
push
xor
pop
inc
cmp
xor
dec
pop
add
xor
pop
push
cmp
pop
pop
pop
push
add
xor
inc
pop
dec
cmp
push
pop
push
pop
push
pop
push
push
pop
dec
pop
push
xor
inc
add
inc
xor
xor
inc
pop
ss
inc
add
dec
pop
inc
pop
xor
inc
xor
inc
pop
inc
push
add
push
pop
aaa
inc
dec
inc
dec
pop
inc
aaa
push
add
inc
cmp
cmp
pop
dec
xor
push
dec
dec
aaa
pop
inc
pop
pop
dec
push
pop
dec
inc
add
pop
pop
xor
push
add
xor
xor
dec
inc
pop
dec
xor
dec
inc
xor
xor
xor
add
add
add
add
add
add
dec
add
cmp
pop
add
push
add
add
pop
add
inc
add
inc
add
add
dec
add
push
add
dec
add
add
pop
add
add
add
pop
add
add
inc
add
xor
pop
add
add
xor
xor
add
dec
add
add
inc
add
aaa
add
inc
add
xor
dec
add
add
add
xor
cmp
pop
add
add
add
add
add
add
inc
add
push
add
xor
push
add
pop
add
add
inc
add
inc
add
add
push
add
add
xor
dec
add
pop
add
add
cmp
push
add
xor
add
inc
add
add
push
add
pop
add
pop
add
pop
add
add
add
inc
add
add
xor
pop
add
dec
add
push
add
push
add
add
cmp
dec
add
xor
add
inc
add
add
add
dec
add
add
cmp
dec
add
cmp
dec
add
pop
add
add
