push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
mov
mov
jp
jp
fstpl
jp
sub
xor
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
cmp
iret
sub
cmp
sbb
mov
shrb
scas
aad
and
ret
xor
or
loop
add
xchg
inc
lret
out
fs
inc
aam
movsl
push
jnp
popf
dec
dec
iret
jp
aam
xchg
cmp
rcr
mov
iret
sbb
rorl
mov
or
adc
jae
pop
popa
inc
notl
pop
jnp
clc
jb
shr
sbb
ss
pop
mov
jno
mov
xor
lea
loopne
pop
inc
es
xchg
push
arpl
cmpsb
rcl
gs
lds
mov
add
inc
inc
jo
push
dec
in
lds
sub
pop
sbb
xor
daa
xor
push
push
jno
lret
push
lods
int3
rclb
inc
jae
js
mov
lods
adc
xchg
inc
std
mov
test
addr16
inc
mov
aam
or
or
jne
dec
sbb
je
xor
mov
or
lahf
mov
std
ss
leave
ret
ds
xor
imul
push
xchg
lods
enter
pop
push
mov
sub
or
call
loopne
mov
fcoms
add
mov
sahf
ret
mov
dec
xor
xlat
inc
mov
mov
push
sub
dec
add
fstpt
aad
leave
cld
aas
imul
jbe
pop
int3
dec
push
xor
adc
fs
enter
and
sbb
or
cmp
fsubrl
cmp
std
sub
ja
sub
lock
int
out
add
mov
lret
sbb
or
fnstenv
hlt
les
inc
shll
sbb
inc
mov
stc
xor
js
test
test
arpl
and
mov
rorl
push
xor
jg
jo
lods
rclb
repnz
cmc
or
stc
adc
cmpsl
ficoms
mov
arpl
add
adc
mov
mov
mov
xor
sti
sub
sbb
and
clc
in
jnp
or
lret
adc
loope
js
mov
pop
rorl
dec
cmp
pop
cld
or
pop
ljmp
int3
test
jmp
push
stc
mov
icebp
loop
inc
or
or
mov
arpl
add
outsb
sbb
inc
mov
or
sbb
fnstcw
sbb
adc
mov
lods
xchg
shlb
popa
daa
fmuls
push
and
bound
cwtl
pop
inc
rclb
mov
cmpsb
adc
sub
fmull
jnp
pusha
cmc
imul
outsb
cmp
dec
ja
mov
jmp
loopne
dec
dec
sbb
cs
mov
jle
stc
push
fiaddl
push
add
shlb
cmp
xor
subl
loope
repnz
or
pop
push
loop
or
sub
mov
test
leave
adc
sti
cmp
and
adc
xchg
in
std
push
sub
test
popf
lret
cmp
aas
jnp
into
add
mov
push
pop
jl
js
jne
mov
test
mov
dec
iret
decl
inc
pop
iret
pop
jmp
and
stos
repz
sub
sarl
mov
scas
mov
lock
adc
pop
data16
or
cmp
inc
jae
outsb
mov
mov
push
mov
sarl
loop
dec
pusha
mov
mov
dec
popa
adc
pop
test
cmc
pushf
sti
sbb
enter
mov
jmp
or
xor
xor
push
inc
clc
jp
pop
in
mov
mov
stc
leave
sbb
je
data16
jb
cmp
push
dec
dec
bound
clc
mov
cmpsb
cmp
mov
pop
xchg
dec
mov
icebp
pusha
es
dec
test
cmc
clc
xchg
dec
mov
adc
xlat
in
adc
xlat
roll
inc
cmp
inc
jnp
cmpl
psllw
jmp
cmp
mov
imul
test
adc
sub
adc
xchg
cmp
lods
mov
fwait
jnp
mov
mov
pop
sub
cmc
lock
call
sahf
pop
data16
mov
add
dec
loopne
inc
cwtl
inc
test
dec
cmp
movsl
test
mov
ja
ljmp
add
stc
push
lods
mov
or
sahf
sub
sbb
sbb
lret
ss
lret
push
add
mov
lret
insl
rcrl
lock
push
int
mov
mov
in
rcrb
pop
daa
or
in
ss
repnz
arpl
shll
in
subb
enter
pop
scas
sub
or
sub
sahf
push
shlb
or
pop
mov
rcrb
jne
mov
dec
cmpsb
push
loope
xor
ds
pop
das
mov
data16
movsl
adc
cmp
andl
in
stc
outsl
aam
rcll
add
clc
adc
test
xchg
stos
jle
mov
scas
mov
jmp
dec
insl
sub
mov
mov
aam
and
sub
jbe
hlt
repnz
cmp
sub
dec
mov
repnz
or
lret
cs
aad
mov
mov
jmp
jne
mov
sub
in
pop
push
pop
in
pusha
pop
xchg
pop
ja
push
adc
push
fsts
add
pop
push
add
xchg
pushl
sahf
mov
jg
add
sub
clc
xchg
sub
jo
outsb
out
jmp
loop
sahf
mov
inc
mov
inc
inc
push
leave
popf
jb
int3
ljmp
call
faddl
push
into
daa
fs
lcall
fwait
cmp
sbb
imul
xor
pop
dec
xchg
or
cmpsl
subl
push
cli
push
jo
nop
les
stc
loope,pn
addr16
data16
cmp
pop
lcall
js
popf
cmp
xlat
cwtl
mov
pop
pop
ret
cmc
iret
push
sti
pop
xor
or
icebp
mov
leave
ss
add
push
mov
jle
lods
mov
out
ljmp
pop
inc
push
cld
arpl
outsb
repz
imul
jnp
sub
push
imul
xchg
dec
pop
push
adc
push
inc
call
outsl
xchg
scas
sbb
push
je
mov
adc
add
je
mulb
imul
adc
xchg
mull
xchg
and
mov
andb
xchg
mov
out
bsf
mov
xchg
cmc
loopne
jmp
lods
cmp
dec
into
add
inc
adc
lea
sub
test
dec
not
insl
adc
cltd
and
or
jp
popf
xor
gs
mov
les
mov
loop
and
push
gs
jp
jl
or
adc
and
jle
inc
mov
push
dec
mov
adc
and
push
and
mov
adc
shrb
xor
ret
dec
std
ja
inc
and
pop
data16
push
iret
jge
out
inc
stos
test
in
push
cli
and
movsb
xor
cltd
or
or
jb
fucomi
cmp
lds
iret
addr16
xchg
js
int
xor
sbb
adc
fidivrs
je
pop
and
repz
push
jmp
mov
lret
xor
mov
ret
jno
leave
and
pop
lahf
nop
jl
test
pop
in
mov
dec
jae
push
call
wbinvd
ss
int3
movb
jge
clc
jmp
jbe
inc
push
orb
inc
aas
iret
cmp
jmp
lds
mov
xchg
sbbb
add
lods
adc
cmpsb
inc
es
xchg
xor
cld
out
mov
sti
adc
int3
sub
bound
mov
es
loop
fistl
pop
cmp
dec
mov
test
fidivs
outsb
nop
cmc
push
in
fimuls
push
xor
inc
mov
aam
dec
jp
push
add
data16
dec
je
inc
sub
mov
mov
push
loope
mov
pop
lea
mov
push
icebp
shrb
je
push
rclb
cmpsl
call
dec
cmp
push
sub
sbbb
cmp
pop
sbb
ds
inc
inc
jecxz
xchg
dec
inc
call
inc
mov
popf
rolb
sbb
lret
into
and
in
mov
data16
in
dec
inc
dec
ret
pop
lea
jo
and
add
cmpsb
cmp
inc
jle
aas
popa
lret
scas
popa
lcall
lods
mov
fs
rol
jge
out
data16
or
pop
mov
sbb
jo
and
rorb
inc
sub
outsl
and
inc
jnp
outsb
test
mov
in
push
out
out
mov
mov
lock
push
aad
jmp
pop
xor
lea
arpl
push
adc
mov
sbb
shlb
test
mov
mov
in
sub
mov
pop
jle
cmpsl
jne
jno
pop
pop
push
aaa
movsl
pop
pop
stos
iret
mov
jns
mov
das
add
in
aas
jmp
fdivs
push
xchg
ds
not
loope
xchg
jnp
sub
jle
ret
popf
int3
and
and
inc
imul
or
popf
cltd
cwtl
cwtl
mov
rcl
ret
jge
jmp
jnp
fs
inc
loope
loop
cs
xchg
stos
xchg
clc
ljmp
mov
popl
jae
dec
adc
popa
mov
repnz
mov
addr16
aad
jl
push
cli
cli
push
adc
cmp
or
xchg
cmpsl
or
outsl
inc
mov
and
imul
lret
sub
add
inc
or
jle
pop
ret
outsb
ret
xchg
insb
push
jecxz
mov
jl
xchg
lret
test
jmp
je
icebp
into
roll
mov
into
mov
in
mov
pusha
mov
lret
push
push
in
ret
in
and
inc
in
int3
xchg
sbb
lods
cmc
push
pop
push
test
repnz
pop
jg
sub
insb
jmp
daa
outsb
and
repnz
push
es
pop
bound
xchg
fsubr
je
pop
aas
inc
lock
or
mov
sbb
xor
jns
repnz
nop
cmp
inc
jns
icebp
and
push
mov
push
ret
sti
out
mov
sub
imul
mov
mov
cmp
pop
xchg
mov
sbb
or
movsl
arpl
out
ljmp
cmp
jle
das
das
mov
xor
inc
idiv
xchg
in
cli
xor
aas
repnz
loopne
xchg
pushw
test
in
inc
mov
mov
jns
inc
shrb
fistpl
sbbl
xchg
xchg
mov
test
ficoml
lea
inc
jbe
jg
imul
sbb
loopne
popf
push
add
psubusb
repnz
div
test
jmp
cmp
std
or
sub
sub
iret
cmp
sbb
test
and
ret
dec
cmc
cld
and
inc
mov
xchg
jecxz
sbb
stos
pusha
xor
cmp
fadd
sbb
jnp
ret
jnp
xor
and
out
fsubp
adc
pusha
add
sub
and
imul
cmp
jns
cmp
stos
xchg
data16
xchg
cld
jae
jle
and
into
jle
and
mov
idivl
loope
fdivp
pop
dec
ss
fsubs
clc
dec
data16
ret
fisubs
popa
cmp
cmpsb
dec
mov
xchg
icebp
cmpsl
movsl
addr16
jne
stc
xlat
mov
pop
and
insb
fucom
test
jnp
jecxz
dec
mov
sbb
mov
mov
add
in
push
stos
jb
hlt
scas
and
and
inc
mov
sub
outsl
pop
out
mov
xchg
fcomip
mov
inc
xchg
dec
out
mov
fimull
xchg
divb
mov
and
aam
pop
icebp
addr16
and
cmp
dec
dec
test
mov
xchg
sub
fidivl
cld
in
and
adc
ficompl
xlat
mov
adc
sahf
subl
cli
mov
sti
fsubrs
sbb
scas
in
cwtl
scas
outsl
dec
in
cs
inc
jae
pusha
dec
or
xchg
sub
push
out
and
push
mov
pushf
jo
fadd
ss
push
mov
mov
push
int3
loop
fildl
xchg
dec
push
movsb
aam
sbbb
cmp
ja
into
xor
xor
sbb
cmp
inc
inc
mov
mov
dec
xchg
xchg
loope
xorl
jno
int3
pop
loop
xchg
loop
mov
sub
push
pop
xchg
sti
xor
fcmove
out
fistpll
mov
mov
lock
jns
jbe
push
cmp
jo
push
adc
adc
dec
movsb
sbb
shrl
jnp
dec
sub
sti
pop
fbld
push
or
mov
insb
stos
sub
push
aaa
mov
fwait
dec
pop
subl
or
push
jp
mov
pop
pop
scas
push
jmp
mov
and
ret
push
lock
pushf
jmp
sbb
pushf
mov
cmp
pop
pop
ja
sbb
and
pop
insb
icebp
or
pop
adc
sub
cwtl
dec
inc
out
adc
push
hlt
pop
mov
inc
pop
mov
push
iret
call
xlat
callw
cmp
js
inc
cmpsl
pop
sbb
jecxz
out
xor
div
scas
shr
nop
and
push
aaa
outsb
push
mov
push
push
insb
je
xchg
cli
cmp
and
gs
cmp
dec
xchg
popa
scas
outsl
and
sub
jg
std
fisubs
repz
cltd
inc
add
arpl
aaa
mov
into
scas
pop
out
insb
in
imul
adc
popf
mov
std
jne
inc
xchg
ror
addr16
pop
insl
push
mov
cmc
movsl
or
into
test
jg
or
out
lock
lahf
scas
shlb
dec
push
mov
adc
hlt
daa
pop
add
bound
sbb
pop
shr
mov
jp
int3
cltd
enter
xor
in
push
icebp
leave
pop
inc
scas
inc
int
rcl
lock
mov
repz
xchg
mov
push
sub
test
decb
push
imul
repnz
pop
cmp
mov
pop
push
cltd
scas
pop
cmc
adc
loop
dec
mov
sbb
mov
scas
pop
lds
fisubrl
imul
aad
lods
sub
mov
bound
push
shrl
outsb
movb
mov
sub
cld
cmp
aas
popf
push
cltd
jbe
mov
xchg
jne
sar
sub
xor
jae
fwait
xor
stos
mov
test
bnd
jecxz
icebp
mov
aam
jno
xor
inc
lcall
jmp
xchg
jbe
cmp
adc
mov
fists
shl
cmp
inc
ljmp
push
adc
adc
clc
jb
xchg
jbe
adc
cltd
std
out
in
add
jmp
aad
mov
push
or
jp
stos
jb
test
adc
iret
insb
cmp
sbb
call
stos
jne
add
push
rcrb
inc
mov
jge
js
int
fsubl
clc
in
cmp
fnstsw
add
mov
testl
push
cmp
sbb
sub
push
imul
or
ror
sbb
cwtl
mov
mov
jae
int3
or
sub
andps
scas
sahf
or
jbe
lahf
rcll
pop
setg
mov
or
aam
rcll
add
sbb
jae
xchg
adc
pop
mov
out
cmp
adc
mov
ret
je
cmp
add
xor
addb
ds
sbb
rcrb
pop
mov
pop
sub
sub
or
jmp
sti
stos
sbb
cmp
inc
pushf
mov
push
sbb
out
push
shrl
inc
inc
sarl
xor
push
std
xchg
adcb
push
aas
in
mov
sub
sub
gs
mov
push
cmp
lret
inc
fprem1
in
cld
lcall
mov
out
mov
hlt
enter
xchg
js
jmp
and
push
mov
dec
int
addr16
sbb
cmpb
push
mov
arpl
mov
mov
ljmp
mov
and
dec
sbb
xor
out
movsl
jo
insl
sub
inc
and
xlat
inc
pop
push
cmp
mov
outsb
sub
xor
mov
sbb
mov
popa
and
add
xchg
mov
outsl
sbb
xchg
pop
arpl
loope
daa
ret
cmp
aas
sbb
mov
sbb
pop
syscall
icebp
decl
test
push
ret
pop
mov
shrb
ja
loope
jns
dec
insb
fadd
pushf
movsl
dec
push
mov
testb
dec
bound
scas
outsl
aaa
setl
dec
dec
jp
xchg
jp
out
cmp
test
pop
add
idivl
jo
icebp
push
loope
aaa
ret
push
jp
lret
and
loop
adc
xchg
pop
or
or
or
push
call
enter
lret
popa
fidivrs
or
cmpb
xchg
xor
push
ret
int
mov
xor
sub
inc
ficoms
pop
xchg
popa
clc
add
inc
negl
sub
in
jo
mov
test
in
sar
mov
cmpsl
push
popf
popa
dec
cmp
cmpsl
inc
int
xchg
dec
inc
test
lods
sbb
shll
insb
cs
mov
mov
add
repnz
pop
push
out
and
adc
jle
adc
mov
fstpl
cs
test
cmp
dec
jg
mov
pop
push
gs
popa
mov
mov
or
push
repz
mov
mov
pushf
insl
cmp
push
inc
js
jge
jecxz
scas
xchg
push
sbb
cmp
jbe
js
pop
add
cwtl
xchg
test
jp
xchg
cmp
mov
sti
dec
lea
js
or
je
push
pop
sub
fcmovnbe
jb
sub
xchg
pop
xchg
fwait
sub
shrl
xchg
pop
add
push
adc
jmp
outsb
mov
lcall
int
lods
lahf
outsb
into
jnp
stc
or
push
stos
fwait
cmp
cmc
sbb
jge
outsb
or
mov
iret
add
rcrl
in
jne
jns
seta
pop
cmp
inc
xor
mov
nop
out
sub
jno
jp
test
push
mov
mov
iret
inc
jae
sbb
test
xor
or
jg
mov
mov
push
sub
fadds
js
addr16
jno
cltd
movb
sub
sub
ret
enter
inc
out
jle
sbb
pop
inc
inc
inc
repnz
xor
lods
mov
int3
xlat
inc
nop
sub
sti
adc
xor
mov
mov
daa
pop
lods
push
pusha
popf
add
sub
fsubs
dec
jns
xchg
enter
sar
jecxz
aad
add
pop
outsb
addr16
pusha
aad
adc
sbb
test
mov
sbb
sbb
or
dec
or
fdivl
xchg
stos
into
ja
adc
js
mov
in
arpl
in
rolb
lahf
dec
sbb
pop
fisubrs
out
xchg
mov
outsb
repz
fnstsw
faddp
push
ret
cmpsl
shlb
ret
std
stos
pushl
es
xchg
mov
inc
pop
sbb
mov
jae
push
jne
or
xor
aaa
arpl
leave
icebp
fcomps
cld
int3
add
fcomps
add
pop
jmp
add
sub
dec
inc
jle
cli
insl
jl
pop
bound
sbb
bound
push
push
mov
pop
pop
xor
movsb
and
push
jbe
cmp
push
aaa
push
cmp
pushf
rol
aad
add
push
out
roll
call
sbb
pop
fcmovnbe
std
adc
mov
pop
mov
sub
pop
sub
xor
mov
scas
jp
cmp
xor
arpl
movb
xlat
cmpsb
xor
xchg
fdivrs
fstpl
shrb
popa
je
stos
mov
in
fwait
xor
mov
icebp
mov
sub
adc
or
add
je
nop
divl
les
xchg
xchg
rcr
mov
ror
imull
and
mov
adc
je
and
test
icebp
testb
adc
cmp
jg
push
or
inc
and
rcrl
lock
mov
or
stos
rolb
mov
mov
stos
pop
lcall
dec
ret
or
cmp
rcl
xchg
mov
mov
inc
pushf
fidivrl
in
xchg
subl
pop
pop
aaa
mov
mov
lods
mov
xchg
pop
inc
mov
int3
sub
xchg
dec
mov
outsl
je
pop
mov
out
iret
pushf
insl
fisttpll
inc
jbe
ja
pop
mov
cmpsb
jae
jecxz
push
push
test
fdivs
xlat
lcall
sub
pop
sub
cwtl
dec
add
js
imul
fstps
dec
jb
scas
mov
add
xor
sub
jp
mov
add
dec
and
pushf
test
imul
repz
xlat
cmpsl
inc
sub
inc
xor
stos
xor
sub
push
inc
sahf
xorb
or
fisubrl
or
movsb
push
shl
addr16
and
mov
push
mov
repz
pop
xchg
mov
cmpsb
jb
lods
pop
fadds
aas
std
ret
adc
sbb
test
mov
xlat
int
dec
int
ss
jo,pt
push
dec
pop
and
out
cmp
jl
mov
test
cmpsb
xor
fs
adc
dec
or
dec
out
out
call
idiv
cmp
xlat
mov
mov
gs
jle
lret
aaa
push
jmp
pop
push
inc
dec
lock
gs
cwtl
dec
jno
decl
dec
sbb
push
in
and
jno
dec
mov
gs
jp
cmc
xor
or
inc
popa
pop
xchg
fists
xchg
sarb
sti
xchg
sbbl
or
xchg
cmpsb
pusha
jnp
fildll
push
stc
push
les
add
dec
or
test
xor
lds
jne
dec
orl
pop
jl
pop
and
das
mov
movsb
mov
aad
in
xchg
inc
hlt
ja
lods
sub
sbb
aas
mov
xor
mov
aad
or
fisttpl
sahf
ljmp
dec
loopne,pt
loopnew
or
int
mov
add
repnz
lcall
movsl
mov
dec
push
in
int3
push
or
into
dec
mov
inc
std
and
les
cwtl
mov
incb
cwtl
stos
in
push
js
outsl
jle
jnp
push
jp
mov
push
aad
push
mov
sbb
cmp
jmp
mov
push
loope
out
mov
test
and
insl
clc
loopne
or
sbb
mov
lahf
xor
mov
enter
lods
add
out
inc
cmpsl
jne
fidivrl
sub
pop
insl
daa
cmp
int3
jno
sbb
into
sub
and
ljmp
std
je
cmc
inc
sti
add
mov
sub
faddl
jmp
movb
cmp
ds
scas
push
pop
shrb
inc
cmp
fsts
imul
scas
lea
add
push
xchg
mov
sub
inc
int
ficomps
push
jmp
sar
shlb
jnp
sub
mov
fwait
lea
lods
fdivl
adc
lods
mov
divl
sub
enter
aas
sahf
lret
je
andl
clc
lea
inc
xchg
sub
idivl
mov
bound
movsl
push
pop
out
and
sub
iret
repnz
push
jnp
lahf
mov
insb
imul
adc
aas
in
ret
loop
dec
push
push
int3
sbb
aad
aaa
jo
mov
call
jbe
imul
xor
pop
fimull
orb
movsl
fimull
jge
paddb
mov
scas
sti
incl
mov
testl
xchg
add
aaa
pushf
add
xchg
jae
cmp
popf
xchg
or
pop
orb
pusha
adc
dec
push
test
push
out
inc
mov
dec
sti
or
xor
ss
mov
cmpsb
insb
icebp
cmpsl
inc
cmc
add
mov
ds
push
pop
jle
xchg
dec
xchg
das
adc
lock
or
outsl
inc
mov
outsb
out
je
inc
inc
pushl
pop
jle
push
lret
jbe
mov
lods
jb
jmp
dec
jp
int
dec
out
pop
dec
and
sahf
dec
out
jbe
movsl
jo
cwtl
xchg
or
das
repz
into
inc
pushf
sub
in
insb
adc
mov
mov
mov
andb
notb
test
sbbb
ds
xor
jp
popf
pop
roll
pop
add
aad
jle
jmp
int3
inc
daa
cmp
inc
and
loop
pusha
ljmp
push
pop
loop
sti
push
jg
add
sbb
mov
je
pop
cli
rcll
inc
loopne
inc
mov
fcoml
clc
lret
insb
push
cmpsb
xor
pop
and
out
jp
notb
mov
pop
repz
clc
fnstsw
jp
sub
shl
dec
dec
clc
mov
pop
out
mov
mov
xchg
push
mov
dec
daa
icebp
into
sti
inc
mov
lea
mov
testl
xchg
cs
cmp
jecxz
or
divl
cmp
loop
das
repz
xchg
jg
dec
xor
sub
pop
ljmp
ficoms
jb
cmc
xchg
lds
iret
xchg
pop
dec
fildll
xorl
out
fimuls
jp
fdivr
repz
xchg
xchg
call
icebp
into
xchg
fs
mov
jg
fstpl
daa
xchg
stos
paddb
andps
adcb
pop
mov
mov
push
push
jbe
dec
push
jo
jp
ficoms
push
xor
neg
mov
cmc
sti
pop
fcoms
fisubrl
stos
xor
ja
mov
mov
lret
or
push
jp
in
mov
ret
add
negl
xchg
push
xchg
and
lods
cs
and
cmp
adc
pop
daa
imul
sbb
inc
arpl
push
mul
testl
mov
sub
nop
push
scas
shll
xchg
sub
pop
mov
jg
loope
add
lock
out
push
mov
test
mov
or
adc
test
sub
ss
rolb
repnz
stc
pop
pop
dec
leave
hlt
jg
mov
jmp
sub
lret
xchg
std
sbbb
sarl
push
imul
cmpsb
aam
jns
jl
movsl
mov
dec
icebp
ret
dec
lock
xchg
sbb
repz
bound
pop
mov
fcoms
inc
push
jp
fdivr
lock
mov
scas
jno
or
pop
push
sbb
or
jbe
lret
or
cmp
scas
mov
into
jmp
push
xchg
push
xorb
xchg
jp
arpl
std
sbb
jge
jo
dec
jns
test
fwait
inc
mov
adc
xchg
jnp
popa
push
rcll
or
adc
shll
jge
xorl
jo
dec
add
inc
js
or
pop
gs
aad
in
icebp
and
sub
mov
or
push
fsubr
cs
xor
dec
roll
xchg
shrl
jne
clc
mov
lods
cli
inc
jp
adc
mov
mov
js
hlt
in
fisttps
pop
jl
push
sub
je
fstp
or
cld
mov
xor
jbe
sub
flds
jmp
pop
cwtl
and
rcrb
cmc
xchg
stos
mov
jne
test
pop
xchg
idivl
mov
cli
cmp
lret
bound
andb
jnp
das
lods
jmp
cmc
push
call
sub
mov
push
inc
lcall
leave
shrb
mov
push
xchg
aad
stos
ret
mov
push
mov
mov
cmpb
pop
mov
shrb
cmpl
pop
fs
mov
aas
repnz
dec
xor
jl
sub
clc
mov
stos
popf
lahf
mov
xchg
je
popa
stos
mov
add
aaa
outsl
xchg
cld
pop
push
nop
fisttpll
pusha
mov
jo
mov
jg
mov
mov
int
fcomp
clc
adc
test
jno
in
and
fst
sub
daa
jmp
add
lahf
mov
push
jns
into
dec
add
xor
mov
dec
xchg
out
popa
mov
pop
ss
mov
dec
sti
or
lods
test
cld
cmpsb
cmpsb
enter
pop
adc
xchg
mov
add
cwtl
inc
sub
stc
mov
lcall
sub
jl
mov
jg
pop
les
push
pop
test
lret
cld
push
jp
lahf
ds
out
iret
test
incl
add
dec
sub
mov
mov
xchg
adc
xchg
mov
test
divb
out
cmc
scas
dec
mov
xchg
into
jo
sarl
xor
stos
adc
cmpsb
ret
pop
mov
lea
sub
jno
pop
rclb
mov
movsb
js
and
repnz
lods
shrl
mov
out
fcomps
ficompl
adc
mov
lcall
adcl
test
clc
inc
mov
sbb
icebp
mov
pop
jno
mov
adc
mov
out
dec
jle
inc
mov
pop
xor
pop
push
pop
test
and
mov
mov
aam
mov
dec
sbb
scas
es
jnp
outsl
dec
push
mov
dec
popf
xor
sub
inc
loopne
add
dec
and
cs
and
hlt
popf
icebp
leave
mov
xchg
aas
sub
std
fucomip
es
ret
push
cmp
pop
xor
rorl
test
push
dec
push
fisttpl
or
psadbw
mov
xor
cmpsl
mov
add
xchg
pop
repnz
shlb
mov
inc
aas
jp
sub
jnp
sti
fwait
sbb
dec
das
push
out
pop
ja
adc
sub
ljmp
mov
lret
and
je
push
test
inc
data16
mov
sbb
ja
shrb
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
inc
fcoml
stos
fdivrs
mov
jg
add
mov
les
mov
jmp
add
sbb
into
lcall
in
mov
mov
push
jl
iret
aam
lcall
gs
test
xchg
add
int
push
xor
pop
dec
add
outsl
push
xlat
lret
fxch
dec
jae
jmp
add
and
roll
push
rol
in
js
cwtl
idivl
jmp
mov
mov
hlt
ja
in
dec
cmp
push
call
cmp
dec
sbb
and
cltd
xlat
lret
pop
insb
dec
out
decb
inc
cmc
test
pop
mov
sbb
test
arpl
inc
inc
inc
and
pop
or
lds
cmpb
ljmp
fwait
ja
add
push
cmp
pop
fnstenv
add
sbb
insl
mov
push
push
aam
add
ret
int3
inc
inc
cmp
cmp
popf
xor
stos
fs
inc
std
cmp
movsl
cltd
sub
insb
in
mov
stos
add
arpl
mov
pop
movntq
out
hlt
lock
shrb
into
iret
ret
dec
sbb
cwtl
mov
mov
cld
aam
imul
cmp
dec
cmpsb
and
push
stos
je
or
mov
in
mov
mov
stc
bnd
pop
call
ja
jb
insl
jmp
mov
mov
xchg
dec
pop
scas
int3
push
aam
pop
mov
mov
inc
pop
repz
call
fsubrl
and
lea
mov
cmp
fistl
insb
repnz
push
fisubrs
outsl
cmp
insl
jge
setb
dec
inc
out
movsb
popa
and
sbb
icebp
fldcw
cmp
or
push
in
loop
or
jbe
mov
xchg
mov
adc
shlb
leave
cli
pusha
stos
addl
rcrl
inc
cmc
pop
mov
sub
pop
je
push
mov
inc
imul
enter
pop
ja
xor
or
ja
dec
imul
movsb
cmp
and
in
pop
jge
adc
push
stos
arpl
jne
and
add
or
mov
inc
das
icebp
inc
test
daa
xchg
dec
push
xchg
cmp
pop
xor
mov
mov
xchg
lret
adcb
jae
and
add
rcrl
iret
test
xchg
or
andb
inc
or
push
lahf
xor
out
scas
lret
dec
jecxz
subb
push
fidivrs
cmp
xchg
scas
into
jb
sbb
push
jns
stos
lahf
xor
movsl
out
fcomps
pop
loope
sbbl
insb
xchg
push
scas
jge
ljmp
daa
rcrb
int
sub
sbb
jge
ljmp
cmp
xlat
lcall
sub
add
xchg
jbe
mov
mov
add
sub
clc
test
hlt
push
aam
mov
loop
sti
xlat
adc
or
lods
cmpsl
dec
push
in
inc
cs
mov
aad
or
or
rcrl
iret
mov
lahf
arpl
xchg
test
xchg
outsl
pop
fisubl
inc
add
enter
rcll
mov
loopne
popf
cli
test
into
stos
cmp
aad
je
push
jecxz
repz
imul
push
mov
daa
ss
add
mov
jae
es
pop
test
sbb
mov
adc
push
xchg
je
or
add
bnd
pop
jge
ljmp
iret
fsubrs
inc
cltd
lret
divl
xchg
pushf
lods
clc
inc
insl
out
enter
push
repz
xchg
and
add
mov
data16
xchg
inc
add
or
decl
shr
lea
adc
jae
sti
ret
sub
sti
popf
repz
lret
leave
popf
inc
jmp
fidivs
xor
pop
jnp
jo
sub
imul
enter
stos
or
arpl
xorb
fists
mov
loopne
xchg
mov
je
and
cwtl
iret
jmp
adc
in
ret
insl
fisttps
inc
je
and
or
pop
mov
or
stos
sti
rclb
inc
scas
and
in
iret
mov
pop
iret
lret
dec
out
push
cld
add
sbb
popa
lds
xor
stos
xlat
fwait
mov
arpl
push
push
bound
mov
push
xor
lods
adc
push
lods
popa
mov
in
adc
stos
gs
mov
jg
mov
inc
push
xchg
aad
adc
hlt
stos
push
ss
out
pop
dec
inc
enter
mov
and
movsl
pop
ja
popa
fisubrl
or
mov
pushf
mov
aad
outsl
adc
mov
push
push
test
adc
jmp
ret
push
cmpsl
test
mov
add
cmp
sub
and
outsb
imul
lods
aaa
push
push
and
jne
mov
add
push
in
pop
inc
sub
mov
call
sbb
dec
sahf
je
ret
pop
ja
ja
inc
sbb
scas
lea
and
test
mov
mov
xor
inc
sbb
not
xchg
xchg
cli
xchg
icebp
ret
loop
sti
sti
mov
jmp
push
push
and
jmp
or
stos
int
lcall
leave
inc
mov
add
xor
xchg
fcomps
dec
cmp
in
mov
out
inc
mov
psubb
out
cltd
arpl
ss
xchg
xor
push
bndstx
xlat
and
mov
inc
in
xchg
movsl
cld
and
push
leave
adc
lahf
lods
dec
movsb
cwtl
mov
ljmp
xchg
sub
lcall
insl
pop
out
xchg
mov
xor
bound
shr
rcll
int
xor
lahf
cmc
iret
out
and
xchg
out
pop
daa
cmpsb
sbb
test
clc
xor
test
aam
fstps
aas
sub
adc
lock
cs
mov
bound
jg
or
out
dec
bnd
cmp
test
daa
insl
xchg
add
sahf
inc
add
xchg
push
lds
shr
out
out
mov
jmp
mov
ret
inc
push
int
pusha
jb
adcl
pop
fstps
xor
test
fwait
out
stc
data16
shll
js
sub
cli
adc
arpl
push
pop
jno
pop
push
push
push
loop
push
jne
test
mov
int3
call
ret
sub
cmp
in
icebp
pushf
jb
hlt
push
or
insl
xchg
cmp
pop
dec
push
adc
jmp
or
sbb
sub
add
test
or
popa
iret
test
ret
sbb
or
adc
or
loop
insb
cmpsb
fstpt
add
fdivrs
fmuls
xor
push
mov
jae
cmp
pop
push
fistps
sub
fwait
repz
pop
lea
in
cmp
das
inc
sahf
ret
shll
xor
inc
jl
xor
aaa
das
inc
and
pop
sbb
iret
adc
pop
inc
dec
popf
add
cs
arpl
inc
xor
int
test
stc
test
lahf
outsl
out
push
or
aas
push
iret
xlat
lea
leave
sbb
mov
xlat
mov
mov
mov
push
sub
femms
cwtl
xlat
fnstsw
or
jb
jge
int
mov
jbe
xchg
js
scas
scas
mull
xchg
sarl
mov
dec
lods
cs
lea
repz
mov
adc
lea
jb
testl
cmpsl
out
mov
stos
test
test
mov
mov
jo
shrb
push
inc
inc
xor
call
inc
and
sbb
mov
fmull
sbb
pop
mov
fistpl
push
pop
gs
pop
add
mov
inc
icebp
add
movsl
mov
sub
or
fdivrs
callw
dec
movb
int
jno
movsl
adc
clc
mov
scas
and
sub
jno
jle
sub
int3
xchg
test
push
mov
jge
fsubrs
movsb
dec
idivb
sub
addr16
loopne
popa
push
adc
lcall
fsubrp
cmp
jecxz
jbe
inc
push
mov
jl
imul
mov
mov
xor
cmp
jecxz
mov
mov
enter
mov
imul
xchg
pop
fldl
push
xor
and
lea
loop
mov
cmp
pop
or
dec
xor
push
xor
xlat
sbb
jmp
dec
xchg
adc
add
rcr
loop
adc
and
inc
fstps
or
xchg
or
fstl
jecxz
pop
rcrl
js
cs
sub
out
lea
add
adc
sub
inc
sti
push
mov
sub
sar
loope
inc
adc
cltd
or
push
mov
cli
or
fisubs
jge
enter
push
loope
les
es
js
pop
mov
push
inc
adc
push
fmulp
cmp
sbb
repnz
out
enter
call
jo
adc
mov
mov
lea
fptan
mov
jne
xor
mov
pop
rclb
shl
push
jno
push
fcompl
lea
ds
cld
pusha
lods
cmp
dec
scas
xor
sub
mov
imul
dec
scas
mov
fucom
out
jno
clc
cmpb
xor
cmp
push
loop
das
add
mulb
jae
sub
push
shld
sub
mov
pop
dec
pop
push
add
bound
add
or
repnz
dec
pop
mov
push
js
sbb
subl
movsl
mov
sarl
sbb
ret
adc
shlb
pop
lods
adc
ret
jo
sub
int
fildll
in
add
dec
pop
popa
cld
jae
out
and
push
stos
pushf
pushf
lds
addr16
jmp
lock
fs
jb
insl
fwait
ret
es
es
pop
je
xchg
mov
sub
jmp
xlat
xor
pop
pusha
push
orl
mov
cmpsb
es
xlat
ss
jo
mov
dec
jo
negl
stc
fcmove
sahf
out
bound
jecxz
push
inc
in
movsb
cli
mov
test
xchg
add
dec
data16
sub
xchg
aad
lcall
test
jnp
not
pop
rclb
imul
dec
sarl
jge
fstps
adc
adc
push
push
sbb
mov
mov
inc
clc
stos
loope
sbb
mov
fimull
adc
pop
negb
insb
iret
jns
and
jae
sbb
mov
pop
fldenv
bound
sbb
mov
dec
xlat
jo
pop
sbb
mov
fidivs
pop
pushf
movsl
daa
xchg
ja
xchg
or
jno
lock
aad
imul
sbb
adc
aam
popl
cltd
movsl
xchg
pushf
mov
push
cmp
sbb
fst
adc
ja
stos
sbb
call
enter
popl
ja
mov
aas
push
lock
pop
mov
cmp
je
xor
adc
sbb
repnz
sbb
scas
pop
fldcw
mov
or
les
xor
scas
and
test
sub
xlat
push
dec
and
mov
add
inc
dec
add
icebp
testb
lock
insb
stos
call
or
jb
mov
jb
pop
push
hlt
sbb
or
xchg
stc
mov
cld
xorb
xor
stos
sub
or
pop
lods
cmpsl
addr16
mov
test
pop
jl
inc
icebp
mov
and
pop
lahf
or
inc
cmpsl
sub
jno
and
jg
xor
stc
add
push
cmp
pop
pop
data16
sahf
xchg
js
lods
xor
push
jbe
push
outsb
pop
sub
push
in
scas
repnz
fnstcw
pushf
xor
ss
jns
adc
jge
xchg
outsb
in
adc
popf
jmp
sarb
aas
sub
iret
aad
orl
inc
mov
mov
xchg
xchg
int3
jo
sub
gs
ss
imull
sahf
jp
mov
idivl
and
insb
mov
push
js
imul
fisubs
or
loopne
mov
and
mov
in
enter
movsl
xor
icebp
jns
adc
xchg
dec
lock
out
cmp
fsubrs
dec
mov
out
mov
test
ret
inc
jae
sbb
les
aad
or
mov
into
movsl
mov
adc
ss
in
push
js
aas
cmove
mov
pop
in
insl
out
gs
add
stos
mov
adc
xchg
scas
or
dec
lahf
or
test
arpl
data16
inc
inc
js
cmp
push
fwait
mov
ss
adc
jmp
sub
mov
pop
mov
test
in
mov
dec
fisttpll
sub
iret
test
xchg
das
xchg
fwait
es
inc
cmp
shll
out
lods
and
fs
fnstenv
testb
pop
inc
insb
xchg
or
icebp
das
xlat
cmp
xorl
sarl
sahf
push
imul
mov
loope
push
mov
out
icebp
or
add
jbe
in
rcrl
add
jne
sbb
add
icebp
inc
clc
cmp
and
testb
mov
stos
nop
call
or
fsubl
mov
lds
ljmp
add
js
lcall
mov
and
cmp
push
xchg
mov
stc
fisttpll
rcrb
movsb
mov
mov
xchg
add
push
mov
mov
jmp
mov
cmp
adc
inc
popa
out
and
arpl
mov
fmuls
mov
add
popa
enter
icebp
out
dec
cli
into
xchg
push
out
iret
ret
repnz
inc
out
push
adc
imul
or
icebp
cmp
mulb
xchg
lea
kmovb
dec
std
js
adc
cltd
int3
or
jbe
nop
pop
adc
xor
dec
mov
stos
pop
mov
bound
add
outsl
test
push
sbb
bnd
scas
add
xchg
daa
rcrb
sub
lock
ret
imul
and
xchg
test
inc
addr16
insl
scas
repz
mov
js
js
aas
dec
addr16
and
outsb
or
and
cmp
inc
xchg
inc
nop
dec
xor
sbbb
sarl
adc
push
lret
add
jo
repz
loope
cmp
inc
add
enter
mov
mov
popa
mov
sarl
clc
xor
xlat
les
adc
xchg
arpl
push
push
cltd
xchg
push
xor
xchg
xchg
mov
rcl
jg
ret
inc
xchg
loop
sub
adc
xchg
nop
negb
stos
fidivrs
cmpsl
or
hlt
fwait
cli
test
test
repnz
scas
mov
push
xchg
shr
pop
bound
jl
cmp
cmp
ja
mov
ffreep
add
sbb
mov
push
dec
es
add
sbb
insb
out
aaa
mov
push
mov
in
pop
in
push
jge
and
ljmp
adc
xor
orb
es
dec
mov
lret
mov
das
test
hlt
popf
xchg
mov
testb
adc
int3
insb
call
ljmp
ret
adc
loope
cltd
scas
jl
scas
pop
lds
xchg
ficoml
add
cmp
mov
bound
adc
les
pop
jmp
stos
lret
fwait
jbe
and
pop
mov
jno
adc
inc
rcrb
dec
and
xor
fidivrl
repnz
mov
add
mov
push
lahf
jne
movsl
add
pop
jmp
push
jle
inc
js
data16
clc
sbb
cmp
xchg
out
cwtl
mov
popa
sub
sub
movsb
shrl
popf
movsb
sbb
das
js
push
fdivr
push
pusha
arpl
xchg
xor
ffree
add
inc
hlt
stos
xlat
lcall
lahf
test
pushf
addb
stc
push
fs
aam
sub
out
in
fists
push
aam
gs
cld
aad
stos
jnp
nop
je
add
jns
lcall
out
mov
scas
movsl
or
cmp
fcomps
aas
decb
sub
js
test
loop
mov
icebp
inc
popa
fsubs
mov
divb
fisubrl
cltd
add
aad
faddl
aas
bound
rolb
push
in
cmp
popf
jp
xor
adc
nop
pop
jg
mov
jae
adc
inc
int
cmpsb
sti
lds
pop
jno
mov
adc
je
iret
adc
push
pop
leave
addr16
scas
cwtl
lret
push
shr
sarl
pop
shlb
pop
push
xor
cmp
inc
xchg
push
sbb
mov
sub
xchg
dec
xchg
jp
jmp
mov
xchg
or
dec
iret
jb
int3
jae
gs
insb
or
xor
add
push
mov
push
scas
mov
cmp
std
adc
int3
imul
es
pop
mov
push
cmp
mov
rcr
es
dec
mov
push
outsb
xlat
sti
inc
mov
hlt
jae
inc
int
rorl
ja
jbe,pt
movsb
lock
inc
cmp
pushf
jp
inc
icebp
test
mov
inc
mov
or
add
popf
add
jge
fisttpl
dec
das
and
out
gs
bound
js
push
push
jp
pop
inc
pop
push
ss
jnp
pop
cmp
fldenv
mov
cmp
dec
das
int3
std
aas
out
shll
fistpl
add
pop
sbb
xchg
ret
cli
gs
jns
bound
sub
lods
dec
ffreep
sub
push
data16
xchg
pop
and
mov
mov
imul
pop
fcoml
lahf
cmp
cltd
or
rclb
inc
mov
jns
fs
daa
fwait
call
adcl
dec
dec
mov
xchg
gs
ljmp
cmpsb
insb
inc
lret
rclb
in
sbb
leave
in
xchg
cmp
pop
mov
repnz
push
pop
xchg
xor
mov
xor
out
test
stos
inc
insl
mov
iret
js
arpl
pop
or
push
mov
mov
shlb
faddp
mov
inc
out
mov
add
out
les
shrb
lret
sbb
sbb
mov
cmpsb
inc
mov
sbb
cltd
push
cmp
dec
jae
imul
sahf
dec
push
insb
push
mov
jp
lcall
cmc
sbb
jmp
lret
lock
out
or
in
ret
mov
mov
loope
icebp
in
xlat
orl
mulb
sbb
lret
sbb
dec
scas
pusha
add
mov
fdivr
lock
shrl
ljmp
or
add
shll
cmpsb
jbe
mov
les
mov
pop
inc
jmp
jmp
or
mov
das
pusha
inc
lret
popa
or
push
sbb
bound
out
repnz
in
mov
in
pop
pop
xchg
rol
lret
and
mov
sub
out
inc
addb
inc
mov
test
out
adc
scas
pushf
fsubr
xchg
xor
popl
xchg
in
repz
das
rolb
out
ljmp
jae
les
or
lds
lods
cmp
mov
jl
xor
pop
popf
mov
mov
mov
jle
and
mov
aaa
hlt
addr16
call
xchg
fldt
dec
dec
xor
sbb
ficompl
or
inc
mov
neg
xor
call
fildll
adc
push
shll
xchg
push
jns
push
pop
faddl
pop
xchg
mov
dec
insl
lret
inc
adc
cmp
movsb
cmpsl
loope
in
add
pop
pusha
loope
pop
add
mov
or
fmuls
push
lods
cmp
mov
insl
push
daa
sub
sarl
test
inc
push
aad
xchg
mov
jecxz
lock
dec
and
add
dec
jnp
outsl
adc
or
outsl
mov
push
sbb
mov
sub
mov
xlat
jge
lcall
and
or
mov
test
push
into
std
cli
cmp
testb
jno
rorl
push
jne
int3
dec
mov
sahf
cmp
lcall
imul
sbb
scas
jns
xor
lret
lahf
push
jnp
or
sub
add
xlat
cmp
jne
adc
jnp
mov
jl
nop
pop
add
cmp
mov
mov
pop
orl
mov
mov
add
add
pop
xor
lcall
pusha
ret
cwtl
xchg
dec
inc
test
sbb
sub
std
push
sub
int
inc
add
outsb
xchg
out
cmpsl
jmp
push
mov
push
jl
out
testb
pop
xchg
pop
movsb
hlt
push
mov
cmpsl
in
xchg
xorb
pushf
scas
push
xor
xchg
das
inc
stc
adcb
xor
and
jno
imul
mov
fstps
es
gs
out
mov
aas
add
jl
xchg
xchg
pop
mov
popa
cmp
mov
sahf
pop
fdivs
xor
mov
shll
or
ja
fsubs
add
xor
add
inc
sbb
add
and
test
imul
adc
outsb
lret
lahf
jmp
xchg
loop
lret
mov
pusha
inc
sbbb
sub
shl
jg
enter
mov
loop
pop
xor
push
addr16
push
adc
add
dec
fsubrl
lret
imul
dec
rolb
into
xchg
jge
rorb
cmp
cltd
add
dec
mov
xor
xor
ja
testl
mov
mov
cs
jge
jge
rcr
gs
mov
sbb
sarb
ss
sbbl
stos
in
mov
pusha
xlat
mov
out
add
insl
jne
adc
arpl
int
pop
int3
mov
mov
ja
jo
push
jo
mov
outsl
sti
mov
pushf
loopne
push
aas
or
or
xchg
jno
divl
sub
stc
subl
xchg
repz
cmp
push
ret
add
mov
mov
xor
cmp
jns
loop
dec
mov
dec
dec
jp
in
add
dec
jg
and
inc
adc
add
pushf
mov
sbb
imul
cli
xor
ret
insl
mov
enter
cmp
xor
test
scas
repz
lret
loopne
sbb
sub
xchg
inc
mov
add
cmp
dec
and
mov
push
push
cmp
sub
pusha
xor
jecxz
stc
inc
scas
daa
fdivrs
push
js
inc
or
or
fsub
jns
fs
repnz
xchg
xchg
xchg
leave
and
mov
mov
push
mov
mov
out
xchg
int3
in
inc
fstpt
mov
jbe
xlat
sbb
inc
dec
push
sbb
push
xor
cmp
lds
and
xchg
pop
mov
mov
xchg
andb
inc
dec
orl
fcomi
sbb
fdivl
xchg
xlat
and
xor
mov
push
adc
pop
sub
ss
shrl
cmc
jo
sbb
xchg
dec
lret
dec
stos
ss
out
adc
pop
stos
test
push
mov
out
jae
stos
or
lock
cmc
in
mov
sub
or
stc
rcr
mov
scas
cmp
jmp
cmc
shr
or
cmp
pop
les
jne
adc
btl
mov
pusha
aas
fiaddl
inc
cltd
movsb
mov
and
mov
mov
push
outsl
mov
mov
inc
mov
push
loop
and
daa
mov
pop
add
or
sub
gs
rcr
pusha
pop
test
or
arpl
xor
in
inc
xchg
les
aad
gs
stc
cmp
cmpl
out
adc
into
sub
cmp
xchg
fwait
scas
repnz
repnz
inc
or
pop
sbb
leave
inc
mov
rclb
or
ret
or
stos
sbb
add
sti
in
dec
mov
scas
out
dec
int
repz
adc
xchg
bswap
in
int
cmpl
cmp
xchg
push
lahf
mov
es
bound
xchg
push
xchg
out
jnp
stc
or
xchg
into
shrb
sub
aam
fadds
test
xor
and
mov
add
cmp
add
loop
dec
add
pop
cmp
fnstsw
rcr
jl
dec
scas
je
rorl
dec
push
mov
fwait
out
nop
or
inc
and
ret
out
cld
pop
daa
test
mov
mov
fwait
out
shl
addl
cltd
fcmovnbe
xchg
das
inc
rcrl
mov
daa
loope
xchg
jg
aaa
sub
push
enter
enter
das
icebp
push
xor
cmp
mov
dec
mov
or
cmp
out
pop
and
cmp
mov
mov
mov
push
cld
push
dec
or
cwtl
into
fsub
dec
ljmp
mov
jle
cmp
jae
mov
sub
sub
hlt
adc
movsl
pop
stc
roll
movsb
cmp
das
aaa
icebp
sbb
pop
mov
stos
ja
xchg
push
adc
popf
gs
adc
dec
lds
mov
fs
iret
rorl
or
in
pop
fwait
int3
xor
jmp
popa
add
mov
out
leave
rcrl
dec
inc
daa
fstps
les
push
pushf
icebp
or
xor
xchg
insl
popa
push
cmp
pop
xchg
adcb
sub
and
outsb
jle
sub
xor
lods
cli
push
loop
inc
cmp
notl
sbb
lahf
sahf
jmp
push
loop
fdivl
ret
mov
xor
outsl
pop
cld
lcall
inc
outsl
cld
hlt
imul
mov
cld
mov
pop
out
push
pop
jbe
insb
je
push
cltd
lcall
pop
fcmovnb
jnp
push
jp
gs
rcl
aad
cmp
mov
movl
hlt
popf
push
jge
mov
adc
jmp
mov
or
shll
repz
aaa
mov
xchg
push
mov
jmp
adc
call
jmp
in
in
aas
sahf
jae
or
filds
and
mov
cltd
les
xchg
imul
jnp
adc
aaa
xchg
test
mov
or
xor
jo
mov
and
in
jbe
jae
in
sbb
sahf
lods
int
aam
sbb
cmp
or
fnstenv
shrl
mov
push
mov
lods
lock
mov
jecxz
adc
add
aam
stc
scas
mov
jae
or
loope
es
dec
imul
dec
sub
inc
cmp
push
mov
fdivl
test
rcrl
pushf
les
mov
jno
jno
and
call
sahf
xacquire
cmp
cwtl
sub
lahf
call
arpl
fwait
orb
sub
pop
and
pop
sub
and
ret
xorl
dec
xorl
rcll
sub
lea
rolb
mov
xchg
push
mov
fwait
pop
inc
icebp
adc
mov
cmpsb
pop
and
push
jmp
xchg
and
shll
int3
push
hlt
daa
pop
and
xor
jbe
test
call
out
dec
test
pushf
and
mov
outsl
mov
icebp
lods
jns
fldenv
test
or
xor
cmpsl
pop
xchg
push
or
lods
sub
out
fldenv
jp
test
imul
jbe
sti
lds
aaa
adc
outsb
cmp
stc
shrb
stos
loop
aam
or
inc
divb
sub
outsl
jmp
movsb
addb
jle
inc
or
pop
into
xchg
ds
popf
ljmp
pop
and
dec
aas
dec
cmp
push
mov
cwtl
std
or
add
add
pop
pop
int3
jg
push
xor
test
mov
xor
movsb
repnz
fnstcw
stos
not
inc
sbb
sbb
jp
jb
cmc
xchg
mov
or
mov
shlb
and
aad
out
push
aas
xor
pusha
test
pop
lds
cmc
sti
pop
icebp
jno
xor
fcom
sub
push
xor
sti
inc
outsl
cmpsl
out
inc
aad
mov
jmp
mov
push
mov
fisttps
sub
mov
loop
lds
inc
lret
jo
lret
pop
fildl
scas
cwtl
sub
cmp
and
pop
sbb
mov
mov
mov
mov
daa
daa
add
and
stc
dec
sub
sar
dec
xor
cmpsl
cmp
mov
pop
pop
fistpl
mov
mov
loopne
icebp
pop
outsl
xchg
push
and
aas
pop
lea
cmp
pop
mov
jg
push
repnz
fs
add
sbbb
mov
jl
jb
mov
push
orl
test
inc
int3
pusha
addb
pop
in
mov
mov
pop
jb
jae
rcrl
mov
xorl
add
shll
fstps
cmc
mov
or
dec
xor
fisubl
cmp
adc
xchg
mov
xchg
repnz
jmp
jb
mov
xchg
xchg
aas
mov
daa
add
addr16
gs
sbb
movsb
adc
sbb
adc
in
mov
dec
xor
xor
mov
stos
aam
and
add
cld
in
jae
xor
pop
test
enter
cmpsb
push
movsb
popf
sbb
loope
fadds
aas
add
aam
jle
stc
inc
inc
mov
pop
pop
shlb
imul
cli
add
mov
mov
jno
jecxz
sub
call
push
push
push
je
fisttpl
in
push
xor
ja
pop
nop
pusha
loopne
es
xchg
aas
pop
subb
fsubrl
test
movb
fyl2xp1
sub
xor
data16
in
imul
sbb
rol
pop
mov
and
mov
ss
es
mov
adc
addb
fstpl
mov
shll
and
jge
and
or
add
add
dec
pop
sub
leave
shl
ret
adc
mov
gs
cld
arpl
jecxz
aaa
cmp
fiaddl
jp
pop
sub
lods
stos
sbb
adc
movl
sbb
xchg
jne
orl
mov
mov
inc
js
sub
sub
push
mov
push
es
mov
into
inc
pop
popf
push
push
cltd
sub
inc
xor
inc
scas
or
ret
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
ficoms
xor
fstpl
jp
and
xchg
jp
jne
jge
jne
je
mov
in
adc
inc
bound
movsl
adc
push
dec
movsl
adc
ja
subl
cmc
xor
pop
je
test
lods
pusha
jno
lcall
push
push
std
andl
clc
adcl
ret
cmpsl
lods
jo
fidivl
dec
ja
dec
sbb
cmpsb
and
xor
loope
jno
pop
jg
push
enter
sub
mov
pop
xchg
cmpsl
pop
mov
test
inc
stos
and
aaa
pop
jg
xchg
adc
lcall
stos
insb
push
cmp
fs
imul
mov
outsb
test
jp
bound
shll
sbb
mov
inc
cmp
or
insl
mov
popa
push
and
lcall
or
jae,pt
cmp
inc
data16
les
jmp
inc
xchg
lods
sbb
cmp
shll
addb
in
shl
sub
add
sahf
jae
mov
ror
lcall
gs
cli
sub
popa
daa
movsb
adc
mov
into
dec
call
lock
cwtl
or
cmpsb
aad
sbb
mov
subb
mov
xor
dec
and
loope
int3
pop
lea
sbb
fldcw
enter
sbb
or
inc
cmp
ja
repnz
mov
inc
xchg
lods
xor
add
and
add
pop
gs
ficompl
dec
daa
jl
decl
dec
les
fidivl
xor
fdivl
insl
dec
mov
fbld
push
int
xor
inc
pop
repz
dec
pop
push
scas
subl
inc
popa
dec
xchg
and
sbb
enter
jl
loop
sub
dec
repz
mov
mov
ret
orl
ss
xchg
lea
push
push
insl
mov
jp
repz
lret
push
inc
cmpsl
repz
dec
dec
in
cltd
les
and
movsb
pop
aam
inc
or
push
adcb
jb
ljmp
pmulhw
movsl
cmp
ljmp
mov
add
aaa
sub
cmpsb
dec
jo
leave
sbb
ja
fwait
outsb
pop
popl
pop
out
push
cmpsl
sbb
jmp
add
jle
pop
imul
jae
dec
ss
xchg
sbb
out
divl
scas
dec
test
movups
insl
outsb
fidivs
pop
leave
lock
dec
fwait
xor
out
mov
push
mov
jns
dec
or
lock
lds
push
and
xor
cmpsb
movd
xchg
rcrb
mov
pusha
xchg
leave
and
jns,pn
aam
fnsave
clc
pop
mov
pop
mov
hlt
pop
sbb
mov
pop
adc
ds
lret
pop
xchg
gs
sti
pop
shrl
jb
fildl
sbb
jo
mov
ja
dec
lock
sbb
add
das
out
sti
or
push
fs
push
mov
mov
lock
jl
xchg
cs
popf
es
xor
je
push
scas
mov
sub
aaa
jle
fstps
cs
in
xchg
popf
pop
repnz
and
pop
pcmpeqb
pop
dec
add
test
mov
mov
neg
gs
insb
fs
sbb
mov
rolb
adc
test
inc
jbe
hlt
movsb
loope
cmp
push
push
lret
mov
hlt
jp
fsubrp
pop
mov
fwait
xor
mov
jbe
out
sahf
loop
adc
jl
mov
aad
pop
xchg
and
imul
rcrb
mov
mov
loope
and
fdivrl
inc
dec
and
aad
push
jge
in
sbb
cmp
test
inc
cld
rcrb
sarl
push
lret
into
dec
sahf
adc
andb
inc
xchg
sbb
mov
rcll
cwtl
and
xchg
ficoml
inc
ljmp
inc
xchg
out
stos
into
xor
lods
push
fwait
inc
loop
jge
sub
test
leave
xchg
lods
mov
popa
dec
mov
jno
mov
xchg
addr16
std
sbb
pop
mov
cmp
inc
fwait
insl
jnp
mov
push
enter
mov
insb
jge
mov
mov
or
push
sbbb
xchg
mov
dec
shlb
lods
sub
xchg
cltd
fs
ret
mov
std
pusha
add
push
shll
out
stc
mov
stos
xor
mov
popa
out
test
adc
cmpsb
push
pop
lods
test
insb
cmp
andb
aad
mov
lea
pushf
out
and
jnp
jg
jl
jmp
xor
mov
xor
ds
sub
movsl
push
mov
insl
stos
sbb
cltd
shll
sbb
rcr
pop
loop
mov
mov
fidivs
ret
mov
jg
fdiv
fadds
mov
sahf
sbbl
xchg
and
mov
ljmp
rcrl
test
popf
xor
iret
lret
xor
incb
je
push
scas
xchg
jmp
fbstp
imul
inc
dec
fs
sub
xchg
ret
hlt
nop
outsb
xor
jne
mov
cmp
data16
loope
mov
add
ja
push
test
mov
ljmp
xchg
adc
data16
idiv
jbe
and
sarl
jb
jae
aas
inc
jbe
mov
jae
mov
out
jno
cmp
sub
and
mov
lret
sbb
mov
ret
pop
lret
inc
lahf
pop
ret
xor
cmc
loopne
call
shlb
popa
inc
scas
fmul
test
jp
mov
pminsw
xchg
mov
call
xchg
lret
mov
mov
jle
sub
daa
out
pop
adc
shrl
aas
and
movsl
popa
cmp
xchg
popf
cmp
ds
pop
sub
and
add
sbb
pop
inc
loopne
outsl
mov
mov
test
stc
in
js
cmpsb
mov
aas
shll
pop
jmp
mov
imul
mov
imul
faddl
jge
cld
negb
sbb
test
pop
mov
mov
pop
push
iret
mov
daa
divb
mov
insl
or
icebp
enter
sbb
and
cs
rorb
dec
sbb
lret
adc
cltd
stos
jle
ljmp
int3
aam
into
xchg
vcvtps2dq
lcall
insl
bound
add
or
sbb
aam
popa
or
popf
jnp
shrb
test
insl
xor
pop
xchg
mov
hlt
adc
out
ret
data16
dec
pusha
lret
arpl
cmp
fildl
add
pop
sbb
negl
fsubs
jle
add
ror
sti
pop
outsb
jl
mov
xor
rcrb
adc
stos
jo
pop
mov
pop
aas
sbb
push
loopne
sub
mov
mov
push
gs
sti
icebp
push
outsb
lcall
fstpl
add
fildll
dec
shr
lds
mov
jge
repz
mov
add
outsb
insl
cmp
push
scas
mov
mov
imul
fsubl
jmp
lds
dec
sbb
dec
fldl
jae
or
dec
shrb
push
dec
cmc
in
push
mov
loopne
pop
add
push
mov
repz
pushf
insb
pop
lahf
adc
mov
popa
add
in
rcrl
fs
icebp
lds
pop
scas
gs
loop
loop
testl
mov
sbb
mov
jno
dec
repnz
push
icebp
popf
sub
pop
lock
fwait
hlt
xchg
or
popf
jg
into
mov
orl
fistps
movsl
into
and
mov
shr
inc
jcxz
cld
pop
cmpsb
dec
mov
sub
xchg
mov
pop
mov
hlt
mov
fists
sub
inc
in
sub
repnz
add
mov
mov
in
pop
xchg
subb
clc
pop
test
push
loope
mov
iret
mov
nop
jp
je
in
stos
cmp
sbb
lea
in
out
inc
std
mov
jp
inc
cmp
mov
test
cs
cwtl
addr16
lods
sahf
movsl
f2xm1
sub
pop
pop
mov
cmp
les
sbb
scas
or
pop
sub
or
sahf
cli
repnz
stc
pop
dec
jecxz
xchg
mov
aaa
or
and
pop
loope
push
mov
addr16
in
or
cwtl
pop
mov
addr16
inc
ljmp
dec
pop
cltd
mov
jb
ljmp
icebp
rolb
sub
cmp
mov
add
xchg
mov
push
pusha
or
mov
scas
or
mov
scas
adc
sbb
adc
lea
nop
inc
loope
daa
add
rcr
aad
mov
pushf
cli
add
add
scas
pop
out
pop
iret
dec
rolb
cwtl
jno
or
and
loop
pusha
jecxz
shrl
test
mov
loope
xchg
les
mov
inc
push
adc
pop
jmp
sarb
jnp
sbb
pusha
jl
xlat
mov
push
sbb
dec
jo
pop
dec
cltd
add
lock
cld
inc
imul
stos
add
sbb
cmp
inc
or
sub
push
in
test
js
repnz
xor
pop
sarb
sbb
jo
push
out
mov
stos
inc
cs
and
imul
ret
ret
lods
roll
sbb
mov
add
push
pop
divb
push
mov
pusha
and
sub
dec
sarb
jp
lea
mulb
and
int3
adc
fists
jge
xor
insb
push
cmp
sarl
mov
fs
rol
scas
mov
dec
insl
mov
data16
dec
mov
in
fldcw
push
adcb
xchg
inc
dec
aad
insb
inc
xor
fmul
sbb
push
mov
xchg
jmp
das
xor
cmp
mov
sbb
xchg
cli
pop
mov
inc
iret
ljmp
jns
xchg
push
xchg
aam
arpl
fildl
xchg
or
xor
fwait
in
pop
movsb
fs
js
sbb
dec
clc
ret
sub
lcall
call
mov
repnz
xor
inc
adc
inc
jmp
call
xor
sti
jno
out
fucom
xchg
or
fistpll
dec
jne
js
and
mov
je
dec
imulb
repnz
out
and
or
fsubrl
xorl
out
inc
insl
shrb
outsb
mov
test
imulb
mov
negl
inc
orb
push
in
mov
repz
push
loop
xor
adc
mov
adc
xchg
insl
push
jecxz
and
mov
mov
mov
mov
pop
xchg
or
or
cs
or
js
fsubrl
mov
mov
pop
push
sarb
push
fstp
inc
int3
lea
mov
adc
push
rol
into
pop
lea
fdivl
lret
push
mov
hlt
mov
mov
and
data16
xor
and
fsub
adcl
cld
or
xchg
mov
or
push
pop
pop
and
fnstenv
cmpsl
sub
and
and
aas
popf
xor
push
cmpsl
ss
sbb
jmp
mov
mov
mov
es
add
fsts
test
pop
xor
and
xor
outsw
xorl
cmp
hlt
mov
outsl
fimuls
fstpt
jno
pop
scas
in
push
inc
adc
mov
daa
adc
dec
xor
or
into
xor
push
xchg
fstps
loope
xchg
push
and
dec
neg
mov
rcrl
aad
aad
popf
cmc
mov
pop
jne
mov
add
out
adc
and
inc
add
and
icebp
pop
fistpll
test
adc
bound
mov
cmp
pop
fstp
inc
xor
xchg
orl
dec
dec
repz
lods
hlt
cwtl
int
adc
sbb
sub
mov
shlb
lcall
mov
xchg
data16
test
sbb
repnz
dec
xor
iret
aad
pop
sbb
rcll
xchg
insb
int3
popl
mov
outsl
nop
out
jecxz
jno
xorl
xchg
sub
mov
arpl
xchg
ret
pusha
and
add
in
pop
push
mov
js
repnz
sub
and
addl
jne
loopne
and
add
push
jmp
fists
xor
movsb
rcl
sbb
shlb
stos
cmc
jo
xor
fstps
mov
push
push
loopne
aam
xchg
movsb
cmp
xor
push
jmp
popf
fsub
or
out
bsr
pop
fwait
xchg
ds
sub
dec
cli
fnstenv
cmp
and
into
sub
cmpsb
fninit
add
cli
and
shlb
inc
jnp
fwait
ds
pop
pop
loop
or
in
out
int
cmpsb
add
or
adc
fs
jbe
stc
jnp
es
in
xor
ret
xor
push
mov
loope
sbb
cmp
scas
inc
dec
dec
aam
xchg
add
lods
mov
add
jns
push
scas
pop
mov
cltd
rolb
mov
jo
and
or
xlat
xchg
and
dec
lods
cmpb
mov
push
or
dec
in
and
push
push
aam
add
jmp
movsb
bound
subb
sbb
push
inc
fwait
dec
lahf
jmp
sub
push
pusha
and
test
sub
push
pop
push
lea
mov
ret
sti
dec
xor
push
fmuls
leave
jmp
jmp
lret
add
adcb
shlb
mov
pop
cld
pop
lds
mov
or
dec
or
test
or
gs
fwait
movsb
movswl
push
add
pop
xchg
cmp
jnp
sub
out
inc
flds
push
dec
scas
jne,pt
jle
icebp
test
rcll
xchg
and
je
mov
stos
fiadds
sub
das
loop
xchg
in
jecxz
sub
mov
imul
daa
cmp
push
ss
fiadds
enter
mov
xor
lods
dec
int
or
fstp
arpl
mov
mov
dec
add
xor
mov
out
sub
xlat
jecxz
pop
ret
ds
add
mov
pop
push
sbb
insl
repnz
inc
lea
aaa
cmp
adc
push
insb
fsubs
sub
ror
dec
iret
data16
xchg
mov
jne
cmp
xor
pop
xor
add
fisttps
andb
push
pusha
imul
mov
pop
cltd
mov
out
push
mov
sub
bound
sar
and
inc
inc
sub
and
roll
xchg
push
and
xchg
cmp
sbb
popf
loope
jge
lahf
xchg
lods
sbb
or
pop
jge
mov
pop
ljmp
les
mov
aas
scas
sbb
xor
inc
scas
repz
cmp
hlt
xchg
pop
push
dec
or
rorb
sahf
jge
std
cmp
push
test
imul
or
dec
inc
jmp
and
jmp
inc
stc
pop
call
repz
jp
pop
gs
jno
dec
sahf
lret
push
cmc
inc
fs
mov
lock
movsl
mov
pop
cmpb
pushl
jb
or
incl
xchg
mov
pop
ret
mov
mov
call
cld
xor
jne
ret
add
cmpsb
lret
sub
jns
xor
mov
push
outsl
loope
lods
inc
nop
mov
stc
dec
dec
out
adc
stos
pop
push
push
cmp
sub
mov
cmpsl
lea
leave
aas
stos
pinsrw
dec
gs
ds
mov
dec
lea
or
test
push
lahf
addl
sub
nop
mov
in
sbb
pop
cmp
sub
gs
nop
mov
mov
sbb
je
or
or
jbe
shrb
stos
ljmp
insl
mov
clc
inc
xor
ret
addr16
sbb
mul
into
aaa
std
gs
icebp
movsb
test
outsl
lock
jecxz
jb
sbb
aam
mov
mov
out
sahf
pop
mov
mov
sub
aad
flds
out
jbe
dec
scas
in
jnp
push
xchg
and
aas
xchg
xor
push
sub
dec
aaa
adcl
dec
jecxz
or
push
ret
cs
mov
pop
fwait
bound
mov
out
fadds
dec
incb
mov
mov
sub
mov
repnz
popf
mov
bnd
sub
iret
ret
xor
mov
lea
js
mov
xor
jns
xor
jmp
cmp
jl
ret
mov
mov
or
rcll
in
mov
mov
fstps
nop
dec
mov
mov
cmp
pop
adc
rcrl
mov
scas
popf
jne
jle
sbb
hlt
les
iret
mov
outsl
ret
loopne
cwtl
imul
popa
aas
pop
test
and
cmp
mov
sahf
pop
shrl
divb
popa
fists
lods
out
pushw
call
fsub
icebp
jle
scas
shll
add
jle
pop
imul
mov
mov
xor
rorl
mov
ljmp
fmul
inc
lret
inc
adc
sub
jp
mov
mov
add
xor
xchg
fadds
insl
cwtl
ja
das
pop
xchg
pusha
scas
or
push
mov
test
call
mov
adcl
bswap
push
push
cmpl
sbb
aam
cmc
addr16
out
popa
inc
dec
movsl
outsb
xor
mov
mov
nop
dec
mov
adc
and
lock
inc
adc
or
mov
sub
pusha
stos
pusha
mov
sub
mov
lret
sbb
rcrw
add
cmp
pop
jp
jle
cltd
inc
inc
lahf
add
fcmovb
jp
stos
push
leave
sbb
push
jg
inc
insl
inc
mov
or
loope
test
fists
pop
ret
sub
in
scas
push
aam
iret
push
add
test
lods
pop
jecxz
pop
add
push
data16
jae
movq
jp
dec
mov
jl
dec
sub
inc
fildll
mov
lret
adc
pop
sahf
rcll
push
mov
cmp
sarb
clc
cmp
xorb
repnz
std
ficomps
cltd
xchg
push
mov
or
js
pushf
test
test
and
adc
pop
dec
lods
jbe
sub
repz
fldenv
imull
insl
leave
fistpll
in
fdivrp
fisubl
sarl
out
stos
jae
cmc
sub
lods
repz
rolb
lods
sbb
repz
sbb
lea
push
cmp
rorb
cmp
or
roll
cmp
xor
ret
pop
cmpsl
add
sbb
mov
cmc
inc
out
pop
inc
call
int
cmpb
lock
das
lcall
clc
mov
outsl
mov
lret
cmp
push
add
in
cmpsl
pop
out
xchg
push
push
inc
sub
cltd
jb
add
cmpsb
push
scas
push
int3
sbb
sbbb
imul
das
les
jns
adc
cltd
daa
test
pop
cmp
add
rorb
fs
push
notb
push
sbb
lds
fwait
ds
mov
xbegin
adc
mov
clc
xor
jl
jb
mov
cli
and
mov
jne
out
adc
imul
loop
in
and
mov
movsl
and
and
daa
adc
orl
ljmp
pop
xor
xchg
mov
fcompl
imul
sbb
orb
mov
push
add
or
add
cmp
rolb
dec
outsb
into
jecxz
inc
mov
sahf
pushf
ret
mov
pop
xor
test
scas
fstpt
sbb
hlt
out
loope
cmpl
lea
adc
jle
sub
push
flds
jecxz
dec
and
sub
jle
sub
je
cmpsb
adc
out
sub
sub
add
mov
pushl
pop
xchg
sbb
dec
xor
adc
das
cmpb
adc
repnz
push
dec
ret
adc
dec
std
lods
sbbb
fisubrs
in
movl
jnp
sbb
add
mov
xlat
or
out
inc
inc
ds
fists
push
je
and
xor
dec
out
sub
cmp
insb
stos
pop
int3
cmp
dec
stos
mov
sub
lods
mov
adc
enter
xlat
add
cld
pushf
or
dec
insl
xchg
push
sbb
xor
jns
nop
fildll
movsb
sbbb
cmp
add
ret
mov
add
inc
xchg
jmp
aas
jae
and
xor
adc
mov
enter
into
sbb
add
mulb
and
aam
jge
pop
adc
loop
jl
push
stc
leave
xlat
add
pop
xor
test
pop
sarb
inc
sahf
push
dec
mov
push
pop
mov
dec
jbe
aaa
xchg
xchg
adc
rcrl
pusha
cli
xchg
lahf
pusha
pop
out
cli
cmpsb
imul
ds
xchg
js
and
xor
push
lea
stos
mov
jns
enter
stos
xor
xchg
std
push
pop
fcoms
fcomp
mov
push
add
scas
pop
loop
add
cmp
sbbl
dec
jb,pt
xor
repz
sub
cmc
fsts
sub
and
pop
in
sbb
loop
push
or
roll
int
mov
xchg
sbb
lret
xor
inc
push
jo
imul
loope
xchg
and
fwait
jecxz
pop
test
shlb
dec
and
jmp
or
adc
sub
lds
sar
divl
mov
std
push
dec
lods
andl
mov
in
fsubrl
fldl
sahf
and
push
ret
cmc
aaa
push
repnz
jp
mov
out
fwait
pop
sbbl
lods
inc
add
mov
or
bound
sub
ret
dec
in
stc
mov
cmp
ffree
in
fcoml
pusha
icebp
or
lods
loopne
aas
mov
test
rol
mov
movsl
fimuls
ljmp
movsb
and
ds
cmp
xor
call
leave
stos
mov
xchg
sub
aam
mov
or
mov
mov
mov
aaa
icebp
push
adc
push
cwtl
sub
push
repz
fldl
push
in
push
mov
jg
pop
sub
pop
in
out
inc
xchg
inc
pushf
rol
push
mov
sbb
imul
mov
xchg
xchg
test
inc
call
das
xlat
mov
hlt
outsl
jne
shr
push
stc
mov
sbb
lret
aam
shrb
xor
dec
fwait
sbb
jle
jmp
inc
adc
fstps
xor
cmp
sbb
repz
inc
in
jge
ds
xchg
and
subb
sub
shrl
das
out
lods
inc
mov
and
push
mov
sbb
mov
cmp
sbb
fstpt
jae
dec
aaa
pop
nop
call
or
cltd
test
jbe
cltd
sub
cltd
fwait
lret
mov
cmp
or
push
ss
repnz
call
pop
cmp
negl
rol
xchg
jno
mov
add
bound
mov
sbbl
loop
pop
or
mov
out
add
daa
sub
sbb
rol
addr16
push
or
push
jge
pop
dec
mov
adc
pushf
lcall
inc
repnz
insl
adc
shlb
out
xor
lds
inc
fnstcw
ret
icebp
adc
and
into
cli
lods
jg
scas
aas
sbb
add
scas
cmp
mov
mov
test
pop
pop
aaa
lret
nop
pop
call
push
push
aam
gs
xor
and
dec
mov
cmp
shll
xor
add
fistpl
and
mov
lds
fwait
rol
sbb
mov
pop
jp
jnp
sahf
pop
xor
in
test
push
cltd
jge
pop
or
sub
sub
push
movsl
sub
adc
or
out
jno
or
xchg
test
stos
cmp
mov
lret
fadd
and
inc
ret
cwtl
xchg
js
mov
add
pop
outsl
push
std
dec
jmp
push
push
adc
mov
fmuls
cmp
push
call
les
shrl
mov
jns
cmc
shl
or
push
dec
mov
clc
icebp
or
out
xchg
jnp
mov
popf
ret
rcr
insb
shll
mov
mov
mov
jg
inc
rcrl
push
jae
adc
lea
out
mov
and
ret
pop
and
adc
out
dec
jg
mov
ds
ret
out
in
hlt
mov
ljmp
xor
std
xor
jmp
dec
jno
call
clc
shl
aam
mov
jno
cmp
lods
sar
dec
out
push
stos
fwait
std
repz
or
cmpsl
xor
imul
mov
xor
mov
pop
and
jbe
xchg
jle
gs
push
les
sbbl
hlt
or
jnp
adc
lcall
add
xlat
or
sub
sbb
int
xor
aad
hlt
int3
les
mov
cmp
mov
popf
add
jmp
pop
push
ret
jl
and
addl
cli
cmpsl
and
pop
movsb
pop
mov
mov
cmpb
sbb
call
outsb
inc
mov
xor
loope
jnp
dec
pop
or
pop
int3
int
repnz
lcall
inc
cltd
mov
push
les
pop
int3
cmpsb
rorl
jne
ret
push
fisttpl
sti
cmp
push
push
in
inc
or
xchg
and
sbb
xor
jle
stc
jns
and
pop
iret
pop
or
jmp
inc
xor
test
pushf
mov
inc
icebp
xor
pusha
mov
add
or
mov
inc
xor
cld
xchg
jno
ficomps
inc
jnp
shrb
add
xchg
push
dec
push
roll
xchg
insl
mov
cmp
popl
xchg
pop
loopne
roll
or
pop
aam
pushf
cmp
pushf
dec
les
cmpsl
rcll
sub
popa
nop
cli
push
shlb
pop
xchg
add
lock
push
jne
xchg
cmp
mov
test
aam
fiadds
add
and
xor
fsubrl
sbbb
sar
pop
stc
mov
outsl
das
clc
ljmp
dec
pop
mov
fwait
rol
xchg
addr16
das
mov
aam
movsl
xchg
inc
scas
sbb
mov
mov
imulb
shrb
and
sub
stos
aam
or
mov
pop
imulb
arpl
jns
and
adc
adc
stos
insb
cmp
pop
je
in
ret
cmp
repz
fiaddl
inc
fistpll
mov
in
lret
mov
clc
adc
gs
shll
iret
ret
sbb
stos
loopne
xchg
sub
jl
mov
mov
push
push
pop
out
or
add
inc
leave
sbb
push
notb
in
jle
mov
xor
mov
push
and
and
adc
or
mov
mov
and
loopne
dec
mov
and
aas
pop
dec
pop
incb
push
mov
push
inc
movsb
jecxz
ja
inc
dec
xor
inc
lcall
lret
dec
adc
ss
mov
adc
movsl
dec
nop
addr16
pusha
les
repnz
cmp
arpl
out
clc
pop
into
jo
sub
iret
mov
adcl
xor
fsubs
outsl
dec
lcall
pop
mov
jmp
lahf
mov
mov
mov
imul
add
or
xchg
insb
jl
jle
movsl
stos
lret
cmpsl
or
cmp
repz
xor
imul
mov
cmp
aad
jge
dec
shlb
jg
repz
xorb
xor
mov
repnz
out
jne
add
lret
nop
mov
bound
imul
mov
sub
mov
lret
xchg
sub
adc
imulb
in
test
adc
fsubrl
push
mov
cmp
sbbl
and
sub
das
ret
add
nop
push
pop
test
fimull
adc
xchg
mov
or
mov
xchg
jae
add
xor
scas
rcll
sahf
js
mov
sbb
cmpsb
mov
ss
cmc
insl
repz
clc
sub
stos
xchg
loope
repz
add
sbb
inc
daa
cwtl
out
cmp
insb
fsubr
sbb
jecxz
and
fwait
mov
pop
adc
xlat
cltd
sub
shll
jns
jne
idiv
push
push
insb
mov
andb
out
into
pop
or
je
sub
lcall
shrb
dec
test
jns
js
cmp
repnz
xor
add
fidivrs
ficoml
out
cmp
dec
imul
inc
cld
cli
mov
jns
fldcw
pop
cmp
outsl
dec
adc
push
pop
or
hlt
dec
adc
std
out
adc
mov
mov
jecxz
imul
cli
dec
gs
hlt
jns
pop
jl
add
and
ja
lea
scas
inc
cmp
in
jle
jp
dec
mov
flds
mov
cmp
add
movsl
sub
pop
pop
add
out
jbe
jae
movsb
sub
dec
xchg
lret
pushf
outsb
roll
add
arpl
and
aam
insl
mov
sbb
decl
inc
add
movsl
mov
and
push
inc
adc
dec
jb
mov
adc
out
xorl
cli
jp
xor
jo
fiadds
imul
mov
xorb
sub
xchg
and
mov
lcall
stos
cld
sbb
fistps
push
jl
pop
sti
fadd
xlat
and
jno
xchg
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
notl
aas
lahf
adc
jp
pop
jp
stc
and
ss
cmp
in
add
aaa
scas
std
and
out
lcall
xchg
pop
sbb
jle
sarb
cmpsb
lcall
push
sub
lock
mov
pop
push
sub
iret
xlat
push
fcoms
push
pusha
arpl
push
outsl
movsl
and
push
stos
xchg
mov
bound
xor
je
add
je
fistl
inc
in
popf
stos
mov
mov
pop
mov
push
dec
movsb
icebp
ja
imul
out
adc
call
sbb
daa
sbb
outsb
clc
pop
mov
pop
jno
loop
cmp
insl
gs
push
mov
adc
shll
jle
pop
mov
loopne
or
xchg
push
jmp
lods
mov
test
dec
sahf
cmpsb
subb
and
mov
popa
sbb
mov
add
cli
push
test
pusha
stos
gs
push
jp
cmp
inc
add
icebp
inc
cmc
mov
push
scas
mov
sti
cmc
out
mov
test
iret
pop
mov
sbbl
mov
jae
xchg
cmpsb
mov
cmp
xchg
mov
mov
or
xor
insb
inc
sub
aam
or
jle
stos
lods
mov
cmc
sub
or
pop
stos
push
push
dec
jg
scas
mov
addr16
lock
add
fsts
mov
scas
rcrl
aad
jno
mov
decb
or
popa
ss
dec
cli
push
xlat
cmc
mov
or
clc
outsb
dec
mov
lea
ss
jo
stos
testl
add
or
incb
add
cli
sahf
and
rolb
xchg
stc
add
adc
sub
test
call
scas
data16
hlt
inc
aam
stc
test
mov
int
sbb
movsl
loop
hlt
in
or
cmp
inc
sub
jbe
inc
pop
out
add
pushf
fdivrs
jae
pop
push
jns
xchg
fisttpll
outsb
jl
inc
lcall
jno
xor
xchg
mov
dec
testb
push
fdivrl
cld
imul
mov
mov
les
scas
lds
dec
and
dec
add
mov
loopne
insl
sahf
mov
sbb
jecxz
nop
push
add
xorl
sbb
popl
mov
mov
mov
test
retw
xchg
dec
or
movsb
sbb
iret
mov
sbb
adc
in
mov
sbb
shufps
adc
lea
lods
es
sub
sar
jb
sub
add
rcrb
bsr
sub
sub
xchg
orl
cmp
lcall
lods
addb
cld
repz
adc
xor
inc
push
iret
scas
dec
cltd
inc
or
dec
sti
mulb
clc
xchg
cld
lea
xor
push
jno
jp
leave
mov
nop
adcb
add
shl
stos
dec
cmp
jmp
pop
xor
enter
je
dec
pop
sahf
nop
iret
dec
fs
jnp
mov
add
imul
imul
inc
xchg
push
jmp
cmp
push
cli
xor
pop
insb
into
push
jae
test
outsb
add
pop
dec
in
shl
push
lret
loope
movsb
loop
jg
mov
scas
mov
push
jp
je
xor
ficomps
cmp
push
rclb
sbb
negl
mov
inc
adc
xchg
enter
out
testl
mov
loope
inc
orb
stos
mov
mov
cmc
push
arpl
pop
or
add
js
push
xchg
mov
sbb
int3
stos
and
mov
pop
int
xchg
pop
test
and
cld
dec
enter
aaa
mov
add
lret
push
ds
and
xchg
cmpsb
and
pop
sub
mov
fdivrl
movsl
jle
jo
cltd
pop
or
fmuls
dec
aas
cmpsl
fidivrs
xor
test
inc
in
ja
mov
pop
inc
out
pop
cmp
pop
imul
inc
nop
movsl
cwtl
frstor
push
lret
fwait
or
mov
decb
pop
insb
mov
out
push
inc
dec
mov
push
stos
push
xchg
sbb
adcl
data16
sub
sub
cmp
inc
inc
fwait
das
pop
xor
pop
jns
stos
das
bnd
sub
outsl
lcall
lods
hlt
les
jno
out
in
repz
stos
neg
insl
jl
subb
addr16
popf
push
ds
push
push
mov
cmp
xchg
dec
mov
scas
fsts
add
je
mov
call
inc
lret
cmp
push
lock
sub
cmp
xchg
imul
inc
sub
sti
or
mov
pop
inc
mov
insl
adc
or
andb
pop
push
frstor
bound
or
inc
and
sub
loop
jbe
xor
sarl
dec
movsb
cmp
shlb
mov
or
mov
in
and
call
jecxz
xor
sbb
and
sbb
pushf
lret
ljmp
cltd
sub
jno
dec
cmp
test
add
sarl
jno
xchg
cmp
mov
pop
ror
je
stc
iret
inc
ja
lret
aaa
adc
loope
loop
insb
or
hlt
jle
daa
mov
push
fdivr
mov
xlat
shr
mov
sub
shll
in
sbbl
aaa
leave
mov
cmp
aas
pusha
pop
lock
insb
sub
push
cld
pop
dec
rclb
cmpsl
and
pop
or
add
sahf
dec
sub
into
mov
clc
std
mov
sbb
fs
mov
sbb
ja
cmp
subb
sahf
inc
pop
rorl
sbb
ds
stos
and
idiv
xchg
push
sbb
sub
cld
ficomps
les
insb
cmc
jb
repnz
jb
mov
sahf
push
and
jnp
in
push
aad
adc
sub
int
rol
inc
and
lcall
inc
mov
adc
in
sbb
lret
sub
jge
mov
sbb
jnp
adc
in
lea
add
and
sti
hlt
jo
xor
fiadds
movsb
mov
mov
rcrl
xor
mov
inc
stos
aaa
sub
or
mov
int
orl
ret
sbb
lods
mov
add
jl
mov
cltd
testl
mov
xor
rcll
dec
push
push
les
jmp
shl
dec
sub
in
push
pushf
ja
and
out
insb
ja
adc
cmp
notl
inc
adcl
stos
xor
mov
or
cmp
cvtps2pd
push
mov
push
bound
jl
push
shll
mov
out
dec
mov
cmp
inc
std
mov
hlt
loopne
movb
in
scas
dec
popf
call
jae
shrb
mov
daa
adc
sub
sub
cmp
movsl
inc
test
lret
and
pop
enter
and
sbb
pop
data16
shl
je
incb
call
push
pop
add
sbb
std
bound
gs
mov
test
mov
aaa
cwtl
jne
mov
jb
xorl
std
mov
push
lds
dec
fsubrp
xor
shr
cmp
fucomi
push
shr
xchg
lret
sbb
imul
or
cmp
sbb
lock
inc
lods
dec
lock
cli
test
mov
mov
adc
int
mov
bound
shll
loop
pop
and
jno
adc
and
jge
xchg
inc
out
fstps
adc
enter
movsl
xchg
xchg
adc
mov
pop
add
dec
push
fnsave
mov
dec
ja
stos
xchg
icebp
cmpsl
stc
push
push
xor
pop
fcompl
pop
arpl
aaa
dec
jle
jle
push
hlt
insl
int3
imul
dec
inc
out
push
stos
mov
int
sti
jmp
cmp
add
mov
add
push
jecxz
aas
bound
adc
push
daa
call
test
or
mov
out
dec
push
aad
loopne
out
push
add
xor
hlt
ret
decl
inc
movsl
cmpsl
dec
aad
mov
subb
fsubl
and
cmp
loope
cmpsb
add
push
mov
mov
into
cs
jns
lods
xchg
or
xor
movsb
add
push
and
test
les
nop
dec
mov
std
mov
add
ja
leave
push
push
mov
arpl
push
cmp
sahf
sub
and
sbb
pushl
out
dec
popa
jne
lahf
push
dec
lods
inc
rol
pushf
cmc
add
fdivs
fcompl
dec
notb
lret
jbe
jp
insb
lret
xchg
fcoms
push
add
or
xchg
pop
jno
std
mov
insl
push
bound
filds
inc
scas
incb
std
hlt
jge
loopne
mov
cwtl
lcall
dec
push
mov
sarl
lahf
lret
push
ret
pop
jb
outsb
test
mov
push
fstl
mov
push
out
xor
loope
push
clc
test
into
cld
add
add
loope
jnp
jmp
fsubl
mov
push
or
cmp
dec
cmp
inc
imul
aad
push
movsb
lahf
ud1
loop
mov
cmpsl
push
out
xor
addl
pusha
inc
or
dec
imul
int
mov
mov
adc
xchg
mov
push
xchg
jecxz
xor
pop
cmp
sub
sub
jle
xor
out
xor
sbb
inc
jnp
sar
inc
out
shl
mov
mov
push
fldcw
lahf
gs
pop
out
sbb
lret
lcall
xchg
add
aaa
fbld
mov
jbe
lock
sub
jbe
cmpsb
push
lea
jb
fwait
jne
jno
ja
movsl
inc
sub
mov
inc
jmp
dec
dec
mov
cwtl
imul
push
int
sbb
lahf
pusha
ret
inc
dec
xchg
pop
dec
js
pushf
das
mov
mov
xchg
pop
mov
mov
lods
or
fdivs
inc
sbb
sbb
jl
sbb
and
pop
rcr
jne
jmp
adc
pushf
pop
cmpl
jecxz
dec
fadd
loope,pt
pushf
orl
push
pop
sub
inc
rolb
test
in
jbe
stos
mov
jl
xor
fnstsw
fimuls
cld
mov
rcrb
fstpl
inc
call
mov
or
test
cmp
pop
jle
loop
lock
leave
cmc
jne
enter
iret
cmpb
dec
push
in
cmp
in
xchg
sub
sbb
xchg
das
test
cmc
cmp
push
int
and
cmp
cs
lcall
std
xor
fldcw
js
fsts
roll
test
dec
rorb
xor
outsl
fiaddl
mov
xlat
cltd
shll
mov
jae
int
push
cmp
bound
mov
jae
jle
xchg
xchg
pop
in
into
popf
xchg
cltd
repz
xchg
lret
mov
cli
fdivs
lds
push
inc
aas
cmc
adc
into
sub
inc
and
adc
rol
ja
and
in
imul
lret
addr16
scas
movsl
jnp
or
or
pop
insl
pop
pop
push
mov
fisttpl
test
sub
movsb
or
bound
imul
pop
sbb
push
inc
jae
es
jno
sub
adc
add
add
xor
and
adc
mov
mov
stos
xor
mov
mov
sub
pop
mov
pop
and
fcomps
sti
test
jl
bound
andb
mov
outsb
mov
add
imul
into
maskmovq
divl
jp
fs
xor
outsl
push
sbb
cmp
sub
cmp
pop
insl
cmp
lods
and
add
shl
gs
mov
jne
icebp
xchg
mov
pop
mov
pop
add
aam
nop
jns
aad
jno
pop
inc
clc
adc
pop
or
push
testb
hlt
out
add
cmp
mov
xor
ds
std
or
test
mov
xchg
mov
hlt
jle
fcmovnb
inc
jb
mov
adc
mov
mov
dec
jge
mov
jmp
fldt
jb
push
leave
idiv
fstps
jge
xlat
inc
and
aaa
hlt
daa
clc
and
rorl
adc
mov
in
add
jge
add
je
shlb
fcompl
inc
mov
lock
dec
mov
xchg
inc
leave
cmp
adc
lods
xchg
sub
jno
test
ror
js
idivb
mov
lds
imul
gs
inc
mov
add
in
mov
mov
rcrl
add
inc
fisubrs
fs
jmp
aam
cmpsb
cmp
dec
clc
and
or
inc
adc
sbb
add
mov
and
addb
push
mov
sub
mov
clc
push
push
adc
cmp
pop
inc
test
push
jo
insb
push
loop
mov
sar
mov
mov
je
dec
idivl
xlat
sbb
out
sbb
test
subl
jo
mov
xor
xchg
xor
xchg
jge
xchg
test
and
clc
fisttps
fwait
or
sub
jle
dec
cs
dec
push
sbb
out
rolb
add
mov
jmp
cs
fildl
adc
fisttps
das
add
and
shll
sub
dec
rcrb
jbe
scas
in
push
insl
sub
aas
test
gs
sarb
fistl
jne
xchg
dec
xlat
dec
jg
scas
popf
or
mov
dec
sbb
pop
sub
pop
int
mov
xchg
jno
push
andl
cmp
mov
sbb
sbb
dec
push
jmp
adc
mov
cltd
adc
mov
call
mov
call
loope
mov
fldt
insb
fwait
add
fxch
ds
lods
movsb
sub
mov
ror
mov
inc
scas
sbb
rcrb
xchg
out
loopne
pushf
and
movsb
xor
dec
xchg
xchg
mov
fadd
push
push
pop
jno
dec
and
mov
jge
mov
outsb
jge
push
repz
dec
popa
mov
xchg
mov
mov
test
ret
into
push
in
cmp
ja
jmp
enter
pusha
push
xor
clc
jb
mov
popf
gs
adc
mov
mov
mov
inc
pop
iret
push
in
mov
scas
add
out
mov
mov
bound
dec
mov
cltd
mov
flds
lock
sub
mov
mov
cmp
xchg
mov
adc
stc
mov
scas
icebp
jmp
arpl
sub
aam
adc
jo
sbb
inc
fbstp
xchg
ret
pop
xchg
adc
and
fsubrs
cmp
lea
and
xchg
inc
push
or
bound
cmpsl
leave
mov
cltd
and
lods
sbb
and
ds
ljmp
lret
dec
jg
fnstcw
pop
stos
pop
je
in
sub
xor
fcomip
shll
push
xchg
stc
fdivrl
icebp
lcall
in
mov
es
push
pop
xchg
push
lcall
xchg
jmp
pop
mov
js
jl
cmp
pop
mov
outsl
das
jg
shrl
inc
xchg
push
cmpb
repnz
or
mov
out
mov
push
push
bound
mov
lret
iret
fincstp
getsec
jb
loope
filds
inc
scas
push
bnd
lock
cli
jo
push
xor
int3
lods
lods
xor
adc
test
ds
nop
push
lock
shlb
ds
outsb
or
pop
loope
push
orb
aad
int
lock
cmp
fmul
lock
mov
push
movq
pushf
inc
popa
gs
stos
les
cmpsl
pop
inc
insl
out
or
es
push
cld
stos
subb
push
fdivl
int3
cmc
push
in
and
lock
sti
ret
adc
lea
out
orb
ljmp
cmpsb
lods
icebp
fsubr
push
jne
lret
adcb
int3
mov
stos
in
push
sar
xor
fcmove
or
pop
mov
popa
fcompl
cwtl
sub
bound
pop
sub
enter
rcrb
stos
xor
dec
pop
loope
push
mov
pop
and
ret
stc
in
mov
popf
aaa
pop
test
xchg
mov
pop
out
pusha
inc
add
outsl
push
pop
int
or
aas
push
mov
sbb
push
inc
cmpsl
mulb
int
jmp
inc
pop
shrb
in
push
sbb
stc
push
xchg
sub
sub
stc
mov
pop
cmpsb
outsb
stc
mov
aam
aad
out
pop
push
and
mov
and
or
ficoms
dec
or
sbb
mov
shl
in
cmp
dec
cmp
and
lret
inc
mov
ficomps
jl
adc
and
daa
jg
stos
jge
repnz
xchg
sbb
lret
cmp
icebp
in
jbe
pop
and
in
dec
dec
mov
push
outsb
dec
cld
ror
fdivrl
fsubl
xchg
inc
mov
loope
incl
ficomps
icebp
or
jbe
cmp
les
jmp
stc
jle
movsb
outsb
outsb
pop
lock
lods
mov
pusha
fsubrl
hlt
mov
dec
scas
fdivs
inc
test
fistps
clc
cmovg
push
and
mov
push
loope
pop
lods
das
dec
mov
imull
in
into
arpl
es
js
xor
mov
stos
or
mov
mov
adc
subb
shrb
bound
jle
push
stos
push
jg
or
test
leave
xchg
jl
sub
push
push
je
movsb
test
jmp
out
lahf
jb
mov
outsb
fcoml
test
test
sub
lds
xchg
pop
push
loope
push
mov
mov
inc
les
mov
push
sahf
dec
fildll
into
and
inc
xor
and
in
sbb
push
aaa
mov
cmpsl
jo
cmp
pop
push
xchg
loopne
push
stos
aas
imul
inc
mov
jnp
inc
push
adc
and
fwait
adc
xor
add
sti
outsb
in
sbb
pop
inc
pop
jge
mov
mov
es
testl
nop
dec
and
sbb
icebp
inc
mov
fistps
jo
in
mov
cmp
pop
cmp
std
adc
jge
sbb
push
test
mov
lret
jb
cmp
push
sarl
push
cmp
jmp
enter
outsl
or
pop
js
in
inc
sub
dec
leave
sbb
jne
mov
test
ret
lds
mov
xor
ret
shrl
call
dec
in
sub
addr16
dec
or
pusha
cmp
mov
out
jmp
je
jb
pop
or
movsl
or
test
std
aad
mov
pop
sub
dec
xor
sbb
cmpsb
test
mov
repz
cwtl
xor
in
pop
pop
scas
push
cli
xlat
push
xchg
xchg
adc
cmpl
in
xchg
mov
into
fnstsw
shrl
sub
mov
inc
adc
jne
movsb
or
popf
movsb
lea
mov
or
iret
cmp
sub
scas
xchg
add
mov
aaa
gs
xor
sbb
lret
gs
popa
imul
mov
in
pop
rorb
test
mov
add
ss
push
sbb
hlt
out
xor
pop
aad
ret
lret
cmc
xor
ja
clc
fbstp
lahf
mov
sarb
aam
sbb
stos
ret
or
je
dec
cli
nop
popa
or
xor
jne
mov
adc
outsb
cmc
sub
fistpll
cmp
add
fisttpll
hlt
in
jp
xor
inc
mov
sbb
dec
jno
cmpsl
sub
cmpsb
inc
mov
adc
mov
push
lods
mov
add
test
inc
sub
fistpll
jae
jb
jmp
shrb
jae
cmp
jnp
cmc
jl
adc
imul
sub
inc
pusha
sbb
xor
sub
in
rolb
xor
cli
inc
out
dec
sbb
inc
lret
adc
mov
mov
sahf
cmp
mov
xchg
xor
or
mov
addr16
inc
adc
data16
outsb
cmp
xor
push
loope
in
pusha
mov
call
int3
mov
sbb
in
or
jne
and
icebp
mov
lods
pop
je
cs
push
mov
shr
mov
dec
pop
jnp
jbe
sbb
adc
inc
adc
and
sub
in
adc
inc
jns
iret
jno
and
add
pop
loope
dec
aad
cmp
jnp
xorb
or
mov
dec
mov
jl
pop
fs
and
cmp
daa
outsl
daa
xchg
cmp
adc
jb
sub
add
cmp
add
pop
dec
xor
popf
mov
cmp
xchg
ds
push
xchg
fs
mov
lods
push
dec
add
jecxz
mov
dec
or
ret
xchg
insb
adc
add
push
mov
mov
popl
or
xchg
fisubrs
loope
loopne
mov
adc
sahf
jnp
mov
ret
inc
popf
fcoml
xchg
sbb
leave
adcl
add
mov
xor
je
repz
dec
imul
ficoms
call
and
int3
cmp
cli
mov
aam
push
subb
inc
cmp
lahf
imul
cmp
jg
stc
pop
addr16
sbb
scas
fdivl
lcall
xchg
add
in
or
cmp
push
sub
out
das
jmp
bound
xor
mov
mov
fcoml
xor
repnz
push
sub
jecxz
imul
cmpsb
sub
out
stc
outsl
movsl
in
xchg
mov
icebp
popa
scas
xor
adc
dec
cmpsl
mov
add
push
je
iret
xor
fwait
mov
jp
test
sbb
shlb
out
cmp
xchg
mov
negb
cli
adc
mov
xor
push
inc
push
dec
sub
adc
dec
loopne
fwait
mov
fnsave
in
aas
test
push
lods
xor
xor
and
ljmp
sti
jg
mov
lahf
push
fimull
xlat
jp
outsl
sahf
or
mov
mov
pop
xchg
lods
ljmp
push
jp
popf
mov
sbb
cmp
adc
enter
inc
mov
movsl
test
in
enter
sub
jge
add
aaa
xchg
pop
dec
fildll
cli
cmp
jmp
adc
fidivrs
mov
xor
sub
push
fs
or
mov
popf
stos
xchg
jp
xchg
dec
sbb
cwtl
cmpl
sbb
loop
inc
js
lds
fs
imul
rcrl
xchg
pop
lods
sti
or
clc
jne
inc
xchg
mov
pop
jp
dec
movsl
xchg
xchg
jmp
int
nop
pop
popa
lcall
dec
pop
popa
inc
jmp
nop
scas
popa
call
mov
sbb
sar
shll
push
mov
dec
and
lds
negb
dec
std
push
inc
bound
push
add
mov
jae
int3
sub
cmp
add
repnz
mov
stos
fldl
mov
jae
lcall
cli
stc
fidivrl
in
adc
and
cs
jb
adc
les
mov
fldt
sbb
mov
data16
sbb
call
or
test
dec
loope
mov
aad
out
rcrb
mulb
inc
pushf
push
mov
loopne
pusha
xchg
in
shll
pop
call
sbb
stos
sbb
shll
push
pop
imul
fistpl
lds
in
inc
outsb
or
test
push
insb
mov
arpl
inc
cmc
sbb
sub
sub
push
scas
inc
cmp
dec
pop
xchg
shl
lahf
adc
mov
add
xchg
pop
icebp
push
dec
add
ja
xor
std
push
fisubrs
jb
inc
mov
xchg
je
add
test
ds
inc
repz
dec
lcall
or
cwtl
pushf
dec
in
leave
sahf
inc
mov
dec
jbe
in
fwait
cld
inc
jb
mov
pop
outsl
loopne
push
sbb
shlb
divl
lea
xchg
lds
jle
jae
icebp
or
sbb
push
xchg
mov
jo
fs
loop
rcl
outsl
push
mov
pushf
movsl
fdivrl
repz
inc
push
mov
and
les
jmp
mov
aaa
push
adc
sbb
push
jb
lahf
mov
jge
ss
pop
aaa
ljmp
dec
stos
dec
pop
add
int
imul
sar
push
mov
xor
cli
movsl
and
jae
dec
adc
mov
sbbb
cli
pop
ss
in
rclb
cmpsb
mov
cmc
ror
mov
push
add
std
int
in
leave
lahf
popl
loopne
dec
xchg
adc
clc
dec
ss
sbb
adc
and
add
xchg
inc
pop
out
cmpsl
inc
shl
fmulp
dec
push
movsl
dec
out
mov
pop
mov
mov
dec
or
mov
jge
shll
imul
inc
je
mov
jle
and
mov
sbb
or
dec
mov
pop
mov
inc
sbb
lds
cmp
fs
aad
pop
xchg
xor
push
fdivr
mov
test
adc
adc
pop
xlat
jmp
cmp
lock
pop
decl
popl
sbb
frstor
pop
cmpsl
cld
dec
sub
and
out
mov
jbe
imul
sub
mov
xor
mov
dec
adc
xchg
mov
lret
lcall
mov
negb
dec
mov
inc
xchg
in
outsb
xlat
scas
xchg
or
loop
cltd
jl
push
rcrl
jne
loope
jns
jno
fimuls
imull
push
pushf
cmp
xor
sarl
cmp
sub
pop
scas
scas
call
test
cmp
lret
xchg
xchg
mov
pop
into
fsubs
cmpsl
bnd
push
roll
jae
sbb
scas
sub
dec
xor
shrl
add
jg
mov
loope
xor
aaa
data16
mov
dec
or
jl
cmp
cwtl
pushl
cmp
test
daa
or
pushf
lods
shr
arpl
je
inc
cli
push
inc
popa
sbb
pop
lock
pop
aaa
add
add
inc
push
sbb
cmpb
mov
sub
fwait
lds
out
jne
adc
lock
out
mov
dec
out
cmpsl
out
loope
std
pop
add
mov
dec
adc
inc
loop
loop
data16
ret
icebp
sar
rcrl
mov
dec
es
xor
xchg
test
inc
lock
mov
jp
inc
mov
hlt
jo
iret
dec
in
aad
pusha
pop
dec
icebp
rorl
inc
or
ficoms
adc
jbe
ret
push
add
push
shrl
sub
clc
cli
sbb
fwait
xchg
leave
popa
jne
fisubl
idiv
sbb
inc
or
xlat
mov
xchg
stc
jg
xchg
pushf
add
xchg
mov
push
jne
push
pop
xor
lods
leave
add
jae
pop
fdiv
mov
sub
rcr
sahf
stos
or
adc
jnp
dec
adc
pusha
js
out
jae
sbb
push
ja
push
pop
adc
sarl
loop
bound
mov
lds
inc
pop
xor
lret
push
sbb
lahf
test
test
add
hlt
ret
sbb
mov
dec
jnp
cmp
inc
mov
test
mov
or
push
ret
push
mov
adcb
lea
cmc
pop
fucomi
test
and
inc
add
sub
daa
rcr
ret
nop
sbb
mov
fisubrl
mov
pop
inc
or
add
or
ds
pop
jmp
push
and
xchg
xchg
mov
aaa
mov
sbbl
adc
adc
pop
sbb
imull
hlt
divl
xchg
loopne
js
hlt
adc
or
sbb
into
xor
dec
xchg
divb
int
lcall
faddl
jnp
mov
mov
mov
stos
add
shl
sti
clc
hlt
lret
add
or
cmp
xor
imul
enter
inc
mov
neg
cmpsb
add
dec
xchg
mov
stos
ret
adc
mov
sbb
cmp
repnz
cld
into
mov
push
shll
jnp
xchg
xor
pop
int3
mov
stos
mov
loopne
popf
orb
shlb
shll
popf
imul
lds
and
je
xchg
sub
cltd
jns
repnz
xchg
adc
lods
push
push
fimuls
or
add
ja
add
and
xlat
mov
cmp
and
les
sbb
adc
jmp
mov
pop
ds
std
sub
pop
out
cmpsb
in
ret
lahf
mov
push
xchg
sub
mov
adc
es
stos
xchg
addr16
out
insb
ret
sbb
insl
fsubrs
addr16
arpl
incl
push
daa
xchg
loopne
enter
pop
jge
add
bound
dec
psrlw
idivl
inc
jo
mov
xor
or
fmul
sbb
inc
mov
loopne
mov
push
mov
hlt
mov
std
mov
sbb
aas
mov
daa
dec
pop
adc
sub
mov
ljmp
std
lea
mov
cwtl
out
movb
call
mov
mov
sti
xchg
mov
jns
jmp
cmp
test
addr16
mov
dec
scas
jb
add
dec
rol
iret
lds
jae
pop
xor
std
sbb
sarb
dec
sub
out
loopne
mov
ret
inc
xor
int
xor
cli
inc
insb
aaa
notl
mov
dec
push
inc
inc
int3
leave
and
inc
xor
jns
xchg
imul
xlat
cli
je
movsl
push
inc
cmp
jle
pop
mov
sub
jbe
cmpsl
call
jbe
out
and
ss
inc
push
iret
dec
ds
xor
mov
add
leave
lock
xor
sub
mov
insb
sbb
mov
jmp
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
decb
lret
adc
jp
adc
jp
push
imul
loope
int
sbb
or
inc
lret
pusha
jl
xlat
jno
enter
cmp
cld
push
adc
adc
push
pop
fildl
xor
add
lods
mov
insl
test
test
pop
mov
out
repz
repnz
fbstp
and
push
out
outsb
adc
test
rcrb
int
stc
mov
add
jb
or
imul
xor
cmc
cmp
xor
mov
dec
inc
decl
jl
lds
in
inc
shlb
mov
in
lods
aam
fcomip
pushf
aam
add
fdivrs
add
fwait
int3
js
into
mov
sbb
daa
std
pop
or
mov
ljmp
lahf
dec
mov
jo
ret
les
inc
adc
leave
cmp
dec
mov
mov
faddl
enter
xlat
xchg
les
lock
aad
xchg
pop
pop
lahf
shrl
push
repnz
les
mov
mov
ret
xchg
xor
scas
loopnew
sbb
shrb
pop
sarl
into
lret
inc
pop
cmp
push
fnsave
sub
xchg
aam
aam
fstpt
test
mov
rcl
iret
mov
aad
std
lahf
jecxz
xchg
stc
dec
sbb
es
nop
repz
mov
xchg
rep
mov
and
cmc
mov
mov
jb
mov
shl
into
dec
mov
jbe
inc
scas
ficomps
mov
pushf
mov
push
jmp
mov
push
popf
pushf
ss
mov
mov
pop
in
xchg
pop
add
sbb
jl
push
add
cli
xor
jl
bound
adc
xor
sub
aaa
repz
and
push
xor
pop
xchg
cmp
testb
pop
stos
or
jae
cmp
fwait
leave
sub
lcall
sub
and
lret
insl
jnp
mov
insl
movsb
in
pop
scas
jp
inc
xchg
in
sub
or
stos
sub
adc
cmp
xchg
mov
mov
jle
mov
dec
stos
das
out
sbb
mov
sbb
adc
data16
dec
jle
and
mov
push
jle
in
lret
pop
xor
je
or
sahf
mov
stos
push
xlat
sbb
cmc
mov
fwait
mov
mov
das
stos
xchg
jbe
xchg
leave
sahf
jp
jne
lods
inc
xor
lret
dec
fistl
xchg
cs
repz
orl
movsl
iret
or
xor
cmp
jno
test
push
add
mov
push
mov
ret
jmp
jg
cmp
push
aaa
mov
stos
popf
sti
sub
xor
lock
sbb
adc
mull
add
fnstenv
ss
mov
xlat
and
rorb
pushf
add
shl
iret
pop
pop
push
rcrb
imul
sub
cmp
xlat
push
jo
movsb
hlt
add
ds
lret
jns
jge
adc
cmp
addr16
clc
xor
dec
mov
imul
pop
mov
add
cmp
or
les
cmc
push
mov
mov
js
rdmsr
jae
pop
pop
mov
cmpsl
test
lret
mov
adc
outsb
add
xchg
int3
nop
imul
adc
cmp
push
dec
xchg
data16
lds
subb
mov
pusha
ja
lods
or
aaa
mull
inc
mov
dec
sbbl
mov
add
repnz
pop
pop
mull
loope
and
mov
subb
sub
das
xorb
cld
mov
pop
mov
jmp
xchg
cmc
rclb
cli
jl
movsl
test
hlt
mov
jo
add
ret
xchg
stc
fldcw
int3
mov
cmp
scas
or
loope
stc
test
loopw
sub
in
jle
fiadds
dec
lahf
xchg
cmp
in
notl
mov
dec
stc
inc
sub
pop
adcb
mov
fs
test
jnp
icebp
sub
popa
cmp
fs
idivb
jle
inc
notl
or
stos
inc
mov
inc
stos
add
pusha
cmp
mov
adcl
xor
xor
in
fsubr
jge
add
loope
fwait
jae
cmpb
jo
outsb
adc
cmpsb
std
test
test
adc
jnp
leave
cld
add
pop
jno
xchg
dec
lret
add
fs
sub
orl
sbb
insl
or
jns
or
and
adc
sbb
cmc
dec
push
leave
jp
adc
mov
lea
jle
dec
push
cli
popa
mov
mov
call
add
dec
repnz
or
pop
sbb
inc
cmp
mov
push
mov
int3
sarb
mov
jmp
test
test
dec
sub
mov
movsl
into
pop
ss
mov
out
pop
mov
mov
xor
mov
int
leave
fdiv
adc
jl
cmp
nop
dec
hlt
inc
mov
sub
sub
sbb
jno
adc
sbb
or
pop
cmp
mov
add
xchg
jmp
gs
add
mov
mov
xchg
mov
loop
pop
sbb
mov
push
inc
stos
mov
inc
lret
sbb
sarb
gs
dec
rcl
int
icebp
in
sbb
mov
dec
in
add
scas
bound
into
sar
and
sbb
sarb
sbb
mov
jns
fdivrl
adc
sub
ljmp
add
fsts
push
mov
int3
hlt
jl
mov
add
dec
idivl
jb
sub
jb
inc
fisttps
mov
mov
xchg
mov
mov
ja
or
cwtl
imul
test
adc
inc
lods
or
std
out
push
cwtl
inc
dec
or
mov
push
and
jb
mov
xor
dec
das
lret
pop
out
adc
shll
mov
push
roll
lods
int
pop
dec
leave
inc
dec
lock
outsb
push
cmp
and
in
lahf
xor
inc
in
cli
mov
outsb
pop
shll
nop
enter
cmp
outsb
js
fs
daa
dec
dec
inc
push
push
scas
mov
into
fists
pop
xlat
and
cmp
out
jge
sarb
fmul
sbbb
imul
xchg
js
and
jbe
out
shrl
cmc
or
mov
lods
lods
ds
inc
pusha
mov
out
push
pop
lahf
adc
mov
repz
incl
clc
stos
out
sbb
call
movsl
and
mov
lock
aaa
fcompl
out
aam
cli
hlt
mov
movsb
sbb
dec
xchg
mov
outsl
push
mov
mov
pop
mov
mov
push
jle
frstor
out
sub
popf
cld
fwait
loop
mov
or
aad
arpl
sti
mov
test
add
inc
and
sub
or
jns
gs
in
or
jne
fidivs
mov
jb
int
jb
xorb
les
out
jb
inc
xchg
emms
negl
pop
fisubrl
pusha
fxtract
inc
inc
shrl
nop
stos
fbld
sar
or
test
xchg
inc
test
cmpsl
lcall
ret
dec
aas
mov
add
popf
push
jmp
cmp
addl
subl
lret
mov
sbb
xchg
test
daa
push
cmc
jns
mov
imul
mov
cmpsl
xchg
fildll
hlt
das
dec
rclb
sbb
aam
mov
movsb
pop
jl
enter
cmp
mov
enter
lret
test
push
sub
leave
mov
jle
mov
ja
out
pop
enter
andb
mov
int
mov
inc
mov
sbbl
or
loop
push
andb
in
lea
out
ds
sarl
push
xor
data16
xor
lret
or
dec
enter
inc
xchg
insl
je
xchg
in
inc
push
xchg
and
std
pop
mov
adc
push
stc
rcll
inc
and
sbb
jecxz
imul
inc
xlat
jne
fildl
add
pusha
sarl
cli
adc
and
push
mov
sbb
insb
cmp
adc
pop
pop
mov
out
repz
jne
push
jge
jns
mov
nop
fists
in
sub
daa
mov
hlt
inc
xchg
and
test
imul
mov
mov
cmc
pop
mov
movsb
test
addr16
lods
repnz
adc
in
and
fsubrl
mov
lods
xlat
dec
rcl
sub
shlb
adc
mov
xchg
cmpsl
xor
cmp
mov
xchg
jge
jmp
xlat
test
aaa
mov
or
dec
call
push
pushf
mov
add
rcll
js
xor
push
ja
std
frndint
outsl
sub
inc
mov
cmp
sbb
jge
add
xchg
mov
cmp
popa
int
fbld
lret
pushf
and
pop
call
sahf
fmul
pop
adc
adc
jecxz
lds
das
jno
repz
and
pop
ljmp
mov
mov
xchg
lcall
jl
in
and
leave
into
outsl
insl
xor
in
or
ret
cli
out
fmull
xchg
xor
fists
outsb
sbb
mov
and
mov
pop
inc
cld
push
mov
push
pusha
xor
arpl
dec
pusha
js
adc
in
in
cmp
xchg
ret
or
ja
jo
lock
and
gs
sbb
push
in
les
les
jecxz
add
xchg
or
clc
fdivl
std
push
cmp
sbb
int3
test
insl
mov
mov
rorb
ljmp
xor
hlt
sti
out
data16
int3
push
out
cmp
mov
jnp
xor
push
imul
xchg
push
fwait
mov
push
scas
imul
cmc
sbb
cmp
popf
daa
filds
and
je
imul
jg
mov
loop
dec
jae
dec
sahf
in
int
lret
negb
xchg
or
sbb
sub
ret
push
clc
cli
test
movsb
decb
fwait
movsl
imul
fiadds
lock
sbb
imul
mov
adc
scas
sbbb
mov
push
pop
aaa
dec
stos
ret
sub
inc
dec
mov
mov
lock
icebp
add
jb
testl
jbe
mov
mov
or
in
pop
jge
test
js
mov
cmp
lods
pop
inc
jmp
mov
mov
cmp
cli
out
repz
ds
dec
adc
push
pushw
shrb
nop
pop
cmp
mov
shrl
adc
xchg
and
pop
add
test
jl
inc
mov
or
sbb
jp
fstpl
ja
fwait
jmp
loopne
or
shl
sub
adc
nop
test
xlat
push
xchg
lahf
scas
in
jecxz
scas
jne
sub
mov
mov
adc
jge
fsubrs
xlat
and
jbe
xchg
or
and
bound
lret
push
popf
in
outsb
into
push
stos
dec
js
out
inc
test
int
adc
lret
xlat
push
dec
pop
pusha
shrl
dec
lods
xlat
in
dec
fs
mov
xor
jg
jmp
aaa
sti
test
push
xor
cmp
bnd
push
out
ret
js
pop
pop
pop
dec
xor
in
xchg
adc
fbld
loope
push
pop
das
adcb
mov
cld
in
mov
test
cmpb
insl
mov
mov
jb
bound
jo
dec
push
mov
test
jp
fsubrs
cmp
fs
dec
loope
jne
inc
inc
lret
sub
mov
cmp
iret
imul
fnstenv
sub
xchg
pop
dec
ljmp
pop
cli
add
adc
rorb
sbb
xor
into
add
lret
inc
pop
repz
lods
out
jle
mov
jb
lods
lcall
fcompl
inc
push
or
int3
sub
jge
dec
es
gs
mov
imul
inc
pop
and
mov
cli
jg
scas
lods
push
inc
or
lock
pop
lock
jl
inc
xchg
and
insl
mov
sbb
cs
adc
dec
mov
sbb
stc
inc
mov
arpl
jecxz
pop
pop
pop
fcoml
sahf
inc
dec
or
add
xchg
pushf
sahf
mov
outsl
cltd
call
aas
pop
in
mov
es
pop
icebp
fildll
mov
jns
sub
xor
aaa
mov
mov
lea
pusha
fildl
adc
int3
je
sbb
nop
and
cli
push
out
lret
pop
add
cltd
jns
jns
jae
and
sbb
add
xchg
jae
push
xor
push
sub
and
fwait
pop
outsl
sub
enter
mov
inc
js
sbb
out
jle
xchg
mov
inc
lret
ret
aam
in
dec
mov
sbb
sbb
lret
jecxz
cmp
jmp
scas
enter
mov
xchg
xor
andl
mov
inc
push
adc
mov
fsub
bound
movsl
push
and
add
jecxz
fisubrs
stos
movsl
push
cmpl
sahf
mov
lock
pushf
scas
mov
hlt
push
dec
pushf
ret
xchg
pop
addr16
popf
sub
test
pop
insb
mov
jae
popa
pushf
mov
mov
mov
jo
mov
sub
mov
popf
adc
push
pop
mov
inc
scas
outsl
outsl
push
inc
lret
xchg
sbb
and
mov
jne
sub
jp
cwtl
adc
lods
jne
arpl
fsub
push
stos
or
in
xor
mov
gs
popl
push
xchg
pop
popf
ret
bound
fcmovnu
sub
out
mov
ss
push
jo
xor
add
add
xor
int3
in
fldl
xor
sbb
xchg
xchg
push
ret
out
lahf
dec
add
cmpsb
aad
sbb
mov
cmp
adc
sbb
mov
popa
ja
xor
icebp
pop
loope
enter
jge
sahf
xorb
mov
ret
mov
mov
inc
aaa
sbb
dec
shl
mov
lods
dec
sub
clc
dec
lods
ds
xchg
call
es
out
in
mov
lds
sahf
test
das
and
lret
clc
out
jg
gs
cltd
xor
mov
jmp
sub
imul
or
rcll
lahf
jge
movl
js
lahf
mov
lock
rol
adc
test
xor
cld
cmpsl
cli
imul
ffreep
adc
loop
push
cmpsl
sbb
xchg
lret
iret
insl
popa
inc
sub
push
sbb
orb
pop
dec
test
lods
sub
stos
xchg
mov
xchg
leave
jg
lahf
xor
int
scas
cmp
aaa
jle
and
and
movsb
loop
sbbl
mov
dec
and
xchg
mov
or
jo
sub
aaa
xor
test
enter
jg
jns
mov
stos
incb
daa
push
aas
ds
push
into
iret
cmc
adc
hlt
cmp
pop
add
pop
add
jbe
mov
sub
xchg
push
adc
sti
add
lret
sub
pusha
shll
jno
std
outsb
add
aaa
cmp
inc
ds
mov
fwait
shll
mov
ret
pop
mov
mov
fistpl
sbb
outsl
pop
push
mov
and
je
sub
pusha
adc
xor
push
int
aaa
mov
lret
and
lods
mov
or
pop
inc
pop
fwait
add
push
call
mov
hlt
push
or
pop
xor
call
xor
inc
mov
sbb
test
xchg
and
out
pop
xchg
repz
jbe
dec
cmp
addr16
cmpsl
iret
push
outsb
or
inc
cld
daa
lds
xchg
mov
jle
inc
xor
mov
fsts
xchg
arpl
stos
pop
jecxz
xchg
ret
mov
dec
and
push
dec
and
loop
hlt
sbb
push
cmp
fstl
dec
push
or
jae
or
loopne
xor
call
addl
inc
xchg
push
lods
push
xchg
pop
loope
lret
or
mov
dec
insb
add
add
xchg
pop
rsm
stos
mov
mov
mov
mov
imul
fisubl
orb
cmpb
lock
mov
mov
rcrl
fwait
jp
mov
pop
jg
fcompl
xchg
paddsb
cmp
andl
xor
adc
std
cmp
fcoml
pop
sub
sub
or
mov
mov
cmp
sbb
das
lods
popa
sub
xchg
ret
addb
imull
inc
push
es
jae
lds
mov
leave
fistpl
lea
lret
mov
movsb
les
mov
and
cmp
shr
adc
cmp
xor
xchg
mov
roll
mov
pushf
push
xchg
inc
pop
sti
cmp
and
addb
sbb
into
shll
or
push
fsubr
jp
dec
mov
mov
mov
jae
lods
adc
xchg
into
ja
mov
subl
insl
repnz
mov
jo
dec
movzbl
pop
inc
outsb
cld
add
cmp
out
push
shr
xchg
xor
sub
mov
jmp
popa
pop
xlat
idivl
scas
push
mov
mov
adc
cwtl
push
mov
xor
xor
scas
gs
xlat
jo
int3
inc
std
cmp
push
ret
pushf
rorb
sbb
jae
lods
add
xchg
cltd
imul
push
lods
dec
and
popf
inc
jmp
jae
mov
xor
cwtl
push
sub
shl
in
outsb
stos
xchg
imul
pusha
push
add
movsb
mov
inc
jns
dec
cwtl
mov
daa
xchg
and
push
out
push
adc
mov
hlt
rolb
push
mov
loop
fcoms
jb
addb
jae
call
cld
mov
inc
clc
jnp
push
push
push
or
xchg
jae
int
inc
icebp
mov
lods
push
popf
lahf
and
sbb
mov
test
bound
imul
add
repz
sub
ljmp
ljmp
outsb
xchg
push
pop
dec
sti
sub
mov
or
imul
loope
das
add
rclb
pushf
pop
and
aam
pop
jecxz
push
dec
ret
js
sahf
mov
ss
push
or
test
dec
push
idivb
repnz
mov
lea
pop
xchg
pop
add
popf
aad
xor
inc
pop
jecxz
jge
in
mov
lret
aas
jmp
or
pop
add
inc
cmp
int3
inc
mov
inc
out
mov
les
push
cmpsl
test
test
and
ds
pushf
test
push
dec
aaa
addr16
mov
ja
aad
sarl
test
repz
icebp
sub
sub
cmp
mov
xor
jle
out
int3
rclb
cli
cmp
fnstsw
sbb
jae
ja
push
inc
je
in
xor
xor
lea
sbb
cmp
jbe
aam
jg
rcrb
js
mov
push
or
and
or
jl
ds
sub
pushl
lock
stc
mov
ud0
test
aam
test
xchg
fcoms
jno
cmpsb
imul
push
sbb
xor
bound
cltd
stos
xor
test
push
jge
sti
or
xor
fld
and
ja
cli
jg
mov
cltd
adc
jb
cmp
sahf
xchg
cmpsl
inc
test
and
sub
cmp
pop
inc
enter
dec
mov
insb
cmp
scas
or
push
fcom
jmp
imul
out
aas
mov
movsb
es
aam
loope
push
test
stc
mov
sub
mov
cltd
aad
cltd
daa
xlat
ja
jae
lcall
sar
sbb
mov
pop
mov
hlt
pop
fsubrs
sahf
mov
sub
int
dec
inc
addb
mov
stos
ret
push
out
loope
cmp
rclb
push
mov
frstor
push
ds
pop
mov
cmpsl
xchg
fnstenv
xorl
jge
clc
xchg
adc
cmp
es
std
pop
or
jp
xor
bound
cmp
jmp
movsl
add
rcrb
xlat
or
or
inc
mov
mov
aas
lods
pop
push
jnp
lock
cmpsl
or
test
inc
out
cmp
mov
hlt
mov
ja
std
or
push
movsb
cmc
insb
data16
xor
mov
jmp
fcmovb
addr16
mov
xchg
cmp
out
inc
subl
iret
rol
int3
ret
cmp
std
out
rorb
jg
repnz
jge
hlt
and
loop
mov
insl
add
gs
xchg
addb
mov
mov
adc
cld
hlt
in
std
punpckhbw
cmpl
lret
es
cmp
fs
divl
shlb
cwtl
mov
insl
loopne
int
sbb
rcll
jno
nop
mov
push
and
mov
mov
daa
stos
rcr
mov
mulb
rorl
sahf
int3
cmp
xchg
sub
fwait
sbb
sub
enter
jmp
mov
sub
popa
loop
rclb
and
inc
insl
xor
testb
jg
jecxz
jmp
pop
mov
push
repnz
in
lahf
leave
xor
xchg
je
fwait
pop
lret
movsl
xchg
push
or
lcall
lods
in
ja
cli
pop
notb
sub
mov
xlat
out
in
dec
mov
mov
push
and
push
xchg
clc
sub
push
das
in
scas
gs
data16
cmpsb
add
pop
in
int
push
popf
mov
mov
lcall
add
push
sarl
inc
pop
adc
test
les
sub
lcall
test
add
mov
lods
sbb
inc
jae
mov
inc
dec
mov
test
xchg
iret
test
decl
xchg
lret
in
fs
xor
cmp
add
test
pop
xchg
mov
sub
ret
cld
sub
ljmp
fsubrl
gs
or
adc
fnstenv
jge
fadds
dec
rolb
ds
mov
out
push
push
adc
je
adc
mov
cmp
and
neg
cmp
notb
adc
call
aas
sub
jp
fsubrp
mov
dec
ljmp
push
adc
addr16
xor
rorl
xchg
and
in
ficomps
insl
loopne
outsb
and
out
inc
cmpsl
enter
clc
mov
cli
push
sbb
push
add
push
and
dec
cmp
pop
jo
jne
push
or
repnz
inc
push
into
dec
icebp
push
mov
test
aam
xor
inc
inc
cltd
loopne
dec
pop
mov
fcoms
ja
adc
cltd
inc
inc
sub
mov
stos
mov
inc
add
xor
and
xor
icebp
fidivrl
jae
pop
movsb
mov
jg
imul
sbb
sbb
iret
stos
pop
ret
sbb
jnp
cld
and
xor
into
adc
test
mov
xor
jg
push
inc
adc
add
cs
xchg
int
or
sbbl
push
or
xchg
sbb
shlb
jbe
or
mov
cmp
insb
insl
mov
sbb
outsl
lods
std
pop
shlb
nop
inc
push
std
cmp
xchg
pop
mov
or
cwtl
inc
sbb
cmpl
xor
or
scas
test
fisttpll
pop
andb
mov
cmpsl
test
rorl
insl
xor
xchg
fs
and
pop
mov
mov
fwait
mov
popa
insl
and
lahf
mov
and
mov
push
push
lods
pop
addr16
lcall
int
push
xor
data16
or
push
dec
push
mov
lods
popf
out
lds
mov
shlb
add
andl
lahf
pusha
cmp
bound
sub
sar
lods
aaa
jp
in
pusha
mov
outsl
loopne
fwait
xchg
xchg
xchg
jno
or
xor
inc
cmp
pop
out
add
addr16
xchg
mov
sub
pop
sbb
adc
stos
test
scas
mov
inc
or
outsb
mov
mov
push
mov
or
push
pop
sub
jb
cmpsb
aas
and
xlat
push
sub
jne
mov
sbb
inc
mov
sub
rep
popa
mov
mulb
popa
push
mov
sbb
jge
xchg
mov
sbb
lahf
test
into
ds
jnp
int
and
add
mov
xor
jo
add
mov
and
push
insb
outsl
test
cmpsb
lret
xchg
fwait
in
out
mov
arpl
cs
xor
mov
ret
std
aaa
and
dec
movsl
data16
inc
mov
mov
leave
jle
jns
pop
call
in
popa
jns
insb
lods
mov
pop
jmp
leave
mov
cmpsl
in
add
mov
std
mov
enter
insl
or
dec
add
aaa
mov
icebp
add
sub
call
push
pop
adc
hlt
sub
repz
pop
in
andb
pop
jmp
std
cmc
xor
lahf
add
and
or
xor
mov
jecxz
xchg
xor
icebp
sbb
test
fildll
xchg
push
xchg
icebp
cmp
cmpsb
fs
pop
adc
push
push
in
in
ljmp
xchg
xchg
mov
mov
jne
stos
inc
rcr
imul
xchg
and
inc
pop
inc
push
mov
dec
scas
mov
push
mov
xor
sbb
imul
mov
pop
outsb
imul
mov
jae
sub
aaa
pop
jp
notb
dec
xorl
xor
test
stos
test
icebp
lcall
jnp
nop
in
xchg
jb
mov
mov
das
push
mov
out
sub
mov
or
divb
adc
pop
xchg
cwtl
sbb
idiv
addr16
pop
cmpl
call
mov
adc
jmp
xlat
adc
cmpsb
mov
dec
mov
xor
out
jnp
push
and
popf
dec
mov
stos
jl
xor
lcall
xor
and
and
int
adc
or
daa
adc
and
jne
stos
popf
and
imul
sbb
lods
mov
clc
pop
push
push
pop
bnd
inc
and
into
cmp
mov
or
jecxz
jo
sub
adc
add
mov
ficompl
out
sub
or
jl
mov
xchg
and
or
xor
xchg
xchg
in
mov
and
gs
mov
pop
push
arpl
out
sbbb
imul
dec
sti
xchg
outsb
cmp
adc
sub
sbbl
cmpsl
add
je
popf
push
test
int3
rcll
sarb
xlat
roll
popa
jb
jns
jl
lcall
std
xchg
ljmp
xchg
outsl
dec
lahf
daa
sub
mov
rolb
and
xchg
xor
lea
or
mov
les
push
and
sub
pop
fsubs
push
aaa
adc
arpl
clc
scas
out
cmp
popf
pop
ret
xchg
dec
push
cmp
js
cmp
lahf
mov
iret
inc
dec
out
orb
popw
pop
xchg
pop
je
sub
mov
iret
mov
jo
pop
cmp
add
mov
in
sub
in
jecxz
mov
icebp
fcomps
int3
imul
adc
repnz
dec
aaa
inc
das
cs
add
mov
xchg
dec
xlat
adc
rcll
jbe
add
cmpsb
xchg
add
roll
xchg
dec
add
dec
mov
jns
dec
out
dec
int
inc
pushl
cltd
xor
imul
jbe
dec
loop
pop
and
js
lret
ja
mov
mov
fisttps
subl
ss
sbb
iret
fstl
mov
cmp
movsl
and
pop
sar
cmp
popa
lret
sub
pop
mov
push
xorl
cmpsb
and
mov
jbe
test
repnz
cmp
fucomip
pop
test
loopne
mov
add
andb
fldenv
repnz
xor
adcl
jl
push
or
loope
sahf
fs
mov
aaa
push
loope
xchg
push
addr16
ljmp
incb
dec
mov
add
pop
push
mov
cmp
sar
jp
test
imul
jmp
and
inc
sub
and
shld
popa
cmp
stc
pop
scas
push
jge
ja
sbb
xchg
push
xchg
jge
pop
sbb
cwtl
pop
out
or
scas
stos
mov
flds
data16
lods
les
push
xchg
dec
mov
mov
loope
lock
movsb
pop
cltd
jo
xor
aaa
nopl
stos
dec
ss
mov
cli
das
pop
flds
cld
js
jmp
sbbb
inc
out
cmp
ret
idiv
sub
pop
ss
js
jge
push
add
add
add
and
lea
cmpsb
cmp
test
in
flds
jno
dec
out
jp
or
sub
mov
xor
aad
in
mov
lock
and
lods
pop
aam
jle
sbb
inc
cmp
ja
sti
push
mov
scas
je
adc
and
jnp
je
int3
mov
xchg
and
dec
mov
jle
cld
push
loopne,pt
pusha
div
imul
and
adcb
testb
dec
pop
sub
shlb
ffree
pop
pusha
sti
lea
push
sub
addl
push
add
dec
rorb
and
push
sahf
daa
dec
xchg
cmp
jnp
sti
xor
js
scas
jo
sub
call
add
mov
out
ficomps
cmp
mov
test
inc
scas
push
push
dec
lds
cmc
inc
add
and
mov
fcomps
push
das
addb
shll
mov
and
jnp
aas
roll
push
ss
rorb
cmc
push
xor
ljmp
mov
jge
and
and
mov
xor
in
jb
add
jg
add
mov
add
aas
call
jp
adc
jp
les
cmp
mov
sbb
sub
es
dec
mov
pushf
es
movsl
out
sub
loop
ds
mov
ficoms
sub
ffree
dec
and
jnp
popf
or
adc
loope
pop
cld
jle
in
mov
cmp
xchg
lcall
ljmp
hlt
xlat
cmp
xchg
call
aam
test
into
pop
pushf
insl
pop
and
mov
dec
push
jecxz
push
lcall
cmpsb
imul
mov
fwait
push
adc
push
sub
cmpsb
lret
sbb
push
xchg
or
sub
mov
loop
flds
clc
xor
xor
adc
pop
test
lcall
mov
cli
mov
xor
jbe
cmp
push
pushf
xchg
add
aad
xor
int3
or
lds
add
int
pop
stos
in
repnz
ja
pop
ffree
std
mov
or
adc
jecxz
cmpsl
out
sub
cli
jge
in
dec
les
or
out
inc
mov
sbb
ja
push
sbb
xor
jne
sti
dec
movnti
rcr
push
add
xor
mov
imul
jp
cmpsb
cmovle
inc
shrl
push
jbe
mov
mov
in
cmp
in
mov
jecxz
push
or
pop
and
xlat
mov
popl
out
scas
aam
mov
inc
enter
mov
and
dec
aas
adc
xorb
mov
mov
pop
leave
adc
sub
dec
int3
push
cmp
imul
mov
sub
push
movsl
dec
inc
push
lahf
dec
mov
lret
mov
add
dec
jno
popa
xor
and
pusha
pop
scas
push
rcll
add
jne
mov
push
xchg
mov
mov
and
sub
andl
inc
imul
jge
xor
lods
int
scas
push
lea
jp
test
push
push
xchg
and
jge
mov
out
enter
jl
das
mov
add
movsl
out
add
mov
xor
adc
aam
mov
sbb
jb
jmp
scas
les
cli
or
or
test
mov
push
pop
mov
push
nop
sbb
mov
scas
sbb
stc
ret
cmp
xor
add
movsb
ja
inc
stc
fisttps
aas
loop
xchg
lcall
lret
fistpll
or
cmp
pop
scas
lahf
sub
cmp
push
test
pop
mov
in
call
mov
mov
lret
aaa
je
mov
rol
enter
mov
out
ret
push
inc
test
inc
int
jo
xchg
mov
int
jge
rcrl
cmp
or
ja
jbe
pop
rcr
jl
rcll
jbe
mov
lea
int
add
popa
arpl
je
dec
dec
and
iret
sub
mov
jg
iret
out
outsb
push
xor
pop
cmp
sub
mov
sub
xor
lahf
out
push
incl
js
lods
aaa
xor
bound
jp
or
sub
shrb
lea
pop
subl
ja
test
sbb
hlt
jno
sub
daa
outsb
out
int3
sub
sarl
test
fcoms
xchg
cs
sub
jge,pt
shrl
sar
and
push
xchg
cmpsl
dec
fs
xor
or
nop
insl
inc
pop
cmp
or
cld
dec
adc
cmpsb
xlat
ja
pushf
into
movsl
fdivrs
adc
out
js
daa
ss
mov
dec
scas
leave
xchg
test
push
pop
xchg
imul
push
pop
iret
cmp
cmp
push
pop
adc
lods
cmp
stc
xchg
or
and
jbe
test
movsb
adc
xchg
xchg
lds
rolb
fidivrl
jb
mov
mov
jns
push
fistpl
cmp
das
mov
xor
test
push
fisttpll
aad
ja
jl
ds
clc
jmp
mov
and
or
scas
loope
jmp
ret
jle
xchg
lods
or
add
inc
xlat
js
popa
mov
repz
arpl
popf
add
mov
push
jmp
inc
rorb
sub
stc
cmpsb
mov
in
xchg
mov
popa
das
mov
mov
sahf
iret
icebp
and
or
shl
and
data16
shll
xor
shrb
xor
arpl
mov
movsl
mov
xlat
add
ds
and
in
sbb
inc
xor
jg
movsb
ret
shrl
xchg
push
shlb
and
pop
ret
ficoml
lods
aad
jae
in
and
dec
xchg
xor
sti
std
in
and
jge
bound
fidivrs
inc
ds
cmpsb
dec
pop
dec
mov
inc
mov
mov
aam
hlt
inc
fcom
xor
rclb
dec
and
fisttps
dec
aad
aam
aad
mov
sbb
pop
ljmp
mov
ja
out
call
mov
push
mov
jge
loop
sahf
xor
mov
sub
xchg
jnp
cld
dec
bnd
xor
cmp
inc
icebp
loop
daa
sbb
test
das
mov
aam
sbb
jmp
lds
gs
int3
inc
shll
in
push
xchg
lods
lahf
or
xor
aaa
and
andl
jnp
cmpl
pop
mov
sahf
pop
adc
mov
ljmp
pop
nop
or
and
dec
test
mov
mov
jg
scas
mov
and
pop
aaa
push
inc
sbb
aaa
cmpsb
fisttpll
iret
mov
mov
shrl
sub
jl
or
movsb
or
fisubs
xchg
ds
pop
aas
mov
pop
inc
mov
inc
sub
test
cmp
mov
push
push
jg
jns
insl
and
and
cmpsl
xor
rcr
into
cmpsl
rorl
and
mov
out
lret
or
call
call
xor
fwait
sub
rcl
jne
mov
dec
sub
add
popl
adc
mov
icebp
std
gs
jno
push
xchg
sbb
in
iret
inc
jmp
jl
mov
pop
xor
popl
sub
ljmp
stc
adc
dec
and
jl
ljmp
xchg
fmul
pop
test
fcomps
mov
sub
inc
mov
jge
inc
negb
gs
mov
inc
popf
fwait
mov
sbb
js
and
push
mov
aas
ljmp
call
fldt
icebp
movsl
mov
mov
loopne
movsl
hlt
pushf
xchg
adc
sub
jecxz
sub
cmp
sub
adc
push
hlt
fmull
aad
xchg
mov
adc
into
leave
cmp
pop
aas
pushf
ja
int3
xchg
sbb
xchg
repnz
testb
sbb
xchg
outsb
pop
cmp
or
xchg
loopne
insl
push
push
or
add
xor
rorl
mov
xor
gs
jne
fcomps
and
cmpsb
ja
sbb
or
fs
and
fistpll
ja
aad
xchg
mov
addr16
dec
push
mul
lea
cld
loopne
push
mov
cltd
or
mov
and
mov
std
jl
outsb
call
jle
and
sbb
mov
mov
mov
or
inc
arpl
jnp
pop
ja
sbb
push
push
outsl
js
adc
icebp
popf
jae
fidivl
mov
jmp
mov
aam
push
mov
adc
xchg
mov
mov
lock
inc
into
test
rcrl
cmpsb
iret
faddl
pusha
mov
inc
push
addb
sub
jecxz
inc
orl
jnp
dec
outsb
mov
jmp
mov
xor
push
lds
insb
pushf
xor
xor
mov
popa
jl
push
dec
fs
test
add
js
sub
adc
sub
push
icebp
cmpsb
add
mov
iret
ret
cmp
adc
adc
pop
fs
dec
mov
and
inc
fisubl
dec
ja
jmp
mov
mov
loop
pop
aam
xor
cmpsl
negl
lock
dec
xchg
popa
ror
fdivrl
sbb
or
dec
in
add
xchg
out
fdivp
cmpsl
inc
push
sbb
mov
pop
sub
lcall
inc
cltd
lea
jle
xor
lods
scas
jge
dec
push
cmp
inc
je
in
xor
xlat
cmpb
rorl
adc
or
ficomps
repz
or
jo
inc
ficoml
inc
idivb
lret
leave
and
sbb
lret
andb
shll
push
push
xchg
ljmp
loop
stos
and
jecxz
adc
mov
push
sub
call
push
mov
xchg
out
xchg
dec
and
mov
and
aas
out
test
ficoml
jmp
lods
dec
jge
scas
out
xchg
out
mov
into
aas
rclb
xor
and
jae
jle
sahf
xor
jne
icebp
into
les
insl
and
enter
mov
cld
mov
loopne
inc
insb
xchg
dec
cltd
and
xor
sub
stos
inc
orb
xor
xchg
lahf
enter
pop
bswap
mov
cmp
push
mov
enter
test
jl
test
inc
cli
mov
loope
int3
hlt
sbb
jne
leave
cmpsb
js
imul
pop
mov
adcb
repnz
movsl
dec
std
jno
scas
hlt
pop
cmp
mov
iret
ret
fisttps
xchg
cmpsl
shrl
add
in
add
pop
fcmovne
adc
pushf
icebp
int
fwait
mov
jb
sbb
filds
mov
push
shld
add
xor
fdiv
stos
pop
jge
xchg
fidivrs
aam
fcoms
sub
cmp
push
int3
pop
mov
out
xor
sbb
xchg
sub
bound
aad
mov
or
jbe
mov
jbe
out
scas
movsb
outsb
test
outsl
push
leave
and
fistpll
xor
cli
in
mov
ret
push
sbb
sub
and
pusha
sbb
decb
cmp
adc
mov
int3
ds
wrmsr
pop
mov
adc
push
dec
pop
leave
or
or
add
mov
cmc
pop
cmpsl
fsubr
mov
pop
xchg
test
outsb
mov
scas
sbb
pop
or
push
into
push
xor
divb
test
add
sbb
test
je
cwtl
cs
sbb
jg
jge
mov
jnp
setne
pop
loope
repz
and
movsl
and
add
inc
std
es
lods
push
out
jp
popf
cmp
fmul
push
sbb
sub
loope
adcl
sbb
sub
pushf
pop
jb
loopne
pop
scas
out
lds
fwait
sub
dec
es
nop
cmp
pop
lea
leave
add
mov
pusha
fcom
shr
cmp
dec
push
adc
xlat
movsb
pop
mov
lcall
jg
fstpt
js
aaa
hlt
fucomi
push
jmpw
fwait
cmpsb
pop
js
fcmove
push
jae
xor
or
in
bound
test
adc
sub
and
arpl
lods
sub
test
xor
in
in
fistl
pop
lcall
pop
stc
push
cmp
movsl
cmp
lods
rolb
push
movsb
lods
pop
aas
fimuls
sbb
push
jb
gs
icebp
test
in
fwait
dec
arpl
sbb
pop
ja
insb
mov
vshufps
jno
xchg
loopne
in
lds
fisttps
xchg
addr16
inc
mov
mov
mov
adc
cmpsb
fs
dec
add
sub
call
leave
adc
or
xor
into
inc
testl
dec
stos
in
adc
mov
xor
jle
repz
outsb
jns
dec
xchg
int3
lahf
mov
out
cs
xor
bound
loope
add
sbb
fsubp
mov
out
pusha
insl
loopne
jno
push
sbb
adc
push
test
jbe
clc
loope
cmp
mov
mov
jnp
add
adc
mov
inc
adc
clc
push
mov
testl
mov
inc
mov
cmpsb
push
add
mov
popf
nop
ret
mov
jecxz
xlat
js
test
mov
call
leave
lret
stos
xchg
pop
xchg
xor
xor
mov
mov
push
sub
push
sti
imul
dec
pop
mov
inc
sub
jge
add
cwtl
in
lock
inc
fisubrs
or
sub
mov
sub
call
shlb
jnp
add
popf
out
sbb
stc
into
xchg
xchg
movsb
bound
aas
test
mov
xor
xorl
or
es
jbe
inc
in
test
and
cmp
add
xlat
out
into
daa
lahf
dec
fisubrl
pop
repz
sahf
push
ret
ror
push
push
loop
inc
xchg
fcomps
shl
inc
repnz
das
fldenv
mov
in
sbb
and
push
fisubrs
pop
pop
les
movsb
inc
test
mov
mov
pop
fcomps
sub
lods
push
cli
nop
jb
insl
sbb
lods
sbbb
mov
jmp
test
mov
sub
jmp
mov
inc
cwtl
fdivs
aaa
hlt
arpl
jae
xchg
insl
js
sbb
mov
icebp
mov
mov
rclb
xchg
pop
mov
mov
ja
jbe
pushf
movsb
sbb
xor
rep
add
lock
outsl
sub
xor
out
add
dec
int3
mov
xor
movsb
lods
jg
dec
push
cmpsb
insl
mov
mov
pop
aaa
add
push
mov
sarb
xchg
test
ljmp
mov
aad
sub
movsl
daa
pop
add
or
xor
xor
xchg
movsl
pop
stos
sahf
dec
adc
jge
mov
sub
sub
xor
mov
mov
push
sub
xlat
imul
sub
or
jae
jbe
sbb
xor
xor
mov
mov
outsb
inc
in
negb
push
and
mov
mov
test
sbb
push
inc
adc
push
in
push
dec
loope
push
mov
xor
sub
mov
rolb
popf
and
mov
fnstsw
ljmp
psrlq
push
shl
adc
jnp
out
ds
jns
xor
push
jnp
cmp
adc
je
ljmp
mov
jp
mov
jns
mov
dec
pop
push
add
inc
xor
into
sahf
push
in
push
push
mov
in
jl
sbb
daa
push
insl
and
sub
jns
add
xor
cmp
and
dec
add
pop
inc
imul
scas
negb
loope
push
lahf
xor
dec
mov
jae
lcall
outsb
lahf
ret
lret
xor
adc
or
jbe
cmp
mov
inc
push
shl
and
mov
jle
shlb
sahf
sub
scas
xor
xlat
ret
dec
push
sub
subb
xor
add
cmpsl
js
les
in
cs
lret
add
test
lock
lahf
cwtl
out
jbe
inc
pop
sbb
sbb
test
testl
and
fs
push
test
fbld
lea
cmp
sbb
int3
adc
xchg
in
cmpsb
pop
clc
sub
fabs
ss
test
scas
push
push
jae
fcoml
pop
pusha
out
enter
fisubs
mov
gs
cmpsl
cmc
jbe
data16
add
xor
xor
rorl
int
scas
jecxz
jb
cmpsl
data16
xor
inc
mov
fdivs
add
add
and
dec
sub
scas
inc
fidivrl
inc
lods
test
mov
cmp
jp
mov
hlt
mov
and
nop
les
lds
mov
mov
mov
aad
mov
ja
test
sbb
mov
lret
and
or
aad
xchg
lods
imul
sub
cwtl
mov
std
pop
sbb
in
ss
dec
ss
and
pushf
addr16
sbb
cmp
test
inc
sbbb
sub
sbb
iret
lret
push
es
lahf
mov
shlb
dec
and
add
imul
mov
mov
pop
cmp
xchg
repz
xor
push
out
fucomp
mov
sub
adcb
call
and
and
loopne
enter
mov
mov
out
pushf
jg
gs
push
mov
cmp
push
punpckhbw
cmc
pop
ja
and
out
jno
inc
movsb
cmc
popf
xor
jo
loopne
nop
stc
add
aas
lahf
push
int3
push
addr16
lock
mov
add
rcll
cwtl
xor
dec
add
jns
add
sbb
ds
jne
lds
push
push
mov
add
adc
add
jecxz
jg
stc
dec
push
dec
and
stos
jns
or
je
or
inc
gs
daa
dec
mov
adc
arpl
ja
insl
call
mov
roll
test
aam
dec
adc
test
rol
push
inc
data16
orb
cwtl
aas
xor
jnp
shll
cmp
sub
pusha
fisttpll
jle
mov
out
std
cmp
lcall
jl
shlb
jecxz
pop
movsl
test
stos
push
add
push
fbstp
jae
or
aaa
push
imul
adc
bound
or
sti
dec
mov
daa
cmp
inc
repz
xor
les
lea
sbb
loop
aam
pop
dec
in
adc
cmp
inc
dec
adc
fsub
jnp
or
mov
mov
jae
aaa
scas
xchg
cmpsl
notb
rorl
rcrl
sarl
xlat
adc
pop
cmp
decl
fsubl
and
insl
rclb
dec
xchg
add
cmc
jp
popa
outsl
ficoms
mov
pushl
pop
imull
mov
ljmp
in
ret
inc
bnd
push
xchg
aam
or
pop
fwait
or
lret
sub
pop
loopne
fcmove
stos
lods
test
inc
fwait
add
ret
mov
cs
lret
data16
sub
sub
mov
dec
push
fildll
push
inc
pop
int3
xor
out
leave
push
mull
loop
lret
mov
stos
into
pushf
pop
ja
add
sub
lret
insl
adcl
addr16
bound
movsl
inc
aas
xor
sub
mov
arpl
mov
xor
mov
sub
or
fstpt
mov
xor
mov
cmp
push
pusha
jns
subl
js
and
lahf
icebp
movl
daa
add
stos
cld
data16
mov
mov
gs
stos
jbe
pop
outsl
sub
daa
cmpsb
pop
test
add
dec
sub
and
mov
cmp
and
fisubl
inc
fidivrs
xchg
adc
lcall
or
insb
fwait
into
mov
shl
in
sbb
fwait
movsl
push
rcrb
testl
ret
add
enter
sub
inc
out
cmp
inc
push
xchg
xchg
pop
fistl
add
arpl
daa
icebp
lret
sub
fcmove
fwait
mov
or
jp
insb
hlt
mov
adc
fdiv
divl
pop
lods
add
mov
push
sbb
cmp
xor
dec
and
aad
mov
xor
movsl
pop
push
call
es
out
or
test
sub
dec
test
fcompl
sbbl
out
mov
scas
nop
in
pop
dec
popf
mov
pushf
mov
imul
jo
pop
cli
adc
cli
jmp
mov
mov
dec
scas
aam
mov
jo
jmp
lahf
sub
ror
jno
push
jbe
iret
mov
xor
jp
lahf
pop
mov
mov
jne
add
test
mov
ds
lret
dec
insb
ss
mov
insb
in
pop
cmp
icebp
loopne
gs
cmp
cmpsb
mov
or
aad
sarl
getsec
jne
xchg
sbb
or
jbe
jno
push
xchg
push
not
int3
pop
fnstenv
insb
dec
leave
jle
mov
mov
cmp
dec
dec
xor
lahf
jmp
push
mov
mov
xchg
outsl
xchg
inc
lcall
test
mov
rcll
jl
repz
mov
pop
fisttpll
push
and
jno
lcall
loop
test
inc
daa
aaa
and
movl
roll
or
adc
and
gs
mov
sbb
popl
outsb
xchg
xchg
jns
and
icebp
cltd
loop
push
cmpsl
mov
xor
aas
pop
dec
enter
pop
ja
and
xor
mov
daa
inc
jo
or
adc
popf
out
xchg
jo
mov
mov
scas
roll
outsb
push
push
dec
jb
aaa
jns
mov
add
ja
add
cltd
mov
cmp
fists
aas
aad
pop
mov
adc
je
sub
out
mov
and
rorb
dec
sub
int
dec
in
pop
out
imul
loope
out
std
cmp
test
push
hlt
out
push
fsubs
lods
int3
stos
push
gs
insl
pusha
dec
cwtl
mov
xor
cmp
add
add
shlb
cmp
lea
aaa
movsl
fstl
mov
jnp
inc
pushf
test
in
jb
xor
jecxz
xor
push
push
pushf
or
pop
loope
jp
lods
adc
or
js
jno
jg
cmp
pop
push
sbb
pop
in
xchg
adc
pusha
push
les
shrl
and
fwait
mov
xchg
mov
push
dec
xchg
sub
or
xorb
es
orl
loope
dec
dec
sub
push
sarl
or
cmp
sbb
loop
movsb
jge
lods
jg
imul
lods
roll
scas
xorb
inc
mov
fstps
or
lret
loope
pop
pop
outsl
jb
fwait
test
test
cmp
pop
sub
fmull
xchg
and
sub
jbe
push
push
ljmp
mov
push
lahf
adc
inc
dec
jae
jo
gs
jg
inc
lock
mov
xor
mov
xor
fdivl
lahf
jmp
dec
xchg
pop
adc
loope
mov
fnstenv
ja
iret
and
jl
add
stos
mov
and
dec
add
lcall
adc
imul
aas
pop
push
imul
and
scas
xchg
mov
push
xor
mov
popa
jae
inc
adc
sub
cmp
scas
xor
sar
out
mull
mov
stos
sub
sarb
inc
mov
push
jge
sub
inc
fs
nop
or
sbb
lock
enter
addr16
jge
fsubrp
pop
jb
xchg
or
or
dec
xchg
je
enter
lods
insb
mov
adc
mov
add
mov
outsb
movsl
inc
or
hlt
arpl
mov
xor
std
cwtl
adc
or
cs
lret
push
sbb
jl
cmpsl
dec
cmp
cld
or
out
push
gs
push
lock
add
sub
dec
add
mov
xchg
shr
xor
adcl
cwtl
inc
shr
push
in
jl
test
cli
or
scas
sub
push
dec
mov
clc
mov
int3
lret
movsl
cmpb
les
cmp
jecxz
mov
push
lea
imul
cs
push
jl
cmp
inc
mov
or
pop
sbb
push
icebp
mov
outsl
xchg
fistps
sub
test
xor
stos
adc
leave
fstpl
into
in
mov
sbb
lret
mov
stos
popfw
ret
scas
inc
mov
arpl
cmp
and
sub
xchg
inc
bound
stos
scas
pop
pop
cmp
jecxz
test
leave
inc
icebp
mov
dec
pop
fcmovne
lret
push
aas
in
shl
mov
insb
das
mov
sub
fcoms
mov
pusha
xor
cmpsb
or
sarl
jle
ficoms
in
mov
sarb
mov
and
ficompl
sti
pop
in
sub
in
dec
ret
mov
adc
leave
ret
xchg
stos
mov
push
xchg
imul
aad
or
xlat
in
sbb
sbb
mov
jne
out
jbe
cmp
fistpll
and
aas
pop
ljmp
adc
out
sub
imul
adcb
and
ret
into
sti
test
out
dec
leave
add
or
int
sub
fbstp
fbstp
fsts
in
cmp
sbb
aam
inc
scas
pop
aaa
jecxz,pt
fldcw
test
jge
in
aam
pop
pop
and
jbe
jl
sbb
ret
pop
fsubs
and
jne
sarl
pop
cmp
mov
scas
mov
jp
xor
cmp
jmp
sbb
imul
bnd
loopne
lret
stos
ds
pop
pop
pop
add
mov
adc
mov
mov
dec
pop
addr16
cs
pop
andb
and
pop
addb
data16
mov
addl
dec
or
mov
mov
xchg
call
xchg
ljmp
xchg
ds
jb
sti
dec
mov
cpuid
dec
push
loopne
pop
adc
push
pop
orb
pop
jp
test
cltd
sbb
add
shll
mov
test
mov
mov
rolb
subb
jbe
adc
or
jo
mov
xor
into
sub
shll
imul
xor
popa
pop
orl
cli
mov
dec
mov
push
add
cmpsl
lds
fdiv
mov
aam
ffreep
dec
lods
sbbb
das
mov
push
loope
out
xor
in
or
sub
fstpl
jecxz
sbb
add
lahf
scas
ja
add
ljmp
clc
add
mov
adc
mov
xor
jge
xchg
aad
mov
mov
pusha
inc
stc
push
dec
sub
outsb
xor
pop
mov
pop
xchg
aaa
stc
inc
inc
add
sub
fistpl
pop
bound
subl
shrb
popa
mov
repz
or
icebp
push
xor
ja
and
adc
out
xor
xlat
mov
test
cmc
sbb
and
dec
inc
ds
mov
cld
lds
push
push
and
ss
jo
jnp
mov
push
mov
add
pop
subb
push
out
push
js
adc
sub
popf
mov
cmp
jecxz
mov
das
cli
jg
xor
scas
test
jne
ljmp
int
popa
in
cld
and
xlat
xlat
mov
inc
cmpsb
outsb
testl
dec
pop
call
sub
mov
lea
add
mov
xchg
rcrl
in
iret
jmp
xchg
jecxz
sbb
cld
inc
je
xor
idivl
xchg
sti
push
out
sbb
sarb
mov
mov
movsb
repz
idivl
pop
push
nop
sbb
mov
jnp
pop
dec
test
mov
and
icebp
xchg
sub
jo
dec
xchg
ret
and
iret
mov
jo,pn
fistl
repnz
sbb
dec
xchg
scas
jle
cmp
fdivl
xchg
lcall
inc
daa
fcomi
pop
outsb
shlb
in
cmp
jno
into
popa
sub
loopne
ret
call
cmc
mov
mov
movsb
adc
clc
aas
cmp
rcrb
movsb
mov
insl
lret
inc
jmp
xor
xchg
out
je
lret
mov
sbb
push
pop
sub
and
loop
push
sub
andb
xor
xor
out
mov
sarl
jp
mov
lds
les
add
int
test
dec
sbbb
mov
jae
xchg
inc
gs
inc
jmp
cwtl
mov
jno
or
xchg
dec
pop
jae
and
loope
cmp
jns
cmc
jl
pop
arpl
jmp
mov
push
inc
add
enter
cltd
pop
je
mov
xchg
pop
addb
mov
cmc
sbbl
jmp
cmp
mov
mov
mov
jns
fstps
sbb
popa
daa
mov
xchg
mov
sub
xor
cmc
mov
mov
jge
je
sbb
data16
lcall
fadd
imul
imul
xchg
sbb
jg
and
mov
or
and
vmwrite
pop
shll
xor
add
fwait
push
loop
enter
scas
sahf
jae
push
loop
sub
das
jmp
sbb
add
mov
sbb
in
and
fcoml
and
cmp
push
push
into
idiv
mov
sub
pop
and
in
sub
scas
out
mov
inc
add
mov
repnz
fsubl
dec
pop
mov
add
aaa
dec
and
mov
stc
xchg
pop
mov
mov
ret
mov
pusha
adc
int3
adc
je
cltd
inc
js
jbe
sub
xor
sub
pop
mov
or
push
enter
cmp
rclb
sub
outsb
outsl
inc
hlt
jo
push
mov
shrb
stos
popl
dec
aaa
call
sbb
out
inc
loop
mov
popf
pop
repz
out
fdivl
rcrb
out
sub
aas
cmpsb
lahf
daa
xor
pop
add
stos
shrl
loop
ret
dec
insl
adc
mov
push
pop
fwait
cwtl
lock
sub
sub
inc
mov
std
outsb
sbb
mull
xor
and
xlat
test
scas
jp
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
mov
jp
leave
cmp
cmp
out
hlt
adc
jg
scas
dec
int
sub
call
fs
ret
mov
arpl
jle
xchg
js
adc
inc
in
sbb
andl
sbb
das
movsb
inc
lods
dec
pop
jg
push
mov
outsl
push
lret
push
not
add
xor
imul
arpl
lods
in
xor
xchg
int
sbb
xchg
adc
and
adc
ds
cmp
inc
inc
and
sbb
push
push
push
mov
movsb
xchg
cmp
and
shl
cmp
push
dec
rorb
out
test
fists
sbbl
lds
push
jnp
mov
mov
jge
mov
aas
sub
cmp
mov
movsb
inc
mov
sub
jne
add
push
lea
mov
pop
movsl
push
loope
notb
into
cmp
in
mov
fldt
cld
clc
insb
shl
gs
xchg
out
fnstenv
rorl
fcoms
xchg
xor
push
pusha
and
sub
jmp
test
sub
mov
xchg
lods
mov
pushf
jae
mov
or
enter
pop
in
sbb
pop
sahf
mov
and
std
sub
sub
shlb
mov
jns
lcall
fsubrl
push
cmp
pop
dec
pop
fisttps
mov
xchg
mov
sub
xchg
insl
mov
push
ret
xor
mov
addr16
xlat
cmp
cmp
adc
iret
pop
roll
cmc
xor
pop
jmp
jne
lret
jg
cltd
test
ret
lods
cs
inc
int
movsl
xchg
fsubrp
mov
mov
mov
lds
xchg
mov
or
fwait
xor
add
jp
fdiv
sub
cmp
xchg
in
daa
in
jae
and
in
pop
out
into
mov
icebp
jmp
sbb
cmp
test
xchg
mov
cltd
jns
jp
inc
pop
mov
inc
inc
jbe
mov
mov
or
mov
xlat
jnp
rcrb
xchg
popa
push
ret
out
mov
mov
jge
scas
cmp
xor
pop
jnp
xchg
adcb
add
jp
xor
mov
outsb
mov
rcrb
arpl
mov
xorl
shl
test
sub
jb
stc
jmp
stos
cli
leave
scas
mov
enter
adc
or
sbb
push
test
imul
pop
xchg
dec
popf
and
insb
int3
adcb
inc
vmovddup
mov
pop
jmp
mov
jmp
std
lods
push
loope
out
pop
rorl
loop
imul
scas
bswap
lcall
adc
mov
add
cwtl
outsb
cmp
lds
sub
out
jno
jmp
inc
xchg
daa
mov
cwtl
xchg
fxch
test
xlat
aad
mov
jbe
sbb
mov
mov
shll
jnp
pop
jl
cs
pop
lock
cmp
inc
in
imul
sbb
adc
cmp
jb
into
cmpl
divl
xchg
push
fldenv
and
or
cld
mov
in
xchg
add
rol
int
dec
sahf
int3
test
xor
popa
and
dec
sarl
je
mov
shr
pop
lret
and
sti
and
test
aad
xlat
fldl
mov
mov
fdivrs
inc
aaa
push
fwait
mov
in
mov
jae
pop
pop
jl
jmp
mov
mov
lock
mov
dec
clc
out
addl
test
dec
xchg
cmpsl
xchg
rcrb
mulb
sub
xor
ss
or
and
cs
repnz
adc
call
mov
test
or
insl
lds
xchg
jg
or
mov
data16
in
or
add
bound
push
popf
nop
movb
jbe
sahf
jmp
mov
mov
xor
hlt
roll
push
aad
pop
fdivl
xchg
out
fcoms
inc
je
mov
xchg
and
or
xor
xorl
sbb
push
cli
sub
mov
es
sti
popf
mov
fstpt
xchg
jb
mov
jae
or
sub
test
xor
in
roll
cmp
jno
imul
xchg
sub
loop
mov
jo
mov
out
mov
scas
xchg
addl
idiv
fsubl
popf
cmpsb
mov
pop
jle
fcompl
shll
popl
jo
mov
int3
sub
pop
mov
push
add
outsb
and
inc
jge
sbb
dec
or
cmp
push
xor
lret
out
jp
dec
loope
lcall
dec
push
test
sti
lcall
jg
pop
lcall
adc
mov
sub
jns
mov
xchg
xchg
es
dec
ret
js
testb
inc
ficoms
push
aaa
jns
inc
pop
mov
sbb
xchg
xlat
or
xor
xchg
pop
adc
jge
add
xor
sub
movsb
mov
fdivs
fs
scas
hlt
or
adc
cmp
inc
pop
ret
xchg
addr16
xor
pop
jge
mov
or
fs
mov
xchg
leave
push
sahf
mov
xor
push
scas
decb
pop
out
xor
test
sahf
es
shrb
sbb
mov
filds
xchg
pusha
je
mov
mov
cli
test
out
adc
mov
negb
push
gs
add
cli
inc
inc
inc
lods
leave
mov
mov
push
add
dec
dec
enter
adc
adc
pop
xchg
std
xchg
sbb
mov
sbb
sahf
adc
add
les
xchg
jmp
shr
fldenv
xor
dec
es
cmp
stos
fs
je
call
aaa
cmp
pop
pop
mov
sub
out
push
or
and
test
loope
das
pop
nop
test
in
jb
mov
mov
aaa
cli
cmp
leave
xchg
mov
dec
popf
insl
push
push
pop
dec
and
pop
in
jmp
aam
je
push
and
cmpl
pop
icebp
nop
call
outsb
sbb
xchg
test
inc
pop
scas
pop
imul
mov
push
jp
and
je
xlat
rol
sahf
dec
hlt
sub
pop
ftst
jle
add
lds
popf
in
xchg
lods
out
popf
in
fs
pop
pop
xchg
icebp
lods
xor
mov
push
push
mov
testl
push
and
push
sbb
push
and
in
jl
mov
lods
jo
pop
push
or
and
mov
arpl
xchg
rcrl
mov
push
stos
inc
bound
loope,pt
fsubrl
outsl
fstps
in
rolb
or
inc
dec
jecxz
jo
pushf
add
mov
xor
in
inc
dec
fisubrs
push
pushf
push
scas
mov
in
ja
push
cmpsl
incb
or
repz
xor
cmp
sbb
aad
stc
test
ljmp
xlat
jb
enter
add
sub
js
sbb
or
xchg
mov
push
stos
sub
mov
pop
jg
lret
je
or
jp
push
jmp
push
sub
std
out
lds
insl
sbb
movsb
movsb
ss
jae
push
mov
adc
dec
sti
mov
sti
push
dec
lds
mov
mov
sub
ret
fimuls
dec
dec
adc
dec
fbld
mov
adc
cmpsb
xchg
or
xor
insl
mov
jg
mov
inc
stos
push
sti
push
pop
pusha
mov
loop
cmc
in
add
xor
push
jg
push
mov
or
outsb
ret
dec
and
std
and
mov
jmp
jo
push
aaa
mov
jno
pop
cli
xchg
mov
inc
dec
sbb
mov
inc
into
gs
push
scas
ret
xchg
das
xchg
je
fwait
out
mov
sub
dec
fwait
cs
rcrb
jp
xchg
nop
rolb
push
mov
out
movsl
shl
ljmp
mov
and
jl
mov
out
in
or
repnz
xor
fmul
lock
loopne
dec
arpl
cld
pop
sub
iret
and
or
dec
dec
or
stc
std
stos
mov
mull
aam
loope
jae
push
xchg
lret
xchg
cmp
jns
add
adc
mov
call
ret
sub
popa
movsl
aad
loope
arpl
mov
popf
icebp
xchg
adc
cs
data16
sbb
clc
fisubl
imul
push
out
mov
push
loope
mov
fisttpl
inc
sub
and
xorl
jp
mov
ret
xlat
jb
in
sub
push
sub
arpl
nop
nop
jg
shrd
jp
push
cmc
mov
add
mov
sub
add
mov
inc
clc
mov
mov
les
xchg
push
lods
daa
lea
inc
mov
xor
cmp
clc
xchg
lods
lcall
hlt
xor
lods
in
dec
jge
cmc
scas
mov
fstps
mov
and
decl
adc
dec
inc
or
fsubr
andl
mov
and
aad
xchg
mov
dec
push
hlt
test
daa
and
lods
std
adcl
cmp
cmc
sub
ljmp
push
popa
stc
xor
add
repnz
or
cmpb
aad
vphaddubd
ss
sub
jle
into
jo
mov
jl
lcall
fsubrs
into
sbb
mov
inc
dec
rcl
xchg
insl
jmp
cmpsl
test
push
movaps
imul
lret
mov
fcoms
cmp
xchg
dec
pop
sbb
sub
or
fldcw
mov
inc
stc
shlb
scas
mov
mov
add
mov
lret
std
jge
dec
in
fisttpll
mov
add
pop
cmp
inc
and
repnz
cmp
sub
rcl
mov
sbb
xor
jbe
mov
sbbb
jo
jmp
and
scas
sbb
sbb
jne
das
mov
inc
xchg
popf
mov
cltd
inc
jae
movb
sbbl
xor
subl
mov
push
and
cmp
fs
cmp
dec
add
leave
test
mov
js
nop
ret
leave
lahf
sbb
mov
iret
and
adc
jl
add
cmp
in
cs
and
lods
push
pop
mov
xor
sub
insb
arpl
push
ljmp
xor
jl
subb
lock
add
lret
mov
dec
fsubl
loop
xchg
and
bound
dec
push
addr16
mov
inc
sbb
cmp
jno
pop
fstpl
sbb
xchg
add
jae
pop
mov
out
adc
or
and
sarb
push
sbb
fdivp
daa
push
jg
out
dec
mov
popa
sub
pop
out
cmpsb
je
cwtl
or
insl
cli
in
dec
xor
dec
iret
fwait
xlat
dec
jp
imul
or
inc
int3
pop
pop
ljmp
lds
jnp
lds
mov
add
mov
in
or
xchg
inc
xchg
pop
ds
insb
push
cs
mov
pop
jae
fcompl
inc
mov
push
data16
jnp
pop
pop
lds
ja
mov
stos
or
cmp
cltd
pop
popf
or
gs
icebp
xchg
xlat
leave
cmpsl
pop
icebp
rcrl
int
or
movb
pop
int3
adc
sub
mov
cmp
insl
xchg
pop
mov
jge
ja
mov
repz
sub
lcall
jns
and
test
mov
xor
fwait
xor
pop
xor
and
arpl
insb
scas
insb
or
cmp
call
shlb
test
cs
test
imul
pop
orl
idiv
sti
movsl
xchg
sti
or
sub
sbb
or
xor
in
hlt
jg
ret
xor
ja
cmp
sub
adc
clc
bound
cmp
push
pop
pop
iret
shrb
repz
gs
push
cli
leave
add
stos
ds
sub
rol
jl
iret
aas
cmpsl
adc
or
sar
popa
andb
dec
lods
cmpsb
dec
into
fcmove
leave
call
test
mov
fisttps
push
fsubl
cmpsl
or
fisttps
cmp
nop
into
sub
shlb
xchg
sbb
or
call
sbb
loope
jne
sub
xchg
xchg
pop
test
adc
mov
out
data16
shll
aas
vmptrld
mov
rorl
out
mov
cld
stos
lahf
ja
push
scas
mov
fstl
movsb
mov
mov
push
jns
adc
cmpsb
incb
add
push
push
sub
movsb
outsb
int
fs
pop
mov
icebp
es
sbb
call
cmp
ret
ds
sub
mov
sub
aas
add
xchg
push
lock
cmp
incb
or
jo
dec
std
sbb
test
in
push
and
jbe
mov
scas
dec
mov
mov
sahf
push
inc
and
sub
pop
in
mov
repz
and
jp
fidivl
mov
xchg
or
test
jecxz
pop
jne
and
int3
pop
loopne
shll
loope
sbb
inc
ds
arpl
add
sbb
out
lcall
sti
push
push
subb
jp
mov
xchg
jmp
and
icebp
lret
adc
xchg
ds
add
lcall
jbe
mov
lock
inc
xlat
sbb
in
add
or
lcall
inc
int
add
pop
mov
lods
in
xor
pop
shl
rorl
fcoms
nop
mov
insb
pop
out
add
fabs
fisubrs
lea
pop
movsb
sarl
and
enter
push
aaa
pop
and
mov
in
and
cmp
fisubrs
testb
bound
ret
jmp
mov
leave
adc
dec
aad
js
insb
lods
stos
ret
shlb
mov
pop
pop
rol
jmp
outsl
mov
mov
xchg
das
mov
inc
out
ljmp
hlt
das
loopne
aad
sbb
lods
popa
sbb
mov
ljmp
sub
or
dec
enter
mov
rol
decb
mov
push
cmp
mov
loop
inc
iret
gs
outsb
xlat
inc
xchg
or
push
test
jg
imul
push
imul
mull
iret
mov
mov
xchg
fstps
cmp
es
push
xor
mov
pusha
sarl
out
lea
js
vorpd
pop
stos
jecxz
cmp
cld
inc
or
xor
out
and
pop
icebp
xchg
pop
jns
cmpxchg
xchg
fldcw
push
sub
in
sbb
xor
xlat
in
pop
adc
sti
sbbb
adc
push
fs
in
movsl
sub
or
fsub
jle
cmpsl
mov
xchg
mov
xor
cld
mov
aaa
mov
pop
adc
and
inc
add
enterw
cmpsb
incl
stos
movsb
idivb
cs
sbb
add
cmp
into
xorb
pop
jnp
add
jnp
jb
sarb
maskmovq
mull
cs
xchg
icebp
pusha
or
jnp
sub
sbbl
sub
shrl
jmp
roll
dec
adc
je
popa
stos
lea
inc
pop
pop
xchg
sub
imul
sub
mov
jl
xchg
ja
xor
inc
inc
fadds
jnp
outsb
and
xchg
loope,pn
and
xchg
mov
xor
gs
pop
sahf
mov
test
decb
loope
xor
test
movsl
daa
shl
pop
sahf
lds
cmpsb
scas
inc
sahf
jecxz
cmp
movsb
aam
lret
pop
jne
xor
icebp
jb
mov
movsb
or
sbb
xor
scas
roll
inc
fidivrl
arpl
aam
add
jne
adc
int3
movsb
popf
imul
mov
inc
pop
push
add
and
in
inc
adc
mov
out
fninit
dec
out
js
xchg
sub
fdivl
push
jno
lret
out
push
and
hlt
pop
arpl
jecxz
dec
pop
in
pop
push
push
and
pop
loopne
popa
dec
push
loopne
jp
adc
ljmp
mov
pop
rcrb
fwait
hlt
xlat
xchg
loopne
mov
push
add
push
imul
mov
movsl
xchg
out
out
and
dec
mov
jnp
movsb
loop
pop
cwtl
aam
sbb
dec
clc
cmp
xchg
or
stc
pop
mov
dec
dec
dec
mov
sub
inc
sub
cs
or
xlat
xchg
test
dec
adc
inc
cltd
fistl
xor
and
sbb
in
cmc
dec
xchg
loope
dec
jg
lahf
mov
test
mov
push
cltd
popa
scas
cmpsb
int3
rcrl
jl
out
cmpsl
inc
fs
clc
fidivs
out
ficompl
in
ds
movsl
aas
adc
add
in
cld
je
repnz
out
enter
pop
dec
mov
push
and
jbe
pop
push
lahf
cmp
fsubl
imul
outsb
cmp
ljmp
lds
jmp
dec
adc
push
lea
push
movsl
sbb
jne
mov
imul
xchg
lea
std
jae
push
and
jmp
cwtl
loop
ds
fistpll
or
ss
inc
dec
out
ret
ficoml
sbb
inc
sbb
in
mov
pop
jle
jg
mov
int3
inc
ja
repz
test
ret
fwait
mov
les
loope
nop
pop
and
adc
jb
stos
mov
push
xorb
sbb
xchg
faddl
jge
pop
lods
xchg
cmp
imul
sbb
jae
cltd
fsubr
push
sub
scas
rcll
int
xor
jae
xor
daa
jp
cmp
jp
add
and
stc
movsl
push
mov
movsb
pushl
cmc
inc
push
aas
inc
push
stc
ret
xchg
mov
push
sbbl
outsl
add
mov
fdivrl
inc
out
mov
xor
cld
mov
les
fdivs
push
or
ficoml
into
mov
add
pop
cltd
repnz
add
insb
jb
nop
mov
lahf
ffree
mov
sub
mov
in
dec
data16
outsl
xchg
adc
rcr
cli
mov
je
sbb
xor
sbb
cmp
push
pop
xchg
jle
xchg
inc
scas
sbb
cltd
loope
mov
add
sub
inc
or
test
loope
dec
sub
shlb
push
in
sbb
icebp
movb
inc
ss
addr16
mov
in
aam
xlat
or
sbb
icebp
add
lcall
sub
inc
in
icebp
jnp
pop
loop
mov
pushf
fiadds
das
jle
lahf
addr16
pop
arpl
cs
ds
inc
inc
mov
cltd
pop
iret
adc
scas
mov
scas
jo
pop
int3
lcall
sbb
jmp
loope
mov
sbb
cmp
lds
adc
cs
and
in
and
dec
push
sub
push
out
pop
add
xor
outsb
test
mov
cli
cmc
and
pop
push
xchg
cli
sbb
pop
int3
push
mov
cwtl
test
cmc
jo
push
jl
imul
inc
xor
and
sti
es
fsubrs
jp
mov
adc
sub
cltd
jmp
jb
lret
pop
jl
pop
cs
loop
scas
sti
fisttpl
mov
adc
hlt
fst
adc
insl
dec
scas
ds
rorl
imulb
push
cld
addr16
repz
in
gs
scas
aas
mov
and
flds
or
nop
cmp
jbe
stos
clc
out
imul
into
xor
jecxz
les
iret
dec
cld
or
test
sub
adc
mov
add
es
int3
dec
cs
ss
ljmp
add
dec
movsl
rorl
test
dec
repz
insb
jnp
jne
repz
cmp
jmp
cli
or
xlat
movl
mov
push
jle
in
mov
xchg
ss
out
sbb
lret
mov
xchg
pop
add
ja
pop
mov
push
pop
jl
push
cwtl
rorl
mov
in
mov
es
aad
add
aad
mov
test
xlat
adc
addr16
data16
lcall
stos
cld
shll
xor
in
outsl
pop
testb
out
mov
xchg
add
pop
mov
imul
ds
mov
sbb
adc
repz
sbb
mov
sub
xchg
cltd
or
fstp
sbb
add
mov
jl
inc
repnz
push
dec
and
mov
pop
shll
pop
and
addr16
popa
addr16
adc
fldenv
xor
test
mov
pop
sub
or
lods
push
mov
sbb
cmp
sti
xor
cmp
jmp
popa
dec
lds
clc
pop
pushf
adc
adc
mov
jl
mov
adc
add
cltd
mov
dec
shrb
push
and
data16
mov
int3
imul
int
dec
stos
adc
pusha
pop
into
mov
rolb
mov
aas
insb
sbbl
push
into
test
es
xor
and
ret
xlat
imull
mov
out
mov
shl
aam
mov
in
into
sbb
inc
shrb
or
mov
or
movsl
daa
pop
lds
push
lea
push
jp
mov
and
inc
fists
test
inc
out
je
jle
imul
dec
das
in
push
cmp
xchg
cmc
mov
out
mov
xor
inc
fsubrp
adc
and
jbe
xchg
mov
loopne
mov
mov
shrl
outsl
mov
nop
push
pop
leave
push
mov
lahf
popf
dec
adc
inc
sbb
pop
or
loopne
push
push
jp
insl
cltd
xchg
adc
push
push
jne
mov
push
dec
mov
jns
pop
mov
and
jge
xchg
mov
xor
inc
iret
arpl
stos
push
pushf
dec
cmpsb
hlt
sahf
xchg
int3
and
jae
out
pusha
pop
push
data16
sbb
stos
loopne
xchg
cmp
and
movsb
ds
sub
xchg
cs
das
pop
or
dec
inc
jae
je
fsubp
jg
add
lods
adc
sti
mov
push
pop
jbe
repz
cmp
dec
dec
daa
adc
out
imul
pushf
cmp
sbb
jno
xchg
ljmp
and
sub
mov
rolb
dec
jp
push
xchg
mov
cmpsl
aaa
sarb
sarb
pusha
sbb
mov
insb
or
outsl
cmp
into
inc
aam
sub
dec
xchg
jg
push
sbb
ret
test
mov
fucomp
mov
mov
dec
aas
divl
lds
fcmovnb
mov
inc
xor
bnd
fucomip
sub
xor
icebp
add
jle
push
jo
and
cmp
mov
xchg
inc
ss
addr16
or
jae
dec
cld
outsl
and
lds
push
xchg
insb
adc
pop
cmp
repnz
mov
inc
pop
jbe
mov
icebp
ror
adc
bound
add
xor
sub
jmp
fstpl
fisttps
push
rcrl
ficompl
test
cmp
stos
test
data16
push
sub
push
lds
scas
mov
pop
popf
out
and
xchg
out
or
mov
test
outsl
mov
sub
scas
cs
cs
es
push
lods
mov
xchg
fiaddl
fs
sub
inc
adc
ror
aam
insl
push
fimuls
adc
xor
mov
jnp
adc
sbb
push
xchg
adc
faddl
dec
imul
xor
or
in
mov
dec
add
or
xchg
faddl
add
cmpsb
hlt
popa
xchg
push
inc
dec
sti
jns
add
and
pushf
xchg
decb
iret
jno
push
shlb
aad
sti
test
xchg
or
inc
adc
shlb
sbb
in
and
cli
data16
mov
lahf
and
xor
fisttpll
mov
jo
jnp
and
popa
mov
mov
xor
aas
push
bound
sub
in
shl
cltd
xlat
popa
jns
aam
nop
sahf
push
inc
jp
leave
jne
fsubrl
cmp
push
pop
cmp
loopne
push
jae
es
ljmp
pop
sub
or
adcb
jno
cmp
xor
fistl
pushf
inc
scas
lret
push
in
shll
jmp
divb
inc
jae
ss
cmp
sti
hlt
and
in
mov
push
mov
icebp
push
pop
pusha
cmpsl
int
or
pop
and
insb
add
ret
lock
adc
adc
pop
stc
andl
std
adc
inc
fsubr
sbb
daa
sti
jne
rorl
mov
jo
add
outsb
push
and
or
jo
hlt
add
call
lret
inc
dec
dec
addr16
aaa
rcll
mov
cmp
mov
lds
and
push
mov
icebp
or
jecxz
dec
and
repz
mov
jmp
dec
pushf
int
jecxz
add
sbb
xchg
sbb
ret
jne
mov
jecxz
mov
cwtl
call
push
adc
push
push
stos
add
fdivrs
sbb
loopne
pop
enter
call
repz
rep
dec
or
popa
imul
repz
scas
mov
out
sub
out
mov
or
xor
popa
popf
pop
xchg
push
mov
fadd
xchg
mov
leave
xchg
test
jp
mov
call
ret
fcmove
clc
cmp
cli
mov
xchg
pop
repnz
addr16
add
lods
test
int3
das
mov
int
xchg
or
dec
outsb
mov
sbb
mov
adc
sbb
sub
shrl
jae
mov
pushf
pop
ret
out
out
cwtl
pop
in
stc
dec
push
push
leave
push
push
jae
sbb
pop
js
or
sbb
pop
jle
pop
xchg
jno
ljmp
cli
and
dec
add
hlt
andb
ret
fwait
leave
jnp
fstpl
outsb
std
sub
mov
out
and
das
dec
subb
push
mov
adc
xor
rcll
mov
test
inc
mov
daa
mov
inc
stos
inc
adcl
cwtl
push
out
xchg
push
out
fs
cld
fiadds
adcb
lahf
sub
scas
stc
xchg
add
or
std
hlt
mov
jbe
cmp
xchg
subb
das
movsl
mov
fistpll
fmul
pop
pop
mov
jmp
lret
ret
sahf
pop
cmp
push
iret
negl
outsb
adc
or
dec
or
ror
jecxz
pop
adc
fsub
jle
out
mov
xor
jno
ficoms
sbb
ds
adc
xlat
or
jne
xchg
push
add
push
push
testb
dec
in
sub
sub
mov
jb
sbb
xchg
or
loop
popf
icebp
mul
inc
popf
and
out
fdivr
push
fistl
stc
imul
rol
repz
push
repnz
mov
sub
xor
sub
sub
lods
xchg
sub
xchg
dec
fbld
xchg
scas
cmp
stc
xchg
jmp
iret
int3
sub
imul
xchg
lds
add
xlat
dec
mov
mov
je
cwtl
repnz
es
arpl
js
cmc
fs
xor
leave
and
pop
xchg
divb
shll
icebp
adc
mov
mov
cmp
mov
mov
loope
aam
mov
arpl
and
cltd
leave
sub
aam
ds
jnp
fldl
out
cmp
in
inc
shll
adc
xlat
daa
leave
stos
adc
xor
psubw
popl
stos
or
dec
sarb
cwtl
sub
xor
inc
sarl
push
loop
lock
cmp
and
cmp
mov
adc
lea
into
mov
adc
inc
and
sub
or
aas
sti
xor
add
xchg
loopne
jle
in
repnz
xchg
imull
stos
out
push
mov
jl
call
pusha
or
sbb
js
xchg
movsb
orl
outsb
adcb
lret
aas
inc
cltd
jle
xor
and
ret
test
dec
cmp
dec
dec
dec
add
int
cld
fwait
or
into
ljmp
adc
xchg
fisubrs
out
fcmovb
sub
or
popa
testb
mov
jb
pop
dec
xor
call
cmpsb
pop
je
loop
imul
ja
jle
mov
fadd
pusha
sub
repz
leave
lock
ja
xchg
push
push
imul
adc
jecxz
mov
or
mov
ds
or
leave
test
mov
in
push
mov
adc
orl
sbb
mov
xor
cmp
call
mov
repnz
mov
sbbb
inc
sub
push
lds
int3
mov
sub
push
add
adcb
cli
add
sti
mov
mov
jne
cmp
add
add
sbb
jp
xor
shrl
in
jg
sbb
lods
pop
loopne
out
dec
mov
cmc
add
mov
loopne
test
int
xchg
or
mov
jae
jne
test
sahf
mov
dec
xchg
add
loop
mov
je
ljmp
pushf
aam
rolb
imul
les
lret
pusha
cmpsb
sti
pop
mov
sbbb
aaa
cmp
mov
jg
xchg
daa
shll
push
shll
in
je
sub
inc
cs
push
andl
push
mov
popa
inc
xchg
es
ret
adc
dec
mov
pop
lods
pop
add
outsb
xchg
pop
lods
in
in
mov
add
incl
aaa
pop
dec
cmp
jnp
xchg
mov
add
dec
xchg
add
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
gs
insl
movb
jp
add
cmp
add
jg
out
jno
jae
shr
xchg
mov
enter
mov
icebp
outsl
data16
in
iret
mov
jnp
flds
inc
xchg
stos
push
lods
push
pop
sub
aaa
out
andb
out
lahf
inc
xchg
pop
cmpb
sbb
xor
stos
xor
dec
mov
or
out
int3
clc
cltd
adc
icebp
inc
shlb
fdivrl
pop
cmp
dec
push
hlt
scas
jns
add
imul
mov
ffreep
fwait
icebp
xchg
pop
scas
jne
jns
and
mov
test
mov
jbe
test
adc
push
call
jmp
movsl
mov
lds
mov
jbe
int
sub
xchg
gs
and
test
xorb
inc
dec
rcrb
mov
loop
out
and
jge
adc
cld
out
xchg
inc
xchg
sahf
xchg
and
orl
pop
jbe
test
test
jle
lret
xchg
adc
pop
daa
jmp
fdivs
stos
xor
sub
aas
repz
sbb
popw
test
cmp
sahf
clc
pop
xor
cmp
mov
push
push
mul
lahf
out
les
lret
inc
imul
pop
lret
xor
ret
bound
push
out
aaa
jbe
or
push
jl
add
lods
mov
mov
jecxz
lret
push
mov
cwtl
jmp
inc
push
inc
mov
in
pop
je
pop
add
mov
fcoml
sub
add
cmp
push
push
mov
and
pop
inc
jae
popa
mov
jns
cmpsb
mov
mov
cltd
jge
mov
aas
push
fwait
test
mov
fld
adc
push
push
mov
test
pop
fs
jae
add
xor
pop
repz
stos
outsl
mov
inc
iret
xchg
fnstenv
flds
xchg
mov
lgs
test
movsl
xor
push
push
subb
jnp
inc
mov
push
int3
insl
les
fdivrl
mov
inc
stos
jecxz
sbb
testb
dec
dec
sub
mov
insl
mov
test
imul
xlat
sub
mov
pop
inc
dec
shrl
sbb
fmull
adc
pop
jo
mov
cmp
bound
adc
femms
jne
dec
fnstenv
in
dec
push
pop
mov
in
repnz
imul
mov
incb
imul
icebp
inc
or
in
push
add
push
nop
pop
enter
adc
ret
mov
adc
jmp
adc
pop
decl
adc
sti
pop
dec
add
jmp
aaa
addr16
int
roll
int3
je
in
cmp
sbbl
mov
mov
stc
das
push
or
push
mov
repz
into
shrl
js
xchg
jns
dec
icebp
cwtl
je
fisubs
cmp
xchg
xchg
push
mov
push
movsb
daa
gs
or
push
loopne
sbb
pop
add
cmp
cmc
mov
jl
ss
enter
and
in
lock
fdiv
cs
cmpsl
je
xchg
scas
mov
aam
scas
push
mov
push
fcoml
adc
jo
xchg
pusha
cmp
or
data16
sub
add
mov
inc
xlat
ja
jg
mov
lods
mov
cmp
les
shl
enter
push
mov
lods
ret
mov
fs
orb
repz
aas
xchg
rorb
sbb
push
add
out
fstl
loop
lcall
repnz
cltd
mov
add
gs
mov
dec
int
loope
popa
cltd
mov
stc
das
mov
push
dec
sbb
pop
xchg
js
or
dec
shlb
xlat
mov
dec
stos
sub
dec
sub
test
jo
lock
sahf
in
pusha
pusha
int
daa
clc
add
mov
lcall
sub
xor
xlat
xor
lret
imul
xor
sbb
incb
lds
jle
cmp
adc
push
push
test
sbb
pop
sub
hlt
cld
mov
js
jmp
pop
popw
xor
jno
xchg
xlat
fwait
cld
mov
lret
cli
insl
mov
and
add
ret
je
dec
outsl
push
out
loope
pop
je
and
mov
ljmp
out
and
hlt
stos
xor
lcall
sbb
pop
xchg
pop
mov
jecxz
mov
or
jp
outsb
add
add
jp
mov
or
inc
in
int
and
xor
fs
inc
dec
inc
test
push
shr
cwtl
in
mov
cld
add
aaa
inc
cmp
add
test
ds
jecxz
scas
jle
adc
sahf
shlb
repnz
xchg
fidivrs
call
scas
mov
jmp
sbb
popf
movsb
mov
nop
mov
stos
dec
xor
out
pop
xor
jo
add
ljmp
mov
mov
pop
add
mov
push
push
or
push
in
mov
icebp
aas
mov
fcomps
ss
dec
rcrl
dec
dec
aaa
or
or
jno
jno
outsb
jg
lock
insl
and
mov
fdivr
fisttps
test
insl
add
rcl
nop
sti
mov
bound
pop
fsubrl
out
dec
or
mov
ficoms
pushf
dec
xchg
jp
add
pop
adc
mov
sbb
push
push
xchg
scas
xor
adc
mov
js
adc
xchg
or
fisubrl
daa
out
push
jp
mov
fisttpl
je
ss
stos
enter
aas
mov
mov
sub
pop
in
fistpll
es
out
dec
cmc
das
cmp
mov
jns
adc
out
daa
jecxz
out
dec
test
pop
mov
mov
cmp
out
movsl
inc
jo
outsl
sub
jne
mov
push
mov
cmpsl
xor
jns
cmp
testb
push
add
std
mov
popf
sarb
cmp
mov
jecxz
pushf
lods
dec
imul
or
pop
icebp
mov
and
xchg
out
mov
popf
and
daa
mov
sbb
pop
mov
dec
xor
cmp
into
add
xlat
test
xor
xlat
je
adc
pop
mov
lea
push
or
sti
pop
mov
pavgw
mov
xor
xor
ljmp
es
xor
je
adc
sbb
ret
sbb
in
lcall
pop
fcomp
mov
mov
cmc
imul
adc
fisubrs
cmp
dec
test
pop
inc
xor
push
and
call
cld
ficoml
data16
out
stos
jmp
sbb
scas
cmp
push
mov
std
and
mov
xor
mov
mov
cmp
jp
movsb
and
mov
push
mov
insb
push
fs
xor
mov
mov
cltd
mov
jmp
mov
and
ljmp
add
dec
push
aaa
roll
add
push
or
lock
jno
pop
jbe
mov
data16
mov
shr
test
pop
inc
jl
sub
outsb
pusha
dec
out
repnz
cmpsb
pushf
leave
das
in
jp
pop
mov
pop
cltd
js
loopne
shr
ret
ret
inc
pop
push
xor
inc
and
cmp
jecxz
andl
jbe
inc
cwtl
or
mov
ss
jle
mov
aam
push
pop
clc
mov
or
cmp
aas
negl
outsl
ljmp
sbb
mov
aad
xor
test
jg
mov
push
inc
outsb
popf
insl
shl
lock
ss
sub
pushf
cmp
hlt
shlb
mov
mov
xchg
es
ljmp
test
mov
xchg
cmp
and
mov
adc
pop
ret
fs
sub
push
push
mov
xor
or
dec
jmp
sub
test
sti
pushf
test
push
scas
dec
mov
je
sub
js
stc
mov
rcr
jb
hlt
imul
lock
je
adc
jo
scas
pushf
pop
adc
cs
icebp
iret
loope
loopne
or
call
fcomi
cmp
mov
imul
jmp
psubw
mov
cmp
iret
add
push
js
or
and
ret
imul
mov
jp
ds
jle
sbb
cmp
and
sub
in
cmp
mov
sbb
xor
dec
fistl
xor
mov
push
cmp
mov
pushf
jne
subb
les
or
push
in
add
lcall
cld
movsb
jnp
arpl
push
cwtl
or
and
add
mov
push
or
mov
pusha
mov
ljmp
scas
cmpb
fidivl
imul
das
cli
fs
cwtl
mov
inc
pop
cmp
push
ret
mov
jge
mov
jae
negl
jae
pop
inc
fnsave
lret
pop
mov
nop
push
add
movsl
jne
mov
push
psubd
addl
popa
imul
adc
mov
mov
mov
pop
stos
add
mov
das
and
push
cmp
inc
cmpl
jb
sub
lods
out
lret
xchg
lock
mov
push
and
fsubs
cmp
and
test
sub
popa
das
jg
xor
xor
sub
push
and
lahf
xchg
mov
andl
into
ja
ficoms
pop
into
push
pop
insb
ret
scas
mov
cmp
push
mov
dec
inc
xchg
sbb
mov
ret
or
push
aaa
or
cmpsb
push
adc
mov
mov
test
rcll
repz
lret
outsl
cmp
or
cmp
jae
repz
das
subb
xchg
in
lds
cltd
sub
jg
add
sbb
add
jbe
rcll
push
pop
or
lret
push
outsb
arpl
and
pop
rcll
jecxz
imul
jno
jae
call
je
inc
push
mov
movsb
ss
cmp
sub
bound
mov
or
cmp
push
lahf
mov
sahf
gs
nop
sbb
xor
mov
sbb
popa
repz
ret
xor
add
fmuls
sbb
adc
and
sarb
inc
sahf
xchg
mov
sbb
jmp
out
cmp
aaa
jge
stos
sbb
das
adc
push
xor
dec
mov
mov
sub
dec
inc
adc
inc
mov
mov
pop
sub
xor
jp
cli
xchg
mov
mov
loope
ror
shll
insl
jb
mov
sbb
cwtl
hlt
jecxz
repz
mov
jmp
dec
test
sbb
mov
rcr
stos
js
or
ret
ret
div
add
dec
adc
int3
insb
push
and
adc
cmp
std
inc
fwait
sub
sar
xchg
inc
jno
or
jp
ret
adc
jle
pop
popf
sub
addr16
mov
outsl
mov
icebp
adc
js
add
lods
pusha
jg
ss
rolb
cmp
push
loope
fimull
js
int
fwait
lahf
or
dec
inc
mov
andl
in
dec
test
push
xchg
repnz
imul
mov
jmp
jg
adc
imul
inc
jge
jmp
gs
and
aad
arpl
pop
and
mov
push
js
ret
das
lock
xchg
lods
out
pop
out
or
jno
sahf
mov
pop
insb
fcmove
cmp
pop
mov
jno
and
shll
push
pop
jne
jle
push
push
push
mov
incl
or
adc
adcb
mov
mov
sbb
ds
js
ljmp
roll
loop
jecxz
fsubs
shrb
sbb
daa
scas
mov
dec
rcrb
jmp
pop
xchg
sub
jnp
inc
adcl
push
add
out
or
outsb
sub
push
ds
pop
int
dec
and
inc
add
pop
push
and
cwtl
inc
mov
pop
pushf
jb
add
cmp
ret
dec
sbb
lods
push
cli
sti
add
pop
iret
les
pop
cmp
cs
arpl
mov
hlt
pop
popf
mov
popa
or
inc
std
mov
test
jo
inc
jns
jp
push
es
lret
into
enter
roll
push
arpl
pop
inc
add
and
nop
mov
arpl
clc
and
cld
and
sub
xor
adc
lahf
fstps
lds
jp
pop
xor
fsubr
mov
rcrl
outsb
jbe
xor
adc
mov
pop
mov
aas
aaa
lods
mov
dec
orb
lahf
rolb
pushf
jl
xchg
dec
sbb
mov
mov
cli
enter
iret
sbb
dec
fnstcw
add
push
push
xchg
shr
xorb
xlat
out
loopne
add
mov
or
inc
push
mov
add
rcl
in
ja
xchg
xchg
aaa
ret
jae
shll
mov
dec
aas
fwait
cmp
popa
jp
adc
sti
int3
bound
fstps
cmpsb
movsb
push
cltd
push
mov
rorb
cmp
mov
inc
test
clc
fs
insl
pop
jne
idivb
outsl
pop
cmp
aam
inc
cmp
daa
xor
aas
cltd
mov
pop
je
int
movsl
jl
mov
in
mov
or
lds
lret
ljmp
mov
adc
cmp
push
or
mov
filds
jnp
ret
inc
aam
push
adc
pop
dec
loopne
cvtps2pd
jne
cmpsl
add
mov
mov
enter
addr16
stc
in
and
jl
push
aas
icebp
mov
add
mov
xchg
pop
mov
or
inc
push
jno
div
push
cmc
mov
fisubrl
popf
or
imul
outsb
jmp
sub
cmp
dec
icebp
mov
xchg
fsub
in
dec
cs
inc
mov
xor
push
jp
les
int3
ja
push
push
pop
into
xchg
add
add
adc
push
cmp
adc
fs
xor
mov
ss
mov
cmp
mov
das
inc
orb
sub
das
xor
mov
push
lahf
push
das
mov
sub
std
push
xorb
inc
cmp
int3
int
out
and
in
dec
arpl
add
sbb
hlt
mov
xor
mov
pop
insb
addl
lcall
xchg
add
addr16
pop
pop
push
inc
pusha
shrb
push
aam
sub
add
stc
inc
xchg
divl
xchg
or
ret
in
add
pushf
outsl
cmp
add
lds
shll
out
mov
or
cltd
test
stos
fcoms
out
loop
sbb
paddw
fimuls
cmpsl
lret
cmp
orl
jae
fidivrs
sbb
mov
cmc
mov
jl
test
xchg
lahf
pop
push
jmp
fisubrl
nop
popf
dec
lret
push
aaa
push
add
cmc
push
jg
pop
pop
ss
mov
mov
jp
or
call
addb
sahf
dec
sub
addr16
dec
dec
pushf
in
and
add
push
leave
sbb
fldt
jl
scas
loopne
pop
cs
out
sbb
lods
add
imul
cmp
loop
mov
popf
out
mov
mov
and
xor
fxch
jb
shll
cwtl
push
insl
push
mov
fildl
cmpl
add
jmp
add
xor
gs
jns
cld
mov
jno
xlat
bound
adc
pusha
sub
imul
loop
mov
repnz
pusha
testb
in
and
mov
shrl
iret
sub
lahf
and
int
sbb
rcrb
mov
pop
mov
xchg
xlat
icebp
mov
lahf
sub
in
sbb
je
add
and
sbb
xchg
sub
adc
mov
mov
ret
test
and
push
xchg
cmp
loopne
mov
dec
addr16
lahf
test
mov
leave
movsl
mov
push
in
xchg
shlb
cmpsb
jge
mov
sahf
pusha
clc
or
and
sub
sbb
fistpll
scas
jne
inc
mov
out
pop
mov
out
and
icebp
mov
test
out
subb
mov
cmc
outsb
inc
ret
subb
mov
pushf
jp
mov
and
push
aam
cmpsb
leave
push
loopne
je
ret
xchg
outsl
ljmp
mov
cmp
cli
insb
sbb
mov
mov
popa
adc
jne
jge
fs
pop
pop
mov
push
repz
stos
addl
pop
loope
xchg
mov
inc
in
jmp
bnd
push
addr16
sbb
nop
add
and
sar
push
ret
cmc
mov
xor
mov
cmp
mov
outsb
cmpsb
out
push
pop
xchg
stc
sub
data16
addr16
mov
stos
ret
xor
addr16
repz
xchg
and
mov
les
pop
cmp
or
mov
or
test
fsubl
xlat
inc
pop
sbb
push
rorl
cld
xchg
mov
das
cmpsl
leave
shrb
decl
xor
stos
imul
cmpsl
ja
mov
push
jns
imul
pop
xor
outsl
xchg
lock
notb
adc
test
push
lock
rcrb
and
es
push
ljmp
sub
jnp
jo
gs
sahf
movsl
sbbb
inc
inc
xor
sub
rolb
mov
icebp
aam
jmp
pop
dec
sbb
jns
in
mov
mov
pusha
sub
pop
aam
andl
repz
inc
pop
int
divb
inc
jecxz
out
dec
mov
int3
imul
adc
jge
adc
jne
fimull
rorb
xor
nop
push
jo
mov
in
and
xchg
push
mov
jno
mov
adc
cmc
sub
aad
js
stc
cmp
jne
insl
repnz
dec
lds
xor
mov
repz
xchg
jae
inc
stos
stos
push
add
insl
cmc
sub
pop
enter
mov
pop
call
xchg
in
cmp
cs
push
jmp
push
adc
mov
lret
sub
xor
lcall
das
sahf
or
pop
notl
out
inc
pop
inc
pop
dec
js
jge
adc
test
jo
sbb
test
push
pop
data16
inc
jne
aam
and
cltd
clc
aad
fisttpll
xchg
std
adc
ret
dec
loope
jne
jns
fneni(8087
add
mul
mov
dec
xchg
jle
cmp
sbb
in
loopne
inc
jp
mov
rorb
les
pusha
jno
call
inc
add
outsb
sbb
or
dec
inc
test
cmpl
fnstcw
out
ficoml
mov
in
repz
mov
push
sub
cmp
sub
lea
dec
and
mov
jb
add
test
out
inc
sub
out
ja
pop
add
aaa
leave
mov
lahf
hlt
mov
mov
in
mov
push
shlb
or
mov
inc
mov
fdivrl
fstl
sub
push
in
pop
add
cmp
sbb
jl
xchg
in
and
xchg
arpl
daa
cmp
fisttps
loop
out
lahf
cmp
sbb
scas
mov
or
jge
insb
or
outsl
test
and
xchg
dec
les
pop
jg
mov
dec
mov
mov
dec
aas
lahf
cmp
cmp
push
in
in
push
mov
stc
pusha
shlb
lret
loopne
mull
mov
les
ja
js
pop
iret
repz
pusha
stc
or
mov
xlat
lds
pop
mov
xchg
mov
or
xlat
shrl
test
cmp
xor
xchg
je
jge
movsl
addr16
jno
and
rclb
inc
pop
mov
lcall
daa
push
aam
xor
pop
inc
and
mov
sbb
xchg
std
popa
dec
jo
gs
jbe
mov
adc
add
in
clc
push
inc
add
loop
mov
std
sbb
mov
xchg
sahf
xor
std
ret
into
mov
mov
push
xor
mov
cmpsb
mov
arpl
out
test
movsl
add
mov
adc
lret
cltd
data16
cmp
mov
daa
push
icebp
mov
push
xchg
push
out
cmpsl
xchg
push
shlb
int
and
ljmp
xor
fwait
cli
and
and
xchg
xchg
add
lock
fdivr
addl
or
pop
xor
adc
xor
pop
mov
push
sarb
mov
out
daa
jbe
lahf
stos
xchg
pusha
jge
test
arpl
insl
outsl
xchg
dec
and
push
loopne
mov
insb
cmc
int
inc
sti
movsl
ds
mov
xor
scas
push
xchg
mov
jns
cs
pop
dec
dec
jbe
in
cmova
pop
push
in
adc
mov
inc
inc
inc
jnp
fadds
push
mov
or
or
mov
mov
in
std
cmp
aam
leave
insl
dec
ret
sti
jno
mov
outsb
out
jno
ss
lahf
cs
inc
in
shl
lret
push
adc
test
xor
or
jnp
outsl
ret
push
push
inc
sbb
mov
daa
iret
jb
push
push
scas
jl
loope
fistl
pop
add
pushf
mov
mov
cmpsl
imul
xchg
lods
arpl
and
icebp
out
xlat
and
lock
adc
or
adcl
aad
push
in
push
inc
nop
dec
test
test
add
hlt
jmp
adc
icebp
cmpsb
fcomps
cmpsb
fwait
pop
bound
js
dec
rdmsr
adc
dec
cmp
xor
repnz
out
mov
pop
fdiv
mov
ds
enter
sbb
icebp
sbb
xchg
add
or
movsl
dec
stc
loopne
test
sbb
cltd
adc
xchg
inc
jns
aam
icebp
in
loope
sub
jle
lods
scas
ja
incl
push
lret
mov
mov
or
cltd
or
xchg
add
lcall
sub
sub
xchg
loopne
push
scas
das
mov
incl
lret
adc
pop
add
push
out
imul
loop
mov
add
adc
mov
dec
aas
cmp
cmp
sbbl
lret
cmc
mov
pop
int
inc
fbstp
push
xchg
or
xchg
repnz
sbb
jg
cmp
mov
pop
and
dec
cmp
push
xchg
cli
test
mov
stos
loopne
mov
sti
inc
cmp
sub
push
xchg
mov
xchg
xchg
cmpsb
shrb
in
and
aad
adc
int3
dec
int3
push
ds
cs
rclb
leave
xchg
pop
popa
jecxz
xchg
subb
mov
push
pop
test
dec
mov
push
stos
adc
mov
das
mov
fildll
insb
and
idivl
mov
les
mov
inc
popf
sti
cmp
std
inc
shr
ljmp
pop
jle
fldt
fldcw
test
xchg
mov
insl
mov
or
pop
pop
movsl
scas
orb
lea
jno
es
mov
mov
jbe
mov
pop
add
shrb
mov
dec
inc
or
xchg
rep
mov
inc
ret
icebp
xchg
outsb
mov
mov
jmp
int3
ja
sub
cmpl
mov
mov
enter
in
arpl
pop
pop
fsubl
sbb
into
pusha
adc
cmp
dec
mov
xchg
push
loopne
jg
out
xor
xchg
stos
leave
inc
je
add
test
dec
pop
push
and
mov
sahf
rcll
mov
aad
push
popa
pop
out
mull
data16
xor
push
jg
lret
add
jne
cwtl
add
hlt
jbe
ljmp
nop
sbb
lods
or
cmpsb
sbb
stos
in
pusha
imul
xor
push
nop
jb
mov
clc
add
inc
inc
daa
push
add
daa
rorl
xlat
add
bound
push
push
push
cmp
jns
add
loopne
and
add
imul
cmp
push
rolb
or
mov
xchg
push
adc
cwtl
pop
pop
cmp
fiadds
aaa
xor
in
jl
sub
mov
dec
xchg
xor
out
mov
pop
mov
pop
cwtl
jo
sub
cmp
inc
pop
sbb
xchg
test
out
sbb
jmp
cmp
jbe
push
and
jae
or
stc
cmpsb
adc
mov
cld
leave
jecxz
lcall
and
loopne
iret
std
fsubp
iret
jo
fsubrp
mov
inc
incl
sbb
and
xchg
mov
dec
test
jns
xor
xor
xchg
inc
hlt
lds
daa
subb
jnp,pn
sbb
lret
enter
mov
aam
sub
sub
test
mov
and
fimull
outsb
and
mov
push
in
ds
mov
sbb
insb
outsb
xor
cmp
jle
fs
jmp
jo
ds
sbb
jne
xor
nop
scas
push
lret
das
movsl
sti
fwait
aam
cli
stos
fidivrl
rcr
popa
pop
or
cmp
iret
jge
std
jb
mov
jb
xchg
lret
rolb
inc
mov
cmp
pop
mov
jbe
xchg
outsb
mov
scas
je
or
jecxz
in
bound
lods
xchg
xor
fs
cmp
pop
add
es
sub
mov
dec
in
insl
adc
icebp
out
inc
or
lods
adc
lods
repz
push
add
push
je
push
cli
ss
call
mov
and
negb
sub
pop
jg
mov
xchg
mov
nop
jle
xchg
cltd
xacquire
sbb
outsl
mov
mov
outsl
fnstenv
movsb
jns
nop
xor
sbb
or
or
lods
in
and
popa
adc
out
in
into
mov
xchg
das
fisubl
push
in
add
movsb
aas
jecxz
outsl
and
or
mov
cmp
sub
sbb
sti
inc
movsl
ss
popf
sbbl
inc
popa
adc
icebp
pop
cmpsl
xchg
nop
popa
loop
jle
repz
stos
mov
xchg
lret
aad
adc
insl
cmc
adc
outsl
push
jnp
cmp
mov
icebp
or
std
sti
lods
sbb
pushf
rep
jne
nop
lcall
xchg
lock
xor
dec
scas
adc
jecxz
xor
pop
rcll
and
popa
xor
shrb
or
mov
cmp
je
mov
ret
mov
daa
stos
dec
push
adc
int3
test
cmp
outsl
test
lea
inc
push
push
repnz
mov
mov
outsl
stc
pushf
xchg
addr16
fists
scas
push
or
lret
test
lahf
int
into
outsb
inc
mov
jb
and
cld
aad
dec
sbb
mov
jecxz
jge
rclb
aaa
mov
mov
test
out
jge
lds
jl
fldlg2
cmpsb
and
push
es
je
sbb
add
paddusb
mov
lea
push
outsl
ljmp
cmp
fwait
iret
or
adc
sub
jmp
add
mov
dec
lcall
dec
insl
je
lret
adc
xor
cmp
xchg
fs
rcrl
jge
or
pop
xor
and
int3
push
pop
aam
movsb
lcall
sbb
imul
int3
sar
out
out
lods
xor
cld
xlat
adc
bound
pop
sub
shr
lds
mov
xlat
mov
jmp
cwtl
in
pop
daa
adc
je
mov
xlat
inc
xchg
lds
jle
inc
mov
popf
xorl
or
jns
fidivl
mov
pop
mov
jns
movsl
jns
mov
outsl
push
jne
in
sti
jmp
scas
and
fstpt
cmp
addr16
and
scas
mov
movsl
int3
push
xchg
cmp
insb
repnz
dec
push
jne
in
inc
aaa
nop
or
mov
pusha
mov
mov
aas
fdivl
addps
outsl
and
cli
pop
sub
mov
mov
pushf
sub
test
mov
ljmp
les
push
cmc
xchg
out
decl
add
adc
fwait
iret
cmp
xchg
cmp
imul
or
shrl
ss
and
repnz
std
mov
movsl
sbb
inc
xchg
fwait
or
dec
cmp
in
push
movsl
push
and
adc
outsb
xor
imul
xchg
jnp
mov
pushf
sbb
xchg
xchg
xlat
push
jno
lret
sbb
std
les
cwtl
and
jp
pop
inc
cmp
scas
dec
sub
ret
mov
sbb
xchg
adc
into
lods
sbb
jp
sbb
and
mov
fbstp
ds
dec
sbb
add
cmp
dec
mov
dec
xchg
push
adc
mov
adc
aam
repz
sub
aam
push
lea
jecxz
pop
xchg
sbb
push
in
pop
sub
out
push
shll
rcrl
mov
cmpsl
out
dec
lret
xchg
xchg
test
shrb
cmpb
lds
mov
dec
and
mov
xchg
fwait
cmp
mov
or
jl
xchg
aad
popa
push
mov
divl
or
mov
fadds
cwtl
leave
jecxz
lds
fcomps
pop
pop
inc
int
leave
gs
dec
inc
shl
outsl
repz
jle
int
rorl
pop
in
and
mov
mov
fistpll
and
addr16
incl
sbb
and
mov
fdivrp
ss
test
test
xchg
mov
jns
cli
jge
shll
cwtl
push
mov
movsb
lock
mov
stos
or
jo
inc
xlat
stos
mov
sub
sbb
mov
movsl
shl
arpl
cmp
jnp
lahf
cs
dec
adc
add
xor
cmp
loopne
lea
fisubrl
inc
or
pop
and
mov
add
shll
idivb
pop
inc
mov
mov
call
cmp
aad
jge
mov
pop
add
mov
jmp
sub
sbb
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
mov
mov
cmp
jp
pop
jp
adc
test
aaa
nop
push
and
add
jno
mov
push
sti
add
cmpsb
cltd
aam
or
add
push
push
sub
push
jg
push
icebp
push
jge
stos
loopne
sbb
xchg
jno
or
mov
jnp
in
leave
dec
out
movsl
lods
pushf
jno
pop
mov
jecxz
and
push
cmpsb
addr16
push
aaa
loopne
sbb
test
out
jecxz
sbb
sbb
or
mov
pusha
dec
clc
xor
dec
dec
out
in
and
cld
pop
adc
fwait
lods
sbb
sahf
ret
dec
movb
pop
push
dec
comiss
jecxz
mov
mov
aam
in
negl
inc
in
adc
in
xor
jae
in
lods
scas
cmp
or
in
pop
popa
pop
pusha
dec
jb
jle
push
mov
aad
xchg
push
es
inc
pusha
or
js
push
test
sbb
mov
movsl
es
lock
pop
daa
fmull
dec
inc
lods
movsb
mov
xor
mov
jo
loope
dec
sbb
ret
and
pop
fnstenv
fs
adc
inc
aad
xor
out
movsb
cmpsb
pop
jl
outsb
mov
aam
jns
cmp
cmp
imul
add
out
add
popa
jo
add
mov
inc
jno
dec
mov
test
scas
mov
mov
fwait
add
add
and
daa
cmp
ds
pusha
add
lock
imul
mov
mov
js
xchg
movsb
cmpsb
mov
push
outsb
mov
setl
push
cmp
lcall
push
pop
jbe
jl
dec
call
imul
mov
jg
ja
test
mov
jl
outsl
flds
ja
jo
lock
divb
popf
mov
inc
int3
inc
hlt
leave
call
nop
push
jl
jle
lock
adc
stos
mov
lcall
stos
pop
mov
aam
jg
nop
cmp
dec
mov
cwtl
test
sub
xchg
pop
and
daa
fwait
xchg
dec
adcb
dec
ret
es
cmp
outsl
mov
mov
add
inc
xor
jns
movsl
repz
push
jl
adc
sbb
xrelease
jne
insb
addr16
lock
dec
jg
xorb
data16
sarb
lds
adc
int3
iret
das
jmp
and
subl
xor
loopne
adc
cld
push
add
add
repnz
cs
pop
nop
mov
xor
mov
rcll
test
inc
xchg
stc
add
xchg
sti
les
loopne
sub
xchg
mov
ja
jns
test
cmp
cs
cmp
sbb
aam
cltd
and
jne
dec
mov
lahf
and
adc
fstpl
roll
sub
inc
cltd
cmp
cmp
frstor
pushf
inc
lds
test
je
xchg
pop
sub
xchg
xchg
dec
jp
xchg
icebp
mov
pop
mov
dec
mov
pop
movl
insb
cmpsl
fdivrl
mov
gs
ja
jmp
arpl
push
outsb
xchg
jg
xchg
popf
dec
xchg
lods
fsts
sahf
scas
fbstp
orl
dec
fwait
xor
sub
movsb
shr
cli
hlt
test
out
jnp
popf
jmp
stc
or
cmpsb
outsl
inc
test
stos
lods
sti
jl
fldcw
loopne
in
loopne
xor
inc
mov
sarb
sub
out
out
push
dec
adc
fistps
ret
inc
fld
sub
aas
movsb
xor
and
das
dec
mov
xor
testb
pop
jmp
out
push
cmc
dec
in
icebp
or
xlat
lahf
shll
cmc
push
pop
mov
adc
sahf
dec
je
jns
or
sbb
rcll
dec
nop
scas
cmp
test
popf
mov
push
mov
pop
stos
mov
daa
push
cld
pusha
orb
xchg
mov
aad
insb
in
xor
cli
subb
stc
rcl
pop
jbe
mov
out
cmp
leave
cmp
cld
in
test
cmp
mov
int
dec
jne
cmp
lds
xchg
inc
mov
add
rcrl
adc
adc
lcall
or
jae
mov
xorb
icebp
mov
xor
add
in
adc
pop
push
inc
int3
addr16
fucomip
or
mov
loope
pushf
jge
movsl
je
xchg
cmpsl
or
adc
xchg
mov
fldt
rcrl
ds
ret
mov
pop
repnz
popa
cmp
inc
lea
in
clc
mov
adc
cmc
cmp
lret
sub
jl
dec
dec
mov
adc
stos
lds
cmp
push
adc
add
and
mov
jecxz
cmp
fs
test
mov
mov
aad
int3
cmp
cmp
mov
dec
inc
mov
int
or
test
clc
lods
jecxz
cmpsl
mov
xor
roll
pop
inc
cld
push
outsl
imul
pop
mov
ret
xor
ljmp
pop
or
inc
xchg
or
cmp
outsl
xchg
pop
outsl
loope
xor
insb
cmp
xchg
mov
shrl
insl
rcll
movsb
jne
inc
test
roll
xor
and
pusha
sub
aas
aad
cmpsb
cmp
out
test
xchg
and
lret
or
imul
std
adc
jg
sub
popf
insb
insl
out
add
rcl
popf
fistps
dec
mov
and
fistl
pop
jle
mov
lods
hlt
pop
aas
mov
inc
insb
rorb
jb
prefetch
scas
lock
lret
jae
pop
daa
leave
or
ffree
cmpsl
incb
pop
nop
es
ficoms
orl
test
dec
dec
push
test
jge
xchg
rorl
mov
inc
dec
push
mov
lret
adc
add
lret
pushf
mov
icebp
mov
aad
pop
bound
or
mov
aam
ficoml
mov
cwtl
nop
mov
mov
fs
xchg
add
pop
fldt
sub
mov
fcomp
pop
iret
pop
fs
lcall
push
imul
adc
mov
adc
xor
outsl
push
test
push
aaa
adc
jl
fsubrs
sub
cld
jl
fiadds
imul
adc
mov
inc
sbb
cmp
jge
aad
js
xchg
fs
aaa
sbb
ret
out
fdivrs
and
inc
fdivl
bound
mov
and
mov
xchg
stos
push
add
fmuls
rolb
mov
pop
adc
push
aaa
xor
push
aaa
sub
inc
cmpsb
inc
sbb
cld
lahf
dec
cwtl
cli
ror
sub
pop
jmp
dec
lahf
xor
std
push
sarb
pop
add
adc
sub
lds
sub
push
sub
or
mov
ja
jge
mov
out
leave
jle
mov
bnd
out
or
out
les
cs
jae
sub
jmp
out
test
js
jmp
xchg
fildl
mov
xor
dec
mov
mov
mov
add
cmc
scas
cli
mov
jne
and
outsl
and
and
std
lods
leave
or
mov
xchg
mov
mov
ljmp
insl
clc
movsb
ficoms
dec
pop
scas
add
jo
push
mov
mov
mov
mov
scas
loopne
mov
or
cmpb
or
push
aad
mov
pop
jno
or
mov
bound
sbb
push
inc
clc
gs
ficomps
cmp
es
inc
outsl
dec
inc
lea
ret
sbb
js
cmc
mov
lds
dec
movsb
push
pop
das
sbb
in
mov
push
inc
stos
or
leave
je
add
pop
sub
lds
stc
pop
jbe
and
test
mov
cmc
adc
lcall
xchg
xorps
mov
mov
outsb
jne
adc
movsb
mov
lods
add
in
pop
int
repz
or
inc
jg
mov
out
fldt
out
xchg
bound
jo
aaa
push
mov
jmp
xchg
sbb
dec
dec
adcl
push
inc
jnp
out
dec
stos
mov
mov
lea
dec
mov
test
rcll
std
or
jecxz
lret
or
loop
dec
jmp
lret
push
xlat
or
mov
push
cmpsb
fildl
fs
stos
rcl
int3
pop
stc
xlat
jno
pop
push
xchg
jbe
in
xchg
movsl
mov
push
inc
xchg
mov
pop
into
stc
mov
pop
inc
inc
adc
or
notb
sbb
cmp
hlt
and
cli
or
es
xchg
inc
push
enter
inc
mov
push
pop
and
dec
ret
dec
jno
sbb
pop
fildll
es
fs
mov
or
repnz
cwtl
cld
mov
xchg
test
mov
pop
lret
inc
and
xchg
nop
bound
imul
lock
in
inc
add
jnp
call
arpl
or
addr16
lods
addb
push
clc
mov
repnz
aam
in
fwait
in
addr16
not
aas
test
shrb
adc
mov
jns
pop
fwait
and
stc
fcoms
cmp
repz
jmp
enter
insl
test
es
mov
push
rol
add
bound
mov
outsl
pop
aaa
xor
sbb
insb
adc
mov
jecxz
pop
bound
popf
loopne
xlat
and
in
jg
pop
sbb
push
add
xchg
jnp
sbb
dec
fsubrs
sub
test
mov
inc
adc
gs
adc
add
adcl
popa
dec
add
arpl
iret
dec
div
and
cmp
sbb
pop
add
push
cltd
push
pusha
int3
push
cs
xchg
push
lds
mov
adc
push
flds
cmp
jo
sub
stos
sub
jg
ss
and
js
sbb
push
and
mov
test
xchg
ret
dec
enter
daa
xor
sbb
int3
jmp
data16
loope
cmp
pop
or
push
scas
inc
out
mov
fildl
sbb
mov
pop
mov
xchg
insl
pop
mov
outsl
sub
mov
and
mov
adcl
test
dec
jnp
jle
or
cmp
and
popw
lea
add
jne
iret
mov
sub
das
hlt
icebp
in
mov
arpl
arpl
push
xor
mov
push
cmp
cs
nop
and
into
and
mov
xchg
jmp
sbb
cs
leave
or
jo
mov
sbb
insl
mov
xor
aam
sub
pop
push
bound
into
push
dec
jae
mov
popf
inc
mov
insl
cmp
pop
add
xor
mov
sub
mov
xchg
pop
or
add
adc
adc
mov
popa
xchg
adc
lcall
cmc
jg
pop
xchg
mov
leave
add
lds
scas
cmp
mov
adc
sbb
cltd
roll
cmpsb
ret
dec
pop
fsubrl
adc
pusha
imul
dec
rolb
imul
push
sbb
xor
mov
mov
dec
cwtl
insb
addr16
xchg
test
in
shl
push
rcrb
shll
xor
lds
pop
cmp
adc
in
cmp
lea
add
xorb
out
test
pop
jb
stc
int
in
pop
mov
sub
int3
ss
out
icebp
or
in
movsl
sbb
dec
stos
inc
aad
lods
sar
push
push
stc
js
and
hlt
and
add
push
ds
sbb
mov
fnsave
mov
mov
sub
pop
pushf
and
jnp
test
cmp
out
mov
mov
sub
xor
and
dec
out
mov
stc
and
cmp
dec
fldt
out
hlt
mov
xchg
fdivrl
sub
lahf
fldenv
out
xor
fsubl
sbb
mov
pop
pushf
rol
incl
or
mov
sbb
cmpsl
jle
into
stos
icebp
subl
inc
mov
in
sub
int3
test
aad
out
cld
data16
sbb
add
jecxz
ret
lret
in
xchg
cwtl
loopne
adc
mov
movsl
jnp
add
rcr
pop
nop
popf
jge
jge
ja
outsb
or
jnp
sbb
jbe
mov
jp
adc
test
push
adc
dec
adc
pop
xor
xor
test
or
mov
ss
cli
in
pop
loope
mov
inc
push
testl
and
or
mov
cli
add
and
pushw
mov
dec
outsl
xor
enter
cwtl
sub
mov
imul
cmp
scas
orl
stc
aas
cwtl
inc
xor
insb
add
gs
and
push
xchg
cmp
xchg
in
or
or
jl
out
repnz
and
call
jg
aam
repz
sub
andl
ja
mov
je
shl
and
inc
push
movsb
push
sbb
or
into
pop
dec
dec
lfs
movsl
mov
sub
mov
pop
inc
mov
push
test
je
outsb
xchg
jo
cli
es
xor
jnp
cld
mov
sbb
or
stos
mov
adcb
xor
and
stos
scas
pop
andb
sub
sub
jnp
dec
aam
cld
mov
js
jb
jb
push
daa
jne
call
fdivs
popa
into
cmp
xchg
shl
xchg
loop
fdivr
rcrb
xchg
cld
leave
stos
push
loope
mov
xchg
test
add
adc
sbb
and
and
loopne
add
lret
add
lret
fcompl
adc
mov
imulb
xor
lret
inc
sub
je
pop
out
jecxz
and
rorl
repnz
add
stos
mov
cmp
push
imul
or
dec
out
call
push
dec
ret
lods
push
sbb
int3
fmull
daa
cmc
xchg
pop
pop
outsl
cs
push
and
in
add
fisubl
es
dec
jle
test
mov
outsb
push
pop
test
jp
and
sub
enter
je
or
or
pop
mov
and
data16
inc
jne
out
pop
sub
push
ss
add
jo
outsl
inc
or
mov
mov
int3
add
cli
and
add
mov
lds
clc
xchg
ljmp
divl
mov
mov
loopne
ja
push
rorl
aaa
stos
xchg
push
lods
in
sbb
mov
cltd
adcl
ljmp
dec
aam
in
xchg
into
out
or
in
stos
sbb
mov
sub
dec
push
pop
mov
mov
push
push
int3
xchg
loopne
adc
mov
rcl
loope
pusha
inc
addr16
xor
add
test
jge
xchg
sahf
or
mov
push
mov
jno
xlat
push
add
mov
stos
stc
daa
andb
or
jbe
mov
dec
rcrb
push
xor
rcll
sbb
dec
aam
outsl
fucom
lea
adcl
stos
pop
ficoms
mov
fs
xchg
xor
dec
je
pop
loopne
iret
adc
mov
scas
test
loope
outsb
xor
mov
cmpsb
repnz
fwait
and
push
out
mov
mov
divb
mov
mov
sub
sub
inc
arpl
ss
xchg
mov
movsl
dec
data16
push
scas
cmpsb
wrmsr
mov
lea
or
mov
mov
aam
inc
jbe
out
jo
or
inc
fidivl
ret
and
lock
sbb
inc
cli
in
dec
shlb
lds
sbb
xchg
roll
adc
call
cmp
nop
notl
push
add
ljmp
fs
sub
hlt
ret
mov
addr16
mov
notb
out
add
shll
and
hlt
loop
jl
aam
cmp
clc
aam
mov
xchg
ret
test
ret
icebp
adc
jecxz
fdivp
sbb
outsl
loop
test
jb
push
cmc
cmp
out
mov
ljmp
sti
sub
les
lds
jno
lcall
popl
mov
popa
add
mov
cmc
add
and
sbb
nop
testb
adc
cmp
xchg
lock
rol
sahf
mov
xlat
jo
cmp
push
imull
lret
sub
lcall
mov
scas
fdivl
sahf
pop
cmpb
ficomps
and
jle
pop
push
mov
or
jns
mov
jno
push
mov
sahf
ja
xchg
pop
lret
dec
push
pop
pop
sub
jge
int3
jle
aad
lods
btc
dec
cwtl
push
and
xchg
ret
fs
dec
xchg
xor
aas
or
and
nop
clc
or
in
push
daa
sbb
push
cli
bnd
inc
cli
or
je
push
fcom
fwait
js
loopne,pn
repz
js
jb
adc
lret
out
xchg
sub
push
jl
lock
pusha
fcomps
mov
and
pop
cmp
adc
push
je
in
mov
sbb
pop
push
in
clc
cwtl
fsubs
fcomps
xlat
adc
pushf
xor
xor
xchg
pop
lock
ljmp
xchg
cmpsl
mov
and
inc
jnp
out
pop
xor
mov
addr16
push
pop
push
mov
leave
xor
call
fcmovb
jle
pop
mov
add
and
and
cmpsl
cltd
add
xor
add
adcl
dec
sar
hlt
out
int
dec
inc
stos
movsl
pop
push
pop
mov
cmp
in
or
xor
xchg
pop
xchg
mov
mov
or
sti
out
test
stos
hlt
dec
push
and
into
jp
into
cmp
push
mov
daa
sbb
xchg
cmp
cmp
bound
ja
mov
lret
aaa
mov
push
stos
dec
and
gs
gs
push
daa
or
add
cmp
push
adc
cmp
pop
mov
loope
xor
and
mov
push
ret
mov
jmp
cld
lods
mov
cmpsl
jnp
mov
mov
arpl
stos
call
shlb
mov
data16
inc
pop
mov
js
incl
movsl
outsl
and
aaa
dec
jnp
call
push
mov
ljmp
sbb
pop
js
or
inc
jecxz
pop
jnp,pn
les
jecxz
int3
bound
pop
fistpll
push
push
dec
dec
xchg
inc
out
cmp
dec
dec
mov
ror
out
leave
jno
xchg
xchg
sub
pusha
lds
mov
dec
lea
jge
gs
cmc
mov
add
loope
dec
fistps
pop
imull
sub
xor
fucomi
rolb
lret
divb
sub
add
mov
cld
stc
xchg
xchg
arpl
push
jle
mov
mov
mov
insb
mov
and
jns
ds
mov
mov
stos
jge
jno
ljmp
out
popa
ja
popa
cmp
aam
sahf
adc
xchg
xor
adc
cmpsb
dec
cs
leave
sbbb
and
mulb
fistps
ficoml
and
mov
sahf
ret
cmc
xchg
mov
popf
mov
jle
aaa
and
mov
mov
mov
dec
and
out
lock
leave
lret
cli
push
sub
repz
add
rcl
xchg
frstor
mov
repnz
popa
stos
jp
jl
push
xor
or
push
test
add
sub
cld
out
inc
fdivrs
push
repz
fiadds
mov
das
pop
mov
pop
mov
dec
mov
xchg
in
in
imul
rcll
out
jg
repnz
or
jecxz
and
mov
cmpsb
mov
dec
inc
pop
cli
flds
push
in
aad
out
fidivs
push
jnp
outsl
mov
not
addb
fdivrl
xchg
fwait
rcll
inc
push
jp
push
push
xchg
out
mov
and
add
add
pop
scas
mov
pop
es
push
sub
daa
cmp
mov
push
das
xchg
xchg
or
mov
sahf
cli
repnz
imul
lods
das
pop
js
dec
arpl
mov
popa
fwait
xchg
es
ss
enter
je
arpl
xor
sub
sbb
pop
sbb
push
sub
sti
arpl
cmpsb
xchg
add
push
sahf
jne
mov
test
xchg
jbe
imulb
inc
mov
xchg
popa
jnp
test
out
dec
mov
fstp
cmp
test
add
int3
fwait
ret
enter
jb
cwtl
push
fcompl
cltd
iret
xor
inc
lahf
xchg
mov
jle
dec
and
xor
lret
bound
jno
fs
je
movsb
push
ljmp
or
dec
sbb
nop
inc
adc
test
leave
leave
leave
inc
or
test
or
xor
mov
or
insb
out
mov
jmp
ljmp
fidivrs
xor
jecxz
cmp
xor
push
push
sub
fwait
xchg
mov
cwtl
lods
leave
test
icebp
test
out
xchg
fwait
pop
jle
pop
jg
pop
cmp
xchg
cmp
scas
dec
dec
enter
loop
fadds
movsb
mov
or
movsl
das
jmp
cmp
mov
mov
lret
add
xor
mov
out
icebp
inc
pop
pop
negl
dec
sbbb
or
sahf
repnz
pop
clc
pop
outsl
jnp
test
add
mov
sbb
mov
ret
mov
xor
inc
nop
sub
shlb
aas
mov
push
push
dec
adc
mov
leave
or
cmova
cmp
fwait
dec
outsl
jns
mov
test
mov
movsl
sbb
xchg
roll
sbb
jb
add
cmp
xor
shlb
or
popf
sbb
test
push
movsl
adcb
cmc
insl
or
lods
jb
out
int
sub
rsm
or
mov
stos
fisubrl
popa
shlb
adc
fistps
add
xlat
leave
lahf
test
cmp
mov
cwtl
pop
mov
lret
push
lods
push
jbe
pop
aas
adc
mov
sub
jmp
ljmp
ss
movsl
inc
call
jmp
mov
sbb
ss
inc
xor
xchg
popf
fwait
mov
jg
lods
push
xchg
lcall
es
xchg
mov
insb
enter
inc
mov
pusha
lcall
outsl
dec
mov
roll
and
adc
adc
in
or
mov
mov
movsb
fnstcw
dec
mov
cltd
ret
in
mov
sti
jae
test
leave
cs
inc
mov
rcr
lcall
cmp
ss
and
inc
mov
inc
bound
mov
adc
pop
inc
sbb
cmp
cmp
fstl
pusha
and
inc
and
pop
aam
cld
js
call
jge
sahf
cld
add
sar
jb
mov
std
lahf
and
idivl
jmp
dec
push
andl
fadds
mov
out
jo
sbb
in
lcall
test
sub
sahf
out
dec
cmc
in
or
fistl
xor
cwtl
add
inc
add
cltd
jg
mov
pop
rclb
clc
and
add
dec
push
in
test
aad
jle
dec
sarb
int
mov
cmp
push
mov
popf
inc
sbb
cmp
and
aaa
lahf
mull
fldt
sub
push
dec
and
adc
jecxz
xchg
push
inc
pop
jns
pop
insl
gs
jo
jp
sub
xor
adc
bound
stos
out
in
stc
or
cli
cltd
xor
fcoml
cmp
repz
int3
sbb
in
add
stos
or
test
out
add
add
sbb
scas
jp
adc
lds
mov
repz
arpl
xchg
call
xchg
popl
mov
or
es
test
clc
stos
pop
add
ljmp
into
fwait
sbb
cmpsl
and
xchg
cmp
mov
and
mov
fidivs
scas
cmc
sbb
out
sbb
inc
cmpsl
sbb
and
mov
dec
add
jmp
unpcklps
xor
pushf
inc
loop
lret
in
mov
imul
inc
mov
xchg
add
or
in
jns
inc
jmp
cs
dec
inc
mov
push
cmp
xor
fisttpl
jmp
cmp
jle
gs
adc
cmpsl
in
in
xchg
or
jbe
pop
mov
mov
and
into
outsl
xor
sarl
fnstcw
in
adc
pop
outsl
or
das
adc
add
data16
lcall
dec
cmpsb
sub
adc
mov
add
outsb
sbb
loop
fstps
mov
scas
push
lcall
psubq
xor
cmpb
lret
sub
cwtl
pop
add
jecxz
decl
or
adc
pop
inc
aad
pop
push
lcall
inc
shlb
add
adc
xor
sub
push
ss
mov
cltd
push
mov
push
or
mov
mov
push
inc
idiv
cld
mov
fisttps
shl
mov
mov
xchg
sub
add
sbb
xor
add
sarl
push
xor
sbb
push
out
add
jns
pop
push
inc
outsl
or
std
sarl
and
lret
add
sarl
and
cmp
js
sbb
fdivl
rcrl
imul
popa
cmc
dec
or
sub
sbb
mov
bound
dec
sub
sti
loop
in
mov
lret
pop
rcrl
enter
push
push
mov
cmp
cmc
dec
imul
inc
ljmp
jae
loope
ret
jne
bound
mov
shrl
xchg
mov
dec
cmpsl
movsl
xor
mov
leave
out
xchg
pop
sub
cmp
fsub
insl
cmova
cmpsb
pop
xlat
mov
pop
and
adc
movl
xchg
push
cmpsl
mov
and
out
jbe
cmpsb
cmpb
lds
orb
mov
nop
pop
pop
mov
shr
cld
dec
cmp
jno
repnz
xor
leave
dec
mov
pop
in
scas
inc
scas
add
jo
lret
arpl
and
push
or
call
int
push
stos
add
ja
xchg
lahf
jecxz
insb
pop
lret
pushf
xchg
insb
jne
adc
sahf
mov
lock
dec
pop
or
push
arpl
pop
daa
lcall
add
mov
xor
test
dec
call
jl
jno
mov
test
incb
add
lds
lcall
lret
int
aas
inc
aad
inc
pop
sub
xor
bound
xor
inc
cld
stos
mov
adc
cmp
sub
mov
leave
scas
sub
ret
xor
std
cmc
enter
xchg
inc
push
mov
in
ja
lods
xchg
into
sahf
lods
rcrb
popf
push
cs
ficoms
push
jmp
sbb
add
fs
xchg
outsl
dec
dec
push
cs
jl
lcall
adc
aam
out
fmull
dec
adcb
push
aad
jnp
rorb
sub
mov
mov
mov
xorb
incb
hlt
dec
mov
ss
xor
and
arpl
ds
aas
push
mov
in
mov
mov
dec
add
jmp
sub
call
add
xchg
sbb
jnp
dec
movsb
or
pop
je
mov
push
and
ret
es
stos
xor
mov
cli
pop
mov
jge
dec
inc
mov
jl
xchg
mov
mov
jmp
aaa
pop
sub
cli
mul
insl
pop
enter
in
clc
int
ret
add
xchg
ret
push
push
sub
adc
mov
in
lods
xor
into
and
mov
sub
mov
into
push
sub
int
ljmp
clc
sbb
xlat
and
stc
dec
jae
mov
cld
inc
lcall
std
lea
inc
rorb
loope
idivl
in
inc
pop
mov
loopne
mov
jmp
lret
daa
adc
divb
aas
adc
cmpsl
dec
mov
add
sub
pop
ds
in
lret
or
jae
mov
xorb
stos
sub
xchg
mov
dec
pop
ljmp
add
sbb
adc
leave
pop
jl
cmp
or
sbb
mov
mov
loope
jne
int3
testl
pusha
imul
stos
sbb
ja
jb
divl
inc
adc
jae
lods
fs
insl
dec
stos
mov
test
ss
popa
or
stos
xor
add
mov
sbb
pushf
pushf
mov
mov
cmp
pop
cmpsl
inc
fcmovne
aam
sub
ljmp
xor
push
xor
fmuls
cli
int3
loop
xchg
into
pop
cli
fcom
add
mov
cmp
pop
data16
mov
add
arpl
pop
pop
mov
mov
mov
je
pop
add
xchg
das
lods
ja
or
mov
jbe
je
xchg
daa
jg
hlt
jno
push
jbe
mov
pop
mov
jp
adc
icebp
test
adc
pop
hlt
rol
mov
and
pop
mov
adc
movsl
jnp
xor
fistpll
int3
jnp
sbb
add
out
lcall
cmp
sbb
pop
insl
ds
jns
xchg
or
arpl
push
mov
ficoml
dec
popa
divl
sbb
insl
xor
shr
outsl
pop
xlat
add
ret
in
loope
ret
ds
pop
mov
cmpsb
push
std
imul
lret
xchg
lcall
repz
fbstp
sub
jne
add
adc
mov
pop
div
mov
inc
fbstp
decl
test
shr
mov
pop
dec
xchg
mov
push
inc
imul
into
and
aas
into
sub
jge
cmp
sbb
test
in
sti
sub
xlat
mov
nop
or
inc
ja
or
mov
pop
jg
lahf
faddl
sarl
push
mov
loope
xchg
lds
lods
into
roll
mov
mov
mov
add
or
mov
mov
jmp
push
gs
cwtl
jnp
inc
jns
in
fistpl
clc
scas
std
mov
pop
jp
dec
addr16
sbb
jmp
add
sbb
aaa
popf
mov
mov
add
adc
push
cld
std
inc
sbb
lea
dec
testl
cmp
push
ret
inc
iret
dec
in
ja
mov
cmp
outsb
out
push
jl
mov
stos
clc
iret
ret
mov
push
pop
mov
in
in
add
add
xor
andl
sbb
or
dec
bound
repz
mov
dec
aam
mov
add
shrb
jnp
push
arpl
loope
fwait
scas
mov
sti
pop
dec
jle
jae
sbb
imul
fs
ret
rcrl
loopne
inc
mov
mov
lods
push
cmpsl
mov
adc
xor
loop
mov
inc
and
push
xchg
pop
inc
cli
jp
mov
mov
rorb
lods
jb
pop
cwtl
fdivrs
insb
cmpsb
fnsave
adc
and
repnz
and
imul
ljmp
xor
hlt
lds
xor
inc
mov
out
lods
jno
in
sub
test
popa
pushf
dec
and
jne
sbb
stos
or
dec
cmp
mov
push
out
iret
stos
and
pop
inc
xchg
pop
je
inc
fwait
arpl
stc
jnp
imul
insl
sbb
xchg
testl
or
sub
jmp
ficoml
ret
mov
and
add
rcr
lcall
stc
lock
dec
push
push
loope
lret
ljmp
insb
cmp
inc
in
mov
add
xchg
jl
inc
std
add
mov
push
leave
fdivrs
insl
adc
push
fcoml
add
stc
sub
aam
sbb
mov
inc
fimull
out
dec
icebp
mov
rorl
pop
or
mov
pop
xchg
loop
and
push
push
movsl
inc
outsb
std
pop
clc
xchg
sbb
pushf
mov
xchg
repz
ds
ficomps
adc
or
lds
frndint
lock
in
lds
sbb
mov
data16
mov
xchg
dec
adc
js
xchg
adc
push
adc
pop
lock
mov
test
pop
xchg
mov
fisubrs
in
outsl
leave
cmp
inc
ljmp
shl
push
cmpsl
enter
loope
mov
fsubp
jmp
mov
imul
mov
lret
andb
aam
mov
adc
sub
andps
sbb
and
xor
cmc
adc
lods
andb
cmp
push
xchg
cmpsl
fisttpl
or
xchg
fsubl
mov
subb
or
or
cmp
bound
fs
ds
shlb
int3
ja
push
aam
js
clc
inc
movsl
scas
jecxz
inc
push
xchg
into
pop
imul
stos
push
test
cmpsl
add
insl
push
aam
xchg
sub
ljmp
jmp
dec
add
addr16
mov
push
and
shll
pop
sbb
leave
cmp
xor
out
movsb
lock
int3
push
inc
cwtl
stc
call
xchg
add
ret
loop
xor
push
fistps
cmc
xor
jae
in
clc
sub
push
cmp
mov
sub
xchg
adc
push
mov
std
aas
pop
fisubrs
jge
mov
cs
out
leave
lret
jp
fistpl
roll
add
add
mov
pop
jge
out
push
adc
clc
inc
and
cmpsl
gs
sarb
or
xor
shlb
push
mov
cmp
cmp
xchg
out
xor
lahf
sbb
xchg
or
stc
enter
movsl
call
adc
adc
outsl
int
ss
out
push
adc
movsb
out
pop
push
test
pxor
andb
mov
in
push
pop
fsubrs
pop
xchg
add
mov
mov
lcall
lock
stos
mov
iret
cltd
push
jae
and
shll
ss
cmp
stc
in
test
adc
add
add
jb
ficoml
xchg
hlt
mov
adc
sub
test
mov
ljmp
mov
add
out
mov
mov
test
mov
sub
inc
inc
or
push
xchg
lds
iret
xchg
jp
dec
std
je
dec
or
push
mov
jbe
dec
add
push
movsl
sub
iret
orl
aas
sahf
adc
ss
aam
mov
push
sar
inc
or
and
cmc
or
xchg
add
inc
adc
xor
push
or
xchg
loop
inc
inc
cld
ljmp
sub
inc
leave
sbb
adc
mov
bound
push
mov
xchg
nop
rolb
mov
dec
or
mov
addr16
call
imul
rorb
push
scas
jg
inc
mov
mov
clc
or
outsl
and
push
dec
push
xchg
dec
pop
push
adc
pop
dec
popf
xchg
testb
clc
loope
rorb
mov
push
sbb
add
fiadds
scas
jge
dec
xchg
xchg
pusha
sub
daa
mov
icebp
int
or
xchg
outsb
mov
int
in
jo
mov
and
cmp
jo
or
sti
inc
pushl
scas
movsb
mov
xchg
out
test
mov
xor
popa
dec
fs
jb
jae
cmp
jmp
int
xchg
into
cld
cmp
flds
jl
cltd
and
clc
pop
pop
std
mov
hlt
in
add
push
pop
rcrb
shlb
ret
dec
push
das
pop
lcall
sub
jmp
pop
scas
shrl
bound
mov
movsl
mov
fcoms
jno
pop
fxch
daa
int3
mov
stos
iret
imul
mov
mov
push
cmp
jp
xlat
xor
lret
repnz
jp
xchg
xor
xchg
ss
gs
fs
scas
jns
sahf
jmp
add
ret
dec
test
cmc
into
push
adc
icebp
adc
cltd
mov
addr16
mov
jo
cmp
dec
jbe
dec
das
sbb
inc
xchg
adc
hlt
les
loop
push
add
and
dec
xchg
cmp
hlt
push
sub
xor
jp
push
lahf
xchg
movnti
sub
add
sbb
sub
mov
rclb
das
fistl
sahf
sub
xchg
dec
cmp
mov
je
cld
aas
add
sub
mov
test
push
fcmovb
test
xchg
aaa
mov
mov
xchg
nop
fwait
inc
icebp
inc
add
sbb
and
xchg
xor
push
ljmp
dec
gs
mov
cltd
add
repz
xor
cltd
cmp
mov
mov
pop
lahf
imul
enter
outsb
popf
mov
mov
jge
jne
int
adc
cmp
pop
or
lea
adc
outsl
out
out
test
inc
add
or
leave
dec
cmp
sbb
pop
mov
or
ss
xor
les
rcll
or
mov
mov
xchg
push
adc
adcb
add
mov
mov
test
pushf
cmp
or
lcallw
mov
lcall
scas
hlt
add
outsl
testb
push
push
sub
je
mov
push
ljmp
sbb
jno
add
mov
adc
add
lcall
std
jecxz
xor
xchg
and
xchg
lea
cmpsb
call
sub
leave
stc
cwtl
adc
or
xor
sub
mov
imul
lcall
fnstenv
dec
cld
inc
fs
mov
popa
cmp
jnp
ljmp
shlb
test
movsb
clc
jmp
xor
or
inc
and
cmp
or
into
push
or
fwait
lds
clc
ret
in
cli
adcb
pop
push
pushf
dec
scas
adc
cmc
fiadds
jmp
pop
lods
movsb
outsb
mov
xor
lds
std
ss
or
in
mov
add
ds
jge
int3
xor
jb
loope
ds
aad
xchg
pop
jge
call
ffreep
dec
jp
and
adc
data16
dec
jg
or
out
inc
jo
mov
mov
mov
fcompl
xchg
movsl
pop
xchg
rsqrtps
sub
xor
xchg
or
repnz
pusha
jnp
adc
cs
sub
jl
xchg
int
lret
scas
dec
push
stc
inc
cmp
push
ja
sarb
push
or
stc
lds
js
lcall
dec
xor
scas
sahf
jecxz
fdivs
repz
mov
test
mov
int3
and
push
sub
dec
addr16
clc
xchg
or
shlb
xlat
xchg
cmp
jp
sub
shll
mov
scas
fildll
in
mov
fcmovb
sbb
faddl
mov
xchg
das
gs
pop
pop
ficoml
lods
mov
call
ja
cmp
inc
add
xchg
and
adc
inc
push
imul
dec
scas
jg
jbe
insb
pop
outsb
add
inc
shr
movsb
shl
jg
adc
cmp
je
fcomps
push
inc
xor
ljmp
iret
xlat
stos
je
add
inc
cmpsb
rorb
fs
cmp
mov
push
cmp
push
and
inc
jecxz
das
imulb
mov
push
test
outsb
mov
adc
out
aas
jbe
icebp
gs
stos
jge
ret
cmp
push
jle
xor
xchg
sbb
pop
cmp
jg
and
jmp
popa
xor
push
outsl
ror
adc
mov
ret
push
test
mov
out
rorb
iret
jge
sbb
nop
out
pop
sub
and
adc
sub
mov
ftst
pop
add
ja
movsb
lret
dec
mov
ss
int3
fsubrp
mov
cmpsl
jno
test
mov
pop
jp
xor
rorb
sbb
mov
int3
and
and
pop
jmp
mov
popa
mov
test
push
mov
out
jle
jae
push
pop
test
dec
mov
cmp
inc
push
scas
mov
lcall
dec
std
jno
outsl
add
cwtl
adc
jp
cmp
aam
push
cmp
leave
neg
mov
mov
xchg
sarb
lds
popf
outsw
movsb
mov
inc
or
jmp
push
arpl
pushf
jl
es
ds
cli
xchg
leave
ljmp
test
pop
pushf
in
lock
cmp
jne
test
std
mov
or
xchg
pop
jg
add
push
inc
adc
lods
into
lds
popa
ret
fmul
push
cmpsb
mov
mov
es
lahf
or
mov
imul
popf
mov
or
adc
pop
or
je
jns
fucomip
out
popa
je
pop
popf
jns
lahf
pop
pop
push
loop
and
xchg
xor
cmp
int
imul
bound
dec
push
lea
cwtl
es
push
xchg
sbb
sbb
mov
enter
stos
outsl
cmpsl
push
sub
fldl
fstl
jmp
negl
add
inc
cmpsb
add
daa
loop
cli
sub
sbb
les
and
xor
and
pop
sub
nop
and
or
ljmp
mov
mov
es
inc
push
adc
fsubs
xchg
in
inc
sahf
stos
idivb
xlat
incb
cmpsb
jno
xchg
jae
mov
mov
and
mov
testl
shrl
dec
xchg
dec
add
jne
xorl
adc
addr16
pop
sbb
pop
xchg
jae
cli
and
rcrb
nop
mov
cmpsl
lds
push
xor
ljmp
mov
loopne
inc
cmpl
shlb
sbb
mov
pcmpgtb
mov
pop
sahf
insl
mov
pushf
push
dec
adc
dec
cmpsl
and
fsin
pop
push
movsb
sbb
outsl
mov
cmp
mov
jno
or
sarb
movb
push
cltd
dec
div
adc
xor
sbb
insb
imul
stc
mov
mov
mov
rorl
jns
jb
add
shrb
mov
test
pop
lock
fmul
in
out
cli
imul
sub
cmpsl
stos
std
jo
xchg
stos
cld
jp
daa
stos
push
xchg
imulb
pop
dec
leave
cmovo
aam
mov
mov
mov
inc
test
loop
incb
adc
mov
xor
imul
sbb
push
pop
in
outsb
inc
adc
loope
adc
sub
test
mov
stos
int
mov
popf
sub
cltd
push
cwtl
inc
sub
push
adc
dec
sub
and
daa
and
lahf
data16
jne
inc
lret
scas
or
mov
adc
xor
testl
imul
pusha
push
xor
xchg
ret
fcom
inc
pusha
cmp
movsl
adc
mov
out
mov
mov
push
xlat
test
cmpsl
xorl
lahf
test
out
mov
xor
pop
mov
lods
or
ss
ret
jle
inc
in
xor
add
out
mov
sub
popa
push
xor
jecxz
mov
in
lret
mov
mov
and
ja
or
andl
testl
mov
add
iret
jns
mov
or
mov
cmc
loope
or
and
xor
fimuls
xor
xchg
jge
pop
adc
in
mov
cmp
jb
push
repnz
push
roll
cld
fiaddl
das
ljmp
adc
repnz
and
lds
pop
inc
pusha
sub
out
jge
and
sub
push
pop
mov
imul
cwtl
lret
into
cmpsl
jb
xchg
imul
jno
mov
or
xchg
or
js
sub
jecxz
icebp
lret
dec
xchg
stos
out
in
sbb
rclb
add
es
xchg
fmull
xor
roll
and
repnz
jo
inc
cli
shll
add
xchg
pusha
ja
mov
jns
out
xor
call
or
addr16
in
test
mov
rorb
int
inc
into
shlb
into
push
out
or
in
out
push
mov
or
in
add
mov
movl
ja
mov
or
mov
mov
popa
xor
inc
adc
or
push
mov
or
lock
jmp
in
sub
int
sbb
data16
cli
cmp
xchg
out
add
in
sahf
push
xlat
shlb
dec
add
das
sti
xchg
divl
and
xor
push
dec
push
std
ss
cmp
mov
pop
inc
shlb
popa
sub
fwait
push
sarb
sub
cmc
shlb
cltd
inc
dec
sti
je
test
pushf
nop
and
dec
pop
out
icebp
int3
inc
xchg
leave
pop
mov
xchg
ss
inc
icebp
sbbl
aam
lods
ret
loop
push
sbb
adc
pop
mov
int3
and
xor
fistl
out
ljmp
adc
fisubs
shll
enter
pop
sub
ljmp
pop
lcall
ds
push
jo
shr
pushf
insb
jecxz
push
pop
xor
je
mov
lcall
notb
out
std
adc
mov
adc
pusha
mov
data16
pop
xor
push
pop
mov
xchg
jle
sbb
mov
lret
push
sbb
adc
sbb
fisubrl
or
push
xchg
mov
mov
jne
ds
jne
ds
jns
mov
in
ljmp
xchg
mov
xor
lea
shll
movsb
mov
sysenter
imul
and
push
jne
test
stos
movsl
or
adc
jbe
ret
scas
in
mov
add
xor
push
in
pop
loop
js
xor
call
decl
lods
xor
pop
and
scas
in
xlat
jmp
or
rolb
rorl
xchg
sarb
movsl
and
inc
jne
in
mov
sub
nop
idivb
test
dec
std
push
in
pop
int3
je
jne
imul
je
mov
clc
inc
or
es
push
shll
sbbl
inc
lret
insl
push
rolb
xchg
lods
outsl
jecxz
jae
test
pushf
pop
fstpl
xorl
xchg
fldcw
sbb
mov
mov
jmp
adc
push
jl
das
test
mov
push
fimull
inc
dec
add
clc
jg
pop
mov
shrb
repz
ret
test
pop
in
testl
mov
icebp
sbb
adc
aad
les
enter
sar
cs
inc
cmp
cmp
std
sub
xor
xor
push
ficompl
push
jle
insl
imul
push
jmp
sbb
inc
data16
stos
cmp
insb
std
mov
fucomi
adc
jns
dec
mov
inc
add
insb
xchg
push
jl
pop
cmpsb
xchg
das
cmpsl
insb
insl
mov
or
loope
ljmp
mov
sarb
adc
cmp
adc
sarl
out
scas
cmp
jbe
add
out
jmp
cmp
cmp
sbb
xor
movsl
or
mov
dec
ret
pop
add
adc
dec
dec
adc
xlat
enter
and
cwtl
jmp
or
stos
sti
js
push
pop
and
notl
pop
cmp
out
pop
jbe
adcl
loop
push
icebp
sarl
gs
xchg
out
sub
xor
push
dec
mov
cmpsb
pop
xchg
mov
adc
mov
neg
mov
dec
mov
fs
jle
add
xor
pop
lods
xorb
jns
jno
pop
loope
out
outsb
pop
add
loope
in
mov
js
loop
mov
movsl
and
int3
cmc
pop
adc
mov
adc
lret
push
xchg
sub
xchg
popa
and
dec
cmp
fs
in
dec
adc
psubd
pop
ljmp
ficomps
mov
cs
mov
fildl
jb
xchg
mov
test
xchg
xor
test
mov
scas
push
pushf
rclb
int3
test
dec
repnz
fnsave
loopne
cmp
jge
into
pop
pusha
ret
rcl
xchg
xchg
lods
lahf
inc
xchg
cwtl
jb
mov
lret
push
sub
scas
out
loopne
into
mov
push
fmuls
push
mov
cmp
mov
es
repz
sub
mov
leave
mov
mov
cmp
stos
push
mov
xor
aaa
ret
js
sub
and
mov
lret
add
inc
xchg
xchg
pushf
rcl
push
ss
cmp
in
test
ljmp
divl
mov
dec
dec
mov
aam
mov
xchg
ja
mov
paddq
sbb
xorb
mov
out
cmp
cltd
push
pop
das
mov
sub
std
outsl
pop
and
jae
mov
popf
cs
sub
movsb
xchg
jnp
test
fimull
inc
adc
iret
sbb
filds
pop
fisubs
cmp
xor
bound
out
sbb
jecxz
arpl
fildl
mov
jmp
loop
mov
sub
fs
push
imul
lret
lods
movsb
jg
imul
aas
loope
cmpsl
jo
add
fdivl
ja
push
add
mov
dec
out
pop
mov
repz
fstpl
sbb
pop
cmpsb
adc
xchg
jge
sbb
fwait
dec
mov
std
or
add
movswl
push
dec
insl
or
shlb
outsb
jecxz
jbe
sub
insl
dec
or
cmp
adc
ds
push
fdivrs
cld
xchg
aaa
jnp
sub
mov
cwtl
push
gs
int
inc
pop
jp
or
int
stos
xchg
mov
mov
cmp
int
dec
out
scas
mov
arpl
adc
test
ret
loope
lods
or
inc
sub
lods
movsl
aam
xchg
or
mov
arpl
sahf
jge
fs
ficomps
fimuls
dec
mov
xor
aaa
rorb
sub
push
sbb
add
and
loope
mov
sbb
and
out
push
xor
cmp
in
jns
ss
stos
hlt
les
stc
mov
jge
adc
orb
mov
sbb
cmp
cmc
dec
mov
push
aas
pop
add
fwait
xor
inc
pop
mov
and
add
outsb
xchg
popa
dec
or
daa
mov
inc
pop
mov
aad
mov
sahf
and
xor
or
inc
dec
test
les
loopne
rcrl
into
pushf
std
jge
xor
out
inc
sub
cs
sbb
mov
out
stos
inc
sub
and
cmp
div
pop
dec
je
cmp
out
aad
sbbl
fucomp
xchg
mov
inc
in
mov
adc
addr16
add
decb
inc
pop
cmp
sub
lea
mov
shrl
xchg
pop
cmp
je
pop
mov
lods
loope
out
imul
test
sub
cli
inc
cmp
sbb
punpckhdq
dec
add
xlat
cld
pushf
adc
or
mov
sbb
cli
lret
push
adc
jno
std
xor
pop
imul
hlt
gs
iret
leave
mov
or
pop
xchg
cltd
or
in
rolb
push
inc
pop
dec
stos
loopne
icebp
loopne
cwtl
mov
fimull
lds
nop
shrl
mov
push
push
test
mov
push
call
ja
out
push
ret
mov
sub
lret
movsl
sub
pop
add
outsl
cmp
test
ja
fldt
jbe
jb
jbe
inc
mov
xchg
mov
mov
inc
insl
rolb
or
repnz
sub
lahf
js
insb
pop
and
nop
insl
pop
xchg
ljmp
int
and
xor
loopne
and
andl
and
loope
xor
mov
arpl
movsl
push
imul
imul
jmp
std
daa
pop
add
outsl
xchg
jle
pop
or
inc
test
mov
arpl
scas
mov
adc
xor
outsl
sar
cs
cltd
dec
aam
xlat
mov
std
into
in
or
push
test
inc
rol
mov
pop
jl
xor
lret
aas
cmpsl
xchg
push
enter
movsl
inc
push
mov
pop
push
jle
mov
push
cmpsl
mov
lods
mov
mov
jp
popf
cld
lcall
and
jne
inc
test
and
out
aas
enter
jl
clc
sub
in
clc
add
popf
fdiv
iret
lds
mov
arpl
arpl
cmp
pop
xlat
and
mov
and
sbb
loopne
icebp
pop
xor
leave
xlat
sbb
int
negb
adc
arpl
sbb
dec
rorb
scas
cmc
push
inc
push
fldpi
push
or
sahf
jl
cmp
add
xchg
sub
inc
jecxz
outsl
and
push
pop
das
into
in
insb
xor
pushf
pop
cmc
nop
xor
mov
xrelease
in
enter
into
mov
cmpsb
hlt
lahf
fadds
in
xchg
xor
out
outsl
sbb
lock
xchg
cmpsl
in
mov
loop
shrl
lahf
stos
fidivrs
scas
mov
sti
cld
mov
fimuls
fsubs
push
dec
xor
xchg
rorl
sub
jne
fucomip
jge
push
addr16
mov
or
xor
sub
push
mulb
cmp
jbe
mov
lods
jmp
fisttpl
lods
test
mov
je
pop
sub
push
push
aad
push
xor
sub
mov
bound
test
sbb
or
test
arpl
repnz
ss
push
inc
xor
inc
adc
inc
fistl
cltd
push
pushf
sub
outsl
sbb
ror
andb
in
add
bound
arpl
cmp
inc
and
out
in
cld
outsb
xor
pop
inc
inc
cmp
in
daa
jno
sub
pop
add
xchg
andb
sub
and
clc
nop
insb
cld
movsb
and
addr16
mull
pushf
pop
mov
mov
insb
xor
fsubl
sub
fsubs
jle
cmp
mov
mov
xlat
pop
cmp
mov
push
or
xchg
xchg
cmp
cmp
inc
pusha
fldcw
mov
js
jae
pop
out
mov
inc
jbe
lea
aam
xchg
mov
mov
test
add
push
push
sub
jb
shrl
pop
jne
jnp
aas
cmc
jle
xor
and
repz
out
add
xchg
in
or
clc
sbb
mov
lsl
leave
std
sub
sbb
aaa
pop
jmp
and
xor
inc
inc
cmp
cwtl
pushf
xor
test
aaa
out
sahf
daa
dec
lret
mov
xor
or
fbstp
pop
cmp
lret
fdivs
aaa
jl
int3
aad
mov
sahf
add
ljmp
ljmp
scas
cmp
dec
sub
int3
shlb
adc
pop
rclb
cs
xor
or
mov
xchg
repz
mov
imul
outsl
sbb
scas
pop
jae
pop
or
push
xor
or
call
repz
mov
stos
jmp
cmpsl
xor
xor
cwtl
popa
xor
jae
movsl
mov
jns
iret
xorb
push
push
in
push
pop
lahf
mov
pop
ss
mov
int
fcomps
mov
test
jmp
mov
sub
aad
out
leave
data16
pop
test
bndstx
lods
or
xchg
push
in
lock
push
or
andb
jne
push
cltd
mov
lea
popf
popf
pop
jnp
jp
mov
sbb
or
mov
imul
xor
or
pushf
dec
add
sub
je
aad
cmpsb
mov
popf
xlat
mov
jecxz
mov
adc
jns
mov
mov
xor
xor
xor
outsb
add
mov
cmpsl
pop
dec
xchg
ss
rorb
pop
push
xor
sbb
rolb
scas
gs
xchg
cli
sbb
jecxz
dec
or
or
pop
std
jg
pushf
push
in
mov
dec
push
jmp
inc
cmp
mov
push
sub
arpl
pop
movb
jmp
pop
cmpsb
imul
fldenv
inc
push
lods
inc
dec
adc
testb
jp
inc
adc
enter
test
insb
cltd
outsb
and
xchg
movsl
cmp
jbe
inc
cmpsb
sbb
popf
fcmovu
inc
ds
add
popf
fs
in
xlat
xor
adc
fldenv
mov
aad
jg
fmull
inc
shll
ds
cmpsb
lea
insb
inc
rcll
clc
sbb
int
add
and
dec
mov
fcoml
pop
xor
mov
cltd
inc
inc
les
adc
sub
out
jns
jl
and
jge
fdivrp
dec
cmp
pop
ds
pop
js
mov
cmp
sub
inc
lcall
inc
scas
push
gs
imull
adc
sub
jl
enter
lods
call
lods
cld
lret
jl
adc
dec
rcrl
ja
mov
inc
or
xor
cmp
mov
sarb
mov
rcr
xchg
mov
in
imul
cmpsb
mov
mov
jno
adc
and
inc
inc
pop
aam
sbb
xor
out
mov
loopne
loope
cld
mov
mov
aam
ret
and
lods
sahf
ja
mov
cmp
iret
sbb
push
xorb
jne
or
fsub
jg
add
shlb
adc
mov
les
out
sub
sbb
movsl
sarb
aaa
fistl
mov
call
rcr
mov
js
pushf
and
or
arpl
loopne
cwtl
mov
xchg
test
push
fadd
jae
or
pop
lea
adcl
cltd
adc
insb
adc
cmp
xor
fidivrl
inc
loope
sarl
sbb
test
dec
jge
call
add
in
in
loopne
xchg
aas
dec
lahf
in
loope
jno
stc
cmp
lahf
mov
ja
pop
mov
mov
jo
jb
shrb
lea
int
in
xor
jo
fcompl
xchg
xlat
push
out
xchg
jmp
das
movsl
mov
push
xor
xor
cmp
jae
js
push
push
loopne
or
inc
sbb
rolb
sti
aas
cmp
inc
fsqrt
stos
fs
insl
add
fcoms
sarb
pop
stos
jge
pushf
push
inc
ss
push
rorb
sbb
xchg
inc
lds
lret
cmpsb
dec
xchg
rorl
sbb
scas
cmp
jg
popf
jbe
out
fimuls
in
fistps
sub
mov
sub
shlb
ljmp
cltd
icebp
subb
lret
push
jo
jmp
and
dec
dec
cmc
mov
test
out
jae
fstpl
fadd
out
push
inc
daa
sub
xchg
cs
xchg
lret
inc
ret
push
inc
and
sub
sbb
xchg
jmp
jge
sar
mov
ficoms
cmp
test
sbb
jnp
outsb
xorl
adc
adc
aaa
pop
cmp
pop
adc
jmp
and
negb
or
and
ja
mov
cs
out
dec
or
rorb
push
push
push
cld
aam
sbb
data16
xor
xor
mov
gs
sbb
arpl
cmp
lods
xchg
or
faddp
push
pop
pushf
in
xchg
mov
cltd
flds
stos
test
add
rcll
sbb
or
dec
test
dec
sub
ljmp
jne
jae
pop
pop
subb
loop
jp
in
mov
dec
push
jg
lcall
jns
out
sub
xlat
inc
gs
dec
cmp
test
pusha
mov
pop
sbbb
out
push
outsl
popa
cmc
inc
mov
mov
int3
ds
cmc
mov
cs
inc
aam
rorb
cmc
inc
sub
pop
jo
xchg
mov
cmpsl
and
jmp
inc
jg
jge
das
lea
inc
in
movsb
scas
cmpsl
mov
xlat
xor
ljmp
inc
in
dec
mov
addr16
pop
push
xchg
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
loope
pop
pop
xor
jge
pop
jp
push
es
jns
cld
in
cmp
push
push
aam
pop
inc
sub
fldt
fs
or
clc
cmpsb
mov
dec
jecxz
mov
roll
fmuls
fwait
nop
fldl2t
xchg
and
sub
mov
push
mov
fsubl
cmp
rep
icebp
sar
xchg
and
insl
pop
push
adc
mov
je
movsl
cmp
or
add
xor
rcll
and
jae
mov
test
inc
sub
sub
leave
subl
faddl
mov
jle
cli
sbb
jae
gs
pusha
jp
add
pop
in
rolb
test
cs
in
in
add
test
mov
loope
mov
pop
cld
or
mov
out
pushf
inc
jo
xchg
pop
fadds
push
dec
mov
dec
test
push
mov
xor
add
mov
sbb
in
in
jp
xchg
imul
xchg
fildll
inc
out
shlb
call
dec
ss
sub
sub
inc
adc
int3
clts
fiadds
out
loopne
mov
fptan
inc
mov
outsl
pop
push
fstl
and
sub
pusha
push
jle
xchg
out
mov
and
pop
sti
pop
and
lods
rclb
scas
cmpsb
dec
data16
or
iret
popf
test
and
push
cmp
push
xchg
in
fchs
jmp
push
and
dec
ret
aas
pop
inc
fwait
dec
out
cmpsb
repz
inc
lret
mov
or
mov
sub
arpl
pop
or
lret
clc
aad
call
lcall
loop
in
stos
inc
scas
xchg
add
push
mov
mov
jno
pushf
fadds
sarb
xchg
sahf
jp
in
xchg
xor
mov
xchg
outsb
jg
xor
cmc
mov
ljmp
sahf
dec
cmpsl
xchg
pop
and
and
in
push
xchg
mov
jg
jecxz
and
mov
out
xor
jecxz
bound
pop
xlat
into
adc
ja
in
inc
ss
les
lds
adc
hlt
stos
sub
outsb
dec
cmp
xchg
pop
fmuls
aas
jle
lock
inc
xor
and
jne
and
xchg
sbb
fsts
xor
jb
sub
out
mov
lods
sub
adc
mov
lahf
mov
outsb
fwait
into
xlat
sub
fidivrl
pop
pop
mov
inc
gs
dec
pusha
jl
jl
insl
andl
sahf
pop
inc
xchg
ret
xorl
lods
xchg
out
sbb
pop
inc
sbbb
popa
aad
dec
or
lret
sbb
divl
xchg
sub
add
push
stos
int3
je
push
mov
jge
inc
lock
daa
fistps
enter
es
daa
inc
xchg
subl
mov
dec
aas
movsl
jp
stc
je
stos
lea
sub
push
imul
dec
push
sbb
dec
xchg
dec
movsl
pop
cltd
ret
sub
and
ljmp
lods
sub
fiaddl
cmp
jle
test
leave
and
mov
mov
sbb
out
inc
arpl
or
mov
ret
cs
and
adc
adcl
dec
aaa
mov
and
jne
out
mov
inc
cmpb
adc
sarl
ljmp
or
pop
lods
repz
in
pop
mov
stos
xchg
test
mov
mov
fadds
push
push
sub
mov
aaa
leave
cmpsb
es
sar
fwait
xchg
outsb
in
mov
das
mov
xchg
enter
push
shl
hlt
std
add
or
repz
into
mov
call
push
rcrl
out
subl
outsl
push
lcall
jns
cmp
imul
sub
xor
xchg
lcall
add
bound
push
fisubl
push
test
sub
dec
shlb
cwtl
mov
stc
jge
sub
test
dec
add
fstp
call
rolb
ljmp
bound
scas
inc
sub
or
sbb
sbbb
test
push
xor
cld
jnp
mov
push
cmp
adc
fs
adc
xchg
lahf
scas
add
ds
mov
popl
inc
lock
in
out
ds
xchg
cmp
xchg
mov
cmp
ret
sub
push
xor
sti
mov
nop
loopne
ja
insb
pop
push
pusha
xchg
cmp
or
ljmp
xor
xchg
je
shr
mov
or
popa
in
push
adc
xchg
push
xchg
movsl
mov
pop
inc
mov
inc
jno
in
clc
iret
loop
scas
cwtl
xor
xchg
gs
mov
add
ffreep
add
xor
jg
push
jb
adc
shl
jnp
scas
mov
push
push
std
jmp
adc
lcall
clc
ret
fs
jns
add
out
adc
pop
flds
push
and
mov
in
xor
sbb
pop
dec
add
mov
xchg
fildl
les
jno
nop
mov
sbb
or
sub
dec
mov
mov
out
xchg
adc
push
and
sub
popa
mov
xor
cld
dec
or
orl
rcrb
loope
test
dec
fstpl
ret
lock
in
inc
outsl
out
pop
stos
xor
es
mov
dec
sahf
insl
mov
inc
xor
repnz
inc
pop
dec
dec
push
cmpsb
das
jnp
add
pop
ss
mov
sub
xor
push
sbb
adc
jb
pusha
xor
cmp
sarl
cmp
lahf
mov
cmp
adc
fadds
aaa
mov
xor
movsl
movl
mov
in
push
imul
cwtl
shlb
enter
jmp
add
cmp
in
add
test
adc
notl
jle
adc
adc
inc
lods
mov
xchg
jmp
das
jp
scas
daa
push
out
es
repz
mov
cmp
and
mov
popa
leave
add
sbb
inc
cmpsl
insb
lea
jnp
gs
in
sub
lcall
adc
mov
pop
dec
ljmp
nop
popf
mov
push
add
movsb
dec
cld
pusha
or
mov
leave
pushw
mov
inc
negl
dec
mov
cmp
jae
fnstcw
add
test
jo
lahf
out
xor
data16
sahf
xchg
daa
cwtl
aas
push
movsb
addb
sub
push
or
jecxz
cmpsl
dec
xchg
xchg
addr16
mov
sbb
pop
sbb
mov
aas
mov
and
repz
jl
fildl
inc
inc
mov
xor
jno
pop
xchg
out
fwait
push
shrl
sub
push
enter
xor
dec
sbb
pop
sub
into
inc
in
sbb
xchg
xchg
pop
inc
dec
insb
jne
mov
out
scas
lods
scas
push
ja
popf
mov
inc
adc
jae
out
scas
insl
in
fldenv
aam
or
xchg
js
fmul
pop
stos
pop
ror
pusha
push
cmp
shl
icebp
subl
xchg
rol
in
iret
mov
cmp
jae
test
inc
pop
leave
xchg
lods
cmp
mov
mov
cmp
cmp
adc
negl
ds
popf
add
push
mov
push
jmp
dec
cmp
imul
cld
movsb
mov
mov
repz
inc
and
arpl
sub
cmp
popf
scas
int
inc
ficoml
jo
add
mov
scas
sbb
fisubl
mov
add
loope
sbb
pop
cld
test
iret
or
mov
movsb
add
lret
cmpsb
jno
sbb
or
out
cmp
mov
outsb
lock
out
adc
sbb
dec
dec
pusha
mov
sub
ror
adc
cmc
push
shrb
or
loopne
and
push
add
sahf
daa
int
jmp
shr
adc
cmp
lock
cmpsb
xchg
jnp
lahf
ffree
orl
fucomp
cmp
sbb
add
push
inc
aas
jg
in
dec
mov
loope
jle
flds
mov
mov
push
lret
mov
jge
cmp
sub
pop
dec
dec
pop
sub
sub
fmull
aam
fdivs
adc
add
je
lret
insl
sub
sbb
lods
mov
mov
add
push
dec
mov
popa
inc
aam
cmc
jl
cmovns
das
mov
push
ret
xlat
rcll
clc
stos
sbb
pushf
shrl
imul
xchg
xor
jbe
pop
clc
sbb
out
shlb
sbb
out
push
push
daa
or
clc
or
arpl
add
gs
dec
cmp
out
sahf
test
lods
cmpsl
cmpsl
sub
call
jns
fisttpl
in
push
lea
fsubs
or
test
repz
add
in
xor
out
or
or
mov
scas
mov
lds
push
sub
shrl
sub
mov
repz
xchg
push
or
xchg
mov
xor
mov
adc
int3
xor
test
mov
mov
jge
xchg
dec
popf
jnp
xor
outsb
lock
sbb
cmp
pop
jge
pop
xchg
mov
mov
dec
lret
addb
repz
int3
pop
inc
lahf
adc
out
out
adc
fdivrs
mov
loopne
int3
cltd
call
shlb
data16
dec
and
push
fcmovnbe
push
cwtl
inc
or
mov
pop
or
test
add
cmp
popf
lds
cmp
jle
les
jns
push
out
negl
adc
int
aam
xchg
inc
jne
mov
lock
push
rorb
pop
pusha
sbb
or
jp
mov
pop
push
fdivrs
sbb
push
sub
inc
xchg
rclb
inc
dec
and
addb
xor
loop
jno
mov
sub
mov
fwait
xchg
scas
adc
das
jnp
push
jo
push
stos
lods
cmp
mov
cmp
pop
dec
or
mov
in
pop
imul
movsl
cmp
dec
lret
jmp
xchg
int3
jge
sar
push
movsl
popl
xor
fisubl
lods
mov
out
in
adc
loopne
fisttpll
adc
sbb
adc
flds
jb
lea
sbbb
mov
lahf
pop
xchg
jne
push
test
cld
fwait
mov
insl
shlb
outsb
std
jne
jl
shrl
mov
push
int3
mov
loopne
enter
cltd
out
daa
hlt
enter
loopne
leave
call
mov
cmpsb
adc
mov
out
adc
rorb
into
icebp
nop
outsb
mov
sub
shlb
inc
jns
jnp
bound
dec
sbb
or
std
sub
xchg
cltd
mov
pop
enter
xor
leave
xchg
pushf
lock
notl
mov
icebp
addr16
mov
xchg
pop
adc
inc
or
and
jmp
sbb
outsb
addr16
add
cmpsl
cmpl
sub
mov
lret
cs
xchg
and
insl
push
and
inc
push
push
xchg
fidivl
inc
xchg
mov
mov
and
les
sbb
stc
in
xchg
cwtl
cmp
fidivl
mov
repnz
cli
dec
fbld
xchg
sub
push
shl
ds
push
pop
fsubr
pop
inc
cs
call
imul
mov
inc
mul
cmpsb
inc
xor
out
imul
das
mov
out
inc
testb
mov
dec
add
xchg
jecxz
jmp
mov
imul
jbe
or
repnz
lahf
sti
sub
popf
push
ja
cmp
aaa
mov
sbb
push
jnp
sub
xor
in
sbb
test
out
inc
sub
fs
add
icebp
inc
int
lock
xor
add
mov
in
mov
call
and
pop
sub
push
sub
and
push
push
xchg
cmp
or
push
das
pop
jg
sbb
and
sbb
sbb
adcl
push
sbb
imul
ja
stos
mov
xlat
shll
inc
sbb
gs
mov
mov
js
scas
cmp
cmc
xchg
pop
or
clc
push
cmp
mov
stos
mov
sub
test
vmovsd
xchg
in
daa
sbb
iret
daa
outsl
aad
mov
sti
ljmp
push
mov
cmp
push
cwtl
icebp
add
out
xor
int3
mov
fucomp
jb
outsb
leavew
mov
dec
jne
and
push
cmc
popf
addr16
sub
pushf
loop
popa
outsl
xor
pop
cmp
or
push
rol
movsb
int
leave
sbb
lds
mov
sti
jle
push
mov
mov
int3
sub
xor
cltd
je
loop
in
sub
inc
or
add
mov
or
xchg
push
jl
iret
sti
pop
je
rcrl
push
gs
mov
xchg
inc
fldcw
xor
add
xchg
xor
stos
xchg
insl
xchg
mov
cli
sbb
mov
jp
cs
mov
jbe
mov
sub
pop
enter
test
push
push
sarb
jae
aam
jno
aas
aas
fcomp
addr16
repnz
int
jmp
imul
cwtl
inc
cli
insb
stc
push
into
add
mov
adc
push
adc
shr
mov
scas
in
sbb
or
pop
cmp
mov
inc
mov
scas
push
orl
sub
sub
mov
and
aas
dec
mov
push
fisubs
pop
and
fiadds
and
and
push
push
push
fists
xchg
dec
mov
loope
pop
xor
popf
adcb
lods
jne
cli
insl
lods
test
xor
test
cmp
sarb
movsl
scas
mov
sub
rcrb
std
add
push
nop
mov
out
pushf
xlat
pop
xchg
neg
ss
add
mov
lcall
or
daa
and
stos
shrl
mov
ss
jns
adcl
outsl
add
lock
mov
xor
jbe
mov
shrl
movl
add
cmp
call
xchg
shll
push
mov
cmp
xchg
cmp
adc
jg
xchg
sbb
jl
pop
mov
clc
sbb
jg
cmp
movsb
int3
mov
cmp
movsb
andb
mov
xor
fisubs
mov
out
and
in
mov
mov
fisubl
sahf
rorb
cmpsb
das
jmp
jg
mov
jmp
add
xchg
rorl
sub
jmp
inc
inc
pop
sbb
rclb
xchg
jbe
pop
xchg
shrl
fs
mov
out
jo
imul
imul
or
int
iret
sbb
sbb
mov
rclb
pop
push
mov
cmpsl
xor
push
cwtl
mov
notl
out
insl
push
mov
int3
int3
mov
fldt
loope
enter
jge
lods
insb
xor
movl
jl
sub
mov
jl
loop
test
rolb
sahf
add
pop
int3
xor
and
pop
sub
shr
mov
fsubrl
mov
in
and
lret
movsb
lea
sahf
in
or
xor
shll
into
jg
addr16
and
lret
sub
or
mov
testl
fistpl
mov
pop
pop
adc
loopne
lret
out
or
pop
xor
bound
adc
idiv
cld
and
xor
pushf
and
xchg
xchg
or
push
xor
cli
loop
add
add
mov
ljmp
cmp
inc
adc
js
adc
dec
stos
xchg
imull
lods
pop
and
sub
addb
jnp
jle
and
ret
add
ljmp
jl
shrl
sbb
mov
fsubrl
cmp
jb
jecxz
mov
insb
inc
mov
lock
in
adc
pop
bound
sbb
int
xchg
ljmp
scas
rorl
jmp
xchg
push
and
pop
adc
test
pop
inc
in
popf
fcomps
sbb
out
fistps
xor
xchg
in
and
adc
mov
pop
loop
loopne
push
pop
lods
aas
dec
mov
lock
push
lods
insl
sub
sub
push
daa
xchg
jg
jge
xchg
insb
imul
add
cmp
rorl
mov
push
ds
adc
test
rorb
xchg
pop
mov
cld
das
fdiv
pop
inc
pop
inc
retw
and
mov
mov
je
pushf
xchg
or
out
fs
mov
xchg
sahf
mov
inc
cmpsb
mov
sahf
and
jg
stos
jne
sub
sbb
into
das
sti
or
rcrb
inc
xlat
movsl
mov
cmc
mov
cltd
and
push
test
arpl
mov
inc
dec
xchg
push
mov
adc
ds
xchg
aam
mov
and
push
push
int3
movsb
ret
xchg
insl
lds
shlb
stos
push
js
sub
and
xor
fidivrl
js
fdiv
fisubrs
mov
jl
inc
inc
sub
cmpsb
pusha
xchg
push
pushf
lds
mov
mov
rorb
mov
push
imul
insl
pop
push
pushf
in
adc
sbb
dec
xor
inc
lcall
mov
mov
pop
xchg
icebp
dec
repnz
mov
cmp
test
mov
mov
lret
xchg
in
ss
hlt
outsl
mov
iret
push
out
xchg
mov
push
ret
mov
adc
popf
inc
sub
shrb
bnd
inc
sbb
cmp
mov
mov
mov
popa
daa
das
xchg
iret
adc
push
xchg
ds
push
pusha
mov
inc
mov
jno
push
mov
imul
push
inc
icebp
jge
adc
mov
mov
andb
out
sarb
push
enter
mov
std
inc
xor
sbb
cwtl
nop
inc
mov
cmpsb
xchg
das
faddl
into
push
or
pop
mov
fstpt
outsl
lcall
xor
movsb
enter
iret
shlb
mov
lret
arpl
in
cwtl
adc
dec
add
pusha
xchg
xchg
ljmp
mov
dec
pop
in
push
dec
mov
or
lahf
test
shrl
out
sbb
sub
inc
outsb
and
int
test
xchg
movsl
xor
xor
pop
push
shrl
das
incb
adc
sub
mov
mov
int
ret
jmp
cmp
dec
fs
pop
push
mov
loopne
das
fiaddl
mov
mov
mov
push
add
push
dec
fbld
sbb
addb
xchg
test
xor
repz
pop
mov
pop
ss
stos
insl
push
cmpsl
and
and
cmp
ds
mov
aas
mov
pop
ror
xlat
sbb
xor
out
xor
pop
mov
sbb
sbb
inc
mov
rclb
mov
negl
mov
cld
mov
loope
fdivrs
lahf
lds
add
adc
push
mov
sbb
arpl
xor
cmp
cmp
lcall
iret
fdivrs
fxch
jno
adc
sbb
xchg
cmc
enter
shl
cltd
ficoml
mov
test
dec
sub
fldl
fidivrl
push
ljmp
xor
ds
in
add
mov
xor
xor
dec
popa
arpl
cmp
leave
pop
push
mov
jbe
scas
pop
pop
les
xchg
and
adc
in
pop
inc
inc
stc
iret
pop
out
xchg
test
ficompl
mov
cwtl
js
jb
mov
insb
sub
aad
xor
inc
daa
mov
cmp
dec
xchg
out
jns
cmp
cs
mov
lods
mov
xchg
mov
or
fsubrs
add
mov
rcll
test
lods
fnstenv
outsb
cli
daa
leave
sbb
xchg
std
fs
in
out
lcall
mov
xchg
dec
clc
rclb
movsb
inc
and
cld
arpl
inc
notl
xor
or
sahf
iret
cwtl
dec
scas
rcl
icebp
mov
add
push
nop
fists
jo
jge
stos
test
dec
push
cmc
fidivl
mov
sub
roll
mov
int3
xchg
sbb
scas
rcrl
rcrl
pop
xlat
cmp
jecxz
lret
dec
shl
mov
dec
dec
cmpsl
leave
fs
les
mov
out
cwtl
ljmp
jno
aad
ret
outsl
shll
out
mov
jnp
xchg
pop
cli
push
mov
jbe
test
sbb
dec
inc
xchg
js
mov
mov
cmpsb
xchg
inc
fsubrp
outsb
or
pop
popf
repz
xchg
testl
fdivrl
loop
fwait
les
fisubs
xchg
subb
mov
push
out
lret
mov
or
inc
jns
push
dec
sbb
push
dec
jp
mov
sbb
inc
xor
cli
lods
ja
lcall
std
sbb
mov
sbb
mov
sub
dec
inc
repnz
cmp
filds
xchg
jnp
ds
lods
lock
sub
mov
mov
cmp
dec
and
repz
add
cmp
add
sarb
jo
fwait
les
push
scas
stos
nop
mov
cltd
repnz
lods
mov
fs
xchg
jo
push
test
jno
fcompl
jb
das
fstpt
push
cmp
sub
sub
icebp
pop
cltd
mov
push
ja
movsl
mov
ja
stos
push
pushf
cwtl
lahf
jnp
xlat
loop
lds
mov
xchg
mov
jge
sub
inc
mov
pop
aam
add
pop
stc
mov
push
pop
cmp
cmp
xor
push
sbb
out
adc
repz
fsubs
jae
test
cmc
xchg
jns
mov
mov
inc
cmp
loope
cmpsb
jp
cmp
pop
or
ss
shrl
push
in
mov
xlat
mov
lods
mov
xchg
xchg
popf
push
sub
mov
add
push
cs
loop
and
dec
mov
cmp
sbb
outsb
jb
ds
lcall
clc
repnz
lret
mov
inc
sar
xchg
scas
inc
das
arpl
in
sub
shll
mov
lods
inc
push
sbb
and
cmp
pop
xchg
ficoms
cmpsl
mov
push
cmp
out
jl
cli
daa
mov
outsb
dec
inc
push
addr16
push
push
mov
stos
rorl
xor
add
subb
add
cmp
insl
lds
lahf
je
sbb
inc
xchg
icebp
inc
xchg
lret
or
cs
and
dec
jb
fcompl
inc
mov
cmpsl
dec
mov
sahf
lahf
or
popa
scas
out
pop
ljmp
or
test
dec
inc
push
filds
leave
imul
aad
mov
mov
or
sti
pop
and
or
test
pusha
adc
shll
movnti
outsb
cmpsl
inc
addl
cli
adc
push
int
cli
cmp
fnstcw
and
std
ja
xor
xor
jmp
mov
cmpsl
inc
push
popl
xchg
jge
push
sbb
scas
fsubrs
adc
xor
test
out
mov
xor
mov
sbb
int3
les
adc
xor
fs
jg
sub
insb
mov
lret
test
pop
mov
out
xchg
insl
jae
and
pop
test
std
lret
dec
mov
cmpsb
pop
cmp
scas
in
cltd
enter
roll
sub
rcr
int
sub
mov
cli
pop
mov
mov
pop
mov
mulb
mov
mov
push
mov
add
jb
jle
shl
rorl
daa
fcmovbe
ljmp
mov
fldcw
fistpll
mov
in
lret
imul
xchg
mov
dec
ret
sbb
sub
hlt
or
jne
repz
sahf
int
fdivrs
push
cmp
cmpb
mov
mov
sbb
out
push
xchg
jge
addl
xlat
idivb
lea
leave
adc
push
mov
push
cltd
scas
icebp
push
xlat
mov
xchg
out
or
fmulp
dec
mov
enter
stos
pop
sub
cmpsb
ja
jge
inc
frstor
in
and
and
push
dec
movsl
jg
popa
push
and
xor
sti
fisttps
pop
and
inc
or
data16
cmp
pusha
adc
add
jmp
or
int3
cmc
xor
out
inc
movsl
adc
mov
xchg
jae
cmpsl
mov
push
mov
fsubrl
loopne
mov
pop
test
cs
mov
shl
cmp
daa
xchg
popf
push
test
pusha
paddw
fnstenv
xchg
add
sbb
dec
jle
pop
sbb
sbb
sbb
jo
hlt
faddp
mov
out
cmp
ds
jnp
adc
stc
mov
cmp
sbb
push
jbe
jbe
jge
jecxz
movb
mov
mov
into
decl
xor
adc
out
fsubrs
or
stc
outsb
or
cwtl
in
mov
in
cmp
rorb
cltd
pop
out
xor
movb
fisttpll
xchg
out
adc
rorl
push
jno
fdivr
sahf
mov
jnp
ret
out
push
adc
xchg
bnd
imul
dec
scas
out
mov
pop
cld
jle
outsb
add
jmp
mov
in
mov
test
xchg
cmp
mov
popa
jmp
jecxz
mov
enter
xchg
aad
sbb
popa
enter
out
sub
loop
int
and
clc
lcall
dec
pop
push
and
stos
fwait
xor
pop
mov
sbb
out
sub
insl
mov
jae
adc
out
enter
adc
jg
inc
jp
dec
cmp
jecxz
lods
adc
cmpsl
dec
test
xor
lds
pop
shlb
mov
sbb
push
xlat
pop
dec
ds
out
add
fldz
adc
fbstp
sbb
mov
cmp
xor
xchg
jecxz
jl
jmp
mov
mov
cs
mov
adc
push
daa
aas
es
shl
mov
push
xor
xor
stos
iret
sarb
jp
adc
lds
outsl
mov
sub
cmc
adc
lret
rcrb
push
pop
pushf
cmp
divl
test
sbb
js
in
outsb
incl
lods
mov
mov
xchg
clc
xchg
mov
gs
jne
or
out
arpl
rcrb
inc
pop
pop
jne
stc
in
add
fdiv
push
xchg
insb
and
ja
in
cs
cmp
loope
dec
and
add
inc
xor
repnz
cmp
dec
lods
mov
adc
fwait
sub
mov
mov
shrb
int3
int
jns
fidivrl
inc
fs
push
into
adc
ljmp
iret
sti
adc
pop
in
pop
clc
sbb
and
pop
cmp
pop
gs
std
jo
stc
das
jmp
mov
pop
jns
stc
lret
mov
scas
pop
xchg
cltd
inc
and
sbb
add
lret
aam
mov
or
loop
les
cmpl
lahf
iret
js
jae
mov
js
jno
mov
ss
out
or
sbb
adc
xor
cmp
cmp
test
imul
dec
mov
lods
dec
loope
jg
nop
or
cmp
loope
dec
rcll
pop
fsub
xchg
cmp
popl
dec
iret
pop
out
je
movsl
jae
pop
push
out
mov
jp
popa
and
int
cli
shlb
pop
pop
das
add
mov
mov
jecxz
mov
popa
data16
push
jb
xchg
mov
dec
xchg
mov
inc
mulb
and
addr16
mov
mov
dec
cltd
movsb
repz
xchg
add
cmp
fadds
fnstenv
out
mov
xchg
inc
iret
out
or
push
mov
xchg
fcmovbe
cmp
xorl
loopne
jnp
inc
fwait
popf
mov
out
mov
scas
dec
pop
stos
aad
nop
xlat
xchg
xchg
jmp
inc
dec
sub
fmul
inc
fptan
or
lds
test
mov
in
jne
push
or
inc
pop
or
lds
inc
into
jg
jle
and
inc
das
movsl
xchg
imul
cmp
es
test
or
pop
fwait
xor
and
and
xchg
and
adc
cli
cmp
pop
loop
mov
add
repnz
idiv
daa
push
pop
push
lret
ds
roll
jmp
mov
in
dec
sub
add
filds
mov
and
jmp
iret
je
mov
push
sahf
in
out
mov
or
test
popf
mov
ja
xor
daa
ds
cmp
leave
jmp
xor
jns
lods
shl
insl
dec
lock
jns
sub
push
adc
mov
out
pop
dec
iret
cmp
xchg
bound
cs
adc
adc
cmc
mov
stos
test
mov
inc
push
aam
push
xchg
pop
dec
inc
jg
inc
xchg
jne
push
sub
pop
sar
dec
mov
std
mov
jmp
and
leave
mov
or
inc
in
mov
mov
pop
pop
fistps
hlt
pop
out
push
mov
xchg
sbb
fcoms
push
pushf
dec
jle
lahf
insl
jp
cltd
rorb
inc
rorl
sti
aad
in
sub
sbb
or
push
push
add
mov
jp
mov
jae
out
addl
in
dec
and
pop
sbb
xor
mov
outsl
jo
mov
das
addl
cmp
stos
cmpsl
inc
cmp
jg
xor
je
fildll
add
jbe
xchg
mov
gs
sarl
mov
jmp
arpl
push
roll
outsl
mov
mov
aas
repnz
or
pop
jae
or
pusha
push
sahf
out
push
lds
je
add
bound
dec
inc
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
nop
jp
mov
or
pushf
dec
aaa
fildll
mov
icebp
ss
stos
test
jl
je
xlat
cmc
push
testl
daa
orb
mov
mov
cmp
add
dec
add
jo
insb
sbb
lahf
lods
js
test
ljmp
stc
ds
jne
add
xchg
daa
outsb
push
push
sbb
sub
enter
push
aas
xor
and
add
jbe
sub
lods
imul
mov
popf
fucom
popf
clc
js
mov
stc
clc
cmp
push
pop
or
mulb
and
xor
mov
leave
adc
pop
pop
cmp
sub
mov
dec
stos
jbe
add
imulb
fnsave
lock
scas
out
out
cmp
mov
repnz
jne
test
add
lahf
int
xchg
xlat
jbe
pop
mov
or
das
fldcw
push
jb
pop
dec
dec
xor
aas
add
pop
mov
sahf
pop
int
movsb
cltd
and
divl
in
mov
out
into
dec
pop
lahf
xchg
dec
dec
loopne
stos
xchg
sub
push
mov
gs
jno
sub
xor
xchg
jle
out
mov
mov
sbb
mov
stos
sbb
cmp
push
mov
dec
mov
in
sub
divl
mov
pop
xor
mov
mov
leave
movsl
mov
push
pusha
pop
scas
cld
aaa
mov
xor
adc
xchg
repnz
je
pop
sbb
sub
add
nop
shl
in
jb
xchg
out
out
nop
or
fsubr
mov
pop
and
insb
lahf
pop
icebp
ret
xor
out
mul
notl
xchg
xor
dec
bound
jecxz
jns
ds
daa
popa
push
ds
lea
push
fdiv
lods
sbb
adc
test
push
sbb
adc
icebp
pop
in
fidivl
pop
loope
adc
dec
and
pop
ret
not
pop
inc
sub
aam
ret
adc
mov
imul
lcall
push
insl
xor
out
movsl
iret
call
fistps
je
inc
jae
xor
cmpsb
test
add
push
bound
fistps
push
test
dec
push
addr16
inc
jl
xchg
shll
or
in
cmp
fnstsw
add
or
sub
pop
lahf
das
pushf
adc
mov
jns
pop
ss
insl
mov
add
std
mov
pushf
adc
or
stos
rorl
jle
inc
pusha
jg
sbb
fnstsw
into
ret
enter
std
dec
lods
add
shl
push
shll
dec
imul
leave
and
les
mov
inc
movsl
mov
daa
mov
rorl
std
test
sti
aad
lods
mov
call
mov
sbb
sbb
insb
push
les
ss
adc
inc
jo
scas
lock
sbb
fdivr
jo
fucomi
cmp
and
pusha
les
je
les
and
icebp
scas
or
pop
ror
sub
cmpsl
lea
mov
or
stos
xchg
call
lcall
lock
shlb
lds
pushaw
add
aaa
js
mov
dec
adc
pop
out
movb
mov
xlat
mov
dec
inc
in
or
mov
mov
out
cmp
nop
fdivl
or
in
aad
jb
pop
scas
imul
xchg
push
and
out
lea
pusha
pop
mov
xor
mov
out
and
cmp
jmp
push
rol
ja
dec
aam
jmp
popa
mov
and
add
leave
not
pop
mov
addr16
ja
mov
dec
mov
aaa
xor
dec
iret
not
lods
cmpsl
shrl
fistpll
enterw
enter
test
mov
adc
sti
dec
xor
inc
je
pop
out
jecxz
fisubrs
jl
push
imul
lret
je
pop
div
cmp
sub
nop
jb
int3
push
cs
mov
in
jae
mov
xchg
fnsave
mov
cs
int
in
add
mov
pop
lcall
add
and
add
dec
xchg
push
pop
pusha
movsb
repnz
es
xchg
sti
lock
sti
add
lcall
push
jp
xor
iret
sbb
loop
push
std
mov
cmp
mov
add
mov
repnz
xchg
test
xor
fstps
jg
or
xchg
rcll
cld
xlat
jg
xchg
arpl
fmuls
lcall
inc
pushf
push
or
pop
push
xchg
repz
or
das
out
in
dec
sub
ror
sub
enter
or
cltd
mov
jge
xchg
nop
out
push
and
push
test
cmp
pop
insb
dec
test
or
lods
sub
data16
std
dec
mov
lods
cld
pushf
cmc
rcrl
mov
add
xor
or
jecxz
jns
cmpsl
mov
icebp
lret
sahf
sbb
push
xor
xor
shl
das
xchg
jge
cmp
out
or
inc
inc
jns
jns
xlat
or
js
out
mov
dec
inc
popf
test
subb
pusha
inc
sub
inc
movsb
xor
adc
fs
insb
pop
push
mov
sbb
mov
insb
int3
adcl
push
inc
jl
test
test
sub
rcrl
jmp
pop
adc
push
lret
cmpsl
cli
scas
in
xor
dec
mov
pop
mov
jno
adc
sbb
aam
loop
cwtl
fmuls
xchg
ss
mov
cmp
push
mov
add
clc
inc
imul
mov
mov
mov
cmc
enter
popa
or
mov
xchg
push
lods
push
je
jb
inc
mov
pop
pop
in
enter
xchg
jno
inc
xchg
aaa
cmp
push
jle
ret
mov
cmp
roll
movntps
lock
ljmp
or
pusha
mov
mov
pop
dec
pop
xchg
mov
loopne
and
ss
jecxz
add
negb
sub
xor
test
shl
pop
mov
xchg
insb
xchg
jno
fwait
mov
cli
mov
or
out
push
shrl
cmp
es
lock
into
dec
fsts
xor
lods
xor
fimull
in
dec
inc
data16
stc
xchg
mov
cmc
sub
enter
dec
rsqrtps
test
xchg
divb
jae
test
into
pop
int
lea
stos
cmpsl
jl
movsb
es
mov
pushf
push
xchg
pop
movsb
cltd
mov
mov
jecxz
or
or
cmc
lds
xchg
pop
inc
jbe
mov
and
fwait
cmp
imul
add
mov
hlt
popa
mov
push
test
ret
add
orb
sbbb
icebp
and
stos
jbe
mov
push
faddl
jg
in
cmp
lea
pop
sub
xchg
insb
and
sti
inc
and
xchg
test
or
mov
xor
mov
inc
rcll
and
hlt
loopne
inc
loop
aas
xlat
xor
outsb
push
and
inc
test
lods
and
mov
sbb
aad
mov
clc
dec
fists
jbe
inc
jnp
push
or
xchg
cltd
orl
aas
mov
push
sbb
mov
adc
into
pop
test
sarl
cmovg
cli
cmpsl
imul
incl
dec
jns
insb
lods
das
lds
in
mov
rclb
cmpsl
inc
pop
sbb
cmpl
jl
mov
shll
cmpsl
jmp
repnz
pop
data16
hlt
das
hlt
mov
add
pop
cltd
mov
cli
mov
mov
aas
mov
jns
push
pop
jnp
repnz
add
shr
xchg
and
nop
ljmp
cmpsl
call
ds
jp
fwait
mov
in
pushf
and
aam
xchg
xor
inc
cltd
scas
add
stos
adc
mov
or
mov
xchg
xchg
push
mov
out
nop
jmp
push
dec
ljmp
test
out
clc
movsb
call
and
pop
jae
call
hlt
out
push
inc
out
jbe
ljmp
jl
icebp
je
bound
adc
adc
dec
rcrb
xchg
pusha
mov
mov
lret
outsl
adcb
push
ret
sbb
cs
je
and
mov
cmp
pop
mov
pop
ljmp
loope
sti
adc
enter
xchg
adc
call
add
sub
mov
popl
rcl
das
ret
fisttpll
push
fmuls
jns
inc
loope
pop
pop
or
ud1
cli
jb
daa
mov
out
jnp
cmp
bound
aaa
sub
push
sbb
mov
push
push
enter
sarl
popa
inc
sbb
sbb
jg
xchg
imul
xchg
pop
adc
imul
pop
pop
iret
jnp
js
mov
lret
and
mov
fstpt
pop
xor
daa
and
outsl
cld
imull
test
mov
add
dec
mov
cltd
fsubrs
test
jge
lahf
fdiv
or
inc
movsl
jl
xchg
inc
out
jg
jb
jmp
and
and
xchg
mov
sahf
shll
sbb
or
jno
addr16
pop
jecxz
or
decl
adc
jae
out
mov
push
out
pop
in
in
adc
xor
or
dec
int3
xor
ja
sbb
add
insb
js
dec
mov
push
xor
scas
push
pushf
xchg
cmc
std
stos
xchg
adc
push
sbb
mov
jae
mov
xor
ss
outsb
out
jg
dec
push
mov
and
mov
dec
ja
adc
and
leave
xchg
pushf
enter
fwait
test
enter
push
scas
xchg
bound
jb
push
lcall
in
out
xchg
mov
or
rclb
mov
mov
push
das
push
fs
add
scas
lahf
dec
jb
mov
lahf
cld
jno
not
lahf
notl
repz
fld
fbstp
je
inc
dec
mul
aam
xchg
and
cmc
or
jmp
pop
aad
inc
dec
mov
daa
add
cmpsb
mov
xchg
in
in
insb
dec
loopne
rcrb
subl
adc
xchg
mov
inc
iret
ret
dec
xor
push
std
shrl
sti
jb
shlb
sbb
add
push
repz
or
ss
sti
in
push
aas
bound
mov
pop
enter
cwtl
lahf
adc
pop
mov
adc
pop
lock
dec
pop
stos
fwait
insb
nop
imul
mov
icebp
mov
jbe
test
jge
loop
hlt
add
scas
insl
in
adc
mov
push
mov
push
in
insb
jp
push
mov
fwait
push
cmp
lret
mov
xchg
das
cwtl
enter
jne
or
fisubl
mov
mov
mov
sub
pop
and
repz
mov
jb
pop
mov
sub
lret
ficomps
push
mov
adc
add
or
fs
loope
push
pop
out
ljmp
pop
leave
push
jg
sarl
push
lock
pop
push
pop
jmp
iret
mov
inc
jmp
lods
mov
fildl
xchg
sahf
pop
orb
pop
pop
bound
je
xor
jmp
outsb
dec
xchg
fwait
xor
leave
sbb
xchg
jno
leave
pop
push
loopne
add
mov
dec
mov
jmp
adc
mov
fidivrs
xor
sbbl
jle
popw
mov
in
pop
mov
leave
mov
adc
pop
and
test
push
call
or
sbb
arpl
cmpsb
es
push
rol
and
pop
jge
in
add
data16
out
jle
jg
sub
pop
dec
outsb
sbb
aaa
in
ret
std
cmp
scas
outsb
cmp
mov
mov
dec
popf
xor
or
stc
mov
leave
shll
lock
pop
dec
call
sub
ret
dec
lret
dec
pushf
inc
mov
scas
mov
xchg
les
fs
mov
or
pop
jle
lahf
mov
shlb
into
jno
stc
mov
scas
clc
xlat
insb
imul
jmp
rclb
fists
cmp
popa
sub
aaa
fwait
cmp
push
xorl
xchg
jle
mov
sahf
movsb
jnp
xchg
jae
sahf
add
out
sbb
push
xchg
out
sub
in
xchg
rorb
pop
pop
enter
out
js
mov
dec
and
ss
aaa
mov
inc
inc
repz
sbb
std
fiaddl
adc
pop
mov
stos
mov
mov
outsb
push
cltd
mov
lret
jnp
outsl
loopne
fimull
out
or
and
arpl
mov
jle
lods
nop
cmpsb
add
outsl
sbb
mov
mul
insl
inc
fwait
in
mov
in
pop
pop
push
pop
and
faddp
out
rolb
dec
xor
or
in
imul
test
mov
sub
ss
push
xor
dec
lods
fnstcw
push
pushf
mov
lret
addr16
js
subb
out
jnp
movsb
out
cmpsl
xchg
addr16
das
jmp
cmp
xor
dec
cmp
xchg
cld
sbb
insl
mov
adc
mov
shlb
cwtd
cmp
dec
repz
cmp
outsb
imul
mov
and
jle
mov
sarb
int
xchg
rcrl
pop
fiaddl
add
in
sbb
xchg
fisubl
movb
jo
ja
mov
gs
jg
and
xor
sarl
jg
mov
enter
sub
lret
rcl
fisubl
jg,pt
shr
sbb
or
test
subb
xor
sbb
push
mov
sub
mov
call
fmull
lock
xchg
sub
jae
dec
daa
scas
lcall
or
andl
mov
dec
cmp
movsb
push
dec
jne
nop
mov
outsb
jge
cld
and
icebp
mov
imul
es
js
mov
xor
xchg
add
imul
loope
daa
dec
xchg
sub
rorb
in
cwtl
fbstp
mov
mov
cmpsb
ljmp
ja
mov
push
nop
push
cmpsl
mov
xchg
loopne
jl
fisubl
lret
dec
pop
sahf
jp
push
andb
ret
push
lods
adc
shrl
cmp
aas
mov
fisttps
mov
scas
inc
adc
jge
icebp
je
adc
adc
mov
push
int3
sbb
pop
xchg
xor
flds
jg,pn
dec
aaa
outsl
inc
lods
lods
add
mov
and
mov
sub
cmp
roll
mov
pop
pop
mov
inc
mov
cwtl
std
ja
mov
in
push
shlb
movsl
insl
add
scas
notb
aas
mov
cli
stos
mov
and
adc
or
lock
adc
sbb
mov
pop
xchg
insb
sahf
or
and
insl
in
loopne
pop
fwait
inc
xchg
popl
ljmp
jge
lahf
push
ret
bound
fstl
pop
sub
and
out
mov
xchg
xchg
dec
shrb
xbegin
sti
es
outsl
adc
adc
data16
out
jns
jno
scas
dec
jp
jge
lea
mov
movsb
daa
movsl
popf
pop
and
sar
insl
je
push
mov
inc
push
jecxz
xchg
jae
dec
pusha
cmp
mov
jmp
arpl
cmp
push
lea
and
leave
mov
rcr
test
cli
out
leave
mov
jae
xchg
cmpsl
pop
clc
mov
inc
pop
xchg
dec
stos
test
stc
push
movsb
fsts
mov
cmp
push
fmul
mov
jnp
movsl
data16
and
push
sub
loop
int3
jl
push
dec
xor
addr16
pop
rcll
xchg
icebp
pop
and
mov
andl
call
inc
add
sub
clc
fwait
cmp
xchg
nop
fwait
imul
dec
pop
dec
xchg
stc
scas
cmp
xchg
mov
add
jge
jmp
add
jmp
xorl
lock
mov
stos
dec
sbb
xchg
mov
push
adc
push
push
inc
shl
clc
push
cmpb
popf
test
daa
int
stos
dec
int
or
inc
lahf
in
popa
pop
cmp
cmpsl
es
aad
or
pop
push
inc
mov
mov
imul
data16
cmp
out
enter
fwait
and
push
adc
xlat
cmp
nop
mov
or
cld
imul
mov
cmpsl
fdivrl
mov
in
xor
in
xchg
mov
decl
pushf
mov
pusha
sub
ja
or
mov
loopne,pn
inc
mov
inc
pushf
xorl
enter
stc
movsb
pop
add
dec
dec
ret
pop
fs
xchg
loopne
lret
idivb
rorb
mov
ret
arpl
push
jbe
mov
dec
nop
fwait
sarl
jp
sub
pusha
nop
xchg
ret
fimuls
inc
jge
cld
negb
lods
sub
inc
mov
xchg
lea
testb
push
dec
ss
jg
pop
lock
orb
jno
scas
pop
es
ja
aad
mov
or
sbb
fstp
aam
je
mov
and
mov
fnsave
repnz
lock
fildl
dec
cmpsl
pop
fsts
nop
test
jl
lea
out
push
shrb
or
nop
fwait
xchg
add
scas
inc
fistpl
in
and
add
aaa
inc
sarb
inc
loop
mov
push
int
add
ds
std
sbb
icebp
push
in
or
fbld
cli
dec
pop
mov
ds
adc
pop
rorb
push
add
xchg
or
and
daa
or
add
je
jae
pop
enter
dec
lods
inc
arpl
mov
and
adc
jp
dec
sbb
dec
mov
rorb
and
leave
rolb
lret
hlt
adc
dec
xchg
dec
or
fisubl
icebp
xchg
fstpt
iret
iret
iret
sbb
int
imull
mov
mov
pop
shrb
pop
mov
nop
jo
data16
outsb
movsl
mov
lret
cmpsl
adc
popf
or
xor
sti
mov
inc
sub
imul
das
in
ret
jle
adc
scas
add
inc
cltd
xor
popf
pop
test
mov
ficompl
in
cmp
test
lods
ds
pop
sarb
adc
out
insl
movl
pop
sahf
iret
xor
out
push
in
ss
stos
das
mov
cmp
fdivl
dec
adc
cmpsb
sbb
sub
sar
fistl
xor
repz
xor
dec
add
ljmp
filds
mov
or
adc
sub
enter
into
scas
in
push
dec
jo
bnd
lret
aam
jle
inc
push
mov
adc
cmp
incl
sarl
test
popa
or
push
lds
testb
enter
mov
and
jle
xchg
mov
pushf
xor
add
add
add
nop
popa
iret
fldl
leave
popa
jge
sbb
mov
mov
xor
test
push
cmp
jae
ficompl
mov
movsb
test
xlat
xor
pop
add
jo
jg
das
ror
push
fadds
jecxz
loopne
cmc
inc
fldt
jnp
xor
push
mov
and
cmp
loopne
cmp
inc
lea
sarb
in
and
sub
iret
outsl
sbb
addr16
into
mov
push
fs
or
leave
mov
ja
dec
rorb
iret
cmp
cs
js
adc
xchg
scas
scas
mov
jno
fisubrs
push
mov
test
pop
dec
add
pop
push
push
add
iret
test
lds
pop
nop
movsb
mov
fildl
ss
std
ret
mov
cs
or
popf
sub
xor
mov
mov
sbb
sub
sub
jmp
lea
daa
cltd
icebp
add
sbb
xor
cltd
cld
cs
clc
daa
gs
dec
addr16
dec
cmp
scas
leave
cmp
repnz
sub
adc
mov
out
mov
je
push
xchg
fisubrl
pusha
cmp
dec
fstp
jecxz
inc
and
rclb
and
inc
loopne
adc
push
imul
dec
lods
imul
incl
adc
xor
das
repnz
cs
cwtl
outsl
or
xor
and
dec
push
cli
add
adc
push
int
dec
xor
mov
movsb
mov
lods
inc
std
xchg
repnz
mov
or
mov
mov
es
sub
dec
jecxz
add
icebp
stos
into
lock
rclb
xchg
bound
push
inc
loop
mov
push
sub
movsl
clc
ret
lock
pop
rcrl
lds
imul
dec
jmp
mov
adc
fs
jge
adc
out
jae
adc
xchg
fiadds
cs
je
test
push
pusha
mov
jmp
hlt
shlb
inc
std
push
push
inc
and
pop
xchg
mov
dec
loopne
mov
testl
gs
cltd
adc
in
xchg
and
divl
jbe
in
es
cmp
and
jmp
jg
sbb
jp
test
adc
jne
jbe
push
rorl
xchg
mov
mov
xor
xor
out
mov
lret
out
shl
and
testl
and
repz
cs
cmp
nop
inc
fisttps
mov
jmp
pusha
pop
idivl
cli
ja
adc
mov
pushf
pop
lcall
jp
sub
lret
push
sub
push
sub
mov
aam
or
iret
or
mov
mov
hlt
pop
fs
test
inc
cwtl
pop
in
adcl
push
fstps
pushl
xchg
iret
inc
or
pop
inc
push
jo
xchg
cwtl
dec
fsubl
aam
inc
in
mov
adc
and
mov
adc
xchg
out
cmp
or
pop
cmc
or
adc
cmp
inc
push
add
dec
adc
xor
mov
jmp
jo
ss
pop
out
orl
out
cmpsb
pop
cmp
lret
imul
inc
rorl
xchg
daa
sub
out
aaa
mov
bound
and
loopne
mov
or
outsl
fisubrs
push
stos
sub
flds
mov
adc
negl
cwtl
subb
sahf
test
clc
xor
orl
lods
sbb
xchg
mov
and
jbe
movsl
xor
cltd
and
adc
adc
notb
andb
inc
pop
sbb
lcall
fstpl
icebp
inc
dec
mov
push
xchg
push
sub
xor
jp
mov
add
cmp
jge
out
push
mov
adc
or
out
pop
outsb
pop
adc
push
daa
mov
addr16
roll
push
mov
push
push
daa
rcrl
sub
into
dec
outsl
enter
sbb
jno
inc
aad
ret
inc
jle
mov
jle
xorb
fnstsw
xchg
popa
jecxz
cmpsl
mov
cmp
and
negl
and
or
sbb
sub
adc
xchg
inc
xchg
xchg
sub
xchg
jp
imul
xor
mov
add
into
sbb
or
testb
jl
fsubr
fs
loop
jmp
sahf
idivl
stc
test
jp
shrb
jne
mov
xor
aaa
sbb
arpl
negb
pop
lock
inc
repz
mov
mov
dec
stos
add
mov
pop
inc
xchg
clc
sub
cwtl
clc
or
inc
jecxz
nop
call
inc
ds
cmpsl
mov
in
cmpsb
fnstcw
push
xchg
xchg
xchg
add
add
filds
xchg
in
in
repz
cmc
inc
out
inc
in
nop
xlat
mov
sub
rcl
sbb
mov
push
orb
testl
icebp
out
lods
fs
lods
ffree
pop
xor
inc
leave
icebp
add
out
cmp
cmp
bound
mov
mov
sbb
mov
cmp
jmp
inc
int
inc
fdivrs
push
cmp
push
jnp
mov
inc
insl
inc
ret
fidivrs
dec
mov
gs
stc
sub
pop
dec
xor
movsb
inc
je
add
push
sahf
add
xchg
pop
mov
cmpsb
test
loope
lret
divb
or
jnp
cld
cmp
cmp
daa
into
icebp
popl
stc
cmpsb
inc
or
fwait
aaa
jp
pop
icebp
inc
int3
in
mov
mov
push
sbb
inc
mov
adc
jnp
sub
adc
js
les
and
mov
inc
clc
loope
sub
pop
out
popf
and
inc
inc
pop
les
push
arpl
pop
jnp
test
xchg
xor
nop
clc
arpl
xor
push
sub
test
and
das
mov
fisttpll
mov
dec
xor
cmp
inc
mov
jmp
cmp
fidivs
cmc
movsb
dec
loop
pop
out
jb
inc
mov
or
insl
fs
in
cmp
push
int
xchg
rclb
and
mov
mov
sti
das
inc
jge
mov
in
push
bound
arpl
movups
mov
pop
ja
cwtl
idivl
loopne
mov
mov
xchg
xchg
sub
les
mov
mov
fstpl
test
xchg
add
adc
imulb
mov
cwtl
out
jecxz
push
out
dec
add
inc
cmp
lods
push
sub
ficoml
cltd
js
insl
push
xchg
dec
dec
sbbl
std
pop
push
das
mov
mov
rol
and
mov
rcr
jecxz
push
dec
aaa
mov
jp
add
loopne
jg
jmp
push
sub
mov
sbb
mov
or
jb
or
mov
add
adc
ja
xchg
movsb
stos
outsl
push
xchg
iret
mov
sub
mov
push
and
out
adcb
pop
xor
lods
dec
test
js
jae
clc
fbstp
sbb
insb
mov
aaa
stos
mov
cmp
dec
pop
data16
mov
xchg
mov
xchg
adc
insb
insb
lods
cmp
ja
xorl
cmp
addr16
cwtl
dec
cmp
loope
jge
fidivs
xor
adc
incb
jbe
shll
mov
add
pop
jnp
mov
adcb
jnp
mov
mov
sub
daa
mov
push
or
mov
pop
pop
iret
lods
xchg
ret
lods
in
and
push
xchg
mov
push
cmp
or
cmp
out
ja
lea
fs
cmp
in
inc
ror
insb
enter
popf
arpl
pusha
adc
cmp
adcb
fistps
lcall
sbb
movsb
jnp
jmp
sbb
cmp
sub
dec
jp
mov
cmp
out
inc
cmp
jb
loope
rcrl
adc
mov
adc
rorb
in
or
push
in
and
mov
loop
adc
sbb
push
jle
mov
stos
mov
shlb
mov
int
lods
aam
enter
ret
test
rorb
dec
out
push
ret
xchg
adc
or
inc
xchg
cmp
mov
fdivr
jmp
or
outsb
in
js
xor
and
lock
xchg
ficompl
lds
daa
sub
jns
imul
mov
xchg
iret
jle
push
sbb
loope
cmp
xlat
add
repz
jecxz
cmp
xchg
cmp
mov
push
push
leave
scas
pusha
lds
dec
clc
sbb
nop
lret
imul
js
inc
add
divl
movsb
shll
ja
lods
dec
pop
icebp
cld
cltd
cmp
arpl
and
dec
push
lcall
sub
repz
clc
jmp
and
sbb
xor
or
jb
cltd
daa
pop
sbb
sub
sahf
insl
sti
test
pop
and
xchg
xor
inc
ljmp
sbb
pop
or
sahf
cmp
xchg
sbb
jne
movsl
js
shrl
jle
jns
or
bound
inc
jg
mov
out
das
mov
aaa
ds
add
push
sbb
mov
mov
inc
daa
fwait
or
loop
cmp
cmpsb
outsb
in
mov
inc
mov
int3
test
inc
pop
je
adc
mov
aas
enter
scas
xchg
pop
repnz
mov
cltd
jae
rcrl
sub
xchg
xchg
cmp
cmp
scas
notb
sbb
pop
jge
mov
push
pop
popl
nop
mov
jno
clc
jo
iret
pop
jge
or
lret
xchg
dec
cmpsb
add
js
add
cmpb
sub
inc
loop
ret
push
xchg
int3
and
add
adc
ds
inc
clc
push
add
cmp
test
lret
adc
mov
test
into
pop
lahf
ror
mov
jno
inc
mov
ds
mov
mov
testl
loopne
push
cmpsb
xor
push
pop
loopne
call
jmp
and
mov
fadds
sub
pop
test
cmp
rcrb
mov
pop
cmp
shlb
daa
nop
pop
mov
fistpll
xchg
in
inc
push
or
cwtl
inc
imul
incl
dec
sub
out
repz
xchg
stc
test
ficompl
dec
fwait
mov
lock
addr16
mov
lods
dec
cmp
and
ljmp
pop
push
mov
test
xchg
in
xchg
fneni(8087
shlb
mov
in
addr16
in
popa
das
fcoms
pop
pop
loopne
sub
adc
jmp
pop
jne
iret
or
out
fucomp
pop
xor
mov
aas
cmp
cmp
fdivl
stc
bound
push
in
push
iret
lcall
adc
lock
adc
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
xor
jmp
jp
pop
jp
xchg
nop
mov
in
adc
pop
jbe
adc
lcall
daa
sub
int3
push
jl
mov
mov
and
into
and
hlt
pushf
add
out
into
pusha
adc
lea
lret
inc
fmuls
popa
jb
mov
push
or
add
cmp
cltd
lret
outsl
sti
daa
dec
mov
lock
cmp
sbb
jbe
cmpsb
scas
sbb
nop
test
jmp
pop
lock
fnsave
mov
xchg
mov
outsb
jmp
rcl
dec
inc
mov
dec
push
mov
dec
xchg
out
jns
mov
cmc
xor
jno
ds
add
subb
sbb
test
xor
push
sbb
hlt
pop
imulb
push
stos
dec
add
pop
lock
stos
pop
mov
push
push
aaa
mov
and
xchg
dec
mov
xchg
push
jg
mov
dec
scas
sbb
xor
adc
sti
bound
testl
push
sub
cltd
mov
jecxz
rcrb
dec
imul
mov
xchg
test
dec
test
mov
scas
mov
pusha
mov
idiv
fidivl
rcrb
ss
sbbl
cmc
aas
sarl
hlt
mov
pushw
mov
or
cmp
xor
mov
dec
shl
sbb
push
mov
imul
push
bound
sahf
or
repz
sub
mov
aaa
xchg
dec
jbe
dec
inc
and
ret
out
into
and
cmp
jl
inc
push
or
movsb
idivb
daa
je
add
sti
mov
sahf
outsl
mov
sbb
insb
jmp
adc
push
pop
pop
aaa
adc
pusha
fnstenv
inc
lods
out
popf
inc
ret
sub
jno
push
inc
hlt
into
lock
push
dec
das
mov
sbb
je
or
jno
fcompp
xchg
mov
dec
pop
mov
repz
mov
pop
imul
shll
ja
dec
jns
aad
adc
cmp
and
cwtl
dec
pop
push
int
push
pop
negb
dec
push
icebp
xor
and
xor
cld
adcl
jb
lea
popa
cmpsb
sarl
pop
lock
mov
pop
pop
xchg
repz
xor
lret
push
incl
lods
dec
test
push
push
and
mov
repnz
sbb
aas
lea
cld
or
mov
rep
jno
xor
nop
sub
sbb
and
pop
icebp
out
jo
pop
inc
mov
sbbl
dec
call
notl
cmp
int3
sti
sub
xlat
inc
mov
push
repz
dec
iret
and
int
dec
inc
jno
fnsave
loope
xor
scas
mov
stc
decb
and
in
lods
adc
dec
movl
jne
pop
pop
in
or
sub
or
test
cmp
jo
mov
jns
inc
lea
int3
pop
cmpsb
pop
jnp
and
xchg
cmpsw
sub
xor
xor
stos
insb
push
push
dec
push
cmpsb
inc
in
dec
cli
mov
dec
xor
mov
in
cltd
push
xor
sbb
jl
movsl
in
jmp
jl
push
pop
fisttps
mov
mov
inc
ljmp
jo
dec
test
and
dec
mov
idivb
add
xor
sahf
pop
loop
mov
sub
loopew
pop
dec
pop
pusha
loop
dec
enter
xor
adc
repz
push
jns
out
and
pusha
and
dec
cli
bound
int
push
outsl
or
mov
rcl
mov
popf
pop
imul
dec
lea
pop
jp
test
cmp
sbb
mov
mov
adc
add
mov
sub
ds
pop
pusha
or
cwtl
sub
pop
pushf
mov
aaa
pusha
dec
imul
enter
in
int
cmp
lret
or
lds
out
repz
shrb
test
jg
out
movswl
popa
scas
cmp
dec
rcr
cmp
pop
nop
sti
pop
cs
jle
mov
insl
jle
cs
mov
jbe
loopne
pop
push
ds
notl
or
aad
mov
out
or
and
sbb
or
pop
inc
insl
in
leave
daa
cld
jo
repnz
syscall
push
inc
mov
into
frstor
or
dec
fdivp
scas
fwait
xor
add
mov
sub
add
adc
insl
inc
mov
cld
cmp
xchg
push
xchg
sbb
adc
xchg
dec
pop
sbb
insb
or
dec
pop
adc
mov
das
imul
int
mov
cltd
arpl
sbb
hlt
inc
sbb
les
ja
jecxz
or
mov
in
lahf
cmp
gs
push
idivl
xlat
dec
lock
cmp
sbb
and
jnp,pn
mov
lret
inc
gs
fldl
or
sub
fadd
repz
sbb
pop
pop
out
nopl
cmp
pop
js
pop
xchg
scas
sbb
stc
mov
cld
int
adc
das
dec
std
fs
in
or
cmp
or
movsl
mov
cmpl
cmp
sbb
xchg
dec
testb
jl
add
pop
sub
adc
test
lret
popa
dec
clc
out
lods
scas
push
or
loope
pop
inc
inc
cmp
jb
mov
jp
xchg
lahf
cmp
rcrb
mov
lahf
fs
ret
jae
out
jbe
sub
jecxz
pop
and
sbb
fstpt
out
in
mov
scas
mov
push
pop
ffree
push
push
stos
stos
sbb
sbb
cmpb
mov
sub
sbb
mov
lahf
ja
mov
jns
stc
jo
xchg
jbe
xchg
push
sahf
add
xor
ret
mov
dec
mov
or
test
dec
jl
xor
in
out
mov
sahf
sub
push
sahf
test
jmp
xchg
adc
push
cld
sbb
mov
mov
jo
dec
aam
pushf
pusha
idivb
lret
cmp
mov
adc
jnp
and
push
push
lcall
ret
nop
sarb
push
rorl
mov
daa
pushf
add
fdivs
testl
cmc
dec
push
and
pop
add
or
xchg
mov
or
ja
in
jle
aam
add
adc
movsl
mull
mov
xchg
iret
xor
push
jp
lahf
nop
sub
test
fwait
xchg
cmp
jnp
mov
roll
pop
pop
or
lahf
push
adc
pop
add
pop
sbb
inc
jae
jg
jbe
loopne
jno
sbb
icebp
daa
fsub
push
scas
or
repz
std
das
test
int3
mov
out
push
lret
xchg
pop
out
sbb
cmp
or
loopne
xchg
cmp
test
xchg
mov
popa
inc
xchg
pop
mov
cmpsb
rclb
out
dec
lods
add
loopne
adc
fs
fbld
ds
adc
in
cltd
mov
out
adc
cltd
cwtl
into
lahf
cmc
fwait
outsl
imul
xor
fidivl
mov
aaa
add
xor
jmp
or
dec
out
mov
dec
mov
sti
cmpsl
test
aas
fstl
pop
leave
jge
adcb
sub
cmpsl
ljmp
jecxz
dec
jmp
add
and
jg
sub
cltd
insl
dec
xchg
add
jo
pusha
in
js
test
xchg
leave
jg
fcompl
xor
push
test
mov
add
pop
jle
xlat
add
xchg
pop
push
out
pusha
es
push
es
sti
sub
inc
pop
movzbl
scas
xchg
repnz
xchg
dec
into
lods
pop
fs
insl
fcom
dec
sub
fidivrs
push
repnz
std
sub
dec
add
pop
mov
or
sub
insl
bound
lea
pushf
movsl
xchg
jo
push
sti
push
aam
mov
lret
push
mov
stos
jge
adc
or
push
test
stc
stos
jmp
pop
aaa
fwait
inc
popa
sub
jge
imul
lret
add
cmpsl
xchg
push
push
jb
fstpt
fidivrl
sub
push
ss
out
daa
jp
xchg
int3
iret
popa
push
inc
sub
xor
mov
lret
sub
addl
cmp
and
lock
xor
scas
lods
cmp
jno
jge
rcr
sub
adc
outsl
pop
mov
and
dec
fnstenv
fstpt
or
testl
fadd
mov
mov
and
xor
cld
xchg
inc
in
adc
cmp
rolb
push
sub
or
out
sbb
jne
jmp
scas
mov
cmpsb
loopne
mov
sar
pop
adc
test
scas
pop
insl
mov
xor
or
sub
adc
lds
inc
int
mov
xor
dec
mov
push
sub
or
push
das
xor
xor
or
or
cmp
aam
imul
add
lods
in
movsl
aad
push
jns
repz
push
or
pop
loope
pop
jle
lods
mov
shl
mov
daa
addb
dec
pop
jns
pop
movsl
ret
int
sub
jmp
out
add
inc
cli
adc
aam
cld
mov
in
cwtl
push
scas
or
nop
adc
mov
outsl
add
mov
push
cmp
outsl
sub
inc
sub
lods
inc
ds
loope
mov
mov
es
mov
sahf
in
sub
inc
adc
jge
fistpll
or
mov
mov
mov
xchg
push
in
jg
mov
jmp
test
mov
popa
add
cmp
mov
xchg
mov
psubsw
bound
dec
mov
push
into
adc
shlb
xchg
int3
fbld
sarb
gs
shrb
xchg
subb
test
mov
stos
clc
fstpl
xchg
dec
jae
fwait
inc
repz
xchg
sbb
ds
fs
adcl
and
call
sarb
test
nop
adc
fcmovnbe
into
fnstenv
cmp
mov
pop
mov
push
cmp
dec
fisttpll
mov
jl
inc
out
jae
loope,pn
andl
mov
addb
dec
cwtl
xchg
jge
xor
push
mov
rcll
cmp
out
mov
test
mov
inc
and
sbb
xchg
leave
push
inc
popf
out
sbb
pusha
out
cmpsl
pusha
subl
roll
mov
sar
imul
add
push
lods
sti
and
sub
lcall
adc
sub
dec
addb
cld
push
negb
je
pushf
xor
ficompl
dec
jp
cmp
lock
scas
mov
sbb
test
clc
push
cmc
pop
adc
test
scas
xchg
add
es
add
stos
cli
stos
jge
or
pop
nop
push
leave
push
in
popa
sub
and
cmp
jg
xor
push
movl
loop
inc
mov
push
lods
ret
sub
xor
jl
jl
scas
loopne,pt
xchg
pop
lods
dec
out
pop
jb
jnp
mov
push
cmc
shl
push
ficoms
xor
ljmp
xchg
pop
shl
cmp
addl
in
mov
lds
out
push
lock
cmp
stos
enter
fsubl
shr
jmp
fstpl
jns
inc
add
add
mov
addr16
jae
mov
enter
js
jmp
inc
xchg
call
and
sbb
dec
xchg
fcomi
mov
in
jbe
ret
or
sahf
dec
out
pop
mov
call
sbb
mov
add
mov
adc
push
mov
fwait
xor
xor
dec
loope
dec
sbb
rcrl
rorb
popf
xchg
iret
lods
xor
jbe
sbbl
dec
adc
jle
imul
fstpt
or
jb
fdivs
lods
mov
mov
shrl
jns
jmp
jl
adc
sub
pop
mov
fstpt
ret
jmp
cmp
adc
lds
in
xchg
cwtl
pop
fcoml
cmp
push
mov
mov
xor
mov
dec
add
xchg
push
fdiv
xor
roll
add
dec
outsb
mov
add
adc
adc
insl
fdivrs
repz
sbb
imul
insb
dec
mov
push
inc
add
mov
test
inc
out
add
mov
scas
aaa
add
inc
jo
jg,pn
stos
inc
mov
pusha
sub
xlat
fsubr
inc
adc
das
xchg
int3
sbb
jo
push
mov
addb
out
shll
jo
mov
cwtl
mov
jmp
sar
fsubrp
or
jno
mov
fimuls
pushf
xor
into
sbb
ror
pop
mov
mov
mov
lods
cmp
cmc
in
test
fwait
das
sub
push
mov
adc
dec
inc
divl
mov
out
and
inc
mov
jb
pusha
cmp
adc
adc
cmp
fwait
mov
in
je
lock
jecxz
pushf
decl
sti
inc
xchg
jae
mov
mov
xchg
out
pop
push
xchg
add
lret
test
and
sbb
adc
sbb
fs
stos
mov
out
es
loopne
stos
int3
pop
cmp
add
jmp
dec
pop
and
rcll
pushl
lock
lahf
rclb
sub
dec
hlt
repz
insl
popf
cmc
cwtl
sub
inc
loop
or
daa
insb
dec
inc
mov
pop
or
repz
inc
out
out
pop
jg
xchg
ret
inc
jb
clc
adc
xor
es
inc
or
add
sub
cmp
clc
jmp
loope
cld
xchg
push
popa
ret
in
jo
mov
out
pop
in
inc
leave
cmpsb
xchg
lock
fs
sub
loopne
push
xchg
je
mov
jp
repz
or
push
xchg
aaa
xchg
je
out
out
or
cmp
push
jmp
addl
stos
cltd
test
outsb
mov
out
and
sbb
sub
cmp
add
pop
mov
jle
and
orb
test
outsb
imul
sbb
bound
call
add
jno
push
cmp
fwait
ror
out
xchg
call
sahf
mov
in
out
pusha
cwtl
push
daa
movsb
push
stc
mov
outsl
xor
or
int3
std
pop
int
ret
fildll
jnp
sub
movsl
scas
mov
dec
dec
xchg
aas
pop
ret
mov
movsl
fcmovu
loope
test
hlt
mov
sub
jbe
scas
add
push
hlt
sar
and
adc
es
pusha
daa
or
dec
addl
xchg
and
insb
adc
add
daa
mov
push
out
mov
dec
popa
popa
negl
jle
shlb
inc
or
hlt
scas
jp
imul
sbb
xor
mov
popa
daa
or
or
push
cmp
xor
aad
lds
jp
cmpsw
mov
ret
mov
and
mov
push
sub
mov
mov
mov
cmpsl
ds
mov
idivb
cmp
mov
dec
or
push
jbe
mov
push
fs
sbb
or
aas
out
xor
cmp
add
sbb
add
cmp
add
xchg
and
jns
jne
and
shll
stc
push
add
hlt
pusha
cmp
enter
mov
push
call
or
push
outsb
sbb
data16
push
cwtl
cmp
ja
stc
inc
jno
xchg
add
fs
imul
jecxz
fisttpl
mov
loop
or
shrb
arpl
jne
xor
hlt
fnstcw
ret
pop
mov
pop
clc
stos
push
mov
imul
movsl
or
mov
clc
xchg
es
out
testl
push
mov
mov
or
sub
push
cmpsl
orb
xor
fdivrl
das
lods
and
and
out
subb
mov
push
aas
nop
rcrl
xchg
dec
pusha
pushf
mov
mov
outsl
sub
in
iret
inc
ss
pop
adc
inc
pop
push
inc
inc
xchg
movsl
xchg
dec
inc
sbb
sub
cmp
or
adcl
xchg
outsb
dec
movsl
pop
int3
out
fstps
mov
add
inc
and
sub
jecxz
shrb
in
rorl
aas
cmp
jnp
inc
mov
les
imul
divl
mov
pushf
test
roll
add
hlt
add
jg
enter
sub
and
inc
sub
dec
rorl
out
mov
add
sub
add
cli
mov
jae
in
pop
pushf
jns
loope
jl
xchg
lahf
stos
subb
popf
adc
mov
outsb
dec
repnz
cs
jne
arpl
sarl
sub
cmpsl
in
adc
cmpsb
pop
mov
sti
fldenv
in
mov
xchg
dec
lock
mov
ds
jne
xor
pop
aaa
stos
mov
mov
mov
xbegin
scas
in
push
pop
mov
inc
in
push
lret
jmp
mov
xchg
popf
add
mov
push
inc
xchg
pop
add
out
push
rorb
iret
mov
lods
test
movsb
add
adc
dec
test
lret
sub
outsb
push
mov
or
or
into
jo
inc
out
popa
sub
data16
insl
test
shll
mov
dec
and
pop
sub
jne
or
mov
cmpsl
cltd
dec
mov
aas
adc
push
stc
adc
jmp
addr16
sbb
cld
clc
stos
xchg
sub
das
sbb
je
cwtl
mov
and
sub
divb
dec
test
or
or
faddl
imul
call
jbe
mov
repz
dec
mov
pop
xor
inc
xor
aas
jnp
daa
inc
inc
xchg
lock
lods
in
adc
inc
jg
jae
mov
test
ffree
jno
or
pop
xchg
sub
rorb
cmp
dec
sbb
pop
jo
shrb
inc
mov
out
cli
mov
cltd
push
fwait
lock
cmc
jb
mov
stos
shll
push
cmp
push
xorb
inc
inc
push
fs
xchg
push
mov
add
pause
adc
xchg
mov
stc
cwtl
lea
jne
out
hlt
loopne
stc
dec
stc
sti
mov
dec
bound
dec
ss
pop
mov
sub
pop
pop
pop
pop
pop
jmp
sub
lret
or
hlt
push
push
mov
sbb
adc
push
push
and
xor
push
pop
dec
arpl
and
ja
dec
mov
jl
mov
cli
jbe
jbe
test
lcall
lods
movsl
icebp
xchg
hlt
push
dec
pop
xchg
lret
sti
testl
movsl
adc
push
push
xor
enter
add
test
jmp
loopne
ret
psadbw
xorb
inc
nop
mov
pop
lcall
jno
push
jb
pop
mov
insl
sub
pop
es
xchg
sbb
rorb
hlt
sbb
mov
jno
xor
bnd
pop
or
xchg
dec
sbb
in
adc
pop
sahf
jns
fildl
add
mov
out
mov
outsb
jp
mov
pop
add
pushf
push
dec
jp
dec
fstpt
hlt
mov
fs
push
scas
mov
dec
rclb
pop
push
movsl
jno
jnp
aad
nop
push
or
lock
inc
sbb
ljmp
das
xor
push
gs
xchg
add
push
add
add
inc
push
fs
jl
scas
or
test
arpl
mov
adc
xor
scas
test
repnz
mov
call
pop
mov
std
testl
rcrb
lock
ret
setno
into
lock
ror
icebp
lods
pop
lcall
add
push
mov
mov
in
fcoml
enter
xchg
sbb
pop
sbb
jg
sbb
aas
lds
fildl
dec
cmpsl
sub
ret
and
push
aam
out
js
ret
jecxz
lods
push
and
jecxz
pop
fisubrl
sbb
inc
pop
jb
popa
pushf
mov
inc
mov
jp
mov
mov
not
lahf
lock
xor
xor
mov
jb
or
dec
add
lret
mov
movsl
out
gs
es
and
adc
inc
mov
adc
loopne
xlat
pop
xchg
mov
fs
test
and
push
inc
orb
jnp
mov
daa
cmpsb
stc
jae
mov
jge
rorb
call
cmp
lods
or
mov
rol
shl
popf
push
dec
or
xchg
std
cwtl
ja
mov
inc
inc
inc
into
lahf
xchg
icebp
das
roll
jns
mov
fcomps
inc
mov
inc
or
cld
jo
stos
rolb
dec
add
pop
cli
jecxz
jo
orb
ljmp
int3
addr16
daa
push
cwtl
aas
inc
sub
movsb
jno
mov
xchg
xchg
jecxz
arpl
jb
roll
push
inc
xchg
inc
das
stos
add
push
neg
sub
mov
xor
insl
lcall
filds
inc
daa
pop
aaa
in
pop
mov
add
inc
pop
sbb
clc
xchg
in
ffreep
in
xor
fiadds
mov
mov
sub
add
arpl
push
ficomps
icebp
nop
lods
push
adc
cmc
push
xor
mov
add
jg
in
lods
movsb
jo
cld
push
dec
repz
xchg
shr
adc
and
xchg
sbb
pop
mov
stc
jmp
scas
xor
push
mov
cmp
das
pop
adc
lods
mov
sub
push
xchg
ret
aad
in
pop
push
mov
in
outsb
sahf
lahf
rol
and
fdivs
add
fnstcw
loope
scas
sahf
lret
fs
push
shlb
daa
adc
and
inc
lret
call
js
je
sbb
jle
pop
dec
dec
inc
add
repz
mov
mov
mov
cltd
aad
arpl
sbb
mov
or
mov
dec
pop
cmp
sub
cmpsb
lcall
inc
daa
dec
in
sbb
mov
arpl
test
dec
movsb
and
fadd
aas
pop
scas
mov
xor
ja
mov
je
mov
sbb
dec
and
adc
mov
add
dec
or
push
inc
lods
fldl
adcl
mov
aas
ret
addr16
testb
lds
into
inc
jb
or
fmuls
lock
rorb
mov
xchg
pop
ficompl
inc
lret
xchg
aaa
dec
dec
push
push
out
mov
and
ja
mov
and
cmp
sbb
mov
pop
mov
push
ficompl
pop
test
and
out
dec
jns
loopne
pop
lods
sti
adc
pop
sub
call
mov
lods
cmovns
or
mov
mov
xchg
pop
or
mov
imul
dec
xor
mov
inc
pop
and
faddl
jle
cmovae
dec
pop
lret
and
test
xchg
and
ret
cmpb
add
es
sarb
pop
sti
mov
ss
sub
aam
inc
das
test
mov
fisubrs
clc
or
adc
fidivrs
mov
jns
lock
xchg
pop
sbb
jnp
push
insb
ljmp
mov
popf
dec
jle
nop
hlt
fimuls
es
jg
adc
fists
nop
shlb
and
scas
inc
jae
xor
inc
cmp
push
mov
clc
cmpsb
xchg
xchg
inc
sbb
cmpsb
xor
ja
repnz
mov
sbb
cmc
lods
mov
lahf
sahf
sub
and
push
iret
loope
mov
sbb
jg
inc
add
stos
lods
std
push
push
pop
sbb
test
mov
test
pop
popa
aaa
adc
mov
inc
adc
add
jge
test
ret
adc
fldcw
insl
sbb
into
ret
add
lret
loopne
in
loope
jp
push
fwait
and
ds
inc
dec
xor
sbb
or
xor
cmp
fdivr
xor
add
cli
xchg
lock
jnp
fcoml
pushf
les
enter
sahf
mov
out
jmp
sarl
mov
mov
and
pop
test
loope
cmp
inc
push
adc
adc
out
loopne
data16
fdivl
mov
mov
ja
xchg
cmc
mov
dec
in
sbb
iret
ja
je
jp
testl
dec
push
scas
mov
notl
das
cld
icebp
popa
mov
mov
jp
fwait
sbb
pop
pop
jo
sbb
mov
mov
cmc
cmp
jp
jo
clc
push
idiv
dec
pop
ret
and
pushf
push
roll
out
dec
mov
sub
stos
popf
xor
icebp
push
data16
dec
movsl
jb
pop
ds
push
jae
js
push
sub
add
mov
dec
cwtl
inc
aam
rol
push
mov
pop
xor
mov
repz
out
sbb
lcall
jp
in
push
push
test
inc
cmp
inc
ret
test
sbb
sarl
shrl
push
push
ljmp
sub
cmp
inc
jae
movsl
adc
pop
enter
lcall
stos
sbb
mov
andb
mov
icebp
sbb
negb
enter
ss
xor
push
into
push
ret
pop
dec
xlat
mov
lret
cmp
adcl
jp
mov
mov
addr16
mov
jl
js
cmpsl
rol
dec
mov
fldenv
into
sub
out
pop
aas
test
fwait
xchg
loop
es
scas
nop
enter
pusha
lret
je
cmp
xor
lret
nop
jl
mov
outsl
aas
test
push
push
nop
fildl
jne
mov
xor
lea
inc
or
sub
aas
mov
push
pop
testb
aam
dec
cmpb
fisttpll
fcoms
sti
jae
cld
mov
pop
push
jmp
inc
std
mov
mov
repnz
xchg
mov
into
ja
mov
cld
fwait
movsb
das
mov
mov
int
xor
mov
jnp
movsb
pushf
pop
mov
dec
sub
jbe
and
test
fldt
inc
mov
mov
hlt
push
mov
lock
dec
jno
or
xlat
lock
adc
xchg
push
je
test
pop
loopne
std
or
pop
or
data16
lock
scas
pop
jno
test
add
rcrl
inc
sbb
sbb
dec
aam
fnstsw
or
stos
mov
nop
notl
into
nop
int3
xchg
and
std
ja
or
aaa
cmpsb
xchg
sbb
loop
pop
xor
adc
xor
cli
or
add
dec
mov
adc
jecxz
addb
pop
and
in
adc
fisubrs
into
push
inc
pop
popf
mov
lretw
jmp
cli
lods
insb
lret
out
repz
or
pop
cli
ljmp
mov
or
mov
cmp
push
cli
xchg
idivb
popa
or
push
or
and
pushw
cli
or
mov
push
out
lret
movsl
repnz
insl
or
out
sbb
scas
pop
jle
push
fcoms
lock
lea
dec
fnsave
dec
mov
and
pop
neg
jo
bound
leave
out
push
cld
in
or
mov
push
cmp
xlat
mov
mov
adc
adc
fisttpll
xchg
or
mov
mov
adc
cltd
pop
sub
pop
adc
ficoms
pop
sbb
or
push
mov
xor
xor
bound
roll
test
or
add
popf
jle
ss
xchg
into
call
fstl
cld
push
lods
sti
mov
stos
in
jae
jb
rolb
xchg
dec
scas
mov
mov
dec
lcall
fimuls
jno
mov
xor
cmp
fstpl
pop
jbe
mov
jno
das
cltd
es
mov
repnz
gs
je
insb
push
into
push
nop
cmc
pop
push
aas
sub
xor
outsl
sti
dec
ljmp
or
jnp
pushf
into
or
push
mov
mov
pop
dec
out
inc
mov
pushf
pop
rol
movsb
lcall
inc
rcl
mov
sbb
insl
dec
lahf
mov
jge
inc
mov
pop
jmp
dec
fdivl
cmp
jecxz
jno
clc
icebp
sahf
xchg
mov
push
aad
addr16
movsl
in
jne
push
add
in
push
jne
pop
and
cmp
add
and
fcom
int3
inc
xor
pushf
dec
xchg
jecxz
divl
push
inc
cmp
jo
lds
mov
test
lcall
cld
jmp
lret
stos
out
xchg
arpl
sbb
jle
push
push
sbb
fsubr
add
adc
imulb
std
andl
ja
jnp
call
pop
pop
cli
push
out
call
or
adc
sbb
or
testl
loop
in
adc
pop
div
enter
inc
imul
jmp
popa
divb
enter
and
bound
mov
xchg
dec
xchg
sbb
std
pop
fcomi
sbb
mov
test
aas
jae
xchg
pop
jns
pop
cmc
add
test
dec
xlat
in
pushf
push
and
add
sbb
lahf
xor
cld
es
pop
icebp
jmp
inc
outsb
imul
cld
mov
and
aad
mov
xchg
dec
sub
push
ret
mov
imul
pop
push
push
in
imul
jge
es
ficomps
gs
icebp
push
loop
js
adc
sub
cmp
sbb
dec
jns
pop
pop
scas
ficoml
mov
mov
int3
fimuls
cwtl
cmp
mov
push
enter
push
dec
xchg
frstor
pop
lock
sti
or
adc
sahf
notb
mov
loop
pop
stos
inc
sbb
sar
mov
test
cmpsl
fmull
sbb
pop
in
shl
or
dec
rclb
push
inc
flds
adc
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
arpl
outsl
out
test
jp
dec
fwait
stos
sbb
cmc
data16
std
rcrl
js
xchg
out
icebp
in
jbe
cwtl
lds
arpl
or
aam
fdivrs
mov
mov
loop
mov
adc
fistpll
data16
scas
out
push
leave
sub
pop
fs
movsb
xchg
data16
hlt
mov
push
xchg
and
cmpsl
aam
inc
sbb
test
sub
mov
int3
les
xor
cs
je
jns
shrb
jnp
cmpsb
fisubrl
xor
lods
pushf
mov
mov
out
jg
xor
jo
jb
push
jne
sub
mov
push
inc
cld
filds
or
insl
mov
xor
push
inc
leave
fisubl
insl
outsb
js
jns
mov
inc
cli
inc
ljmp
sub
lahf
rolb
daa
adc
cli
adc
lret
cmp
cmpsb
test
jg
out
enter
adcl
out
test
sbb
pop
loope
adc
sbb
sbb
fnstsw
push
sub
xor
xor
imul
xor
mov
out
xor
xlat
fmull
add
xor
ja
aad
push
movsl
mov
lcall
int3
mov
xchg
nop
lahf
loop
push
jl
rclb
movb
repz
dec
dec
mov
mov
imul
idivb
xchg
inc
lods
adc
xchg
dec
mov
out
sbb
push
lods
xchg
and
xor
cld
inc
adc
xchg
js
jmp
pushf
adc
xor
mov
jns
xchg
in
xchg
mov
iret
inc
and
dec
movsb
clc
pop
jle
add
repz
and
je
mov
push
addb
push
xchg
loopne
into
sub
jb
orl
callw
scas
sub
xchg
pop
jmp
dec
test
je
lods
test
and
sbb
and
ss
dec
bound
mov
in
or
test
and
in
test
icebp
shl
add
fistpl
sahf
mov
dec
jno
ds
cs
and
jmp
push
jecxz
popa
mov
pop
jg
xor
mov
or
or
push
jmp
and
loop
std
out
sbb
adcb
xchg
xchg
mov
and
and
lcall
lahf
mov
xor
push
outsl
loope
or
push
cld
mov
xchg
lods
inc
xchg
jnp
push
loopne
cmp
je
nop
adc
push
adcb
pop
rol
add
cmpb
loop
or
lret
xchg
in
push
push
cmp
xchg
nop
dec
popf
or
jl
cmp
or
sub
lock
adc
or
out
jle
lods
inc
out
mov
divl
xchg
fnstsw
add
xchg
repz
push
movsl
aam
loope
pop
flds
xchg
xchg
incb
int
push
aam
mov
sub
lods
push
and
out
int
mov
mov
enter
push
outsl
xor
push
dec
nop
mov
jg
cli
in
fs
inc
mov
arpl
jg
enter
inc
pop
pop
mov
bound
sub
push
outsl
jnp
push
or
or
pop
dec
addr16
pop
fdivrp
or
jbe
mov
pop
ss
add
adc
ds
adc
mov
lcall
into
push
or
fldenv
rolb
into
push
sub
in
gs
insl
cs
xchg
inc
fiaddl
fs
pop
mov
mov
mov
cs
cmp
adc
jl
insb
mov
popa
lds
movsb
push
rorb
push
jno
mov
data16
inc
sarl
enter
xchg
ds
pop
mov
adc
andb
dec
out
or
xlat
roll
sub
fildl
xchg
sbb
adc
movsl
mov
sbb
cmpsl
movsl
ret
imul
cmp
or
lods
and
jge
js
jns
xchg
mov
sub
push
xchg
pop
sbb
out
ljmp
enter
and
and
pop
popf
lods
push
ljmp
jmp
xor
or
into
stc
adc
gs
adc
dec
jbe
repz
or
mov
lock
rcll
test
push
cltd
inc
adc
hlt
pop
xlat
fisubl
inc
cmp
scas
icebp
pop
adc
pop
pop
pushf
jnp
and
push
scas
aam
jbe
inc
mov
or
or
sti
adc
and
jg
aad
xchg
insl
xchg
lret
sarb
push
or
sbb
pop
sub
push
dec
dec
sahf
in
cwtl
mov
out
aas
lea
leave
cmp
adc
imul
adc
dec
jl
int
dec
push
cli
lahf
push
scas
fcomi
jge
inc
arpl
repnz
or
in
subl
cmp
cmp
and
into
rorl
pop
adc
out
xchg
xchg
mov
push
xor
push
inc
lock
push
mov
mov
push
popf
fcomps
inc
pushf
js
adc
jecxz
mov
arpl
addr16
lods
lret
xor
imul
jmp
lea
addr16
leave
sub
rcr
xchg
data16
lock
and
das
or
fisttpl
xchg
les
inc
movsl
dec
jnp
jmp
push
test
in
pop
xor
or
pop
mov
push
cmp
push
cltd
test
pop
and
cs
ljmp
mov
cmp
mov
jnp
sub
in
pop
mov
sub
outsb
clc
adc
les
das
push
mov
dec
jl
jle
and
mov
insl
fcmovbe
mov
aam
jmp
mov
jno
dec
imul
imul
cwtl
mov
sahf
addb
pop
mov
pop
gs
or
iret
push
mov
xchg
mov
test
int
mov
push
cmp
fdivs
mov
mov
repz
xor
shll
xchg
cs
leave
add
fisttpll
leave
mov
fstps
fwait
rolb
pop
xchg
cli
xchg
sbb
adc
fnsave
lds
out
enter
push
stos
lods
lret
push
fcoms
lock
mov
enter
xchg
jno
pop
cmp
aaa
fcomps
xor
cmp
lock
jbe
xchg
fisubs
pop
aam
aas
jno
push
cltd
pop
pop
inc
scas
rclb
fnstsw
pop
and
xchg
mov
adc
imul
adc
movsb
jnp
pop
dec
mov
mov
xchg
mov
fidivl
gs
add
scas
xchg
rolb
lds
mov
movsb
cs
and
lock
lods
rolb
mov
sub
lods
mov
xchg
jne
adc
icebp
pop
rcr
pop
hlt
sub
push
push
mov
movsb
int
cmp
jmp
fdiv
stos
mov
cmp
inc
fcomps
push
adc
outsl
adc
xorl
insl
and
dec
cmp
sub
or
hlt
sub
cmp
and
xchg
adc
dec
repnz
je
xchg
xchg
outsl
loope
push
push
adc
ud0
adc
inc
sbb
mov
sbb
or
rcl
xor
inc
cwtl
adc
mov
add
add
push
lret
pop
jl
movb
or
loopne
int
sub
stos
cmp
jmp
push
inc
adc
xor
adc
mov
and
sbb
icebp
out
or
in
je
inc
jno
push
xor
mov
jae
ficoml
add
inc
push
jae
scas
pushf
stc
lahf
xchg
mov
and
pop
mov
inc
stos
loopne
addl
pop
ljmp
data16
dec
sub
cs
daa
push
mov
sbb
outsb
cmp
inc
jmp
in
jge
into
push
sub
push
mov
sahf
cmp
cmp
lds
inc
inc
mov
fsubrl
or
fcmovnb
mov
inc
test
int
and
fwait
clc
mov
mov
push
jo
mov
stos
or
jns
xlat
cld
in
clc
xchg
fsts
aas
mov
cmp
pop
mov
adc
and
lock
loope
ficoml
pop
insl
inc
iret
push
push
cli
push
inc
out
cmp
and
mov
jg
add
negl
or
xchg
mov
pop
jno
mov
nop
decl
mov
ret
or
movsl
iret
inc
inc
outsb
mov
mov
jb
push
xchg
jp
mov
movsl
xchg
in
gs
or
mov
xchg
xor
push
mov
repz
lock
or
loope
in
xor
jns
dec
lgs
aas
add
mov
test
fadds
ret
dec
push
mov
hlt
data16
insb
xchg
cs
mov
cmp
iret
nop
xchg
and
inc
ficoml
rcll
inc
jo
mov
mov
ret
jno
movsl
and
jle
lods
fildll
aaa
movsl
fldcw
pop
inc
sahf
inc
aaa
inc
mov
pop
inc
fnstcw
fmull
pop
mov
idiv
ljmp
call
push
adc
repnz
xor
inc
aam
clc
jge
insl
shrl
xchg
xchg
fstp
cmp
cld
addr16
in
dec
out
add
repnz
adc
add
adc
inc
fs
push
stos
add
repz
or
pop
xor
and
or
pushf
push
imul
dec
or
bound
sbb
or
sub
xchg
cwtl
clc
popf
insl
loop
stc
in
call
movsb
je
std
jns
mov
in
aas
push
pop
inc
xor
xchg
jl
loope
jne,pt
iret
push
je
scas
cmpl
in
std
push
inc
rol
adc
and
loope
sub
std
pop
xor
dec
frstor
ret
pushf
stc
test
cwtl
mov
dec
jecxz
inc
stc
jl
dec
fists
jg
arpl
aad
cmp
clc
imul
xor
scas
daa
mov
repnz
inc
rcrl
mov
push
enter
and
into
aad
push
xor
test
clc
xacquire
mov
mov
pop
subb
enter
sbb
and
xchg
push
adc
xor
sbb
mov
loopne
test
dec
dec
cltd
in
loopne
inc
mov
scas
ljmp
xchg
sarb
int
movsb
scas
iret
scas
pop
jp
aad
xchg
xchg
nop
ret
xchg
pop
outsl
scas
mov
jbe
ret
and
test
imul
dec
fidivrl
les
mov
int
push
ss
hlt
xchg
cs
xor
and
aas
scas
lods
pushf
int
cmp
loopne
jmp
push
lret
sub
mov
jge
mov
mov
std
imul
dec
jge
ss
and
ret
dec
mov
lds
or
arpl
xchg
rorb
inc
das
mov
dec
adc
mov
divb
or
adc
cmc
cmp
or
dec
pop
pop
scas
test
sbb
cs
push
adc
insl
add
sub
fs
xor
mov
outsb
add
sarb
xchg
fstl
xchg
iret
jo
xor
mov
call
outsb
ds
imul
out
jns
pushf
cld
out
rcl
xor
lret
pop
scas
jg
add
ret
add
outsl
mov
popa
or
cmpsb
loope
sub
inc
mov
cli
test
adc
divb
jns
xor
sbb
popa
lahf
or
cld
lea
lahf
sub
or
test
push
mul
rcll
lret
mov
movsl
push
fildll
sbb
mov
int
cmp
es
pop
xchg
push
fcoms
adc
loopne
aad
lea
movsl
shll
add
movsb
and
ror
in
add
dec
nop
dec
jle
pop
or
les
push
lahf
and
pop
repz
mov
sbb
out
push
pop
jnp
cltd
pop
lock
es
imul
push
lret
push
data16
cmp
int3
mov
in
out
mov
cmpsl
mov
add
sbb
out
and
jae
xchg
xchg
mov
popa
scas
insb
insl
and
fwait
pushf
iret
pusha
imul
cltd
xor
pusha
fisubrl
ror
cmpl
cmp
stos
mov
jecxz
shlb
arpl
jnp
ljmp
and
inc
sar
pusha
icebp
das
les
dec
cmpsb
sub
adc
xor
loop
pop
orl
mov
lds
dec
sbb
lods
testl
sub
jbe
jae
or
sbb
jae
fwait
test
in
cmp
aad
push
out
lcall
mov
mov
bound
lret
dec
jmp
jge
loop
push
pop
roll
pop
dec
dec
ret
mov
ljmp
stos
lds
inc
sbb
cmpb
and
lods
push
xor
lret
sbb
cmpsl
mov
outsb
jne
or
out
add
inc
popa
mov
clc
mov
fstps
mov
icebp
pop
and
fs
shlb
push
popf
sub
dec
mov
mov
fcompp
lret
sbb
jmp
push
movsb
or
xor
or
and
outsl
lcall
jns
mov
pop
fsubrs
daa
push
out
fadd
insb
jmp
test
adc
fisubl
xchg
outsb
pop
cmp
sbb
dec
mov
enter
fcompl
daa
jecxz
std
mov
sbb
mov
sub
add
in
jecxz
scas
sbb
push
hlt
std
sbb
cli
adc
adc
ficoml
lret
push
or
jl,pt
rorb
sbb
fldt
dec
mov
and
inc
sub
loope
push
movsb
movl
int3
cld
fisttpl
shl
mov
jle
xchg
mov
xchg
mov
inc
cmpl
fistpll
dec
out
icebp
lea
cmc
cmp
dec
call
sahf
jecxz
jp
jo
mov
loop
and
mov
xor
repz
mov
mov
ds
stos
xchg
and
fdivs
loopne
xor
arpl
inc
loope
fwait
hlt
out
pushw
adc
dec
sub
fbld
outsl
jmp
dec
mov
aam
pop
shll
and
push
cmp
test
pop
sahf
shll
sbb
xor
jae
xchg
addl
cld
cmp
out
push
dec
js
inc
mov
push
outsl
es
pusha
iret
or
loop
lret
leave
cmp
mov
cs
scas
movsl
push
cli
cltd
adc
mov
popa
or
jnp
cmpsl
arpl
sub
ljmp
out
pop
pop
jg
pop
data16
in
add
stos
and
ret
xchg
push
pop
mov
popa
test
mov
ljmp
dec
cli
mov
pop
or
cmp
or
add
insb
ret
aam
test
mov
push
out
xchg
inc
scas
mov
jmp
cmp
fistl
sbb
push
jp
fimuls
fldt
aad
mov
inc
sarl
xchg
mov
or
mov
out
mov
jle
cmpsb
aaa
jle
xor
in
jbe
mov
and
or
sbbl
imul
push
iret
push
pop
sbb
test
cmp
nop
xor
pop
pop
jmp
outsb
xor
je
jno
orl
mov
imulb
clc
sahf
mov
inc
aad
cmpsl
dec
xchg
hlt
jg
mov
or
lea
mov
scas
mov
pushf
dec
in
mov
push
cmp
cltd
sub
xchg
inc
fisttpl
dec
mov
jbe
fdivr
mov
incb
fsubr
pop
xor
push
pcmpeqw
push
sub
shl
mov
sbb
push
pusha
mov
int
jecxz
pop
insb
xor
fstl
mov
push
jmp
leave
test
cmp
mov
jns
jns
mov
inc
mov
bswap
push
loop
push
xchg
out
ret
daa
testl
xor
add
pop
js
or
pop
jo
inc
pop
mov
and
insb
sbb
mov
lock
and
ja
sti
mov
aaa
xor
insb
pusha
adc
push
int3
int
jge
xchg
movsl
add
sub
out
rorl
enter
aaa
lods
es
jnp
cmp
pop
inc
outsb
ds
aaa
xlat
sbb
out
or
repz
imulb
jne
jmp
inc
jp
dec
push
icebp
adc
xor
mov
aad
dec
and
mov
inc
sub
rorb
je
mov
lods
jle
out
sbb
mov
or
push
pop
loopne
xlat
test
test
test
sbb
push
mov
pop
and
out
dec
shlb
call
or
xor
mov
push
sbb
loope
lcall
dec
and
jp
or
sarb
and
jmp
push
mov
jne
test
xchg
adc
push
adc
lret
inc
mov
mov
enter
aam
pop
add
mov
xlat
pushf
int
push
pop
jno
ljmp
mov
in
and
mov
adc
xchg
mov
rolb
xchg
cmc
loope
arpl
rolb
call
and
xchg
les
jge
xor
fwait
cmp
clc
int
nop
mov
in
pop
inc
jg
mov
cmpsl
mov
pop
not
jmp
jecxz
pop
shl
loop
outsb
cwtl
cmp
mov
jbe
out
loopne
and
aam
bound
ljmp
cmp
dec
sar
imul
negl
cmp
sub
dec
lahf
cwtl
jmp
fimull
push
mov
cmpsl
out
scas
pop
xor
jmp
or
aam
imul
xor
mov
movsb
dec
rcr
nop
push
lds
add
xchg
cmp
cmp
push
inc
icebp
push
inc
cmp
xchg
bound
insl
fwait
jno
outsb
testl
mov
lahf
shrd
and
std
call
fwait
push
xchg
mov
pop
xchg
fnstenv
cmp
mov
jg
outsl
cmpl
loop
mov
xor
xchg
js
test
fidivrl
xchg
xchg
fs
loopne
mov
sti
cmpsb
adc
cmc
xchg
pop
inc
sbb
sbb
or
mov
sti
js
adc
xor
pop
pop
ss
ficoml
xlat
aam
mov
xchg
inc
jmp
mov
test
sbb
pmuludq
out
and
pop
fsubrs
testb
xchg
aam
daa
or
push
call
pop
jo
inc
movsl
roll
in
out
push
enter
idivb
je
sbb
cli
push
push
push
mov
ficoml
fstl
xchg
out
dec
test
loop
mov
lods
adc
mov
pop
out
push
aaa
sub
fbld
xor
or
call
xchg
mov
cwtl
out
inc
cmc
icebp
lock
notb
stc
into
imul
out
cli
push
ss
sub
xlat
es
outsb
pop
sub
mov
lahf
pushf
je
adc
fdiv
or
xlat
test
testb
jecxz
add
xor
fwait
out
xchg
sarb
in
rcrl
push
stos
mov
and
popf
pop
inc
shlb
add
inc
pop
xlat
dec
jne
xchg
adcb
shlb
add
fs
cmpsb
xchg
lcall
clc
repz
and
inc
jnp
fwait
mov
sbb
in
adc
cld
cmp
loope
hlt
or
add
mov
add
mov
mov
pop
jle
cmp
push
in
jo
popa
xor
mov
int3
push
mov
fucomp
test
jge
sbb
sbbb
shll
mov
sarl
xor
mov
mov
cwtl
cltd
mov
pop
inc
add
pop
fsub
mov
daa
pop
sub
les
mov
xchg
cmp
iret
ja
lock
in
outsl
sbb
ret
dec
or
cmp
loope
fistpl
xlat
stos
insl
lea
mov
xor
sub
lea
subl
sub
movsl
pop
sub
loope
sbb
popf
sahf
imul
into
or
or
and
inc
cmp
mov
repnz
andb
das
adc
sti
push
test
jg
mov
jmp
jle
lods
fucomip
pop
xorb
mov
es
xlat
sub
lahf
pop
mov
sub
adc
loopne,pt
xchg
loopne
jnp
push
or
mov
ret
xlat
stc
mov
aaa
insb
je
sub
nop
cs
sti
fnsave
and
jge
lock
loopne
push
and
ljmp
shll
or
sbb
mov
leave
adc
sub
or
or
clc
in
test
out
jp
cli
jmp
je,pn
dec
js
stos
stos
or
cltd
cli
add
movsl
cmpsl
insb
xor
xchg
test
sahf
adc
pop
addb
and
mov
nop
scas
jb
and
stos
or
test
pushf
popa
or
mov
mov
and
ljmp
jecxz
jge
push
out
data16
rcll
scas
cmpb
push
stos
data16
jo
mov
gs
pop
das
inc
mov
pop
mov
rcll
sarb
cmp
in
negb
dec
mov
aas
mov
push
dec
pop
xor
ret
fstpt
ret
inc
inc
add
lcall
sub
or
push
cmpb
mov
jnp
pop
lock
dec
pop
xchg
lret
jle
xchg
loope
adc
mov
out
stc
dec
sub
sub
fwait
dec
mov
imul
stos
pop
xchg
inc
cmp
sbb
ljmp
test
popa
test
or
fwait
popa
lcall
mov
push
adc
cmp
out
add
inc
insb
adc
jp
mov
push
fcmovne
stos
arpl
addr16
bound
mov
mov
fidivrl
lods
out
push
stos
lcall
adc
push
add
pop
mov
test
pop
add
and
int3
mov
out
push
sub
mov
int3
jge
mov
jl
es
adc
daa
hlt
sbb
fiaddl
out
stc
loopne
testb
mov
testl
das
repz
mov
xor
mov
movsb
push
leave
in
rclb
inc
and
ljmp
mov
push
mov
cs
fistpl
rcl
sahf
sub
rcll
int
stos
subb
xchg
mov
adc
fwait
push
inc
jl
inc
cmp
fucomp
jl
insb
adc
push
mov
fstp
out
inc
stos
imul
pop
popf
adc
jns
inc
ds
cltd
in
cmp
jle
jnp
pop
jge
stos
xor
rcrb
cmp
jecxz
jns
adc
into
push
lock
imul
mov
fildl
xor
outsl
addr16
xchg
test
adc
sbb
jl
cld
dec
and
push
stos
addr16
or
lahf
jecxz
fs
pop
push
mov
imull
lahf
inc
repz
insl
cmpsb
cmc
leave
adc
mov
sarb
fwait
sbb
inc
cltd
iret
hlt
insl
movsl
cmc
mov
cmp
sub
inc
pop
movsb
sti
outsb
cmpsb
out
push
mov
jb
push
sub
imull
pop
aaa
int
sub
jno
push
outsl
sbb
fdivrl
rorb
nop
addr16
pop
inc
push
popf
add
add
sub
fsubs
push
lret
push
add
pop
les
ja
dec
ss
mov
sub
fsubr
cmpsb
pop
pop
pop
subl
add
mov
out
push
arpl
ds
stc
jle
lods
adc
cli
push
insl
cmpsb
cli
mov
pop
add
inc
jo
jle
movsl
jnp
lret
js
je
gs
iret
bound
shrl
inc
add
xchg
push
jns
mov
mov
ss
out
leave
fisttpll
ret
sub
mov
lods
and
dec
mov
ret
loopne
fcoms
inc
add
or
lcall
cmovp
inc
adc
lds
pop
das
dec
out
adc
lret
jns
stos
inc
mov
and
inc
hlt
xor
sub
cld
enter
sub
nop
lods
lret
ret
shll
adc
xor
lcall
leave
sar
test
lret
cmp
ret
ss
inc
sahf
mov
imul
aad
inc
psubusb
adc
mov
bound
sbb
arpl
jnp
scas
mov
and
stos
or
pop
xor
movsb
out
daa
adc
aaa
lds
pop
xchg
cmc
mov
add
aaa
dec
stos
add
push
xor
scas
xchg
stos
ror
push
lods
xchg
pop
imul
cs
add
inc
adc
or
sub
int3
pop
pop
or
fimull
sub
sbb
int3
ret
addr16
pop
jecxz
cmpsl
stos
push
stos
dec
in
test
mov
movsb
jne
xchg
jno
ret
mov
cld
loop,pt
sti
subps
xchg
push
add
push
cmp
std
cmp
jle
dec
aam
inc
ret
jge
shll
sahf
mov
insb
les
sarb
imul
pop
out
mov
xchg
mov
pop
iret
jl
nop
sub
shl
pop
inc
mov
fsubrp
adc
push
cltd
cltd
mov
mov
ret
mov
or
test
dec
pop
and
or
les
pushf
scas
mov
sti
mov
cltd
push
lcall
ljmp
mov
cmp
xor
jecxz
or
adc
jge
adcl
mov
loop
push
lret
or
jbe
aaa
add
sub
sub
pop
bound
adc
gs
clc
sbb
call
pop
and
add
lods
mov
shufps
sbb
push
inc
std
in
in
xchg
pusha
xlat
jmp
xor
jmp
das
add
mov
xlat
push
jno
sub
ret
call
rolb
mov
fcmove
es
or
dec
inc
subb
rep
aad
xchg
adc
pop
jmp
pop
pop
xlat
sti
dec
mov
xor
sar
mov
cld
pop
jl
movl
ret
out
fwait
mov
xorl
ja
out
inc
rcrb
lods
es
add
pusha
adc
fiadds
insb
dec
cmp
aam
outsl
pop
arpl
jge
pop
xor
repz
pop
rsm
add
addb
js
mov
or
ret
lods
inc
pop
icebp
stos
lods
xchg
mov
pop
jb
xchg
xchg
push
rclb
jno
xchg
aam
and
jbe
int
sub
dec
pop
push
pop
jno
cmp
outsl
mov
push
out
add
dec
and
roll
test
lcall
ret
sahf
outsb
fsubrs
inc
mov
xlat
ret
mov
or
mov
mov
fsubl
and
cmp
aaa
inc
cmp
pop
or
cld
xor
nop
sbb
push
movsb
dec
dec
sub
imul
cwtl
outsl
push
addl
xchg
adc
xchg
lods
lret
out
sbbb
outsb
or
mov
add
iret
sbb
cmpsl
movsb
stos
push
xor
jmp
fnstcw
sbb
sub
xchg
cmc
pop
imul
outsb
mov
sub
mov
dec
aaa
pushf
hlt
push
lock
psrad
mov
in
icebp
notb
mov
push
js
dec
mov
cmpsl
pop
xor
jecxz
ss
pop
xchg
jne
test
fwait
sbb
mov
cmp
and
test
aaa
rcll
sub
negl
test
sti
test
aad
sbb
sub
pop
xchg
scas
inc
xor
clc
xor
nopl
dec
popf
inc
mov
clc
fwait
lds
arpl
mov
pop
xchg
xchg
div
lock
mov
sbb
mov
push
add
add
pop
in
adc
jmp
in
mov
lcall
sbb
insl
inc
or
fsubs
add
push
and
lret
add
ja
push
jle,pt
ret
iret
mov
mov
aad
xor
pop
sub
pop
loop
fildll
jl
ret
lret
movsb
fmul
jnp
mov
imul
jb
pop
sub
cmpsb
cmc
mov
testl
test
or
sahf
push
pop
lea
inc
and
mov
xor
das
or
int3
enter
rolb
mov
mov
loopne
dec
std
in
imul
dec
push
cmp
in
or
icebp
adc
jl
and
push
xchg
test
sti
fstpl
adc
mov
mov
push
nop
cmpsl
dec
lods
cltd
popa
dec
sbb
or
fistpll
dec
insb
in
xchg
dec
ret
jae
xchg
lahf
arpl
int
dec
push
push
xor
stc
mov
adc
int
or
int
mov
and
imul
ret
dec
shrl
pop
fisubs
cmpsb
cwtl
in
xor
jo
mov
sti
lret
movsb
lock
push
into
and
xor
addr16
inc
call
xchg
cmpsb
mov
sbb
xor
lcall
and
or
push
cwtl
leave
icebp
gs
bound
aaa
imulb
mov
hlt
cmp
mov
jge
xor
dec
daa
jmp
pop
fisttps
aam
leave
add
adc
out
mov
lods
push
loope
xchg
sbb
and
sbb
in
xor
cld
out
aas
xchg
rcll
pop
scas
cmp
lahf
xor
push
dec
sub
bound
ror
jmp
sahf
jmp
lahf
xlat
insb
sub
out
jge
dec
or
fldcw
push
pop
ljmp
rorl
rcrb
je
sub
xor
shll
inc
call
arpl
in
and
fwait
dec
clc
push
test
lods
fiadds
ret
inc
jo
mov
lea
ljmp
popf
in
xchg
mov
out
out
dec
dec
sti
cld
ds
sub
aam
lods
xchg
dec
xor
jne
enter
sbb
outsb
mov
xchg
mov
mov
imulb
dec
xor
lcall
xor
scas
in
ds
enter
sub
jo
das
xor
punpckhdq
das
outsl
sbb
jl
pcmpgtb
pushl
pushl
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
test
sbb
hlt
jle
jp
sub
mov
movsb
addl
mov
mov
xchg
add
std
lods
dec
sbb
cmc
stc
shrl
aas
ljmp
loope
scas
inc
setl
inc
repz
cmc
jae
pop
hlt
aas
test
insl
out
lea
push
lock
push
sbb
dec
inc
push
sbb
hlt
push
lret
cmpsb
stos
pop
sbbl
mov
popa
popa
mov
lcall
in
imul
sbb
inc
cwtl
mov
mov
ss
add
negl
xor
xchg
sbb
and
mov
jmp
ljmp
or
aaa
xor
or
ds
lea
push
mov
cmc
adc
cmpsb
test
sbb
pop
add
cmp
gs
and
jb
std
or
jl
pop
out
cmp
lods
popf
mov
mov
mov
outsb
dec
in
bound
mov
or
das
adc
addr16
add
rclb
pop
addr16
add
xchg
fidivl
bound
xor
jo
xchg
lahf
cmp
int3
jbe
and
jl
pop
sub
fldl
mov
jno
jg
push
jmp
ljmp
lret
add
jo
push
adc
xchg
jg
mov
or
jl
ret
or
arpl
cmpb
adc
stos
adc
je
repnz
mov
cmp
cwtl
cmpl
cwtl
cmp
frstor
int
sarb
lods
jl
and
cmp
jmp
lods
xchg
adc
idivl
mov
rcl
aam
mov
gs
call
in
jnp
std
inc
xor
sub
aas
hlt
pop
pop
out
mov
repz
pushf
scas
mov
xchg
pop
pop
mov
pop
lret
aad
orl
in
push
fldenv
rclb
ljmp
mov
mov
mov
clc
cmpl
adc
sbb
mull
pop
push
repz
sarl
sbb
enter
pop
repz
jge
adc
aad
outsb
jbe
add
cmp
pop
mov
inc
xchg
fwait
jae
les
cmpsb
inc
sbb
xor
push
arpl
mov
xor
fpatan
push
hlt
pushf
pusha
adc
lds
or
mov
cmp
scas
mov
mov
cld
into
cmpsb
mov
push
adc
dec
enter
ljmp
fst
jbe
pop
mov
or
or
mov
mov
jo
add
sub
push
test
js
mov
dec
adc
pusha
cwtl
inc
push
imul
stc
mov
inc
push
sub
or
lret
xchg
cwtl
aaa
jecxz
cld
fld
cmp
js
insl
sub
xchg
sbb
fisubs
adc
and
push
pop
add
xchg
ss
fwait
dec
jbe
push
ret
cltd
sbb
and
stos
dec
icebp
data16
xor
dec
push
xchg
inc
mov
scas
add
stc
pop
in
xor
hlt
add
sbb
xchg
mov
xor
or
xchg
sahf
shrl
mov
add
lahf
add
pop
sbb
cmp
sub
cmovp
inc
and
pop
pop
inc
sti
push
mov
shlb
mov
push
mov
les
bound
data16
jmp
lret
pop
repz
adc
pop
push
push
loopne
clc
mov
scas
fildll
xchg
ret
xor
push
mov
mov
sarb
push
or
xchg
mov
imul
dec
in
xchg
cmp
fldcw
jae
mov
addr16
lret
cwtl
shrb
mov
bound
jae
insb
mov
add
cmp
and
in
sub
shl
or
cmp
pop
or
xchg
mov
dec
sbb
sbb
push
in
push
loope
ss
std
xor
loope
ss
popf
sbb
mov
add
pop
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
mov
testb
add
add
add
xor
add
and
add
add
add
push
push
inc
push
jno
fistps
pop
sub
inc
cmpsb
lahf
out
mov
jmp
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
