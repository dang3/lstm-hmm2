push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
jns
dec
push
bound
bound
pop
bound
xor
cmp
jns
jbe
add
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
mov
out
sub
mov
jp
push
mov
loopne
bound
into
ljmp
repz
push
icebp
cld
dec
and
insb
ret
std
mov
popa
aad
packssdw
sarl
js
push
outsl
sub
pop
pop
je
leave
das
dec
test
pop
pop
mov
adc
call
lcall
shll
sub
adc
sub
xchg
cmp
jp
and
inc
and
xchg
jmp
in
sub
inc
into
add
rcrb
or
fisttpll
mov
xchg
jne
and
fists
mov
and
mov
mov
jg
faddl
and
push
mov
jno
call
dec
inc
mov
xlat
cwtl
and
notl
ljmp
cld
popf
movsb
stos
pop
jecxz
or
aas
mov
cmp
cmc
mov
outsl
test
sub
notb
mov
inc
pop
scas
data16
push
sub
sub
outsl
cwtl
sbb
dec
push
mov
jb
sbb
ss
jmp
cli
aaa
stc
xchg
call
aad
movsb
hlt
in
repz
movl
stc
add
add
mov
pop
test
loope
lea
sub
push
ds
in
sbb
test
adc
movsl
jecxz
dec
xchg
add
leave
std
inc
leave
adc
mov
push
dec
insl
inc
xchg
pop
movsl
push
xchg
aas
adc
stos
popa
xor
add
jns
jae
add
pop
and
in
mov
pop
pusha
iret
stc
test
xor
mov
movsl
inc
ret
stos
adc
pop
cmp
push
repz
lea
cld
fsubrs
pop
inc
xor
adc
es
mov
sahf
cmpsl
jae
mov
sti
test
or
mov
fs
mov
pop
in
inc
repz
pusha
mov
cmp
sti
jl
fnsave
shll
push
push
sbb
shrb
dec
aas
pusha
lret
es
aam
pop
xchg
inc
mov
mov
hlt
and
inc
xchg
push
or
dec
jo
inc
cmp
dec
lds
scas
xor
push
ret
decb
or
mov
lret
subb
mov
roll
sahf
push
push
mov
mov
pop
lea
pop
pop
inc
jp
outsl
cmp
inc
bound
out
aas
sbb
dec
test
lods
sti
mov
or
pop
test
stos
cmpsb
pop
sub
jl
mov
cmc
dec
outsl
inc
pop
mov
cmp
iret
arpl
or
sbb
and
pop
movsb
fwait
loope
out
sarb
and
inc
or
xchg
out
das
and
pop
aas
push
cmp
bnd
cmp
jae
ret
je
pop
adcw
xlat
in
sub
or
mov
push
fiadds
shll
push
push
enter
jbe
scas
push
test
icebp
lret
mov
in
sbb
bound
push
push
inc
jecxz
lcall
xor
or
xchg
in
fcomps
mov
cmp
in
mov
daa
mov
sahf
test
int3
sub
test
in
icebp
push
ljmp
je
jmp
push
sbb
push
adc
inc
fs
or
movsb
in
push
xchg
js
mov
and
ss
cld
adc
adc
cmp
jo
push
mov
add
inc
jp
pushf
sub
in
in
cmp
push
jle
mov
movsb
sbb
scas
loope
int
and
rolb
bound
mov
shr
lahf
outsl
xchg
adc
repnz
lret
add
daa
and
push
xchg
inc
dec
push
adc
add
loopne
mov
loop
add
push
xorb
imulb
js
cmp
xor
mov
ret
fldt
rorb
pop
inc
scas
imul
cmpsl
ja
cmp
inc
xor
push
lods
mov
fldl
ficompl
jae
mov
std
mov
lock
dec
mov
stos
mov
mov
pop
cmp
mov
dec
xor
inc
cmp
mov
mov
sub
iret
adc
movsb
scas
and
cmp
test
xchg
loopne
adc
sub
push
cmp
push
jno
push
push
pop
fcoml
mov
lret
orb
or
xlat
fldz
and
cmp
outsl
jne
jne
loop
in
jecxz
insl
dec
cld
ret
pause
push
adc
icebp
in
inc
add
shrl
or
or
aaa
sar
mov
add
dec
adc
and
inc
cli
dec
pop
mov
aas
repz
scas
add
inc
in
roll
push
cld
sub
mov
movsl
mov
out
aaa
push
mov
adc
mov
dec
lock
pop
cs
jecxz
js
insb
inc
xchg
addr16
dec
in
mov
inc
arpl
pop
fnstenv
xchg
jmp
mov
cmp
dec
mov
call
lcall
sar
scas
lods
jmp
or
mov
repz
dec
mov
or
test
outsb
add
jmp
jbe
adcb
mov
arpl
push
mov
lret
and
roll
mov
test
int3
arpl
add
fs
push
push
inc
pop
fisubl
push
adc
sbb
insl
pushf
adc
aad
sbb
mov
adc
in
pushf
pop
push
test
or
jne
xchg
arpl
lret
jmp
sti
mov
pusha
in
int3
lods
xchg
ds
shl
leave
sbb
popa
insb
mov
stc
enter
pop
xchg
sub
leave
sbb
xchg
jne
mov
mov
sti
mov
sbb
push
push
push
sti
xor
shlb
std
inc
pop
pop
pop
push
mov
or
push
ds
mov
pop
cmp
xchg
mov
loope
jmp
add
stos
cmpb
and
into
add
and
xor
push
pop
inc
negb
mov
hlt
cmpsl
lods
jmp
cld
ss
xchg
jecxz
lret
arpl
sahf
imul
pop
iret
stos
jno
insb
pushf
add
xor
xchg
xchg
lds
jmp
jnp
ret
stos
out
imul
call
dec
ss
mov
inc
nop
xchg
lret
and
leave
jbe
out
xor
dec
or
loopne
rcrl
gs
mov
pop
insb
pop
imul
add
mov
sbb
lods
adc
pop
cmp
addr16
test
push
jo
cs
iret
and
loopne
lods
inc
mov
xor
sbb
cld
lds
pop
nop
xacquire
fs
outsl
push
out
push
cmpsl
pusha
add
inc
xchg
aaa
and
call
out
cmp
push
in
pop
inc
jle
cli
data16
or
dec
icebp
adc
jp
repz
sbbl
ja
inc
pop
scas
inc
shlb
cmp
sbb
sub
ljmp
sub
sti
and
sub
cmp
in
iret
xor
jno
jl
scas
mov
push
jo
jecxz
sub
iret
je
xor
imul
test
sub
push
jae
sti
jecxz
inc
ljmpw
lds
inc
imul
jnp
inc
ds
cmp
ret
das
popa
in
or
add
loope
lahf
cli
notb
cmpl
subb
cmpsb
push
mov
clc
stos
push
orb
mov
cmp
arpl
int
outsl
mov
push
adc
cmp
out
mov
adc
outsl
cmp
cmp
xchg
mov
dec
mov
dec
pop
repz
int
sarl
push
or
push
mov
ret
mov
movsb
sub
xchg
sbb
pop
movsl
insb
test
scas
jge
cmp
pop
pop
icebp
mov
push
mov
jb
xor
into
cbtw
ja
into
pop
inc
and
test
addl
xor
inc
push
sbb
jle
add
cmpsb
inc
decb
pop
push
es
adc
xor
push
adc
cwtl
je
xchg
xchg
lahf
cwtl
inc
outsl
mov
jge
mov
xchg
daa
pop
cmp
xchg
outsl
pop
sub
add
adc
ds
push
cmp
mov
fdivrs
push
sbb
cmp
iret
pop
mov
and
test
popf
aas
sub
push
adc
into
shrl
dec
aas
push
fucom
mov
mov
inc
mov
test
inc
rcrl
and
xchg
popf
xor
lods
add
enter
loope
leave
pusha
pop
jp
xor
jbe
mov
or
cmp
in
inc
jmp
in
dec
push
jmp
or
sub
push
push
sbb
and
mov
fisubrs
sti
add
orl
popf
cmp
lea
mov
adc
mov
or
mov
push
cmp
or
jbe
loopne
add
dec
popa
mov
jle
sub
jb
xor
xchg
into
std
jae
adc
mov
xchg
dec
imul
imul
leave
push
add
pop
sbb
inc
add
notl
xchg
sub
out
lods
mov
jecxz
cmpsb
or
mov
sub
jge
xor
inc
mov
or
inc
aam
jge
rolb
aaa
xor
xor
enter
xchg
adc
jnp
pop
dec
fists
dec
pusha
pushaw
lock
popa
cli
sub
push
pop
sbb
outsb
add
and
aaa
pop
xchg
pop
andl
cmp
lock
loopne
test
or
xor
sarl
loope
xor
in
mov
fildll
inc
cmpsb
push
std
or
push
call
fistpl
inc
inc
sbb
adc
add
push
mov
mov
and
enter
fnstsw
scas
dec
adc
outsl
xchg
mov
icebp
bound
cmp
loope
lea
loope
mov
mov
mov
pavgw
add
ljmp
daa
push
flds
imul
lret
movsb
adc
pushf
stos
xchg
push
rolb
sbbb
into
aas
mov
jbe
push
mov
mov
mov
ja
adc
inc
imul
int3
movsl
inc
xchg
dec
inc
sahf
jns
push
push
xchg
push
or
sub
ret
xchg
sub
or
inc
ficompl
sbb
mov
fldl
nop
add
xlat
rorl
mov
fs
rolb
pushf
push
jl
push
pop
pop
cmp
jle
push
int3
les
xor
ss
pop
fisttpll
out
stos
imul
aam
into
mov
lods
subb
jmp
lcall
inc
and
inc
lods
dec
sub
cmp
addb
cmp
add
jg
sbb
inc
pop
and
lret
or
test
add
jg
xchg
pop
pop
mov
xor
popf
cmp
addl
mov
mov
sub
mov
xchg
loop
ficompl
cmp
clc
inc
xor
dec
jb
lock
xchg
mov
sbb
scas
dec
pop
ja
js
imul
shll
sub
sub
dec
lret
jecxz
add
xor
testl
or
jne
pop
xor
mov
pusha
cmc
ficoms
inc
pop
xor
adc
dec
fmull
inc
int
sub
fisubl
repnz
dec
inc
int3
and
push
idivb
lret
inc
scas
push
repnz
icebp
push
jb
insl
add
sbb
cmp
mov
jno
push
inc
xor
addr16
test
aad
arpl
fcoms
test
imul
sub
repnz
out
scas
pop
mov
pop
push
clc
xchg
push
decl
mov
xchg
imulb
jnp
inc
push
lock
push
pop
jae
and
mov
popa
mov
jmp
jecxz
shll
mov
lods
outsb
stos
insl
lahf
and
mov
cwtl
sbb
xor
adc
loope
clc
movsl
push
in
fisubl
testb
enter
ljmp
mov
ljmp
cmp
sub
sbb
icebp
in
jecxz
mov
or
loop
fsubrs
inc
mov
xchg
pop
test
mov
js
pusha
pushf
repnz
popf
fistl
adc
mov
lock
sub
cmpsb
push
jmp
popf
push
rcrl
mov
push
js
and
addr16
xor
adc
and
xor
mov
cwtl
xchg
push
outsl
add
scas
mov
fwait
movsl
das
mov
cltd
or
pop
leave
iret
adc
in
mov
jle
mov
aas
mov
push
ret
xor
xchg
cltd
dec
xchg
stos
and
mov
cmpsl
movsl
mov
out
xchg
jecxz
cmp
repz
jp
mov
add
mov
jo
pop
ret
loopne
adc
pop
add
cli
jmp
cmpsl
xchg
sbb
xor
inc
sbb
call
mov
aad
inc
mov
inc
jmp
xchg
jle
icebp
mov
mov
jae
ds
scas
cmpsb
imul
out
int3
andb
aas
jge
stos
xor
lcall
inc
je
jecxz
xchg
test
pushf
lea
aaa
push
fnstsw
add
aad
or
or
mov
ret
pop
xchg
or
mov
sbb
dec
push
inc
pusha
adc
sub
addr16
or
or
js,pt
or
or
pusha
xor
cmp
outsl
inc
fcoms
bound
sbb
and
cltd
jl
add
dec
cmp
mov
int3
dec
in
call
cmpsl
fstl
push
dec
jecxz
xchg
je
mov
xchg
ffreep
jne
push
lods
xlat
cmp
insb
insl
xor
shll
or
dec
xchg
sbb
dec
hlt
je
add
stos
dec
jns
xor
ss
adc
mov
push
jmp
pop
xor
cwtl
sub
adcl
nop
sti
jb
mov
test
jbe
sub
stc
mov
xchg
sub
jae
pop
xor
sbb
or
xor
dec
ja
lods
scas
into
jmp
ss
mov
cmpsl
inc
and
push
lods
cwtl
mov
sub
xlat
aad
popf
sti
push
xchg
aam
dec
add
ss
popf
and
sbb
xchg
movsb
movsl
sbb
inc
or
or
das
add
fnstenv
sub
rcl
jecxz
das
int
lret
mov
add
mov
sbb
mov
pushf
inc
mov
out
ret
pop
sti
lods
push
and
sub
jb
mov
cmp
mov
loope
setnp
loopne
mov
int
pop
scas
es
es
and
lret
pop
jo
mov
into
and
xor
into
int3
add
push
xor
mov
xchg
cmp
scas
mov
or
xlat
movsl
push
mov
test
xchg
loopne
lods
leave
in
test
loop
sub
add
stos
ja
mov
stc
cmp
mov
mov
or
loop
cmp
bound
mulb
pushf
mov
shl
pop
loope
fadds
jo
jnp
mov
sub
mov
jnp
fs
aam
push
sbb
cli
add
jb
jle
mov
cwtl
and
fcoms
and
xchg
loop
or
mov
inc
mov
sub
mov
jne
outsl
mov
pusha
sub
pusha
jo,pn
imul
ret
xlat
fnstsw
dec
inc
xor
and
pop
mov
pop
cltd
scas
rcrb
jl
hlt
in
cmp
mov
fisubrl
ss
int
xchg
mov
cmpsb
pop
rol
pop
addr16
push
jb
cmp
stc
aas
mov
jnp
stos
imul
mov
addr16
fsubl
add
mov
and
jbe
xor
inc
subl
mov
or
mov
stc
xor
clc
je
mov
stos
mov
pop
outsb
insb
dec
cmpsl
mov
dec
ret
and
test
jl
jo
pop
fwait
sub
rclb
add
out
xor
test
inc
addl
sub
das
repz
jl
and
jae
in
and
add
add
push
fistl
movq
sbb
jb
sbb
iret
xchg
lods
adc
ds
ret
loop
fsubrl
adc
push
popa
orb
lret
fdivp
das
jbe
jae
cmp
mov
push
mov
rcrl
cmp
lods
data16
cmp
sub
insb
xchg
push
or
xor
dec
out
lock
leave
rcrb
and
sbb
inc
call
loopne
clc
insb
mov
push
add
fbstp
dec
adc
icebp
jg
push
adc
push
int3
add
fiaddl
lock
data16
jecxz
and
movsb
mov
cmpsb
jmp
popf
imul
add
icebp
rcrb
cmpsb
push
fisttpll
cmp
push
sub
fcmovbe
pop
es
pop
xor
sub
adc
lea
jae
sbb
and
in
push
dec
shr
mov
add
in
pushf
movsb
test
mov
into
or
lods
sbb
iret
sub
add
sbbl
inc
jns
cmp
xchg
inc
inc
adc
repz
insl
or
mov
in
mov
test
movsl
lods
sti
aaa
mov
in
addr16
cmp
jbe
mov
clc
imul
in
cs
leave
pop
lea
push
mov
icebp
pushf
mov
push
xchg
sub
jbe
mov
push
cmp
xchg
mov
data16
mov
aaa
loope
imull
dec
and
lods
adc
pop
lahf
jno
xor
jb
xchg
xor
popl
popw
mov
aaa
stos
stos
push
addr16
push
test
jno
lret
xchg
jnp
adc
mov
call
orl
push
add
mov
enter
sub
xchg
xchg
pop
mov
add
sbb
push
sbb
aam
dec
mov
cmp
cmp
sbbl
jge
lret
roll
clc
mov
lods
xchg
repnz
cmp
xchg
leave
xchg
mov
push
test
push
sub
sbb
jge
push
lea
cmc
iret
inc
gs
mov
jns
repz
jle
mov
rclb
push
mov
mov
pusha
push
scas
loopne
stos
pop
gs
call
fsts
mov
mov
or
inc
jecxz
sbb
inc
ljmp
jb
js
sti
inc
xchg
movsb
pusha
sbb
pop
or
ret
divl
icebp
out
mov
adc
lahf
icebp
sahf
inc
sbb
fistpl
sbb
movsb
jl
adc
pusha
stos
mov
jg
xor
aas
or
add
fmull
sbb
inc
pop
push
call
outsl
dec
xor
mov
and
repz
mov
mov
cwtl
pop
out
adc
nop
daa
loop
jo
sbb
sti
jne
setae
mov
adc
sbb
sub
lods
decb
sub
inc
lods
pop
enter
imul
scas
push
cli
mov
or
inc
xor
lds
movsl
mov
lods
cld
mov
dec
int3
js
add
xchg
pop
icebp
sbb
mov
test
pop
leave
sbb
cmp
mov
xchg
stc
cwtl
xchg
dec
adc
daa
pop
push
test
adc
mov
ret
insl
mov
rcl
lret
push
sbb
pop
sub
les
mov
aad
lea
outsl
pop
cmp
inc
or
out
inc
or
in
xchg
jmp
lock
pop
sub
iret
je
ret
push
daa
mov
jnp
inc
jbe
pop
pop
push
enter
in
xchg
call
mov
sbb
sahf
pop
sub
xchg
xor
push
xchg
in
cmp
mov
push
inc
inc
fbstp
and
mov
shlb
ljmp
sahf
testl
inc
pop
xchg
iret
stc
jne
add
filds
add
pop
into
xor
test
in
mov
adc
fs
mov
into
sbb
cmp
add
orl
ret
nop
jne
imul
icebp
adc
xchg
test
cli
cld
dec
xchg
jnp
mov
mulb
insl
aaa
xor
xchg
push
jl
mov
leave
mov
lret
pop
push
mov
xchg
and
lock
int
mov
mov
cltd
xor
lock
rorb
sub
jl
loopne
xchg
pusha
sbbb
stos
cmp
stos
in
adc
shll
xor
pop
jb
pop
cs
push
mov
pop
ret
into
cmp
inc
inc
cli
mov
scas
subb
mov
rorl
pop
scas
das
xorb
jp
add
push
xor
test
adc
es
pop
xchg
repnz
stos
sbb
add
xor
pop
jg
rcrb
mov
push
push
jecxz
cmp
sarl
inc
adc
rcr
imul
sbb
inc
das
xor
inc
mov
pop
repnz
repnz
scas
pop
inc
fstpt
jge
mov
movsb
sarb
les
xchg
daa
cwtl
push
adc
aam
daa
mov
sub
aaa
inc
lret
inc
pushf
adc
mov
add
cmovp
aam
mov
ljmp
cmp
inc
add
sbb
cmp
nop
add
cmp
fidivrs
mov
js
jg
jbe
rcrb
sti
push
test
clc
pop
stos
rolb
mov
adc
or
dec
out
sub
fwait
adc
pushf
addb
add
cmpsb
incl
lock
sahf
aad
inc
xor
pop
sbb
das
push
pusha
fwait
mov
hlt
aaa
aad
cmp
lods
push
and
aaa
pop
dec
mov
jmp
pop
inc
add
jno
xor
lods
adc
push
cwtl
test
jb
ret
sbb
sub
and
cwtl
inc
fsubs
pop
mov
cld
xor
in
cwtl
mov
mov
ret
fldt
aad
push
sub
mov
pop
pop
rol
fmuls
clc
stos
fldcw
sbbl
or
scas
scas
dec
loope
fsub
gs
and
adc
push
and
aad
xchg
adc
in
addl
mov
mov
jge
push
push
and
sbb
imul
divb
leave
push
push
mov
mov
test
push
std
pop
into
in
adc
jno
sbb
sub
pop
notl
mov
add
loopne
sar
aad
push
or
fsubl
lret
pop
mov
inc
aad
mov
inc
testb
ficoml
or
testl
pop
add
pop
cmpsb
mov
aas
xchg
addr16
xor
movsl
aaa
aaa
jb
nop
stos
test
pop
jmp
sbb
lcall
into
push
jnp
hlt
dec
xchg
js
ror
imul
jmp
in
pop
in
jl
in
stos
cs
mov
pop
sarl
jle
stc
and
cmp
push
sub
mov
idivb
roll
and
dec
xor
xor
push
lcall
push
adc
movsb
add
pop
mov
lret
lods
imul
das
mov
dec
dec
sbb
jecxz
inc
cmp
es
cmp
test
in
scas
lret
add
push
mov
loope
ficompl
add
xchg
mov
cmp
mov
stos
sub
sub
xchg
enter
testb
adc
mov
cli
mov
lcall
andl
push
cmp
push
in
aam
inc
dec
clc
dec
outsl
loop
out
add
cmpsl
in
clc
dec
pusha
add
fnsave
lret
icebp
mov
inc
icebp
jmp
mov
repnz
inc
xchg
jmp
stc
inc
mov
insl
inc
or
cmp
push
inc
int
dec
sbb
pop
imul
mov
scas
cmp
sbbb
pop
sbb
insl
jnp
lea
cmpsb
jns
jnp
ljmp
and
fs
inc
ret
scas
aas
cmp
stos
in
pop
cli
in
fistps
cld
pop
sub
pusha
loop
lcall
das
pop
xchg
pop
xchg
cmpb
sbb
inc
mov
cmp
mov
jge
mov
jmp
add
cli
cwtl
mov
fcmovnbe
or
pushl
pop
push
or
mov
incl
outsl
push
pop
adc
push
pop
lret
pop
test
imul
cli
rclb
mov
push
mov
fnstenv
add
insl
fisttps
sti
lds
insl
dec
sahf
push
pop
mov
aam
fsubrl
jb
mov
push
loop
inc
xor
and
jmp
or
mov
jb
cmp
inc
scas
test
add
jo
sub
cwtl
mov
cmp
inc
fwait
jno
push
mov
inc
sbb
push
inc
xchg
push
loope
jbe
jne
and
lret
push
test
add
mov
mov
insl
mov
loopne
mov
into
cmp
mov
jne
or
lret
sbbl
push
jle
scas
xor
loope
mov
arpl
aas
inc
pop
loop
outsb
pop
mov
mov
pop
repnz
push
and
lret
xorl
jecxz
jo
xor
xchg
popw
shlb
push
xlat
cmp
and
incb
sbbb
js
sbb
jnp
js
xchg
arpl
in
or
out
lcall
aas
clc
inc
fbld
adc
test
mov
ret
data16
cmpsl
mov
jge
cwtl
lret
push
xchg
dec
out
imul
movsb
lea
shrb
xchg
scas
out
sbb
sbb
loop
inc
pop
mov
push
aam
js
ret
sarb
js
cmpb
mov
arpl
lea
lods
das
add
out
popw
icebp
aad
sti
insb
jnp
ret
push
hlt
push
dec
or
aam
dec
cmp
leave
ss
push
popa
faddl
insl
pop
xchg
sbb
ljmp
aad
adc
sbb
movsl
jp
iret
movsb
xchg
stos
aas
lea
mov
or
dec
jge
popf
xlat
aaa
jmp
adc
cmpsb
scas
mov
sub
add
fists
mov
fwait
outsl
sbbb
movsb
adc
adc
mov
jp
scas
and
inc
mov
insb
addr16
inc
fimull
int3
rdtsc
adc
adc
pop
repnz
pop
test
or
aaa
arpl
pop
fdivrl
out
fwait
cmp
sub
insl
out
sbb
lods
repnz
out
stos
mov
push
cltd
outsb
lock
in
dec
fdivr
push
mov
inc
jne
push
or
add
in
push
pop
cmp
xchg
fstp
xor
std
pop
sub
lahf
outsl
jmp
je
jb
repnz
pop
mov
lock
fs
and
scas
mov
leave
sti
test
daa
insl
add
pop
and
dec
fcomps
rorb
cmpsl
jmp
negl
inc
pushf
packssdw
push
add
js
ljmp
stos
jne
pusha
mov
xor
mov
sbb
inc
xchg
in
stos
imull
sbb
push
movsb
push
sbb
popf
in
lahf
cmp
loop
dec
cmp
xor
push
push
xor
aam
in
cwtl
outsl
lret
add
je
push
xchg
int3
divb
or
bound
ror
sub
jb
loopne
scas
rorl
pop
fcmovbe
dec
subl
lret
nop
lcall
inc
inc
adc
int3
mov
dec
les
xchg
outsl
cli
and
in
fnstsw
mov
ss
out
sbb
adc
mov
mov
pop
out
sbb
psrlq
xchg
xor
leave
testl
jno
mov
push
repz
stc
mov
fistpll
psrlq
cmpsb
dec
mov
loop
ds
pop
adc
loop
dec
out
push
fcompl
je
dec
xchg
xchg
fsubrp
cli
and
and
dec
sub
ret
dec
xor
nop
xchg
std
adc
add
fcomps
aad
jg
sub
fisubrs
sti
jb
mov
inc
inc
or
dec
lret
fpatan
sarb
js
push
xchg
fimull
outsb
cmpsl
fistps
aas
aam
cmpb
dec
add
xor
push
mov
shl
jne
add
jno
and
push
adcb
outsb
adc
pop
pop
push
jns
into
sub
sbb
cmpsl
inc
out
lds
scas
loope
jno
xchg
das
pop
lret
aam
push
jo
xor
movsl
fcomp
sbb
fmull
js
inc
jle
outsl
jg
inc
pop
stc
ds
mov
jne
xor
adc
pop
sbb
out
add
dec
xorb
repnz
out
lcall
jl
and
fimuls
popf
outsl
xchg
mov
sbb
cmp
xchg
aas
push
scas
lea
stos
xchg
jbe
inc
in
pop
outsb
leave
pop
xchg
inc
in
outsl
xor
int3
fwait
adc
dec
daa
lcall
daa
imul
mov
fbld
xchg
ret
jle
ja
cmp
sbb
push
arpl
test
mov
xor
lods
movsl
sub
pop
icebp
test
push
into
mov
mov
insl
dec
scas
loop
into
fwait
inc
mov
outsl
and
push
in
xchg
fildll
cmp
pop
and
lock
aad
aaa
xchg
mov
mov
js
int
jb
mov
xor
xorl
mov
pop
ja
xchg
push
addr16
push
push
push
jns
adc
test
pop
scas
roll
jb
push
add
sub
cmp
sub
pop
and
mov
add
jmp
cli
inc
insl
sub
fsub
jmp
les
xchg
in
push
mov
dec
mov
stos
sub
push
fwait
ds
pop
sub
pop
test
aaa
fstpl
xchg
jne
or
jl
dec
test
mov
mov
lea
popf
jbe
jle
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
cwtl
imul
pop
bound
stos
mov
shll
pushf
sti
rolb
and
test
daa
dec
jae
lret
fidivrs
inc
mov
repnz
outsl
sbb
mov
mov
cmp
loope
ds
cmc
idivl
xchg
mov
bound
neg
or
lock
jmp
mov
dec
jno
cs
inc
add
int3
cmp
roll
inc
mov
cltd
ljmp
mov
inc
mov
mov
or
jmp
mov
je
pop
js
cli
push
fsubrl
cmp
stc
test
js
cwtl
xchg
jg
push
pop
out
mov
mov
icebp
fwait
xchg
adc
adc
push
and
ret
ljmp
mov
inc
lcall
xchg
cmp
divb
mov
sbb
add
mov
push
sbb
jne
outsl
sub
aad
jle
jecxz
push
fnstenv
js
lcall
pop
imul
xor
std
mov
pop
dec
xor
mov
adc
sbb
popf
fcomi
cmp
xlat
push
jg
js
jg
sub
add
cld
mov
subb
dec
or
jb
cmc
mov
jp
ljmp
cmp
and
mov
mov
jmp
add
mov
pop
adc
adc
sti
andl
mov
stos
dec
xchg
jl
lret
xor
sbb
pop
dec
jg
shll
lods
jmp
xchg
hlt
push
mov
jge
iret
xor
or
iret
imul
loopne
push
leave
add
mov
sub
mov
sub
rorl
mov
lret
or
or
lods
lret
jne
cld
nop
stc
mov
popf
sub
enter
aas
out
xor
cltd
jp
addr16
repnz
pop
jl
imul
ret
xchg
in
jnp
fdivrs
mov
mov
add
add
cmp
mov
jmp
mov
into
daa
stos
clc
imul
lahf
push
icebp
cwtl
mov
xchg
or
and
mov
int3
inc
repnz
insb
xchg
dec
das
pop
jne
ret
das
or
pusha
repz
out
dec
aam
mov
lea
fndisi(8087
add
and
das
xchg
and
mov
sbb
lock
xor
pop
ficoml
mov
or
movsl
ss
push
push
out
mov
aad
jmp
es
jnp
mov
pushf
lods
cmpsb
and
addr16
adc
sub
pusha
aam
out
cltd
fnsave
mulb
in
sbb
fwait
jmp
hlt
out
stos
push
out
daa
xchg
adc
out
cmpsl
mov
inc
jb
sub
mov
idivl
rcrl
aam
sbb
jl
xor
gs
jmp
or
leave
mov
push
adc
rorb
mov
xor
js
mov
in
and
mov
xchg
dec
fisubs
ljmp
pushf
xchg
ss
in
ss
jo
pop
clc
or
insb
dec
das
out
aaa
xchg
adc
inc
out
or
push
pop
mov
shll
orl
sbbl
ret
mov
xlat
out
movsl
mov
or
stos
and
sbb
jle
sub
shrb
push
add
lret
sbb
xor
cmp
and
stc
nop
add
mov
mov
test
cli
addb
mov
mov
aad
mov
cmpsl
mov
adc
addl
leave
dec
pop
sti
sub
pop
ret
mov
push
pop
imul
test
jmp
xchg
pusha
push
leave
xchg
je
mov
add
cmc
ss
lret
orb
inc
mov
popf
bnd
les
dec
cmp
jmp
addl
and
idiv
sar
sbb
test
dec
mov
daa
movsb
test
dec
sub
lea
fst
jns
dec
sahf
xor
jae
push
and
push
mov
fnstsw
daa
mov
out
ret
ret
adc
mov
test
iret
mov
fcoml
icebp
rcrl
leave
ds
xor
xor
xchg
iret
insb
sub
aaa
or
adc
pusha
mov
inc
push
jbe
mov
mov
and
repnz
and
scas
push
sarb
xchg
iret
adc
add
ret
jbe
mov
push
ja
mov
popf
and
aaa
and
sarl
ds
popf
or
popl
push
ljmp
jae
dec
dec
sarl
movsb
addr16
lret
aas
mov
mov
daa
add
cmp
jnp
xchg
in
push
sbb
call
outsl
push
mov
outsl
repnz
aaa
jg
and
pop
xchg
fstpt
dec
rorb
js
dec
dec
int
jl
push
movsb
ret
xchg
xor
mov
test
fsubrl
mov
stos
mov
cltd
lods
test
test
or
clc
les
lret
mov
repnz
adc
imul
jnp
mov
dec
es
rol
les
cs
adc
cltd
and
lahf
push
jg
cmp
fstpl
in
add
xchg
mov
cli
shlb
pop
xchg
loopne,pn
in
int3
pop
lahf
sbb
mov
int3
mov
push
adc
xchg
or
add
clc
sbb
out
leave
push
sbb
lods
mov
iret
rorl
cmpsb
int
sbb
scas
sbb
cmp
test
and
movsb
jmp
push
insl
daa
enter
xchg
lcall
push
inc
call
addr16
xchg
mov
jae
sahf
add
enter
into
push
mov
add
sbb
cld
mov
pop
or
repnz
fucomi
sar
mov
jnp
sbb
outsl
adc
jb
cli
sti
jbe
das
lods
and
stc
mov
dec
pop
add
push
test
cmp
cltd
mov
in
test
mov
pusha
push
cmpsb
insl
loope
sub
sbbb
sbb
fstp
inc
add
loope
push
and
leave
in
adc
fstps
or
bound
push
aad
mov
jecxz
inc
test
inc
sbb
les
ss
jg
adc
pop
xchg
fildll
cmp
add
es
dec
orb
mov
filds
xchg
out
fwait
repz
and
cmp
sbb
and
dec
cmp
mov
outsl
cmpb
sbb
adc
push
lret
mov
fwait
sbb
mov
lcall
xor
push
lcall
mov
lahf
arpl
cmc
in
rcl
sbbl
aam
adc
addr16
sahf
push
icebp
mov
push
cmp
push
jns
add
popa
jp
jp,pt
aam
clc
popa
mov
xchg
jmp
jecxz
mov
dec
push
mov
xchg
dec
or
int
pop
loopne
fcoml
jne
cmpl
sbb
adc
xchg
and
cmpb
dec
test
popa
mov
mov
mov
stc
sbb
adc
pushf
fisttps
mov
mov
pop
jl
cld
add
das
mov
push
lods
gs
xchg
mov
addb
push
shlb
push
pop
loope
dec
rorl
jle
into
loop
jnp
leave
mov
dec
dec
nop
movsb
fstpl
lret
js
ljmp
fisubs
or
test
jmp
pop
or
insl
dec
pop
test
addr16
xchg
lahf
xchg
jmp
out
clc
ja
lea
inc
jbe
xchg
ret
es
fbstp
sbb
imul
inc
scas
sub
inc
test
mov
ja
scas
and
lods
xchg
out
mov
bound
or
movsb
enter
inc
dec
dec
dec
sbb
xchg
rcr
jae
xchg
push
inc
xor
cmp
mov
rclb
jo
mov
ret
mov
mov
sbb
sub
ds
stos
repz
cmpsl
sti
stc
xor
push
loope
sbb
mov
ljmp
inc
adc
cmp
std
or
xor
sbb
lret
or
mov
inc
jns
fwait
pcmpeqw
adc
fidivl
push
mov
ret
jo
push
call
sahf
hlt
insb
outsl
call
in
pop
shrl
add
inc
sbb
sahf
push
push
lds
and
enter
cmp
inc
xor
sahf
xchg
sbb
cmp
negl
mov
sbb
push
add
lret
notl
jmp
sub
inc
xor
push
xchg
mov
fmull
stos
test
inc
addr16
clc
in
stos
and
push
push
add
xor
js
lahf
out
pop
nop
adc
int
sbb
mov
mov
xlat
adc
sub
rcr
rcll
call
aam
push
fisubrs
and
das
jl
xor
jb
pop
hlt
mov
or
sahf
adc
xchg
xor
mov
push
daa
adc
add
int
mov
movl
jno
dec
jl
xchg
mov
in
and
dec
cli
push
cld
mov
nop
sahf
int
push
jno
sahf
xlat
dec
stos
dec
push
xor
jge
lds
loopne
call
lret
pop
xchg
stos
ret
fcompl
dec
stc
xchg
jle
repz
and
jo
int3
mov
cmp
adc
add
ret
bnd
lock
cmpsl
add
scas
sub
mov
pop
cwtl
inc
mov
and
jp
add
sbbl
inc
bound
pop
push
and
sti
fadds
push
lcall
push
dec
and
push
mov
test
or
add
sub
sbb
dec
pop
imul
cmpsl
mov
movsl
inc
mov
sbb
cmp
outsl
lds
cmp
jecxz
fwait
push
dec
sub
int3
xor
jno
sbbl
out
cmp
jno
pop
daa
push
xchg
lret
push
rorl
mov
jl,pt
add
fwait
test
add
outsl
xchg
lock
xor
test
xor
addr16
rcrl
lods
mov
add
movsl
mov
sbb
lock
loop
in
add
or
popf
insb
or
lock
pusha
and
cmp
scas
out
and
mov
adc
int3
fisttps
movsb
insb
shrl
sbb
icebp
cld
mov
sti
pop
push
sub
add
ds
sbb
in
xor
sub
sbbb
sbb
repz
mov
std
das
faddl
push
mov
inc
das
mov
push
adcl
xor
push
fs
cld
dec
and
lods
push
ja
adc
mov
xchg
xor
xchg
cltd
xlat
movsb
mov
lcall
xor
xchg
cwtl
cmp
push
adc
and
call
adc
or
test
data16
sub
mov
mulps
lea
adc
aad
enter
push
leave
imul
mov
xor
lret
int
test
xlat
mov
rcrb
and
jb
mov
sbb
loopne
jbe
jne
add
push
xchg
outsb
scas
xor
add
adc
sub
mov
mov
hlt
sub
movsb
fisubrs
pop
aam
fwait
shll
lahf
in
mov
ret
sub
pop
movsl
push
les
push
mov
adc
lahf
jl
xor
jl
and
pop
pop
xor
sar
cmp
push
cmpsb
cmp
jo
dec
mov
in
jb
leave
sbb
dec
les
sar
xor
hlt
test
push
pop
es
dec
sub
iret
push
das
jge
imul
cmpsb
jnp
pop
inc
push
imull
insb
or
arpl
inc
es
popf
xor
cwtl
xlat
jae
pusha
ds
sbb
fstps
adc
mov
pop
inc
mov
enter
sbb
inc
ljmp
sub
lods
or
dec
dec
jno
or
je
jg
pusha
adc
mov
or
mov
dec
xchg
pop
xor
flds
sti
mov
addr16
adc
push
out
push
mov
fldl
jne
push
shrl
and
and
in
stos
mov
outsl
or
test
dec
jno
cmp
and
mov
testb
jns
jle
pop
rorl
mov
and
out
or
stc
call
pop
jle
mov
jle
push
imul
cld
sbb
ror
mov
jge
mov
scas
jno
negl
repz
jno
aas
movsb
inc
daa
sbb
inc
xchg
cs
cs
fisttpll
sub
push
sar
and
push
mov
leave
leave
aam
fldenv
jg
jl
fistpl
mov
or
jmp
sbb
lock
push
mov
mov
xchg
pop
xor
ja
testb
jp
jnp
mov
icebp
pop
loope
add
daa
hlt
cli
rcl
jecxz
enter
fisubs
outsb
shll
stc
jg
add
dec
push
adc
in
sarb
cmpsb
pop
cmc
mov
xchg
and
data16
fucompp
cltd
dec
push
mov
jb
icebp
aam
xchg
pop
repnz
mov
shlb
xor
push
dec
popf
hlt
popw
int
sub
pop
test
testb
out
xlat
xlat
push
xor
rcr
cwtl
jp
mov
pop
loopne
sub
dec
daa
jnp
out
mov
dec
ret
pop
push
push
cmpsl
pushf
or
sub
fcomps
and
or
push
mov
adc
notl
aad
leave
rorl
add
add
cltd
xchg
or
fistps
fs
cmpsl
or
ret
insl
and
sarl
daa
pop
cld
inc
into
ret
or
sub
mov
adc
or
lods
lret
adcb
pop
pop
push
sub
push
fwait
pop
and
loopne
mov
jecxz
push
in
xchg
xor
out
xor
add
out
jl
ret
adc
scas
daa
xor
lods
in
jg
and
lahf
insl
je
ret
mov
ror
pop
sbb
jecxz
push
cmp
loop
fiaddl
dec
add
lcall
mov
test
mov
sbb
push
xor
xchg
mov
inc
mov
fs
pusha
mov
and
es
pop
roll
xchg
sub
jge
mov
mov
push
sub
data16
inc
repz
sub
loope
stos
in
inc
push
xor
test
sbbb
push
sub
mov
in
clc
pop
daa
movsb
cmp
es
pop
gs
mov
dec
push
dec
stos
insb
test
gs
outsb
mov
xchg
adc
or
jmp
fiaddl
cmp
dec
icebp
push
lahf
and
inc
cmp
in
repz
lock
push
je
pop
test
sbb
dec
push
ror
jmp
stos
mov
in
mov
scas
cltd
loop
sahf
bound
shlb
popf
cmpsl
push
outsl
std
aas
xchg
sub
mov
fisttpl
or
fwait
jns
movsb
push
icebp
cwtl
clc
mov
jecxz
pop
or
mov
mov
addb
dec
add
lahf
mov
and
mov
adc
push
push
loope
gs
sub
sub
pop
xor
fidivrs
imul
push
insl
imul
test
xor
xor
mov
andb
lcall
into
cmpsl
xor
jno
andl
insl
int3
lea
inc
aas
push
mov
push
fcoml
inc
cmp
lret
sti
push
jns
push
test
lahf
pop
cmp
sub
xor
cld
or
dec
dec
lea
xor
sbb
jo
test
dec
icebp
inc
fisttps
addr16
iret
lods
or
iret
jge
andl
aad
mov
sub
js
mov
out
mov
aas
mov
jbe
jo
inc
and
fcompl
sub
sbb
pop
in
not
stos
push
cmpsl
jmp
jmp
xor
loop
cmp
xor
aam
addr16
mov
cs
mov
addb
test
mov
and
sub
push
shlb
mov
ljmp
mov
pop
cmc
mov
pop
jmp
test
mov
inc
jno
sahf
out
or
lret
pop
and
xchg
push
adc
mov
xchg
jp
sbb
pop
orb
jne
dec
pop
ss
and
xor
test
in
jnp
xchg
lcall
mov
mov
shlb
cmpsb
jno
pop
cmpsl
sbb
or
sub
mov
and
jecxz
push
sti
push
jp
pusha
xchg
xor
xor
or
enter
lods
pushw
mov
pop
push
fs
fmul
test
mov
out
sti
jle
out
arpl
mov
insb
dec
subl
outsb
int
movsb
cmp
jne
xor
repnz
pop
lods
divb
sahf
or
shll
sbb
xor
mov
add
inc
cld
mov
sbb
cmp
jb
shrl
fildl
jmp
iret
cmp
mov
xlat
push
xchg
repnz
inc
fdivrp
or
or
xlat
cmp
fmul
scas
mov
insl
fcmovnbe
jp
adc
andb
adc
test
or
mov
pusha
insl
rclb
js
add
test
cmp
orb
mov
xor
in
mov
sbb
test
insb
pop
mov
outsb
jo
fiaddl
gs
lret
cmp
fisubrs
mov
xchg
mov
push
mov
scas
push
jle
add
fucomp
cmp
xchg
cmp
pop
xor
aad
inc
movsl
or
push
cld
push
mov
loope
inc
and
leave
or
jo
pop
or
mov
shrl
and
int
cmp
adc
sbb
jne
out
xor
stc
push
lahf
shr
xor
test
cmpsb
ss
sub
xchg
hlt
mov
sub
inc
lcall
loopne
movsb
aaa
xchg
sbb
lods
ds
ljmp
jnp
cmp
mov
mov
xchg
jmp
movsb
arpl
fmull
inc
push
sub
sub
shrl
rorl
jb
sub
fsub
jmp
scas
lret
shrl
shl
insb
and
pushf
faddl
pop
or
push
sub
jg
insb
cmp
insl
js
cmp
and
dec
mov
or
imul
adc
rcll
mov
into
lods
mov
mov
lahf
iret
mov
stc
movsl
je
into
xor
mov
and
sar
xchg
mov
sahf
int3
add
daa
xor
sbb
std
add
inc
push
iret
iret
ljmp
lea
cmp
jne
out
or
arpl
xchg
mov
adc
stos
pop
popf
les
push
xchg
inc
dec
xchg
cmp
pop
fldt
imul
mov
add
and
imul
push
pop
movsb
push
aad
mov
int
jle
xchg
adc
push
pop
pop
arpl
rorl
cmp
or
mov
xchg
cmp
sahf
pop
xor
sbb
mov
ret
in
dec
fisttps
pop
insb
xchg
sub
pop
dec
pop
jns
cmp
add
adcl
lds
leave
jne
push
loope
enter
and
std
xchg
loope
cmovns
cmp
push
mov
les
jae
add
lret
sub
clc
lock
or
xor
aaa
mov
fwait
and
das
shr
jmp
lahf
pop
xor
xchg
test
in
sub
push
mov
inc
mov
cmp
dec
pop
cmp
ljmp
movb
mov
xor
mov
out
ds
bound
mov
or
xlat
mov
push
pop
cmpsb
xchg
bound
jg
int
nop
ss
push
ljmp
ss
repz
jmp
aas
ljmp
clc
jg
repz
sar
dec
or
adc
add
or
sbb
in
cmp
push
cmp
jbe
pop
movsb
arpl
dec
call
cmc
xor
fwait
enter
mov
xlat
popf
and
push
outsb
cmp
inc
cli
jmp
nop
mov
and
pusha
rcl
push
xchg
fs
imul
mov
aaa
and
add
xlat
push
call
sub
pop
jae
push
popa
or
lock
jbe
outsb
and
xchg
sbb
xor
nop
orl
sbb
and
cmp
jecxz
leave
and
mov
inc
arpl
and
cmp
inc
imul
aaa
cmp
insb
jne
outsb
pop
cmp
pop
test
loope
fistpl
fmuls
stos
jecxz
loope
insl
and
mov
test
cmp
loopne
adc
mov
movsb
cmp
leave
xlat
pop
mov
xlat
adc
in
stc
add
jno
xor
sbb
ja
clc
cltd
les
lcall
adc
loopne
popf
in
xor
jns
mov
mov
push
rcl
fstpl
lahf
and
xchg
dec
dec
xor
aam
xchg
je
lret
lods
hlt
add
xchg
ret
mov
imul
push
jo
leave
fidivs
add
sahf
pusha
sbb
and
ret
int3
jmp
xchg
xor
xchg
dec
mov
lock
sbb
xchg
sub
push
sbb
dec
shrb
cld
jecxz
std
jb
aaa
inc
jl
pop
xchg
jno
push
lret
stc
lahf
or
orl
fs
outsl
bound
mov
pop
adc
ret
xor
js
add
or
push
cld
xor
test
jge
fwait
mov
gs
ss
mov
shl
popa
lock
jb
call
push
lahf
cli
sub
xlat
lds
dec
ja
mov
push
movsl
mov
int
push
cmp
cmp
and
xchg
push
cli
pop
dec
jo
out
sbb
and
sub
xchg
fimull
das
and
xor
xchg
pop
xor
loopne
test
enter
das
push
push
sub
sti
loope
mov
jg
ljmp
aas
in
xor
pop
nopl
pmulhw
lcall
or
das
pop
rcr
stos
mov
imul
addb
mov
es
push
inc
dec
or
sahf
sub
out
inc
call
push
nop
mov
cmpsl
pop
cmp
cmp
nop
imul
sbb
incl
pop
mov
push
fcom
ret
sub
fistpll
or
xor
add
pop
inc
dec
test
ds
rol
iret
mov
das
push
lods
jecxz
pop
je
insb
dec
jle
jbe
gs
push
loop
gs
insl
mov
shr
or
jge
push
jge
add
ret
mov
fcomip
and
adc
mov
and
sbb
xchg
sahf
cmp
js
std
insb
sbb
pop
push
mov
jmp
xchg
xchg
movb
cli
shlb
insl
repz
and
adc
jne
fnsave
jg
fistpll
lret
dec
dec
call
dec
mov
aas
cmpl
ja
rclb
fisttpl
pop
js
jmp
pop
imul
mov
lds
shrb
mov
cmpsb
mov
int
jl
dec
sbb
cmpsl
push
push
imul
or
aas
sarl
test
and
cmp
inc
jg
cld
push
shl
inc
test
xchg
push
push
cs
or
mov
test
sahf
int3
imul
jmp
mov
push
jae
ljmp
ss
cmp
pop
sub
pop
sub
mov
das
in
outsl
push
and
mov
mov
lea
push
imul
das
cs
psubusw
js
jns
pop
mov
mov
inc
add
mov
rclb
iret
in
cltd
add
js
icebp
insb
mov
jbe
dec
fsubrp
add
dec
rorb
push
push
cli
mov
mov
popa
pushf
dec
je
or
in
loopne
dec
xchg
push
pop
lret
mov
subb
jae
or
rcrb
push
inc
test
out
cmovns
dec
mov
add
lret
sub
sbb
add
mov
dec
test
inc
mov
test
lcall
or
xchg
mov
jne
cltd
insl
pop
push
loop
in
push
ret
mov
cmp
push
test
inc
ja
fsubrl
xchg
dec
mov
out
mov
sub
ret
sub
adc
push
or
cmp
aaa
adc
jbe
xchg
cmp
popl
in
sub
popa
out
pop
and
push
rclb
fimuls
or
xlat
fisttps
lret
sti
fmulp
mov
pop
mov
jl
jecxz
cmp
out
pop
out
sub
sbb
pop
out
lock
pushf
loopne
cmpsl
enter
mov
shlb
inc
popf
sub
cmpsl
pop
xor
mov
inc
leave
push
mov
js
jb
mov
mov
cmp
mov
lea
jns,pt
push
lock
stos
push
loope
test
xor
adc
loope
add
pusha
sub
sbb
and
xor
in
out
sarl
sub
dec
test
push
fldl
lret
xor
xor
pop
js
xchg
cwtl
stos
ja
push
divps
in
jnp
fiadds
sub
jo
les
or
push
int3
cli
push
enter
das
inc
stos
xchg
out
int
lret
cld
movsl
cs
mov
lahf
mov
cmp
sti
addps
push
cmc
negl
dec
xchg
mov
adc
mov
rsm
pop
frstor
dec
in
inc
cmp
add
lods
dec
imul
xchg
mov
arpl
mov
sub
pop
loope
cwtl
jg
ljmp
push
dec
sahf
iret
jmp
out
insb
insl
or
fists
mov
pop
xchg
push
add
cmp
xchg
gs
mov
je
lock
in
push
sahf
in
test
and
daa
mov
mov
loopne
fidivrs
jne
out
mov
push
ret
pushf
lock
cmpsl
cmp
mov
loope
dec
cmp
mov
inc
adc
xchg
ja
mov
je
cmp
push
outsb
roll
in
dec
dec
scas
push
jmp
pop
enter
jnp
shll
push
inc
add
shll
sub
dec
scas
adc
stos
sbbb
rolb
jecxz
lahf
xlat
mov
jbe
push
xor
scas
mov
popa
orb
std
pop
dec
cmp
lds
cmpsl
std
lea
adc
fsubr
pop
orb
jp
scas
sbb
lcall
and
pop
mov
inc
imul
add
and
push
jo
push
mov
in
mov
fs
dec
std
jbe
mov
rorl
testb
js
cmpsb
leave
dec
or
push
scas
xchg
sbb
bound
movb
mov
xor
jnp
add
imul
ljmp
xlat
push
mov
add
push
aas
add
in
inc
out
sbb
xor
fcomi
and
fistl
mov
cmpsl
mov
test
add
das
lret
push
test
jecxz
push
popf
add
ljmp
and
push
xor
dec
mov
add
jbe
dec
sahf
inc
mov
pushf
jno
pop
stc
xor
cmc
sti
loop
pop
push
rcrb
mov
aas
inc
cmc
sbb
adcb
test
fcmovnb
stos
fsubs
pop
push
add
mov
xor
xor
cmpsb
pop
jb
sub
dec
and
cld
and
scas
stc
xchg
cs
jmp
leave
incl
push
fst
aam
pusha
mov
scas
dec
lea
pop
mov
cmp
adc
jne
das
xor
xor
pusha
sti
sbb
rcl
and
stos
mov
push
aad
fcmovbe
mov
js
mov
rcrl
sbb
mov
mov
into
dec
pop
enter
in
cmp
sahf
movsb
push
cmp
arpl
xor
idivb
mov
hlt
test
sahf
add
data16
mov
add
pop
stos
jbe
cmp
jo
daa
and
imul
push
stc
cmc
jne
in
fldenv
dec
and
aad
jo
repnz
or
push
xchg
jbe
movsl
insb
push
out
xor
loop
in
arpl
lahf
addb
xlat
push
or
icebp
mov
roll
jp
pop
ljmp
sbb
push
mov
pop
xchg
xchg
mov
cs
adc
jbe
mov
inc
in
arpl
cmp
insb
inc
insb
jle
sarl
cltd
xchg
lods
cmp
bound
dec
mov
mov
and
push
insl
cltd
loopne
in
sbb
and
xorb
movsl
pop
cmp
rsm
cmp
fists
stc
xor
imul
repnz
cmp
ret
jne
int
out
sbb
pushf
pop
jnp
popf
pop
lods
xchg
pop
dec
or
fmuls
ja
lods
jae
stos
sbb
add
sbb
push
ss
sub
cmc
outsl
sub
popf
xor
lcall
cmp
addb
xchg
mov
mov
repnz
add
add
xchg
cmp
sbb
jb
pop
data16
mov
in
loopne
jge
clc
jg
pcmpgtb
dec
test
xchg
mov
dec
sbb
xor
es
popf
in
mov
ds
ret
imul
dec
nop
add
or
or
jbe
test
aaa
inc
aad
add
adc
in
sub
aaa
fwait
addb
fsub
mov
add
stc
xlat
xchg
cmp
pop
mov
loopne
jne
adc
jne
rorl
das
mov
xchg
xor
mov
xchg
mov
add
mov
cli
cmp
jl
add
rclb
hlt
nop
lods
mov
add
push
fcomi
cmp
jmp
enter
pop
mov
mov
adc
mov
call
hlt
jbe
lret
mov
in
pop
jb
jb
and
add
jns
aad
cmp
call
das
insb
mov
lods
clc
mov
int
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
movsb
xchg
ret
bound
pop
bound
enter
shrb
daa
mov
mov
loop
cmp
push
lahf
lea
or
mov
dec
inc
popf
xor
ds
out
adc
insl
xchg
xor
sar
or
rorl
cmc
icebp
jns
mov
in
ficoml
cmpsl
jb
loop
dec
mov
popf
or
mov
in
sub
jmp
adc
lahf
aas
dec
ds
movsb
inc
sub
js
sbb
shll
sub
aaa
and
rclb
push
cmpsb
push
test
repz
shr
xlat
rcrb
mov
idiv
jmp
lahf
cmc
xchg
add
sub
daa
jns
push
xor
xchg
lcall
inc
mov
jg
xchg
data16
ja
mov
adc
dec
pusha
and
jns
dec
fidivrs
dec
call
ds
pop
push
sarl
lods
push
in
xor
vsubss
push
mov
shl
push
mov
mov
sbb
sub
jo
test
das
cmp
loop
mov
into
sahf
and
cmp
adc
fwait
dec
mov
cmpsb
cmp
lcall
cmpsl
into
ret
cmp
rorl
out
mov
orl
pop
add
out
ret
inc
inc
out
jb
jnp
dec
pop
dec
call
and
cmpsl
lret
jbe
jg
stc
insl
lds
loop
jb
inc
and
push
test
cld
mov
dec
push
mov
into
cmpsl
dec
xchg
xchg
stos
pop
insb
cli
inc
mov
push
push
jg
sbb
rcl
and
sahf
xor
sub
cmc
adcb
leave
cld
push
mov
ficoms
stc
imul
out
adc
test
hlt
js
push
inc
inc
shl
jb
scas
adcl
test
out
loopne
adc
push
mov
int
pop
shrl
lds
adc
cmp
out
push
xchg
insb
testb
loop
sbb
test
shrl
cmp
inc
dec
or
loope
data16
out
pop
and
insl
fcoml
ja
xchg
jne
loope
std
test
loop
sub
lock
test
loope
jecxz
add
add
daa
adc
subl
inc
push
rolb
cwtl
pop
bound
sub
add
jmp
mov
jbe
or
adc
push
lret
stc
xor
xchg
cmp
pop
cmpsb
sbb
repz
push
or
add
sahf
loopnew
in
push
shlb
jge
lods
repz
adc
insb
add
out
push
divb
add
aas
mov
pop
fistpl
std
and
fldt
push
js
mov
movl
xchg
inc
shrl
call
ja
mov
pop
and
test
js
ss
mov
or
sbb
jns
es
jle
sarl
jno
or
inc
jnp
or
lods
imul
outsl
cmc
push
mov
sti
mulb
imulb
jae
test
in
or
and
cmpsl
pusha
icebp
nop
pop
inc
fnsave
push
ror
sbb
sub
and
flds
or
dec
call
mov
and
jno
and
jb
rolb
ss
aam
jmp
popf
pop
push
mov
mov
gs
add
xchg
inc
repz
stos
lret
enter
xchg
ja
popa
gs
jl
sbb
xor
aad
adc
fnstenv
cld
into
xchg
inc
add
xchg
outsl
mov
mov
lds
pusha
push
hlt
les
lcall
xchg
arpl
xor
aam
mov
sarl
push
scas
test
sub
jg
mov
cwtl
sbb
popa
outsl
scas
push
out
dec
and
pushf
out
dec
pop
dec
mov
fldenv
arpl
aam
pop
fwait
jp
into
fsubs
int
cli
adc
repz
pop
and
add
mov
adc
je
test
jp
xchg
fisttpll
xchg
mov
pop
loopne
out
jp
cmp
add
jns
negl
mov
mov
adc
cld
inc
out
je
imul
mov
or
lahf
xchg
lret
and
mov
rclb
dec
mov
pop
xchg
pop
sarl
loop
xchg
xor
fucom
test
cmp
imulb
stos
mov
ss
sub
jae
pop
xchg
dec
arpl
fsubrs
inc
mov
movsl
push
jg
repnz
std
scas
and
icebp
lret
xchg
mov
addl
adc
mov
sub
push
xchg
fcmovnb
cli
mov
mov
sub
cmpsb
dec
es
push
ret
cltd
add
je
xor
ret
cmpsb
push
mov
in
lods
mov
pop
rcrb
fcmovu
mov
sti
enter
les
push
push
xchg
pop
xchg
cmpsl
add
push
xchg
movsl
mov
xor
cmp
in
pusha
lods
mov
ja
movsl
jp
sti
cmovg
xchg
and
fimuls
shll
mov
in
clc
push
pop
iret
push
adc
sbb
sti
and
sarb
adc
and
adc
aam
leave
aaa
jno
inc
shl
pop
mov
cltd
scas
js
mov
int3
popl
sbb
das
shl
outsb
ljmp
dec
repnz
out
and
sub
inc
into
inc
sub
or
jnp
inc
andl
int
pop
sbb
std
leave
dec
or
mov
inc
dec
rcrl
ret
in
mov
test
dec
pop
movsb
mov
mov
ror
jb
ds
inc
adc
xlat
rcl
fsubr
pop
pop
dec
test
jns
aam
rorb
mov
mov
stos
xor
xlat
mov
and
dec
push
pusha
mulb
sti
dec
or
inc
shlb
dec
fs
inc
adc
dec
dec
in
int
repnz
cmp
jle
mov
sub
sub
push
in
mov
and
cmp
pop
imul
adc
pop
fmuls
xchg
xbegin
pop
cmp
cmp
xor
ja
inc
scas
and
xorl
loopne
sub
cmp
sub
push
aad
ret
es
lds
dec
mov
fidivrl
jge
pop
or
pop
sbb
pop
js
insl
loopne
xchg
test
xor
push
shlb
push
das
jmp
pop
shr
sub
jno
sub
out
xor
cmp
add
aam
fwait
adcl
movsl
push
je
outsb
inc
shlb
scas
out
ficomps
cmp
cmc
cmc
xor
pop
stc
js
cmpsb
fcmovnu
inc
pusha
dec
sub
xor
mov
movsl
pop
fwait
and
int3
cmpsb
push
mov
mov
and
adc
xor
cmp
dec
movsl
sub
shl
mov
mov
shrl
lret
rorl
ja
fstps
or
lret
scas
psrad
lods
and
add
daa
das
lock
shl
adc
xchg
adc
subb
in
xor
je
inc
mov
cmp
mov
and
mov
mov
or
or
push
inc
adc
dec
jns
repz
dec
mov
push
sbb
jnp
xorb
push
jge
popf
adc
mov
sub
insl
call
cmp
mov
xchg
and
enter
iret
negl
sbbb
pop
subb
jmp
mov
and
jb
cmp
inc
leave
addr16
lsl
cmp
sub
mov
cwtl
std
daa
push
pshufw
in
jnp
add
push
cmpsb
aad
std
aas
xor
xor
dec
outsl
mov
rcrl
popa
clc
cmp
or
hlt
int3
jp
xchg
or
mov
sub
fdivrl
and
scas
jo
movsb
xchg
cmp
adc
in
int
mov
mov
inc
mov
adc
cli
rcrl
and
jecxz
sub
sub
mov
pop
cmp
rcrb
push
and
pop
fisubrl
adc
adc
and
ret
lds
mov
out
call
icebp
pop
jns
xor
pop
gs
int3
sbb
add
sbb
dec
js
pop
clc
iret
ja
mov
jns
or
dec
pop
mov
mov
push
mov
lcall
jno
scas
andb
dec
enter
scas
sbb
jle
cld
push
dec
outsb
movsl
nop
test
add
mov
adc
addr16
cld
mov
mov
mov
dec
movl
out
bnd
pop
incl
xchg
xor
ror
jmp
std
and
rorl
xlat
cmc
rorl
scas
pusha
insb
xchg
adc
mov
cltd
xchg
or
adc
out
jnp
mov
lret
fdivr
mov
mull
lret
and
out
mov
xchg
push
adc
mov
ljmp
push
jb
jne
repnz
xchg
mov
fmul
or
test
loop
pop
pop
loopne
dec
and
push
cmp
in
scas
nop
jg
fidivrl
cli
adc
add
xor
mov
jnp
test
sbb
cmp
dec
jmp
fyl2xp1
mov
bound
inc
test
dec
mov
loop
xchg
xlat
leave
jbe
gs
testl
out
push
and
xchg
jge
jge
sub
movsb
xor
jno
clc
es
ficoms
push
cmp
pop
xor
out
fldl
xchg
insb
xchg
jne
pop
inc
insl
push
and
lds
xor
mov
pop
pusha
aas
in
mov
sahf
fwait
lea
sub
dec
adc
add
cs
fnstenv
mov
aad
sarb
je,pt
mov
test
cmpsb
into
sti
pop
cmp
cmp
in
ds
rorb
inc
idivl
insl
sbb
inc
outsb
insl
xchg
lret
jae
jae
xor
fstpl
test
js
xchg
cmp
cmc
shrl
stos
int
mov
jae
sub
add
mov
or
les
add
ficompl
cmc
out
cs
test
cmpsb
mov
xor
and
jmp
sbb
sbb
mov
push
dec
jbe
add
sbb
jmp
cmp
pop
shrb
mulb
adc
mov
call
jbe
cmp
push
pushf
daa
add
jl
scas
cmc
inc
add
jnp
das
je
push
scas
mov
fnstsw
push
lods
push
xchg
dec
or
pop
jns
or
and
outsl
mov
ja
mov
sbb
scas
pop
sbb
xchg
sbb
xchg
sbb
fcmove
pop
xchg
mov
add
adc
fcompl
and
in
pop
sub
inc
push
pop
je
lahf
out
push
dec
pop
push
jno
fdivrs
repnz
jnp
inc
and
test
and
shl
in
cmp
aas
ret
loope
jnp
lret
test
test
shll
insl
jge
adc
daa
dec
dec
adc
loope
ja
lcall
loop
repz
or
lret
cmp
push
in
pop
add
lcall
shl
or
icebp
out
push
lea
or
ret
test
or
fisttpl
inc
inc
fnstcw
xchg
inc
xchg
outsb
and
aas
xchg
arpl
push
enter
ss
xchg
inc
dec
sbb
movsb
inc
xchg
inc
insb
xchg
dec
incb
stos
pop
stos
xor
pop
stc
leave
idivl
and
xchg
mov
or
mov
ja
nop
frstor
cmp
lret
loope
xor
or
in
jae
pop
and
pop
imul
xorl
inc
int
shr
push
or
fucomp
pop
push
cmpsl
push
mov
sarl
push
push
inc
or
les
call
mov
clc
mov
aaa
cmp
pusha
xchg
pop
mov
repz
or
scas
or
cli
shr
add
mov
dec
jmp
mov
and
cmp
jo
mov
dec
ret
jae
xor
fidivrs
mov
xchg
dec
xchg
sub
arpl
in
sbb
movsb
dec
xchg
mov
bound
test
repnz
cmp
mov
mov
sbb
pop
mov
and
jmp
xchg
pusha
inc
sbb
jle
pop
xchg
add
jne,pn
gs
cmpsl
sbb
outsb
sub
or
out
ffree
xor
jge
xchg
ss
mov
add
pop
jmp
aaa
repnz
test
inc
outsb
out
push
xor
push
jp
pushf
dec
mov
mov
rcrl
mov
inc
test
adc
movsl
jge
leave
mov
jno
xchg
xchg
push
sub
sahf
inc
ja
lahf
or
mov
xor
lcall
fbstp
dec
xchg
aas
cmc
movb
js
mov
mov
adc
push
ljmp
sub
or
adc
jge
lea
lods
jb
mov
fstl
divb
sbb
inc
neg
jb
and
pop
or
fimuls
repz
dec
and
fwait
adc
lods
pop
es
repz
hlt
push
or
xchg
push
lret
pop
mov
arpl
sub
push
mov
inc
outsl
sub
nop
jae
pop
lods
dec
lods
nop
mov
rorl
adc
stos
pop
cli
pop
imul
rcrl
and
mov
in
subb
and
sub
lea
push
adc
cld
sbbb
fistl
iret
scas
je
xchg
sbb
or
lock
nop
rorb
movsl
cmp
enter
out
lret
rcr
insl
sarl
imul
ljmp
in
iret
lock
mov
push
cmp
loop
icebp
inc
push
daa
add
call
out
repz
lods
push
and
loopne
stc
inc
cmp
or
sbb
sub
adc
fdiv
in
in
ja
fdivrs
jecxz
mov
jb
das
shll
and
jne
addl
xchg
js
call
jae
daa
in
add
cmp
call
aas
cmp
outsb
jmp
out
stos
in
repz
idivb
lcall
sbb
repnz
mov
mov
mov
inc
and
outsb
ret
add
aas
out
xor
or
in
bound
outsl
sub
fstps
jmp
bound
lcall
hlt
adc
adc
imul
pop
hlt
pop
add
pushf
fisubs
lds
scas
in
orb
les
lahf
sub
stc
cmpsb
movsl
adc
or
lods
cld
out
arpl
lret
cltd
shrl
jae,pt
iret
push
das
adc
jmp
rorb
dec
call
push
pop
cli
mov
fcompl
dec
push
or
xchg
aam
pop
jge
fnstcw
pop
xchg
ja
mov
clc
int
mov
repnz
mov
sub
shl
js
mov
or
fidivrl
and
popa
jmp
fists
stc
cs
arpl
movsb
nop
push
pop
aaa
inc
mov
mov
cld
mov
mov
rolb
xor
inc
or
std
test
cwtl
je
outsb
fdivrs
dec
dec
repnz
jbe
aaa
mov
ds
adc
inc
mov
mov
add
push
lock
push
cmp
sbb
ss
aam
mov
sub
inc
fadds
sbb
fld
pop
shrl
idivl
adcb
dec
movsl
lods
or
jmp
popf
mov
pop
xor
enter
cmp
lea
push
cmpsb
mov
push
sbbl
in
mov
loope
pop
jmp
sti
dec
jl
and
cmpsb
push
fdiv
das
ret
scas
fmull
adc
shrl
push
xchg
or
fcompl
pusha
xor
lahf
jns
cld
mov
xor
adc
test
popf
cmp
arpl
shl
push
outsl
push
stos
fdivs
jecxz
ja
push
hlt
inc
ret
mov
in
lods
out
mov
out
pop
adc
popl
repz
insl
roll
gs
mov
or
sbb
jge
mov
cmp
icebp
adc
lret
popf
add
jmp
inc
int
pop
pop
je
xchg
mov
adc
jp
mov
jmp
ljmp
sbb
cwtl
mov
js
pop
sub
pop
mov
xchg
imul
pop
ss
rolb
cld
sahf
in
add
xor
les
sbb
fwait
pusha
dec
mov
pop
pop
mov
daa
xchg
mov
bnd
fbstp
xor
out
push
mov
push
mov
jno
divb
test
mov
stos
mov
scas
cltd
movsl
cmp
aaa
mov
push
dec
loope
icebp
aas
repz
inc
pop
int3
mov
pop
sbb
fstpl
fnstcw
popa
insl
fdivp
es
test
loopne
ficoml
xchg
lods
fldcw
xor
sahf
jne
aad
call
dec
inc
lcall
dec
loop
cs
mov
popf
or
cmp
push
mov
or
popf
lcall
pushf
jne
dec
push
int
scas
jecxz
mov
mov
out
mov
loope
gs
inc
mov
daa
xor
xor
sahf
addr16
test
xchg
dec
sbb
das
inc
push
add
fwait
cmp
or
in
jnp
dec
addr16
jl
scas
gs
add
pushf
pop
push
mov
ja
mov
sub
sbb
idivb
sub
gs
int3
inc
mov
cwtl
cmp
dec
mov
lds
xor
shll
imul
mov
mov
lods
loopne
incb
lea
aas
mov
inc
dec
mov
and
jns
sbb
push
repz
adcl
mov
jbe
xor
fdiv
pop
rclb
nop
xlat
cs
cmp
sbb
cmp
sti
mov
out
mov
xor
out
ja
jecxz
loop
lea
pop
jo
rolb
ret
mov
cmc
sahf
push
mov
xchg
lret
fwait
mov
add
mov
adc
pop
sbb
dec
dec
nop
sub
jle
inc
stos
ret
xchg
inc
mov
inc
pop
jns
push
push
dec
scas
addr16
pop
aam
mov
loope
cltd
and
pushf
jl
rclb
inc
lock
pop
mov
and
xchg
lahf
xchg
mov
lea
inc
sbb
int
push
xchg
call
insb
fdivl
gs
pop
mov
inc
inc
push
mov
cmp
xchg
xchg
popf
inc
inc
cwtl
mov
or
jb
pop
shll
sbb
mov
xchg
stos
test
pushf
push
mov
dec
xchg
mov
inc
pushf
cmp
icebp
mov
imul
jecxz
inc
addr16
sbb
adc
mov
aad
lea
insl
mov
lock
mov
test
ret
in
lret
mov
ljmp
inc
in
xchg
jb
outsb
orb
dec
pop
jns
cli
cmc
sbb
cmpb
adc
das
mov
movsl
dec
clc
adc
dec
xor
inc
imull
fs
sub
mov
push
mov
xor
repz
xor
jne
stos
daa
xchg
adc
mov
sbb
jp
movsl
inc
test
notb
xchg
sahf
dec
cmpsb
pushf
or
xchg
xor
out
enter
kandb
sub
cld
mov
jns
pop
jg
call
aas
fcom
pop
sub
push
adc
stc
pushf
lock
push
mov
dec
push
mov
icebp
out
sub
sub
and
adc
xchg
cmp
push
rorl
and
xor
int3
dec
mov
repz
push
out
hlt
lods
push
out
or
xorl
scas
insb
mov
mov
lcall
or
or
imull
stos
or
mov
xor
lret
xor
pop
out
xchg
add
cld
cmp
nop
push
mov
inc
mov
fcoms
mov
fstl
in
in
inc
pop
xlat
fmull
push
jl
out
mov
jne
adc
rol
pop
mov
int3
xchg
rcll
mov
mov
mov
sub
push
fnstsw
adc
scas
loope
xor
in
frstor
cwtl
pop
cmp
ljmp
test
or
adc
int
jge
ja
xchg
imul
mov
xchg
out
and
call
inc
or
and
stos
out
xchg
or
movsl
es
xor
ja
dec
adc
addb
loope
adc
sub
in
fldcw
xor
cmc
xchg
or
add
xor
call
mov
lods
xor
dec
int3
push
xor
ds
mov
add
xchg
call
in
or
lods
push
loope
in
clc
mov
mov
mov
nop
push
fcompl
ss
fmull
cld
movsl
sarl
mov
cmc
push
das
or
mov
int3
and
push
xchg
cmp
mov
pop
adc
repz
add
fldt
cmpsb
xchg
popf
pop
fcomp
jb
sbb
xchg
sub
shr
mov
or
adc
and
pushl
out
xchg
out
pusha
push
adc
shll
sbb
ljmp
lcall
mov
jl
adc
cmpsb
mov
in
mov
es
sub
cmp
push
andb
imul
sbb
xor
adc
adc
js
xchg
ljmp
gs
nop
and
and
pushf
jne
mov
mov
pushf
lahf
pop
popl
pop
outsl
inc
or
arpl
add
and
test
nop
adc
test
repz
jae
icebp
mov
push
insb
shll
inc
sbb
lret
addl
xor
jle
or
sbb
push
xchg
adc
adc
daa
jmp
scas
clc
sub
dec
mov
pop
add
fs
adc
inc
mov
sbb
pop
lcall
stc
test
psubsb
lret
fcomps
in
mov
cs
jo
mov
and
fdiv
lret
adc
xchg
dec
and
adc
xchg
xor
mov
leave
push
fdiv
inc
push
mov
jno
push
loope
cmc
aad
aam
jle
mov
add
stc
fnstcw
lea
and
addr16
andl
sub
mov
int
dec
pop
addl
xor
push
out
outsb
xlat
add
std
outsl
cmc
jns
xchg
sub
pushf
lret
jns
inc
or
dec
icebp
fstps
cs
jae
fbstp
dec
cltd
add
jno
hlt
and
out
ret
push
ds
xor
mov
jl
imul
outsl
fsubl
push
cmp
mov
sbb
push
xor
gs
xor
lcall
addb
loop
je
or
out
sbb
mov
push
dec
test
push
mov
adc
clc
sti
mov
jae
mov
cli
xchg
movups
in
jmp
xlat
xchg
and
xor
popf
push
shll
push
sbb
addr16
mov
cmp
mov
cmp
dec
sbb
mov
push
testb
and
cmp
mov
mov
filds
adc
sar
and
sub
jne
arpl
into
mov
sahf
push
sub
or
lods
subb
push
mov
dec
dec
lret
jg
mov
imul
push
xlat
cmpsl
notl
sbb
mov
int3
xchg
sbb
push
fwait
outsl
push
jmp
adc
mov
int3
jecxz
mov
hlt
jecxz
mov
or
xchg
into
je
cmc
mov
xor
pop
adc
cmpl
ficoml
hlt
outsl
rorb
jecxz
add
stos
pop
out
dec
jmp
jmp
popf
xchg
sbb
push
lods
clc
stos
in
pop
stc
leave
sbb
or
inc
mov
cwtl
rorl
push
push
jge
cmp
mov
leave
popa
push
or
jl
aam
mov
adc
pop
pop
mov
daa
testb
sbb
mov
into
popf
cmp
icebp
mov
scas
mov
push
scas
or
enter
enter
sbb
dec
sti
mov
inc
or
in
out
xor
js
cmpsl
popf
repnz
ja
frstor
popl
cld
imull
push
push
out
shrl
out
insl
push
mov
adc
sub
mov
pop
add
test
sbb
or
popl
ds
jge
add
addr16
push
mov
pusha
adc
sbb
xchg
mov
in
push
mov
stc
push
mov
xor
or
andl
xchg
xchg
cmpsb
shll
pop
xchg
xor
or
test
push
call
mov
loope
xchg
jecxz,pn
or
push
cwtl
out
rolb
lret
adc
pop
fadds
push
mov
cld
pushf
mov
lods
out
sbb
and
insl
fcomp
stc
sub
pop
into
add
pop
ljmp
lds
movsl
aaa
jmp
addr16
out
mov
and
insb
test
mov
addr16
imul
push
add
jle
pushf
int
xchg
shl
paddd
dec
xorl
pop
push
mov
in
clc
push
xchg
fstl
test
cmp
mov
jb
adc
add
mov
push
mov
xor
dec
loope
mov
adc
mov
cmp
call
int3
inc
cmpsb
cmp
ret
xor
or
sub
inc
mov
cmp
or
xchg
out
in
push
jmp
xchg
inc
pusha
inc
mov
sub
hlt
fidivs
insl
and
jp
adc
loopne
ja
test
cmp
fdivrs
fists
xchg
pop
push
cmp
sbb
mov
int3
pop
adc
push
mov
xchg
cmpl
insb
xchg
arpl
lods
mov
orl
mov
aam
test
mov
jno
mov
dec
cs
stos
arpl
cmpsb
dec
ds
mov
fildl
cld
sbb
mov
or
loopne
jne
leave
jmp
sub
mov
pop
jno
aad
inc
stos
sti
dec
comiss
out
jo
ja
out
mov
xchg
insl
lahf
xchg
jecxz
loope
cld
sub
cmc
sub
push
inc
sbb
cld
loopne
sbb
scas
and
mov
int
jp
bound
jle
out
inc
fldenv
arpl
inc
dec
dec
arpl
cmp
pop
dec
call
or
sub
movsb
out
adc
addr16
pop
sbb
fnstenv
cmp
sbb
fs
outsw
jb
sub
pop
or
ficompl
fsubs
xchg
add
push
fimuls
add
mov
adc
in
iret
dec
fstpt
mov
xchg
dec
nop
cmp
aam
xor
cmp
xchg
inc
mov
ljmp
add
push
cwtl
mov
inc
imul
mov
push
pushf
adc
dec
scas
dec
fstpt
loope
xchg
mov
gs
test
mov
dec
cmpsl
jg
and
adc
test
cs
mov
es
inc
arpl
aaa
rep
in
cmp
and
lock
insl
xchg
pop
or
in
icebp
xchg
fs
cmp
sub
inc
mov
call
je
mov
xor
ret
adc
jns
das
jl
push
jo
ljmp
mov
adc
add
fsubrs
jb
imul
int
mov
imul
int3
cld
and
inc
mov
or
cmp
or
stos
push
outsb
mov
mov
xor
push
mov
aam
repz
jg
cwtl
lea
movsb
mov
push
fcoms
inc
pusha
adc
shrd
icebp
cmpsl
xor
es
neg
cmc
leave
outsb
adc
aaa
stos
cwtl
push
mov
sub
ja
pop
push
xchg
adc
ss
xor
pop
dec
fimuls
mov
and
dec
inc
mov
lret
xchg
pop
cmp
pop
daa
push
xlat
out
jns
pop
cwtl
ss
xor
dec
pop
repnz
sbb
int
mov
mov
sub
xor
jecxz
cmp
mov
mov
int
xorl
cwtl
in
stos
pop
adc
dec
xchg
push
adc
cmp
clc
adc
xor
daa
push
push
hlt
dec
repnz
xlat
mov
outsb
icebp
xor
adc
jl
dec
inc
cmc
mov
ljmp
into
push
ss
repnz
jae
push
pop
sbb
inc
mov
das
jmp
inc
add
xchg
in
outsl
lods
scas
mov
je
adc
adc
and
les
not
xor
cmp
cs
or
insl
dec
inc
aam
mov
pop
push
adc
push
add
jmp
sbb
jecxz
push
ss
lods
mov
jle
loope,pt
cld
arpl
rolb
idivb
pushl
xchg
into
in
pop
sub
xchg
popa
mov
inc
push
cmp
push
pushf
xor
adcl
xor
and
andb
jecxz
jp
mov
jmp
cli
sub
sub
sbb
ret
mov
cmpsl
enter
sarb
mov
jle
sub
in
dec
and
cmp
fs
sub
pop
sub
mov
pop
decl
mov
push
mov
sbb
xor
cs
int3
xchg
je
mov
mov
arpl
xchg
sbb
ds
int3
inc
inc
fimuls
push
add
stos
mov
arpl
pop
inc
andl
cmp
jo
and
pop
cwtl
cmpsb
stos
shll
xor
das
lret
in
pop
add
inc
js
inc
jl
push
mov
ja
imul
xchg
outsl
xchg
movsb
push
mov
fldln2
xchg
ret
data16
dec
jno
or
sub
ja
cmp
aad
mov
cwtl
in
jne
mov
push
ds
hlt
scas
pop
jo
clc
dec
pop
lock
mov
cmpsl
cs
pop
dec
pop
xchg
pushf
ss
add
inc
int
mov
stc
xchg
inc
mov
stc
or
add
mov
lock
cmpsl
jp
xchg
mov
push
pop
test
pop
ja
lahf
mov
push
dec
andl
jp
cmp
ja
jmp
insl
sub
cs
sbb
in
sub
icebp
adc
fimuls
movsl
xor
ss
aad
shr
out
and
enter
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
imul
bound
pop
bound
jne
insb
jnp
ficoms
cli
scas
and
pop
mov
gs
mov
xchg
scas
mov
divb
insl
cmp
xlat
pushf
fdivp
sbb
fdivr
stos
jge
jae
sub
xchg
repnz
inc
aam
fs
movsb
lock
loope
cmp
inc
arpl
push
mov
and
jbe
push
aad
push
inc
sahf
sti
jecxz
in
pop
pop
popa
scas
add
push
mov
jb
popa
push
xor
popa
fs
push
mov
repz
rorl
mov
jne
jp
in
xor
push
lret
sub
xchg
xchg
call
mov
cwtl
cmp
iret
call
aam
lock
add
and
pop
in
pop
jae
push
push
lret
add
jmp
mov
fs
sub
adc
or
pushf
bswap
lods
or
dec
add
insb
pop
dec
xchg
add
les
push
jge
jns
lret
les
daa
or
arpl
test
push
jbe
leave
lahf
jbe
fmull
sahf
ljmp
cmc
arpl
cmc
xchg
clc
xchg
cmpsl
add
out
stos
scas
and
and
sub
mov
or
xchg
aas
addr16
lods
movsb
rclb
and
fldt
in
mov
xor
xor
repz
rorl
stos
lahf
pop
and
dec
call
sbb
xchg
jns
lcall
lock
pop
xchg
mov
fwait
es
in
push
mov
data16
in
sub
xor
sahf
nop
or
aam
xchg
xchg
popa
fimuls
hlt
in
or
push
pop
scas
and
or
adc
ss
pop
cwtl
mov
cmc
sahf
je
daa
mov
in
mov
fidivl
mov
add
dec
movsl
xchg
dec
xchg
lcall
lahf
insl
out
sbb
xchg
out
or
inc
aad
popf
lds
popf
mov
ror
test
and
jb
or
bound
orl
xchg
ljmp
rorl
dec
sbb
xor
ljmp
lods
ret
dec
sub
rcll
sub
scas
add
test
and
idivl
fildl
stc
inc
les
adcl
nop
fsubrs
adc
test
xorb
arpl
inc
xchg
mov
push
or
into
repnz
data16
mov
pop
insl
enter
loope
push
push
in
movsl
pop
cmp
mov
dec
rorb
mov
jge
std
lods
fidivl
das
arpl
aas
and
nop
dec
addr16
dec
and
sub
push
icebp
pop
pop
mov
xor
mov
mov
xchg
fidivl
arpl
je
mov
jo
inc
call
fxch
lods
in
push
adc
add
sbb
jecxz
xchg
pop
fidivl
or
pusha
stc
mov
push
sub
into
repz
mov
adc
or
xchg
jge
mov
xchg
movb
jle
and
mov
jg
lea
or
lcall
add
pop
or
or
data16
mov
mov
and
xchg
push
push
mov
push
in
mov
call
shll
in
fs
mov
in
and
or
add
mov
push
jle
mov
sub
mov
jbe
out
push
call
aaa
xchg
xchg
jbe
clc
stc
xchg
sbb
lea
sti
lea
jo
mov
js
pop
jle
bound
push
out
xchg
pop
dec
and
enter
divl
push
jbe
push
pop
movsb
shll
daa
lret
add
push
or
call
mov
pop
push
jl
call
adc
sbb
jne,pn
test
enter
loopne
fwait
adc
je
push
push
or
or
cltd
xor
je
or
lods
pop
add
divb
cmpsl
fiaddl
decb
loop
out
subb
ljmp
sahf
or
out
imul
push
inc
mov
xlat
xor
adc
xchg
out
test
xlat
xchg
lods
cmp
decl
mov
es
sub
cmp
push
mov
add
jns
pop
daa
out
imul
add
popf
cmp
jnp
xor
mov
movsl
test
pop
or
scas
jae
sbb
lods
mov
jne
mov
fs
fcompl
push
add
das
mov
in
sub
pop
pop
daa
xor
fistpll
xchg
and
sbb
leave
sti
adc
xchg
imul
ss
jbe
rcll
add
adc
ret
fwait
sub
inc
xlat
or
jmp
stc
or
stos
lcall
pop
or
xchg
or
mov
rolb
push
add
sub
in
jae
stc
fmul
push
icebp
push
pop
inc
and
inc
or
stc
pop
arpl
add
pop
cmovnp
test
push
dec
push
sub
mov
mov
sti
mov
mov
inc
mov
mov
inc
enter
loop
aas
test
cmc
call
mov
push
movsl
scas
call
xchg
push
fcompl
cld
mov
and
pop
push
add
push
pusha
aas
dec
rcrl
cmc
adc
xor
in
lea
push
xchg
add
jnp
pop
push
pop
push
jmp
aas
jne
sub
insb
cltd
sti
add
test
je
dec
scas
fists
and
scas
sub
fwait
and
adc
ljmp
adc
and
mov
in
mov
mov
das
cwtl
inc
aas
dec
xor
outsl
mov
xchg
pop
inc
loope
lret
xadd
dec
add
sbb
loop
insb
mov
lods
sub
inc
int
xchg
xchg
mov
iret
add
dec
imul
xchg
cld
mov
jl
cmp
leave
arpl
cltd
rorb
inc
xor
scas
dec
xchg
pusha
fs
mov
das
in
mov
fwait
das
add
pop
inc
jb
repnz
daa
add
xchg
out
mov
sbb
pushl
jmp
test
xchg
les
sub
add
mov
pusha
sub
pop
cmp
subl
outsl
add
dec
test
in
das
sub
hlt
enter
lret
cmp
ret
out
xor
dec
xor
adc
or
shll
jbe
mov
xor
ret
mov
nop
aam
sbb
jl
xchg
pusha
iret
and
outsl
fldpi
out
pop
pop
stos
cmp
xchg
aas
inc
out
imul
shlb
sub
fdivr
sbb
adc
stc
xor
ds
dec
out
ss
sarb
inc
cmpsb
jbe
mov
jnp
pop
pushf
test
sbb
arpl
sub
jbe
in
in
xchg
fisttpll
popa
cmp
jns
and
xchg
dec
cmp
inc
cli
out
inc
in
mov
and
mov
jne
pop
fstpl
mov
adc
ss
cli
pop
push
nop
les
les
aad
add
ret
xor
sub
xor
int3
push
push
adc
int3
sbb
push
mov
sbb
inc
cmp
imul
mov
mov
dec
and
int3
inc
stos
xchg
in
pop
jl
push
stos
testl
std
js
sbb
or
push
stc
xor
cmp
and
insb
pop
clc
imul
int
sub
cltd
shlb
mov
cmpsb
xchg
or
ret
scas
test
xor
into
test
xchg
ret
push
and
sub
xor
push
or
sbb
outsl
icebp
or
cmp
outsl
sub
xchg
sarb
and
iret
jl
cmpsb
data16
ja
cmp
jae
push
bound
js
bound
aam
push
dec
fnstenv
pop
sbb
mov
and
jmp
ss
repz
mov
test
stos
jl
cmp
inc
push
add
mov
xchg
int3
in
popf
icebp
xchg
shr
inc
mov
dec
or
mov
movsb
idivb
sub
in
dec
fstpl
pop
rcrb
fistl
jns
jl
mov
mov
and
jb
or
and
sbb
adc
inc
mov
cmp
or
mov
call
add
sbbl
adc
and
pop
xor
outsl
lret
mov
mov
add
jb
mov
mov
mov
jno
sbb
jb
sub
mov
cmp
iret
mov
cmp
insl
test
imul
xchg
ds
push
lods
fdivr
mov
outsl
cmp
pop
rolb
in
push
test
mov
pop
mov
or
or
aas
js
les
mov
xor
mov
mov
roll
inc
mov
or
frstor
sbb
or
ljmp
lea
stc
add
push
add
lret
jecxz
gs
jbe
incl
push
ret
and
cltd
scas
arpl
test
push
cmc
cmp
jge
scas
push
or
jmp
scas
dec
daa
leave
cs
inc
lret
test
test
jo
pop
out
add
push
fmuls
or
mov
cmp
scas
xor
jl
dec
out
out
adc
sbb
pushl
ret
cs
push
lcall
dec
dec
mov
into
addr16
sbb
test
orb
pop
xor
divl
xor
popf
mov
cmp
add
jnp
push
out
pushl
cmpsl
sbb
dec
loope
cmp
stos
outsl
or
inc
ds
sti
idivb
movsl
addl
lods
scas
or
loopne
mov
js
dec
inc
lcall
sbb
int
int
scas
std
loope
data16
cmpsl
testl
aad
xor
gs
xor
mov
hlt
sbb
push
cmpsl
jecxz
inc
daa
repnz
gs
adc
lahf
mov
xor
fwait
pop
dec
push
mov
mov
jnp
shll
add
stc
xor
in
mov
or
jmp
jp
push
fldt
and
push
cs
push
push
out
pop
fadds
fsubs
xlat
mov
aam
in
in
aam
fwait
cmpsl
fbld
shl
enter
jnp
je
sub
inc
js
shl
lods
pop
mov
subb
cmp
enter
in
adc
stos
iret
pop
gs
out
push
xor
jo
and
mov
push
aad
pop
loop
aas
fcmovnbe
lods
cmp
lods
sbb
dec
and
push
pop
loope
jb
loopne
push
or
xor
lods
xor
xor
test
pop
dec
or
in
cmp
dec
in
aad
mov
daa
lret
sahf
in
test
daa
pop
leave
in
inc
pushf
cs
ret
out
and
data16
xor
mov
dec
shll
icebp
fstpt
fldt
icebp
mov
sbb
test
lret
mov
idivl
nop
dec
jmp
pop
dec
cs
outsb
movsl
shll
dec
jge
xor
loop
pop
roll
sub
pusha
cmp
pop
jo
icebp
andb
sbb
arpl
cmc
fsubr
adc
lea
jmp
std
clc
pusha
jmp
in
sbb
dec
inc
lods
stos
popf
out
outsb
outsl
in
pop
out
ret
adc
pop
push
rorl
mov
call
outsl
icebp
inc
mov
mov
jbe
xchg
push
jne
shl
pop
cmpsb
dec
cmp
mov
gs
jecxz
ret
cmp
cmp
mov
jge
iret
sbb
movsl
out
jb
push
out
cmp
pop
inc
push
xchg
xchg
icebp
mov
repz
and
jecxz
and
xchg
mov
lock
add
stos
lock
jp
cmp
int
cs
mov
int3
cmovle
mov
inc
add
fsubrs
jae
adc
mov
add
cmp
nop
and
inc
pop
aaa
xchg
call
xor
loop
insb
js
ja
outsl
or
rcrl
push
xchg
loop
fdivr
ficompl
cmp
in
test
pop
pop
ret
test
outsl
cmp
cmp
jbe
out
inc
outsb
add
dec
jecxz
mov
fistps
gs
and
adc
ljmp
and
test
rclb
aam
mov
xor
pop
sti
mull
addr16
repnz
rclb
mov
pop
xchg
mov
lahf
push
cmp
pop
test
std
cmp
scas
stos
mov
cmp
mov
inc
out
sbb
push
vinsertf32x8
icebp
and
lcall
sub
or
jne
xor
loop
add
sub
out
ja
mov
xchg
mov
xchg
sbb
cmp
ljmp
add
jb
mov
andb
and
loopne
push
sub
adc
rorl
enter
push
jmp
cmp
data16
xchg
sub
or
xchg
adc
mov
sub
pop
rorb
add
cmp
adc
jge
xchg
xchg
enter
push
cld
cmpsb
sbb
mov
fistpll
inc
jne
jle
jl
mov
in
mov
xor
out
fadds
std
pop
push
fwait
icebp
dec
aas
ja
jg
sbb
dec
add
sub
xchg
imull
push
rorl
pop
inc
push
aad
sub
and
dec
outsb
cmp
aas
icebp
pop
popf
inc
sbb
jg
mov
xchg
mov
mov
andb
popf
or
jg
sbb
shr
mov
icebp
inc
js
test
stos
jb
das
jmp
shl
fisttps
dec
xor
test
mov
mov
call
xor
lret
repz
lahf
jg
pop
flds
insb
push
nop
cld
sarb
insl
jg
fsubrl
lods
shlb
in
add
cmp
mov
in
xor
push
jb
inc
inc
xor
mov
and
xor
arpl
mov
andb
mov
pop
cmp
ret
jo
imul
and
aas
cmp
mov
pusha
jne
fisubrs
sahf
cmp
xchg
or
mov
xchg
nop
mov
xor
sbb
lret
pop
popa
dec
push
jbe
aaa
or
or
jo
aam
cli
lea
out
shll
jmp
push
out
mov
cwtl
ljmp
cltd
pop
cmp
je
sbb
adc
jge
data16
dec
aas
dec
ret
mov
stc
dec
lcall
je
popa
test
add
pushf
test
sub
add
sbb
aad
jmp
insl
arpl
lcall
ds
fstp
cmp
in
loop
and
push
mulb
mov
adc
stos
leave
mov
lahf
scas
fsubr
jns
push
lret
movsl
dec
pop
sub
jl
scas
mov
mov
fucom
fidivs
popf
mov
mov
daa
push
push
sbb
pushw
push
cmp
sub
int
dec
imul
pushf
mov
lock
push
xchg
push
cmp
add
gs
dec
negl
mov
inc
scas
mov
dec
setae
mov
repz
enter
inc
testb
ja
jge
lods
ss
ds
jno
mov
sti
jo
fsubs
sti
xor
mov
push
dec
ret
mov
in
pcmpgtw
pop
cmc
sahf
loope
scas
pop
mov
cli
mov
repnz
int3
scas
xor
leave
add
pop
ror
and
ss
mov
repnz
inc
push
add
std
movsl
popa
jo
pop
pop
in
andl
loope
pop
adc
lret
int3
lds
xchg
mov
ret
out
aaa
push
cmp
cs
ljmp
sbbb
add
scas
pop
sbb
outsb
adc
dec
sub
dec
xor
sti
jbe
jmp
lret
cmp
scas
pop
mov
mov
mov
push
hlt
movsl
aam
xchg
or
xchg
sub
xchg
inc
xor
cmp
push
sbb
insb
push
test
scas
test
xchg
mov
or
fwait
loop
mov
mov
mov
ret
mov
ljmp
mov
dec
inc
ror
dec
adc
mov
xor
adc
mov
sbb
mov
pop
lcall
xchg
mov
jg
xlat
std
addr16
xor
int3
mov
mov
mov
inc
je
fadds
mov
movsl
jb
lcall
pop
or
adc
mov
sahf
xor
push
mov
lds
mov
fs
in
scas
xor
inc
lret
scas
mov
and
mov
sub
scas
daa
dec
shll
incl
xchg
cmp
inc
cmp
mov
dec
mov
and
bound
test
ds
sbb
js
jp
ds
sbb
testb
addb
sub
popa
push
mov
sbb
lcall
scas
ds
in
sub
mov
mov
mul
inc
cmpsl
dec
bound
loope
and
and
xchg
dec
aam
xchg
jmp
jnp
fs
xlat
inc
pop
inc
cs
int3
pusha
push
jecxz
ret
testb
in
lods
cvtdq2ps
pop
jns
loopne
xchg
flds
popa
mov
cwtl
cmpsl
dec
push
jo
pop
jmp
cld
aaa
adc
inc
clc
aas
adc
ds
inc
jl
push
loop
fbstp
movsl
mov
addr16
out
push
and
mov
and
mov
stos
scas
into
aaa
push
stc
xlat
stos
xchg
fldl2t
jl
mov
std
add
andl
ficoml
ja
lret
xchg
pop
scas
mov
and
scas
xor
sub
dec
cmp
es
lock
imulb
sub
or
pop
aam
sbb
push
push
lods
adcl
mov
les
mov
int3
mov
pop
cmp
cld
divl
cmp
sub
stc
jg
add
inc
arpl
fcomip
mov
and
dec
sbb
fs
rdtsc
rolb
inc
push
lods
iret
add
in
xor
gs
or
inc
mov
mov
mov
and
aad
mov
xchg
pop
mov
jle
in
repnz
jns
cmc
jg
scas
pop
push
jno
in
inc
loopne
ret
xor
pop
test
ds
cltd
loopne
fadds
cld
xor
xchg
pop
cmc
add
int
divl
or
pop
pop
into
mov
mov
jo
inc
mov
mov
mulb
dec
push
or
dec
fsubrl
repnz
ret
rclb
xchg
mov
pusha
scas
jle
icebp
in
inc
inc
test
xchg
push
fcmovb
test
mov
sub
out
cwtl
dec
and
outsl
push
mov
lods
xchg
jbe
adc
out
inc
pop
movsb
mov
push
loop,pt
shlb
lea
mov
inc
divb
and
inc
daa
push
pop
ljmp
mov
jmp
shrb
dec
add
movsb
mov
jns
fadd
pop
xchg
jl
sbb
hlt
data16
stos
xchg
test
dec
mov
sahf
cmpsl
pop
pop
movsl
enter
lcall
mov
lcall
loop,pn
sbb
loope
sbb
inc
pop
jg
mov
mov
adc
call
cltd
pop
add
es
jnp
inc
test
clc
sbb
scas
lret
sub
jo
js
xor
dec
pop
add
fs
cmp
fdiv
pushf
scas
iret
lret
int
sub
dec
pusha
pop
adc
sahf
push
cmp
mov
pop
sub
xor
or
mov
cld
out
fsubs
jnp
add
inc
rcrb
push
ror
enter
clc
mov
xor
cmp
mov
dec
mov
xchg
jge
insl
test
pop
out
cmp
js
hlt
lds
dec
gs
mov
jle
push
xor
les
mov
and
loope
dec
jnp
call
cmp
jecxz,pt
mov
roll
push
adc
test
fdivrs
aad
in
pop
dec
fwait
xor
bound
mov
xor
cli
out
imul
and
xor
jne
adc
inc
sbb
bound
decb
sbb
dec
inc
lods
fidivrs
sbb
rcl
aas
xchg
jns
push
popa
mov
cmpsb
insl
dec
dec
pop
aam
pop
ret
ret
xor
adc
in
pop
call
les
sbb
and
cltd
rolb
push
or
sahf
js
push
push
cmc
xor
test
cmp
scas
mov
adc
xor
mov
xor
std
or
rorl
cltd
gs
out
js
mov
mov
dec
lahf
lcall
sub
cli
lock
xchg
xor
xchg
xchg
and
dec
sbb
insb
repnz
xchg
ljmp
fs
mov
mov
mov
push
inc
mov
xor
setno
test
pop
loopne
mov
outsb
das
cmp
mov
outsl
jg
jns
insb
push
xchg
test
fidivs
pop
dec
fbstp
fistl
or
xchg
pop
aaa
push
adc
sub
in
mov
push
orl
mov
cld
lds
dec
jmp
pushf
outsb
xchg
xor
push
out
xchg
fdivs
sub
ficompl
xchg
popf
dec
popa
ds
cwtl
cli
adc
mov
jno,pt
adc
sub
xorb
inc
adc
leave
adc
in
fldl
out
scas
adc
inc
mov
adc
sarb
and
sub
mov
js
cld
inc
popa
cmpsb
scas
pop
mov
xchg
into
loop
testb
test
or
cmp
add
xchg
cltd
test
divl
pop
mov
dec
je
push
aad
jle
repz
push
std
cmp
pushf
jg
mov
or
inc
add
sub
mov
outsb
iret
test
adcl
mov
add
in
dec
repz
cmp
bnd
aam
mov
in
sbb
repnz
sub
and
cmpsb
gs
push
jne
pop
mov
in
aad
push
cli
cmp
cmpsb
cwtl
jmp
cs
push
dec
fbld
pusha
adcb
rolb
dec
add
mov
mov
leave
movsb
sub
out
mov
jp
mov
jl
insl
and
jo
dec
or
fmuls
je
inc
jae
xchg
and
jno
ret
jmp
fdivrl
fdivrs
and
mov
xchg
out
cmp
pop
xchg
cmp
jg
jmp
push
jl
ror
jecxz
sti
add
cmp
jae
insb
push
aas
imul
loope
jmp
xchg
ret
xchg
jnp
ds
enter
gs
add
pop
lret
or
push
mov
ja
mov
mov
jl
cwtl
pop
sbb
add
jnp
xor
inc
push
sbb
aam
or
mov
lret
repnz
flds
mov
aaa
cltd
sahf
stos
xchg
roll
bound
movsl
adc
xchg
out
incb
mov
dec
add
adc
mov
or
fdivl
test
xorl
jne,pn
jns
lods
pop
sbb
add
pop
aas
push
mov
mov
mov
sahf
mov
cltd
and
addl
stos
lcall
loope
xor
sbb
pusha
cmp
pop
in
int
pop
js
lcall
ljmp
imul
div
mov
loop
pop
add
push
test
fs
dec
js
ja
xor
out
imul
sub
test
pop
fnsave
notb
cmc
repnz
dec
inc
ret
pop
adc
push
mov
mov
scas
cmpsb
ret
sbbl
lcall
fstp
pop
inc
pushf
mov
sbb
pop
cwtl
jbe
push
nop
fldl
test
fiaddl
mov
movsb
and
cmp
xlat
in
pushf
jp
or
cmpsb
pop
jmp
sub
movb
aaa
ja
xchg
dec
xchg
add
sub
mov
sbb
sbb
test
adc
sub
lds
inc
cwtl
push
pop
mov
push
outsb
imul
adc
mov
mov
jo
sub
xchg
test
addr16
cmp
loop
adc
and
mov
in
andl
lcall
cmp
pop
mov
push
sbb
std
mov
dec
jge
jecxz
mov
pop
add
cmc
xorb
stc
xor
mov
icebp
dec
push
call
mov
or
add
enter
jae
outsl
mov
and
rcll
jl
aas
mov
fs
testb
fistpl
mov
push
jle
inc
imul
mov
jmp
ds
roll
xchg
dec
mov
inc
sbb
out
pop
add
ret
xchg
mov
jnp
adc
out
in
aas
test
movsl
push
ds
cmpsl
jae
popf
inc
pop
mov
mov
sbb
adcb
cli
push
cmp
pop
xchg
jnp
int3
out
pop
popa
add
dec
inc
ret
mov
xor
fisubs
rcl
addr16
jmp
loope
inc
in
xchg
push
cmp
leave
inc
cmp
lret
xchg
mov
mov
jmp
xchg
test
jns
out
pop
stos
inc
call
repz
inc
xchg
daa
mov
test
inc
std
inc
sahf
enter
or
in
imul
jns
mov
lret
push
inc
cmp
sbbl
stos
inc
imul
aam
das
pop
std
xchg
inc
fsubp
or
mov
mov
sbb
or
inc
ret
addb
mov
xchg
roll
xchg
jnp
cs
das
fsubr
shll
pop
fwait
shll
and
xchg
mov
fsubrl
mov
aam
and
outsl
mov
pop
scas
mov
cs
inc
cmp
lds
daa
ficoml
lahf
pop
cmp
cs
fistps
rol
lods
loope
pop
inc
inc
negl
jbe
or
xor
loop
insb
jl
aaa
notb
xor
push
dec
xchg
sbb
xor
sbb
xor
out
outsl
cmp
arpl
pop
call
push
incb
push
xor
mov
add
sub
jge
jno
lods
xlat
jmp
pusha
outsb
pop
rorl
inc
and
daa
insb
xchg
mov
jns
aad
inc
pushf
divl
ljmp
sub
mov
pop
add
push
pop
popa
mov
xor
sub
maxps
mov
add
mov
mov
std
dec
sbb
fs
pop
jo
push
popa
lahf
shl
cmp
cmp
inc
test
push
mov
hlt
dec
pop
xchg
out
xchg
test
fs
test
cmpsl
jg
jae
fidivs
and
add
adc
jno
lahf
dec
mov
outsb
mov
test
in
cmpsb
mov
and
jmp
enter
fdivl
test
lcall
pop
push
xchg
cmp
fmuls
call
fidivl
loope
ja
fcoml
or
adc
mov
mov
idivb
xor
jne
push
or
repz
pop
push
mov
pop
pop
push
xchg
call
sbbb
jb
popa
xchg
lret
lret
mov
scas
adcl
pop
mov
pop
sub
xor
bound
pop
rorl
jecxz
push
das
inc
sbb
in
and
repz
daa
scas
xchg
fnstenv
jbe
lea
flds
ret
cmp
jbe
scas
push
push
or
adc
daa
mov
xchg
jge
mov
dec
jnp
mov
sub
lahf
orb
mov
sbb
sbb
pop
jb
int
and
mov
cwtl
addr16
js
inc
add
aam
dec
adc
cmpb
mov
mov
mov
outsl
or
pop
jo
mov
xchg
jle
mov
int
dec
and
xchg
sub
je
scas
or
dec
mov
jp
pop
mov
insl
fmull
push
call
sub
cmp
mov
out
sub
test
pop
jo
fnstcw
jae
or
in
jno
add
adc
cmp
rcl
dec
rcll
xchg
scas
pop
rcll
mov
and
xchg
jbe
xor
cs
imul
pop
mov
sahf
fwait
sbb
aas
insb
cli
mov
mov
stos
cld
add
sti
nop
mov
xchg
xchg
std
add
mov
add
pop
add
xor
test
add
lods
xchg
jl
imul
mov
push
sub
call
cld
inc
push
in
push
rorl
mov
test
lds
jl
sbb
repz
mov
sbb
jb
inc
or
or
pop
sbb
push
inc
adc
mov
imul
xchg
fucomip
ror
data16
and
push
stos
jb
pop
jnp
jmp
pop
iret
cmc
in
mov
ret
fildll
and
sub
mov
outsb
sahf
jge
push
dec
mov
adc
lds
cmp
mov
and
or
fsubrp
cmc
clc
outsb
xchg
mov
inc
mov
jecxz
sub
add
jecxz
repnz
sub
add
shlb
int
faddl
push
mov
repz
sbb
and
or
inc
and
imul
sarl
loope
or
pusha
into
test
pop
push
inc
push
pop
mov
adc
fsubl
add
xor
lret
fildl
xor
jne
adcl
fidivl
movsb
ljmp
xor
push
jb
pop
fnsave
push
sbb
jbe
mov
rorb
adc
enter
mov
test
rcrl
enter
mov
pop
add
iret
mov
sbb
insl
dec
mov
add
jecxz
call
insl
pop
mov
aad
stos
push
lahf
mov
or
in
add
lcall
add
pop
scas
dec
sbb
rolb
lock
xchg
int
push
outsl
jne
stc
mov
pop
sar
loop
mov
js
cmp
xor
sbb
repnz
in
shr
pop
fwait
aad
adc
or
ficoms
cmp
push
mov
addps
int3
in
call
sub
push
sbb
sub
vmovd
mov
adc
pop
lret
fdivrp
cmp
xchg
jg
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
jo
mov
orb
das
cmpsl
inc
xor
or
ds
xchg
dec
movsl
sub
shll
stos
jns
sub
adc
mov
mov
scas
cmp
inc
not
cmpsb
in
ss
fbstp
aas
and
loope
test
movsl
inc
shrb
push
xor
jecxz
pop
dec
ror
testb
das
sub
scas
adc
fwait
test
mov
cmc
push
jns
mov
in
pop
xchg
lods
fcmovnbe
cmp
in
leave
adc
in
push
cmp
jle
fcoml
mov
ret
xchg
in
xchg
loopne
insl
into
xchg
mov
filds
cmp
pop
fsubrs
jmp
push
inc
lahf
and
ret
push
insb
pop
and
or
movsl
and
mov
nop
cmp
mov
fwait
mov
pop
adc
lods
pop
and
xorb
das
push
sahf
sub
sbb
test
popf
mov
ficomps
push
xor
push
testl
int3
ficoml
sbb
ja
fisubl
or
and
mov
fisubs
pop
push
fwait
and
ljmp
mov
cmp
cwtl
push
pop
and
inc
mov
mov
jle
dec
cli
xchg
jle
in
fs
cmpsl
adc
les
sbb
into
or
cmp
imull
inc
sub
inc
je
dec
mov
cmc
sbb
addb
orb
sbb
inc
push
lods
popa
cmp
xchg
pop
mov
in
mov
pop
and
lock
aaa
or
fdivs
inc
jae
lods
lret
xchg
inc
call
std
lahf
xchg
xchg
xchg
icebp
mov
jo
nop
and
jl
xor
lahf
pop
movsl
xchg
cmpb
adc
dec
jp
jbe
mov
xchg
sbb
mov
jb
loopne
cmp
dec
xor
add
js
iret
adc
test
mov
push
arpl
push
imul
add
inc
fmul
cmpsl
imul
sahf
icebp
std
jle
sti
pop
push
iret
sbbb
cli
sbb
sub
dec
add
sar
adc
pushf
sbb
jecxz
mov
push
repnz
jmp
icebp
rorl
sbb
dec
xchg
adc
or
push
in
icebp
mov
sbb
insb
mov
je
and
insl
addr16
xchg
gs
push
out
hlt
movsl
imul
inc
dec
jns
outsl
jae
rcll
xor
in
sbb
adc
or
mov
in
imul
xor
fnstcw
xor
jecxz
or
dec
sub
shl
fscale
scas
fwait
stos
es
jae
gs
jp
push
js
sbb
lret
fdivs
jb
dec
data16
ss
jnp
into
enter
xchg
jecxz
cmpsb
fnstcw
sbb
shll
rcr
scas
popf
xchg
enter
testl
jnp
jbe
push
std
int3
jle
in
aam
push
icebp
into
movsb
inc
xlat
pop
inc
popf
push
arpl
in
into
xchg
test
js
cmc
fucomi
enter
inc
adcl
shll
es
add
pop
inc
popf
das
daa
test
and
popa
jg
push
pop
aam
and
cltd
cs
pop
cmp
dec
nop
lea
pop
fwait
or
pop
je
push
jne
mov
arpl
outsl
shll
sub
ficompl
push
int3
xor
pop
or
xchg
cmp
lret
iret
push
push
push
xchg
mov
or
push
arpl
pop
leave
add
lds
mov
push
add
add
cmpsb
and
jb
in
dec
hlt
je
das
push
fdiv
jle
jbe
fwait
out
lods
jl
ja
sarb
or
addb
nop
inc
pop
dec
push
jmp
xor
aam
je
ljmp
jo
cli
lahf
jle
and
jecxz
shlb
dec
add
sbb
jnp
dec
xor
cmp
xchg
jne
and
lods
cmpsb
inc
push
fisubs
pop
xlat
pop
cmp
cltd
or
xchg
mov
cmpsl
sub
inc
dec
and
jecxz
das
in
imul
and
rolb
push
xchg
add
xor
add
or
jp
mov
jno
mov
insb
in
jmpw
aas
cmpsb
adc
add
lock
test
adcl
xlat
jbe
sbb
push
ss
pop
fisttpl
xor
inc
popa
popa
xor
push
push
jmp
pop
pop
rcll
pop
mov
pop
mov
jg
xchg
push
fcoms
test
sbb
jle
pop
cltd
std
xchg
mov
into
push
cwtl
lcall
jno
call
and
xlat
fdivl
push
jne
push
mov
sbb
lock
ret
imul
jg
in
mov
mov
adc
stos
xor
inc
in
pop
xchg
or
sbb
fists
insl
into
sbb
sahf
subl
xor
mov
fisubl
lret
outsl
and
mov
push
shl
les
cmp
je
jl
mov
mov
sbb
inc
stc
insb
aam
repz
mov
xchg
or
xchg
out
pop
jge
fucompp
fstl
in
adc
cmpsl
and
lret
sub
mov
mov
and
ret
out
jmp
cmc
fidivrs
ds
pusha
mov
sub
push
pop
adc
std
sbb
outsb
xlat
lcall
ret
jle
pop
ficoms
les
jmp
bound
icebp
push
test
xchg
aas
ds
div
sbb
cmp
ljmp
jns
mov
jb
sahf
test
nop
jae
rcll
lods
stos
and
push
pop
sub
aad
aad
repnz
in
xchg
in
jmp
cmp
lret
and
cmp
cli
xlat
outsl
sarl
mov
push
movsl
fwait
jbe
movsb
out
loope
or
out
mov
scas
popa
sahf
inc
mull
js
xor
pop
jecxz,pn
inc
push
ficoml
xchg
insb
lock
jle
out
out
outsl
clc
rclb
imul
sbb
popf
jecxz
iret
add
jo
push
push
pop
jnp
lahf
add
repnz
sti
pop
xor
jb
sti
cltd
scas
push
dec
mov
cwtl
mov
push
jp
mov
and
mov
adcl
int
gs
push
jnp
aaa
lock
jb
je
mov
xchg
push
rcl
sub
cs
adc
mov
or
out
test
icebp
sbb
jle
xchg
mov
add
dec
pop
gs
sbb
pop
aaa
in
adc
push
pop
mov
cmp
ffree
or
jne
mov
push
xchg
xchg
sbb
pop
shlb
inc
cltd
dec
shll
fstpt
pop
inc
leave
clc
int
dec
push
jno
cmpsb
frstor
data16
cmp
loopne
ret
push
fstpt
into
cmpsl
mov
fsubr
rcr
subl
aas
fs
mov
in
jbe
mov
and
and
mov
sbb
cmpsl
popa
and
std
xor
sarl
jnp
mov
adc
popf
movsw
dec
mov
das
mov
mov
sub
or
inc
int
push
in
cmp
aas
push
mov
lea
jae
popf
sbb
xor
rcrl
dec
js
xchg
hlt
shl
or
cwtl
iret
xor
test
pop
adc
outsl
or
ret
in
xor
mov
and
daa
mov
mov
test
pop
push
and
jecxz
cmc
popf
scas
or
add
xor
jp
dec
push
cli
jns
nop
cmp
std
arpl
pushf
shrb
push
ret
mov
pop
pusha
push
xor
into
or
cmc
fidivs
mov
sarb
jmp
push
js
sti
pop
cmp
mov
daa
into
pop
adc
in
push
test
shlb
repnz
pusha
mov
imul
popl
das
pop
iret
mov
pop
push
and
dec
mov
outsl
andl
mov
repnz
xchg
shr
inc
inc
add
jne
mov
cli
loope
xlat
inc
pusha
xchg
jp
data16
enter
push
cmc
call
xor
cltd
loopne
ret
jge
dec
test
sbb
lret
jne
push
int
xor
xchg
xor
push
leave
and
loope
leave
pop
mov
mov
mov
jo
ret
arpl
sarb
psubsb
notb
cwtl
aad
xor
out
lahf
mov
add
imul
je
add
cltd
mov
or
jo
les
pop
mov
xchg
jo
adcb
pop
into
ror
mov
int3
xor
scas
jle
pop
mov
inc
pop
stc
movsb
gs
repz
cli
sbbb
jmp
test
mov
mov
push
mov
mov
pop
mov
jp
lret
adc
ret
push
adc
pop
icebp
xor
xlat
sub
mov
mov
xchg
cmpsl
and
dec
inc
scas
mov
jae
mov
push
sub
or
test
cmp
out
fnstsw
les
dec
stos
repnz
mov
mov
adc
lret
jno
rol
pop
out
lcall
and
mov
jb
int3
inc
or
mov
fmuls
out
push
cmp
insb
je
xchg
lret
fstpt
mov
inc
inc
xor
xchg
and
or
shlb
xchg
mov
push
cmp
xor
dec
sub
fdivl
xor
mov
sub
icebp
in
sbb
xlat
inc
aam
inc
test
sbb
outsl
mov
test
jmp
mov
movsb
jg
inc
inc
cwtl
pop
xchg
mov
mov
add
xor
les
lock
popf
addr16
push
inc
mov
aad
imul
idivl
mov
js
xor
shll
lret
enter
push
mov
or
push
mov
clc
stos
push
jno
xor
jg
push
jo
dec
lret
loope
lahf
test
sti
push
cmp
sbb
std
mov
jp
sbb
fwait
add
cmpsb
adc
out
fistpl
fistpl
cmp
xchg
and
loope
mov
bnd
fcmovnu
test
pop
fbld
test
or
adc
push
mov
or
jbe
or
mov
mov
cmpsb
rcrl
mov
sahf
pop
mov
shrl
notb
push
fsubs
mov
adc
jno
push
cmp
or
pop
and
jne
imul
jno
cmp
in
test
div
or
mov
cs
into
xchg
icebp
xchg
stos
test
jp
cmp
sti
xor
cltd
imul
lock
cmp
fisttps
jnp
sub
std
adc
dec
call
movsl
add
jle
std
addb
loopne
cli
in
enter
repz
pop
mov
push
mov
push
pop
mov
dec
pop
dec
lods
sub
loop
mov
add
sbb
popa
adc
sub
cmpsl
mov
shl
and
xor
cmp
ret
mov
xchg
push
sbb
and
adc
pop
inc
shlb
cmc
or
or
mov
mov
cli
and
loop
inc
dec
xor
pop
dec
sub
and
in
inc
es
inc
shrl
test
add
fcmovnbe
dec
jo
call
daa
int3
mov
inc
pop
fwait
dec
sbbb
sbb
loop
pop
pushf
out
dec
pop
pushf
push
jle
sub
fcmovb
pop
mov
in
inc
push
inc
adcb
call
add
mov
mov
popf
popf
in
add
add
mov
scas
push
dec
ljmp
push
jle
je
xchg
adc
jnp
push
add
jae
cli
rcl
inc
add
popa
fidivrl
dec
ret
pop
clc
and
out
fistpll
sahf
xor
leave
cld
mov
sbb
repnz
out
inc
or
aas
mov
repnz
shr
iret
jg
and
and
arpl
orl
pop
adc
mov
movsb
mov
jmp
idivb
jmp
inc
pop
adc
cltd
lea
and
xor
out
and
jnp
mov
sub
lret
pop
mov
mov
push
dec
outsb
xchg
xorl
cmpl
ficompl
cmp
fdivr
push
loop
or
mov
fcoml
in
leave
js
push
out
outsl
sbbl
cmp
subl
xchg
xchg
sbb
push
dec
sahf
inc
push
or
es
or
xor
and
shlb
loop
mov
jnp
pusha
sub
push
cld
xchg
inc
cwtl
cld
add
notb
pop
cmp
cmpsb
and
xchg
sub
daa
cmpsl
push
dec
adc
roll
out
xchg
std
je
dec
call
or
mov
push
rol
push
cwtl
std
push
in
xchg
pushf
je
jns
stos
jae
je
sub
sbb
ret
sub
mov
dec
mov
cwtl
daa
out
mov
and
mov
scas
into
jae
xchg
outsb
pop
in
test
push
les
xchg
xchg
sbb
lock
aad
pop
sbb
cwtl
pushf
cmc
pop
inc
mov
jmp
sbb
test
cmp
fidivrs
in
out
outsb
add
dec
mov
lds
xlat
add
enter
push
fiaddl
mov
sub
mov
aas
loop
fwait
gs
popf
xchg
in
xchg
pop
aas
clc
sbb
hlt
jo
movsl
xor
inc
xor
mov
test
lods
gs
cltd
pushf
adc
js
es
fsubrl
or
sti
mov
jmp
je
popa
push
mov
mov
out
les
xchg
sbb
push
std
cmp
mov
scas
or
and
cs
jmp
inc
imul
jl
fwait
cmp
jnp
imul
daa
or
and
fadds
adcl
mov
call
flds
roll
add
push
mov
mov
lahf
popf
push
test
dec
mov
rorl
test
lds
xor
aam
xchg
pop
int
and
sbb
shlb
mov
mov
ljmp
mov
dec
imul
loope
push
imul
sbb
lock
mov
daa
arpl
xchg
xor
imul
popf
fidivs
pop
xor
adc
clc
jo
shl
jno
add
xor
sbb
nop
fsubl
push
ret
mov
inc
fbld
cmp
cmc
cmp
xor
cmpsl
and
rclb
sub
or
les
cmp
add
jae
mov
ja
pusha
mov
jmp
mov
leave
loope
add
mov
call
jo
sti
sub
dec
faddl
pop
sti
jecxz
ljmp
sbb
in
scas
int3
jne
jge,pt
aam
rorb
rcrl
mov
fdivl
fists
in
jp
aas
jns
cld
scas
js
loop
shlb
inc
gs
dec
jb
xchg
das
aam
adc
outsb
fcoms
cld
idivb
inc
push
jp
sbb
mov
stos
fsubs
sub
xor
xor
sbb
xchg
mov
xchg
shlb
rolb
xchg
xor
aad
insl
popf
into
divb
push
pop
mov
out
push
inc
add
inc
dec
icebp
pop
mov
adc
push
out
dec
sub
and
and
pop
inc
inc
scas
rorl
rorb
mov
scas
lea
bound
push
scas
or
jne
jmp
pusha
cwtl
mov
call
xchg
sbb
push
inc
call
jge
in
xchg
jns
mull
leave
pop
and
leave
ja
ds
mov
mov
cmp
pop
sub
ficomps
mov
fcoms
jp
xor
insl
cltd
rclb
dec
ja
push
dec
mov
xor
inc
ljmp
mov
subb
dec
adc
js
lcall
into
fucom
mov
pushf
scas
or
cmc
add
scas
push
fmuls
and
jns
imul
pop
sbb
add
nop
push
ret
and
push
cmp
jns
stos
fidivrl
cmp
mov
cmp
adc
inc
inc
sbb
add
xchg
sbb
sbb
rclb
sub
push
imul
sti
rcrl
mov
mov
imul
lcall
fsubl
xlat
xchg
repz
xchg
pop
fstl
xchg
dec
rolb
pushf
adc
adc
fistpll
imul
xor
cmp
push
push
std
jmp
xor
lock
in
mov
stos
test
stos
jge
sahf
push
add
sar
cmc
xchg
or
mov
mov
push
hlt
adc
icebp
mov
in
test
fdivl
cli
inc
sub
out
cmp
mov
add
xchg
vmovapd
lea
xor
sarl
fmulp
or
add
adc
and
sbb
decb
insb
mov
cmp
push
pusha
fstpl
imul
push
cmp
mov
pop
adc
imul
push
je
xor
rcr
test
test
hlt
dec
icebp
jno
mov
movb
pop
fldt
and
repnz
mov
pop
pop
icebp
push
lea
daa
adc
imul
testl
je
and
and
mov
rclb
cmp
cmp
mov
xchg
aam
inc
lcall
les
inc
mov
push
push
mov
adc
lcall
sub
lret
test
bswap
bound
data16
cmc
adc
pop
mov
out
das
leave
icebp
jno
dec
ficoml
aas
das
sub
xchg
or
fsubl
or
pop
test
add
xchg
movsl
mov
jnp
mov
ret
in
movd
xchg
scas
mov
es
out
in
imul
pushf
dec
mov
out
insb
imul
in
bound
roll
push
outsb
outsl
push
jl
push
andb
lods
dec
int
add
cmpsl
pop
pop
xlat
mov
sbb
xchg
add
mov
xorl
and
xor
scas
insl
fs
cmp
std
sub
dec
push
mov
push
adc
mov
ja
fldl
cmp
popa
outsb
xlat
ret
cmpsl
nop
leave
call
and
sub
aas
add
or
pop
inc
lods
cltd
pop
mov
adc
cld
mov
rcl
popf
loope
les
xor
mov
mov
adc
mov
inc
fcompl
rorb
andl
ret
cmp
add
daa
cmpsl
or
dec
es
mov
push
xchg
repz
outsb
in
jp
dec
pop
popa
sub
mov
mov
andl
jecxz
add
sbb
cli
incb
xchg
add
inc
je
pop
jno
push
movsb
ljmp
stos
stc
scas
dec
daa
mov
je
adc
mov
mov
test
leave
ret
jecxz
stos
imul
jecxz
dec
lret
fnstcw
xlat
xchg
lea
repnz
movsl
jne
add
and
xchg
enter
xor
out
inc
dec
pop
xchg
in
adc
mov
ljmp
cmp
pop
rolb
les
dec
cmp
mov
xchg
mov
test
xor
cltd
xchg
nop
dec
popf
lahf
ljmp
sbb
cmp
xchg
stc
jb
pop
outsb
repz
sbb
leave
xor
aas
push
sarb
adc
xchg
cmp
fs
and
ja
or
ret
js
xor
out
mov
rcrl
cmp
outsb
dec
movsb
test
repnz
cli
fists
xchg
aad
hlt
fadds
mov
imul
ret
add
cmp
pushf
test
ss
test
pop
jl
shrl
pop
call
mov
and
add
outsb
aad
push
lcall
cmp
scas
push
or
lods
mov
clc
xchg
push
mov
mov
icebp
mov
push
jbe
xor
xchg
inc
xchg
and
and
jo
fs
mov
dec
ljmp
push
bound
jne
dec
pop
in
es
call
cltd
mov
xchg
inc
sbb
xchg
cmp
mov
push
shr
sub
aam
test
sbb
and
dec
jl
dec
negl
aam
loopne
hlt
dec
mov
icebp
repz
shlb
mov
cmpsl
jae
shl
sti
in
inc
roll
jbe
lds
push
or
cmpsb
xchg
lea
int3
mov
cmp
stos
adc
mov
sub
mov
test
out
pop
pop
dec
or
in
sub
push
pop
jmp
cmp
add
push
repnz
clc
aas
into
popa
orb
not
cmp
movsb
frstor
lods
aaa
mov
inc
push
lret
icebp
in
lock
fs
outsl
mov
push
xchg
shl
sub
daa
jno
popf
in
dec
push
or
xchg
rcrl
jge
into
cwtl
inc
ret
lea
sub
inc
dec
inc
sti
cmp
gs
int
inc
xor
out
sub
adc
and
pop
push
mov
cld
pusha
ss
inc
mov
sti
dec
fldl2e
movsb
or
daa
popa
add
clts
and
inc
int
je
push
and
mov
mov
or
pop
xchg
push
out
sti
xor
add
cmp
in
aas
pop
inc
stc
roll
push
push
cmp
pop
inc
dec
scas
mov
lret
call
add
loopne
lahf
das
sbb
in
loopne
push
je
cs
lea
xchg
cld
negl
push
iret
loop
std
push
xchg
int
add
lcall
sarb
push
sub
mov
popf
push
cli
outsl
mov
sub
sbb
dec
cmp
jne
push
aad
aad
push
jge
repnz
fistpll
jl
or
xchg
mov
add
dec
pop
add
and
insl
adc
outsl
scas
jg
mov
test
xor
or
ds
add
insl
fistpll
cs
daa
std
jge
push
cmp
iret
stos
data16
ja
jae
jnp
dec
adc
bound
sahf
xor
fstp
xor
sbb
pop
sub
cs
dec
cmp
adc
add
and
test
mov
cwtl
jne
inc
fxch
push
icebp
mov
lret
test
icebp
addl
shl
test
fidivrl
jg
mov
dec
push
or
out
sub
fdivrs
dec
fst
lret
push
dec
lods
fyl2xp1
cmp
cmpsl
or
nop
pusha
xchg
pop
arpl
loopne
ret
cmp
pop
sbb
mov
lock
mov
pop
scas
sbb
int3
push
sbb
cmp
jge
and
xlat
js
pop
jnp
out
sbb
movsb
mov
mov
dec
mov
lods
jns
xchg
dec
cwtl
mov
adc
sub
mov
jo
mov
mov
lret
mov
mov
pushl
rolb
repz
xlat
js
jne
test
cli
or
sar
adc
sub
add
testl
hlt
push
insl
pop
outsb
iret
or
pop
pop
mov
aad
lock
loopne
push
add
dec
inc
lret
in
movsb
leave
mov
xchg
jp
jle
mov
into
push
mov
sub
repz
and
adc
fdivl
mov
stc
sub
stos
sub
pop
out
xchg
sbb
xchg
sub
cmp
mov
adcl
mov
mov
ljmp
mov
pop
push
push
enter
into
mov
bound
cmp
addr16
xor
out
pop
lcall
xchg
je
and
mov
pop
lods
jbe
fcom
aam
test
addr16
fwait
push
mov
jmp
push
adc
out
jne
jecxz
loopew
pop
out
div
int3
sub
rcrl
fs
add
pushf
mov
stos
xor
test
dec
push
add
xor
pop
xchg
in
mov
stc
daa
push
cwtl
test
or
int
stos
sbb
outsb
pop
xchg
mov
mov
jcxz
push
push
enter
sbb
cld
lods
cltd
test
ljmp
bound
cmp
icebp
dec
out
clc
push
and
xchg
mov
xlat
stc
mov
mov
je
adc
sarb
jo
push
xchg
js
cmp
out
inc
stos
test
stos
mov
cli
inc
aam
fstpt
fistl
sti
out
xchg
push
push
sub
pop
inc
btr
xorb
gs
sub
lods
mov
mov
mov
xor
adc
popa
pushf
pushf
rcl
xlat
jge
adc
test
add
sbb
cmp
xor
pop
adc
mov
mov
push
mov
mov
mov
fnstsw
adc
into
in
sbb
jge
sub
adc
cld
in
jge
sub
enter
mov
pop
push
insl
in
jne
scas
in
adc
inc
sub
or
pop
mov
mov
push
and
or
cmp
je
cltd
xor
out
jge
push
cmp
jge,pn
and
lods
in
test
iret
insb
outsl
add
sbb
push
adc
pushf
jb
cmp
movsb
das
repnz
fistpl
push
lock
lea
inc
test
inc
or
loope
jecxz
shlb
mov
shll
xor
pop
mov
lea
xchg
lret
fsubrs
cmpsb
xor
add
cmp
xor
push
or
inc
dec
jbe
es
mov
jl
mov
cmpsb
jo
hlt
pusha
jmp
insb
inc
cltd
cmp
inc
sahf
out
movsl
stos
pushf
xor
es
das
push
cmpsb
xor
cmpsl
dec
sub
xor
add
mov
mov
jecxz
sahf
dec
cmp
inc
popf
push
outsl
imul
xchg
hlt
popa
jg
mov
pop
inc
jge
or
movsb
fwait
or
lea
jg
mov
out
inc
dec
imul
fisubrs
xchg
mov
cmc
pop
js
and
cs
mov
in
nop
in
outsb
adc
loopne
in
addl
fdivrl
pop
mov
call
xor
popf
jnp
push
out
loop
into
std
sub
ljmp
iret
mov
cmc
pop
out
cmp
adc
xchg
fstps
cltd
lcall
mov
int3
ds
push
nop
aad
cmpsb
roll
or
xchg
cwtl
andb
push
sub
inc
test
dec
dec
stos
dec
enter
jns
mov
enter
es
inc
cs
jno
xchg
icebp
bound
movsl
popa
and
mov
in
pop
or
or
xor
xchg
xchg
es
inc
add
xchg
sbb
ret
inc
cli
sbb
test
imul
inc
test
jg
xor
iret
mov
xchg
pop
xor
fcompl
popa
lds
fadd
fwait
mov
xor
lods
pop
mov
pop
cmp
mov
movb
dec
cs
jmp
mov
int
pop
lea
imul
mov
daa
outsl
adc
add
movb
stc
mov
sahf
repnz
sub
or
das
in
fs
outsb
jns
mov
mov
add
push
stos
jle
out
mov
insb
jns
mov
jnp
hlt
sbb
mov
pop
fdivrp
mov
dec
mov
out
ret
mov
pop
pop
rorb
mov
lds
cmp
ret
filds
inc
shrl
fucom
push
cld
xchg
cmc
cwtl
or
call
jg
in
arpl
scas
push
leave
pop
xor
into
xchg
sti
lods
sub
rcrl
jecxz
lret
mov
push
testb
and
adc
xchg
mov
dec
xchg
dec
popa
lea
sbb
in
mov
mov
mov
scas
shll
push
add
xor
sub
popl
pushf
ret
add
daa
inc
dec
sti
jo
or
outsl
lods
mov
pop
pop
lret
jbe
push
idiv
ss
enter
rcll
popl
les
fs
xchg
xchg
lahf
mov
je
adc
mov
daa
xchg
call
push
cmp
mov
gs
adc
mov
lahf
je
xor
xchg
aas
pop
in
jp
cwtl
out
movsb
inc
cld
fstps
ja
push
enter
inc
cmp
imul
xchg
mov
sbb
stos
mov
sbb
cmp
shl
xchg
test
fwait
out
or
das
out
rol
scas
mov
dec
sbb
and
mov
shl
leave
fdivrl
sbb
mov
movsb
cmp
shlb
cmp
nop
sub
xchg
int
jl
lods
decl
xorb
mov
xchg
ret
xchg
sub
and
sbb
mov
sub
int
clc
or
and
adc
mov
inc
xchg
loopne
and
data16
test
jo
mov
notl
mov
inc
mov
nop
popa
stc
xchg
lds
add
or
jmp
ja
ficomps
inc
cli
mov
sti
pop
adc
adc
xchg
pushf
add
sub
jmp
rcll
int3
cmpsb
repnz
or
ds
stos
fcoms
ss
or
pusha
dec
push
xor
and
inc
lret
cli
cmc
mov
aas
cmpl
cmpsb
into
push
js
lock
test
bound
add
dec
xor
int3
std
sarl
lcall
movsb
leave
fwait
movsb
mov
xchg
icebp
hlt
aam
je
dec
lret
push
push
orl
add
mov
push
sarl
xor
clc
and
into
push
or
mov
mov
or
mov
ljmp
repz
or
dec
imul
outsb
or
loop
pusha
insl
aam
and
pop
jo
stos
repz
test
rolb
icebp
notb
jp
int
pop
jno
or
or
jb
test
shl
clc
push
addr16
adc
loopne
jno
xor
pop
rclb
addr16
div
popf
dec
test
out
enter
in
fisubs
fildl
sub
fisubl
add
dec
push
push
out
inc
mov
popf
dec
sbb
insl
ja
int
fs
das
pop
mov
xchg
mov
pop
ja
dec
cmpsb
jb
or
mov
in
pop
add
int3
out
andl
in
cmp
xchg
movsb
lcall
out
les
mov
pop
pop
mov
das
jl
leave
lret
adc
add
aam
add
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
add
jae
shlb
hlt
pop
bound
push
add
repz
cmp
inc
daa
inc
jns
insl
dec
jle
jnp
xchg
aas
mov
inc
imul
mov
lock
jle
lret
xor
sar
add
xchg
mov
into
in
jmp
rol
pop
sbb
lahf
loop
xchg
imul
popa
and
jl
mov
sub
dec
or
or
or
iret
lock
jmp
aad
xor
flds
mov
jnp
fstp
in
pop
outsb
sbb
les
pop
mov
add
int
mov
es
imul
adc
int
pop
mov
data16
jmp
data16
std
int
sub
xchg
pop
inc
out
mov
in
es
mov
sbb
fbld
adc
inc
adc
or
int3
pushf
fsubr
fs
andb
imul
loope
mov
addr16
mov
lock
or
pop
push
jne
cmp
add
jno
call
jmp
into
jae
mov
stos
mov
cs
mov
jbe
inc
cmpsl
test
cmp
xorl
insb
fistl
inc
adc
add
imul
jbe
push
or
mov
push
mov
sti
dec
leave
xor
pusha
out
inc
lods
mov
and
loopne
jae
pop
fistpl
sub
and
fucom
adc
push
rcrb
xchg
dec
repnz
adc
mov
movsl
or
jmp
adc
pop
cmp
lods
fwait
jmp
mov
out
das
hlt
ficoms
sbb
dec
xor
leave
loope
add
pop
shll
xor
mov
leave
les
pushf
push
test
jp
mov
and
bound
dec
pop
add
sub
pushf
lahf
jp
xchg
pop
push
pusha
call
sbb
jae
mov
xchg
cmc
das
or
pop
xor
aas
out
out
loop
test
push
shrl
imull
mov
mov
jg
cmpsl
mov
push
hlt
pop
push
test
sbb
push
cmpsl
rclb
mov
push
dec
jmp
sbb
cmc
test
mov
in
das
movsb
inc
and
xor
mov
push
xor
lods
lcall
sub
pusha
test
push
mov
add
mov
dec
mov
push
insb
cwtl
or
xchg
jnp
out
pop
mov
jbe
and
imul
add
mov
stos
test
movsb
movsl
sbb
outsb
push
cmp
push
adc
fimull
adc
mov
aas
pop
push
addb
lods
push
lods
icebp
xchg
or
pop
ja
lea
mov
aam
adc
clc
mov
sti
loop
mov
xlat
push
inc
outsl
inc
jno
lea
outsb
push
mov
fadds
push
ret
jo
loope
adc
cmc
pop
mov
mov
es
mov
dec
lret
cmp
mov
daa
in
push
inc
cmpsl
movsl
cs
push
mov
add
adc
iret
gs
add
loopne
sbb
es
jl
inc
pop
mov
lea
mov
addr16
jl
sub
cmc
fcompl
out
xchg
out
xchg
xchg
sti
mov
mov
test
pop
pop
xchg
popa
lret
cmp
and
inc
push
cmp
sub
andb
xchg
cmpsb
movsl
jb
push
outsl
cmpsl
mov
mov
mov
call
push
sar
test
xchg
adc
lret
xor
push
pop
dec
popa
xchg
cmp
test
or
cs
mov
or
arpl
and
ljmp
and
mov
std
jecxz
ljmp
das
mov
mov
jno
out
push
sub
jge
pop
loopne
fmull
cltd
rcrl
lret
mov
in
and
push
inc
mov
jecxz
or
jp
fistps
inc
lods
popa
add
fs
pop
sbb
addr16
test
pop
adc
pusha
and
cmp
adc
hlt
hlt
add
test
xchg
mov
mov
in
repz
and
xchg
cwtl
sarb
mov
call
mov
mov
and
imul
pop
mov
and
inc
sbb
xor
xchg
fiaddl
sbb
add
test
mov
push
adc
xor
or
lods
dec
inc
xchg
icebp
mov
push
mov
in
sti
inc
int
mov
notl
lcall
rolb
push
in
ret
jle
cmp
dec
into
sbb
scas
leave
clc
test
in
xchg
jae
js
daa
mov
jle
fs
xchg
outsb
add
add
iret
jne
and
out
mov
js
test
js
adcl
xchg
jne
stc
inc
mov
addl
jge
mov
xchg
cmp
jecxz
push
jge
pop
das
cmc
out
test
outsb
sbb
add
into
cli
jb
mov
push
data16
movsb
lods
sti
lahf
mov
inc
adc
je
repz
les
lods
repz
testb
add
fimull
jmp
pop
add
addl
mov
vpshuflw
dec
ror
pop
hlt
aaa
sbb
jbe
push
fstps
fidivrs
jae
call
inc
push
aas
lods
and
iret
clc
xchg
jnp
xlat
add
push
aam
xchg
cmpsl
jb
mov
and
leave
popf
jmp
xor
es
stc
or
dec
shrb
sbb
repz
test
ficompl
insl
or
aam
jg
xor
ret
pushf
jne
lea
pop
mov
arpl
icebp
cmc
xor
cld
pop
ss
adc
push
mov
mov
lcall
add
sub
sahf
dec
je
jg
mov
sbb
push
sbb
fs
cmpsl
xor
add
xchg
mov
pop
loope
int3
jl
jl
out
cmp
xor
cli
addb
push
mov
imul
dec
sbb
imul
bound
bound
shl
pop
repz
jnp
std
push
xchg
aam
out
push
repz
dec
sub
addr16
mov
xchg
insb
pop
xchg
dec
insb
mov
lahf
jge
pop
cs
push
call
mov
das
mov
adc
mov
mov
fwait
ret
push
push
fldpi
shl
adc
dec
test
push
enter
mov
scas
or
push
shrl
sbb
sub
out
sbb
mov
add
mov
inc
aad
aad
cmc
jo
push
push
mov
sbb
sub
int3
push
mov
push
shlb
push
maxps
mov
adc
test
mov
pop
jnp
ret
cmp
cmp
cmp
fwait
out
push
mov
lods
int3
xchg
add
into
out
mov
pop
jne
adc
lret
les
mov
mov
xchg
push
or
sub
fwait
dec
in
movsb
pop
mov
xchg
test
lret
popa
imul
mov
xchg
cmp
iret
nop
adc
ficomps
mov
lret
jmp
pop
aaa
popf
sbb
push
movlps
xchg
shl
add
sub
stos
xor
mov
ja
push
mov
push
adc
repz
mov
or
in
cmp
test
pop
mov
jp
imul
pop
xor
out
aas
insl
pusha
in
lahf
mov
mov
cli
js
push
adc
xor
xor
iret
lock
hlt
sbb
mov
pop
rol
fidivs
out
in
cmc
ret
push
out
cmp
dec
mov
rcll
lret
jl
mov
aad
cld
rcrb
xchg
mov
pop
mov
mov
and
xor
inc
divl
addr16
inc
inc
sub
mov
cmp
ret
outsl
aam
mov
sbb
stos
outsl
test
sbb
aas
stos
lds
out
fcmovnb
push
push
sub
dec
sbb
add
adc
loopne
subl
data16
or
mov
inc
outsl
xchg
mov
cmpsb
subb
and
sbb
mov
insl
pop
enter
inc
addr16
clc
mov
test
and
adc
stc
cmp
push
sbb
and
xor
cmp
fdivs
rcrb
mov
js
int3
push
add
pusha
and
neg
les
nop
mov
and
mov
add
jb
mov
mov
cmp
lret
mov
or
fs
xor
cltd
cmp
cli
mov
daa
jmp
adcb
fnstenv
sub
mov
mov
push
sahf
mov
repz
xchg
mov
jge
mov
popa
and
mov
mov
inc
jno
xchg
repnz
lahf
cmc
cmp
dec
pop
add
cmp
jae
std
pop
and
das
data16
cwtl
mov
dec
push
add
popf
fdiv
cmpsb
dec
or
inc
sbb
and
sub
mov
test
inc
jle
rorl
loope
repnz
and
int
inc
lahf
lahf
mov
and
lock
sbb
inc
xor
std
adc
pop
cmp
lea
push
mov
pop
fildll
ret
ja
jo
outsl
lcall
mov
cmp
lods
aas
ficomps
mov
aaa
aad
mov
mov
lods
push
cs
push
jecxz
dec
js
pop
inc
xor
call
inc
je
cmp
jnp
cmp
sbb
inc
xchg
popa
mov
shrb
mov
xchg
lods
jns
xor
rsqrtps
sbb
cli
popa
xor
faddp
je
cmp
mov
dec
jbe
xchg
push
inc
outsl
lods
iret
jmp
imul
into
das
mov
adc
ficompl
test
ljmp
adc
dec
pushf
and
imul
out
orb
xchg
sbb
or
in
filds
ss
jmp
and
lret
pop
xchg
inc
cli
jle
hlt
aaa
sti
dec
cmp
adc
mov
test
dec
cmp
or
sahf
push
jno
adc
and
adc
scas
pushf
das
lret
lods
jmp
mov
and
pop
inc
subb
fwait
xlat
adc
ljmp
mov
mov
in
iret
inc
xchg
mov
push
std
lcall
arpl
filds
fcoms
xchg
xor
mov
dec
fnstcw
lods
sti
outsl
jp
mov
icebp
inc
lods
jns
fcomi
and
push
lret
js
in
mov
push
dec
in
clc
pop
lea
push
not
add
cmc
jmp
cmp
push
cmp
dec
in
faddl
xchg
dec
jge
inc
pop
add
jo
push
popf
nop
daa
pop
xchg
xor
addb
outsl
and
adc
mov
xchg
repz
mov
dec
loope
mov
into
push
jmp
lahf
adc
mov
movsl
and
mov
mov
mov
pop
mov
stc
mov
in
shrl
ljmp
pop
lahf
xlat
inc
mov
outsb
mov
call
cmp
pusha
test
push
nop
into
mov
push
jne
scas
punpckldq
jns
sbb
pop
xchg
test
pop
sub
dec
sbb
mov
push
fisttpl
sub
adc
stos
or
pshufw
inc
clc
int3
insb
sbb
into
and
cmc
fiadds
inc
mov
cltd
xchg
jo
jo
test
or
pop
clc
and
xor
cmpsl
or
mov
divl
ret
sbb
dec
scas
ret
call
pop
pusha
dec
testl
push
adc
fadds
ret
out
mov
adc
push
push
repz
push
stc
push
fwait
cwtl
pop
cmp
les
mov
pop
lock
fs
push
xor
adc
rol
and
jbe
mov
mov
jb
xchg
orb
inc
lret
and
mov
out
mov
dec
mov
pop
sbb
aaa
ret
jae
fwait
or
pop
repnz
cwtl
ja
pop
push
pop
mov
leave
adc
js
notl
ret
inc
sub
mov
mov
inc
cmpsb
pop
test
loope
mov
int
add
pop
fidivrs
loop
dec
dec
jle
add
xchg
jle
xchg
cmpb
mov
leave
inc
mov
mov
inc
inc
cli
mov
xchg
fdiv
push
std
mov
in
out
test
mov
xchg
push
sti
push
iret
test
inc
lcall
aas
mov
add
inc
jg
xor
xchg
sbbb
shrb
xlat
ret
pop
loope
std
hlt
push
movsb
jl
jmp
dec
orb
inc
cs
mov
data16
pop
jecxz
xor
xor
add
jp
xchg
mov
out
lcall
pop
mov
push
mov
rclb
push
in
and
inc
enter
shrb
pop
add
icebp
add
addl
lds
dec
sarb
icebp
movsl
sbb
pusha
or
sarl
cmpsb
test
dec
test
call
das
stc
je
mov
adc
sarl
aad
scas
les
in
out
int3
sbb
lods
pushf
and
in
xor
testb
fcompl
rcrl
mov
sbb
or
pop
push
xchg
outsb
push
sub
aad
popl
incb
xchg
js
stos
decl
lods
mov
loope
sub
push
or
xorb
and
and
imul
iret
cmp
mov
mov
stos
bound
ret
jl
push
mov
pop
jmp
xchg
dec
movsl
dec
xchg
leave
std
sbb
in
or
in
mov
out
xchg
and
pushf
or
and
xor
clc
cmpsl
cmc
push
add
test
lods
push
mov
pop
xlat
mov
lcall
adc
mov
fists
push
add
pop
jmp
sbb
lahf
ljmp
loop
and
shll
cmp
push
imull
cmpsb
in
and
inc
je
mov
push
data16
push
out
addb
sub
out
nop
inc
lods
cltd
outsl
fadds
mov
push
push
dec
jecxz
xchg
lret
push
loope
pushf
mov
data16
out
adc
negl
xchg
mov
lea
imul
jge
ret
and
fs
adc
jno
push
scas
or
sar
and
lods
in
stc
xchg
add
daa
sub
sbb
jbe
std
lcall
pop
pop
lcall
mov
lcall
mov
cli
jns
pop
inc
movsb
jbe
push
fsubrl
in
jecxz
jne
mov
mov
fdiv
mov
lea
xor
aas
in
pop
inc
hlt
cs
test
cmpb
in
push
icebp
xor
or
sub
push
nop
push
movsl
jb
enter
repnz
ljmp
cmp
push
fs
sbb
stc
aas
push
push
adc
punpckhdq
mov
cwtl
mov
test
inc
push
gs
insb
mov
int
jl
push
dec
clc
test
or
push
pushf
scas
xor
pop
pop
mov
sbb
push
pop
jmp
or
pop
je
sub
fildll
cmp
xorb
push
sub
inc
outsl
dec
mov
insl
push
cmc
lcall
stc
mov
movsl
and
fiadds
les
icebp
outsl
das
das
dec
adc
lds
dec
adc
test
cmc
jle
dec
mov
jmp
add
dec
jo
cmpsb
ljmp
lret
test
adc
dec
or
gs
jmp
je
sub
mov
mov
push
jle
ds
jmp
mov
sbb
mull
icebp
inc
lcall
jge
sahf
sarb
nop
aad
popa
fsubrs
out
dec
sub
je
arpl
aaa
mov
shlb
pop
aaa
jo
out
cmpsb
xor
stos
xchg
and
out
jo
movsl
aam
loope
lret
push
and
fs
lods
pop
adc
je
jge
lea
aaa
lods
fs
js
lret
dec
call
xchg
cmpsb
xor
sbb
cltd
idivb
lock
ret
andl
ficompl
ja
in
outsb
imul
jo
les
push
cmpsb
mov
les
inc
xchg
fdivp
xchg
test
or
mov
dec
rol
inc
arpl
ds
push
loop
shr
fimull
sbb
mov
push
push
leave
push
lret
cmp
pop
test
pushf
adc
sbb
xchg
jg
dec
popa
cmpsl
cmp
mov
pusha
push
cmp
cld
xor
pop
cli
add
push
mov
in
sbb
push
lret
scas
std
sbb
push
cs
cld
rcrl
jp
negb
fimull
mov
subl
cmp
popa
outsl
xchg
pop
sub
xchg
add
xchg
repnz
sub
call
cmp
inc
mov
roll
addl
lahf
ds
jecxz
in
and
in
dec
enter
into
or
aaa
pop
cmp
stos
sbb
pushf
out
flds
cli
mov
movsb
jle
xchg
jmp
xchg
rcl
popf
mov
cmp
leave
jp
mov
sub
ja,pn
xor
push
hlt
push
add
sub
xor
xchg
loop
add
mov
push
ficomps
adc
out
test
or
shll
jle
scas
jmp
cmc
jl
mov
jns
or
inc
lret
in
lcall
pop
cmpsl
push
cmp
mov
cmp
shlb
fs
loopne
lock
enter
push
cmp
xchg
jle
mov
fsubr
adc
inc
out
xchg
js
sub
add
or
mov
xor
xorl
les
cmp
out
pop
sub
dec
cmp
ffreep
popa
push
inc
lret
mov
dec
push
or
dec
cld
in
outsl
pop
xchg
and
mov
xor
pusha
cmp
cmpsl
jmp
in
ret
ss
adcb
adc
lahf
push
cmpb
jle
add
cld
aaa
jae
shrb
sub
outsl
lret
sub
add
sub
pop
sbb
ficoml
add
pop
xor
mull
idiv
inc
outsl
cltd
mov
mov
lods
in
xchg
xor
jne
cltd
push
pop
fsts
pop
pop
in
in
dec
push
jmp
or
pop
cmp
lods
lds
sub
xor
cmp
jp
fs
out
js
add
adc
and
push
xchg
nop
inc
loopne
shrb
aaa
test
mov
rcrw
jge
pop
push
and
sub
repz
sbbb
in
leave
cmp
fcmovnu
mov
loopne
lods
xchg
xor
xor
shlb
mov
xchg
jno
out
push
inc
shlb
dec
sub
mov
pusha
xor
pop
stos
sbb
outsb
cmc
jge
outsl
mov
inc
pop
xchg
lds
sub
add
cmpsb
ljmp
lahf
mov
inc
nopl
out
pusha
sub
sub
mov
pop
insl
std
fistps
pop
sahf
stos
cli
incl
mov
sbb
lea
fstps
rcll
jp
cmp
push
mov
cmp
cld
test
jne
adcl
xor
and
hlt
add
mov
sub
aaa
xor
lahf
ds
inc
bnd
pop
imul
jmp
mov
fnstenv
in
repz
imul
out
pop
push
adc
jg
filds
cmp
ds
and
les
mov
hlt
mov
roll
repz
jb
rcll
xchg
ljmp
xor
and
insl
pop
mov
jns
rclb
push
cli
scas
in
or
dec
sbb
or
push
inc
and
int
push
mov
imul
cmp
jp
mov
inc
push
pop
cmp
icebp
shl
push
es
mov
into
rclb
mov
lods
popa
mov
ds
insb
dec
rcrl
sbb
pop
push
mov
pop
cmpsb
data16
ds
xchg
pop
push
imul
or
sub
fidivl
inc
imul
call
pop
ret
sub
pop
jl
dec
push
or
push
lock
push
pop
bnd
rclb
push
dec
sbb
nop
cmpsb
lea
in
jg
mov
mov
cmp
jb
sub
sahf
inc
xor
cs
inc
add
roll
sarb
push
cltd
pushf
pop
push
push
hlt
xchg
xchg
or
cmc
sub
enter
add
cmp
mov
cld
mov
xchg
mov
sar
dec
jp
ret
mov
or
aad
push
mov
aam
dec
lods
mov
adc
adc
mov
testl
add
loope
adc
jo
fdivs
lock
ret
dec
and
fs
rcl
in
sti
jne
dec
aas
mov
xor
or
das
jnp
add
es
inc
xchg
insb
fimull
sbb
std
ljmp
mov
cmp
in
xchg
push
aam
aam
sub
cmpsb
pop
mov
daa
and
or
fwait
jl
inc
cmp
lret
pushf
and
add
out
xchg
stos
test
scas
add
fcmove
insb
int3
insl
aaa
rorl
negb
fisubs
or
shl
mov
outsb
sub
nop
pop
fadds
fiaddl
and
sub
imul
fwait
dec
in
int
mov
pop
mov
nop
lret
lret
pop
inc
jmp
hlt
stc
and
jno
push
cltd
test
mov
cmpsb
add
outsl
mov
nop
push
js
ljmp
push
push
sahf
jp
xchg
xlat
ja
dec
idiv
cli
stos
xor
add
mov
nop
fsubl
add
cmpsb
nop
pop
stos
jecxz
jno
push
and
add
stc
push
sbbl
cmpsb
or
leave
shrb
fisttpl
mov
jp
pop
jmp
mov
dec
aas
adc
cmp
daa
arpl
pop
push
pop
scas
movsl
lods
emms
push
movsl
pop
fcomps
cmp
rcr
pop
jns
jmp
mov
adc
fdivrl
cmp
mov
push
les
xchg
xchg
adc
add
loopne
popf
cmp
xor
xor
pushf
cmp
dec
mov
pushl
xchg
mov
testl
xor
sbb
ficoms
or
test
cmp
jg
mov
ficompl
testl
idivb
icebp
imul
xor
in
mov
imul
fiaddl
pop
cld
mov
nop
push
testb
jle
jle
mov
jne
stos
orl
mov
inc
ficomps
mov
cmp
inc
fcomi
dec
or
mov
imul
push
jmp
cld
adc
fiadds
or
and
or
mov
xor
cmp
inc
lahf
dec
pop
out
fisubl
cld
lods
jb
icebp
add
mov
outsb
rclb
jns
or
sub
cli
jecxz
fsubr
sub
into
cmpsl
popa
cltd
ss
dec
mov
mov
add
mov
or
call
push
iret
fistpl
mov
mov
shrl
imul
add
sub
je
add
nop
inc
rcl
int
mov
add
notb
out
xor
sbb
lahf
fnstsw
and
adcl
gs
mov
mov
out
das
push
ret
and
cmpb
adc
movsl
add
sub
shr
sub
test
pop
and
data16
js
dec
and
stos
pop
mov
inc
jmp
mov
repz
xor
subb
mov
fnstenv
mov
dec
inc
imul
in
xor
cmp
out
mov
enter
scas
scas
push
test
les
add
ds
repz
outsb
fs
sbb
mov
adc
push
mov
cmp
in
cwtl
int3
inc
and
push
or
int3
or
inc
push
shr
hlt
pusha
pop
jae
divb
mov
les
mov
lret
push
add
shl
test
pop
pop
out
cmp
push
fcoml
xchg
ja
lods
sbb
add
mov
mov
shlb
add
xor
adc
cmpsb
xchg
mov
mov
xor
inc
push
mov
ljmp
aam
inc
or
mov
adc
movsl
fidivrl
fisubrs
jp
imul
cli
cmp
out
mov
mov
shlb
jne
stos
xor
lods
repnz
mov
mov
out
int
in
stc
pop
hlt
mov
cli
sbb
mov
stc
or
and
movsb
fidivrl
push
xchg
push
mov
fs
loopew
js
dec
mov
cmp
sahf
push
movsl
pop
xor
imulb
dec
out
fisttpl
rcl
jae
out
imul
push
into
sti
dec
or
adc
into
js
push
xchg
mov
xchg
std
xor
or
inc
scas
mov
js
out
pop
stos
and
jnp
decb
negl
jae
nop
push
mov
shlb
call
jecxz
int
sarb
jg
mov
lds
sbb
out
add
and
pop
fstpt
push
iret
int
sbb
or
push
out
inc
push
dec
jp
xor
out
ja
leave
mov
out
ds
push
mov
push
push
and
out
shlb
in
pop
lods
jno
repnz
push
xchg
je
cmc
ret
add
cwtl
cli
dec
jecxz
jne
movsl
clc
cmp
loopne
add
sbb
icebp
sti
mov
jbe
xor
arpl
mov
pop
stc
fsubl
jg
std
sarl
xor
ficompl
clc
stos
jo
xchg
cmp
jno
test
xor
dec
dec
fnsetpm(287
aas
dec
mov
xor
fs
shll
iret
fmuls
add
add
mov
jno
jns
xchg
push
scas
insl
adc
lcall
pushf
pop
mov
repz
fnstenv
mov
mov
cli
rorb
jle
aas
hlt
popa
sbb
cli
pop
adc
nop
outsl
adcb
cmp
jge
xlat
lods
or
pop
lea
cmp
gs
and
shrb
out
xor
imul
mov
mov
xchg
jnp
jb
ret
mov
mov
cld
or
ret
add
jle
mov
cmp
iret
jnp
xchg
insb
or
pop
out
scas
jo
xchg
xor
test
mov
mov
mov
out
pop
int3
je
push
stos
dec
mov
push
xor
fisubrs
clc
insb
cmp
fdivs
sahf
inc
mov
xlat
inc
in
xchg
bound
jmp
fistpll
fcoms
pushl
sbb
repnz
or
or
push
sahf
pop
mov
xorb
pop
gs
xchg
dec
aas
push
push
pop
stos
pushf
int3
lret
or
and
in
sub
out
leave
js
pusha
jmp
mov
js
shl
push
mov
mov
or
jb
cmpsl
mov
sti
jb
jge
enter
jb
push
jl
dec
sub
addl
mov
sti
xlat
push
mov
repnz
pop
enter
std
lahf
add
loop
jne
cmpsl
jno
push
xor
mov
cltd
sti
inc
fwait
dec
jo
sub
jb
sbb
jbe
and
jg
rcrl
movsb
lea
cmp
addb
loope
cmc
jge
lea
or
popl
sbb
mov
mov
xchg
pop
jnp
cli
daa
pop
ljmp
fcomp
jne
lods
xchg
xor
inc
lods
xor
adc
mov
cmp
out
or
adc
int3
sarb
or
jecxz
dec
sub
test
inc
test
mov
inc
ret
arpl
mov
mov
or
push
push
dec
insb
and
or
sbb
sbb
dec
scas
arpl
lahf
loop
es
mov
mov
out
mov
pop
pop
inc
aam
push
in
mov
and
icebp
mov
jge
sbb
popa
xchg
mov
xor
mov
loope
cmpsl
sub
and
ret
fld1
fsubr
dec
lock
insb
jae
leave
inc
mov
cli
mov
rep
pop
pop
pop
dec
test
xchg
mov
mov
mov
cmp
js
xchg
xor
inc
aad
xchg
pop
shl
xlat
in
cs
and
out
fnsave
test
sub
js
test
sub
sub
adc
xchg
cmp
int
mov
or
xor
adc
cmp
enter
sbb
push
xchg
cmp
sbb
dec
dec
mov
mov
out
xor
out
ljmp
gs
insb
xor
outsb
js
sar
addr16
xor
fldenv
xchg
sbb
inc
sti
nop
xor
mov
push
inc
aad
cs
inc
gs
mov
js
push
mov
out
jmp
cmp
es
pop
push
add
lea
jbe
cmpsb
imul
lcall
pop
dec
ror
pop
or
jle
jo
loope
ficomps
jg
mulb
push
loopne
mov
mov
and
loop
add
scas
punpckhwd
add
sub
dec
mov
pop
sub
xchg
jno
das
arpl
push
sub
faddl
test
orl
pop
inc
je
aad
fwait
or
scas
xchg
mov
cltd
push
das
leave
cmc
mov
cmp
push
mov
push
loope
arpl
or
or
les
filds
pop
mov
or
jnp
sbb
xchg
aas
cmp
pop
stos
dec
out
sarl
inc
mov
int3
hlt
mov
ret
arpl
mov
loop
stc
cmp
mov
test
incb
lds
sbb
push
outsb
adc
dec
xchg
push
inc
inc
push
jg
aam
sbb
jns
cld
out
add
pop
pop
cmpsl
iret
cli
or
push
adc
xlat
lea
sbb
push
in
shll
sub
add
inc
pushf
rorl
in
and
repz
cmp
sub
lcall
addr16
hlt
push
orl
dec
loop
mov
xor
or
xchg
add
or
xor
adc
incl
xchg
mov
fbstp
sbb
popa
addr16
mov
push
jl
dec
push
andl
adc
test
adc
sub
pop
lods
js
mov
dec
mov
loope
xor
rcrb
mov
lea
adc
jns
inc
lahf
movsl
mov
jp
stos
jne
pop
inc
aas
rcrb
cmp
js
nop
jne
dec
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
lock
mov
int
bound
cs
lret
loope
mov
xor
jno
mov
mov
fs
mov
cmpb
ret
adc
bound
test
pusha
int3
in
push
inc
jo
dec
pop
adc
in
gs
imul
add
repz
scas
sti
dec
cmp
fildl
push
sahf
call
fs
jbe
daa
mov
lea
sub
mov
lods
ds
insl
dec
fidivl
scas
test
push
shr
jns
and
movsl
out
and
jl
cmpb
imul
pusha
mov
sbb
lea
ja
call
ds
mov
cli
jno
and
inc
cmp
inc
shld
mov
ja
jecxz
xchg
pop
xorl
dec
scas
xor
cld
xchg
pop
std
pop
sub
cs
jbe
cmp
cwtl
dec
sub
idivb
and
repnz
mov
or
adc
stc
lods
pop
xchg
jno
insl
loope
mov
das
add
leave
mov
mov
or
std
aad
push
adc
jbe
and
adc
leave
or
mov
jl
add
sbb
mov
mov
dec
aad
cmpsl
cmpsl
in
jmp
pusha
dec
stos
dec
movsb
push
mov
fmulp
test
lea
add
mov
add
mov
std
pop
mov
lret
ss
lods
sbb
push
inc
call
enter
rolb
sub
ja
outsl
jb
xchg
rorl
pop
popa
mov
xor
ret
and
in
lock
fldl
dec
out
inc
andb
movb
rcrb
pushf
xchg
jbe
cmp
jecxz
adc
sub
cld
out
rcll
inc
fwait
sar
popf
add
mov
xor
js
notb
mov
jge
adc
pusha
xchg
bound
push
into
dec
fnstcw
xlat
jp
daa
dec
push
outsb
pop
sbb
jecxz
xlat
nop
stc
in
ljmp
pop
pop
adc
dec
cmp
scas
subl
xchg
ss
and
sub
jne
pop
add
push
test
or
mov
rolb
cld
or
sahf
push
cmpb
pop
adc
xchg
sub
rcrl
or
addr16
gs
mov
jmp
sti
cmp
loopne
xchg
sbb
or
inc
cmp
push
test
adc
mov
xor
std
rolb
inc
mov
fneni(8087
pop
repz
popa
dec
out
arpl
sbb
shrb
xchg
arpl
sbb
jo
es
pop
sub
xor
cltd
cmp
cmp
adc
out
aad
movl
stc
xchg
or
cmp
cmpsb
mov
add
ret
pop
fwait
mov
mov
mov
ljmp
or
push
add
dec
dec
fcomi
test
stc
outsl
dec
push
mov
mov
push
add
div
jbe
inc
nop
lods
push
mov
bound
push
mov
out
ss
test
adc
scas
into
xchg
movsl
jmp
jo
scas
and
push
xchg
clc
outsb
in
xchg
mov
lods
out
and
out
mov
lcall
lret
jne
je
cmp
lahf
inc
dec
and
and
jnp
mov
test
add
andl
aaa
xor
js
pop
mov
xchg
imul
enter
fsubrs
aaa
or
xorl
xchg
clc
arpl
in
ja
in
subb
mov
sub
movsl
mov
xchg
inc
lods
clc
xchg
jne
push
adc
adc
mov
sub
adc
jno
mov
in
daa
push
in
jne
loopne
daa
mov
push
jge
outsb
mov
sub
mov
mov
add
repnz
insb
cmp
mull
ss
test
mov
or
inc
jge
jmp
mov
xchg
cmpsl
push
jb
pop
shlb
movb
or
or
lahf
cmpb
push
xor
inc
scas
into
test
or
in
loop
stc
pop
push
sbb
bound
pop
pop
jmp
mov
jno
ret
inc
lcall
pop
fistpl
fcompl
xchg
out
add
mov
sub
mov
pop
fsubs
push
add
addl
dec
mov
in
imul
pop
mov
sub
push
subl
sub
push
lods
push
jmp
and
jmp
sub
xchg
adc
adc
incl
sub
jmp
push
xor
pop
std
adc
loop
in
adc
mov
add
mov
adc
sbb
pop
aas
mov
mov
shrb
cmc
stos
mov
iret
test
jne
pop
sti
pop
cmc
js
xor
xchg
cmovs
mov
xlat
mov
repnz
loop
cli
and
cli
fnstenv
aas
push
inc
testl
shrb
mov
sbb
imul
test
imul
arpl
aad
fcmovbe
mov
add
enter
hlt
scas
ljmp
negl
loope
divb
in
shlb
xchg
push
lret
jl
jae
ss
lcall
or
mov
bound
addr16
inc
stos
int
in
adc
jae
adc
mov
aas
adc
jne
mov
sti
aaa
cs
int3
outsb
mov
repz
loop
cli
xlat
in
adc
mov
xor
jecxz
aas
and
loop
jg
test
sub
dec
mov
movsb
lods
or
cmp
add
cmp
repz
xor
and
inc
push
sbb
addr16
xor
rol
sbb
xor
fisttpll
jo
stos
mov
repnz
sahf
mov
jle
andl
int
jg
jmp
xor
add
cmp
in
dec
lds
adc
sub
adc
pop
in
jo
mov
cmp
clc
into
push
lds
iret
cmpsb
push
add
mov
adc
sub
push
mov
sbb
iret
shl
push
fwait
xchg
push
or
mov
jmp
inc
add
ljmp
fcmovu
xchg
dec
push
out
call
std
mov
jo
lret
lahf
push
cmp
lret
lds
mov
fisttps
adc
scas
fcomi
icebp
cwtl
mov
jns
scas
repz
inc
sub
add
fadds
repnz
out
add
jno
jle
cmpsb
xchg
sbb
stos
into
out
jmp
repnz
pop
jge
pop
jl
xor
xchg
hlt
leave
adc
ret
int
jl
rolb
add
popa
jg
dec
jns
dec
pop
push
and
inc
push
or
mov
sub
xor
lret
xorl
mov
call
fwait
mov
xor
sub
jno
testb
adc
cmp
xchg
sbb
lods
sub
clc
out
ret
aad
into
aad
loopne
sub
or
mov
add
clc
mov
dec
shlb
push
xchg
cmpsb
mov
adc
iret
adc
xchg
push
imul
daa
push
test
pop
dec
icebp
mov
ljmp
mov
lea
mov
mov
int
lods
aaa
push
loope
loopne
adc
dec
out
call
rorb
add
imul
in
or
stos
lods
mov
ljmp
orl
pop
mov
cmp
hlt
or
test
nop
icebp
movaps
pop
push
push
lock
out
jmp
inc
push
and
inc
imulb
xchg
aaa
mov
cmp
das
dec
sub
mov
dec
sbb
aad
push
sahf
xchg
xor
jno
fwait
jns
repz
xchg
dec
cmp
jmp
jg
sbb
imul
adc
das
paddusw
pop
sbb
popa
lods
push
lcall
clc
addl
push
jge
cld
js
adc
xchg
ret
xor
or
outsl
sbb
movsb
fistps
dec
jae
mov
out
xchg
cmp
inc
inc
jg
sbb
cmp
je
inc
sub
cli
xchg
stos
mov
lahf
pop
ss
inc
mov
xchg
xor
or
je
mov
bound
rclb
dec
push
adc
and
out
xor
mov
lods
cmp
out
iret
sti
mov
ss
jle
jnp
hlt
ret
xor
sti
or
cmp
int
ret
lea
mov
mov
jg
ret
add
pop
push
jno
pop
scas
mov
out
sub
insl
lods
lods
and
insl
cmp
mulb
xor
insl
mov
sub
mov
fildl
inc
sub
out
pop
mov
mov
cmp
out
repnz
push
inc
mov
xor
outsl
imul
ret
sarl
jge
jb
sub
inc
fisubl
push
adc
sub
fldt
pop
inc
call
and
ds
xchg
pop
adc
test
xchg
loope
or
jb
push
xor
adcl
test
into
je
movsb
out
scas
cmpsb
out
or
or
insl
pusha
xchg
pop
mov
mov
jl
dec
fcmovb
or
cmp
shll
ss
fstpl
push
enter
xchg
sub
xchg
dec
sbbl
lcall
in
test
sub
or
xorb
cmp
cs
inc
push
insb
enter
test
xor
les
cs
mov
arpl
fcomp
inc
rol
in
ljmp
idivb
cli
loope
sbbl
and
repz
dec
test
pop
mov
mov
pop
stos
inc
jnp
shr
mov
das
imul
inc
mov
mov
push
inc
out
cs
push
testl
mov
test
stc
lods
sub
jae
adc
mov
pusha
jl
inc
aad
insl
test
pop
sbb
push
insl
mov
mov
inc
pop
ds
mov
push
or
loop
cmp
and
movsl
push
fdivrs
mov
fdivl
and
rcrb
test
push
jns
cmpsl
adc
mov
insb
movsl
cwtl
jno
and
jnp
loopne
fildl
sbb
sub
incl
pop
lret
xchg
adc
xor
jmp
out
test
push
in
loop
ret
jmp
je
clc
sbb
fimuls
dec
vshufps
cmc
mov
fsubp
gs
movsl
sbb
scas
ds
ja
call
in
inc
cmp
out
sbb
in
into
dec
push
xchg
bound
arpl
adc
out
dec
sahf
xor
ja
xor
push
pop
push
cs
out
es
pop
and
ret
imul
cmp
adc
inc
or
add
mov
mov
pop
insb
addr16
mull
mov
cmp
jae
fsub
mov
sbb
or
mov
add
mull
xlat
mov
jle
mov
ret
mov
imul
negl
cmp
push
clc
shlb
jae
mov
inc
jmp
int3
pop
sti
outsb
inc
mov
cmp
das
xchg
addr16
inc
inc
or
dec
jle
xchg
mov
ret
ja
cmp
jmp
test
pushf
stos
test
mov
adc
subl
xlat
dec
push
dec
lret
mov
fldpi
add
mov
ret
ja
loopne
inc
jae
ret
lahf
push
mov
stos
aam
push
add
mov
jb
das
mov
inc
out
scas
push
xor
mov
decl
inc
add
out
insl
inc
or
stos
push
adc
sbb
stos
and
mov
jge
dec
jl
mov
loop
dec
pop
leave
xchg
push
xor
jmp
or
pop
cmp
les
or
dec
and
subb
loopne,pn
jecxz
es
mov
xor
xor
fucomp
int
mov
arpl
xorb
cmc
xchg
aaa
xchg
push
rcrb
pushf
xor
add
and
jmp
mov
enter
sbb
int3
add
inc
call
jno
jb
sbb
push
aam
or
mov
imul
push
pop
fidivrl
pop
jmp
push
dec
push
clc
ljmp
mov
and
not
push
mov
sbb
call
push
xchg
ds
cmp
stos
outsb
notw
pop
in
ret
mov
popf
mov
cs
jecxz
out
mov
lret
scas
orl
ljmp
rcrb
out
push
cli
stc
and
lret
pop
xor
cmp
dec
outsb
or
mov
and
cs
repz
scas
adc
jbe
movsb
sub
push
stos
mov
fldenv
or
sub
inc
mov
mov
out
je
mov
loop
or
xchg
std
bound
movsl
adc
jmp
orl
push
cmp
xor
add
lods
cmp
push
adc
pop
dec
popf
sub
iret
jno
ss
in
daa
outsl
es
mov
xchg
clc
pop
jns
jmp
sub
or
push
jle
add
cmp
int
cmpsb
stc
sbb
or
pop
xchg
mov
push
pop
jns
sbb
jnp
jl
cmp
ret
lods
jge
nop
fdivrs
inc
adcb
lock
out
pop
sub
xorl
iret
mov
xchg
add
sub
aas
inc
or
xorl
adc
sub
mov
sbbb
nop
imul
mov
test
cmp
fwait
pop
cmp
mov
scas
test
pop
mov
fs
xchg
pop
mov
enter
pop
rorb
lahf
dec
mov
or
jecxz
enter
lret
xorb
ret
sub
imul
mov
scas
xorl
jnp
add
ror
xchg
or
jge
adcb
xor
or
fiadds
shrl
pop
jnp
mov
mov
add
pop
psadbw
dec
jp
jl
movsb
add
lds
out
adc
or
inc
fsubs
cs
and
test
mov
adc
dec
shlb
sbb
pop
sub
mov
dec
xor
into
xorb
inc
jmp
pop
bound
mov
pop
pop
inc
mov
fs
dec
push
jo
loope
cmc
clc
cmp
xchg
fwait
and
inc
incl
out
sub
or
mov
cmp
mov
outsl
mov
stos
stos
mov
lods
fistpll
or
mov
cmpsl
sub
push
ficomps
xor
mov
jge
and
sub
iret
pop
in
ficomps
lahf
scas
adc
cs
xor
repz
push
in
dec
fwait
pushf
jno
popa
mov
jns
inc
lahf
push
xlat
int3
or
subb
push
sti
test
push
popa
push
jo
arpl
inc
insb
arpl
les
rolb
out
imul
ret
pop
mov
rcll
add
dec
sub
mov
popf
ds
unpckhps
hlt
sbb
xor
pop
clc
ret
testb
out
popa
enter
insl
sub
xor
inc
cld
jb
sahf
inc
bound
cmp
jmp
loop
jp
sub
xor
scas
xchg
push
ret
enter
mov
iretw
or
and
insl
sti
movsl
int3
push
mov
sub
jae
call
lret
pop
and
pop
les
in
push
gs
sbb
mov
xor
mov
and
insl
test
push
xchg
dec
jmp
mov
dec
negb
into
test
xlat
xor
leave
jp
cli
mov
cmp
ss
mov
es
loope
push
mov
cmp
cs
iret
xchg
cltd
mov
sub
mov
dec
jns
aaa
mov
stos
int3
mov
jnp
movsl
inc
pop
aaa
pop
movsl
sbb
pop
jecxz
cmp
add
enter
sbb
xchg
sbb
cmpl
stos
or
int
std
mov
cmp
sub
insb
lahf
in
mov
xlat
dec
dec
dec
mov
xor
hlt
out
mov
cmp
fcoml
add
sub
xchg
ljmp
mov
popa
mov
lahf
xor
sbb
xor
test
fst
icebp
movsb
cmp
xchg
xchg
mov
andb
xchg
pop
push
lret
and
in
mov
pusha
xor
setp
imul
fdivl
test
dec
sbb
adc
jno
lcall
iret
pop
test
sbb
insl
push
xor
push
xor
int3
mov
imul
xchg
repnz
xchg
int3
int3
test
mov
stc
push
cld
xchg
jno
dec
dec
xor
or
in
mov
and
daa
leave
add
mov
pop
xchg
adc
stc
call
scas
xor
push
and
fnstsw
pop
mov
jle
push
imul
dec
jbe
xchg
scas
test
xor
sbb
in
call
jns
fistl
in
xor
dec
fcoml
outsl
stos
jae
mov
addr16
pop
repz
fwait
mov
xchg
xor
je
test
sbbb
sub
xchg
sub
pop
cli
loopne
add
mov
add
sub
push
sub
sub
stc
dec
xchg
jg
int3
roll
mov
dec
push
stc
movsl
and
sub
cli
clc
mov
nop
addr16
imul
inc
push
mov
push
repz
js
arpl
cmc
cmp
fxch
mov
jbe
scas
adc
xor
scas
mov
mov
pop
or
or
dec
test
notb
jg
mov
pop
cltd
add
scas
stc
inc
cmc
pop
insl
aam
test
adc
push
inc
sbb
pop
and
andb
add
ret
push
or
xchg
lods
adc
lahf
enter
push
mov
sub
sub
or
sub
mov
addr16
mov
xor
add
lods
and
cli
jnp
lock
xor
loope
adc
and
pop
jno
or
push
lret
pusha
loop
push
inc
jo
fildl
pop
lods
or
shll
jbe
mov
int
in
pop
out
pop
jg
mov
mov
iret
idivb
mov
pop
je
inc
cmc
sub
movb
cld
cmp
lods
orl
shll
push
ret
mov
dec
test
sbb
imul
pushf
insl
addb
lahf
mov
test
jo
repz
lahf
and
push
xchg
xor
sub
sahf
add
setge
in
push
lds
mov
aam
jbe
lret
shlb
mov
mov
adc
or
mov
pop
xchg
aam
imul
push
push
pusha
mov
mov
dec
xchg
andb
push
hlt
cmp
lock
adc
es
xchg
scas
push
addl
dec
cmpsl
in
inc
sbb
mov
mov
addr16
or
aad
test
jo
pop
xor
rolb
cmp
mov
jb
sti
adc
test
mov
iret
dec
lcall
cs
mov
and
xchg
sub
adc
xor
xchg
push
mov
fdivl
add
js
loop
push
lods
cli
jmp
pop
aam
iret
add
repnz
sbb
xchg
fldenv
imul
jns
scas
bnd
inc
cmpsl
jl
addr16
imul
mov
pop
xchg
jmp
jbe
sbb
dec
sti
mov
pop
mov
push
adc
mov
sahf
cmp
mov
cmp
daa
test
pop
add
cs
out
leave
fcos
sbbl
loope
lds
pop
fnstcw
addr16
les
js
int
fchs
test
arpl
imul
mov
sahf
jo
add
imul
cltd
push
sub
fisubrl
outsb
fs
sub
into
test
inc
in
rcrl
mov
ds
sbb
dec
and
pop
mov
add
stos
repnz
aad
inc
mov
sub
aaa
enter
pop
mov
mov
mov
jo
sub
push
or
jb
sbb
orb
or
mov
fnstsw
lea
pop
push
xchg
xchg
gs
lahf
xlat
xchg
or
lods
js
jge
xor
mov
in
mov
xor
sbb
in
rclb
pop
mov
mov
jle
add
pushf
xchg
ja
add
and
mov
mov
into
push
add
arpl
pop
push
dec
add
sbb
les
cmp
popl
xor
pop
testb
push
sbb
int3
aad
sub
push
mov
cmp
loope
jne
mov
and
mov
push
mov
cld
inc
mov
xchg
bound
mov
mov
imul
aad
movsb
pop
push
cltd
loop,pt
idivb
jno
pop
sbb
xor
mov
in
movsb
xor
mov
je
fistpl
pusha
aad
lret
cmp
aad
sbb
push
arpl
sbb
popa
add
notl
lahf
stos
gs
sbbl
aam
jmp
gs
insl
push
je
cmp
inc
push
dec
pop
or
adc
dec
pop
bnd
stos
scas
out
mov
insl
push
xor
sbb
ss
mov
mov
pop
in
mov
clc
mov
clc
shr
cmp
fs
cwtl
mov
cmp
pop
outsb
rcl
mov
outsb
xor
push
gs
push
adc
outsb
mov
push
or
mov
ja
lods
insb
ds
jns
dec
pop
adc
mov
push
pop
rcrl
inc
inc
pop
mov
scas
and
subl
xor
xchg
popf
cli
mov
ret
jnp
enter
in
mov
mov
sbb
loop
aas
cmp
xchg
lods
or
push
dec
sbb
shll
pusha
test
leave
sbb
xchg
rcll
pop
or
mov
push
sbbb
sub
and
push
push
stos
adc
mov
adc
dec
dec
arpl
dec
xor
mov
adc
insb
leave
mov
sbb
jmp
mov
andl
pop
scas
xor
or
jae
mov
mov
and
push
nop
imul
xchg
addr16
push
cwtl
add
jecxz
popf
adc
outsb
xor
flds
sbb
cmp
add
ss
mov
in
popa
mov
popf
movsb
jg
or
decb
pop
or
and
jl
in
sbb
in
mov
fsubl
int
jnp
imul
faddl
hlt
das
call
rcrl
rcrb
cmp
cmp
pop
xchg
mov
repz
pop
nop
pop
dec
fwait
add
fdivrl
orl
lock
add
xchg
push
xchg
xor
int
push
shl
pop
add
mov
mov
rolb
mov
push
fnstsw
jb
jbe
mov
and
mov
sti
sbb
jnp
pop
mov
aam
sbb
mov
dec
lods
les
lods
mov
test
aad
jo
aaa
dec
and
ror
mov
jb
adc
call
inc
ret
movsl
hlt
ljmp
sbb
sbb
sahf
jb
test
and
in
xchg
rcll
jnp
push
jmp
mov
xor
addr16
fnsave
lret
ficompl
pop
xor
jno
adc
cmp
inc
xchg
fdivrl
pop
sarb
pop
mov
hlt
pop
leave
ja
mov
clc
fsts
push
push
int
sti
out
or
dec
push
pusha
mov
adc
pushf
or
test
iret
test
lcall
loop
sbb
into
push
aad
pop
sbb
mov
xchg
data16
dec
sub
add
test
aam
rcrb
push
test
repz
mov
xor
fimull
mov
mov
pop
repnz
ljmp
or
pop
in
sub
xchg
adc
jno
sbb
rcrl
imul
jno
ficoml
ja
and
push
mov
and
mov
daa
push
pop
add
in
push
dec
mov
popa
jo
cmpb
mov
add
stos
pop
cmc
mov
test
jmp
xchg
mov
ds
mov
test
and
xchg
pop
jns
add
sbb
pop
or
fstpl
cmp
fidivrl
jb
xlat
jne
adc
test
fldenv
mov
loopne
jmp
sahf
pop
nop
cmc
loopne
scas
and
mov
test
and
push
cmp
pushf
lahf
xor
lods
dec
data16
mov
dec
cmc
out
jae
push
out
sub
jl
sahf
add
faddl
stos
rclb
fimuls
pushf
movsl
outsl
sbb
mov
xor
test
pushw
daa
dec
insl
pop
sysenter
inc
inc
jp
data16
std
das
or
leave
mov
into
cli
xchg
adc
fisubs
and
pop
sarl
fistpl
pop
xor
inc
pop
push
mov
sbb
push
and
pop
push
and
ljmp
mov
repnz
pop
sbb
and
aas
sub
aam
flds
or
sbb
imul
addr16
push
jo
das
lds
sbbl
adc
push
mov
fbstp
add
xor
dec
cmp
adc
cmpsb
xchg
inc
mov
lea
fldl
int
push
repz
enter
dec
or
in
pusha
xor
and
mov
push
pop
push
mov
repnz
cli
adc
push
ds
xor
jge
pushf
push
mov
inc
out
push
xchg
jge
filds
pop
cmp
jecxz
add
ds
adc
gs
adc
scas
aam
subb
and
push
lret
and
hlt
test
fistl
jno
or
jnp
stos
repnz
push
dec
adc
and
push
sub
mov
leave
mov
dec
insb
ret
xchg
lcall
jno
inc
fildl
jle
aaa
pop
aad
xor
in
fs
daa
mov
jl
mov
xchg
out
out
xor
jae
dec
xchg
dec
pop
add
sub
pop
pushf
lret
jp
pop
pop
test
neg
push
fmull
xacquire
mov
inc
je
jmp
push
pop
sub
xor
mov
pop
inc
mov
sub
jbe
xor
pop
jp
pop
popa
add
mov
fstpl
sbb
cmp
out
aad
xlat
sarb
loopne
call
xor
jno
dec
insl
leave
mov
add
jns
lahf
pop
jl
xchg
cli
mov
mov
dec
stos
daa
jmp
fcoml
icebp
sbb
xor
pop
pop
jbe
enter
sub
jmp
jl
stos
or
push
imul
bound
cmp
sbb
cmp
mov
xor
cmp
pop
addr16
loop
dec
sub
jmp
cmp
and
mov
out
sub
cmp
and
pop
jns
imul
push
stc
fs
dec
out
enter
ds
sti
inc
sub
popf
push
ja
sbb
cmp
inc
xor
cmp
xchg
sub
and
or
mov
into
ss
std
ret
fldcw
push
insb
outsb
loopne
das
mov
push
mov
dec
pop
decb
sub
cs
mov
push
pop
sbb
loopne
adc
mov
movl
adc
cmp
fisubs
inc
pop
push
mov
sbb
push
push
int3
pop
add
adc
lcall
xlat
scas
cmp
in
and
or
jle
or
pop
add
je
xchg
mov
jp
mov
mov
cmc
push
push
imul
dec
and
lds
repz
shrb
ss
aad
aam
push
mov
dec
pop
push
xchg
or
fistpll
in
cmpsl
cmp
xchg
cmp
xchg
lahf
xchg
incb
inc
xor
add
adc
movsl
pusha
scas
dec
or
ret
jns
jae
pop
lret
or
mov
xchg
lret
push
clc
push
mov
arpl
fdivs
cwtl
iret
sub
popf
enter
jge
add
notl
imulb
or
je
inc
leave
jns
mov
cs
pop
push
je
aam
stos
lret
popf
and
cwtl
sbb
inc
stos
mov
jmp
iret
mov
sub
mov
ljmp
xor
into
and
movsl
pop
repnz
cmp
ss
aaa
lahf
inc
sub
dec
test
jl
or
movsl
imul
xchg
mov
xchg
mov
aam
imul
pop
xor
mov
pop
dec
movq
mov
push
mov
sbb
push
mov
fs
inc
mov
xlat
ja
mov
pop
mov
jmp
scas
lret
ljmp
jo
inc
sub
cmp
xor
mov
shll
push
enter
inc
xchg
je
fnsave
neg
pop
jb
mov
sub
sbb
sbb
mov
fcmovnu
icebp
xor
jne
lods
loope
shrl
loop
push
sbb
xchg
sub
pushf
xor
mov
push
and
pop
fsubl
dec
cld
bound
ja
pushf
scas
mov
out
mov
test
int
cwtl
mov
xor
xor
mov
dec
pop
mov
pushf
xor
dec
sti
int
adcb
or
mov
jbe
mov
xchg
sbbb
lods
and
imul
jmp
lcall
or
lock
lods
cld
mov
lret
scas
mov
jno
jp
in
pop
in
dec
mov
subl
add
cmp
inc
or
or
cmp
push
dec
notl
leave
dec
xor
lds
fdivrl
sbb
inc
add
aam
cwtl
push
xchg
and
sbb
push
fucomip
xor
loopne
cmp
rorb
cmp
rclb
pop
adc
outsl
fwait
jmp
jg
mov
xchg
shll
mov
fildl
jmp
pop
pop
xchg
push
pop
cltd
rolb
cs
cmp
fxch
inc
insb
mov
pushf
clc
inc
out
movsb
clc
fnsave
adc
hlt
or
stos
rolb
push
or
jp
inc
movsb
sub
dec
enter
add
insb
addl
pop
hlt
or
sbb
filds
mov
xor
dec
mov
jne
loop
cmovne
xor
or
xchg
arpl
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
cmp
mov
pop
bound
push
cs
fistpl
imul
mov
insb
lret
cmpsl
push
push
dec
sbb
fcomi
insl
rcrl
data16
in
fidivl
jge
mov
mov
sar
cmp
popa
push
int3
inc
mov
out
sbb
pop
test
std
imul
dec
cli
int
sbb
inc
push
push
out
add
dec
jl
cmp
sub
popf
pop
push
fisubrs
stos
dec
inc
rclb
mov
xchg
inc
mov
pop
pop
aaa
flds
lock
mov
jp
popa
sbbb
mov
push
test
add
jnp
out
sub
dec
lea
and
mov
and
sbb
js
or
jne
xchg
clc
inc
sbb
jbe
or
iret
mov
jg
mov
mov
dec
mov
lret
jno
in
in
cwtl
mov
cmpl
xor
mov
repnz
stos
fisttpll
jg
loop
add
lahf
cld
into
jp
sbb
and
dec
cmpsl
mov
pop
mov
pop
popa
pusha
test
add
dec
jne
mov
jmp
scas
add
push
mov
loop
adc
data16
or
and
xchg
mov
dec
adc
mov
scas
js
mov
fimuls
pop
fwait
mov
xlat
pop
or
xchg
mov
or
xor
ljmp
aam
dec
pop
mov
mov
aas
out
cmp
sbb
rcrb
add
add
or
mov
sti
aam
and
sbb
xchg
mov
mov
data16
bound
pop
jle
pop
push
pop
mov
inc
push
pop
in
cmpsb
push
cmp
mov
mov
mov
mov
mov
sub
xchg
out
and
push
add
out
ret
and
adc
cld
jnp
xchg
rcrb
mov
xchg
jp
adc
inc
cmp
loope
jae
jo
pop
and
xor
mov
test
subb
dec
leave
cmp
in
mov
nop
std
mov
or
inc
sbb
jl
push
scas
pop
pop
mov
fsubrs
mov
mov
pop
sub
xor
pop
out
inc
push
orb
cmp
xor
or
sbb
mov
aam
sbb
jp
xor
mov
loopne
mov
jnp
addr16
add
test
data16
aam
xor
fcompl
jne,pn
mov
enter
pop
and
lea
rcrb
pushf
je
mov
fwait
dec
sbb
lds
or
lods
sbb
dec
push
inc
and
mov
cmp
sub
iret
push
mov
push
mov
jnp
jecxz
or
cmc
lahf
cmc
inc
aam
movsb
lods
jnp
mov
mov
insl
inc
scas
add
aad
ror
jae
repz
cli
sbb
mov
shll
repz
idivb
out
cmp
out
aaa
addr16
dec
fnstsw
outsl
cli
pusha
pusha
sbb
insl
hlt
jae
movsl
adc
sbb
inc
in
pop
jnp
movsb
popf
mov
cmp
pop
cmpsl
xor
add
pop
xor
xchg
sub
fcmovb
adc
inc
sub
pop
cmp
cmp
int3
and
jle
lret
icebp
mov
push
pop
sbb
flds
test
fcmovbe
adc
outsl
aam
dec
addr16
cltd
lea
fcoms
jg
inc
out
adc
dec
aas
lds
das
orb
lahf
xor
mov
mov
push
leave
jno
xor
mov
lcall
push
mov
mov
call
outsb
add
mov
adc
jle
sbb
outsb
sbb
dec
and
imul
xlat
in
jl
lea
sahf
sahf
adc
popf
es
cmpsl
test
into
dec
push
int3
repnz
shrl
setne
inc
in
adc
daa
fistl
or
xchg
pop
dec
xor
aaa
daa
and
cs
test
cmp
cwtl
dec
aas
pop
xor
mov
mov
cmp
and
mov
xchg
das
repz
lea
ficoml
out
stc
adc
in
jo
pushl
dec
push
dec
push
fwait
movsl
iret
ret
xorl
test
out
sti
and
xchg
insl
icebp
fdivrp
cmp
mov
lock
lret
and
xchg
std
mov
movl
xor
jo
test
mov
xchg
pushf
add
fwait
push
inc
movsb
int
mov
inc
sbbl
xchg
adc
push
jae
ss
ja
mov
mov
subb
mov
stc
call
add
test
jne
fwait
mov
pushf
mov
outsl
mov
cmp
mov
mov
rcrl
out
js
xor
lahf
pop
pop
mov
cs
push
inc
jl
aad
jge
gs
mov
lea
das
inc
ljmpw
adc
movsl
sub
imul
push
ljmp
jns
jge
call
and
cli
add
dec
in
mov
or
test
mov
mov
or
rcr
mov
mov
mov
icebp
lret
lret
insb
aam
call
lea
mov
pop
push
shll
lock
and
add
subb
sub
in
push
xchg
test
mov
mov
pop
adc
sbb
insl
xor
mov
sub
negb
jp
xchg
in
mov
loopne
insb
mov
lea
das
xor
inc
stos
test
mov
xor
pop
cwtl
nop
adc
mov
cs
out
jg
and
daa
hlt
xlat
fisubrs
into
outsl
idivb
mov
fstpt
push
jmp
jp
xor
clc
movsb
ja
in
mov
orl
sub
mov
jb
lret
into
push
jnp
pop
aam
jne
sbb
mov
jg
and
sar
cmp
lcall
out
or
shll
aas
push
inc
ljmp
mov
ret
lea
xor
mov
add
adc
mov
push
jmp
ds
scas
shlb
fcomp
bound
mov
cmpsb
and
mov
sti
cli
and
push
jb
adc
jecxz
and
ljmp
or
ss
xchg
inc
push
cmpl
je
mov
out
or
sub
or
dec
cmp
into
cmp
cmpl
es
out
mov
mov
orps
add
pop
in
mov
inc
jmp
punpckhwd
or
test
adc
fbld
out
sub
clc
jg
pop
adc
pusha
aad
sbb
add
mov
mov
mov
sbb
out
sub
jecxz
jg
xor
in
adc
lret
pop
and
dec
repnz
je
scas
cmpsl
insb
ds
mov
lods
mov
ret
mov
mov
push
cmpsl
fistps
idivl
xchg
push
cmp
and
jle
jbe
add
or
je
les
lret
add
or
repz
mov
xlat
idivb
movsl
loope
jecxz
mov
dec
out
adc
aas
rcl
and
inc
and
cmp
es
sbbb
and
xor
mov
xchg
dec
lret
insb
xor
ljmp
aad
push
lcall
pop
cmp
ds
mov
push
out
daa
mov
cwtl
sbb
shll
mov
lods
xchg
push
cmpb
mov
mov
mov
jae
inc
rclb
push
in
movsb
stc
cmp
push
and
sahf
sbb
jae
pop
sbb
leave
inc
out
inc
push
jle
and
lea
jno
xchg
mov
sub
js
sub
lret
pop
rclb
clc
fimull
loope
xorl
mov
xchg
jecxz
xorl
cmp
adc
lret
out
addr16
xor
out
xchg
imul
pop
xchg
cmp
push
popf
xchg
rorb
in
push
or
fisubrs
push
repz
mov
inc
mov
pop
cmpsb
xor
add
adc
sahf
es
call
in
fcom
lea
cmc
dec
ja
repnz
xor
mov
fildl
pushf
add
dec
pop
loopne
add
jp
hlt
push
incb
iret
push
jo
xorl
xchg
repz
lret
mov
pop
mov
bound
or
cmc
mov
and
and
and
jbe,pn
adc
aam
in
mov
movsl
mov
sbb
lahf
imull
sub
xchg
ja
jmp
dec
movsl
mov
mov
mov
dec
mov
pop
mov
jns
push
out
fldl
addr16
scas
scas
xchg
ds
outsb
sti
adc
or
clc
and
mov
sub
stos
inc
push
pop
fdiv
pop
mov
dec
repnz
imul
imul
loopne
addr16
mov
test
mov
pusha
pop
add
sub
lds
repz
sbb
roll
xchg
adc
sub
sbb
add
inc
dec
sub
jae
jnp
cld
or
or
test
adc
outsb
ficoml
fsubrs
dec
bound
cwtl
xchg
push
mov
sub
mov
fwait
add
scas
jno
and
inc
scas
hlt
jns
adc
mov
in
and
mov
dec
and
stos
loop
icebp
shlb
jle
les
mov
loope
jo
in
sub
add
jge
xchg
pop
imul
sbb
cltd
adc
test
mov
sbb
pop
int3
imul
inc
cmp
scas
cmp
outsl
push
adc
sub
mov
enter
inc
mov
sbb
divb
sub
out
dec
imul
insl
lock
add
das
pop
mov
push
mov
mov
test
aam
sub
ret
sbb
inc
mov
add
and
int3
insb
in
inc
shrl
jg
loopne
cld
and
xor
xlat
adc
pusha
rcr
push
lods
mov
fucomp
or
adc
std
sbb
insl
cs
jne
jle
clc
xchg
xor
add
sarb
lcall
push
sub
in
xor
xor
mov
pop
and
xor
xchg
dec
rclb
jno
ret
and
jmp
loope
cmp
lahf
bound
popf
mov
push
add
enter
in
jl
addl
movsl
pushf
test
and
test
aad
in
xor
jp
jns
lock
out
mov
lahf
cmpl
xor
inc
adc
adc
insb
imul
mov
stc
jne
or
mov
sbb
xchg
andb
arpl
xchg
fcompl
fldl
vcvtsi2sdl
push
pop
mov
jge
dec
lret
fildl
jl
out
mov
icebp
cli
int
fnstsw
cld
mov
pop
pusha
ret
jge
jae
cmp
sbb
adcl
cmp
in
outsb
and
shll
sbb
inc
mov
inc
out
mov
sub
ss
push
cmp
sbb
mov
repnz
shr
cmp
stos
or
mov
xchg
daa
pushf
add
inc
lods
dec
fdivrs
out
or
and
lock
inc
jl
stc
lret
mov
add
or
sbb
or
iret
sub
repz
push
stos
stos
je
jmp
sub
mov
mov
fbstp
push
push
push
jno
out
add
fnstenv
js
leave
nop
pop
mov
cmp
in
dec
jno
mov
push
adc
adc
inc
cmp
lods
sbb
mov
fst
pop
fildl
mov
vmovdqu
mov
mov
hlt
xchg
xchg
push
rclb
lods
fisubl
and
pop
cli
js
pop
add
jecxz
sbb
and
test
scas
lds
mov
xchg
cld
mulb
jns
jp
xchg
fs
cmp
jo,pt
mov
test
jae
into
mov
pop
test
mov
pop
stos
call
mov
xor
icebp
stc
mov
aam
arpl
mov
add
mov
ja
dec
fcoms
or
push
or
cltd
movsl
aaa
or
iret
jp
das
in
test
xchg
cmp
enter
mov
inc
mov
mov
cwtl
sbb
aas
sbb
dec
jne
sbb
lock
push
inc
inc
lea
lret
pop
mov
sbb
mov
imul
pusha
pop
xor
in
mov
mov
in
add
mov
pop
loop
adc
cmpsl
inc
xchg
xchg
push
pop
movsb
aam
in
cmp
popf
pop
jns
popf
jne
inc
outsb
push
sub
lock
jge
mov
jne
xor
in
addr16
cs
inc
lock
stos
sub
inc
scas
fiaddl
pop
imul
jno
aas
das
into
lret
repz
or
dec
mov
dec
ja
inc
movsb
scas
cmpsl
pop
mov
sub
mov
cmp
jmp
mov
in
push
mov
push
sahf
or
sub
pop
mov
into
imul
fwait
push
fsubl
jmp
and
xor
movsl
cli
adc
sbb
test
push
stc
or
jecxz
fisubrl
rcll
jbe
dec
test
mov
xlat
or
mov
arpl
fisttpl
stc
sub
jne
pop
test
addr16
fs
loop
test
andl
dec
ss
xlat
inc
icebp
add
jbe
pop
adc
in
sub
inc
dec
sub
pop
pushf
xlat
divb
mov
sbb
fsubl
stos
jo
push
pusha
mov
sbb
popf
cld
adc
das
mov
or
rorl
xor
pop
pop
xor
aam
js
or
adc
xchg
cmp
push
cld
or
lock
xor
push
inc
cmc
cli
mov
push
and
mov
mov
mov
dec
aaa
push
enter
ss
sub
add
scas
test
repz
fimull
dec
insb
jo
xor
push
dec
andl
aad
push
lds
outsl
inc
mov
jp
fsubl
add
fcmovne
push
aam
fnsave
adc
lahf
mov
cmp
cmpsl
and
push
sub
out
mov
addl
dec
enter
shll
sti
sub
icebp
pusha
pop
iret
cmp
popa
mov
fwait
adc
les
xor
add
dec
sub
xchg
jp
sub
iret
cmp
xchg
scas
int3
lock
xor
add
inc
inc
mov
lcall
push
sbb
ss
cld
cmp
out
jo
jge
cli
fidivrs
mov
adc
pop
scas
cmp
hlt
adc
out
xchg
jecxz
fistpll
pop
mov
arpl
add
push
scas
or
pop
xor
jp
frstor
int
iret
clc
outsl
loope
sti
or
and
test
mov
add
fidivrs
scas
cmc
pop
iret
hlt
ds
xlat
test
out
repz
stos
sbb
mull
cmpsb
aaa
imul
mov
dec
out
pop
daa
mov
outsb
pop
xchg
sbb
int
push
mov
push
jp
orb
popf
mov
gs
into
xchg
fs
lahf
mov
mov
leave
xlat
inc
andb
sub
xor
mov
out
jecxz
nop
pop
cmp
add
in
pop
xchg
rclb
pop
mov
push
dec
xchg
and
xchg
jl
inc
inc
xor
xor
imul
stos
xchg
and
pop
dec
jbe
xchg
cs
mov
adc
test
movsb
in
mov
and
sub
mov
call
scas
jle
or
lea
jae
adcl
add
in
in
testl
mov
mov
pop
mov
fs
fbstp
loopne
out
pop
jg
adc
adc
push
cmpsl
jl
xor
sti
pop
ficompl
or
cwtl
xchg
inc
jge
mov
adc
fwait
lahf
iret
dec
lret
divb
out
mov
insl
or
dec
add
xchg
or
jne
mov
or
subl
pop
lock
adc
inc
push
repz
xchg
or
xorl
mov
scas
fbld
xlat
or
mov
ror
loop
fcmovb
hlt
pop
pusha
sbb
repnz
aaa
sub
ret
aad
pop
ljmp
inc
sbbb
push
jno
mov
fndisi(8087
pushf
popa
mov
mov
inc
je,pn
xchg
mov
clc
scas
mov
repz
ljmp
ret
cs
cmpsl
sbb
lea
out
add
outsl
jmp
adc
fldcw
inc
ljmp
mov
out
ds
fxam
or
or
lock
jge
fildll
add
pop
sub
sbb
ret
call
outsl
cmp
mov
and
and
leave
mov
ret
and
faddl
enter
add
daa
mov
sbb
test
ljmp
mov
jg
ret
shrb
mov
in
dec
out
push
outsl
push
test
rcrl
or
pop
aam
in
iret
je
ljmp
add
nop
mov
mov
mov
aaa
sbb
inc
mov
mov
leave
inc
in
mov
push
nop
adc
inc
cld
cs
add
lods
push
cmc
imul
push
loopw
les
out
mov
jp
or
sub
xchg
test
sbb
rolb
mov
dec
rorb
jmp
push
and
out
pop
into
or
jl
out
adc
shrl
or
int
adcl
xor
pop
and
mov
stos
addr16
out
mov
inc
adc
xchg
rclb
movsl
int
and
je
ret
inc
int3
hlt
and
movsb
outsl
test
jmp
lret
mov
dec
or
dec
in
pop
pop
or
lods
and
les
lods
dec
mov
orl
add
push
cmp
insb
out
xor
jp
cmp
test
fistpl
lods
mov
push
jnp
outsb
sarl
ss
push
push
ret
inc
cwtl
movsl
jnp
ror
icebp
int
sub
xchg
movsl
das
outsb
jae
push
push
jp
hlt
lods
dec
pushf
dec
dec
jp
sbb
dec
ss
adcb
xorl
rclb
popa
add
dec
out
adc
or
andb
shll
jg
cmp
jb
jge
add
cmpl
push
xchg
stos
leave
or
xchg
pushf
loop
add
lret
cltd
lods
inc
lds
mov
sub
clc
mov
sbb
pop
add
mov
into
sti
push
cwtl
mov
shrl
inc
mov
dec
sbb
outsb
cmp
fwait
jg
out
or
xchg
and
enter
sti
xchg
sub
xor
pop
jmp
into
mov
mov
std
out
dec
jno
pop
mov
ss
and
rol
jnp
scas
out
test
rorb
jno
shrb
and
test
in
imull
fmull
add
cmc
mov
out
inc
sub
jbe
movsl
push
or
mov
shrb
jg
ljmp
xor
inc
mov
xlat
fnstsw
jbe
mov
xor
mov
jne
mov
pop
inc
in
add
fmull
push
inc
in
inc
mov
mov
lea
sub
inc
iret
or
rcrl
setg
pop
std
push
iret
arpl
stos
cmovg
cmc
loope
lret
mov
mov
les
fildll
insl
lahf
push
jno
push
sahf
adc
xorl
xor
aaa
pmullw
cld
mov
xchg
dec
test
test
sbb
into
mov
inc
or
insb
add
aad
je
inc
mov
dec
leave
icebp
jl
addr16
into
pop
push
test
mov
add
aad
dec
pushf
notl
adc
pop
stos
pop
jo
sbb
pop
xchg
div
cmp
dec
repz
mov
gs
lahf
add
xor
cmp
sar
cld
sub
lods
lahf
pop
aam
or
into
pop
cltd
test
imul
push
mov
stc
push
sbb
ja
ja
adc
mov
repz
iret
push
inc
jbe
mov
outsl
xor
xchg
insl
mov
sub
popa
les
xchg
stc
jbe
mov
scas
or
adc
cs
cmp
data16
adc
inc
jmp
sub
push
int3
and
testb
and
dec
xor
scas
jge
cmp
lcall
sbb
int
in
test
cmp
adc
xchg
and
inc
xor
inc
sbb
pop
push
out
jns
lds
lret
pop
das
sub
inc
sbb
mov
inc
add
shrb
xchg
mov
iret
movsl
jne
daa
add
call
cmpsb
add
movl
inc
jae
lahf
cmp
fs
imul
add
xchg
inc
loope
cmc
lods
dec
xchg
push
test
nop
xchg
cmp
jmp
mov
in
addr16
add
push
pop
cld
lret
stos
push
je
loop
lods
aaa
dec
pushf
rorl
xor
out
pop
inc
jne
adc
mov
cmp
and
adc
mov
call
sbb
xor
mov
mov
int3
ljmp
or
sub
push
adc
pop
jo
je
xor
gs
call
cmpsb
dec
jl
test
mov
sub
imul
imul
mov
dec
push
lret
add
pop
cmp
jecxz
lahf
lock
inc
sahf
jp
jo
jecxz
pop
sbb
je
xchg
push
leave
test
pop
mov
or
inc
fwait
jb
vmulsd
mov
je
aaa
stos
xchg
or
mov
mov
sub
pushf
rcll
dec
mov
iret
loop
aaa
xchg
notb
xchg
jecxz
jge
or
outsl
cwtl
push
adc
jmp
cld
movsl
jbe
shrl
iret
imul
pop
jp
in
into
pop
inc
push
dec
imulb
push
inc
fstpt
xor
push
adc
adc
pop
add
push
mov
jbe
or
leave
out
aaa
gs
jl
jmp
stc
push
cltd
and
or
leave
div
fldcw
add
mov
cmp
inc
out
mov
movsb
sbb
add
xchg
push
ds
jno
xchg
and
sti
mov
popa
xchg
out
inc
mov
sub
sbb
mov
mov
mov
les
mov
xchg
xchg
cli
adc
sub
cli
ret
push
adc
into
dec
ds
jno
sbb
js
subl
mov
inc
and
rorl
push
or
rorl
test
and
xrelease
and
sahf
mov
sbb
inc
add
cmp
xchg
dec
pop
push
jnp
adc
inc
cmp
ret
ss
mov
adc
fdivs
pusha
and
je
int3
push
add
xchg
gs
test
mov
push
fsubr
test
cmp
fisttpll
dec
push
inc
out
push
nop
movsb
ret
adc
sti
cmp
xlat
push
rcrb
add
mov
and
add
sarl
mov
adc
add
in
out
xchg
add
or
in
xor
xchg
test
mov
push
insl
icebp
std
js
arpl
add
dec
adc
cmpsl
pushaw
jb,pn
lret
adc
mov
mov
cmpsl
mov
aas
int
mov
inc
push
fcompl
scas
ljmp
jno
mov
loope
add
dec
xor
xchg
cmp
sarb
in
pop
insb
je
sub
sbb
hlt
add
test
xor
mov
iret
fdivr
push
ret
xor
jg
mov
adc
sub
pop
pop
out
rol
jmp
jae
testb
pop
ljmp
nop
xor
cli
fstps
lock
repz
sbb
dec
sbb
mov
mov
adc
sarl
ret
pop
mov
or
mov
cmp
mov
out
clc
mov
xor
adc
cwtl
out
cmpb
in
scas
incl
inc
fnsave
int3
sar
shll
sar
or
lods
imulb
in
add
jecxz
ds
aam
xchg
fiadds
sbbb
lods
sub
stos
push
cs
icebp
cs
and
lcall
mov
ret
adc
lods
cli
pop
jb
outsl
ds
scas
inc
cmp
hlt
nop
jmp
cmc
pop
pop
lock
sarb
jg
dec
lcall
mov
movsl
push
cmp
int
xlat
inc
cmp
testl
mov
sbb
cmpsl
stos
mov
xor
sbb
add
push
bound
leave
cli
fs
inc
in
sub
jb
repz
adc
or
stc
cmpsl
add
dec
sub
sub
sbb
mov
popa
add
pusha
push
rol
test
mov
mov
add
out
dec
inc
pop
push
jo
add
push
xchg
xor
adc
jo
mov
les
and
cmc
push
fwait
imul
xor
cmc
test
sbb
aad
and
insb
and
nop
xchg
loope
fistpll
out
or
push
fsubr
rcrl
mov
mov
std
add
pop
push
xor
nop
shlb
sbb
movsb
in
lock
test
and
or
in
mov
add
mov
popf
mov
mov
test
fwait
adc
fwait
std
mov
scas
std
dec
or
fstpl
mov
arpl
inc
mov
mov
adc
adc
or
cmp
xchg
stos
or
addl
std
lea
jnp
dec
leave
dec
dec
ret
fs
jg
mov
fwait
and
push
rolb
mov
pop
js
add
fisubs
out
dec
addr16
xor
cli
std
mov
mov
and
stos
and
push
in
push
jle
mov
and
lods
or
in
adc
push
or
stos
jb
cltd
push
push
ret
mov
mov
mov
test
jle
pop
out
je
das
shlb
mov
gs
cmp
imul
fmuls
jae
fnstsw
pop
or
and
call
xchg
jnp
dec
mov
add
sarb
mov
jmp
mov
leave
adc
outsb
xor
cs
sub
mov
cmp
lret
and
mov
mov
pop
cmp
mov
insb
mov
shlb
jmp
mov
lock
ljmp
adc
or
call
mov
mov
mov
movsl
dec
daa
mov
cmp
sti
hlt
jnp
aas
pop
or
dec
das
mov
test
push
cmp
dec
lret
xlat
adc
ret
cmc
lods
fcmovnu
xchg
ret
addr16
mov
popf
sub
imul
mov
add
por
cmpsl
cmp
pop
call
dec
lock
lods
pop
shll
xorb
sub
mov
popa
dec
xlat
xlat
clc
cld
lcall
and
add
pop
call
push
push
inc
fstl
sbb
fmulp
std
mulb
mov
fcoms
sbb
ja
loop
pop
dec
adc
inc
rol
rclb
mov
mov
mov
jns
lods
dec
mov
int
loope
inc
adc
arpl
mov
mov
cli
stos
sub
sbb
sub
xlat
cmp
push
pop
dec
pop
dec
xor
push
push
jmp
dec
pop
rolb
dec
ljmp
jp
xor
scas
fsubrl
adc
js
rolb
xor
fiaddl
inc
mov
clc
xchg
push
orl
inc
out
cmp
outsb
cmp
mov
bound
aas
cs
outsl
jge
pop
mov
and
xorb
jne
adc
dec
dec
lcall
or
xchg
outsb
mov
pop
stos
iret
subb
pop
mov
add
xor
imul
fisubl
and
aad
and
sahf
int
adc
or
dec
jbe
mov
mov
leave
pushf
jp
pop
std
gs
lahf
test
out
sbbl
push
clc
dec
lods
mov
std
cmp
data16
repnz
mov
sub
loop
lret
test
fadd
lods
inc
faddl
nop
mov
nop
fidivrs
out
call
push
into
cmp
repnz
ret
shrb
arpl
sbb
mul
movsl
xchg
jae
adc
jmp
jbe
xlat
out
pushf
adc
and
sbb
mov
les
push
xchg
cmp
jl
insl
xchg
and
inc
imulb
daa
sub
roll
or
retw
and
je
push
jnp
pop
dec
jecxz
adcb
aas
cmp
arpl
adc
lock
or
cmpsb
mov
lock
cmc
aaa
mov
rolb
xchg
cltd
aad
sub
jle
sub
popa
aas
mov
fcomps
cmp
jmp
out
xchg
int
or
das
add
aam
pushf
push
arpl
jmp
enter
xor
and
mov
daa
xor
clc
repz
mov
imul
adc
mov
mov
jns
inc
lock
pop
cmp
sbb
shl
outsb
sub
je
testl
int
pop
outsl
scas
jae
mov
dec
mov
sarb
daa
mov
enter
jo
jne
loope
cmp
pop
and
lret
sub
or
pop
daa
std
or
dec
mov
cmp
cli
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
aad
or
pop
bound
aas
call
adc
sub
cmpl
and
sbb
jns
xor
push
lahf
cmp
imul
lcall
das
dec
movsl
sbb
dec
lods
loopne
adc
inc
stc
xchg
inc
nop
inc
rorb
cs
mov
jl
push
cltd
ret
lods
ficompl
dec
sub
adc
mov
cmp
sub
fwait
push
sbb
xor
jecxz
int3
jp
mull
aaa
sbb
call
sbb
nop
xchg
or
out
in
js
mov
out
mov
pop
ficompl
scas
sub
xor
arpl
xchg
lret
rcrb
jmp
rorl
push
out
mov
push
fistpl
mov
lret
and
dec
out
adc
dec
xchg
sub
bound
add
sub
jg
pop
mov
jae
push
cs
jmp
mov
decl
sub
push
jns
mov
or
or
aas
cmp
out
pop
mov
rclb
xlat
out
dec
clc
mov
loopne
out
and
push
aaa
dec
cmp
mov
pop
dec
fisubrl
lock
xor
dec
dec
pushaw
loop
dec
sbb
sbb
ret
mov
xchg
inc
call
sbb
adc
jmp
mov
sbb
sub
and
mov
leave
shl
lds
pop
ja
adc
jg
sbb
leave
pop
enter
adc
movb
decb
ja
test
setae
xor
leave
jo
push
fsubl
lea
mov
fnstenv
push
cmpsl
dec
sub
adc
add
pop
dec
test
arpl
push
movsl
lret
jmp
inc
push
cld
cmp
rcll
and
test
sub
lret
aaa
fdiv
add
jo
or
and
jle
je
sahf
mov
sbb
dec
sub
loopne
dec
pop
add
mov
nop/reserved
testb
fadd
add
nop
movsb
shll
outsb
pop
movsb
out
pop
cld
add
pop
stos
jno
das
test
subl
xlat
fsubl
xchg
mov
imul
jae
aam
loope
xchg
out
ds
jbe
and
loopne
fucomip
popa
jge
fs
jb
push
sahf
push
fwait
adc
mov
adc
mov
sub
mulb
mov
cltd
mov
loope
aam
out
sub
in
mov
inc
xchg
aam
lock
jns
insb
adc
xchg
out
int3
or
in
dec
pop
mov
loopne
jle
rorb
in
lret
fldl2e
loope
mov
insl
daa
push
mov
cmpsl
inc
insl
xchg
add
mov
xchg
fisttpl
xchg
jno
mov
test
incb
kortestb
call
jmp
pop
cmp
pop
push
cmp
fistpl
jmp
incl
fnstenv
xor
test
xor
movsb
mull
fwait
jecxz
or
in
fst
sub
adc
test
or
roll
in
push
mov
push
push
enter
ficoml
shrd
mov
mov
pop
xchg
ficompl
inc
leave
mov
loop
rorl
and
test
scas
jle
inc
aad
loop
pop
mov
xchg
push
dec
aad
push
push
test
add
push
scas
scas
cmpl
mov
inc
nop
fstpt
dec
in
sbb
and
sti
sbb
sub
cmpsb
or
stos
imul
rcrb
mov
add
mov
cmc
inc
xchg
movsl
rcll
push
jbe
jp
sbb
gs
dec
cmp
jb
or
dec
push
loopne
rcrb
xor
stos
stos
movsb
sub
mov
fmulp
aaa
lahf
cli
push
push
stos
adc
pinsrw
or
leave
in
pop
in
fwait
sar
inc
dec
test
pop
pop
mov
nop
out
pop
sbb
dec
loop
and
and
ret
sub
push
jne
enter
jg
push
int3
mov
nop
pop
or
sub
and
dec
sbbl
into
scas
clc
stos
popf
xchg
xor
mov
push
and
sbb
call
or
cltd
sub
and
les
ficomps
adc
sarb
pop
or
inc
xchg
lcall
sbbl
xchg
xchg
lods
enter
jns
lock
dec
or
mov
dec
inc
insb
inc
pop
imul
mov
lods
sub
dec
fcompl
movsb
inc
adc
inc
cmp
xorl
pop
mov
xor
sbb
jnp
jnp
lret
sub
sub
stc
xlat
daa
xchg
mov
xor
iret
in
and
fwait
push
mov
push
adc
and
into
scas
dec
xor
push
sti
or
sub
push
pop
andl
movsl
mov
mov
lea
jl
add
xor
sub
das
lret
add
adc
xchg
push
xlat
inc
mov
push
jle
rolb
iret
jmp
repz
pop
push
lret
xchg
cmp
subl
loope
pop
jmp
mov
pop
pop
mov
das
popa
sti
aad
aaa
insb
mov
or
xor
xor
bound
push
aam
jmp
sbb
sbb
inc
loop
jo
sbb
nop
cld
adc
fsubrl
cmpsl
push
sti
mov
subb
xchg
xor
divb
roll
les
or
add
test
out
cmp
test
lock
xlat
mov
cwtl
popf
out
jbe
cmp
dec
and
and
add
pusha
pop
lods
mov
adc
mov
sub
nop
insl
sarb
addr16
inc
add
rcrb
jp
or
or
jbe
sbb
xchg
xchg
lret
pop
sbb
test
mov
push
cld
mov
in
xor
jns
jg
scas
rorl
sbb
ret
movsb
fnstsw
repnz
cmp
pop
imul
int3
psubusw
and
inc
int3
cltd
sub
leave
scas
mov
stos
aad
nop
lret
mov
cltd
lea
ss
push
jno
es
and
pop
mov
in
ljmp
dec
cwtl
mov
dec
shll
leave
dec
pushf
pop
mov
in
sub
aam
aaa
andl
in
jb
add
lret
test
imull
mov
mov
xchg
push
and
idivb
jmp
das
stc
imull
insb
xchg
xchg
aaa
and
ret
push
mov
lcall
cli
cmovb
daa
or
cld
ljmp
push
std
imul
mov
jnp
out
stos
mov
xchg
fs
mov
add
mov
popf
mov
enter
in
push
inc
mov
jno
pop
cmp
jg
sbb
repz
and
std
addr16
lcall
stc
pop
mov
mov
cmp
cmpsl
mov
insl
push
xchg
xor
push
dec
adcl
dec
jl
sub
and
scas
aas
arpl
sbb
and
in
adc
aad
sub
push
mov
cmc
pop
in
lahf
adc
xor
xchg
jb
sub
scas
jae
xor
mov
aad
fstpl
xchg
movsl
sub
fiadds
je
push
sub
fmull
ficoms
add
and
mov
cmpsl
jecxz
stos
mov
jns,pt
pop
pop
fadds
jb
dec
aad
loop
ficompl
sub
out
aaa
cs
and
mov
mov
sbb
push
xchg
lods
rcl
scas
pop
xor
addr16
pop
jbe
add
sbb
rcl
inc
call
fwait
push
pop
mov
dec
add
xor
mov
cmpsl
xchg
ret
cmp
jl
jnp,pt
ret
cmp
aaa
pushf
mov
clc
mov
add
fidivrs
ret
lods
inc
fs
push
dec
movsb
das
jno
lret
inc
out
in
pop
adc
cmpsl
addb
mov
imul
mov
jle
mov
or
lret
pop
jbe
inc
ja
or
or
sbb
push
movsl
pop
movhps
jae
sbb
addr16
sar
cmp
pop
sbb
sti
jnp
inc
cmpsl
pop
xor
inc
loop
push
cmp
inc
mov
mov
inc
test
inc
xor
popa
hlt
dec
aas
pop
sub
pushl
jecxz
sub
test
dec
aaa
cmp
mov
push
and
inc
jp
mov
mov
aam
xor
ljmp
jmp
shl
imul
or
inc
push
push
mov
push
mov
fidivrs
mov
mov
pop
sbb
jae
lret
dec
imul
loop
insl
cmc
or
jl
popa
adc
daa
movsl
mov
mov
sub
inc
dec
js
add
xchg
sbb
push
les
sti
add
les
sub
aaa
pop
cmp
xchg
and
xchg
jb
ljmp
rcr
leave
sahf
leave
cmp
dec
push
adc
push
sbb
dec
push
pop
cmp
push
push
push
xor
jmp
gs
push
adc
jp
xor
movsb
pop
cs
addl
in
sbbl
cmpsl
ja
repz
idivb
ljmp
and
bound
pop
inc
ja
outsl
jns
adc
mov
inc
cmp
repz
scas
int3
or
xchg
jo
sub
or
mov
mov
sub
adc
inc
lock
jae
and
or
out
leave
xor
test
sub
movsl
pop
adc
and
xchg
test
adc
mov
cmp
mov
ret
scas
jl
sbb
addb
pop
lds
jmp
inc
inc
push
jb
mov
andb
jae
out
test
fstpt
daa
cmp
xor
hlt
sbb
push
sbb
mov
sbb
out
cmp
out
fcmovnb
data16
fcoms
icebp
test
mov
gs
mov
add
ds
stos
xlat
xchg
scas
jne
mov
pop
mov
jecxz
cmp
dec
mov
scas
cmp
dec
adcl
lods
cmp
sbb
pusha
or
adc
sub
adc
push
ret
ljmp
mov
sub
repnz
jbe
mov
cmp
cmpsl
mov
xchg
cmp
jbe
mov
insb
adc
daa
xor
mov
sub
jp
pop
xchg
pop
hlt
sub
jbe
push
and
mov
and
xchg
mov
cld
out
addr16
cmp
movsl
push
negl
inc
mov
fsubs
ss
push
test
in
xchg
cmp
mov
and
push
xchg
jmp
jecxz
xchg
mov
or
mov
push
dec
xchg
int
test
enter
sbb
cwtl
jb
xchg
jb
push
jp
icebp
lret
inc
call
adc
fdiv
pop
cli
movsl
scas
sub
imul
arpl
dec
lods
mov
mov
xchg
insl
sub
sahf
je
mov
pusha
sarb
add
sbb
out
sbb
rcrb
mov
pop
sbb
jge
fninit
push
arpl
or
pop
les
push
dec
xor
mov
pop
imul
inc
test
int
cs
in
xor
stc
jne
adc
adc
adc
stc
mov
ret
lret
jnp
incb
negb
push
add
adc
lds
lods
into
addr16
pop
pop
fsubs
out
js
loopne
cmp
lcall
nop
pop
cmpsb
outsl
mov
push
dec
push
cld
cmp
andl
lock
bound
sub
cmc
cld
or
cmp
lea
sbbb
adc
aaa
in
ja
ja
dec
sbb
cld
sbb
inc
and
or
pushf
in
adcl
xor
push
mov
inc
mov
inc
push
fwait
out
xor
gs
mov
fsubrl
pop
sbb
push
lods
xchg
sbb
icebp
in
insl
inc
jmp
lods
add
push
push
mov
mov
xor
repz
jo
lret
out
lcall
incb
pushf
jl
test
push
and
movsl
push
pop
addr16
lret
adc
mov
xor
mov
push
js
cmp
faddl
or
aas
push
popf
arpl
movsl
into
dec
sbb
sbb
dec
add
movsl
jmp
jmp
inc
sti
out
xchg
push
dec
mov
arpl
popa
mov
div
dec
dec
mov
addl
ret
test
rclb
mov
mov
adc
cltd
popf
pop
iret
rolb
push
push
cs
mov
jl
inc
outsb
adc
cs
aam
test
adc
mov
fisttpl
xor
cmp
jns
sub
xor
mov
movsl
inc
sub
movsb
xchg
xchg
adc
pop
dec
dec
mov
daa
jg
lock
outsb
out
xchg
mov
lret
icebp
ret
push
xchg
leave
in
loop
movsl
sbb
jbe
jo
in
cwtl
fadd
push
addr16
mov
repnz
addl
sar
les
out
jle
or
xor
sbb
inc
or
adc
aam
or
pop
enter
cmpsl
out
inc
mov
loope
pop
cmp
in
leave
movb
clc
push
rolb
rol
scas
inc
cltd
mov
insl
jne
imul
shl
sub
jge
movsl
push
or
mov
aas
mov
adc
shll
or
dec
inc
in
std
lret
push
divl
sbb
inc
testb
jle
repz
xchg
mov
out
cmpsb
jns
aaa
loop
mov
mov
jg
pop
pop
adc
aad
adc
je
add
sub
iret
test
jbe
xchg
or
movsb
bound
xor
dec
sub
adc
mov
in
lods
xchg
push
push
test
rol
mov
jnp
dec
sbb
adc
or
cmp
push
lods
xchg
jns
xor
pop
les
cmc
push
cwtl
xchg
adc
inc
xchg
bnd
pusha
xchg
inc
xchg
rcll
mov
and
mov
jl
cli
cmp
sub
dec
mov
xchg
clc
add
repnz
aaa
idivb
mov
push
aam
and
adc
mov
pop
xorl
lods
adc
mov
shlb
pop
mov
push
insb
dec
data16
in
lret
xor
nop
xchg
pusha
nop
dec
xor
inc
pop
sbb
dec
pop
sbb
mov
xchg
inc
pushf
stc
imul
sahf
data16
dec
mov
lds
mov
iret
xor
repz
mov
out
mov
pop
sub
sub
and
andl
subl
add
xor
xchg
or
add
fs
jp
cmp
in
mov
sub
add
js
sar
xor
aaa
fiadds
sub
ja
outsb
ret
pop
je
sbb
jb
fimuls
lret
shrl
lret
out
mov
sub
fwait
aam
cmpl
mov
out
mov
cmpsb
pop
loopne
sahf
xchg
jae
xchg
mov
orb
dec
sbb
into
cmc
lcall
mov
loop
int
ljmp
push
sbb
mov
ja
jb
test
fs
xchg
fstpt
das
adc
dec
jae
lods
cmpsl
icebp
dec
dec
push
testb
iret
or
arpl
push
adc
mov
imul
mov
es
jnp
scas
cmc
jo
subb
pop
xchg
imul
jbe
les
mov
rcll
outsb
dec
xchg
and
pop
dec
or
xchg
fnstenv
lods
pop
mov
idiv
mov
hlt
push
cmp
movsl
inc
or
out
sub
out
adc
cltd
mov
shlb
fldenv
sbbl
cli
push
and
adc
push
pushf
adc
or
aad
fcomps
nop
mov
stos
stc
and
fnstsw
rcll
out
jb
cmc
cmpsb
pop
xor
add
pop
cmp
xchg
cmp
pop
mov
call
mov
les
clc
xlat
jnp
mov
sub
cwtl
adc
and
mov
mov
subb
scas
scas
pusha
pop
mov
dec
gs
out
mov
data16
icebp
mov
mov
jg
arpl
jne
test
test
sub
mov
into
cltd
xchg
cmp
sbb
inc
xchg
sbb
jns
les
jnp
repz
hlt
add
sbb
imul
pop
lret
mov
jge
sbb
int3
je
aad
ret
inc
mov
popa
xor
clc
xchg
mov
ret
xor
sub
xchg
scas
lcall
gs
xlat
scas
pop
aam
je
or
leave
inc
mov
jl
sti
mov
xchg
lock
movsb
fbstp
xchg
mov
pop
fidivrs
ret
xchg
ret
es
jg
out
ficoml
pop
xchg
adc
xor
jge
or
pop
lahf
mov
adc
mov
pop
pushf
int3
or
roll
add
cmpsl
or
inc
cmp
dec
pandn
scas
shlb
je
cmpsl
loop
or
adc
add
js
inc
mov
xlat
inc
decb
push
sbb
mov
push
dec
fwait
and
mov
add
test
cmpsb
xor
jnp
xor
in
inc
fldlg2
inc
xor
ficomps
jno
lock
and
and
xor
pop
jnp
dec
cmc
stos
dec
movsb
std
leave
inc
mov
mov
xchg
mov
add
int3
ss
mov
xchg
pop
divl
xchg
adc
shlb
pop
nop
popf
mov
mov
jae
xchg
mov
ss
xor
dec
test
jl
js
in
mov
sub
dec
pop
mov
dec
and
paddusb
push
push
cmpxchg
ret
push
int
aas
int
cld
test
dec
inc
jbe
mov
sbb
or
and
es
mov
fisttps
mov
sub
cmp
mov
sarl
cmp
hlt
xchg
loope
or
sub
dec
in
aas
add
inc
fnsave
jae
pop
neg
sahf
test
add
je
movsl
jmp
scas
repz
sub
mov
fbstp
inc
sub
int3
out
push
cs
sbb
stos
push
je
sub
aas
add
lods
outsl
xchg
into
in
or
pop
mov
pop
int3
and
iret
xchg
jbe
fs
fwait
loopne
in
pop
pop
xchg
dec
jns
int3
mov
cmp
or
sub
out
inc
mov
stc
adc
pushf
movsl
mov
loope
fs
sbb
incl
fsubrl
jno
cmp
and
xchg
cwtl
cmpsl
lcall
xchg
jle
mov
and
pushf
stos
sbb
sbb
xchg
adc
ljmp
hlt
lea
out
push
scas
mov
stc
mov
stos
rorl
out
add
adc
sti
clc
icebp
mov
dec
push
adc
sbb
inc
pushl
xor
adc
jbe
pop
aam
mov
in
mov
in
and
leave
add
jmp
pop
lahf
test
dec
xorl
bound
out
shl
pop
scas
pop
pop
repz
jge
jo
repnz
jne
adc
imul
and
ljmp
xchg
cwtl
out
add
or
sub
out
or
testl
lret
ss
test
roll
xor
xchg
testl
fidivrl
push
movsl
mov
jmp
xor
shll
pop
xchg
lret
ss
test
pop
cs
xor
pop
sbbl
push
nop
shl
dec
jle
inc
mov
dec
push
mov
pmulhw
jp
in
mov
shrb
dec
pop
dec
xchg
cmp
or
aas
inc
fildl
pop
out
stc
push
pop
jge
xor
sbbb
pop
sbb
scas
inc
add
jp
xor
xchg
pop
ds
sub
movsb
xlat
aam
lds
ds
and
mov
inc
jmp
adc
adc
cmp
insb
and
mov
fadd
dec
enter
shrb
movsb
adc
cli
gs
repnz
fisttps
loop
in
ret
adc
in
outsb
ja
inc
and
fistps
je
test
aad
xor
nop
sub
lds
xlat
sub
dec
cmp
sbb
lock
dec
rorl
sbb
adc
popf
fmul
xor
sbb
daa
dec
cmp
sub
dec
and
dec
je
cmpsl
jle
dec
jae
popf
fistl
cmpsb
cmp
lcall
ss
sbb
sbb
mov
sub
push
xchg
mov
lods
repnz
adc
sti
sub
inc
popf
xor
ret
in
jo
pusha
aad
dec
xchg
and
enter
call
mov
jb
xor
int
in
jmp
pop
jl
movsb
push
push
push
clc
push
cmpsl
pop
arpl
enter
sahf
jbe
test
data16
aas
insl
mov
dec
mov
aam
stos
inc
inc
scas
mov
into
push
and
mov
test
jl
stos
dec
cmp
jae
push
fsubrp
dec
mov
cli
pop
inc
or
xor
mov
repz
mov
enter
shrd
fs
test
mov
add
ds
and
aas
and
cmp
mov
ds
movsb
mov
fadd
xchg
lods
ds
outsl
test
xchg
mov
ret
add
loopne
cmc
jb
nop
sub
jge
sub
mov
ja
push
xchg
test
sbb
inc
fists
cmp
sub
dec
outsl
clc
ja
decl
adc
lods
lea
hlt
pop
xor
cmp
dec
test
dec
iret
in
xchg
mov
stos
addr16
pop
invd
shrl
aaa
sbb
adc
mov
add
sbb
lods
mov
push
xchg
jp
jmp
xor
or
sub
enter
mov
je
push
dec
aad
or
fwait
xchg
aam
dec
add
lcall
fiaddl
enter
imul
push
push
incl
rcr
add
lods
mov
arpl
movsb
inc
push
mov
nop
push
ret
pop
in
sbb
cmp
aaa
jecxz
xor
scas
inc
lcall
fsubr
ss
xchg
insb
insb
xchg
bound
xchg
test
push
push
pusha
xor
jo
in
xchg
pop
leave
faddl
adc
outsl
aas
xchg
or
cmp
add
test
aas
pop
pop
xorl
fwait
dec
pop
fcomps
cmp
jbe
push
pop
cmp
in
shl
aas
add
push
aam
jg
popa
cmp
jns
int
jae
mov
or
mov
sub
jmp
mov
and
dec
sahf
aaa
sub
inc
and
mov
xchg
xlat
xchg
fstpl
fidivrl
sub
dec
fcoml
faddl
push
sub
lcall
fucomip
add
inc
test
mov
jg
jl
or
pop
push
jl
es
mov
pusha
inc
icebp
xchg
adc
cmp
movsl
rolb
push
inc
push
add
mov
cli
ja
lds
sbb
stos
add
scas
stc
aad
inc
mov
insl
pop
scas
jbe
inc
xor
jmp
cwtl
xchg
xchg
pop
js
out
insb
jmp
repz
pop
das
xor
jnp
adc
ljmp
mov
aam
or
bound
shl
fiadds
push
mov
out
xchg
sbb
ret
stos
xor
adc
jp
xchg
jne
jg
ss
sbb
dec
mov
sbb
push
cmc
loopne
daa
jmp
add
mov
xchg
push
pop
iret
inc
imul
pop
faddl
dec
cmpsl
setae
cmp
jne
mov
mov
sbb
scas
out
mov
cltd
dec
xlat
gs
xchg
dec
lcallw
cmp
dec
repnz
inc
cmpsl
jne
mov
push
stos
pusha
and
and
push
dec
cltd
add
cmp
aad
inc
xchg
mov
scas
jnp
dec
test
outsb
mov
in
stos
dec
xchg
and
inc
push
push
add
aad
out
out
shll
mov
out
incl
mov
or
dec
jo
stos
xlat
sub
in
pushf
fimuls
sbb
jo
imul
cmpsb
adc
mov
lock
mov
mov
push
test
scas
mov
xor
pop
sarb
cmp
dec
push
sub
mov
jbe
mov
and
dec
mov
and
sbbb
call
stos
pop
xlat
lret
push
inc
sti
into
mov
faddl
pop
and
pop
ja
pop
jno
jb
out
xor
dec
add
cmpsb
das
lds
call
ljmp
ret
xlat
push
pop
inc
and
lock
adc
sub
repz
dec
inc
sbb
jl
mov
test
sbb
into
aas
add
fbstp
cmc
lods
bound
sbb
out
insl
mov
fisttpl
pusha
roll
push
adc
call
adc
repz
pushf
jnp
inc
pop
pop
push
mov
sub
aam
xchg
cmpsb
sti
je
and
xchg
sti
enter
daa
flds
rorb
jg
mov
xchg
lods
push
jne
or
movb
outsl
rcrb
jbe
jmp
testb
stc
mov
mov
or
pop
cmpsb
lcall
pop
test
mov
inc
mov
je
rolb
out
cmp
repnz
pop
cmp
and
sbb
or
std
or
movb
repnz
pop
jp
mov
std
sub
mov
sub
aas
xor
cmpsb
pop
dec
loope
test
imul
and
loope
imul
sbb
filds
add
sub
dec
pop
scas
or
adc
testl
add
xchg
pop
cwtl
fidivs
nop
fwait
or
dec
sbb
push
cmp
cvtps2pd
mov
mov
xchg
or
js
mov
add
jno
sub
lcall
fxch
pop
or
lret
subb
icebp
shrb
dec
or
ror
mov
xchg
jnp
call
mov
mov
add
imul
mov
xor
cmp
mov
lret
aad
sbb
sub
leave
call
stos
insl
mov
or
xchg
mov
pop
test
testb
inc
enter
dec
mov
cmp
stc
and
dec
dec
cmp
or
rcrb
into
test
push
andl
call
inc
addr16
ret
adc
mov
jmp
xchg
xchg
adc
out
and
out
mov
push
adc
arpl
shll
aad
ficompl
add
ljmp
pop
sub
incb
ss
mov
mov
scas
fstpt
in
fldt
push
inc
xchg
mov
cmp
cltd
sub
xor
xor
ds
xor
mov
xor
lahf
jno
cwtl
sbb
mov
clc
mov
sbb
in
pop
ja
mov
xchg
dec
les
std
mov
mov
repnz
mov
insl
jge
sub
fistpll
outsb
sbb
loopne
adc
int
adc
sub
sbb
clc
jb
xlat
ss
mov
inc
cltd
dec
stos
mov
outsb
inc
std
scas
dec
test
mov
mov
test
jo
add
pop
jae
lods
add
xchg
std
jo
out
xor
add
stos
xor
pop
pop
mov
or
sbbb
call
inc
mov
xlat
test
hlt
bswap
sub
jno
roll
fidivl
mov
fs
test
cld
jle
scas
lock
dec
mov
in
push
shrl
out
std
push
ja
adc
je
push
adc
mov
test
inc
mov
or
sub
sub
sub
pop
or
call
mov
dec
addl
imul
das
test
test
lcall
add
jne
mov
xchg
inc
jg
push
call
ret
push
mov
push
dec
or
cmpsl
jmp
add
movsb
idivb
jl
neg
jge
mov
jg
dec
repnz
push
sbb
fcmovnu
shlb
int
adc
or
repz
loop
icebp
lock
and
xchg
sar
cmpsb
sarb
xorb
gs
mov
mov
mov
insl
ret
mov
and
in
repnz
mov
test
dec
pushf
mov
insb
imul
lret
dec
dec
outsb
sub
cld
pop
jnp
out
mov
mov
dec
jne
dec
inc
push
subl
fsubrs
pop
sbb
pop
jnp
jecxz
das
cwtl
out
incl
add
sahf
xor
or
adc
les
mov
inc
and
mov
adc
lahf
or
dec
pop
cld
sbb
and
xchg
fimull
dec
pop
clc
bound
leave
std
adc
jg
ja
pop
cmp
test
and
sub
push
sbb
mov
outsb
fisubs
faddl
xchg
xchg
xor
sbb
rclb
cmp
pusha
xor
inc
dec
sbb
push
push
adc
sub
fistl
jne
cmpsl
xchg
xor
dec
xchg
and
in
mov
lods
inc
jmp
fbstp
mov
stc
leave
push
cmp
jmp
dec
sbb
mov
jno
mov
lcall
aam
in
out
ret
adc
lock
in
and
xor
shrb
jmp
dec
sub
mov
cmpsl
cmpb
nop
fistpl
roll
lods
add
pop
jb
cmpsl
mov
nop
cmp
mov
cmpsl
sub
out
not
cmp
ljmp
in
mov
lods
mov
xchg
push
inc
in
pushf
sbb
imul
inc
je
fnstcw
lds
nop
cmc
test
cmpsb
enter
mov
arpl
sbb
sti
sub
add
inc
aas
ja
nop
mov
outsl
pop
lea
icebp
scas
and
sbb
std
sti
add
and
in
out
xchg
in
xorl
mov
mov
fmuls
xchg
cwtl
or
fwait
xchg
push
push
xchg
mov
out
jnp
inc
xchg
jle
adc
mov
add
dec
and
add
inc
add
inc
add
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
mov
sub
int
bound
popa
push
notl
mov
out
add
out
mov
jmp
xchg
popa
data16
fildll
xchg
shl
xchg
gs
mov
or
jp
or
loope
outsl
lret
mov
insb
mov
jne
mov
inc
addl
cwtl
pushf
mov
ja
cmpsl
and
cmp
sub
roll
cmc
cld
pop
ja
aam
in
sbb
sub
enter
xor
cmp
cmc
js
fs
js
rcl
add
cld
mov
inc
push
or
rorl
fwait
sub
pop
push
test
fs
out
popf
push
out
outsl
mov
stos
iret
xor
push
mov
xchg
cmp
jle
push
push
out
shlb
movsl
or
rcrb
in
roll
imul
mov
cmpsl
fcoms
add
data16
cld
pop
iret
mov
pop
or
jno
jg
cmp
into
mov
insb
mov
test
ss
out
hlt
xor
divb
cmp
inc
pop
int
add
out
ja
mov
xchg
out
hlt
dec
mov
mov
lea
cmpsb
and
mov
mov
inc
scas
xor
sub
leave
gs
mov
fs
cld
rcr
pop
mov
and
cwtl
mov
ret
ret
lret
addl
jecxz
push
add
cmp
in
enter
rcr
jecxz
mov
cli
lea
cmp
adc
jae
pop
aaa
fildll
mov
cmp
leave
or
and
xor
into
xlat
lret
xchg
mov
jns
mov
xor
nop
cmp
and
nop
pop
lods
in
mov
lcall
push
loop
movsb
pop
icebp
sbb
loop
mov
imul
movsl
jmp
mov
icebp
xchg
mov
sbb
out
aas
adc
mov
or
pushw
arpl
xlat
roll
jne
pop
test
cmpb
push
icebp
aaa
pop
cmpsb
sti
cli
arpl
inc
in
scas
sbb
and
dec
test
xchg
sbb
mov
ficompl
mov
testl
mov
sub
lret
and
dec
xchg
push
push
out
js
mov
cmp
loop
mov
sbb
mov
enter
rcr
mov
fmuls
jns
movsl
xchg
sub
pop
and
pop
add
pop
js
push
stc
or
cwtl
ljmp
mov
fcmovb
pop
xchg
sbbb
add
out
shrl
stc
rcr
xchg
ret
outsl
das
xor
call
scas
xchg
fwait
jae
les
sbb
add
lea
std
dec
push
push
cmp
pop
xchg
mov
lret
push
into
movsb
inc
xchg
fsts
lret
ret
inc
xor
fcmovnu
sub
mov
mov
gs
or
mov
out
mov
and
jb
xor
imul
sub
ss
popl
cmpsb
and
int
popa
imul
cmpsl
fwait
loope
sarb
cmovns
loop
stos
jg
in
push
jp
insb
pushf
pop
pop
xchg
pop
mov
mov
into
sub
fstl
test
icebp
push
add
negl
pop
call
icebp
fmulp
adc
xorb
mov
pop
mov
push
loopne
movsl
pop
pushf
fisubrl
adc
inc
mov
fists
mov
int3
testb
dec
cmp
gs
mov
imull
test
pushf
sbb
outsl
ljmp
sub
cli
nop
mov
inc
out
add
xchg
and
xor
cmp
or
xor
mov
into
add
out
mov
add
shrb
or
push
add
rcrl
jnp
cmp
push
mov
pop
lods
push
loope
push
andl
les
lcall
xchg
xlat
sbb
fisubs
mull
clc
hlt
mov
xor
int3
lahf
sub
gs
jg
xchg
into
cmp
out
cltd
in
cs
add
xchg
inc
fwait
cmp
ss
jle
mov
cmp
pusha
lret
in
sti
int
push
adc
push
push
outsl
fwait
shr
sub
loope
adc
add
mov
faddl
jmp
sbb
cmpsb
dec
adc
or
adc
or
jbe
or
int3
push
or
pop
icebp
imul
jg
pusha
aam
push
into
add
adcl
je
jnp
sbb
xchg
jecxz
cli
pop
in
push
dec
sahf
and
xor
mov
mov
pop
shll
xor
xchg
sub
sbb
mov
pop
shll
push
xor
negl
psubq
mov
sub
adc
scas
pop
lods
mov
sarb
cmpsb
mov
mov
mov
xor
out
out
inc
add
pop
adc
call
lcall
or
es
push
outsb
push
arpl
xchg
mov
push
mov
movsl
mov
pop
fstl
shl
int
lcall
bound
movsb
das
or
or
aas
mov
pushf
clc
cli
pop
xchg
pop
dec
stc
icebp
pop
lods
cli
jecxz
jno
jb
rclb
hlt
dec
sbb
pushf
xchg
popf
fs
mov
mov
dec
loopne
lahf
lret
into
dec
icebp
jno
loop
add
js
cmp
out
and
xchg
out
sbb
es
int3
jl
sbb
xchg
cmp
mov
imulb
shlb
dec
xchg
xor
test
scas
mov
jae
ja
incb
pop
daa
mov
sti
lahf
push
out
mov
inc
and
pop
mov
add
push
cmpsl
mov
cwtl
mov
sti
nop
fs
popf
faddl
xchg
loope
leave
div
ljmp
pop
scas
sbb
xchg
mov
pop
es
shll
jae
add
into
mov
mov
in
xor
mov
call
popa
movsb
xchg
jg
xchg
dec
out
in
push
scas
sti
popf
movsl
cmc
xchg
xchg
pushf
das
inc
jbe
jmp
sub
mov
xchg
dec
icebp
cmp
push
out
lcall
inc
loope
fbld
xchg
inc
sbb
sbb
cli
into
inc
push
icebp
inc
pop
push
rcr
mov
and
cli
shl
inc
sub
repz
push
cmpsl
or
inc
jg
xor
sub
or
push
mov
pop
rol
jmp
push
or
mov
push
daa
ret
inc
std
in
pop
push
push
das
sbb
lret
test
xor
mov
mov
jg
inc
push
outsb
mov
imul
xchg
test
fistpll
movsb
pop
adc
cmp
jb
in
call
ljmp
push
stos
fnstcw
leave
pusha
insl
test
aad
add
mov
pop
mov
cltd
frstpm(287
inc
pop
daa
and
inc
addb
jno
pop
pop
xchg
clc
xchg
fisubl
das
lock
or
fdivr
movl
adcl
cs
lcall
icebp
mov
pop
sub
into
jg
lock
aas
xlat
loopne
fcomip
insb
dec
ss
or
adc
cld
sbbb
mov
cs
insl
ds
mov
push
rcll
out
addr16
imul
or
xchg
into
pop
ss
loop
popa
fmuls
fsts
mov
and
sub
loop
out
jge
mov
push
push
es
repnz
cmp
ds
fs
inc
xchg
mov
and
xor
pop
fwait
int3
fdivl
clc
pop
add
jae
mov
push
adc
and
hlt
sub
mov
hlt
out
fdiv
xor
out
xchg
dec
repz
pop
js
jg
test
jg
aad
lcall
lret
mov
int
rcrb
xor
outsl
mov
shl
fstpl
aas
mull
xor
pop
mov
xchg
arpl
inc
lret
lods
jno
sub
out
sub
jbe
jge
movsb
xchg
adc
mov
cmp
mov
pop
shll
pop
out
inc
push
stos
lods
insl
and
test
movsb
lock
jp
idivb
xor
mov
lods
arpl
and
cmc
popf
sub
inc
enter
jo
or
sbb
js
sti
scas
int3
insl
push
cwtl
fld
imull
xor
push
push
lock
dec
mov
repnz
adc
imul
mov
movsb
aad
shll
cmp
mov
fwait
das
or
ret
inc
arpl
int
xor
loop
int3
jnp
mov
insl
data16
push
mov
adc
je
test
inc
outsb
fstpl
push
scas
jo
cmpsb
cmp
xor
jge
ds
out
inc
dec
mov
outsl
add
mov
mov
mov
leave
xchg
sbb
pusha
iret
dec
cmc
rcr
pop
push
xor
xchg
clc
or
adc
cld
or
cmpsl
mov
or
loop
sahf
jae
pop
xlat
xor
rcl
das
jge
cmpb
xor
gs
pop
fcoml
add
loopne
pop
aas
in
xchg
xor
fnstsw
les
cmc
in
out
sub
and
insl
mov
lods
test
ficompl
ljmp
pop
xchg
pop
ljmp
ja
mov
or
cs
jo
and
mov
imul
orb
adc
inc
sub
mov
aam
pop
mov
lcall
int3
ss
ret
je
divb
sarb
cmp
incl
inc
jne
test
mov
add
notb
ljmp
loopne
cmp
add
xchg
test
xor
mov
or
inc
popf
sub
xor
es
xor
cmp
insb
jo
jl
cmc
mov
fnsave
andb
cld
mov
fiaddl
pushf
push
adc
pop
pushl
cmp
int3
pop
repnz
mov
mov
adc
inc
in
sbb
cld
js
mov
mov
fxam
mov
imul
adc
dec
call
clc
outsl
add
mull
lods
fsub
or
mov
aaa
iret
mov
pop
lods
dec
mov
in
subb
mov
out
call
inc
push
cmc
arpl
dec
arpl
xor
xor
repz
test
lea
mov
xor
das
cmp
adc
push
push
jle
jns
xchg
divl
out
pop
add
movsl
mov
and
mov
ljmp
enter
inc
pop
mov
mov
rorb
enter
lcall
adc
in
insb
insl
cmp
in
push
cmp
xor
daa
xchg
loope
mov
popa
je
rorb
push
pop
jnp
in
roll
xchg
loopne
xchg
lahf
or
mov
and
xor
xchg
cmpb
int3
push
ja
divb
push
jge
pop
loope
stc
lret
lods
daa
sbb
cmp
mov
sbb
xorb
push
ret
cmp
cli
cmp
ja
jns
scas
or
insb
push
jle
pop
pop
lahf
call
loop
pop
sub
sub
movsb
cli
cmpsb
pop
js
int3
out
or
jg
dec
push
push
xor
shll
mov
sahf
or
add
xchg
mov
pop
aaa
fisubl
pop
jns
sub
sbb
dec
ljmp
inc
push
mov
xchg
add
popf
adc
sub
jns
int
sub
inc
hlt
adc
mov
mov
xor
add
push
sub
jge
and
ret
aaa
push
aad
xchg
je
int3
outsb
into
loope
scas
shlb
push
sbb
sub
sub
rcll
addr16
outsl
push
mov
cltd
or
mov
lock
mov
or
jae
les
xor
out
fwait
jb
gs
dec
sub
mov
std
fmul
xor
stos
enter
shll
popa
iret
ja
test
pop
movsl
popa
mov
push
dec
cld
leave
pop
rorb
sub
outsb
sub
push
pop
adc
stos
mov
add
jg
add
push
stos
and
cmpsl
mov
ds
cmp
rorb
adc
and
rcr
jnp
inc
fcmovnu
rcr
inc
push
dec
mov
add
insb
lea
sahf
imul
in
mov
and
stos
xor
xlat
add
cwtl
sbb
cmpsb
adc
xor
xchg
push
inc
leave
into
mov
int3
scas
fnstsw
push
dec
es
jl
add
jp
mov
lret
ror
test
jbe
cmpsl
xor
mov
inc
movsl
cmp
sub
dec
sub
xchg
and
outsb
mov
into
enter
adc
lcall
iret
push
jecxz
mov
cmp
mov
sar
and
addr16
dec
inc
adc
mov
test
imul
inc
xor
jmp
push
adc
gs
sbb
stos
cltd
add
lods
sbb
outsb
int3
mov
jne
shrb
jl
shl
xlat
popa
lahf
out
movsb
mov
sbb
inc
xchg
cmp
ds
outsb
pusha
push
pop
popa
inc
ds
mov
pushf
xor
mov
and
flds
daa
ja
daa
xchg
pop
out
lea
rcll
mov
or
sub
and
pop
mov
xor
pop
lds
pop
cmpsl
pop
aas
mov
xchg
sti
insb
push
ja
adc
dec
sbb
scas
mov
sub
xchg
xor
mul
scas
js
in
stos
fcoms
rolb
pop
push
pop
js
ficoml
std
xchg
lea
gs
aad
pop
push
insb
xor
sub
fstpl
mov
add
cld
sub
in
cmp
inc
sbb
xchg
test
adc
std
pop
cmp
out
xor
cmpsb
lock
sub
out
dec
insb
mov
push
xchg
rolb
loopne
repz
outsl
cmp
repnz
mov
lcall
push
int
mov
leave
pop
push
daa
cli
xchg
adc
iret
pop
push
cmp
sbb
repz
mov
pop
and
or
stos
test
pop
jo
repnz
fdivrl
mov
push
sub
sub
enter
lds
push
stc
push
pushf
inc
in
addl
add
in
imul
out
test
mov
xchg
out
jne
test
dec
cld
hlt
sub
mov
jns
sub
push
lock
mov
inc
addr16
push
rcr
pop
sub
lods
or
das
sub
dec
aad
sub
xchg
xlat
shrb
cmpl
cmpsl
add
xor
cmp
out
jbe
lods
adc
addb
sarb
cwtl
cmp
movsb
mov
ret
push
cmp
bound
add
mov
das
out
dec
add
cld
jmp
outsl
loope
and
sub
in
imul
inc
add
sub
bound
jo
xor
repnz
pop
lods
add
mov
dec
shl
pop
push
xchg
xor
ss
into
jb
mov
sub
ret
scas
jb
inc
cmp
rdpmc
sti
or
and
in
mov
pushf
add
xchg
iret
test
push
adc
adc
and
sbb
mov
xchg
push
sub
adc
loope
fdivr
in
xor
jnp
lds
lahf
in
out
and
loopne
cmpsb
bound
je
and
fcoml
add
adc
jb
jb
nop
inc
mov
or
pop
add
mov
int3
and
jg
aad
cmp
fdivr
cmp
stc
movsl
out
or
lret
adc
ret
jg
stos
fwait
cli
imul
jbe
dec
add
fimuls
in
mov
call
fidivrl
imul
mov
stos
mov
mov
jp
fdivrp
fdiv
es
bound
pop
divl
out
dec
mov
add
push
sbb
cmp
adc
mov
xchg
rcrb
cld
jno
inc
adc
adc
sub
test
stos
sub
push
shll
sub
push
pop
push
and
insb
aaa
test
pop
ss
xchg
das
mov
mov
int
loope
fs
cmp
push
and
shlb
test
add
mov
out
jl
stos
mov
gs
jno
fdivs
xor
subb
cmpsl
adc
rcr
les
mov
pop
xor
xchg
ja
adc
shr
push
lods
cmpsl
mov
mov
rorl
lea
test
pop
sarb
ds
or
ret
sbb
ljmp
loopne
sbbl
cli
pop
outsb
dec
push
jne
aaa
int
mov
jb
mov
add
sub
dec
and
xlat
push
mov
add
fidivrs
sbb
cmp
je
les
loope
insb
inc
mov
call
in
push
xor
rorw
subb
clc
or
or
incb
xor
out
inc
psraw
mov
movntq
inc
inc
sbb
sub
js
dec
faddp
je
out
pop
mov
insb
sub
and
test
dec
dec
leave
adc
xchg
out
movsl
mov
xor
pop
out
dec
mov
dec
xor
fisttpll
gs
inc
outsb
sbb
cmp
dec
out
call
xchg
jbe
mov
mov
jno
jnp
movsl
jae
les
call
mov
pop
adc
das
jnp
inc
pop
imulb
lahf
mov
inc
mov
lret
out
imul
movsb
xchg
call
inc
rorb
fsubl
sub
adc
jp
stos
out
dec
cmpsb
push
scas
jb
xchg
xchg
out
aam
in
xor
push
in
inc
stos
pop
data16
xchg
and
and
icebp
mov
scas
pop
xchg
and
pusha
cmp
test
or
mov
push
stos
das
arpl
xchg
jo
daa
shlb
xchg
pushl
in
push
push
sbb
dec
mov
test
lea
push
xor
outsb
push
sbb
ret
cmp
mov
lods
fiadds
sbb
pop
mov
or
push
aam
addl
pop
popf
push
movsb
sbb
and
xchg
sbb
or
sti
outsl
push
pop
xchg
movsl
jne
imul
pop
mov
jns
pushl
rol
insb
lods
stos
popa
sbb
arpl
int3
inc
xchg
sbb
mov
pop
cmp
loope
call
adc
out
cwtl
inc
sub
mov
push
mov
nop
lock
cli
and
sub
stos
adc
and
data16
or
lods
mov
insl
and
ret
jae
popf
pop
dec
pop
leave
shr
gs
sub
xor
int3
mov
pop
sbb
push
mov
ss
fcompl
add
sub
push
or
ss
push
test
sbb
stc
mov
dec
repnz
add
jecxz
jl
jl
pop
jmp
push
xlat
mov
addb
ret
xchg
pop
or
push
movsb
and
lcall
and
jnp
loop
dec
push
arpl
in
xor
or
icebp
mov
add
cwtl
imul
out
xchg
or
ret
xchg
loope
sub
mov
fwait
lock
mov
cs
nop
pop
js
pop
arpl
mov
mov
sbb
sbb
xchg
push
xor
jmp
sbb
pop
movsl
push
out
xor
pop
scas
cli
loop
xchg
sub
dec
push
loope
pop
testl
aam
pop
pop
dec
orb
mov
jns
dec
and
pusha
fldcw
xchg
dec
loop
xchg
insl
jo
sbb
imul
sub
pushf
jmp
test
popa
icebp
int
ja
add
pop
stos
mov
mov
clc
xor
xchg
aaa
ljmp
sbb
inc
enter
sub
xor
mov
fnstcw
pop
cltd
lock
data16
adc
test
loop
or
int3
xchg
lcall
cmp
push
inc
pop
daa
inc
data16
test
pop
jge
mov
in
mov
add
loopne
pop
dec
push
push
loope
dec
add
xchg
xchg
mov
cli
mov
nop
jns
adc
js
popa
lret
add
in
shll
lret
push
lock
in
jbe
mov
fnsave
repz
daa
jb
es
stos
inc
pop
jno
pop
aaa
jg
mov
lds
cwtl
aas
shrb
pop
fldt
push
mov
pushf
data16
mov
xchg
adc
outsl
push
mov
fisubl
cs
mov
or
pop
dec
popf
movsl
jge
jmp
into
lods
retw
dec
movsl
adc
mov
arpl
dec
and
xchg
iret
fisubl
mov
mov
mov
pusha
jp
cmpsl
mov
sbbl
outsb
out
outsl
sbb
pop
xchg
sti
dec
ss
cmpsl
divb
lcall
out
adc
pop
cmp
jns
das
and
cmp
fwait
movsl
outsb
shll
sbb
sbb
xor
and
stos
cmp
push
stos
cli
push
inc
pusha
xchg
arpl
mov
mov
sar
aas
dec
addr16
and
sbb
js
lret
std
in
mov
add
cmpsb
sub
loope
out
shlb
and
pop
inc
lahf
filds
pop
jecxz
jbe
lds
adc
cmpsl
cltd
and
mov
jo
cmp
sbb
or
ret
ss
cmc
out
jno
testl
movsb
xor
mov
cmp
lret
shrl
imul
jge
jmp
out
xchg
xor
hlt
and
movsl
add
mov
mov
jle
mov
mov
cmp
xchg
mov
mov
fidivs
imul
leave
inc
aad
nop
adc
addl
sub
or
sti
jmp
imulb
mov
or
xor
hlt
cltd
inc
jecxz
adc
sub
push
adc
adc
icebp
push
xchg
in
or
nop
pop
pop
adc
jmp
jg
push
mov
mov
mov
jl
inc
inc
fldcw
xchg
adc
mov
adc
and
mov
fnstcw
nop
xorb
adc
pop
leave
bound
fiaddl
push
mov
cmpsl
sbb
divb
jl
insb
dec
popf
dec
lahf
stc
repnz
lods
mov
pop
pop
pcmpeqb
aad
jl
data16
sbb
out
push
jmp
imul
cmp
xchg
xchg
xorl
mov
call
clc
lods
xchg
xchg
das
pop
mov
pop
je
jg
and
add
and
mov
addl
pop
hlt
sti
scas
and
fsubr
jge
jnp
mov
daa
test
push
adc
fs
or
jecxz
xchg
ret
shrl
ret
roll
pop
jno
pop
sub
js
and
inc
cmp
std
fnsave
cmp
imul
jl
das
lock
sti
push
arpl
inc
js
cwtl
cmp
or
pop
mov
dec
cmpsb
mov
ljmp
mov
mov
loope
push
pcmpgtw
fwait
in
cmpsl
lea
and
xor
mov
inc
xor
lods
xchg
imul
jp
mov
push
loopne
ds
and
in
sahf
mov
cmp
mov
mov
mov
push
mov
outsl
les
mov
push
pop
insl
dec
sbb
fstl
inc
xor
mov
sarb
cmc
sub
cwtl
push
std
jns
enter
mov
fsubrl
add
xor
and
mov
repz
cmc
dec
out
popa
jbe
in
push
xchg
xlat
inc
insl
jg
inc
mov
push
jo
test
subl
mov
cmp
cld
push
fsubrl
mov
je
sub
fbstp
iret
test
sub
or
lret
add
cmp
mov
sub
cmp
adc
jne
imul
pop
pop
mov
mov
add
hlt
adc
push
outsb
movsb
xchg
dec
pop
cmp
jmp
lea
ja
dec
hlt
inc
orl
pop
loope
mov
jle
shrb
js
pop
out
cwtl
out
xor
out
lods
in
mov
pop
popf
in
cmp
mov
les
cmp
or
push
lahf
pop
dec
mov
inc
loopne
lret
imul
nop
mov
daa
cmpsb
mov
test
into
sti
fdivs
push
inc
mov
in
movsb
sub
lahf
fiadds
and
cld
pop
int
hlt
xor
gs
mov
jecxz
in
add
push
dec
sub
mov
imul
cltd
insb
jmp
mov
fcomps
pusha
jle
and
ja
cmp
jns
ja
mov
clc
mov
repz
mov
sahf
cltd
into
js
loopne
pop
repnz
out
mov
mov
in
sub
int3
sub
inc
lods
addl
pop
iret
in
adc
jmp
pushf
jae
scas
jge
dec
xchg
jb
nop
dec
and
std
ja
sub
daa
inc
insl
add
scas
pop
sti
mov
adc
js
inc
lods
in
outsb
icebp
out
sbb
daa
rcl
shlb
push
inc
repnz
sub
xorl
cli
push
mov
cmp
ret
cld
cmpsl
xor
imul
cs
xchg
fildll
sbbl
cmp
mov
shrb
ds
int
cmc
inc
add
fmulp
adc
jmp
sbb
outsl
jg
pop
daa
movsb
push
push
pop
xor
iret
inc
dec
xchg
mov
iret
mov
jmp
push
jmp
mov
loopne
xor
mov
cmp
outsl
adc
cmpsb
js
mov
loop
and
push
inc
int3
loope
lock
inc
inc
repnz
adc
into
out
cs
jno
pop
pop
push
adc
stc
mov
cmpsb
scas
jno
std
into
cli
and
jae
xchg
fcmove
pop
popl
mov
jmp
sub
and
stos
mov
stos
es
jnp
mov
mov
das
in
push
data16
ret
inc
sbb
xchg
movsl
adc
mov
add
push
clc
mov
mov
and
xor
pop
push
fldcw
pop
mov
pushf
adc
testb
jb
jne
popf
mov
andl
cmc
adc
test
push
jge
call
cmpl
pop
scas
test
lahf
mov
lods
outsb
push
divps
dec
and
dec
fsubl
add
enter
push
lods
xchg
sbb
push
dec
or
xchg
movsb
cmc
jae
sbb
cmp
das
in
or
jge
jo
pop
jp
push
jle
pop
push
inc
jnp
scas
minps
jnp
cmc
or
ret
pop
dec
mov
ljmp
fsub
out
and
mov
sti
cmpsl
jno
inc
repz
cmpsb
sbb
add
jle
std
xorl
addr16
sbb
call
ds
data16
loope
inc
into
dec
je
lea
cwtl
negb
xor
shrl
addl
mov
aad
pop
dec
int
push
push
and
sbb
filds
es
ds
mov
mov
xlat
popf
test
call
stos
mov
add
xor
into
inc
pop
xchg
xchg
mov
fidivs
sbb
push
xor
or
pop
or
lds
shrb
je
shll
xchg
mov
std
mov
jnp
pop
lock
js
sbb
clc
mov
inc
pop
xchg
iret
push
cmp
iret
adcl
aam
scas
outsb
repz
mov
pop
lcall
push
xchg
sub
jb
addr16
cmc
xchg
xchg
testl
cli
inc
or
sub
lods
lret
fbld
repnz
sbb
push
stos
mov
adc
jge
loope
mov
sub
mov
cmpsl
ljmp
in
ljmp
jecxz
mov
and
in
jae
add
push
add
fistl
mov
xor
pop
nop
cmp
add
mov
mov
repz
cmpsl
and
xor
mov
call
jmp
mov
push
mov
push
sub
mov
xor
into
setge
outsb
xchg
pop
pushf
call
cmp
mov
fists
sbb
mov
cmp
scas
adc
jns
xor
out
xchg
imul
inc
dec
ja
mov
pop
fbstp
lods
fcomps
in
mov
xchg
sarb
or
pop
cmp
js
dec
inc
faddl
imul
xchg
cs
adc
scas
fs
stc
adc
adc
xor
in
and
push
addb
mull
roll
sbb
enter
xor
subl
sub
test
push
lret
xor
out
aad
xchg
gs
insl
xchg
bnd
in
xlat
cmp
mov
and
mov
mov
inc
inc
adc
sub
popa
mov
imul
ret
cmp
insl
xchg
jae
fadds
jmp
mov
mov
xor
test
pop
leave
mov
and
cmpsl
pop
mov
adc
cmp
inc
dec
aas
aam
imul
or
jmp
adc
jbe
mov
cmp
mov
inc
nop
add
jns
jne
mov
clc
arpl
xchg
or
outsb
jge
jo
cmp
sbb
cmpsl
or
and
icebp
out
and
in
scas
jnp
dec
addb
jg
int
addr16
cmp
push
ljmp
hlt
ret
ret
addl
std
jl
jg
shrl
fdivs
xchg
jmp
lods
or
push
mov
pop
or
cmp
jecxz
dec
push
andb
pushf
sub
popa
mov
pop
pop
jl
hlt
movsb
dec
cmp
or
mov
xor
dec
divb
xor
rcll
jecxz
rclb
scas
mov
fdiv
jecxz
mov
ret
clc
scas
in
pop
jo
and
dec
adcl
sub
int3
rolb
cmp
das
mov
enter
xchg
and
add
mov
or
inc
call
fsubrl
js
hlt
pop
push
push
test
sahf
mov
cmp
mov
mov
lret
ret
lds
adc
adc
rol
jle
xchg
xchg
decl
adc
outsb
push
pop
inc
adc
push
leave
loop
xchg
xchg
popf
add
or
call
scas
adc
jbe
xchg
cmp
outsb
jl
cmc
mov
std
cld
stos
mov
je
pushf
mov
pop
jle
mov
pop
sti
popa
into
mov
sub
jle
push
mov
pop
cmp
ljmp
mov
jo
fcmovnb
and
aaa
fcompl
fildl
stos
cmc
xlat
inc
gs
mov
pop
add
rcr
sbb
xchg
adc
int
xchg
inc
and
scas
jmp
adc
iret
push
int3
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
xlat
dec
add
int
bound
jno
lret
dec
int3
popa
adc
outsl
push
add
sbb
add
push
in
dec
xchg
in
lret
adc
jo
pop
xlat
lods
loop
push
cmc
enter
dec
pop
fs
sub
sub
les
int
ds
lret
or
inc
sbb
fisttpl
mov
mov
cmc
gs
xchg
xchg
xchg
sub
pushf
fwait
iret
sbb
and
inc
ja
mov
sub
addl
lcall
leave
or
icebp
data16
pop
jbe
out
dec
and
pop
repnz
scas
insl
push
in
daa
lret
stos
pusha
cwtl
cwtl
push
in
xchg
jae
xlat
jl
lret
mov
xchg
lret
ficoms
daa
out
enter
sbb
sub
mov
daa
enter
jbe
xor
jle
xchg
rcrl
dec
addb
adc
xchg
or
ds
push
mov
insb
mov
inc
shlb
jno
fcomps
lock
cli
mov
bound
fsubl
cmp
xchg
add
sub
adc
lock
jae
lea
jmp
popf
rcl
push
cld
mov
cmp
fucomi
adc
andb
std
push
rclb
mov
and
jo
fnstsw
xorb
lret
push
out
outsl
dec
and
mov
pop
xor
mov
xorl
inc
outsb
sub
in
jnp
add
push
imul
mov
fisubrl
mov
shr
aad
push
pop
add
and
insl
mov
fisubrs
fistps
popa
mov
push
xchg
jg
rclb
pop
btc
mov
mov
ljmp
aad
rorl
adc
mov
sbb
andb
mov
cmpsl
std
mov
push
ret
sub
dec
sbb
sbb
inc
or
sarb
shll
and
in
ja
cld
and
cmp
xor
fstpl
fmuls
cmpsl
dec
fsubrp
push
xor
xchg
gs
out
outsb
dec
push
sub
in
sbb
add
push
and
test
loop
xchg
xchg
xchg
mov
mov
sbb
mov
mov
and
daa
add
add
and
rcrl
pusha
add
push
inc
dec
in
add
cmp
cmc
add
jae
fisttpll
pop
lahf
cmp
lret
cld
xchg
add
int
dec
outsb
mov
cli
imul
inc
mov
push
pop
adc
jl
stos
push
popa
add
dec
xor
sbb
lcall
sarl
add
mov
dec
adc
loop
pop
scas
xlat
cmpsl
cld
fnsave
xlat
adc
adc
out
repnz
int
scas
fimuls
and
add
dec
sub
out
rorb
sub
add
mov
out
or
mov
sarb
mov
push
inc
and
lret
sub
negl
gs
rcl
inc
adc
int
jecxz
sbb
mov
outsb
rol
push
daa
mov
dec
push
sti
lret
xor
xor
jecxz
nop
pop
pop
in
insl
scas
and
inc
adc
fwait
jp
not
mov
cli
adc
out
in
cwtl
xchg
cmp
test
dec
repz
repz
dec
lds
test
cmp
dec
outsb
add
aaa
push
addr16
cmp
popa
jbe
and
and
inc
cld
jge
testb
pop
int3
and
in
dec
cs
mov
cmp
stos
inc
lcall
gs
xlat
out
pusha
add
setns
sbb
jns
rorl
mov
mov
inc
punpckldq
outsl
jbe
mov
and
xor
adc
sbb
fucom
mov
fisttpl
mov
in
cmpsb
sti
cmpb
and
stos
inc
in
hlt
mov
les
fcmovb
int3
jnp
stc
mov
pusha
mov
in
push
dec
scas
xchg
test
pop
stc
pop
aaa
or
push
sbb
fidivrs
push
pop
mov
cmp
pop
decb
mov
cltd
jnp
les
and
aas
imul
cli
sub
add
push
xchg
lret
icebp
adc
or
js
lock
fdivr
cmpsl
dec
inc
cltd
fildll
in
sub
sahf
mov
mov
jae
add
pop
xor
scas
notb
mov
imul
cmp
out
je
test
xor
lods
negb
pop
mov
lods
call
jmp
loope
mov
dec
cs
and
push
push
cmp
cmc
xor
and
pop
inc
sub
mov
add
pop
xor
inc
cs
dec
mov
ret
cli
sbb
icebp
inc
xchg
and
sbb
mulb
xchg
pop
xchg
out
leave
loopne
add
shrb
add
fcomps
cmp
xorb
xchg
sti
clc
mov
ret
dec
lcall
and
lds
popf
jb
inc
in
dec
mov
out
mull
bound
cld
test
mov
jp
stos
jnp
lret
push
xchg
fwait
push
lea
loop
imul
inc
cmp
jo
inc
add
aad
inc
xor
xor
inc
pop
or
push
ljmp
nop
cmp
push
popa
sahf
mov
or
dec
or
jo
pop
addr16
lahf
and
ja
add
pop
scas
push
mov
int
scas
bound
addb
aam
arpl
mov
scas
jbe
push
mov
out
stos
mov
cli
add
iret
or
push
loopne
fcompl
inc
icebp
pop
cmp
inc
scas
cmp
jg
push
dec
clc
popa
push
mov
cmpsl
stos
loope
hlt
imul
movsb
mov
lods
inc
mov
or
and
iret
sbb
push
jnp
repnz
adc
pop
mov
xor
cmp
dec
int
arpl
stos
movsb
or
inc
aas
add
inc
cmp
inc
orl
xchg
jnp
fs
fsubs
jne
std
leave
ss
push
mov
jp
mov
aas
in
add
add
pcmpeqw
adc
into
mov
jne
movsl
jp
ljmp
les
inc
setge
cmp
in
push
je
mov
ljmp
arpl
xor
cmpl
popa
xchg
jnp
stc
mov
call
shlb
dec
xorb
jae
paddb
sub
ficoml
fwait
push
icebp
mov
jo
sbb
decl
jns
mov
fcmovne
in
and
sub
and
or
push
mov
int
in
mov
or
sbb
repz
push
xor
xor
and
xchg
adc
pop
aaa
hlt
fs
dec
outsl
adc
sbb
scas
aad
xchg
outsl
mov
es
xor
fidivrs
inc
push
fs
scas
push
cmc
dec
movb
pop
int3
xchg
pop
mov
ja
pop
stos
xchg
push
sbb
cltd
fs
dec
lds
push
dec
cmp
jmp
dec
sbb
cmpsb
popf
cli
insb
adc
jb
jo
ljmp
cmp
outsl
testb
jl
xlat
fdivr
cmp
push
sbb
adc
leave
cwtl
sbb
push
mov
push
jp
out
lock
push
add
sbb
sbb
lcall
bnd
pop
sbb
popa
in
mov
dec
aas
scas
int3
push
adc
imul
scas
mov
adc
sbb
je
push
xchg
test
test
jle
sbb
xchg
jns
xchg
into
mov
and
xchg
sub
ret
jno
mov
and
popf
dec
xor
mov
cmp
push
xchg
shll
cmp
cltd
subl
and
and
xor
pop
pop
jmp
push
jmp
test
aad
aam
scas
sbbl
aaa
in
ret
rorl
bound
addr16
imul
nop
int
dec
fwait
sub
fldenv
cltd
mov
les
cld
sbb
fsts
cs
mov
xor
ss
ds
mov
test
test
jl
fists
cmpsl
sub
jnp
xchg
mov
aad
push
repz
cmpsb
jle
jge
or
test
popa
or
lcall
aaa
fnstsw
inc
stos
push
push
in
cld
mov
fisttpll
mov
repz
push
adc
mov
sti
ljmp
jg
gs
adc
xchg
sbb
mov
les
sbb
negb
lcall
ret
xchg
in
or
or
add
ds
jb
mov
icebp
mov
push
lret
and
daa
js
int3
mov
mov
movsb
mov
sbb
pop
xorb
lcall
sub
cmp
cmpps
in
ficoml
xor
sbb
cltd
lods
cltd
mov
inc
iret
test
enter
repz
xor
cmp
imul
and
xchg
mov
popa
adc
xor
je
loope
dec
push
mov
cmp
imul
xchg
add
test
into
mov
xlat
daa
mov
inc
mov
xchg
inc
xlat
mov
sub
fwait
lock
sub
out
and
fiaddl
rcrb
negl
out
and
cltd
pop
push
gs
pop
xchg
dec
add
mov
cmp
pop
sub
add
mov
mov
mov
sub
in
icebp
adc
xor
adc
mov
dec
push
xchg
mov
fwait
xchg
sbb
and
scas
aam
xchg
push
xor
push
jle
mov
push
dec
and
adc
sbb
rsqrtps
push
aad
dec
and
pop
cmp
pop
data16
stos
mov
cmp
ljmp
cmp
mov
mov
das
sbb
push
subl
add
aad
addr16
jg
out
bound
scas
sub
sub
das
aad
jp
jge
inc
pop
testl
in
dec
mov
fnstcw
addl
dec
into
hlt
mov
rclb
push
cmpb
jge
popa
ds
xor
add
bound
repnz
lods
cs
cmp
and
jmp
ja
sbb
mov
xor
cli
test
and
inc
jo
jecxz
mov
pop
cmp
sbb
ret
or
fbld
mov
vcmppd
loope
mov
sub
mov
je
out
sub
pop
and
and
jns
mov
mov
rorl
or
test
daa
lret
loop
dec
dec
sarl
sub
aad
icebp
cmc
inc
sbb
aas
fwait
inc
mov
shr
xchg
push
out
pop
fdivrs
in
adc
ret
dec
add
inc
jecxz
cmp
rorb
fisttps
mov
inc
js
loope
popa
and
and
sti
js
sbbl
fists
cmpsb
data16
xor
fwait
inc
cmp
nop
mov
add
pop
lret
sub
xchg
add
sbb
inc
leave
xor
jbe
stos
inc
xchg
xchg
lods
mov
bound
ss
jnp
xchg
mov
inc
call
scas
fisubrs
daa
jae
jg
sahf
enter
dec
dec
fistl
sahf
mov
cltd
mov
fcmovnb
mov
out
inc
in
fwait
pop
push
cwtd
add
xchg
push
roll
sbb
mov
xchg
jne
mov
mov
cs
pushf
push
or
cmpsb
call
inc
fistpll
lea
test
ljmp
in
out
push
test
outsb
shrb
enter
jmp
xor
ret
dec
inc
ficompl
int3
lods
dec
push
xchg
push
jg
pop
dec
jge
push
in
fcmovnbe
cld
sub
jge
fiaddl
lods
xchg
cmp
sub
out
jge
lcall
repnz
jge
mov
sub
loope
or
inc
push
jmp
or
mov
popf
pop
cmpsb
imul
stos
adc
in
into
in
jle
mov
pushw
mov
mov
fs
inc
in
je
push
sbb
shll
test
and
xor
repz
lahf
sub
icebp
pop
push
repz
pop
test
adc
inc
push
fwait
pushf
adc
nop
adc
mov
ret
xchg
inc
sbb
lods
xor
or
ret
leave
aas
xchg
push
sbb
lods
sahf
into
mov
sbb
sbb
outsl
mov
arpl
mov
push
jg
std
movsl
dec
je
push
inc
jnp
sahf
mov
test
mov
test
fwait
sub
lds
cmp
cli
stos
jno
and
inc
mov
aad
ds
imul
mov
mov
inc
jmp
mov
xor
lret
imul
shll
push
ds
fmuls
mov
mov
loope
jnp
daa
sub
cmp
movsb
push
outsb
mov
push
cmpsb
adc
adc
hlt
outsb
xchg
test
mov
jae
nop
push
sub
push
mov
jnp
cld
jmp
xor
cwtl
xchg
push
pop
cmpsb
pop
sub
sti
stos
dec
scas
adc
ds
cmpsl
scas
push
cld
sub
aas
mov
xchg
int
mov
cs
xor
hlt
loopne
pop
sub
adc
test
fcmove
fidivs
mov
mov
out
sahf
dec
repnz
fwait
add
sbb
ljmp
lret
xor
jmp
lret
jnp
jg
test
fcompl
dec
push
xor
jne
xor
out
or
movb
fcomps
adc
outsl
and
adc
std
xchg
push
pop
and
lds
pusha
scas
frstor
or
call
popw
lods
cltd
xchg
push
addr16
adc
or
lods
xor
mov
aaa
pop
xchg
aam
adc
cmpl
xchg
mov
or
rclb
fisubl
jl
mov
sbb
cmp
push
jge
lret
fistl
into
pop
bswap
decb
nop
sub
mov
rcrw
adc
and
shrl
push
les
or
orb
stos
sbb
or
mov
int3
mov
stos
inc
xchg
cwtl
into
or
out
out
mov
data16
sahf
cmc
and
push
scas
gs
mov
popa
clc
mov
lds
loop
push
shll
mov
inc
mov
outsl
xor
jnp
or
mov
outsb
push
js
rol
aam
rcr
mov
jmp
pop
xchg
pushf
pop
dec
push
aad
movsl
mov
addr16
mov
xchg
push
pop
lret
pop
push
daa
mov
mov
mov
jg
test
mov
dec
sarl
pop
lret
jbe
lods
fsubr
jbe
mov
xor
jae
filds
pusha
lret
pop
das
rcrl
out
outsl
bound
adc
push
mov
mov
push
sub
jb
scas
mov
add
scas
mov
jae
sar
or
mov
scas
add
sub
cmp
and
push
mov
test
pusha
fs
aad
mov
mov
push
shlb
fcmovnb
dec
or
or
xchg
cmp
mov
mov
pusha
dec
adc
in
scas
jnp
mov
inc
push
xchg
aad
pavgb
or
jae
cmp
inc
jae
and
imul
pop
mov
das
add
outsb
cld
jmp
push
pop
lret
push
sub
outsb
and
and
sbb
or
fwait
stos
loope
ds
fdivr
pop
xor
xchg
movsl
loop
addl
sbb
inc
push
push
jp
aam
andb
movsb
sti
xlat
call
push
les
inc
cwtl
xor
lea
lret
cmp
insl
sbb
inc
mov
mov
sub
addr16
test
sbb
xor
ficoms
dec
mov
insl
cmp
lods
aas
xor
adc
dec
pop
or
cmp
sub
xor
cli
mov
pop
dec
adcl
xchg
aas
and
cwtl
xchg
inc
adc
and
fsubs
jle
stos
mov
pop
mov
pmuludq
cmp
lcall
shlb
sub
jb
xor
xchg
out
fptan
call
sbb
scas
fs
loope
test
stos
popa
xchg
inc
arpl
add
push
jp
insb
dec
std
ret
jo
mov
pop
lock
orb
and
xchg
adcb
cmp
cmp
add
rolb
repz
fstpl
cmpsl
pop
mov
push
sarb
movl
and
and
sahf
mov
les
xchg
push
rcrb
jo
add
jno
aad
out
aam
arpl
sbb
push
pop
xchg
jmp
mov
mov
adc
pop
add
out
aam
push
dec
xchg
fbstp
jle
gs
push
push
arpl
sarb
xchg
aas
pop
xchg
mov
mov
lret
mov
movb
sub
xor
pop
mov
sub
ja
xchg
cmp
in
es
adc
pop
testb
ds
mov
pop
adc
jmp
int
fsts
outsl
jno
aas
loope
imul
mov
jecxz
in
jmp
clc
rolb
push
jnp
lock
test
adc
jl
mov
arpl
mov
insb
or
cmp
or
mov
outsb
lods
call
push
mov
sub
pop
lea
add
in
mov
sub
mov
jo
aaa
dec
inc
or
dec
xchg
dec
sbb
jecxz
xchg
scas
mov
sbb
cmp
mov
mov
xor
xor
jecxz
jge
cli
xor
cltd
das
push
cld
fmul
pop
push
pop
sbb
lcall
push
add
push
sbb
lods
call
daa
adc
sub
mov
outsl
in
hlt
xchg
inc
insl
mov
jae
jge
bound
xor
imul
in
add
dec
sahf
rorl
add
arpl
loop
lods
loop
scas
mov
insb
inc
fwait
push
push
or
push
das
aad
test
shr
fisubrs
cmp
mov
jle
pusha
add
jg
xchg
or
jo
push
out
pop
sbb
or
dec
pop
lcall
mov
aam
test
jb
shll
jbe
aad
ret
and
xlat
movsb
pusha
cmp
dec
mov
outsl
xorl
adcl
mov
xlat
dec
add
fmull
sbb
xchg
mov
jmp
loopne
call
push
test
outsl
mov
push
cld
nop
push
fisubrs
mov
push
mov
or
in
pop
sbb
mov
mov
jns
imul
in
out
cltd
adc
test
popf
xor
je
adc
jbe
and
lcall
addl
adc
stc
mov
push
cmc
add
or
lods
dec
in
or
mov
mov
pop
push
pop
pop
loope
outsl
adc
jge
cltd
fstpt
add
adc
sub
mov
rcrb
lcall
scas
mov
mov
mov
es
lock
sub
or
lea
mov
stos
out
aas
popf
mov
testb
xor
shr
pop
add
pop
out
inc
pop
mov
cmc
in
jp
sbb
adc
in
sub
cmc
xchg
or
cmp
mov
xorb
xor
in
stos
dec
hlt
dec
jno
pushf
pop
les
sub
pushf
repz
hlt
mov
insb
in
test
jns
mov
outsl
jae
jecxz
nop
setb
out
push
mov
cld
jae
int
stos
and
inc
mov
imul
pop
fwait
das
mov
into
mov
or
ror
sbb
dec
adc
jecxz
add
xchg
bound
adc
lcall
and
pop
mov
int3
shlb
mov
and
push
fstps
fdivrl
repnz
clc
add
xor
dec
lea
fs
fwait
dec
daa
bnd
and
sbb
pop
rol
and
cwtl
and
addr16
outsl
ficomps
inc
push
mov
call
mov
dec
sub
lds
mov
ds
leave
call
call
loopw
add
cld
fsub
push
mov
mov
xor
add
jp
inc
dec
pop
stc
mov
cmp
leave
mov
loope
lods
lret
out
shlb
pushf
loop
rcl
sub
call
sti
imul
shrb
pop
xchg
jmp
and
or
shll
fidivrl
mov
int3
leave
mov
cltd
jne
xor
jp
pop
fdivrp
and
lods
in
pop
adc
andl
fistl
xor
repz
inc
pop
add
outsl
jno
ret
repz
pop
cwtl
out
or
int3
jl
fxch
and
fcoml
icebp
mov
lret
out
mov
in
jnp
lahf
xchg
cmp
jl
lds
fnstenv
push
pop
shrb
xor
out
xchg
push
push
aad
jns
ds
and
mov
push
pop
mov
lods
int3
cmp
mov
xor
and
daa
jnp
dec
mov
mov
jmp
cmpsl
orl
in
repnz
and
inc
jo
sub
mov
enter
das
aaa
add
dec
mov
dec
xlat
fiadds
cltd
das
push
and
loopne
add
loopne
bound
ret
addb
scas
add
mov
lock
inc
mov
jae
adc
repnz
adc
jl
popf
push
or
jbe
sbb
sub
xchg
mov
jle
pushf
mov
push
in
sbb
add
lock
cmp
push
inc
jmp
les
stos
inc
mov
cmp
sbb
xchg
mov
ja
pop
cli
in
mov
dec
ret
loope
lret
xlat
jmp
inc
test
negl
je
bnd
pop
pop
sti
ljmp
lcall
pop
push
fidivs
repnz
pop
xchg
leave
sbb
int3
ret
into
test
imul
loopne
in
mov
in
cmpsl
sti
rcrb
arpl
fisubl
xchg
nop
mov
fdivr
cli
iret
pusha
ljmp
sbb
cltd
ret
add
push
pop
call
loopne
dec
sti
xchg
push
xorb
sbb
xchg
sti
repnz
inc
push
lcall
stc
arpl
outsl
aaa
mov
lret
push
cmpl
pop
pop
addr16
cli
jne
add
aad
dec
mov
mov
mov
cld
ret
divl
pop
mov
stos
rorb
mov
jnp
mov
ljmp
lret
shll
lock
jmp
popf
mov
xchg
dec
mov
pop
and
mov
loop
or
jb
cmp
pushf
fcmovnbe
scas
push
jl
jmp
incb
repnz
cmc
or
fisubl
xchg
push
cmp
testl
popl
shll
cs
push
ss
or
jno
cli
bound
pop
loope
cwtl
push
pop
divb
insl
push
lds
cmp
roll
jg
mov
push
clc
daa
push
and
jb
jne
or
mov
inc
sub
pop
dec
mov
bound
mov
mov
cmp
mov
call
xchg
xor
xor
jmp
loopne
jmp
jle
mov
cwtl
sbb
pop
scas
mov
arpl
inc
lret
sbbl
in
jno
popf
idivl
push
xchg
std
test
pop
cmp
or
movsb
add
outsl
aaa
pop
pop
xor
xchg
fwait
xor
dec
xchg
push
cli
adc
pop
lahf
cs
mov
cmp
lcall
pop
fcmovnu
and
test
cmp
or
js
fs
xchg
adc
xchg
adc
rclb
inc
test
mov
es
rcrl
in
xchg
cltd
subl
xchg
leave
xchg
push
in
fs
mov
inc
jae
rcrl
cli
scas
aam
daa
movsl
shlb
push
push
dec
lock
out
add
loope
movsb
mov
mov
mov
xorb
dec
xor
or
lret
ljmp
push
jecxz
jmp
js
xchg
js
add
div
xchg
cmp
inc
rcll
push
jae
or
mov
fstl
fwait
or
adc
jnp
cmp
cmc
mov
loope
pop
or
xchg
and
dec
or
loopne
push
xchg
stc
and
mov
xor
xchg
test
mov
fsubs
mov
mov
mov
fsts
inc
lds
lahf
and
stc
fmull
or
pusha
xor
lock
sahf
and
mov
pop
pushf
cmpsb
test
push
push
out
ret
inc
xor
scas
into
aam
lods
cmpsb
mov
mov
leave
scas
fwait
jns
into
sub
mov
cmp
add
icebp
rol
outsl
dec
into
insl
push
dec
nop
jns
push
mov
mov
push
dec
aas
pop
inc
call
mov
fldcw
sub
inc
ss
cmovno
and
ja
in
add
mov
int3
pop
lret
shrl
sbb
adc
sti
mov
inc
jno
es
iret
dec
xchg
call
icebp
adc
xchg
push
dec
mov
hlt
aad
ljmp
mov
and
mov
xor
clc
int3
push
jns
push
push
push
push
cmp
xor
cmp
xchg
ret
xlat
mov
xor
dec
cmp
aam
aas
ss
push
dec
add
dec
hlt
or
jge
inc
pop
bnd
lea
lock
stos
jns
dec
pop
fildll
xor
std
cmp
rcll
pop
inc
mov
cltd
stos
addr16
in
addr16
cmp
cmpsb
sub
mov
adc
pop
movsl
push
ljmp
test
xor
pop
es
fsubr
test
hlt
shl
nop
mov
addr16
cmp
mov
xor
pop
sub
or
mov
scas
aaa
ljmp
repnz
xchg
mov
loope
jnp
or
in
sbb
xlat
push
shld
push
in
jbe
ss
shl
cmp
in
add
daa
stos
jbe
mov
mov
dec
jge
leave
aad
lret
dec
inc
lods
and
add
ret
dec
mov
int3
addr16
adc
loop
test
icebp
pop
or
push
jnp
ja
push
iret
inc
dec
pop
mov
push
pop
movsl
lcall
jbe
jne
inc
pusha
addr16
or
shrl
mov
xchg
and
testb
dec
jno
xor
adc
leave
mov
mov
insb
cmpsb
mov
or
push
scas
das
loop
xchg
lods
xor
hlt
xor
mov
psubusb
clc
pop
mov
cltd
outsb
xchg
pop
sti
gs
lahf
and
sub
or
daa
and
cli
cmpsb
cmp
sub
push
sub
mov
out
xchg
or
pop
sbb
in
xchg
xor
jne
aaa
adc
xor
imul
push
je
push
in
mov
dec
jge
jo
jbe
sub
lock
inc
je
fnsave
mov
sbb
pop
cmp
or
dec
inc
dec
mov
or
inc
call
pushf
adcl
sub
ffreep
fs
out
out
gs
fbstp
cmp
aaa
scas
cmpsl
leave
repnz
cli
stc
or
out
dec
adc
les
push
aam
inc
fs
mov
cwtl
sub
aaa
mov
out
es
add
enter
cwtl
popf
mov
lds
or
sub
insb
fisttpl
shlb
cmc
jne
or
cmc
popf
pusha
sbb
push
scas
ret
ljmp
in
mov
popa
call
sbb
and
adcb
sub
inc
adc
aaa
jmp
test
sbb
enter
inc
add
mov
sbb
mov
push
popf
testb
test
mov
clc
sub
pop
inc
into
insb
mov
cli
push
lret
add
jo
jmp
dec
shl
sbb
stos
fildl
in
fldenv
mov
outsb
imul
in
rcll
stos
orl
popf
push
imul
dec
jbe
sub
mov
dec
int3
fnsave
ficomps
jecxz
mov
mov
and
rcl
notl
mov
imul
daa
aam
cmpb
fistl
mov
mov
es
scas
and
inc
pop
jg
leave
jno
push
push
outsb
mov
jb
inc
jb
iret
cli
clc
or
sub
mov
jne
xlat
daa
and
out
aaa
loopne
sti
or
mov
outsl
adc
xor
lret
dec
pop
inc
fisttps
rorb
stc
push
inc
pop
subb
sbb
repz
mov
bound
outsl
xchg
fstpl
push
das
pop
stc
or
ljmp
inc
sbb
cwtl
movsl
cltd
mulb
sti
xchg
out
lods
test
stc
lret
rclb
scas
mov
and
add
mov
repnz
push
mov
movl
dec
in
divb
stc
ljmp
aas
arpl
outsb
sbb
push
dec
lock
je
or
cmp
outsl
stc
ja
in
cmp
inc
call
cli
lock
cmc
scas
fidivrs
cmp
pop
ss
js
sahf
pop
loopne
in
lea
push
push
daa
roll
sub
mov
nop
js
xor
cwtl
repnz
cmpsb
test
enter
movd
test
stos
jb
mov
xchg
adc
dec
xchg
popa
pop
movd
pop
std
outsb
mov
stos
std
xchg
js
movsb
rolb
push
sbb
bound
adc
inc
dec
in
dec
inc
pop
std
cltd
in
sbb
lret
in
sbb
push
cli
addr16
jmp
push
push
push
pushf
or
sub
mov
mov
jno
fistpl
jg
sbb
adc
in
rcl
mov
cli
inc
mov
xor
sti
jp
pop
and
pop
push
push
cmp
out
sbb
lods
dec
mov
popl
pusha
sbb
lods
cltd
sbb
sbb
mov
mov
out
and
cmp
mov
cwtl
xor
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
dec
imul
ficomps
out
in
int
jns
loop
or
xor
jnp,pn
sbb
in
cmpsl
sbb
imul
nop
or
xor
mov
dec
repnz
lods
jl
fs
sahf
adc
loope
mov
leave
jbe
mov
popa
fs
mov
jmp
cwtl
fs
add
fdiv
pusha
icebp
lahf
jl
rcrl
loope
repz
clc
adc
add
add
test
sbb
cmp
aam
jno
dec
dec
jns
das
and
mov
pop
dec
mov
adc
inc
mov
jae
adc
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
out
sub
mov
xchg
xchg
mov
sbbl
lds
int3
cmpsb
call
sbb
add
pop
push
push
or
jmp
pop
mov
inc
cltd
test
inc
adc
fiadds
out
add
mov
cmc
cwtl
push
daa
push
std
push
mov
outsb
pop
cwtl
pop
out
xor
push
arpl
sbb
jmp
iret
cmp
cmp
push
mov
mov
dec
cltd
adc
shl
enter
sub
fsub
clc
dec
push
xchg
into
push
aad
dec
pop
popa
addr16
xor
or
sub
jg
add
pop
sub
sub
addb
xchg
add
mov
inc
push
xchg
sub
inc
add
vpmaddwd
loopne
je
scas
mov
mov
push
jecxz
pop
and
push
adc
mov
dec
push
and
xchg
hlt
jne
leave
cs
aam
jecxz
sub
mov
std
jge
les
movb
les
cmp
test
mov
pop
test
xchg
cli
ljmp
fidivl
fsubrs
clc
or
inc
add
aam
icebp
mov
add
sahf
mov
sahf
dec
mov
jle
mov
mov
popl
add
and
aam
aam
ljmp
je
mov
sarb
scas
add
add
cmp
lds
in
dec
daa
mov
sahf
cmp
sahf
into
pop
cs
cmp
pop
sbb
gs
jecxz
xor
dec
pop
dec
iret
movsb
and
xlat
subb
pusha
and
movsb
sub
mov
popa
dec
std
sbb
int
inc
xor
inc
or
xchg
ss
mov
lret
std
mov
fwait
adc
movsb
or
iret
mov
jp
xor
rcr
bound
int
pop
ret
or
pop
scas
cmc
scas
or
and
or
sbb
mov
cld
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
mov
add
ss
ja
and
int
aam
ret
xchg
dec
xlat
pop
pop
add
mov
cs
xchg
cmpsl
pop
pushf
mov
imul
popf
mov
dec
xchg
cmp
and
adc
pop
mov
add
std
mov
mov
pop
mov
js
aam
movsl
test
xchg
or
dec
inc
xchg
imul
inc
rorl
into
data16
lahf
push
or
mov
out
pop
mov
scas
mov
adc
or
xor
mov
dec
add
dec
movsl
lds
adc
add
lret
out
lods
cmp
stc
stc
pop
sub
notb
add
add
mov
cltd
xor
fimull
jbe
sbb
pop
mov
lds
js
mov
addr16
cmpsb
pop
sbb
sbb
mov
movsb
fcmove
adc
pop
or
mov
leave
dec
js
fucomi
or
das
ja
lcall
insb
mov
ficoms
clc
fcmovb
inc
ljmp
cmpsb
movsb
push
mov
mov
ljmp
or
pop
cmp
dec
ficompl
sub
pop
add
scas
jle
xchg
jge
xchg
in
pop
idiv
nop
pop
movsb
sbb
mov
sub
insl
nop
push
push
sub
add
push
xor
gs
aaa
push
jno
inc
ret
mov
add
sti
sbb
jmp
xor
iret
and
enter
jb
push
xchg
ljmp
out
push
mov
mov
mov
icebp
js
pushf
notb
add
push
jbe
pop
pop
aas
std
mov
add
mov
mov
add
leave
stos
lock
mov
stos
xor
and
repz
add
test
pop
out
or
add
jge
in
add
jge
pop
sti
jmp
aad
pushf
jae
mov
pop
aad
xor
loopne
mov
popa
fucomip
inc
inc
push
add
adc
push
adc
cwtl
out
stos
stc
mov
adc
add
loop
jne
add
cmp
adcl
mov
xchg
jae
mov
sbb
mov
pop
fsts
negb
fwait
repz
sbb
rol
out
scas
mov
pop
out
int
sar
lods
daa
pop
js
xor
cld
call
or
repz
popa
mov
rcrl
dec
loop
mov
imull
sub
dec
push
out
subb
jb
inc
push
mov
push
loop
inc
xchg
mov
aad
enter
pop
sbb
arpl
sub
das
scas
mov
mov
xor
jo
fsub
jp
outsb
xchg
or
icebp
lahf
xchg
jo
push
les
add
sub
das
jle
jg
imul
sar
scas
mov
add
add
xor
out
inc
sbb
lea
cltd
pop
stc
sub
mov
daa
sbb
inc
pop
and
mov
dec
pop
inc
into
aas
mov
mov
in
inc
dec
jge
insb
repz
int
lock
jmp
sbb
dec
sub
je
jb
jle
jmp
std
outsb
out
fisubrs
js
adc
cmp
adc
adc
cmp
jge
fnsave
das
or
pushaw
jge
pop
dec
sbb
push
outsb
insl
bound
pop
cmp
jg
pop
dec
stos
pop
bound
mov
mov
inc
mov
arpl
movsb
add
addr16
and
mov
mov
mov
insl
lods
add
scas
add
add
xor
call
mov
or
insb
fdiv
movsb
push
out
pop
fisttpll
addr16
dec
ss
sub
xchg
stc
mov
mov
lds
cmpsb
loopne
insb
gs
out
dec
dec
pop
pop
pop
aaa
add
lcall
or
in
shll
fisttps
mov
and
pushf
jae
add
dec
pop
mov
inc
or
mov
pop
in
jecxz
ss
sbbb
xor
pop
test
mov
add
in
adc
dec
xor
pop
dec
jecxz
das
push
gs
insb
inc
mov
mov
sbb
add
or
ret
lods
sub
mov
lret
add
scas
add
add
mov
mov
sbb
push
dec
xchg
pop
xlat
pop
cli
pop
mov
xchg
int3
cmpsl
loope
filds
idiv
push
int3
mov
lock
mov
cmp
push
stos
into
out
fsubrl
lea
mov
clc
rcrb
inc
push
dec
sub
sbb
imul
imul
xor
push
in
add
rcr
xor
pop
scas
loope
push
inc
push
rcll
std
fimuls
fldenv
in
cmp
jne
js
sbb
sbb
lods
dec
mov
popf
sbb
shll
add
fld
add
ror
outsl
clc
rcrb
lods
add
cwtl
add
add
hlt
loopne
add
pushf
mov
adc
imul
outsb
cmp
xchg
iret
cmp
sbb
movswl
xor
test
nop
loopne
insb
out
in
insb
std
jnp
ds
cmpsb
loope
push
and
aad
adc
call
push
lret
insl
in
and
mov
or
and
inc
test
pop
ret
popf
ss
in
mov
rcr
insb
jns
push
lea
and
xchg
push
out
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
pop
inc
add
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
in
inc
add
aam
add
aam
add
inc
add
aad
add
inc
add
aam
add
aam
add
add
aad
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
sub
sbb
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
aam
inc
add
or
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
enter
sub
inc
add
in
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
fiaddl
imulb
add
add
push
pop
mov
jg
sub
sub
inc
iret
adc
mov
jo
mov
push
int
mov
sub
pop
repnz
xor
mov
js
jge
xchg
inc
pushf
pusha
push
aas
fcom
jbe
clc
je
loope
cmp
repnz
jle
mov
ret
je
filds
or
dec
mov
pop
fs
push
shl
mov
xor
ljmp
jp
mov
cli
sub
lret
cmp
ret
cwtl
into
out
mov
adc
jbe
inc
pop
rclb
mov
and
in
out
mov
jge
add
sub
cli
jl
xlat
push
in
push
pop
pop
xchg
add
scas
add
add
mov
test
je
jp
lret
cmp
adc
dec
lock
in
lahf
insb
loop
mov
mov
mov
arpl
repz
bound
pop
adc
and
xor
mov
ljmp
add
hlt
pop
js
cmc
andl
arpl
insb
jp
pop
pop
add
sbb
xchg
adc
out
fldt
sub
and
dec
enter
push
pop
dec
jb
inc
push
jle
imul
add
add
add
stos
pushl
xchg
push
ljmp
add
dec
bound
or
xchg
pop
mov
fcoml
cmc
je
pop
adc
pop
fdivrl
cmp
es
mov
in
nop
mov
mov
inc
fcomi
dec
mov
adc
ret
dec
movsl
aam
repz
cmpsb
cmp
leave
mov
push
cmp
dec
push
loopne
mov
and
out
je
outsl
sub
orl
xchg
test
rcrl
push
pop
jae
lret
aad
imul
sub
cwtl
shll
pop
fisubl
sbb
cmp
adc
or
mov
mov
add
add
add
add
cmp
in
fimuls
pop
push
add
mov
jbe
sub
test
cwtl
mov
or
rcl
int3
dec
jecxz
adc
je
out
pop
push
dec
pop
xchg
jne
push
add
mov
in
mov
lock
les
test
jns
shlb
int3
cwtl
lahf
leave
addl
andl
jbe
adc
dec
ret
arpl
leave
test
imul
xor
pop
leave
outsl
jge
and
pop
pop
dec
std
insb
popa
test
pop
add
add
aas
mov
xchg
fisubs
hlt
es
into
pop
cmc
out
cmp
add
popa
out
icebp
push
dec
dec
push
jecxz
add
fnstenv
std
negb
sub
sahf
push
jno
gs
add
scas
add
add
inc
divb
push
es
jmp
mov
gs
ljmp
adc
insl
cli
into
lock
cmp
and
loope
sub
testl
xchg
dec
es
push
add
lret
ljmp
xor
pop
out
int3
mov
sbbb
xchg
xor
cmp
iret
mov
or
shrl
mov
ja
pop
cmpsb
adc
dec
lahf
nop
enter
xchg
jo
adc
das
lret
hlt
filds
jno
fnstsw
in
or
lock
arpl
add
xor
jb
inc
mov
out
adc
add
xor
xchg
mov
mov
hlt
ret
int3
lret
jp
mov
mov
pop
insb
into
sahf
or
and
add
add
repz
out
inc
or
out
mov
inc
stc
xchg
dec
outsl
fldl
imul
mov
sbb
sub
das
sahf
aad
lret
or
push
inc
inc
mov
bound
push
lock
imul
add
adc
sbb
adc
push
jge
jp
repnz
lods
pop
push
movb
filds
push
adc
lods
and
lock
xchg
and
add
add
pop
sub
or
scas
add
add
jg
push
insl
repnz
xchg
sbb
pop
xchg
xchg
sbb
les
shll
outsl
scas
mov
subl
add
iret
sbb
sub
mov
push
pusha
jae
jl
xchg
rolb
pop
xchg
jge
outsb
push
mov
push
in
ret
test
push
pusha
push
loopne
fdivrp
ss
lock
mov
daa
in
mov
push
shll
xchg
mov
pop
iret
or
or
lods
int3
sbb
inc
push
lods
mov
jl
mov
icebp
stc
insl
push
pop
xchg
add
jns
hlt
outsb
push
cmp
xchg
std
out
sbb
add
add
add
add
mov
aam
xor
and
outsl
fwait
add
scas
add
add
mov
xor
je
mov
push
test
pop
test
popf
fisubs
pop
jp
js
jl
cmp
fstl
outsb
add
mov
add
lock
lods
adcb
inc
ljmp
add
inc
loopne
std
inc
inc
cli
icebp
jp
jne
sub
mov
mov
dec
pop
cld
daa
pusha
stc
cld
icebp
stos
pop
adc
push
notb
inc
xchg
cmp
js
sub
push
dec
jbe
subb
sbb
jg
stos
outsb
dec
inc
bound
dec
dec
push
lock
dec
mov
mov
pop
push
ds
or
mov
int
jmp
outsl
add
cmp
add
mov
out
xchg
outsl
xor
add
add
push
gs
jns
sahf
daa
jb
fistpll
int
add
lods
loop
loope
aam
mov
aaa
pop
xor
icebp
cmpsl
xchg
sbb
hlt
inc
rolb
inc
sti
ds
outsb
stos
jno
and
leave
movsl
lds
cmp
pop
cli
or
pop
cli
dec
cmp
aaa
fisubrs
fisubrl
xor
test
or
sub
inc
xchg
push
test
mov
in
and
cmp
sahf
iret
mov
iret
mov
xlat
fdivrl
repnz
jg
and
dec
lock
pop
imul
mov
mov
add
jmp
repz
fimull
push
insl
movsb
or
pushf
add
scas
add
add
lds
ret
adc
xchg
sbb
and
and
push
out
pusha
and
inc
jmp
xchg
loopne
mov
pop
adc
dec
and
sub
in
cmc
stos
and
imul
mov
push
pop
pop
cld
xor
std
mov
jb
sbb
mov
mov
call
stos
mov
orl
bound
cwtl
fistl
adc
bound
cmpsb
mulb
mov
add
loop
add
xchg
xchg
scas
pop
andl
pop
xlat
cmp
push
sub
rcrl
outsb
test
loope
test
add
add
add
add
pop
iret
pop
aad
ss
dec
cmp
xchg
jns
add
scas
add
add
xchg
cmp
aas
dec
cmp
fldcw
ja
mov
cli
hlt
fists
mov
test
imul
lcall
es
iret
fstpl
cmc
mov
sahf
mov
mov
rcrb
mov
pusha
fsubrl
es
mov
xchg
and
and
sbb
std
mov
lds
test
xchg
shll
xchg
stos
xchg
lock
mov
mov
loop
andl
insl
mov
lods
sahf
jb
popf
test
fmulp
iret
in
stc
inc
sub
add
cld
jne
stos
cld
daa
sahf
add
scas
add
add
xor
addr16
fimuls
mov
xor
ret
paddsw
jp
mov
inc
add
enter
pop
pop
leave
dec
pop
jecxz
jle
sarl
fldl
pop
push
data16
mov
sbb
add
adc
sbb
add
dec
test
pusha
cmpsl
dec
mov
pop
xchg
mov
inc
push
daa
and
or
jnp
push
stc
shll
les
gs
cmp
adc
jp
adc
xor
setae
shrl
add
add
add
add
lock
jle
repz
std
hlt
aad
add
scas
add
add
in
jae
lret
cmp
aaa
loope
mov
adc
inc
cmp
xlat
push
into
out
cmp
cmp
mov
xchg
das
pop
dec
cwtl
push
pushf
pusha
lock
int
sbb
ret
push
clc
aad
arpl
nop
mov
add
jae
sti
xchg
xor
fmull
dec
xchg
inc
mov
dec
jne
mov
inc
hlt
mov
or
push
dec
sbb
sti
into
ret
jp
sbbb
pusha
sub
loope
push
mov
rclb
test
cmp
push
mov
scas
lea
pop
xchg
xor
jno
in
repz
dec
add
ss
push
add
cmc
adc
adc
mov
lds
sbbl
add
mov
shl
stc
mov
lds
xorb
push
push
data16
shl
and
add
inc
movsl
and
push
sbb
mov
xchg
cwtl
cwtl
mov
jno
pop
xor
xchg
addr16
or
sbb
and
mov
pop
add
jg
xor
sub
das
xor
ja
fisttpl
dec
scas
mov
leave
and
in
push
scas
cli
cmp
cld
in
dec
push
pop
add
repz
and
pop
mov
xchg
xchg
out
sub
rcrb
clc
movsb
and
add
cmp
mov
shlb
add
scas
add
add
and
cmp
lds
rcll
mov
mov
fidivs
cmp
or
xchg
leave
decb
popf
ds
icebp
add
sbb
jle
pop
sbb
mov
pushf
dec
cmp
and
adc
rorl
jmp
push
jl
xor
stc
push
lds
int3
bound
shr
outsb
push
cli
arpl
loopne
mov
sbb
and
xor
xor
dec
andb
ja
mov
imul
push
pusha
fldl
add
sqrtps
cmc
das
sbb
xchg
iret
bnd
fbld
add
xchg
adc
mov
pop
in
jmp
inc
inc
cmp
and
ljmp
test
cmc
xchg
mov
cmc
decl
movsl
sbb
jo
or
es
mov
add
push
mov
rorl
fildl
and
sbb
xlat
sbb
jno
xchg
adc
pop
mov
sub
jmp
lret
mov
testb
fimuls
push
add
mov
js
fwait
adc
fxch
add
into
aad
add
adcl
or
and
jnp
xchg
inc
cli
xchg
xor
out
daa
aam
das
dec
js
add
int
xchg
inc
cmc
sti
fildll
test
lea
add
add
data16
test
sbb
pusha
jbe
lea
push
lods
fdivp
fcompl
push
push
fdivrl
inc
mov
add
adc
popa
add
xchg
and
imul
sti
mov
ret
mov
mov
add
add
les
or
xchg
ret
std
mov
jmp
and
es
pushf
ljmp
sar
stos
add
inc
mov
divb
lret
sahf
aad
xor
mov
test
lcall
add
add
add
add
fs
testl
xor
cmp
add
lock
dec
bound
icebp
lret
jg
sbb
adc
fisttpl
lahf
inc
sub
xchg
mov
adc
lds
or
dec
int3
out
sub
sbb
adc
loop
dec
ljmp
ds
popf
dec
sbb
xor
add
imul
pusha
daa
sbb
iret
test
scas
repz
lods
mov
push
enter
pop
xchg
repnz
push
or
sti
arpl
xor
iret
outsl
mov
mov
aad
cs
jns
dec
dec
divb
xchg
dec
jl
jg
push
xchg
frndint
mov
lods
jnp
sub
push
add
add
jne
jg
clc
cs
push
jno
add
scas
add
add
mov
jl
mov
mov
test
sahf
ret
sahf
jno
jo
dec
sbb
sub
push
mov
sub
dec
mov
xlat
add
cmpsb
xor
fisttpll
or
hlt
cmpsb
ret
ss
xchg
repnz
ret
add
pop
out
fadds
testl
fs
movsl
and
sub
mov
das
lcall
adc
lret
jge
je
and
negb
imul
adc
jne
add
jge
ljmp
add
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
scas
add
add
mov
rcr
jns
pop
arpl
sub
sbb
scas
sbb
jb
fistpl
push
sub
adc
in
push
loop
mov
inc
in
jb
pop
push
aas
stc
test
xchg
sub
in
jo
in
mov
scas
push
pop
es
fists
cmp
and
mov
add
sarl
and
insb
mov
imulb
lea
popa
mov
add
sbb
stos
loopne
cmpsl
mov
or
dec
xor
fimull
adc
mov
pusha
cmp
cmc
dec
cmpsl
scas
dec
xlat
incl
add
push
mov
mov
xchg
adc
imul
scas
add
add
lret
dec
cli
aaa
jbe
dec
pop
into
jecxz
daa
rclb
xchg
jb
mov
sub
mov
mov
mov
or
cmp
sarl
inc
cmp
loop
mov
ss
aas
push
mov
jl
jb
arpl
lea
mov
mov
dec
cltd
and
xchg
lods
or
dec
adc
rcll
pop
sarb
push
mov
and
xor
ja
out
rcrb
adc
pop
push
jbe
sbb
mov
mov
sub
rolb
inc
xchg
push
ja
mov
orb
add
add
add
add
fisttps
push
scas
pop
cmp
jnp
add
scas
add
add
xchg
and
into
ret
dec
pop
nop
test
pushf
cmc
ret
jmp
clc
and
dec
or
call
adc
ret
loopne
sub
shrb
dec
or
add
addr16
fidivl
adc
ja
xor
jp
xchg
insl
mov
cmpsb
scas
pop
mov
dec
outsl
in
xor
add
push
adc
cmp
outsl
adc
lods
pop
or
push
push
mov
loope
mov
imul
and
test
add
push
in
inc
scas
insb
and
in
cltd
push
sub
fsubrs
jnp
add
dec
pop
sub
test
add
jle
out
sbb
mov
lea
add
sbb
sbb
cld
enter
or
xchg
or
pop
sub
xor
push
cmpsl
loope
jno
fs
js
pop
cmpsb
sbb
ret
and
in
stos
movsl
push
pushf
fldenv
add
inc
mov
je
stos
andb
push
mov
inc
out
push
clc
inc
cmp
aad
sbb
ds
add
andl
sub
cs
inc
lea
jmp
shlb
cmp
je
mov
loop
jne
xor
repnz
inc
iret
and
mov
push
cwtl
jge
cmp
mov
add
add
add
add
and
cmp
lds
test
scas
add
add
dec
mov
aaa
cmp
inc
adcb
cmpsb
pop
outsl
jbe
xor
pop
int
pop
add
or
sbb
sub
daa
push
call
test
push
add
jl
je
popa
sub
and
inc
inc
stos
rol
adc
aad
cmp
test
mov
and
outsl
call
lahf
mov
jbe
cmpsb
mov
inc
add
dec
ret
and
xlat
inc
push
imul
jno
jg
cld
mov
in
push
or
adc
andb
imul
insl
add
xchg
nop
ffree
popf
aam
repnz
test
add
cmpsl
lods
add
movsb
jge
jl
leave
in
daa
imul
ljmp
push
fwait
dec
fwait
mov
cli
mov
movupd
mov
div
xchg
xor
dec
out
or
cmp
roll
jne
mov
int3
std
in
lds
ja
fisttpl
mov
dec
adc
nop
mov
in
sub
dec
mov
stos
dec
pop
pop
dec
inc
add
dec
je
sub
int
inc
lea
mov
aam
sub
cmpsb
int
in
insl
cmp
xchg
jmp
mov
xlat
lret
cmp
pop
add
hlt
mov
jbe
hlt
mov
and
cmpsb
imul
sbb
popl
add
or
pop
pop
xchg
push
sarb
ds
cmc
test
jge
sbb
mov
clc
push
xchg
pop
jae
jno
push
loopne
imul
mov
out
clc
test
add
test
inc
mov
cli
mov
fisubrs
fs
jl
mov
setb
fists
push
inc
popf
jno
sub
inc
into
push
test
sarb
dec
or
jns
test
pop
mov
popl
or
or
in
jo
jmp
sub
lock
push
clc
xchg
pandn
in
add
xchg
push
pop
xlat
xor
add
xor
into
mov
sub
out
mov
popl
add
int
mov
test
mov
dec
mov
mov
cmp
insl
arpl
push
mov
fistl
test
ret
mov
stos
arpl
cs
dec
test
fisttpl
lods
movsl
jno
and
cmc
mov
pop
mov
dec
or
in
mov
inc
or
ficoms
adc
rorl
test
out
jmp
dec
xchg
orb
or
int
bnd
pushf
loopne
adc
xchg
dec
ljmp
lcall
jne
pop
cmp
adc
sub
ja
xchg
mov
add
in
outsb
and
pop
mov
nop
add
scas
add
add
xchg
mov
lods
push
aam
inc
lret
mov
jmp
cs
mov
mov
pop
adc
in
pushf
inc
inc
xchg
sub
jno
mov
ss
aaa
movsb
leave
subb
cmpsl
decb
ss
inc
and
shrl
icebp
pop
das
cltd
scas
insl
push
dec
dec
mov
mov
pop
mov
enter
push
or
mov
mov
push
add
pop
aad
call
std
adc
xor
pop
movsb
and
and
lahf
sbb
scas
cwtl
mov
fstpl
sub
add
add
add
add
mov
and
xor
add
add
sti
sub
cmpb
and
rcrb
xchg
push
test
adcl
mov
aam
das
jg
and
cmpsb
mov
addb
xchg
in
sbb
test
adc
add
sbb
pop
mov
jns
or
cli
pop
out
gs
loopne
mov
jns
sbbl
inc
mov
or
xlat
jb
lea
jo
jbe
fldlg2
push
test
idiv
mov
xchg
or
addr16
jno
jl
pop
mov
mov
test
int3
xchg
or
int
add
stc
call
into
inc
mov
out
fldcw
jmp
add
scas
add
add
hlt
sub
aas
inc
jne
fcom
jno
insl
adc
mov
mov
lds
mov
sbb
lea
xor
pushf
rcrb
mov
lods
outsl
mov
es
mov
in
inc
popf
inc
dec
jmp
test
lock
bound
or
scas
scas
push
and
fdivr
pop
xor
inc
mov
xor
or
pop
out
test
dec
xchg
dec
test
in
les
and
sysenter
rol
out
adc
jmp
mov
sub
lods
out
out
fwait
sti
jle
and
xor
adc
repnz
push
mov
sbb
mov
add
fisubrs
cwtl
sar
repz
sti
pop
clc
dec
cltd
xchg
add
scas
add
add
or
loop
mov
xchg
jge
ja
push
or
stos
insb
push
adc
std
and
iret
adc
adc
in
and
test
push
movsl
pop
jle
xor
popa
pop
pop
cmp
jmp
repz
or
jecxz
sub
loopne
ja
insb
mov
in
ret
testb
cmp
ljmp
mov
test
sbb
les
sub
andb
in
sbb
dec
bound
stc
and
sbb
orl
lea
out
pop
mov
fs
jp
fildll
jmp
jbe
outsl
lds
dec
add
dec
aas
int3
sbb
out
loopne
lods
xor
dec
inc
xchg
add
scas
add
add
fstpl
cltd
popf
xor
aad
add
xchg
add
sub
inc
inc
arpl
cmp
and
subl
mov
sub
sub
xchg
mov
add
sub
inc
jae
xor
rcrb
in
aas
dec
arpl
popa
scas
ds
push
fwait
hlt
rorb
test
lcall
in
sub
iret
pop
dec
sbb
les
mov
imul
cmp
lods
inc
mov
xchg
addl
cli
push
iret
xor
xchg
mov
add
add
add
push
test
fildll
pop
jg
dec
cmc
xchg
add
scas
add
add
out
in
test
dec
xor
xchg
pop
adc
test
fcoml
push
out
and
mov
cwtl
push
jmp
mov
jo
out
scas
jge
repnz
xchg
sarl
daa
mov
loop
jnp
or
jl
xchg
xchg
inc
ret
lret
test
outsl
jbe
stc
mov
jb
mov
lods
mov
cmp
cmpsb
mov
aaa
and
pushf
lea
dec
mov
add
into
dec
adc
inc
inc
sub
lea
pop
xchg
pop
sahf
adc
or
mov
add
lods
fcomi
sarb
add
inc
in
aad
xchg
add
scas
add
add
insl
adc
insl
mov
cmp
push
xchg
lds
jp
into
sbb
jmp
test
xchg
sbb
xlat
jecxz
pop
push
lahf
or
sub
mov
adc
or
lea
mov
push
adc
cmp
sub
jb
adc
dec
aad
mov
movl
xchg
subb
or
xlat
inc
pop
mov
push
add
fnstsw
add
sbb
std
cmp
dec
xchg
sbb
xchg
int
in
xchg
add
jae
mov
dec
sbb
into
jge
add
divl
dec
cmp
dec
cmp
push
xchg
add
scas
add
add
mov
cmp
das
arpl
jae
loopne
lock
stos
xchg
aaa
mov
je
add
adc
popf
inc
cmp
sub
daa
pop
mov
xchg
addr16
testl
ljmp
xchg
sahf
inc
enter
aas
rol
iret
push
xchg
into
xor
fcoml
scas
scas
mov
cmp
xchg
mov
inc
cwtl
nop
xchg
loop
push
ss
lods
aam
rcrb
push
scas
jmp
lods
mov
daa
and
xlat
sbb
loope
outsb
xlat
test
sub
xchg
adc
sbb
push
jge
add
arpl
jge
mov
daa
mov
xchg
add
scas
add
add
in
jmp
push
cmpsb
push
bound
insb
leave
test
imul
adc
pop
mov
mov
loopne
stos
inc
gs
lds
xchg
rorb
pop
outsl
dec
mov
bnd
push
sbb
lods
cmp
and
ss
xor
cmpsb
sub
sub
inc
daa
xchg
shll
adc
mov
push
pop
or
lret
test
notb
cmp
add
mov
shlw
cld
push
inc
ds
test
adc
into
cmovbe
xor
jmp
mov
add
add
add
add
push
imul
push
pop
out
jmp
add
add
xchg
inc
pusha
xchg
dec
in
repz
mov
cmp
int3
sub
std
sbb
outsb
aam
scas
decl
data16
mov
jns
mov
hlt
mov
imul
lock
inc
cmpb
les
movsb
test
xchg
inc
stc
andb
xor
fsubs
pop
sub
scas
sbb
jmp
xor
iret
cmp
fwait
in
out
sbb
daa
ja
insl
push
mov
or
sbb
xchg
or
xlat
jmp
mov
jge
lret
inc
aad
pop
popa
mov
mov
adc
fld
cmp
mov
add
daa
ss
xor
and
pop
jb
mov
add
push
rorb
inc
fnstsw
mov
pop
daa
popf
fsubs
cmp
sbb
jge
push
mov
inc
push
cmp
push
fildll
orb
aam
push
or
push
jmp
dec
xchg
insb
adc
jbe
push
sti
lcall
mov
cmp
xor
cmp
mov
lcall
adc
jbe
dec
sbb
mov
push
outsb
xchg
mov
repz
and
filds
xchg
cmp
push
pop
rcrb
jae
lea
sub
cmp
das
adc
push
add
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
inc
movsb
add
scas
add
add
filds
xor
jae
mov
das
inc
gs
mov
sub
lret
mov
push
lock
add
push
xor
ret
fcomps
jo
mov
mov
jge
push
push
push
ds
pop
outsl
clc
dec
dec
xchg
aas
adc
cmp
sub
imull
adc
pushf
imull
inc
add
xor
test
push
shrb
jno
add
gs
xchg
cli
shlb
sbb
sahf
xor
or
es
enter
mov
mov
push
fisubs
cmp
jb
pop
and
mov
push
outsl
lcall
cmp
add
aad
out
fucomip
ss
cmp
pop
stos
rep
add
scas
add
add
into
mov
pop
in
outsb
mov
mov
int
jp
jb
jns
inc
sti
push
loop
xor
push
out
fsubs
pop
nop
and
addr16
mov
ja
lret
add
push
in
repnz
subl
mov
insb
gs
sbbl
xchg
or
sub
xorl
inc
inc
test
scas
mov
ja
sti
dec
in
mov
or
lret
aas
mov
daa
fsubrs
cld
imul
xchg
mov
sar
mov
mov
daa
xor
mov
scas
add
dec
xor
scas
loop
add
in
cld
fisubrl
sbb
lret
movsl
mov
add
add
cmp
sbb
testb
ss
mov
enter
dec
popf
xor
add
sbbl
je
in
outsb
popa
mov
stos
inc
pop
push
sbb
lret
stos
mov
std
sbb
lods
dec
xchg
mov
and
or
fimull
std
andl
or
dec
addr16
ret
inc
out
in
ret
aaa
add
stos
ja
sbb
push
fwait
mov
inc
jb
mov
mov
enter
cs
loopne
aad
pop
aam
stc
xorl
loopne
shll
out
mov
add
add
add
add
push
les
in
lahf
sti
ja
rcll
push
dec
cmpsb
add
scas
add
add
pop
sub
dec
xchg
in
ret
cmp
mov
pop
addr16
dec
lcall
dec
shr
mov
clc
mov
sub
sbb
aad
sahf
out
test
cli
rolb
sahf
pop
imul
clc
movq
es
push
pusha
and
mul
add
out
stc
jge
jno
shll
insb
inc
imul
fdivrp
fmuls
imul
jecxz
int
cwtl
inc
aam
shrb
mov
sub
adc
push
add
pop
cs
sub
mov
pushf
inc
decb
xchg
dec
cmpsb
test
cltd
insb
add
xchg
cmpl
push
loopne
lcall
add
scas
add
add
dec
xchg
mov
jmp
xchg
xchg
data16
lds
cmc
dec
mov
mov
cmp
int3
aaa
jle
inc
sub
jg
jl
push
call
into
sub
js
fnstsw
pushf
push
sti
xor
insl
cmp
mov
mov
dec
cmc
das
je
inc
outsl
adc
int
mov
cmpsl
sub
xor
push
cs
test
jg
push
rclb
sbb
mov
roll
adc
insb
xor
xchg
jmp
mov
mov
leave
xor
movl
add
add
add
test
and
pop
dec
pop
or
pop
stos
cmpsl
add
scas
add
add
shll
cld
cmp
dec
cs
cmpsl
fdivs
mov
cwtl
cmpsl
jo
bound
aaa
mov
shrb
in
jae
pop
jle
leave
sahf
in
sub
mov
jno
cmp
inc
mov
imul
xchg
xor
add
mov
movsb
xor
loope
xchg
inc
xor
xlat
xor
repz
cmp
mov
mov
dec
push
or
ret
and
nop
mov
cmp
push
push
xor
jl
ss
lcall
test
dec
lods
mov
or
add
add
add
add
aam
fnstsw
out
fcmovu
in
fs
pop
test
add
loopne
sub
in
push
arpl
mov
rcll
dec
jg
movsb
pushf
dec
sbb
mov
pop
jb
inc
repz
mov
call
push
out
add
mov
mov
clc
cmp
jnp
imul
loop
xor
jecxz
lods
shl
in
dec
loope
jno
sub
mov
xchg
and
enter
sbb
aam
xor
cmp
enter
push
push
cmp
sbb
aas
sbb
pop
inc
div
or
fadds
push
mov
std
aad
popf
cld
and
jg
adc
pushf
mov
sub
add
sbb
inc
jecxz
mov
cli
loop
pop
pop
test
add
xor
fistl
dec
fs
mov
inc
faddl
insb
cmp
popf
test
xchg
inc
jb
cltd
cmp
cmp
fldt
mov
sbb
dec
mov
out
loop
cld
std
outsl
repz
icebp
jne
xchg
inc
pop
inc
sub
cmp
xor
or
repz
pop
xchg
imul
cmp
roll
aad
and
repnz
push
push
loop
mov
rorl
sbb
jbe
shll
rorl
jo
jne
sub
mov
inc
loop
xor
mov
pop
aam
mov
mov
mov
icebp
and
data16
add
scas
add
add
pushf
call
sbb
bound
mov
inc
sbb
fs
and
push
xor
jg
cmc
test
and
pop
addl
cmpsl
lahf
in
scas
add
shl
jbe
in
dec
sti
int
xor
in
xchg
and
loopne
mov
pop
les
das
and
xor
push
jl
adc
or
lret
xor
jns
lds
add
xchg
fucompp
ds
lods
popa
mov
xchg
xchg
add
pop
push
clc
fxch
mov
mov
rcll
cpuid
inc
in
rcr
add
xlat
repz
das
cli
fists
dec
es
inc
mov
add
scas
add
add
dec
test
cmc
sbbl
cmp
bound
dec
sub
or
mov
add
xor
lods
push
mov
push
inc
jg
push
in
fs
xchg
lods
sbb
repnz
xchg
fs
cmpsb
insl
icebp
jb
test
cs
cmp
movsb
insl
or
sbb
jl
sahf
and
dec
inc
mov
movsl
mov
arpl
xchg
sub
mov
mov
lea
lahf
loop
stos
sbb
mov
rorb
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
cmp
add
add
add
push
outsl
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
