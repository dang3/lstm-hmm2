push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
or
jmp
int
sarl
push
sbb
sbb
js
js
push
js
enter
rcr
fld
pop
push
or
rorb
cmp
lret
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
daa
mov
imul
add
fs
ja
rcrb
xor
nop
xchg
mov
push
and
loopne
push
mov
pop
int
mov
rcrb
adc
cld
mov
call
stos
mov
or
fimull
pop
fsts
jns
push
ljmp
xchg
aas
loope
cmp
out
out
popa
pusha
int3
orl
rcrb
and
fistpl
std
imul
and
stos
jecxz
cmp
add
and
test
push
into
popf
imul
adc
ja
jo
cmc
sahf
jb
ret
inc
imul
and
sub
bound
mov
mov
push
or
push
pop
js
inc
outsl
les
les
orl
pop
mov
stc
addr16
push
push
jmp
pushf
cltd
pop
clc
push
push
fsubr
bound
fldt
std
in
pop
jl
call
adc
inc
pop
fistpl
cmp
and
pusha
xchg
orb
xor
pop
dec
inc
js
lock
mov
gs
cs
mov
jbe
js
jnp
mov
xchg
dec
out
sub
mov
insb
jae
into
rolb
or
loope
sub
mov
in
shrl
out
loopne
aas
and
cmpsb
sbb
push
loope
jecxz
subl
pop
popf
or
mov
add
hlt
jo
push
push
leave
popf
lds
mov
pop
pop
in
inc
repz
fcom
mov
leave
jno
dec
push
and
and
jp
lock
insl
mov
in
arpl
stos
lock
nop
ljmp
add
incb
bound
add
sbb
ficoms
push
mov
mov
stc
loope
and
pushf
push
mov
pusha
xchg
popa
sub
lahf
xchg
out
jl
int
adc
jae
call
repz
xorb
lret
negb
out
pop
sti
jl
and
sbb
mov
scas
fstl
jp
sbb
mov
mov
sarb
repnz
insl
dec
test
out
insb
mov
mov
and
in
mov
push
js
dec
outsl
or
cmp
cmp
dec
jno
adc
lcall
bound
xchg
pop
movsl
pop
jne
mov
or
pop
cwtl
out
adc
inc
pop
lret
loopne
loope
mov
insl
test
sbb
pushf
sub
stos
xchg
add
pop
mov
cli
sub
movsl
lock
push
fcoms
iret
idivb
jmp
fstl
shll
fbstp
mov
jle,pt
loop
jg
jmp
cli
das
sbb
xchg
test
mov
leave
xchg
pop
cmp
lea
sahf
in
je
add
pop
dec
push
call
mov
shlb
ds
ss
jp
cli
mov
es
leave
push
jp
sbb
or
rcrb
rcrb
xor
push
repnz
test
insb
lock
fcom
mov
leave
inc
js
xchg
mov
pop
pop
icebp
and
xlat
push
cmp
fisubrs
push
cmp
xchg
jmp
add
cmp
mov
cmp
xor
dec
into
pusha
call
mov
mov
dec
data16
fs
mov
inc
stc
and
lret
popf
or
adc
mov
jo
inc
push
je
and
sbb
adc
in
add
pop
filds
mov
cmpsl
cmp
adc
lock
cmpsl
pop
jge
adc
outsb
sti
ret
mov
mov
mov
or
dec
aas
mov
sub
rcrl
je
filds
lret
sbb
arpl
and
jp
frstor
add
loopne
mov
lahf
fmull
inc
call
add
or
inc
lock
in
test
inc
add
or
mov
andl
push
sub
jmp
enter
rcl
xlat
xlat
dec
xor
pop
ja
xor
push
js
push
js
push
cltd
xor
ret
push
das
lret
ret
es
mov
sbb
add
jp
xchg
fsubrl
cs
add
inc
push
in
cli
jae
mov
enter
jb
fwait
jns
sub
scas
mov
adc
in
xor
dec
xchg
and
mov
addr16
push
jae
inc
insl
pop
dec
cld
rcrl
sub
xchg
repnz
enter
jmp
aad
ja
xchg
ror
nop
sti
shl
pop
ret
aaa
xchg
jecxz
inc
push
shlb
add
sub
call
insb
addr16
push
data16
stc
or
push
enter
xor
iret
mov
cmp
dec
aas
mov
xchg
inc
ss
lret
test
movsb
and
sub
jns
pop
cli
xchg
mov
add
lret
lods
xor
cmpsl
ljmp
das
mov
mov
add
adc
movsl
cmc
mov
xchg
jmp
shlb
rorb
jecxz
inc
mov
int
lahf
flds
pop
imul
adc
lret
outsl
dec
push
dec
push
mov
sub
sub
leave
and
test
xor
inc
mov
sbb
clc
dec
adc
mov
xor
sbb
test
out
hlt
or
dec
popf
inc
inc
jg
scas
shrl
inc
jle
and
outsb
mov
xor
dec
xchg
cmp
lret
scas
repz
mov
movsl
lret
pop
sbb
iret
xchg
arpl
or
xchg
push
pushf
dec
leave
imul
test
cmp
das
ss
movsl
lods
sub
rcll
mov
and
ret
lretw
mov
dec
jp
and
mov
jno
mov
out
jnp
mov
out
xorb
push
test
fnstcw
dec
pop
cs
cmpsb
push
adc
test
cmp
out
fildl
icebp
lea
push
push
push
lahf
fwait
xor
or
mov
inc
cmc
jle
add
pop
add
icebp
scas
adc
subb
test
xor
gs
mov
or
push
sarl
outsb
mov
mov
in
xchg
std
pushf
inc
addr16
cmp
js
js
shlb
imul
mov
push
xchg
out
jecxz
lock
fistpl
inc
lods
sbb
mov
int3
jns
mov
adc
nop
xor
mov
xor
sahf
sub
adc
and
outsl
jbe
inc
stc
adc
lods
jmp
mov
sub
lods
mov
pop
sahf
lret
xchg
lcall
and
mov
lock
mull
lods
clc
andb
aas
stos
in
shrl
mov
xchg
pop
ljmp
mov
pop
push
ss
mov
int3
inc
cmpsl
pop
mov
shll
jnp
mov
test
add
addr16
jge
xchg
and
mov
pop
sub
scas
pop
sbb
mov
aam
xor
movsb
rolb
rorl
or
inc
push
imul
hlt
sub
lcall
sub
loope
cli
inc
out
negb
cmc
inc
addr16
add
in
cltd
xchg
testl
or
xchg
les
jp
jmp
icebp
punpckldq
or
shl
fildl
sti
pushf
imul
aaa
hlt
cmp
rclb
andb
out
mov
insl
mov
jecxz
inc
ret
shll
aaa
pop
push
insb
sahf
and
inc
je
mov
clc
or
fadds
insl
pushf
ja
into
mov
repz
aam
lahf
pop
jg
jno
mov
xchg
call
dec
xor
push
pop
xlat
sbb
jmp
imul
test
add
mov
push
add
mov
or
cmp
out
mov
addl
sti
dec
xchg
and
mov
outsl
lahf
lret
out
jae
pop
pop
lods
mov
addr16
out
push
dec
out
es
lock
cmc
lret
out
jae
xchg
fnstcw
cmp
fdivl
adc
jo
lods
popa
inc
xchg
add
pop
testl
lahf
and
shll
aas
inc
idiv
jnp
je
jb
pop
sub
ret
ret
cmc
inc
push
xchg
and
xlat
je
sbb
lds
add
adc
dec
in
mov
paddsb
es
push
dec
dec
lahf
es
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
movl
jmp
enter
shrl
mov
das
dec
push
pop
js
push
js
mov
sti
push
divb
xorl
inc
shll
or
enter
incb
jecxz
setbe
sbb
ds
into
fdivr
sbb
sbb
xchg
aaa
insb
add
jae
cld
mov
adcl
or
pop
or
and
or
xor
lea
inc
clc
je
in
jle
out
mov
sbb
add
clc
test
paddsb
push
adc
sbb
les
fcomps
bound
stos
and
sbb
push
pop
push
insl
out
addr16
cmpsl
icebp
inc
jl
inc
push
pop
cmpsb
sbb
inc
dec
loopne
inc
sub
je
sbb
add
icebp
sahf
dec
mov
in
nop
sti
mov
push
mov
les
push
in
enter
mov
in
sub
adc
sarl
push
mov
js,pn
cmpsl
scas
sub
mov
xor
add
movl
inc
mov
dec
push
dec
inc
subl
xchg
mov
lds
and
inc
ss
call
jg
cmp
jns
sbb
in
sbb
imul
clc
sbb
or
shlb
sbbb
or
lcall
dec
das
xchg
dec
out
pop
push
sub
mov
pusha
push
insb
mov
lahf
gs
loop
in
mov
mov
push
sub
jo
add
not
xor
fisubrl
xchg
orb
shlb
sbb
rolb
mov
ja
movsb
push
cmpsl
fs
pop
pop
add
push
dec
das
add
or
mov
mov
aad
je
xchg
xchg
inc
cmp
cmp
stos
mov
int3
sbb
dec
pop
cmp
aas
insl
jp
lea
inc
pop
mov
sub
mov
mov
mov
and
adc
testl
and
imul
xchg
stc
add
fists
cmp
test
imul
adc
dec
pop
add
jge
or
scas
push
in
inc
es
push
jmp
lea
mov
scas
xchg
pop
mov
xchg
mov
pop
lret
repz
int
inc
xchg
int3
aas
sub
jno
mov
or
mov
dec
mov
dec
outsl
add
mov
ljmp
jg
cwtl
inc
or
cli
sahf
shrb
lcall
call
sar
jge
cmp
int
mov
int
inc
xchg
push
aad
jmp
mov
das
lret
xchg
dec
pop
ret
pop
cmovo
cmp
dec
add
loopne
scas
cmp
mov
loop
test
mov
mov
insl
or
sbb
divl
xchg
mov
dec
adc
mov
stos
jbe
aam
pushf
xchg
sbbl
mov
and
inc
dec
loopne
xchg
jne
push
xchg
pop
sub
les
mov
movq
mov
pop
xor
jo
push
lret
lods
outsl
mov
stos
dec
and
mov
or
sbb
pop
sub
leave
xlat
add
push
movsl
dec
stos
fwait
lds
mov
jge
jp
cmc
pop
xor
in
dec
mov
jb
gs
mov
out
insl
mov
push
pop
daa
mov
insb
xor
sub
sbb
jecxz
mov
lret
stos
das
nop
out
and
sbb
into
cs
sbb
sbb
inc
inc
pop
leave
ficoms
mov
and
mov
xlat
ret
shlb
lret
mov
pop
rcr
mov
dec
jge
pop
pusha
mov
jmp
jle
pop
int3
es
cs
insb
push
push
pop
roll
testl
test
hlt
xor
andl
ret
add
clc
push
jno
push
daa
lods
push
adc
or
mov
pop
scas
add
les
pusha
jae
jns
andb
subb
lahf
sbb
out
inc
loopne
push
xchg
cld
popa
or
inc
data16
mov
fs
jge
bound
jge
ret
lods
cli
lret
loopne
mov
stos
jnp
popa
pusha
or
leave
ja
cmc
pop
sahf
stc
imull
outsl
adc
adc
push
xchg
ret
sub
cmpsb
xchg
pop
mov
aaa
test
mov
inc
sahf
mov
cmp
cli
dec
jl
inc
enter
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
movl
jmp
int
cmp
rcr
mov
mov
inc
or
push
js
adc
dec
orb
and
xchg
jb
inc
and
gs
mov
out
out
push
jge
xchg
adc
stos
mov
fstpt
push
mov
push
les
repnz
das
or
orb
and
sub
dec
mov
pop
loop
stos
test
stc
fbstp
cmp
cmpsb
insl
lock
jns
xor
inc
xchg
iret
sbb
push
inc
mov
mov
gs
sbb
int
mov
fists
movsb
push
inc
push
and
insb
or
cmpl
jb
or
pop
mov
and
push
ss
jp
divl
mov
adc
pop
inc
outsb
mov
outsl
jg
mov
mov
mov
jg
hlt
gs
iret
adc
adc
ds
ljmp
sub
mov
push
stc
pop
sub
pop
data16
pop
cmp
subb
mov
pop
test
mov
xchg
loope
push
pop
pop
nop
cwtl
ret
negl
test
jmp
clc
inc
jne
lret
or
add
call
daa
mov
add
mov
jo
arpl
lret
movsl
popf
loopne
xor
testb
inc
repnz
lahf
push
mov
pop
jb
stc
mov
stos
jbe
cmpsb
cmp
dec
stos
push
imul
and
xchg
add
and
pushf
jb
addr16
cld
and
xchg
and
pop
inc
sub
sub
xor
or
cmp
rorl
cmpsb
je
scas
jnp
inc
pop
in
cmc
jp
icebp
jo
sub
fmuls
cmp
cltd
imul
mov
mov
fisttpl
sub
ds
and
pushf
lret
lds
setae
dec
mov
jns
roll
push
pop
call
push
outsl
js
jp
xchg
leave
loopne
cmp
mov
dec
test
imul
sub
scas
push
repnz
and
je
imul
std
pop
ret
scas
mov
or
das
ja
pop
cli
pushf
outsb
inc
mov
and
cmpsb
les
push
mov
andb
sbb
cmpsl
std
ret
int3
xlat
in
outsb
pop
mov
insb
dec
mov
fcmovnb
push
mov
clc
fwait
xchg
sbbb
jnp
jecxz
jecxz
dec
cmpsl
mov
push
subb
adc
mov
mov
jb
les
mov
sbb
les
nop
les
je
dec
jle
dec
ljmp
or
loopne
mov
sub
aas
mov
mov
mov
js
mov
in
testl
jnp
xor
mov
ljmp
mov
sub
jb
mov
cmp
or
inc
lods
rcll
pop
int3
dec
int3
mov
sub
pop
xlat
jae
mov
fmull
inc
mov
mov
filds
cmp
jecxz
jne
or
frstor
and
enter
hlt
andb
mov
xor
xor
sub
pop
xlat
aas
out
in
fistl
out
outsb
xchg
xchg
mov
cmc
and
or
cmpsb
int3
daa
mov
inc
leave
push
jb
xchg
fstps
xor
lds
fldt
add
rcrb
test
ja
mov
popa
adc
push
pusha
cmp
inc
jle
stc
adc
inc
mul
xchg
fadds
cmp
int
jp
push
mov
lret
popa
xor
sub
jp
pusha
stos
push
and
inc
fcomip
aas
subb
mov
ficoml
movsl
push
xor
hlt
mov
setbe
es
insl
jnp
lahf
ret
mov
call
pop
xor
lds
jp
test
inc
outsb
testl
out
andb
fs
insl
ja
insl
cld
imul
jnp
xor
sbbb
adc
mov
push
clc
or
cmp
cltd
movsl
pop
xchg
rolb
jge
jno
sub
adc
in
sub
mov
adc
lods
inc
push
push
mov
or
sbb
mov
je
shll
fimull
out
jecxz,pt
sub
aas
fdivr
mov
out
inc
loopne
cmp
mov
fnsave
pop
dec
inc
rcrl
jg
push
xchg
push
mov
jl
xchg
xchg
shl
inc
rcrb
pop
push
sub
adc
repnz
adc
mov
pop
leave
push
xchg
ret
inc
fadds
lock
jmp
leave
mov
leave
jl
lods
aam
adc
mov
js
push
js
addr16
xchg
stos
mov
mov
out
movsl
hlt
sbb
push
jbe
imul
lret
imul
out
cmc
decl
js
arpl
fisubs
ljmp
push
jae
sub
add
push
push
test
mov
dec
iret
push
call
lds
xor
out
jnp
mov
add
out
lods
je
scas
js
shll
push
add
jp
shrb
out
stc
rol
jbe
ljmp
cwtl
cwtl
idivb
push
inc
push
mov
xor
inc
in
cmp
dec
sbb
adc
addr16
outsl
xchg
ffreep
nop
lret
inc
mov
gs
icebp
test
jne
dec
lret
cli
rorb
fsubl
dec
ljmp
pop
aad
inc
shlb
jne
daa
les
and
add
jno
push
sbbl
div
sar
mov
inc
lods
addl
and
rcrl
pusha
fists
testb
in
icebp
test
ds
pop
push
push
testb
into
test
push
aas
loopne
sub
inc
mov
pop
push
cmpsb
aaa
fcomps
xchg
rcrl
sbb
dec
jnp
mov
add
movsb
add
icebp
sub
aad
scas
xchg
rorl
sub
pop
daa
ljmp
call
sbb
sti
out
fists
test
and
dec
imul
nop
arpl
jecxz
stos
fsubrp
es
mov
fsubl
dec
pop
adc
into
ret
setle
test
sub
hlt
insl
rorb
movl
iret
aas
fldt
movsb
ja
jae
sbb
adc
rol
xchg
fidivrs
addb
popa
and
scas
or
cld
xor
rorb
inc
sbb
dec
pop
out
stos
test
mov
iret
lcall
adc
cmc
fstp
shll
rcrl
lcall
mov
popf
or
ret
jecxz
lock
push
jl
movsl
cmp
lds
dec
pop
ficompl
lds
gs
fiaddl
iret
and
jecxz
pop
inc
repnz
addl
push
add
mov
jo
or
test
stc
sar
cs
add
sarb
mov
jo,pn
xor
pop
mov
or
gs
adc
imul
jne
jne
sbb
loop
les
jp
out
loopne
jl
out
or
out
in
mov
jle
das
pop
ss
pop
cli
pop
sub
mov
xor
pop
jno
fistps
arpl
xlat
jg
push
push
cmpl
outsb
cltd
aas
xchg
stos
mov
cwtl
mov
pop
clc
add
jo
ja
add
mov
and
dec
clc
fnsave
pop
adc
adc
insb
sub
lods
jnp
shl
push
or
mov
sub
add
add
scas
fistl
jnp
jle
imul
cli
adc
cmp
iret
push
sbb
or
mov
push
xchg
lea
or
sbb
xor
jbe
data16
cmpsb
ficompl
sbb
adcl
cld
enter
enter
enter
jns
mov
ja
mov
sub
stc
jns
dec
push
dec
ds
pop
push
out
sbb
push
jbe
fstps
dec
adc
or
repnz
incl
nop
lret
push
jbe
in
push
pop
push
sub
add
repz
cmp
jae
es
adc
test
stc
scas
jl
jp
cwtl
repz
rorb
add
inc
jmp
xchg
dec
dec
lock
insb
clc
mov
sbb
scas
xor
ja
fdivs
xchg
arpl
or
bnd
mov
jmp
repz
or
add
andb
push
icebp
aad
fidivrs
int3
ret
jl
jae
addr16
int
inc
mov
lods
dec
filds
pop
xchg
sbb
nop
pop
out
ljmp
sub
cli
hlt
mov
aas
mov
test
les
rclb
add
lret
leave
xorb
int3
out
xor
dec
clc
sub
pop
lret
xchg
lcall
cmp
shrl
test
add
movsl
scas
mov
cmp
loopne
lahf
xor
arpl
or
outsl
sub
pop
xchg
out
mov
sub
cli
jo
movb
dec
mov
add
cmp
fidivrl
icebp
out
loop
int
mov
jl
js
mov
sub
xchg
mov
xchg
loope
mov
cltd
push
push
push
mov
popa
int
pop
sbb
ret
dec
sub
scas
jne
xor
notb
cmpsb
pop
cmc
and
test
fisubrs
ret
mov
cmp
scas
inc
testl
aad
cmp
jnp
adc
mov
fwait
sub
pop
push
xor
dec
leave
mov
sub
cli
mov
daa
xor
push
mov
sar
pop
mov
sub
push
sbbb
insl
sbb
lret
mov
add
adc
cmp
xchg
in
pop
and
sarb
rorl
aad
aad
cmp
fs
fstp
mov
xor
inc
push
mov
call
add
shrl
xor
lods
push
push
inc
addr16
ds
loope
jp
pop
scas
in
ficoml
and
push
xchg
mov
jbe
sub
mov
hlt
xchg
aam
aad
cwtl
outsl
outsl
popf
adc
mov
sub
shll
jb
or
fucomip
xorb
push
cmp
push
xlat
push
seto
cwtl
push
mov
dec
hlt
cli
mov
je
cmc
xlat
adc
mov
xchg
leave
sbb
push
sahf
adc
mov
icebp
mov
es
or
les
push
add
sub
xchg
mov
idivl
test
and
or
jge
adc
xchg
arpl
jle
add
cmpsl
xchg
mov
neg
jae
fdivrs
inc
pop
pop
mov
sub
loope
stc
int
sub
repz
call
xlat
xor
out
stos
fs
fstpl
or
daa
mov
shlb
cli
mov
fnsave
stos
xchg
ss
sub
pop
jno
ja
fistpll
sub
cmp
xchg
jl
push
imul
adc
inc
lcall
fmull
sbb
sti
mov
adc
das
push
sbb
jmp
mov
sub
push
sbb
in
cltd
aam
ja
push
pushf
bound
iret
mov
push
add
or
cmp
ds
out
imul
les
sbb
inc
xchg
popa
loop
adc
mov
mov
fwait
cmpsb
aad
loope
and
jne
rolb
push
sahf
pop
xor
outsl
dec
lea
add
repnz
aaa
push
pop
cmpsb
je
fstpt
xor
imul
out
das
in
pop
mov
cmpsl
xor
shll
shr
jge
imul
push
pop
mov
loop
push
rorb
hlt
mov
loope
xchg
shrl
xchg
jo
mov
pop
adc
adc
shll
in
mov
cmpsb
push
pop
shrb
fnstsw
mov
fstp
cmp
outsb
lret
jae
clc
add
insl
sub
sbb
cltd
sub
cmp
pop
inc
popa
inc
insb
faddl
push
mov
test
call
test
repnz
lods
clc
ret
sub
fstpt
lds
fcoml
pop
es
xor
scas
stos
into
clc
push
iret
inc
je
in
inc
mov
cltd
repz
dec
mov
lods
data16
mov
jno
pop
imul
arpl
push
xrelease
in
sbb
sub
or
js
mov
push
cli
dec
sub
mov
test
adc
cs
adc
pop
call
mov
ret
rolb
loop
int
in
push
jne
push
pop
pusha
push
je
xchg
add
in
lea
cmp
xchg
sub
jno
shlb
pop
add
repnz
push
jle
popf
jb
popa
jp
roll
jae
sbb
mov
xchg
jno
mov
add
push
movsl
xlat
stc
lock
stc
and
add
or
adc
add
add
aam
std
and
cmpsb
repnz
push
jno
scas
addr16
into
sub
mov
add
repz
xor
je
or
pop
aam
push
xchg
mov
mov
ja
fs
pop
cmpsb
lods
popf
test
add
jb
dec
xchg
sbb
in
sub
jle
push
mov
repnz
or
insb
fidivs
dec
or
mov
lsl
xor
add
mov
add
jmp
cmp
rcl
ror
int
sub
stos
clc
or
js
jl
js
movsb
fdiv
jle
push
neg
repnz
andl
lret
jb
and
cli
jle
jmp
adc
scas
imul
das
adc
int3
jle
xor
cs
sahf
ss
gs
pop
sbb
xchg
loope
dec
inc
mov
lret
icebp
pushf
fwait
scas
jle
test
cmpsl
jns
test
or
fnstcw
orb
inc
inc
jg
test
mov
jnp
pop
lahf
call
or
mov
test
jecxz
mov
or
cmp
in
not
fimull
sbb
push
dec
pop
push
jg
pop
dec
inc
adc
popf
push
add
jae
in
les
jns
jp
inc
dec
std
notb
sub
and
xor
loope
ret
add
sub
iret
mov
adc
std
or
push
aad
pop
inc
push
adc
ds
sub
ds
mov
ja
pop
or
or
mov
adc
push
xchg
out
push
mov
fdivl
js
call
push
dec
test
mov
sbb
fs
iret
sub
shrl
das
int
sub
dec
jo
stc
cmp
push
lret
in
push
dec
add
pushf
andl
dec
dec
jne
and
push
and
sub
gs
les
mov
in
shrl
cmpsl
insl
mov
nop
daa
add
test
push
or
push
mov
out
cmp
xchg
adc
dec
lds
jb
fidivs
push
push
xchg
push
mov
cmp
fsubs
push
mov
and
jb
fs
dec
cmp
pushf
push
push
mov
xchg
lods
xchg
push
stos
mov
call
repz
lods
sub
add
push
dec
sbb
loope
aas
pop
sub
cmp
test
push
fwait
mov
lahf
bound
cli
mov
sbbb
sti
outsl
and
xchg
jmp
cs
enter
push
sub
popa
or
lcall
out
in
adc
je
xchg
jne
lcall
fistps
call
cmp
mov
movsl
imul
ss
mov
out
sbb
jo
test
jge
out
xchg
stos
sub
out
out
jb
jecxz
jb
xorb
cmc
push
into
das
or
scas
mov
pusha
cltd
ljmp
jno
jmp
out
inc
lds
rep
xlat
fldenv
aad
clc
arpl
insl
clc
cmp
push
imul
not
sub
cld
xchg
pusha
bound
mov
pop
xchg
addr16
pop
inc
xor
inc
inc
aam
dec
inc
nop
mov
ljmp
mov
inc
mov
cld
xor
imul
mov
lret
es
inc
fdiv
cmp
imul
aaa
adc
dec
xchg
pop
sar
cli
hlt
fistpll
mov
cmp
xor
add
dec
cmp
cld
mov
adc
test
jmp
cmpsl
jmp
arpl
faddl
lcall
fmull
andb
popa
add
iret
pop
lea
or
adc
lret
lock
lods
sbb
xchg
mov
or
push
adc
mov
push
hlt
lcall
sub
fildl
outsl
sub
clc
in
mov
xchg
pop
sahf
pop
mov
frstor
les
add
add
aam
jno
dec
pop
mov
cld
dec
mov
repnz
iret
mov
lds
sbb
mov
popa
adc
inc
das
aaa
jge
fldl
loopne
push
jae
insl
push
pop
bound
mov
pop
and
pop
mov
fstps
sbb
fld
and
insl
mov
andl
call
in
shl
push
addl
fs
xchg
jmp
xchg
xor
stc
xlat
adc
into
add
add
mov
and
and
adc
ror
mov
push
adc
cmc
sbb
mov
xchg
jp
xor
mov
sub
pop
imul
cmc
cld
sub
add
lods
into
jae
mov
cmp
xchg
test
jnp
mov
iret
xchg
shrl
xor
push
push
int
mov
fcoml
adc
xlat
loopne
in
mov
leave
push
ss
mov
movl
mov
xor
mov
movb
and
jmp
ror
iret
rol
stos
adc
jb
xchg
insb
pop
push
js
push
js
mov
push
loope
push
add
movsb
xor
mov
adc
mov
inc
mov
dec
mov
xchg
xchg
jl
or
mov
stos
test
jo
ss
orb
and
or
insl
cmpsl
in
and
sub
cmp
jecxz
adcb
mov
jmp
xchg
repnz
es
enter
testl
pop
adc
cmc
mov
xchg
lods
mov
repnz
enter
adc
cmp
adc
jge,pn
pop
push
jb
push
mov
xor
stc
ss
push
push
fs
negb
gs
mov
jmp
mov
pop
repnz
mov
push
das
fincstp
inc
enter
cmp
jmp
pop
lds
xor
cmpsb
mov
jb
ja
push
test
mov
push
imul
push
test
add
out
cmp
shrb
or
adc
or
int3
inc
sbb
in
push
outsb
mov
inc
into
rorb
inc
test
add
movl
pushf
ror
je
add
pop
pushf
jnp
push
aad
ljmp
enter
clc
add
out
mov
mov
and
es
dec
and
sbb
lods
or
insl
pusha
cmp
rclb
mov
inc
popa
xchg
pushf
pop
cmpsb
in
lret
int
ss
int
popf
mov
push
lret
iret
aam
jmp
push
into
adc
adc
xchg
add
or
inc
pop
push
jae
movsl
shll
sbb
mov
cmpb
loopne
and
daa
sbb
jb
sub
pop
js
sub
push
icebp
aaa
sar
xchg
imul
addl
push
fstps
imul
in
sbb
push
sti
hlt
push
xchg
mov
lock
xchg
or
std
mov
hlt
into
movl
in
jae
cmpsl
fsubs
mov
ja
popf
cmp
jecxz
adc
pop
je
jmp
push
dec
fdivrp
inc
inc
jmp
dec
lea
push
cmp
pusha
mov
mov
sub
bound
pop
scas
sbb
add
jno
jne
and
jge
stos
sub
ja
add
loopne
jnp
mov
arpl
sbb
push
add
mov
xchg
icebp
push
test
fs
pop
add
lds
mov
mov
jle
or
loopne
out
jbe
push
out
adc
push
cmp
mov
mov
nop
in
mov
leave
jg
adc
dec
fldl
out
hlt
xchg
lcall
and
inc
mov
cli
xchg
inc
xor
test
in
or
lock
push
rorl
cmp
cmp
mov
arpl
xor
test
dec
loopne
xchg
push
cmc
cmpxchg
jge
stos
sahf
popa
lds
adc
mov
mov
lahf
lds
int
push
dec
ret
adc
mov
repnz
jp
add
lcall
pop
dec
out
das
sub
out
cld
sbb
cmp
adc
int
repnz
cmp
add
mov
cmp
or
insl
loop
pusha
imul
xchg
mov
dec
pop
xchg
add
mov
mov
jo
sahf
ret
lcall
inc
lea
xor
pop
aas
and
das
jo
popa
addr16
pop
mov
movsb
les
orb
sub
into
dec
imul
test
ss
rcl
out
or
inc
in
loope
dec
in
add
dec
push
cs
or
int3
fcom
sub
inc
lret
push
mov
inc
inc
push
cmpsb
mov
dec
cwtl
xchg
aaa
push
daa
icebp
adc
or
mov
cwtl
mov
loop
jmp
adc
fidivrs
xchg
mov
mov
loope
std
popf
push
hlt
fistl
adc
sub
xlat
or
jg
cmp
jns
icebp
rcll
cmp
pushf
dec
add
sub
sbbl
in
and
test
xor
jle
aad
rcl
jmp
cli
add
movsl
fldt
pop
lret
leave
jp
sub
lods
pop
cmp
scas
shll
xchg
mov
pop
sbb
dec
outsl
push
pop
sub
in
je
xchg
cmpsl
aad
jle
in
adc
dec
in
xor
clc
loope
sub
ds
adc
jmp
sbb
sbb
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
sub
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
call
jmp
add
jmp
iret
ror
aas
rol
iret
rcll
and
popa
sbb
call
jl
js
movsl
in
bound
pushf
xchg
xchg
enter
mov
mov
lahf
mov
ret
jae
jecxz
push
movsb
mov
into
xlat
and
mov
xor
ja
stos
xorl
test
ret
adc
sbb
dec
and
cmp
push
mov
in
lock
je
push
dec
jp
mov
decb
pushf
out
sbb
cmpsb
stc
cmp
jns
mov
sbb
ret
and
mov
cmp
mov
dec
pop
aas
rep
ret
cmc
cmp
call
adc
xchg
shll
lock
int3
insb
lock
addr16
mov
mov
testb
fidivrl
into
cs
cvtpi2ps
inc
lock
nop
movsl
inc
out
mov
and
pop
sahf
lods
or
inc
daa
out
pop
pop
push
inc
shl
jns
pop
sub
pop
sbb
push
std
push
scas
jmp
lods
xchg
lret
inc
pop
orl
jo
stc
pop
lret
and
sub
enter
sbb
or
sbb
cmp
sbb
call
mov
aad
and
mov
xchg
mov
sbb
mov
xchg
xor
enter
push
test
rolb
cmp
imul
jbe
clc
int
loopne
shlb
mov
pop
data16
fildll
and
cltd
cmp
pushl
inc
fisubl
pop
mov
add
inc
dec
popl
dec
and
cmpsl
cmp
insl
scas
and
push
mov
push
xchg
outsl
vandnps
mov
jecxz
in
xchg
push
jne
fcmovbe
add
pusha
or
pop
test
pop
sbb
out
jae
mov
mov
shr
and
ret
mov
dec
aad
test
push
sbb
dec
push
mov
mov
adc
sti
add
adc
fwait
out
push
xlat
jo
aad
cmp
cs
jle
test
adc
std
fwait
push
dec
xlat
jmp
out
cmpsl
xor
sub
push
inc
test
mov
mov
mov
pushf
test
je
adc
xor
sub
lods
leave
push
inc
in
std
out
icebp
sbb
clc
cmpsl
lods
pop
and
call
push
jnp
nop
jns
jle
mov
mov
jbe
inc
lock
add
sub
mov
test
ljmp
pushf
sbb
jp
push
out
sbb
ljmp
push
xor
sbb
sbb
sbb
lret
mov
add
push
mov
adc
cmc
mov
inc
mov
mov
push
add
or
inc
cmp
push
mov
xchg
stos
lds
jne
xchg
clc
jne
dec
inc
xchg
sbb
popf
sahf
movsb
mov
or
push
xor
inc
jg
imul
out
jnp
out
pushf
inc
push
sahf
inc
stos
out
dec
dec
pop
mov
test
arpl
or
mov
roll
sarl
mov
xchg
std
addr16
fdivl
mov
add
mov
push
jb
xchg
ret
adc
pop
push
pop
repnz
jle
adc
mov
cmp
test
out
xlat
leave
sbb
inc
sahf
cltd
cmpb
sbb
insl
sub
sbb
data16
aam
jmp
hlt
or
std
dec
mov
dec
or
push
cmc
test
mov
dec
popf
test
rorb
sbb
xor
mov
mov
aas
shlb
adc
pop
push
mov
add
sbb
in
sub
sub
pop
sub
cmp
dec
push
lds
and
push
mov
cs
dec
test
xchg
pop
xchg
mov
lock
pushf
push
and
subb
inc
xor
call
enter
iret
sub
or
push
out
sbb
fwait
and
xchg
mov
mov
andl
and
push
aam
pop
gs
call
mov
lahf
sub
bound
xor
aad
jae
push
arpl
cmovg
inc
aaa
xchg
call
adc
je
cli
insb
js
pop
std
xchg
mov
mov
push
cld
inc
sub
mov
cmp
cmpsb
mov
xlat
arpl
adc
scas
sub
insb
sti
sbb
pop
mov
adc
xor
mov
mov
sub
or
jmp
xlat
ror
aas
leave
rcr
rolb
xchg
sbb
js
push
js
je
inc
push
jle
test
in
js
xchg
lret
push
add
xor
mov
cmp
xor
add
pop
add
sbb
mov
adc
stc
in
pop
fs
divb
inc
pop
scas
pusha
fs
jecxz
mov
jb
pop
mov
aam
xchg
add
stc
sbb
in
std
ljmp
mov
int3
fstps
push
aaa
in
test
in
out
jg
sti
hlt
xchg
push
xchg
rol
adc
mov
jmp
cmpsb
pop
sti
xchg
cmc
mov
push
adcb
scas
pop
mov
cmp
lret
jne
lock
popa
in
ss
in
xchg
xchg
sarb
add
cmp
add
mov
fldcw
push
shll
fwait
inc
movsb
and
push
adc
enter
cli
aaa
jo
and
outsb
fs
jnp
into
mov
dec
mov
cmp
cmc
push
popa
inc
fsubrs
dec
loopne
jg
imull
mov
ret
das
inc
psubsb
xchg
js
dec
xor
imul
subl
hlt
fstp
stos
imul
mov
push
hlt
dec
mov
stos
xchg
es
push
stc
push
and
out
mov
mov
rolb
cmpsl
fwait
push
mov
mov
pop
es
sub
and
xchg
add
stos
movsl
jo
daa
in
push
insl
mov
inc
iret
fs
dec
data16
and
fldt
xchg
inc
dec
es
out
pop
or
sbb
into
pop
in
lcall
fbld
lods
add
rcr
push
lds
icebp
bound
fwait
push
imul
daa
in
dec
das
loopne
insb
outsb
rcrl
andb
mov
push
or
jmp
add
gs
push
out
mov
mov
int
xchg
inc
sbb
mov
cs
das
xor
int3
pop
dec
inc
cmp
dec
insl
sbb
and
mov
jecxz
test
sbb
sbb
add
adc
jl
jl
xor
cwtl
addr16
test
test
sub
repnz
cmpsl
fdivp
fnsave
test
pop
imul
or
sub
xchg
bound
push
mov
mov
push
lea
pop
lods
imull
test
and
imul
insl
push
insl
adc
lahf
mov
test
scas
aaa
js
div
xchg
cmp
scas
hlt
or
mov
addr16
inc
xchg
out
std
cmp
dec
das
inc
or
inc
push
dec
scas
es
data16
lods
and
push
pop
push
pop
pop
pop
insb
cmp
jmp
jb
and
lods
mov
shrb
fcmove
cmpsb
cmp
dec
adc
or
cli
test
outsl
sti
pop
mov
insl
sahf
or
movhps
movsb
or
and
aas
test
pop
sbb
out
and
jo
sub
dec
int3
pop
pop
xor
add
sbb
cwtl
add
scas
add
imul
jge
test
mov
adc
clc
push
das
mov
out
adc
sub
pop
rcr
ret
inc
push
insb
push
fwait
inc
cmp
cli
movsl
popf
rclb
gs
push
mov
popf
xor
in
add
cmp
imul
mov
arpl
mov
jns
xchg
movsl
cmc
shr
fisttpl
test
sbb
movsl
arpl
sub
inc
notl
xor
or
mov
or
xor
xchg
cmpsb
cltd
popf
cmp
mov
mov
jge
test
test
or
push
and
into
or
lods
cwtl
inc
in
in
xchg
shll
shrb
mov
pop
call
fidivl
pop
jge
sbb
in
fldt
mov
sahf
jno
xchg
pop
push
mov
xor
mov
inc
enter
jge
adc
enter
add
ja
nop
inc
xchg
stc
push
xchg
pop
push
sub
push
mov
fadds
scas
dec
jne
daa
jmp
mov
pop
dec
jecxz
fadds
es
xchg
inc
loop
pop
sub
push
push
and
pop
lea
xchg
push
lods
cmpsl
mov
add
xchg
xchg
pop
outsl
cltd
ds
push
and
or
mov
xchg
push
add
fsub
push
rclb
add
test
push
cmp
mov
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
jmp
cmp
aad
dec
add
enter
das
js
push
js
imul
push
ss
push
fdiv
js
mov
cmc
loope
xor
and
inc
das
jbe
or
aaa
adc
hlt
cltd
dec
je
int3
mov
call
test
stc
add
push
push
insl
pop
xchg
sub
jg
jg
arpl
mov
inc
jnp
pop
pusha
loope
xor
std
lock
adc
inc
out
out
xorl
shl
shl
jecxz
lret
inc
jns
leave
and
mov
xor
cmp
gs
inc
push
es
cmp
mov
inc
dec
int
jp
and
test
jno
mov
out
test
cmp
jno
scas
and
inc
pop
out
or
in
mov
sbb
fsts
mov
push
mov
dec
mov
mov
ret
stc
jb
pop
into
cmp
dec
out
out
ja
fcompl
sub
aad
mov
sbb
xor
pop
lock
testb
push
into
je
imull
pop
sub
and
mov
imul
shll
dec
or
test
add
or
or
push
inc
dec
hlt
arpl
dec
aaa
push
cmpb
jge
shll
xchg
jb
sar
dec
cli
push
push
ret
stos
cmp
sbb
sbb
inc
ds
mov
leave
nop
pop
dec
ja
inc
add
or
scas
jmp
dec
mov
fildl
dec
bound
mov
lret
movsl
sbb
fstps
or
mov
pop
xchg
jle
mov
repz
sti
rcr
lcall
xchg
mov
xchg
loopne
jbe
and
ffreep
dec
scas
cwtl
and
or
fnop
cmpsb
pop
jecxz
jecxz
xlat
les
in
push
std
lret
testb
rol
jg
outsb
loop
push
movsb
sub
loopne
jl
sahf
shrl
and
outsl
adc
pop
dec
inc
aaa
lods
xchg
or
sub
daa
pusha
jp
aas
cltd
and
push
bound
nop
xorl
push
dec
sbb
pop
xchg
jnp
outsl
mov
repz
std
mov
jne
ret
jle
push
movsl
sbb
dec
mov
shrw
adc
cmc
jns
sahf
fstpt
mov
in
dec
cld
daa
push
fnsave
movsl
imulb
addr16
rolb
loope
sbb
aaa
hlt
xor
add
cmpsl
popf
sahf
leave
push
xorb
add
push
dec
adc
lea
mov
int
inc
inc
jp
or
mov
pop
cmc
cs
jecxz
mov
test
arpl
je
rcrb
push
push
jns
lret
hlt
mov
jne
jl
sbb
test
js
inc
add
test
lea
scas
out
cmc
lret
lahf
cmp
xchg
push
inc
or
bnd
or
iret
cmp
sub
push
sbb
aad
or
in
adc
mov
in
and
xchg
ja
cwtl
mov
mov
xchg
lock
jbe
mov
pop
xchg
sarl
cmp
mov
mov
sbbb
sti
sbb
sub
incl
lret
inc
lods
sbb
jp
add
or
call
add
repz
xchg
fs
add
push
xor
sub
loopne
pop
push
outsb
outsl
sbb
and
cltd
xlat
faddl
push
stos
aad
mov
or
dec
ljmp
cwtl
lock
out
add
cmp
loop
xchg
ret
nop
mov
addr16
lcall
call
xor
add
xchg
movsl
add
xchg
pop
mov
adc
in
xlat
pop
inc
fildll
repz
nop
mov
mov
jecxz
and
push
cmp
push
inc
ret
pop
cmp
mov
cmpsb
orl
sbb
je
pop
xor
push
nop
push
jg
push
cmpsl
lods
push
sub
xorl
xchg
and
jb
loop
movsb
sbb
xor
icebp
imul
pop
push
lock
xchg
lahf
fs
cmc
jecxz
cmp
sbbl
ffree
mov
jle
fsubrl
loope
adc
shr
inc
cwtl
lock
mov
mov
ja
inc
movsb
inc
inc
mov
ret
loop
cmpb
adc
adc
or
mov
cmpsb
outsl
add
lret
aaa
lods
xor
push
dec
add
dec
cwtl
add
xor
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
adcl
add
jmp
enter
rcl
iret
shlb
aad
xor
push
js
push
clc
inc
cmp
push
xor
mov
and
sbb
add
add
movb
xchg
push
rorl
mov
dec
pop
push
push
sbb
imul
push
xchg
or
mov
push
lcall
aad
xchg
push
mov
mov
push
or
xorb
inc
adc
out
cwtl
xchg
or
cmp
cmp
sbb
sahf
and
xor
xor
enter
popa
pop
mov
repz
aam
or
pop
xlat
fdiv
sub
cmp
mov
pop
adc
xchg
sub
sub
rorb
adc
pop
pusha
lea
mov
push
xchg
ljmp
movsl
xchg
pop
in
mov
in
shll
xchg
jl
aad
in
stc
scas
inc
jg
out
call
enter
dec
bound
add
mov
fbstp
movsl
test
cmp
inc
mov
cmc
cmp
mov
incb
int
jnp
mov
sarl
sbb
movsl
andb
inc
shl
testb
or
sarb
movsl
leave
mov
mov
dec
or
bound
mov
pop
cltd
ja
clc
mov
add
inc
lcall
rol
lahf
or
ret
sub
cli
jne
fwait
leave
in
pop
sar
in
lods
xor
in
outsl
dec
fisubrl
dec
nop
sbb
dec
push
movsl
cltd
test
imul
mov
mov
cmp
xchg
daa
xor
ja
stos
lret
jbe
imul
dec
mov
mov
rolb
loop
jb
xlat
pop
push
jmp
inc
lock
xor
push
sub
popa
dec
outsl
mov
push
jno
lahf
repnz
in
jmp
and
inc
cs
inc
int
out
addr16
push
movsb
out
adc
test
popa
cmc
inc
xchg
icebp
xchg
lret
fs
fisttpll
jb
or
push
fisubrl
outsl
imul
push
movsl
pop
pushl
pop
scas
push
jge
adc
pmulhuw
popf
and
jns
dec
fistpll
js
xchg
jne
mov
sub
fcomps
lcall
fsubl
mov
fsubs
into
dec
push
mov
mov
les
xchg
psrlq
cmc
jmp
sbb
cmpb
mov
and
stc
mov
mov
fildll
out
aas
adc
aas
push
clc
push
enter
shl
std
mov
xchg
cmp
mull
dec
mov
pop
out
imul
loope
imulb
lds
inc
add
test
lret
mov
jmp
adc
jge
mov
roll
mov
inc
push
rcr
daa
arpl
xlat
addr16
and
mov
test
sbb
movsb
jae
sub
into
mov
or
ja
cmc
and
movsl
sarb
jns
mov
fcoml
popa
or
mov
jbe
insl
iret
xchg
pop
sub
adc
rclb
xor
add
in
imul
test
cmp
jle
mov
loope
fbld
incb
mov
mov
mov
xor
or
jnp
and
dec
imul
hlt
add
daa
imul
enter
push
cmc
shl
push
cli
sbb
testl
fwait
scas
imul
jb
mov
push
arpl
xlat
rclb
idivb
lcall
jns
xchg
cmpsl
jo
jecxz
jbe
stc
dec
inc
dec
cli
cmp
ds
nop
dec
les
lcall
les
fcmovnbe
adc
loope
adc
ret
rorl
mov
popa
mov
mov
or
pop
nop
les
adcb
add
out
sub
movsl
dec
cmp
cmpsb
adc
jne
insl
mov
int
and
push
sbbl
pop
fimull
adc
flds
sbb
outsb
int
fistpll
jo
das
into
insl
mov
ret
gs
cld
out
mov
icebp
mov
jo
test
mov
idiv
push
std
xchg
pop
pop
mov
push
or
sub
sbb
mov
insb
push
aaa
sarb
aam
icebp
inc
std
stos
or
fsubrl
ret
mov
push
shll
fiadds
sbb
jmp
ret
int3
fcmovbe
rcl
movsl
or
xor
and
js
jns
adc
outsl
cltd
mov
inc
test
dec
and
sti
cmp
jo
jmp
jb
inc
xor
or
andb
fidivrl
cltd
and
icebp
shlb
data16
mov
dec
je
test
mov
cwtl
xor
sahf
pop
xchg
test
pop
inc
movsb
sbb
jae
icebp
dec
xor
repz
movsl
rolb
aas
cwtl
lods
lods
rolw
sub
mov
mov
mov
pop
and
cmp
fnstsw
mov
fbld
jno
mov
cmp
xchg
jl
out
imul
insb
sub
cmpsl
xchg
xor
test
jmp
test
add
jmp
cmpsb
xchg
mov
fcomps
mov
mov
and
pop
add
mov
xor
jmp
fidivrs
call
sbb
cmp
insl
mov
cld
rcl
jg
stc
out
and
mov
arpl
test
inc
push
sub
xchg
mov
xchg
adc
sub
mov
leave
sub
mov
popf
mov
cli
push
in
ljmp
repz
fs
cmc
and
int3
pop
in
pop
addr16
push
xor
add
cmp
dec
xchg
sbb
adc
mov
xlat
es
es
add
dec
aad
mov
add
out
sub
iret
sub
jbe
xchg
or
rcrb
inc
sub
inc
or
cs
jns
sbb
test
mov
repz
cmp
cli
ja
and
sbb
sub
mov
mov
mov
push
cwtl
dec
lock
repnz
fistpll
sbb
xor
push
mov
fcmovb
js
mov
inc
sti
add
push
mull
mov
cmp
ds
or
mulb
fcoms
sub
jae
leave
adc
lods
shrb
jecxz
arpl
into
or
xchg
dec
popf
fiadds
sbb
testl
push
loopne
mov
fadds
fcompl
clc
std
leave
dec
mov
mov
inc
lea
adc
cmp
stos
and
dec
int3
mov
jg
mov
cmpsl
fdivrp
jmp
sbb
repnz
xor
mov
fists
lods
es
cmpb
ret
add
out
mov
shlb
fs
fdivrl
xlat
push
mov
xlat
xchg
adc
push
sarb
enter
adc
jae
lods
es
add
int
pop
add
bound
shlb
add
adc
sarb
popf
sub
lret
lods
cmp
cmp
dec
dec
jl
xchg
add
sahf
dec
mov
cmpsb
rclb
push
rol
and
into
and
test
jo
push
aas
adc
xor
out
mov
xor
lods
add
stos
loopne
arpl
sub
das
data16
rorb
sub
dec
fstpt
mov
dec
repnz
xor
fmuls
jbe
ret
cld
mov
std
adc
cmp
sbb
cltd
adc
int
nop
movsb
xchg
sub
jae
lods
mov
out
ss
jns
push
test
mov
push
sub
js
sbb
inc
movsb
mov
jo
xor
mov
or
lds
sub
jmp
jae
in
mov
xchg
outsl
call
xchg
mov
xchg
and
mov
xchg
sbb
add
cwtl
inc
addr16
mov
pop
or
and
rcl
sub
mov
xor
in
dec
ret
sub
inc
stos
push
andl
inc
sar
negb
and
cmp
jo
and
scas
or
push
sbb
jae
or
xor
pop
dec
sub
mov
sub
jb
push
jmp
addl
je
clc
cmpsl
fiaddl
add
mov
loopne
push
sbb
xchg
xor
fistpll
ljmp
pop
mov
or
lahf
insb
fwait
outsl
mov
scas
dec
jb
sbb
test
dec
cs
lock
out
stc
push
xlat
adc
mov
dec
dec
loop
stc
in
xorl
xchg
jnp
add
cmp
shlb
sbb
leave
in
lea
mov
jmp
int
aas
fcmovbe
leave
aad
or
test
adc
js
push
js
pop
push
add
dec
sub
arpl
jne
mov
imul
insl
jns
popf
ljmp
xor
sahf
fsubp
or
jmp
mov
adc
mov
mov
sub
rcll
cmpsl
jae
push
dec
jnp
lea
rorb
push
jb
or
fdivs
or
rol
and
cmp
mov
adc
sbb
lock
jne
and
mov
mov
dec
jno
mov
fldt
hlt
jo
jecxz
push
cmpb
adc
jns
sarb
dec
aad
pop
dec
or
sbb
adc
adc
es
xchg
movsl
lods
out
jp
bound
and
jb
pop
jns
adc
jp
sub
adc
xor
and
out
sub
dec
cmpsb
pop
or
or
leave
sub
xchg
loop
xchg
cli
jno
aas
shlb
test
jp
bound
mov
ljmp
imul
xor
mov
dec
mov
xchg
cmp
lea
dec
cs
insb
and
mov
pop
pushf
adc
aad
or
mov
jmp
cmpb
sbb
xor
stc
lods
pop
call
and
or
popf
push
push
cmpsl
xchg
in
dec
pop
popl
out
loop
and
xchg
inc
scas
inc
add
imul
adc
mov
insl
add
mov
das
sbb
and
jg
adc
mov
or
pushf
mul
cmp
jns
jbe
out
andnps
loopne
fwait
movsb
lret
xor
cltd
mov
mov
adc
dec
mov
mov
jg
mov
int
mov
in
lods
movsl
push
jno
stos
out
fdivrl
add
ss
mov
inc
stc
stos
hlt
mov
testl
movb
mov
decb
dec
call
lods
jmp
add
clc
cmp
inc
test
jge
push
and
push
pop
cmpl
stos
out
cwtl
mov
add
pusha
lahf
fucomi
add
xchg
pop
push
stos
stos
fidivrl
popl
les
std
pusha
jns
mov
pop
daa
in
mov
jnp
sub
mov
jecxz
inc
jb
mov
adc
mov
sahf
xchg
outsb
jbe
cmc
push
dec
xor
push
dec
push
cltd
or
xchg
xchg
shl
and
mov
cltd
xchg
push
mov
or
mov
pop
pop
pop
pusha
out
or
mov
add
push
stos
mov
inc
pop
mov
push
pop
into
fnstcw
jae
cmpsl
push
dec
jne
ljmp
adc
imul
dec
adc
adcb
subl
mov
push
nop
nop
cmp
dec
push
cwtl
xchg
ret
jmp
sbb
rolb
cmp
repz
sub
adc
pop
pop
daa
lcall
mov
in
mov
aad
mov
mov
dec
jo
aas
mov
lahf
adc
js
les
sbb
cmpsl
or
jbe
pusha
cmc
fisttpll
aad
lock
push
or
or
sub
mov
or
icebp
loopne
dec
ret
loop
adc
xlat
icebp
test
aad
ja
mov
and
jne
fnstcw
mov
ja
pop
sub
lds
lock
dec
mov
push
or
jp
ja
inc
shrl
or
sti
push
adc
std
lea
push
mov
ffree
mov
test
sti
pop
jno
imul
xchg
dec
mov
shll
dec
cld
mov
dec
in
adc
cmp
dec
mov
lret
sbb
adc
out
sub
cmp
mov
xchg
mov
stos
jmp
mov
push
into
out
shl
nop
ret
jmp
movsb
es
jmp
imul
incb
std
pusha
jecxz
stos
leave
mov
mov
xchg
or
jbe
dec
mov
es
sub
lds
pop
mov
push
fnstenv
add
out
testl
sbb
cltd
sbb
mov
push
and
jecxz
popf
pop
dec
jl
cmpsb
aam
mov
outsl
mov
dec
xchg
jb
pop
shl
int
iret
aaa
lods
adc
pop
mov
pop
ffree
push
jno
arpl
adc
inc
fcoml
rorl
add
mov
sbbl
mov
jmp
lret
rcl
ror
fsin
sbb
pop
jmp
ret
js
push
js
pop
testb
add
imul
mov
xor
fbld
shrb
sbb
or
inc
arpl
xchg
cli
ja
dec
jb
jns
push
pushf
mov
cmp
mov
or
mov
insl
inc
inc
fnstenv
mov
insl
jns
or
decl
add
daa
mov
and
pop
lods
lcall
stos
fmull
cli
insl
lea
mov
leave
repz
or
inc
jb
cwtl
stos
pop
mov
aad
aaa
pusha
mov
inc
testb
mov
das
les
leave
into
adc
dec
imul
sahf
icebp
or
sbb
lret
sub
push
aas
xor
or
roll
dec
lds
fbld
cmp
ret
dec
and
negl
decl
pop
data16
mov
push
mov
and
clc
ljmp
dec
out
add
ds
sub
push
enter
jle
clc
aad
jo
lock
clc
repz
sbb
jnp
add
movsl
cs
in
or
push
out
out
mov
or
xchg
lahf
cmp
jbe
jmp
or
jp
shrl
push
or
adc
inc
ret
cmc
scas
fs
adc
pop
notl
xchg
push
push
adc
scas
rclb
jge
xor
rorl
insb
mov
fidivrs
pop
into
mov
pop
shrb
pushf
dec
cmp
addb
enter
out
push
push
out
dec
cmp
xor
inc
dec
scas
lcall
adc
orb
out
ss
mov
cmp
mov
es
nop
xor
jbe
cltd
clc
sbb
lea
dec
lcall
fistpll
in
aas
out
fcomps
or
jecxz
lock
hlt
and
push
push
dec
cmp
in
jg
jne
jb
ss
mov
adc
jnp
lret
inc
int
popa
jl
push
xchg
sub
sub
push
popf
adc
stos
jge
aaa
or
push
push
xchg
mov
aaa
std
rcll
or
into
xchg
xchg
sahf
push
jle
popa
lds
mov
pop
loop
in
repz
in
pop
int3
xlat
add
fldcw
pop
sbb
mov
int3
clc
subl
push
mov
iret
dec
fisubrl
push
aam
cltd
and
jae
xor
add
add
inc
outsb
in
lods
cwtl
xchg
dec
repnz
mov
test
and
in
mov
add
jns
sub
push
mov
les
fwait
mov
addl
insb
mov
out
mov
iret
cli
sub
imul
arpl
mov
fs
xlat
jl
dec
out
bound
add
add
aad
cmp
arpl
jl
mov
out
mov
cmp
stos
fs
pop
ja
daa
sbb
cmc
popf
out
jecxz
pop
les
pushf
shrb
inc
jecxz
adc
mov
inc
hlt
jbe
dec
stc
imul
sahf
and
pop
pop
or
test
repnz
push
add
jo
jg
and
lret
sub
mov
loop
xchg
xor
xor
push
mov
rorl
mov
xchg
das
cmp
insl
push
sbb
rolb
cmp
idivl
mov
into
xor
negb
jp
pop
xlat
test
hlt
inc
mov
pop
cmp
lret
add
mov
aaa
movsl
add
push
lds
leave
lcall
push
shlb
jbe
rorb
sbb
cmc
xchg
gs
add
in
sub
jge
cmp
cli
testl
rol
popa
xor
mov
enter
push
pop
mov
adc
jnp
jle
fpatan
xor
lahf
xchg
jmp
gs
addl
ret
pusha
sbb
aam
shlb
pop
push
cmp
push
inc
adc
cwtl
jge
cmp
xor
pop
in
jae
mov
repnz
xor
push
mov
xchg
inc
mov
popa
int
xchg
outsb
pushf
xchg
inc
sbb
jl
sbb
cmpsb
stos
push
cwtl
ss
xlat
lods
pop
mov
mov
pop
and
lea
mov
inc
adc
mov
sbb
adc
cmp
xchg
mov
int
and
push
cli
sub
mov
cmp
inc
mov
add
adc
cmp
add
test
add
jno
inc
add
jne
push
push
call
mov
dec
mov
jmp
jmp
ret
rcl
rol
into
push
cmc
loope
test
js
push
js
jb
aaa
adc
and
je
pop
mov
pop
dec
add
out
xchg
or
subl
shr
jae
and
jo
or
or
cmp
cli
inc
mov
icebp
out
inc
inc
pop
mov
insb
mov
cmp
jp
int
and
adc
js
int3
pop
inc
lods
loope
ja
repz
adc
imul
imul
movsl
add
jl
je
es
andl
nop
int
mov
fldl
mov
sbb
or
test
inc
aad
dec
mov
sub
imul
loop
xor
stc
pop
int3
insb
lods
cmp
test
mov
std
mov
pop
call
cmp
jle
pop
cmp
cltd
fs
and
insl
cs
outsb
cmpsl
loop
cmpsl
xor
mov
test
or
and
pusha
insb
dec
gs
das
js
ljmp
and
pop
or
in
lea
add
lea
lcall
mov
test
xor
ret
mov
push
pop
jl
adc
cmp
data16
add
rol
neg
movsb
ja
mov
dec
jno
inc
test
adc
jno
andb
push
rcr
cmp
enter
dec
std
lock
ss
cld
jmp
jnp
and
xchg
push
adc
fidivs
sub
dec
adc
sahf
lods
insl
pop
out
nop
jge
add
clts
mov
dec
mov
gs
fistpll
fnstsw
jnp
jmp
xor
stc
aas
add
push
lods
mov
ljmp
inc
loop
inc
mov
roll
int
popf
push
lahf
testl
push
xchg
fisttpll
sbb
imul
inc
scas
inc
sub
mov
mov
push
mov
rclb
test
jno
fidivrs
inc
mov
lret
inc
inc
xchg
insb
and
mov
push
or
lds
mov
neg
xchg
xor
dec
mov
lods
repz
adc
cmc
cmp
mov
cmp
sub
jne
das
pop
pop
xchg
inc
iret
mov
dec
mov
jecxz
jl
cmpsb
je
dec
outsl
add
xchg
add
jecxz
cmovnp
or
adc
fprem
movsb
rol
mov
and
jg
cmp
sub
mov
add
xchg
ja
lret
int
sbb
scas
add
add
mov
cmpl
inc
popa
dec
das
call
or
pop
jl
mov
clc
jbe
cwtl
aam
xor
add
cmpsl
push
jnp
sub
and
lcall
test
repz
loop
ds
and
sbbl
fwait
pop
push
cs
sbb
push
sbb
sub
pop
fisubs
test
jecxz
mov
loop
sbb
adc
jl,pt
shrb
ss
fldl
xor
fidivrl
cwtl
sbb
mov
sbb
pop
stos
iret
push
test
outsb
lret
xchg
pop
xchg
mov
push
in
addb
jl
push
and
fldcw
enter
ficoml
lahf
fmuls
lock
pop
insb
bound
fdivs
pop
testl
mov
jle
test
jb
pop
cmpsl
popl
insl
sub
rcrl
push
in
das
pop
repz
aaa
cli
xchg
lahf
sbb
into
xor
rolb
push
add
mov
mov
mov
mov
lret
popa
movsb
adc
fstl
push
into
mov
cltd
dec
mov
daa
rcrl
test
out
or
mull
xchg
loopne
sub
out
std
mov
cmpsl
push
in
arpl
stc
xor
daa
cmp
std
outsw
pop
addr16
insb
dec
mov
orb
xchg
jnp
decb
jb
sub
shlb
cmp
inc
mov
lods
ljmp
push
pop
addr16
lds
mov
ljmp
cmpsl
xchg
js
stos
jecxz
mov
sar
inc
adc
jno
sbb
push
pop
movsl
jno
add
jne
push
mov
das
iret
js
ret
inc
das
push
mov
shrb
mov
xor
add
jmp
mov
fcmovnbe
hlt
inc
or
sbb
js
push
js
sahf
repz
je
pop
ljmp
add
xor
loope
cmp
jmp
push
adc
frstor
lret
mov
lods
in
adc
and
fdivs
fsubs
mov
ds
int3
sahf
or
loope
push
mov
aas
sbb
rorb
jle
lahf
push
and
jmp
sbb
mov
adc
sbb
into
scas
test
mov
dec
xlat
out
xchg
subl
xor
scas
jl
mov
jecxz
ljmp
jae
mov
in
dec
mov
mov
jecxz
int
push
add
cmp
shlb
cmp
iret
out
je
jle
jle
ss
push
push
push
movsb
adc
add
movsl
pop
xor
xor
cmpl
js
jecxz
dec
lock
out
out
xchg
pop
push
into
std
mov
jno
mov
data16
push
pushw
push
and
ret
sub
mov
jno
test
jle
sbb
push
shl
xor
ljmp
iret
pop
adc
insl
push
sbb
xor
jo
clc
filds
jae
popf
faddl
lahf
jns
cmp
jge
cs
inc
arpl
nop
xchg
test
popf
pop
lret
fnstcw
enter
aaa
enter
jbe
mov
xchg
and
push
iret
or
aam
adc
data16
xor
iret
or
mov
out
adc
lahf
sub
cmpl
loopne
ficomps
pop
sub
pusha
cmpsb
in
rorl
loop
jnp
arpl
lahf
mov
scas
push
outsb
and
pop
xor
data16
lcall
mov
jno
fwait
pop
inc
jo
iret
fwait
add
cmpsb
es
xor
mov
mov
shrb
std
fidivrs
dec
repz
insb
shlb
popf
in
sub
and
lods
mov
subl
xor
aas
pusha
rcr
sar
and
out
push
leave
pop
fs
scas
sbb
loopne
ds
loop
cmp
sti
pop
dec
mov
sub
jg
xor
add
sbbb
add
xchg
jo
je
sub
lock
push
sbb
jg
lcall
punpckhwd
mov
add
mov
xlat
fiaddl
pop
dec
repnz
fadds
imul
xchg
cmpsb
fdivrp
push
sbb
sbb
adc
ret
push
mov
das
cmpsl
data16
or
mov
lods
push
pop
mov
fisttpll
fisubrl
mov
push
push
dec
or
sub
fs
sbb
and
sub
push
mov
jmp
jo
or
repnz
movsl
cmp
pop
loop
mov
in
nop
dec
mov
sbb
xchg
jbe
adc
lcall
movsb
mov
pop
inc
jno
add
pop
divl
stos
rclb
pop
sub
mov
dec
aaa
cmpl
ficompl
dec
out
and
cli
fimull
pusha
and
daa
sub
divb
ja
andb
in
cwtl
mov
add
jno
push
inc
mov
mov
adc
add
lock
cwtl
mov
pop
lahf
int3
adc
rclb
cli
aam
jl
repz
loopne
sbb
insl
cltd
mov
mov
andl
or
mov
cli
arpl
mov
ds
shlb
pop
xchg
mov
jne
aad
cltd
cmp
xor
std
js
inc
shr
xchg
xchg
push
and
outsb
mov
jge
mov
icebp
je
inc
push
out
sbb
or
out
cli
js
call
or
push
enter
xor
cmpsl
aaa
dec
jae
hlt
and
add
sbb
sub
pop
repnz
push
xor
cld
iret
mov
mov
test
jg
cs
ds
repnz
xchg
not
pop
cld
repnz
aaa
sti
pop
jecxz
mov
pop
jle
jge
daa
imulb
push
in
outsb
xchg
sbb
jb
mov
int3
or
mov
xor
inc
mov
int
or
mov
pop
fldcw
shr
ret
push
dec
mov
adc
dec
pushf
arpl
mov
fdivrl
daa
lods
ds
sbb
jecxz
push
ret
ret
daa
lods
outsb
sbb
dec
inc
fdivrl
movsl
add
es
push
gs
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
rcrl
fwait
inc
dec
int
js
jl
js
es
les
ficomps
outsb
or
int3
jnp
mov
cwtl
adc
stc
ss
adc
push
pop
xchg
movsb
sahf
cmpl
adc
or
mov
add
icebp
inc
rcll
into
js
scas
mov
lods
lock
ds
or
scas
cmp
shl
cmpsb
mov
int
imul
or
cmp
or
add
jbe
xchg
pop
add
pop
jnp
dec
loopne
lret
dec
cli
xchg
push
movsl
jo
scas
add
sbb
push
dec
lea
push
adc
add
je
sbb
dec
lret
rclb
mov
sbb
pop
add
outsb
out
xchg
icebp
sbb
mov
jecxz
rclb
xor
mov
adc
pop
or
daa
dec
lcall
mov
push
and
and
aad
fcmovne
or
mov
sub
mov
pop
int3
in
push
outsl
jbe
cltd
sub
popf
xor
xchg
gs
repz
add
cwtl
pop
xchg
stos
or
pop
jb
das
ja
inc
mov
js
out
xchg
push
cwtl
xchg
push
dec
pop
xor
leave
cmp
sti
pop
int
int3
imul
in
aad
xor
scas
cld
push
ss
mov
pop
mov
sub
pusha
loope
xor
jno
push
enter
outsl
add
dec
pop
lcall
jb
xchg
lods
inc
pop
divps
pop
jmp
movsb
stos
xchg
lods
or
nop
push
lea
aaa
repz
mov
fadd
pop
ljmp
std
xchg
lock
dec
out
int3
xor
mov
cli
cmpsb
and
cs
das
sub
popa
out
in
lock
jo
xlat
inc
mov
out
data16
mov
jns
mov
cmpsb
loop
xchg
cmp
pop
outsl
loope
fs
mov
pop
leave
xchg
sbb
mov
pusha
pop
and
cli
gs
xchg
jae
pop
ds
jl
sbb
adc
sub
push
add
scas
dec
cs
mov
cltd
adc
leave
jnp
clc
ljmp
jns
xchg
mov
js
das
rorb
mov
dec
jnp
inc
cmc
cmpsl
dec
aad
sub
mov
and
mov
in
cmpsb
mov
xor
lods
or
andb
std
mov
sub
outsl
xchg
imul
mov
cld
ss
and
fisttpll
leave
cmp
popf
les
push
pusha
arpl
cltd
sti
mov
inc
nop
lcall
sahf
pusha
push
add
std
movsl
xlat
hlt
xchg
cmp
mov
das
loopne
xor
mov
xor
fmulp
loopne
sbb
pop
mov
push
jl
cmp
cmp
cmp
fsts
add
ret
jae
pop
and
push
fists
adc
push
lods
in
xorb
stos
clc
mov
in
jge
mov
cwtl
ret
out
or
outsl
or
sub
outsb
xor
xchg
movsb
mov
dec
push
fisubs
enter
push
bswap
jnp
add
mov
jecxz
sbb
mov
leave
or
nop
sub
xor
sbb
sbb
jbe
out
test
cwtl
imul
pop
jg
inc
ret
pop
sti
nop
lret
gs
or
or
ja
inc
jle
dec
sarb
nop
adc
or
mov
int3
out
mov
xchg
popf
pop
test
pop
cmp
stc
and
xchg
sub
ja
add
pop
jne
in
jns
jne
repnz
xorb
rcr
xlat
push
stos
and
sub
inc
push
pop
xor
and
cltd
aad
add
in
jg
cmp
jnp
cmpsl
jle
inc
ret
inc
andl
gs
cmp
into
mov
and
sub
stos
lcall
adc
mov
mov
rolb
and
gs
mov
mov
pop
aam
add
pop
shrl
xor
ja
inc
cmp
cli
sbb
inc
das
in
outsb
adc
ds
push
into
sub
scas
push
out
push
inc
lea
lret
push
je
cmpsb
sub
cli
and
sbb
fisttps
sub
mov
sbb
outsb
shr
xor
lahf
jg
popa
push
adc
and
movsb
push
jmp
pop
mov
popa
stc
mov
mov
mov
jmp
ror
ror
fcmovu
aas
scas
push
andl
xor
push
js
sub
in
and
cltd
fistl
sub
orb
push
icebp
jge
insb
add
and
cmc
ljmp
pop
out
pop
fldcw
jecxz
jne
loop
lret
int
mov
in
cltd
pusha
and
rorl
les
lods
mov
lds
push
jl
psrlq
idiv
xlat
sub
push
mov
dec
fs
pop
test
push
imul
ds
cwtl
out
loope
test
mov
repz
out
inc
cmpsl
push
lds
and
cmp
leave
int3
and
jecxz
jnp
mov
pop
and
push
mov
mov
aam
lret
jg
ljmp
aaa
pop
outsb
jne
in
pop
repz
loopne
pop
jae
in
ljmp
inc
ja
popa
movsb
test
mov
pushf
jmp
fsubr
ret
adc
add
loop
lcall
cmp
jnp
jno
push
cmpsl
int
mov
in
jo
cmp
dec
test
jnp
inc
inc
lcall
ret
inc
aaa
mov
sbb
pop
movsl
sbb
add
dec
or
jo
arpl
pop
mov
and
push
push
xchg
sbb
sbb
xchg
out
pop
je
mov
jb
xchg
sub
and
adc
jge
clc
and
outsb
gs
out
dec
addb
jne
sub
add
out
in
cld
pop
xchg
ret
add
adc
push
adc
inc
push
adc
sub
adc
insb
popf
mov
push
sbb
inc
xchg
ret
movsb
jnp
mov
or
cs
fdivrl
cmp
in
and
aad
out
insl
into
loop
xchg
fldt
mov
into
pop
lcall
jno
or
mov
ljmp
jmp
idivl
out
arpl
shlb
ret
les
es
pop
inc
cwtl
addb
add
sub
enter
push
add
mov
insl
push
stos
jnp
pop
les
rcrb
sub
out
out
jns
adc
testb
incl
test
aam
dec
dec
frstor
pop
das
arpl
cmp
icebp
mov
push
mov
cs
or
push
add
lcall
inc
xchg
imul
fldl
jge
je
cmp
dec
adc
lcall
imul
pop
push
or
pushf
mov
cmp
in
push
sarb
adc
xor
jmp
test
xorb
popf
cli
fmuls
mov
mov
test
or
jno
add
ds
mov
and
pop
adc
outsb
cmpsb
add
pop
in
push
iret
js
sub
call
push
pop
add
fdivs
js
push
popa
sbb
xchg
mov
sbb
jecxz
xor
inc
aam
andl
and
mov
lods
into
lahf
and
nop
mov
or
jg
fadd
adc
fs
pop
sbb
xorb
inc
outsb
mov
lods
cmp
int
mov
or
stc
add
mov
insl
inc
lea
push
sbb
std
in
inc
push
ffree
lret
shll
cmpsl
incb
pop
cmp
push
push
stc
hlt
dec
test
jbe
lret
jmp
mov
int
into
pop
mov
call
cs
push
push
mov
stos
jo
test
idivb
lcall
xor
rclb
ds
xor
pushf
dec
mov
movsl
rorb
ret
lods
fists
and
xchg
jmp
jno
and
out
dec
cmp
out
rcll
jp
or
fcom
and
jbe
in
jg
pop
pop
shrb
pop
cmp
ret
cmp
aaa
ja
rorl
fidivrl
and
in
loope
sarl
push
xchg
or
xchg
jmp
ss
push
or
stos
out
sub
data16
push
int
push
lods
inc
dec
mov
jae
ljmp
shll
sbb
shll
xor
cmpl
scas
push
test
cmpsb
inc
inc
sbb
fs
mov
dec
mov
mov
mov
jmp
int
rcr
rol
fxch
cmp
add
cmpsb
fstpt
push
js
loop
mov
and
dec
pop
fldcw
repnz
ljmp
rolb
adc
rcr
fs
jle
jnp
mov
push
mov
push
or
push
inc
xchg
jp
in
sub
fwait
push
xchg
xchg
dec
in
out
lcall
scas
mov
mov
mov
in
lea
dec
pop
movsl
scas
lahf
das
stos
mov
cmpl
sbb
or
mov
cmpsb
or
pop
push
push
pop
sbb
out
imul
iret
mov
mov
xchg
aaa
adcl
iret
mov
mov
repnz
pushf
cs
add
dec
sub
dec
mov
cltd
int
cmp
xchg
test
xchg
stos
adcb
add
cli
aaa
fadds
cmp
xor
pusha
aam
dec
dec
push
insb
or
lods
push
aaa
fs
xchg
repnz
sbb
loopne
adc
or
pusha
in
cmc
mov
insl
push
push
and
enter
push
bnd
xchg
fiaddl
adc
mov
pop
cmpsb
mov
sti
test
ljmp
inc
rcrl
movsb
mov
sbb
push
dec
out
cmpsl
lods
push
cmp
sbb
int
pop
sti
and
push
rcrb
mov
jo
loop
ja
into
dec
popf
arpl
sub
xor
adc
jmp
xor
sarl
xor
jl
xchg
mov
xlat
mov
subb
fwait
sbb
stos
inc
cs
daa
mov
sub
rcl
sarl
aas
sbb
faddl
and
and
adc
pop
dec
int3
mov
adc
inc
test
dec
cmp
fsts
sub
jo
xchg
mov
adc
stos
pop
lcall
jo
ja
xchg
jge
add
mov
leave
addr16
mov
sti
xlat
xchg
sti
ljmp
push
jb
pop
adc
or
fnsave
dec
call
mov
hlt
test
insl
mov
push
nop
push
test
xchg
mov
lahf
ret
test
clc
das
into
adc
mov
jb
ljmp
push
ljmp
fidivl
out
lret
mov
ftst
imul
add
sub
sbb
adc
in
xchg
stc
push
sub
pop
xor
xchg
cli
data16
popf
dec
jle
cld
les
aam
loop
jle
push
ja
jno
das
inc
scas
aaa
leave
and
js
mov
fs
xor
or
sub
addr16
pop
cwtl
popf
sbb
test
mov
mov
inc
outsb
icebp
xchg
xor
xor
test
popa
mov
ja
aas
jns
mov
cmp
test
std
and
dec
lahf
xor
xor
insb
inc
in
push
lds
sub
add
movsb
inc
adc
pop
jbe
push
pop
fisubl
pop
dec
cmc
mov
leave
arpl
in
sbb
push
aam
cltd
data16
jo
js
addr16
xchg
jnp
sub
sbb
int
mov
push
roll
filds
mov
daa
sub
xlat
adc
dec
cmp
dec
daa
add
das
xchg
ret
cld
push
add
cmp
shlb
bound
inc
repz
sbb
daa
nop
mov
sahf
lds
lea
inc
ds
push
cmp
cmpsb
mov
out
mov
in
ljmp
cmp
lret
sti
rolb
aam
hlt
jl
inc
sbb
pushf
test
pop
inc
mov
test
jnp
ljmp
xorl
pop
aas
inc
dec
fistps
pushf
dec
arpl
in
rcrb
sub
dec
stc
inc
shl
std
dec
repz
fidivs
notb
test
or
xlat
add
lods
lea
push
mov
int
jno
lret
push
jp
jns
and
fisubs
mov
sub
in
sti
popa
repnz
or
bound
cmpsl
cltd
push
inc
popf
sti
aad
js
lock
mov
daa
add
sahf
mov
in
stos
or
and
lock
push
mov
or
mov
inc
mov
ret
jg
rolb
xor
jmp
xlat
xlat
iret
into
iret
aad
cmpsl
in
in
sahf
xor
js
jl
js
inc
pop
and
mov
and
scas
inc
xchg
inc
ja
les
cmpb
cmpsl
sub
das
sbb
loop
pop
mov
ss
outsl
xchg
les
pop
cmp
loop
fwait
ret
mov
stos
stos
in
dec
cli
outsl
sti
out
xor
ljmp
pop
pop
xorl
xor
int3
cmpsl
dec
adcb
push
aaa
les
push
gs
add
scas
sbb
movsb
into
subl
dec
dec
jecxz
insl
and
rcll
lock
pop
sub
or
les
leave
mov
in
imul
xchg
sub
fiaddl
pop
xchg
jg
iret
pushf
nop
in
shll
popa
test
mov
xor
aaa
adc
xchg
mov
int3
ret
inc
xchg
pop
dec
call
cltd
jl
and
sbb
push
dec
mov
pop
call
adc
int
jo
movsl
jb
ss
push
inc
adc
popa
mov
call
js
test
pop
add
cmp
call
or
jb
jl
xchg
fs
dec
cmp
sub
movsb
sbb
pop
push
mov
lds
sbb
gs
xchg
out
ror
and
and
inc
adc
rep
cltd
fwait
mov
scas
ret
jnp
mov
ret
mov
push
mov
inc
mov
sbb
sub
fstps
scas
jne
popf
inc
mov
and
jecxz
sbb
push
xchg
shll
mov
leave
sub
sbb
clc
ljmp
icebp
mov
stc
je
mov
jo
jecxz
xor
mov
push
pop
push
stc
insb
mov
jne
lret
sub
dec
and
imul
iret
mov
mov
fnstsw
jle
xchg
out
das
pop
adc
call
movsb
cmp
aas
pop
ss
sub
jbe
dec
or
das
negb
mov
push
cld
in
imul
push
mov
cmp
lret
outsb
mov
movhps
sti
adc
dec
cld
or
xor
int3
sbb
mov
push
rcll
xchg
or
dec
xor
pop
cmp
adc
sub
fistpl
pop
dec
mov
xchg
jecxz
dec
ret
pushf
out
nop
mov
cmp
xchg
iret
lret
dec
divl
cmp
ja
mov
pushf
xchg
lods
fucomi
es
add
pop
mov
mov
mov
scas
loop
popf
insl
jmp
out
insb
ja
imul
fisubrl
or
aad
sbb
je
and
xor
shrl
dec
in
cli
les
iret
jns
jmp
mov
dec
cwtl
sub
insl
loopne
rorl
scas
stc
jno
push
fldcw
push
aaa
jbe
insl
cwtl
mov
outsl
outsl
in
cmc
xchg
aas
lcall
mov
dec
cmpsb
test
pop
cmp
jne
push
je
mov
lret
scas
inc
push
mov
mov
ja
dec
mov
jecxz
js
addl
mov
pusha
repz
cmp
jg
dec
loopne
or
movsl
push
mov
mov
mov
add
mov
jg
add
and
cmp
rorl
jecxz
ret
cmp
stos
lock
add
inc
pop
pop
loope
mov
cmp
add
ficoml
add
xchg
jne,pn
sbb
mov
orl
push
push
fisubrs
xor
in
jmp
inc
fidivl
xchg
add
imul
fpatan
xchg
adc
push
cmp
dec
test
bound
cmp
push
mov
daa
jnp
push
xchg
pop
scas
push
lcall
pop
adc
enter
jl
int
lods
lock
pop
mov
insl
cmpsb
xchg
scas
lahf
mov
cltd
xor
stos
mov
cld
leave
incl
xchg
lret
fnstsw
sbb
aam
mov
jmp
pop
mov
outsb
dec
cltd
pop
mov
jnp
add
test
mov
push
or
pop
mov
popf
fildll
test
imul
cltd
inc
mov
inc
sub
ja
int
loope
imul
jns
push
movsl
popa
iret
test
dec
dec
hlt
pop
in
popf
sbb
add
outsl
jne
jno
ljmp
add
jns
pop
adc
mov
incb
jmp
rol
ds
lret
aaa
aas
push
cs
mov
push
and
js
jl
js
jg
and
inc
jle
stos
xchg
adc
sti
push
inc
jmp
pop
dec
mov
inc
jne
push
or
lahf
outsl
sbb
mov
in
add
ficoms
cli
jnp
cld
add
mov
pop
jne
xor
push
jle
repz
jno
jno
mov
mov
jno
stos
rcll
or
mov
lds
push
imul
popf
cld
xchg
jg
scas
scas
orb
scas
pop
cli
out
pop
pop
inc
lods
ret
lret
jecxz
stos
aam
pop
dec
push
or
fs
scas
or
out
and
xor
jbe
aam
pop
xor
xchg
outsl
and
subps
lret
es
xchg
cmp
aaa
pop
incl
cmp
adc
adc
lahf
addl
mov
ja
dec
dec
xchg
dec
test
popf
adc
jb
cld
jecxz
out
test
bnd
push
jecxz
arpl
inc
adc
rol
in
xor
adc
adc
sub
jmp
mov
loope
adc
in
add
mov
mov
sub
jnp
inc
movsl
sahf
in
ret
les
out
mov
lret
nop
adc
sahf
int3
mov
push
mov
jo
cmp
leave
aaa
mov
dec
sbb
mov
ret
sbb
pop
pushl
add
stos
jmp
push
fmuls
movsl
test
lea
sub
jg
and
xchg
je
out
scas
and
push
cmp
sub
mov
or
xchg
pushf
or
clc
arpl
leave
fmull
fs
adc
sub
imul
clc
mov
fwait
sbb
in
fimuls
jmp
mov
adc
ret
xor
out
push
xor
jns
mov
push
loopne
mov
mov
sbb
xchg
and
xchg
mov
dec
movsb
add
cmc
test
insl
sti
sbb
movsb
and
push
mov
sbb
push
mov
and
pop
sub
addr16
dec
fwait
jns
cmpsb
fwait
fwait
cmp
push
jne
aas
dec
mov
and
jnp
lock
or
xor
rcll
and
cmc
sar
rcll
lahf
cmc
mov
inc
ret
mov
and
or
jmp
rcll
jno
or
mov
popf
inc
xchg
xor
push
sub
test
mov
shl
push
ds
add
adc
and
andl
shlb
pop
xor
outsb
mov
repz
mov
sbb
test
mov
fs
cmc
pop
cltd
les
cmp
and
sar
adc
ret
pushf
repnz
mov
mov
das
or
out
bound
out
pop
popl
out
lret
fstps
sbb
mov
adc
loop
adc
pop
xlat
aaa
addr16
mov
into
test
inc
stc
out
shll
xor
add
lea
sub
cmp
stos
cmp
clc
push
lods
gs
xchg
loop
push
mov
insl
inc
xor
ljmp
sub
in
sbb
iret
jns
push
cmp
in
mov
adc
mov
adc
inc
mov
out
xor
into
in
push
repnz
mov
iret
mov
or
das
and
ror
mov
xor
and
hlt
add
fidivrl
call
push
xor
aad
push
mov
roll
sbbl
mov
and
rolb
inc
scas
jmp
jno
cmp
div
ss
jbe
add
mov
xchg
pop
mov
outsl
dec
push
or
and
aaa
push
cmp
push
xchg
mov
sub
push
mov
inc
sub
leave
mov
sbb
testl
roll
sbb
pop
in
xor
lds
cmp
adc
mov
xor
in
xor
inc
mov
add
fidivl
out
ret
lret
call
cmp
jecxz
inc
jne
icebp
add
push
jle
ss
adc
pop
pop
push
xor
aad
insl
mov
les
movsb
ficomps
push
add
add
rcrl
fimuls
lds
mov
loope
outsl
nop
in
cmpl
imul
ficompl
jl
lahf
mov
repz
je
lea
push
mov
xor
add
push
jmp
aas
int
rcr
lret
aad
inc
sbb
ljmp
push
js
jb
popa
mov
sub
addr16
iret
ja
sub
iret
push
mov
sub
push
push
mov
das
in
out
fcompl
je
ret
sahf
pop
push
mov
jmp
push
cmp
das
imul
bound
cmpsl
test
lods
in
inc
mov
and
inc
xchg
pop
loopne
lahf
addr16
dec
xor
pop
sub
add
lods
ret
lahf
bound
cmp
sub
mov
and
out
mov
jmp
adc
fwait
lds
lock
ljmp
jnp
test
or
or
pop
shlb
aas
or
popf
arpl
mov
add
jmp
sub
sbb
sarl
cmpsb
ficoml
push
xchg
ficomps
shlw
frstor
mov
sub
and
enter
cmp
arpl
in
out
les
popa
inc
repz
jb
rcll
ret
fisttpll
rcr
cltd
jnp
sbb
add
lods
movsl
iret
mov
in
mov
rorb
mov
push
xchg
or
cmpsl
push
call
xchg
aad
push
sub
xchg
icebp
xchg
dec
adc
cmp
mov
cld
cli
jecxz
pop
xchg
mov
cmovg
dec
mov
cli
mov
push
adc
mov
pop
pop
push
cmpsb
leave
sbb
out
push
push
imul
repnz
xor
pop
fucom
xchg
and
adc
stos
aas
pop
roll
sbb
shlb
cs
add
adc
sub
cmp
sub
pop
shlb
push
je
lea
jecxz
mov
xchg
in
iret
je
mov
sub
dec
mov
cwtl
rol
pop
scas
cmp
icebp
nop
packuswb
ficoml
adc
fidivl
scas
mov
sub
xchg
inc
xchg
sbb
mov
cs
pop
mov
adc
fcmovnbe
xchg
daa
adc
mov
cli
cmp
jbe
add
sbb
mov
insb
adc
jmp
fisubs
xor
jge
sub
cmc
lock
lds
add
daa
rcll
push
jne
mov
xchg
and
idiv
popf
packssdw
cmp
jle
mov
inc
outsl
and
adc
jmp
mov
dec
leave
in
add
mov
mov
xor
pop
mov
jb
clc
into
cwtl
mov
dec
insb
cs
es
xor
enter
addb
and
lods
repnz
cmpsb
push
roll
leave
mov
push
in
push
xchg
pop
adc
lock
jp
mov
push
lret
xchg
pop
aad
xchg
mov
mov
sub
data16
xchg
xchg
add
imul
daa
scas
jae
xchg
jp
cmp
lock
dec
mov
in
and
add
sbb
xchg
in
cmp
pop
cmc
dec
lock
jae
not
inc
xlat
xlat
xor
sub
sub
dec
add
aaa
xor
inc
lcall
fwait
dec
fucomp
ret
cmp
cmp
cmp
enter
in
fldt
sub
stos
xor
mov
daa
xchg
or
xchg
rol
sarl
pushf
rcl
les
stc
mov
out
jle
es
stc
daa
pop
sti
das
jne
lahf
test
jo
sbb
cmp
pushf
inc
data16
push
rcll
sti
ss
mov
inc
xor
rolb
fldcw
sub
in
cwtl
cld
xchg
inc
adc
mov
pushf
pushf
lcall
nop
mov
fcompl
sub
fcoml
jns
loop
mov
mov
fs
mov
or
pop
add
ja
lods
jne
imul
sti
loopne
cmp
cmpsb
sti
jl
scas
cmp
mov
aam
jge
sahf
stos
mov
and
cmpsl
lcall
add
sbb
and
add
mov
addb
adc
scas
dec
adc
nop
mov
ret
inc
mov
inc
int
push
inc
out
sub
cmc
adc
in
pop
push
pushf
pushf
cmp
sahf
push
dec
pushl
and
jge
gs
in
xchg
dec
cs
cld
lods
and
mov
push
jae
add
rolb
and
mov
aam
sbb
dec
mov
fstl
jnp
mov
cmp
insl
push
subl
call
add
push
add
ror
ror
rcl
lret
rol
into
lahf
adc
aas
fsubrp
js
push
js
iret
mov
mov
dec
mov
inc
test
sahf
jg
push
mov
popa
je
adcb
out
cmpsl
fadds
das
icebp
lcall
es
sbb
mov
ja
jno
or
frndint
imul
push
nop
gs
out
pop
int3
out
and
mov
xchg
iret
push
mov
xchg
fidivrs
and
xorb
sbb
mov
xchg
sub
sub
or
loopne
sbb
leave
mov
inc
fwait
xor
outsl
sub
pop
cltd
jb
es
sbb
jmp
add
iret
push
leave
test
in
jg
dec
mov
jae
mov
movsb
dec
das
shrb
adc
cmp
jmp
push
mov
mov
push
add
jbe
jno
orl
cli
loopne
ljmp
and
sub
int3
mov
mov
xor
fs
xor
jno
sub
inc
xor
inc
or
fcmovbe
ds
jmp
cld
loop
imul
insb
xor
xchg
jbe
aam
pop
ret
sbb
and
in
add
data16
icebp
lods
mov
push
lods
mov
sub
test
inc
push
sbb
inc
popa
fidivrs
aas
fnstcw
stos
sar
mov
fcomps
scas
sub
clc
imul
pop
jnp
testb
adc
mov
push
stos
inc
lds
pusha
into
cli
jmp
ds
xor
daa
push
ret
xchg
cmpsb
push
sub
into
iret
cmp
xchg
mov
aam
test
add
pop
mov
push
push
dec
loop
adc
xor
arpl
cmp
fsubl
sti
jg
sti
push
repz
sbb
or
fisttpll
inc
jl
stos
and
ret
xchg
add
ja
pop
int
and
push
jbe
dec
sbb
ret
mov
js
adc
add
or
push
and
test
pushf
mov
imull
idivl
pop
xlat
dec
repz
and
push
push
sbb
cmc
adc
push
scas
jnp
inc
outsl
ds
xchg
cld
pop
cmpsb
outsl
cmp
mov
pop
lahf
mov
or
xchg
dec
push
jg
inc
mov
mov
push
sbb
jne
sub
push
jae
enter
jl
sub
xchg
mov
sub
scas
pop
add
rorb
xor
movb
es
inc
scas
cmp
cmp
nop
jns
dec
xor
sbb
sbb
xchg
push
pusha
loope
andl
mov
sub
jb
or
ret
scas
or
dec
subb
fldcw
cmc
xor
in
rcr
mov
add
push
jne
lods
xor
popa
cld
push
fstps
inc
pop
lods
push
mov
pop
jo
mov
test
lcall
or
pop
dec
push
addr16
mov
mov
jecxz
mov
adc
xlat
pusha
scas
sbbl
sbb
inc
jg,pt
mov
stc
jo
in
jb
push
sbb
ljmp
mov
push
sbb
arpl
push
into
jecxz
ret
adc
fwait
jl
xchg
lret
lret
cmp
jmp
mov
push
ljmp
xor
mov
in
iret
and
movsb
pop
aam
pop
dec
inc
inc
ds
dec
clc
jns
push
imul
lret
es
xor
pop
sti
cmc
mov
rclb
andb
lods
or
or
cmp
je
sahf
jl
dec
and
lds
mov
or
out
xor
test
clc
cwtl
aas
mov
clc
shrb
inc
push
and
out
sub
cmpsb
xchg
cmp
add
and
adc
xchg
jne
jmp
ljmp
adc
test
bnd
test
dec
sub
es
aad
xchg
add
leave
push
mov
mov
adc
mov
jbe
pop
ja
xchg
sbb
push
nop
push
rcr
jp
repnz
and
cs
dec
or
sub
pushf
or
lea
mov
or
pop
cli
js,pn
lcall
add
dec
cs
lds
push
out
mov
repnz
inc
call
add
pushl
jmp
ret
ret
leave
lret
ror
cmpsb
cmc
pop
mov
push
js
loop
shlb
adc
stc
leave
jo
jno
aas
into
test
mov
ror
sub
stos
dec
jmp
or
ror
nop
mov
jb
lahf
in
nop
add
ja
mov
aas
insl
jae
cmp
inc
lods
mul
inc
mov
leave
mov
rolb
loopne
mov
mov
lods
fwait
aam
cmp
leave
xchg
xor
jae
push
push
push
lret
cmpsb
sbb
mov
aaa
add
dec
push
test
repz
or
addl
gs
mov
inc
daa
adc
and
ret
sbb
cmc
or
xchg
cmp
add
ja
lds
push
dec
sub
andw
jmp
pop
inc
push
incb
sub
ds
xor
add
lock
dec
cwtl
ss
je
pop
rcrb
leave
fidivl
test
hlt
xchg
jmp
out
js
jne
push
lock
add
mov
jne
mov
out
fxam
mov
shrl
xor
mov
xor
pop
push
clc
fnsave
mov
les
push
hlt
test
dec
fincstp
hlt
jo
sub
loop
push
xchg
clc
fcomip
lods
cmp
mov
xlat
xor
data16
mov
xchg
add
lods
sar
fsubrs
pop
xchg
lea
pop
inc
dec
jmp
dec
inc
jae
movsl
sbb
sub
push
aad
jb
adc
cmp
and
sub
push
mov
xor
jmp
sbb
into
data16
es
adc
mov
dec
test
sub
sbb
push
mov
pop
dec
cwtl
mov
lahf
ret
pop
jecxz
faddl
ljmp
mov
or
test
push
inc
loopne
mov
xor
out
xor
test
xor
lods
mov
cmpsb
xchg
jne
xor
xchg
fistpll
aaa
fstpt
enter
imul
loope
cmpsb
sub
lock
sar
shrl
fcompl
add
sub
pop
fidivl
pusha
ret
imul
sbb
or
cmp
and
fcompl
movsl
mov
pop
loopne
sub
and
mov
dec
inc
and
rclb
pop
adc
xor
pop
inc
inc
mov
jp
adc
shll
roll
jge
jb
std
call
mov
ror
mov
mov
flds
setge
in
sbb
pushl
mov
fidivrs
fnstenv
xchg
lahf
add
xchg
mov
out
mov
inc
add
or
push
leave
adc
push
les
iret
jne
sub
out
es
cmp
mov
sbb
jmp
cmp
jb,pt
pop
sub
shrb
pop
inc
leave
in
sbb
pop
imul
in
adc
sbb
leave
and
in
insb
xor
adc
cmpsl
push
cmc
mov
dec
std
xor
add
aaa
hlt
loop
bound
xchg
call
int
aad
mov
jmp
push
mov
loope
in
in
mov
xor
lods
push
sbb
add
mov
jns
cmpsl
mov
add
inc
es
sbb
cmpsb
rep
mov
and
insb
pop
loop
sbb
xchg
mov
sub
pop
push
xor
stos
mov
add
out
cmp
jne
test
mov
les
jnp
ss
mov
shlb
pusha
mov
sbb
rolb
push
jmp
in
les
or
fisubs
adc
mov
pop
cwtl
ljmp
scas
idivl
adc
cmc
aaa
push
dec
pop
lea
xchg
out
pop
xor
sub
insb
outsl
movb
rcl
mov
xchg
add
add
lods
cmpsb
mov
scas
add
push
mov
jae
push
xor
fbstp
sub
xor
nop
mov
xor
fidivs
cltd
data16
shlb
sbb
movl
push
xlat
add
xchg
stos
les
gs
test
fimuls
int3
test
ja
push
int
insl
mov
add
jbe
call
mov
push
add
ds
leave
int
fldenv
pushf
imul
push
js
test
lds
lock
arpl
mov
and
aaa
jmp
scas
js
shrb
loopne
mov
rorl
sti
inc
mov
lcall
sub
xchg
imul
xchg
add
and
fst
inc
pop
sbb
in
lds
mov
dec
sbb
fwait
popl
sahf
adc
lret
repz
ja
dec
mov
dec
adc
sahf
pop
icebp
dec
lods
xchg
inc
dec
add
in
xchg
jb
and
sti
sbbb
jo
imulb
inc
jle
mov
xor
aas
aam
jns
lods
cmp
mov
cmpsl
cmc
aaa
jns
jbe
repz
scas
jl
inc
fwait
cmc
in
cmpsl
dec
leave
orps
push
mov
push
push
jg
ljmp
rorb
jge
and
adc
in
add
mov
test
rol
mov
jle
pop
das
lahf
repz
inc
insl
mov
or
adc
xchg
lods
xor
lea
jge
lret
std
inc
xor
cli
mov
pop
fxch
jne
inc
adc
cli
repz
sub
lcall
out
sub
fisubrl
push
cmp
lcall
sub
push
imul
stc
inc
lretw
lret
sub
or
push
stos
adc
stc
stc
and
mov
mov
jo
nop
sbb
inc
das
inc
fistps
ja
cmp
mov
dec
les
repnz
iret
iret
mov
fimull
fadd
aad
adcl
mov
push
loope
sbbb
out
pop
and
pop
lcall
push
pushl
cmp
mov
pop
ljmp
addr16
xchg
dec
out
lods
fstpt
test
mov
mov
imul
and
ja
push
clc
test
inc
add
xchg
rolb
jecxz
data16
mov
add
and
hlt
insl
out
and
ja
sbb
pop
cs
fisubrs
or
xchg
cwtl
shll
xor
and
mov
mov
sbb
inc
sbb
add
and
loope
sbb
mov
inc
mov
lret
push
pop
cwtl
pop
lea
jns
jecxz
pop
mov
and
jp
inc
sub
shrb
inc
sub
fimuls
push
xor
add
dec
xorb
cld
fimull
cmc
fistpl
call
pop
mov
pop
cmpsb
fwait
movsl
loopne
fwait
int3
sbbl
ss
mov
and
xor
icebp
push
mov
xor
shr
pushw
add
adc
adc
xor
mov
and
xlat
frstor
pop
mov
sbb
ror
ficompl
sbb
leave
jnp
pop
aad
aad
clc
push
mov
xor
jne
pop
push
inc
dec
les
arpl
clc
fcmovne
movsb
lock
in
jg
sti
add
mov
cmp
inc
lret
lea
mov
or
jp
mov
std
pop
mov
rol
jle
dec
cli
lods
mov
push
movsb
leave
fldt
fsubrs
xlat
pop
sbb
xor
and
imul
xor
movsb
mov
imul
in
out
sbb
movsl
jl
or
pop
push
arpl
repnz
stc
jecxz
loop
add
data16
in
push
jl
xchg
mov
fildll
mov
xor
js
push
shll
xor
mov
out
sbb
and
xchg
push
xchg
insb
test
mov
jb
movsb
pop
dec
add
jb
jb
push
and
dec
js
imul
out
sub
shlb
or
dec
repnz
lahf
xor
cmpl
adc
popf
imull
dec
mov
push
in
lret
sbb
scas
mov
push
add
fdivp
out
movsb
repnz
pop
je
xor
and
pusha
push
inc
iret
push
xor
or
jb
inc
lods
inc
adc
pop
movsb
xor
iret
xor
inc
dec
pusha
sbb
popf
dec
pop
sahf
xchg
cli
pop
inc
shlb
xor
addr16
in
push
call
xor
into
push
repz
cmp
mov
sti
sbbb
in
arpl
loope
pusha
lcall
dec
lods
dec
or
int3
cs
shlb
mov
cmpl
lea
jmp
rcl
ror
ror
or
and
js
push
js
divl
ja
pop
mov
jns
data16
cmpsb
int3
mov
jne
adcb
lcall
inc
pop
fisubs
jp
inc
cs
push
cmp
inc
push
mov
push
rcrl
add
and
in
daa
into
and
cltd
mov
or
mov
ljmp
inc
test
inc
ja
jae
sahf
xor
cltd
xchg
pop
jecxz
lds
jb
mov
push
xchg
dec
roll
xchg
push
ds
cmp
cmp
mov
repnz
or
jge
dec
dec
add
dec
mov
or
data16
cmp
cmpsb
push
pop
add
movsl
cmc
call
xchg
mov
gs
gs
lcall
js
subl
ljmp
imul
jns
sbb
pop
pop
jl
cmp
aam
inc
adc
mov
push
sbb
push
xchg
xchg
les
adc
inc
jae
into
xchg
fisubs
jmp
das
push
andb
mov
jecxz
inc
and
adc
stc
adc
jmp
adc
daa
lret
mov
mov
loopne
jns
adc
mov
sub
insb
fnstsw
sbb
jb
stc
mov
push
lods
fdivl
cmc
insb
pushf
fdivrs
inc
shll
imul
fs
ja
pop
pop
outsb
cmpsb
and
sbb
fdivrs
dec
sub
jecxz
repnz
push
inc
xchg
cmpsl
test
addr16
fnsave
jbe
out
imul
aad
cld
fldl
in
iret
add
js
ret
sub
adc
into
loop
sbb
xchg
pop
cmp
loope
jae
out
push
outsl
mov
pop
sbb
and
stos
jg
cmc
xor
xchg
mov
sti
mov
pop
flds
mov
pusha
ret
clc
test
inc
pop
icebp
pop
xchg
add
cmpsb
jmp
dec
pushf
orl
addr16
pusha
inc
rolb
imul
xor
test
or
subl
mulb
imul
mov
out
repz
daa
add
mov
out
push
add
aas
sbb
scas
xor
fldlg2
jecxz,pn
fildl
scas
add
sbb
push
jp
add
out
out
shll
imul
pop
pop
ret
jns
mov
out
jge
and
sub
sbb
xor
dec
imul
or
and
mov
outsb
add
sub
gs
gs
cs
aam
dec
xor
push
add
mov
inc
cmp
cmp
or
fsubl
loop
nop
push
adc
mov
sbb
cli
inc
cmp
xor
dec
sub
into
push
push
fstp
jle
shrb
sub
or
xchg
filds
fisttps
sbb
ss
pushf
nop
jp
aam
push
daa
jg
mov
jnp
jecxz
scas
and
mov
adc
in
fucomi
adc
xlat
ljmp
mov
push
mov
dec
shrl
int3
dec
mov
xor
stc
ret
xchg
fidivrl
and
pop
cmp
jns
fstpt
push
testl
mov
popf
ds
xchg
aam
and
cmp
jecxz
xor
or
rcl
dec
leave
repz
dec
in
xor
pop
mov
jge
and
cmc
jecxz
insb
ss
cmp
push
jge
push
mov
imul
pop
cltd
mov
shll
clc
sub
jbe
xchg
inc
lods
push
cmp
fists
mov
mov
and
sti
inc
push
repnz
test
pop
into
imull
jo
daa
xchg
ljmp
or
adc
js
jp
out
or
movsl
mov
jno
push
in
ret
sub
add
push
mov
lea
adc
lock
xor
rorl
test
adc
gs
mov
sbb
daa
sub
cld
cmpsl
mov
adc
lea
test
ljmp
fildll
lcall
mov
fistps
sbb
or
daa
bts
and
loope
cmp
add
jmp
pusha
fsubp
mov
jmp
ret
ror
fld
outsb
js
inc
or
cmpl
jl
js
insl
cltd
hlt
adc
xchg
mov
and
jno
and
dec
ret
pop
add
pop
mov
jo
sar
test
sub
mov
pop
repz
adc
xor
outsb
je
addr16
sbb
clc
shrl
jo
push
pop
push
or
adc
int3
mov
lret
xor
mov
fsubrs
lret
imul
pop
outsl
pop
movl
xor
idivl
data16
push
push
sti
mov
fisttps
lcall
jg
adc
dec
xchg
xchg
lock
lods
or
cmp
adc
jmp
jecxz
cmp
xchg
jp
nop
bound
mov
or
push
push
add
imul
movsb
push
shl
loop
popa
mov
dec
and
rcrb
dec
sbb
imulb
adc
ficomps
ffreep
stos
scas
sbb
or
ret
in
sub
push
gs
cmp
or
push
mov
inc
hlt
jl
or
shll
leave
subb
push
in
push
inc
mov
lret
mov
cs
imul
sub
ja
in
add
ret
xor
aad
xchg
test
dec
xchg
ljmp
sbb
dec
pushf
adc
add
mov
adc
test
add
ret
jmp
fsubrs
inc
mov
mov
jg
mov
enter
jnp
leave
inc
sbb
mov
outsb
xlat
clc
pop
loopne
cmp
or
pop
sub
int
test
xor
ror
sbb
je
add
sbb
test
mov
test
xchg
sbbl
jne
mov
jl
xlat
shrl
mov
mov
and
push
or
push
rolb
inc
or
or
arpl
in
lods
pop
mov
gs
sbb
pop
fsubp
ret
loop
adc
push
inc
lock
cld
out
mov
rorb
mov
sbb
imul
ret
mov
mov
cmp
stos
xchg
mov
out
mov
cli
jbe
jb
into
sub
fsubs
cltd
jo
ljmp
int3
ret
les
lea
mov
stc
xor
push
popf
loop
scas
outsl
sarb
sahf
inc
lret
mov
std
movsb
outsb
inc
bound
xorl
mov
dec
cmp
pop
cwtl
cltd
mov
and
push
enter
xchg
sub
icebp
loope
dec
and
push
mov
mov
jle
cmc
push
fs
out
repnz
sub
std
fsubrl
sbb
xchg
popa
cmp
mov
sub
jbe
shrl
lock
mov
repz
imul
dec
gs
decl
lea
negb
push
sub
mov
dec
ror
mov
std
inc
cmc
loope
xor
push
mov
sbb
dec
cmp
pushf
push
fildl
inc
aad
dec
lds
mov
cmp
js
scas
stc
sti
loope
push
inc
pop
add
les
mov
xchg
dec
push
ja
lret
out
das
cmpsl
inc
jo
iret
ja
movsb
test
dec
outsl
pop
fdivrs
push
leave
bound
sti
jne
iret
xchg
mov
incl
lcall
in
fistl
loopne
jecxz
xchg
mov
std
repz
sahf
push
loop
mov
mov
mov
mov
cmp
sarl
fwait
push
jae
lret
test
rolb
leave
imul
fnsave
xor
or
sarl
pop
mov
push
cltd
je
mov
pop
out
rorl
push
cmpsl
cld
push
outsb
jae
inc
or
adc
stos
xlat
xor
nop
in
int
fs
idivl
push
jb
movsb
clc
xchg
movsl
pop
sub
lret
int3
adc
push
xchg
adc
pusha
or
pop
subl
pushf
test
les
xchg
mov
pop
in
stc
lret
pop
lock
adc
push
push
das
xchg
imulb
out
rcrb
inc
sbb
outsl
push
jmp
push
imul
or
fsubl
jbe
enter
ret
cmpsl
dec
cmc
inc
mov
testb
lods
mov
pop
in
cld
and
dec
xor
test
hlt
jmp
ds
enter
int
xor
pop
aas
cmpsl
enter
js
push
js
cmpsl
mov
bound
insb
cwtl
push
sub
pop
mov
sbb
sbbb
push
popf
add
inc
and
imul
dec
call
sbb
push
mov
mov
pop
dec
aad
in
fs
int3
add
mov
mov
sub
adc
fbstp
jg
les
cld
xchg
push
cmp
add
lret
pop
stc
dec
push
ret
shlb
mov
jmp
fiadds
js
lret
sahf
std
add
or
sbb
pop
sbbb
adc
jb
popf
xchg
in
loope
data16
and
test
inc
lods
or
scas
fnsave
in
hlt
mov
inc
push
fldpi
and
xor
in
inc
pop
mov
or
sub
lret
call
push
and
dec
pop
sbb
jle
out
pop
adc
mov
mov
cmovo
out
loope
mov
ljmp
scas
mov
push
and
movsl
inc
sarl
hlt
jo
stos
movsb
loopw
lcall
jle
mov
and
mov
inc
cmp
dec
xchg
sub
add
lret
out
setnp
sub
cmp
mov
mov
fstps
mov
fpatan
popf
and
in
pop
ljmp
inc
imul
cmp
pop
aaa
or
aas
shl
or
aaa
stos
insl
ja
dec
jae
adc
inc
mov
push
ja
sbb
sub
push
fcmove
lret
mov
xorb
bnd
cmp
outsb
xor
cmp
inc
addl
out
pop
nop
mov
data16
out
ror
ficoml
xchg
sti
xor
xchg
jge
pushf
in
mov
loopw
into
imul
push
cmp
nop
std
mov
xor
pop
mov
adc
adc
inc
jle
loope
in
sbb
fs
repz
xor
pushl
out
ficomps
pop
pop
rorl
js
jmp
lods
gs
ss
test
into
insb
fnstsw
outsb
cwtl
jb
mov
sbb
xor
and
add
jb
push
cmp
push
sub
jp
lods
loop
mov
in
and
or
cmp
sub
add
lock
cld
jnp
fs
cmp
mov
xor
cld
mov
mov
xchg
lcall
xor
or
pop
fwait
pop
xorl
jecxz
or
mov
push
shlb
adc
push
test
sbb
push
pop
mov
mov
das
sub
or
enter
sahf
cmp
sbb
xchg
mov
cmp
mov
sbb
cmp
repz
mov
iret
pop
into
loope
arpl
mov
decb
mov
pop
pop
lret
mov
push
mov
inc
cmp
mov
test
ja
sub
sarl
iret
fnstsw
pop
add
cmpsl
xor
mov
push
aad
inc
sub
nop
rolb
sbb
ret
not
jl
loopne
push
stos
or
nop
push
int
cld
adc
sbb
lahf
iret
cwtl
jp
lret
fdivs
imul
mov
cli
sbb
test
sub
lret
jp
cmpsl
and
repnz
sub
out
inc
fdivrs
sbb
stc
sbb
or
dec
add
inc
jo
adcl
or
jne
mov
mov
hlt
pop
xchg
jl
aam
loope
pop
out
arpl
sarl
nop
int3
aas
test
sub
test
out
andb
in
test
jp
xor
mov
pop
out
dec
cmp
pop
gs
out
stos
movsl
stos
jb
orl
xchg
mov
stos
push
sarb
sar
movsb
dec
out
xchg
sti
xchg
popf
ss
xchg
mov
lods
arpl
loope
mov
cwtl
out
in
adc
sarb
daa
stc
and
popf
mov
and
mov
loopne
test
addl
jp
jo
out
fiaddl
lret
mov
out
or
emms
mov
daa
out
movsb
mov
pop
mov
andl
loope
decb
fldcw
mov
decb
or
inc
cmp
push
or
outsb
dec
pushf
pushf
mov
push
adc
mov
das
lret
and
pushf
mov
mov
sbb
test
shlb
scas
push
sbb
cmpl
xlat
scas
mov
mov
xor
add
jmp
cmp
ret
rol
rcl
int
push
nop
fimuls
pusha
clc
mov
mov
push
js
mov
repz
dec
or
or
dec
push
dec
lods
jns
xor
mov
insb
mov
pop
les
add
sahf
popf
fdivs
xchg
jae
lds
xchg
ss
lahf
inc
mov
in
lret
dec
jl
inc
sub
loope
mov
fadds
stos
inc
xchg
xchg
push
test
cmp
shr
repz
outsl
lret
mov
stos
insl
idivb
mov
xor
imul
fwait
js
mov
test
adc
adc
stc
icebp
cli
and
addr16
cmp
push
push
pop
cmpsb
popf
cmp
arpl
test
inc
xchg
sbb
xchg
mov
and
xchg
adc
data16
sbb
pop
sahf
push
fdivrl
adc
test
jne
push
aam
add
inc
mov
mov
mov
jbe
loop
adc
call
je
sbb
jae
lret
pusha
lds
push
cmpsl
lret
and
cmc
outsb
sti
scas
out
cmp
and
insl
into
lret
into
enter
aad
pop
scas
iret
inc
jnp
cld
paddq
aam
jle
cmpsb
mov
mov
test
lret
inc
jecxz
test
adc
mov
lahf
push
mov
loope
scas
and
arpl
jnp
sub
add
or
loope
popa
test
pop
fldenv
pop
ljmp
and
jnp
das
lea
fisubl
mov
xchg
repz
psrlw
clc
daa
daa
adc
scas
pop
sarb
jae
or
cld
ja
jno
jno
mov
jae
imul
fbld
aaa
stos
push
shrb
inc
pop
lahf
jno
or
add
inc
xor
dec
inc
mov
js
cmc
inc
mov
hlt
push
dec
fbld
jns
and
push
arpl
cmp
adc
call
in
add
mov
xchg
fsubrp
imul
xor
xor
pusha
in
xchg
mov
scas
push
pop
xor
pop
mov
pop
je
insb
stos
push
mov
mov
andl
aam
push
repnz
pusha
or
es
bound
push
into
imul
dec
mov
jg
fcoms
pop
decl
lock
mov
add
mov
iret
repnz
pop
and
add
push
dec
sub
jo
pop
pop
sbb
fisttpl
stos
sbb
imul
lcall
dec
or
push
adc
sbb
outsl
cmp
cmc
sub
adc
jle
cmp
stos
jne
cwtl
adc
xor
cmp
shl
jnp
fldt
inc
push
mov
adc
loop
mov
push
adc
xchg
fnsave
cmpsb
and
enter
ret
fsubr
jmp
rclb
jp
rol
mov
ds
loope
or
adc
sbb
cmp
cmp
div
dec
add
stc
jns
dec
out
sub
xor
or
rol
stos
movsb
or
adcl
xchg
sub
call
add
movsl
adc
sub
int
mov
insb
push
fisubrs
scas
add
mov
xlat
cmp
push
out
daa
xor
adc
and
pop
sbb
mov
or
add
xchg
inc
adc
jnp
orl
nop
xor
sub
add
mov
ja
imul
das
mov
popf
pop
or
shl
pop
xlat
push
lret
aas
imull
pop
mov
sub
fbstp
ljmp
bound
sub
mov
jge
jno
fnstenv
aam
fisubl
mov
daa
inc
lret
xchg
fbld
sub
pushf
ljmp
loope
es
push
push
push
inc
cmp
and
sbb
lods
mov
jno
cmc
mov
stc
loop
movsl
add
int
mov
je
and
aam
inc
fisubrs
push
sti
movsl
mov
jp
mov
and
xlat
lock
ret
push
roll
mov
jge
cmp
call
movsb
cmc
or
insl
imul
fsubs
sbb
ficompl
hlt
jp
inc
lret
xchg
push
sar
fimull
mov
lret
jb
push
test
repnz
lods
aaa
ds
stos
or
fwait
pop
dec
fsts
fnsave
fisttpl
add
leave
ret
leave
leave
leave
lret
int
decl
js
push
js
pop
push
add
xlat
mov
add
add
xor
leave
sub
jnp
and
ss
add
xor
xor
mov
insb
xchg
cmp
adc
jle
xor
lahf
push
mov
xchg
lcall
subb
psllq
cmpsl
jecxz
pop
into
mov
sbb
add
or
jg
jnp
movsl
je
dec
hlt
div
xchg
fstpl
mov
jmp
mov
enter
sbb
pop
hlt
mov
fstl
sbb
pop
lcall
cmpsl
scas
xchg
mov
fcmovbe
js
ss
inc
test
adc
push
lret
inc
les
test
jmp
gs
mov
andl
sarb
leave
mov
pop
lods
orb
lcall
in
pop
pop
cmc
bound
push
adc
js
or
jne
mov
fdiv
lret
mov
sub
sbb
xor
imul
es
test
pop
add
scas
lods
cmp
ret
shrb
aas
adc
fcompl
out
mov
cli
jno
sub
decb
repz
neg
les
mov
jg
or
and
xor
bound
adc
jecxz
mov
cmp
push
xchg
in
lea
sbb
mov
repnz
inc
pushf
insb
insb
jns
fstpl
scas
int3
dec
pop
push
scas
fsub
sub
mov
adc
shrl
jl
loop
aas
fsubl
jae
in
call
lock
lret
into
xor
out
imul
adc
jo
xchg
ret
outsb
mov
mov
ficoms
sub
and
xor
aad
fstl
inc
int
jno
mov
std
or
addl
mov
imul
adc
or
sub
fsubr
mov
cmp
enter
push
sub
mov
and
cltd
mov
mov
cmp
jmp
shll
sbb
inc
icebp
ret
aam
inc
ss
rclb
bound
mov
xchg
fnstsw
ss
in
sub
dec
mov
fsubrl
shll
mov
mov
xchg
nop
and
fdivrl
xchg
pop
dec
ret
jno
fildl
add
je
dec
cmp
and
mov
adc
cmpsl
shlb
xchg
xorb
nop
and
mov
das
sarl
pop
es
mov
push
xchg
cmpsl
test
lcall
jecxz
out
stos
adc
pop
adc
mov
pop
clc
lret
repz
outsl
push
xchg
adc
xorb
aas
xchg
sbb
daa
fisttpl
bound
in
repnz
jae
cwtl
rcrb
pop
decb
cmpsb
aam
sub
mov
xchg
xchg
lods
mov
scas
jecxz
push
sbb
sbb
pop
cwtl
pop
dec
pop
xor
call
mov
mov
dec
and
data16
mov
clc
int3
push
jle
add
mov
push
mov
xor
pop
sub
mov
jg
aas
mov
sbb
cmp
in
xbegin
pop
cmp
insb
les
jp
cmp
data16
unpckhps
repnz
sbb
hlt
sub
mov
xchg
sub
daa
lcall
inc
ficompl
sub
sarl
fs
and
inc
push
cmpsl
cmp
add
popf
and
jne
xor
adcl
mov
mov
negb
sarb
ja
cmp
inc
pop
leave
aaa
popa
xchg
xchg
cwtl
sbb
mov
dec
push
xchg
sub
add
jo
sub
jl
test
outsb
ret
mov
inc
adc
popa
scas
pushf
add
jbe
or
mov
mov
mov
testb
dec
sbb
inc
inc
repz
mov
addr16
sahf
sbb
xor
or
add
cld
fisubs
dec
movsl
imulb
dec
lahf
inc
mov
lahf
push
insb
xor
inc
into
sbb
lods
dec
addr16
shld
xchg
loop
or
xor
jbe
ret
pop
rcll
inc
jns
sbb
push
mov
sub
fldt
int3
and
lock
push
iret
or
or
xor
add
mov
mov
mov
lea
mov
jmp
lret
rcl
fnstcw
stc
mov
dec
nop
js
push
js
lock
daa
int
mov
and
mov
or
movsb
lds
or
ret
cmpsl
pusha
push
sahf
jns
rolb
push
sbb
adc
pop
jo
sub
imul
dec
xchg
andb
adc
loopne
mov
xchg
xchg
jle
in
mov
mov
in
push
pop
inc
lods
jb
lcall
clc
aas
fucomi
movl
mov
push
je
cmp
lahf
mov
pop
fidivs
and
das
push
js
aas
push
mov
mov
leave
sbb
pop
aam
mov
mov
jmp
mov
movsl
push
loope
push
faddl
pop
es
pop
dec
lahf
jae
std
or
dec
dec
sbb
fisubrl
cmp
and
fcomp
inc
in
in
adc
gs
movsb
pop
mov
cmp
push
lea
sahf
lea
lret
dec
sub
ficoml
xor
stos
enter
jne
add
dec
and
dec
enter
movsl
std
push
pop
push
mov
mov
sti
ljmp
dec
loop
addl
or
enter
or
add
ljmp
sub
mov
xchg
dec
cmpsb
xchg
mov
adc
sbbb
push
cltd
inc
imul
pop
dec
dec
popf
call
mov
sub
fists
inc
mov
xchg
xor
mov
ds
rcrl
fwait
and
push
stos
fcomi
and
add
jns
fisubl
xchg
mov
or
mov
push
push
lods
shrl
lods
cmpsl
lret
dec
fs
push
dec
dec
imul
or
pop
faddl
pushf
fsubrp
cmpb
xchg
icebp
in
mov
push
push
cmp
mov
rcr
fucomip
push
xor
aas
or
push
jmp
cmpsb
dec
cwtl
pop
sti
push
lret
mov
xchg
sbb
xchg
pop
inc
xor
add
insb
cmp
mov
adc
out
outsl
ldmxcsr
mov
xor
lcall
test
pop
mov
jae
jne
jg
pushf
mov
int
or
dec
pop
scas
mov
push
jo
lock
pop
jmp
cwtl
jnp
movsb
out
notb
or
aam
popf
and
test
pop
lahf
nop
push
mov
verr
mov
fwait
xchg
lods
fidivrl
inc
stc
fsubrp
in
jg
aaa
inc
or
dec
pop
gs
cmpsb
pop
test
and
sub
shll
add
push
std
inc
mov
hlt
outsb
and
jle
add
scas
adc
loopne
testb
jl
xorl
addr16
jge
xlat
ficomps
test
push
jp
jb
adc
cmp
xor
cld
xor
dec
mov
dec
in
cmp
push
xor
push
cld
adc
ljmp
lock
cmp
aaa
imull
jle
aad
or
test
lea
clc
fmul
shrl
dec
loop
xor
mov
xor
jmp
adc
and
outsb
test
into
jge
jno
pushf
jg
shlb
les
orl
cmp
pop
add
jl
fstp
sbb
popf
dec
addr16
mov
imull
and
ljmp
clc
dec
mov
stos
or
into
xorb
xchg
das
mov
jmp
aad
jg
mov
or
sub
jecxz
and
push
fcmovnu
test
jno
add
inc
mov
lods
xor
ficomps
in
popf
dec
mov
adc
jb
arpl
popa
inc
xchg
fbld
pop
loope
mov
aam
mov
jmp
movsb
xchg
cmp
cs
loop
scas
scas
sub
mov
mov
fwait
push
xchg
mov
addb
mov
test
mov
sub
mov
cmp
gs
js
mov
jg
push
cmpsb
mov
and
mov
into
add
je
not
pop
cltd
pop
push
cmpsl
push
call
test
andb
cmp
xchg
and
outsl
push
jno
fdivrs
xorl
push
mov
push
pop
xor
push
arpl
lea
add
std
movsl
and
mov
fsubs
fwait
push
aaa
ret
mov
sahf
xor
out
in
mov
xchg
mov
bswap
loope
pop
mov
mov
mov
jmp
vpsrld
fcmovbe
leave
sarl
cmp
mov
popa
jmp
push
js
xchg
dec
xchg
jb
ret
std
clc
sbb
inc
cwtl
idiv
out
jmp
adc
mov
or
inc
dec
test
mov
mov
out
push
rcl
push
mov
xchg
jmp
jmp
cmp
aam
rcl
or
pop
fsubrl
icebp
repz
push
jno
sbb
xor
mov
out
lods
psrlq
pop
cli
jle
loopne
shrl
mov
imul
aaa
out
push
xchg
push
dec
xor
ret
pop
mov
fwait
lcall
rcll
xor
mov
lods
aaa
fsubrl
dec
repnz
mov
xchg
mov
or
or
movups
shr
sbb
mov
sarb
and
xor
pop
lahf
pop
push
add
mov
dec
js
mov
pop
push
test
xchg
push
mov
mov
rcr
fcomip
flds
jb
inc
aaa
aad
notb
cmp
mov
jp
lods
and
das
iret
popa
jmp
push
push
add
fistl
and
sbb
data16
shlb
pop
popl
ljmp
fs
add
test
mov
lock
cmp
mov
es
push
inc
cwtl
push
ljmp
jmp
xchg
dec
push
mov
jb
test
nop
push
mov
pop
sub
sub
test
stos
int3
jb
repz
sub
or
stos
mov
dec
jns
ja
mov
sahf
push
adc
pop
mov
loopne
mov
in
clc
cli
pop
and
arpl
sbb
cltd
sub
clc
sbb
mov
cltd
imul
insb
adc
adc
add
mov
dec
jl
test
or
mov
nop
xchg
dec
out
and
rcl
sub
sub
add
insl
mov
mov
cmp
scas
fists
xor
clc
adc
movsb
jno
cmc
shr
adc
aaa
mov
dec
pop
outsb
lret
movsb
jp
lret
scas
cmp
dec
or
std
in
mov
sbb
inc
mov
addr16
jp
imull
nop
aas
rcrl
repz
cmp
push
jae
in
test
shl
pop
or
fnsave
shlb
dec
clc
pop
fidivl
aaa
or
orl
call
mov
repnz
add
xchg
sub
xor
fnstenv
mov
adcl
adc
hlt
push
mov
fs
ss
xor
sbb
or
pop
cmp
xorb
sbb
in
cli
repnz
fwait
mov
pop
gs
clc
xchg
xor
push
or
xor
jecxz
fiadds
fwait
dec
mov
xlat
xor
test
lods
jle
or
sub
dec
stos
sbb
mov
ret
xchg
and
cmpsl
out
and
push
fstps
pop
push
sbb
js
je
cli
xchg
lea
out
dec
movsb
cmp
ret
dec
cwtl
out
pop
or
mov
dec
dec
cmp
scas
mov
mov
pop
dec
pop
cmp
sbb
insl
sub
shlb
jns
mov
inc
cmp
adc
inc
das
js
pop
push
mov
adc
ret
push
movsl
sbb
enter
or
xor
inc
movsl
data16
das
xchg
or
xor
mov
hlt
adc
fisttpll
mov
pop
stos
mov
mov
ret
sbb
ror
push
sub
lcall
pop
xchg
popf
in
or
nop
fs
mov
das
lock
pop
sub
ret
cli
bound
insb
inc
shlb
adc
dec
lock
iret
out
and
mov
ja
or
push
add
shlb
lock
lock
mov
call
out
inc
pop
outsb
xchg
aad
ds
adc
test
and
jns
daa
loopne
jecxz
jg
mov
mov
mov
mov
mov
push
push
mov
add
stos
stos
mov
pop
ss
pop
and
and
popa
cmp
pop
mov
sbb
std
lea
push
mov
cmc
aam
pushf
inc
nop
xchg
mov
mulb
mov
outsb
xor
push
out
jae
sub
lret
mov
add
jne
xchg
inc
stos
mov
mov
mov
jmp
ror
ror
rcl
rcl
cld
in
lock
stos
sahf
js
push
js
xor
mov
or
cwtl
jmp
mov
ficompl
sbb
mov
inc
sub
jo
shrl
push
xchg
mov
fsubs
dec
pusha
aas
adc
je
bound
stos
xor
push
movsb
xorb
jp
shrl
iret
sbb
lods
mov
mov
jae
push
ss
bound
outsl
int
cmpl
inc
sarl
jl
pop
cmovo
fmuls
movsb
xchg
es
and
adc
cmp
dec
hlt
fistl
shll
mov
jbe
in
push
jo
aaa
sub
jg
cmpl
inc
adc
inc
and
fildl
inc
mov
aas
mov
push
add
mov
fists
mov
or
mov
mov
mov
sahf
add
insl
flds
push
out
adc
movb
dec
lea
cmp
aaa
inc
push
jo
daa
jge
sahf
sbb
xor
idiv
test
lahf
or
xor
add
inc
cmp
mov
mov
xchg
pop
mov
jbe
mov
lret
mov
xchg
push
jg
jg
rcrl
iret
aaa
dec
std
cmc
dec
sub
roll
repz
scas
cmp
jp
or
sub
loopne
sbb
sub
psubq
ja
je
int3
xor
xor
xor
pusha
je
dec
push
mov
jmp
xchg
fs
cmc
jle
call
es
mov
arpl
mov
sbbb
inc
jecxz
mov
sbb
xor
push
xchg
fwait
in
xchg
pop
push
inc
push
dec
cmp
cmp
adc
negb
cmp
pop
inc
mov
jne
ret
into
insb
sarl
push
cmp
push
rcl
rcrl
into
clc
movsl
fwait
pop
pop
adc
xchg
mov
inc
fs
icebp
in
cmp
pop
mov
pop
jmp
mov
pop
inc
or
cmp
loope
or
test
fcmove
and
movl
cs
cmp
insb
jns
xor
add
icebp
aaa
scas
xchg
pop
stos
scas
push
jb
push
push
bound
adc
rcl
push
roll
adc
lock
push
loop
inc
push
pop
out
pop
adc
pop
fistps
mov
aaa
adc
dec
jmp
pusha
repnz
int
iret
arpl
aam
and
cmpsl
xchg
sub
xchg
lea
icebp
std
mov
cmp
xor
pusha
cmp
popf
cmpsb
mov
jb
arpl
mov
mov
sub
stc
xor
and
imul
aad
shll
aam
enter
sub
aas
xchg
mov
into
sub
jmp
shrl
fcoms
mov
in
cmpb
mov
dec
xchg
lret
ss
test
pop
aam
xor
xor
outsl
pop
insl
sub
mov
xchg
cmp
addl
sarb
fsubrs
test
dec
in
inc
stos
in
mov
cmp
ja
adc
stos
add
cmc
pop
fwait
xchg
mov
xchg
mov
insl
dec
mov
dec
and
lea
pop
adc
xchg
mov
mov
xchg
add
cmpb
bound
insb
insl
stos
sbb
sub
andl
cmp
sbbb
push
test
dec
push
adc
call
dec
inc
xor
jne
lahf
loope
jmp
fcmovnb
in
dec
lds
jge
pop
sahf
xor
out
mov
rol
sub
and
cmp
cli
sub
pop
jne
ljmp
in
scas
gs
fwait
aad
outsb
rcll
sahf
imul
mov
test
fdivrs
sub
testb
pop
add
insb
lret
mov
pop
adc
xchg
cmp
div
xorl
daa
fmuls
mov
paddusw
xor
fs
jo
jmp
fmull
xlat
mov
jne
cmp
mov
jne
jb
pop
mov
divb
mov
dec
inc
shl
push
out
aad
aam
mov
mov
cmp
sti
adc
loope
ret
xchg
out
sub
jb
loop
sbb
jmp
mov
movb
add
clc
jmp
lret
lret
leave
leave
leave
cmp
out
add
push
js
push
sub
or
jmp
movsb
and
push
cltd
pop
push
ds
lea
mov
fwait
mov
pop
out
push
insb
and
dec
sub
je
ljmp
sbb
add
push
mov
adcb
movsb
sarb
or
enter
sub
lds
loope
xchg
mov
ja
sbb
test
sub
cmp
mov
test
mov
cmp
cmpsb
push
out
scas
rcll
std
push
faddl
in
mov
aam
pop
mov
ss
es
inc
push
push
sbb
cmp
xchg
stc
jns
rclb
mov
mov
jae
xchg
add
fisubs
add
inc
xor
xchg
or
inc
pop
ret
mov
stos
adc
and
pop
scas
orl
pop
fwait
movsl
out
ds
call
xchg
shll
int
ret
ja
dec
mov
inc
pop
jno
or
iret
mov
pop
repnz
inc
enter
inc
jae
cmp
daa
push
push
outsl
adc
pop
mov
or
xchg
and
xchg
mov
jecxz
push
lret
add
dec
ds
int3
sub
loopne
lods
mov
dec
lea
idivl
dec
loope
rcll
ja
ret
pop
sbb
mov
sub
testl
aas
pop
stos
jmp
jnp
cmp
js
bound
or
jnp
mov
pushl
xchg
mov
scas
test
in
mov
roll
or
sbb
popf
outsl
push
cwtl
xor
push
mov
leave
stos
xor
or
mov
ja
cmp
push
into
pop
leave
test
sarb
push
mov
call
lret
cmpsb
sar
divl
cs
jmp
mov
xchg
lret
and
rcl
mov
mov
leave
mov
inc
pop
and
sub
xlat
cmpsl
sbb
dec
adc
insb
add
pop
cmpsl
stos
sahf
in
mov
scas
dec
repz
sub
mov
push
leave
jl
xchg
insb
jbe
push
xchg
adc
lret
pop
sbb
fstps
mov
out
insb
iret
enter
inc
fs
popf
and
mov
or
pop
adcl
jmp
mov
rcrl
push
mov
fstl
dec
out
sub
push
das
pop
xchg
lcall
jle
sti
xor
mov
movsl
xchg
in
mov
push
jmp
inc
adc
int3
lcall
and
inc
pop
mov
jg
aaa
or
dec
pop
shrl
fcmovnu
push
xchg
cld
cmc
fdivl
dec
sub
add
push
cmp
decb
jns
inc
inc
es
test
and
nop
mov
lcall
js
adc
and
out
or
fisubrs
test
call
fidivl
mov
clc
lret
xchg
inc
mov
dec
shr
xchg
and
jbe
cmc
push
lcall
dec
pandn
jnp
inc
fimull
loope
pop
cwtl
lods
fidivrs
ja
inc
push
xchg
adc
mov
push
inc
xchg
pop
clc
and
jge
out
xchg
xchg
aam
or
xlat
inc
and
les
out
add
sbb
cmp
fbstp
pop
adc
addr16
lret
or
fcmove
mov
mov
pop
mov
aas
rorb
xchg
xor
jbe
shlb
movsb
shll
add
add
unpcklps
mov
push
push
dec
mov
arpl
or
mov
cmpsb
mov
mov
sub
ds
int
jg
and
sub
lret
dec
xchg
arpl
pop
mov
cld
fldl
fiaddl
lock
push
push
int3
out
mov
cmp
int
cmp
mov
ja
outsl
xchg
sar
adc
adc
or
push
sub
xor
call
push
mov
jg
lcall
lahf
jns
dec
dec
inc
pusha
mov
dec
push
adcb
jp
jb
jle
cwtl
es
push
aas
jp
push
ficomps
and
scas
mov
mov
mov
jecxz
movsl
je
add
push
inc
inc
mov
inc
jmp
jne
sbb
mov
mov
jmp
cmp
ret
rol
dec
pop
fwait
or
popf
aaa
sub
movsb
js
push
js
adc
fmull
es
insl
fsincos
and
fcompl
aas
orb
dec
jne
nop
insl
mov
lods
imul
test
dec
mov
xor
mov
dec
lret
jbe
jae
push
test
and
jmp
out
mov
mov
mov
cmp
push
push
ret
stos
push
or
in
add
rorb
in
cmp
es
xor
xlat
add
ret
cmp
in
pop
sub
imul
icebp
test
mov
add
inc
cmp
dec
jg
lea
insb
inc
push
cmp
ja
sahf
adc
std
bound
insb
cmp
jb
adc
sub
arpl
pop
es
push
sbb
mov
jmp
mov
mov
xor
xchg
push
cmp
sub
xor
mov
shlb
pop
fcomip
and
mov
add
fldenv
insb
inc
arpl
dec
mov
cwtl
and
push
pop
jne
out
add
fldcw
inc
sbb
ret
sbb
lods
jb
stc
adc
out
jno
mov
mov
shll
push
jl
push
sub
dec
add
test
pop
add
cmp
mov
add
sbb
ret
jle
add
cltd
push
into
push
cmpsb
movsb
pop
jl
sub
pop
ja
jmp
cmpsl
aad
or
pop
repz
subb
cmpsb
sub
cwtl
ljmp
xor
imul
inc
loope
popf
imul
adc
bound
call
fwait
add
lds
sbb
adc
fcmovu
lcall
push
xchg
jmp
xor
sub
lock
fbld
dec
xor
ret
imul
popa
mov
imul
negl
or
mov
lds
pusha
popf
mov
mov
push
fisttps
or
fs
lret
in
out
or
cwtl
pop
outsl
push
mov
nop
ret
or
es
stos
and
data16
jle
fs
cwtl
sbbl
ss
aaa
cmpsb
mov
jno
int
pop
ja
outsl
xchg
lcall
mov
mov
test
sbb
jns
rorb
in
jecxz
mov
cmp
pop
xchg
xchg
bound
stc
cmp
es
jne
adc
xchg
nop
jl
push
lahf
push
out
test
mov
add
iret
sub
fdivl
lcall
push
xchg
push
testl
xchg
jmp
test
ret
jle
ljmp
ficomps
push
movsl
sbb
or
sarl
mov
in
push
je
repz
push
in
mov
and
gs
mov
addr16
ret
outsl
pushf
loop
in
adc
jbe
inc
outsl
pop
pop
out
decb
daa
jecxz
cs
inc
andl
cmp
inc
push
repz
ss
fidivl
das
out
test
sbb
pushf
push
addr16
adc
je
cmpsl
std
push
loop
lods
lret
push
mov
data16
pop
ss
mov
inc
add
data16
adc
push
push
cmp
push
div
or
xchg
push
icebp
iret
scas
daa
cmpsb
cmp
mov
or
dec
imul
or
mov
dec
push
adc
jg
mov
or
cwtl
in
xlat
mov
xor
loope
and
int
mov
sbb
jbe
sbb
sbb
fidivrl
sbb
cmc
sbb
out
or
add
cmp
jp
mov
pop
loope
jge
cmpsl
stos
jecxz
jno
es
fcmovnb
jmp
or
roll
cmp
xchg
inc
mov
in
shll
shll
or
jne
mull
fwait
mov
mov
pop
cmc
lea
icebp
xor
pop
lahf
pop
mov
test
mov
push
fisubl
add
pop
mov
mov
add
jbe
insb
adc
pushf
dec
xor
sub
and
enter
pushf
mov
push
dec
dec
stos
jmp
dec
mov
sti
mov
mov
and
xchg
inc
into
mov
inc
sarl
stos
cld
adc
pusha
dec
xor
xchg
or
sahf
shll
lcall
pop
sub
jg
stos
xor
lahf
pop
pop
mov
clc
mov
jmp
int3
sarl
ror
rcrl
xlat
call
loop
scas
js
push
js
mov
cmp
sahf
cmp
shlb
in
jns
sbb
or
in
push
int3
lea
fs
imul
xchg
jle
ret
hlt
mov
andb
in
inc
mov
sub
ret
sub
cmpsb
outsl
adc
cld
push
ljmp
out
or
push
enter
sahf
stos
fprem1
sbb
mov
stos
mov
ret
repz
test
dec
jmp
loop
ret
shrb
xchg
fists
outsl
cmp
push
int
mov
mov
xor
or
mov
pop
cltd
sub
out
push
insl
repnz
cmc
push
lds
dec
or
int3
int3
dec
sahf
or
cmp
gs
push
and
and
popa
sub
adc
out
cltd
aas
pop
pop
xor
rep
outsl
mov
inc
push
inc
jl
fcompl
cmc
xchg
push
and
repnz
xchg
fcos
pop
adc
dec
xor
rolb
and
mov
adc
iret
test
jnp
ror
cwtd
xchg
mov
clc
ss
and
mov
lods
jle
jmp
cmp
cltd
rclb
adc
cmp
cmp
imul
jbe
rolb
inc
push
sbb
sahf
push
sahf
pop
cwtl
lcall
sbb
sbb
std
and
cmp
fs
xchg
adcb
imul
ja
movsb
xchg
outsb
mov
mov
cli
repnz
push
cs
ret
shrl
add
push
pop
popf
sub
testl
jne
pop
incl
inc
cli
inc
lods
add
xor
adc
cmpl
mov
xor
in
pop
pop
jo
push
add
cmp
mov
jl
and
adc
outsb
pop
clc
shll
or
mov
shlb
jl
jge
sarl
ffreep
call
loope
pop
repnz
fcoms
or
mov
mov
pop
jnp
sub
std
sbb
push
inc
stos
push
jae
adc
adc
fidivrs
cmp
das
xchg
inc
cmc
jne
inc
or
xor
imul
cmc
inc
dec
adcb
pop
cmp
xchg
cmp
sti
stos
push
rorb
pop
pusha
stos
mov
iret
lcall
inc
ljmp
jne
movsb
and
sub
repz
mov
or
mov
ljmp
dec
in
fsts
pop
inc
adc
xchg
pop
add
data16
lock
out
cmpsl
mov
outsl
add
push
inc
imul
hlt
scas
jne
pop
pop
pusha
movsl
cmp
adc
cs
scas
dec
cmpsb
fs
pop
jge
ret
mov
jbe
adc
or
call
popa
les
inc
sarb
aaa
lahf
outsb
in
adc
mov
inc
jns
jnp
sbb
xchg
xchg
add
es
pop
jg
pusha
push
fists
lds
nop
stc
mov
dec
enter
lock
push
addr16
ss
mov
movsb
or
out
insl
lods
sub
loop
shlb
xor
loop
xchg
out
cmp
js
dec
cmp
sti
es
stc
pop
jmp
nop
or
sub
lods
or
dec
fidivrs
stos
imul
fsubrl
jp
iret
xchg
data16
repz
push
lds
xchg
fidivrl
scas
repnz
mov
inc
aaa
pushf
inc
arpl
adc
popa
mov
xchg
mov
in
pop
loopne
push
jle
stc
sbb
or
js
push
pushf
mov
inc
mov
add
clc
pop
mov
int3
and
xlat
cmp
jmp
cmpsb
jge
and
mov
push
js
sub
xor
fmull
repz
imul
decb
and
or
dec
sahf
mov
cmp
add
mov
fsubrs
mov
pusha
pop
xchg
lcall
cmp
bound
sbb
jae
xchg
mov
mov
push
add
cmpl
push
push
syscall
sub
xlat
xchg
xlat
loope
pusha
jb
mov
push
add
push
icebp
cmp
fisttps
mov
imul
fs
loope
dec
add
and
adc
mov
mov
cmp
hlt
mov
sbb
jmp
push
movsb
mov
xchg
in
add
add
or
cmp
stc
movsl
in
mov
mov
mov
mov
jmp
iret
enter
fcmovnu
roll
ficoms
outsb
inc
nop
out
loop
js
push
js
xor
adc
or
add
adc
pop
and
outsb
scas
jle
xchg
pop
push
pop
push
and
adc
add
jo
mov
jo
insb
xchg
mov
test
inc
adc
push
dec
lods
xchg
and
sbb
xchg
shr
jl
sarl
sub
inc
sbb
sysret
push
lods
and
stos
fdivl
div
sbb
push
inc
popa
out
and
sarl
scas
jnp
inc
mov
aam
insl
stc
int3
push
mov
pop
cmp
in
pop
mov
pop
push
cmc
sarb
mov
movsl
mov
shll
sub
repnz
inc
and
mov
fstpt
xor
mov
sahf
fldcw
fcomps
push
in
add
push
inc
mov
andl
movsl
jns
mov
mov
mov
movsl
mov
push
xchg
and
adc
enter
daa
icebp
sbb
sbb
fiaddl
imul
rorl
jp
bound
jle
scas
jl
and
inc
lods
rcrb
enter
incb
stos
roll
test
cmpsl
and
fcomps
movsb
ror
aad
cmp
lea
add
cmpsb
aam
xor
mov
sub
mov
sbb
pusha
push
sbb
adc
adcb
sbb
sbb
jo
mov
psubsw
addb
js
mov
enter
pop
rorb
aad
push
pop
xor
add
push
push
sbb
jne
shrl
jns
pop
int3
sbb
orb
sarb
add
mov
push
rorl
js
mov
aas
call
js
rorl
sbb
sub
lret
daa
je
mov
leave
add
daa
jns
mov
cltd
sub
lret
xchg
dec
add
outsl
mov
or
out
and
imul
clc
sbb
xchg
aaa
xlat
lcall
pop
pop
add
or
test
out
inc
lcall
mov
movsl
rclb
pop
imul
ljmp
aas
cmp
in
mov
cld
xchg
std
cmpsl
movsl
add
mov
push
lods
bound
movsb
pop
in
cmp
ficompl
cmpsl
add
sub
idivb
jne
add
test
test
xor
xchg
pusha
jae
dec
clc
pop
mov
push
jae
and
add
sbb
das
jge
clc
ret
cli
mov
enter
xchg
cld
bound
leave
sbb
mov
pushf
std
scas
mov
jnp
or
lds
or
das
jno
lcall
jne
pushf
pop
push
push
sahf
fs
cmp
and
cmp
gs
lea
push
in
cli
rcrl
pop
adc
add
jb
inc
push
sti
dec
test
fwait
cli
rcll
or
dec
push
rorl
inc
push
adc
imul
sub
sub
stos
stos
jg
add
mov
aas
mov
or
add
divl
and
movsb
jb
lret
cld
dec
out
jne
add
imul
fwait
sbb
push
xor
jmp
fxch
mov
test
rorl
dec
jecxz
or
je
sbb
mov
xor
push
scas
and
sbb
mov
nop
jp
jecxz
iret
mov
jle
and
or
jns
lods
dec
cmc
push
cmp
aad
inc
inc
pop
in
pop
leave
add
mov
xchg
push
and
inc
sti
jo
loope
mov
xchg
mov
jb
lods
xchg
nop
std
mov
adc
ljmp
xchg
adc
data16
xor
dec
or
lcall
jecxz
popf
imul
jle
pop
dec
mov
or
std
push
jb
std
xlat
arpl
jmp
scas
xchg
fisttpl
cmp
test
mov
mov
pushf
rcrl
nop
popf
mov
and
clc
insb
mov
shlb
push
lds
mov
lods
test
or
lret
lods
fcmovnb
es
gs
sbb
out
push
out
add
sbb
inc
adc
add
ror
cmp
jg
jne
adc
or
push
js
cwtl
sbb
dec
sbb
sbb
loop
cwtl
mov
xor
jo
scas
mov
vmovss
adc
xor
push
dec
add
es
cli
mov
icebp
ror
xor
or
push
sub
out
mov
mov
aaa
repz
mov
cld
or
pop
jo
ficomps
mov
sub
or
adc
andb
push
push
adc
pop
sbb
insb
ret
xchg
inc
mov
jge
mov
fnstsw
sub
push
jmp
test
add
jp
jne
adc
mov
lahf
mov
aas
sub
add
push
aad
arpl
mov
sub
dec
adc
xlat
adc
lret
in
jbe
xlat
in
xchg
xor
mov
add
push
ja
jle
cmp
sbb
sbb
pop
sbb
fstl
imul
push
mov
scas
jge
in
or
push
aad
fsubr
mov
and
imul
mov
ja
jl
xor
jmp
push
jne
icebp
xchg
imul
repnz
jecxz
stc
cld
iret
mov
fildl
lahf
in
and
push
push
push
pop
dec
ret
icebp
adc
mov
cwtl
dec
test
stos
inc
cmp
je
mull
testb
cmp
lea
arpl
lahf
rorl
js
js
dec
out
inc
inc
outsb
sbb
das
ja
push
movb
adc
lcall
scas
addr16
jae
fsubrs
adc
jo
add
mov
or
cwtl
inc
in
inc
lock
add
ja
push
push
jl
or
and
out
dec
jg
dec
cltd
mov
es
mov
xor
sub
negl
arpl
setbe
add
movsb
adc
adc
mov
pop
add
arpl
dec
dec
pop
add
nop
stc
repz
push
push
and
cmp
js
pop
xor
xchg
stos
in
dec
xchg
fidivrl
cmc
lods
sahf
cmpsl
inc
aad
pusha
jae
push
hlt
mov
fisubs
push
filds
leave
rcrb
fnstsw
push
pop
addr16
inc
rcrl
into
jae
popf
imul
das
js
mov
in
pushl
mov
out
movsl
jae
and
jne
outsb
inc
add
mov
inc
adc
xchg
xrelease
adc
aas
lea
mov
and
dec
dec
ja
mov
jecxz
push
cmpsl
ja
jns
loopne
inc
cwtl
ret
or
cmp
mov
testl
xchg
mov
cwtl
cmp
sub
jno
adc
sub
popf
jno
data16
scas
cltd
lcall
sbb
sub
adc
push
adcl
xor
lods
fisubrl
shl
repz
and
dec
sbb
xor
push
inc
push
les
jge
mov
daa
add
fisttps
mov
mov
push
cmp
xor
push
push
mov
out
sub
pop
sbb
dec
in
inc
ja
and
and
push
enter
push
fwait
lea
pushf
or
mov
pop
lret
add
mov
in
pop
lods
xchg
mov
push
sbb
shl
imul
das
sbb
lret
pop
push
ljmp
adc
and
pop
rcrb
fbld
shll
or
insb
mov
into
mov
or
adc
pop
mov
into
sub
add
inc
icebp
jmp
xor
jmp
orl
pop
lods
pusha
lcall
cmp
ljmp
icebp
fs
mov
test
jp
scas
adc
or
mov
outsl
mov
fcmove
out
sbb
jns
push
lea
mov
aam
loope
cmp
repz
adc
je
out
mov
cmp
mov
stos
inc
cmp
cmp
fnstenv
cmpsb
pop
xor
dec
je
sub
les
int
add
push
xor
cmp
fwait
mov
dec
cmpsl
xor
sbb
pop
jo
cmpb
aam
xchg
out
pop
scas
and
mov
add
and
test
push
in
sbb
push
scas
popa
fistps
stc
mov
popa
mov
cli
fwait
xchg
mov
lret
mov
test
mov
jne
mov
xor
jmp
rcl
ds
ds
fnstcw
sbb
out
cmp
mov
js
dec
cmp
js
push
push
jge
stos
lods
fwait
xor
mov
pop
std
aas
dec
pushf
loop
fdivp
pop
cmp
lret
js
mov
dec
add
icebp
leave
mov
push
imul
mov
pop
xor
adc
pop
pop
idivl
mov
jae
int
imul
sub
adc
cmp
cs
mov
aad
dec
movsb
cmp
xor
subb
and
outsb
pop
cmp
bound
imul
cmp
push
stos
fcoml
mov
lret
mov
cltd
loop
fstpt
xchg
les
inc
xor
cmp
js
test
or
dec
out
ret
add
lea
rcrl
fwait
sbb
xchg
dec
jmp
scas
scas
in
leave
popa
jb
lret
or
data16
scas
push
ja
mov
inc
xchg
push
mov
mov
mov
mov
sub
aad
movsb
icebp
mov
int3
dec
adc
mulb
cmc
shl
pop
and
out
push
outsl
adc
xor
cwtl
iret
jle
dec
and
or
adc
xor
outsb
xor
frstor
ficompl
add
add
fs
pusha
and
mov
jno
add
inc
cmp
fidivrs
inc
sub
inc
mov
mov
inc
inc
lods
arpl
sti
das
mov
into
fs
xor
adc
dec
pop
daa
inc
sti
xchg
pop
xor
lret
loope
aas
or
mov
pop
mov
ret
lahf
inc
cmpsl
pop
repz
xchg
out
rol
jo
lods
repnz
pop
data16
jp
jle
cmp
dec
out
cmp
jnp
scas
out
aas
push
push
inc
imul
and
mov
out
jecxz
loope
pusha
ret
inc
ljmp
js
push
dec
pop
cmpsl
popa
iret
sahf
test
cmp
jno
and
ss
mov
clc
fs
divb
pop
pop
fs
in
xchg
hlt
lcall
dec
xchg
mov
adc
push
stos
pop
cltd
into
jbe
jo
mov
sbb
inc
call
mov
clc
ljmp
sbb
dec
outsl
sbb
je
pop
repz
out
imul
adc
loopne
cltd
push
cltd
pop
mov
lahf
stos
stc
pop
sub
add
xlat
imul
xchg
push
jne
lahf
xor
test
jmp
das
inc
cltd
outsl
mov
pop
sub
mov
scas
sub
pop
js
cmpsl
cmp
jle
push
sub
push
out
push
sub
lcall
pop
jns
jmp
cli
mov
es
push
or
xor
psrlw
inc
mov
scas
sub
jae
adc
out
decl
or
test
pop
imul
popf
add
and
or
xlat
jecxz
add
push
cmpsl
mov
or
mov
mov
jl
mov
mov
cs
jnp,pn
push
lret
xor
lds
iret
add
sub
in
imul
inc
test
aam
cmp
cmpsl
mov
js
fidivl
andb
js
scas
xor
mov
iret
popa
xchg
fmuls
fldenv
pop
stc
negl
fnstcw
pop
sbb
cmpsl
or
outsb
subb
inc
mov
adc
rorb
dec
int3
imul
jns
inc
outsb
mov
scas
or
lret
popfw
cltd
xor
int3
mov
xlat
mov
inc
inc
cmc
std
sti
mov
add
fmull
lods
mov
add
in
xadd
mov
scas
pop
sbb
dec
dec
sub
pop
cmpl
out
fcmovbe
pop
rol
jno
xchg
push
std
push
cmpsb
dec
js
pop
stos
scas
jp
pop
inc
xchg
inc
mov
js
sqrtpd
or
psrlq
sub
sub
dec
dec
testb
adc
cld
aaa
cmp
sbb
loop
and
incb
ror
xchg
out
lods
rorb
push
data16
xchg
dec
xchg
sbb
js
jne
outsb
dec
dec
in
les
and
xchg
cmc
jg
pusha
das
lahf
sbbb
push
push
cmp
mov
mov
incl
scas
mov
add
sbb
cmp
addr16
jnp
xor
add
mov
mov
dec
jb
nop
sbb
mov
mov
adc
loopne
and
outsl
clc
adcb
test
je
jmp
ror
rcr
rcr
rolb
enter
xor
sub
js
jl
js
ja
dec
jmp
dec
xor
out
pop
mov
mov
dec
cmp
aam
stos
insb
pop
xchg
xchg
and
pop
xchg
pop
mov
int3
jle
fidivl
adc
ljmp
jmp
xchg
inc
imul
movsb
pop
push
push
popf
sub
aas
inc
ss
xchg
xor
and
fadds
adc
add
xchg
daa
add
add
sub
sub
out
adc
xchg
bound
es
std
jno
fistpll
es
es
mov
adc
sbb
or
or
mov
sub
arpl
jns
lock
aaa
hlt
daa
ja
movsl
sub
xchg
in
inc
mov
mov
push
dec
cli
in
push
movsl
sub
in
mov
in
sub
mov
and
jnp
sbb
test
xchg
adc
adc
sahf
xor
cmp
jbe
mov
jb
jge
jne
or
in
nop
lock
pop
out
sbb
loopne
jmp
sbb
and
pop
adc
imul
jle
cli
fidivrs
out
jne
fwait
cmp
rcrl
dec
xchg
outsb
int3
fcompl
adc
add
lea
mov
iret
pop
testb
popl
adc
sbb
mov
pushf
xor
and
fisubrl
adc
or
cld
cld
sahf
outsl
cmpsl
pop
xchg
pop
sub
cwtl
add
or
mov
shlb
cltd
and
pop
fdivrs
or
outsb
mov
mov
mov
aam
cld
jnp
dec
fwait
add
cmp
ret
xlat
pop
mov
jp
mov
cwtl
cmp
lods
fmuls
jb
jb
addl
dec
pop
mov
mov
pop
je
add
sahf
sarl
cmp
jmp
mov
in
inc
loope
dec
lods
sbb
aaa
out
cmp
sbb
ffreep
fs
fsubl
nop
hlt
mov
adc
lods
add
popf
fnstcw
push
ret
jne
repz
stos
imul
cmp
dec
pop
loope
pop
inc
lahf
cmp
xor
add
sahf
mov
dec
movsb
lods
push
jg
rcll
dec
aad
xchg
outsb
push
vcomiss
inc
mov
lcall
psubd
lahf
push
push
push
sub
imul
adc
ja
mov
pop
in
cli
dec
into
aaa
cmc
jl
mov
or
enter
adc
mov
leave
pop
or
xchg
fdivr
push
cmp
adc
jl
inc
mov
mov
decl
mov
mov
ret
cmp
mov
pop
arpl
nop
mov
mov
jg
pusha
fadd
push
cmp
aam
arpl
imul
repz
xchg
add
jg
add
ja
jl
mov
addr16
inc
imul
xor
lock
stos
lcall
push
push
cld
mov
and
dec
arpl
dec
push
pop
jo
movsb
in
add
ret
aam
jecxz
cmp
mov
andl
push
cwtl
rol
pop
mov
and
out
sub
xchg
pop
xor
icebp
lea
lea
jmp
jno
les
jg
jmp
jns
xchg
test
push
push
xlat
jne
or
inc
call
xor
add
stc
mov
mov
idiv
or
popf
mov
scas
push
ret
icebp
call
out
pop
pop
mov
cld
mov
or
lahf
inc
rcrl
cli
jecxz
faddl
cltd
aas
dec
push
push
xor
pusha
inc
xor
xchg
mov
push
ljmp
cwtl
test
lods
xchg
rolb
jae
mull
nop
call
mov
push
dec
jo
and
xchg
jb
xchg
adc
or
mov
and
add
enter
lahf
inc
sti
xor
mov
lahf
xor
div
jo
or
jg
sar
mov
xchg
push
pop
test
add
add
push
xor
push
adc
lret
pop
inc
cmpsl
xchg
outsb
add
jl
pusha
in
ret
xchg
cmp
inc
mov
in
mov
dec
pop
and
mov
out
mov
lret
xchg
fistpl
lea
jmp
into
leave
ds
xor
xchg
xor
dec
sbb
js
jl
js
jge
pop
push
mov
es
lods
scas
pop
lret
mov
inc
xchg
xchg
and
sbb
in
adc
inc
daa
lret
push
in
clc
mov
adc
add
movsl
jp
lahf
fs
push
icebp
imul
insb
dec
adc
in
rolb
xchg
inc
adc
mov
jne
out
add
test
es
mov
popf
cwtl
dec
dec
sub
lods
push
sub
sbb
and
mov
rorl
sbb
mov
insb
loopne
mov
sub
mov
iret
cld
fst
adc
pop
sub
jbe
mov
ret
in
mov
mov
adcl
shr
dec
test
leave
out
hlt
dec
leave
mov
ss
in
jnp
or
stos
pop
sub
dec
dec
pusha
ror
out
push
jp
add
arpl
inc
int3
cli
xchg
pop
dec
add
loop
pop
testl
nop
outsl
push
fnstenv
jmp
fisubrs
add
cmp
mov
and
ret
lret
ficoms
xchg
testb
sub
sbb
mov
repnz
inc
mov
mov
loopne,pn
js
test
pop
dec
scas
pop
test
adc
xchg
cs
pop
cmp
mov
dec
and
aas
lds
mov
ror
dec
sbb
jbe
or
int
mov
or
and
shr
sbb
xchg
scas
icebp
mov
pop
cld
bound
pop
cltd
cmp
dec
in
push
jp
mov
leave
mov
aas
subl
mov
cli
stc
lock
sahf
fwait
enter
mul
mov
xchg
sub
shrl
ja
mov
sub
inc
jle
lret
adc
aam
mov
sub
popa
arpl
pusha
mov
mov
ss
and
cmc
loop
push
sbb
mov
inc
in
jmp
xor
jl
xchg
xor
aas
pop
ret
js
lods
inc
mull
adc
inc
loope
test
push
mov
stc
pop
cmpsb
and
ljmp
jge
nop
lock
lfs
pop
mov
hlt
mov
cld
jnp
jo
xchg
lods
dec
cmpsb
movsb
xchg
xor
int3
cmc
add
andb
add
jge
lods
js
repnz
cmp
into
jl
inc
arpl
iret
mov
data16
dec
jg
mov
popf
xor
pop
inc
push
mov
push
inc
jae
dec
int3
push
jno
pop
dec
mov
sub
mov
add
push
call
daa
inc
outsb
sbb
fwait
pop
out
stos
sub
andl
stos
enter
in
xchg
cmpsl
out
add
add
ss
lahf
lret
mov
fucomp
xchg
movsl
jo
inc
jl
scas
sahf
movsl
daa
lcall
nop
dec
jae
cmc
test
mov
repnz
cmp
pop
shl
les
mov
je
jno
dec
orl
out
sub
xchg
cmp
data16
jmp
adc
mov
mov
cmp
idivb
pusha
jno
into
add
cld
in
jge
sbb
add
or
insl
testl
bound
adc
push
popf
rcrb
adc
pop
std
mov
stc
xchg
shll
jmp
push
subl
subl
and
add
mov
jbe
adc
mov
lret
mov
hlt
and
add
shr
iret
push
insb
jecxz
sbb
and
data16
cmp
insb
cld
pusha
mov
add
orb
in
adc
adc
test
sub
test
clc
fnstsw
sub
cs
sbb
outsl
pop
hlt
les
adc
pop
cs
add
or
mov
popa
lock
push
data16
mov
mov
iret
stc
adc
sub
in
ds
mov
xlat
cmpsb
push
rcrb
fwait
jbe
push
pop
mov
xor
lods
mov
data16
icebp
add
scas
inc
and
stos
lcall
pop
fiadds
push
int3
push
sub
sbb
mov
sbbl
pop
mov
hlt
push
std
divl
in
xlat
xchg
dec
insb
jns
jns
ror
mov
data16
fisubs
mov
stc
lret
sbb
cs
cmc
sub
mov
push
jmp
ds
sarb
rol
imul
js
push
js
push
or
pop
nop
xchg
pop
push
out
enter
test
cmpsb
in
aas
adc
mov
push
lea
xor
adc
ljmp
insb
push
cmp
jmp
cli
sub
pushf
sbb
mov
popf
inc
ret
mov
aas
fwait
sub
xor
inc
fcos
imul
cmp
or
jnp
enter
sbb
scas
pushf
mov
loope
jl
add
aad
repz
cmpsl
shlb
sub
xchg
rcll
test
sbb
div
jecxz
outsl
mov
lret
test
push
or
bound
mov
add
leave
add
enter
cmc
fs
cld
into
xor
sbb
movsl
test
mov
nop
shrl
dec
mov
pop
leave
roll
int3
push
mov
dec
ja
pop
sbb
jmp
sbb
xchg
cli
jns
sbb
xor
stc
cld
test
mov
ds
or
sbb
push
sub
adc
setbe
cmp
int
adc
mov
test
mov
leave
iret
ror
mov
mov
cmp
push
push
pop
mov
pop
mov
pop
scas
adc
add
out
mov
xchg
out
cmc
data16
mul
sub
ret
pop
mov
mull
jnp
dec
xchg
stos
fists
cmc
dec
push
sbb
push
jmp
mov
cmp
xchg
mov
fiaddl
pop
daa
lds
sbb
cmc
fnstcw
and
daa
scas
and
xchg
sbb
and
loope
or
and
cltd
jo
int3
sub
fsubrs
pop
adc
xlat
imul
scas
rclb
js
and
dec
sub
andl
rcll
shll
out
dec
aad
mov
jbe
xor
xchg
arpl
dec
mov
sti
jmp
iret
push
cmp
mov
inc
fisttpl
lret
mov
xchg
pop
nop
lcall
lret
cli
sbb
imul
or
sub
mov
mov
in
into
add
into
jecxz
repz
push
dec
dec
jle
je
lret
cmpl
jnp
das
into
jp
nop
jg
movsb
out
push
in
inc
lock
loopne
lret
push
inc
leave
or
xchg
adc
test
sar
and
mov
testl
lahf
mov
test
pop
push
sub
add
add
and
mov
pop
pop
fisttps
jnp
adc
inc
or
mov
out
mov
mov
gs
mov
popf
pop
lret
ret
es
nop
ljmp
out
fisubrs
in
mov
pop
jbe
cld
stos
add
divl
ds
leave
mov
xor
mov
add
bound
movsb
dec
imul
cmc
xchg
xor
lods
fisttpl
cmpsb
stos
jle
jecxz
add
lea
jno
jp
cmp
jp
inc
and
mov
adcl
adcl
push
dec
fs
mov
xchg
pop
mov
fisubrs
inc
sub
dec
loop
mov
mov
cmp
jno
cmp
orb
xor
mov
adc
inc
xchg
into
lahf
push
and
sub
pop
xor
iret
push
jg
fidivrs
xchg
push
add
cmp
mov
call
pop
outsb
add
cmp
mov
adc
mov
rorb
xor
push
or
cli
cmc
fldcw
pop
orl
mov
xchg
adc
mov
lret
and
dec
stos
inc
sbb
cltd
dec
sbb
push
test
insb
sbb
test
push
mov
fsubl
cmp
hlt
mov
data16
pop
jnp
and
cmpsb
and
and
push
hlt
fwait
jne
cmp
aam
dec
test
lret
sbb
loopne
cmpsb
mov
inc
dec
lcall
or
pop
cld
jo
pop
jb
mov
add
xchg
je
loopne
mov
jmp
xor
xor
push
xor
mov
xchg
test
jge
data16
mov
and
mov
fcoms
sbb
xlat
jae
in
imul
sbb
mov
enter
cmp
mov
push
add
rol
rol
int
fldenv
and
dec
js
push
js
fwait
jle
mov
jno
sub
mov
sub
subl
and
ret
mov
or
in
stos
add
mov
fadd
sti
daa
mov
popf
testl
rorl
int
jnp
jle
pop
insl
ds
popf
sub
adcb
insl
call
mov
stos
or
inc
dec
jns
in
adc
mov
fsubl
outsb
mov
cmp
scas
insb
dec
clc
jae
adc
call
out
push
stos
sbb
mov
ss
mov
add
cmp
ret
xor
pop
iret
mov
roll
sbb
insb
arpl
xchg
xor
outsb
rcl
sbb
std
test
mov
add
pop
js
dec
in
jecxz
test
fwait
arpl
lds
fwait
es
rcll
mov
lret
lds
cwtl
adc
xchg
jge
jne
dec
sub
pushf
cmp
sbb
add
mov
cs
inc
int
push
fiaddl
jne
cs
out
out
push
dec
push
mov
xor
into
jb
lcall
popa
mov
mov
inc
push
dec
insl
add
dec
je
cmp
inc
xor
lds
jl
cmp
adc
cld
jle
cmp
jp
into
outsl
xchg
xor
or
push
lds
clc
mov
mov
sbb
jl
int
testb
cltd
andl
mov
mov
xchg
mov
ljmp
ret
sahf
test
cmp
rcll
stos
xchg
mov
lds
jl
pop
nop
xor
scas
mov
and
fcompl
jge
ljmp
insl
stc
inc
jle
and
imul
xor
pop
hlt
cmp
adc
sbb
xchg
push
push
test
jge
mov
or
not
test
addr16
dec
rol
sbb
test
sbb
ret
jbe
mov
hlt
int3
jge
pop
push
loop
xor
stc
hlt
aaa
mov
cmp
cmp
push
hlt
lahf
and
push
adc
aad
cmpsb
jp
mov
add
orl
call
mov
cmpsb
loope
mov
xor
insl
mov
cmp
frstor
jmp
sar
xor
sub
adc
into
outsb
call
sbb
ffree
adc
icebp
daa
lods
aaa
in
out
sub
mov
push
adc
call
lret
push
xor
stos
das
in
data16
loope
mov
sti
sarl
sub
ljmp
stos
ljmp
das
mov
rolb
insl
ljmp
and
pop
cmpsb
mov
dec
jp
sub
negl
pop
imul
jp
push
inc
in
repnz
inc
je
jg
or
mov
repnz
or
rorb
mov
iret
fistpll
std
in
jecxz
into
test
jnp
sub
xlat
dec
sub
rcrl
jge
inc
movsb
addr16
call
in
inc
mov
xchg
xor
bnd
mov
adc
fsubrs
nop
push
dec
push
cmpsl
in
xchg
popf
mov
inc
shld
scas
xor
push
lods
mov
xchg
sub
xchg
push
push
fsubr
cmpsl
mov
jp
vpxor
cmp
or
add
ljmp
outsl
sub
loope
lcall
sbb
sub
lahf
repz
mov
inc
xor
mov
and
sbb
and
jle
icebp
out
xorb
addr16
rcrb
lock
cwtl
in
clc
repz
cmpb
std
mov
ja
push
xorl
andl
jbe
mov
into
sub
leave
dec
fadd
mov
push
sbb
mov
dec
clc
icebp
movsb
mov
dec
insl
mov
addb
pop
pop
inc
or
in
lret
pop
insl
mov
out
push
xor
push
push
xchg
cmp
js
jp
push
ljmp
ljmp
sub
orb
push
insb
lahf
mov
fisubrl
cmp
ret
cmpsb
mov
inc
or
pop
sub
test
dec
out
inc
int
xor
add
push
mov
add
push
mov
mov
jmp
enter
aad
enter
xchg
and
out
punpcklbw
js
jl
js
test
pop
pop
lcall
outsl
int3
pop
ljmp
hlt
sbb
xor
mov
std
rorl
add
and
mov
or
sub
or
xchg
jno
push
mov
outsl
pop
xchg
push
add
ds
xor
add
loopne
fcmovnbe
test
imul
xchg
je
jns
sbb
shrb
ret
inc
dec
mov
negb
dec
pop
out
mov
jo
add
or
ffreep
add
stos
xchg
das
out
dec
loopne
inc
and
and
lea
add
out
cmpsb
pushf
xor
jne
lcall
lahf
fldenv
add
mov
inc
pop
dec
lea
add
gs
and
mov
jg
dec
mov
push
sub
jmp
adc
shll
sbb
inc
sbb
pop
inc
js
adc
inc
dec
fwait
push
push
xor
add
mov
dec
inc
repz
jecxz
push
cmp
jle
aam
idiv
add
sbb
inc
fisttps
xchg
jo
mov
fsubrp
xchg
sub
jmp
lock
adc
repz
xor
mov
sbbl
mov
outsb
jne
loope
cmpsl
mov
enter
push
push
in
test
in
cmp
pop
push
or
xor
sahf
mov
js
sub
comiss
in
xorl
adc
sbb
rcrl
jb
into
shlb
hlt
pusha
mov
sub
or
test
cmp
sub
fmul
aas
sub
fnstsw
dec
inc
cmp
push
adc
sahf
fistpll
gs
jae
sub
xchg
push
fildl
testl
enter
jl
push
scas
hlt
lods
mov
mov
bound
or
cmp
jmp
adc
ss
in
push
mov
stos
xchg
cs
xchg
mov
outsb
mov
das
stos
ret
xchg
lods
mov
insb
cmpsl
jp
cmp
cli
repnz
outsb
cmpsl
int
shll
cwtl
scas
mov
or
push
shrb
dec
popa
add
xchg
idivb
jno
mov
and
xchg
icebp
cmc
lcall
das
ja
leave
mov
divb
push
sbb
lock
add
dec
fs
sbb
mov
dec
adc
lcall
sub
into
out
int
sbb
movsl
cmpl
dec
pushl
lea
in
rolb
leave
and
push
fisttps
pop
mov
cmp
lret
push
jae
lahf
pop
sbb
jecxz
stos
pop
push
sbb
daa
add
mov
cmc
int
aad
daa
ljmp
mov
push
andb
je
inc
mov
jmp
mov
cmc
push
or
aaa
pushf
outsl
add
pop
jbe
cmp
mov
add
hlt
popa
mov
jnp
in
cmc
ret
mov
jo
jae
mov
jg
inc
dec
cmp
movsb
shlb
sbb
insl
dec
dec
dec
lcall
mov
stc
iret
out
fldl
iret
inc
faddl
repz
jge
scas
sar
fadd
int
jle
sbb
xor
cld
sub
and
jge
popf
pop
loope
cwtl
pop
lcall
xlat
daa
aam
add
xor
jbe
fs
jg
add
inc
rcrl
gs
imul
push
jo
mov
pushf
loop
cli
js
scas
inc
and
cmp
add
mov
sub
sbb
jo
xor
sub
test
popf
je
pop
mov
push
cmp
and
inc
mov
hlt
sbb
mov
inc
push
mov
out
push
icebp
inc
push
add
dec
aaa
out
clc
mov
or
sub
sahf
dec
push
inc
sub
inc
add
and
push
pop
sbb
lret
mov
dec
add
jae
fbld
es
pop
mov
mov
pop
add
popa
xor
aaa
shlb
clc
cs
shlb
imul
pop
jns
adc
add
pop
cld
cltd
in
bound
fstpt
mov
enter
nop
and
push
jp
xchg
cmc
inc
stc
lods
lret
cmpsl
pop
adc
jnp
xchg
movsl
and
dec
in
xor
adc
inc
add
jmp
ds
enter
rol
pop
xor
push
pop
js
push
js
adc
aas
push
das
and
xchg
xor
imul
jb
cli
pop
mov
adc
popa
gs
xchg
sub
mov
subl
pop
jne,pn
jle
cmp
pop
scas
jge
or
fcoml
repz
dec
scas
cld
sub
nop
adc
sub
fwait
cmp
loopne
mov
outsb
sub
shlb
sti
xor
cwtl
aam
gs
repnz
jne
push
lock
aaa
cmp
mov
xchg
ret
out
and
enter
mov
daa
cmpl
pushf
mov
mov
fsubs
add
pop
mov
xor
dec
adc
shl
mov
add
es
sub
sub
add
outsl
mov
push
mov
cld
gs
cmp
scas
xor
stos
add
fstpl
mov
fdivs
adc
lods
xchg
pop
fcoms
jo
jle
adc
mov
cmc
inc
dec
xor
rcr
xorb
jb
imul
shll
xchg
jg
shlb
and
pushl
pusha
inc
int
jmp
add
dec
add
shll
jno
loopne
mov
push
popf
sbb
jecxz
mov
outsl
and
stos
lods
sarb
pop
aad
sub
adc
jmp
aad
adc
pop
cmc
int
sbb
in
mov
and
dec
int3
das
pop
repz
jmp
bound
ljmp
push
xchg
in
aaa
in
lret
test
pop
les
inc
mov
add
cmpsb
and
adc
loope
mov
and
inc
push
push
fiadds
in
mov
mov
cltd
je
gs
jno
enter
push
sbbl
test
hlt
pop
mov
pop
fwait
push
jle
dec
ds
cmp
das
or
or
mull
icebp
jmp
test
stos
and
push
les
cmc
dec
jge
dec
fsts
and
cwtl
and
stc
pop
jl
ds
int
das
mov
and
fwait
jo
dec
cwtl
or
loopne
out
aam
rorb
mov
dec
inc
mov
call
xor
mov
popa
fs
pusha
js
leave
dec
sub
out
loopne
rorl
mov
dec
jbe
add
insl
mov
sti
mov
adcb
sbb
jae
xchg
repnz
sub
mov
test
loop
outsb
and
shrl
jae
test
pop
loopne
pop
cmc
sbb
pop
adc
shlb
sub
loopne
fadds
test
push
fsubl
clc
mov
mov
ds
jae
jl
cmpb
xor
xchg
pop
cmp
ds
pop
pop
mov
push
ds
mov
mov
int
and
jle
adc
add
or
nop
cmp
fcomp
dec
dec
cs
push
and
lcall
lahf
push
push
and
scas
inc
mov
xchg
jae
sbb
mov
aaa
daa
and
movsl
stc
jns
xor
xchg
mov
and
insl
inc
scas
or
sbb
mov
pop
andb
pop
cli
jae
adc
daa
lcall
sar
int
es
jmp
imul
push
fcoms
lea
fildl
mov
pop
jg
xchg
xchg
movsb
shr
std
sub
aad
lcall
loopne
dec
stos
xchg
fmul
adc
out
nop
out
add
xchg
add
ds
xchg
pop
mov
std
add
mov
incl
lock
cli
jnp
jmp
sbb
lods
enter
out
jge
mov
mov
xchg
lods
movsl
push
addr16
into
push
loopne
test
jle
dec
iret
in
xor
out
mov
scas
sbb
add
lods
stos
adc
mov
mov
xor
mov
ficomps
push
aas
adc
out
jle
mov
cmp
pop
mov
cwtl
pop
inc
decb
mov
mov
in
dec
inc
ja
jp
gs
add
sbb
in
push
push
sbb
mov
sub
push
xchg
ss
out
or
js
add
xlat
mov
loope
dec
testb
add
int3
ds
rcl
aam
xchg
push
jp
mov
jl
js
ja
cli
lock
mov
push
imul
test
inc
inc
lcall
inc
jle
aas
cltd
faddl
cs
pop
stc
jno
xchg
inc
xor
xchg
mov
faddl
jnp
push
call
xchg
mov
imul
mov
mov
icebp
mov
rorl
test
daa
and
repz
cmp
shll
out
mov
movsb
inc
dec
adc
and
jno
lods
mov
es
stc
into
ss
pushf
pop
popf
sbb
shrl
mov
sbb
daa
inc
filds
loop
test
and
shr
movsl
call
sarl
jo
push
pop
testl
mov
adc
orl
mov
mov
xchg
jl
in
push
cmc
mov
inc
rcll
push
push
mov
je
xchg
jg
pop
sub
dec
out
sub
stc
push
clc
add
pop
jns
xchg
mov
or
adc
pop
mov
sar
imul
neg
popf
aam
mov
jecxz
hlt
or
out
inc
out
fsubr
fisttps
test
aad
push
xlat
icebp
mov
pop
push
fwait
loopne
shrb
inc
inc
gs
pop
cmc
sub
xchg
movsl
into
dec
inc
or
sub
test
jb
inc
sahf
cmpsb
in
stc
std
push
iret
sub
movl
push
movsl
mov
jmp
mov
ret
jmp
popa
inc
scas
or
les
mov
cmpsl
inc
cwtl
xchg
insb
pop
test
and
mov
push
das
outsl
mov
mov
sub
sub
int
and
imul
cmp
cwtl
jmp
arpl
imul
sahf
orb
adc
sbb
xlat
mov
repnz
jl
mov
mov
aaa
and
or
test
sub
sub
mov
lret
lods
adc
push
push
or
cmp
add
sbb
mov
idiv
fbstp
lahf
je
faddl
stc
lock
rorb
add
jg
sbb
ds
ret
cmp
mov
frstpm(287
sub
es
add
sub
and
out
fsubl
scas
mov
andb
sbb
sbb
daa
sbb
lcall
dec
in
adc
imul
popf
repnz
xor
outsb
lods
push
cltd
cmp
loopne
lea
jl
and
call
adc
or
inc
fldcw
mov
outsb
sub
mov
insb
cmp
cld
out
jbe
xchg
jb
xchg
ss
insl
or
subl
inc
and
inc
jbe
xor
addl
dec
mov
xchg
jg
sbb
lret
das
cmp
jge
inc
inc
xchg
jae
push
test
cwtl
xchg
sub
jl
sub
pop
pop
imul
add
test
mov
rol
sahf
xchg
fldenv
lahf
or
add
push
mov
in
dec
call
addr16
adc
pusha
mov
popa
fs
adc
mov
pop
pop
adcb
fadd
xorl
jbe
mov
inc
dec
push
gs
shrl
mov
push
in
mov
sbb
jge
xchg
out
and
es
in
and
mov
jle
adc
xchg
aad
sbb
mov
pop
lods
cmpsl
pop
clc
adcb
pop
lods
mov
insb
add
sbb
lret
jns
adc
movsb
rep
cmp
incb
sub
inc
push
mov
test
mov
xor
dec
das
add
lea
sub
aad
jecxz
std
leave
fdivrs
pop
adc
popf
jg
ds
aad
inc
xchg
pop
add
divb
cli
test
addr16
mov
mov
sbb
sub
mov
mov
xor
fstp
or
mulb
testb
lds
fisttps
xor
or
mov
nop
push
lods
sub
insb
daa
ret
gs
mov
sti
test
arpl
test
mov
add
pusha
push
xor
jmp
leave
mov
ror
stos
incl
or
scas
popa
js
push
js
rcrb
mov
inc
or
pop
add
mov
sahf
jl
or
sub
xchg
mov
or
inc
add
sbb
push
mov
push
mov
sub
out
adc
fdivrs
push
pop
mov
iret
mov
cli
in
mov
insl
adc
push
cmp
xchg
mov
cwtl
bound
ficoml
lret
dec
sbb
sub
fmuls
dec
pop
mov
rorb
cmp
dec
add
pop
lcall
jbe
mov
jg
and
outsb
loop
test
iret
dec
lret
test
cmp
imul
sbb
inc
icebp
or
mov
xchg
xchg
mov
xor
push
lahf
adc
pop
adc
inc
mov
inc
popf
adc
inc
fildll
inc
scas
pop
ret
and
das
jb
shll
dec
ret
inc
push
pop
cmc
sub
pop
mov
add
push
cmp
inc
popa
mov
jns
scas
xchg
mov
cltd
fs
jne
test
xor
jmp
mov
loopne
jl
dec
cltd
xchg
cmp
das
test
out
sbb
jno
xor
fistl
shrb
out
imul
fmull
push
lcall
add
jbe
sar
into
xor
sbb
imul
xchg
stc
call
adc
xchg
enter
stos
or
push
hlt
xchg
dec
jns
push
mov
daa
push
mov
imul
nop
adc
loopne
loopne
sub
shrb
xor
fwait
call
mov
data16
repnz
loope
xchg
movsb
cmpl
lret
mov
cmpsb
outsb
test
rcrl
fidivl
cs
mov
inc
mov
pop
mov
push
insl
and
pop
mov
aaa
es
test
xor
xlat
push
xchg
in
popa
bnd
outsb
pop
xor
add
mov
cltd
fsubp
lret
movsb
inc
sub
lea
sahf
js
mov
subl
cwtl
leave
je
pop
mov
clc
gs
jo
ja
lcall
insl
sbb
xchg
int3
mov
xor
cmp
aam
push
frstor
and
hlt
je
shrb
test
insl
mov
mov
call
fdivl
mov
jge
adc
aad
mov
mov
dec
sahf
sbb
outsl
lods
lahf
je
rol
mov
popf
and
pop
sbb
aaa
jne
lds
jl
jb
or
mov
in
add
fwait
and
lock
mov
xor
xlat
add
movsl
mov
repnz
in
jno
lahf
cwtl
imul
in
das
xchg
jno
or
jecxz
movsb
cld
aaa
lret
sbb
sarl
push
cmp
pusha
sub
loope
enter
shr
clc
inc
push
and
int
ret
popa
addr16
sarb
popf
mov
mov
jg
inc
mov
not
pop
cmc
repnz
sbb
roll
mov
dec
test
roll
sbb
inc
sub
add
jbe
test
sti
outsb
stc
les
cltd
int
sbb
inc
out
std
add
outsl
or
cmp
jl
mov
dec
mov
cltd
add
pop
inc
xchg
pusha
xchg
pop
mov
push
xor
ljmp
out
inc
cmp
insb
loope
add
inc
xchg
mov
sbb
mov
mov
aad
movsb
dec
sahf
cmp
xor
std
sbb
add
loope
dec
adc
and
addr16
andb
adcl
mov
mov
sbbb
xchg
lods
dec
ret
inc
stos
sub
sti
nop
mov
ret
adc
aam
scas
ljmp
add
and
and
int3
cmp
adc
fisttpll
shrb
add
sbb
enter
hlt
stos
inc
out
fcoms
iret
sub
pop
push
pop
cli
outsl
bndldx
enter
sbb
and
inc
mov
push
lret
pop
mov
stc
jl
pop
mov
xor
inc
fistpll
out
xor
jae
inc
pop
cwtl
cmp
inc
jae
rcrb
in
insb
jno
loop
ss
clc
xorb
and
push
mov
and
int
lods
push
aaa
stc
xchg
push
shrl
cld
jmp
lret
rcr
aad
shll
or
push
js
cmp
push
enter
movsl
jne
xchg
mov
ret
in
lret
out
stc
push
push
xor
or
cmp
inc
outsl
imul
inc
mov
adc
idivl
dec
and
mov
movsl
xchg
xchg
jno
jb
mov
sbb
in
lods
sub
push
dec
mov
ds
lods
fdivl
stos
mov
sbb
test
mov
mov
mov
dec
test
inc
sbb
or
jp
lods
mov
mov
sbb
test
nop
fwait
loope
repnz
and
add
out
xchg
mov
xor
sub
dec
add
test
scas
sti
pop
pop
mov
mov
or
dec
and
incl
dec
ja
cmp
out
cmp
loope
push
repz
pusha
or
mov
pop
adcl
fiadds
rorb
sbb
xorl
cwtl
dec
xlat
add
xor
shlb
cmp
adc
pop
std
std
xchg
jb
or
push
and
cmp
mov
insl
js
sub
inc
adc
rol
or
call
pop
hlt
push
and
sub
push
cmp
mov
test
mov
inc
and
jge
inc
add
movsl
xchg
jnp
adc
test
aaa
jo
imul
jmp
imul
shr
and
xor
sub
lock
sbb
cmc
inc
or
pop
push
sahf
mov
xchg
cmp
jle
jae
int
test
test
pop
lret
outsb
inc
jmp
insb
push
fisubl
jg
dec
int3
add
notb
outsl
lret
mov
in
pop
and
imul
scas
jb
out
dec
pop
not
into
mov
push
mov
xor
fsubs
push
cli
mov
mov
inc
dec
lds
xor
int3
andl
pusha
ficompl
lods
jbe
xor
push
pop
dec
mov
pop
fwait
in
dec
lea
push
push
and
and
js
push
lds
push
push
cli
in
out
sbb
leave
fs
fists
movsl
xor
psubsw
jne
pop
lods
daa
out
pop
mov
cmp
out
nop
nop
stc
mov
fldcw
sbb
cmpsl
xchg
pop
and
push
fcoms
mov
clc
js
imul
mov
out
lds
mov
fdivl
mov
inc
scas
rcrl
jbe
push
or
add
hlt
and
popa
ljmp
inc
xchg
mov
jge
jmp
sti
or
divb
xabort
push
jp
push
aas
imul
fisubl
cltd
xchg
or
loop
jmp
add
lock
push
cld
push
shll
push
cltd
cmp
imul
daa
add
cmc
loop
pop
xor
pusha
push
mov
cmp
test
ljmp
inc
adc
adc
and
cmp
or
inc
xorb
mov
popa
lahf
addl
jae
adc
movd
fimuls
ret
ret
jae
stos
sbb
sbb
or
fneni(8087
insb
push
mov
dec
mov
add
adc
dec
shrb
cltd
inc
xchg
pusha
or
movsl
mov
cmp
dec
dec
dec
cld
mov
or
gs
lcall
test
mov
add
outsb
mov
or
addr16
aad
lret
push
sub
jp
xor
insb
and
sbb
popf
push
js
and
std
push
pop
push
inc
sub
pop
dec
xchg
lds
cmp
fs
popf
lret
jle
push
in
xchg
ret
jle
cs
cld
js
shlb
mov
or
sbb
movsl
insb
pop
sahf
mov
leave
mov
xchg
inc
hlt
push
jl
aas
outsb
int3
aaa
xlat
cwtl
pop
scas
daa
mov
sub
cwtl
cld
shll
aam
jne
sub
pop
xor
mov
daa
and
sub
int
dec
fildll
pop
aad
out
jne
push
loopne
rol
dec
mov
and
mov
jge
fidivrs
addr16
pop
sub
daa
clc
stc
std
dec
pop
push
adc
ret
add
inc
mov
xchg
add
cltd
push
call
sub
out
xchg
inc
mov
enter
mov
mov
jmp
rol
ds
rol
stos
test
leave
push
jecxz
mov
js
jl
js
sbb
jle
mov
out
popa
pusha
fcmovnu
mov
inc
insl
std
mov
cmp
cmp
and
lcall
jp
jb
ret
add
adc
sbb
arpl
lods
lds
mov
in
or
xchg
ret
xor
sub
ds
and
je
and
cmpsb
mov
into
fists
and
lret
sbb
popf
mov
rolb
dec
pop
and
sbb
push
sub
lcall
inc
jg
xor
insl
mov
jecxz
and
scas
inc
in
sti
dec
mov
int
aas
mov
and
lods
mov
mov
jmp
js
ss
insb
es
xor
test
mov
push
loop
cmpsb
test
ljmp
mov
lret
loop
push
cmp
jge
fmull
and
pop
push
push
icebp
ja
xchg
inc
sub
les
and
aas
sbb
sbb
es
ss
mov
sub
int3
outsl
pop
std
mov
pop
push
sarb
pop
shll
stos
aam
pop
repz
mov
ficomps
movsb
fidivl
ds
jae
mov
xchg
clc
push
sub
fdivrp
popf
sti
inc
xlat
sub
jle
and
js
jp
pop
jp
imul
xchg
mov
mov
dec
aas
xchg
out
or
pop
lret
inc
and
xchg
ljmp
ds
testl
pop
adcb
popf
mov
xor
clc
cwtl
push
test
fidivs
int
cmc
sub
or
neg
jg
inc
and
daa
inc
aaa
jnp
stos
inc
dec
fistpl
pop
popf
sbb
addb
hlt
lea
inc
push
inc
xchg
sub
addr16
sbb
stos
mov
shrl
adc
pop
int
jmp
scas
inc
fiaddl
mov
adcl
xchg
and
push
xor
in
cmp
jmp
cli
movsl
fdivl
xlat
xchg
fisttpl
and
jge
and
mov
cmpsl
ja
mov
cmp
js
mov
mov
mov
repz
lret
jecxz
inc
loop
mov
push
dec
and
xchg
inc
ds
lods
add
ljmp
mov
push
imul
sub
sbb
mov
test
xchg
xchg
cmp
mov
push
es
mov
mov
repz
lds
inc
repnz
ss
sub
subb
mov
lret
inc
push
orb
negb
sbb
xor
mov
xchg
in
cmp
push
push
call
out
sub
push
lahf
mov
in
sbb
popf
xchg
sbb
fnstenv
push
jmp
jne
sub
push
fsubrs
sbb
into
push
pop
sbb
lods
xchg
xchg
lcall
or
inc
cmp
pop
mov
and
repz
add
rcll
inc
cmp
cmpsb
cmp
mov
jmp
call
pop
lock
jmp
cmpsl
in
dec
sbb
fs
jge
pop
and
lds
mov
data16
dec
push
std
fstpl
sbb
sbb
call
xor
lcall
push
pop
inc
jns
add
lods
mov
inc
andl
sub
aad
mov
das
jecxz
icebp
dec
pop
and
cmp
popf
or
faddl
loop
xor
sub
out
adc
jecxz
and
pop
mov
mov
and
mov
ret
push
dec
inc
add
push
xchg
fsubrl
jecxz
cmp
mov
and
pop
jns
push
out
addr16
nop
sti
mov
lret
or
cmpsb
adcl
in
mov
bound
ret
aas
cld
inc
stc
xchg
decl
sbb
lods
cmp
mov
jp
push
push
data16
xchg
test
and
pop
push
jg
pushf
out
or
dec
dec
ja
mov
aad
push
mov
sbb
mov
or
imul
in
hlt
mov
int3
notl
nop
out
and
mov
outsl
shl
movsl
jo
jecxz
jb
add
and
push
mov
inc
lahf
xchg
push
dec
dec
lods
bound
cmc
clc
or
push
xor
cmc
mov
ret
pop
arpl
or
dec
cwtl
pop
aad
es
fstpl
dec
cld
jmp
lret
cmp
sahf
repz
hlt
jb
js
jl
js
mov
pop
shrb
loop
or
push
rcll
push
fidivrs
mov
mov
mov
push
xchg
in
add
movsb
jnp
outsl
mov
sarb
leave
pop
xchg
packssdw
sub
fcompl
adc
or
jno,pn
xor
repz
jae
outsl
test
les
sarl
cmp
cld
xor
jmp
dec
rclb
in
shlb
dec
aaa
sbb
aad
add
inc
mov
mov
dec
sbb
loope
cli
aam
adc
dec
xchg
xor
test
xchg
jp
subb
rorl
and
mov
push
outsb
pop
mov
sti
out
adc
leave
adc
out
cmpsb
call
or
mov
inc
sbb
xchg
adc
outsl
add
mov
xchg
movsl
cmpsl
lret
stc
dec
cmpb
test
imul
rolb
cwtl
lods
pop
push
aaa
test
insb
xchg
lret
outsl
std
dec
fwait
sub
or
insl
pop
cmp
daa
dec
insb
sbb
cmpsb
imul
dec
stos
lret
into
frstor
es
pop
hlt
or
shl
jne
dec
fisubrs
rcr
adc
lods
push
xor
inc
sti
xor
gs
pushf
xor
inc
lret
jnp
imul
dec
stos
cmpsl
ja
xor
xchg
inc
xchg
in
hlt
xchg
cmp
shlb
pop
push
std
fsts
push
iret
mov
sbbb
cmp
xor
les
ds
mov
movsl
mov
pop
mov
sub
xchg
xchg
push
add
xor
inc
call
cmc
lahf
subl
shlb
ljmp
outsl
cmp
data16
jl
push
loopne
pop
je
mov
test
pop
cltd
popa
out
push
stos
aad
jle
iret
repnz
xor
jl
aaa
lock
xorb
int3
fldcw
cli
xor
int
aas
jnp
dec
mov
adc
mov
int
sub
loope
mov
mov
xchg
xor
push
mov
subl
in
sub
xor
insb
adcl
mov
and
cmp
xorb
jnp
popf
addr16
mov
std
pop
lcall
mov
lret
les
or
push
loop,pt
lods
cltd
aas
pusha
pop
ljmp
cli
pop
lods
and
ret
jo
xor
lods
data16
into
xchg
loope
lea
fldenv
test
push
push
mov
adc
cltd
inc
lcall
mov
subb
pop
fildl
fwait
rolb
loope
enter
repz
les
pop
xchg
sub
fimull
sbb
mov
mov
adc
or
mov
mov
cwtl
pop
pop
xchg
in
xchg
push
xchg
mov
inc
push
aas
jae
lea
testb
dec
push
push
addl
adc
outsb
pusha
and
fcoms
loopne
lods
fcmovne
or
rcll
xor
aaa
inc
push
fists
mov
out
lret
mov
das
in
mov
jle
loopne
incb
jp
out
dec
inc
es
adc
gs
icebp
or
insb
xor
ljmp
outsb
test
shlb
pop
fisttpll
sbb
dec
fcoms
out
cmp
cli
xchg
shll
dec
int3
in
mov
pushf
adc
mov
sub
inc
add
push
int3
insl
inc
mov
dec
or
mov
fucomp
sbb
mov
push
shll
adc
aaa
jb
ljmp
scas
clc
or
shl
pop
rcrl
sub
scas
adc
inc
mov
fisttpl
call
dec
push
jo
jae
imul
pop
inc
and
fwait
push
rolb
lock
aas
stc
iret
jb
loope
mov
sbb
push
inc
in
addr16
cmp
insb
xchg
mov
test
addr16
out
jle
rolb
call
pop
rclb
mov
orb
or
cmpsl
mov
ljmp
cmp
inc
mov
adc
xor
mov
icebp
fwait
dec
add
pop
into
imul
sbb
push
adc
mov
lea
incb
inc
jmp
ret
cmp
fcmovne
out
cld
mov
pop
sti
push
insb
out
js
push
js
cli
movsl
pop
fidivrs
lds
int
or
imul
lea
dec
hlt
sti
popf
popf
in
loope
stos
aad
jmp
mov
imulb
decl
cli
test
dec
data16
jecxz
int3
and
xor
xor
xor
add
pop
dec
mov
out
dec
jae
cmp
add
mov
push
jae
mov
cmc
ret
push
popw
push
leave
and
jns
fimull
dec
push
sbb
cmp
and
daa
outsl
add
scas
orb
jecxz
and
cli
pop
iret
jge
adc
movsl
cmp
clc
push
iret
aam
sbb
or
lock
sbb
adc
lods
mov
insl
push
pop
les
xor
dec
cwtl
jecxz
sub
outsl
bound
cmc
repz
inc
push
fimull
fidivl
mov
mov
cmpb
push
mov
aad
incl
and
xchg
xor
bound
mov
xor
addps
push
sbb
push
pop
stc
cltd
sbb
add
int
xor
dec
enter
add
call
fsts
aam
test
inc
sbb
fdivrl
out
cli
dec
adc
or
stos
int
jbe
ljmp
xor
cmpsb
outsb
push
or
popf
cmp
mov
cmc
jbe
xor
pushf
popa
lret
mov
jno
push
std
sbb
nop
aaa
loopne
cltd
sub
cs
or
jbe
cmp
sbb
sbb
or
in
stc
dec
mov
inc
xor
outsb
mov
xor
das
push
pop
jb
jge
pop
sub
jl
out
xor
jl
push
pop
in
mov
arpl
xor
cmp
mov
scas
dec
arpl
rcll
jmp
push
sub
xor
xchg
pop
roll
sbb
push
dec
cltd
les
xor
pop
xchg
jmp
es
push
jnp
popa
jo
cmp
xchg
xchg
sub
out
adc
inc
sahf
mov
iret
into
xor
jmp
and
mov
lods
xchg
cmpsl
imul
mov
jno
fpatan
pop
ds
sbb
xchg
lds
sbb
and
xor
sbb
pop
fcomps
add
jns
mov
xchg
int
sbb
sub
lds
hlt
repnz
mov
jne
inc
std
mov
xor
inc
push
jge
push
fsubs
push
fs
fidivs
push
sbb
lods
xchg
ds
push
xchg
pusha
stos
push
into
pop
push
adc
sub
dec
cmc
pop
jmp
inc
pop
movsl
jmp
dec
xchg
in
push
fwait
not
test
jae
js
mov
push
dec
cmp
fldenv
ror
mov
jne
push
js
cmp
mov
push
and
imul
push
out
sub
ss
xor
fidivs
adc
mov
aaa
shll
stc
push
mov
adc
arpl
push
mov
ja
jge
lock
subl
dec
leave
push
mov
in
das
jecxz
enter
or
mov
jno
addr16
loope
out
adc
adc
or
cmp
jae
fdivs
adc
mov
mov
dec
cmp
push
mov
sbb
sbb
ljmp
mov
push
jae,pn
jmp
jno
pop
hlt
sbb
adc
fistpl
cmp
sbb
aam
enter
test
inc
in
test
sahf
fcomps
aam
push
add
push
ds
push
mov
push
stos
movsb
mov
mov
rorb
dec
in
imul
xchg
lea
in
xor
int
lods
pop
inc
ret
pop
mov
jp
call
xlat
ds
mov
notb
dec
pop
jnp
fxch
lods
sbb
xchg
mov
call
mov
pop
inc
loope
jecxz
pop
mov
pop
mov
stos
jnp
xor
test
dec
push
cmp
inc
or
push
fwait
or
out
fisttps
xlat
mov
mov
enter
popa
adc
lahf
and
ret
jl
mov
xor
mov
jle
repnz
pop
call
addr16
and
ss
into
mov
movsb
out
jae
push
mov
lret
lods
nop
or
lods
outsl
or
or
pop
outsb
int
and
pop
mov
xlat
mov
mov
leave
push
pop
dec
jmp
rcl
int
xlat
aad
sahf
mov
jb
js
js
jl
js
fwait
pop
jbe
add
pop
adc
jg
dec
cltd
popf
jae
push
xchg
lahf
or
mov
lock
lds
lret
jmp
popf
repz
repz
filds
je
fcomps
add
fucomp
push
jecxz
mov
xor
enter
movsb
ret
adc
inc
xchg
jp
inc
xor
aas
mov
insb
adc
lahf
std
push
pop
sti
lea
shll
mov
test
adc
call
ja
ret
repz
popa
mov
std
jl
dec
dec
push
jle
insl
pushf
mov
cli
lahf
jne
jmp
out
jo
mov
shl
or
clc
imul
dec
data16
orl
xchg
jae
arpl
sbb
je
push
mov
pop
adc
in
mov
pop
imul
int3
loop
fcompl
imul
dec
inc
daa
rcrb
push
mov
adc
aam
or
lock
idivb
ret
je
dec
ljmp
push
jecxz
fildl
mov
jmp
andb
roll
dec
jl
jmp
pop
mov
jmp
push
jl
iret
mov
repnz
loopne
pop
iret
movsb
inc
adc
out
add
mov
jne
jg
jl
nop
cmp
mov
fst
dec
leave
pop
or
int3
icebp
negl
pusha
testl
out
lds
add
dec
push
lea
or
scas
cmp
fimuls
imul
sbb
cmpsb
arpl
ljmp
push
jl
sub
mov
shl
jle
xor
xor
or
sbb
dec
shll
ds
mov
sbb
inc
mov
fdivr
inc
aas
xor
fisubl
pop
jnp
fisubl
cli
xchg
push
sub
sub
sub
cwtl
adcl
test
push
mov
dec
aam
xchg
mov
sar
xchg
test
adc
bound
cmp
and
push
sub
lods
mov
es
ret
push
std
jg
add
xor
or
dec
pop
pusha
and
ret
xchg
mov
addl
and
mov
imull
inc
inc
add
adc
cmp
cmp
lds
mull
mov
test
stos
js
mov
xorl
inc
pop
cmp
fnsave
xor
outsl
andb
add
div
jmp
xorl
outsb
lea
xor
ss
out
push
mov
andl
inc
in
int3
dec
mov
out
push
xor
xchg
push
je
ret
outsl
jl
or
cmp
or
mov
in
imul
xchg
sbb
insl
nop
jbe
in
cmpsb
cmpsl
mov
pusha
pushf
lea
fstpl
add
dec
rcr
cmp
aas
outsl
mov
pop
js
xchg
push
cli
pop
sbbl
jb
mov
hlt
aad
loopne
sbb
imul
pop
insb
mov
popa
push
push
ret
xlat
fnstenv
xlat
jmp
pushf
mov
movsb
push
fcoms
xor
lahf
mov
xchg
push
pop
add
ss
push
movsb
pushf
add
pop
les
pushf
in
mov
or
adc
incl
or
mov
ja
out
pop
ret
imul
outsl
sbb
sub
lods
fnstenv
inc
dec
pminsw
aam
sarb
push
insb
cmp
push
rcl
inc
mov
adcl
mov
fiaddl
sbb
xor
jecxz
stos
mulb
movsl
sub
jecxz
pop
into
mov
enter
add
cmp
push
cmpsb
inc
les
jle
outsl
fnstenv
sub
mov
mul
adc
mov
cmpsb
ljmp
dec
ja
push
adc
les
mov
or
or
das
and
ret
leave
test
push
push
sbb
outsl
dec
cmp
mov
test
lds
imul
popa
nop
sbb
ss
xor
push
mov
add
cmp
mov
cmc
add
inc
adc
jg
push
js
push
icebp
insl
push
rorb
stos
test
xlat
or
ss
cmp
rolb
test
mov
mov
out
in
les
icebp
pop
clc
fmuls
pop
test
in
cmpl
mov
addr16
fisttps
and
mov
jnp
push
xchg
popf
bound
ss
pop
push
lds
sub
aam
and
fsubl
dec
rol
js
pop
push
dec
cmp
call
enter
and
sbb
rorl
jmp
jge
loopnew
jnp
or
inc
mov
mov
loopne
jne
pop
stos
and
add
push
sbb
mov
dec
push
dec
int3
dec
xchg
out
jl
popa
out
cmp
lret
adc
xor
outsl
test
popa
mov
rcll
out
imul
mov
cmpsb
lea
or
xor
notb
inc
cld
sub
lgs
addr16
lods
jge
mov
lods
jmp
lea
or
lcall
cld
jp
ret
addl
push
rolb
sub
lock
adc
sbb
aaa
xchg
stos
lds
push
fildl
xor
or
or
je
faddl
mov
cmpsw
enter
mov
movl
jle
fbstp
cmp
and
aad
sarb
call
xor
std
push
ljmp
xor
sub
ss
addr16
jns
or
lahf
mulb
mov
xchg
mov
cmp
and
cwtl
sub
add
mov
mov
cmc
xchg
pop
ss
scas
xchg
dec
roll
cmc
push
lret
xchg
orl
pop
mov
ret
sarb
shlb
insb
mov
push
xor
xor
adc
and
pop
pop
adc
fnstcw
rcrb
push
clc
jns
dec
mov
lret
push
cmpsl
stos
or
cmp
and
mov
or
pusha
ds
jecxz
mov
stc
mov
movsb
mov
pop
jae
sbb
divb
push
sahf
jle
pop
flds
jge
je
jmp
subb
dec
out
push
icebp
inc
loop
push
lods
push
jmp
int
pop
push
mov
js
adc
movsb
or
pop
jg
push
pop
cltd
pushl
psubsw
dec
int3
dec
dec
out
push
sahf
xchg
push
mov
imul
lret
loope
lock
sub
outsl
jecxz
sbb
push
scas
fs
dec
les
push
sbb
inc
pop
rcrl
dec
or
jle
fwait
arpl
mov
jmp
lea
xchg
stos
jb
jnp
mov
cmpsl
fmull
dec
pop
push
add
xor
movsl
cmpsb
mov
push
rorb
ds
inc
jo
add
lahf
xchg
mov
xchg
sbb
dec
pusha
test
dec
arpl
or
testl
fs
xor
inc
jno
test
loop
fadds
xlat
testl
adc
inc
mov
test
nop
add
push
mov
shll
mov
cmpsb
adc
cmpb
shll
pop
fs
mov
pop
cwtl
loopne
repz
ficoms
loope
mov
dec
pop
out
xchg
xchg
fcomp
es
mov
push
add
cltd
movsb
inc
fdivs
mov
fwait
mov
cli
js
jecxz
sub
cmp
imul
or
mov
in
out
call
aam
inc
data16
aad
cwtl
aad
lock
loopne
inc
lock
testb
sbb
mov
mov
sti
in
add
jmp
cmp
andb
mov
lds
cmpsl
push
xor
xor
mov
lds
push
mov
cwtl
and
out
dec
inc
bound
mov
xor
scas
add
lcall
mov
je
std
ret
imul
sub
sub
mov
dec
add
fidivs
add
xchg
ror
stc
push
xchg
xchg
push
sub
mov
or
sbb
add
mov
mov
pop
xchg
xor
stc
sbb
and
pop
jnp
xchg
inc
adc
xor
aas
adc
out
pop
outsl
pop
inc
inc
push
sbb
xchg
mov
cmp
fstpt
mov
stos
ljmp
sbb
outsb
xor
or
push
add
aas
ret
rcl
mov
or
sub
jg
push
js
xchg
fstpt
push
mov
push
xor
pop
pop
mov
rolb
push
push
sti
inc
outsb
cmpsl
sbb
mov
jmp
mov
out
adc
test
stos
cltd
push
mov
dec
sbb
sbb
insl
rclb
fstps
jle
popa
test
dec
sarb
mov
adc
mov
inc
inc
push
cmp
push
in
or
push
or
dec
and
xchg
adc
xor
test
scas
das
dec
scas
ja
fnstsw
les
add
xor
sub
or
cltd
dec
das
ficoms
push
out
sub
mov
stos
mov
mov
ret
mov
test
xor
jecxz
rclb
je
xchg
push
xor
aad
add
rorl
ja
orb
sarl
inc
fisubl
in
inc
jg
adc
scas
mov
push
push
jno
ret
sub
iret
mov
popa
and
fsubrl
jg
jmp
lahf
push
cmp
sub
lret
mov
cs
adc
jl
sub
inc
stos
dec
lds
pop
aas
outsb
ja
lods
lret
clc
inc
add
stos
rcrb
fisubl
and
xor
leave
das
and
jnp
add
les
loope
fists
test
sbb
mov
out
iret
jmp
fwait
test
or
mov
repnz
add
jmp
pushf
daa
xor
adc
fwait
jbe
push
mov
xchg
mov
call
or
sub
das
inc
aad
aas
sub
daa
or
clc
cmp
xchg
dec
scas
or
std
mov
ret
rcl
bound
sbb
add
xchg
and
cs
jge
stc
roll
xor
and
jl
xchg
add
aam
outsw
sub
add
int3
mov
pop
jp
mov
subb
loope
in
ljmp
cmp
sti
pop
ftst
mov
mov
movd
in
dec
arpl
pushf
xlat
mov
inc
into
shrl
jmp
in
test
lods
sbb
cld
lea
and
test
mov
jno
pushf
fs
inc
adc
fistpll
int
push
ds
imul
fisubrs
sbb
jp
push
ljmp
and
mov
dec
jo
pop
inc
push
dec
and
bound
test
mov
cmp
push
sub
cltd
shrb
dec
leave
mov
or
test
xchg
mov
pushf
movl
xchg
dec
push
decl
dec
into
xor
push
inc
xor
push
test
sub
loope
dec
xor
das
inc
cmp
pop
loope
jnp
sahf
in
sub
aaa
cltd
loopne
std
ds
arpl
fwait
and
inc
mov
push
std
sub
adc
and
aam
adc
test
out
pop
fisubs
insb
adc
lods
push
sbb
xchg
mov
sub
and
stos
adc
repz
lahf
iret
mov
cmc
out
mov
imul
xor
fisttpl
mov
cmpsl
popf
cmp
popa
sbb
jmp
sub
jo
mov
adc
xor
rorb
nop
inc
bound
inc
cmpl
sbb
push
adc
in
inc
sub
mov
ja
pop
dec
add
push
pop
in
xchg
pop
dec
push
in
inc
push
push
lret
mov
fcompl
push
cmpl
jno
lret
mov
xorb
push
and
out
or
arpl
add
cmpsl
ret
push
cmpsb
jae
sbb
and
dec
iret
imul
dec
scas
outsl
and
sbb
jge
into
out
jp
xchg
scas
add
cltd
mov
mov
outsl
and
mov
xor
shlb
mov
fwait
jge
mov
mov
push
inc
bound
cltd
movsl
and
push
imul
mov
stc
lret
mov
idivb
out
inc
pop
call
stos
xor
pop
cmpsl
fmull
popf
adc
sarl
and
adc
negl
faddp
inc
mov
mov
jp
sbb
test
cmc
inc
daa
out
mov
sub
fcomi
cmp
test
mov
mov
mov
cs
sbb
fimull
out
lahf
sbb
jne
jmp
ror
fcmovbe
rcr
mov
js
push
or
push
js
mov
fldcw
int3
push
xor
xcrypt-ecb
cmpsl
dec
jae
pop
inc
pushf
jnp
mov
in
in
es
xchg
iret
xchg
mov
sub
shll
inc
push
fimuls
sub
or
cld
fistl
dec
test
lods
push
or
jo
je
xchg
push
cmp
roll
mov
push
inc
xchg
les
fdivl
pusha
mov
fidivrl
xchg
ficomps
cld
push
out
data16
ss
mov
decb
nopl
mov
sahf
inc
iret
sub
mov
and
test
inc
and
stc
es
mov
push
mov
daa
or
cld
adc
mov
or
add
push
dec
push
xchg
mov
call
fsubrs
mov
pop
in
aaa
push
aam
sti
push
lods
push
or
sub
mov
add
cmpsl
mov
outsb
pusha
or
push
stc
rol
in
pop
iret
jbe
pop
sahf
stos
shl
aam
jnp
mov
sbb
cmp
mov
leave
pop
popa
mov
xchg
test
dec
xchg
adc
fistpl
mov
aam
adc
and
loop
mov
cmc
mov
pop
jp
fcoms
adc
xchg
int3
pop
jne
adc
sub
mov
out
test
ss
xor
scas
cmp
add
test
test
push
adc
shrl
mov
pop
ja
add
je
stos
dec
mov
or
aam
imul
adc
orb
pop
mov
int3
mov
push
in
or
leave
pop
jb
mov
enter
mov
inc
add
cli
or
in
add
scas
mov
mov
int
sub
stos
cmp
sbb
sarb
mov
jo
daa
imul
ror
and
jp
arpl
lock
mov
std
stc
pop
push
jle
add
faddl
jno
lcall
sub
sub
cmp
ret
jns
xor
mov
sub
mov
jecxz
jae
dec
adc
jnp
pushf
xor
dec
cmp
scas
mov
cmovge
add
enter
addl
test
inc
mov
into
sbb
cmp
inc
push
push
and
mov
xor
adc
test
add
fldcw
shl
incl
or
andl
cmp
sub
lahf
mov
scas
add
movsb
pop
test
jp
add
paddsw
mov
fcompl
ds
jno
test
sbb
or
push
or
mov
jle
aad
bound
in
out
sahf
pop
cmp
mov
fwait
pop
add
flds
xchg
les
arpl
mov
pushf
jl
cmp
xor
add
dec
xlat
mov
fiadds
dec
inc
lret
and
in
addl
icebp
mov
xchg
pop
int3
stos
rolb
pop
push
setne
fisttpl
pop
xor
lret
icebp
fisttps
pop
sahf
dec
cmp
repnz
pop
out
inc
push
ret
push
or
scas
dec
xchg
pop
and
in
mov
xor
into
ret
andb
dec
std
push
nop
bound
es
add
nop
jno
xor
jbe
sbb
mov
pop
sub
or
jle
push
and
dec
divl
rcrl
dec
mov
scas
sbb
sarb
test
mov
cltd
test
xchg
loop
sub
xchg
cmpb
iret
int
adc
es
sbb
imul
out
enter
mov
mov
push
xchg
imul
jo
xor
js
mov
mov
pop
mov
xchg
push
push
push
push
jno
pop
js
cmp
cld
test
dec
scas
xchg
cltd
lock
mov
dec
ljmp
cmp
and
imul
push
pop
inc
jae
gs
mov
add
pusha
cmp
cmc
fsub
or
decl
and
jmp
pop
mov
out
bound
fdivrl
lret
loope
out
jno
jne
pop
pop
xchg
loope
and
jp
or
xchg
cmp
idivb
sub
dec
sbb
dec
mov
mov
jmp
aas
vpmullw
xlat
jne
fs
pop
bound
or
js
jl
js
pop
sub
pop
mov
mov
sahf
jae
pop
push
aas
and
in
lahf
xor
sub
bound
fnstsw
push
incb
cmp
jle
pop
pop
xchg
sahf
in
into
adc
xchg
push
test
stc
pop
daa
mov
jb
pop
push
loop
loope
fnsave
xchg
ss
fimull
lock
sbb
jg
mov
rol
pushf
mov
add
fidivrl
jecxz
and
xor
xor
push
lret
inc
mov
mov
xchg
pushf
pop
int3
mov
adc
enter
jb
mov
pop
dec
stos
or
cmp
pop
mov
les
jnp
ja
add
cmp
mov
push
mov
mov
inc
icebp
out
cmp
stc
sub
cmp
mov
int3
arpl
rolb
cs
cs
mov
jo
cwtl
inc
jmp
lcall
mov
fbld
fneni(8087
icebp
lahf
flds
mov
stc
adc
out
notb
aas
xchg
arpl
jbe
ret
pop
sbb
repnz
dec
mov
es
push
or
or
sub
sbb
loope
jp
orb
sbb
push
push
mov
cmp
jge
js
jnp
xor
push
jl
cld
outsl
push
push
pop
pop
push
cmp
pop
mov
push
sarb
mov
dec
vaddpd
popa
cmp
cmpsl
and
call
xor
repnz
cmp
daa
imul
xor
das
icebp
inc
sub
xchg
cmp
sub
outsb
loope
inc
dec
pushf
add
popf
inc
out
and
push
mov
sbb
pop
int
xchg
mov
add
cmpsl
mov
inc
dec
and
xchg
shll
push
pop
ljmp
jae
movsl
and
dec
xor
jg
pop
fs
and
mov
cltd
adc
fsubs
mov
mov
dec
mov
push
sub
rolb
mov
xor
xor
push
out
mov
xor
cwtl
or
orl
cltd
int3
outsb
mov
sub
mov
rorb
inc
repz
out
adc
mov
pop
loope
rorl
movsl
aad
scas
ds
mov
imul
cmp
jge
or
ficomps
je
cwtl
imul
and
mov
jo
in
sbb
dec
in
pop
pusha
xorl
ja
mov
loope
iret
sbb
adc
adc
bound
lahf
sahf
push
add
add
cli
jp
shll
or
xlat
shrb
outsl
pushf
popa
dec
mov
adc
mov
sbb
and
jge
adc
dec
nop
roll
inc
loopne
mov
in
sub
or
jae
jmp
or
fs
cmp
in
das
push
adc
enter
iret
mov
pop
and
push
lret
jge
loope
shll
xor
add
sub
dec
jbe
inc
jl
sbb
sahf
popa
scas
mov
mov
dec
idivl
cmp
nop
in
mov
mov
pop
punpcklwd
js
xlat
jmp
cmp
inc
inc
add
push
or
mov
aam
push
out
roll
mov
and
pop
andl
les
ljmp
call
cmp
jne
xchg
mov
sbb
pop
in
xlat
es
repz
mov
and
pop
inc
scas
pop
shll
je
xchg
dec
adc
pusha
arpl
xor
js
lret
fsts
nop
pop
push
adc
lcall
add
pop
cmp
cld
aaa
gs
fisttps
popf
das
stos
xchg
xchg
dec
lock
popf
jl
jb
jbe
dec
adc
int
lcall
jnp
lock
inc
mov
testb
mov
push
js
in
sahf
scas
push
std
sbb
or
sarb
cli
adc
or
mov
jae
push
int
or
imul
outsl
adc
cltd
fidivs
sbb
jne
and
aas
xor
cmc
inc
mov
jae
lock
hlt
push
mov
int
test
pop
popf
pop
data16
sbb
fs
roll
lea
pushl
jmp
cmp
rol
rcl
fcmovnb
mov
inc
rolb
adc
push
js
and
in
xchg
sub
jno
lods
push
dec
loop
movl
and
sub
cli
sbb
clc
fmull
xchg
cs
xor
mov
xor
sahf
cmpsl
inc
push
xchg
or
pushw
lock
leave
jne
add
jo
fwait
sbb
jne
push
xchg
and
or
add
and
call
sub
outsb
enter
neg
xchg
fisttpl
imul
or
aaa
cltd
xchg
cs
loopne
adc
pxor
mov
sub
lock
mov
jmp
inc
stos
adc
je
mov
out
add
test
xchg
int3
push
xor
cmp
subl
or
xor
out
jecxz
jns
movsb
inc
pop
fs
xlat
outsb
les
out
cmp
jp
cmp
xchg
ljmp
mov
push
pop
fcmovnb
jp
movsb
fisubs
aam
fs
or
and
mov
cmp
mov
push
push
je
in
cltd
sbb
mov
mov
test
rcr
ret
mov
pop
popf
rolb
cmpb
mov
sbb
pop
add
dec
data16
mov
and
cmp
out
mov
push
mull
hlt
dec
push
pop
add
sbb
pop
ja
mov
fnstsw
mov
hlt
add
lret
pop
iret
daa
aaa
or
mov
jae
mov
pop
pop
dec
xor
outsl
les
out
dec
pop
mov
std
test
lods
inc
lea
pop
jbe
and
add
dec
push
and
pushf
jns
lds
inc
pop
inc
aam
inc
sbb
es
push
xorps
pop
fnstsw
push
gs
repnz
testl
xor
aaa
inc
inc
mov
negl
scas
aam
xlat
fstpl
pop
lods
pusha
int3
sbb
push
mov
jns
fwait
dec
in
imul
cld
sti
lock
add
lahf
out
hlt
jmp
fidivrl
shrl
adc
mov
pop
and
jmp
push
jo
add
lret
push
aad
lock
fisubrs
sahf
popa
stos
adc
push
push
mov
iret
or
lea
lods
cmpsb
mov
hlt
ljmp
dec
inc
lods
mov
pop
push
popf
inc
pop
fnstcw
cmc
inc
cmc
loopne
in
xchg
fisttpl
cmp
inc
cmpb
in
into
xor
mov
sbb
cmc
arpl
int3
addr16
mov
pop
and
jl
pop
aad
xor
inc
sub
adc
iret
inc
adc
lahf
sbb
mov
addr16
dec
pop
ss
adc
push
aad
inc
fwait
movsb
test
pop
in
cmpsb
pop
xor
lret
test
fiadds
lods
jp
xor
mov
pop
out
jecxz
inc
aaa
sub
aam
xchg
sti
lods
inc
pop
pushf
std
jbe
add
test
or
inc
pop
mov
mov
addr16
push
rorl
and
push
aad
dec
xlat
mov
and
cmp
cmp
mov
adc
fstpt
cmp
shll
sub
lret
and
push
jg
int3
fs
out
pop
test
or
dec
int
adc
jge
shr
sbb
inc
lock
inc
icebp
push
pop
aam
push
aad
jle
pop
push
and
pop
std
call
cmp
sti
aad
test
adcb
scas
xchg
xchg
shlb
cli
stos
enter
pusha
jo
shl
shr
cs
xchg
lahf
xchg
push
sbb
jnp
je
jae
jecxz
mov
sbb
pop
outsb
adc
mov
cmpb
sub
fistpll
test
sbbb
fists
and
in
clc
xchg
enter
imull
cld
jecxz
mov
dec
add
stos
popl
xchg
out
inc
inc
cmp
sbb
cwtl
pusha
pop
test
ljmp
dec
sbb
mov
jo
div
jbe
es
or
roll
push
sahf
clc
movsl
mov
sbb
fdivr
cmc
pop
imul
testb
sbb
shl
imul
adc
mov
jl
push
test
cmc
mov
hlt
cmp
pushf
inc
mov
sub
lret
xchg
lea
jmp
aas
aas
or
movsl
pop
cli
jb
sbb
push
js
rcrb
fnstsw
fninit
push
xor
dec
jae
fdecstp
stos
push
stos
stos
push
pop
sbb
out
push
out
clc
fdivrs
aad
fsubrs
mov
dec
jnp
imul
rcrl
mov
shlb
xchg
cli
jb
add
inc
pop
adc
rclb
mov
test
movsb
mov
sbb
xchg
dec
push
loope
imul
pop
mov
push
arpl
fistpll
js
pop
sub
jae
lret
mov
mov
imul
sarb
dec
or
push
mov
clc
cmp
and
std
das
or
dec
sarb
push
push
dec
xor
push
test
cltd
cli
iret
xchg
into
xorl
popf
inc
xor
mulb
and
loope
and
jb
jb
shl
int3
andl
test
xchg
rol
mov
frstor
sbbl
out
mov
jo
testl
xor
push
cs
lods
das
ret
adc
lds
cmp
lock
mov
xchg
adc
mov
add
ljmp
test
mov
out
dec
cltd
jp
cmp
iretw
push
clc
je
push
jns
je
dec
test
nop
cmc
pop
enter
shll
or
jge
dec
mov
xchg
cmp
sub
mov
or
jno
rol
shl
hlt
rorl
rcll
aad
cmpsl
jae
in
inc
pushf
out
in
push
pop
rclb
xchg
adc
sbb
add
pop
cmc
cwtl
push
inc
cmpsb
ljmp
mov
pop
icebp
add
cli
dec
icebp
sbb
pop
je
das
clc
repnz
sub
sbb
and
mov
xor
push
pop
cld
fmull
addb
jge
movsb
in
sub
or
sbb
scas
flds
add
xchg
movsl
mov
int
out
dec
loope
jb
insl
pop
sbbl
in
pop
repz
sahf
lock
mov
cmp
mov
jae
dec
testb
mov
out
data16
icebp
push
inc
inc
and
mov
push
inc
cmpsl
idivb
out
jl
add
jle
push
aad
gs
pop
insl
sbb
mov
or
test
fneni(8087
add
aad
adc
orb
lds
add
mov
mov
test
mov
xchg
mov
mov
fmul
and
rol
pop
jnp
daa
inc
add
sbb
xor
lahf
sbb
push
pop
sub
mov
aam
lcall
fnstsw
cs
iret
fistpll
sbb
jne
lahf
and
leave
and
in
sub
insb
stos
nop
xchg
outsb
mov
push
mov
aaa
std
in
fwait
stos
push
mov
nop
outsl
or
aas
push
or
xor
dec
loop,pt
pop
enter
loopne
jl
cwtl
adc
outsl
adc
dec
add
es
mov
mov
dec
call
cmpsl
gs
pop
sub
push
inc
inc
add
test
or
add
inc
or
sbb
mov
sarb
adc
mov
ds
jnp
repnz
adc
xchg
mov
xlat
arpl
dec
pop
jle
pusha
cld
js
push
mov
inc
insb
pop
sbb
inc
jg
mov
enter
mov
sti
mov
cmp
cmp
arpl
lock
jp
mov
cltd
adc
xor
int
or
and
mov
cli
aad
sbb
sub
ljmp
mov
mov
loopne
lds
xor
pushf
dec
mov
adc
mov
aas
repz
mov
mov
shl
jle
xor
aas
mov
fdivl
inc
xchg
insl
out
fsubs
cltd
popa
fdivs
jmp
dec
adc
scas
pushf
int3
mov
adc
lret
arpl
push
jb
out
into
aam
lds
test
shll
inc
loope
incb
xorb
inc
xlat
cli
int
push
pop
out
fwait
mov
out
push
xchg
icebp
push
and
lock
adc
pop
pop
popf
pop
stos
aaa
or
daa
cmp
out
movsl
lds
aad
pop
lret
pushl
lea
pushl
jmp
les
fidivrl
out
jl
pop
push
push
jg
push
js
mov
pop
or
push
icebp
or
pop
and
lea
imul
pop
mov
add
jns
cli
jle
jmp
dec
call
pop
push
inc
sarb
mov
nop
xchg
push
test
mov
push
sbb
inc
pop
xchg
lret
gs
leave
inc
or
mov
xchg
stos
push
mov
lret
int3
or
cmp
sbb
arpl
les
psllq
enter
push
out
cmp
sub
sbb
test
lds
lcall
out
push
or
pop
in
push
dec
incb
add
mov
mov
scas
push
adc
loop
cmp
mov
mov
fildll
repz
mov
ss
nop
sahf
sbb
cs
outsl
mov
xor
mov
cld
add
jne
das
sti
int3
inc
push
stos
xor
orl
and
jp
sti
pop
xchg
sub
in
xchg
lods
dec
pop
enter
lcall
into
ja,pn
enter
je
or
xor
mov
mov
aaa
pop
jno
fldenv
pop
ficompl
jbe
mov
push
popf
mov
mov
bound
divl
sbb
or
repnz
cmpsb
ja
int3
push
or
stos
and
mov
aas
mov
addr16
outsl
ds
or
add
inc
ret
inc
xor
inc
xor
mov
fisttpll
addl
add
gs
fucomp
call
add
dec
xchg
ljmp
mov
mov
add
adc
out
sub
arpl
rcr
fsubs
jecxz
in
or
jns
inc
loop
jg
fs
xor
adcl
mov
pushf
outsl
or
sub
ds
cli
jge
divps
pop
fcoml
mov
jg
cltd
loopne
cltd
call
pop
ret
cmc
xchg
lret
lret
aas
or
adc
cltd
mov
mov
outsl
xchg
cmp
ds
fisttpl
or
push
add
je
aas
cmp
xor
or
cltd
negb
push
int
movsb
loopne
mov
cmp
xchg
in
cmp
mov
in
mov
cmp
jge
inc
int
adc
and
rolb
pop
lock
clc
jbe
insl
dec
mov
jle
inc
xchg
mov
jne
and
pop
in
aaa
cmpsl
inc
mov
cmpsb
sub
jmp
mul
mov
xor
sub
push
stos
mov
xor
imul
sbb
dec
std
pop
cmc
and
roll
and
lds
xor
inc
mov
sub
or
cwtl
cld
mov
push
jno
int
add
imul
sub
mov
xor
mov
clc
inc
pop
jge
mov
fsubr
sbb
iret
push
push
out
loop
sbb
push
push
or
std
lcall
movsb
aaa
insl
jb
hlt
xchg
xchg
xchg
roll
mov
jecxz
sti
inc
ss
aad
or
fdiv
jge
push
add
fdiv
sub
mov
mov
sub
lock
dec
test
sub
orl
or
xchg
filds
mov
mov
push
das
andb
aas
xchg
jns
sbb
aas
lahf
aaa
xor
outsb
mov
mov
cmpsb
or
shl
je
adc
inc
jmp
inc
or
ret
mov
cmpsb
adc
scas
shr
inc
sahf
pop
sbb
insl
bound
icebp
jne
cmpxchg
and
mov
xorb
hlt
xchg
shr
push
mov
sbb
dec
je
fldt
xor
pop
and
xor
dec
adc
inc
dec
mov
mov
pop
addr16
dec
and
pusha
dec
push
lcall
leave
or
in
imul
fs
cli
or
pushf
add
rcll
ret
sbb
lods
int
jge
sub
mov
leave
pop
xor
dec
jnp
sbb
mov
lods
lea
adc
or
push
mov
data16
cmpl
and
popa
cmp
cmp
out
cwtl
sub
sbb
mov
lea
pushl
jmp
lret
leave
rcl
fcmovb
sub
add
jg
push
js
aas
loopne
mov
adc
mov
ljmp
mov
xchg
push
xchg
cmc
jg
cmc
mov
ljmp
sub
out
ljmp
cmp
imul
dec
dec
inc
and
addr16
jo
hlt
jmp
shrb
rol
int
mov
cmp
daa
mov
or
jecxz
lock
adc
scas
repnz
xchg
or
mov
and
xchg
adc
mov
mov
and
or
aad
jne
arpl
arpl
out
in
pop
and
add
xor
je
or
js
mov
push
jae
cmp
push
mov
fdivrp
mov
xorl
push
jae
adc
shl
pop
jecxz
rcrl
aad
sbb
arpl
addl
ds
inc
ss
add
div
stc
ljmp
pop
outsl
leavew
mov
xchg
adc
fidivl
xchg
dec
mov
out
dec
outsl
imul
aam
jo
ret
adc
enter
ret
pop
or
cmpsb
jb
jecxz
xchg
cmc
and
fwait
add
adc
je
mov
in
lds
daa
inc
in
mov
fmul
jle
std
mov
imulb
test
sub
repz
sub
or
aas
jae
mov
bndldx
cmp
in
test
in
aam
cltd
pop
pop
add
push
sarb
testb
xchg
xchg
in
or
test
pop
cmp
ljmp
push
inc
cltd
sbb
mov
cld
jp
das
rclb
enter
adc
movsl
sbb
and
fmuls
fldenv
cmp
push
mov
scas
add
movsl
sbb
stos
or
ret
push
pop
sbb
sub
aas
push
stc
dec
add
jne
or
aad
test
pop
pop
mov
or
loope
sub
call
fsubl
shl
sub
in
pop
push
test
icebp
push
idivb
jns
les
mov
xchg
sub
test
divb
xor
or
aad
lea
mul
xchg
mov
xchg
mov
cwtl
dec
or
nop
sti
mov
scas
jbe
fsubrs
cmp
cmp
ret
sub
pushf
mov
into
outsb
cmp
cmp
idiv
pop
xchg
pop
lahf
mov
test
xchg
stos
popa
cmp
outsb
xorl
cli
cmp
mov
pushf
lret
jge
lds
pop
imul
jbe
insl
mov
or
cltd
je
add
das
jp
mov
mov
stc
pop
sub
mov
jmp
dec
outsl
jb
cmc
imul
pop
cmp
jns
push
sub
jp
mov
in
jp
xor
in
cmp
cmpsb
push
mov
aas
pop
adc
and
add
insl
sbb
add
lret
jecxz
mov
popa
push
xchg
mov
adc
ljmp
rclb
je
dec
aad
mov
popa
adc
popa
xor
shrb
fisttpll
or
lcall
lcall
mov
lahf
jns
je
inc
cld
xor
pop
shr
or
shrb
jle
sub
jl
jne
das
xchg
jp
or
push
jmp
insb
push
jne
outsl
mov
mov
out
repnz
jns
adc
fstps
add
pop
and
sbb
ja
sub
jp
mov
push
fistpll
bound
popf
enter
pop
mov
mov
and
push
mov
cmp
iret
mov
mov
int
aaa
pop
jl
cmp
pop
ficomps
outsb
sbbl
hlt
jae
int3
and
inc
lret
icebp
sbb
stos
xor
mov
adc
mov
or
push
nop
push
push
xchg
sub
repnz
add
int
or
pop
and
jbe
pop
xchg
fcoms
mov
pop
fdiv
add
sbb
cmpsb
jp
mov
les
add
jge
fists
sub
xchg
mov
idiv
adc
jns
cs
sbb
pop
scas
cmp
mov
dec
jecxz
mov
jne
sub
sub
pushf
inc
sbb
imul
fstpt
adc
dec
ds
rolb
mov
push
pop
call
mov
mov
add
pop
jmp
rol
int3
fcmove
fimull
fstl
mov
and
js
jl
js
scas
arpl
push
jb
cmp
out
fdivs
xor
cmp
mov
aam
int3
jne
or
and
sbb
arpl
xchg
out
mov
push
mov
push
adcl
outsb
adc
xchg
mov
push
hlt
sub
inc
pop
dec
ja
lds
push
mov
loopne
mov
mov
sbb
sbb
dec
mov
pop
dec
cltd
xchg
ja
repnz
sahf
xor
jge
cmp
insb
and
xor
daa
test
fcom
nop
sbb
xlat
cmp
and
push
imul
ja
adc
mov
sahf
jae
cmp
lret
int
ljmp
test
lock
jecxz
aas
mov
mov
adc
test
xchg
nop
mov
jmp
sti
sub
in
vmwrite
fsqrt
jg
jo
cltd
sub
sub
hlt
pop
pop
xor
scas
mov
popf
or
sbb
pop
inc
sahf
gs
test
mov
in
lods
jge
fwait
cmpsl
lahf
fnstsw
push
mov
push
sbb
sbb
vpmuludq
test
xor
pop
adc
pop
outsb
cli
xor
lock
test
dec
shrl
or
ret
add
fdivrp
xor
pusha
xor
mov
and
mov
mov
cmp
popf
jae
orl
sbb
shr
and
aad
pop
sti
test
mov
loope
xor
leave
out
cmp
xor
mov
das
sbb
xchg
notl
push
push
push
pusha
shrd
or
ret
scas
loopne
sub
aaa
jo
gs
xor
mov
sub
clc
enter
mov
mov
fmull
test
stos
sbb
mov
push
lods
adc
and
and
cltd
das
sub
push
fdivrl
xchg
pandn
inc
pop
stos
cltd
or
or
test
arpl
add
pop
dec
lock
pop
nop
jle
mov
lcall
call
scas
push
sub
sub
cmpsb
mov
sbb
repnz
adc
lret
cltd
pop
das
xchg
popa
call
pop
jb
sbb
mov
dec
pusha
loope
movsl
ds
lret
loope
std
divw
popf
inc
jb
push
cmpsb
stos
push
fs
addl
mov
cli
or
scas
and
mov
pushf
cwtl
jbe
loope
scas
cmpl
pop
mov
pop
jmp
xor
lds
inc
adc
push
push
sbb
aam
cwtl
push
push
dec
cmp
push
or
sub
addr16
pop
push
mov
sbb
xor
mov
dec
int
movsb
sub
mov
mov
call
js
jb,pn
in
stos
and
cwtl
add
mov
mov
fcmovne
insl
inc
in
outsb
aas
pop
iret
out
and
or
dec
mov
test
je
mov
daa
add
cmpsl
jb
mov
aaa
cmc
push
mov
insb
mov
aaa
lods
add
ret
cmc
push
aad
adc
mov
enter
adc
push
inc
adc
cmp
aas
and
cli
mov
rcl
xchg
jge
pop
js
jmp
roll
fnstenv
addr16
mov
xor
add
addr16
sub
jbe
pop
mov
xchg
int3
js
outsb
test
adc
pusha
std
lods
mov
push
lods
and
jg
pop
sbb
jbe
cmp
xor
push
jo
push
add
inc
repnz
rolb
call
push
push
loope
mov
hlt
push
leave
cs
call
dec
push
pop
inc
dec
mov
push
push
or
fidivrs
sbbb
dec
cmc
popf
outsb
push
rcrb
add
mov
mov
pop
cwtd
mov
dec
xchg
shll
add
movsl
mov
ss
xchg
nop
popf
pusha
sub
shrl
adc
daa
xchg
daa
mov
sub
fs
aas
aaa
mov
add
in
shlb
xchg
int
stc
nop
jnp
fimuls
xchg
cltd
imul
mov
cmp
pop
in
roll
sbb
mov
rcrb
mov
push
jmpw
or
adc
ds
into
push
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
jmp
ror
cmp
aam
ror
add
sub
dec
or
js
jl
js
sbb
mov
mov
add
loopne
rcrb
pop
aam
fimull
cwtl
testl
sub
or
pushf
out
repz
mov
aam
push
aas
iret
inc
test
dec
mov
mov
cmc
jp
sub
arpl
std
pop
push
add
sbb
or
inc
out
lock
mov
and
add
xor
dec
fs
fsubl
or
cld
lods
or
cmpsb
rolb
cld
cmp
aaa
gs
push
mov
subl
fcmove
cmpsl
sbb
stc
fwait
xor
imul
push
out
out
into
test
xchg
loopne
pop
mov
lods
cltd
jecxz
test
jb
push
push
fstpt
cs
loop
lret
fbstp
xchg
cli
sbb
adc
or
movsb
adc
adc
xchg
jb
xchg
sahf
out
leave
divl
test
das
cmp
arpl
sub
movsl
insl
fdivp
mov
movups
sbbb
push
mov
push
daa
dec
out
mov
xchg
gs
mov
test
lods
cmp
shlb
in
fcoml
xor
adc
push
pop
xor
inc
push
adc
xor
push
pop
sbbb
pop
cmp
test
cmp
jge
xchg
and
enter
mov
iret
pop
and
mov
xchg
sbb
sub
into
dec
pop
mov
inc
sahf
mov
dec
out
mov
cmpsb
pop
or
adc
pop
fsubrs
cli
sti
enter
rol
mov
cmp
popl
pop
adc
test
es
and
mov
mov
nop
aaa
lret
or
outsb
push
test
sbb
mov
sbb
movsl
sub
xor
adc
fnstenv
or
js
fwait
adc
sahf
mov
addr16
adc
scas
mov
jo
sub
push
sti
ror
pop
jmp
pop
out
and
test
pushf
mov
ds
pop
dec
mov
cmp
sub
movsb
cmp
sub
adc
clc
mov
xor
out
les
std
movsb
into
jge
mov
pop
insl
rcll
in
jbe
inc
pop
push
jmp
adc
adc
clc
inc
inc
mov
pop
pushf
cmp
mov
dec
xchg
dec
cmpsb
mov
pop
cmp
xor
sbb
test
push
mov
push
pop
dec
jno
lea
roll
subl
mov
sub
cwtl
mov
mov
jecxz
lcall
fwait
lds
sbbl
sbb
cmc
xchg
xor
popf
into
sub
cltd
push
cmp
outsb
out
mov
and
mov
jns
and
cmp
lods
sbb
jmp
cld
aas
aas
fcmovu
sar
imul
loop
cwtl
lods
stos
popa
xor
mov
loope
mov
repnz
jb
sbb
and
loopne
jmp
fsubs
outsb
cmp
sbb
mov
mov
push
cs
dec
push
mov
movsb
lods
sti
int
jno
in
aad
cmp
xchg
mov
je
popa
jns
aad
in
or
popa
mov
add
xorb
pop
lret
dec
insb
pop
dec
jmp
int
xchg
mov
jge
or
jae
mov
fidivs
add
mulb
mov
add
pop
and
dec
pop
pop
xchg
push
adc
jmp
lahf
pop
hlt
fs
aam
mov
dec
or
push
popa
pop
jo
xor
jb
stos
cli
inc
push
and
mov
int
mov
push
inc
repnz
stc
or
es
out
ret
imul
cltd
xchg
pop
adc
enter
xor
inc
sub
popw
lahf
xor
mov
push
add
push
jns
or
pop
cmp
dec
lret
inc
mov
mov
mov
jg
xor
xor
xchg
arpl
je
lds
jle
pushf
jge
inc
dec
mov
aas
xchg
dec
push
mov
mov
movb
mov
xlat
pop
mov
xor
mov
mov
imul
adc
fbstp
popa
pop
scas
addr16
int3
mov
inc
int
pop
lods
xchg
xchg
int3
out
neg
push
pushf
iret
pop
out
repnz
mov
mov
or
imul
push
sbb
loop
sub
jno
inc
cmpsl
ret
jle
jno
pop
push
jmp
ret
rcr
fcmovb
jp
outsb
sub
sbb
xor
jae
js
mov
add
scas
push
xor
adc
loop
cmpl
lcall
sbb
dec
in
lods
pop
xchg
movsb
dec
or
imull
mov
fnstenv
lods
outsb
mull
dec
cli
rol
jle
mov
iret
add
test
adc
cwtl
fucomp
jae
fwait
cmovnp
in
aam
xchg
adc
scas
outsl
insb
ss
pop
scas
ljmp
fldlg2
ret
dec
pop
mov
or
pop
das
movsl
sbb
pop
push
fs
cmpsb
lds
dec
push
lock
push
sub
push
mov
orl
cs
pusha
rcrl
and
leave
and
mov
pushf
xchg
out
out
mov
mov
int3
in
jno
or
ljmp
add
pop
ja
out
divb
inc
jle
icebp
or
lret
ds
sub
icebp
out
or
out
cmp
push
iret
push
std
push
shlb
pop
adc
ss
push
sar
mov
sub
clc
cwtl
add
and
iret
fwait
in
push
aaa
or
mov
jb
dec
jecxz
shll
call
mov
aad
sub
stos
jge
and
clc
test
hlt
xchg
into
dec
sbb
cwtl
scas
sbb
mov
push
xchg
sub
push
add
push
inc
sbb
shrb
sbb
daa
aam
push
es
xlat
add
call
repz
mov
data16
and
push
xchg
subl
mov
popa
or
mov
cmpsb
fldenv
or
cmc
mov
xlat
jns
mov
into
jl
mov
dec
cltd
mov
out
stc
les
xchg
push
push
scas
mov
sub
and
roll
idivb
outsl
dec
xchg
pop
sub
ret
ret
xchg
int3
mov
sub
mov
cmp
divl
mov
sarl
ja
and
out
xlat
jnp
and
mov
jp
or
pop
insb
pop
push
adc
aaa
pop
es
and
mov
push
out
mov
or
addr16
cmc
daa
push
lcall
jae
imul
loopne
in
xor
mov
mov
sub
movsl
stc
js
pop
jbe
push
cmp
mov
mov
pop
cmp
sub
sbb
js
stos
jbe
dec
stos
lahf
and
mov
insb
adcl
mov
mov
pusha
lahf
aaa
mov
arpl
loop
aad
sub
inc
inc
bound
lds
test
inc
pop
jp
lcall
in
mov
inc
gs
orb
out
imul
gs
cmp
aad
enter
sub
pop
mov
sbb
in
bnd
lret
clc
mov
movsl
inc
icebp
mov
std
loopne
out
shrb
pop
sbb
lea
inc
sub
xor
cmp
mov
sbb
sbbb
and
jecxz
xchg
scas
jmp
sti
lods
mov
and
adc
xor
imul
xor
or
vaddps
mov
stos
and
xorl
xor
mov
or
out
jnp
out
andl
shl
and
shll
movsl
in
push
push
cmp
xor
mov
or
test
mov
dec
or
xlat
pop
dec
cmp
and
pop
cmp
push
or
mov
out
cmp
ret
test
mov
cmpsl
sub
sub
fwait
xor
repnz
jns
in
testb
fiaddl
adc
or
sub
adc
fstpl
leave
movsl
xchg
push
nop
test
clc
pop
or
xchg
lods
gs
rcrl
mov
jle
xlat
test
jp
mov
mov
ret
add
ficompl
outsl
out
xor
sar
jg
jbe
xchg
or
jecxz
inc
sub
call
dec
xchg
nop
call
dec
in
icebp
push
add
inc
fcmove
mov
pop
fildl
sbb
jne
push
mov
jle
fsubrp
mov
xchg
out
push
cli
push
dec
addl
inc
data16
lcall
fsubp
aas
fstpt
aam
nop
sub
ds
mov
push
lods
int
dec
out
leave
inc
pop
pop
out
sahf
cltd
cmpsb
out
lcall
ret
loopne
inc
jp
call
and
jmp
aas
ret
rcl
iret
ret
dec
xchg
sub
xor
js
repz
sub
shl
in
xor
cmpb
jnp
in
mov
lcall
and
mov
iret
rcl
lret
push
xchg
sbb
jecxz
or
mov
dec
inc
jb
ss
jo
int3
mov
cltd
add
sbb
xor
adc
adc
stos
inc
mov
pop
pop
scas
xor
and
push
jb
mov
and
sbb
lcall
jo
push
sbb
or
fisubs
cmc
incb
pop
pushf
dec
mov
ja
movsb
bound
rol
xchg
xchg
pop
mov
push
repz
xchg
lock
inc
add
pop
in
jl
cmp
mov
adc
and
out
sub
mov
xorl
loope
xor
mov
test
in
test
and
jg
xor
cs
lcall
or
pop
mov
push
sti
inc
pop
add
int
lret
cmp
je
add
add
rorb
xchg
cltd
adcl
mov
mov
sbb
add
not
jne
xchg
mov
adc
cmpsb
out
push
shrl
repz
adc
mov
pusha
cmp
or
ja
lahf
and
rorb
fldenv
mov
dec
mov
testb
mov
jle
insl
cmp
fs
data16
dec
mov
push
inc
int3
sub
sahf
sbb
mov
dec
sub
sbb
aaa
in
mov
aaa
mov
jbe
mov
push
repnz
ss
lahf
mov
in
cmc
cwtl
aas
pusha
xchg
add
fnstsw
ret
into
scas
in
rcrl
jae
mov
cmp
xchg
aas
dec
dec
mov
std
js
xchg
dec
xchg
jmp
inc
fbstp
push
loope
out
adcl
mov
inc
popa
shl
adc
or
mov
push
lcall
lds
out
sbb
pusha
sti
inc
lods
xchg
cwtl
imul
mov
sbb
nop
pop
std
sbb
xchg
loopne
fldln2
les
push
sub
xorb
outsl
cltd
xor
mov
ja
pushf
out
xchg
dec
inc
inc
cmp
frstor
sbb
jae
iret
into
das
xlat
movsb
pushf
mov
hlt
leave
loopne
jnp
xorl
int3
enter
or
mov
sub
orl
jmp
mov
jbe
lock
fdivl
in
addr16
fisttpll
add
dec
test
cmp
mov
fldcw
fistpll
add
divb
rclb
cli
push
fdivl
cmp
xchg
mov
or
icebp
adc
lcall
cmp
les
pop
test
adc
test
dec
and
sbb
jge
pusha
insb
movsl
in
in
dec
cmpsb
jno
dec
dec
cmp
fsubs
ljmp
or
gs
stc
jno
imul
mov
jnp
or
sub
adc
xor
test
add
inc
movsl
add
outsl
mov
imul
xor
icebp
ret
pop
or
mov
divl
mov
dec
mov
call
push
movsl
in
std
fsubl
jmp
pop
loope
xchg
push
nop
in
jg
and
cwtl
dec
neg
mov
divb
sub
mov
sbb
adc
xchg
loopne
popf
push
les
push
mov
xchg
push
adc
push
adc
std
push
mov
dec
adc
shll
mov
cmp
nop
push
adc
pop
add
lea
je
scas
xchg
jge
mov
js
fcmovnu
aad
repz
fucomip
inc
les
or
arpl
inc
cli
aam
cld
or
out
scas
push
dec
lret
sub
sub
mov
stos
mov
aam
lcall
insl
mov
fcmovb
dec
dec
cmp
out
movsl
cmpsl
push
daa
mov
test
jle
jge
test
pop
mov
xchg
gs
adc
test
fadds
jecxz
in
testl
pop
pusha
addr16
enter
push
mov
dec
fildl
push
pop
push
cmp
xchg
ljmp
fldcw
cmpsl
fisttpl
aad
mov
mov
sub
mov
movl
jmp
cmp
lret
rcr
lret
iret
adc
insb
std
cmp
jae
js
or
inc
xchg
nop
jnp
shlb
inc
xlat
cmp
sbb
pushf
jmp
mov
pop
xchg
xchg
lock
xor
cmpsl
push
mov
sub
jge
pop
adc
cs
mov
xor
in
aad
mov
pop
mov
out
int3
push
sub
cmp
sbb
add
scas
pusha
mov
mov
jecxz
dec
scas
push
jecxz
repnz
fmull
ds
sarl
iret
sub
cld
mov
jo
testl
push
out
insl
roll
loopne
inc
enter
fdivrp
mov
sub
mov
or
mov
push
psrad
les
fs
leave
lcall
ljmp
sbb
ss
jmp
push
sub
mov
jne
ficompl
cwtl
dec
xor
mov
inc
xlat
enter
test
mov
enter
sbb
sbb
jnp
jbe
mov
push
je
and
int
sbb
mov
rorb
mov
xor
outsb
push
adc
dec
daa
pop
push
fidivrl
xor
sbb
into
insl
sti
test
repz
aad
dec
jbe
out
out
pop
or
lret
dec
xchg
pop
sub
inc
fistps
xchg
or
inc
subb
xor
xlat
cmp
and
inc
es
stc
or
lea
jmp
pop
cmpb
aas
ljmp
mov
sbb
lahf
push
rol
add
push
dec
jns
aad
or
mov
pop
jns
insb
xlat
in
int
jge
testb
je
or
sbb
mov
and
stos
repnz
xchg
mov
jmp
into
mov
push
sub
mov
sbb
push
imul
mov
inc
rolb
and
lahf
jg
cld
shl
cs
mov
xor
fs
clc
mov
jne
xchg
insb
inc
jae
movsb
repz
out
popa
and
add
std
popa
test
push
fmul
mov
pusha
pop
roll
mov
xchg
mov
cli
sub
adc
ficoml
pop
add
ss
popa
in
lahf
cmpsb
movsb
sub
in
mov
call
pop
sub
cli
fidivs
clc
push
xor
xchg
push
sti
inc
int3
jae
and
xor
imul
and
jae
ja
mov
xchg
arpl
das
mov
stos
cltd
int3
hlt
das
adc
scas
shlb
mov
xchg
mov
es
movb
cmovnp
add
jno
dec
or
push
pop
push
mov
sbb
dec
dec
and
pop
inc
stc
cmpsl
sub
ljmp
lcall
cmp
sbb
lcall
mov
push
fisttps
gs
mov
and
jp
sub
into
fisttpll
subb
or
xor
xchg
mov
scas
fxch
shr
hlt
dec
pop
dec
ss
xchg
test
jmp
sub
das
or
les
xlat
or
test
pop
inc
sahf
add
bswap
movsb
jecxz
insl
xchg
insb
mov
popa
test
ficompl
inc
repnz
aad
loop
lahf
stos
notl
or
xchg
lea
ljmp
push
out
xchg
cwtl
adc
sbb
add
imul
or
subb
sysenter
stos
jl
sbb
dec
aaa
lret
jbe
test
test
popf
xchg
xor
fisubl
scas
jns
push
imul
push
add
mov
out
out
mov
jns
sbbb
and
mov
xor
out
leave
rorb
int
leave
popf
lret
xlat
in
xor
cmp
addr16
in
rcll
int
iret
lcall
test
lret
sub
pusha
adc
enter
pop
adc
cmp
outsb
mov
test
adc
pop
push
mov
inc
ss
ret
stc
jecxz
mov
jo
mov
int
mov
test
aas
xchg
inc
inc
mov
arpl
xlat
jmp
inc
mov
mov
das
xchg
mov
xchg
fmull
or
pushf
aad
sub
pop
out
xchg
int3
sub
scas
mov
inc
adc
jmp
mov
and
int
inc
xchg
das
fldenv
jge
mov
xchg
insb
and
adc
mov
inc
rol
inc
loopne
test
inc
add
adc
jmp
aas
enter
fxch
rclb
fistpl
lret
lock
jg
jae
js
jbe
insl
mov
and
movsb
dec
fs
inc
rorb
sti
mov
les
sub
mov
fwait
push
fiadds
dec
sub
pop
adc
dec
xchg
dec
adc
push
sub
adc
add
icebp
popf
pop
mov
mov
pop
repz
xor
pusha
fcmovu
add
mov
inc
addr16
push
pop
cltd
inc
mov
add
mov
sbb
loope
repz
fistl
cld
js
ljmp
push
into
push
int3
mov
sub
jbe
xor
xor
notb
mov
jg
xchg
ljmp
arpl
mov
in
outsb
jmp
dec
xor
push
loope
push
and
in
cmpl
movsl
mov
mov
dec
aas
mov
and
mov
fistpl
mov
xchg
sbb
les
mov
das
add
or
jle
mov
cmp
xor
dec
mov
data16
inc
jecxz
sbb
faddl
repz
scas
mov
and
mov
xchg
add
sbb
xchg
cli
loopne
flds
sti
dec
loope
cwtl
in
ljmp
mov
lret
ss
rolb
dec
fst
jecxz
mov
lret
jp
ret
cmp
push
push
sbb
js
add
inc
call
inc
outsb
cli
inc
shl
fnsave
int3
popa
jg
xchg
in
mov
negl
call
sbb
xor
pop
icebp
add
mov
sbb
addr16
xchg
mov
cmp
fneni(8087
into
sbb
imul
push
leave
cmp
imul
dec
je
push
sub
aas
xchg
mov
imul
data16
dec
lret
lds
sarl
pop
imul
enter
mov
jl
push
ja
daa
out
pushf
push
inc
push
in
clc
mov
mov
or
jmp
imul
jl
push
or
das
sarl
fsubrl
outsb
jno
cwtl
mov
sub
fadds
ds
pop
push
jns
cs
mov
xchg
cmp
xchg
insl
insl
mov
js
inc
jae
mov
js
int
inc
dec
adc
inc
std
data16
nop
mov
imul
dec
repz
xchg
lea
mov
jns
xchg
imul
xchg
cmp
lock
pop
mov
xchg
jmp
je
movsl
cltd
mov
push
roll
xchg
mov
adc
sti
clc
and
cmp
cmp
xchg
aaa
cmp
pushf
daa
mov
mov
int
jl
jne
add
push
les
add
and
mov
int3
stos
rcr
into
into
repnz
fldenv
fcompl
fs
xor
pop
test
add
mov
sub
mov
lahf
jecxz
aam
xchg
out
int
xchg
xchg
and
leave
or
cltd
test
mov
scas
shll
imul
loope
lock
outsb
mov
push
adc
add
dec
ja
popf
dec
xchg
in
pop
addr16
aam
pusha
xchg
scas
test
mov
int3
outsl
mov
flds
or
sbb
in
fwait
outsl
lret
pop
in
ds
fldl
and
bound
push
xchg
out
cmp
call
bound
inc
mov
in
inc
adc
or
inc
out
xchg
arpl
cmp
mov
sti
dec
adc
lret
dec
add
add
add
out
es
nop
in
flds
out
ficompl
lods
fs
push
jae
out
push
push
sub
mov
or
cli
dec
int3
add
mov
dec
push
xchg
jne
push
pop
in
dec
add
mov
push
xlat
jmp
lret
pusha
cvttps2pi
push
imul
xor
in
jae
dec
test
out
add
mov
cmp
or
jle
and
jns
stos
out
out
add
dec
enter
pop
mov
imul
cwtl
cwtl
mov
fistl
xchg
je
std
in
adc
fldt
mov
fnstcw
lahf
and
orl
bound
addr16
pop
test
xor
idivb
leave
add
mov
sub
sub
jmp
xlat
cmp
int3
fxch
aad
insb
test
and
jae
js
or
cmp
insb
mov
outsl
push
sahf
fistpl
fsubs
push
cmp
sbb
jg
out
cmc
cmpsb
movsl
pushf
push
lods
sbb
loope
jp
push
rorb
sbb
inc
clc
dec
sub
xor
cmpsl
sbb
push
lds
testb
or
cmpsb
andb
subl
out
push
push
fisubs
and
jecxz
out
mov
mov
dec
movsb
xchg
clc
sti
sub
je
stos
inc
rol
xchg
test
mov
shlb
pop
bnd
and
mov
jne
or
fistpl
fisttpll
cltd
jecxz
sti
mov
inc
jo
ret
xlat
std
aas
sarl
je
or
icebp
jmp
pop
lcall
psraw
jmp
sti
insl
or
mov
or
pushf
unpcklps
mov
sbb
xor
arpl
adcl
shlb
sbb
ds
test
insl
mov
popa
push
std
pop
sbb
imul
pop
push
fadds
ficoml
add
mov
xchg
push
cmp
test
xchg
pop
lods
inc
sbb
clc
movsl
adc
imul
pop
push
mov
cmp
outsb
xor
insl
mov
dec
mov
jl
adc
dec
rclb
push
pop
jo
fstpl
xchg
js
out
cmp
das
inc
repz
adc
jmp
cmp
or
aaa
imul
scas
and
dec
xchg
xor
adc
fimuls
flds
enter
outsb
dec
jbe
push
aam
int3
mov
xor
adc
fwait
sbb
dec
push
xor
adc
stos
pop
outsb
mov
mov
mov
add
fdivrs
aad
outsl
or
aaa
and
push
jmp
xchg
dec
dec
cmp
js
jl,pt
jmp
adc
enter
pusha
mov
je
mov
shrb
test
das
push
in
sub
iret
and
fstpt
mov
arpl
xchg
cmp
sub
into
outsl
hlt
push
sbb
aas
adc
mov
fisttpll
aas
inc
xor
cmp
or
in
mov
mov
push
dec
int3
ljmp
in
insl
aaa
or
mov
mov
xchg
in
mov
jne
sahf
push
xor
xor
inc
jmp
add
icebp
aam
mov
push
push
das
jo
pusha
mov
sub
xchg
cmp
push
addr16
nop
pop
push
or
xchg
cmpsb
sbb
jg
mov
fdivs
adc
jb
icebp
pop
inc
mov
outsl
adc
movl
int3
pop
mov
imul
push
sbb
in
test
push
repz
jle,pn
dec
inc
inc
ds
add
icebp
repnz
pop
dec
insb
sbb
adc
std
or
ss
xchg
lret
insb
dec
pop
add
inc
in
or
xor
or
pusha
sub
dec
add
cmp
aas
divb
idivl
std
shlb
pop
jge
int3
data16
popa
mov
add
rorb
into
sub
jne
inc
jp
into
add
push
mov
int
and
enter
stos
add
ret
mov
mov
nop
jo
mov
dec
repnz
sarb
imul
mov
aad
gs
fst
shl
inc
cmpb
add
xchg
push
add
inc
sbb
jecxz
movsb
cwtl
cmp
daa
andl
or
xchg
mov
movsb
add
les
jno
fs
or
inc
push
dec
sahf
hlt
arpl
imulb
sar
sbb
inc
ret
popa
and
arpl
dec
xor
mov
adc
fimuls
ret
lea
arpl
sub
scas
arpl
in
addl
pushf
inc
arpl
mov
xorb
stos
hlt
mov
pop
jg
sub
sbb
aam
mov
mov
pusha
sbb
push
ljmp
test
stos
or
rol
movsl
loop
sbb
lods
ss
ret
mov
mov
adc
xor
cmp
jns
adc
cmp
testl
push
dec
mov
adc
push
sbb
popf
cmp
pop
daa
jb
out
sub
jb
test
cmp
mov
add
mov
mov
mov
adc
jmp
mov
lret
or
out
jle
fmulp
jg
jae
js
mov
jns
push
jmp
mov
xchg
imul
adc
lods
bound
rorl
jnp
lock
mov
and
idivl
dec
addr16
inc
ljmp
cli
call
jle
pushf
pop
xchg
sbb
ss
sbb
mov
aaa
aam
xchg
jno
mov
and
cmpb
push
cltd
fsubrl
in
sbb
mov
lock
or
mov
outsl
std
hlt
das
pop
xchg
sub
out
mov
push
sub
jp
push
loopne
bound
mov
add
mov
test
jmp
mov
lods
imul
mov
mov
add
iret
fists
in
dec
jae
dec
sbbb
fimull
lcall
stos
ficomps
clc
lods
inc
xchg
lock
pushf
daa
addr16
ret
insb
aas
xor
push
fwait
jmp
mov
mov
dec
sub
mov
sti
lahf
stc
sub
lea
adc
add
rolb
pop
iret
mov
hlt
fmull
jecxz
mov
mov
cmp
sahf
cmp
adc
fdivl
setle
stc
fildll
jo
add
jo
xchg
cld
xchg
pop
xor
dec
stos
repz
add
pushf
pushl
leave
inc
insl
mov
fnsave
mov
movsl
ss
sbb
mov
add
and
scas
mov
jo
scas
sub
cltd
lcall
add
sub
adc
shr
pop
aaa
pop
pusha
dec
jne
mov
inc
cmpsb
fstpl
loop
outsl
daa
js
test
and
inc
pop
rorl
dec
orl
jno
sub
aam
mov
push
lret
iret
loopne
movsb
out
ja
push
or
push
dec
mov
cs
rcrb
mov
push
add
and
test
dec
repz
xor
push
add
mov
mov
mov
idivb
mov
and
push
and
lea
or
fdivrp
negb
cmp
jbe
outsl
inc
rcl
arpl
mov
inc
add
cltd
add
aaa
mov
dec
add
pop
inc
mov
stos
push
popf
add
rcll
popl
aaa
inc
jmp
adc
lcall
adcb
mov
pop
lcall
pop
outsb
subl
pushf
mov
inc
fldenv
xchg
push
cmp
aam
cmp
fisttps
or
lret
into
mov
dec
rorb
js
mov
xchg
xchg
dec
sub
jo
aam
inc
or
pushf
push
xchg
mov
inc
mov
jmp
xchg
fldcw
push
xor
fidivs
push
sbb
xor
pop
loop
daa
shll
mov
add
in
aaa
adc
or
daa
and
mov
sarl
sub
dec
ficoms
clc
mov
mov
lods
mov
int
push
mov
lods
fwait
cmp
pop
or
and
xchg
das
mov
cmp
pop
int
add
stos
in
dec
orl
in
int3
nop
mov
loop
push
ret
cmp
stos
fistpl
rcrb
pop
mov
rorb
insb
dec
cmc
cli
mov
pop
sbb
sub
popa
mov
mov
pop
insl
mov
dec
cmp
add
and
test
adc
pop
mov
push
loope
xor
andb
in
bound
movsl
pop
add
dec
mov
mov
cmpsb
add
xor
adc
mov
push
ret
pop
pop
ljmp
ja
jb
les
incb
push
rcrl
mov
push
adc
mov
cmp
xchg
jle
scas
cmp
add
push
lea
rorl
ror
dec
mov
and
ret
mov
int
loop
mov
or
mov
mov
and
clc
mov
test
xor
cmp
movsb
lret
jae
dec
inc
ljmp
xchg
jb
mov
xlat
ds
mov
and
jp
shll
scas
jns
xorl
jmp
leave
int3
leave
rcr
fxch
aad
push
adc
ror
jg
jae
js
mov
rol
jl
add
pop
pusha
scas
iret
and
cmpsl
hlt
jae
shrb
xchg
jp
call
sub
cs
dec
mov
stc
xor
cmc
pop
inc
mov
mov
aad
push
mov
gs
jne
pop
or
pushf
or
sbb
cwtl
or
jl
sub
popl
mov
je
in
popf
jns
sahf
mov
call
ss
mov
mov
xor
into
jns
ljmp
adc
pop
and
dec
sub
pop
jle
mov
out
push
dec
or
ds
in
xchg
and
mov
mov
and
js
push
sub
xlat
lea
dec
rorl
rcr
dec
add
arpl
pop
addr16
imul
push
adc
dec
add
xor
pushf
scas
out
cmp
add
gs
sbb
cltd
in
or
and
push
scas
jmp
ret
add
pop
mov
int3
leave
jne
rcrl
pop
or
jo
jle
xchg
outsl
fidivl
fimuls
jns
mov
enter
jecxz
fdivrl
out
xchg
xchg
inc
outsb
shrb
mov
icebp
dec
enter
or
inc
insb
fnsave
clc
ljmp
iret
jns
pop
ret
mov
pop
int
xorb
xor
xchg
mov
dec
jb
pushf
pop
mov
pop
xchg
adc
in
xchg
outsb
in
sub
aam
push
frstor
xor
xchg
out
xchg
lahf
test
mov
and
loop
push
lahf
jae
jno
push
fbstp
push
test
fnclex
cmp
and
mov
or
aas
out
fstl
and
adcb
jae
ljmp
pop
dec
loopne
fsubr
fwait
js
adc
inc
popf
lock
aaa
into
outsl
sub
push
mov
cmp
sub
mov
call
push
jp
pop
pop
scas
ret
add
rcrl
jmp
xchg
jl
and
mov
scas
clc
cmp
loope
jecxz
dec
dec
loopne
push
iret
pop
or
ljmp
mov
mov
dec
movsl
add
jnp
push
mov
fisttpll
cli
stc
dec
jb
and
cmp
sbb
mov
or
cwtl
pop
mov
cmc
ss
out
mov
mov
or
ds
dec
daa
sub
mov
xchg
jmp
leave
push
pop
sub
jg
mov
xchg
nop
enter
out
stos
or
int
movsb
fdivrl
xchg
jmp
mov
pop
xor
loop
loope
sub
mov
push
xchg
push
mov
mov
xchg
ja
or
rcll
fmul
cmp
pop
push
test
popa
pop
fists
push
jbe
sahf
leave
xchg
cmp
data16
jmp
dec
xchg
inc
popf
xor
xor
in
inc
and
cli
mov
xchg
sbb
rcrl
mov
dec
out
push
adc
jg
sbbb
xchg
test
mov
subb
fdivrs
iret
movsl
lods
sub
popa
jge
stos
adc
or
pusha
xchg
in
dec
xchg
xchg
shll
xorl
mov
mov
push
int3
movsl
stc
mov
call
cmp
mov
add
or
sub
mov
mov
mov
pop
jb
fs
or
in
sub
xor
mov
inc
cmc
pop
notl
cltd
popa
test
ljmp
or
aas
add
stos
cmpb
imul
incb
cmp
mov
int3
imul
pop
mov
cli
or
mov
xchg
div
clc
dec
aaa
cld
lcall
sub
mov
in
push
add
mov
mov
imul
inc
mov
into
icebp
xchg
in
xchg
add
xchg
mov
test
in
inc
les
lea
mov
lcall
mov
je
sahf
fnstcw
enter
test
cs
out
sbb
daa
and
lods
pop
cmp
jo
inc
xor
cmpsl
int
leave
hlt
sub
sub
nop
leave
leave
jmp
inc
lcall
inc
push
inc
sarl
xchg
mov
cmp
push
pop
sub
mov
mov
sub
in
add
shll
aam
dec
jecxz
inc
sbb
jb
add
or
mov
aad
xor
mull
jae
js
into
fwait
test
push
movsl
data16
jnp
je
push
jp
popf
loope
std
in
aad
mov
call
in
cmp
mov
cmp
jp
push
notl
push
popf
mov
xchg
in
cltd
scas
jnp
cld
fsubs
mov
ficoml
dec
jno
fnstsw
mov
adc
out
lea
sahf
sbb
scas
lcall
mov
jo
ss
jae
fbld
jae
adcb
pop
rclb
mov
rol
sub
xor
ljmp
push
loop
rcl
adc
sti
mov
xchg
imul
push
in
out
mov
or
cmp
mov
divl
cmp
mov
xor
add
cmp
xchg
or
cld
stc
fwait
scas
push
pop
push
pop
clc
or
pop
into
mov
jns
lods
outsl
and
adc
adc
icebp
push
es
jle
in
shrl
mov
and
inc
in
fnstcw
jbe
fidivs
and
fdivrp
jp
jo
ret
imul
lods
test
mov
scas
adc
sub
mov
mov
push
dec
jnp
ret
add
popa
mov
adc
ljmp
jb
inc
addr16
lods
cmp
or
enter
and
shll
add
loope
testl
mov
and
and
ret
pushf
js
push
sub
push
xchg
cmp
rclb
mov
add
hlt
out
push
imul
arpl
stos
adc
add
and
mov
and
sub
push
mov
inc
push
mov
repz
in
pop
xor
xorb
lods
sahf
mov
xor
mov
sbb
sub
mov
jnp
aas
scas
stc
sub
insb
mov
rorb
add
inc
cli
inc
lcall
arpl
xor
sysexit
push
scas
cmp
jge
add
push
xchg
mov
aas
add
shrl
and
hlt
or
int3
cmp
adc
scas
lock
test
in
lret
mov
add
jg
int
jmp
jnp
cs
lods
mov
fildl
push
outsb
xor
push
add
add
call
sbb
add
add
push
jae
xchg
lea
nop
shlb
dec
fsubrs
mov
sbb
sub
sub
sub
adcl
cmp
js
dec
es
mov
scas
push
inc
add
mov
sbbl
and
mov
sub
test
xor
mov
stc
cli
jb
pop
sbb
xor
xchg
push
adc
pop
es
xchg
inc
das
jp
cld
jp
sti
mov
lret
ss
lods
bound
imul
xlat
test
jle
outsb
add
ss
out
push
mov
xchg
or
in
jp
mov
into
ja
xchg
test
push
cwtl
sbb
mov
in
xchg
cli
mov
das
jno
call
fwait
es
filds
ja
jmp
dec
sub
jnp
dec
adc
add
lret
ffree
push
shl
push
mov
mov
adcl
cwtl
mov
mov
adc
mov
sub
inc
cld
pushf
andl
or
push
addl
addr16
pop
xchg
mov
adc
mov
in
outsb
or
sbb
lods
call
daa
jecxz
mov
inc
out
dec
mov
jnp
out
aas
lcall
jnp
fstps
xchg
and
inc
ja
sub
lods
xchg
fdiv
sub
jle
mov
mov
and
cmp
jno
or
xlat
fnstsw
push
loopne
pop
mov
jne
in
pop
std
add
cwtl
push
shll
or
xchg
jae
je
idiv
in
cli
xchg
ret
sub
dec
rcrl
ror
testb
ret
subl
mov
dec
jae
repnz
xor
fistpl
stos
pop
lods
rol
add
cltd
scas
sarl
je
mov
inc
insb
mov
jne
inc
jno
arpl
sbb
cltd
mov
shrl
cmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
jmp
into
xchg
push
call
aas
fidivrl
jae
js
gs
mov
out
add
lret
test
push
jg
jo
pusha
stc
mov
les
aad
bound
aaa
dec
in
fsub
mov
dec
aaa
mov
mov
aas
std
jmp
xchg
test
push
inc
mov
adc
popf
sbb
daa
in
xchg
in
pop
xchg
sub
push
lret
push
clc
or
cmp
repz
jecxz
xor
mov
adc
add
xor
mov
in
gs
lret
mov
loop
scas
aas
jmp
cmpsl
mov
data16
aad
pop
stos
out
rcll
cmp
inc
shl
jno
leave
aas
xchg
in
dec
scas
or
add
call
in
and
xor
jl
adc
flds
sbb
lret
push
bound
fmull
mov
sub
mov
cwtl
loopne
dec
jb
fs
jnp
sub
xor
adc
inc
xchg
mov
bound
std
xor
mov
test
mov
mov
sahf
cmpsl
aam
push
dec
sbb
or
mov
sbb
cmp
adc
xchg
mov
or
imul
dec
sti
lahf
enter
je
fmull
stos
push
lret
sub
xchg
cmp
dec
stos
sub
rcl
or
mov
jl
push
popa
ss
rcr
les
mov
loope
inc
dec
stos
mov
xor
mov
in
bound
inc
aad
pushf
and
outsl
test
imul
jle
mov
stos
and
mov
shll
mov
fstl
xor
imul
imul
iret
mov
mov
mov
cmp
add
pop
hlt
mov
add
jg
dec
call
add
test
pop
dec
fs
mov
push
leave
sbb
dec
cmp
jle
mov
mov
clc
imul
gs
insb
sbb
mov
fwait
cmp
pop
and
mov
int3
addl
loop
pop
aad
or
xchg
mov
mov
cmc
je
mov
pinsrw
sbb
cmp
push
sahf
push
pop
xchg
outsb
cmp
or
adc
sbb
rorb
or
lea
adc
pop
cmp
filds
xchg
mov
out
aad
adc
sbb
xchg
lods
mov
lea
jb
add
dec
pop
daa
sbb
mov
lahf
aad
pop
lock
cli
mov
add
sbb
pusha
adc
push
push
arpl
enter
out
out
cltd
inc
pop
and
loop
mov
movsb
cmpsb
dec
pop
push
jecxz
xlat
shlb
pop
pop
fs
mov
insl
mov
ret
aas
adc
clc
ds
fldcw
xchg
xchg
std
push
loope
sub
mov
aaa
jo
popf
mov
and
cs
sub
aad
dec
xchg
jbe
sub
and
or
stos
inc
loopne
jo
sbb
stos
xchg
xchg
arpl
fdivr
or
xchg
scas
push
ss
add
pop
pop
mov
rclb
pop
in
adc
pusha
cmc
insl
inc
int3
xchg
mov
aam
test
fmul
cs
jae
inc
inc
and
and
and
lods
and
mov
pop
mov
sahf
fimuls
cmp
mov
add
iret
or
mov
lret
sub
inc
adc
sbb
daa
and
mov
pop
jo
push
cmp
pop
lods
pushf
sub
pop
cmpsb
and
jmp
mov
mov
fdivl
push
dec
fnstcw
mov
ljmp
dec
pop
shll
out
bound
sub
imul
aas
into
xchg
sub
sar
testl
add
repz
mov
cmpsl
lar
pop
mov
and
inc
ja
sub
sbb
in
cmp
test
into
mov
mov
incl
fcmove
leave
lods
iret
shrl
xor
daa
sahf
jnp
std
scas
pop
dec
enter
stos
std
loope
inc
in
sti
sub
out
and
lock
pop
adc
ljmp
aad
and
inc
dec
punpckldq
jg
mov
cld
sbbb
adc
cld
enter
xor
fs
xor
xor
xor
and
jmp
int3
aas
into
rcl
ror
shll
and
or
fnstsw
jae
js
jb
mov
push
add
sbb
fadd
adc
xchg
push
rcrl
inc
fwait
sub
fdivl
inc
ss
add
mov
inc
or
test
ds
pop
popa
addr16
mov
dec
lock
fnstenv
sarb
insl
mov
dec
pop
pop
jb
adc
pop
out
addr16
seto
and
imul
mov
in
or
inc
movsl
insb
mov
test
push
inc
xchg
jb
leave
data16
imul
notb
mov
push
lcall
test
or
adc
pusha
or
hlt
and
jnp
test
aad
inc
pushf
mov
inc
rclb
aas
popf
mov
jl
jl
fisttps
mov
mov
inc
gs
nop
cmp
loopne
aad
or
jle
lea
mov
pand
adc
cmp
jb
jg
mov
add
les
and
pusha
jns
loop
ds
and
jmp
push
popa
mov
sub
push
cmp
test
sbb
push
push
out
fdivrs
mov
inc
adc
add
ja
lahf
testl
sub
dec
repz
dec
sub
gs
fwait
call
jno
xchg
mov
mov
in
lock
dec
je
enter
notl
cmpl
cmp
xor
outsb
rcl
sbb
fisubrl
ret
push
mov
call
stos
aas
fdivrs
xchg
inc
fwait
pop
dec
xor
ds
jge
mov
mov
std
lds
add
imul
pop
push
mov
push
push
add
jns
inc
sti
sbb
xlat
mov
cmp
xor
or
lret
inc
test
sbbb
fcoms
das
stc
or
xchg
cmc
mov
mov
mov
pop
lret
mov
inc
jne
mov
mov
cmp
jb
push
loopne
mov
mov
popa
lahf
dec
out
add
or
in
mov
or
adc
pop
dec
ret
ret
add
pop
add
xchg
pop
jbe
scas
rcrb
push
mov
push
cs
add
push
push
push
xchg
adc
leave
insl
add
mov
inc
ss
scas
sub
test
dec
dec
cmp
lds
jmp
das
cmc
stos
lock
cmp
int3
sbb
cli
faddl
add
ss
adc
lahf
es
clc
mov
sti
out
add
int3
fs
fbstp
mov
mov
sbb
xchg
inc
xchg
fists
add
aaa
icebp
jns
test
shrl
hlt
lods
adc
mov
mov
cmpsb
loopne
adc
mov
add
sbb
cs
push
push
push
sub
jae
sbb
hlt
mov
lock
shl
adc
aaa
inc
sbb
jo
sub
stos
loopne
lcall
fisubs
push
ja
pushl
adc
cmp
fmul
pushf
jle
cmp
lds
sarl
push
lea
jecxz
flds
rorb
mov
roll
sub
jecxz
mov
rcll
and
ja
call
cwtl
push
ds
jp
in
or
pop
add
sub
daa
and
and
inc
clc
mov
fstl
pop
sbb
movsb
cmp
jb
out
jnp
xor
jecxz
lock
popf
sbb
shrl
pop
rcrl
leave
lock
jo
inc
pop
aad
or
cmp
xchg
cmp
ljmp
jg
fsubrl
jns
pop
cmp
aam
pop
sbbb
mov
cltd
decb
inc
xor
or
mov
test
or
fistps
test
lahf
xchg
into
pop
or
lods
addl
sti
jl
jns
movsb
mov
or
sarb
add
adc
xchg
sahf
pop
mov
lea
insl
pop
mov
test
jbe
lret
int
arpl
insl
mov
or
jge
or
das
xchg
mov
frstor
dec
push
out
fld
jmp
inc
dec
lock
ds
jecxz
scas
mov
sub
movsl
mov
pop
fwait
mov
mov
and
add
pop
stos
shrb
shrb
mov
push
add
neg
jmp
ret
lret
ret
aad
leave
and
jg
jae
js
dec
push
js
push
mov
jns
xor
jbe
mull
mov
lods
jmp
fstl
sbb
les
push
mov
arpl
in
xor
rcrb
sub
mov
adc
out
int
movsl
lods
imull
hlt
popa
ret
test
cmp
sbb
add
push
rcll
out
jno
cs
jae
jl
in
push
xor
jmp
inc
sti
outsb
sahf
push
inc
add
mov
xor
aad
or
cmpsb
subb
and
push
jp
icebp
std
pop
xlat
jo
lahf
dec
stos
add
lret
fcmovb
lret
sub
clc
pop
int3
ss
enter
scas
xchg
xchg
scas
jns
sahf
xchg
and
push
or
mov
lret
adc
inc
icebp
sub
lods
fisubs
jmp
iret
mov
cmpsb
in
sbb
imul
cmpsb
xorb
mov
pop
neg
js
xlat
and
inc
aas
lret
xor
xor
mov
add
mov
adc
adc
rclb
adc
mov
scas
subb
pop
xor
and
lods
aam
push
jg
inc
ja
jne
add
sub
aaa
ss
push
jnp
add
fbld
and
call
scas
ret
icebp
xor
mov
rcll
pop
or
sbb
imul
aad
push
into
outsl
xlat
adc
push
lods
xor
repnz
outsb
lock
xchg
int
mov
pop
mov
imul
mov
cmp
dec
xlat
jge
es
adc
scas
rcll
xlat
sbb
jnp
inc
stos
xorl
sbb
addb
dec
stc
pop
cltd
or
sub
inc
shl
cli
test
in
loopne
or
adc
insb
mov
xor
push
mov
mov
in
sub
sarb
cld
cli
pop
popf
fildll
mov
pop
and
mov
add
or
jbe
cmp
sub
lds
scas
pop
inc
mov
outsb
sub
adc
push
shlb
mov
aaa
jge
repz
ljmp
jae
dec
pop
add
xchg
or
mov
xchg
daa
lods
adc
std
xchg
and
pop
call
std
push
push
test
loop
add
repnz
xchg
mov
scas
imul
push
insb
mov
adc
xchg
cmp
jp
mov
fidivrl
sbb
dec
lods
xchg
loop
mov
xchg
loope
pop
adc
push
xchg
int
call
ret
and
inc
fnsave
fistpll
fwait
sarl
mov
inc
lods
adc
inc
sub
fldl
pushf
xchg
adc
mov
push
leave
movsb
bound
or
xchg
mov
out
inc
add
mov
negl
push
je
icebp
cmp
int3
xchg
jns
mov
push
imul
arpl
jecxz
xchg
inc
mov
mov
neg
adc
push
enter
or
imul
mov
xchg
push
stos
and
je
ret
adc
int
xchg
out
rorl
mov
fisttpll
cmp
sub
mov
jnp
jmp
jno
in
inc
shl
cmp
sar
lret
pushf
pop
mov
sbb
xchg
pushf
xchg
mov
mov
ss
outsl
lea
pop
mov
outsb
lds
cld
shlb
xchg
andl
aam
dec
sub
push
xor
sarb
imul
imul
aad
xlat
ret
ljmp
fbstp
aas
mov
das
fistpl
cmp
sbb
decl
fucomip
xor
xchg
add
sahf
mov
sub
push
dec
mov
mov
jge
mov
movsb
repz
icebp
xor
lds
stos
pop
test
rcrl
sub
and
test
push
or
fisttpll
dec
outsl
mov
pop
sbb
pop
jmpw
mov
mov
inc
sarl
data16
pop
xchg
scas
jle
jge
fcompl
adc
cmpsl
inc
repz
int3
xchg
ljmp
mov
cmpsb
inc
sub
ljmp
scas
xlat
adc
xor
sti
arpl
sarb
jg
fiaddl
daa
inc
lahf
fcoms
jnp
int
cmpsl
das
cmpsb
mov
xorps
cmpsl
out
pop
imul
popf
fmull
push
sbb
jmp
int
cmp
not
push
int3
test
jae
js
push
mov
jb
enter
push
and
xchg
lods
in
xor
ljmp
stc
push
shlb
pop
rolb
mov
cwtl
mov
pop
sub
cmp
pop
jg
mov
dec
arpl
push
push
mov
mov
or
jb
jl
sbb
jge
testb
mull
inc
in
repnz
mov
xchg
lods
push
xchg
fdivl
sub
test
and
jmp
insl
adc
iret
adc
xchg
mov
sbb
mov
dec
or
xlat
sub
push
jp
fisttpl
movsb
fnsave
mov
popf
cmp
inc
mov
or
xor
mov
and
cmp
shll
aam
pushf
and
xchg
jge
jae
jne
inc
push
xlat
mov
int
jb
mov
insl
adc
scas
loop
lds
fstpt
flds
roll
mov
push
sbb
xchg
fsubl
ret
sbb
mov
fidivrl
pop
xchg
cmp
xor
adc
sub
sbb
test
sbb
cwtl
cld
or
rol
iret
es
or
loope
sbb
xchg
mov
jno
xchg
addr16
dec
pop
scas
and
xchg
cmp
imul
jbe
push
fadds
push
scas
in
cs
add
or
fcoml
dec
ret
imul
sbb
jno
adc
aas
sub
dec
mov
adc
adc
cld
jnp
add
bound
and
sarb
stc
dec
fwait
or
ja
es
mov
int
popf
and
dec
jle
fs
push
cmp
mov
divl
sbb
or
data16
scas
mov
out
cmp
lea
xchg
scas
inc
mov
cltd
xchg
cwtl
jae
push
inc
pop
scas
imul
jbe
mov
arpl
jge
test
mov
in
stc
les
lods
push
dec
mov
jge
sub
lods
xor
push
xorl
js
je
pop
das
movsl
sbb
add
xchg
bnd
sbb
and
or
scas
roll
dec
inc
inc
aam
sbb
mov
or
stos
ljmp
stos
jno
divb
iret
call
fcmovnb
cmc
leave
mov
mov
adc
loop
fidivs
adc
cmp
sbbl
daa
dec
xchg
xchg
fwait
call
dec
fistpll
jne
mov
lods
sbb
dec
push
pusha
xchg
lock
mov
enter
dec
or
adc
and
xchg
cmpsb
jle
cmc
push
pop
push
adc
in
jle
sti
lret
in
adc
cltd
cwtl
pop
js
pop
push
lahf
push
adc
imul
jbe
aam
shll
xor
aaa
xchg
popf
cld
lods
and
mov
dec
or
jnp
rcrl
adc
push
cmp
adc
cmp
in
dec
cmpsb
les
xchg
sbb
outsl
fdivl
xchg
decb
mov
dec
repz
shr
and
cmp
aam
test
or
nop
push
out
jae
pop
jo
shll
out
xchg
xor
xor
fsub
mov
jp
nop
lahf
imul
cltd
add
ljmp
mov
dec
and
add
rorl
stos
dec
inc
or
dec
push
notl
sbb
std
push
mov
stos
xchg
icebp
cltd
dec
push
and
ds
cmc
and
je
sbb
arpl
xlat
mov
sarb
cmp
push
and
push
xor
mov
or
ret
out
adc
or
dec
out
pop
pushf
push
inc
pop
dec
or
sub
out
push
sub
shll
aaa
mulb
adc
push
jno
inc
fwait
push
sbb
icebp
inc
arpl
inc
cli
push
vpunpckhwd
or
xchg
mov
andl
jbe
test
in
mov
cmpl
mov
xchg
leave
mov
repz
sbb
je
push
cmp
cltd
add
mov
dec
in
loop
std
xchg
lods
iret
or
push
shlb
xor
jb
cs
sub
sbb
mov
repz
cmc
push
mov
lahf
bound
pop
rorl
mov
sbb
je
jg
sub
lods
aas
add
fadds
jge
inc
add
adc
add
inc
fdivrs
test
add
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
xor
xor
add
jmp
lret
ret
ds
mov
lret
xadd
xor
out
jg
jae
js
sbb
adc
in
sub
fbld
popa
iret
jb
sub
sarl
popaw
fildll
or
iret
je
cli
mov
xchg
into
dec
mov
stc
inc
xor
jmp
mov
sub
xor
ficoms
cmp
test
dec
push
pop
fcoml
push
fnstenv
mov
pop
adc
mov
mov
push
out
sbb
nop
mov
xor
pop
aad
mov
mov
sub
loopne
data16
popa
jb
subl
leave
jae
cltd
mov
fdivp
fstpt
xlat
gs
jne
aad
add
mov
orb
lea
inc
jmp
pop
test
test
rorl
push
dec
dec
jmp
mov
push
in
cld
jno
fists
inc
repnz
in
cmp
pusha
inc
js
pop
sub
lods
movsb
dec
jmp
mov
loop
test
ljmp
mov
loop
lcall
mov
bound
pop
movsl
lcall
arpl
adc
push
adc
movbe
mov
pop
mov
call
pop
test
mov
mov
mov
and
bound
clc
imull
jecxz
mov
sub
or
fmuls
test
mov
les
mov
fdivs
daa
in
xchg
or
iret
aad
aad
mov
adc
sub
add
mov
test
je
cltd
rol
jmp
mov
int3
xchg
fbstp
es
push
jl
dec
outsb
popf
jp
inc
or
pop
add
lea
and
clc
or
mov
mov
push
fiaddl
lods
stos
add
dec
push
jmp
cli
lret
dec
cmp
xchg
in
pop
cli
cmc
mov
xchg
push
mov
cmp
in
sahf
add
xor
mov
lret
iret
das
imul
leave
pop
dec
js
xchg
sbb
sub
push
stc
lahf
js
sti
cmpsb
shrl
pop
pushl
fidivs
xchg
fwait
jmp
inc
lcall
pop
xchg
pop
mov
xchg
popa
call
mov
jl
aam
pushf
scas
divl
testb
push
xchg
mov
jnp
mov
lea
push
scas
cld
xchg
adc
push
mov
mov
xor
outsl
add
jbe
dec
cmp
mov
jge
lods
das
inc
mov
mov
dec
mov
loopne
rcll
jns
jbe
ljmp
ljmp
add
loopne
cld
add
js
dec
or
rcr
dec
sti
mov
xchg
cs
jo
cmp
xor
adc
jns
es
sbb
lods
outsl
js
jne
mov
jne
add
mov
mov
inc
test
les
mov
aaa
ja
das
shrb
pop
mov
add
dec
push
pushf
repnz
into
sub
adc
jo
ljmp
inc
or
push
movsl
out
push
inc
jle
lret
iret
sbb
js
and
dec
xchg
stos
mov
mov
cmp
sti
sti
mov
cmc
repnz
jbe
sub
gs
mov
enter
add
sbb
pop
push
jo
and
add
mov
mov
xchg
xchg
incl
jmp
mov
ds
subl
test
inc
lock
int3
js
aam
xor
out
pop
jmp
or
test
xor
push
cli
cmp
ljmp
adc
movsl
lret
arpl
xor
ret
mov
mov
mov
movsb
push
es
das
push
adc
iret
pushf
stos
ret
fimull
mov
mull
cmp
cmp
xorl
sub
in
sarb
outsl
adc
pop
movsb
or
jae
add
nop
jecxz
jne
call
jo
push
and
sbb
jle
and
inc
and
mov
mov
pop
les
mov
stc
cmpsb
mov
idivl
lods
js
sti
repnz
mov
nop
jmp
lock
out
sti
pop
std
and
pop
test
movsl
mov
sub
jns
jae
mov
sbb
stos
sbb
dec
sub
jle
pop
sub
fsubr
ja
pop
into
dec
mov
inc
lock
cmc
in
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
adc
jmp
mov
rcl
fcmovnb
fnstcw
or
jo
test
push
icebp
jg
jae
js
imul
inc
in
in
sub
adc
sbbb
cli
cwtl
cmc
test
movsl
les
xchg
clc
popf
gs
shrl
jbe
jmp
ficoml
popl
cmp
cmp
lds
jbe
ret
insb
test
mov
mov
fwait
pop
jle
pop
int
in
nop
mov
mov
sub
sub
mov
jo
insl
nop
jbe
mov
inc
xor
mov
sbb
xor
out
adc
pop
jle
dec
mov
shr
push
push
jo,pn
and
lret
incl
sbb
aam
std
hlt
mov
inc
sbb
fdivr
movsl
dec
and
adc
add
mov
and
int3
jmp
mov
add
clc
mov
dec
mov
mov
scas
fld
inc
addb
ret
mov
pop
and
and
cmp
mov
test
pusha
push
lret
or
fsubl
adc
rcrl
adc
je
ret
frstor
clc
hlt
pop
add
lock
aaa
pop
xchg
dec
inc
sub
push
lods
push
sbb
dec
jne
dec
call
dec
shlb
xchg
mov
shrb
divl
aad
sub
movsl
mov
xor
into
mov
mov
pusha
int3
ds
scas
sbb
fs
movsl
pop
jl
mov
dec
add
ud2
add
mov
inc
ret
js
cmp
sub
sbb
popa
push
lea
xchg
and
push
sbb
in
movsl
sbb
mov
lea
aad
add
imul
mov
lcall
test
inc
xor
push
mov
pop
fiadds
and
xchg
mov
adc
arpl
jg
xorb
scas
aam
loopne
and
adc
push
mov
xchg
pop
adc
aam
mov
cli
test
adc
adc
lds
add
inc
cmp
push
mov
cld
pop
call
jecxz
insb
mov
xchg
fsts
sbb
mov
sbb
repnz
loope
inc
loop
push
xor
imul
inc
icebp
hlt
and
aas
mov
je
cmp
fistl
pop
dec
cmp
lcall
add
mov
iret
pop
loope
dec
fs
jge
sub
stos
dec
dec
fmul
js
or
incb
inc
pop
cmp
ja
mov
mov
lods
push
mov
pusha
xchg
aas
hlt
sbb
add
mov
popf
mov
mov
push
xor
scas
sbb
adc
pop
stc
mov
ret
sub
mov
in
mov
xlat
cwtl
xchg
rcl
push
aas
int3
pop
test
fists
cmp
lea
pop
stc
leave
outsb
dec
lds
mov
sub
mov
pop
and
xchg
xor
insb
imul
or
push
int
fdivrs
xchg
fadd
cmp
ljmp
mov
xor
jle
mov
mov
shlb
lock
ret
inc
in
mov
sbb
pushf
fildll
mov
mov
mov
roll
daa
test
dec
push
rcl
mov
pop
pop
pop
fldt
push
inc
sbbl
cmp
xchg
call
push
in
clc
xchg
in
insl
jno
aam
sub
xor
test
imul
in
hlt
scas
jo
push
xchg
mov
jp,pn
sbbl
sbb
pop
loop
pop
push
jae
xchg
xor
lea
xchg
fstl
dec
push
fnclex
jbe
scas
jecxz
jae
dec
pop
out
loop
sub
pop
out
jns
pusha
sub
adc
cli
cli
jl
mov
add
add
movhps
cwtl
add
in
loopnew
xchg
adc
rclb
mov
jnp
test
pop
fcomps
popf
shrb
pop
mov
and
sti
cmp
je
inc
mov
imul
arpl
test
fisubrs
sbb
rcrb
ds
mov
leave
mov
dec
lret
lock
out
das
cmp
push
out
scas
mov
xchg
dec
add
dec
inc
inc
xor
or
pop
repz
aad
cwtl
addr16
fdiv
xor
bnd
xchg
jg
fistpl
mov
mov
inc
int3
cmp
loop
add
jmp
lret
leave
int
int
fxch
sub
rcrl
jns
jg
jae
js
cmpsl
mov
leave
stos
cwtl
fldt
mov
and
xlat
ret
pop
inc
xchg
pop
call
xchg
jns
and
jg
xchg
jbe
clc
xorb
shll
mov
or
and
aas
loope
iret
mov
out
sbb
roll
xchg
jnp,pn
push
rclb
or
lea
cli
xchg
inc
stos
out
add
push
cmp
test
cmpsl
iret
ja
lods
xchg
aaa
mov
sub
pop
pusha
add
and
test
leave
jle
push
xor
dec
adc
in
test
sbb
mov
pushf
sbb
sahf
loope
xchg
sbb
outsl
xchg
sbb
mov
xor
ds
imul
and
pop
lahf
inc
enter
fidivs
out
arpl
fwait
mov
sub
add
adc
pop
ljmp
nop
popa
inc
ss
inc
adc
in
fmuls
out
loopne
sub
push
insb
loope
movsl
aaa
inc
js
mov
mov
or
jb
push
dec
loopne
lods
dec
and
and
and
icebp
jl
sub
pop
dec
orb
sbb
dec
shl
xlat
cmovs
xchg
mov
mov
lret
xlat
jecxz
jb
jns
outsl
cmp
xchg
sahf
je
and
sbb
jb
lret
and
jnp
ljmp
mov
push
mov
dec
inc
push
sti
aas
outsl
stc
jns
ret
mov
fs
ret
and
out
pop
test
xchg
enter
fcom
mov
add
cltd
inc
jmp
test
and
mov
fisubrl
adc
dec
add
push
lcall
xchg
xchg
in
and
cld
and
arpl
aam
jecxz
arpl
add
add
sbb
lods
rolb
add
dec
mov
popf
adc
repz
add
jb
xor
dec
hlt
leave
cmc
xchg
and
jae
lahf
mov
dec
enter
test
aam
es
jnp
xchg
outsb
lahf
outsb
cmpsb
jne
in
xor
je
mov
movsl
push
sbb
rcr
popl
push
pop
icebp
dec
imul
data16
jecxz
mov
pop
cmp
enter
icebp
xor
inc
les
mov
cld
sbb
xchg
scas
movsl
mov
jg
mov
lret
test
sub
es
mov
lock
fnstsw
sbb
mov
andb
or
ds
lock
xchg
inc
loop
ret
bt
xor
js
ja
xor
pop
cwtl
mov
cmp
out
push
in
push
pushf
mov
lods
adc
push
jle
outsl
lock
jge
mov
sbbb
outsl
jnp
insb
mov
cs
ds
mov
ficompl
xchg
inc
inc
dec
inc
lahf
imul
sbb
aam
mov
pop
xor
rolb
andb
push
jo
lods
add
pop
pusha
mov
inc
scas
out
fisubl
aaa
and
out
in
or
and
shlb
loop
lock
pop
cltd
in
call
adc
loop
or
jl
xor
test
pop
mov
out
test
or
outsl
mov
int
in
xchg
push
dec
ror
sbb
addl
jmp
leave
xor
out
dec
xchg
nop
imul
sub
sub
rol
xlat
pop
push
and
incb
add
xchg
divl
nop
cmp
pop
cmp
inc
and
xchg
cld
loopne
cmp
mov
mov
pop
shlb
insb
lret
mov
cli
cmp
mov
repnz
ss
fsubrl
imul
outsb
xor
lds
test
jns
xlat
mov
or
hlt
and
ficomps
bound
and
cmpsb
push
in
ds
lods
sub
pop
cld
xchg
bound
arpl
mov
mov
or
lea
sahf
stos
or
xchg
inc
xchg
fwait
in
adc
push
iret
sbb
stos
fildl
dec
sbb
outsb
dec
fcomi
in
cmp
and
out
pop
aaa
lret
ss
xchg
lds
cs
cltd
dec
xchg
mov
inc
nop
mov
fcomps
lcall
lock
es
xchg
inc
enter
clc
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
iret
cmp
fld
outsl
fisubrs
insb
clc
jg
jae
js
aaa
jnp
cli
sub
or
sti
inc
sub
lods
cmp
popf
xorb
push
cmpsb
add
sbb
lods
push
loopne
xorb
and
lds
pushf
lods
jne
sti
jmp
adc
movsb
mov
or
mov
jg
arpl
or
outsb
mov
xchg
push
sbb
xchg
mov
popf
mov
xchg
cmp
xor
mov
xor
xchg
jbe
loop
repz
lods
xor
icebp
sbb
imulb
cmpsb
inc
mov
ljmp
popf
pop
add
sbb
cs
test
mov
bound
lods
inc
sbbb
rclb
adc
xor
int
ret
movb
aam
xchg
jmp
mov
call
pop
flds
and
xchg
push
cmp
in
ja
mov
mov
icebp
test
fistpll
mov
icebp
subb
add
stos
stos
jle
xor
jo
sti
pop
testb
xor
cmpsl
push
loop
movsb
cmpsb
imul
ficomps
outsb
push
cmpsl
popf
popa
sbb
cpuid
jg
mov
cmp
pop
cmpsl
rorl
xchg
mov
addr16
dec
sbb
xchg
shll
mov
sbb
push
add
cwtl
xchg
xchg
xchg
dec
mov
inc
iret
rcll
or
jno
sar
je
xor
stos
push
js
cmpb
adc
dec
test
pop
movsb
dec
int3
sbb
xchg
pushf
pop
shll
cmp
or
mov
cli
add
lock
inc
std
add
outsb
xor
inc
mov
mov
push
cmp
ljmp
leave
mov
jmp
cmp
out
inc
andl
cmp
add
mov
sbb
shll
pop
mov
ret
cmp
arpl
aas
ds
cmpsb
icebp
push
inc
and
adc
xor
inc
test
push
pop
inc
imul
mov
mov
jmp
test
iret
in
or
push
pop
insl
std
jp
add
sbb
mov
inc
push
mov
sbb
inc
mov
jl
xchg
jge
aad
ret
imul
pop
inc
mov
dec
cmp
mov
xor
jno
push
clc
mov
jbe
adc
es
fwait
cwtl
ja
lock
inc
push
lcall
lds
pop
loop
mov
inc
pop
mov
cmpsb
xor
repnz
lock
rclb
push
imul
loopne
push
push
ja
mov
xor
inc
cld
cli
and
xchg
mov
adcl
mov
sbb
push
adc
xor
add
jge
mov
push
mov
push
mov
xchg
outsl
inc
imul
rcr
adcl
adc
mov
jmp
pop
xor
icebp
push
sbb
xor
dec
jns
stos
stos
adc
or
cwtl
sbb
pop
cmp
movsb
cmp
pop
xchg
inc
mov
xor
dec
dec
mov
mov
adc
cmp
dec
nop
out
cmc
es
popa
mov
or
sbb
push
jae
out
push
mov
xchg
loop
mov
fwait
lds
aad
jns
adc
mov
out
pop
dec
mov
xchg
mov
cmp
jne
shll
adc
add
sub
out
sbbb
cs
cmp
negl
cmpl
dec
imul
jbe
cmpsl
mov
cmp
xchg
xchg
aad
ret
mov
out
fildl
divl
xor
or
xchg
mov
rolb
mov
pop
insb
inc
add
rcrb
lock
jmp
mov
push
jmp
inc
adc
pop
jmp
and
clc
fisubrs
es
pushf
cld
mov
sahf
xchg
insl
jge
lcall
and
inc
mov
imul
add
lahf
adc
nop
pop
jae
add
fisubrl
ljmp
lea
push
xchg
lea
xor
add
push
imul
inc
out
adc
mov
push
push
xor
sbb
pop
mov
lcall
cmp
jae
jecxz
cmc
sub
rorb
lea
cmp
movl
je
push
movl
jmp
mov
adc
jmp
lret
rol
lret
lret
and
adc
fs
jae
js
adc
in
test
lea
dec
ret
mov
mov
and
pop
fstps
icebp
mov
jno
jnp
movsb
fdivrl
out
push
push
jmp
sarl
gs
andb
inc
sar
push
enter
enter
shl
inc
adc
sahf
sub
pop
aaa
jl
popf
pop
movsl
jl
andl
mov
jecxz
bound
and
sub
push
shlb
pop
stos
bound
mov
push
sbb
ficomps
outsl
pop
push
out
jbe
addl
cmp
add
dec
gs
sbb
fdivrl
pop
pop
cmpsb
cmp
mov
xchg
xchg
stos
fsubs
clc
push
xor
xchg
lcall
mov
inc
dec
push
fidivl
icebp
mov
adc
imul
sbb
stc
shlb
and
cmpsb
inc
mov
adc
push
movsb
pop
aad
jmp
mov
xchg
pushf
mov
lret
ret
ret
or
insl
repnz
clc
jb
cmc
in
mov
xchg
jno
push
jecxz
insl
es
adc
lar
cmp
xchg
jp
cmp
xor
or
adc
cmpsb
push
das
mov
out
push
sub
xor
mov
fmul
inc
int3
or
xchg
pop
jae
sub
rolb
mov
adc
or
movsl
mov
mov
and
and
movsb
sub
inc
adc
xchg
cmp
repnz
push
and
aaa
cmp
outsl
notl
icebp
add
scas
call
pusha
ret
xchg
scas
imul
icebp
fcompl
loopne
movsl
in
movsb
outsl
enter
sub
fiaddl
shl
push
bound
iret
cmp
outsb
js
cmpsl
inc
and
lods
sub
fcmovnu
repz
mov
into
pop
mov
xor
adc
mov
mov
or
push
lahf
cmp
jecxz
loope
xor
adc
pop
adc
stc
mov
testb
test
pop
inc
push
jge
imul
jmp
or
dec
test
aad
mov
or
pusha
cmp
ja
ret
mov
orl
out
push
mov
sub
sub
fwait
out
and
lock
push
and
rcrb
pop
adc
jg
lods
rcrb
iret
cmp
push
mov
cmp
aas
xchg
and
dec
mov
fnstsw
stc
jmp
rclb
inc
cmpsl
repnz
xlat
int3
xor
and
jno
adc
push
aas
and
sub
stc
test
cld
andl
std
pop
push
bound
sbb
pop
movsb
bound
add
jmp
pop
sbbl
out
sbb
and
fmull
pop
sub
jmp
fnstcw
int3
and
fldt
mov
inc
xchg
cmpsl
add
adc
or
mov
dec
test
fidivl
lahf
sbb
cltd
sbb
inc
dec
pop
into
jns
rorb
sub
js
cmp
or
mov
push
rcrb
mov
push
cwtl
and
add
enter
xchg
mov
rclb
aad
int
mov
cmp
and
movsl
sub
add
fstl
leave
ljmp
sbb
in
and
in
ficompl
aad
mov
test
dec
repz
lea
dec
fdivrs
add
inc
mov
cwtl
push
inc
xchg
ficoms
ret
xor
sbb
add
adc
xchg
in
std
ja
jae
add
test
hlt
add
or
jns
dec
out
in
fdivl
mov
push
push
sbb
mov
sbb
movsl
loop
mov
adc
jl
test
iret
imul
add
lcall
outsb
mov
jecxz
ficomps
and
repz
and
mov
fsubrl
xchg
lock
push
in
mov
mov
into
mov
jnp
movsl
pop
ja
push
push
inc
jne
daa
iret
mov
aad
mov
fsubrp
xchg
mov
das
and
cs
add
rorl
mov
adc
add
out
inc
push
xchg
mov
pop
jns
insb
popf
out
jne
adc
lods
sbb
xchg
clc
sbbl
jmp
imul
popa
inc
mov
lock
sub
mov
addl
xor
andl
add
movl
jmp
int
enter
int
stos
nop
outsb
das
push
leave
pop
xchg
jae
js
add
rorl
das
ret
popf
cmp
add
or
dec
dec
dec
sbb
xchg
cmp
xor
into
movsb
idiv
leave
or
adc
jb
mov
mov
fisttpl
mov
loop
loop
je
mov
ds
stos
icebp
addl
cs
mov
int
xchg
and
in
clc
jecxz
popa
sahf
out
pop
jae
movsb
pop
or
cmp
daa
repnz
aad
or
in
shl
xor
or
ret
cmp
mov
jae
mov
sbb
stos
mov
cmp
dec
icebp
arpl
repnz
aam
dec
pop
sbb
or
fs
mov
jne
ficoml
jge
rorb
jne
or
adc
call
or
jl
mov
clc
enter
sub
fimull
jb
subl
mov
inc
cmp
lods
es
xor
std
push
imul
sub
cmp
xor
mov
loop
sti
add
movsb
fdivp
ret
pop
dec
jl
std
pop
dec
rol
sbbl
sahf
sub
rcr
cltd
push
inc
and
out
roll
jb
dec
mov
push
cli
adc
movsb
cmpsl
push
push
jae
shl
push
shll
or
orps
loope
call
or
sbb
mov
xchg
xor
adcb
inc
xchg
pop
dec
inc
mov
jge
push
and
test
cmp
in
fstpl
pop
add
dec
stos
rclb
jl
clc
mov
dec
xchg
int
in
jp
pop
push
mov
push
pusha
mov
in
mov
xchg
in
dec
xchg
int3
mov
nop
lock
ss
out
xchg
test
sbb
jl
in
lock
in
inc
and
inc
ljmp
and
xchg
sub
jg
sbb
or
scas
inc
and
insl
fbld
test
xor
rolb
mov
jle
das
in
fisubrl
xor
daa
pop
jl
imul
aam
pop
fcomp
xor
icebp
pop
imul
imul
jno
addr16
hlt
mov
gs
sub
ljmp
xlat
es
adc
sbb
adc
in
push
xchg
dec
into
adc
add
jle
lods
dec
out
mov
jmp
xchg
mov
in
sub
push
mov
and
test
mov
aas
dec
mov
mov
lock
stc
xchg
push
in
mov
rol
repnz
mov
lock
icebp
fwait
jle
dec
repz
add
adc
loope
inc
cmpsl
xor
pop
andb
xchg
fdivs
inc
mov
pushf
add
jecxz
call
sub
jne
sbb
or
sub
cwtl
gs
cltd
outsl
stc
add
popa
out
into
das
or
jb
inc
das
or
imul
sbb
mov
dec
sub
inc
pop
int
pop
pop
mov
fs
addl
je
mov
cmpl
fwait
inc
xchg
xchg
lahf
inc
mov
cmpsl
mov
insl
and
mov
ss
xor
mov
push
stos
sub
mov
sahf
loop
jle
xor
sub
mov
dec
rorl
scas
xor
es
leavew
out
jg
shrb
mov
and
repz
inc
imul
and
test
pop
cmovnp
jge
and
mov
cmpsb
jmp
inc
push
nop
mov
dec
xchg
test
test
adc
mov
mov
insl
ss
adc
lods
xchg
and
sbb
xchg
and
std
mov
movsb
outsb
pop
fs
cmp
pop
in
imul
sbbb
popw
push
cmp
bound
sub
push
loopne
push
clc
jmp
loope
and
out
fimuls
ljmp
mov
jle
push
add
idivb
cmp
scas
xor
jl
adc
xor
jae
push
ret
bound
cld
jnp
mov
cli
and
adc
and
jae,pn
sahf
jnp
scas
mov
call
mov
adc
mov
mov
add
dec
lea
push
push
cmpsl
ret
push
daa
popa
int
jns
mov
rcrb
dec
xor
imul
jmp
lret
leave
shrl
popa
ret
mov
jae
js
jae
push
xor
je
insb
pop
arpl
andl
lret
outsl
dec
mov
inc
and
in
mov
ret
adc
jl
push
or
scas
or
add
xor
jmp
pop
fldt
lahf
adc
adc
sbb
xchg
ret
pop
cmc
divb
leave
mulb
inc
jo
xor
dec
std
fstps
inc
cmpsl
sbb
add
dec
dec
pop
ja
fwait
ficoms
popa
cs
xor
iret
inc
jmp
fdivrl
aam
xchg
mov
dec
ss
pop
loop
dec
mov
int3
sub
in
dec
mov
imul
stc
mov
jnp
jns
out
repnz
scas
mov
adc
lret
pushl
push
je
ljmp
fstl
movsb
pop
shufps
jb
xchg
xlat
sbb
pop
out
rorb
jns
fstp
fsts
inc
inc
mov
in
pop
lods
into
push
sub
add
jae
fwait
sbb
call
cmp
pop
sub
pop
pop
je
xor
sti
in
hlt
inc
ret
mov
insb
push
add
rolb
xor
xchg
sub
inc
inc
in
out
add
dec
or
jnp
pop
add
ficoml
jno
cmp
jbe
sbb
and
xchg
pop
repnz
in
jb
xor
das
mov
stos
xchg
orl
sbb
inc
mov
or
push
shrb
pop
pop
lahf
sbb
pop
pop
and
inc
sbb
fnsave
cmp
mov
leave
cmpl
repnz
xchg
mov
js
sub
pop
jl
pop
sbb
xchg
hlt
sti
shll
push
pop
outsb
gs
std
sbb
mov
es
jbe
lods
inc
cld
xor
inc
sbbl
imul
in
or
insb
adc
jne
dec
aam
rorl
adc
push
in
pcmpeqw
xchg
cmp
xor
ret
adc
mov
pop
sti
and
fcmovnu
mov
inc
lock
add
imul
stos
add
push
cltd
scas
cmpsl
sbb
mov
call
aas
inc
lods
cld
aad
pop
inc
mov
int
jae
xchg
jmp
lret
mov
cmp
pop
mov
mov
push
jnp
call
stos
mov
dec
xchg
fstl
pop
cmp
test
add
orb
inc
sbb
psubusb
dec
or
dec
rcll
inc
setae
pop
inc
scas
test
push
cli
mov
mov
imul
insb
cmp
jge
call
adc
movsb
arpl
pop
mov
sub
pushf
xchg
jmp
mov
push
pop
add
xor
dec
addr16
cltd
cmp
sub
or
movsl
mov
movsb
or
sbb
mov
ja
jle
pop
divl
jne
jge
sbbl
repnz
sti
mov
sub
imul
leave
and
data16
js
sahf
dec
ret
jg
sbb
push
mov
pop
clc
mov
jmp
lret
es
mov
hlt
call
ficoms
out
pushf
fimull
pop
pop
movsb
jecxz
xchg
sub
add
cmpsb
out
popf
aas
sub
adc
mov
fimuls
in
decl
cwtl
pop
sbb
rcrl
or
pop
stos
sarb
cmp
adc
mov
dec
and
xchg
adc
imul
div
add
lock
dec
mov
mov
lea
shl
shrb
dec
loopne
mov
mov
xor
lods
out
and
xchg
fnstsw
lods
sub
aad
cld
sbb
mov
stos
and
cmp
imul
lret
cmpsb
push
add
xor
mov
push
stc
iret
jo
add
icebp
mov
mov
lock
xor
icebp
dec
jb
inc
in
jecxz
std
xchg
lret
and
cmp
aas
std
icebp
xchg
adc
mov
es
sbb
and
out
pusha
push
xchg
xchg
cmp
jbe
sahf
lret
lcall
cld
aad
lods
mov
jp
inc
inc
jno
frstor
es
nop
mov
jp
jl
testb
mov
sub
daa
mov
fbstp
cmc
cmpb
std
inc
cmp
mov
daa
gs
roll
inc
xchg
cmpsb
out
sbb
jle
add
mov
mov
jmp
into
iret
iret
cmp
cmp
shl
aad
je
inc
cmc
inc
inc
mov
jae
js
test
cltd
mov
mov
into
adc
aad
adc
push
inc
in
dec
pop
push
inc
aaa
lods
in
cltd
adc
push
pop
test
gs
subb
sti
adcb
in
inc
loopne
mov
ret
rcrl
or
jl
cltd
sti
push
inc
shlb
hlt
jge
rcl
xor
stos
lock
xchg
mov
cmp
lret
ss
and
cmp
insl
les
fs
fcomps
and
fiaddl
mov
xor
scas
mov
dec
mov
insl
inc
add
cmp
jns
add
cli
daa
xchg
addr16
lea
fdivp
jge
jne
xchg
fwait
sahf
lock
sbb
hlt
test
je
outsl
or
pop
loopne
xchg
inc
ds
fucomip
sub
cmp
sbb
ret
dec
mov
xchg
ja
fcompl
es
lods
pop
sbb
sub
sar
xchg
mov
push
sub
jns
inc
ss
jmp
push
cmp
dec
sub
sbb
pusha
push
push
mov
imul
fbstp
and
xchg
mov
and
loopne
dec
stos
xchg
xchg
or
xor
aas
dec
iret
pop
enter
mov
jmp
bound
pop
cwtl
push
sub
sbb
adc
xchg
das
pop
inc
xchg
cmpsl
jp
adc
xchg
std
gs
hlt
shl
fs
pop
sub
jbe
rolb
jmp
fistpll
sahf
dec
sub
xchg
xchg
mov
add
imul
enter
sbb
pop
loopne
jno
icebp
jg
pusha
mov
pop
das
cwtl
aas
or
push
inc
movsl
out
adc
xchg
cli
xchg
mov
std
mov
cs
nop
nop
add
iret
cwtl
sarl
mov
jns
fucomp
push
mov
inc
jo
inc
mov
push
sbb
cmc
push
or
push
xor
outsl
out
push
cmc
push
cmp
popf
jae
lods
aaa
inc
pop
out
jp
xor
ljmp
sub
xchg
icebp
sbb
mov
push
mov
outsb
pop
xchg
fistps
pop
sbb
sub
ja
jno
stos
outsb
xor
cmpsl
sbb
mov
in
push
out
push
les
outsl
add
dec
clc
ljmp
iret
jge
mov
pop
mov
push
mov
je
hlt
dec
icebp
nop
mov
mov
cmpsl
jmp
les
and
mov
inc
int3
std
shl
jle
in
clc
sbb
sbb
arpl
sub
movsl
or
repnz
push
cmp
adc
jno
inc
addr16
inc
test
sub
sbb
dec
bound
cmp
imul
and
dec
mov
pop
sbb
pushf
repz
cmp
scas
pop
lods
and
pop
sti
cmp
adc
sub
xor
pop
add
mov
lret
test
push
pop
pop
pop
stos
int3
sahf
pushl
inc
out
cmc
dec
sub
xchg
mov
clc
mov
sub
dec
dec
int3
les
scas
lret
jge
cmp
dec
adc
push
out
push
push
out
pop
cmc
jecxz
pop
mov
adc
nop
xor
int
mov
sub
mov
dec
sbb
pop
mov
loope
insb
mov
add
jb
cld
add
jp
mov
sbb
or
leave
lods
push
cmpsl
fbld
cmp
subl
add
jmp
addr16
mov
xchg
push
fwait
jl
pusha
leave
dec
leave
xlat
jb
mov
gs
negb
test
rcl
fbstp
je
add
jmp
fistpll
xchg
sbb
push
sahf
xor
adcl
jns
sub
push
push
xor
hlt
pop
pusha
loope
pop
in
jns
mov
xchg
rcrl
std
jmp
cmp
aas
scas
lret
popf
sahf
icebp
add
jo
repnz
lods
pop
mov
sub
pop
imul
imul
and
leave
jmp
xor
mov
daa
lods
push
mov
or
jmp
mov
rolb
xor
mov
hlt
pop
aad
addr16
mov
out
push
add
daa
mov
sub
jns
int3
dec
mov
aaa
sub
sbb
notb
out
adc
in
mov
pushf
inc
dec
ljmp
ss
xchg
cs
lods
adc
rolb
sbb
jmp
ror
cmp
aam
fistl
pop
mov
mov
jl
js
pop
jl
loope
inc
xor
inc
and
scas
push
cli
lds
decb
fistps
sti
in
int3
sbb
jmp
scas
sbb
imulb
jbe
adc
js
loope
cs
push
jo
loope
leave
out
fnstenv
inc
dec
test
cs
repz
ret
out
ja
pop
xor
out
out
and
mov
mov
xor
xor
mov
aam
mov
cwtl
lods
or
and
adc
xchg
inc
add
jns
push
lea
and
fisttpl
mov
dec
jne
fs
outsl
xor
dec
pusha
xchg
jnp
movsb
sub
fimull
cmovb
xor
pop
movsb
fbstp
pop
jl
add
dec
pop
dec
sbb
fstl
or
mov
fs
push
xchg
jb
dec
adc
mov
pop
gs
add
pop
pushf
in
outsl
xor
xchg
dec
ds
les
in
xchg
les
sbb
testl
mov
mov
fsubrs
inc
and
jle
fstps
mov
fs
and
push
dec
addr16
mov
aas
jmp
jl
ljmp
mov
out
lods
pop
gs
aas
mov
test
adc
mov
mov
cli
ljmp
repz
repnz
sub
ja
fists
or
int
jle
iret
nop
xor
push
aad
jo
push
mov
jnp
and
mov
orb
insl
bound
repnz
ds
and
fcomp
inc
sub
filds
pop
lock
xchg
mov
cmp
jno
bound
sahf
pop
and
jp
scas
notb
sub
lea
pop
insl
dec
adc
fsubl
test
mov
fadds
movsb
jmp
mov
stc
mov
out
push
sahf
sub
je
add
lea
xor
shrb
mov
and
inc
sbb
jae
in
jbe
ja
in
ljmp
pushf
inc
adc
lcall
dec
lods
inc
arpl
popf
movsl
js
test
or
gs
shrb
shlb
dec
test
adc
repnz
push
mov
xor
pause
sub
fistpl
sub
sub
mov
int3
in
jne
outsl
dec
test
loope
sbb
jmp
jae
into
insl
mov
mov
sbb
loop
xlat
push
sub
mov
pop
imul
aad
inc
prefetch
int3
rorl
jne
in
ja
nop
mov
xchg
cmpsb
movsb
in
xchg
jg
or
fwait
cmp
xor
outsl
mov
jmp
repz
and
emms
or
pop
sub
push
push
clc
cmpsl
mov
add
sub
lods
xor
inc
scas
push
jge
sbb
push
cli
inc
push
jl
fldt
fwait
cld
insb
and
xchg
cld
dec
mov
mov
xchg
dec
dec
jae
fldcw
test
scas
ljmp
insl
sarl
outsl
insl
cmp
mov
fcoms
lock
and
daa
jnp
sbb
jnp
rcrb
jg
rclb
insl
stc
jo
fwait
cli
mov
fmuls
inc
mov
inc
mov
cmp
jns
sub
mov
outsl
ljmp
mov
aas
sub
out
xor
jno
fwait
lret
test
pop
insl
mov
xchg
mov
arpl
rcrl
stos
push
push
enter
or
cmc
push
lcall
mov
in
fsubrs
clc
inc
mov
sub
jge
test
sbb
stc
sbb
insb
lret
icebp
repz
out
push
inc
daa
andl
pusha
mov
fists
mov
inc
sarb
cmpsl
scas
mov
ret
dec
sub
push
clc
pop
cli
nop
sbb
inc
push
jno
pop
pop
sub
loop
inc
inc
dec
jl
stos
jmp
insb
or
test
pop
adc
lods
in
fidivrl
setno
int
movsl
leave
pop
addb
fisubrl
test
and
and
rcll
fcoms
jl
mov
bound
shrb
movsl
xchg
lods
ficomps
jne
fldl
repnz
int
xchg
xlat
outsl
leave
lods
or
rcl
sbb
clc
jmp
int
aad
int
sahf
pusha
mov
rcll
js
jl
js
mov
daa
pushf
mov
adc
wrmsr
mov
xor
xchg
cltd
push
subl
pusha
int
repnz
mov
cmp
in
cmp
inc
inc
js
mov
enter
sbb
mov
dec
xor
push
int3
jb
or
clc
dec
popa
cwtl
outsl
sub
movsb
xchg
pop
loopne
xor
aas
enter
shl
imull
sub
adc
sub
das
cmpl
add
adc
sub
and
dec
pop
cmp
mov
fwait
add
add
lcall
xchg
imul
insl
fnstenv
out
fdivr
mov
push
je
add
outsb
jne
push
sbb
mov
shlb
sub
xlat
jae
add
cltd
cmp
cmp
mov
jo
adc
lret
fcoml
xchg
dec
sti
shll
dec
sbb
xchg
popf
jbe
pop
mov
stos
push
pop
push
ret
loope
loopne
addl
ja
or
push
jp
lahf
fcoml
cmp
adc
stos
out
add
int
mov
xchg
or
cmp
xor
fnsave
and
adc
es
call
scas
xorl
adc
out
aaa
pop
sarb
test
push
ja
orl
sahf
out
fwait
push
loope
out
aas
jp
fisubrs
sbb
or
mov
sbb
pop
lods
cmp
dec
add
lds
sbb
xor
adc
scas
xorl
xchg
push
fldl
mov
sbb
call
les
pop
sub
pop
cmp
aaa
push
sub
mov
leave
out
jbe
lcall
mov
testb
aas
jle
scas
hlt
push
imul
movsl
shll
es
fwait
cs
mov
dec
xchg
out
dec
or
xchg
pop
or
fdivrs
add
jmp
insb
dec
pop
add
push
sub
and
sub
sub
mov
cmp
scas
push
aam
sub
xor
mov
xor
test
lea
lret
mov
xorl
dec
add
lock
das
in
aam
arpl
pop
push
mov
xor
lret
sbb
inc
sbb
pop
lret
movsb
jg
nop
mov
add
call
sti
dec
rcrl
ljmp
repz
pop
add
mov
das
ficoml
fs
and
ret
aaa
cmp
pusha
pop
rclb
in
fwait
xor
cmc
scas
addr16
cmp
inc
cmp
clc
hlt
movsl
lods
pop
ja
dec
pop
dec
daa
pushf
mov
cmp
hlt
clc
xor
inc
jecxz
jno
inc
leave
sub
sub
fcomi
ret
insl
add
fstpt
mov
push
lds
ss
je
test
push
cld
shl
add
xor
in
mov
loopne,pn
mov
jp
xor
pop
andl
lahf
repnz
pop
cs
flds
call
and
or
xor
or
nop
cmpl
pusha
mov
sbb
pop
aad
loope
xor
lahf
lods
sahf
cmc
enter
int
in
je
inc
xor
or
mov
movsl
adc
outsl
sub
aaa
ret
hlt
jge
mov
xchg
jns
data16
and
filds
dec
addr16
sub
xchg
and
rolb
js
pinsrw
mov
xor
pop
lock
leave
fstpl
scas
call
jno
les
mov
insb
es
fidivs
jmp
cs
pusha
fdivrl
and
or
and
das
and
je
or
sbb
mov
push
test
stc
jmp
cmp
fdivs
fadd
rcll
in
sbb
mov
jbe
push
lods
cmpsl
inc
mov
dec
lock
jmp
call
cmp
loop
inc
or
mov
inc
or
dec
sti
inc
clc
adc
iret
mov
test
test
loopne
jns
mov
jns
lea
sub
mov
dec
sub
push
mov
push
or
daa
jae
ds
popf
es
push
mov
pop
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cmp
fcmovnbe
rolb
mov
js
jl
js
out
ret
pop
punpckhwd
pop
dec
imul
insl
sub
icebp
adc
sbb
jle
xor
mov
insb
aad
ror
mov
vandnps
add
sbb
xlat
sub
out
lret
push
lahf
test
out
sub
or
xchg
ret
ljmp
testb
inc
aas
jno
mov
into
stos
repz
stos
popf
movsb
add
mov
or
sub
sbb
inc
jnp
imul
enter
xor
sub
sub
dec
aaa
push
outsl
inc
xchg
mov
adc
mov
pop
fildll
push
fisubs
leave
xor
rclb
sbb
sbb
mov
fstpt
leave
test
mov
fs
pop
lcall
sub
cmp
inc
jbe
mov
inc
push
fs
dec
popa
jg
enter
cmp
lahf
pop
int
jl
test
jno
jecxz
fcoml
daa
imul
add
out
mov
addb
fildll
fiaddl
add
daa
pop
dec
test
sub
cld
shl
test
test
cltd
cmp
insb
cli
inc
rorl
testb
shll
shll
rcrl
cs
dec
lret
lock
mov
add
sbb
fnsave
jp
addr16
loopne
push
mov
push
movswl
mov
jmp
sub
clc
and
pop
adc
cs
stos
jp
out
shl
pop
js
mov
xchg
mov
ja
fmul
repz
or
hlt
and
mov
pusha
enter
mov
and
dec
fmul
fisubl
or
jg
iret
out
xchg
cltd
int
pop
shrl
shrb
xor
repnz
dec
dec
ljmp
jecxz
aam
pusha
xor
or
ficomps
lock
loopne
lret
fsubrl
push
and
outsb
dec
int
jns
mov
gs
lods
sbb
xchg
push
mov
outsb
out
dec
jo
int
stc
jne
arpl
shrb
pushf
iret
movsl
push
imul
push
add
xor
popl
shll
dec
test
lcall
cmp
or
ret
fsubs
test
add
cmp
nop
xor
jp
jp
adc
int3
adc
sbb
pcmpgtb
push
sbb
scas
fmull
sbb
xchg
add
scas
adcb
sbb
or
popf
leave
push
repnz
mov
enter
fadds
lret
pop
mov
sti
stos
xor
call
sub
fdivrl
ret
add
xchg
xor
or
jo
push
push
mov
loope
out
push
and
jns
imul
call
pop
daa
in
cmp
hlt
cmp
aam
jo
icebp
sti
push
movsl
fidivrl
divl
int
xchg
sbbb
inc
decl
adc
ret
insl
ljmp
movsl
mov
sbb
xchg
idivb
dec
emms
jp
dec
push
stc
fldt
testl
mov
add
mov
mov
xchg
mov
dec
pusha
xchg
imul
xor
cmpsl
lock
pop
out
mov
in
push
andb
mov
xchg
stos
cltd
jb
mov
ljmp
xchg
leave
mov
or
in
call
lret
mov
xor
inc
lods
push
int3
mov
xchg
insl
lahf
or
pop
loope
lcall
jle
mov
pusha
aas
pushf
stos
mov
mov
push
rclb
loopne
imul
hlt
psubw
pop
shll
leave
push
fldcw
sbb
sub
cwtl
push
jp
dec
fiadds
std
mov
push
fidivl
add
out
cmpsl
sub
aas
sub
dec
jp
mov
sbb
repz
pop
dec
and
pop
addr16
inc
orl
fcompl
mov
fbstp
repnz
push
jle
mov
into
inc
movsb
adc
push
jmp
repnz
in
ja
in
xlat
mov
inc
jne
push
mov
sbb
fildll
push
repz
jns
scas
or
out
in
adc
push
pop
ret
lds
jp
push
inc
stos
cld
sbb
cmp
popa
mov
pop
cwtl
jmp
push
les
jmp
cmp
dec
jb
clc
mov
aaa
ja
add
push
push
btc
stos
out
aam
popa
add
imul
sub
mov
mov
orl
sub
movl
jmp
aas
int3
ret
aad
aam
stc
stos
push
cltd
xor
jg
jae
js
arpl
jne
ds
lahf
out
add
aaa
iret
out
scas
call
mov
outsb
fsubrs
out
pop
jb
rcrl
sub
and
mov
std
cmp
pop
sbb
das
rcl
lods
aas
pop
call
sub
mov
fisttps
movsb
cld
les
jo
aam
scas
mov
out
add
pop
cmpsl
ficomps
xchg
sti
loopne
loop
jmp
int
dec
pop
inc
or
jmp
ds
nop
dec
mov
mov
insl
popf
in
fnsave
add
adc
test
imul
and
aas
mov
cmp
cmpsb
jmp
les
push
rorb
addr16
fs
adc
pop
xchg
arpl
xor
push
aam
and
pop
mov
xchg
xchg
mov
js
aaa
jmp
push
out
out
gs
push
lea
insl
iret
jmp
mov
fdivl
xchg
mov
push
jle
inc
jge
fidivrs
or
mov
scas
mov
mov
pop
inc
test
mov
leave
add
test
scas
enter
aaa
mov
push
pop
xchg
loope
pop
adc
jmp
mov
jb
rolb
sarl
call
shr
pusha
push
adcl
mov
rorb
test
sbb
int
mov
fmull
lods
xchg
call
dec
and
jecxz
and
shrl
into
add
loopne
dec
out
lcall
data16
jae
inc
adc
stc
jmp
stos
mov
mov
filds
jl
ss
dec
mov
adcl
push
add
pop
or
adc
mov
sbb
push
mov
in
inc
push
or
das
je
aam
outsb
lret
sti
aam
mov
mov
mov
sub
mov
loopne
add
push
ror
out
loope
scas
mov
jge
cmpb
insl
sbbl
das
or
loopne
pop
mov
into
jmp
xchg
fbld
ret
fdivrs
lahf
ja
ljmp
or
mov
outsb
or
mov
jns
ja
sub
add
and
dec
loopne
jae
cld
ds
jo
push
mov
test
ret
ja
mov
mov
dec
mov
xchg
scas
test
push
mov
test
xor
and
jle
push
xor
xor
icebp
push
mov
add
inc
push
and
jne
dec
imul
mov
and
sub
imul
xor
cmp
into
mov
xor
lcall
fwait
inc
mov
push
je
add
iret
and
ljmp
mov
jno
cld
inc
mov
mov
sysret
mov
inc
dec
xchg
cmovle
mov
inc
mov
ljmp
ljmp
jno
insb
test
sub
and
daa
iret
xor
dec
xchg
outsl
fcomip
repz
out
sbb
out
fwait
scas
imul
in
dec
lods
mov
mov
cmc
or
fisttps
clc
push
iret
push
frstor
xchg
adc
dec
fs
fs
fidivl
addr16
lcall
rcr
push
dec
lahf
pop
adc
clc
xor
xor
sbb
mov
xchg
imul
loopne
push
dec
push
jmp
out
jmp
xchg
hlt
push
dec
in
lods
mov
sub
shr
or
mov
pop
stc
les
mov
cmp
fdivr
call
dec
cmp
push
sarl
push
dec
out
sub
xor
dec
add
dec
dec
adc
scas
and
aad
sub
icebp
xorl
jg
xor
xchg
into
adc
jp
sbb
sub
pop
and
adc
aam
call
mov
add
ja
hlt
popf
movsb
cs
xchg
das
sti
mov
mov
aam
pop
dec
stc
in
jge
les
hlt
loopne
outsb
push
fnsave
sbb
sub
sti
fildl
pusha
mov
pop
shll
sub
push
jg
ret
push
shll
in
fwait
je
fimuls
ljmp
out
gs
in
sbb
mov
cwtl
pop
push
mov
in
std
insb
mov
gs
movl
jmp
xlat
into
ror
aad
xlat
imul
loopne
stos
jg
jae
js
les
or
loop
movsb
jns
test
mov
sub
jne
ja
dec
out
mov
cmpsl
shlb
test
sbb
pop
arpl
cwtl
ficoms
add
outsb
call
test
mov
inc
mov
shrb
and
xchg
pushf
xchg
outsb
les
dec
aam
xchg
bound
cmp
mov
cli
shlb
and
dec
aas
pop
addr16
ficompl
add
test
and
cvtps2pi
mov
add
push
xchg
roll
lds
aam
sti
lods
add
or
rorb
std
mov
dec
stos
daa
testb
pop
pop
cltd
mov
cli
pop
xlat
lods
add
sub
xchg
mov
cwtl
jmp
lea
cmp
les
pop
add
movups
add
and
pushf
callw
sbb
xlat
add
sti
push
adc
movsb
ljmp
popa
push
lcall
xchg
mov
ljmp
and
hlt
cmp
xchg
xlat
imul
fwait
xor
sub
mov
movsl
mov
jl
lods
dec
cmpsb
lahf
insb
test
cmp
nop
popl
lcall
imul
jp
cwtl
and
ret
jo
das
jbe
popa
fldt
sti
pushf
les
jae
cmpl
jno
jecxz
andb
jl
adc
into
push
cmp
scas
jae
mov
cmp
sub
lret
xor
or
lret
push
repnz
dec
data16
pop
stos
mov
sub
bound
pop
fisttpll
cmp
dec
imull
inc
std
outsb
bnd
lea
pushf
sarb
and
jns
sub
popl
pop
jnp
jle
adc
push
jns
cld
imul
xor
and
mov
pop
cmpsb
lea
cmp
sbb
pop
xchg
sarl
mov
push
or
hlt
dec
jo
pop
ds
js
pop
push
push
inc
dec
lods
push
fwait
mov
inc
rcrb
xor
hlt
xor
pushf
incl
add
js
rorl
negb
xchg
xchg
loop
jle
dec
in
pop
jmp
lock
insl
movl
ja
lahf
xchg
jg
ss
int3
lea
int
int
mov
lds
xorl
daa
push
mov
jnp
and
inc
pop
xchg
shr
iret
rol
add
iret
push
adc
mov
addb
sub
push
stc
enter
roll
scas
dec
xchg
pop
sbb
dec
jno
lods
sbb
mov
idivb
ja
pop
arpl
mov
sub
pop
mov
jp
xchg
jne
xor
mov
test
jle
je
pushf
cmp
fsubp
mov
inc
subl
or
out
cmp
scas
leave
and
repz
scas
inc
dec
xor
adc
cs
push
cld
decb
mov
fdiv
cmpsl
pop
sarl
insb
rol
fsub
cmp
shlb
mov
test
mov
push
imul
or
inc
fistps
push
clc
in
add
fistpll
dec
sub
inc
data16
ja
cmp
mov
sbb
repnz
xor
fidivrs
jp
and
pop
inc
scas
loope
xchg
sbb
ja
adc
jo
sbb
sbb
sbb
hlt
mov
fnstenv
faddl
or
push
xchg
shl
xchg
mov
xchg
mov
xchg
leave
fucomip
imul
adc
and
mov
enter
aas
fcompl
cmp
les
lret
daa
aam
xchg
loopne
jae
enter
in
pop
aas
rclb
insl
es
loope
mov
mov
sbb
repz
xorl
lods
fildl
jb
aad
cmp
imul
aas
divb
mov
mov
dec
add
add
cwtl
out
insb
data16
inc
sarb
sub
movsl
xor
xor
imul
push
call
jge
aaa
lahf
and
lds
push
adc
dec
inc
icebp
les
push
adc
push
into
imul
repnz
mov
jecxz
cmp
int
test
push
popa
xchg
pop
jle
and
cmp
mov
xchg
dec
push
out
mov
loopne
pop
inc
and
xchg
add
push
cld
xor
sbbl
add
movl
jmp
jmp
ror
rcr
rol
aad
stos
pusha
fldenv
js
jl
js
incl
jne
decl
hlt
cmc
cmp
xorl
nop
xchg
adc
jge
pop
sbb
dec
cs
scas
ja
push
mov
dec
fnstsw
dec
xor
mov
mov
mov
and
pushf
sbb
xchg
jecxz
or
or
movsl
pop
scas
fwait
xor
andb
xchg
mov
push
repnz
jmp
add
movsl
std
jmp
decb
stos
jp
add
cmp
lock
pop
mov
scas
sbb
dec
lods
lock
mov
dec
leave
mov
mov
movsl
sbb
and
test
call
fsts
icebp
mov
push
mov
fisttpl
mov
mov
add
cmpsl
lahf
fcomip
sub
sub
sub
pop
dec
xor
xchg
arpl
pushf
clc
jb
repz
lds
cld
orl
mov
aad
mov
push
jae
add
dec
jp
clc
cwtl
cmc
mov
nop
mov
cld
movsl
mov
dec
add
in
cs
push
add
popa
jne
jmp
aas
or
das
inc
stos
sub
loopne
outsb
sbb
fwait
inc
fcompl
dec
mov
pop
push
xchg
sbb
push
leave
test
mov
xchg
sub
xor
adc
les
pop
into
andb
loop
cmpsb
int
adc
loop
push
mov
jge
pminsw
mov
gs
out
sti
cmc
bound
xor
cmpl
in
inc
sbb
gs
mov
cmp
push
adc
sbb
jmp
or
jg
push
dec
mov
cmc
ss
movsl
cs
in
sbb
inc
mov
mov
lods
push
and
push
loop
scas
nop
lds
lock
cmp
mov
jno
adc
mov
mov
test
pop
or
dec
push
and
jne
jne
and
lds
push
mov
daa
jle
xchg
icebp
pop
movsb
add
and
jecxz
sub
stc
cli
es
popf
dec
xchg
xchg
aam
sti
fs
out
mov
cmp
cmp
mov
loope
jge
push
pusha
jg
ljmp
out
outsl
jg
or
xchg
cld
pop
mov
pop
shrl
scas
test
sti
xchg
sub
xchg
dec
je
int
sbb
xorb
pop
sbb
imul
adc
cwtl
dec
repnz
xor
adc
inc
or
stos
imul
loopne
adc
in
and
outsl
xchg
inc
fidivrl
addl
pop
sub
xor
shll
and
rolb
or
mov
pop
sub
or
negl
jle
in
adc
les
gs
fsubrs
jne
pushf
out
xchg
mov
pop
outsl
add
testl
and
rcrl
adc
adc
mulb
js
or
psrad
inc
or
outsl
xor
mov
fiadds
bound
rcll
ret
into
inc
or
mov
push
shll
or
into
add
push
xor
in
ret
sbb
xchg
addr16
lea
sbb
add
cmp
add
cli
movsb
sbb
pushf
sub
xchg
mov
pop
xor
or
shll
push
int
sarb
stos
push
int3
sub
out
aaa
push
fsts
adc
push
ficoms
jb
dec
add
pop
sbb
pop
mov
andl
xchg
push
jecxz
je
or
out
cmp
ret
pop
jbe
xchg
shl
into
movsl
fs
lret
clc
mov
daa
ficoms
lahf
in
fldenv
lahf
or
inc
stos
adc
and
pop
dec
lcall
fisubrs
adc
pop
and
pop
jmp
int
test
mov
cmc
mov
xchg
leave
int3
lret
xor
mov
mov
dec
sbb
ja
out
xchg
push
add
sti
and
cli
dec
fiadds
clc
mov
xlat
jbe
xchg
test
les
push
lahf
inc
div
push
popa
loop
jb
sbb
clc
or
inc
or
loope
lds
idivb
shl
jge
cld
add
cmp
push
sahf
movsb
cmpsb
test
loop
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
mov
sub
mov
jmp
lret
into
leave
aam
cmp
orl
jl
js
pop
lds
and
cmp
push
outsb
dec
inc
lcall
xchg
insb
lret
je
mov
jecxz
cmp
lret
and
jp
xchg
leave
push
mov
xor
sti
adc
fmull
into
pop
ja
cmpsl
js
pop
xor
js
repz
sbb
or
fisttpl
add
and
bound
aam
in
xchg
add
adc
push
shlb
enter
add
mov
call
sub
or
mov
imul
iret
mov
fisubrl
sub
pop
sbb
cmp
adc
adc
mov
adc
pusha
dec
push
xchg
rcll
lock
lcall
fcompl
inc
pop
or
mov
int3
mov
scas
scas
lock
inc
sub
test
jl
std
jno
mov
mov
call
pop
mov
loopne
inc
jl
inc
dec
pop
or
loopne
mov
rcr
stos
ret
in
inc
fs
outsb
icebp
popl
imul
mov
je
jb
jne
mov
imul
lods
out
repz
fcompl
or
cmp
mov
or
push
call
or
jmp
ja
fmuls
in
dec
shl
sub
movsb
xchg
or
dec
lods
movsl
cltd
inc
xchg
mov
pop
test
out
lods
xchg
scas
adc
rcrl
mov
daa
popl
jbe
mov
inc
or
jg
jl
add
aad
stos
rcrb
test
frstor
push
sbb
inc
faddl
xchg
stc
div
inc
mov
mov
mov
xchg
test
daa
xor
out
mov
add
xlat
adc
mov
pop
xlat
cmp
or
xchg
fdivl
dec
fcomps
jge
push
mov
lods
push
popf
mov
je
jp
pop
cltd
pop
arpl
push
outsb
inc
mov
ss
mov
adc
pop
in
leave
enter
inc
test
aas
loopne
dec
jns
shlb
mov
push
mov
movsl
or
fcomps
cmp
sub
inc
std
js
pop
es
shl
xchg
and
and
jae
lret
aam
add
push
add
jge
pop
mov
jmp
mulb
mov
xchg
loop
jne
and
cmp
dec
sbb
adc
jg
cmp
mov
mov
cmp
mov
jg
or
shl
sub
mov
mov
subl
cmpsl
outsl
push
xchg
push
and
iret
jnp
lret
adc
dec
pop
mov
push
sbb
jp
lret
ljmp
lret
imul
mov
sbb
sbb
dec
dec
sub
sti
testl
inc
adcb
mov
out
dec
pusha
mov
mov
insl
icebp
and
pop
loopne
rcl
xchg
aas
insl
mov
mov
lds
out
lea
xchg
inc
adc
fimuls
pop
call
lahf
pop
enter
mov
xor
pop
out
loop
imul
jg
dec
adc
repnz
xor
xor
movl
inc
cli
dec
mov
out
ljmp
xor
inc
sarl
pushf
push
cmp
or
push
lret
lds
jge
in
inc
xor
and
mov
sbb
sbb
loop
aad
xchg
std
inc
mov
xor
pop
xor
enter
lret
ja
dec
ret
iret
xor
cmp
add
pop
pop
mov
clc
iret
movb
xor
movsl
icebp
add
dec
fstl
lss
mov
stos
lock
imul
cltd
inc
dec
je
and
notl
iret
cli
pusha
notl
fdiv
and
mov
mov
inc
mov
mov
jge
sub
inc
psubw
movsb
sub
movsl
fisubrs
mov
sub
xchg
pop
sti
push
xorb
movsl
call
mov
xor
scas
dec
pop
add
jae
icebp
subb
mov
and
jb
fnstsw
cld
xchg
pop
and
push
xchg
or
arpl
pop
xlat
cmp
call
fisttpll
lret
adc
xor
shlb
clc
add
jmp
cmp
leave
lret
leave
leave
ret
outsb
lret
jge
dec
cli
in
mov
js
jl
js
sbb
lds
mov
xor
push
inc
outsb
jae
xor
bswap
aas
out
and
dec
icebp
xchg
mov
pop
sub
inc
pop
bound
rcll
leave
xchg
push
gs
fadds
rol
jge
xchg
addr16
into
xor
fs
imul
adc
fnstenv
add
jnp
mov
adc
jge
jecxz
imul
enter
shrb
inc
test
xorl
popa
sub
fwait
push
pop
idivl
push
mov
mov
lds
int
inc
in
jns
mov
add
hlt
stos
jg
jmp
mov
sbb
cmp
sbb
xchg
lcall
ja
out
mov
sbb
push
call
pop
enter
and
xlat
jo
sbb
xchg
cmp
mov
mov
mov
or
push
out
or
inc
or
or
mov
fimuls
fwait
or
les
repz
sbb
inc
roll
push
mov
push
dec
push
sbb
mov
dec
sub
hlt
and
add
push
js
push
push
inc
cwtl
and
ja
add
adc
jle
adc
jno
inc
daa
jns
out
in
mov
sysexit
sbb
into
jnp
lahf
jl
xchg
dec
sbb
gs
push
xor
mov
les
sbb
inc
out
adc
cld
sahf
mov
cld
into
leave
test
gs
aas
sbb
iret
into
cmc
mov
subl
push
fidivrl
adc
inc
push
dec
or
icebp
add
dec
popa
sahf
jbe
mov
pop
jle
pusha
cmp
sbb
xchg
xchg
addr16
and
cs
and
int
push
incl
push
xor
adc
mov
inc
adc
mov
jne
dec
sub
xchg
jl
stc
stos
ret
pushf
mov
xor
cmpsb
js
xor
mov
mov
sbb
arpl
das
mov
xchg
outsb
adc
sub
scas
adc
ret
lahf
add
xchg
sbb
jle
in
jae
xor
scas
flds
sub
or
xor
fisubs
cmpsl
dec
mov
add
xchg
mov
and
mov
push
adc
jg
mov
cmc
cld
cmpl
and
imul
jle
xchg
xor
stos
fists
pop
loop
shlb
test
push
mov
sub
push
xor
cmp
fs
xchg
inc
or
cmpsb
lcall
pop
inc
pop
stos
add
or
fcomps
icebp
pop
call
fiadds
sub
mov
push
cmp
jle
mov
les
ret
cltd
dec
push
ja
jecxz
int
popf
and
sbb
mov
repnz
loop
idivl
or
mov
sarb
rcrb
adcl
sbb
jne
xchg
and
shll
lret
ret
add
sahf
lods
jg
and
adc
in
push
mov
data16
aas
mov
dec
ljmp
sbb
mov
imulb
aam
push
and
cmp
jp
xchg
es
sbb
sbb
and
stc
push
daa
mov
xor
inc
xchg
fwait
imul
adc
inc
jne
cmp
xor
jne
jbe
pop
pop
push
fistps
cmpsl
jle
add
add
jl
and
mov
faddl
mov
jns
jo
dec
ljmp
cltd
test
mov
repnz
push
pushf
int
mov
jne
sub
incl
lds
out
sti
mov
push
pop
fs
outsb
out
movsl
cmpsb
xor
jnp
mov
jne
ret
frstor
adc
mov
sbb
outsb
pusha
fstps
les
adc
fdivrp
int
repz
xlat
imul
rcrl
sub
mov
pop
mov
jne
jae
js
push
ds
mov
lods
jae
rorl
scas
dec
cmp
sub
add
adc
pusha
rdpmc
and
mov
pop
call
dec
add
push
mov
adc
cmp
in
mov
inc
pop
nop
cmc
inc
add
addr16
icebp
outsb
xchg
stos
out
outsb
shrb
lea
cltd
dec
in
test
pop
dec
aad
pop
testl
add
rol
fcmovnu
jp
orl
jg
jae
js
pop
pop
repnz
jns
std
mov
rorb
jo
and
pop
sub
cmp
or
popa
in
or
cld
and
push
xor
adc
das
mov
xchg
cmpsb
and
movsb
popa
adcb
leave
xchg
push
out
mov
cmp
adc
push
add
frstor
lock
hlt
pop
outsb
mov
scas
insl
add
dec
aaa
sub
out
movsl
mov
dec
jg
and
es
jnp
loope
mov
daa
arpl
insb
sbb
fucomi
and
dec
mov
or
pop
xlat
and
and
divb
sbb
lock
cwtl
popf
dec
lret
xlat
aaa
fmull
sub
ss
xchg
std
cwtl
in
loope
mov
inc
dec
repz
addr16
ss
out
sbb
jmp
aam
arpl
fdivrl
subl
jbe
icebp
jp
jl
adcb
ja
insb
adc
or
popa
nop
enter
out
test
ljmp
cwtl
adc
ljmp
jns
xor
push
out
mov
push
mov
add
test
daa
addr16
jg
xor
cld
sub
fs
jge
jecxz
lahf
fiadds
outsl
push
xchg
dec
mov
mov
mov
scas
nop
or
pushf
out
inc
mov
mov
inc
cwtl
test
ja
cltd
mov
imul
add
and
xorb
ljmp
dec
adc
subb
cmp
and
pop
and
cltd
cmpl
pop
dec
lock
aas
xchg
rcrl
adcl
iret
push
outsl
pop
popl
sarb
mov
mov
into
xchg
movsl
jne
into
sub
pop
in
pop
or
xchg
inc
push
xchg
lret
pop
aaa
dec
shrb
xorb
fsubl
frstor
push
add
push
push
nop
es
sarl
fwait
xchg
insl
aas
mov
jmp
inc
fcomps
ds
sbb
aad
adc
test
movsl
add
cmp
or
stos
sub
cmp
and
push
sarb
jo
inc
cmp
adc
jne
inc
cmp
dec
movb
out
jmp
mov
mov
hlt
sub
loopne
fisubrl
popf
jne
rolb
xchg
scas
repnz
popl
popf
xchg
repnz
pop
jmp
enter
cmp
lea
movsb
je
fisttpll
push
fucomi
insl
sbb
dec
lods
inc
cmp
iret
mov
call
adc
cs
adc
xchg
dec
jo
jae
and
push
or
xor
xor
out
adc
cmc
imull
cmp
pop
out
jnp
and
or
mov
int
cmp
dec
jge
lret
add
xchg
test
lahf
aaa
sahf
add
leave
inc
and
lods
lret
rcl
in
push
mov
adc
in
out
out
bound
xchg
ds
imul
mov
adc
test
in
mov
lock
pop
and
sub
inc
pop
lret
mov
insl
incb
push
push
cld
test
jg
rcr
mov
pop
adc
dec
mov
cwtl
jmp
mov
push
inc
xchg
stc
dec
xchg
sub
mov
sti
sub
sbb
idivl
mov
fsubs
out
test
adc
push
in
jne
push
pop
or
cmp
xchg
jbe
fstl
inc
jae
mov
inc
inc
xchg
adc
xchg
add
pusha
cld
out
add
inc
rcrb
cmpsl
xor
test
pop
stos
xchg
and
flds
sbb
jmp
add
sbb
push
jnp
sub
int
xchg
sub
inc
jge
mov
mov
ror
ss
push
in
in
cld
adc
xchg
xchg
loop
sbb
push
mov
push
sti
inc
test
ret
outsb
xlat
mov
jecxz
insb
mov
mov
dec
jecxz
xor
je
cwtl
mov
xchg
mov
mov
test
xor
ss
push
mov
push
stos
popf
test
adc
out
dec
aam
adc
sti
mov
out
popf
push
iret
add
mov
addr16
add
test
sub
jns
jbe
aaa
lods
push
scas
enter
xchg
mov
cmp
cmp
sub
lahf
push
mov
mov
push
jo
jmp
mov
mov
sub
jmp
ror
lret
fcmovbe
fcmovb
mov
xchg
cmp
jae
js
jge
mov
ss
dec
inc
aad
jns
pop
fwait
insb
aas
push
fdivrl
cltd
jae
dec
ja
mov
pop
cli
sub
out
mov
push
popa
sbb
sub
mov
aam
movsb
fwait
sub
aas
ja
inc
sbb
adc
mov
add
pop
xchg
into
xor
mov
sti
adc
sarl
inc
inc
mov
mov
movsl
adc
and
cmpsl
int
push
adc
or
sub
test
adc
inc
cmpl
dec
inc
dec
cs
mov
mov
fcmovu
mov
std
add
hlt
and
xchg
call
jae
rcr
xchg
add
cmpsl
ss
sti
xchg
push
testb
sbb
mov
icebp
mov
sahf
push
scas
push
push
cmp
test
enter
cltd
mov
push
fcmovnbe
cmpsl
aaa
daa
cs
and
pusha
test
jns
cmp
fs
mov
out
mov
jnp
xorl
addr16
xchg
jle
shl
fsubrl
xchg
jle
mov
into
add
mov
mov
aas
lahf
pop
xchg
in
dec
xchg
xor
fdivrl
mov
stos
test
xchg
xor
adc
test
pushf
pop
lahf
pusha
jnp
and
ds
or
test
imul
addr16
xchg
pop
pop
xor
xchg
xchg
pop
ja
or
dec
stc
loope
loope
push
sub
sbb
ja
pushf
push
mov
sbb
stc
cmp
jl
mov
cmp
test
push
outsb
adc
push
sub
jb
jbe
shll
mov
jnp
adc
repz
mov
sbb
fmull
arpl
out
pop
xchg
mov
lds
xchg
test
push
push
fwait
add
pop
mov
loop
sbb
iret
jecxz
hlt
mov
inc
lahf
faddp
adc
push
jbe
sbb
inc
cmpsl
rcrb
lcall
cmpsb
push
pop
push
push
call
ds
rcrb
dec
adc
fisttps
xlat
mov
mov
sbb
cmp
pop
loop
mov
mov
int3
subb
sbb
mov
movsl
mov
divb
mov
jno
pushf
pop
xor
mov
dec
pop
push
mov
das
adc
shl
xchg
mov
xchg
lret
call
fldcw
loop
adc
or
or
fistl
cmp
add
jo
subl
xchg
cwtl
jbe
push
adc
push
decb
jmp
lock
rclb
sbb
dec
pop
sbb
cmp
xor
sbb
test
fldt
or
jns
roll
mov
mov
ret
shl
mov
inc
push
adc
jg
dec
lods
jno
and
mov
fsts
pop
cwtl
and
daa
inc
shll
jmp
mov
xchg
popa
out
aaa
cltd
movsl
popa
ss
test
inc
shl
mov
cmp
in
cmp
movb
stos
mov
jae
push
mov
sub
inc
mov
push
adc
outsb
stos
mov
pop
xor
push
imul
and
fwait
scas
jb
sub
push
pop
jp
xor
cld
fdiv
pushf
fdivs
inc
pop
repnz
adc
aaa
imul
icebp
jnp
sbbb
test
push
mov
adc
and
mov
xor
aad
xchg
outsl
lret
mov
fildl
pop
mov
jmp
push
push
push
ss
push
mov
stc
lods
lret
mov
mov
mov
pop
cwtl
cmp
sbb
cs
mov
cs
sub
xor
test
push
add
xor
mov
ret
add
out
movsb
mov
movl
test
push
call
xchg
scas
int3
test
mov
push
lcall
mov
shlb
insb
sub
hlt
sbb
push
adc
or
out
and
and
or
xchg
cmp
sub
or
sbb
fwait
fs
mov
daa
aam
in
jg
lods
pop
add
and
jp
sbb
into
cmpsl
pusha
or
arpl
dec
in
push
pop
adc
xchg
lcall
idiv
movsl
pusha
xchg
cmp
inc
out
sub
push
cmpsb
push
divb
icebp
in
xchg
pop
sbb
hlt
loope
mulb
cmp
push
idivl
jno
hlt
leave
enter
or
ret
fcmovbe
aad
fs
inc
mov
inc
jg
jae
js
movsb
push
stos
cmp
inc
and
aaa
aas
shlb
leave
sub
sbb
sbb
cmpsb
xlat
loope
jb
dec
add
push
jne
movsl
cmp
push
xchg
dec
mov
mov
mov
inc
push
loop
jge
mov
cmp
mov
cs
pop
addl
fidivrs
mov
mov
push
push
pop
repnz
cs
sub
mov
pop
mov
inc
mov
inc
test
andl
mov
mov
iret
xchg
xchg
popf
aam
mov
test
stc
popf
rcll
add
push
push
mov
push
mov
insl
jp
loope
test
fcmovne
add
push
add
test
test
mov
jp
push
mov
scas
out
inc
out
sub
jb
incl
out
hlt
les
iret
cld
sbb
push
pop
ret
cmp
jae
jp
adc
push
xchg
cmpsl
nop
or
add
or
js
ror
adc
sub
les
lock
mov
std
mov
mov
fdivl
or
push
fs
sub
mov
jge
icebp
arpl
dec
stos
out
pop
and
cmc
or
mov
ljmp
rolb
push
imulb
out
sub
sub
xchg
dec
inc
adc
sub
test
xchg
mov
lods
inc
mov
xchg
jecxz
cmpsb
lock
imul
aas
movsb
imul
in
test
jp
xchg
sub
scas
mov
cmp
stos
mov
mov
fdivrl
sub
loope
push
insb
int
js
call
imul
scas
repnz
sub
psubsw
cmp
mov
lcall
push
jmp
fldt
rcll
aas
out
or
fmul
pop
cmp
fadd
adc
add
sbb
mov
pop
or
imul
push
js
gs
pushf
adc
pop
mov
test
cmpsl
xlat
in
lret
sub
pop
dec
roll
out
loopne
inc
fwait
jne
cmpsl
mov
push
cmp
mov
in
jmp
shll
das
mov
sbb
loope
sti
inc
stos
jnp
enter
inc
xchg
into
jnp
pop
divb
scas
adc
jmp
add
sbb
sti
filds
mov
pop
sbb
dec
pop
roll
mov
fdivrl
ljmp
sbb
insl
cmp
add
andb
test
lds
lock
das
movsl
lea
test
mov
lahf
jae
sub
out
scas
mov
pop
loope
cmpl
fs
jg
sub
daa
popa
or
mov
pop
dec
fstpt
ror
pop
test
scas
cmp
inc
xchg
hlt
mov
iret
inc
xchg
bnd
inc
nop
clc
es
out
lock
push
xchg
and
or
fimull
mov
sub
jae
pusha
shll
mov
sbb
push
and
movsl
cmp
jns
push
daa
push
and
shll
iret
mov
cmp
mov
cs
mov
mov
xchg
movsl
pusha
lods
sub
pusha
repz
jbe
stos
mov
adc
sub
cmp
lds
movsl
push
stos
lds
jns
pop
dec
addr16
imul
lahf
jbe
xchg
push
sub
inc
popa
jae
cmp
jg
js
std
or
cmp
or
inc
leave
data16
push
enter
orb
adcb
je
stc
jb
ljmp
pop
rcl
pop
pop
push
aam
xor
shrl
mov
outsl
jmp
xchg
mov
jmp
push
sub
xchg
dec
mov
sbb
adc
outsl
int3
mov
ret
insl
inc
out
adc
pop
and
xchg
jno
xor
ljmp
jg
pushw
aas
mov
rcr
fadds
push
aaa
and
and
mov
xor
push
stos
repnz
pop
add
mov
loope
add
in
icebp
cmp
mov
cmc
insb
mov
adc
pop
xchg
and
call
inc
loop
jl
cmpl
popf
xlat
in
sbb
scas
imul
and
rcrl
mov
and
imul
sbbb
push
shl
subb
xchg
add
add
xor
add
cld
xor
xor
add
jmp
cmp
les
jmp
andl
dec
jg
jae
js
dec
cli
sbb
sbb
adc
pusha
movb
cmp
aam
mov
sub
mov
sub
scas
out
ret
lret
sbb
es
call
jle
mov
or
iret
mov
pop
dec
js
jae
sbb
jno
dec
pop
insb
jb
add
inc
sbb
jnp
jge
push
sbb
sbb
in
mov
lods
insl
jg
sbbb
cmp
xchg
mov
inc
rclb
add
imul
imul
mov
icebp
mov
inc
jb
aam
insl
push
sub
mov
outsb
xor
mov
mov
ljmp
ret
jbe
sub
sub
jb
xchg
mov
xlat
push
mov
fiadds
hlt
mov
cmp
sti
sub
fmuls
pop
test
jb
mov
cmc
jge
sub
loop
mov
fists
push
sbb
data16
jmp
aam
hlt
push
sub
push
cwtl
pop
rolb
jnp
int3
imul
xchg
movsl
dec
fadds
mov
jne
or
dec
ja
cwtl
notl
insb
rcll
ds
cli
cmp
rorl
nop
mov
aad
dec
das
cmc
bound
add
repz
mov
sar
cmc
mulb
push
mov
sbb
pop
mov
lahf
push
and
sbb
mov
imul
cltd
sahf
fwait
pop
pop
lret
lret
aad
dec
ljmp
xor
fsubl
mov
inc
popf
das
sub
jno
add
inc
ret
sbb
lock
cld
imul
dec
mov
enter
movsb
adc
stos
adcb
cmp
pop
mov
repz
imul
ja
mov
sti
xchg
dec
bound
sub
sub
ficompl
dec
ja
mov
or
insb
shrl
je
jmp
inc
lret
mov
addr16
out
shrl
ljmp
mov
fmull
lods
mov
cmp
js
sbb
mov
push
inc
jne
dec
xchg
adc
jle
insl
push
push
ss
mulb
pop
cmp
push
add
mov
pop
add
push
cmpsb
test
xor
fidivs
shl
sub
pop
dec
pop
adc
or
mov
pop
ss
stc
adc
mov
fsubs
iret
sbb
outsl
xor
in
push
xor
xor
dec
jecxz
push
outsb
pop
sbb
push
js
inc
enter
cli
inc
shrl
dec
mov
fidivrs
pop
hlt
mov
pop
sbb
sbb
roll
lods
mov
into
xchg
ds
lea
and
jmp
lahf
rcr
pop
cs
pop
mov
cmc
mov
fldl
shlb
jno
cmp
pop
imul
les
jecxz
shl
cmp
push
std
cmp
dec
frstor
test
shlb
sbb
mov
mov
jmp
dec
test
xor
mov
add
pop
add
stos
orl
sub
inc
add
mov
add
mov
repz
aam
jmp
mov
aam
inc
pop
mov
dec
outsl
adc
push
je
jnp
test
mov
dec
cwtl
cmp
les
call
and
mov
sbb
out
hlt
cli
fldenv
xor
aam
adc
int3
sub
pop
dec
stos
dec
add
pop
fwait
outsb
xchg
fisubs
mov
out
adc
jp
cmpb
pop
pop
orl
jecxz
jnp
sti
mov
iret
ror
push
pop
pop
pop
outsb
sarl
pop
hlt
inc
jp
outsb
fs
push
adcl
repz
lret
mov
xor
mov
imul
lea
dec
ds
xchg
aam
in
xlat
sti
jp
sarl
jl
xchg
xlat
les
sbb
cltd
in
cltd
fs
mov
xchg
out
jl
cltd
push
mov
mov
push
jbe
or
mov
inc
data16
jnp
cmp
mov
shr
or
int
ror
fstps
pop
cli
bound
push
jg
jae
js
lds
cmpsl
fucomip
stc
icebp
add
or
cmp
dec
hlt
lret
or
pushf
clc
sbb
adc
sbb
out
sbb
or
push
je
xor
mov
dec
sbb
lret
cmc
es
rcll
push
push
pushf
dec
sbb
sub
in
push
fcompl
pop
ljmp
push
add
sbbl
mov
es
and
push
xchg
shrl
adc
cmp
mov
lock
popf
sub
shlb
xchg
aam
push
cli
push
rcll
dec
inc
pop
out
xor
or
fldl
aas
loopne
xlat
jl
jle
sbb
in
push
mov
dec
inc
mov
sub
cmp
mov
push
test
adc
call
btr
jns
ja
mov
push
sub
shll
push
js
jne
int3
std
ja
xor
mov
fcomi
ret
lock
cli
mov
jmp
mov
popf
lret
test
out
gs
scas
jecxz
jmp
out
mov
and
sti
faddp
hlt
pop
mov
jnp
les
dec
xchg
dec
sahf
stos
fdivs
sub
mov
repnz
movsb
or
ljmp
dec
jp
xchg
rolb
jb
outsb
ss
rcll
jns
stc
cmpsb
repnz
hlt
fwait
outsl
repz
ficoml
outsl
push
adc
stos
inc
cmp
xchg
pop
repnz
sahf
outsl
popf
les
outsb
xlat
add
sbb
std
mov
mov
jge
jl
xor
out
jle
das
jne
pop
push
shl
das
lahf
and
add
stos
subb
dec
jbe
pop
cmp
cmp
sahf
push
cmp
jne
push
push
aaa
push
pop
mov
in
femms
pop
nop
mov
adc
mov
arpl
popf
sti
addr16
sub
ret
aam
pop
int3
pushf
data16
cmc
and
insl
repnz
push
insl
aas
fucomi
dec
stos
negl
rcll
mov
mov
cli
adc
movsl
in
pop
in
cltd
jle
jge
repz
fmul
mov
scas
jno
es
ljmp
and
int
xor
cmp
ror
sub
cmpb
lret
rcll
in
jo
and
mov
aam
fimuls
and
push
repz
cmp
adcb
dec
sub
je
out
lods
pop
inc
mov
cmp
dec
sbb
xor
imul
pop
add
or
out
and
mov
out
sbb
mov
fldpi
shl
adc
jns
movsl
cwtl
or
cmp
xor
ficoml
pop
mov
imul
dec
stc
push
xor
outsl
cmp
iret
shll
sub
aad
andl
dec
xchg
adcb
pop
rcrl
iret
xlat
lahf
nop
cmp
loop
repz
xor
outsl
pop
or
jnp
xchg
rol
add
ds
or
pop
cld
or
or
loope
mov
loopne
out
idivl
js
cmp
sbb
push
nop
adc
push
xlat
loope
pushl
pop
loope
call
xchg
sbb
mov
fidivl
xlat
or
pop
movsl
pop
cld
cwtl
ja
cmp
aas
mov
ret
adc
xchg
jp
lods
cld
push
adc
mov
add
pop
inc
stos
mov
push
lret
pop
sbb
mov
push
rorl
pop
pop
lea
mov
mov
sub
ret
pop
mov
cli
pop
jmp
push
adc
out
xchg
cmp
pushf
mov
xchg
movsb
fsubl
les
jbe
jnp
adc
dec
pop
or
aaa
adc
jbe
das
test
stc
fwait
pop
insb
mov
test
xor
scas
sub
dec
mov
sbb
adc
ds
call
js
dec
xchg
mov
mov
divb
and
cmp
push
les
xchg
and
lahf
cmp
or
lret
xor
pop
push
add
adc
shl
jmp
inc
push
push
cld
test
movsl
hlt
xchg
dec
jle
push
mov
fs
push
lods
cmp
mov
fs
push
mov
xchg
iret
adc
insb
or
mov
fstp
out
mov
and
scas
xlat
mov
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
pop
dec
popf
loope
push
jg
jae
js
push
ja
sub
xor
and
jno
push
mov
decb
ja
cwtl
insb
fidivrl
aam
mov
push
xchg
push
in
enter
pushf
lcall
hlt
loopne
ficompl
mov
fistl
dec
jbe
pop
push
dec
arpl
insl
xchg
inc
or
stos
imul
pop
pop
sub
sbb
pop
bnd
fsubp
mov
gs
or
inc
pop
roll
pop
sbb
xchg
cmp
mov
dec
cmc
mov
jge
stos
mov
lea
mov
add
fwait
les
mov
xor
cmp
jmp
mov
sahf
jae
insl
pop
popf
jno
dec
leave
dec
xchg
fists
jge
push
pop
jmp
cmpsl
dec
sbb
insb
clc
add
push
or
outsl
sub
test
test
aaa
jecxz
unpcklps
aaa
or
adc
or
pushf
xchg
jnp
jae
ret
xor
inc
es
add
nop
sbbl
jge
cmpsb
add
cmp
xchg
call
push
sarl
cmp
movsb
dec
xor
out
push
push
and
mov
cmp
mov
sbb
xor
lret
out
push
pushf
sub
repz
cmp
ss
es
jp
inc
bnd
scas
inc
and
test
dec
std
fistps
xchg
out
fcoml
mov
test
imul
and
jne
xchg
mov
loopne
outsl
adc
jle
and
xor
xchg
int
fimull
aas
fstpt
mov
xchg
sub
add
pop
iret
inc
or
xor
mov
jmp
sub
inc
in
pop
and
jp
sub
into
aaa
repnz
jmp
pushl
pop
arpl
mov
lods
pop
pushf
shrl
mov
mov
sub
imul
shlb
out
inc
cwtl
stos
push
sbbb
movsl
lea
cli
or
or
outsb
inc
outsb
jns
js
out
imul
jb
inc
out
cwtl
fistl
insl
add
cmpb
loop
iret
nop
push
mov
cwtl
mov
inc
pop
mov
push
push
xlat
pop
xchg
mov
pop
test
lret
das
pusha
int
fs
push
push
test
pop
shlb
push
rorb
inc
push
bound
insb
enter
mov
push
ja
ds
pop
mov
ljmp
push
xchg
push
loop
adc
and
jl
mov
mov
lds
dec
mov
movsb
into
mov
sti
or
testb
xor
fildl
mov
cmpsl
lcall
and
and
fisttpl
or
fdivr
pop
out
mov
popf
xchg
lods
in
or
xchg
xchg
jg
scas
cmp
in
popa
in
ljmp
mov
loop
mov
sbb
imul
outsb
sub
mov
cmp
call
ss
subb
jg
lahf
or
mov
popa
dec
push
into
xor
jno
fcomps
mov
das
pop
mov
into
pop
xor
dec
or
mov
lret
rorl
push
inc
cwtl
xlat
xchg
dec
dec
push
loop
lret
mov
scas
fcoms
xchg
mov
mov
cmc
cli
xor
xor
cmp
mov
jge
pop
xor
mov
scas
xorb
lds
pop
enter
jns
sub
testb
std
das
jecxz
scas
ja
jnp
mov
dec
add
xor
and
push
test
dec
mov
or
js
and
add
mov
inc
out
hlt
cld
das
pop
or
mov
rcll
pop
push
sub
imul
inc
inc
push
or
adc
in
mov
test
test
loope
lahf
and
xor
mov
adc
push
dec
jnp
test
xchg
push
hlt
mov
xor
xlat
sub
xor
sub
lcall
lret
xor
jp
inc
push
push
or
push
lret
jp
mov
sub
out
xor
xchg
pushf
jg
test
adc
pop
sub
xchg
test
in
mov
lods
mov
xchg
jg
mov
data16
add
and
mov
push
mov
jbe
sbb
iret
ja
mov
jmp
mov
mov
xor
xor
jmp
lret
ds
fcmovnb
pushl
push
rcrb
jl
js
or
jecxz
push
movsb
fstpt
jno
sub
push
pop
inc
mov
cmpsl
mov
addb
jp
loope
mov
push
pop
xor
sar
sub
popa
dec
jg
pop
mov
rclb
ljmp
pushf
and
push
or
js
inc
sbb
popa
sbb
dec
bsf
jle
iret
test
add
sbb
inc
into
stos
addl
push
ljmp
aad
jg
mov
idivl
or
movl
sbb
and
push
push
xor
ret
pop
das
jmp
clc
cld
inc
movb
push
fidivrl
daa
inc
loope
sarb
dec
inc
sahf
pop
push
fstl
testb
pop
fnstenv
sub
pop
in
adc
lret
sbb
aad
outsb
pop
push
lods
xchg
icebp
fwait
add
jbe
das
xor
bound
adc
icebp
jbe
dec
mov
pop
mov
cmp
add
test
mov
sub
lds
insb
roll
add
outsb
push
dec
aas
movsl
adc
rcl
jl
xchg
test
ja
pop
and
scas
jae
cmp
shll
cmp
iret
or
into
push
xchg
jle
push
jne
mov
push
and
movsl
mov
call
sub
xlat
sahf
xor
fsubs
stos
fdivrl
add
loopne
test
scas
das
jmp
mov
xchg
scas
inc
ljmp
xor
pop
pop
xor
nop
mov
cld
adc
pushf
lock
ds
test
pop
xchg
std
in
subb
jo
ror
sbb
dec
xchg
mov
jb
les
jae
js
lea
inc
je
imul
lret
pop
repz
push
and
add
pop
adc
iret
mov
and
sub
xchg
lock
out
lods
xchg
or
sbb
xchg
dec
jne
dec
loopne
jae
es
mov
push
sub
inc
flds
xchg
cmp
enter
mov
mov
xchg
mov
out
ret
out
ret
cmp
mov
sti
dec
test
cmpsl
mov
mov
push
pop
sub
ret
or
xchg
jge
loopne
into
imul
js
lret
cmpsb
imul
sub
add
xchg
mov
push
dec
leave
int3
lcall
mov
pop
inc
sbb
or
xchg
jl
mov
add
and
lea
or
sub
rolb
xchg
imull
push
add
jb
push
cwtl
lret
scas
xchg
popa
ljmp
xor
hlt
and
pop
jg
mov
dec
test
out
std
jb
xchg
push
mov
stc
push
rcr
ljmp
leave
or
insb
pop
ds
add
push
testl
inc
jmp
xor
sahf
lret
inc
cwtl
sbb
xor
xor
punpckhdq
fldt
mov
lock
dec
add
fnstcw
sti
fisubrl
jo
xchg
push
lea
fstl
or
fs
sahf
cmp
ffree
nop
cmp
ljmp
adc
dec
push
pop
lds
data16
bound
sub
clc
xchg
mov
sbb
xchg
cmp
xchg
pop
or
int
xor
sahf
test
cmp
mulb
cmp
cmc
arpl
push
outsb
push
stc
popf
adc
sub
adc
add
mov
popa
push
push
aad
add
or
cwtl
stos
stc
pop
pop
inc
xchg
pop
arpl
mov
xor
in
dec
or
cmp
push
inc
cmpsl
cmp
cld
jg
cmpsb
sbb
lock
adc
je
inc
pushf
je
stos
je
rcrb
mov
test
jno
add
shll
xor
xchg
jge
add
cmp
dec
out
in
sbb
fnstsw
push
iret
jge
mov
mov
mov
lea
and
mov
mov
pop
sub
push
fs
clc
movsl
popa
pop
pop
sbb
push
or
xchg
dec
outsb
cmp
in
popa
or
fildl
out
enter
lods
inc
enter
jmp
test
add
add
imul
mov
mov
sub
jmp
cmp
xlat
enter
int3
sub
add
adc
jae
js
jb
adc
jns
pop
mov
mov
and
stos
xchg
mov
ja
add
popf
sub
iret
dec
int3
frstor
ret
shrb
xchg
out
pop
test
mov
stos
fldenv
adc
mov
pop
pushf
inc
frstpm(287
push
daa
stc
cmc
bound
push
pop
cli
mov
shrb
call
mov
inc
push
xorl
mov
sahf
add
lcall
int3
imul
xchg
add
sti
jl
dec
shrl
sub
out
mov
roll
daa
or
clc
mov
lock
and
std
inc
bound
popa
fistl
adc
mov
mov
sub
push
inc
stos
fldl
add
adc
cld
xor
mov
add
adc
cltd
rorl
sbb
pop
sbb
filds
adc
lret
inc
lds
inc
add
movsb
test
xor
cmpsb
cmp
repnz
sarb
add
cmc
lcall
repz
mov
adc
xchg
or
cs
pop
mov
cltd
stos
cmpsl
jecxz
int
mov
mov
xor
ss
out
push
out
repnz
gs
cmc
lahf
repz
lcall
jne
sbb
mulb
pop
and
mov
test
sbb
cmp
xor
mov
mov
pop
clc
int
and
inc
mov
mov
je
ss
cltd
aaa
addr16
jno
ret
insb
xlat
lock
jecxz
lock
inc
xchg
or
pop
int
jecxz
xor
sbb
insb
mov
jg
inc
jp
dec
mov
repnz
jns
enter
enter
fisttps
add
dec
aam
mov
inc
mov
push
xchg
stos
sahf
icebp
add
sub
adc
fists
test
repnz
addb
xor
in
shrb
sti
lcall
repnz
dec
call
mov
dec
sti
daa
mov
cmp
push
jne
addr16
loopne
imul
mov
xorb
mov
cmpsl
lock
ja
jp
iret
mov
leave
rolb
jg
std
fs
pop
sbb
mov
mov
mov
sbb
aad
or
sbb
iret
pop
out
je
outsb
lea
adc
pusha
cmp
xchg
sbb
sti
xchg
call
out
push
sub
inc
call
add
insl
inc
pop
out
loop
pop
int3
aaa
cld
cwtl
std
pop
jg
push
pop
inc
inc
cmp
arpl
jp
xchg
xor
or
popa
mov
add
fnstsw
out
addl
and
inc
dec
push
mov
int3
and
jg
jp
ror
add
sbb
int3
aas
xor
dec
add
xlat
cmp
into
mov
sbb
jmp
sahf
push
jns
xor
push
xor
push
into
and
pop
sbb
test
pushf
filds
ja
cmp
out
outsb
mov
jp
xor
push
xor
xchg
mov
repz
rcrb
shll
stos
aad
mov
test
lret
int3
sub
adc
or
fs
sbb
cmp
addr16
fisubrs
add
pop
testb
jns
nop
fwait
es
adc
xor
mov
cltd
ficoml
or
jno
xchg
insb
add
add
inc
mov
xchg
dec
leave
movsl
or
cmova
lea
add
dec
push
sbb
call
jne
xor
xchg
add
dec
sahf
hlt
and
stos
sub
movb
pop
mov
arpl
push
push
adc
mov
add
xlat
aaa
in
mov
push
subb
mov
aaa
mov
repnz
sub
push
in
mov
push
stos
jle
lahf
mov
xor
add
jae
and
stos
inc
lea
jns
sbb
loopne
mov
jp
jb
pop
sbb
jbe
push
inc
in
sbb
adc
fnstenv
add
lock
mov
ds
movsl
jp
and
fstpt
scas
gs
mulb
dec
enter
nop
and
fimull
xchg
add
add
sbb
add
add
ror
lret
leave
lds
je
into
or
js
jl
js
add
pop
pop
sub
fcomp
and
out
lods
pushf
in
push
leave
pop
add
sub
push
mov
jno
pop
cmpsb
lock
and
xor
notb
out
mov
jno
inc
out
ja
sbb
xchg
push
insb
inc
call
adc
fnstenv
sbb
data16
ja
sarb
push
jmp
dec
aas
fiaddl
out
popa
pop
mov
push
or
nop
std
ss
addr16
cs
inc
stc
imul
mov
mov
inc
lea
push
add
sub
adc
sub
loope
sahf
push
leave
mov
out
jg
jp
in
xchg
mov
ss
cmpsl
shll
or
sub
fistl
cmpsl
mov
hlt
pusha
out
mov
adc
out
inc
or
out
stos
adc
sbb
in
addr16
mov
fs
sub
mov
push
and
fucomi
push
aaa
lods
push
jb
xchg
jne
mov
and
inc
push
pop
push
sub
cmc
or
mov
jbe
sub
add
jecxz
lret
cmp
ss
and
cld
dec
pop
lret
fmul
movsl
ss
pusha
int
or
cld
jne
sahf
jmp
mov
push
pop
lock
jno
push
jno
cmpsl
addr16
cmp
cs
jae
push
out
xor
cmp
xlat
inc
cli
iret
mov
and
into
push
inc
in
cmp
daa
repz
jnp
je
cmpsb
inc
or
adc
inc
ds
mov
stos
aad
aas
cmpsl
mov
sbb
in
pop
mov
mov
inc
mov
push
movsl
into
mov
lret
push
mov
jno
mov
ja
ret
sarb
sub
std
sbb
inc
xchg
jle
cltd
das
out
faddp
and
add
mov
inc
pop
xchg
mov
ja
aaa
movsb
popf
std
les
ds
lret
cli
jecxz
lret
cltd
in
aaa
push
lcall
add
int
push
pop
cltd
inc
sbb
add
into
div
pop
xor
iret
push
jne
dec
push
ret
pop
lret
sahf
adc
dec
fdivrs
movsb
dec
test
adc
sbb
mov
stos
pushf
into
mov
les
xchg
lahf
mov
je
dec
fwait
rorb
mov
and
sbb
sbbb
cmp
adc
xor
push
fs
dec
call
and
lods
in
pop
js
mov
lods
xchg
sub
dec
sbb
aaa
pop
ss
inc
test
mov
rolb
jbe
dec
je
sbb
ss
das
mov
xchg
stos
sub
jp
xor
cmp
fisttpl
and
mul
xchg
or
inc
sub
mov
sti
mov
mov
imul
out
fcmovnbe
push
in
enter
hlt
inc
push
testb
push
or
mov
add
dec
sub
xchg
xchg
jge
repz
aam
sarb
inc
cmp
loope
mov
and
inc
out
sub
bound
shlb
lcall
and
cmpsl
fcoms
push
mov
jge
mov
outsb
adc
add
xchg
push
outsb
mov
xchg
cmp
sub
test
arpl
pop
jae
test
mov
jno
or
jne
bound
lcall
pop
mov
dec
jae,pt
out
xchg
scas
adc
ret
idivl
cs
pop
push
mov
cmp
sti
push
int
jle
inc
add
clc
mulb
cmp
int3
in
cwtl
add
xchg
cmc
sub
mov
or
push
mov
pop
or
cwtl
adc
sub
mov
mov
xor
or
pop
loopne
scas
imul
fisubs
sarb
jne
cli
imul
adc
insb
mov
mov
out
repz
in
stos
lods
or
cmc
ret
fsub
sbbl
enter
or
or
push
jge
cmp
and
mov
fdiv
ret
popa
mov
dec
inc
pop
stc
sbb
jmp
mov
sahf
dec
cmp
call
pop
lahf
add
sub
shl
lret
push
stos
loop
dec
loop
sti
das
aas
fsubrs
roll
cmp
ret
xchg
jmp
ficompl
or
lret
xor
mov
aam
ja
dec
mov
dec
pop
out
popf
mov
xor
jmp
rcl
leave
aad
rcr
or
cmp
add
jg
jae
js
pop
jp
call
out
imul
cmp
testl
jle
es
lea
inc
imul
arpl
cld
jns
aad
dec
cmp
mov
cmp
dec
jae
push
xchg
movsl
adc
pop
jo
scas
mov
in
mov
adc
mov
hlt
xchg
dec
pop
scas
mov
jl
adc
int3
nop
xchg
or
shrl
stos
daa
lods
sub
cmp
imul
and
popa
xchg
mov
push
sub
movsb
daa
andl
xor
jae
dec
xchg
popa
push
mov
pop
rolb
pop
mov
sahf
xchg
scas
movsl
mov
mov
in
pop
into
popa
sbbb
idivl
inc
outsb
bound
dec
sbb
repz
iret
jno
ret
lret
shll
xchg
add
push
cmp
daa
and
stc
into
imul
dec
jmp
cmp
xchg
jnp
push
inc
int
add
adc
loopne
lods
out
ljmp
mov
push
sbb
jb
pop
add
rol
sub
mov
int
xor
fcoms
sbb
cmp
and
shll
add
psrlw
mov
mov
jbe
sbb
loopne
dec
jo
cmc
aad
int3
sbb
sub
jo
or
popa
dec
dec
ret
or
sar
adc
push
call
mov
fbld
pop
add
imul
arpl
fnstsw
jne
fisubs
push
repnz
shll
jb
mov
inc
mov
and
lods
cltd
lds
js
outsb
fisubrl
sbb
adc
pop
and
or
adc
mov
jecxz
enter
fidivrs
stc
jnp
out
mov
sbb
dec
aam
je
mov
outsb
push
xchg
fcomip
popa
add
aad
scas
lods
shlb
insb
lods
pop
fisttpll
rcll
cmp
add
mov
inc
add
ds
rorl
mov
xchg
cltd
adc
pop
fistpll
mov
adc
das
pop
aas
sahf
ds
test
daa
iret
add
xor
xchg
cltd
imul
xchg
addl
jbe
fimuls
shrb
and
push
push
dec
add
cs
dec
inc
xchg
into
or
pop
imul
and
fsubrs
aad
int
stc
cmp
les
inc
pop
jbe
push
mov
leave
xor
es
cmpsl
movsl
mov
xchg
data16
jg
sar
dec
mov
mov
pop
pushf
je
and
shr
out
enter
xor
mov
inc
or
in
js
dec
jg
cmp
jle
jno
scas
out
push
mov
clc
pop
lcall
mov
adcb
je
sahf
adc
xor
out
sub
sub
push
fdivs
pop
cmp
fistl
fwait
push
nop
push
add
icebp
iret
mov
pop
sub
dec
inc
mov
fidivs
cmpsl
push
mov
pushf
fld
sbb
xchg
fimuls
clc
in
adc
fiadds
cmpsl
inc
add
push
mov
xchg
lret
mov
or
cmp
inc
pop
aam
movsl
sub
cltd
pop
ret
in
dec
sbb
aam
push
loop
inc
add
rorl
subb
push
in
inc
outsl
faddl
jp
mov
push
cmp
pop
pop
movsl
xor
sahf
jmp
xchg
push
ds
insl
shrl
push
lods
sbb
push
jne
ficompl
pop
cwtl
data16
push
scas
and
and
pop
pushl
into
jbe
adc
ret
ds
outsb
and
sbb
jne
push
sub
or
push
and
scas
cmp
aaa
pushl
jecxz
sbb
sbb
inc
pop
mov
cmp
ljmp
pusha
inc
bound
inc
shlb
aaa
inc
mov
mov
xchg
mov
insb
dec
icebp
leave
sbb
sbb
lret
push
sbb
inc
or
cmp
lret
out
stos
in
cmp
shrl
ds
and
js
xchg
jnp
out
fildl
je
jne
jge
or
xchg
cmp
arpl
test
cmp
or
subb
and
js
insb
jne
add
push
bound
arpl
mov
scas
push
out
mov
inc
xchg
jb
xor
rcr
in
xor
jmp
sarl
int3
int3
int3
rcl
aas
in
mov
push
daa
cmp
jae
js
ljmp
sbb
ljmp
sub
mov
push
adc
mov
fstpt
dec
ret
xor
and
push
lret
faddl
bound
lds
add
jno
fdiv
mov
popa
dec
push
call
and
imul
nop
xor
and
mov
in
int
push
lahf
movsb
and
pop
mov
lahf
xchg
jbe
lods
adc
ss
xchg
mov
mov
aaa
out
aam
ret
push
xchg
or
add
int
or
ficomps
inc
inc
xor
pop
pop
xchg
outsb
popf
std
mull
hlt
or
loopne
scas
mov
mov
inc
movsl
mov
das
pop
insb
xchg
rorl
hlt
mov
std
mov
dec
aad
xchg
pop
sub
rclb
arpl
test
push
fldcw
mov
or
and
iret
hlt
mov
cld
add
pop
popf
lods
mov
add
call
jle
push
mov
in
cmpsb
sbb
out
iret
not
jb
ljmp
nop
out
inc
aaa
gs
fdivl
xorb
rol
loope
push
nop
jg
sbb
mov
lods
dec
sub
jle
fisttpll
jg
push
xlat
mov
push
xlat
iret
and
notl
jge
mov
jbe
cwtl
push
add
pop
aad
lds
pusha
add
xorl
add
test
lods
inc
xchg
lods
pop
xchg
lcall
movsb
fcmovb
mov
fistps
movsl
daa
lods
sub
push
and
pop
hlt
stc
fisttps
push
rclb
sbb
fildl
sub
jnp
cmp
push
dec
dec
jp
lods
lea
leave
lods
cmp
insb
push
rolb
imul
inc
mov
addb
mov
xchg
xchg
inc
mov
sub
ficoml
xchg
cld
cmpsl
xor
inc
scas
data16
or
popf
sub
xor
pop
xor
data16
dec
adc
int3
lea
pop
stc
xor
xchg
adc
xchg
ja
jne
loop
add
push
xchg
cmp
imul
mov
cmp
pushf
add
sbb
popa
sahf
je
test
repnz
test
or
popw
mov
shlb
mov
lods
aas
mov
sti
jne
lahf
imul
sub
xchg
jbe
xchg
mov
cmp
mov
dec
movsl
psrlq
inc
mov
enter
fmuls
sbb
dec
inc
cld
sub
notl
sub
push
mov
add
jp
fstps
mov
xchg
and
xor
xor
pop
cs
xor
cmp
or
adc
iret
popa
sub
push
scas
add
mov
out
jne
jmp
lea
pop
adc
aad
dec
dec
adc
rclb
mov
push
mov
lods
xor
mov
stos
xlat
jne
xor
push
movsb
das
stc
xor
inc
test
or
addr16
mov
mov
sbb
fmuls
cmp
pop
cli
fcoml
pop
push
pop
sbb
add
out
push
outsl
das
push
add
sub
xchg
and
gs
aad
pusha
dec
push
cltd
mov
jnp
sbb
sub
pop
into
cmp
pushf
hlt
sub
icebp
cmp
sbb
pop
jns
in
dec
inc
call
and
adc
inc
or
fiaddl
stos
dec
or
pop
dec
sub
loope
rcll
xor
jmp
mov
leave
inc
test
push
movsl
stos
bound
fwait
int
divl
movsb
and
mov
lea
jno
push
lock
jae
jmp
push
or
inc
jbe
scas
pop
push
xor
sub
bound
push
sub
xchg
push
xlat
and
mov
jnp
rolb
cwtl
loopne
push
loopne
jl
sub
cmp
rcll
cs
lds
jne
mov
clc
inc
jbe
ss
stos
les
arpl
jle
popa
pop
inc
adc
xor
mov
jbe
arpl
ja
pop
dec
pop
xchg
pop
xchg
jmp
das
mov
xchg
cwtl
aad
dec
lcall
cmpsb
stos
loop
shll
add
mov
ljmp
ret
sub
repnz
jge
mov
or
ds
xlat
lret
rorl
xchg
jns
lcall
jl
js
in
push
lds
push
shrb
rolb
loop
mov
sub
dec
cltd
fiadds
iret
mov
mov
fistpll
sub
push
add
fwait
add
mov
arpl
cmpsl
aaa
push
add
dec
mov
mov
sub
mov
cmc
xchg
mov
imul
imul
je
or
out
lcall
js
pop
cmp
cmp
pop
ficomps
shlb
bnd
iret
adc
cmp
je
cmp
outsl
inc
adc
ret
ss
ljmp
inc
movsb
jbe
mov
enter
bound
jns
push
inc
xchg
mov
in
xchg
in
mov
sub
xchg
jns
inc
xor
sub
push
enter
enter
pop
push
add
pop
mov
adc
jb
stos
aas
repnz
dec
shrl
add
hlt
fldl
cwtl
push
mov
inc
popf
fucom
sti
pop
cmpsb
or
imul
push
clc
sub
mov
sti
gs
pop
xchg
lds
jb
fstl
jg
in
dec
sbb
rclb
movsl
add
rcrl
imul
sub
mov
sarl
das
xor
cmp
jno
clc
aas
fildll
cmc
fnsave
int3
ret
ss
fs
cmp
and
addb
mov
or
iret
mov
call
mov
xchg
fstpl
enter
lcall
rcll
les
or
pop
dec
fisubs
shlb
stos
cwtl
ja
mov
pushl
inc
out
mov
test
inc
test
aam
loope
fnstenv
cld
nop
add
je
jno
aam
mov
push
into
xchg
sub
aad
pop
xor
leave
pushf
lods
fdivp
lods
aas
cmc
and
lods
xchg
push
sub
pusha
mov
mov
mov
push
popf
push
ret
out
push
or
mov
iret
mov
push
pop
jb
aaa
pop
adc
lret
mov
sti
sub
pop
push
or
cltd
loope
mov
add
jmp
repnz
out
xor
ret
into
sbb
sub
enter
pop
adc
mov
sub
out
rcrl
cmpl
out
mov
stos
and
fstl
mov
and
cmc
psubq
sub
push
xchg
lret
repz
add
mov
xchg
xor
cmp
outsl
fisubl
and
cltd
jecxz
subl
mov
xor
or
push
fidivrs
rcrb
cmp
icebp
xchg
mov
sbb
mov
xor
lahf
dec
or
or
ret
call
and
inc
lock
jmp
lret
sbb
cmp
mov
in
adc
add
push
mov
mov
push
lret
stc
pop
lret
mov
sbb
mov
in
mov
and
fsubrl
mov
or
mov
inc
dec
mov
mov
and
mov
xchg
fstps
push
cli
mov
aad
sub
cmp
int
enter
leave
xchg
dec
icebp
pop
xchg
in
pop
loope
sbb
sbb
and
inc
push
shrl
outsl
imul
ljmp
mov
testb
mov
dec
xlat
outsb
psllw
jno
sub
xor
mov
in
pop
push
mov
jb
mov
out
std
adc
test
ss
or
bound
pop
scas
dec
je
pop
into
inc
xor
cmp
mov
enter
adc
and
jne
inc
pushf
mov
lock
inc
ds
jne
mov
mov
lahf
jge
sahf
mov
outsb
cmp
push
xchg
sub
test
dec
ficoms
push
fwait
loop
or
push
dec
jmp
popa
test
mov
movsb
adc
gs
dec
adc
out
loop
sahf
outsl
add
and
in
dec
outsl
pushf
dec
testb
mov
lret
xchg
popl
in
pop
loop
int
push
rol
in
in
push
ja
mov
mov
inc
jbe
popa
xchg
shlb
lret
leave
std
jne
pushf
nop
or
frstor
jle
cmc
pusha
sub
jns
inc
rorb
sub
pop
adc
mov
mov
add
imul
mov
mov
sub
cmp
ja
jmp
ror
sarl
vpsubusw
sbb
std
pop
je
js
jl
js
add
xchg
mov
xlat
loop
out
imul
mov
and
fldl2e
hlt
clc
pop
mov
xchg
movsl
ja
fsubrs
cltd
scas
jle
orb
into
xchg
push
xchg
movsl
test
in
stc
out
cltd
fiadds
push
sub
push
scas
sbb
mov
int
nop
push
fldt
pushf
cmp
lds
jno
dec
sbb
or
test
adc
xchg
pop
push
sbb
and
mov
or
nop
inc
test
xor
popf
lcall
xchg
mov
xor
and
adc
out
jnp
fisttpl
cmp
pushl
sbb
jmp
xor
xor
mov
pop
ror
adc
clc
or
into
inc
enter
push
sbb
jecxz
data16
pusha
das
xor
bound
in
stos
cltd
stos
mov
add
test
mov
in
testl
movsl
and
test
test
jo
into
cs
lcall
daa
pop
movsb
push
pop
frstor
pop
pop
mov
sbb
mov
xchg
push
mov
and
jle
out
aas
mov
loope
jmp
inc
in
cmp
pop
mov
sub
mov
rorb
cld
adc
idivl
push
stos
ds
shl
shr
xlat
ds
rcll
iret
push
jl
pusha
push
mov
popa
shll
mov
sub
ljmp
mov
into
das
dec
push
mov
loope
inc
xchg
jecxz
cmp
mov
dec
imul
mov
mov
fiadds
orl
xchg
adc
cmp
push
add
xchg
test
mov
fldl
sbb
loope
arpl
xor
stc
add
pop
xchg
call
mov
push
inc
pop
add
mov
imul
mov
rclb
rcl
xor
add
add
or
out
adc
xor
mov
sub
sub
out
push
stos
jae
and
outsb
fbld
scas
popa
mov
push
xlat
repz
mov
fcmovnb
dec
pop
stc
enter
pop
or
lds
xchg
retw
sbb
inc
dec
fiadds
rcrl
mov
inc
popa
jecxz
inc
aas
xlat
adc
push
inc
sub
fistpll
jl
pusha
mov
insb
call
and
push
out
pop
test
add
inc
lret
dec
mov
lahf
lret
cmpsb
cmp
mov
aad
xchg
out
adc
adc
orl
dec
sarb
jmp
xchg
scas
fisttpl
fldt
das
inc
pop
sbb
fucomi
dec
and
cld
fadds
cmpsb
divl
clc
inc
addb
dec
lods
pop
inc
outsl
pop
jb
add
cli
hlt
xor
js
shrb
jmp
jno
jmp
pusha
je
cmp
scas
push
sbb
lea
lds
daa
cmp
sub
bound
cmp
mov
mov
jnp
adc
add
cmp
pop
dec
jl
cmpsl
test
leave
insl
mov
cmc
mov
repz
int3
pushw
inc
xchg
push
mov
sahf
in
mov
in
jae
and
or
out
dec
cld
popa
stos
fcoms
imul
rolb
pushf
movsl
movsb
mov
dec
lods
sti
mov
mov
inc
and
cli
int
shr
sub
push
jl
lock
andb
leave
jl
flds
nop
pop
jnp
mov
jge
sahf
ja
sub
lea
xchg
std
jl
aas
sub
fisttpl
lahf
insb
cmc
sti
sub
mov
mov
add
mov
cmp
mov
bound
pop
stc
sbb
pusha
sbb
pop
xchg
ret
xor
in
bnd
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
xor
adcl
add
mov
mov
movl
movl
mov
push
movl
movl
mov
movl
cmp
movl
je
dec
mov
adcl
xor
addl
xor
subl
lea
subl
xor
movl
cmp
jne
movl
jmp
mov
mov
xor
add
mov
and
mov
mov
adcl
xor
add
sbbl
mov
mov
or
mov
orl
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
sbb
push
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
push
pushl
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
sub
lea
push
pushl
not
push
lea
inc
inc
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
pop
subl
xor
adcl
call
cmpl
jne
xor
movl
inc
jmp
sub
movl
adc
movl
lea
xor
mov
lea
mov
subl
mov
mov
sub
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
cmp
movzbl
mov
mov
je
sbb
mov
xor
xorl
add
orl
imul
mov
movl
jmp
xor
or
add
add
mov
mov
incl
xor
add
inc
mov
mov
subl
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movzwl
mov
mov
mov
mov
movl
movl
cmp
jne
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
mov
and
movl
mov
mov
sub
mov
movzbl
add
mov
sub
lea
and
mov
xorl
mov
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
or
sub
or
mov
mov
sbbl
xor
sub
mov
xor
andl
xor
add
adcl
add
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movzwl
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
decl
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
movl
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzbl
xor
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzbl
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbbl
mov
not
mov
sbbl
mov
andl
mov
mov
subl
mov
movzwl
xorl
add
mov
mov
mov
andl
xor
addl
add
cmp
movl
jne
mov
adc
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
xor
xor
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
xor
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
or
mov
adcl
add
movl
mov
and
mov
push
push
sbbl
test
je
adcl
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
imul
mov
subl
add
sub
mov
xorl
mov
xchg
sub
sub
xor
add
mov
mov
mov
xorl
mov
mov
subl
xor
xor
addl
add
mov
mov
mov
je
mov
xor
add
cmp
movl
jne
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
je
pushl
pushl
addl
call
movzwl
sbb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
notl
movl
push
movl
mov
mov
movl
push
mov
movzwl
mov
cmp
je
mov
or
mov
mov
add
mov
andl
xor
adcl
add
cmp
movl
je
neg
mov
xor
xor
or
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
neg
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
push
sbbl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
andl
mov
mov
orl
xor
andl
movl
movl
xorl
add
movl
jmp
cmp
jne
mov
mov
movl
mov
movl
mov
notl
mov
mov
movl
mov
movl
jmp
movl
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
mov
sub
orl
push
xor
or
add
mov
mov
movl
add
andl
push
orl
call
incl
movl
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
orl
imul
mov
mov
cmp
movl
jne
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
movzbl
or
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
movl
sub
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
pushl
pop
inc
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
mov
orl
xor
xor
mov
add
movzwl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
movb
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
movl
adc
mov
mov
orl
push
sbbl
xor
mov
add
movl
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
mov
mov
add
xor
movl
cmp
jne
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
js
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
add
add
add
add
add
add
add
xchg
cmpsb
add
xchg
cwtl
add
add
add
dec
insb
pop
push
imul
arpl
ja
jp
gs
dec
je
ja
popa
push
jno
jae
dec
dec
jae
dec
push
push
push
push
fs
insl
push
inc
dec
push
insl
inc
push
dec
data16
jne
imul
jno
arpl
dec
dec
push
imul
push
imul
imul
dec
js
pop
popa
push
jbe
dec
jns
insl
pop
inc
dec
outsb
inc
add
add
and
add
add
push
add
add
add
add
add
add
add
mov
push
add
rclb
dec
add
rcll
add
addr16
insb
bound
popa
push
jns
je,pn
jo
aas
inc
jo
dec
popa
insl
gs
js
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
inc
push
inc
dec
dec
cmp
add
add
add
cld
pop
add
add
add
add
add
add
add
add
add
inc
push
add
lcall
add
pop
add
mov
add
pop
add
dec
imul
add
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
outsl
jbe
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
add
popa
addr16
imul
dec
arpl
add
popa
je
push
je
je
jae
imul
pop
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
imul
push
arpl
push
add
push
add
je
popa
jb
outsb
je
sgdtl
je
insb
addr16
je
insl
add
scas
add
fs
arpl
inc
add
push
push
jb
outsl
jb
add
imul
popa
jae
push
add
xchg
add
je
outsl
jns
popa
jb
je
add
add
outsb
imul
push
arpl
add
push
imul
movsb
add
pop
outsl
outsl
insl
gs
aaa
add
popa
jb
jo
gs
jne
inc
add
inc
add
je
outsl
arpl
add
cwtl
add
inc
imul
jae
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
jbe
push
imul
mov
push
imul
ja
add
ja
arpl
add
xchg
add
je
outsl
jns
outsb
jne
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jne
insb
push
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
roll
jbe
jo
imul
inc
add
je
popa
jb
outsb
je
sti
add
dec
outsb
push
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
hlt
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
je
gs
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
outsl
outsb
imul
push
jb
je
cmp
inc
insb
addr16
je
insl
dec
outsb
je
addl
outsb
jae
jb
dec
outsb
jne
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
outsl
js
js
add
add
outsb
fs
gs
popa
addr16
add
jl
push
push
outsb
gs
outsl
jo
jo
add
inc
outsl
jo
push
arpl
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
pop
add
je
jns
je
insl
dec
outsb
jne
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
push
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
push
imul
popa
jae
inc
js
add
outsb
add
je
imul
outsb
addr16
add
xchg
inc
gs
insb
addr16
jb
arpl
cmp
inc
push
insb
addr16
jne
je
outsb
add
stos
add
fs
imul
add
jo
imul
arpl
add
fs
arpl
insb
gs
je
jb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
gs
imul
js
push
add
xor
push
gs
popa
jb
je
outsl
jae
icebp
add
jae
dec
gs
popa
addr16
add
mov
fs
je
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
mov
inc
jb
ja
arpl
inc
js
add
push
gs
push
add
imul
imul
add
jae
jb
outsb
je
push
add
push
add
je
jb
jo
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
jo
popa
je
push
arpl
add
fs
popa
jb
je
out
add
imul
jae
addr16
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
inc
gs
insb
addr16
jb
arpl
add
push
imul
popa
jae
inc
add
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
add
imul
jae
addr16
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
and
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
jb
inc
gs
imul
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
imul
add
je
outsl
jns
jne
jae
jb
bound
inc
gs
outsl
jo
imul
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
je
imul
add
gs
je
inc
imul
jb
insl
inc
add
call
outsb
dec
arpl
add
jecxz
inc
imul
outsl
ja
js
add
add
jae
popa
addr16
outsl
js
add
insb
imul
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
outsl
arpl
push
arpl
add
jbe
insb
imul
je
add
insb
push
imul
inc
gs
outsb
jne
je
je
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
ja
outsb
imul
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
insl
push
outsl
inc
push
add
add
jne
inc
push
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
outsb
imul
push
outsl
imul
inc
push
xor
cs
insb
add
mov
gs
jbe
outsb
je
add
add
gs
je
dec
popa
imul
sbb
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
pusha
add
outsb
fs
imul
gs
add
jecxz
inc
jb
popa
je
push
imul
inc
gs
imul
imul
jns
add
fiaddl
dec
jae
popa
insb
imul
addr16
jb
jne
add
outsl
add
outsb
fs
gs
jne
arpl
add
add
inc
popa
fs
outsl
fs
je
add
mov
inc
jb
inc
imul
dec
push
dec
add
push
gs
imul
jne
push
imul
add
je
push
dec
outsb
outsw
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
push
insb
gs
js
mov
push
gs
outsl
jbe
inc
imul
jns
add
dec
add
je
jns
je
insl
inc
imul
jns
add
inc
imul
je
imul
push
gs
push
inc
outsl
outsb
je
js
add
out
add
je
imul
mov
inc
outsl
insl
jo
jb
inc
imul
ja
inc
insb
jne
push
inc
jne
data16
add
int3
add
jae
jb
jo
outsb
push
add
jo
outsb
insb
outsl
arpl
add
gs
jae
dec
jne
gs
add
add
fs
imul
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
add
je
push
dec
outsl
arpl
add
inc
gs
imul
popa
je
add
into
add
jae
jb
outsb
inc
add
adc
dec
outsl
arpl
push
imul
imul
jne
arpl
js
add
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
xchg
add
je
outsl
insl
insl
dec
outsl
fs
push
je
je
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
js
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
sbb
gs
imul
gs
add
inc
gs
imul
popa
je
add
xchg
add
je
outsl
insl
insl
inc
outsl
outsb
imul
dec
jae
popa
fs
jb
je
push
je
add
imul
jne
arpl
add
add
je
outsl
insl
insl
push
je
je
add
imul
push
push
jb
outsl
jb
je
add
add
gs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
mov
inc
gs
je
insl
dec
popa
insl
gs
add
rolb
je
arpl
push
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
jae
popa
arpl
add
jae
add
jb
outsb
je
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xor
arpl
je
add
cli
add
jb
outsl
imul
out
jae
jb
outsl
insb
insb
add
pop
pop
arpl
insl
outsl
fs
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
jb
je
add
sahf
add
jae
bound
gs
add
jge
data16
add
lds
jo
imul
add
insb
outsl
ja
jb
stos
add
ja
imul
data16
je
add
pop
pop
arpl
inc
imul
jae
jb
outsb
je
add
add
outsl
insb
outsl
ja
jb
and
pop
gs
je
add
jns
je
insl
add
call
js
je
add
je
insb
add
iret
add
outsb
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
and
arpl
jae
outsb
add
add
jb
outsl
jne
add
ja
jae
bound
add
arpl
imul
add
gs
insb
add
outsb
jne
add
add
jb
push
add
jb
outsl
insb
add
movsb
add
ja
imul
add
jb
jb
outsl
jb
add
outsl
ja
add
push
add
imul
pop
pop
addr16
popa
imul
and
arpl
jo
add
xchg
add
popa
insb
jo
popa
add
add
jae
jb
outsb
je
add
dec
push
push
inc
push
push
cs
insb
add
xchg
inc
jb
popa
je
inc
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
imul
add
arpl
push
imul
inc
gs
jne
jb
outsb
je
bound
arpl
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
arpl
outsb
add
insb
je
add
push
gs
dec
gs
imul
inc
push
je
dec
push
add
popf
add
gs
je
inc
outsl
outsb
je
outsb
imul
aad
push
gs
imul
add
inc
outsl
arpl
add
add
insb
insb
push
outsb
add
add
je
imul
addr16
js
add
add
jae
outsl
jb
inc
inc
add
popa
je
dec
popa
je
push
push
push
gs
bound
je
jb
arpl
add
inc
gs
popa
jo
outsl
fs
testb
gs
je
gs
push
outsl
fs
inc
gs
outsb
inc
outsl
js
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
movl
inc
inc
add
sahf
add
gs
je
inc
outsl
outsb
je
add
push
popa
addr16
add
je
dec
inc
imul
fs
outsl
outsb
je
gs
jne
arpl
add
xchg
add
outsl
inc
push
add
mov
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jns
jne
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
arpl
jae
bound
cli
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
dec
inc
imul
popa
jb
push
popa
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
rolb
outsb
fs
popa
je
add
popa
je
inc
imul
imul
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
je
outsb
insb
add
push
imul
inc
gs
bound
arpl
add
dec
xor
cs
insb
add
pop
jp
jp
push
and
add
insl
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
push
inc
add
inc
add
inc
add
insl
inc
add
insl
inc
add
inc
add
inc
add
insl
inc
add
test
pushf
clc
bound
add
inc
add
inc
add
inc
add
inc
add
imul
stos
imul
insl
inc
add
test
outsb
imul
sbb
orl
call
inc
add
addr16
mov
jne
mov
incb
mov
imul
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
imul
push
dec
insb
popa
cmp
push
pop
lds
add
pop
imul
movsb
xor
inc
add
add
add
add
push
add
insb
add
inc
add
dec
add
add
inc
add
dec
add
add
add
inc
add
push
add
add
insb
add
imul
add
add
imul
cli
jne
xor
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
inc
add
mov
int3
push
inc
add
dec
jae
imul
imul
in
adc
addr16
push
pop
jb
inc
inc
dec
imul
dec
inc
dec
imul
add
push
dec
inc
outsb
jno
inc
dec
jno
imul
je
jo
dec
insb
popa
inc
inc
ja
inc
add
push
push
dec
popa
pop
addr16
popa
outsb
pop
insb
inc
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
push
push
adc
hlt
sub
add
adc
adcb
add
push
adc
repnz
add
or
add
pusha
adc
fldenv
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
sbb
adc
js
adc
jns
adc
les
ljmp
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
adc
lds
add
adc
xchg
adc
pop
adc
xlat
push
adc
jno
inc
add
inc
add
inc
add
inc
add
mov
inc
add
ja
add
sbb
add
add
adc
scas
xor
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
fs
adc
lods
inc
adc
pop
push
adc
xchg
push
adc
mov
adc
repz
adc
enter
icebp
mov
inc
add
mov
inc
add
movsb
inc
add
movsb
inc
add
xor
pop
push
cmp
push
add
inc
cmp
inc
xor
add
push
xor
dec
push
push
xor
push
inc
xor
pop
xor
add
dec
pop
push
xor
pop
xor
push
dec
aaa
cmp
dec
push
pop
cmp
dec
add
xor
pop
inc
xor
aaa
cmp
dec
add
inc
pop
pop
inc
xor
inc
add
xor
xor
dec
inc
aaa
aaa
add
aaa
pop
push
pop
xor
pop
inc
dec
dec
inc
add
dec
aaa
pop
inc
dec
inc
pop
xor
pop
inc
xor
dec
xor
pop
xor
cmp
dec
dec
cmp
xor
cmp
pop
xor
push
pop
xor
cmp
cmp
push
inc
pop
push
dec
ss
dec
inc
add
xor
push
inc
inc
pop
push
add
pop
xor
pop
push
add
xor
pop
push
dec
pop
pop
inc
dec
inc
add
aaa
pop
push
push
dec
aaa
pop
xor
push
xor
xor
inc
inc
push
dec
pop
push
dec
inc
add
push
pop
dec
dec
aaa
pop
dec
add
pop
pop
dec
inc
pop
push
add
ss
aaa
inc
xor
xor
pop
dec
push
xor
add
pop
pop
push
inc
dec
aaa
inc
pop
push
push
add
dec
add
add
xor
push
add
add
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
add
add
dec
add
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
dec
add
add
dec
add
add
add
add
push
add
add
inc
add
inc
add
add
xor
add
add
add
add
add
pop
add
add
xor
add
push
add
add
add
add
cmp
pop
add
add
xor
push
add
add
add
push
add
xor
pop
add
add
add
dec
add
push
add
add
add
push
add
add
xor
dec
add
inc
add
dec
add
xor
inc
add
add
add
xor
dec
add
aaa
add
inc
add
dec
add
xor
inc
add
add
dec
add
inc
add
inc
add
push
add
add
add
inc
push
jne
pop
lods
adc
xor
int3
adc
add
push
cmp
outsl
inc
outsb
gs
fs
gs
outsb
jne
dec
push
imul
pop
jo
dec
jno
inc
js
jno
push
bound
