push
mov
sub
addl
push
orl
xor
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
movzbl
push
orl
call
cmp
movl
jle
xor
jmp
movl
jmp
push
lea
orl
push
subl
push
call
movl
cmp
movl
je
andl
xor
movl
inc
movl
jmp
jmp
push
decl
push
push
call
movl
cmp
jne
movl
xor
movl
jmp
movl
jmp
xorl
call
test
movl
jne
andl
xor
movl
jmp
sub
movl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
mov
lea
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
add
movl
mov
mov
movl
lea
mov
cmpl
movl
jne
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
xor
add
mov
mov
sbbl
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jb
add
mov
mov
or
xor
add
mov
xor
mov
mov
mov
negl
mov
sbbl
mov
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
push
push
call
xor
add
dec
mov
jmp
movl
movzwl
sub
movl
mov
adc
mov
mov
mov
movl
sbbl
movl
sub
movl
mov
xor
add
movl
mov
jmp
sub
mov
negl
xor
or
mov
lea
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
mov
negl
xor
orl
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
lea
cmp
ja
mov
xor
mov
lea
push
mov
xor
lea
push
mov
pushl
call
jmp
mov
mov
mov
mov
mov
sub
xor
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
cmpl
jne
cmpl
je
mov
xor
add
mov
xor
sub
sbb
xor
xor
mov
cltd
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
mov
mov
cmp
jne
mov
xor
add
push
push
pushl
pushl
call
push
push
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
push
mov
add
push
lea
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
push
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
push
mov
add
push
lea
push
call
mov
mov
pop
leave
ret
push
mov
xor
andl
pop
ret
push
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
push
orl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
add
xor
add
addl
xor
and
mov
xor
sub
movl
sbb
subl
xor
xor
xor
xor
adcl
add
adc
mov
movl
mov
mov
movzbl
mov
mov
cmp
movl
jne
mov
movl
cmp
je
mov
movl
cmp
movl
je
mov
xor
add
jmp
int3
xor
push
fs
je
orl
push
jecxz
jnp
jnp
stos
cwtl
jnp
rol
mov
fcmovnb
cmc
fucomi
ror
mov
int3
sar
incb
lret
or
enter
mov
not
lods
out
ror
aam
ret
ret
mov
idiv
or
leave
aam
or
add
in
icebp
sarl
jmp
out
aam
ret
neg
fcomip
xlat
add
enter
mov
call
mov
idivb
push
add
pop
ljmp
les
lock
mov
xlat
jecxz
in
in
jecxz
icebp
stc
call
or
repz
loop
lods
shrl
mov
out
loope
shl
rcr
cli
or
in
fldz
add
mov
mov
mov
aad
lock
add
lret
fsubr
out
cli
add
out
int
repnz
out
aad
aad
cmc
int3
mov
ffree
stc
sti
clc
fadd
push
call
xlat
loope
scas
aad
in
leave
lock
lret
ret
into
icebp
stc
fcmovu
rcl
fcmovu
out
out
in
loopne
jmp
jmp
lret
mov
repnz
add
loope
add
faddp
lret
scas
fmul
mov
imul
shr
rcl
into
int3
rcr
in
std
stc
ffreep
xlat
loopne
in
lret
push
fcom
rcr
in
int
out
mov
shl
clc
mov
ret
fucom
icebp
pop
rcr
out
or
int3
jecxz
fdiv
in
int
repnz
divb
icebp
loop
add
out
repnz
cli
ljmp
mov
mov
mov
cld
loope
add
loope
idivb
add
mov
leave
int3
ljmp
mov
mov
ror
out
or
out
enter
stos
ror
icebp
out
out
mov
mov
push
fisttps
jmp
out
lret
aam
hlt
cli
mov
aam
mov
shl
lock
add
fcmovne
loopne
in
ror
call
repnz
fcom
in
rcr
stc
icebp
cld
icebp
rol
fcomip
repz
stos
xlat
xlat
int
in
out
mov
enter
fsub
or
or
in
in
mov
lock
into
fcompp
fmul
xlat
fildl
rcl
lret
fucom
enter
lret
scas
mov
hlt
sarl
out
loop
fcomi
hlt
ror
mov
ret
in
iret
mov
mov
ret
fsubp
hlt
mov
mov
fmull
add
cmc
sti
in
out
or
ret
lods
shrb
ret
in
jmp
add
ljmp
out
shrb
leave
iret
aad
aad
hlt
ljmp
ret
add
cli
loopne
into
loope
fxch
mov
rcl
icebp
sti
cld
mov
int
jecxz
call
jmp
lock
loopne
in
ffree
loope
mov
out
rol
jmp
call
mov
stc
aad
in
lock
aam
repz
xlat
hlt
fucomi
jmp
fsubr
in
lods
mov
lret
ror
in
enter
pop
fstpt
decl
add
fisttpll
aad
loope
in
mov
jmp
loope
fistpll
fucom
std
call
in
mov
ret
xlat
enter
push
into
call
lock
testl
ljmp
loopne
shr
iret
cli
enter
push
pop
cld
into
add
ffree
loope
fld1
jmp
test
out
hlt
les
fcomp
f2xm1
ljmp
add
shll
div
mov
int3
out
test
cld
in
mov
std
add
clc
iret
push
or
call
int
lods
hlt
ljmp
test
add
ffree
sar
jmp
loope
jecxz
jmp
test
out
sti
divb
out
div
out
mov
icebp
pop
sar
add
in
iret
test
mov
out
ret
fmul
enter
fmul
ret
loop
faddl
shl
pop
loop
stc
add
call
cmc
aam
xlat
mov
mov
int
loopne
lock
or
aad
ljmp
mov
int3
iret
repnz
enter
loop
sar
hlt
loop
add
lret
mov
hlt
lods
mov
fidivrs
mov
loope
hlt
testl
stos
shl
enter
mov
jmp
ret
add
add
inc
std
sar
fisttpll
cli
rcl
loope
aad
aam
sarl
div
int
in
ret
clc
add
enter
leave
add
loop
iret
lret
mov
iret
mov
in
fdivrs
add
std
jmp
call
sti
lret
int
into
cli
mov
lock
fxch
sar
add
in
mov
mov
mov
in
add
fld
add
jmp
fsubp
or
sarb
out
sti
aad
cld
shr
imul
mov
jmp
rorb
out
iret
fucomi
repz
scas
lock
shl
shr
jmp
clc
aam
not
out
add
stc
cmc
sti
cld
call
mov
loop
mov
std
mov
sti
call
out
add
enter
mov
fcomi
cli
divl
mov
sar
pop
jmp
scas
repz
lods
repz
ror
mov
mov
icebp
rcl
mov
mov
rcr
or
cli
in
cld
add
jmp
mov
out
neg
int3
add
sti
jecxz
faddp
loopne
cli
fmulp
or
leave
mov
imul
repnz
enter
ljmp
shl
add
call
lret
fadd
shr
lock
loopne
repnz
shr
cld
sarb
sti
lret
fsub
into
out
or
in
into
int
cli
cmc
mov
mov
fcomi
out
mov
fcmovnb
shr
int3
mov
div
mov
fucomp
clc
out
shl
cli
std
dec
jmp
ror
loopne
out
jmp
mov
mov
add
loopne
lret
adc
into
in
call
mov
div
iret
in
lret
repnz
in
ret
or
fcmovu
call
in
shr
mov
xlat
clc
fidivrl
xlat
rorl
cli
jmp
out
in
mov
rcr
mov
lret
int
mov
loopne
sarb
aam
or
int
int
out
mov
icebp
jmp
shlb
idiv
fcmove
or
int
enter
out
jecxz
mov
aad
cli
sar
iret
fldl
icebp
shl
fcoms
incl
ror
aad
mov
rcl
ret
fldpi
hlt
aad
clc
add
hlt
int3
add
loope
leave
mov
mov
mov
fnstsw
cli
repz
or
out
fsubrp
adc
stc
ljmp
call
fsubrp
clc
out
cli
mov
add
lret
jmp
fucomip
iret
call
mov
out
cmc
out
into
enter
add
cli
cmc
pop
loop
or
or
rcll
in
repz
hlt
rol
aad
int
jmp
int3
not
sti
sar
aad
aad
or
jmp
cli
test
in
mov
leave
mov
iret
call
stc
in
icebp
fincstp
or
out
loope
add
fmul
scas
iret
out
mov
loope
test
fadd
in
mov
aam
mov
div
push
clc
mul
or
fcmovu
loope
jmp
leave
icebp
jmp
mov
ljmp
neg
xlat
clc
fcmovb
or
into
shl
loopne
out
cmc
out
mov
mov
rcl
ror
add
call
jecxz
mov
into
jmp
xlat
jecxz
into
loopne
fstp
icebp
cli
hlt
aam
ret
repz
imul
int3
ret
hlt
iret
mov
hlt
icebp
rol
std
xlat
clc
lock
in
lds
out
loop
shl
divl
into
in
ljmp
add
fiadds
les
mov
not
loope
aam
iret
clc
add
pop
jecxz
cli
add
cli
add
lret
in
jmp
lret
lret
lods
mov
lret
incl
fucom
faddp
call
into
in
lret
loopne
cmc
mov
mov
mov
leave
icebp
sar
loope
iret
sar
add
fcmovne
in
int
leave
rcl
int
mov
pushl
add
mov
repnz
jecxz
fimuls
ljmp
mov
shrl
mov
fndisi(8087
aad
fldl
lds
stos
mov
loopne
jmp
shl
mov
icebp
in
mov
add
jecxz
lret
fimuls
add
shll
out
iret
fldpi
fcmovu
rcl
leave
hlt
hlt
add
int3
loopne
xlat
aam
or
adc
stos
test
ljmp
mov
mov
out
add
jmp
lods
lods
int3
in
in
stc
out
std
mov
push
into
push
in
icebp
test
in
or
out
int
mov
neg
mov
idivb
ljmp
leave
jmp
shl
ljmp
mov
lock
test
movl
test
lret
fdiv
mov
add
fnstcw
ffree
mov
jmp
ror
out
ljmp
fucom
loop
cli
jmp
mov
scas
cmc
aam
xlat
sarl
ret
push
jecxz
out
aad
lret
iret
loopne
shrl
jmp
in
in
mov
rcl
sti
ljmp
jecxz
in
aad
jmp
add
mov
rol
repz
mov
into
lock
mov
add
jmp
into
out
iret
mov
out
not
loop
sti
aad
mov
mov
aad
lret
iret
push
ljmp
lock
in
mov
add
shl
push
sar
or
aad
jecxz
or
test
mov
ret
mov
idivb
stc
faddp
or
aad
in
ljmp
repz
vpslld
fstpt
icebp
pop
rcl
add
fcmovnb
ljmp
shl
repz
mov
imul
sarl
aam
or
decl
fisttps
rcr
loopne
loopne
clc
in
clc
shr
mov
mov
pop
movb
out
shr
ffree
sarl
in
in
call
loope
loope
or
out
push
add
lods
xlat
mov
mov
shr
sar
mov
add
push
add
fdivr
push
dec
loop
ljmp
mov
mov
jmp
cld
mov
repz
fsub
jecxz
or
in
int3
mov
lods
out
cmc
mul
add
ret
mov
fstp
or
jmp
stos
jmp
out
repz
mov
call
rcl
xlat
jmp
loope
filds
int3
mov
int3
in
shll
fsubr
lret
out
add
idiv
loope
add
fxch
int
in
lods
fcmovnbe
in
jmp
shl
out
mov
in
or
add
add
mov
iret
call
fmul
aad
mov
lret
loope
cld
adc
fdiv
mov
in
aad
shl
mov
rcl
add
sti
cld
call
or
fxch
ret
in
out
scas
mov
mov
in
ljmp
lock
jmp
ret
cmc
ffreep
pop
cmc
fcmove
ljmp
mov
shl
call
add
mov
fcmovne
sti
in
leave
mov
ror
fdivr
mov
out
mov
out
add
lret
in
std
lret
into
shr
in
repnz
out
int
leave
clc
mov
cli
out
jecxz
mov
mov
leave
fiadds
les
rcr
fstpt
fstp
idivb
mov
or
ljmp
sarl
repz
add
ret
add
ljmp
lret
fcmovne
cmc
mov
rcr
mov
fdivrp
sti
fucom
aad
fld
shl
mov
out
shl
hlt
sti
std
fcomip
fdivrp
fcmovu
add
sti
cmc
loopne
or
call
lret
ljmp
out
aad
cli
stc
ret
leave
mov
add
jmp
rcl
mov
fucomi
clc
int
int3
in
cmc
loopne
clc
fnstsw
jmp
add
psubusb
bswap
loop
ffree
loop
fadd
shl
call
shr
in
in
lock
ret
jecxz
or
fsub
fdivrs
rcl
in
enter
mov
aad
push
rol
roll
pinsrw
jecxz
xlat
out
lods
mov
iret
cmc
cmc
aam
xlat
shl
in
mov
into
or
shlb
aam
mov
add
out
int3
add
cld
add
out
jmp
loope
cmc
bnd
mov
loop
int3
stc
mov
cmc
jmp
in
mov
shr
mov
cld
mov
stc
clc
rcl
movl
mov
test
lods
mov
fucomi
fsubr
aad
mov
repnz
hlt
iret
in
jecxz
or
icebp
fucom
ljmp
out
stc
hlt
lock
rol
add
clc
xlat
clc
out
cli
repz
mov
lods
into
idivl
in
iret
jmp
in
out
fxch
add
rol
repz
out
loopne
clc
icebp
jmp
icebp
vcvtdq2pd
fdivr
jecxz
or
fsub
repz
repnz
out
aam
stc
into
faddl
mov
div
or
or
or
into
in
idivl
out
iret
fcmovbe
les
ljmp
loope
sti
fsubp
add
enter
ljmp
aam
mov
rol
ret
add
or
in
in
in
into
sarl
aam
repnz
add
aad
rorl
std
call
repz
rcr
loop
rcl
repz
ror
ror
sarl
lret
add
add
ret
mov
jecxz
mov
shll
cmc
stc
out
out
add
sti
aad
add
enter
out
test
ret
int
lock
cld
jmp
hlt
int3
fdiv
in
fcmovnbe
fdivrp
fsub
or
repz
iret
mov
clc
out
shr
enter
rcl
repz
fiadds
loop
fxch
push
out
enter
mov
aam
int3
icebp
filds
into
ret
mov
push
in
clc
or
lret
in
shl
out
cli
ror
ljmp
add
xlat
std
fdivr
push
in
int3
cli
enter
into
out
iret
hlt
out
lret
in
out
in
mov
cli
repz
aad
frndint
or
into
out
in
enter
icebp
xlat
iret
mov
rolb
into
fld
dec
lret
cli
out
or
in
out
shl
jecxz
mov
mov
into
iret
jecxz
add
mov
lret
aam
out
or
hlt
scas
mov
mov
cmc
jecxz
int
fisttps
rol
clc
testb
jmp
repz
repz
mov
rolb
fadd
cli
testb
in
lret
add
fmulp
mov
loop
mov
aad
stc
int
push
or
loop
ljmp
scas
shr
shl
mov
enter
push
aam
ret
jmp
fsubp
leave
in
fadd
out
in
fadd
loopne
in
fldl2e
icebp
enter
clc
mov
aad
out
jmp
ret
loop
repnz
aam
in
in
cmc
aad
ret
hlt
int
or
cld
loope
add
iret
lret
shlb
lock
fmulp
cmc
std
add
shl
or
sti
pop
add
or
cmpsb
jecxz
out
out
mov
out
icebp
iret
jecxz
filds
out
loope
in
loopne
ljmp
scas
fsubrl
vpmaxsw
incl
repnz
add
lret
add
out
into
mov
xlat
mov
xlat
div
shl
sarl
or
in
fadd
loop
lock
test
test
fmull
jecxz
cli
jmp
cld
scas
icebp
mov
out
repz
mov
ret
out
mov
fdivr
hlt
stc
fxam
int
lods
mov
xlat
mov
fchs
mov
aam
idivl
hlt
in
loope
int
not
mov
divl
into
mov
out
cli
add
enter
ljmp
out
jmp
mov
jecxz
ljmp
xlat
add
fnclex
icebp
rol
aad
icebp
mov
fdivs
aam
call
add
movb
jecxz
in
or
lods
faddp
shr
ror
loopne
jmp
int3
ljmp
vcvtpd2dq
cmc
xlat
fucom
faddl
jmp
lret
mov
out
stc
out
cld
leave
in
ljmp
filds
fadd
movl
ffreep
mov
icebp
mov
mov
fsub
icebp
mov
cld
shl
fcmovb
std
or
out
std
in
lret
in
lods
repnz
xlat
idivl
in
mov
out
in
shll
in
cli
mov
fdiv
jmp
lock
add
fiadds
jmp
enter
out
rol
out
mul
out
cmc
ror
aad
mov
in
mov
cld
faddl
loope
sti
lods
ret
mov
add
rcr
add
add
cli
loope
add
ret
ljmp
jmp
repnz
shl
aad
cmc
stc
out
fldl
in
hlt
fucomp
in
aad
mov
mov
fdivr
in
lret
aam
cli
std
add
std
fcomi
xlat
add
mov
mov
out
int3
lret
in
enter
in
mov
faddl
add
in
out
jecxz
in
shr
repz
mov
aad
repnz
or
jmp
lret
lret
mov
bnd
imul
leave
mov
ret
ljmp
int
rcl
loopne
in
lods
sarb
mov
hlt
ret
aad
add
or
into
mov
shlb
lock
int
shl
mov
sti
fmulp
clc
or
or
out
out
fsubr
lret
cli
aam
repnz
out
idiv
mul
stc
or
or
or
imul
mov
icebp
in
iret
mov
add
int3
in
add
icebp
movl
enter
iret
lock
mov
idiv
fcmovnu
mov
testb
into
out
mov
in
int
add
iret
leave
fsubrl
clc
enter
jmp
ret
add
hlt
mov
add
ffree
jmp
int3
xlat
leave
loopne
xlat
mov
out
cld
clc
loop
mov
out
push
out
in
shr
int3
ret
aam
out
cmc
mov
add
shl
add
add
add
add
mov
out
lret
leave
aad
xlat
int
imul
sti
ret
in
incb
out
add
out
stos
iret
mov
scas
ret
hlt
out
leave
hlt
sti
out
cld
aad
mov
fld
add
loopne
fsubrp
in
repnz
mov
enter
out
mov
mov
push
add
fcmovu
in
out
xlat
call
shr
repnz
mov
xlat
mov
xlat
push
lock
fildl
int3
in
int
iret
mov
int
sti
hlt
ljmp
loop
add
fiaddl
jmp
mov
leave
jecxz
lock
mov
fidivrl
xlat
add
fscale
or
add
in
in
test
ror
leave
mov
div
jmp
fcmovu
mov
std
lock
rorb
pop
aam
ljmp
mov
ror
std
cli
into
jecxz
ret
rolb
jmp
invd
push
add
rol
int
aam
xlat
icebp
mov
icebp
mov
cmc
fmul
out
sti
fadd
pop
shl
cli
lret
clc
stos
ret
vpsadbw
iret
int
fmul
mov
loope
in
fdivr
or
wbinvd
jmp
mov
ret
leave
aad
enter
out
shl
ljmp
add
cmpsl
jmp
movsb
mov
in
in
jmp
clc
mov
loopne
xlat
mov
lret
loop
loopne
rcl
out
loop
into
lock
int
ret
out
jecxz
xlat
lock
call
mov
int3
call
lock
sarl
sti
add
clc
out
mov
jmp
lret
mov
in
repz
icebp
mov
mov
aam
mov
out
in
into
shlb
out
stc
mov
rcl
std
sar
add
jmp
cli
fmul
xlat
loope
in
out
mov
in
lock
cld
in
loopne
out
ffreep
pop
add
add
stos
loopne
mov
shl
jmp
enter
stc
leave
stc
fbstp
ljmp
stc
repnz
in
shlb
jmp
shl
mov
repnz
lret
aam
add
cli
jecxz
lret
shr
loope
ror
mov
lock
sarl
out
add
lret
out
in
mov
mov
mov
into
fld
clc
ret
stc
add
enter
lds
mov
aad
leave
aad
mov
rol
shl
ffreep
out
fmulp
in
in
test
lock
sti
mov
fstp
icebp
mov
add
jmp
hlt
vpaddq
dec
repnz
repz
ror
cli
into
mov
mov
shl
sti
or
in
cli
loop
cli
sarl
mov
fcmovbe
in
into
out
leave
add
pop
fcmovnb
cmc
incb
or
scas
rcr
out
icebp
aam
out
shr
hlt
cld
rol
sarb
or
out
int3
loope
loopne
mov
shl
mov
ljmp
hlt
ret
lock
jmp
xlat
fld
hlt
flds
ret
inc
fsub
rol
test
repnz
iret
in
jmp
repz
mov
iret
mov
cli
sar
add
add
adc
out
int3
out
lods
loope
shr
mov
shr
in
repz
xlat
rol
in
jecxz
sti
hlt
add
out
stos
in
loopne
int3
div
in
aad
leave
shl
sarb
shr
in
or
std
fdiv
or
loopne
shl
call
mov
loopne
sti
xlat
fmul
jmp
or
lret
fsubrp
int3
leave
shr
jmp
clc
mov
shr
shl
shl
fdivr
fucom
adc
shl
shrb
mov
not
out
mov
sti
int3
repz
cld
sti
or
out
std
or
jmp
out
repnz
in
int
neg
mov
in
out
jecxz
fmul
adc
cld
mov
div
mov
shrl
loope
add
cld
fcmove
rol
xlat
ljmp
test
icebp
lret
loope
into
stc
xlat
jmp
rcr
ret
mov
fld
cli
enter
add
jmp
lret
call
in
cld
mov
add
cli
repnz
leave
test
or
mov
int
mov
ljmp
fucomp
pop
fabs
loopne
or
loopne
pop
fmulp
loope
sarb
mov
jmp
cld
rol
test
ror
adc
in
ret
loop
xlat
mov
mov
repnz
add
shl
or
lret
hlt
std
mov
fsubrp
loopne
iret
out
sti
aad
enter
pop
mov
jecxz
fldl
aam
into
cld
jecxz
cmpsb
call
into
icebp
scas
in
icebp
mov
shl
sar
cli
jmp
out
iret
ljmp
mov
hlt
out
lret
mov
add
add
jecxz
cld
sti
cld
or
out
int3
call
mov
fstpt
fldl
xlat
inc
loop
jecxz
testb
jecxz
int
mov
scas
call
fcomi
fsincos
loop
ror
cli
int
in
fmulp
lock
add
in
vpsubsb
in
out
jmp
loope
rolb
aad
ret
out
out
or
fucomip
out
in
rol
cli
xabort
mov
mov
roll
add
out
jmp
mov
iret
lods
hlt
repnz
out
in
in
hlt
fcom
add
ret
mov
or
add
shr
fidivs
cmc
icebp
idiv
cmc
mov
loopne
int3
repnz
mov
or
call
in
mov
in
repnz
in
lods
mov
mov
rcr
loope
mov
push
ret
out
lret
mov
mov
icebp
mov
push
loope
cli
add
in
scas
bnd
lds
add
call
fadds
sti
leave
stc
flds
ljmp
iret
in
jmp
mov
into
repnz
std
int3
loopne
fcomp
jecxz
aad
sti
icebp
int3
icebp
ljmp
lock
fcmovnbe
clc
int3
std
int
rcl
shl
aam
aam
hlt
enter
leave
fsub
into
int3
ror
ljmp
mov
fimull
loop
idiv
dec
fisubrs
rol
mov
mov
sarl
rolb
loop
fchs
add
ffree
not
mov
out
hlt
in
lods
mov
jecxz
in
in
add
add
shl
call
fmulp
mov
loopne
fistpll
add
jecxz
div
aad
add
jmp
pop
mov
loope
loope
scas
int
stc
lret
hlt
sarl
decl
lret
add
fmul
shll
lods
loope
mov
lret
mov
rcl
loopne
aad
jmp
leave
jecxz
fsub
ret
int
ljmp
into
into
iret
sti
repz
rol
loope
mov
rol
fstp
mov
mov
call
in
repnz
add
out
not
call
clc
iret
stos
mov
fucomp
iret
stc
ror
mov
stc
ljmp
ret
fdiv
in
cmc
mul
out
sar
loop
imul
loope
in
enter
div
out
int3
out
loopne
cld
xlat
aam
faddl
mov
out
hlt
fdiv
in
mov
sar
lock
out
out
jmp
add
out
in
xlat
loope
jmp
shl
lock
out
fcomi
mov
stc
jmp
lret
out
mov
in
hlt
ljmp
call
stc
neg
add
fiaddl
lret
stc
in
shr
lock
icebp
mov
sarb
fucomp
jmp
xlat
jecxz
leave
mov
divl
jmp
neg
les
sar
push
out
lds
or
in
fldt
stc
aad
leave
ret
fndisi(8087
hlt
ret
lret
cld
enter
int3
les
cmc
out
lret
cli
mov
stc
add
icebp
shl
or
in
lret
adc
sti
mov
aad
repnz
mov
ret
mov
loopne
in
fcmovnu
jecxz
loope
mov
out
in
les
cli
decb
flds
call
or
int
fcmovbe
repz
fbstp
fadds
loopne
loop
into
in
in
push
ret
ljmp
in
mov
fnstsw
cld
ret
clc
jmp
fsubr
cli
repnz
shl
mov
fnstenv
jmp
ret
hlt
lret
push
lret
clc
call
mov
icebp
mov
fld1
out
push
mov
mov
xlat
out
pop
fimull
in
adc
out
aad
ror
repnz
lret
loope
mul
add
or
loop
jecxz
xlat
out
into
mov
shl
aad
fstpt
mul
fsubrp
mov
out
iret
call
ret
repnz
out
in
jmp
ret
pop
ljmp
stc
fisttpl
call
ror
mov
lock
call
cli
std
add
add
out
mov
out
enter
test
in
std
fucomi
idiv
mov
mov
add
roll
rcr
repnz
mov
int
iret
sarb
ret
mov
fstp
fyl2xp1
lret
adc
rol
mov
ror
in
les
cmc
sar
std
xlat
sti
add
fsubrl
jmp
loopne
cli
hlt
lock
out
hlt
out
cli
rcl
fld1
int3
filds
lret
jmp
xlat
mov
rol
fcom
cmc
mov
mov
lds
out
std
fucomp
out
mov
loope
jecxz
or
out
or
mov
shrb
cmc
jmp
jmp
mov
out
neg
std
in
aad
mov
div
mov
fxch
fdivrs
aad
add
rol
out
jmp
iret
out
iret
int3
in
mov
call
repnz
bnd
fdiv
fsubr
add
dec
mov
loop
out
sti
mov
fcomi
add
sti
fst
stc
or
or
call
test
mov
iret
fldz
mov
or
adc
shrl
xlat
cmc
sti
cmc
stc
mov
incl
cmc
in
stc
fiaddl
push
leave
cmpsl
repz
lods
out
test
sti
mov
dec
push
add
jmp
loopne
out
rcl
lret
iret
stc
iret
in
out
add
out
loop
aam
stc
lret
loop
adc
lock
leave
loop
loopne
cli
sar
cli
repnz
in
fcomp
mov
out
add
fldl
in
loopne
mov
jmp
fldl2t
mov
fucomp
sar
fcmovnbe
push
repz
shl
imul
incl
lds
mov
shr
pop
roll
int3
hlt
loope
enter
out
in
jmp
mov
fptan
int3
hlt
fdivr
enter
rorl
add
add
fcmovnu
clc
rcr
mov
out
call
add
rol
add
lds
icebp
les
mov
in
mov
fsubr
mov
std
fxch
cmc
add
pop
clc
int
jmp
lret
mov
out
int3
mov
add
lock
shl
pop
jecxz
in
sti
or
scas
out
repz
cmc
out
in
ljmp
pop
aad
leave
ljmp
in
out
lock
enter
ljmp
mov
cld
or
ret
mov
cmc
ret
mov
fxch
out
int
sar
jecxz
aam
repnz
repz
not
into
mov
lods
out
lock
hlt
aam
dec
out
aad
mov
cld
aad
cld
loopne
fimuls
or
mov
sarl
mov
cmc
jmp
add
add
xlat
ret
loop
loope
cmpsl
into
mov
sar
cli
int3
sti
ror
sti
iret
fdivrs
add
lret
jmp
out
ljmp
fdivr
fxch
mov
ret
add
loopne
fdivr
jmp
out
mov
in
mov
stc
enter
jecxz
mov
jmp
mov
xor
mov
lea
mov
mov
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
xor
mov
lea
mov
xor
add
imul
mov
mov
mov
mov
jmp
mov
jmp
jmp
mov
pop
leave
ret
push
mov
jmp
in
sbb
in
sub
jnp
cmpsb
mov
jnp
stos
cwtl
jnp
shr
loopne
add
shl
enter
hlt
ror
fnstsw
lods
in
divb
rcr
fdivrs
aad
fmulp
ffreep
fimuls
stc
ret
jmp
in
test
in
repz
repz
pop
out
test
enter
loopne
rol
mov
out
hlt
clc
cmc
into
in
std
lret
out
add
mul
add
pop
aam
std
in
add
repnz
mov
lock
dec
sti
fsub
std
sarl
sti
cli
out
in
imul
in
lock
cld
idivb
cmc
repz
out
fadd
mov
jecxz
out
shr
enter
mov
fucomip
in
repnz
sar
loopne
call
mov
ljmp
cld
shl
sarb
stc
or
cmc
leave
fsubr
adc
in
scas
ljmp
imul
fmulp
in
leave
add
icebp
add
loope
or
fiadds
in
jmp
fucom
sar
aad
sar
out
mov
test
sti
fcmovu
jecxz
xlat
or
fimull
add
xlat
in
jmp
int3
std
jmp
loopne
fdivrp
ljmp
add
mov
ljmp
cli
ljmp
mov
in
jmp
loope
lods
out
loopne
shl
out
fdivrs
sti
hlt
cmc
cli
or
fndisi(8087
clc
in
fdivl
into
call
ljmp
stc
cli
fdivr
in
add
fcoms
out
ror
rol
out
repnz
lret
cli
mov
loopne
sti
in
loopne
fdivr
aad
mul
ljmp
leave
mov
loope
in
divb
lock
cli
loop
faddp
add
sti
incl
or
loope
mul
rcl
mul
call
out
mov
pop
clc
jmp
or
into
int
call
lret
fdivp
mov
clc
loopne
mov
add
les
aad
shl
lods
mov
roll
mov
fiaddl
add
fsub
dec
lods
not
mov
out
shll
repnz
cmc
rcl
jmp
les
out
mov
jmp
aam
fstpt
neg
ret
in
aad
loopne
add
test
out
aam
jmp
aad
out
loop
fld
add
add
jecxz
ret
fcom
lret
aam
icebp
enter
stc
lret
lret
div
fdivp
cli
add
or
push
lret
leave
in
enter
out
shrb
out
mov
mov
add
lret
in
add
int
jmp
out
divl
mov
int3
ljmp
adc
into
ljmp
in
mov
out
clc
sti
add
sar
ret
fcomp
jecxz
icebp
int
mov
shrb
int3
mov
mov
ljmp
stc
enter
out
in
mov
loopne
lret
jmp
loopne
repnz
rcr
loop
pop
loopne
rorl
into
sti
cli
ror
sti
mov
shl
fcomip
mov
jecxz
sti
add
ljmp
rol
fnsave
mov
or
or
shr
in
mov
sti
leave
mov
std
ror
fadd
faddp
std
add
adc
pushl
lods
loope
rol
mov
fxch
fcmovbe
ror
movl
add
or
repz
or
ror
in
repz
cmc
call
add
add
fcmovnu
out
fld
int3
into
int
xlat
jmp
lods
lock
cmc
bnd
mov
mov
sti
iret
fldl
pop
out
ljmp
out
fcmovbe
iret
in
loope
loop
in
loopne
jecxz
aad
loop
into
mov
in
in
sti
aad
call
incl
mov
fcmovnu
sar
mov
repz
iret
lret
shr
lods
int
imul
aam
mov
mov
aam
pop
add
lret
add
loop
scas
int3
lret
aam
fcom
cli
in
cld
mov
idivb
loope
iret
ljmp
out
repz
shl
in
clc
out
clc
mov
loope
into
shl
icebp
add
push
or
jmp
add
loop
in
mov
fucomi
out
ljmp
fdivr
fsubr
pop
cld
mov
add
decb
ljmp
mov
sti
rcl
fldcw
mov
jmp
add
loope
shl
in
mov
ror
icebp
mov
repz
into
ret
ret
shl
xlat
push
ret
in
iret
out
test
repz
mov
cli
enter
in
in
std
xlat
std
clc
in
rcll
leave
shll
mov
mov
jmp
shr
enter
fcom
in
or
lock
jecxz
add
rol
leave
in
icebp
rol
sti
cli
iret
rcr
sar
ret
out
fucomi
loopne
lods
out
loop
out
mov
test
in
lds
icebp
cld
push
pop
fadds
aam
enter
fstp
loop
lret
jmp
std
out
mov
roll
add
add
jmp
loope
repz
cmc
leave
in
out
in
hlt
or
loope
add
jmp
leave
lods
out
mov
xlat
into
call
in
out
fsubp
out
hlt
loope
repz
fst
repz
mov
fxch
int3
fdivr
mov
sti
ret
in
jecxz
cli
fildl
mov
bnd
std
stc
stc
cld
clc
jecxz
hlt
clc
ffreep
lock
out
add
fildl
add
mov
call
shr
leave
add
cmc
out
lock
rolb
ret
loop
fsubr
out
adc
ret
in
repnz
shl
mov
lock
push
aam
aam
icebp
rcl
in
out
out
lret
mov
out
enter
fcmovne
loope
int
add
or
iret
into
lret
shll
in
scas
repz
cmc
sarl
in
push
hlt
fldl
out
or
or
enter
iret
ret
ljmp
mov
aad
cmc
lret
fcmovbe
add
hlt
out
in
add
icebp
loop
ror
aam
in
rcl
cli
call
fidivrl
idiv
out
fisttpl
fsub
fsubp
lret
div
lods
rcl
pushl
int3
mov
add
add
fsubr
aad
out
leave
repnz
repnz
lock
in
mov
loop
jecxz
stc
aad
std
jecxz
cld
mov
mov
int3
mov
in
add
mov
add
cli
into
adc
loope
in
hlt
in
mov
fdiv
lret
clc
mul
xlat
fmul
out
leave
ret
lret
jmp
or
hlt
ror
mov
ror
ror
aam
loop
add
lret
ljmp
lods
ror
ljmp
in
out
cld
jmp
add
jmp
out
inc
jmp
into
loop
out
int
aad
rol
xlat
leave
aad
jecxz
shl
fdivr
or
in
fucomip
in
mov
loopne
sar
aad
mov
add
neg
mov
pop
fucomi
into
out
shr
lret
sti
mov
sar
mov
out
fdivrp
out
xlat
jecxz
fimull
loop
ljmp
int
in
sarb
loope
mov
std
push
or
in
lret
loopne
mov
out
shlb
jmp
fcmovbe
mov
rcl
push
idiv
mov
cmpsl
fucomp
mov
in
jmp
aad
in
fcmovnb
fcmovnb
out
add
add
add
out
int
out
div
ljmp
jecxz
mov
in
enter
call
lods
jmp
hlt
sarl
call
in
jmp
push
or
aad
std
stc
iret
les
int
xlat
mov
in
ljmp
loop
out
loope
pop
call
vcvtpd2dq
int
xlat
sti
lods
mov
cmc
fidivrl
jecxz
enter
fmulp
aad
mov
xabort
std
fmul
jecxz
fsubrp
fstp
in
aam
add
rcr
leave
or
clc
in
ror
loopne
shll
neg
clc
into
sarl
add
or
clc
in
shl
out
repz
mov
mov
clc
int3
incb
add
add
filds
jmp
cld
add
mov
cmc
int
shlb
clc
cmc
in
add
stc
repnz
cli
jmp
aad
or
mov
test
stos
aad
mov
scas
int
xlat
stc
lret
mov
mov
dec
stc
loope
mov
jmp
mov
flds
fcom
mov
cmc
mov
shl
in
mov
mov
sar
clc
mov
rcl
add
jmp
loope
decb
in
mov
lock
lret
lock
mov
out
into
ret
jmp
movl
or
jecxz
mov
ror
shlb
test
mov
add
out
into
leave
loopne
fcmove
lods
in
lock
call
out
sarl
in
rcr
fmuls
out
cli
flds
out
mov
mov
jmp
fcmovnbe
out
lret
lock
mov
or
sar
add
loope
ret
mov
mov
in
mov
ret
jecxz
icebp
flds
add
sti
enter
incl
adc
cmpsb
repnz
repz
mov
enter
mov
fdivrl
ror
cmc
lret
add
fcmovu
repnz
mov
iret
sarb
mov
mov
or
std
jmp
add
lret
in
lret
mov
cli
call
aam
fld
jmp
div
iret
aad
fisttps
add
shl
mov
icebp
in
ljmp
enter
fcom
fcmovnbe
loopne
fldpi
loopne
push
int
add
mov
mov
call
fidivrs
icebp
or
fiaddl
add
pop
cli
sarb
int3
mov
int3
in
clc
neg
fpatan
mov
add
aam
fsub
pop
lret
les
loope
in
mov
call
cli
sti
into
out
jmp
std
repnz
repz
shrb
enter
leave
push
mov
mov
or
out
dec
or
mov
mov
lods
idivl
fmulp
mov
cli
mov
add
add
ljmp
mov
enter
rcr
shl
out
add
rcr
or
pop
or
add
sarb
lods
in
neg
loop
rolb
out
movb
loopne
test
test
aam
mov
mov
call
rorb
icebp
sti
lret
cli
out
loope
mov
scas
lret
mov
int3
dec
repz
enter
fcmovu
fstp
lret
loop
add
int
in
out
shl
out
sar
call
rcl
ror
movl
fisttps
or
fistpll
jmp
aam
lret
hlt
mov
cmc
vmovq
fldl
loop
cld
std
iret
fsubr
leave
loope
cli
out
into
iret
shl
aam
sti
mov
push
icebp
push
add
cmc
fucomp
adc
out
loope
ljmp
mov
enter
stc
mov
jmp
in
push
enter
mov
repnz
fsubr
les
mov
cli
testb
leave
jecxz
jmp
fst
mov
loop
leave
int
aam
enter
shr
ret
push
loop
incl
call
ret
rcl
mov
fcmovnbe
in
mov
inc
rcl
loop
or
add
in
lret
call
aad
loop
repnz
mov
mov
not
jmp
loopne
lret
shrl
enter
shlb
ret
rcl
fcmovu
idiv
jmp
loopne
stos
ffreep
jmp
jmp
cli
mov
in
xlat
mov
div
add
lret
int
lods
in
in
lods
ror
mul
in
not
leave
enter
add
rol
cld
std
fcomi
rcl
in
iret
mov
lret
mov
aam
std
mov
iret
into
fucom
mov
testb
out
scas
vpsubsb
mov
cmc
icebp
push
shl
fstp
imul
ret
ret
out
test
mov
in
repz
int3
cli
shl
neg
mov
stc
add
out
mov
lret
hlt
aam
mov
repnz
in
jecxz
stc
jmp
div
xlat
fsub
fisttpl
loope
loope
out
mov
lds
mov
rol
fstpt
in
or
fdivl
shll
aam
in
neg
sti
in
ret
pop
ljmp
or
mov
ret
fcomi
mov
mov
int3
add
fdivr
jmp
push
rcll
loopne
out
lret
cmc
shll
mov
sti
sar
mov
add
push
fsubr
loop
ljmp
loopne
incb
sarb
fadd
hlt
or
test
mov
clc
jmp
mov
aad
shl
fdivrp
mov
out
icebp
lods
lret
into
in
sar
icebp
in
cli
ret
cmc
loope
icebp
shl
clc
or
repz
int3
mov
mov
in
mov
lock
std
iret
in
mov
add
lret
fstp
sarb
mov
stc
shl
rcl
aam
aad
bnd
fstp
jmp
or
sarl
loopne
shl
jmp
cli
lret
mov
in
sti
loope
push
sti
loopne
fmull
fcmovnbe
add
add
test
cmc
clc
iret
cli
clc
aam
sarl
fadd
cli
ljmp
or
aam
test
mov
ljmp
mov
cli
jecxz
out
loope
jecxz
mov
mov
mov
loop
rol
in
rol
jecxz
lret
faddl
add
out
repnz
lret
icebp
in
mov
in
mov
idiv
fcmovnu
in
aad
jmp
iret
mov
lods
fmul
shr
mov
mov
idiv
fsub
pop
aad
ljmp
scas
jmp
xlat
shl
fcmovnbe
enter
shl
bnd
add
add
fsubp
in
int3
jmp
fisubrs
test
aad
mov
sti
push
in
rcr
add
lret
les
icebp
loopne
ljmp
out
jmp
mov
ffreep
icebp
por
jecxz
out
shrl
stc
loopne
iret
mov
fcmovbe
roll
add
test
shl
out
adc
ret
repnz
jmp
repnz
fxtract
enter
cmc
shl
push
in
faddl
out
std
add
jecxz
call
lods
shr
mov
mov
add
out
rcl
lret
mov
in
scas
loope
lock
jecxz
rcr
mov
aad
add
pop
mov
add
fmul
ret
mov
sti
in
sti
mov
stc
sarb
pop
int
fsubp
or
std
filds
add
pop
add
ror
rol
aad
mov
icebp
stc
int
add
fneni(8087
stc
lret
in
xlat
out
iret
ret
rcr
lods
fcmovbe
aad
iret
fdivr
mov
icebp
sti
std
mul
in
cld
ror
loop
lret
rcl
shl
in
into
into
shr
mov
loope
fcomi
neg
fcmovu
jmp
ret
scas
mov
in
cli
into
clc
shr
xlat
add
add
int3
in
shl
out
or
loopne
cmpsl
out
call
shll
fidivl
loope
push
ret
fdivrp
jecxz
out
lret
shl
hlt
test
repnz
mov
hlt
mov
rcr
sar
into
call
test
ljmp
fsubrp
cmc
mov
mov
leave
aam
clc
in
out
lds
leave
fcmove
int
test
loopne
or
cld
or
in
fnstsw
int3
mov
cli
mov
testl
rcl
int3
jmp
shl
repnz
incl
xlat
loop
fadd
leave
neg
or
out
in
out
call
shrb
mov
repz
mov
std
add
in
fdivr
stos
test
shlb
mov
lret
add
cmc
aad
inc
div
testb
ljmp
mull
loopne
jmp
cld
imul
stc
in
icebp
lret
jecxz
fisttpll
aam
enter
lods
mov
jecxz
sti
mov
mov
mov
fdivp
hlt
lret
enter
add
fsubr
fisubrs
shll
mov
mov
add
out
fidivrl
loop
out
mov
in
fidivrs
fistpll
testb
cld
shlb
int
fsubrp
lock
shl
int3
ret
lret
filds
int
jecxz
int
jmp
out
aam
mov
in
neg
fldl
in
out
loopne
in
icebp
out
ljmp
int3
in
mov
fcmovb
jmp
rol
or
lret
shr
in
out
mov
rcr
aad
in
sarl
repz
fstp
loop
repz
fsubrp
icebp
mov
leave
fmul
mov
fcomip
roll
cld
ret
stc
les
iret
fadd
stc
loop
ljmp
ror
mov
mov
add
enter
lret
or
fidivs
repz
fcmovbe
aad
cmc
in
shl
out
sar
push
fdiv
add
stc
lret
in
fildll
shlb
fiaddl
rcr
add
ret
add
jmp
out
loope
out
pop
loope
lods
repnz
out
mov
jmp
repnz
out
loop
clc
out
psubusb
or
in
fsubr
call
into
mov
leave
shr
rcr
stc
shl
stc
add
jmp
fcmovu
int3
lret
into
ret
xlat
rcr
ror
mov
call
cld
cmc
lock
cli
hlt
mov
jmp
fsubl
cmc
lods
sar
jmp
mov
repz
ljmp
or
or
out
lods
out
repz
out
enter
add
mov
or
sti
add
aam
ljmp
jmp
out
int
clc
shl
mov
std
add
aam
decb
mov
icebp
aad
cmc
out
fmulp
mov
mov
add
loope
sti
or
cld
leave
stc
add
sarb
loop
clc
out
lret
fidivrl
into
push
rol
shl
cld
push
or
loope
mov
lret
mov
int
cmc
aad
icebp
ror
pop
lock
call
ret
mov
lods
out
lret
repnz
in
hlt
int
out
sarl
or
cmc
faddl
std
cld
repz
mov
scas
mov
std
std
mov
xlat
faddl
or
jecxz
jmp
stos
lret
mov
out
cli
neg
stc
xlat
lock
mov
add
xlat
or
clc
or
clc
in
mov
aad
mov
mov
out
loope
rcr
fld
cli
jmp
out
add
enter
out
ljmp
fadd
aam
aad
aad
incl
in
sar
mov
mov
in
in
mov
iret
mov
loope
call
icebp
lret
lret
lret
out
clc
fsubrp
mov
sti
leave
paddsw
lds
test
shl
loop
out
loopne
fcmovnbe
mov
add
ror
out
ret
loop
xlat
imul
test
cli
fmul
iret
sar
xlat
out
lock
jmp
cld
jmp
bnd
ljmp
fsubr
std
loopne
clc
loop
repnz
add
out
mov
sti
lret
sti
cli
mov
in
ffree
mov
add
in
add
jmp
icebp
mov
ljmp
push
les
ret
add
repnz
int3
lds
xlat
repnz
repnz
sti
mov
fcmovnu
or
rol
in
int3
mov
repnz
int3
in
mov
mov
add
pminub
psrad
iret
out
loope
jmp
mov
iret
mov
or
cli
cmc
call
scas
int
cmc
enter
mov
out
repz
loop
hlt
ljmp
call
jmp
call
leave
cmc
enter
cld
xlat
int
flds
ret
repnz
out
add
hlt
out
rcl
shrl
ror
ljmp
add
into
int
loope
loopne
not
loopne
or
ret
mov
into
cli
ljmp
mov
incl
incb
add
out
jmp
ffree
out
mov
lods
fnstenv
std
fnstenv
add
jmp
enter
cli
adc
int3
repz
test
mov
fstpt
out
out
jecxz
neg
shl
loop
repz
into
icebp
mov
shl
aad
cld
int
add
call
filds
rol
int3
shrb
rcl
mov
fdivr
fsin
rolb
add
sti
clc
add
out
stc
in
leave
fsubrp
lods
int
loope
in
mov
jmp
jecxz
clc
cli
ffreep
roll
ret
sti
sar
aad
add
loopne
int3
loopne
iret
ljmp
repz
add
mul
icebp
ffreep
jecxz
or
push
out
xlat
shll
ljmp
lret
pop
call
add
loop
in
or
ret
rol
lret
fst
hlt
lds
mov
mov
ret
add
out
mov
ljmp
lret
repz
fcmovnu
into
mov
mov
loopne
leave
in
out
enter
mov
rol
dec
hlt
mov
ror
fsubp
inc
out
loope
jmp
loope
jmp
loop
mov
scas
fbstp
mov
ret
lret
out
fstp
jecxz
int3
mov
test
leave
mov
icebp
int
in
aam
in
out
loope
rol
mov
loopne
in
mov
into
shll
lock
add
add
add
mov
div
mov
mov
out
stc
loope
mov
add
rol
push
in
int3
int3
in
fsubp
lods
in
shl
sti
shl
xlat
mov
stc
call
lret
fcmovnb
jecxz
lret
mov
repz
mov
shr
mov
mov
repz
roll
shl
testb
aam
out
loop
fsub
divl
in
in
aam
call
add
shl
out
fldl
int3
adc
jmp
icebp
ret
clc
mov
aad
loope
rcl
mov
fsubr
add
in
mov
mov
imul
mov
out
ret
aam
clc
idiv
xlat
out
in
decb
loope
out
call
mov
in
cli
lret
clc
lret
shr
stc
add
shl
mul
sar
hlt
sar
in
enter
lods
scas
shl
call
aad
fmul
add
ret
xlat
call
pop
cld
in
add
ret
int
iret
jecxz
fxch
aad
fdivr
out
lock
clc
rolb
add
add
les
out
ret
int3
call
sarb
in
out
int
shl
jecxz
stc
cli
movntq
out
clc
lds
out
idivl
repz
enter
fcmovnb
clc
loop
add
fsincos
or
shrl
rcl
call
test
shl
rcl
sar
psubq
or
push
shl
rol
scas
shlb
aad
clc
add
mov
cmc
loop
or
bswap
invd
loop
iret
mov
iret
out
scas
sarl
mov
mov
add
shl
loopne
loop
or
repz
lods
lret
mov
mov
mov
push
out
fdiv
mul
push
push
in
jmp
lods
out
jecxz
aad
cli
clc
mov
shl
aam
stc
fdivr
fcomp
test
add
out
out
or
icebp
iret
mov
int3
lret
mov
cmc
div
or
ret
push
lret
fnstsw
int
mov
out
in
ror
in
mov
mov
fsin
sti
sti
cld
call
xlat
mov
stc
stc
mov
ror
xlat
repz
rcr
ret
aam
sti
clc
add
adc
repnz
ljmp
lret
in
aam
repnz
in
call
ret
repz
leave
div
fmul
out
iret
repz
jmp
ljmp
add
out
cld
sti
in
out
add
out
enter
rcl
mov
iret
loope
div
repz
aam
loopne
add
in
call
xlat
shl
in
neg
ret
ret
in
sti
ljmp
in
lret
loop
lock
enter
imul
mov
into
std
out
stc
ljmp
int
lret
imul
test
in
xlat
incl
mov
inc
fmull
or
mov
loopne
in
ljmp
mov
mov
std
int3
in
int3
movb
loop
add
cli
iret
shrl
out
icebp
mov
idiv
in
fdivp
fcmovnu
loopne
push
stc
rcr
jecxz
sar
add
int3
shlb
sar
mov
aad
enter
in
fscale
repnz
add
iret
loop
iret
mov
out
lods
lock
mov
cmc
mov
loop
fdivr
jecxz
aam
les
mov
call
iret
int
fucomi
iret
ret
in
add
add
fmulp
add
in
rcl
in
lret
test
mov
add
repz
jmp
sarb
fndisi(8087
fucomp
cli
lret
repnz
faddp
enter
in
leave
repz
xlat
aad
fsub
int
xlat
mov
or
rcl
repz
int
in
int
iret
lds
loop
push
fcomip
add
add
lods
ror
ret
mov
repnz
shl
call
cmc
into
int
fucomp
pavgw
add
repnz
mov
in
call
shll
mov
int
or
out
add
repz
repnz
in
enter
out
jecxz
push
std
add
call
ljmp
lods
in
test
mov
fucomp
rcr
shr
ret
in
in
fnsave
mov
ljmp
out
mov
xlat
lret
fucomi
or
stos
imul
xlat
out
in
shr
neg
lock
mov
leave
or
cmc
ror
lock
lock
call
clc
in
leave
mov
mov
rcr
fsubrp
out
repz
test
ror
into
cmc
repnz
leave
std
loopne
out
neg
decb
clc
idiv
add
loop
int
out
mov
aam
int3
mov
loopne
rol
repnz
jmp
lret
lret
shl
int3
repnz
test
fcmovb
clc
stc
loop
call
sti
or
flds
fcmovu
jecxz
ljmp
clc
leave
out
idiv
fst
call
clc
clc
jmp
add
les
or
add
mov
cmc
mov
ror
xlat
enter
fdivrl
repz
loope
leave
rorb
enter
test
aam
iret
in
hlt
out
sarb
mov
pmaxub
loopne
les
lods
test
clc
mov
sar
add
mov
fdivr
in
into
lods
lods
call
sti
fdivrs
mov
in
ror
fcmovb
pop
cmc
add
leave
mul
mov
mov
lret
ror
fcomp
repz
shl
sti
or
jmp
adc
icebp
lock
enter
in
clc
fcmovne
jecxz
iret
repnz
mov
aam
aad
fcmovnbe
add
add
lret
int
sti
les
clc
cmc
mov
aam
add
aam
call
in
mov
hlt
fucomi
lods
mov
mov
add
mov
loop
int
jmp
fdiv
in
mov
mov
lock
aam
icebp
mov
jmp
pop
loop
in
ror
iret
mov
into
jmp
add
loope
inc
jecxz
out
add
out
loop
lret
fadd
lret
out
jecxz
cld
mov
or
mov
fidivl
jecxz
fcmovnbe
out
test
lock
aam
iret
fsin
idiv
faddp
aad
fimuls
bts
rol
fmul
jmp
lret
cmc
aad
iret
jmp
repnz
cld
add
roll
loopne
call
lret
fsincos
not
enter
std
out
movl
cli
in
stc
or
stc
mov
shl
jmp
in
iret
int3
mov
fcmovu
cli
sti
lret
or
mov
loope
iret
mov
mov
loop
std
add
ret
fstp
or
add
out
out
lds
rol
mov
ret
jmp
fistpll
lock
push
fmul
sti
neg
into
or
loop
scas
iret
lods
shr
lret
repnz
fsin
sarl
mov
fcmovnu
shl
out
repz
jmp
lret
jmp
cmc
mov
cld
fmulp
add
sti
decl
or
ret
mov
mov
jmp
repnz
sar
repz
clc
in
lret
loopne
hlt
into
ljmp
mov
lret
shl
repz
into
incb
mov
add
add
out
std
loopne
in
scas
loop
int3
lods
divb
mov
cmc
fcmovnb
cli
out
aad
out
cmc
jmp
or
enter
mov
stc
mov
mov
mov
lret
les
add
mov
enter
lret
lret
mov
ret
fyl2xp1
add
fdivr
scas
sarb
xlat
in
leave
std
enter
lock
jmp
sar
cld
fsubr
add
out
iret
ret
out
enter
idiv
mov
repnz
icebp
add
add
clc
cli
aam
movntq
out
in
out
rcl
lock
sar
leave
aad
in
hlt
in
mov
loopne
in
jmp
in
mov
jmp
hlt
repz
call
in
div
add
shl
out
cld
in
sti
out
scas
out
shl
in
clc
mov
icebp
mov
sarb
add
cmc
loopne
call
out
rol
aad
loopne
xlat
std
fmulp
mov
movl
out
out
lret
repnz
lock
fsubr
loop
int
mov
rol
enter
leave
mov
loope
cmc
lret
call
mov
cli
repz
push
neg
sti
in
out
loopne
ljmp
pushl
cld
mov
cli
repnz
out
fsubp
lret
shrb
out
fxtract
into
jecxz
jmp
fnop
ror
fcomip
loope
out
adc
jmp
jecxz
mov
repnz
repnz
div
idiv
lock
cmc
mov
test
or
loopne
mov
out
fld
mul
mov
leave
fdivrs
ljmp
push
adc
xlat
xlat
mov
repnz
imul
ljmp
out
loopne
jmp
mov
loope
add
les
inc
cld
and
decl
movl
orl
lea
incl
mov
decl
mov
movl
movl
sub
mov
incl
mov
orl
mov
subl
xor
sbbl
sub
movl
sbb
xor
xor
movl
mov
mov
movl
cmpl
jne
movl
cmpl
jne
sbb
mov
andl
mov
xor
sub
jmp
mov
push
outsl
jbe
loope
cmp
jnp
stos
cwtl
jnp
in
shl
into
leave
jmp
not
mov
mov
or
fprem1
fdivrp
add
jmp
mov
sti
in
mov
leave
repnz
imul
lock
aad
cld
pop
out
loopne
mov
test
iret
fxam
jmp
mov
test
faddl
add
mov
icebp
lock
in
out
repnz
clc
mov
fyl2xp1
mov
mov
add
or
out
repnz
mov
lods
icebp
shlb
aam
shl
out
pop
pop
div
jmp
add
fucomp
loopne
mov
stc
not
out
sti
cld
mov
cli
add
out
add
in
mov
cli
call
into
mov
ljmp
lds
lret
ret
mov
enter
lret
cli
ret
clc
ret
loop
push
jmp
fsub
jecxz
test
shl
icebp
mov
stc
rcl
aam
sar
mov
fadds
out
out
add
fildll
leave
lret
mov
call
stc
hlt
cli
fcmovnb
add
add
in
std
mov
int3
out
stc
scas
leave
out
int
sti
std
add
mov
sar
mov
out
or
in
into
ffree
lret
jmp
hlt
in
repz
lock
ret
add
loope
enter
loop
jmp
test
mov
out
stc
fld
out
sarb
mov
ljmp
in
scas
mov
loope
rcr
leave
cmc
cli
idivl
aam
sar
fucom
or
in
or
jmp
lret
out
iret
fprem
fstpt
mov
ret
mov
fxch
clc
fucomip
int3
out
mov
mov
fadd
fcmovu
jmp
shr
sar
aad
idiv
aad
decl
cmpxchg
shll
mov
fcmovbe
repz
lock
push
add
add
paddusb
repz
jmp
out
loope
lret
fcmovnbe
out
leave
hlt
sti
mov
loopne
call
add
lock
out
in
add
repnz
cmc
aam
neg
mov
add
loopne
jecxz
loope
jecxz
out
aad
into
in
in
xlat
ret
in
cmc
rcl
loope
lret
fstp
dec
cli
or
mov
repnz
fxch
mov
lret
ret
mov
push
cli
lret
aam
iret
cli
push
or
or
sarb
out
lock
mov
or
hlt
cmc
fisttps
ljmp
icebp
cmc
in
iret
call
sar
aam
aad
out
fiadds
push
loop
std
out
into
int3
test
mov
in
aad
clc
int
jecxz
add
or
leave
hlt
cmc
cli
cli
jmp
aad
mov
call
lret
mov
hlt
xlat
jecxz
or
or
les
in
lret
lret
sarl
sarl
les
push
fcmovne
out
jmp
shr
mov
mov
cli
fnstsw
ret
not
fcomip
repnz
add
clts
fildl
clc
lock
icebp
shl
repnz
cmc
mov
sarb
add
cmc
lret
loopne
push
fiaddl
mov
out
int3
repz
in
lock
icebp
fdivr
fucomi
push
std
std
aad
jmp
sti
or
sarb
mov
lock
imul
stc
lret
enter
push
stc
clc
add
in
hlt
out
clc
in
loopne
loopne
xlat
int3
loopne
shl
into
lock
mov
cld
lock
or
add
fsubp
add
mov
in
mov
xlat
mov
aad
sti
lock
flds
lret
or
or
incb
adc
call
aam
clc
add
aad
lock
cmc
lock
flds
or
out
loope
lods
mov
mov
loop
out
xlat
mov
mov
add
cli
jmp
loope
add
ljmp
shrb
fcmovu
shr
add
in
loope
stc
jmp
add
int
ror
loop
shl
loopne
int3
cli
iret
mov
add
std
testb
fucomp
push
shll
mov
aam
shl
bnd
loopne
out
sti
fsubrp
cld
mov
mov
lret
mov
hlt
mov
mov
sti
mov
cli
or
or
repnz
ljmp
aad
stc
cli
xlat
ror
aam
add
out
std
pop
push
out
lret
loope
mov
test
mov
jecxz
mov
pop
std
jmp
fsubrs
cli
lret
in
aam
sar
mov
mul
in
movl
out
stc
repz
mov
out
ljmp
loop
test
fdivr
add
aad
in
int
fcom
ljmp
mov
fsubrp
hlt
mov
cmc
jecxz
xlat
leave
push
in
fisttps
out
loop
scas
mov
in
aam
out
leave
fdivl
clc
neg
push
out
pop
cli
shll
loop
int3
into
clc
stc
call
add
fsub
jecxz
lock
cmc
stc
loopne
fld
in
lds
les
jmp
cmc
rcl
loope
rcr
filds
aam
add
clc
fsubp
lret
in
fnsave
jmp
add
rcl
loop
icebp
lock
leave
jecxz
loopne
iret
shr
int3
stos
lods
repnz
mov
in
loopne
int
mov
mov
mov
std
push
fcmove
loopne
scas
shr
loopne
mov
mov
fcmovnb
shl
in
testl
add
out
hlt
stc
lret
ret
leave
mov
rcr
not
mov
leave
stc
decl
repnz
ljmp
fsubrs
leave
call
idivl
in
rol
cmc
or
in
add
adc
stos
fcmovnbe
enter
fucomip
fsubr
cmc
in
add
mov
or
fcmove
fcmove
rol
int
cmc
iret
lret
in
mov
repz
loope
ret
jmp
ret
out
add
out
les
lods
loop
divl
add
in
not
add
lret
add
or
lret
mov
fmulp
loopne
in
div
in
mov
add
std
add
lar
add
test
mov
shll
fsubr
rolb
int
or
fildl
add
aam
add
scas
int
mul
stos
loopne
out
mov
fst
loopne
out
out
loop
out
enter
ret
mov
lock
out
loop
lret
sti
fldpi
int
mov
int
sar
or
jecxz
add
add
shl
mov
mov
enter
repz
clc
std
mov
ljmp
out
in
jmp
fcmovb
out
in
mov
jecxz
ret
fmuls
lret
jmp
add
icebp
loope
fsub
in
scas
jmp
enter
rol
out
fistpll
in
fucomi
fstp
cmpsl
mov
ret
loopne
jmp
fstp
in
aad
fsub
movb
cli
fisttpl
out
lds
out
mov
lods
int3
int3
fmul
repz
stc
add
cmc
fisttps
shl
add
iret
out
jmp
mov
repnz
loop
enter
loope
aam
rcl
push
or
shrb
sti
jmp
enter
fldl2t
lret
shl
neg
in
cmc
or
or
add
out
out
repz
cli
std
int3
aam
mul
iret
int
fucomi
fld
fucom
clc
into
repz
int
shl
out
frstpm(287
cmc
mov
in
testl
rcr
out
jmp
ret
test
out
into
neg
mov
fsubr
in
xlat
repnz
loop
fcmovnbe
lret
psllq
add
ret
rcr
rcl
iret
aam
rcl
call
fmulp
mov
out
aad
in
shll
stos
loope
int3
out
iret
into
lock
repnz
loope
lret
loopne
or
ljmp
int
clc
clc
jmp
mov
loopne
ret
push
iret
decb
repz
fsubr
ret
lret
fidivrl
mov
sti
add
fldl2t
clc
stos
lret
scas
lret
aad
mov
enter
sarb
fcmovu
jmp
ret
fcomip
call
aad
mov
mov
clc
mov
incb
roll
or
in
add
cld
fdiv
into
in
mov
mov
mov
rcr
jecxz
loop
fndisi(8087
incl
or
jmp
into
out
jecxz
call
mov
mov
rolb
mov
jecxz
adc
jmp
out
shl
ljmp
rcl
neg
ret
add
jmp
mov
les
repz
jmp
mov
std
idiv
int3
jmp
ret
jmp
or
stos
movsl
in
in
shl
into
repz
cmc
ror
neg
mov
loope
fcomp
aad
call
loop
jmp
out
repz
out
icebp
int3
call
icebp
faddp
icebp
aad
fucom
add
bswap
ljmp
sarl
fcom
mov
repz
ffreep
incl
xlat
call
loope
in
mov
mov
shl
cli
icebp
lock
loope
mov
call
out
in
ror
leave
lods
icebp
out
loope
out
int
repnz
cli
mov
sar
add
out
pop
out
mov
call
mov
repnz
leave
cli
mov
xlat
cld
psubusb
or
or
mov
icebp
stos
test
out
std
repnz
ret
fsubp
add
loopne
xlat
in
adc
loopne
icebp
call
lock
cli
out
add
fmul
sar
sar
lret
repnz
jecxz
scas
ljmp
not
mov
or
sar
adc
lock
jmp
fdivrs
aad
clc
push
fucomp
out
loopne
add
loop
int3
out
mov
cmc
rcl
add
loopne
lock
cld
sti
shl
movl
call
repz
repz
in
out
std
int
in
icebp
shl
aam
icebp
add
out
rep
movsl
fnsave
lock
xlat
fdivrs
fdiv
out
ror
cli
fucomp
mov
les
mov
add
sarb
leave
flds
in
in
int
leave
ljmp
iret
mov
enter
fadds
aam
fucompp
jecxz
cld
or
std
add
xlat
loopne
in
in
cld
push
mov
inc
out
aad
iret
dec
fadd
mov
iret
rol
aam
in
aad
aam
mov
mov
push
add
in
mov
jmp
test
jmp
lret
fmul
call
in
std
out
xlat
add
mov
cmpsl
iret
fidivs
shll
mov
xlat
rcl
shl
int3
mov
std
cld
sti
fildl
in
scas
mov
into
stos
shl
iret
jmp
fsub
shl
fucomip
mov
loopne
shr
int3
add
ffreep
mov
aad
mov
mov
faddp
fucomi
inc
shl
ljmp
xlat
loope
sar
clc
scas
clc
sti
int
jecxz
sar
out
pop
fcmovnu
faddl
mul
jmp
stc
enter
out
shl
mov
aad
fmulp
imul
lret
aad
jecxz
fcomip
shr
hlt
or
call
mov
fcmovbe
jmp
jmp
mov
into
mov
std
cli
jecxz
iret
icebp
mov
cli
mul
aam
iret
mov
mov
jmp
fmulp
out
push
or
in
out
shl
mov
mov
jmp
clc
std
in
loop
add
add
int3
ljmp
rol
mov
aam
in
mov
iret
loopne
pop
jecxz
add
jmp
std
mov
mov
shr
repz
mov
aad
rcl
mov
push
loope
out
in
out
lret
iret
loopne
rcl
cli
in
mov
ret
rcr
aam
add
jmp
lret
test
in
imul
mov
in
not
fucom
in
mov
faddp
sar
leave
fucom
faddl
loop
mov
mov
out
mov
stc
cmc
aam
rcr
lock
add
ret
loop
sti
lret
mov
ror
pop
fidivrl
stc
mov
test
iret
mov
lret
jmp
out
in
iret
xlat
lock
ljmp
jmp
rol
xlat
shr
mov
fidivrs
std
fptan
clc
add
add
fimull
stc
out
lret
shr
mov
mov
in
fcmovbe
std
iret
mov
mov
stc
xlat
clc
fdivr
mov
ret
in
rcr
mov
leave
iret
mov
iret
add
add
call
out
mov
call
out
mov
shl
hlt
mul
leave
fadd
add
loopne
out
mov
iret
leave
in
aam
hlt
fnstsw
fdivr
add
lds
fiadds
in
int
out
shrl
icebp
jmp
call
aam
rolb
rcr
or
fsubrp
fdivp
repnz
mov
sar
call
in
mov
rol
add
loopne
cld
jmp
add
in
out
mov
xlat
cmc
in
leave
repz
iret
enter
add
ret
mov
aam
or
out
loopne
in
enter
hlt
in
mov
int3
out
loope
in
xlat
std
faddl
out
shr
jmp
jmp
repz
int
ret
out
rol
jecxz
ret
hlt
add
in
or
ljmp
xlat
test
lret
cli
add
not
shl
or
add
out
loop
scas
scas
cmc
loopne
ret
lock
in
into
mov
cli
cld
ret
jmp
in
repnz
test
lods
mov
in
in
icebp
neg
cld
fistpll
repz
enter
pop
lds
iret
in
scas
mov
int
in
mov
int3
mov
loope
add
fsubrp
into
add
in
fsub
mov
mov
out
lods
std
enter
int3
call
ljmp
bswap
lret
mul
test
mov
out
lret
lret
ret
cmc
aad
ret
stc
faddl
add
ret
call
xlat
iret
mov
xlat
ret
cli
fdiv
vpsubusb
lret
add
loopne
shl
loopne
mov
call
cld
cmc
out
sti
cld
add
loope
cld
add
fdiv
fucomip
fsubrp
cld
pop
out
jecxz
hlt
iret
aam
clc
repnz
int
cld
mov
mov
or
in
call
loopne
out
in
ror
lret
mov
mov
add
loopne
lret
into
lods
jmp
jmp
mov
aam
into
mov
xlat
cld
repz
lret
jecxz
add
lret
shr
scas
mov
out
lods
mov
iret
fnstcw
mov
into
jecxz
fst
lret
fcmovnbe
ffreep
mov
cld
repnz
decl
rcl
or
into
in
in
rol
mov
out
rcl
in
int
lret
out
loopne
shl
div
loop
out
paddb
shll
rcl
imul
in
repnz
fdivp
shl
fcomip
movl
fsubr
out
icebp
loopne
mov
cmc
aad
in
stc
aad
roll
or
cli
add
fstp
rsm
mov
lret
cli
fcomi
hlt
xlat
int
add
out
add
in
add
add
out
loop
leave
fdiv
leave
shr
mov
enter
pop
icebp
cmc
fcmovu
add
rorl
clc
jmp
pop
or
scas
jecxz
out
jmp
enter
mov
repz
les
add
out
ljmp
into
lock
in
loopne
repz
mov
aad
fadd
not
add
jecxz
out
loopne
movsb
loopne
jmp
ljmp
loopne
cli
aam
in
in
leave
fsubrp
ret
imull
mov
mov
fcomp
repz
loop
loope
cmc
shl
add
out
push
in
shll
mov
idivb
mov
add
or
pop
ffreep
iret
test
iret
cli
int3
fcmovne
shl
stc
mov
hlt
iret
icebp
rcr
rcl
cmc
in
inc
adc
lret
mov
lret
aad
mov
out
pop
add
loopne
loope
aam
in
lods
scas
lock
clc
out
div
in
mov
add
repz
psubq
repz
test
sti
lods
in
fbstp
fcomip
mov
add
fmul
push
fsubrp
clc
or
ror
ret
mov
in
xlat
in
mov
shl
stc
add
ret
shr
lret
repnz
shl
fsubr
stc
clc
loop
lock
mov
fiadds
mov
jecxz
mov
enter
in
iret
repz
mov
aad
or
loopne
test
jmp
mov
in
mov
sar
mov
icebp
push
lret
add
call
hlt
iret
stc
cli
iret
jmp
lock
into
jmp
fucomp
hlt
cmc
idiv
lret
stc
in
ljmp
leave
iret
hlt
fsubrp
clc
in
cmc
aad
int
lock
hlt
ljmp
lods
iret
rcr
in
lret
lret
lock
lock
roll
lock
fdivp
lret
iret
fsubp
mov
mov
aam
clc
idiv
loop
add
add
jmp
fdivr
test
fisttpl
adc
in
fldt
std
rcr
int3
fdiv
out
ret
fmuls
jmp
lret
lods
in
scas
shl
ljmp
repnz
mov
mov
loop
into
lret
fistpll
mov
fcmovbe
iret
shl
rcl
repz
repz
flds
add
bswap
or
sti
add
out
mov
out
in
idivl
std
into
sarl
push
add
fimuls
rol
mov
vpaddsb
aam
mov
lret
jecxz
push
cmc
mov
fcomp
into
fstp
out
lock
icebp
in
out
repz
mov
mov
sar
fdivp
or
fninit
call
iret
jecxz
mov
out
std
in
fucomi
rol
in
fld
std
jmp
bswap
loopne
jecxz
mov
ret
mov
aad
lret
iret
incl
into
shlb
ret
or
ret
add
push
iret
mov
in
fcmovb
mov
fsub
mov
into
add
ljmp
lret
iret
lds
iret
fnsetpm(287
in
leave
add
cmc
ret
or
push
ret
shr
leave
jmp
ljmp
out
cli
call
leave
rol
fsubp
ret
mov
jmp
mov
loope
lock
lock
lock
mov
ret
out
clc
into
iret
stos
out
repz
call
ljmp
out
out
aad
add
call
in
lock
call
div
cli
int
jecxz
out
or
ljmp
jmp
lock
fdiv
loop
out
sti
into
in
aam
jmp
enter
sti
rcl
lret
mov
fdivrs
rcl
repz
stc
fnstenv
mov
icebp
psubw
add
or
lods
repz
divl
mov
clc
repnz
int3
int
roll
hlt
shl
hlt
leave
out
hlt
fmull
int
icebp
mov
int3
rol
shlb
fmul
cld
mov
out
cli
stc
ljmp
mov
stos
fcmove
repz
fistpll
ffreep
mov
ret
mov
repnz
in
out
scas
in
ret
in
les
in
icebp
fdivp
aam
aad
add
jecxz
or
add
xlat
movsl
ljmp
mov
into
les
add
aad
or
or
enter
loope
rcl
mov
mov
cli
clc
out
not
mov
in
call
imul
add
out
push
push
loop
loop
jecxz
xlat
out
enter
fdivrs
loop
mov
push
aam
flds
les
in
repnz
shr
mov
loope
icebp
aam
or
enter
mov
ror
out
into
fidivrl
icebp
sar
rolb
aam
loope
leave
jmp
std
sti
leave
loopne
fnsave
cli
fucomp
fildl
int
fcom
push
or
in
mov
repz
shl
xlat
shl
rcl
fidivl
rcl
repnz
out
cmc
loop
aam
inc
lret
into
out
in
ret
mov
iret
mov
neg
cmc
sti
mov
cld
add
out
lds
jecxz
cli
push
mov
std
inc
repz
cmc
in
sar
cli
add
push
in
loope
lock
jmp
lret
lret
int3
sarb
out
in
faddp
fcmovnu
push
jecxz
clc
fistl
int3
leave
ret
stos
fucomi
mov
lret
rcr
loop
ror
lock
lock
lret
psubw
mov
out
lret
iret
loopne
in
lds
fcmovnb
add
rcr
lret
aam
loopne
loopne
iret
rol
mov
in
mov
iret
out
into
out
mov
icebp
push
rol
jmp
add
call
icebp
sti
idiv
icebp
mov
shl
int3
out
lock
jecxz
pextrw
test
cmc
scas
in
in
repnz
repz
out
mov
aam
aam
sti
shl
pmaddwd
cld
sti
push
into
shrl
int
mov
add
cli
iret
ffreep
ret
jecxz
testl
int3
scas
iret
jecxz
call
mov
enter
mov
add
call
call
mov
out
ljmp
loop
cmc
iret
mov
lock
in
fcmovnu
pop
mov
in
leave
repnz
aad
lock
enter
jecxz
idivb
aad
lret
add
mov
in
aam
jmp
mov
mov
push
ret
push
in
in
int
in
repz
loopne
sar
int
int3
repz
mov
ror
aam
out
fld
into
adc
in
cmc
lret
out
shl
neg
stc
icebp
mov
loop
fcomp
or
fucomp
fmulp
fldl2e
mov
ror
int
repz
leave
stc
fdivr
loope
shl
fildl
in
mov
mov
loopne
mov
div
enter
in
cli
add
add
clc
enter
fsubp
idivl
rcr
les
add
repz
int
clc
fninit
loop
out
add
mov
shll
mov
div
pop
mov
or
sti
lret
out
enter
out
in
scas
mul
in
jmp
dec
call
fistpll
out
lret
iret
fsub
shlb
in
cmc
shr
mov
fdiv
out
stc
vcmpgtps
icebp
loop
mov
mov
jmp
sti
int
ror
hlt
into
jecxz
sar
in
loopne
cli
loopne
fmul
lods
lret
cmc
out
fdivrl
hlt
shr
lret
jecxz
or
cli
out
loop
loope
ret
jmp
test
cli
hlt
idiv
fistpll
lret
loopne
std
or
lods
icebp
lret
shr
fcomi
lret
fdivr
call
add
repnz
call
adc
in
les
xlat
enter
mov
cld
stc
fdivp
roll
fidivrs
lret
mov
stos
rol
out
idiv
int3
lock
into
fld
int
fadd
loope
push
shl
rcr
shl
lods
out
div
sar
mov
mul
add
add
leave
sti
or
inc
lods
mov
iret
ror
div
mov
std
int3
int3
cld
cli
add
add
jecxz
mov
jecxz
lock
mov
aad
aad
loop
add
loop
add
in
shll
ljmp
out
push
fldl
repnz
out
std
or
into
scas
lret
call
in
mov
add
int3
add
mov
pop
shrl
in
bnd
fxam
fst
sti
leave
shr
fcomi
lret
out
loopne
mov
into
jmp
stc
mov
out
loop
add
mov
pop
jmp
stos
in
hlt
jmp
jecxz
stc
cli
mov
fisttpl
lock
cli
mov
fadd
lret
div
lret
mov
mov
add
mov
push
lock
loop
adc
loopne
call
mov
lret
mov
mov
loopne
jmp
mul
repz
lret
in
shl
div
int3
hlt
leave
fmul
ret
fldl
mov
clc
fsubr
icebp
fiadds
mov
in
mov
jmp
fcmovnbe
mov
mov
in
add
fcmovb
jmp
lods
jmp
mov
in
xlat
aad
icebp
mov
aam
not
jmp
in
out
std
out
std
lret
test
mov
stc
mov
jmp
mov
not
aad
out
test
neg
incl
in
loopne
rcr
mov
out
out
in
enter
mov
fxch
mov
add
or
idiv
into
int
add
jmp
mov
call
xlat
aam
call
cmc
add
cld
or
fsubrl
lret
mov
int3
mov
xlat
fcmovnb
out
cld
hlt
out
or
or
loope
icebp
lods
shr
rcl
mov
test
sti
jecxz
add
rol
lret
fcomi
loope
ljmp
loope
test
aam
fcmovbe
stc
mov
ljmp
add
adc
in
in
cmc
test
mov
shr
icebp
fxch
aad
add
icebp
loope
cmc
out
or
shr
ret
ret
mov
cli
in
in
mov
fucomi
cli
jmp
in
leave
shll
mov
lret
into
cli
ror
mov
mov
std
sti
lret
adc
fsubr
mov
jecxz
enter
in
mov
cmc
add
ret
add
repz
movb
loop
aam
fisubrl
jmp
loopne
in
in
mov
out
repz
test
or
cld
int
vmaskmovdqu
repz
mov
into
rol
mov
repz
add
mul
out
out
int3
out
in
aad
std
mov
sti
out
out
push
push
ljmp
repz
loopne
hlt
jmp
shl
rcl
stc
xlat
clc
movb
lret
cli
fucomi
std
push
mov
out
lods
lret
mov
std
jecxz
in
not
mov
lret
loopne
ror
mov
in
xlat
not
clc
clc
into
xlat
hlt
shl
repnz
aam
roll
jecxz
fsubr
mov
out
call
test
shl
fsub
loope
idiv
loop
or
add
out
cmc
loopne
fdivrp
mov
cld
inc
rcl
fucomi
push
add
cld
aad
push
add
mov
scas
in
test
mov
add
pop
out
in
add
lds
clc
fmul
mov
int3
jmp
fadd
mov
mov
mov
repnz
rcl
pop
lsl
fsubrs
enter
mov
out
shl
rol
stc
jmp
std
fmul
fstp
out
lret
sarl
jmp
repnz
jmp
hlt
testb
out
fimull
in
rcr
rcl
mov
mov
clc
repnz
mov
icebp
loopne
loope
iret
aam
add
not
aad
mov
mov
fldln2
mov
mov
mov
add
or
clc
cmc
stc
clc
std
iret
iret
iret
ljmp
out
into
sti
xlat
rcl
add
cli
clc
add
or
not
call
out
rcl
shll
xlat
cld
hlt
add
out
loope
mul
fdivrp
fcmovu
scas
lret
test
loop
in
loopne
in
lret
aad
fucomp
cli
add
cli
loope
rol
hlt
out
leave
sti
or
iret
lock
jmp
test
in
mov
repnz
loopne
sti
ljmp
in
fucom
repnz
jmp
repz
iret
ffreep
cmc
shl
add
add
leave
loopne
loopne
test
shr
call
mov
mov
aad
add
fimuls
or
faddp
leave
in
shrb
mov
icebp
call
out
add
rol
clc
inc
testb
loop
ftst
jmp
xlat
clc
sarl
ret
rcr
add
std
ljmp
inc
xlat
int3
call
clc
rcr
iret
add
cld
lock
loop
enter
fdivp
ret
imul
mov
icebp
aam
out
inc
cli
mov
add
enter
iret
add
ror
lock
ret
mov
fcmovbe
mov
fcomp
icebp
fsubr
hlt
out
clc
fsubp
jecxz
jmp
mov
lods
loop
fsubr
call
icebp
fnstsw
cld
add
or
shr
scas
rcl
mov
in
mov
out
fdivr
mov
push
sar
cmc
fmul
loope
int
mov
into
out
int3
divl
into
aam
sti
loopne
mov
call
test
stc
cli
cmc
jmp
into
add
mov
add
lock
add
bswap
jecxz
test
into
loopne
cmc
mov
aad
mov
push
incb
add
or
stos
repnz
leave
loopne
leave
stc
hlt
int
out
sarb
sar
lret
fcmovu
paddb
jmp
test
lock
lods
lret
rcr
xlat
in
clc
fsin
push
rcl
mov
into
int
in
push
test
call
shl
stc
stc
rcr
cld
out
mov
fcmovnbe
fucomi
clc
loope
adc
repnz
iret
lock
repz
mov
in
mov
ret
ljmp
add
loopne
shrl
test
mov
mov
fxch
cmc
mov
fcomp
enter
std
add
in
in
lods
int3
call
ljmp
cli
xlat
add
or
push
in
int
lods
call
shr
cli
add
fnstsw
or
aad
ljmp
mov
jmp
rcr
hlt
mov
sar
rol
leave
out
fcmovb
or
loope
out
out
movsb
aam
not
ror
ljmp
out
into
fcmovnb
add
in
enter
add
fsubr
mov
shl
mov
mov
fxch
in
out
loope
cmc
in
cmc
or
sti
or
mov
ret
lret
rcr
fnsave
shl
fstpt
fdivrp
cli
fisttps
loopne
mov
loop
xlat
lret
icebp
iret
inc
ret
fidivs
shl
lret
or
mov
aad
in
out
icebp
fbstp
add
cmc
roll
out
add
loopne
jmp
clc
fcomp
hlt
fcomip
sar
movb
or
into
jmp
mov
shr
fdivr
cli
mov
in
add
fisttpl
or
test
bswap
scas
lods
repnz
mov
neg
out
fcmove
cli
jecxz
mov
fsub
add
bnd
testl
in
scas
rol
loop
in
mov
cmc
cld
mul
sar
in
lock
lret
cld
ret
lods
scas
mov
aam
iret
in
lock
icebp
fsincos
mov
xlat
or
or
decl
ret
or
shll
aam
std
call
shlb
flds
orl
xor
xor
adcl
xor
orl
xor
adcl
add
adc
sbb
mov
andl
mov
subl
xor
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
call
cmpl
jb
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sbb
mov
mov
orl
xor
sub
movl
sbb
xor
xorl
xor
addl
xor
andl
xor
add
movl
adc
mov
addl
xor
sbbl
add
adc
mov
mov
mov
movl
mov
mov
movl
movl
jmp
mov
xor
mov
jmp
jl
push
hlt
pop
nop
leave
mov
lcall
stos
cwtl
jnp
shl
add
incb
aad
in
push
fcmovnu
iret
fmulp
lods
mov
mov
fcomi
cmc
hlt
jmp
in
shr
faddl
or
loope
adc
enter
mov
mov
in
add
fdivrs
vpmaddwd
leave
loope
fcomp
int
fidivs
rcl
mov
fneni(8087
rol
sar
mov
out
add
out
adc
mov
aam
leave
rol
cmc
lock
std
cld
ret
add
int3
in
call
aam
icebp
in
out
div
cli
fdivrp
mov
or
inc
loope
loope
stc
ror
int3
aad
into
jecxz
ljmp
jmp
hlt
fcmovu
cli
loop
sti
out
mov
lods
mov
mov
ret
mov
ret
testb
sti
lret
stc
repz
enter
ret
mov
fdivr
int
in
add
lds
or
in
or
sarb
loop
dec
hlt
div
hlt
test
hlt
fdivrp
icebp
fsub
fdivrl
cld
int
int
ret
aam
loope
shr
rcr
in
out
repz
fcomp
loopne
rcl
lret
stos
ret
shr
div
cli
int
mov
lret
fcomi
ret
idiv
in
aam
call
iret
out
ror
mov
aam
loop
loopne
aam
ror
fiadds
jecxz
enter
scas
frstor
out
mov
add
rolb
icebp
fnstsw
aad
fsubp
fdivs
int3
aad
sti
in
mov
neg
xlat
add
shl
loope
lds
add
ljmp
test
rcl
call
icebp
jecxz
incl
repnz
psraw
dec
enter
ljmp
fmul
lods
stc
cli
fnclex
sti
sti
mov
fcmovnb
fmull
in
into
sar
lret
loopne
mov
call
in
sar
mov
shl
add
fcmovnbe
or
jmp
in
rcl
mov
lods
fldlg2
mov
shl
lret
ffree
add
fcomi
fsubrp
lock
out
ljmp
hlt
mov
mov
cmc
mov
repz
sti
add
mov
clc
aam
rorb
add
shl
mov
icebp
icebp
mov
mov
loop
jecxz
std
mov
push
lds
not
out
cmc
sar
leave
stc
in
mov
pop
rcr
or
cli
sti
add
cld
add
mov
lds
in
stc
add
shl
mov
or
enter
stos
scas
scas
lods
loope
mov
int
repz
fdivl
rorb
stc
sti
out
iret
rol
cmpsb
lods
mov
out
out
iret
into
mov
int
clc
add
fcmovb
add
in
or
jecxz
ret
mov
mov
neg
repnz
rolb
loop
add
test
loopne
shl
scas
mov
ret
loop
enter
in
std
jmp
clc
ret
int
pop
aam
fcmovnu
cld
in
in
movsl
mov
mov
rcr
jmp
rcl
in
icebp
mul
aad
lock
call
jecxz
ret
lds
loopne
sar
mov
fdivr
int
roll
add
or
add
les
mov
out
out
add
cmc
mov
xlat
clc
sti
lock
cld
lock
cld
repz
ror
shl
mov
enter
int
mov
icebp
cld
add
or
or
loop
cmpsl
out
loope
lds
cmc
fcomp
in
add
fmulp
stc
or
out
jecxz
call
fsubl
in
in
jmp
lock
lock
loopne
loope
cmc
filds
add
loop
in
loope
mov
rcl
lret
lret
shr
leave
mov
rol
cld
fdivp
fcomi
int
stc
mov
call
ljmp
mov
mov
fcomip
lret
fcmovu
out
or
shl
repz
jmp
in
frstpm(287
mov
sti
mov
ret
cmc
mov
int
jmp
out
movsl
jmp
fdivl
lret
clc
ljmp
rcr
jmp
xlat
hlt
fst
mov
out
mov
int
rol
mov
aam
add
cmc
out
fadd
fiadds
lods
into
in
cli
test
add
xlat
aad
clc
int3
fdivrp
add
add
repz
xlat
mov
mov
mov
ret
not
fadd
aad
or
fsubr
loop
in
mov
sarl
lret
imul
in
repz
cld
lock
xlat
call
or
add
mov
jmp
in
mov
mov
out
out
stc
out
out
repz
repz
repz
iret
fcmove
add
roll
lds
or
hlt
lret
or
or
lods
mul
shr
ljmp
rcr
cld
ret
in
mov
fcmovnb
jmp
iret
cmpsl
loop
lods
mov
rcl
in
cld
out
add
inc
std
cmc
xlat
leave
pop
clc
out
in
or
in
lret
imul
test
mov
in
mov
add
mov
add
dec
leave
jmp
aam
in
out
ljmp
lock
out
out
aad
ljmp
out
iret
fcomp
jmp
repz
lret
in
add
cld
add
repnz
icebp
sti
rolb
iret
or
out
lods
ror
ret
int3
enter
in
cld
aam
into
iret
stc
mov
decl
iret
call
ljmp
out
mov
jecxz
hlt
xlat
int3
out
shl
stc
div
jmp
ljmp
mov
mov
cli
rcr
cmc
mov
int
aad
fsubrp
or
add
add
repnz
sti
fcmovbe
mov
out
div
loop
iret
out
add
rcr
mov
lret
shll
fcmovu
ret
icebp
add
aam
aam
icebp
mov
in
out
repz
out
ror
jmp
fsub
mov
cmc
filds
in
in
cmc
in
call
out
mov
divl
idivb
add
stc
rolb
lsl
leave
in
out
cmpsb
mov
shl
mov
aam
enter
fstpt
aam
rcl
fiadds
adc
in
int
movsb
out
aad
aad
div
mov
in
mov
mov
aam
fadds
in
jmp
in
out
std
jmp
icebp
ret
fucom
add
add
jmp
add
fisubs
mov
test
mov
mov
out
shr
lock
mov
ljmp
mov
mov
aam
fmulp
fcom
fdivs
add
fcmovne
add
jecxz
in
stos
lods
lret
lock
mov
mov
mul
jecxz
leave
imul
dec
out
out
xlat
test
jmp
fcomip
mov
in
mov
sti
add
lret
fisubrs
loope
aad
in
fnstsw
in
sar
in
stc
ret
add
or
lret
adc
fsubr
mov
fcmovne
jmp
mov
ret
icebp
incb
icebp
stc
ret
add
neg
fisttpll
or
mov
int3
repnz
mov
cli
fsubrp
loop
out
jmp
loopne
testb
std
repz
jecxz
loope
scas
mov
mov
sti
mov
lds
hlt
push
add
stc
cmc
call
lret
in
scas
lret
out
out
mov
out
in
mov
iret
add
loopne
shl
add
jecxz
in
mov
mov
std
add
lock
shl
or
push
add
ret
add
lret
shl
icebp
in
test
std
jmp
mov
xlat
cmc
jecxz
in
loopne
sarb
leave
fsubr
faddp
div
in
fadd
jmp
or
push
scas
scas
out
aad
mov
out
in
out
fcom
in
fidivl
cld
fcmovnb
pop
fcmovu
push
clc
scas
mov
mov
stc
jmp
fistpll
in
clc
hlt
int3
std
add
idiv
fldl
jmp
out
icebp
int3
mov
int
fcmovu
fcmovnbe
in
neg
lret
shl
repz
shl
int3
ljmp
mov
xrelease
stos
out
lods
hlt
mov
into
stc
leave
into
out
mov
cmc
rolb
out
decl
loope
aam
add
mov
in
in
aam
sti
lret
cld
shlb
lret
fcmovnu
repz
fcomp
int
aad
in
sti
mov
faddp
jmp
cmc
mov
hlt
add
fucomip
jmp
or
loopne
repz
cli
fdiv
cli
lret
into
lock
rcl
fucom
loop
aad
enter
lret
rcl
sti
xlat
ljmp
cmc
cld
fdivrp
out
sti
hlt
lret
ljmp
call
fincstp
mov
mov
lock
add
stc
movl
aam
rcl
fsubrs
cli
hlt
cli
rcl
testb
hlt
aad
jecxz
jmp
mov
shll
fcmovne
div
call
div
add
or
cli
in
clc
jmp
mov
out
in
aad
rcl
lock
sar
out
lock
add
add
enter
mov
repz
ror
iret
mov
testb
enter
adc
mov
ljmp
fcmovnu
out
iret
xlat
mov
push
lret
pmulhuw
loop
in
or
mov
iret
mov
cli
aad
in
hlt
cld
in
mov
std
ffree
pop
std
mov
loope
clc
fsts
in
loopne
lock
mov
aam
repnz
out
rcr
ret
int
loope
mov
add
mov
hlt
lret
sar
jmp
mov
repz
in
mov
stc
fsub
add
decb
push
fbstp
in
aad
mov
xlat
in
cli
int3
in
in
rcl
fcmovnb
cld
add
or
repnz
mov
hlt
int3
mov
fcmovnbe
add
jecxz
les
out
fucomi
or
in
lods
jmp
mov
call
shl
ret
or
iret
add
hlt
add
out
loope
movsb
iret
mov
div
mov
stc
push
pop
loop
jecxz
sti
clc
cli
in
cli
repnz
int3
cmc
mov
leave
mov
repnz
int3
jecxz
testl
lret
loop
ror
in
ljmp
fistpll
int3
in
sti
out
add
test
mov
in
shl
mov
mov
ret
in
mov
jecxz
add
or
scas
ffreep
scas
in
loope
shll
shr
out
enter
fadd
add
cld
add
or
mov
repnz
cmc
mov
fsubrp
out
aad
into
jecxz
fcom
cld
fisttpl
ljmp
idivb
call
add
loope
icebp
lock
jecxz
push
pop
fcmovnu
add
psraw
loopne
mov
mov
mov
fucomp
idiv
mov
shr
sti
fadds
loopne
or
or
fadd
mov
lock
in
rcr
cmc
add
stc
repz
lock
xlat
mul
add
loopne
pop
stc
fmul
loop
int3
scas
in
in
vpsubw
jmp
clc
sti
sti
in
push
add
mov
repz
lods
in
lret
not
cld
out
lock
div
aad
fimull
fadd
jmp
leave
fucom
call
mov
hlt
int3
out
mov
out
jmp
or
in
test
sti
int
mov
in
add
int3
mov
aad
rcl
ret
jecxz
iret
loopne
out
lret
test
mov
fsubr
loopne
add
rol
mov
out
frstor
lods
fptan
scas
sti
repnz
mov
or
jmp
add
fmul
test
mov
enter
fsubp
mov
iret
in
call
roll
fisttpl
clc
out
loop
out
lods
lret
vpsubsb
shl
into
aam
mov
call
clc
jmp
add
mov
out
div
cli
not
clc
out
jmp
out
fsub
lock
iret
out
loopne
dec
fistpll
xlat
out
stc
lret
cli
iret
neg
into
pop
stc
fistpll
or
in
scas
not
xlat
shll
mov
mov
rcl
lock
in
fdiv
in
or
iret
mov
shl
aad
mov
sar
mov
lock
cmc
div
or
jmp
jmp
leave
out
into
fbstp
mov
repz
lret
add
jmp
clc
mov
fcmovnb
jmp
ror
mov
leave
in
aam
sti
shl
stc
loopne
add
pop
std
out
call
cmc
fcmove
lret
call
incl
mov
add
cmc
out
ror
mov
fsubr
mov
fcmovb
mov
mov
stos
jmp
in
in
aad
rcl
in
mov
ffree
ljmp
in
loopne
repz
iret
call
mov
fld
jecxz
loop
lock
hlt
add
ficoms
out
in
movsb
ret
out
int
stc
in
shr
lret
in
ret
flds
icebp
push
jmp
cld
filds
in
in
les
ret
mov
stc
sti
cli
idivb
jmp
out
add
lret
mov
leave
leave
mov
mov
ror
sar
or
leave
rol
or
call
call
mov
sar
stc
fcmovnu
call
roll
in
add
out
ret
out
out
out
jmp
shl
xlat
fsubr
ror
into
iret
aad
add
rcl
inc
loopne
sti
call
rol
mov
lret
ror
cli
ljmp
std
loopne
loopne
xlat
cld
xlat
stc
std
push
int
rcr
jmp
enter
call
shl
lret
sti
pop
out
mov
leave
or
add
in
scas
ret
lret
loopne
mov
mov
mul
add
in
lock
enter
enter
call
iret
mov
xlat
aam
fucomip
icebp
pop
fdivrl
add
push
loope
int
loopne
iret
int3
icebp
repnz
mov
icebp
cli
rcl
fnop
fcom
repz
ret
loopne
in
out
in
loop
aad
ljmp
repnz
mov
sti
hlt
loop
in
out
add
into
in
shl
shl
shl
vpmaxub
ret
rolb
jmp
loopne
rol
mov
mov
shlb
mov
test
mul
loopne
jmp
fimuls
sti
inc
add
inc
jmp
out
lods
mov
lret
jecxz
leave
out
cmc
int
in
ret
fcmovnu
add
or
out
jmp
out
stc
shr
fcmovne
fdivrp
ror
fcomp
flds
ret
fiadds
lret
add
lds
cld
out
loopne
lods
shl
enter
call
jmp
aad
fadd
lret
or
lret
loop
icebp
in
lods
shr
lock
out
leave
into
mov
repz
out
ret
dec
vpaddusb
mov
lods
rol
shl
fcmove
int
fcmove
fstp
add
in
mov
ret
add
adc
fsub
mov
in
in
jmp
int3
fdiv
std
add
shl
loop
loop
stc
enter
int3
leave
out
in
mov
aad
fucomp
leave
fsubrp
loopne
fadd
ljmp
in
into
shl
lods
mov
xlat
leave
lock
lret
hlt
repnz
rcl
fisttps
shl
loope
out
fxch
push
cld
ror
mov
jmp
repz
int
add
testl
lsl
add
loopne
ret
int
stos
repz
mov
jmp
cli
jecxz
loopne
dec
out
fimuls
jmp
repnz
repnz
int3
in
shr
fnsave
lock
jmp
hlt
clc
add
pop
jmp
into
vpsubsw
loopne
loopne
lret
fdivrl
inc
out
incl
lret
ljmp
in
mov
leave
lret
lret
sar
fidivs
in
paddusw
aad
lds
shrb
mov
cli
aad
enter
sti
test
clc
xlat
lret
lret
lods
repnz
in
mov
icebp
iret
jmp
clc
fst
cmc
aad
add
jmp
or
iret
loopne
stc
in
lret
lods
lret
mov
mov
rolb
add
out
loopne
or
rcr
icebp
loop
mul
icebp
xlat
mov
jmp
mov
loope
add
cli
faddl
loope
fcomp
out
lds
cli
mov
lock
xbegin
sti
or
in
jecxz
mov
fcmovnu
xlat
icebp
fstpt
add
in
lock
add
ffree
out
fisttpl
jmp
leave
jecxz
call
iret
fcmovnu
mov
fcmovb
rolb
out
cmc
in
std
out
fdivrs
call
mov
std
rol
icebp
loopne
std
out
aad
loop
ffreep
shl
fmulp
aam
aad
stc
icebp
xlat
stc
clc
call
icebp
repnz
xlat
cli
iret
idiv
repz
shl
shl
ljmp
icebp
mov
mov
icebp
rcr
loope
or
adc
in
lds
in
mov
lock
ret
enter
testb
hlt
add
or
mov
out
call
dec
neg
lock
add
aad
jmp
fsubp
enter
aam
mov
repnz
out
push
aam
clc
jmp
fstp
jmp
rol
loop
lret
lret
mov
fucomi
mov
mov
jecxz
aam
pxor
fcmove
loopne
out
enter
mov
clc
bnd
frstpm(287
jecxz
mov
repz
psrlq
imulb
sarb
int
clc
add
sti
rorb
lret
shr
int
int3
ret
jmp
repnz
mov
cld
fcmovnb
or
shl
or
add
out
into
mov
mov
out
stc
ret
xlat
repnz
loope
std
call
or
inc
in
repnz
in
lds
lret
cld
in
add
out
lock
fcmovbe
clc
jmp
jecxz
vpslld
ljmp
aad
lods
fdiv
stc
int
icebp
out
in
rcl
add
or
ffreep
std
repnz
ffree
not
sar
mov
add
cmc
stc
or
cmc
enter
out
out
leave
out
ror
test
shl
fidivrl
cld
mov
push
int
fcomi
mov
in
lret
shr
sar
std
ret
shl
fdiv
rcl
repnz
ljmp
repnz
neg
out
repnz
ret
not
out
aam
add
decb
add
add
loope
lods
out
not
repnz
enter
aad
fdivr
out
stc
or
jmp
mov
not
clc
repz
fcmovnu
jecxz
mov
fsubp
in
cli
clc
or
add
ljmp
imul
mov
mov
ret
jecxz
ljmp
loop
icebp
lret
int3
fninit
fcmovnu
iret
out
rcl
in
lock
ljmp
icebp
mov
repnz
cli
lock
in
cli
in
into
lock
ffreep
fdiv
ret
fucomi
fcmovu
fldln2
lret
mov
int3
cmc
cmc
icebp
fmul
sti
sarl
int
rcl
add
add
add
mov
in
mov
out
mov
jecxz
mov
rol
fld
pop
loop
incl
add
mov
shr
lods
mov
out
loop
aad
lock
aam
jmp
in
add
les
xlat
ror
mov
loop
rol
loopne
mov
add
clc
add
out
into
shll
fdivp
mov
push
ret
in
xlat
call
iret
int
jmp
jmp
leave
mov
int3
in
shr
incl
aad
out
clc
loop
icebp
stc
loopne
faddl
loopne
into
mov
in
iret
lret
call
jmp
fmulp
mov
mov
jmp
repnz
jmp
mov
xlat
mov
xlat
fxch
sar
int
stc
movl
cli
pop
int
fmull
stos
lods
in
loope
in
fidivrs
icebp
out
cld
fsub
pop
out
push
iret
jecxz
fcmovne
repnz
in
scas
mov
loop
out
fcmovne
shr
loop
mov
sar
clc
pop
not
leave
fmull
rcr
rcl
lods
cmc
out
enter
mov
cld
mov
or
or
or
fucomi
mov
out
out
jmp
iret
cli
scas
aad
sti
call
shl
out
icebp
inc
or
jecxz
adc
jmp
leave
imul
not
hlt
mov
out
out
mov
mov
add
cld
loopne
repnz
into
rep
hlt
lods
out
int3
lds
neg
add
out
or
add
fdivr
add
loop
scas
ret
loope
scas
stc
ljmp
repnz
mov
neg
add
std
add
in
sarl
mov
lock
imul
loope
push
mov
into
leave
adc
ret
repnz
mov
iret
mov
in
mov
in
jmp
lock
xlat
clc
std
loop
jmp
aad
jecxz
lret
lods
fcomi
sar
repz
fsubrp
or
stc
ret
lret
push
clc
int3
push
mov
into
mov
iret
mov
repz
rcr
std
loopne
std
clc
lock
stc
loop
stc
jmp
shl
call
into
leave
cli
in
add
ret
push
or
fimuls
enter
jmp
mov
incl
add
rcr
add
sti
leave
loopne
or
int3
int
mul
in
mov
into
shlb
loope
iret
hlt
lock
std
lret
push
loope
fldln2
fimull
jmp
stos
repnz
mov
call
cmc
int
cld
incb
lar
jmp
icebp
mov
rol
lret
fcmovb
xlat
mov
push
call
rolb
xlat
mul
cli
add
mov
lock
enter
fcmovne
jmp
repz
lret
lock
hlt
aad
cld
fcmovb
mov
mov
in
rcr
xlat
jmp
fsubr
leave
mov
mov
aad
iret
out
loop
iret
loopne
mov
mov
fdiv
out
rcr
jmp
aad
hlt
add
loope
in
shrl
out
loopne
into
les
loopne
sar
add
ljmp
loop
icebp
lock
fsubr
int3
cli
std
loop
idiv
pop
out
cli
mov
aam
enter
mov
shl
lret
jmp
iret
sti
rcr
mov
int3
fiaddl
push
fiadds
out
or
jmp
scas
loopne
enter
lock
mov
mov
call
lods
repnz
mul
mov
rcr
icebp
in
fcomi
fucomip
ret
cli
add
mov
mov
iret
lods
repz
lds
lock
fiadds
clc
sti
shl
fimuls
into
fcomp
mov
jmp
in
jmp
leave
lret
repz
xlat
mov
psubsb
ljmp
int3
jmp
shr
mov
aad
jecxz
cmc
jmp
loop
out
lret
lds
mov
repnz
into
shlb
into
fyl2x
icebp
mov
aam
or
in
out
lret
scas
lret
aad
lret
cli
xlat
fcomip
lret
icebp
cmc
mov
out
or
push
stc
add
mov
shlb
sti
int3
mov
out
neg
ret
jecxz
fldl
add
fmul
ror
xlat
lret
clc
int
xlat
sti
mov
loopne
add
ret
repz
jmp
loope
aam
lock
mov
mov
std
out
push
out
fsub
ljmp
loop
jmp
clc
call
testb
jecxz
in
out
add
in
iret
imul
lret
mov
std
enter
stc
repnz
std
lock
aam
add
in
lods
lds
ror
mov
cmc
mov
iret
out
fisubrl
rol
ret
sar
leave
into
aad
shl
stc
out
jmp
in
push
add
out
adc
iret
repz
in
into
in
out
cli
cmc
fcmovnu
shl
add
neg
out
pop
or
cli
mov
out
mov
mov
fcmovu
dec
cmc
rolb
fdivp
or
in
into
jecxz
leave
jecxz
mov
mov
fxch
into
fst
clc
fcomip
mov
cld
out
cld
jecxz
stc
shl
loopne
cmc
rol
in
out
call
fnstcw
fst
fmul
decb
pop
out
ret
test
mov
in
in
jmp
mov
out
cli
fsub
ret
jmp
leave
or
lret
out
loope
into
into
repz
hlt
iret
mov
add
mov
rcr
mov
leave
dec
add
shll
int3
lret
mov
filds
push
fdivr
push
call
cmc
aad
sti
mov
fnstenv
loope
cmc
cld
push
pop
xbegin
out
loopne
lock
xlat
loopne
leave
call
mov
fdivrl
lret
in
ljmp
iret
aam
mov
mov
mov
divl
mov
rcl
jmp
into
cmpsb
mov
in
xlat
sti
xlat
hlt
in
hlt
cld
mov
aam
ret
jecxz
stc
les
push
ljmp
rol
lods
loop
jmp
neg
mov
clc
fsub
jmp
loopne
add
in
out
faddp
repz
lods
mov
stc
out
mov
aam
mov
call
ret
int
enter
int
int
icebp
rcr
ror
ret
pop
cmc
mov
iret
push
repnz
ror
in
aam
leave
lods
in
shr
out
jecxz
add
rcl
rolb
jmp
add
iret
mov
enter
jmp
lock
mov
jecxz
add
fisttpll
sti
aam
clc
icebp
test
mov
in
fxtract
loope
int3
out
loopne
jecxz
xlat
clc
fmull
in
cld
out
in
jmp
ljmp
mov
int
idiv
add
out
jmp
out
ror
cli
sti
cli
xlat
mov
mov
fxch
fucom
lret
leave
call
imulb
in
shl
in
sti
rcr
fsubrp
hlt
fcom
ret
loopne
fld
std
cld
cli
out
jecxz
ljmp
rcr
jmp
shr
in
mov
jmp
enter
jmp
leave
int3
mov
mov
loop
mov
icebp
rolb
out
fiaddl
fmull
les
mov
clc
aad
out
mov
sar
loop
loope
jmp
lret
adc
shr
lock
les
xlat
mov
out
neg
add
shl
aad
sar
or
stc
mov
mov
shr
jmp
mov
push
jmp
mov
adc
ret
jmp
mov
mov
out
mov
rol
fsub
add
clc
loop
stc
mov
loope
out
call
cld
int3
loopne
jecxz
int3
fcmovu
rorb
leave
lret
or
int
int3
mov
cmc
fnstcw
imul
out
lock
flds
loop
cld
filds
loop
out
ror
enter
call
sti
aam
hlt
std
aam
std
lds
add
lret
lock
in
cli
std
jmp
into
into
rcr
add
out
fldl
or
fildl
scas
shrb
in
mov
fcmovbe
aad
repnz
aam
clc
out
fmul
fcomp
shl
mov
in
iret
mov
call
mov
out
fdivrs
clc
clc
call
test
out
in
jmp
mul
cli
idivl
aad
ret
aad
hlt
lret
add
fnsave
xlat
enter
in
shl
fildl
jmp
fucomip
loope
into
shlb
out
in
fcmovnu
int3
idivl
or
or
xlat
cmc
in
adc
loope
jecxz
hlt
jmp
icebp
not
hlt
jmp
repnz
loop
stc
loopne
add
mov
ffree
leave
loope
lret
ljmp
dec
mov
ret
loopne
hlt
loopne
mov
lret
xlat
scas
mov
cmc
enter
fmul
int
aam
mul
add
out
or
fadd
loop
shrb
out
shlb
add
sti
lock
jmp
leave
cli
out
lods
shl
fucomp
lret
enter
jecxz
int3
call
or
in
or
sti
out
or
ret
aam
mov
stc
mov
pop
in
aad
cli
fadds
ljmp
mov
cli
jmp
lret
lock
repnz
lret
out
out
iret
iret
repz
cmc
fucomi
mov
jmp
mov
mov
mov
psadbw
or
in
jecxz
int
mov
shl
jmp
repz
pop
add
std
shr
out
leave
add
loopne
ret
loopne
mov
repz
int
sarb
pop
lock
vpaddd
fucompp
test
lret
enter
mov
shl
add
ret
add
fisttpl
out
stos
mov
loope
lret
in
clc
ljmp
or
add
add
scas
jmp
xlat
out
icebp
cmc
lods
mov
icebp
lret
loop
mov
loope
not
sti
cli
repz
in
ror
mov
fistpll
shl
fsub
or
movl
loope
mov
in
in
idiv
repnz
out
loop
ftst
div
hlt
or
lret
add
push
in
in
rep
cmc
jecxz
repz
sarl
add
cli
fsub
in
call
mov
int
sti
mov
enter
clc
out
fsub
add
jmp
cmc
incb
loopne
iret
mov
mov
mov
lret
in
mov
loope
ret
incb
repnz
icebp
loop
out
loope
or
icebp
into
lret
repnz
mov
ror
into
fdivr
mov
loope
int3
in
icebp
mov
push
leave
jmp
lret
jmp
scas
mov
into
loope
ret
aad
flds
or
loopne
fcmove
into
or
shlb
hlt
rol
hlt
in
call
out
sti
fnstsw
int
out
ror
leave
lret
into
fcmovnu
mov
hlt
rolb
mov
add
cld
loop
call
into
xlat
out
mov
fucomi
fidivs
rol
xlat
sar
jmp
cld
fsubrp
stos
repnz
mov
out
out
fcomp
enter
lock
mov
repz
in
in
add
lret
test
call
stc
out
jmp
ret
repz
sti
add
sti
jecxz
std
add
in
jmp
lret
in
in
cli
out
in
mov
mov
loopne
neg
leave
into
or
lods
in
lret
out
lock
rcl
iret
int
clc
lock
into
xlat
mov
fildl
or
stc
fmull
in
lods
test
lret
lret
xlat
mov
stc
fmull
jecxz
rcr
jmp
shr
test
enter
mov
clc
sti
repnz
push
std
or
add
clc
call
ljmp
iret
fidivl
fiaddl
aam
in
in
or
fadd
fimuls
mov
add
sub
inc
sbb
xor
xor
adc
xor
movl
mov
mov
addl
mov
subl
cltd
orl
sub
sbb
xor
subl
xor
mov
movl
mov
movl
mov
movl
mov
movl
mov
cmp
movl
jne
mov
mov
cmp
je
andl
mov
add
movl
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
xor
sub
sbb
xor
xor
xor
xor
jmp
adcl
ss
icebp
xchg
pop
jnp
stos
cwtl
jnp
stos
out
repnz
mov
clc
mov
jmp
icebp
std
neg
ljmp
fcomp
icebp
call
ret
mov
int
fidivrs
pop
neg
fdiv
out
rol
cmc
jecxz
stc
leave
fucomip
divb
mov
rcl
mov
or
add
lret
cli
int3
jmp
mov
stos
rcl
aad
repnz
mov
cli
lock
cmc
jmp
fsubr
sar
jecxz
out
in
loope
mov
call
sti
ror
cld
rorb
out
or
roll
filds
bswap
scas
test
mov
not
hlt
mov
lock
mov
shl
ffree
jmp
lret
or
or
mov
in
in
stc
mov
in
mul
out
lret
loope
out
jmp
lret
mov
int
mov
call
fdivrs
fcmovb
clc
leave
hlt
movb
out
shrl
in
jmp
repz
lock
lock
clc
add
fdivrp
call
in
call
in
mov
aam
mov
aad
std
repz
in
add
lret
loopne
enter
loopne
jmp
mov
cli
iret
iret
call
sti
out
out
int3
lock
std
ljmp
int
mov
iret
stc
in
mov
jecxz
cmc
rolb
enter
repz
test
shr
into
fcmovbe
repnz
add
aad
call
or
mov
shrl
aad
mov
shr
cld
rcr
faddp
out
cli
into
or
or
lds
jmp
out
jecxz
mov
aad
jmp
hlt
les
mov
aam
mov
fidivrs
leave
fdivrp
int3
rcr
add
call
in
fidivl
mov
loopne
out
call
iret
leave
jecxz
out
mul
loopne
les
in
push
repnz
out
mov
call
mov
xlat
clc
rcl
out
fcmovbe
sti
std
sar
or
call
neg
icebp
in
in
fnstenv
cld
fcmovu
or
or
into
fcmovb
out
out
fmul
out
fdivrs
rol
shl
in
fcmovu
push
fabs
in
or
out
lods
stos
out
repz
hlt
hlt
lock
int
aam
fstp
fsubr
aam
lock
lret
add
in
icebp
mov
mov
loopne
out
idivb
mov
fstp
fldl
clc
adc
int3
mov
mov
enter
cld
idivb
div
loope
add
fiaddl
lret
add
rcr
test
shr
ror
mov
in
iret
int3
mov
loop
rolb
cld
push
add
loop
add
in
fucom
repz
hlt
lods
jmp
mov
in
cmc
mov
rcl
mov
cld
clts
push
les
repz
in
call
std
leave
lock
add
loope
add
lds
stos
iret
mov
iret
mov
jmp
fcmovnu
fdivrs
in
fisttpll
or
lods
icebp
mov
fadd
out
repz
sti
iret
cli
cli
stc
sti
out
lret
out
pop
clc
fmul
call
mov
int
enter
enter
aad
or
rol
hlt
jmp
shr
in
sar
fcmovnu
inc
idivb
mov
pop
incb
add
fcmovne
fcomp
lods
out
ror
int
fcmovnbe
fidivrl
icebp
in
add
rolb
fisttpl
std
out
or
in
in
jecxz
ljmp
mov
sti
repz
mov
pop
add
aam
out
in
shl
lods
out
int3
mov
mov
jmp
sar
mul
mov
add
in
add
scas
scas
mov
loop
repnz
cli
aad
fstpt
push
aad
incl
xlat
imul
call
int
enter
leave
ljmp
out
xlat
stc
in
std
icebp
mov
decb
in
fdivs
jmp
mov
aam
clc
out
add
rorl
fcomp
in
rcr
ffreep
scas
ret
sti
lock
in
mov
mov
fadd
or
out
aam
or
ror
lret
icebp
stos
fdivl
into
aam
int3
mov
push
decl
fildl
out
ret
mov
int3
xlat
shll
in
clc
jmp
ret
in
add
add
out
loope
in
out
fdiv
mov
cmc
mov
rcl
fstpt
loopne
rcr
sar
stc
loopne
or
out
stos
fadd
shl
lret
int3
jmp
ljmp
fdivp
fucomip
loop
loopne
pop
add
mov
out
sar
mov
imul
in
stc
out
sar
jmp
ljmp
repnz
mov
out
xlat
shlb
mov
add
add
ret
sti
fscale
out
faddl
aad
mov
rcl
repnz
mov
hlt
cmc
cli
add
out
fsub
adc
in
shrb
call
fadds
jmp
ffree
cli
aad
iret
fldl
or
ret
stos
in
out
mov
lret
sarl
xlat
fiaddl
roll
psubusw
add
test
rcl
in
mov
lret
aam
shl
fadds
in
loope
fcmovne
jecxz
xlat
repnz
lret
in
cmc
out
xlat
clc
add
shl
clc
xlat
add
repnz
mov
add
lods
test
enter
out
shr
out
clc
loop
mov
rolb
jecxz
add
loop
add
call
mov
enter
sar
mov
std
aad
or
rcr
scas
shr
scas
leave
int
div
sti
lret
mov
fsub
add
fdivr
loope
in
fcomip
ljmp
mov
int3
call
mov
pop
loope
cmc
incb
enter
mov
out
ret
ret
in
mov
out
out
mov
loop
aad
psllw
lods
jmp
ror
xlat
repnz
iret
call
add
fdivl
add
hlt
or
loopne
into
adc
int3
mov
fcmovnbe
lods
fcmovnu
mov
loop
stc
repz
in
into
jmp
mov
int
enter
idivl
cli
out
lock
sti
add
pushl
call
in
repz
in
fdiv
cld
add
out
fscale
or
int
mov
aad
into
int3
fdivp
shl
sti
jecxz
cmc
leave
into
or
repnz
out
mov
mov
clc
in
int3
call
mov
add
fadds
incb
or
out
ljmp
out
out
rcl
mov
loopne
mov
aad
fdivrs
shl
shlb
mov
repz
std
lret
xlat
xlat
int
sti
lock
or
shr
pop
call
loopne
out
leave
loop
aad
mov
xlat
shl
repnz
rol
xlat
cmc
fucom
cld
enter
call
in
stc
repnz
sar
jecxz
out
flds
add
aad
cli
fcos
sti
jmp
fsubrp
hlt
fpatan
in
fucomi
mov
lret
mov
clc
ret
pop
hlt
cmc
lret
loop
leave
loope
mov
out
out
shr
out
div
repnz
loope
icebp
sti
fld
call
out
fadd
icebp
scas
mul
loop
in
enter
in
div
into
xlat
in
loope
cli
in
les
in
add
int3
in
mov
in
leave
cmc
sar
dec
mov
lock
add
rcr
fucomip
loopne
iret
lods
icebp
hlt
mov
call
mov
fstpt
cld
push
testl
or
mov
mov
int3
shl
out
hlt
ret
in
out
icebp
ret
cld
ffreep
lret
shl
add
loopne
mov
iret
stc
aam
mov
les
into
flds
add
iret
or
mov
lods
mov
mov
jmp
jecxz
std
out
clc
lock
add
loopne
in
loopne
pop
rcr
lods
call
mov
in
std
iret
aam
hlt
repnz
mov
ret
faddp
add
ljmp
icebp
mov
mov
mov
out
xlat
cld
loope
cmc
out
lret
pop
or
mov
out
repnz
rcl
mov
mov
enter
shl
jmp
fcmovb
ljmp
loop
sarl
mov
inc
int
cld
ror
or
std
fld
or
cmc
mov
enter
neg
into
fmul
fdiv
loope
shl
mov
push
jmp
in
ror
test
fcomp
add
mov
aam
lock
stc
cli
fimuls
mov
mov
mov
out
std
add
mov
out
cli
ljmp
scas
mov
lret
lret
cli
mov
fnstcw
add
ret
jecxz
ljmp
enter
loop
out
mov
fcomip
out
add
loopne
ret
shr
push
or
into
test
out
rcl
aad
sarl
jmp
out
or
fdivp
mov
int3
lock
in
std
mov
mov
or
pop
aam
int3
rcr
cmpsb
mov
in
mov
faddp
in
clc
fstpt
in
repz
dec
lret
in
fidivrs
stos
out
mov
lock
xlat
in
enter
ret
fadds
stc
add
loop
push
push
jmp
rol
into
mov
fldpi
rcl
mov
out
in
mov
jecxz
loope
pop
lret
fnstcw
mov
out
mov
mov
out
out
add
add
aad
add
ret
int3
lods
out
aam
mov
scas
cld
sti
hlt
mul
loope
cmc
div
lret
or
loope
iret
cmc
lds
shr
mov
in
ret
sti
fadd
sar
out
fmull
fmulp
lods
repz
cli
cmc
not
stc
aam
sar
std
mov
mov
test
loopne
in
aad
cli
aad
rcl
xlat
mov
shl
lock
fsubrp
in
fsub
mov
add
shr
into
ret
lock
shlb
mov
out
repz
repnz
shl
ljmp
in
lret
enter
iret
shll
into
loop
std
mov
rolb
add
mov
scas
mov
test
in
clc
fidivrl
lock
or
filds
loopne
shr
shl
out
call
int3
iret
test
int
rcl
jmp
hlt
call
in
shl
in
int3
into
ret
mov
lret
int
add
aad
cli
add
lret
shr
out
in
int
repz
fdivl
repnz
fadd
in
fisttpl
or
lret
rcr
lods
out
ljmp
std
ljmp
mov
add
in
leave
into
fldcw
lret
cli
sti
mov
out
repz
mov
adc
cmpsb
ret
repnz
in
imul
xlat
lock
mov
fucomp
aad
add
jecxz
or
in
or
repnz
fcmovu
clc
call
out
mov
loopne
ret
jmp
std
rcl
out
stos
movsl
cli
shl
clc
mov
mov
test
jmp
test
shrb
mov
fcomp
out
aad
mov
pop
mov
jmp
cld
sti
rcl
iret
repnz
in
fcmove
in
call
int3
repz
fdivrp
lret
out
add
in
in
lret
hlt
lret
lret
lret
aad
add
fdivr
mov
in
or
rcl
out
mov
in
ror
jecxz
loopne
filds
cli
cld
sti
or
pop
fucom
scas
in
shl
int
hlt
fdiv
in
int3
jmp
jmp
clc
jmp
loop
fsubr
std
or
rol
mov
lods
aam
in
idivl
out
fidivrs
jmp
push
std
out
lods
iret
in
enter
in
pushl
fabs
aam
inc
aad
fdivrp
loope
clc
leave
fsub
loope
icebp
test
shr
out
clc
aam
jecxz
ret
flds
cld
aam
jmp
cli
repnz
mov
jmp
in
ffree
add
loop
not
std
lret
out
iret
int3
call
mov
test
mov
mov
loope
call
fdiv
mov
ret
mov
clc
in
aam
shr
aam
out
shl
fcmovu
out
jecxz
std
pop
or
mov
mov
mov
lret
aad
mov
int
int
fneni(8087
rcr
fcmovnbe
std
fildl
loop
loop
out
ret
ljmp
neg
cmc
mov
fisttpll
add
push
or
shr
test
mov
repz
fstpt
loope
cmc
cli
flds
pop
lret
in
push
fdivrl
into
out
mov
in
mov
mov
rcr
rcl
lds
ljmp
mov
jmp
lret
mov
jmp
add
hlt
aam
add
call
ljmp
in
std
repnz
cld
in
mov
xlat
fdiv
stc
pop
fiaddl
add
out
repnz
mov
int
loopne
in
out
shl
ret
push
loop
loop
or
aam
aad
adc
out
jecxz
mov
ror
idiv
not
mov
repnz
rcr
loope
jmp
jecxz
movsl
mov
mov
cmc
aad
mov
out
rcl
idiv
test
push
ror
in
push
or
not
lods
int
cmc
fidivrl
out
hlt
ljmp
sti
in
test
mov
mov
mov
fiadds
mov
pop
mov
add
fdiv
stos
call
call
test
std
rol
cmc
clc
fisttps
pmulhuw
stos
int3
ljmp
aam
in
mov
loopne
ljmp
pop
std
lret
in
mov
fcmove
fdiv
fstpt
cli
repz
ret
cmc
leave
int3
in
les
mov
fnstsw
icebp
faddp
or
stc
rorb
fsubrp
faddp
or
out
mov
out
lock
shl
mov
in
rcr
movb
fsubrp
in
jecxz
add
lock
jmp
cli
in
cmc
add
mov
fdivp
or
ljmp
in
icebp
fcmovne
lock
into
fldlg2
ret
stc
cmc
push
add
iret
in
fsub
into
imulb
shll
into
fld
fcmovnu
lock
push
test
push
fstp
call
repnz
rcl
mov
cli
jmp
fdivrp
ljmp
clc
aad
call
cli
add
lods
into
lock
enter
cld
cli
aad
fiaddl
or
std
mov
out
clc
leave
call
out
in
mov
aam
iret
ret
std
lock
out
movl
fucomp
mov
aam
xlat
test
in
hlt
mov
add
or
decb
cld
ror
rcl
int3
int
out
sti
mov
call
fdivr
pop
ror
fiaddl
cmc
add
leave
in
mov
lret
out
stc
sti
in
leave
std
add
pop
shl
shl
int
fisttps
fsub
rcl
mov
shr
icebp
repz
fdiv
icebp
mov
add
lret
or
add
loopne
out
mov
lods
mov
out
neg
aad
in
fcomp
in
repnz
lret
in
pminsw
add
shr
ffree
mov
neg
call
clc
ret
mov
loopne
jmp
xlat
filds
jecxz
stc
shr
bnd
into
mov
hlt
idiv
fnstsw
std
rcl
shl
fdivp
jmp
shl
mov
mov
jecxz
mov
aad
fcmovnb
fdiv
div
pop
ret
aam
in
loopne
jmp
iret
jmp
sar
fcmovne
int
lock
xlat
add
add
add
add
loopne
int
divl
mov
icebp
ret
mov
fcomp
fmull
not
into
sti
or
ljmp
fidivrl
cld
fsubp
mov
loopne
std
push
or
repnz
scas
lods
repz
fucomip
in
aad
lret
call
fdivr
inc
testl
pop
fcomip
ret
scas
ljmp
fcmovbe
mov
sarl
iret
lret
in
shrl
call
leave
faddp
jmp
in
out
movl
pop
call
jmp
int
mov
mov
mov
stc
in
add
repz
loope
in
cli
cld
add
jmp
ret
mov
lock
add
shl
repz
or
ret
out
int3
sti
lret
in
mov
mov
ljmp
jmp
in
lret
call
mov
out
mov
lock
jmp
adc
jmp
jmp
in
rcl
out
int3
ljmp
add
std
out
jmp
fdivr
jmp
scas
shl
loopne
jmp
in
fstp
out
fdivr
aam
loope
std
or
int3
fsubrp
mov
in
ret
in
shlb
in
fdivrl
xlat
fcmovbe
out
out
call
mov
mov
shlb
icebp
fadds
add
lret
in
jmp
enter
out
xlat
mov
mov
mov
jecxz
loope
aad
out
shl
in
sti
in
mov
enter
out
aad
aam
fxch
in
ror
stc
rcl
cld
shl
or
fcmovnu
movl
shl
ljmp
lock
std
mul
lock
add
filds
call
lods
shl
mov
jmp
call
int3
mov
add
out
add
scas
shl
int
jmp
mov
stc
rcr
mov
or
clc
lret
out
sti
mov
clc
call
xlat
test
loop
push
loopne
fisttps
stos
in
jmp
shll
stc
fdivrp
fmulp
rol
repnz
loopne
out
rcl
ljmp
in
test
int
mov
mov
lock
loop
out
ftst
loop
scas
loop
test
std
lock
dec
add
cmc
lret
add
into
push
mov
ret
int
scas
in
aad
fildl
enter
mov
xlat
mov
fdivrp
shr
rcl
ret
lods
enter
lret
mov
sarb
fucomp
std
pop
in
shl
rol
leave
lods
mov
xlat
mov
int3
fdivr
stc
add
ret
ret
in
push
int3
shlb
out
in
sarb
add
add
sti
add
cli
call
out
stos
stos
jmp
mul
jecxz
enter
leave
repnz
rcr
mov
or
hlt
std
leave
into
in
lods
shlb
ret
iret
mov
loop
loopne
lret
stc
fadd
call
int
loope
out
sti
std
int3
rcr
call
sti
add
hlt
leave
or
loop
lock
in
stc
stc
int
lret
mov
mov
or
adc
enter
out
lock
lret
lret
call
loopne
fdiv
out
call
fld1
test
fcmovnbe
ret
out
leave
out
hlt
out
leave
shl
in
icebp
add
loop
push
jecxz
out
shrb
ret
mov
fcmovnbe
call
loope
bnd
in
std
xlat
jmp
in
icebp
ret
int
rcl
loop
rcl
mov
fucom
std
cli
hlt
aam
aad
aad
std
pop
loope
int3
add
jmp
test
jmp
aam
mov
out
loop
or
out
jecxz
scas
in
icebp
leave
aad
loop
loopne
fdivrp
idiv
idiv
faddl
fmulp
repnz
faddl
out
fstp
fmul
out
mov
enter
add
add
add
std
out
fildl
aad
lret
out
rcl
repnz
into
leave
mov
fcmovbe
or
push
lret
jmp
out
clc
fucomip
in
lret
iret
aam
sti
ret
enter
call
into
loop
aam
fmul
shr
or
leave
les
in
xbegin
loope
out
iret
add
loope
repnz
scas
mov
in
mov
enter
ret
mov
call
add
lret
std
mov
lods
fnsave
lods
mov
mov
cmc
aam
jecxz
mov
fucomip
lock
fimuls
or
cmpsl
shr
mov
lds
in
ljmp
fcomi
jmp
shl
hlt
psubb
call
ret
mov
fidivl
cmc
out
idivl
rcr
or
sti
fucom
cli
mov
mov
iret
fprem1
leave
fucomp
jecxz
xlat
cmc
into
add
add
add
testl
in
repz
out
fstpt
icebp
fdivrl
out
mov
jecxz
out
cld
loope
shr
in
loop
fcmovnbe
into
vpaddq
ljmp
xlat
aam
ror
pop
incb
lds
out
shlb
fcom
aad
lock
shl
pop
std
into
shl
out
mov
cmc
out
lock
in
faddp
cli
sar
rol
pmaxub
cli
repnz
ret
shr
cld
fidivrl
stc
in
loopne
filds
mov
in
mov
divl
stc
fldlg2
sti
mov
cmc
or
clc
fld
out
std
add
int
aad
shl
xlat
in
fcom
jecxz
loope
cli
fiaddl
movb
incb
icebp
fbstp
in
test
push
in
fstp
add
in
cld
or
cld
scas
loopne
shr
loopne
sarb
mov
loope
out
aam
fsubrp
out
into
into
icebp
call
out
lock
loope
out
in
loope
mov
fprem
les
in
add
ret
lret
in
fstpt
mov
add
loop
jecxz
or
iret
int
call
repnz
hlt
in
int
cld
mov
mov
lret
in
ljmp
lods
sti
mov
mov
mov
ret
icebp
loopne
idiv
jmp
lret
lret
out
shl
aam
mov
leave
aam
not
icebp
fsub
in
or
loop
int
in
push
rep
iret
out
out
int3
sar
sarl
ret
mov
sti
lret
lret
cld
int
test
mov
test
mov
in
lock
push
or
test
enter
fstpt
cld
ret
aam
mov
jmp
call
aam
jecxz
clc
fmul
in
sarb
jecxz
hlt
xlat
in
call
cld
fimuls
loop
repnz
rol
ror
mov
call
fstpt
in
aam
push
clc
out
push
jmp
divl
mov
in
repnz
inc
out
mul
ljmp
bswap
pop
out
lods
aad
out
cmc
enter
test
enter
clc
sti
int3
shl
sti
out
clc
out
ljmp
shl
test
scas
ljmp
stc
rol
or
lret
cli
call
int
mov
scas
mov
stc
ljmp
stc
int
mov
add
or
jmp
lret
out
enter
add
loope
pop
mov
lret
fld
fcom
add
mov
mov
into
cmc
fmul
enter
hlt
fstpt
or
aam
std
out
lds
clc
adc
ret
in
shl
ljmp
clc
pop
mov
jmp
loope
out
stos
mov
scas
iret
cli
into
mov
out
add
shl
mov
stc
add
push
int3
out
or
iret
enter
fcmovnu
leave
in
mov
shr
add
stc
add
aam
call
out
into
lods
out
cli
test
aad
add
ret
loopne
cli
testl
loope
fcomip
into
shl
mov
fdivr
cmc
shl
rcr
fisttps
aam
shl
cli
in
icebp
lock
out
ret
mov
aam
in
iret
mov
fdivrl
cld
in
or
or
scas
mov
jmp
iret
ror
cmc
mov
mov
std
add
add
in
in
bnd
mov
aam
out
aam
mov
mov
fsub
sti
iret
push
fld
or
out
call
enter
sarl
fsubrp
clc
rcr
icebp
lret
add
pop
mov
les
icebp
lock
std
mov
jmp
in
add
shrl
mov
mov
mov
fmulp
jecxz
rol
shr
out
lret
paddsb
test
out
movsb
mov
in
mov
in
std
mov
fidivl
jmp
mov
int3
lret
shrb
test
rcl
test
neg
incl
vshufpd
cli
pop
lret
loopne
mov
shrb
mov
fdivrs
loop
out
movb
fdiv
shr
loopne
mov
lock
call
int
fucomip
cld
add
add
fadd
ljmp
mov
cld
idivb
ret
fisttpl
in
push
or
mov
lret
mov
mov
jmp
fiadds
add
sti
ret
call
lret
in
call
mov
std
xlat
fcmovbe
cli
test
fld
or
loop
fldcw
jmp
in
rcr
aam
mov
shl
out
rcr
cli
jmp
sar
add
scas
mov
cli
repnz
repz
aad
fcmovu
loopne
loopne
fisttpll
add
add
rol
int3
out
mov
loope
rcl
in
jmp
sar
neg
add
fcom
fmul
out
int3
lods
in
into
ror
repz
fcmove
enter
add
fcmovnu
out
or
fucom
in
int
out
lock
fadd
in
mov
fnstenv
sar
fcomip
ffreep
cmc
repnz
sti
fucomi
cld
leave
out
in
fsubr
lret
repz
mov
iret
in
jmp
clc
add
ljmp
add
fmul
call
mov
mov
sar
stc
fyl2x
add
jmp
leave
cld
in
dec
adc
mov
mov
jmp
ror
idivl
fidivrl
or
or
ret
add
add
shl
mov
sti
in
inc
mov
jmp
in
cld
mov
hlt
lret
aam
call
out
in
mov
in
mov
hlt
mov
stc
fdecstp
in
loopne
clc
hlt
aam
fadds
fmul
loope
adc
mov
rcr
jmp
mov
fdivr
stc
sti
in
add
aad
fcomp
pop
jmp
int3
out
out
enter
cmc
jecxz
in
loop
mov
std
std
repz
lods
rcl
jmp
in
mov
mov
loope
cli
std
cmc
hlt
lret
out
add
movsb
lock
ljmp
rcl
aam
mov
mov
rol
or
adc
leave
mov
loop
xlat
lods
mov
ret
enter
out
repz
clc
cld
or
out
fsub
lret
mov
lret
imul
iret
lret
mov
iret
out
cli
lock
xlat
fiaddl
out
add
fstp
icebp
loop
call
jmp
sarb
sti
cmc
inc
lret
rcl
push
hlt
fxch
in
or
lret
lret
shl
int
sti
fcomp
cmc
loop
ret
in
neg
fildl
add
icebp
fmul
mov
in
fucomip
aam
dec
std
add
idivl
mov
leave
std
pxor
in
fucomp
hlt
ret
stc
aam
repnz
clc
into
fcomi
mov
sar
aam
scas
mov
test
int3
in
jecxz
cli
rcr
rcr
out
lock
jmp
repz
enter
scas
lret
mov
mov
mov
xlat
aad
inc
fadd
jecxz
fimull
jmp
out
in
fsub
ljmp
out
lret
mov
sarb
cld
out
pop
or
fcom
icebp
out
ljmp
ljmp
loope
add
cld
add
fbstp
lods
lret
loope
mov
test
std
cld
jmp
loop
mov
fmul
out
div
out
mov
int
lods
mov
loopne
out
rcr
call
sti
hlt
out
int3
loope
lret
in
div
test
mov
lret
jmp
loopne
out
fadds
add
jmp
or
mul
call
mov
in
loop
ljmp
fnstenv
repnz
ret
clc
rol
fucom
ret
fdiv
aam
or
enter
enter
mov
sti
fyl2x
mov
in
shr
fucom
rcl
cld
sti
loope
fucomi
lret
out
hlt
sti
iret
xlat
jmp
fcmovne
repnz
fdivr
int3
pop
not
or
in
add
out
repnz
aam
ret
mov
icebp
call
fmulp
push
ret
fdiv
loopne
decl
pandn
mov
ljmp
std
out
sarl
mov
loope
out
or
loope
shr
mov
out
shll
jmp
mov
pop
loope
ljmp
rcr
aad
fcmovnbe
rol
mov
cld
jmp
ret
aam
lock
add
fdivr
or
cmpsb
in
mov
in
imul
int3
mov
in
aad
shl
add
fadds
in
fildl
adc
in
int
fsubrl
imul
mov
mov
cmc
loop
repz
add
mov
rol
lret
aad
mov
repnz
mov
int
out
add
testb
sti
pop
in
ffreep
call
ret
in
ljmp
add
cmc
add
cld
mov
lret
fld1
ret
rol
out
shl
mov
mov
lock
clc
fcom
vpmaddwd
shr
lds
aad
out
cmc
imul
into
out
shl
testb
aam
jecxz
or
movups
jmp
out
sti
sar
mov
fstpt
in
icebp
out
fucom
rcl
lret
mov
fucomi
in
clc
mov
jmp
ret
ret
aad
idiv
push
xlat
lret
cli
mov
ror
out
mov
fldl2t
fdivp
fsincos
xlat
in
roll
add
fsubp
or
incl
in
pop
lret
lret
in
test
lods
mov
lret
mov
lret
std
fnstsw
out
loope
mov
ror
int
icebp
ljmp
mov
clc
std
aam
fsubp
cmc
in
call
int
icebp
in
icebp
lods
cli
in
sti
in
shl
stc
int
std
fcom
aad
or
mov
int3
shr
imul
mov
loope
ljmp
mov
add
add
out
lret
or
add
in
ljmp
jmp
in
fmulp
bnd
in
sar
jecxz
jecxz
out
cld
ljmp
in
clc
neg
in
int3
mov
add
add
or
add
iret
shl
shl
aad
divb
mov
inc
inc
add
dec
cld
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
xor
add
adc
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
mov
xor
sub
sbb
xor
xor
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
sub
subl
push
or
push
movl
or
movl
mov
xor
movl
add
mov
cmpl
movl
je
adc
mov
adcl
mov
movl
mov
decl
mov
sbbl
xor
adcl
add
mov
sub
mov
orl
xor
addl
add
adcl
mov
subl
mov
sbbl
xor
add
mov
movzbl
xor
mov
xor
add
movl
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
lea
mov
sub
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
sbb
xor
sbb
mov
sub
sbbl
xor
movl
cmp
movl
je
mov
xor
add
cmp
movl
jne
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
movl
mov
orl
movsbl
cltd
xorl
sub
movl
sbb
xor
andl
xor
movl
mov
mov
movl
cmpl
movl
jne
movl
cmpl
movl
jne
adc
mov
and
mov
add
andl
xor
add
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xorl
add
mov
mov
cmp
je
mov
movl
mov
jmp
sbb
mov
adcl
xor
add
movl
mov
jmp
mov
sbb
mov
mov
andl
xor
add
mov
and
mov
mov
sbbl
mov
addl
xor
add
movl
cmp
movl
jne
adcl
mov
sbbl
xor
subl
add
movl
jmp
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
mov
mov
add
movl
add
movl
mov
mov
adcl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xorl
imul
cmp
movl
jne
sbb
mov
sub
xor
movzbl
add
add
add
mov
xor
andl
add
andl
imul
movl
mov
movl
jmp
jmp
lea
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
add
dec
mov
jmp
mov
movl
mov
movl
mov
sub
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
mov
subl
xor
add
adcl
imul
movl
cmp
movl
je
mov
sbbl
xor
addl
add
mov
imul
addl
add
mov
mov
movl
mov
movl
jmp
jmp
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
dec
xor
adc
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
pushl
push
push
push
call
cmpl
jb
mov
xor
xorl
add
imul
movl
mov
movl
jmp
sub
mov
xorl
xor
xorl
add
movl
mov
jmp
sub
mov
xor
add
sbbl
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
jmp
in
xchg
sub
fs
jbe
jmp
jae
xchg
lret
jnp
out
jnp
cli
rolb
loopne
cli
rorb
mov
mov
stc
mov
fidivrl
loop
sti
std
lds
div
call
pop
iret
cmpsb
div
mov
mov
sti
icebp
clc
fdivs
shl
stc
fadd
rcr
test
fdiv
lret
sti
neg
jmp
clc
lret
mov
aad
xlat
bswap
add
jmp
in
mov
mov
ret
leave
into
fdivr
clc
add
in
icebp
pop
fiaddl
out
hlt
add
in
loopne
mov
mov
cmc
stc
int
add
loopne
mov
loope
or
adc
cmc
mov
clc
mov
int3
shl
in
out
add
lret
aam
adc
loop
hlt
aad
fsqrt
fdivp
repz
loope
cld
rol
cmc
or
loope
mov
mov
lds
iret
cmc
leave
mov
hlt
ret
imul
or
roll
ljmp
mov
clc
shr
lret
mov
shl
aam
out
leave
in
add
scas
stos
int3
lret
aam
fcmovnbe
fdivrl
out
add
lock
or
loop
enter
mov
mov
loop
mov
mov
aad
lock
cmc
cmc
les
add
out
fsubr
rol
ffreep
shr
shr
out
rcr
clc
ljmp
sti
cld
add
or
loope
aad
repnz
mov
cmc
loopne
jmp
call
mov
roll
rcl
sti
iret
leave
fmuls
mov
lods
mov
hlt
lret
mov
movb
ljmp
icebp
cmpsb
lods
out
ret
stc
repnz
clc
fnstcw
out
stc
loopne
ud0
fucom
in
fcomip
shl
aad
out
repnz
mov
shl
faddl
icebp
enter
out
or
into
jmp
fnstenv
jecxz
shl
int3
aad
push
xlat
call
movb
lret
ljmp
hlt
int3
out
lret
cld
out
cli
add
or
push
aam
push
stc
in
jmp
call
mov
int3
int
mov
hlt
jmp
std
in
pop
loopne
mov
lret
fcom
lock
rcr
add
testl
leave
jecxz
out
jmp
lods
div
aam
clc
repz
mov
rol
jecxz
loop
fstp
enter
mov
ror
neg
in
int3
jmp
aam
in
sarb
sti
in
lret
mov
loopne
in
mov
aad
fdivrs
cli
aam
jmp
or
aam
lds
jecxz
int3
loopne
enter
not
mov
sti
lret
std
add
out
ret
movl
mov
ljmp
fucomip
ffreep
mov
loop
out
decl
fsub
fmul
lock
in
scas
leave
leave
rcl
lret
std
cli
jmp
iret
int
add
lret
leave
hlt
cli
add
ret
scas
jecxz
jmp
jmp
mov
cli
icebp
out
out
neg
lret
std
out
out
ror
ret
xlat
in
hlt
xlat
mov
std
rol
int3
jmp
fldl
add
clts
fsub
enter
loopne
mov
mov
into
into
mov
iret
xlat
fucomip
jecxz
out
fsubr
clc
fxam
icebp
scas
scas
int3
call
lock
cli
fidivl
hlt
int
movb
loopne
jmp
fucomi
add
sarb
lock
mov
fildl
pop
ret
in
fsqrt
jmp
in
or
into
lods
cmpsb
jmp
mov
icebp
enter
in
stc
fildl
div
aam
fcom
jmp
add
add
bswap
loope
out
jmp
shr
icebp
mov
in
shl
rcr
lret
jmp
lret
cmc
add
or
mov
lods
imul
fdivr
lret
out
mov
clc
shl
std
out
ret
or
int
loopne
in
lret
mov
into
fcmovb
mov
fcmovbe
into
shl
hlt
sti
pop
sar
ret
push
pop
int
mov
mov
lret
mov
ffree
out
add
add
add
add
pop
in
lret
divb
hlt
xlat
ljmp
pop
add
add
out
ljmp
repz
lret
ror
mov
mov
or
ffree
or
loope
mov
shlb
cli
shl
fcomip
or
loopne
loop
call
enter
in
icebp
mov
out
clc
mov
add
fsubrl
ror
mov
out
shl
out
test
fsubp
fdivr
push
stc
repz
out
lods
mov
jmp
mov
int
not
add
cli
or
jmp
add
add
in
icebp
xlat
xlat
aam
mov
icebp
fcmove
jecxz
cmc
out
mov
add
hlt
adc
out
mov
leave
fidivl
mov
in
ret
sar
loope
vshufpd
out
loope
mov
in
lret
repz
int
in
sarb
mov
out
add
add
scas
out
mov
in
xlat
fnstcw
loop
add
cld
loopne
std
out
out
call
cmpsl
ffreep
mov
ror
dec
jmp
mov
dec
out
loop
fiaddl
add
enter
repz
lret
lret
mov
int3
fst
shl
xlat
ret
dec
hlt
push
out
in
shrl
jmp
out
mov
ljmp
rcl
or
ror
in
or
test
imul
mov
shl
repnz
fsub
mov
lock
ffreep
jmp
lods
out
mov
xlat
mov
mov
std
add
icebp
in
or
loopne
out
mov
idivl
lret
aam
iret
mov
ret
in
add
loope
fisubrl
int
lret
call
mov
mov
or
add
add
lret
add
loop
mov
out
mov
out
mov
hlt
fdivr
stc
icebp
into
mov
std
add
or
add
repnz
loopne
iret
int
mov
mov
into
mul
mov
call
out
or
repnz
in
out
mov
leave
stc
mov
std
rcr
repz
cld
in
hlt
in
sti
call
imulb
mov
lret
mov
roll
sar
loop
add
repnz
mov
lods
repz
mov
repz
lret
bswap
shl
mov
fcmovbe
out
lods
leave
idivb
loope
sar
ljmp
jmp
shr
mov
icebp
shll
test
icebp
loopne
sarb
aad
call
call
out
mov
fcmovnbe
neg
ror
loopne
out
mov
loope
lret
aad
stc
stc
repz
scas
out
iret
repnz
in
xlat
mov
cmc
or
hlt
lret
pop
iret
out
jmp
test
loopne
mov
mov
xlat
sar
in
hlt
rcr
or
mov
repz
rol
into
cli
les
fadds
mov
aad
or
loope
leave
iret
out
mov
aam
enter
mov
lret
add
loope
push
in
movsl
loope
jecxz
idiv
mov
repnz
icebp
shlb
pop
jmp
out
shlb
icebp
xlat
sarl
call
std
clc
shl
ljmp
push
std
jmp
mov
int
icebp
fucomi
mov
inc
std
idivb
add
add
fucomp
fst
mov
leave
test
cmc
in
int3
loope
cli
not
rcr
testb
push
in
or
psubusb
mov
jmp
mov
mov
lock
mov
ljmp
mov
rcl
out
int
loop
stc
aam
fadd
aad
add
leave
ror
into
div
int3
leave
shr
cli
fdiv
cmc
in
mov
ret
std
clc
cld
enter
loopne
out
xlat
mov
shll
add
lret
into
mov
add
cld
in
enter
mov
jmp
out
int3
not
shl
imul
mov
mov
add
add
fcmovnb
jmp
add
loopne
int3
leave
shl
loope
mov
mov
mov
fidivrl
add
bsf
add
jmp
ret
iret
lret
jmp
rcr
hlt
aam
repnz
aam
clc
add
or
stc
in
lret
scas
xlat
ret
loopne
loop
sti
out
in
out
cld
ret
ljmp
hlt
testb
out
out
push
adc
jmp
repnz
out
mov
int3
pop
xlat
cli
aam
in
or
jmp
in
hlt
jecxz
mov
mov
ret
hlt
push
incb
push
hlt
push
jecxz
or
or
rol
jecxz
out
jmp
mov
mov
add
fucomp
hlt
enter
sti
jmp
lret
fucomp
iret
in
in
loopne
lods
mov
testl
repnz
std
push
out
lret
lods
hlt
int3
lret
mov
std
jmp
fdivr
repnz
pop
fisttpl
fdivp
jmp
in
mov
sar
out
mov
out
fprem
jecxz
jmp
sti
cmc
lret
loopne
or
clc
enter
out
mov
in
repz
mov
mov
ljmp
fprem
or
std
vpsubsw
int3
fucomp
iret
jmp
shrb
rcl
ljmp
int
ret
neg
icebp
rcl
neg
in
loopne
test
call
int3
sar
repz
mov
hlt
rol
ret
leave
or
loopne
or
int
enter
cli
fsubr
jmp
add
add
push
faddp
fildl
add
rol
repnz
fst
mov
ror
call
fnstsw
loopne
icebp
in
loopne
leave
in
in
jmp
call
loope
mov
mov
not
cli
fdiv
add
jecxz
add
repnz
lods
shl
mov
mov
int3
mov
sar
mov
lret
add
or
jmp
rcr
repz
mov
iret
icebp
hlt
test
pop
faddp
icebp
jmp
loope
out
movl
ret
in
xlat
jecxz
mov
out
fcmove
add
loopne
clc
add
rol
or
add
scas
loope
rcl
test
in
int
ret
hlt
fdiv
fcmovu
mov
add
ljmp
enter
mov
call
add
ljmp
lret
enter
jecxz
lods
mul
aam
mov
cmc
fcmovne
stc
mov
std
int
fiadds
int
xlat
clc
aad
mov
leave
sarl
idivb
mov
ror
loopne
in
int3
clc
lret
shr
shl
test
fcomip
cli
fucom
out
or
loop
or
fsub
loopne
test
enter
mov
mov
push
in
aam
push
mov
mov
mov
stc
div
mov
loop
in
loopne
fdivr
ffreep
out
push
or
mov
ret
lret
iret
jmp
ror
fidivrs
pop
ffreep
loopne
add
in
loope
jecxz
stos
lret
jmp
fsubr
fnclex
fdivr
mov
loope
std
sti
jmp
or
push
rcl
mov
rcr
mov
iret
imul
sti
std
int
int
faddl
fcmovnu
loope
pop
or
add
loopne
loop
int3
mov
icebp
repnz
sti
jmp
or
jecxz
shl
into
call
leave
hlt
mov
out
add
lret
push
mov
int
in
cmc
stc
fcomp
out
call
rol
lock
call
fsubr
fsubr
test
loopne
fsub
aad
lock
idivl
out
stc
int3
ret
add
ffree
out
in
call
les
jmp
std
lret
iret
fadds
mov
leave
add
loope
lret
in
test
rcr
shl
iret
mov
neg
neg
lock
fimull
or
ret
in
shl
clc
sti
rcr
div
loope
fsubp
mov
dec
out
add
add
lret
movsl
lods
iret
mov
out
clc
aam
stc
fucomip
lret
fdivr
icebp
add
mov
add
cld
ljmp
in
in
mov
lock
mov
icebp
fmul
fstpt
scas
mov
ret
fldz
in
int
fidivrs
add
testb
leave
fmull
in
adc
jmp
ret
mov
shl
lret
mov
fdiv
jecxz
lock
sar
fimull
or
or
lods
in
repz
clc
loopne
mov
add
sti
inc
xlat
fld
cli
ror
mov
xlat
jmp
aad
rcr
fdivrl
xlat
jecxz
push
xlat
fsubr
jmp
lret
shll
mov
jecxz
leave
fcmove
aad
loop
fstp
ret
add
jmp
in
ljmp
int
int3
rol
call
not
xlat
into
fcomp
rcr
jmp
stc
call
out
int
mov
leave
icebp
lock
rolb
lds
repnz
jmp
in
adc
loope
in
mov
stc
mul
repnz
loope
mov
fcmovu
out
mov
mov
enter
loopne
enter
mov
sar
mov
push
loopne
fiaddl
in
add
scas
cmpsb
into
jecxz
ljmp
mov
loope
loopne
in
clc
out
jmp
out
scas
jmp
call
mov
into
out
hlt
add
clc
sarl
or
out
icebp
ljmp
icebp
mov
add
add
lods
mov
fcmovnu
in
mov
fucomp
fidivrl
aam
enter
int
enter
mov
out
cli
mov
mov
shl
fsqrt
aad
out
add
mov
sarb
sarb
std
mov
add
add
cli
add
ret
ret
test
ljmp
fstpt
add
clc
out
int
mov
ret
imul
out
sti
fbstp
mov
clc
add
call
out
ret
out
mov
shl
aam
mov
roll
ret
clc
out
sti
mov
fldl
ret
in
int3
jmp
icebp
enter
mov
fxch
leave
mov
out
movsl
mov
sar
cli
mov
lret
push
ret
repnz
aad
fisttps
call
aad
aad
out
test
clc
fsub
cld
mov
fcmovnu
fisttps
flds
call
call
in
idiv
clc
not
lret
ror
clc
add
jmp
ror
add
iret
repz
iret
mov
mov
into
repz
jmp
mov
jecxz
out
hlt
lret
or
lods
xlat
vfnmsub213sd
leave
stc
ljmp
pop
int3
loop
add
iret
out
fptan
fucom
scas
ret
mov
mov
aam
rcr
out
in
idivb
clc
fadds
add
lret
out
clc
sti
decl
in
call
in
aam
shr
stc
sti
leave
repz
rol
mov
or
out
lret
out
shl
in
int
mov
out
int
mov
aam
or
in
loopne
cli
fadd
shlb
shll
mov
rolb
mov
add
loopne
div
lock
sarl
divb
mov
icebp
f2xm1
sti
in
fsubp
mov
int
lods
out
in
not
rcl
rcl
std
std
fcmovnbe
fisttpll
leave
out
loopne
push
jmp
repnz
shl
rcl
loopne
aam
stc
ret
fucom
add
movl
loope
inc
mov
mul
fdivrs
int3
shl
in
aad
mov
lret
add
clc
add
or
shl
cmc
int
mov
mov
fptan
sarl
fsubr
mov
in
rol
in
mov
hlt
enter
mov
fucomip
shl
pop
pop
in
hlt
out
neg
decl
mov
ret
leave
jmp
into
cld
jmp
std
ret
clc
call
add
shr
cmpsb
test
leave
lods
rcr
lock
not
lock
int
rcr
shl
aad
in
loopne
fsub
lret
leave
lock
ror
fcomi
mov
hlt
leave
out
mov
fiadds
out
mov
adc
lods
stos
iret
iret
shlb
fcmovu
xlat
int3
fcmovnbe
add
jecxz
pop
add
in
fsubp
in
test
shlb
dec
int3
ljmp
fcomip
mov
or
jmp
ret
lock
out
in
jmp
leave
loop
out
fcmovnbe
add
or
iret
push
in
ljmp
aam
fcomi
fscale
lret
add
mov
fisttpl
out
stc
call
out
les
repz
mov
mov
add
repnz
jmp
adc
mov
iret
loope
into
lock
aad
in
ljmp
std
ljmp
icebp
test
icebp
mov
mov
cmc
shl
aam
stc
loopne
rol
std
add
pop
enter
fmulp
enter
ret
loope
les
int3
int3
in
mov
add
add
out
repz
in
mov
in
stc
mov
cmc
clc
rcr
mov
pop
fisttpl
cld
iret
jmp
loop
mov
mov
out
mov
in
loop
std
cmc
frstpm(287
loop
push
call
or
jmp
mov
repnz
aam
ret
icebp
fcmovb
cmc
leave
call
in
aam
out
shr
mov
lock
ret
dec
call
cli
out
int3
shl
loope
idiv
in
leave
in
fnstsw
fld
cmc
add
loopne
lret
out
repz
mov
out
fdivrs
mov
icebp
not
pop
fsubp
iret
mov
repz
roll
lock
int3
fsubp
neg
std
ret
leave
fucom
or
int3
rcll
lret
out
out
call
imulb
jmp
jmp
fucom
xlat
jmp
add
mov
mov
repnz
test
std
sti
lock
int
sar
inc
cmc
ljmp
jmp
shr
in
cli
fsubr
roll
std
mov
lret
loope
shr
test
out
sti
mov
int3
les
mov
out
movb
jecxz
fldl
mov
in
in
ret
enter
fistpll
mov
add
lret
fcmove
out
lds
ret
mov
aam
mov
mov
clc
pop
add
add
xlat
cmc
aam
loopne
les
mov
loopne
mov
enter
rol
out
mov
add
aad
stc
or
out
fcmove
shlb
lock
les
clc
bnd
fildl
add
lret
lret
iret
mov
jecxz
stc
in
int3
cmc
lock
hlt
in
fadd
call
aad
call
call
mov
mov
shr
lret
repnz
jecxz
push
fsub
jecxz
jmp
add
loop
lock
mov
out
lock
enter
repnz
repz
in
movl
out
loop
lods
in
jmp
mov
fidivrs
loop
or
in
add
stos
in
mov
out
mov
int3
fdivrs
mov
rcl
fincstp
ret
or
std
fmul
test
in
mov
inc
int3
mov
stc
ret
loopne
or
jmp
aam
lret
enter
in
fst
repz
call
lods
mov
jecxz
cli
loop
clc
fiadds
in
call
shl
in
mov
into
lds
out
clc
mov
fiaddl
fiadds
call
in
fldln2
fld
leave
mov
loop
clc
bnd
pop
add
fsubrp
leave
jecxz
rcr
jmp
shl
add
add
repz
push
shl
out
jmp
enter
rol
hlt
mov
jmp
mov
mov
mov
cmc
leave
pop
or
or
shl
in
ret
lock
shl
mov
mov
aam
fst
fcmovbe
into
sti
out
icebp
cmpsl
lods
in
hlt
aad
mov
aam
shl
mov
into
in
cli
clc
xlat
lock
jmp
int3
loop
in
ror
idiv
mov
in
cld
aad
ret
rol
cli
imul
ror
fcmovnu
add
out
jmp
loope
iret
out
ror
out
repnz
in
add
shl
aam
ret
loop
pop
call
into
hlt
mov
mov
jmp
loope
hlt
fnstcw
jmp
push
push
mov
mov
ror
jecxz
icebp
mov
add
out
fcmovu
fst
loop
add
bswap
shr
fdivrp
call
shl
shll
fsubr
mov
mul
add
in
add
fsubp
shr
icebp
out
lret
hlt
out
into
rcl
mov
ror
mov
cli
add
fincstp
out
in
int
iret
lret
lret
mov
aad
rol
stc
mov
lock
mov
loop
add
sti
aad
out
fimull
add
leave
mul
icebp
mov
lret
neg
int3
not
jecxz
out
push
loop
loope
push
fsubp
adc
loop
mov
int3
mov
mov
mov
lock
loope
add
hlt
fsubrp
lds
in
mov
into
leave
loop
fcmovne
ror
lret
rcl
stc
int3
ret
mov
jmp
repz
mov
cmc
fmul
int3
mov
lock
pop
add
ljmp
lret
mov
out
loopne
into
fucomi
ror
cld
rol
cld
clc
ret
fcomi
lret
icebp
fcmove
jmp
stos
ror
imul
in
mov
lret
shlb
mov
or
fcmovne
leave
stc
mov
out
aam
lods
aad
leave
repnz
cld
into
iret
mov
fstp
stc
clc
fsub
jecxz
mov
lods
aad
repnz
aam
mov
std
ret
mul
lock
jmp
ret
leave
add
clc
ret
lock
mov
jecxz
lret
int
sar
cld
fsub
rcl
push
sar
hlt
mov
loope
mov
mov
in
iret
les
idiv
jecxz
add
in
std
pop
jmp
fcmovb
leave
lods
icebp
in
lret
int3
inc
fcmovb
mov
fcmovbe
cli
fcmovb
out
cli
mul
add
clc
jmp
mov
iret
mov
fchs
lock
in
mov
mov
mov
hlt
out
add
cli
in
movsl
lock
out
out
in
inc
fmul
repz
aam
roll
add
movl
repz
loopne
jmp
mov
rcl
div
loopne
aam
shr
iret
or
loope
icebp
in
mov
cld
lret
div
icebp
push
fchs
dec
add
pop
aam
out
fildll
in
xlat
repnz
shl
loopne
cmc
aam
add
pop
lret
cld
clc
push
jmp
mov
cmc
shr
out
fnstcw
enter
mov
loope
add
out
out
lods
out
shl
int
mov
enter
shl
ret
cmc
shr
call
loop
loope
bnd
in
enter
not
cmc
clc
sar
jecxz
cld
clc
cmc
out
add
leave
or
enter
aad
ret
repnz
iret
fsubr
mov
out
mov
cmc
out
loop
or
fcmovnbe
mov
into
shl
cli
sti
out
out
fstp
in
jmp
out
add
fxch
fcomp
fucomip
or
int3
out
lods
out
mov
mov
jecxz
add
mov
clc
call
jmp
leave
lret
mov
mov
fnstsw
std
out
ret
in
add
mov
lods
in
iret
mov
fcmove
mov
idivl
mul
cli
or
lret
iret
lret
lods
mov
rcl
mov
out
repz
int3
sti
jmp
into
roll
fsub
or
adc
mov
mov
jecxz
rol
mov
jmp
add
stc
add
rorl
clc
push
in
jmp
out
rol
in
leave
loopne
mov
ror
hlt
inc
aad
ffreep
icebp
sti
fcmovnu
add
psubusb
jmp
lock
sti
jmp
enter
mov
add
add
out
in
loopne
mov
lret
lock
icebp
leave
repz
out
iret
out
shl
clc
out
mov
loop
add
cmc
loopne
loope
ljmp
sti
mov
lret
mov
add
mov
add
sti
inc
into
fdivrs
leave
fistpll
aad
rol
mov
loopne
jecxz
movsl
into
jecxz
in
out
out
mov
call
fmulp
fcmovnu
hlt
add
push
or
push
icebp
ret
into
iret
out
sti
jmp
sti
mov
fcomp
in
mov
fucomi
out
or
enter
in
stos
in
int3
fxch
xlat
mov
cld
mov
mov
stc
call
adc
jmp
icebp
scas
xlat
jmp
enter
mov
clc
loop
in
repnz
shr
hlt
ljmp
iret
out
out
ret
jmp
call
mov
xlat
hlt
movb
pop
lret
ljmp
fcmovnbe
imull
lock
test
fcompp
or
enter
icebp
shl
test
in
push
add
cmc
add
fst
testb
lret
call
mov
rol
lods
sti
lock
into
mov
clc
dec
call
push
fucom
add
cld
clc
iret
loop
int3
mov
mov
stos
rol
fcmovbe
jmp
mov
stc
add
fldl
out
loope
iret
fsub
ljmp
lods
mul
in
repnz
call
cld
les
leave
in
repz
imulb
out
in
idiv
aam
ret
shl
rol
icebp
out
or
add
lds
lock
mov
repnz
loop
in
rcl
call
hlt
cmc
rcr
fidivrs
clts
vpsraw
jecxz
enter
rcr
fldcw
loop
mov
sar
enter
out
mov
fmulp
in
loopne
mov
stc
shr
aam
cli
mov
lock
mov
mul
mov
call
loopne
fucomi
stc
lret
cmc
add
mov
or
in
sti
mov
loopne
aad
out
mul
aad
out
xlat
lret
int
add
fnclex
mul
call
std
enter
leave
lods
out
imul
rcl
mov
fdivrs
sti
cmc
int3
fucom
or
lret
or
sti
or
lods
test
test
in
fidivrs
pop
push
cli
jecxz
fsubrp
or
mov
lods
int
ljmp
roll
pop
std
rcr
aam
in
rolb
jecxz
aam
mov
ror
hlt
fiadds
iret
fsub
enter
aam
testl
add
lods
shr
icebp
mov
repz
ror
rcl
mov
mov
fcmovu
std
fcmovne
add
lret
fsubrl
mov
icebp
ror
in
roll
add
loop
cmc
in
into
jecxz
out
enter
out
aad
fdivs
shl
iret
rolb
idiv
movb
fisubl
sti
iret
enter
neg
cld
xlat
mov
fdiv
or
stc
out
out
fsub
out
enter
ror
int
out
out
out
cmc
aad
int
add
fcom
sti
or
add
or
stos
mov
icebp
ret
aam
mov
pop
out
sar
repnz
add
add
adc
iret
lret
in
rcl
in
jmp
hlt
aam
add
cli
out
fdiv
or
call
icebp
out
cmc
test
in
mov
jecxz
clc
int3
add
jecxz
add
in
loop
ror
shl
enter
sar
shl
int3
testl
out
cmc
add
out
out
mov
lods
mov
out
mov
fcmovbe
stc
int3
sarb
cld
lret
add
cli
enter
lret
out
call
divb
fstpt
out
lock
cmc
jmp
loop
lods
in
jmp
enter
iret
xlat
fnstsw
add
ret
add
testb
or
out
rol
mov
mov
lret
imul
incl
std
f2xm1
add
add
fimull
iret
in
in
loop
shl
aam
out
shl
into
idivl
incb
sarb
stc
add
lret
aam
adc
lods
lods
fsubr
rol
mov
mov
fistpll
jecxz
fcmovu
loope
fiaddl
ficoms
jecxz
rol
scas
repz
jmp
aad
add
loopne
stc
icebp
sar
or
lret
lods
out
jecxz
loopne
shr
rol
fstp
leave
loopne
aam
add
call
loope
or
push
iret
or
lods
rol
mov
mov
in
stc
shl
ret
in
add
int
adc
shrb
xlat
in
mov
repnz
add
lock
shr
loopne
leave
cld
in
lret
loopne
int3
out
cmc
lret
int
fdivr
icebp
enter
fcmovb
add
fsubr
jmp
iret
repz
hlt
ret
fisubrs
in
xlat
in
lock
leave
clc
faddp
ljmp
scas
sarl
add
enter
out
add
iret
fcmovnu
jecxz
enter
divb
mov
mov
jmp
lret
enter
mov
lret
out
mov
sarb
add
add
out
add
cli
fld1
jmp
cmc
lock
jmp
mov
stc
hlt
clc
loop
std
pop
fxch
fucomp
out
in
aam
mov
aad
sti
add
movl
stc
int3
bnd
repz
cli
repz
out
lret
stc
fiadds
in
add
or
or
shlb
repz
jmp
test
icebp
cmc
push
std
fisttpll
jmp
int3
fldlg2
sti
mov
call
aad
rol
fsub
in
out
jmp
test
fsubr
repz
lock
jecxz
add
rcr
lock
xlat
decb
aam
add
fdivr
lods
loop
in
loope
shlb
sti
loopne
or
out
iret
adc
repz
out
test
in
mov
add
add
sti
ret
leave
or
push
fmuls
jmp
ret
rcr
lret
mov
repnz
ret
cmc
clc
loope
ret
leave
or
push
or
mov
out
icebp
in
in
fcmove
jmp
fiaddl
ret
inc
add
in
fiadds
ljmp
out
loopne
jmp
mov
ret
mov
or
int3
fimuls
lock
ret
mov
shl
fcmove
mov
mov
jmp
loope
shl
int3
iret
in
ljmp
shr
jmp
into
shr
out
fcomp
jecxz
cld
std
enter
ljmp
in
clc
mov
in
out
out
shl
out
add
in
lret
leave
enter
mov
pushl
jecxz
icebp
out
call
add
fsubr
ret
rol
aam
mov
icebp
mov
or
fsubr
mov
scas
ret
mov
fmul
ret
in
rol
add
sti
lret
add
mov
mov
xor
add
cmp
je
jmp
jmp
mov
mov
xor
add
cmp
je
mov
mov
movzwl
mov
jmp
push
scas
jp
bound
xor
imul
jmp
fucomi
mov
iret
mov
mov
int3
mov
ret
repz
call
push
fdivrl
in
enter
not
mov
repz
std
aad
loop
or
out
or
in
rcl
hlt
in
icebp
mov
mov
lock
hlt
ret
fcmovnb
loopne
add
cmc
neg
fildl
lret
loope
loopne
jecxz
lods
aad
lock
out
xlat
leave
ror
out
rcl
loopne
fiadds
out
ffreep
cld
iret
dec
loope
out
scas
mov
iret
lret
mov
fnstsw
icebp
mov
or
fimull
add
lock
aad
out
in
mov
rcr
roll
or
cli
or
loop
or
mov
mov
int
inc
fnstenv
icebp
shr
rcl
add
hlt
ljmp
in
hlt
mov
jmp
mov
mov
std
mov
add
out
repz
clc
mov
in
ljmp
leave
cmc
mov
fdivrp
int3
fdivs
fisttpll
call
lods
icebp
jmp
rcl
cld
lret
mov
leave
fdivp
mov
fdiv
filds
fcomi
stos
mov
icebp
iret
loopne
fidivrs
rcl
hlt
cli
in
jmp
fadds
xlat
cld
aad
jmp
ffree
jmp
mov
clc
xlat
mov
into
ret
inc
fiadds
repnz
add
loope
incl
add
shl
mov
ljmp
int3
filds
sarb
cld
std
push
out
jecxz
shr
hlt
cmc
int
idivb
out
xlat
mov
fabs
add
fincstp
sti
ljmp
scas
out
jmp
test
lret
aad
cmc
loop
add
in
shl
ret
cli
out
call
mov
leave
ret
out
fidivs
call
sarb
into
int3
icebp
iret
lock
enter
mov
movb
lret
aad
loope
enter
out
enter
rcr
in
jmp
loop
in
jmp
add
add
neg
lret
ret
shrl
stc
ljmp
repz
out
in
lret
fldl2e
or
lods
mul
ror
rcl
jmp
bnd
add
fdivl
loope
or
out
out
stc
fxam
shlb
out
out
lret
ljmp
add
fimuls
add
scas
out
repz
aad
test
mov
repz
add
fchs
cld
add
lret
ljmp
hlt
cli
into
lock
enter
repnz
out
aam
jmp
shrb
mov
lds
hlt
xlat
lock
rcr
aad
add
hlt
fcmovne
pop
jmp
mov
int
fmul
fcmovu
fdiv
iret
cli
fsubp
ret
fcmovb
push
test
push
icebp
in
lret
lret
leave
icebp
iret
mov
rolb
repnz
idiv
fnstsw
testb
repnz
ror
repz
sarb
out
jecxz
lret
hlt
std
std
or
iret
les
ret
mov
in
fcmovne
mov
aad
loopne
rol
jmp
leave
mov
aad
aad
inc
cli
xlat
incl
sti
rcl
add
add
push
aam
lds
loop
mov
in
clc
bnd
iret
fsubr
loopne
roll
inc
push
rol
call
push
add
scas
leave
mov
repnz
hlt
jmp
fstp
rcl
xlat
cli
ret
in
ret
fldl
fdivr
add
mov
icebp
cmc
int
fucomip
cmc
mov
out
mov
add
aad
add
sysret
ljmp
scas
aad
lods
loope
sarb
repnz
decb
std
fucom
rcr
or
mov
jmp
mov
into
fld
loopne
sar
jecxz
leave
add
jmp
stos
ret
mov
enter
repz
add
repz
clc
add
paddusw
rol
ljmp
jmp
mov
push
lock
jmp
cmc
fmull
decl
shl
out
jmp
fmul
icebp
out
lock
sti
add
aad
jmp
jecxz
push
out
out
mov
mov
mov
mov
repnz
lock
repnz
add
mov
in
frndint
into
int3
leave
fucom
mov
out
scas
repnz
aad
mov
mov
in
lock
into
loop
lods
mov
out
mov
lock
clc
out
fsubr
mov
stc
div
ret
aad
std
or
mov
loop
std
fcmovbe
icebp
mov
int3
aad
enter
add
push
shl
shl
mov
aam
fxch
idiv
icebp
in
aad
mov
cmc
hlt
out
int
or
shl
lret
shlb
mov
lret
sarl
ret
mov
fmul
mov
repz
leave
mov
fdivp
mov
std
clc
iret
jecxz
mov
jecxz
add
repz
loop
out
in
stc
clc
fnstenv
ret
ret
sti
in
aad
std
hlt
or
in
fidivs
sar
out
lret
mov
fdivp
rcl
shl
fdivp
lret
in
std
std
add
add
stos
aam
mov
sar
fst
mov
loop
shl
filds
fsubrp
or
test
shr
scas
rcl
xlat
lock
test
fstpt
stc
jecxz
rcl
call
out
iret
mov
mov
cld
call
hlt
jecxz
mov
stc
jmp
sti
fucomp
int3
xlat
jmp
in
jmp
stc
mov
mov
push
into
jmp
in
mov
in
into
fcmovbe
idivb
in
add
call
adc
loope
xlat
jmp
xlat
mov
clc
into
fcomip
add
ret
icebp
ljmp
std
mov
movsb
mov
out
int
in
in
aam
cli
cld
shl
aad
add
leave
out
fadds
mov
leave
out
loop
mov
stc
fcmovnbe
rcl
sar
in
fstp
fsub
push
leave
int
loope
shlb
ljmp
aad
lock
lock
add
lret
btr
mov
ret
call
fdiv
clc
jecxz
ffree
hlt
int
in
int
ret
sti
repz
in
ror
mov
call
fcmovnbe
aam
les
sti
in
call
into
in
mov
vpmulhuw
mov
std
repnz
std
repnz
clc
jmp
sti
stc
std
in
stc
fsubp
jmp
mov
fcomi
sti
mov
fcomip
ror
add
jecxz
xlat
aad
out
leave
aam
add
lods
loop
shr
ret
divl
lret
mov
xlat
or
rcr
out
int3
fsub
xlat
jecxz
out
lret
cmc
aad
icebp
shl
add
add
mov
cli
add
jecxz
fistl
ror
loope
leave
lock
call
mov
mov
jmp
iret
decl
fnstsw
in
mov
ljmp
xlat
add
leave
or
or
jmp
ljmp
int3
into
divb
sar
idivl
in
in
into
jmp
div
scas
mov
lret
into
fstpt
mov
out
enter
add
shr
jmp
stc
fxch
clc
leave
jmp
cmc
enter
loopne
repnz
xlat
in
loope
or
fsub
rcl
loopne
mov
sti
icebp
mov
mov
add
div
mov
out
ffree
or
fsubrp
lret
mov
loopne
fmul
mov
fcomi
movl
loopne
jmp
add
adc
in
mov
lret
lret
out
test
cld
mul
cli
fcmovu
in
cmc
sti
fucomip
ficoml
lods
in
out
cli
lret
ret
aam
loope
xabort
ljmp
int
mul
repz
lock
hlt
neg
jecxz
jmp
std
iret
iret
clc
add
dec
repz
lret
test
mov
add
hlt
jmp
aam
fucomp
inc
fadd
pop
jmp
fadd
in
jmp
scas
ret
iret
int3
ljmp
cld
fmulp
mov
add
push
into
enter
scas
in
icebp
mov
out
cld
repnz
icebp
clc
fiaddl
or
aam
fimull
decl
shl
test
in
int
sar
repnz
out
out
iret
leave
fmulp
add
in
jmp
adc
int
cmpsb
mov
in
fcomp
mov
mov
add
lret
add
call
mov
fcmovbe
neg
shl
mul
in
fcomi
lock
roll
add
in
hlt
fcmove
fdivrl
sti
lods
in
leave
iret
aad
jmp
add
out
idivb
or
jmp
scas
repz
test
call
out
mov
aad
shl
add
out
fstp
cli
adc
mov
scas
mov
mov
lret
lds
add
in
clc
in
leave
jmp
jmp
out
cmc
fxch
int
out
icebp
stc
in
ret
lock
push
in
fcmovu
fadd
leave
out
divb
mov
mov
sti
repnz
pop
jecxz
add
or
add
lret
into
in
jmp
cld
out
mov
int
fcomp
faddp
clc
out
jecxz
jmp
cmc
out
fchs
mov
fdivrs
ret
add
jecxz
dec
fimuls
repz
fucomp
fst
scas
fcomi
repnz
cmc
leave
mov
cld
add
clc
add
loop
loop
test
call
fdivrp
int3
mov
add
aad
jmp
or
lret
enter
jecxz
mov
call
aam
ror
or
fucomp
push
lret
fadd
iret
rcl
rcr
ljmp
fst
mov
test
add
or
shr
shll
lock
rcl
in
aad
clc
add
add
out
out
jmp
shl
aam
sti
lock
std
int
repz
out
clc
mov
loopne
out
lret
fst
lret
ret
flds
rol
or
int3
push
ror
call
repz
shl
int3
ljmp
loop
in
decl
enter
jmp
out
loope
int
in
aad
mov
imul
clc
jecxz
loopne
les
add
enter
add
lock
iret
call
jmp
mov
sti
out
fucomp
cli
cld
out
cld
add
out
repnz
in
lret
lock
jmp
int3
repz
lds
out
mov
shl
aad
bnd
mov
flds
std
loop
icebp
leave
aam
or
shll
in
lret
iret
std
div
add
shr
in
jmp
add
add
jecxz
rol
mov
stos
ror
mov
mov
testl
or
in
or
jecxz
leave
leave
mov
shll
iret
leave
call
add
jmp
jmp
enter
int3
shr
shl
in
call
mov
push
mov
push
push
in
out
lods
shl
mov
int
mov
mov
mov
aad
cld
icebp
loop
out
incb
cli
out
into
lods
rcl
rol
in
out
in
repnz
out
ret
fstp
repnz
loope
fcmovbe
fiadds
mov
mov
mov
lret
mov
int3
mov
xlat
sar
cmc
inc
hlt
clc
in
les
out
mov
mov
xlat
fsubr
aam
ret
add
push
add
ret
loopne
loop
add
fyl2x
lods
lret
in
aad
mov
mov
repnz
out
lock
hlt
loop
incb
add
out
clc
faddl
ret
jmp
clc
iret
shrb
mov
les
in
out
jecxz
mov
lret
ljmp
repz
mov
jmp
fsubrp
add
in
int3
ljmp
lret
in
clc
aad
pop
into
push
cli
stc
xlat
rolb
clc
fsubrp
sti
in
adc
cmpsb
out
out
shr
leave
leave
enter
int3
repnz
lds
xlat
fstp
test
add
add
out
loopne
loope
cmc
out
call
iret
add
icebp
add
fisttpl
cmc
lret
scas
out
call
mov
fucom
mov
mov
std
mov
or
loop
loope
ljmp
lret
fxch
mov
into
cli
faddp
fld
add
iret
std
in
add
rol
loop
fcmovne
hlt
into
idivl
repnz
shl
add
enter
out
in
scas
out
les
mov
sti
testl
pop
test
cli
ret
leave
int3
stos
ret
in
mov
les
jecxz
jmp
div
hlt
aam
fcmovnu
loopne
ud1
loope
jmp
cmc
sti
in
sti
mov
mov
mov
loop
fimuls
push
add
or
mov
aad
shl
mov
fstp
mov
in
loop
shr
xlat
in
add
fxch
cmc
mov
idivb
idiv
vpsadbw
push
push
in
out
shr
mov
loope
xlat
in
out
out
std
roll
stc
shl
add
pop
add
out
out
mov
mov
jmp
mov
mov
repz
fimull
or
clc
loope
shl
lret
in
in
out
mov
shl
mov
fcmovne
rcl
jmp
loop
in
jecxz
div
stos
neg
into
loopne
mov
in
icebp
stc
int
add
xlat
incl
add
mov
fadd
lret
aad
mov
mov
into
enter
fnstcw
ffree
out
ljmp
stos
lods
shl
iret
out
hlt
lods
mov
lret
add
in
sti
fsubp
jecxz
bnd
pop
repnz
mov
in
mov
int3
ljmp
mov
loop
std
aad
loope
iret
aad
out
enter
scas
in
in
stc
out
mov
fcmovnbe
into
jmp
ret
mov
loopne
hlt
add
adc
loop
ljmp
mov
call
lock
fadds
add
jmp
or
test
lds
std
shr
in
mov
fmuls
push
loope
test
enter
iret
cmc
in
clc
jmp
mov
fldpi
or
add
loopne
out
out
mov
mov
in
call
ret
loop
add
movl
into
or
mov
mov
int3
mov
fdivp
jmp
out
repnz
rcl
sti
loop
test
mov
loop
cli
jmp
mov
mov
repz
mov
ror
adc
jecxz
jmp
jmp
ror
mov
mov
clc
rcl
stc
iret
movl
out
repz
repnz
int
cli
rolb
fcmovnu
cld
push
out
jmp
ret
enter
shll
int
mov
call
lret
sti
out
test
lods
jmp
shl
fidivs
out
jecxz
lds
sti
add
loopne
cld
les
mov
mov
mov
repnz
lock
into
add
rcl
jmp
pop
fucomp
in
or
into
ret
jecxz
jmp
lret
mov
pop
fsubrp
lret
pop
rol
loope
out
out
enter
repnz
fcmovnb
fcmovne
int3
rcl
fcmovu
jmp
cmc
add
fcmove
in
div
ljmp
idiv
shl
sar
ret
repnz
jmp
mul
std
cld
loopne
lret
repnz
lods
iret
loope
int3
call
mov
mov
stc
stc
hlt
out
lock
out
in
mov
lret
call
stc
out
mov
lret
rcr
ret
in
pop
out
or
loop
or
mov
mov
mov
call
out
aam
mov
lock
or
stc
jecxz
scas
int
into
jmp
call
jmp
mov
cld
neg
rcr
loop
into
lret
shll
in
repnz
jecxz
cmc
stc
aam
loop
icebp
lret
cmc
in
fcmovnu
leave
lock
fsubr
in
cmc
jmp
add
fucom
in
cli
sti
fiadds
jmp
out
leave
stc
icebp
stc
fnstcw
call
rolb
or
decl
sti
in
out
rep
out
jmp
lock
call
frndint
std
out
movl
cli
movb
cli
jmp
enter
int3
ret
xlat
mov
fldz
sti
call
sti
cli
cld
fcmovu
in
std
fimuls
fnstsw
ret
sar
clc
repnz
call
mov
les
or
loop
test
loope
jmp
mov
mov
out
mov
add
leave
jmp
sti
shl
in
fnstcw
jecxz
out
loop
fmull
ret
add
out
int3
lock
mov
cli
mov
dec
into
ror
shl
out
pop
aad
test
add
mov
mov
les
std
in
jmp
mov
out
out
lret
lock
into
lods
mov
mov
mov
mov
ffreep
fsub
push
loopne
fcmovnb
fmul
fucom
iret
leave
fucomi
mov
mov
mov
mov
push
leave
ljmp
shl
int
fistpll
fdivrs
sti
les
add
iret
shl
icebp
in
mov
call
hlt
icebp
int
fcom
aad
pop
or
fsubr
add
lret
out
test
in
add
add
out
add
fxch
in
hlt
cld
repz
repz
mov
in
divb
jmp
out
std
frndint
or
fmull
icebp
fdiv
mov
int3
repz
mov
aam
int3
into
aad
xbegin
ljmp
jmp
int
cmc
out
jmp
shr
mov
out
rcr
add
add
add
sti
rcl
rol
mov
lret
repnz
add
ret
sti
in
int
in
rol
hlt
fucomip
lret
jecxz
out
mov
scas
out
jmp
in
jecxz
rcr
not
loopne
rcl
clc
add
cld
lret
scas
loope
shlb
call
mov
stc
stc
or
xlat
int3
add
leave
lret
loopne
int
call
f2xm1
ljmp
std
cli
add
or
in
in
icebp
mov
repnz
out
aad
xlat
loope
cmc
int
std
rcr
pop
or
call
out
rcl
xlat
repz
mov
fcmovu
out
fdivrp
cli
mul
ret
leave
add
add
lret
in
mov
shr
fcmove
cmc
into
into
cli
iret
divl
ret
xlat
mov
jecxz
shrb
shlb
mov
push
aad
push
cmc
jecxz
in
std
out
fsubrs
aad
enter
rolb
leave
loope
mov
fcomip
fisttpll
in
iret
push
flds
call
cmc
loopne
out
mov
aad
mov
fsubr
rol
jmp
or
rol
ret
out
iret
mov
in
ret
int
shl
out
fsubr
sti
in
stc
adc
ljmp
loopne
in
fld
sarl
cld
int3
add
cli
in
lret
add
loopne
or
mov
leave
repz
imulb
xlat
fldl2t
clc
rcr
in
fcomip
movl
jmp
mov
lret
rol
xlat
hlt
in
in
enter
mov
repz
fdecstp
add
fstp
in
add
mov
mov
fnstsw
mov
add
or
fcmovnb
repnz
mov
in
sar
int
mov
xlat
out
mov
or
aad
loop
iret
scas
icebp
in
loope
ret
lods
jmp
iret
sar
into
mov
call
add
add
fmull
add
add
xlat
test
cli
shl
out
jmp
mov
add
jecxz
aad
aam
into
fiaddl
lret
out
into
repz
in
test
fadds
mov
add
fdivr
sti
call
lock
jecxz
call
hlt
test
fcmovbe
aad
add
repz
lock
into
jmp
mov
clc
int
xlat
out
in
ret
cli
shl
cli
ljmp
int
lods
aad
mov
out
ljmp
out
shl
mov
dec
stc
out
rol
out
out
cmc
repnz
cli
rcl
mov
flds
fucom
fadd
jecxz
cld
aam
fcompp
jmp
lods
enter
shl
test
mov
not
out
jmp
add
std
stc
add
jmp
mov
stos
in
in
fstpt
rcl
faddl
add
add
test
out
mov
lods
shl
in
mov
fcomp
shl
mov
mov
xlat
lret
push
out
rcr
int3
mov
fcmovne
out
shr
cli
mov
rcr
loop
std
add
push
out
or
loope
into
shll
xlat
mov
mov
neg
testb
mul
jmp
shl
in
shl
cmc
lock
fdivrs
sti
int3
add
loopne
lret
add
enter
enter
jmp
mov
mov
fcmove
jmp
out
cld
movb
cld
sti
add
repz
mov
aad
icebp
out
in
shr
rolb
in
in
sarb
push
rorb
mov
mov
ljmp
les
fcomp
cld
loop
add
add
lret
push
int
loop
loop
mov
rcl
mov
sarb
add
xlat
add
out
mov
mov
mov
out
shl
mov
out
int
in
fyl2x
xlat
shl
movb
loope
into
in
enter
enter
test
fxch
out
out
enter
mov
test
aad
jecxz
fsub
test
mov
fsubr
lock
out
lock
fdivrs
jecxz
lock
jecxz
clc
fldpi
fimuls
out
jecxz
mul
mov
ljmp
fdivr
hlt
mov
out
push
loopne
out
ror
int3
shll
test
mov
pop
fcmovnb
mov
add
out
enter
loop
ror
hlt
mov
out
mov
add
jecxz
fadds
out
test
add
faddl
in
add
iret
jmp
stc
enter
add
out
mov
aad
push
fstp
out
cli
fstl
ret
mov
out
scas
int
in
jmp
xlat
mov
jecxz
sti
hlt
decl
jmp
or
fsubr
lret
fbstp
div
jmp
mov
les
test
scas
shr
scas
shl
fidivrs
mov
fdivrs
jecxz
add
fsubrp
fsubr
jmp
mov
in
ret
repz
fmuls
icebp
out
ljmp
xlat
loope
int
sti
fdivp
sarb
ret
lret
cli
or
lret
add
jmp
in
ret
sti
loope
shll
loop
pop
sarb
les
fmulp
jmp
in
int
lret
jmp
into
out
shl
hlt
aad
clc
jecxz
jecxz
hlt
loop
fucomip
shl
sti
push
sti
fucom
out
cmc
stos
out
ret
iret
mov
mov
repnz
repz
in
jecxz
out
or
jecxz
fucomp
mov
lret
lock
idivb
sti
fmulp
in
shl
loopne
fxch
fiaddl
fisubrs
mov
stc
repnz
jmp
test
mov
out
out
pop
aam
add
out
ljmp
in
cli
shl
not
sarb
testl
add
cli
shll
in
repz
hlt
fcomip
mov
add
hlt
rolb
jmp
or
shr
fcomip
out
out
aam
into
shl
fcomip
mov
roll
ret
stc
std
ljmp
shr
test
fcomp
mov
int
ret
fadds
dec
jmp
int3
iret
mov
jmp
cli
mov
iret
clc
sti
repz
loope
mov
fisttpl
fsub
mov
shr
sarl
aam
in
int3
fcmovbe
fildl
rorl
stc
clc
fisubrl
sarb
mov
mov
repz
ffreep
hlt
loopne
neg
fcomp
hlt
fmulp
scas
rcr
scas
fsubrl
xlat
jmp
mov
add
mov
cli
out
add
std
fabs
mov
fstpt
stc
fadds
cld
shl
imul
add
ret
or
fmul
mov
fneni(8087
icebp
icebp
mov
in
in
cmc
int
add
mov
lret
fdivrp
add
lret
pop
stos
mov
in
rcl
lret
mov
aam
add
aad
add
rol
cmc
jecxz
loopne
ljmp
shr
loopne
int
jmp
mov
mov
cld
add
fyl2xp1
into
push
repnz
rcr
hlt
lods
shl
int
mov
mov
fcmovnb
in
push
lret
push
add
scas
icebp
lock
rcr
out
mov
shl
aad
pop
std
or
or
fisttpll
ror
jmp
xlat
in
shl
jmp
fdiv
hlt
fucomp
mov
cli
jecxz
aad
lret
fcmove
repnz
lods
fidivl
mov
sti
in
int
div
mov
pmulhw
or
in
into
scas
ljmp
jmp
out
shl
cmc
incl
add
stc
mov
out
into
shr
sti
mov
fninit
repz
stc
add
call
out
inc
out
mov
into
iret
cmc
rcl
fcomip
in
incl
add
aad
repnz
cld
or
push
out
adc
mov
in
aad
lret
cli
in
mov
int
repz
mul
sti
incl
or
ljmp
shl
leave
ret
in
mov
iret
jmp
icebp
out
lock
in
faddp
lret
lock
loop
push
push
std
mov
out
out
loop
aam
clc
mov
mov
aam
repz
aad
lds
in
jmp
rcl
scas
mov
ror
ljmp
lock
int3
add
loop
idiv
clc
in
mov
mov
out
fcomi
neg
mov
mov
add
in
out
stc
iret
cli
mov
ret
lret
mov
icebp
in
test
mov
or
ljmp
scas
int
mov
mov
int3
enter
aam
jecxz
int
push
out
lock
push
mul
fucomi
loope
out
loopne
hlt
repnz
mov
aad
flds
fdivr
add
out
shr
out
cld
shrb
shlb
icebp
icebp
shr
testl
cld
flds
lds
shl
repnz
jmp
leave
leave
mov
in
in
ret
add
fsub
stc
add
add
fiadds
loop
jmp
loope
out
out
aam
int
clc
repz
fdiv
ret
push
out
or
int
iret
in
lock
jmp
fstp
cli
cld
cli
mov
loop
bnd
inc
mov
lods
repnz
hlt
cld
fnstsw
loopne
stc
cld
jmp
clc
call
repz
mov
stc
lock
lret
jmp
stc
rol
loop
lock
add
lret
lock
lret
imul
out
mov
add
cli
add
fdivp
clc
in
ljmp
out
into
ljmp
into
mov
in
lret
pop
loop
aam
cmc
out
cmc
lret
loope
in
mov
icebp
int3
repnz
hlt
mov
clc
add
in
clc
loop
fdivrp
add
xlat
out
shl
out
jmp
mov
fdiv
int3
add
repnz
add
loop
mov
out
stos
enter
lods
mov
mov
mov
lret
loopne
cli
cli
ret
ret
fmulp
mov
into
fstp
aad
aad
sti
call
in
ret
shlb
rcr
sarl
fcomip
push
rcr
call
int3
into
add
lods
mov
int
leave
fdivp
ret
add
in
shl
fcomp
add
ljmp
call
shr
mov
leave
jmp
ret
rcl
sti
add
in
in
rcl
int
rol
icebp
out
icebp
mov
fmulp
cmc
cli
sti
rol
out
xlat
cld
xlat
add
in
mov
ljmp
fdivrl
div
mov
ljmp
repnz
fsubr
mov
int
cmc
jmp
out
icebp
out
pop
out
mov
icebp
test
int
or
jmp
rcr
in
stc
dec
xlat
add
call
faddp
shl
sar
fadds
loop
hlt
loope
mov
imul
rcl
stc
mov
jmp
sar
clc
clc
idiv
fiaddl
call
icebp
mov
test
out
in
mov
repnz
shl
testb
or
imul
fildl
add
rcr
rol
ror
fdiv
int3
cli
mov
loope
filds
lret
cmc
push
call
out
mov
scas
call
not
mov
cld
jecxz
int
rcr
add
clc
pop
fsub
mov
jmp
int
fidivl
mov
fnstcw
fld
sti
cld
in
mov
mov
repnz
repz
mov
fdivr
lock
in
lds
neg
add
ror
in
out
out
aad
ror
fistpll
fsqrt
loopne
add
fprem1
or
into
add
shl
jecxz
out
int3
int
mov
cmc
aam
std
add
repz
rol
add
fildl
sti
fcmovnb
or
mov
repnz
cli
out
int3
sar
std
out
mov
out
fadd
fucom
sar
cld
repz
call
neg
into
cld
fidivrs
mov
pop
jmp
or
rol
in
mov
mov
in
lret
fcomi
cli
in
add
or
leave
repz
lock
iret
mov
std
sarb
jecxz
lret
loopne
add
ret
ljmp
mov
mov
std
repz
lret
fadd
out
call
out
repz
out
aam
sar
out
add
test
fadd
out
testb
lret
shll
repnz
aad
call
icebp
sti
fimuls
iret
out
cli
mov
int3
mov
repz
cld
jecxz
rolb
fcmovbe
fmuls
fsubr
in
jmp
repz
lret
clc
in
mov
aad
jmp
add
or
ror
in
aad
lock
lret
call
fcmovnb
cmc
lds
rcr
in
or
fistpll
leave
sti
call
cli
iret
mov
sar
ljmp
or
loope
jmp
rol
loope
mov
add
ret
or
les
clc
clc
add
jmp
in
in
mov
mov
ljmp
int3
jecxz
sar
repnz
or
out
int
mov
icebp
cli
mov
hlt
sar
sar
mov
aam
add
fmul
int3
int3
rcl
jmp
mov
leave
cld
in
add
int
in
repnz
add
jmp
adc
cmc
repnz
mul
les
ret
aam
fidivrl
cld
or
test
into
imul
aam
mov
mov
rol
ljmp
lret
mov
out
lock
fdivp
mov
mov
jmp
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
xor
add
cmp
je
lea
mov
mov
mov
mov
mov
mov
movzwl
xor
add
movzwl
mov
movb
lea
mov
movzbl
xor
add
mov
mov
movl
movl
mov
xor
add
mov
jmp
mov
inc
mov
cmpl
jae
mov
mov
mov
jmp
mov
xor
add
mov
jmp
mov
inc
mov
mov
cmp
je
mov
mov
movzwl
xor
add
movzwl
mov
mov
mov
movzwl
xor
add
mov
mov
jmp
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
xor
add
je
lea
mov
mov
sub
xor
mov
mov
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
movsbl
movsbl
cmp
je
mov
movsbl
mov
xor
mov
movsbl
cmp
je
jmp
jmp
mov
xor
mov
movsbl
mov
xor
add
cmp
jne
jmp
mov
xor
mov
lea
mov
jmp
jmp
mov
xor
add
mov
mov
jmp
mov
add
mov
cmpl
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
mov
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
je
mov
xor
mov
xor
add
mov
mov
mov
xor
div
lea
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
jmp
ret
ret
jno
ret
rclb
clc
stc
or
mov
jnp
out
jnp
enter
mov
std
out
out
aad
out
or
ret
lret
in
mov
jmp
fdivr
xlat
lret
clc
aam
xlat
in
fcmove
in
call
mov
icebp
jmp
add
enter
mov
sti
fsubr
stc
int
int
icebp
fsub
mov
lret
idivl
sar
jmp
enter
loope
stos
out
out
lret
clc
mov
fldlg2
jmp
lds
push
aad
ret
jmp
xlat
out
ffree
rcr
enter
aam
aad
call
rorb
mov
lds
add
mov
int3
int3
jmp
shll
repz
jecxz
or
ret
aad
mov
repnz
aad
out
in
add
hlt
cli
in
add
jmp
clc
cld
adc
repnz
leave
out
mov
not
fcomip
aad
mov
rcr
fdivr
lock
loop
or
add
shr
mov
fbstp
mov
fiaddl
out
out
xlat
add
vshufps
iret
iret
fidivrl
shl
in
fsub
test
fucompp
rcr
imul
mov
int
mov
repnz
faddp
cli
jecxz
or
into
shr
loop
mov
aad
aad
fcmovnu
in
mov
lock
int
add
add
std
jecxz
into
mov
shll
mov
lock
out
in
fistpll
stc
cld
idiv
test
lret
add
jmp
mov
stc
mov
repz
mov
ret
rcr
or
fucomip
lret
or
or
in
int3
mov
repz
fistpll
fildl
mov
rol
loop
sti
bswap
or
lret
shr
mov
mov
bnd
aad
lret
cmc
lds
stc
or
les
lods
lock
mov
mov
add
push
xlat
lret
stc
cld
dec
loope
in
enter
out
scas
mov
std
enter
shr
in
test
xlat
jecxz
in
in
fucom
mov
mov
repnz
cmc
lret
loop
loop
repnz
rorb
cld
loop
xadd
mov
out
mov
out
mov
mov
stc
rcl
repnz
int3
shr
hlt
jecxz
shr
call
mov
in
cmc
cli
leave
fdiv
cld
mov
ljmp
mov
loop
stc
ljmp
rcl
cli
out
iret
in
mov
mov
sar
int
loop
fmul
lock
repnz
repnz
mov
out
mov
jecxz
mov
add
or
mov
jecxz
mov
sar
mov
not
mov
add
fucomi
or
clc
add
int
ljmp
add
out
testl
hlt
fsubp
scas
ret
shl
rcl
mov
ljmp
filds
fadd
pop
dec
cli
mov
mov
mulb
mov
idivl
hlt
mov
out
out
sti
clc
stc
ljmp
shl
shl
fsubrp
mov
repz
jmp
fdivp
fldpi
clc
or
add
repz
iret
test
mov
jecxz
sti
xlat
sti
jmp
fsub
inc
aad
iret
ljmp
mov
lods
rcl
repz
jmp
jmp
mov
cmc
fcomp
fucomp
cmc
loopne
out
shr
in
sti
ror
repz
mov
int
rol
ljmp
clc
add
mov
loopne
aad
mov
ret
cld
ffreep
cld
push
aad
pop
loopne
out
in
incl
in
mov
icebp
mov
xlat
shr
in
mov
int
sar
mul
jmp
or
repz
shrb
loope
mov
mul
rcr
hlt
call
fcomip
vpavgw
sti
enter
repz
stc
enter
jecxz
iret
cli
sti
int
out
aad
flds
ficoms
out
into
mov
out
out
stc
lret
lods
mov
repz
loopne
out
xlat
sti
mov
push
fisttpll
bswap
repnz
in
jmp
test
iret
mov
fcmovu
ror
in
add
std
or
lret
in
repz
jmp
mov
fdiv
sar
rcr
loope
ret
or
les
mov
mov
mov
std
mov
fcmovnu
shl
cli
loopne
int
icebp
int
mov
in
mov
mov
xlat
rol
mov
shl
out
or
in
push
aam
icebp
shl
iret
fisubrs
mov
std
fdivrp
ret
in
mov
out
aam
cld
fimuls
leave
leave
rcl
lock
mov
jmp
fcomi
add
iret
ffree
push
out
movl
or
ror
ljmp
mov
cli
stc
repz
or
lret
jmp
iret
out
lock
int3
fnstenv
not
iret
sarb
shl
leave
cli
out
out
in
in
in
mov
mov
rcl
mov
stc
std
hlt
idiv
loopne
mov
adc
cmpsb
shrb
out
ffreep
cli
mov
add
sar
fisttpll
leave
lret
scas
lock
cmc
shll
hlt
int
mov
hlt
neg
decl
add
push
incl
cld
shl
lock
xlat
mov
scas
in
out
in
leave
add
add
jmp
loopne
pmulhw
add
repnz
in
out
rol
mov
out
int3
iret
call
rol
mov
ljmp
into
loop
repz
hlt
xlat
icebp
aad
jmp
jmp
out
loope
add
add
lret
out
in
scas
jecxz
mov
mov
repnz
lret
fadd
pop
add
stc
cmc
lock
cld
out
in
out
push
mov
iret
idivb
mov
xlat
sar
mov
stc
add
lret
sar
shl
lret
jecxz
enter
imulb
call
ror
add
hlt
loope
pextrw
mov
mov
not
not
mov
in
in
rol
les
add
jmp
ror
bnd
mov
stc
stc
call
cli
or
repz
int3
jmp
fdivr
icebp
sti
lock
lock
add
push
push
add
loopne
repnz
jmp
lock
xlat
ret
hlt
mov
cmc
fdivp
int
add
mov
shl
shl
in
dec
aam
fcmovb
mov
jmp
std
std
les
lods
test
int
fcomi
out
shll
add
cli
jmp
add
add
mov
icebp
mov
mov
ljmp
loop
repz
incb
ret
ret
add
iret
in
fucom
loope
aad
jmp
xlat
lret
rcl
imul
clc
aam
shr
int
jmp
repz
lods
cmc
out
lock
int
mov
cld
or
inc
add
lret
not
in
mov
rol
jmp
std
loop
fistpll
rolb
or
fldl
jecxz
loop
shl
out
lods
lret
mov
lock
in
add
div
rcr
in
out
clc
not
pop
out
fstp
out
test
int3
mov
mov
ret
icebp
hlt
fcmovnb
ret
push
pop
in
std
out
in
fmul
fdivrs
leave
mov
int
mov
cld
stc
rcl
out
ret
pop
fcomi
lret
fiaddl
pavgb
shr
into
enter
mov
mov
fisttpl
jecxz
push
add
out
into
divb
lock
iret
fnstsw
ret
fildl
neg
rolb
into
jmp
icebp
hlt
xlat
mov
mov
not
in
loopne
clc
fnstcw
lret
lret
add
shl
mov
mov
ljmp
cld
out
in
mov
add
aad
jmp
in
fmul
in
xlat
lods
leave
loope
jmp
jmp
aam
stc
clc
add
sti
add
out
ffree
or
repz
mov
dec
clc
jmp
clc
std
push
in
hlt
or
or
out
iret
repz
leave
rcl
out
cld
lret
add
stc
ret
fdivr
xlat
xlat
ret
or
ud0
out
mov
in
lret
int
hlt
aad
mov
lock
sti
fisttpl
jmp
add
in
loopne
in
ret
shl
lock
out
std
repz
call
jmp
in
flds
out
pop
int
adc
into
rol
iret
lret
fidivl
jecxz
icebp
fscale
shl
jecxz
add
fisttpl
in
lret
out
divb
idiv
repnz
cmc
jecxz
ret
pop
std
ffree
rol
fcmovnb
add
into
fcomp
dec
mov
enter
in
ljmp
mov
loopne
ret
add
stc
clc
loopne
jmp
ror
fucomi
jmp
loop
roll
clc
mov
mov
lret
loope
idiv
lock
mov
repnz
mov
lock
call
add
add
loope
mov
jmp
call
neg
out
ret
loope
cld
lds
or
incl
jecxz
or
rcl
enter
cmc
mov
int
in
fcmovne
ror
fiaddl
ffreep
push
cli
out
or
push
in
std
cmpsl
ret
lock
mov
mov
aad
into
imul
aad
fabs
out
repnz
jmp
fdivrp
int3
cmpsb
fdiv
mov
mov
cmc
neg
in
fucomip
std
hlt
pop
fidivrs
fisttpl
paddusw
loopne
lods
repnz
scas
int3
shl
rcr
out
call
int
loope
add
fiadds
clc
mov
cli
loopne
mov
fnsave
cmc
sti
xlat
sarb
fnstsw
ljmp
in
jecxz
out
mov
mov
in
cmc
std
cmc
not
mov
out
movl
loop
mov
int3
int
into
out
mov
hlt
imul
add
neg
jecxz
in
syscall
lret
cli
loope
ffree
ret
jmp
mov
mov
std
out
aad
fsubr
push
jmp
loope
mov
mov
fucomi
out
mov
loope
int
pop
stc
out
jmp
or
fmul
mov
sti
lret
lret
fidivrs
fsub
fcmovu
cli
add
loop
into
out
stos
in
shr
jmp
in
cmc
mov
flds
stc
faddp
xlat
loop
fisttpll
call
cmpsb
call
mov
jmp
std
jecxz
loopne
add
lret
out
repnz
imul
stos
leave
out
scas
fcom
ror
fdivr
fcmovnu
ret
stc
out
ret
hlt
in
aad
add
cli
or
add
ret
lods
repz
xlat
lret
aam
mov
loope
add
les
mov
lds
cmc
ror
rcr
aad
iret
add
in
ret
add
lret
jmp
shl
ret
mov
lods
fcomip
sar
fmul
loop
hlt
les
clc
neg
aam
in
lret
loopne
rol
div
int3
in
leave
in
stc
fnstcw
idiv
add
cld
or
out
pop
icebp
mov
out
ror
ljmp
sarb
loope
aam
std
add
faddp
or
ror
cmc
in
shl
into
lret
ljmp
mov
out
iret
out
iret
loope
call
out
repz
iret
lock
or
sti
out
std
fcmovu
fst
lods
lock
mov
mov
push
loope
std
aam
fucom
pminub
ret
in
cmc
rcl
clc
xlat
mov
rcr
ret
out
cld
ror
add
stc
loopne
repz
out
mov
ror
shll
lock
jecxz
loope
clc
fiaddl
loop
clc
fcmovnu
jecxz
in
test
fxch
int3
int
mov
lock
mul
lret
out
hlt
cli
fistpll
repnz
ror
mov
in
mov
sar
hlt
mul
jecxz
std
in
fyl2x
lds
stc
mov
std
aad
clc
add
add
div
or
int3
mov
in
mov
fnstenv
loopne
mov
fucom
iret
ljmp
shl
rcr
cmc
jmp
ret
call
mov
jecxz
adc
add
lods
icebp
fcomi
fcomi
sar
jmp
cld
add
in
repnz
add
cli
add
int3
iret
scas
shll
int3
fstpt
fsubp
aad
fisttps
shr
aam
hlt
decl
mov
fcmovnbe
enter
int
xlat
add
mov
hlt
idiv
jmp
add
mov
in
enter
out
mov
add
cli
mov
rol
sar
or
mov
stos
jmp
sti
shl
repnz
sti
push
push
push
stc
sti
pop
adc
jmp
ret
icebp
out
sti
aad
mov
out
loop
jmp
incl
fimull
add
enter
lods
lret
cmc
sti
int
sar
lret
int
hlt
add
ret
shl
add
fmul
aam
push
lock
cli
mov
xlat
std
mov
add
loopne
fld1
stos
ret
icebp
mov
mov
shr
stc
enter
mov
into
add
int
add
decl
int
shl
fmul
ret
mov
ror
in
int3
mov
shl
iret
add
hlt
jecxz
cmc
add
push
leave
into
repnz
mov
in
jmp
xlat
clc
repnz
hlt
sti
out
imul
lret
leave
or
in
test
mov
ljmp
loope
int
loope
repnz
loop
in
or
in
repnz
ret
loope
hlt
out
shl
jmp
jmp
sar
std
cli
mov
jmp
in
fmul
out
enter
int3
aam
lret
mov
aad
out
add
clc
add
push
faddl
loop
int3
or
shr
lret
out
lods
cmc
mov
add
push
mov
lret
add
adc
mov
ljmp
jmp
dec
fxch
out
mov
push
aam
cmc
fadds
call
shll
hlt
hlt
call
cld
enter
rolb
fdiv
push
shrb
repnz
out
mov
mov
mov
ret
aad
add
leave
out
call
mov
mov
rcl
loop
into
out
cmc
loopne
add
lret
out
or
shr
mov
lods
mov
fsub
div
int3
ror
mov
cld
xlat
aad
add
loop
jmp
or
call
fcomi
hlt
shr
in
cld
lock
mov
jecxz
fprem1
or
mov
lods
mov
leave
shr
call
fcmovbe
mov
loopne
clc
aam
fcomp
call
in
rcl
in
mov
sar
in
sti
int
in
out
or
sarl
shl
cmc
out
sarl
sarl
fdivp
push
les
into
or
lds
leave
ret
mov
sar
aad
mov
out
mov
xlat
fldl
add
fsubr
fnstenv
repz
shr
int3
mov
int
out
out
loop
fdivp
fildl
mov
aam
mov
fcmovne
in
divl
inc
sti
fildl
hlt
std
or
paddusw
ljmp
mov
aam
out
fucomi
push
add
lret
or
repz
ror
xlat
mov
out
fcomi
add
rol
cli
repnz
les
enter
add
int
in
mov
iret
ljmp
mov
out
out
fisttps
stc
call
incl
in
mov
shll
mov
add
mov
aam
loopne
out
enter
jmp
shlb
icebp
jmp
in
lock
les
aam
hlt
ljmp
loop
shl
call
xlat
fidivl
int
out
lock
fcmovnu
in
loopne
out
mov
loop
fcmovne
mov
jecxz
cmc
out
add
cmc
jmp
cld
jecxz
mov
in
fst
mov
enter
mov
lock
or
dec
add
mov
rcr
shl
in
mov
loop
loope
add
lret
movl
cmpsl
les
divl
repnz
rcl
fdivrp
rol
aam
loop
in
int
loope
shll
ljmp
mov
add
in
loopne
push
or
repnz
loop
fnsave
repz
call
cld
fcomi
out
loope
loop
add
rol
int
in
iret
mov
cli
jecxz
pop
add
out
jmp
decl
lret
mov
test
fldlg2
mov
sti
std
fisttpl
out
or
push
or
jmp
shr
mov
hlt
repnz
idivl
lds
in
or
std
fdivr
sti
or
mov
in
in
sarb
mov
hlt
repnz
push
or
rcr
aad
mov
vpsubb
mov
fldl
rol
lock
lret
leave
sti
jecxz
repz
mov
icebp
clc
fldl2t
aam
jmp
repz
cld
jmp
smsw
out
cli
ljmp
into
mov
out
fcmovbe
mov
fdivrp
sar
add
fxch
aam
loop
mov
out
out
rol
repnz
int
ret
mov
in
push
loopne
push
into
ret
mov
mov
mov
neg
sarb
shl
loop
ljmp
xlat
int
mov
mov
clc
shl
ret
add
add
add
cli
mov
in
mov
mov
into
cmc
repnz
ret
add
lock
repz
mov
stc
fyl2x
mov
rol
repz
fcmovnu
loope
rcr
in
add
mov
aam
jmp
mov
testl
aam
shr
loopne
add
lods
lret
lods
in
jmp
idivl
mov
lock
icebp
add
leave
or
loope
ret
ret
mov
xlat
leave
cmc
rcr
mov
fcmovbe
fucom
ror
ljmp
leave
mov
jmp
mul
idiv
aam
fsincos
iret
jecxz
out
cmc
cli
push
jmp
scas
mov
in
call
call
sarl
fucom
fmull
loop
add
into
ljmp
mov
mov
cmc
in
clc
ret
loope
stc
std
cld
sti
enter
shr
out
mov
mov
shl
inc
fst
aad
jmp
fadd
cmc
jecxz
shll
mov
mov
or
or
jecxz
cld
add
repnz
mov
out
iret
sti
into
std
mov
shl
push
lock
lret
in
adc
mov
enter
leave
xlat
div
call
clc
rol
in
out
out
mov
loopne
lret
rol
lret
jmp
into
int3
repnz
xlat
loopne
add
fsubp
ljmp
add
mov
out
hlt
ljmp
into
in
int3
shl
repnz
jmp
shl
stc
or
fsub
int3
lods
out
not
lods
aad
lret
jmp
mov
into
mov
hlt
out
lds
lret
in
or
icebp
in
ror
mov
aam
iret
in
mov
fadd
xlat
incb
iret
ret
icebp
out
into
lret
jmp
shl
int
shl
lock
clc
cli
hlt
psllq
psllw
lock
imul
shr
into
neg
out
clc
mov
lock
shl
add
hlt
xlat
aam
in
add
rcr
mov
xlat
int
lret
ret
into
call
iret
idivb
pop
stc
cmc
or
in
in
lods
movsl
shll
aam
mov
idivl
std
aad
xlat
ret
in
std
aam
out
mov
iret
mul
lods
sti
in
leave
xlat
jmp
in
fcmovnu
iret
repnz
sarl
hlt
or
leave
lock
fcmovnb
mov
repnz
mov
fsubp
clc
mul
rcr
out
lret
test
loop
lret
not
in
mov
out
rcl
aad
add
add
enter
enter
sarl
in
rcr
lock
ret
mov
mov
loope
add
lret
or
fsub
icebp
icebp
lret
shlb
in
not
jecxz
add
lock
fstp
add
add
out
ret
rcl
fxch
fnstcw
mov
out
sar
frndint
roll
femms
loop
fisttpll
add
in
scas
jmp
repz
out
ljmp
std
sar
fdivrl
lds
fcomp
mov
movsb
mov
in
mov
rcl
neg
add
incb
out
add
std
mov
mov
iret
fidivl
cmc
ret
int3
repz
push
roll
or
loope
fucomp
iret
std
shl
mov
ror
out
int3
clc
mov
fidivrs
clc
lds
add
decb
incb
repnz
int
jmp
ret
int3
shr
out
clc
mov
push
std
fst
ffreep
rorb
in
jmp
or
fucomp
xlat
mov
mov
out
in
cld
enter
pop
sti
repz
out
out
into
jmp
mov
jmp
mov
int
ret
add
std
loopne
jecxz
mov
out
mov
out
rcl
mov
call
loop
ret
loope
jecxz
lret
pop
add
lods
rol
fdiv
shr
les
jecxz
mov
add
leave
out
jmp
jmp
clc
lods
std
mov
iret
clc
repnz
mov
in
fcmovbe
flds
jmp
ret
fcmovnbe
clc
in
out
mov
dec
cli
out
pop
add
jecxz
lret
vpaddsw
in
enter
fnop
fst
cmc
xlat
loop
ret
fxam
sar
in
jmp
out
shr
shl
cmc
ret
mov
mov
lock
rol
add
lret
add
in
repz
loope
loope
lret
mov
mov
frndint
mov
fcmove
aam
lret
jmp
scas
enter
out
mov
lock
std
into
mov
mov
sar
lds
add
loope
clc
loop
jmp
lods
out
cmc
call
sarb
or
ret
add
out
loope
jmp
fmulp
loopne
mov
lock
lock
std
jecxz
fiaddl
add
pop
fld
not
leave
jmp
test
in
in
repz
mov
in
clc
lock
fucomp
out
or
bswap
ret
iret
out
mov
mov
int3
mov
sar
xlat
out
mov
aam
out
std
out
repnz
in
in
shl
ror
enter
xlat
lret
mov
aam
add
cli
leave
loope
push
std
add
jmp
mov
jmp
shll
xlat
mov
out
loopne
int3
add
ret
stc
push
clc
call
test
mov
icebp
jmp
rcr
cli
ret
idivl
xlat
add
fcos
leave
stc
iret
in
loop
loop
out
in
mov
enter
shl
out
mov
repz
rcl
int3
iret
lock
lods
fadd
mov
cli
in
mov
loopne
add
fildl
jmp
incb
or
fdivrl
mov
div
icebp
jmp
ror
add
fadds
shl
clc
sti
out
psubd
leave
in
lret
lods
jmp
repz
fcmove
mov
roll
lret
in
clc
rol
sti
call
out
shl
cmc
fstpt
out
ror
cld
out
push
cli
fdivrp
jmp
loop
loopne
int
int3
scas
cmc
rol
fcmovnu
mov
out
into
stc
mov
aad
add
ljmp
jmp
loopne
jmp
iret
mov
fcomp
or
call
loopne
mov
out
out
out
sar
mov
fxch
fsub
lret
or
ffree
fdivl
xlat
rcr
call
mov
hlt
jmp
out
aam
in
mov
mov
out
lret
mov
aad
loope
rcl
add
pop
enter
or
mov
mov
ror
stc
int
cli
fcomip
lret
cli
loopne
cmc
rolb
ror
enter
call
in
out
fbstp
cmc
int3
fcmovnbe
fimull
in
or
repnz
lret
mov
rcr
ret
in
sti
loope
out
sti
out
jmp
shrb
mov
out
cmc
lret
out
fnstsw
mov
or
adc
sarl
repnz
int
fcmovnu
xlat
repnz
fdivp
fiaddl
loope
hlt
leave
fxch
or
shlb
mov
mov
mov
rcl
add
in
loope
sar
pop
fdivr
pop
cmpsl
lret
test
dec
hlt
lret
out
aad
shl
div
add
add
stc
push
cli
leave
or
shrb
repz
mov
mov
loop
movl
out
stc
or
call
lock
call
fcom
cli
repz
clc
add
into
stc
into
rcr
mov
mov
cmc
fdiv
in
leave
fcom
aam
idivb
cld
or
iret
out
call
out
stos
shr
sti
fidivs
loop
int3
pop
mov
enter
or
ret
loope
mov
mov
clc
aad
aam
loop
loope
stc
loope
fucomi
in
lret
test
lods
ret
out
lock
repnz
mov
aad
fcmovne
fld
rol
lock
imull
cmc
in
xlat
call
div
add
out
fdivr
or
clc
iret
lock
enter
mov
repnz
cmc
xlat
mov
aam
out
loop
cmpsl
in
out
fst
ret
call
int3
loope
iret
icebp
repz
aam
add
fldl
push
cld
leave
jmp
mov
shr
test
sar
loop
mov
mov
loop
out
scas
out
icebp
not
in
int3
sti
cld
hlt
sti
mov
test
clc
add
loope
scas
aad
jmp
stc
out
mov
shl
in
ljmp
lock
shl
cli
ljmp
lret
divl
add
add
or
fdivs
iret
iret
mov
fbstp
xlat
loop
not
rcr
mul
lret
inc
in
out
jmp
out
leave
shl
in
in
sti
mov
in
shl
xlat
rol
cli
fcmovnbe
testl
add
int3
mov
aam
into
mov
mov
jmp
shr
jecxz
loopne
in
in
out
fcomip
mov
scas
ret
loope
fdivs
fdivr
rcr
xlat
in
fst
out
fdivr
or
lret
in
mov
mov
int3
std
not
mov
flds
fucom
aam
call
les
out
rol
ljmp
cmc
pop
mov
out
lret
in
icebp
out
leave
call
mov
in
sar
fiadds
ljmp
fld
bnd
out
int3
lret
sti
sarl
rol
icebp
lock
or
int3
fucom
mov
mov
icebp
fyl2xp1
xlat
fidivrl
icebp
cli
sti
or
les
or
cld
lret
std
shr
lock
mov
in
rol
fcom
add
in
movb
icebp
lock
in
lods
mov
ror
fcmovnbe
clc
int3
fucom
fcomip
add
fnstsw
fxch
or
in
ror
test
jmp
out
call
mov
repz
ljmp
test
lods
jecxz
ljmp
lock
repnz
icebp
incb
lock
out
add
clc
repz
out
ror
lret
lret
cmc
int
out
lock
add
mov
loope
mov
in
leave
in
idiv
shr
leave
std
mov
shl
lret
ljmp
loopne
out
ror
shr
f2xm1
in
jmp
hlt
leave
clc
mov
add
add
add
fmul
cld
stc
cld
add
ret
shll
cmc
fstp
shl
add
std
idivb
pop
add
cli
loopne
faddp
mov
into
shr
mov
sti
cli
mov
out
div
std
std
call
in
mov
rol
mov
iret
sti
int
mov
aad
rol
jmp
std
int
ret
jmp
aam
hlt
aad
cli
cmc
aam
hlt
repnz
cli
add
cld
mov
lret
adc
jmp
lret
jecxz
mov
clc
stc
mov
in
loop
mov
add
jmp
stc
adc
mov
xlat
in
mov
repz
in
mov
rcl
fcmovnu
std
add
aam
push
in
or
loopne
mov
lret
sti
enter
rcr
fsub
int3
shl
mov
jmp
lret
fdivl
not
out
repnz
into
mov
ret
fdiv
cld
mov
lret
add
fdivr
sarb
out
mov
out
icebp
jecxz
fscale
sti
in
cld
sar
cld
neg
cld
fucomp
or
scas
repnz
out
hlt
shlb
int3
fsub
mov
fiadds
out
loopne
cmpsb
jmp
cli
fsqrt
mov
loop
cli
in
shl
fcmovnu
add
add
flds
loope
loopne
lret
mov
in
ret
fxch
enter
fcmovnb
out
out
jecxz
add
pinsrw
fadd
repz
in
leave
out
enter
shl
ret
shl
std
stc
loop
loope
or
rcl
sti
div
scas
mov
sar
fdivrl
aam
ret
leave
pop
fcoml
jecxz
out
fadd
hlt
mov
mov
mov
mov
filds
add
int
mov
sti
mov
icebp
jmp
push
xlat
push
cli
rolb
repz
lret
mov
rol
loopne
clc
mov
sti
std
clc
out
int3
fstpt
loop
loop
loopne
out
out
rcr
lret
enter
int
mov
mov
aam
or
cli
or
in
loope
loopne
lret
aad
in
test
testl
add
jecxz
out
loope
int
rcl
in
mov
into
shr
lret
in
mov
ret
mov
lock
loope
fimuls
lret
adc
int3
out
fxch
not
sar
repnz
add
lock
jmp
jecxz
enter
cli
out
mov
enter
mov
mov
fdiv
fcmovu
mov
aam
out
add
add
jecxz
lods
ret
in
hlt
test
mov
mov
lret
pop
jecxz
pavgb
push
jmp
imull
call
mov
mov
pop
or
loopne
in
rcl
mov
int3
mov
jmp
fdivp
mov
in
add
jmp
loop
add
fucomip
out
mov
mov
mov
fdivr
vmovq
add
fcomp
or
iret
fcmovbe
in
call
ljmp
mov
fst
incb
loope
leave
add
dec
shl
fsubp
mov
ret
out
clc
jmp
iret
jecxz
fst
cmc
jmp
fmul
fdivr
mov
rcr
imul
iret
repz
fnsetpm(287
repnz
xlat
cli
add
enter
repz
iret
mov
jecxz
mov
loopne
jmp
in
fildl
rcl
fisttpl
cld
sar
call
lret
lods
leave
into
icebp
loopne
aam
int3
stc
lock
fcmove
in
jecxz
fsubp
lock
fisttpl
sbb
dec
xor
add
pop
mov
pop
pop
leave
ret
push
mov
sub
sub
movl
lea
xor
mov
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
lea
mov
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
neg
mov
negl
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
xor
dec
mov
jmp
xor
add
mov
mov
sbb
mov
add
mov
mov
mov
xorl
mov
addl
xor
xorl
add
movl
cmp
je
movl
jmp
jmp
movl
mov
movl
cmp
movl
je
or
lea
mov
orl
mov
mov
and
xor
add
mov
mov
mov
sbb
xor
or
add
mov
xorl
xor
notl
add
mov
imul
movl
cmp
movl
je
sub
mov
inc
mov
mov
mov
subl
add
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
mov
adcl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
sbb
mov
movl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
xor
add
mov
xor
mov
xor
lea
mov
xor
add
imul
sub
mov
cmp
jg
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
add
not
and
mov
lea
mov
mov
movl
movl
lea
mov
mov
movl
movl
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
je
mov
xor
add
mov
sub
mov
jmp
jmp
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
mov
mov
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
jne
mov
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
call
leave
ret
push
mov
push
orl
push
sub
lea
adc
mov
mov
xor
mov
and
mov
mov
sub
mov
orl
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
mov
notl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
leave
ret
push
mov
sub
add
push
addl
mov
xor
add
xorl
mov
movzbl
adc
mov
mov
mov
xorl
mov
movzbl
and
mov
mov
mov
mov
inc
mov
andl
xor
sub
movl
sbb
xor
subl
xor
mov
movl
mov
movl
cmpl
jne
movl
cmpl
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
pushl
call
jmp
mov
subl
xor
xorl
sub
movl
sbb
xor
xor
mov
movl
mov
cmpl
movl
jne
movl
cmpl
je
dec
mov
xor
or
sbb
mov
xor
xor
or
mov
and
add
xor
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
jmp
mov
mov
add
mov
subl
sub
mov
xor
movl
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
xor
mov
xorl
xor
xorl
add
addl
mov
subl
lea
notl
mov
negl
mov
xorl
xor
subl
add
mov
adcl
lea
subl
push
mov
adc
mov
orl
xor
orl
add
xorl
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
adcl
pushl
sbbl
call
mov
orl
mov
mov
addl
mov
sub
mov
sub
xor
cmp
jne
decl
xor
jmp
xor
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
movl
movl
movl
or
mov
mov
mov
sbb
xor
addl
add
mov
sub
mov
sub
movl
mov
movl
movl
cmpl
movl
je
mov
neg
xor
mov
xor
adcl
lea
mov
xor
div
mov
add
xor
andl
add
mov
xor
add
andl
sub
cmp
jne
sbb
mov
xorl
add
sbbl
mov
mov
sub
mov
orl
xor
add
movl
mov
movl
jmp
sbbl
mov
andl
inc
mov
sub
mov
addl
xor
xorl
add
movl
cmp
jae
inc
mov
sub
addl
xor
or
add
mov
mov
mov
mov
mov
cmpl
movl
jbe
movl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
add
mov
mov
mov
jmp
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
movl
jmp
xor
movl
jne
and
movzbl
xor
sbbl
add
movl
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
add
mov
add
movzbl
sub
mov
adcl
mov
xorl
xor
adcl
add
mov
andl
ror
subl
mov
subl
xor
mov
add
orl
mov
mov
mov
subl
sub
subl
xor
movl
cmp
movl
jne
mov
xor
add
mov
adc
mov
andl
xor
add
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
push
push
push
call
cmpl
jb
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
sbb
mov
sub
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
call
xor
add
dec
mov
jmp
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
sub
movl
mov
jmp
mov
movl
mov
orl
movl
movl
movl
mov
and
movl
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
xor
sbb
mov
add
mov
andl
sub
mov
movl
movl
movl
cmpl
movl
je
mov
xor
xor
mov
subl
xor
lea
mov
adcl
xor
subl
div
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
mov
xor
add
jmp
test
jb
adc
orb
xchg
jp
add
lret
or
not
out
rol
fcmovnbe
into
mov
mov
pop
add
int3
fsubr
xlat
ror
mov
test
aam
lret
hlt
ljmp
add
fstp
sti
push
in
shlb
mov
ror
rol
xlat
mov
icebp
fdiv
add
in
lret
filds
out
mov
lods
shlb
mov
add
fdivr
repz
cli
jmp
add
cli
enter
shlb
sarl
sarb
aad
loope
out
out
divb
fadd
out
lret
jmp
loop
loop
out
loope
call
add
push
loopne
test
int
cmc
fcmovnbe
sar
fmul
mov
out
int3
mov
cld
jmp
loopne
or
xlat
fcmovb
repnz
ljmp
sar
fld
lret
or
leave
sar
lods
loopne
cmc
aam
loopne
lret
mov
fnstenv
xlat
mov
in
pinsrw
loop
lods
shl
ljmp
mov
cli
loopne
ret
fcos
out
or
sti
mov
mov
shr
sti
iret
sti
int
in
in
jmp
loopne
xlat
cli
iret
ret
call
lods
lret
icebp
jmp
cli
enter
in
ftst
or
cmc
ljmp
icebp
iret
mov
in
aad
rcr
mov
xlat
not
int
mov
aam
out
or
loop
cmc
les
in
int
cmc
out
rcr
in
hlt
or
lret
rol
lods
enter
enter
ljmp
cmc
out
add
ficoms
lret
leave
loope
icebp
jecxz
aad
lock
cli
fmul
clc
lock
mov
out
fcmovnb
fildl
lret
lret
test
lods
shr
mov
jmp
mov
stc
shr
pop
add
dec
adc
rol
leave
loope
loope
hlt
lret
cmc
int3
xlat
add
shl
stc
add
in
jmp
lock
in
mov
out
divl
hlt
int
aad
or
add
or
shlb
stos
jecxz
fmul
lock
leave
stc
cmc
loop
xlat
fucom
fdivr
jmp
or
fsub
lret
iret
lods
icebp
mul
rol
int
enter
sar
aam
cmc
int3
fst
cld
fimull
fcmovnu
faddp
in
ror
loopne
shl
lods
rcl
not
cmc
fcom
call
icebp
sar
cld
loop
loope
std
adc
shl
out
repz
leave
lock
fucomi
lret
out
into
aad
out
out
in
pavgw
iret
fadd
mov
out
aam
jmp
idiv
fdivr
or
or
fmulp
ljmp
int3
mov
out
cli
enter
fnstenv
repz
incb
or
jecxz
out
mov
iret
int3
fdivs
enter
fiadds
mov
xlat
cmc
add
scas
out
lods
loop
leave
hlt
lret
ljmp
mov
add
fcmovb
fldl
or
jmp
cmc
out
mov
iret
clc
in
sti
cmc
fnstcw
ret
add
pop
in
out
shr
repnz
clc
rol
mov
or
in
lret
mov
aam
ror
div
mov
not
clc
fcmovbe
shr
aam
icebp
fdivrl
hlt
in
loopne
in
stc
mov
mov
cmc
pop
mov
add
out
or
ret
jmp
mov
repnz
cmc
lret
in
enter
fstp
lret
mov
ljmp
mov
mul
mov
mov
int3
shll
in
in
lock
out
cmc
leave
int
call
stos
mov
mov
mov
into
rcr
fmul
mov
xlat
in
jecxz
neg
fsubrp
fcmovb
lock
lret
in
iret
call
in
mov
cld
fadd
mov
loopne
or
les
out
mov
fsubr
fidivs
movl
fadd
div
xlat
in
aad
stc
in
mov
add
idivb
push
enter
in
lret
stos
mov
std
call
mov
cld
icebp
filds
into
or
loopne
xlat
iret
in
rcl
jmp
hlt
idivl
add
or
or
adc
lret
shll
fcmove
out
call
xlat
into
mov
add
enter
pop
lock
out
ror
fcmovu
lret
leave
clc
fildl
add
loope
ret
fimuls
call
or
lret
loopne
mov
loope
call
fucomip
out
loope
lock
or
flds
jecxz
ljmp
into
scas
mov
mov
mov
add
movl
mov
rol
jmp
out
fmul
cld
loope
push
repz
repnz
enter
int3
fnstsw
icebp
into
test
sarl
ret
out
icebp
rcl
fcmove
jmp
fcmovnu
push
shr
iret
call
iret
call
out
std
mov
int3
add
div
jmp
out
lret
faddp
mov
ret
in
mov
mov
mov
push
ljmp
lods
icebp
mov
repnz
lods
fucomp
mov
sar
shr
jecxz
out
in
in
rcr
xlat
fidivs
mov
lret
cli
int
mov
lret
imul
add
mov
lods
in
loop
xlat
cmc
mov
fxch
out
mov
mov
psubb
mov
fnsave
ror
clc
cmc
fxch
aam
loopne
clc
stc
repnz
out
iret
loop
lock
mov
shrb
sti
loopne
in
out
aam
lock
icebp
ret
imul
xlat
mov
aad
into
mov
aad
rcl
out
aad
in
stc
in
in
push
or
ret
in
mov
fyl2xp1
div
enter
loope
in
jecxz
add
aam
int
enter
lods
mov
aad
cld
jecxz
add
filds
stc
add
cli
rorb
into
add
mov
divb
fmul
in
sti
add
cli
jecxz
add
fxam
hlt
fcoms
shl
mov
loopne
shlb
icebp
ljmp
rcl
ret
aam
add
into
jmp
int3
mov
cli
fcmove
in
iret
mov
add
jmp
fsubrp
out
rolb
jmp
out
out
out
rol
rep
cli
cmc
repz
lret
loopne
ret
mov
loopne
cld
loop
shl
fucom
shl
cmc
lock
mov
in
mov
mov
ret
mul
cmc
lret
mov
add
add
iret
int
repz
out
ror
xlat
ret
fcom
div
hlt
jmp
call
test
lods
out
vpsubq
mov
mov
jecxz
lds
jmp
lret
loopne
scas
scas
iret
mov
aam
repnz
jmp
out
hlt
hlt
loop
or
ror
xlat
pop
fcmovne
in
fsub
int
out
lods
into
iret
rcl
fcmovbe
lods
jmp
clc
not
sar
aad
fsubrp
add
or
jmp
lret
in
leave
mov
leave
hlt
cmc
test
fcmovbe
leave
aam
sti
or
adc
mov
leave
fcmovnu
in
dec
jmp
shl
loopne
movl
add
icebp
fsubp
scas
ret
loope
out
mov
rcl
jmp
xlat
fildl
shl
pop
add
in
repnz
aad
loop
loopne
int
int3
mov
jecxz
fsub
neg
jmp
push
enter
loope
jmp
fbstp
jecxz
loopne
fldl2e
rorl
aad
clc
int
add
out
imulb
fcmovbe
mov
mov
fcomi
xlat
out
icebp
cmc
add
clc
lds
into
or
in
mov
iret
lods
loope
mov
aam
aad
mov
lock
push
fdivr
out
or
mov
sti
int3
mov
fcomi
int3
idiv
jmp
in
in
loope
xlat
cmc
iret
ror
out
ret
loope
int3
ror
fadd
mov
sti
std
jecxz
neg
out
or
out
fmul
out
ljmp
out
in
not
fcom
out
add
lret
loop
loopne
add
int3
call
mov
div
mov
test
in
mov
shrl
sar
sti
std
test
mov
rol
mov
mov
stos
leave
loopne
repnz
int3
mov
clc
stc
fucomp
sar
ret
fdiv
hlt
loop
ljmp
repnz
mov
out
test
enter
mov
add
ret
xlat
xlat
rolb
int
imul
in
mov
jmp
mov
sar
aad
fcomip
fadd
pop
shl
fadd
ror
push
std
add
lods
in
loopne
les
not
jecxz
loopne
fadd
aad
or
ljmp
shr
scas
scas
not
mov
jmp
leave
rcr
cld
shl
jecxz
incl
jmp
cld
pandn
jecxz
int3
enter
ror
iret
hlt
div
idiv
loop
int
flds
pop
pmaxsw
dec
pop
vpavgw
in
lret
aad
int
cld
icebp
sti
int
fdivrs
call
mov
hlt
out
loope
repz
shl
fsub
fdivrp
loop
invd
fcmovnb
mov
mov
ror
mov
mov
iret
clc
cmc
std
out
loop
out
ljmp
out
jmp
out
cli
lock
hlt
cld
fcmovbe
loope
add
aam
out
clc
enter
mov
rcl
in
sti
mov
in
repnz
add
in
add
psubq
leave
cmpsl
fsubrs
in
test
xlat
fdiv
ret
add
clc
or
lret
iret
in
mov
mov
in
pushl
mov
in
or
fdiv
add
leave
loope
repz
cli
lret
cld
jecxz
mov
shl
loopne
ffreep
jmp
jmp
jmp
jmp
out
mov
divl
add
cld
jmp
jmp
mov
sti
lock
int3
in
leave
xlat
fxtract
jecxz
int
add
add
cld
push
cld
loope
mov
stc
fld
repnz
enter
add
cld
ret
xlat
flds
push
add
fimuls
fucomi
add
fcomip
mov
iret
in
mov
clc
icebp
cld
ret
mov
fadds
frstpm(287
out
mov
mov
loop
sar
shr
aam
std
call
cmc
aad
dec
add
enter
cmpsb
iret
loop
in
mov
into
lods
sarb
sar
std
repnz
add
cmc
jmp
push
shl
in
shl
xlat
xlat
in
icebp
mov
loop
fidivrs
fmul
loop
ljmp
iret
mov
into
jmp
cli
mov
ljmp
aad
ljmp
push
or
loopne
mov
vshufps
cli
leave
repz
loop
int
mov
fabs
in
icebp
mov
ror
leave
mov
jmp
into
clc
in
ret
leave
or
stc
loop
adc
mov
out
int
fucomip
lods
hlt
add
ret
std
in
cld
loopne
fnstcw
cmc
jecxz
shl
mov
xlat
in
out
les
shl
aam
aad
ud2
out
in
lret
test
cmc
lock
mov
mov
hlt
call
mul
into
push
psubd
lods
out
out
ror
fscale
repz
roll
add
bswap
jecxz
lret
icebp
iret
jmp
in
fidivl
add
out
std
flds
into
lret
into
hlt
vpmovmskb
mov
shll
iret
aam
loopne
loop
loopne
mov
stos
in
not
xlat
mov
iret
leave
in
into
fxch
mov
loopne
loop
std
out
aam
add
rol
mov
lods
lods
loop
mov
out
mov
repz
rcr
mov
in
add
fimuls
loopne
lret
int3
xlat
lods
shlb
cli
mov
or
fmul
fmul
jmp
in
jmp
in
in
mov
rcl
out
mov
fildl
in
ret
out
ret
call
xlat
repz
mov
cmc
int3
mov
shl
add
or
or
fucomi
add
iret
leave
ljmp
jecxz
fcmovnb
mov
out
not
jmp
ljmp
mov
mov
rcr
cli
out
int
out
in
mov
int3
mov
clc
ljmp
fsubrp
out
mov
out
xlat
mov
mov
loope
fcmovb
fcomi
add
out
int3
pop
mov
ror
mov
rcl
aam
aad
into
mov
fcmovbe
cli
lock
out
jmp
mov
in
sar
aad
dec
stc
ljmp
shl
icebp
fisttps
les
int3
add
lods
ret
cmc
ret
xlat
cmc
mov
repz
out
rol
cli
rcr
or
push
or
fidivs
jmp
stc
fidivrl
jmp
out
in
leave
in
or
int3
mov
mov
loope
lods
repz
out
icebp
mov
hlt
loop
loope
incb
fsub
enter
ret
mov
sti
sarb
stc
enter
rcr
aam
test
aam
add
out
vcvttpd2dqx
iret
hlt
loope
stc
in
clc
aad
loope
fst
shr
mov
mov
dec
call
fxtract
mov
icebp
stc
out
cld
cld
inc
fldpi
jmp
test
out
loope
fabs
in
into
lret
mov
mov
jmp
fildl
mov
cmc
lock
mov
repz
cli
call
sti
add
cld
push
cld
or
lret
out
fsubr
add
lock
shl
mov
fsub
idiv
fmul
sarl
inc
jmp
fists
loopne
rcr
in
mov
rcl
les
hlt
fsubp
test
jmp
add
ljmp
test
shr
enter
int3
ret
in
in
lock
loope
iret
jmp
mov
lock
jmp
fdiv
enter
repnz
jecxz
psraw
loope
out
mov
mov
repnz
shlb
not
rolb
or
add
cld
fadds
test
shl
ljmp
test
iret
add
mov
shl
int3
call
mov
jmp
hlt
aad
fidivrl
in
ffreep
decb
add
aad
ljmp
repnz
mov
loopne
push
repz
enter
lods
ret
cli
out
mov
ffree
mov
flds
aam
add
ret
ljmp
mov
clc
mov
ret
call
int3
aad
rcr
add
pop
iret
leave
fsubr
sarl
mov
ljmp
cld
fdivp
sar
ljmp
call
int3
in
jmp
mov
fldl
incl
fst
loopne
lret
fimuls
add
into
fbld
mov
enter
lret
add
out
aad
out
hlt
call
repnz
shll
mov
sar
neg
ret
ljmp
out
adc
loopne
int3
mov
ljmp
mov
aad
mov
call
or
fucomp
int
loop
out
mov
les
pop
fcomip
add
clc
xlat
shr
std
add
fcmove
mov
jmp
ljmp
fdivrp
cli
sar
cmc
mov
lds
add
lret
loope
aad
mov
repz
mov
int
xlat
enter
mov
add
enter
or
push
cmpsb
mov
shr
cli
not
int
iret
in
aad
fcomi
cli
std
shl
mul
cmc
aad
enter
mov
jmp
test
test
loop
aam
fidivrl
neg
flds
out
or
ret
aad
sti
jmp
in
repnz
mov
cld
stc
jecxz
ljmp
call
enter
cmc
mov
sarl
shl
lock
fmull
or
call
sarl
xlat
xlat
leave
mul
ret
clc
fsub
lret
neg
out
or
or
mov
enter
repz
sti
mov
rol
in
pop
enter
int3
pop
adc
lret
test
mov
loope
mov
jmp
ror
fdiv
fsub
push
test
clc
ror
in
iret
leave
mov
mov
repz
add
inc
loope
fcmovnb
xlat
add
loop
shrb
xlat
loopne
aad
mov
cli
int3
xlat
int
test
out
fmulp
lret
add
mov
shll
mov
loopne
add
ret
out
mul
add
lret
mov
mov
lret
in
aam
mov
ret
call
add
cli
fdivrp
les
rol
test
repz
ljmp
call
or
idiv
jmp
ljmp
lock
sar
std
aad
fucomp
cld
std
cld
fcomi
cld
or
enter
rcr
jecxz
ret
aad
shl
idivl
sarl
xlat
sti
enter
out
les
leave
ret
mov
not
aam
xlat
in
in
fdivr
loopne
lret
or
ljmp
in
cmc
ret
leave
in
leave
mov
ret
add
sti
lret
in
jmp
clc
mov
mov
ljmp
std
lds
jecxz
stc
add
rcr
add
clc
out
loopne
mov
rcl
in
rcr
stc
xlat
mov
add
cld
jmp
leave
jecxz
mov
jmp
mov
lret
aad
mov
out
lock
or
loopne
fnstsw
loope
mov
fst
icebp
fnstsw
std
in
in
repz
mov
enter
jmp
in
sti
out
cmc
loope
out
pop
cli
out
out
std
out
ljmp
mov
out
repnz
fcmovu
repnz
add
loope
out
clc
rorb
jecxz
fdivr
ljmp
loopne
in
mov
fldpi
int3
mov
loopne
mov
leave
push
cld
stc
loop
jecxz
in
call
fnsave
repz
out
out
or
fucomip
scas
int3
lret
mov
lock
repz
lock
fsub
stc
icebp
loopne
aad
clc
call
ror
xlat
lock
out
les
add
add
loop
add
or
jmp
loop
std
add
xlat
scas
movsb
jmp
dec
mov
shll
loop
ffree
lret
std
push
fstp
call
jmp
int3
out
call
sti
hlt
repz
loop
lret
call
filds
lret
leave
ret
rol
sti
hlt
iret
in
fistpll
add
idiv
repz
stc
incb
or
or
icebp
call
icebp
loop
iret
aad
fcmove
fnstsw
clc
jmp
ret
fmulp
loopne
mov
lods
xlat
in
mul
mov
mov
clc
xbegin
fcmovu
iret
pop
pop
loopne
into
loop
div
int
idivl
int3
mov
shl
add
lret
out
repnz
mov
mov
mov
mov
hlt
vpsubusb
fcmovu
fsubp
cmc
pop
enter
out
jecxz
mov
mov
idiv
hlt
int
ret
iret
rcl
shl
add
xlat
fucom
int
in
mov
leave
lods
idivl
ljmp
add
sar
loopne
jmp
mov
jmp
icebp
mov
cmc
int3
lret
out
cmc
leave
add
fsqrt
fcomp
jecxz
aam
enter
repnz
lret
aam
mov
in
lret
repz
fdivrs
loopne
jecxz
or
enter
mov
mov
loop
jmp
fnsave
icebp
loopne
idiv
out
out
or
add
stos
shr
lret
int3
mov
ffree
add
pop
pop
ret
pop
jmp
incb
les
fildll
out
repz
mov
into
fstp
hlt
rcr
or
add
fxam
mov
icebp
iret
cmc
fnstcw
std
jecxz
out
stc
mov
out
stc
push
jmp
mov
hlt
rcl
mov
ret
loopne
fneni(8087
in
faddp
cli
add
fiadds
lret
call
in
mov
aad
mov
add
add
out
fadd
iret
into
std
cli
out
repz
scas
loope
loop
in
repnz
aam
out
neg
out
hlt
fadd
out
or
jmp
adc
ret
mov
loopne
rcr
int3
mov
idivl
aad
add
mov
sti
fisttpll
mov
mov
hlt
out
out
aam
shl
sti
fsubr
rol
fcmovnb
ret
out
push
or
int
mov
out
mov
mov
out
leave
aad
add
repz
inc
lret
push
aad
stc
lock
int
cmc
sar
fcmovnu
cmc
mov
xlat
or
aam
ret
pop
add
out
rcr
int3
lock
test
mov
fdivr
div
int
sti
ret
jmp
in
cmc
loop
ror
mov
hlt
repnz
shl
out
repnz
into
jmp
add
std
lret
fucomip
push
call
loopne
mov
enter
enter
int
mov
loope
les
mov
mov
loopne
mov
sar
in
jecxz
into
in
out
add
or
out
jmp
iret
enter
ror
sti
lock
sti
fnstenv
lock
add
add
shl
enter
neg
mov
cld
mov
stc
loope
add
in
lret
push
icebp
out
out
mov
xlat
in
lret
call
in
clc
int
fcmovb
fildl
jmp
jmp
shl
loop
mov
lret
in
ror
clc
rcr
icebp
call
in
add
div
mov
iret
aad
in
in
clc
fnstsw
lock
fcmovnbe
out
jmp
lret
scas
loopne
shrb
aad
mov
cld
mov
rcl
or
in
out
repz
stos
in
out
mov
mov
call
in
mov
add
mov
stc
mul
fucomi
fisttpll
jmp
out
lret
shl
call
repz
in
clc
rolb
mov
mov
stos
lret
fucompp
scas
enter
std
add
roll
mov
jmp
stc
loope
leave
mov
jmp
mov
out
loope
sti
repz
stc
sarl
ret
ret
repnz
shr
lret
sarb
push
fcmove
jmp
ljmp
out
shlb
fxch
fpatan
loope
cli
hlt
or
jmp
ret
call
mov
aam
fdivr
mov
mul
pop
fidivrl
push
out
mul
enter
mov
mov
out
pop
clc
aam
xlat
cld
lret
lret
add
out
leave
icebp
out
std
hlt
jmp
sarl
shl
sti
or
fcmovne
add
fucomp
into
in
div
int3
mov
mov
filds
out
lods
loopne
mov
lret
leave
shr
mov
sarl
std
mov
loope
in
fisttpll
or
shl
out
mov
sar
add
loope
aam
in
movb
cmc
or
mov
call
mov
mov
cmc
jmp
aam
call
shl
jmp
sarl
repnz
or
shr
mov
out
mov
ljmp
shll
shl
lret
in
jecxz
lock
aad
jmp
mov
jecxz
clc
out
aad
jmp
call
lock
jmp
lock
cmc
mov
sar
out
fadds
fucomip
fucomip
jmp
lods
mov
loop
rcl
cli
fdivr
roll
loopne
in
std
or
int
jecxz
repnz
mov
in
lret
out
icebp
sti
repnz
fiadds
out
jecxz
cli
out
loopne
leave
or
icebp
shl
loope
hlt
mov
mov
repnz
std
in
add
fsin
push
in
enter
mov
mov
int3
loope
shl
cli
fxch
mov
mov
rolb
std
loope
out
mov
mov
sti
mov
mov
add
std
std
out
in
enter
in
loop
out
aam
in
repz
mov
ffree
inc
xlat
mov
ret
shr
repz
fldlg2
lock
rol
cli
call
iret
in
lods
out
out
into
cmc
test
repz
mov
shl
shr
fisttpl
fisttps
lret
cli
add
fsubrs
lret
aad
out
in
mov
testb
out
int3
out
ffree
lret
push
in
fisubrs
cmc
mul
cli
in
repz
mov
or
pop
add
str
or
out
mov
iret
enter
int3
out
jmp
roll
jmp
push
add
aad
paddusw
in
repz
loop
in
lret
shr
std
mov
clc
mov
out
cmc
psraw
ljmp
into
stc
aad
repnz
call
std
clc
std
add
std
repz
out
mov
mov
mov
out
icebp
not
ret
enter
mov
loope
cld
cld
out
out
test
repnz
sti
mov
mov
out
lock
dec
shr
out
or
mov
vpandn
icebp
fcmovu
xlat
fadd
shl
sti
loopne
in
jecxz
into
rcl
repz
mov
bnd
repz
ret
add
fadds
in
mov
int
lret
int
xlat
repz
fcmovb
clc
in
divl
out
push
or
mov
in
out
loope
stos
out
cmc
cmc
aam
into
shl
cli
ret
out
flds
out
int3
mov
mov
mov
fnstsw
out
fdivrl
add
les
clc
scas
loopne
repnz
sti
mov
sti
imul
int3
in
aam
out
aam
lock
cli
imul
or
in
out
lret
mov
fidivl
mov
not
loopne
add
clc
loopne
add
fmull
cmpsl
scas
ret
ljmp
mov
call
or
jmp
jmp
lods
mov
cmc
shlb
mov
sti
out
or
fcmovu
in
in
inc
out
fdivs
hlt
loope
cmc
aad
mov
in
cmc
mov
in
shl
in
stc
add
xlat
mov
loopne
mov
aad
mov
ret
lret
add
add
loop
ljmp
iret
lret
int
fnstcw
aam
aam
pop
add
hlt
enter
lock
sti
jmp
in
fsubr
ljmp
inc
add
idiv
loop
jmp
or
fadd
jmp
in
mov
xlat
fpatan
mov
add
inc
lret
add
clc
stc
call
lret
into
lret
fcmove
mov
loope
std
mov
pop
lret
fcmovbe
mov
sti
repz
mov
icebp
aam
mov
aad
xlat
lock
std
lret
int
in
ret
in
scas
repnz
fcmovnbe
rcl
repz
fidivrl
rolb
jecxz
enter
test
mov
fxch
fidivrl
add
std
jecxz
cld
cld
out
or
clc
loopne
or
std
in
rol
mov
iret
jmp
std
cli
repnz
in
ret
jecxz
sti
jecxz
pop
cli
mov
mul
in
aad
hlt
sti
fsub
repz
int
loope
fcom
ret
add
fstp
add
or
fnstcw
rol
shl
lret
lret
mov
test
out
neg
add
mov
cmc
loop
int3
out
jmp
aad
mov
out
aam
lds
out
lock
loopne
jmp
fucomp
fmul
mov
sti
cli
mov
aam
or
int
or
icebp
ret
xlat
test
add
fcmovu
mov
rol
aad
testl
out
lock
cmc
call
fcmovbe
int
fsub
jecxz
rorl
in
add
call
leave
scas
enter
lret
mov
iret
ljmp
aad
sti
aad
decl
iret
fucomp
mov
in
loope
icebp
mov
mov
sarb
loope
in
in
out
ljmp
les
cli
mov
mov
fsubp
loopne
repnz
stc
cld
add
add
test
mov
aam
iret
mov
in
int
mov
mov
sti
iret
fisttpll
loope
lret
in
aad
xlat
repz
icebp
mov
ret
roll
lret
add
add
out
scas
shl
repz
fmul
shr
add
loop
ret
in
loope
dec
or
or
stos
lret
hlt
scas
int
mov
hlt
fdivr
into
fld
cmc
stc
fxam
mov
lds
iret
int3
xlat
repz
fmul
stc
jecxz
fdivr
std
rcl
aad
loop
fld
pop
roll
loop
enter
mov
fsubp
cld
aad
sti
or
repz
in
iret
out
iret
sti
mov
lock
fstp
pop
in
or
or
fbstp
fcmovne
in
jmp
sti
add
cld
rol
or
out
fmul
icebp
shrb
idivb
jmp
rcr
cld
lock
fsincos
in
jmp
shrl
ljmp
add
pop
loopne
sar
in
fstp
fcomip
pop
std
enter
xlat
lods
ljmp
lods
out
mov
ret
aam
add
sti
enter
invd
loope
rol
ljmp
int3
divb
incl
shl
neg
out
or
mov
sar
test
fdivrs
sarl
fisttpll
iret
mov
int3
jecxz
mov
lret
lret
mov
cmc
aam
push
jecxz
les
pop
add
loopne
mov
ror
divb
clc
out
jmp
cli
ljmp
out
or
lret
mov
mov
imul
hlt
fidivrs
out
lret
fcmovnu
enter
in
repz
mov
into
out
clc
mov
ret
rcr
int
in
or
add
out
int
in
in
in
in
jecxz
repz
lock
lret
repnz
push
pop
fcmovu
or
jmp
in
icebp
stc
out
repnz
shl
mov
jecxz
into
std
fucomi
jecxz
in
into
lret
aad
xlat
repnz
lock
fcmovnbe
in
add
push
or
bsf
ret
in
fadd
not
scas
in
aam
repnz
repz
rol
add
psubq
in
mov
in
mov
dec
jmp
cli
repz
jecxz
hlt
inc
add
push
call
cmpsb
in
mov
cmc
rcr
cli
fsubrp
fucomp
fcmovb
loop
icebp
rol
aad
shr
loopne
in
shl
test
jmp
jmp
repz
fcmovnb
mov
mov
neg
cld
pop
out
int3
fmul
in
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jae
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
xor
inc
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
movl
jmp
mov
dec
mov
cmpl
jbe
mov
dec
xor
push
pop
div
mov
mov
mov
movl
movl
movl
movl
movl
mov
xor
jmp
adcb
push
xor
pusha
push
dec
repz
xchg
sbb
mov
add
ret
mov
iret
int
out
rol
out
sar
out
hlt
cli
add
or
mov
loop
hlt
int3
leave
mov
iret
lret
fsubrp
ror
lock
into
mov
cmc
add
ret
loopne
add
prefetch
or
in
out
aam
aad
out
fcmovbe
in
rcr
loop
rcr
idiv
stc
fsubrp
leave
out
jecxz
test
test
int3
lods
into
iret
out
fnstenv
int3
stc
xlat
aam
add
xlat
or
out
loopne
jmp
fmul
shrb
xlat
shr
out
into
sti
fdivr
rcl
faddp
in
jmp
or
std
out
in
rcl
out
int
ljmp
xlat
add
div
fcmovb
cmc
add
fucom
sti
add
loopne
xlat
rol
lret
jmp
cmc
into
in
in
idiv
out
add
aam
cmc
cli
clc
in
in
lret
scas
scas
divb
repz
ljmp
add
out
xlat
aad
ljmp
out
leave
mov
mov
sar
div
out
cmc
aad
clc
out
fsub
add
aam
std
call
mov
int3
loop
icebp
call
call
out
add
lret
loop
cld
jecxz
cmc
leave
std
add
loop
repz
cmc
mov
ljmp
mov
lret
add
in
fiaddl
bswap
ljmp
icebp
out
in
fcmovne
mov
lock
loope
aad
add
out
add
loop
lret
loope
ret
in
in
sti
mov
shl
mov
jmp
or
ret
loopne
mov
fnstcw
out
or
add
add
repz
in
int
mov
xlat
in
clc
shr
aam
repz
jmp
loope
add
hlt
loopne
enter
mov
out
fcmovbe
iret
iret
in
std
roll
mov
or
cld
pop
add
test
repnz
mov
mov
enter
roll
shl
aad
rol
lret
ror
rol
leave
mov
mov
mov
out
std
fldl
clc
jmp
fucomip
shr
sti
mov
in
in
shr
fdiv
test
add
lret
lret
in
repz
mov
enter
lods
enter
fucomip
cmc
testb
or
stc
add
fcomp
rcl
out
scas
int3
enter
xlat
out
leave
mov
rol
rolb
fiaddl
push
loop
mov
in
cli
mov
loope
int3
fst
xlat
fdivrp
shr
add
lret
out
lret
icebp
jmp
call
loope
repz
in
fcomip
add
add
lock
repnz
lret
mov
mov
pop
idiv
call
sar
mov
div
loop
lret
out
mov
add
mov
or
jecxz
roll
lods
in
mov
shr
into
cmc
into
std
iret
call
ret
jmp
loope
repz
out
rcl
mov
in
test
ljmp
lods
test
repnz
fdivrs
add
in
mov
fimull
jmp
push
lret
leave
mov
rcl
xlat
iret
in
clc
xlat
out
hlt
mov
repz
testb
add
out
in
mov
stos
mov
ljmp
ljmp
or
call
enter
jmp
rol
repnz
in
in
mov
int
xlat
shl
stc
mov
add
add
mov
rol
ljmp
in
stc
loopne
add
rol
enter
dec
out
enter
rcl
mov
lock
repz
rcr
mov
or
ficoml
or
scas
in
ror
in
cli
cli
call
int3
xlat
stc
add
mov
mov
mov
lret
shll
not
aad
lret
shl
jmp
iret
into
into
shl
aam
cmc
fcos
fdivrs
fmulp
add
lret
ljmp
mov
imul
jmp
mov
leave
leave
lret
aad
loopne
push
mov
aam
iret
loopne
in
mov
mov
in
fucomp
cld
mov
mov
lret
or
pop
fidivl
ret
fidivl
ror
add
repnz
leave
out
in
shrl
sti
aad
sar
out
into
mov
stc
aam
add
fst
out
ret
ljmp
repz
cmc
into
icebp
aam
scas
call
add
mov
loope
mov
int
add
scas
movsl
leave
mov
in
lret
sti
sti
ljmp
sar
hlt
hlt
add
or
mov
mov
repz
cli
mov
fdivr
hlt
add
repz
int3
stc
mov
lret
in
rcr
mov
in
leave
fxch
xlat
in
stc
jecxz
add
mov
fists
cld
leave
jecxz
into
into
leave
lret
sti
jmp
jmp
mov
shl
xlat
shl
add
int
out
loop
shrb
repz
int3
in
xlat
add
pop
cli
cmc
movb
ljmp
fcmovne
mov
mov
testl
xlat
clc
fmul
std
cld
decl
mov
test
sti
lret
in
sar
in
mov
lret
icebp
fisttps
shll
iret
out
jmp
shl
aam
enter
fld
or
or
cli
cli
enter
out
mov
rcr
mov
repz
mov
ret
or
out
loopne
push
fmul
in
lds
fucomi
aam
mov
lock
shr
rcl
add
stc
adc
in
ffree
mov
mov
xlat
stc
clc
loop
ror
mov
ffree
hlt
iret
sti
movb
test
call
stc
loopne
pushl
mov
hlt
call
loope
fmulp
lock
sti
sti
int3
in
lds
rcr
in
cmc
fcmovnb
cli
repnz
jmp
jmp
lret
out
iret
out
into
shl
cmc
mov
mov
jmp
in
lret
jecxz
fcomi
fnsetpm(287
in
fsubrl
aam
mov
jmp
add
add
push
add
sti
into
mov
ljmp
out
fmul
jmp
repz
or
in
into
add
or
rol
xlat
mov
aam
aad
call
mov
test
clc
in
in
mov
repnz
sar
out
clc
test
mov
add
incb
leave
pinsrw
in
jmp
sti
mov
cli
mul
jmp
add
in
jecxz
int
jmp
int3
out
divb
icebp
mov
aam
sarb
mov
add
fsubp
loope
int
xlat
in
ljmp
fmul
lock
fsubp
add
loope
add
loop
mov
shll
in
jmp
lock
fcom
cli
leave
in
add
out
shlb
sti
xlat
in
call
clc
add
incl
loope
stc
ljmp
add
mov
imul
mov
push
pushl
sarb
lret
push
add
loope
in
scas
int
ret
mov
mov
into
add
vpsubw
or
leave
in
loopne
ret
repnz
shl
rcr
iret
mov
stc
clc
lock
add
add
or
jmp
icebp
hlt
sti
mov
leave
out
lods
in
add
rol
fucomp
mov
fsub
ret
fprem
adc
shr
divb
shll
roll
ret
xlat
stc
in
psubw
fisttpl
enter
into
mov
add
cli
add
icebp
rol
aad
movl
out
leave
loop
frstpm(287
sti
mov
mov
hlt
lock
ret
bswap
or
scas
ret
in
mov
hlt
cmc
ffreep
xlat
vpminsw
not
mul
add
xlat
jmp
in
int
loope
in
out
lret
sti
hlt
stc
mov
mov
neg
loop
in
lds
add
in
repz
mov
cli
ljmp
mov
enter
add
shl
ret
jmp
call
in
test
mov
mov
std
into
rcr
aam
mov
aad
or
push
sti
pop
fcomp
fucom
ret
in
fst
hlt
fcmovnu
loopne
mov
loopne
vpsubsb
mov
scas
loope
call
cmc
icebp
mov
fdivrp
fstpt
add
rol
push
loope
lock
lods
xbegin
idivl
fcmove
fst
imul
jecxz
out
fcomp
in
mov
shl
div
into
lock
fcmovnbe
add
test
rcr
mul
decl
cld
add
test
loopne
leave
sti
les
int
ljmp
add
cld
lret
out
ror
add
mov
mov
call
stc
fdivrl
aad
icebp
faddp
jmp
pop
in
or
int
fidivs
mov
lock
out
ljmp
test
fucomip
fsubrp
aam
into
in
enter
in
int
mov
out
stc
hlt
repnz
fdiv
int3
lret
std
add
out
repnz
loope
mov
repz
fnstcw
out
sarl
ret
loop
lret
add
jecxz
lock
mov
ret
in
hlt
int
int
stc
add
into
loope
fdivrs
push
or
mov
mov
sarl
fdiv
mov
jecxz
lock
rorl
add
les
rcl
aad
divb
fstp
cmc
aad
add
cli
fcmovbe
jecxz
out
repz
shr
lock
mov
mov
mov
add
cli
repz
rcr
testl
loopne
push
mov
shlb
out
mul
call
int3
iret
jecxz
sar
mov
fimull
bnd
fsub
aam
lds
neg
rcl
add
ret
ret
out
add
jmp
stc
in
mov
ret
enter
std
div
shr
not
cli
mov
or
mov
call
mov
hlt
divb
shr
shl
loop
fcmovu
mov
leave
roll
fsubrl
mov
cmc
into
lret
hlt
testl
in
or
inc
in
out
rcl
shl
fcomi
shll
mov
cli
fsubr
aad
aad
out
loope
loope
rep
into
in
mov
scas
int3
ljmp
jecxz
add
mul
iret
fimull
add
int
mov
iret
fld
icebp
cli
mov
sti
out
mov
fld
lret
in
loop
rcr
lods
lret
mov
in
mov
hlt
in
push
cld
add
loope
or
or
xlat
scas
ljmp
hlt
fidivrl
mov
lret
push
jmp
ljmp
cli
fcmovnbe
aam
rcr
enter
hlt
loop
loop
aam
out
or
or
loope
mov
scas
ret
out
in
into
rcl
lret
leave
fcmovnbe
loopne
div
aam
push
enter
les
mov
mov
les
rcr
loop
rcl
mov
or
adc
in
sarb
mov
mov
mov
iret
cmc
mov
fmull
out
jmp
leave
into
jmp
shl
ret
lock
in
into
cli
int3
sarb
cld
ljmp
cld
or
lret
mov
sti
shll
lret
sti
mov
imul
cld
lret
cli
not
out
fimuls
into
rcr
mov
out
call
mov
call
aad
add
jmp
or
in
scas
les
in
jecxz
std
into
add
ret
out
or
jmp
loopne
cli
cli
clc
sar
lock
ret
fcmovnbe
jecxz
in
or
or
repz
lret
mov
leave
mov
rcr
mov
shl
loopne
cmc
aam
std
cld
push
push
ud2
fmul
test
shl
mov
aam
out
fmul
in
ret
fucom
lret
aam
fxch
ret
fsubrs
fnstenv
int3
iret
mov
icebp
out
lret
loop
incb
enter
ffree
lret
cmc
shl
repnz
out
ret
sti
cmc
push
fiaddl
or
push
decl
push
or
in
rcr
aam
out
in
out
neg
sarb
shl
or
lock
shl
push
paddsw
shr
jmp
call
mov
fcmovnu
out
std
fdiv
aam
add
in
shl
cmc
out
icebp
shl
in
fidivrl
filds
lret
add
jecxz
jmp
ret
out
mov
cmc
fidivl
in
cli
add
aad
rcr
loopne
faddl
in
jmp
lods
in
lock
loopne
in
shl
ljmp
ret
test
cmc
loop
cli
rol
out
lret
xlat
lods
in
div
mov
repnz
lock
vcmpps
ljmp
leave
jecxz
iret
mov
fucomip
jecxz
int
cmc
int
fucom
cmc
call
or
jmp
repnz
rcl
enter
fnstsw
call
out
ffreep
push
call
xlat
mov
int3
fcmovnu
lret
mov
sti
mov
cmc
ret
clc
lret
out
push
shr
out
leave
fsubp
mov
loope
mov
in
cld
fnstsw
lock
cmc
jmp
add
call
int3
in
mov
repnz
hlt
mov
cmc
rcr
add
add
out
faddp
scas
rol
enter
aad
icebp
mov
not
cmc
cli
ror
testl
out
or
fidivl
in
sar
in
mov
in
ror
repnz
xlat
loop
lret
ret
add
loopne
iret
mov
aad
idivl
loope
test
add
or
in
adc
stos
mov
sarb
std
jmp
mov
testb
lret
push
in
aad
xlat
in
shlb
repz
xlat
fld
fsub
out
add
lock
ljmp
rcr
imull
mov
iret
enter
shl
cli
pop
add
or
fdivr
add
lret
fsub
int3
call
int
clc
jecxz
add
out
fstp
out
or
or
cmpsl
lods
xlat
rcl
hlt
not
enter
fstp
mov
add
out
or
add
out
loopne
out
in
shl
int
in
cmc
aad
fidivrs
aad
cmc
fsubr
in
or
ror
xlat
mov
shr
mov
mov
fdivr
out
pop
cmc
int
hlt
enter
lret
mov
cmc
mov
cld
push
enter
fistl
lret
iret
lds
clc
stc
out
int3
sar
into
mul
fdivrp
fdiv
in
mov
jmp
shr
mov
in
lret
out
fstp
clc
add
lock
add
add
mov
mov
fcmovnbe
mov
shr
ret
add
sti
cmc
fisttpl
enter
loopne
jmp
mov
add
in
sti
ret
cmc
aad
loopne
push
in
fsub
shll
mov
icebp
int3
imul
add
loope
ret
lock
pi2fd
fcmove
add
fmul
icebp
mov
ret
vcvtdq2pd
jecxz
add
loope
fcomi
clc
hlt
neg
enter
rcl
mov
leave
fucomi
lds
mov
loop
ret
mov
mov
adc
shrl
shr
mov
int3
stc
cld
mov
add
add
in
jmp
mov
not
sar
mov
add
mov
mov
push
in
in
enter
in
out
into
shr
mov
in
fnstcw
add
cld
not
in
or
add
fisttpll
int
ret
ljmp
enter
mov
shl
loope
mul
out
lock
decb
or
fsub
mov
mov
int
in
sti
jmp
sti
int
fidivrl
rol
out
stc
fcmovne
jmp
int3
mov
ret
aad
repnz
in
lds
ret
hlt
shl
bnd
aam
dec
stc
std
or
shr
loop
shl
in
ret
xlat
testb
aam
sti
push
jmp
cmc
jmp
in
clc
mov
call
loopne
lret
or
sti
vcvtdq2pd
or
lret
loop
jmp
clc
push
call
mov
rcr
fdivp
leave
or
in
repz
mov
fcmove
shl
enter
loope
icebp
jecxz
int3
cmc
add
loopne
lret
jmp
mov
jecxz
mov
in
stc
lock
call
mov
or
push
enter
ljmp
jmp
cmc
cld
lock
shl
in
testl
sarl
out
mov
mov
mov
aam
repz
cmc
in
neg
int3
int
loopne
lods
mov
in
iret
mov
sarb
cld
repz
mul
loope
jmp
add
mov
leave
rol
hlt
les
xlat
fcmovnbe
fprem
iret
int
jecxz
mov
sti
clc
int
into
out
mov
lock
int
repz
lock
mul
mov
clc
add
pop
fisttpl
cld
lds
call
rol
icebp
shl
enter
aam
out
clc
in
loop
add
icebp
out
psubq
ret
lods
out
loopne
mov
aam
fistpll
mov
ret
or
les
loope
jecxz
scas
loope
in
hlt
mov
mov
fcmovnbe
loope
mov
loopne
add
iret
loop
ror
mov
out
xlat
rcr
call
cmc
add
clc
cli
cli
fdecstp
loope
aam
fmuls
fmul
loopne
icebp
mov
cli
out
mov
std
not
fsubp
out
fadds
repnz
leave
aam
or
iret
movsbl
sar
aam
fmul
std
ljmp
out
in
jmp
ret
leave
lods
iret
out
ror
mov
fsubrp
loop
shr
sti
ljmp
pop
add
mov
mov
xlat
mov
ffreep
aad
std
add
stc
enter
or
stos
out
mov
cli
fnstcw
into
in
add
fmul
rol
sti
add
aam
add
mov
loopne
mov
fcomi
mov
stc
in
rolb
mov
xlat
sti
fldln2
or
add
out
rcl
lret
repz
repnz
icebp
imul
mov
loopne
out
sti
jecxz
fcoms
ljmp
lret
les
loope
repnz
jecxz
dec
lds
in
ret
int3
out
in
in
mov
lret
neg
fdiv
add
pop
loopne
lret
add
lret
out
rol
repnz
shr
jmp
pushl
sti
icebp
lds
bsf
push
add
lret
ljmp
aad
enter
lock
repz
sti
filds
in
idivb
in
shrb
incb
idivb
ljmp
iret
les
iret
shlb
mov
out
shl
cld
fisttpll
in
shlb
hlt
repz
neg
fdivrp
pop
imul
out
mov
in
int3
loop
loope
call
loope
lock
add
add
loopne
aam
leave
call
test
lods
ljmp
repnz
fnstcw
call
fstl
in
lret
rol
lock
mov
iret
out
add
fiadds
fstp
xlat
cmc
ret
or
add
loop
in
test
cmc
enter
sarb
sarb
iret
fucomip
int
in
les
fdivp
mov
jecxz
add
ret
aad
add
call
in
enter
iret
lock
idivb
mov
int3
shr
stc
hlt
out
paddw
add
test
jmp
cmc
test
out
shlb
inc
add
clc
invd
aad
or
cmpsl
int3
fldt
mov
int3
loope
int3
out
pop
jecxz
mov
icebp
shr
into
ret
mov
icebp
mov
fnsetpm(287
jmp
in
in
shr
imul
lret
ror
mov
shrb
mov
mov
rcl
add
aad
add
add
fadd
repnz
iret
mov
in
xlat
fnstenv
mov
flds
iret
int
femms
shlb
test
stc
fcmovnbe
mov
fstpt
in
add
add
stc
add
loope
enter
mov
int3
fcomip
iret
hlt
mov
cli
icebp
les
enter
or
out
call
fiadds
clc
cld
mov
push
cli
mov
loop
lock
mov
mov
hlt
mov
hlt
mul
mov
icebp
lock
iret
fdivr
fimull
mov
mov
in
in
repnz
out
push
cli
mov
lds
cld
int3
adc
fdivs
test
lock
fcmovnu
repz
fmul
les
ljmp
rcl
out
lock
fcom
mov
enter
fcomp
rcl
out
lret
add
psubusw
loop
call
out
rcr
leave
xlat
in
out
mov
icebp
pop
add
flds
fldl
in
out
jecxz
mov
shlb
leave
mov
stc
mov
repz
out
add
cld
in
lret
out
lock
iret
hlt
xlat
lock
into
jmp
loope
mov
or
hlt
jmp
or
out
scas
loopne
sti
shlb
rcr
clc
mov
jecxz
lret
add
jecxz
fcmovne
or
cld
jmp
fsub
aad
out
in
shlb
leave
aam
add
push
hlt
clc
add
repnz
mov
in
out
sar
fdivp
not
aam
push
lock
repnz
clc
add
or
shr
call
shlb
mov
mov
xlat
jmp
push
add
fmulp
ror
repnz
clc
sti
fstp
add
icebp
fldl
or
icebp
out
sti
in
les
jmp
loopne
ret
ret
enter
out
hlt
sar
mov
add
pop
out
inc
into
pop
out
lods
test
into
sti
mov
shlb
ret
ffreep
loop
roll
fmuls
jecxz
fdivs
aam
mov
call
lock
mov
mov
fucomp
call
lret
mov
mov
lret
mov
lret
fdivrl
jmp
jmp
leave
ret
icebp
shll
mov
call
shr
iret
mov
int
lds
iret
or
lret
test
mov
out
fstpt
pop
fdiv
sti
out
std
xlat
fxch
aam
in
icebp
jecxz
fsub
into
sti
mov
mov
out
mov
fisttpl
loope
adc
jmp
fisubrs
mov
lock
add
cli
dec
ret
in
in
cli
add
mov
lock
ror
mov
mov
fcmove
aad
cld
mov
jmp
ret
int
repz
fsub
repz
int3
cli
mov
jmp
incl
in
out
mov
xlat
mov
leave
int3
leave
mov
fcom
std
jecxz
aad
leave
loopne
in
or
clc
repnz
out
aad
shr
hlt
aad
in
in
loopne
std
loop
add
loop
push
repz
int
neg
lret
bnd
aad
ljmp
jmp
scas
in
repnz
mov
sti
mov
sti
dec
testb
stc
push
mov
jecxz
out
jmp
jmp
jmp
aad
into
stc
std
fdivr
mov
jmp
in
add
hlt
cmc
mov
vpaddb
jmp
int
loop
fcomp
add
add
ljmp
lret
int
shl
mov
icebp
int3
repnz
loopne
std
jecxz
inc
add
or
ljmp
in
fcmovnb
mov
lock
clc
mov
out
add
or
into
mov
hlt
leave
aam
rol
lret
jecxz
enter
fsubr
stc
jmp
psubw
adc
fdiv
into
xlat
call
lret
call
add
repnz
in
sti
cli
flds
incl
ror
lods
jmp
sar
in
out
mov
fucomp
fmul
mov
fadds
into
fdivrp
repnz
in
div
iret
jmp
dec
mov
ret
rolb
loope
stc
lods
into
ret
lock
leave
repnz
int
in
call
sar
ret
aam
aam
add
vcvttpd2dq
in
icebp
shr
call
mov
sarb
in
jecxz
in
ljmp
in
test
lret
sar
loop
in
mov
pop
lret
fadds
out
ror
aam
lods
not
mov
jmp
sar
loopne
shl
mov
fadd
lret
lret
clc
ljmp
divb
iret
iret
mov
ret
std
repz
ljmp
mov
not
fadd
shl
rolb
jmp
lds
in
aad
fimuls
iret
or
in
repnz
ljmp
enter
repz
mov
sar
lret
lret
add
jmp
mov
mov
rcl
mov
mov
mov
out
out
in
add
in
lock
call
mov
in
mov
cmc
sar
jmp
loopne
filds
sti
fisttpl
jecxz
out
repnz
mov
cmc
in
repz
add
icebp
fdivr
sti
out
ret
in
sti
adc
test
lods
in
in
icebp
leave
iret
lret
add
repz
clc
stc
mov
fcomip
loopne
in
sti
out
loop
in
test
mov
leave
into
int3
ret
loope
stc
sti
icebp
xlat
add
loopne
fdivr
fildll
out
repnz
mov
mov
sti
or
neg
out
mov
lret
out
into
lret
mov
std
repnz
jmp
or
jmp
leave
enter
neg
into
mov
out
jecxz
icebp
add
or
jmp
out
cmc
lods
shl
iret
out
sti
repnz
in
int
rol
icebp
fdiv
dec
add
scas
jecxz
out
divl
shr
filds
mov
in
fucom
add
lret
leave
repnz
rol
int
xlat
into
stc
repz
lock
int3
add
shl
ret
or
dec
stc
std
into
int
stos
scas
rol
into
div
mov
in
sti
dec
fsub
faddp
rolb
les
fucomp
or
jmp
in
sti
out
les
lret
in
mov
int3
aam
add
in
icebp
lods
iret
jecxz
fucom
shlb
repz
ret
frstpm(287
hlt
or
neg
iret
sti
in
out
loope
call
in
iret
idivb
jmp
add
push
ljmp
ljmp
cmc
aad
fmul
mov
clc
in
out
hlt
cmc
std
loopne
add
mov
test
fxtract
stc
mov
call
fiadds
aam
pop
cli
push
shl
out
mov
cli
jmp
fcmovnbe
add
shl
shl
cld
fdivrp
loope
out
enter
call
mov
idiv
out
mov
mov
pop
stc
lock
fdivrp
aad
fisttpl
fistpll
iret
out
mov
idiv
repz
xlat
sti
ffree
fdivp
pop
loop
loopne
add
int
out
repnz
ljmp
fcmovb
shl
loop
ret
loopne
call
int
mov
mov
out
div
enter
fcomi
out
test
loop
leave
or
jmp
stos
in
shr
mov
lods
mov
xlat
lods
fdivr
cmc
mov
shl
shl
ret
mov
or
lret
repnz
not
shl
shr
out
repnz
icebp
mov
add
in
jmp
mov
sti
int3
mov
in
fld
add
cmc
add
loopne
fxam
add
stos
enter
shlb
fistpll
repz
fisttpl
sti
add
cli
out
ljmp
int
mov
fdivrl
in
pop
push
fildl
add
stc
add
in
out
fcomi
mov
lock
shr
out
mov
sti
cli
dec
add
in
out
into
call
ror
leave
ror
shl
mov
ret
loope
shl
jmp
lret
in
lret
shl
leave
sti
mov
hlt
icebp
rcl
clc
rorl
leave
leave
sti
jmp
in
shrb
stc
in
stc
mov
mov
out
leave
add
mov
jecxz
loopne
call
sarl
cmc
aam
lret
out
shl
icebp
loop
mov
cli
mov
fcomip
mov
jmp
repz
loope
pop
fldl
pop
int
iret
mov
rol
fcmovu
neg
std
loope
stc
sti
in
in
in
out
push
in
add
test
mov
out
loopne
fcom
ror
std
iret
mov
mov
pop
out
jmp
icebp
in
hlt
mov
ljmp
sti
enter
in
loope
cli
jmp
fisttpll
lds
add
lret
shl
in
shl
icebp
aad
mov
jmp
iret
out
repnz
in
repnz
or
or
rcl
mov
mov
lret
ljmp
fadd
hlt
pop
ret
cli
cli
out
roll
call
into
loopne
mov
hlt
int3
call
aam
in
mov
fcmovne
out
adc
icebp
iret
out
div
scas
mov
loope
into
jmp
mov
ret
jecxz
dec
leave
clc
or
stos
int
int3
lret
mov
mov
sar
cli
jmp
fcmovnbe
pop
add
lret
add
call
out
mov
jmp
test
int
mov
fiaddl
decl
rcr
aad
rol
mov
mov
stc
repz
std
pop
aam
aad
frstpm(287
std
int
jmp
repnz
lock
stc
fmul
clc
in
inc
aam
push
cld
stc
shl
cli
rol
jmp
test
test
out
sti
in
fcomi
repz
add
xadd
std
in
roll
xlat
iret
mov
mul
mov
mov
repz
ljmp
stc
shl
lock
pmullw
or
enter
rcr
mov
dec
fucom
ret
jmp
or
stc
lds
test
jmp
in
cli
int3
mov
rcr
inc
out
add
add
jmp
mov
fcmovne
out
fst
mov
add
pop
clc
cli
out
scas
call
out
icebp
lods
mov
lock
clc
mov
cmc
ud0
or
out
int3
lock
shl
mul
repz
mov
sarb
rolb
les
or
push
jmp
decl
adc
fucomip
rcl
loop
mov
ror
aam
enter
icebp
hlt
clc
std
mov
or
or
in
mov
loopne
lods
icebp
repz
clc
fcompp
sti
cld
hlt
xlat
add
out
cli
fcomp
jmp
hlt
fldl2e
enter
out
aam
test
mov
mov
add
cli
loop
out
or
mov
shlb
fsubr
mov
jecxz
jecxz
cmc
add
call
cld
lock
rcr
repnz
aad
sti
out
sti
jb
add
ljmp
enter
inc
test
mov
mov
mov
pushf
clc
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
jmp
cli
adc
adc
pmulhuw
mov
fidivrl
add
test
mov
add
fldl
faddp
enter
cld
mov
mov
fprem1
in
repnz
mov
loope
shl
cld
lock
cmc
add
ficoms
ljmp
mov
div
add
in
std
lock
mov
out
iret
mov
fsubrp
rcl
cli
out
mov
mov
out
sar
fsub
flds
or
or
out
mov
shlb
out
clc
sti
mov
fcmovnb
fildl
lret
or
out
flds
repz
out
icebp
stos
iret
rcl
ror
ljmp
out
std
cli
ffree
out
cld
in
or
adc
mov
iret
repnz
sti
mov
icebp
jmp
add
fldl
jmp
ret
ret
mov
in
std
lock
out
rolb
push
jmp
in
rcl
mov
shr
out
mov
out
std
pop
roll
jmp
or
clc
in
int3
or
leave
idiv
jmp
cmc
loop
hlt
out
mov
movb
add
fucom
xlat
repnz
lock
fcmovu
out
stc
dec
mov
add
fsubr
sarl
in
shr
mov
mov
mov
fucomi
loopne
pop
std
into
lods
stos
mov
rol
int
mov
jmp
loop
mov
incl
les
leave
stos
jecxz
cmc
shrb
xlat
call
mov
fcomip
std
call
add
shrl
leave
shll
mov
int
out
out
fmuls
jmp
jmp
ljmp
cmc
mov
ret
out
add
jmp
call
scas
out
into
mov
out
cli
aam
add
ror
xlat
cli
ret
ffree
jmp
in
loope
mull
jmp
hlt
cli
out
in
ffree
int3
in
hlt
sar
ljmp
out
xlat
mov
repz
icebp
jmp
fnstcw
loopne
shl
or
or
aam
jmp
lock
loopne
int3
mov
mov
loop
shl
sar
jmp
jecxz
rol
out
out
rcr
mov
mov
mov
lret
add
mov
add
or
or
leave
call
fcmovnu
leave
loop
loopne
hlt
cli
add
cli
out
lret
fsubr
add
out
loopne
lret
rol
leave
fucomi
sti
cli
add
clc
fdiv
push
lret
mov
lods
loopne
loop
shlb
leave
ljmp
ret
fcmovu
fsubr
ljmp
mov
shl
out
into
mov
cmc
enter
repz
fisttpl
add
int
out
shr
cmc
loope
shll
jecxz
out
add
loope
loop
cld
add
ficoms
cmpsb
movsl
rcl
stc
lret
lret
mov
int
rcl
in
idivb
push
add
ret
hlt
in
shl
aad
add
repnz
into
loope
add
rolb
add
lret
out
mov
cmc
loop
ljmp
lret
fucomi
jecxz
clc
mov
out
lret
mov
iret
ret
enter
repz
mov
out
out
stc
mov
stc
or
in
ret
leave
shl
cli
shlb
cmc
repz
mov
shl
incl
or
lret
std
shl
ret
icebp
in
mov
ljmp
shr
mov
repnz
or
clc
ljmp
mov
mov
out
in
sti
add
icebp
add
in
out
lret
int3
ret
call
mov
rcl
rcr
lret
jecxz
clc
std
ljmp
leave
ljmp
fyl2xp1
out
fidivrs
fcomip
mov
leave
add
repnz
aad
lock
scas
rcl
int
iret
clc
loop
fcomip
fidivrs
fimuls
push
fdivr
clc
mov
ret
hlt
call
rcr
int
xlat
mov
aad
in
cli
lret
call
fstp
fstp
into
iret
out
int
lods
fcmovbe
lock
mov
pop
call
ret
ffree
loope
enter
stos
mov
icebp
rcr
hlt
mov
loop
mov
cmc
sar
leave
add
jmp
mov
fsub
in
out
out
mov
cli
filds
loop
fucom
std
fiaddl
jecxz
test
icebp
jmp
lret
call
roll
or
fisttpl
enter
fnstsw
into
mov
idiv
aam
icebp
out
ljmp
or
into
or
repnz
mov
mov
mul
in
pop
cld
or
lret
iret
lret
shlb
into
loopne
test
mov
in
add
fcmovnu
lret
add
cmpsl
call
int
mov
mov
fdivr
lock
fcmovbe
out
add
aam
roll
out
cmc
call
xlat
cli
sti
mov
int3
mov
add
shl
stc
jmp
iret
out
test
aad
mov
repz
icebp
rol
in
fildl
clc
cmc
jecxz
cli
jmp
shll
lret
sar
mov
lret
jecxz
in
sti
fisttpll
sar
hlt
or
loopne
xlat
ror
out
ret
lds
std
sarb
fildl
repz
flds
std
loop
iret
shl
scas
mov
mov
fdiv
mov
aam
incl
shl
stc
out
ljmp
fstpt
jmp
add
movl
fcomi
std
fxch
add
adc
mov
ljmp
sar
in
ret
xlat
sar
loopne
hlt
idivl
add
out
in
out
icebp
mov
cmc
stc
into
mov
add
add
rcr
fstp
fisttps
add
lret
iret
icebp
fprem1
mov
lock
cli
loopne
repz
cli
leave
add
inc
push
in
fnsave
xlat
lret
fstpt
flds
out
jecxz
clc
lock
clc
in
in
scas
mov
int3
in
repnz
lock
int3
in
iret
fdivrp
repz
clc
cmc
rolb
push
lret
enter
mov
fxam
fcmovnb
mov
ret
shl
add
aad
add
push
in
rol
ret
repz
leave
out
icebp
lret
xlat
mov
mov
push
jecxz
add
incb
in
loop
adc
mov
rcl
cli
enter
clc
jecxz
aam
repz
xlat
fadd
out
fucom
icebp
into
stos
mov
int
ret
stc
mov
fucomp
xlat
ret
iret
add
push
jmp
lret
jecxz
mov
mov
fldcw
fcomip
clc
jecxz
add
fcmovu
fadds
pop
out
in
lret
iret
mov
out
in
divl
repz
mov
fucomi
clc
fsubr
fsub
pmaxsw
mov
out
in
lret
sti
repnz
stc
rcl
repnz
jecxz
std
add
out
repz
in
std
lock
aad
mov
cld
les
in
clc
mov
loope
lret
jmp
mul
int
not
out
fcom
rcr
mov
in
incl
stc
push
aam
or
enter
scas
mov
shr
fdivs
clc
ret
in
add
fdiv
xlat
sti
leave
repz
vcvtdq2pd
shr
in
fdiv
faddl
in
std
fcomip
aad
add
in
out
ljmp
fneni(8087
sti
jmp
mov
repnz
lock
fsub
ret
lret
icebp
ljmp
fpatan
mov
imul
fidivl
in
mov
mul
aad
pop
fadd
imul
iret
fldl
add
mov
shl
in
shlb
loop
in
push
sarb
or
or
lods
jecxz
loope
mov
in
shr
fdiv
cmc
int
in
ret
aad
stc
or
jmp
in
icebp
call
out
mov
int
sarl
add
out
in
repz
cmpsl
mov
mov
mov
mov
ret
repnz
loop
or
ret
mov
ljmp
into
loop
aam
add
lret
loop
loope
rcl
repnz
fucomi
in
call
call
xlat
cld
add
hlt
ret
lret
stos
mul
into
mov
mov
ror
stc
jmp
fsub
fadds
inc
add
lds
fadd
in
aam
into
lret
enter
repz
shl
xlat
or
enter
int
lods
mov
mov
mov
mov
shl
stc
into
mov
in
cli
shlb
in
mov
in
leave
sti
dec
mov
push
out
fprem1
in
add
fcomip
call
loopne
hlt
call
int3
sti
iret
mov
mov
pop
fadds
pop
add
int3
in
jecxz
int3
loopne
rol
jmp
mov
in
lock
testl
fiaddl
int
mov
mov
lret
sar
lock
ret
loop
test
clc
loopne
rcr
sti
enter
adc
mov
into
imulb
cmc
repnz
cli
test
aam
fld
icebp
ret
scas
scas
mov
rol
fcomi
fdivp
mov
sar
xlat
ljmp
fnstsw
out
int
aam
rcl
mov
mov
mov
hlt
idiv
faddp
or
shl
loopne
enter
enter
cli
clc
out
aad
cli
fxch
into
mov
sti
or
or
add
loop
repnz
out
out
loopne
mov
in
mov
testb
jecxz
stc
clc
loopne
into
out
add
lock
in
loope
into
in
jmp
mov
roll
mov
clc
int3
repz
shl
loopne
repz
mov
fcmovnu
aam
lret
add
into
pop
adc
lods
call
lods
mov
test
shl
mov
xlat
mov
fsubp
out
iret
out
out
enter
hlt
lods
int3
mov
imul
fld1
jmp
aad
repnz
pop
faddl
lret
jmp
cld
clc
fld
test
lret
in
int
jmp
fildl
ret
in
ret
incl
fcmovbe
shr
add
ffreep
mov
out
jmp
idivb
rcl
mov
lret
cli
out
sar
out
jmp
into
repz
repz
xlat
sar
fmull
ljmp
test
out
mov
shl
mov
call
std
fst
repnz
sti
out
fxch
sti
or
enter
leave
mul
out
lret
sti
hlt
out
mov
or
stc
ljmp
mov
fcomi
iret
mov
cmc
mov
add
repz
mov
add
int
fisttpl
ret
loope
out
in
icebp
ljmp
cld
mov
fsub
lock
out
or
lds
lret
movsb
ret
out
out
ror
jmp
out
fxch
fdiv
aad
add
loopne
repz
shrb
lret
out
call
shl
out
add
inc
or
loop
repnz
shlb
mov
lret
lret
rcl
test
push
out
fucomp
shll
rcl
rol
les
fdiv
add
or
jecxz
add
adc
loopne
rcl
in
icebp
iret
icebp
in
idiv
jmp
aad
lock
shl
shl
shl
repz
ret
cli
test
fsubr
std
mov
test
rolb
loopne
enter
in
jecxz
repnz
mov
out
int
mov
repz
loop
roll
add
jmp
icebp
scas
in
rcl
xlat
repz
jmp
int3
mov
rcr
clc
adc
test
mov
into
mov
repz
lret
loopne
fadd
filds
ret
movl
ret
cmc
mov
mov
stc
in
divb
cli
testl
add
sti
mov
test
iret
iret
mov
les
mov
div
fdivp
add
add
sysret
ret
ljmp
icebp
fnstenv
aam
out
ret
not
stc
loop
mov
lret
test
shr
mov
mov
iret
jecxz
xlat
int3
aam
filds
leave
out
fsubr
fmul
lods
loop
scas
icebp
in
mov
xlat
lret
in
in
sti
ret
idivb
loopne
into
in
mov
mov
out
sti
add
mov
idiv
loope
cld
jmp
ret
mov
out
scas
enter
jmp
call
pop
shl
add
incl
cli
lret
mov
iret
lock
lock
mov
fsubp
not
sti
in
or
fdivrs
test
rcr
mov
mov
cmc
shl
jmp
or
or
shl
ret
enter
jmp
jmp
in
lock
push
ffree
or
enter
cli
leave
add
fdiv
out
out
out
cmc
out
fdivrs
mov
aam
fiaddl
fmul
fst
int
fdiv
into
xlat
hlt
int
loopne
mov
in
mov
cld
roll
jmp
lret
jmp
lret
in
stos
repnz
in
fcomip
std
mov
fyl2x
int3
mov
testb
out
or
adc
mov
imul
aad
ret
out
int
std
repz
sar
cli
movl
bswap
fsts
fadd
mov
out
sar
stc
mov
cld
push
rcl
fcmove
add
add
jmp
adc
imull
stc
mov
enter
mov
pop
iret
fmull
in
repz
fsubrp
out
into
cli
sarb
fmul
in
aad
loope
movl
repz
rol
mov
leave
mov
mov
enter
ret
std
in
sar
std
loopne
repz
ljmp
not
add
repz
icebp
loopne
jecxz
fadd
add
in
cld
or
iret
icebp
fistpll
lret
out
mov
faddp
xlat
rcr
fld
in
in
out
call
shrb
mov
fsubr
enter
aam
mov
jecxz
sti
out
or
enter
lret
in
xlat
mov
neg
loopne
stc
cld
ftst
lret
stc
or
lret
repz
mov
call
repnz
cli
lret
fcomip
aam
mov
lret
iret
inc
lods
out
imul
lret
into
in
out
cld
out
jmp
fmull
aad
or
add
stos
sti
cmc
les
mov
cli
sti
mov
out
fst
aam
or
mov
call
icebp
in
mov
in
fadd
leave
out
inc
in
fld
xlat
mov
divb
in
enter
cli
add
idiv
cld
xlat
aad
iret
out
add
in
in
lods
lret
cmc
iret
cli
cli
int3
mov
out
ret
rcl
add
pmuludq
add
shr
rol
fcomp
std
in
in
enter
loopne
lock
hlt
mul
out
out
repz
icebp
lret
aad
lret
not
out
in
out
call
add
jmp
or
int3
jmp
shl
out
in
xlat
shrl
repz
loopne
std
ljmp
add
imul
call
jmp
in
in
mov
sar
ret
inc
or
out
filds
fsubp
icebp
mov
loope
out
fcmovnu
cli
mov
mov
add
into
into
mov
mov
aam
mov
enter
fcom
repz
incl
loopne
clc
out
ljmp
aad
lret
sarl
xlat
mov
std
jmp
loop
shl
xlat
fcomi
repnz
ret
shl
lret
in
or
jmp
shr
loop
mov
out
repz
cmc
mov
add
leave
in
push
mov
int
shlb
aad
ljmp
ret
loopne
std
cmc
jmp
rcl
call
ljmp
repz
fsub
in
ljmp
out
loope
in
mov
ret
shl
mov
lret
lret
std
sarl
or
add
mov
lret
mov
leave
icebp
cld
leave
add
repnz
loope
out
lret
fildl
adc
les
in
in
mov
std
icebp
mov
jecxz
cld
clc
iret
sti
add
out
rol
int3
out
not
ljmp
ret
mov
cmc
pop
add
in
loop
lret
leave
jecxz
in
shr
mov
fcomi
mov
aam
in
cli
loop
incl
adc
repnz
out
shl
out
mov
mov
sti
rcl
icebp
repnz
fimull
or
fsubr
mov
shr
mov
dec
sar
xlat
in
loopne
pop
aam
lret
add
std
iret
out
in
fisttpl
fxch
in
stos
mov
jmp
out
cmc
out
mov
out
jecxz
cld
mov
idivb
sti
cld
std
lret
fmul
in
fisubs
out
jmp
fcom
mov
mov
jecxz
out
in
fcmove
in
repz
jecxz
in
shlb
fdivrl
ret
mov
push
leave
fcmove
shrl
lret
cli
fstpt
mov
lret
ljmp
repz
xlat
fst
aam
jmp
shr
neg
into
cmc
stc
in
fcmovnb
sar
inc
loop
shlb
in
repnz
cmc
in
fucomip
loopne
add
mov
lret
lods
mov
lret
mov
ljmp
fadd
int3
fdivrp
or
or
ror
jmp
test
aad
ror
into
mov
in
fdiv
ret
loope
fcmove
loop
loope
ret
call
rcl
out
cli
mov
mov
leave
mov
jmp
or
ljmp
fdivp
lret
mov
lods
in
xlat
shl
repz
movl
clc
fld
push
out
loop
out
iret
in
out
scas
mov
jmp
push
aam
lock
out
cmc
or
mul
mov
call
mov
std
in
add
add
clc
sar
jecxz
inc
jmp
enter
lods
ret
shlb
loop
fucomp
fprem1
mov
add
out
loop
in
stos
in
loop
iret
mov
not
jecxz
mov
sar
add
loope
cld
fmul
jmp
mov
out
fst
in
leave
scas
into
rcl
int3
clc
aad
mov
aad
cld
fildl
add
jmp
enter
loope
mov
iret
int3
lret
imul
lret
sti
fdivrp
out
jecxz
loope
ret
add
out
or
add
into
or
aam
cmc
repnz
out
in
hlt
leave
add
clc
int3
out
add
jecxz
pop
cli
add
push
lods
repnz
lock
out
mov
mov
cld
fldlg2
hlt
stc
out
pop
in
int
push
clc
or
dec
cli
lret
lret
mul
ret
mov
out
shl
out
iret
loop
fucom
sarb
call
lret
lock
mov
scas
fxch
rcr
ret
aad
loopne
add
add
inc
ret
stc
les
or
mov
jmp
fcomp
into
out
ljmp
mov
fxch
out
ret
loop
mov
into
call
enter
mov
jmp
sti
std
in
fdivp
jecxz
fucomp
in
lods
lock
ljmp
sti
mov
hlt
rorb
jmp
clc
jmp
shr
lret
int
fcmovnbe
mov
out
mov
pop
add
fisttpl
lret
enter
mov
loop
cli
neg
ljmp
repnz
fld
ljmp
int
in
fsubr
lret
aam
fidivrs
mov
fiadds
in
fstp
or
out
idiv
sar
in
int
sti
shl
mov
mov
loop
lret
hlt
clc
out
shrl
in
rcl
shr
in
leave
mov
out
add
ret
cli
add
lret
jmp
in
out
call
rol
cli
mov
fadds
mov
clc
shl
fcomip
call
fdiv
mov
jmp
leave
mov
fsubrp
mov
iret
push
add
aad
stc
fisttps
iret
or
mov
mov
icebp
rcl
repnz
roll
out
add
jecxz
out
add
scas
lock
icebp
out
stc
cmc
enter
fdiv
loope
in
add
loopne
ror
in
ret
jmp
mov
jmp
jmp
lret
ret
ror
testb
mov
fdivs
test
sar
out
out
mov
loop
mov
push
or
loope
psubsw
in
iret
in
xlat
repz
in
mov
hlt
idivl
shl
in
jmp
dec
sarb
out
hlt
mov
repnz
xlat
test
fdivrl
add
jmp
jmp
in
lods
out
repnz
out
xlat
lret
std
add
fadds
fstp
iret
fucomi
in
cld
lods
mov
out
int
fcmovbe
mov
mov
in
lret
mov
sti
into
roll
or
faddp
in
push
vcvttpd2dq
lds
mov
lds
mov
ffree
in
lret
testl
mov
fnsave
repnz
mov
mov
add
mov
ret
fcos
jmp
into
fildl
add
scas
stos
movsl
xlat
out
lds
fdivp
mov
int
add
jecxz
mov
or
push
scas
repz
imul
mov
fxch
rcr
mov
cli
loop
in
cli
out
lret
iret
in
mov
mov
xlat
int
cld
leave
ret
cli
ret
add
fprem
adc
aam
mov
mov
shl
jmp
add
fildl
jmp
adc
test
int
iret
xlat
shl
clc
into
jmp
repz
fdivrp
add
mov
hlt
cld
push
ret
out
shl
lret
neg
enter
iret
ret
xlat
fstp
or
out
lret
int3
adc
loopne
test
ror
mov
int
clc
lock
cmc
loopne
clc
repnz
in
or
lds
adc
fsub
mov
in
mov
fmul
test
in
repz
fcmove
mov
rol
pop
std
std
les
mov
ret
mov
shr
mov
fdiv
cld
loope
ret
sar
cld
lret
int
in
rcr
jmp
jmp
jecxz
std
loope
push
ret
sti
or
iret
add
test
in
aad
into
into
clc
in
clc
imul
ret
movl
or
hlt
or
enter
mov
in
mov
shl
cli
fdivr
rcl
loope
in
stc
or
mov
lds
mov
fprem
mov
mov
loop
or
vcvttpd2dq
cli
rorl
ljmp
out
cmc
aam
dec
enter
rcl
out
sti
add
mov
mov
aad
mov
ror
into
ljmp
fiaddl
or
cmc
leave
in
iret
out
sar
divb
cmc
repnz
out
in
add
add
fucomi
clc
out
mov
repnz
out
stc
mov
iret
fcmovne
mov
icebp
clc
lock
or
in
out
fsubp
icebp
mov
enter
sar
testb
testl
cld
call
cld
or
ret
loopne
aam
aad
repz
jmp
repz
fiadds
add
loopne
rcr
cmc
push
add
aam
in
loopne
repz
out
ret
aad
cli
aad
in
fcom
incb
flds
fadd
ffreep
out
jecxz
in
lods
repz
shll
call
mov
shl
or
pop
repz
loope
in
aam
loope
stc
aad
mov
aad
add
ljmp
fildl
dec
int3
int
sarb
aad
fnstcw
loop
add
into
repnz
ror
jmp
lret
add
or
push
into
int
enter
aam
lods
aad
lods
in
iret
mov
pop
push
pop
or
aam
into
cli
adc
repnz
mov
into
into
fldpi
mov
leave
iret
jecxz
mov
add
or
leave
fcmove
push
add
fldcw
int3
out
out
into
rol
in
loop
roll
in
fstp
in
aad
loop
std
cli
shr
shl
ljmp
idivb
fstp
cli
aad
ffree
fcmovnu
or
add
out
add
jmp
cli
mov
aam
repnz
pop
add
jecxz
ljmp
shr
scas
int3
fcmovu
rol
int3
mov
rol
sti
lret
mov
in
in
out
in
test
mov
lock
out
jmp
sar
in
add
call
add
shr
hlt
repnz
out
int
lret
fstp
test
iret
push
ljmp
mov
in
loope
mov
in
dec
call
shr
pop
out
jmp
or
repz
in
repnz
in
xlat
jecxz
out
ret
int
mov
aad
add
add
fdivrl
jmp
jmp
mov
fcomp
shl
neg
div
lret
test
enter
out
lods
int
lock
jmp
hlt
enter
repz
cli
ljmp
out
fmul
mov
int
mov
lret
aam
sarb
idiv
hlt
cli
loopne
pop
jmp
pop
out
mov
mov
rcl
out
hlt
fcomp
aam
add
lock
int3
in
jecxz
jmp
or
mov
int3
out
aam
call
into
mov
in
vshufps
div
pop
add
out
test
xlat
shl
mov
repnz
fdivrl
fadd
aam
icebp
dec
hlt
in
leave
cli
rcl
shrb
jmp
iret
std
jecxz
in
pop
fldl2t
hlt
push
fadds
leave
call
mov
aam
not
fcmovne
lock
icebp
mov
or
fprem1
or
lret
out
lret
mov
mov
lods
jmp
jmp
loop
rol
out
or
jmp
call
les
mov
clc
ret
jecxz
or
fcmovb
incb
out
fdivr
sarb
icebp
sti
int3
sarl
roll
aad
add
fnstsw
in
lret
rep
jecxz
rcl
loopne
fcomip
mov
std
movl
xlat
std
clc
ret
fdivrs
mov
aam
lods
neg
out
mul
cld
out
aam
cli
mul
lret
in
fld
stos
shl
shl
int3
int3
in
div
sar
jecxz
add
fcomi
out
or
fsubr
aam
push
sti
jmp
mov
cmc
repnz
fld
rol
hlt
in
idivl
out
jmp
lret
ljmp
ror
iret
sti
cli
sti
xlat
mov
add
shl
fprem1
shr
in
or
xlat
repz
loop
in
ljmp
fdivp
loopne
sar
aad
lret
or
sti
ficoml
in
call
mov
mov
mov
sti
shl
mov
rol
or
or
aam
clc
out
in
in
leave
mov
sar
mov
mov
in
out
mov
jmp
filds
add
out
jecxz
mov
cmc
jmp
enter
stc
cld
fcomi
sti
add
cld
repnz
out
mov
in
aad
leave
into
imul
loop
test
loope
add
or
mov
mov
mov
cld
leave
ret
mov
add
jecxz
fsubrp
out
out
lret
mov
clc
fsubr
fyl2xp1
iret
fcomip
add
fsub
add
idiv
add
lret
lret
fsubrs
mov
into
loope
fucom
add
add
add
loopne
lret
repz
not
mov
mov
test
clc
add
mov
or
add
call
mov
repnz
fidivl
shr
ret
cmc
icebp
stc
jecxz
pxor
int3
push
or
repz
shr
out
into
into
mov
mov
mov
leave
mov
test
add
mov
cmc
decl
out
repz
lret
repz
mov
fadd
faddl
fdivrp
fucompp
enter
fdivs
lods
mov
into
rcl
lret
mov
loopne
cli
jecxz
out
in
fnstsw
mov
stos
ret
int
out
mov
in
in
fndisi(8087
out
jecxz
fisttps
cli
loope
std
in
loope
xlat
shr
jecxz
shll
mov
out
add
fisttpl
add
in
xlat
enter
in
out
out
mov
dec
mov
cmc
xlat
rorl
aam
loop
fimull
or
in
loope
ljmp
jmp
iret
iret
repz
fdivr
sar
in
std
cli
call
loop
mov
jecxz
out
into
rcl
fcomp
idiv
stc
repz
or
loop
call
mov
shl
iret
leave
in
into
out
int
idivb
jmp
or
stos
out
out
aad
in
mov
mov
cli
or
add
add
or
ror
iret
shr
lods
les
mov
fadd
hlt
repnz
enter
or
int3
fadd
out
ret
shl
leave
xlat
shr
shl
fxch
loop
fcmovnu
mov
call
call
mov
icebp
jmp
sti
aam
ret
push
rol
rolb
or
in
pop
leave
stos
icebp
vpsubsw
lods
out
mov
aam
add
mov
sar
icebp
add
add
or
leave
jmp
out
mov
cli
mov
loope
mov
aad
vpaddw
push
pop
mov
jecxz
lret
scas
lret
hlt
hlt
fstp
incl
fadds
out
or
add
enter
hlt
shr
fdecstp
mov
sarb
rcr
loopne
leave
or
repnz
int
int3
lret
enter
shlb
mov
mov
in
rol
fcmove
fcomip
fucomp
mov
repz
int3
lods
int3
mov
mov
push
in
mov
sti
int3
cld
jmp
ljmp
in
jmp
mov
mul
add
fcmovnb
lret
leave
loope
fdivl
lock
ljmp
cld
roll
fcmovb
shl
loop
hlt
stc
lds
cld
ljmp
div
mul
out
mov
divb
ffree
ljmp
out
ljmp
rcr
icebp
lds
ret
mov
mov
jecxz
psubb
repz
mov
shl
loopne
divb
ret
mov
mov
rorl
aam
add
fsubrs
mov
test
scas
mov
push
lock
mov
fndisi(8087
aad
loope
jmp
fistpll
mov
cld
add
iret
fsub
clc
std
out
in
leave
in
loopne
jmp
loope
mov
enter
jecxz
loope
loopne
in
push
inc
or
cld
clc
push
pop
fnstsw
hlt
rcr
mov
lret
aad
lret
fcomi
mov
or
in
lret
shll
mov
mov
cld
lock
or
out
jmp
repnz
repz
int
lret
sti
ljmp
std
fdivp
in
add
fisttpll
sti
repz
shl
mov
into
repnz
rcl
mov
cmc
loopne
mov
ljmp
mov
out
in
rcl
xlat
out
icebp
cli
mov
sar
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jmp
xorb
lock
cs
mov
add
clc
add
or
int
shl
test
mov
call
hlt
clc
fildl
hlt
aad
out
aam
ret
prefetch
or
test
loopne
xlat
ror
hlt
fcomp
clc
fmulp
mov
movl
lret
loopne
out
rcl
ret
mov
mov
neg
fcomi
lock
loopne
cld
lock
jmp
enter
xlat
into
jmp
repz
mov
std
fldl
mov
shl
loopne
stc
out
add
jecxz
fdivs
cli
shl
aam
mov
add
sti
hlt
ret
xlat
add
fdivl
loop
repz
lods
repz
mov
rol
aad
or
imull
imul
enter
mov
bnd
aad
add
loop
ret
imulb
lret
mov
sti
aad
shl
add
shl
add
cli
lret
fistpll
loope
vpxor
stc
mov
idivb
icebp
mov
fsub
fldln2
pmulhw
out
mov
fldz
xlat
out
repnz
in
in
repz
cld
hlt
iret
sar
adc
into
out
shl
loop
mov
enter
repz
in
decl
or
pop
into
lret
fmul
xlat
xlat
aad
rcr
iret
mov
iret
fldz
sarl
repz
vpextrw
lds
or
stc
loop
shrl
cli
vpsrlw
cld
inc
fcomp
mov
std
iret
add
fadd
in
in
repz
call
shl
rcl
idivl
rorb
or
icebp
lods
lods
in
leave
out
mov
lock
mov
lock
leave
call
in
jmp
mov
hlt
mov
add
std
ret
add
pop
sarb
icebp
in
out
lods
out
int3
in
idivb
stc
push
ffreep
mov
iret
fsubr
jmp
in
out
aam
hlt
icebp
out
rcl
sti
mov
mov
stc
ror
cmc
add
or
out
test
ror
out
rolb
call
fmul
jmp
in
loope
iret
leave
jmp
ljmp
lret
mov
leave
mov
cmc
xlat
std
enter
or
shrb
shr
cli
mov
mov
idivb
ret
mul
rol
add
or
in
lret
mov
jmp
rcr
mov
mov
clc
or
ljmp
bnd
mov
ret
std
add
add
sarb
f2xm1
shr
int
clc
mov
shr
fucom
ljmp
loope
test
lret
shl
divl
repz
int3
lock
cmc
loope
loop
loope
out
stos
enter
fsub
into
rcr
shr
cmc
aad
jmp
cmc
in
fucom
add
fmul
jmp
shrl
lret
cld
mov
repnz
add
lods
mov
in
shl
jmp
lock
push
lock
in
ljmp
shl
mov
out
lods
fcmovnu
call
ret
mov
fadd
loop
loopne
aad
push
stc
iret
in
mov
mov
rcl
call
mov
add
add
fadd
fdivr
fldl2t
fsubp
jmp
mov
into
cmc
call
int
fcomp
rcr
clc
fidivrl
loope
ljmp
test
shll
leave
aam
idiv
add
xlat
std
or
lds
add
in
ret
loope
ljmp
fdivrp
idiv
add
loop
add
out
out
loop
int
mov
call
xlat
sarb
in
push
stc
std
out
decb
sarb
hlt
in
iret
mov
lock
jmp
ret
in
shl
loopne
or
or
shrl
ret
rol
vpsrlq
mov
mov
mov
cld
call
test
leave
out
enter
out
mov
mov
in
in
sti
les
fcomp
out
test
out
not
int3
in
shl
rcl
mov
rcr
out
in
fcmovb
ffreep
lods
lret
lret
mov
mov
icebp
repz
loopne
dec
fdivr
jmp
mov
loope
out
mov
test
jmp
inc
lret
sti
cli
cli
add
lds
aam
mov
out
in
std
xlat
mov
fnstsw
shl
push
fsubp
cld
shl
repz
call
repnz
into
aam
in
mov
mov
lret
loope
aam
rcr
mov
out
mov
fcomip
ret
jmp
push
out
leave
mov
repnz
fcomi
idivb
call
mov
stc
in
in
or
mov
mov
enter
lret
ror
add
fiadds
lret
jmp
repnz
scas
mov
div
rcr
int
mov
loope
add
cmc
xlat
cli
iret
iret
decl
mov
repnz
clc
lock
aad
loop
inc
out
add
loop
aad
lret
fdivrp
out
in
loopne
loopne
lock
mov
roll
or
push
leave
lds
sti
fcmovb
scas
mov
out
rol
fdivrs
aam
mov
mov
add
out
scas
enter
mov
not
repnz
ljmp
add
testb
jmp
loope
aam
loop
iret
test
div
enter
repnz
loop
idiv
clc
loopne
cld
rol
fprem1
std
fnsetpm(287
ljmp
icebp
jmp
int3
in
fistpll
in
ret
mov
sar
lret
test
lret
into
rcr
ljmp
repz
roll
aad
flds
jecxz
ftst
rcl
lret
test
mov
mov
fyl2x
clc
out
loopne
loop
add
cld
call
mov
mov
out
hlt
ffree
fcmovu
in
fprem
out
rcr
shl
paddq
cli
ret
mov
in
sti
cli
jmp
cmc
bnd
add
fcmovbe
fucomp
in
fmulp
loopne
shl
lock
rcr
vpminub
icebp
rcl
icebp
ffreep
fldl2e
roll
fdiv
out
in
loope
int3
stc
int3
repnz
std
stc
rcr
loop
std
pop
out
out
push
push
int3
fsub
mov
repnz
in
hlt
mov
fdiv
shl
jecxz
cli
stc
iret
in
stc
lret
or
ret
mov
jmp
mov
mov
jecxz
shl
cmc
leave
lret
call
mov
int
jmp
int3
shr
jmp
push
int3
cld
fxtract
add
cmc
out
lret
std
iret
mov
ror
div
mov
lret
enter
clc
out
loopne
in
testb
hlt
in
int
rcr
mov
in
mov
mov
mov
leave
fcompp
iret
ret
mov
jecxz
in
lret
add
lock
in
fcomip
in
mov
sar
aad
repz
cmc
add
or
push
push
leave
lret
mov
fcmovb
enter
shl
int
into
shl
cmc
std
mov
or
ret
pop
fstl
jmp
into
sti
shr
cmc
enter
repnz
loope
int3
fcomp
std
clc
in
add
add
loope
mov
imul
fidivrs
cli
mov
cli
call
iret
add
out
shlb
mov
imul
cld
hlt
fidivrl
std
out
dec
loopne
iret
out
mov
jmp
mov
mov
out
iret
iret
call
cld
repz
hlt
sti
jmp
std
in
fcmovnu
fnstsw
aam
fsubrp
cmc
call
incl
cld
add
fisttpll
add
lret
cli
shlb
mov
loop
mov
ret
jmp
lret
loopne
add
push
repz
jecxz
mov
iret
mov
lock
mov
mov
aam
mov
push
iret
stc
pop
in
bnd
call
lret
hlt
aam
loope
loopne
fldl
in
or
add
jmp
out
add
cmc
out
test
mov
repz
mov
sti
lock
fsubrp
jmp
fincstp
call
sti
fidivrl
mov
pop
lock
jmp
in
out
lret
int3
loop
repz
iret
int3
out
mov
mov
lret
mov
fdivr
call
roll
loop
stc
or
out
enter
mov
jmp
mov
out
mov
sarb
lret
into
pop
shl
add
movb
out
in
mov
icebp
loope
rcr
std
ljmp
rolb
std
sti
ret
out
stos
jmp
lret
call
fdiv
xlat
mov
test
jmp
loope
stos
shl
mov
out
mov
test
fcmovne
hlt
cmc
clc
fcomip
jmp
fsub
or
shl
fmuls
fadd
aam
fcomi
ljmp
mov
lds
loopne
std
hlt
in
fdiv
ffree
shl
rcl
xlat
in
fistpll
clc
int3
jmp
fst
hlt
or
lret
int3
stc
mov
jmp
sti
jmp
mov
ljmp
out
roll
add
ror
jecxz
in
mov
hlt
fcomi
mov
out
int
fildl
jecxz
mul
add
call
shlb
ror
in
out
rol
jmp
fucom
cli
in
iret
in
in
int3
loop
mov
shl
call
out
out
mov
fdivrp
aam
hlt
mov
shrb
xlat
mov
aad
iret
ror
imul
enter
add
cmc
repnz
out
lret
into
cli
lret
aam
aad
lret
test
jmp
aad
out
pop
testl
cmc
out
or
stos
int
out
jecxz
shl
icebp
ror
cmc
in
std
lock
rcl
fstp
rcr
in
int3
ljmp
mov
aam
fdivrp
fidivrs
in
ffreep
mov
call
mov
lret
mov
sti
mov
ret
fsub
fabs
loop
add
clc
or
fsubrp
or
lds
ljmp
xlat
mov
out
imul
int3
out
lds
in
mov
mov
jmp
not
push
sar
xlat
fucomip
ror
pop
add
aad
jmp
in
mov
jmp
repz
rolb
add
loopne
add
test
jmp
in
lds
lret
enter
loope
dec
fucom
out
fsubrs
cmc
out
aam
out
lret
mov
out
out
mov
in
loopne
in
call
mov
call
add
aam
prefetchw
or
stos
int
loopne
out
into
ljmp
leave
xlat
push
fsub
out
sti
leave
stc
enter
int3
repnz
rol
mov
mov
ror
lock
fcmovbe
int3
div
jecxz
sti
or
add
add
or
add
test
out
into
mov
loope
aam
aam
leave
repnz
sarl
cli
lret
jmp
cli
in
rol
in
loope
in
in
jmp
ret
mov
shl
in
test
aam
fistpll
rol
mov
leave
fcmovne
xlat
mov
int
int
fst
loope
clc
out
pop
call
stos
into
aad
into
in
repz
mov
in
not
or
xlat
add
add
mov
rcl
test
aad
fmul
mov
xlat
pop
std
add
lret
psrad
add
enter
ror
divb
icebp
repnz
enter
pop
out
lock
wbinvd
call
call
loopne
imul
shr
shr
mov
fcomi
aam
leave
div
add
adc
fsubrs
mov
mov
mov
mov
repz
ret
sar
or
lret
mov
mov
out
out
fcmovbe
cld
mov
repnz
rcl
std
in
lret
loope
lods
int3
lods
call
out
mov
fdivrs
icebp
push
repnz
cmc
push
out
loope
add
mov
sti
rcr
mov
mov
mov
loop
fsubrp
add
or
call
div
out
out
hlt
jmp
fcmovbe
aad
sti
add
repnz
std
loope
loop
jmp
mov
out
lock
ror
lret
clc
cld
fidivl
frstpm(287
aam
fiadds
aam
lret
int
or
ljmp
lret
in
lock
mov
add
in
std
fisttpll
fstp
in
int3
leave
shl
mov
into
lds
sti
cli
loop
ffreep
loopne
rcl
call
lret
shl
lret
lret
jmp
stc
fidivrs
add
sarl
fmuls
clc
rcr
lock
in
lret
mov
clc
sar
fcmovbe
fdivrp
mov
ret
les
std
in
in
push
lods
out
int3
jecxz
iret
out
repnz
fistpll
xlat
clc
sti
loop
in
fpatan
ljmp
mov
int
hlt
int
mov
add
fcmovnu
aad
or
add
in
jecxz
lret
out
mov
imul
mov
lret
mov
mov
out
les
leave
or
or
loope
jmp
rcl
mov
ljmp
icebp
fdivrs
fiaddl
pop
ffreep
testb
leave
or
icebp
scas
lods
shr
xlat
ret
ror
aam
mov
bnd
repz
cld
in
into
add
out
shr
ret
ret
repnz
mov
add
repz
jecxz
or
fmulp
jmp
xlat
out
mov
aad
fmul
fucomp
jmp
shl
aam
aam
in
hlt
clc
ljmp
jecxz
loopne
lock
loopne
aad
out
roll
loopne
or
test
xlat
ret
rol
call
loope
mov
testb
fldln2
fcmovnu
jmp
out
lods
hlt
in
xlat
xlat
ror
out
faddp
sti
aad
jecxz
add
mov
in
fcmovne
mov
mov
ljmp
jmp
stc
clc
out
ret
clc
call
mov
stc
mov
cmc
test
call
clc
clc
out
loope
in
sti
stc
in
scas
aam
mov
mov
fdivrs
sti
cld
or
ror
out
push
push
out
in
push
ret
jmp
aad
lret
stc
mov
leave
loop
ret
fcmovnbe
or
or
loopne
in
enter
div
enter
shlb
faddp
add
cmc
fildl
hlt
ret
jmp
iret
leave
lods
int
sti
mov
out
loop
add
incl
into
out
in
int
out
jmp
stc
xlat
enter
sar
idiv
pandn
leave
clc
leave
rol
ljmp
out
icebp
cld
imul
repnz
test
mov
out
fistpll
cmc
iret
out
in
not
idiv
rcr
testl
add
shrb
shr
in
in
iret
hlt
mov
fabs
clc
mov
hlt
cmc
loope
fcoml
add
loopne
loopne
shll
call
repnz
repnz
mul
lret
leave
loop
fucomip
out
hlt
in
mov
in
clc
mov
faddp
sarb
call
ret
out
in
les
rol
stc
hlt
mov
idivb
out
or
in
ljmp
rcl
mov
repnz
rcr
stc
int3
repnz
ret
or
mul
or
fcmove
out
fdivrs
shr
mov
in
fdiv
mov
enter
xlat
in
std
fdivr
clc
add
int
decb
icebp
in
shr
iret
in
iret
out
mov
sarb
fucomi
add
repz
mov
lods
mov
fdivrp
mov
mul
ret
ret
loop
out
in
repz
lods
scas
lret
cmc
in
out
mov
lock
fdivp
fcmovbe
fiaddl
lret
in
fdivp
mov
rol
fcmovu
cli
xlat
mov
faddl
add
add
or
shll
int3
mov
mov
rcl
cld
into
mov
movl
push
in
fucom
in
mov
in
ljmp
std
out
int
ret
shl
icebp
add
cli
cld
or
out
out
lret
fsubr
lods
loop
ljmp
cli
mov
add
ret
pop
call
or
not
shrb
repnz
xlat
ret
add
jecxz
or
pop
int
jmp
lock
mov
fadd
not
mov
push
std
loopne
std
loop
add
add
std
or
stos
mov
rcr
shl
ror
mov
aam
repz
ret
stc
out
loope
out
add
int3
in
lods
leave
xlat
loopne
loope
iret
in
int
ljmp
add
jmp
aam
repnz
ffreep
out
in
mov
aam
lret
mov
fnstsw
repnz
stc
aad
loope
add
ret
shll
hlt
in
mov
in
in
rcl
rorb
sti
or
jmp
in
loope
in
int
cmc
ror
in
clc
mov
mov
mov
idiv
fmul
out
out
mov
out
jmp
in
out
mov
xlat
cld
int
neg
or
fsubp
out
lret
std
in
fbstp
shll
out
mov
xlat
rcr
or
iret
or
clc
lret
test
in
int
in
lret
cmc
shr
rcr
mov
fxch
in
or
rol
rep
out
lret
mov
ljmp
mov
ret
push
lret
or
pop
in
out
in
loope
mov
repnz
in
iret
repz
fadd
jecxz
out
clc
vpmulhw
loopne
in
repnz
mov
mov
iret
fcos
into
loop
out
push
xlat
clc
pop
xbegin
stc
adc
repz
out
int3
mov
fdivrl
ret
fcmovu
in
incb
out
mov
mov
sti
leave
ljmp
mov
clc
int3
or
add
ljmp
int
ret
divb
mov
jmp
repz
sar
or
enter
jmp
lods
repnz
jmp
aam
mov
call
hlt
pop
out
mov
out
add
iret
fbstp
ret
mov
sarb
pop
or
clc
cli
les
ret
fsubrp
loopne
shll
cli
cmc
clc
incl
lock
add
faddp
loopne
or
in
int3
test
shl
xlat
in
mov
aam
repz
into
idivb
mov
std
enter
shl
faddp
mov
mov
cli
mov
in
in
std
or
cmc
inc
enter
shr
shl
ret
out
out
call
cld
clc
lock
clc
fmuls
mov
out
lret
call
lret
jmp
repnz
call
out
in
les
out
sti
fcmove
scas
into
ljmp
icebp
add
int
aam
mov
out
fsub
iret
in
repnz
lods
rcl
in
mov
in
fistpll
clc
aam
or
cli
in
fisubrs
loopne
mov
repz
sar
mov
rol
fucom
out
loope
add
movsb
ljmp
lret
int
mov
cmc
cli
lret
incl
int
in
clc
mov
div
lret
shl
loopne
call
int
mov
rol
in
testb
add
push
lock
vcmpsd
jmp
rcr
enter
mov
lret
fld
rcr
jmp
test
lock
fcmovnbe
mov
rol
rcl
or
cmc
push
add
ljmp
aam
cmc
mov
add
shl
mov
cli
enter
lret
test
in
cli
mov
mov
jmp
clc
aam
pop
add
in
enter
push
or
sarl
in
repnz
imul
iret
mov
in
mov
xlat
repnz
pop
add
ud0
into
in
stos
out
mov
int3
int3
mov
pop
mov
out
add
add
enter
repnz
xlat
int3
out
call
shl
into
faddl
repz
sti
lret
mov
std
rcl
test
int3
out
std
lret
test
loope
jmp
stos
loopne
int3
shl
jmp
out
mov
out
aad
mov
jecxz
push
add
in
cmc
out
or
lock
lods
stos
in
jmp
lock
mov
mov
fnop
aam
repnz
clc
or
mov
loop
ret
idiv
mov
fsqrt
loop
out
in
loopne
aad
out
xlat
lret
iret
push
adc
fucomp
repnz
lret
out
jmp
fdivr
repnz
rcl
pop
add
jmp
fldcw
mov
loopne
aam
hlt
iret
call
std
mul
mov
push
fdivr
std
out
adc
mov
mov
mov
sar
jmp
loop
jecxz
filds
mov
leave
add
icebp
in
mov
lods
mov
mov
lock
rcr
idivl
repz
imul
jmp
out
or
scas
leave
lret
aam
int3
shl
enter
mov
mov
cld
leave
paddw
jecxz
test
fdiv
mov
in
jecxz
call
rcr
mov
stos
int
lret
idivb
out
mov
div
fildl
add
loope
jecxz
shl
mov
div
les
mov
repnz
fiadds
add
in
out
mov
leave
in
mov
out
mov
mov
rol
ret
aam
sti
in
cld
into
out
sarl
fdivr
repz
enter
int3
fidivrs
cli
add
out
cmc
sti
into
cld
scas
jecxz
mov
rol
sar
push
lret
dec
stc
out
add
add
or
aam
int
ret
shll
scas
lret
shlb
ret
sar
ljmp
int
stc
out
icebp
out
jmp
fdiv
in
les
test
aam
std
cli
add
fucomp
test
repnz
in
mov
fdiv
mov
loope
loop
in
loopne
out
or
repnz
mov
fcmovu
in
mov
cli
sti
repnz
sti
lret
out
loopne
leave
repnz
fsubrp
scas
loopne
out
vpminsw
mov
out
add
clc
jmp
movl
push
or
lock
rcl
in
loopne
mov
shlb
hlt
fiadds
add
fadd
out
fucomp
ret
jmp
mov
mov
sarl
add
aad
loopne
aam
fiaddl
shr
jecxz
aam
jmp
lock
fmulp
leave
in
fadds
imul
stc
hlt
jmp
jecxz
add
cld
scas
leave
fucomip
ljmp
jmp
ljmp
repnz
push
fisttps
xlat
fucomip
or
add
scas
mov
mov
fnstenv
mov
clc
in
add
in
add
jecxz
divl
ljmp
fdivr
int3
aad
clc
ret
icebp
mov
out
fnsave
call
mov
in
cli
ret
jecxz
ffree
stc
out
out
ljmp
mov
repnz
int3
sar
fcmovnu
jmp
in
rol
pminub
in
enter
scas
test
stc
mov
fcmovbe
iret
fsub
mov
fcmove
cmc
enter
jmp
ljmp
shr
mov
in
int
or
or
or
fcmovnu
jmp
leave
mov
repnz
fnstsw
mov
or
pop
or
lret
fildll
shr
leave
clc
les
cli
add
aam
mov
idiv
fstp
int3
or
mov
ljmp
fdivrp
mov
fsub
add
or
jmp
repnz
shr
out
enter
mov
mov
ret
jecxz
std
out
movl
loope
lods
imul
jmp
clc
rolb
cmc
out
jmp
enter
repnz
int
lods
in
in
mov
mov
enter
in
loop
cli
jmp
in
fadd
mov
jmp
out
in
incl
aam
sar
fcomp
push
cmc
aad
or
jmp
leave
stc
shl
leave
icebp
out
add
add
loopne
fadds
psubb
or
shl
jmp
out
lock
hlt
fcmovne
hlt
fdivrs
in
add
sti
adc
call
test
idiv
jmp
jecxz
out
cld
mov
fdivp
fimuls
in
or
mov
mov
mov
repnz
loopne
dec
ret
rcr
mov
fsubrp
out
loop
mov
mov
add
loop
fdiv
push
or
cmpsb
rcr
iret
fidivrl
enter
sti
out
cld
add
or
std
add
ret
loop
jmp
loopne
in
mov
shr
mov
mov
repz
neg
fcmovnu
out
bswap
call
shl
xlat
call
mov
out
shl
add
rol
add
cli
aam
faddl
int
jmp
leave
ret
int3
test
icebp
call
mov
shl
ret
push
fisttpl
sti
out
scas
mov
loopne
out
fidivl
shlb
add
fiadds
inc
mov
out
mov
lret
rol
inc
jmp
f2xm1
mov
fiaddl
out
les
repz
rcl
fcmovnb
fnstcw
add
loop
ret
leave
out
loope
loopne
loop
shrb
mov
into
hlt
ljmp
testb
fisttps
rcl
out
fildl
stos
int3
shlb
int3
in
fldln2
jmp
aad
fchs
aam
mov
hlt
cmc
or
fimull
lret
mov
stc
out
int
int
enter
add
ljmp
or
int3
ret
lds
into
test
out
clc
mov
int3
shl
add
push
lret
or
loop
in
shl
lret
in
sar
jmp
mov
icebp
mov
mov
jecxz
jecxz
leave
fcoml
repnz
out
out
shl
idiv
jmp
repnz
mov
fucom
jmp
or
out
ljmp
out
shl
mov
stc
icebp
lock
ret
ljmp
ljmp
ljmp
mov
loopne
add
bnd
int
adc
jmp
mov
int3
sti
mov
mov
add
push
add
rol
lret
enter
fsubp
imul
shlb
call
ret
out
jecxz
sti
fdiv
aad
rcr
in
add
lret
movsb
aam
fcmove
ljmp
int3
sti
mov
cld
rorl
std
fucomp
jecxz
call
lret
ret
int3
loop
in
pushl
mov
mov
iret
std
ret
or
or
lock
test
enter
sti
out
sar
mul
ret
fisttps
icebp
not
rcr
sti
ror
fyl2xp1
jmp
fidivrs
les
jecxz
in
loopne
int3
leave
test
ret
out
lret
jecxz
mov
cmc
ret
shr
out
add
iret
int
mov
in
in
lock
fxam
lret
mov
add
lock
push
jmp
fucomp
decb
loopne
shll
icebp
jmp
fcmove
mov
rol
or
jmp
out
in
lret
clc
adc
ffreep
shrb
neg
mov
jmp
in
hlt
loope
rcl
add
incl
in
jmp
in
ret
loopne
out
fxch
lock
add
clc
fdivr
aam
add
movb
enter
icebp
icebp
in
mov
out
mov
add
add
cld
add
icebp
add
cld
sti
ret
lods
leave
in
into
in
mov
repnz
shl
loopne
rol
jecxz
fmulp
or
lods
mov
mov
xlat
mov
lock
stc
xlat
in
int3
hlt
repz
mov
fucomp
out
loopne
lock
mov
out
shl
mov
int3
in
fsubp
sti
sti
ret
lock
cli
lret
add
repz
int3
jecxz
mov
repnz
in
mov
leave
iret
stc
loop
in
mov
push
icebp
in
loopne
add
leave
mov
ret
ret
loope
shl
shl
aad
mov
loop
xlat
mov
mov
filds
repz
int3
in
mov
in
not
stc
fsub
int3
idiv
call
or
into
mov
stos
mov
in
sarb
std
push
ret
ljmp
mov
aam
mov
fstp
in
sti
mov
sti
leave
hlt
out
std
lret
sti
std
enter
cmc
div
leave
fdiv
rcl
int
into
fcomip
hlt
ret
sti
stc
mov
sti
fsubp
std
fmul
jmp
lods
aad
sti
cli
lock
in
xlat
neg
add
in
cmc
rcl
incb
jmp
imull
int
rcr
idivb
ret
fcmovb
hlt
stc
fdiv
adc
ffreep
not
mov
lret
mov
cli
mov
rcl
stc
mov
add
aam
cli
repnz
int3
repz
filds
mov
loopne
decl
fcmove
in
faddp
scas
test
enter
imul
fsubr
hlt
into
fst
cld
iret
mul
in
shr
std
add
clc
aad
int
fdivs
iret
out
in
cmc
repz
aad
fldl
in
rol
mov
cli
stc
repnz
loop
hlt
iret
sar
mov
shl
leave
add
sar
repnz
pop
add
std
enter
rcl
jmp
icebp
scas
ret
mov
stc
mov
out
ljmp
rorb
fadd
enter
int
fsubl
in
jmp
stc
iret
fdivrp
fsub
hlt
stc
int
out
loop
loopne
testb
lret
shrl
aad
mov
fprem
sti
mov
dec
or
adc
mov
hlt
mov
out
xlat
lret
aad
repz
cmc
push
mov
lret
sar
adc
ror
mov
sti
lods
lret
lret
fdiv
fcomp
repnz
clc
add
neg
add
leave
repnz
in
int
ret
les
jmp
fdivr
out
int
stc
rolb
add
lret
vpsubsb
leave
in
in
sarb
int3
repz
in
ret
add
div
add
loope
in
fdivrl
lods
enter
clc
fcmovnu
mov
add
loope
fstp
ljmp
mov
jmp
xlat
ror
aam
neg
icebp
add
aam
fsubr
or
or
into
int3
shll
xlat
leave
hlt
mov
testb
loop
fsubp
vpsllw
jmp
loop
mov
loopne
cli
mov
out
mov
add
mov
out
out
jmp
lret
into
ljmp
test
iret
icebp
push
lock
pop
call
out
cmpsb
out
mov
mov
sarl
hlt
aad
int3
loope
jmp
out
std
pmaxub
shl
repz
jecxz
into
mov
lret
cld
rcr
sti
loop
mov
or
add
out
lods
sarb
lods
in
lock
mov
push
aam
lock
fimull
fsubr
cmpsl
enter
leave
shl
shl
jmp
stc
add
add
add
loopne
stc
or
andl
add
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
jmp
lret
sub
shlb
inc
jnp
enter
and
add
add
lods
mov
fcmovbe
mov
cld
rolb
rcr
in
lret
loopne
ret
repz
loopne
repz
ret
loopne
fdivr
out
pop
repnz
lret
movb
jmp
enter
mov
out
lret
fst
cmc
add
mov
incl
out
movb
lret
loope
out
loopne
call
mov
mov
repnz
out
prefetch
or
stos
loop
out
shlb
mov
hlt
fdivr
fsub
mov
add
in
or
jmp
loope
in
icebp
shr
mov
repz
incb
add
fadds
jmp
in
cli
into
shl
mov
enter
cli
in
int3
enter
lock
jecxz
loop
or
aam
cli
fcomip
in
jecxz
ret
iret
stc
rol
mov
xlat
mov
incb
jmp
repnz
lods
into
out
lret
out
sar
ljmp
lret
cld
lret
pop
fucom
out
incb
cmc
fcmovnb
in
cli
int
fucompp
mov
loopne
ret
sar
in
lret
fisttpll
add
mov
ret
mov
sti
shr
in
in
cld
div
neg
into
int3
out
in
cmc
aad
in
icebp
stos
out
lret
jmp
sti
repz
in
aam
int3
add
sti
ret
or
int
iret
test
icebp
lods
enter
rol
mov
enter
out
shl
aam
fucomp
fcomp
loope
loope
aam
out
in
xlat
icebp
fcmovnbe
in
mov
out
ljmp
loop
cmc
jmp
aad
jecxz
clc
shr
incl
add
add
add
clc
cld
out
ret
ret
mov
lret
shr
cli
mov
aam
cmc
cmc
xlat
out
push
hlt
loopne
shl
lock
lret
stos
out
out
leave
stc
vpaddw
mov
fmull
jmp
loopne
add
mov
int
in
call
lock
aam
add
cld
lret
add
sti
or
or
leave
ror
lret
rol
shll
ret
test
vpmuludq
fucomip
out
fsubrp
push
icebp
test
iret
jmp
int
rcl
in
fdivp
fcmovu
jecxz
ret
fmul
into
icebp
loop
div
repnz
std
repnz
aad
jmp
add
cld
incl
out
or
in
lret
fbstp
cli
cli
shr
fidivrl
clc
aad
mov
pop
loope
out
out
shl
ret
ljmp
aam
cld
out
hlt
xlat
rcr
fmul
pavgb
add
in
jmp
mov
jmp
sar
std
icebp
loopne
loope
mov
fsubrp
jmp
lock
out
lds
in
iret
mov
cld
loope
lret
in
clc
leave
loope
in
out
aad
test
aad
mov
fsubp
rcl
sar
fdiv
ret
fsubp
lret
test
sti
mov
mov
out
mov
sti
fiadds
clc
mov
add
aad
dec
in
in
ret
enter
in
shl
ljmp
inc
neg
loop
aad
add
or
into
scas
sarl
repnz
ret
add
xlat
ret
fcmovnu
sti
mov
add
cli
jmp
jecxz
mov
mov
shl
fmulp
add
mov
mov
sti
ret
sti
enter
fcompp
mov
aam
mov
divb
icebp
loop
cmc
push
mov
or
bnd
out
jecxz
mov
shr
sar
aam
not
int
loopne
rolb
jmp
out
jmp
fdivp
into
enter
enter
fcmove
ret
add
out
loopne
ret
aam
or
stc
loop
shl
in
repnz
mov
loop
mov
mov
repnz
mov
rolb
add
iret
scas
loopne
shl
test
in
mov
out
leave
mov
or
call
or
mov
in
div
cli
fidivrs
add
cmc
loope
cmc
aam
push
or
jmp
out
call
lret
icebp
shl
call
loopne
aam
hlt
jmp
repnz
repnz
idiv
cli
shll
call
sar
cmc
cmc
std
int
scas
shlb
mov
fmulp
int3
mov
mov
jmp
in
stc
out
scas
divl
call
cmc
int3
mov
cld
mov
hlt
stc
lret
clc
repz
out
stc
cmc
mov
cmc
cli
into
mov
mov
jmp
repnz
mov
lods
lret
cmc
shl
cli
hlt
sti
fnstsw
rcl
fcmovnb
or
fdiv
rol
mov
stos
ror
out
lock
cld
jecxz
add
loop
neg
in
enter
int3
movsl
rcl
in
cmc
shr
repnz
jecxz
add
fstp
or
hlt
sti
cli
loopne
hlt
in
fildll
xlat
jmp
mov
xlat
add
aad
lds
lret
in
call
std
hlt
mov
rcr
add
aam
loop
or
stc
fchs
iret
mov
repnz
mov
hlt
out
jmp
ret
mov
add
call
call
mov
iret
leave
lret
cmc
mov
jmp
in
add
lret
int3
mov
jmp
lret
lds
mov
out
neg
cmc
loop
aad
add
adc
fxch
in
ret
into
sti
mov
fcomip
ror
xlat
mov
sar
sti
cli
lds
lret
out
into
enter
ror
lock
sarl
repz
in
fucom
xlat
pop
push
stc
std
int3
cld
leave
stos
rol
repz
lods
icebp
into
in
repnz
loop
push
sti
hlt
rorb
push
loop
fnstsw
leave
jecxz
mov
in
repnz
mov
bnd
mov
hlt
loopne
icebp
stc
mov
repz
leave
enter
lret
fxch
cmc
repnz
div
fcomip
xlat
add
int3
jmp
ret
int3
hlt
icebp
mov
icebp
mov
in
int
mov
fcom
push
clc
std
repz
lods
iret
mov
cmc
enter
clc
into
hlt
enter
ret
roll
icebp
testb
out
in
sti
icebp
into
in
loop
mov
in
mov
stc
rcl
in
aam
repz
cld
fcmovnb
fcmovnbe
out
fisttpll
loopne
out
in
in
rcl
lds
out
loopne
loop
hlt
fsubr
push
fmul
fucomi
mov
loopne
not
stc
clc
stc
fcomp
fldlg2
shl
add
out
out
out
pop
out
add
mov
aam
loop
in
rcl
cli
mov
leave
sti
pop
fcomi
cld
jmp
incl
jmp
stc
or
out
jmp
enter
iret
iret
fsubp
add
or
loopne
or
loopne
movsl
rcl
icebp
jmp
idiv
lret
add
ret
loop
ret
stc
fcmovu
in
adc
test
xlat
fcom
cli
mov
fdivr
mov
fst
lock
mul
lret
or
mov
in
leave
ljmp
ret
lock
xlat
add
fiaddl
rcr
int
add
test
repz
shr
call
fcomip
fdiv
cli
push
fcmovb
fsubp
add
neg
loop
shl
cmc
ret
mov
loop
lock
fxtract
mov
in
loop
or
leave
hlt
stc
in
sti
cli
sarl
lock
lret
hlt
iret
mov
mov
aam
int3
pop
add
fsubr
cli
fadd
out
loop
lret
mov
in
cli
rcr
fnstenv
sti
repnz
add
add
neg
add
add
loop
mov
scas
out
mov
leave
rcl
loope
loope
in
jecxz
add
aam
cli
jmp
loopne
repnz
into
mov
lret
hlt
jecxz
mul
fcomp
mov
call
out
mov
shl
shll
out
out
int3
loopne
clc
mul
or
call
loopne
bnd
out
shl
not
aam
mov
int
rcr
faddp
cld
sar
sti
out
add
out
in
les
into
mov
rol
jmp
icebp
mov
mov
inc
ror
incb
ljmp
mov
ret
mov
out
in
fcmove
in
fdiv
loopne
mov
jmp
sar
lret
push
mov
lods
enter
repz
int3
into
ljmp
ret
add
cld
div
sti
out
loopne
leave
leave
adc
fxam
lock
out
out
mov
icebp
add
clc
mov
fsubr
fdivr
add
leave
or
mov
shl
clc
leave
int
shl
add
add
call
cli
rcl
movsb
stos
mov
xlat
enter
icebp
out
in
not
cli
lock
add
add
fdivr
clc
mov
in
clc
ret
fchs
rcr
aad
in
jmp
or
fucom
out
jmp
jmp
jmp
int3
loop
icebp
dec
or
fsubrp
lret
enter
int
rcl
out
shr
leave
repnz
mov
loop
stc
loopne
shl
jmp
test
mov
fcmovb
enter
sar
push
jmp
in
stc
jmp
out
loopne
repz
mov
repz
mov
cld
or
lret
hlt
loop
out
iret
enter
jecxz
out
hlt
mov
cmc
jmp
rcl
fistpll
fdiv
aad
fmul
cld
jmp
loopne
in
out
div
div
mov
fcomi
stc
rolb
idiv
ret
add
or
or
leave
out
into
jmp
mov
rcl
fucomip
call
loopne
call
stc
into
fisubrs
iret
in
mov
in
lret
jmp
shr
faddp
fld
fld
into
bswap
leave
loop
mov
in
cmc
in
in
dec
mov
repnz
icebp
mov
sti
loopne
leave
sti
add
sarb
bnd
ret
shlb
leave
jmp
into
lret
loopne
ror
repnz
enter
jecxz
aam
out
rolb
or
fsub
in
in
or
int
repz
in
int3
sti
test
icebp
mov
aam
lret
out
shl
repz
int3
ljmp
mov
mov
add
stc
ret
or
int3
in
test
jmp
scas
lret
hlt
sarb
add
add
jecxz
push
lret
fmulp
fucom
in
lods
imul
xlat
div
mov
clc
icebp
mov
cli
rcr
std
or
stos
lds
rol
rcl
in
iret
inc
loope
out
add
in
out
fsubp
lret
or
cld
icebp
jecxz
repz
fcomi
mov
jecxz
mov
or
clc
out
adc
shr
mov
mov
xlat
int
div
add
hlt
ret
mov
add
push
add
call
jmp
fdivr
jecxz
loope
int3
out
incl
imul
in
jmp
lods
loope
jmp
mov
mov
lock
int3
mov
or
aam
or
loope
hlt
jecxz
in
out
std
iret
bnd
lock
add
loop
decl
sar
adc
or
mov
ret
shl
jmp
add
loop
fcomp
jmp
jmp
scas
bnd
mov
loopne
mov
loop
testb
jecxz
ffree
loope
loopne
in
push
fxch
shrl
call
fidivrl
fcmovu
aam
pop
dec
faddp
fsubr
mov
out
out
div
sarl
fdivr
add
leave
loopne
add
or
les
repnz
fcomi
mov
imul
stc
iret
mov
out
in
loope
out
in
iret
mul
in
mov
fxch
fst
fst
out
mov
out
add
iret
add
or
fisubrs
cli
out
clc
aam
mov
test
cli
fnsetpm(287
call
icebp
repz
call
out
fcomi
hlt
aam
cld
jecxz
ret
iret
iret
lsl
shl
fmul
out
int
lret
aad
fnstcw
leave
out
hlt
add
mov
sti
push
les
lock
mov
stc
cli
mov
aad
icebp
neg
ret
int3
icebp
mov
lods
lret
mov
cli
shl
mov
div
add
in
leave
out
pop
jmp
loope
int3
jmp
div
mov
les
int3
mov
cmc
fcomp
fadds
sar
int
int
in
jmp
mul
iret
lock
mov
aad
stc
cli
fucomp
jecxz
or
out
icebp
lods
loope
mov
lods
call
shll
faddp
mov
lret
shrl
in
lret
mov
hlt
int
rol
pop
icebp
add
rol
add
std
jmp
or
fcmovne
jmp
idiv
mov
cli
fidivrl
hlt
or
fcomip
out
out
cli
iret
in
add
fidivrs
shl
cli
lret
std
adc
xlat
lods
out
scas
jmp
xlat
clc
stc
fsub
fmulp
idiv
out
aad
add
add
mov
mov
mov
repz
shl
pop
add
icebp
roll
out
out
in
loope
lret
lds
ljmp
sti
mov
out
into
out
ljmp
rcl
sti
jmp
mov
out
clc
fimuls
bnd
add
lret
fnsave
leave
enter
ror
testb
mov
leave
fdivrp
in
add
mov
mov
aad
in
sti
int3
mov
cli
mov
aad
call
fcomip
mov
ret
mov
lret
iret
lret
mov
idiv
rcl
imul
or
jmp
ret
mov
mov
mov
ljmp
neg
repz
clc
icebp
rol
paddw
fisttps
int3
repnz
scas
ret
ljmp
mov
out
mov
cmc
loop
adc
lock
mov
in
ljmp
int
std
loop
loopne
div
jecxz
or
ret
lret
shrb
in
stc
shl
lock
std
cld
rcr
add
fcompp
loope
rol
loop
leave
call
mov
hlt
jmp
in
mov
in
icebp
mov
clc
out
stc
in
lret
mov
jecxz
fneni(8087
enter
icebp
lret
jecxz
rcr
cld
add
out
lret
push
loopne
lods
lods
mov
enter
aam
mov
aam
div
fcmovu
cld
or
add
mov
out
fsin
mov
lock
xlat
in
cmc
std
enter
mov
mov
ret
call
add
fistpll
jmp
loope
roll
out
mov
shl
int
in
sarl
sar
in
rcr
jmp
out
pop
rcl
mov
jecxz
loopne
mov
fcom
std
mov
fcmovbe
push
pop
mov
jmp
add
in
mov
clc
mov
leave
stc
fdiv
int3
hlt
mov
sar
ljmp
add
mov
loopne
mov
fdiv
ljmp
jmp
sti
pmulhuw
pop
leave
in
call
cmc
mov
mov
ljmp
fdivr
in
add
rcl
in
into
add
repnz
mov
in
mov
hlt
in
ljmp
hlt
int3
testb
add
shl
in
fnsave
int
jmp
out
cmc
mov
aad
cld
call
enter
rcl
in
loopne
stc
shl
out
cli
rcr
fnstcw
loope
aad
add
fmuls
jmp
mov
out
lret
mov
fsub
loop
out
cli
add
cmc
fiadds
out
pop
ret
test
lds
ret
out
cmc
or
enter
add
fnsave
in
mov
fstpt
ror
mov
jmp
leave
ljmp
in
aad
cmc
in
call
idivl
cld
hlt
add
or
add
or
out
mov
clc
mov
repz
clc
icebp
add
stc
dec
or
shlb
out
fcmovbe
lock
loopne
out
repz
jmp
out
add
adc
mov
iret
mov
enter
in
neg
mov
out
hlt
neg
in
add
add
xlat
hlt
leave
add
mov
jmp
fdivr
add
icebp
repnz
shr
enter
roll
jecxz
repnz
loopne
ljmp
aam
int3
lock
fstp
test
rcr
in
xlat
sar
clc
std
loop
pop
fdivr
ljmp
or
lods
iret
lret
in
xlat
sti
sarl
mov
mov
add
enter
jecxz
mov
in
jmp
stc
mov
ljmp
loop
loop
out
fcmovu
mov
call
call
repnz
lock
aad
mov
clc
add
loope
in
sarl
mov
mov
clc
incl
mov
mov
lret
ftst
lret
add
in
mov
mov
int3
mov
ljmp
rolb
std
hlt
ljmp
add
fdivrs
lods
enter
lock
jmp
aad
fldl
cmc
loopne
faddp
lret
adc
in
fnstenv
mov
ret
sar
fucom
iret
loop
ljmp
xlat
imul
hlt
enter
int
idivb
or
ror
pop
iret
iret
in
out
in
mov
ljmp
add
in
mov
mov
cli
in
int3
cld
push
repz
out
out
cli
loop
rcl
mov
out
aam
loop
sar
ret
stc
mov
or
repnz
out
out
cmc
out
mov
add
int3
loope
aam
add
faddl
jmp
clc
stc
fcmovu
push
int3
icebp
leave
faddp
fsub
jmp
mov
aad
enter
clc
aad
call
movhlps
loopne
lret
icebp
ret
mov
mov
jecxz
clc
inc
mov
add
mov
lods
repnz
sarl
mov
in
sti
lock
out
add
push
ret
lods
enter
cli
sti
rcr
stc
shl
add
into
clc
sar
aad
sti
in
push
or
shl
loop
jmp
sti
sarl
mov
fxch
leave
add
ret
mov
cmc
xlat
mov
int3
jmp
cld
repz
incl
shr
jmp
jmp
mov
mov
mov
rcl
cmc
div
fcmovbe
sti
clc
fadds
aam
fmuls
fucomi
add
add
ljmp
call
mov
ljmp
repnz
inc
push
repz
out
in
sti
out
incb
leave
inc
mov
or
incl
jmp
call
in
jmp
out
shr
hlt
in
int3
mov
out
out
stc
neg
fcmovne
add
call
out
lret
sti
mov
out
sar
mov
fildl
loope
pop
stc
out
rcl
test
lret
aad
stc
sarb
iret
mov
or
jmp
lret
loopne
mov
jmp
mov
out
mov
mov
mov
fucomip
aad
leave
in
into
sti
int3
ror
enter
jmp
shr
out
lret
mov
in
mov
in
stc
int3
enter
test
mov
lods
lods
hlt
repnz
shr
sti
add
mov
sti
cld
out
add
mov
iret
ljmp
out
sti
out
repnz
add
fldl
fmul
fmull
mov
leave
lret
int3
in
cmc
int
mov
iret
repnz
sar
loope
leave
in
stc
call
mov
shl
iret
jmp
incl
in
jecxz
out
out
ret
decb
out
bts
mov
aad
mov
sarl
lret
loop
stc
scas
loopne
mov
mov
ror
aam
lret
aam
add
std
loope
in
fcmovnu
call
in
lret
ret
cmc
into
mov
fucomi
fmul
lret
clc
ret
hlt
cmc
out
add
in
clc
int
div
in
mov
jmp
lret
mov
hlt
int3
leave
xlat
rcr
mov
jmp
fsubr
loope
fsubrs
lret
call
aad
repnz
mov
cld
fsub
ljmp
add
ljmp
not
mov
dec
jmp
hlt
mov
stc
aad
or
lods
in
test
icebp
mov
iret
mov
add
test
std
pop
enter
int3
enter
loopne
shlb
out
aad
icebp
fcomp
icebp
roll
rol
mov
jmp
shr
jecxz
in
in
mov
mov
cli
in
xlat
pushl
aad
cld
inc
add
les
repz
enter
bnd
repz
iret
shr
hlt
std
ret
loope
movl
call
aam
jmp
out
std
mov
sar
repz
in
hlt
clc
call
decl
ror
in
out
mov
sti
aad
cli
fucomp
add
pop
add
lock
push
fcmovb
add
test
mov
mov
les
mov
rolb
cld
test
test
out
test
mul
cli
lret
mov
aad
int3
mov
rcr
clc
or
in
leave
repnz
int3
repnz
xlat
mov
jecxz
std
in
fnstcw
leave
int3
out
in
rcl
ljmp
fsubp
mov
filds
pop
clc
or
add
mov
leave
mov
mov
aam
repnz
shl
aad
fdivp
out
fisttpl
add
pushl
loop
mov
fcmovne
lret
fildl
out
cli
in
xlat
fadd
xlat
hlt
cli
in
or
out
in
enter
mov
fnsetpm(287
aam
mov
fucom
ret
lds
fcmovnbe
in
jmp
loopne
out
xlat
test
mov
rol
mov
aad
ljmp
add
cli
out
lret
mov
into
int
int3
leave
stc
fxtract
fdiv
lds
mov
jecxz
in
lret
in
out
lret
mov
int
shr
shl
aam
iret
mov
fdivr
lret
aam
out
loope
or
lret
iret
mov
mov
repnz
fidivrs
rorb
or
cld
in
into
stc
repz
test
lods
lods
mov
enter
clc
aam
mov
push
aam
fildl
jmp
shr
lret
sar
shl
mov
call
xlat
aam
cld
cld
in
call
lret
shl
shl
mov
not
lds
lock
lock
lret
push
clc
std
mov
ret
iret
out
loop
ret
lods
int3
mov
fxch
add
aam
jmp
mov
lret
les
mov
imulb
inc
fdivrp
loopne
in
loopne
stc
or
push
movb
mov
lock
out
aad
sti
mov
testb
add
rolb
out
rcr
fsts
mov
ljmp
fcmovu
iret
icebp
shl
icebp
fadd
shl
jecxz
mov
jmp
int3
fidivl
out
mov
in
add
loope
or
loope
jecxz
int3
lods
ret
fmul
repnz
fstpt
int3
ret
loopne
pop
cmc
clc
loope
or
fimuls
mov
in
call
ljmp
jmp
shl
fcmovne
fadd
out
add
shrb
aad
mov
jmp
out
repnz
std
lds
icebp
mov
lods
lds
iret
xlat
in
clc
std
std
pop
hlt
push
repz
icebp
add
clc
fisttps
into
lret
lds
fistpll
shr
shl
add
cli
flds
or
jmp
in
repz
lret
rcl
mov
rcr
fmul
stc
mov
lret
push
fcmovnbe
fdivrl
iret
out
lret
sarb
mov
cli
mov
std
call
out
mul
ret
enter
aad
cmc
jmp
mov
lret
into
loop
rcr
test
mov
int
stc
ror
aad
sarl
rcr
rcl
repnz
in
int
int3
xlat
fcomp
aad
mov
in
add
shl
neg
hlt
flds
hlt
add
out
lods
icebp
shll
iret
fcmovbe
repz
sar
div
cmc
loope
in
shl
hlt
enter
fildll
mov
in
into
testb
iret
fstpt
lret
jecxz
loopne
lret
into
or
scas
out
lock
ret
mov
loopne
clc
mov
cld
shl
fucomp
ret
lock
or
testl
lods
lods
out
xlat
mov
icebp
enter
lret
test
mov
out
aad
sar
sti
loope
loope
mov
shl
fdivs
cli
pushl
rcl
rcr
in
add
in
fdiv
int
mov
mov
add
pop
int3
int3
lds
sti
cmc
out
out
ljmp
div
stos
lret
jmp
mov
fsub
in
add
leave
or
or
ljmp
repnz
in
mov
clc
rol
rcl
in
rolb
sarl
out
scas
shl
shl
cli
aad
cmc
std
ret
ret
rcr
ljmp
jmp
hlt
in
mov
cli
into
sti
xlat
shl
stc
loop
mov
faddp
loope
repnz
mov
lods
fcmovb
mov
repz
mov
lock
push
cli
add
sti
into
int3
int3
sarb
hlt
ror
mov
jecxz
jecxz
jecxz
mov
out
or
jmp
test
shl
aad
cmc
imul
mov
pop
std
ret
push
std
incb
lods
shlb
aad
out
leave
mov
leave
mov
out
or
jmp
out
in
repnz
mov
lods
jmp
into
cli
stc
sti
vpor
add
idivl
repnz
aad
push
loop
loope
mov
out
shl
std
std
mov
fidivrl
call
enter
call
loopne
shl
mov
cld
aad
add
ret
fsubr
jmp
cli
mov
ljmp
mov
ret
loopne
mov
std
aam
add
test
mov
jmp
aad
mov
fst
push
fucom
lret
filds
dec
rol
lock
rcl
leave
mov
shl
mov
or
or
push
ret
loopne
scas
in
repnz
shll
mov
ret
fmul
mov
icebp
xlat
out
icebp
mov
mov
mov
in
clc
mov
call
stc
add
out
fsubrp
lret
add
xlat
mov
lret
lret
rcl
mov
mov
sarb
in
invd
hlt
in
sti
loop
into
mov
repnz
fcmove
int
fst
leave
aam
loope
jecxz
jecxz
aam
in
movl
out
mov
fxch
rcl
xlat
ret
aam
into
lock
clc
jmp
jecxz
ficoms
iret
mov
lods
lods
test
in
out
std
ret
shl
mov
pop
hlt
into
or
lret
mov
shll
repz
stc
sti
fmul
roll
lret
out
aad
or
shr
out
mov
mov
stc
lret
add
loope
cli
pop
repz
fnop
ffree
push
out
add
rcl
enter
fcmovnbe
jmp
lret
mov
aad
icebp
fsubrp
fdiv
jmp
ljmp
mov
jmp
stc
ljmp
out
std
lock
push
pop
or
repz
xlat
loope
aam
mov
repnz
mov
mov
loopne
testb
or
out
jmp
xlat
mov
mov
push
mul
add
call
adc
lret
ret
not
shl
rolb
fsubrp
add
cld
jmp
in
enter
repz
test
leave
int
jmp
neg
repz
lock
ret
lret
in
cld
ljmp
loopne
in
int3
call
iret
in
xlat
std
jecxz
fildl
or
in
pop
or
lock
ret
mov
in
hlt
fcom
sarl
shl
out
pop
out
cmc
iret
ficoml
into
mov
rol
in
int
mov
rcl
jecxz
push
sar
cmc
hlt
pop
loop
push
pop
add
repz
icebp
in
rcl
test
mov
int
aam
push
loope
out
fmull
ror
mov
imul
imul
fcmovne
clc
lret
stc
hlt
repnz
idivl
aad
stc
loopne
cmpsb
test
repz
fadd
out
into
fsub
int3
std
lock
cli
add
out
leave
fdivrl
mov
mov
std
sar
rcr
ret
ret
fdivp
in
out
mov
aad
jmp
repz
jecxz
mov
fcmovnb
in
add
clc
int3
leave
repnz
mov
lret
leave
shr
mov
leave
repz
aam
movl
mul
add
fcmovnu
out
repz
into
out
lds
in
fdiv
mov
in
loop
ljmp
sar
lret
lock
loop
sarb
fcmovu
xlat
fdivp
into
shl
in
add
fst
pmulhw
add
scas
mov
lret
mov
into
idiv
into
mov
mov
mov
repnz
out
test
leave
repnz
repnz
in
test
idivb
in
sarl
ljmp
stc
clc
fsub
jecxz
pop
sar
std
lret
fimull
leave
hlt
lds
adc
enter
jmp
xlat
out
xlat
roll
add
or
in
call
mul
mov
out
out
cli
int3
iret
cmc
idivb
mov
sti
out
aam
fdivp
shr
fdiv
in
int
dec
aam
fdiv
test
fdiv
fcmovnb
test
fsub
mov
jmp
mov
cli
mov
loopne
fsubrp
lret
leave
or
test
loop
cli
leave
jmp
fscale
add
cmc
repnz
stc
mov
add
rcl
int3
lods
test
out
cmc
aad
cld
fidivrs
into
cli
pop
or
hlt
fcomip
jmp
in
mov
rcl
enter
leave
clc
cli
clc
mov
aam
fcmovb
ffreep
fcos
adc
shl
shll
in
mov
jecxz
loope
mov
sti
mov
std
jecxz
int
mov
fcmovnb
mov
repnz
add
or
in
hlt
int
rcr
lods
lods
loop
loop
clc
mov
mov
fld
rorb
add
stc
or
fucomip
lods
lods
jecxz
aad
mov
sar
icebp
repz
fcomi
repnz
fldl
lock
out
in
psubsw
lret
test
jmp
rcr
ror
ret
div
out
or
jmp
out
test
clc
mov
fst
fiadds
cmc
pop
loopne
leave
iret
in
adc
out
fnsave
mov
int
sar
aad
jecxz
std
add
stc
fucomip
or
int3
add
sarb
neg
out
fucomi
shl
mov
mov
rol
idiv
xlat
xlat
lret
test
mov
mov
add
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
cmpl
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
mov
jmp
mov
insb
icebp
je
pop
rcrb
inc
jp
add
mov
mov
cmc
rcl
mov
in
out
sarb
loope
fisttps
mov
jecxz
out
out
mov
rcl
rcl
out
loop
jecxz
les
jmp
out
mov
loopne
cmc
lret
in
ror
cld
fstp
repnz
cli
fdivp
jmp
pop
push
cmc
movl
ffreep
mov
call
repnz
cmc
call
push
idiv
cmc
rorl
sar
fchs
out
fdiv
xlat
loop
cmc
into
divl
shl
fchs
div
neg
cli
ljmp
rcl
scas
mov
rol
test
into
rcl
ljmp
filds
rolb
cld
or
int
adc
jmp
mov
mov
mov
mov
loope
shl
cli
int3
loopne
add
movl
mov
mov
out
hlt
mov
mov
clc
incl
loopne
add
out
mov
out
or
int
int
loope
mov
in
mov
fmul
int3
mov
int3
pop
loope
decl
mov
mov
shr
call
into
repnz
sar
int
add
lret
or
out
vpsraw
shr
ror
enter
add
fcmove
in
lock
push
decl
clc
add
rcl
cmpsb
test
loop
rcl
vpmovmskb
jecxz
clc
mov
fcmovnbe
enter
fcomp
ljmp
lret
les
out
out
rcr
in
fdivrp
clc
shl
add
repnz
ret
fisubrs
in
enter
aam
fdivrp
pop
loope
lock
testb
shl
cld
or
call
out
mov
ror
leave
rcr
fdivr
cli
fadd
in
sar
loopne
add
jmp
add
scas
mov
out
test
mov
call
loopne
fistpll
push
icebp
fnstcw
mov
out
out
mov
rcl
icebp
loope
ror
fiadds
adc
fucomip
mov
test
iret
out
fcom
mov
in
out
rolb
add
sti
in
lret
add
jmp
div
jecxz
repnz
fmul
icebp
mov
pop
jmp
fucomi
push
or
fcmove
icebp
shl
xlat
loopne
cmc
leave
leave
rol
std
jmp
fcmovbe
icebp
stc
into
fdivr
hlt
hlt
in
loope
cli
aam
jmp
xlat
divl
mov
repnz
aam
aam
out
rcl
fmulp
fiadds
fcmovne
add
shll
lock
fcmovnu
pop
repnz
hlt
hlt
ret
bswap
or
lret
jecxz
fcomi
xlat
aad
aam
div
cli
repnz
out
rcr
ljmp
enter
mov
int3
fcomp
mov
mov
in
testl
aad
fmul
or
fdiv
mov
mov
out
into
clc
shl
pop
loopne
shl
loop
cmc
decl
add
mov
loopne
aam
mov
fadds
lock
mov
xlat
mul
fcomp
push
iret
lret
int
in
ret
repnz
sti
lret
jmp
in
hlt
sarb
loop
in
lret
lods
fbstp
sti
mov
ljmp
iret
rcr
mov
inc
or
ret
in
ret
icebp
enter
lret
mov
rcl
rcl
clc
jmp
mov
enter
mov
lret
rcl
mov
fucomp
loop
or
aad
jmp
loope
lret
loop
ret
xlat
leave
fnop
iret
mov
out
icebp
pop
mov
rcr
leave
cli
mov
iret
scas
rol
aam
mov
les
dec
shl
hlt
repz
aam
in
fisttpll
out
mov
shll
into
lret
mov
shl
fadd
clc
enter
call
lret
clc
cli
leave
out
jmp
in
out
cmc
loop
shl
aad
jecxz
std
add
shll
aam
rcl
mov
repnz
ret
out
ret
out
fadd
jmp
cmc
xlat
ror
in
repz
mov
stc
mov
or
out
mov
ljmp
stc
std
fcmovu
shl
cmc
add
in
in
or
loopne
repz
shl
mov
rcl
into
cld
cli
mov
cli
aam
out
cld
loop
adc
call
into
mov
in
shl
lret
mov
loope
ret
aam
jecxz
ljmp
repz
jmp
stc
mov
int3
rcr
mov
rcl
aad
out
loopne
lods
in
repnz
loop
loope
in
fsubr
ret
mov
out
add
cli
iret
cmc
int
fstp
call
out
repnz
rcr
mov
stc
sar
rcr
add
fcmove
call
fcomp
jmp
out
iret
into
mov
xlat
mov
aad
fnstcw
add
decb
shr
ljmp
clc
fcmovne
shr
mov
repz
add
lock
fucomi
iret
int3
into
shrl
idiv
rcr
repnz
fdiv
hlt
fstp
loopne
loope
in
iret
loop
in
loope
in
rcr
leave
mov
leave
fstpt
icebp
fcmovnu
cld
std
fcmovbe
jecxz
enter
jmp
leave
in
repnz
repnz
int3
clc
cld
mov
testl
pop
add
ffree
in
scas
out
repz
cli
fsubrp
repnz
in
cld
cli
ret
sarb
hlt
adc
loope
out
icebp
imul
out
hlt
mov
mov
jecxz
out
aam
stc
vmload
out
out
ret
mov
out
mov
idivb
loope
stc
fstp
sti
shl
pop
fucomi
loope
ljmp
loop
fcmovu
shl
lret
fiadds
aam
icebp
jecxz
cmc
clc
sti
ljmp
lods
icebp
cmc
aam
rcl
mov
lock
mov
hlt
shl
rcr
enter
fisubrs
hlt
sti
icebp
shl
sti
fcmove
call
mov
add
lret
bnd
lods
out
divl
std
sar
repz
loop
fcomi
ret
jmp
out
fiaddl
repnz
loop
fst
mov
add
in
mov
leave
iret
repz
in
movsl
mov
shlb
ljmp
add
ret
ljmp
mov
aad
jmp
repnz
div
clc
mov
roll
or
stc
ret
iret
mov
fsub
ror
pushl
mov
ret
add
add
aam
or
fsubp
mov
fidivl
icebp
clc
iret
ljmp
fdivr
or
testb
out
clc
int
ret
rcl
int
cmc
mov
mov
fadd
fsub
hlt
out
mov
stos
sarb
int3
fcos
icebp
clc
repz
out
test
lock
fcmove
faddp
add
fld
out
test
in
xlat
hlt
std
clc
jmp
mov
aad
add
sti
in
fmul
jmp
out
loope
stc
int
jmp
mov
cmc
shr
mov
sti
out
mov
lret
call
lock
mov
shl
call
std
add
pop
fnclex
add
lods
call
mov
sti
call
fcmove
ror
out
ret
mov
call
mov
aad
leave
jmp
icebp
push
stc
fsubrp
aad
sti
stc
ret
or
call
repnz
lods
mov
imul
div
out
fmul
shll
jecxz
ret
pop
loopne
stc
aam
loop
mov
int
ljmp
fsubr
fdivr
icebp
add
in
decb
add
or
rorl
repz
repz
icebp
mov
in
sti
rol
repnz
call
push
adc
jecxz
in
mov
mov
mov
mov
stc
cld
call
add
lret
shl
ror
mov
ror
mov
lret
mov
iret
repnz
fsub
out
hlt
fdivr
loopne
jmp
mov
leave
mov
idiv
fcom
int
loope
testl
fdivr
leave
jmp
sar
cmpsl
test
lods
cmc
out
stc
cli
icebp
mov
idiv
cld
xlat
into
xlat
aam
clc
out
jmp
lds
adc
jecxz
mov
enter
fucomi
int3
std
cld
add
fcmovnu
push
push
in
call
ljmp
shr
sti
fucomip
ret
stc
add
jecxz
fildl
fprem1
fsub
iret
std
int
ljmp
in
iret
cmc
mov
aam
mov
aad
stc
out
fsub
add
out
leave
shl
ljmp
xlat
mov
in
rcl
in
incb
jmp
icebp
mov
ljmp
in
ljmp
rcl
roll
add
hlt
leave
or
mov
repnz
shl
mov
cmc
not
mov
cld
iret
add
jecxz
mov
test
aam
mov
hlt
mov
std
out
not
out
fsubr
push
push
leave
or
lock
mov
in
std
iret
clc
iret
out
shl
jmp
add
call
rcr
mov
icebp
mov
aad
repnz
cld
cli
sar
out
aam
rcl
fcmovnb
jmp
or
add
out
loopne
into
ret
out
mov
lds
mov
mov
out
add
in
mov
loopne
mov
mov
repnz
fcomp
fldln2
icebp
in
aad
add
repnz
mov
int
ljmp
idiv
cld
icebp
into
repz
shl
ret
fildl
mov
loop
fcmovnu
clc
iret
mov
rcr
add
icebp
sar
mov
fisttpll
lods
out
ret
leave
jmp
mov
repz
lret
loop
xlat
shr
shl
hlt
fucomp
jmp
mov
call
iret
fscale
out
in
sti
mov
push
fcmovne
or
clc
sti
add
stc
out
out
neg
scas
into
mov
rol
out
mov
out
add
fcmovnb
or
add
pop
filds
int
mov
shll
hlt
shr
cld
fdivr
repz
std
ret
cmc
aad
or
fdiv
fnstsw
ror
mov
int3
mov
add
icebp
clc
sti
std
add
repnz
in
mov
call
mov
fptan
in
into
shl
or
div
pavgw
roll
mov
repz
sti
mov
aad
fcmovb
rcr
icebp
loop
pop
fmuls
loopne
repz
aad
cli
shlb
fucom
fistpll
cmc
add
lret
int3
or
iret
out
movsb
lods
in
in
cli
mov
xlat
stc
out
mov
in
add
out
add
stc
or
out
loope
lock
scas
leave
mov
mov
out
mov
fdiv
out
add
enter
fsubr
shr
call
aad
add
mov
fcmovnb
add
xlat
lret
aad
mul
loop
in
ror
lret
scas
out
cli
loopne
aad
mov
faddp
in
sti
pop
aam
jmp
add
mov
ror
stc
out
xlat
cld
fstpt
fildl
push
cli
or
ret
add
or
scas
out
jecxz
mov
rcl
mov
in
mov
fdivp
fchs
mov
add
in
add
shr
vaddsubpd
in
hlt
xlat
mov
fdiv
call
sar
lock
pmulhw
cld
in
out
loope
out
call
in
cmc
repnz
cli
fnclex
add
cld
std
out
out
out
mov
mov
lods
rcl
lods
int
mov
fmul
mul
jecxz
cmc
call
aad
out
out
or
add
lods
in
shrb
enter
std
cmc
mov
flds
std
add
jecxz
iret
call
lret
mov
jmp
mov
test
or
add
stc
out
scas
lods
mov
enter
mov
lock
mov
in
loopne
repnz
call
int3
or
loopne
test
mov
lock
std
fdivr
fldln2
repnz
in
lock
sar
add
add
cmpsb
int
rcl
out
in
mov
jmp
mov
add
lret
in
stc
jmp
fsubp
repnz
mov
sti
fcmovu
aam
lret
sarl
mov
stc
push
fmuls
lret
jmp
in
out
ret
aam
shl
sar
aad
add
testl
rol
loop
jecxz
mov
in
out
rcl
mov
mov
fcmovnb
loopne
call
roll
mov
scas
out
loopne
std
sar
fdivr
fsubp
loop
loop
decl
ljmp
repnz
repz
lods
repz
out
cld
ror
add
add
loop
leave
jmp
loopne
call
mov
in
icebp
repnz
call
mov
hlt
psubsb
cmc
or
add
lret
mov
fcmovne
lret
int
add
xlat
add
aam
lock
idiv
add
lret
out
shll
mov
mov
ret
add
sti
out
add
por
cld
ljmp
in
loope
jmp
call
fdiv
in
add
mov
mov
mov
mov
fxtract
icebp
add
add
fucomp
fninit
out
icebp
mov
mov
call
cmc
fadd
cli
loop
shl
push
stc
cld
add
out
out
scas
scas
in
mul
fldt
roll
out
out
ret
hlt
rolb
dec
pop
ljmp
in
fcmovnbe
hlt
icebp
mov
in
jmp
repnz
ret
std
add
add
sti
lret
in
call
mov
out
shr
fcmovbe
out
shr
sarl
jmp
jmp
fnstcw
test
sarl
mov
shr
roll
fucom
xlat
add
loope
call
out
shl
jecxz
scas
jecxz
scas
mov
repnz
icebp
jecxz
sarb
jmp
jmp
int
rep
in
int
lret
mov
pushl
jmp
add
in
std
std
pop
mov
mov
mov
in
ljmp
loope
hlt
cli
mov
or
icebp
lods
out
in
in
scas
in
fst
add
in
jecxz
add
repz
cld
ljmp
fsub
jmp
leave
jmp
loope
cmc
cli
fldl
fcmovbe
icebp
lret
stc
add
out
int
shr
mov
loop
test
call
pop
loop
cmc
repnz
ret
inc
out
push
fxch
ljmp
call
mov
repz
add
aam
push
loop
in
ret
shl
mov
aad
stc
mov
fincstp
loopne
fsubr
in
stc
loop
paddsw
loopne
mov
out
out
icebp
mov
out
loop
loop
or
or
add
shl
ret
leave
out
call
loop
rcr
loope
add
hlt
or
cld
jmp
mov
leave
call
icebp
mov
mov
in
rcl
mov
std
add
iret
push
adc
in
mov
in
mov
icebp
ljmp
cli
ret
stc
into
in
lock
add
aad
or
adc
jmp
iret
leave
mov
rcl
in
fxch
cmc
fdivrp
in
jecxz
neg
push
jmp
loop
mov
jmp
loop
in
in
leave
in
in
ljmp
push
out
loop
aad
clc
or
or
enter
xlat
in
shl
mov
mov
mov
clc
push
in
ljmp
loopne
into
out
jecxz
repz
out
repnz
loope
jecxz
in
shl
decb
add
sar
fxch
enter
out
stc
mov
imul
mov
int3
fisttpll
out
sti
add
leave
lret
fucomip
shll
out
shl
int
loop
mov
ret
rcr
fcmovnbe
shl
in
add
fdivrp
in
shr
shl
aad
fxam
out
mov
ret
lock
aam
ffree
or
fidivrs
loopne
mov
jmp
pop
mov
faddp
into
fmul
in
in
movsl
jmp
rcl
fucomip
clc
loop
loop
aad
add
sti
ljmp
or
in
out
rcl
out
leave
loope
clc
fstp
jecxz
shl
mov
lret
lret
mov
loopne
leave
cld
clc
add
mov
aad
ljmp
push
jmp
repnz
lods
int3
ret
mov
stc
repz
mov
fld
ljmp
out
in
mov
ljmp
fcomi
sarb
sar
fsubrp
or
in
fstp
repnz
scas
int3
into
mov
sti
fdivp
fiadds
ret
ret
lds
shl
test
out
loopne
scas
mov
mul
repnz
aam
in
mov
cld
loop
incb
jmp
mov
rcr
fcmovne
out
sar
clc
int
repnz
les
bswap
loop
ror
repz
cli
fdivr
loop
stc
pop
add
sti
xlat
or
std
jecxz
out
ffree
ljmp
lods
lret
hlt
rcr
aad
lock
loope
fcmovb
loop
loop
call
stc
loop
rol
out
shlb
call
lock
flds
jecxz
fmul
pop
ret
jmp
out
lock
mov
leave
repz
mov
jecxz
in
push
mul
rcr
loopne
fdivr
enter
lods
into
lret
mov
mov
sar
int3
shr
aam
mov
decl
ror
shl
lods
repnz
lret
repz
in
stc
cld
clc
jecxz
icebp
int3
or
add
std
or
shrb
stc
out
mov
stc
out
mov
jecxz
incl
fldl2t
out
enter
vpsubsb
lret
rcl
iret
not
lret
icebp
mov
lock
out
or
add
loop
fucomi
int
test
leave
repz
loopne
aam
shl
lret
xlat
aam
ret
add
enter
shlb
shll
aam
iret
cli
ret
aad
add
sti
loopne
flds
in
in
vcmppd
mov
test
in
repz
in
jecxz
loope
cli
decl
aam
clc
mov
loopne
lret
mov
call
repnz
iret
mov
std
stc
shl
add
push
or
loope
shl
mov
mov
int
icebp
jmp
add
sti
add
hlt
lock
enter
push
mov
in
in
lret
ljmp
icebp
in
add
pop
loop
loopne
in
or
mov
test
int
shl
sti
iret
repnz
add
fincstp
faddl
ret
loopne
or
icebp
int3
mov
rcr
jmp
call
testb
call
in
push
aad
loope
lret
enter
sti
loop
cld
cli
neg
roll
cli
loopne
fmuls
or
rol
mov
loopne
hlt
mov
leave
mov
add
cli
hlt
lock
out
or
fxch
mov
ljmp
ret
loop
mov
idiv
add
fmulp
vpmulhuw
rol
mov
shr
in
ror
repz
in
add
fsubrp
add
shl
enter
int3
out
jmp
mov
icebp
xlat
out
or
lds
push
or
jmp
aad
iret
cmc
mov
fdiv
ret
clc
aad
rcr
loop
or
in
add
enter
int3
mul
icebp
ror
shlb
stc
jmp
in
lret
push
push
add
repz
test
shll
mov
repz
xlat
add
fiadds
in
mov
mov
jmp
fsubr
mov
in
fidivrs
lock
fucom
out
add
in
enter
mov
fldln2
hlt
sarl
xlat
movb
or
add
jmp
lret
lret
repz
mov
sarb
fidivrl
fcmove
add
stc
ljmp
lret
aam
mov
mov
fstpt
int3
roll
in
jmp
int
rcr
mov
loop
test
mov
loopne
clc
add
rcr
or
loopne
fsubr
in
out
in
mov
mov
shl
add
fcmovbe
enter
or
loopne
fadd
mov
out
int3
jmp
cli
cld
xlat
shl
filds
lret
fcmovbe
lret
div
cmc
div
mov
repnz
out
sar
aam
cld
out
sti
movb
out
lds
fisttps
test
out
mov
mov
fcomi
call
push
or
out
jmp
iret
ljmp
fsub
fsubp
mov
add
lret
out
in
jecxz
repz
fdivl
mov
fcos
repz
add
or
in
add
out
in
les
sti
mov
enter
aad
aam
sarl
in
sti
pop
add
add
stos
fsubrp
in
jmp
mov
mov
loope
sti
clc
fprem1
add
div
std
fsubr
or
ret
repz
ror
repnz
hlt
fstpt
add
in
into
add
fcmovnu
or
cld
pop
or
jecxz
int3
jmp
loope
ror
sti
jmp
mov
repz
jecxz
rol
aam
fdivrl
jmp
shl
lret
mov
iret
out
int3
rol
cli
repz
rcl
neg
add
loop
mov
shlb
call
mov
ret
jmp
add
repz
mov
hlt
lock
fdivr
lret
mov
mov
xlat
rorl
pop
clc
jmp
cmc
mov
mov
lock
mov
int
enter
or
jmp
iret
or
icebp
mov
lock
loop
sti
add
incb
fcomp
add
add
out
mov
jecxz
into
aam
mov
int
clc
fiaddl
rorb
hlt
jmp
in
cmc
repnz
mov
lret
fdiv
int
in
in
cli
out
jmp
or
out
lods
enter
jmp
stc
sti
jmp
into
mov
hlt
add
jecxz
fdivrp
stc
psrlq
fadd
loop
stos
in
jmp
mov
mov
or
jmp
jmp
into
fsubr
shl
mov
mov
jmp
rol
repnz
fldl
mov
enter
out
jmp
aam
mov
add
in
in
fxam
or
enter
rol
mov
shl
mov
stc
in
fsubp
jmp
fsubr
add
add
lret
lret
in
out
out
lods
mov
fdivr
icebp
sarb
mov
add
fmul
fisttps
repz
in
ljmp
mov
mov
mov
std
mov
loope
aam
or
into
ffreep
lock
out
std
clc
shl
mov
shl
les
leave
fucomi
fcmovne
jmp
icebp
mov
mov
in
repnz
mov
jecxz
rcl
int3
ret
mov
jmp
int
leave
mov
mov
shlb
cmc
rcr
fadds
aam
jecxz
shlb
loop
stc
push
mov
call
div
fcmovnbe
lret
out
iret
mov
jecxz
enter
sar
cmc
call
loopne
loopne
les
add
adc
mov
mov
shl
lret
icebp
sarl
shl
shl
add
cli
add
fistpll
repz
int3
enter
cld
sti
flds
xlat
div
cld
in
ret
lret
fcomi
or
add
fdivrp
shr
mov
call
jmp
shl
sarl
hlt
mov
mov
rep
lods
leave
shl
imull
fst
cld
add
mov
ljmp
in
int
cmc
ret
leave
mov
fsqrt
fcmovnu
aam
mov
fiadds
out
or
imul
lret
cli
loopne
out
in
mov
leave
jmp
mov
shl
in
out
rorb
call
leave
add
jmp
loope
rol
shl
out
fmulp
mov
add
in
jmp
in
add
jmp
mov
repnz
aad
ror
cli
out
rcl
mov
ret
add
or
loope
std
out
or
lds
rcl
xlat
mov
cld
pop
mov
jmp
fdivr
out
push
mov
repz
out
fidivl
icebp
in
fcmovu
rcr
loop
add
out
call
out
mov
mov
aad
ror
out
out
ljmp
shl
add
hlt
out
push
out
fdivp
out
ret
cmc
loop
test
rol
rcr
call
out
lock
cli
stc
movl
iret
mov
iret
jmp
enter
ret
std
loope
std
fdivp
std
jecxz
dec
call
lds
stc
mov
std
aad
inc
std
fiadds
in
iret
int
out
in
lret
into
enter
mov
ror
fdecstp
clc
cld
out
repz
fsub
std
stc
out
jecxz
in
int3
fnsave
cmc
in
out
mov
mov
cli
lock
iret
jmp
loopne
lods
leave
cmc
out
in
lock
ret
icebp
stc
fcmovbe
fsubp
rol
lret
lret
or
ljmp
mov
imul
out
loop
shr
hlt
incb
fsubp
sti
les
clc
xabort
mov
mov
mov
hlt
mov
fcomp
add
fisttpl
add
or
not
out
jmp
repz
enter
div
ffree
fmuls
jmp
add
fmul
repnz
ret
lock
mov
loop
vpaddsb
add
lock
loop
add
jmp
into
jmp
lret
jmp
neg
std
in
mov
icebp
jecxz
icebp
psubq
stos
mov
rol
divl
mov
roll
std
add
neg
aam
pop
leave
mov
hlt
fmul
mov
mov
sar
repnz
hlt
or
in
fisttpll
clc
pop
jmp
loopne
xlat
leave
lret
out
fisubrl
hlt
shr
fucom
mov
jmp
or
ret
in
in
scas
shr
fidivrl
jmp
mov
mov
in
add
push
add
leave
not
clc
mov
call
add
lock
fsub
repz
enter
divb
fistpll
add
shl
add
sti
add
add
scas
test
mov
cli
clc
in
faddp
rol
ljmp
lret
scas
mov
sarl
cld
fcomip
clc
std
add
out
out
add
or
stc
shrl
shrb
mov
repnz
fcmovnb
add
ret
ret
in
enter
shlb
out
mov
in
mov
sarb
lret
or
mov
scas
mov
test
rcl
in
ret
leave
mov
mov
or
push
loopne
in
mov
jmp
mov
mov
add
or
add
fadd
pop
int
ror
repnz
mov
iret
out
xlat
repnz
int
fldln2
cld
loop
sti
shl
loop
in
pop
shll
mov
aad
clc
shl
ror
into
cmc
mov
add
jmp
fucom
in
mul
test
lret
sarb
stc
fdivr
add
lret
in
or
ret
lds
mov
int
lret
std
mov
push
add
add
shl
fcmovne
dec
repnz
cmc
ljmp
mov
cld
aam
in
in
jmp
out
jmp
iret
scas
shr
mov
ret
add
out
fldl2e
stc
fxch
int
in
out
in
loope
shl
mov
leave
hlt
flds
mov
or
in
leave
mov
shl
fcmovne
in
sar
rcl
mov
push
les
filds
into
fucomip
rol
out
mov
call
xlat
fmulp
int3
fcmove
aad
rcr
aad
jmp
lret
iret
out
adc
iret
ror
mov
jmp
lods
jmp
int3
call
fcom
neg
add
push
loop
lret
add
out
mov
mov
out
icebp
aad
int
std
jmp
clc
into
sti
fcmovnbe
repnz
xlat
out
add
push
out
in
lods
rol
shll
mov
loopne
add
lock
fcomp
or
out
les
into
loope
mov
jmp
iret
fcmovnbe
mov
aad
enter
fnstsw
in
enter
stc
into
call
std
fadd
sar
lock
fadds
std
jmp
enter
mov
aad
mov
ljmp
clc
std
mov
add
or
ljmp
sarl
fcmovbe
mov
lock
vcvtdq2pd
jmp
lret
scas
shrl
into
cli
mov
mov
add
ror
add
or
dec
shl
mov
lods
out
int
div
lret
cli
ret
out
add
out
add
mov
fld
or
in
ret
jmp
shrb
aam
xlat
idivb
add
clc
loope
call
cmpsb
shl
in
ror
aad
mov
repnz
enter
add
cmc
in
iret
add
leave
cli
call
scas
lods
int
ror
scas
test
out
int3
jmp
mov
in
in
stc
sti
or
loopne
adc
in
in
repnz
aam
fadd
mov
fucomip
mov
roll
push
hlt
std
fimuls
ljmp
aam
mov
in
loop
mov
icebp
loop
pop
or
mov
lret
mov
mov
add
in
aam
lret
add
ljmp
out
test
sarb
mov
cli
shl
faddp
out
push
cld
fcomp
jmp
mul
lret
fxch
loop
fcmovbe
out
jecxz
rcl
or
out
stc
call
mov
mov
leave
loop
mov
stc
aam
jmp
mov
add
hlt
cld
sar
cld
into
lar
or
hlt
call
fld
mov
xlat
fdivp
rol
fcos
mov
shr
mov
lret
sti
ljmp
hlt
roll
loope
leave
cli
mov
repnz
loope
ljmp
mov
enter
add
not
add
jmp
xlat
shlb
shr
ret
mov
push
add
lret
ljmp
ror
shll
int3
leave
mov
fstp
repz
lock
mov
adc
mov
repz
push
sarb
lock
call
fistpll
out
fcomip
int3
rcl
repnz
cld
stc
fcmovnu
fdiv
shl
sti
or
call
ret
scas
stc
clc
div
jecxz
std
mov
shl
sar
jecxz
jmp
fsubrp
mov
les
mov
std
aam
faddl
stc
in
aad
lret
mov
rol
stc
mov
add
mov
out
sti
test
in
enter
mov
mov
mov
faddp
fdivrl
loopne
out
xlat
hlt
in
push
shl
fiadds
fucomip
imulb
mov
lock
call
fchs
fnstcw
frstpm(287
push
lret
fdivrp
stos
out
shrb
jmp
call
mov
std
add
add
add
add
shrl
mov
in
repz
mov
add
push
fcomip
cli
add
loopne
leave
fsubrl
shlb
pushl
add
mov
jmp
mov
xor
mov
lea
mov
mov
jmp
sub
notb
push
je
hlt
adc
add
in
jp
add
idiv
in
in
sar
add
ror
std
add
push
icebp
mov
lret
rcl
into
jmp
shl
clc
out
pop
mov
ret
loop
cli
out
or
jmp
shrl
iret
mov
call
fst
ret
xlat
loopne
aad
cli
call
imul
mov
int3
into
out
out
mov
ror
mov
add
roll
fucomip
clc
jmp
push
lods
ljmp
mov
mov
clc
mov
sti
clc
hlt
pop
loope
lds
int3
enter
out
repz
mov
cli
mov
fmul
rol
out
add
mov
loop
mov
repz
out
cmc
lock
int3
cli
sar
loopne
in
add
or
shl
cli
fnstenv
clc
mov
add
aad
fsub
or
std
in
fdivr
scas
jecxz
shl
repz
iret
mov
out
cli
sti
repnz
faddl
cld
ret
add
or
shll
ret
fmul
cld
aam
divl
lock
out
pop
test
mul
into
fsubr
lret
mov
jmp
int3
mov
out
aam
cmc
in
cmc
loop
std
std
add
stc
ljmp
cmc
mov
mov
ljmp
ror
or
rorb
ljmp
xlat
test
sti
mov
sarb
add
repz
ljmp
clc
rol
call
iret
xlat
mov
leave
std
cli
mov
lret
ret
fucom
rorl
fst
movsl
out
jmp
lods
in
hlt
mov
fucomp
testb
idiv
loope
jmp
jecxz
test
mov
loopne
hlt
in
lret
mov
out
or
out
add
cld
add
scas
lret
lret
into
aam
leave
fst
iret
mov
loopne
idiv
fcmovb
in
call
in
rcl
ror
out
mov
aam
fdiv
mov
rcl
jmp
push
mov
add
faddp
in
out
sti
cmc
lret
mov
fcmovnbe
sti
int
rol
add
fcompp
jmp
in
int
icebp
iret
cmc
enter
std
lock
hlt
ret
loope
jmp
out
mov
test
ljmp
fadd
cld
add
icebp
hlt
inc
testb
aad
add
jmp
mov
shl
mov
out
fcmovbe
int
testb
mov
cmc
sti
add
loopne
out
leave
repz
mov
lret
int3
lret
clc
hlt
out
mov
add
out
lds
out
in
ffreep
out
sti
in
in
mov
ljmp
pop
mov
ret
fcos
ud2
iret
lret
mov
mov
mov
fdiv
mov
icebp
icebp
loopne
std
pop
ror
adc
rol
in
mov
mov
repz
jmp
add
add
ljmp
int3
ror
ror
loopne
sar
mov
repnz
cld
lret
fadd
sar
hlt
cld
pavgb
fisttpl
cmc
mov
iret
ret
in
lret
mov
add
fildl
sar
lret
out
jmp
int
repz
flds
or
shl
ljmp
shrl
fcomi
repnz
icebp
hlt
fucomi
add
pop
shl
add
rol
in
std
loop
out
loope
mov
out
sti
mov
leave
iret
lock
cmc
aad
out
lret
or
int3
mov
shlb
fcmove
lock
push
lock
add
out
or
or
out
mov
iret
not
into
jmp
fucomp
mov
int3
loope
cmc
rolb
out
in
mov
mov
in
out
in
cmc
dec
mov
stc
rol
icebp
in
jecxz
xlat
add
leave
sti
stos
scas
test
enter
enter
mov
mov
sti
xlat
ffree
ret
loope
jecxz
int
ret
scas
iret
aad
test
lock
div
in
fdiv
ret
xlat
mov
aam
shr
add
fsubrs
loope
in
xlat
fcmovnbe
out
int3
fsubr
pop
mov
loope
leave
hlt
enter
fmulp
jecxz
into
icebp
int
iret
clc
stc
fsubrp
mov
hlt
fxch
int3
in
in
fcmovnu
in
add
into
ret
lret
xlat
ret
mov
add
aam
mov
fstpt
into
faddl
add
mov
iret
mov
clc
cmc
mov
fsubrp
hlt
out
repz
add
mov
cli
add
or
jmp
loopne
mov
icebp
out
iret
out
cmc
call
mov
dec
jmp
test
mov
lret
mov
shr
fmul
xlat
sti
aam
pop
add
or
sti
add
scas
out
mov
in
mov
lret
mov
leave
mov
repz
jecxz
or
jmp
in
fst
out
iret
mov
sti
sti
out
mov
mov
loop
enter
ljmp
out
mul
lods
fcmove
fsubp
stc
lock
aam
add
fmulp
push
add
into
leave
mov
scas
scas
ljmp
mov
sar
mov
or
or
enter
or
ljmp
std
rcl
in
repz
pop
fnclex
lock
aad
or
pop
into
fucom
jmp
loope
in
fcmovne
lret
fidivs
ret
mov
add
lret
jecxz
out
test
fcmovne
stc
mov
fcomip
sarb
rol
in
fcmovnbe
or
loope
mov
vpsubsw
fcmovbe
jecxz
mov
ficoms
scas
les
icebp
mov
push
fcom
faddp
div
out
or
add
pop
fdivs
out
fucomi
mov
in
mov
repnz
lock
stc
loopne
fmul
or
icebp
test
int3
in
into
mov
hlt
jmp
sarl
loope
repnz
shl
hlt
loop
into
add
mov
shlb
stc
call
loopne
std
loop
fisttps
jmp
idivb
lret
mov
idivb
pop
rol
cmc
lret
decb
add
shl
out
in
into
lods
loope
repnz
cmc
cmc
sti
loopne
testl
loop
sti
fxch
jmp
out
jmp
in
lret
cli
enter
add
test
enter
stos
jmp
mov
mov
jmp
mov
add
aad
ret
add
jmp
fld
mov
mov
aam
sti
in
leave
mov
ret
fisttps
in
jmp
into
or
int3
loopne
shr
loope
mov
stc
icebp
enter
fidivrs
fldl
aam
ret
stos
mov
mov
in
repnz
lret
mov
into
enter
cld
stc
mul
in
in
ljmp
repnz
ljmp
jmp
lock
aad
les
add
stc
jecxz
icebp
fadd
rcl
xlat
jmp
in
in
repnz
roll
mov
por
stc
enter
stos
mov
shl
leave
iret
in
test
int3
loope
in
add
out
stc
call
loopne
ror
rcl
mov
icebp
lock
mov
fmull
loope
int
stos
mov
ffree
mov
call
out
call
mov
mov
clc
jmp
loopne
fisttpl
into
lds
rcr
rcr
sarl
mov
or
icebp
leave
loopne
int
lret
cmc
into
in
leave
call
loope
aad
in
sti
or
in
lret
out
stos
test
repnz
mov
fcomi
stc
in
cld
stc
jecxz
loopne
xlat
or
fucom
or
jmp
repz
loop
out
rcr
repnz
clc
cli
mov
sarb
loop
iret
enter
jecxz
ret
ror
fdivs
fildl
aad
add
fnclex
in
movb
in
or
out
lods
mov
leave
out
cli
bnd
mov
clc
xlat
lock
fcom
incb
icebp
ljmp
stc
sti
int3
fidivrl
repnz
sar
stc
hlt
mov
adc
leave
out
mov
mov
idivb
add
std
jmp
in
sar
in
shl
sti
aam
hlt
fdiv
repz
mov
mov
fmul
cli
jmp
fsubp
or
out
mov
in
call
jmp
repz
ret
add
hlt
rolb
in
fdivr
out
stos
in
out
fcmovnu
in
in
mov
iret
stc
fxch
inc
shl
lret
fiaddl
or
call
test
jecxz
rol
sar
mov
out
in
fcmove
push
or
pop
push
repnz
leave
idiv
mov
add
in
loope
in
ftst
add
loop
loop
vpmulhuw
in
in
vpslld
fdivrp
cli
jecxz
jmp
fsub
mov
xbegin
int
int
pop
xlat
std
roll
mov
out
leave
std
shll
lods
aam
icebp
lds
mov
or
out
fiaddl
out
decb
ljmp
int3
hlt
mov
mov
neg
icebp
shl
cli
loopne
loop
clc
leave
or
adc
mov
enter
xlat
out
mov
add
add
ret
faddp
lret
or
add
fsubr
test
lods
xlat
aad
in
idiv
mov
mov
into
loope
mov
in
fisttpll
fsub
leave
in
rcl
out
lret
cmc
mov
repz
ljmp
jmp
jecxz
shrl
les
mov
loope
roll
fsub
shl
lret
in
shr
jmp
fcmovnbe
fnstcw
cli
shl
add
fcomp
call
jmp
out
out
fdivp
out
mov
loopne
out
mov
fdiv
lock
inc
out
hlt
fsub
faddp
or
out
jecxz
jmp
out
loopne
mov
mov
lock
into
stc
mov
add
stc
faddp
out
lock
out
out
mov
hlt
std
aad
icebp
loop
clc
push
in
out
fsubrp
fsubr
lret
jmp
into
mov
hlt
lret
jmp
enter
test
push
filds
ffree
fdivrp
or
les
mov
mov
int3
testb
ret
mov
cli
jmp
enter
lret
divl
in
idiv
stc
sarl
pop
sti
fdivr
fcomp
enter
mul
mov
mov
mov
std
ret
mov
jecxz
in
imul
add
out
fucomip
scas
mov
int3
int
mov
cld
int
ret
cmc
xlat
fadd
clc
ret
loop
decb
hlt
fildl
in
jmp
sti
mov
lock
aam
hlt
mul
incl
add
or
ret
loop
jecxz
leave
scas
repnz
in
into
repz
repz
in
rcl
xlat
icebp
mov
add
jecxz
or
lds
not
in
lret
mov
stc
mov
hlt
add
loop
jmp
stc
in
out
fdivp
test
loop
int
ret
leave
out
mov
xlat
into
mov
leave
mov
loope
mov
lock
lods
shr
hlt
neg
icebp
in
fdivp
in
movb
icebp
add
in
add
int3
adc
mov
mov
hlt
out
lret
idiv
mov
mov
les
enter
add
les
icebp
sar
shl
aam
sti
std
enter
mov
add
hlt
clc
leave
or
lds
in
in
leave
test
add
mov
std
fsub
iret
in
scas
scas
loopne
mov
scas
aad
call
shl
inc
lock
add
psllq
or
loopne
ror
mov
repnz
sti
mov
fsub
aam
push
cli
fneni(8087
in
mov
cmpsl
loope
enter
cli
clc
mov
lret
aam
mov
hlt
hlt
rorl
clc
leave
iret
jmp
lods
mov
cli
xlat
mov
mov
repnz
repz
shl
loopne
add
add
ror
lret
repz
call
out
mov
sti
loop
cli
add
sar
jmp
push
loope
stc
sti
mov
mov
mov
fcmovbe
mov
out
in
leave
sti
aad
out
rorb
fiaddl
out
int3
ret
in
enter
sti
aam
jecxz
cli
fstp
loopne
cmc
fstp
stc
add
shr
enter
mov
out
jmp
rcr
int
mov
or
fsubr
in
out
into
mov
shr
jmp
int3
mov
jecxz
int
fldl
jmp
out
cld
adc
leave
mov
scas
rcl
iret
idivb
rol
mov
add
fimull
loope
les
ret
shl
rcr
rol
lret
std
enter
in
mov
iret
in
int3
loop
in
xlat
int3
cli
scas
fcomip
leave
aam
aam
shl
out
add
icebp
rolb
sti
in
aad
ljmp
call
stc
push
lret
aad
iret
jecxz
add
inc
jmp
cli
iret
add
ret
loopne
sti
rol
imul
in
vpand
rol
cmc
in
in
fisttps
push
or
mov
leave
loope
repz
mov
lock
fcmovnu
or
stc
fcmovne
lret
fiadds
cld
lret
scas
loope
xlat
lods
aad
out
lock
icebp
fdecstp
sti
hlt
stc
add
stc
faddl
vpsllq
mov
in
mov
loopne
ljmp
int
idiv
cld
lret
fdiv
mov
repz
out
repz
into
in
mov
pop
sti
not
ret
ret
in
call
icebp
icebp
cmc
shll
sar
mov
sti
out
out
sti
sti
fmuls
jmp
fldcw
in
imul
out
aam
mov
test
aam
rcr
iret
out
fpatan
repnz
shl
mov
into
lock
int
clc
repnz
add
ret
cld
cli
loop
in
lods
out
into
iret
mov
iret
mov
shr
lret
clc
mov
repnz
fcmovnb
std
fadd
call
test
scas
loope
les
mov
fst
mov
aam
add
test
repz
lret
lock
mov
loope
mul
loopne
stc
add
psubusw
fbld
into
rcr
in
out
hlt
mov
fsubr
std
mov
rcr
jecxz
into
in
loop
mov
loop
in
out
mov
cld
call
loopne
shr
aad
out
out
jmp
mov
lock
mov
fadd
int
aam
sti
or
ljmp
in
call
clc
ljmp
into
cld
icebp
add
pop
out
leave
or
fcmovu
lods
mov
in
call
clc
mov
sar
mov
out
mov
ljmp
aad
mov
repnz
sar
in
add
out
out
fsub
mov
test
ret
rol
mov
in
decb
loope
loopne
shl
fsubr
repz
add
mov
fiadds
add
or
mov
lret
iret
cli
mov
iret
cld
mov
std
shl
jecxz
or
iret
imull
shlb
cli
leave
cmc
lock
sti
shl
cmc
xabort
psraw
out
iret
aad
ret
mov
mov
hlt
xlat
repz
add
fcmovu
or
enter
shl
shl
in
lret
call
jmp
int
repz
add
out
cld
rorl
lret
mov
call
sti
mov
int3
idiv
repnz
hlt
add
sarb
lret
lods
iret
jmp
divl
cmc
cld
fildl
mov
fcmovbe
out
jmp
fadd
mov
in
aad
jmp
stc
out
mov
clc
out
rcl
loope
not
mov
leave
std
les
mov
ret
test
repnz
mov
sti
neg
filds
or
out
loope
in
test
cld
sar
fsubp
jecxz
hlt
clc
cmc
fcmovnu
ffree
add
fsubr
int3
out
call
fnstenv
mov
fcmovb
sar
cmc
cmc
cld
fcmovnu
push
or
ret
jecxz
enter
lock
mov
iret
cmc
in
add
loope
cld
out
add
xlat
mov
fcomp
call
fdivr
lret
cmc
jmp
fucomi
stos
mul
mov
out
out
xlat
icebp
jmp
rcl
stc
lock
fcomip
into
pop
in
or
leave
loopne
ljmp
fsubr
enter
icebp
ret
add
lret
ljmp
sti
sti
int
mov
lret
in
fdiv
loop
sti
roll
sar
rol
lret
incb
add
loop
mov
aad
mov
repz
fcmovbe
add
lock
ret
xlat
lret
jmp
enter
mov
jmp
xlat
repz
icebp
stc
cmc
fsin
stc
aad
leave
mov
aad
testb
fsubp
in
cld
clc
out
mov
in
fidivl
sti
repz
inc
loop
or
mov
lret
mov
ret
mov
rcl
in
std
jmp
int3
lock
push
fcmovnbe
in
clc
in
test
icebp
xlat
loope
out
lock
in
aad
rcl
icebp
in
ffree
std
ret
jecxz
imul
fsub
loope
repz
mov
fsqrt
fdiv
fdivr
ret
mov
iret
push
out
fucomip
icebp
shl
in
les
aad
repnz
aad
fmulp
std
div
in
jmp
rcl
lret
icebp
int
repnz
cli
in
fcomp
jmp
fcmovnu
rol
mov
or
rorl
in
mov
out
mov
lret
shl
call
lret
push
fmull
aad
into
filds
adc
ret
enter
mov
rcl
fcomp
movl
fsubr
add
rol
jmp
shl
cmc
int3
mov
fcmovbe
out
out
jecxz
in
lret
mov
test
lods
in
lock
fucomip
repz
out
repz
hlt
ret
or
out
call
iret
out
loopne
shr
icebp
into
aad
mov
out
fsubp
loopne
fdivr
out
call
mov
mov
icebp
out
neg
pop
mov
add
push
pop
pand
out
stos
in
loopne
jmp
in
sti
mov
iret
add
int3
out
sarb
loope
or
mov
rcl
fucomi
mov
ffreep
stc
pop
loopne
fadds
add
or
out
jmp
fsubrl
in
mov
repz
shl
ret
shl
decb
call
lods
lret
out
mov
out
out
out
fldl
jecxz
mov
aad
out
add
jmp
pop
std
rol
enter
mov
fxch
rcr
jmp
idiv
fcomi
into
repnz
ret
add
into
loopne
loop
shll
aam
ljmp
clc
loope
loop
loopne
add
fldl
into
aam
loop
mov
fidivrl
test
add
ljmp
lods
jmp
lret
fdiv
mov
ret
clc
in
or
clc
test
mov
mov
test
xlat
leave
fnsave
int3
rol
loope
out
out
iret
ljmp
lret
mov
mov
repz
icebp
loop
ret
fsub
add
iret
or
in
mov
out
leave
lock
scas
lret
ljmp
ret
rcr
icebp
add
les
syscall
lret
xlat
mov
in
hlt
test
mov
rcr
loopne
add
in
add
rol
lret
shll
xlat
sti
lret
cli
cli
in
out
in
xlat
faddl
out
les
leave
mov
lock
clc
lret
fdivr
div
mov
aam
fsub
jmp
in
enter
mov
ror
call
jmp
in
jmp
lret
pop
out
out
fmul
shl
lods
shl
xlat
in
repnz
fsin
mov
rcl
aam
add
in
in
leave
mov
mov
cmc
iret
mov
mov
rcl
mul
fldl
loopne
fstp
ljmp
in
mov
aad
std
mov
mov
in
fcmovnu
rolb
clc
in
lret
ljmp
mov
int3
in
fcom
clc
fadd
aad
mov
fcmovb
fucompp
out
or
or
jmp
in
leave
mov
mov
mov
rol
clc
mov
add
neg
add
mov
clc
push
in
ret
mov
icebp
lret
jmp
mov
fyl2xp1
stc
frstpm(287
fcomip
out
out
aam
fstl
lock
in
ret
into
int3
sti
mov
out
ljmp
add
lock
loopne
pop
fcomi
loopne
shrl
fbstp
cli
xlat
out
add
aad
add
loop
stc
pop
ffreep
repnz
not
loopne
fst
hlt
fnstsw
in
fadd
add
loope
push
fcom
lods
test
jmp
shl
int3
fcmovnb
in
lret
int3
stc
repz
mov
aam
std
or
or
scas
in
loop
aad
mov
fdivr
in
fmul
mov
ror
loopne
jecxz
rcr
xlat
cmc
mov
mov
lret
in
leave
ret
ret
faddl
leave
lret
out
call
call
loope
repnz
ljmp
sti
fucom
repnz
add
out
ljmp
rcl
into
div
repz
cli
int3
mov
add
rol
div
push
cld
cld
ret
fsubp
int3
leave
loop
lret
shr
mov
cld
add
stc
repnz
ljmp
add
xlat
icebp
mov
ror
enter
lret
faddp
mov
repz
xlat
aad
xlat
iret
fimuls
fisttpl
lods
out
in
int3
aam
leave
in
jmp
enter
cld
loope
or
idiv
out
std
sti
loope
rol
scas
ljmp
lret
mov
clc
loop
aad
fchs
hlt
or
loopne
repz
jecxz
shll
in
call
jmp
rolb
stc
add
add
jecxz
xlat
lret
out
mov
fnstenv
mov
std
add
jmp
in
into
jmp
mov
div
sti
leave
leave
out
ret
cld
in
cld
std
in
ljmp
in
jecxz
scas
repz
lods
mov
mul
fmul
std
out
into
clc
jmp
loopne
call
mov
sti
jmp
repz
mov
add
ljmp
in
ret
loop
loope
call
repz
lock
loop
or
in
call
test
shrb
fucomi
shl
out
call
fdivp
loopne
out
add
rcl
scas
repnz
fucomi
out
in
in
mov
mov
lret
pop
jmp
ljmp
int
enter
out
add
jmp
rcr
lret
out
filds
push
loop
out
lret
fucom
in
ret
in
stc
call
add
add
roll
clc
add
add
mov
mov
lret
shl
iret
idiv
fld
int3
clc
hlt
loopne
fcomip
sti
or
paddusw
or
out
in
aam
mov
mov
fcomip
cmc
rcl
repz
add
or
fiadds
adc
mov
ret
sti
iret
out
enter
iret
out
shl
add
lret
jmp
repnz
ret
mov
repnz
in
out
rol
out
mov
jmp
jmp
aad
out
mov
lods
jmp
neg
fstpt
cld
xlat
cld
testl
enter
mov
lret
leave
test
jmp
shl
stc
xlat
add
ljmp
adc
in
ret
lret
lods
test
mov
cld
fmul
clc
mov
out
clc
in
leave
add
lret
shrb
mov
inc
hlt
testb
in
out
cld
aam
mov
out
loopne
lret
icebp
icebp
ljmp
icebp
mov
loop
mov
hlt
in
jmp
add
mul
scas
fmul
shr
sti
mov
cld
sar
ffree
mov
mov
les
cli
mov
rcr
xlat
mov
cmc
aad
shr
jecxz
xlat
in
sar
out
imulb
in
dec
shll
in
in
hlt
sar
neg
or
leave
add
enter
int3
cmc
icebp
repnz
mov
out
add
faddl
lret
or
clc
jmp
div
mov
call
shl
rcl
cmc
out
or
or
or
push
shl
in
int
enter
mov
enter
xlat
repz
add
inc
rcr
xlat
out
iret
in
add
shl
out
call
test
mov
sti
repz
inc
aad
iret
into
ret
cmc
lods
int3
stc
loopne
int
mul
loope
in
push
idiv
in
ret
jecxz
push
aam
adc
shl
rcr
sarl
fadd
stc
loopne
in
push
call
call
lock
out
mov
mov
mov
lret
icebp
aam
std
cli
ret
in
ret
add
shl
test
xlat
loop
mov
fcomip
xlat
call
fucom
fcmovb
rolb
fcmovnu
ljmp
shll
fld1
enter
add
int
lock
jmp
repnz
shr
leave
mov
aam
clc
sti
repnz
mov
mov
add
idiv
jecxz
add
or
repz
lods
jmp
hlt
in
stc
aad
fdivrl
lock
sti
rcl
loop
iret
or
mov
jmp
aad
jmp
in
in
fucom
stc
leave
or
add
leave
in
lret
aad
lock
stc
cld
mov
div
fadd
out
or
std
mov
repnz
jecxz
out
scas
lods
iret
out
hlt
repnz
call
iret
add
fcom
fnstsw
add
out
fstp
lret
in
lret
faddp
mov
mov
in
int3
pop
in
clc
fcmovb
loopne
fcmovbe
lret
fsubr
mov
lock
in
ror
cld
int3
in
mov
hlt
add
sti
fcomip
jecxz
out
add
enter
int
into
repz
fcomi
cld
sar
fcmove
ret
mov
imul
aad
repnz
mov
lods
shr
loope
in
int
ljmp
add
add
rcr
add
scas
jecxz
ret
loopne
cmc
call
mov
aad
in
sti
roll
push
adc
or
mov
mov
ljmp
fcmovu
hlt
in
xlat
or
xlat
or
add
mov
lret
ljmp
ror
call
fstpt
icebp
lock
in
or
mov
fcmovnb
icebp
leave
repnz
int3
fstpt
out
inc
fimuls
faddl
loope
bswap
int
in
loopne
shl
xlat
shr
mov
out
fidivrs
ret
std
add
ror
mov
out
out
fdivr
icebp
stc
in
in
loope
int3
lock
fsubp
fcmovbe
leave
out
fucomi
fst
ret
mov
lods
shr
mov
rcr
ret
mov
lock
out
ljmp
icebp
aam
cli
not
clc
jmp
sar
hlt
ret
fdivp
ljmp
add
fidivs
stc
in
int3
lock
int
add
mov
out
int
cli
sti
inc
aam
in
fcmovne
jmp
in
iret
out
xlat
mov
mov
mov
push
imul
loop
out
ljmp
in
loopne
std
sti
mov
repz
flds
cmc
fxch
lock
clc
loope
cld
leave
leave
jmp
iret
sti
out
mov
stc
in
jmp
push
add
mul
rcr
fucom
cmc
or
out
shl
loop
mov
test
mov
iret
out
shr
int3
enter
fsubp
sti
in
aam
lret
or
lods
out
mov
xlat
hlt
fnstcw
clc
shl
rolb
sar
cld
loope
aad
or
stc
std
call
scas
ljmp
mov
in
shl
xlat
mov
add
int3
iret
add
out
loope
fdivs
sarl
sar
neg
fldpi
cmc
vmovsd
ljmp
ror
icebp
add
add
shr
shl
decl
pop
out
or
loopne
shl
sti
in
enter
in
div
add
fsubrp
mov
shr
out
hlt
jmp
jmp
in
mov
icebp
rol
add
ljmp
mov
not
into
aad
in
leave
cld
not
div
fiaddl
fprem1
in
sti
fst
or
in
out
shl
aam
repnz
int
mov
idiv
mov
fisttpl
loopne
adc
mov
leave
hlt
mov
aad
icebp
mov
mov
add
out
in
sti
stc
jmp
hlt
rol
not
lods
out
fidivrs
rcr
or
jmp
lret
ljmp
loope
iret
loopne
mov
mov
mov
shr
enter
in
ret
in
jecxz
aam
int3
cmc
into
add
rolb
rol
cmc
stc
clc
flds
stc
jecxz
repnz
shr
aad
fdivr
ljmp
iret
repnz
sti
lret
testb
aam
aad
adc
ret
mov
ljmp
jmp
into
out
repnz
xlat
mov
xlat
iret
enter
stos
lods
mov
rcl
out
stc
mov
shl
out
out
add
cli
add
in
ror
leave
mov
sti
into
shl
int3
in
cld
sti
clc
mov
fcmovu
add
movb
enter
xlat
rcl
xlat
ljmp
into
in
aam
int
fnstcw
out
sarb
sti
iret
icebp
icebp
iret
fyl2xp1
cmc
rcr
cld
hlt
ret
lret
loope
or
paddd
int3
add
ret
imul
enter
repz
mov
mov
sti
add
sar
cli
in
out
in
add
xlat
loopne
lret
int3
shr
mov
lock
fcom
mov
xlat
hlt
pop
add
vcvtdq2pd
out
add
leave
faddp
out
mov
fcmovnb
jmp
clc
repz
shr
loopne
fidivrl
in
add
lret
in
adc
rol
lret
mov
call
cld
fsubp
cmc
sti
fsubp
call
mov
iret
shll
call
rcr
not
loop
ret
fsubr
xlat
fimull
add
mov
mov
leave
mov
int
enter
fcomip
loop
idiv
fisttpll
repnz
fucomi
mov
fcom
leave
cmc
lock
mov
icebp
rcr
add
or
stc
or
ret
leave
mov
rcl
int
in
fdivr
ret
repz
int3
cld
cld
loopne
add
pop
or
in
movsl
ret
in
mov
shl
fcmovne
mov
int
rcr
mov
or
in
mov
rol
mov
mov
ljmp
fildl
add
repnz
stc
out
out
or
mov
lods
rcl
aam
mov
aad
cmc
shl
hlt
clc
xlat
fadd
std
lret
incl
repz
jmp
enter
ljmp
add
fcmovbe
out
add
shll
ljmp
mov
std
add
aad
enter
les
loop
iret
lock
ljmp
mov
incb
rcl
lock
iret
imul
fucomip
cld
loopne
ror
call
mov
shr
imul
stc
cmc
mov
jmp
or
clc
aam
ret
test
in
mul
mov
sti
lret
add
loop
sti
sub
xor
cmp
je
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
add
mov
imul
mov
xor
add
mov
sub
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
mov
xor
add
jmp
ffreep
sub
xor
rorb
jns
add
iret
add
lods
in
mov
test
out
mov
ret
icebp
ror
in
ret
add
loopne
or
into
out
shr
rcl
clc
shl
lret
fdiv
out
add
loope
pop
loopne
lock
fadds
fmull
mov
shl
call
lret
clc
mov
in
fcom
hlt
mov
or
mov
mov
shr
jecxz
loope
ljmp
out
xlat
jecxz
lret
sti
loop
lret
or
add
scas
mov
loop
into
shr
icebp
jmp
mov
mov
ret
jmp
lret
jmp
fstp
out
lods
mov
out
mov
fadd
aad
mov
xabort
cmc
or
out
cli
fdivrp
int
ret
hlt
xlat
out
fcmovb
aam
call
out
stc
add
jmp
jmp
leave
bsr
out
mul
call
mov
fsub
out
repz
shl
fcmovu
add
enter
fcomip
leave
shl
out
mov
mov
in
fstp
fcmovu
into
shl
mul
aad
clc
call
mov
cmc
idiv
cmc
mov
aad
loopne
icebp
cld
stc
aad
cld
hlt
std
repnz
out
iret
jmp
stc
mov
loope
rol
cmc
leave
or
std
fildll
mov
ror
in
mov
rolb
iret
jmp
adc
in
into
cmpsb
les
mov
hlt
mov
add
add
loop
add
in
rol
scas
loopne
out
enter
int3
aad
mov
loope
lret
aam
loop
shl
repnz
mov
out
cmc
jmp
xlat
icebp
rcr
add
in
mov
sti
stc
add
fscale
loopne
leave
iret
mov
fdivrp
mov
add
cld
sar
fabs
add
roll
repnz
aad
mov
f2xm1
repz
icebp
test
mov
enter
fucomp
in
jmp
mov
xlat
repz
rolb
add
aad
or
lret
test
out
mov
mov
enter
mov
in
decl
add
or
les
mov
in
repz
mov
sar
cli
or
cli
ret
lret
mov
shr
mov
fdivp
lret
loopne
cmc
cmc
out
pop
cld
out
or
enter
mov
cmc
hlt
ret
lock
fdivrs
hlt
out
in
add
frndint
add
fucomp
add
pop
ret
sarb
clc
aam
jmp
mov
repnz
fcmovbe
stc
lock
or
fucomp
mov
mov
shl
jmp
sar
add
mov
fisttps
loope
fldlg2
fucomi
out
shl
mov
stc
mov
fcmovnbe
fdiv
iret
fstpt
aad
fcomp
cmc
lret
clc
fcmovnu
adc
repz
repnz
out
fucomi
repz
clc
cld
call
aam
add
loopne
in
push
out
add
loope
aam
test
lock
add
icebp
out
out
out
or
shrb
loop
mov
lock
clc
leave
shl
xlat
add
fdivr
lret
jmp
fcmovnb
out
out
ljmp
mov
mov
iret
into
iret
jecxz
aad
add
loop
loope
mov
mov
mov
roll
icebp
in
loopne
jmp
out
in
leave
stc
lret
jmp
jmp
clc
hlt
fidivs
cld
ret
xlat
or
add
incl
out
shr
jmp
mov
out
bnd
rcl
in
fdivp
add
loopne
fadd
iret
cli
shlb
ror
fbstp
iret
shl
ret
or
jecxz
or
loope
in
shl
mov
mov
shl
fcmovu
pop
mov
or
out
test
lods
out
mov
in
shr
aad
std
cmc
in
int
cli
in
fiadds
lret
out
out
shl
jmp
out
mov
call
add
or
stc
ret
add
lret
in
rcr
in
mov
in
fxch
shl
mov
sar
iret
loop
jmp
in
imul
out
lock
fucomi
int
rol
add
lret
or
scas
imul
shrb
mov
mov
inc
stc
cli
out
jecxz
int3
fdivrl
lods
fxch
leave
jmp
loope
ret
cld
rol
movl
enter
scas
fsubrp
shr
aam
mov
lret
rcl
leave
int3
test
rol
sti
fcomip
ljmp
fadd
mov
repz
mov
out
jmp
sarl
shl
xlat
lret
jmp
repz
jmp
in
int3
repnz
in
in
repnz
stc
aam
rol
enter
stc
shl
out
mov
ret
shlb
idivl
mov
fmul
dec
fcmove
fsubrl
out
lret
leave
repnz
cmc
lock
loop
or
out
call
int3
jecxz
shrl
mov
mov
mov
hlt
iret
mov
paddq
add
enter
mov
out
in
lret
hlt
cli
lret
cld
into
loope
add
fiaddl
add
icebp
lret
mov
aam
idivb
add
mov
out
out
std
add
sti
add
mov
mov
imull
fcmovbe
repnz
ret
aad
fxam
stc
roll
ljmp
lret
int
fcmove
shr
sar
push
add
or
push
iret
aam
adc
stos
fadd
call
mov
lret
in
call
std
movl
in
cld
loope
scas
lock
mov
mov
shl
fcmove
sti
out
test
cmc
cli
lret
jecxz
add
test
in
mov
stc
fcmovbe
jmp
enter
int3
clc
lock
mov
cld
hlt
leave
aam
stc
in
out
out
jmp
imul
into
shr
cmc
aam
jecxz
out
imul
push
add
int3
out
shr
fdivl
neg
leave
jmp
fdivrl
shr
add
or
stc
add
push
repz
in
test
mov
mov
add
sti
add
pop
ljmp
leave
in
mov
mov
mov
shl
or
shr
fucomi
scas
int
scas
lods
out
mov
enter
xlat
lock
fadd
fcmovbe
in
rcl
cli
aad
leave
cld
cld
out
scas
jecxz
jmp
sti
idivl
add
add
in
loope
aad
ljmp
not
jmp
clc
jmp
sarl
stc
lret
iret
jecxz
leave
fcmovnu
test
mov
mov
mov
hlt
fsubr
mov
stc
xlat
jecxz
out
add
out
add
loop
cmc
in
mov
leave
add
fcomi
in
iret
or
add
mov
call
hlt
mov
out
lret
mov
add
lret
add
stc
repz
vcmpss
hlt
test
int3
fst
cmc
repz
shl
sar
rol
fcmovnbe
into
lret
push
fucomp
fildll
not
aad
shll
rol
mov
add
add
stc
les
in
mov
not
cmc
out
lock
rcr
in
add
xlat
or
jecxz
jmp
loopne
lret
lret
scas
out
mov
icebp
xlat
mov
fiadds
or
push
fcmovne
lret
out
out
fcmovnbe
fadd
aam
mov
or
fcomp
add
loop
fsubp
fdiv
loopne
in
in
iret
cli
int
into
mov
xlat
ffree
filds
or
lods
jmp
jmp
icebp
shlb
clc
fcomi
sti
out
ror
loopne
lock
fstp
call
mov
test
mov
mov
fsubp
cli
push
add
flds
std
fdivr
sti
in
repnz
shlb
int3
int3
icebp
dec
lret
shl
rcr
sti
decb
pmaxub
iret
scas
out
in
ror
in
cli
shl
add
sarl
fdivp
fsincos
std
in
loope
stos
lods
repz
in
mov
leave
hlt
mov
aam
mov
cmc
fcmovb
call
stos
repnz
out
in
fdivrp
lret
shl
loopne
les
in
ljmp
ror
mov
mov
mov
in
cli
mov
rcl
add
cli
jmp
int
lods
shl
mov
mov
mov
fprem1
rcl
into
mov
inc
fdivrp
cli
loopne
in
rcr
in
leave
out
in
ror
jmp
icebp
cli
rcr
mov
clc
xlat
lret
fcompp
lret
out
imul
jecxz
in
mov
mov
out
mov
repz
rcr
in
cld
out
out
or
ret
ror
imul
mov
fidivl
xlat
into
mov
sar
jmp
ret
lret
add
repz
out
int
in
repnz
repz
inc
mov
stc
repnz
out
sti
or
lret
mov
test
faddp
fst
fsqrt
mov
cld
jmp
or
sarb
aad
mov
mov
ret
pop
shl
rcr
in
int
fldln2
jmp
in
rcl
test
neg
lock
hlt
shl
out
add
in
ret
lods
ljmp
lock
add
in
cli
loop
into
aam
in
shr
lods
hlt
mov
mov
mov
lret
rcr
add
add
or
fbstp
mov
not
out
rcr
mov
std
clc
in
fucom
cmc
add
add
fdivr
add
in
std
enter
hlt
shl
mov
int3
stc
enter
idivl
or
add
fiadds
adc
les
iret
aad
mov
cld
ret
hlt
fxch
sti
fcomp
out
in
fnstsw
stc
not
in
aam
rcr
mov
mul
loop
leave
mov
add
ret
ret
enter
int
lock
into
mov
clc
clc
xlat
add
add
rep
mov
in
mov
repnz
mov
rol
cmc
rorb
fxtract
psubsw
fimull
loop
int3
vpsadbw
int3
fcmovne
fcomip
into
out
lock
sti
movl
or
jmp
shrl
mov
aad
shl
aad
mov
fcomip
shl
in
mov
out
int
leave
jmp
loope
hlt
mov
fdiv
add
scas
shl
lret
jmp
lret
loop
mov
in
stc
mov
loope
incl
in
mul
out
hlt
loopne
int3
cli
fnsave
ror
leave
mov
clc
add
filds
cmc
int3
jmp
push
enter
out
add
jmp
fdivl
push
mov
mov
mov
rol
stc
mov
mov
lock
not
in
mov
fcomi
mov
cli
out
out
into
stc
loop
out
out
divb
ljmp
in
hlt
add
or
test
leave
repnz
jmp
mov
std
sarb
shl
add
add
cmc
dec
push
shl
divb
idiv
aad
shl
fucomp
in
stc
in
repnz
xlat
add
jmp
mov
shll
int3
aad
mov
icebp
mov
fucompp
fadds
lock
call
in
icebp
lret
jmp
leave
aad
aam
cli
mov
fcmovne
int
icebp
fsub
ljmp
enter
fcmovbe
ret
fcmove
loope
jmp
ffreep
out
or
loope
into
into
out
mov
mov
test
repnz
std
fiadds
test
mov
cmc
mov
icebp
out
cld
cmc
fistpll
cli
fcmovu
or
hlt
mov
lret
icebp
lret
fnstcw
sarl
ret
pop
aam
push
add
cli
fcomp
jmp
xlat
call
enter
aad
shl
loope
filds
fcmovnu
lret
push
or
in
shr
mov
mov
ror
clc
mov
add
hlt
mov
loop
les
shl
aad
mov
mov
div
loop
cmc
div
fdivp
pop
out
sti
into
mov
into
lods
mov
into
neg
cmc
mov
jmp
ret
loope
lock
add
out
in
mov
mul
leave
int
mov
fcmovnu
in
add
mov
repnz
push
hlt
psubsb
into
call
in
aam
stc
push
shl
mov
out
loope
cld
or
leave
rcl
jmp
stc
scas
xlat
leave
xlat
lret
xlat
enter
int3
jecxz
clc
mov
shr
loopne
rolb
or
lret
in
repz
mov
not
enter
add
hlt
out
fcom
or
in
or
sysret
fucomp
mov
lods
lret
mov
stc
mov
mov
cld
or
sti
clc
out
push
or
int3
iret
iret
out
in
lret
mov
add
test
add
iret
jmp
into
out
aam
xlat
icebp
lret
mov
rol
movb
loopne
lret
add
aam
lret
call
aad
rcl
jmp
mov
mov
enter
fincstp
add
std
push
std
add
add
ret
shl
out
stc
icebp
repz
shlb
loopne
add
lret
lds
out
sarl
jmp
std
ljmp
clc
cli
fnstcw
in
lock
cli
enter
mov
shr
aad
std
ret
inc
jecxz
iret
cli
cld
loopne
lret
loopne
in
lods
sti
int3
int3
in
fistpll
mov
ljmp
add
les
in
lods
repz
add
or
call
or
out
mov
enter
rcl
mov
loopne
add
mov
call
int3
in
in
mov
jmp
cmc
leave
ljmp
int
fisttpll
jecxz
pop
aad
add
jecxz
leave
ret
in
ret
out
iret
jmp
jmp
into
test
jmp
out
scas
out
jmp
shl
repz
mov
enter
fcom
ret
lock
in
shl
mov
iret
pmulhw
repnz
call
div
fcom
ror
shl
mov
push
in
push
jmp
in
lods
repnz
loopne
shl
in
mov
int3
add
clc
ffreep
or
out
in
int
test
shrb
int3
clc
in
mov
out
mov
faddp
icebp
add
cld
in
repnz
lods
jmp
ror
fbstp
iret
jmp
clc
stc
or
or
add
jmp
ljmp
mov
std
cmc
fcomi
fcmovnb
or
or
add
dec
into
shr
faddp
leave
lds
mov
fdivr
repnz
fcmovnb
sar
invd
les
into
lods
fsubrp
shr
enter
fdivp
mov
clc
hlt
push
add
loope
push
loop
or
shl
rcl
aad
imul
int3
jmp
call
out
shr
shl
call
aad
loop
enter
shl
jecxz
int
mov
icebp
ret
cli
clc
cld
ljmp
icebp
lods
mov
fnstcw
fucom
add
xlat
shr
aam
out
add
lds
ljmp
ror
xlat
mov
rcl
sti
repz
ljmp
in
fistpll
out
mov
fmul
ret
mov
mov
fucomi
into
push
stc
or
leave
lods
loop
repnz
xlat
call
aam
loopne
add
fcmovnu
or
cld
add
cld
std
ret
out
int3
enter
mov
divl
ret
aam
std
add
xlat
flds
push
loopne
loope
in
into
ror
loop
test
loop
in
loop
clc
cld
int3
mov
push
call
repz
repz
mov
out
repz
fcmovnu
add
add
pavgb
fsubp
add
imul
rep
int3
call
lock
sar
cmc
icebp
repz
or
add
scas
jmp
rcl
mov
out
repz
jmp
loope
repnz
imul
cli
out
add
fimuls
stos
mov
shl
out
out
fmul
fidivrl
aad
repnz
in
hlt
fmuls
scas
mov
aad
xlat
out
lods
mov
clc
repnz
cmc
pop
int
in
pop
leave
fucomi
fucompp
in
jmp
hlt
mov
lock
int
mov
shl
repz
fcmovnb
aam
fadd
loopne
jecxz
enter
sar
mov
filds
testl
fmulp
aam
cld
rcl
fucomip
rol
lret
cli
out
out
mov
int3
int
clc
in
mov
ret
jmp
in
imul
mov
mov
sar
fsubp
cmc
rolb
leave
paddusw
call
movsl
mov
ljmp
aad
add
stc
jmp
int
loopne
cmpsb
xlat
ret
loop
shl
enter
sti
int3
mov
call
rcl
mov
fisttps
aad
aam
add
mov
in
mov
mov
cli
rcl
cli
add
push
jmp
roll
loop
fisttpll
jecxz
scas
icebp
test
lret
out
in
sti
add
fcmovnu
cld
in
out
ljmp
out
mov
int3
lret
sar
idiv
rol
mov
shl
aad
or
or
mov
jmp
leave
leave
in
xlat
enter
fidivrl
add
in
jecxz
in
out
mov
out
in
int
mov
jmp
fidivs
aad
loopne
fstp
loopne
cli
cld
pop
or
out
rcr
rcl
div
lock
shl
repnz
add
fxch
div
push
add
out
std
fcmovb
out
lret
out
shr
hlt
stc
repz
repz
out
mov
jmp
into
shlb
iret
sti
out
icebp
jecxz
rcr
hlt
repz
jmp
testl
in
int3
jmp
aad
iret
ror
clc
in
ljmp
in
std
flds
incl
test
or
in
ret
fmul
lock
rcl
xlat
mov
int3
fdivp
shr
movl
ljmp
mov
mov
hlt
lret
jmp
sar
add
rcr
push
add
lret
int3
out
lret
jmp
clc
icebp
mov
repz
neg
hlt
movb
idiv
fisttpll
loope
rcl
in
rol
aam
out
fcmovne
clc
mov
enter
pop
in
mov
imul
add
jecxz
repz
out
in
mov
lods
fsubr
neg
xlat
mov
add
fsubr
clc
adc
ret
fsubp
mov
jmp
repnz
aam
call
push
rcl
repnz
add
lret
lock
int3
hlt
shrb
stc
add
out
hlt
fst
or
enter
lds
mov
ret
lds
in
cli
in
clc
ret
rcl
lret
fcmovu
jmp
out
faddp
in
shl
jecxz
ror
fst
mov
in
add
or
loope
fimuls
iret
fucomip
lret
shl
in
in
mul
cmc
lock
fmul
fxch
mov
testl
or
cld
in
in
lods
mov
shlb
in
fprem
div
mov
add
sar
enter
stc
or
enter
jmp
fucomi
fdivrp
mov
aad
mov
sti
or
enter
in
iret
aad
mov
fidivl
mov
rcr
shl
aam
push
leave
into
mov
aam
jmp
jmp
shl
ret
cld
jecxz
ljmp
add
repnz
ljmp
repz
not
rcr
jmp
jmp
mov
scas
fcmovbe
jmp
rcl
iret
fsubrp
cmc
xlat
lock
loop
cld
add
movl
fsub
shr
fcmovnb
leave
icebp
enter
stc
fdivrs
roll
out
fsubr
int
fists
shr
loopne
call
clc
lret
mov
mov
mov
mov
fmul
or
fsubr
lret
repz
lret
jmp
std
aad
div
aad
std
add
cmc
sti
ret
fsub
fmul
lret
lock
out
aad
shr
call
mov
neg
rol
cmc
call
mov
stc
leave
iret
shl
add
int3
shll
or
lret
int3
ret
repnz
int
lret
mov
mov
fdivr
clc
or
fdiv
stc
jmp
int
les
fbstp
sar
xlat
testl
stc
repz
sarl
fidivs
ror
add
icebp
aad
add
or
add
mov
in
fdivrl
leave
ljmp
ror
hlt
ret
add
sar
fmulp
repnz
out
int
fucomi
mov
fcomi
out
aam
rcl
in
mov
aad
test
lret
mov
test
in
aad
mov
xlat
les
mov
enter
lods
in
shll
fcmovnu
mov
cmc
add
std
aad
loope
fxch
out
test
jmp
lock
out
clc
icebp
repnz
mov
in
out
psubw
icebp
out
ret
lret
cli
enter
aad
int
jecxz
mov
rorb
stc
lds
jecxz
int3
icebp
into
repz
call
lret
icebp
ror
ret
in
jecxz
call
adc
out
ret
ret
repz
mov
stc
lret
pop
loopne
std
add
out
xlat
add
jmp
cld
mov
sarb
in
mov
clc
hlt
enter
rcl
in
out
add
add
out
loopne
rcr
divb
fcmovu
mov
mov
ror
bswap
push
fcmovu
iret
in
int
idiv
int3
mov
add
add
add
add
repz
icebp
mov
shr
mov
fdiv
ljmp
sti
or
ljmp
call
into
cmc
ret
lock
int3
add
or
loopne
or
in
in
mov
ret
hlt
ror
mov
cld
imul
filds
fidivrl
call
cld
fdiv
ret
jmp
leave
mov
out
aad
mov
sarb
fdiv
lock
rorb
loope
enter
int3
mov
mov
ljmp
rcr
faddp
fst
jecxz
hlt
ljmp
in
in
test
into
out
call
in
repnz
jecxz
stc
aam
add
or
test
mov
mov
lret
mov
sar
aam
in
push
dec
rol
mov
out
lock
in
sti
mov
repnz
ret
fcomp
cli
enter
or
mov
enter
mov
enter
fldln2
iret
clc
rcr
fcmovnu
aad
clc
loope
fucomi
fstl
jecxz
out
mov
rcl
scas
leave
lock
mov
lock
ret
icebp
in
loop
or
std
iret
mov
mov
neg
mov
fiaddl
lock
cmc
add
or
fdivr
lret
mov
in
loope
mov
out
fdiv
mov
out
aam
loop
ret
xlat
add
loop
loopne
cli
lret
lret
mov
lock
shr
mov
jmp
mov
hlt
mov
mov
or
out
jecxz
in
int3
shl
ret
inc
out
cli
fcmove
aad
call
or
add
out
loopne
push
sti
or
out
xlat
in
repz
in
icebp
frndint
mov
rolb
jmp
loop
out
jecxz
out
int
in
ror
rcl
cmc
fmul
out
idiv
loope
aad
out
loopne
repnz
test
leave
shr
repnz
int3
fdivrp
pop
aam
vpaddusb
enter
repz
lods
call
hlt
jmp
mov
mov
mov
test
into
in
adc
loope
loope
mov
int3
rcl
lret
mov
fbstp
or
add
push
out
test
lods
faddp
shrl
lret
cli
mov
lock
idiv
add
or
in
enter
mov
iret
mov
iret
stc
in
in
cld
mov
fdivrl
repz
fucomip
clc
shl
loope
jecxz
shr
in
xlat
in
clc
mov
test
add
in
clc
or
mov
out
out
repz
fstp
fcmovnb
leave
mov
loopne
rcr
mul
pmaxub
lret
loop
in
call
ljmp
ret
out
mov
in
pminub
add
scas
mov
rol
mov
div
fcmovnbe
cli
mov
mov
cmc
xlat
lsl
jmp
out
mov
not
jmp
mov
sti
mov
shl
rcl
push
out
stc
in
loopne
out
fsubl
lret
int
stc
mov
ret
call
cld
or
or
idiv
or
jmp
out
call
sarb
aam
add
out
paddw
cli
out
stos
jmp
loop
aad
out
lret
mov
rcr
add
add
cli
jecxz
shlb
mov
int3
iret
out
fnstsw
jecxz
in
aad
cli
ret
out
leave
or
fucom
vpsrld
lret
mov
fmul
fcomip
hlt
loope
shl
loope
fucomi
in
add
hlt
or
out
ljmp
in
mov
fcmove
ret
mov
ret
lret
cld
leave
loop
add
jecxz
iret
into
mov
lret
mov
int3
stc
cld
cli
xlat
ret
mov
out
add
leave
ret
int
test
fcmovnu
scas
aam
int
iret
xlat
iret
cli
sarl
filds
fsubrp
leave
enter
mov
xlat
imulb
in
int
hlt
add
loopne
int3
add
stc
incl
jecxz
or
rol
faddp
mov
shrl
std
xlat
lock
int
into
ret
mov
push
out
iret
leave
in
test
hlt
mul
out
xlat
repnz
enter
pop
rcr
xlat
fucomi
ret
add
leave
clc
into
fbld
out
out
icebp
test
cli
out
out
loope
int3
add
push
or
add
or
or
int3
faddp
test
shl
mov
out
cmc
repz
ror
mov
jecxz
leave
add
stos
int3
aad
loope
repz
fdivrs
in
add
loopne
roll
enter
int
out
mov
repz
enter
repz
cli
test
mov
neg
fisttps
cmc
or
add
fdivrl
shl
jmp
mov
sti
icebp
mov
std
mov
fsubr
mov
ljmp
sti
sti
in
add
int
mov
inc
jecxz
aam
add
jmp
loope
in
rcl
mov
lret
out
hlt
mov
div
out
cli
add
lret
or
stos
repz
ror
mov
aad
aam
fdivrl
cli
add
or
add
repz
lret
in
clc
jmp
ljmp
repnz
cmc
enter
loopne
mov
mov
lret
in
mov
jecxz
in
mov
dec
cld
in
in
div
lret
mov
test
cmc
not
loope
sti
loope
incl
or
fmulp
out
pop
in
repnz
enter
lock
out
fcomip
cld
clc
std
fadd
loope
fdivp
ljmp
enter
xlat
leave
mov
mov
sti
aad
loop
jmp
ljmp
out
iret
test
mul
fcmovu
lret
aad
pop
out
mov
inc
or
dec
lock
div
lret
mov
int
jecxz
mov
std
or
in
fadds
ljmp
call
not
mov
rol
out
loope
mov
mov
ror
xlat
repz
out
repnz
int3
cld
xlat
mov
loope
hlt
les
leave
jmp
leave
jmp
in
mov
into
stc
inc
aad
add
add
jmp
int3
enter
rcr
stc
lods
mov
add
loop
shl
rcr
or
add
in
ret
divb
in
cli
out
clc
loop
not
loope
lret
sti
ljmp
in
mov
idivb
iret
rol
fidivrs
lock
or
or
loopne
iret
scas
enter
mov
fcomp
loop
out
repz
repnz
icebp
clc
aad
ret
cmpsl
iret
shr
leave
lods
call
in
sti
in
aad
mov
xlat
pop
jmp
loope
in
out
into
int
scas
fdiv
cli
mov
mov
rcl
loopne
loope
out
push
loopne
faddl
call
mov
loopne
call
mov
in
int
push
lret
lret
in
in
add
shrl
enter
divl
jecxz
out
mov
fmul
or
shl
mov
mov
out
mov
out
mov
in
lock
sti
fnstsw
add
in
or
jmp
mov
enter
sti
les
int3
fldl
in
fxch
out
cld
in
add
out
lock
mov
fdiv
in
mov
mov
cld
mov
clc
add
test
push
add
scas
icebp
icebp
mov
int
mov
cmc
mov
loope
sti
cli
ret
clc
add
or
in
int3
loop
loop
call
divl
icebp
fpatan
call
add
fsubr
add
pop
ljmp
hlt
int
repnz
call
push
mov
loopne
cmc
add
int
in
scas
jmp
mov
lods
jmp
fnstsw
roll
hlt
fsub
iret
stc
leave
repnz
sarl
fcmovne
leave
leave
jecxz
repnz
add
jmp
jecxz
loopne
out
scas
in
lock
mov
mov
leave
fldl2t
icebp
add
roll
loop
rcr
loope
xlat
add
fistl
int3
loop
rcl
rcl
mov
neg
ljmp
add
mov
add
leave
add
lret
ret
jecxz
ror
mov
stc
mov
ljmp
aam
idiv
ret
incb
les
fldcw
scas
fcmovbe
mov
jmp
not
shr
mov
cmc
or
loope
add
jmp
idiv
ljmp
mov
fdiv
incb
repnz
add
fsub
or
mov
shr
lret
in
fsubrp
lock
sarb
stc
lret
jmp
fcmovnu
in
scas
movsb
mov
out
mov
dec
lock
mov
int3
add
fucom
inc
ljmp
or
fdivl
shl
hlt
int3
test
aad
icebp
inc
in
out
loope
into
out
out
loop
test
ret
clc
lods
idivl
ret
neg
ljmp
or
shr
loop
sti
aam
ljmp
int3
add
shl
not
clc
jmp
push
cld
shrb
iret
fucomi
aad
add
sti
in
rolb
cld
ljmp
into
cld
ror
mov
mov
sarb
mov
aad
or
shl
hlt
stc
iret
fmulp
call
jecxz
iret
sti
into
in
icebp
mov
std
std
ffree
fcomp
push
aam
hlt
add
int
rcl
mov
int3
mov
ret
mov
cld
fldln2
test
ret
add
jmp
or
mov
test
mov
decl
decl
decl
decl
cmp
jae
mov
movl
mov
movl
lea
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
xor
add
imul
add
mov
jmp
mov
xor
mov
xor
add
mov
mov
xor
add
imul
or
lea
mov
xor
add
lea
mov
jmp
mov
xor
mov
lea
jmp
scas
in
dec
je
mull
imul
lods
jns
add
jmp
mov
fucomip
shl
fiadds
mov
ret
call
add
mov
lock
int3
mov
ljmp
add
rol
mov
or
loope
int
test
lret
fcom
out
fucomi
icebp
mov
xlat
mul
std
fdiv
or
push
or
leave
int
call
sti
iret
add
loop
add
mov
jmp
loop
ljmp
mov
clc
repnz
fcomp
call
fidivrs
or
mov
lock
test
fcmovu
cld
jmp
into
out
int
in
push
test
cld
loope
lods
out
loop
icebp
int3
in
mov
aam
sti
add
ret
clc
out
enter
or
scas
scas
int3
lret
leave
repz
hlt
mov
hlt
out
rolb
loope
std
ffreep
out
in
fsubrp
leave
mov
int
in
out
in
fdivs
add
sarb
lret
out
sti
clc
or
lret
lock
in
not
repnz
mov
hlt
loope
into
stc
int
shl
add
loope
jecxz
in
out
in
mov
mov
in
in
lret
leave
not
in
out
rcl
stc
ret
fnsetpm(287
fdecstp
fmul
cli
add
rorl
mov
cmc
lods
vpmaxsw
out
iret
stc
lock
ffree
rolb
aad
div
mov
or
jecxz
out
shlb
int3
lret
enter
sti
shl
jmp
pop
ret
out
fdivrs
fsub
int3
out
sti
shl
sti
mov
incb
ljmp
loopne
loopne
mov
repz
mov
fdiv
ret
jmp
pop
vpmulhuw
iret
or
call
leave
mov
mov
les
ret
fmulp
fcmovnb
cli
fdivr
out
add
fmull
repz
movsb
jmp
repnz
out
in
jmp
call
icebp
rcr
testb
pminsw
loopne
add
rol
ljmp
iret
in
mov
mov
mov
fstp
ljmp
loope
in
mov
mov
push
repz
jmp
shl
movb
testb
aad
jmp
stos
shr
cmc
loop
mov
repz
jecxz
repnz
repnz
push
mov
or
ret
in
loop
mov
cli
repnz
stc
in
into
cld
cmc
enter
fcomi
add
leave
jmp
cmc
ret
in
lock
in
mov
mov
stc
clc
add
faddl
jmp
jmp
lret
iret
repz
ljmp
mov
hlt
mov
stc
mov
int3
lret
add
in
in
loop
rol
lods
repnz
in
hlt
out
sar
ljmp
shl
cmc
out
hlt
iret
or
out
mov
mov
in
jmp
out
enter
iret
cli
cli
mov
icebp
idiv
jmp
in
scas
jmp
repnz
mov
aam
mov
out
roll
sar
loop
rcr
sti
cli
fnstcw
ljmp
enter
ret
int3
cli
aad
stc
sti
loopne
adc
in
out
hlt
lods
fdivs
aad
mov
add
call
aam
pmulhw
out
test
mov
ljmp
add
std
sti
fcomip
fld
ror
fld
in
decb
jmp
jecxz
lret
int
mov
hlt
iret
into
loop
cli
mul
sar
push
add
mov
cld
or
in
int3
out
loopne
loope
jecxz
int
jmp
ror
rol
ret
cmc
cld
fmull
fcmovu
or
mov
scas
cmc
mov
loopne
sar
mov
fmul
fdivr
out
add
mov
fnstsw
test
mov
fnstsw
out
in
fst
or
in
mov
out
out
in
enter
cli
in
in
add
cli
cmc
add
iret
add
lret
lret
sti
lock
enter
repz
div
iret
int3
test
fcomip
rcr
fildl
out
out
mov
mov
hlt
in
mov
in
int3
icebp
int
incl
push
mov
leave
sti
ret
mov
mov
in
mov
shl
mov
fst
or
ror
lret
fsubp
fsubp
enter
mov
sti
mov
sti
hlt
sarl
jecxz
xlat
pop
sti
push
decb
loop
iret
loopne
mul
les
sar
cld
xlat
xlat
sarb
or
jmp
cld
out
int3
loop
ror
into
test
lret
mov
fxch
fdivp
mov
jmp
icebp
stos
into
lods
in
jmp
in
int3
mov
mov
loop
or
jmp
or
hlt
hlt
repz
call
out
rcr
mov
repz
jmp
ret
cld
aad
push
or
mov
shr
mov
ljmp
lret
aad
mov
neg
std
lock
add
jmp
in
loop
mov
loopne
aam
mov
cli
repz
aam
add
aad
std
out
push
cmc
fucomip
jmp
mov
xlat
mov
aam
in
in
sti
sarb
sar
testl
ljmp
jmp
pushl
ret
neg
fsubp
fsubp
xlat
or
decl
loop
out
out
out
shlb
lock
sti
call
hlt
mov
pop
push
stc
or
repnz
repz
in
int
cld
mov
jecxz
rcl
cmc
fsubp
leave
or
cli
repnz
jecxz
out
ror
jmp
rcl
mov
add
add
mov
pop
add
stos
out
into
les
icebp
ror
lret
in
fcomp
cli
jmp
ret
add
out
fiadds
leave
add
ret
test
ljmp
repnz
repz
std
cli
loope
loop
loopne
add
test
mov
mov
rolb
out
test
neg
faddp
fmuls
mov
ret
leave
xlat
aad
iret
lds
hlt
int
in
hlt
sar
into
sti
add
faddp
ret
aad
sarl
mul
std
fsubp
out
fmulp
movb
shlb
mov
loope
sti
fmul
mov
pop
std
icebp
mov
cli
lret
iret
out
jmp
icebp
in
aad
ljmp
int
hlt
loope
repnz
or
jecxz
add
mov
rcl
mov
lret
add
mov
cld
incb
fiaddl
loop
add
or
test
fdiv
mov
mov
loopne
cli
add
fucom
or
int
enter
xlat
lods
repz
repnz
mov
call
testb
clc
imul
or
ret
in
loope
in
mov
frndint
loop
fcom
cli
fimull
jecxz
add
loope
loopne
int
repnz
cli
mov
hlt
mov
sarl
idiv
add
call
sarb
enter
int
ljmp
rolb
incb
loope
cmc
int
fxch
in
out
int3
ret
out
repnz
fsubrp
iret
mov
cld
stc
repz
out
ret
out
mov
mov
xlat
mov
in
int
ret
icebp
stc
fld
lret
add
add
scas
shrl
mov
mov
into
icebp
clc
int3
cmc
or
or
iret
enter
std
repnz
ret
imull
repz
stc
into
pop
aam
rol
in
call
add
lret
loop
out
int3
in
cli
sti
out
lock
loopne
loop
rcr
add
std
inc
or
dec
loopne
lret
in
mov
lret
mov
sti
fdivs
or
or
or
out
aad
lods
mov
call
mov
int
hlt
idivl
fdivrp
add
out
lret
out
shl
icebp
shll
cmc
mov
mov
cld
stc
pop
or
adc
mov
mov
aad
fsubr
int3
int3
faddl
hlt
or
pop
mov
loopne
fsub
scas
aad
in
ror
ljmp
aad
mov
cli
add
in
add
int3
mov
in
aam
ror
int3
mov
jmp
clc
hlt
fadds
out
idivb
or
lret
jecxz
jmp
mov
in
aam
cli
lret
repz
aad
clc
xlat
ffreep
add
sti
fldl
fucomp
mov
mov
out
jmp
mov
rcl
stc
cld
ret
roll
out
call
rol
scas
call
imul
mov
hlt
fucom
mov
lock
stc
in
lret
mov
mov
divl
clc
mov
add
mov
out
decb
jmp
ret
lret
out
fdiv
sti
lret
int3
jmp
mov
in
rcr
ffreep
les
out
push
fsub
enter
scas
hlt
out
in
clc
out
lret
lock
std
xlat
aad
mov
pop
or
int3
mov
aam
into
imul
cmc
fiaddl
shr
jecxz
in
sar
call
std
in
loope
into
repnz
ljmp
fstpt
mov
ljmp
iret
loope
mov
xlat
loope
jmp
mov
aad
fcmovbe
mov
lret
in
ret
leave
rcl
lds
mov
repnz
fcmovnbe
cmc
in
repnz
cli
mov
mov
out
mov
in
div
out
stc
int
out
out
pop
incb
call
add
lods
mov
sti
lret
rol
fdiv
rcl
fistpll
repnz
lret
fsub
add
xlat
int3
lods
out
out
lret
sti
fnstenv
std
iret
clc
xlat
jmp
or
clc
in
in
jmp
or
cmc
int3
leave
iret
fmul
not
in
fmul
iret
int3
icebp
ror
in
lret
out
call
lret
out
mov
cmc
fsub
clc
cmc
fdivr
ret
fcmovu
fisttpll
lret
jmp
div
hlt
in
idiv
aad
fstpt
xlat
les
not
call
jecxz
icebp
lock
in
aad
out
lock
aam
sar
add
ret
sti
hlt
cmc
hlt
dec
or
lods
mov
test
icebp
mov
in
mov
repz
mov
testl
fmull
add
cmpsl
scas
shr
mov
mov
mov
lock
test
rol
fistpll
out
icebp
mov
xlat
jecxz
mov
int
fstpt
rcl
jmp
rol
incl
or
scas
repnz
lock
enter
hlt
ret
jecxz
mul
fcmovnu
jmp
jmp
mul
test
ljmp
stc
repnz
ret
fldpi
ljmp
rol
in
repz
divl
mov
mov
add
in
cli
or
fdiv
rol
mov
in
shr
std
in
icebp
shl
mov
aad
add
fsqrt
add
loopne
sarl
aam
lock
aad
into
mul
sar
loopne
aad
or
repz
rcl
ret
aam
aam
iret
call
mov
shl
rcr
push
jecxz
flds
sti
fsubr
fxch
shr
jecxz
mov
not
clc
repz
aad
mov
in
test
clc
into
repz
mov
ret
test
stc
std
jmp
loop
out
out
aam
add
lret
iret
cld
out
add
in
lock
fucomi
aam
mov
repnz
vcmpss
lret
aam
fsubr
fsubr
lret
mov
div
jmp
in
rolb
add
sarb
lret
hlt
lret
leave
out
les
mov
rol
stc
cli
rolb
into
jmp
or
stos
enter
lods
mov
in
xlat
add
repz
xlat
repz
xlat
or
or
or
ljmp
cmc
les
rcr
fadds
sar
push
or
ljmp
fistpll
into
enter
jmp
mov
in
ret
fimuls
add
in
jecxz
in
divb
lret
sti
out
int
or
xlat
lret
clc
clc
or
repz
fidivrs
mov
aad
clc
ret
fucomi
fdiv
add
out
iret
out
add
shr
fidivs
into
out
int
fiaddl
rolb
in
jecxz
jmp
into
fcmovne
ljmp
repz
call
xlat
fdivr
mov
ffree
add
or
hlt
int3
mov
ret
mov
int3
mov
jmp
rol
jmp
mov
aad
mov
fsubrp
mov
cld
call
shl
xlat
lret
fsqrt
in
imull
mov
into
leave
mov
mov
add
div
fsubr
call
test
iret
sti
mov
into
mov
rolb
fsubr
shr
fisttps
jecxz
add
scas
out
into
mov
into
loopne
iret
mov
mov
add
loopne
fiadds
push
int
loopne
loopne
lret
lock
shll
rolb
push
psubd
add
lret
mov
sarb
fbstp
into
fsubp
cmc
in
enter
or
bnd
int3
lock
clc
ljmp
repnz
movb
in
in
jmp
loopne
lods
shl
mov
call
aad
in
sti
enter
mov
incb
lret
repz
mov
loop
mov
mov
ljmp
fmuls
hlt
add
ljmp
lods
loopne
sti
std
into
fstpt
loope
fcmovu
or
cmc
ror
or
ror
test
fdivrs
fldl
mov
cli
repnz
test
iret
loop
jmp
stos
lock
mov
shl
sti
fidivl
testl
hlt
ljmp
fisubl
in
lret
neg
in
aam
cld
mov
ljmp
adc
mov
mov
loope
lock
fdiv
fcmovnbe
icebp
repnz
out
sar
add
iret
fucomi
in
mov
out
lock
out
hlt
int3
in
stc
into
call
fcomp
add
decb
add
jmp
stos
lret
shl
mov
aam
int3
mov
out
ret
push
add
cli
add
int
mov
mov
in
mov
loop
into
stc
rol
ret
hlt
leave
psubusw
fxch
shl
in
rol
in
in
enter
fsubp
clc
ffreep
ret
out
loope
jmp
out
mov
mov
in
stc
fldl
mov
std
aad
push
loopne
inc
test
clc
lret
repz
stos
in
hlt
in
in
stc
ljmp
loope
rcl
add
mov
or
ror
lret
int
lds
repnz
aad
out
roll
out
cld
fsubr
sti
add
in
fdivl
mov
inc
mov
aad
add
aam
add
stc
mov
mov
cmc
lret
fxch
fldpi
mov
rol
ffree
cli
call
or
ret
in
in
into
mov
mov
div
leave
lret
enter
ffree
mov
loopne
mov
mov
call
ret
repnz
cld
stc
std
out
shl
jmp
out
enter
in
mov
repz
clc
int3
loope
mov
into
lds
in
rcl
test
stc
iret
cld
repnz
mov
sti
stc
into
add
lret
repz
test
sarl
sti
mov
rcl
call
shl
ret
repz
loop
mov
mov
ret
cli
stc
pop
lret
repz
lret
jecxz
int3
fnclex
lret
idiv
call
mov
add
ret
ror
jmp
sti
aam
testb
jecxz
shl
icebp
divl
lret
mov
shr
iret
repz
lret
rcr
add
dec
fsub
loope
call
lret
in
lock
mov
fdivr
add
decl
push
clc
jecxz
psrad
into
fsub
leave
mov
fadd
mov
cmc
leave
aam
testl
lret
fchs
jmp
repz
mov
mov
fsubp
ret
fildl
aad
cmc
out
iret
shl
ret
xlat
jmp
in
xlat
iret
mov
lret
std
jmp
mov
rcl
in
push
fmuls
rol
repz
iret
inc
jmp
jecxz
add
stc
mov
rol
fmuls
repz
pushl
mov
lret
icebp
jmp
hlt
ret
clc
cld
xlat
add
std
fsub
lret
fisttps
in
scas
mov
mov
sti
ljmp
icebp
add
enter
ljmp
mov
cli
enter
aam
ljmp
add
les
mov
shl
stc
lock
sar
loope
in
enter
icebp
ret
lds
fdiv
mov
hlt
not
mov
jmp
add
test
jmp
in
cld
mov
ret
mov
neg
leave
pmaxub
les
fisubrl
sti
enter
lock
in
lret
mov
stc
push
add
pop
push
clc
pop
out
push
add
in
shl
int
in
xlat
into
mov
in
idiv
call
in
fdivrp
loopne
cld
out
jecxz
cld
add
loopne
movsl
in
in
mov
in
shlb
iret
icebp
repnz
out
lock
add
jecxz
clc
iret
out
shl
call
cli
cmc
leave
sarb
into
shl
fadd
jmp
or
enter
mov
hlt
jmp
cmc
rcr
mov
int3
lret
loopne
in
aad
in
in
into
fsubrp
imul
leave
scas
mov
mov
repnz
mov
cld
leave
push
int
ljmp
in
icebp
sar
mov
aam
fsub
hlt
repz
lock
fiadds
int3
in
shl
lods
rol
stc
fcmove
int
iret
mov
int3
repz
out
stc
in
or
adc
stos
shl
repnz
cli
div
jmp
add
add
jmp
not
jecxz
repnz
lds
int
sar
iret
shl
add
stc
std
rcr
lret
fldlg2
sti
rcl
fsubr
aam
shrl
mov
loopne
in
decb
jmp
clc
jmp
repz
mov
xbegin
int
fcmovnbe
loop
cli
not
cmc
push
enter
out
ljmp
in
ljmp
pop
clc
repnz
lret
lret
out
ror
int
out
jmp
mov
cli
cli
clc
int
hlt
aam
add
add
mov
add
loopne
in
jecxz
int
lods
mov
int
ljmp
aad
add
out
loope
in
lret
in
loop
mov
hlt
lret
enter
ret
loop
mov
fimull
add
add
shr
fdivrl
out
leave
mov
or
mul
jmp
icebp
shrb
jmp
mov
cli
jmp
lock
in
fadds
push
lret
hlt
fldl
or
fmulp
cmc
fucomi
in
repnz
iret
fmul
into
shl
idivb
add
out
mov
mov
call
mov
stc
pop
idiv
pop
not
cld
fmull
fcmovnu
add
out
leave
loop
lret
sarb
xlat
icebp
aad
sti
add
dec
test
in
jecxz
xlat
out
enter
xlat
in
mov
int3
cld
aad
fiaddl
cli
loope
repnz
in
clc
or
repz
loop
int3
call
cli
call
fnstsw
lret
jmp
or
ret
sar
ror
repnz
fstp
loope
fcomi
add
repnz
in
out
mov
leave
int
out
cli
fyl2xp1
out
int3
mov
loop
fldln2
or
mov
loopne
fcmove
out
mov
mov
repz
out
pop
out
aam
ror
jmp
mov
vpand
in
lock
shl
lock
testl
call
mov
out
mov
shr
int3
int
std
push
lock
add
in
out
stos
call
leave
lods
in
leave
std
test
loope
out
ret
fdivp
fsubrp
fistpll
aad
in
lret
lock
test
movb
add
call
jmp
in
mov
jmp
lret
ror
add
lock
shl
add
ffree
leave
loop
out
mov
mov
out
ljmp
in
cmc
call
lret
cli
rol
out
div
out
in
in
mov
in
out
int3
std
shl
rcr
stc
or
ret
out
or
mov
aam
mov
jmp
jmp
fadd
into
stc
loopne
repz
loopne
or
cmc
psubw
rcl
loope
cmc
loope
stc
rcl
cmc
aam
mul
in
stc
sarl
or
enter
add
cmpsb
in
in
icebp
lock
in
lret
fcmove
div
leave
jecxz
clc
add
fidivrl
out
stc
loopne
test
mov
mov
lock
neg
mov
add
fadd
std
call
aad
fucomi
enter
in
call
xlat
add
stc
xlat
aad
loopne
lods
divl
hlt
aam
mov
loope
div
aad
fsubrp
fcmovnb
or
push
leave
lret
out
scas
jmp
in
iret
shll
mov
clc
fcmovbe
loopne
sar
push
fldpi
call
rcr
test
ret
int3
shl
hlt
rcr
std
xlat
sti
xlat
add
add
or
add
stos
ljmp
mov
repz
mov
clc
stc
cld
cli
fcomip
add
stc
ljmp
into
loop
les
cmc
cmc
jmp
rorl
fdivr
add
add
fdivrp
lret
call
out
int
leave
repz
push
sarb
in
std
bswap
add
mov
lods
call
fidivrl
std
roll
sarb
or
repz
lret
leave
out
call
fucomip
jmp
roll
rol
in
loop
lret
enter
mov
mov
not
ljmp
rolb
cld
rorb
out
int3
add
mov
mov
rol
std
mov
idiv
int3
int
mov
or
bswap
clc
jmp
into
loopne
xlat
icebp
shr
xlat
mov
mov
stc
rcr
mov
jecxz
add
jecxz
rol
iret
in
jmp
fxch
out
fcmovbe
sar
iret
fldl
mov
cld
in
in
jmp
icebp
jmp
int
stc
mov
cmc
cli
mov
cli
sti
in
flds
add
aad
add
loopne
loopne
lods
fucomp
icebp
fcomi
loop
in
in
out
stc
mov
shl
repnz
add
add
jmp
lods
mov
stos
cmc
leave
hlt
mov
jmp
icebp
clc
rcl
out
xlat
cli
incl
fdivrp
loop
out
or
repnz
vshufps
mov
fdiv
ret
lds
push
imul
out
jecxz
rcl
mov
jecxz
mov
sar
mov
repnz
mov
cmc
add
or
stc
out
jecxz
fucomp
repz
mov
ffree
mov
add
cli
or
stc
shl
int3
shll
shl
hlt
lock
fbstp
stc
mov
out
lret
in
add
in
iret
lods
leave
in
repnz
lock
lret
mov
ftst
aad
loopne
cmc
les
jmp
fmulp
idivl
int3
in
ljmp
in
icebp
add
cli
fnstcw
in
leave
shr
sar
icebp
shlb
cli
fdivp
add
out
icebp
stc
fldl
fsub
ud0
enter
fmulp
shll
fcmovnbe
stc
loop
shl
std
mov
mov
repz
leave
xlat
icebp
mov
shl
lret
mov
repnz
cld
hlt
rcr
in
clc
out
in
test
int3
jmp
out
mov
jmp
lock
enter
ret
clc
or
enter
sti
cld
fnstcw
in
into
iret
out
in
bnd
add
mov
shl
ret
mov
out
in
jmp
test
iret
in
in
aam
jecxz
mov
ffree
pandn
in
add
fsubp
lret
mov
hlt
mov
lret
sar
rcl
divl
loop
or
fucom
call
iret
in
int
ret
call
clc
fsub
mov
icebp
add
add
lret
psllw
in
loopne
shrb
mov
int
into
icebp
lock
out
jecxz
lods
lds
repz
mov
fistpll
leave
out
into
push
out
pop
mov
shrb
mov
add
out
repz
lock
add
clc
cld
int3
rol
out
mov
lret
leave
cld
in
jmp
mov
loopne
shl
in
add
loop
repz
scas
mov
fcmovbe
cmc
mov
out
cmc
mov
cld
loopne
add
or
jmp
int3
loopne
leave
hlt
shll
shl
add
mov
add
loopne
in
icebp
mov
jmp
push
add
fsubp
into
jmp
ret
sti
enter
mov
loope
lock
or
lret
pmullw
add
jmp
mov
in
in
in
mov
ret
stc
int
in
mul
or
add
adc
sti
jmp
fptan
mov
out
mov
rol
mov
add
loopne
divl
mov
repz
add
sarl
fxch
out
fcmove
in
stc
jmp
out
mov
repnz
in
loope
int
fcmovnbe
movb
add
mov
stos
shlb
shlb
incl
fcomp
rol
clc
or
or
ret
out
enter
int3
cli
cli
mov
fadds
stc
out
loopne
dec
jmp
in
icebp
xlat
rol
in
iret
mov
icebp
aad
pop
lret
fcmove
into
in
call
rol
mov
out
clc
fcomp
ret
mov
mov
ffree
int
mov
jmp
mov
aam
xlat
in
add
jmp
out
lret
or
bnd
shll
in
clc
repz
in
into
enter
ffree
aam
fucomp
or
ret
mov
in
jmp
idiv
leave
repz
sar
push
out
sar
les
jecxz
in
rcl
scas
enter
faddp
jmp
clc
call
jecxz
hlt
call
loopne
out
jecxz
mov
mov
rol
int3
ljmp
cli
stc
mov
jmp
rolb
fcmove
mov
fst
aad
sti
loope
mov
mov
sti
add
stc
pop
fucompp
repnz
hlt
repnz
jmp
mov
int3
clc
push
loop
loopne
cli
sti
jecxz
push
rol
int
loopne
mov
cli
shl
fptan
fnstsw
add
hlt
faddl
cmc
leave
ljmp
scas
lret
out
sar
leave
imul
rcr
repnz
mov
call
int
cli
ror
leave
rcr
shlb
rcr
shl
shl
stc
stc
sar
in
add
test
repnz
leave
mov
icebp
mov
pop
neg
aad
add
fsubrp
cli
or
int
mov
repnz
fcmovb
dec
sti
ror
loope
add
imul
or
repz
mov
mov
enter
iret
mov
rol
push
fcmovu
fcmovnu
pminub
mov
mov
int
mov
loopne
cli
icebp
add
loopne
jecxz
loop
in
cmpsl
out
icebp
mov
not
out
fcmovnu
imul
repz
sar
fst
add
add
ljmp
scas
ljmp
in
div
cmc
fistpll
jecxz
fcmovb
lret
or
mov
out
repz
leave
ror
cld
add
cli
shl
add
cmc
loope
jmp
les
fsub
mov
xlat
mov
not
push
clc
ffree
cli
fdiv
int
add
loope
mov
out
int3
mov
sti
ret
shl
repz
testl
ret
int3
enter
jmp
lret
mov
clc
roll
pop
loopne
hlt
stc
movb
rol
lods
mov
in
int3
jmp
sti
mov
aam
in
sti
push
fcmove
bswap
jmp
in
loope
int3
aam
cli
out
int3
in
mov
aad
sarb
sti
jmp
loop
in
leave
fsub
in
test
mov
ret
clc
aad
rcr
xlat
add
ljmp
in
loop
leave
ret
jecxz
in
mov
in
in
testb
add
cld
sti
rcl
repnz
ret
cli
fstp
std
paddusw
fmul
test
hlt
xlat
in
mov
out
add
mov
loop
repz
mov
shl
repz
enter
iret
out
ret
stc
loopne
cli
fsub
fimuls
mov
out
iret
enter
hlt
mov
aad
out
fdivp
cld
call
loope
out
fsubrp
mov
cmc
rcl
mov
stc
aam
call
fsubrp
mov
fcomip
psubd
add
shl
aam
mov
div
into
mov
int
mov
std
rolb
lock
call
enter
jecxz
les
repz
fcmovnu
pop
add
loop
add
cli
or
sti
stos
sarl
divb
shl
repz
aam
fstpt
leave
ftst
loop
out
iret
shr
loop
mov
xlat
fcomip
shl
std
out
out
mov
sarl
in
ljmp
ljmp
in
fdivrl
flds
add
loope
enter
loop
iret
lock
out
out
call
jmp
in
loop
ljmp
lret
loope
loop
mov
in
in
sar
in
in
jmp
in
jecxz
std
in
pop
hlt
aad
movl
std
lock
iret
aam
mov
xlat
lock
stc
fcmovu
rolb
fucom
in
fldl
in
int3
mov
icebp
cmc
mov
mov
sti
loop
rcl
jecxz
loope
neg
loope
call
ror
lock
cmc
cli
sar
aad
fsubp
rcl
out
mov
std
or
add
push
ljmp
mov
enter
cld
std
stc
out
idivl
fisttpll
ret
add
or
mov
cli
into
ljmp
mov
sar
loop
std
jmp
ret
enter
rol
int
repz
cli
rcl
mov
or
out
test
fidivrs
int3
mul
mov
std
in
not
ljmp
call
int
repz
jmp
jmp
mov
push
mov
pop
mov
paddsw
in
call
repnz
lods
mov
add
fcomi
out
fstpt
aad
aad
push
add
or
mov
shrl
iret
mov
ret
std
ffree
in
xlat
aam
stc
add
shr
jmp
repz
call
xlat
in
cmc
rcl
mov
out
aad
add
in
lods
test
mov
neg
in
lret
xlat
mov
repnz
rol
std
in
rol
repz
jmp
mov
sbb
nop
jmp
mov
xor
jmp
cmp
inc
inc
push
push
cmp
xchg
movsb
mov
or
add
mov
sar
jmp
jmp
push
enter
leave
out
test
aad
int3
in
cmc
imul
int
shl
mov
enter
sti
leave
in
in
fadd
fcmovnb
mov
rcl
ret
fst
add
xlat
out
hlt
add
ret
lret
repz
lods
enter
int3
lods
stc
lock
iret
mov
f2xm1
mov
fcom
out
cmc
into
aam
pop
repz
jecxz
loope
aam
repnz
add
add
loope
add
push
jmp
shl
fadd
out
loop
into
mov
lret
cli
lret
icebp
loop
mov
rcr
jmp
paddd
lds
out
fxch
std
fbstp
int
fadd
in
sti
rcr
aam
leave
shrl
in
sti
in
mov
aam
add
fnstcw
aam
loopne
or
into
loope
rcl
lret
call
aad
in
sti
jmp
or
iret
loopne
cmc
iret
jmp
shlb
shr
fidivl
loope
incl
clc
int
mov
shlb
into
cld
mov
mov
out
aad
or
fscale
leave
iret
cld
fcmovb
call
rcl
mov
mov
mov
pop
mov
pop
aad
stc
sti
rcll
into
fadd
xlat
mov
stc
in
lods
mov
sti
add
mov
add
jecxz
in
rcr
fsubrl
aad
call
sarl
roll
mov
or
add
shrb
into
int
in
jecxz
loope
fsubp
aam
mov
pop
jmp
ljmp
sti
mov
repz
shl
cld
fldln2
icebp
mov
lret
clc
sti
fiaddl
int3
stc
loop
repnz
int3
in
repnz
lods
idivb
pop
add
lret
add
cld
jmp
shl
out
ret
out
sarl
imul
icebp
jmp
push
faddl
aam
out
out
aam
repz
lods
icebp
test
lock
cli
add
mov
int3
or
hlt
aad
out
push
lds
leave
fidivs
int3
jmp
repnz
rol
out
add
int
into
jmp
jmp
clc
hlt
fdivrs
cld
sar
out
jmp
fnstcw
mov
jmp
in
mov
loop
fdivp
mul
cmc
call
in
vcvttpd2dq
int
repz
stc
fcmovnu
aam
push
out
mov
fsub
out
int3
ret
jecxz
xlat
int3
jmp
rcl
leave
lods
mov
neg
int3
repz
shl
jmp
sar
clc
lds
out
mov
jmp
sti
mov
lret
std
mov
rcr
clc
in
enter
fsub
mov
jecxz
mov
rcr
ret
add
mul
out
pop
sar
cli
or
or
loope
shr
mov
aad
shr
mov
shl
xlat
jmp
add
ljmp
sti
mov
lock
fdivrp
leave
sti
add
fcmovbe
or
fisttps
sti
fmul
loop
test
lock
mov
jecxz
add
loopne
cld
repnz
loopne
in
pand
in
int3
ror
lods
imulb
fst
repnz
mov
incl
or
test
les
out
lods
mov
repz
in
ffreep
aam
std
mov
fnstcw
clc
lret
cld
mov
loopne
out
idiv
enter
add
hlt
mov
out
shr
rolb
fsub
out
shl
shr
jecxz
lods
jmp
mov
add
int3
loopne
mov
loopne
out
in
cmpsb
ret
movsb
fucomp
leave
xlat
jmp
int3
shlb
mov
call
cli
cld
in
mov
in
aam
pushl
mov
add
fcmovnbe
in
push
mov
mov
mov
test
mov
jecxz
fadds
add
iret
clc
cli
or
or
xlat
int
int
loop
ror
jmp
in
sti
mov
lock
fsub
in
clc
in
test
fcmovnbe
enter
ljmp
add
rcl
iret
leave
ljmp
lds
mov
ret
out
lds
ret
add
leave
in
lret
ret
xlat
in
filds
aam
loop
std
out
frndint
xlat
sti
add
les
cmpsl
mov
scas
mov
in
shl
shr
mov
rolb
add
clc
fcom
out
call
mov
aad
int3
stc
clc
fsubrp
mov
in
fdecstp
mov
jmp
add
aam
lret
shrl
into
out
std
shr
hlt
xlat
fdivp
int3
roll
or
fadd
or
in
shl
out
fnstenv
std
stc
mov
icebp
rcl
xlat
std
ret
push
in
add
fdivrl
ror
int3
cli
ljmp
stc
imul
loop
mov
in
flds
loop
in
leave
xlat
loop
shll
cli
jmp
in
aad
clc
add
std
std
incl
in
mov
fsubrp
out
shlb
out
clc
call
cmc
jmp
cld
or
stc
pop
rol
mov
test
jecxz
mov
lret
cld
rcl
loopne
cmc
in
frstpm(287
or
add
in
test
icebp
icebp
cli
shl
rcr
out
cmc
loopne
fst
cli
ret
lock
add
add
stos
lods
loope
scas
mul
clc
icebp
cli
std
mov
rcr
loope
add
sti
out
fdivr
jmp
in
mov
mov
cmc
mov
clc
mov
mov
out
aam
out
or
out
ljmp
out
icebp
xlat
leave
sar
out
into
icebp
fcmovu
add
hlt
cmc
jmp
sti
jmp
out
scas
mov
mov
out
in
mov
fptan
out
int3
loope
fimuls
loop
in
adc
mov
divl
fcomip
cli
mov
xlat
fmul
cmc
hlt
jecxz
leave
cld
les
iret
stos
in
mov
icebp
aam
fcmovne
lock
div
repz
stc
fdivp
testb
paddw
incl
adc
int
loope
mov
cli
cmc
leave
fcomi
mov
mov
sar
out
out
std
push
fadds
fsubrs
lock
repnz
aam
rol
pop
fdiv
icebp
out
add
out
in
ret
call
loope
out
aad
aad
repz
mov
jecxz
std
xlat
out
or
fiaddl
shl
call
divb
fxch
mov
cld
fmulp
in
or
jmp
ljmp
into
clc
add
repz
std
in
fprem1
lock
clc
lret
in
fsub
stos
sti
ror
neg
leave
in
call
cld
std
shr
sti
out
loopne
out
into
out
mov
sar
xlat
leave
iret
out
aam
aam
cli
sarl
or
repz
mul
fcmovnbe
out
lret
dec
mov
cld
pop
add
repnz
rol
in
stc
test
in
lods
loopne
rcl
cmc
mov
mov
shl
loopne
jecxz
out
or
clc
or
adc
repz
enter
ret
rcl
fsubr
clc
std
fcmovb
add
ljmp
aam
repnz
repz
loopne
lret
mov
fcmovne
int3
loop
add
fcmovb
lret
leave
jmp
fcom
test
int3
out
lock
mov
aad
cli
shl
jecxz
cmc
call
in
loop
fst
leave
imul
ljmp
stc
rolb
filds
sti
loop
lret
push
push
or
jmp
in
shr
repz
jmp
xlat
ret
xlat
icebp
aad
rol
fdivrp
jmp
int3
out
lods
in
int
mov
mov
jecxz
mov
jecxz
or
add
out
jmp
xlat
lret
ret
scas
mov
in
ror
lock
in
jmp
in
lds
fst
movsl
in
out
shl
repz
mov
fcmovb
out
loope
jecxz
in
cld
call
fsubrl
jmp
divl
lds
aam
int3
ror
jecxz
lock
mov
fucom
enter
in
shl
add
roll
loope
call
fisubrs
enter
lret
in
leave
iret
mov
icebp
fcom
in
lret
add
ljmp
shll
lret
enter
std
mov
mov
fimull
ret
rcl
ret
mov
fcomi
xlat
fdiv
sti
loope
in
neg
out
in
loop
or
loop
mov
mov
jmp
std
fdivrp
mov
lock
in
add
std
cli
not
out
leave
add
stc
ljmp
loop
shll
lret
rcr
fucom
xlat
or
sar
int3
iret
not
mov
rcl
int
fcomip
cmc
in
call
jecxz
add
add
in
mov
lret
iret
sar
ljmp
mov
rol
jecxz
add
cld
add
fndisi(8087
mov
int
ljmp
ror
add
out
mov
out
les
fucomi
stc
iret
rcl
repz
cli
in
in
int3
sti
aad
loope
enter
leave
idivl
int3
fcmovb
fistpll
mov
shr
rcl
fsub
or
loop
in
shlb
enter
mov
lock
fnstcw
or
scas
fnstsw
in
stc
repz
lret
fcmovnu
loope
loopne
loope
loopne
add
out
ljmp
in
int
sar
aad
clc
mov
cld
fcomi
fidivrl
loope
cld
int
shl
int
out
jmp
repnz
mov
mov
repnz
iret
add
sti
icebp
fadds
mul
decb
cli
add
loope
lods
repz
jmp
cmc
cli
rcl
mov
int
rol
loope
leave
fstp
flds
in
repnz
divl
mov
mov
cld
pop
call
in
loop
vpsadbw
mov
imul
out
ljmp
fcmovnu
mov
loopne
aad
in
hlt
add
loopne
leave
lret
mov
shr
call
std
loopne
aam
mov
fsubr
adc
loop
lock
out
iret
int
shl
in
mov
sti
fcomi
neg
out
fcomip
iret
in
test
scas
loopne
fcmovne
ftst
mov
mov
or
fcmovu
vpaddb
shl
jecxz
scas
mov
aad
rcr
hlt
fucompp
repnz
cld
cmc
hlt
jmp
testb
push
call
mov
sti
aam
stc
fucom
sarl
out
fmull
clc
leave
push
cld
in
loopne
ror
fcomip
int
in
into
in
fcmovbe
mov
shl
fcmovu
fstp
push
add
add
push
enter
fsubrp
call
mov
ljmp
sar
aad
ljmp
in
scas
shlb
repz
int3
repnz
repnz
fcmovnu
dec
add
flds
pop
fmul
ret
aad
sti
aam
out
int
out
ret
shl
add
hlt
add
into
shlb
mov
mov
in
or
inc
vcvtdq2pd
call
leave
hlt
idiv
shl
into
rolb
out
out
rcr
cli
fcomp
pop
or
shll
mov
enter
rcr
lret
filds
add
in
add
fdiv
flds
fdivrl
jmp
mov
incl
out
out
fcmovnb
rcl
cmc
sti
push
mov
aam
cmc
sti
call
int
jecxz
mov
add
push
in
loop
out
shl
test
icebp
into
lret
mov
shr
les
ret
lret
int
rol
scas
loope
int3
mov
cmc
clc
into
repnz
sar
fmul
in
mov
dec
add
add
scas
scas
int3
rep
cli
out
fldlg2
fsubp
neg
ffree
in
stc
int3
mov
jmp
sti
or
ljmp
call
sar
mov
sti
ffree
fdiv
loope
loop
loope
icebp
out
into
enter
loopne
rcr
shl
iret
mov
vpaddusb
add
or
jecxz
fmul
out
div
out
shr
in
mov
sarb
mov
out
jmp
ror
mov
mov
sti
fnstsw
rcl
lock
or
in
add
mov
lods
mov
shrb
add
rol
out
fildl
or
imulb
ror
sti
ljmp
in
loop
cli
fsubp
enter
test
mov
mov
rcl
clc
loope
icebp
lock
fildl
fiaddl
ffree
pop
fucom
jmp
mov
int3
mov
repz
fnstcw
clc
rcl
cmc
ljmp
add
lret
iret
in
mov
mov
mov
int
cmc
add
vcmpsd
sti
out
add
rorl
test
int
hlt
test
fcmovnbe
cli
loop
cli
aad
ret
ljmp
out
repz
mov
mov
mov
ror
jmp
fdivp
pop
in
aam
ret
hlt
add
out
fucomip
in
jecxz
repz
mov
rcr
icebp
faddp
rol
lret
fld
in
add
in
fucomp
int
out
out
into
aad
iret
mov
ror
pop
std
call
call
int3
int
lock
inc
fsqrt
out
neg
add
cli
loop
fiadds
adc
jmp
ret
leave
idiv
stc
stc
ret
repz
fsubr
loopne
mov
lock
mov
hlt
std
fcmovbe
stc
mov
cmc
cmc
add
loope
xlat
int
call
int
out
enter
call
pop
test
lret
add
out
dec
enter
rol
mul
cmc
fxch
in
icebp
xlat
mov
hlt
in
jmp
out
mov
in
lret
repnz
into
fnop
jmp
repnz
repnz
clc
in
or
rcr
mov
test
out
aam
fdiv
out
fucomi
out
loopne
idivl
lret
or
repz
out
jecxz
mov
int3
jmp
stc
neg
in
fsubp
in
mov
lock
or
adc
in
mov
iret
cmc
icebp
dec
hlt
mov
loop
shl
add
out
in
stos
shl
rcl
mov
aam
repz
cld
in
ret
mov
in
out
repz
jecxz
mov
call
into
fnstsw
enter
int3
fsubr
sar
bswap
push
clc
in
mov
lock
imull
fcmovbe
xlat
rcl
fdivrp
testb
mov
cli
in
fldl
or
divl
in
neg
xlat
int
mov
jmp
add
or
int3
div
loop
xlat
enter
mov
enter
loop
cld
stc
in
cld
push
out
roll
xlat
test
lock
aam
repnz
stc
or
incl
jmp
lret
fdivrs
iret
int3
aad
cld
mov
add
cmc
shl
fmuls
in
out
iret
push
lock
ror
enter
aad
mov
test
ret
add
div
lds
repnz
test
out
out
in
lret
mov
icebp
call
out
sar
add
leave
stc
fmul
fstp
bswap
xlat
iret
mov
in
into
rcl
in
icebp
aad
cli
movl
in
or
repnz
lret
in
hlt
hlt
mov
fcmove
fmul
fdivs
rol
flds
or
add
pop
ljmp
in
aad
enter
jmp
clc
aam
out
std
clc
aad
call
or
repz
in
out
mov
out
xlat
or
jmp
out
xlat
mov
icebp
mov
out
xlat
fcmovnbe
mov
shl
sarb
add
enter
call
rcl
ret
mov
mov
divl
not
fcmovb
lret
rcl
enter
in
lock
int3
fadds
mov
or
pop
loopne
loope
in
fidivs
hlt
call
sar
iret
out
cmc
push
inc
aam
mul
cmc
pavgb
in
jmp
test
cli
jmp
stc
out
sti
mov
aad
fdivp
clc
pop
add
cmc
stc
rcl
repz
mov
pop
cli
loopne
sti
in
in
lret
fisubrs
ror
mov
call
add
icebp
sti
roll
push
int
in
scas
mov
into
out
int
ror
cli
rcl
fcmovu
stc
jecxz
cmc
add
or
jecxz
paddb
fsub
out
mov
scas
lods
shl
test
mov
iret
jecxz
imul
stc
ffreep
push
xlat
pop
jecxz
call
mov
loope
loopne
clc
iret
lret
mov
lock
fildl
add
add
loope
fsubr
mov
iret
lock
in
shll
loop
fdivr
cld
fsubp
add
sti
in
into
ljmp
icebp
scas
enter
mov
icebp
enter
int3
xlat
pop
cli
fdivr
fsub
push
or
fst
out
jecxz
out
jmp
repz
out
mov
iret
push
add
ret
or
fisttps
into
or
loope
in
ffree
leave
in
mov
int3
aad
in
jecxz
not
jecxz
in
fcmovnbe
mul
loopne
out
fsubrl
loop
ret
in
sar
sti
sarb
fadd
test
out
into
loopne
ror
ljmp
xlat
mov
in
repz
mov
loope
call
out
shl
fdiv
in
into
stc
mov
iret
fcmovne
add
les
jecxz
cld
add
stos
out
in
ret
enter
jmp
clc
xlat
mov
roll
add
in
out
cmc
add
or
lods
jecxz
loope
aam
shr
ljmp
rcl
xlat
shr
leave
hlt
clc
cld
fldl2e
lret
fsubr
mov
fldl2e
mov
ljmp
add
idiv
lret
std
cld
fldl
test
test
fxch
jmp
stc
fprem
repz
ljmp
hlt
or
call
mov
sti
lock
cld
jmp
std
pop
aam
hlt
jmp
fiaddl
or
ljmp
sti
imul
in
mov
cli
loop
into
loop
roll
clc
fcmovne
stc
shr
mov
loop
out
mov
repz
in
add
rcl
leave
wbinvd
out
enter
lods
mov
mov
int3
ror
xlat
fmul
mov
add
pop
sar
push
or
iret
lret
enter
fmulp
aam
lret
fsub
aam
rcr
or
std
fdivr
jmp
repnz
mov
in
rcl
leave
out
fdivp
aad
sti
loop
mul
ror
fldl
cli
enter
xlat
shl
icebp
lret
shr
mov
fucomip
stc
mov
rolb
into
repz
loop
add
sti
std
int
or
ret
in
shr
jmp
in
sarl
out
shl
rol
out
add
iret
jmp
movsb
repnz
mov
jmp
fnstsw
into
les
stos
jmp
rcl
mov
mov
jmp
in
pop
add
lock
call
repnz
cmc
out
fdivs
aad
xlat
add
jmp
loop
leave
or
in
mov
leave
jmp
jecxz
mov
jmp
shl
repz
lret
enter
xlat
in
std
loopne
lock
add
mov
loop
loope
in
repnz
mov
mov
in
out
std
or
repz
repnz
icebp
mov
xlat
hlt
aam
lret
rcr
ljmp
repz
or
scas
mov
repz
iret
lret
stc
jmp
out
xlat
int
lret
jmp
loope
sti
or
roll
loopne
lret
repnz
mov
mov
lock
out
add
loop
loope
mov
loop
int3
fcomi
shl
loope
mov
push
stc
fld
push
ljmp
rcl
div
loop
aad
xlat
rcr
mov
mov
fdiv
out
jmp
or
call
test
cld
lret
out
loop
repnz
jecxz
or
les
enter
ret
fsubr
test
fcmovne
int
add
rcr
shl
sti
fcomp
call
int
scas
enter
out
push
aad
jmp
out
jmp
fucom
clc
in
dec
mov
aam
repnz
stc
iret
cli
mov
ret
in
rcr
fadd
loopne
leave
in
sti
add
shrb
lock
mov
sarb
push
fsub
lret
fsub
in
int
in
fyl2x
in
ret
sar
aad
aam
push
or
push
fstp
icebp
loop
int3
fst
lods
stc
cmc
jmp
call
rol
lock
rcl
add
add
or
clc
ljmp
leave
mov
out
loop
repnz
sti
fcomi
loop
fcmove
jecxz
lret
int3
sarl
ret
mov
sarb
add
cli
hlt
pop
out
fcoms
lret
mov
int3
jmp
mov
filds
icebp
add
loop
adc
into
test
lret
cli
iret
lret
lret
add
mov
faddl
sar
fdivp
or
loopne
call
lret
sti
mov
loop
ret
fcmovnbe
in
loop
add
in
repz
mov
in
call
mov
fdivp
clc
pop
add
fildl
lret
push
add
lods
in
jmp
cmc
div
into
fadd
jmp
into
int
aad
rcl
add
cli
or
int3
stos
repnz
scas
in
leave
cmc
lret
repz
add
fiaddl
out
fmull
jmp
out
in
call
div
loop
repz
mul
out
rcl
cli
cld
mov
cli
jecxz
stc
jecxz
or
loope
fucom
loop
out
out
in
repnz
xlat
fmul
std
faddl
aam
shl
cld
aam
std
in
shl
int
ret
jmp
ffreep
ljmp
fsubp
sar
test
jmp
in
lret
mov
loop
lret
aam
mov
fldl2t
fidivrl
stc
or
jmp
shl
in
in
xlat
call
mul
int
sar
fchs
mov
jmp
mov
iret
out
loopne
in
mov
ror
mov
in
cmc
add
jmp
les
shll
enter
repz
out
fdiv
add
sarl
enter
jecxz
cli
int3
jecxz
loope
mov
ljmp
repz
rcl
sar
push
call
enter
test
int
shlb
out
repnz
jecxz
enter
psllq
in
jmp
enter
into
stc
repz
sar
add
ret
or
or
call
jmp
mov
test
fyl2x
out
aam
sar
pop
leave
iret
cld
fsub
ftst
scas
in
divl
mov
mov
fsubr
rol
cld
shl
sti
add
lds
decb
iret
shl
lods
mov
in
fmul
idiv
call
aad
aad
or
hlt
aad
fimull
int3
fadd
imul
fcomi
repnz
in
lret
in
xlat
rcr
in
out
fucomi
aam
add
add
icebp
icebp
into
cmc
div
loopne
in
lds
sti
mov
in
add
call
inc
loopne
int
loopne
ror
int3
mov
ror
jmp
fcom
iret
out
repnz
neg
cld
jecxz
iret
add
or
in
lret
out
out
shr
mov
sarl
icebp
mov
hlt
fucomp
or
lock
lret
cli
test
jmp
mov
add
ljmp
out
lods
repz
jmp
in
int
fstp
ror
fsubp
repnz
add
sti
pop
aad
in
call
mov
aam
call
jmp
mul
xlat
clc
pop
clc
out
lret
pop
add
jmp
add
out
call
mov
fcmovne
fsubr
int3
repz
psadbw
loop
or
out
int
in
fadd
mov
int
shl
jmp
repz
lock
or
rcr
iret
add
shrb
mov
test
into
shr
mov
icebp
add
neg
leave
jmp
in
lock
rol
out
cli
iret
iret
in
jmp
mov
xlat
fdivr
fsubp
std
into
add
rcr
rcr
in
out
into
int3
fxch
lret
std
add
fiadds
ljmp
cld
std
rcr
mov
ljmp
shr
leave
mov
testb
mov
int
out
call
loopne
lret
mov
cmc
aad
xlat
icebp
hlt
out
lret
cmc
leave
in
int
out
shrl
stc
in
rcl
into
sarl
add
loop
std
add
iret
add
in
into
rcl
aad
leave
mov
jmp
ret
mov
clc
ljmp
jecxz
mov
ror
into
jmp
call
mov
lret
loop
leave
out
icebp
lock
sarl
aad
leave
clc
mov
in
filds
ret
ret
clc
fmul
fcmovnu
adc
loope
loope
loope
int3
in
imull
fcmovnbe
hlt
fsubr
ret
aam
stc
fcmovnb
add
clc
clc
lret
shrl
fucomi
jmp
fxch
aam
fucomip
test
repz
aam
pop
loopne
or
test
out
ljmp
in
mov
mov
ljmp
lock
ret
fcmovb
int
fmul
std
div
std
icebp
mov
out
push
imul
paddw
add
stos
mov
jmp
shl
fiadds
lock
add
fcomip
ror
sti
clc
psubsb
rol
std
fsubr
fcomp
add
fdivrs
stc
sti
loope
std
scas
loopne
loopne
jmp
aad
cld
mov
ret
enter
loop
stc
fmul
add
repz
shlb
test
lret
shl
rol
cld
out
shl
rcr
cli
iret
adc
lret
mov
out
ror
mov
repnz
ret
add
lock
fadd
fsubp
icebp
mov
lock
aad
int
shl
lock
mov
loop
aam
loop
mov
shrb
lret
cmc
fcom
repz
cmc
or
fcmove
in
shl
icebp
enter
shl
mov
fcmovnu
aam
clc
loope
mov
ljmp
mov
hlt
mov
repnz
fsubr
out
fsub
fdivr
fcmovnbe
loope
std
rorb
or
iret
out
loope
int3
mov
aad
rcl
fucomi
mov
mov
add
fcmovbe
lret
hlt
leave
or
cld
in
mov
out
imul
mov
jmp
dec
pushl
sar
or
in
fyl2xp1
rol
mov
iret
mul
hlt
aad
ror
fnstcw
fstpt
fnstsw
flds
fmul
in
int
in
shl
mov
mov
hlt
fiadds
clc
in
movl
test
in
mov
into
lret
repz
loopne
mov
ljmp
lret
movsb
into
repnz
mov
idiv
repz
ret
or
ret
out
aam
into
add
or
enter
stos
mov
repnz
enter
fcomp
pop
int3
sar
add
add
cli
add
fsubr
cld
int
icebp
out
leave
ret
mov
out
icebp
aam
hlt
fsub
fadd
add
ffree
add
movb
jmp
xlat
rcl
lods
loopne
repz
add
shl
loop
repz
lock
out
cld
pop
add
leave
icebp
mov
fisubrs
imul
out
loop
idiv
mov
or
out
in
fyl2x
mov
lods
jmp
int
enter
clc
rcl
lock
add
shr
in
into
lock
lret
mov
loope
add
rcl
cmc
or
cmc
fiaddl
dec
fptan
lds
les
leave
mov
idivb
add
fiaddl
jmp
sarb
out
mov
lock
clc
or
add
call
test
in
fiaddl
pop
add
fst
pminsw
add
std
jecxz
ret
lret
leave
jmp
ljmp
rolb
repz
clc
ljmp
or
jmp
in
aad
xlat
repz
mov
rcl
repz
stc
stc
fldl2t
lods
lock
mov
mov
fsubr
jmp
fcmovu
fcmovu
lds
mov
int
add
loop
mov
test
sar
mov
into
frstpm(287
hlt
hlt
mov
aam
into
icebp
fldcw
out
loopne
mov
leave
in
aad
sar
add
mov
out
frndint
stc
cld
fnsave
lods
int3
aad
hlt
mov
mov
add
lock
fldlg2
jmp
mov
lret
scas
mov
shr
into
cmc
jmp
cmc
loop
fdivr
hlt
out
filds
cld
std
lret
out
shl
into
lock
sti
div
imul
int3
in
aad
mov
loop
or
wbinvd
lret
shl
mov
jmp
faddl
cli
cld
pop
int
int3
loope
jmp
call
fnstcw
in
repz
mov
clc
out
rolb
add
icebp
lret
push
aad
test
xlat
lret
mov
mov
sar
mov
hlt
shl
mov
hlt
fiaddl
out
or
mov
int3
mov
test
mov
sarl
loop
loopne
aad
hlt
rcl
hlt
pop
or
shl
hlt
into
mov
lock
sti
out
in
mov
or
fsubp
cld
std
loopne
movsl
cmc
loope
repnz
xlat
divl
repnz
fst
lret
loope
decb
loop
movsb
ret
xlat
lret
sti
out
iret
std
call
mov
movb
fucomi
adc
out
jecxz
shl
repnz
hlt
sti
int3
mov
in
in
add
out
pop
enter
loopne
mov
bnd
sti
test
test
add
add
add
fdivr
enter
out
int3
mov
lock
mov
rcl
rcr
add
inc
in
aam
mov
out
out
rcr
shl
faddp
in
not
in
test
int3
add
test
rcl
mov
ret
repz
shl
mov
out
mov
repnz
add
les
add
cld
frstor
leave
iret
aad
mov
repnz
mov
jmp
cld
fnstsw
int
cli
iret
loopne
out
mov
int
aam
mov
add
push
out
fimuls
or
scas
mov
out
mov
int
repnz
cli
incb
cld
icebp
lock
fprem
pop
faddp
scas
mov
enter
iret
in
pushl
fcmovb
mov
lock
fiadds
or
mov
aam
mov
cmc
mov
in
sarl
push
clc
fldl
in
mov
out
mov
out
mov
ret
shll
les
fmul
int
into
in
lods
shl
out
hlt
mov
lret
sti
inc
fnstcw
aad
fidivrl
or
icebp
jmp
shr
mov
call
cmc
fucomip
enter
dec
clc
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
adc
mov
lea
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
call
cmpl
jb
mov
adcl
mov
adc
movl
adc
movl
xor
lea
adcl
mov
mov
or
mov
xor
xor
mov
add
mov
sub
mov
movl
mov
xor
mov
decl
mov
inc
xor
mov
adcl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
lea
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
xor
dec
mov
jmp
mov
not
mov
xor
mov
xor
mov
negl
sub
and
mov
mov
adc
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
or
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
adcl
mov
sub
lea
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jb
mov
sub
mov
neg
mov
subl
sub
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
jmp
out
sub
add
push
js
or
jns
out
cwtl
jnp
fadds
ret
add
leave
fimuls
leave
iret
shr
repnz
mov
icebp
in
mov
icebp
repz
clc
repz
sar
fcmovu
out
or
add
mov
iret
ljmp
repz
call
test
out
fldl
loopne
mov
mov
in
fucomip
mov
aam
ret
sar
filds
add
loop
hlt
or
add
out
fcomi
rcr
mov
out
fnstcw
fadd
add
lock
aam
jmp
shll
jmp
lock
int3
mov
stc
test
in
or
call
jmp
div
icebp
mov
cli
jmp
cli
add
sar
mov
testb
add
enter
mov
in
into
jmp
test
shl
enter
rol
fimull
loopne
testb
or
mov
vpmullw
aad
hlt
mov
in
out
cld
icebp
loope
lds
lds
loopne
add
int
scas
mul
in
mov
in
mov
cmc
stc
jecxz
rolb
rol
iret
out
incb
out
rcr
ret
ror
repz
enter
std
add
cmc
rcr
ret
add
mov
leave
mov
out
std
mov
mov
int
cmc
add
fcom
ljmp
faddp
fsubp
jmp
lods
aam
mov
mov
loopne
fcmovnb
call
jmp
mov
mov
mov
mov
cld
pop
aad
out
add
loope
leave
iret
jmp
or
aam
call
out
lret
loope
mov
cld
fadds
out
cmc
add
out
repnz
scas
in
rcr
in
into
leave
fucomip
out
enter
ffree
cmc
fsub
test
out
call
mov
loop
in
cmc
sti
in
xlat
std
shl
not
icebp
cmc
ffreep
mov
jmp
push
adc
ret
xlat
into
call
jmp
xlat
fsin
mov
roll
fiadds
fildl
incl
add
repnz
lret
lods
enter
fcmovnu
shl
test
flds
add
push
fucomip
rcr
mov
rcl
jmp
in
fpatan
cli
fucomp
shl
mov
push
cmc
pop
fcmovnb
ror
mov
ret
out
enter
cmc
not
in
fsubp
fildl
mov
add
add
loope
in
mov
sti
mov
lock
loop
ffreep
std
or
fildl
loop
cmc
lds
leave
shrl
mov
mov
idivl
rcr
in
pop
out
jecxz
add
lret
mov
leave
loopne
mov
mov
stc
ret
add
aam
add
iret
int3
lock
fdivrl
rcl
les
cli
jmp
aad
enter
mov
mov
lock
hlt
aam
mov
fprem1
fdivp
fstpt
fucomi
or
fadd
lods
mov
in
in
iret
fdivp
cli
jmp
fisttps
aam
add
or
iret
lods
scas
lret
mov
icebp
div
mov
aad
sti
rcr
shl
testb
lock
jecxz
add
or
rcl
scas
mov
aad
mov
sarb
sar
fldl
mov
add
imul
or
in
scas
scas
lds
imul
mov
add
call
fucomp
out
fndisi(8087
cli
rcl
icebp
icebp
cmc
test
ret
int
add
repz
movb
ret
or
or
rcr
int3
mov
cli
aam
std
clc
stc
out
fiaddl
stc
aad
cmc
int
fsubr
mov
shr
jmp
rcr
jecxz
mul
shl
mov
cld
decb
int3
mov
not
in
in
mov
repz
ret
loop
add
out
mov
mov
clc
lock
mov
xlat
roll
loope
pminsw
iret
iret
lds
fcmovne
shr
fidivrl
incl
loope
in
jmp
ror
fucom
stos
mov
mov
scas
call
ret
testb
aam
push
in
xlat
leave
ljmp
out
aam
lods
repnz
call
bnd
clc
jmp
div
aam
or
leave
lret
mov
xlat
out
iret
into
rcr
fxch
lret
into
add
add
aad
in
out
aam
add
xlat
loope
scas
repz
in
scas
idiv
mov
into
mov
rol
fiaddl
in
push
out
add
ror
mov
in
rcl
ljmp
ret
out
lret
rcl
push
loope
lret
leave
mov
repnz
hlt
mov
fdiv
aad
ret
add
xlat
cli
cmc
add
add
fucom
out
mov
fucom
ror
mov
xlat
fldpi
aad
mov
add
jecxz
loop
jmp
iret
shl
mov
fcmovbe
mov
fnstenv
cli
int
shl
xlat
or
fdiv
enter
out
divl
mov
ror
fcmovu
cli
call
lret
clc
rcl
loopne
imul
lods
shlb
out
in
loopne
add
add
add
push
loop
adc
ret
mov
sar
mov
fldl
mov
cld
sti
ffreep
jmp
in
loope
hlt
sarb
int3
pop
repz
rol
fsub
cld
jmp
fmull
jecxz
loop
mov
aad
shll
leave
iret
out
push
fdiv
aam
inc
or
add
iret
test
movsl
enter
ljmp
jecxz
shl
loope
aam
jecxz
imul
or
fsub
loope
xlat
lret
sti
cmc
jmp
call
iret
iret
incb
jecxz
mov
rorb
leave
add
int3
in
int3
into
mov
fdivp
stc
not
in
mov
icebp
ret
or
call
into
lock
jmp
std
fcmovu
in
aam
rorl
add
clc
fiaddl
mov
mov
mov
hlt
into
hlt
ret
cli
fdiv
out
enter
cli
in
out
mov
repz
cli
xlat
fnstcw
cli
loopne
rcl
out
lret
fmuls
ljmp
movsb
int
idiv
lock
in
repz
ret
cmc
hlt
lock
lock
pop
aad
repnz
jmp
hlt
fisubrl
repz
fdivrl
jecxz
prefetchw
or
rcl
in
in
rcl
mov
add
mov
std
fiadds
neg
leave
fcomip
jmp
repz
int3
mov
lret
clc
icebp
mov
sar
aad
int3
mov
add
add
mov
out
hlt
out
mov
hlt
ror
sarb
sar
out
call
ljmp
aam
out
fadd
filds
int
aad
mov
dec
fmuls
mov
mov
iret
mov
rcl
lret
mov
shr
in
or
in
iret
repnz
repnz
mov
mov
fadd
cmc
vpmulhw
jecxz
clc
add
shl
repz
enter
fsub
mov
add
jmp
fadds
repz
loop
int3
repz
sti
loopne
leave
mov
clc
repnz
call
loopne
lret
lret
in
cld
push
loope
lods
stos
in
lods
lret
fcos
std
cli
les
fdiv
loop
mul
mov
iret
in
out
mov
fdiv
mov
leave
int3
mov
in
add
add
cli
rol
jmp
std
call
test
in
mov
stc
mov
lret
clc
mov
fucom
repz
enter
in
or
scas
mov
aam
int
jmp
add
hlt
fcom
in
or
in
leave
aam
or
jecxz
rcl
lret
fnstenv
imul
shl
loope
in
cmc
fsubrp
aad
fsubp
fiaddl
pextrw
mov
icebp
into
test
ret
loope
loop
ret
add
flds
or
fucomip
lods
shrl
out
mov
fucomip
in
idiv
rolb
fst
in
mov
or
jmp
pop
psrad
loopne
jmp
icebp
lock
jmp
stc
loop
dec
ret
ret
jecxz
or
or
out
into
loop
jmp
lret
hlt
repnz
fmulp
clc
cli
fcomip
in
add
add
stc
leave
lret
enter
in
mov
sar
idivb
hlt
out
out
mov
jmp
hlt
out
icebp
scas
int3
icebp
lret
ljmp
mov
rcl
shl
icebp
fcmovbe
mov
mov
sarl
neg
rcr
enter
lock
out
ret
loopne
lret
fmuls
scas
ret
call
mov
inc
icebp
xlat
jecxz
cld
ret
leave
loope
or
jmp
stos
mov
lret
in
enter
stc
in
std
ret
out
mov
add
idiv
ud0
out
test
ljmp
repnz
fxch
cli
cld
loopne
add
add
in
jmp
lods
shr
mov
out
rol
vpmovmskb
rcr
loop
loope
push
fucomp
adc
mov
shll
aad
cmc
idiv
lock
mov
rol
inc
fldpi
fabs
call
shl
out
les
hlt
loop
fcompp
icebp
add
add
sti
add
loopne
cli
int3
enter
aad
iret
cmc
shl
hlt
call
aam
jecxz
icebp
lock
decl
ret
mov
in
in
sti
mov
sar
mov
flds
push
sti
or
or
out
ror
shl
int
mov
loop
out
jecxz
fnstsw
add
clc
add
mov
jecxz
enter
test
mov
fiaddl
ret
fdiv
pop
clc
aad
ljmp
in
iret
aad
mov
ror
testb
repz
in
mov
jecxz
pop
lret
fsub
into
icebp
cmc
clc
jmp
mov
mov
cmc
aad
rcl
jecxz
shl
ljmp
ljmp
lock
jmp
mov
in
or
add
shll
into
cli
fcmovu
enter
shl
loope
add
or
in
out
shl
mov
enter
in
repnz
loopne
out
add
loopne
cli
jecxz
add
or
in
fisubrs
leave
mov
fprem
mov
or
clc
stc
aad
in
in
int3
mov
not
rcl
incl
cmc
cld
rcl
ret
shl
out
clc
jmp
enter
iret
in
rcl
out
lret
ljmp
xlat
aad
loopne
in
testl
iret
mov
loop
fsub
lret
mov
push
mov
leave
out
or
psraw
jmp
leave
lods
jmp
lock
ret
loope
rcl
loope
clc
loope
lret
jecxz
shl
icebp
jmp
jmp
mov
mov
testb
ret
in
fcmovu
add
fdiv
hlt
ror
lret
idiv
mov
enter
les
sti
fildl
add
sti
adc
rol
ret
not
call
in
idivl
add
les
add
pop
int
mov
idiv
out
cli
mov
loope
sti
std
sar
lret
push
iret
aad
enter
movsl
fadd
mov
loopne
aam
out
cli
cld
rolb
aam
fildl
lret
jecxz
mov
int
rcr
icebp
lret
add
int3
mov
out
fcmovu
cmc
mul
std
add
in
int
fmulp
icebp
mov
mov
mov
fcmovnbe
fsubp
rcr
loope
rcl
jmp
lret
call
mov
jmp
call
test
sar
fdiv
ret
out
out
in
pop
psrlw
in
aam
mov
mov
sti
mov
mul
or
add
push
in
out
ffree
out
jmp
mov
cld
hlt
repz
loopne
shl
rol
sti
mov
in
mov
icebp
stc
out
sti
aam
clc
std
fsubr
sti
neg
loop
paddb
hlt
add
repnz
scas
in
aam
int3
divl
fcom
iret
aam
fcmovnu
loope
or
cmc
lret
sti
in
out
loopne
mov
in
icebp
in
icebp
in
loop
loop
roll
ret
flds
lret
jmp
in
sarl
lret
sar
repz
shl
call
shrb
sti
ljmp
fnstsw
mov
stc
loopne
loope
push
ljmp
in
fdivl
fcmove
jecxz
cmc
clc
loopne
mov
ret
push
cmc
add
lret
mov
mov
lods
fsubp
fcmovnu
xlat
sar
loop
fcmovnu
lds
idiv
out
jmp
lds
in
hlt
call
cld
mov
mov
or
out
test
mov
lret
sarl
cld
fdivrp
out
int
sti
fld
or
in
loop
or
ljmp
out
leave
mov
mov
cli
into
std
loop
int3
pop
f2xm1
sar
loopne
sarl
scas
out
stc
neg
repz
out
xlat
faddl
add
out
aam
fldl
in
call
shlb
mov
iret
out
into
test
sar
int3
add
push
loope
fcmovb
fcmovu
mov
into
out
ret
iret
enter
enter
lock
int3
ljmp
loope
in
lods
vshufps
mov
repz
shlb
pop
add
lock
out
fiadds
out
test
test
int3
icebp
mov
in
jmp
in
fcmovnbe
pop
mov
jmp
lret
fiaddl
lods
jecxz
ret
scas
push
out
sti
mov
add
fadds
out
or
out
fucom
loope
rcl
out
mov
int
loop
roll
fcomi
add
sti
or
fdivrl
loope
in
jmp
mov
rcl
test
ret
repz
in
loope
jecxz
into
fmul
shr
in
hlt
rcl
idivl
call
loop
out
add
fucomp
jecxz
int3
shr
mov
into
repz
idivb
neg
clc
flds
out
add
add
out
icebp
fcom
jmp
lds
rol
loop
aam
lock
icebp
fsubrp
or
out
out
fdivl
ror
jmp
ror
fcom
mov
jecxz
std
call
ffree
mov
shl
idiv
int
add
jmp
fcmove
faddp
mov
leave
add
ror
enter
mov
fdecstp
mov
fucom
out
add
or
or
or
bswap
mov
int
int3
shl
in
into
fsubrp
ljmp
fiaddl
rcl
cmc
lret
add
call
mov
mov
mov
stc
fcom
mov
cmc
out
les
or
lret
shl
sti
loopne
in
f2xm1
lock
aam
add
add
add
rcl
out
jmp
leave
in
cmc
test
mov
int3
ret
loopne
fyl2xp1
out
fnstsw
ljmp
aad
iret
jecxz
mov
clc
int3
add
repnz
faddp
cmc
leave
or
std
add
add
vpor
call
mov
aam
add
hlt
ret
loop
or
fsubrp
leave
mov
out
in
in
fidivrs
mov
jmp
fsub
fisubrs
imul
out
stc
call
hlt
loope
rol
std
call
out
mov
out
mov
ror
int
mov
rcr
add
idiv
pop
fadds
fisttps
lret
paddsw
cmc
shl
scas
mov
hlt
faddl
fcom
out
clc
ljmp
jmp
mov
rol
fbstp
fiadds
fabs
sti
repz
add
stc
movb
or
into
fucomp
mov
ret
out
xlat
mov
int3
lret
mov
aad
cmc
loop
loopne
or
or
out
shrb
mov
in
out
fnstcw
fcmovb
out
mov
ljmp
call
aad
out
int3
mov
mov
pop
mov
loope
mov
sti
rsm
sarl
mov
icebp
cli
in
mov
cld
mov
lock
or
mov
add
jecxz
ffreep
out
mov
aam
aad
aad
mov
rcr
aam
fcmovnbe
cld
add
ret
add
jmp
shr
lret
lret
iret
ror
xlat
test
ffreep
call
loop
lock
call
out
lret
shrl
mov
in
fcomip
fcomip
hlt
neg
mov
aad
call
jmp
mov
hlt
in
out
aad
leave
call
fcomp
fcmovnbe
or
loop
fsubp
ljmp
aam
flds
add
div
repz
add
in
loopne
fisubrl
mov
loope
in
aam
sti
test
mov
aam
push
cli
or
loop
jmp
call
stc
lock
shr
into
repz
shl
not
add
or
sar
cld
or
add
int
lods
lods
out
in
lret
xlat
ljmp
iret
cld
stc
fisttpl
decl
prefetch
or
ljmp
vpmaxsw
call
loope
or
or
stc
in
or
in
iret
repnz
out
fxch
clc
mov
les
jmp
jmp
add
jmp
xlat
loopne
rcr
rcr
shl
mov
mov
sti
fucomip
ror
out
lock
xlat
out
mov
jmp
stc
mov
out
xlat
add
or
or
pop
clc
add
fdivrl
aad
leave
mov
iret
in
cld
rcl
mov
test
cld
jmp
xlat
int
shr
hlt
leave
std
mov
fdiv
loope
repz
aam
add
cld
pop
fxch
in
mov
lods
iret
jmp
int
in
sarl
shl
aad
jecxz
mov
ror
loop
div
icebp
aam
xlat
in
repnz
jmp
jecxz
add
aad
repz
into
mov
shl
mov
lret
mov
ffreep
sar
add
rolb
mov
fiadds
sarb
rol
call
mov
std
rol
aam
jmp
fucomip
in
jmp
lods
lret
lods
mov
shl
shl
call
mov
sar
ret
ljmp
in
in
mov
stc
in
cmc
int3
aam
aad
loope
int3
add
mov
stc
cld
std
jmp
into
or
stos
fsubrl
leave
mov
mov
mov
loop
clc
in
out
pop
in
hlt
jmp
fdivl
mov
fxch
mov
fucomp
aam
fidivs
or
fiaddl
fucompp
push
fnstenv
ljmp
int
mov
add
les
leave
jecxz
loopne
into
ret
in
mov
mov
loopne
add
loop
mov
cld
add
in
enter
in
repz
lock
loopne
mov
add
sti
lret
out
icebp
in
out
in
rol
aam
clc
mov
enter
pop
lock
sti
add
cmc
out
stc
loop
icebp
fadd
lods
out
cli
aad
neg
leave
mov
loope
loop
aam
rcr
clc
aam
loope
ret
jmp
leave
int3
cli
ffreep
repz
aad
mov
jecxz
mov
jmp
repz
jmp
out
icebp
mov
cmc
sarl
or
push
lret
add
into
in
leave
out
call
mov
std
mov
sti
fadd
fucom
xlat
or
leave
enter
int3
shl
aad
add
in
shl
shlb
cmc
mov
ror
stc
fcmovbe
mov
push
out
fcmovbe
out
or
or
jmp
loopne
jmp
mov
mov
iret
inc
test
fadds
cli
out
or
in
ror
lods
aad
out
jecxz
mov
repz
add
sar
fninit
adc
scas
scas
cli
lock
out
jmp
call
icebp
ret
loopne
std
faddl
aad
mov
lock
ljmp
lock
aam
cmc
clc
add
stc
loop
cmc
ljmp
scas
mov
test
stc
sarl
cld
rcr
cmc
fsubr
or
into
rol
ret
jecxz
mov
fucompp
out
leave
mov
loope
jecxz
flds
push
lret
mov
ljmp
sar
not
jecxz
lock
cmc
pop
or
pop
cld
add
into
call
shlb
mov
sti
fidivrl
push
incl
jmp
call
shr
repnz
stc
enter
inc
pop
mov
xlat
fadd
loope
in
fmul
loope
mov
repz
iret
imull
pop
shll
lret
cli
sldt
fldl2t
shl
loopne
mov
leave
int
fstpt
ret
lock
repnz
fadd
lret
repnz
shll
lock
cli
aad
cmc
loop
stc
repz
call
mov
in
icebp
fdivr
xlat
mul
hlt
sti
xlat
cld
mul
add
cld
ror
ret
fdivp
fnsave
cli
ljmp
aad
in
push
clc
cmc
mul
add
loope
lret
cli
out
in
loop
into
xlat
aad
int
fcomip
bnd
loop
loop
loop
hlt
in
push
jmp
out
ret
iret
jmp
fst
shl
mov
mul
fst
in
in
int3
in
ret
ror
mov
out
mov
cld
in
mov
ret
loopne
lret
mov
not
call
dec
in
ret
add
fsub
ljmp
mov
lods
iret
lret
in
out
out
aam
push
leave
int3
into
aad
add
fadds
add
jmp
ret
mov
out
fcmovu
clc
leave
mov
iret
sar
repz
lret
out
aam
cmc
jecxz
fcmovb
int3
test
mov
lret
in
leave
lret
fidivl
xlat
int3
clc
rorb
in
add
in
in
mov
out
mov
hlt
fstpt
cli
clc
clc
mov
ret
or
clc
decb
in
ficoml
into
out
in
xlat
mov
lret
iret
mov
mov
mov
incb
jecxz
fcomp
or
out
lret
jmp
mov
aad
call
in
mov
add
iret
in
push
add
mov
test
fneni(8087
lods
clc
shl
fprem1
testl
stc
jmp
out
out
enter
jmp
repz
rcr
in
mov
aam
neg
lret
cld
aad
in
jmp
mov
lock
clc
mov
hlt
mov
rorl
add
fisttps
psubd
lods
in
leave
mov
mov
leave
leave
stc
sti
rcl
ffreep
mov
pop
lret
aam
cld
adc
out
mov
loopne
leave
cli
stc
into
lock
cmc
fcomip
add
pop
add
xlat
loop
std
aad
out
jmp
leave
imul
lods
mov
mov
fdiv
sti
les
ret
out
or
fstp
or
faddp
repz
call
fninit
int
repnz
ret
add
out
out
fsubr
xlat
call
fcmovnbe
ljmp
not
fcmovnbe
aad
ret
or
mov
ljmp
mov
cli
mov
fsubrp
enter
loopne
ret
out
lods
test
mov
mov
mov
aam
add
add
in
pop
fsub
rcr
mov
repz
xlat
shr
icebp
leave
bnd
mov
aam
jmp
pop
in
jmp
lods
int3
icebp
call
out
loope
hlt
cld
mov
stc
in
in
or
ret
shl
lret
in
fdivr
lock
aad
aam
mul
or
not
mov
mov
int
out
div
sti
rcl
or
lock
out
lret
cld
pop
loopne
movsb
mov
lods
mov
rcl
mov
add
mov
faddl
ljmp
aam
aam
xlat
in
imul
lret
shl
mov
cld
in
cmc
or
in
iret
lock
shr
jmp
in
out
icebp
in
mov
pop
ret
mov
vpaddusw
lods
out
rol
shl
lds
cmc
roll
mov
in
clts
shr
mov
int3
mov
mov
mov
leave
out
fcmovu
shl
rcl
mov
or
imul
loopne
ret
cmc
in
lret
shl
fmul
lret
mov
jmp
leave
loope
les
fsubr
ljmp
cli
leave
aam
cli
in
ret
aam
std
in
idiv
add
testb
out
int3
xlat
aad
aam
xlat
out
jmp
mov
loope
add
jmp
or
repnz
mov
rcl
les
add
aam
leave
add
enter
in
cmpsl
loop
not
aad
lock
fxch
lret
iret
repz
ret
ret
int3
sarb
loop
movb
or
lods
fcmovnbe
div
in
out
dec
fcomi
out
in
aad
hlt
rol
xlat
cli
repz
lret
mov
leave
shll
icebp
div
repz
out
faddp
neg
div
aam
out
add
ret
stos
mul
call
repz
test
out
cld
add
push
fcmove
or
stc
ret
out
out
scas
test
test
into
mov
pop
add
push
loop
loopne
lret
or
enter
stc
frstpm(287
xlat
lret
shr
fdiv
into
xlat
shr
aad
flds
aad
fadd
pop
loop
idivl
rol
mov
int3
add
int
flds
ljmp
paddd
int3
scas
ret
idivb
in
in
loope
fsincos
sti
mul
ljmp
enter
int3
test
fcmovbe
cli
xlat
fdiv
neg
cmc
fcmovnbe
leave
cli
call
fildll
call
mov
out
rorb
rcl
add
jmp
mov
cmc
aad
mov
dec
leave
int
int3
roll
add
rcr
or
out
iret
fimull
std
enter
out
cmc
stc
lret
jmp
in
aam
clc
neg
aam
pop
add
out
in
lret
leave
in
in
in
jmp
out
mov
div
add
cli
cmc
add
lret
jmp
clc
fimull
fmul
lret
int
ror
mov
fcmovnbe
into
aam
pop
ret
fdivr
stc
in
loop
cli
fmulp
loopne
jecxz
cmc
in
lods
cmc
aad
rcr
in
aam
mov
rcr
mov
testb
or
mov
rol
fidivrl
fadds
loope
mov
idiv
ret
loop
add
mov
loop
in
mov
shl
rolb
loopne
rol
shl
lret
bswap
push
loop
test
lret
shr
in
out
fsubr
idivl
clc
fdivr
iret
lsl
ret
mov
jecxz
lret
lret
in
in
lret
jecxz
clc
mov
lret
lret
lret
fimull
or
add
repz
int3
sti
loopne
icebp
ror
repnz
hlt
fcomip
cmc
in
loop
xlat
rcr
lret
fldz
ljmp
shl
repnz
mov
pop
in
fsub
shr
fld
add
cli
in
lods
int3
hlt
jecxz
loop
shl
enter
clc
mov
in
mov
repz
int3
lods
lods
mov
mov
fldln2
aam
mov
mov
icebp
std
sti
std
jmp
or
mov
aad
mov
shl
out
fidivrl
fsubp
fsub
add
or
rcr
out
mov
repz
fistpll
repnz
icebp
mov
add
xabort
add
fildll
shl
cli
fldz
mov
mov
testl
ret
in
enter
mov
enter
lret
cmc
sarb
cmc
repz
mul
leave
fadds
or
in
out
mov
repz
shrb
fmul
add
loope
mov
jmp
jmp
aad
mov
jmp
sti
call
cmc
out
sar
fiaddl
les
loopne
mov
lock
xlat
std
aad
leave
mov
sar
stc
sti
std
enter
std
mov
leave
repnz
mov
mov
cld
out
jecxz
push
pop
push
or
push
fnstsw
mov
enter
mov
fcmovu
shl
mov
cld
push
jmp
out
jmp
loop
in
lret
mov
mov
mov
cmc
out
xlat
fld1
sti
clc
or
in
ljmp
in
mov
aad
out
fiadds
add
loope
fcmovu
jecxz
iret
or
test
loopne
call
leave
mov
fdiv
repz
fdivrp
out
leave
aam
push
mov
shlb
sar
div
shr
loop
fidivrl
lret
or
lret
jmp
int
enter
in
jmp
out
sar
repnz
mov
into
ret
out
fstp
into
or
jecxz
out
scas
lods
mov
sar
enter
cli
lock
add
ret
push
std
ljmp
imul
enter
cmc
fstpt
movb
add
aad
or
or
stos
mov
iret
scas
in
mov
jmp
int3
repnz
loopne
rolb
push
or
cld
or
enter
repnz
rcl
aam
fucomp
repnz
mov
cmc
std
fsub
jecxz
out
jecxz
aad
jmp
rol
ret
shr
rolb
fidivrs
jmp
int3
lret
mov
iret
mov
into
aad
rcl
out
idiv
loopne
repnz
ror
fcmovbe
into
call
int3
les
cli
repnz
repz
repz
add
lret
psubq
icebp
neg
lock
mov
clc
repnz
mov
sar
fdiv
cmc
call
icebp
fcomp
mov
into
call
roll
add
shl
loop
enter
in
lock
lods
xlat
int
int
mov
imul
mov
mov
or
aam
or
add
mov
mov
jmp
sti
icebp
lret
out
mov
shl
testb
jmp
jmp
repnz
sti
lods
repz
fprem1
jmp
add
cli
jmp
or
shl
testb
or
mov
mov
out
sar
in
fdivl
in
loope
mov
or
out
loop
out
out
enter
iret
mov
enter
fcmovne
ror
hlt
enter
add
push
add
loop
in
jmp
jmp
into
xlat
fidivs
repz
lock
jmp
in
pop
les
movb
out
jmp
test
out
aam
fidivrs
ret
ret
loop
leave
or
or
repz
ret
ljmp
in
jecxz
add
hlt
hlt
or
faddp
jecxz
or
scas
in
scas
iret
mov
jmp
shr
fsubr
rcl
fcompp
jecxz
ret
hlt
out
add
ror
movsl
scas
mov
lret
rol
int
int3
mov
fdivp
loopne
in
loope
std
out
pop
ffree
lret
xlat
shlb
jmp
mov
lret
mov
add
out
out
shlb
mov
jmp
jmp
lock
fcmovnu
rol
mov
aad
or
out
ret
in
shl
out
int
mov
mov
ffree
mov
lret
add
lret
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
xor
add
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
inc
mov
mov
sub
xor
cmp
jne
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
leave
ret
add
pop
or
dec
add
add
add
add
add
add
icebp
add
add
add
push
push
inc
push
icebp
je
jnp
shll
xchg
dec
js
add
add
inc
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
pop
or
dec
add
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
mov
incb
add
add
arpl
outsb
inc
popa
je
pop
inc
js
add
jae
outsl
ja
xor
gs
popa
addr16
jae
outsl
ja
xor
gs
popa
addr16
xor
or
adc
pop
jne
or
icebp
xchg
or
icebp
xchg
or
jne
jmp
xchg
mov
xchg
jmp
xchg
jmp
xchg
or
pop
popa
popa
ljmp
xchg
ljmp
xor
mov
popa
popa
or
out
bound
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
jno
popa
xchg
pop
loop
bound
adc
andb
pop
loop
bound
adc
cmp
xchg
pop
loop
bound
adc
fbld
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
inc
popa
popa
xchg
pop
loop
bound
adc
es
popa
xchg
pop
loop
bound
adc
dec
popa
popa
xchg
pop
loop
bound
adc
xor
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
shll
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
mull
xchg
pop
jne
adc
movsb
popa
popa
xchg
pop
jne
adc
mov
jne
adc
outsl
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
mull
xchg
pop
loop
bound
adc
movsb
popa
popa
xchg
pop
loop
bound
adc
mov
loop
bound
adc
outsl
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
das
popa
popa
xchg
pop
jne
adc
jae
popa
xchg
pop
jne
adc
jmp
popa
xchg
pop
jne
adc
push
popa
popa
xchg
pop
jne
adc
fbld
xchg
pop
jne
adc
jno
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
bound
popa
or
loop
bound
pushl
cmp
jne
dec
pushl
pushl
and
jne
mov
jne
loopne
jne
in
pushl
repz
inc
pushl
lock
and
jne
mov
jne
loopne
loop
arpl
repz
lods
arpl
xor
bound
jmp
mov
jmp
lods
arpl
notrack
das
arpl
out
jmp
mov
bound
jmp
and
or
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
and
bound
jae
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
push
arpl
cmp
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
std
arpl
lcall
bound
push
outsb
xor
arpl
test
popa
popa
popa
fcomps
or
bound
lea
repnz
pop
loop
bound
or
bound
popa
in
push
insl
ljmp
loop
push
jmp
bound
and
out
bound
inc
xor
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
mull
xchg
pop
loop
arpl
adc
movsb
popa
popa
xchg
pop
loop
arpl
adc
mov
loop
arpl
adc
outsl
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
arpl
or
lcall
dec
push
popa
bound
popa
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
rorb
bound
popa
bound
jne
bound
loop
arpl
fsubs
jecxz
bound
out
clc
cmp
testl
mov
bound
popa
or
or
pop
call
xchg
loop
xor
popa
or
lcall
popa
or
bound
popa
pop
push
or
call
out
bound
pop
fldt
popa
pop
push
bound
jmp
movsl
arpl
xor
bound
jmp
lret
arpl
fs
lret
bound
jmp
shll
out
jmp
shlb
ss
arpl
loopne
jp
popa
popa
xchg
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
jecxz
popa
popa
xchg
pop
loop
pop
bound
stos
int3
popa
popa
xchg
pop
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
loope
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
xchg
int3
popa
popa
xchg
pop
loop
pop
bound
imul
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
jo
popa
popa
xchg
pop
loop
pop
bound
push
push
popa
popa
xchg
pop
loop
pop
bound
sbb
popa
popa
xchg
pop
loop
pop
bound
sbb
loop
pop
bound
pushf
int3
popa
popa
xchg
pop
loop
pop
bound
jp
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
adc
xchg
pop
loop
arpl
adc
es
popa
xchg
pop
loop
arpl
adc
push
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
fwait
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
pop
bound
xchg
lcall
bound
outsb
push
pop
loop
pop
bound
jne
test
lcall
popa
mov
bound
or
lcall
popa
or
bound
lea
fsubs
popa
fcomps
or
or
pop
call
pusha
pop
bound
dec
add
imul
or
lcall
popa
pop
loop
arpl
or
lcall
bound
adc
and
push
popa
fcomps
pop
bound
adc
int3
popa
popa
xchg
pop
loop
pop
bound
popa
xchg
pop
loop
pop
bound
pop
shll
xchg
pop
loop
pop
bound
out
shll
xchg
pop
loop
pop
bound
jmp
pop
loop
pop
bound
or
pop
loop
pop
bound
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
sbb
popa
pop
loop
pop
bound
jne
test
lcall
popa
or
bound
or
bound
test
lcall
xor
and
or
lcall
popa
or
bound
or
bound
test
lcall
popa
or
or
outsb
int
sbb
popa
or
lcall
popa
or
or
outsb
int
xor
xchg
or
or
lcall
adc
bound
jne
test
lcall
bound
adc
and
push
popa
jo
bound
arpl
shl
jp
popa
popa
or
or
adc
push
popa
or
lcall
popa
mov
out
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
shlb
xor
or
or
lcall
bound
adc
and
push
popa
jo
bound
pop
bound
repz
leave
popa
popa
or
or
adc
push
popa
adc
fbld
bound
loop
arpl
bound
out
bound
mov
bound
bound
bound
repz
xor
or
bound
push
or
call
fbld
bound
popa
adc
pop
loop
pop
bound
loop
bound
push
loop
bound
pop
loop
bound
bound
out
bound
aaa
cmp
or
lcall
popa
or
bound
popa
or
lcall
test
cmpsl
pop
mov
or
bound
popa
bound
loop
bound
or
popa
cmp
jl
loop
bound
or
popa
or
bound
loop
pop
bound
lcall
xor
push
adc
bound
loop
pop
bound
popa
or
or
or
bound
pop
bound
lcall
or
popa
or
bound
testl
bound
bound
bound
or
popa
or
adc
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
or
or
pop
call
mov
or
lcall
popa
lock
popa
popa
lock
pop
popa
popa
or
push
outsl
or
pop
call
xchg
outsb
icebp
push
xchg
pop
jne
or
adc
jne
pop
jne
and
add
add
jne
and
add
jne
lods
loop
imul
add
jne
mov
add
jne
test
lcall
popa
or
pop
int
and
sub
add
ljmp
outsb
sbb
popa
or
lcall
outsl
or
lcall
fs
inc
dec
outsl
or
lcall
popa
or
or
pop
call
cmpsl
pop
xchg
loop
popa
popa
popa
or
sbb
jne
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
popa
mov
or
call
lcall
fmull
adc
jne
pusha
cld
dec
int3
mov
imul
pusha
xor
push
xor
or
adc
or
loop
xor
rcrb
int
pop
sub
pusha
out
adc
ljmp
jne
test
popa
popa
popa
fcomps
add
and
xor
lcall
popa
xchg
push
int
sub
or
or
pop
call
and
add
and
push
jne
sbb
and
or
call
lcall
cwtl
or
lcall
popa
or
or
pop
call
xor
test
test
lcall
jne
test
lcall
popa
or
pop
int
out
imul
leave
cmp
call
fs
lock
bound
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
movsl
or
push
or
jbe
or
enter
fsubs
inc
dec
dec
pop
rcrb
push
fsubs
inc
dec
dec
pop
rcrb
or
sub
rcl
ror
sub
bound
push
popa
popa
inc
dec
adc
cmp
adc
mull
dec
lock
jo
shl
pop
popa
popa
xor
test
mov
jne
sub
pop
jne
lods
popa
repz
loop
popa
popa
popa
sbb
pop
jg
fs
ret
lcall
arpl
lcall
out
popa
popa
leave
movsb
push
popa
push
push
push
sub
mov
ret
jg
push
push
adc
int
rep
pop
popa
popa
or
fdivrs
push
push
cmpsl
call
jno
maxss
mov
fsubr
push
rcrb
dec
call
xchg
shrb
mull
call
push
sub
lods
pop
arpl
rcrl
popa
mov
lret
rol
bound
into
cmp
das
popa
out
jae
push
arpl
jb
popa
popa
mov
lods
outsl
arpl
imul
mov
lret
lods
xchg
call
or
cmp
mov
xchg
popa
popa
mov
ljmp
popa
lods
push
repz
popa
or
lods
sbb
in
push
sub
xchg
or
sub
int
or
sub
push
pop
mov
lret
sub
popa
popa
das
lcall
sbb
call
or
push
or
dec
pop
dec
push
sub
adc
fwait
imul
test
pop
repz
push
or
dec
pop
dec
push
jo
shll
adc
fwait
imull
popa
out
xchg
sub
pop
popa
popa
push
ljmp
push
sbb
repz
popa
popa
or
gs
stc
notl
popa
fdivs
cmp
imul
push
jo
rorl
sub
mov
push
popa
popa
or
popa
popa
or
gs
int
pop
int
fdivs
imul
jae
outsl
fcoms
fmul
cmp
int3
fdivs
mov
adc
pop
popa
popa
sub
xchg
cmp
jne
dec
dec
push
jne
pop
jne
out
xor
in
div
pop
popa
popa
popa
dec
out
dec
xchg
cmp
mov
jne
aaa
mov
adc
cmp
push
jne
pop
jne
pop
xchg
cmp
jo
mov
and
popa
popa
popa
and
out
xchg
ljmp
out
popa
bound
or
pop
or
sub
cmp
rorb
or
cmpsl
addr16
shll
xchg
push
xor
pop
bound
cs
popa
popa
sub
xchg
or
imul
ljmp
push
mov
mov
out
push
pop
popa
popa
popa
push
xor
imul
dec
lcall
imul
notl
repz
pop
out
cmp
stc
or
jne
sub
popa
pop
popa
popa
popa
push
mov
lcall
sbb
pop
xor
sti
or
popa
pop
lock
xchg
mov
sti
jae
or
popa
popa
sub
xchg
push
adc
mov
aaa
mov
sub
popa
push
sbb
sbb
adc
mov
mov
lret
and
jp
bound
loop
imul
bound
jne
pop
jne
or
bound
xor
call
into
bound
or
bound
xor
call
pop
or
bound
xor
call
adc
loop
bound
test
lcall
popa
pop
jne
and
lods
xor
imul
bound
jne
and
add
jne
aam
popa
popa
and
jmp
bound
popa
popa
popa
and
xchg
popa
popa
popa
and
out
bound
popa
popa
popa
and
int3
popa
popa
popa
and
fbld
bound
popa
popa
or
bound
xor
call
dec
or
bound
xor
call
jecxz
bound
pop
mov
bound
out
lea
bound
bound
and
pop
popa
popa
jae
fcomps
bound
popa
out
lea
bound
bound
and
bound
test
fcomps
bound
popa
out
lea
bound
bound
and
jae
adc
rclb
jne
sarb
loopw
repz
js
popa
out
es
or
mov
std
mov
jp
bound
or
call
pusha
or
bound
xor
call
push
fcoms
mov
popa
pop
jne
or
jb
jne
or
xchg
jne
or
mov
add
push
and
int
pop
add
push
and
int
pop
add
push
jp
bound
dec
or
pop
call
and
mov
popa
popa
cmpsl
xor
popa
or
jmp
int
or
popa
or
cltd
xchg
pop
loop
bound
adc
lcall
or
bound
adc
popa
or
adc
popa
or
bound
push
add
popa
popa
rorb
dec
push
jbe
loop
bound
ret
lea
bound
cli
jmp
xchg
bound
lock
xchg
bound
push
jmp
mov
bound
jmp
mov
out
jmp
bound
ss
jle
bound
jmp
imul
loopne
loop
bound
and
loop
bound
repz
xor
bound
loop
bound
xor
bound
jmp
test
jmp
test
bound
jmp
scas
bound
ret
sahf
bound
out
jmp
test
bound
bound
jmp
stos
bound
hlt
jmp
stos
bound
in
jmp
mov
jmp
mov
jmp
cmpsl
bound
lock
xchg
bound
ss
popf
bound
push
jmp
pushf
bound
sub
loop
bound
loopne
loop
bound
and
loop
bound
repz
andb
adc
loop
bound
xor
bound
jmp
jge
bound
jmp
jl
bound
jmp
andl
ret
sti
bound
out
jmp
jns
bound
jmp
js
bound
jmp
jg
bound
jmp
mov
in
jmp
aad
bound
jmp
aam
bound
jmp
add
lock
cmp
bound
jmp
aaa
bound
push
jmp
bound
dec
jmp
sub
jmp
arpl
and
loop
arpl
repz
in
arpl
adc
loop
arpl
xor
bound
jmp
outsl
arpl
lock
data16
and
loop
arpl
sbb
loop
arpl
fs
inc
arpl
inc
jmp
dec
arpl
lock
dec
arpl
sub
loop
arpl
loopne
sbb
and
arpl
scas
xchg
scas
mov
bound
jmp
cltd
bound
repz
cwtl
bound
adc
loop
bound
xor
bound
jmp
jne
bound
jmp
je
bound
jmp
fwait
bound
sbb
loop
bound
fs
shll
bound
loop
bound
lock
xlat
bound
dec
jmp
bound
loopne
sbb
and
bound
scas
xchg
scas
mov
bound
fcomps
bound
popa
bound
mov
or
adc
popa
popa
rep
jne
popa
rorb
and
popa
popa
bound
aas
mov
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
and
fisttpl
popa
popa
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
jne
popa
rorb
dec
push
xchg
pop
loop
bound
or
bound
xor
call
std
xchg
outsb
mov
popa
or
inc
bound
outsl
or
pop
call
std
sub
mov
pop
popa
popa
and
sub
bound
popa
popa
bound
mov
or
or
popa
repz
sub
popa
rorb
and
popa
popa
bound
mov
and
pop
add
popa
pop
push
and
loop
bound
shl
aam
popa
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
bound
shl
dec
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
arpl
shl
pusha
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
fcomps
arpl
popa
fcomps
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
dec
outsl
fsubs
test
arpl
loop
out
or
bound
dec
outsl
fsubs
cltd
enter
arpl
loop
out
fcomps
arpl
popa
out
cmp
bound
bound
shl
sahf
sub
popa
rorb
cmc
push
or
dec
push
lcall
lock
bound
dec
or
pop
call
inc
bound
test
lcall
popa
shlb
and
jne
shl
ss
popa
popa
rorb
bound
xor
call
mov
adc
shl
stc
lahf
popa
popa
shlb
cmp
bound
xor
arpl
push
loop
bound
test
lcall
outsb
push
pop
jne
fsubs
sub
bound
mov
bound
or
push
pop
jne
lock
bound
jne
cmpsl
jne
mov
jp
loop
imul
shl
cltd
jbe
popa
pop
loop
bound
out
cmpsb
or
bound
loop
pop
bound
loop
bound
test
lcall
popa
or
bound
pop
bound
push
bound
or
call
into
bound
xchg
outsb
loope
popa
popa
or
bound
xor
call
pop
xchg
outsb
mov
loop
bound
test
lcall
popa
pop
loop
arpl
out
jl
loop
bound
test
lcall
bound
outsb
push
pop
loop
arpl
or
or
bound
or
bound
or
bound
loop
pop
bound
loop
arpl
scas
inc
jo
rorl
or
bound
or
bound
out
add
mov
bound
bound
loop
arpl
and
jmp
bound
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jecxz
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
out
bound
or
call
mov
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
into
arpl
xchg
mov
arpl
or
bound
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
arpl
or
bound
fbld
bound
loop
arpl
and
sub
bound
loop
imul
bound
loop
arpl
mov
add
loop
arpl
and
add
loop
arpl
and
loop
arpl
test
lcall
popa
pop
loop
arpl
adc
fisubl
bound
loop
arpl
adc
inc
arpl
pop
loop
arpl
or
bound
bound
popa
or
bound
popa
pop
loop
imul
loop
imul
bound
loop
arpl
or
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
fisubl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
inc
arpl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
cmpsb
arpl
or
dec
or
pop
call
xchg
outsl
adc
pop
call
out
bound
outsl
or
fbld
bound
outsb
push
pop
loop
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
loop
bound
test
lcall
popa
pop
loop
arpl
bound
bound
repz
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
bound
bound
xor
call
jne
or
popa
adc
bound
loop
bound
test
lcall
popa
cmpsl
loop
arpl
out
bound
dec
arpl
bound
adc
bound
mov
bound
into
bound
repz
popa
popa
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
or
bound
loop
arpl
or
bound
xor
call
sbb
bound
loop
arpl
inc
jmp
hlt
arpl
dec
jmp
jmp
bound
loop
arpl
sub
loop
arpl
inc
jmp
push
arpl
adc
loop
arpl
inc
jmp
dec
arpl
sbb
loop
bound
pop
loop
arpl
out
aaa
or
bound
or
outsl
or
lcall
lcall
bound
and
loop
imul
arpl
test
lcall
bound
push
outsb
push
or
outsl
or
adc
outsl
fsubs
popa
fcomps
lcall
mov
bound
xor
call
sbb
bound
xor
insl
bound
or
bound
xor
call
sbb
bound
outsb
fcompl
popa
or
bound
push
arpl
and
outsb
arpl
lods
loop
imul
bound
adc
adc
bound
loop
arpl
and
add
loop
arpl
test
lcall
popa
rorb
bound
xor
call
loop
arpl
test
lcall
popa
rorb
bound
xor
call
jne
or
popa
add
bound
bound
xor
call
loop
arpl
test
lcall
popa
shlb
push
arpl
or
bound
xor
call
jne
or
popa
and
bound
loop
arpl
test
lcall
popa
cmpsl
loop
arpl
out
or
bound
xor
call
and
bound
xor
mov
popa
popa
and
cmc
arpl
and
add
loop
arpl
mov
add
loop
arpl
test
lcall
popa
or
bound
or
bound
xor
call
add
bound
push
bound
or
call
add
bound
pop
fcomps
arpl
popa
fcomps
arpl
popa
fcomps
arpl
popa
adc
bound
push
arpl
bound
and
bound
loop
arpl
rorb
bound
xchg
fcomps
shlb
add
bound
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
arpl
or
dec
push
mov
bound
pop
call
lcall
imul
cmp
call
loop
arpl
test
lcall
popa
shlb
into
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
out
test
or
call
loop
arpl
test
lcall
popa
shlb
and
bound
jne
or
popa
mov
pusha
pop
bound
loop
bound
pop
loop
pop
bound
loop
arpl
lods
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jbe
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
xchg
arpl
test
lcall
popa
or
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
lcall
pop
adc
bound
loop
arpl
or
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
pop
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
imul
bound
loop
pop
bound
loop
imul
bound
loop
imul
bound
loop
pop
bound
or
call
popa
arpl
adc
fs
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
arpl
xchg
fdivrs
loop
pop
bound
popa
pop
loop
imul
loop
imul
bound
loop
pop
bound
loop
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
fs
bound
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
bound
push
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
mull
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
pop
pop
bound
or
bound
dec
or
pop
call
xchg
outsl
adc
pop
call
xchg
arpl
outsl
or
sti
arpl
adc
pop
call
sti
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
mov
or
dec
push
and
or
stc
push
or
sbb
popa
popa
bound
mov
bound
into
bound
repz
jbe
popa
pop
jne
or
bound
xor
call
into
bound
out
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
mov
movsl
or
jne
pop
jne
or
pushf
xchg
mov
ljmp
mov
lcall
push
jmp
xchg
or
popa
popa
popa
movsb
and
lods
loop
imul
add
jne
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
rcr
xrelease
jne
or
stos
fimull
mov
stc
or
pop
or
mov
cltd
stos
pop
loop
bound
out
xchg
mov
bound
loop
bound
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
or
and
and
jne
mov
add
jne
and
add
jne
and
add
jne
test
lcall
popa
or
pusha
or
lcall
outsb
xchg
pop
call
xchg
fdiv
mull
or
lcall
popa
pop
jne
or
mov
jne
bound
bound
popa
popa
pop
jne
and
fbld
bound
add
loop
bound
test
lcall
popa
rclb
jne
shl
cli
cmpsb
popa
popa
fsubr
add
out
loop
bound
test
lcall
popa
shlb
add
jne
shl
jae
popa
popa
or
out
bound
jne
or
bound
bound
or
bound
xchg
xchg
cmpsl
pop
call
or
add
lcall
sub
pop
jne
lock
bound
jo
bound
shl
push
popa
popa
and
jmp
bound
loop
imul
bound
jne
mov
add
jne
and
add
loop
bound
pop
jne
adc
out
bound
loop
bound
adc
pop
jne
adc
pop
jne
or
lcall
popa
pop
jne
and
jp
bound
loop
imul
bound
test
lcall
outsl
or
lcall
lcall
bound
jne
or
or
pop
call
xchg
loop
pop
popa
popa
and
bound
loop
imul
test
lcall
popa
pop
jne
or
bound
or
push
pop
jne
or
and
outsl
or
pop
call
mov
or
lcall
popa
shlb
adc
shl
lcall
or
leave
cmp
call
or
outsl
or
pop
call
out
or
bound
leave
cmp
call
or
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
mov
or
lcall
popa
pop
jne
lock
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
bound
lcall
xor
es
dec
cmpsl
pop
xchg
loop
push
jecxz
bound
popa
test
lcall
ret
popa
or
outsl
or
adc
or
bound
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
xchg
loop
popa
popa
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
dec
or
or
scas
es
dec
cmpsl
pop
mov
or
test
lcall
ret
popa
or
bound
lcall
xor
movsl
cmc
or
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
out
or
lcall
popa
pop
jne
out
sti
jo
adc
shl
jno
popa
popa
cmpsl
jne
out
or
lcall
popa
pop
jne
lock
bound
jne
or
or
pop
call
mov
or
lcall
outsb
push
pop
jne
lock
bound
bound
shl
sbb
popa
popa
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
shlb
adc
shl
mov
bound
jne
fcomps
pop
jne
bound
or
dec
shl
roll
popa
popa
or
lcall
popa
cmpsl
jne
out
jo
bound
push
jne
shl
jl
bound
jne
pop
loop
bound
or
bound
or
bound
lcall
pop
jne
lock
bound
jne
mov
movsl
or
jne
pop
jne
or
mov
ljmp
imul
sbb
push
dec
or
negl
or
adc
and
add
popa
or
lcall
popa
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
lcall
popa
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
popa
or
or
mov
or
mov
into
popa
or
or
mov
test
pop
sub
outsb
adc
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
pop
push
int
or
jne
or
pop
lcall
leave
cmp
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
lcall
popa
pop
loop
bound
out
xchg
lcall
bound
outsb
push
pop
loop
bound
or
or
bound
or
or
jecxz
bound
in
bound
sbb
sub
or
push
cltd
xchg
or
or
or
push
std
popa
popa
popa
pop
loop
bound
or
or
or
or
or
push
cltd
cmp
jne
or
lcall
popa
pop
jne
or
bound
out
bound
xchg
or
bound
out
bound
jne
test
lcall
popa
mov
bound
popa
or
lcall
popa
pop
loop
bound
out
lea
bound
bound
loop
bound
fdiv
lcall
bound
fsubs
popa
popa
popa
or
bound
bound
or
or
pop
call
xchg
or
pop
call
jg
pop
loop
bound
or
bound
bound
pop
imul
out
bound
pop
call
lcall
imul
bound
rorl
or
bound
bound
fcoms
or
or
bound
bound
push
pop
pop
loop
bound
or
or
bound
or
bound
push
bound
out
bound
jne
or
sti
or
popa
popa
popa
call
loop
bound
push
loop
bound
pop
loop
bound
lock
bound
jne
test
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
jle
outsl
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
popa
pop
jne
or
push
jne
pop
jne
or
jbe
xchg
pop
lcall
popa
movsl
or
jne
pop
jne
or
push
sub
imul
imul
or
lcall
nop
loopne
jne
jmp
xchg
or
jbe
fisttpl
popa
popa
or
or
lcall
popa
cmpsl
jne
mov
clc
pushf
xchg
mov
mov
lock
popa
popa
popa
or
or
or
pop
call
out
bound
bound
bound
test
int
pop
push
lcall
pop
call
xchg
outsl
or
pop
call
mov
clc
inc
xor
fsub
sbb
push
imul
inc
xor
fsubr
test
jne
test
lcall
popa
mov
clc
mov
and
jmp
mov
xchg
clc
inc
addr16
scas
aad
fs
enter
lahf
scas
push
and
fsubs
jne
test
lcall
popa
or
or
jmp
int
or
popa
or
cltd
xchg
pop
jne
or
dec
push
jle
jne
jo
jp
jb
popa
or
shlb
bound
pop
push
or
call
push
bound
shlb
jle
mov
bound
repz
bound
jne
or
outsl
or
pop
call
out
or
lcall
popa
xchg
mov
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
or
imul
mov
bound
shlb
imul
repz
popa
pop
jne
or
xchg
or
bound
mov
repz
bound
jne
jmp
bound
jp
pop
loop
repz
dec
bound
jne
jmp
xchg
bound
loop
repz
push
xchg
mov
xchg
bound
mov
repz
and
or
pop
sbb
xchg
bound
sarb
repz
mov
or
lods
loop
imul
jbe
mov
bound
bound
repz
bound
or
lock
ljmp
aam
mov
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
andl
bound
bound
bound
fldenv
popa
ljmp
jg
sub
add
mov
bound
bound
bound
bound
int
pop
push
sti
sub
add
jg
push
loop
imul
bound
bound
repz
arpl
or
out
cs
ljmp
jns
daa
loop
imul
bound
bound
repz
bound
or
mov
or
jne
pop
jne
or
push
ds
cmp
ljmp
cmp
cmp
or
push
jmp
xchg
or
jne
lods
pop
add
jne
or
popa
or
pop
lcall
push
xchg
popa
or
jne
or
popa
or
jmp
xchg
or
pop
jne
or
mov
outsl
or
pop
call
out
or
pusha
push
and
and
fsubs
jne
lods
or
imul
add
jne
and
add
jne
mov
add
jne
lods
xor
imul
cmp
jne
or
popa
pop
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
or
pop
call
mov
bound
repz
bound
or
or
push
cltd
xchg
pop
jne
or
lcall
popa
or
xchg
loop
popa
popa
popa
or
pop
jne
adc
shlb
pop
bound
bound
bound
bound
adc
rclb
jne
shlb
lcall
bound
repz
pop
bound
jne
bound
bound
bound
jne
pop
jne
or
dec
pop
jne
or
jmp
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
call
or
or
or
push
sub
rorb
jae
or
stc
or
or
sub
push
push
push
lea
lcall
popa
push
and
popa
movsl
or
or
dec
or
or
popa
popa
fsubrs
ljmp
xchg
cmp
popa
popa
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
add
popa
popa
popa
out
or
adc
popa
xchg
out
or
sahf
cmpsl
jne
mov
scas
sbb
lock
popa
fcoms
dec
popa
fcoms
push
popa
fcoms
pop
popa
fcoms
pop
popa
fcoms
dec
or
popa
or
pop
int
or
popa
popa
popa
pop
jne
or
lcall
jne
pop
jne
or
xchg
pop
jne
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
pusha
xchg
fsubs
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
stc
xchg
fcoms
popa
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
sbb
mov
mull
orl
pop
int
or
push
jne
or
out
repnz
bound
lock
bound
xchg
or
or
cmp
jne
or
popa
fsubrs
ljmp
lock
push
cmp
fisttpl
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
jecxz
mov
scas
sbb
lock
popa
or
jecxz
jne
or
lcall
jne
or
sbb
lcall
or
lcall
or
lcall
fcoms
dec
popa
or
stc
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
pop
fcoms
or
jne
or
pop
xchg
fcoms
popa
popa
popa
or
sbb
fidivrl
jl
jne
or
lcall
or
repz
repnz
cmp
sub
pop
fcoms
out
lods
or
pop
or
pop
movsl
imul
or
stc
lds
jne
or
mull
or
pop
or
imul
sub
sub
sbb
ljmp
out
lcall
sbb
push
and
fsubs
jne
lods
loop
imul
add
jne
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
repz
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
sbb
popa
cmpsl
push
cmp
or
call
xchg
rorl
push
sbb
popa
or
cltd
xchg
pop
jne
or
lcall
popa
or
popa
out
or
lcall
pop
int
out
mov
lcall
popa
lock
popa
out
mov
lcall
popa
lock
popa
and
lods
loop
imul
xor
test
test
lcall
jne
test
lcall
popa
pop
jne
or
dec
out
or
jle
int
outsl
or
pop
call
pop
mov
or
jle
int
outsl
or
pop
call
pop
mov
outsb
inc
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
jle
jne
pop
jne
or
lcall
or
lcall
popa
pop
jne
or
lcall
popa
or
out
or
lcall
jne
test
lcall
roll
call
lcall
pop
jne
or
sub
add
mov
or
dec
push
pop
jne
or
lcall
popa
cmpsl
jne
mov
bound
or
popa
imul
xchg
fcoml
jne
pop
jne
or
cmc
add
jne
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
or
lcall
popa
xchg
mov
jne
or
popa
cmp
or
call
imul
cmp
call
push
xchg
mov
bound
or
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
lock
popa
and
pusha
xchg
push
xor
mov
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
xor
cmp
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
cmpsl
jne
out
or
repz
or
xor
lods
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
or
popa
popa
popa
fisttpl
xchg
inc
cmpsl
pop
out
or
bound
xchg
repnz
bound
or
popa
lcall
jne
push
jne
pop
jne
or
shlb
imul
lcall
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
out
jbe
jne
test
lcall
popa
or
pop
or
xor
negl
lock
arpl
lock
bound
lcall
popa
mov
or
lcall
popa
pop
jne
out
xchg
or
lcall
popa
pop
jne
or
xchg
or
and
lods
loop
imul
add
jne
pop
jne
or
test
lcall
popa
mov
mov
popa
popa
or
lcall
and
sub
add
jne
test
lcall
outsl
or
pop
call
xor
add
push
xor
std
popa
popa
popa
pop
int
or
xor
repz
lcall
popa
mov
sahf
push
imul
popa
pop
jne
and
and
add
jne
or
push
out
xchg
or
notl
jne
or
lcall
popa
mov
gs
popa
popa
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
fdiv
popa
popa
popa
or
sbb
aad
xchg
popa
popa
pop
jne
or
or
lcall
lcall
jne
or
sub
lcall
or
lcall
outsb
push
pop
jne
or
cmp
outsl
or
pop
call
out
out
fucomi
aaa
or
cmp
outsl
or
pop
call
mov
or
sbb
jne
or
or
lock
bound
push
pop
jne
or
fs
outsl
or
xor
add
mov
push
pop
jne
lock
arpl
or
lcall
popa
out
lea
lcall
popa
push
and
fs
push
mov
loop
imul
add
jne
test
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
and
jne
pop
jne
or
or
or
or
xor
sarb
pop
push
jne
or
or
or
or
xor
int
pop
push
jne
or
or
or
or
xor
mov
pop
push
jne
or
or
or
or
xor
addr16
cmp
and
ret
imul
cmp
ljmp
mov
jbe
jne
xchg
repnz
or
or
pop
call
push
cmpsl
pop
out
scas
sbb
insb
xchg
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
or
rclb
jne
fsubr
dec
popa
mov
scas
sbb
cmpsb
xchg
popa
popa
and
lods
loop
imul
and
jne
test
lcall
popa
or
or
lcall
popa
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
mov
adc
mov
jne
or
lcall
popa
pop
jne
or
adc
popa
or
or
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
shlb
sbb
dec
push
jbe
jne
or
shrb
jne
or
mov
popa
popa
or
jmp
int
pop
lcall
bound
repz
or
xchg
pop
int
or
mov
adc
mov
jne
or
mov
outsl
or
pop
call
xchg
outsb
cmp
popa
popa
or
lcall
popa
pop
jne
out
jl
jne
test
lcall
outsb
push
pop
jne
or
cmp
jne
or
mov
outsl
or
pop
call
mov
or
jne
or
int
jg
lcall
mov
or
lcall
pop
loop
arpl
out
xchg
lcall
bound
xchg
bound
sbb
xchg
repz
test
lcall
popa
or
xchg
mov
lock
or
xchg
or
lcall
xor
xchg
repz
popa
popa
lock
bound
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
mov
jne
or
popa
mov
lock
popa
popa
lock
cmp
or
pusha
push
test
lcall
popa
xchg
outsb
gs
popa
popa
adc
imul
arpl
or
lcall
popa
or
bound
push
bound
loop
imul
bound
imul
bound
add
loop
bound
stc
loop
imul
stc
loop
imul
bound
pop
dec
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
dec
arpl
xchg
pop
outsb
int
arpl
out
adc
bound
loop
imul
bound
add
loop
bound
and
add
loop
bound
arpl
add
loop
bound
cmp
loop
bound
jmp
add
loop
bound
cmp
add
loop
bound
add
loop
bound
jmp
add
loop
bound
dec
loop
imul
bound
loop
imul
bound
add
loop
bound
arpl
add
loop
bound
pop
loop
imul
bound
loop
imul
bound
add
loop
bound
cmp
add
loop
bound
cmp
add
loop
bound
and
add
loop
bound
dec
loop
imul
bound
add
loop
bound
push
loop
imul
bound
pop
cmp
bound
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
cmp
bound
sub
fucomi
and
loop
arpl
rorb
dec
push
notl
loop
bound
adc
pop
loop
bound
adc
shlb
popa
bound
or
dec
push
lcall
pop
push
bound
or
adc
popa
bound
jne
bound
loop
arpl
pop
loop
arpl
or
lcall
popa
or
bound
push
or
call
imul
popa
popa
popa
adc
push
arpl
pop
loop
arpl
or
bound
bound
lcall
push
imul
cmpsl
lcall
bound
adc
bound
xchg
pop
lcall
mov
bound
pusha
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
jne
test
lcall
popa
or
bound
push
or
popa
popa
fcomps
arpl
popa
and
mov
loop
imul
bound
imul
bound
add
loop
arpl
stc
loop
imul
stc
loop
imul
bound
pop
mov
bound
lea
bound
bound
and
jae
or
bound
bound
or
call
mov
bound
bound
adc
bound
loop
imul
bound
add
loop
arpl
and
add
loop
arpl
arpl
add
loop
arpl
cmp
loop
arpl
jmp
add
loop
arpl
cmp
add
loop
arpl
add
loop
arpl
jmp
add
loop
arpl
dec
loop
imul
bound
loop
imul
bound
add
loop
arpl
arpl
add
loop
arpl
pop
loop
imul
bound
loop
imul
bound
add
loop
arpl
cmp
add
loop
arpl
cmp
add
loop
arpl
and
add
loop
arpl
dec
loop
imul
bound
add
loop
arpl
push
loop
imul
bound
pop
sti
arpl
popa
out
lea
bound
bound
and
arpl
mov
or
bound
bound
or
call
sti
arpl
add
lea
bound
stc
adc
cmpsb
arpl
rorb
dec
push
notl
loop
arpl
adc
adc
bound
bound
xchg
arpl
or
dec
push
lcall
adc
stos
arpl
rorb
adc
popa
bound
in
arpl
fcomps
arpl
popa
fsubs
stos
arpl
popa
out
or
bound
loop
arpl
or
adc
popa
or
bound
out
or
bound
arpl
or
bound
bound
dec
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
loop
arpl
push
mov
bound
repz
xor
loop
mov
lock
lock
bound
bound
bound
sbb
nop
lock
popa
lock
popa
bound
bound
bound
sbb
nop
lock
popa
popa
lock
popa
popa
popa
bound
repz
lock
popa
popa
popa
lock
popa
popa
popa
or
adc
popa
or
mov
adc
shlb
sub
mov
jne
or
popa
and
popa
or
leave
cmp
call
or
sbb
cmp
adc
loop
arpl
lods
pop
add
loop
arpl
test
lcall
popa
or
shrl
pusha
or
fisubrl
mov
bound
in
arpl
pop
jne
or
pop
push
add
mov
sbb
cmp
adc
in
arpl
pop
jne
or
jbe
push
popa
popa
popa
fsubr
cmp
mov
fcoms
sbb
jbe
movsl
or
jne
xchg
repnz
adc
mov
jne
fcoms
or
jne
or
mov
jae
or
xchg
xchg
or
xchg
xchg
lcall
jne
out
lea
cmp
jne
out
sbb
xchg
or
and
lods
loop
imul
add
jne
mov
add
jne
inc
loop
imul
add
jne
dec
loop
imul
add
jne
pop
jne
or
lcall
jne
or
xchg
lcall
leave
cmp
call
dec
xchg
outsb
ss
popa
popa
or
lcall
popa
mov
dec
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
adc
pop
jne
or
lcall
popa
xchg
repnz
int
outsl
or
pop
call
push
sub
dec
or
dec
xchg
or
jne
or
pop
xchg
or
jne
xchg
bnd
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
popa
or
pusha
pop
int
lock
push
jne
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
outsb
push
pop
jne
lock
popa
popa
or
or
or
pop
call
xchg
outsb
or
popa
xchg
bnd
xchg
repnz
cmpsl
pop
xchg
outsb
add
popa
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
push
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
popa
or
lcall
outsb
push
pop
jne
or
lcall
outsb
push
pop
jne
lock
jne
pop
jne
or
call
lcall
push
jne
or
call
lcall
push
or
call
sbb
outsl
or
pop
call
pop
or
imull
pop
call
lcall
outsl
or
pop
call
sbb
or
pop
call
dec
or
xchg
test
outsl
or
mov
or
lcall
popa
or
or
pop
call
pop
or
imull
pop
call
lcall
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
leave
leave
and
das
loop
imul
add
jne
test
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
mov
cmp
push
or
lcall
leave
cmp
jne
out
add
loop
imul
push
test
lcall
outsb
cltd
imul
mull
or
jne
das
loop
imul
add
mov
repz
bound
pop
jne
or
lcall
push
outsb
cltd
dec
sbb
popa
fdiv
lcall
popa
popa
xchg
push
sbb
imul
imul
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
adc
ljmp
rorl
lcall
popa
or
adc
or
lcall
repnz
cltd
dec
sbb
popa
test
sbb
xor
cmpsl
popa
popa
or
or
lcall
into
popa
or
mull
or
jne
das
loop
imul
add
mov
repz
jne
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
add
loop
imul
out
pop
scas
sbb
and
popa
movsl
or
lcall
xchg
repnz
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
xchg
or
pop
jne
or
pop
jne
out
hlt
scas
sbb
int
xchg
pop
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
and
adc
add
jne
and
add
jne
mov
add
jne
test
lcall
outsb
push
or
or
pop
call
xchg
xchg
mov
fsubr
popa
popa
popa
or
imul
leave
cmp
pop
pop
call
lds
jne
push
jne
or
imul
testl
int
adc
pop
call
imul
or
imul
leave
cmp
pop
pop
call
lds
or
imul
lcall
leave
cmp
push
pop
jne
out
or
imul
leave
cmp
pop
pop
call
lds
or
imul
xchg
pop
lcall
leave
cmp
push
pop
jne
out
mov
imul
lcall
imul
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
mov
or
lcall
popa
or
pop
int
adc
pop
jne
or
call
lcall
push
or
call
xor
outsl
or
lcall
popa
out
or
lcall
sahf
pop
popa
popa
and
sub
lods
loop
imul
bound
jne
pop
loop
pop
bound
loop
pop
bound
or
call
lcall
bound
or
call
push
sub
test
lcall
popa
cmpsl
jne
mov
or
bound
xor
call
push
push
pop
loop
pop
bound
loop
pop
bound
adc
pop
bound
lcall
pop
jne
or
xchg
lcall
test
lcall
popa
pop
loop
pop
bound
mov
repz
bound
loop
pop
bound
jne
or
repz
bound
jne
fcomps
mov
bound
popa
or
fdiv
lcall
or
bound
cmp
push
bound
loop
pop
bound
or
bound
mov
repz
push
bound
loop
pop
bound
or
call
dec
pop
bound
lcall
bound
loop
pop
bound
or
call
or
bound
mov
repz
bound
outsl
or
pop
call
mov
or
bound
or
bound
pop
bound
shlb
bound
bound
xor
call
xchg
or
or
imul
cmp
ljmp
lock
sbb
pop
jne
fcoms
mov
popa
popa
and
fisubs
popa
scas
sbb
pop
jne
out
xchg
sbb
xchg
pop
jne
xchg
bnd
or
sar
outsl
or
popa
popa
pop
mov
repnz
cmpsl
pop
xchg
adc
popa
popa
popa
xchg
bnd
or
sub
pop
xchg
repnz
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
out
out
mov
or
not
popf
xor
popa
popa
mov
xchg
bnd
or
imull
sbb
jb
bnd
or
not
xchg
repnz
or
push
xchg
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
mov
and
loope
popa
popa
or
jne
out
mov
cmp
jne
loopne
popa
popa
lock
bound
xchg
bnd
or
imull
sbb
pop
out
xchg
sbb
xchg
pop
jne
fsubr
push
loopne
imull
dec
arpl
xchg
bnd
xor
repnz
or
popa
popa
xchg
repnz
int
xchg
repnz
cmpsl
pop
out
scas
sbb
push
scas
sbb
push
and
fsubs
jne
pop
jne
or
and
popa
popa
fsubrs
jne
test
lcall
popa
lock
popa
popa
jo
bound
bound
jne
pop
jne
or
js
jne
or
sub
jne
or
xchg
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
push
fs
push
xor
push
pop
or
lcall
popa
pop
jne
bound
mov
or
mov
popa
popa
repz
push
jne
or
popa
bound
xor
bound
jne
or
lcall
popa
mov
fldcw
popa
or
push
push
ficoml
jne
or
jecxz
int
or
push
push
fidivl
int
or
push
push
pop
int
or
mov
push
pop
jne
or
std
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
and
jne
test
lcall
popa
pop
jne
and
xchg
popa
popa
popa
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
fsubrs
popa
popa
popa
or
and
xor
and
popa
or
adc
repnz
jne
or
mov
or
pusha
cmpsl
fidivrl
xor
or
popa
or
push
or
pop
movsl
or
stc
or
pop
movsl
lods
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
or
lcall
popa
or
xchg
mov
out
push
bound
out
dec
bound
bound
int
outsl
or
pop
call
out
or
xchg
or
out
out
lock
bound
or
xchg
popa
movsl
or
lcall
or
dec
push
loop
imul
mov
int
or
popa
pop
push
fcomi
push
popa
out
scas
sbb
out
pop
scas
sbb
and
popa
movsl
or
jne
pop
jne
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
popf
xor
popa
popa
out
or
popa
test
sbb
xor
cmpsl
popa
popa
or
push
mov
jne
mov
out
dec
scas
sbb
int
xchg
pop
push
dec
xor
int
or
popa
adc
cltd
push
and
leave
leave
or
push
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
fsubrs
out
or
popa
test
popa
popa
popa
fcomps
or
or
jne
or
jne
out
inc
or
popa
or
xor
int
or
popa
adc
cltd
push
and
fsubs
jne
lods
loop
imul
add
jne
or
and
adc
add
jne
or
push
icebp
or
lcall
popa
or
or
pop
call
pop
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
or
pop
call
mov
popa
or
lcall
popa
or
or
pop
call
out
or
lcall
popa
or
or
pop
call
or
or
pop
call
pop
jne
out
jns
jne
test
lcall
popa
or
or
pop
call
pop
jne
or
imul
or
imul
push
and
popa
movsl
or
mull
iret
and
repz
bound
loop
imul
bound
jne
lods
mov
imul
bound
loop
imul
leave
cmp
call
imul
add
loop
pop
bound
mov
or
pop
bound
or
call
repz
bound
outsl
or
pop
call
pop
pop
jne
out
mov
bound
or
push
pop
jne
or
pop
outsl
or
pop
call
cmp
bound
or
pop
call
cmpsl
pop
les
pop
call
lcall
jne
shl
lea
bound
jne
or
imul
bound
add
bound
or
call
imul
bound
mov
imul
bound
outsl
or
pop
call
xchg
outsb
out
popa
popa
popa
or
or
pop
call
imul
bound
jne
sbb
loop
pop
bound
push
loop
pop
bound
int
scas
pusha
pop
adc
bound
loop
pop
bound
or
call
pop
pop
bound
pusha
or
bound
adc
bound
pop
pop
jne
or
bound
or
push
pop
jne
or
bound
xor
call
xchg
lock
bound
loop
pop
bound
or
call
imul
fs
fs
popa
popa
popa
pushl
sub
jne
daa
pushl
adc
jne
sub
jne
push
pushl
and
jne
and
jne
adc
pushl
pop
pushl
sbb
jne
and
jne
pushl
hlt
pushl
stc
pushl
dec
pushl
dec
pushl
push
pushl
pusha
pushl
pop
pushl
push
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
dec
pushl
pushl
inc
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
cmp
jne
xor
pushl
aas
pushl
dec
pushl
ret
push
push
pushl
sbb
jne
sbb
jne
out
pushl
icebp
pushl
lock
repz
cli
pushl
in
pushl
in
pushl
pushl
pushl
pushw
outsl
pushl
scas
pushl
mov
pushl
and
jne
mov
pushl
lods
pushl
mov
jne
and
pushl
std
pushl
push
fcomps
bound
popa
out
lea
bound
bound
and
jae
or
bound
test
popa
popa
popa
fcomps
add
cmpsl
bound
xchg
push
loop
bound
sbb
xchg
bound
add
xor
bound
out
sbb
bound
fcomps
bound
popa
or
bound
ficompl
popa
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
bound
dec
mov
bound
aas
xchg
or
bound
aas
cmp
cmpsb
bound
push
pusha
pop
adc
bound
or
bound
or
bound
repz
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
loop
bound
cmpsl
jne
jae
or
bound
repz
int
push
adc
push
bound
pop
loop
bound
or
bound
or
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
mov
bound
and
leave
fcoms
lcall
fsubrs
mov
or
jne
or
xchg
imul
push
or
pop
jnp
push
sub
.byte
popa
