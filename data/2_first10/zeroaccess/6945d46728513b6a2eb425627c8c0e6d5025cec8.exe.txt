push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
in
mov
push
bound
fstpl
bound
sub
pop
add
pop
jne
adc
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
xorb
out
dec
aaa
outsb
and
cmp
gs
mov
push
cmp
mov
inc
xchg
mov
xchg
in
sbb
imul
orl
stc
call
dec
sbb
fisttps
ja
clc
mov
imul
std
sbb
leave
hlt
sbb
jmp
sub
loop
cmc
sbb
dec
or
aad
push
test
mov
mov
dec
movsb
jp
test
or
xchg
aas
xchg
add
les
rcrl
add
lret
je
pop
mov
dec
divl
mov
inc
icebp
outsl
add
mov
rcrl
lret
jno
decb
push
std
mov
dec
sub
or
cmp
std
jmp
mov
cmp
leave
test
mov
xchg
lcall
dec
xadd
jmp
sub
test
mov
out
mov
pop
loope
lret
sub
inc
fcom
ror
roll
sub
and
imul
mov
insl
in
adc
dec
push
ljmp
stos
push
jp
mov
add
add
mov
repz
push
lret
in
cmc
movsl
js
mov
jb
pop
cmp
fsubrl
lret
in
aam
mov
and
cs
sahf
mov
mov
sub
jno
nop
mov
shlb
fsts
jb
cli
cli
fnstenv
push
mov
mov
xchg
inc
imul
sub
and
fs
scas
outsl
mov
dec
shl
add
fbld
shrl
mov
jae
in
lock
lock
lods
stos
int
jbe
pop
and
add
mov
adc
pop
jecxz
add
mov
addr16
add
pop
lods
in
xor
xchg
jae
int3
shll
inc
fidivl
jge
or
dec
bnd
inc
jbe
shlb
fsubrs
jle
ja
shlb
push
jns
shlb
cmp
or
stos
into
and
mov
push
jbe
test
cwtl
test
add
xchg
clc
inc
and
pop
mov
cmovp
sub
out
and
pop
les
leave
ret
ljmp
jo
mov
in
and
mov
adc
sub
sub
or
inc
je
in
xor
or
dec
mov
xchg
adc
ret
pop
mov
fisttps
xor
jbe
dec
imul
xlat
mov
neg
cs
jmp
cmp
cmc
and
test
cli
sbbb
dec
repnz
pop
dec
cmpsb
cli
cmp
enter
pop
insl
outsb
movsb
sbb
movsl
lahf
outsl
add
andb
mov
mov
push
fisttpl
xor
cmc
pop
jns
jg
xchg
arpl
fs
xor
sbb
aad
cmp
mov
test
or
lahf
inc
clc
mov
scas
jge
adc
jge
cmp
inc
scas
xor
mov
fdivl
js
sbb
adc
xchg
in
jns
ficomps
nop
incl
inc
lock
scas
jns
inc
sahf
add
sar
xor
cmp
mov
xchg
adc
test
cld
or
xor
test
ds
fs
mov
cmpsl
lds
js
inc
mov
dec
ds
cmc
cmpsb
ljmp
rcrb
jns
aad
jns
cmp
fsubrl
push
push
and
movsb
add
mov
loop
sbb
decl
mov
rcrb
insl
lds
push
push
cltd
sub
and
cwtl
add
xchg
lods
or
imul
jecxz
mov
jo
adc
pop
hlt
xchg
in
inc
enter
cmpsl
cwtl
aas
add
stc
out
xor
insb
fcmovb
xchg
push
cmpsb
mov
repz
mov
std
icebp
and
sub
bound
inc
popa
rcrb
jns
and
cmp
js
aaa
mov
imul
cmc
sbb
dec
faddl
push
mov
mov
jl
mov
add
sbb
mov
lret
idivb
cli
sub
in
ds
in
dec
movsb
mov
repz
ds
cmpsl
jl
jb
adc
and
popa
out
sarl
hlt
inc
and
rclb
cmpb
or
or
add
bound
cmp
fildl
mov
jmp
push
outsl
sub
mov
stc
movsl
nop
imul
sbb
mov
in
clc
jno
add
mov
mov
stos
jno
data16
cmc
dec
push
mov
inc
and
icebp
jb
push
stos
mov
mov
mov
ss
mov
jl
stos
xchg
mov
repz
mov
pusha
sub
test
sarb
test
dec
les
data16
mov
pushf
out
dec
shrb
cmp
pop
mov
mull
stos
mov
cld
out
pop
push
cmp
filds
popa
mov
in
jno
lods
les
lods
pop
sahf
add
jge
and
std
loopne
pop
pusha
push
mov
es
adc
leave
mov
and
jbe
xlat
xor
imul
and
push
jae
daa
pop
ds
and
stos
loope
pop
add
adc
jns
mov
fisttps
in
jno
xchg
push
pop
jmp
call
adc
js
xchg
cmp
mov
and
je
imul
jecxz
mov
sbb
xchg
dec
outsb
std
nop
xchg
mov
subb
idivl
out
fistps
mov
mov
sub
lods
divl
dec
mov
pop
cmp
jle
mov
and
push
lds
mov
mov
mov
push
test
sbb
jb
adc
daa
fs
shll
sub
jae
stc
lahf
xchg
mov
xlat
mov
dec
xor
push
adcb
push
cs
iret
sbb
dec
xchg
rol
mov
inc
push
loope
xchg
push
push
sub
ret
adc
test
adc
out
xor
sub
and
loopne
mov
mov
fsts
sbb
mov
pushf
sub
ficomps
imul
dec
mov
mov
xchg
in
mov
pop
mov
push
jne
cmp
ja
xchg
cmp
sub
ja
and
aad
bound
mov
rolb
shl
cmpsb
push
nop
push
pop
dec
pop
call
push
lcall
addr16
aaa
or
adc
cmp
inc
out
xor
aad
aad
xor
imul
enter
imul
mov
fs
rcll
pop
xor
push
xlat
and
pop
fiadds
ret
into
int3
mov
jo
cwtl
iret
shlb
mov
movsb
jnp
pop
inc
sub
and
mov
cmp
mov
dec
leave
mov
sbb
pop
pushf
xchg
mov
insb
popf
sbb
push
jb
pop
add
push
loope
and
arpl
dec
lcall
xchg
push
jle
pop
lea
arpl
mov
fs
mov
mov
dec
std
inc
dec
inc
test
es
push
push
cwtl
nop
sub
xchg
fwait
lods
inc
psrlw
cwtl
mov
shl
or
rcr
sbb
lock
ja
pop
sub
or
lods
jns
mov
push
cmpsb
mov
pusha
push
flds
dec
das
xchg
inc
inc
pop
mov
sub
mov
hlt
or
out
push
sbbb
dec
and
call
stos
mov
add
rolb
stc
xor
repz
jge
jmp
mov
sub
add
in
mov
mov
mov
lock
sub
adc
cmp
cwtl
std
pop
jns
test
xchg
cs
insl
clc
cmp
sub
cmp
push
inc
pop
ss
hlt
mov
jae
xorb
cmp
sub
je
dec
cmp
xlat
xchg
inc
cmp
push
repz
ret
mov
and
sbb
inc
jg
sub
pop
lret
insl
fimuls
or
or
mov
adc
mov
iret
scas
call
adc
push
lods
stc
xor
repnz
ljmp
jb
jae
addb
sub
mov
sar
and
or
std
scas
mov
or
sbb
mov
jle
cwtl
popa
mov
loop
push
xchg
cmp
mov
subb
jl
jnp
cmp
inc
lea
push
jb
fstpt
loope
bound
scas
std
int3
add
repz
movsl
push
xchg
xchg
cwtl
xor
jle
xlat
js
sarl
jo
pop
mov
and
aaa
pop
pusha
clc
pop
fcmovnu
pop
or
mov
jmp
decl
aaa
int
loopne
cmp
insl
bound
sbb
dec
cmp
outsl
into
bound
movsl
adc
mov
lcall
sub
adc
pop
push
mov
lods
es
test
pop
mov
das
push
dec
pop
dec
mov
ret
cmp
lret
mov
mov
fadds
jl
sarl
pop
xor
cmp
imul
sub
out
fistps
inc
push
popa
adc
int
aas
jmp
mov
mov
xor
sub
call
xor
pop
inc
jns
add
xchg
add
push
mov
stos
dec
xchg
jp
out
popa
xchg
xchg
mov
outsl
hlt
das
xchg
add
lret
inc
sub
pop
ljmp
and
jnp
mov
out
cmp
lret
inc
xor
sub
cmp
call
test
arpl
xor
mov
hlt
popa
inc
test
incb
in
std
outsl
sub
outsl
xor
dec
xor
sarl
mov
sahf
into
or
inc
cmp
stc
inc
adc
out
lods
xlat
and
and
adc
aam
aad
pop
das
push
jnp
jns
fsubl
mov
xchg
adc
sub
or
cltd
inc
push
lods
insl
or
bound
sbb
mov
and
push
int
inc
cld
lcall
mov
add
xchg
clc
sbb
add
mov
rcl
cltd
test
testb
pop
insb
jl
pushf
mov
stos
or
out
mov
sub
mov
es
push
adc
rcll
mov
lea
xchg
arpl
aam
adc
mov
dec
mov
mov
xchg
lods
int3
sub
pusha
pusha
xor
mov
loope
mov
test
jno
bound
push
imul
sbb
fistpll
out
sbb
dec
jb
dec
push
pop
mov
or
jl
jo
addr16
rdtsc
out
jg
jae
sub
pushl
and
lds
popf
sarl
cli
and
or
imul
xor
pop
push
scas
aas
aad
push
stos
imul
mov
lret
mov
sbb
sub
shrl
cmp
fnstsw
int
mov
inc
dec
daa
sbb
ss
add
ljmp
pop
je
mov
pop
aad
movsl
jmp
xor
fcmovb
add
daa
lock
ds
sub
add
ss
popf
data16
push
andb
jnp
les
xor
pop
add
data16
xchg
push
xor
and
data16
add
out
lock
insb
or
pop
mov
pop
xlat
cmp
hlt
cmpb
xchg
xor
test
std
imul
mov
push
sub
sbb
fwait
popl
and
rcll
fmull
bound
pop
cmc
imul
adc
sarl
leave
dec
add
in
call
mov
lods
sub
movsb
aas
scas
mov
sbb
fnstenv
dec
inc
ja
jns
cmpsb
aas
push
push
mov
xchg
data16
jb
mov
mov
mov
lahf
xorb
push
orl
add
ja
mov
mov
add
dec
fwait
loopne
jmp
dec
sub
jmp
jno
cmpsl
clc
xlat
scas
sub
mov
and
jb
repnz
daa
inc
cmp
arpl
pop
incl
into
divl
dec
push
mov
push
iret
mov
fisubl
testl
sbb
clc
in
lods
or
mov
mov
push
inc
mov
mulb
adc
cmp
fsubrl
int
jge
ss
sbb
mov
das
inc
mov
in
dec
repnz
push
jno
add
sub
stos
ret
inc
mov
mov
pop
fcoms
out
ret
mov
xchg
xlat
into
pop
pop
pop
push
nop
mov
mov
jnp
sahf
adc
popa
test
mov
cmc
sbb
nop
ror
mov
adc
jns
lds
into
mov
lahf
dec
inc
sub
fwait
xadd
and
js
stc
test
pop
push
xchg
pop
mov
or
mov
je
inc
sbb
adc
lea
loopne
push
pop
mov
lret
aas
pop
fistps
xchg
cmp
and
inc
cmp
push
mov
inc
outsb
mov
out
and
call
addr16
pop
sub
subl
jnp
inc
mov
les
inc
imulb
dec
push
aam
mov
and
push
je
mov
hlt
lock
or
out
in
push
mov
inc
dec
cmovns
mov
cwtl
int3
mov
out
or
jmp
in
cmp
jge
std
das
jle
mov
hlt
cltd
push
mov
cmp
lret
rorb
fistl
arpl
push
repnz
jns
dec
fwait
xor
iret
divps
negl
int3
stc
fdivrl
lods
andl
push
sub
cmp
push
andl
xchg
xchg
push
stos
and
cmp
in
andl
mov
sbb
add
mov
pop
jl
push
js
pushf
push
push
sbb
shll
fisubl
cld
mov
pop
add
dec
ss
les
lahf
std
jnp
divl
in
adc
outsl
mov
push
dec
clc
or
dec
ret
shrl
dec
pop
mov
int
out
filds
pop
add
fistpll
rcrb
insb
fidivs
dec
ret
cmp
ja
push
scas
sub
xlat
test
cwtl
ficoml
inc
pop
jp
jne
xchg
mov
pop
and
stc
mov
lea
int
xchg
jecxz
leave
outsb
mov
lahf
std
dec
mov
insl
cmpsl
cmpsb
imul
scas
push
insl
mov
fbld
and
mov
xor
jg
dec
and
int
testl
jge
ljmp
adcl
cmp
mov
cmc
scas
mov
aad
jb
inc
dec
mov
notb
add
imul
dec
push
dec
xor
and
push
stos
sub
inc
pop
mov
out
xlat
add
mov
test
into
jg
jno
movsl
test
cmpl
xchg
lock
or
iret
test
push
mov
enter
mov
jle
shr
mov
xor
cmc
sbb
scas
cmp
lods
nop
pop
cmp
jge
sbb
add
test
xchg
cmpsb
pop
in
push
mov
clc
xor
jae
inc
insb
and
xorl
ret
mov
mov
adc
repz
flds
inc
add
mov
je
xchg
pop
cs
movsl
jno
pusha
push
or
xchg
adc
cmp
mov
mov
and
imul
aad
rcrl
ret
mov
test
jg
xor
icebp
lods
popa
xchg
mov
inc
divl
push
cmc
xchg
jmp
mov
dec
pop
push
inc
sbb
push
mov
ja
sub
les
push
imul
add
xchg
jp
test
add
lock
pop
xor
add
or
dec
xchg
dec
shll
fadds
and
push
je
loope
mov
subb
xchg
mov
insl
inc
je
mov
pop
fsubs
into
and
in
jae
nop
mov
mov
sbb
fcomps
aaa
pop
arpl
xchg
fadds
push
icebp
lock
mov
mul
ljmp
push
ja
inc
mov
push
push
sub
shlb
sbb
cs
inc
xchg
or
push
mov
ret
cmp
sahf
mov
push
movsl
ds
repz
xchg
ds
popf
pusha
cmpsl
sbb
pop
imul
popa
push
pop
lock
hlt
add
xchg
jecxz
add
cmpsb
testb
scas
dec
stos
mov
cmp
push
fildll
movsl
dec
insl
adc
xchg
push
cli
mov
add
outsl
loop
xor
js
dec
lea
nop
clc
call
mov
mov
mov
pop
js
sahf
xor
cwtl
sbb
mov
push
scas
jp
std
add
dec
fsubrs
cmc
jb
mov
inc
xor
sbb
into
push
xor
sub
sti
pop
sbb
aad
loop
xchg
xor
sub
es
jl
inc
jo
mov
push
repz
stos
stos
xor
mov
push
jg
push
add
out
enter
push
xor
les
and
dec
jmp
negl
pop
bound
xor
push
fs
pop
test
sbb
data16
cmpsl
ljmp
xor
bound
arpl
std
dec
push
mov
stos
ficoml
int
xchg
insb
repnz
mov
call
pop
xchg
and
sbb
outsl
cltd
and
shll
jb
or
dec
into
push
mov
or
clc
dec
stc
xchg
popf
cmpsb
dec
or
pushf
fldl
lds
jmp
jae
repz
cs
mov
int3
hlt
mov
pop
mov
repnz
in
pop
jge
pop
and
mov
pop
les
loopne
dec
mov
inc
mov
mov
fnstsw
dec
shl
popf
xchg
mov
mov
mov
pushf
movsb
insl
out
sbb
pop
jmp
sub
pop
or
rcl
mov
das
pushf
mov
rcr
lret
cmc
int3
push
dec
and
dec
cmp
out
leave
fsubrl
mov
je
into
mov
es
aaa
outsl
xor
and
or
arpl
decl
lods
push
mov
idivl
cwtl
jnp
jp
bound
xchg
push
inc
push
rorb
movsl
and
repnz
lret
leave
push
and
cwtl
mov
xor
push
mov
add
clc
mov
jno
mov
outsl
mov
or
in
cmpsb
enter
bound
mov
fmuls
fcoms
pushf
and
jl
testl
in
inc
lock
test
shrb
jmp
shrl
mov
iret
xor
test
cwtl
pop
push
out
inc
mov
popf
adc
imul
jnp
cmp
mov
pop
dec
jecxz
repz
pusha
or
cwtl
in
clc
out
pusha
jecxz
lods
frstor
aaa
push
sub
inc
xchg
inc
icebp
lds
and
cld
dec
push
jmp
jl
fidivl
mov
xor
popa
rorb
sub
in
ret
mov
lret
fdivrs
lds
jl
mov
mov
cmpsb
jle
fstl
jmp
cmpsb
jne
out
icebp
cmp
xor
clc
mov
adc
aam
mov
pop
or
cwtl
scas
mov
dec
cmp
adc
ret
sub
jnp
lods
and
mov
jo
inc
pop
inc
jne
and
in
inc
mov
int
inc
xor
sahf
out
int3
pop
call
fstp
or
jge
aam
adc
jmp
stos
fcomps
xor
or
push
adc
sbb
lea
fildll
add
bswap
mov
das
fldcw
orb
scas
sub
mov
aaa
loopne
xchg
loope
int3
aas
xchg
mov
hlt
out
push
pop
and
lods
or
in
fsubl
jo
leave
mov
cmp
xchg
enter
jnp
in
in
dec
mov
clc
in
mov
lcall
cmp
inc
adc
rclb
and
int3
mov
pop
and
movd
insb
sti
cmpb
test
mov
bound
sbb
lea
rorl
push
push
add
xchg
pop
scas
xor
pop
mov
aas
lock
cltd
add
or
sahf
dec
stos
xchg
push
shl
jle
lret
jp
add
or
xchg
cmc
lgs
add
and
or
dec
pop
fcomps
iret
gs
fldcw
or
jo
decb
mov
testl
or
and
cli
push
inc
xor
int
loope
sarl
adc
push
inc
loop
insb
mov
bound
pop
dec
xchg
and
cltd
mov
int3
mov
vunpckhps
pop
dec
decb
and
scas
cmp
fucomi
add
leave
out
loopne
pop
cmp
dec
sbb
jae
testl
lods
out
xor
jl
push
cld
mov
mov
jl
or
mov
rolb
cmpsl
outsb
in
xchg
out
enter
add
outsl
pop
iret
or
mov
mov
jo
sbb
mov
loopne
addr16
lret
sub
push
addr16
dec
inc
add
cmp
jb
mov
xchg
adc
xchg
inc
scas
mov
inc
rcll
xor
scas
jo
dec
repnz
pop
shrb
mov
pop
mov
arpl
jmp
jne
andb
adc
jbe
push
movsb
ja
mov
add
mov
inc
pop
fiadds
popa
insl
aam
adc
xchg
jbe
movsb
aad
sub
dec
jne
pop
outsl
inc
or
dec
jg
cmp
out
cmc
or
ret
push
pop
add
jle
pop
mov
fwait
cmp
sub
ss
rcrb
sub
in
ret
movaps
out
aas
add
xor
cmp
xor
and
sub
mov
jne
outsl
and
mov
enterw
push
into
cmp
inc
sbb
arpl
jno
test
jmp
mov
mov
push
pop
xchg
fs
movsb
push
or
clc
cltd
lea
jp
jp
cmp
xchg
or
push
push
xchg
xor
lock
pop
jne
dec
lea
mov
fsubp
lods
xchg
mov
xor
mov
mov
add
push
pop
rcrl
mov
outsl
mov
outsb
dec
sub
stos
cmp
dec
dec
push
mov
adc
mov
adc
rcrl
out
xchg
xchg
in
cli
or
je
push
dec
mov
int
xchg
mov
inc
mov
pop
sub
andb
pop
mov
clc
in
outsl
lahf
std
sub
cmp
pop
add
stos
pusha
out
ror
pusha
mov
jmp
inc
and
std
and
fnsave
mov
xchg
in
or
rcll
xchg
mov
dec
and
xchg
xor
or
jae
adc
pop
cld
ja
jmp
push
or
pop
add
sbb
leave
push
jg
pushf
sbb
push
lret
pusha
iret
orl
cltd
dec
add
jl
cmp
scas
pusha
hlt
pushf
push
or
arpl
xor
jmp
das
repz
xchg
icebp
mov
pusha
mov
inc
xchg
jno
std
inc
out
daa
cli
orb
cmp
fbld
stos
into
and
daa
stos
xchg
xor
ret
stos
xchg
jo
rol
jb
push
movsl
sub
xchg
and
pop
mov
mov
mov
jmp
add
outsb
add
cltd
loope
lahf
sti
out
and
xchg
sub
and
push
mov
push
push
ret
arpl
jmp
cwtl
cli
test
mov
les
mov
int3
push
xchg
xor
cltd
or
or
xor
or
sahf
and
cmp
adc
pushf
jmp
out
push
aas
ss
push
inc
dec
stc
or
loopne
cltd
negl
push
fildl
popa
pop
xchg
xor
mov
shrl
dec
into
fsubr
call
mov
pushf
sahf
push
leave
xor
xchg
insb
cld
out
jnp
mov
and
push
and
sbb
clc
and
and
addl
jmp
mov
gs
out
adc
shll
jbe
cltd
sbb
and
inc
in
lock
xchg
dec
mov
xlat
fsub
divb
cltd
pop
divb
push
and
das
mov
fwait
imul
cs
cmpsl
repnz
loop
add
xchg
push
sub
pop
sub
pop
jae
jb
imul
dec
nop
cmpsb
data16
vpcmpeqb
jecxz
arpl
lahf
push
inc
insl
inc
into
pop
sbb
lds
push
daa
sub
mov
mov
xor
cmp
ljmp
inc
inc
inc
into
loopne
pusha
cld
mov
xor
lds
rorb
iret
rcrl
or
or
and
in
push
scas
shlb
push
mov
aam
cmpsb
push
jge
loopne
add
push
xchg
inc
insl
xchg
decb
addl
ljmp
dec
notb
mov
jne
mov
movsb
sub
xlat
shr
mov
shr
mov
fs
out
dec
or
dec
mov
adc
addl
idivb
mov
arpl
pop
fisttpl
nop
mov
loop
sbb
mov
enter
dec
jge
fsubl
xor
mov
or
sti
pop
mov
and
mov
hlt
xchg
pop
roll
loopne
mov
bound
sbb
je
pop
mov
xchg
and
xor
push
ret
mov
loope
jb
aaa
inc
push
push
sub
xchg
negl
push
divl
jp
decb
dec
lret
push
mov
jmp
jns
sub
cmp
into
and
pop
xor
negb
xchg
outsl
arpl
inc
jnp
in
pop
push
loopne
mov
loopne
shll
inc
jo
and
repnz
mov
mov
adc
pop
or
adc
mov
sub
iret
mov
movsb
push
rclb
push
cli
fsubl
fnstenv
imul
inc
notb
cmpsl
mov
cwtl
jns
jp
test
int
mov
adc
push
jbe
negl
int
xor
nop
imul
imul
push
mov
setnp
sbb
sbb
xchg
ficomps
popf
fldcw
divl
das
jae
popf
mov
in
fdiv
push
cmp
mov
push
test
mov
lods
jmp
pop
add
push
out
rolb
cmpsl
mov
ret
push
aas
aam
scas
mov
scas
stos
sti
icebp
dec
add
fldcw
add
test
fsubr
pop
xchg
shrl
loopne,pt
lcall
lahf
dec
dec
test
lret
arpl
mov
les
jge
leave
push
nop
mov
cmp
insl
mov
xchg
cwtl
leave
lret
leave
sub
add
outsl
xor
pop
leave
clc
sub
mov
dec
aam
rcr
cmp
test
in
jp
lret
ljmp
add
shlb
out
add
test
lret
and
addl
mov
out
or
mov
je,pn
stc
inc
jle
ds
shl
mov
bound
or
xor
add
andb
xor
and
jno
pop
fstpl
lret
sahf
inc
loope
rclb
or
cmpsl
or
bswap
clc
add
mov
rolb
aaa
pop
mov
mov
scas
sti
jne
or
cwtl
sbb
jge
aaa
stos
xor
jp
or
lahf
adc
xor
xchg
in
mulb
add
js
lahf
flds
or
ljmp
dec
cmp
sbb
cli
mov
mov
jmp
stc
in
stos
adc
xchg
fwait
mov
insl
pop
or
mov
scas
or
movsl
aaa
xor
push
jae
in
das
mov
push
jae
repnz
fsubrl
or
adc
fisubl
ret
xchg
popf
jo
pop
mov
cmp
movsl
cmp
cld
mov
jge
cld
jae
ret
incb
fdivr
arpl
pop
adc
push
adc
push
clc
bound
movlps
mov
cmpsb
mov
pop
or
jp
jmp
cmp
popf
sub
inc
inc
inc
jae
idivl
call
pop
push
mov
add
jl
lods
cmp
mov
movsb
stos
addb
fidivs
fsub
cmpsb
in
and
push
negb
ljmp
cli
xchg
pop
aad
pop
clc
fcomps
dec
sub
mov
push
popf
xor
sahf
mov
pop
lahf
push
jb
fstps
push
xor
cmp
xchg
dec
jl
xor
ficomps
adc
push
or
cmp
sbb
inc
shll
and
pop
in
cltd
loopne
xchg
pushf
jo
add
mov
add
aam
pop
pusha
fiadds
das
shll
in
and
orl
mov
cmovle
jae
jle
cmp
jo
inc
push
push
je
cmp
jns
push
pop
sub
jo
pop
mov
xchg
jecxz
pop
mov
mulb
push
sbb
jne
mov
xorb
gs
in
enter
cld
call
aad
call
pop
orl
dec
pop
sub
mov
adc
cmpl
insb
sbb
in
xchg
mov
sub
arpl
fstpt
pop
pop
mov
inc
add
rcr
push
hlt
dec
xchg
lds
outsb
gs
sub
aam
xor
insb
pusha
push
daa
ds
icebp
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
faddl
mov
fstpl
bound
mov
xchg
imul
push
inc
mov
clc
mov
push
arpl
pop
popf
xchg
inc
dec
test
es
push
xor
jo
ret
fisubrl
ja
shll
imul
dec
out
cs
xor
jne
and
ljmp
test
dec
or
out
xchg
in
lods
mov
dec
mov
jp
pop
pop
jb
test
int3
daa
and
jns
cli
add
das
pop
pop
inc
lods
push
jmp
push
stos
add
enter
divl
cmp
xor
sub
test
leave
sbb
loope
xchg
inc
cmp
sub
mov
and
nop
lds
sbb
in
sub
repnz
xchg
shlb
fld
out
test
jnp
jne
lea
push
xchg
and
adc
push
movsl
sbb
xor
popa
xchg
xor
cmp
sub
jne
xor
ret
pushf
stos
ret
sti
into
adc
mov
mov
xor
lods
push
cmp
popa
push
outsl
or
movsl
pop
jle
iret
dec
mov
out
pusha
cmp
filds
mov
pop
adc
push
add
mov
jb
add
sub
mov
leave
pop
aam
vmovaps
bound
lods
hlt
std
movsb
mov
sti
inc
rorb
sbb
ja
imul
es
gs
and
jae
sub
or
sbb
or
cmpsl
cmc
fnstcw
jecxz
pushf
mov
insl
pop
sbb
mov
jmp
dec
sbb
dec
jae
loope
pusha
dec
aad
dec
push
sti
addr16
in
out
dec
dec
or
sub
lret
mov
cwtl
mov
mov
xchg
mov
xlat
outsl
mov
mov
and
mov
fs
lea
mul
inc
mov
pop
fsubs
dec
sub
insb
cltd
test
or
or
rep
mov
xchg
das
test
rolb
insl
mov
in
mov
test
ficoml
cmp
imul
adc
jp
lods
mov
dec
add
fisubrs
lahf
mov
inc
hlt
sub
sub
push
test
cmpsb
movsb
fldl
mov
xor
push
add
popa
cmpsb
lds
push
or
cmp
jp
sahf
ljmp
sub
test
stos
fistl
lahf
pop
or
pop
ds
push
fidivs
dec
shlb
mov
rorb
and
fcoms
xorb
icebp
jmp
hlt
fstp
sbb
xchg
rol
lods
leave
mov
pcmpeqb
cmp
out
cli
mov
ficomps
iret
jae
add
icebp
mov
cltd
xor
je
pop
sbb
pop
adc
popa
jl
xchg
dec
pop
outsl
sbbb
push
adc
test
aad
dec
out
mov
mov
jg
push
xor
add
mov
inc
pop
mov
dec
insl
arpl
sbb
jbe
mov
pop
mov
dec
lret
xchg
xor
or
add
mov
inc
fnstenv
ja
call
push
sbb
lret
mov
adc
or
mov
pop
aas
add
mov
je
pop
push
xchg
imul
push
mov
adc
mov
cltd
xchg
test
jbe
xchg
jb
test
je
xchg
mov
adc
pusha
lahf
cli
xchg
pop
adc
jbe
cmc
leave
repnz
clc
inc
or
int3
mov
jo
push
repnz
push
in
jne
push
fstpl
jg
push
cwtl
addr16
outsl
lock
pop
xor
adc
mov
and
push
push
pop
fidivrl
addr16
sub
dec
shr
sub
sub
outsb
scas
jmp
ret
aad
mov
sarl
fisubrs
cmp
pushf
aaa
dec
nop
sbb
mov
sahf
sub
xchg
mov
fwait
daa
pop
jno
push
jp
and
fs
popa
cmp
jbe
sub
add
icebp
int
inc
out
push
adc
rclb
mov
mov
insb
and
push
sbb
push
shll
jnp
push
dec
call
repnz
sbb
lods
mov
push
xor
in
dec
push
mov
mov
pop
push
lahf
out
jns
lcall
fldenv
dec
sbb
mov
pop
sbb
in
aad
mov
fbstp
dec
in
sti
mov
sbb
mov
adc
js
sub
add
stos
pop
or
sub
loop
xchg
xchg
mov
cs
jmp
cwtl
ss
xor
mov
lahf
dec
jo
jmp
xor
pushf
xchg
rorb
mov
lods
enter
loope
andb
add
push
fstl
sti
test
mov
and
test
and
cmp
push
data16
inc
loope
or
jecxz
and
sbb
sbb
jno
outsl
out
push
mov
xchg
outsb
sti
xor
in
pop
sub
mov
fistpll
insb
or
mov
push
xor
or
aam
xchg
jg
cmpsl
test
mov
mov
js
push
push
ds
and
fwait
adc
inc
jle
dec
pop
pop
pushf
pop
and
pusha
xlat
cwtl
mov
orb
adc
js
rep
lds
aaa
cmp
sti
test
add
xchg
das
test
outsl
mov
fcmovnu
enter
pop
popa
adc
push
xchg
mov
inc
sub
lea
mov
sbb
jge
mov
icebp
adc
in
lahf
out
sbb
loop
sub
fs
repz
icebp
inc
ds
pop
mov
stos
and
push
and
in
je
add
xor
adc
jl
aaa
dec
add
outsb
sub
xchg
pop
idiv
into
subb
add
cmp
sbb
or
or
and
jmp
pushl
mov
jge
shrl
dec
dec
aad
fstl
push
test
sub
xor
mov
dec
gs
xchg
xor
cmc
and
sti
movsl
mov
leave
xchg
mov
xchg
cld
lock
push
or
sub
sbb
aam
adc
popa
mov
push
insl
mov
cmp
dec
pop
xor
insl
loopne
mov
and
add
push
shl
daa
aam
inc
aaa
ficoms
sub
sarl
scas
dec
and
add
lcallw
or
pop
xor
adc
pop
icebp
mov
stc
mov
ja
push
shr
mov
outsl
xor
sbb
dec
scas
adc
imul
dec
pop
call
xor
cmpsl
pop
jg
mov
loopne
jo
lods
add
repz
imul
add
and
xchg
dec
or
xchg
xchg
mov
loope
lds
jge
cmpsb
mov
das
add
out
fbld
cmpsb
mov
ss
pusha
and
fldl
xchg
pop
cmp
xchg
sub
out
insl
frstor
or
mov
mov
sti
fldenv
repnz
sbb
test
cwtl
dec
fdivrs
sbb
xor
lds
idivl
js
xor
sbb
add
pushf
je
cmp
dec
sbb
dec
jmp
adc
jecxz
dec
lds
pop
sahf
mov
mov
inc
sub
or
jg
jns
push
pop
sub
ss
jne
sbb
or
jle
cmpsl
add
jo
stc
mov
xchg
inc
push
fwait
xor
xchg
sbb
pop
dec
xor
pop
arpl
outsb
fwait
mov
and
stc
cld
in
or
add
mov
loopne
das
dec
notb
sub
and
out
fwait
je
adc
mov
xor
sbb
repz
out
xchg
and
inc
loope
cmp
bound
fidivrs
arpl
fndisi(8087
mov
out
mov
ss
or
loopne
lcall
pop
push
jmp
jns
add
xor
in
mov
inc
loope
or
xchg
dec
mov
out
push
or
or
popf
jmp
fcoml
aaa
flds
or
add
xchg
pushf
aas
mov
out
sbb
sbb
cld
lods
or
inc
xor
repz
ja
sti
andb
xchg
inc
mov
dec
cmp
rorl
mov
nop
adc
mov
cs
or
in
xchg
into
leave
sbb
int3
pop
dec
out
push
pop
mov
and
sbb
xchg
test
in
mov
enter
and
out
push
jns
pop
orl
in
cmp
add
pop
repz
mov
add
add
aam
lods
sahf
and
ret
out
mov
pop
imul
into
xchg
test
xor
xchg
jb
loop
fisubs
add
mov
or
sti
and
test
aad
and
xor
cwtl
or
sahf
cwtl
mov
jg
or
xor
inc
xchg
mov
push
mov
enter
out
aaa
lahf
xlat
jne
popa
mov
dec
add
xchg
mov
rol
fcmovnu
andl
subl
push
test
xorl
fisttps
xor
jns
cmp
jns
fwait
lods
insb
sahf
xchg
popa
divb
push
cmp
push
mov
mov
and
imul
or
dec
jb
pop
imul
jo
sbb
rclb
mov
cmpsl
mov
in
pop
ror
lcall
pop
push
cltd
pop
lock
pop
les
into
jno
mov
idivl
stos
mov
jmp
xchg
pop
inc
dec
cmc
inc
inc
ret
xor
push
pop
xchg
push
hlt
call
mov
add
ljmp
push
outsl
xor
aas
test
pop
int
in
icebp
xchg
adc
push
mov
mov
push
jnp
aas
and
cmp
jnp
mov
xchg
jo
out
inc
jb
rcpps
repnz
lcall
add
and
cli
mov
jmp
ret
xchg
mov
sbb
loope
rcrl
clc
cmp
jmp
hlt
fsts
pop
psadbw
leave
scas
push
lret
mov
sti
icebp
sub
sbb
add
mov
js
jge
mov
or
int3
mov
test
addb
mov
movsb
mov
xorl
inc
sbb
in
js
push
mov
add
rcr
in
daa
inc
lods
iret
in
cli
push
pop
cmpsb
or
ret
jmp
add
xchg
and
mov
mov
ds
mov
sub
cmpsb
mov
pop
push
xor
inc
movsl
add
mov
jne
cmp
xor
js
xchg
popl
add
jae
sbb
les
ret
ss
xor
sub
in
xor
or
popf
mov
pushf
mov
idivb
mov
jle
push
fisttps
outsl
rolb
xchg
rcl
add
ds
jmp
test
mov
xchg
loop
clc
adc
mov
sbb
addr16
mov
movsb
xor
mov
call
rorl
sub
mov
cmpb
sbb
and
shrb
ja
cmp
jns
ret
add
xor
loopne
cltd
cmpsl
cmp
xchg
ret
js
imulb
jno
and
sub
movsb
xchg
mov
mov
ret
scas
ret
fadds
push
and
xchg
aad
sub
pop
repz
push
fidivl
insl
jno
andl
and
int3
insb
outsb
stc
pop
daa
sub
xchg
dec
dec
aad
hlt
lea
ficoml
shrl
aaa
mov
cmp
sbb
mov
jns
mov
rorb
push
or
addr16
inc
cmp
add
jp
test
jno
popa
mov
aam
jne
adc
xor
mov
push
repnz
cltd
dec
pop
xchg
icebp
shlb
inc
inc
xchg
xchg
jge
xchg
pop
shr
dec
cmpb
aad
push
xchg
inc
sub
mov
out
nop
sub
jno
mov
stc
pushf
push
push
and
and
incb
mov
outsb
inc
push
and
push
bound
mov
xchg
outsl
and
test
popa
push
mov
mov
mov
dec
std
inc
add
mov
mov
mov
adc
xchg
nop
pop
test
mov
fwait
fwait
sub
xor
and
fildll
fstpl
into
cmp
fs
insl
push
loop
sbb
xor
xchg
xor
push
jecxz
aaa
xor
lret
repz
stos
sbb
mov
pop
lahf
push
fdivrl
xchg
out
cmp
mov
pop
xchg
movsl
cmp
fcmovb
sub
arpl
cli
out
pushl
stos
mov
xor
sbb
mov
into
sbb
cmpsb
mov
aad
loope
push
jmp
stos
jb
clc
cs
inc
mov
sub
popa
ret
leave
or
cs
test
mov
das
mov
leave
pop
sub
repnz
fadd
inc
and
repnz
sub
xor
mov
out
pop
sbb
inc
adc
cmc
and
pop
jle
xchg
adc
dec
jle
gs
js
mov
jns
push
and
push
insl
sbbl
xchg
pop
push
xor
in
in
sub
in
jno
mov
or
push
shll
test
gs
inc
aaa
xor
push
adc
pop
cmp
mov
addl
test
pop
add
inc
add
or
hlt
lock
jl
mov
das
jae
repz
jle
sub
pop
adc
xchg
int3
call
enter
jmp
nop
out
insl
dec
and
popf
xor
shll
add
or
movsb
xchg
jb
in
movsl
lcall
les
push
push
ret
fwait
inc
pop
stos
sti
outsl
sub
shl
loopne
add
fucomi
roll
adc
fcomp
inc
jne
and
call
mov
xchg
mov
out
mov
pop
and
add
out
pusha
roll
pop
inc
rcrl
orb
inc
or
cmpsl
lsl
add
cwtl
jb
in
daa
cltd
arpl
ljmp
sub
in
jno
push
fwait
imul
movsb
cs
dec
or
xor
sub
mov
xchg
lahf
subl
push
arpl
jb
mov
fisubl
mov
outsl
repnz
add
xchg
mov
mov
mov
mov
xchg
and
mov
in
pop
mov
jge
mov
int3
icebp
mov
in
outsb
imul
cmp
lahf
in
ja
push
jl
cmpsb
nop
or
repz
les
std
lods
and
pop
test
fadds
cmc
mov
jmp
ret
mov
int3
dec
stc
imul
movsl
and
fs
stos
loop
repz
cld
popf
mov
cli
inc
mov
jnp
xchg
add
cmc
es
jb
cmpb
mov
fisttpl
lret
lods
loop
cs
push
in
pop
rcll
enter
xchg
dec
pop
mov
test
mov
jno
jne
ret
pop
lods
clc
test
adc
leave
lea
fwait
pop
cmp
stos
lds
or
xor
fld
push
out
stc
fwait
arpl
mov
iret
std
push
loope
lods
rcrb
mov
mov
enter
sub
pop
movsl
in
xor
push
test
ret
scas
sbb
xor
xchg
int
adc
mov
pop
loop
cmp
sbb
pop
mov
imul
stos
mov
mov
shr
mov
or
hlt
dec
sub
outsb
pop
mov
xchg
in
inc
add
jmp
fcmovnb
repnz
pop
push
stos
and
test
nop
and
int3
or
push
incl
fs
call
xchg
fld
push
cmp
pop
repnz
into
das
pusha
cmp
and
ljmp
das
adc
fsubl
sbb
mov
les
mov
jns
jo
cmp
jmp
inc
pop
fisttps
mov
sar
xor
es
test
pop
jbe
test
test
pop
repz
test
sarb
cmp
xlat
test
es
insb
outsb
xchg
cltd
outsb
push
xchg
mov
cltd
pushf
sbb
pop
add
mov
cmp
aad
push
mov
mov
cld
and
push
mov
loope
sarl
loopne
add
popa
xchg
fwait
cltd
outsb
leave
inc
stos
mov
mov
bound
loop
imul
add
xor
mov
dec
inc
cmp
dec
push
inc
cs
insb
cs
mov
test
outsb
loopne
xor
js
clc
add
call
mov
lea
aaa
mov
in
or
and
dec
cs
shl
cmpsb
shrb
mov
adc
cmp
adc
push
mov
lods
push
push
lock
cli
pop
xor
mov
ret
in
cmp
sub
dec
mov
in
stos
pusha
and
push
mov
inc
in
push
inc
add
and
mov
into
rcl
js
les
xor
outsb
rcrl
cmc
dec
cld
sarb
inc
inc
movb
jno
mov
ljmp
mov
cmc
in
mov
arpl
out
fsubrs
stc
and
ljmp
ret
fs
dec
cmp
sub
sub
out
popa
pop
dec
movsl
mov
lods
jge
lret
mov
push
je
mov
cmp
fwait
mov
fcmovnbe
mov
test
add
pop
sbbb
ds
xor
mov
add
jns
mulb
loopne
out
mov
out
sarl
rolb
inc
adc
fnstsw
dec
cmpsb
sub
fiadds
cli
test
mov
jl
mov
stos
pushf
pop
frstor
pop
outsl
pop
xchg
and
cmpsb
or
pop
add
mov
xor
and
fcmovb
jo
mov
mov
adc
cli
shlb
cmp
fnstcw
inc
sub
loopne
lods
mov
mov
sub
cmpsl
mov
mov
xchg
and
lods
scas
out
cmp
dec
fmuls
fwait
lret
mov
pop
fsts
adc
mov
ljmp
cmpsl
lods
sahf
adc
ret
push
ja
mov
xlat
xor
mov
xor
xor
test
sub
or
movsb
dec
iret
dec
dec
inc
icebp
cmp
mov
imul
scas
fadds
mov
jg
mov
bound
lret
andb
mov
je
js
mov
std
inc
push
mov
or
cld
ljmp
inc
enter
xor
es
pop
xchg
mov
es
mov
push
pop
or
aaa
sub
jo
mov
cltd
inc
cmp
sahf
sbb
jnp
xchg
fsts
sarl
sub
movsl
pushf
lcall
sahf
push
divl
lahf
pop
add
push
push
shlb
jae
inc
sub
scas
addr16
sti
fistpll
inc
pushf
dec
imul
and
int3
lahf
testb
sub
ret
jbe
aaa
mov
or
call
fnstcw
call
js
jl
stos
into
jmp
jne
fbstp
push
jnp
mov
push
int3
inc
xor
outsb
repz
aaa
mov
pop
popa
in
adc
outsb
ret
xor
inc
jbe
adc
imul
mov
push
xor
jae
dec
scas
inc
cmp
sti
xchg
xor
fildl
out
dec
pop
cwtl
mov
gs
pop
sub
lahf
mov
std
insl
mov
push
xor
arpl
sarb
xchg
loop
dec
push
cltd
stc
jns
in
and
in
and
insl
in
jp
cmp
inc
movsb
pop
fwait
fs
pop
and
jo
add
jo
sub
repz
push
cld
pop
mov
sub
repnz
and
push
imul
mov
aam
push
lods
inc
pop
sub
adc
in
stc
out
lods
js
scas
sbb
insl
clc
inc
outsb
dec
and
mov
out
sbb
stc
cmpb
shrb
xchg
pop
out
push
les
das
add
dec
test
fildll
insb
xchg
lret
mov
add
push
jl
int
leave
jo
inc
pop
icebp
inc
mov
jbe
hlt
and
add
clc
lcall
pop
inc
pushf
faddp
xchg
rorb
je
pop
arpl
cmpsl
vmovd
mov
stc
and
push
pop
stc
imul
jne
sbb
push
xchg
enter
gs
ja
sbb
inc
or
jb
push
and
cmp
adc
push
add
adc
stc
sbb
or
scas
lods
pop
push
xchg
cwtl
mov
xor
test
xchg
pop
aaa
cmpsb
addr16
fdivs
jae
sub
mov
pop
int
movsb
mov
leave
sti
cld
or
in
mov
testl
jg
sbb
jb
mov
outsl
push
outsb
popa
push
arpl
and
mov
rorl
xchg
es
std
and
jle
fmuls
push
mov
loopne
dec
int3
jecxz
mov
sahf
in
call
xchg
xchg
lret
mov
out
sti
cli
sub
pop
fwait
mov
xchg
ljmp
insb
mov
stos
inc
mov
ja
fs
incl
add
outsl
mov
jns
dec
mov
cmp
adc
into
ficomps
inc
lods
push
cmpsl
inc
ds
xchg
stc
push
xlat
add
xlat
lock
scas
jmp
mov
xchg
sub
xchg
cltd
std
adc
jbe
xchg
pop
xchg
jge
push
jno
mov
inc
pop
lods
or
insl
enter
push
movsb
sub
fstps
dec
jbe
cmp
xchg
push
adc
and
out
addr16
xchg
fidivrl
xor
pushf
ja
inc
push
jae
rcrl
ljmp
repz
daa
cmp
add
pushf
and
or
lods
jp
xchg
incl
loope
aad
and
inc
inc
cmp
aad
je
mov
pop
mov
sub
sahf
mov
xor
sbb
push
sbb
pop
dec
jp
sbb
mov
addr16
jmp
popf
mov
add
pop
out
mov
mov
jg
mov
pop
popa
hlt
push
add
mov
mov
cmp
in
fcomps
out
fiadds
dec
mov
mov
push
fnstenv
xor
xchg
cmpsb
xor
stc
addb
jge
pop
jns,pt
inc
mov
cmpsb
lea
mov
mov
sub
clc
and
stos
lea
fwait
sub
xchg
mov
bound
push
sub
jno
pop
retw
or
or
and
insl
or
ljmp
pop
inc
bnd
addr16
pop
dec
lahf
xor
push
call
xchg
les
lods
repz
fld
xchg
dec
cs
mov
sub
fstps
jno
cmp
insl
push
insl
push
aad
and
nop
daa
add
ret
stc
pop
push
inc
cs
add
lahf
sub
pushf
push
ret
aas
inc
xor
mov
or
push
out
das
and
ljmp
dec
and
xchg
cmp
pop
sub
cltd
mov
pop
xchg
or
roll
out
int
movsb
cmp
iret
mov
lds
push
insb
imul
arpl
fs
cs
loop
cmp
dec
repnz
inc
and
rorl
push
dec
movsl
mov
pop
mov
push
rcr
stos
mov
rorb
inc
inc
in
ja
or
loope
imul
cs
enter
daa
or
imul
inc
sarl
and
pop
hlt
jmp
jmp
shr
lea
sbb
and
mov
cwtl
jno
mov
cmc
or
int3
and
icebp
dec
pop
fs
push
mov
mov
call
dec
jnp
loope
sbb
popa
xchg
and
add
jne
add
mov
inc
xor
and
inc
loope
push
mov
cmp
dec
in
mov
sub
sbb
mov
jae
push
cmpb
rcrl
sbb
cld
mov
cs
cmp
cmp
into
cmpl
mov
lret
add
mov
shll
lret
jno
jp
mov
stos
mov
pop
xchg
mov
fwait
add
outsb
jns
jge
scas
adc
lcall
jl
movsb
cmp
int3
sub
mov
rcrl
xrstors
sub
scas
out
iret
push
movsb
bound
mov
sbb
jge
mov
jnp
sbb
inc
insb
mov
subl
inc
or
pop
dec
add
fs
fisttpl
pusha
cmp
scas
out
pop
jnp
movsb
or
xor
sub
loop
dec
add
lea
sub
lcall
aaa
ret
hlt
lret
mov
adc
mov
fisubs
jmp
mov
mov
cmpps
xchg
int
sub
pop
and
fxsave
shrl
leave
jmp
push
sbb
push
push
add
xor
adc
sub
movl
divl
stos
popa
pusha
fimuls
imul
pop
jo
loopne
rcr
xchg
lret
push
xor
insl
scas
inc
inc
inc
inc
roll
add
push
dec
dec
push
xchg
scas
lds
jl
cmc
mov
jge
and
insb
in
mov
cmp
mov
lea
rorl
div
push
xchg
and
and
jbe
cmpsl
scas
test
jnp
cmpl
into
popa
dec
ja
lods
dec
push
mov
xchg
loopne
jae
xorl
add
and
push
mov
jl
clc
andb
ja
pusha
rcr
test
jae
sbb
out
lahf
or
les
sbb
sahf
lea
dec
mov
xlat
adcl
cmpsb
cmp
xor
out
xorl
jmp
in
adc
jnp
daa
mov
mov
stos
daa
or
aad
ljmp
mov
adc
inc
bound
mov
add
ja
cmc
aam
or
shlb
inc
repnz
dec
insertq
lahf
xor
push
imul
sahf
js
test
test
outsl
rclb
jecxz
ja
xchg
inc
in
jle
adc
inc
ficomps
arpl
ja
cmp
xchg
call
xchg
lea
jo
rcr
cmp
popf
lods
push
mov
mov
std
xchg
push
pop
or
jnp
xchg
and
cmp
test
arpl
inc
xchg
in
add
or
out
or
out
sbb
push
pop
mov
inc
dec
lods
lret
push
aaa
cmc
mov
int
and
cli
aam
jmp
push
out
mov
popa
mul
aad
arpl
mov
mov
sbb
cmp
out
into
pop
mov
push
xor
adc
cmp
xchg
lock
aas
into
dec
mov
mov
sub
cmp
sbb
jne
xchg
pop
ret
sbb
adc
mov
inc
call
mov
data16
addr16
sub
loop
xchg
mov
and
dec
pop
into
add
mov
lock
int
cld
or
clc
dec
not
xchg
dec
orl
ret
das
jne
call
negl
stc
jmp
pop
mov
out
mov
pop
xchg
pop
loopne
sub
call
mov
cwtl
test
cwtl
dec
outsb
mov
clc
outsb
stos
hlt
out
je
in
pop
test
dec
cwtl
sbb
pop
cltd
iret
sahf
xchg
jg
out
pop
xchg
pop
lret
je
mov
mov
jp
frstor
fmull
lret
cld
push
add
lea
push
outsl
cmp
scas
and
inc
scas
ret
pop
pop
jl
or
jl
mov
lret
les
stos
pop
mov
ljmp
fmuls
or
aas
scas
or
push
cmp
mov
dec
jne
or
and
jmp
mov
aas
xchg
push
jbe
or
test
pusha
adc
imul
xor
stos
push
jge
adcl
insl
cli
js
xchg
aam
adc
popf
popa
sbb
test
frstor
xchg
jle
push
xor
push
push
fwait
or
jne
mov
push
fdivl
or
imul
inc
fsubr
inc
mov
adcb
mov
mov
mov
ljmp
push
call
cld
mov
mov
lods
push
cmpsb
pop
cmpsl
adc
jge
icebp
mov
loope
icebp
aaa
rcrb
sub
dec
pop
push
jnp
jbe
push
jae
pop
add
cmpsl
popf
inc
call
add
pop
faddl
add
add
sub
inc
movsl
mov
out
pop
rcll
mov
push
mov
mull
lods
sti
dec
mov
aaa
xchg
sbbb
mov
mov
mov
push
fcmovnu
sub
into
or
bnd
frstor
mov
inc
pop
cmp
fdivl
roll
jae
scas
outsb
in
call
leave
jmp
push
jge
outsb
add
mov
leave
pop
and
lea
stos
mov
xlat
hlt
push
xchg
rcrl
push
or
addr16
test
cld
js
xchg
inc
adc
lods
add
repz
mov
dec
jge
xchg
sub
sahf
iret
or
movsb
cmpsb
fsubs
popa
addr16
add
decl
mov
dec
xor
sub
xor
lcall
repnz
popa
cld
jecxz
sbb
popa
movsl
lea
insl
or
test
lret
in
popa
loope
xchg
mov
push
aam
add
xor
pop
sub
popa
cltd
push
rclb
stos
and
ss
cmpsl
or
insl
ljmp
pop
and
call
inc
sbb
movsl
mov
inc
push
or
ss
sbb
je
pop
js
jecxz
xlat
and
push
lods
outsl
sarl
popf
fdivs
or
push
js
lret
mov
les
outsb
mov
aas
mov
das
cwtl
repnz
xor
dec
mov
je
add
or
inc
movsb
mov
pusha
ret
mov
leave
mov
test
test
dec
out
adc
lods
adc
inc
mov
sbb
sahf
push
push
test
jmp
push
mov
and
call
mov
clc
mov
stos
aaa
decl
jno
jae
mov
call
and
ljmp
das
jp
mov
push
shlb
push
rcrl
xor
sbbb
jl
dec
mov
sub
notb
or
test
rcll
ss
sbb
adc
ljmp
inc
or
mov
outsb
jno
add
outsb
inc
xchg
enter
mov
adc
dec
sbb
lcall
repnz
add
insl
cwtl
jnp
jae
jl
aam
pop
mov
xchg
add
out
adc
xchg
dec
stos
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
push
mov
bound
pop
bound
pop
inc
repz
or
fisttpl
jno
pop
out
mov
adc
test
jl
cmp
adc
and
imul
push
cs
sub
push
fdivrl
sub
loope
sbbb
je
inc
cmpl
call
sub
mov
dec
inc
jp
cmp
testb
jno
mov
pop
xor
or
frstor
jo
jnp
mov
aas
aad
cmc
xor
jl
push
cwtl
dec
stos
pop
pop
sahf
cmpsl
mov
dec
adc
dec
xchg
jno
sbb
lahf
inc
sub
test
pushf
fildll
es
outsl
fwait
es
inc
adc
cmc
cwtl
inc
mov
sbb
clc
jo
jns
lret
shl
mov
subb
in
mov
mov
stc
sbb
sub
push
hlt
or
lret
push
fnstsw
or
lret
iret
cmpb
or
in
pop
bound
pushf
cltd
insl
push
pop
es
stos
pop
xchg
pop
push
sbb
push
mov
mov
push
ret
push
pop
adc
jnp
test
cltd
mov
xor
lods
or
dec
sub
data16
loope
fisttpll
cs
jl
clc
or
pop
scas
or
or
mov
and
popf
jno
inc
and
or
xchg
pop
fnstenv
out
inc
push
cltd
shll
imul
sahf
out
xor
outsl
mov
stos
lret
cmpsl
xchg
push
bound
movsl
push
xchg
mov
movsl
push
xor
pop
mov
or
jle
jne
add
or
mov
xor
imul
jnp
lods
jno
shlb
or
or
cmpsb
test
mov
jo
mov
mov
mov
xor
outsb
sahf
jne
aam
gs
cmp
lahf
nop
fstps
sub
dec
dec
mov
mov
push
or
mov
fimull
push
pushf
fistpll
loopne
cld
sub
movsb
dec
dec
iret
ret
mov
testb
les
test
hlt
lds
lock
sbb
xlat
xchg
jnp
sub
inc
je
pop
xchg
adc
outsb
ja
jae
mov
dec
ds
inc
or
adc
les
sbb
js
sbb
xchg
lods
inc
insl
mov
push
mov
es
xchg
movsl
fwait
andb
out
call
cmp
push
and
adc
push
mov
add
mov
inc
jg
sub
cmp
or
mov
cmp
pop
mov
mov
push
mov
or
rcrl
imul
dec
and
push
shlb
in
scas
or
jl
xchg
sbb
sub
cli
js
fsub
pop
push
push
xlat
jns,pt
adc
jl
out
adc
arpl
pop
xor
push
cmp
ret
xor
sbb
out
call
mov
xchg
das
out
mov
out
faddl
aas
scas
xchg
shrb
mov
out
cmpsl
jne
ss
clc
push
testl
aad
adc
jle
mov
scas
clc
mov
lods
jb
into
dec
mov
xor
sbb
adc
push
xor
mov
sarb
imul
ljmp
enter
mov
rorl
jmp
mov
fnstenv
cmp
jmp
mov
dec
xor
adc
insb
pop
sub
bound
ljmp
lea
loop
ret
adc
imul
cmp
dec
shll
scas
add
push
jb
push
jbe
ss
pop
mov
adc
inc
rcll
negb
ss
rcll
shlb
repnz
int3
ja
stos
inc
xor
dec
jno
and
cmpsb
arpl
jae
mov
jnp
xor
or
mov
push
imul
out
adcl
shlb
jp
loope
xchg
shl
outsb
fwait
test
stc
data16
outsl
mov
lods
scas
pop
les
movsb
call
out
fisubrs
mov
leave
add
sar
jle
gs
cli
lret
or
int
push
pop
rclb
push
sub
pop
mov
xchg
iret
stos
ret
int3
daa
push
sub
and
ljmp
pop
stos
insl
and
out
xchg
aad
rclb
dec
sbbl
adc
jae
cmpsl
push
adc
jns
cwtl
mov
jnp
adcl
cmp
mov
or
and
and
arpl
xchg
pop
mov
add
push
inc
xor
addb
gs
int
mov
aam
mov
das
mov
push
call
adc
push
xchg
sbb
das
jp
pop
jl
adc
push
out
sub
in
dec
inc
adc
pop
adc
test
jo
int
rorb
sub
jno
sahf
scas
dec
icebp
imul
xor
push
hlt
stos
movsl
les
nop
out
mov
gs
xchg
xor
xor
xor
lret
add
sub
sbb
cwtl
push
frstor
test
sti
stc
adc
mov
lret
out
mov
jno
inc
cli
pop
push
add
mov
add
cmp
ret
movsb
enter
data16
icebp
mov
adc
cwtl
repz
or
clc
sub
push
jbe
movsb
add
sub
xor
repnz
lea
andb
cld
push
xor
cmp
mov
cmpb
mov
jp
push
cmp
jne
sbb
std
or
xor
in
into
mull
insl
mov
std
xchg
aam
out
lcall
lret
es
dec
addb
pop
sbb
loopne
sahf
fisttpl
sbb
push
xchg
pushf
add
dec
cmp
jecxz
mov
pushf
pop
sbb
pop
scas
dec
mov
adc
mov
xchg
fidivrl
sahf
dec
stc
xchg
push
imul
testb
fstl
mov
insl
jecxz
mov
jge
mov
push
inc
push
lea
aam
cmp
jp
test
pop
jmp
push
push
cmp
mov
loop
icebp
arpl
and
popa
mov
sub
aad
sbb
mov
xor
adc
pop
mov
push
js
mov
insb
adc
or
mov
sub
insl
or
stos
xchg
shll
jno
sub
mov
pop
es
pop
push
pop
les
inc
out
mov
sub
aaa
fldt
imul
inc
push
das
sub
lods
popa
pop
sbb
sub
in
aas
mov
push
jo
les
fiaddl
shlb
or
mov
jp
clc
lods
pop
imul
jo
push
lret
push
jnp
loopne
pusha
push
mov
jne
repnz
das
mov
in
xor
jecxz
daa
insb
mov
out
fsts
call
jne
dec
push
push
aad
hlt
in
iret
outsl
stos
lret
pop
cmpsb
pop
push
add
inc
dec
stos
xor
xchg
ret
cmp
call
js
pop
lret
bnd
inc
or
jecxz
test
jg
cli
sbb
jp
xor
movb
jae
dec
pop
std
neg
xchg
and
sub
sbb
fsubs
ds
fs
jb
cmp
add
sbb
pop
fdivrs
in
jmp
cltd
test
mov
mov
int
push
out
inc
mov
mov
or
adc
jle
mov
movsb
xchg
adc
fs
xor
adc
je
aaa
into
xchg
ficomps
ret
je
shll
popf
daa
cs
jb
push
jmp
push
loopne
mov
adc
inc
mov
cmp
xor
data16
daa
add
das
push
dec
aad
mov
fucom
mov
mov
vpaddusb
sub
add
ja
jns
and
in
fwait
xchg
xor
imul
jmp
inc
or
and
sub
das
adc
sar
insb
and
hlt
and
jno
gs
cmp
mov
pusha
popa
daa
xchg
dec
dec
dec
and
xchg
fldenv
popa
jnp
jb
hlt
cwtl
xadd
loop
cmp
mov
push
add
mov
inc
leave
mov
testl
dec
push
sbb
mov
fs
enter
xlat
push
mov
push
adc
dec
gs
fsubs
ficoms
pop
push
in
dec
inc
int3
cli
add
out
sbb
stc
and
ja
xchg
sbb
popf
arpl
jge
stc
sbb
jbe
stc
subl
xchg
xchg
or
push
adc
aaa
push
movsl
adc
insl
push
xor
outsb
xorb
nop
ss
nop
push
sahf
int3
rcrb
fnstsw
test
mov
mov
jmp
push
and
and
xor
pop
hlt
jg
sbb
test
fcmovu
scas
adc
and
dec
mov
test
xchg
rol
add
mov
jecxz
jno
xor
shrb
sbb
scas
push
jg
pop
and
xchg
in
cmp
xor
lcall
fimuls
insb
mov
decb
dec
adc
jecxz
cwtl
jbe
fs
ret
mov
mov
xorb
jmp
jmp
ret
xor
jmp
fabs
int3
add
mov
dec
lods
mov
xor
imul
pop
mov
or
inc
sbb
insl
pop
fdivrp
or
das
jp
shrb
das
lea
iret
ljmp
xchg
dec
fldl
shll
push
inc
xor
push
lcall
lods
cmp
adc
mov
test
xchg
movsb
xchg
inc
dec
push
adc
jbe
or
add
mov
mov
mov
fadds
jnp
fs
pcmpgtb
imul
test
add
mov
popa
push
xor
mov
xchg
pop
cmp
cmp
or
daa
xor
mov
pop
push
or
clc
lock
xchg
and
add
sub
ljmp
test
or
out
cmpsb
daa
xor
add
cmc
pop
orb
bound
xor
lea
sbb
popa
cmp
push
test
xchg
adc
jo
movsl
clc
loope
jnp
jg
cli
ds
nop
jecxz
gs
cmp
inc
pop
call
mov
fxch
lret
sbb
mov
shlb
jnp
mov
mov
jmp
mov
mov
xor
mov
or
add
push
xor
out
sub
sub
push
mov
jle
pop
ret
shr
add
stc
or
or
cmp
stc
pop
in
repnz
repz
rcll
out
shrl
pushf
scas
ss
mov
or
in
in
shl
shll
call
sbbl
ljmp
in
mov
into
dec
into
shll
or
scas
push
test
fbld
pushl
into
jmp
repnz
aas
int
mov
inc
xchg
cmp
xchg
nop
lret
addr16
xchg
mov
jecxz
add
clc
and
jno
push
mov
mov
jmp
data16
sbbl
add
out
mov
je
dec
leave
aas
pop
fistps
mov
xchg
sub
inc
jb,pn
lret
xchg
xor
pop
mov
mov
dec
dec
shll
cmp
fldt
and
test
sub
mov
inc
mov
inc
lods
and
inc
iret
inc
icebp
outsb
push
je
xchg
jo
pop
hlt
pop
xchg
sbb
jmp
cmpl
int
popa
rolb
clc
loope
and
dec
mov
gs
push
mov
mov
inc
mov
sub
std
mov
mov
popf
es
and
insl
xor
and
mov
pop
in
jmp
call
push
dec
test
fwait
and
sarb
inc
mov
mov
xchg
cltd
or
add
insl
push
push
arpl
cmpsb
jbe
mov
xchg
mov
fs
repnz
enter
ret
xchg
stc
xchg
sbb
sbbb
sbb
sub
imul
mov
sarl
es
in
xor
pushf
fbld
xchg
cmc
or
jbe
dec
enter
mov
fbld
xchg
mov
mov
xlat
add
pop
pop
les
jbe
and
xlat
cmp
ret
pop
in
pop
cmp
lds
sub
lea
xrelease
addl
jg
sub
push
test
dec
inc
adc
push
and
and
sti
mov
mov
dec
sub
add
hlt
jae
jb
mov
scas
mov
or
xchg
lea
icebp
and
add
push
mov
push
pushf
jle
and
pop
fwait
xor
sbb
orb
push
jmp
faddl
mov
sbb
cwtl
cmp
jecxz
enter
xor
arpl
aaa
sub
inc
lahf
test
cmpsb
xor
popf
es
cmpb
adc
loope
aaa
or
jb
dec
ficoml
push
push
sub
mov
aam
and
mov
mov
jb
sub
insb
fisttps
nop
lea
dec
inc
adc
enter
adcl
xchg
cmp
stos
out
jg
rorb
arpl
std
push
push
clc
sub
pop
mov
repz
arpl
cs
fcmovnu
jp
mov
adc
jo
dec
pop
fnstcw
jl
push
mov
xchg
add
faddp
lea
xchg
jo
sar
and
sbb
iret
push
jbe,pt
push
or
inc
fisttpl
loop
rorb
shlb
lcall
jp
jg
lcall
scas
lock
jae
insb
cmpsb
pop
jg
inc
stc
cwtl
dec
int3
xchg
push
xor
cmp
fucomi
das
cmpsl
pop
ja
xchg
cmp
add
lahf
cltd
fbld
movsl
xchg
and
or
fwait
pop
stos
inc
add
xchg
aas
rcrb
cmp
imul
xor
push
or
push
jl
jb
imul
rcl
pop
and
inc
adc
aaa
imull
or
jle
xchg
call
push
in
pop
ljmp
test
pusha
cli
and
and
or
shlb
mov
aaa
or
test
push
inc
pusha
shr
push
mov
jno
xor
pushf
mov
sbb
push
and
cmp
push
mov
les
jg
jne
lods
lret
adc
fwait
jle
iret
pop
inc
pop
xor
pop
mov
and
dec
pop
dec
pop
jmp
or
or
push
aad
jmp
out
lret
push
sti
xlat
mov
dec
dec
aas
jne
cmp
jl
pop
or
xchg
call
sub
xchg
sti
and
ja
in
aad
fdiv
bound
subl
cmc
inc
push
shr
sbb
in
jmp
leave
test
sub
jmp
cld
push
sbb
clc
push
cmp
adc
and
fisubs
scas
jo
bound
jae
push
sub
test
pop
sub
mov
insl
ret
outsb
test
loope
xor
mov
dec
mov
daa
xchg
cmp
sub
sbb
aad
sbb
mov
ficoms
xor
add
dec
pop
cmp
addl
or
in
pop
dec
push
jo
repnz
mov
mov
mov
shlb
mov
sbb
adcl
pushl
ja
rol
adc
jb
dec
cmpsb
lds
add
fstpt
imul
xor
in
jp
dec
cmp
loop
mov
or
pop
and
inc
mov
xchg
sbb
dec
cltd
dec
gs
inc
cli
lods
cmp
js
mov
enter
fisttps
jns
cmp
lret
cli
stc
fsts
mov
inc
mov
pop
aas
iret
testl
inc
addr16
movb
mov
mov
dec
dec
dec
pop
test
adc
mov
fnstcw
data16
sbb
pusha
jecxz
sbb
mov
pop
out
in
sbb
repz
jl
imul
mov
ret
out
xchg
int3
push
lods
or
notb
ret
and
add
pop
add
xchg
xlat
insb
xchg
add
and
repnz
inc
inc
ljmp
in
bswap
push
push
sub
push
scas
xchg
subb
jb
jno
popf
push
clc
push
push
inc
jns,pt
hlt
sub
stc
or
jl
xchg
xchg
mov
imull
xchg
pop
gs
movsb
out
or
jo
mov
mov
stc
sbb
pop
loope
cmp
mov
add
mov
mov
jecxz
dec
dec
mov
scas
cmp
adc
push
dec
adc
test
xchg
cmc
stc
insl
stos
dec
cld
js
xchg
imul
loope
test
lock
mov
mov
mov
push
fsubrl
xor
test
cld
jmp
jle
popf
lret
pop
gs
push
movsb
enter
fsubrs
ret
scas
repnz
mov
and
aaa
lea
push
cmp
inc
cmp
cmp
cmpsl
and
push
cmpsb
lcall
movsl
xlat
in
cmpsl
jno
dec
insl
jno
inc
cmp
repnz
ror
or
pop
inc
mov
jo
sti
repz
and
mov
dec
negb
sbb
jo
gs
dec
inc
dec
lret
addb
push
stos
imul
cltd
sbb
iret
add
xchg
arpl
sub
sar
ss
pusha
lds
shl
cmc
iret
add
xorb
in
pop
lret
outsb
sub
inc
lods
bound
fsubrl
dec
sbb
xor
imul
dec
jg
dec
or
add
sarl
repz
push
and
cmp
pop
fcomp
icebp
inc
inc
scas
in
clc
xchg
lds
fcoms
gs
and
dec
pop
idiv
or
out
lods
ds
sub
sub
mov
and
adc
loop
xchg
push
pusha
dec
shl
cwtl
jecxz
xchg
aaa
and
cwtl
outsl
sub
push
or
sbb
jg
mov
pop
dec
pop
mov
pusha
push
cld
icebp
jno
inc
insl
and
sbb
cmp
jmp
sub
sub
push
inc
xchg
sub
push
xchg
push
dec
fisubrs
mov
repz
xlat
or
je
pop
daa
sbb
inc
cli
sti
xlat
enter
movsl
ss
mov
aad
xor
rcrb
jae
sub
ficompl
lock
cmc
loope
ror
testl
leave
into
mov
addb
jae
push
mov
cld
sbb
push
test
xor
lahf
mov
in
ds
lods
inc
xor
movsl
mov
sub
imul
jg
and
mov
and
mov
dec
adc
mov
movsb
jge
add
mov
pop
mov
mov
dec
pop
lds
dec
pop
fs
mov
push
jns
aas
adc
jno
push
psubb
jg
pushf
adc
out
xor
stos
ret
mov
and
dec
xchg
aas
pop
sub
jg
dec
jg
test
jge
dec
inc
popf
xchg
sub
data16
push
lahf
push
mov
test
add
int3
xchg
aad
inc
loope
mov
xor
push
mov
inc
and
jno
pushf
sub
push
cmc
jae
stos
nop
sub
ss
mov
adc
jne
ret
fistpl
inc
iret
outsl
mov
cmp
stos
and
adcb
sbb
js
hlt
in
push
out
pop
outsb
pop
jns
add
mov
cmp
ret
sub
je
pop
insb
jmp
movsb
inc
sbb
dec
or
fs
mov
das
sbb
stc
int
pop
or
enter
bound
mov
sbb
pop
das
cwtl
test
pop
pushf
xor
push
cs
or
jg
mov
shlb
push
out
fidivrs
fwait
jmp
pushf
adc
call
mov
fcoms
add
fabs
test
movsb
pusha
pushf
mov
push
aam
into
inc
in
lret
xor
outsl
fsubrl
xor
and
xor
int3
sub
mov
pop
pop
inc
lock
lods
jecxz
ljmp
push
ja
rclb
xchg
sbb
fwait
jmp
ret
mov
outsl
add
outsl
mov
or
push
xor
call
jecxz
test
mov
cmp
popa
adc
xor
ss
scas
sbb
pop
pushf
push
das
dec
sbb
cmpsb
ret
mov
daa
xchg
push
mov
and
xor
fiaddl
dec
out
inc
aaa
push
imul
mov
orl
test
testl
adc
sub
lret
sub
cld
jecxz
jg
stos
dec
repz
jns
mov
inc
int
mov
xor
stc
add
out
jl
mov
push
mov
mov
sub
test
inc
sbb
popa
add
jmp
popf
sub
loopne
xor
jae
cmp
sti
or
call
mov
fucomip
andb
insb
les
dec
fsubrs
les
cmp
popf
push
jmp
scas
lods
dec
and
adc
mov
inc
add
out
adc
cltd
mov
xchg
dec
push
mov
lods
into
cmpsb
pop
data16
dec
jnp
aam
push
outsb
add
fmull
rorl
and
rcll
lcall
mov
loopne
add
imul
add
cwtl
lahf
jmp
idivl
lds
stos
es
jns
into
cli
jp
or
fcomps
pop
adc
orl
push
shr
pop
dec
dec
dec
bound
xor
ffreep
pusha
and
add
jecxz
mov
pop
push
ficompl
sbb
add
adc
adc
out
test
negb
mov
clc
inc
mov
push
push
xor
xchg
mov
mov
test
jle
sti
pop
sarb
fwait
cli
outsl
incb
shll
jb
jl
adc
stos
inc
outsl
mov
dec
sbb
pop
aam
xchg
xor
clc
mov
aam
gs
test
fisttpll
test
ljmp
popf
subl
lahf
lret
jg
pop
xchg
mov
lea
ss
mov
pop
sub
cwtl
mov
dec
mov
push
cmpb
push
out
pop
pop
xor
cmpsl
je
push
lcall
cld
dec
daa
add
ds
xchg
sbb
cltd
das
or
and
call
push
mov
pop
loopne
xor
cmp
and
mov
inc
fists
ja
cmp
ret
adc
rcrb
pop
and
cmc
andb
inc
inc
xor
push
test
sbb
stos
pop
sub
nop
out
movsl
xchg
cltd
pop
add
cs
push
jo
pop
daa
cmc
test
movsl
mov
push
scas
mov
ret
loopne
inc
orb
repz
loope
in
aad
ficomps
cmpsl
mov
jo
xchg
ret
jg
jmp
in
adc
mov
movsl
sub
test
mov
sub
sti
pop
int
test
dec
pop
arpl
xor
les
nop
sbb
pushf
mov
lret
xchg
fnsave
das
sahf
repnz
sbb
out
mov
pop
jne
inc
push
sub
jo
lret
sub
out
and
lea
enter
jp
and
out
or
sub
pop
push
ja,pt
aam
inc
xchg
push
loop
out
push
push
and
in
xor
sbb
hlt
sub
dec
xor
fnstsw
mov
jb
loopne
mov
xchg
cmc
add
inc
gs
lods
imul
adc
inc
subl
or
lcall
mov
xor
pushf
aam
jp
xchg
mov
lods
fsubs
clc
in
sbb
mov
lahf
sbb
mov
push
cmc
jns
add
adc
jmp
negb
and
outsl
jmp
sub
jno
pop
shll
or
jae
add
ret
xlat
add
sbb
add
xchg
addr16
test
dec
jo
push
pop
movsl
xor
fcompl
mov
std
outsl
enter
sub
cmpsl
mov
into
pop
sbb
data16
adc
or
xor
test
pushfw
loope
ret
cld
lods
mov
push
popf
sbb
inc
cmp
sub
and
bound
pop
ficompl
push
fsubr
add
push
fisubrs
jg
xchg
and
int3
xchg
cltd
arpl
cmpsl
icebp
loope
mov
arpl
dec
jmp
cmpsl
mov
lret
jg
jns
mov
push
ja
push
dec
add
and
jmp
pop
lret
sub
je
mov
push
add
sbb
mov
and
lock
sti
ret
sbb
xchg
push
ja
jle
out
rorb
mov
lds
loope
cmpl
xor
inc
cmpsb
mov
fcomps
adc
scas
add
out
lock
call
xchg
mov
sbb
fsubrl
cmp
out
xor
mov
dec
pop
xchg
pop
mov
sbb
movsl
addr16
icebp
or
xchg
rorl
xchg
add
lret
ret
mov
jb
inc
popa
mov
loop
inc
insb
xor
or
xchg
enter
inc
pop
jbe
or
sarl
lds
xchg
xor
xor
clc
dec
pop
push
nop
or
mov
push
sahf
lcall
ds
dec
cmc
jbe
in
and
sub
inc
or
and
pusha
adc
dec
lea
inc
and
jmp
push
aas
or
and
shrb
aas
scas
test
out
push
clc
jmp
or
out
in
loop
mov
jo
sar
inc
or
cld
test
cmp
adc
xor
jecxz
jbe
and
cmp
clc
sbb
loopne
sub
sbb
ds
rorl
out
pop
lds
jnp
jge
fildl
sub
adc
in
adc
loopne
xchg
adc
sub
mov
dec
sahf
xchg
sahf
cmpsl
int3
cmc
scas
dec
adc
inc
inc
ficomps
rolb
cwtl
shl
xor
shr
sbb
mov
xchg
cs
add
in
js
ds
adc
pop
sbb
rclb
adc
movsl
jl
addb
jge
test
out
xchg
jp
dec
cmpsb
xchg
movl
shrl
mov
cmp
add
out
out
fdivrs
test
addl
jbe
sub
cmpsb
xchg
rolb
in
fidivs
jo
mov
add
xchg
mov
mov
jo
cltd
data16
filds
jge
mov
sub
xlat
mov
daa
popa
adcb
jmp
mov
mov
cmp
loop
inc
repnz
aas
je
in
dec
shlb
xor
mov
call
jle
imul
test
cmpsl
add
and
in
stc
in
and
repz
dec
cwtl
aas
jbe
out
dec
push
adc
ret
cmp
mov
in
xchg
xchg
sbb
cmp
dec
sbbl
rorb
cs
jle
cmp
adc
shll
mov
cltd
iret
mov
push
sbb
sahf
mov
inc
jno
add
pop
popa
mov
ret
loopne
dec
cli
shrb
ss
xchg
orl
mov
pop
pop
mov
aam
in
xor
or
cmp
pop
sub
sub
dec
aas
es
sub
jmp
mov
gs
xchg
stos
mov
ffreep
adc
xor
mov
push
sbb
sub
mov
imul
pop
or
or
movsl
inc
or
popa
and
popa
aaa
into
ror
rcrb
mov
rol
fs
pop
pop
xchg
cwtl
push
call
fwait
stc
dec
sub
loopne
fsubrs
stos
add
in
fsubs
xchg
push
outsb
lcall
inc
sub
daa
add
in
mov
jecxz
out
xlat
or
fstpl
dec
push
mov
push
incl
les
clc
mov
mov
sub
aaa
fucomi
add
xchg
movsl
lcall
xor
xchg
testl
sahf
testl
bound
nop
sub
rol
mov
popl
adc
adc
sbb
lods
jns
mov
mov
xor
into
add
push
shlb
push
push
int
push
aad
jo
ds
fwait
inc
or
stos
dec
int
xchg
dec
in
mov
mov
rolb
mov
push
lret
adc
push
fsubrs
cmp
bound
fisttpll
iret
or
xchg
mov
xor
fninit
outsl
hlt
adc
lds
inc
cmc
xchg
dec
push
xacquire
movsl
bound
pusha
call
cmpsb
insl
and
mov
lds
lret
mov
nop
xor
gs
mov
sub
push
test
pop
loop
fwait
shll
mov
cmp
and
cwtl
lret
add
lods
pop
icebp
jb
adc
mov
cmp
loopne
push
inc
orb
push
frstor
jmp
arpl
sbb
adc
add
mov
aam
leave
icebp
pop
or
mov
add
cmp
jp
add
mov
mov
xor
xor
jns
aas
inc
ret
push
push
xor
lcall
pop
mov
mov
push
pop
gs
push
add
mov
adc
inc
sbb
or
jle
jno
mov
insl
fdivs
dec
add
fs
cmp
mov
push
or
fmul
add
stc
shl
out
gs
sub
inc
push
aam
cwtl
ret
sbb
ret
pop
loopne
cmpsb
sub
test
inc
push
mov
stos
mov
mov
mov
push
jne
les
lds
cwtl
lock
cmp
mov
test
rorl
loopne
push
sub
repnz
lahf
xor
mov
std
shrl
push
dec
scas
shlb
mov
and
xchg
mov
jg
in
xor
mov
test
cmpsb
jecxz
push
cmc
push
outsb
repnz
leave
mov
adc
jnp
loopne
loope
xor
clc
cli
mov
bound
mov
sub
imul
mov
pop
jnp
vpcomw
test
lds
loope
aaa
fsts
stos
in
aaa
dec
push
jb
aas
daa
jle
xor
mov
lds
repnz
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
sahf
cmp
out
sub
push
int
rcrl
std
fwait
adc
das
jb
push
xchg
adc
aad
pop
idiv
push
and
leave
and
sub
xchg
mov
fiadds
sbb
pop
jge
push
jle
in
rorb
clc
jmp
test
cltd
add
addl
cmp
sbb
lahf
push
adc
negl
and
jmp
ja
push
or
das
repnz
add
fisubl
push
fdivs
test
cld
cmpl
sti
hlt
xor
and
pop
loopne
mov
ljmp
rorb
decb
insl
jno
cmc
xchg
or
lds
jae
mov
push
mov
imulb
cmp
hlt
xor
jbe
dec
stc
rcl
repz
mov
sbb
mov
mov
dec
fdivrl
popf
and
or
pop
subl
outsb
jo
mov
insl
ss
xchg
repnz
push
movsb
dec
out
cli
xchg
mov
je
xor
sbb
test
sub
pop
in
fildll
xchg
xchg
push
adc
sub
into
scas
jl
sbb
aad
and
fsubrl
leave
inc
inc
es
inc
and
stos
jae
pop
jecxz
mov
cmp
xor
jg
inc
in
imul
clc
roll
cwtl
lea
lcall
or
cltd
cmp
scas
fsubrs
mov
fsubl
mov
or
scas
pusha
arpl
mov
adc
movsb
cld
out
cld
inc
fists
cmc
aad
cmc
or
jle
dec
jae
cltd
pop
rcrb
insb
push
lods
or
and
inc
xor
enter
mov
adc
out
dec
mov
rclb
cwtl
mov
cs
mov
xlat
iret
test
cld
jae
add
movsl
add
and
shl
ret
test
sbb
int3
popa
mov
or
and
int
inc
scas
lea
sbb
out
mov
mov
dec
sub
daa
xor
mov
push
cmc
in
les
sbb
mov
xor
jbe
out
sub
in
and
add
mov
and
neg
loope
aaa
pminub
dec
je
repnz
fldl
lods
jp
lea
inc
lret
adc
pop
aam
adc
adc
mov
into
jno
mov
push
das
cmp
lcall
mov
add
clc
addr16
xor
dec
inc
test
int
lret
inc
loop
jmp
mov
addr16
or
in
pop
lds
lret
int
and
adc
scas
inc
lods
lret
outsl
test
adc
pop
sub
repz
shlb
xlat
xor
fldl
inc
cli
fdivl
icebp
fdivl
js
into
mov
adc
mov
push
mov
pop
rol
mov
inc
std
iret
lret
popl
push
adc
jmp
inc
mov
rcll
clc
faddl
push
xchg
js
lahf
or
sbb
dec
clc
aas
dec
sub
in
in
movsl
fbld
pusha
add
lret
inc
lods
adc
mov
push
icebp
movsb
mov
insl
adc
sahf
aaa
mov
adcl
sbb
xlat
in
lret
scas
jle
pop
ljmp
jnp,pt
lea
xor
inc
xor
scas
cmc
and
add
pop
bound
shrl
iret
pop
out
hlt
or
or
in
lock
add
cwtl
inc
cmp
cmp
jle
loopne
jns
scas
test
dec
je
cmp
add
xchg
xchg
mov
lods
aas
sbb
jmp
or
pushf
xchg
jmp
mov
cmpsw
dec
popa
in
adc
push
sbb
out
je
pop
ret
adc
lds
sbb
jne
cli
or
jecxz
jns
call
fldt
push
je
jae
mov
fadds
mov
scas
in
and
lock
sub
out
rcr
cmpsl
xchg
lock
imul
fadd
add
movsb
ds
push
iret
leave
or
xchg
fcmovbe
inc
mov
mov
or
in
sub
or
mov
and
shl
pop
lods
xor
daa
inc
mov
mov
pop
je
xlat
jae
es
addr16
fldenv
stos
mov
mov
inc
popa
and
bound
es
imul
inc
inc
lods
xchg
pop
sub
or
repnz
shl
jbe
cmp
inc
dec
lds
mov
mov
negl
repz
test
imul
cwtl
mov
push
andl
mov
repz
and
pop
bnd
jae
dec
ret
sbb
and
jbe
push
push
fsubrs
sbb
popf
xchg
sbb
test
sti
mov
fs
shll
inc
cltd
sbb
rcrb
mov
mov
fcompl
cmp
fcomp
movsl
or
cmp
rcr
in
in
mov
rcrl
lea
xchg
jl
jnp
mov
insb
mov
jl
lock
inc
sub
aad
cmp
sub
fwait
mov
jno
push
aam
arpl
or
inc
popa
add
cmp
fstpl
rolb
dec
mov
gs
mov
jmp
add
push
ret
mov
subb
xor
sub
dec
stos
into
popf
pushf
xor
lock
out
arpl
lea
ds
rorl
dec
int
push
pop
loope
cmp
jg
cmpsl
mov
and
std
stc
add
xchg
repz
xor
xor
xchg
mov
popf
and
rcrl
mov
andb
and
jae
or
jmp
out
adc
xor
or
movsl
xchg
sahf
cmp
pop
dec
mov
add
dec
or
lahf
mov
mov
mov
lods
stos
lea
je
xchg
jbe
jmp
pop
popa
loop
divb
es
pop
in
popa
les
adc
push
lods
sti
js
lods
dec
inc
inc
cmpsb
or
adc
or
mov
out
ja
xor
fildll
iret
jae
test
mov
mov
fadds
sub
xor
outsb
fs
dec
call
xor
fstp
mov
jb
add
stos
loopne
popa
mov
xlat
js
mov
in
mov
pop
cmc
mov
lcall
shll
push
scas
aas
mov
into
loop
ja
push
fwait
popa
adc
sub
pop
fiadds
insl
add
cltd
in
lods
cmp
leave
push
xchg
adc
fnstenv
cltd
ret
loopne
jae
add
loope
pop
pop
mov
xor
pop
lea
pop
lahf
mov
fisubl
fsubl
push
xor
mov
xchg
popf
daa
js
mov
sbb
in
test
or
mov
xchg
jae
repz
and
mov
pushl
fs
test
test
cmpsb
inc
inc
adc
hlt
mov
mov
loop
scas
sbb
mov
loop
test
or
cld
jecxz
mov
stc
add
cmp
fisubl
jecxz
jbe
jmp
lcall
test
jo
pop
mov
movsb
and
stc
fidivl
sub
mov
daa
xchg
mov
stos
lea
loop
jmp
outsb
mov
insl
cmp
jg
jnp
lea
loop,pt
mov
pushf
pusha
je
dec
sti
int
mov
mov
cmp
mov
mov
insl
add
sub
cmp
inc
jge
mov
negl
inc
lods
outsb
and
shr
cmp
jmp
cmp
mov
cs
push
sbb
or
int3
push
inc
add
fs
and
jnp
push
test
fwait
mov
xor
jg
inc
aad
stos
test
add
loopne
or
insb
push
out
lea
mov
scas
fidivrs
ret
mov
dec
pop
xchg
pop
fs
fldl
or
add
outsb
fcoms
sbbl
loopne
xor
mov
dec
rcl
adc
or
inc
mov
xchg
test
call
lods
in
add
add
and
ja
jns
aam
fistpl
outsl
sbbb
xchg
hlt
popl
ret
pop
add
mov
cmp
push
cmp
call
das
into
fsts
add
push
pop
mov
outsb
incb
call
cwtl
push
aad
sbbl
loopne
xchg
sarl
mov
je,pn
mov
popf
adc
dec
inc
push
push
push
jo
xchg
xchg
test
daa
mov
xchg
sar
mov
shr
add
mov
jne
loopne
xchg
stos
push
or
cmp
shll
lods
mov
iret
ret
add
scas
xchg
repz
sub
inc
aas
lods
push
mov
test
dec
inc
roll
sub
mov
sbbl
ss
sbb
pop
in
add
jl
lcall
mov
push
insb
clc
outsb
jmp
add
jecxz
mov
mov
mov
rolb
fnsave
and
push
pop
inc
pop
xchg
orl
mov
js
mov
loope
xchg
lahf
push
outsl
inc
addr16
dec
and
in
rclb
mov
rcrb
ss
mov
adc
das
das
scas
sarb
clc
testl
data16
inc
icebp
add
jp
add
lods
fdivrs
insl
outsl
xor
aaa
mov
loop
add
cli
or
push
cmp
lea
dec
inc
mov
gs
call
ret
shl
push
mov
mov
xor
cli
int3
mov
adc
lds
lcall
push
jne
loope
xchg
out
inc
notl
xchg
cmp
cld
sarb
or
sub
enter
add
in
add
xor
test
xchg
inc
inc
push
mov
fiadds
mov
pop
xor
mov
mov
mov
shrb
add
jge
lods
xor
outsl
scas
or
mov
or
call
lret
test
pushf
ficompl
jbe
lods
sbb
mov
mov
ljmp
jne
shlb
mov
cld
inc
mov
addb
push
jg
lret
stos
jl
sahf
fcoms
loopne
orb
cld
fcoms
sbb
stos
inc
cmpsb
push
jp
mov
pushf
mov
jecxz
xor
xchg
mov
cmp
jg
cmp
mov
jae
divb
pop
jp
aad
movsl
pop
or
insb
mov
xor
das
pop
idivb
in
mov
out
lock
xchg
mov
outsl
jmp
cli
pop
daa
clc
adc
jmp
dec
out
adc
enter
in
push
in
test
ret
push
andl
test
ljmp
out
jnp
mov
lret
aad
add
jno
out
ret
les
test
cmp
cmp
test
xchg
mov
sbb
popl
push
push
sub
push
pusha
push
mov
lods
sti
adc
or
pop
mov
adc
test
xor
lcall
mov
les
pop
scas
mov
lahf
adc
dec
add
loopne
mov
ja
dec
xlat
rolb
enter
aam
and
push
sti
orl
scas
ret
out
push
xlat
mov
inc
pop
dec
in
lock
scas
push
data16
sahf
lods
ret
test
jbe
les
insb
mov
in
ja
shrb
push
jecxz
outsl
lock
fs
mov
andb
mov
and
hlt
sbb
xchg
popa
push
test
js
ret
jl
ret
mov
dec
sbb
cli
mov
sub
xchg
inc
setl
into
ret
jnp
or
pop
fldl
enter
pop
mov
jnp
jns
in
cmp
imul
mov
inc
fiaddl
test
repnz
sbb
loopne
scas
adc
mov
imul
aaa
mov
test
jmp
nop
or
pusha
imul
and
dec
mov
xor
add
cmpsl
and
hlt
add
mov
jecxz
insl
inc
fsubs
andb
andb
and
in
bound
lret
shrl
loopne
pop
movsl
fisubs
xchg
mov
inc
jno
cmp
stos
or
pop
and
ja
mov
jbe
loope
dec
imul
push
ljmp
jmp
filds
into
scas
xor
fbstp
pop
test
imul
iret
outsb
xor
xor
fwait
adc
pop
outsb
mov
and
adc
push
cmp
add
rcrl
loopne
ljmp
ljmp
rcrl
loopne
sbb
adc
loope
repnz
aad
cmp
mov
xchg
cmp
bound
jns
add
scas
jns
mov
push
or
mov
cmp
cltd
dec
pop
popf
aaa
scas
inc
push
das
aad
lret
jl
sbb
adc
cmpsl
xor
aad
cmp
lods
jbe
lock
push
dec
fsubr
dec
arpl
sub
or
push
mov
cmpsb
loopne
stc
lret
sub
icebp
movsl
add
jo
xchg
fs
xor
bound
daa
fdivrs
shrl
jno
cmp
adc
shlb
adc
jno
xchg
or
adc
xchg
add
jle
sbb
sub
mov
dec
ss
int
sbb
notl
adcb
pop
test
mov
icebp
scas
push
mov
inc
and
dec
cmp
data16
test
jnp
pmuludq
xchg
loopne
xchg
lds
ds
xor
stos
sub
xchg
mov
mov
lret
dec
and
sbb
push
idivl
lcall
sub
sarl
sbb
incb
and
mov
movsl
pop
ljmp
sub
mov
push
movsl
xchg
mov
inc
cmpsl
xchg
xor
add
fbld
jno
adc
adc
stos
pop
dec
xchg
or
mulb
ficoms
std
shl
mov
ja
pop
xchg
cmpsl
cmp
jae
push
popf
mov
sub
add
mov
insb
clc
pop
push
shlb
scas
ret
push
jo
hlt
std
cmp
outsb
pop
jb
scas
cmp
push
loope
xor
sub
popa
xchg
xlat
push
push
xchg
fstpt
push
jp
fsubrl
xchg
inc
fwait
xchg
sbb
push
pop
mov
andb
rolb
push
or
arpl
cmp
gs
scas
pop
mov
mov
add
xchg
inc
dec
aam
sub
out
out
sub
xchg
mov
add
mov
fmuls
shrb
nop
push
pop
jmp
mov
push
frstor
test
movsb
ret
add
repz
movsb
add
xchg
xor
sbb
cmp
sbb
sti
xchg
pop
mov
negb
push
push
pusha
rol
rcrb
inc
imul
cmp
xor
inc
ror
ds
addr16
jge
out
out
inc
ret
in
pop
call
jne
pop
hlt
jp
inc
cmc
jl
lret
jno
cwtl
andb
hlt
push
jmp
sbb
cmpsl
sub
mov
cltd
arpl
pop
adc
in
loop
icebp
out
xchg
fisubl
shll
jnp
inc
or
and
aam
das
adc
cltd
push
mov
sbb
outsb
mov
add
cmpsl
jge
pop
mov
xchg
jne
ds
xchg
xchg
add
cmp
push
movsl
sbb
jecxz
loop
cmp
pop
insl
das
mov
push
hlt
dec
fdivs
jnp
decl
enter
mov
push
mov
pop
xchg
aam
xor
pop
ret
test
xor
or
inc
mov
int
xchg
clc
push
cmp
mov
test
scas
push
cmp
pop
and
sub
push
inc
jne
adc
xchg
cs
add
dec
test
scas
dec
out
cwtl
pop
es
call
xchg
push
aam
mov
nop
xor
xor
pop
jbe
lds
or
vucomisd
es
mov
mov
andb
mov
out
lods
jno
mov
mov
rcl
adc
cmpsb
xchg
sub
push
shl
push
cmpsb
popl
pop
adc
mov
scas
lock
mov
ljmp
adc
xchg
into
dec
loopne
fisubl
xlat
cmp
fisubrs
lcall
push
rclb
lahf
fwait
fsubr
cmpsl
sub
push
mov
fiaddl
sti
mov
js
mov
dec
sbb
clc
fstps
mov
cmp
pop
jns
inc
rorb
xor
xor
push
push
fnstenv
xchg
jle
add
insl
imul
or
sti
and
in
ljmp
or
and
out
iret
aaa
xor
ret
add
or
cmpsl
dec
std
xor
lods
ret
jmp
out
mov
jg
xor
shll
aam
mov
add
sbb
and
ret
push
call
pop
push
cmp
clc
push
repz
scas
sub
mov
lea
sbb
sub
ret
cwtl
xlat
rcrl
xor
out
add
xchg
das
xchg
xchg
and
and
pop
and
mov
pop
nop
mov
adc
inc
test
stos
add
jae
mov
gs
xorb
mov
stos
ds
inc
inc
add
add
ret
jnp
cwtl
pusha
sahf
pushf
pop
add
ss
rep
push
cmpsb
add
cwtl
aaa
pusha
cmpsl
xchg
adc
icebp
adc
mov
adc
xorl
shll
or
inc
and
rolb
xchg
and
rcrb
adc
lds
lods
cs
mov
mov
mulb
pop
cmc
cli
xor
subb
movsb
adc
cld
xchg
lds
xchg
sub
repz
cmp
jae
data16
pop
xor
sbbl
les
in
dec
adc
sub
repz
push
mov
cld
sbb
in
fildl
jns
push
fsubrs
xor
mov
js
pop
sub
ficomps
lods
popa
xor
filds
add
dec
or
push
cs
jl
js
aam
cmp
cmp
cltd
cmp
push
subl
jo
stos
pop
mov
arpl
pusha
dec
stc
dec
sbb
push
aam
and
sub
ja,pn
test
cmpsb
push
sub
hlt
leave
sbb
scas
xchg
sub
push
pop
pop
cltd
rcrb
xor
repz
add
xchg
icebp
jnp
sub
ficompl
insb
jge
inc
in
ljmp
mov
xor
lcall
insl
jno
loop
lock
out
std
push
pop
adc
fcoms
mov
mov
cmp
movsl
cmp
pop
jo
stos
fidivs
sub
in
cli
or
in
ja
xor
adc
xor
nop
pop
repnz
enter
mov
adc
add
add
ljmp
cli
adc
push
pop
lahf
push
or
lret
in
jne
mov
cld
dec
cld
repnz
xor
mov
fstl
sbb
std
or
cmpsb
mov
mov
test
loop
xor
xchg
add
into
xchg
jno
out
xchg
cmp
mov
out
pmaxub
xchg
dec
push
daa
sub
pop
push
dec
jl
loop
jecxz
xchg
sbb
xchg
cmp
cmc
inc
mov
pop
add
jnp
cld
sub
mov
js
fcmovb
inc
push
sbb
outsl
lret
out
adc
mov
mull
fidivs
adc
push
nop
int
stc
push
push
movsb
push
mov
or
push
push
jnp
inc
adc
bound
cmp
pop
cwtl
inc
dec
stc
sub
xchg
add
mov
inc
loope
cwtl
stos
repz
fildl
inc
lods
sbb
or
mov
jmp
mov
cld
xor
stos
mov
sbb
pop
aaa
pop
imul
rcrb
mov
stos
ja
inc
cmpsb
sbb
inc
push
inc
cmp
sbb
into
mov
pop
imul
jp
aam
mov
divl
in
mov
push
mov
pop
pop
xchg
sahf
mov
inc
adc
dec
sbb
stc
pop
shlb
dec
inc
inc
add
hlt
cmp
mov
lcall
test
sub
iret
out
cmp
push
iret
push
xor
adc
push
dec
pop
call
sbb
les
into
nop
jno
out
add
mov
pop
push
outsb
daa
cmpsl
int3
add
sbb
and
xlat
nop
mov
loop
sbb
pop
push
push
movsl
jb
ret
icebp
stos
and
fimull
sbb
push
cs
lahf
sahf
inc
jno
ret
scas
loopne
aaa
dec
xor
xor
pop
lret
leave
mov
add
in
push
mov
clc
call
pop
loop
add
mov
pop
loop
negl
addl
push
fdivs
addr16
gs
lods
xchg
shll
sub
mov
cmp
aam
leave
mov
dec
imul
pop
mov
jecxz
pop
popa
xchg
lcall
adc
cwtl
push
addb
clc
push
leave
or
aaa
and
int3
into
pop
push
dec
cmp
mov
xor
and
in
dec
int3
fldenv
mov
and
stc
shr
pushf
lock
jmp
mov
incb
jp
xchg
fistpl
pop
addr16
mov
bound
adc
or
jecxz
jge
pop
pushf
pusha
pop
hlt
or
je
mov
hlt
stos
lea
sbb
nop
adc
movsl
int3
jnp
or
jl
dec
adc
add
lods
cld
push
aad
or
scas
push
pop
xchg
mov
aam
dec
dec
out
test
dec
icebp
daa
sti
fstl
push
lret
dec
push
daa
jg
shlb
in
fnstsw
push
flds
or
fisubrs
pop
ja
scas
cmc
rcr
test
or
jns
push
cmpsl
push
xchg
icebp
jl
push
das
lds
fucom
or
hlt
xor
je
push
mov
out
cld
xchg
nop
ret
int
add
jecxz
aas
outsl
scas
cli
dec
add
enter
mov
sbb
adc
inc
fimuls
mov
nop
jge
xchg
imul
popa
nop
add
in
sahf
cmp
cmpl
rcrb
addl
inc
mov
aas
push
aad
mov
or
mov
ss
nop
jp
mov
or
lret
xor
shlb
pop
mov
cmp
pop
lds
add
add
mov
pop
test
mov
por
jae
lea
adc
mov
test
adc
pop
jbe
push
pop
xor
jg
jge
jbe
push
test
les
pand
push
push
cmp
cld
stc
xor
or
mov
addb
jne
inc
pop
jo
xchg
popf
mov
pushl
int
rol
lods
jbe
ret
mov
fnsave
in
jmp
loop
mov
lret
mov
add
inc
pop
inc
xchg
data16
popf
push
jae
in
xchg
dec
aam
fsubrl
cmp
jle
fcmovbe
jnp
or
imul
xchg
push
scas
je
dec
repz
dec
dec
sub
out
push
lea
lds
mov
mov
jl
jb
pop
xchg
cmpl
fbstp
stos
adc
dec
and
mov
cmp
int3
popf
movsb
adc
in
sbb
and
and
inc
in
cwtl
pop
les
shl
xor
and
adc
stos
sti
adc
xor
cmpsb
adc
jg
hlt
mov
es
pop
cmc
sbb
sarl
inc
nop
icebp
or
pop
pop
lret
jge
loop
push
jle
sub
inc
sbb
pop
jns
jge
fs
mov
test
movsb
push
jns
mov
pop
icebp
lock
je
xor
xchg
cmp
jns
inc
je
pop
aad
mov
add
mov
setg
pop
inc
cld
cmpsl
jb
je
and
cmpsb
mov
xchg
xor
push
mov
leave
push
push
gs
push
mov
jg
and
loope
mov
popl
mov
les
cmc
sti
adcl
jmp
test
pop
mov
inc
leave
data16
lods
shll
out
insl
and
sub
in
jge
stos
mov
pop
mov
out
testl
cltd
adc
inc
js
data16
dec
add
test
stos
push
cmp
push
mov
fists
pop
lret
imul
add
adc
xchg
fwait
sub
pop
stos
dec
cmc
gs
xchg
pop
pop
adc
test
inc
sub
pushf
xchg
pop
push
mov
loopne
sub
fisttps
push
mov
dec
inc
test
push
data16
xor
mov
repnz
aas
pushf
inc
popf
fisttps
mov
sar
repnz
scas
incb
mov
push
pop
nop
cmp
xchg
and
aad
push
inc
pop
jbe
or
push
outsl
and
pop
pop
jae
add
cld
loopne
test
cmp
addb
cmp
mov
mov
add
mov
add
add
dec
xor
inc
lods
adc
bnd
mov
jmp
rcll
dec
xlat
inc
mov
mov
xchg
push
adc
jno
mov
add
pop
cmp
scas
dec
je
push
xor
arpl
cmpsl
inc
mov
sahf
lcall
data16
mov
pop
test
stc
pop
fs
pop
or
pop
shlb
push
add
mov
inc
mov
test
ljmp
dec
jbe
out
or
mov
ds
and
dec
sbb
mov
popf
lret
repnz
and
cltd
js
xchg
cmp
addr16
mov
add
cmpsl
sbb
jo
inc
bound
dec
imul
das
adc
push
sbb
pop
sbb
js
aaa
push
outsb
lea
gs
pushf
and
mov
cld
mov
mov
add
cltd
mov
push
leave
jecxz
sbb
push
pop
dec
sub
sbb
or
nop
lds
sub
add
and
mov
movsl
pop
jl
add
nop
repz
add
loop
mov
es
sbb
pop
xor
mov
mov
clc
ss
lea
or
mov
pop
bound
adc
xchg
sub
int
stc
addr16
rorl
lods
jb
cmpsl
cs
inc
add
bound
out
sub
in
xchg
add
or
lahf
sbb
leave
aaa
ficoml
push
mov
cmp
test
pop
movl
mov
hlt
inc
in
nop
xor
dec
int3
jg
inc
inc
fs
ret
sarl
icebp
inc
sub
pop
out
test
xor
xchg
pushf
dec
ss
shlb
ror
mov
cltd
dec
leave
jecxz
jne
outsl
and
mov
int
inc
jo
lods
mov
sete
imul
mov
push
int
mov
sub
pop
and
mov
push
ljmp
std
adc
pop
dec
and
push
xchg
mov
stos
mov
loopne
jae
lahf
xor
sbbb
sbb
das
inc
jle
sbb
arpl
flds
push
sub
fsubrs
mov
ljmp
mov
push
sbb
fisttps
adc
mov
ss
mov
sbb
mov
sbb
lods
prefetcht0
insl
mov
and
orl
mov
inc
inc
cmp
xchg
sti
pop
xchg
lds
out
add
push
iret
aas
dec
and
jmp
xchg
bound
lcall
lss
sbb
adc
lds
loop
or
shlb
push
mov
adc
sub
std
shlb
daa
std
pusha
mov
sbb
aad
daa
inc
aad
je
cltd
dec
lahf
push
sbb
fwait
cmp
int
add
nop
mov
shlb
fs
pop
sbb
push
sub
jle
add
dec
shlb
pop
cli
jnp
push
xor
fdivrl
mov
jo
leave
add
push
mov
arpl
adc
ss
xor
shlb
inc
sbb
lret
sub
or
pop
jne
push
or
icebp
fs
xchg
mov
xchg
gs
mov
cmp
in
imul
and
jae
xchg
pop
cli
in
fchs
iret
int
and
in
push
sbb
xchg
jae
mov
pop
mov
lds
dec
roll
mov
dec
pop
inc
or
cmc
mov
dec
cltd
xor
notl
mov
out
test
enter
sub
pop
mov
cmc
lods
es
test
xchg
cmp
mov
rclb
imulb
movsl
out
cmp
stc
push
cmp
cli
sbb
pop
stos
push
xor
icebp
cmpsb
xchg
lret
aas
popf
cltd
lods
std
ror
mov
dec
out
daa
add
push
sbb
aas
sub
jmp
movsb
enter
xchg
shlb
sub
mov
jmp
or
push
and
sbb
add
stos
pusha
jg
addr16
xchg
sbb
xchg
push
sbb
aas
jb
gs
inc
and
pop
mov
movsl
mov
incb
push
shlb
xchg
std
lret
testl
dec
mov
push
js
inc
cmp
rcr
adc
sbb
fsubl
inc
dec
rcr
lret
or
sub
inc
andl
fdiv
les
dec
rorb
mov
lds
inc
xchg
xor
push
adc
lcall
fiadds
push
jmp
cli
lahf
orl
cmp
sbb
lahf
mov
and
xor
jo
push
outsl
pop
cmpsl
cld
das
sbb
inc
or
cmp
lea
mov
fistps
jle
inc
xor
jns
mov
push
test
xor
sub
cmp
into
ret
inc
test
insl
xchg
bnd
mov
sbb
xchg
mov
outsl
jns
push
inc
lcall
sbb
loop
xchg
imul
or
mov
inc
cmp
jnp
jg
push
jecxz
pop
jecxz
inc
sbb
xor
scas
ja
jg
cs
aam
cmp
aam
imul
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
lea
bound
pop
bound
and
sbb
push
push
push
pop
lds
pop
ja
cmp
pop
add
jbe
cmp
or
xorb
sti
jne
lret
mov
outsl
adc
push
int
inc
push
pop
inc
or
test
cmpsb
inc
adc
xor
cmp
ret
popf
into
fcomps
lds
mov
lahf
stc
xor
cmp
cmp
jns
and
dec
push
sub
repz
stos
flds
mov
clc
push
add
pop
fabs
cmp
adc
sbb
test
jns
push
stos
and
xor
fistpl
cmp
add
iret
sub
scas
xor
dec
inc
jae
mov
into
adc
and
cmp
and
icebp
mov
mov
adc
and
xchg
outsl
xor
and
mov
push
jo
mov
cwtl
loopne
mov
fstl
sbb
jg,pt
dec
das
divl
push
and
insl
shrb
aam
sub
inc
inc
ret
mov
mov
jmp
push
cmp
inc
fs
cltd
cmp
sbb
xlat
sub
loop
cltd
shll
pop
js
lea
mov
sti
push
mov
cmpsl
adc
in
int3
xchg
shll
dec
fwait
and
nop
ss
mov
scas
addb
or
movsb
dec
jno
ljmp
inc
mov
push
hlt
fcmovne
cmp
mov
loope
fnstcw
xchg
mov
clc
test
nop
ja
ljmp
sbb
pop
xlat
shrl
je
or
sbb
and
out
inc
pop
je
je
out
mov
cmp
fsub
cmp
cmpsb
jecxz
dec
mov
repnz
inc
inc
push
xchg
push
jnp
fwait
incl
aad
pop
and
mov
bound
sbbl
or
scas
pusha
pushf
sbb
push
mov
lods
adcl
scas
icebp
lret
js
mov
sar
sub
xchg
inc
or
scas
xor
cwtl
xor
lahf
pop
filds
aaa
and
pop
cmp
in
movl
clc
sub
in
fwait
loope
xor
sbb
xchg
push
ds
xchg
sbb
stc
out
shld
jle
cmpl
push
inc
xchg
arpl
hlt
ror
sbb
lret
or
incl
es
repz
jbe
mov
push
test
push
xor
in
pop
xor
push
dec
aam
sub
push
ret
or
xor
mov
testl
int3
fbld
cmpsb
cmc
shlb
mov
aas
add
loop
out
loop
jmp
adc
loopne
xor
bound
imul
int
dec
pop
pop
jge
mov
xlat
pop
cmc
movsb
add
out
and
test
ljmp
cmp
lcall
xchg
mov
push
jns
mov
cld
shll
and
inc
shll
inc
stos
cmc
mov
mov
addr16
andl
add
push
mov
arpl
or
das
imull
add
mov
jp
or
cmp
aam
fiadds
test
adc
stos
fs
xor
test
xor
sub
mov
cmp
fst
or
jae
jl
add
mov
repnz
mov
sbb
pusha
push
inc
push
add
mov
dec
push
insl
jle
out
lods
mov
mov
mov
pop
cmpsb
bound
adc
je
sub
mov
dec
loope
inc
fs
pop
jnp
and
js
call
adc
pop
fildll
cs
xchg
adc
cli
icebp
and
ret
ja
pmaddwd
or
cmpsl
push
pop
xor
xchg
data16
outsb
loopne
cs
test
in
movsb
push
mov
iret
outsb
dec
and
lahf
push
xor
das
lahf
xor
add
test
push
inc
into
lahf
dec
inc
pop
jns
jb
adc
jnp
mov
das
mov
loopne
adc
sbb
mov
dec
inc
in
fidivrs
aad
jo
rcll
rcrb
std
mov
cmc
add
ss
push
xor
sbb
imul
sub
insl
and
subb
out
pop
ljmp
jnp
es
sbb
call
sbb
pop
dec
leave
lret
sub
jp
out
and
test
out
clc
or
std
mov
mov
les
std
pusha
mov
jecxz
in
inc
in
xchg
sbb
das
test
cmp
les
aas
mov
vpunpckhdq
mov
dec
cmp
lds
sbb
sbb
cmp
dec
mov
cmpsl
iret
inc
in
cmpsb
test
aad
lret
ljmp
push
cmpsb
fcmovne
outsl
adc
test
fisubrl
sbb
push
mov
repz
jo
and
sbb
int
fiadds
and
cwtl
mov
popa
idivb
add
lret
inc
push
jg
xchg
les
repz
testl
mov
subl
in
out
call
cmpb
lds
inc
xchg
mov
test
aam
mov
lea
mov
mov
dec
test
mov
mov
sub
and
nop
std
div
leave
fdivrs
fldcw
push
decb
sub
and
pop
add
push
or
mov
in
inc
or
pop
outsl
jb
in
in
pop
pop
adc
je
stos
fcomps
lds
idivb
pop
insb
xchg
pusha
scas
fwait
clc
scas
push
es
fsubrl
adc
or
cmp
sub
push
xchg
xchg
loopne
out
cmp
inc
insb
hlt
iret
push
sub
lds
cmpsl
mov
pushf
mov
pusha
hlt
fmull
adc
pmaddwd
sbb
and
imul
jp
std
call
fidivs
sub
jecxz
adc
outsl
bound
mov
fstps
leave
pop
cmp
sahf
xor
mov
lcall
adc
in
fistpll
test
dec
aaa
mov
dec
fists
mov
sarb
ljmp
push
pop
cmp
cmp
insb
adc
lock
popf
and
rorb
push
adc
int3
pop
push
push
cmpsl
aad
and
adc
push
arpl
loopne
pop
push
mov
addr16
mov
lds
loop
cltd
out
jns
mov
cwtl
lahf
mov
insl
std
xor
scas
jno
dec
mov
es
pop
mov
popa
push
jbe
in
scas
xchg
fmul
cld
pop
out
iret
pop
or
mov
dec
push
mov
popl
rcrb
rcl
lea
int3
or
subb
shlb
cmp
das
stos
jmp
inc
cs
xor
fucomp
pop
xchg
inc
mov
popf
mov
jle
movl
ljmp
inc
gs
xchg
ret
xchg
jb
leave
jb
repz
call
sti
or
leave
ds
dec
mov
sub
dec
xchg
and
cwtl
cmp
sub
test
adc
jmp
cmp
mov
fs
xchg
scas
mov
push
out
cld
pop
mov
push
shl
ja
sub
mov
iret
shl
js
push
shll
std
and
cmp
or
movb
insl
pop
in
call
bound
shll
lods
mov
sub
loope
loope
mov
xchg
int
ljmp
sub
mov
scas
inc
or
and
fmull
stos
mov
std
popa
jne
incb
add
dec
sarl
idivb
imul
mov
adc
xchg
lahf
add
imul
inc
es
sub
iret
mov
cmpsb
arpl
adc
addr16
mov
mov
ret
xor
and
mov
push
mov
scas
add
lret
pop
or
scas
fwait
js
push
cmp
pop
movsl
in
jmp
fisttps
std
icebp
stos
fsubrs
xchg
mov
cs
or
dec
std
xchg
push
les
push
push
sub
sub
xor
movsl
cmp
sahf
add
pop
xor
cli
mov
mov
xchg
mov
stc
das
fwait
inc
mov
sahf
lock
out
cmpsl
aad
pop
mov
mov
sub
mov
sub
sub
mov
sbb
add
sti
cmp
or
and
imul
adc
mov
jg
sub
aas
shlb
xor
jne
and
mov
orl
lret
pusha
mov
out
sti
outsl
ret
mov
xchg
jne
mov
lods
and
mov
xor
or
push
fdivp
jno
dec
dec
into
and
fdivrs
icebp
inc
xchg
add
fmuls
pop
and
dec
xor
cmp
jne
std
fwait
push
in
cmp
cmp
xor
push
shrb
stos
push
movsl
icebp
test
mov
dec
add
add
lods
gs
test
mov
popa
jp
ss
in
xchg
mov
imul
repnz
push
in
cmp
jo
push
popf
ficoml
sub
cmp
sbb
clc
mov
pop
add
push
stc
inc
jge
xor
sbb
jns
scas
mov
push
pop
imul
mov
sbb
into
push
xchg
push
sahf
out
mov
fwait
rcr
fwait
into
nop
sbb
inc
das
jl
popf
push
fdivrl
jnp
mov
into
mov
repnz
adc
push
orb
sarb
lds
mov
out
adc
and
icebp
pop
jmp
mull
push
xchg
int3
or
ljmp
jno
mov
sub
sbb
aad
sbb
xchg
pusha
ss
call
add
pusha
rol
jns
inc
inc
test
pop
faddl
mov
adc
nop
int
and
sub
xor
in
mov
pop
mov
das
and
scas
outsl
xchg
clc
mov
out
and
enter
fnsave
lock
jl
xchg
ret
loopne
arpl
iret
js
movsl
je
cmc
in
imul
ss
je
sbb
cmp
orb
repz
mov
xchg
data16
pushf
mov
negl
mov
xor
push
sbb
and
ficomps
psrlw
js
inc
cmc
rcll
add
jp
mov
js
ljmp
jnp
hlt
pop
pop
adc
imul
shl
xor
jae
sarl
xchg
and
scas
dec
rcl
pop
cmc
rcr
adc
jbe
repnz
cmc
scas
mov
dec
pop
shl
fcomi
mov
adc
pop
sbb
test
pusha
jg
std
push
inc
lret
jae
mov
sub
and
mov
xchg
sub
mov
pop
fdivrl
leave
mov
fdivrl
cltd
and
push
adc
push
cmp
sbbl
lods
test
xchg
sbb
inc
lods
out
sbb
mov
jnp
lahf
in
push
dec
imul
jl
pop
lods
lret
test
mov
loop
add
sub
pop
add
test
lretw
sub
jne
add
mov
in
ret
push
addr16
std
aam
mov
ds
lret
nop
inc
sahf
adc
pop
mov
pop
push
stos
ljmp
call
enter
add
mov
push
cmpsl
jmp
adc
sti
mov
repnz
jl
lods
jno
mov
aam
push
push
roll
imul
and
add
mov
fwait
mov
dec
and
xor
adc
xor
call
jns
xor
imul
lret
pusha
add
je
sub
in
cli
js
movsb
inc
aad
sbb
xor
pushf
aad
stc
xchg
fcompl
dec
cmp
xor
lret
jae
or
aaa
xor
jmp
mov
test
sbb
ss
ret
push
push
lea
fisttpll
lock
movsb
shrl
popa
and
aad
and
test
sbb
and
push
pusha
lret
cmpsb
pop
icebp
or
es
inc
std
lock
cmp
test
mov
cs
ret
nop
arpl
mulb
out
das
stc
and
cwtl
scas
cmpsb
jmp
fstpl
mov
push
pop
dec
push
jae
pop
mov
out
jge
fcomps
lock
sarb
cwtl
in
adc
fsubr
shlb
mov
insl
lods
add
aam
or
dec
cli
dec
add
fidivl
xchg
push
call
outsl
cmovle
mov
push
xor
or
pop
sub
pop
fiaddl
sbb
insb
shl
insl
push
cmp
popa
pushw
mov
dec
aam
add
inc
cmc
mov
enter
sbb
pop
fdivrs
cli
xchg
rclb
push
add
adc
add
stc
sub
xor
mov
addb
ja
std
inc
fidivl
sub
test
bound
roll
mov
fidivrs
mov
fistpl
cld
sar
in
jno
xchg
out
xchg
je
xor
pop
out
mov
and
and
mov
stos
cmp
adc
or
mov
int
adc
nop
or
jb
inc
dec
negl
ret
das
testb
iret
jne
push
neg
insb
ds
sub
les
arpl
ja
in
cwtl
in
xor
mov
fstpl
mov
mov
jle
sbb
leave
jmp
arpl
fsubl
mov
mov
jle
ficoms
push
movsb
idivb
jb
lods
push
roll
jmp
cmp
xor
lcall
es
iret
jb
arpl
pop
jno
jmp
jecxz
and
fwait
push
lahf
in
inc
push
pushf
pushf
enter
fildll
lret
inc
adc
in
cli
dec
repz
sub
arpl
xor
xchg
hlt
xor
es
xor
pusha
bound
adc
cmp
push
or
cs
ret
mov
hlt
sub
stos
inc
imul
mov
sub
xor
xor
mov
jbe
pop
xor
xorl
adc
pop
mov
in
jno
mov
mov
jle
xchg
jge
shll
pop
mov
in
add
cld
je
adcl
mov
cwtl
es
and
cltd
scas
sbb
fildl
xor
loop
cmpsl
jmp
sub
cmp
mov
dec
subb
mov
adc
insl
outsb
adc
inc
jecxz
jne
adc
xor
loopne
jg
pop
cmp
push
cltd
je
xlat
or
mov
inc
dec
or
test
xchg
loope
in
mov
inc
popa
mull
dec
inc
mov
shrb
dec
push
imul
in
xchg
adc
jno
jnp
or
mov
pop
mov
ja
or
dec
dec
cmp
in
and
leave
sbb
jb
out
and
fisubs
mov
pusha
adc
jmp
sbb
fcmovb
sub
jae
dec
int
pop
ljmp
push
dec
pop
out
iret
imul
inc
lret
aad
in
jge
enter
aam
dec
cmove
xchg
add
mov
out
cmp
xchg
aam
cmp
mov
pop
ret
inc
sahf
cld
mov
and
dec
push
nop
ds
jge
and
lods
adc
cmc
pop
sbb
aaa
fs
sbb
mov
sub
add
jl
sbb
ja
sub
mov
dec
imul
xor
rolb
sti
popf
or
fs
mul
cmc
xchg
sbb
gs
and
adc
cmp
lds
imull
cmp
pusha
lret
mov
mov
push
xor
xor
xor
into
dec
aad
rclb
dec
dec
ljmp
ret
sbb
push
xchg
mov
das
cltd
pop
inc
daa
test
das
adc
cmpsb
jge
mov
int3
add
in
mov
push
loope
pop
movsb
stos
xchg
lds
test
mov
xchg
mov
sub
and
rcll
sti
addr16
xchg
and
lock
rolb
or
lods
xor
bound
inc
sub
fimull
mov
loopne
mov
add
test
cmp
cltd
fisttpll
lea
mov
lcall
dec
dec
data16
out
jno
add
jge
mov
xor
or
dec
cmp
pop
mov
push
mov
xor
aad
jnp
cs
ret
outsb
and
xchg
fbstp
and
xchg
icebp
jle
pop
sub
stc
cmc
add
imul
imul
xor
inc
int3
dec
xchg
mov
xchg
sbb
and
mov
ljmp
mov
mov
push
push
jns
sub
stos
inc
cmp
test
xchg
lret
xor
and
mov
dec
ret
fcomp
pop
sbb
test
or
in
in
pop
mov
mov
sti
sub
mov
aad
inc
adcl
data16
cmpl
cmpsl
nop
shl
sbb
aad
int3
push
ret
mov
cmp
arpl
in
pop
mov
fwait
repnz
stos
lret
mov
sub
xlat
fwait
cli
jnp
lret
pop
inc
inc
dec
push
stos
mov
mov
sbbb
cmp
orl
icebp
out
dec
mov
push
push
jmp
add
inc
or
test
xor
in
imul
dec
mov
mov
mov
inc
push
jo
mov
inc
or
subl
pop
popa
mov
xor
cmc
testl
das
sahf
mov
jmp
sbb
ss
inc
popa
jnp
and
lock
cmpl
sub
push
add
jmp
sub
jnp
or
inc
jne
mov
in
inc
and
add
xchg
adc
lea
int
movd
adcb
dec
rcl
in
outsb
cmp
das
xchg
dec
push
lock
jg
inc
lret
inc
loope
ds
fdivr
mov
jle
cmpsb
loopne
out
jbe
std
pop
sbb
test
loopne
jne
xor
les
mov
ja
mov
rorl
jp
push
fmul
xlat
and
mov
mov
pop
aam
jge
and
adc
dec
fisubl
add
adc
arpl
mov
out
insl
push
sbb
jle
imul
enter
daa
or
dec
add
outsb
test
loop
mov
nop
cld
jl
outsl
rol
sahf
mov
int
out
fistl
xor
mov
pushf
pop
jae
add
pop
sub
sub
mov
ds
in
add
call
addr16
push
inc
loopne
xchg
loope
rclb
ss
or
sub
mov
mov
jge
imul
push
mov
add
dec
add
inc
mov
inc
dec
xchg
jge
xchg
dec
lahf
add
and
aad
shll
sbb
in
mov
pop
or
jbe
rcrb
lods
jb
stc
orl
pop
notb
cs
dec
push
in
cltd
pop
mov
pop
add
mov
xor
adc
jo
mov
pop
ja
mov
rorl
jb
stos
inc
cmpb
pop
outsl
stos
int
pop
inc
push
out
pop
mov
jmp
aaa
inc
mov
push
ds
jmp
cmp
push
push
ja
push
adc
xor
sbb
repnz
into
mov
sub
ficoml
subl
lea
lret
jmp
push
push
xchg
idiv
rcl
push
int3
rcrl
jno
lahf
xor
jp
enter
bound
in
pop
push
pop
icebp
mov
mov
roll
ds
mov
mov
jg
adc
pop
jp
xor
xor
xlat
rcl
pop
cwtl
fisubrl
sti
and
in
jno
and
out
jl
sbb
mov
mov
mov
ljmp
xchg
into
mov
loop
or
add
ret
or
mov
mov
or
mov
sbb
rorl
xor
cmc
and
stos
add
dec
push
inc
xor
sub
sbb
negl
leave
lret
mov
fadd
lret
cwtl
in
pop
or
and
std
movsb
mov
sbb
lds
data16
rclb
pop
sbb
ds
lcall
xchg
pop
lods
dec
mov
or
cmc
cltd
mov
xchg
push
mov
jne
cmp
inc
lds
adc
xor
dec
rclb
int
dec
mov
and
dec
dec
iret
push
loop
test
dec
std
pop
lcall
jo
arpl
or
xor
jo
pop
es
aaa
test
pop
movsb
adc
dec
sbb
mov
pop
or
jb
and
in
loopne
std
mov
cmpsb
es
scas
jo
loope
outsb
push
add
jl
enter
add
in
push
mov
inc
int3
loope
jne
cmc
adc
fs
inc
cltd
adc
faddl
dec
adc
lock
shll
mov
pop
sub
outsb
daa
hlt
cmp
push
push
or
add
inc
pand
dec
das
repnz
cli
pushf
jbe
push
sbb
cmpb
movq
inc
ja
cmpsl
inc
and
lock
adc
int
icebp
sub
aad
scas
add
adc
pop
cld
mov
outsl
popa
adc
mov
push
jo
inc
and
aam
cld
rcrb
push
xchg
xchg
test
xlat
ljmp
lahf
cmp
sub
ja
mov
fwait
je
pop
mov
or
cltd
fdivs
push
dec
int
pop
mov
cli
push
xchg
xlat
testl
rcll
fsubr
xchg
rorb
aad
sahf
daa
test
xor
inc
rcll
jg
das
or
insl
pop
xor
jmp
into
fs
mov
cwtl
xlat
fmuls
mov
out
sbb
inc
iret
aas
ja
jnp
cmp
out
jp
not
mul
sub
inc
sbb
sbb
movsb
loopne
push
std
dec
or
dec
pop
leave
push
in
dec
xchg
pop
test
movsb
adc
popa
jb
imul
fdivrl
adc
fstl
cmp
insb
call
mov
mov
mov
into
xor
loopne
jne
sub
aam
clc
lret
push
cmpsl
dec
mov
cmpl
sub
sub
pop
es
mov
pusha
push
push
je
rcrb
int3
xor
mov
mov
inc
imul
out
popa
inc
shll
inc
mov
sbb
add
and
mov
push
pop
lds
xor
roll
test
outsl
adc
rorb
cli
pushf
addr16
loop
xorl
pop
bound
mov
inc
out
sub
pop
movl
fcmovne
test
subb
xor
stc
add
add
jmp
adc
xor
fidivrl
mov
cmc
pop
cmpsl
decb
int
lock
call
mov
mov
jne
pop
es
call
inc
aas
dec
xorl
imul
stc
adc
or
jae
outsl
nop
inc
repnz
push
sbb
and
dec
inc
loopne
cltd
aas
gs
mov
lcall
push
inc
ja
fsubl
ss
js
dec
jo
das
lods
int3
lods
fdivrs
out
xchg
xchg
in
mov
test
int
out
add
leave
or
stos
and
iret
adc
xor
mov
inc
jmp
jae
mov
scas
cwtl
lods
push
mov
sbb
lcall
mov
idivb
addr16
add
mov
jo
and
push
or
aaa
pop
std
repnz
fcoml
and
mov
mov
inc
or
xchg
cmp
arpl
das
js
mov
jg
popf
jbe
xchg
in
int3
mov
jne
jo
cltd
xchg
pop
adc
pop
ffreep
roll
dec
sbb
scas
mov
icebp
add
mov
int
add
subl
lret
mov
push
test
cwtl
inc
xchg
enter
mov
jne
decb
mov
mov
sarb
cmp
mov
add
adc
fs
or
dec
or
or
shl
je
push
add
and
into
push
fcomp
mov
cmp
adc
les
cmp
xor
pop
repnz
lahf
repnz
popa
xchg
into
xor
mov
dec
push
adc
adcl
mov
in
xchg
imul
rorb
add
sub
fcompl
sbb
out
cmpsb
leave
cmp
cmp
xlat
or
dec
mov
std
std
mov
ffree
sbb
xchg
out
sahf
push
lret
repnz
xchg
and
call
scas
sub
pushf
mov
jo
cmp
stc
xchg
add
add
xchg
mov
lahf
jle
dec
iret
or
mov
test
cltd
adc
pusha
ljmp
shlb
fadds
stos
dec
jnp
mov
dec
ficoms
loope
dec
cmp
jo
fists
xchg
add
je
ficomps
pop
es
fcomip
cltd
mov
cmpsl
adc
outsl
lock
pop
out
xchg
mov
jb
pop
bound
add
out
sahf
mov
test
push
jl
out
sahf
movzwl
divb
ret
push
and
cltd
push
leave
and
mulb
or
cwtl
xchg
xorb
inc
hlt
xchg
ds
es
in
aaa
fdivrs
sub
push
cli
icebp
sbb
iret
mov
test
insl
outsl
sbb
clc
adc
pop
mov
mov
mov
xor
fnsave
out
jg
out
in
pop
lods
jge
mov
stos
inc
fstps
xchg
decl
push
pop
lods
dec
or
stos
xor
cwtl
iret
inc
movsl
mov
sbb
add
shlb
adc
pushf
in
test
test
sti
iret
mov
mov
fwait
cmc
iret
fisubs
sub
xor
cmpsb
mov
sub
inc
cmp
orl
addr16
or
mov
mov
push
xor
ret
jnp
outsb
fnstenv
push
push
add
imul
or
leave
inc
cs
cmp
cld
outsl
xchg
mov
pop
iretw
add
les
xor
ljmp
and
lret
fldenv
ljmp
pop
notb
and
cld
mov
jecxz
or
enter
sub
pop
mov
roll
testb
test
push
lahf
jb
inc
loop
mov
mov
mov
push
jmp
aad
insb
push
cltd
adc
push
mov
xor
add
push
jae
in
cmc
loop
and
inc
push
test
or
pushf
push
loop
sub
push
aaa
push
jns
jl
sahf
int3
stos
std
ja
addl
lea
sub
inc
cmp
pop
push
fcomi
push
jecxz
mov
push
pushf
push
aad
add
jl,pn
dec
inc
push
ja
and
inc
mov
push
sbb
cli
je
add
pop
or
sbbb
mov
push
mov
push
out
mov
or
sbb
xorb
aas
mov
push
mov
cmpsb
int
dec
out
sub
ja
rorb
mov
or
jne
stos
pop
mov
xchg
enter
popl
sub
sbb
pop
or
pop
aaa
sub
and
mov
pusha
pop
iret
fidivl
pop
or
add
push
xor
std
add
jo
mov
in
pop
jmp
fimuls
inc
lods
pop
testl
xchg
mov
scas
fistl
fisubrs
push
jecxz
add
jns
xchg
mov
divb
jmp
shll
aam
lods
decb
aad
mov
adc
or
scas
call
cmp
add
imul
dec
add
push
xchg
push
and
add
icebp
xor
iret
xor
sti
sarl
mov
xchg
cmpb
dec
jnp
pop
xor
jle
mov
es
outsb
movsl
add
movsb
sub
fisubs
sbbl
add
mov
insb
mov
shll
lods
daa
or
icebp
xchg
or
out
aad
movsl
addr16
xchg
aam
fwait
fnstcw
loop
addl
decl
cld
xor
adc
xor
or
mov
xchg
adc
xchg
out
or
movsl
gs
pop
xchg
inc
sahf
dec
mov
divb
sbb
adc
inc
inc
fisttps
lcall
jge
xor
pusha
mov
es
inc
or
cmpsl
out
cwtl
out
mov
mov
fimuls
pushl
leave
hlt
pop
jg
dec
jno
push
add
mov
push
sbb
mov
cli
and
push
insb
mov
xchg
es
je
push
ficoms
hlt
sbb
dec
je
adc
add
sti
sti
and
aad
sbb
setbe
int
loopne
adc
cmp
shll
and
adc
mov
dec
sbb
push
adc
std
insb
pop
jmp
je
push
dec
in
nop
or
and
fadd
out
into
cmc
fwait
mov
fnstsw
test
fmuls
mov
into
das
mov
inc
in
cmp
iret
outsl
icebp
jle
bound
cli
push
mov
ret
insb
xlat
das
scas
push
out
cmp
aam
call
cmp
mov
mov
jae
ret
add
inc
pop
aas
mov
int3
mov
mov
dec
inc
inc
jae
sbb
cld
push
imul
dec
push
cmpsb
dec
mov
and
mov
adc
inc
xchg
and
mov
leave
sub
jmp
and
bound
or
rolb
xor
mov
mov
cmc
sub
jbe
movsb
sbb
mov
rcll
addl
push
push
mov
cmp
jecxz
inc
out
sti
and
dec
arpl
dec
test
ja
add
and
stos
test
inc
fidivs
dec
and
imul
out
lret
mov
push
and
hlt
sub
ja
fst
mov
mov
mov
cmp
xchg
repnz
mov
mov
jo
push
mov
dec
mov
add
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
adc
bound
pop
bound
enter
and
pop
pop
push
xorl
cmp
subl
or
xchg
mov
xchg
xor
cld
adc
fwait
out
xchg
jne
jl
push
xor
enter
mov
jbe
xlat
push
push
mov
mov
and
push
cmp
imul
xor
push
xor
cmp
aaa
fcompl
nop
mov
adc
movsl
aaa
repnz
mov
and
je
hlt
cmp
xchg
rcr
es
jecxz
mov
loop
imul
addr16
sti
jne
xor
mov
sarl
movb
arpl
mov
call
or
xor
scas
mov
xor
repnz
push
and
aas
leave
fs
push
nop
sbb
sub
sbb
sahf
nop
mov
dec
mov
push
orl
movsl
inc
or
jne
cs
inc
and
aas
fwait
push
pop
jns
inc
loopne
cmc
mov
loopne
add
daa
lret
sub
sarb
xchg
fldcw
call
sarl
loope
pop
divl
adc
fisubs
in
dec
or
jno
arpl
mov
xchg
shll
fldenv
jne
mov
imul
pop
ret
sub
pop
mov
movsb
lret
aam
mov
lea
sbb
in
pushf
or
cmp
and
call
in
xchg
neg
iret
inc
xchg
stc
xor
mov
mov
je
jmp
push
pop
iret
add
pop
aam
stos
mov
jge
sub
push
aas
fsubl
pop
stc
arpl
insb
ss
loop
add
dec
stc
insb
push
pusha
adc
xchg
jo
cld
lahf
sbb
outsl
out
cs
sbb
mov
insb
rorl
sbb
add
sbb
movsb
cmc
sahf
or
and
ljmpw
fucomip
inc
flds
loope
fisttps
syscall
psllw
cld
dec
mov
sbb
mov
xchg
xchg
add
xlat
sub
cmp
add
fisttps
dec
insl
pop
movsb
jg
mov
xor
dec
and
adc
ljmp
repnz
and
daa
inc
mov
andl
sbb
aam
icebp
mov
out
sbb
sbb
out
js
or
test
cld
xchg
inc
movsl
shrb
lods
sti
pop
rcrb
ss
push
int
xchg
daa
push
adc
mov
clc
sbb
jg
clc
xchg
pop
test
or
out
movsl
and
dec
xor
aas
xor
or
sti
jle
sbb
or
arpl
dec
ljmp
mov
and
mov
lret
xchg
dec
shlb
jge
movsb
cmpsl
popf
popf
insb
inc
adc
pop
test
rorl
leave
enter
cmc
mov
pop
xor
fsubrl
or
lds
sbb
sbb
mov
or
lret
xor
mov
dec
lcall
test
mov
fistps
fwait
adc
xor
pop
add
push
mov
pop
add
fmuls
ret
inc
dec
fstl
dec
addl
cmp
pushf
adc
int3
es
pop
pop
into
dec
sahf
lock
test
adc
xor
ficoml
test
mov
push
lcall
lahf
decl
fwait
mov
popa
pop
sbb
jl
mov
test
andb
out
xchg
je
aad
dec
mov
push
inc
outsb
pop
cmc
jae
jae
mov
call
mov
or
xchg
rcl
or
mov
outsl
mov
or
in
or
mov
or
ja
mov
aad
pop
fadd
gs
jbe
orl
fs
cmp
jp
fistpl
mov
sbb
dec
jge
ja
in
inc
lods
int3
addr16
and
add
jnp
das
push
xchg
loopne
pop
sarb
add
les
repnz
push
or
mov
pop
dec
xchg
mov
clc
jmp
das
repnz
aas
lods
adc
sarb
cld
std
fistl
dec
pop
int3
sub
cmp
nop
sbb
jb
push
jl
lock
shll
lcall
mov
test
xor
lret
lods
push
mov
hlt
xor
fdiv
sub
sarl
add
mov
adc
jle
cmp
iret
sti
orl
adc
pmuludq
lods
js
outsb
xor
push
ds
mov
cli
cltd
sbb
or
in
xchg
in
or
or
inc
jl
jge
dec
cmp
mov
stos
out
stos
and
xor
adc
bound
sbb
sub
xlat
mov
bound
mov
and
mov
mov
xor
lret
mov
sbb
cltd
repz
shll
push
cltd
and
dec
sub
push
mov
and
cmpsb
shr
inc
or
mov
out
mov
adcb
insl
clc
std
cmp
mov
fisttpl
inc
inc
jmp
lods
ret
and
shl
dec
rolb
jle
pushf
jae
je
mov
or
sahf
xor
xchg
icebp
mov
jbe
clc
sub
pop
movsl
bndldx
jge
adcl
adc
daa
mov
jo
fcmove
xchg
outsb
mov
inc
aaa
inc
out
adc
in
and
cmp
lcall
lds
fistl
cmc
pop
or
xchg
aas
test
adc
dec
out
fdivl
push
push
pop
fidivrs
mov
mov
nop
enter
mov
ss
sbb
fcoml
xorb
dec
mov
mov
movsl
xchg
sbb
mov
xor
mov
lds
cmp
mov
mov
filds
dec
inc
adc
mov
jnp
out
mov
push
hlt
pop
in
sbb
pop
jbe
jecxz
sub
mov
rcrl
lock
ss
inc
and
lds
push
add
add
cltd
xchg
cmpsb
xor
iret
mov
sbb
pop
lock
jg
addr16
popf
inc
and
pusha
pop
adc
movb
data16
push
pusha
xlat
cmp
pop
lea
incb
and
fwait
int3
les
push
cmp
push
push
loop
hlt
inc
std
lea
xchg
ja
out
and
andb
xor
xchg
aaa
xor
add
jmp
add
jecxz
xchg
pop
outsl
or
push
lahf
or
mov
inc
cmp
fdivrl
pop
and
jno
pop
test
pop
mov
arpl
outsb
bnd
inc
int
pop
out
mov
mov
outsb
push
jns
or
and
cmp
cwtl
push
mov
jb
sbb
mov
ss
mov
hlt
push
cmpsb
popf
pop
pusha
inc
insb
and
jns
pushf
jl
jge
xchg
mov
jne
rorb
xor
les
xor
jae
imul
mov
add
xor
adc
stc
imulb
inc
xchg
push
pusha
popf
cmp
ret
pop
jo
out
test
push
pop
lahf
adc
roll
imul
jp
in
cmp
dec
scas
sti
push
jbe
aad
rcll
mov
fcoms
jp
mov
fs
mov
mov
add
push
orps
sbb
rclb
pop
das
dec
mov
jmp
mov
jne
add
or
shl
loope
jnp
addb
and
fwait
pushf
inc
sbb
pop
jb
cltd
mov
jo
mov
jnp
pop
pop
xchg
addr16
icebp
lret
mov
jae
xor
test
test
mov
add
jl
xchg
mov
or
cmp
mov
clc
lret
ja
pop
out
loopne
pushf
pop
push
and
mul
dec
cmp
fisubrl
add
daa
cmp
cmp
imul
outsb
cmc
mov
inc
xorl
sti
dec
fs
in
test
xlat
mov
sbb
mov
xchg
jle
daa
addr16
mov
bound
data16
loope
mov
xchg
test
and
std
cld
xchg
mov
daa
mov
insl
mov
cmp
jg
sti
pop
push
mov
adc
dec
arpl
inc
out
mov
inc
pop
loopne
stos
mov
sub
dec
lahf
inc
mov
jno
loope
cld
mov
xlat
aaa
sbb
xchg
scas
std
ret
sbb
lret
push
pop
mov
leave
stos
and
cmp
mov
aam
sbb
daa
or
pop
lcall
fbld
jmp
popa
and
pop
outsl
stc
mov
push
cwtl
or
imul
jg
jnp
fldenv
dec
shlb
or
leave
les
fistpl
push
cwtl
xor
sub
in
inc
scas
add
test
lahf
test
dec
xor
xchg
push
mov
jno
adc
addl
cwtl
arpl
xor
cmpsl
xor
insb
repnz
sub
xchg
cld
jge
iret
push
pop
arpl
sbb
mov
add
mov
test
pusha
pusha
inc
and
adc
cmp
and
gs
jecxz
or
add
loop
push
sub
fldenv
sub
add
xor
push
lds
addr16
lahf
mov
mov
jle
mov
push
leave
adc
adcl
sbb
mov
cltd
pusha
aaa
outsb
ljmp
sbbb
call
loope
fisubl
daa
push
loope
mov
and
nop
mov
ja
or
lods
sub
cmpsl
push
push
ljmp
add
push
jo
xchg
xor
push
xchg
push
sbb
aaa
or
dec
loope
jae
mov
sahf
ja
bound
mov
pop
sahf
stos
cmp
testl
mov
icebp
gs
sub
filds
adc
adc
or
clc
sbb
mov
mov
orl
or
sub
movsbl
jge
sbb
jl
xlat
pop
inc
push
push
pushl
int
stos
jecxz
xchg
push
or
pop
gs
repz
inc
dec
mov
shl
or
cmp
push
repz
jl
mov
cmp
or
sub
push
mov
adc
das
cwtl
inc
cld
je
mov
sub
cltd
cmp
scas
mov
xor
sbb
loop
adc
adcl
cmp
push
mov
add
testb
and
lds
jne
jns,pn
lock
pushf
iret
or
mov
stc
push
sub
int3
add
and
jne
inc
mov
xchg
dec
stc
gs
and
aad
daa
into
mov
mov
lret
loope
mov
push
push
dec
adcl
rcrb
popa
fistpll
sub
jmp
shr
inc
xchg
jmp
cmp
jp
adc
jnp
flds
loope
push
in
xchg
push
sub
mov
mov
push
and
jns
push
outsb
popf
movsl
mov
aam
sbb
fadds
push
jae
sbbl
mov
cmpsb
mov
movsl
ret
inc
dec
idivl
mov
imul
or
xor
loopne
clc
mov
xchg
xor
adcl
and
loop
out
loopne
ljmp
ss
push
and
mov
aad
push
and
ljmp
sbbl
imul
add
js
mov
insb
or
xchg
test
loopne
mov
xor
loopne
subl
fldcw
or
lret
add
andl
scas
jb
popa
std
pop
adc
sbb
lret
jmp
int
and
adc
call
push
add
pop
sti
cmp
test
test
cmpsb
adc
push
bound
cmp
fstpt
mov
sahf
mov
or
sbb
call
sbb
sbb
mov
loopne
or
repnz
xchg
mov
in
loop
jl
inc
mov
loop
outsl
add
test
cmp
push
pop
and
sbb
and
ret
and
cmpl
add
pop
or
insl
xchg
ja
push
push
mov
orl
ss
mov
insl
lock
adc
inc
sub
loopne
and
xor
call
js
fmull
or
push
je
test
push
mov
jp
rorl
cs
pop
nop
cwtl
dec
jne
push
test
popf
imulb
sub
roll
pop
adc
negb
negl
int3
pop
sbb
pop
pop
pop
cmp
sub
fcoms
mov
xor
iret
insb
jb
jge
jmp
push
and
pop
mov
dec
data16
pop
xchg
aaa
add
fidivrl
and
repz
into
inc
mov
push
mov
scas
push
fs
push
mov
pushf
cltd
loope
pusha
push
jl
pop
loop
mov
and
outsb
adc
repnz
popl
jno
ret
pushf
vxorps
xchg
jns
sbb
inc
inc
cmpsl
inc
dec
cmp
ljmp
imul
mov
xchg
mov
ret
add
test
and
rcll
cmpsl
andl
pop
shl
jo
test
out
mov
inc
fmuls
sub
loop
inc
push
sbb
adc
fadd
xchg
ret
mov
mov
mov
cmp
xchg
add
cli
ss
sub
xchg
mov
mov
das
push
dec
push
cmp
sub
push
sbb
cmp
xor
push
or
lock
lret
fisttpl
xchg
lock
ds
lock
pop
mov
cli
icebp
cmp
xor
mov
inc
cmp
daa
inc
mov
aaa
mov
sbb
roll
jo
in
push
fnstcw
xor
dec
dec
int
jne
sbb
and
das
sarb
jno
dec
mov
repz
xor
out
sub
jle
in
ss
repz
fcom
dec
cld
out
and
push
lea
imul
aam
cmc
outsb
mov
xchg
lret
inc
fmull
mov
jmp
in
dec
sarb
push
fwait
test
mov
aaa
xor
push
cmpsb
out
dec
and
jnp
xor
nop
dec
sbb
test
cmpsb
adc
movsl
push
lret
xchg
jne
jbe
or
lock
mov
inc
pop
inc
xorl
movsb
in
subb
ja
inc
jns
arpl
aaa
or
in
adc
push
and
rcrb
sbb
jecxz
out
push
cli
inc
in
fmuls
cmp
cli
and
das
adc
dec
xlat
cmp
push
and
orl
cmpsb
fimuls
and
cmp
add
out
iret
mov
outsb
inc
ljmp
mov
push
jmp
andps
stos
pop
xor
push
cmpsb
adc
mov
lods
cmpl
lea
shl
stos
fcomp
lahf
pop
xor
imul
sbb
lret
pop
ret
push
add
arpl
call
xor
xor
or
arpl
fsubrl
or
jmp
scas
movsb
xor
cmp
ret
sbb
add
movsl
aas
inc
lea
pop
sti
test
in
test
mov
xchg
lcall
test
push
push
int
jg
in
inc
lds
jp
pushw
pop
test
sti
fiaddl
daa
xchg
sub
std
mov
movb
mov
rcll
mov
inc
add
jg,pt
adc
sbb
outsl
pop
cmpsl
in
pushf
inc
dec
pop
push
jp
mov
pop
sub
sarb
mov
pop
jle
cli
sbb
lret
cs
mov
lods
push
xchg
adc
daa
push
fbstp
popf
lods
sbb
and
cmc
paddb
adcl
imul
loope
xchg
cmp
pop
outsl
cs
outsl
movsb
cmc
test
insb
inc
ss
ret
inc
cld
or
mov
insl
pop
adc
rolb
and
scas
inc
insb
adc
out
lahf
adc
pop
adc
repnz
xchg
rolb
mov
nop
movsl
fnstcw
movsb
in
or
lods
clc
xchg
mov
int3
test
jae
or
push
xchg
add
fisubs
test
jge
push
mov
cwtl
xchg
inc
inc
xchg
sub
out
f2xm1
sbb
ret
adcl
mov
out
movsl
add
cltd
cli
jno
mov
xorl
inc
fdivrl
push
ror
jecxz
xorl
or
jge
inc
fsubrp
es
mov
test
mov
jno
jae
mov
out
mov
dec
pop
dec
push
or
test
test
mov
les
and
mov
mov
les
xchg
pop
cmp
pop
jns
fwait
aaa
cli
dec
cmpsl
inc
out
xor
mov
cmp
mov
cwtl
mov
fs
sub
pop
xor
and
in
pop
imull
push
inc
sbb
inc
pop
inc
sahf
std
xchg
add
cs
mov
mull
mov
gs
out
ss
aam
dec
les
ficompl
mov
or
push
mov
or
test
cltd
sti
idivb
sbb
stos
cmpsl
mov
cs
mov
js
adc
inc
sar
imul
test
and
les
sbb
pop
push
sbb
outsb
cmpl
or
movsl
add
fcomi
jae
mov
scas
mov
into
xchg
and
int3
rcll
and
daa
rolb
mov
pop
jno
mov
setp
test
pop
dec
mov
cld
push
movsl
sahf
inc
dec
cltd
and
dec
mov
push
lret
movsb
ret
adc
sti
push
xor
xchg
lret
fld
xchg
stc
ja
add
sbbb
push
in
adc
or
stc
imul
arpl
mov
mov
shlb
pop
sbb
repnz
std
enter
sbb
pop
cmp
sub
stos
inc
enter
mov
dec
call
pop
xor
popa
or
mov
xchg
lret
dec
fs
cmp
lret
mov
dec
sti
jo
mov
jl
xlat
lea
leave
jp
pusha
push
adc
dec
push
mov
pop
out
pop
hlt
xchg
leave
xchg
mov
jmp
movsbl
dec
lea
mov
cmp
sub
xor
push
push
leave
jg
lahf
out
lds
jmp
xchg
ss
bndstx
mov
test
or
movl
sbb
inc
xchg
aam
dec
mov
imul
roll
push
and
mov
adc
mov
aam
mov
xchg
pop
xchg
inc
jmp
mov
mov
test
ret
push
and
gs
dec
jne
mov
mov
xor
outsl
les
and
xor
fcoms
mov
in
push
sbb
add
subb
aas
cmc
cmpb
push
nop
sbbb
pushf
inc
fadd
lret
xor
jnp
cmp
jmp
lods
inc
testb
adc
out
pusha
mov
pop
shlb
iret
lods
inc
daa
movd
dec
stc
repnz
mov
pop
dec
sbb
push
add
pushl
fsqrt
outsl
jae
je
enter
inc
adc
mov
mov
and
xchg
fwait
push
ret
insl
xchg
pushf
dec
mov
repz
dec
daa
inc
jg
es
xchg
jnp
dec
stos
add
lahf
xor
pop
mov
and
rorb
addr16
adc
pop
add
lods
cmp
in
bound
sbb
ficoms
test
and
mov
and
xor
add
add
mov
scas
jbe
dec
sahf
outsl
ffree
test
popa
inc
push
xchg
fidivrs
cltd
push
je
push
or
sbb
pop
mov
xchg
add
nop
dec
lcall
jmp
or
cmp
fnstsw
lods
push
push
pop
adc
pcmpgtb
adc
xchg
jo
jmp
leave
sbb
imul
and
mov
lods
mov
jmp
add
cltd
rol
sbb
lret
or
pop
jp
aaa
xchg
sub
or
pop
adc
lods
mov
mov
out
jecxz
mov
mov
jp
sarl
popf
pop
inc
test
inc
leave
cmp
mov
push
sub
add
pushf
dec
and
pop
add
cmp
mov
adc
std
push
mov
out
jle
pop
cmp
push
cltd
xor
mov
cmc
cmp
ret
fs
pop
fistpl
daa
in
dec
fwait
jns
jmp
mov
dec
lret
in
mov
or
data16
xor
jg
adc
add
add
pop
cmpsl
and
je
sbb
mov
xlat
cmp
pop
mov
bound
gs
pop
in
icebp
or
repnz
inc
insb
mov
dec
sub
mov
xor
xchg
jge
mov
inc
outsl
mov
repnz
mov
iret
fldenv
fldl
fdivr
dec
push
and
ljmp
lods
scas
and
leave
jne
xchg
pop
cmp
mov
xchg
js
lret
push
adc
cltd
cltd
dec
mov
xchg
xchg
popa
test
cld
xchg
sbb
pop
push
push
cmp
pop
int
and
jae
lahf
outsb
mov
out
loope
stos
inc
mov
inc
leave
in
mov
loope
lahf
out
adc
bound
in
or
jne
xchg
pop
xchg
shlb
jo
mov
mov
mov
and
js
push
leave
out
dec
loop
mov
inc
loop
cld
int3
fxch
xchg
jecxz
xor
mov
sarl
jecxz
aaa
ss
cli
sbb
jb
shr
scas
jmp
aaa
call
lods
ficoml
fstpt
jg
mov
mov
cmp
aas
mov
or
push
inc
sbb
leave
mov
mov
push
fidivs
sbb
pop
mov
mov
add
les
inc
ret
pop
lret
dec
push
cmp
cmc
dec
mov
mov
cmp
add
dec
cltd
xlat
cmpsl
and
xchg
jo
outsl
mov
mov
xlat
addb
mov
out
mov
dec
mov
push
push
pop
shl
dec
mov
loope
jg
imul
mov
enter
inc
mov
lea
add
imul
dec
or
xchg
cmp
outsl
rcrl
orb
cmpsb
cld
cmp
les
int
popa
push
xor
fisubl
hlt
in
std
stos
sub
xchg
in
in
xchg
jp
outsl
imul
adc
cli
addr16
xor
cmp
fstpl
lock
test
pop
and
sub
in
add
xchg
enter
jecxz
inc
or
mov
rolb
je
loope
loop
icebp
push
adcl
ds
stc
cli
shr
rclb
pop
aas
iret
push
ret
mov
jecxz
rclb
adc
and
cmpsb
cmp
out
xor
push
mov
fsubl
adc
in
bnd
aaa
lret
popa
dec
mov
scas
add
mov
test
pop
mov
mov
jmp
cmc
cs
jg
jnp
pusha
cmp
xor
jo
mov
mov
inc
xchg
and
inc
pusha
sbb
rcrb
mov
dec
add
je
inc
or
iret
nop
mov
sbb
shll
shrl
dec
lods
cs
out
fstl
cmp
ds
dec
jbe
cmp
pop
in
fsts
bound
cmpsl
push
adc
mov
aad
fists
add
and
mov
adc
lret
in
adc
push
add
mov
insl
xchg
adc
sbb
hlt
mov
mov
ljmp
into
xor
pushf
cltd
cmp
popf
and
es
xor
movsl
mov
mov
ljmp
push
arpl
push
scas
lock
lock
or
daa
imul
ja
pop
testb
out
lods
je
mov
insb
pop
xchg
das
mov
es
dec
xchg
int
push
scas
push
mov
scas
jle
or
cs
repz
mov
sbb
lock
mov
and
mov
xor
add
add
es
sarb
mov
adc
fimull
push
leave
jae
pop
push
push
stc
cmpsl
cltd
jmp
xchg
mov
pop
cmp
jb
fidivrs
mov
cltd
sbb
imul
negb
push
mov
xor
adc
insb
or
or
lcall
iret
adc
mov
or
sub
add
add
push
stos
push
rep
mov
xor
inc
push
sbb
cwtl
ficoml
push
add
fcompl
mov
and
lods
fwait
sti
movsb
es
and
inc
lret
xor
mov
fadd
stos
loope
sbb
add
pop
sub
enter
push
mov
sti
and
hlt
pop
fidivs
mov
in
leave
mov
and
and
mov
sbb
je
ljmp
push
sahf
or
add
adc
leave
sub
jno
xorl
sahf
inc
call
sub
notb
shll
mov
or
push
ljmp
push
mov
jl
rol
adcb
cmp
outsl
lret
fldt
inc
testb
mov
cmp
mov
cltd
sub
or
push
dec
and
shrb
sbb
rorl
test
mov
pop
clc
in
or
shrb
testl
test
add
js
mov
aas
mov
mov
adc
sti
add
aam
xorl
and
movsl
add
fwait
test
or
adc
xchg
sbb
scas
sbb
fdivrs
fwait
ror
pushf
clc
mov
je
hlt
movsb
enter
dec
cmp
int
add
lea
push
js
or
clc
dec
jmp
inc
inc
enter
or
data16
adc
pop
jns
pop
popf
insb
lods
mov
mov
test
repnz
es
movsb
nop
pop
lret
adc
bsr
dec
inc
and
fisttps
shll
push
push
je
into
aas
sub
repnz
aaa
sub
sub
int
add
les
pop
fnstsw
enter
enter
and
xchg
push
pushf
push
mov
and
mov
dec
mov
xlat
and
fiadds
push
daa
mov
mov
inc
jae
or
imull
dec
sbb
and
add
movsb
out
jo
loope
mov
or
or
lock
mov
dec
loop
cwtl
insb
in
push
shrl
int
pusha
jmp
push
lods
bound
pop
jns
mov
dec
add
sarb
iret
inc
xchg
push
scas
or
mov
xor
adc
push
sarl
jmp
mov
jae
add
nop
stc
dec
out
dec
hlt
stc
out
cmp
aaa
push
dec
in
pop
scas
adc
pushf
add
xchg
xor
inc
or
out
mov
loop
paddq
dec
imul
xchg
arpl
psrlq
mov
inc
xor
inc
inc
rolb
push
stc
inc
jge
rcrb
mov
pop
pop
inc
cltd
cld
cs
shll
pop
fcomps
insl
cmp
mov
js
xor
mov
mov
loop
jne
dec
sahf
sub
mov
jle
movsb
cli
xor
jg
fdivrl
mov
in
dec
sub
mov
add
ja
pop
lret
add
sbb
xor
test
pop
pop
clc
pop
inc
xor
mov
or
xchg
rorl
jle
stos
jnp
lcall
repz
sub
push
push
jb
out
fwait
cmp
das
and
jne
out
lret
int3
or
pop
sbb
cmpsb
je
popa
mov
and
mov
movsb
mov
andb
out
fcomps
add
xlat
int3
pop
or
lcall
or
sbb
leave
push
cld
sbbl
push
and
arpl
mov
inc
test
mov
cmp
mul
scas
xlat
cmpb
fnstsw
lret
popf
inc
xchg
loopne
mov
outsl
data16
push
inc
and
std
sti
and
aad
sbb
xchg
stos
outsl
sub
notw
mov
aas
mov
mov
out
mov
stos
pop
ds
ret
leave
inc
add
inc
cmp
pop
pushf
imul
cmp
sti
ljmp
lock
int3
cmp
mov
push
pushf
push
push
and
or
push
pusha
mov
cmp
test
inc
inc
int
push
cs
cli
into
clc
mov
hlt
mov
dec
pop
lods
mov
adc
dec
rcr
dec
xor
mov
stos
cwtl
lods
adcl
ror
mov
jg
icebp
pop
cmc
dec
pop
fisttps
add
cmpsb
int3
adc
sbb
ds
lahf
mov
adc
push
jle
out
sub
xchg
push
xchg
add
movsb
mov
add
stc
push
ss
imul
inc
adc
adc
mov
mov
ljmp
xchg
or
jge
mov
sarb
adc
dec
push
jge
inc
int3
stc
xchg
int3
daa
loope
push
push
jg
es
push
mov
pop
mov
out
xorl
enter
les
ds
and
icebp
pop
idivb
add
sti
scas
nop
xchg
stos
cmc
cmp
lret
pop
add
out
repnz
pop
or
int3
andl
pop
aaa
js
ret
sbb
adc
out
cmp
xor
fdivl
lret
in
inc
sbb
int
divl
lds
inc
or
movsl
out
ror
and
mov
pop
mov
dec
push
nop
xchg
in
imul
loopne
dec
sti
ret
jge
sub
fsubr
inc
jno
in
mov
pushf
xchg
adc
jp
push
int
xlat
jbe
jg
in
mov
add
jmp
in
sbb
lock
movsb
dec
shll
in
pusha
push
mov
cmpsb
scas
fwait
out
outsl
sti
mov
sub
jae
mov
lret
xor
cld
push
int3
mov
sbbl
xchg
std
sub
test
test
fisubrl
test
mov
dec
dec
dec
bound
stc
adc
daa
pushl
inc
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
rclb
dec
lea
jmp
bound
int
imulb
mov
loopne
out
outsl
add
jb
pusha
adc
or
cmp
loopne
mov
sbb
sbb
sbb
dec
push
mov
mov
aad
add
push
pop
scas
outsl
insl
mov
outsb
or
gs
lods
addr16
enter
je
sbb
add
gs
test
iret
fiadds
shrl
outsb
cmpsb
aam
pop
lret
push
ret
cmp
jle
mov
mov
mov
sub
pop
cmp
and
jg
cmp
jl
gs
sub
lahf
sub
iret
cmpsb
cmp
mov
out
icebp
dec
pusha
or
xchg
divl
push
cmp
sti
pop
mov
adc
lahf
and
push
sbb
fnstsw
mov
fimuls
push
or
and
rol
jbe
out
adc
cld
mov
ja
jnp
test
leave
cmp
lea
stos
mov
mov
mov
push
lods
test
jl
mov
and
cltd
sbb
in
cli
mov
cmp
or
xor
push
pop
cmc
xchg
fmuls
and
mov
jp
shll
pop
aad
pop
mov
jo
inc
loopne
xlat
idivl
pop
test
jb
push
and
adc
lea
adc
jbe
movsb
andb
push
mov
adc
cmc
int
push
and
xchg
cmp
add
stos
cmp
or
pop
mov
xchg
inc
mov
rclb
lcall
cmp
dec
cmp
loope
adc
mov
cld
pop
stos
shlb
rclb
jne
xchg
pushl
testb
xor
js
fs
out
insl
mov
push
pop
out
push
out
fisubrl
cmp
xor
xchg
mov
aam
xor
repz
xchg
push
push
stos
push
mov
lea
xor
lret
bound
out
cmp
and
mov
mov
fucomp
sbb
mov
pop
mov
inc
jp
mov
or
xor
movsb
mov
scas
fcoml
dec
xor
adc
sub
lods
sar
fsubs
and
out
shl
lret
fists
mov
dec
ljmp
pop
mov
pop
inc
insb
les
push
xchg
aam
adc
xlat
pop
jo
out
scas
ret
dec
sahf
jbe
cli
aam
mov
pop
rcl
out
mov
test
xchg
or
push
xchg
or
cmp
sub
mov
pop
in
jecxz
addr16
xchg
mov
insl
push
pop
and
inc
gs
fmuls
or
mov
push
pusha
mov
inc
adc
loop
push
test
xor
es
pop
leave
mov
push
mov
cwtl
out
mov
adc
es
and
jo
daa
fsubrs
jge
call
enter
jle
mov
xchg
jle
in
aad
pushf
orl
scas
xchg
xchg
cmp
inc
mov
or
xchg
mov
mov
es
mov
hlt
mov
xor
sbb
mov
mov
test
push
mov
ficoml
adc
jo
add
out
xor
push
into
sbb
or
roll
cltd
cmp
subl
dec
push
push
xchg
inc
pop
mov
clc
pop
cmpsl
jno
aam
lock
mov
pop
pop
ret
and
mov
aaa
cli
dec
sub
push
sbb
stc
adc
loope
shl
xchg
lods
es
jb
mov
or
add
dec
iret
jp
shlb
test
adcb
sti
ljmp
mov
cmpsl
fadd
sbb
and
cmp
loopne
mov
lret
jg
cmpsl
add
cld
int
out
or
jmp
loopne
sbb
ret
dec
test
inc
out
ret
mov
xchg
fmuls
cmpsb
pushf
sbb
cmpsb
scas
adc
push
das
out
mov
repz
mov
pop
pushf
sbb
gs
loopne
daa
mov
ret
sbb
sub
inc
inc
stos
push
xor
stos
ja
fistpl
sahf
imul
mov
pop
mov
jg
in
ljmp
pop
subb
cmc
adc
xchg
sbb
ret
scas
roll
lods
subl
push
cltd
push
sbb
sbb
add
jne
mov
cmc
pop
xchg
add
sbb
mov
jno
inc
loopne
stc
and
mov
mov
stc
nop
inc
inc
adc
dec
fsts
and
call
cmpsl
add
inc
and
and
ret
jg
jae
jecxz
fiadds
incb
int
in
enter
xor
mov
lods
test
sbb
cs
mov
push
cmp
adc
fcompp
xor
jo
and
aas
arpl
cltd
int
mov
lods
sub
xchg
mov
push
pop
repz
lcall
mov
cmpsl
xchg
ja
pop
cwtl
in
inc
test
gs
scas
mov
popa
imul
shl
mov
imul
icebp
adc
popf
adc
rorl
mov
xlat
fsubr
sub
inc
aam
dec
add
mov
enter
jp
sbb
movsb
lret
inc
cmp
mov
out
icebp
xchg
adc
push
mov
inc
xchg
pop
or
dec
mov
hlt
jge
daa
mov
out
pop
in
and
in
insb
icebp
cltd
pop
sbb
mov
movsl
or
push
sbb
fisubs
push
ljmp
notb
pop
add
rcrl
mov
push
test
sub
mov
or
adc
push
fldl
or
stc
mov
hlt
shlb
sub
mov
ljmp
dec
mov
int3
fnstenv
mov
mov
add
push
xchg
inc
adc
or
lret
lret
add
cli
lods
sbb
or
fwait
push
or
fidivl
mov
lea
nop
xchg
lcall
icebp
pushl
out
ja
lock
ja
xchg
aas
jo
mov
pop
mov
xor
loope
in
adc
sbb
clc
cld
xor
fmulp
push
ficompl
das
arpl
adc
scas
jnp
mov
sub
aaa
xchg
pop
and
flds
ds
dec
dec
mov
test
in
decl
in
xchg
repz
inc
pop
repz
pop
xor
xchg
leave
in
cwtl
out
sti
dec
cld
in
sub
mov
jns
add
clc
loope
ret
sub
inc
mov
ljmp
gs
aaa
inc
push
mulb
pushf
mov
add
push
ret
jmp
in
push
cltd
inc
bound
mov
mov
xor
imul
pop
mov
jmp
xor
aam
adcb
sbb
fistpl
cmp
mov
mov
ljmp
mov
ret
mov
xor
inc
push
xchg
mov
fstl
push
repz
mov
cmp
fstl
adc
xchg
mov
divb
fwait
enter
xchg
mov
lds
cli
insl
push
mov
loop
aaa
stos
cmp
push
lea
stc
aad
mov
and
lea
cld
in
mov
out
aaa
mov
ret
int3
xchg
loope
mov
push
aam
fisubrl
loope
mov
mov
aad
loope
push
jo
roll
pop
jmp
adc
mov
pop
je
inc
scas
lret
add
lods
push
repz
idivb
fisttpl
xor
cmc
movsl
xchg
dec
adc
push
mov
mov
and
lods
or
rclb
iret
out
dec
rorb
adc
repz
movsb
and
push
es
pop
fwait
or
fidivl
jne
xor
xchg
lea
pusha
xchg
icebp
cmp
mov
cmp
rcrl
jge
lods
push
mov
orps
mov
sub
jns
pusha
mov
stos
rcrl
cmp
in
out
push
push
pop
dec
xchg
sub
add
mov
std
jo
das
cltd
popa
ret
mov
scas
xchg
ljmp
dec
daa
or
jg
test
outsb
and
mov
sbb
xchg
rcrl
es
sti
fidivrl
jg
pop
cli
ds
fistpll
jecxz
jb
mov
or
loope
shlb
xlat
fistpl
inc
mov
jno
arpl
xor
andb
jge
pop
or
sti
lods
jle
hlt
jo
test
dec
xchg
xor
or
inc
sbb
push
jmp
dec
rolb
js
movsl
mov
icebp
movsl
xchg
and
cmp
cmp
mov
popf
jl
mov
sahf
adc
mov
movsb
popf
xchg
int3
mov
mov
push
and
fbstp
or
jbe
jb
sbb
push
outsb
sbb
test
adc
push
adc
into
ret
cmp
push
enter
pop
divl
dec
push
mov
ja
aaa
fldenv
test
or
mov
fnstsw
or
push
scas
dec
add
xor
xchg
mov
movsl
jns
sbb
push
mov
cmpsb
subl
movsl
add
mov
js
mov
xor
lret
les
insb
pop
inc
mov
dec
and
pop
adc
add
in
mov
iret
pop
dec
popa
pop
inc
add
cld
int
dec
test
cmpsl
test
ss
push
test
inc
outsb
dec
aam
stc
dec
add
in
rcll
shr
pop
pop
and
out
lret
je
bound
adcb
ret
out
std
cmp
push
shl
lods
sub
or
pop
push
out
test
xor
or
adc
xchg
in
sub
jle
push
fidivrl
adc
loope
ljmp
add
sbb
mov
insb
fists
mov
outsb
sbb
fsub
out
lock
or
shll
orb
xor
pop
xor
adc
dec
out
cmpsb
insb
rcll
and
xor
lcall
and
or
or
push
adc
movsb
xchg
inc
fdivr
push
imul
jnp
popf
mov
int
xchg
out
ljmp
push
and
lea
adc
and
fsts
int
pop
jge
sub
mov
adc
or
fdivrl
repnz
sub
aas
and
and
cltd
xchg
int3
stos
mov
adc
push
std
cli
push
and
sub
mov
outsl
mov
and
idivl
loop
push
pop
out
xlat
cs
cmpsb
cmpsl
cmpsb
in
push
dec
or
mov
out
in
xor
inc
pop
mov
enter
stos
dec
jl
mov
fcoml
sub
loope
add
jbe
xlat
push
sbb
mov
in
push
xor
xchg
std
pop
fsts
jmp
div
lock
test
out
repnz
push
jb
push
and
popa
test
cltd
mov
test
incl
insb
dec
xor
mov
imul
subl
pop
scas
pushf
xchg
sbb
push
shrb
inc
pop
loop
inc
or
sbb
dec
cmp
push
mov
arpl
and
bound
mov
outsb
aaa
repz
std
and
xchg
out
js
inc
scas
mov
nop
loopne
out
mov
inc
ret
ds
xchg
push
cwtl
inc
das
xor
sahf
stc
inc
ret
ljmp
inc
test
mov
jae
inc
xor
sbb
insb
mov
xor
dec
cmp
loop
sbb
push
xchg
sar
pusha
ja
mov
nop
fcomp
mov
popw
movsl
sarb
inc
fsubr
and
adc
dec
insl
test
mov
mov
jns
adc
sbb
push
jb
jl
divb
adc
add
mov
scas
ja
jmp
cs
mov
int
lea
arpl
stos
sarl
mov
inc
scas
mov
add
jle
mov
js
pushf
aad
xchg
ficoml
and
lods
mov
xor
push
aaa
fildll
pushf
stos
adc
xchg
inc
push
rorl
fsubp
cltd
mov
push
jns
fldcw
inc
addl
popf
inc
inc
inc
jae
dec
pop
cltd
fiaddl
pop
push
insl
or
adc
push
and
add
sub
sbb
add
inc
pushf
inc
out
jnp
imul
lret
jo
xchg
cwtl
icebp
push
mov
lcall
dec
aam
lods
je
scas
dec
daa
clc
cltd
stc
lahf
jg
dec
hlt
fcomi
push
push
and
and
sub
cmc
jno
push
imul
or
push
dec
bound
inc
dec
pushf
sub
jne
cmp
fwait
scas
popf
xchg
xlat
mov
shrl
scas
movsl
leave
push
test
enter
bound
dec
xchg
push
rcl
xor
mov
rcrl
xor
pop
or
out
cltd
mov
loop
sub
mov
adc
sbb
xchg
repz
shl
add
setb
movsl
jb
lea
out
cwtl
mov
aam
add
addr16
test
iret
pusha
push
add
adc
adc
push
xchg
div
lods
sbb
xchg
adc
movsb
mov
pop
push
pop
fwait
das
insl
fcmovbe
pusha
mov
inc
xchg
shrb
pop
and
insl
and
mov
scas
dec
mov
pop
xchg
jbe
pop
push
loopne
and
loop
popl
dec
xor
push
enter
mov
arpl
push
in
push
push
nop
jecxz
push
notb
les
hlt
notb
nop
mov
leave
mov
sarb
sbb
xor
jns
kunpckwd
js
in
mov
xorl
paddusb
push
mov
sub
mov
lock
jnp
push
push
lods
jmp
xchg
hlt
and
and
sbb
test
pop
sahf
test
sbb
push
sti
cs
popf
ja
sub
imul
mov
mov
ja
aad
bound
jmp
movb
push
arpl
out
leave
jne
pop
pop
loop
les
ss
pop
adc
ret
or
es
std
cld
pop
clc
test
adc
xchg
loopne
dec
jae
push
xorb
mov
into
sub
clc
mov
fadds
xor
sbb
cmp
mov
outsb
aad
mov
mov
test
pop
mov
repz
scas
jae
jae
mov
pusha
ret
pop
dec
dec
nop
lret
bnd
mov
mov
or
popf
and
dec
adc
test
daa
into
jge
lahf
mov
adc
stc
xchg
xchg
cmpsb
mov
addr16
sbb
flds
in
ljmp
mov
mov
test
nop
adc
inc
sbb
dec
lret
sub
mov
lods
jge
jns
loop
cmpsb
addb
rolb
jns
repnz
mov
push
or
shrb
adc
lret
test
pushf
push
mov
ror
std
ds
push
mov
aad
or
mov
jg
hlt
dec
cld
in
je
jb
cmp
lret
aas
test
fisubl
mov
xchg
inc
mov
ret
push
je
mov
xor
and
fwait
sbb
subb
dec
in
sub
and
loopne
fs
or
test
fstps
add
xlat
out
cmp
and
loop
lock
lock
xchg
sbb
mov
mov
cmpsl
ljmp
out
ss
sbb
mov
add
imul
mov
xor
psubusb
inc
push
lea
add
xor
push
pop
imul
adc
int3
stc
out
rorb
push
sahf
adc
sar
mov
push
or
pop
mov
xchg
sbb
test
pop
into
cltd
sub
loop
and
outsl
hlt
popf
leave
add
out
xchg
mov
je
popa
fdivrs
pop
and
or
cmp
in
sub
xlat
icebp
aam
xchg
jne
mov
mov
shrl
add
or
mov
into
mov
mov
ljmp
pop
mov
imul
adc
cld
pop
dec
cs
outsl
sub
jl
xchg
sbb
dec
imul
cli
add
andb
and
lea
movsl
dec
lret
mov
cmc
or
push
jne
adc
pop
xchg
in
fwait
enter
imul
sub
jne
lock
cwtl
push
adc
loopne
cwtl
stc
into
xchg
lea
fiadds
adc
loopne
arpl
jl
out
sub
xchg
mov
aas
jle
mov
mov
lods
rolb
test
jb
mov
loope
mov
sti
lock
int3
std
mov
sub
or
xchg
xchg
imulb
hlt
or
lret
mov
jecxz
jecxz
sbb
ffreep
hlt
push
jmp
fs
push
or
dec
pushf
mov
test
xor
jae
add
xor
push
dec
rcl
mov
nop
mov
cmp
jl
jns
sbb
mov
adc
data16
adc
out
xor
sub
scas
jae
mov
aas
outsb
pop
inc
fists
ss
out
or
lock
pop
std
inc
inc
and
cmp
lods
and
add
fidivrs
sbb
outsl
cltd
inc
test
inc
movsl
in
sbb
inc
icebp
test
cltd
lea
dec
fwait
add
push
loopne
scas
pushl
pop
test
mov
shlb
ret
outsl
add
pop
popa
ret
pop
pushf
jmp
stos
jae
mov
pop
enter
lock
stos
repnz
pop
cmp
push
or
jbe
test
pop
mov
out
jle
push
dec
adc
xor
push
in
and
xor
ds
sub
push
shlb
push
roll
mov
faddp
lock
adc
and
mov
rolb
insl
aaa
adc
jmp
cs
mov
fisttpl
movsb
xchg
pop
sub
jno
cmpsl
jmp
stc
mov
loop
push
daa
mov
roll
in
sbb
mov
dec
idivl
jne
jecxz
arpl
lds
and
pop
pop
addr16
repnz
stc
lea
push
mov
xchg
push
inc
mov
dec
pop
das
shl
lock
mov
jo
dec
jns
ds
movsb
sbb
push
jne
jg
ret
out
adc
cmp
push
pavgw
push
pop
ficompl
jnp
mov
icebp
shrb
cmp
sub
push
dec
rcrl
stc
dec
fsubrl
mov
mov
ds
or
jl
leave
std
cmp
xchg
in
sbb
flds
out
xchg
rclb
ficomps
or
push
rcr
inc
xor
out
mov
in
repnz
sub
or
xor
jnp
ds
lret
mov
daa
adc
mov
or
jmp
aam
or
push
mov
sbb
jns
xchg
adc
xlat
int
jge
push
sub
movsl
arpl
loope
std
xor
adc
fnstsw
adc
push
mov
test
cwtl
jae
pop
into
cwtl
int3
adc
test
das
pop
mov
sbb
movsl
enter
inc
test
push
movsb
and
sbb
xor
stos
repz
nop
insb
mov
clc
lock
or
mov
imul
mov
loop
test
adc
fmull
je
ret
and
sti
pushf
lahf
sbb
dec
andb
fldl
stos
test
das
or
add
inc
jp
aas
scas
lea
js
out
lods
fidivl
add
fwait
mov
add
add
mov
adc
cmp
int
xchg
sub
shr
xor
gs
and
cmp
and
mov
divl
into
sbb
imul
fdiv
gs
jg
in
les
pop
js
pop
mov
fwait
outsl
push
xor
push
leave
mov
std
pop
add
xchg
push
ds
imul
mov
xchg
jno
fbld
fs
cmpsl
repz
das
pushf
rcll
xchg
lods
scas
adc
jae
test
lock
call
std
mov
imul
push
mov
inc
js
dec
jp
sub
and
or
fsubp
inc
inc
sbbl
xchg
mov
shll
lret
lods
or
lahf
or
fldt
inc
dec
jg
xlat
xchg
mov
xor
sbb
scas
cmp
cld
jge
hlt
cmp
dec
adc
in
das
sahf
add
inc
jne
and
mov
fdiv
in
and
inc
mov
pop
shll
inc
movsb
popa
int
outsb
or
adc
dec
and
pop
shr
pop
inc
cld
repnz
add
or
or
pusha
sbb
cwtl
jmp
enter
inc
dec
dec
add
fwait
nop
ficomps
fwait
mov
mov
mov
clc
xchg
jl
add
nop
jecxz
aaa
push
insb
outsb
xchg
push
lret
mov
jl
mov
stc
inc
imul
mov
xchg
xor
jb
shl
cwtl
mov
jne
pop
adc
clc
sarb
loopne
addr16
mov
mov
jmp
sub
or
hlt
sbb
and
add
out
test
shrl
dec
lds
pop
jmp
xchg
mov
leave
into
popf
add
rclb
mov
push
add
jecxz
test
out
pop
adc
mov
addl
adc
push
movsl
outsb
pop
jle
fs
std
dec
jmp
sti
int3
jge
inc
xchg
rolb
pushf
mov
pop
push
push
lock
jge
adc
mov
jb
je
arpl
pop
lods
mov
lea
cmp
dec
hlt
sub
bound
jne
dec
lock
push
andl
shrl
aaa
in
sub
dec
cs
test
mov
xor
sub
push
or
sub
mov
js
inc
cmc
imul
int3
pop
xchg
xchg
cmpsl
stos
adc
and
sbb
mov
mov
loopne
mov
ds
jo
movsl
aam
xor
jecxz
or
sbb
je
int
out
sar
addb
and
in
cmp
repz
jns
xor
jl
mov
in
mov
repz
xchg
jns
mov
in
inc
shlb
inc
pop
and
mov
sbb
mov
jb
lcall
sub
dec
pop
xchg
stos
rcr
mov
cltd
xchg
in
mov
sub
fisttpl
jbe
cmp
mov
inc
ljmp
idivb
stos
sarb
push
cs
shll
cmp
aam
cmp
add
scas
xor
sbb
mov
aaa
push
mov
pop
jo
mov
pop
test
or
sub
xchg
jns
pop
fs
popa
inc
or
jmp
nop
mov
mov
leave
jmp
mov
mov
jle
mov
es
mov
xchg
or
jle
outsl
mov
inc
sar
xchg
mov
adc
jae
add
das
inc
mov
inc
aaa
aam
inc
sub
sub
in
inc
add
bound
cmpsl
lcall
dec
mov
subl
xchg
clc
pop
pop
scas
into
push
mov
sarl
pop
inc
cmp
outsb
pop
sbb
sbb
jp
add
loopne
arpl
stc
hlt
imul
les
aam
pop
adc
arpl
push
mov
xor
inc
push
movsb
sub
scas
in
push
out
int3
mov
add
cmpsl
push
jmp
xor
add
int3
inc
pop
mov
aaa
xor
aas
sti
scas
mov
sbb
jb
pop
push
int
cmp
jmp
in
loopne
test
add
xchg
das
mov
pop
int
data16
push
insl
dec
sbb
sub
push
cltd
sbb
sti
sbb
push
fsubs
out
repnz
rolb
ss
cltd
insl
stos
dec
repnz
mov
lar
mov
shll
fildll
mov
mov
sub
shll
pushf
adc
fildll
mov
jge
xchg
or
jne
lcall
push
pop
cmp
ja
insb
mov
outsb
sub
push
bound
cmp
adc
mov
sti
or
fistps
scas
mov
sar
jbe
mov
rcll
xchg
cli
sbb
nop
jge
bound
insb
jle
loope
xchg
fdivl
fs
in
dec
lret
sbb
sbb
sub
cwtl
lods
jo
stos
dec
pop
mov
insb
and
xor
mov
cmc
dec
cmpsl
leave
inc
sub
das
movsb
movsl
inc
mov
xor
imul
mov
notl
repz
add
mov
dec
and
imul
jnp
in
push
pop
fwait
and
test
dec
rcrl
xchg
fstpl
dec
iret
lods
push
repz
dec
int
sbb
fmull
and
ret
push
or
push
fwait
mov
pop
adc
xchg
sub
int
es
repnz
aaa
push
inc
dec
fistpl
adc
ljmp
jmp
or
sub
add
orb
cld
stc
fidivs
loope
push
pop
lret
mov
lods
ret
add
mov
cmpsb
xchg
insl
add
out
stos
sbb
sbb
add
mov
or
cmp
push
or
add
loopne
das
adc
ficomps
or
icebp
fwait
pop
aam
pusha
nop
hlt
movsb
dec
mov
or
fistpll
addb
fsubrs
subl
jge
sub
outsl
inc
ds
cld
xorl
sub
mov
pop
call
cmp
xorb
lahf
fyl2x
sbb
rorb
cmpl
or
push
rorl
loopne
inc
fs
aad
inc
jns
iret
repnz
push
jg
lods
icebp
adc
inc
dec
sbb
sub
cltd
scas
sub
pop
mov
add
cwtl
loope
sbbb
push
and
and
jne
shlb
pop
pop
push
mov
mov
and
arpl
or
mov
sub
pop
mov
in
mov
sub
jb
in
arpl
ja
jl
mov
and
int3
or
mov
sbb
aaa
adc
dec
push
mov
push
mov
cmp
scas
fsub
jae
xor
mov
or
inc
adc
pop
lods
cmp
mov
int
mov
xchg
ljmp
add
pop
push
xor
cmp
jo
les
push
mov
ret
hlt
inc
lock
in
orl
dec
popa
shll
ljmp
adc
xchg
dec
jo
add
jmp
sub
adc
outsb
aaa
xlat
shlb
lret
fidivrl
mov
js
sub
mov
mov
fadds
pop
icebp
arpl
out
dec
in
in
mov
xor
shll
xchg
dec
scas
jmp
gs
cmp
sbb
inc
jnp
sub
jle
int
cmp
pop
mov
jbe
mov
lock
in
dec
mov
jp
ljmp
scas
lods
sbb
fidivrs
inc
cld
sbb
lahf
sbb
xor
xchg
popl
int3
lods
cmp
lds
stc
enter
push
jnp
ret
stos
lock
push
je
loopne
mov
rep
out
jbe
xchg
ret
push
and
xchg
orb
mov
aas
fcomps
add
inc
loope
andb
pop
mov
in
cmp
ja
sbb
mov
adc
std
xor
xchg
sub
aad
dec
pop
pop
pop
pop
arpl
scas
stos
xor
loopne
imul
imul
jmp
push
shrb
and
cmp
sbb
add
cmpsl
sub
and
dec
test
rorl
shld
out
pop
mov
xor
push
aad
mov
lds
test
and
aam
push
stos
adc
cmp
aaa
fmull
inc
mov
inc
jp
adc
xlat
shrb
addr16
mov
sbb
mov
call
dec
andl
mov
or
sbb
out
outsl
inc
mov
shlb
popa
rcll
in
xchg
pop
stos
adc
pop
mov
icebp
out
mov
add
in
cld
xor
dec
repz
jns
fsubrl
inc
adc
add
cmp
sbb
aas
cwtl
sbb
loope
xchg
popa
or
sub
js
sub
jnp
mov
rorb
icebp
lret
addr16
push
push
xlat
or
mov
dec
out
push
hlt
jb
inc
rorl
cs
or
adc
outsb
fadd
mov
jge
in
mov
cmp
int3
xor
ss
xchg
shlb
mov
jge
leavew
fidivrl
dec
jo
add
lock
nop
dec
mov
in
iret
xor
loope
mov
stc
dec
sub
and
and
testl
pop
into
fwait
stc
cmp
dec
shrb
ds
mov
test
pop
cmp
push
dec
insb
or
shlb
cmp
and
inc
or
dec
sub
sti
dec
out
xor
mov
push
subb
loopne
loope
cmp
pusha
cwtl
mov
nop
add
sti
mov
cmc
mov
cmp
xchg
adc
xchg
movsb
ret
ljmp
daa
add
ret
xchg
lods
lods
jnp
and
dec
mov
cmc
in
mov
cmp
gs
and
push
sti
mov
inc
push
dec
push
ds
xchg
insl
mov
fisubs
cwtl
pusha
cmp
xor
dec
out
inc
sarl
dec
and
push
out
dec
out
fs
cmpsb
pop
pop
mov
imul
adc
aad
ss
cltd
fisttpl
xor
dec
pop
dec
mov
and
lret
dec
xchg
sub
adc
pop
lods
sbb
cmp
push
xchg
out
mov
push
addr16
sbb
stc
jge
lret
mov
ds
addr16
xchg
test
iret
push
push
cmc
push
pop
mov
stc
ja
test
cmc
dec
mov
int
daa
out
pop
jp
in
push
test
xchg
popa
mov
sub
lods
mov
inc
es
cmpb
adc
clc
and
jg
loopne
add
pop
bound
inc
inc
push
shlb
and
jl
or
pop
jg
mov
add
lret
cmp
mov
pop
mov
scas
sarb
int
mov
pop
jo
add
mov
nop
pop
and
sub
lea
into
fistpl
adc
sub
sti
imul
mov
cmp
push
loopne
and
sub
push
inc
and
mov
add
stc
mov
sbb
add
dec
testl
imulb
bound
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
mov
push
jmp
bound
ja
jmp
sbb
pop
fildll
aaa
repz
or
pop
xchg
jnp
mov
outsl
mov
stos
sub
lock
push
sbb
inc
into
dec
test
add
pop
mov
in
cld
shrb
dec
loop
lret
mov
imul
mov
xlat
jle
mov
fbld
shlb
pusha
cmp
mov
xor
fstp
push
pop
nop
lret
enter
fucomip
or
mov
out
mov
mov
es
lock
mov
xor
jge
lcall
out
stos
les
add
stos
lcall
and
cmc
dec
push
xor
xor
or
and
mov
xchg
sti
ja
insl
adc
xorl
cmpsl
in
in
jg
psubb
test
es
addr16
jbe
add
imul
popl
jg
outsl
inc
andl
lock
mov
sarl
testb
xor
orb
ficoms
test
push
adc
jns
aaa
and
push
push
clc
mov
jne
sbb
leave
add
dec
push
aad
xchg
or
xchg
test
je
xchg
aaa
add
mov
mov
pop
lods
sarb
jecxz
ljmp
shrb
fisttpl
ss
push
pop
out
pop
bound
in
stos
icebp
divb
int
mov
cld
insl
fisubrl
sub
jno
jb
adc
or
imul
int
rolb
jns
into
xchg
xor
lea
pop
or
adc
test
pop
push
cmpsb
xlat
lock
repnz
dec
out
mov
ds
and
cltd
fs
adc
mov
pop
sub
and
cmpsl
mov
xchg
pop
add
fwait
inc
mov
push
or
push
outsl
push
iret
cwtl
into
pop
test
adc
sbb
es
lret
cmp
pop
mov
sbb
jb
insb
repnz
hlt
ret
ss
mov
and
mov
mov
xor
loope
inc
adc
lods
aad
cwtl
sahf
jno
jmp
cltd
sbb
ffree
fidivl
add
mov
cmpsb
out
jl
leave
mov
es
outsb
sub
jle
mov
xor
cld
sbb
push
sub
aaa
test
sub
inc
addps
outsl
cmp
loope
outsb
add
sbb
jge
mov
add
jae
daa
sub
dec
in
fcomp
gs
adc
in
dec
push
mov
dec
mov
lahf
fidivrs
cmpsl
fbstp
daa
jl
sub
inc
jecxz
repnz
sbb
lret
fistl
pop
sbb
mov
xor
cs
dec
push
mov
cmp
and
iret
add
pop
jae
add
lock
push
pusha
push
xchg
cwtl
sbb
or
push
xlat
or
cld
or
mov
out
into
outsb
jmp
ror
lret
ja
or
xchg
pop
xchg
xchg
xchg
fs
movsb
mov
sti
in
mov
and
xchg
icebp
sbb
xor
adc
cmpsb
push
iret
or
xchg
xor
push
xor
repnz
xchg
push
push
push
mov
subb
xor
mov
mov
and
idivl
icebp
sbb
jp
addr16
mov
or
ficomps
inc
nop
icebp
popf
pop
inc
stos
es
pop
hlt
mov
cmp
lds
out
test
je
lret
inc
fildll
push
cmp
dec
lods
movsl
xor
stos
or
mov
sahf
das
mov
push
and
add
push
jecxz
pop
ss
sub
fwait
test
pop
mov
sahf
mov
test
movsb
push
int
fcomip
cmpl
sbb
mov
pusha
dec
adc
ljmp
push
fistps
cmpsb
and
push
mov
and
inc
jb
gs
push
test
cmp
mov
pop
xor
sbb
mov
fisttpll
lock
cmp
ljmp
dec
or
fisttps
cltd
pop
movsb
cmp
dec
sbb
fidivl
sahf
inc
ficoms
test
sbb
mov
dec
jmp
or
jae
and
or
sub
out
aam
xchg
scas
test
subl
cmpsb
fistl
mov
pop
mov
adc
xor
pop
pop
stos
push
push
or
push
test
loop
cmp
pushf
sub
or
je
arpl
cmpsl
mov
andl
dec
mov
and
ret
int3
insb
popf
push
mov
sub
push
inc
aam
pop
and
xchg
or
daa
sahf
out
and
adc
std
rorl
cmpsb
imul
mov
pusha
cmp
push
adcb
mov
stos
rcrb
adc
pop
sbb
sahf
jne
loope
int
inc
inc
aam
lods
mov
scas
in
test
cwtl
add
ljmp
inc
insb
xchg
std
and
cmp
lcall
repnz
xchg
push
xorl
and
in
lahf
fsubs
lods
adc
jecxz
jb
dec
dec
adc
or
push
enter
or
adc
cmp
adc
fidivrl
and
push
ret
mov
faddl
int3
test
sub
and
loop
cmc
js
dec
pop
pop
cmp
mov
sti
xor
xor
fbld
in
sbbb
lock
xor
test
fistps
cmpsl
aas
pop
sbb
div
mov
aas
fsub
andb
or
push
pop
dec
dec
pop
mov
jno
test
int3
and
dec
mov
and
cwtl
xor
popf
movb
jle
into
mov
daa
fidivrl
ss
imulb
insb
jg
xchg
and
push
dec
xchg
addr16
cli
or
nop
mov
jne
orl
mov
bound
mov
inc
sti
push
out
dec
xorl
sub
xchg
ret
mov
gs
mov
dec
xor
inc
xor
add
mov
push
mov
cmp
loope
into
push
jbe
popa
jg
rorb
mov
cmc
cmp
add
out
jmp
decl
pop
int3
jle
mov
das
xor
sub
pop
test
pop
xchg
jno
dec
xchg
inc
cmp
shlb
and
jle
dec
in
repnz
ja
mov
dec
push
push
in
in
dec
mov
in
pop
fadds
pop
mov
movsb
clc
mov
scas
and
outsl
mov
xor
cmp
adc
flds
push
inc
arpl
cmpsb
call
mov
push
movsl
pop
loop
sub
inc
int
xchg
lods
lods
fistps
stos
test
add
cmp
cmp
jle
mov
mov
jae
xchg
jne
sbb
jns
sub
aaa
movsl
mov
sub
ret
bound
sti
xor
adc
ljmp
lret
shlb
pushf
bound
add
or
jae
sbb
and
out
xchg
jne
adc
xchg
jnp
mov
fidivs
mov
mov
arpl
clc
lahf
filds
cmpsb
loopne
aas
rorb
lods
dec
jmp
push
adc
stos
mov
cmpsb
scas
stos
adc
mov
ss
cmp
lods
fdivr
sbb
inc
ffree
bound
lea
int
xchg
and
ret
pop
popf
sbb
push
test
xchg
inc
addb
jle
pop
push
push
inc
adc
rcrb
les
adc
adc
sbb
pop
xor
mov
mov
in
jnp
scas
out
popa
repz
das
xchg
cmp
out
imul
adc
mov
xlat
ret
lahf
stos
dec
inc
outsl
xchg
lahf
popa
add
lret
push
adc
mov
mov
icebp
inc
jne
lcall
movsl
pop
outsb
jnp
imul
add
imul
cmpsl
cmp
in
pop
pusha
out
stc
cmp
fisttps
and
mov
clc
pop
movsl
push
in
popa
outsl
add
es
cmp
mov
out
mov
mov
pop
mov
or
lds
push
mov
cmp
or
cli
aas
clc
call
mov
aaa
add
add
pmaddwd
hlt
mov
adc
mov
jge
or
into
sbb
cmp
mov
imul
imul
call
cmp
aam
cli
dec
insb
cmc
adc
shr
jmp
sbb
add
repnz
sbb
cmp
mov
std
movsb
rcll
fidivrs
cmp
mov
xchg
xchg
and
dec
icebp
xchg
inc
sub
jo
sub
pop
daa
cli
xor
adc
dec
dec
idivl
sbb
mov
addl
add
stos
mov
sbb
sub
loop
xchg
rcl
test
inc
fimuls
dec
test
sbb
ret
enter
dec
jne
ja
orl
add
mov
xchg
and
xchg
mov
sbb
shrb
lods
xchg
inc
add
cmpsl
inc
push
dec
test
pop
mov
add
cli
call
mov
mov
orb
cmp
jl
jo
mov
movsb
inc
loopne
pop
rorl
lods
push
xor
cmpsl
inc
hlt
popf
aad
rorb
outsl
add
mov
jne
sbb
adcb
xchg
mov
xchg
out
outsb
pop
xor
jg
in
ret
jmp
pop
in
push
jg
popa
fists
mov
push
call
orb
jl
mov
dec
sbb
lret
sbb
popf
addr16
jle
outsb
push
mov
and
imul
lret
testb
add
jg
pop
mov
pop
sbb
xor
pop
test
enter
insl
mov
jp
xor
aas
dec
mov
jl
or
shrb
test
mov
out
loope
out
insb
xchg
pop
clc
hlt
push
mov
mov
adc
fmull
mov
and
inc
jmp
mov
or
enter
call
into
inc
xchg
xchg
bound
cmpsb
push
mov
jl
int3
lea
pop
xor
scas
dec
rclb
and
stos
dec
and
lock
jns
xchg
fs
or
cmc
inc
adc
sbbl
pop
adc
es
adc
push
add
lods
jno
andb
rcll
ror
or
sub
ss
ret
xor
mov
popf
data16
shll
jbe
test
sbb
xchg
sahf
shr
call
push
bound
es
bound
std
test
xor
scas
and
and
inc
imul
sbb
outsl
cwtl
shlb
ljmp
dec
popf
cmpsb
pop
add
icebp
popa
ret
pop
fildll
inc
aas
in
scas
insb
pop
xchg
inc
add
es
mov
sub
add
mov
or
js
stos
rorb
mov
inc
xchg
jp
into
repz
pushf
jmp
add
add
sbb
sub
fwait
hlt
add
mov
mov
popl
jg
in
sbb
test
and
pop
sbb
add
je
movsl
push
in
pop
sbb
cld
cmpsl
nop
xchg
fildl
mov
lock
jmp
rcr
jo
pop
fisttps
pop
lods
jg
cmpl
mov
push
ljmp
dec
push
cld
jae
fld
arpl
push
ret
insb
out
pop
and
cs
scas
es
aaa
mov
sarl
test
xor
iret
mov
or
dec
loopne
mov
lcall
adc
test
cmpsl
cmp
push
pop
jmp
repnz
jne
adc
idiv
jecxz
pop
add
outsl
pop
push
rcll
mov
cmpsl
dec
scas
jge
xchg
scas
sub
sbb
cs
jbe
push
pop
enter
daa
aad
mov
add
and
dec
inc
pop
push
incl
mov
inc
cmp
mov
push
ret
sbb
mov
cs
outsl
xor
lock
adc
xor
imul
xor
int
sub
sub
inc
push
mov
mov
flds
jp
js
cmpsl
leave
pop
jecxz
jl
and
pop
jle
sbb
ja
sbb
ret
rclb
push
insb
mov
mov
dec
xor
push
cmpxchg
push
cmc
popa
pusha
dec
xor
or
add
push
cwtl
loope
call
mov
gs
fs
jbe
sub
clc
pop
out
push
push
inc
xchg
mov
pushf
dec
mov
test
lret
lds
popa
and
sarl
xlat
pop
adc
cmp
mov
mov
lods
je
mov
mov
push
imul
sti
nop
mov
xlat
idivl
int
jno
add
sub
aas
mov
jbe
es
xor
movsl
sub
push
mov
ss
rcrb
cs
aad
inc
pop
repnz
rcr
pop
inc
in
jbe
les
orl
add
cs
pop
jg
add
dec
jmp
dec
push
data16
divb
and
sti
bound
repz
pop
adc
add
push
out
aad
in
xor
insl
test
ds
test
nop
sti
xorl
stos
mov
test
xor
orb
xchg
in
dec
inc
pop
popa
dec
mov
sbb
mulb
je
cwtl
sub
inc
cli
mov
mov
pop
adc
jae
enter
xchg
lret
andb
in
sub
mov
pop
and
push
test
dec
jns
mov
data16
lea
xchg
lcall
sbb
je
ss
out
or
in
test
and
cmpsb
aaa
sub
hlt
mov
lock
daa
int3
ja
pusha
sbbb
aam
jmp
clc
cwtl
sahf
cli
std
push
cmp
sub
popf
adc
jae
loope
outsl
mov
jae
jp
add
add
scas
mov
std
inc
les
sbb
mov
pop
push
pop
sbb
pop
add
call
pop
ret
push
or
mov
aaa
aas
rcr
jns
rcrl
add
rcl
sbb
mov
push
aam
sbb
and
pop
lods
movsl
lret
lret
xchg
cmpsb
cwtl
repz
movsb
pop
jnp
call
mov
jmp
loop
xor
test
xlat
and
les
mov
xchg
ds
lods
and
mov
pop
xchg
mov
popf
shll
popa
movb
shl
int3
mov
js
test
cmp
jno
in
jb
cmpsl
mov
das
pop
jo
loop
clc
pop
and
rorl
xchg
imul
cmp
and
movsb
fldl
adc
loope
adc
jp
leave
mov
mov
xchg
mov
adc
or
enter
fwait
dec
mov
inc
fbld
push
mov
sub
sub
inc
mov
mov
mov
cwtl
lods
push
psllq
test
addr16
cmpl
and
adc
sbb
and
daa
sbb
mov
or
adc
pop
xchg
test
xchg
gs
dec
outsl
inc
out
scas
mov
or
pop
loope
mov
push
in
test
repz
push
fld
bound
push
insl
cmpsb
adc
outsl
out
dec
cmp
cli
lods
dec
mov
lahf
ficompl
mov
popf
jb
mov
push
add
sbb
mov
movsb
mov
mov
test
lods
pop
loopne
pop
inc
test
leave
push
add
inc
mov
mov
fcmovnbe
mov
xchg
decb
push
aaa
add
pop
fwait
adc
pop
int3
inc
repnz
push
inc
push
xor
sub
and
iret
and
stos
popa
jmp
and
incb
push
cmpb
lahf
adc
cmp
mov
pop
xor
roll
movsl
mov
mov
sub
fnsave
in
pop
call
lods
bound
test
inc
mov
test
mov
iret
in
scas
pop
mov
repnz
outsb
jnp
pusha
aad
loopne
sub
hlt
stc
rcr
push
mov
jae
js
test
hlt
int
sub
mov
rclb
inc
aas
push
pusha
add
adc
cwtl
iret
push
jmp
sbb
leave
adc
inc
inc
sbb
int
push
shll
push
iret
add
stos
dec
pop
out
push
pop
es
jmp
sbb
mov
imul
out
mov
jbe
jge
or
das
leave
jmp
into
loop
scas
ja
call
cs
cmc
xorl
je
dec
testb
movsl
fs
cwtl
push
lds
push
sbb
adc
sub
push
pop
or
jmp
cmp
in
pop
jbe
jge
pop
nop
pop
sub
push
js
xchg
mov
xchg
mov
xor
pop
jnp
xchg
adc
stos
adc
cmpsl
xchg
xor
dec
ds
imul
sub
lods
rcrl
imul
mov
adc
push
in
xor
xlat
xor
jge
xchg
pop
mov
insl
dec
mov
sbb
mov
or
ret
push
les
cmpsl
jns
ret
ficompl
fsubr
sub
dec
hlt
sar
cmp
into
mov
jae
stc
popa
ljmp
pop
jle
stos
int3
pushf
dec
cmp
cwtl
and
out
pop
sbb
mov
add
pop
inc
add
jno
scas
fstpt
dec
sub
xor
dec
outsl
lock
leave
lock
xorb
icebp
add
mov
and
call
adcb
out
adc
mov
ret
jo
fcmovnb
stc
je
gs
clc
cmpsb
xor
inc
jmp
add
es
inc
mov
jb
cmp
pop
mov
cwtl
dec
lret
jmp
repz
dec
insb
arpl
adc
cmp
push
add
pop
pop
and
cmpsl
test
insb
rorl
cmp
mov
mov
call
mov
pop
mov
out
sbb
js
dec
in
xchg
imul
aam
xor
pushf
out
add
mov
out
jecxz
inc
subl
stc
dec
int
rcll
inc
mov
jge
add
push
mov
and
in
jmp
outsb
int3
add
jno
cmp
lock
jmp
dec
xor
negl
aam
rorl
add
cmp
mov
test
add
sti
pop
out
stos
das
mov
dec
movsb
cmp
lret
jnp
out
iret
and
xchg
push
js
fdivrs
jo
fwait
or
icebp
test
cli
and
ret
jmp
lcall
or
and
sbbb
enter
daa
int
mov
shlb
cmp
sbb
mov
es
repz
mov
mov
fidivrl
sbb
cmp
mov
test
add
mov
jne
frstor
adc
fwait
add
sbb
in
adc
movsb
stc
movntq
out
jg
jnp
lret
loopne
in
mov
dec
mov
ljmp
enter
clc
lds
mov
jnp
out
mov
xchg
sarb
jo
incb
sbb
test
pop
add
adc
sbb
addl
rclb
sbb
orb
xor
jne
jo
inc
mov
mov
sbb
cmpsb
mov
jae
mov
cmpsl
shlb
scas
or
or
push
or
imul
pop
mov
cmp
and
xlat
mov
jno
dec
je
adc
dec
je
sahf
bound
das
jg
cmp
int3
ret
roll
adc
xchg
stos
and
mov
test
sbb
mov
mulps
imul
fdivrl
in
test
mov
and
pop
pop
pop
pop
in
and
dec
pop
cmp
ds
mov
xchg
fmull
clc
mov
sbb
aaa
imul
push
leave
imulb
pop
mov
mov
push
push
out
call
aam
enter
sub
movsb
and
mov
cmp
sbb
enter
mov
jle
pop
mov
int3
add
pusha
fdiv
test
xchg
xor
xchg
jbe
iret
xchg
xchg
loop
out
sbb
sub
mov
std
cmpsl
mov
pop
aaa
push
into
test
push
aad
fidivs
leave
call
imul
les
jg
leave
dec
mov
fstl
mov
scas
fcmovbe
dec
stos
lock
xor
mov
mov
jne
iret
mov
inc
inc
sub
scas
jo
mov
fisubl
jae
arpl
sbbb
xchg
cmp
xlat
loopne
pop
pop
out
cli
clc
push
stos
icebp
and
popf
jp
xchg
imul
data16
nop
popf
or
push
pop
jle
mov
or
inc
int
or
stos
push
or
popa
out
adc
pop
scas
cmp
adc
or
mov
mov
dec
sub
jle
insb
hlt
inc
inc
pop
fsubp
xor
and
pop
not
push
xor
xchg
out
test
test
dec
in
mov
jge
jbe
hlt
jp
push
fwait
mov
icebp
int3
sarl
bound
xchg
sub
or
out
or
divb
arpl
por
aam
iret
xor
mov
rcll
push
mov
subl
xchg
jmp
inc
push
xchg
sahf
jp
adc
cli
ja
rcr
ret
adcl
add
jp
test
cmp
in
add
in
adc
lahf
xlat
xchg
data16
rcll
pop
fbld
xor
loopne
push
push
pop
mov
mov
ja
aas
leave
data16
rcrl
push
push
xor
or
cmpsl
shl
sbb
into
xchg
pusha
pop
rcr
in
adc
dec
insl
mov
cmc
mov
mov
adc
xor
dec
mov
test
push
sub
inc
push
stos
loop
adc
in
inc
mov
jp
scas
pop
push
or
scas
push
loopne
push
clc
jp
cltd
mov
and
mov
arpl
scas
inc
ret
inc
xor
insb
cmp
aaa
movsl
push
daa
xor
sub
cld
cmpsl
adc
cmp
push
add
or
or
inc
jns
fsts
xor
jg
leave
sub
mov
xchg
enter
and
or
inc
cmp
adc
mov
fists
rorb
or
out
xor
xchg
xchg
mov
leave
xchg
imul
test
jp
add
cmp
and
jne
dec
repnz
or
jae
cltd
sub
mov
scas
cmp
dec
sbb
hlt
jecxz
add
into
and
cmpsb
loop
xchg
push
popa
roll
sub
xchg
insb
lahf
push
mov
dec
popa
xor
int3
clc
mov
adc
arpl
push
fldt
fcomps
fistpl
fs
mov
cmp
pop
and
movsl
lahf
jns
std
push
loopne
xchg
xchg
or
lods
stos
fwait
mov
mov
xor
sbb
sub
das
cltd
xor
sub
outsb
pop
mov
adc
inc
rcll
outsl
sub
sahf
in
mov
push
inc
mov
cmp
mov
ss
mov
ret
xchg
sub
in
dec
add
mov
push
jo
lret
ja
jns
sub
sbb
iret
push
inc
dec
int3
les
int
sub
inc
push
and
mov
outsl
adc
sbb
xchg
inc
fistps
lock
cmpsb
mov
xchg
rcrb
cmc
ret
call
push
add
pusha
jbe
xchg
inc
out
test
outsb
mov
les
fwait
mov
sbb
pop
lea
inc
pop
xchg
jae
sub
pop
xor
pop
test
jbe
push
gs
icebp
movsb
xlat
mov
mov
adc
icebp
shl
stc
cwtl
mov
jo
insl
xor
dec
sbb
dec
cmpsl
dec
add
out
dec
das
lret
push
cld
cmp
adc
imul
push
adc
shll
cmp
mov
jo
adc
xchg
das
test
leave
clc
push
mov
sar
lcall
pop
pop
dec
and
lret
imul
mov
loope
test
setbe
lds
add
cmp
and
add
mov
loope
sbb
cltd
mov
sub
imull
mov
mov
bound
data16
xchg
cmc
jbe
dec
push
jmp
adc
add
test
pop
lcall
mov
in
mov
or
adc
std
in
cmpsl
mov
pop
mov
mov
icebp
lods
sahf
inc
jmp
jns
inc
stos
call
in
out
in
mov
lea
mov
adc
jecxz
lds
test
xchg
mov
mov
out
sub
cs
add
insb
cmp
test
push
xchg
jae
push
push
or
jno
mov
imul
or
mov
xchg
pop
loop
jb
les
adc
icebp
jns
xchg
mov
mov
insl
fwait
mov
gs
mov
mov
out
mov
xchg
in
xor
jmp
aad
or
push
lods
insb
data16
cs
pop
push
shr
push
cmpsb
mov
repnz
inc
push
mov
inc
popl
jb
in
jne
sbb
add
add
mov
icebp
rcl
stos
push
mov
sti
daa
adc
inc
je
jmp
outsb
push
push
les
adc
sarl
aam
dec
scas
lret
sbb
dec
and
push
mov
out
andb
js
in
cmp
and
es
fisubs
fsts
gs
aas
fwait
mov
cmpsb
popf
add
lea
xchg
roll
sub
xchg
add
jo
mov
fcomip
xchg
push
rcrl
xchg
push
test
mov
clc
inc
push
std
sbb
out
in
sub
xor
push
xchg
shl
xchg
ret
push
mov
jns
pop
sbb
pop
sbb
mov
inc
sbb
daa
add
jne
scas
or
pop
mov
xchg
inc
dec
pop
cmp
dec
out
cltd
pop
test
fmul
std
mov
das
pushf
enter
lret
ljmp
push
mov
jp
mov
mov
jb
or
mov
push
cmpsl
sbb
mov
or
cmc
popf
rcrl
stc
enter
cmp
mov
daa
add
sbb
adc
maskmovq
divl
mov
xor
lahf
jne
test
push
out
pop
sub
mov
arpl
jo
xor
sahf
push
mov
sub
shlb
mov
mov
imul
ret
jle
leave
jo
pop
ljmpw
clc
mov
cld
jnp
test
aam
or
or
int
sub
xchg
popa
or
lcall
in
xorl
inc
mov
loope
cmpsb
mov
fistl
movsb
xchg
or
aam
pop
mov
leave
cmp
rcl
test
sbb
insl
shlb
sbb
ljmp
sbb
ficomps
inc
xor
out
enter
mov
rep
xor
inc
or
adc
xchg
or
xchg
push
dec
dec
fimull
adc
data16
xor
mov
enter
int
in
mov
xchg
mov
ss
jle
xchg
mov
sub
fstl
sbb
bound
insl
xchg
mov
lds
push
push
bound
es
dec
xchg
rclb
xchg
or
insl
in
jbe
sub
fwait
mov
adc
dec
outsl
fildll
ja
inc
bound
jne
xchg
push
fsub
mov
mov
es
into
lds
lahf
xchg
data16
pop
test
leave
cmp
dec
out
mov
mov
jbe
inc
sbbl
and
mov
fbld
mov
fucomp
sahf
popl
lds
inc
movsb
cmp
push
mov
mov
mov
mov
mov
test
pop
or
push
scas
and
decl
sub
dec
mov
xor
push
outsl
pop
repnz
fnstsw
add
int
test
cmp
repnz
fsubrs
jge
mov
sub
cltd
xchg
ret
jo
daa
loopne
lret
mov
push
test
add
out
lcall
dec
xchg
and
ja
mov
roll
push
lods
mov
test
jns
adc
cli
in
add
mov
call
jle
addl
lea
rorl
jbe
lods
xor
xor
mov
call
sbb
jl
lret
hlt
outsb
mov
add
fidivs
mov
test
subb
jo
jg
pop
sbb
loope
xor
push
fs
stos
pop
adc
cmc
push
xchg
rclb
test
lret
shr
jne
rclb
cmp
xchg
repz
push
and
ljmp
push
mov
and
sarb
push
or
mov
mov
mov
dec
out
mov
and
adc
jo
sub
and
or
cmpsl
lret
cmpsb
sahf
out
in
xor
xlat
push
mov
stos
dec
sbb
shll
inc
jnp
notl
xor
mov
mov
sbb
jbe
fisubs
stc
je
mov
das
movsb
jp
insl
cmpb
cmp
loop
sbb
sub
aam
int
pop
mov
fdivr
xchg
rolb
in
sti
add
xor
stc
mov
cmp
add
sub
mov
xchg
fbstp
dec
or
cltd
or
mov
mov
repnz
movsb
pop
sbb
mov
pop
cmpsl
neg
jge
and
lds
enter
dec
cs
popf
insb
push
push
xor
xchg
mov
sub
mov
xorb
or
dec
sbb
shlb
pop
mov
sub
inc
inc
pusha
pop
mov
push
jle
stc
sbb
fnstcw
xchg
xlat
adc
sbb
mov
idivb
jns
in
lods
rorl
mov
xchg
test
inc
sub
cs
sub
pandn
out
cli
mov
gs
xchg
dec
call
xchg
jge
popa
sub
cmpsb
pop
imul
imul
and
adc
enter
cmp
ret
popf
shrl
xor
jno
popf
outsl
mov
dec
lds
pop
gs
ret
decl
xchg
pop
ds
insl
pop
outsl
aaa
mov
mov
push
enter
pop
adc
xchg
push
int3
jb
lcall
push
push
dec
xchg
jo
dec
insb
xchg
pop
pop
mov
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
mov
mov
rcrb
mov
leave
mov
jae
out
mov
xor
inc
daa
notb
dec
test
adc
jne
stos
pushf
push
stos
push
ja
loope
inc
es
sub
xor
push
push
sbb
insb
mov
jl
cld
outsl
aad
shlb
insl
and
cmp
lret
sub
call
xchg
mov
and
shr
pop
cmp
out
int
ja
mov
imulb
jmp
repnz
clc
sub
sub
fldt
ds
cmpsl
iret
and
in
or
and
sub
sti
push
jle
push
test
scas
les
movsl
xchg
popf
push
cld
rcr
arpl
sub
cmp
inc
insb
int
and
xor
mov
mov
push
push
sbb
test
sbb
popa
mov
lock
sub
sbb
xor
dec
pop
ds
loopne
test
cmp
lea
js
test
movsb
jle
and
xor
ss
int
jmp
bound
outsl
pusha
lea
fmull
out
sub
aaa
push
mov
sti
or
fmuls
xchg
loope
cmpsl
xchg
enter
pop
push
mov
xor
loop
pop
lcall
outsb
mov
imul
loopne
sbb
cmp
loope
add
inc
inc
mov
subb
push
push
fidivrs
das
inc
jno
jg
sub
adc
flds
stos
jecxz
hlt
outsl
push
push
push
cmp
push
mov
jb
dec
push
ds
ss
out
pop
scas
push
jns
aad
mov
fwait
enter
cli
lahf
sub
mov
jmp
divl
stos
sar
dec
lahf
test
push
xchg
in
and
cmpsl
mov
mov
loop
or
std
xchg
mov
stos
sub
jge
lcall
sub
xchg
or
mov
jne,pt
sub
mov
push
daa
push
in
add
int
mov
cmp
or
xchg
cld
xchg
ljmp
jno
xlat
push
fcompl
sbb
mov
adc
arpl
mull
in
adc
leave
inc
je
lods
pop
iret
shr
call
mov
inc
fisttpll
inc
std
mov
mov
out
pop
mov
cmpsl
mov
xlat
test
out
jo
add
xchg
lahf
rolb
and
lret
incb
jp
xchg
icebp
xchg
add
mov
jmp
and
movsb
mov
lods
xchg
std
push
jecxz
shr
call
xchg
push
mov
out
gs
adc
fstps
xorb
fsts
sub
jbe
divb
outsl
rcrl
jnp
fwait
pop
lret
lods
inc
pop
or
call
xor
pop
pop
sbb
dec
fsts
jl
sahf
push
ljmp
sti
imul
xor
or
xchg
xor
mull
push
das
pop
mov
test
test
daa
sub
call
add
enter
mov
repnz
sbb
pminub
dec
int3
adc
xchg
adcb
shl
lods
rcrb
fsubrs
push
js
orb
xchg
data16
cmpsl
cmp
in
dec
cmp
mov
push
loopne
rcrl
into
cmp
xor
test
imul
out
call
cmpsl
repnz
data16
mov
jnp
loopne
sub
imul
in
clc
testl
test
mov
daa
lea
scas
lea
popa
and
pop
fld
mov
cmp
andb
int3
roll
bound
rcrl
loop
iret
scas
sbb
daa
mov
xchg
aaa
mov
out
int3
and
ljmp
cmpsl
data16
nop
outsb
out
or
push
lods
push
mov
cmp
push
sbb
dec
pop
fisubrl
dec
cld
push
push
pushf
push
cltd
adc
inc
shlb
pop
sbb
add
in
dec
or
push
push
jno
push
jae
dec
mov
sahf
int
jecxz
inc
aad
in
jb
sub
cs
xor
and
aad
sub
push
pop
xchg
nop
jp
outsb
movsl
or
add
mov
push
pop
fdiv
out
push
aam
mov
pop
add
adc
and
adc
test
dec
inc
adc
jno
std
inc
sbbb
dec
inc
jl
mov
push
mov
xchg
mov
sub
das
or
inc
aas
inc
sbb
lret
repz
ds
movsb
inc
int
pop
xchg
ds
push
sub
jmp
popa
jno
test
movsl
adc
xchg
mov
outsl
pop
decl
add
dec
and
mov
inc
out
xchg
sbb
imul
pand
aas
lods
add
and
jle
lods
sub
shll
popa
pop
das
add
lahf
cld
cmpl
ljmpw
push
stc
ffree
test
jmp
mov
dec
aam
shlb
cmc
xor
push
clc
je
mov
mov
sbb
and
loope
push
insl
popa
cltd
imul
imulb
push
call
lods
or
lds
popa
mov
pop
out
test
cs
leave
cmpl
enter
fsts
ret
outsb
stos
xor
mov
jne
fiaddl
add
jg
aas
mov
hlt
push
inc
hlt
mov
adc
inc
clc
push
outsw
ds
stos
cmp
sbb
adc
stos
cmp
mov
mov
push
insl
lock
stos
jp
or
outsl
andl
mov
out
sbb
mov
sub
pop
imul
pop
test
xchg
pushf
pop
int3
cs
test
add
icebp
adc
lret
les
pop
fld
pusha
sbb
xchg
add
iret
lods
test
sti
inc
sbb
jne
sub
fadd
mov
andl
push
repnz
mov
in
push
mov
cmp
mov
sbbb
aad
jmp
call
dec
pop
into
cltd
sub
insl
cmp
aad
and
loopne
popa
frstor
mov
aam
adcb
les
in
pushf
repnz
xchg
jecxz
cld
jmp
lods
jg
cmp
loop
aad
lret
es
dec
push
jecxz
pop
sub
js
mov
lcall
in
mov
and
adc
pop
xchg
xor
mov
sub
push
pushf
cmp
xchg
or
ja
ret
cmc
les
sbb
leave
mov
shlb
stc
add
out
shll
mov
ret
outsl
cmp
fwait
in
add
and
pop
mov
push
lock
push
data16
or
leave
mov
sub
adc
jmp
and
xor
xor
aad
das
sbb
hlt
int3
in
adc
xchg
call
ljmp
push
addr16
mov
sbbb
andb
in
jnp
lds
bound
pop
mov
dec
test
inc
jo
jae
jns
sub
mov
jb
mov
dec
lock
shll
sub
mov
push
sti
or
add
hlt
cmp
xlat
jge
dec
push
cmp
testl
lds
icebp
sub
or
fxrstor
push
clc
es
subb
aas
pop
pop
divl
pop
ficoms
push
mov
sbb
aas
sbb
popa
in
and
sbb
add
and
xor
mov
in
rcl
iret
fs
int3
fidivl
fidivrl
xor
cmp
shr
data16
or
mov
repz
xor
int3
bound
inc
and
arpl
daa
xchg
mov
mov
push
shlb
ret
rcll
test
lds
fs
test
daa
xor
in
pop
popf
sub
sbb
popa
popf
out
push
imul
notb
stos
dec
aam
ret
mov
inc
adc
ret
lea
add
mov
pop
pop
rcrl
xlat
jl
shr
dec
mov
sar
outsb
fxch
paddusb
and
in
cmp
fldl
xchg
call
fs
jo
fnstenv
loop
cld
pushf
push
adc
mov
test
subl
or
lods
ss
icebp
mov
xor
shll
lock
pop
outsl
pop
loopne
jecxz
xor
popf
rcrl
dec
push
push
pushf
adc
lds
push
jl
jo
mov
sub
cmp
in
loopne
pop
push
cmp
sub
addl
dec
or
mov
jnp
jle
dec
jge
scas
loop
fmul
mov
sti
adcl
xlat
bswap
test
pop
dec
loopne
sahf
lock
adc
leave
inc
sub
imul
lods
cmpb
or
bound
test
ds
mov
sub
adcl
fwait
jge
jp
push
and
dec
mov
outsl
and
add
mov
xchg
xchg
jns
ret
scas
out
xor
inc
jb
push
aam
push
loopne
jmp
aam
mov
mov
int3
or
and
add
ret
popf
push
rclb
push
into
addr16
cmp
iret
add
mov
add
lret
inc
clc
push
fs
enter
jbe
cmpsb
cmp
int
les
aad
rcll
sti
pop
outsb
shrb
nop
add
jae
cs
andb
aad
mov
incl
sub
repnz
imull
dec
inc
sbb
cmp
jo
and
stos
mov
fiaddl
ss
js
dec
sbb
lods
dec
sbb
mov
gs
iret
push
hlt
frstor
or
cmpsb
add
and
adc
sub
addr16
mov
pop
pop
or
inc
and
and
std
stos
nop
addr16
xorb
dec
mov
ljmp
das
aas
sbb
lea
cmpb
test
aam
mov
mov
jb
jg
adc
jle
fimuls
or
lea
sub
dec
jns
jns
fiaddl
dec
dec
mov
sbb
cli
mov
add
aaa
dec
fmull
mov
xor
in
xchg
cmpsl
cmpsl
enter
test
xchg
push
int
outsl
mov
cmp
dec
xor
loopne
inc
push
xor
lahf
fcmovbe
xchg
jbe
add
into
repz
xor
lret
repz
xor
sbb
xchg
inc
adc
pop
mov
fstpt
jbe
mov
push
or
jle
xchg
inc
xor
stos
insb
popa
mov
inc
mov
orb
fptan
xor
adc
dec
pop
mov
jne
xchg
orl
adc
pop
stos
loop
aaa
stos
sbb
out
std
fmull
mov
dec
or
out
xchg
jo
adc
xor
in
aaa
lret
dec
loop
mov
xor
cmp
cmp
push
stc
add
xchg
jge,pn
inc
rcr
push
or
sbb
cwtl
or
jecxz
lret
pop
mov
gs
imul
push
mov
in
pop
loope
mov
shlb
cmpsb
ret
jmp
dec
dec
or
leave
jns
imul
cmp
out
ljmp
jb
mov
push
insb
xor
cmpsl
bswap
inc
xor
loope
sub
pushf
mov
movsl
jp
pop
sbb
jecxz
out
into
pop
or
jne
std
pop
fld
pop
cmp
jg
cld
subb
jge
xlat
xorb
insl
pop
fcmovbe
xchg
leave
mov
jmp
and
out
xor
sub
test
adc
out
jle
sahf
shrb
mov
inc
jg
pop
dec
rcrl
mov
add
scas
adc
mov
lcall
in
inc
cmp
xor
jecxz
les
pop
mov
int3
push
aas
movsb
mov
dec
stos
sarb
loope
or
push
lret
orl
idivl
mov
pminsw
mov
jb
cmp
cmp
ret
mov
addr16
fsubrs
sbbb
insl
lea
push
stos
inc
fdivl
movsb
pushf
dec
call
xchg
jl
cmp
add
clc
jb
das
xchg
aaa
int3
xchg
mov
sysexit
xchg
xor
adc
jno
pushf
call
pop
addr16
pop
push
test
cmp
int
je
test
leave
xor
sbb
cmp
mov
test
sahf
jmp
lret
ljmp
and
mov
push
fiaddl
cltd
inc
in
rorl
test
adc
sbbl
pop
loope
dec
push
je
int
test
scas
cmp
jnp
in
adc
jecxz
sub
mov
jmp
pop
dec
enter
ja
es
ja
aaa
sbb
pop
cli
ret
mov
test
repz
jbe
sub
loope
lret
lods
jne
loopne
inc
in
fistpll
imul
push
mov
or
shll
pop
jmp
movsb
mov
dec
dec
xchg
mov
xchg
aad
xor
xchg
sub
fsubs
or
aas
lods
test
scas
xor
xlat
and
push
cmp
xchg
sbb
sub
mov
leave
mov
push
ret
imul
in
mov
out
pop
rcll
mov
and
sbb
mov
mov
xor
adc
outsb
inc
cmp
push
xor
xlat
jg
push
sti
sub
add
fnstenv
out
xor
ret
sub
xor
bound
and
jmp
mov
stc
into
cwtl
lret
push
out
adc
lods
loop
cwtl
mov
loopne
dec
stc
mov
sbb
add
push
fbstp
mov
call
out
stos
push
rcrl
pop
mov
xor
leave
cli
movsb
addb
jns
mov
xor
out
sbb
mov
mul
loope
jmp
aaa
adc
lret
pop
and
mov
aaa
mov
mov
push
icebp
mov
in
jmp
nop
addb
ficoml
dec
or
testl
shl
sub
test
pop
push
rol
pop
mov
mov
scas
inc
sti
sub
cld
div
cmpsb
jne
js,pn
cmpsb
push
sub
push
fchs
call
call
rorl
lds
mov
sbb
dec
ja
js
xor
lea
sbb
pop
fmul
mov
pushf
das
movsb
imul
aaa
cs
fs
jge
dec
imul
int3
test
insl
aad
dec
push
pop
mov
cmp
nop
push
push
mov
jmp
push
pop
pop
add
and
mov
pop
push
pop
jns
mov
stos
push
inc
mov
push
das
jmp
adc
das
fadds
xchg
adc
cmpsl
neg
fimull
fistl
jno
loope
mov
xchg
add
xor
mov
test
or
inc
insb
cmp
incl
addr16
inc
xchg
test
mov
lods
lcall
adc
inc
out
sub
sbb
xchg
ficomps
into
sub
scas
enterw
or
jno
rorl
in
aad
xor
sahf
scas
inc
cmp
fwait
addr16
adc
or
in
mov
leave
loope
addl
mov
mov
rorl
push
lock
jl
pop
mov
cltd
lret
scas
pusha
dec
cmp
test
repnz
lahf
jne
mov
dec
jb
dec
inc
pop
or
mov
sarl
mov
stos
jbe
pop
jmp
pop
sbb
out
push
imul
pop
adcl
cmc
jne
mov
mov
fistpll
and
lahf
mov
popf
hlt
xor
mov
mov
push
jle
dec
out
xchg
rcrl
test
ja
adc
pop
sub
xchg
ds
adc
push
scas
loope
add
stc
repnz
in
lods
loop
stos
inc
jae
push
leave
inc
sbb
pop
xchg
mov
jl
shll
push
cmp
out
push
out
dec
mov
outsl
sbb
or
les
out
pop
out
in
iretw
outsb
jge
nop
in
dec
mov
cmp
dec
pushf
sbb
lea
jge
pop
adc
adc
movsb
popa
push
adc
add
sbb
test
fmul
dec
pop
pop
dec
data16
sbb
les
mov
mov
add
and
fst
dec
addr16
and
movsb
das
xchg
fldt
pusha
jnp
int
dec
sub
add
icebp
aam
pop
xchg
out
mov
or
rorb
push
iret
mov
loopne
into
ljmp
pusha
mov
fisttps
mov
jns
sub
arpl
add
outsl
scas
nop
dec
in
subb
jmp
bound
mov
xor
and
test
gs
cwtl
mov
lret
push
cmp
add
mov
outsb
out
sub
test
adc
imul
aaa
in
xchg
mov
and
add
mov
mull
pop
test
push
roll
push
pop
out
and
lea
enter
xor
mov
in
in
sbb
rorl
out
out
test
push
ljmp
add
mov
mov
lahf
and
push
mov
push
lds
ret
std
adc
lea
int
mov
or
out
adcl
or
pushf
dec
std
pop
add
or
sbb
add
cmpsb
sbbl
scas
mov
jo
loop
hlt
dec
in
xor
push
jno
aam
repnz
repnz
in
fbld
test
and
cld
popa
or
xchg
add
mov
xchg
xor
insl
cmp
sbb
xor
mov
stos
lods
mov
pop
lods
sub
leave
les
xchg
shrb
int
cmp
pushl
clc
aaa
xor
dec
movsl
loop
jne
and
loopne
cmpsl
sbb
inc
idivl
jns
test
or
jnp
dec
loope
insb
sbb
roll
arpl
xchg
mov
pop
push
negl
scas
test
xchg
xchg
int3
in
aam
xchg
cmp
in
lds
popa
bound
push
mov
jl
mov
cld
lret
lods
cmc
push
xlat
sbb
shl
js
mov
jne
sbb
outsl
sbb
mov
jbe
cmpsl
xchg
in
xor
fsubs
jns
es
cmp
shl
cmp
mov
adc
icebp
xchg
push
les
inc
mov
push
call
imul
or
inc
push
arpl
sub
cld
push
xorl
xchg
inc
fbstp
mov
ds
sarb
sti
push
xchg
in
cltd
add
jno
pop
out
mov
bound
cli
insl
in
cmp
xor
outsb
jae
mov
pop
jbe
xor
or
das
fisubrs
xor
mov
pop
dec
pop
in
ret
in
ds
add
mov
fwait
jb
xchg
push
fistpll
cmp
push
xor
sbb
pop
xchg
push
scas
bound
std
mov
adc
popa
jne
push
in
cmp
mov
cmp
or
arpl
icebp
adc
sub
ret
fs
lds
rcl
adc
in
sbb
sub
gs
lock
sbb
cwtl
jns
add
push
jecxz
scas
shr
mov
cmp
loopne
xchg
fsubs
adcl
mov
dec
pop
xchg
scas
popa
ret
xlat
xchg
mov
mov
jne
loope
adc
mov
cmpsb
dec
popa
test
cmp
jno
testb
rclb
sti
xor
inc
popa
adc
shrl
pop
jb
ss
lahf
adc
or
cwtl
pop
jnp
ret
xchg
jno
sbb
pop
adc
dec
repz
test
fldt
jb
mov
call
xchg
sbb
xor
scas
push
out
into
add
jle
jmp
or
es
pushf
inc
ss
rorb
in
and
or
sub
cmc
sbb
or
dec
pop
jge
je
xchg
out
add
xchg
aam
jge
jno
rol
popa
xchg
idiv
rcl
jl
pop
imull
sbb
cmp
ret
mov
xchg
inc
enter
cmp
sub
stos
inc
out
push
sahf
andl
adc
rclb
and
sbb
sbb
push
sbb
jae
out
repnz
jnp
mov
test
addr16
cs
xlat
add
gs
xlat
dec
loope
ret
xor
jg
xchg
daa
adcb
push
fxtract
in
mov
movsbl
sti
packuswb
mov
mov
sub
stc
lahf
test
into
subb
xchg
fisubrs
add
or
cmc
push
xchg
ret
lods
movsb
and
subb
data16
add
and
xor
sarb
push
or
xlat
ror
std
inc
xor
lock
lods
push
add
mov
cmp
shrl
mov
ds
dec
pusha
loope
nop
gs
icebp
fstps
les
mov
ret
or
cmp
clc
pop
das
loope
enter
dec
fimull
scas
push
aas
fisttps
negb
mov
loopne
cmpsb
sbb
mov
int3
mov
cmpsl
cmp
and
ret
adc
insl
es
cmp
cmc
xchg
rcrl
mov
test
out
stos
rorb
and
notl
lcall
mov
in
std
dec
push
lods
add
or
dec
pop
sbb
enter
js
fwait
outsb
mov
xchg
icebp
inc
cs
fs
out
jg
out
jae
mov
mov
les
cmp
and
mov
in
outsb
mov
add
sti
orl
ja
and
clc
out
push
outsb
and
js
cmp
cwtl
rcl
jo
sbb
int
inc
sti
push
mov
ficoml
jo
pusha
xor
popf
add
fwait
push
mov
js
cwtl
adc
clc
jno
pop
and
push
mov
imul
inc
push
insb
dec
and
mov
pop
mov
and
dec
lret
mov
xor
inc
decb
clc
inc
cltd
into
mov
xor
call
repz
pusha
lods
sbbl
movsb
jecxz
push
push
fcmove
or
xchg
sbb
in
xchg
sub
and
pusha
rorl
movsl
and
xor
push
mov
je
mov
adc
and
shr
icebp
sub
fnsave
ret
mov
lea
sub
push
push
cld
es
add
push
adcb
push
or
dec
test
in
sub
jae
and
push
and
cld
in
mov
imul
adc
inc
push
mov
adc
in
add
popa
xlat
fdiv
lret
ljmp
mov
ss
out
inc
imul
repnz
jg
loope
shll
ljmp
nop
push
das
stos
or
xor
outsb
push
dec
lock
xchg
test
xchg
bound
insb
daa
cmpl
scas
fildll
das
push
dec
and
int
push
mov
je
clc
leave
pop
xor
adc
cmp
inc
xchg
cmpsb
enter
inc
cmpsb
imul
cmpsb
sbbl
sbb
lods
adc
cmp
jns
mov
cld
movsb
data16
stos
xor
mov
inc
xor
out
daa
scas
dec
xor
mov
xchg
imul
push
rolb
lret
scas
inc
push
and
inc
mov
mov
hlt
mov
mov
sbb
int3
ret
cmp
mov
sbb
pop
mov
rcrb
pop
pop
inc
push
and
shlb
fisubrl
sub
jg
fucomi
mov
in
cmpsl
lret
lock
sbb
fistps
loop
sub
fisubrl
ja
mov
pop
and
push
ljmp
push
sbb
xchg
cmp
and
jae
enter
mov
dec
repz
sub
sub
push
and
outsl
shrb
push
ret
or
and
push
push
cmp
call
shlb
lock
mov
jecxz
jecxz
push
jnp
out
or
jp
sub
jle
pop
push
call
xor
pop
mov
xchg
call
pop
sbb
mov
mov
addr16
test
adc
clc
xor
sub
jge
jbe
nop
or
inc
cmpsl
push
sub
mov
test
je
mov
or
movsb
movsl
lods
push
xchg
add
inc
and
sub
sub
jge
je
clc
mov
sub
pop
push
and
fsubl
fwait
cld
and
mov
pop
cwtl
stc
lods
dec
sub
js
mov
bswap
cmp
push
notb
aam
scas
out
dec
xchg
enter
mov
and
scas
mov
in
mov
pop
ja
dec
stc
sub
pop
pop
cmc
add
xlat
sub
sar
dec
fnstcw
cmp
inc
sti
addl
push
repz
jmp
mov
inc
popa
push
out
aad
lahf
int
xor
imul
inc
mov
notb
mov
push
fisubl
sbb
imul
fmulp
mov
xchg
jle
or
test
jbe,pn
cmp
dec
sub
das
xchg
xor
push
nop
xchg
xchg
fsubl
int
or
push
test
cmp
inc
arpl
movsb
test
inc
scas
mov
pop
sub
jmp
or
push
outsl
mov
in
mov
inc
mov
cmp
mov
or
std
push
inc
xchg
jmp
jne
dec
enter
inc
mov
ja
movsl
dec
mov
cmp
cmc
out
push
jb
dec
mov
mov
outsl
add
dec
orl
nop
in
bound
sbb
rclb
pop
mov
call
or
sbb
push
cmp
sarl
inc
loop
adc
in
in
gs
push
dec
nop
rcl
adc
fdivl
popf
call
xor
fsubs
out
imul
jo
xor
mov
ret
sbb
es
clts
lock
sarl
push
sbb
mov
cmp
push
and
jp
add
add
imul
or
sub
es
add
aas
cwtl
je
clc
int
push
jo
out
mov
lret
xor
sbb
jg
inc
jge
movsb
inc
mov
rol
push
into
inc
xchg
jbe
cmp
arpl
adc
mov
xor
xchg
test
test
mov
mov
jo
ja
jnp
scas
ds
scas
out
stos
popa
mov
cwtl
fsubr
jp
popa
cmc
sub
xchg
dec
jecxz
bound
sub
inc
scas
xor
popf
push
jmp
lcall
mov
push
or
jmp
push
xchg
or
dec
dec
fdivs
pop
rcll
into
fs
mov
sub
push
cmp
push
rorb
xchg
pop
gs
lret
out
push
adc
ret
cld
insl
push
pop
lret
out
test
adc
loop
addl
sub
pop
leave
add
scas
cmp
mov
jp
in
fidivrs
dec
add
push
sub
arpl
imul
test
cltd
push
hlt
cld
insl
cmp
fdivr
cs
jae
es
sbb
ret
pop
inc
js
adc
mov
test
xor
adc
lahf
and
cmp
stos
pop
inc
imul
das
into
stc
push
push
fstpt
mov
sbb
sbb
js
cmp
lods
adc
sbb
aaa
in
push
ljmp
sbb
jbe
in
sub
and
ja
mov
or
les
mov
mov
pop
dec
mov
repz
adc
xlat
mov
ror
es
mov
rclb
and
dec
in
cmp
rorl
test
fmul
test
sbb
pop
and
lods
jnp
push
inc
lds
sub
in
in
sbb
repnz
xor
add
mov
icebp
jp
and
push
shrl
sbbb
imul
cmp
lret
in
aam
insl
or
lahf
xor
dec
inc
xchg
call
mov
insb
cmp
dec
ds
mov
inc
sbb
or
shl
into
inc
dec
add
push
out
pop
popa
push
mov
aam
inc
in
popf
out
mov
fucomip
mov
ljmp
push
std
jecxz
jle
or
adc
push
push
sub
mov
cld
call
xchg
jg
pop
std
mov
stc
mov
cs
mov
shll
cmpb
pusha
push
push
popa
test
pop
imul
das
xchg
xor
mov
mov
adc
push
xlat
jnp
out
popa
cmp
cltd
into
rcll
adc
stos
in
jo
fwait
add
movlhps
lds
sub
jae
pop
leave
aam
and
pop
jb
push
test
stos
lahf
sub
int
int3
scas
pop
seta
jnp
iret
rcrl
xchg
mov
fdivp
inc
jp
imul
push
icebp
inc
cmpsb
fbld
insl
cmp
popf
xchg
dec
jecxz
movsb
sub
cmp
test
mov
mov
jecxz
or
dec
movsb
pushf
adc
addr16
mov
dec
stos
pop
push
arpl
xchg
cltd
xchg
jmp
sbb
fsub
dec
xorb
inc
cmp
sbb
pop
les
lret
data16
inc
jmp
xchg
and
ds
rcrb
cs
loopne
cs
push
mov
adc
xor
add
int3
sbb
sbb
stos
push
insb
loopne
xrelease
dec
repnz
xor
or
leave
loopne
and
int
adc
mov
repz
out
xchg
ja
aas
nop
xchg
dec
push
xchg
pushf
mov
push
sbb
sbb
sbb
xchg
ret
lea
and
dec
cwtl
pop
xor
loop
pop
jmp
arpl
iret
ss
mov
push
pusha
add
lds
outsb
imul
sub
and
ret
aam
pop
dec
and
dec
and
pop
jo
lock
xchg
pop
sbb
xchg
jne
int3
movsl
call
xchg
xor
inc
sub
cmp
and
dec
cmp
cmp
xchg
dec
add
and
inc
or
sub
sbb
jmp
lds
fdivr
jp
mov
push
in
inc
loopne
and
fldt
stc
imul
pop
push
and
or
data16
imul
and
add
inc
push
pop
xor
iret
add
call
call
pop
out
and
mov
push
adc
push
das
xor
aaa
adc
pop
imul
lret
mov
imul
and
and
in
bound
xlat
or
inc
in
jmp
add
in
push
aaa
lea
and
or
inc
mov
inc
outsl
xor
xchg
sub
ljmp
addr16
in
aas
out
adc
mov
leave
mov
sub
inc
xchg
mov
adc
dec
adc
xor
push
sbb
in
xlat
aad
mov
jno
hlt
scas
pextrw
shrb
repnz
iret
fiadds
cmpsl
pop
sbb
cs
and
push
gs
popa
lret
sub
out
mov
jmp
sti
add
les
add
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
jl
mov
ror
pushf
pop
icebp
popf
daa
push
pop
lcall
pop
fdivrs
dec
imul
inc
mov
push
xchg
insb
repnz
or
movsl
push
bound
pop
call
movsl
mov
into
mulb
cmp
clc
sbb
stos
or
jns
stos
dec
adc
push
mov
sti
loope
lods
mov
sub
hlt
dec
or
les
jb
pop
aad
xchg
jae
rolb
mov
jle
add
loopne
push
in
lds
sarl
push
add
jb
xor
fiadds
xor
mov
loope
and
mov
mov
jmp
ja
das
mov
add
and
pop
scas
fwait
jmp
fldcw
ret
out
repz
cmc
sbb
push
fcmovnu
fdivrl
mov
in
jbe
sbb
pop
mov
call
jg
mov
call
stos
loop
std
popa
roll
sbb
nop
dec
stc
mov
push
jne
out
xchg
in
or
bound
gs
int
or
pop
pop
faddl
mov
cmp
dec
roll
pop
arpl
push
ja
dec
lock
and
cmp
sbb
adc
mov
arpl
push
fcmovbe
mov
xor
pop
aas
add
sub
pand
int3
push
push
add
or
cmpsb
pop
into
fdivl
jbe
pop
loopne
xor
xchg
adc
add
insb
pop
mov
jne
pop
icebp
cwtl
movsb
jnp
xchg
jae
push
insb
lea
xchg
fsts
jo
jge,pt
cli
ja
pop
pop
push
movsb
mov
sbb
fsubl
in
lock
cltd
mov
add
mov
pusha
lea
insl
mov
inc
loope
push
test
loopne
adc
push
cmp
out
insb
dec
pushl
mov
loopne
adc
inc
data16
daa
and
mov
dec
jne
ds
pop
and
pop
push
shlb
loopne
or
push
mov
insl
push
stos
sbb
or
neg
mov
inc
mov
mov
cmp
dec
dec
notb
hlt
lcall
mov
and
fsubs
cmovns
aas
jbe
mov
pop
int3
adc
mov
out
cmp
fstpl
mov
push
and
pop
adc
ss
mov
lea
mov
and
or
roll
ror
mov
in
and
jl
sti
popa
cmc
imul
dec
jo
pop
fadds
in
dec
popa
sub
mov
and
mul
lock
cmp
mov
cltd
and
ret
stc
js
mov
cmp
sub
arpl
fcoml
push
jns
xchg
add
add
test
mov
jp
pop
out
leave
loop
jmp
dec
ret
push
pop
fdivrl
in
xchg
inc
xor
xor
or
andl
stos
sti
insb
xor
in
mov
push
adc
or
mov
subb
pop
jle
shll
or
xchg
sbb
daa
cmp
imul
bound
lea
shl
das
and
pop
jl
push
jne
dec
packuswb
mov
insl
clc
mov
fs
xor
mov
scas
and
or
lret
adc
push
in
out
add
add
push
adc
into
mov
int3
jle
or
lock
jae
nop
sahf
jns
cmpsl
out
mov
add
addr16
test
lds
pop
sbb
pop
test
xchg
xor
enter
insl
test
lret
std
cli
scas
jns
xchg
xor
stos
ss
call
aas
sti
jle
and
dec
cmp
clc
sub
in
sbb
imul
pusha
loope
pop
mov
inc
cmpsl
cmp
loop
iret
iret
cmp
mov
test
xchg
push
adc
lods
pop
and
cld
jecxz
add
pop
xchg
loope
mov
mov
clc
sub
scas
arpl
shl
cltd
push
xor
movsb
out
jae
arpl
lcall
aam
and
call
inc
push
mov
add
lock
mov
cmp
and
xchg
or
add
mov
jae
mov
in
and
mov
hlt
pop
loope
cltd
mov
sub
push
add
es
sub
ds
cltd
sub
push
sbb
int
repz
push
jmp
pop
sbb
imul
ret
add
fwait
cmp
leave
xchg
mov
push
xchg
jg
insb
mov
add
aam
push
stos
sub
mov
sub
mov
or
hlt
lods
mov
nop
inc
aad
cmp
lds
jg
mov
sti
je
std
mov
xor
ficomps
shrb
cmp
inc
sbb
shlb
movl
inc
xchg
jecxz
aaa
mov
aaa
shrl
stos
cld
fmull
mov
iret
popa
mov
jb
adc
push
push
jp
push
cmp
rcr
mov
push
dec
push
hlt
mov
outsb
push
sbb
pop
aaa
cmp
out
insl
lea
mov
jb
sub
inc
fdivrl
call
dec
testl
add
push
push
inc
mov
aas
lahf
mov
add
leave
push
inc
dec
and
es
popf
push
xor
mov
and
xchg
rsm
fistpll
mov
mov
mov
xchg
cmc
sbb
cs
ret
shrb
mov
xchg
jne
jl
aam
cmp
icebp
faddl
ljmp
mov
xor
ret
ret
dec
bound
and
ljmp
gs
or
add
iretw
insb
sbb
test
mov
je
xchg
scas
bound
push
mov
inc
push
adc
or
fwait
inc
mov
jg
fstl
xor
or
xchg
scas
jmp
sahf
sbb
repnz
and
adc
pop
ss
pop
and
fs
mov
and
bound
dec
push
push
sbb
cs
jbe
add
orb
dec
out
push
sub
notb
ljmp
cmc
and
and
test
lret
sbb
les
inc
call
aaa
lea
test
outsl
mov
inc
loop
mov
sbb
nop
les
sarl
sub
mov
lods
jnp
or
gs
jl
loope
jbe
mov
sbb
bound
insb
adc
mov
in
iret
gs
ljmp
sar
cli
mov
shrb
sahf
rcrl
ret
cltd
adc
xor
jne
iret
fwait
lret
mov
int
pop
xchg
andb
add
push
adc
or
pop
dec
jbe
incl
pop
xor
movsb
sbb
mov
inc
int3
dec
xchg
sbb
aas
jnp
int3
out
push
dec
and
stos
imul
add
mov
cmp
fwait
xchg
mov
into
lahf
inc
xchg
xchg
fistpl
push
iret
pop
sub
xchg
out
loopne
cmpsb
dec
es
lods
dec
ja
mov
push
lods
xchg
adc
movsb
out
arpl
cmp
js
data16
inc
pop
call
inc
imul
sti
and
imul
inc
pop
in
test
sub
mov
pop
aad
adc
fadds
andb
shrl
pop
xchg
mov
insb
ret
inc
and
push
sahf
mov
jo
add
push
mov
push
lods
aas
lds
icebp
inc
adc
js
call
pop
cmp
mov
in
arpl
dec
jne
push
pop
pop
lods
mov
in
lods
add
repnz
das
cmpb
mov
xor
lahf
or
push
les
loop
pop
mov
ror
xchg
sarl
xchg
sbb
je
out
fsubrl
adc
xor
add
fistpl
and
shlb
ljmp
jle
and
aas
xchg
fs
mov
scas
repz
test
cmp
dec
in
or
in
add
les
or
xor
clc
in
lock
jl
rep
mov
cmp
daa
es
mov
jge
mov
mov
sbb
inc
inc
nop
xor
pop
mov
adc
cs
mov
movsl
mov
stc
pop
xchg
inc
repnz
mov
mov
lds
xor
or
pop
push
xchg
sti
js
loopne
cld
jns
outsb
and
mov
jae
push
repz
leave
xor
iret
pop
xchg
outsb
stc
fucomi
loope
iret
shl
xchg
sbb
popf
decb
or
pop
decl
or
xchg
ret
ret
jp
inc
pop
fs
cld
add
push
lcall
mov
fidivrl
or
leave
push
mov
test
adc
aad
pop
sub
mov
jecxz
jg
add
adc
push
jmp
and
sti
lods
mov
pop
mov
and
xchg
sbb
aaa
mov
loope
imull
out
sbb
cmp
push
je
push
cmc
cmp
mov
xchg
fistpl
test
and
addr16
lods
in
inc
jecxz
loope
or
sub
popf
jo
add
sbb
in
in
pop
inc
mov
or
adc
pusha
outsb
in
lods
subl
push
mov
loopne
outsb
add
inc
mov
dec
pop
adc
ficoml
and
pop
fcompl
ss
jmp
fs
leave
cmc
mov
sti
frstor
cmc
push
push
jo
aad
or
xorl
push
jp
testl
lret
cld
jno
mov
jl
iret
inc
jg
xor
ljmp
push
cmpsb
xor
push
add
xchg
aam
out
xor
hlt
sub
pusha
lds
dec
jne
mov
addr16
lret
sub
bswap
mov
mov
insl
dec
xchg
dec
aaa
dec
test
inc
mov
repz
pop
jg
cmp
ret
mov
dec
movups
lret
mov
arpl
sub
adc
dec
popl
jge
shrb
pop
xchg
push
add
test
data16
imul
rclb
xchg
inc
insb
xchg
lods
cmp
int3
outsb
int
aad
daa
shll
popa
dec
daa
scas
push
push
addb
hlt
cmp
add
sub
and
and
xor
pop
sbb
and
or
outsb
les
test
adc
repnz
lea
test
test
fucomip
fbstp
fstpt
test
repnz
arpl
fwait
dec
test
and
mov
insl
ret
popa
mov
sahf
rcrl
dec
fcompl
jmp
daa
sub
push
push
mov
stos
adc
mov
sub
adc
push
stos
jns
jl,pn
scas
pop
jo
shlb
mov
push
xlat
imul
loop
pop
int
pop
lods
push
or
lcall
aad
sbb
cmp
sub
mov
mov
mov
cs
cmp
dec
lahf
add
mov
scas
ss
xchg
pop
ret
fidivs
jb
xchg
outsb
fwait
xchg
les
xor
sub
sbb
psraw
and
outsb
in
cmp
xor
jmp
popf
jae
inc
adc
inc
lret
cli
push
test
cltd
xchg
adcl
and
mov
cli
mov
xchg
int
int
or
fs
stc
lret
mov
push
sahf
mov
dec
imul
mov
mov
or
cmp
sti
dec
in
cltd
or
xchg
or
mov
cltd
std
and
xchg
in
neg
push
push
pop
loopne
mov
idiv
fmul
out
fcoms
fldcw
jo
test
jb
outsl
lock
out
jge
cmp
stos
sbb
xlat
dec
je
in
dec
sahf
and
and
xchg
or
dec
add
sahf
out
jmp
and
jbe
mov
js
adcb
jg
mov
ret
and
push
loopne
xchg
sub
sub
notl
sbb
add
xlat
mov
add
in
rorl
pop
lods
push
fwait
int
xchg
insb
scas
movsb
test
movsb
loope
call
icebp
mov
shll
jl
pop
add
insb
rorb
sbb
cmpb
filds
pop
pop
fidivl
jbe
hlt
mov
ret
inc
in
test
pop
ljmp
outsb
mov
mov
cmp
loope
jne
pop
lcall
mov
orb
jg,pn
subb
ret
call
lret
dec
adc
cmpl
push
mov
push
lds
push
xchg
pop
xor
test
ljmp
in
dec
xchg
arpl
ds
in
cmp
stos
jns
lcall
cwtl
jne
loop
pop
fwait
or
jbe
repz
sbb
pushf
or
inc
int
jle
dec
cmp
jmp
nop
pusha
pop
out
dec
cwtl
pop
pop
stos
mov
jns
dec
jb
add
mov
and
aad
mov
inc
mov
cwtl
popl
jecxz
mov
ficoms
test
add
cmp
es
shr
test
iret
mov
out
hlt
mov
sub
hlt
mov
ja
mov
sbb
mov
pop
or
or
fwait
je
test
pop
xchg
cmp
lahf
jo
xlat
xchg
daa
aaa
inc
add
lods
sub
jbe
test
test
mov
lods
dec
jl
mov
sub
testb
outsl
pop
xchg
movsl
cmpsl
mov
push
and
pop
xchg
or
leave
jp
pop
out
mov
xlat
and
push
test
pop
and
xchg
scas
mov
mov
and
iret
pop
inc
xchg
roll
xor
into
xchg
clc
dec
enter
enter
in
mov
inc
fists
xchg
cwtl
mov
bound
push
push
sub
aam
dec
jle
jb
ss
int3
ljmp
push
push
pop
sbb
test
aas
adc
cmp
enter
pop
leave
dec
jge
into
dec
sbb
iret
cmp
cmp
aas
dec
cmp
lods
stos
les
je
imul
mov
fdivl
push
sub
mov
cld
faddl
cmp
sahf
and
enter
adc
ret
jns
addr16
sahf
jg
pop
dec
pusha
repz
xchg
adc
imul
roll
pop
movb
pop
mov
sub
fistpl
sbb
push
and
pop
sub
mov
cmp
movsl
sbb
lret
inc
int
out
xchg
hlt
int
stos
lret
cmc
sub
pushf
into
cltd
lahf
dec
js
cld
stc
xlat
cmp
add
dec
das
adc
std
jmp
adc
andb
jle
cmc
das
repz
fwait
sbb
dec
push
rcrl
inc
out
sub
scas
mov
xchg
ja
sbb
mov
dec
mov
in
adc
out
into
pop
push
mov
and
sbb
dec
push
mov
or
xor
call
rorl
daa
fisttps
push
test
adc
adc
dec
popf
cmp
push
data16
push
push
popa
mov
movsl
sti
push
or
push
loope
mov
cli
shrl
or
pop
push
fs
cmpsl
jp
bound
xor
and
faddl
insl
lahf
cmp
ds
inc
push
and
fsub
cmc
mov
fprem
cld
dec
fiadds
mov
sub
repz
lcall
and
or
add
xor
and
inc
pop
mov
mov
add
ret
add
andb
xor
sbb
dec
das
aaa
jle
ret
stos
xor
imul
mov
push
cmpsl
pop
stc
mov
arpl
push
adc
js
aad
cs
fldl
push
aas
xchg
pop
sahf
ret
mov
stos
dec
mov
insb
lds
push
daa
int3
jne
xchg
test
stos
leave
out
imul
pop
stc
popf
push
xchg
ja
inc
pop
in
pusha
or
inc
jae
push
mov
enter
sti
test
jo
js
loope
std
add
mov
sbb
push
jbe
out
sbb
mov
aaa
fwait
into
cmpsl
xchg
outsb
adc
das
dec
sub
dec
jle
inc
cmp
pusha
xor
out
scas
dec
pop
out
cwtl
pop
fstl
xchg
cld
je
sub
push
dec
stc
mov
subl
or
mov
enter
setb
call
adc
xlat
mov
inc
xchg
mov
arpl
adc
cwtl
outsl
cld
insl
ljmp
repz
cmp
jg
popa
mov
call
inc
sub
push
xchg
pop
inc
daa
mov
lret
enter
cmp
mov
inc
ja
mov
push
add
push
push
in
test
test
out
push
stc
cmp
arpl
out
jno
mov
cmp
xchg
faddl
pop
jl
hlt
scas
sbb
cwtl
and
imul
jne
inc
xor
scas
popa
movsl
dec
movsb
jo
or
das
jg
jae
cmpsb
add
jecxz
xor
lods
mov
dec
hlt
scas
pop
in
push
xor
cmp
mov
ja
xorb
popa
mov
jnp
in
inc
bound
hlt
in
int
xchg
sub
ret
ljmp
mov
fimuls
pop
popa
lret
mov
mov
mov
add
movsb
xchg
or
sub
push
ret
sub
sub
sti
repz
xchg
call
outsl
mov
aad
test
push
jg
jle
inc
mov
adc
jmp
rcr
and
jo
fs
dec
ljmp
movsl
sbb
aas
mov
adc
scas
mov
bound
pop
and
sti
js
and
movsb
fwait
lret
pop
jg
sub
lcall
fnsave
sti
lds
shlb
cmp
jne
addr16
and
adc
or
popa
mov
mov
jne
shrl
pusha
imul
mov
adc
mov
add
mov
dec
mov
ret
cwtl
add
or
das
adc
xorl
sahf
jo
div
mov
leave
in
andb
lret
jbe
xor
jae
cld
adc
imul
jmp
and
mov
bsf
das
cli
mov
mov
jbe
xor
dec
inc
pop
popl
imul
loope
jmp
popa
lds
gs
arpl
mov
leave
adc
lock
cmpsl
pop
repnz
call
xor
lret
aaa
mov
addr16
jmp
push
fcomps
jae
xor
and
pop
bound
das
insl
or
aad
mov
fs
pusha
xor
addb
dec
jno
test
mov
imul
pop
adc
fs
mull
cmp
push
out
mov
jg
je
out
fs
mov
ret
xor
inc
sbb
imul
cwtl
mov
or
mov
in
dec
inc
xchg
adc
lds
repnz
xchg
loope
xchg
push
mov
fnsave
loopne
rcll
sahf
sahf
push
int
lcall
inc
add
pushl
jecxz
scas
cli
jns
imul
popa
add
lds
bound
in
jmp
adc
pop
dec
push
stos
flds
jnp
push
push
ret
je
inc
or
dec
adc
sub
add
cld
jg
and
aaa
sub
dec
dec
push
mov
mov
daa
lret
test
imul
in
outsb
mov
push
ret
xchg
insb
divb
iret
mov
scas
cmpsb
push
negl
sti
or
pop
int
or
add
cmpsl
stos
aaa
dec
imul
sahf
dec
scas
add
sub
push
shll
cltd
fisttps
cmp
push
cmc
cmpsb
or
pop
sbb
ficoms
dec
fstps
add
ss
or
pop
xor
pop
ljmp
jl
mov
loopne
mov
mov
push
fisttpl
pop
in
xchg
or
test
mov
mov
jge
xor
bts
dec
pop
and
mov
add
lods
xor
int
out
ret
fidivl
dec
shrb
shr
push
jb
xlat
push
lds
pop
jbe
sti
jne
pop
loop
arpl
std
sahf
mov
pop
shlb
repz
imul
arpl
pusha
sbb
leave
into
ljmp
dec
mov
stc
ljmp
loopne
mov
jge
mov
dec
into
dec
lret
or
movsl
cwtl
sub
decl
pop
pushf
pop
or
push
cmp
jb
adc
push
mov
inc
dec
out
mov
hlt
adc
gs
ds
push
test
fcmovnu
gs
stos
cmp
mov
scas
or
adc
out
test
lret
or
je
ret
sbb
repz
dec
cmpsb
test
pusha
dec
iret
push
int
mov
or
fiadds
push
xchg
nop
mov
jb
loopne
stos
cmp
pop
pop
ret
insl
ret
hlt
mov
std
enter
jb
jmp
mov
xchg
or
sbb
in
mov
mov
sbb
push
sarb
jge
adc
aaa
pop
sti
nop
shrb
js
outsb
out
jge
ljmp
gs
stos
sbb
jne
push
xor
inc
aas
xor
in
sbb
mov
enter
jbe
pop
push
out
imulb
aad
dec
jl
cmp
sbb
daa
lahf
xchg
addr16
dec
xor
insb
sbb
sti
xorb
popa
xchg
testl
in
int
clc
push
std
push
ljmp
lock
scas
pop
je
pop
mov
mov
inc
dec
mov
push
mov
jecxz
jecxz
jo
jb
fdivl
pop
inc
lods
xor
lret
sub
mov
push
imul
or
xor
fisubs
sub
dec
stc
testl
jecxz
xchg
xchg
pop
dec
rclb
lcall
sbb
icebp
mov
mov
dec
jne
pop
out
fldl
mov
pop
lcall
adc
dec
imul
xchg
sub
lcall
fidivrl
repnz
jbe
insb
ror
int
or
scas
sbbl
hlt
push
adcb
and
hlt
pop
push
jae
inc
and
out
movsb
scas
fiadds
cwtl
test
sbb
add
cmpsb
mov
adc
int
test
adc
lods
sbb
outsb
sub
mov
add
add
adc
mov
pop
in
int
loop
loopne
dec
repz
dec
jno
xchg
mov
sub
push
and
fisubrs
rorb
mov
and
push
or
sahf
je
in
xchg
mov
jmp
dec
adc
sbb
or
loopne
sub
adc
mov
sbb
fldcw
xor
lea
or
stos
out
mov
ss
xor
push
mov
mov
mov
push
loop
rclb
or
mov
stos
out
aad
loopne
pop
jb
aam
inc
xchg
cld
test
popf
mov
dec
fldenv
jmp
pop
stos
es
add
loop
jnp
xor
mov
cmpsb
test
call
shlb
imul
mov
mov
push
mov
cmpsl
jae
stc
or
movsb
xor
lods
or
mov
adc
icebp
dec
dec
xchg
in
push
and
nop
aas
cmp
dec
adcl
lock
mov
repz
sub
pop
sub
mov
repnz
movsb
cmp
out
or
jp
cmpsb
cmp
sbb
sub
xchg
jle
ds
mov
mov
lea
movsb
jnp
push
or
out
sub
int3
rcl
jp
or
pop
push
rcr
js
pop
movsl
stos
mov
pop
pop
cmp
add
ret
mov
jecxz
andb
sarb
andb
inc
inc
dec
pop
loop
xchg
into
aas
push
jae
xchg
mov
mov
in
push
test
cmp
push
sbb
dec
imul
daa
sbb
out
divb
mov
sahf
jl
enter
out
iret
cmp
sbb
push
xor
rorb
pop
je
push
arpl
js
xchg
cmp
sti
or
sub
lret
xor
repnz
pushf
push
jmp
pop
add
push
xor
dec
in
add
movb
inc
es
mov
ficomps
cltd
lods
inc
int3
fwait
push
in
mov
mov
add
push
fisttpll
stos
inc
ss
popa
aas
iret
pop
sub
xchg
jge
cli
dec
jl
in
push
jmp
fldenv
mov
cmpsl
and
dec
enter
inc
out
out
sbb
je
fildl
add
in
and
xchg
jnp
fcompl
hlt
pop
dec
popa
dec
scas
xor
in
mov
cltd
mov
daa
lret
mov
pusha
fstpt
lea
push
test
jb
ljmp
and
jmp
adc
insl
pop
gs
lcall
in
loop
insb
add
add
movsl
or
and
add
or
mov
outsl
clc
mov
sub
add
lsl
mov
jne
xor
shll
cmp
sbb
xchg
xor
adc
mov
pusha
and
movsl
outsl
cmc
or
nop
nop
mov
cld
inc
add
push
mov
out
sbb
shll
or
outsb
dec
or
and
shr
mov
testl
cmpb
mov
fldcw
mov
or
iret
inc
adc
shll
dec
hlt
sub
xor
int3
inc
mov
push
adcb
ds
dec
and
daa
dec
mov
enter
out
cmp
scas
fdivrs
mov
pop
icebp
movsb
or
cld
cmp
push
fsubp
adc
fimuls
sub
pop
xchg
testb
mov
push
xchg
dec
jle
mov
sbbb
rorb
push
fdivrl
or
adc
adc
cltd
popa
xor
outsl
fstl
fiadds
and
xchg
shll
jb
ret
xor
mov
dec
sub
push
fistpl
dec
dec
xchg
dec
popa
inc
pop
mov
enter
xchg
out
sbb
fmull
fiadds
gs
xor
or
or
pop
stc
pop
jne
mov
mov
cli
and
cmc
aam
cmp
imul
jmp
or
das
and
and
push
mov
jl
ja
stc
jb
pushf
push
aam
mov
adc
pop
pop
mov
mov
and
and
cmp
mov
gs
into
call
inc
aaa
cld
jne
addr16
and
dec
imul
cmp
sub
sub
mov
push
add
pop
push
sbb
inc
mov
insb
mov
mov
icebp
mov
in
cld
das
inc
lods
icebp
cli
push
mov
cwtl
loop
arpl
xchg
add
or
mov
shrb
repz
ljmp
push
lds
std
and
test
pushf
push
mov
imul
nop
fisubl
cmp
ficomps
in
imul
pusha
xor
stos
stos
or
pop
cmp
xchg
fsubs
rcl
aam
mov
xchg
adc
or
repz
mov
mov
mov
adc
adc
out
sub
push
lods
jae
popf
mulb
adc
pop
mov
jns
xor
xor
std
ret
mov
jne
mov
mov
orl
mov
xor
enter
dec
iret
mov
sbb
loopne
aad
loop
lcall
test
rcrl
add
cld
std
xor
fwait
sbb
out
inc
cmp
outsl
sub
pop
adc
enter
sarl
out
ret
je
nop
int3
mov
icebp
ss
sbb
push
inc
out
iret
pop
mov
jne
imul
das
inc
in
mov
dec
and
adc
mov
or
in
adc
leave
add
leave
jae
xchg
imul
inc
fstps
ss
inc
push
jg
or
xchg
into
xor
ss
adc
add
xchg
mov
jmp
rcll
mov
out
jbe
xchg
dec
xor
aad
in
and
loopne
inc
lds
and
aad
adc
pusha
sub
and
imul
fnsave
test
dec
xor
into
add
add
push
mov
clc
mov
lcall
lret
dec
rcrl
jae
fs
shlb
mov
lock
or
sub
sub
xlat
mov
mov
add
hlt
shll
or
cli
pop
mov
cld
dec
cmp
rcrl
bswap
inc
inc
mov
cwtl
icebp
pushf
add
and
out
test
dec
inc
lds
jmp
sub
loopne
jns
scas
fldz
cmpsl
jmp
add
inc
push
mov
jl
xchg
jge
clc
cmp
xor
mov
or
in
loope
push
xchg
push
cld
mov
into
dec
cmpsb
loopne
mov
push
lock
xchg
insl
cwtl
cld
sub
mov
cld
lea
fsubp
mov
push
mov
aam
cmp
mov
pop
xchg
rorl
ret
test
iret
pop
loop
stc
and
js
ja
add
xchg
cmp
adc
xor
xchg
imul
fmul
insb
jne
mov
out
test
div
push
fildll
repnz
xor
jb
pusha
into
out
pop
out
fsubr
jle
subl
adc
jg
ja
jo
nop
ret
loop
push
test
lahf
sti
jle
bound
dec
xor
xlat
mov
dec
repz
mov
notl
dec
std
mov
mov
mov
daa
jo
push
dec
jnp
into
scas
gs
popf
je
mov
jg
jno,pn
aam
stos
call
push
addr16
rclb
pop
lods
xor
movsb
mov
pop
loopne
movsb
scas
fnstcw
hlt
dec
push
inc
add
dec
xchg
int3
push
jmp
movsb
lcall
adc
mov
scas
imul
lea
dec
add
adc
or
xlat
add
pusha
mov
mov
xchg
dec
inc
lret
shlb
or
sub
push
lret
cmp
cld
inc
movsl
inc
testl
adc
loopne
dec
flds
sbb
sub
mov
mov
and
pop
sahf
mov
addl
adcb
adc
mov
out
subl
mov
push
cmp
rcl
pop
dec
aam
and
hlt
stos
fdiv
orl
movsb
jne
jmp
mov
in
adc
push
into
jg
stos
sub
inc
pop
push
loop
mov
loop
jge
enter
cmp
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
xor
pop
popa
rcrb
inc
cmc
sti
add
adc
adc
fxch
jb
nop
repnz
mov
dec
aaa
jmp
sub
inc
push
mov
pop
cs
xchg
push
enter
adc
add
into
cmpsb
lret
pop
cmc
sub
test
adc
aaa
jns
pop
mov
xorl
notb
je
arpl
movsl
fisubrs
pop
pop
jb
adc
stos
jnp
jle,pn
xchg
mov
fnstcw
in
leave
sahf
jmp
xchg
xchg
or
sub
xor
cmp
pushf
push
ja
lock
push
xor
inc
xor
leave
or
in
fistpl
stos
dec
lods
add
mov
movsb
neg
adc
and
outsb
sub
pusha
mov
xor
cld
in
push
mov
mov
sti
dec
clc
lods
sti
dec
xor
inc
add
movsl
testl
jp
popa
mov
shll
inc
in
pop
jb
add
rclb
fsts
orl
adcl
repnz
aam
inc
or
call
sbb
hlt
loopne
movsl
idivl
testb
mov
pusha
ss
scas
test
shlb
push
jae
or
inc
int3
cmp
pushf
fcomi
sub
ja
xchg
inc
push
adc
les
mov
dec
ret
mov
in
and
out
cmp
shlb
add
rcr
movsb
or
mov
pusha
ja
xlat
cmp
push
push
dec
add
leave
add
push
mov
jne
mov
dec
cmp
dec
xor
xor
ret
mov
sub
sub
add
inc
fcmove
dec
dec
pop
jg
out
and
iret
imul
push
enter
cmpsl
push
push
mov
into
jns
es
xchg
mov
jecxz
inc
sbb
test
push
loopne
dec
lret
dec
and
mov
inc
loopne
push
aad
jecxz
sbb
mov
incb
cltd
jl
lods
inc
cwtl
adc
or
setb
mov
or
fcomps
lds
cmp
rcl
mov
push
stos
push
pop
into
adc
mov
jae
or
out
dec
clc
sbb
jmp
cmc
push
mov
clc
aas
std
arpl
and
or
inc
pop
incl
fdivl
mov
sub
jno
add
cld
mov
sub
pop
sub
push
sub
xorb
dec
jns
inc
add
fcoms
adc
pop
lods
inc
jnp
out
adc
inc
mov
lret
orb
ficoml
outsb
insb
xor
mov
mov
xor
mov
adcb
dec
sub
xchg
test
lret
arpl
iret
mov
and
add
stos
mulb
or
pop
cmp
xor
fs
push
cld
imull
pop
cmp
push
mov
pop
ljmp
gs
int
mov
xchg
pop
enter
lret
fcmovnb
mulb
xchg
or
mov
pop
dec
inc
jge
stos
dec
int
sub
pop
inc
orb
and
pop
mov
dec
mov
jnp
mov
mov
adc
xchg
pop
in
and
dec
pop
mov
in
xor
jnp
int
push
pop
stc
cmp
push
sub
lods
andb
dec
or
cmp
dec
iret
and
insl
mov
clc
stos
push
or
test
sub
pop
cmp
xor
pushf
repz
push
or
cld
add
inc
xchg
inc
xchg
xor
std
stos
movsl
rorb
sbb
pop
cmc
dec
aam
sub
jge
pop
mov
push
mov
js
push
adc
mov
xchg
test
pop
ja
sub
bound
jns
cmpsb
in
rolb
ljmp
mov
cmp
ja
mov
jmp
dec
jns
mov
cmpsb
sti
mov
adc
js
inc
and
jecxz
test
int
adc
or
xchg
sbb
repz
or
adc
enter
bound
mov
dec
aas
das
sti
mov
out
es
imul
xlat
loopne
cwtl
xor
movsb
lea
sbb
mov
xlat
lret
sub
daa
mov
in
dec
repz
andb
xlat
sbb
popf
mov
jle
inc
int3
sub
jns
lds
push
shl
lret
cltd
movsb
cmpsl
push
adc
bound
xchg
xor
cmc
xor
push
or
nop
lcall
add
mov
out
jp
xor
sub
push
xorb
lds
mov
fldenv
inc
addb
fimuls
and
mov
sbb
fildl
movsl
enter
fucomp
call
pop
jecxz
in
addr16
push
movsl
repz
pop
daa
or
or
shll
cmp
ljmp
aam
call
ret
in
stos
daa
jnp
inc
inc
push
pop
adc
adc
jl
das
test
mov
dec
jae
ret
outsb
mov
mov
outsl
add
mov
mov
xor
ret
or
and
mov
fstpt
cs
adc
jecxz
ljmp
add
add
insl
hlt
dec
add
jecxz
into
and
sti
adcl
bound
notl
in
mov
xor
repnz
mov
das
xchg
sub
xor
inc
lds
repz
cmp
mov
lcall
mov
call
fsubl
gs
mov
xchg
cli
insl
imul
stos
xor
lds
or
cmp
pop
xchg
xor
sub
push
std
inc
cmpsl
inc
sub
jae
out
push
repnz
leave
dec
jge
or
shrl
dec
mov
jae,pt
sub
cmp
imul
push
xor
inc
inc
and
inc
aad
pop
sub
and
push
or
ret
fwait
nop
pop
dec
dec
icebp
adc
lret
rclb
shll
data16
addl
dec
inc
enter
add
in
and
sbb
pop
xor
mov
mov
out
adc
jecxz
mov
dec
mov
ja
ss
mov
iret
shr
fisubrl
jmp
mov
pop
push
jle
lahf
or
sub
mov
jp
jo
lahf
mov
clc
out
lock
pop
mov
jns
outsl
movzwl
mov
add
rcll
inc
mov
sbb
inc
aaa
imul
mov
jo
flds
dec
xor
and
cwtl
inc
jl
shll
imul
fdiv
sbb
scas
inc
add
stos
ja
mov
rcrl
fstpt
push
xchg
imul
ja
repnz
or
mov
mov
int3
unpcklps
xor
in
sub
inc
adcl
pop
cmpsb
push
push
in
or
xor
ret
mov
sbb
mov
sub
sub
dec
adc
jle
cltd
data16
repz
mov
jno
popf
mov
clc
xchg
mov
sbb
lret
sahf
xchg
jo
pushf
insb
dec
push
sub
es
cmp
in
aas
cmpsl
leave
imul
jmp
lcall
inc
jne
mov
xlat
jb
dec
push
movups
pop
or
cmp
add
insl
mov
sbb
shr
sahf
xchg
jae
std
or
xchg
mov
push
icebp
mov
out
mov
add
inc
rorb
scas
push
ficompl
orb
nop
orl
out
sarb
jae
sbb
mov
pop
mov
lods
add
fs
insb
xor
inc
pop
mov
sbb
mov
pusha
sarl
mov
fstl
pushf
stc
pop
in
insl
cwtl
loope
jmp
mull
mov
mov
mov
push
mov
pop
xlat
mov
aas
incl
push
mov
lcall
and
ss
bound
pop
sahf
xor
pop
push
shlw
notl
and
imull
fistpll
xchg
mov
cmp
movsl
or
test
cmp
mov
movd
inc
lahf
sbb
add
jecxz
ficoms
dec
fsubrl
jge
jecxz
push
push
cmp
sbb
jecxz
decl
and
dec
push
or
in
jae
das
jle
jecxz
mov
adc
test
dec
dec
fsincos
mov
or
jl
mov
loop
testl
xchg
bound
xchg
dec
into
dec
scas
ja
mov
test
fstpt
jo
cmp
jne
scas
pop
mov
fisubs
fcoms
and
outsb
pusha
enter
jo
lret
sub
imul
inc
inc
sbb
sti
xor
pop
faddp
insl
andb
repnz
ds
js
sbb
dec
inc
movsl
orl
mov
jae
adc
mov
adc
stos
inc
cmp
xchg
xor
jge
gs
dec
pop
dec
xor
lods
sub
ljmp
outsb
mov
sub
scas
or
mov
xor
jp
pop
mov
xchg
pusha
mov
inc
daa
clc
outsb
cmp
lcall
dec
repnz
cmp
xchg
stc
fxtract
mov
push
dec
clc
cmc
jp
xchg
or
pop
add
js
daa
mov
xchg
test
adc
mov
ds
fs
dec
aam
dec
dec
sbb
or
cwtl
mov
into
lret
jo
push
cmp
jle
in
je
jo
stos
mov
adc
iret
mov
mov
aad
ljmp
dec
push
daa
cmpsl
mov
pop
xchg
int
jp
jg
shrl
jno
adc
test
xchg
pop
sub
cmp
pusha
push
arpl
cmp
sub
insb
aas
dec
into
stos
push
cmpsb
sti
jmp
sahf
push
jmp
repnz
les
xor
jg
jg
dec
and
das
out
add
aaa
xchg
addl
call
test
xchg
out
and
mov
addr16
pop
sar
xchg
enter
es
popf
sbb
loop
ret
mov
add
or
insl
pop
popl
jae
xor
and
dec
xrstor
lods
pusha
lahf
mov
negl
add
inc
sbb
push
jno
addb
clc
fucomi
shr
xor
ret
sbb
int
popa
shrb
mov
jg
and
in
shrb
pop
xor
negl
mov
shll
frstor
fsubl
test
fnstcw
shlb
push
fldcw
mov
jbe
inc
lret
fcmovnbe
xchg
cmovle
lret
mov
adc
cmp
ret
jmp
addr16
or
jno
ja
sbb
sub
mov
mov
fdivp
cmpsl
jmp
shrl
push
mov
sbb
imul
stos
mov
shll
cmp
out
fmulp
mov
add
push
jns
mov
movsb
rcrb
push
pxor
inc
cmp
lcall
cld
pusha
mov
sub
popf
es
and
inc
push
insl
pop
outsb
cs
dec
les
popa
push
cmp
nop
sub
test
xchg
pop
insb
jg
mov
test
and
pusha
popa
jb
dec
lahf
hlt
aad
adc
fisttpl
mov
push
dec
pop
lea
xor
aad
inc
fs
pop
or
pop
pop
dec
sbb
mov
shll
push
xchg
pop
sbb
lods
cmp
stos
jne
xor
test
fdivrs
dec
jno
dec
bound
addr16
hlt
inc
mov
arpl
xchg
aam
addl
inc
xchg
data16
cltd
jae
mov
or
add
cmpsb
cld
cld
or
and
lods
mov
adc
sti
push
popf
popf
in
xor
xor
out
movsl
icebp
lds
xor
sub
jno
aas
arpl
ds
jbe
scas
pusha
aaa
shl
xor
stc
mov
clc
cmp
cmp
inc
subb
pop
cmc
je
lods
add
loopne
mov
mov
stc
mov
fwait
inc
lods
jge
mov
pop
mov
not
mov
add
mov
dec
out
test
cs
mov
adc
cs
in
mov
pop
adc
pop
ljmp
mov
or
adc
push
out
and
popf
lods
mov
imul
inc
lods
out
mov
fldcw
cmc
es
mov
jnp
dec
mov
fcoms
jo
pop
add
inc
icebp
aas
and
adc
or
xchg
shlb
jnp
add
mov
push
out
shlb
stc
dec
enter
cmp
outsl
mov
inc
cld
push
push
popa
out
movntps
inc
jb
fsubrp
xchg
cld
add
adc
cmpsl
insl
cmp
mov
sbb
ffree
or
xchg
cmpsb
inc
sbb
rcrl
mov
fisubrs
xchg
mov
iret
das
lcall
mov
pushf
pop
test
lcall
mov
test
mov
outsl
shl
jno
jnp
ficompl
cmpsb
aad
adc
add
mov
add
clc
jge
lret
ret
push
xor
inc
rol
insl
loopne
jle
insl
aaa
rolb
pop
inc
insl
js
mov
dec
adc
mov
imul
repnz
addr16
or
je
fstl
dec
mov
sub
pop
add
xlat
xor
cmpsb
cmp
xchg
cmpsb
ret
sar
xor
mov
jl
movsb
xchg
jecxz
je
lds
orb
or
stos
jns
inc
shrb
jl
inc
cmpb
inc
jmp
cmpsb
sub
adc
pusha
je
data16
sbb
pop
jae
enter
scas
repz
out
addb
stos
pop
mov
inc
xor
movl
jae
xchg
in
clc
test
adc
arpl
outsb
mov
xchg
daa
ljmp
push
mov
push
mov
xchg
mov
pop
insb
xchg
push
in
and
in
mov
pop
and
aas
es
jno
out
stos
mov
popf
jno
aam
jge
pop
and
das
cli
mov
adc
movsb
jbe
cmp
orl
push
fnsave
scas
mov
mov
insb
outsl
les
lcall
aaa
and
inc
push
ljmp
lcall
xlat
mov
inc
imul
dec
icebp
cld
mov
mov
jge
mov
insl
mov
add
xlat
push
xchg
jnp
inc
arpl
cli
sbb
xor
incl
pop
js
dec
lods
shrl
mov
and
inc
push
xchg
mov
shll
xchg
add
loope
stos
xchg
fisttpll
jnp
sub
popf
push
jmp
pop
dec
rorb
mov
mov
test
fcmovnu
daa
jl
sbb
jno
push
xor
mov
jp
cmp
sbb
ds
adc
inc
adc
mov
mov
lods
jmp
test
push
loopne
push
std
push
popf
push
or
dec
mov
xor
and
adc
je
inc
ficoms
cmpsb
jg
lret
adc
sar
aad
rcrl
movsl
fstl
jne
sbb
scas
xlat
dec
mov
pop
out
dec
das
scas
dec
sbb
mov
sarb
push
adc
add
add
mov
mov
sbb
or
dec
and
cwtl
repz
shl
mov
mov
shrl
xor
adc
sbb
in
xor
xchg
jg
adc
icebp
mov
inc
mov
jb
xchg
rcrb
test
shlb
mov
cmc
enter
stos
add
fucomi
xor
xchg
add
frstor
adc
add
push
xlat
arpl
ds
stos
mov
subl
repnz
and
xchg
push
addl
or
push
push
in
repz
lds
push
stos
arpl
into
les
daa
outsl
mov
clc
pop
aam
mov
push
lahf
test
sti
fcmovb
pop
pop
cmp
in
xor
and
pop
sub
cmp
adc
and
mov
jno
jle
mov
and
pop
mov
xchg
fwait
or
sbb
cs
cmp
xchg
jo
mov
int
adcb
adc
jp
jmp
leave
sub
push
fs
xchg
call
gs
pushf
xchg
lock
jo
mov
sbb
push
inc
jnp
loop
stos
lods
cmp
adc
sahf
addb
cmp
and
mov
xchg
xlat
into
and
cs
pop
dec
mov
jbe
outsl
cmp
mov
pop
sub
jmp
pop
sub
jmp
push
shll
lods
mov
sub
dec
repz
xchg
fisttpl
out
sbb
xchg
push
or
fwait
jb
xor
sbb
in
movsb
inc
roll
push
mov
push
dec
jns
sbb
sub
imul
sub
rol
pop
paddw
pushf
and
push
pop
xorb
jo
faddl
ds
in
fcoml
xor
popf
inc
or
fsubrs
or
imul
sub
and
fnsave
mov
in
imul
jle
jb
lret
mov
dec
dec
mov
xchg
dec
mov
pop
mov
lahf
mov
sub
cmp
shll
or
sbb
adc
cli
pop
sub
cwtl
cmp
insl
dec
fwait
ja
sbb
xor
cmp
sahf
in
push
push
out
sub
aaa
xchg
ljmp
cmp
push
and
stc
jnp
add
inc
mov
lods
mov
ja
mov
xorl
sarl
push
inc
pushl
out
or
int
icebp
sarb
fmull
ss
fbld
mov
stos
ljmp
cltd
mov
xor
push
cmc
stc
and
js
arpl
mov
xorl
imul
xchg
cmp
mov
in
adc
rcr
jne
pop
mov
stos
xchg
stc
xchg
rcll
popa
mov
dec
add
xor
jge
jmp
fnstcw
rcrl
pminub
pop
pop
mov
add
mov
mov
leave
mov
ret
mov
sbb
dec
mov
cmp
sbb
pushw
mov
push
and
outsb
das
jae
movsl
scas
and
repz
sbb
test
cmp
aad
jle
mov
in
inc
mov
mov
arpl
jnp
inc
nop
adc
aaa
out
inc
cld
and
push
add
es
fwait
ret
jg
push
add
sbb
mov
addr16
sbb
ljmp
loopne
mov
xor
and
xchg
mov
xchg
inc
and
add
ljmp
shr
rcrb
xchg
out
mov
out
mov
mov
dec
dec
icebp
mov
dec
ss
push
jbe
andl
std
xchg
je
int
lcall
or
into
mov
or
cmpsb
divb
hlt
jp
jl
das
xchg
testl
imul
sub
rcll
call
jl
dec
pop
push
out
pop
or
aam
mov
jne
push
mov
mov
and
stc
outsb
hlt
xor
lret
mov
jl
pop
xor
scas
fstps
pop
pusha
dec
mov
sti
and
jge
arpl
and
lds
and
rcrl
sarb
rcrl
pop
push
test
adc
outsl
das
push
orl
sub
pushf
testb
popf
mov
xchg
pop
test
xchg
repnz
push
shrb
iret
add
cmp
rcrl
cmp
ret
adc
dec
repz
shlb
shll
addr16
mov
adc
aaa
xchg
adc
jo
loopne
rorl
aad
ret
movsb
push
mov
aas
adc
jns
xor
xchg
ud2
nop
jmp
hlt
nop
adc
shrb
sbb
inc
mov
and
pop
arpl
ljmp
scas
leave
call
nop
xlat
and
sbb
xchg
jp
jb
jecxz
sub
lret
pop
int3
mov
adc
or
sbb
xor
push
pushf
add
in
push
push
push
pop
mov
icebp
adc
xchg
scas
mov
sbb
int
or
outsl
dec
adc
outsb
fldt
sbb
shrb
aam
or
stc
mov
add
cmp
dec
iret
xchg
shll
sbb
je
cmp
mov
insl
sub
dec
in
or
mov
arpl
fdiv
and
push
push
lods
mov
jbe
add
mov
lret
mov
sub
mov
shr
inc
dec
and
fsts
add
lea
xlat
lcall
fldt
addr16
sbb
pop
xor
shlb
pop
or
adc
repz
mov
inc
adc
popa
pop
add
inc
mov
fcomip
out
aas
ret
ljmp
stc
or
out
mov
negl
sbb
das
jge
push
push
int3
int
inc
int3
jge
imul
cltd
ret
adcb
dec
add
jmp
out
or
add
sub
xor
mov
sub
out
stc
sbb
data16
lods
lret
dec
cmp
pop
sbb
or
xor
rcrb
sbb
xor
into
and
ljmp
mov
aad
fdivrs
into
stc
shll
aad
jp
popf
dec
pop
mov
dec
popf
inc
dec
adc
push
in
and
out
pop
addb
add
scas
out
push
popa
xchg
rcrb
add
dec
dec
outsb
mov
outsb
dec
add
stos
repnz
nop
inc
jne
push
lahf
cld
jg
mov
and
pop
inc
add
je
push
leave
sbb
ljmp
inc
xchg
and
jae,pt
ret
test
es
jg
dec
scas
lret
rorl
jnp
or
in
cmpl
data16
outsl
add
jne
nop
sarl
fwait
jmp
inc
mov
out
fsts
add
pop
fmull
jmp
into
xchg
mov
push
mov
mov
mov
mov
int3
adc
adc
add
adc
sar
lds
sti
fadds
xchg
pop
cmp
mov
sahf
jnp
aam
xchg
jbe
leave
test
inc
xchg
xor
cs
xlat
in
stc
repz
inc
aad
xlat
ss
cmc
std
stos
jne
lods
je
mov
insb
or
call
push
jp
negl
inc
insl
mov
push
ja
pop
jg
pop
fwait
arpl
jmp
stos
jecxz
lods
push
inc
les
cmp
lods
in
pop
enter
arpl
fstl
bound
stc
pop
mov
dec
sbb
mov
movsl
pop
scas
out
sub
fwait
gs
push
icebp
xor
mov
sbbl
loopne
cmc
fidivrl
test
movsl
mov
pop
add
pop
aam
bound
and
cmp
pop
addr16
add
roll
adc
fstl
data16
int3
mov
mov
decb
sub
lods
fsubrp
adc
and
orl
inc
icebp
fidivs
add
cmc
add
add
xor
jns
dec
in
fcmovnu
orl
adc
sbb
scas
mov
hlt
mov
pop
insb
testb
inc
sahf
popa
xor
push
xor
mov
std
shll
aaa
in
repz
in
xchg
xor
xchg
and
jmp
add
and
mov
arpl
cmpsb
or
xor
hlt
test
out
cmp
subl
sbb
xor
dec
xchg
and
test
xor
popa
mov
mov
pop
or
imull
lret
jmp
fsubrs
cltd
dec
mov
shl
fcoml
xchg
fldl
pushf
inc
sub
shll
out
xor
sbb
jp
scas
enter
orl
xchg
cmpsb
ret
push
test
daa
xor
aam
sahf
in
mov
xlat
inc
mov
push
cmp
dec
jge,pn
mov
xchg
std
mov
push
rclb
xchg
cmp
ds
int3
jae
insl
jns
mov
sbb
das
adc
dec
xchg
repnz
hlt
popf
lahf
ss
xchg
adc
aaa
ret
xchg
mov
clc
frstor
lret
jecxz
stos
mov
and
es
cli
aas
lret
lcall
in
and
xchg
push
fistps
xchg
mov
in
arpl
les
mov
pop
in
mov
xchg
mov
jg
cmp
cmp
jbe
in
aam
out
mov
out
xchg
aaa
xchg
test
add
or
xchg
adc
add
ds
fwait
cmp
dec
add
out
jno
sbb
adc
sbb
add
sub
lds
sbb
int3
cmp
popf
xlat
pop
js
fldt
sbb
cmpb
add
out
fidivs
pop
nop
fstpt
lods
xlat
adc
popa
cs
adc
test
es
sub
add
inc
pushf
dec
sti
stos
ja
sbb
shr
lods
fnstsw
fucom
sti
pop
inc
js
jmp
decb
adc
add
push
jge
ljmp
xor
mov
lea
pop
adc
call
and
sarl
mov
push
es
cli
xor
ret
loope
sub
aad
pop
add
ds
sti
sub
inc
or
cmp
push
xor
adcl
pusha
push
jp
lret
inc
add
lret
sub
outsb
in
xchg
lds
in
aaa
in
xor
cmp
mov
aas
pop
jne
xchg
inc
dec
mov
dec
cwtl
xor
inc
mov
push
outsb
test
xchg
lret
mov
cmp
mov
std
add
mov
lods
xor
repnz
push
dec
inc
inc
xchg
jmp
cld
xchg
jp
test
test
subb
jb
or
xchg
jae
push
cmpsl
repz
or
pop
adc
mov
and
push
inc
ffreep
xchg
out
lds
adc
jb
mov
into
rcl
hlt
mov
dec
xor
push
leave
test
xchg
sub
sub
dec
fisubrl
jb
call
scas
sti
fldt
fsubl
add
or
pop
iret
sbb
lods
fisttps
mov
mov
mov
push
cmp
sub
push
shlb
and
ja
cmp
mov
ds
mov
push
and
mov
stc
pop
jge
cmpsb
mov
adc
and
fcomps
test
idivl
out
out
push
in
inc
xchg
sbb
ret
hlt
pop
pop
push
popa
pusha
push
xor
es
iret
in
out
jmp
cmpb
fidivrs
push
mov
loopne
dec
std
shl
das
ficomps
shlb
mov
mov
notb
imul
repz
dec
les
cmp
shll
fsubrp
sahf
outsb
or
inc
xor
aam
mov
xchg
fnstsw
xchg
xchg
xchg
clc
adc
movsb
pop
push
push
xchg
stc
cltd
cld
jg
repnz
mov
testl
aad
cltd
pop
xchg
sti
pop
push
sahf
lds
mov
xor
pop
cltd
mov
jns
in
xor
jbe
ds
push
push
sbbb
lahf
popf
lds
mov
sub
adc
addr16
mov
adc
aas
aas
pop
inc
push
pushf
xchg
xlat
jl
rorl
insl
pop
pop
sti
mov
adc
push
and
insb
imul
and
cmpsl
dec
int
or
push
sbb
cmpsl
fbstp
lret
imul
lahf
push
imul
cmp
int3
out
in
pop
testl
sbb
push
and
cmpsl
xchg
adc
addr16
and
push
dec
lea
lods
out
js
cmp
xorl
sbb
sbb
sub
std
subb
icebp
lret
mov
flds
mov
loop
push
jae
sbbl
pop
mov
mov
ret
addl
jnp
or
jae
or
ficomps
jle
hlt
sbb
mov
pop
orl
and
cmp
sub
stos
ss
sbb
jmp
lret
mov
pop
enter
ja
adc
enter
jb
mov
fmuls
push
mov
outsb
mov
push
fmull
loop
fcompl
xchg
pop
sahf
pop
inc
pop
push
jae
dec
push
inc
dec
shll
xlat
pop
pushf
inc
add
mov
jp
inc
fiaddl
adc
stos
cwtl
rolb
shr
in
sbb
add
xor
dec
out
push
inc
or
mov
dec
jnp
lock
xor
in
lods
xchg
adc
scas
test
fwait
cmp
aas
add
outsl
scas
sbb
mov
dec
push
bound
sbbl
xor
xor
setnp
int3
xor
cmp
add
jl
arpl
divb
lods
mov
adc
mov
movsl
pop
cld
fwait
lahf
add
loop
ror
clc
inc
jno
icebp
xchg
xchg
mov
cmp
push
popa
rol
ss
sbb
adc
test
push
push
inc
jmp
and
stos
ljmp
ret
inc
sbb
xor
inc
out
pop
std
jae
or
in
push
out
call
jne
mov
repnz
ficompl
pushl
int3
push
hlt
cs
aam
psadbw
xor
sbbb
sbb
push
outsb
out
sub
std
mulb
daa
jne
divl
cmp
push
inc
int3
inc
sbb
fs
leave
add
paddusw
jp
shll
push
jo
add
lods
loopne
fwait
ja
jns
lods
add
dec
test
xchg
pop
sti
xor
insb
ja
fmull
lock
pop
jp
pop
sub
add
pop
nop
lcall
sub
xlat
jne
mov
add
or
pushf
rcr
jns
mov
je
cmp
ret
jae
outsl
imul
pop
push
fwait
xchg
jecxz
fidivrl
mov
mov
inc
sbb
cmp
bnd
cltd
mulb
fisttpl
pop
or
and
cs
xor
cmp
aad
inc
outsb
cmp
and
mov
pop
and
cmp
call
cwtl
cld
outsb
lds
icebp
lret
notb
adc
mov
nop
xor
mov
pop
psubb
icebp
mov
pop
ret
inc
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
xchg
mov
xchg
cld
popa
bound
bound
xchg
ret
cmpb
lea
out
cmpsl
pop
lods
insb
jle
bound
icebp
xchg
fildl
mov
dec
xor
mov
mulb
and
popa
xchg
bound
imul
mov
outsl
cmp
sub
pop
ret
and
pop
mov
divl
mov
adc
jp
cmp
leave
pop
sbb
sarb
dec
ds
loop
das
loop
adc
pop
jnp
jo
nop
pop
or
adc
adc
mov
mov
and
mov
das
nop
les
shll
test
push
adc
and
aam
xor
stos
jge
sbb
sub
lds
test
addl
sub
jne
jmp
imul
pop
outsl
pop
inc
add
mov
adc
inc
sub
sbb
test
adc
adc
arpl
mov
push
jmp
ljmp
mov
pop
dec
das
add
sbb
rclb
sahf
mov
cmp
or
mov
test
adc
mov
into
cmp
jbe
std
adc
inc
mov
jl
cmp
push
and
out
xchg
pop
jmp
pop
scas
ror
int3
dec
jecxz
icebp
xchg
xor
xchg
or
dec
or
adc
arpl
into
in
add
imul
cmp
mov
xchg
js
jmp
adc
xchg
jmp
ds
es
out
test
sub
pop
sub
xorb
add
sbb
pop
pop
aaa
shrl
in
loope
sub
add
dec
pop
data16
shl
cmp
dec
sbb
pop
dec
mov
or
inc
push
scas
movsb
shr
xchg
hlt
sbb
je
iret
out
sub
dec
fsubrs
sub
cli
jo
and
fisubs
and
add
out
inc
sub
inc
fdivs
outsb
add
sub
ja
jne
ds
ret
inc
push
cmp
push
gs
outsl
xchg
popa
xchg
lret
dec
aam
mov
lock
loope
mov
push
das
arpl
mov
ret
pop
ret
adc
sub
data16
rolb
or
repz
jns
sbb
int
xchg
cmp
and
mov
mov
fsubs
jno
ret
adc
mov
cmp
mov
add
stc
add
adc
add
sub
lret
sahf
lret
outsb
dec
in
sahf
lea
mov
or
xchg
es
or
mov
and
cmpsb
into
loop
add
cmp
jecxz
and
divb
frstor
mov
xor
notb
sbb
incb
or
push
lret
dec
orb
call
mov
fwait
adc
dec
popa
flds
sub
and
xor
or
cmpb
pop
and
shll
popf
fisttps
xchg
js
mov
bound
test
push
add
jecxz
mov
xchg
imul
cmp
dec
das
add
sahf
mov
pop
cmp
inc
pushf
popa
xor
or
iret
lods
iret
xchg
rcrb
jg
mov
mov
add
cmp
sbb
mov
jne
mov
xor
adc
mov
test
les
ss
xchg
in
adc
xor
call
stc
sbb
andb
scas
std
data16
mov
cmp
jge
nop
add
cmp
pop
sub
add
add
xchg
sbb
push
out
sarl
aaa
shll
and
out
loopne
repnz
mov
sahf
adc
lret
xchg
cwtl
sbb
cs
scas
data16
loopne
scas
mov
mov
gs
sbb
push
push
mov
insl
int3
call
das
out
fidivrl
adc
pop
xchg
hlt
adc
jle
scas
and
arpl
test
jle
mov
push
std
push
cmpsb
fists
les
jb
loop
cmp
sahf
adc
outsb
out
jle
adc
adc
xor
pusha
xlat
mov
decl
mov
add
ja
push
pop
and
jno
add
mov
jl
das
sbb
js
sahf
lods
and
mov
fdivrl
dec
xor
sti
addb
lret
fisubl
in
cmpsb
and
add
lds
or
cmp
rorb
out
les
xchg
ret
and
outsl
inc
jmp
test
mov
in
jmp
fsubrs
mov
xchg
push
loopne
fbld
ja
popf
xchg
test
jg
dec
xchg
sub
and
ret
push
cmp
mov
in
pop
dec
sbb
or
loop
xlat
pop
mul
mov
out
mov
jne
jb
sbb
mov
dec
push
nop
jns
rorl
and
add
les
into
icebp
cmp
ret
and
out
out
lods
outsl
dec
push
add
or
and
mov
and
mov
loopne
mov
gs
cmc
push
pop
mov
mov
stc
or
bound
add
xchg
rol
xor
popf
adc
mov
mov
xchg
ss
mov
push
add
dec
sub
fsubrl
into
hlt
mov
mov
pop
mov
test
out
inc
lcall
add
push
pop
adc
lock
adc
or
arpl
and
popa
in
sbb
or
xor
in
adc
bound
pop
xlat
jae
mull
loopne
sub
mov
xchg
lahf
dec
mov
insb
sub
mov
loop
repnz
dec
sub
add
inc
dec
inc
shll
adc
pop
and
add
sub
adc
and
mov
mov
mov
cwtl
shrl
fdivrp
jns
loop
sarl
incb
xlat
es
jo
pop
loope
shl
test
xchg
cmp
sbb
inc
cli
fimull
lret
mov
cmpsl
dec
test
adc
leave
les
popa
insb
pop
cwtl
outsb
repnz
push
sub
jg
cmp
movb
lahf
push
mov
jae
cmp
cmp
mov
mov
in
pop
nop
sbb
fisubl
cltd
sub
adc
mov
mov
sahf
sti
mov
outsb
push
lock
jecxz
out
adc
jae
pop
int
mov
cmpsl
jle
mov
pop
outsl
arpl
scas
xchg
mov
or
pushf
xchg
mov
cmc
xchg
in
divb
loop
cwtl
and
cmpl
dec
mov
add
divl
arpl
jle
jno
adc
or
setbe
imulb
lock
add
nop
and
adc
sub
cmp
adc
sbb
mov
and
fxtract
out
imul
push
push
or
adc
adc
testb
jo
jle
add
cld
fimull
jbe
or
sub
ja
inc
pop
push
jge
mov
lret
arpl
jecxz
je
jle
lcall
xchg
mov
adc
es
jmp
test
mov
sbb
push
dec
mov
sbb
scas
inc
movsl
aad
roll
sbb
xchg
adcb
das
into
dec
xchg
gs
jns
jecxz
mov
adc
push
test
sbb
jbe
ret
xchg
and
jo
fsub
testl
add
sbbl
into
int
loope
test
mov
push
and
jbe
inc
xchg
in
lds
shl
inc
addr16
mov
clc
fwait
lea
je
inc
push
jns
xchg
jns
push
sbb
pop
mov
mov
stos
add
in
and
dec
clc
ss
adc
pop
movsb
xchg
and
jecxz
push
call
test
jge
daa
lds
cmp
lcall
inc
mov
sarl
js
lock
aad
andb
hlt
push
outsb
repz
add
lcall
cs
jmp
mov
push
push
xchg
hlt
jle
dec
fidivrs
push
sub
cs
cmc
hlt
insb
xchg
mov
dec
flds
mov
lahf
in
negl
clc
or
fldt
jl
jbe
jae
and
lods
xchg
mov
repnz
jo
add
jo
insb
notl
pusha
cmpsb
popf
mov
push
fnstenv
add
lret
lret
push
xchg
pushf
xchg
imul
sub
cs
sub
xor
mov
cmpsb
mov
aaa
xor
cwtl
ss
fbld
stos
shlb
imul
unpcklps
hlt
je
pop
inc
pop
mov
jge
fstl
rcr
popa
insl
adc
jnp
dec
icebp
movsb
sub
mov
imul
lret
cli
outsl
leave
fisttpll
rep
mov
dec
mov
lock
outsb
add
scas
je
cmc
stos
and
push
outsb
es
shl
dec
lret
imul
sub
push
ret
adc
mov
jmp
outsb
push
outsl
ret
popf
pop
nop
test
and
add
icebp
xor
loop
jb
sti
daa
call
test
mov
outsb
leave
xor
and
pop
bound
xchg
mov
lret
xchg
sub
xor
setnp
mov
popw
leave
insb
jecxz
sbb
std
jnp
xchg
popf
cs
push
enter
fcoml
xchg
push
cmc
xchg
or
or
mov
enter
pusha
xchg
cmpsb
aaa
xor
ret
mov
sbbl
xchg
rol
mov
fdivr
cwtl
push
cli
add
pop
push
sub
cmpl
in
cmp
fldcw
lods
cmpsl
aas
xchg
cmp
push
das
dec
mov
push
xchg
rolb
mov
jns
lret
push
rcll
jle
push
cli
les
ret
cmp
das
testb
cmp
push
mov
cmpsb
test
je
mov
outsb
and
cmp
mov
enter
xlat
mov
ss
testb
xchg
adc
and
loope
cmp
push
pop
sbbl
mov
loopne
rorl
cmp
rolb
pushw
orl
daa
je
sub
loopne
and
xor
ret
aaa
pop
inc
inc
call
fiadds
inc
cltd
lods
je
shrl
mov
xlat
xchg
pop
sub
jmp
pop
lret
xchg
movsl
popf
or
divl
loop
fwait
or
fwait
jmp
leave
das
pop
mov
rorl
jle
add
popa
jmp
imul
dec
xor
arpl
sub
arpl
pop
jb
rcll
push
incb
cs
loopne
stos
sub
pusha
pop
mov
dec
inc
mov
fsubr
inc
xor
cmpl
xor
mov
xchg
jge
in
outsb
push
outsb
mov
rcrb
mov
fmulp
mov
cmp
adc
js
mov
lret
mov
in
cld
pop
xor
loope
arpl
popa
and
sarb
mov
ret
inc
insl
outsl
outsl
inc
repz
mov
ljmp
sbbl
adc
cwtl
add
adc
and
leave
aas
out
aad
out
mov
fcoml
mov
aad
pop
das
stos
mov
sbb
mov
cmp
in
js
xor
leave
insb
js
or
in
mov
lds
popa
inc
rolb
dec
xchg
inc
sub
into
imul
mov
or
sbb
sti
push
outsb
xchg
sbb
fisttps
adc
insl
repz
push
sahf
push
dec
cmpsb
imul
outsb
shlb
push
cltd
rorb
mov
movsb
in
pop
test
sbb
mov
sbb
xor
loopne
or
mov
fwait
stc
mov
clc
es
jne
ret
hlt
outsb
xchg
test
rcrl
loop
mov
cmp
dec
filds
call
bound
outsl
push
lods
jg
dec
or
cwtl
adc
addl
mov
mov
jl
adc
jp
sub
daa
cmova
adc
sub
and
jge
jbe
add
push
rcrb
loope
push
inc
push
sahf
and
imul
popa
mov
out
cmp
cli
scas
mov
sub
mov
nop
idivl
imul
add
fmull
cmp
mov
fisubrl
dec
movsl
adc
and
scas
in
in
mov
push
sub
iret
dec
or
aad
jge
inc
int3
imul
or
mov
cmp
xchg
shrb
bound
lret
push
xchg
jbe
cwtl
out
jmp
les
icebp
lcall
imul
int3
jbe
xor
arpl
add
inc
xor
xor
dec
addb
imul
sub
shlb
adc
jnp
stos
push
ret
aad
jl
ss
sbb
fisubrs
cmp
jge
sbbl
dec
sub
cmc
xor
aaa
js
push
xor
sub
nop
cmp
ror
outsb
mov
mov
loop
mov
and
mov
xor
fadds
stos
pop
cwtl
decb
mov
stos
xorb
fisubrl
add
push
cmp
shlb
push
insb
or
rcll
stc
and
cmp
adc
xor
xchg
or
stc
inc
fdiv
add
jl
xor
fnstcw
ss
dec
mov
jno
cmp
xchg
lock
les
imul
or
arpl
out
iret
add
int
push
cmc
push
adc
pop
notl
pop
xchg
pop
divb
fs
call
fidivs
mov
insl
jbe
imul
sarl
fnstenv
sub
dec
sbb
dec
das
xor
out
and
pushf
push
enter
aas
sub
cmc
pop
lret
faddl
inc
jo
jb
xor
in
adc
fsqrt
addr16
or
sbb
int
jecxz
mov
aam
icebp
sbb
add
cmp
lret
hlt
sub
dec
dec
push
sahf
mov
mov
andb
dec
xchg
popf
cmp
or
or
mov
or
dec
sub
int
int3
insl
aam
std
jl
sbb
mov
fsubs
out
dec
pop
fisubl
mov
and
rorl
mov
loopne
push
or
icebp
sahf
bound
pop
insl
out
or
xorb
jo
les
push
pop
jecxz
iret
fisttps
jecxz
jnp
imul
popa
fstl
stos
add
mov
sbb
sbb
xor
out
fcmovbe
jecxz
sti
cwtl
mov
subl
jb
movsb
testl
subb
mov
stos
lock
lock
and
inc
pop
jg
and
lahf
scas
push
stos
pop
lcall
lea
test
xor
loop
mov
pop
xor
in
icebp
aam
or
ror
xchg
add
pop
ficoml
cmpb
loopne
ss
fcoms
mov
mov
data16
pop
sbb
push
sbb
or
add
jge
pmulhuw
fcomps
mov
sbbl
mov
push
loopne
sub
pop
rcl
xchg
xchg
jbe
sub
aam
pushf
int
mov
add
aas
iret
cmp
jne
iret
imul
scas
xchg
inc
sbb
jo
sub
pushl
cmp
fnsave
clc
sub
das
sub
push
ss
jmp
ja
dec
jbe
lock
jmp
dec
xchg
dec
imulb
aaa
cmpl
pusha
jns
fstpl
fisubrs
test
or
xor
stc
dec
xchg
xchg
nop
jae
jmp
mov
and
push
test
clc
mov
lods
ja
push
lret
loope
xchg
popa
xor
xor
repnz
ret
mov
mov
js
in
scas
dec
sbb
and
or
aam
xor
xor
fldcw
inc
lock
xchg
ljmp
add
orl
fcomi
fcmove
test
xchg
aad
mov
lods
popa
outsl
pop
loope
pop
cmp
mov
rcl
push
iret
push
lcall
push
nop
mov
in
mov
mov
fldenv
daa
cmp
leave
pop
and
rcll
xchg
aas
mov
mov
mov
jb
xlat
sbb
xor
scas
outsl
int
repnz
ja
jnp
insl
orb
je
jo
lock
xchg
dec
mov
test
cmp
jo
adc
movsl
adc
inc
int
and
pop
jp
xor
mov
lds
jge
rcrl
je
xchg
mov
test
mov
cmp
mov
mov
mov
push
shrl
inc
rcl
push
and
rorl
dec
pop
data16
int3
dec
mov
adc
xchg
leave
inc
jg
leave
adc
popa
subb
imul
ss
out
mov
add
lea
mov
adc
int
xchg
lds
dec
adc
ljmp
sub
les
mov
movsl
inc
adc
aas
icebp
sarl
into
addr16
mov
je
rorl
and
call
mov
mov
push
ret
pop
mov
out
mov
add
insl
repz
lahf
mov
jle
cmpsl
dec
mov
rcrb
mov
mov
hlt
test
clc
push
outsl
jnp
cmp
repnz
jl
lea
in
mov
test
or
mov
inc
add
les
xchg
and
rolb
adc
jecxz
or
ss
push
mov
mov
xor
push
dec
push
push
mov
addr16
cmp
fsubl
mov
nop
fs
mov
imul
xor
jae
mov
rcrb
mov
shlb
pop
mov
pusha
jno
jecxz
sbb
mov
lds
or
pop
dec
add
rorb
fwait
jecxz
ss
dec
js
xor
rorl
and
cmp
or
fstpl
gs
dec
add
mov
inc
sub
or
jno
push
enter
mov
out
icebp
xor
shl
pop
aad
imul
in
pop
out
and
cmp
push
shlb
sti
out
iret
call
ds
mov
into
pop
jno
add
xchg
push
cmp
stos
fistps
out
xlat
adc
xchg
es
push
sbb
add
lock
out
subb
out
popl
cs
xchg
popw
inc
pusha
scas
iret
test
pop
inc
sub
mov
dec
jp
cli
bound
shrb
stc
out
sub
push
pop
stc
push
xor
push
incb
shrl
outsb
cltd
or
fwait
lods
aam
cltd
movsl
push
ljmp
and
dec
jno
push
pop
je
mov
aam
xchg
dec
push
mov
lock
aam
mov
rcrb
pop
scas
push
cmp
mov
add
ret
ljmp
xchg
add
jno
rolb
fs
pusha
call
mov
adc
and
mov
adc
and
movsb
lds
xchg
test
ss
fistl
dec
jecxz
sub
jecxz
dec
cmp
dec
negb
out
mov
push
add
mov
sbb
mov
aam
add
inc
xor
sbb
or
adc
repnz
hlt
add
jecxz
mov
inc
dec
movsl
dec
jae
data16
je
xchg
dec
arpl
xor
rorb
xchg
adc
outsb
cltd
mov
push
bound
mov
inc
std
out
jl
inc
mull
aad
fidivrl
ficoms
dec
xchg
test
popf
dec
iret
jo
xor
ficoms
cmc
or
sti
mov
fadds
les
pop
testb
lret
stos
cmp
fcmovnu
movsb
push
inc
inc
mov
xor
leave
push
outsb
cmp
shrl
fimull
xchg
lret
lock
and
add
outsb
fisttpll
push
xor
ja
adc
je
adc
shlb
out
push
pop
ja
mov
inc
jae
jl
fs
pop
and
push
pop
in
loopne
in
jnp
leave
inc
addb
inc
adc
push
mov
or
mov
adc
jg
std
mov
stos
jmp
inc
sbb
push
dec
mov
fcoml
jbe
cwtl
xor
fcmove
insl
stc
les
or
out
fstps
adc
sub
pop
lret
push
gs
dec
dec
not
shrb
xor
jno
or
daa
lret
adc
test
das
repz
subb
dec
les
xchg
or
xor
and
cmpb
lock
sbb
pop
xchg
dec
pop
mov
mov
jb
sti
pop
add
in
cmp
dec
daa
and
es
mov
call
dec
rcrl
ljmp
cmp
sub
hlt
iret
pop
mov
mov
mov
rcrl
mov
out
stc
fildl
mov
and
cmpsl
fildll
imul
mov
repnz
sti
adc
jge
inc
mov
push
cmpsb
cld
dec
add
jne
enter
mov
jno
rcrl
pop
xchg
fstps
xor
or
icebp
aaa
cmp
mov
int
rcll
mov
lds
inc
sbb
jne
aas
in
inc
inc
lea
jl
mov
dec
mov
xchg
fbld
sub
dec
or
out
mov
adc
jle
mov
inc
fldt
repz
sbb
push
loope
test
or
lock
mov
fldcw
sti
in
popa
test
mov
mov
mov
ja
shlb
or
mov
das
xchg
icebp
mov
dec
push
repz
xor
sub
cmp
mov
ds
lds
pop
out
lret
outsb
push
add
mov
rcl
or
sti
xlat
xchg
inc
inc
aad
je
and
out
rorl
or
inc
scas
inc
adc
sub
notb
sbb
bound
cmp
cmpl
jmp
in
and
cmpsb
jg
rorb
xor
xor
xor
sti
jae
push
mov
inc
adc
test
cmp
dec
xor
or
fcmovbe
xchg
push
mov
lea
mov
test
jne
sbb
inc
aad
sbb
add
mov
aam
nop
out
aas
test
xchg
mov
cmpsl
pop
sbb
push
fimull
or
sahf
pop
jns
repz
cmpsb
aaa
sub
sub
leave
mov
push
and
add
cmp
notb
popf
pop
sbb
mov
cmp
mov
push
sbb
mov
aad
xchg
push
mov
pop
frstor
ficomps
loope
pusha
push
push
xchg
xchg
hlt
fdivrs
ret
xchg
cs
je,pt
sub
adc
cmp
add
pop
mov
rcl
mov
push
cmc
pop
xlat
xchg
mov
lahf
and
cwtl
lods
adc
std
ja
jbe
mov
jmp
pusha
movsb
sbb
inc
mov
ror
in
mov
push
or
divl
mov
mov
xchg
hlt
dec
and
test
mov
xor
mov
cli
ja
mov
leave
pop
cmpsb
fcoms
xor
jmp
movsl
enter
bound
adc
adc
les
adc
movsb
pop
xchg
pop
pushw
xchg
push
jo
subb
jl
es
js
xchg
scas
dec
push
jge
xor
test
jne
mov
push
aam
jecxz
popa
out
addl
enter
add
pushf
repnz
lahf
push
ljmp
mov
dec
pop
imul
xor
sub
and
jno
jbe
mov
ds
into
jns
mov
subb
push
and
arpl
and
jp
mov
xor
sbb
adc
mov
xchg
mov
cmp
and
mov
jg
ret
xchg
cli
adc
dec
testl
and
adc
sub
dec
pop
sub
and
imul
test
fucom
inc
add
sbb
and
pop
add
adc
fcmovbe
mov
std
adc
lods
cmpsb
mov
dec
adc
imul
cmp
clc
jg
ret
pop
gs
leave
into
push
cmc
cmp
repz
xor
lret
mov
out
mov
pop
repnz
std
dec
cmc
cmpsb
pop
xor
movsb
loop
out
inc
fsub
in
dec
mov
movsl
push
sub
mov
xchg
sahf
shrl
and
mov
out
lret
aad
test
push
xchg
rorl
lcall
add
pop
sub
js
pop
xor
xchg
and
es
stos
gs
shlb
das
xor
movsb
lea
in
sbb
mov
mov
lea
fxch
mul
cmp
ljmp
adc
adc
mov
push
cmp
int3
xchg
inc
pop
and
adc
test
ja,pn
adc
test
insl
mov
cmp
xor
mov
scas
xor
pusha
or
loopne
jbe
add
fwait
insl
xor
dec
leave
mov
mov
jno
enter
dec
adc
stos
pop
push
ja
pop
push
adc
xor
xchg
out
fmul
push
fsubs
lahf
add
dec
hlt
inc
mov
movsl
push
lret
stos
call
iret
ss
rcrb
xor
inc
inc
dec
sahf
nopl
jns
pop
and
jmp
lcall
mov
inc
xor
jae
test
rolb
inc
push
pop
lret
inc
nop
shl
aas
inc
test
add
mov
mov
dec
out
in
sbb
sbb
hlt
sub
mov
stos
jae
lret
cli
aam
inc
xchg
sbb
mov
xor
and
enter
movzwl
sub
lahf
add
add
lods
xor
sahf
pushf
mov
mov
adcl
jo
lcall
cmpsl
mov
push
bnd
popf
and
lret
imul
subb
mov
adc
sbb
jno
test
iret
insl
ret
and
sub
xor
icebp
addr16
sbb
das
inc
pop
inc
call
sbb
int
xchg
push
jl
dec
sbb
or
movsl
and
mov
out
jecxz
xchg
jae
add
mov
and
shll
cmpl
ret
leave
xor
or
inc
or
xchg
push
sti
repnz
push
mov
xchg
jmp
je
insb
movsl
mov
sub
cltd
or
inc
jae
mov
rcrl
add
push
fs
cmp
xor
and
movhps
movsb
mov
xor
cmp
adc
rcrl
scas
push
jne
nop
inc
scas
adc
jne
or
push
test
and
cmpsl
aad
loopne
incb
icebp
mov
adc
rcrb
in
push
xchg
scas
adc
hlt
hlt
mov
xchg
aad
in
ret
cmp
xor
in
cld
mov
test
iret
push
jge
inc
in
sub
xchg
pop
mov
cli
inc
ds
pushf
or
imul
jb
pop
inc
mov
sbb
adc
je
sbb
push
pushf
sti
repnz
dec
adc
je
sbb
lahf
testb
add
push
mov
cwtl
mov
dec
add
sbb
push
push
cmpb
das
fs
sbb
ds
push
mov
sub
push
cmp
insl
mov
xchg
in
les
push
xor
sub
fucom
insb
push
inc
inc
pop
std
add
insl
mov
sub
push
mov
enter
sti
sti
push
mov
repnz
scas
xlat
fcomps
mov
mov
pop
ret
push
cmp
popa
mov
mov
pusha
jbe
gs
sbb
pop
and
lcall
add
faddl
int
jg
enter
cmp
adc
lds
js
push
pusha
setle
mov
ds
adc
aas
dec
jne
xchg
in
or
andb
jb,pt
mov
adc
cmp
dec
or
lods
test
push
mov
mull
or
sbb
lea
daa
stc
sbb
addr16
sahf
std
mov
sbb
scas
mov
mov
and
lahf
pop
lahf
or
hlt
fsts
jle
mov
cltd
fildl
out
jecxz
mov
test
inc
xchg
xchg
gs
stc
fidivrl
aad
popa
in
in
adc
mov
scas
mov
hlt
jmp
push
cs
jl
mov
cli
and
dec
or
stos
mov
mov
repnz
lods
mov
pop
mov
test
cli
repnz
and
xchg
cmp
sbb
in
mov
mov
pushl
popf
mov
sub
gs
cld
xor
jb
adc
jbe
fldt
dec
dec
jge
in
cmp
fwait
mov
cvtdq2ps
xchg
les
ljmp
pop
pop
sbb
pop
cmp
adc
xchg
shl
aam
jle
cmp
mov
inc
pop
pop
add
shlb
cli
xorb
outsb
push
test
pop
dec
sbb
fisubrl
pushf
popa
pop
pop
sub
js
cli
addb
fwait
daa
cld
mov
jg
pusha
clc
push
jl
repz
xchg
mov
pop
cltd
pusha
gs
mov
repz
roll
fs
int3
xor
les
and
mov
loopne
dec
out
jge
bound
cld
or
xchg
push
dec
in
xor
and
sub
adc
clc
mov
mov
int3
push
fdivs
inc
xchg
dec
mov
clc
xchg
cli
add
lds
call
mov
divb
cvtps2pd
cs
push
sbb
aam
faddl
jae
push
xchg
xchg
jg
fwait
jecxz
mul
jmp
push
xchg
fsubs
pop
and
sti
sub
mov
mov
stc
nop
jecxz
loope
std
or
outsb
nop
arpl
cmpsb
inc
jno
and
cmpsl
sahf
xchg
test
inc
push
leave
lret
ret
dec
or
inc
cmove
cmp
or
adc
dec
lods
fwait
stc
push
sub
ret
and
pusha
insl
pushf
shlb
dec
out
orl
filds
adc
enter
std
inc
jp
daa
sbb
in
push
mov
xor
xchg
ja
mov
pop
ficoml
push
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
cmpl
cmp
bound
push
add
jns
fldenv
sar
add
cmc
lock
pop
xor
jbe
test
scas
mov
xchg
cli
push
lcall
lods
xlat
enter
push
jecxz
ret
rorl
inc
icebp
mov
and
dec
jnp
adcl
and
sbb
scas
js
loope
xchg
lcall
es
repnz
mov
jmp
or
pop
sbb
mov
dec
mov
outsb
popa
sbb
inc
in
mov
push
mov
int
out
aad
cmpsb
addr16
nop
mov
jae
mov
pop
movsl
push
cmpsb
jno
popa
shlb
dec
test
fsubrl
mov
testb
cwtl
add
lock
push
sub
push
test
cwtl
and
ja
out
mov
xor
mov
pop
rcrb
sahf
addr16
dec
push
mov
mov
shrb
cmpsb
sahf
xchg
inc
adc
or
mov
cmp
dec
sbb
mov
daa
rcr
push
hlt
lods
mov
cmc
cmpsb
imul
inc
imul
push
ret
push
mov
adc
leave
xor
dec
or
inc
dec
cmpsb
jl
cltd
outsb
cli
pop
gs
sbb
jle
or
jbe
in
sti
out
popa
adc
iret
lods
xor
sbb
int
pop
fcoms
adc
clc
mov
or
xor
into
je
icebp
mov
out
movsl
fwait
out
leave
ret
incl
in
fstps
lret
notb
mov
mov
add
loopne
repz
jne
inc
mov
lahf
clc
push
mov
je
xlat
aad
cmp
addr16
push
fdivl
scas
repnz
mov
sub
xchg
clc
cmpsb
pushf
in
test
sbb
pop
cmc
out
add
repz
jg
lods
dec
and
js
pop
mov
in
arpl
push
lcall
mov
iret
sbb
lods
mov
xor
xor
mov
push
jecxz
mov
add
loope
jmp
mov
mov
jge
mov
loope
add
loopne
mov
aam
fdivrp
in
cmp
data16
shl
jbe,pn
sub
xlat
and
push
fstps
ffreep
pop
insl
mov
xchg
mov
jno
push
lret
lea
aad
xor
xchg
test
mov
adc
scas
cwtl
fwait
or
sbb
and
xchg
icebp
mov
adc
add
stos
or
pop
test
testb
add
fwait
and
sbb
ret
inc
lcall
mov
cmp
aam
in
push
cmp
cmp
sbb
insb
jo
pop
bound
aas
xchg
das
in
xchg
adc
int
loop
jg
push
loope
sbb
cld
dec
or
push
jne
insb
andb
push
mov
mov
pop
adc
lret
repz
icebp
jbe
pop
fisubl
push
fisubl
pop
repnz
aad
ficomps
in
nop
xor
stos
lods
fsubrl
shlb
ja
mov
ds
adc
and
pusha
xor
push
and
movsl
cs
mov
cmp
loope
fs
sub
jl
lcall
push
lock
or
mov
mov
or
xchg
or
pop
push
cmp
xchg
lcall
test
repz
pop
cmp
cmp
call
dec
shrb
dec
adc
shl
fwait
mov
xchg
or
and
rorl
jnp
dec
mov
push
in
adc
jmp
mov
out
dec
and
fidivs
mov
xchg
aad
push
in
shrl
inc
or
sahf
aas
in
pop
jns
jg
lahf
rolb
sbb
mov
pop
jno
aaa
xor
mov
add
call
fistpll
sahf
inc
movsb
mulb
ja
xchg
je
sbb
sub
lods
inc
testl
pop
sub
loope
movsb
xor
adc
aam
int3
arpl
sub
rolb
leave
mov
insl
movl
ja
repz
dec
sbbb
pop
mov
call
inc
popa
js
push
stc
jg
xchg
jne
in
or
and
push
sbbl
je
loope
sbb
pusha
sub
mov
dec
lock
lock
imul
sahf
incl
push
and
cs
dec
test
dec
cmpsl
pushw
push
mov
mov
push
stc
add
jno
fnstcw
orb
ss
mov
loope
cmp
or
jp
xor
insb
xchg
je
int3
or
xor
inc
push
insb
cltd
lcall
push
bswap
push
mov
and
fcmovnb
dec
aaa
sbb
fs
ret
add
push
and
aam
xchg
sbb
adc
xchg
mov
mov
cs
out
mov
mov
and
mov
jg
push
iret
add
xchg
xchg
es
mov
pop
adc
orl
testb
pop
movb
outsb
out
and
xchg
icebp
dec
and
cmp
inc
ds
push
in
fsubs
lock
int
sti
xchg
jge
inc
sub
negl
mov
nop
or
cmp
jl
hlt
movsl
xor
sahf
adc
fwait
nop
jnp
pop
scas
mov
loop
mov
data16
push
cmp
pop
and
push
clc
jo
jne,pn
cmpsb
mov
pop
imul
cmp
cmpsl
adc
xchg
aad
mov
inc
aad
xor
lahf
roll
jg
insl
push
xor
and
stos
pop
sbb
inc
pop
movsb
les
mov
lods
ss
aas
call
jp
and
adc
ss
mov
ss
mov
adc
shr
out
sub
scas
dec
pop
pushf
hlt
sub
inc
or
cmp
test
repnz
in
mov
scas
nop
jbe
das
lahf
iret
mov
inc
mov
mov
inc
enter
cmpsb
fstps
stos
xchg
fwait
mov
xchg
sarb
fistpll
imul
pop
mov
stc
mov
sahf
sub
mov
lret
aaa
fistpl
negb
leave
movsl
mov
test
fsubp
cs
mov
repz
add
xchg
arpl
movsb
xchg
int
lret
rolb
daa
fs
jne
cmp
dec
out
addl
ja
movsl
add
daa
mov
scas
push
add
out
jecxz
ds
jne
loope
ret
icebp
call
adc
mov
fsubrl
in
or
cmp
sub
push
jle
stos
es
sbb
stos
outsl
outsb
mov
cld
js
inc
fcmovnbe
push
loope
push
inc
int3
mov
loope
lds
fdivrl
pop
or
cmp
pop
mov
jecxz
shll
stos
sub
repz
arpl
sbb
out
sbb
hlt
jno
inc
cmp
jno
inc
jl
or
inc
pushf
mov
addl
xlat
pop
pop
mov
mov
and
pop
int3
mov
rcl
call
out
push
jbe
out
and
fstp
and
mov
into
shlb
xor
cmpsl
aam
stos
cwtl
mov
std
icebp
add
lcall
in
xlat
cmp
sub
mov
mov
pusha
stc
insb
rcr
mov
pop
mov
outsl
out
test
lds
sub
push
inc
adc
call
pop
ja
shl
add
std
mov
pop
jl
jg
scas
and
sti
adc
loop
sti
cmp
mov
inc
aam
shrb
sub
mov
push
mov
sbb
in
rolb
push
inc
loopne,pn
cmpsb
aaa
pop
lahf
mov
dec
xlat
cli
loopne
pushf
cmp
and
pop
mov
int
push
cvtpi2ps
pop
sbb
inc
out
dec
pop
add
pop
sahf
jg
xor
push
sbb
movsl
movsl
lea
add
fcomi
sub
addr16
stos
ljmp
xchg
xchg
stos
cltd
jns
je
fdivs
in
sbb
cmc
shrl
cmp
xchg
clc
add
xchg
shlb
sbb
repz
shl
xchg
xchg
mov
insb
mov
and
jae
lahf
lods
jne
ss
shrl
mov
loope
repz
mov
int3
sbb
fwait
xor
and
cmpsb
ljmp
sub
xorb
xor
jae
lock
push
pop
sti
sahf
or
push
lods
cmpsb
rcrl
push
pop
imul
mov
decb
adc
pop
xchg
outsb
sarb
push
cmp
mov
aaa
call
nop
xchg
std
mov
and
push
add
mov
outsl
movsl
push
scas
mov
dec
test
mov
mov
jmp
sub
test
lods
xor
fisttpll
jne
lret
add
push
jo
cs
incl
repz
insl
mov
in
pusha
adc
hlt
ljmp
cs
dec
clc
lahf
and
scas
sbb
add
xlat
mov
aas
jo
adc
sub
dec
lds
cmp
cltd
jge
xchg
xchg
xor
dec
jnp
sbb
xor
int3
test
test
and
pop
aad
movsl
dec
aam
les
add
inc
outsb
inc
mov
xchg
and
xchg
es
jnp
addr16
mov
inc
pop
xchg
adc
test
jecxz
je
dec
and
push
adc
test
ds
sub
mov
lds
mov
push
push
sub
mov
movsb
int3
cmc
dec
mov
iret
pop
push
popa
mov
jg
jbe
xchg
pop
mov
xchg
fstpt
and
jge
jb
dec
pop
mov
repnz
arpl
mov
cwtl
ds
xchg
pop
cld
ss
ds
repz
push
mov
cmp
adc
int
jle
pop
mov
repz
push
dec
xor
orl
dec
push
stc
ss
es
out
cmpl
mull
mov
sti
lea
lahf
rcll
lea
mov
sbb
or
jae
jno
mov
into
pop
repnz
imul
ljmp
and
inc
in
cmp
pop
imul
mov
in
cli
aas
sub
mov
and
pop
add
leave
out
arpl
xchg
lahf
inc
and
cwtl
xchg
sub
stos
xor
jne
pop
xchg
or
movsl
sbb
xchg
addr16
jns
and
in
inc
mov
cmp
mov
jo
jg
mov
icebp
and
cs
ret
cmpsl
in
pop
in
pop
lds
pop
clc
addr16
adc
pop
inc
int3
pop
pop
xchg
mov
or
int3
int3
mov
add
sub
lds
mov
aad
or
push
outsb
lea
sbb
add
ja
jae
jo
into
fsubrl
adcl
shll
bound
fisttpl
addl
imul
adc
inc
xchg
mov
bound
fcomip
ljmp
mov
jge
push
adc
inc
xor
cmp
int3
adc
fwait
insb
jns
pusha
mov
add
sbbb
xchg
repnz
std
push
lcall
push
sbb
lock
xor
rclb
std
aas
movsb
pusha
imul
mov
adc
cmpl
call
or
scas
push
sbb
sbb
pop
lods
sub
roll
cmp
stos
rol
andl
add
mov
das
stc
or
repnz
sub
sbb
push
push
xor
cmp
xchg
test
lods
pop
rolb
cmp
fadds
int
xchg
and
loopne
popf
mov
out
out
sub
add
pop
insl
enter
call
imul
or
insl
cmp
pop
push
les
add
out
jmp
jmp
xchg
mov
scas
push
cli
adc
arpl
xchg
cmp
jmp
jg
cmpsb
add
bndstx
das
or
repz
lret
clc
into
and
sub
shlb
jecxz
jbe
int
mov
out
movsb
mov
mov
ffree
pop
mov
adc
test
xchg
adc
push
std
cwtl
xchg
int3
dec
iret
ret
push
or
mov
xor
xchg
jae
fildl
xchg
mov
fcmovu
mov
clc
jmp
aaa
push
lds
in
rorl
mov
movsl
push
lods
mov
xchg
xchg
dec
out
adc
enter
lea
inc
ja
jmp
sub
jne
fcmovnb
cmc
js
in
lret
add
inc
jle
out
shrb
inc
orl
les
cmp
fdivp
fld
je
stc
orb
inc
push
and
clc
incl
jp
dec
jo
shll
mov
add
and
push
les
cli
clc
ret
mov
outsb
jns
xor
dec
mov
pop
arpl
ja
out
lds
or
ror
mov
dec
mov
loopne
lods
push
divb
loope
mov
xchg
fadds
or
jp
xchg
and
test
in
pop
cltd
scas
dec
divl
inc
mov
inc
pop
js
mov
notb
stc
outsl
xchg
mov
movb
cmp
push
arpl
popf
sahf
outsl
push
sub
pop
test
sub
add
cmp
sbb
fistl
add
dec
pop
ret
inc
loopnew
imul
les
mov
mov
push
iret
into
sbb
mov
add
sbb
inc
cmp
push
add
bswap
clc
stos
fstps
xor
mov
fwait
mov
outsb
jne
lret
sub
add
call
out
and
and
mov
cmp
mov
repnz
xor
xor
jno
mov
pop
cmp
jb
rcrl
xor
stc
imul
and
xor
rcrl
mov
imul
sbb
sti
mov
push
js,pt
and
fsubrs
out
pop
ret
jne
mov
and
ret
fcmovbe
shll
jge
insl
sahf
jge
ret
jmp
iret
sbb
push
mov
push
daa
and
aas
and
int
inc
jge
rorl
pop
scas
and
push
pop
and
sbb
shrb
ret
cmp
mov
enter
xor
ficompl
out
fwait
in
jbe
nop
jae
dec
add
je
pop
add
pop
lea
inc
xchg
clc
xor
out
xchg
xor
scas
loop
outsb
mov
push
clc
mov
push
repz
jecxz
fs
mov
xchg
cmp
test
pop
inc
lock
clc
popa
push
push
add
jle
ja
cltd
dec
sbb
sahf
movsb
xlat
int
sbb
aad
pop
arpl
roll
xor
add
adc
push
and
jb
loope
dec
repnz
pop
popf
push
inc
ret
scas
outsb
fldcw
sahf
outsl
pop
xchg
mov
add
dec
adc
div
ficoms
popa
push
cmp
mov
arpl
stos
dec
stos
or
out
push
and
inc
cmp
loopne
popa
mov
lods
adc
fsubrl
repz
sbbl
popa
xor
adc
int3
mov
ljmp
dec
mov
lret
sub
dec
dec
ret
enter
mov
inc
rorl
inc
daa
ja
mov
test
jp,pn
sar
shl
sbb
mov
push
sub
mov
cld
fisttpll
mov
mov
dec
pop
jne
mov
dec
and
mov
push
lahf
mov
push
xchg
sub
cmp
test
sbb
mov
sbb
clc
in
xor
cli
jmp
idiv
cmp
jns
sub
xchg
xor
xlat
gs
push
dec
xor
push
jmp
ljmp
and
jmp
cld
outsb
or
xchg
mov
cld
xchg
stc
dec
or
lock
imul
inc
insb
movsb
xor
mov
clc
xchg
stos
out
int
inc
and
andl
insl
sub
mov
stc
cmp
test
lahf
xor
xor
incb
or
pop
xor
lahf
pusha
jno
mov
aas
sub
pop
xor
sahf
pop
fwait
daa
iret
loope
and
sub
das
fiaddl
push
aaa
push
mov
cmp
pop
add
add
sbb
popf
in
subl
sahf
sub
negb
imul
sub
fstp
aas
jbe
jns
lock
shlb
movsl
sbb
cli
dec
push
hlt
mov
cld
int
sarl
cld
daa
inc
pusha
dec
inc
dec
inc
mov
cmpsb
repz
outsb
jmp
mov
lea
dec
les
ret
sub
out
loop
aas
add
stc
xor
and
push
icebp
pop
call
je
inc
inc
add
push
push
push
sbb
lock
jle
dec
add
ret
fwait
sbb
cld
inc
jne
loop
clc
mov
in
cwtl
add
daa
dec
sbb
shrb
sbb
xchg
ret
mov
divl
ffreep
out
movsl
adc
cli
lock
jecxz
add
rcr
xchg
scas
scas
arpl
mov
cmp
in
call
cltd
push
shll
push
push
insb
push
sbb
cli
js
movsb
dec
pop
notl
int
ljmp
sub
add
mov
xor
in
dec
lock
xchg
fadds
sbb
mov
ss
das
adc
sub
fs
out
or
dec
cltd
lahf
mov
sbb
mov
pushf
inc
xor
into
mov
pop
and
mov
ss
sahf
imul
hlt
jl
call
sahf
adc
insb
ret
dec
pop
mov
pusha
ret
xor
shll
jne
push
lahf
jp
xchg
mov
inc
jno
pop
enter
js
push
lods
sbb
fldl
or
std
cmp
dec
cmp
sbbb
jae
dec
call
inc
cmp
fimuls
xchg
mov
in
mov
mov
mov
mov
gs
sub
rcll
fldlg2
lret
ljmp
jmp
or
mov
rep
mov
je
mov
mov
xchg
popf
jae
rcll
jle
dec
cwtl
mov
jae
mov
and
lds
rcrb
mov
outsb
xchg
arpl
add
bound
cli
std
xor
xor
imul
xchg
in
mov
adc
inc
jle
mov
cli
xchg
out
xchg
push
push
loope
push
inc
rclb
insl
rcrl
adc
aam
xor
shll
inc
aam
sub
xchg
adc
adcl
roll
xchg
mov
fmul
mov
sub
clc
test
test
jecxz
xchg
pop
sti
hlt
icebp
leave
mov
and
in
fisubrs
push
mov
xchg
into
push
dec
insb
or
ss
sub
repnz
sbbl
push
dec
outsl
pop
adc
test
dec
jge
out
ret
movsl
sub
lock
ss
dec
push
jo
add
or
or
mov
mov
cli
aaa
loop
test
sarl
loope
mov
push
insb
mov
push
loop
das
mov
orb
mov
xor
dec
icebp
fmul
or
and
cmc
jo
sbb
fldt
test
shr
es
inc
je
and
insl
mov
xchg
lods
adc
clc
dec
in
nop
mov
out
adc
lahf
push
inc
cmp
mov
sbb
xchg
sbb
cld
push
sub
int
out
push
and
xchg
insb
scas
iret
jae
pop
test
pop
pop
or
push
fistps
or
shl
mov
test
xor
jl
lcall
or
sub
dec
cmp
clc
in
aam
stc
add
adc
cmp
jne
lea
inc
cli
hlt
lret
inc
jg
fstl
ds
cli
cwtl
adc
stc
loope
outsb
cmp
test
pop
imul
push
xor
idivl
adc
cld
cmpl
pop
cmp
adc
test
scas
push
cli
ss
cld
loope,pt
movsl
xchg
add
rcrl
jbe
call
inc
jns
imul
adc
fs
fwait
je
mov
loope
cmp
xorl
mov
js
fdivl
pop
mov
dec
fisubs
xchg
repnz
xor
jecxz
sahf
mov
int3
jmp
shll
dec
sbb
int3
leave
nop
daa
pop
sbb
js
icebp
jecxz
dec
cmpsb
jne
xchg
push
fsub
imul
lods
in
fmuls
out
xor
jo
sbb
jmp
xlat
ret
incl
jg
ja
inc
cmp
mov
inc
push
cld
iret
fsubrl
clc
in
sub
jmp
pop
scas
mov
add
enter
repz
subl
pop
or
lret
jmp
mov
add
or
popf
pop
sbb
jl
shlb
dec
xlat
xchg
rep
mov
popf
orps
cmp
lret
xchg
mov
push
add
fwait
mov
cmp
cmp
add
dec
dec
flds
jg
and
jno
mov
push
sbb
lea
out
outsb
jno
sbb
into
jp
rorl
nop
repnz
sub
test
cmp
enter
mov
sahf
dec
scas
dec
cltd
jle
mov
cmp
xor
pop
push
cltd
imul
lods
inc
mov
jle
mov
mov
int3
cwtl
jb
dec
ss
mov
inc
dec
in
fisubrl
into
adc
jmp
jle
pop
sub
jecxz
jmp
lret
imul
movsb
add
mulps
popa
pop
dec
scas
rcrb
sbb
add
out
pusha
test
icebp
mov
mov
mov
pop
stc
aaa
cmp
and
sub
fsts
insl
or
adc
sub
outsb
push
scas
pop
sbb
andl
out
jmp
ss
xchg
iret
or
mov
sub
cmp
scas
daa
sbb
xor
inc
repnz
push
cs
out
insl
sbbb
es
les
scas
ljmp
test
adc
jecxz
xchg
add
loope
rorb
and
inc
test
mov
jno
jae
cltd
and
mov
push
sub
idivb
shll
push
mov
fdivs
mov
mov
imul
cmp
das
mov
xlat
enter
fnstenv
add
insb
cmovg
and
aad
faddl
lds
xchg
mov
repnz
sar
jo
fstpt
imul
scas
mov
jmp
cmpsb
nop
out
out
xchg
adc
cmp
inc
push
or
xchg
push
in
dec
mov
sbb
and
fs
loope
xlat
pop
mov
jg
sbb
push
sub
int
xor
movsb
jne
cmpsl
enter
cmp
testb
adc
sbb
fadds
xchg
repz
or
sub
hlt
xlat
add
std
shll
and
push
xorl
xor
xor
sub
shl
inc
jnp
push
mov
in
or
sub
filds
cmpsl
test
cmp
popa
dec
movsb
adc
or
shrl
aas
imull
jp
jo
mov
or
hlt
add
inc
filds
sub
dec
inc
dec
or
fdivl
fwait
pop
gs
ret
rol
mov
xor
orl
push
xorb
mov
arpl
mov
sarl
pop
in
pop
pop
js
mov
pop
xchg
fcoml
mov
push
test
sahf
sbb
pop
aaa
lcall
xchg
push
loopne
push
mov
xchg
out
or
push
mov
lods
or
or
jbe
sub
push
mov
mov
sub
aaa
mov
inc
inc
in
xor
movsb
xchg
push
push
in
incl
or
dec
into
into
pop
mov
jle
or
in
ss
add
mov
xor
popa
mov
inc
jns
fisubs
sbb
add
xchg
push
sbbl
push
inc
loope
repz
mov
fldpi
and
gs
outsl
jo
xchg
jnp
or
dec
mov
lret
divb
push
in
inc
inc
pop
xchg
stos
lods
js
push
lock
mov
cmpsl
dec
dec
rol
push
mov
push
push
cmc
sbb
pushf
add
aaa
stos
fisubrs
sub
dec
xchg
hlt
out
pop
add
jl
jg
dec
push
pop
fadds
mov
jp
xchg
ret
dec
loopne
pop
inc
sbb
mov
push
cmp
inc
loop
mov
in
xor
mov
out
adc
loope
mov
sub
fsubr
gs
popa
outsl
push
dec
mov
push
cs
xchg
cmp
in
fsub
adc
xchg
and
test
out
cli
fwait
ret
jmp
testb
call
lahf
call
cmpsl
sub
test
adc
leave
lock
arpl
popf
cmp
jnp
test
push
mov
adc
je
sub
pusha
and
movsb
and
xchg
aad
or
and
mov
jg
cmpsl
in
pop
pop
jnp
loopne
pop
lcall
xchg
mov
jbe
loop
push
push
mov
adc
nop
mov
mov
push
adc
dec
dec
jb
imul
es
bound
inc
dec
insl
add
cmpsl
xchg
mov
cs
fcomps
fidivs
cmpsb
sub
pop
mov
cmc
mov
mov
fnstsw
test
jmp
ja
cmpsb
rcl
imull
cli
mov
fsubr
movl
ret
in
das
sahf
sahf
mov
xchg
jbe
jbe
dec
mov
aam
push
or
bound
push
xchg
lret
imul
ljmp
imul
pop
out
pop
cmp
xchg
jmp
sub
pushf
and
adc
mov
icebp
mov
outsl
adc
or
and
pushl
dec
push
cmp
fsubrs
xor
scas
icebp
or
iret
aas
subl
test
orb
push
roll
outsb
out
test
jle
mov
loope
cwtl
stos
fcomps
rcrl
jnp
jecxz
in
jmp
cmc
adc
or
repz
stos
repnz
mov
add
mov
mov
into
test
xchg
jge
jl
out
sub
xchg
xor
sbb
cmp
mov
jo
dec
movsb
andb
sbb
xor
xorl
or
adc
xchg
inc
xor
loope
in
cmpsl
subb
repnz
adc
mov
jne
bswap
aas
jmp
clc
sub
aaa
hlt
sbb
cmp
mov
push
scas
pushf
pop
cmp
sub
cwtl
negl
rorl
aad
sbb
mov
lds
xor
ja
aad
fbld
dec
adc
mov
xor
aaa
cmpsl
mov
cmpsb
icebp
or
pop
mov
out
cmp
sbb
int3
sahf
add
or
dec
repz
xchg
nop
adc
cmp
adc
jnp
dec
mov
mov
or
out
sahf
push
or
pop
divb
sub
and
pop
shrl
insb
aam
sub
cmp
lds
out
lahf
inc
xchg
jge
sub
clc
out
xor
cmpsb
call
orps
fisttpll
sbb
sub
shr
mov
clc
lahf
lcall
mov
lods
dec
pop
and
jns
gs
std
int
sbb
mov
mov
xor
sub
mov
cmpsb
lahf
jns
mov
imul
rol
leave
imul
fdivrp
sahf
mov
loopne
out
and
insl
jp
push
ret
idiv
insb
pop
inc
add
sbb
repz
fidivrl
std
xor
sub
or
pop
int
sbb
sub
jge
scas
outsl
imul
int
sub
scas
daa
bound
shrb
aad
ret
adc
sub
repz
test
mov
pusha
mov
lcall
cwtl
std
xchg
adc
cwtl
mov
loop
ds
cltd
imul
loop
jp
pop
xchg
iret
es
mov
inc
add
int
cmp
pusha
mov
inc
lods
push
fistpll
daa
out
xchg
test
sub
icebp
loop
mov
rorl
mov
fsubl
jmp
cmp
cmp
sahf
arpl
adc
sub
or
mov
mov
ss
cmp
xorl
sbb
pushf
push
data16
lea
push
xor
adc
mov
mov
mov
cmp
sub
mov
pop
mov
pop
cmpsl
mov
lahf
lods
or
out
insb
popf
int
das
inc
iret
rcll
popf
mov
sarb
aam
cmp
push
or
iret
sbb
xchg
xchg
fwait
mov
dec
scas
push
rcl
lock
cmc
pop
and
mov
fsts
pusha
sahf
inc
adcl
dec
fsubp
inc
add
inc
lods
push
push
push
leave
sub
adc
dec
cwtl
sbb
test
dec
out
mov
lahf
mov
cmp
aaa
dec
shl
jne
pop
jno
arpl
mov
outsl
addr16
xchg
push
out
push
aad
cli
popf
mov
mov
stc
fdivrl
vpsubsb
adc
xor
inc
daa
pop
subl
imul
xor
push
sbb
loop
mov
mov
jne
mov
cmpl
je
cs
in
jp
add
sub
lgs
clc
xchg
iret
dec
add
jmp
push
push
dec
dec
push
or
test
das
popf
or
cmpsb
movsb
or
xor
adc
dec
test
dec
and
pop
xchg
sub
cmpsl
aas
or
jmp
lret
xchg
xor
loope
or
ss
imull
dec
leave
mov
mov
mov
or
or
sahf
faddl
mov
and
xchg
movsl
sbbb
push
imul
mov
dec
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
fcomps
bound
add
and
jb
dec
sbb
out
aad
or
push
mov
clc
aas
push
jg
inc
jae
mov
leave
outsb
nop
xor
insb
mov
ret
movsb
fiaddl
xor
or
pop
inc
mov
push
jle
mov
mov
add
in
rorl
xchg
daa
lods
sarb
add
add
add
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
sbb
add
lret
and
jge
jmp
ficoml
lock
sarl
mov
xchg
iret
aam
enter
sbb
bnd
mov
sub
push
and
xchg
jbe
ss
add
mov
pop
inc
rclb
fs
pop
enter
andl
add
add
add
pop
sub
sub
addb
into
add
bound
add
jae
mov
repnz
or
xor
subl
dec
int
scas
imul
jae
inc
lods
testl
daa
add
stos
aas
mov
popf
enter
dec
in
add
arpl
divb
xor
pop
xchg
pushf
xchg
loope,pt
ds
sub
add
lahf
cld
cs
add
add
add
das
and
aam
aam
ljmp
je
adc
add
add
mov
lret
out
in
loop
sub
sub
jbe
insb
mov
pop
xabort
in
adc
push
dec
xchg
mov
sbb
jmp
popf
mov
arpl
dec
pop
jge
in
fwait
push
aam
sti
push
mov
inc
icebp
ret
imul
out
daa
sarl
cltd
lea
imul
stos
ss
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
lcall
ret
imulb
ret
pop
outsl
add
or
push
rcrl
cmp
cwtl
xlat
aaa
push
push
xor
aad
addb
fisttpll
sti
add
icebp
dec
jnp
add
pop
mov
popa
out
cwtl
inc
mov
mov
loop
jmp
sbb
cmp
jo
repz
jecxz
addl
add
out
lods
cmp
stc
stc
ret
push
scas
cmpsb
popa
iret
add
bound
add
aam
mov
lret
cmpsl
jge
pop
push
push
and
cmp
xor
cmp
loopne
test
cs
jb
push
pusha
jns
jo
fidivl
mov
mov
clc
and
cmpsb
aaa
cli
lods
or
cmpsl
add
movsl
repz
stc
sbb
mov
jmp
outsl
pop
idivb
mov
loope
dec
mov
add
add
add
push
xor
gs
aaa
push
aam
inc
ret
iret
add
bound
add
scas
xchg
ret
inc
fdivl
add
mov
mov
fdivrs
jg
xchg
sub
mov
pop
outsl
shlb
add
in
movsb
pop
inc
sahf
ss
mov
cld
bnd
jno
push
jecxz
pop
fwait
stc
push
out
fmuls
pop
xor
jmp
inc
repz
pop
pop
enter
cld
movsl
in
add
add
add
dec
inc
sub
das
jle
jg
imul
pop
fldcw
add
add
inc
pop
pop
push
push
add
fs
ljmp
loopne
ljmp
scas
cmc
imul
fstpl
dec
pusha
inc
leave
mov
aas
test
mov
xor
lret
in
lock
enter
mov
sbb
ret
leave
imul
xchg
in
mov
dec
xchg
aas
mov
insl
lret
sub
aam
popa
add
add
add
addr16
and
mov
mov
iret
mov
bound
add
rolb
shll
mov
and
adc
fisttps
xor
sbb
inc
data16
jecxz
adc
xchg
call
pop
mov
out
stc
fimull
xchg
xor
sub
repz
dec
xchg
out
pop
add
or
mov
ret
stos
push
sbb
sbb
add
add
add
ret
or
ret
lods
sub
mov
clc
stos
jecxz
add
add
mov
testb
shll
insb
mov
dec
mov
jg
int
mov
adc
dec
out
cmpsl
cmp
ffreep
pop
sbb
adc
shlb
push
imul
dec
ret
notl
mov
in
ds
sub
loop
in
js
shrb
pop
xor
lods
jge
fwait
mov
mov
add
fld
add
ror
outsl
clc
shrb
in
add
add
mov
stos
pusha
ret
decb
movsl
push
les
call
ljmp
inc
rcl
lea
adc
js
insb
xchg
push
lahf
xlat
mov
mov
cmpsl
subb
add
ret
movsl
fimull
fdivrs
mov
sub
shlb
adc
or
movsb
mov
add
add
popa
pop
lock
out
repz
mov
ret
in
xor
outsl
in
add
add
add
adc
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
push
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
sahf
sbb
xchg
sbb
add
push
inc
add
push
inc
add
inc
add
inc
add
push
inc
add
sbb
add
mov
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
inc
add
or
andl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
mov
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
sbbb
out
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
in
add
bound
add
pop
jns
pop
nop
push
inc
jnp
faddl
movsl
dec
scas
dec
sbb
ss
pop
mov
jnp
pop
les
push
repnz
lcall
sbb
inc
inc
outsb
push
pop
adc
mov
dec
cs
xchg
lods
inc
jecxz
mov
cmp
mov
mov
shlb
add
add
sub
cli
jl
xlat
push
or
add
bound
add
rorb
pop
add
xchg
into
outsl
loopne
cmp
adc
inc
and
fldcw
fs
call
cmp
cmp
jb
lcall
loop
lcall
fldl
adcl
sbb
dec
psraw
or
pop
es
fimull
outsl
pop
jg
or
add
add
add
stos
pushl
xchg
push
leave
int
add
bound
add
or
mov
mov
test
mov
das
or
mov
adc
jne
pop
movb
xchg
shll
xchg
sub
movsb
add
dec
mov
in
loop
iret
test
lds
mov
sub
pop
mov
sti
notb
ljmp
sti
add
in
pop
and
addl
cmp
in
fimuls
daa
jo
das
fadds
add
add
les
or
les
sahf
pop
out
adc
sbb
test
mov
mov
push
lock
scas
mov
js
inc
test
idivb
aas
repnz
loopne
cmpsl
fisttpl
dec
or
ljmp
fistps
pop
jae
adc
jo
mov
sbb
lret
repnz
add
mov
sbb
std
negb
sub
aad
mov
add
add
cmpsb
in
loop
test
jp
testl
and
cmc
mov
jle
xorl
mov
push
sbb
repnz
pop
out
xor
in
arpl
out
and
lahf
subb
enter
xchg
dec
sbb
out
push
dec
dec
test
bnd
add
add
add
xor
jb
inc
mov
and
fadds
add
add
jmp
inc
cmp
je
jbe
sahf
cli
push
mov
test
leave
or
push
lds
and
push
xor
stos
ljmp
out
test
neg
push
out
push
mov
sub
and
nop
mov
test
fisubl
gs
enter
jns
mov
add
add
add
pop
sub
jb
flds
add
add
pop
inc
pusha
repnz
sbb
sub
pop
sbb
or
nop
cs
sub
mov
fwait
xchg
xchg
fldcw
addr16
cmpsl
add
push
movsb
push
push
imul
add
sbb
nop
fistl
mov
push
jbe
or
out
jmp
in
aas
jb
jecxz
aam
ss
mov
sahf
enter
add
add
add
mov
aam
xor
and
mov
add
bound
add
xchg
adc
jle
nop
adc
rcr
xchg
data16
jae
lret
or
push
jne
cmp
in
sbb
rorb
repnz
mov
mov
int3
xor
mov
mov
divb
or
dec
xor
xor
or
mov
add
add
add
cmp
add
mov
out
xchg
enter
add
add
xlat
adc
inc
mov
in
faddp
mov
and
pop
jnp
push
adc
inc
mov
imul
jno
xchg
clc
sub
es
pop
loope
push
sbb
fdivrl
push
inc
aad
inc
adc
dec
mov
xlat
mov
mov
fs
lock
daa
xor
mov
out
mov
add
add
add
jmp
repz
fimull
sub
add
bound
add
adc
xor
jmp
mov
or
xchg
dec
lods
jp
movsb
jecxz
fmul
dec
je
fsubrs
adc
sarl
adc
add
and
cmp
mov
xchg
dec
inc
popa
jne
in
in
stc
jne
sub
and
or
jmp
jae
dec
movsb
scas
sbb
mov
loope
shl
adc
mov
add
add
pop
iret
pop
aad
ss
dec
jbe
cmpsb
xchg
fiaddl
add
add
test
push
jl
add
lahf
adc
sub
mov
ret
loopne
inc
ret
sub
rcl
add
mov
xchg
pop
push
jo
mov
push
fisttpll
bound
cmpsb
dec
cli
shl
adc
sub
push
fstpl
xchg
scas
movsb
cwtl
je
mov
lret
cmp
inc
les
outsl
roll
add
add
fwait
test
jg
adc
fildl
add
add
inc
fs
jae
inc
jbe
jo
jle
hlt
jge
shl
jnp
xchg
mov
inc
andl
stc
icebp
das
push
jae
adc
cmpsb
leave
test
andl
shll
test
loopne
cmp
hlt
testl
add
loopne
adc
jle
sub
sbb
stos
dec
add
add
add
outsb
jae
lret
jle
repz
jne
mov
add
add
test
mov
nop
stos
jnp
sub
adc
pop
stos
sbb
outsl
xchg
in
mov
ret
push
mov
mov
lods
lds
add
or
hlt
pop
sub
int3
xor
pop
icebp
cwtl
cmp
inc
push
jp
cwtl
fidivrs
cwtl
out
ljmp
add
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
inc
adc
rol
dec
pop
sbb
fstpl
popa
jecxz
in
frndint
data16
lea
daa
std
jnp
clc
xor
sbb
call
and
mov
cmp
pop
lcall
and
pop
mov
popa
xor
push
enter
mov
mov
movsl
push
mov
jge
add
add
add
cmp
mov
shrb
pop
faddl
add
add
jno
clc
fstpt
jns
arpl
push
and
lods
and
rolb
test
orb
cwtl
cli
insb
insl
fs
hlt
test
fwait
mov
jae
pop
mov
rcrl
andl
dec
ljmp
push
xor
aad
fidivrl
outsb
lock
scas
inc
addb
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
lods
xchg
mov
add
add
cmc
mov
sbb
sbb
fdiv
mov
mov
ret
sub
push
sub
mov
jl
test
cmpsb
cli
cltd
dec
adc
cmp
cld
sbb
push
repnz
pop
cmp
orb
add
jae
adcb
iret
xchg
lcall
jecxz
call
add
add
add
sub
fildll
mov
fldl
add
add
bound
mov
inc
outsb
sbb
imul
int3
shrb
and
dec
jne
cmp
imul
xchg
sbb
lret
call
cmc
push
mov
dec
mov
loopne
mov
add
mov
lock
mov
push
call
jnp
mov
pop
pusha
mov
add
adc
testl
popa
adc
bound
add
test
nop/reserved
movsb
cmp
sahf
sbb
or
sub
xor
jl
test
dec
lea
or
xchg
icebp
cmp
jmp
scas
rorl
xlat
dec
jns
adc
pop
pop
jnp
rcll
mov
test
stos
dec
scas
enter
scas
or
or
add
add
push
imul
push
fidivl
in
fldl
add
add
data16
jo
xchg
cs
lcall
scas
sbb
push
add
or
movsl
fsubs
mov
jl
enter
inc
out
pop
int3
push
dec
inc
pushf
je
ds
bound
cmp
scas
orl
mov
and
and
neg
cmpsl
push
or
and
adc
dec
fmulp
push
arpl
cmpb
add
add
add
jne
jg
clc
cs
push
and
add
add
mov
cmpsl
mov
lods
sub
je
aam
and
mov
mov
xchg
add
mov
ljmp
lahf
loop
xor
sbb
ret
clc
js
mov
lods
dec
mov
inc
dec
imul
xor
sub
daa
adc
movsl
or
mov
imul
aaa
cmp
pop
jp
cli
add
add
add
or
dec
mov
je
lcall
add
bound
add
test
mov
ret
xchg
aad
push
ret
sub
ss
mov
push
pop
xor
pop
pop
mov
push
in
movsb
mov
stos
fstpl
inc
mov
cs
push
cmp
fcmovbe
fidivrl
cli
cmc
jo
aas
push
xchg
and
sbb
pop
sbb
mov
dec
jp
add
add
add
fists
dec
mov
xchg
adc
xchg
mov
jmp
add
add
rolb
mov
push
adc
subl
dec
cmc
and
pop
push
lock
mov
cmp
adc
insl
push
pop
add
xchg
lret
xlat
mov
add
mov
dec
mov
repz
mov
arpl
enter
mov
and
lret
stos
sbbl
xor
add
add
add
xchg
fcmovu
fisttps
push
mov
repz
add
bound
add
test
cmc
mov
and
adc
in
cld
shrb
mov
dec
or
nop
lret
dec
leave
inc
pusha
frstor
lret
call
aaa
lea
pop
out
icebp
rorb
outsl
sub
and
stos
push
mov
adc
fisttpl
jbe
jo
push
mov
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
rclb
icebp
push
xor
mov
lcall
lahf
ja
or
pop
jno
leave
mov
sbb
imul
std
in
int
ret
mov
dec
push
pop
lahf
inc
lds
xor
xchg
jbe
jecxz
jne
sbb
xor
pop
rcl
xor
inc
bound
add
add
add
and
cmp
stc
pusha
out
rolb
add
add
push
call
or
mov
pop
sahf
jne
cmp
or
xor
rcll
or
add
mov
out
sbb
dec
jle
popf
mov
loop
push
dec
pop
pushf
push
pushf
mov
cmpsl
aam
jns
mov
mov
lahf
rclb
jle
subl
lret
mov
repnz
add
add
xchg
nop
ffree
popf
aam
mov
add
bound
add
sub
fnstsw
ret
aas
inc
sub
scas
push
lcall
pushf
gs
imulb
out
leave
pop
pop
stos
mov
std
adc
stos
xchg
lea
fsubrp
xchg
pop
jne
xchg
ficompl
dec
xor
jne
pop
subb
int3
lcall
sbb
fcoml
add
add
add
mov
jbe
hlt
mov
and
cmpsb
ret
in
rcl
add
bound
add
xor
outsl
mov
sbbw
push
and
mov
sbb
mov
push
movsb
pop
ret
arpl
xor
sub
test
fidivrl
xor
arpl
xor
clc
fistpl
mov
mov
nop
mov
ret
fisubs
mov
test
movsl
pop
mov
xchg
jbe
xor
aas
add
add
add
xor
into
mov
sub
out
dec
mov
jge
roll
add
add
lcall
aas
int3
cmp
pop
scas
push
sub
cmpl
sub
mov
icebp
js
and
push
mov
cmp
stos
push
movsb
inc
in
cmp
or
shll
nop
add
insb
lret
movups
pushf
test
cmp
sub
jecxz
addl
add
add
in
outsb
and
pop
mov
xchg
roll
add
add
movsl
push
mov
mov
or
adc
and
jecxz
ret
xchg
insb
push
enter
loop,pt
inc
je
pop
pop
push
pop
mov
stos
insl
jb
rcll
repz
jle
repnz
cmp
mov
and
inc
rol
adc
dec
gs
pusha
and
fiadds
add
add
add
mov
and
stc
roll
add
add
and
pop
ja
and
addr16
loop
dec
test
add
adc
pop
loopne
xchg
mov
inc
jae
mov
idivl
jecxz
sub
ja
dec
mov
shlb
dec
jp
xchg
cli
jg
jg
fwait
push
dec
xchg
push
pop
and
adc
mov
pop
adc
mov
jne
fidivrs
xchg
add
add
add
stc
call
into
inc
mov
mov
add
bound
add
sub
cmc
xor
mov
add
xchg
dec
cmc
add
add
ss
enter
rolb
aam
stc
or
ja
ret
lea
std
mov
out
xchg
insb
ljmp
loopne
out
scas
jbe
imul
std
sarb
jp
pop
pop
and
lock
jae
repz
cmp
ficoms
add
add
add
sub
sub
imul
add
add
dec
mov
sbb
pushf
pop
sbb
pop
outsl
sub
and
and
push
jle
bound
mov
add
test
adc
xchg
mov
test
aad
mov
inc
push
pop
test
ljmp
push
fmuls
sub
mov
add
add
dec
aas
int3
sbb
out
loopne
lods
std
incb
add
add
sbb
repz
pop
cmp
pusha
shl
out
addr16
xor
sub
xchg
or
ror
cltd
aam
mov
xor
push
icebp
mov
jo
aas
jecxz
int3
int
mov
sub
mov
or
dec
pop
cmp
fs
add
pop
push
pop
sbb
or
jbe
add
add
add
push
test
fildll
dec
sub
stc
adc
add
roll
ljmp
cwtl
fwait
pop
loopne
mov
loop
aas
xlat
mov
sar
xchg
mov
popf
in
push
das
push
fidivrl
mov
enter
mov
xchg
jno
dec
or
mov
inc
rcl
ja
ficoml
xor
and
push
mov
push
adc
push
frstor
add
add
fwait
loope
sub
sarb
add
aad
add
add
scas
bound
xchg
dec
add
xchg
incb
cmp
inc
jmp
imul
das
jg
add
jns
and
mov
xchg
clc
pop
xchg
repnz
and
int
cmp
arpl
outsl
scas
or
lock
dec
aas
lods
xchg
jns
and
aam
sub
testl
divl
dec
cmp
dec
test
jg
inc
add
bound
add
fwait
shr
push
popw
cmp
push
inc
pusha
push
xor
xchg
repz
ljmp
mov
pop
xchg
adc
push
sbb
xor
iret
into
in
jmp
test
in
scas
cld
push
popf
int3
aas
xchg
jae
lea
sub
outsb
rcrl
into
inc
ljmp
xchg
xchg
cmp
add
add
add
arpl
jge
mov
daa
cmp
push
cmpsl
add
bound
add
into
pop
insb
push
mov
push
jmp
xchg
shl
stos
fadd
push
jno
push
xor
mov
outsb
loop
fisubl
fcmovnbe
out
fdivl
aas
pushf
sub
adc
dec
pop
adc
mov
and
insl
cld
dec
sub
mov
add
and
call
add
add
add
ss
xor
and
outsl
cmp
add
bound
add
int3
pusha
or
cmp
stc
xor
sub
jns
arpl
mov
cmc
cmp
das
pop
lcall
inc
sub
lahf
and
or
in
xchg
inc
repz
mov
dec
mov
mov
ror
das
out
adc
addl
in
xchg
outsl
jns
ret
cld
pop
rolb
aad
insl
mov
add
add
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
sbb
mov
adc
sbb
sbb
je
aaa
cmp
mov
adc
mov
jl
in
sarl
cmc
push
movl
imul
mov
idivl
cltd
and
rol
xlat
dec
hlt
fisubrl
sbb
pusha
pop
call
add
push
aad
out
fucomip
ss
cmp
push
xchg
adc
add
bound
add
sahf
dec
adc
pop
xchg
add
and
xchg
lds
lahf
imul
mov
sub
xchg
sti
sub
sbb
loope
stos
shll
sub
and
fst
loop
xchg
mov
cmc
push
in
xchg
icebp
les
mov
imul
cmp
sbb
mov
jge
add
add
add
in
cld
fisubrl
sbb
icebp
sbb
add
bound
add
lods
mov
into
cmpsb
jne
jne
outsl
movsb
das
xor
cmp
cltd
adc
or
jb
nop
dec
jno
jne
xlat
aaa
mov
dec
or
pop
and
cmc
out
jg
pop
jecxz
lods
aam
xor
mov
hlt
lds
enter
inc
mov
test
imul
imul
add
push
les
in
lahf
sti
ja
rcll
mov
filds
add
add
loopne
push
and
mov
mov
pop
outsl
bound
lods
mov
mov
pushf
mov
jecxz
scas
aad
leave
sub
in
xlat
or
icebp
movsb
jp
fucom
jecxz
shlb
movswl
jns
or
std
cmc
aas
test
cltd
fwait
out
push
rcll
or
fisubl
add
add
jle
call
cli
lcall
add
bound
add
cltd
sub
adc
pop
or
pop
add
aas
loope
mov
sbb
xlat
shlb
mov
mov
mov
pop
outsl
lret
push
lret
in
aam
jbe
sub
aas
pop
push
dec
mov
bound
ret
iret
test
scas
pusha
mov
and
mov
clc
xchg
movsl
cmp
aas
and
add
add
add
fincstp
shl
frstor
pop
dec
mov
in
loop
loopne
add
add
or
pusha
pop
mov
cmc
in
xor
repnz
add
xchg
jns
insb
pushf
ret
adc
jp
insb
push
push
fidivrs
adc
jmp
add
outsb
call
testb
daa
mov
xchg
movsl
push
dec
fcompp
rclb
push
push
inc
fwait
cli
cld
sub
inc
ljmp
add
add
add
outsl
mov
jmp
push
fcmovu
in
fs
add
add
aas
push
sub
popf
push
scas
int3
jle
testb
add
rorb
xchg
dec
push
pop
aad
jo
mov
pop
cmpl
ds
mov
mov
push
jecxz
mov
xchg
popf
mov
imul
push
add
push
pop
mov
pop
andb
add
add
sbb
inc
jecxz
mov
fists
add
bound
add
pop
std
fsubs
or
or
fwait
sub
add
add
mov
inc
sbb
cmp
lock
jb
pop
inc
cltd
insb
adc
adc
and
call
sti
mov
cmp
jle
xor
cmp
cmp
test
jb
lret
out
pushf
push
inc
in
in
and
cmpsb
jge
cmp
add
add
add
mov
icebp
and
clc
mov
loope
add
add
xchg
test
out
ja
or
ja
or
out
cmc
sbb
sub
adc
insb
pushf
std
pusha
cltd
test
pop
mov
clc
xor
inc
mov
mov
jl
xchg
dec
or
insb
aaa
pop
dec
mov
ss
xor
jge
mov
nop
xor
mov
adc
add
add
add
adc
repz
das
cli
fists
dec
es
jbe
popl
add
bound
add
adc
add
je
jnp
xor
sub
mov
ljmp
pop
or
ret
leave
mov
pop
sarl
mov
or
cmp
shl
sbbb
mov
ljmp
dec
jecxz
or
xchg
push
adc
jl
add
sbb
out
add
add
add
adc
push
adc
cwtl
out
mov
loop
add
add
mov
arpl
jne
push
mov
mov
cmp
in
outsb
cli
xor
inc
int
fcoml
int3
cltd
repnz
add
push
out
dec
push
jns
adc
mov
aaa
enter
mov
inc
pop
lret
inc
mov
xchg
int3
pop
sub
inc
es
repz
add
inc
sbb
sbb
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
inc
cmp
add
add
add
add
add
add
add
cmp
add
add
inc
cmp
add
add
dec
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
