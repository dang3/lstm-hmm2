push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
sarl
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cli
sub
cltd
pushw
dec
add
addl
loopne
sbb
pop
sub
mov
jp
mov
sub
loope
or
xor
cmp
movb
rcrl
cmp
lahf
push
fmuls
jg
adc
repnz
jg
les
scas
pop
inc
shll
inc
das
call
pop
cmp
xor
movsb
inc
sub
lods
int
int3
pop
sbb
repnz
out
mov
adcb
pop
das
sub
andb
pop
mov
jp
mov
sti
mov
inc
movl
stos
lock
lahf
xchg
movsb
sti
add
ds
mov
orb
les
test
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
movsb
lea
jle
jg
jle
sub
and
mov
mov
mov
add
xchg
ret
ret
and
xlat
inc
into
mov
out
adc
xor
loopne
pushf
int
repz
push
mov
xchg
mov
das
sbb
jge
mov
mov
cmc
add
sub
imul
push
add
inc
mov
mov
scas
je
xor
stc
xor
xchg
and
xchg
loope
xchg
push
data16
jge
push
out
xor
mov
add
enter
movsl
popf
mov
mov
jp
imul
pop
push
out
popf
mov
insl
jg,pn
dec
cmc
js
cmp
cltd
cmp
sbb
out
pause
add
mov
aam
push
fiadds
mov
xlat
fidivrl
rorl
dec
push
lods
test
jo
mov
xchg
adc
sbb
loopne
sub
ret
ds
mov
outsl
js
ds
jl
hlt
ja
jg
fxch
gs
dec
stc
movsl
push
pusha
lods
xchg
in
cli
stos
cltd
mov
push
popa
xchg
fisubl
jmp
jmp
imul
cli
mov
shll
mov
ret
mul
sbb
adc
negb
inc
int3
sbb
sarb
call
popa
xchg
mov
push
shll
and
or
hlt
cmpsl
cmpsl
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
in
jge
jle
jg
jle
arpl
jne,pn
mov
sbb
daa
dec
inc
mov
dec
jmp
push
cmp
lret
inc
mov
notl
subl
cmp
xchg
jne
sub
dec
and
mov
xchg
test
or
rclb
sbb
add
push
imul
int3
dec
xor
lods
or
ljmp
dec
out
imul
adc
je
cltd
cmpsl
stc
mov
dec
or
sahf
xchg
mov
mov
js
movsl
lods
popa
dec
cs
clc
mov
ja
fistpll
insb
js
jle
lcall
add
das
icebp
mov
gs
fldt
sbb
xchg
jnp
sbb
or
jo
cmp
xor
adc
fwait
stc
mov
dec
sub
or
xchg
mov
into
call
in
ret
test
in
mov
jne
pop
or
cs
mov
adc
xor
xlat
jo
addb
cmc
mov
scas
xor
scas
cmp
adc
dec
ficoms
xchg
mov
int3
stos
push
test
and
mov
sbb
leave
and
orb
sbb
in
popf
and
xorl
cltd
or
or
cmpsb
fs
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
adc
cmpb
cli
jg
jle
js
xchg
push
pop
addr16
mov
sub
sub
testl
mov
mov
mov
pop
mov
push
add
pop
jge
and
pop
popa
mov
jae
sbb
mov
cltd
fwait
arpl
aas
imul
stos
movsb
lods
sub
add
pusha
jns
es
and
push
xchg
in
inc
shl
mov
push
push
fldl
jno
inc
add
push
xchg
test
in
std
ss
xor
push
in
scas
test
inc
jmp
movl
es
mov
add
sbb
insl
jo
cmp
cmp
lcall
sbb
aad
mov
cmpsb
inc
outsb
add
out
in
push
insl
lea
xchg
imul
hlt
std
into
cmpsl
shl
cmpsb
cmp
sbb
adc
ja
xchg
sbb
lahf
jmp
lods
jo
adc
sub
lahf
mov
sub
test
adc
ret
idivb
xchg
add
sbb
xor
dec
jg
mov
or
repnz
pop
mov
movsl
pop
or
mov
xor
addb
adc
mov
xchg
test
mov
test
cwtl
fs
jmp
pop
mov
pushf
add
add
jmp
push
dec
push
test
mov
cli
jg
jle
xchg
loopne
inc
ret
cmp
stos
push
adc
out
push
and
adc
fbld
imul
dec
or
lret
sbb
jge
mov
loope
or
ret
sbb
lds
xchg
inc
inc
add
repz
lock
fdivrl
jo
rcrl
sub
out
stc
in
mov
aad
jne
pop
sub
or
jne
jl
lds
out
xchg
mov
rcrl
jmp
mov
jmp
subb
mov
or
inc
insl
pop
xchg
inc
icebp
imul
xor
int3
cmpsb
mov
movsl
inc
data16
popf
lods
int3
inc
sahf
mov
add
sbb
movb
daa
mov
inc
mov
insl
fisttps
inc
xor
outsl
lods
jno
jno
xchg
roll
mov
imul
cmpsl
out
push
adc
pop
jecxz
stos
ret
xchg
aaa
fdivs
lock
in
in
cs
push
lcall
int
dec
call
int3
test
sbbl
pop
popa
sub
push
mov
mov
cmpsb
push
aad
call
sub
lret
mov
inc
cld
pop
jno
xor
cmp
or
jb
xor
dec
jbe
in
jmp
cltd
std
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
stc
jmp
in
jns
jle
jg
jle
cmp
aas
inc
pop
rolb
mov
jae
cmp
inc
ja
push
jns
pop
mov
jb
insb
out
imul
fs
mov
stos
mov
mov
push
pop
sub
or
sub
ja
mov
jl
into
push
lods
jg
xchg
add
in
mov
enter
pop
xchg
test
data16
imul
jge
sbb
push
jno
push
and
sbb
sub
pop
push
jno
cld
push
pushf
popa
or
pop
adc
pop
xor
je
pop
movsl
adc
clc
jmp
adc
xor
leave
bound
add
ret
ljmp
cmp
out
xor
inc
adc
xchg
adc
out
add
in
outsl
pop
push
push
jle
dec
js
xor
fsubl
inc
cmp
cmpsl
sbb
scas
and
pop
movsl
inc
jecxz
sbb
mov
mov
sub
pop
out
mov
orl
arpl
mov
lods
xchg
stos
in
dec
jnp
jmp
in
popa
pop
cmpsl
fstpt
ljmp
aad
jg
pop
arpl
lea
jae
call
push
push
insl
das
adc
adc
clc
mov
xchg
popa
mov
jns
or
mov
outsl
xor
push
orb
cmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
cld
push
pop
jle
cli
jg
jle
test
adc
imul
jbe
cmp
ret
lock
out
int
xchg
push
jae
mov
cmpl
cmp
dec
ljmp
xlat
xchg
mov
adc
mov
sbb
and
pop
fs
mov
mov
push
mov
outsl
sarb
mov
cmc
aam
mov
push
nop
push
aaa
xor
adc
mov
cmpsl
sub
jg
nop
mov
mov
mov
adc
sbb
lods
or
jnp
pop
aad
xchg
lock
pop
mov
pop
sti
xlat
mov
sub
push
cwtl
dec
repz
jmp
insb
jo
daa
lcall
sti
ficomps
inc
mov
adc
pop
mov
test
adc
add
mov
and
sub
sbb
dec
das
ljmp
fsubs
loopne
pusha
jg
lds
cmp
insb
ljmp
mov
jbe
add
add
push
cs
xor
out
sub
push
pusha
inc
fsubr
xor
mov
sub
test
je
xchg
nop
ss
loope
dec
and
or
cwtl
add
inc
fs
or
and
push
jno
ja
push
jmp
in
mov
loopne
loopne
popf
insl
sub
and
movsb
xor
popa
vpmacswd
mov
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
popa
push
mov
mov
sahf
je
repz
jb
cmc
xchg
adc
arpl
xor
lret
leave
decl
sbbl
in
inc
rorb
or
mov
mov
mov
lds
ret
and
mov
and
pushf
mov
cmpl
add
mov
and
push
fisttpl
sub
into
xlat
jae
data16
repnz
mov
cmpsl
cmp
fidivrl
sub
into
fstl
pushf
dec
pop
pop
jecxz
fnstcw
or
jecxz
push
mov
das
or
insl
dec
ss
sbb
cli
and
mov
sti
daa
ret
aaa
stos
out
aad
or
push
dec
cmp
jmp
xchg
or
xchg
push
adc
lret
cmp
inc
pop
fldcw
xchg
add
mov
push
js
jecxz
or
sahf
rcrb
mov
imul
jecxz
push
xor
sub
das
lods
int3
in
mov
gs
sahf
push
pop
sti
in
popa
adc
push
xchg
iret
dec
sub
cmpb
scas
pop
inc
test
xchg
pop
xchg
or
fldcw
cmpsb
insl
cmp
test
xor
int
or
mov
push
mov
jmp
push
cmp
imul
inc
call
add
pushf
add
add
dec
and
jno
push
mov
xor
adc
cli
jg
jle
inc
xchg
inc
pop
sub
dec
js
pushf
mov
mov
push
push
push
loope
sub
cwtl
inc
and
pop
push
dec
mov
lahf
inc
sbb
add
loopne
cmpsb
sub
and
pop
sbb
mov
adc
test
jo
dec
cmpb
loopne
sarl
dec
stc
leave
mov
xchg
fs
push
dec
repz
mov
or
sti
std
fidivs
sbb
push
ret
test
daa
jbe
std
push
push
orb
outsb
xchg
jns
pushf
push
addb
fs
divb
mov
mov
or
sub
sbb
push
shrl
cmp
leave
xor
add
push
push
xor
lahf
dec
jp
mov
xchg
xchg
mov
lock
fs
orl
scas
arpl
add
and
jge
jp
adc
pop
lret
test
out
cmc
inc
inc
xchg
popf
popl
push
ds
xchg
mov
adc
jl
into
sbb
fstpl
icebp
int3
or
sar
mov
insl
sbb
lret
and
cltd
mov
in
shlb
jp
insl
dec
in
enter
and
cltd
cmp
xor
adc
mov
lods
pmaddwd
pop
ret
cmpsl
cmp
out
loope
push
push
aaa
rorl
sbb
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
test
aas
lcall
jle
aas
rorl
and
push
adc
adc
repnz
inc
lock
call
das
inc
xor
push
sub
inc
and
xchg
inc
rcrb
movsb
pop
aam
stos
idivl
xor
sub
jnp
bound
jnp
int3
pop
test
cli
and
insb
pop
out
push
and
hlt
jae
adc
jbe
loopne
lods
sub
fsubs
dec
xor
xor
jmp
pop
js
or
ds
mov
out
mov
ja
inc
push
push
mov
les
add
pop
mov
imul
adc
push
jae
test
outsl
icebp
dec
in
dec
out
pop
int3
test
xchg
or
and
cld
push
and
out
adc
enter
shll
test
lahf
mov
out
sbb
inc
mov
arpl
and
inc
rcrb
lock
mov
mov
xor
mov
cwtl
pusha
das
loope
push
lret
flds
rcrb
or
stc
or
xchg
lret
popa
sbb
pop
mov
icebp
icebp
in
subb
jnp
test
sub
repnz
push
and
lret
mov
rorl
pop
insb
adc
mov
push
jne
stos
neg
mov
sub
xchg
sub
mov
out
cmpsb
rorl
pusha
stos
cs
jno
stc
jp
dec
cmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
clc
push
ret
sbb
add
cli
jg
jle
lods
mov
pop
jns
xchg
mov
ljmp
enter
pop
sub
push
outsl
sub
push
cld
lea
ret
pop
int3
pop
dec
pop
inc
rcrb
mov
dec
shrl
scas
ss
test
adc
adc
lock
fs
sbb
js
rcl
or
fidivl
dec
cmp
sub
out
and
xchg
and
lahf
iret
add
stos
adcl
xchg
rorl
inc
xor
jmp
inc
mov
das
movsb
popf
sub
xor
lea
fs
dec
or
aaa
pop
pop
mov
pop
pop
jnp
in
or
lods
xchg
in
lret
sub
iret
xchg
ds
lods
cmp
cld
jae
mov
repnz
icebp
pop
cmpsl
pop
mov
and
and
popf
data16
ret
add
lret
xchg
cli
daa
xchg
dec
icebp
adc
test
cmp
sbb
lods
rorl
adc
fnsave
jo
or
pop
push
cmp
cs
push
fidivl
dec
cmp
mov
mov
lea
push
dec
cli
or
into
outsl
in
int
in
popf
jae
jmp
add
push
sbb
mov
jmp
ret
mov
mov
push
or
fcom
int
adc
int3
jmp
loope
ljmp
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
pushw
daa
ljmp
jle
addr16
out
adc
mov
push
cmp
jo
pop
leave
push
lret
lods
loop
sub
xlat
pop
xor
pop
divl
dec
cmp
jmp
fwait
mov
inc
call
arpl
mov
lods
pop
in
jecxz
adc
xor
mov
rcl
xchg
pop
push
fistpll
xor
dec
xor
inc
dec
xor
ljmp
mov
ja
mov
mov
out
hlt
insb
mov
jne
orb
movsb
in
xor
loopne
inc
mov
popa
adc
fcoms
xlat
fwait
push
push
dec
push
stos
pusha
push
mov
and
outsl
xor
inc
mov
or
shll
mov
out
ds
xor
mov
or
inc
add
filds
cmp
push
dec
shl
les
lahf
cmp
lret
in
out
icebp
stos
cmp
jecxz
and
sahf
push
rol
pop
sarb
cs
xlat
inc
sbb
mov
dec
sti
dec
sahf
xchg
dec
jmp
out
mov
stc
je
mov
xlat
lods
leave
jg
jne
fistpl
lcall
lahf
fidivs
xlat
pop
xor
push
add
pop
fisubs
pop
dec
lods
cmp
push
shlb
mov
fnstcw
int
ja
xchg
mov
iret
insl
ficoms
stos
sbb
sahf
adc
xchg
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
dec
mov
jle
jg
jle
fs
cmp
and
test
xchg
sub
sbb
cmp
ja
push
aaa
cmp
dec
xor
add
jbe
movsb
dec
insl
stos
enter
add
jo
imul
push
enter
sti
inc
or
cld
jno
jnp
cmpb
push
xchg
sub
aad
cmpsb
jnp
aaa
jmp
insb
cmp
enter
sbb
out
or
jge
sti
push
jg
ret
and
and
aas
dec
xchg
fcmovne
inc
into
fidivrs
xlat
repnz
in
inc
mov
pop
sbbl
orb
and
add
jo
outsl
xchg
lods
xor
int
cmp
push
call
roll
arpl
gs
ja
test
stos
mov
and
call
sub
push
mov
or
out
lret
pop
xchg
ret
icebp
inc
jg
into
fildll
xchg
jmp
push
or
push
dec
cmp
and
xchg
sub
push
mov
sbb
push
lret
and
adc
xchg
jne
add
lods
pop
inc
dec
shrb
sub
nop
add
out
ds
test
out
orb
lcall
and
rcrb
sbb
mov
xor
jne
shrl
ret
pop
call
mov
xor
add
add
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
stos
or
jle
push
lret
xchg
mov
sub
push
xlat
jns
es
or
pop
adc
ds
ret
int3
jecxz
xchg
mov
sbb
xchg
lds
adc
fucomip
out
xchg
fbld
or
in
jg
lock
mov
jmp
cmpsl
or
mov
mul
push
cltd
hlt
xor
or
jp
lret
les
cwtl
les
shrb
and
lock
jle
sub
push
dec
add
mov
xorl
int
jns
xlat
pop
mov
shll
stos
out
fisttpl
clc
xorb
lret
cs
enter
mov
mov
or
clc
shrl
push
sbb
daa
ret
mov
xor
inc
aam
mov
pop
and
fwait
push
sbbl
dec
sbb
cld
sbb
pop
push
rcrl
or
sbb
push
mov
fcmovnu
pop
xchg
fisttpl
into
xchg
stos
jae
jo
mov
xor
adc
lcall
loopne
or
loop
lods
fwait
pushf
xor
inc
cmpsb
push
lahf
inc
ss
ds
insl
scas
shlb
jo
dec
inc
dec
pop
shl
mov
enter
adc
outsb
push
cmp
cmpsl
in
andb
out
daa
scas
pop
mov
fidivrs
pop
out
pop
clc
xchg
add
les
out
xchg
sub
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
cltd
adc
mov
cli
jg
jle
lcall
out
jno
hlt
or
add
roll
flds
aad
push
in
and
xchg
cmp
fwait
iret
or
std
divps
adc
mov
inc
adc
add
and
in
repz
loope
cmp
hlt
xor
lahf
dec
pop
outsl
scas
jb
mov
lret
shll
subl
mov
fs
mov
cmpsb
cmp
sub
subb
jp
hlt
mov
rclb
jbe
insb
fstpt
jecxz
out
orl
inc
jbe
mov
jp
push
es
adc
lret
inc
call
xchg
xchg
sahf
cmp
rorl
push
pusha
push
icebp
popf
lret
jno
cmc
inc
add
mov
lret
dec
and
ljmp
cltd
add
ja
fadds
or
subb
lods
jb
mov
aas
mov
lcall
dec
dec
mov
repz
adc
mov
jns
and
push
add
daa
xor
adc
cltd
lcall
shll
loop
or
push
out
pusha
imul
cmp
data16
mov
adc
or
push
push
insb
movsb
ret
test
or
pop
stos
dec
add
enter
ja
jg
adc
xchg
xlat
dec
rcll
mov
mov
loopne
js
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
test
jle
jg
jle
mov
fwait
lahf
cmc
xbegin
cs
ja
js
xorb
push
bound
mov
pop
int
test
xchg
mov
movsl
pop
dec
jl
mov
mov
or
dec
add
or
mov
dec
mov
out
push
lret
pop
rcrl
jle
adc
jle
mov
lds
inc
mov
in
shll
popf
inc
sbb
ret
sar
inc
jl
push
mov
or
mov
mov
sbb
push
dec
jge
mov
fnsave
add
xchg
xchg
add
xorl
outsb
cmc
jmp
rol
test
push
jmp
push
pop
je
xor
mov
shlb
pop
or
pop
sarl
hlt
test
sub
les
insb
dec
mov
dec
aam
cmpb
out
sub
adc
sarl
shll
lods
push
arpl
arpl
mov
cmc
mov
mov
pushf
lock
inc
push
jae
adc
mov
push
popa
mov
mov
popf
xor
mov
lods
sbb
int3
call
js
mov
jnp
dec
gs
pop
lret
fists
push
cmpsb
xchg
mov
adc
je
xchg
outsb
add
aas
enter
js
aaa
adc
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
mov
cli
jg
jle
push
testb
add
jmp
aas
mov
out
add
push
dec
xchg
int
pusha
pusha
cmp
cmp
adc
pop
rolb
pop
das
and
and
xchg
jmp
sub
scas
jmp
sub
push
inc
add
push
mov
nop
fsubr
je
sbb
mov
sbb
inc
and
sub
mov
pop
mov
cmpb
push
jge
add
lret
mov
stos
pop
outsb
xchg
xor
add
mov
cmp
inc
mov
sub
iret
or
and
aam
sub
xor
xchg
imul
xchg
lods
push
sub
into
add
decl
push
cli
int
test
sbb
cmp
pop
lods
imul
ljmp
mov
mov
int3
out
and
ja
loope
imul
int3
notl
aas
lea
ja
jno
movsb
stos
jle
in
neg
sbb
jmp
mov
jb
inc
mull
inc
dec
ss
mov
jns
insl
ja
aad
xchg
pop
jbe
pop
adc
arpl
pop
lock
pop
inc
mov
shlb
repz
xchg
insb
xchg
sti
sub
subb
push
pop
push
addr16
mov
pop
rcl
xchg
lahf
call
mov
mov
add
pop
jmp
add
mov
adcb
hlt
mov
jg
jle
and
pop
pop
and
jge
ss
fcomp
sbb
push
push
adc
and
dec
cmp
jecxz
add
stos
jae
pop
fbstp
xchg
test
lret
shr
jne
jecxz
push
inc
adc
mov
pop
out
and
mov
and
jp
arpl
inc
adc
cmp
out
push
mov
push
pop
inc
cmpb
pushf
push
jbe
lret
leave
pop
ret
and
pushf
out
dec
les
inc
push
xchg
bound
push
loopne
jge
cltd
inc
adc
aaa
call
pop
push
fistpll
int
cmp
jno
sub
lods
xor
push
lahf
sbb
adc
fisubrs
mov
sahf
dec
mov
push
cmpsb
idivb
mov
loop
es
mov
dec
mov
cltd
leave
mov
mov
mov
out
and
mov
jno
and
rorb
mov
add
lods
outsl
cmp
insl
pushl
daa
rorb
leave
cmp
aam
add
cmp
lods
jge
cmp
mov
dec
add
stc
pop
adc
dec
and
dec
and
lcall
push
sub
out
loop
sbb
testb
shll
jmp
iret
pusha
testl
push
filds
mov
jle
push
mov
pop
or
adc
jo
dec
jne
iret
iret
rorl
outsb
addr16
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
mov
adc
jle
cmpsb
cmp
loope
adc
mov
jbe
enter
out
mov
xor
cmp
popa
inc
popa
sbb
test
and
mov
jmp
or
dec
jb
jge
push
adc
add
pop
fmul
shrb
push
jg
cld
cltd
add
mov
outsl
sub
ror
jp
repnz
test
mov
jne
xor
sarb
sbb
cs
clc
xor
scas
jnp
xor
or
cmpsl
mov
popa
or
stos
sbb
or
sub
inc
dec
repnz
mov
gs
loope
push
sbb
cmp
shrb
lods
or
cmp
pushf
cmpsl
in
mov
mov
cmpsl
xchg
sub
xor
test
inc
hlt
and
cld
cmpsb
imul
sbb
pop
pushf
push
into
out
pop
fcoms
js
and
push
and
jge
xor
ljmp
dec
and
nop
leave
test
adc
mov
mov
cmp
sub
or
dec
mov
ja
in
jmp
jb
push
xchg
aas
dec
mov
sbb
mov
inc
popf
sub
cmpsb
dec
enter
jmp
fs
or
add
inc
and
pop
std
push
add
adc
inc
mov
sbb
sub
jl
push
sti
fisubl
mov
mov
leave
push
dec
xor
out
popa
xor
push
imul
pop
dec
xchg
push
mov
lods
adc
ja
cmp
and
sub
lea
xchg
xchg
dec
xchg
bound
cltd
stos
pop
into
dec
mov
push
mov
and
xchg
push
gs
mov
cmp
in
test
mov
push
adc
fwait
xchg
xchg
and
js
ret
inc
lfs
into
fnstsw
pop
aam
push
icebp
mov
rorb
lds
mov
xor
xchg
insb
lock
and
jb
in
lahf
jnp
jnp
jbe
dec
sub
sub
out
in
mov
ds
pop
cmp
mov
push
negl
loope
mov
ljmp
adc
imul
cmpsb
mov
inc
mov
jle
dec
pop
xlat
loopne
fnstsw
and
mov
or
cmp
sti
add
mov
sub
pop
mov
mov
int3
lds
into
xchg
xchg
pushf
sub
icebp
mov
or
hlt
into
lahf
mov
adc
lret
fxch
xchg
ret
je
mov
popf
add
mov
fbld
push
fldcw
xchg
rcl
cmpsb
jns
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
mov
mov
adc
pop
jl
jle
popa
xor
and
data16
lret
lret
fistl
stos
ss
ficoms
popa
dec
cmp
mov
orb
sub
icebp
sbb
xchg
jne
fcoms
dec
adcl
xchg
xor
mov
dec
mov
aad
hlt
adc
jne
jecxz
dec
jge
xor
xchg
mov
mov
into
push
push
shll
pop
mov
sbb
jns
xor
aam
mul
cmp
cli
iret
movsl
bound
lret
movsl
in
addr16
cwtl
cmp
into
imul
insb
insl
mov
and
xchg
lds
cld
mov
or
mov
pop
dec
aas
push
xor
pop
incl
xchg
into
sub
push
testl
bound
dec
rolb
pop
xchg
xchg
out
loope
into
jno
mov
push
mov
iret
shrl
in
push
clc
jmp
mov
adc
dec
or
jo
sbb
jae
icebp
ja
into
pop
xchg
xchg
scas
icebp
in
push
cwtl
cs
pop
jne
dec
jno
sub
fidivrs
push
mov
push
xchg
mov
int3
xchg
cld
mov
nop
pop
call
mov
repz
mov
push
rcrl
xor
ret
mov
add
push
loope
push
cmp
in
call
lcall
dec
icebp
pop
test
gs
fcomps
fnstcw
les
jbe
into
das
pop
push
mov
sub
adc
mov
mov
add
icebp
inc
js
das
pop
daa
sub
test
pop
adc
popf
jb
lods
or
lock
pop
pusha
jmp
xor
out
push
shlb
xor
pop
mov
and
or
xchg
ljmp
xchg
push
inc
or
ja
repz
push
mov
add
mov
sbb
mov
mov
dec
mov
lock
gs
mov
lahf
int
loopne
fidivl
aad
cmpsl
sub
mov
inc
add
mov
dec
lret
and
out
push
stos
std
add
mov
hlt
add
icebp
mov
adc
or
fisubrs
or
fstps
sub
and
xchg
leave
jbe
ret
stos
mov
sub
jne
jno
pop
ret
sub
add
xlat
push
ljmp
jns
mov
xchg
mov
add
add
rorb
test
rclb
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
mov
or
jle
pop
jl
jle
push
xor
arpl
aam
push
lret
dec
mov
stos
inc
clc
xchg
jp
xor
sub
add
pop
xchg
mov
out
pusha
ficomps
ljmp
ret
mov
ds
mov
int
gs
mov
pop
gs
test
or
pushf
shr
and
cmpsl
fstps
sbb
push
std
popf
mov
outsl
aaa
or
cwtd
xchg
dec
fld
cmpsl
mov
je
fwait
cmp
pop
inc
adc
adc
aad
into
pop
inc
mov
and
mov
outsb
and
pop
adc
mov
and
mov
cmp
or
pop
dec
or
mov
jne
push
dec
add
pop
daa
or
dec
sahf
add
js
jl
icebp
ret
jb
lret
mov
and
aas
imul
push
mov
sbbb
data16
mov
mov
loope
out
push
insb
cmp
inc
mov
int3
add
xchg
xor
jge
repnz
xor
je
rcrb
lret
lea
dec
mov
in
cld
xor
mov
add
ds
sub
mov
mov
out
mov
sub
sub
mov
jle
call
xor
inc
adc
insl
outsb
mov
add
mov
cmpsb
inc
pusha
hlt
out
enter
repnz
leave
mov
aad
jge
mov
mov
and
add
sbb
sub
xchg
in
push
pop
inc
mov
jg
pop
mov
scas
cmp
test
pop
sub
add
sub
jmp
dec
jbe
dec
mov
or
fistpl
or
fidivrl
scas
and
fisubrs
je
in
stos
fdivrl
or
xchg
cmp
mov
jmp
mov
pop
xchg
cmovo
pusha
push
inc
push
lcall
xchg
dec
or
inc
xchg
inc
pushf
loope
mov
or
jp
imul
inc
cmp
mov
imul
pop
in
cli
cmp
sbb
mov
addr16
jne
cmp
xchg
jns
inc
das
pop
xchg
xor
aaa
cmpsb
push
cmpl
xor
cmpsb
mov
js
xchg
adc
fcompl
or
xor
dec
adc
movsb
sub
adc
or
lcall
pop
adc
xchg
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
xchg
push
je
jle
pop
jl
jle
and
inc
xchg
adc
jl
fsubrs
jae
sub
and
imul
scas
sbb
sub
das
ss
jge
xchg
xchg
movsb
inc
rcl
push
scas
cmpsb
out
xrelease
rcrl
lods
rcrl
sbb
pop
int
outsl
stos
aaa
xchg
inc
mov
lcall
adc
lret
cmp
xchg
aas
ret
shrl
subb
aam
imul
ss
mov
fwait
outsl
daa
fwait
nop
pop
stos
shll
add
cli
jle,pn
pop
add
rclb
inc
vminpd
out
aas
fsub
sti
dec
cltd
sbbb
dec
movsb
hlt
adc
push
lret
inc
repnz
cmp
jl
cmp
pusha
es
incl
testb
rol
cmp
fstps
call
movsb
cmc
andl
jb
or
out
shll
and
mov
adc
stc
xor
js
cld
rolb
iret
jle
and
mov
data16
stos
dec
jp
gs
pop
jg
aad
jae
pushf
jmp
sbb
aam
mov
add
mov
fcoml
or
cmp
das
fidivrl
mov
push
adc
push
mov
pop
out
or
cmc
ret
sub
rorb
fiadds
xadd
cmp
test
stc
or
and
jns
call
lea
test
xchg
leave
mov
mov
jbe
lcall
and
adc
xchg
pop
insb
jecxz
inc
cmpl
adc
mov
or
inc
adc
lcall
inc
test
inc
jno
out
xchg
icebp
out
lcall
jp
dec
in
and
xor
adcb
or
inc
lds
mov
sbb
ss
pusha
enter
dec
push
lods
lods
repz
imul
loop
lods
push
sbb
push
xor
jg
in
mov
sahf
pop
jae
cld
sub
or
out
push
jmp
data16
enter
or
mulb
xor
fwait
nop
ret
imul
jns
inc
sbb
pop
fisubrs
xor
jnp
repnz
fldt
ret
mov
push
hlt
push
mov
jg
rclb
mov
hlt
add
push
cmc
movsl
xchg
hlt
inc
mull
hlt
dec
lret
xor
mov
inc
jne
sarl
bswap
dec
cmp
mov
jno
fdivrp
push
fcoms
mov
jo
movsb
stos
test
es
inc
or
inc
pop
push
xor
jmp
add
dec
popa
jno
jne
xor
jle
aaa
hlt
divps
jle
pop
jl
jle
aas
pop
adc
mov
jmp
int3
cmp
ljmp
push
int3
push
shlb
stc
jg
ja
popa
jo
lcall
push
xor
adc
dec
out
pop
and
add
mov
sbb
and
js
shll
cli
fsub
fsub
dec
mov
jp
adcl
test
jge
add
addr16
ret
lds
gs
out
test
dec
or
rclb
pop
loopne
test
xchg
xchg
push
shrl
outsb
fdivrl
xchg
bound
xor
data16
mov
je
fldt
rcrb
je
sub
inc
adc
hlt
imul
sbb
lock
orb
in
jns
mov
pop
xchg
stos
mov
adc
std
mov
add
pushf
lcall
or
stos
aaa
adc
icebp
insb
push
pop
insl
xchg
pop
push
stc
push
mov
lahf
or
cwtl
hlt
loope
out
adc
out
dec
icebp
inc
int3
mov
cmp
adc
outsl
inc
jns
jg
sbb
cmp
iret
test
push
popf
and
fnstsw
out
or
mov
xchg
inc
inc
cwtl
push
shll
ficompl
outsb
outsb
lret
adc
rol
xchg
inc
lock
loopne
jb
shl
or
movsl
subb
in
dec
ret
adc
lods
mov
mov
mov
popa
sbb
pop
loop
cmp
sub
fidivs
loope
outsl
push
jnp
ds
push
mov
call
jmp
lods
fmuls
mov
outsb
fmuls
mov
outsb
inc
pop
mov
pop
jnp
cmp
paddb
or
dec
adc
cmp
inc
push
inc
cmpsl
add
ljmp
mov
or
test
stos
push
in
dec
push
add
stos
gs
mov
xchg
lret
inc
rolb
fistpl
fistps
imul
jg
sbb
jne
and
orb
dec
pop
gs
test
mov
pop
jmp
sbb
stos
test
in
and
mov
pop
pop
or
inc
dec
mov
push
push
jmp
ret
mov
loope
xor
dec
lds
rolb
in
arpl
fmuls
mov
js
stc
push
pop
dec
cld
inc
push
pop
dec
lahf
mov
gs
enter
adc
mov
fistpl
scas
jge
adc
inc
es
or
adc
cli
cld
wbinvd
pop
nop
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
fsts
sbb
jl
jle
push
sub
mov
negb
cmpsb
movsl
mov
fstpt
clc
xor
out
fists
cs
dec
rorl
mov
mov
sbb
add
push
cmp
lcall
testb
cmp
clc
dec
mov
pop
mov
pop
xor
lret
and
in
xor
pop
out
add
fsubrl
mov
or
fyl2x
inc
adc
je
and
insb
repz
cmp
outsl
mov
insl
fcmovnu
and
inc
xchg
lret
sub
and
inc
push
lds
ficomps
sub
xchg
dec
mov
mov
add
and
mov
in
mov
hlt
cmpsl
iret
popf
jo
add
xchg
cmp
xorl
outsl
or
decb
pop
dec
sub
adc
cmp
jns
mov
shll
bound
mov
mov
fwait
adc
aad
pop
cmp
dec
mov
rorl
adc
push
stos
icebp
icebp
loop
loope
jo
jle
add
hlt
jl
xchg
daa
ja
es
dec
push
mov
sbb
inc
add
xlat
int3
xor
hlt
mov
lcall
dec
shlb
and
addl
in
ljmp
or
sub
mov
mov
cwtl
cmc
adc
testl
lret
iret
fisubrs
enter
sub
or
lock
xchg
xchg
jmp
sbb
ret
int3
fildl
popa
cmp
mov
in
test
pop
ret
xor
out
mov
or
loopne
into
xchg
cli
pop
stos
std
xchg
xchg
arpl
mov
test
stos
and
add
jmp
aaa
pop
and
pand
pop
jb
push
repz
cmpl
cmp
or
icebp
push
insb
lods
or
shll
rcrb
int
adc
fnstsw
jo
jo
adc
cmp
xchg
pop
hlt
push
sbb
pop
int
push
dec
cmpsb
inc
fbld
clc
cld
sub
sub
mov
popf
pop
shr
iret
test
adc
sbb
mov
les
mov
adc
jb
test
mov
sub
fsubrl
xchg
stc
and
out
mov
and
clc
sbb
int
outsl
xchg
lods
add
pop
mov
cmp
negl
clc
cmp
stos
xlat
sbb
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
rcrl
jle
jl
jle
add
or
push
or
pusha
adc
pop
in
jo
insl
xchg
gs
sahf
pop
xchg
push
cmp
enter
xchg
cs
pusha
cmp
ss
filds
jbe
jmp
sub
push
dec
test
ret
jmp
and
push
push
inc
idivb
dec
pusha
pop
lahf
cmp
pop
add
dec
sub
dec
push
pop
mov
das
sub
sub
push
repz
mov
xchg
pushf
hlt
inc
adc
cmp
pushf
adc
jae
into
inc
fdiv
dec
stos
ret
lds
adc
lcall
mov
dec
pop
mov
fbstp
mov
jns
rol
sbb
add
testl
or
add
jns
fbstp
ret
bound
and
ds
mov
ljmp
adc
loope
sbb
pop
out
cmpsb
jmp
push
add
pop
cmp
push
cld
scas
idiv
xor
push
nop
mov
rep
jno
push
adc
btr
jp
aaa
inc
adc
iret
sub
fldcw
mov
add
sbb
in
decl
cli
jns
mov
sub
adc
pop
fucom
daa
ficoms
sbb
shll
lock
jbe
mov
mov
sbb
frstor
inc
cmpb
jae
push
fldcw
nop
test
andb
xor
xorl
jne
add
sub
xchg
mov
xchg
or
push
jg
aaa
jmp
fldt
mov
pop
push
loope
dec
nop
sub
je
in
or
daa
clc
inc
std
aaa
mov
mov
shrb
mov
mov
int3
push
adc
stc
ret
ret
cmp
aas
adc
lea
sub
stc
jl
data16
std
mov
jmp
xchg
arpl
out
mov
rol
rclb
jl
pusha
loopne
mov
and
jecxz
push
lds
stos
std
adc
add
fldcw
and
lcall
or
aad
push
xor
xlat
mov
mov
in
mov
test
sub
gs
mov
mov
divl
sbb
lahf
into
push
insl
push
aam
or
mov
repz
cmp
xor
mov
cltd
jno
adc
push
xchg
je
mov
xor
sbb
xchg
cli
andb
or
mov
cmc
ret
cld
jecxz
xchg
xchg
sbb
xchg
std
test
loopne
xchg
and
addr16
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
fldcw
jle
jl
jle
mov
in
mov
leave
dec
push
xor
dec
cmpsb
add
mov
push
push
lcall
add
sbb
or
inc
mov
push
daa
and
xchg
fists
dec
pop
inc
out
mov
add
jg
jle
lds
mov
sub
je
or
lret
jne
sbb
pop
and
add
fmul
dec
mov
pop
add
pusha
mov
call
jmp
dec
iret
cmp
out
push
push
inc
addl
xchg
add
and
leave
and
ret
xor
es
test
and
inc
cmp
cmp
adc
sti
sub
fldt
mov
jae
clc
test
jle
movsl
mov
andb
sbb
lcall
xchg
imulb
dec
test
cmp
adcl
pop
cwtl
sub
out
out
mov
dec
bound
scas
pusha
ret
inc
cld
jae
lods
mov
in
mov
and
jg
mov
add
xor
add
pop
mov
into
inc
sub
push
xchg
inc
adc
xchg
cmp
aaa
mov
fs
dec
stc
inc
lahf
cwtl
sbb
xchg
dec
and
mov
mov
and
rcrl
mov
push
mov
mov
pop
and
cmp
jbe
adc
and
sub
mov
daa
mov
push
adc
lret
xlat
mov
adc
cmc
jmp
sub
outsl
pop
pop
popf
mov
mov
mov
xor
movsb
pushf
cmp
aas
loopne
push
insl
xor
cmp
jo
cli
subl
inc
fs
pop
movsl
lret
js
jg
scas
fmulp
xor
mov
pop
add
into
mov
mov
xchg
or
aam
lret
sbb
adc
cmp
inc
or
int
out
dec
scas
jnp
call
aaa
sbb
jnp
sti
out
adc
jnp
push
pop
and
adc
and
and
fistpll
mov
mov
repz
push
arpl
popa
pushf
xor
leave
mov
inc
test
cmp
adc
loope
ret
xchg
push
f2xm1
adc
xchg
add
enter
push
inc
adc
mov
mov
sub
adc
dec
add
pop
jmp
and
or
mov
in
xchg
xchg
push
lods
insb
iret
ja,pt
ss
cmp
dec
adc
mov
stc
pop
shrl
cwtl
jle
add
aad
cli
in
jg
pop
notb
stos
inc
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
testb
sub
jle
jl
jle
outsl
std
cmp
fwait
sub
clc
dec
push
mov
nop
outsl
cmc
xchg
push
in
unpckhps
xchg
mov
rcrb
dec
mov
mov
les
dec
leave
inc
push
into
test
imul
xlat
xor
mov
pop
and
lds
lahf
int3
sbb
fwait
xor
mov
push
mov
scas
mov
inc
cmp
mov
aaa
or
dec
insb
add
pop
pop
jl
js
add
enter
xor
mov
sub
cmp
arpl
jecxz,pt
rcr
inc
push
add
iret
movsb
das
jp
push
push
iret
gs
hlt
adc
pop
push
or
add
mov
xor
sbb
or
fisubrs
xor
ja
shrb
dec
arpl
mov
outsb
inc
sbbb
mov
movl
sub
imul
aas
insb
cmc
mov
repnz
inc
and
push
sub
mov
adc
xor
das
fwait
sub
shll
mov
out
jns
inc
cltd
in
jno
jle
bound
jae
sbbb
jg
inc
scas
cmp
jne
pop
insl
jmp
psrld
xor
jmp
jo
test
cmp
cmc
mov
dec
push
push
jb
xor
xchg
jp
popf
cwtl
icebp
cmpsb
sbb
orl
mov
xchg
lods
repz
xchg
jge
push
adc
rorb
mov
or
pop
inc
int
xor
ret
pop
push
imul
lret
xchg
jle
das
adcb
fsubs
adc
fidivrl
insb
addl
lret
arpl
cmc
add
sbb
fwait
pop
push
arpl
jmp
lods
stc
xchg
negl
leave
lret
jge
iret
lods
pop
ljmp
out
test
pop
jnp
mov
dec
sub
fisttpl
ret
cmpsl
loopne
cwtl
push
sbb
xlat
ljmp
adc
lahf
pop
daa
bswap
sbb
push
mov
jl
loopne
or
loope
lods
aas
lea
mov
ficomps
add
test
sbb
stos
adc
sbb
dec
imul
sub
push
shrl
cmp
and
mov
movsl
loopne
aam
outsb
sbb
or
or
mov
jbe
imull
xchg
mov
push
lods
lock
or
pop
je
data16
stc
ret
in
jg
and
mov
cmpsl
stos
pop
xchg
xor
mov
rorb
push
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
aad
shrb
jle
pop
jl
jle
cs
push
cmp
push
and
and
lods
stc
mov
or
sti
in
mov
sub
push
xchg
subl
dec
cltd
les
into
insl
xor
cltd
adc
lret
dec
iret
fiadds
jne
mov
push
jecxz
sub
cltd
fidivrs
and
shrb
js
out
pop
adc
jne
sub
je
add
in
and
scas
mov
pop
adc
xchg
lcall
and
gs
jb
jmp
inc
sbb
sti
popf
push
sub
movsl
mov
outsl
jecxz
aas
mov
rorb
adc
dec
test
sbb
dec
stos
adc
out
es
insb
pop
mov
xchg
int
rorb
pop
mov
dec
and
ret
fstpl
cmpsb
imul
and
aad
andl
dec
fcomps
dec
mov
orb
aad
jg
push
pop
push
loope
lret
outsb
mov
fdivrl
xchg
mov
mov
sbb
cli
xchg
lret
fcoms
add
aad
mov
sub
pop
push
icebp
mov
loopne
dec
xchg
jmp
mov
outsb
mov
jae
adcl
shl
ret
push
dec
mov
add
pop
sbb
mov
mov
int
lahf
lret
in
cli
movb
je
add
nop
sbb
daa
lcall
iret
fmul
out
push
movsl
sub
pop
xor
fsts
fcmovne
insl
aaa
fldenv
ja
fcoml
aad
push
sahf
push
int3
xor
push
fidivrl
sbb
ljmp
xor
in
add
xchg
jno
push
fs
sub
mov
mov
notl
test
leave
jbe
insl
in
popa
pop
arpl
ret
dec
push
loopne
cmpsb
fcompl
xlat
adc
movsb
out
xchg
jl
or
xor
jg
dec
je
xchg
mov
cmp
lret
leave
pop
adc
das
mov
ficoms
gs
insb
gs
xchg
mull
insb
aaa
jle
xchg
cmp
sub
cmp
push
adcl
fcoms
cmp
xchg
sub
mov
dec
iret
ljmp
es
cmpsb
jmp
das
pop
cmpsl
testl
mov
and
stos
fcomp
pop
lea
out
dec
fisttps
test
jb
fdivp
mov
push
mov
and
lret
pop
push
out
pop
fnstsw
pop
jmp
pop
fwait
pushw
fsub
mov
lds
jecxz
sub
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
inc
lea
ss
sub
jle
or
or
repz
scas
xchg
cmp
fucomi
enter
rcl
out
mov
push
jb
sti
and
adc
or
dec
xchg
les
sub
mov
xlat
iret
add
dec
aas
add
push
sar
sub
stc
mov
iret
scas
cmp
shll
and
idivb
jae
pop
xor
subb
mov
test
push
fldl
fistpll
mov
xchg
xor
cmp
call
inc
cltd
jecxz
mov
loop
pop
stos
and
add
mov
icebp
test
dec
addr16
jl
mov
testb
xlat
lret
test
test
dec
lcall
inc
xor
mov
call
cmc
sub
jmp
xor
sub
inc
fisubs
dec
push
jnp
cmpsl
adc
lahf
fldcw
adc
scas
pusha
dec
repz
ja
fdivs
sbb
test
addl
sbb
in
cmp
cmp
xchg
mov
and
sti
test
mov
mov
sahf
ja
xchg
jae
movsl
pop
dec
adc
push
roll
mov
and
xchg
sbb
icebp
cmpsl
movsb
fidivrl
push
add
mov
add
mov
clc
popf
aas
popa
cld
in
cld
rcr
clc
jb
pop
push
gs
inc
rclb
sbb
ret
pushf
icebp
push
cmpsb
adc
movsb
call
xchg
lahf
lea
jl
sar
rclb
mov
mov
mov
test
rcrl
push
ljmp
jae
pop
daa
or
int3
mov
in
jg
adc
jno
add
iret
push
ja
sbb
and
xchg
push
mov
movsb
dec
mov
ja
jo
icebp
aad
push
dec
sub
or
aad
lahf
repz
hlt
xchg
ja
pushf
add
call
popf
or
adc
jnp
ucomiss
dec
push
inc
jmp
and
cld
sbb
xchg
cmpsl
mov
sub
fmuls
pop
dec
icebp
mov
pop
sahf
and
cmp
jbe
ret
je
ret
sbb
mov
fwait
xchg
stc
aad
out
in
pop
pop
sbb
into
incl
push
jnp
aaa
out
out
mov
fs
shlb
in
and
orl
xchg
lods
xchg
icebp
sbb
cmpsb
je
aaa
and
mov
sbb
mov
imul
daa
inc
jbe
in
cs
or
jge
gs
jp
movsb
lods
sbb
mov
inc
scas
bound
mov
incl
pop
xchg
into
jge
push
pop
fs
subb
inc
jbe
mov
and
mov
or
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
push
jg
inc
cmc
inc
sahf
addr16
ret
push
pop
cltd
jmp
xor
mov
mov
fdivrl
mov
ret
call
pop
loope
mov
ja
test
jl
pusha
jmp
in
pop
xchg
stos
mov
mov
rorl
mov
jae
xor
cmpb
and
pusha
stc
mov
dec
dec
stc
or
stos
sbb
icebp
push
lods
hlt
mov
mov
lcall
push
push
mov
and
in
leave
test
mov
and
rorl
add
hlt
mov
mov
mov
lods
mov
ds
jno
jg
decl
mov
lods
mov
jg
leave
les
aam
ss
jmp
cmp
gs
inc
int3
or
out
in
insl
test
outsb
or
test
leave
dec
imull
scas
xchg
rorb
stc
cmc
arpl
mov
iret
xchg
mov
lods
mov
imul
pslld
mov
orb
jo
loopne
or
fnstsw
bound
out
fistpl
imul
mov
and
jnp
insb
lds
jmp
fistpll
pop
adc
or
cld
mov
stos
rcr
mov
insl
push
jl
ljmp
mov
add
mov
add
cltd
mov
test
mov
lret
dec
mov
adc
idivl
lahf
and
cld
mov
jne
inc
mov
or
out
dec
dec
test
xchg
push
lods
xor
mov
sub
data16
cltd
nop
test
jp
jp
jecxz
mov
jne
mov
push
mov
mov
insl
or
inc
or
xchg
pop
mov
inc
hlt
in
data16
mov
inc
dec
je
lcall
into
inc
dec
outsl
sbb
cld
push
fmull
dec
dec
sbb
pop
nop
lret
mov
jno
add
adc
mov
xor
sub
or
push
pop
cmpl
es
mov
test
popa
out
mov
mov
dec
lcall
imul
mov
popa
xor
add
int
xchg
nopl
sbb
adc
cmpsb
ret
lret
adc
push
add
loop
or
push
sbb
in
adc
adc
jl
cmpsb
mov
dec
mov
mov
es
in
inc
cmp
into
inc
xchg
pop
jmp
jb
pop
cmp
fcmovne
xorl
or
in
bound
mov
cmpsl
outsb
aam
lds
fisttpl
mov
test
mov
into
cmc
jg
xchg
movb
jmp
movsb
add
int3
fnstenv
xor
neg
jmp
jne
sub
test
test
mov
push
jbe
cmpsb
xor
sub
jle
lds
mov
mov
mov
mov
xchg
mov
movsl
hlt
mov
mov
xor
jb
gs
pop
push
dec
sub
mov
mov
xor
mov
imul
mul
pop
mov
sub
mov
test
and
dec
mov
mov
push
pop
mov
ss
cmp
stc
xchg
sbb
imul
arpl
js
push
mov
sub
or
fdivs
mov
mov
jnp
sub
lods
fcoms
add
and
dec
aas
in
push
movsl
es
jns
add
ljmp
ss
scas
or
dec
pop
push
jae
andl
scas
push
lahf
xchg
dec
insl
lcall
pop
pop
subb
enter
pop
push
in
hlt
pop
mov
cltd
add
in
push
cli
ret
call
pusha
mov
das
cmp
pop
ret
and
in
sbb
mov
sbb
lea
mov
jno
dec
in
jg
jns
leave
xor
outsl
movsl
pop
xchg
sub
fwait
movsb
inc
dec
cmpl
cmp
dec
push
inc
adc
daa
jge
in
rcrl
inc
xlat
repnz
out
movsl
mov
loopne
xchg
das
xchg
das
push
pop
int3
cmpsl
test
jo
sbb
adc
jo
xor
outsb
add
dec
dec
andb
or
mov
js
stos
repz
lea
ficoms
cmp
dec
add
es
and
lods
lret
fbstp
mov
rorb
xor
xchg
dec
add
xlat
jne
scas
lods
xor
xchg
pop
in
sbb
test
lods
pop
pushf
or
xchg
cmovge
mov
bound
sub
aaa
xor
pop
sbb
leave
adc
jo
mov
call
jne,pt
jmp
mov
cmpsl
fisttpll
mov
mov
and
cmpsb
repz
xchg
mov
push
out
iret
mov
mov
adc
inc
lock
es
std
cmp
aad
mov
pusha
mov
test
daa
fsubrl
xlat
pop
mov
scas
cmpsl
add
jnp
dec
mov
jle
in
cmp
cltd
int3
push
shrb
add
fcoms
mov
test
shll
sub
fldl
fidivl
jno
sbb
cmp
xchg
sbb
inc
xor
enter
inc
and
or
sbb
jne
out
adc
pop
mov
js
cmp
in
bound
je
mov
mov
fisttps
mov
mov
push
loope
nop
fwait
pusha
outsl
out
iret
push
mov
pop
test
jne
enter
pop
mov
pop
push
enter
mov
jge
mov
cmp
fcomip
mov
push
xor
scas
cmp
and
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
jl
push
aas
jle
sub
jle
add
jecxz
inc
pop
ja
das
idivl
push
dec
push
mov
inc
std
sub
adc
addb
enter
mov
clc
mov
ljmp
stos
shll
xchg
shll
pop
fsubs
xchg
es
jmp
inc
mov
adc
out
mov
sub
xchg
jns
jp
imul
jg
in
insb
cmp
in
insb
outsb
flds
shlb
cld
movsl
mov
or
jp
cmp
mov
inc
mov
xor
inc
jns
loopne
sbbb
loopne
insb
inc
int
roll
cmpsb
add
xlat
insl
or
rcr
outsl
jle
cmpsl
mov
lahf
lcall
fcoms
dec
jne
xchg
push
arpl
or
dec
fstps
cmp
nop
pop
mov
and
stos
shlb
hlt
xchg
popf
mov
stos
pop
sbb
adc
fneni(8087
cmp
outsb
mov
cmc
loopne
leave
jo
mov
cmp
int3
dec
xchg
inc
xchg
iret
ljmp
cmp
add
jo
sti
ss
inc
xor
pop
and
add
cmp
lock
shl
push
or
inc
add
mov
jne
jnp
nop
xor
mov
jmp
push
mull
mov
add
mov
mov
insb
mov
in
lods
ret
pop
push
or
mov
xchg
cmc
sub
and
jno
push
test
jno
cwtl
mov
loop
xchg
ffree
gs
jp
int3
fdivrs
xchg
jae
leave
aad
cmpsl
fisttps
inc
sub
mov
pop
ss
mov
inc
xor
inc
adc
mov
stc
or
and
lahf
scas
and
mov
insl
decb
mov
xorb
pop
inc
mov
dec
mov
cmpsb
push
or
leave
dec
imul
mov
or
shrb
add
adc
dec
negl
ret
lds
mov
mov
test
popf
repnz
push
pusha
cmc
mov
call
aad
cs
mov
stos
xorb
push
inc
aas
dec
jno
inc
push
cmpb
shrb
sbb
xor
mov
mov
pop
fimull
push
inc
ret
fsubrl
cltd
rcrl
dec
dec
fistl
inc
ret
ret
fs
or
mov
add
outsl
xchg
mov
sti
inc
push
lds
add
ds
lds
lcall
dec
das
mov
adc
jg
pop
sub
jae
in
stos
dec
xchg
pop
push
rol
lahf
mov
and
in
and
cmpsb
imul
jnp
mov
sub
mov
push
cmpsb
popl
sbb
jp
mov
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
jo
cmp
mov
int3
inc
inc
in
inc
ljmp
aas
jb
shll
adc
mov
pop
sbb
dec
out
fisubrs
inc
js
cli
fmuls
pop
sbb
into
mov
mov
ds
cmp
fwait
jne
and
or
pop
sbb
push
adc
dec
push
mov
mov
mov
lahf
test
mov
xchg
lahf
mov
inc
repnz
enter
popf
shll
fs
stos
xchg
push
sub
pop
add
xchg
adc
lods
xlat
insl
int3
jp
bound
add
mov
jb
pop
push
test
test
js
outsb
dec
pop
push
or
subl
nop
pop
dec
pop
inc
dec
loop
push
mov
pop
lret
das
sbb
jl
inc
arpl
adc
insl
mov
xchg
lea
sahf
ficoml
jecxz
mov
popa
int
repz
mov
add
inc
cmpsl
jmp
int3
sub
push
push
or
loopne
inc
inc
loopne
pop
scas
pusha
subl
push
mov
out
lods
push
mov
dec
jnp
bound
push
or
in
mov
jnp
pop
pushf
mov
sub
ja
cmp
mov
mov
mov
lcall
imul
aam
pop
cmp
xchg
inc
or
andb
add
ficoms
sub
cmp
repnz
insb
jno
popa
add
adc
inc
stos
push
and
xchg
clc
out
scas
popfw
add
mov
push
pop
pop
xchg
mov
call
or
sbb
add
sbb
insl
push
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
dec
popf
into
inc
cmp
mov
test
jecxz
push
popf
jns
pop
lret
pop
test
stos
dec
jnp
add
add
or
or
push
test
fsubs
pop
popf
nop
pop
fs
insl
xchg
popf
fucom
jp
and
cmp
mov
movb
test
mov
lods
rorb
push
pop
dec
cmc
mov
or
cli
jbe
repnz
movsb
shlb
out
jbe
loop
in
push
pop
filds
mov
xor
or
stc
imul
nop
mov
jp
mov
jae
push
push
lds
xchg
push
mov
sahf
sbb
push
mov
inc
jecxz
xor
xor
mov
lret
cwtl
and
rcll
ss
inc
xor
mov
es
xor
push
fldl
lea
dec
out
in
sbb
sbb
pop
ds
imul
inc
outsl
daa
ss
fistl
mov
xchg
jb
fwait
je
lret
xor
in
push
dec
rcrl
or
sbb
enter
cmpb
mov
sahf
in
xchg
aam
aaa
fldt
incl
cmp
popa
push
cs
push
adcb
xchg
push
pop
imul
cmpsb
lods
outsb
pop
popa
xor
mov
inc
out
mov
cmp
leave
lcall
lret
out
mov
mov
xchg
sub
add
sbb
int3
popf
cld
into
mov
ljmp
es
in
jmp
push
das
fwait
or
dec
cmpsl
shlb
mov
add
xchg
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
xor
xchg
shr
or
pop
push
lods
or
pusha
jmp
mov
cmp
mov
xor
mov
mov
xor
adc
or
in
enter
inc
shll
mulb
push
ss
iret
jae
add
enter
js
pop
jbe
subl
pop
iret
xchg
punpcklwd
cmpsl
mov
push
xor
je
into
andb
dec
inc
sub
or
sbbb
dec
cmpsl
into
or
push
jns
pop
xor
inc
add
adc
mov
and
cmp
mull
inc
stc
or
jae
sahf
in
lcall
xchg
jecxz
xchg
repz
lea
jo
cmp
test
pop
scas
pop
jno
cmpsl
pop
dec
pop
inc
inc
mov
jns
imul
mov
enter
mov
fcmovnb
lcall
or
pop
adcb
or
rcrl
sar
pop
jnp
aas
jmp
pushf
xor
pop
pushf
scas
lods
and
addr16
mov
rorl
fwait
cs
add
sarb
add
rcrb
and
mov
jl
sub
sbb
ret
adc
roll
fildl
push
ret
mov
pop
cmp
jecxz
dec
stos
pop
negl
pop
push
outsb
mov
call
loope
clc
adc
mov
ja
mov
sub
aam
data16
repnz
cmpsl
loopne
or
cmp
sbb
dec
outsl
dec
push
jo
push
std
sub
mov
jmp
add
test
jmp
and
in
popa
push
lret
xchg
cld
je
mov
mov
cs
mov
push
add
push
xchg
cwtl
cs
movsl
or
xor
cmpb
jne
mov
and
aad
mov
imul
loopne
cmp
fldcw
xor
sub
or
out
pop
mov
insb
lods
pop
lahf
mov
or
sub
pop
mov
jg
fsub
insb
lahf
clc
add
jle
repnz
mov
cmpl
loopne
fcoml
incb
shrl
sbb
pop
mov
lret
dec
mov
cmp
pusha
or
mov
enter
cld
test
gs
xchg
jge
cmpsl
xchg
jp
inc
push
daa
pop
push
hlt
loopne
jge
xchg
xchg
push
push
mov
fstl
out
sbb
aam
outsl
pop
push
test
hlt
in
mov
cs
cmp
lret
and
in
rolb
in
cmpsl
insl
xchg
rorl
lds
xchg
mov
jp
inc
mov
add
cld
xchg
insl
inc
imul
add
mov
mov
sbb
add
push
mov
dec
pop
add
enter
or
cmp
cmp
lcall
out
je
icebp
aad
iret
fwait
jb
mov
mov
add
jle
test
add
add
mov
xchg
pop
mov
arpl
xchg
xchg
and
xor
or
mov
stos
dec
lea
and
test
xor
inc
pusha
pushf
ds
fiaddl
add
xchg
inc
es
pushf
mov
insb
loopne
ss
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
mov
inc
or
jle
add
negb
sub
xchg
jp
cmpsb
jp
lods
sub
movl
inc
push
iret
pushf
and
push
sbb
stos
cwtl
test
cmp
mov
cmp
jmp
out
cmp
fsubrs
push
lods
push
mov
jp
xor
mov
jge
mov
shr
xchg
jge
popa
xor
movsl
xor
mov
dec
jae
adc
sub
je
cli
mov
push
cmpsl
xchg
mov
xchg
and
shlw
pusha
and
sbb
pop
jo
movsb
xchg
pop
mov
xchg
roll
push
subl
cld
cmp
pop
xor
cmp
lds
lret
or
imul
faddl
ss
jnp
sub
jne
loopne
adc
mov
imul
int3
dec
jle
imul
dec
jmp
mov
push
dec
inc
sbb
jle
sbb
jne
out
jl
hlt
test
dec
in
cmpsl
mov
and
pop
xchg
xchg
push
and
add
adc
fmull
scas
and
cmc
pop
loop
xchg
push
adc
or
mov
in
imul
pop
sub
push
shl
fincstp
addl
xor
dec
dec
lods
sub
gs
xlat
and
add
rcrb
std
pop
push
cld
adc
lods
dec
ret
mov
mov
scas
add
arpl
pop
fwait
cmp
negb
xchg
pop
outsb
daa
aaa
hlt
mov
cld
mov
ret
aaa
adc
icebp
inc
xchg
add
cli
inc
inc
in
negb
dec
pop
div
cli
int3
sbb
xor
out
orb
dec
and
xchg
mov
push
xchg
mov
jns,pt
mov
lea
xchg
je
outsl
pop
inc
movsl
daa
lret
ja
inc
js
mov
test
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
and
aas
adc
jle
add
push
xorl
int
pop
sbb
jae
daa
popa
std
fisttpl
jns
mov
lods
fmuls
data16
xchg
int
fcmovnu
mov
jmp
or
cltd
or
xor
dec
jmp
int3
inc
dec
xchg
push
or
pop
push
inc
push
out
sub
ljmp
pop
testb
mov
mov
test
or
rcrl
jnp
add
pop
int
cmp
push
dec
addr16
push
jne
xchg
push
sbb
adc
and
xchg
or
inc
test
xchg
mov
ljmp
pop
or
jp
and
enter
mov
imul
mov
jno
jecxz
sub
inc
aam
pop
pop
imul
or
lock
lret
cltd
xor
cmpb
adc
push
jno
xchg
and
jb
jg
xchg
nop
jno
or
dec
outsl
dec
hlt
loop
xchg
mov
sbbl
imul
test
icebp
xchg
iret
mov
data16
xorb
push
stos
mov
lock
mov
add
ret
xchg
mov
rol
adc
cltd
fcoml
lcall
sbb
mov
jae
jae
pop
pop
pop
xchg
cmpsb
xchg
icebp
cltd
int
xchg
mov
or
fimuls
outsl
je
jge
inc
shr
and
in
cltd
lahf
cltd
mov
lods
fldl
shl
adc
xor
add
imul
add
sbb
cmp
xor
cmp
jle
lock
loopne
xor
jle
add
shll
cwtl
inc
icebp
xor
sbbl
bound
jmp
aad
cld
in
or
in
and
cmpsl
loop
push
std
dec
xchg
jns
or
mov
pusha
fiadds
nop
and
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
adc
and
jle
add
ret
mov
mov
mov
or
sbb
jbe
push
adc
push
mov
sti
xchg
mov
cwtl
scas
std
cli
push
std
ret
enter
pop
icebp
xlat
dec
push
imul
rcrl
in
pop
les
outsl
fwait
jp
mov
cli
xor
cmp
into
mov
popa
push
sub
stos
cltd
rcrb
add
stos
arpl
fldenv
repz
into
out
mov
jg
inc
jae
movsl
sbb
clc
xchg
push
test
mov
jmp
push
aam
cltd
adc
gs
cmp
lret
or
fisttpll
mov
add
mov
cmpsl
js
jno
mov
push
in
mov
pop
cmpsl
pop
adc
mov
test
rcll
add
mov
and
sub
cmp
lods
inc
add
enter
test
add
cmc
int
mov
mov
daa
divb
inc
out
in
and
sbb
adc
xchg
cmp
lds
add
or
pop
cmp
xor
mov
push
mov
xchg
shll
mov
lock
ja
add
cs
ljmp
cmp
ljmp
xor
in
lock
popf
dec
mov
dec
sarl
sysexit
add
dec
mov
aam
out
jne
mov
and
sahf
mov
dec
or
dec
pushf
ret
push
adc
mov
pop
in
inc
xlat
sahf
jb
cli
add
insl
sub
mov
andb
mov
lret
push
jg
lahf
xchg
or
test
insl
mov
ljmp
fxch
cmpsb
icebp
lock
pushf
add
ss
xlat
jle
pop
dec
imul
dec
cltd
popf
mov
popf
cltd
jge
sti
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pop
jmp
jle
jl
jle
outsb
push
dec
sub
inc
rolb
push
hlt
mov
jnp
lahf
mov
and
popf
mov
sahf
neg
inc
enter
cmp
inc
add
pop
dec
push
and
add
mov
mov
cmp
jl
cs
pop
push
mov
or
and
push
push
cs
pop
into
xchg
mov
mov
push
out
sbb
xchg
sub
data16
hlt
xchg
sbb
addb
xlat
pop
rcrl
lret
ret
maxps
and
test
lret
sbb
mov
xor
out
and
aam
js
adc
out
movsb
fdivrs
enter
mov
test
lret
and
mov
mov
jle
scas
push
pop
aad
lcall
test
jecxz
ret
mov
daa
fwait
scas
xchg
fcoml
pop
into
stos
std
mov
mov
jns
pop
cld
shll
cmp
xchg
movl
mov
fwait
ljmp
fcoms
enter
lock
mov
and
mov
sub
cld
fstpl
jb
popa
ja
add
mov
loope
pop
pop
subb
push
sub
out
ret
leave
out
inc
andb
int3
popa
push
test
cmp
lea
jge
pop
and
in
mov
das
repnz
pop
pop
or
inc
popa
cmp
cmp
pop
inc
pop
movsl
cmp
dec
jg
jmp
or
pusha
cld
das
int
xchg
out
clc
arpl
fcompl
loopne
imul
ret
push
aad
arpl
inc
xor
xchg
sub
pop
int3
adc
pop
data16
ficompl
and
xor
sti
cmp
cmp
jmp
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
stc
ds
and
jle
inc
icebp
imul
mov
xor
dec
or
in
daa
aam
sbb
cli
pop
xor
arpl
popa
and
adc
pop
push
or
adc
inc
test
shll
data16
or
js
mov
cmc
mov
mov
mov
jnp
pop
outsb
mov
popa
add
scas
scas
andnps
sti
dec
leave
out
mov
mov
jle
scas
inc
inc
iret
push
hlt
jl
mov
jl
jne
sahf
push
test
lcall
push
lea
xchg
pop
push
inc
shl
push
in
inc
pop
mov
and
dec
arpl
inc
je
leave
and
mov
ror
push
dec
mov
mov
pushf
outsl
pop
jecxz
jb
out
jbe
dec
mov
idiv
icebp
mov
add
xchg
cmc
add
insl
stc
arpl
or
sub
xor
aas
imul
sbb
dec
es
xor
andl
ljmp
int3
leave
push
push
jecxz
in
mov
or
test
rcr
mov
into
lea
rclb
mov
mov
xchg
pop
mov
je
lods
icebp
pop
jnp
fistl
repz
or
mov
jb
mov
jbe
fwait
add
mul
xorl
or
sti
mov
sahf
mov
adc
mov
pusha
lods
lds
nop
mov
out
inc
fnsave
jp
cld
mov
ja
mov
dec
or
fwait
loope
or
inc
inc
and
cmp
jmp
jmp
mov
jle
add
loope
rcll
add
out
imul
jo
mov
repz
iret
pusha
mov
push
jno
ret
cmp
aaa
bound
les
inc
dec
xor
xor
xchg
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
xorl
jle
jl
jle
add
mov
mov
pop
and
inc
shlb
pop
addr16
hlt
rol
or
xlat
cmpsl
in
pusha
icebp
adc
sub
shl
lahf
push
jnp
push
adc
add
inc
and
pop
mov
mov
or
ds
dec
push
dec
or
test
cmp
icebp
push
inc
mov
inc
dec
add
aas
imul
rep
icebp
iret
loopne
stos
rorb
xchg
ror
in
add
mov
and
cmp
xchg
pop
shl
push
inc
stc
add
stos
sarl
push
sahf
and
mov
jp
movsl
push
movsl
push
jp
cmp
sub
xchg
cmc
mov
pop
das
xchg
dec
mov
test
push
mov
jae
sbb
test
ret
mov
outsb
jns
xsave
out
mov
adc
jne
fsubs
arpl
adcb
sbb
hlt
sti
add
mov
xchg
lds
pop
lret
pop
pusha
movsb
mov
in
scas
fsubs
test
or
xchg
addr16
push
xchg
movsb
out
xchg
rolb
xor
push
mov
enter
es
divb
sbb
pop
mov
call
sub
mov
mov
mov
repnz
sbb
mov
fwait
mov
inc
jbe
test
fs
test
push
subb
rcrl
hlt
enter
mov
fidivrl
std
jl
jo
mov
jnp
sbb
out
mov
mov
xor
push
jle
mov
xchg
pop
movsb
call
icebp
xor
mov
jne
in
and
je
push
mov
testl
imul
and
mov
dec
inc
inc
and
pop
xchg
stos
sahf
sub
and
sbb
ss
pop
repz
pop
jg
inc
lea
sahf
or
xor
mov
add
xor
hlt
sbbl
jmp
pop
push
jg
xor
add
jl
jle
and
jle
fdecstp
push
ljmp
mov
pushw
js
push
dec
jl
iret
lea
call
in
cwtl
pop
sbb
xchg
jbe
sar
mov
lcall
xor
jb
outsl
mov
hlt
mov
sti
pop
mov
add
aam
jp
das
cmc
call
inc
out
fcomps
mov
rcr
pop
mov
adc
xchg
dec
loop
les
sbb
ljmp
aad
cs
push
sahf
mov
xor
push
or
ljmp
sub
int3
lock
outsl
and
xchg
mov
or
loopne
jns
mulb
inc
lahf
mov
sbb
pop
inc
cmp
lods
sbb
lahf
jae
cmp
jl
pop
imul
out
dec
mov
mov
pop
inc
jp
popw
rolb
inc
loope
stc
sarb
orl
sub
in
push
mov
push
call
scas
fstpt
divb
jle
dec
mov
into
fisubl
stos
cwtl
inc
jbe
sub
mov
mov
adc
mov
jecxz
sub
push
pop
outsl
push
cs
push
ror
lds
ss
mov
ret
sahf
incl
daa
loop
xchg
xor
xor
or
push
pop
push
push
and
cli
dec
xchg
mov
push
xchg
cmp
mov
jbe
cwtl
or
xor
dec
mov
push
inc
adcl
cltd
iret
sbb
clc
or
aam
pop
push
inc
dec
jo
mov
mov
pop
sub
dec
sub
dec
arpl
out
popa
aam
aas
cmp
fsubrl
mov
jne
repz
pop
arpl
push
mov
mov
insl
jb
iret
mov
xchg
mov
repz
ljmp
pop
mov
inc
in
cmp
xor
add
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
pushl
jl
jle
fs
jg
dec
lret
arpl
arpl
mulb
or
xor
push
cwtl
pushl
scas
in
adcb
mov
icebp
lds
cmp
dec
pop
out
jp
xlat
xchg
dec
insl
hlt
gs
jmp
std
inc
jg
push
insb
push
outsl
jp
dec
inc
popa
inc
nop
hlt
xlat
js
adc
repnz
rclb
jnp
pop
scas
in
into
xchg
test
sub
jns
jns
scas
shr
enter
add
sahf
xor
mov
jbe
out
mov
push
je
mov
mov
lods
jb
test
std
fyl2xp1
inc
ja
cmpsl
pop
xor
cmp
popa
repz
cmp
or
ja
adc
scas
and
lds
lret
das
cs
or
test
xchg
leave
push
test
add
sbb
addl
push
jne
rcll
push
lock
das
mov
mov
xor
dec
aaa
inc
adc
test
push
pop
add
hlt
xchg
fxch
cs
mov
sbb
ficomps
cmc
gs
mov
test
push
pop
pop
aam
orb
mov
lea
jno,pn
shlb
fdiv
jo
sub
push
mov
xchg
aas
pop
int3
lahf
test
out
push
push
jae
inc
sbb
into
sbb
js
xchg
jno
cwtl
mov
cmc
dec
aad
push
adc
or
xor
pop
sbb
loop
mov
repnz
retw
xchg
in
xchg
int
or
test
pushf
cmp
mov
fbld
or
fdivrl
push
ret
fmuls
xchg
loop
pop
inc
andl
xchg
je
cmp
jnp
mov
cmp
fcom
mov
loope
bound
sub
mov
mov
out
pop
mov
or
jbe
push
imul
pop
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
je
xchg
dec
data16
and
jle
test
pop
mov
xor
push
movsb
mov
sbb
xor
movsl
mov
in
sub
sbb
inc
sub
stos
jne
xchg
mov
add
cmp
xor
pop
aaa
sub
imul
add
in
cmpsb
cmp
or
lock
hlt
mov
lock
dec
xlat
pusha
mov
sbb
decb
cld
sbb
mulb
daa
insb
cmpsl
xchg
inc
sarb
clc
imul
pop
xor
loopne
mov
sti
mov
cld
and
or
cs
fsubrl
pusha
lock
sbb
pop
lcall
cwtl
iret
mov
and
inc
push
popf
out
xorb
roll
dec
mov
push
pcmpgtd
xor
dec
iret
lret
mov
sub
mov
and
mov
ret
imul
add
fidivrs
lcall
xor
dec
inc
sti
xlat
jnp,pn
mov
ljmp
scas
je
outsl
cwtl
std
adc
das
mov
inc
lahf
mov
shrl
adc
pop
lahf
enter
jo
mov
icebp
add
sub
adc
gs
fadds
xor
adc
xor
inc
loopne
stos
inc
push
and
popf
jge
xchg
test
xor
and
inc
or
lds
mov
icebp
aaa
push
std
mov
pop
sbb
ret
inc
data16
pop
push
rolb
push
mov
repnz
addr16
pusha
dec
lock
mov
push
ret
add
stc
cwtl
cs
jnp
addr16
aas
mov
xchg
es
insl
and
aas
and
cli
pop
cli
xchg
clc
subb
cmpsl
or
andb
sub
in
or
shll
ss
ret
iret
add
out
xchg
movsl
lods
in
out
push
test
xchg
jmp
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
mov
pop
or
jecxz
push
sbb
inc
movsb
rcrb
and
scas
shr
xchg
push
sub
dec
andl
jle
dec
xor
push
fnstcw
imul
mov
lcall
mov
imul
push
loope
bound
push
loope
pop
insb
addl
xchg
sub
rol
push
rorl
pop
mov
lret
mov
test
popf
xor
and
and
rcrl
fdivrl
and
cmpsl
sbb
lds
jo
mov
and
mov
jbe
add
mov
hlt
push
add
test
cli
lahf
stos
sub
pushl
xchg
out
je
jb
inc
or
mov
dec
and
adc
jecxz
adc
xchg
mov
stc
int
inc
repnz
or
imul
mov
sbb
sbb
xchg
pop
rolb
lahf
cmc
push
jle
sbbb
jns
pop
push
adc
mov
or
in
and
outsb
jbe
in
cmp
cmpsb
test
cwtl
popa
dec
test
fwait
dec
pop
fdivl
aam
jb
cs
shrl
pop
es
inc
mov
test
xchg
repz
xor
mov
mov
inc
fwait
sub
sbbl
mov
push
sub
jbe
or
add
jb
cwtl
mov
mov
mov
daa
movsl
js
or
xchg
inc
or
add
ljmp
sti
sti
cmp
xchg
mov
dec
mov
adc
outsb
inc
iret
dec
das
fists
mov
rcl
adc
int
outsb
std
test
inc
inc
sbb
sbb
das
test
pop
int3
arpl
lret
lret
pop
xor
mov
rorb
xchg
icebp
imul
jmp
add
daa
jg
movsl
shr
mov
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
jae
inc
xor
jle
and
jle
pop
les
push
imul
sbb
add
mov
or
pop
data16
in
push
push
push
xchg
or
mov
sub
xchg
or
dec
cmpsl
out
mov
add
fadd
sub
repz
jg
cli
push
or
mov
aam
jbe
dec
or
push
jo
mov
cmp
int
stc
jae
in
sub
testl
cmpb
cpuid
push
mull
adc
test
mov
mov
fcmovnbe
adc
scas
out
lcall
pop
leave
cmp
cmc
xchg
inc
sbb
add
cwtl
es
inc
scas
and
sub
imulb
dec
jp
rol
testl
pop
clc
pushf
cmp
clc
movsl
mov
xor
pop
push
aaa
stos
adc
push
shlb
movsb
sub
add
add
repz
fcmovb
jb
bound
xorl
mov
std
mov
lret
cmp
push
hlt
pop
das
sahf
pop
adc
mov
lret
dec
adcl
addb
sub
xchg
mov
xchg
jbe
nop
pop
lds
js
xchg
test
xchg
repz
push
adc
les
daa
in
mov
pop
xchg
mov
out
cwtl
or
mov
clc
adc
aas
pop
add
mov
in
out
je
lds
cmp
unpcklps
and
lds
sbb
push
mov
pop
mov
and
leave
pop
mov
sub
adc
loop
mov
and
push
cmp
mov
mov
lock
pusha
insl
addb
sbb
add
sub
dec
out
lcall
push
dec
stos
sti
rcll
jns
mov
lods
mov
mov
icebp
daa
rclb
inc
js
addb
pop
rdtsc
dec
jmp
pop
jnp
xor
jnp
mov
xchg
sub
out
dec
add
add
fdivrp
xor
inc
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
xchg
jle
and
jle
mov
pushl
cmp
or
je
jns
int
cmp
icebp
jo
aam
dec
mov
out
adc
jb
fdivl
push
jo
mov
divb
repnz
lcall
das
imul
mov
inc
push
lods
iret
xor
fldl2t
sti
popf
and
cs
insb
add
lea
dec
ret
jb
jb
sbb
fwait
sti
adc
lahf
mov
push
cmpb
xchg
cwtl
mov
pop
pop
dec
clc
clc
lret
int
xchg
shl
pop
mov
aaa
ja
sub
in
fwait
sbb
cld
jo
jnp
or
ret
push
jecxz
cmpsl
fwait
add
inc
mov
mov
dec
ljmp
addl
adc
das
dec
popf
cmp
fwait
mov
sub
movsb
bound
mov
adc
test
out
and
inc
pop
loopne
xchg
lret
test
xor
xchg
mov
out
add
and
testl
xchg
in
sub
lcall
dec
jbe
dec
ret
stos
shrb
std
mov
je
inc
push
xchg
ds
stos
into
test
sti
sub
mov
cmpsb
add
aaa
mov
inc
dec
shrb
movsb
jecxz
mov
cwtl
neg
xor
mov
mov
insl
aam
and
nop
lahf
repnz
mov
xchg
idivb
add
cmpsl
mov
and
push
sub
push
mov
dec
lret
cmp
adc
dec
repz
and
xchg
sub
dec
imul
mov
or
movsl
and
or
mov
jne
sahf
out
mov
cmp
jo
out
sti
aaa
cmp
lods
sub
adc
xchg
push
lcall
dec
mov
das
push
mov
insb
sub
test
mov
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
shrb
lods
je
movsb
add
out
arpl
or
push
lock
inc
and
daa
jle
aaa
inc
out
mov
mov
pop
loop
push
xor
sti
sub
shll
dec
xor
insl
nop
xchg
ss
pushf
xor
pop
bound
out
ja
pop
jge
inc
sub
inc
dec
cmpsb
sbb
pushf
orps
mov
push
std
xor
fistpll
adc
push
cmp
daa
clc
fwait
xor
inc
lea
imul
cmpsl
sub
push
inc
scas
nop
imul
push
xor
flds
shr
and
jo
into
sbb
mov
cmpsb
inc
dec
cmp
idiv
cmp
sarb
ljmp
pop
cs
mov
pop
xor
xchg
hlt
sbb
adc
and
pushf
pop
pop
mov
adc
push
cmp
mov
aad
repnz
nop
pop
jg
xchg
call
dec
lret
test
sbb
pop
ss
mov
in
jno
test
idivl
cmp
mov
jge
loope
ja
out
mov
mov
popa
rcrb
mov
sti
ret
push
jp
lret
fwait
jg
es
outsl
jg
in
insl
mov
es
cmp
stc
pop
int
not
xor
jle
in
xor
or
movsl
pusha
shll
cld
cmp
sub
lock
cmc
jbe
fcompl
push
pop
mov
sub
scas
mov
dec
xchg
dec
bound
mov
mov
fs
insl
pop
xchg
adc
outsb
and
in
in
sarb
loop
xchg
push
xor
lahf
pop
lods
jnp
lret
mov
cmp
ss
lods
outsb
loope,pn
jl
repnz
or
lret
push
fsubr
add
inc
ljmp
jne
testl
scas
mov
xchg
fsubl
push
mov
sub
lods
out
jne
sbb
jp
adc
test
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
dec
lret
mov
jle
cmp
ror
mov
sbb
push
sarb
ljmp
mov
add
add
xchg
xor
stc
gs
or
jno
cmpl
add
cltd
adc
inc
cmpsl
push
inc
les
and
lret
pop
fadds
and
xchg
mov
faddp
lock
xchg
inc
mov
out
pop
lock
xchg
mov
mov
incl
test
pop
mov
adc
dec
inc
pop
arpl
ret
stc
test
and
sbb
ret
push
mov
addb
jnp
and
pop
outsl
or
mov
sub
ljmp
dec
dec
enter
pop
in
xchg
mov
lret
fsubl
es
xchg
ror
movsl
int3
xorb
pushf
je
or
mov
or
test
xorl
pop
iret
inc
adc
or
add
imul
cmpsb
imul
bound
std
adc
mov
outsb
sbb
sub
mov
lds
enter
xchg
loope
pop
ja
lea
xchg
jnp
xchg
lahf
add
push
aas
repnz
lods
jns
push
mov
and
out
negb
sub
or
add
adc
int
andl
lods
mov
jecxz
sub
aaa
into
xchg
dec
lods
ret
and
and
cwtl
push
xchg
push
ffreep
int
mov
inc
insb
in
int
dec
out
pop
sbb
shll
cs
loopne
mov
push
mov
push
je
and
push
popa
fs
mov
xchg
call
adc
repz
cmp
adc
push
mov
ds
cwtl
pop
inc
arpl
add
jl
call
cmp
adc
cld
adcl
sbb
sbb
xchg
and
sbb
ss
mov
pop
and
add
movsb
fs
shlb
js
jmp
loop
cmp
nop
jo
ds
roll
daa
mov
sahf
inc
scas
movsb
mov
push
push
sbbl
jmp
lds
popa
mov
fisttpll
xchg
jle
jle
cmp
pusha
insb
daa
push
outsl
adc
or
mov
fdiv
cmp
mov
add
push
dec
cmc
addr16
and
mov
call
lds
pop
mov
repz
xchg
fisttpl
pop
jg
sbb
mov
jae
ficoms
jno
adc
adc
or
push
jne
lods
inc
cmpsl
mov
daa
adc
loop
cmpl
cli
mov
psrad
sti
call
imul
loope
aas
je
lock
aas
stos
mov
adc
jge
rcll
daa
lock
jbe
mov
cmp
insb
push
aaa
rcrl
lods
je
fadds
cmp
jl
pop
mov
iret
cwtl
movsb
out
pop
jnp
mov
mov
mov
sahf
mov
add
js
push
jae
sub
add
dec
rclb
push
mov
js
call
inc
sbb
cmpsb
pop
xchg
inc
lods
xchg
ja
jmp
xchg
ret
mov
dec
sbb
mov
sub
mov
jl
or
or
call
test
xor
lock
aad
mov
dec
xchg
sbb
popa
inc
cmp
cwtl
sub
sbb
cltd
das
and
add
jae
addb
push
pop
aam
daa
pop
enter
filds
pop
icebp
push
test
and
xor
mov
data16
mov
inc
jp
popa
and
out
fucom
mul
xor
out
sbb
setl
sbb
aaa
add
xor
cmpsl
mov
bound
clc
and
dec
loope
inc
push
rcll
out
popf
popf
cmc
fs
push
xchg
lret
sub
daa
aas
les
inc
cmc
lods
pop
or
pop
dec
push
mov
sbb
outsl
pop
dec
dec
imul
addl
leave
cld
pop
scas
mov
and
scas
or
lcall
in
loope
inc
stos
test
push
push
jne
jns
fdivrl
and
pop
adc
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
pop
or
or
loop
jle
jl
jle
shll
jo
mov
inc
and
into
jne
add
push
dec
and
adc
je
rcl
mov
push
and
loop
pushf
scas
adc
fwait
scas
je
push
sbb
dec
mov
js
iret
push
out
stos
pop
lret
les
pop
out
dec
outsl
fdivrs
call
andb
adc
cmpsb
mov
lcall
push
adc
or
jo
cmpsb
nop
push
out
jbe
xchg
insb
sub
inc
ds
sahf
es
pop
loopne
stc
aam
gs
sbb
js
fs
inc
cmc
rolb
pop
fcomps
out
xchg
jg
mov
pop
sbb
loope
jnp
xchg
mov
mov
rcrl
lods
mov
cltd
cli
mov
repnz
add
jns
es
mov
sub
es
and
rcl
cwtl
sar
flds
mov
int
push
orb
sub
push
ds
xor
xorb
inc
or
mov
mov
mov
or
sti
test
andl
push
mov
sahf
cld
xchg
fsqrt
idivl
in
loopne
bound
sub
stc
adc
mov
int3
addr16
call
out
jl
cmp
pop
inc
outsb
or
aaa
xor
outsb
loopne
push
in
add
xchg
mov
outsb
push
pop
repz
aad
cld
cmp
xlat
mov
sbb
and
sbb
call
mov
lods
fsubs
rorl
aas
mov
dec
pop
in
repnz
test
mov
out
lods
cmpsb
cld
aaa
fisttpll
xor
xor
xor
jle
mov
mov
sbb
or
out
stos
pop
xchg
call
lea
loop
lea
lcall
jno
nop
mov
dec
adc
imul
xor
add
rcl
xchg
stos
je
scas
pop
repnz
test
sub
add
cmp
pop
int
adc
mov
out
je
cmp
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
jne
jne
and
jle
jl
jle
xor
jbe
jle
xchg
xor
mov
scas
push
mov
movsb
scas
test
mov
pop
cmp
popf
push
inc
mov
sbb
xchg
mov
fwait
roll
mov
push
cmp
sub
pop
outsl
jg
add
mov
loop
adc
dec
lods
cld
or
addr16
xchg
jle
add
scas
out
insl
movsl
das
push
mov
jl
test
stos
mov
jp
xchg
je
pop
dec
aaa
in
out
jne
iret
leave
inc
or
push
jle
sbb
aam
dec
push
fistps
pop
in
insb
mov
jae
movsl
mov
push
mov
jno
std
add
jmp
push
imul
mov
xchg
jle
sub
and
shrl
mov
add
iret
cmp
call
adc
mov
jle
les
pop
and
addr16
popf
pusha
jecxz
loop
fimull
out
lock
cmp
push
ds
fisttpll
int3
sarb
xor
pop
ror
cmp
lock
repz
imul
cli
or
cmp
stos
out
lret
mov
imul
das
mov
insl
sub
test
fisubrs
pop
loopne
jl
fwait
inc
cmp
adc
into
sbb
mov
sub
mov
sbb
push
out
mov
stos
dec
or
stos
mov
sub
push
mov
sbb
xchg
lret
lds
pop
push
xor
scas
push
adc
std
lock
aaa
inc
push
mov
cmc
xor
or
pop
das
jne
in
ret
imul
mov
add
in
jae
sarl
fcmovnu
cmp
loop
jnp
mov
cld
pop
xchg
lret
push
mov
in
mov
mov
aad
mov
mov
ficoms
cmp
sub
or
dec
jb
push
fs
bound
lahf
jnp
sub
test
stos
cmp
mov
arpl
rclb
loopne
mov
ret
and
mov
psubd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
cmp
pushf
mov
jle
jl
jle
mov
test
call
pop
jo
xchg
mov
jge
inc
push
cltd
mov
inc
stos
inc
in
fsubrl
gs
lods
xchg
outsb
cmpsl
pop
adc
push
xchg
fdivs
push
xchg
pusha
fwait
jmp
sub
imul
das
lahf
mov
jnp
mov
pushf
xchg
popa
orl
and
xchg
pop
xor
clc
rcrb
and
mov
pop
pop
push
jbe
inc
mov
mov
mov
sbb
push
xchg
decl
mov
xor
mov
mov
cltd
dec
std
ret
pushf
das
fnstsw
jae
out
ds
das
jae
mov
sub
push
sbb
leave
js
sub
in
jg
xor
mov
xlat
popf
dec
les
addr16
jge
lods
and
sahf
movsl
and
jecxz
mov
cld
ja
lea
cmovg
in
jbe
sbb
push
shlb
popf
pushf
sbb
in
pop
sub
lods
inc
stos
inc
bound
dec
pop
xor
rcrb
iret
adc
ja
or
sbb
and
push
jbe
in
faddl
ficompl
aam
pop
pop
in
popa
fimull
adc
push
mov
mov
pop
pop
int3
inc
mov
aas
aad
outsl
ja
sbbl
dec
jbe
jg
lret
jno
loopne
push
lcall
xchg
es
pop
push
filds
mov
xchg
movsb
jae
xchg
sbb
sbbl
adc
add
repz
loopne
cltd
sbb
aad
lds
das
cmp
push
frstor
sbb
inc
mov
mov
pop
idiv
jnp
push
pop
push
cmc
jns
or
repnz
jp
add
adc
mov
rolb
adc
dec
cmpl
mov
repz
pop
cwtl
cmp
jl
out
and
test
mov
dec
testl
or
mov
bound
leave
pop
mov
xor
jle
pop
jb
popf
loop
repnz
mov
lahf
insb
sbb
fiadds
movsl
adc
rclb
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
pop
mov
in
jle
cmp
imul
cmp
popa
out
jo
push
xchg
push
clc
sub
rolb
js
aam
pop
leave
add
add
jmp
pop
cmpsl
add
xor
fwait
sub
xor
and
push
push
fwait
push
fisubl
test
mov
out
inc
out
cmp
xchg
movsb
xchg
or
and
inc
jle
jae
test
pop
mov
movsb
inc
adc
lods
andb
xor
ds
stos
es
pushl
push
xor
sbb
dec
add
or
imul
sub
or
loop
mov
lods
fidivs
fiaddl
sbb
xchg
dec
jb
leave
mov
or
ret
lcall
les
dec
dec
repnz
xchg
mov
sub
mov
adc
fmull
xor
stc
dec
cwtl
jl
push
adc
jl
inc
inc
adc
push
test
loop
loopne
imul
push
out
mov
cmp
dec
jg
jl
or
stos
jle
push
mov
sub
outsl
add
push
ljmp
xlat
pop
int3
pop
add
or
pop
stos
mov
mov
bound
inc
pushl
sti
sbb
or
add
outsb
es
xchg
data16
push
sbb
xor
cmpsb
add
inc
push
fs
adc
sub
cmp
jecxz
adcl
neg
mov
fsubs
dec
or
repnz
aad
cmp
div
movsl
frstpm(287
sbbl
push
mov
pop
mov
lret
subb
shlb
gs
loop
adc
dec
sti
ret
insb
loopne
inc
test
sahf
sbb
mov
sub
mov
ret
xchg
and
ds
and
inc
dec
xrelease
loopne
push
push
push
xchg
or
mov
pusha
lret
insl
in
lahf
stos
push
dec
mov
mov
sub
sbb
xchg
pop
pop
popa
xchg
ficoms
sub
pop
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
sub
addl
jle
cmp
mov
dec
and
sbb
shll
sub
cmp
imul
fwait
cmpsb
mov
or
or
mov
jb
push
aas
stos
aad
ds
mov
xchg
push
sub
cmp
sbb
cmp
mov
adc
dec
movsl
push
mov
sti
iret
jbe
bound
ds
xchg
push
imul
test
adc
xor
push
shl
mov
in
jbe
adc
mov
mov
inc
leave
test
das
fwait
outsb
das
inc
sbb
adc
cmp
aad
xchg
and
sahf
dec
dec
xchg
repnz
outsl
dec
aad
int3
mov
and
jmp
imul
lret
xor
daa
out
scas
es
lret
testb
xor
and
xchg
pop
fs
rorb
inc
mov
ds
in
xchg
pop
lcall
sbbl
mov
add
cwtl
push
fcmovnu
mov
jae
sbbl
jbe
cmp
sub
ljmp
mov
test
sub
fwait
mov
movsb
push
out
xchg
cmpsl
push
push
mov
mov
pop
fwait
repnz
xor
jmp
or
push
dec
in
lods
addr16
pop
sahf
sbb
fdivs
outsb
das
jecxz
push
pop
jae
aaa
xchg
sti
push
xchg
pop
cmp
sbb
pop
push
es
sti
pop
mov
dec
xor
in
nop
aaa
int
xchg
enter
fisubl
jge
adc
roll
sbb
ja
popf
rorb
and
outsb
xchg
data16
out
push
add
mov
xchg
arpl
fsubp
pop
fsubrs
iret
adc
pop
out
push
stos
ja
lods
inc
sbb
fcoml
inc
stc
data16
adc
in
stos
mov
in
cltd
add
mov
popf
mov
iret
pusha
sbb
add
cmpsl
fstl
stos
xchg
jp
out
test
lahf
mov
scas
push
lret
pop
lret
cmp
pop
std
sbb
cmp
out
sbb
mov
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
test
pop
jmp
js
and
lds
jmp
mov
testb
insl
or
push
stos
pop
cmpsl
fwait
mov
push
inc
pushf
movsl
mov
mov
dec
xor
lret
pop
test
cs
or
jno
mov
inc
sub
data16
bound
xchg
and
shll
inc
mov
imul
add
or
mov
mov
ret
mov
mov
sbb
icebp
out
mov
add
adc
and
push
push
pop
and
adc
xchg
or
fiadds
push
in
faddl
add
stos
or
pop
in
cmp
mov
leavew
repz
les
push
mov
adc
sbb
mov
fs
dec
ja
lea
and
fisttpll
cmpsl
scas
pop
push
jp
mov
inc
scas
int3
mov
jns
jmp
dec
sbb
into
int3
adc
in
daa
xor
pop
movsl
pop
mov
cmpsl
fdivl
mov
int
xchg
sbb
mov
test
push
stos
loopne
les
das
push
xchg
test
mov
imul
or
sub
dec
jg
fs
fidivs
in
push
inc
pop
out
jmp
mov
xchg
aad
mov
mov
xchg
in
mov
xor
and
jg
shrl
xor
push
inc
push
cmp
mov
fwait
shrb
mov
pop
aad
andb
push
cs
mov
aad
in
sbb
push
jns
faddl
adc
scas
stos
dec
xor
mov
out
push
lock
jp
mov
or
mov
pop
daa
sub
repz
outsb
jle
ret
adc
cmpsb
jl
sbb
mov
sbb
adc
push
mov
push
arpl
xchg
hlt
test
cmp
push
and
nop
dec
ret
sbb
jbe
and
in
dec
mov
lods
cmp
pop
mov
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
les
jle
cmp
leave
inc
test
std
sub
xchg
sti
out
pop
cs
adc
lods
in
xchg
popa
mov
popf
out
sbb
push
sub
or
popa
test
mov
push
sub
nop
stos
add
movsl
icebp
mov
jecxz
cltd
dec
stos
mov
push
push
mov
lahf
fisubs
daa
aad
mov
sub
ret
pop
mov
or
push
pop
jle
push
and
insb
mov
and
mov
mov
stc
or
cmp
aas
mov
sbb
and
xor
stc
inc
cld
mov
adc
repnz
je
xor
push
xchg
pop
pop
ret
and
mov
xor
ficomps
ret
stos
aaa
push
jno
lea
ret
les
xor
fwait
and
stos
sbb
daa
insb
int
inc
outsb
mov
push
sub
cli
dec
in
mov
push
xchg
js
icebp
pop
cwtl
cmp
inc
repz
pop
mov
and
es
jb
cmp
pminub
and
icebp
cmc
pop
cld
dec
sub
clc
inc
adc
jmp
jnp
pop
push
loope
mov
rclb
xor
or
sbb
adc
xchg
aad
sbb
jb
sub
lret
sub
fs
insl
jg
dec
xor
ror
in
cltd
and
fwait
cltd
fnstenv
test
call
inc
and
call
xchg
or
data16
or
push
mov
je
popf
jg
lret
inc
inc
insl
and
js
test
and
and
arpl
jle
pushl
lock
mov
adc
mov
mov
call
sti
rolb
mov
pop
mov
jmp
adc
cmpsl
fwait
inc
shlb
inc
mov
scas
inc
push
mov
enter
dec
filds
cs
lock
sub
cwtl
xor
nop
lea
push
call
aad
iret
push
lcall
repnz
push
adc
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
mov
bnd
cmp
push
loopne
mov
fcoml
lock
cltd
and
adc
aam
sub
xor
pop
jbe
push
stos
jl
loope
lret
add
nopl
lods
popa
adc
sub
out
bnd
pushl
pop
iret
lcall
inc
jae
mull
jnp
ds
push
pusha
xor
es
addr16
cmp
inc
fsubs
inc
mov
scas
xchg
push
sti
adc
push
sub
test
test
int3
sub
cmpsl
outsb
xor
mov
adc
popa
pop
sub
jne
xchg
sub
inc
and
and
orl
add
push
jmp
inc
inc
cmpsl
or
and
push
mov
xchg
mov
popf
push
jno
sbb
mov
aas
jae
or
cltd
push
stos
xchg
sub
stc
out
mov
push
mov
xor
dec
rcll
sub
mov
jb
xchg
mov
cli
and
ss
mov
lea
push
or
cwtl
xchg
arpl
xchg
sbb
ret
push
fucomip
xchg
sahf
inc
xchg
push
inc
pop
adc
sub
cmp
dec
shrb
lock
mov
aaa
sarl
out
jg
mov
pop
jp
ffreep
or
cmp
push
pop
bswap
xchg
aam
movsl
and
es
stos
push
sbb
ss
mov
sub
inc
xchg
dec
rorb
gs
out
outsb
inc
xchg
xchg
mov
loopne
xchg
mov
addr16
fwait
push
pop
mov
pop
mov
xchg
les
popf
sbb
sbb
cmp
jmp
bound
adc
pop
sub
cmpsb
stc
cmp
or
push
xor
pop
repnz
and
mov
out
orb
addr16
xchg
jmp
loop
ret
add
push
sub
sahf
out
test
sti
fisubrs
or
jns
les
jmp
ja
sbbb
xchg
and
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
jne
pop
mov
cmp
or
shlb
jae
jg
mov
pop
sahf
es
das
sbb
mov
dec
cwtl
int
push
add
pop
repz
xchg
in
xor
xor
movsb
mov
and
mov
mov
mov
push
sub
cmpsb
lret
das
adc
pop
lahf
rclb
or
aad
sbb
mov
movsl
sti
in
xor
xchg
fwait
push
xor
mov
pop
fs
pop
push
mov
push
data16
je
insb
inc
nop
nop
sarb
sub
cmpsb
push
cmovge
out
sbb
push
fwait
push
cmc
jmp
dec
sub
leave
pop
mov
jns
and
add
into
cld
mov
pop
cmp
int3
lock
sub
xchg
movsb
cs
dec
cmp
ret
in
pop
mov
fbstp
or
mov
sbb
push
dec
mov
bound
int
jbe
and
test
pop
mov
imul
or
push
ljmp
outsb
xchg
flds
adc
sbb
popf
dec
in
test
jns
mov
movsl
loope
xchg
xchg
mov
aaa
aaa
inc
mov
jecxz
cmp
lret
out
mov
push
xchg
push
pop
dec
xor
inc
push
xchg
ljmp
popf
sahf
xchg
and
int3
xchg
mov
call
call
sub
lods
pop
testb
andb
shrb
sub
mov
mov
cs
icebp
sbb
and
add
jecxz
pop
loop
nop
test
aam
jl
jp
mov
sbb
outsb
adc
mov
mov
mov
loopne
and
lret
cmp
add
xchg
pop
into
mov
or
xlat
adc
pop
andb
in
mov
lret
leave
or
xchg
adc
bound
xchg
insb
dec
inc
ds
lods
mov
lcall
outsl
subb
es
jecxz
cmc
lret
mov
cmpsb
aad
iret
mov
cmp
mov
add
jne
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
sbb
jle
cmp
outsl
int3
jbe
loop
cltd
cmovae
loop
test
mov
push
jg
aam
mov
mov
sub
push
add
or
xchg
dec
mov
mov
jmp
fwait
mov
imul
inc
cmp
lods
in
or
lahf
jnp
je
ss
xlat
sbb
sub
add
repnz
dec
jbe
fwait
mov
popa
mov
icebp
mov
mov
mov
dec
testl
icebp
popf
in
std
jno
sbb
rorl
ds
cmpsb
push
pop
mov
mov
in
mov
cwtl
scas
gs
jbe
outsl
in
testl
pushf
aaa
push
push
data16
mov
lcall
fldenv
and
std
xchg
cmpsl
xchg
xchg
mov
or
xchg
adc
pop
fwait
outsl
add
or
or
lret
or
rep
mov
out
pop
mov
push
inc
add
adc
int
insl
push
mov
or
mov
popf
loopne
sbb
mov
mov
adc
out
jle
xor
dec
inc
add
xchg
xor
sbb
and
lahf
aad
stc
sahf
fcmovb
aas
mov
js
scas
or
or
repz
sub
loopne
xor
add
int
es
test
out
mov
out
mov
into
pop
or
sub
loop
pop
inc
lret
insl
js
dec
mov
or
sub
inc
pop
lods
adc
fwait
dec
jns
pusha
jno
aas
ret
pop
adc
dec
inc
jmp
inc
mov
out
adc
push
outsb
test
sub
rcr
out
paddd
add
rcr
push
ret
adc
popf
mov
sbb
in
out
cmova
xchg
dec
jp
aad
inc
xchg
insb
out
and
ds
mov
xchg
es
sbb
dec
je
rcll
sub
ss
icebp
adc
out
sub
inc
fwait
sbb
loope
inc
dec
push
mov
mov
or
nop
jp
lret
outsb
rcr
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
cmp
jl
jle
cmp
arpl
cli
ja
addr16
out
push
fisttps
push
std
sahf
sub
xor
outsb
mov
mov
inc
mov
int
cmp
and
cld
sub
inc
mov
clc
adc
push
lock
mov
divl
xor
in
and
pop
and
mov
push
inc
fcoms
aas
loopne
push
dec
jns
mov
adc
xchg
xchg
fwait
cmc
xor
jmp
shr
push
mov
gs
test
push
push
mov
push
or
dec
arpl
adc
popa
les
stos
inc
clc
pop
lock
lret
xchg
add
call
xor
mov
rol
in
add
and
test
pushf
cli
das
shrl
add
sbb
cs
outsl
pushf
push
inc
pop
xchg
mov
cmpsb
jnp
xchg
fnsave
in
pop
push
mov
dec
arpl
fsubs
loope
mov
mov
cmpb
ret
mov
pop
add
fisttps
clc
inc
inc
fisubl
xor
test
sbb
push
cmc
xor
lock
add
les
ss
and
and
pop
or
call
and
add
mov
mov
sarl
lea
jno
and
cmpsl
sub
call
insb
lahf
and
imul
sub
or
mov
std
jb
stc
outsb
pop
jl
xchg
inc
aad
xor
jns
add
mov
dec
pop
pop
mov
pop
adc
xor
scas
and
pop
xchg
cmp
sar
mov
mov
cli
pop
das
push
rcrl
add
jb
sti
add
pop
push
push
jecxz
push
jns
cmp
xor
push
inc
pop
cmp
adc
sub
filds
dec
push
sarb
xor
xchg
nop
insl
or
ja
scas
mov
pop
sub
dec
pushf
lret
mov
popf
mov
or
stos
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
xor
mov
sti
jle
cmp
mov
dec
push
and
sub
icebp
rcrb
sahf
jmp
xchg
push
xchg
test
inc
das
aad
mov
sbb
inc
adc
ljmp
fcoml
and
mov
nop
repnz
add
ja
inc
add
cmp
mov
leave
dec
mov
negb
fcmovb
cmp
bnd
cmp
xor
cmc
fimull
mov
movsl
in
jl
mov
iret
mov
into
push
fwait
adc
push
push
mov
mov
xchg
inc
or
jge
mov
out
xchg
pop
pusha
dec
ljmp
lea
stos
sub
cmp
push
lds
mov
inc
mov
mov
lcall
loopne
es
fadds
xor
jg
push
sbb
or
jmp
sbb
ret
test
mov
xor
nop
fiadds
leave
mov
push
in
fs
lcall
and
cld
mov
repnz
sub
insl
push
sub
push
mov
xchg
and
pop
fcomps
xchg
add
xchg
push
xor
cli
aam
mov
dec
orl
mov
or
out
adc
fcoms
xchg
jle
hlt
push
repnz
push
mov
loopne
imul
xchg
xchg
lcall
xchg
sbb
push
in
pop
inc
repnz
mov
and
sbb
dec
mov
pop
gs
pop
std
adcl
inc
stos
int3
xor
pop
out
cld
or
pop
imul
sub
mov
or
xlat
enter
mov
fs
mov
lret
push
std
pop
inc
inc
or
push
push
daa
ret
jecxz
lods
pusha
test
xor
aam
scas
mov
jae
popf
daa
pop
pop
dec
add
outsl
push
pop
pop
xor
jp
mov
fwait
es
jb
push
ret
and
pushf
cmpsb
loope
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
adc
cmp
push
out
pop
push
imull
push
pop
loope
cltd
jbe
cmp
mov
lcall
mov
hlt
add
pop
push
xor
mov
sarb
or
mov
push
jle
xor
mov
jb
mov
sbb
stos
xor
xchg
add
or
cmc
fcmovnb
xchg
mov
syscall
mov
mov
in
test
or
cmp
aad
out
outsb
rol
out
test
xor
jns
pop
negl
rcrb
xlat
iret
jle
mov
jno
or
xor
stos
data16
mov
in
cmpsb
cmp
xchg
inc
xchg
fmuls
adc
gs
insl
push
fsub
xor
js
sbb
gs
addl
notl
jmp
sbbl
pop
repz
mov
dec
adc
push
push
sub
subl
or
movsl
mov
jno
or
dec
outsb
leave
mov
mov
fcomps
pusha
stc
xchg
ror
sub
jle
or
xor
ficomps
dec
jo
int3
jp
data16
dec
lret
dec
das
adc
xor
dec
mov
inc
pop
shrb
mov
inc
pop
sahf
cs
cmpsl
ss
lea
pop
gs
push
lahf
in
jle
orb
jne
inc
xor
scas
ljmp
rolb
cltd
dec
push
ljmp
loop
inc
push
fwait
mov
iret
lret
add
cli
out
cmp
out
or
in
mov
fadd
lods
xchg
roll
or
mov
mov
sub
jns
push
inc
jns
aaa
jl
cmc
pop
mov
daa
aas
mov
ljmp
stos
rorl
in
call
aas
sbb
out
sbb
stos
ss
dec
xchg
inc
inc
clc
sbb
arpl
clc
call
cmp
scas
xor
adc
push
ret
add
cmp
lock
insb
mov
sbb
test
sbb
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
dec
add
dec
xchg
cmp
inc
add
movsl
sbb
cmpsb
in
lods
xchg
mov
push
ficoms
fisttpl
js
xchg
aaa
ret
mov
scas
lret
and
sub
sub
pop
repz
sbb
jns
and
in
fs
mov
or
pusha
and
std
ljmp
jecxz
mov
push
fldenv
iret
push
sub
imul
ret
jmp
adc
inc
xchg
dec
push
push
int
or
jp
xchg
ret
jle
xor
ret
mov
inc
pop
push
test
xchg
sub
icebp
mov
xor
push
pop
je
jae
test
adc
cwtl
in
test
les
push
xchg
push
pop
xchg
xor
add
popf
lcall
out
scas
cli
xor
xchg
cltd
mov
cmp
subl
scas
adc
fidivs
push
mov
clc
jno
jne
popf
lahf
jns
adc
popf
nop
jns
cmpsl
pop
out
repnz
scas
dec
and
sbbl
movsb
or
call
or
fs
xchg
lods
inc
sub
int
test
imul
cld
dec
and
leave
outsl
xor
cmp
pop
or
sub
jl
out
jmp
mov
lods
add
and
insb
inc
or
mov
sbb
enter
sub
xorb
pop
daa
das
mov
outsb
lea
arpl
mov
fwait
outsb
pop
adc
push
stos
lods
push
fcmovbe
cmc
into
push
pop
stc
xchg
sti
pop
and
lock
push
mov
int
and
imul
xor
cmp
sub
sbb
add
adc
and
stc
push
je
ret
push
inc
out
sbb
in
sbb
ljmp
lock
sarb
push
jmp
sbb
pop
out
cli
mov
pop
adc
int3
jmp
adc
dec
mov
popf
arpl
imul
xor
out
mov
push
scas
out
xchg
test
fmul
xlat
dec
lods
sub
stos
adc
in
in
pop
add
dec
or
mov
adcb
push
or
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
adc
rcll
jle
jl
jle
shl
or
aad
orb
xor
stos
in
dec
cmp
stos
cmp
or
clc
adc
mov
sbb
lds
hlt
pop
stc
jae
mov
imul
xor
mov
mov
adc
outsl
movsl
mov
push
scas
pop
sbb
aas
loop
jge
cmpsl
test
inc
aas
sbb
sbb
inc
jno
xor
fs
rclb
sub
jecxz
mul
xorb
dec
and
sbb
or
push
jge
ljmp
adc
cmpsb
test
cld
mov
and
cli
and
push
es
inc
sbb
stos
fdivl
mov
mov
mov
xlat
and
repnz
clc
out
jb
addr16
ss
xchg
fbld
dec
inc
lods
add
add
fsubrs
loopne
mov
dec
jl
xchg
stos
jg
popf
std
jl
rcll
sbb
idivb
mov
insl
push
aam
ret
pop
and
and
stos
rclb
dec
mov
cmc
mov
inc
and
dec
cmc
sub
xor
inc
scas
stos
ss
mov
rcr
mov
sub
repnz
push
pop
je
std
imul
sbb
in
sub
dec
cmpsl
fistpl
xchg
cmp
jno
mov
mull
rol
xchg
jne
or
and
cmp
cltd
inc
out
pusha
jl
clc
push
dec
jge
pop
popf
mov
xor
push
or
sub
hlt
xchg
scas
inc
adc
int
jp
in
mov
or
cmpsl
sub
mov
push
call
inc
mov
insb
mov
xor
cltd
jge
daa
andb
and
pop
rcll
cmpsl
mov
inc
in
mov
cmp
test
adc
int3
jbe
mov
add
lods
jbe
pushf
mov
dec
pop
and
hlt
push
movsl
in
scas
or
jb
and
mov
andl
sbb
fwait
xchg
or
mov
inc
popa
out
loop
push
xchg
das
push
sbb
sbb
popa
mov
cmc
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
xchg
inc
fiadds
jle
mov
les
lcall
sub
in
dec
js
xchg
lods
cmc
xchg
orl
icebp
xchg
lock
addl
das
in
or
mov
or
xchg
mov
shr
aad
shl
xchg
dec
mov
jne
push
repnz
xchg
push
rcrl
cli
loop
mov
dec
data16
jmp
les
arpl
movsl
xchg
repz
movsb
stos
fnstcw
outsb
lods
sub
mov
pop
or
fstpt
sub
hlt
xor
inc
fnstcw
adc
add
mov
inc
and
lods
pop
clc
ret
lea
arpl
in
jo
pop
fidivs
out
xchg
pop
mov
dec
mov
mov
push
cmp
pop
test
fs
xchg
test
in
and
sbb
cmp
sub
inc
and
pop
and
or
enter
pop
lods
push
je
sbb
push
mov
in
sub
mov
test
mov
arpl
call
mov
xorb
push
movb
es
add
cltd
sarl
push
push
aas
and
cmp
inc
pop
rclb
mov
jg
mov
ja
push
pop
add
jmp
pusha
sbb
mov
push
mov
adc
in
pop
xchg
or
lret
shr
in
fwait
mov
mov
insb
dec
pop
sbb
fisubrs
sbb
int
js
sbb
jg
test
or
xor
test
aad
stos
stos
adc
fisttpl
out
imul
cmp
repnz
mov
loopne
jbe
xchg
sbb
shrb
movl
inc
jns
xchg
inc
push
cmpsb
mov
loop
int
mov
out
sbb
pusha
jns
xchg
arpl
inc
aad
fidivrl
test
lcall
mov
xchg
jg
xor
cmc
push
fs
jne
add
adc
mov
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
adc
lahf
cwtl
mov
cmp
cmpsl
fdivr
and
cmp
sub
xor
les
daa
mov
in
xchg
sti
stos
icebp
adc
dec
pop
in
sub
push
add
aam
arpl
ret
imul
lds
loop
mov
scas
orl
fdivp
sub
jp
lods
in
inc
or
jle
sarl
dec
jbe
scas
out
inc
mov
dec
jnp
inc
fs
xchg
xchg
dec
pop
inc
shrb
add
sbb
hlt
lds
stos
jae
mov
or
and
xchg
sub
aad
adc
sbbl
push
push
fbstp
xor
lods
stos
mov
adc
push
inc
je
enter
jno
jp
jnp
aad
aas
dec
insl
sti
aam
or
insb
xchg
xchg
mov
xor
cmp
inc
xchg
jb
add
and
cli
outsl
clc
out
lret
ret
js
sub
sbb
add
stos
scas
adc
scas
test
cmp
repnz
push
pop
cmpsb
lods
outsl
dec
aaa
mov
inc
lret
ficoml
test
lods
mov
sbbb
cmp
pop
xchg
jns
dec
xor
ret
imul
outsl
int
stos
mov
inc
scas
pop
and
xchg
mov
xchg
out
and
int3
imul
lods
mov
movsb
decl
and
mov
and
push
sub
or
outsl
loop
mov
xor
mov
fidivrl
addr16
repnz
fisubrs
ja
push
popa
xchg
rcrl
add
sbb
nop
jae
mov
sub
inc
mov
sub
inc
into
fstpt
inc
aaa
xor
pushf
sub
js
inc
dec
fcompl
jo
int3
xchg
mov
aad
movsl
icebp
cli
and
push
jo
dec
mov
inc
int3
addb
cmp
in
inc
icebp
addb
and
pop
push
xchg
inc
push
sbb
popl
lock
dec
cmp
and
mov
add
loopne
pop
push
into
mov
push
aas
bound
mov
cmpsl
movsb
dec
add
xchg
lods
cmp
push
shl
aas
hlt
movsb
test
jb
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
jmp
loop
mov
cmp
mov
jne
adc
fstp
orb
fstpl
push
sti
lret
in
iret
daa
mov
gs
xor
mov
dec
jle
mov
mov
pop
imul
das
xorl
mov
lock
add
fdivrl
sbb
aas
mov
mov
iret
std
add
pop
shl
clc
or
sbb
cmp
aam
fucomp
in
stos
mov
jge
xor
inc
clc
or
xlat
lea
dec
dec
mov
pop
xor
das
adc
sbb
cmc
call
cs
andl
jmp
out
cmpl
cltd
push
add
add
not
leave
push
cwtl
cmp
fs
popf
jmp
xlat
cmp
hlt
cmp
dec
mov
cmc
addr16
int3
xlat
test
mov
iret
jecxz
repz
jl
es
jb
add
arpl
pop
nop
movsb
cli
bound
lods
sbb
dec
mov
dec
push
into
push
movsb
outsl
cwtl
cmc
jp
dec
data16
add
jno
es
orl
xlat
or
or
cmp
test
test
mov
pop
inc
clc
mov
inc
xchg
push
adc
jp
lret
push
in
pop
mov
cwtl
fs
es
in
xor
mov
test
insl
sub
daa
pop
or
mov
aam
sti
data16
sahf
push
mov
out
fdivrs
outsb
aas
mov
ja
sub
movsb
das
jbe
fldenv
outsb
dec
fwait
aas
or
xor
pop
mov
push
insl
mov
insl
test
push
jae
insl
shr
cs
mov
test
sbb
cmc
jecxz
outsb
inc
mov
mov
adc
shrb
loope
arpl
mov
hlt
dec
xor
mov
push
insl
xchg
adc
cwtl
dec
push
mov
test
push
addr16
ficompl
mov
mov
or
cld
mov
cmp
ja
sbb
arpl
clc
pop
in
js
pusha
icebp
push
repz
pop
add
mov
sbb
icebp
mov
jmp
push
std
dec
sahf
push
push
add
cmp
add
sub
jle
cmp
mov
movsb
push
faddp
xor
outsl
push
mov
movsb
and
cmpsb
stos
sub
sub
adc
adc
pop
inc
push
dec
push
inc
pop
adc
cltd
nop
mov
sub
insb
inc
push
add
sbb
test
lds
cwtl
pop
rcr
add
pop
mov
aam
ficoms
int
or
std
movsl
cmpsl
xchg
dec
jmp
enter
jno
jecxz
or
icebp
sbb
lods
out
lds
in
popf
stos
lods
pop
mov
cmc
std
lock
jge
cmp
int3
int
iret
inc
add
add
mov
shlb
jge
sbb
pushl
std
adc
or
fnstsw
jecxz
jno
cmp
or
in
jne
fisubrl
adcb
out
scas
in
add
insl
jle
das
add
pushf
shll
dec
scas
ljmp
repz
mov
xlat
sbb
lock
std
xchg
test
rclb
sti
mov
add
pop
push
fwait
sub
call
clc
pop
and
rcl
adc
int
or
rorb
dec
xchg
inc
cwtl
test
xchg
imul
dec
mov
hlt
jl
and
scas
dec
and
dec
jbe
aam
ret
sub
sar
mov
lret
cmpsb
lea
jecxz
stos
into
sub
scas
pop
adc
mov
fwait
or
and
out
sbbb
aad
xchg
in
and
dec
jmp
iret
xchg
xchg
cmp
lcall
insb
out
je
adc
or
test
pop
inc
sbb
cli
lcall
mov
loop
push
dec
jmp
ja
pop
sbb
mov
jle
lods
mov
push
lods
loope
in
add
lea
pop
mov
mov
inc
mov
mov
loop
enter
imul
hlt
cwtl
push
aas
jbe
stc
adc
add
fldlg2
test
or
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
mov
dec
iret
testb
jle
jmp
mov
inc
sahf
dec
xchg
mov
je
pop
out
pop
popa
das
fisttpl
lahf
add
mov
daa
das
jno
lods
out
jnp
dec
xchg
dec
pushf
es
das
jns
adc
sbb
shrb
aaa
jae
sub
xor
jp
sbb
inc
pop
jle
adc
sub
iret
fldenv
movswl
inc
push
mov
sbb
iret
fnstsw
scas
iret
mov
push
and
icebp
cmpsb
fildll
sub
lea
mov
pop
mov
scas
fiaddl
cmp
iret
xchg
push
arpl
lods
leave
lret
decb
ret
aam
hlt
cs
push
jl
cmp
sbb
dec
cmpsl
lcall
sub
scas
pop
jle
push
mov
aaa
sub
loop
mov
nop
jg
pop
xchg
repnz
inc
push
or
inc
sarb
xor
je
xchg
xor
or
mov
inc
lods
xor
and
adc
and
adc
addr16
sbb
lods
and
adc
xchg
push
insl
sbb
and
sbb
jb
fldl2e
fisubl
ja
pop
pop
pop
in
pop
push
sbb
cmp
cmc
into
jg
scas
scas
cli
mov
inc
lret
in
push
mov
in
push
aam
mov
cmp
repnz
or
xchg
and
sub
mov
adc
adc
fs
shlb
mov
mov
mov
mov
stc
mov
or
add
cli
fs
jo
mov
out
nop
pop
inc
jne
xor
jg
xor
stos
repnz
or
xchg
dec
add
sarl
pop
int
jne
pop
sbb
pop
push
sbb
int
scas
mov
xchg
cld
sbbb
jmp
sbbb
mov
lods
fs
popf
add
lcall
sbbl
push
movsl
addr16
jmp
fs
dec
shr
inc
call
xor
ror
stos
insb
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
icebp
js
mov
jle
cmp
fisubs
mov
imul
fildl
cmp
dec
cmp
xchg
xchg
push
push
pop
daa
sbb
std
xor
dec
jo
pminsw
dec
shlb
hlt
sbb
mov
mov
rcrb
cmp
xor
into
sbb
in
jmp
and
cmpsb
insl
sbb
jmp
rcrl
xor
cmpsb
sbb
pop
andb
fstl
jno
out
pop
pop
dec
leave
mov
or
adc
mov
test
lods
jae
dec
mov
add
or
ja
cmp
cs
sti
inc
rcrl
xchg
add
mov
push
aad
dec
mov
rcll
imul
sbb
in
mov
or
sti
insl
int3
xorb
adc
lret
pop
fucomp
add
sbb
xchg
xor
lret
test
sbb
std
sti
cmp
dec
aam
and
pop
mov
mov
pop
cmp
sub
and
adc
fdivs
into
xchg
pop
push
iret
loop
or
out
xor
sub
popf
or
loop
loope
lahf
dec
fisubl
mov
daa
xor
orl
jno
mov
and
or
mov
ss
push
and
sub
imul
mov
jb
xor
xchg
repnz
movsl
cmp
daa
dec
pop
jae
jecxz
mov
std
or
fwait
dec
jbe
adcb
add
xchg
fildll
sbb
xor
cwtl
aad
cwtl
cmp
enter
das
push
sahf
or
pop
imul
stos
cmc
lods
pop
out
inc
sbbb
je
mov
sub
lods
jae
mov
dec
and
mov
imul
lret
and
hlt
add
push
sahf
cmp
mov
mov
fsubrl
lahf
int3
shll
add
mov
pavgb
cmp
pusha
lods
jl
xor
lret
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
jnp
jp,pn
jle
jl,pt
jle
mov
inc
in
or
push
inc
sbb
stos
push
adc
sbbb
test
lods
sub
sub
push
add
cmp
push
repz
push
scas
push
mov
mov
pop
test
rcrb
or
adc
and
lods
sarl
into
lahf
out
or
sbb
jmp
push
repz
xor
insb
sbb
cmp
test
movsl
jno
push
sti
std
or
repz
and
lods
fldpi
dec
fs
scas
pushf
sbb
pop
xlat
mov
ror
push
pop
pusha
test
ds
sbb
repnz
sub
xchg
xchg
sub
iret
cli
mov
loopne
in
pop
les
dec
movsb
lcall
jbe
aas
mov
rcrb
movsl
or
stc
inc
lret
or
mov
push
mov
mov
repz
cs
mov
shl
cmp
push
mov
pop
pop
test
popa
or
js
aaa
repz
or
jb
addr16
imul
lahf
sub
cs
pop
or
xchg
pop
pop
repnz
mov
icebp
call
xchg
xbegin
sbb
movl
dec
pop
outsb
mov
pop
iret
std
test
stos
push
cld
xchg
cmp
adc
jge
jne
idiv
call
ds
call
ljmp
call
sbb
lret
in
jg
jge
jge
notl
sub
sbb
jle
lret
stos
mov
pushf
mov
mull
fdivrs
je
rorb
out
jle
lcall
dec
int3
pop
cli
ds
js
mov
dec
fs
lret
aad
loop
test
or
sub
cwtl
fnstcw
adc
lcall
decl
inc
sbb
add
sub
or
adc
ljmp
push
mull
or
lods
inc
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
aad
fdivrs
nop
jle
jl,pt
jle
or
cmp
mov
pop
shlb
lcall
test
mov
cmp
in
push
fwait
shl
push
mulb
call
mul
das
jl
psrlw
sub
les
and
mul
arpl
ds
inc
mov
pop
sti
mov
add
jne
pop
xchg
jp
lds
mov
les
fs
into
leave
inc
xor
lcall
daa
and
adc
or
test
sub
mov
sahf
icebp
adc
xchg
xor
add
xchg
mov
jns
jae
jnp
jle
cs
dec
push
mov
in
outsb
insl
add
mov
cltd
stos
out
cmc
bound
mov
cli
icebp
xchg
ret
int3
fisttpll
out
pop
cmp
xor
fwait
js
sub
sahf
jno
pushf
mov
sub
dec
insb
in
ficoml
mov
sbb
sbb
adc
loop
fstl
into
adc
pop
mov
inc
enter
cmp
cmc
es
adc
lods
cmpsl
and
pop
push
dec
lods
jb
es
ss
pop
mov
stos
lahf
xor
sti
ds
push
cmc
jg
sbb
or
push
sub
sahf
ffreep
and
inc
jge
fildl
inc
pop
or
jno
jg
cmp
jge
xchg
jecxz
stos
sbbl
mov
pop
inc
sub
jle
or
push
inc
lods
test
adc
or
incl
push
imul
mov
sti
js
xchg
jno
dec
les
dec
mov
movsb
test
mov
adc
pop
jle
pop
or
leave
add
mov
aad
xchg
adc
loope
xchg
sahf
push
inc
movsl
iret
lcall
andb
insb
not
icebp
loope
ljmp
cltd
add
cli
or
lcall
xor
or
aam
repz
test
inc
cld
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
data16
insb
mov
adc
sbb
cmp
mov
xor
js
mov
dec
dec
and
push
mov
dec
mov
jle
stc
aas
mov
int
daa
enter
mov
mov
fiaddl
push
das
mov
xchg
cmpsb
inc
ja
lret
lret
cmp
shlb
or
insl
xchg
xor
dec
ss
pop
xor
xchg
lds
mov
inc
jno
lds
add
popa
testl
js
inc
sbb
xchg
nop
dec
and
inc
jg
std
adc
sub
xchg
mov
cltd
jae
and
adc
jp
jle
pop
movsb
cltd
lahf
aaa
es
lret
dec
lret
movsl
divb
dec
inc
cmp
in
and
test
repnz
push
pop
push
cmpsl
push
lods
out
push
aaa
jnp
inc
mov
xchg
xor
sub
cmp
dec
jp
xchg
nop
push
push
xchg
ss
and
enter
test
fldt
scas
cltd
mov
push
xchg
xchg
jle
push
or
xchg
stos
dec
dec
xor
pop
ret
jecxz
cmc
adc
sti
mov
imul
mov
test
fcomps
lcall
push
dec
stos
jmp
pop
jb
mov
inc
mov
add
pop
push
es
push
dec
rcll
cmp
pop
sub
mov
fwait
jb
dec
mov
out
pop
movsb
mov
fsubs
sub
add
jp
fidivrs
cltd
dec
push
cmpsl
rorl
scas
mov
bnd
out
mov
sub
mov
sbb
ss
shll
jecxz
pusha
jecxz
mov
int3
out
mov
xor
std
or
or
xchg
loop
push
and
jno
addr16
xor
xor
shr
dec
lcall
ret
sub
inc
xchg
mov
testb
add
or
or
out
sub
cltd
cld
movsl
out
test
pop
out
or
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
testl
jle
adc
jle
subb
add
pop
and
int3
into
lods
test
mov
test
sbb
cmp
pop
add
push
scas
or
sub
cmpb
arpl
dec
fstpt
xor
xchg
clc
outsl
fmul
daa
es
dec
icebp
out
test
xor
scas
pop
cli
movsl
imul
jecxz
ret
iret
mov
and
cmpsb
fdivs
in
sub
mov
gs
jbe
inc
xchg
pushf
jae
ret
aas
insl
mov
leave
xchg
testl
jg
je
or
sub
cmpl
inc
test
xor
inc
jno
test
ljmp
out
mov
in
mov
mov
es
shl
mov
push
aam
push
mov
mov
ds
cld
pop
inc
jnp
add
fidivrl
repz
stos
mov
int3
or
scas
and
gs
stos
lret
pop
cmp
rcrb
jl
aam
mov
inc
setne
clc
or
jecxz
imul
rorl
xchg
ss
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
lods
test
pop
popf
jle
adc
jle
jle
cmp
enter
stc
ds
fbld
sub
lods
lret
mov
aaa
pop
push
std
mov
aas
lahf
push
dec
jl
ficomps
dec
dec
das
dec
push
mov
dec
or
pop
cmp
aam
ret
pushf
mov
outsb
or
mov
out
pop
insb
cli
movsl
ret
dec
sbb
xor
pusha
pop
jbe
pop
ss
cmp
push
fldpi
fs
pushf
outsl
insb
push
jae
xchg
imul
clc
std
inc
ret
imul
pop
mov
jo
pop
push
sub
cwtl
inc
orl
insb
mov
das
test
les
cmp
or
pmullw
adc
stos
inc
gs
adc
insb
xchg
or
xchg
data16
jns
sbb
jne
inc
cld
pop
loop
dec
mov
xchg
test
out
pop
nop
test
ror
and
inc
mov
sub
pop
cs
inc
cmp
sub
jbe
in
xor
jmp
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
xor
lcall
enter
mov
pop
dec
cmpb
pusha
sti
pop
in
mov
adc
add
mov
mov
xor
jnp
push
xor
pop
lds
or
daa
outsl
fsubl
or
jne
dec
or
mov
mov
inc
ja
sbb
sarb
int
inc
pop
jl
sbb
inc
sub
mov
xor
aas
popl
subl
test
pop
in
into
xlat
pop
dec
and
das
shll
and
jg
xchg
fcom
xchg
ss
inc
lret
aas
lret
ja
loop
negb
sti
jecxz
mov
adc
in
stos
or
push
cmp
mov
stos
adc
stos
iret
out
scas
sbb
inc
mov
into
lock
mov
inc
cmpsb
fsubr
cli
add
xor
jae
fwait
movsl
pusha
adc
out
sti
shrb
and
mov
and
and
add
divb
call
inc
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
and
sbb
adc
jle
out
mov
in
cli
push
mov
mov
ss
push
mov
test
fbld
adcl
jp
push
in
mov
sti
subl
inc
iret
in
lret
int
push
and
jl
push
add
lods
pop
popf
popa
pushf
ljmp
mov
iret
out
mov
cmc
scas
filds
inc
pop
mov
mov
dec
jbe
jl
je
ret
mov
fxch
mov
stc
insb
add
pop
in
pop
outsb
add
pop
sub
cmp
and
ljmp
outsb
adc
pop
pushf
mov
shl
stc
mov
sub
je
pusha
pop
jmp
out
and
xor
dec
mov
sbb
aaa
outsl
data16
mov
add
mov
js
jmp
lods
xorl
mov
dec
iret
inc
je
add
jnp
adc
xorl
outsl
xor
mov
cs
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
lds
out
sub
jle
dec
pop
lods
int
icebp
push
ljmp
push
lret
xchg
shr
call
rcr
inc
xor
call
pop
cmp
aas
jne
loop
lret
lods
data16
adc
adc
imul
mov
cld
addr16
xchg
imul
push
pop
jbe
loopne
int
xor
adc
mov
pop
subb
gs
arpl
sub
ss
add
stos
and
or
add
and
add
shl
testb
jbe
dec
mov
or
add
cmp
hlt
mov
mov
mov
jb
rcrl
bound
rcrl
and
ficoms
inc
movsb
fwait
aas
push
xorb
xchg
pusha
or
lds
sub
ljmp
mov
add
cltd
cmc
aam
push
inc
add
test
add
repnz
sarl
ja
les
lds
daa
cmp
lea
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
fildl
mov
mov
out
push
push
out
push
inc
lret
mov
out
nop
js
and
lds
lret
int
cltd
mov
jns
mov
adc
out
xchg
cmpb
xor
fisttpl
jmp
daa
fs
jg
sbb
cmpsb
xor
add
insb
cmpsb
mov
jmp
sbb
dec
iret
jnp
div
out
aam
outsb
adc
int
mov
das
inc
clc
push
sub
jg
dec
pop
lods
cmpsb
xor
cmp
mov
sub
xchg
xorl
add
js
fdivrl
scas
addr16
sub
into
pusha
cmp
push
sbb
lods
std
leave
icebp
push
or
cmpsl
mov
stos
sub
cwtl
bound
cmp
shll
jbe
ret
xchg
pop
test
in
xorl
outsl
jle
sub
push
sbb
aad
mov
ds
rolb
push
inc
xor
sub
mov
cld
fwait
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jo
loopne
cmpsl
jle
adc
jle
or
test
add
jo
cs
lock
test
jp
lds
adc
arpl
iret
cmpsb
push
je
or
pop
dec
xor
ja
dec
or
aad
leave
int3
xor
mov
out
xchg
loope
outsb
mov
sti
pop
push
mov
lret
std
stc
icebp
adc
loop
repnz
test
mov
or
mov
sbb
cmpsl
fsub
loop
dec
mov
fucomi
in
aaa
test
pop
test
fnstsw
ja
orl
xchg
inc
jmp
mov
inc
int3
sbb
iret
test
test
ljmp
cli
cmpb
in
pushf
lds
mov
stc
insl
orb
push
and
lret
out
adc
cmp
mov
and
popa
pop
sub
jmp
idiv
movsb
push
mov
jge
xchg
andb
adc
rcr
popf
cmp
leave
adc
adcl
sahf
mov
jg
or
jbe
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
mov
jg
jle
lods
adc
cmp
and
xchg
xchg
cmp
lods
mov
clc
mov
push
xchg
roll
and
mov
incb
repnz
cmpsb
lcall
jae
push
xor
loop
push
cld
test
loopne
jmp
out
bound
lahf
movsb
outsl
aam
mov
data16
adc
sbb
mov
xchg
les
out
mov
fcomps
ja
gs
and
jo
add
cmp
test
inc
dec
xchg
aas
or
dec
cmp
dec
xor
adc
mov
test
in
mov
lods
jp
fwait
push
cmp
dec
out
jmp
mov
lret
nop
dec
clc
fdivs
lahf
decl
mov
mov
sbb
mov
pushl
push
dec
sbb
orl
push
lahf
xchg
adc
lcall
jl
push
fimuls
mov
pop
mov
adc
stos
fucomp
mov
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
add
lcall
jle
into
fs
dec
jno
mov
mov
mov
cmp
push
sbb
divl
fistps
cmp
lods
xor
cmp
cmp
cmp
cmp
cmpsb
xor
enter
loope
pop
scas
jg
and
int3
pop
dec
repz
cmc
lock
sub
sbb
push
mov
and
mov
adc
test
in
adcb
imul
rcll
mov
rcrb
std
sub
adc
jbe
lcall
loopne
adc
cmp
int
roll
inc
mov
xchg
aad
sbb
xchg
adc
mov
fsubl
repnz
xor
mov
xchg
push
and
int3
dec
scas
xchg
rclb
ret
call
lahf
ret
xlat
jp
jbe
lret
outsb
jle
xchg
loop
pop
lods
je
sarl
stc
repz
mov
pop
dec
andl
out
pop
add
push
mov
cs
mov
mov
div
shlb
sbb
push
xchg
xchg
pop
outsb
cmp
out
addr16
int3
sbb
jns
daa
dec
sub
sub
pop
std
dec
in
mov
push
dec
add
sub
mov
mov
divb
punpckldq
std
idivl
cmp
imul
mov
rclb
call
ljmp
pop
push
mov
cltd
pop
xor
fistpl
and
xchg
cli
arpl
aas
pushf
test
mov
jmp
inc
mov
mov
into
lahf
xchg
inc
inc
sbb
ret
push
ss
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
add
add
shlb
lcall
lods
in
or
insb
xor
pop
mov
adc
in
adcb
inc
ret
push
ds
scas
lea
dec
inc
les
jmp
xchg
ljmp
cmp
adc
faddl
push
mov
pop
movsb
cmp
leave
and
and
mov
scas
xlat
adc
inc
jle
xor
xchg
es
lret
gs
pop
leave
aaa
pop
add
test
pop
mov
lret
mov
xor
int3
cmc
xor
and
imul
iret
pop
cmp
bound
pop
mov
test
and
sti
mov
mov
call
out
jecxz
and
and
fcomp
or
add
shlb
ds
ret
pop
pop
pusha
pop
frstor
outsb
out
xchg
cld
push
mov
fwait
outsb
xchg
dec
mov
jmp
dec
jmp
outsl
adc
fisttpl
roll
fs
fisttpll
and
jns
imul
sub
jmp
das
cs
and
and
fdivrl
push
sub
and
lods
push
pop
dec
cmc
xchg
outsb
cmpl
sahf
mov
in
sub
pusha
mov
sbb
clc
pop
outsl
pusha
inc
jno
mov
out
test
mov
push
iret
add
sub
enter
or
repz
fdivs
jno
scas
das
mov
cltd
imul
in
xchg
cmp
lds
cwtl
into
push
xorl
sbb
or
xor
stc
lahf
add
mov
lea
in
sbb
bound
fnsave
clc
inc
shll
xchg
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
faddl
jl
jle
mov
imul
mov
or
in
mov
bound
sbb
sub
dec
jne
dec
pop
rorl
dec
cmp
or
jmp
ret
stc
push
and
das
pop
ss
add
fs
ret
cmpxchg
jle
dec
jmp
jp
adc
mov
sbb
jo
cmpsl
stc
in
daa
or
test
jp
imul
in
mov
lahf
sub
enter
or
pslld
mov
jl
and
pop
dec
mov
adc
and
fcmovbe
loop
lret
jge
push
lcall
out
cmpsb
cmpsl
jbe
or
mov
sbb
pushf
xchg
test
jo
imul
push
hlt
and
jne
add
loopne
repnz
inc
adc
dec
std
cltd
cmp
aas
stos
test
out
push
rcrl
inc
sti
arpl
fstl
imul
or
jge
add
es
mov
js
orb
xor
sbb
xchg
and
sub
push
fcmovbe
mov
cli
and
mov
push
cwtl
idivb
xchg
add
mov
inc
mov
adc
push
jmp
hlt
push
enter
or
lods
dec
int
ss
inc
rcll
int
dec
icebp
push
icebp
lea
lret
out
xlat
pop
pop
std
loopne
notl
ficoms
mov
pop
mov
shrb
stos
mov
or
adc
and
or
push
push
jbe
cmp
xchg
xchg
jmp
mov
shrb
stc
icebp
add
sbb
cmp
jno
pop
adc
push
inc
iret
push
adc
sbb
dec
cmp
add
add
push
cmp
fldenv
cli
mov
dec
and
inc
and
test
inc
mov
pop
ss
mov
cli
cmp
enter
outsb
mov
mov
movsb
cmp
lcall
pusha
fldenv
aas
negb
fdiv
sbb
jl
shlb
jb
jno
test
xchg
mov
mov
sahf
lret
iret
push
arpl
repnz
scas
adc
aaa
fwait
cltd
or
je
mov
or
xchg
push
inc
loop
cmp
and
je
push
js
out
xor
stos
andl
add
cmp
push
inc
outsb
inc
dec
call
call
jp
or
pop
aad
cmp
popf
jecxz
pop
adc
int3
rcrl
mov
ds
sbb
and
pop
cmpsl
loop
hlt
imul
cwtl
shlb
cltd
xchg
mov
sbb
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
mov
lods
jle
jl
jle
cltd
xchg
sub
sbb
cmp
rclb
dec
add
cmp
int
scas
insl
lahf
mov
adc
jb
dec
xor
lds
cmp
push
sbb
xchg
cwtl
inc
lret
adc
sar
add
cmp
or
jne
and
cltd
lahf
adc
sbb
add
jge
lods
lret
stc
cmp
adc
testb
fidivrs
pop
ljmp
fcompl
xchg
push
pop
push
dec
mov
aas
stc
push
mov
jp
cmc
jbe
push
psrad
cmpsl
inc
rcrb
cmpsb
and
xchg
insl
imul
roll
cmp
fwait
push
movsl
or
inc
dec
xchg
mov
jns
lods
sarb
mov
push
test
and
mov
pop
orb
xorb
scas
mov
mov
lods
jp
xor
rcll
cld
std
lretw
adc
cmp
js
cs
neg
mov
fisubrs
add
mov
mov
jno
lea
cli
or
ret
xchg
xchg
out
xchg
mov
xorl
cmc
mov
jg
dec
int
icebp
jno
outsb
sub
mov
lret
lods
inc
pushw
dec
ss
or
insl
sub
lret
sti
test
fstp
daa
lret
inc
jmp
cmpb
loope
dec
outsb
call
jecxz
lret
addr16
cmp
pushl
xchg
test
outsl
scas
aaa
sub
mov
push
dec
clc
cmpsl
jmp
sahf
fistl
adc
inc
lret
jmp
xchg
xchg
mov
push
lea
movsl
cmp
adc
push
mulb
out
das
adc
insl
xchg
push
pop
adc
push
dec
loop
sub
aad
clc
gs
cli
ja
inc
dec
pop
fnstsw
mov
lea
rcll
or
std
push
jbe
dec
and
loop
frstor
cmp
xchg
cmp
inc
push
inc
aad
jbe
cmp
testl
mov
test
fldenv
ficompl
stos
sarb
int3
testb
inc
xor
inc
cmp
imul
lods
inc
je
jno
icebp
out
mov
sbb
push
mov
icebp
xor
mov
or
lcall
mov
scas
addr16
test
mov
cld
push
gs
and
xchg
jo
iret
in
jmp
dec
cmp
dec
adc
xor
xor
sub
xchg
adc
xor
adc
cmp
xchg
jns
dec
loopne
xlat
js
popa
add
dec
lods
into
xorl
add
loopne
xchg
cmc
dec
cmp
aaa
sub
and
iret
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
jo
stos
jle
jl
jle
xchg
dec
loop
outsl
pop
test
enter
shlb
pop
xlat
mov
inc
or
cmp
pop
xor
xor
cmc
pop
mov
mov
push
mov
dec
fcomps
rcr
mov
fcom
lret
loope
jne
cmpl
sti
in
into
pop
xchg
pop
lret
arpl
jle
in
arpl
dec
cli
out
inc
mov
add
popf
lahf
xchg
mov
fcomps
sub
push
mov
lock
push
jl
jle
mov
cmpsb
mov
pop
add
add
fidivl
and
jne
pop
jnp
mov
mov
and
inc
data16
outsb
pusha
inc
bound
sub
push
loop
test
in
xor
and
fsts
imul
mov
jp
outsl
test
shll
xchg
add
popa
push
ret
cmpsb
sub
xchg
cwtl
push
add
lret
sub
inc
stc
dec
mov
pusha
int
pop
scas
test
lret
xchg
ja
lock
push
mov
fisttps
or
pusha
cmp
mov
mov
mov
jl
out
pop
adc
adc
movsb
adc
mov
mov
cli
mov
inc
jnp
ret
add
repnz
loopne
push
cmp
outsb
mov
mov
cli
jns
dec
dec
fstpt
aam
inc
idiv
lahf
aam
add
rcrl
mov
aaa
jbe
aas
ficoms
rol
in
nop
insl
mov
mov
insb
jae
hlt
mov
pop
mov
incl
cli
pop
lret
xor
dec
jbe
stos
adc
outsl
inc
adc
adcb
sub
std
and
cmpsb
and
push
mov
jg
jle
outsl
jmp
xchg
dec
cli
jmp
mov
mov
data16
cmp
push
mov
jnp
jns
cld
neg
mov
outsb
popf
int3
mov
in
sub
sub
ret
inc
imul
mov
pop
gs
ss
lcall
xchg
adc
lea
adc
loopne
xor
out
xchg
and
xchg
adc
dec
mov
out
cmp
or
mov
icebp
arpl
xchg
scas
pop
adc
inc
mov
lret
cmp
mov
lret
out
pop
cmp
test
pop
enter
data16
jmp
inc
loope
sub
mov
mov
movsl
mov
xor
pop
movsl
adc
and
out
nop
inc
push
adc
lods
je
popa
imul
jg
test
pop
daa
jns
jno
xchg
sub
movsl
data16
mov
and
pop
ficoms
iret
fnstenv
fucom
xchg
je
xchg
icebp
or
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
stos
pushf
push
jl
jle
cli
cmpsl
inc
jl
aad
negb
mov
push
shlb
xlat
rolb
pop
outsl
cmp
xchg
test
or
loop
and
xchg
icebp
mov
xchg
ds
pop
push
add
push
add
pushf
je
xor
mov
das
dec
lds
daa
dec
pop
imul
push
inc
xchg
mov
dec
pop
cmpsb
mov
cmpl
insl
cmp
cmc
xchg
xchg
xchg
adc
pop
in
bound
add
add
loop
enter
inc
push
cli
mov
mov
pop
mov
mov
aam
loope
xchg
sub
mov
das
mov
jmp
xor
sbb
fcompl
mov
or
call
jae
jnp
and
mov
inc
sub
or
dec
push
xor
scas
mov
xchg
stos
je
hlt
xor
cmp
out
inc
jo
pusha
mov
xchg
les
cmpsl
je
xor
pop
sti
push
pop
in
xchg
sub
xor
js
and
xor
cmp
lock
outsl
dec
and
sub
outsl
in
pop
push
mov
sbb
cmp
in
inc
push
cli
out
sahf
mov
push
push
mov
xchg
test
pop
push
add
cmp
pop
pop
add
dec
bound
adc
pop
cmp
js
pop
xchg
dec
jnp
shlb
mov
cmp
mov
adcl
lea
xchg
in
fidivrs
mov
or
outsl
leave
popf
pop
test
xchg
call
or
mov
lods
daa
imul
pop
dec
dec
pop
xchg
sub
inc
mov
arpl
sub
testb
sub
int
mov
jmp
stos
add
sub
xor
jns
and
test
xchg
cmpsb
pop
adc
cmp
mov
xor
dec
test
ret
cli
sub
pop
sub
adc
test
xchg
test
dec
push
mov
in
mov
ret
sbb
ficomps
push
stc
push
mov
push
insb
sub
pop
out
cli
jmp
mov
cmpb
jge
xchg
in
aad
lods
and
jle
sub
je
pop
in
test
mov
cmp
cs
or
push
jns
dec
cmpsb
cmpsl
xor
stos
mov
inc
call
pop
test
mov
gs
adc
subl
and
outsb
sbb
pop
int3
popf
lret
rcrb
and
mov
and
jnp
and
inc
adc
push
cli
test
pop
or
dec
lahf
push
push
lahf
jne
sub
lds
orb
test
sbb
add
or
pop
jno
xchg
add
cmp
jl
jle
lods
mov
add
push
je
enter
mov
imul
mov
sbb
leave
fwait
jg
jge
outsl
xlat
popf
cmpsl
loopne
repz
sub
jns
mov
aad
cltd
inc
mov
leave
sbb
push
mov
imul
test
loope
pop
cmpsl
popf
push
cli
mov
inc
mov
aaa
in
insl
aaa
lret
xor
sbb
pusha
jb
in
add
cmp
sub
in
xor
add
xchg
jns
aam
enter
aaa
rclb
out
push
or
sbb
in
xor
xchg
xchg
icebp
jge
push
push
or
fadds
dec
daa
push
xorb
cmpl
mov
push
sub
mov
sbb
push
gs
popf
in
adc
push
push
jg
mov
pop
js
sub
mov
stos
jne
insb
jge
sarb
cmp
add
dec
icebp
push
mov
jb
mov
fcmovb
mov
rcrl
cmpb
pop
add
add
sub
inc
jg
and
cmp
into
adc
and
or
enter
inc
scas
ret
xor
mov
dec
clc
enter
mov
ret
insl
mov
out
jnp
xchg
jmp
and
push
les
mov
in
mov
fstl
int3
movsb
ss
sub
xchg
cmc
cmp
sbbl
pop
adc
les
jl
clc
rcrb
test
mov
add
adc
push
fildll
jae
adcb
cmc
mov
or
sub
ficoml
int
add
call
mov
or
jge
arpl
scas
mov
sub
xchg
and
add
iret
fwait
cwtl
mov
mov
rcl
mov
push
das
push
mov
jmp
jnp
xor
pop
out
stos
xchg
dec
adc
mov
neg
add
rcrl
sbb
cmp
arpl
xor
and
scas
mov
jg
push
in
sbb
fnstcw
cmp
pop
cs
adc
fs
xchg
movsl
mov
lcall
mov
mov
cwtl
inc
movsb
icebp
js
out
xchg
fst
scas
out
or
decl
iret
shlb
fisubrl
js
repnz
popf
imul
mov
arpl
jmp
movsb
push
insl
outsl
xor
in
lahf
shrb
jle
jbe
in
dec
repz
sar
cltd
push
push
mov
mov
in
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
xor
jle
jl
jle
mov
mov
mov
mov
lock
bnd
and
jns
mov
xor
lods
les
iret
mov
xor
movsb
js
push
cltd
mov
iret
mov
lods
aas
mov
inc
sbb
lahf
das
mov
mov
mov
cmpsl
shrb
in
jp
arpl
pop
mov
pusha
or
jmp
mov
lret
mov
imul
jle
enter
sbb
pop
les
lret
lcall
enter
bound
decl
stos
and
lods
cmp
jae,pt
xchg
jns
rclb
ds
lea
aam
nop
iret
aad
mov
movsb
push
dec
in
lock
and
sub
or
leave
aas
mov
cmp
cltd
adc
add
and
inc
rol
dec
lahf
lds
cmpsl
ljmp
fwait
cli
cmc
sbb
add
push
bound
cmp
add
out
or
xor
push
push
push
dec
pop
cmp
rorl
push
pop
cmp
inc
and
inc
test
mov
xorb
or
inc
sti
clc
xor
sub
in
lds
sub
mov
orb
cli
cmpsl
out
repnz
lds
leave
mov
jne
ja
mov
dec
sbb
das
lds
pop
push
push
in
fdivs
lods
jno
enter
cmp
jl
aam
mov
mov
cmp
sub
clc
adc
mov
sarb
pop
fstps
mov
icebp
int3
or
cmpsl
pop
subb
push
xor
hlt
inc
push
stc
and
mov
fildl
and
sbb
push
sub
pop
adc
iret
imul
and
xchg
xor
pop
inc
sub
cmp
mov
dec
add
test
sub
adcb
cmp
icebp
cmp
mov
sub
sti
fwait
aas
ja
aaa
fidivrl
aad
jbe
inc
in
mov
insl
cmpb
out
pushf
adc
orl
out
enter
sbb
jbe
cmp
js
mov
divb
push
outsb
xor
aad
into
xchg
in
lods
mov
or
ss
pop
aad
jle
std
fdivs
or
inc
mov
mov
jo
leave
outsb
inc
mov
lret
mov
adc
daa
loop
iret
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
fisubrs
inc
fiadds
lds
pusha
add
mov
in
xchg
popa
mov
cwtl
inc
leave
mov
add
xor
mov
repz
mov
in
jmp
dec
data16
xchg
std
stos
int3
dec
movaps
pushf
pop
cld
adcb
addr16
movsl
pop
xlat
jp
and
xor
push
add
sub
pushl
dec
lds
mov
addr16
add
mov
mov
add
or
cli
mov
push
xchg
ss
mov
rorl
jmp
imul
adc
iret
aaa
or
addr16
dec
cmp
add
hlt
pop
push
pxor
inc
mulb
shlb
movsl
pop
xchg
jb
push
shl
in
ljmp
jnp
xchg
xor
ss
cwtl
fidivrl
cmp
push
out
mov
xor
mov
mov
xchg
pop
pop
addr16
pop
jmp
pop
hlt
movsl
ja
scas
xchg
cmp
call
stos
cmpsb
mov
movsb
sbb
sti
rorl
xor
std
sbbb
dec
test
imul
cmp
sbb
mov
lock
je
daa
xchg
jecxz
aas
pop
jb
or
bound
les
nop
mov
inc
xor
pmaxub
andb
dec
push
lahf
sbb
test
shl
push
xlat
pop
cmp
add
jecxz
cmc
jmp
call
xchg
rol
loopne
leave
inc
es
mov
mov
push
dec
out
insb
sti
shlb
lods
push
add
xchg
imul
mov
ret
cmc
stos
sub
arpl
adc
rol
bound
addr16
daa
pop
out
sti
adc
mov
dec
shrb
push
out
mov
xchg
push
in
bound
sbb
or
mov
sbb
or
sub
inc
mov
bound
jno
outsl
pop
rorb
adc
mov
push
loopne
jg
das
sbb
std
mov
movsl
lret
adc
sbb
xor
pop
mov
inc
mov
pop
mov
fnstenv
mov
fcoml
and
int
fiaddl
testl
aas
insl
jp
aas
or
jmp
scas
inc
adc
fsubrl
push
xor
incl
inc
dec
pop
push
jbe
mov
mov
mov
and
fs
ss
adc
in
clc
push
fchs
ljmp
stos
inc
mov
jmp
outsb
xor
rcll
jmp
add
fdivl
lock
xchg
pop
pop
mov
jle
scas
jl
jle
pop
xlat
mov
vpunpcklwd
sbb
ljmp
jp
add
jmp
je
sbb
aas
mov
push
pop
inc
jp
mov
push
addr16
jge
stos
inc
mov
lret
fmulp
add
bound
fadds
cmp
imul
jns
push
push
xchg
ljmp
push
aas
popf
add
xor
xchg
or
cpuid
call
imul
push
add
jne
cmc
mov
sub
add
push
mov
mov
add
or
lcall
mov
cmp
mov
and
sub
in
out
mov
cld
pusha
fidivrs
enter
jae
pop
fadds
inc
lods
push
fistpll
daa
xchg
sub
dec
push
mov
in
movsl
sarb
jl
mov
add
mov
xor
inc
push
call
jne
repnz
iret
sub
call
and
push
insb
ja
inc
loope
jle
jo
vpunpcklwd
leave
xlat
push
out
jae
ret
push
cmp
inc
ret
cltd
cmc
adc
icebp
push
and
cld
push
xchg
fdivr
mov
ss
jns
and
dec
xchg
aam
mov
fimuls
sbb
xor
orl
cmp
ja
mov
lds
adc
xchg
stos
push
and
les
cmpsb
inc
pop
and
adc
outsl
addr16
add
pop
pop
dec
mov
push
and
mov
es
cmp
cmpsl
jecxz
inc
cwtl
pop
cmp
out
pop
push
cmp
mov
jp
scas
aam
in
push
jp
xlat
adc
jmp
lock
push
mov
leave
push
push
sub
das
inc
push
and
pop
pop
xchg
mov
jns
xchg
imul
push
arpl
cwtl
fisubs
orb
cmp
sbb
cmp
sti
rcrl
cmp
sbb
js
add
aaa
inc
add
ss
bound
shrb
mov
cmc
sub
orb
les
cmpsl
add
push
mov
mov
in
adc
adc
and
push
cld
xor
scas
adc
sbb
addr16
inc
lea
lods
mov
pop
scas
pop
dec
loopne
push
xchg
dec
por
mov
andl
test
jmp
je
push
push
lock
outsb
dec
mov
ja
mov
jle
or
out
jle
pushf
cltd
je
daa
and
adc
pushf
aas
cmp
xchg
mov
int3
cmp
leave
mov
jnp
ror
in
push
pop
jns
mov
sub
or
jle
orb
jg
ret
mov
iret
rcl
lods
push
mov
xor
icebp
xchg
sti
jg
mov
pop
xchg
push
cli
aas
jge
dec
in
out
rclb
subl
push
mov
inc
pusha
addr16
pusha
mov
arpl
mov
push
jmp
in
xchg
lret
jmp
mov
pop
push
inc
rclb
out
fs
push
into
push
arpl
test
je
xor
push
xor
inc
scas
sub
mov
mov
in
inc
cmp
popa
loopne
pop
xchg
pop
pop
sub
ljmp
sbb
jle
pop
mov
iret
dec
bound
loope
lret
push
cltd
iret
or
rcll
pushf
cmp
sbb
and
cmp
stc
and
push
cld
xchg
test
jecxz
xchg
cmpsb
out
cmpsl
leave
std
test
jle
sub
negb
fnstcw
cltd
pop
xchg
mov
jp
mov
push
xor
sbb
mov
movsb
push
cmp
pop
lret
xor
rcl
sbb
stc
mov
xor
gs
push
cs
dec
outsb
and
mov
cmpsb
push
popf
or
and
adc
push
push
adc
pop
js
daa
mov
int3
fwait
adc
or
icebp
addl
movsl
lods
add
pushf
lret
cs
inc
mov
sahf
sahf
mov
shll
jne
lods
lea
test
add
jae
push
add
orb
outsl
rcrb
and
mov
mov
mov
mov
sub
push
adc
ss
cmpsl
scas
aad
inc
dec
lods
jnp
loope
or
mov
cmc
mov
jmp
or
jecxz
push
data16
mov
cli
test
xchg
iret
cmp
add
lock
xor
je
fldenv
lea
bswap
dec
push
enter
je
and
rcrl
push
sti
sbb
pop
and
mulb
icebp
xlat
jle
mov
aas
xor
xchg
push
data16
scas
inc
ljmp
and
or
loop
or
in
outsb
dec
rcrb
rolb
fbld
and
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
cwtl
pop
sbb
inc
jle
scas
jl
jle
aad
ljmp
cmp
ljmp
add
push
fcoms
fists
mov
cs
rolb
mov
gs
notb
fsubrs
and
data16
clc
aad
es
xchg
cwtl
sub
dec
mov
lods
sub
mov
stc
lret
sbb
sti
pop
sbbb
mov
sbb
int
cwtl
jno
in
adcb
sahf
push
dec
xchg
sti
mov
push
or
push
test
hlt
dec
aaa
jbe
fcomps
popa
jmp
fidivrl
or
push
je
jge
xchg
adc
ss
jg
icebp
sbb
pop
mov
dec
test
in
sbb
dec
xor
pop
dec
cmpsl
jmp
cmpsl
xor
and
je
sahf
jae
dec
pusha
pop
insl
sbb
ja
inc
shlb
lcall
pop
shll
xor
daa
sub
jmp
mov
repnz
xchg
loop
mov
testl
dec
es
out
push
cli
jge
jne
mov
insl
out
cli
out
repz
sub
mov
and
outsl
dec
scas
bound
mov
sub
ret
inc
mov
int
stos
inc
sti
xor
cmp
jge
push
in
jno
xor
mov
mov
je
mov
mov
bound
xchg
mov
pop
mov
mull
out
push
add
push
in
cld
leave
sbb
out
orl
jmp
arpl
les
mov
lock
test
je
flds
leave
jnp
clc
push
stos
das
out
xchg
es
mov
fnsave
scas
xchg
test
or
sub
adc
hlt
inc
enter
mov
icebp
xor
or
or
push
dec
mov
xchg
lock
pop
sub
jg
ljmp
enter
jg
fcompl
ja
xor
xlat
jmp
stc
scas
or
pop
leave
add
mov
fmull
sbb
push
inc
fdivl
xchg
and
jle
cmp
enter
xchg
test
fs
test
adc
dec
sbb
pop
pop
mov
and
jmp
dec
les
push
arpl
hlt
push
clc
adc
jne
xor
jbe
jmp
test
outsb
sub
jg
into
dec
iret
mov
in
test
aaa
mov
adc
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
cmp
loopne
inc
jle
scas
jl
jle
fldt
xchg
dec
add
cmpsb
cwtl
orb
fwait
and
iret
xchg
pop
mov
popf
and
cs
and
mov
sbb
pop
mov
lock
sub
dec
out
push
mov
fwait
pop
cwtl
movsb
inc
jno
inc
inc
insb
or
dec
mov
in
lret
push
push
add
pop
sub
or
outsl
add
orl
cli
fwait
faddl
pop
dec
rcrl
push
push
push
dec
mov
mov
outsb
imul
xor
cli
mov
arpl
xor
ret
stos
loope
out
jnp
sahf
outsb
sub
sub
js
stos
insb
in
sbb
cmc
sbb
rcrb
cwtl
cmp
or
xchg
fnstenv
pop
ret
pop
adc
or
push
adc
inc
sbb
dec
or
mov
fwait
ljmp
mov
cmpsb
outsl
lods
jo
and
cmpl
jmp
sub
fcmovnu
inc
repz
sub
push
lock
in
inc
and
xchg
jo
and
addr16
imulb
jb
insl
int
dec
and
xchg
xor
push
jno
mov
mov
stc
adc
jbe
pop
adc
or
insl
fsts
jnp
or
xor
fiaddl
hlt
push
mov
mov
fwait
xchg
cmp
xor
jbe
cmp
aaa
xor
mov
pop
pushf
loop
pop
xchg
adc
lock
clc
mov
fdivr
mov
jno
js
jbe
adc
inc
mov
dec
pop
xor
dec
adc
add
xchg
xor
and
fs
push
push
inc
fxch
icebp
repz
in
clc
data16
dec
add
movsl
daa
adc
popa
pop
jp
test
movsb
test
adc
add
sahf
jl
test
xor
jle
jo
and
call
cld
push
dec
mov
xchg
loop
clc
pusha
in
loop
jno
adc
pop
xchg
dec
lods
jnp
fnstenv
sub
or
push
xchg
dec
dec
jge
loopne
xor
aad
inc
sahf
mov
out
adcb
leave
adc
cmp
and
cmp
cld
cmp
pop
or
nop
out
xlat
les
cmc
fwait
daa
inc
sub
pusha
mov
shl
sti
pop
and
sbb
add
push
lcall
repnz
add
ret
push
gs
push
push
jge
dec
ret
bound
clc
lcall
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
fdivs
mov
movsb
jg
jle
ret
push
je
xchg
mov
lock
jne
mov
addl
rorb
ret
aam
mov
test
fbld
imul
and
arpl
push
insb
inc
loopne
cmc
add
jp
add
mov
arpl
bound
mov
mov
pushf
data16
inc
fildll
sub
outsl
jecxz
add
pop
push
inc
insb
int3
mov
dec
xor
arpl
hlt
pusha
mov
adc
pushf
in
pop
xchg
test
mov
sbb
cmp
xchg
cmpb
loope
jl
jnp
sub
mov
divb
popf
call
and
and
stos
pop
dec
xchg
sub
jle
cld
out
jno
mov
inc
adc
xchg
xchg
and
dec
pop
cmp
add
sub
sbb
jle
push
dec
inc
lods
add
push
lahf
ljmp
rolb
cmpsl
sub
dec
dec
mov
or
pop
fsubrl
mov
jo
ret
lods
js
inc
cmp
data16
subl
cmp
mov
pop
or
push
sub
cmp
sbb
test
jp
cmp
inc
stc
sar
adc
movsl
out
jno
push
push
mov
xchg
jns
or
in
xchg
pop
imul
aaa
adc
dec
and
xchg
dec
push
repz
cmp
int3
pop
dec
enter
popf
jl
or
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
in
daa
mov
sub
jle
movsb
jg
jle
sarl
jge
and
cmp
sub
jmp
and
sub
leave
xchg
movsb
stos
lods
cmp
imul
mov
xchg
int
cli
das
mov
pusha
xlat
xor
cmp
das
ds
add
jge
out
ret
rol
xor
in
sub
and
cmc
or
pop
aad
push
inc
xchg
rclb
aas
jbe
loopne
mov
pop
sub
out
xrelease
mov
cmc
inc
pop
lret
cmpsl
cmp
xor
scas
rorl
jmp
cwtl
bound
or
sbb
ss
loope
mov
es
into
and
pop
subb
jns
mov
or
test
or
adc
adc
movsl
movl
in
outsb
cmp
lahf
mov
stos
add
aad
mov
pop
aad
popf
sub
xor
out
adc
or
leave
adc
dec
pop
ja
xor
enter
ret
pop
pop
xchg
pop
jg
sub
mov
aas
lds
aam
pop
insb
stc
xor
cmp
jae
les
mov
lcall
cmp
ja
mov
push
sub
ja
sbb
fcoms
mov
mov
call
add
inc
and
cltd
mov
arpl
ljmp
cli
hlt
jb
push
pop
cmpsb
clc
jle
xlat
in
add
decl
inc
mov
out
insb
xor
in
insl
jle
cli
sub
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
pop
cmp
test
roll
add
cwtl
cld
xor
jge
daa
mov
test
lret
inc
jno
push
jne
call
push
shll
dec
xchg
in
stos
add
cmpl
mov
repnz
lods
fldt
pop
dec
imul
les
insb
pop
mov
adc
pusha
int3
or
loopne
xchg
bnd
push
dec
rcrl
mov
jecxz
mov
mov
insl
adc
sar
cmp
mov
lret
or
adcb
sub
inc
pop
dec
stos
cmpsl
pop
ficomps
push
ja
jns
adc
and
cmpsl
adc
jp
call
cmp
shlb
lret
rcr
xor
and
or
pop
enter
in
mov
mov
insb
xor
imul
scas
js
dec
pop
push
stos
adc
cltd
pop
popa
xchg
ss
pop
inc
and
sbb
push
dec
jnp
adc
loopne
and
data16
lret
add
pop
ficoml
in
jle
lcall
push
loope
add
add
cmc
in
jne
testl
cmc
xchg
sbb
xchg
leave
pop
aad
jnp
cmp
nop
fsubp
cld
aam
sub
add
decb
pop
fisttpll
pop
int
std
inc
repz
sbb
ret
and
xchg
mov
jle
fdivs
lret
adc
or
ds
enter
mov
stc
loopne
mov
out
leave
pushf
out
stc
xchg
shll
inc
repnz
int
add
jno
lock
push
adc
inc
bound
lcall
inc
mov
lea
mov
sbb
imulb
bound
bound
mov
inc
dec
aaa
aad
mov
daa
leave
xor
pop
ret
in
scas
push
pop
sbb
push
out
je
fildl
jmp
pop
add
mov
dec
in
lcall
mov
cmp
xlat
ret
movsl
inc
in
sbb
push
jns
add
add
adc
mov
mov
push
into
movsl
fisubrs
add
push
insb
sbb
rcrl
ss
divl
push
mov
dec
out
lret
out
cwtl
mov
ret
fstps
mov
rcl
jl
ret
out
sbb
fwait
mov
lahf
mov
jae
sub
cwtl
jmp
test
test
sbb
sub
or
sbb
jns
decb
fs
sub
icebp
leave
push
test
and
out
push
push
out
adc
fsts
sub
cmp
mov
sub
sbb
dec
jle
and
xor
jg
imul
inc
adc
push
jno
cmp
push
mov
lea
or
mov
stos
movsl
pop
lahf
out
xor
sarl
lea
adc
push
data16
ficomps
out
es
sbb
ret
bound
add
add
mov
roll
rorl
mov
add
pop
fdivr
scas
jl
jg
jns
rorb
aam
sub
jbe
decl
and
cld
dec
int
dec
das
mov
out
outsb
lcall
pop
stc
popf
adc
mov
push
adc
aas
or
pop
loopne
inc
mov
subl
xchg
cwtl
and
push
mov
cmp
push
movsb
and
std
testb
les
adc
in
jge
sub
mov
xchg
das
jb
mov
and
leave
int
rcrb
les
mov
ljmp
int
add
sbb
xlat
mov
into
subl
popa
daa
mov
insl
pop
daa
sbb
daa
add
outsb
iret
mov
mov
jecxz
test
cmp
push
ret
xchg
dec
and
in
mov
aas
arpl
xchg
adc
add
inc
or
pop
dec
or
and
add
add
loope
loopne
repnz
jne
mov
ret
xchg
shlb
fcmovnb
sbbl
aaa
cmp
aam
repz
int
mov
mov
dec
mov
lcallw
xchg
stc
inc
sub
mov
lods
adc
arpl
shlb
subl
int3
test
loope
loope
push
inc
xor
movsb
mov
stc
ja
adcl
fsub
sbb
mov
mov
loope
popf
in
xor
inc
xor
int
ja
insb
cmp
cli
lahf
dec
pop
push
push
pusha
pusha
or
bound
fsubl
add
xlat
filds
lret
add
fstl
jmp
enter
jmp
adcl
mov
mov
jecxz
cmpl
mov
cld
into
pop
jle
jb
xchg
pusha
mov
or
push
and
inc
cmp
aas
jbe
xor
cmp
push
pop
cs
add
add
cmc
insl
cmc
out
lcall
enter
mov
add
add
movsl
adc
pusha
andps
xchg
cmpsb
rorb
aas
jo
add
ss
ds
inc
les
bound
sbb
jo
adc
xchg
mov
sbb
stc
mov
or
gs
js
iret
add
push
ss
jp
mov
lock
or
push
imul
test
and
ljmp
jae
mov
movsl
adc
jno
loope
dec
pop
pusha
rorl
leave
inc
subb
dec
xchg
mov
push
add
jle
inc
inc
mov
fstpl
repnz
xor
ljmp
stc
xchg
and
repz
aam
jmp
mov
adc
hlt
addr16
add
out
fildl
push
push
leave
inc
lcall
pop
push
cmp
pop
xchg
sub
adc
mov
hlt
notl
sbb
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
adc
outsb
cmp
dec
scas
or
xchg
add
dec
int
gs
adcb
scas
mov
jg
or
cli
push
popf
out
cmp
ret
addr16
and
fcomps
ret
dec
mov
push
sbb
cmpl
sbb
mov
daa
int3
aaa
and
in
ret
add
mov
mov
sbb
add
sub
push
sahf
sub
cmp
push
lret
fadds
pop
int
arpl
adc
add
mov
jb
ds
addr16
xchg
in
rcr
sub
xor
bound
aas
rcrb
xchg
push
shrb
jg
gs
mov
sub
mov
repz
pop
bound
ds
mov
sbb
imul
sub
cmp
add
add
jle
and
scas
sti
jle
pop
push
pop
pop
imul
add
jmp
ljmp
cmp
aad
mov
setl
sbb
or
cmp
movsl
cmpsb
sub
test
and
fisttpl
imul
xchg
xorl
cmpsl
test
inc
inc
xchg
jo
fcmovne
pop
loop
lods
cmp
jae
sbb
pushl
icebp
movsb
sbb
xchg
fldt
icebp
inc
dec
and
jp
mov
inc
jle
add
inc
std
dec
dec
call
dec
das
add
inc
hlt
inc
aam
mov
sbb
pop
loop
jmp
in
dec
rcl
lods
mov
mov
jnp
push
aam
mov
xchg
cmovl
fwait
sbb
sub
test
adc
fnstcw
outsl
push
push
push
negl
fstpt
jno
rclb
cmp
pusha
pusha
add
sahf
enter
fwait
popa
inc
add
ret
or
les
clc
jns
lods
sbb
push
jmp
in
in
imul
add
lahf
fnstcw
ss
lahf
stc
bound
sub
fiaddl
add
mov
xchg
sti
pushf
cmpsl
dec
sahf
dec
xchg
js
xchg
cmpsb
dec
sub
and
adc
mov
outsb
ss
scas
xchg
add
jo
addb
out
insl
and
pop
loopne
cmp
or
cli
mov
sbb
lds
aad
xchg
lock
pop
cli
push
insb
and
dec
jns
pop
out
fpatan
mov
and
test
movb
mov
and
aam
xchg
add
xchg
jp
xor
fnstcw
rorl
xchg
fidivl
int
mov
in
push
xor
wrmsr
fadds
push
incb
pop
out
lds
call
add
mov
xchg
push
add
mov
xor
aad
mov
hlt
mov
adc
cmpsb
roll
mov
and
xor
stos
stos
pop
into
sahf
addr16
inc
sub
inc
push
push
fstl
cmpsb
cltd
xchg
int3
adc
sbb
add
add
push
jl
jle
insb
out
cs
stc
dec
mov
add
imul
je
xor
lret
mov
sti
clc
icebp
mov
insb
mov
lods
pop
mov
repnz
out
loop
add
mov
sub
push
dec
inc
jae
jle
lea
mov
icebp
outsl
xor
mov
fcmovu
icebp
movsb
lock
mov
stos
push
jge
das
xchg
mov
mov
pop
es
adc
mov
ret
mov
dec
xor
add
divl
pop
pop
popf
mov
pop
jmp
xor
shrb
jmp
mov
int3
imul
sbb
xchg
stos
icebp
loope
jl
jne
sbb
mov
stos
test
movsb
jmp
sarl
mov
cs
out
inc
fimuls
cmpsb
mov
imul
push
sub
mov
cmp
mov
adc
adcb
pop
movsl
and
sahf
push
loop
pop
sarb
ja
add
mov
adc
in
xor
adc
push
faddl
add
roll
ret
jns
push
dec
mov
dec
mov
push
dec
lahf
mov
dec
mov
cwtl
or
jae
mov
mov
mov
add
inc
cmp
les
aas
sub
xor
mov
pop
inc
shlb
stos
or
mov
clc
adc
xor
insl
lret
mov
and
aad
cmpsb
inc
xchg
or
dec
imul
mov
call
mov
test
popf
fisubrs
cmp
sub
and
dec
sbb
lods
jg
rol
lret
and
pop
pop
xchg
mov
mull
inc
movsb
repnz
mov
mov
into
or
aaa
mov
jno
inc
jo
jbe
fwait
cld
sahf
fisubl
mov
sub
mov
fidivrs
int
xchg
xor
sub
lds
sbb
aaa
cmp
test
add
add
data16
jne
mov
lcall
add
add
out
and
push
sub
int
mov
adc
shlb
lea
out
pop
int
inc
je
ss
dec
push
jne
les
push
aaa
loope
insb
hlt
imul
les
fisttps
fwait
push
out
outsb
push
mov
sarb
rolb
push
adc
jne
mov
movb
nop
xor
loope
clc
mov
dec
test
mov
mov
fs
aaa
pop
cmp
cmpsb
inc
sti
imul
pop
mov
lea
scas
mov
aaa
inc
ljmp
xor
jg
xchg
inc
pop
xor
adc
pop
or
adc
mov
popa
jnp
push
add
sub
mov
addl
mov
and
cmp
arpl
sbb
pusha
mov
stos
dec
or
and
mov
mov
add
jnp
add
jnp
sti
xchg
lahf
mov
mov
add
pusha
or
mov
mov
adc
dec
jg
inc
jae
mov
inc
mov
mov
xchg
sub
in
mov
cmpb
shr
inc
sahf
daa
or
push
fldenv
pop
push
push
xor
pop
sub
mov
aaa
aam
mov
mov
cmc
inc
or
add
add
cwtl
pop
or
out
lcall
pushf
xchg
xchg
jmp
pop
jp
aas
cmp
repnz
scas
push
or
and
push
and
push
sub
push
sub
jg
imul
popa
pop
fadd
jmp
dec
or
sub
das
pop
sahf
pop
mov
push
ret
add
test
mov
cld
dec
mov
pop
cld
and
sahf
dec
cltd
xchg
fidivl
imull
adcl
scas
imul
nop
xor
add
pop
sarl
mov
mov
add
add
mov
xchg
mov
add
mov
inc
jmp
xchg
mov
sbbb
inc
movsb
movsl
hlt
mov
dec
fadd
fdivs
jne
add
and
loope
ds
push
stc
cld
mov
ds
repnz
cmp
adc
mov
add
popa
es
rclb
and
dec
in
xor
push
adc
gs
in
add
inc
insl
jle
or
dec
or
aas
mov
negl
jg
aas
adc
ja
jnp
or
lock
mov
xchg
sbb
gs
xor
pop
stos
mov
jo
test
adc
jg
int
xor
sbb
sbb
outsl
cwtl
xor
and
outsb
and
mov
fdivl
push
in
into
jmp
and
jns
sub
jecxz
jnp
sub
cmp
stos
imul
mov
add
add
repz
std
repz
jbe
hlt
and
add
add
loop
xchg
jecxz
xchg
mov
loope
leave
and
dec
pushf
sbb
jbe
pop
fldt
jp
lret
mov
fs
inc
mov
fcmovbe
ret
sub
sbb
dec
push
fidivrl
in
jmp
xchg
or
sub
test
stos
clc
inc
xchg
fsubl
push
sbb
push
dec
xor
enter
pop
cmp
inc
cmp
enter
jmp
movsl
mov
loopne
pop
ret
cmovs
lret
or
call
cmpsl
add
fnstsw
sub
repnz
push
pop
pop
pusha
movsl
lcall
cmp
adc
inc
ja
lcall
jl
push
std
int
ss
cmp
mov
push
xor
js
call
fcomps
fistpl
and
fbstp
outsl
in
push
or
addr16
xlat
jbe
cmp
push
cmp
inc
icebp
cli
dec
dec
xor
dec
mov
pop
inc
incl
add
in
sub
cmp
arpl
je
push
pusha
xor
loope
add
mov
dec
add
mov
js
mov
std
xchg
pop
xor
test
mov
out
nop
push
lret
gs
sub
js
jmp
dec
popf
in
sub
lret
inc
test
jp
inc
mov
cli
das
jo
push
bnd
test
aad
nop
int
fld
sbb
outsb
test
push
in
out
movsl
push
repnz
mov
in
aas
push
lds
jmp
hlt
fmul
mov
lcall
mov
stos
pop
and
in
lahf
jge
push
bound
jmp
loope
or
mov
jl
and
mov
jge
cmc
test
outsb
xchg
mov
aad
arpl
mov
mov
cmpsb
out
pop
add
inc
adc
jmp
stos
or
arpl
pushl
out
subb
sub
push
push
mov
sub
add
insl
lcall
mov
inc
sub
and
push
sub
add
add
in
add
aam
jl
and
fsubs
add
dec
mov
aaa
ret
les
dec
mov
outsb
cmp
mov
sub
inc
xchg
xor
and
mov
mov
mov
fbstp
xor
sbb
push
fs
jp
sub
test
popa
jno
push
xchg
ljmp
pop
pop
pop
pop
out
movsl
inc
mov
rolb
fcoms
cmp
sbb
sti
lock
sbb
mov
aaa
dec
pop
lcall
adc
or
xchg
and
out
fidivrl
fnsave
xchg
sbb
sti
cmp
cld
ficoml
imul
push
int
test
lahf
push
out
lcall
mov
push
ja
xlat
fnstenv
movsb
xchg
std
lea
xchg
jne
mov
call
rcrl
add
add
xchg
in
mov
incl
shll
add
add
cmpsb
add
cmp
and
test
add
insb
fstl
and
mov
push
push
fdivrs
xchg
fcomps
repz
lods
push
es
and
cmp
and
mov
into
mov
mov
ficoms
add
or
pop
clc
lock
mov
adc
mov
loop
arpl
adc
and
mov
test
mov
sti
or
hlt
cmp
mov
mov
movb
scas
ljmp
and
mov
xchg
js
stos
push
jg
dec
out
in
adc
cmp
add
mov
mov
iret
mov
pop
xchg
lods
sete
cmc
xchg
mov
fmul
and
loopne
sti
sbbl
jge
inc
in
rolb
and
lods
insl
dec
xor
and
add
add
mov
pushf
xchg
pop
add
add
sub
in
negl
sub
movsb
outsb
out
mov
add
push
sahf
mov
mov
sti
and
nop
push
or
jbe
js
adc
xor
ud1
push
sub
pop
leave
mov
stos
add
pop
fisubrs
pusha
pop
test
mov
loope
fisubl
vmwrite
rcrl
shll
and
hlt
pop
fadd
mov
inc
mov
jl
pause
ljmp
push
cltd
sbb
popf
dec
mov
in
cmp
dec
stos
jl
rorl
aaa
aas
std
into
push
aam
cmp
mov
inc
inc
jg
sbb
iret
inc
pop
cmp
push
cmp
xchg
push
inc
idivb
sub
push
pop
adcb
push
shrl
iret
rorl
adc
repnz
ja
sub
or
adc
add
pop
inc
jne
inc
fs
add
pop
movsl
fimuls
cs
popf
inc
jb
cmp
add
int
in
inc
pop
fiaddl
add
fistpll
stc
dec
push
fsubl
arpl
cmp
add
add
bound
add
sbb
sbb
pop
je
and
jmp
pop
push
jle
stc
movsl
and
in
pop
enter
inc
push
or
mov
mov
test
mov
clc
movsl
test
xchg
dec
ret
jp
mov
bound
fwait
aad
add
jmp
xor
mov
out
dec
rcl
push
xor
divl
aaa
scas
bound
push
out
insl
lret
in
inc
push
gs
add
jmp
fisubl
clc
and
lahf
lea
ficoml
adc
push
ds
jmp
add
cmp
cmpsl
xchg
dec
cmp
cmc
arpl
and
and
sub
or
loopne
insl
push
inc
sub
and
and
pop
sbb
fistpll
sub
sbb
add
add
adc
push
push
push
mov
lock
out
add
dec
fchs
sti
imul
divb
pop
fdivl
lahf
add
faddl
inc
inc
mov
js
push
sub
pop
mov
pop
mov
add
int3
mov
insb
push
jb
popa
pop
call
es
in
in
cmpsl
in
xchg
sarb
into
addr16
xor
out
adc
mov
adc
test
pop
mov
popf
add
jo
fst
cmp
mov
ret
sbb
stos
sbb
or
movl
lods
mov
dec
xlat
pop
cmpsb
enter
jo
fdivr
lods
push
xchg
jno
adc
and
xor
insb
jl
pop
sbb
scas
mov
js
cmp
shlb
jl
mov
jae
or
popa
outsb
das
push
inc
call
rclb
xchg
push
jns
lret
scas
xchg
faddl
dec
inc
addr16
add
test
cltd
cmpsb
into
sbb
test
gs
jnp
movb
out
repnz
add
pop
lcall
les
adc
or
add
add
jmp
imull
aaa
push
repz
inc
movb
nop
jmp
or
mov
inc
sub
adc
pop
add
push
fwait
es
loopne
adc
cmp
mov
insb
lahf
insl
sub
jns
pop
jmp
test
jmp
test
xchg
pop
jno
cwtl
xor
jecxz
into
cli
lret
mov
push
or
inc
stc
inc
data16
jle
inc
in
jg
mov
shr
cmovne
dec
mov
push
popa
lcall
shll
ficompl
in
push
jmp
mov
jnp
ja
mov
xchg
mov
icebp
out
cmc
cwtl
cmp
or
mov
jle
out
das
mov
ja
lcall
push
add
push
call
lret
push
push
cmp
jg
xchg
dec
push
les
test
add
pop
mov
push
decl
das
inc
test
dec
call
add
jmp
mov
mov
sbb
fisubrl
movsb
or
mov
mov
push
ret
add
or
pop
xor
das
pop
xchg
shll
lods
dec
ds
lds
imul
xchg
mov
add
sbb
sub
mov
mov
sub
iret
loop
test
ror
bound
shr
out
xchg
arpl
adc
push
sahf
cltd
jmp
lret
jecxz
cmp
call
stos
loopne
jmp
out
outsl
mov
xchg
dec
out
popa
inc
mov
int
mov
mov
cli
xchg
mov
xchg
aam
xchg
test
cld
adc
pop
fmulp
pop
cmpsb
cmc
clc
jle
or
and
mov
rorw
stos
add
sub
xchg
cmp
xor
inc
test
jg
cli
iret
dec
cltd
cmp
mov
adc
test
leave
add
adc
test
es
aaa
inc
ret
js
lods
clc
jne
add
add
jmp
in
push
sub
or
jmp
add
pusha
pop
ret
addr16
in
mov
sti
pusha
mov
cltd
sti
aad
pop
xor
test
mov
dec
jle
add
cld
xchg
adc
mov
jl
out
sbbl
les
xor
inc
ret
loopne
add
and
js
scas
xor
mov
gs
push
repz
jg
inc
idivl
or
push
dec
jle
push
call
push
mov
inc
inc
xchg
fiaddl
dec
lods
or
mov
daa
fdivrl
lock
push
mov
iret
or
jne
jle
ss
mov
lods
adc
dec
iret
jmp
xchg
mov
xchg
es
push
xchg
rclb
push
inc
mov
dec
cmc
jle
jecxz
out
push
pop
jmp
ja
ret
mov
inc
insl
addb
adc
enter
add
out
and
data16
add
cmpsl
rclb
jo
push
add
add
outsb
xor
mov
lcall
ljmp
test
nop
jo
sbb
jo
popa
xor
int
and
adc
inc
push
mov
out
pop
pushf
or
add
cs
cs
in
int
mov
jl
pushf
xchg
adc
repz
mov
test
and
mov
adc
xchg
repz
rolb
adc
adc
xchg
test
lret
pop
movsl
mov
cmp
divl
pusha
xchg
insb
xchg
cmp
adc
mov
into
add
pop
fstp
test
dec
adc
jg
dec
pop
loop
push
cmpsb
add
int3
sbb
not
pop
sbb
push
cs
iret
sete
sahf
mov
jae
outsl
mov
fdivp
or
sbb
notl
es
sub
cmp
lcall
scas
sbb
push
xchg
jnp
dec
inc
aad
sbb
pop
adc
adc
xchg
mov
dec
add
add
inc
ror
lock
jnp
xor
xchg
sub
add
add
movsl
jns
jg
mov
lcall
xor
jecxz
sub
mov
jns
lods
iret
ret
fs
iret
dec
std
pushf
inc
in
shl
and
in
xor
lret
das
aam
mov
cmp
test
andl
stos
je
dec
jle
xorb
stos
out
dec
scas
in
mov
xor
call
or
imul
sbb
lahf
popf
cmpl
aad
js
pop
insl
pop
sbb
sub
fldt
pop
into
and
arpl
xchg
cmp
dec
outsb
or
das
pop
mov
cmp
push
sbb
or
mov
xor
xor
mov
andb
sbb
and
outsb
imul
and
push
mov
add
cmpsl
nop
mov
imul
les
push
mov
xchg
add
add
repz
fisubs
mov
mov
add
add
int3
fs
xchg
in
cld
pop
fwait
imul
jg
loope
cmp
repnz
ficoml
rclb
imul
ficoms
sbb
fcmovb
inc
repz
sub
push
inc
leave
xchg
dec
jno
lods
jge
call
lods
push
add
adc
movsl
loop
mov
sti
in
and
add
push
inc
pushf
mov
push
push
insb
loop
call
subl
and
fs
mov
sahf
imul
shrl
pop
jnp
in
stc
neg
out
mov
sarb
cli
push
sub
in
inc
call
dec
bound
pop
lods
loopne
outsl
imul
cld
stos
jbe
sbb
jb
sbb
in
movsl
jne
into
jecxz
fcom
stc
push
cwtl
and
jns
sub
and
cld
cmp
pop
or
gs
stc
mov
or
daa
ret
inc
neg
pop
movaps
cmp
inc
loope
lahf
xorl
mov
add
add
out
sbb
mov
in
add
add
pop
jo
jnp
mov
into
ret
test
inc
dec
pusha
aaa
ja
xchg
repz
movsb
mov
push
ja
lcall
stc
dec
add
xor
xchg
mov
mov
mov
icebp
imul
or
sub
mov
or
xchg
pop
das
xor
inc
jnp
scas
push
test
inc
jmp
lret
arpl
lcall
sbb
lods
xchg
mov
inc
fsubs
hlt
adc
cmp
sub
adc
sub
test
lock
xchg
adc
dec
mov
or
fucomi
gs
inc
pop
bound
sbb
incl
jbe
jno
into
in
mov
or
lret
test
lret
mov
leave
js
cli
adc
cld
sahf
into
adc
cwtl
sbb
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
movsl
ja
add
inc
adc
ds
push
mov
push
movsl
jmp
cld
mov
loopne
and
jne
xor
scas
mov
in
outsl
mov
loop
aam
les
mov
das
pop
mov
cmp
inc
mov
fistl
pop
shll
lds
mov
adc
or
cld
or
roll
mov
jns
roll
mov
out
push
or
call
or
test
pushf
inc
aad
dec
adc
cmp
sub
je
call
dec
ret
xor
sub
dec
in
rol
enter
mov
scas
mov
add
mov
test
das
push
mov
inc
adc
jne
sbb
or
and
jg
test
sarb
iret
sub
test
and
xchg
xchg
add
add
lret
pusha
rorb
cmpsb
mov
pop
cmpsb
insl
out
add
add
negl
mov
sbb
xchg
cmp
sub
loop
fdivrs
pop
or
fs
dec
add
pushf
or
xchg
jae
add
rolb
test
inc
lea
ud1
pop
or
sbb
in
popf
int3
fsts
movsl
loope
jg
sbb
je
addr16
cmc
dec
insl
leave
or
cmc
ljmp
leave
or
inc
call
pop
insb
pop
arpl
dec
stos
xlat
xor
adc
add
or
dec
cmp
mov
insl
aas
repz
fxch
and
sti
push
xor
xchg
adc
cld
push
movsb
add
cwtl
lea
fstl
loope
outsl
insb
jo
fcoms
mov
cmpsb
loope
and
xchg
and
jecxz
popa
jo
cmp
movsb
add
push
xor
dec
push
lock
add
gs
testl
or
inc
jb
add
add
daa
stc
mov
xor
jb
inc
cmp
jecxz
pop
mov
mov
cmp
enter
push
push
add
repnz
lods
dec
jp
and
cltd
dec
popf
add
mov
xchg
shll
xor
push
into
popf
xchg
xor
dec
fldenv
jg
clc
int
push
push
mov
lret
cli
test
nop
jle
push
sub
hlt
es
nop
das
inc
inc
push
cmpsl
push
pushf
jl
push
xchg
and
negl
mov
filds
dec
stos
je
outsl
stos
mov
adc
mov
je
imul
cmpsb
shrb
mov
dec
mov
enter
sarb
mov
aam
inc
jo
add
push
push
fsubs
mov
outsl
icebp
xor
sub
pop
pop
jecxz
cmp
filds
add
imul
shrb
inc
jno
pop
adc
orb
pop
mov
and
daa
lahf
mov
pop
das
stos
mov
add
add
outsl
pop
fistps
mov
ja
cmc
add
xchg
out
ds
xchg
test
push
or
xchg
pop
ficoms
push
and
xor
pop
push
adc
cmc
lea
negb
xchg
jae
icebp
dec
cmc
lahf
mov
sub
sub
mov
shlb
fcoms
adc
or
mov
sbb
testb
ljmp
inc
ret
jnp
inc
pop
mov
cwtl
mov
mov
xor
and
xlat
lds
xchg
bound
sub
stc
pop
mov
xor
or
aad
ss
dec
inc
xor
cmp
fmuls
xor
ds
roll
add
pop
cmp
and
fcomp
push
std
jne
imul
shlb
mull
mov
scas
dec
xchg
je
add
mov
fucomi
xor
mov
jl
add
add
je
pop
and
inc
xor
pop
je
xchg
movsb
cmpsb
push
in
nop
push
fists
adc
mov
call
dec
inc
xor
pop
mov
or
jne
fiadds
pop
mov
xchg
or
sbb
xchg
xor
jo
les
adc
sub
adc
fcomps
imul
ljmp
jb
pop
mov
xadd
aaa
xor
sbb
xchg
or
rcr
jg
dec
sarb
dec
pop
in
pop
cli
loope
xor
cmc
add
sub
or
mov
push
jns
mov
loopne
out
out
mov
push
pop
dec
aas
inc
xchg
clc
cli
leave
add
jl
xor
inc
insl
xchg
fcompl
pop
in
loop
and
rol
cwtl
add
fwait
adc
dec
sub
push
mov
mov
xor
add
add
push
inc
pop
jns
aas
loopne
sub
repz
add
push
ja
lret
sarb
insl
dec
rcl
arpl
iret
movsb
sarl
and
out
pop
jg
jo
in
fdivrl
adc
dec
push
xchg
lahf
dec
loop
xchg
andb
imul
mov
jns
mov
test
lods
inc
dec
js
repnz
xchg
into
xor
push
and
adc
jge
inc
test
jecxz
mov
clc
jl
cmp
jbe
mov
repnz
repnz
pop
and
xchg
test
xchg
outsl
sbb
roll
lods
movb
or
adc
sarl
push
leave
aas
rorb
shll
aaa
mov
loopne
sbb
loop
lahf
ljmp
and
repz
mov
and
pushf
adc
pop
cltd
das
jge
mov
push
shrb
add
and
andb
pusha
notb
std
popa
adc
fistpl
cwtl
cltd
add
add
jnp
mov
int3
push
jnp
xchg
add
add
mov
in
nop
push
out
movsb
jecxz
push
outsb
or
test
jle
sbb
sbb
cmp
ljmp
add
movsl
movl
mov
jg
lock
xchg
xchg
jge
cmpsl
aaa
fimuls
xchg
adcl
xor
lret
mov
and
cmpsl
mov
aaa
sbb
mov
pop
add
xor
sbb
push
push
adc
mov
data16
xchg
lcall
dec
cltd
or
mov
cltd
dec
iret
adc
sub
sti
push
push
clc
fwait
add
xor
mov
or
xor
jo
jg
mov
mov
addl
call
mov
negl
rcl
mov
jle
stos
or
sbb
xchg
js
sahf
das
mov
loop
and
out
xchg
lcall
pop
fcmovbe
sahf
fisttpll
add
add
xlat
pop
xlat
jg
mov
test
add
add
jecxz
int3
xor
pop
call
xchg
rcrl
scas
gs
std
popa
mov
jnp
addr16
mov
mov
fistl
je
int
data16
mov
and
mov
popa
add
aam
imul
mov
es
fnstcw
ja
or
mov
fisubrs
jb
test
scas
shl
fisttps
and
rcll
int
pop
fsubrs
lahf
dec
imul
push
stos
mov
xchg
dec
sti
lgs
add
gs
jno
dec
push
push
stc
js
sbb
add
call
xorl
lret
mov
add
jo
sub
jno
dec
and
sbb
and
cmp
movsl
mov
js
ds
push
and
mov
imul
or
push
push
inc
xchg
mov
movsl
jg
decb
hlt
inc
icebp
dec
sub
sub
repnz
imul
add
xchg
mov
idivl
stc
dec
jno
testb
add
pop
xlat
rolb
addr16
pop
lds
mov
dec
dec
fs
lret
jns
pop
rorl
mov
shlb
movsb
jp
mov
mov
mov
dec
ja
lret
inc
sbb
sbb
sarl
dec
fiadds
je
ljmp
jnp
add
into
push
adc
addr16
js
js
pop
mov
lahf
mov
in
pop
mov
loope
imul
and
and
outsl
sbb
push
dec
jo
push
es
xor
pop
add
push
fisubrl
inc
push
pop
dec
adc
cmp
sbb
pushf
dec
and
jae
and
cmpsb
xchg
or
repnz
jmp
adc
jae
cld
in
push
pushf
push
jecxz
mov
sub
fwait
inc
push
mov
inc
lret
popf
pop
push
push
sub
je
adc
outsb
sbb
mov
xchg
sub
sbb
jg
insb
add
add
mov
fisubrl
mov
add
add
out
int
cmp
test
frstor
mov
mov
or
adc
out
push
xor
aas
jns
cmp
popf
inc
repz
inc
jmp
pop
mov
push
addr16
test
iret
test
or
outsl
xchg
xchg
fidivrs
add
mov
imul
jmp
xor
jns
and
lcall
mov
add
and
push
test
js
push
push
mov
gs
pushl
repz
jnp
mov
clc
enter
call
push
sub
outsb
ret
cmpsb
push
push
mov
out
pushf
insb
test
adc
test
jnp
jge
fwait
xchg
in
loope
sti
lret
pop
insb
or
pop
cli
jne
repnz
mov
mov
mov
test
mov
cwtl
lods
sbb
out
out
incl
add
jmp
imul
lahf
repnz
stc
dec
lcall
add
daa
pop
xor
pop
out
cmpb
jge
sub
xor
repz
mov
pushf
xchg
adc
inc
loop
movsb
addr16
std
xor
jl
push
add
and
push
adc
jg
es
mov
cs
mov
orl
or
or
jg
xor
jl
and
add
enter
cmpsb
shll
cmp
mov
or
inc
bound
inc
call
push
or
pop
movsl
movsb
push
push
aaa
bound
sbb
lock
test
jb
push
xor
dec
stc
sbb
pop
sub
movsl
sbb
mov
mov
jg
sbb
mov
mov
pop
cmp
outsl
outsl
lock
adc
in
outsl
repz
in
testb
and
sub
repz
sahf
mov
lahf
pop
cmp
jnp
jp
test
push
les
adc
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
jp
mov
add
add
mov
cmpsb
or
mov
movsb
fucomip
in
xchg
jmp
sti
out
cmp
jno
fs
mov
add
test
pop
mov
or
sbb
rcl
pop
adc
mov
shrb
je
gs
inc
ds
mov
js
les
push
call
cmp
popa
pushf
xchg
pop
fwait
in
sub
addb
lret
jo
mov
inc
sbb
rcrl
jge
imul
inc
adc
outsl
and
push
adc
enter
hlt
push
nop
mov
cwtl
cmpsl
xchg
lock
push
fucomp
ss
pusha
inc
call
das
mov
daa
jge
in
push
rol
inc
mov
pop
xchg
testb
fiadds
loop
data16
mov
in
push
mov
psllq
xchg
inc
int
pop
cmpsb
push
cmpsb
cmpsb
xchg
inc
fld
xorl
pop
fwait
sub
or
sbb
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
out
js
sbb
das
sub
dec
mov
rorb
testb
punpckhbw
jge
pop
insl
out
and
aam
inc
cmpsb
or
repz
or
mov
adc
xchg
inc
xchg
imul
fwait
andl
dec
andl
in
adc
dec
lods
movsl
mov
insl
mov
mov
fnstenv
mov
inc
loope
cmpsl
cmp
mov
ljmp
jg
and
sub
es
bnd
sub
xorl
xor
aaa
pushf
daa
add
out
and
cwtl
xchg
mov
adc
dec
push
leave
enter
ss
hlt
loope
es
pop
subl
popf
dec
lcall
push
or
pop
pop
or
pop
sub
inc
push
in
jae
clc
push
cmp
jne
pop
and
add
add
aam
int
aaa
das
aam
sub
add
aas
loope
cmpsb
sbb
int
rclb
fidivrl
mov
pop
out
mov
pusha
das
test
pusha
jbe
sahf
or
mov
imul
mov
fidivl
jp
imul
sbb
xchg
sbb
cmpsb
cmp
fbstp
or
out
les
mov
mov
lret
popl
fucomi
enter
jns
add
pusha
push
aas
fs
dec
aad
xor
negb
ss
fadd
insb
in
dec
aad
jo
xor
and
int3
and
jae
and
out
ret
or
scas
scas
in
jnp
test
hlt
shlb
daa
pop
xor
jmp
jbe
xchg
xor
jbe
faddl
jg
fsts
fcoms
adc
imul
add
inc
add
mov
pop
ds
add
pop
jne
dec
sbb
jb
mov
add
arpl
addr16
sub
and
xchg
hlt
scas
cld
add
add
push
int3
pop
mov
test
fdivr
pop
stc
lret
and
xlat
lahf
jne
aam
pop
dec
popf
ja
jne
int3
es
stc
lcall
push
jecxz
push
jle
cmp
xchg
or
inc
inc
imul
xor
mov
pop
movl
jecxz
push
popa
xchg
mov
or
adc
out
mov
insb
pushf
or
or
sbbb
stc
fnstsw
icebp
xchg
mov
cli
hlt
addr16
and
push
push
push
out
adcl
imul
cltd
lods
xlat
cli
aas
mov
inc
orl
test
popf
mov
cmpsb
ss
dec
jecxz
mov
xor
clc
jne
insb
and
sahf
lods
sbb
inc
xorb
sub
mov
inc
int
bound
aas
enter
dec
push
jp
mov
lret
shr
cltd
push
sti
push
and
outsb
aam
pop
outsb
fwait
add
add
out
out
pushl
xchg
xor
imul
add
add
or
insl
sbb
pop
lods
and
cmp
xlat
xchg
or
fnstcw
push
jne
daa
jmp
fs
ret
ret
fmuls
cmp
movsb
add
add
xor
sti
pop
pop
mov
adc
sbb
js
std
sbb
push
pop
fwait
mov
pop
sbb
shl
cmp
mov
out
sub
xor
jl
adc
loope
xchg
iret
push
push
dec
pop
add
sbb
pop
lock
jmp
adc
movsl
imul
mov
fs
mov
xor
adc
popf
filds
xchg
arpl
dec
sti
xchg
js
sbb
roll
sbb
pop
scas
and
cld
xchg
andl
int
aas
je
push
dec
jl
push
pusha
mov
outsl
mov
repz
arpl
push
ja
out
cwtl
fwait
mul
cld
jnp
jno
sarl
je
int3
and
inc
pop
add
add
push
scas
mov
cmpsl
push
outsl
mov
add
add
mov
jne
popf
roll
mov
push
push
loope
out
xchg
fucomi
mov
repnz
inc
mov
and
inc
insb
pop
sbb
mov
test
pop
addr16
lret
add
pop
ljmp
test
xor
jnp
jno
mov
popf
push
ds
dec
loopne
dec
scas
mov
aam
leave
pop
sbb
cld
insb
aad
dec
inc
cmp
fstl
int3
sbb
arpl
mov
inc
test
ret
inc
bound
fs
mov
jmp
push
xchg
enter
loopne
xor
loop
jo
lods
lods
cmp
fiaddl
mov
sti
imul
mov
insl
pop
xor
jbe
or
cmp
pop
ss
push
outsl
add
fiaddl
lret
pushl
sub
loopne
inc
add
repz
lahf
nop
leave
add
inc
test
cltd
cmp
push
lods
mov
add
aaa
xchg
and
movsl
mov
mov
mov
add
incl
add
sbb
xchg
inc
test
sbb
cmpsl
jne
scas
mov
inc
push
push
inc
stos
xchg
and
mov
dec
insl
xor
idiv
in
int
std
jno
sub
js
test
mov
mov
pop
aad
fcmovne
out
cmpsb
cmp
mov
push
xchg
adc
jb
and
xchg
pop
mov
inc
inc
dec
sbb
add
and
push
cli
hlt
jge
frndint
xchg
push
push
jbe
loopne
mov
cmpsb
inc
mov
or
daa
sbb
imul
push
mov
in
test
cs
adc
sbb
push
inc
ficoms
xor
jns
mov
sbb
xchg
cmc
fadd
xor
and
loope
push
pop
push
inc
sub
insb
jns
mov
dec
pop
lods
adc
lret
adc
inc
daa
push
inc
push
jae
into
dec
xchg
repz
mov
mov
jbe
int
mov
sub
inc
mov
ja
add
fdivl
mov
sub
add
add
cmpsb
pushf
cmp
sti
mov
adc
popl
xchg
and
pop
bswap
mov
mov
jecxz
fnstenv
lock
lock
xor
fldpi
jno
std
add
add
inc
inc
inc
xor
ror
dec
and
mov
cld
xchg
sti
jne
pop
xor
sub
push
xor
test
mov
test
insb
insl
hlt
inc
mov
out
mov
lds
enter
cmp
aaa
fsubrl
mov
inc
xchg
pop
adc
xchg
out
push
cwtl
xor
dec
inc
aam
xor
pop
mov
push
jle
test
pop
out
add
rorl
inc
stc
inc
inc
in
add
mov
sbbl
movsb
or
or
xchg
es
cltd
cmp
dec
jge
mov
dec
add
add
mov
mov
lods
imul
lcall
add
add
inc
dec
mov
popa
xor
icebp
xchg
out
push
es
sahf
cwtl
mov
lret
sbb
rolb
cwtl
pop
cmp
in
add
xor
ror
add
mov
push
fimuls
mov
lds
dec
jge
mov
jo
adc
cmp
sub
insb
outsb
in
sub
xchg
ja
ds
out
mov
cmp
mov
adc
ja
in
adc
pushw
inc
add
adc
shl
dec
bound
xor
ljmp
ret
cmp
pop
ja
dec
jle
xchg
ss
leave
test
inc
add
fwait
xchg
daa
in
mov
loopne
out
lcall
sahf
enter
loopne
pop
or
or
push
xorl
adc
inc
repz
cmpsl
mov
jnp
xchg
leave
xor
jns
dec
sub
add
xchg
sub
scas
or
cmp
sbb
loopne
add
add
xor
clc
or
inc
pop
mov
fdivp
mov
xchg
sbb
divb
jo
fimull
shll
ficomps
lret
imul
adc
fwait
xchg
cmp
push
dec
dec
loopne
dec
aam
xlat
xchg
and
push
test
xchg
in
sub
das
sbb
push
fwait
inc
xchg
popl
lea
add
xor
jecxz
test
outsb
mov
mov
in
xchg
dec
jb
adc
fisubrl
xor
pop
sub
mov
cmp
repnz
inc
or
sbb
mov
sbb
icebp
ja
in
xor
inc
pop
mov
push
arpl
add
in
rolb
cltd
cmp
stos
rol
mov
add
sub
sub
sbb
sub
push
push
std
or
add
pop
sbb
aad
das
mov
jbe
add
add
hlt
fbld
mov
add
imul
push
into
jg
icebp
into
jns
in
pusha
pushf
repnz
sbb
lock
jnp
ret
inc
in
fs
daa
fistps
out
dec
sub
xchg
lods
pop
mov
inc
or
xchg
push
dec
xor
cs
bswap
sti
xchg
leave
sub
loop
sbb
and
fstl
mov
push
fildl
mov
sbb
xchg
cmp
xchg
lret
lock
icebp
pop
xchg
xchg
mov
leave
inc
in
ret
push
movsl
or
leave
fists
dec
stos
and
mov
scas
jb
dec
xor
lret
stos
imul
roll
dec
rcrb
sub
xchg
sti
rcrl
out
decb
icebp
sub
vmulsd
mov
insb
inc
pop
xor
jnp
data16
leave
stc
call
dec
sbb
add
xchg
add
cmpsb
xchg
out
or
das
aaa
mov
stc
cmp
mov
loope
dec
daa
add
add
into
fwait
add
mov
ljmp
add
inc
lea
add
sub
scas
pop
aad
pop
sbb
in
negb
es
in
lods
rclb
shll
xor
dec
stc
pop
fisubrs
addr16
popa
pop
adc
add
rorb
loope
sub
sbb
cmp
rcrb
clc
mov
imul
fbstp
dec
idivb
add
jae
lock
jae
mov
fiadds
shll
movsl
fucomi
shrb
cltd
lods
xchg
test
out
aam
xchg
mov
xchg
mov
add
jl
insl
ret
sbb
mov
out
jecxz
insb
js
pushf
lcall
push
lahf
fldenv
imul
popf
xchg
leave
cmpsl
push
insb
push
icebp
sub
pop
into
mov
mov
jbe
mov
outsl
repnz
rcl
add
jl
test
out
mov
pop
sarb
in
push
jecxz
fildl
add
fsubp
cmp
lods
adc
sub
xor
pop
jp
mov
shll
inc
adc
je
clc
mov
inc
je
dec
sbb
lock
jo
imul
jp
mov
cmp
notb
jg
fwait
adc
movsl
insl
sbb
cmp
cmp
outsl
mov
xor
fnstcw
dec
or
mov
mov
aaa
jmp
and
fisttpl
in
ljmp
sub
pop
call
dec
push
jmp
lcall
sbb
orl
dec
xchg
adc
jle
xchg
imul
push
mov
mov
mov
xor
push
mov
mov
xor
test
cmpsb
push
jp
out
das
stc
fsubp
add
inc
jno
insl
mov
or
jne
mov
mov
stos
adc
fldcw
cmp
cmp
mov
add
inc
out
aas
mov
rorb
repnz
push
add
add
adc
mov
or
out
imul
or
lret
adc
popf
and
divl
enter
mov
lcall
xchg
xor
pushf
sub
insl
mov
sub
sbb
add
jno
das
pop
mov
repz
ret
aad
cli
or
ss
mov
jae
add
popa
pop
pop
sbb
aas
dec
ret
jbe
xor
pop
xor
loope
in
mov
int3
push
and
addl
pop
ret
jmp
add
push
cltd
std
push
adc
pop
push
jl
jp
ss
cmc
adc
jnp
mov
dec
dec
push
mov
outsl
inc
xor
fwait
into
mov
add
scas
jmp
je
mov
or
cmp
and
add
rcl
mov
popf
ret
or
das
dec
arpl
lods
mov
cli
leave
xor
sub
adc
add
add
push
bnd
dec
leave
and
add
in
add
add
mov
cmp
out
bound
push
or
nop
sahf
aam
ja
xor
in
mov
push
insb
mov
loopne
jg
scas
ja
xor
inc
mov
scas
pop
push
sti
mov
dec
imul
aas
inc
shrl
xchg
pop
daa
out
pusha
sub
cmp
dec
cmpsb
fwait
into
into
jb
icebp
cmpsb
test
movzbl
es
scas
add
rcl
mov
add
xchg
fmull
dec
and
or
mov
sarl
mov
enter
mov
daa
lret
icebp
mov
add
jmp
es
mov
stos
jmp
and
inc
mov
sub
sub
cwtl
adc
leave
xor
cmp
pop
out
add
mov
in
xchg
rcrb
or
or
nop
lcall
insb
mov
loopne
sub
xchg
dec
sbb
sub
pushf
mov
mov
add
add
in
out
ja
filds
addr16
push
or
add
into
and
loopne
mov
popa
push
ljmp
enter
test
ljmp
dec
test
fs
loop
xchg
sbb
lock
pop
push
push
out
push
xor
lea
pop
inc
sub
push
add
adc
cmpsl
adc
shlb
mov
mov
sub
lahf
mov
jo
or
cmp
push
sub
outsb
addr16
xlat
mov
adc
or
icebp
shrl
call
jg
push
fcmovnu
shll
cmp
sub
mov
stos
pop
xchg
icebp
imul
cmp
push
mov
push
adc
dec
jg
std
sbb
and
push
cmp
sbb
ret
aas
inc
add
jg
jo
subb
stos
and
in
push
inc
jne
sbb
mov
ljmp
sbb
push
pop
cmp
ror
jmp
popa
dec
inc
add
add
pop
in
inc
push
or
in
out
or
add
stos
aad
cld
pop
orb
fidivs
fisubrl
push
ret
mov
and
cmp
pop
dec
mov
mov
push
push
mov
out
outsl
dec
hlt
imul
jg
sbb
lea
lret
fisubrs
mov
add
sbb
insl
mov
sbb
push
fwait
add
call
mov
cmp
ja
movsl
adc
mov
fwait
ret
mov
test
push
scas
popf
dec
mov
test
cmp
pop
sti
cwtl
cmpsl
nop
outsb
push
jge
mov
ret
cld
aam
mov
insl
add
mov
xor
inc
int
lcall
jp
sbb
inc
or
outsl
push
in
testb
jo
dec
jecxz
xchg
imul
testl
pop
xor
add
cmp
xchg
mov
mov
lods
or
cmp
lret
jae
cs
mov
mov
add
add
jg
neg
pop
daa
inc
xor
push
or
add
aad
sbb
int3
add
je
mov
push
rol
pop
mov
popa
inc
mov
ss
sub
outsl
out
or
pop
sub
arpl
mov
mov
jge
inc
inc
in
shll
shlb
sahf
cmp
push
adcb
xor
cmc
es
sahf
push
enter
out
inc
es
repz
jmp
mov
cmpsb
stc
mov
ret
or
sub
add
jne
pop
fwait
sarb
xchg
test
shrb
push
push
inc
rcr
mov
jnp
xorps
jmp
push
push
and
jp
movsl
or
aad
addr16
sbb
jle
lea
sbb
mov
shlb
fsts
lods
or
xlat
jl
leave
fs
ds
rcll
loope
jno
divb
xlat
loope
jns
cmp
or
int
das
imul
and
mov
mov
fcoms
repnz
xchg
mov
sbb
sbb
pop
push
adc
add
add
sti
jg
cmp
je
or
add
add
sbb
int3
lahf
mov
add
lahf
xchg
arpl
rcrb
sbb
mulb
pushf
dec
out
mov
rcl
dec
test
imul
loopne
repnz
fisttpll
and
out
out
rol
test
mov
imul
pop
xchg
mov
mov
mov
imul
xchg
sbb
imul
jo
lret
mov
arpl
cmp
fdivr
xchg
mov
pop
mov
dec
and
mov
push
mov
and
xchg
test
jno
shll
hlt
jae
mov
jecxz
ss
jp
dec
scas
mov
or
in
addr16
loopne
sar
pusha
cmp
push
test
sub
icebp
je
cmc
inc
cmp
aaa
adc
aad
pop
je
in
cld
test
mov
test
nop
cltd
add
in
adc
add
add
jnp
fstp
fcompl
xchg
fildl
sub
or
add
fisttpll
push
push
jl
fnstcw
mov
cld
aam
cmpsb
push
dec
ljmp
bound
adc
push
xor
and
jge
adc
nop
lret
xor
sbb
jb
push
lret
inc
cmc
scas
inc
mov
mov
and
xor
test
add
outsl
xchg
fisubrl
and
pop
mov
dec
dec
xor
sub
jmp
ret
dec
sti
je
inc
movsl
rol
sub
mov
lret
sbb
sub
push
mov
and
dec
aad
inc
mov
fldcw
add
add
sti
pusha
test
ja
rcl
xchg
loop
scas
xor
add
insb
lcall
icebp
fcom
or
fdivs
xor
push
add
test
or
mov
adc
jp
add
add
outsl
mov
add
repz
add
mov
jecxz
pusha
pop
inc
je
in
test
bswap
insl
imul
test
xchg
jo
dec
stc
fnstenvs
movsb
frstor
add
xchg
sub
jo
jo
test
and
pop
xor
sbb
mov
inc
sti
sbb
mov
xlat
or
outsl
cltd
sarb
add
lods
rorb
xchg
adc
daa
jp
add
je
sbb
jne
insb
mov
inc
adc
xor
fadd
sub
mov
mov
popa
lea
pop
andl
add
rcll
call
in
ret
andb
ja
and
and
and
outsb
pop
inc
xchg
push
xlat
xor
add
pop
jmp
mov
adc
mov
int3
sub
pushf
or
push
andb
sbb
rcll
rclb
ja
lret
and
sar
push
push
in
add
add
jmp
fldl
aas
pop
dec
or
add
add
dec
inc
xchg
and
push
add
xor
lcall
aad
jne
les
mov
sbb
cmp
xor
pop
xor
outsl
jmp
pop
push
add
lahf
test
mov
icebp
xchg
inc
or
fnstcw
js
les
in
jns
call
cld
push
out
jns
test
rorb
add
pop
jp
outsb
push
cltd
adc
ja
mov
out
mov
or
xchg
and
mov
in
push
sbb
push
repnz
stos
push
adc
stos
jl
xor
ljmp
shll
pushf
or
dec
jmp
icebp
sub
lcall
icebp
push
fwait
int3
repz
mov
in
adc
fistpl
out
dec
shlb
push
in
dec
add
cmp
cmpsl
subl
xchg
call
add
xor
xchg
lds
rcll
movsb
or
add
add
cmp
out
popf
std
in
pop
jle
xchg
fstl
andb
add
sbb
and
xchg
bound
pop
pop
mov
xchg
pop
popl
lcall
cmp
es
popf
andb
add
lods
scas
jge
ja
adc
test
mov
cmp
jne,pn
adc
iret
or
push
shll
sub
outsl
leave
pushf
jnp
cmp
cmp
clc
rclb
out
out
cltd
cmp
outsl
test
icebp
cmc
cmpsl
fiaddl
pop
aas
xor
and
push
mov
mov
inc
inc
test
fisttps
pop
and
call
cmp
stos
out
or
fs
enter
scas
push
pusha
shll
or
mov
push
and
xor
mov
ret
addr16
push
out
psubsb
divb
add
dec
cli
inc
jg
int
xchg
lods
or
jge
pop
adc
add
add
mov
movsl
adc
jno
and
rclb
pop
lahf
call
cwtl
insl
or
push
push
sub
xchg
mov
mov
fwait
addr16
mov
lea
aam
dec
xor
imul
add
int
mov
mov
sub
sub
stos
mov
mov
pop
pop
cmpsl
lcall
mov
scas
out
insl
pop
and
insl
adc
je
lret
leave
or
test
mov
imul
ret
push
and
outsl
mov
in
xor
pop
int
js
and
in
xchg
nop
jne
mov
jmp
repnz
jmp
je
cmp
add
inc
pop
jge
iret
mov
adc
roll
shll
inc
add
add
xchg
std
cmp
jle
fistpll
ficompl
adc
add
mov
sahf
ds
mov
mov
jno
mov
lds
dec
int3
push
jecxz
or
inc
loopne
jns
call
sub
pop
movsl
shrb
imul
jg
adc
and
cmpsl
mov
mov
mov
xchg
int
sub
cmp
jae
adc
adc
sbb
data16
mov
es
mov
popa
call
mov
xor
repz
lock
in
dec
inc
xchg
call
and
jecxz
add
xor
cmpsb
push
inc
push
stc
mov
insb
jmp
or
hlt
sbb
pop
int3
pop
in
jge
in
imul
dec
cmp
lahf
ret
adc
pop
mov
dec
cs
pop
xor
out
sbb
dec
dec
jg
sbb
adc
out
cmpsl
jmp
dec
fs
sahf
jo
fisttpll
out
or
add
iret
xlat
ficompl
inc
clc
ss
sbb
add
add
and
add
pop
lcall
shlb
jb
jp
push
stos
lcall
mov
scas
mov
inc
jo
sbb
sbb
cld
sbb
lahf
mov
inc
loopne
pushf
test
fisubrs
incl
or
movsb
pop
icebp
push
mov
cmp
je
das
arpl
cmp
std
or
lds
mov
push
jl
dec
xlat
out
nop
test
imul
lahf
jae
addb
or
inc
mov
pop
addl
orl
sti
add
jb
repz
xor
lea
jge
inc
dec
jge
mov
pop
loop
mov
xchg
cmp
les
xchg
lds
das
xchg
stc
add
out
std
cmp
xchg
adc
pop
cltd
jecxz
inc
and
js
push
xlat
add
add
sub
iret
outsb
jmp
push
test
je
mov
adc
add
and
cli
dec
lock
xchg
and
ret
aas
rorb
out
das
into
cmp
jnp
pop
mov
popf
repz
jb
out
inc
fsubl
jns
mov
icebp
inc
jae
jg
int
add
dec
dec
mov
xor
sti
fcompl
hlt
pop
icebp
sub
and
js
mov
sahf
stos
adc
ror
int
pop
lea
push
insl
jns
lret
lahf
mov
push
dec
sub
testl
iret
bound
jns
adc
or
dec
lcall
fsincos
jns
push
inc
mov
push
push
and
push
sub
fwait
out
cmp
daa
or
out
push
adc
inc
or
jmp
add
mov
fbld
mov
mov
cltd
xlat
inc
lds
mulb
fadds
and
add
add
std
sbb
stc
cld
or
push
add
add
jnp
jmp
clc
add
mov
mov
push
jbe
mull
movsl
arpl
out
mov
or
pop
scas
xor
sbb
pop
sbb
out
cwtl
mov
test
shll
add
xor
mov
jge
push
movb
frstor
pop
les
int
inc
mov
jns
cmp
rcrl
xor
sub
cmp
pop
test
and
lcall
xor
movsl
jle
jle
push
pop
push
push
add
test
push
push
jae
decl
ja
xor
mov
add
leavew
xor
mov
cli
push
or
and
sbb
lret
cmp
fucomp
mov
ss
loopne
addl
les
pop
fdivs
test
iret
or
pop
sub
jns
stos
gs
push
call
push
pop
lods
cmpsb
mov
negl
adc
pop
xchg
cmpsb
jns
testb
add
add
and
loop
fs
push
adcb
xchg
jne
enter
adc
sub
outsl
inc
mov
mov
add
sub
inc
sbb
dec
fsubrl
lds
and
call
mov
cmpsl
sti
lea
lods
mov
mov
xchg
xchg
insb
scas
add
cmc
pop
mov
out
push
jmp
push
sahf
das
push
xchg
insb
cmp
sub
or
push
outsl
scas
dec
cmpl
fmuls
mov
cltd
std
or
mov
pop
insl
movsl
aad
pop
cmp
adc
mov
cmp
movsl
daa
mov
cmp
lods
shrb
aaa
pop
jl
popa
push
or
lret
lock
pop
xor
cmpsb
lret
call
jbe
push
testl
pop
out
xchg
jmp
imul
imul
add
mov
dec
pushl
int3
pop
pop
adc
pop
add
add
movsb
pop
cmp
push
sub
lret
leave
mov
hlt
adc
cmp
xchg
jl
add
pop
jge
jmp
lock
adc
stos
sarl
daa
clc
test
push
mov
push
imulb
push
inc
cld
jmp
push
add
xor
add
or
and
lret
idivb
adc
movsl
push
xchg
and
mov
dec
push
arpl
push
and
clc
mov
mov
or
shrb
xor
movl
lahf
inc
pop
and
xorb
sysret
dec
loopne
test
and
das
stos
outsb
loope
filds
sub
out
arpl
loopne
push
push
sbb
xchg
std
les
out
add
sarl
jge
addr16
dec
mov
jno
jno
mov
test
in
mov
pop
sub
inc
ja
pop
aas
dec
push
fisubrl
add
stc
insl
out
cmpsl
jnp
dec
mov
sub
jns
xchg
je
push
mov
cmp
push
pop
cltd
adc
frstor
jg
push
ds
into
mov
dec
sub
lret
movsl
js
push
mov
mov
addr16
shll
sub
inc
stos
sbb
imul
push
xchg
add
movsl
pusha
and
rolb
jge
pushf
arpl
aaa
insl
inc
inc
add
xchg
jno
std
out
sub
mov
pop
std
pop
mov
int3
push
mov
sarb
cld
lahf
ss
lcall
jae
imul
popf
and
leave
pop
testl
lods
adc
std
sbb
adc
pusha
sbb
stos
call
push
or
jno
es
inc
out
mov
ss
shrb
rorl
jns
stos
mov
mov
add
add
xchg
jae
ja
div
mov
fmull
cmp
add
add
ret
push
cmp
sub
addr16
inc
orb
in
jp
sub
fcomip
cmp
jae
and
fists
lods
jmp
adc
or
rorb
inc
aaa
dec
insb
stos
sahf
shr
jb,pt
orb
popf
sbb
sbb
int
jge
mov
push
or
cmc
sub
cmp
mov
mov
or
sub
neg
mov
sub
stos
rcrl
idivb
xorb
test
cmpsl
add
outsl
loop
es
inc
cmp
shll
call
shr
fidivrl
mov
mov
mov
inc
xchg
mov
outsb
cmp
insl
enter
imul
inc
ret
repnz
xor
in
jle
push
lret
pop
mov
lcall
xchg
and
dec
add
cmp
push
in
add
sbb
inc
jmp
add
cli
std
jg
push
pushf
dec
mov
sbb
add
xchg
movsl
sbb
fs
mov
stos
mov
pop
push
mov
sbb
in
pop
mov
and
loop
movsl
fwait
adc
sti
mov
xor
jne
cmc
xlat
loop
lcall
ss
gs
xlat
clc
out
in
lea
in
pop
sbb
lahf
fwait
mov
iret
jle
pop
arpl
cltd
mov
cmp
xchg
push
cmp
pop
jae
arpl
pop
sahf
ja
jl
test
xchg
push
je
xchg
xchg
mov
mov
dec
negb
jb
sub
mov
adcl
push
dec
inc
pop
popa
lahf
cld
sub
sbb
sti
dec
movsb
jp
js
lret
dec
mov
into
fcoml
out
pop
and
mov
push
imul
int
inc
mov
nop
mov
popf
sti
outsl
imul
or
cmp
pop
pushf
enter
testl
incl
sbb
lret
fisubs
add
mov
or
pop
mov
mov
leave
mov
mov
out
adc
xor
mov
int3
insl
push
repz
mov
add
jmp
jns
int3
cmp
sub
mov
addl
mov
mov
pushf
je
push
sub
test
aam
lods
push
out
sbb
push
pop
mov
pop
dec
add
jb
xchg
scas
lds
cmpsl
mov
ss
jns
xor
popa
out
sub
jl
cltd
pop
cmp
sar
mov
sub
in
xor
adc
imul
insb
adc
or
icebp
or
adc
pop
or
adc
lea
fadds
jg
or
pop
das
mov
aam
xor
imul
pop
jbe
or
enter
add
push
es
jg
pop
or
xor
rol
sbb
add
inc
hlt
lret
ficoml
sub
inc
mov
push
cmp
shlb
aas
rolb
leave
sub
mov
cmp
repz
loope
push
repnz
or
inc
outsb
fisttpl
pop
pop
rcrb
shl
in
insl
fdivr
shll
ret
imul
mov
in
push
mov
mov
test
imul
jg
fiadds
dec
or
mov
inc
sbb
cmp
mov
mov
fidivrl
sbb
sahf
push
lcall
and
sbb
mov
sti
cmp
push
inc
mov
fldt
fcoml
in
iret
jo,pt
cmc
aam
clc
lea
mov
mov
fldenv
arpl
jmp
outsl
jmp
fcmovb
push
int
xor
repnz
gs
mov
mov
add
or
dec
push
cmp
sbb
add
bound
addr16
push
sbb
addr16
jb
push
rcrb
test
adc
int3
fadds
aaa
sbb
outsl
inc
pop
aas
out
jle
mov
add
add
mov
js
int3
cmp
addb
push
mov
mov
inc
xchg
mov
fwait
push
out
fistl
sub
push
sub
mov
mov
enter
pop
mov
or
shr
insb
jmp
fbstp
or
test
shrl
sbb
jge
arpl
mov
mov
test
xor
hlt
les
mov
scas
mov
arpl
arpl
outsl
cmc
add
push
add
jmp
xchg
sbb
mov
stos
mov
clc
test
lock
mov
scas
repnz
sub
sbb
ss
sub
test
cmp
adc
rorb
add
add
stc
lods
xor
mov
data16
push
push
add
add
mov
movsb
lret
outsl
test
push
pop
test
aaa
jg
lret
ret
std
je
dec
jns
sub
mov
adc
pusha
or
xchg
cmp
scas
dec
bnd
roll
cmp
lcall
aaa
sbb
int
jns
mov
out
mov
push
jle
adc
or
inc
sahf
cmpb
cmp
hlt
pop
sbb
add
push
fsubrl
enter
dec
sub
dec
cld
jo
and
mov
or
fwait
push
fsubl
jl
sub
dec
std
into
dec
subl
das
mov
rol
mov
test
arpl
adc
mov
arpl
mov
into
push
xchg
xor
sbb
test
sbb
lock
fidivs
notl
jmp
fidivrs
insl
daa
mov
inc
lret
adc
loope
cmp
popf
pop
add
clc
pop
movsb
xor
push
fadds
sbb
negl
pop
xor
ficoms
stos
sbb
call
mov
pop
pop
add
add
push
inc
sub
cmp
cltd
push
dec
das
fistpll
and
out
addr16
jns
dec
lret
add
xchg
mov
dec
fdivr
push
pop
dec
sub
in
sub
in
xchg
loopne
loop
xlat
les
xor
pusha
mov
push
and
testl
push
je
mov
cmp
repnz
gs
adc
test
or
dec
shrb
jle
sub
popa
pop
sbb
iret
lret
stos
leave
sbb
pop
cmp
jg
and
les
incb
aaa
jge
pop
xchg
cmp
shll
in
sahf
adc
stos
loopne
mov
pusha
sahf
in
fidivs
pop
push
int3
cmp
sbb
xor
fdivs
xchg
sub
mov
gs
jbe
mov
fwait
jne
sub
ret
es
gs
pop
ljmp
add
addr16
test
add
add
in
out
stos
jge
or
and
add
scas
cmp
fwait
mov
ret
cmp
iret
xchg
pop
push
daa
jg
gs
or
cmp
adc
test
clc
nop
jmp
cmp
xchg
jo
pop
inc
cmp
lret
or
xor
cmp
popf
cmp
cltd
outsb
sti
xchg
sbb
pusha
lock
pop
pop
sub
out
loope
cs
int
lock
pop
add
insl
filds
jmp
sbb
sbb
jae
lahf
je
mov
mov
dec
sub
int
jge
jo
push
push
fmuls
fisubrl
add
ret
push
inc
subl
test
mov
cltd
add
mov
test
push
pop
cmp
adc
mov
mov
fsubs
test
adc
hlt
mov
cmc
mov
stos
inc
jbe
ret
mov
repz
sbbl
adcb
ss
cmp
lret
addr16
or
add
dec
or
out
xchg
iret
push
aas
xchg
cmpsb
ss
bound
add
add
jno
int
js
mov
and
mov
das
std
pop
enter
ljmp
cmp
incb
stos
data16
xchg
mov
in
push
xchg
out
xchg
mov
dec
xchg
lcall
jo
dec
or
in
lods
cmp
xchg
push
mov
aaa
fnstenv
test
fnstsw
shlb
mov
es
jbe
mov
lahf
pushf
cmc
imul
cltd
push
fbld
fadd
clc
lret
jae
fwait
and
or
rcr
mov
xchg
dec
jg
dec
mov
xchg
repnz
in
mov
call
hlt
xor
mov
jbe
xchg
pop
icebp
sub
ljmp
incb
jmp
push
orl
xchg
out
mov
inc
jae
add
imul
cmpsb
arpl
xchg
adc
sub
bound
cmp
add
in
add
cmp
out
loope
jns
ljmp
add
xchg
jne
sub
pop
and
addb
gs
cmp
sahf
shlb
sub
pop
cmp
in
aad
mov
mov
leave
jnp
mov
rcr
jnp
stc
mov
pop
lret
cmpsb
xchg
divb
mov
mov
dec
aam
jbe
outsl
outsb
fs
sbb
mov
enter
xchg
jns
clc
inc
adc
mov
rcll
enter
in
lods
in
sbb
mov
adc
lcall
push
sub
hlt
movsl
decl
subb
sub
or
xchg
lods
cld
mov
mov
out
shrb
jb
jae
push
sbb
addb
mov
nop
push
test
ret
shrb
cmp
or
inc
xchg
mov
call
xchg
aad
loope
es
or
iret
aas
cmp
test
sbb
sti
push
mov
cmp
mov
add
inc
xchg
lret
les
pop
mov
addr16
das
or
outsl
call
pop
adc
jecxz,pn
sahf
adc
ljmp
xchg
inc
sub
les
ja
xchg
js
and
or
dec
sysret
leave
fs
pushf
in
xchg
xchg
mov
jg
roll
cltd
jl
test
and
in
xor
xchg
pop
ja
out
mov
push
dec
aam
push
inc
nop
in
in
xor
in
xor
scas
pop
rolb
dec
and
cli
rclb
mov
sbb
out
jno
mov
adc
lea
fucomp
push
xor
mov
push
adc
pop
lods
inc
inc
shll
fdivrs
push
cmpsb
ret
mov
xchg
mov
sahf
sahf
test
popf
cwtl
sbb
ss
cmp
fs
lods
pop
xchg
pop
fst
push
cmpsb
in
daa
out
push
test
cld
dec
rolb
add
mov
dec
idivl
cld
ret
add
mov
add
add
std
stos
stos
push
in
push
cmp
push
cmpsb
in
sbb
mov
inc
jb
inc
arpl
stc
mov
out
inc
xchg
ret
test
dec
cmovge
mov
fnclex
mov
xchg
push
movsl
cmp
add
ja
les
fdiv
cmp
pop
xchg
fnstenv
add
idivl
mov
sbb
clc
test
push
ja
inc
push
cmpsl
cmc
pop
mov
fwait
test
mov
push
repz
xor
ljmp
clc
in
xchg
loopne
mov
xchg
dec
ficoms
push
ds
pop
clc
fiaddl
push
pop
inc
push
or
mov
shl
sbb
mov
out
stc
jae
mov
push
or
adcb
push
push
xchg
pop
inc
push
lret
dec
lret
push
loope
rcrb
pop
lods
cmpsb
lret
push
daa
push
nop
scas
adc
popf
jg
inc
sub
incl
add
add
mov
iret
mov
push
add
and
add
xor
loopne
fcom
push
mov
or
push
fstpl
mov
mov
insb
shl
sahf
xadd
xchg
pop
test
ss
out
fiaddl
std
cltd
loopne
sbb
mov
fdivrs
mov
jg
jb
inc
popa
or
xor
lds
int
xor
xchg
mov
stos
sub
adc
outsl
fcomps
in
out
out
sbb
arpl
ljmp
das
pop
pushf
repz
out
out
jge
lock
jo
movsl
mov
in
or
rcrl
add
add
pop
jnp
cmpsl
sub
hlt
push
sbbb
sub
pop
icebp
sub
add
mov
add
inc
pushf
idivl
fimull
jae
imul
xchg
call
cmpsl
jl
aas
mov
imul
dec
add
pop
jg
ja
sub
sbb
mov
add
mov
mov
data16
scas
mov
push
sub
add
or
jg
arpl
mov
jnp
add
add
push
leave
shrl
xchg
cmp
sub
fistl
xor
popf
hlt
fdivp
dec
xchg
dec
mov
int3
pop
xchg
test
adc
pop
inc
repnz
pushf
repz
rol
movsb
add
adc
add
cmp
pop
or
cmp
pop
mov
add
sbb
in
adc
dec
adc
pop
pusha
sbb
fcmove
iret
les
mov
mov
push
inc
inc
cmp
pop
push
xor
jno
pop
addb
fisttpll
and
adc
pop
xchg
loopne
fimuls
cli
enter
pop
xchg
pop
xchg
sti
xor
jno
sbb
add
pop
xor
mov
cmp
stos
jmp
scas
loopne
cmpsl
cwtl
repnz
push
mov
xchg
call
in
jge
or
jle
loopne
ret
and
xor
fwait
fs
xor
add
shlb
cli
clc
cli
clc
sarb
sti
mov
faddp
andb
add
es
add
jno
xchg
dec
ljmp
pop
or
pop
sub
test
push
fwait
cmp
dec
mov
cmc
and
push
movsb
in
push
aas
je
cmp
test
mov
addb
mov
dec
das
mov
sbbl
fisubrl
pop
outsl
pop
push
or
cmpsb
pop
jl
cmp
subl
mov
adc
int
jmp
leave
scas
sub
sub
roll
inc
std
vmwrite
ja
lea
das
aam
xchg
je
pop
jnp
jl
inc
rorb
in
dec
lods
push
jp
out
in
jle
outsl
sub
inc
aaa
jnp
iret
int3
push
mov
cmp
or
pop
mov
call
dec
lods
push
dec
cwtl
int
shrl
xor
icebp
int
jge
repnz
ds
std
push
fs
jbe
dec
rcrl
mov
lcall
mov
add
add
add
jnp
out
mov
mov
add
and
cmp
jno
mov
loope
out
cwtl
cmc
jle
mov
push
push
insl
int3
stc
lahf
mov
inc
sbb
or
stos
and
add
and
mov
mov
or
push
mov
jge
insb
aad
xchg
mov
inc
jg
pop
and
dec
shlb
cmp
mov
pop
cld
sub
cmpsb
xchg
push
test
rcll
jmp
fisttps
rep
mov
xlat
fld
int3
shll
inc
or
cmp
cmp
xchg
in
mov
xchg
stc
mov
in
xchg
movsl
sbbb
movd
push
mov
mov
sbb
cmp
aaa
or
pop
lret
ja
jle
adc
addb
icebp
adc
and
jnp
lret
sbb
push
pop
mov
sub
push
inc
test
add
fidivrl
dec
dec
mov
jbe
repz
add
inc
mov
add
add
es
data16
insb
daa
mov
iret
xchg
cmc
pop
mov
add
add
lods
pusha
mov
div
and
hlt
inc
imul
mov
movsb
jle
sub
sub
mov
std
out
popf
jecxz
cs
les
add
pop
mov
mov
movsl
mov
sbb
xchg
inc
push
and
movb
mov
out
in
xchg
cmp
sub
jbe
test
or
mov
outsl
push
sub
das
adcb
fwait
lret
das
jmp
mov
mov
fldl2e
incb
mov
in
or
ss
mov
out
pop
imul
iret
fcmove
add
popf
pop
test
sahf
lahf
les
aam
push
sbbb
jl
rolb
fists
jle
fistl
xchg
or
push
and
mov
fsubrl
fstpl
addr16
lret
ret
lods
pushw
xchg
hlt
adc
xchg
sub
das
ror
mov
add
clc
mov
fldcw
add
xor
add
add
fptan
dec
inc
cmpsl
sub
jne
jecxz
aad
test
andb
fs
mov
sub
mov
jbe
mov
mov
sbb
aas
cs
xor
sub
dec
inc
or
gs
test
jge
or
arpl
dec
stos
bound
stc
jno
xchg
push
cmpsb
push
mov
adc
push
inc
sub
mov
cmpsw
and
push
inc
fucomi
and
dec
mov
lods
mov
sbbl
and
xchg
sti
mov
test
cmp
mov
jge
pop
mov
sub
mov
mov
iret
sti
push
faddl
cmp
leave
inc
add
sbb
mov
xchg
adc
imul
push
call
or
and
ljmp
dec
call
cmp
ss
add
add
and
push
sti
cmpsl
enter
cmc
pop
dec
or
add
push
pop
mov
movaps
mov
jns
aaa
mov
add
mov
arpl
jno
ret
mov
adc
mov
sbb
sub
cmpsl
ljmp
popl
test
addr16
sbb
jmp
add
mov
rorb
mov
mov
fidivrl
mov
imul
nop
fs
jle
mov
mov
scas
mov
stos
pop
adc
inc
in
or
sbb
mov
addl
fxch
mov
inc
test
into
loop
icebp
jecxz
ud0
inc
cltd
hlt
cmp
loope
xchg
icebp
mov
add
mov
das
mov
imul
mov
call
xchg
pop
sub
cmp
arpl
bound
or
div
imul
xchg
hlt
mov
pop
cltd
sub
add
mov
std
mov
dec
push
cld
pushf
mov
add
ds
fscale
divl
add
dec
fimull
lods
notl
mulb
pop
loop
imul
int
sub
insb
mov
adc
jg
addr16
in
jno
or
sbb
fwait
cmp
xor
imul
lea
hlt
lods
mov
mov
aam
daa
and
cmp
lods
xor
and
scas
scas
stos
cltd
xor
xchg
repnz
shlb
and
inc
xor
ljmp
pop
push
dec
jnp
mov
dec
mov
cmp
or
or
loop
mov
cmp
or
mov
mov
leave
test
mov
mull
jge
and
or
sub
sbb
scas
push
mov
les
dec
dec
push
decb
andb
rcll
xchg
iret
pop
cmp
rclb
imul
scas
pop
clc
push
jbe
clc
mov
out
clc
fwait
jl
into
or
push
das
push
dec
rcrb
dec
add
add
and
jecxz
and
lcall
add
add
out
sbb
xchg
outsb
mov
lds
adc
lock
test
adc
aam
rep
shlb
jge
jge,pn
push
dec
sub
out
subl
imul
cmp
push
sbb
fcmovnb
sub
mov
or
in
sub
xchg
jnp
loop
jp
fwait
ljmp
pop
bound
sbb
jecxz
sbb
lds
insl
addr16
xchg
fwait
insl
pop
adc
int
dec
sub
or
in
xor
icebp
mov
enter
sbb
pushf
sahf
add
rcr
jl
cld
imul
imul
or
int3
mov
jne
xchg
int
jne
outsl
mov
stc
aas
xor
ljmp
mov
imul
and
movsb
xchg
xchg
dec
lahf
test
scas
out
negb
in
jmp
pop
pop
and
inc
add
add
add
xchg
ficomps
cmp
lahf
clc
mov
test
add
pushf
cmp
inc
testb
push
xor
popf
aas
ss
imull
lahf
dec
xchg
or
test
cmpsb
mov
stos
call
dec
shlb
mull
lret
jno
sahf
cwtl
notb
dec
lods
cmp
jmp
test
rcrl
pop
push
gs
pushf
ljmp
out
aas
sbb
insl
pop
xor
orb
add
xchg
cmpsb
movsb
scas
rcrl
xor
enter
xor
xor
and
mov
sub
shll
sti
pop
cmp
daa
xchg
dec
sub
sbb
cmp
mov
or
jp
orl
jmp
adcb
int
xor
mov
mov
cld
mov
int3
and
xor
add
add
adc
adc
add
arpl
ja
sub
add
das
cmp
test
add
add
les
bound
sbb
sub
jp
flds
out
jecxz
jns
xor
mov
into
lods
xchg
loop
sbb
and
fsubr
push
lods
ss
sbbl
cmc
sub
loop,pt
fistl
mov
adc
inc
xor
hlt
je
inc
xor
sub
lcall
fldenv
ss
cmpsb
jbe,pt
fs
inc
push
fs
dec
aaa
dec
add
push
out
xorb
dec
push
sub
mov
or
sahf
stc
push
mov
mov
jl
sbb
xor
out
bound
xlat
jg
out
daa
adc
inc
int3
ja
push
jnp
rcrb
test
pop
test
lret
sbb
xchg
lahf
cmp
push
inc
cmp
and
data16
cmc
jmp
dec
inc
pop
mov
test
test
and
xchg
add
add
lret
mov
or
gs
pop
mov
add
add
and
mov
leave
movsb
stos
adc
out
mov
cmp
sbb
sbb
cmp
add
mov
loopne
cs
dec
push
mov
mov
pop
inc
ss
ds
lret
in
and
mov
mov
in
aas
push
xor
popa
sbb
test
push
jp
and
push
push
pop
cmp
pop
xchg
mov
cmp
cld
cmp
add
sub
cmc
fldenv
rcrl
sahf
inc
aad
je
push
fs
testb
scas
sbb
aad
mov
sbb
fs
jb
insb
aaa
sbb
icebp
fbld
push
inc
loopne
imul
enter
sbb
in
dec
roll
cld
jns
mov
in
dec
loopne
adc
fdiv
stc
adc
int
outsb
test
push
fwait
sub
dec
insb
add
push
scas
sub
stos
push
add
add
sti
pop
jge
neg
hlt
add
sti
mov
add
add
mov
dec
xor
movsb
adc
mov
mov
inc
cmp
fdivrl
xchg
es
scas
sub
pop
push
xchg
mov
cmp
cld
ss
je
adc
jns
insl
ljmp
lahf
dec
jns
jg
sub
aad
aad
cs
inc
xchg
std
cmp
mov
stos
mov
pop
fwait
jg
pop
imul
mov
jns
sti
cmc
cmpsb
xchg
add
cli
jle
xchg
out
cmpsl
sbb
jo
pop
fiadds
and
add
mov
mov
imul
pop
mov
pop
jp
push
mov
xchg
out
add
cli
sti
xchg
fcmovbe
cltd
sti
jo
jmp
lahf
paddw
pop
subl
aas
xor
cs
insl
pop
stc
nop
adc
ret
popa
outsl
lahf
mov
stos
mov
outsb
fistl
mov
push
push
cmpb
and
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
inc
std
xor
mov
add
add
xchg
dec
test
sbb
push
es
movsl
mov
cmp
mov
pop
data16
js
mov
ret
mov
push
push
fidivl
or
adc
cmp
lahf
sbb
enter
leave
daa
pop
sahf
loopne
add
jne
je
cmp
mov
testl
lahf
repz
daa
mov
pop
insb
push
cld
push
jecxz
xchg
cmp
decb
push
gs
jg
roll
xchg
jo
leave
test
pop
enter
push
mov
xor
popf
jne
and
push
std
push
cld
cli
mov
in
cs
out
loop
cmp
cmp
push
dec
inc
cmp
loopne
mov
push
shlb
in
push
mov
scas
pop
push
sbb
test
pop
adc
in
mov
sub
sub
add
in
add
or
dec
jge
cwtl
dec
int
add
pop
jp
jnp
sti
xchg
jle
jp
lods
jge
into
xchg
mov
add
add
dec
fwait
nop
xchg
push
mov
ret
sti
ljmp
decb
add
sub
cmp
xchg
shll
jne
lock
stos
shrl
or
lret
jl
ret
mov
jne
je
repz
lods
pushf
das
or
mov
mov
mov
cwtl
ss
icebp
inc
or
rcl
jg
movsl
test
mov
push
jo
xchg
sub
ret
push
dec
lret
pop
sarl
push
call
mov
faddl
sbb
out
fcoms
rcr
or
lret
negb
rcll
popa
and
add
das
inc
jge
xor
mov
aam
mov
movsl
push
bnd
outsb
fiaddl
outsb
gs
lods
sub
sbb
cltd
sahf
je
nop
push
or
iret
cld
jb
mov
sub
add
jnp
inc
xchg
push
sub
add
mov
push
sti
decb
mov
repz
add
inc
xor
mov
add
mov
lods
nop
stos
xor
leave
jnp
jg
dec
sub
xchg
in
inc
pushl
popa
in
push
gs
jmp
mov
imul
faddl
cmp
in
div
inc
sub
nop
ret
movsb
out
sti
add
inc
stc
aas
in
and
xchg
and
jl
sub
movl
es
lret
or
int3
mov
pop
sarb
add
adc
pop
and
cli
in
mov
outsb
or
sarb
in
out
xchg
leave
outsl
ljmp
loopne
addr16
loopne,pt
ffreep
adc
ret
cmc
lods
repnz
insb
or
pop
call
xchg
sti
sbb
mov
cli
divb
jecxz
and
mulb
inc
mov
mov
jo
lock
repnz
imul
popf
in
repz
or
mov
jne
add
add
cmp
xor
hlt
or
call
add
xchg
or
rcrl
mov
cltd
push
push
cltd
test
adc
outsb
fiadds
push
pop
orb
xchg
and
dec
cmp
or
stos
or
scas
dec
mov
add
mov
push
aad
cli
or
faddp
int3
push
jl
mov
mov
adc
cmc
dec
jne
fsubl
shll
lods
out
push
pop
out
or
lahf
cltd
mov
or
push
pushf
inc
divl
stos
in
mov
adc
fs
sbb
cmp
clc
lret
sub
sbb
les
movsl
inc
scas
sub
int
pop
int
pop
aam
in
lahf
pop
out
ljmp
and
sub
sbb
jmp
les
jge
cmp
xchg
jmp
sbb
dec
push
rcl
xor
movsl
jns
mov
enter
add
add
cmp
jge
stos
lea
shrb
loope
lret
add
add
stc
mov
or
imull
fcomps
sub
and
rclb
je
ds
cld
addl
add
sti
jp
mov
sbb
xchg
loopne
mov
cmp
dec
xchg
arpl
scas
sahf
push
xchg
fcompl
sbb
inc
jnp
inc
push
jnp
out
push
fsubs
pop
add
or
scas
xlat
loope
out
insl
sub
or
jg
xor
sbb
sub
insl
ret
mov
insb
inc
mov
and
or
iret
faddl
test
mov
scas
dec
notl
pop
cmp
sub
dec
add
pop
aas
mov
stc
inc
adc
rcl
and
push
mov
jge
xchg
sbb
icebp
aaa
jb
je
insb
xor
and
mov
ret
push
fistpll
subl
lret
lods
rolb
jno
mov
or
add
divb
rclb
nop
lcall
aaa
add
add
dec
insl
mov
ror
push
clc
mov
test
into
lcall
and
stos
int3
jns
sahf
jecxz
and
lods
xor
adc
inc
xchg
lea
xor
movb
insb
jge
test
and
add
cmpsb
cmp
cmp
or
pop
push
out
stos
ss
and
pop
shrl
in
andb
and
mov
push
adc
dec
adc
jbe
rcrb
sbb
out
inc
push
mov
pop
inc
cli
aaa
jg
imul
test
das
mov
scas
or
or
test
cmpsb
xchg
adc
and
adc
xchg
popa
dec
mov
in
pop
fisubrl
lods
jb
or
xchg
es
inc
int
dec
gs
lret
mov
dec
outsb
cs
ds
or
xchg
mov
pop
mov
sbb
and
add
add
jbe
idivl
or
ja
stos
aad
add
add
mov
fxch
addb
cmc
mov
dec
ss
int
lea
nop
leave
xor
mov
jmp
or
jbe
xchg
or
pushf
fcmove
cmp
pusha
mov
int3
leave
sub
mov
loop
pop
jae
fsts
pop
xor
mov
in
out
scas
sub
movsl
scas
inc
iret
arpl
mov
jne
jle
enter
adc
xchg
inc
cmp
mov
jbe
inc
mov
mov
sbb
mov
imul
ja
pop
imull
sub
aaa
sarl
inc
movsb
xor
outsb
dec
fcompl
outsl
int
test
rorb
and
and
cmpsl
inc
pop
inc
inc
xchg
sbb
call
add
sbb
pop
nop
push
push
popf
ds
cwtl
lods
mov
and
or
push
inc
fmuls
add
add
outsb
sub
stos
fs
jmp
leave
aas
sub
sub
add
mov
push
adc
clc
popa
stos
lods
je
fucomip
int3
lods
in
sahf
jecxz
jecxz
scas
xor
xchg
pusha
sub
cmp
movb
cmp
in
pusha
jp
fs
mov
xor
jne
icebp
sub
xlat
aad
leave
xchg
iret
mov
dec
pop
rcr
xor
xchg
sub
je
inc
bound
incb
lea
or
pop
imul
mov
cmp
add
fsubs
outsb
test
jmp
call
sub
pop
hlt
insb
dec
stos
pusha
aam
pop
fwait
adc
cmp
mov
decl
adc
and
adc
addl
ds
adcl
aam
out
int3
data16
lret
sbb
and
repz
cmp
dec
loop
add
pop
in
sti
dec
sub
cmp
add
insb
pop
pushf
scas
fistpll
outsl
ficoml
inc
xchg
fistpll
add
add
mov
dec
inc
cs
lds
jl
pop
js
jmp
stc
test
push
lahf
or
js
mov
test
icebp
stos
into
les
lods
into
dec
mov
sub
test
cmpsl
mov
repz
dec
cmpsl
leave
stc
lret
sbb
std
dec
ficomps
mov
orl
stc
adc
ja
add
mov
bound
pop
ret
lds
mov
sarl
xchg
es
fs
imul
lret
push
jbe
push
sub
mov
fidivrl
jmp
xchg
orb
mov
mull
pop
testl
sub
dec
add
xor
sbb
repz
enter
adc
cmp
push
jle
loopne
scas
addr16
jmp
push
repnz
jp
daa
imul
mov
fcoml
add
sbb
jnp
jnp
cmp
movsb
push
sbb
push
insl
adc
cmp
add
fwait
lret
cwtl
xchg
shl
dec
cmp
push
pop
into
dec
aad
sbb
sbb
cmp
pop
daa
push
pop
push
sbb
jle
fistpll
jmp
bound
pop
jne
dec
icebp
and
add
js
in
xchg
dec
adc
daa
out
loopne
rcrb
addr16
decl
mov
into
pop
xor
pop
fbstp
icebp
cmpsb
out
mov
jp
mov
mov
mov
sub
or
sti
lahf
add
repnz
cwtl
lret
iret
repnz
lea
pop
jo
mov
cli
fstpl
cmp
push
cmp
dec
addb
dec
rcll
sub
push
scas
rolb
movsl
push
push
inc
mov
mov
outsl
xor
mov
push
push
sub
sub
mov
fcoms
mov
daa
js
stos
jne
ss
std
lret
shlb
dec
inc
adc
ds
adc
jecxz
add
outsl
lret
mov
out
jmp
dec
daa
in
cmp
add
mov
aaa
repnz
aam
cmp
in
inc
dec
clc
idivb
or
dec
inc
mov
repz
xor
add
js
sub
jp
adc
out
loopne
in
pop
test
inc
rolb
outsl
clc
shr
and
mov
or
mov
push
and
jb
jmp
pmaxub
inc
test
xor
and
or
push
sbb
addr16
pop
xchg
loop
mov
dec
movntq
out
inc
sbb
lds
cli
sbb
scas
jo
jl
in
and
mov
sbb
pusha
cmp
xchg
imul
mov
addr16
imul
ret
ljmp
hlt
gs
movsl
cmc
jecxz
pop
leave
test
add
push
test
xchg
aam
popa
sub
push
std
inc
sbb
and
outsb
mov
das
cli
lea
clc
pop
inc
or
add
and
das
cmp
lods
repz
mov
insl
cmp
xor
cmp
add
inc
xchg
mov
sti
add
add
pop
pop
push
scas
push
push
mov
sti
cli
jnp
and
ja
add
arpl
mov
pop
fisttps
mov
not
mov
mov
stos
jo
push
jge
mov
stc
shl
jo
cmpsb
lahf
xchg
shll
lea
sbb
add
mov
xchg
sar
dec
je
cmpsl
ret
sub
add
sub
pop
mov
xabort
cmpsb
adc
into
flds
dec
jb
mov
aam
std
pop
sub
sbb
inc
xor
sbb
jge
mov
jbe
xor
pop
cmpxchg
add
faddl
adc
daa
out
lcall
out
mov
mov
mov
add
stos
cli
decl
lcall
jge
and
test
push
sbb
pop
in
mov
mov
in
add
add
daa
push
cld
push
std
jmp
dec
push
add
add
inc
loope
cmp
mov
push
aad
xchg
add
jbe
xlat
jl
imul
test
mov
popa
shlb
cmp
imul
mov
imull
and
decb
scas
fs
bound
mov
daa
and
stos
jp
or
sbb
cmp
popf
adc
in
inc
inc
ret
mov
push
fs
notb
mov
iret
jnp
jno
push
sti
arpl
rcll
mov
xchg
push
mov
cltd
sarl
es
in
dec
mov
cmc
sbb
out
sub
push
addl
xchg
xor
jno
pop
jae
push
insb
and
ss
fldt
xchg
sub
xchg
and
xor
clc
jmp
xchg
adc
dec
test
sbb
lods
roll
add
jo
aas
inc
lock
add
add
sbb
dec
push
out
aad
jnp
mov
add
test
sub
out
pop
jmp
test
ja
inc
sbb
pop
mov
clc
js
fistps
fwait
sub
int
and
fsubr
and
leave
mov
jp
loopne
pop
push
mov
mul
imul
pop
rolb
jmp
test
lcall
scas
cmpsl
mov
add
loope
shrb
xor
jl
adc
popa
or
pop
push
dec
or
outsb
and
testb
test
and
test
or
cwtl
inc
imul
lret
addr16
xor
inc
dec
xchg
push
imul
stos
pcmpgtd
nop
andl
mov
cs
dec
xorl
push
sbb
pop
sbb
rcll
pop
xor
jae
and
out
outsb
push
push
ljmp
in
aaa
test
add
add
idivl
or
es
xor
inc
add
add
push
xchg
loope
sbb
aad
mov
inc
xchg
xor
loop
enter
in
inc
fists
scas
and
rorb
cmp
or
pop
mov
ret
int
or
dec
mov
jle
mov
lret
lcall
ret
pop
and
int3
hlt
push
sbbb
andb
pushf
fisubrl
jp
push
pop
jno
lds
fidivl
sbb
push
xchg
test
cmp
push
mov
xchg
in
inc
outsb
int3
sbb
push
dec
mov
cs
mov
xchg
lock
test
push
fwait
jbe
push
addr16
sbb
int
cmp
pushf
pop
push
xor
dec
xchg
out
cmp
xchg
jecxz
shlb
sub
ss
subl
ret
lock
mov
sub
fimull
dec
xor
add
add
jg
xchg
orl
icebp
add
add
push
rol
cmpsb
cmpsl
in
add
testl
enter
fsubl
arpl
lahf
push
adc
inc
fucomi
mov
add
in
inc
jl
imul
out
rcr
loop
jg
inc
lahf
cmp
repz
repnz
les
cmp
std
push
fdivrs
je
outsl
mov
pop
mov
scas
or
outsl
ja
mov
mov
es
push
jo
jg
push
sub
addr16
fldcw
in
cs
inc
hlt
mov
adc
lcall
mov
push
inc
pop
jno
jp
mov
push
pop
adc
and
jb
mov
stos
add
push
cmp
xchg
js
outsb
das
repnz
inc
fmull
mov
mov
sbb
xor
rorl
scas
call
test
rol
jp
shl
outsl
mov
lods
jno
xchg
inc
pop
shlb
sub
mov
fsts
adc
add
add
push
dec
lret
jmp
imul
aaa
je
xchg
cmpb
add
add
subl
dec
jns
dec
sub
mov
mov
aam
sahf
in
xlat
push
mov
lret
or
or
or
adc
mov
inc
pop
pop
mov
sahf
sbb
and
daa
mov
popa
movsb
das
cwtl
sahf
aad
and
cltd
pusha
aad
test
xrelease
icebp
sbb
nop
js
test
cmp
test
cltd
iret
add
push
out
add
ds
in
xor
cmc
add
int3
dec
push
leave
sub
in
arpl
cltd
rcrl
sbb
sahf
push
insb
in
xor
out
stc
jae
and
cmc
mov
sbb
cmpsb
enter
dec
cmp
fildl
cwtl
adc
dec
push
roll
sub
push
rorl
sub
jge
xchg
xchg
ret
adc
push
jmp
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
sarl
gs
add
add
and
aam
out
aam
movsl
sub
xchg
pop
jb
in
cs
stos
ret
pop
cld
mov
pop
popa
xlat
mov
nop
dec
or
subb
pop
loopne
xor
hlt
out
and
sbb
jne
add
les
push
push
mov
leave
cld
jb
push
jbe
inc
xor
xchg
and
negb
fisubs
xor
mov
mov
filds
test
or
pop
and
in
out
xchg
push
test
mov
push
push
add
ljmp
clc
push
mov
jmp
int
fwait
jb
inc
push
adcl
cltd
adc
push
fnstenv
ds
addl
dec
mov
dec
push
out
xchg
push
adc
fucomp
int
adc
pop
les
jnp
mov
cmp
jbe
aam
sbb
aas
add
jp
test
jg
adc
add
add
jns
xor
jg
icebp
loopne
adc
add
repz
xchg
sub
movsb
jno
jb
lds
add
xchg
stos
lods
add
mov
mov
mov
add
movsl
add
cmc
and
mov
sbb
jle
sar
push
pop
out
nop
mov
imul
sub
xor
lret
stos
stos
cmp
cmpsl
inc
jl
and
inc
leave
bound
dec
xchg
into
cmp
xchg
js
dec
mov
stos
jns
cld
mov
xor
repnz
dec
outsl
enter
push
in
movsl
mov
inc
jne
in
aad
pop
xor
scas
cmc
adc
out
mov
jno
xor
test
insb
es
mov
xorl
aas
mov
jb
jle
and
outsb
sub
and
movsl
push
popa
shl
in
push
push
add
repz
jns
cld
inc
int3
js
adc
addr16
sahf
scas
sbb
or
pop
icebp
sbb
add
js
ret
jg
decl
rol
stos
push
mov
push
inc
add
add
push
xor
xchg
jl
push
xchg
mov
scas
imul
negb
dec
insl
inc
pop
and
ret
outsl
in
sub
mov
adc
or
jnp
add
pop
arpl
fildl
shr
loop
inc
push
in
push
repnz
pop
js
and
outsl
jle
mov
push
clc
ljmp
addr16
lret
xchg
xchg
lods
or
cld
in
pop
push
fst
sub
and
push
xchg
xor
adc
mov
fdivs
lea
xchg
xchg
aaa
add
inc
xorb
setno
out
cmc
ja
rcll
inc
cltd
add
sbb
data16
pop
xchg
mov
cmpb
dec
loopne
int3
xor
roll
xchg
dec
aas
dec
and
dec
gs
xor
push
imul
cld
faddl
lods
push
ret
movsb
pop
cmp
les
push
add
add
das
mov
out
aad
xor
push
inc
add
add
sbb
sbb
cmp
and
mov
roll
sub
jecxz
loopne
add
mov
out
scas
test
xchg
xor
jge
daa
scas
or
mov
cs
test
dec
xchg
pop
inc
xchg
fistpll
fiadds
int3
aas
cmpl
loop
xchg
pop
jnp
stos
dec
stos
mov
fstpl
leave
fadd
jp
xchg
mov
lret
adc
cwtl
sub
dec
repz
out
ficoms
and
push
adc
pop
inc
lcall
aaa
nop
pop
dec
shll
icebp
ficomps
and
pop
int3
adc
lock
jl
xchg
pop
mov
int
call
jns
dec
sbbl
add
pop
mov
sbb
imul
pop
inc
mov
nop
ss
rcr
cwtl
xor
dec
or
add
hlt
gs
dec
adc
cmp
and
add
nop
sbb
lods
cs
mov
inc
rclb
popf
data16
int3
cmc
sbb
mov
sbb
test
jo
sub
outsl
scas
lods
inc
lods
push
cli
push
and
mov
jbe
and
ret
cmp
xlat
sbb
in
das
sarb
pusha
int3
or
movsl
in
sbb
xchg
sub
int3
sbb
xlat
stos
and
mov
cmpsb
mov
inc
scas
je
ffreep
lods
daa
sub
sbb
negl
adc
mov
push
push
mov
lods
and
mov
jmp
std
xchg
mov
inc
lahf
inc
mov
pusha
xchg
loop
mov
ffree
xor
scas
sbb
sbb
js
inc
or
orl
push
and
sahf
pop
mov
dec
fcoms
cwtl
pop
and
ljmp
cmp
les
mov
das
jns
in
mov
daa
movsl
inc
mov
dec
inc
add
add
aas
gs
pop
repnz
dec
add
add
outsl
add
jno
pop
xchg
orl
cli
popa
pop
shr
js
xor
testl
lret
int
sbb
js
mov
repz
insb
loop
fdivl
stos
rolb
into
mov
mov
mov
in
int
or
dec
fidivrs
cmp
push
push
mov
mov
push
pop
cmp
xor
jg
test
cmp
roll
jmp
mov
adc
mov
jg
aaa
lret
fisttps
jp
xchg
stos
cmp
dec
cld
lds
jl
jo
fs
dec
mov
sar
shl
sub
pop
sbb
mov
adc
cmp
push
adc
adc
pop
aas
js
sbb
cwtl
stos
ss
aas
outsl
js
lcall
xchg
lds
mov
cltd
cmc
push
pusha
pusha
fsubrl
add
add
out
fisttpll
lock
mov
add
loopne
in
rclb
test
test
xor
push
fcmovne
jmp
bound
push
mov
int
or
jge
xchg
mov
fsubrl
xlat
adc
mov
dec
insb
fdivl
inc
adc
push
inc
leave
ds
filds
cltd
mov
lret
mov
jp
xor
mov
pop
sti
hlt
sub
inc
dec
sbb
out
andl
or
fldcw
enter
inc
and
fs
pop
or
stos
andb
jns
pop
and
ret
dec
sbb
push
mov
shlb
adc
fdiv
adc
fimuls
xor
dec
mov
mov
xor
inc
push
pop
insb
repnz
xchg
in
int3
xchg
mov
jp
fisttpll
test
or
or
outsl
sub
fldcw
inc
fsub
stos
jp
inc
mov
in
notl
add
add
mov
ljmp
add
add
iret
js
int
xor
jp
addb
popf
xor
mov
out
adc
pop
mov
mov
xchg
push
mov
push
shl
add
add
pushf
jnp
std
adc
inc
sub
dec
mov
inc
popf
sub
xor
das
sub
inc
cwtl
jp
inc
fnstcw
js
sbb
shll
ficoml
clc
push
pop
cmp
dec
xchg
push
lods
or
into
lea
gs
insl
unpckhps
mov
jnp
xlat
push
jge
adc
inc
fstpl
xchg
mov
movswl
add
xchg
ljmp
add
xor
mov
or
cli
loopne,pt
repnz
lods
imul
jp
mov
stc
jne
roll
in
push
enter
scas
sbb
xor
dec
cmp
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
neg
xor
add
add
mov
into
lcall
les
mov
sbb
inc
lcall
popa
fildll
mov
fbld
mov
pop
pop
in
mov
int
repz
mov
push
rorb
and
imul
stc
pusha
std
xchg
mov
dec
push
enter
mov
pop
jge
arpl
jp
lret
jmp
rcrb
adc
movsb
loopne
aas
sbb
movsl
or
cli
adc
push
cmp
pop
push
mov
push
add
pop
add
pop
rclb
sarl
xchg
adc
ja
jbe
xchg
out
dec
ret
or
sbb
dec
repz
xlat
and
mov
jp
push
pop
mov
repz
cltd
mov
shlb
dec
mov
rorb
fildl
fists
loop
dec
data16
pushf
int3
mov
cmp
imul
out
mov
mov
rclb
add
dec
add
add
lret
pusha
clc
jmp
sbb
xchg
loop
dec
icebp
lcall
loop
push
lock
xchg
push
xor
ss
xchg
cmc
dec
sbb
sarl
test
sub
leave
jp
lret
outsl
inc
stos
in
pop
out
pop
cli
test
fbld
jmp
aam
pop
adc
sub
pop
adc
xor
xor
inc
in
es
lock
mov
jle
in
lret
dec
sub
je
inc
xor
sbb
pop
sub
adc
mov
mov
xorl
xchg
sahf
int3
jnp
and
jmp
mov
jno
in
and
test
xchg
xor
cmp
sub
out
out
xchg
add
inc
in
and
xor
in
mov
sub
mov
pop
cwtl
cwtl
je
adc
sub
outsb
lods
xchg
push
add
add
add
dec
stc
mov
ljmp
ds
add
add
push
fs
sub
jl
fsubrp
cmpsl
loop
mov
ja
lret
sub
cmpsl
fildll
xchg
xchg
mov
mov
in
push
sbb
ljmp
fadd
xchg
dec
neg
pop
in
hlt
and
orl
mov
and
xchg
int3
inc
lds
leave
pusha
sbb
jmpw
in
cmpsl
imul
add
cmc
fucomp
inc
add
rcr
sahf
jo
cmp
aad
xlat
loope
xchg
sub
pop
scas
outsb
cmp
les
mov
loopne
movsb
loopne
mov
mov
dec
mov
fwait
pushf
sub
inc
jl
sub
fstpt
roll
hlt
int
push
addr16
cltd
imul
mov
mull
or
mov
lods
xlat
cmc
aas
jp
dec
push
and
add
mov
outsb
xor
inc
in
cs
pop
cmpsb
mov
mov
mov
lock
scas
je
loope
sub
lea
add
jg
cld
lcall
pop
inc
dec
add
add
pop
bnd
movsl
sar
jo
loopne
inc
jae
cmp
aam
cmp
addb
adc
lahf
hlt
sub
ljmp
or
in
repnz
xlat
out
jae
inc
shrl
inc
pop
xchg
jmp
fmul
test
cmpsl
cltd
mov
add
ja
lret
xchg
test
jmp
jle
lock
adc
add
mov
es
cli
cmc
inc
adc
movsb
or
stc
cli
out
fs
lods
sahf
jmp
test
leave
cli
test
jno
sbb
sahf
popa
imul
lret
or
dec
stos
stos
pop
xor
sahf
movsl
aam
icebp
jbe
or
and
inc
cmpsl
das
dec
fcomps
mov
pop
jnp
insb
fwait
pop
gs
in
in
iret
push
js
fldcw
bound
xchg
add
cwtl
in
call
aam
cmpsb
or
rorl
mov
add
xchg
mov
pop
mov
jo
dec
push
add
add
adc
aam
dec
test
nop
fs
cmp
jecxz
cmc
int
jecxz
xor
sahf
clc
mov
adc
mov
mov
inc
ss
andl
aas
mov
in
adc
lock
lahf
icebp
inc
rcrb
fisttpll
sub
cltd
adc
scas
jg
xlat
adcl
and
push
je
enter
mov
neg
pushf
repnz
bound
xchg
pop
xchg
mov
push
mov
jns
ret
lret
lret
add
pop
xchg
xor
popa
outsl
pop
sub
push
add
pop
lahf
jmp
test
lds
adc
sbb
xchg
sbb
xchg
nop
mov
xchg
mov
arpl
xchg
test
dec
cmpsl
mov
jbe
iret
jecxz
cmc
add
push
cwtl
inc
cmp
stc
mov
add
or
cli
add
movsb
in
mov
add
or
mov
and
adc
dec
push
add
add
addr16
loop
test
shl
je
mov
pop
push
icebp
lcall
push
xor
mov
adc
aam
cmp
mov
xchg
cltd
in
mov
out
lahf
pop
jno
mov
or
test
shll
jns
pop
fisttps
mov
lock
outsb
inc
jp
pop
ret
fbld
daa
xor
pop
and
xor
and
jl
sbb
pop
and
sbb
adc
mov
lods
xor
fcomip
test
rorl
ret
aam
lcall
mov
push
lds
xchg
mov
insb
xor
or
inc
in
sub
gs
insl
mov
repz
sub
fisttps
cmp
mov
mov
jne
ret
mov
lods
pop
imul
scas
orb
pop
pop
das
fiadds
lds
add
fsubrl
mov
out
cmp
ret
or
sti
cmpsl
jg
push
push
add
add
ficomps
dec
insl
add
xchg
inc
sbb
rorl
jne
jecxz
dec
lret
in
mov
les
sahf
fmull
add
clc
xor
out
mov
enter
cmp
sub
data16
ret
xor
xor
fadd
add
sbb
inc
mov
cld
xor
imul
pop
or
fisttpl
jne
in
mov
fldl
jmp
ja
insb
sarl
mull
push
mov
dec
bound
add
mov
mov
dec
mov
outsb
cmp
inc
xor
xor
push
add
in
mov
inc
push
cld
cli
mov
mov
push
add
cmp
adc
push
jo
mov
pop
mov
mov
pop
jl
and
sbb
pop
sub
mov
lods
ret
sub
repz
pop
arpl
out
pop
add
add
add
push
shll
out
pop
pop
pushf
push
mov
push
add
add
and
out
adc
xchg
imulb
mov
enter
sbb
sub
jnp
push
sub
sbb
dec
test
push
in
rcrb
out
push
mov
outsl
in
in
je
push
sbb
pop
mov
addr16
cmp
sub
pop
repnz
push
testl
xor
fisttpl
sbb
or
in
add
pop
fsubs
jno
hlt
push
cmc
mov
imull
cmp
mull
lret
push
mov
and
orl
mov
mov
imul
pop
mov
add
sahf
ret
sub
sarl
inc
cwtl
into
jl
inc
push
inc
dec
push
xchg
addr16
pushf
push
push
lods
add
dec
ret
int
dec
xchg
cld
and
and
xchg
push
mov
adc
iret
cld
inc
pop
lret
or
sub
in
and
mov
or
movsb
add
add
out
lcall
hlt
mov
test
sbb
add
loop
cmp
xor
jae
out
lahf
push
orb
mov
xor
fstl
andl
cmp
inc
xor
leave
out
mov
jne
lods
fmull
jnp
lods
mov
adc
jmp
mov
hlt
cmp
push
mov
out
xchg
push
or
cs
and
add
dec
enter
inc
jns
push
aaa
and
xchg
inc
les
and
stos
sub
rolb
push
imul
push
orl
int
lods
inc
es
stos
out
xlat
inc
or
dec
adc
push
xchg
pop
notl
push
ss
pop
repz
xlat
push
les
push
out
mov
cwtl
and
xor
jae
cmpsl
push
adc
jae
popa
test
out
dec
mov
ja
add
jb
jg
lock
cmpsb
inc
sub
mov
das
jnp
cli
add
add
jbe
idiv
imul
jae
push
popa
push
add
add
enter
push
mov
mov
clc
mov
and
popf
es
fistpll
mov
mov
mov
xchg
dec
xor
pop
mov
xchg
xchg
mov
jecxz
mov
test
fmull
mov
in
mov
out
lock
dec
sbb
mov
arpl
std
mov
push
pop
pop
out
mov
aad
ja
lds
jb
mov
orl
jecxz
movsb
jecxz
mov
aas
ss
mov
jbe
jae
popf
jbe
rorl
lret
adc
cmp
or
sarw
insb
inc
aam
shlb
lds
adc
ljmp
push
popf
clc
pop
xor
sub
fwait
dec
and
cmp
pop
out
xchg
mov
mov
call
mov
push
cmpsb
test
mov
cmp
cmp
add
add
fwait
cmp
stos
sarb
push
add
add
mov
insb
jp
cmp
or
adc
mov
mov
int3
push
mov
or
ret
faddl
cmp
dec
lret
inc
data16
sti
js
sub
add
inc
ror
cmp
push
mov
out
imulb
sub
in
adc
add
repz
cmpsb
cmpsb
rorb
mov
cwtl
mov
and
movsl
jo
inc
mov
xorl
lret
mov
out
push
cmpsb
sbb
movb
pop
pop
xchg
fwait
imulb
lret
xor
sbb
int3
xor
and
test
icebp
icebp
inc
push
inc
inc
dec
mov
out
add
fwait
jo
jmp
dec
es
xor
dec
pop
sub
lds
rcll
cmc
sahf
mov
xor
jle
dec
bound
sub
or
roll
add
inc
push
clc
mov
and
hlt
inc
add
add
add
jmp
or
push
loop
and
sub
mov
and
dec
fwait
add
cmp
xchg
fildll
and
shll
fst
icebp
sarb
jle
sbb
adc
mov
mov
aam
inc
jmp
add
lods
notl
push
xchg
cmc
inc
arpl
les
aaa
scas
sarb
es
lods
or
in
mov
fcomps
inc
adc
bound
add
cmc
mov
pop
ret
pop
pop
mov
xor
inc
pop
ret
cmpsl
into
lret
mov
mov
push
lock
jbe
mov
popf
jmp
and
inc
pop
cmp
leave
shlb
mov
sarb
or
fwait
mov
xchg
xor
icebp
adc
scas
add
nop
sbb
loope
out
cs
xchg
inc
xchg
mov
jecxz
adc
add
add
shr
mov
push
xor
pop
add
add
adc
es
dec
pop
and
stc
imul
adc
pop
mov
mov
mov
popf
cmp
or
aas
push
sar
cld
lods
jns
sbbl
ret
es
mov
inc
xor
fdivrp
loop
add
xor
in
mov
xor
sbb
lds
push
fwait
mov
push
push
jmp
stc
cmp
out
xor
mov
das
aaa
xchg
inc
adc
ss
movsb
add
jbe
lea
vsqrtss
rclb
loopne
dec
test
pop
int3
mov
ret
enter
ds
add
das
sub
ss
xchg
cld
mov
insl
sets
push
mov
in
fsubl
inc
jecxz
mov
mov
mov
sub
pop
lods
push
sti
fs
and
push
mov
push
shl
ret
pop
ffree
stos
mov
push
xor
scas
loop
inc
fistpl
scas
push
test
mov
pop
lods
outsl
je
mov
adc
add
test
or
fdivs
pop
arpl
jne
add
add
or
out
pop
lahf
jecxz
pushf
or
adc
imul
mov
cmpsl
out
dec
mov
addr16
add
jmp
jp
adc
or
dec
out
aas
jp
mov
in
xlat
mov
add
sub
call
in
jl
rcr
in
movsb
lcall
xlat
xor
mov
rol
pop
ret
pushl
aam
imul
mov
enter
iret
shlb
mov
repnz
cltd
mov
jmp
cmpsb
sub
dec
inc
fidivrs
or
xchg
push
jno
test
aad
sahf
dec
cmc
ljmp
outsl
ret
jmp
sarl
jns
inc
rolb
aam
imul
inc
imul
jnp
or
fucom
or
jnp
mov
into
pop
sbb
and
mov
and
das
cmp
pusha
les
add
add
sbb
push
out
inc
add
mov
andb
jle
lods
lret
lock
inc
in
sti
in
adcl
dec
test
pop
xchg
fldcw
push
xchg
sub
icebp
mov
dec
add
add
pop
cmp
push
mov
mov
xchg
fildl
add
push
cmpsb
test
call
aad
and
dec
test
stc
mov
leave
lods
jp
jmp
call
ret
lods
dec
lock
inc
inc
out
lods
popa
pop
cmp
dec
test
test
mov
jnp
or
loope
lahf
sbb
sub
jl
push
hlt
dec
ljmp
subb
dec
fwait
gs
mov
mov
scas
cmpsb
insb
sub
lods
sub
sti
pop
sub
dec
popf
xchg
pop
sbb
jo
movsb
inc
push
stos
mov
cltd
ja
push
xchg
fs
inc
lea
enter
xlat
jg
scas
dec
xchg
or
addl
add
fsubl
mov
ja
mov
inc
push
mov
add
add
in
mov
int3
or
push
movsb
clc
xchg
test
xchg
out
adc
mov
pop
int
stc
shlb
je
push
sbb
enter
xchg
sti
sbb
mov
cmp
pop
mov
jb
outsl
es
les
inc
or
xchg
jb
or
lods
repnz
dec
dec
push
scas
movsl
clc
fstpl
xor
or
xchg
idivl
cwtl
inc
stos
arpl
sbb
sub
imul
test
mov
and
or
xorb
out
repnz
cltd
std
jge
cmpsb
cmp
jne
pop
or
jae
mov
pusha
sarb
mov
sub
lods
fchs
cld
and
add
mov
cmp
std
testl
int3
or
test
jnp
in
inc
add
xchg
sarl
cmp
cmp
popf
stos
add
add
xor
xlat
out
cld
mov
pop
add
add
push
and
dec
loope
rcrb
aaa
dec
inc
divl
testb
lret
jp
cltd
mov
sub
pop
out
enter
cld
icebp
sbb
out
pop
dec
pop
icebp
push
leave
xchg
dec
xor
out
shll
pop
stc
test
cmp
mov
mov
mov
or
mov
jnp
movsl
rorb
repnz
lahf
jp
xchg
dec
aas
clc
and
test
dec
xchg
lcall
mov
divb
adc
sub
adc
jge
shl
out
pop
stos
das
pop
leave
mov
pop
xchg
sbb
aad
sbb
and
jg
ret
mov
mov
adc
inc
push
test
mov
inc
inc
gs
add
rcll
fimuls
jge
mov
jmp
test
sub
scas
xchg
test
addr16
xchg
xchg
push
cmp
jbe
mov
pop
loope
adc
int3
cs
add
mov
mov
in
fs
pop
add
add
xchg
xchg
push
xchg
jne
int
mov
gs
jge
dec
fdivs
mov
ss
sbb
jge
aam
test
outsl
ja
xor
arpl
sarb
rolb
jb
je
xchg
xchg
test
imul
lods
enter
aas
loope
sub
sub
mov
mov
mov
and
fstpt
jge
or
jecxz
xchg
jle
push
xor
push
sahf
xchg
push
adc
cld
and
jg
fsubrl
sub
nop
addl
pop
ffreep
int3
mov
sbb
dec
dec
fnstsw
stc
addr16
out
jne
inc
mov
mov
push
lea
jns
dec
cmp
shll
pop
imul
sti
mov
jp
xor
cmpsl
xchg
mov
loopne
inc
cmp
arpl
rorb
mov
or
je
cmpsb
adc
scas
fldt
add
out
into
push
push
inc
lahf
mov
mov
add
mov
das
jbe
dec
out
into
lods
cmp
sbb
xchg
jo
sbb
loopne
mov
movsb
sahf
out
xchg
pop
mov
cmp
popf
aad
inc
in
or
cmova
mov
cmp
adcl
shr
cwtl
push
in
push
cmp
hlt
fistpll
int
fadds
xchg
addb
lock
movsl
lret
inc
inc
adc
divl
insb
or
lret
jecxz
jle
xchg
pop
es
sub
mov
shl
in
pop
pop
cmp
pop
jl
dec
sbb
mov
aaa
sub
cmpsb
outsl
fidivl
leave
aam
cltd
cld
in
dec
dec
shrb
xchg
and
test
sbbl
lods
pop
testb
dec
inc
fs
push
das
push
aaa
lcall
or
cli
push
stos
jno
xchg
jae
xchg
mov
pop
mov
and
mov
sbb
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
ret
sub
adc
insb
cld
pop
sbb
dec
dec
jo
int3
xchg
push
in
xor
inc
push
out
ljmp
dec
pop
adc
loopne
rclb
jle
pop
pop
add
cmp
dec
pop
sbb
push
sarb
add
aaa
js
push
loopne
js
mov
scas
push
jg
dec
mov
sub
pop
ret
push
fisubl
fidivrs
call
ror
cli
push
xchg
sti
add
add
enter
aam
mov
shlb
xchg
jmp
mov
xchg
mov
in
push
mov
sbb
xor
lahf
mov
and
xchg
divb
arpl
sbb
inc
jo
dec
sarb
pop
cmpb
mov
outsb
and
lret
cld
stc
sbb
pushf
call
xchg
es
imulb
mov
pop
push
imul
add
add
lahf
pop
cmpsl
jne
mov
out
and
add
add
ljmp
mov
daa
cli
hlt
in
and
mov
fcmovnb
divl
fs
das
out
ret
pop
sub
jns
add
inc
sbb
int
push
inc
or
popa
repnz
mov
sbbl
iret
jbe
ljmp
or
mov
outsb
xor
in
mov
or
stos
jmp
test
push
push
ja
lret
or
sub
push
xlat
sti
push
mov
cmpsl
ret
test
and
mov
insb
call
fsts
add
xor
dec
popa
adc
pop
adc
and
adc
cmp
push
mov
cli
lret
stc
pop
mov
hlt
mov
outsl
push
inc
imul
rcl
mov
mov
jg
mov
inc
inc
fucomp
sbb
inc
inc
bound
pop
fadd
hlt
je
push
jp
lcall
push
add
sbb
add
add
idiv
jg
sub
je
add
int
incl
pusha
sub
cmp
daa
sub
aaa
and
inc
out
inc
push
fwait
jge
adc
push
clc
xor
cwtl
mov
leave
adc
sbb
ds
in
mov
xor
in
add
out
stc
dec
inc
push
out
sub
xor
adc
mov
icebp
mov
sbbl
lret
je
test
adc
pop
rorl
mov
insl
jge
jmp
mov
fists
cltd
cmp
inc
mov
inc
sbb
xchg
sbb
and
mov
mov
std
out
or
or
mov
mov
adc
add
xchg
cwtl
mov
mov
mov
inc
mov
aas
pusha
lods
loope
push
xor
and
fisttps
in
lds
sbb
lods
insb
dec
or
mov
sbbl
dec
enter
inc
add
movsl
lods
add
add
pop
mov
fstps
inc
mov
add
add
fwait
adc
pushf
or
and
or
addr16
cmp
jecxz
ficomps
lock
out
aam
ret
jbe
mov
dec
mov
xor
add
in
jo
ret
out
sbb
rolb
or
xchg
pop
push
mov
mov
je
les
jae
icebp
dec
sbb
pusha
push
lods
cmp
mov
mov
ret
pop
adc
das
adc
and
adc
mov
and
iret
mov
test
jb
insb
scas
ficomps
das
lret
and
loop
addl
and
push
dec
cmp
jnp
push
int
adc
mulb
and
nop
fs
cmpsb
and
mov
iret
aam
enter
inc
xchg
fwait
scas
and
sub
adc
add
and
mov
repnz
movsb
jle
arpl
jle
cmpsl
arpl
add
sbb
push
ljmp
or
lret
js
jle
inc
lock
mov
fs
inc
sbb
jo
popa
sbb
ss
mov
push
jmp
imull
xchg
adc
pop
cmp
adc
das
bound
jo
jp
or
nop
lds
pop
mov
imul
xchg
cmpsl
sub
inc
leave
pop
push
mov
sub
jge
ret
cmc
fcomps
mov
push
fldt
aam
mov
mov
or
mov
jbe
insb
mov
nop
sbb
imul
addr16
xlat
cld
std
lock
pop
es
xor
push
outsl
or
ds
fstpl
add
outsb
cmp
pop
adc
pop
pushf
orb
sub
mov
inc
jns
out
into
adc
mov
mov
mov
repz
xor
pop
add
add
jmp
sub
scas
pop
lods
mov
add
add
pop
aaa
and
mov
inc
scas
inc
sub
mov
xor
mov
jnp
jge
mov
adcb
adc
stos
jg
sarb
stos
aam
or
cmpsb
xchg
xchg
push
adc
rol
shll
andb
out
push
cmc
push
push
popa
adc
movsl
repnz
sbb
pushf
aad
lods
add
ljmp
iret
adc
mov
inc
popa
add
jle
ss
bound
push
scas
add
pop
pop
lods
ret
xchg
loop
adc
adc
repnz
fwait
mov
mov
leave
ljmp
and
incl
push
push
pop
add
ljmp
hlt
push
cmp
xor
jmp
push
cmp
cmp
sarl
decl
xor
add
or
pop
out
jecxz
cmp
sub
mov
jecxz
lcall
sub
addr16
and
sarb
jp
sahf
add
add
mov
fnstenv
aaa
adc
mov
add
add
jno
inc
xlat
hlt
lods
sbbl
jecxz
jno
mov
mov
movsb
jne
dec
adc
lahf
loopne
mov
push
repnz
xchg
lock
push
mov
shrb
fadds
xchg
sub
dec
cmc
dec
lods
icebp
mov
sub
scas
adc
loopne
pop
insb
ret
hlt
sahf
lods
test
shl
repz
in
mov
jae
jmp
ss
xchg
testl
je
add
leave
or
adc
ja
mov
iret
mov
pop
les
mov
in
and
mov
xchg
jns
or
mov
sub
cmp
xchg
push
aam
jb
bound
jb
xchg
xchg
push
add
clc
out
fmuls
int
mov
imull
adc
add
lds
loop
mov
fildll
cmp
sti
sub
pusha
clc
aad
outsl
add
add
cld
je
jbe
jns
sbb
push
dec
icebp
fbstp
add
add
pop
pop
lcall
loopne
aam
fdivr
sub
adc
in
push
cmp
out
adc
cmp
push
sti
leave
leave
repnz
xchg
cmp
jle
xor
push
imul
xchg
ja
jb
scas
adc
test
jle
xor
fwait
jecxz
or
jge
pusha
call
jb
decb
xor
sahf
xchg
mov
xor
cmp
in
and
imul
std
pop
test
stos
jl
inc
mov
sub
clc
mov
dec
sbb
xchg
jne
daa
cmc
rcll
imul
mov
push
popa
inc
inc
cmp
clc
mov
push
inc
adc
scas
adcb
lret
ljmp
mov
push
mov
xchg
push
lea
add
aas
push
popf
push
daa
cwtl
pop
mov
cmp
jne
pop
cmp
dec
pop
mov
cmp
add
and
into
add
add
cltd
jmp
fildl
or
aas
mov
add
add
sub
add
mov
sbb
test
jmp
xor
inc
inc
das
dec
loop
lret
or
and
je
loope
mov
frstor
fldl
push
ja
mov
jne
mov
xchg
aam
int
pop
loop
aam
jae
dec
out
jg
nop
lock
and
in
fbld
or
xchg
icebp
or
xchg
inc
cmp
sarb
outsl
xchg
mov
insb
call
push
pop
dec
sub
xchg
or
xchg
iret
aam
pop
push
fcmovu
jl
fcoms
jmp
cs
loop
mov
cmp
jg
orb
mov
xor
adc
and
add
fidivs
push
xchg
fildl
xchg
sbb
or
mov
cmp
and
pop
mov
mov
adc
sub
xchg
ret
addb
add
push
jg
dec
xchg
dec
dec
add
shrb
add
retw
mov
mov
pop
xchg
adc
add
xor
es
sub
mov
lret
or
aas
lds
lods
dec
push
movsb
test
outsb
stc
int3
insl
cs
addr16
orl
pop
dec
ds
bound
mov
ja
mov
xchg
in
push
mov
fiaddl
negb
add
mov
pop
or
cmc
inc
sahf
cmp
sbb
js
pop
mov
jno
test
mov
fs
in
mov
mov
ret
and
adcb
xchg
mov
jge
lock
or
xor
pop
xchg
or
int3
aam
call
dec
inc
push
fwait
push
dec
cmc
push
xchg
xchg
jne
pop
push
fnstenv
mov
dec
pusha
js
addr16
in
push
aaa
sbb
xchg
push
mov
push
xor
je
lret
push
mov
iret
mov
fucomip
push
insb
xor
adc
add
add
mov
lahf
or
lock
sbb
shll
clc
sub
xor
call
addr16
call
dec
xchg
cmc
mov
mov
cltd
or
adc
pop
lods
mov
jb
popf
push
xchg
xchg
mov
mov
xchg
and
mov
dec
sub
lock
testl
push
or
int
pop
adc
and
add
jle
push
divb
icebp
inc
scas
sub
mov
pusha
jmp
add
cmp
adc
lcall
aad
int
jg
xor
das
add
into
cwtl
mov
sti
sub
push
lret
mov
scas
pop
inc
mov
rcrl
mov
ja
pop
jle
icebp
sbb
test
or
mov
test
loop
add
add
dec
out
iret
jmp
aas
in
push
data16
and
lret
add
sahf
jge
xchg
jg
in
shlb
or
fs
rcll
icebp
pop
ja
push
cmp
sbb
mov
ja
cmp
stc
mov
jae
xchg
mov
cmpsl
xchg
insb
negb
jle
lret
enter
inc
rolb
imul
adc
xchg
fisttpl
push
test
add
pop
sub
notl
sub
mov
xor
pop
xchg
mov
add
push
inc
ja
jno
aad
fwait
loopne
adc
cmp
je
fadds
mov
outsb
adc
push
and
and
cmp
loope
cli
sbb
repnz
ja
mov
adc
divb
sahf
fistl
movb
mov
sahf
out
fimuls
pop
mov
inc
ss
mov
imul
ror
jmp
fidivs
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
ja
iret
imul
add
dec
sbbl
dec
mov
mov
sub
and
daa
test
xchg
mov
repnz
jae
push
xor
or
ja
xchg
pop
jg
inc
pop
icebp
js
repnz
iret
push
roll
jnp
aad
inc
movl
push
andl
popf
scas
aad
test
sub
sbb
test
mov
cmp
les
jno
add
int
dec
jp,pt
jns
jns
lea
lret
mov
mov
sub
and
mov
imull
dec
mov
daa
pop
repz
jg
popf
dec
push
pusha
and
push
mov
aad
mov
fsubl
xchg
sbb
pop
stos
ret
leave
mov
test
out
pop
mov
jle
icebp
call
jg
mov
cmp
dec
add
hlt
add
jmp
scas
pop
add
add
neg
std
sub
dec
inc
cwtl
xchg
aam
add
add
mov
je
daa
adc
into
pop
les
push
test
mov
mov
xor
lock
pusha
jp
bound
pop
sbb
fiaddl
js
out
dec
dec
enter
adc
into
or
cld
and
mov
mulb
push
xchg
jg
icebp
ljmp
enter
inc
rorl
cmc
ficomps
sbb
dec
dec
jb
jge
scas
and
cs
hlt
cmc
notb
shll
aam
dec
jge
sbb
mov
imul
mov
mov
mov
push
or
ja
lods
xchg
sub
rcrl
mov
pop
mov
xorl
add
adc
cld
jb
lods
out
pop
sahf
in
lods
cmpsb
lcall
sti
sbb
cwtl
adc
mov
and
dec
dec
out
mov
or
push
lret
jne
add
push
subb
in
push
mov
add
add
add
insb
add
fisubl
xor
sub
bound
jne
add
sub
out
test
dec
dec
sub
xor
fidivs
sub
inc
push
mov
xchg
cmp
push
frstor
mov
push
icebp
andl
mov
sub
jo
push
and
in
pop
iret
cs
fiadds
movsl
stos
insb
lock
hlt
or
jbe
shl
jne
push
dec
sbb
mov
stc
pop
cmpsl
sbbl
ja
mov
cmp
jnp
divl
cmp
arpl
jae
mov
mov
lret
decl
push
push
add
or
xor
loope
js
aad
mov
pop
pop
test
and
pusha
fs
daa
adc
cmp
push
test
pop
sub
repz
adc
push
add
xchg
push
test
add
add
ja
out
sbb
dec
rcr
outsb
add
add
push
mov
inc
fisubs
sbb
fstpt
jmp
xchg
push
and
add
sbb
jp
xlat
xlat
cmp
sbb
pop
rcr
notb
push
insl
xchg
adc
dec
add
ja
mov
add
cmp
sub
xchg
daa
jge
and
push
sub
dec
sbb
adc
jno
in
aam
lock
movsb
mov
push
cmp
mov
mov
pop
bound
push
cmp
mov
test
rcrb
aaa
sub
jl
pusha
pop
push
aad
rcrl
lret
cmpsb
icebp
imul
and
dec
xchg
add
stc
cmp
iret
and
in
dec
popa
movb
sub
mov
test
jle
mov
shrl
loopne
pop
adc
lods
mov
cmpsb
inc
xor
in
ret
lahf
pop
sub
add
sub
ja
mov
add
xor
outsl
add
add
int3
lock
ret
pop
dec
xor
mov
mov
lahf
cmp
and
cmpl
pop
mov
int3
xor
xor
ret
pop
add
sub
cmp
lcall
push
xor
inc
sub
dec
test
fbld
inc
mov
mov
and
adc
xchg
fsub
sti
out
fldenv
movsl
cltd
test
mov
mov
adc
lret
push
fldenv
cmc
jge
inc
mov
xor
xchg
mov
divb
hlt
xor
xchg
add
add
sub
in
or
hlt
minps
mov
in
mov
inc
xchg
jo
outsb
pop
cmpsb
cli
sbb
test
pop
add
fistps
push
lods
mov
xchg
sbb
cmp
sbb
daa
ss
and
arpl
mov
dec
mov
js
mov
sub
xor
add
add
cmp
jnp
outsl
cmpsb
loopne
pop
jns
call
add
add
dec
jbe
xlat
fcmovnb
popl
fpatan
adc
fcomi
fwait
add
xor
mov
adc
std
loope
shll
jp
mov
sti
fsubrl
mov
sub
sbb
addr16
pop
ret
jge
sub
xchg
ret
scas
inc
xor
pop
push
sub
fdivs
inc
js
or
sbb
inc
std
jne
or
aas
mov
adcb
dec
mov
pop
hlt
xchg
jne
ret
insl
shll
xor
mov
mov
xchg
insl
test
mov
inc
adc
test
inc
push
sbbl
sbb
outsl
inc
data16
mov
enter
lret
ja
add
dec
xchg
adc
adc
dec
es
scas
shll
insl
cli
inc
push
add
add
add
cli
xchg
jle
push
je
movsl
ror
call
add
dec
ret
iret
lret
test
cwtl
movsb
test
aam
and
into
daa
mov
pop
push
mov
int
out
frstor
push
push
ret
inc
loope
ja
popa
lds
or
jo
cmpb
sub
mov
outsl
push
jns
icebp
cmpsb
add
aaa
or
mov
xchg
jo
push
mov
xor
jmp
push
out
jbe
cmp
inc
test
stos
push
fmuls
pop
pop
data16
jbe
and
xchg
cmpsl
dec
dec
repz
ljmp
aaa
add
test
xchg
cmp
mov
jg
add
into
ja
test
fdivrl
adc
jae
xchg
fucom
mov
js
dec
pop
shrb
add
xchg
pusha
pusha
fiadds
rcll
movsb
lods
add
ds
mov
inc
sbb
jbe
and
jns
sbb
clc
or
add
inc
aaa
dec
fwait
jnp
aad
sbb
fstl
bnd
add
std
insb
sub
adc
js
mov
sub
mov
adc
mov
ret
xchg
aas
es
or
mov
lds
xor
aad
lea
aad
push
mov
cmpsb
sub
push
dec
add
jp
mov
sbb
scas
aad
cmp
add
push
jmp
xlat
in
sub
jmp
sahf
and
mov
scas
and
sub
push
sub
ss
out
pushf
jno
out
in
data16
incl
data16
imul
js,pt
cwtl
in
sbb
jmp
js
std
shll
or
loope
imul
outsl
xchg
mov
movsl
sbb
push
jo
pop
pop
mov
sahf
push
es
jmp
cmpsb
mov
mov
cmpsb
mov
or
or
mov
push
add
mov
std
mov
sub
jae
add
ret
lds
sbb
push
push
xchg
mov
dec
jmp
push
test
not
sub
mov
fsubs
clc
cs
vrsqrtss
out
aas
stos
jae
push
sbb
pop
call
into
mov
sub
mov
adcb
xchg
data16
lahf
out
std
sub
mov
mov
mov
fwait
push
test
xchg
lods
rol
sub
xlat
call
mov
adc
and
cmpb
xor
mov
enter
mov
inc
jg
test
call
adcb
loop
jecxz
call
inc
sti
push
ja
jns
dec
and
xor
das
dec
call
shlb
jae
loopne
mov
xchg
xor
repz
pushf
cmpsb
inc
xchg
sbb
sub
lods
pop
dec
xlat
sbb
fstpt
mov
jae
scas
add
pop
jge
add
add
fstl
lret
out
cld
je
add
inc
pop
fcmovnbe
inc
inc
xor
lret
inc
cwtl
jge
insl
mov
xchg
sub
jmp
test
hlt
out
dec
mov
xchg
cmc
pop
test
cmp
and
add
ds
andb
fdivrp
inc
cmp
xchg
mov
push
mov
cltd
cmpsb
mov
imul
aas
enter
sbbl
lds
dec
jo
call
or
in
movsb
push
cmc
and
negl
in
add
pop
and
sub
fisttpl
out
push
xor
fbld
shrb
jmp
xor
push
loope
and
adc
iret
int
or
test
sbb
fildll
loop
inc
daa
shl
cmp
push
or
ja
fldl
or
mov
jecxz
dec
into
inc
stos
xchg
call
adc
sbb
sub
int3
mov
add
bound
sub
sbb
jbe
add
stc
je
cltd
xchg
rcll
mov
sub
push
and
fsubs
stos
clc
add
test
pop
into
lods
xchg
lods
out
xchg
add
pop
or
int
cmpsb
and
sti
repz
add
pop
fists
dec
mov
mov
sti
or
loope
les
jge
jno
mov
ds
jo
mov
jg
sbb
cmpsb
jg
mov
in
inc
pop
cmpsb
ja
stos
sbb
lcall
sti
add
cmpsb
and
pop
leave
aaa
insb
sbb
inc
ror
mov
into
stos
cmp
or
pusha
inc
fcoml
icebp
ret
int3
mov
cmp
mov
clc
mov
mov
mov
mov
mulb
or
mov
hlt
xchg
push
rorl
pushf
push
nop
mov
out
xor
stos
jo
push
xor
clc
bound
add
jns
divl
in
sub
push
ja
add
xor
sub
je
loop
lret
sbb
jns
mov
inc
jne
ret
fidivrl
out
sub
sbb
xchg
pop
mov
repnz
xchg
xchg
cmpsl
xchg
loop
sub
in
xor
mov
lea
inc
jb
addr16
pop
push
jmp
pop
leave
jle
inc
cld
mov
pushl
add
add
sbb
shrb
jo
adc
pop
cld
loop
push
inc
sub
cwtl
inc
iret
or
mov
leave
hlt
rolb
repnz
cmp
mov
cmp
or
rcl
ret
cmc
mov
mov
and
ret
inc
dec
mov
rolb
lahf
adc
cmp
call
xchg
inc
pop
and
div
dec
lcall
maskmovq
testl
jecxz
push
push
jmp
and
push
mov
or
stc
mulb
adc
fcomi
mov
jb
out
jbe
fidivl
insb
je,pt
adc
add
add
fisubs
mov
mov
es
or
add
add
leave
clc
add
js
into
push
sub
or
mov
lahf
sub
dec
sub
mov
mov
sub
ljmp
cmc
or
les
pop
add
pop
and
cli
push
scas
movsb
jecxz
jmp
clc
mov
jns
lock
call
pop
rorl
mov
dec
mov
jp
movsb
movsl
fstpl
jae
int3
in
jmp
push
add
push
push
inc
push
je
cmp
sti
xchg
icebp
add
test
call
out
mov
frstor
pop
inc
int3
pop
aad
jae
dec
sub
mov
jno
cli
decb
mov
pop
mov
dec
sub
xor
push
stos
xchg
scas
addb
aas
jns
jl
fwait
iret
mov
inc
and
nop
scas
xor
imul
out
jp
shlb
jg
xchg
jg,pt
shrb
add
mov
outsl
jne
ljmp
roll
add
mov
or
nop
out
sub
es
mov
push
xor
lds
sub
add
adc
popf
ret
ss
push
pushf
loope
dec
jns
inc
jecxz
ss
dec
jo
out
mov
imul
push
jmp
shlb
imul
pop
xor
cltd
mov
sti
push
jmp
ljmp
mov
sub
pop
xchg
cs
nop
xchg
stos
in
cmp
push
sbb
ss
and
imul
xchg
popf
mov
arpl
mov
mov
mov
pushf
sub
add
add
in
into
xlat
in
add
mov
in
mov
inc
shr
aad
xlat
xchg
lock
jmp
shlb
into
adc
bound
xor
fs
sbb
aaa
cmp
in
out
jmp
jle
cmp
fcmovne
lret
fs
sbb
xor
lods
data16
popf
push
cmpl
ljmp
add
orb
ljmp
jl
xchg
in
sub
jp
add
idivb
aad
and
dec
stos
pushf
popa
jmp
outsb
push
pop
and
sub
mov
mov
imul
pop
mov
pushf
repz
es
add
push
pop
dec
sarl
imull
fsts
out
inc
testl
add
sbb
push
scas
push
mov
inc
icebp
xorl
ds
call
jmp
lret
sub
ds
outsl
shll
xchg
xchg
adc
mov
cli
add
or
jbe
sarl
jno
rorb
pop
sarb
xor
cli
sbb
cmp
xchg
loope
push
xor
xchg
xor
xor
sub
orb
pop
cmp
hlt
imul
shlb
xchg
std
mov
fdiv
loopne
adc
mov
xchg
bsf
test
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
push
fadd
mov
cmc
repnz
insl
pusha
sti
shl
test
movsb
popf
das
mov
aam
add
xlat
dec
ss
test
imul
ficompl
out
jg
xchg
fs
out
ljmp
xor
pop
push
cmc
sub
or
in
inc
cwtl
xor
jo
rorb
xor
cmp
mov
jmp
jnp
xlat
dec
push
and
loopne
rclb
repz
popa
ret
inc
and
xchg
push
lcall
jmp
cli
aam
icebp
and
mov
out
test
mov
rol
jmp
lock
pop
xchg
mov
pop
pop
inc
cmp
stos
mov
mov
scas
jno
icebp
xchg
movsb
push
testl
imul
ret
and
and
stos
repnz
add
jp
xchg
movsl
es
scas
aad
ret
aam
fstps
sbb
stc
xchg
pop
or
rolb
mov
cli
add
add
cmpsb
push
sbb
loop
pop
jl
add
sbb
pushf
sub
aas
int3
mov
insl
mov
mov
cmp
hlt
mov
xchg
out
add
mov
xchg
xor
or
icebp
fs
push
fidivrs
mov
xor
aad
iret
or
scas
sub
adc
mov
lock
jg
push
cs
pop
iret
fimull
cmovg
call
or
and
add
cmp
dec
imull
jl
cmp
punpckldq
stc
stos
les
arpl
movsl
ret
mov
aaa
out
ret
scas
adc
push
clc
out
ljmp
sbb
mov
ret
push
sbb
pop
mov
roll
pop
pop
adc
js
lret
cmpsl
pop
int3
mov
lods
add
mov
inc
xor
sarl
mov
mov
sahf
mov
inc
jg
test
outsb
test
push
popa
into
push
jmp
popf
loope
inc
stos
movsb
add
add
cmp
cli
mov
push
add
dec
and
add
add
push
mov
test
mov
stos
xchg
or
inc
clc
imul
mov
fmulp
stos
les
ret
jae
pop
popf
add
mov
push
jne
xchg
push
pop
addr16
add
popa
nop
test
clc
repz
mov
jg
mov
sub
xor
int
aam
add
cwtl
push
mov
pop
cmp
pop
mov
push
sbb
mov
mov
inc
call
xchg
xor
movsb
jge
inc
cmp
cmp
leave
and
test
xchg
ret
lods
mov
ljmp
std
xchg
and
ss
sub
inc
scas
in
push
sbb
out
pop
jecxz
lods
in
enter
cwtl
addr16
rorl
fimull
fwait
aas
leave
push
or
dec
dec
out
mov
xchg
lea
ret
cmp
xor
dec
adc
lea
add
test
lcall
je
ja
jle
add
mov
in
push
and
mov
enter
mov
pop
sbb
rclb
popf
adc
rcl
inc
out
lret
xchg
add
xchg
jae
cmp
push
pop
lods
fisttpll
repnz
mov
mov
pop
add
mov
mov
mov
xchg
clc
push
inc
fsts
jo
fnstcw
sub
ret
nop
or
pop
push
mov
faddl
out
loope
imul
sub
pushf
leave
pop
sub
cmp
or
cld
cwtl
sbb
push
movsb
adc
mov
int
repz
xorb
je
sarb
or
mov
ljmp
daa
clc
lods
xchg
adc
call
pop
lea
add
adc
mov
mov
or
adc
movb
loop
aam
ds
mov
mov
add
add
xchg
xchg
jns
jmp
mov
insl
jg,pn
add
stos
dec
scas
pop
leave
gs
adc
mov
insl
out
mov
stos
sub
jp
fistpl
aas
rcrl
xor
push
push
pop
push
xchg
dec
stos
test
outsl
shrl
lret
in
add
cltd
xor
popa
insl
inc
jnp
jo
jg
lret
push
lods
test
jnp
test
sub
jl
arpl
xchg
cmp
mov
test
dec
mov
cmc
xor
mov
xor
mov
and
adc
xlat
test
mov
cmp
mov
mov
in
into
pop
mov
stos
enter
scas
or
pop
push
mov
les
cmp
push
repz
pusha
xlat
mov
repz
pop
aas
inc
or
in
rcrb
outsb
mov
popf
and
jecxz
sbb
mov
aam
inc
fcomip
and
outsb
mov
addb
imul
scas
lcall
adc
sbb
sbb
mov
addb
add
sub
lahf
cltd
jecxz
enter
dec
mov
ja
jg
iret
ss
lret
mov
in
lcall
jg
subl
lock
mov
test
dec
andb
in
dec
iret
mov
dec
mov
adc
sti
mov
mov
ljmp
push
mov
or
lods
adc
xchg
arpl
sbb
aam
jmp
pop
cmp
jmp
jb
sbb
test
popa
es
test
int
mov
sti
loope
fwait
xchg
sbb
repz
ret
scas
push
in
popa
inc
mov
lcall
movsb
sbb
test
iret
bound
out
inc
xchg
mov
cmpb
inc
cmpsl
lock
xor
cwtl
xor
jle
aas
arpl
push
jge
repnz
and
mov
mov
rcll
pop
sub
lods
mov
adc
fdivp
lods
imul
add
add
mov
idiv
jne
iret
fmuls
popf
cmp
add
pop
popa
or
dec
or
add
aam
out
lock
jns
xchg
push
jne
adc
repz
sarb
jo
arpl
enter
jmp
dec
inc
call
jb
mov
adc
pop
cmp
out
test
mov
es
jb
push
out
inc
idivb
test
mov
outsb
nop
outsl
dec
arpl
pushf
add
in
xlat
das
inc
pop
outsb
pop
pop
push
add
pop
push
in
icebp
add
int
mov
lcall
inc
mov
std
imul
or
jne
les
mov
jae
jp
and
cs
adc
dec
sbb
dec
out
fcoml
dec
push
sbb
pop
mov
int3
and
clc
pop
mov
iret
and
adc
js
mov
add
add
xchg
pushl
sub
push
mov
add
add
popa
mov
inc
loope
push
xchg
rorl
lods
nop
mov
jle
cmp
daa
xchg
lret
movsb
roll
int3
lock
addr16
andb
mov
ffree
jno
aad
add
xor
cmp
jb
dec
mov
push
lahf
add
mov
hlt
add
popf
pop
xchg
jnp
cmp
or
mov
xchg
sti
stos
and
push
stos
sub
jecxz
inc
and
xor
insl
sub
xlat
movsl
lods
add
loopne
mov
mov
lahf
test
and
jne
sti
push
adc
arpl
xor
pop
cmc
jae
in
rcr
pop
sbb
hlt
fisttps
cmp
arpl
ljmp
je
test
pop
xor
js
test
je
sbb
stos
xchg
xor
shlb
jae
push
repnz
stos
fldt
mov
add
add
sti
iret
ss
push
jno
sub
leave
inc
addl
add
pop
loopne
loopne
push
push
jmp
mov
cmp
or
mov
sarl
movsb
mov
push
jne
inc
mov
and
stc
dec
sbb
cmc
cld
into
mov
adc
fidivrl
jnp
jg
cwtl
mov
test
lret
jp
pop
mov
pop
insl
inc
ljmp
and
xor
lret
or
pop
in
xor
rcrb
pop
data16
dec
hlt
bound
inc
sbb
outsb
jno
icebp
jns
enter
and
xchg
or
sbb
push
not
jbe
in
adc
ds
adc
sub
and
mov
sahf
cwtl
cmpsb
stos
inc
pop
insl
rol
inc
xor
faddl
jne
pop
je
aam
rcl
xchg
fistpll
fcos
and
mov
and
test
movsb
inc
scas
adc
adc
dec
cmp
xchg
jmp
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
mov
pop
inc
test
add
into
cmp
cmp
add
les
iret
stc
mov
jne
js
xchg
sbb
in
mov
ret
push
push
and
sahf
repz
and
xor
insb
mov
mov
or
rorl
cli
mov
notb
xchg
outsb
mov
dec
ljmp
push
mov
jmp
pushf
loope
int3
mov
adc
in
sub
dec
mov
lea
cmp
push
mov
and
push
xor
daa
xchg
in
lods
or
loopne
dec
pop
cltd
dec
xchg
xchg
pop
dec
and
cmp
imul
in
fnstsw
jl
in
push
dec
pop
popf
adc
xor
stos
add
xchg
movsb
xchg
and
orb
inc
sbb
inc
push
xchg
fs
dec
push
add
add
mov
mov
das
outsb
and
test
add
add
sahf
add
adcl
cmc
pop
inc
pop
mov
dec
or
mov
sti
into
pop
jae
nop
ss
int
xchg
fnsave
scas
rcrb
icebp
sti
addr16
dec
stc
cld
pop
data16
leave
mov
gs
scas
or
stos
mov
pop
insb
pop
jb
or
sbb
movsl
mov
decb
in
in
popa
loope
add
ror
outsl
lea
popf
mov
sbb
cmp
add
sbb
fs
cmp
je
and
out
rorl
ret
and
adc
mov
gs
pop
inc
jne
data16
arpl
insb
in
jo
lds
lock
pop
shr
xchg
mov
push
inc
mov
mov
daa
sub
inc
push
mov
gs
stos
int
fnstenv
jecxz
mov
loop
hlt
test
ret
sub
lret
inc
stos
lahf
push
pop
ja
add
and
out
ljmp
lock
xchg
sub
repnz
xchg
add
imul
mov
cmp
loope
jp
movsl
inc
jp
clc
push
cltd
add
push
addl
imul
dec
outsb
pop
or
loope
or
iret
dec
mov
enter
push
fsts
dec
cmp
stos
and
inc
ja
repz
mov
xor
mov
jecxz
cmp
cs
and
cmc
xchg
shlb
popa
mov
imul
fs
xchg
pop
inc
dec
dec
shl
inc
mov
sub
pop
test
std
lods
call
cmp
clc
mov
leave
test
mov
adc
loop
fstpl
mov
out
push
aas
mov
xchg
xchg
push
sub
lods
xor
jne
mov
lcall
or
pop
repz
into
cltd
into
ljmp
add
cmp
jg
int3
out
mov
push
xchg
into
leave
sbb
add
imul
push
jnp
sbb
push
xor
xchg
add
xchg
mov
fsubrs
xchg
inc
lret
mov
inc
dec
ljmp
rorb
es
jecxz
sbb
xchg
lret
dec
jns
or
dec
mov
icebp
jecxz
or
pop
dec
mov
fwait
or
mov
aas
adc
jb
xchg
xor
fsubrs
psrld
hlt
dec
mov
mov
xchg
ss
and
sub
scas
push
divl
and
notl
add
xchg
ja
inc
mov
into
jl
in
pop
xor
mov
jne
cmp
xchg
cmp
fistpll
shlb
inc
iret
mov
int3
pop
mov
out
mov
stos
mov
aad
mov
adc
jo
pop
push
nop
outsb
dec
clc
xor
pop
jae
pop
movsb
push
das
pop
loop
cwtl
mov
cli
push
add
add
aas
or
mov
sub
push
js
mov
add
jle
mov
loopne
leave
sti
shll
cmp
inc
imul
jl
jb
jo
adcb
mov
or
inc
repz
pop
dec
stc
in
cmpsb
fwait
or
std
shll
sti
lea
popa
shl
into
sbb
push
mov
repz
mov
mov
into
xchg
xorb
add
fldl
fcompl
testb
lret
mov
orb
and
testl
lods
inc
lahf
js
xor
xchg
jae
adc
mov
mov
cmc
mov
lods
fisttpl
aaa
ret
imul
movsb
stos
or
jae
hlt
pop
stos
aam
push
shll
cli
fldenv
test
jle
enter
xchg
mov
pop
cmpl
mov
sar
xor
loop
es
add
add
push
outsb
fisubs
test
dec
mov
add
add
and
inc
dec
ja
add
stos
pop
fsubrl
pusha
cmp
mov
out
jbe
and
mov
in
add
mov
inc
cmp
lods
aas
pop
fimuls
push
ja
imul
test
push
neg
pop
pop
mov
imul
sub
test
fdivrp
mov
or
xchg
ss
imul
mov
mov
call
mov
mov
in
dec
push
pop
daa
popf
add
jns
dec
inc
aam
pop
fadds
jne
xor
outsb
int3
jl
aaa
mov
push
and
jnp
adc
rorl
test
push
in
jp
push
or
push
inc
stos
or
mov
iret
ja
pop
cmp
and
xchg
jno
movsb
or
sub
pop
out
jg
add
add
test
dec
adc
push
aad
mov
add
add
mov
jns
nop
aam
mov
add
cmp
mov
rdpmc
sub
push
cli
cmp
ljmp
mov
adc
inc
daa
mov
mov
in
or
mov
jge
aas
or
lcall
add
or
daa
xchg
out
jne
repz
sbb
fnstcw
sbb
jp
push
jno
sbb
test
jb
or
mov
pop
test
push
mov
fs
test
cs
jg
pop
jmp
fiadds
mov
mov
fidivrs
inc
push
mov
xchg
inc
mov
movsw
sub
andl
mov
jmp
dec
je
aas
gs
fisttpl
cmpsl
inc
repnz
fwait
cmp
test
lret
mov
insb
inc
not
in
sub
aad
push
and
add
adc
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
sahf
and
xchg
push
add
add
sbb
sub
jbe
mov
out
pop
out
add
pop
stos
mov
jl
mov
add
push
push
pop
push
push
cmp
ret
add
inc
in
xor
icebp
imul
rcrl
cmp
lods
jns
mov
jo
insb
xor
sub
enter
sbb
pop
lahf
sub
jae
mov
addr16
stos
cmp
stos
int
dec
in
inc
pop
push
cmp
pop
stos
lret
js
pusha
sub
jmp
push
aam
cmp
sub
leave
push
scas
inc
dec
popa
scas
sbb
dec
mov
xchg
inc
mov
cld
adc
mov
das
mov
dec
mov
ficomps
mov
insb
push
mov
test
inc
sub
sbb
addb
pop
aam
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
lods
insb
std
movsb
dec
cmpsl
lcall
and
xchg
inc
pop
outsb
xchg
jbe
shl
aam
ds
test
inc
mov
mov
test
lcall
test
in
xchg
xchg
lods
mov
lds
mov
pop
mov
xchg
mov
sahf
xchg
mov
shll
icebp
add
addr16
repnz
push
xchg
or
xchg
adc
repz
stos
xchg
mov
testl
in
insl
hlt
jmp
inc
lret
enter
add
cmp
add
mov
fcoms
adc
adc
push
add
or
repnz
pushl
in
shll
inc
jnp
mov
cmova
mov
out
add
scas
hlt
xchg
inc
xchg
call
sti
sub
emms
ret
xchg
dec
mov
lcall
jbe
leave
add
add
lods
les
jnp
mov
icebp
andl
add
pusha
lcall
lods
mov
or
cwtl
out
arpl
out
cmpsl
xchg
cmp
in
fistl
mov
ljmp
push
and
sub
pop
cwtl
cli
push
dec
pop
mov
das
inc
mov
sbb
icebp
pop
inc
es
mov
adc
add
jg
pop
cmp
icebp
in
mov
sti
lds
jmp
insb
mov
movsl
std
jge
push
das
xor
dec
scas
pop
adc
shrb
mov
cmc
mov
lds
fildll
sub
push
arpl
movsl
rclb
mov
cli
jl
xor
adc
push
or
loopne
mov
pushf
jmp
test
jbe
mov
mov
sbb
xchg
adc
xor
icebp
adc
in
pushf
fldcw
cmpsl
or
aam
pop
sbbb
cltd
rorl
inc
aas
jle
jae
out
add
add
les
fcomps
add
jle
cmpl
add
ss
incb
test
outsb
inc
xchg
mov
test
mov
pop
loop
pop
sbb
sub
dec
lds
jbe
adc
lods
adc
aad
cltd
je
sub
adc
gs
adc
dec
lds
cmc
pop
jnp
call
std
fisttps
addl
add
inc
lcall
inc
mov
dec
sub
fisubl
loope
aas
test
filds
icebp
add
dec
pop
mov
call
add
repz
es
inc
movsl
push
fsubrl
je
ljmp
out
push
sbb
xor
mov
jns
sti
dec
pop
decl
incb
scas
mov
cmp
mov
and
xchg
xor
push
and
mov
ret
xchg
fisubl
notl
jbe
and
sub
push
insb
mov
xlat
dec
dec
adc
dec
or
add
add
ljmp
dec
mov
inc
mov
add
add
jmp
fs
lret
mov
leave
out
cmc
rorl
stos
fs
aad
sub
or
cltd
cmp
xor
fistpll
push
loope
push
mov
mov
mull
lea
inc
movsb
xlat
pop
andb
daa
cmp
sti
les
rorl
loop
test
sub
cwtl
add
xchg
rolb
push
xor
inc
inc
push
pop
shrl
push
dec
xor
rcr
xor
lods
sub
dec
mov
test
lcall
lods
mov
dec
lcall
fsubs
adc
iret
push
in
push
and
das
mov
push
and
inc
mov
shl
es
out
ret
mov
fsubrs
int3
jg
mov
nop
xor
je
xor
inc
pop
jg
adc
movsl
loope
jno
mov
imul
add
aaa
shlb
cmc
div
testl
pop
adcl
add
xor
daa
or
sahf
cmp
lcall
fsubl
mov
mov
pushf
push
mov
orb
mov
or
mov
shrl
dec
pop
dec
pushf
xor
sub
ss
mov
daa
adc
test
sbb
mov
clc
xchg
jns
mov
shl
insl
pop
shrb
adc
or
xchg
stos
xor
ret
adcb
subb
scas
jmp
lds
sbb
scas
cwtl
das
push
cmp
add
inc
loopne
insl
adc
xor
pushf
pusha
sbb
es
dec
movsb
lods
sub
mov
cs
cmc
lcall
andb
popf
dec
cltd
mov
cmp
adc
out
fidivl
rorl
mov
clc
inc
jl
jbe
lods
cmp
sub
adc
add
pop
push
nop
push
sahf
rcr
pop
adcb
push
xchg
add
add
jae
xchg
jp
cmp
cmp
add
cmpsb
leave
jno
cmp
aas
in
push
arpl
sub
cltd
fmul
jo
xchg
lock
in
cwtl
cmp
jnp
mov
push
sbb
out
jp
sbb
cmpb
lods
dec
sti
mov
jg
jne
ja
xor
inc
loopne
pop
cli
mov
push
push
lahf
inc
jmp
pop
sub
add
jo
cmp
fsubrs
mov
pop
pop
shlb
mov
and
sub
loop
add
aaa
inc
sub
mov
bound
pushf
pop
lcall
inc
imul
or
xchg
sti
neg
fnstsw
cltd
adc
push
inc
sbb
and
std
pop
hlt
sub
sbb
call
mov
mov
dec
dec
pop
add
add
arpl
cmpsb
jcxz
fimull
lea
add
out
dec
inc
cwtl
fdivl
popa
ret
push
mov
scas
sbb
inc
mov
adc
xor
xor
stos
pop
xchg
cmpsb
mov
movsl
cmc
mov
or
clc
leave
lods
inc
xchg
push
ss
fcmovb
imul
call
xorb
dec
imulb
xor
out
bound
jge
mov
sbb
test
roll
or
xor
or
loopne
inc
and
sbb
sub
sbb
fnstcw
sbb
nop
bound
or
movb
fdivs
jns
xchg
leave
jl
cli
std
ljmp
or
push
and
call
sub
enter
cmc
push
test
jbe
ret
stos
mov
repz
xor
fs
dec
push
push
ret
pop
mov
loopne
adc
fucomip
daa
add
add
clc
jnp
jg
in
cli
enter
test
cltd
push
xchg
xchg
add
add
sub
mov
push
leave
push
dec
idivl
sbb
decb
repz
jmp
into
or
push
dec
jns
std
inc
and
mov
icebp
add
fdiv
lock
xlat
jo
mov
sahf
sub
fs
aam
pop
rcl
mov
xchg
sub
mov
jecxz
jo
sbb
fldl
lods
mov
sbb
adcb
jne
push
and
push
add
cmp
lds
iret
in
inc
sarb
fnstenv
dec
mov
inc
push
dec
flds
ret
jge
sub
out
aad
rolb
loopne
out
pop
iret
fwait
arpl
dec
adc
addb
lcall
repz
stos
lahf
data16
mov
mov
add
fisubs
clc
std
outsl
adc
lea
jp
decl
or
or
mov
pop
pop
mov
ljmp
cld
gs
mov
xchg
xchg
add
add
xchg
in
shrb
stos
jle
ret
add
mov
add
dec
aam
cld
xchg
xor
adc
and
jns
fisubrl
xchg
enter
jno
jo
cmpsl
or
or
out
xchg
lods
dec
mov
and
imul
in
inc
fdivrs
sub
add
mov
add
test
mov
mov
mov
cmpsb
mov
push
inc
fiadds
push
ret
call
aad
mov
mov
adc
sub
jno
rolb
jle
push
imul
fimuls
scas
mov
xchg
pop
push
jmp
cs
jl
addr16
in
pop
mov
into
push
or
or
sbb
out
cmpsb
mov
xor
nop
test
inc
mov
ljmp
mov
in
sub
mov
clc
add
subb
sti
pop
push
pop
mov
cltd
sahf
repz
add
jl
sar
std
jle
pop
popf
scas
rolb
add
add
out
jmp
xor
inc
inc
push
int3
mov
inc
leave
mov
sub
rcl
xchg
fdivr
jnp
xchg
jl
imulb
lds
adc
adc
lods
shlb
push
mov
ret
data16
dec
int3
mov
popf
pop
int3
js
or
jl
data16
test
mov
xchg
mov
call
sub
jno
sub
popa
cmc
ds
test
xchg
aam
dec
jmp
rclb
mov
ss
add
pop
push
push
cmpsl
loope
mov
mov
and
mov
dec
xchg
psubusw
addr16
adc
fnstsw
aaa
and
jno
push
and
test
mulb
jg
fwait
sti
pop
add
mov
stos
insl
idivb
inc
cmp
jnp
jle
and
mov
sbb
nop
push
or
mov
popa
jge
jl
xor
add
add
cwtl
or
stos
xchg
cmp
in
push
push
enter
add
add
jl
in
adc
test
xchg
xor
mov
dec
jns
push
cld
cwtl
les
jne
xchg
test
push
mov
hlt
push
cmp
or
cmp
xchg
cmp
pop
mov
xchg
mov
sbb
int
mov
loope
xor
int3
cmp
add
pop
cwtl
xor
cmpsl
mov
flds
adc
dec
lcall
push
insl
cmpsl
inc
mov
and
lods
mov
lahf
maxpd
fildl
fcompl
les
push
sbb
fnstenv
sub
jp
or
addr16
cmpsb
out
pop
pop
and
jecxz
shrl
jmp
ret
imul
or
jg
mov
mov
push
popa
jge
iret
adc
jge
pop
fsubs
lods
lret
jmp
fsubs
cmp
mov
jne
das
lds
inc
xchg
addb
out
jge
scas
aas
jle
add
fwait
and
popa
mov
xorl
cmpsb
xchg
add
add
and
addr16
jmp
imul
xor
cli
sub
in
push
movsb
int3
cld
dec
hlt
lcall
xor
sub
sub
rol
movsb
ret
test
data16
xor
push
ja
add
imul
or
out
es
xchg
sub
shl
mov
pop
push
cmp
je
stos
lock
sub
lock
iret
ss
call
ds
sub
xchg
mov
cmp
fbld
orl
shlb
push
add
or
test
lret
lret
mov
push
ret
add
rcrl
mov
inc
add
xor
ja
loope
movsb
adc
pop
mov
mov
stos
mov
and
lods
shlb
insl
mov
das
cmp
ja
xor
mov
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
sti
mov
pop
dec
push
mov
lods
stc
and
movsb
mov
loop
cmpsb
inc
test
mov
jg
jnp
sub
inc
js
mov
repz
xor
lret
icebp
jecxz
call
cmp
dec
out
inc
add
xchg
mov
push
dec
xchg
pop
inc
jb
cwtl
mov
mov
ja
stos
das
xchg
push
mov
mulb
sbb
xlat
ja
scas
lods
mov
jge
cmp
and
sbb
add
sbb
jge
dec
nop
movsl
test
adc
ds
inc
inc
enter
add
mov
cmp
pop
pushf
jb
sbb
out
data16
cmp
adc
jno
cmp
aad
lea
js
add
jle
stos
cld
dec
mov
jnp
and
add
xchg
jl
ljmp
adc
inc
jnp
xlat
stos
add
add
mov
mov
jmp
test
xor
xchg
mov
add
add
cmp
mov
das
xor
and
cmp
inc
movsl
mov
jns
or
lret
pop
pop
cs
pop
inc
pusha
pop
cld
mov
test
cmp
jmp
pop
mov
fs
outsb
and
test
xor
sahf
or
mulb
imul
mov
xor
lret
lret
xchg
mov
push
fisubrl
notb
int3
add
mov
icebp
movsb
or
cmp
sub
test
addb
leave
into
push
pop
bswap
shlb
lret
mov
lods
xchg
push
mov
or
mov
lods
inc
pop
in
fbstp
mov
data16
mov
in
mov
cmpsb
mov
repnz
insb
cmp
insb
lahf
bound
sbb
fcmovb
xchg
loope
jns
or
xor
arpl
add
adc
sbbl
popl
push
pushf
mov
add
add
rcrl
dec
jmp
push
sub
pop
push
imul
jno
test
movsl
cmpsl
aaa
notl
add
mov
dec
fwait
lcall
fdivrl
xlat
xchg
cmc
fsubl
mov
sbb
mov
lods
cmp
rorb
mov
dec
lods
in
orb
mov
sbb
inc
or
add
movsl
jle
dec
jno
and
pop
outsb
out
sbb
das
pop
and
sbb
xor
mov
sti
push
lret
mov
dec
sbb
pop
pop
hlt
into
xchg
stos
imul
rcll
das
sbb
rorl
fxch
push
sbb
out
test
or
mov
cmp
repnz
xor
xchg
sbbb
jmp
sub
add
mov
sbb
adc
les
sbb
cmp
fsubrs
je
int3
xchg
push
or
mov
add
imul
movsb
and
jmp
dec
jg
fwait
add
add
movsl
xor
or
push
jl
cld
sub
movsb
mov
out
movsl
lods
pop
mov
dec
and
pop
push
or
je
mov
ds
movsb
gs
push
mov
mov
and
adc
sub
inc
pop
mov
adcb
and
int
sbb
bound
test
xchg
mov
testb
loope
sub
xchg
movups
ret
or
cmpsb
out
in
mov
fsubs
and
call
jge
pop
jnp
inc
sub
dec
orb
addb
bound
pop
mov
fldl
sub
jmp
fwait
pop
dec
sarl
mov
jbe
cmp
xchg
jl
cwtl
aaa
hlt
pop
xor
dec
mov
mov
test
adc
pop
inc
xor
push
fstps
ffreep
inc
xor
add
mov
jge
jg
ljmp
in
lahf
mov
lods
test
add
add
out
jbe
sub
cmp
mov
push
push
addr16
add
mov
inc
or
and
cmpsl
in
pop
mov
adc
adc
add
decl
push
cmpsl
pusha
inc
stos
sbb
dec
out
hlt
sub
inc
out
mov
dec
jbe
shl
ljmp
pushf
iret
idivb
call
cld
cmpsb
cli
xor
repz
fstpt
push
aaa
cltd
pop
add
ret
jle
rolb
mov
fdivrl
fs
cli
push
hlt
or
stos
mov
mov
xor
inc
adc
ljmp
push
add
lahf
cmp
and
aas
push
jmp
mov
sbb
pushf
or
addl
xchg
xchg
dec
xchg
jnp
std
in
inc
jnp
ret
clc
jl
ljmp
not
cltd
push
icebp
cmp
push
push
stos
jp
add
cltd
sub
out
inc
sub
or
mov
add
add
cmc
or
xchg
outsl
mov
inc
movsb
sub
jl
add
and
adc
insl
mov
inc
out
jb
cmpl
and
cmp
cmp
or
fdivrs
in
or
into
outsl
push
and
dec
cmpsl
pop
enter
mov
adc
mov
adcl
dec
call
jbe
inc
pop
mov
push
push
out
out
jo
jae
dec
dec
addl
pop
aad
jl
xor
sub
cs
jno
mov
mov
lcall
jp
loope
sbb
pop
aas
and
pop
mov
scas
pop
cmp
sahf
xor
clc
pop
add
jg
in
repnz
or
lods
jae
jns
dec
testl
add
push
pmaxsw
ret
cld
cmp
je
adc
scas
push
cltd
repz
push
and
cmp
dec
enter
add
loop
test
mov
cld
mov
leave
sahf
add
add
orl
in
ret
shrl
sarb
xchg
pop
and
sub
push
dec
jns
into
test
idiv
jno
push
push
lcall
mov
mov
inc
fdivs
test
rcrl
sbb
pop
xchg
push
sub
push
or
or
fsts
fists
and
test
and
lock
jno
rol
mov
in
mov
orl
pushf
es
fs
dec
outsl
call
popf
and
dec
mov
cmpsb
sahf
fstl
push
jge
dec
out
mov
popf
lds
mov
fstpt
cwtl
ja
inc
pop
cmpl
sbb
xor
or
test
add
loopne
jmp
lds
and
les
sbb
inc
xor
aaa
fbld
ret
fs
or
lcall
gs
dec
into
lahf
add
add
sub
push
jle
icebp
mov
xor
insb
push
mov
shlb
jmp
sub
daa
stos
enter
push
movsl
scas
out
loopne
and
lods
fisttps
js
jae
push
push
lahf
xlat
xor
jnp
xchg
sbb
mov
and
pop
test
lcall
fwait
outsl
aad
lods
push
xor
shlb
in
push
mov
data16
xor
aam
inc
je
jbe
or
push
jl
adc
xor
in
cli
addr16
repz
sbb
pop
jmp
xchg
inc
dec
cmp
hlt
mov
and
mov
ja
mov
jne
sti
cmp
shrb
mov
pop
push
adc
push
dec
cltd
shl
imulb
stos
push
mov
add
mov
rcrl
or
dec
mov
in
jae
or
ficoms
add
add
mov
inc
inc
add
mov
add
inc
pop
outsl
push
aaa
dec
notl
push
jae
push
jmp
fsubr
mov
aaa
fxam
cld
stc
and
and
rol
pop
inc
lock
mov
popf
lcall
mov
pop
inc
add
in
outsl
cltd
mov
pop
cmpb
daa
jns
cwtl
cmpsl
push
mov
js
mov
xor
sbbb
pusha
test
cmp
or
movsb
cltd
daa
in
mov
leave
insb
xchg
add
push
loope
xchg
adc
mov
mov
inc
cwtl
das
movaps
gs
push
jno
or
xchg
stos
scas
adcl
adc
jbe
jns
jmp
movsl
sub
push
out
adc
sbb
mov
pop
outsl
out
lods
cmp
xor
stos
ret
fdiv
jo
lods
inc
popf
jg
test
mov
add
jge
ret
js
mov
imul
cmp
jne
insl
iret
das
imul
pusha
mov
inc
das
mov
sbb
lds
add
or
sbb
inc
mov
mov
mov
add
dec
std
dec
bound
inc
test
mov
je
loope
loop
cltd
outsl
jg
mov
jno
imul
and
xchg
jecxz
jmp
rorl
test
cmp
jo
and
cltd
fcomip
add
push
scas
mov
xor
or
ja
pop
into
fisubl
xchg
iret
push
sub
mov
mov
cmp
jb
mov
mov
rorb
clc
push
data16
mov
jbe
adc
and
in
mov
mov
rorb
pop
pop
movsl
mov
inc
imul
pop
or
stos
mov
xchg
fidivrs
xchg
sub
inc
ss
cmp
idivl
xchg
add
xchg
inc
lahf
les
leave
ret
imul
mov
push
sub
into
nop
push
cmpsl
jno
inc
es
repz
loope
cmpsl
dec
pop
fsubp
sbb
push
inc
fdivl
push
dec
mov
frstor
add
ret
test
gs
aad
xchg
push
dec
cs
add
push
mov
loop
adc
cmpb
fdivr
or
ret
test
and
or
lret
mov
cmovnp
sub
jg
xor
jbe
icebp
loopne
or
lock
repz
fildl
in
out
jp
loope
sub
adc
jo
push
jns
push
sbb
hlt
pusha
and
jo
sahf
adc
cmpsb
cmpsb
push
iret
push
fidivl
jbe
lock
les
aam
jno
je
pop
xlat
sbb
mov
jl
push
and
lds
es
xor
cmp
je
loope
scas
sub
xor
jae
dec
rorb
dec
inc
mov
pusha
push
sti
scas
leave
or
or
dec
rorl
cmp
sub
push
pop
mov
mov
add
sbb
mov
sbb
mov
add
pop
pop
xchg
add
cld
or
or
jne
xchg
fildl
mov
push
add
and
mov
mov
and
into
enter
stos
mov
outsl
into
mov
push
cs
insb
mov
cli
stos
scas
fucomi
jbe
lahf
cmp
scas
mov
test
stos
add
jge,pn
cltd
pop
xor
mov
in
fidivrs
push
push
mov
mov
shll
scas
push
out
imul
scas
xchg
mov
rclb
sarb
mov
cmp
dec
outsb
push
jmp
popf
std
iret
xchg
mov
roll
repnz
ficompl
out
cmpps
mov
hlt
jno
sub
fldt
lcall
and
mov
js
push
icebp
jg
clc
jb
and
xchg
jg
inc
ret
xchg
in
fs
insl
inc
test
adc
dec
add
add
stos
hlt
jmp
cmp
jbe
rorb
add
add
inc
sub
cwtl
aas
or
dec
mov
test
adc
cs
mov
lret
sub
xchg
cld
out
stos
fimull
push
push
jnp
sbb
xchg
mov
dec
push
fisubrs
mul
pop
outsb
adcl
in
jmp
jns
jno
pop
mov
add
aaa
int
repz
pop
sbbb
xchg
pop
bound
push
add
mov
aas
or
jecxz
hlt
arpl
and
push
repz
hlt
cmp
loope
in
shrb
mov
jmp
mov
sbb
dec
mov
sarb
inc
rcll
add
sub
ljmp
xor
dec
pop
add
xor
push
ds
mov
pop
aas
sbb
xor
insl
fs
inc
add
add
push
nop
out
xlat
out
jg
in
xor
fldpi
cmp
add
add
add
int
outsb
scas
pop
pop
aaa
add
mov
jbe
mov
in
pop
mov
shll
xchg
mov
adc
fisubrl
fstl
shll
xor
inc
les
mov
pusha
dec
xor
sub
mov
xor
fsts
adc
xchg
push
jns
mov
jl
mov
cmp
add
mov
mov
imul
push
rcr
xor
xchg
pop
in
leave
in
jo
popa
incb
fildll
std
iret
jmp
xchg
fcmove
and
sti
pop
sbb
push
mov
inc
cmpsb
gs
out
loopne
jae
mov
icebp
dec
sarl
push
xchg
popf
mov
xchg
fcomps
outsl
jle
testb
cmp
jnp
ret
sahf
dec
or
jle
mov
inc
jg
int3
add
add
mov
inc
fwait
lds
jo
fldl2e
pusha
or
add
add
scas
notl
cmp
adc
cli
or
sahf
out
push
push
xchg
dec
mov
aad
pop
cmpsb
loop
in
mov
mov
mov
int
dec
add
lods
adc
or
outsb
test
mov
dec
std
cli
push
mov
xchg
outsl
cs
insb
frstor
movsb
lods
ljmp
pop
cmpl
xchg
jmp
in
fucom
and
fnsave
jnp
mov
cwtl
test
aam
sarl
icebp
mov
inc
arpl
pop
xorl
jg
xor
or
shlb
shrb
mov
mov
xorl
imul
cmpsl
insb
pop
ljmp
fcoms
mov
sub
mov
in
into
test
repnz
das
push
jno
ljmp
jne
popa
mov
in
call
testb
add
mov
fadds
mulb
add
jecxz
add
xlat
push
ret
pusha
adc
lods
jmp
test
push
shll
sub
cmp
aas
rcl
out
jl
out
pop
subl
out
cmp
pop
lret
iret
ror
movsl
out
enter
lahf
lahf
jb
lock
aas
adc
mov
xchg
shrb
jnp
cmp
lods
ret
adc
nop
sub
fnstsw
jno
cmp
fildll
sahf
xchg
insb
and
in
gs
push
push
fstl
mov
rorb
or
lods
test
pop
nop
mov
ljmp
cs
add
sub
movhps
jo
and
aam
push
popf
jne
hlt
out
addr16
sub
test
inc
sub
jmp
dec
rorb
inc
das
dec
push
sarl
sub
cwtl
sbb
add
push
add
lret
jnp
sti
jmp
push
mov
not
sub
push
sti
test
add
or
out
lock
jo
xor
jl
cmp
popf
push
add
jne
xchg
add
inc
dec
jp
dec
inc
clc
mov
and
xor
mov
inc
nop
pushf
push
hlt
sbbb
sub
push
sub
sub
sbb
sbbl
mov
addr16
sub
imul
inc
aad
hlt
jnp
dec
icebp
rorb
dec
lds
rcl
fsincos
mov
push
pop
push
mul
out
mov
push
xchg
mov
repnz
dec
sub
xchg
push
aam
add
ja
scas
imul
xchg
xchg
pop
fmul
xchg
pushf
xchg
loop
xor
cmp
bswap
jmp
stos
dec
lahf
mov
mov
mov
xor
lahf
sub
push
popf
int3
jns
xchg
insl
iret
lret
lahf
fstl
cmc
addr16
outsb
mov
loopne
sbb
dec
hlt
push
daa
sub
iret
push
neg
sbb
mov
jecxz
lock
fisttpll
stos
add
add
and
out
inc
or
loopne
jo
lods
pop
mov
add
mulb
rcrl
neg
shll
out
orb
xor
dec
repnz
jo
cli
mov
dec
fldt
jecxz
push
dec
sbb
aad
rcrl
push
adc
jb
or
pop
or
pop
jmp
ret
mov
roll
mov
int
cmpsl
loop
testl
push
aaa
iret
ja
adc
jl
jne
fstps
mov
adc
fs
jg
popf
xchg
push
mov
sub
cmp
es
repnz
sub
clc
fs
add
fstl
jle
lods
add
jecxz
mov
hlt
outsl
sub
cs
mov
aaa
jge
pop
push
pop
add
pop
cmpsb
xchg
out
pop
lods
clc
push
sbb
sbb
dec
pushl
xor
cmp
add
add
cld
mov
leave
jle
inc
add
add
add
adc
fs
mov
cltd
lret
sarl
lahf
dec
ds
or
inc
jbe
jmp
outsl
dec
sahf
call
adc
cmc
divl
jb
stc
into
xor
push
insb
xchg
xor
outsb
jl
and
jge
mov
std
mov
fmull
int3
xor
fbstp
jge
fwait
sub
shl
out
jg
xchg
mov
jbe
inc
cmp
popa
xchg
push
loopne
fcoml
popa
mov
mov
fsts
mov
add
scas
out
mov
jg
mov
scas
cmpsl
lea
in
insb
ja
cmp
push
rclb
jge
pop
sbb
jmp
movsl
adc
out
and
push
mov
lret
xor
insl
lods
cltd
je
or
inc
xchg
and
push
jle
push
add
add
out
cmc
mov
clc
xor
or
add
nop
das
pop
or
pusha
dec
jle
fnstcw
mov
lock
pusha
lahf
dec
rcr
push
or
pop
and
and
jae
push
lret
pop
pop
mov
int
in
push
aas
cltd
pop
lods
paddw
aam
lock
adcl
dec
push
cli
xor
dec
inc
pusha
in
iret
mov
inc
ss
pop
js
xor
in
jecxz
jl
push
cld
xor
cmpsl
mov
in
rolb
fisubrl
dec
ljmp
add
mov
push
fidivrl
sahf
push
insl
aad
test
mov
out
and
cmpsb
xchg
pop
xor
scas
repz
jo
jb
lods
cwtl
xor
inc
mov
mov
xor
aam
mulb
sbb
mov
sbb
mov
loopne
jecxz,pt
loop
mov
and
mov
adc
xchg
xor
adc
orb
insb
add
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
aaa
stos
rclb
shrd
add
and
lock
in
xor
sti
imul
pop
xchg
lahf
push
jge
and
jb
jecxz
mov
cmpsb
xor
adc
icebp
or
pop
jbe
adc
pusha
mov
icebp
sbb
cmc
adc
inc
and
and
repnz
mov
rorb
cmpsb
fistpll
std
mov
imul
mov
xchg
data16
dec
jmp
daa
call
fwait
cmpb
jbe
sbb
shlb
rclb
pop
mov
pop
dec
dec
push
or
push
mov
lock
dec
cltd
daa
in
outsb
das
ret
lods
in
xchg
push
jae
mov
mov
ficoml
xor
pop
jg
xchg
sar
cmp
adc
cs
daa
cmpsl
or
imul
and
jg
xchg
inc
dec
movsb
addr16
mov
movsl
into
fdiv
rcl
pushf
cli
mov
add
add
fidivs
loop
ljmp
jecxz
mov
add
push
xor
or
aad
les
jle
addr16
scas
jae
aas
mov
popf
lea
inc
test
sub
fucomp
jne
out
loope
std
or
outsb
and
fwait
add
imul
adc
pop
add
push
incl
jp
inc
and
lods
add
sbb
pop
decb
adc
adc
mov
add
push
neg
jg
fists
lods
mov
pop
push
mov
sub
mov
aad
pop
xchg
inc
test
xlat
lret
or
jg
or
xor
push
dec
decb
psubq
roll
fdivs
lock
adc
cltd
sbb
mov
mov
inc
dec
dec
jnp
push
push
flds
scas
hlt
icebp
jae
push
js
cmp
mov
into
pop
add
inc
test
jbe
arpl
notb
sahf
aaa
ret
add
add
xchg
jg
jmp
std
mov
incl
add
sbb
lods
lea
mov
sbb
mov
dec
mov
mov
xor
and
pop
sub
pop
orb
dec
and
das
stos
scas
jge
jbe
lods
cmp
lods
adc
lahf
dec
inc
roll
icebp
dec
adc
fbld
ucomiss
add
mov
xor
pushw
jp
xor
push
cli
xor
loop
cmpb
jl
xor
mov
pop
jg
mov
arpl
pop
cmp
pop
stc
stc
xchg
add
push
mov
mov
pushf
inc
sub
push
lahf
int
js
loope
sbb
enter
adc
cmp
incl
cld
pop
mov
xor
jge
or
or
mov
sbb
nop
jne
pop
rolb
add
cmp
ljmp
pop
and
aam
mov
pusha
scas
daa
leave
add
add
xor
inc
mov
movsl
xchg
push
mov
add
pop
bound
cmp
dec
aam
push
xor
movl
mov
outsl
xor
mov
jnp
test
pop
ficompl
and
test
scas
cmp
lret
es
cmp
xchg
mov
rcr
ss
jge
pop
sbb
outsl
jl
jle
fcomip
sbb
aam
mov
mov
inc
inc
xchg
fistpll
loope
jns
jae
inc
arpl
jg
idivb
js
mov
jmp
mov
or
data16
fisubrl
xor
add
insb
xor
jecxz
mov
sahf
sbb
cs
repnz
lret
push
xor
jbe
xchg
lea
pop
stc
cld
push
jb
pop
test
sbb
imul
jmp
call
sbb
pop
mov
out
push
sub
cmp
in
sub
sbb
lods
inc
ficoml
in
int3
add
add
xor
cmp
inc
call
fsubs
mov
add
out
out
inc
mov
ljmp
inc
lock
sub
cld
addr16
and
xchg
add
jae
cmpsb
and
pop
cmpsl
fldt
daa
daa
jo
jbe
jl
cmpsl
pop
mov
cwtl
mov
into
daa
or
shl
ds
repnz
xor
dec
add
xchg
mov
les
xchg
cmpsl
ds
lret
das
sub
jp
xor
and
fs
test
and
data16
cmp
sbb
pop
imul
sbb
sbb
sub
fistl
lock
push
fscale
lods
adc
mov
ja
xchg
fstpl
or
pop
cmp
push
in
mov
jno
movsb
in
fistpl
mov
xchg
insl
lds
shll
and
dec
push
push
mov
jg
std
pop
sub
mov
add
add
jp
les
mov
arpl
imul
mov
add
mov
add
xor
insb
insb
mov
jle
mov
gs
outsl
inc
xor
mov
in
sub
xchg
jg
xor
stc
test
jne
lods
ret
fs
rolb
adc
add
aaa
cmc
aad
inc
loop
shlb
mov
jge
daa
sti
fsubs
dec
int
or
ds
out
jle
fldt
cmp
inc
mov
popa
in
cltd
sub
rclb
jle
pop
test
xlat
outsl
je
mov
in
ret
iret
sub
mov
add
xor
nop
inc
sbb
nop
inc
int
arpl
and
inc
jecxz
lods
jg
mov
out
movsb
or
xor
sahf
or
data16
imul
sub
dec
cmp
daa
cmp
fbstp
fdivs
test
and
aas
sarb
ja
popa
pop
jle
add
add
clc
pop
stc
out
push
pop
bound
push
sub
add
add
in
mov
pushf
call
aas
in
inc
js
and
je
cmp
pop
mov
push
cmp
pop
sub
cmp
icebp
lds
mov
sbb
mov
test
pop
sbb
sbb
in
mov
pop
or
xor
add
add
in
out
pop
in
inc
jbe
lods
rorb
xchg
test
mov
push
adcb
cs
push
or
dec
int
inc
mov
mov
mov
aad
sub
out
sbb
in
mov
test
js
xchg
mov
dec
jle
dec
sub
xchg
leave
std
test
dec
jge
xchg
add
cs
pop
xchg
mov
in
xor
pop
xchg
rorl
cmp
sbb
ret
pop
pop
xchg
sbb
mov
pop
mov
mov
lea
sbb
int
add
add
push
mov
lcall
push
xor
add
jbe
shl
or
adc
xchg
movsb
and
xchg
dec
cmp
das
fdivl
andb
mov
xor
es
dec
dec
jle
cmp
and
jmp
sbb
shrl
jae
mov
pop
mov
movb
dec
push
and
sbb
or
jo
sub
andl
clc
or
fistpll
shlb
insb
sbb
fwait
pop
inc
scas
scas
add
add
xlat
sub
sub
sbb
push
rcll
xor
dec
xchg
inc
cmp
repnz
sub
sbb
pop
cmpsb
arpl
push
lock
jbe
rclb
mov
inc
adc
iret
xchg
fisttps
nop
pop
out
push
xor
mov
xor
ljmp
shll
or
cs
enter
pop
popa
test
in
lock
push
pushf
stc
inc
mov
jbe
jecxz
cmp
push
add
add
jne
mov
int3
insb
lret
sbb
add
mov
in
mov
mov
jo
jle
inc
sub
pop
mov
insb
jb
lcall
mov
push
xchg
push
pushf
rolb
sub
adc
dec
push
mov
jb
fwait
loop
xlat
mov
mov
test
jle
sbb
fsubrl
xorb
nop
sbb
push
into
shll
jns
js
mov
inc
pop
mov
jne
pop
dec
repz
pop
pop
mov
mov
pop
subb
sub
add
mov
ss
repz
cmc
add
xor
lods
scas
jae
push
sarl
out
daa
movsb
loope
leave
push
gs
sarl
mov
dec
xor
cmp
pop
mov
mov
xchg
or
pop
js
jge
sub
and
lret
es
add
dec
pop
pop
sbbl
fstp
rorl
loopne
iret
cmp
add
add
jns
fstpt
stos
or
pop
mov
clc
xchg
mov
xchg
leave
xchg
jmp
cmpsl
xor
ror
push
sbb
jp
push
mov
mov
fcoms
insl
rcr
mov
loope
mov
cmpsl
mov
jg
aam
push
adc
or
add
add
cli
dec
ficomps
in
es
mov
pop
mov
int
imul
jno
cmp
and
rsm
fldt
jmp
and
sbb
or
aam
shll
pop
mov
sahf
add
mov
fs
stc
ret
lret
enter
cmc
fnsave
adc
push
mull
in
mov
dec
sbb
sbb
stos
dec
out
xchg
push
adc
inc
in
and
fldt
sbb
fcoms
fnstsw
outsb
xchg
inc
add
lods
add
add
in
mov
jecxz
out
mov
cli
pop
filds
add
add
dec
in
jne
cmp
es
push
jns
aam
hlt
enter
dec
or
dec
loopne
fcmovnb
jl
cmp
dec
es
push
movsw
clc
pop
ljmp
enter
in
ret
dec
pushf
imul
pushf
add
gs
cmp
dec
xchg
jbe
xchg
push
dec
pop
sub
icebp
js
aam
dec
enter
xor
clc
clc
sbb
xor
cmp
fisubrl
sbb
addr16
mov
mov
xor
mov
pop
cli
stc
lret
aas
mov
sbb
sub
and
sbb
mov
rolb
lds
mulb
cmpsb
cmp
scas
or
inc
xchg
sti
insb
fs
in
mov
mov
iret
or
cli
insl
cltd
fldt
stos
mov
loop
and
inc
dec
scas
sti
inc
mov
jle
push
lock
lds
dec
cld
adc
xchg
push
xchg
test
jg
into
lret
orl
add
add
adc
cmp
push
arpl
cmpsb
add
out
ljmp
and
sub
cmp
pushf
jno
out
mov
gs
gs
cs
hlt
or
dec
rcl
cmc
sub
stos
lods
data16
fs
or
lret
sbb
loopew
ja
jnp
aam
dec
fildl
cmp
adc
pop
daa
sub
pop
fs
in
imul
out
cmp
add
jp
push
lahf
rclb
xor
in
loope
xchg
add
out
pop
lea
xorb
jge
ret
add
gs
mov
adc
fldt
out
jg
stos
iret
enter
dec
or
jb
xchg
pop
jmp
push
cwtl
outsl
mov
mov
imul
je
cltd
adc
xor
notl
xor
cli
adc
mov
fs
addr16
push
and
mov
sbb
add
add
adc
in
lcall
jae
dec
mov
jl
icebp
dec
mov
add
inc
das
sbb
xchg
vprotd
loop
or
lret
fldcw
movsb
xchg
imul
lds
insl
jmp
and
mov
adc
lods
or
jp
loope
inc
arpl
jb
imulb
sub
xor
lret
out
shll
mov
dec
scas
arpl
out
enter
dec
fadds
mov
outsb
imul
jb
mov
fisttps
add
and
xchg
jae
pop
scas
push
aam
jge
mov
arpl
fs
pop
les
or
ja
pusha
lock
and
stos
ret
ret
mov
jge
mov
push
jb
add
mov
dec
push
pop
adc
fsubl
fldt
stos
jbe
notl
inc
pop
sub
pop
nop
in
into
js
mov
mov
leave
add
add
sub
jg,pt
dec
arpl
mov
mov
add
cmp
add
insl
clc
add
jno
push
shlb
push
dec
test
xor
xor
xchg
unpcklps
jo
sub
push
push
cmc
xor
pop
xchg
in
int3
fwait
das
sti
mov
pusha
push
lret
std
into
push
xchg
xchg
xlat
xchg
subl
nop
enter
stos
dec
loopne
jle
ret
out
or
in
inc
cs
scas
es
push
mov
fmull
jne
inc
test
mov
imulb
mov
insl
xchg
das
addl
lret
jae
mov
jecxz
sub
pop
cmpsl
dec
sti
mov
inc
or
mov
mov
dec
mov
xchg
sub
scas
push
and
dec
pop
jmp
sub
pop
mov
or
test
popf
int
ds
imul
inc
xchg
addr16
data16
mov
mov
push
js
dec
rcll
add
out
idiv
outsl
mov
into
push
mov
add
pop
movsl
sbb
sub
fcmove
add
inc
rolb
or
cwtl
add
jecxz
stos
test
cmp
cmp
fidivrl
push
div
push
xor
movsl
pop
push
je
mov
orl
push
xor
inc
sbb
fsubs
xor
dec
mov
ds
dec
sbb
aaa
xlat
pop
xor
sub
sbb
cmc
inc
mov
pop
aaa
and
out
loopne
lods
test
add
sahf
sarb
xchg
fimull
dec
push
insb
rorb
sbb
fdivrp
movsb
mov
lret
push
cmc
rorb
mov
inc
xchg
aam
jne
or
mov
mov
cmc
les
cmp
or
out
cld
sub
shrb
cmc
movsl
std
sbb
pop
ljmp
cmpsb
ds
aam
mov
push
mov
clc
iret
ret
pusha
push
test
shl
lds
fwait
cmpsl
mov
pop
pop
insl
sbb
add
add
inc
fbld
mov
pop
add
add
add
loop
int3
adc
repz
lcall
push
test
and
subb
test
ficomps
sub
or
cmp
mov
imull
add
dec
pop
inc
pop
or
sub
lret
mov
movb
and
ljmp
xlat
and
sbb
mov
sbb
mov
test
je
push
xchg
dec
and
sub
out
ss
sub
pop
xchg
or
xor
dec
inc
outsl
or
fmuls
jge
jle
xchg
test
popf
mov
push
dec
xchg
bswap
cs
sbb
call
fdivrl
insl
dec
std
hlt
pushf
add
mov
clc
lret
pop
test
sbb
shll
dec
divb
sahf
mov
adc
pop
xchg
jbe
xchg
aas
repz
pushf
pop
or
dec
add
add
fistpll
call
add
ret
mov
add
sbb
jmp
enter
xchg
and
ljmp
jmp
into
jb
adc
mov
jbe
imul
icebp
in
inc
jb
xchg
cs
mov
xor
frstor
orl
movsb
into
leave
sbb
lods
jns
call
pop
cmovae
fists
push
cmc
mov
call
add
imulb
rcr
cmpsl
sub
lcall
loope
xchg
mov
mov
mov
nop
and
sub
mov
mov
rorb
push
insb
mov
inc
xorl
push
push
lea
imul
mov
movb
add
sbb
xchg
fwait
mov
and
adc
add
out
insb
iret
aam
lcall
sahf
pop
push
adc
jne
stc
xchg
into
cmp
sbbl
je
cwtl
pop
push
or
les
push
add
into
std
sti
leave
sti
iret
jmp
hlt
aas
mov
add
ret
ret
push
pop
lea
cli
mov
adc
rclb
push
pop
out
inc
xor
adc
lcall
bound
push
xchg
lods
pop
push
sbb
ret
jl
pop
xor
lods
xchg
sahf
shr
jg
add
pop
test
and
pusha
fsubrl
enter
lods
sbb
je
sbb
push
out
and
mov
aad
cmc
and
xchg
mov
sub
ud1
sbb
shll
sar
mov
xor
mov
push
sbb
dec
cwtl
mov
sub
inc
stos
or
xorb
jle
out
push
pop
pop
cmpsb
lods
jge
andb
rcr
test
mov
mov
mov
fdivs
cwtl
jl
test
jae
xor
add
in
mov
add
mov
mov
xor
mov
add
xchg
pop
je
adc
jecxz
pop
jmp
mov
sahf
inc
call
jle
mov
jbe,pt
sbb
push
pop
hlt
jle
or
cmp
ficomps
sbb
xor
int
inc
sti
pop
aam
mov
and
mov
pop
adc
test
jno
inc
outsl
nop
fdivrs
pop
gs
jl
pop
add
aas
scas
add
dec
lahf
cmp
sbb
mov
sub
enter
cmc
push
ja
mov
sbb
dec
decb
jbe
daa
xor
je
push
sbb
in
jb
add
icebp
lahf
movsl
stos
stos
bound
inc
cmp
pop
or
incl
push
mov
aaa
mov
mov
leave
mov
repz
aas
adc
and
outsl
imul
into
jp
inc
push
jle
inc
xor
shrl
adc
xchg
pop
jp
jecxz
cli
sbb
add
add
jg
mov
sahf
loop
stos
inc
push
outsb
rolb
add
adc
sub
aas
sub
cmp
sti
push
daa
cltd
xchg
sub
clc
pop
in
imul
popl
stos
int
mov
movsl
aam
xor
or
mov
xchg
sub
int3
mov
or
and
fmull
fstpl
leave
dec
cmpb
rorb
jns
cwtl
cmpsb
fiadds
xchg
out
sbb
pop
jecxz
mov
shlb
adc
jnp
sbb
sbb
rcll
or
adc
aaa
and
scas
pusha
ss
in
clc
stos
lret
jge
aas
jg
or
or
sbb
jle
dec
or
inc
inc
arpl
pusha
call
ret
in
les
push
sub
rcll
xor
scas
jl
arpl
cmp
lcall
cld
push
sbb
mov
xchg
cmp
dec
out
cli
icebp
xchg
popf
push
in
sub
xor
add
xor
push
cld
pushl
cld
sbb
jae
add
add
clc
cmp
push
cmp
mov
lcall
stc
fcomip
mov
push
mov
movsl
jmp
repz
mov
adc
pusha
imulb
cmpsb
fcoml
xchg
mov
push
mov
lock
and
les
add
adc
xchg
xchg
aam
or
jae
repnz
addr16
out
fdivrp
cmp
xchg
lds
jbe
arpl
jg
gs
daa
aad
in
decl
sbb
xor
aas
and
sbb
pushf
cmp
cmp
loopne
mov
mov
pop
int3
add
mov
xchg
mov
add
aad
mull
cltd
jmp
aaa
cmp
fidivrs
loopne
xor
movsb
mov
loop
js
incl
mov
cmp
sub
cmpb
xor
push
enter
cmpsl
sub
imul
and
dec
or
dec
inc
xchg
add
add
pushf
shrb
lcall
and
fistl
ret
add
push
stc
lods
imul
int
push
ljmp
or
mov
xor
loop
not
in
mov
push
and
out
add
data16
inc
add
enter
shll
enter
inc
pop
clc
aas
push
xchg
loope
loope
mov
mov
repz
es
std
sbb
sbb
mov
movsb
xor
les
cmp
popa
sahf
daa
stos
lcall
clc
push
bound
scas
inc
cmp
int
lcall
dec
mov
xchg
rcrb
arpl
popf
lahf
inc
into
loope
sbb
lock
cmp
jge
repnz
add
cld
ds
and
cmp
push
jp
jecxz
sti
scas
mov
repnz
imul
mov
inc
out
out
adc
push
icebp
mov
push
pop
call
scas
in
ds
jae
test
iret
cmpsb
add
add
test
mov
aas
scas
flds
ret
add
add
inc
pop
cmp
or
frstor
mov
xchg
ret
outsl
fdivrl
push
jns
pop
std
mov
pop
clc
out
xchg
into
mov
mov
jg
cmpb
fistpll
nop
fstpt
or
out
sti
sbb
dec
mov
adc
lea
iret
sbbl
iret
xchg
cmpsb
mov
xor
mov
pop
cmp
icebp
imul
lods
mov
scas
push
in
mulb
cli
mov
mov
nop
pop
or
lret
popf
push
ds
add
addb
lea
in
lahf
mov
adc
cmp
push
or
fptan
or
jbe
inc
and
enter
lods
les
sub
lret
xchg
movsl
xchg
imulb
or
xchg
sub
inc
imul
repnz
xor
jle
add
add
jne
jne
jg
loop
mov
dec
add
add
sbb
pusha
ja
push
xchg
pushf
out
sahf
ret
inc
addb
jae
jno
outsb
cltd
scas
insb
test
push
aas
mov
fldcw
out
add
and
jo
sub
or
gs
int
ret
sbb
out
test
test
sbb
int3
cmc
push
repnz
dec
repnz
mov
mov
sub
mov
push
cmp
xor
sbb
dec
clc
subl
repz
shlb
outsl
outsl
adc
lahf
es
and
js
and
pop
pop
jmp
dec
and
mov
sub
mov
aam
jge
ja
jbe
pusha
fsubrp
or
rcl
jle
call
jo
sarl
sub
loop
or
lahf
pop
int
push
stos
jo
in
cmp
xchg
bound
shr
and
popf
enter
jbe
rolb
je
add
sbb
mov
cmc
mov
sub
add
add
xor
pop
mov
aas
mov
xor
das
jl
xchg
cwtl
pop
and
cmp
and
xchg
sub
pop
lock
cmp
lret
add
adc
mov
addr16
addr16
add
lods
jmp
mov
lret
lods
cld
stos
or
cmp
dec
cmp
xor
rclb
dec
insb
jb
lods
into
out
add
sbb
movsl
mov
mov
mov
jne
xor
shll
testl
loop
sub
mov
inc
dec
or
icebp
sub
sarb
jle
sub
mov
into
into
mov
repz
xor
dec
das
les
fistpl
daa
jg
mov
adc
xchg
inc
shl
int
sub
rcrl
mov
cmpsl
into
call
add
outsb
jle
lods
testl
movb
add
mov
fimull
fcmovu
flds
lahf
dec
mov
adc
pop
pushf
out
js
pop
jge
test
cli
outsb
jp
lret
xor
sbb
adc
loope
inc
or
negb
xor
xor
out
ljmp
std
cltd
mov
repnz
fildll
xchg
push
push
sbb
xlat
call
mov
scas
out
jg
cmp
push
inc
adc
data16
stc
repz
into
je
pop
ljmp
and
ljmp
push
aaa
inc
pop
xlat
sub
and
and
xchg
xor
ss
inc
xor
cmpsl
lahf
out
jp
sbb
mov
dec
pushf
sub
push
orl
jle
iret
rol
addr16
sub
mov
fcoms
inc
lods
test
push
rcrb
cmc
and
cltd
das
int3
or
lds
add
add
mov
xchg
insb
and
rolb
add
add
jo
sub
stos
mov
sbb
sbb
cmpsl
jns
pop
pop
push
fiadds
icebp
enter
pop
sti
data16
push
mov
pop
dec
sbb
movsl
or
fimull
inc
lods
iret
clc
push
outsb
or
aaa
pop
shl
and
incl
push
jl
pop
push
and
lcall
insl
shlb
les
or
lds
add
lahf
xchg
outsb
int3
jecxz
mov
sbb
adc
jmp
popa
and
xchg
test
cmp
aam
mov
mov
sub
push
push
es
mov
add
jns
xchg
shrb
imul
push
pusha
cpuid
adc
aas
ljmp
popf
in
bound
idivl
sbb
es
daa
fdivs
out
loop
and
stc
push
mov
scas
push
out
subl
add
out
sti
xlat
in
aad
mov
add
add
stos
xor
mov
outsl
sub
cmc
imul
jne
bound
push
lock
add
ret
mulb
xchg
pop
mov
std
jmp
divl
iret
out
push
aad
dec
fdivs
outsl
pop
sbb
loope
ret
test
xor
mov
jb
xor
push
bound
mov
popa
call
cmp
cmp
outsl
insb
pop
lcall
pop
ja
push
into
cmpb
std
in
les
pop
cmp
xchg
cmp
jnp
ret
in
je
das
test
fmull
mov
push
push
inc
push
fisubrs
jns
loope
cwtl
fdivrs
push
adcb
sbb
xchg
hlt
push
cmp
lods
icebp
insl
add
rolb
push
loop
dec
in
pop
push
imul
aas
push
fs
mov
loope
outsb
push
and
pop
repnz
lcall
add
push
sub
cmp
jg
and
mov
adc
mov
add
sub
imul
and
cld
scas
inc
sbb
adc
sbb
push
hlt
ret
lock
test
mov
adc
daa
jmp
cwtl
shlb
add
pushf
mov
stos
adc
pop
push
dec
xchg
push
mov
or
or
in
inc
loop
mov
xor
and
in
into
sub
test
sub
push
cmp
ja
ret
sub
in
add
jo
aad
inc
daa
pop
leave
push
jg
fwait
ror
arpl
mov
inc
adc
inc
push
popf
in
inc
mov
sarb
inc
jns
subl
and
out
fisttps
je
roll
inc
dec
aas
aad
dec
cmp
into
call
pop
push
addr16
test
and
rcrb
cmpsb
add
cmc
daa
stos
loop
popa
pop
dec
out
push
inc
dec
movsb
insb
jge
out
jle
popa
mov
cmp
add
jmp
ds
repz
fcoms
mov
daa
mov
add
add
pushf
les
adc
sub
xchg
sbb
mov
daa
mov
pop
push
lret
lods
icebp
movlps
les
push
aam
scas
mov
dec
lcall
add
push
xchg
inc
idivl
dec
mov
xchg
mov
sbb
lahf
ss
pop
xchg
mov
stos
pop
dec
xlat
lods
push
adc
jmp
aaa
sti
mov
in
shlb
js
rorl
mov
sub
stc
dec
ljmp
pop
sbb
faddl
scas
aam
lds
dec
pop
ss
jb
xor
addr16
test
jb
inc
cmp
lahf
mov
fistpll
jo
xchg
inc
leave
daa
jne
cwtl
dec
loopne
mov
aad
cmp
jge
pop
fs
cmp
mov
mov
in
bound
dec
ljmp
fs
pop
addr16
popf
xorl
loope
and
add
add
mov
mov
cmc
lods
addb
add
add
mov
jae
leave
mov
xor
loope
mov
xchg
out
xor
insb
mov
xor
xor
inc
inc
cmp
dec
xor
repnz
inc
pop
ret
push
lods
xchg
aaa
pop
mov
stos
into
mov
sbb
xchg
xchg
pop
sbb
addb
dec
lret
iret
shlb
add
out
or
ds
sbb
cmpsb
push
lds
inc
ror
idivl
mov
shll
sub
lds
dec
cwtl
xchg
js
fstl
lds
nop
mov
enter
fwait
push
and
xor
cli
adc
mov
xchg
imul
jae
jns
adc
mov
fadd
in
xchg
mov
subl
shll
adc
dec
or
shll
mov
xor
mov
jne
dec
aam
adc
dec
xor
add
stc
enter
in
sbb
push
inc
cmp
add
add
jb
push
xor
mov
lods
sub
jnp
push
sbb
aaa
or
pop
mov
adc
les
loopne
add
or
ja
repnz
iret
call
cs
mov
ljmp
aaa
out
adc
and
movsb
mov
sub
or
out
scas
mov
ffree
ret
pop
xchg
xor
jge
xchg
fs
inc
and
push
adc
test
jmp
dec
cmpsl
out
sub
out
pop
out
adc
xlat
aaa
jbe
int
and
mov
das
data16
out
mov
lock
js
mov
cmp
mov
adc
repnz
push
test
pop
fcomps
je
pop
jg
cmp
dec
cli
pusha
fdivrs
lret
cmc
inc
js
sub
dec
stos
push
push
lret
xchg
cmp
loope
sbb
fs
cmpsl
insl
aam
add
jne
imul
cmc
call
inc
push
popa
xor
adc
scas
int
add
jno
jbe
lods
xor
call
cmpsb
ljmp
or
xchg
movsl
jg
je
loopne
and
push
pop
pop
push
mov
repz
aaa
mov
loope
inc
or
cmp
adc
lds
mov
pop
ljmp
nop
fwait
xor
mov
push
arpl
lahf
sub
enter
sarb
mov
aad
inc
mov
xchg
pop
adc
je
arpl
mov
arpl
pop
lods
push
hlt
mov
stos
mov
scas
lahf
and
sub
pop
cmpsb
rcll
cmp
addl
int
push
adc
cmp
mov
pop
cld
xchg
addl
cmc
cld
push
xchg
xchg
xlat
inc
cmpsl
dec
xorb
call
dec
mov
dec
fidivs
and
inc
std
je
push
stos
mov
in
add
add
ja
iret
sub
fs
add
adc
fnstcw
femms
andb
and
add
cmp
lret
xlat
or
ja
and
in
sti
rcrl
jns
mov
in
pop
sub
movhps
adcb
mov
dec
ret
ror
add
mov
adc
pop
cli
mov
mov
outsl
popa
mov
pop
mov
jp
movsl
jl
mov
xlat
mov
sub
push
les
cmp
in
scas
ljmp
or
cmp
lcall
xor
stos
sbb
cltd
jnp
cwtl
pushw
mov
pop
push
inc
xor
xchg
shrl
mov
push
cmp
mov
js
cmp
mov
jae
pop
pop
sub
pop
mov
inc
lods
dec
mov
das
stos
push
repnz
fs
es
rclb
sbb
add
add
out
into
gs
cld
test
imul
add
add
jl
inc
out
add
push
outsb
and
insb
mov
inc
mov
int3
mov
cld
push
inc
ds
cmp
test
or
lock
inc
test
sbb
insb
in
cli
adc
cld
mov
jmp
call
push
mov
loop
fnstenv
mov
jg
aas
dec
jge
in
fisubrs
jnp
cmpsl
xlat
inc
xchg
and
imul
icebp
add
fiadds
fs
test
jge
mov
std
fs
loopne
pop
and
inc
sub
out
sbb
sub
xor
inc
adc
mov
dec
and
stos
mov
pop
pop
xchg
loop
pop
push
ds
pushf
push
sbb
mov
in
clc
xchg
les
cmp
test
repz
fcoml
jae
or
mov
mov
sbbl
add
xchg
and
je
out
mov
jmp
jno
mov
add
add
ja
mov
adc
sub
dec
pushf
cmpsl
ljmp
mov
cmp
jmp
mov
lea
ficomps
rcrb
fptan
test
out
xchg
jg
jge,pn
cmp
or
popa
gs
lcall
out
jl
mov
mov
popf
fidivrl
sbb
outsb
aas
int3
dec
scas
adcb
sbb
push
shlb
adc
jle,pn
cmp
push
sbb
int3
js
movsl
sub
adcl
pop
inc
xchg
mov
sti
iret
clc
sti
push
jge
leave
call
shl
test
jp
lods
fs
sub
mov
adc
sbb
idiv
es
in
sahf
add
pop
add
das
lret
cmp
jmp
or
push
fldl
ss
jmp
jecxz
orl
sbb
mov
adc
sahf
imul
dec
pop
fiaddl
mov
push
and
add
add
dec
daa
dec
das
outsb
imul
push
xchg
sub
lret
cmp
roll
add
mov
mov
insb
jno
xchg
out
jp
pop
shll
add
add
arpl
lods
movsb
add
inc
shr
call
adcl
dec
mov
je
push
xor
mov
cmp
iret
mov
push
lock
pop
jnp
sub
mov
jg
mov
rol
mov
stos
popf
mov
cmp
lret
push
fldl
mov
dec
xchg
call
adc
push
and
pop
outsb
sub
mov
lahf
pop
pop
or
cs
dec
mov
mov
lea
cmpsb
cld
cli
sub
das
cli
cmp
dec
mov
push
scas
lods
mov
cwtl
shll
fcompl
add
jno
pop
dec
jecxz
dec
js
mov
jmp
adc
outsl
sub
mov
sub
xor
fisubs
sub
daa
pop
jae
sub
pop
ret
adc
xchg
add
add
popf
mov
lahf
ret
or
pushf
xchg
or
rolb
add
xchg
sub
bound
mov
mov
cmc
xchg
mov
outsb
inc
addr16
mov
ja
push
aad
sbb
lock
sub
insl
mov
lahf
loopne
mov
cltd
sub
insb
cmp
mov
jo
xor
scas
ja
jns
add
fnstcw
enter
aam
call
rorl
sbb
imul
iret
shll
sarl
and
jg
inc
mov
dec
mulb
in
add
cmp
xchg
mov
rcrl
rorl
pop
mov
insb
or
add
mov
jnp
sbb
mov
and
imul
icebp
lea
xchg
jb
loopne
int
mov
mov
jmp
add
mov
push
pop
mov
mov
or
adc
xor
xchg
ret
pop
pop
into
dec
loope
jo
arpl
add
mov
mov
mov
pop
xchg
or
jecxz
sub
add
inc
fwait
stos
pop
adc
lods
sub
and
or
fnstsw
ret
fcoms
into
sbb
sahf
mov
add
push
xchg
jae
xchg
int3
or
lcall
shlb
decb
sub
repnz
push
sub
pop
cmp
aas
shrl
xchg
adc
cmpsb
cmp
in
pusha
push
bound
or
ret
push
fcmovb
lods
jmp
mov
jae
push
out
pusha
test
dec
out
mov
testb
jmp
stos
xchg
mov
imul
pop
sbbb
outsb
xor
dec
lds
pop
push
cmpsb
loopne
cltd
dec
push
sbb
jbe
orb
xor
jne
sbb
mov
movsb
scas
xlat
jmp
nop
xor
xor
cmp
or
aad
jnp
cmp
pop
xorb
sub
sub
xchg
in
xchg
loope
daa
inc
sub
xchg
adc
sub
mov
mov
add
add
add
sbb
sub
dec
jb
sub
rcl
add
add
jno
out
ret
les
and
or
das
cltd
jl
xor
enter
and
jno
aaa
cltd
ds
lock
clc
push
mov
imul
jae
xchg
movsb
inc
jge
popa
fcoml
xor
mov
mov
mov
daa
pop
add
dec
add
push
pop
cmc
jnp
cwtl
push
cmp
jp
push
adc
jge
lods
rcr
mov
fcomps
pop
or
shlb
mov
mov
aaa
xor
cmpsb
out
arpl
pop
cmp
repz
sub
xchg
test
and
add
aam
inc
ret
sbb
mov
movsl
test
sub
mov
cmpxchg8b
mov
sub
mov
mov
leave
pop
mov
push
jae
fcomi
jp
lods
inc
or
ljmp
xor
nop
into
cld
bound
mov
pushf
adc
ds
jae
sub
add
and
fcompl
add
pop
int
ret
inc
push
sub
push
lret
xchg
cs
daa
les
push
xor
stos
add
jle
mov
jo
inc
pop
lea
jb
xor
loope
xor
pop
nop
out
fiadds
cltd
adc
idiv
fstpt
mov
cmp
sahf
aaa
stos
jo
shll
cwtl
cmp
dec
xchg
dec
mov
mov
in
mov
xorl
outsb
push
push
icebp
lods
lea
jmp
xchg
inc
andb
jmp
fcoms
movsb
push
stc
cmp
xchg
sbb
jmp
cld
int3
test
or
scas
mov
pushf
jle
mov
and
dec
adc
pop
fwait
push
pop
push
mov
iret
dec
std
jmp
mov
cwtl
mov
sbb
jb
pusha
sbb
jno
nop
dec
lock
out
add
sub
ffree
ss
sahf
notl
add
add
xchg
and
idiv
lahf
insl
mov
dec
enter
add
add
clc
cli
pop
inc
adc
leave
pusha
sbb
hlt
dec
test
sbb
cs
dec
add
add
pop
cmp
je
ja
orl
dec
pop
push
adc
repz
test
xor
ds
xor
mov
adc
cmp
scas
jo
lds
ja
scas
xorl
jae
ljmp
iret
and
nop
neg
jp
es
mov
movsl
pusha
test
js
sbb
jnp
xor
jl
push
mov
aam
jo
adc
mov
jns
inc
mov
mov
out
imul
sub
push
in
lds
inc
sbb
imul
pop
sub
or
push
dec
sub
adc
loop
xchg
lock
imull
rorb
inc
add
push
lea
stos
testb
and
hlt
daa
mov
out
add
add
xchg
ja
push
jg
leave
or
dec
repz
loope
add
add
adc
ljmp
dec
daa
nop
out
add
xchg
imul
cmpb
sub
jle
jno
lock
sarl
js
jg
int
ret
dec
insl
mov
out
push
cwtl
pop
ja
dec
inc
fldcw
dec
add
nop
movsb
cltd
int3
cmpsb
orb
cmpsb
xchg
mov
das
imull
shll
and
xchg
or
xor
sbb
push
xchg
jl
inc
fidivrl
ss
sbb
dec
fmuls
bound
rclb
stos
xchg
ret
test
test
jge
xchg
std
sbb
mov
in
xor
push
dec
fmuls
mov
fidivl
test
lea
push
cmp
pop
out
push
insb
lods
stos
cmc
popf
pop
in
imul
dec
mov
and
jle
jne
arpl
add
add
int
out
out
imul
nop
xchg
movsb
push
in
jb
fadds
add
lods
jb
jbe
clc
sub
in
cld
lret
and
in
push
fsubrs
rcrl
lahf
loope
sub
and
test
gs
lret
adcl
xor
adc
dec
xorb
pop
push
xor
iret
mov
lret
imul
push
pushw
push
mov
xchg
xchg
inc
popf
pushf
sub
fmull
fdivp
add
adc
je
pop
sbb
int
inc
cli
hlt
and
or
push
insb
mov
push
fs
mov
mov
cmpsb
pop
rcr
popf
icebp
ljmp
cmpsl
sub
xor
xor
insb
push
and
insb
mov
adc
jmp
jge
push
bound
mov
add
dec
or
jmp
loop
mov
jnp
sub
cld
and
cmp
ss
inc
xchg
jp
add
add
psubusw
push
in
sub
in
flds
add
insb
movsl
push
and
loopne
andl
add
fldt
cmp
lea
and
repnz
adc
jge
lea
inc
or
lret
aad
scas
mov
adcl
jp
push
xchg
cs
repz
aam
loope
add
into
inc
gs
sbb
movsb
scas
imul
add
push
xchg
popf
movsl
mov
nop
fsubrl
mov
arpl
jo
jo
ret
jo
scas
xchg
mov
add
std
loop
push
pop
jle
xchg
adc
pop
xchg
mov
inc
test
mov
cmp
dec
push
mov
sub
inc
mov
xor
loop
je
lret
fists
pop
clc
ss
push
add
pop
int
push
stos
fbld
imul
cmp
sbb
mov
xor
lods
incb
outsb
flds
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
icebp
add
fiaddl
add
or
jae
hlt
in
lcall
sbb
cmpsb
add
rcl
lcall
mov
mov
repnz
enter
imul
mov
mov
or
or
fistl
leave
jo
pop
sbb
gs
mov
scas
pop
cmp
dec
jg
jb
push
pop
pop
test
mov
and
sbb
mov
or
fstl
mov
out
add
lock
out
mov
mov
jle
xchg
push
mov
arpl
inc
add
dec
mov
hlt
mov
outsl
xlat
cli
xchg
jl
push
ret
and
cmp
adc
push
imul
fisubs
fiaddl
and
cmp
rolb
mov
testl
adc
cmc
xchg
imul
lods
arpl
mov
add
pop
dec
jle
jg
std
fstpt
movsb
inc
xlat
cmc
fildl
add
jecxz
out
imul
mov
or
and
lock
mov
int
clc
sbb
out
iret
mov
or
aam
xchg
xlat
mov
aas
stos
pushf
push
sahf
or
add
sbb
mov
adcb
push
movsl
xor
int
mov
mov
cwtl
sbbl
mov
movsb
push
inc
or
sub
dec
pop
dec
call
mov
jo
and
push
test
in
inc
sti
fimull
enter
adc
mov
out
fdivrs
sub
jl
xor
mov
ljmp
and
pop
repz
out
sub
mov
es
lea
inc
test
ja
jg
es
hlt
sar
dec
sub
add
fldenv
sbb
cli
mov
or
jle
or
jp
add
add
cmp
ljmp
sub
sub
cli
faddl
add
lock
call
pop
icebp
ja
subb
rcrl
nop
push
out
es
movsb
test
sbb
adc
mov
fcoms
lock
xchg
xchg
push
fadd
aaa
sub
das
enter
mov
dec
mov
outsb
mov
jae
mov
mov
add
dec
ss
mov
out
sbb
push
adc
inc
push
scas
xchg
xchg
es
sti
adc
cltd
lahf
xor
adc
pop
mov
sbb
lods
push
idivb
jno
hlt
repz
and
jle
sbbl
insl
out
divb
fmuls
cmp
movsb
lds
or
pop
adc
cltd
cltd
dec
stos
stc
movsl
and
xor
dec
xlat
push
pusha
xchg
arpl
push
int
xchg
in
das
int3
mov
in
pop
push
xor
mov
inc
mov
insb
push
sub
les
nop
in
add
adc
leave
jmp
scas
inc
call
fldl
add
imul
xchg
jge,pn
ficomps
pusha
test
mov
in
sahf
outsb
mov
flds
push
sbb
fwait
or
test
push
movsl
add
pop
scas
movsl
stos
pop
or
jb
xchg
jno
and
dec
pop
sbb
jg
and
mov
xchg
jns
cmp
sub
insb
cli
fcmove
push
cwtl
shlb
sub
addl
sub
sahf
movsl
pop
aas
xchg
cwtl
bound
lock
xchg
lea
mov
sbb
mov
sbb
arpl
jle
stc
mov
rdpmc
outsb
int3
mov
ss
add
cmc
fnsave
sbb
aaa
or
xchg
fsubp
loop
jbe
adc
xchg
xchg
xchg
sbb
es
mov
sbb
mov
leave
inc
sahf
out
andl
add
push
out
faddl
sahf
pop
add
add
add
xchg
daa
addr16
sbb
cmp
leave
mov
jmp
mov
push
out
in
fistpll
sub
mov
xor
call
mov
int
sub
bound
aaa
or
rcll
fsubl
and
pop
subl
mov
ljmp
loop
ja
daa
ficoml
dec
mov
test
push
jbe
sbb
adc
mov
add
loop
jl
stos
cwtl
mov
or
adc
popa
sbb
test
dec
cmpl
iret
xorb
popa
sbb
push
addl
int
pop
lods
pusha
lods
arpl
jp
dec
popf
lds
popf
adc
xor
push
dec
mov
addb
in
je
or
sub
mov
std
repnz
xor
das
nop
mov
test
out
jp
mov
mov
fstpt
add
jg
mov
lcall
fisttps
or
or
add
add
int3
cmp
inc
movsl
clc
adc
push
cwtl
xchg
jno
xlat
outsb
xorb
sbbb
and
outsb
cs
lret
shll
into
cmp
pop
leave
ljmp
je
and
repz
sbb
aas
and
aaa
loop
cli
xchg
pop
iret
out
push
and
mov
cmp
adc
inc
xchg
cltd
jg
lret
stc
lcall
or
jbe
scas
xor
in
sub
push
lret
cmc
outsb
sarl
movsb
and
mov
clc
mov
das
mov
outsb
jae
inc
hlt
sub
add
inc
jbe
shl
pop
scas
jno
xchg
push
push
xor
lock
daa
ds
ljmp
stos
loope
cs
stos
mov
inc
jae
sub
xor
test
lret
pop
ja
and
xchg
mov
cwtl
cmp
dec
ljmp
sbb
jns
xchg
xchg
mov
mov
push
loope
add
js
imul
push
and
mov
mov
jp
lahf
int3
jmp
test
mov
outsb
inc
rolb
jp
sti
sahf
pop
push
in
xor
ret
or
push
or
push
sbb
pop
loop
sub
xor
fwait
mov
sbb
ds
mov
push
cwtl
sti
insb
adc
repnz
in
push
pushf
xchg
and
out
xchg
sub
push
push
std
mov
fwait
ds
mov
mov
mov
mov
xlat
mov
cli
pop
push
cwtl
jno
and
insl
push
aas
inc
cli
jmp
gs
mov
std
rorb
test
lahf
sahf
add
out
cli
scas
add
test
mov
pop
mov
xor
insl
fwait
pop
push
fdivr
dec
iret
pop
jno
adc
jnp
pop
mov
iret
sub
imul
jae
fadd
fsubp
jnp
or
cld
stc
stc
or
adc
add
add
outsb
es
mov
mov
testl
sbb
lock
js
adc
ds
leave
push
std
sbb
jnp
sbb
arpl
gs
sub
dec
sub
adc
stos
xchg
popf
mov
mov
data16
and
mov
lods
gs
inc
es
pop
pop
mov
aaa
sub
add
ret
lret
dec
mov
xchg
int
lcall
cltd
mov
lods
js
cmp
cmpsl
mov
or
stc
roll
sbb
inc
inc
inc
dec
push
ja
rcll
cmpsb
mov
pop
jmp
inc
xchg
dec
adc
negb
fistpll
in
test
sbb
ss
mov
xchg
daa
mov
sti
stos
mov
mov
mov
or
sbb
mov
fdivs
lret
fadd
cmp
fmul
mov
andl
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
jecxz
add
dec
sbb
add
or
add
and
das
mov
das
mov
jb
mov
add
jno
mov
mov
pushf
pop
xchg
popa
dec
inc
adc
je
jno
cmpsl
jg
loop
ret
and
push
dec
mov
mov
gs
pop
jg
in
push
repz
fstpl
cmpsb
push
shlb
stos
mov
pop
imul
test
mov
inc
and
pop
out
mov
stos
cli
cmp
shll
or
mov
pop
and
sbb
ja
xchg
xchg
int
xchg
out
jecxz
test
inc
cmc
xlat
mov
mov
lea
jl
mov
ret
sbb
icebp
ds
fwait
pop
repz
adcl
in
sub
xor
push
dec
hlt
adc
push
lods
xor
jb
pushf
and
xor
or
jnp
and
xor
add
jbe
add
lea
pop
jbe
ja
sti
aaa
out
ja
jecxz
inc
sbb
add
add
dec
sbb
fbld
fcompl
stos
and
movsb
adcl
mov
adc
and
rcr
fsubr
fimuls
adc
jb
jmp
nop
bnd
cmp
pop
aad
pop
cmp
push
cmpsb
mov
movsl
stos
mov
mov
repnz
popf
cmp
dec
fwait
and
dec
mov
in
or
mov
les
push
repnz
icebp
lret
sbb
fstpl
jge
enter
mov
loope
mov
cmp
ror
mov
and
ret
test
jge
test
or
pop
test
lds
xchg
enter
dec
fmuls
pop
mov
inc
rorb
test
hlt
lret
mov
add
clc
mov
adc
jno
and
dec
xchg
test
mov
pop
pusha
or
jns
sub
add
add
into
arpl
pop
xchg
aaa
pushf
repnz
inc
das
and
add
add
mov
jns
movl
pop
xchg
sub
int3
mov
xor
lock
mov
push
mov
pushf
stos
inc
mov
mov
insb
insl
fadds
ds
push
jb
rorl
ja
and
or
or
stos
cmp
mov
call
push
push
movsb
sbb
jne
inc
xor
mov
xchg
and
push
sbb
inc
sbb
ljmp
mov
mov
iret
fs
arpl
pop
jbe
inc
std
inc
push
xchg
adc
mov
jmp
cmc
lret
jle
adc
daa
lds
fbstp
push
and
fisubs
adc
stos
lret
adc
imul
leave
xor
movsl
add
aam
and
pop
xchg
pop
jbe
push
outsb
lret
push
mov
test
insl
es
jecxz
in
jle
mov
add
cltd
cmc
adcb
fcos
pop
mov
enter
add
or
test
xchg
cli
jg
int3
movsl
xor
xchg
data16
dec
out
cmp
fcmovne
push
test
in
sti
popf
push
xchg
lahf
and
jecxz
in
fldl
fs
xlat
and
pop
mov
pop
femms
call
mov
xor
xlat
and
icebp
sti
inc
adc
add
xor
add
pop
sub
xchg
arpl
les
or
ss
fadds
xchg
pop
xchg
fisubrs
mov
jo
mov
mov
sbb
or
push
outsb
gs
fiadds
pop
mov
pushf
pop
ret
rorb
outsl
fwait
mov
pop
push
ds
mov
mov
dec
and
push
adc
cli
shr
pusha
into
fidivs
push
sbb
add
lock
ret
aad
xor
sbb
or
or
push
fbstp
push
test
fisttps
mov
arpl
out
jne
xor
stc
add
add
add
lock
jg
in
and
push
adc
add
adc
test
insb
shll
stc
xor
sub
test
mov
xchg
popf
nop
jl
call
mov
xor
cmp
jnp
and
rcl
add
fwait
into
or
jb
clc
es
test
test
out
scas
fnstsw
xor
mov
es
in
in
mov
jecxz
mov
push
dec
mul
in
inc
xor
ljmp
cltd
dec
jne
inc
jle
pushf
jp
push
int3
mov
idiv
les
aas
dec
mov
insb
cmpsl
bnd
hlt
add
adcl
incb
cmp
mov
scas
xor
fs
mov
pushf
push
sti
mov
xchg
int3
ja
mov
xchg
mov
cmc
test
sbb
push
or
stc
popf
inc
push
cmp
cmp
shll
jo
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
pop
and
call
add
push
sbb
sbb
aam
push
mov
inc
out
inc
lcall
stos
insb
cmp
dec
jmp
dec
je
les
insl
bound
cmp
fsubrs
js
push
rol
or
jno
mov
cmc
cmp
loopne
mov
lods
je
ds
rcl
stc
addr16
dec
rclb
and
add
adc
jno
sbb
pxor
inc
cmp
inc
je
sbb
inc
xchg
imul
cmp
divb
frstor
mov
jecxz
add
fst
push
xchg
fldcw
int
mov
jmp
loopne
fcmovbe
xor
mov
mov
dec
add
je
xorl
aaa
pop
xchg
inc
inc
and
push
aam
mov
add
gs
cltd
xchg
mov
cmpsb
dec
jp
push
cmp
sub
stos
or
jl
dec
loope
inc
xchg
add
add
mov
dec
js
stc
mov
dec
int
repz
mov
jmp
add
mov
or
repz
repnz
inc
bound
push
cmc
mov
js
xor
es
inc
mov
cs
decl
inc
pop
jo
test
mov
aad
fiadds
jg
movsl
fsts
call
mov
jmp
ljmp
push
cltd
fstpt
shr
mov
hlt
pop
in
sbb
mov
lea
mov
nop
push
sbb
mov
sbb
lods
orb
mov
sbb
cmp
xchg
out
addr16
and
adc
xor
xor
fwait
ss
mov
inc
xchg
jecxz
or
sbb
popf
lea
mov
fnstsw
xlat
jecxz
push
push
pushf
movsl
mov
lds
imul
sub
push
mov
inc
cmpsl
std
push
aaa
xor
out
fadd
popa
inc
dec
push
and
sbb
add
add
insl
repz
fwait
jns
jns
cmp
add
push
fwait
dec
push
jns
loop
dec
mov
xor
out
sub
jbe
xor
and
les
xchg
lods
lcall
int3
add
adc
test
sbb
xchg
out
xor
sub
sbb
sbb
add
dec
scas
shl
cmpl
push
subl
push
lret
xor
sub
js
mov
out
icebp
test
xchg
lds
and
mov
fimuls
sbb
pop
andb
adc
mov
jae
in
jle
std
divb
fsub
incl
pushf
andb
les
test
sub
fists
add
ffreep
or
mov
adc
repz
pop
xchg
fcomip
es
and
xchg
inc
pop
xor
idivb
lds
test
aas
push
jl
lret
mov
int3
jnp
adc
or
aam
aas
loop
add
sarb
add
add
mov
pxor
jnp
adc
jne
sbb
cli
pop
inc
jmp
add
test
pushf
popa
mov
rorb
pushf
push
mov
jns
mov
mov
adc
imull
xchg
fistpl
mov
aaa
mov
push
shl
mov
add
push
rcrb
mov
or
jb
inc
sub
mov
mov
lret
repnz
mov
fmull
mov
icebp
mov
sbb
mov
into
rcrb
xor
subb
mov
xchg
or
mov
lcall
mov
stos
mov
or
jp
mov
adcb
mov
jmp
movsb
call
movsb
jae
xchg
sbb
lcall
cwtl
add
stos
in
pop
mov
pusha
push
push
nop
jecxz
out
xor
daa
into
lock
test
sbb
or
jl
insb
pop
mov
lds
add
add
subb
fistl
das
xor
das
inc
in
add
add
out
xor
iretw
cmp
inc
outsb
or
xor
push
mov
mov
cmp
mov
xchg
mov
sbb
xchg
popa
mul
xchg
mov
add
pushf
mov
push
cmp
jle
lods
pop
jecxz
mov
fisttpl
mov
jecxz
or
in
aad
bound
inc
daa
arpl
pop
dec
ljmp
jbe
div
pop
mov
leave
ret
and
lahf
loopne
add
xlat
fwait
incl
sub
movsl
xchg
xchg
fdivs
xor
push
int3
fisubl
add
jmp
xchg
pop
inc
xor
lods
mov
jb
pop
push
dec
int3
jecxz
enter
push
mov
xchg
inc
fadd
popf
adc
dec
scas
addl
outsl
pop
js
adc
fcompl
jne
dec
lds
push
push
add
xor
xor
loop
push
add
add
jb
scas
decb
fisttps
xor
add
leave
inc
lcall
rcll
jmp
call
cld
inc
loop
mov
mov
jmp
hlt
mov
lea
dec
nop
aas
lods
test
sub
push
js
jbe
pop
stos
ret
aam
mov
movl
jge
cmp
or
nop
fcmovne
inc
pop
sbb
push
sarl
mov
jb
shll
pop
ss
aam
cld
icebp
mov
xchg
xchg
and
cwtl
pop
push
repnz
fsubrs
loop
mov
out
cmc
insl
pop
push
mov
and
cltd
mov
imul
insb
and
and
xchg
sub
ss
jecxz
call
cmp
popf
out
dec
xchg
loop
dec
insb
and
sub
aad
stos
popf
xor
les
push
cltd
sub
stos
scas
pop
cwtl
fmulp
lahf
mov
mov
xchg
jae
orl
mov
pop
xchg
jmp
push
or
dec
movsb
jns
inc
or
jb
add
add
mov
xlat
mov
xchg
int
imul
add
icebp
push
add
dec
add
pop
in
push
aad
push
jecxz
xor
jl
push
jg
push
cmpsl
mov
in
test
loop
in
adc
ret
dec
push
pop
shlb
addr16
shlb
inc
mov
jo
cli
sarl
dec
xchg
test
adcb
dec
je
out
mov
rcl
sub
gs
fwait
gs
loop
cltd
shl
lea
cwtl
sub
fwait
adc
in
add
fsub
xor
mov
sbb
out
and
sub
push
fwait
fs
lds
xchg
dec
mov
or
sub
fisubs
fdiv
xchg
fidivrl
sub
mov
loope
gs
leave
call
movl
js
mov
inc
nop
jae,pn
adc
sbb
push
lds
xchg
rcrl
jg
ret
sub
icebp
in
ja
sbb
popa
daa
pop
shlb
cmp
add
lods
cmp
lods
aas
mov
xor
adcb
add
pop
jp
roll
pop
dec
adc
les
out
aad
std
mov
lahf
pop
outsb
pop
mov
push
lcall
xor
push
xchg
pusha
sub
in
outsl
sub
rorl
inc
jno
fimull
dec
mulb
inc
mov
int
sub
cmp
xor
les
shr
mov
fimuls
loopne
push
jg
sbb
movsl
fnstcw
pop
xchg
cmp
shrb
hlt
jl
pop
test
jne
push
out
push
rclb
lods
xchg
adc
dec
stos
xor
inc
mov
dec
cmp
loope
push
push
xlat
mov
orb
cwtl
pusha
mov
dec
sahf
sbb
inc
mov
hlt
sbbb
popf
fdiv
gs
dec
cmc
outsl
cmpsl
fiaddl
push
sbb
push
add
inc
or
lahf
inc
out
test
test
add
loop
fadd
sti
mov
inc
adc
clc
pop
lock
add
dec
jmp
mov
mov
test
es
fwait
push
aam
and
cmpsb
inc
ret
cmpb
inc
push
mov
sbbb
or
sub
imul
mov
xchg
rorb
pop
mov
mov
or
xor
cmpsb
shll
iret
cld
xor
and
sub
fcomp
or
in
push
fs
xor
call
in
sarb
adc
jne
lret
shrb
fidivl
jge
loopne
push
in
bound
dec
or
sbb
psubusw
jmp
or
es
mov
int
hlt
rcrl
push
and
mov
testl
pop
mov
outsb
add
enter
and
inc
imul
add
mov
cltd
pop
out
fcmovnb
aaa
orb
push
cmp
adc
neg
jge
xchg
jns
xchg
rcrl
add
add
mov
xlat
leave
xchg
ds
cltd
and
das
mov
nop
xlat
xor
fisubs
mov
cmp
imul
cmp
aaa
jecxz
mov
stc
mov
cld
sub
and
mov
or
iret
sbb
inc
rolb
or
cmpsl
jle
inc
bound
popf
fadds
jle
mov
outsl
add
leave
int
lcall
mov
test
rcrl
aam
mul
ja
ss
shl
in
xchg
mov
mov
push
stos
mov
jns
dec
out
pop
ljmp
cmp
push
ds
movsb
xchg
inc
hlt
fnstsw
stos
dec
push
andb
fisubrl
je
sti
outsl
lods
sub
sub
leave
xchg
je
cmp
or
cmp
jns
repnz
fwait
inc
enter
scas
pop
orl
cmpsl
xor
mov
and
scas
mov
pushf
mov
in
add
add
dec
sub
sub
fidivrl
pop
std
push
arpl
add
add
jae
pop
daa
push
aam
mov
es
pop
adc
je
imul
cwtl
imul
add
xorl
repz
inc
mov
jl
std
stos
iret
iret
mov
scas
sbb
mov
or
xor
mov
insl
xor
and
dec
adcl
addr16
xor
mov
and
test
jmp
push
andb
lods
sti
mov
cld
jno
loop
into
insb
addl
sti
or
ss
pop
xor
outsb
xchg
cmp
cli
adc
pop
xchg
push
cs
in
cmpb
lret
push
push
xchg
inc
add
or
out
push
push
inc
ja
pop
into
push
aam
jo
or
sub
testl
aas
pop
enter
adc
add
xor
adc
sarb
add
add
ja
and
aaa
divl
aad
mov
repz
add
cmp
daa
nop
add
mov
jnp
enter
popa
push
or
mov
aas
rcl
fistps
add
add
dec
jmp
add
dec
aam
sub
sub
push
loop
stc
ret
call
fadd
jb
and
fisubs
cmp
xor
lds
mov
xchg
std
adc
in
lret
mulb
int3
fwait
test
sar
push
push
cmp
out
mov
scas
cmp
mov
pop
add
leave
pop
iret
out
sbb
in
imull
adc
sub
dec
mov
sbb
call
leave
jg
mov
pop
dec
ret
loope
into
movsl
ds
decl
mulb
shlb
iret
out
xorl
push
inc
add
fistpl
jno
outsl
incl
sub
dec
aad
and
stc
adc
xchg
inc
cmp
add
add
mov
cmc
mov
mov
inc
push
insl
hlt
add
add
popf
fisttps
bts
test
iret
enter
sti
sbb
orl
int3
bound
xchg
sbb
nop
ficoml
mov
lret
fists
cmc
mov
repnz
and
sub
or
xchg
xchg
icebp
lock
shll
and
adc
addr16
and
arpl
daa
cs
shrl
out
repnz
cld
ljmp
sbb
mov
outsb
fisttps
add
adc
push
sahf
sub
movsl
or
add
push
fisubrs
out
dec
packuswb
lods
mov
pop
jo
das
pop
sub
imull
add
jecxz
mov
push
jecxz
pop
lods
xor
dec
xchg
int3
fisttps
mov
div
cmp
cmp
or
add
xlat
pop
and
ljmp
xchg
es
scas
sbb
pop
icebp
fisubl
sbb
add
add
jne
pusha
popf
pop
adc
cmc
add
add
int
dec
push
fstl
rcrb
cmp
sahf
push
adc
mov
xor
cmc
add
jmp
repz
mov
adc
xchg
xor
cltd
repnz
outsl
idivl
mov
into
iret
cltd
jecxz
push
and
cmp
ds
sbb
and
dec
lock
push
decl
push
cltd
push
push
cltd
cld
mov
test
jg
pusha
faddl
fcomp
enter
dec
inc
addb
test
jbe
sbb
sti
inc
into
icebp
sbb
cmc
iret
ds
sbb
adc
out
jmp
sub
xor
lret
lock
js
jbe
imul
orl
inc
mov
push
movsl
cmp
std
lods
sub
cmp
scas
cmp
sbb
shlb
mov
ja
fdivrp
push
loopne
mov
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
push
add
aad
xlat
xor
stc
repz
imul
rcll
fldcw
insl
cmp
lock
mov
pop
jno
add
pop
mov
jb
add
std
inc
cwtl
shr
add
or
js
inc
cwtl
repz
sub
scas
jns
mov
sub
mov
fwait
subl
out
push
out
jmp
inc
lods
cld
lods
mov
xchg
mov
rep
mov
out
faddl
sub
sbb
jge
into
dec
and
nop
sub
pop
sub
mov
inc
jl
lods
xchg
cmpsb
sbb
test
cmp
or
push
adc
push
or
add
lea
loope
sarb
push
and
pop
mov
or
pop
ja
or
xchg
jecxz
pop
or
mov
mov
cltd
add
add
add
add
xor
jb
jae
inc
cmp
jl
add
add
out
cs
mov
addb
js
add
push
inc
dec
cmc
dec
sbb
inc
scas
cwtl
sub
mov
ds
inc
xor
insl
data16
jmp
inc
cmpsl
dec
adc
sub
inc
fimull
std
adc
in
hlt
addb
dec
mov
pop
in
out
sub
mov
ret
lea
push
scas
jno
imul
and
adcl
fiaddl
ficoms
mov
fsubr
cli
dec
jmp
mov
rol
fcom
shrb
sbb
and
pusha
in
dec
cmp
movsb
mov
pop
mov
mov
ljmp
in
xor
xchg
add
pop
daa
test
jae
int
pop
scas
xor
movsb
aas
cwtl
aaa
dec
es
xor
xorb
or
stc
xor
rorb
test
cmp
js,pt
inc
add
add
ds
in
idivl
js
mov
das
push
add
out
xchg
add
xor
arpl
and
lret
insb
lret
add
pop
xor
dec
dec
lods
push
mov
gs
inc
add
dec
push
cmp
add
rclb
and
add
roll
inc
in
pop
mov
aam
cmp
insl
call
fldcw
lcall
shrl
pop
xor
xlat
jnp
in
mov
rol
add
xchg
imul
out
mov
push
adc
testb
shll
push
pusha
jne
sbb
mov
mov
std
xor
pop
mov
gs
out
lret
sub
ret
leave
jno
lahf
adc
nop
lea
leave
sub
push
repz
mov
sub
sub
fdivl
movsb
or
xlat
add
out
incb
out
dec
add
add
jecxz
inc
cli
aas
into
lret
scas
stos
stc
add
add
dec
push
mov
push
lcall
or
hlt
sub
ficompl
push
xchg
ret
sbb
in
inc
jl
jo
pop
push
mov
lahf
push
cmc
xchg
call
dec
mov
cli
sahf
inc
add
mov
cmc
flds
rcrb
stos
enter
jmp
aas
cs
pop
call
sbb
or
test
rcr
adc
xchg
push
jge
pop
or
bound
mov
mov
add
es
sbbl
xchg
jp
pop
sbb
sub
cs
je
xorb
andb
add
cmc
mov
lret
cmp
cmpsl
pusha
stos
pop
push
jbe
mov
xchg
pop
inc
ds
xor
jno
ficompl
jp
xchg
mov
jae
cmp
mov
insb
ss
divb
addr16
pop
push
xchg
imul
jno
xchg
insl
xor
data16
inc
dec
sbb
fistpl
mov
lcall
push
stos
mov
add
and
mov
fcoms
mov
pop
pop
mov
sbb
mov
jae
adc
sbb
or
dec
ficoms
jp
inc
mov
jo
fcomps
sahf
js
scas
movsl
outsl
jns
lcall
lea
sbb
test
or
mov
lods
jl
cli
fs
mov
mov
xchg
test
sbb
stc
mov
and
dec
and
int
dec
movsb
adc
movsb
cmovbe
xchg
inc
lahf
jmp
dec
enter
jo
dec
setns
cmp
dec
add
xor
das
lea
gs
dec
and
mov
pusha
iret
add
cs
pop
cmpsl
push
test
les
lea
push
add
jmp
jle
add
xchg
jb
test
or
add
aaa
jae
cltd
dec
mov
jno
ret
scas
nop
sti
add
add
pop
iret
ss
subb
or
out
and
cs
gs
mov
mov
cmp
add
ficoml
mov
fidivrs
lea
mov
out
inc
roll
loopne
mov
mov
cmc
mov
cld
ss
pop
stc
jle
mov
mov
cmp
loopne
out
jp
mov
and
mov
adc
xchg
clc
in
sub
push
jmp
add
aaa
or
lahf
int3
out
fsubrs
push
lret
in
lea
rcrl
fcmovnb
mov
xor
shlb
fists
and
or
and
mov
push
jae
es
sti
adcb
mov
imul
ret
inc
mov
movsl
adc
and
jo
push
fistps
mov
sahf
aaa
pop
insb
push
in
mov
shrb
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
out
in
mov
add
cmp
mov
sub
mov
sbb
mov
sti
loop
call
cmp
iret
jne
pop
dec
cmp
nop
in
xchg
gs
data16
lods
ds
cwtl
lods
mov
mov
ficoms
enter
in
sbb
in
shrb
test
pop
sti
dec
push
jne
or
add
mov
push
mov
mov
js
inc
xor
shlb
pop
jae
test
push
popl
mov
addr16
std
mov
repnz
adc
add
repnz
js
mov
cld
je
out
xorl
cmpl
movsb
es
jno
mov
dec
lods
xor
outsb
ljmp
or
divl
push
dec
stos
and
lea
call
add
sbb
push
push
outsl
and
cmpsl
rcrl
xor
add
add
test
jg
push
pop
push
mov
lcall
add
out
push
mov
mov
xor
mov
xchg
xor
xchg
insl
out
ja
or
inc
js
cmpsb
popa
cmp
cmp
jp
mov
xchg
or
pop
repnz
cltd
fnstenv
pushf
scas
cmpl
cmpl
fstps
pop
jae
clc
pop
dec
sub
andl
pop
adc
and
mov
pop
and
mov
mov
lock
cwtl
adc
ljmp
sahf
mov
inc
mov
xchg
push
lahf
add
xchg
or
jge
push
pop
scas
fdiv
xlat
testl
repnz
pop
cs
sbb
push
cmc
loop
and
mov
push
dec
orb
nop
lods
mov
enter
pop
and
scas
jb
xchg
fldl
xchg
lods
movsl
and
add
adc
movsb
push
in
cmc
jne
sbb
js
mov
add
push
scas
sbb
shl
orb
push
ror
js
faddl
daa
mov
mov
jno
and
loopne
push
xor
sbb
cmp
push
xchg
lret
hlt
push
lahf
adc
mov
ss
pop
in
shrl
jns
jg
punpckldq
stos
add
dec
add
xorb
adc
mov
push
push
mov
add
sub
aam
stos
arpl
outsb
loop
pushf
add
mov
rclb
enter
sbb
mov
adc
and
mov
data16
or
add
movsl
sub
loope
aas
jmp
fisubrl
rorl
add
sub
in
int
jae
out
aad
hlt
loopne
mov
inc
or
fwait
stc
je
push
std
cmp
sti
pop
inc
jp
or
fsubrs
fwait
mov
xor
mov
fstpt
daa
mov
iret
mov
add
add
out
shlb
aas
out
int3
mov
mov
int
movsb
incl
add
and
loopnew
push
sub
pop
push
or
jno
in
jae
inc
daa
fisubl
jae
inc
push
and
cli
cli
xchg
scas
jo
adc
pop
lar
andl
imul
imul
jl
divl
jmp
cli
push
ds
cmp
push
ret
mov
out
mov
mov
push
insl
mov
sbb
loope
push
call
divb
push
andnps
xchg
push
and
bound
or
xor
mov
or
pop
mov
arpl
stos
call
in
mov
lods
push
adc
movsl
adc
jbe
mov
pop
hlt
cwtl
int
std
roll
xchg
movsl
xchg
sbb
pop
xor
pop
fldcw
cld
mov
test
mov
fisubrl
emms
xchg
ret
jg
pop
and
jnp
mov
cmpsl
inc
add
add
mov
lcall
push
das
test
add
add
popf
push
pop
jns
movsb
stc
out
mov
push
bound
jl
out
insb
jle
adc
push
sbb
outsl
pop
inc
inc
or
pop
mov
pop
sbb
dec
test
mov
insb
cmp
icebp
sub
lods
jbe
mov
jmp
imul
xchg
fwait
jb
outsl
xchg
pop
mov
sub
insb
or
lret
popf
ljmp
out
sbb
aad
aad
inc
inc
sub
data16
jg
mov
ret
je
sub
jne
pop
pusha
popa
lock
mov
lds
mov
lret
mov
int3
push
jae
popf
cmp
outsb
addr16
sub
or
lods
mov
les
cmp
xlat
adc
js
push
mov
cmp
cmp
adc
fildl
xor
ret
pop
add
jnp
mov
mov
fwait
idivl
cmp
xchg
push
add
add
ret
bnd
cmc
inc
stos
repz
mov
add
add
add
cmc
push
bound
dec
js
jmp
jp
nop
mov
ss
in
xor
dec
or
dec
sub
xchg
add
add
cltd
add
les
or
cmp
test
mov
jns
inc
xchg
or
pop
std
fcoml
je
vmaxps
lret
jg
lea
mov
in
push
incl
add
push
mov
hlt
xlat
and
mov
stmxcsr
cmp
addr16
sub
inc
stos
clc
dec
leave
daa
sbb
xchg
roll
loopne
cmc
out
or
scas
sti
pushf
inc
push
mov
xchg
pop
in
hlt
mov
fs
jge,pt
jne
leave
into
shlb
add
pop
sbb
stos
mov
mov
aad
mov
sti
mov
imul
inc
std
xor
mov
mov
call
shll
add
add
std
aaa
mov
shll
mov
movl
rorl
and
xchg
xor
xor
xchg
out
jle
adc
lods
inc
cmp
xchg
sub
and
aaa
mov
xchg
push
xchg
imulb
mov
dec
xchg
popf
adc
js
cmp
repnz
pushl
dec
decb
loop
movsb
stc
dec
stc
dec
and
adc
test
and
data16
loope
mov
push
ja
lahf
jecxz
adc
mov
dec
xorb
icebp
push
in
adc
addr16
rorb
pop
cmp
pushf
rcrl
clc
mov
cmc
fsubl
arpl
idiv
data16
test
xchg
mov
cmp
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
lods
insb
gs
fs
dec
mov
xlat
and
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
