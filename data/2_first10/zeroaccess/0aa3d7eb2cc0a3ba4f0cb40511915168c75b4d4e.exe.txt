push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
sti
repz
sbb
jl
pop
jl
adc
and
popa
pusha
dec
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
ljmp
or
cli
movsl
mov
fisubl
inc
insl
stc
jl
xor
bound
imul
cmp
es
ljmp
xchg
fcomip
sbb
sarb
fdiv
inc
icebp
rclb
lret
dec
int
pop
cmp
inc
pop
xchg
in
adc
out
jmp
popa
xchg
or
dec
aas
in
push
mov
inc
sbb
shlb
and
xchg
mov
sbb
sub
mov
cmpsl
xchg
jmp
subb
inc
push
jmp
xchg
xor
xchg
adc
mov
mov
mov
jp
inc
lods
fidivs
dec
xchg
cli
rcr
sub
cwtl
xchg
jg,pn
cmp
insl
push
add
cli
jl
sub
pop
or
movsl
jg
loopne
lahf
adc
mov
cmc
xchg
daa
ja
xchg
lea
jno
cmp
frstor
xor
je
lock
sahf
je
je
add
in
divl
es
jecxz
addb
les
loope
mov
shlb
les
jb
int
jle
xchg
mov
sbb
cmp
insl
jns
cltd
inc
fdivl
push
push
imul
or
or
mov
pop
mov
mov
xchg
movsb
lret
cwtl
lret
or
insl
outsl
inc
mov
xchg
add
cmp
xchg
call
adc
fldenv
lahf
cmp
outsb
xlat
xchg
mov
iret
or
add
dec
push
leave
mov
repnz
cmpsl
into
pusha
lds
dec
pop
clc
jge,pn
out
test
bnd
stos
pop
cmp
and
stos
jno
je
jl
mov
subl
sbb
call
lock
mov
xchg
repnz
xor
pop
mov
clc
loop
mov
adc
rorb
bound
fsubrl
lds
or
pop
loop
aaa
inc
leave
outsl
jne
loop
mov
sahf
decb
or
in
mov
lret
lea
aad
cld
push
cli
pop
pop
int
sub
loope
in
add
mov
insl
pushf
lret
mov
lods
jne
pop
push
push
mov
adc
or
or
or
cmp
popl
adc
sub
enter
mov
and
cs
push
pusha
incb
popf
xor
rol
pusha
mov
cld
je
imul
clc
and
sub
and
out
cmp
lods
sub
imul
lds
or
or
mov
cmc
sbb
xchg
jmp
out
cmp
iret
cli
iret
or
loope
rclb
in
dec
pusha
lret
nop
orl
jmp
insl
mov
enter
gs
andl
in
mov
pop
fwait
popf
push
jnp
or
test
les
popf
int
clc
mov
stc
or
lods
cmp
sbb
mov
mov
push
arpl
xchg
push
imul
and
and
push
xchg
movsb
add
call
jbe
movsl
int
arpl
roll
jnp
shll
pop
sbb
or
leave
jbe
mov
lret
xor
aaa
mov
mov
jl
cld
sub
xchg
pop
ror
mov
int3
lret
sbb
or
out
enter
cmp
fimuls
pop
data16
stos
call
xor
adc
push
out
bound
push
pop
aad
movsb
movsl
bound
ja
or
cmp
lret
popa
sbb
add
stc
fdivrl
pop
in
add
pop
icebp
imul
sbb
cld
scas
push
cmp
cmp
xor
fisubl
dec
xchg
pop
nop
cmp
lahf
cmp
icebp
dec
mov
aaa
pop
sbb
pop
jno
jns
imul
sub
imul
mov
sarb
or
imul
sete
outsb
and
out
loopne
leave
movsl
pop
and
pushf
cs
dec
loope
jge
ret
lock
js
xchg
out
stos
sbb
pop
test
xor
pop
hlt
pusha
gs
pop
gs
xor
jnp
sti
push
scas
popa
sbb
out
lods
dec
dec
mov
aas
sub
sub
fwait
mov
out
mov
dec
xchg
sbb
in
mov
add
mov
loop
dec
and
mov
js
and
inc
cmp
sub
adc
mov
mov
mov
pusha
cmc
inc
test
sub
js
xor
lds
pop
mov
inc
testl
fimull
mov
or
and
cltd
sahf
clc
xchg
pop
cmp
int
xchg
push
rolb
fwait
lret
jo
scas
add
xchg
in
cwtl
push
sti
or
cwtl
scas
push
pop
out
subb
mov
xor
push
lcall
and
xchg
add
std
mov
fs
popf
xor
add
loop
xlat
mov
fisttpl
repnz
push
add
jae
xchg
add
inc
int3
xor
jle
mov
out
out
je
push
js
shrb
stc
ret
arpl
xchg
mov
aas
inc
int
mov
mov
std
ret
aam
jno
shll
pop
fcompl
cld
cmp
hlt
cmpsl
in
push
add
mov
call
cmp
xchg
dec
xchg
or
out
dec
cmp
cmp
in
bound
js
movsb
pop
lret
dec
inc
sub
lea
and
push
jl
mov
or
mov
aam
rcrl
mov
rorb
std
push
jecxz
movsb
mov
movsl
stos
loop
sti
addps
mov
adc
sub
cmp
arpl
scas
adc
push
sbb
clc
add
xor
mov
jmp
in
ds
add
sub
xor
mov
mov
rep
into
jge
leave
add
xchg
dec
jle
sub
xor
dec
xchg
dec
lret
inc
xchg
lods
movsb
fwait
add
cmp
or
cltd
jae
cmc
pusha
std
xor
arpl
loope
fnstenv
outsb
dec
pop
push
push
xchg
stc
pop
mov
jae
ja
or
push
mov
flds
loopne
adc
ret
sub
arpl
icebp
lock
in
push
mov
add
iret
pushf
adc
jae
fstpt
in
fiadds
xchg
lods
aas
sub
cmp
mov
dec
sarb
dec
jecxz
enter
and
les
mov
and
aas
aam
xor
or
movsl
jnp
lahf
cltd
and
inc
in
push
int3
and
data16
sbb
ficompl
popa
mov
rcrl
dec
lret
dec
fsubrs
lds
aaa
lcall
jg
xchg
jnp
out
int3
jbe
aaa
aaa
push
sbb
push
inc
fcomps
aad
xchg
adc
fimull
sub
mov
aam
push
lcall
sub
mov
pop
maxps
adc
rclb
lods
aas
xchg
jbe
xor
and
xchg
mov
push
push
jle
add
xor
dec
mov
xlat
mov
jo
sub
dec
sub
or
nop
mov
dec
xor
xlat
sub
hlt
mov
nop
cmp
xchg
cmpsb
jl
dec
push
insl
cmp
xlat
or
jo
leave
jge
jmp
mov
popa
or
dec
int3
sub
aad
adc
cmp
add
lea
aam
xlat
mov
pop
mov
ds
pop
push
pop
mov
lods
jno
fiaddl
xchg
rorb
lods
jne
fisubs
xchg
mov
inc
push
jo
dec
shrb
outsb
insl
xchg
dec
xchg
test
push
iret
mov
cmpsb
cwtl
mov
mov
xchg
cmpsb
xor
inc
in
stos
ret
cs
cmp
push
mov
rorb
jge
cs
int3
fucomi
lahf
scas
xlat
xor
pop
xor
addr16
push
fistl
lret
pop
add
cmp
insb
dec
push
inc
iret
lds
sbbl
loope
adc
jbe
xor
xlat
mov
cmc
shlb
xchg
test
dec
mov
repnz
mov
pop
dec
int3
pusha
add
icebp
dec
jle
jle
or
push
fdivr
fwait
mov
pop
cmc
dec
jp
push
shll
pop
jle
adcb
cmp
or
dec
xor
push
outsb
mov
cmpsl
and
jns
push
out
pop
lds
add
fcomps
mov
jg
or
clc
fsubl
and
mov
jmp
cmp
mov
aam
icebp
and
and
xchg
push
mov
testb
xorl
cltd
jns
pop
iret
inc
rcll
mov
and
jp
std
pop
sub
jbe
jl
inc
jl
push
out
sahf
rcll
add
shlb
lea
mov
sub
mov
jp
dec
in
push
inc
stc
push
cmp
adc
pop
sbb
xor
mov
movsb
mov
es
pop
fildl
mov
imul
arpl
sbb
lret
ss
ss
popf
fisttpl
pop
jl
je
jl
jl
fbld
mov
jp
outsl
insl
pusha
sub
imul
bnd
xchg
out
arpl
cmp
add
dec
push
aam
xchg
mov
dec
mov
pop
and
jle
ret
scas
xchg
pushf
add
pop
xchg
adc
leave
mov
mov
add
mov
sbb
insb
or
stos
aaa
insl
fiadds
repz
test
cmpl
jb
inc
dec
pop
mov
and
ficompl
sbb
shll
lretw
lret
lahf
mov
cmc
xor
pop
inc
andb
and
fnstcw
mov
out
mov
mov
pop
push
pop
mov
cmp
cmpsl
add
adc
lret
xor
pop
cs
xlat
push
pop
ret
ret
pop
lds
inc
cmpsl
push
xchg
pushf
dec
xchg
inc
imul
fs
mov
repnz
rcll
add
cmpsl
push
pop
in
shll
add
xor
mov
cld
cmp
mov
outsl
or
repz
pop
sub
and
stos
inc
pop
and
mov
jns
jp
push
and
dec
clc
aam
or
inc
jnp
and
cmpsb
mov
pop
icebp
enter
cmp
mov
jmp
call
inc
and
scas
out
pop
mov
std
mov
jle
es
aaa
xchg
mov
lahf
loop
dec
mov
push
test
lret
xorb
xorl
xor
test
push
sbb
aad
filds
dec
mov
call
push
fnstcw
mov
lock
test
dec
jne
sbb
dec
adc
add
cld
pop
lods
loop
mull
xor
pop
adc
lea
adc
sti
rcr
push
call
cld
jge
push
and
in
loope
mov
loope
fs
push
bnd
aam
xchg
lahf
and
rorl
negl
js
jo
adc
pushf
test
pop
inc
cmpb
dec
jp
movsb
test
in
or
add
mov
push
sub
and
jb
add
aad
sub
subb
lds
in
scas
cmp
xchg
and
xor
and
push
mov
notl
outsb
mov
sahf
call
adc
mov
mov
rorb
jmp
in
into
popa
mov
insb
pop
jo
xor
repnz
inc
lret
insb
jmp
sub
add
ret
movsl
xchg
jno
fwait
ret
in
xchg
je
add
sub
dec
xor
sbb
jp
out
sub
scas
push
call
jb
mov
or
push
dec
fldt
insb
into
aas
push
cmp
cwtl
iret
xor
mov
or
popl
xor
mov
jmp
push
adc
add
pop
pop
sub
daa
dec
sub
mov
sti
in
pop
jne
in
jg
fucomip
out
jge
dec
jmp
adc
xor
cmpb
lods
adc
js
inc
paddw
ljmp
lea
test
jmp
stos
out
dec
push
mov
movsl
ja
jbe
mov
fcmovbe
or
shrb
push
je
je
sbb
test
lock
add
adcb
add
mov
jnp
jae
add
xchg
dec
jecxz
cld
ss
push
pop
cmp
inc
jmp
dec
sbb
clc
jnp
jg
mov
outsl
inc
xor
in
inc
aaa
aad
xor
pop
inc
outsb
sub
sub
cmc
mov
and
xor
mov
fisubl
cmp
adc
fcomps
je
div
test
xchg
cwtl
lret
xor
icebp
jne
jp
xchg
inc
sbb
rcll
testb
inc
pop
push
cmc
fimuls
mov
push
jbe
pop
mov
adc
pusha
cmpsl
ret
xchg
inc
in
add
in
dec
and
add
cmp
pop
outsb
stos
pop
xor
pop
dec
and
xor
into
mov
jo
push
out
int
pop
daa
sub
addr16
and
mov
fs
aaa
sti
addl
dec
scas
incb
fnsave
lods
pop
xchg
mul
icebp
bnd
cmpsl
jne
fidivrl
clc
loopne
pop
mov
inc
mov
cmpsl
jbe
pop
adc
jle
pushf
push
cmp
rorb
add
inc
das
push
adc
mov
cmp
adc
dec
mov
movsb
les
movsb
subb
and
not
in
out
pusha
rcl
or
jbe
mov
movsl
test
push
js
xchg
mov
inc
and
ljmp
scas
lret
sbb
out
decl
movsl
into
xor
jecxz
pop
jp
or
es
inc
cwtl
pop
loope
mov
jmp
outsl
add
mov
ss
pop
jb
fdivs
ret
mov
popa
lds
push
cwtl
and
push
out
fucomp
clc
push
fsubrs
stos
rsm
jl
daa
lods
sub
pop
lahf
addb
insb
int3
dec
dec
adc
inc
mov
icebp
sbb
or
mov
and
repz
inc
stos
push
adc
popf
pop
pusha
mov
mov
push
sub
adcl
clc
pop
jp
leave
sub
mov
pop
loopne
or
mov
cmp
add
movsl
sti
ljmp
ljmp
mov
out
sub
movsl
sub
xor
idiv
aas
push
hlt
sub
sahf
sbb
and
test
subl
pop
insl
aam
shrl
mov
loope
push
cli
data16
push
pusha
mov
cmp
jno
scas
sar
push
icebp
scas
add
adc
adc
adc
push
test
hlt
clc
les
jbe
mov
inc
rorb
and
lret
aad
dec
or
ds
dec
inc
bound
lods
xchg
sbb
inc
sub
push
cmp
lock
add
push
adc
mov
shrl
cwtl
xchg
lret
data16
xchg
rcll
loop
pusha
fildl
push
push
cmp
mov
mov
add
call
add
cld
mov
andl
and
loop
pop
rolb
jb
in
sub
mov
movsb
cmp
mov
lock
jp
pop
push
ror
cld
add
and
ret
jmp
add
push
jae
in
scas
mov
xor
cmp
in
inc
inc
inc
fsts
dec
mov
kmovw
lret
lret
lret
outsb
and
mov
stos
jne
dec
in
gs
xor
xor
jp
adc
xchg
ja
adc
adc
xor
out
fs
into
out
lret
paddsw
js
mov
cmp
sbb
int3
cmpsb
mov
nop
mov
mov
xchg
adc
add
pop
jns
out
cs
sub
fildl
dec
out
icebp
dec
rcll
scas
aad
outsl
push
ss
pop
inc
ret
or
sbb
mov
cmp
into
fsts
mov
pop
xchg
pop
mov
or
fdivs
jne
les
jno
aam
add
fstps
fwait
mov
xor
pop
xchg
jnp
inc
lods
les
loop
rorb
sbb
cld
leave
mov
or
pop
inc
pop
out
rorl
dec
dec
lds
pop
sti
stc
mov
adc
ss
push
sti
jns
add
fwait
nop
bnd
lods
or
in
stos
popf
sbb
rorb
sub
mov
mov
adc
mov
cmp
cld
inc
mov
jnp
cli
push
scas
jno
ss
mov
dec
xchg
xchg
filds
hlt
clc
mov
test
and
sub
xor
bound
incl
xchg
ficoml
xor
outsb
leave
sarl
jno
inc
mov
imul
mov
faddl
adc
dec
imul
cli
mov
mov
sub
mov
mov
lods
inc
xchg
mov
add
data16
popf
mov
sub
ret
add
loope
orl
and
push
xorl
test
pop
insl
sahf
mov
es
push
ds
lret
cmp
gs
ficoml
inc
shl
mov
cmp
push
and
sub
fxch
hlt
push
inc
adc
xchg
shl
push
sub
jno
shl
fnop
mov
je
movsl
and
jg
ret
mov
aad
dec
imul
test
mov
lahf
jge
pop
xchg
xor
addb
addl
xchg
idivb
inc
ja
nop
sub
dec
loopne
fistl
nop
lea
mul
fnop
sbb
inc
pop
jae
leave
lahf
dec
dec
add
roll
jge
mov
pushf
mov
or
nop
stc
adc
cmp
add
sub
test
pop
lock
xorb
divl
mov
xchg
cmp
loope
subb
xor
jp
adc
icebp
cwtl
mov
xor
rclb
in
mov
dec
xchg
push
inc
jo
jmp
xchg
push
pop
pop
xor
enter
pop
int3
adc
lods
jl
sbb
mov
push
mov
jg
es
lahf
ret
xor
jl
notb
test
mov
pop
mov
push
test
movsl
popl
mov
inc
scas
cmp
sbb
aam
jo
xchg
push
popf
cmc
out
loop
testb
mov
xchg
lock
pusha
lret
push
mov
jnp,pn
dec
xchg
cmpsl
ret
push
ret
mov
icebp
stos
addl
popa
popa
jno
insb
or
pop
notl
xlat
and
mov
in
mov
inc
gs
cmp
fmuls
pop
les
and
jge
xchg
xchg
mov
cmpsl
mov
push
lods
sbb
je
data16
pop
sub
dec
xchg
xchg
mov
sbb
sub
mov
shlb
dec
in
mov
and
cmp
mov
or
xor
sub
and
icebp
push
fimull
push
inc
jmp
push
or
fisubs
lret
lret
or
or
sti
cmp
jl
outsl
xchg
hlt
push
pop
push
jmp
cmp
mov
xchg
je
je
arpl
in
inc
out
cwtl
popa
xchg
dec
sti
add
fdivrs
stos
test
aas
leave
sbb
mov
pop
bound
lret
jecxz
rolb
pop
imul
in
imul
push
cwtl
leave
std
loope
scas
mov
and
aas
cmpl
addr16
cmp
test
adc
out
insb
mov
adc
fsub
inc
sub
jg
or
pop
cmpsb
or
lds
call
pop
pop
jge
mov
sbb
fs
xor
add
mov
bswap
xchg
pop
imul
scas
adc
lock
mov
fidivrs
inc
mov
cmpsl
scas
pop
xor
call
bound
ret
pop
mov
clc
and
cmp
clc
ror
lcall
sub
bound
iret
test
pop
pushf
std
xchg
mov
add
dec
xchg
jae
mov
js
popf
push
movsb
xor
clc
mov
stc
sub
push
dec
scas
add
std
out
adc
and
cltd
sbb
dec
push
test
cmp
sbb
pushf
fmull
cmpsl
jge
test
movsb
dec
outsl
testb
sbb
mov
cmp
mov
add
lret
push
movsl
jmp
shll
dec
xchg
jae
add
cmp
or
pusha
push
xor
cs
pop
or
pop
and
movsl
xchg
jmp
lret
addl
lods
push
loope
and
call
insl
sbb
mov
inc
bound
dec
out
bound
movsl
andl
jb
or
mov
add
imul
sarb
mov
jl
orb
xchg
loopne
aad
jae
scas
and
mov
xchg
mov
popa
sbb
bound
cwtl
scas
dec
push
shl
es
pop
repnz
loopne
jns
lret
or
ss
push
popf
cld
inc
jp
dec
daa
mov
fisubrl
mul
loopne
out
push
mov
dec
or
in
ds
sub
in
mov
repnz
ret
call
stc
xchg
insl
or
jecxz
mov
pop
test
sahf
lret
adc
and
dec
aad
and
leave
mov
mov
popf
or
scas
sbb
popf
pop
gs
mov
pushf
insl
lock
fistpll
addr16
orl
xchg
sub
iret
bound
inc
insl
popf
fldl
sarb
aaa
xor
inc
mov
push
xchg
sbb
push
pop
or
push
mov
rcr
cmc
push
imul
xchg
scas
inc
out
out
ret
dec
fildl
xchg
dec
das
mov
loop
lods
enter
movsl
sub
rolb
movsl
pusha
addb
inc
xchg
imul
push
sub
mov
cwtl
out
cs
push
repnz
test
jbe
ficoml
xchg
xor
int3
lods
popf
addr16
or
mov
repnz
jae
xchg
ja
inc
add
adc
xor
mov
mov
or
dec
ss
push
sub
mov
out
test
mov
lds
lahf
mov
push
jne
test
xchg
daa
and
pop
outsl
jmp
cmp
outsb
or
movsl
push
xchg
sub
out
dec
call
es
lahf
push
jecxz
repz
xchg
xchg
aam
aaa
push
jno
inc
sbb
mov
pop
jae
or
int3
fimull
cmc
mov
decb
dec
add
sbb
outsb
xor
mov
test
mov
mov
dec
repnz
sub
and
fcoml
mov
shrl
cwtl
fstps
xor
test
sub
in
cltd
rorl
sbb
pop
ret
mov
xchg
and
fdivs
arpl
sub
xor
pushf
insb
sub
dec
out
and
xchg
mov
push
mov
or
and
dec
pop
or
lcall
adc
or
inc
in
mov
mov
aad
fwait
jmp
xor
cwtl
sbb
xchg
sbb
push
into
pushf
push
imul
enter
mov
lds
outsl
mov
ret
cld
pop
adc
out
jge
push
into
xchg
out
push
cmp
lahf
cltd
pushf
mov
stc
or
aas
adc
loope
push
les
jge
cli
sub
aam
push
imul
mov
call
fwait
pop
lods
push
pop
fdivs
xchg
cmp
sub
push
mov
test
mov
sbb
popa
insb
jae
add
pop
in
pop
xchg
jle
dec
cmp
xorb
stos
adc
cmpsb
or
jb
xor
cmpsb
jnp
in
sbb
enter
jp
repz
dec
adc
pusha
xchg
jne
fs
sarl
out
movsb
cld
cmp
mov
rorl
push
addr16
lea
movsb
cwtl
sti
inc
or
mov
mov
sbb
pop
out
jmp
loop
mov
outsl
pop
ljmp
xchg
push
push
inc
loop
cld
jns
xchg
dec
jmp
push
adc
imul
inc
xchg
movsb
fistps
fidivrs
test
movsl
imul
jns
adc
gs
mov
dec
mov
out
pop
shlb
jle
insb
aam
leave
and
mov
cwtl
mov
cmpl
fidivl
arpl
add
out
cmp
test
jle
add
pop
jae
mov
xor
in
sbb
fildl
shlb
rclb
scas
mov
xor
mov
lea
stc
and
sub
and
push
ret
out
std
rol
mov
and
and
dec
out
xor
jbe
xchg
mov
les
cmpsl
jmp
jno
in
cmp
mov
mov
push
xor
in
sbb
or
insb
push
jmp
jg
lea
xchg
arpl
mulb
dec
mov
iret
dec
xor
cmc
lahf
cmc
sarb
rol
xchg
lods
jmp
sub
dec
push
andb
je
lods
lods
adc
pusha
sti
in
adc
xchg
rcrb
adc
dec
sub
idivb
popf
lret
pusha
hlt
fstpl
ror
lret
push
andb
adc
cmp
je
sub
and
loope
stc
pop
cs
xor
add
xchg
sbb
cmp
lock
push
adc
sub
and
mov
inc
cmpsb
aad
loop
fadds
aaa
xor
pop
and
inc
adc
popa
popa
xor
rolb
adc
xchg
ret
sar
jl
pop
je
mov
loope
out
sbb
sbb
out
hlt
negb
arpl
jp
dec
lret
arpl
fstps
fdivl
pusha
sub
lea
mov
data16
aaa
test
imul
push
xor
xchg
je
jae
mov
jp
cmp
es
mov
lcall
cmpsb
in
jle
fxch
ret
test
cwtl
imul
pop
push
inc
push
outsb
out
mov
sub
je
cwtl
stos
sbbl
or
shrb
es
fistl
data16
push
adc
or
ds
xchg
mov
xor
and
or
clc
into
mov
cld
xchg
cwtl
inc
inc
repnz
repz
dec
xchg
neg
nop
xchg
sub
lcall
jb
into
sti
or
lock
ficomps
aam
lods
outsl
and
rorb
sti
repnz
jecxz
adc
adc
rclb
jp
jecxz
movsl
repz
fwait
les
xchg
ja
lret
movb
and
jnp
je
andb
and
lret
sub
mov
xor
adc
xorl
movsl
xlat
loopne
loopne
sbb
sub
adc
neg
dec
scas
outsl
mov
or
arpl
cmp
xchg
mov
faddl
mov
lret
shl
jbe
mov
cmp
xchg
xchg
stos
pushf
xor
call
or
rcr
insb
or
cwtl
push
jge
ret
xchg
in
dec
out
cwtl
fmuls
fisubl
das
xor
push
dec
lods
mov
mov
repz
adc
repz
mov
int3
mov
jg
xchg
or
into
xor
or
jb
push
shrb
insl
cmp
pop
mov
add
pop
cmp
and
sbb
xchg
ljmp
into
aaa
jecxz
sub
ljmp
insl
es
cmp
add
out
in
fnstsw
sbb
pop
into
sbb
adc
test
in
cmp
and
sub
cmp
test
insb
repnz
sbb
push
mov
mov
inc
roll
popl
mov
push
lock
xchg
rorl
cld
arpl
mov
jns
rcrb
scas
and
fdivrs
negl
adc
xor
xor
xchg
outsb
aam
pop
mov
cli
or
cltd
xor
add
aam
cld
enter
decl
cmc
fcom
and
adc
les
scas
lods
push
test
mov
ss
jge
fisttps
sub
ss
addr16
fdivrs
pop
sti
or
sub
pop
in
push
ret
jp
ret
cmpsl
xorb
stc
in
push
mov
adc
roll
lret
scas
out
gs
mov
push
lods
daa
js
das
stos
ret
nop
rcrl
sti
ret
out
test
mov
inc
out
mov
scas
pushf
jbe
frndint
out
outsb
cmp
jl
push
xchg
in
sub
mov
mov
out
cmp
dec
mov
cmp
ret
mov
mov
and
loope
in
mov
cs
out
jecxz
and
hlt
and
test
in
xchg
mov
and
stos
mov
fdivrp
cwtl
push
sub
fwait
rcll
popa
mov
in
pop
out
xor
sarl
insl
adc
leave
stc
cmp
pop
jmp
ds
push
imul
sub
stos
stos
jge
mov
cmc
out
xchg
and
cmpsb
dec
pop
or
int
int
adc
test
ds
int
fidivrs
pop
xorb
jb
push
mov
jle
test
arpl
sbb
mov
push
mov
mov
jecxz
cwtl
lea
in
jae
or
ret
ja
sbb
ds
xchg
sbb
pop
xor
cmp
sahf
arpl
aas
dec
imul
inc
push
inc
lock
xchg
cmpsb
fmull
test
scas
jnp
sub
push
addr16
or
add
dec
ss
movsb
mov
shrb
roll
mov
aas
lret
mov
dec
mov
into
push
pop
mov
add
cld
popf
dec
aas
shlb
decl
mov
mov
fucomp
loope
and
jnp
aas
lea
ljmp
mov
inc
inc
cmp
jb
es
gs
js
mov
fsubrs
frstor
mul
inc
gs
push
xor
pop
dec
hlt
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
jl
dec
pop
jl
adc
out
test
rcl
or
jbe
push
popa
es
cld
push
push
push
or
pop
xchg
fldenv
cld
rorl
xchg
sub
cmp
int3
pop
aam
sub
and
push
outsb
sbb
fnstcw
push
sub
adc
xchg
xchg
xchg
xchg
cmp
push
stos
in
pop
or
movsb
mov
addl
jae
dec
cmp
pop
int
test
fidivrl
dec
cltd
arpl
fildll
int3
sti
jae
dec
aas
into
xor
push
daa
lds
lahf
add
push
pop
repnz
cmc
mov
inc
pop
scas
imull
je
outsb
scas
dec
data16
fsub
pop
jmp
in
loopne
sbb
jle
adc
adc
xchg
add
andb
not
pop
enter
add
loopne
stos
mov
repz
lcall
stos
test
mov
movsl
inc
push
jl
mov
jmp
movl
push
cmc
sub
in
aas
ja
pop
insb
ret
mov
or
or
leave
jge
and
test
lret
cwtl
aad
in
cmp
push
add
ja
mov
inc
sahf
fstpl
inc
outsl
push
inc
jb
into
pop
aam
jle
and
dec
mov
das
mov
fs
outsb
push
loopne
mov
adc
mov
adc
test
stos
out
icebp
add
push
insb
repnz
fbld
mov
and
roll
out
popl
imul
insl
jl
cmpsb
mov
sub
aad
pop
mov
fxch
xchg
push
jl
jmp
sub
addr16
jg
mov
mov
push
fadds
xchg
mov
push
sub
add
cmp
xlat
cld
push
add
ror
mov
stos
shrl
xchg
cwtl
ljmp
mov
ret
jbe
push
jbe
xor
mov
out
inc
sub
aam
pusha
lods
mov
push
pushf
loop
pop
dec
adc
or
xor
mov
sub
imul
mov
lods
insb
or
or
jne
mov
flds
xchg
sarb
pop
mov
jl
or
mov
or
dec
scas
push
jle
xor
dec
pop
lret
sbb
pop
xchg
pop
in
jae
or
setno
xor
mov
and
inc
das
fimuls
and
xchg
sub
gs
jge
inc
sbb
push
div
mov
pop
mov
adc
adc
adc
clc
das
sbbl
mov
ljmp
iret
dec
adc
lea
roll
xchg
sbb
cmp
xchg
ljmp
fldenv
sbb
outsb
leave
mov
jae
aam
addr16
push
jmp
in
pop
jp
fldln2
cmpsl
les
mov
test
sub
lods
int3
insl
dec
inc
jmp
cltd
jp
sbb
jae
es
inc
rcll
es
out
push
sub
fcmovnu
repz
aam
cld
jae
jo
push
stos
or
scas
pop
mov
jg
sbb
insl
nop
and
pop
inc
lret
sub
std
dec
and
ja
sbb
cld
mov
inc
pop
xor
pop
into
mov
inc
sub
jns
sub
jmp
shrb
cwtl
sub
or
incb
dec
cmp
mov
mov
fstpt
bound
mov
mov
adc
lods
ss
mov
or
and
and
mov
fidivrs
cltd
xchg
pop
xor
fisubrl
cmp
jb
leave
das
xchg
adc
mov
je
insl
jmp
mov
or
cmpsl
dec
adc
dec
or
jb
jg
push
popf
ja
sbb
out
or
lret
fcomi
xchg
mov
mov
mov
mov
adc
sbb
cltd
in
or
xchg
data16
and
clc
jl
lret
stc
mov
pop
es
dec
xlat
lret
and
xchg
cmp
repnz
data16
rcrl
xorl
jno
mov
push
mov
jo
sbb
mov
cmp
popf
dec
shl
dec
xor
pop
xchg
fnstenv
mov
sub
pop
rcrl
out
xchg
popf
int
dec
inc
mov
sarl
pop
imul
testb
int3
aaa
pop
add
xchg
push
lods
jge
add
loope
aas
mov
and
in
imul
mov
xorl
xchg
lcall
jns
or
inc
dec
movsb
leave
xchg
lret
add
mov
mov
push
mov
cmp
xor
jle
mov
jb
inc
enter
cs
cld
mulb
pusha
inc
mov
addr16
mov
jg
xchg
sub
pushf
ret
in
cmpsb
lods
aad
sub
scas
mov
pop
jnp
lcall
mov
lahf
pop
pop
ret
into
inc
push
jns
ret
pop
lds
xor
aam
or
push
dec
iret
push
xchg
lahf
into
or
leave
out
or
aas
dec
nopl
dec
adcb
test
inc
xor
push
les
cli
mov
add
cmp
jae
jmp
cwtl
lock
testl
outsl
add
xchg
aas
hlt
mov
or
mov
movsl
test
es
in
sbb
scas
mov
mov
adc
sub
dec
jbe
mov
addr16
icebp
in
mov
mov
inc
les
icebp
aaa
insb
cmp
inc
cmp
cmpsl
popf
lock
mov
in
insl
dec
jns
xor
test
jl
repnz
fcmove
sbb
dec
and
faddp
cmpsb
popf
fwait
into
cltd
or
loope
inc
cli
test
testl
sbbb
inc
rorl
cld
add
jmp
in
js
lds
cmpsl
sub
lock
sub
lahf
and
jne
pushf
push
fidivs
inc
shll
fwait
insb
pushf
xchg
scas
jns
or
cmp
mov
sbb
out
push
and
ljmp
sbb
jl
ljmp
mov
es
pop
test
push
add
fsubr
or
repnz
push
das
fcom
outsb
cmpsb
add
push
arpl
cwtl
adc
or
sub
xchg
xchg
dec
sub
mov
mov
push
daa
jns
enter
xor
daa
jbe
add
pop
dec
loop
xchg
pop
stc
test
out
icebp
jmp
mov
rolb
fwait
call
sti
mov
movsb
pushf
push
sbb
pusha
mov
pop
cmp
dec
loopne
into
dec
sarb
adc
in
roll
outsl
adc
mov
bound
ret
cmp
imul
cmp
pop
sbb
cmp
fistpl
pop
or
cmpsb
jae
insl
mov
mov
sub
bound
mov
in
mov
push
mov
xlat
mov
push
and
int
cmpsb
or
ret
dec
pop
sti
mov
jl
enter
or
das
jo
rclb
test
fldenv
loopne
test
xchg
clc
xchg
and
sbb
inc
sti
pop
insl
movsl
add
pop
and
jbe
call
ja
or
scas
add
sti
loop
mov
sbb
dec
pop
jecxz
enter
test
mov
cltd
or
mov
cmp
mov
cmp
out
adc
mov
rcrl
divb
inc
leave
dec
les
jmp
push
or
jne
dec
and
cmp
pop
mov
xchg
mov
inc
movsl
mov
push
imul
sbb
cs
ret
mov
fists
cmp
mov
and
int
adc
jg
or
xchg
cmp
mov
pop
out
aam
adc
and
add
mov
std
xchg
sub
and
mov
xchg
cmp
pusha
imul
adc
jb
mov
mov
cmpsb
jbe
lds
inc
inc
jne
lcall
icebp
jge
adc
adc
xchg
repz
inc
lret
xor
mov
jmp
scas
xchg
mov
mov
pop
into
fsub
add
add
pop
mov
or
or
mov
lock
movsl
cmp
sbb
aas
out
pop
js
shlb
sub
shlb
jno
orl
sub
fimuls
xchg
in
jns
adcl
mov
int3
nop
sbb
dec
aad
push
dec
or
call
test
mov
jae
in
fucom
mov
mov
mov
jg
jae
and
push
xor
sbb
inc
lea
dec
jg
addr16
or
adc
mov
dec
fistpll
adc
out
lock
adc
jnp
xchg
jmp
ffree
faddl
pushl
shlb
in
aaa
cltd
mov
addr16
aad
sub
mov
or
or
cmp
movsb
mov
repnz
pop
testb
test
sbb
in
clc
pop
out
mov
xchg
push
jae
and
stc
cmpsb
je
or
cltd
add
push
dec
dec
inc
popf
or
adc
movsb
dec
mov
imul
ss
popf
mov
testb
test
test
fwait
cmp
push
icebp
fmulp
pop
dec
imul
ljmp
xchg
mov
out
jmp
push
mov
outsb
ja
leave
xchg
out
lret
sbb
rcll
scas
in
mov
decb
inc
mov
movsl
jb
sub
mov
mov
out
pop
sub
adc
add
mov
mov
shr
dec
adc
xlat
test
sub
sub
fmull
jp
dec
jp
dec
dec
or
sub
push
pop
xor
insl
dec
add
fistpl
pop
insb
icebp
inc
bound
or
dec
mov
test
jnp
adc
fldt
push
adc
lret
jge
aas
sbb
push
fisubs
cmpsb
mov
xchg
ja
std
mov
pop
add
rorl
xor
int
lret
pop
mov
cwtl
das
ljmp
addr16
fnstcw
jg
imul
dec
xchg
ret
cmp
addr16
lods
stc
push
mov
mov
in
push
imulb
pop
pop
in
ret
inc
inc
std
push
sub
and
ljmp
sub
cmp
cld
cmpsb
and
and
mov
jno
inc
and
in
dec
mov
ret
mov
cmpl
xor
cmp
mov
xor
in
sbb
subl
stos
mov
dec
jmp
mov
ret
cmp
inc
jbe
mov
xchg
push
push
fwait
scas
jb
and
jno
cmpl
int
lret
fwait
call
in
enter
mov
dec
xchg
stos
orb
insb
push
xchg
in
sbb
mov
adc
lret
mov
stc
jae
outsl
fidivrs
es
lss
and
mov
mov
xchg
outsl
jae
enter
je
xor
sbb
leave
fwait
out
mov
rorl
mov
sbb
push
mov
iret
lahf
nop
movsl
iret
adc
xor
dec
imul
cmp
gs
jg
enter
mov
pop
pop
movsl
push
xchg
dec
clc
mov
mov
push
dec
adc
jmp
xor
pusha
xor
cmp
rep
mov
les
dec
es
aad
cmc
or
push
and
pushl
push
cmp
cli
cmp
das
jae
fldenv
and
push
mov
outsl
sahf
pop
dec
cld
sbb
dec
mov
leave
shrb
pop
cwtl
jbe
test
sub
dec
aas
push
mov
mov
add
in
sbb
arpl
dec
add
gs
daa
mov
subb
inc
jp
mov
cmpl
xor
loopne
or
fnstcw
out
jp
pop
lahf
andb
mov
push
mov
stos
stos
lcall
cmpsb
add
inc
and
rorl
sbb
sarl
jmp
xlat
insb
in
ret
rcll
jae
sbb
addb
xchg
addr16
mov
push
pop
xor
jecxz
xchg
lret
adc
shrb
scas
nop
mov
and
scas
inc
sbb
inc
inc
sub
mov
in
jae
or
scas
aaa
cmp
mov
outsl
add
jnp
lock
or
and
sahf
pop
xchg
test
stos
sbb
xor
ds
imul
jno
dec
shrb
rcll
mov
mov
pop
insl
cltd
push
shll
xlat
cmp
push
mov
push
fwait
out
lcall
mov
into
inc
fidivs
ja
mov
adc
jg
in
scas
imul
es
and
ret
mov
adc
cmp
adc
imul
lods
sub
cmp
lahf
lret
data16
data16
sbb
jb
xor
enter
or
cmpsl
push
gs
movsl
outsb
lcall
dec
call
insl
or
stc
mov
lds
stc
daa
jne
pusha
push
jne
movsl
add
pop
fidivs
cwtl
movsl
dec
push
je
ret
mov
fs
xchg
xchg
test
arpl
cltd
insb
nop
stos
jo
sub
sub
inc
and
mov
dec
loope
int
push
lret
std
movsb
data16
dec
mov
push
xchg
and
arpl
push
dec
mov
adc
xchg
popf
sti
xchg
fisubrl
adc
popa
imul
lods
jo
push
icebp
xor
loopne
and
push
hlt
data16
loop
add
in
out
mov
test
fs
xor
int3
scas
cltd
sahf
js
or
shr
outsl
mov
loopne
xchg
push
enter
pop
fiadds
cmp
outsb
into
fldl
add
pop
rolb
fisttps
out
inc
mov
jb
add
inc
fwait
ret
xchg
inc
out
jl
pusha
loopne
rol
xchg
sbb
jae
jecxz
pushf
jnp
or
cmpsb
or
lods
icebp
cmp
inc
in
push
mov
xor
daa
jno
inc
adc
mov
and
pushf
mov
test
push
leave
and
out
mov
sbb
ss
stos
dec
jecxz
stos
rcr
int3
jno
cltd
test
xchg
push
out
xor
jmp
add
xchg
dec
jae
push
xchg
jbe
jne
cmp
pop
adcb
and
add
inc
and
adc
in
mov
inc
or
int3
gs
mov
xchg
stc
and
mov
push
fstpt
inc
in
sarb
mov
jle
js
outsb
sahf
sbb
mov
sbb
push
insl
sub
push
jo
stc
adc
push
lods
push
push
jb
out
in
outsl
scas
lret
stos
cmp
mov
inc
movsb
mov
out
xchg
imul
into
sti
inc
rcr
lods
and
inc
fwait
dec
xchg
out
out
xor
push
sub
xor
xor
dec
jge
subb
es
in
xchg
xchg
push
faddp
insb
xorb
cmp
cmp
cmpl
test
mov
mov
fsubl
sbb
rol
imul
mov
xor
bound
dec
cmpsl
sbb
lfs
cmc
into
ljmp
ss
ja
pushf
fists
in
std
cmp
dec
xor
arpl
jp
push
sti
movsl
rcll
gs
iret
add
and
pop
gs
mov
mov
arpl
int3
into
jbe
dec
dec
mov
int
and
xchg
es
lock
mov
xchg
lds
cmpl
std
xor
and
mov
dec
test
sub
pushf
mov
insb
nop
test
cmp
cmp
ljmp
xor
out
mov
imul
mov
sti
sbb
push
arpl
mov
js
dec
dec
rcl
addr16
mov
fsubrp
stc
repnz
ds
cmp
lret
es
clc
adc
leave
cmp
push
fcoml
lret
cltd
push
iret
les
push
enter
jo
jmp
js
das
mov
jbe
std
mov
mov
jbe
dec
bnd
movsb
das
or
lahf
cld
xor
push
aas
add
popf
inc
sub
xor
adc
call
push
inc
cwtl
mov
add
or
or
adc
jge
sbbb
stos
and
rorb
push
bound
roll
aas
mov
xor
jns
dec
fs
xchg
cmp
out
rclb
and
stos
jns
dec
mov
jl,pt
pop
pop
inc
out
clc
and
adc
sub
push
or
push
jmp
sbb
pop
nop
ss
mov
sarl
icebp
scas
cli
loopw
rcrl
notl
mov
ds
and
xchg
shl
pop
cmp
out
repnz
je
fnstcw
and
push
out
cmc
or
fldcw
mov
aas
in
dec
add
cli
sbb
pop
xor
mov
stc
cmpb
inc
and
push
out
xchg
pop
hlt
les
push
push
pop
popa
fidivl
and
xchg
idivl
inc
push
int3
fwait
call
push
pop
fdiv
or
and
lock
cmp
jae
icebp
dec
iret
lods
in
ss
pushf
mov
call
or
or
repnz
mov
ja
lret
sub
scas
pop
mov
dec
call
push
sbb
jge
add
js
mov
das
xor
enter
mov
mov
mov
aas
loop
je
jmp
popf
out
add
cmp
rcll
pushf
sti
cmp
inc
sti
sub
adc
mov
int3
sbb
je
lods
jmp
dec
pop
pop
rorl
mov
jno
jmp
mov
xchg
in
push
adc
sub
cwtl
int3
pushf
rol
adc
out
push
ret
stos
xchg
lahf
pop
std
lea
out
test
cmp
sarl
lds
jo
shl
push
push
pop
inc
jo
in
out
push
test
mov
daa
bound
mov
or
jge
scas
je
push
xchg
inc
call
pop
les
jnp
push
js
fidivrl
xchg
xor
lcall
sbb
dec
fisttps
push
sar
lret
xor
and
adc
cwtl
ljmp
xor
not
fimull
mov
leave
cs
mov
cmp
xchg
jbe
ja
test
inc
popf
mov
sub
cmpsl
incl
cs
enter
sub
pop
xchg
ss
sbb
cmc
adc
or
sub
or
in
add
lcall
pop
in
inc
pop
lods
push
les
mov
mov
pop
pusha
popa
add
mov
out
int
in
loopne
mov
scas
outsl
or
jl
loope
je
dec
jg
pop
insl
or
mov
cmp
decl
inc
loopne
repnz
jecxz
movsb
fs
shrl
jb
dec
push
xchg
into
jmp
or
add
add
das
nop
pop
cmp
ss
dec
icebp
popa
out
cmp
mov
mov
mov
outsb
rcrl
scas
fwait
push
cld
sub
cwtl
mov
xchg
xchg
int3
lods
inc
mov
es
push
or
xor
pop
jne
adc
subl
inc
rorl
mov
cli
test
jnp
mov
fcoms
mov
and
arpl
out
push
cwtl
pop
push
addr16
add
inc
xor
pop
test
pop
imul
xchg
xor
sub
push
xchg
decl
out
xchg
inc
in
inc
into
cmc
ret
iret
xor
pop
sarl
lods
test
out
mov
pop
mov
push
mov
inc
sbb
mov
fldenv
mov
and
iret
mov
rclb
sbb
xchg
pop
fisttps
push
in
jae
mov
push
and
scas
jle
jne,pt
jne
enter
testl
inc
mov
aas
in
jmp
stc
ror
pusha
outsb
sub
inc
int3
jbe
or
mov
push
sub
dec
or
inc
bound
add
testb
jecxz
dec
repnz
jg
insl
jmp
sbb
cmp
mov
push
and
xchg
popa
sub
test
aas
gs
cmp
shrb
adc
leave
mov
push
movsl
mov
or
and
je
jno
push
aad
aam
mov
xor
popl
pusha
cmp
inc
les
xchg
xor
movsb
adc
mov
stos
mov
int
insb
mov
add
adc
in
rorb
lock
inc
arpl
mov
lret
pop
shlb
pop
ret
lock
adc
andb
xor
cmpsb
mov
ror
int
xchg
pusha
and
lods
sti
cmpsl
push
fsubrl
sub
fidivl
cmp
and
push
mov
sbb
cmp
inc
cmp
pop
ljmp
jl
mov
sub
je
popa
adcl
out
es
outsl
int
inc
adc
dec
andl
xchg
or
lods
dec
cmpsl
lret
xor
add
xor
xor
pop
and
cmp
imul
xor
mov
insl
notl
inc
cltd
enter
or
push
and
dec
cmc
stc
sub
test
mov
call
out
xchg
lret
pop
push
lret
mov
mov
sbb
mov
inc
dec
mov
inc
sbb
pop
push
add
movsb
and
and
mov
inc
out
lds
data16
lds
orl
mov
ret
jle
mov
out
jae
scas
xor
inc
jecxz
xor
and
push
push
xchg
dec
or
mov
add
mov
loop
ror
enter
push
stc
xchg
sbb
mov
push
sub
inc
xchg
mov
dec
jbe
jmp
or
and
cmc
cld
fwait
jle
cmpsl
and
ja,pn
mov
test
sub
mov
jo
jnp
orl
cltd
mov
sahf
push
das
and
sub
dec
jno
test
insl
xor
repz
adc
arpl
ds
mov
pop
lcall
loopne
push
dec
jle
popa
nop
and
and
jnp
imul
loopne
je
or
mov
cmp
rcrb
mov
lret
daa
add
xchg
lds
add
imul
and
push
or
pop
sub
adcb
pusha
cs
cmp
stos
aas
jg
mov
ss
push
addr16
sti
pop
addr16
mov
pop
rcrl
and
mov
dec
lret
fdivrs
xchg
stos
xchg
xor
daa
shl
pop
std
sbb
in
ret
sbb
add
jne
xchg
or
inc
cld
fcoml
stc
jo
call
into
aad
sbb
rolb
iret
push
cld
jns
into
loopne
sbb
dec
sarl
push
movsl
sbb
repz
mov
mov
lret
dec
hlt
sub
cmp
sbb
testl
jmp
stos
adc
lret
jp
es
int
push
int
sbb
push
out
imul
pusha
or
or
cmp
mov
sbb
mov
sti
add
fisubs
pop
pop
mov
movsb
xchg
jo
loop
insl
lcall
mov
mov
sbb
leave
data16
jno
adc
xchg
cltd
and
jg
mov
jo
pop
aad
ficoml
mov
lret
push
push
push
lea
cmp
lea
xchg
or
pop
dec
shlb
stc
mov
test
jns
push
scas
dec
lods
lahf
ljmp
mov
cld
pop
gs
xchg
bound
inc
pop
movsb
popf
adc
jl
rorl
inc
aam
adc
ljmp
inc
adc
fcoml
mov
mov
inc
mul
ljmp
cmp
popf
push
leave
neg
sub
aaa
adc
and
inc
cmc
cltd
mov
pop
das
sarl
sub
ret
loopne
ds
dec
mov
adc
sbb
cs
lret
push
sub
add
loope
test
fisubrl
lea
cltd
adc
mov
push
mov
fisubrl
pusha
xchg
inc
enter
bound
pop
das
mov
ret
lock
stos
movsb
adc
adc
insb
xchg
ljmp
imul
cmp
cltd
div
fwait
adc
pop
in
in
pop
add
notl
mov
xchg
or
dec
and
cmp
cld
cli
pop
outsl
push
divl
dec
push
daa
mov
pushl
add
and
dec
out
mov
pop
rcrl
out
daa
pop
jmp
cltd
push
cmpsb
xchg
inc
sbb
pusha
or
jb
dec
xor
fidivrl
scas
aam
and
addl
mov
leave
ficoms
pop
mov
rcll
xor
inc
fisttps
xchg
notb
imul
inc
cltd
push
inc
jle
push
sbb
movsl
enter
fisttpl
ds
inc
loopne
fsubl
sub
cmp
inc
push
push
clc
mov
fistps
mov
xchg
jne
lahf
mov
or
in
or
lods
sub
out
loope
fnstenv
out
filds
cmpsl
pop
stos
imul
xchg
xchg
aas
call
iret
lock
xchg
mov
leave
ja
mov
lea
jecxz
cltd
lock
mov
movsl
outsl
movb
loop
cmp
mov
sbb
shlb
sub
or
insb
adc
and
cmp
inc
fisubrl
cltd
sbb
gs
in
ret
cs
sbb
dec
or
out
in
and
fwait
inc
and
popa
cwtl
mov
cmp
int
std
adc
inc
adc
inc
dec
das
lret
and
popf
add
mov
ret
or
movsl
mov
dec
sbb
aam
xchg
or
and
xor
push
mov
push
mov
push
sbb
mov
xor
jbe
mov
dec
push
shll
push
or
push
arpl
pop
testl
clc
rcrl
jp
dec
pop
mov
cmp
pop
leave
mov
push
cmp
and
or
and
mov
insb
pop
fdivr
push
inc
jp
clc
push
test
mov
cmpsb
xlat
int3
inc
mov
xor
jle
shl
inc
test
adc
imul
push
jae
rcr
sbb
jl
loop
and
push
adc
imul
jl
xchg
filds
and
fnsave
mov
fst
push
xchg
or
lock
pop
callw
stos
add
loopne
xchg
mov
ss
mov
fimull
sub
push
inc
data16
into
cmp
idivl
andl
cltd
enter
jp
int
fcompl
mov
aam
or
arpl
dec
push
mov
lods
add
aas
mov
sbb
cli
xchg
mov
xchg
mov
xchg
jbe
stc
pop
sub
xor
lods
pushf
rclb
jns
lret
js
repz
or
ljmp
cmp
mov
movsb
js
adc
adc
lods
mov
push
adc
pop
dec
fisttps
jb
test
or
roll
in
sbb
aam
push
push
rcrl
iret
inc
and
ss
mov
int3
mov
jns
orl
inc
xchg
movsb
mov
jle
mov
mov
pmuludq
bound
push
adc
xorb
push
push
jb
mov
pop
adc
cmp
or
repnz
xchg
push
push
xchg
test
and
xchg
imul
arpl
push
mov
cmp
test
rorb
fs
sbb
jge
inc
mov
xor
and
or
xor
cmc
xor
shl
fidivrs
pop
or
sub
in
cs
ficompl
outsb
xchg
lods
aas
fwait
sbb
int3
dec
xchg
call
mov
scas
inc
push
fildll
pop
fcoms
sub
push
xchg
sahf
lcall
lods
mov
and
sti
mov
jg
adc
xchg
mov
or
jge
shll
dec
mov
or
or
arpl
add
repz
ret
inc
adc
pop
pop
xor
sbb
ss
push
popf
or
push
inc
mov
xchg
sbb
xchg
sahf
cltd
in
sbb
mov
ret
scas
sub
ljmp
inc
xchg
mov
pushf
nop
out
mov
pop
mov
xchg
pop
std
cmp
adc
pop
dec
cmp
iret
ficoms
xor
ss
dec
or
insl
aad
or
sbb
sub
push
fs
stos
jmp
rcrl
and
lcall
jnp
xchg
jno
test
mov
xor
repz
lods
mov
cli
push
outsl
cmovle
gs
pop
dec
arpl
mov
pushl
or
aad
ds
cld
push
arpl
cmp
aad
or
pushf
pop
pop
mov
insb
xor
push
jp
mov
pop
or
jnp
mov
xchg
jne
sub
push
testl
mov
jmp
push
and
sub
negb
outsl
sub
xchg
stos
icebp
xor
lds
mov
push
stos
jnp
mov
sbb
xchg
pop
punpcklbw
xor
pop
cwtl
xchg
cmp
xor
xchg
mov
ret
cmpsb
sub
mov
in
fadds
in
or
in
shrl
dec
cmp
or
int
lcall
pop
inc
sti
and
push
push
xchg
sahf
js
mov
es
sub
pop
in
push
jmp
adc
add
notl
xor
jmp
fidivrl
popa
or
adc
xor
mov
ljmp
inc
lcall
jecxz
mov
push
shlb
mov
jnp
adc
ja
repnz
xchg
mov
loopne
out
sub
mov
jae
mov
ss
loope
or
jnp
and
dec
or
inc
ret
and
imul
addr16
dec
pushf
pop
data16
cld
movsl
cmp
dec
sahf
stc
mov
jne
pop
inc
mov
out
add
mov
cmpsb
ljmp
shr
add
pop
mov
inc
mov
sbb
mov
inc
add
dec
and
add
mov
sbb
sahf
push
cmp
pop
jl
sti
out
pop
repnz
adc
jo
aaa
mov
sbb
sub
jae
jbe
inc
mov
lret
mov
xor
out
stc
pop
lods
xchg
aam
jbe
xchg
rclb
mov
and
cmp
inc
into
lret
mov
loope
sub
xor
in
cld
mov
fs
xchg
loope
adc
mov
stos
xor
arpl
in
dec
sub
lret
pop
imul
test
mov
xor
les
xor
dec
mov
aas
shr
and
sub
mov
mov
lret
adcl
dec
sbb
ret
inc
sub
ret
jmp
or
sub
mov
mov
aas
sub
test
ret
lret
sbb
outsb
jnp
hlt
stos
dec
test
xchg
pop
inc
or
pop
cmp
das
lock
push
mov
cmp
sub
sub
adc
and
sti
ja
adc
movsl
into
je
mov
addb
pop
xchg
je
xorl
in
das
mov
pop
aaa
test
cmp
dec
push
cltd
xor
add
push
pop
into
add
clc
push
inc
xchg
or
pop
push
mov
aaa
and
push
cmp
inc
and
mov
out
cltd
mov
mov
push
cmp
add
xchg
cwtl
into
insl
loopne
mov
mov
push
test
sub
pop
les
cmp
enter
adc
push
jbe
fs
pop
or
sub
fwait
mov
loop
inc
add
imul
stos
sbb
lret
cmpsl
sbb
lret
fcoml
mov
pop
mov
push
adc
aas
mov
sbb
cwtl
rolb
cs
test
sub
mov
cmp
push
ret
out
cwtl
aam
lcall
xor
test
push
jmp
push
or
aas
mov
xchg
xor
mov
sub
pop
jbe
decl
jo
push
aas
out
imull
inc
dec
insb
gs
repnz
loopne
je
daa
sbb
jmp
xchg
cmp
and
imul
imul
orl
clc
adcl
int
xchg
pop
pop
adc
ljmp
outsb
dec
xor
or
jmp
jg
test
pop
mov
add
ret
dec
mov
repz
xchg
in
out
dec
out
jno
sahf
add
jge
testb
aas
and
add
sub
iret
xor
out
inc
and
dec
rcl
xchg
xor
dec
inc
fwait
daa
sbb
lret
ss
shl
mov
jp
js
jmp
xchg
dec
adc
mov
frstor
and
hlt
nop
out
jb
pop
stos
lock
mov
ret
stos
or
cmp
nop
and
inc
pop
cwtl
int
enter
out
mov
jb
mov
add
add
inc
loopne
push
xor
loop
adc
inc
scas
sbb
pop
out
sarl
adc
clc
shr
mov
sti
jle
sahf
repnz
lret
ret
add
imul
dec
mov
lds
push
outsl
invd
dec
inc
test
stc
xchg
or
out
xchg
adc
push
cwtl
sbb
mov
aam
sti
imulb
jg
push
aas
xchg
and
sti
outsb
imul
pop
mov
inc
sub
sbb
int
out
in
or
lea
mov
popa
sub
cmc
leave
pop
arpl
or
ret
pop
xchg
sahf
fnstenv
cli
mov
addr16
lea
sbb
adc
aad
lods
xor
fsubrl
ljmp
adc
push
cmp
adcl
sbb
fildl
dec
jge
cmp
push
push
push
stos
sbb
xorl
sbbb
jo
inc
inc
das
cmp
sub
sbb
push
ret
dec
ss
cmp
fcoms
les
and
jecxz
divps
popa
or
xor
mov
test
outsl
int3
xlat
pcmpeqb
push
jmp
push
adc
in
mov
dec
lods
cmpl
or
enter
xchg
pusha
movsl
and
ffree
dec
push
push
clc
pop
adc
orl
jns
fldl
cmpsb
push
imul
cmp
int
movsl
dec
cwtl
pop
jecxz
mov
inc
or
incb
xchg
fisttps
inc
cmp
inc
adc
lea
pop
mov
imul
jno
ljmp
vpinsrw
std
mov
rclb
xlat
inc
xchg
pop
cltd
in
add
stos
mov
xchg
dec
lods
adc
add
dec
popa
push
fidivs
insl
pop
dec
out
repz
xor
or
push
mov
test
dec
and
push
aad
int
sub
ljmp
lret
insl
sub
div
sub
cmpsb
std
push
push
es
or
or
repnz
clc
adc
popf
rcrb
addr16
mov
iret
fmull
inc
mov
or
pushf
xor
loop
add
scas
sub
je
cwtl
dec
hlt
or
and
adc
push
push
inc
add
ret
ljmp
mov
push
sub
ror
lret
shrl
aam
cmp
mov
dec
mov
cmp
hlt
inc
imul
dec
mov
push
jge
cmp
mov
into
int3
into
pop
adc
popa
dec
flds
xor
inc
sbb
decb
lock
and
push
movsb
mov
scas
sbb
adc
dec
in
sbb
push
cli
pop
adc
ret
loopne
stc
dec
pop
mov
lret
inc
popf
je
cltd
nopl
rolb
shlb
outsb
lcall
repnz
pushf
and
xor
lods
inc
sbb
int
out
ja
sub
call
or
inc
fisttpll
je
ss
sbb
add
mov
push
push
mov
iret
fstpt
pop
push
push
and
jne
dec
cmp
adc
xor
in
pop
inc
mov
jno
les
inc
mov
add
negl
js
adc
and
jle
repz
mov
lods
icebp
test
push
xor
jnp
scas
xchg
roll
lock
dec
mov
dec
out
sbb
lcall
jb
in
push
sub
faddl
mov
arpl
sub
pushf
sarl
rcrb
push
sbb
push
test
lcall
sbb
and
shrb
loopne
lock
out
pop
sahf
jno
sbb
shlb
dec
mov
inc
repz
pop
ds
aaa
ficomps
pusha
mov
and
xchg
push
adc
or
stos
adc
nop
adc
test
sub
fistpl
daa
xor
scas
inc
pusha
movsb
shlb
jmp
push
sti
xorb
je
gs
jmp
repz
xor
xor
pop
das
or
pop
imul
lret
cmp
pop
ret
add
out
dec
xor
jns
std
in
sub
inc
or
movsl
add
negl
inc
into
orl
loope
dec
cld
pop
or
fildll
xor
rclb
ljmp
ja
ret
push
lods
push
movsl
push
pushf
sub
sub
xor
sbb
xchg
scas
mov
pop
dec
jbe
jne
lret
xor
sbb
xlat
push
lret
xor
dec
pushf
nop
filds
pop
in
inc
dec
out
imul
lock
sarb
test
mov
mov
pop
mov
and
dec
or
sbb
ljmp
js
lcall
gs
inc
dec
out
xlat
ret
dec
jl
rcrl
or
mov
pop
movsl
adc
popf
lea
or
add
cmp
or
jmp
popf
xlat
or
js
movsl
sub
push
push
cltd
push
loope
push
ljmp
pop
scas
mov
iret
jp
loope
fwait
mov
int3
outsl
nop
call
and
ret
or
xor
push
add
mov
mov
xchg
mov
xchg
enter
adc
enter
fistpll
int
jmp
jg
js
mov
insb
pop
jb
lods
push
loopne
add
xchg
push
or
cmp
push
out
dec
mov
cmp
arpl
push
push
les
movsb
pop
orb
call
mull
in
mov
adc
movsb
orl
sbbb
test
cmp
cmp
shlb
ljmp
mov
xchg
es
sub
xor
xor
inc
inc
int3
sbb
cld
fidivl
mov
or
pop
dec
jge
pop
xchg
mov
and
xchg
rolb
or
mov
out
or
push
fstpl
rcrb
aam
cmp
outsl
cmp
pop
orb
adc
andl
std
push
pop
xchg
movsl
xchg
add
pop
outsl
jns
and
ret
jae
jnp
sti
fisubrs
cltd
stos
lods
stos
sbb
pop
pop
xchg
pop
mov
pop
xchg
add
inc
adc
cmp
addr16
push
push
and
aad
dec
fxam
cwtl
adc
aaa
decl
or
adc
das
push
inc
out
iret
test
and
mov
and
data16
cmp
inc
loopne
pop
test
push
cmpsb
add
filds
cmp
sbb
shrb
xor
cmc
jb
dec
push
push
adc
mov
les
test
jmp
out
mov
in
sub
pop
lcall
decb
mov
mov
shrl
adc
jo
inc
adc
pop
dec
fs
jg,pn
adc
fsub
cmp
mov
scas
xor
jae
out
int
iret
movsl
xchg
push
mov
loop
pop
xchg
cwtl
sub
or
and
adcl
arpl
dec
aaa
pop
in
pop
adc
hlt
adc
inc
lea
fldt
fisttpl
dec
adc
fisubl
xchg
cli
pop
mov
push
js
xchg
mov
or
loope
or
imul
inc
or
and
push
inc
cli
iret
cmp
lcall
je
bswap
cmp
jmp
dec
aam
inc
cs
cwtl
fmulp
dec
lret
das
out
out
pusha
cmp
int
iret
or
sbb
mov
out
jg
mov
ret
sub
sub
sub
xchg
and
jl
pop
cmpb
sbb
lock
jge
mov
xchg
xlat
sbb
imul
xchg
aad
fbstp
sbb
mov
in
dec
xchg
push
xchg
mov
cltd
outsl
outsl
outsb
cmpb
fadds
push
les
lds
shl
push
pop
dec
push
fmul
insb
dec
or
jmp
or
fwait
shr
jmp
adcb
jbe
sub
or
dec
shrl
loope
mov
push
cs
movsb
add
test
mov
push
repz
dec
jl
fadd
dec
test
lds
pop
outsb
hlt
cmp
insb
push
cmp
dec
iret
mov
data16
popa
pop
subb
dec
shrl
stc
ror
adc
cs
pushf
xor
imul
es
or
in
add
out
jno
xchg
push
negb
js
mov
inc
add
inc
int
inc
bound
xchg
sbb
xchg
jbe
add
jp
repz
das
pop
out
test
in
sbb
sti
push
in
fwait
push
mov
les
pop
jecxz
pop
sbb
loop
xor
mov
xchg
ja
push
gs
mov
lock
push
pop
push
lods
jp
cmc
stc
push
lahf
inc
dec
xchg
rclb
shr
rorb
adc
ljmp
push
mov
adc
stc
mov
push
xor
push
xlat
rolb
jmp
push
push
sbbl
inc
in
imul
mov
adc
dec
or
mov
mov
mov
xor
sbb
push
fnstenv
xor
sarl
adc
dec
pop
cmp
jns
enter
jg
stos
adc
orl
or
sub
lock
cmpsl
jne
adc
rcll
push
mov
and
pop
nop
test
mov
cs
enter
iret
push
inc
push
roll
into
mov
aad
push
mov
loop
inc
cli
xor
sahf
mov
pop
mov
jle
xchg
jbe
add
dec
jl
int3
das
cmp
xchg
dec
addr16
cli
or
xlat
in
inc
mov
loop
enter
jbe
dec
jp
iret
sub
adc
sbbl
stos
mov
push
hlt
in
in
mov
mov
push
sub
and
inc
leave
lock
sbb
jns
pop
mov
fwait
dec
pusha
push
testb
mov
cltd
and
icebp
inc
or
pop
repnz
sbb
adc
addr16
cmpb
push
pop
mov
sub
cli
pop
sbb
outsb
jbe
imul
out
shll
dec
push
mov
in
mov
mov
out
sbb
sbb
xchg
mov
or
sysret
sbb
orl
outsb
xchg
mov
sbb
add
outsl
lods
dec
push
inc
inc
inc
je
sub
jae
lock
pop
loopne
sub
add
xchg
ljmp
push
xchg
iret
jb
jne
idiv
emms
iret
leave
fimull
push
fs
fnsave
push
adc
mov
xor
jne
inc
icebp
xor
cmpsb
or
insb
mov
and
sbb
ret
and
xor
dec
aad
lds
jnp
cmp
and
shrl
out
movsl
pusha
shrb
in
push
pop
sbb
loopne
mov
pop
les
rorl
imul
aas
mov
out
pop
and
fistpll
data16
xor
lret
xlat
mov
or
xchg
or
inc
loopne
push
repz
inc
scas
xor
pop
sahf
push
inc
loop
mov
xor
add
push
jb
mov
lcall
mov
test
mov
popf
lds
jne
rclb
aas
mov
inc
pop
out
das
mov
xchg
gs
aad
in
cmpsb
scas
les
das
cmp
adc
out
jle
xor
inc
mov
cmc
mov
arpl
inc
out
mov
push
shlb
add
mov
mov
in
sub
xchg
or
pop
pusha
and
fs
push
dec
lret
jp
cmc
push
sahf
lds
shrl
mov
push
mov
sbb
mov
jne
out
leave
sti
clc
rcrl
xor
inc
call
outsl
xlat
mov
pop
lds
dec
das
jge
mov
push
fisttpl
andb
inc
jae
or
add
xor
adc
xlat
add
movsb
ss
enter
lods
imul
cld
ljmp
mov
ret
sahf
call
mov
lea
push
mov
cs
fdivr
jge
imul
scas
ds
movsl
nop
lods
pop
or
jne
xor
rol
insl
jb
mov
jge
lahf
adc
jle
std
retw
out
pop
add
pop
js
sbb
cs
hlt
jo
jb
jae
bound
fldl
insb
jns
jg
cs
mov
pop
shrb
shrb
push
or
out
dec
mov
pop
and
or
ret
jbe
add
push
sub
hlt
test
xchg
mov
iret
sbb
mov
sub
cs
xchg
or
adc
out
insb
cli
push
inc
ret
mov
push
lea
sbb
es
lahf
inc
rclb
rcr
pop
sti
imul
fistpll
popf
mov
lods
inc
push
int
dec
mov
les
mov
in
repz
sub
and
xor
jl
mov
sbb
ret
dec
aas
xchg
adc
mov
mov
xchg
test
jbe
les
jns
or
or
subl
jmp
sahf
push
dec
loop
arpl
out
in
sbb
jns
push
insb
inc
testl
mov
mov
mov
push
sub
outsl
sahf
jno
inc
jecxz
insl
add
push
pop
int3
test
insl
push
je
loope
inc
mov
int
jp
aad
ds
scas
stos
xchg
pop
push
out
xor
or
or
gs
or
xor
mov
mov
in
jbe
pop
cmp
adc
add
xchg
push
nop
adc
mov
mov
xor
aaa
gs
mov
jo
popf
mov
aaa
nop
imul
test
inc
or
add
jl
out
cmp
pop
fs
cmp
mov
push
xor
push
or
ret
or
out
jns
stos
pop
les
push
or
push
das
and
push
mov
stc
pop
stc
fidivl
ret
mov
test
daa
fistl
jo
fwait
or
add
outsl
into
rcrb
dec
cmpsl
popa
xchg
mov
scas
aad
test
fdivl
adc
aam
push
and
xchg
fildl
lret
mov
fildll
clc
xchg
lods
hlt
jp
push
test
int3
push
push
xchg
pushf
rcll
dec
repnz
aas
das
insb
xchg
inc
push
and
or
enter
sbb
pop
mov
enter
add
pop
add
push
fiaddl
mov
mov
rorl
cmp
inc
cwtl
add
pop
cli
jno
cmc
xor
mov
add
dec
xchg
or
cmpsl
into
arpl
sub
jno
iret
repnz
push
and
popf
stos
push
add
fcmovu
icebp
or
imul
mov
xor
popf
sbb
ja
test
dec
dec
pop
push
bound
and
mov
pop
or
fldenv
daa
pop
ljmp
lock
push
pusha
inc
insb
cwtl
adc
sub
in
pop
lcall
jns
mov
js
insl
clc
sub
test
jle
sub
outsb
push
mov
inc
pop
mov
in
xchg
imul
add
push
data16
cmova
lea
call
pop
lret
lret
fcoml
les
imul
out
add
enter
jmp
inc
pop
xchg
dec
fwait
dec
mov
xchg
leave
mov
xchg
arpl
imull
pusha
cmpsb
sbb
cmpsl
mov
mov
daa
mov
adc
push
mov
xor
orb
out
rcrl
or
pop
cwtl
push
dec
shrl
xchg
pop
in
mov
push
in
xchg
cmpsl
pop
out
lcall
push
xor
popa
pushf
test
cmp
adc
cmp
sbb
adc
sbb
fldcw
mov
mov
test
sub
lret
fninit
push
enter
mov
cmpsl
out
inc
lret
int
xorb
mov
xor
sbb
je
testb
pop
fcmovne
lcall
mov
imul
sbbl
arpl
pop
cmpsb
iret
stos
jecxz
and
iret
cmpsl
sbb
mov
arpl
adc
inc
repz
mov
fcom
or
mov
mov
jp
std
xchg
xchg
mov
mov
xor
dec
aam
cwtl
clc
push
xlat
mov
test
lret
mov
xor
ss
pop
stc
and
out
sbb
lods
xchg
jecxz
bound
mov
dec
jp
unpcklps
jl
or
cmp
sahf
int
or
or
out
push
xchg
stos
aad
push
cmpsb
in
cli
sti
sub
hlt
push
shlb
mov
scas
out
fdivrp
push
push
sub
in
imul
push
sub
aad
jbe
inc
mov
jmp
cmp
out
mov
ficomps
lods
mov
and
add
arpl
jmp
pop
dec
daa
pop
sbb
cltd
enter
inc
jns
das
loop
xchg
sub
mov
inc
jns
ret
add
mov
mov
fmull
idiv
jo
cwtl
jnp
fadd
push
adc
sbb
mov
sub
sahf
jne
mov
ret
ja
popa
lock
xchg
in
ss
jecxz
jl
fldenv
lret
repz
pop
stos
pop
push
les
mov
pushf
stos
lret
mov
popf
xor
pop
loop
adc
std
dec
lock
fwait
ljmp
dec
inc
pop
int3
add
push
cmpsb
jne
mov
mov
lods
and
popa
aaa
arpl
inc
mov
jmp
aad
pushl
dec
repz
stc
orb
fldenv
jmp
les
into
mov
add
ret
mov
into
jge
xor
xchg
ficomps
stc
clc
or
sub
jae
push
jg
adc
mov
inc
adc
jl
fisttpll
fwait
or
jle
push
mov
mov
enter
pop
hlt
or
xor
mov
jmp
mov
adc
push
repz
and
xchg
mov
sub
outsb
repz
stos
xor
push
push
pop
xchg
inc
scas
xor
mov
loope
mov
add
mov
xor
mov
cld
leave
push
mov
enter
xor
adc
mov
sbb
xor
adc
cmp
fnstcw
cmc
sbb
ds
xchg
add
rorl
add
xor
mov
in
loope
jne
in
push
pop
andb
sbb
dec
or
sbb
add
imul
cmc
mov
ss
cmpsl
ds
test
or
in
cmp
jle
push
mov
mov
mov
aas
aad
into
pop
adc
dec
dec
mov
inc
ja
or
cmp
inc
orl
outsb
pop
jp,pn
cmp
sbb
inc
xlat
xchg
scas
dec
fs
xchg
pop
testl
fadds
xor
mov
out
xor
loope
sub
pop
xor
pop
push
cld
cmc
cmpsl
in
data16
or
int3
and
mov
rorb
xor
mov
mov
inc
mov
mov
jecxz
mov
rorl
pop
xor
hlt
cmp
imul
cmp
iret
shl
pushf
xor
xchg
and
add
jp
lods
sub
cltd
sub
into
pop
loopne
mov
jb
mov
sub
or
push
or
push
loope
in
call
das
dec
pusha
pushf
scas
sub
push
xor
sti
jbe
insl
jecxz
adc
sarl
and
xor
cmp
jae
inc
cmp
mov
inc
mov
lret
arpl
clc
repz
addr16
pop
mov
jge
sbb
mov
lods
mov
adc
das
outsl
xchg
sbb
pop
lret
fnsave
mov
in
sarb
and
cmp
xchg
jle
es
pop
mov
mov
bound
dec
push
push
xlat
xor
inc
cli
mov
mov
dec
sbb
loopne
xchg
cmovno
adc
dec
mov
jns
and
inc
mov
xchg
movsb
push
add
mov
js
pushf
add
pop
int3
das
mov
test
aad
cltd
or
xlat
jno
or
lcall
jo
cmc
outsl
jo
mov
pop
pop
add
cmpsb
sub
fstpt
in
xor
mov
pop
out
std
mov
or
clc
push
mov
out
repz
icebp
punpcklwd
xchg
repz
sarl
repnz
aad
push
sub
movsl
ja
cmp
gs
adc
std
inc
mov
push
cld
fidivrs
lret
xchg
pop
sub
mov
sbb
cmp
mov
push
std
add
test
push
ljmp
and
add
setb
cmp
sub
jg
call
int
cmp
pop
movsl
in
dec
mov
xchg
jb
pmulhw
push
fwait
mov
aad
add
xchg
rol
dec
push
arpl
lock
cmp
stc
dec
mov
loopne,pt
mov
pop
fs
cwtl
mov
ja
cmp
out
sbb
xor
mov
and
aaa
mov
rcrl
xchg
push
and
fwait
cmp
stos
sbb
or
pop
fdivrs
push
fbld
mov
push
dec
sarb
outsb
sar
mov
push
out
mov
jae
int
add
push
push
add
ss
lret
scas
shrb
mov
icebp
jecxz
shr
pop
and
pop
push
dec
aaa
dec
xor
loopne
mov
orl
xchg
shll
lock
rol
jnp
mov
inc
and
ret
lret
push
clc
inc
stos
loopne
int
mov
jg
fcomip
out
sub
mov
mov
mov
jne
lret
movb
xchg
mov
cmp
mov
loope
inc
ret
aad
sbb
and
xchg
cmc
inc
int
and
mov
pusha
sub
xor
cli
xlat
movsb
and
gs
lds
std
pop
jb
test
iret
adc
pop
mov
mov
pop
lret
rsm
aaa
lods
adc
mov
inc
adc
sbb
jbe
loop
fidivrl
repnz
das
or
ret
cmp
stos
loopne
or
dec
mov
js
cmp
jae
scas
mov
dec
dec
add
out
mov
xchg
insl
aaa
adc
fwait
inc
rolb
sub
shll
mov
bound
iret
lods
push
push
and
add
test
and
cmc
xchg
and
mov
cmp
jp
sub
or
je
pop
lock
rcr
fistl
mov
pop
dec
repnz
ret
adc
dec
dec
jns
addr16
and
add
scas
outsl
in
sub
aam
es
sub
mov
inc
lcall
in
jecxz
mov
and
mov
idivb
jg
or
shl
dec
adc
adc
xor
mov
shlb
push
mov
inc
add
call
jmp
sbb
jl
inc
push
std
sub
hlt
int
mov
popa
dec
movsb
je
jl
or
adc
stos
pop
outsb
imul
inc
xchg
mov
inc
xor
mov
inc
pop
dec
and
leave
pop
sbb
fstpt
cmc
popa
add
push
pop
or
adc
jae
dec
xor
dec
jmp
popf
pop
bound
or
push
and
insb
or
rcl
push
mov
or
sahf
jns,pn
sub
lahf
mov
in
pop
fcmove
shr
jb
cwtl
stos
testb
cmp
ror
std
sub
int
negb
pop
movl
leave
pop
mov
mov
ficompl
shlb
insl
jle
enter
xor
adc
pop
mul
or
and
ret
lcall
ret
inc
mov
negb
stc
lcall
pop
fcomp
pusha
mov
jmp
jl
jmp
push
jecxz
mov
mov
inc
fcompl
clc
iret
loop
cmpb
adc
mov
push
into
bound
jns
xlat
or
js
sbb
es
in
pop
aad
sub
and
int
sub
mov
xor
mov
pop
dec
or
cld
pop
rcll
ljmp
cli
sti
sub
mov
rclw
mov
imul
cmpsb
inc
das
inc
jp
aaa
movsb
imul
clc
mov
fisttpl
cwtl
cmp
shrb
push
enter
cmp
xor
daa
pop
clc
sbb
incb
shl
mov
xchg
addb
inc
jmp
leave
mov
sahf
pushf
push
xchg
scas
sbb
inc
ss
jecxz
loop
adc
pop
fildl
mov
xchg
rcr
mov
add
testb
popf
dec
push
dec
cld
mov
adc
sub
mov
xchg
sti
dec
call
jns
clc
lcall
rclb
fs
jecxz
inc
push
popf
or
mov
push
dec
fstp
mov
adc
jle
popa
int3
out
mov
ss
jno
aas
insb
dec
inc
inc
imul
xchg
pop
mov
call
mov
mov
jae
and
mov
outsb
dec
mov
adc
in
push
jne
jnp
dec
fsubs
pop
bound
push
nop
mov
addr16
adc
jg
or
imul
outsl
sbb
icebp
orl
jbe
arpl
adc
push
push
aaa
ss
xchg
cmpsb
imul
negb
sub
jecxz
es
fisubrs
jge
aas
sbb
repnz
arpl
stc
and
ffree
int3
stos
in
icebp
cmp
fdiv
fwait
sub
fs
push
or
mov
mov
pop
pop
sahf
xchg
xorb
gs
mov
mov
repz
lret
test
and
clc
out
dec
aam
xchg
int3
fnsave
rol
or
pop
iret
flds
xor
or
inc
sbb
call
out
jns
lock
mov
outsb
mov
jb
scas
inc
imulb
mov
imul
je
push
push
scas
scas
xchg
leave
stos
inc
xchg
test
mov
mov
pushf
sub
pop
lea
mov
mov
mov
arpl
js
les
aad
jmp
out
fucomi
push
mov
fstpt
push
xchg
xor
xor
push
inc
and
test
push
dec
out
adc
inc
sbb
jbe
sub
aaa
lret
cld
es
pop
mov
pop
repz
out
xorb
or
ret
test
push
cmp
and
sbb
movsl
fucomi
cwtl
push
jp
ficomps
push
sbb
lahf
mov
lcall
or
rcrl
adc
cwtl
sbb
ficoms
push
inc
and
xchg
frstor
data16
dec
cmc
enter
lahf
push
and
add
out
scas
adc
cmpsb
xlat
xor
xchg
xchg
sub
rcrb
jbe
js
shlb
mov
add
lret
jb
jns
mov
popa
xchg
cmpsl
data16
sub
cmc
insb
or
shlb
dec
or
jne
lcall
lahf
sbb
cmp
fildll
pop
mov
stos
mov
cld
test
iret
sub
sub
and
incl
ds
sbb
cs
pusha
lods
xchg
inc
sbb
leave
jmp
int3
pop
inc
cmpsl
daa
aas
hlt
sbb
inc
or
in
iret
sub
mov
lods
push
jp
aam
mov
les
inc
lcall
cwtl
add
add
add
add
add
rolb
adc
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
shlb
jl
pop
jl
daa
imulb
jnp
mov
add
mov
aad
outsl
ja
mov
inc
mov
aad
btc
dec
add
push
or
icebp
fucom
jl
shll
imul
xchg
add
cld
pop
dec
xchg
loope
add
mov
push
pop
lods
push
pusha
xor
rcrl
xor
or
mov
cmp
push
cmp
scas
roll
inc
test
imul
fwait
outsl
cmpsb
idivb
mov
dec
dec
rcrb
mov
jns
cmp
or
mov
mov
repz
dec
lahf
in
mov
mov
mov
sub
mov
scas
sub
pushl
dec
push
or
imul
ret
push
aaa
je,pn
mov
jo
je
out
sbb
push
pop
push
lods
dec
sub
xchg
push
mov
push
add
jns
jb
jnp
or
aaa
xchg
std
iret
and
push
fidivrs
jle
jp
xchg
xchg
push
push
clc
cs
lds
mov
dec
cmpsl
pop
add
mov
lahf
mov
imulb
inc
lcall
jbe
cmpsb
mov
insl
push
stos
inc
inc
xor
xor
stos
push
ja
jbe
push
pop
or
add
add
mov
mov
fwait
hlt
in
xor
inc
sub
dec
std
mov
stos
ret
test
push
cltd
mov
and
and
test
lods
arpl
push
dec
push
xor
sbb
sub
adc
xchg
push
in
bnd
push
mov
push
or
dec
shl
mov
cmp
stos
test
fisubl
mov
adc
dec
pop
int3
mov
loop
pusha
sti
mov
pop
in
jecxz
mov
add
lahf
bound
jmp
and
inc
adc
dec
addl
jns
sbb
xchg
add
add
and
fs
test
jmp
mov
push
stc
push
test
mov
push
and
jp
lcall
in
stos
push
les
les
mov
adc
enter
and
sub
mov
mov
int3
pushl
std
and
pop
popa
push
xchg
or
mov
fidivrl
enter
and
dec
inc
push
inc
aaa
xor
icebp
fcmovb
cmc
fimuls
cltd
ret
xchg
cmp
ret
cmc
sub
subl
xor
je
cltd
out
adc
cmp
into
out
jmp
pop
fisubl
stos
shl
jge
aaa
mov
repz
push
mov
xchg
rolb
xor
cwtl
xor
mov
cs
push
dec
loope
dec
sbb
sub
test
loope
dec
out
xchg
ljmp
mov
mov
mov
sarb
shlb
negb
and
pop
mov
mov
add
outsb
aaa
pop
sub
sbb
mov
mov
leave
movl
movsb
pop
addr16
xchg
jo
jle
loopne
fsubl
or
cmp
es
xchg
adc
mov
outsl
jb
fdivl
movsl
fwait
or
lea
add
fcomp
mov
xchg
mov
das
inc
xor
lahf
imul
clc
or
ret
pop
mov
fisttps
sub
int3
and
outsb
movsb
mov
cmp
fs
jmp
and
lret
lret
mov
loopne
hlt
jmp
adc
dec
insl
loopne
push
jecxz
sti
nop
fstpl
pop
sbb
dec
jo
xchg
dec
in
ds
add
jp
mov
jo
lret
adc
imul
xchg
sub
mov
dec
idivl
or
das
cmpsb
js
xor
out
int3
xlat
ret
inc
in
insb
test
sub
inc
cmp
adc
fldcw
mov
testl
xchg
dec
xchg
dec
push
dec
and
pop
xor
inc
cmc
inc
xlat
push
dec
cmp
das
sbb
mov
mov
jle
jg
popa
les
dec
add
hlt
js
mov
push
out
lret
loopne
shl
scas
iret
fstps
jno
cmpsb
call
mov
fcoms
adc
xchg
or
outsb
nop
lea
int
mov
in
jae
arpl
insb
mov
cli
js
mov
lea
arpl
inc
sbb
sub
inc
movb
mov
out
adc
jl
inc
jno
cmc
orb
lahf
das
nop
cmp
lods
fistpl
test
enter
pusha
push
shrb
adc
sbb
jmp
mov
repnz
sbb
mulb
lods
add
pop
ds
sub
fdivrl
inc
imul
xchg
mov
lahf
inc
pushf
fdivs
mov
pop
mov
test
xor
cmp
lods
test
inc
jbe
into
cltd
btc
and
test
pop
sbb
iret
movl
push
jmp
mov
mov
insl
and
movsl
popf
in
jne
mov
aad
push
jmp
daa
push
sub
xor
test
inc
xor
ljmp
lret
adc
pop
fisubrl
and
xchg
out
xchg
int
sbb
mov
outsl
mov
test
jbe
jb
ret
insb
cmp
fdiv
mov
cmp
rclb
push
mov
mov
or
enter
xchg
mov
pop
call
push
mov
shlb
xor
cli
stos
aas
xchg
and
popa
dec
aad
shl
push
mov
xchg
or
and
fimull
mov
call
in
fnstcw
mov
lret
ret
and
mov
pop
int
dec
fstps
xor
fdivs
roll
dec
sbb
mov
js
adc
in
out
test
xor
outsb
out
ret
cmp
or
call
inc
mov
dec
fsts
jnp
inc
test
imul
sub
push
fists
lfs
push
push
pop
sbb
lcallw
data16
sub
decb
cmc
scas
sbb
daa
icebp
les
jmp
out
js
push
inc
mov
shlb
scas
dec
xor
insl
fnstcw
and
or
jle
lret
cmp
mov
sbb
add
aam
mov
addr16
je
xor
into
fmul
jl
inc
lock
push
nop
lods
xchg
andl
xchg
std
shrb
inc
xchg
lahf
or
sbb
fwait
dec
xor
aas
mov
mov
push
push
mov
outsb
rolb
inc
adc
lea
arpl
and
inc
je
or
mov
mov
in
pop
lods
mov
addr16
jle
sbb
mov
shlb
mov
loope
cmp
and
les
dec
aaa
repz
xor
xchg
outsl
ltr
xor
sub
jnp
pusha
adc
xchg
and
jg
cltd
add
pop
dec
mov
sub
sahf
ljmp
cmc
pop
pop
mov
xchg
test
cld
cwtl
pop
loope
jecxz
add
push
cld
adc
mov
scas
fidivrs
mov
xor
arpl
jl
adc
cltd
jmp
push
and
add
and
pusha
cwtl
leave
pop
xlat
lcall
lock
push
imul
clc
outsb
cli
js
dec
mov
ficompl
ja
xchg
out
mov
sub
xorl
jns
int
into
mov
mov
int3
andl
mov
xchg
notb
cwtl
xchg
or
adc
shr
test
mov
push
into
jl
mov
push
in
fstpl
ds
loop
sub
mov
lods
or
sti
mov
or
mov
addr16
xchg
aad
out
or
test
fisttpl
mov
leave
mov
int3
call
int3
test
je
lahf
cwtl
sbb
adc
into
mov
and
mov
jecxz
jb
xor
rcll
shrl
xchg
insl
enter
xchg
push
inc
loopne
push
add
pop
inc
ss
push
outsl
lea
divl
repz
out
mov
loope
mov
pop
mov
or
arpl
rcll
dec
mov
push
pusha
pop
add
xchg
xchg
add
cmp
rcll
inc
xchg
imul
and
mov
aam
mov
xchg
jne
sahf
jo
xor
mov
pusha
cmp
out
sbb
js
push
push
pushf
adc
inc
divps
imul
imul
mov
push
into
jns
arpl
adc
int
xor
jge
les
pop
test
mov
or
push
jb
mov
sub
mov
imul
lea
cmpsb
adc
mov
xor
frstor
das
push
ret
push
mov
cmp
ret
lods
fwait
pop
popa
pop
mov
mov
arpl
enter
cmpsl
xchg
leave
sub
cmp
out
xchg
cvtpi2ps
pop
xchg
lahf
mov
pop
cld
imul
nop
dec
jns
rol
jns
inc
in
hlt
mov
or
data16
mov
add
sub
push
sarl
lahf
cli
dec
jg
loop
sti
jno
lcall
xchg
push
dec
mov
push
repnz
mov
sbb
test
inc
push
mov
sahf
and
cmpsb
mov
fisttps
jo
xchg
mov
dec
xchg
sti
out
mov
inc
scas
aas
mov
cs
das
xor
iret
in
pop
mov
pop
add
pop
mov
mov
add
xchg
xchg
xchg
pushf
cwtl
mov
aaa
xlat
or
movl
mov
clc
adc
push
and
pop
lret
push
adc
adc
ds
sbb
jl
jle
inc
xchg
scas
rorb
sub
mov
pop
imul
sahf
daa
lods
leave
mov
andb
test
imul
inc
lahf
fnstsw
xchg
jne
mov
mov
dec
xchg
push
and
orb
push
jl
aas
sub
adc
aam
pop
pop
inc
addl
movsl
outsl
mov
push
add
inc
jae
cmp
je
sub
xchg
jns
inc
or
mov
lock
pop
xor
dec
inc
ficomps
es
sbb
mov
movsb
and
roll
sub
in
push
iret
or
xchg
leave
addr16
inc
mov
sarb
fwait
pusha
outsl
lock
mov
icebp
inc
repnz
imul
cmpsb
gs
inc
mov
sub
out
popf
jge
fs
push
jp
jg
dec
aam
pop
ret
out
xor
add
idivb
mov
popf
add
jb
addr16
lds
inc
dec
arpl
sbb
divb
hlt
mov
or
ss
push
lret
pop
lahf
jne
add
jmp
xor
mov
mov
cli
jg
mov
jae
mov
jnp
or
mov
out
xor
scas
jp
jmp
jg
loope
fs
loop
shlb
testl
inc
and
xchg
pop
shrl
lea
hlt
mov
mov
pop
mov
lea
scas
nop
es
out
jge
mov
das
pop
add
adc
scas
mov
out
push
jo
jle
arpl
mov
ds
mov
xor
scas
fs
repz
fs
xchg
lcall
and
das
mov
jb
sbb
sbb
sub
mov
inc
add
cmp
pop
stos
xchg
call
cmp
mov
xor
mov
arpl
jmp
dec
sub
push
mov
scas
mov
in
mov
lock
jb
insl
stos
pop
aaa
repz
addl
mov
shr
shlb
jb
stos
or
sti
push
push
in
sbb
mov
inc
push
push
cmpsb
fbstp
loop
inc
in
inc
lcall
out
je
mov
in
fs
std
ds
or
movsl
daa
movsl
fsubrl
cltd
push
mov
sub
mov
andb
inc
fnstsw
pop
xchg
add
jno
lahf
add
pop
and
jns
xor
idivl
cmp
pop
jp
pop
jl
xchg
inc
pop
push
and
mull
pop
push
pop
and
repz
ljmp
pop
xchg
and
mov
xchg
xor
mov
mov
xchg
test
cmp
inc
jae
mov
ret
mov
stos
mov
loope
mov
data16
and
dec
adc
jne
push
outsb
mov
jl
movsl
or
cmp
push
xor
adc
sbb
mov
inc
in
push
ljmp
dec
pop
xor
dec
into
lret
cmp
push
ss
int3
push
fiaddl
imul
adc
rcll
sbb
mov
in
loop
flds
sbb
fstpl
iret
test
mov
jno
dec
data16
xor
sarb
mov
mov
rclb
adc
and
cmp
fidivs
mul
outsb
ds
cs
mov
dec
daa
pop
lds
and
xor
fwait
call
or
movsb
or
lock
dec
jl
pop
jg
sbb
xor
or
xor
inc
lret
xchg
bound
adc
pop
adc
or
stos
movsb
lds
sbb
xor
addr16
test
divl
mov
push
ss
mov
es
push
push
ja
jecxz
mov
mov
xchg
cmp
mov
std
loope
addr16
jmp
xchg
testb
xchg
aas
mov
sub
outsl
ds
repz
ss
add
adc
popf
outsl
and
sub
push
stos
movsl
pop
cmp
insb
dec
jmp
jb
test
mov
fcom
jo
or
lea
outsl
fisubl
jmp
out
ret
xchg
cld
shlb
push
inc
subl
push
xchg
pop
cli
ja
push
pop
lret
punpcklwd
adc
cmp
push
les
movsl
addr16
push
popa
dec
mov
xchg
xor
lcall
xchg
pop
mov
lds
cmp
and
cmp
or
or
sahf
jg
and
or
aaa
sbb
adcb
mov
jp
push
mov
pop
aas
jbe
xchg
lock
xchg
push
sbb
mov
shlb
mov
fmull
pushf
inc
add
in
xor
jmp
subl
push
shl
add
ljmp
dec
jp
ret
adc
inc
rcrb
mov
out
aaa
mov
mov
adc
inc
mov
xor
scas
xchg
sbb
push
pop
fcom
daa
sbb
pop
jnp
mov
pop
jb
xchg
inc
inc
inc
mov
in
jl
cmp
cmp
inc
outsl
int
ficomps
mov
in
adc
fstl
push
lret
pop
popf
mov
ret
cwtl
mov
add
bound
lahf
fmulp
ljmp
scas
shl
lods
lcall
fistpll
jns
mov
testb
mov
lahf
jg
int
sbb
and
pop
loopne
jnp
cmp
dec
fidivs
mov
sub
inc
push
inc
or
pop
mov
sub
inc
dec
sub
in
push
ljmp
mov
out
fbstp
pop
pushf
inc
mov
pop
adc
mov
test
fnstcw
inc
cmpsb
mov
and
jnp
popa
sti
shrl
add
and
fnstenv
data16
sub
leave
lods
lea
push
enter
jle
dec
fmuls
xlat
mov
pop
sbb
out
hlt
mov
push
adc
bound
ja
dec
fdivrs
dec
ret
movsb
cld
dec
inc
sbb
push
sbb
repz
inc
ret
test
lods
sarb
cmp
mov
xchg
mov
adc
xchg
pop
jp
adc
outsl
outsb
mov
xrelease
aaa
mov
mov
mov
dec
pop
sub
aam
xchg
ja
scas
repnz
push
arpl
adc
mov
adc
addr16
jl
adc
loopne
sub
sbb
outsb
and
pop
pop
inc
cmp
mov
or
in
xor
mov
testb
adc
mov
shll
test
jno
jnp
ss
ljmp
aad
jae
scas
jo
xchg
inc
push
clc
mov
mov
jbe
mov
sbb
xor
mov
std
mov
lods
movsb
mov
daa
mov
mov
fidivl
lea
sub
jle
icebp
out
ficoms
ljmp
lock
cmp
inc
cmp
frstor
in
scas
cwtl
pusha
cmp
mov
inc
pop
fbld
icebp
pop
scas
out
loop
mov
cmc
lea
xor
aad
cmp
or
mov
fadd
sbb
inc
xchg
ds
repz
and
push
sahf
out
jae
aam
fwait
out
mov
movsl
xlat
sbb
pop
aas
sub
pcmpeqb
movsb
xor
sub
psadbw
mov
cmp
inc
movl
stos
fs
in
add
loopne
lahf
sahf
and
test
leave
mov
std
psubd
cmp
dec
imul
sbbl
cs
and
outsb
std
scas
pusha
sbb
lock
sub
sbb
jmp
cwtl
jo
xchg
aad
or
ds
je
jns
arpl
inc
movsl
movsl
or
mov
or
add
sub
or
inc
pop
push
sub
popa
and
jecxz
icebp
jb
dec
enter
daa
jno
enter
sti
jl
jae
mov
and
mov
dec
imul
xor
dec
mov
adc
xchg
or
mov
mov
adc
jnp
arpl
xor
or
jle
or
cmpsl
jno
jecxz
shl
jo
mov
daa
fistl
iret
push
jmp
ret
stos
repnz
cmp
dec
push
fistps
or
dec
xchg
mov
fwait
inc
xchg
inc
mov
cmp
mov
pop
scas
mov
in
push
push
and
mov
mov
pop
xchg
lds
and
fldl
lods
xor
test
cwtl
cltd
lret
nop
mov
xor
enter
xchg
mov
cmp
jae
adcl
outsl
jnp
or
jle
fmul
and
std
iret
insl
je
add
aam
fsubrl
div
push
jp
cmp
in
je
jmp
jmp
adc
lret
and
mov
les
jno
popf
in
inc
lahf
push
insb
xchg
sub
mov
push
ds
push
xchg
mov
cwtl
loopne
ror
dec
sbb
push
outsb
shll
add
shlb
cmp
out
sub
test
cmpsl
les
sub
bnd
mov
add
mov
push
mov
xchg
rcrb
sahf
sbb
inc
cs
or
pop
adc
mov
jmp
adcb
loope
cmpsl
outsl
outsl
int3
int
sub
cld
push
inc
jae
mov
gs
xchg
pop
sbb
pop
sbb
test
and
mov
inc
daa
xchg
push
scas
pop
mov
or
cltd
mov
fadd
pop
xor
jmp
mov
lock
cwtl
clc
into
adc
cmp
jne
lahf
push
stos
sub
push
pop
add
xchg
cmp
add
adc
mov
dec
mov
in
mov
popa
dec
pushf
enter
xor
dec
shr
roll
notb
ja
cmp
mov
and
es
mov
repnz
inc
jno
lret
mov
fnsave
xchg
jl
fisubs
sbb
movsb
lods
dec
cmc
or
lods
jge
jne
lahf
mov
sbbb
jo
push
out
sarb
xor
and
adc
add
or
ret
fucomi
jle
push
in
and
xchg
cltd
sub
icebp
cs
rcr
sahf
xor
fnstcw
repnz
mov
and
mov
test
push
adc
icebp
cmp
and
leave
push
das
dec
push
andl
out
jbe
filds
imul
sub
fisubrs
xchg
stos
repnz
or
pop
adc
xchg
pop
xchg
inc
andl
repnz
les
ljmp
cli
or
inc
imul
dec
sbb
sbb
icebp
add
sarb
sahf
xor
xchg
sbb
ud0
pop
xlat
scas
fidivs
cs
pop
jmp
sub
mov
and
into
out
jo
xchg
mov
loope
lea
ss
mov
sahf
ja
jge
pop
mov
mov
mov
cmp
mov
ss
or
mov
bound
daa
push
mov
adc
or
inc
in
adc
cmp
xchg
sbb
adc
mov
popf
jle
pop
test
dec
cmp
repz
push
pop
aam
push
mov
in
ja
jg
in
sbb
fnstcw
ret
fwait
in
dec
ljmp
je
mov
loope
pop
jle
test
outsb
aad
jge
fnsave
sbb
rorb
in
inc
loop
stos
jno
fdivl
or
mov
pop
leave
pop
mov
les
or
push
push
xchg
mov
outsb
fcomps
jle
jge
loopne
push
lcall
mov
mov
pop
ja
cmpsb
push
rolb
mov
xchg
test
cld
or
cltd
popf
sti
push
pop
jno
fldl
mov
cli
leave
aas
sub
lds
fcmovbe
nop
dec
sbb
pop
xlat
loope
jns
repnz
push
add
orb
sub
test
ja
out
xor
jl
cli
icebp
sbbl
das
pop
adc
and
aad
jg
jl
xchg
in
pusha
repz
adc
inc
dec
ret
rorb
sub
mov
popa
add
sbb
mov
sub
fmull
stos
cmp
stos
jnp
rcll
inc
pop
push
xchg
sbb
cmp
call
fmuls
fnstsw
movsl
xchg
push
cmp
cmpl
mov
test
push
popa
or
push
jge
mov
add
cmpsl
repnz
fisttpll
in
inc
xor
mov
xor
sub
daa
leave
adc
cld
xchg
fwait
scas
cld
push
mov
add
cmp
jbe
popf
jns
mov
jp
gs
mov
xor
push
stos
dec
xchg
jb
sahf
notb
inc
jb
pop
ja
test
mov
dec
xor
sahf
fwait
mov
popf
cld
aaa
dec
test
dec
int
add
jle
pop
push
jp
and
mov
and
jle
cmp
das
outsb
shld
sub
scas
jns
adc
jns
repz
pop
pop
sub
pop
xor
mov
ss
pop
jp
xor
dec
pop
lcall
mov
sar
xchg
rcr
decl
fcoml
jae
mov
shrb
inc
imul
dec
sbb
push
inc
mov
stc
lock
cmpsb
sbb
jne
arpl
push
sbb
mov
in
es
lock
cs
adc
jne
outsb
lea
gs
das
lods
or
mov
xchg
in
loop
and
cmp
fisubl
cmp
sbb
fisubl
fsts
or
add
cmp
ds
hlt
add
add
dec
inc
inc
cmpsl
imul
push
mov
dec
cmpsb
push
aam
fdiv
int3
xor
dec
rclb
das
sub
sub
fmul
pop
adcl
lcall
and
test
lahf
testb
cmp
pop
mov
cs
sbb
or
dec
sahf
ret
dec
jp
mov
repnz
mov
xor
sub
int
cmp
jo
aad
jbe
aad
ss
test
add
xchg
adc
jo
and
sub
out
mov
in
push
dec
pusha
loopne
outsl
jg
stos
dec
stos
mov
mov
dec
jl
mov
dec
test
mov
ja
test
scas
push
mov
push
push
mov
in
and
mov
fsubrl
jmp
cltd
in
sub
mov
xlat
pop
pop
ds
sub
pop
xor
sub
mov
xchg
cmp
push
rcrl
jle
mov
dec
jno
popa
test
aas
mov
sbb
sbb
addr16
xor
xlat
mov
popf
movsb
jecxz
adc
fadd
xor
aad
je
or
and
jl
scas
xchg
and
push
adc
test
cwtl
les
jmp
jnp
sbb
pushf
sub
mov
aas
repz
pop
mov
push
mov
mov
push
int
lret
ficompl
mov
pop
outsb
outsl
popf
js
push
outsb
add
mov
sbb
xor
aaa
ja
clc
jb
jmp
bound
inc
cmc
xor
daa
cmp
pop
xor
adcb
or
popa
jecxz
cmpsb
cmp
cmpsl
or
incb
fbstp
xor
inc
sbb
lcall
inc
pop
cmpsb
insl
outsl
or
nop
mov
mov
insl
dec
dec
sub
cmpsl
daa
fcom
dec
sti
bound
push
cmp
aad
test
pusha
loopne
negb
lahf
mov
cmp
lret
xor
mov
fstl
leave
sbb
pop
cli
sahf
add
in
fiadds
push
mov
in
push
fcoms
unpcklps
lods
stc
jnp
xchg
notb
add
inc
ret
leave
pop
fildll
add
loop
or
dec
dec
mov
stos
push
or
mov
push
adc
push
push
fldt
sub
push
jmp
push
adc
outsl
repnz
mov
sbb
mov
add
mov
cmc
cmp
xchg
cmpl
divb
lods
adc
cmpsb
insl
jmp
pop
or
das
jnp
loopne
aad
invd
xor
push
in
mov
sarb
push
lahf
out
xor
cmp
pop
xchg
push
xchg
push
cmp
xlat
test
out
out
xchg
add
lods
sub
fadds
je
bound
cmp
repz
loope
add
iret
sub
pop
xlat
jge
jg
fildl
scas
lock
sahf
andl
and
fidivrl
cmp
jp
jl
in
daa
pop
dec
in
imul
repnz
jecxz
out
pop
cmp
pop
jp
pop
aaa
stc
in
jge
sub
lahf
pop
mov
cltd
cmpsb
inc
mov
movsb
cmp
testl
xchg
adc
sbb
repz
jg
das
add
inc
adc
les
or
test
push
arpl
loopne
xchg
mov
imul
gs
xor
addr16
cltd
adc
sarl
bound
or
and
cmp
mov
fistps
add
ja
cwtl
mov
push
test
lret
xchg
cmp
push
addr16
inc
lcall
in
push
dec
les
mov
in
jg
sub
push
aam
mov
test
das
pop
and
shlb
cwtl
or
aas
in
or
dec
xchg
aam
outsb
sti
inc
call
in
out
or
and
pop
pop
popa
xor
xchg
xor
mov
xchg
out
mov
arpl
bound
call
pop
lahf
mov
sbb
add
pop
lock
das
mov
insb
pop
pusha
ds
fdivp
add
and
and
push
cmpsl
cltd
vrcpss
pop
movsl
mov
push
xchg
pop
mov
les
enter
mov
addr16
imul
aas
and
mov
push
xchg
cmpsl
inc
cli
push
jg
and
or
rcrl
movsb
aaa
or
sbb
rcl
pop
xor
cmp
jbe
pop
and
xchg
jle
bound
push
lods
dec
ja
das
mov
sbb
aam
andl
cmpsl
icebp
shl
xchg
push
or
fistpl
push
inc
sbb
jae
dec
out
mov
loope
leave
push
and
mov
clc
inc
add
lahf
xchg
stos
jmp
lcall
inc
mov
inc
stc
aad
pushf
rol
int3
inc
inc
adc
test
xchg
stc
cmp
mov
push
dec
pop
push
and
movsl
xchg
xchg
bound
stos
ret
xchg
shrl
test
xchg
push
mov
jno
out
sub
push
add
sub
repnz
aad
fldenv
jmp
or
xchg
mov
mov
push
adc
js
cmovge
lcall
mov
or
push
js
xor
jne
jo
fimull
lock
mov
mov
pushf
fs
je
jo
dec
sbb
push
push
loopnew
adc
xor
jbe
pusha
daa
cli
sub
and
or
movsl
leave
mov
loope
push
cmc
fs
adc
dec
inc
jb
rcrl
arpl
repz
out
or
adc
add
lock
sti
in
inc
or
mov
scas
adc
pushf
sub
add
sbb
mov
adc
test
xchg
mov
enter
and
stc
in
loopne
mov
pop
out
sbb
cmp
push
xor
insw
sbb
mov
add
scas
mov
mov
repz
xchg
adc
lahf
mov
sarl
sbb
pushf
pop
mov
loop
mov
mov
scas
outsb
insb
cmp
mov
pop
jge
gs
sbb
lahf
dec
mov
int
mov
push
shll
rcrb
xchg
lret
subb
cmp
hlt
add
rorl
xchg
ror
clc
outsl
and
mov
cmp
push
pop
popa
ret
stos
push
popa
les
cli
into
pushf
jle
sub
pop
shlb
jb
or
insl
jp
and
mov
mov
ror
imul
xor
mov
jb
mov
and
mov
xorl
sahf
cmp
pop
mov
imul
orl
xor
movsb
inc
nop
out
pop
sbb
add
xor
ret
fcmove
ds
addr16
jmp
mov
xor
jnp
push
mov
shll
mov
adc
repnz
mov
jge
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
adc
jl
dec
pop
jl
nop
cmp
cmp
mov
fisttpll
out
cmp
sbb
js
push
es
inc
icebp
push
mov
je
rcl
shll
sahf
out
ja
adc
adc
sbb
mov
fdivrl
stos
fstpt
or
inc
pop
adc
ja
push
mov
subb
push
das
push
mov
pushf
dec
sarb
lods
dec
subl
push
les
or
dec
std
dec
pushl
je
shlb
dec
mov
test
sbb
pop
mov
mov
shlb
mov
mov
shrl
sbb
pop
call
adc
cmp
lea
fists
outsl
jecxz
mov
mov
aad
push
rol
out
add
xchg
fsubrs
mov
outsb
jmp
sub
lock
xorl
jo
mov
test
out
popf
insl
push
sbb
scas
pop
sarb
lahf
mov
inc
or
repnz
xchg
mov
aas
lret
lret
loopne
cmp
mov
pusha
insl
lcall
ss
pop
pop
jg
xlat
dec
or
sti
jmp
inc
mov
ror
cld
sbb
scas
mov
inc
imul
sbb
mov
push
and
in
mov
jo
sar
popa
fbld
and
dec
inc
stos
data16
sub
pop
pop
xchg
lock
add
cmp
mov
stc
lret
fs
in
sbb
mov
daa
shl
rcrl
mov
xor
mov
mov
aas
inc
jbe
inc
arpl
cs
into
out
lahf
push
pushf
cmp
push
arpl
popa
cld
ret
sarb
das
out
push
push
jae
xor
divl
std
les
xchg
xor
cmp
adc
and
mov
adcl
fmuls
callw
loope
rcr
fisttps
ret
jge
jp
xchg
es
mov
aaa
xchg
cs
pop
and
sbb
push
sbb
lret
mov
inc
cmp
lret
divb
cmpsb
jle
cmpb
jo
in
lds
add
int3
cmp
xchg
ret
add
retw
loope
xor
les
subb
cwtl
pop
movb
ds
inc
pop
test
pop
cmpsb
out
push
lods
inc
les
pop
add
adc
aad
xor
pusha
pusha
adcl
fwait
and
and
call
adc
cld
in
adc
xchg
xchg
xor
aam
mov
inc
xchg
push
icebp
inc
js
pushf
sbb
jmp
mov
cmpsb
jg
dec
shlb
sub
pushf
aad
jecxz
mov
mov
pop
cmp
jp
add
mov
jle
imul
outsb
cmp
shrb
loopne
pop
xchg
or
sbb
pop
adc
cmp
add
or
dec
out
push
sahf
lcall
push
mov
xor
adc
lock
aaa
mov
stos
dec
das
push
add
push
sub
dec
add
lods
dec
add
fwait
pop
test
cmp
sub
fstpt
movsl
and
dec
jae
test
jge
aaa
addr16
shrb
rolb
adc
mov
sbb
xor
mov
push
cltd
shll
scas
in
pop
pop
add
iret
or
adc
mov
mov
xchg
cwtl
xchg
mov
ret
jne
pop
xchg
fcmovu
cmp
scas
loope
inc
xchg
repz
mov
cmp
push
call
fmuls
dec
mov
mov
mov
inc
dec
xor
cmp
leave
dec
dec
mov
cli
adc
aas
jmp
in
lret
adc
sub
and
cmp
dec
fildll
jne
lea
movl
call
add
mov
adc
sub
lock
adc
popa
mov
pop
and
push
iret
lea
fistl
dec
sbb
scas
subl
hlt
ss
mov
nopl
loop
xor
inc
or
cmc
sub
movsl
xchg
cmpsl
fisttpl
jp
inc
std
imul
cld
xor
push
fcom
jnp
pop
pop
movmskps
cmp
les
rorl
jmp
les
insb
bndstx
add
push
in
mov
jle
repz
lea
out
xor
jl
stc
aad
jle
int
aas
in
in
rcrl
push
pop
sarl
pop
aad
sub
lret
sbb
jmp
aaa
idiv
fstp
xlat
pop
fdiv
xor
and
or
nop
inc
inc
cs
mov
cmp
std
mov
pop
bound
stc
or
andl
notl
mov
rcll
sbb
or
rcr
push
fsubrs
push
fs
xchg
inc
rorl
xchg
sub
pop
jne
test
push
jne
mov
cwtl
and
nop
mov
cmp
adc
jmp
cmp
jecxz
add
loopne
lret
push
inc
lds
mov
mov
push
jbe
mov
imulb
and
fnstcw
add
out
cs
mov
mov
test
fsubrl
ret
sahf
pushf
fstl
fstpl
jb
iret
jo
fsubrs
mov
arpl
add
lds
clc
sbb
dec
ljmp
dec
or
xchg
cmpsb
imul
or
inc
xchg
mov
cmp
adc
dec
popl
cmc
pop
pop
or
mov
mulb
aaa
cmp
lahf
mov
lret
lods
push
mov
inc
dec
insb
cs
mulb
jo
mov
mov
cmp
aaa
out
mov
xor
test
sbb
or
insl
jne
xor
call
jae
pop
xor
sub
in
movsl
cmp
add
jb
xchg
jno
ret
cmp
cmpsl
inc
mov
in
inc
out
cli
inc
daa
fs
enter
or
push
cmp
pop
or
mov
or
jecxz
sahf
jns
lcall
mov
push
out
shr
adc
jmp
fsubp
cmp
xchg
push
mov
popf
jnp
pop
jae
mov
mov
or
xor
xchg
mov
out
ret
mov
pop
mov
stos
xor
mov
aad
mov
mov
sbb
mov
mov
xor
pushf
push
adc
out
inc
fs
fcoml
mov
out
sub
jns
xchg
cld
sbb
xchg
and
test
dec
leave
xchg
lret
dec
adc
push
dec
call
pusha
mov
push
mov
subl
jecxz
adc
rorl
add
cmp
sub
fs
xor
mov
je
cmpsl
movsl
jb
cmpsb
out
aas
push
sahf
pop
pop
pop
shrb
pop
addb
pop
jbe
fdivr
xchg
mov
and
popa
xorb
xor
cwtl
outsb
out
enter
stos
fnstsw
stos
dec
pushf
fcmovb
or
das
je
xor
addr16
xchg
hlt
mov
je
and
lcall
int3
out
ret
pop
repnz
add
sub
imul
das
cmp
xor
sbb
jnp
jno
outsb
jle
mov
pop
mov
add
icebp
jb
cmpsl
loop
cs
jp
in
nop
lds
lret
in
push
inc
or
jmp
mov
out
xchg
xor
icebp
inc
test
imul
loope
pop
dec
sub
out
mov
push
out
loop
jl
jne
jp
aam
cltd
cwtl
cmp
inc
imul
pop
aaa
pop
add
sub
add
mov
icebp
out
inc
clc
std
mov
mov
adc
lds
fcompl
jno
ficomps
push
shlb
call
or
jno
mov
cld
adc
or
jmp
ret
popa
call
dec
aam
lret
jb
test
sbb
icebp
xchg
loop
jl
xchg
repnz
ja
add
sub
ret
lret
es
push
dec
pop
inc
cmp
jno
outsl
shlb
in
test
xchg
dec
xor
in
cmp
xchg
sub
pop
sbb
adc
shrb
mov
in
enter
xor
sahf
es
add
testb
jle
hlt
in
es
in
lahf
push
cmp
mov
mov
call
lcall
daa
jl
jmp
mov
add
pop
cmp
iret
clc
push
sub
add
jge
cmp
sub
les
xlat
mov
pop
mov
adc
aas
push
xchg
xor
es
inc
push
push
add
adc
dec
or
mov
cmpsb
mull
mov
mov
xchg
push
enter
test
lcall
inc
cmp
mov
mov
lock
cmc
aam
dec
aam
mov
mov
and
mov
inc
rclb
mov
add
into
mov
ror
clc
adc
sti
add
ja
push
in
push
xchg
icebp
jbe
mov
jle
sub
jae
sbb
popf
and
pushf
inc
cmp
sahf
jnp
push
push
adc
mov
enter
pop
adc
sbb
imul
mov
push
cmp
cld
mov
insl
mov
fidivl
movsb
cmp
and
insb
jmp
xor
cmp
movsl
sub
mov
xchg
iret
negb
and
insl
mov
pusha
orb
xor
out
clc
scas
outsl
xchg
inc
sahf
pop
add
adc
sbb
mov
inc
jns
or
imul
fcmovne
sub
sub
or
ret
js
dec
jno
inc
test
pop
lcall
adc
add
mov
pop
lcall
outsb
push
jecxz
mov
xchg
jl
icebp
stos
popa
xchg
adc
or
shl
mov
xlat
sub
pusha
aam
push
mov
icebp
dec
in
scas
mov
shlb
lcall
jb
add
jle
std
pop
mov
sbb
push
les
sub
push
mov
iret
scas
test
mov
cld
mov
fiaddl
mov
lcall
lahf
jp
lret
adc
das
sub
xor
movsb
loope
xorl
iret
movsb
push
shll
dec
cld
div
cmp
add
dec
jae
cmp
pop
jl
ret
xchg
sbbb
ljmp
mov
fsts
jp
dec
xchg
sbb
cmp
xlat
jmp
adc
pop
xor
test
das
daa
lahf
je
outsl
inc
cli
cli
push
bswap
sbb
test
adc
test
daa
lock
mov
divb
test
orl
jl
jbe
jge
int3
fnstcw
xor
jno
mov
push
dec
in
jns
xor
pop
cmpsl
icebp
xchg
mov
pop
sub
jp
mov
jae
xchg
or
or
cld
arpl
push
or
cmpsl
jo
mov
mov
nop
popa
dec
jg
jbe
inc
loopne
adc
scas
aaa
aaa
mov
push
mov
pop
aas
std
push
pop
out
jge
pop
movsl
jns
int
imul
xchg
xorw
jb
lret
rcll
push
imul
mov
cmp
dec
je
mov
cmp
mov
lret
sub
push
shrl
aam
pop
pop
mov
out
data16
and
sub
or
nop
pushf
push
sbb
popf
ja
mov
and
mov
ss
inc
std
cmp
stos
mov
std
push
in
and
sub
xor
test
loopne
std
xor
mov
mov
in
sti
adc
int3
sub
xchg
xor
repnz
xchg
xchg
iret
jb
xchg
lret
mov
jbe
push
dec
mov
sub
test
repnz
outsl
jg
mov
pusha
movsb
sbb
mov
jl
stc
cltd
imul
jo
pop
adc
roll
cli
add
dec
dec
mov
out
fxch
inc
add
mov
lock
ljmp
push
or
or
xchg
mov
sbb
lea
cmpsb
aam
mov
aas
scas
test
in
pusha
jne
mov
dec
test
out
jle
mov
dec
iret
sbb
xchg
lods
pop
ret
scas
push
shll
mov
cltd
dec
jae
sbb
dec
gs
enter
sub
inc
aaa
mov
repz
xchg
push
ja
in
mov
loope
in
inc
insb
inc
mov
jo
pop
fs
or
xchg
repnz
in
push
mov
daa
ds
inc
addr16
in
cltd
mov
test
les
adc
mov
or
lahf
adc
pop
xor
pop
lret
cmc
pop
popa
or
sbb
movsb
add
xchg
fnstcw
or
sub
div
loope
mov
and
pop
mov
dec
xor
mov
out
adc
pop
jo
pop
out
mov
push
mov
ds
dec
cmpsl
shll
mov
mov
ja
push
ss
scas
test
push
fidivs
cmp
pop
les
mov
or
add
adc
rorb
mov
or
add
dec
jg
sahf
sub
shll
imul
andb
pusha
in
pop
adc
push
pop
pusha
pop
dec
scas
enterw
and
rorl
pop
pop
jno
cmp
subb
clc
imul
lahf
lock
and
jp
int3
push
rorl
pop
ficoms
push
shll
xchg
or
mov
adc
outsb
and
ljmp
jns
cli
pop
fcoml
loope
mov
pop
push
cmp
insl
scas
lea
adc
xor
cmp
cmp
xor
mov
fdivrl
loopne
mov
add
in
jge
jno
mov
cmp
mov
or
xchg
movsb
imul
push
jmp
xchg
subl
test
into
fnstcw
scas
cltd
lret
pop
xorb
scas
mov
test
add
adc
insl
sbb
shlb
and
jnp
inc
incl
jne
sbb
mov
fnstcw
into
jl
lahf
lea
xchg
fwait
subb
mov
pushf
or
inc
fnstsw
jns
pop
aam
or
jno
stc
mov
lfs
cmp
test
dec
mov
decl
ljmp
xlat
ss
mov
daa
das
test
dec
sbb
iret
or
aas
sbb
mov
adc
inc
or
xchg
test
mov
rcl
adc
pop
inc
stos
pop
fisubrs
cmpsl
sbb
cmp
xor
aas
mov
dec
iret
divl
imull
push
loope
sahf
mov
dec
xchg
mov
dec
data16
sbb
mov
sbb
xlat
inc
or
jl
jne
insl
stc
fnstcw
dec
and
push
sub
inc
out
cmpsl
ss
push
int3
leave
mov
mov
pushf
dec
xor
sarb
sbb
push
addl
jecxz
movsb
nop
add
or
xor
arpl
dec
or
xor
mov
or
fisttpl
ds
mov
cmc
mov
stos
adc
aas
push
imul
frstor
es
subb
imul
sub
xchg
lahf
movsb
loopne
cwtl
xchg
in
push
lock
arpl
inc
sbb
cs
push
sbb
fs
test
xchg
sub
xchg
xchg
int
das
ret
sbb
aam
jbe
lcall
dec
in
pop
ret
fistpll
test
into
cmp
cmp
mov
into
ja
addl
cmp
jg
or
mov
daa
jge
and
mov
scas
mov
lds
out
andnps
std
ret
loope
repz
fdivrp
xlat
imul
push
insl
sub
scas
xchg
std
out
addr16
pusha
dec
push
pop
jbe
pop
sbb
cs
loope
pop
insb
cltd
aaa
mov
mov
push
in
test
arpl
into
rorb
es
pop
inc
cmp
gs
int
sti
and
mov
das
flds
mov
sub
sub
push
mov
aas
lret
ss
sbb
sahf
adc
clc
dec
arpl
lock
incb
or
push
cwtl
jmp
es
mov
xchg
js
xchg
mov
add
xor
lock
rclb
add
lock
push
xor
aam
sub
mov
inc
sbb
addr16
jbe
dec
sub
push
aaa
add
dec
aas
ret
adc
aad
imulb
cmpb
or
lret
clc
jp
or
jg
adc
dec
add
aam
xor
testl
out
push
xor
ret
gs
cmpsl
mov
lods
inc
sub
add
popf
loope
and
in
pop
jns
mov
mov
stos
add
into
push
xchg
int3
sub
pop
imul
std
int3
cwtl
inc
pop
cmc
fdivl
mov
mov
and
push
in
xchg
jl
stc
call
ljmp
jb
fnstsw
fstpl
mov
fdivrl
out
out
mov
add
and
imul
rol
push
sub
sahf
xor
testl
pop
sbb
jbe
push
outsl
push
adc
jecxz
lock
mov
dec
mov
xchg
inc
cmp
xchg
ret
cli
aaa
and
mov
mov
ror
insl
inc
pop
inc
fs
ret
shll
rorb
aas
mov
pushf
xchg
jmp
icebp
mov
lds
sar
int3
push
jge
jno
in
popa
outsb
aam
sti
push
je
testl
lods
data16
sbb
sbb
mov
mov
xchg
inc
lods
fidivrs
fisubs
js
sub
fstpt
sbb
mov
shll
hlt
fnstenv
push
inc
mov
and
or
fdivp
jle
clc
push
push
scas
out
std
in
cmc
dec
and
sbb
enter
fcoml
scas
fmulp
xchg
jl
loope
sahf
mov
pushf
fstpl
mov
xchg
sbb
add
outsb
adc
sbb
les
and
inc
pop
sub
mov
jo
or
scas
jg
mov
adc
cmp
and
xchg
mov
dec
mov
or
loope
pop
cld
test
mov
test
cwtl
in
aas
sbbl
jne
jnp
xchg
sbb
xchg
or
mov
or
push
fwait
sbb
or
jb
adc
and
mov
jbe
pop
fidivl
addl
hlt
mov
inc
xor
sbb
dec
xchg
aaa
inc
and
push
scas
sub
int3
jno
cmpsb
gs
sub
xor
push
xchg
push
mov
inc
xchg
mov
xlat
lods
cmc
out
xor
sub
orb
imul
xor
sub
mov
xor
mov
jbe
mov
shrl
std
dec
aas
xor
stc
cmp
add
mov
xchg
inc
jo
xor
inc
and
xchg
cmp
cmpsb
rorb
jbe
bnd
sbb
ljmp
push
fwait
iret
mov
icebp
popa
jbe
scas
mov
sbb
sub
push
insl
scas
adc
jl
dec
btr
in
adc
mov
jmp
inc
popa
lods
xor
push
xchg
mov
jns
push
pop
dec
rcll
or
data16
mov
adc
popa
fidivrs
mov
hlt
sub
fucomp
pop
hlt
shlb
pop
pop
test
pop
dec
mov
aam
lock
lcall
mov
daa
or
and
cmc
scas
loope
push
and
xor
test
jecxz
sbb
gs
cmp
ret
repnz
test
xchg
sbbb
pop
fisttpll
jo
notl
jmp
dec
inc
in
mov
movsb
mov
adc
cltd
fs
pop
sub
xchg
mov
adc
dec
mov
aas
rol
insb
xor
dec
cmpsb
xor
popf
mov
arpl
sub
and
movsb
cmp
out
sub
les
sub
xchg
dec
mov
ret
lods
fsubl
stos
fistl
jno
into
lret
jb
outsb
popa
nop
mov
insb
push
fscale
sub
pop
jnp
adc
push
in
in
jbe
loope
add
xchg
idivl
sub
dec
rorl
lods
mov
mov
mov
loope
sbb
popa
iret
dec
lcall
or
scas
insb
pop
dec
jne
std
dec
in
loop
pop
fnstsw
andl
push
jmp
lcall
and
push
mov
icebp
inc
enter
lods
arpl
pop
popl
lret
fdivl
jnp
or
jl
arpl
cmp
jecxz
push
cmpl
hlt
in
cli
aad
test
jnp
movsl
jecxz
cmp
daa
les
aad
pop
push
movsl
jmp
mov
cmp
inc
dec
and
adc
and
push
mov
and
xchg
push
push
int
mov
icebp
jge
add
jnp
hlt
push
shlb
fnstenv
lock
mov
lods
cmp
or
xchg
mov
rep
js
jo
fiaddl
int3
fwait
in
sbb
pop
jb
push
cmpsl
cwtl
xor
fwait
push
jns
bound
add
push
in
pushf
cltd
cmpl
mov
aaa
mov
push
push
es
dec
push
adc
jb
or
bound
xor
cld
out
inc
fiaddl
movl
mov
fs
adc
jno
movsl
out
movups
insb
loope
daa
adcb
sub
cmpsl
jo
mov
xor
shrb
and
inc
call
mov
in
fbld
sti
xor
bound
insl
xchg
push
test
cmovns
adc
pop
outsl
jl
int
hlt
xchg
xchg
out
jmp
cmp
dec
add
jp
sbb
es
je
pop
mov
outsb
dec
leave
lds
dec
ds
scas
jle
xor
xchg
cmp
jle
jle
shrb
or
sbb
dec
sahf
dec
add
lret
xor
std
adc
sbb
jp
mov
dec
push
xchg
sbb
add
je
sarb
outsl
repz
shll
out
mov
inc
call
add
loopne
sahf
cltd
sbb
es
iret
out
and
fsubs
sbb
mov
xchg
lret
sahf
sub
sar
je
cmp
sub
dec
and
adc
inc
adc
mov
fsubrl
ss
jp
mov
out
mov
lods
popa
mov
movsb
aaa
mov
pusha
mov
loopne
push
xor
adc
aas
pop
push
movsb
in
and
and
cmp
cmp
js
push
inc
scas
fsubrl
pop
out
lret
or
lock
sbb
pop
jp
xchg
outsb
sub
jae
add
mov
add
jge
cmp
and
xchg
jge
mov
cmp
scas
sbb
push
popf
jecxz
sub
insb
cmpsl
fnstenv
mov
sub
xor
sub
cmpsb
inc
dec
cli
mov
jne
imul
lret
jne
test
mov
cli
hlt
dec
cld
loop
mov
loopne
lahf
push
xor
mov
lea
mov
subb
sarb
pusha
cmp
sahf
pop
imul
rorl
push
out
cmp
notl
leave
cld
xorb
iret
dec
jns
sub
xor
ja
mov
mov
xlat
inc
push
add
loop
push
inc
mov
pop
add
in
mov
jae
insb
mov
sbb
mov
mov
sti
add
ficoms
adc
stc
call
pop
mov
loopne
mov
in
jg
fst
jge
dec
pop
cmpsl
dec
pop
and
mov
cmp
insl
aaa
pop
loopne
and
push
add
cwtl
xchg
dec
sbb
lds
adc
pop
mov
das
test
cmp
dec
outsb
andl
inc
out
je
icebp
jbe
sub
fsubrs
pop
mov
mov
mov
adc
or
aas
xlat
cli
leave
fnstenv
adcb
or
movsl
pop
xchg
or
add
stc
es
loopne
cmpsl
pop
clc
popf
les
mov
or
jmp
xchg
dec
stc
push
inc
lds
pusha
jns
cli
repnz
and
inc
notl
dec
inc
sarl
aas
shll
aam
clc
mov
rorb
lcall
sub
xchg
in
movzbl
adc
xchg
lret
and
xchg
xchg
fwait
or
out
xchg
ret
daa
or
mov
ss
test
movsb
xchg
inc
xor
lret
rorl
jp
repnz
or
sub
cli
or
cmp
sbb
adc
ja
inc
lds
dec
pop
popf
mov
or
mov
mov
outsl
and
jle
call
in
daa
mov
lock
push
out
adc
dec
adc
add
xor
sbb
test
ljmp
lcall
loopne
pushf
dec
leave
std
fldt
ficompl
mov
mov
push
xchg
imul
fistl
iret
push
or
lods
out
pusha
lret
js
and
shll
sti
lods
add
test
sbb
bound
call
xchg
push
mov
dec
shr
repz
ret
pop
clc
mov
pop
mov
and
divb
pop
mov
xlat
js
arpl
das
sbb
cwtl
mov
push
xchg
negb
in
gs
daa
jp
mov
fdivrl
push
aam
inc
or
iret
daa
fcoml
std
mov
les
pusha
je
push
sahf
popa
imul
push
dec
imul
xor
pop
es
out
fisttpl
insb
into
ljmp
xor
jmp
fimull
test
xorl
dec
jbe
in
or
sub
mov
sub
or
adc
xchg
adc
sbb
dec
int3
or
aad
sub
shll
outsb
ror
sysret
movsl
test
fisubs
lock
dec
push
jp
jl
add
jg
cmp
aam
repnz
enter
stos
mov
push
cmp
cmpsb
lods
mov
inc
fwait
pop
mov
push
or
xchg
sbb
insb
sbb
stos
repz
pop
cmp
lods
xchg
imul
negl
fmulp
cmp
dec
shll
je
fisttps
sbb
pushf
and
addr16
mov
insb
sub
inc
or
int
jno
mov
inc
or
gs
inc
pop
mov
sahf
bound
cmp
pushl
sbb
or
daa
mov
cwtl
cmp
lock
in
jge
pop
mov
int
or
push
cmp
shrl
scas
pop
es
xchg
xchg
out
scas
mov
aaa
fnstcw
xchg
jmp
mov
sar
mov
pop
sub
jl
jmp
push
fnstsw
sub
xor
pop
pop
fistps
cmp
test
test
xor
pop
out
je
and
rcll
lds
inc
cmp
xor
in
or
xchg
loop
in
pop
and
jnp
push
adc
jo
cmp
cmp
pop
xor
es
add
mov
push
sub
mov
std
dec
movsl
mov
popa
test
push
dec
sub
xchg
xchg
mov
in
mov
xchg
jne
pop
lea
cmp
mov
sbb
add
mov
inc
push
and
mov
mov
and
mov
sub
jae
roll
stos
inc
leave
repz
or
test
hlt
sub
popa
xor
mov
int
popf
xor
push
xchg
add
fcomp
pop
lcall
ss
mov
test
push
mov
dec
mov
test
mov
push
aaa
mov
push
xor
xor
mov
rolb
loop
or
icebp
push
sti
int3
or
sub
jge
imul
mov
xor
xor
shrb
ret
and
adc
fwait
ds
ljmp
xchg
xor
pop
pusha
stos
gs
cmp
pusha
scas
lods
jbe
or
cltd
xchg
arpl
scas
shrb
andl
repnz
dec
adc
dec
and
in
jae
xor
ret
insl
sub
mov
push
mov
and
leave
mov
test
add
aas
out
mov
jecxz
sub
jge
mov
cld
jmp
stos
scas
fsubr
pop
lcall
lock
adc
mov
jno
mov
scas
pop
lods
shrl
inc
sub
add
xchg
mov
mov
call
pop
xchg
nop
lods
ss
cmp
push
fldt
in
jmp
or
mov
andb
test
sbb
xor
in
mov
jb
sbb
cmp
xor
lret
mov
pushf
ljmpw
mov
out
cltd
inc
xlat
mov
iret
xchg
fnstcw
xor
jg
sbb
adc
jne
add
js
in
repnz
mov
mov
in
cltd
jbe
in
jno
or
sti
mov
dec
mov
sub
mov
lret
or
jae
fdivrl
lcall
mov
arpl
aas
inc
leave
mov
pop
iret
movl
mov
subb
fisttpl
shlb
lret
add
movsb
cld
push
jmp
xlat
jnp
fldcw
shlb
dec
pop
inc
cmp
les
rol
notb
inc
iret
xlat
orb
jl
pop
icebp
jo
mov
test
jne
pusha
dec
popf
pop
jmp
sarl
out
sub
cmc
push
pop
pop
or
inc
pop
clc
cmpl
ss
into
ret
and
jb
push
hlt
ja
fsubp
jmp
lcall
sub
gs
lods
dec
adc
mov
cmp
adc
shrl
cmp
or
mov
and
cmp
je
sbb
cltd
push
or
and
out
mov
movl
mov
mov
inc
xchg
mov
xchg
call
repz
add
push
mov
test
add
mov
xor
pop
or
cmp
cmc
adc
mov
out
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
ret
dec
jl
jl
inc
pop
jl
in
mov
jno
scas
xchg
mov
fstps
aaa
repz
push
dec
xchg
mov
dec
sbb
pop
push
push
aas
sbb
movsl
popa
aas
int
lret
adc
sub
sbb
xchg
jns
jbe
inc
mov
sarl
sahf
pop
cmpl
fcoml
ds
xchg
jmp
es
mov
cmp
sbb
jne
xchg
addr16
lods
fwait
daa
cmpsl
in
pop
fs
iret
fcmovb
js
sub
loop
jno
mov
popa
mov
pop
into
sahf
leave
lock
popa
mov
mov
test
insb
inc
lcall
std
test
adc
loope
fiadds
sbb
aaa
sti
add
mov
push
sub
pop
sub
mov
incb
loopne
cmc
bound
lret
adc
leave
iret
lcall
fmulp
inc
pop
leave
and
rol
fnstsw
jle
sbb
dec
fs
and
imul
pop
adc
cmpsl
cmp
jns
fmuls
pop
dec
int3
pusha
cmc
subb
shrb
add
shlb
lret
mov
movsl
dec
cmp
lods
fdivp
js
adc
cwtl
iret
mov
icebp
jl
rclb
cmp
sub
call
adc
jne
adc
test
xchg
jge
mov
idivb
shrl
daa
es
adc
hlt
add
or
pop
ret
out
int3
push
or
movsl
hlt
aam
dec
push
ljmp
pop
jle
xchg
adc
test
sub
cmp
cmp
in
aad
fistpll
int
ja
cmpsb
addr16
xchg
pop
xchg
faddl
push
and
push
fsubrl
roll
repnz
sub
stc
scas
sahf
fisubl
pop
and
add
repnz
dec
iret
mov
mov
add
repz
into
in
cli
cltd
call
add
nop
stc
pushf
cmp
push
sbbl
sti
call
fs
cmp
jns
adc
ret
or
ljmp
iret
inc
pop
pop
mov
jbe
adc
xor
xchg
bnd
push
jp
fdivrl
cmp
push
adc
mov
pop
sbb
out
push
jmp
or
lds
mov
sub
xor
cmpsl
sbb
jae
in
or
loopne
xchg
adc
add
jge
xchg
mov
ja
pop
ret
inc
insb
mov
sti
sbb
pop
fmull
movsl
jns
xlat
xlat
push
je
test
and
idivl
jb
pop
sub
inc
popa
add
jge
adc
jp
sub
pop
je
insl
or
cmp
or
test
lcall
pop
sub
adc
int
xchg
pop
pushf
lock
fnstenv
or
jmp
sub
cmp
xchg
sub
sub
je
push
add
pop
push
mov
aaa
iret
rcrb
fwait
add
sbb
insb
pop
xchg
xor
movsl
cmpb
inc
flds
mov
push
xchg
js
ret
xchg
ja
push
adc
xchg
mov
or
shll
mov
xchg
fnstcw
aas
adc
dec
sahf
dec
mov
stos
push
push
arpl
shlb
cld
pop
fwait
clc
rol
and
sub
mov
pop
pop
adc
iret
jmp
pop
dec
mov
mov
pushf
pop
loop
adc
fs
into
xor
sahf
pop
test
cwtl
cld
xlat
pop
ja,pt
mov
lret
in
aam
cmp
pop
lods
orb
movsb
cmp
mul
and
jl
jmp
data16
mov
push
sti
push
loop
jno
sahf
into
pushf
cmp
sub
in
sub
fidivl
jno
xor
push
and
xor
mov
imul
mov
mov
jne
jl
mov
xor
mov
hlt
repz
dec
or
faddl
dec
pushf
push
mov
std
xchg
adc
add
sbb
jno
jo
aaa
icebp
mov
lcall
fsubs
fs
xchg
mov
pop
filds
xchg
xor
push
and
push
aas
sbb
insb
mov
cmpsl
orb
insb
in
ljmp
inc
jo
outsl
adc
in
xor
sub
rcrl
fmuls
aaa
mov
mov
je
pop
add
mov
imul
xor
mov
mulb
dec
push
imull
and
push
cmc
push
cltd
xor
or
jle
fwait
lock
xchg
sbb
in
xor
aam
sbb
shl
aaa
aaa
lret
and
mov
lods
dec
mov
xlat
and
je
cwtl
mov
dec
pop
or
rorb
jp
xor
or
push
scas
jae
add
repz
adc
out
icebp
sbb
push
leave
push
lret
fadds
inc
imul
adc
pop
push
jmp
dec
or
pop
lret
nop
gs
aam
cmp
mov
out
pop
mov
rcl
fstps
rdpmc
xor
nop
sbb
shr
mov
inc
int
dec
xor
mov
xchg
loopne
gs
std
sub
mov
sbb
xor
sub
into
popa
mov
adc
push
repnz
rcrb
outsl
nop
movl
ja
sbb
jmp
hlt
mov
ljmp
data16
das
ret
fsubrl
testl
adc
jecxz
and
iret
jl
or
xchg
in
cmp
mov
dec
and
and
mov
incb
addr16
cmp
or
push
fistl
jne
inc
push
inc
fdivrs
sub
int
mov
test
js
or
shr
stos
xchg
arpl
clc
jno
cmp
loop
push
lret
push
or
popa
and
mov
cmp
and
lret
test
imul
das
pop
xorb
and
adcl
xor
xorb
ljmp
fldl
js
xor
sahf
jg
mov
inc
add
dec
inc
aad
mov
and
scas
int
mov
test
jae
pop
lods
hlt
icebp
sbb
sahf
pop
pop
mov
insl
cmp
in
js
lea
jne
imul
daa
imul
xchg
mov
adc
xor
out
pop
pop
sbb
data16
sub
push
popf
xchg
jl
inc
lcall
mov
js
sbb
fdivrl
push
dec
push
dec
data16
arpl
pop
ror
inc
insl
xchg
pop
inc
xchg
push
cs
and
mov
xor
fmull
pop
pop
pop
mov
lret
adc
mov
lret
adc
mov
xor
and
hlt
test
stc
ds
cmp
or
mov
ja
bnd
and
pop
out
xchg
stc
scas
mov
popf
jo
js
sub
dec
pop
es
cltd
in
addl
mov
lret
stos
inc
test
xlat
pop
xchg
pop
lcall
sub
sbb
adcl
es
cmp
add
rorb
std
in
cs
bswap
mov
sub
xor
xor
sub
jle
loopne
lock
mov
and
bnd
std
adc
outsl
dec
cs
xchg
dec
mov
dec
aaa
arpl
dec
mov
pop
cmc
add
push
roll
ret
insl
cmp
cwtl
pushf
jg
stos
mov
jmp
lds
test
pushf
adc
mov
lret
popa
scas
sbb
sbb
adc
mov
push
mov
iret
mov
je
mov
dec
pop
rorb
adc
or
andl
out
outsb
or
cmp
mov
movl
xor
cmp
ret
jo
push
decb
jb
cmp
jno
shl
rcr
dec
inc
jp
inc
or
and
lods
xchg
pop
aaa
sub
fs
sub
sub
mov
fdivl
mov
hlt
out
testl
sub
and
fsubrp
ljmp
jae
or
or
repz
aaa
xlat
icebp
inc
mov
fstpl
lcall
in
call
cmp
lea
jg
jo
mov
out
adc
out
insl
sub
inc
int3
jno
rep
mov
sbb
std
xor
xchg
adc
adc
lea
cmpsb
jne
mov
sbb
outsb
test
inc
fmull
pushf
mulb
push
shrl
fdivr
dec
xchg
push
sub
sub
xor
mov
into
mov
in
mov
das
xlat
mov
sbb
int
xor
movsb
sbb
xor
fdivrl
push
ffreep
mov
cmp
xchg
aam
std
jo
or
cmp
inc
add
inc
scas
xchg
ret
iret
mov
insb
mov
pop
addr16
mov
xor
test
cmpsb
in
adc
push
cmpsl
lahf
fdivl
lret
das
pop
sub
mov
cmpsb
fbld
push
arpl
sub
pop
pop
push
idivb
mov
add
and
outsl
push
sbb
es
sub
lret
cmp
imul
ret
push
xchg
lock
push
aaa
cmpsl
mov
and
inc
int
push
push
sti
in
cmp
mov
pop
jns
xor
negb
jl
aam
lahf
or
or
stos
test
loopne
or
jmp
cmp
jg
fistpl
shll
dec
push
dec
stc
fisttps
bound
pop
mov
inc
dec
inc
outsl
xor
sbb
mov
add
out
movsl
js
ret
sub
mov
movsb
pop
sbb
outsl
mov
push
xor
scas
enter
cmp
pop
xlat
rclb
outsl
dec
ret
sbb
adc
movsl
icebp
or
mov
dec
mov
and
xchg
and
push
lea
jl
pushl
lret
mov
mov
imul
addr16
pop
pop
int
and
popa
shll
add
repz
cmp
push
sbb
pusha
das
sbb
jnp
sbb
xchg
pop
imul
mov
dec
fmuls
shrb
push
dec
xor
dec
shlb
insb
push
dec
cmpsl
decl
arpl
or
dec
add
stos
sbb
and
jmp
add
pop
fdiv
mov
insl
orl
int3
jge
jo
push
xor
lock
add
shl
mov
push
or
ss
cmpsb
sahf
inc
cmp
push
insl
enter
mov
xchg
push
dec
jo
gs
arpl
add
add
clc
mov
jg
aam
movsl
aaa
loope
in
xchg
jl
popf
mov
inc
cmp
icebp
xchg
add
cmp
push
popf
inc
mov
lcall
or
adc
sub
mov
loopne
aam
add
mov
sahf
roll
dec
xor
aad
and
inc
mov
pushf
sub
xchg
dec
ds
aad
mov
sub
aaa
nop
loope
loop
in
inc
jp
and
jne
in
pop
jl
testl
fstl
fs
imul
mov
pushf
adc
dec
xor
sbb
and
mov
xchg
xorl
jb
loope
xor
daa
or
adc
add
and
sti
int
jp
test
test
push
xchg
push
xchg
mov
sub
jge
mov
mov
mov
movb
adc
in
arpl
dec
xchg
faddl
call
mov
rol
adc
mov
lds
stc
ja
repnz
int3
cmp
pop
push
mov
je
testl
cld
mov
add
mov
adc
andl
lea
inc
mov
arpl
lret
dec
pop
mov
adc
pop
inc
xor
or
fdivrs
flds
ret
les
das
das
hlt
add
ja
jo
adc
pop
or
int3
aaa
scas
ljmp
loopne
nop
ja
add
push
mov
aas
mov
insl
dec
dec
icebp
dec
aaa
pop
jnp
fisubrs
bound
mov
inc
arpl
outsb
outsl
in
pop
adc
subb
roll
mov
addl
test
xor
xor
leave
add
jne
push
pop
mov
mov
cli
lds
cmp
sub
loope
jge
or
sub
fldt
ljmp
pop
push
pusha
loope
sub
cmp
imul
or
pop
or
mov
fcmovu
scas
inc
outsb
ja
scas
jmp
xlat
mov
mov
pop
mov
cmp
ja
int3
divb
mov
mov
push
push
or
and
loopne
push
mov
sahf
cld
in
ja
lahf
into
xchg
add
imul
repz
xor
mov
data16
mov
mov
pop
and
xor
nop
or
divb
or
push
jo
nop
rorb
add
sub
mov
arpl
shll
xchg
xchg
pop
push
inc
xorb
xchg
xchg
sahf
mov
jns,pn
fistpl
sti
inc
addr16
popf
dec
sbb
sarl
ret
xchg
fdivrl
xor
push
testl
shrb
push
loope
xlat
lahf
popa
sub
inc
aas
jecxz
outsl
sbb
in
sbb
stos
cs
or
inc
jge
mov
insl
test
adc
push
sarb
fucomi
xchg
outsb
xchg
insb
in
aad
xchg
iret
inc
mov
dec
push
repz
das
mov
loop
test
jbe
hlt
jno
shrb
fstpt
test
dec
divl
xor
leave
pop
lods
mov
jmp
and
cli
or
add
movsb
push
sbb
pushf
push
pop
cmpsb
mov
xor
mov
sbbb
xor
dec
jae
dec
xchg
xor
sar
je
adc
xchg
push
addr16
sbb
jnp
mov
mov
lcall
push
and
insb
into
stc
inc
dec
add
inc
popa
pop
icebp
mov
mov
decb
jmp
ja
sbb
cmp
cmp
mov
add
rcrl
cli
xorl
push
mov
add
adc
int3
movsl
xchg
stc
inc
stos
aad
jno
push
push
push
outsl
nop
iret
xlat
xchg
loope
out
clc
js
das
hlt
pfcmpge
mov
sub
mov
mov
jo
in
inc
xor
scas
fwait
jl
cmp
out
xorl
jne
fstps
jmp
xor
dec
and
and
push
aam
sbb
lcall
outsl
xchg
adc
sahf
inc
inc
pushf
mov
xchg
cmpsl
push
sbbb
subb
fwait
rdmsr
inc
lret
or
add
loope
insl
lret
jl
arpl
sbb
in
movsl
fxch
xchg
mov
or
pop
inc
addb
inc
and
mov
adc
daa
lret
stos
pop
paddb
mov
fmull
loop
xchg
repnz
ret
sti
pop
sar
mov
iret
cltd
aas
mov
inc
cmpsb
shl
lahf
mov
stos
xor
jp
or
cmp
cwtl
xchg
ret
shll
stos
in
lods
inc
mov
jg
dec
jmp
pop
dec
cmp
movb
repz
shl
test
jecxz
inc
sbb
push
stc
movsl
cmp
inc
push
cmp
pushf
xor
mov
or
icebp
adc
movsb
pop
fwait
jg
cmp
bound
cmp
outsb
push
mov
cld
aaa
pushf
int3
arpl
jno
pop
or
cmp
in
sbb
cli
aas
push
cmpb
xor
pop
stos
pop
add
or
or
jecxz
add
pop
sub
cmpsl
ret
pop
mov
test
lea
shll
xor
lar
int3
mov
push
xchg
push
mov
add
push
mov
mov
dec
lret
or
lds
roll
das
aas
es
add
add
sub
mov
jns
push
adc
push
cli
fimull
iret
inc
mov
mov
hlt
mov
inc
push
jmp
sbb
insb
in
cmp
pushl
shll
or
sbb
push
xor
adc
lods
out
adc
mov
sahf
mov
orl
push
test
or
jo
shl
sbb
mov
pop
mov
push
jbe
fmuls
and
and
in
nop
xor
hlt
repnz
daa
enter
scas
lcall
loope
pop
inc
sbb
cmp
inc
pop
test
loopne
xor
jle
enter
pop
dec
stc
fnstcw
popf
cli
incb
repz
and
lret
repz
outsb
mov
fimuls
ficoml
ss
mov
js
outsb
and
aam
mov
stc
pushf
cmp
hlt
loop
in
add
xchg
xchg
pushf
inc
mov
dec
dec
cltd
adc
dec
and
in
shll
aas
data16
cmpsb
mov
dec
push
test
fdivs
pop
rcl
pop
pop
jo
add
pop
hlt
mov
lock
out
cs
xor
dec
dec
push
in
jge
adc
es
push
mov
jb
mov
xchg
fmuls
repz
enter
push
out
es
cmp
adc
jecxz
sub
out
in
add
dec
jp
pop
dec
pop
xchg
in
mov
push
and
pop
hlt
push
adc
sub
sahf
xchg
xchg
movsl
nop
jbe
adc
xor
lds
lcall
cmp
gs
hlt
movsl
stos
sahf
js
mov
xchg
outsl
mov
pop
movsl
inc
outsl
test
dec
out
dec
pop
fs
mov
mov
cmpsl
stos
jmp
dec
movsl
or
lock
lahf
outsb
aam
mov
fbstp
loope
data16
les
int
push
out
add
sahf
sti
or
stos
and
icebp
test
shl
push
call
jmp
mov
mov
sub
sub
rcrb
jmp
and
ja
fsts
push
movsl
lods
xlat
xchg
push
xor
lcall
or
call
inc
inc
xchg
sbb
into
mov
rcl
cmp
push
stos
out
mov
xlat
lcall
pushf
push
test
insl
push
mov
dec
mov
sub
out
subb
sbb
push
jno
mov
fildll
or
icebp
mov
stos
push
ret
imul
xchg
into
adc
mov
xor
fcompl
mov
push
in
inc
hlt
into
inc
bound
push
test
arpl
daa
ljmp
or
sub
push
nop
mov
push
jg
push
mov
lahf
add
pusha
fdivrs
jmp
lret
sbbb
or
mov
sbbl
test
inc
cmpl
inc
in
or
and
sbb
sbb
addr16
mov
fstl
mov
in
stos
neg
lret
adc
subl
inc
out
icebp
cmc
jle
adc
les
out
pop
mov
test
jno
xor
xor
add
adc
xchg
fsubrl
jns
dec
popf
mul
jl
mov
dec
cmp
repnz
mov
shr
and
inc
push
mov
scas
pop
mov
daa
aas
lods
mov
mov
popf
clc
les
outsb
out
mov
fimuls
lods
mov
pop
and
and
lea
addl
loope
push
push
jbe
pop
jns
jecxz
or
loopne
loop
sarl
mov
test
mov
sbbl
popf
daa
push
xor
fdivl
jle
xchg
jno
clc
jb
xchg
cmp
or
scas
adc
shrl
adc
dec
adc
mov
xorl
icebp
loop
sub
enter
jbe
pop
adc
xchg
inc
sub
scas
mov
pop
lods
fnstcw
int
testl
jecxz
push
je
test
pop
jmp
sub
loopne
shll
xor
xor
lods
sub
rcl
jno
in
aaa
jno
mov
mov
add
mov
sbbl
sub
and
and
xlat
sub
and
adc
mov
pop
repnz
adc
push
lret
sbb
loope
jns
aas
inc
push
movsl
inc
shr
scas
inc
jo
mov
out
sbb
adc
xchg
test
lods
and
hlt
xchg
inc
aad
jbe
mov
xchg
pop
fnsave
mov
jnp
sub
cmp
inc
cwtl
jb
pop
sub
push
sub
mov
push
mov
sub
cwtl
mov
push
in
mov
scas
pusha
sarl
and
cli
rol
cld
mov
pop
and
sarl
std
aad
fbld
mov
mov
add
push
mov
mov
xor
fildl
rorb
out
and
ficoml
pop
xchg
xor
and
cwtl
js
frstor
xor
xchg
in
imul
mov
add
jecxz
int3
sub
mov
jecxz
cmp
shr
jecxz
inc
lds
scas
mov
sbb
jbe
xor
mov
pop
int
inc
aaa
sub
add
jle
sub
pop
cwtl
jno
std
mov
loope
xchg
pop
stc
fcmovnbe
xchg
fstps
test
dec
sub
mov
inc
lods
bound
rolb
sub
jg
js
ret
fdiv
fmuls
or
mov
das
lods
xor
mov
sbb
mov
aam
adc
test
jae
add
icebp
andb
icebp
dec
mov
and
jle
out
xchg
mov
xor
jo
das
pop
or
pop
subl
lret
push
xchg
mov
sti
push
and
mov
fs
cmpsb
xchg
fnstsw
fwait
jp
es
push
jo
dec
outsb
cmc
sbb
inc
cli
insl
cwtl
add
mov
inc
xlat
or
push
scas
sti
and
iret
and
push
xor
ret
hlt
out
lods
mov
loope
add
pop
mov
mov
pop
je
ficompl
test
jnp
sub
int3
jmp
data16
test
xchg
pcmpeqd
das
pushf
stos
fbstp
cmp
mov
loop
pop
dec
pushf
adc
mov
setne
xor
out
xor
leave
fildl
fdivs
pop
push
mov
in
adcb
mov
or
dec
pop
insl
push
addr16
int3
fwait
incb
das
ret
lret
clc
push
mov
cld
xchg
xor
int
movsl
lods
push
mov
jecxz
clc
jle
dec
push
mov
inc
adc
test
fnstsw
dec
out
std
cmpl
lea
sub
and
sub
cmc
jbe
pop
mov
ret
test
adc
aas
mov
leave
add
loopne
xor
in
aam
mov
das
sbb
stc
push
add
cld
jmp
inc
fisubs
sub
mov
or
aas
pop
mov
ror
insb
ja
push
xor
cmp
add
push
push
gs
or
jmp
insl
jg
imul
popa
jle
ljmp
adc
popa
push
shll
mov
cmpl
shl
pop
repnz
inc
jno
mov
push
jb
sar
mov
pusha
add
mov
movsl
inc
mov
xor
popa
jmp
mov
repnz
loopne
jge
sti
addr16
daa
xchg
mov
jne
mov
icebp
int
push
push
mov
icebp
mov
add
fmull
addr16
mov
pop
xchg
add
push
ds
adc
out
and
mov
mov
jbe
adc
aaa
jb
or
or
daa
int3
jae
adc
stos
stc
and
rclb
loopne
inc
ja
mov
loope
test
test
cmp
inc
imul
cmp
inc
adc
push
xor
add
test
addr16
add
shll
mov
dec
ljmp
cltd
ss
jl
in
test
jp
je
std
adc
testb
aad
and
outsb
stos
jne
add
in
lods
push
clc
mov
push
or
fildll
cmp
and
scas
dec
mov
push
lds
enter
pop
pop
cmp
lods
dec
into
and
mov
stos
sti
cmc
adc
and
inc
dec
inc
push
insl
ret
rcll
imul
push
outsl
inc
shl
out
jnp
cmp
push
aad
aad
add
or
and
add
pop
es
push
xor
xchg
mov
xor
roll
das
int3
mov
or
std
je
jmp
adc
xchg
inc
push
test
push
jno
stc
lcall
pop
imul
test
fisubs
adc
dec
xchg
sbb
lock
cmp
xchg
adc
sub
nop
sbb
jge
in
jg
clc
inc
push
mov
xor
and
sub
or
mov
test
fwait
js
lock
lods
addl
enter
lcall
mov
sbb
lods
sub
xchg
inc
pop
daa
sub
sbb
xchg
jecxz
mov
mov
pushf
out
in
pop
cli
in
jnp
push
jle
in
mov
inc
and
dec
add
popf
mov
sbb
shlb
lods
pusha
pop
fldcw
sbb
and
jge
jno
sub
inc
std
ficoms
shll
mov
stc
gs
insb
mov
and
sbb
cld
sbb
cwtl
jle
push
cmp
addl
test
imul
aam
sub
pop
pop
and
pop
dec
xchg
stc
rcrl
or
cmpsl
mov
pop
pop
add
lret
pop
stos
jmp
ret
jno
dec
adc
xchg
insl
xchg
cmp
dec
fnsave
hlt
push
xchg
cmp
and
lods
aas
bound
inc
sbb
jecxz
push
scas
movsb
or
mov
push
or
daa
scas
loopne
gs
xor
lods
stc
test
pop
std
push
inc
xchg
loop
sub
icebp
orb
imul
xlat
gs
dec
mov
pop
jmp
jbe
inc
mov
mov
call
sti
sub
sbb
dec
sahf
xor
ja
add
xor
adc
xchg
add
xor
add
push
pusha
insl
or
push
mov
mov
dec
loopne
lcall
sarl
xchg
movsl
xchg
adc
mov
push
or
addr16
add
ljmp
roll
mov
mov
push
xchg
outsl
mov
cltd
ljmp
and
std
cmp
lds
mov
mov
movsl
sahf
insb
fdiv
jl
sub
xchg
es
cmc
push
out
mov
cli
in
xchg
jae
jne
dec
mov
lods
or
fdivr
adc
daa
lahf
fisubs
jle
or
fdivs
jmp
mov
imul
cmp
push
gs
insl
or
mov
pop
pop
fadds
pusha
add
pushf
mov
mov
cmp
xor
mov
test
loop
jge
add
dec
cmp
push
or
popa
or
popa
lock
mov
inc
xchg
add
xchg
lds
jb
cmp
inc
add
add
cmp
xor
scas
mov
sti
inc
addr16
add
inc
out
xor
cmp
adc
aaa
cli
jno
jbe
xorb
dec
ret
mov
fstp
sbb
inc
mov
out
adc
mov
jge
fstps
mov
out
mov
movsl
fwait
mov
ret
mov
jno
mov
and
cmp
jnp
push
es
xchg
insb
mov
fisubl
je
cmp
shll
mov
call
dec
inc
sbb
pop
icebp
subb
int
and
mov
jne
daa
repz
jp
ja
inc
xchg
add
fs
scas
jl
cmp
dec
cltd
and
or
das
cmp
hlt
jnp
adc
std
jnp
push
stos
mov
xchg
sbb
ja
rolb
xor
adc
adc
push
ja
cmp
xchg
pop
negb
ds
popf
inc
arpl
insl
adc
inc
movsb
bound
pushf
inc
call
pop
sub
mov
shl
repz
sub
jmp
movsl
mov
inc
push
push
pop
call
xchg
rdmsr
cmp
fsubl
xchg
inc
cmpsb
lcall
cmc
or
jl
ljmp
push
inc
xchg
pop
mov
mov
rolb
lds
dec
testb
xchg
call
xchg
and
xchg
stos
shlb
dec
push
call
cli
mov
mov
loopne
adc
es
lcall
dec
jbe
sti
jb
xor
jle
dec
int3
cmpsl
loopne
sbb
sub
lods
and
push
in
ss
ljmp
dec
xchg
mov
clc
jbe
xchg
in
dec
mov
pop
xchg
push
or
pop
and
add
scas
cwtl
loop
and
jl
ret
push
sub
inc
scas
sub
stos
inc
and
mov
and
js
aas
imul
sbb
mov
cmp
xchg
add
push
inc
mov
or
outsb
icebp
movsb
or
sub
push
out
ja
fsubrp
and
dec
fs
dec
and
movsb
test
and
clc
jns
cmp
dec
cmp
push
push
stos
or
jb
sti
test
daa
data16
add
xor
pop
xchg
and
adc
fisttpl
bound
fwait
outsl
jno
mov
mov
inc
aam
pop
stos
jmp
lods
jl
sub
jp
dec
movsl
inc
mov
rorb
add
mov
add
inc
mov
shrl
lea
aam
inc
sbb
mov
out
rol
cmp
mov
outsb
std
inc
cmp
leave
mov
inc
aam
xor
xchg
inc
jg
inc
mov
inc
cmpb
mov
sbb
es
pushf
adc
sub
pop
push
mov
rcrb
aas
mov
stc
js
lods
fcoms
xchg
sbb
push
push
mov
sub
nop
loope
inc
fldt
pop
xchg
inc
add
push
ja
xor
cmpsl
hlt
fwait
adcl
int3
dec
lods
mov
push
mov
lods
ljmp
pop
or
sarb
cmp
add
pushf
sti
cltd
insb
pop
sub
movsb
dec
into
push
push
and
xchg
push
mov
cmc
imul
sbb
out
xchg
cmc
mov
jl
lods
sarl
stos
mulb
adc
cmp
ljmp
cli
fs
push
push
popa
sub
lods
sub
test
xchg
push
mov
call
imulb
adc
loop
and
jmp
movsl
mov
test
sub
into
xchg
ss
mov
mov
add
inc
and
add
adc
cmp
add
add
push
add
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
fcos
xchg
inc
pop
jl
jns
sbb
ret
jmp
mov
iret
dec
icebp
lds
cmp
cli
les
incl
outsb
aaa
cmc
fildl
gs
gs
dec
scas
xchg
and
fsubl
sub
and
cmp
mov
ret
loop
xor
lcall
push
xchg
mov
into
ja
xchg
and
std
jbe
js
loope
xchg
sbb
mov
jne
insl
rol
xchg
mov
cmp
stos
pop
inc
push
inc
jb
aam
addr16
adc
mov
mov
push
mov
outsb
leave
adc
push
add
jns
xchg
sbb
dec
adc
outsl
inc
xchg
xchg
pop
ljmp
xchg
dec
inc
mov
push
cmp
int
add
push
xor
stos
xchg
ret
jno
jb
cmp
mov
jecxz
xchg
cwtl
cmp
shll
dec
pop
pop
and
pop
leave
mov
dec
loopne
cltd
ret
enter
push
andl
pop
cmp
lods
dec
or
mov
iret
mov
jmp
fsubl
mov
mov
xchg
sub
push
andb
xchg
daa
popf
mov
sub
lds
push
pop
cmp
mov
pop
jo
and
cmpsl
mov
sbb
sbb
mov
ljmp
dec
test
rcl
enter
bound
jns
sbb
pop
iret
nop
xchg
in
bound
pop
jb
fnstsw
into
into
mov
mov
push
or
repz
scas
data16
je
shll
repnz
addr16
loop
push
int
out
mov
and
mov
lret
rcrl
ret
ret
mov
sbb
loope
fisubrl
inc
inc
sub
sub
xchg
xor
aaa
aad
jb
sub
mov
add
imul
jno
mov
outsb
or
add
ja
mov
cmp
or
lcall
xchg
mov
push
stos
shlb
dec
cld
cwtl
lahf
icebp
leave
outsl
or
fdivrl
jge
sub
xchg
adc
lret
mov
push
das
mov
ljmp
or
mov
xchg
and
ljmp
dec
into
sahf
inc
and
or
in
sarb
cmc
jle
or
lods
mov
cmpl
aaa
in
out
nop
cmp
int3
mov
cmpsl
les
or
es
or
cmp
dec
jp
xchg
iret
lahf
xchg
sub
sarb
fcos
adc
movsl
movsb
arpl
lret
mov
mov
push
test
push
pop
stc
dec
lea
pop
push
insb
lock
cs
sbb
je
in
pop
pop
jae
cmp
cs
fildl
sbb
inc
mov
in
adc
xor
cmp
jo
inc
sub
push
mov
mov
xchg
add
jbe
out
pop
leave
xor
mov
xchg
adc
mov
cmp
xchg
neg
push
or
xchg
pop
sahf
int
out
sbb
sbb
jecxz
dec
insb
mov
pusha
push
xchg
push
sbbl
shl
inc
or
enter
xchg
rcrl
sbb
out
lods
xor
test
dec
add
push
imul
mov
lret
mov
stc
fdiv
into
add
xchg
sbbb
jmp
sbb
out
pmaddwd
mov
mov
jge
dec
add
xchg
mov
mov
jl
sbb
loopne
jmp
jae
inc
mov
shlb
pop
add
das
rcl
test
mov
daa
adc
gs
cmpb
enter
mov
test
enter
hlt
jnp
ret
loopne
orb
mov
adc
push
or
clc
sbb
rolb
mov
pop
sub
dec
pop
clc
and
movsb
pop
adc
out
lretw
xor
aas
ret
and
jns
sub
inc
rorl
lahf
sbb
mov
lock
push
mov
xorb
pop
imul
or
sbb
and
pop
fildll
data16
int
outsb
cld
lds
movsb
btr
add
jl
push
subl
and
push
out
dec
jnp
lret
pop
adc
xchg
andb
jb
fisubrs
loopne
clc
hlt
movsb
rorl
std
dec
jle
jo
or
cmpsl
arpl
and
sbb
inc
addl
stc
mov
mov
imul
fstl
lahf
out
bnd
sbb
popf
pop
pop
bound
sub
bsr
or
daa
movsl
sub
add
out
xchg
fxch
push
loope
cltd
out
cmp
push
lock
xlat
mov
cmp
clc
fisubrs
push
int3
je
or
les
xchg
movsl
add
and
dec
add
cmpsl
jle
sub
xchg
rolb
pusha
ds
cltd
dec
cmp
adc
addr16
mov
push
jle
dec
out
lods
push
or
cs
int
cmpsb
into
push
xchg
fs
pusha
push
inc
cwtl
and
dec
push
cmp
push
mov
int
cmp
outsb
jae
shrl
cmp
mov
sbb
ljmp
inc
push
outsl
add
xchg
pop
adc
outsl
aas
mov
cmp
ficoml
adc
lods
xor
push
xor
xchg
dec
and
jno
jnp
jmp
out
mov
and
add
repz
mov
inc
cmpsb
les
sub
stos
int3
movsb
lcall
push
loopne
push
in
and
rolb
dec
xchg
xchg
adc
int
jns
mov
fnstenv
loop
or
hlt
pop
pop
fldt
adc
push
inc
inc
push
jbe
and
psubw
or
lret
sbb
shrl
mov
shrl
aas
add
insl
sub
daa
add
les
lods
lods
sbb
and
rcrb
and
iret
add
dec
aaa
hlt
jne
mov
sbb
xor
test
sbb
lock
mov
out
jg
cmp
repnz
fbstp
and
rcrb
loope
push
or
rcll
lods
sti
or
lea
xchg
jne
and
jae
or
mov
jp
inc
push
xlat
lret
jge
jb
icebp
pop
gs
push
scas
cmpsb
in
xchg
out
cli
inc
push
inc
xlat
xor
test
inc
mov
mov
jg
push
fists
mov
inc
lods
fmulp
fnstenv
inc
cmpsb
ljmp
jmp
fldt
fwait
insl
push
stc
cmpl
dec
pop
incb
cmpb
loope
sarb
stos
pop
and
in
out
add
fldcw
mov
add
push
or
sahf
ds
pop
ret
pop
cmp
sti
lret
lcall
add
dec
xor
out
mov
pop
sarl
cmpsl
lcall
movsl
fdivl
pop
cltd
or
movsl
mov
insb
loope
imul
nop
dec
mov
in
cmp
add
pop
dec
mov
es
mov
movsb
adc
cmp
arpl
addb
lahf
sbb
inc
stc
sahf
flds
in
push
jge
cmpsb
and
adc
aam
arpl
cmp
outsl
pushf
arpl
cmpsl
add
push
xchg
and
ja
jbe
ret
out
dec
jnp
push
loope
insl
and
and
in
lds
iret
aaa
sti
insb
mov
mov
daa
stos
xorb
jno
push
sub
or
adc
xchg
or
fucomi
push
xchg
jl
fs
jge
push
jmp
aaa
lods
lret
sbb
sti
repz
inc
pop
jg
push
lds
xlat
inc
sub
pop
mov
insb
push
rcll
jl
push
jmp
jl
add
jae
lret
and
jle
in
mov
dec
add
push
jge
inc
fs
leave
out
dec
aam
lods
pop
inc
int3
push
fldcw
pop
loop
pop
push
sbb
cmpb
test
lods
outsb
roll
dec
adc
sub
inc
sti
stos
add
aaa
call
mov
adc
jg
and
jbe
jne
xor
nop
pop
pop
jp
jecxz
cmpsl
pusha
pop
ret
xchg
and
and
push
xor
and
dec
xor
mov
jmp
jb
push
mov
push
stos
push
cld
out
mov
jbe
inc
jmp
shlb
jae
jmp
test
in
jmp
in
jnp
inc
sbb
sbb
ljmp
cmc
dec
dec
fiadds
xchg
fwait
sbb
movsb
cmc
and
roll
loopne
inc
mov
dec
nop
mov
and
popa
lock
sbb
sub
lea
add
pop
mov
lock
dec
or
movsb
aam
sbb
out
pop
xchg
sub
pusha
ret
pop
mov
adc
sti
repz
les
push
jg
and
push
gs
std
sub
mov
xor
fucomi
roll
inc
sti
inc
imul
sub
mov
push
dec
jne
out
push
ret
into
gs
mov
inc
les
data16
and
cmp
mov
test
or
cli
push
shrl
adc
mov
sbb
cmp
cwtl
cmpsl
adc
nop
adc
add
cmp
fldl
cwtl
imul
push
lock
test
sbb
dec
mov
mov
aas
add
rcll
mov
cmp
xchg
jmp
push
mov
sbb
decl
gs
or
inc
test
in
jmp
mov
outsb
or
lods
mov
mov
out
xchg
fmull
fstpt
aam
jmp
retw
fwait
outsb
repnz
bnd
fstl
int3
enter
loopne
stos
mov
lds
xchg
sbb
call
jnp
push
mov
mov
icebp
mov
xchg
fbld
stos
dec
add
jb
stos
pop
rorl
add
adc
xchg
jo
movsb
or
xchg
scas
adc
pop
inc
sub
cmp
bound
data16
sbb
pusha
mov
pop
adc
mov
loopne
add
adc
xlat
fwait
lods
jno
mov
xchg
jmp
jmp
gs
les
adc
jle
shll
add
dec
push
daa
mov
jecxz
mov
mov
add
push
cmp
repnz
dec
stos
std
aam
loope
test
aaa
xchg
pop
sbb
jbe
adc
iret
pop
mov
xchg
jecxz
mov
aaa
push
aad
aad
in
lcall
or
mov
cmpsl
in
pop
sbb
movsl
jl
inc
jne
out
jle
xor
mov
fadd
rclb
jl
or
pop
leave
mov
or
sub
mov
enter
int3
loopne
iret
insb
test
cmp
int
mov
push
sbb
je
inc
jmp
shlb
xorb
rclb
ficompl
lcall
jb
jno
cmp
and
mov
mov
inc
test
negb
sub
jnp
cmp
lea
mov
outsl
orl
stc
xor
xorl
dec
xchg
jbe
mov
out
aas
mov
movsl
dec
or
shrl
test
stos
jnp
mov
and
adc
pop
and
lcall
dec
jb
jns
test
fists
adc
scas
mov
insb
test
mov
and
or
mov
jnp
jb
hlt
fnstenv
cmp
jmp
inc
and
leave
rorb
xchg
jge
push
out
je
xor
rcl
lea
add
cmpsb
jp
or
shlb
push
aam
push
pusha
jmp
xchg
pop
cwtl
inc
icebp
lds
test
inc
dec
pop
cmp
loop
sbb
ficoml
mov
adc
enter
sahf
and
js
jecxz
aam
sub
jb
sti
aaa
bound
cld
add
insl
out
movsl
fs
cmc
scas
push
or
aaa
inc
add
inc
inc
mov
shl
std
jno
push
mov
fwait
repz
sbb
mov
sbb
icebp
sbbl
jle
rorb
aad
jecxz
add
int
cmpsb
movsl
pop
dec
add
mov
out
jmp
sbb
jbe
and
pop
cmp
test
xchg
add
xchg
punpckhwd
sbb
aaa
fdivr
lcall
ljmp
jnp
push
dec
insl
mov
jnp
scas
inc
ljmp
xchg
or
insl
jl
loope
mov
cmpsl
sbb
push
xchg
rcr
movsb
adc
sbb
dec
mov
push
test
or
jnp
cmpsl
pop
adc
movsb
mov
jp
iret
cmpb
jl
dec
sub
mov
scas
adc
movsl
jnp
mov
pop
sub
xor
push
xor
jl
pop
iret
jbe
adc
sub
dec
flds
andb
mov
je
and
push
pop
adc
adc
int
not
push
fcmovnb
dec
aas
pop
inc
cld
sub
aam
cmp
out
xchg
push
cmp
mov
xor
pop
scas
mov
or
xor
add
cmp
mov
or
push
outsl
or
add
popa
cmp
or
ds
fimuls
pop
jg
xchg
jmp
mov
mov
xchg
icebp
add
pop
dec
shll
pusha
jns
mov
xchg
lods
test
xchg
mov
xchg
jae
fsubs
int3
xchg
xor
jg
mov
jbe
add
fcoms
filds
movsb
in
sbb
or
in
pop
nop
out
out
shll
xor
jle
fcmovnb
loopne
ret
mov
aad
lods
sbb
scas
push
lds
sbb
push
jae
lahf
das
xchg
std
mov
xor
sbb
mov
xchg
jmp
ss
cmp
jb
sub
fisubrl
and
xchg
push
in
or
insb
push
or
add
scas
mov
or
or
add
loop
movsb
mov
mov
and
pushf
arpl
add
push
mov
mov
loop
xchg
and
test
and
dec
dec
mov
out
xor
jp
jmp
jge
ss
xchg
inc
dec
loop
push
ja
lods
jne,pn
dec
sbb
mov
sub
sub
sbb
and
pop
xlat
scas
fwait
cmp
push
xchg
xchg
adc
bound
cltd
mov
mov
das
inc
enter
xor
cli
lea
push
out
xchg
mov
lcall
inc
lods
and
dec
les
mov
mov
insl
test
out
lret
lret
push
push
xor
xor
jb
mov
lcall
ret
lcall
ror
mov
adc
lret
jecxz
cwtl
outsl
xrelease
jl
clc
sub
xchg
mov
je
cmpsl
sbb
out
jnp
or
jp
rcrl
dec
js
hlt
xor
adc
mov
push
testl
cmp
xchg
sub
mov
cli
aad
push
daa
mov
lcall
inc
pop
test
xorb
test
pop
outsb
stos
jle
outsl
mov
add
fwait
imul
jp
mov
mov
sbb
or
mov
lods
xor
fwait
data16
and
sbb
mov
xlat
push
xchg
fidivs
mov
mov
jb
fistpl
mov
insb
push
or
cmpsb
movb
cwtl
mov
mov
sbb
test
dec
mov
das
cmc
mov
addr16
cmp
test
push
pop
inc
fmuls
mov
pop
in
roll
insl
sub
scas
fnstsw
mov
jle
sbb
adc
pop
jne
mov
mov
or
fidivs
mov
dec
mov
iret
int3
icebp
in
mov
sub
push
cmp
pop
aaa
sbb
and
mov
insb
test
mov
push
movsl
bound
jl
xor
or
and
cmp
and
ds
push
mov
sub
mov
outsl
dec
insl
andb
cmp
in
pop
lahf
incb
or
aam
push
push
ds
jge
repnz
lcall
gs
jno
cmp
lret
mov
pop
pop
or
mov
mov
push
scas
and
ret
adc
loopne
pop
dec
cmp
pop
mov
pop
mov
adc
sbb
cmp
inc
pop
rcr
add
mov
or
iret
inc
int
fnstsw
push
aam
add
inc
pop
loopne
cmp
insl
sbb
xchg
mov
pop
cli
add
gs
mov
sub
shl
insl
shl
mov
mov
push
xchg
dec
xchg
cltd
aaa
mov
dec
and
mov
push
pop
jmp
stos
push
int
mov
lods
pop
xchg
adc
jle
and
dec
cmpsb
test
cmp
inc
jne
ret
mov
inc
mov
inc
lods
ja
xchg
cli
imul
in
loope
aad
pop
inc
fnsave
jle
xlat
xor
in
sub
je
addr16
dec
push
mov
out
sbb
fs
inc
inc
mov
adcl
test
cmp
fbld
push
aas
aas
mov
pop
in
jecxz
icebp
aas
push
arpl
mov
in
dec
sarl
lcall
iret
cmpsl
nop
dec
cltd
mov
sbb
add
jnp
fildl
xor
add
dec
aaa
or
sbb
in
inc
pop
daa
stos
mov
fbstp
pusha
jo
ja
pop
mov
imul
das
inc
inc
out
ja
nop
test
stos
mov
int
inc
mov
ror
inc
sbb
loop
pop
jge
jmp
push
pop
cmp
loope
sbb
in
and
sbb
mov
fistl
sub
add
repz
movsl
popa
sbb
mov
xchg
scas
sbb
push
cmp
jmp
pushf
adcb
sub
mov
sbb
pop
push
aas
push
into
cvtps2pi
mov
jp
sub
std
xchg
es
sbb
inc
outsb
lret
mov
mov
and
mov
dec
mov
xchg
aam
mov
jecxz
in
ss
fadd
xor
cmp
cmp
mov
xchg
cmp
ror
cmp
pop
leave
lock
bswap
pop
ja
fsubrp
jo
cmp
sbb
mov
fsubs
lret
sbb
sub
fstpl
lods
push
out
je
dec
push
cmp
inc
mov
jg
xchg
push
std
rol
bound
out
or
outsl
push
add
or
xchg
jg
or
insl
add
push
sub
cmp
dec
inc
add
xchg
shll
push
push
inc
aam
push
in
cmc
dec
xor
sarl
jmp
clc
xor
xchg
stc
push
pop
pop
mov
repz
xor
aam
xchg
rcll
dec
popa
lock
push
clc
mov
push
scas
adc
jmp
mov
ret
fimuls
mov
movsl
cmpsl
ljmp
adc
xor
push
mov
arpl
std
xlat
adc
sbb
mov
inc
mov
into
enter
aas
xchg
jle
ja
cmp
xor
lret
insl
pop
or
add
pop
jno
mov
scas
mov
orl
jp
adc
sti
xor
dec
sub
fildl
movsl
fwait
scas
rorl
mov
add
sbb
sub
pop
mov
cmpsb
pop
inc
clc
or
and
or
cmpb
pushf
xor
mov
lea
jo
in
pop
jg
pop
je
or
mov
jo
pop
sbb
lret
inc
push
stos
mov
lds
ss
pushf
mov
int
in
das
mov
pop
push
or
popa
and
mov
std
xor
add
mov
repnz
jg
xchg
push
and
aaa
bound
dec
pop
jl
mov
xlat
inc
push
and
and
mov
loop
lret
adc
push
push
xor
sbb
jl
xlat
mov
mov
test
sub
fsubs
xor
mov
mov
out
out
mov
lds
out
add
out
lcall
inc
mov
aaa
jl
sub
and
push
into
sti
xor
mov
aas
and
xorb
aaa
mov
sub
xlat
mov
icebp
in
iret
mov
testl
insl
sbb
rorl
sbb
sbb
ja
jbe
mov
nop
test
setns
push
push
stc
add
nop
xchg
rcl
cs
sbbb
sub
movsl
and
dec
pop
pop
jl
mov
xor
aam
pusha
fisubrl
icebp
lock
adc
jmp
loopne
xchg
push
dec
sbb
sbb
movsb
add
loopne
pop
inc
dec
pop
fcomps
rcrl
into
dec
adc
test
daa
cltd
push
xchg
loope
rclb
test
jg
icebp
lods
mov
call
push
sub
gs
ficompl
sbb
sbb
pop
and
clc
adc
loop
sbb
ds
push
out
std
je
pop
mov
sbb
addr16
idiv
rorb
pusha
in
jge
mov
ja
jg
pop
push
fs
insl
stos
add
dec
mov
test
dec
fistl
shll
mov
lret
push
jbe
test
lret
add
jg
ds
push
movsb
adc
ds
test
pop
outsb
fsubrs
arpl
mov
pop
addr16
out
and
dec
add
adc
std
test
ret
mov
cmp
test
incb
cmp
mov
rcl
sbb
jb
jnp
fwait
icebp
call
fxch
and
inc
movsl
outsb
sbb
in
cs
xor
cmp
adc
or
jb
rol
daa
mov
test
pop
cltd
shll
sbb
sbb
jmp
nop
decb
in
mov
rolb
mov
lret
fildll
dec
pop
out
ss
cmp
xchg
outsl
cld
inc
scas
and
mov
das
mov
pop
mov
lret
pop
sub
jge
test
adc
fchs
adc
loop
rcl
test
les
test
add
sbb
or
jb
cmp
jle
jl
jae
jne
mov
stc
inc
jg
add
stos
or
xchg
scas
cmp
fsubrl
jbe
insb
rorb
loope
pushl
divl
or
sbbl
fstl
xorl
insl
sti
stos
mov
mov
les
and
mov
adc
dec
inc
mov
jmp
xor
push
mov
and
movsb
push
es
dec
push
push
es
inc
and
stc
lahf
and
mov
sub
or
mov
stos
lods
add
outsl
xchg
fdivrl
jno
adc
cmpsl
add
mov
xchg
test
scas
test
aas
pop
fs
lret
out
mov
sbb
daa
and
fcmove
popa
cs
inc
mov
pusha
cmc
dec
xchg
xchg
scas
cs
daa
outsl
andl
sub
xor
movsl
xor
mov
movsb
ret
pop
inc
enter
push
pop
mov
ja
fildl
mov
dec
jl
xchg
adc
xor
sub
in
js
insl
enter
xchg
mov
in
dec
xchg
xor
mov
xlat
bound
imul
imul
out
repz
arpl
pop
mov
xor
or
dec
into
pop
push
mov
test
add
das
xchg
dec
add
cwtl
divb
push
in
out
jbe
insl
in
add
call
pop
xor
inc
pop
sbb
jns
sub
mov
jl
pop
add
mov
xchg
vpmacsdqh
mov
test
aam
sahf
out
addr16
nop
push
loope
psrld
mov
jns
mov
popa
cmp
rcll
xor
sbb
dec
sbb
adc
std
cmp
lahf
or
ficoml
pop
mov
and
or
mov
inc
pop
lret
pop
das
shr
fiaddl
repz
js
es
in
sbb
mov
loope
mov
pandn
push
out
xor
mov
cmp
cmp
ret
xchg
hlt
inc
pusha
push
xor
jge
lods
or
cwtl
mov
mov
cs
push
dec
push
mov
inc
jge
add
les
xor
mov
cmpsl
les
jp
jb
or
jmp
call
cmp
pop
push
je
xor
je
inc
in
lcall
pop
bound
pusha
loop
and
push
jmp
add
push
jle
out
out
xchg
adc
in
fmull
pop
je
ror
pop
xchg
test
mov
outsl
mov
hlt
orl
xchg
test
jnp
cmp
push
in
daa
insl
mov
add
in
push
xchg
jge
jp
push
lods
cmc
data16
cmp
xchg
cmpsl
jo
pop
pop
daa
adcl
cli
test
xchg
lods
test
push
mov
loop
xor
or
movsl
mov
mov
outsl
dec
loop
pop
cmp
std
arpl
mov
jg
xor
lret
cmc
sub
sbb
int3
jbe
movsl
jecxz
adcl
sbb
sub
shll
in
loope
ficomps
mov
push
movl
and
test
xchg
add
mov
and
out
addr16
sbb
or
dec
hlt
pop
adc
inc
inc
iret
jno
mov
test
pop
jge,pn
mov
out
push
push
nop
ret
or
out
cmp
rolb
mov
lods
mov
jae
xor
ret
out
or
dec
out
scas
mov
popa
adc
and
mov
pusha
jno
imul
lods
lods
pop
aam
sub
into
int3
sub
imul
cmp
dec
jno
scas
mov
add
lea
mov
mov
mov
sub
repz
shrl
add
jecxz
sub
xchg
push
divl
push
stos
jne
jle
cmp
xchg
push
mov
mov
mov
add
in
out
jo
dec
lea
jl
int
mov
call
dec
and
fildl
mov
or
push
mov
fistpl
mov
sub
cmp
inc
jmp
mov
lock
xchg
dec
mov
mov
cmp
mov
add
push
mov
in
ffree
and
mov
out
inc
sbb
push
sub
insb
out
cmp
push
insl
inc
inc
pop
movsb
inc
adc
and
add
pop
mov
sub
add
push
icebp
sbb
add
inc
sub
mov
mov
sarb
aaa
icebp
dec
push
hlt
enter
sbb
mov
xchg
cmpsl
mov
mov
adc
jecxz
or
scas
shlb
xchg
dec
popa
jp
pushf
dec
andl
mov
dec
lods
or
mov
pop
pop
pop
inc
jecxz
push
cmpb
mov
mov
test
aas
dec
mov
and
or
or
js
cmpsl
jge
cmpl
hlt
in
push
sub
push
or
fsts
lods
fisttpl
dec
xchg
aad
stos
leave
je
jg
pop
push
repz
das
inc
pop
test
mov
js
and
inc
add
mov
in
xchg
fcom
shrl
jb
sub
ljmp
push
add
inc
outsl
mov
repnz
mov
fstl
push
addr16
add
sub
jns
sub
mov
mov
adc
clc
popf
sub
cs
in
cmpsl
and
lds
push
out
mov
and
push
xchg
nop
adc
sbb
push
xor
in
add
xor
push
fbstp
add
mov
jno
sbb
fwait
jno
jmp
repz
out
arpl
rorb
rcrl
mov
imulb
lock
mov
stos
or
cmpsl
fcmovnb
in
arpl
jae
shlb
adc
pop
mov
jg
pop
push
test
and
cmp
adc
mov
mov
fldl2e
icebp
mov
cmp
add
xor
mov
jo
or
push
loopne
pop
rcrl
mov
xchg
adc
mov
js
aaa
icebp
and
std
cmp
shll
mov
in
mov
in
aad
sarl
lret
vmovaps
loop
pop
fs
repnz
adc
in
xlat
loopne
push
lods
lods
add
mov
testb
out
dec
inc
sbb
mov
shll
inc
jo
jnp
xchg
mov
stos
movsb
mov
inc
push
mov
cmpsb
cmp
in
mov
ss
lods
sbb
jge
or
mov
lods
fidivs
jmp
fsubr
add
push
mov
adc
shl
sub
lret
lcall
cmp
adc
xlat
cmp
rol
orl
fstpl
in
out
adc
adc
out
mov
or
sbb
call
std
shlb
test
xor
daa
xchg
push
jle
jo
inc
leave
stos
out
mov
pop
mov
mov
shrl
push
cs
outsb
dec
dec
pop
pop
movsb
pop
jg
add
es
scas
xor
pusha
dec
mov
jo
mov
out
repz
xchg
leave
xor
ja
fisttpll
fiadds
mov
sbbb
adc
subb
loop
jb,pt
sti
mov
jecxz
lea
add
inc
cs
push
inc
jns
pop
pop
decb
jnp
imul
push
cmp
mov
subl
outsl
lock
ds
into
testb
sub
add
cmc
lret
insb
cmpsb
leave
stc
mov
xchg
dec
dec
cmp
mov
cltd
mov
adc
lods
or
shlb
jg
xchg
jno
sub
out
inc
push
sbb
aaa
cmpsb
js
cwtl
andl
jge
or
cwtl
sbb
sbb
add
xlat
jle
xchg
or
pop
mov
xchg
mov
rep
and
in
std
ljmp
std
test
scas
cmpl
shrl
stos
loopne
or
nop
xchg
iret
rolb
insl
pop
dec
aaa
ss
dec
mov
mov
iret
lahf
arpl
repnz
mov
push
cli
filds
inc
and
adc
or
or
fucomi
adc
or
xchg
lahf
lret
push
stc
sbb
pop
inc
aam
incl
dec
ret
insb
movhps
dec
adc
test
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
arpl
adc
jl
inc
pop
jl
mov
dec
sbb
sub
inc
mov
decl
repz
sub
add
push
mov
add
jmp
addr16
cmp
cltd
daa
mov
ret
inc
pop
arpl
jo
enter
sahf
xor
inc
stos
ss
aas
dec
fmulp
ret
imul
fiadds
sub
or
mov
mov
fwait
aam
scas
push
or
or
je
mov
test
add
clc
ret
push
stc
nop
cmp
mov
mov
mov
jne
sub
loop
cmp
dec
add
fildl
mov
fsubl
jecxz
cmp
fdiv
inc
fsubs
cmc
out
cmp
add
std
inc
push
xor
push
dec
jo
repz
aam
std
mov
dec
cltd
ja
idivl
pop
jnp
imul
mov
mov
jl
rcr
rclb
pop
and
jae
adc
adc
hlt
dec
cmpl
ss
out
jae
jnp
xchg
inc
mov
pop
push
pop
push
cmp
dec
push
mov
xchg
xchg
subl
mov
aaa
loopne
sbb
inc
mov
into
loopne
and
mov
jecxz
scas
push
es
sbbb
add
mov
sub
xchg
jo
popf
decb
call
xchg
pop
adc
inc
jle
xchg
cmc
hlt
test
jb
inc
inc
mov
cwtl
ds
push
sahf
xchg
lcall
outsb
int3
xor
shll
jl
aas
xchg
mov
ja
add
fcomps
push
outsl
test
cmp
insl
mov
vpunpcklbw
cmpsb
pop
aad
pop
xchg
xchg
bound
jle
mov
dec
mov
movb
pop
repnz
scas
xor
mov
mov
adcb
xor
adc
jns
in
dec
addr16
mov
scas
std
in
je
sub
es
fldl
das
das
rcll
xchg
xor
mov
push
push
and
mov
sbb
out
xor
decb
fnstenv
and
jge
sti
das
repz
or
or
inc
lods
ficoml
pop
loopne
fs
mov
jb
sbb
out
bnd
jne
hlt
sbb
jl
mov
or
adc
test
cwtl
adc
push
outsb
in
jns
pop
enter
das
add
mov
outsl
adc
mov
jmp
push
cmp
orps
call
fsub
adc
push
es
enter
xchg
mov
sub
fs
inc
cs
jne
adc
sbb
popf
lret
popf
sbb
lods
cmp
rorb
dec
loope
sub
push
mov
in
lret
insl
push
mov
mov
mov
test
addr16
mov
pop
lret
dec
fdivs
test
inc
jns
or
jbe
es
mov
repz
jecxz
dec
xor
aaa
test
out
in
pop
sub
cwtl
and
mov
xchg
mov
and
rorb
sbb
sub
add
jg
xchg
adc
cmpsl
adc
out
pop
pushf
pop
xchg
out
repnz
cmp
fadds
bnd
loop
in
xchg
xlat
pop
mov
out
mov
mov
fldl
out
cli
jge
ljmp
jle
loope
outsl
enter
sub
mov
scas
xchg
imul
cltd
xchg
mov
mull
out
push
addb
lock
cmp
and
pushf
xchg
daa
adc
scas
mov
fdivs
out
fnstenv
push
push
imul
mov
fistps
iret
mov
pop
push
pop
cmp
call
hlt
add
test
inc
adc
push
cli
push
mov
andl
outsl
mov
movsb
loope
jo
sub
push
pusha
xor
dec
adc
sub
mov
mul
and
mov
mov
repz
cmp
xchg
jbe
in
in
arpl
ss
pop
scas
push
ljmp
push
mov
fstl
sbb
stos
aas
inc
xchg
jae
mov
or
add
jp
fisubs
mov
dec
pop
and
dec
xor
stos
ret
fldenv
mov
sub
es
jl
aas
fwait
add
divb
arpl
scas
stc
sbb
icebp
sar
xchg
and
push
mov
cmp
aaa
stos
jge
addr16
jae
enter
dec
mov
push
pushf
push
and
or
push
imul
pop
loopne
push
pop
pop
scas
repz
fcoms
mov
jnp
sbb
xor
js
lret
xchg
in
fidivrl
mov
dec
mov
jbe
nop
push
mov
fistpl
testb
decl
push
inc
inc
xchg
push
cltd
sub
je
pushf
pop
dec
add
xorl
loop
aam
stos
xor
into
test
ja
mov
push
dec
jmp
out
sbb
sub
js
outsl
add
jp
cwtl
sahf
pop
inc
lods
lcall
adc
cltd
pop
mov
jns
jae
sub
inc
imul
push
mov
dec
insl
cmpsb
jmp
cli
mov
pop
add
mov
cmpsb
in
test
push
and
xchg
or
divl
cmp
push
and
sub
arpl
pcmpgtw
mov
js
jge
daa
fcomi
dec
pushf
int3
orl
push
das
leave
jo
les
test
cli
into
mov
ret
pop
fldpi
in
aaa
jae
cmp
pop
dec
pop
inc
fcmovnu
mov
and
movsl
repnz
push
sbb
fisttpl
fdivrp
cmp
push
pushf
sbb
lret
popf
enter
in
stos
insl
out
stos
dec
push
cmp
pop
imul
movsb
mov
or
fiadds
and
jae
mov
or
cmpsb
jecxz
pop
repz
sbb
or
data16
movsb
mov
adc
sarl
and
mov
fs
push
and
or
jne
repnz
push
fldcw
cwtl
mov
cmp
jmp
dec
lods
and
popf
fs
fidivrl
sub
movsb
pop
xchg
test
ds
loop
mov
push
in
fsubl
xchg
outsb
mov
or
adc
pop
ljmp
and
out
gs
imul
sbb
push
adc
cltd
and
gs
push
dec
dec
out
mov
jae
cltd
cmp
cli
lds
arpl
sti
test
jl
shlb
add
lret
xchg
or
inc
mov
enter
mov
std
inc
ficoml
fldenv
xor
aam
shrb
push
push
clc
mov
dec
in
dec
in
fsubs
dec
mov
cltd
sub
add
xchg
hlt
stc
xor
repnz
outsl
lcall
lea
jmp
push
cmp
insb
mov
cmp
push
mov
mull
and
movb
inc
jl
ja
daa
in
xchg
cmpsb
add
inc
push
jno
mov
mov
arpl
inc
cmp
adc
fwait
hlt
pushf
sbb
sbb
test
push
pop
cmp
push
int
mov
adc
push
xchg
mov
dec
out
dec
add
movsl
jp
pop
mov
jg
test
lea
test
ret
adc
push
out
push
sub
ljmp
lock
sbb
inc
punpckhwd
or
repz
shl
fcmovu
mov
mov
push
in
adc
pop
popa
mov
sbbb
pop
add
xor
xchg
pushf
shrl
js
adc
outsb
lea
sbb
sub
je
xlat
pop
into
jns
std
or
fbstp
fsubrl
clc
and
mov
out
out
ret
int
xlat
loope
mov
loopne
mov
mov
mov
loop
and
lock
dec
pop
cmp
mov
inc
loope
aam
push
adc
cmp
jae
jmp
xchg
rol
div
adc
lock
data16
test
pusha
cltd
and
pusha
mov
in
and
rcrl
cltd
xchg
stos
lret
adc
mov
pushf
aam
or
lds
add
repz
arpl
in
dec
pop
bound
mov
lods
fisubl
add
iret
aam
cmpsl
insl
fistpll
push
mov
push
insb
dec
movsb
push
loope
mov
push
mov
pusha
insb
cmc
xor
insl
jecxz
pop
xchg
xchg
push
adc
outsl
dec
jb
mov
adc
mov
cs
dec
hlt
mov
es
jmp
fcomip
pop
sbb
stc
adc
sbb
push
inc
loop
adcb
icebp
dec
lods
shlb
test
mov
mov
mov
aam
push
int
dec
fiadds
add
lods
ss
gs
mov
dec
mov
dec
sbb
insl
dec
and
pop
xor
stos
mov
sub
rclb
lahf
testb
xor
add
fstps
test
mov
jns
lret
adc
mov
aas
pusha
push
mov
setbe
insb
inc
push
int
mov
xchg
clc
dec
push
out
fwait
aam
adc
jge
clc
mov
test
push
add
pop
mov
shlb
jge
xchg
dec
and
mov
movsb
daa
or
xorb
mov
cmpsb
scas
inc
cli
dec
js
jge
fsubrp
call
test
add
or
fsubs
je
pop
cmp
jmp
pushf
popa
ja
jnp
mov
roll
jl
xchg
xor
test
xor
pop
test
pop
inc
aas
cs
fistpll
movl
add
xchg
mov
js
popa
pop
stos
stc
shrb
push
or
daa
jg
pop
or
jb
movsl
pop
push
jl
jb
in
repz
mov
mov
scas
sahf
gs
call
xchg
enter
jmp
jecxz
mov
outsb
daa
mov
xchg
sbb
inc
inc
xchg
push
ret
loop
loope
add
jge
out
leave
mov
jg
mov
add
pop
das
enter
loop
popf
or
in
rorl
inc
cmpsb
jne
cmp
enter
add
xchg
cmp
hlt
pop
xchg
popf
inc
mov
mov
sub
cmp
jne
loope
sarb
stos
adc
pop
cmpsb
shr
lods
ds
cmp
sbb
jg
out
or
xor
cli
adc
sub
pop
in
out
aad
push
and
lret
pop
inc
adc
fidivl
int3
adc
ljmp
pop
scas
mov
mov
insl
sub
sahf
ljmp
testb
dec
jp
dec
fldt
and
and
mov
test
mov
xchg
jnp
aam
xchg
std
mov
cmpsl
dec
into
inc
pop
push
cmpsb
mov
in
addl
xchg
fisubrl
cltd
inc
das
sub
push
pop
rolb
test
adc
mov
cmp
popf
push
adcl
add
push
jle
inc
cmp
xchg
xchg
out
jns
je
scas
lcall
dec
loope
aad
mov
push
shlb
pusha
cmp
movsl
gs
pushf
dec
inc
hlt
sub
test
hlt
mov
pop
mov
lret
push
inc
dec
jle
mov
dec
stc
mov
outsb
jbe
gs
xorb
mov
stc
insb
sub
xchg
das
jp
sbb
xchg
scas
imul
cs
and
mov
ja
sub
dec
xchg
dec
mov
gs
dec
xor
adc
sub
xchg
push
and
stos
lahf
movsb
cmp
mov
pop
adc
jecxz
mov
int
das
adc
add
xlat
fcmove
pop
mov
jge
or
cmp
inc
push
xchg
cmpsb
aam
dec
dec
sbb
pop
push
gs
push
sub
inc
icebp
in
test
jmp
xchg
xchg
ret
xor
dec
jae
mov
lahf
cwtl
xor
xor
popa
adc
inc
cmpsb
sahf
testl
addr16
cltd
frstor
inc
or
js
testb
sbb
nop
jecxz
push
pushl
fcmove
cld
push
cmc
arpl
and
inc
sahf
aam
push
or
xchg
xchg
cmp
mov
jmp
stos
fxch
dec
xchg
or
sbb
sbb
xor
incl
adc
shl
jl
add
push
cmpsb
sbb
ret
or
popf
xor
imul
jns
test
mov
in
jne
pushf
inc
imul
sub
fwait
stos
pushl
mov
ljmp
lea
rcll
mov
and
mov
es
pop
push
jns
push
imull
xchg
xchg
xorb
adc
sub
xor
adc
xchg
js
xor
fwait
cli
xlat
jno
nop
nop
imul
push
xor
jg
out
mov
cmp
jae
push
clc
mov
and
xor
sub
and
jl
movsl
jne
mov
push
ljmp
or
in
dec
roll
movsb
pop
mov
or
xchg
shlb
aaa
adc
fwait
pop
push
lret
pushf
sbb
cmp
js
cli
xor
inc
push
dec
and
loope
pop
sbb
inc
pushf
nop
jecxz
sti
and
cmp
dec
aam
je
fsubl
sahf
out
push
mov
pop
xchg
cs
cmp
jge
and
hlt
daa
pop
mov
out
popf
clc
xor
cwtl
out
or
and
lcall
jmp
adc
test
and
fsubs
pushf
scas
lock
arpl
leave
mov
mov
xor
and
dec
mov
sahf
dec
sub
lods
push
scas
mov
decl
es
loopne
jne
inc
sub
push
inc
imul
or
push
push
sbb
aaa
ljmp
int
ljmp
lods
push
insb
dec
cmp
inc
cwtl
mov
dec
pop
clc
scas
cmc
add
pop
out
lcall
sub
cwtl
outsl
sbb
xorb
cmp
or
mov
outsl
out
mov
xchg
movsb
dec
add
lea
divl
mov
cli
add
dec
mov
daa
mov
insb
and
enter
jge
das
inc
mov
pop
das
push
fstpl
push
mov
jl
mov
or
aam
sub
jl
enter
jge
jb
add
test
bound
mov
dec
add
inc
pop
xchg
jp
outsl
pop
outsl
jg
inc
xor
test
sti
hlt
aaa
outsl
xor
fbstp
pop
xchg
ljmp
mov
sub
xchg
jae
in
data16
and
jecxz
imul
test
mov
sbb
mov
add
lahf
push
push
test
ljmp
xor
or
pop
mov
pushf
out
inc
mov
and
test
inc
loope
in
into
push
or
stc
fisubs
sub
bnd
fs
aam
popa
adc
mov
mov
aaa
sbb
ss
data16
cmpb
cli
daa
sti
jle
push
cmp
sbb
aaa
clc
subl
add
shll
mov
in
pop
sbb
jbe
rorb
pop
xor
mov
cmp
push
addr16
mov
dec
call
xchg
imull
jo
and
in
sbb
out
sbb
cmp
jecxz
bound
rclb
mov
jge
mov
xor
ret
or
mov
shlb
and
jg
sub
lret
dec
xchg
fwait
test
xchg
aad
pop
or
adc
mov
inc
insb
nop
movsb
xchg
adc
fnsave
mov
lcall
mov
fdivrp
mov
rclb
pop
push
sub
pop
jecxz
add
outsb
rclb
add
xchg
mov
push
stos
cmp
outsl
jp
out
iret
in
sbb
ret
fbld
rcll
sbb
test
cld
outsb
xor
cmp
ja
ds
mov
lret
fidivl
add
shlb
test
out
add
xchg
test
jae
jle
in
test
add
add
sarb
push
inc
or
loop
rorl
test
rcr
sub
push
fisttpl
arpl
xchg
sti
push
jge
stos
repz
and
sub
or
jnp
mov
add
pop
adc
xchg
out
jle
arpl
gs
enter
add
insl
out
int
adc
push
loopne
sub
mov
xchg
cld
jae
pop
lock
jno
xor
jle
imul
or
cmp
xor
mov
sbb
xchg
inc
mov
pop
addr16
mov
enter
cmpsl
scas
sub
inc
cmc
std
std
adc
sub
arpl
and
mov
fs
out
mov
mov
fdivr
pop
out
fildll
lods
sub
inc
jmp
sub
out
mov
stos
push
adc
sbb
inc
notl
gs
ja
and
sbb
mov
dec
movsb
cli
in
inc
aad
adc
jmp
clc
fdivrs
xlat
add
mov
dec
sbb
inc
pextrw
inc
lret
xor
sarb
inc
jp
stos
rcl
pop
imul
pop
test
ficoms
adc
or
pop
je
fimull
popf
cld
cmc
xchg
cmp
add
pop
xchg
imul
into
push
xor
or
lods
scas
mov
in
dec
aas
or
adc
dec
mov
inc
fisubs
ds
pop
dec
outsl
mov
sbb
insl
adc
rcll
jbe
lahf
sti
sub
push
mov
push
nop
in
jl
loope
fisubrl
xchg
leave
int3
loope
jne
aam
pop
pusha
push
adc
lahf
out
js
mov
jnp
nop
cmpsl
jp
inc
push
or
dec
dec
xor
push
arpl
xchg
lds
popa
nop
ret
mov
sbb
dec
xchg
addr16
cmpsl
cld
aas
mov
daa
inc
cmpsl
lcall
bound
ss
inc
mov
lcall
stos
mov
loopne
ljmp
imul
xor
adc
call
mov
add
and
orb
inc
xchg
das
and
enter
pop
inc
cmp
in
fildl
das
add
fdivrl
or
lock
xchg
repz
cli
xor
inc
loopne
push
dec
jo
add
mov
pop
add
or
inc
push
scas
inc
arpl
stc
mov
xchg
mov
pop
jp
test
out
das
jbe
pusha
mov
mov
push
push
push
push
scas
push
into
xchg
dec
movsb
xor
and
into
lcall
jle
daa
xchg
insl
loope
popa
xchg
cmpsb
scas
xor
inc
cs
aad
loope
enter
fwait
fwait
pop
inc
sahf
jbe
inc
jmp
or
mov
adc
add
mov
bound
sar
lods
mov
push
gs
roll
pop
jno
push
leave
mov
fs
push
pop
sbb
test
xchg
pop
sbbl
cmpsb
push
fiadds
jl
sbb
scas
cmp
jmp
cmc
je
or
aas
cmp
out
sbb
in
push
jbe
inc
or
mov
mov
push
jae
insb
push
outsl
mov
sbb
pop
popa
ror
sbb
mov
xor
pushf
out
lret
pop
in
hlt
xor
mov
das
xchg
arpl
cmp
push
push
cmp
add
ss
shlb
adc
pop
insl
leave
dec
data16
add
mov
add
fisubrl
into
out
push
lods
pushf
adc
push
out
sbb
enter
and
hlt
add
out
rcrl
nop
les
aas
and
xchg
in
adcb
hlt
lret
sti
fcoms
sub
outsb
in
fstp
dec
aas
loope
mov
inc
js
mov
mov
push
fs
enter
icebp
and
push
das
pop
pop
push
or
xchg
mov
int
xor
mov
xchg
push
test
sub
gs
xchg
xchg
mov
xor
aad
pop
rorb
xchg
mov
popf
data16
enter
shrl
sub
dec
ret
push
shll
scas
push
pop
cmp
lret
lea
cmpsb
adc
std
mov
rorl
loop
mov
or
mov
fdivs
in
test
lds
mov
imul
sahf
mov
mov
xor
inc
xchg
pop
data16
pop
pop
insl
aas
pushf
mov
sub
bound
jecxz
nop
enter
or
inc
xchg
je
mov
aad
in
sbb
roll
fildll
push
or
push
pop
fwait
mov
ficompl
clc
cmp
xor
addr16
fdivrs
cwtl
sbb
jno
leave
sbb
pop
popa
scas
shll
mov
push
pop
test
cmp
stc
pop
xor
ja
pop
and
adc
jmp
daa
push
add
shrl
lock
xor
inc
xor
ss
mov
ret
and
jnp
pop
cwtl
subl
jmp
ss
call
push
pusha
lea
mov
push
or
cmp
jl
pop
sarl
call
pushf
jnp
mov
jge
add
push
cltd
xchg
mov
adc
in
sbb
jecxz
or
lcall
adc
mov
mov
jmp
cld
and
clc
mov
into
jnp
out
test
js
mov
adc
sbbl
ret
ficoms
jbe
jb
lret
sbb
call
push
enter
push
loope
add
into
pop
in
pop
cmpsw
shll
movsb
into
sub
adc
lahf
sbb
or
mov
mov
xor
add
and
xor
and
add
mov
push
push
loopne
in
xor
out
pop
iret
out
adc
pop
xchg
xchg
int3
mov
test
shll
pop
sbb
mov
sbb
jne
mov
pop
fstl
xor
or
mov
pushf
xor
sub
mov
lods
stos
clc
cld
shrb
je
inc
sbb
add
out
addb
imul
dec
out
inc
adc
and
adc
push
stc
push
push
repnz
push
iret
scas
imul
adc
sub
cmpsl
orl
lar
mov
dec
out
das
push
sbb
sbb
jle
rcrb
dec
jge
sarl
scas
fists
mov
outsl
in
loop
sbb
add
jne
shr
mov
aaa
ror
inc
xchg
into
into
repz
test
dec
push
sbb
cld
xor
mov
sbb
xor
dec
inc
mov
out
aaa
call
les
cmpl
push
test
lea
sbbb
nop
dec
stc
or
adc
test
outsl
movsb
int
push
stos
lock
out
sahf
fbstp
roll
mov
add
mov
sbb
or
mov
xchg
inc
mov
fcomps
imul
and
pop
dec
mov
jbe
loop
loop
jo
mov
fcoml
adc
cld
mov
call
xlat
movsb
adc
push
ret
int3
loopne
pop
ds
stos
cmp
cmp
dec
fstpl
inc
call
loope
in
cltd
mov
iret
insb
pop
mov
jl
dec
arpl
sbb
xor
inc
pop
ds
xchg
mov
inc
jg
and
push
sbb
mov
jbe
rolb
aam
into
mov
mov
sub
jmp
xor
mov
xchg
mov
clc
jecxz
mov
mov
shl
jb
xchg
adc
mov
mov
lea
and
jge
mov
or
insl
mov
test
cmp
adc
sbbl
out
push
addb
mov
fisubl
nop
popf
sti
sbb
inc
clc
sbb
lret
push
mov
mov
sub
xchg
aad
scas
xchg
not
inc
mov
popa
cmp
cs
pop
dec
cmc
cmp
sbb
dec
mov
addl
cmc
andl
inc
pop
mov
clc
push
xchg
lret
xor
jb
xor
in
mov
pop
pop
push
add
fcmovne
ret
and
das
xchg
scas
daa
int
movsb
test
lea
les
sub
ret
loopne
out
outsl
ds
xor
inc
adc
sub
lods
lock
jge
in
ja
sub
mov
out
inc
xchg
stc
loop
test
mov
mov
sbb
lock
gs
mov
cmpsb
clc
push
push
push
pop
xchg
sbb
sub
dec
in
testb
cmp
testl
mov
vmwrite
cmp
adc
jne
lods
lret
test
xor
adc
iret
xchg
out
inc
cltd
cmpsb
pop
movsl
cltd
push
pop
fildll
xchg
fdivrs
lcall
sti
test
mov
stos
or
jl
and
ds
std
sti
repz
dec
mov
shll
lock
mov
je
out
mov
lods
fisttps
pusha
mov
rorb
ja
cmpsl
stos
adc
jp
or
in
xchg
pop
xor
movsb
mov
addr16
mov
pop
jp
sti
rorb
subb
pop
sub
cmpsl
xor
sbb
aaa
and
xor
out
inc
lahf
mov
testb
dec
mov
jmp
mov
xchg
sbb
std
movsl
mov
lock
mov
dec
pop
mov
jae
or
shlb
ficompl
jmp
mov
push
arpl
stos
add
push
lock
decb
es
pop
cltd
sub
jno
pop
into
test
lods
fstpt
daa
aaa
dec
mov
repnz
repnz
jl
xor
lcall
pop
fidivl
jmp
movsl
fadds
or
loopne
sbb
jp
inc
xchg
jge
fdivrl
cmpsb
cmc
dec
jbe
cmp
popa
jno
loope
cld
insb
dec
repnz
stc
mov
sbb
enter
dec
mov
mov
sub
mov
sbb
xchg
cli
pop
dec
xchg
lcall
xor
mov
jno
test
inc
pop
pop
mov
xor
mov
add
xchg
in
and
mov
pop
je
rcl
out
adc
loope
in
fwait
or
push
mov
dec
and
add
xor
add
test
adc
cs
ret
cli
imul
daa
dec
jp
jmp
outsb
sbb
mov
adc
jecxz
or
mov
jecxz
idivl
fdivs
jle
jo
jmp
mov
or
dec
xchg
fnstenv
in
lcall
shll
pop
mov
ss
lret
cld
daa
push
lahf
sbb
test
sbb
mov
cld
popf
fsubrl
push
jg
rorl
fists
mov
xor
aam
stos
sbb
mov
jmp
mov
or
adc
lods
sub
daa
outsb
push
mov
xor
mov
mov
push
jnp
dec
fcoml
jbe
cmp
cmp
cmp
rclb
xor
stc
enter
mov
stos
jecxz
xchg
and
mov
aas
test
fdivrl
inc
data16
push
sub
sbb
push
dec
mov
movsb
rol
rclb
adc
fbld
xor
daa
cmpl
js
mov
aaa
sbb
inc
inc
xchg
xchg
into
jge
shll
cmp
push
and
cmp
test
ds
roll
test
xchg
jns
orb
in
push
mov
je
bound
xchg
adc
jb
sub
into
and
nop
adc
sbbb
ret
xchg
cmp
rorb
or
loope
cld
cli
xchg
push
or
movsl
rcrl
cmp
lods
movsb
es
xorb
popf
jg
pop
dec
xor
sbb
xor
inc
adc
and
sub
jae
das
xor
push
pop
rcrl
cltd
sub
cmpsb
loop
cmp
jne
fildll
loop
adc
out
into
dec
sub
and
mov
push
aaa
jl
adc
in
pop
push
inc
cltd
pop
negb
ja
and
dec
in
lahf
imul
fidivrl
push
mov
std
xor
loop
push
jno
aam
psllq
or
cmp
add
mov
mov
xchg
push
mulb
lds
xchg
imul
pop
jmp
aaa
mov
mov
dec
lods
cmp
lods
jg
test
dec
sub
add
xchg
lock
scas
or
adc
push
jmp
xchg
and
scas
movsb
cwtl
mov
cmc
aas
scas
hlt
les
jg
loopne
pop
push
xchg
call
or
ja
gs
jp
aad
fs
mov
jns
and
aam
loop
push
mov
push
pop
add
xor
stos
mov
inc
jg
daa
and
mov
aad
xchg
mov
shlb
lods
dec
clc
mov
aad
enter
filds
or
dec
inc
mov
push
add
mov
lahf
hlt
clc
add
sbb
hlt
aas
pusha
aaa
stos
dec
repnz
mov
dec
and
inc
xchg
out
icebp
ret
out
adc
popf
adc
dec
dec
out
push
imul
push
sarb
jle
subl
inc
comiss
out
test
fwait
rcl
repz
ret
jbe
xor
dec
adc
mov
cmp
mov
push
decl
mov
and
dec
sub
or
outsl
insb
popf
ss
stos
les
inc
inc
testl
push
xchg
bound
mov
jbe
mov
addr16
push
fiaddl
push
jg
iret
mov
jmp
and
in
push
inc
jns
insw
cmp
jl
out
into
sti
pop
fisubl
sbb
popf
cmc
mov
jl
addr16
xchg
lcall
cmp
adc
call
dec
mov
pop
loopne
xchg
mov
movsl
aas
lahf
inc
mov
sub
add
mov
and
fs
fldcw
lods
outsb
enter
sbb
leave
lcall
adc
inc
orb
mov
ret
scas
nop
cmp
mov
and
xchg
xchg
pop
jno
ret
cwtl
popf
out
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
inc
lcall
sub
stc
jno
iret
lret
mov
test
sub
jp
cmc
pop
dec
outsb
fsubrl
scas
rcl
insb
cmp
insl
xlat
lcall
push
pusha
popf
out
sub
jge
mov
push
roll
scas
add
and
gs
cmpsb
pop
dec
push
test
lret
cwtl
imul
sbb
jae
popa
mov
rcr
xor
cmp
jecxz
push
jecxz
push
push
inc
jns
add
xorl
jp
jno
xchg
bound
in
mov
pusha
aaa
ret
xor
in
leave
test
xor
insb
inc
test
xchg
aaa
outsb
sarl
outsl
lods
aam
xlat
push
xchg
sbb
js
mov
cmpsl
shlb
vmptrst
cmpsb
adc
pop
adc
rorl
arpl
xor
loopne
push
push
dec
adc
repnz
dec
jo
jmp
or
cmp
inc
cmp
popf
push
pop
or
mov
adc
stc
addr16
int3
sub
outsb
lea
pop
ljmp
shll
lock
inc
shlb
cmpsb
push
aas
lods
popa
cmp
test
hlt
push
add
pop
jl
aas
sub
adc
ja
fisubrl
inc
andl
pop
addr16
push
mov
add
push
push
shll
mov
je
mov
subl
fbld
sub
fnstcw
mov
pop
data16
dec
adc
popa
sub
jne
cld
ss
data16
out
outsl
inc
add
or
inc
sbb
add
repz
and
loop
sbb
mov
aaa
dec
jne
and
dec
and
sub
pusha
pop
pop
mov
out
xor
xor
mov
cmp
mov
dec
fdivl
test
adc
xlat
dec
sub
std
push
mov
pop
jp
inc
mov
pop
sub
hlt
dec
imul
inc
lods
dec
roll
out
nop
stos
add
stos
cli
adc
mov
dec
ja
push
cmpb
or
xchg
sub
sarl
cwtl
mov
gs
es
subb
insb
xor
sub
pop
loop
bound
jb
movsl
jecxz
cli
call
push
and
sub
mov
ds
add
out
mov
cltd
pop
pop
outsl
ljmp
pop
inc
rcrb
pop
in
movsb
sub
push
imul
outsl
cmp
sbb
cmp
mov
int3
daa
xor
xchg
push
pusha
add
pop
pop
popf
cmpsl
outsl
cmp
xor
rcrb
sti
mov
xor
lock
adc
xchg
mov
xor
jb
icebp
das
fcoms
push
adc
sbb
pop
mov
pop
vmulpd
or
sub
pop
mov
mov
cs
pop
push
jge
ret
inc
outsl
outsl
in
push
frstor
inc
xchg
sub
jns
lods
or
lret
out
loope
and
mulb
insl
push
mov
lcall
test
sti
loope
sbb
pop
jo
sahf
fwait
bound
loop
in
cwtl
xor
rclb
cmp
lds
cmp
loopne
dec
rclb
out
xchg
ja
dec
sti
mov
arpl
fdivs
mov
inc
int
push
inc
push
sbb
adc
jne
call
sub
pop
pop
idiv
clc
into
cmc
pop
ret
fwait
sti
pop
jl
sarl
cltd
mov
pop
and
mov
shlb
mov
dec
xchg
shl
or
insb
push
sub
arpl
in
or
xchg
repnz
push
lock
in
xor
stc
pop
jge
stos
fwait
pusha
sub
je
outsl
mov
mov
iret
cs
mov
stos
shll
cmp
pshufb
push
rcrb
fists
lret
sub
mov
pop
cmp
mov
test
pop
fists
dec
in
lret
sub
movsb
jmp
sub
jb
aad
push
sub
mov
fisttpl
sbb
lretw
mov
popf
pop
sub
imul
inc
popa
dec
jmp
or
scas
dec
sahf
cmp
aas
testb
mov
clc
cmpsl
mov
pop
out
cmc
ss
std
cltd
xor
push
test
or
jg
pusha
or
xchg
pop
sarb
repnz
or
push
xchg
arpl
test
jb
push
std
andl
and
xchg
add
fsubs
adc
dec
pop
add
fsubr
rcrb
fstps
or
js
mov
jb
push
sbb
push
mov
push
inc
test
dec
out
shlb
jmp
mov
sub
lock
push
xor
add
push
jmp
sub
in
hlt
imull
jle
pusha
pop
xor
shll
cwtl
xorb
in
into
sahf
mov
push
testb
push
push
mov
leave
jae
das
inc
inc
bound
fs
movsb
jb
loop
pop
inc
mov
mov
add
je
lret
das
mov
sub
fsubrl
push
and
pop
out
push
sbb
cmp
cmp
nop
mov
fsubl
inc
in
aad
and
sbbl
sbb
and
mov
mov
inc
ja
sub
int
out
pop
jmp
out
rclb
ret
or
std
mov
divl
in
decb
add
pop
cs
mov
lret
push
lock
mov
adc
lds
subb
scas
in
shl
mov
pop
sahf
and
xchg
push
xor
sbb
jl
cmp
in
jbe
ret
inc
jbe
sub
or
out
dec
push
sbb
or
fnstcw
xor
sub
out
sbbb
lret
sbb
sbb
test
hlt
push
movsb
aad
scas
xchg
push
push
push
setl
js
int
shll
xor
cld
roll
les
dec
xchg
xchg
rorb
jo
inc
ss
sbb
sub
icebp
pop
cmc
fdivl
pop
stos
es
cld
and
nop
out
dec
cmp
jb
xchg
sti
cmp
xchg
cmp
aad
mov
fsubrp
gs
dec
gs
loopne
inc
xchg
sbb
iret
mov
cmpsl
divb
dec
es
fbld
jge
dec
pop
mov
jecxz
xchg
nop
inc
xor
lock
loope
xor
dec
mov
fcmovne
int
or
gs
bound
xchg
cwtl
mov
sahf
fdivs
mov
arpl
or
pusha
dec
inc
bswap
data16
ret
fld
out
jg
mov
mov
xor
call
int3
sub
jg
inc
stc
and
xchg
inc
lds
bound
push
fcmovnbe
or
xchg
or
divb
std
jnp
push
pop
lods
pushf
push
iret
xlat
pushf
mov
adc
xchg
punpckldq
fmull
sub
and
hlt
jne
mov
cwtl
jae
rol
cmpsb
sbbb
popa
xchg
loopne
shll
ds
out
cld
xor
shlb
adc
test
bnd
xchg
imul
inc
sub
lea
push
and
hlt
insl
mov
hlt
int
xchg
addl
sbb
sti
pop
popa
stc
bound
enter
fstps
pusha
sbb
cmp
mov
sbb
test
rorl
xchg
je
pop
daa
push
movsl
jg
pop
shl
fstl
pushf
sub
sub
dec
fistps
ficoml
out
cmovb
and
fbld
jl
pushf
pop
cmpsl
xorl
in
in
imul
lahf
inc
nop
mov
movsl
jecxz
call
popf
test
faddl
xchg
mov
mov
stos
or
pop
cltd
mov
mov
cwtl
ds
inc
or
cmpsb
xor
sbbl
jbe
cmpsb
pop
mov
mulb
pop
xor
xor
sbb
sbb
icebp
cmpsl
pop
adc
xchg
fnsave
pop
ljmp
inc
cmpsl
xor
pop
enter
jne
jl
and
jle
inc
lods
adc
es
sub
das
data16
loop
adc
ror
push
mov
cmp
sub
cmp
mov
sub
mov
jp
jmp
sbb
rolb
test
lods
mov
cmpsb
mov
push
daa
jecxz
popf
je
cli
in
adc
or
fs
or
hlt
dec
and
jmp
mov
shll
pop
pop
dec
cmp
rcrb
sbb
imul
shlb
ljmp
mov
push
shl
or
xlat
or
adc
add
or
je
rol
test
or
xlat
js
mov
xor
sbb
or
sbb
mov
shrl
shr
jle
es
cmpsb
es
repnz
mov
dec
and
sti
sbb
out
xchg
add
jb
inc
ja
jns
adc
xlat
lahf
or
negl
roll
jg
push
loop
push
inc
jge
push
push
mov
inc
int
clc
nop
insb
add
pop
out
mov
pop
xchg
ja
idivl
in
lods
xor
push
pop
jg,pn
dec
test
jno
sbb
cmp
and
or
cli
incb
mov
loop
hlt
xor
mov
mov
lahf
mov
divl
es
out
scas
fcoml
dec
mov
rcrl
and
pop
ja
cs
cmpsl
xchg
mov
movsl
push
cmpsl
mov
pop
in
fadds
popa
sub
mov
adc
dec
mov
movsl
gs
repz
aad
mov
sbb
pop
push
call
movsb
out
aas
mov
push
cmp
mov
sbb
sbb
bound
fistps
mov
jl
adc
mov
daa
test
add
mov
aad
mov
pop
in
std
mov
dec
mov
enter
cltd
mov
mull
mov
or
test
stos
aaa
lret
cmpsl
push
lret
add
or
xchg
out
or
add
lods
xchg
das
xorl
mov
cmpsl
out
test
cmp
rcrl
fcoml
clc
xlat
cwtl
mov
sub
push
loop
lea
dec
xor
cmc
ljmp
ret
test
xor
mov
arpl
pop
jl
dec
add
xchg
std
or
xor
jp
arpl
jbe
adc
sbb
mov
das
test
jmp
dec
sbb
xchg
movsl
adc
and
jmp
jl
inc
cmp
shrb
or
xchg
cli
mov
and
enter
les
cs
mov
inc
clc
rcll
add
outsl
cmpsl
and
xor
jecxz
jle
mov
adc
and
dec
daa
rolb
push
in
mov
jne
mov
xchg
push
sti
hlt
aaa
aad
enter
insb
ss
or
je
lcall
pop
popf
imul
lcall
adcl
ret
rclb
sub
inc
mov
inc
or
dec
inc
push
loope
scas
dec
inc
in
sbb
ret
pop
fsubr
insb
scas
inc
pop
sub
pop
mov
outsl
mov
ljmp
or
mov
pxor
scas
lret
pop
dec
stos
or
jae
xor
cmc
and
push
cmp
js
dec
adc
cmp
add
mov
sbb
push
dec
adcb
cmp
insb
loop
add
sub
pop
mov
adc
mov
in
sbb
js
les
mov
cmpsb
fadds
adc
and
and
jae
hlt
ss
daa
scas
push
test
adc
mov
jl
insl
sbb
cwtl
out
sbb
xor
int
les
in
add
cmp
stos
jns
xchg
add
filds
ret
push
rol
push
inc
aas
push
xor
mov
add
jne
mov
out
into
pop
pop
pop
or
out
ds
out
mov
in
notl
dec
xchg
push
xlat
leave
ja
dec
push
cmp
inc
loopne
imul
insl
fdivl
xor
mov
push
xor
imul
mov
cmp
aam
inc
lahf
mov
xchg
out
jne
fs
mov
xchg
jb
jle
stc
inc
adc
stc
cmc
imul
xchg
hlt
dec
sbb
popf
test
push
aad
ret
gs
jl
sbb
mov
hlt
push
inc
aad
mov
cmp
leave
and
mov
and
push
mov
sub
shlb
and
sub
out
outsb
cmp
pop
ljmp
rcll
pop
icebp
xchg
rcrl
jne
push
js
push
mov
mov
jecxz
or
repz
imul
fs
fbld
cmp
and
push
push
notl
adc
mov
rcll
insl
in
int
das
and
jbe
in
aad
enter
testl
scas
sub
bound
jge
sub
push
dec
jg
addr16
mov
int3
ljmp
pop
out
sbb
or
add
clc
lock
add
lahf
push
stc
jb
pop
sahf
jmp
mov
and
and
jp
sub
in
aad
dec
sbbl
sub
ret
mov
mov
mov
pop
ljmp
jle
push
add
imul
loop
mov
roll
stos
mov
xor
repz
xlat
add
or
and
rcrb
fstl
cmp
cld
gs
repnz
outsb
ljmp
add
test
outsl
dec
fucomi
sub
mov
test
data16
std
cmpsl
adc
xchg
test
call
sbb
add
jae
je
loop
or
add
aaa
test
adc
lea
jp
mov
subl
mov
and
frstor
pop
ror
outsl
inc
sub
dec
cli
sahf
xor
pop
bound
xchg
adc
xlat
add
xchg
retw
cwtl
ja
inc
repz
hlt
nop
pop
fstps
jmp
push
sub
cmp
sub
jmp
mov
push
sbb
inc
aaa
sub
inc
shll
sbb
and
adc
test
scas
movsb
push
add
repz
sarl
inc
out
ret
sbb
jp
inc
mov
mov
cli
xchg
cmp
or
xlat
sti
cmp
enter
dec
mov
sub
adc
test
cmpsl
adc
movsb
mov
xor
mov
fnsave
xlat
pop
or
popf
fldt
ljmp
in
pop
dec
mov
pop
iret
xchg
mov
add
mov
scas
dec
mov
les
xchg
dec
aam
adc
xchg
clc
inc
bswap
mov
sbb
pop
addr16
add
pushf
mov
jge
notl
fstpt
jo
enter
iret
loop
popf
fldl
mov
jo
jb
cmp
test
cld
imul
roll
xor
or
mov
shl
sti
xor
mov
test
pusha
addr16
jb
sbb
repz
shrl
cli
sbb
sti
ss
xor
movb
xchg
push
pop
xchg
push
and
ljmp
out
xchg
fsts
jecxz
xchg
jno
insb
ds
jnp
inc
cwtl
lar
jnp
test
test
mov
in
add
loop
sub
sbb
out
sub
in
and
xchg
and
xchg
in
jmp
test
mov
inc
push
clc
sub
jb
adc
sbb
jns
rorb
daa
movsl
xchg
sahf
inc
mov
push
rol
les
mov
hlt
out
insl
popf
and
nop
push
mov
xor
std
jg
jno
ss
das
ss
addl
les
sbb
jno
pop
mov
dec
jne
lret
lahf
stc
das
inc
or
xchg
fmull
clc
lock
testb
cmp
aad
cli
fldl
push
xor
repz
outsl
test
mov
cld
lret
rcr
mov
imul
sub
scas
aaa
das
cs
not
xchg
fisubs
ret
int3
pop
nop
in
lds
hlt
sub
pop
sti
icebp
mov
les
sbb
mov
mov
mov
enter
popf
or
mov
mov
jecxz
xor
jns
mov
or
xchg
push
rcl
loopne
repnz
pop
pop
les
inc
mov
int3
add
ljmp
aas
xchg
dec
push
fs
fwait
stc
xchg
into
fistpl
cmp
adc
pop
mov
jbe
enter
pop
jecxz
jnp
stos
jns
xor
mov
add
imul
inc
inc
shl
add
lds
jo
cs
xchg
int
out
mov
shlb
stc
inc
cltd
jp
mov
fdivl
xchg
mov
adc
mov
loopne
lds
xchg
sub
fwait
ds
push
and
sbb
iret
leave
and
inc
sti
sbb
xchg
arpl
scas
popf
sub
stos
push
mull
jno
sbb
and
or
sub
mov
jae
aaa
mov
movl
imul
jbe
jg
insl
mov
insb
mov
cmc
jno
push
sbb
iret
sbb
jo,pt
movsb
sarl
and
lcall
jno
data16
pop
sub
mov
in
push
xor
int
mov
sbb
fsubs
in
inc
sub
js
in
add
jle
xor
std
sub
out
ljmp
dec
mov
cmp
or
clc
js
and
movsb
insl
test
mov
xlat
xor
push
dec
pop
hlt
in
aad
dec
stos
shrl
mov
movsb
lcall
jp
push
aas
aas
ja
and
mov
mov
adc
vpunpcklbw
xor
xchg
loopne
xchg
xor
hlt
mov
and
sub
add
pop
insl
mov
or
addr16
push
xlat
std
cmp
sar
jle
fs
or
mov
and
sbb
dec
xchg
stc
call
sub
cmpsl
inc
and
aam
cmpsb
testb
dec
or
mov
fidivl
rclb
cmpsl
outsl
mov
inc
adc
sarb
repz
ret
jecxz
out
pop
pop
data16
mov
add
rol
cmp
mov
in
insl
in
inc
sub
push
stc
dec
push
push
add
pop
mov
mov
jae,pt
cmp
fnstsw
sbb
cmp
xchg
xchg
cwtl
mov
add
jg
ljmp
inc
jae
jecxz
cmp
popf
leave
loope
dec
repz
add
iret
fs
mov
cmpsl
lock
xor
les
inc
lcall
xor
cld
loope
dec
cmp
fnsave
cmpsl
aad
xor
test
mov
mov
dec
jnp
call
inc
imulb
loop
movsbl
dec
repz
pop
xchg
es
push
inc
pop
push
sbb
adc
movsl
add
cli
in
test
or
repnz
inc
cwtl
push
pop
mov
jbe
pop
xor
js
daa
xor
loopne
sub
icebp
js
nop
inc
xchg
mov
pop
stos
aaa
in
inc
repnz
movsb
fsubs
dec
dec
jb
inc
xchg
and
js
mov
data16
sub
add
enter
mov
popf
or
xchg
sub
mov
xor
cmp
ss
pop
repz
push
jecxz
sub
and
sub
add
ljmp
ret
xchg
daa
mov
sbb
pop
fsubl
sti
cwtl
fnsave
pop
pop
sbb
xor
test
mov
push
cmp
setl
xorl
sti
or
popa
sbb
aas
xor
push
inc
clc
fcomi
scas
xchg
jecxz
in
orl
and
or
cmp
fisttpll
loope
jmp
dec
ljmp
dec
mov
jle
xlat
iret
cmp
pop
inc
pushf
ret
dec
in
jae
xor
cmp
lods
mov
daa
dec
test
mov
dec
dec
scas
lret
rorl
push
xor
loopne
sub
test
dec
pushf
pop
lret
scas
jmp
bound
dec
mov
mov
iret
popa
lods
ret
adcl
call
cmp
cli
enter
into
mov
outsl
ss
aad
pushf
mov
out
pop
imul
xchg
call
int
sbb
imul
jno
inc
mov
mov
shll
jle
xchg
jmp
inc
in
popf
lret
sub
mov
sbb
mov
pop
jo
addr16
pop
leave
jb
gs
inc
or
cmpsl
inc
sub
and
mov
add
fildll
jns
iret
pop
sub
push
mov
xor
in
ss
mov
xorb
xor
repnz
fsubr
dec
stos
cmp
jecxz
test
mov
out
pop
aas
std
popf
inc
mov
push
fwait
rcll
push
cli
add
push
jns
pushf
sbb
add
aas
or
mov
aam
ffreep
xchg
lahf
inc
dec
loopne
push
loop
loope
sbb
stos
outsb
push
mov
stos
lcall
mov
fiadds
pop
ficoml
jbe
aas
das
je
jb
insb
and
clc
xchg
xor
mull
xor
fwait
dec
push
in
mov
dec
or
cld
push
test
mov
cmp
jae
cltd
in
xlat
sub
mov
xchg
cmpsl
or
mov
sub
adc
and
je
mov
jp
roll
xor
out
cmpsb
cli
cmp
sahf
int3
js
stos
ja
bound
out
mov
jmp
iret
add
and
dec
movsl
js
push
xchg
jle
in
inc
fisttpl
sbb
pop
pop
pop
and
xchg
pop
sarl
fidivl
sub
arpl
jns
dec
jp
mov
jl
xchg
xchg
test
and
stc
pop
loop
divl
iret
adc
push
jg
icebp
xor
push
mov
movsb
xor
test
bound
xor
pop
sbb
add
jp
mov
jae
xchg
or
push
mov
mov
out
or
mov
imul
jno
push
or
dec
push
gs
mov
xchg
sub
test
in
lret
push
inc
lods
xor
test
in
mov
in
sbb
mov
cmp
imul
and
pop
sbb
imul
dec
loopne
nop
popf
pop
fcoml
sbb
xor
popf
mov
adc
pop
ret
mov
mov
imulb
jg
sbb
and
mov
sbb
shll
xchg
js
in
pop
xor
sub
jl
loop
cld
in
into
sbb
aaa
jb
lahf
push
rcrl
cmp
fistpll
aaa
negl
mov
subl
jg
xor
jbe
or
or
mov
sub
mov
mul
jmp
leave
clc
cld
loopne
xor
mov
mov
mov
test
je
fsubrl
cmp
pop
cmp
loop
sub
lods
loope
push
mov
sar
jle
adc
jb
sbb
ret
and
cmpsl
adcb
sbb
shlb
mov
dec
scas
icebp
popa
int
pop
mov
loope
sbb
jle
movsl
mov
jle
scas
push
sbb
mov
pop
mov
cltd
incb
mov
jmp
into
sub
gs
or
sarl
cmp
arpl
fs
pop
lahf
jmp
mov
jge
fbstp
or
mov
arpl
jecxz
lods
ja
cmp
xchg
divl
push
lods
insb
mov
xor
adc
sti
popf
sahf
mov
out
ret
xor
inc
loope
fcomp
fucomi
sahf
js
add
push
fdivrl
add
and
push
call
test
iret
mov
push
js
lds
and
pop
inc
andl
ror
cld
cwtl
aad
xor
jp
cltd
and
sbb
lret
pop
cld
inc
mov
xchg
fstps
enter
push
cmpsb
adc
je
add
lock
out
ljmp
imul
lret
push
inc
xlat
test
test
jecxz
out
inc
sti
adc
jno
int3
fldcw
mov
jg,pt
fsubrs
mov
sbb
loope
add
sbb
shr
jecxz
xor
cmp
mov
pop
popf
push
cs
test
hlt
loopne
movsb
jle
sub
and
pop
dec
and
push
sbb
fcoml
pop
pusha
or
and
stos
mov
fsts
jge
sbb
sub
lret
lods
cmp
or
sub
int
mov
jl
call
or
xchg
adc
jns
xchg
ret
push
mov
xlat
inc
xor
scas
roll
and
dec
or
add
out
loopne
cmc
push
jo
and
frstor
xor
cmpsl
out
mov
mov
sbb
cmp
ja
mov
cmc
cmp
lods
cmp
pop
test
inc
lcall
aas
xchg
sbb
sarl
rclb
shrb
cmpsl
pop
push
sub
ja
xchg
lods
subw
inc
dec
mov
test
and
fsubrs
aaa
pushf
orl
dec
loopne
cmc
adc
push
jbe
arpl
mov
pop
stos
cmp
cmp
inc
movsb
cld
sbb
std
xchg
push
fimull
mov
dec
sub
hlt
out
daa
jl
in
sbb
mov
jg
jmp
cmp
gs
repnz
std
xor
ss
xchg
mov
jne
dec
mov
xchg
push
dec
jns
cmc
xchg
loope
stos
cld
loop
aam
and
addr16
inc
test
push
icebp
cmpsb
and
pop
mov
in
and
mov
cltd
push
fisttpl
and
fwait
loop
inc
aaa
popa
pop
pop
lahf
inc
pushf
adc
pop
fnstsw
lret
aad
jl
lea
stc
mov
adc
pop
loop
mov
fs
xor
mov
mov
das
es
add
mov
in
mov
mov
cmp
jecxz
add
inc
xchg
mov
xchg
icebp
lock
push
adc
xor
jmp
add
dec
fnstsw
push
push
cltd
pop
push
das
jge
push
shlb
add
and
cmp
push
adc
dec
test
push
push
loopne
les
pusha
jo
imulb
ss
mov
inc
shrl
in
mov
shl
and
lcall
clc
xor
loope
lock
push
pusha
pop
jg
and
mov
ret
push
ror
stc
outsb
in
adc
cwtl
fsubs
pop
or
mov
sbb
xor
sbb
into
imul
jnp
pop
mov
adc
scas
ficoms
mov
mov
mov
lcall
xor
pop
xchg
mov
fnstsw
cmpsb
bnd
loopne
mov
ss
out
repz
enter
mov
leave
xchg
push
cld
push
addr16
mov
bnd
mov
std
fbld
xorl
add
dec
sub
or
mov
cmp
xchg
adc
loopne
cltd
dec
fstps
pop
rclb
adc
daa
or
add
fisttps
dec
jno
repnz
gs
adc
cmpsl
xor
clc
test
dec
cmpsl
xor
cmp
clc
add
inc
sub
xchg
xor
add
mov
jne
xchg
aas
inc
push
xchg
negb
adcl
popa
sbb
insb
sahf
outsb
test
aam
mov
or
adc
fucomp
lahf
roll
cmp
ret
ja
pusha
rorb
iret
scas
mov
and
inc
mov
std
jge
add
mov
mov
mov
ja
clc
xor
adc
mov
in
mov
adc
xchg
cli
push
int3
adc
push
inc
pop
clc
lret
popa
jne
mov
je
test
dec
daa
lock
xchg
jge
cmpsl
push
imul
pop
lcall
leave
mov
cld
lret
jmp
jne
hlt
inc
outsl
mov
aad
sub
ljmp
push
cmp
aas
inc
ljmp
repnz
fwait
insl
and
movsl
test
and
nop
push
and
out
sub
faddl
imul
push
or
dec
or
ficoms
jno
popa
xchg
fs
pop
sub
jb
inc
push
loope
insb
xor
aas
inc
jae
xchg
out
push
lahf
jb
pop
std
arpl
outsb
push
and
ss
lcall
cli
inc
lods
xor
popf
in
cli
push
test
xorl
jecxz
scas
aad
loopne
sub
jmp
fwait
hlt
add
jae
ficoms
mov
loope
cmc
xor
ret
mov
stc
push
sub
callw
add
sub
adc
mov
pop
add
jg
xor
aas
or
fcoms
lahf
pop
loope
outsb
jecxz
inc
mov
xchg
out
or
pop
jl
mov
inc
hlt
js
xchg
push
dec
xchg
mov
sbb
outsb
adc
or
pop
sub
pop
gs
push
inc
stos
cli
test
out
rclb
test
les
insb
fst
jge
jno
in
inc
or
in
or
iret
or
or
dec
jge
add
cmp
or
xor
adcl
mov
dec
dec
xor
imul
or
imul
mov
outsl
and
sub
xchg
jno
add
ljmp
lods
outsb
sub
repz
cmp
adc
and
sbb
mov
lcall
das
lcall
das
mov
adcl
or
adc
incb
sbb
in
xchg
ss
cmp
mov
xchg
sbb
xor
push
push
or
xor
xchg
jmp
fmuls
data16
in
enter
sarb
inc
aam
out
fimuls
adc
popa
or
in
popa
push
inc
inc
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
sbb
push
or
jge
inc
pop
jl
xor
mov
out
sbb
outsl
or
ds
sbb
inc
jmp
jecxz
stc
pop
and
push
gs
mov
cltd
push
mov
testb
scas
and
gs
js
sub
bound
jge
lcall
inc
bound
cmp
mov
or
add
xor
popf
mov
fimuls
mov
in
jmp
mov
bound
stc
push
sbb
push
pop
cmp
int3
adc
push
adcl
push
popf
jno
test
push
mov
repz
icebp
xlat
inc
rcr
adc
sarl
loop
xchg
add
or
mov
ret
add
xchg
cmp
xchg
aad
xor
jge
mov
mov
lods
or
cltd
sbb
cmpsl
fs
jno
lock
pop
adc
push
cmpsl
xchg
sahf
imul
test
inc
jae
or
mov
andb
fwait
mov
push
jl
sar
mov
int
adc
bsf
repz
sub
enter
sarb
xor
mov
inc
repnz
enter
pop
pop
pushf
rdpmc
lods
sub
xlat
shl
cld
negl
xchg
sub
mov
mov
inc
pop
aad
xchg
push
mov
xlat
lds
icebp
pop
or
dec
pop
sub
lods
jg
and
les
popf
sti
xchg
dec
mov
sarl
out
xor
mov
xor
sub
lahf
sbb
cmc
xchg
mov
xchg
popf
stos
pop
jne
push
fsubrl
or
inc
in
or
in
fcoms
mov
ja
push
push
orb
and
cs
sbb
cmp
xchg
xchg
pop
add
or
and
jg
pop
push
add
test
repz
repnz
pushf
xor
adc
pop
or
mov
lock
push
lock
mov
iret
das
pop
cs
cmp
aad
mov
sahf
out
ljmp
pushf
std
xchg
jne
pop
ret
pushf
fwait
scas
inc
sub
cs
outsl
out
lret
popa
xor
leave
mov
inc
je
or
mov
xor
shll
cmp
adc
cmp
test
jg
jnp
or
cmp
loop
test
cltd
lret
imul
into
bound
std
push
mov
mov
cld
xchg
xor
out
adc
mov
adc
inc
fsubs
roll
jmp
es
js
scas
inc
and
push
scas
pop
and
xor
insb
jnp
push
insl
sbb
jne
adc
jo
faddl
xchg
rcr
jne
lock
dec
imul
cwtl
fdivrs
jp
pop
es
jmp
and
mov
jp
sub
sbb
shll
or
xchg
je
jl
enter
xor
scas
push
scas
mov
rcl
cmp
xchg
cmp
mov
pop
dec
setl
jno
insl
in
inc
mov
das
in
push
and
stos
and
mov
xor
sub
adc
mov
add
arpl
icebp
ds
push
mov
jns
jecxz
dec
and
mov
ss
dec
in
sbb
adcl
push
pop
xchg
mov
or
mov
cs
lock
add
dec
lret
negb
pop
push
stc
enter
scas
cli
rcr
mov
pop
in
or
dec
repz
mov
dec
out
xor
imul
je
rorb
mov
mov
push
cli
iret
shrb
inc
inc
pop
and
vprotq
add
fcompl
mov
cmpb
mov
mov
je
std
stc
cmpsb
test
sub
jb
push
mull
xor
adc
xchg
dec
and
rcrl
push
and
push
loope
mov
jg
shl
loope
lcall
scas
fcomps
in
cmp
dec
cmp
cmpsl
cmp
sbb
lea
xchg
mov
gs
arpl
sub
roll
inc
xchg
leave
sub
sbb
mov
jae
imul
cmp
fwait
int
jns
loopne
or
inc
fstl
stos
mov
dec
xchg
ficomps
jno
pop
or
adc
std
and
jo
sahf
shrl
cmp
adc
pop
les
sub
nop
pop
shlb
xchg
jae
add
cld
cld
cmp
or
scas
jge
cmpsl
pop
cmpsl
mov
lahf
and
int
adc
and
pop
cld
fsubr
xchg
mov
imul
or
pop
xor
mov
jo
mov
stos
pop
pusha
push
or
dec
mov
xchg
jbe
fsubs
pop
fstps
cmpsb
shl
pushf
cmpsl
and
jl
idivb
pop
push
inc
jae
dec
out
xor
ret
sub
es
int3
xchg
sti
sbb
cmp
mov
sbb
repnz
jmp
inc
shlb
and
js
ret
les
add
pushf
push
jecxz
sbb
stos
cmpsb
and
das
sarb
adc
leave
dec
and
loop
push
xlat
sbb
nop
push
adc
and
fdivs
inc
dec
inc
xor
or
mov
or
adc
stc
cs
sbb
loop
das
add
add
mov
push
xchg
fsubr
pop
dec
push
dec
fldl
stos
lock
pop
push
shl
cli
testb
call
mov
test
cmpsl
aas
shrl
add
scas
dec
mov
xchg
fbstp
outsb
push
insl
stos
cmp
pop
in
adc
mov
out
cli
jle
xor
inc
jno
cmp
aaa
xor
pop
fstpl
test
arpl
jmp
mov
int
or
ja
push
je
xor
pushf
sbb
ds
add
and
jmp
pop
mov
jl
xor
mull
add
icebp
push
popf
faddp
call
cmpsl
ret
jl
jmp
jg
movl
xchg
push
sub
cmp
cmp
add
lods
pop
jb
sub
mov
test
data16
jb
xor
in
mov
jns
pop
and
test
mov
into
std
mov
push
mov
sahf
sub
mov
inc
cwtl
ja
adc
lods
repz
sub
inc
mov
out
adc
pop
add
and
mov
mov
add
mov
stos
int3
ljmp
push
arpl
hlt
fwait
mov
and
sarb
jl
iret
fwait
movsl
cmpsl
gs
xchg
add
mov
loopne
sbb
test
pop
sub
adc
jmp
scas
push
inc
dec
add
js
push
dec
sbb
fdivrp
jg
aaa
into
dec
pop
mov
xor
add
in
pusha
add
popf
mov
inc
push
stc
and
cltd
inc
loopne
push
xchg
inc
sbb
dec
push
outsb
fnsave
pop
adc
sub
mov
outsl
jno
cmpsb
or
dec
lock
sub
adc
movsl
mov
push
push
pop
dec
loope
fwait
and
repnz
mov
mov
data16
sub
inc
int
adc
sbb
push
fisttps
iret
lods
cmpsb
dec
inc
and
mov
sub
sahf
inc
leave
xchg
adc
cmp
pop
mov
xchg
jmp
adc
pop
ds
add
cmp
imul
adc
sbb
imul
and
adc
xor
cmp
daa
movsl
stos
fwait
loopne
das
lods
pop
addr16
xor
ret
cmp
cmp
les
scas
lods
mov
out
es
jb
movsl
faddl
nop
enter
push
enter
inc
or
pop
mov
aas
cs
sub
loopne
daa
xor
les
push
dec
jl
jle
mov
pushf
push
push
cmp
out
rcll
push
push
lcall
xchg
or
test
inc
cli
popf
lret
xchg
sbb
jmp
ss
or
daa
scas
lcall
mov
flds
mov
inc
int
mov
daa
repz
mov
mov
dec
adc
scas
aam
jb
fldenv
sbb
fsts
bound
push
mov
out
add
xchg
enter
add
and
or
fwait
xchg
aad
dec
inc
mov
dec
jbe
pop
sahf
jno
inc
cmpsl
ret
xchg
mov
push
cmp
xchg
dec
shrl
jmp
or
outsb
cld
mov
pop
add
jmp
fs
mov
or
mov
push
push
xchg
mov
fildl
dec
clc
repnz
pop
jne
pop
and
fs
xchg
or
inc
push
lcall
jnp
fdivl
repz
sub
arpl
add
or
cmp
ret
inc
cmp
aam
jae
or
inc
mov
imul
addr16
push
and
hlt
mov
mov
xchg
add
daa
xorb
inc
sub
add
cld
push
adc
adc
in
test
add
lret
mov
popf
into
dec
popa
shrb
sub
icebp
call
sub
pop
push
les
gs
dec
icebp
adc
std
fxch
dec
xchg
cwtl
mov
movl
push
lcall
in
je
stos
cwtl
sub
push
mov
adc
mov
xchg
pop
and
filds
jmp
xchg
xor
and
mov
enter
mov
sub
push
and
xlat
mov
imul
jo
test
dec
cli
in
cmp
or
sub
pushf
test
stos
xchg
sbb
shll
fidivs
jmp
mov
cs
or
sbb
jge
push
popf
mov
cmp
xchg
add
call
in
inc
loope
hlt
rcll
lock
imul
leave
or
xor
rclb
mov
sub
enter
lds
mov
loop
scas
jns
lcall
and
mov
and
ficompl
mov
adc
arpl
pop
call
xor
addr16
inc
inc
repnz
pop
and
in
hlt
bound
xchg
xchg
pop
xor
xchg
push
push
inc
aam
add
aas
fldl
lahf
dec
lods
dec
data16
icebp
mov
mov
loop
cli
je
es
out
xchg
sub
sbb
push
adc
in
lock
mov
add
mov
dec
jno
push
xor
push
push
lock
mov
lret
lds
sbb
ret
sbb
leave
aaa
test
call
jl
sbb
out
cmp
adc
cs
cmp
xchg
cld
test
int3
or
jge
and
xchg
cmp
mov
sbb
fsts
call
lret
mov
mov
pop
in
aad
mov
sub
scas
and
dec
adc
push
in
cmc
lret
dec
leave
pop
xor
rorl
dec
js
or
into
sub
push
aas
fwait
cmp
jg
dec
addl
and
sub
mov
sbbb
adc
lret
xlat
pop
inc
inc
and
add
stos
cmpl
pop
sub
std
subb
sarb
js
push
push
mov
dec
mov
adc
gs
push
jbe
push
inc
add
lds
sbb
push
jle
je
mov
pop
mov
scas
sub
in
push
adc
jmp
cli
std
das
imul
nop
sbb
rcr
mov
fadds
cmp
jp
xchg
in
in
cwtl
lcall
ss
xchg
ss
clc
mov
and
and
dec
mov
stc
mov
sub
sti
ds
dec
lret
jp
push
mov
cmpsl
mov
das
in
rcrl
fnstsw
pop
lods
mov
ret
clc
dec
aaa
fisttps
aad
dec
ds
and
imul
pop
push
fldenv
adcb
mov
or
out
movsb
mulb
stos
xor
mov
or
stos
push
jp
pop
fs
out
hlt
add
stos
dec
or
and
cli
stos
sub
dec
fwait
repnz
adc
inc
dec
nop
insb
inc
ret
add
popa
iret
repnz
aad
cmpsb
pushf
mov
clc
bound
mov
fadds
ret
mov
mov
aaa
nop
xchg
push
rolb
pop
flds
shl
dec
inc
inc
jge
fisubl
jno
cmc
or
add
jb
test
mull
jnp
fadds
and
pop
fsubrp
xchg
push
mov
adc
int3
imul
or
sub
test
int3
xor
sbb
scas
sbb
ret
xchg
push
je
imul
xchg
mov
mov
sbb
jnp
fwait
mov
push
jp
pusha
lahf
add
and
daa
and
adc
and
aad
das
insb
pop
hlt
fwait
add
push
ret
or
mov
ficomps
push
mov
test
daa
mov
xor
sub
sbb
test
lds
lods
add
pop
xchg
cmp
jns
das
mov
fs
xchg
dec
push
mov
and
adc
add
fimuls
enter
das
add
add
lcall
sbb
mov
dec
and
or
outsb
repnz
sbb
push
pop
in
cmpsb
xor
sub
mov
push
cmpsl
roll
out
adc
adc
das
cltd
jge
bound
popa
mov
push
mov
dec
jns
mov
ja
inc
mov
fs
bound
icebp
fiaddl
jge
fldcw
loope
xchg
xchg
fnstenv
jnp
fwait
or
mov
aam
mov
jno
inc
push
adc
stos
pop
cmp
xor
or
mov
push
daa
ds
xor
xchg
out
stos
faddl
into
clc
push
push
jns
sahf
xchg
push
les
gs
popl
jns
push
xchg
lock
xchg
pop
push
sub
inc
pop
repz
rcll
xchg
dec
jecxz
inc
fdivr
in
push
loope
pop
mov
inc
lcall
inc
pop
jg
inc
loop
mov
addb
dec
mov
scas
call
test
pushf
jmp
fwait
sbb
and
pop
orl
or
cld
and
sbb
sahf
dec
stos
test
jae
cmp
insl
pop
mov
sub
je
fidivl
mov
fldt
dec
movsl
cmp
stos
inc
mov
mov
dec
loope
or
cmpsl
xchg
xor
cmp
push
add
xchg
in
jg
in
imul
mov
int3
adc
outsb
cmp
dec
dec
cmpsl
outsl
in
loopne
ficoms
stc
xchg
ljmp
sub
stc
outsb
fsubrl
push
stos
pusha
fsubr
cmpsb
cmovae
cmpsl
xor
into
and
jge
inc
je
sti
push
lret
data16
je
fwait
sbb
idivl
jge
jge
jnp
mov
mov
aam
xchg
mov
inc
out
push
or
push
fwait
push
pusha
mov
shll
jns
jno
test
mov
rorl
push
jae
sahf
and
stos
or
stos
add
sub
mov
mov
mov
ss
xlat
sbb
jnp
repz
rcl
push
outsl
clc
jnp
xchg
adc
or
xor
cmc
subl
fistl
pop
sahf
lret
mov
sbb
out
ljmp
inc
xor
cld
test
mov
adcb
xlat
scas
mov
pusha
repnz
repz
mov
xlat
fsubrl
addb
shll
clc
sub
sbb
xor
cmp
push
in
or
cs
dec
sbb
fcompl
in
and
addb
int
adc
mov
push
imul
mov
adc
mov
pop
push
aaa
lcall
repnz
xchg
aas
sub
jnp
mov
adc
push
call
lods
inc
in
push
mov
push
xchg
aas
insl
cmpsl
jecxz
cmpl
inc
aam
in
jnp
daa
sahf
mov
lods
mov
rolb
push
ds
xor
fsubs
je
dec
xor
popf
clc
into
gs
repz
mov
ret
cmp
mov
mov
stos
xor
addr16
loopne
bound
jne
push
fisubl
loop
mov
je
xchg
jnp
fcoml
adc
push
mov
int
xchg
sbb
inc
insl
sub
lods
insb
stos
popf
xor
js
loope
sbb
sbb
loopne
fwait
jmp
fsubl
inc
lods
mov
add
inc
or
add
mov
sub
stc
mov
mov
mov
ds
lock
mov
in
adc
xor
leave
cmpsl
daa
mov
or
push
jae
cmp
into
shlb
jbe
sbb
cld
pop
push
mov
daa
sub
out
lahf
inc
iret
lahf
int3
data16
dec
or
xchg
xor
mov
sbb
xor
mov
test
iret
lret
jbe
jno
push
cmp
inc
mov
add
test
mov
out
js
push
aad
std
movsb
addr16
add
ljmp
sahf
roll
popf
dec
mov
xor
xchg
mov
stos
sbb
mov
jo
jmp
roll
mov
icebp
push
inc
or
inc
mov
pop
pushf
sbb
lcall
jge
push
sti
inc
ret
jb
inc
xlat
cmp
notl
cmc
push
add
aaa
pop
jmp
jbe
sti
xchg
cmp
pop
cltd
sarb
popa
jbe
addr16
leave
in
icebp
pop
xchg
add
add
gs
jae
jle
mov
push
imul
jl
inc
pop
aaa
mov
int
in
inc
sbb
js
jbe
mov
jnp
stc
sub
mov
or
insl
mov
cld
sbb
push
cwtl
push
sub
int
gs
das
dec
or
arpl
stos
cmp
aas
je
jne
cmpsb
add
push
mov
or
or
lods
pop
push
mov
les
subb
mov
imul
sahf
push
test
sbb
repnz
fldl
push
mov
xor
mov
movsb
call
xor
mov
loop
pop
lock
movb
push
icebp
lret
fcomps
aam
mov
sbb
cltd
out
push
fbld
pop
mov
adc
lret
aam
cmp
insl
int3
stc
mov
roll
lret
mov
mov
cmp
mov
xchg
cmp
add
xchg
push
jl
sbb
jle
std
mov
jae
fstps
push
lret
popa
movsb
jnp
push
aaa
fnstenv
int
fidivl
sbb
and
add
cli
inc
xchg
popa
xchg
cmp
iret
inc
scas
mov
xchg
clc
int
xchg
cmp
jo
jno
lcall
adc
movsl
adc
rcl
popa
dec
mov
jne
stc
rep
and
and
or
dec
mov
sub
loope
mov
sbb
sub
dec
cwtl
sub
sbb
sarl
mov
test
dec
ja
sub
sbbl
mov
stc
xchg
in
sti
mov
mov
sub
add
sub
jp
add
adcl
rcrb
and
adc
inc
and
add
jmp
add
sub
out
rorl
das
mov
repz
sub
test
mov
jl
push
cmp
pop
adc
mov
fbstp
test
cmp
shlb
sub
mov
add
stc
xlat
jp
cmpsl
mov
mov
leave
sbb
mov
out
push
dec
cmp
push
adc
push
in
stos
inc
shll
pop
in
sbb
cmp
movsb
bound
jmp
xor
jb
mov
pop
cmpsl
test
sub
fsubrs
add
test
cltd
fiaddl
jg
and
xchg
std
sub
pop
xchg
inc
ret
and
fwait
nop
mov
mov
push
fucom
leave
test
xor
loopne
notb
mov
stc
or
pop
int
pop
mov
sbb
lret
ss
sub
dec
adc
xchg
lods
jns
dec
mov
rcll
sub
out
fldenv
dec
in
jbe
xorb
into
jbe
lret
imul
icebp
scas
mov
adc
data16
sbb
lahf
mov
mov
push
notl
scas
pop
imulb
jmp
inc
xlat
fsubrl
sbb
and
sbb
outsl
int
push
ljmp
popa
mov
inc
in
jbe
test
jne
js
dec
mov
les
push
call
es
cmp
fisttpll
xor
jmp
jge
sbb
enter
dec
lods
xchg
and
aad
inc
jp
add
pop
inc
jmp
subl
add
xlat
mov
jmp
sub
inc
fwait
les
pop
jp
adc
dec
movsb
es
mov
inc
pop
call
mov
jne
sub
fdivp
push
dec
cmp
pop
lea
es
xchg
push
add
xor
ret
or
mov
filds
pop
pcmpeqw
fidivl
mov
sbb
fcoms
mov
pop
int3
add
loope
outsb
mov
lea
lret
sbb
ja
fwait
dec
mov
and
sbb
pop
pusha
movb
lods
call
sbb
xchg
or
out
in
mov
mov
cmp
mov
mov
inc
test
fsts
cld
icebp
pop
cmp
sbb
cmpsl
xchg
rorl
decb
inc
fisttpl
push
shl
mov
sub
or
jp
sbb
fbld
aad
cmpsb
jg
add
fidivs
scas
movsl
nop
sbb
daa
jg
mov
nop
push
or
mov
and
out
loope
or
std
test
push
xchg
xor
xor
or
add
mov
jne
adc
push
adc
pop
inc
rolb
aaa
or
fldenv
jmp
out
jno
lock
jb
cmc
mov
int
cmp
mov
sub
mov
dec
sbb
jle
stos
or
add
add
push
mov
fldenv
sti
faddl
push
imul
jbe
mov
mov
out
call
sub
or
push
xchg
aas
in
sub
or
loopne
movsl
jge
test
push
lret
fimull
outsl
push
pop
mov
int3
outsl
mov
pop
xchg
or
mov
mov
pop
mov
push
ret
loopne
inc
mov
sahf
rorl
rol
adc
into
lret
addr16
pop
push
outsl
int
xor
ret
daa
cmc
and
pop
adc
push
aas
and
js
mov
mov
push
int
xorb
jmp
jne
add
scas
mov
test
es
sub
fisubrs
mov
xor
shll
xchg
push
arpl
pop
sub
sbb
inc
xlat
mov
inc
add
mov
xor
jnp
and
in
sub
push
das
in
test
pop
and
cmp
and
shl
out
mov
mov
xor
mov
inc
out
pop
push
pop
xor
and
sti
mov
dec
dec
adc
push
shll
sub
xchg
inc
and
push
scas
mov
mov
fsubr
inc
or
stos
jb
sub
enter
sub
lcall
aas
lcall
scas
and
clc
popa
hlt
leave
sbb
js
sub
push
into
dec
sbb
add
clc
js
or
push
test
mov
mov
outsl
es
jno
enter
mov
fst
into
cwtl
lcall
pop
or
in
outsl
sbb
adc
aaa
xor
call
ficompl
adc
loopne
cmp
out
ret
into
push
cli
mov
out
repz
and
cmpsb
adc
iret
and
leave
subl
pop
push
out
mov
mov
jns
ds
outsb
xchg
sti
push
xchg
mov
sub
jecxz
js
mov
xor
in
jecxz
mov
jnp
dec
cmp
jns
push
xor
movq
outsb
sub
push
std
lret
inc
stos
push
pop
sbb
or
or
or
into
cld
dec
rsqrtps
push
jle
fwait
jbe
js
or
loopne
adc
push
test
or
xchg
cli
or
adc
xor
test
mov
jb
loope
mov
push
je
adc
cmp
mov
adc
imul
cmpsl
cli
pop
cmp
adc
cwtl
ljmp
les
and
inc
jb
xchg
sbb
cmpb
fs
push
pop
inc
jg
or
in
pop
cld
mov
mov
call
rcl
and
pop
xchg
xchg
outsl
dec
adc
xchg
push
mov
dec
xchg
dec
daa
test
iret
and
icebp
jno
push
aaa
mov
xor
pop
loopne
popa
divb
mov
mov
lahf
pop
mov
push
push
mov
mov
mov
je
and
push
mov
jo
adc
and
jg
jb
out
sbb
sbb
jo
cs
and
fmul
test
das
andw
fimull
lds
push
pop
scas
divl
in
cmp
filds
or
xor
cmpsl
rolb
or
sarb
loopne
pop
test
aad
adc
ja
stc
cmp
out
inc
jmp
pop
or
mov
loopne
shlb
or
mov
mov
pusha
outsl
mov
loop
ljmp
dec
jb
cmp
xchg
adcb
out
addr16
test
inc
test
ret
sub
popf
pop
xchg
add
gs
pop
sub
cmp
insb
fwait
mov
aad
int
mov
pop
es
and
sub
stc
push
lds
popf
cltd
add
hlt
roll
pop
je
sub
inc
arpl
out
data16
test
aaa
or
adc
dec
imul
xchg
fdivrs
popf
je
not
rclb
inc
out
or
lcall
dec
cmp
clc
mov
cs
pop
std
imulb
mov
and
popf
dec
nop
fucomip
shl
mov
rorb
testl
pop
xor
push
popa
or
xor
cmp
sub
adc
jae
mov
dec
insl
in
push
adc
repnz
push
pop
sbb
jne
dec
stc
fadds
dec
ljmp
mov
xchg
mov
fwait
or
xchg
jg
mov
sbb
inc
cs
lock
addl
cld
xor
sbb
ret
add
scas
pop
mov
adc
loop
aaa
icebp
inc
mov
mov
mov
shr
rcl
push
outsl
sbb
sub
cmpsl
pop
xchg
js
mov
fcmovne
clc
push
dec
mov
loop
aas
xor
inc
mov
lods
test
aas
xor
pop
aam
dec
cwtl
out
push
sub
loop
int3
inc
xchg
stos
clc
std
xor
leave
or
push
cmp
fcmovb
loope
fsubs
add
push
nop
jne
push
scas
or
inc
mov
in
inc
mov
xchg
xchg
adc
push
ljmp
insl
cmovo
xchg
jb
ja
repz
hlt
ljmp
mov
fwait
sbb
clc
loope
push
cwtl
or
neg
stc
loop
xor
in
push
xchg
push
adc
mov
ror
sbb
sbb
imul
movsl
andl
and
adc
das
adc
cmp
rolb
adc
sbbb
and
pop
or
icebp
mull
mov
das
adc
or
cmc
int3
adc
hlt
pop
clc
scas
xchg
or
jno
xchg
lret
aas
push
push
sbb
sub
pmaddwd
sbb
mov
in
pop
in
inc
hlt
rcrb
fnstenv
xchg
xor
sbbb
sub
clc
sbb
in
mov
mov
inc
aas
mov
mov
loop
ja
adc
adc
add
and
inc
pop
fildl
aas
xchg
aad
popf
xchg
dec
sub
dec
repz
mov
xor
jne
jns
mov
or
fnstenv
lret
jns
cs
cmp
xor
sbb
sub
and
pusha
fwait
mov
mov
push
xorb
inc
int
sub
mov
jle
xchg
sub
pop
adc
fwait
aas
mov
or
rol
cmp
inc
ret
cmp
popf
mov
clc
xchg
je
or
mov
sub
xchg
or
ljmp
std
adc
sbb
mov
add
stos
or
mov
in
rol
pop
gs
jns
xchg
mov
sahf
push
xor
out
add
jnp
inc
xchg
xor
dec
cwtl
sbb
ja
test
push
ret
andl
inc
push
fsubrl
pop
cmp
test
in
int3
mov
sbb
notb
adc
adc
pop
rcrb
test
sub
mov
sbb
cld
imul
fidivrl
aas
xorl
lds
cmc
stos
mov
xor
inc
lahf
push
xor
adc
mov
data16
sti
sti
cmc
jp
adc
movsl
pop
xor
xchg
xor
push
hlt
fstp
add
fadd
cli
push
sbb
inc
decb
iret
in
movsl
xchg
insb
loopne
cmc
outsb
data16
xor
pop
lcall
lea
pusha
sbb
or
jno
jb
loopne
or
mov
mov
out
rorb
jmp
addb
or
out
stos
into
clc
sbb
mov
jno
xchg
aaa
jg
add
pushf
push
xlat
std
push
add
and
jle
jns
mov
add
cmp
xorb
inc
cwtl
xor
inc
mov
pop
jae
stc
nop
call
mov
pop
scas
add
out
repz
cwtl
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
adc
pop
jl
sti
push
mov
push
insl
mov
dec
fsubrp
arpl
insb
inc
or
icebp
pop
iret
cmp
lret
sahf
jbe
pop
test
sbbl
adc
rcl
sub
out
stc
in
and
shll
cmp
iret
pop
js
out
or
push
mov
orb
loope
mov
pop
push
sub
and
lds
lret
sub
xor
cmp
das
sarb
pushf
hlt
mov
pop
nop
adc
mov
mov
clc
push
push
fdivrs
cmp
jo
int
push
fcmovne
jo
pop
test
jno
test
ret
xor
pusha
mov
cmpsl
mov
jb
mov
and
je
lcall
jae
fidivrs
test
repnz
lea
jl
outsl
inc
lret
push
dec
popf
sbb
jbe
outsb
leave
jbe
cmc
inc
and
test
rcrb
mov
xchg
loop
cli
mov
sub
pop
mov
mov
in
and
jns
scas
orb
das
xchg
add
fimull
popa
in
mov
xchg
aas
cmp
jmp
and
inc
mov
aas
jae
adc
in
xchg
push
push
inc
sub
pop
mov
sub
xchg
sti
cli
sbb
leave
adc
les
out
mov
push
int3
ret
xor
test
mov
ret
in
or
rclb
idiv
sbb
add
or
insl
fsubrl
and
cld
cltd
shll
jl
mov
mov
sarl
or
cli
mov
push
and
pop
in
int3
dec
gs
out
mov
jb
xchg
aaa
mov
stos
fisttpll
mov
jb
in
xchg
js
div
pusha
xchg
cmp
mov
mov
pop
stos
mov
push
sub
xor
push
mov
mov
out
mov
cmc
xor
mov
sub
xchg
inc
js
loopne
mov
sub
sub
mov
mov
cwtl
sbb
sbb
inc
out
lock
jno
test
cmpsb
sub
addl
cwtl
xchg
push
jecxz
popa
jmp
pop
ret
dec
xchg
scas
dec
cmp
mov
fadds
mov
sub
push
adc
shll
sbb
and
fs
repz
test
ret
mov
je
and
push
cli
push
xor
mov
and
outsb
or
dec
mov
adc
push
dec
mov
lods
repz
cmp
xchg
or
icebp
in
push
out
mov
pop
call
dec
dec
mov
aas
pop
mov
mov
adc
inc
insb
adc
inc
adc
xchg
xor
mov
vmread
es
cmp
sbb
mov
jmp
pop
mov
fsub
xchg
daa
push
sub
ljmp
push
jmp
nop
jns
testb
je
add
movsb
xchg
cmp
outsb
dec
pop
inc
fdivrs
ljmp
add
sbb
ljmp
sti
into
inc
mov
mov
adc
pop
lret
ja
movsl
inc
cld
call
pop
mov
inc
sub
sti
jae
sbb
insb
adc
adc
out
or
out
mov
or
add
inc
fcoms
outsl
in
jae
lea
in
mov
xchg
lods
and
dec
iret
mov
fdivrl
aam
test
jl
loopne
aaa
cltd
mov
or
or
push
fistpl
lret
int3
mull
sarl
push
outsl
fs
mov
out
push
mov
sbbl
mov
cmc
adc
lcall
shlb
ficoml
inc
dec
add
out
sar
dec
fdivrl
push
in
pop
xlat
sbb
pop
shlb
call
orb
mov
mov
rcl
mov
fmul
insl
push
cmp
fwait
test
mov
and
popa
push
add
popa
sub
hlt
cmp
sub
fistl
stc
ret
icebp
xlat
add
test
pusha
outsl
xlat
inc
imul
bound
inc
dec
ljmp
mov
and
pushf
xchg
adc
insb
adc
pop
pop
div
out
pop
nop
out
cmp
lock
enter
xor
out
cltd
clc
mov
mov
lret
push
lahf
call
cmp
imul
jo
clc
cmp
mov
jg
fnstsw
inc
popf
mov
mov
cmpsb
add
dec
and
sti
or
pop
sbb
sub
inc
aas
cmpb
adc
aas
mov
cmp
cwtl
repnz
imul
ljmp
add
pop
sub
pushf
int
sub
dec
out
movsl
fimuls
lock
pop
jb
push
shrl
ret
enter
pop
clc
inc
mov
pushf
xchg
mov
add
fs
ret
addb
sub
fmuls
insb
inc
lret
je
mov
xchg
enter
fmuls
bound
dec
mov
int3
sub
insb
inc
adc
xchg
pop
sbb
cmp
aas
sub
or
int
jge
add
mov
lods
aaa
pop
fs
es
out
fsubrl
test
notl
loop
push
or
mov
scas
aam
xchg
sbb
mov
mov
add
adc
and
nop
jo
js
jmp
mov
fldcw
jno
jno
repnz
sub
push
mov
lahf
or
imul
mov
mov
inc
inc
adcl
leave
out
xor
mov
leave
movsl
jge
in
lods
lods
sub
lret
out
dec
cmc
movsb
mov
scas
mov
mov
adc
aad
cmp
inc
inc
mov
cwtl
or
cmc
outsl
into
repnz
insb
test
loope
scas
cmc
xchg
ja
test
xor
pop
jmp
cmp
jbe
mull
loope
mov
cltd
mov
xor
pop
insl
mov
xchg
sbb
jnp
xor
int3
ficoms
es
lods
std
xor
lcall
xor
adc
pop
cwtl
ret
cmpsb
jge
add
cmp
lods
int3
cs
inc
inc
push
add
pop
mov
arpl
mov
lret
jg
jo
movsb
sbb
cmp
sbb
jne
mov
sbbb
insb
jp
sub
xor
out
mov
add
arpl
mov
dec
ds
cltd
pop
lea
mov
dec
push
adc
test
xchg
ja
hlt
fwait
pop
sub
testl
mov
xlat
xor
std
adc
pop
and
pop
pop
icebp
sti
imul
mov
cld
xor
cltd
adc
push
test
cld
sahf
adc
lods
mov
data16
dec
mov
repnz
and
push
es
ds
cli
sahf
cs
loopne
testb
rcl
xchg
mov
pusha
inc
xchg
clc
icebp
lods
idivl
ficompl
mov
jo
test
xchg
add
pop
les
rolb
lods
adc
clc
std
ret
adc
xchg
movsl
hlt
sub
test
cmp
les
jp
dec
dec
xor
xor
mov
icebp
or
test
sbb
imul
xchg
lret
jmp
jbe
pop
mov
jo
fs
jecxz
les
fstps
inc
add
das
push
push
xchg
test
cmpsb
xor
jnp
and
dec
lahf
sbb
stc
rorb
ret
sub
fidivs
test
jmp
pop
adc
xlat
mov
or
or
std
andb
cmp
push
in
andb
sub
cli
dec
movsb
testb
jmp
inc
test
filds
cmpsb
dec
sarl
and
lret
in
mov
mov
into
insb
xor
sbb
and
rorl
cltd
outsb
scas
scas
cs
rcrb
iret
adc
add
mov
es
xchg
pop
cs
negb
xchg
push
pop
push
inc
es
sahf
repz
into
adc
dec
mov
aas
subl
dec
mov
mov
ficompl
mov
mov
cmp
xor
fnstcw
jo
push
cmp
repnz
sbb
js
into
or
cmp
cltd
push
in
cmc
fstpl
mov
sbb
popl
lds
shr
mov
sbb
push
inc
xchg
les
or
mov
or
nop
or
in
jb
in
mov
jnp
rcpps
mov
ret
push
xchg
dec
scas
xchg
inc
mov
jnp
addr16
cmc
or
rep
lahf
ss
scas
addr16
push
sarl
inc
mov
gs
out
ficompl
dec
hlt
cmp
aas
inc
xchg
lods
push
lock
jbe
dec
xor
or
mov
jecxz
cmp
pop
jge
iret
lds
xchg
push
sub
dec
cvtps2pi
push
and
pusha
mov
movsl
cmpsb
lds
out
sub
into
pusha
xor
mov
xor
cmp
data16
scas
pushf
cli
stc
and
je
aaa
cmpsb
inc
or
leave
pop
inc
lock
and
pop
test
cs
jle
ret
ljmp
dec
pushf
sbb
in
cs
dec
int3
aas
test
lret
mov
cmp
add
in
push
lock
adc
push
sub
pop
leave
xor
fstl
jl
enter
das
daa
shll
xchg
jbe
xor
lea
inc
mov
dec
stos
xchg
pop
cs
test
dec
fs
and
cmp
aas
lahf
xor
mov
pop
jge
subb
psllq
dec
inc
sbb
es
add
dec
movsl
xor
dec
outsb
ja
sar
aad
fcomps
loopne
sbb
xor
xchg
xor
jb
pop
xor
imul
or
xor
cmc
arpl
adc
mov
hlt
dec
push
mov
cmp
pop
xor
mov
mov
mov
mov
stc
iret
mov
cld
pop
push
jmp
out
mov
cmc
jecxz
fs
push
add
adc
loop
pop
xchg
popa
insb
and
lods
push
clc
jle
jo
xorb
aas
ljmp
stc
mov
in
and
pusha
dec
bswap
cltd
xlat
mov
arpl
pop
pop
cwtl
or
pop
rclb
xchg
or
mov
mov
cmc
cmpsb
and
sbb
sbb
push
xor
aas
fstpl
dec
mov
aam
out
cmp
push
sahf
test
mov
arpl
imul
pop
xor
xchg
sub
stos
data16
aad
sub
sbb
cmpsl
pusha
test
cmp
clc
xchg
xchg
shlb
iret
jecxz
or
movsb
das
mov
jl
fimuls
sar
movsl
out
sub
insb
in
or
and
cmp
push
rcl
addl
cmc
fldenv
adc
add
out
scas
shl
push
mov
pop
lcall
sbb
cmc
push
sahf
movsl
fisubl
adc
jmp
ret
pop
mov
int
movsb
daa
or
mov
xor
call
adc
test
in
xlat
xchg
pop
cmpsb
dec
test
cmpsb
xchg
js
sbb
popf
lea
filds
addr16
jno
pop
xchg
mov
cmpsb
mov
jno
push
push
push
push
insb
adc
fcoms
insb
dec
daa
mov
je
cmp
push
lods
ja
mov
jbe
bound
push
or
mov
dec
or
xlat
dec
mov
and
stos
shlb
ss
pop
mov
dec
insl
es
sub
loop
fs
mov
std
xlat
stos
into
fcmovu
ret
loope
nop
pop
ficoms
in
ja
mov
in
cmpsl
or
mov
pop
ja
add
and
int3
in
pop
sbb
push
outsl
rcr
sti
test
outsl
mov
or
shlb
mov
jb
push
cli
pop
test
cmp
lcall
or
insb
scas
xchg
cld
mov
sti
jge
les
fcomip
jecxz
dec
adc
adc
cltd
je
mov
nop
call
xchg
outsl
rcl
data16
mov
test
xlat
ja
test
xchg
inc
add
daa
pusha
lods
into
mov
xchg
inc
mov
aaa
rcrb
outsl
lea
xor
mov
mov
hlt
push
cmp
inc
iret
sbb
adc
xchg
leave
pop
xchg
aas
add
test
sub
out
or
hlt
dec
imul
and
jbe
mov
or
in
mov
push
iret
fldcw
ret
cmp
shlb
sahf
xor
fxch
movsl
cmp
mov
je
push
cltd
pop
mov
icebp
mov
cld
and
mov
and
movsl
or
jnp
inc
imul
enter
fisttpl
repz
or
js
lret
cmp
pop
dec
dec
data16
fsubrl
ss
cltd
ja
rorl
xor
xchg
lock
popa
cmp
popf
js
xor
jecxz
test
mov
mov
aaa
idivb
notb
xchg
and
mov
mov
nop
shl
test
aam
mov
jge
loopne
test
jo
insl
clc
loop
scas
add
cmp
insb
add
or
lods
add
cmp
mov
cs
xor
cmp
xor
jecxz
push
test
add
push
imul
sbb
es
cmp
shlw
lcall
sub
test
shr
sbb
xor
xchg
jb
mov
cmp
cli
add
ret
adc
dec
mov
clc
repz
fwait
in
lcall
xchg
mov
stc
out
mov
cmc
shrb
pop
and
aaa
cmpsl
inc
inc
mov
sub
pushf
in
leave
xchg
adc
sub
scas
push
and
test
fmull
mov
popf
mov
mov
mov
cltd
mov
les
cmp
lods
loop
adc
faddl
add
mov
or
mov
je
sub
imul
ds
loop
xor
mov
xor
or
incl
cmpsb
and
int3
icebp
xor
insb
lock
mov
cmc
dec
jbe
fnsave
pop
sub
mov
xor
jmp
push
test
inc
dec
ret
lea
jecxz
push
and
rolb
cmpsl
sub
sbb
imull
outsl
andl
mov
movsl
dec
pop
cld
cltd
adcl
rol
dec
pop
addr16
xor
push
mov
lods
push
ja
xor
loopne
xchg
xor
push
add
push
adc
icebp
mov
cmc
push
adc
adc
call
pop
mov
shll
and
cmpsb
outsb
lods
sub
cmp
arpl
in
rclb
ret
or
jae
and
shr
nop
andl
fsub
sbb
addr16
fdivl
sbb
jle
sbb
xor
pop
scas
aam
sub
insb
push
push
loop
insl
pushf
scas
clc
pop
imul
jle
rcll
xchg
incb
and
jl
mov
in
xlat
enter
jmp
pop
or
js
dec
cwtl
cmpl
cmp
sbb
outsl
cld
std
lods
loopne
incb
lea
call
inc
scas
push
fstpl
mov
dec
push
dec
add
mov
loop
pop
mov
pop
mov
addb
xor
xor
xchg
and
cmpsl
add
lods
mov
xor
out
arpl
xor
decb
imul
inc
inc
cmpsb
lods
sub
shll
out
fmul
int
jmp
push
mov
push
pusha
movsl
outsl
inc
sub
es
mov
sbb
mov
ffreep
jp
stos
add
in
dec
sbb
cwtl
sub
loope
xchg
out
xor
popa
rclb
imull
fs
int
sub
jge
cs
mov
mov
mov
lahf
fsubs
sub
andb
sub
adc
sub
aad
int3
arpl
dec
push
mov
xchg
jae
out
mov
sub
cmp
iret
loopne
mov
ds
and
nop
jmp
pop
or
mov
jb
fisubrl
icebp
push
mov
push
xor
and
in
jbe
leave
repz
sar
mov
aam
pop
jg
pusha
xchg
scas
in
fstpl
and
jmp
cs
mov
mov
aas
movsl
ret
lret
les
lods
xchg
js
mov
push
sbb
sbb
ljmp
mov
mov
insl
in
mov
or
cwtl
xchg
andl
cmpl
and
cmp
dec
rclb
mov
out
jae
lahf
sub
mov
jnp
mov
push
fs
pop
jge
sub
add
xor
cmc
es
sub
adc
rcl
hlt
out
push
mov
cmp
movsb
mov
sub
shll
cld
and
in
dec
pop
fnstcw
xchg
push
aas
rcrl
inc
out
push
insl
pop
sbbb
hlt
cmp
jmp
mov
arpl
jmp
jp
movsb
mov
add
dec
jno
mov
cmpsl
stos
or
out
dec
bound
inc
mov
push
lahf
jns
enter
inc
cmpsb
int3
sti
mov
ja
inc
add
lret
ss
jno
cmp
ss
mov
adc
sub
cmp
jno
lods
adc
icebp
xor
jo
insl
or
mov
push
cmp
loope
fsubrp
ds
scas
inc
jle
imul
test
in
fsubrs
int
push
mov
pop
in
xchg
jle
lds
add
outsb
jnp
cwtl
inc
nop
add
movsl
pop
and
xor
inc
mov
mov
es
mov
lcall
pushf
jne
ret
ljmp
stc
stc
or
jecxz
mov
xor
xchg
inc
daa
aaa
mov
push
sbb
movsl
scas
aam
outsl
cmp
inc
mov
xchg
xchg
jmp
mov
movsl
pusha
sbb
data16
mov
popa
cmp
dec
lods
cli
push
fmull
jno
and
push
sbb
adc
and
mov
mov
sbb
adc
dec
cmp
sub
push
pop
xchg
dec
lds
cwtl
into
shr
add
inc
enter
mov
adc
jl
rcll
adc
stc
dec
int
sub
fcmovb
push
stc
xlat
push
xchg
in
cld
ss
xlat
xor
call
sar
out
mov
mov
xchg
pminub
or
fisttps
std
inc
mov
sbb
xlat
arpl
lahf
sub
adc
adc
push
test
mov
sub
in
loop
cmp
push
adc
sub
and
int3
mov
jns
out
stos
leave
je
enter
and
lds
sub
adc
sub
addr16
xchg
mov
adc
andb
repz
xchg
jae
pushf
icebp
inc
sub
dec
cld
test
or
pop
jle
mov
out
popa
out
jb
dec
and
add
loopne
adc
test
ss
jae
fwait
dec
mov
push
pop
mov
repnz
mov
cmp
pop
push
inc
pushf
push
out
mov
subl
fisubs
mov
add
jge
cwtl
pop
popf
pop
mov
mull
add
mov
fs
popa
adc
push
movsl
adc
lea
out
out
rorl
sbb
cmpsb
push
dec
mov
movsb
loopne
or
lods
ret
das
dec
and
jb
popf
mov
leave
mov
aad
daa
mov
scas
je
test
les
push
je
mov
adc
jecxz
cld
mov
dec
and
movsb
pop
mov
mov
add
hlt
add
sahf
dec
fsubr
jns
mov
out
dec
ljmp
sti
loop
sub
ffree
leave
jbe
inc
or
xor
xchg
mov
dec
mov
mov
xchg
decl
rolb
xlat
xchg
xchg
cmp
add
push
aad
mov
loope
lods
icebp
push
mov
or
jp
pop
pop
scas
cld
xchg
fisttpl
mov
addb
adc
adc
mov
pushf
fcoml
hlt
inc
jne
icebp
mov
mov
ds
lea
test
loop
aam
xor
adc
sub
lods
test
cmp
in
cwtl
dec
jecxz
lds
stos
les
add
sub
shr
negl
std
fistps
ret
enter
pop
insb
sub
rcr
adc
inc
test
inc
in
push
cmp
push
mov
out
inc
lret
out
stos
cwtl
testb
adc
mov
push
add
mov
movsb
or
stos
imul
jb
cmp
jno
pushf
orl
pop
rcrb
jbe
aas
pop
push
xor
add
stos
xlat
lahf
xor
pop
mov
inc
inc
mov
jp
sub
repz
icebp
pop
xchg
adc
inc
mov
mov
xor
out
mov
sahf
addr16
idiv
and
and
fbstp
adc
add
sub
sub
sarl
jmp
xchg
out
and
fdivl
or
cs
test
clc
sti
lea
hlt
aas
test
arpl
in
sbb
and
mov
adc
mov
add
mov
dec
mov
jge
cs
test
jnp
fidivs
shll
loopne
add
inc
cmp
mov
mov
loop
cmp
mov
lods
scas
or
out
mov
mov
sub
pop
or
mov
add
sbb
sbbb
adc
cmp
push
cmpsb
push
adc
divb
in
push
stos
sbb
testl
ss
das
fistpl
idivb
out
jmp
jmp
pop
jbe
or
cwtl
push
dec
jl
sub
aad
lock
rcrb
pop
mov
pop
push
lock
int
inc
gs
fwait
js
or
aaa
pop
pop
inc
lods
stc
cmp
sahf
data16
fwait
in
push
mov
sbb
cltd
sti
iret
negl
xlat
and
add
pop
iret
push
bound
push
mov
ljmp
sbb
gs
dec
fnstenv
notl
jb
pop
jne
mov
mov
mov
mov
mov
scas
and
loope
mov
jp
add
mov
mov
fucomi
negl
jecxz
mov
data16
insb
es
jmp
scas
dec
bound
push
lods
incl
mov
jmp
inc
in
stos
pop
mov
jge
jle
pop
adc
mov
stos
gs
rcll
inc
stc
push
and
shr
dec
xchg
mov
push
nop
sbb
popf
cmpsl
and
stc
xor
sti
inc
idiv
add
mov
mov
sahf
loop
cwtl
ret
test
inc
xchg
sub
jo
sub
fmuls
sub
test
or
das
sub
xchg
cmp
mov
hlt
leave
mov
bound
mov
ds
loop
jns
and
lea
sub
pop
imul
shlb
aad
in
enter
pop
cltd
leave
aas
sahf
fcomp
mov
aaa
jo
ja
cmc
jnp
js
push
sti
call
enter
cmp
std
pusha
out
mov
sbb
jmp
filds
out
xor
push
xchg
mov
xor
mov
mov
push
xchg
mov
sti
inc
inc
movsb
addr16
out
xchg
sub
test
jo
scas
xchg
clc
pop
push
ss
icebp
mov
mov
mov
pop
int3
xor
int3
jg
mov
imul
jle
lret
sbb
fs
fstpt
mov
jg
fwait
and
sub
mov
or
cmp
nop
pop
nop
addr16
mov
insl
shll
int3
sub
xchg
inc
dec
push
outsl
xchg
cwtl
xor
mov
push
rcrb
fdivr
daa
add
xchg
push
sbb
jmp
push
ret
ret
das
push
pusha
test
jno
adc
imul
into
jbe
adc
xor
mov
cs
pop
mov
adc
nop
jg
fidivrs
and
imul
add
fadd
lds
test
jo
stos
mov
lock
addr16
dec
cs
stos
cltd
inc
xchg
divl
jbe
sub
jmp
sbb
sub
lods
out
out
mov
add
dec
aaa
pusha
or
imul
les
test
mov
mov
fcompl
out
pop
sbb
jmp
jns
test
xchg
lret
lods
mov
xchg
pop
dec
cld
and
inc
je
leave
jae
dec
ss
adc
push
lret
sub
mov
out
xor
and
loope
cmp
lret
pop
pop
out
jns
xor
xchg
or
mov
sub
aaa
pop
sub
jge
adc
cmp
jb
pop
or
jno
std
jne
jge
mov
test
jecxz
es
xor
repz
aad
data16
fistpll
mov
ja
gs
xchg
add
test
jae
xor
mov
xor
pop
lret
cmp
scas
jg
out
test
or
movsb
xchg
jae
pop
cmc
pop
jnp
outsw
orl
xor
push
xchg
inc
lods
out
sbb
popa
add
mov
pusha
out
shrb
add
rolb
jmp
fwait
jp
test
jae
shll
sub
xor
loope
inc
or
and
jbe
das
push
sbb
mov
roll
ret
xor
scas
outsl
xchg
dec
mov
loope
jge
mov
outsl
sub
fucomi
popf
sub
mov
test
mov
xlat
mov
loopne
inc
sub
scas
ds
mov
leave
outsb
into
scas
adc
inc
sarb
xor
test
inc
add
mov
push
stos
lods
dec
pop
pop
nop
xchg
and
imul
push
dec
addr16
mov
jle
out
das
in
mov
les
push
or
jecxz
cmp
push
jbe
dec
lea
rclb
add
adc
dec
cmp
les
jle
xor
mov
lds
movsl
lahf
outsb
add
mov
lret
sub
pop
cs
mov
cmp
mov
mov
pushf
mov
jae
adc
xchg
jns
aad
xor
adcb
lahf
imul
jg
ljmp
sub
and
dec
lret
dec
scas
mov
sbb
test
roll
mov
std
dec
push
mov
pop
sub
icebp
mov
stc
ret
das
inc
jmp
lods
jmp
testb
or
xor
add
stc
jmp
xor
and
mov
xor
jb
add
or
shl
imul
xchg
fs
das
das
push
xchg
lods
xor
xor
aam
xor
push
lea
jnp
lahf
xor
add
jno
test
fadds
jno
and
lret
mov
sbb
in
shrl
add
outsl
jbe
sub
push
xchg
test
inc
adcb
fisubs
nop
in
arpl
mov
pop
and
mov
test
push
add
push
testl
icebp
rorb
push
push
cmpsl
dec
jo
sbb
mov
inc
fcoms
arpl
ret
jno
cmc
aaa
std
mov
adc
inc
adc
sub
and
pusha
pop
fcmovu
sbb
bound
mov
mov
sbb
xchg
or
js
out
mov
lods
leave
cmp
pop
jle
xchg
mov
lods
xchg
div
adc
lods
pop
add
shrb
in
ret
stos
sub
mov
mov
insb
iret
push
je
push
je
jle
dec
xor
clc
adc
inc
and
arpl
jne
aas
mov
sbb
adc
or
and
adc
mov
test
mov
decl
pop
je
inc
mov
in
mov
dec
xor
dec
pop
ret
jno
jge
add
fcompl
test
rcrb
push
outsb
mov
sbb
pop
pop
test
mulb
ds
lods
xchg
xchg
push
push
mov
push
out
in
mov
jno
or
pop
mov
repz
jg
dec
xchg
mov
pop
arpl
xchg
adc
lods
stc
and
jno
inc
movsl
jae
mov
and
andb
cvtps2pi
movsl
sub
xor
xchg
jno
jbe
jecxz
mov
mov
inc
jl
xchg
xchg
ss
ja
jno
test
sbbb
mov
and
and
inc
mov
add
mov
mov
arpl
mov
movb
ret
push
cmp
aam
iret
mov
dec
cmp
testb
sbb
and
repnz
popf
leave
jae
icebp
js
mov
or
xchg
leave
mov
rclb
dec
pop
pop
inc
dec
cmc
push
cmp
xchg
mov
inc
call
ds
cs
adc
ljmp
or
aaa
cltd
xchg
cli
inc
pop
adc
jp
jne
lds
or
in
cs
fiadds
sbb
std
ret
push
jle
sub
cli
pop
push
mov
scas
jp
mov
filds
or
ret
cmp
fsubl
dec
int3
out
outsb
leave
mov
test
out
mov
jb
sub
jg
dec
out
loop
lret
imul
pop
fldcw
ds
jmp
int3
adc
mov
sbb
add
cmpb
sti
shl
mov
pop
or
xor
cmp
cmpsl
test
ja
and
mov
fwait
cltd
mov
lock
push
das
lds
pop
pop
stos
ljmp
sbb
push
dec
ds
cmpsl
mov
cmp
dec
lods
inc
pop
push
ret
outsb
xchg
fcom
ljmp
dec
out
inc
pushf
pop
notb
adc
sahf
or
outsl
add
xor
dec
adc
in
imul
mov
hlt
in
jb
into
in
sbb
test
bound
mov
add
daa
gs
mov
mov
daa
mov
mov
and
adc
dec
lods
mov
and
adc
cmp
clc
or
scas
test
popa
fisttps
inc
int3
stc
shl
cmp
pop
xchg
lods
data16
test
sub
jecxz
sub
js
sahf
mov
xor
inc
in
testl
lret
dec
xchg
roll
bound
pop
sbb
add
shll
lods
inc
add
lock
negl
or
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
popa
mov
sbb
mov
hlt
cwtl
pop
or
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
std
add
add
jo
stos
mov
cmp
mov
sahf
daa
in
xchg
sbb
popa
mov
mov
enter
lahf
shlb
rolb
shll
mov
ja
loop
add
ret
cli
scas
and
dec
and
imul
mov
push
roll
xchg
aas
mull
int
sbb
mov
popf
imul
out
test
sub
jp
int
fisubrs
dec
or
enter
lds
push
sets
mov
cmp
aad
push
popf
sbb
mov
or
orl
xchg
int
divb
sbb
addr16
add
sbb
sbb
mov
testb
negl
jb
jp
cmp
testb
lahf
cli
popa
push
mov
sub
test
cmc
aad
adc
imul
cmpl
les
sub
ja
popf
repz
pop
cs
pop
add
test
jbe
sbb
call
or
scas
push
jl
cmp
lahf
add
inc
inc
and
and
mov
in
decb
dec
jae
push
outsl
jns
adc
mov
cltd
daa
in
pop
add
and
imul
adc
and
icebp
mov
adc
jne
dec
inc
ljmp
xchg
mov
and
pusha
imul
xor
cmpsb
lcall
es
fldl
push
mov
addr16
inc
lock
cmp
jno
inc
adc
pushf
enter
out
and
roll
sbb
mov
lcall
adc
imul
loop
ffreep
mov
push
inc
mov
test
sbb
add
idiv
jg
mulb
or
add
add
add
pop
mov
mov
jmp
fs
pop
aam
mov
xchg
insb
and
mov
into
sahf
out
mov
xchg
sub
lret
mov
and
mov
pop
and
jnp
rcll
stos
xlat
outsl
test
add
push
call
xchg
mov
pop
js
loope
and
push
mov
cld
repz
jb
rclb
fistl
pusha
and
mov
add
scas
cmp
fidivrl
or
add
rclb
std
rcpps
out
fwait
or
je
add
inc
or
push
pop
push
jle
scas
xor
lods
icebp
ret
outsl
or
xor
xchg
int
add
jle
push
xor
xchg
adc
in
into
or
iret
addr16
sub
xor
lret
add
mov
adc
cli
out
ss
stc
psubsb
stc
inc
loopne
and
jge
pop
dec
jmp
inc
popl
and
cwtl
add
cmp
add
test
pop
fucomi
sbbb
dec
sti
xor
pop
mov
pop
xchg
imul
popa
cmp
inc
push
es
push
jno
push
pop
leave
mov
fistpl
dec
lahf
dec
repnz
mov
cwtl
insl
cmp
fbstp
dec
inc
ljmp
sarb
mov
data16
stos
cmp
insb
sbb
xchg
dec
cmc
mov
scas
je
xchg
lods
orb
pop
cwtl
pop
sbb
jo
ret
lds
pop
int
je
push
mov
imul
jecxz
inc
mov
mov
lahf
sub
lret
idivb
sbb
mov
movsb
add
es
add
rolw
add
pop
sbb
pop
std
jg
mov
pop
add
add
jo
push
cwtl
nop
mov
mov
negl
outsb
or
mov
pop
dec
outsl
nop
rorl
cmpsl
nop
cmp
and
add
flds
cmp
cmp
sub
test
cmpsb
je
setg
into
ret
or
into
test
sbb
sub
das
jmp
iret
push
mov
mov
in
orl
dec
sahf
or
mov
lods
ds
push
push
lock
dec
cltd
shl
jo
pop
add
jle
push
xchg
cmp
inc
cltd
xchg
mov
lock
lea
and
inc
stos
shr
mov
cmp
add
mov
scas
cmp
in
jns
in
loop
sub
mov
popa
fcomps
pop
inc
pop
jmp
cwtl
jl
shr
bound
xor
inc
inc
adc
xchg
stos
out
inc
clc
fbstp
cmpsb
add
add
arpl
mov
lret
xchg
int
dec
pushf
inc
mov
mov
mov
mov
shrl
mov
insb
stos
push
lret
add
pop
movsl
sbb
xchg
mov
stc
loopne
out
cmp
push
int3
and
lahf
call
dec
test
cmpsb
xlat
outsb
call
test
push
dec
pop
xor
cmp
add
pop
in
movsb
shll
mov
add
jnp
sub
sub
mov
in
and
add
mov
push
leave
leave
jae
stos
scas
mov
aaa
cwtl
jle
insb
mov
daa
dec
jmp
into
mov
aam
rolb
ja
add
push
jp
and
cmc
or
cld
shl
pop
rcll
enter
cld
ret
insl
fcmovnu
xchg
mov
add
inc
popa
aaa
adc
or
in
push
dec
add
lret
lea
jo
out
add
add
add
mov
int
mov
das
mov
add
add
add
pop
cmpsl
fs
mov
mov
dec
int3
out
test
hlt
lahf
into
mov
in
sbb
mov
jb
lea
mov
cmp
cmp
mov
arpl
fs
insl
lret
lods
arpl
stc
inc
cmpsb
sub
jl
dec
lock
push
lahf
into
sbb
movsl
cli
cmp
dec
inc
push
mov
pop
in
mov
loopne
outsl
cwtl
jmp
cmp
push
mov
jnp
sub
xchg
movsb
stc
lret
jp
xor
lea
rclb
aas
stos
icebp
push
or
mov
mov
and
mov
and
shrl
jae
outsb
sti
int3
mov
sbb
add
sub
fcmovnbe
push
je
repz
adc
mov
sbb
insl
cld
jle
imul
loopne
stos
dec
aad
pop
add
jl
xchg
cld
movsl
xchg
gs
das
mov
outsb
xchg
sahf
inc
xchg
push
insl
xor
xchg
imul
outsl
outsb
jmp
dec
xchg
loopne
sahf
mov
out
mov
test
aas
pop
cmp
mov
sbb
sbbb
sub
sbb
test
aam
bound
std
xor
stos
mov
in
cld
dec
sti
xchg
push
hlt
mov
sbb
hlt
sahf
jecxz
push
les
push
and
mov
out
inc
mov
je
cmp
adc
dec
mov
out
and
adc
out
loopne
cmp
mov
popa
sti
jle
cli
mov
leave
rclb
sbb
loop
aam
sbb
test
add
fisubrl
xchg
adc
arpl
shlb
xchg
jae
adcl
outsl
pop
mov
pop
hlt
stc
xchg
out
inc
add
add
hlt
mov
std
jl
xor
jg
shrl
cld
mov
add
add
add
test
mov
test
outsl
hlt
mov
xor
int3
sbb
inc
or
aad
outsb
pop
and
pop
adc
xchg
addl
cltd
dec
fs
pop
adc
pop
int3
and
test
dec
mov
cmc
repnz
imul
sub
jb
insl
ror
add
mov
cmpsb
cltd
pusha
addr16
push
and
out
and
cmpsl
subb
xorl
sub
and
movsl
scas
or
scas
xor
test
jno
clc
xchg
gs
xlat
shl
add
sub
cmpsb
mov
in
out
shlb
insl
push
push
ja
push
cwtl
pop
shll
jg
push
sub
dec
addl
jge
or
dec
lods
or
leave
scas
test
add
nop
dec
inc
rcrb
fsubrs
jne
lret
lods
sbb
outsl
add
ss
sbb
mov
push
leave
push
sub
lea
inc
stc
into
push
enter
sbb
sub
mov
xchg
cmp
xor
pushf
push
mov
lcall
fbstp
lods
fsubrp
lods
loopne
int3
inc
and
add
cltd
fwait
xchg
add
push
in
push
dec
test
cmp
dec
cli
push
cmp
out
mov
std
push
jb
cmp
mov
pop
pop
jnp
push
jbe
fildll
sub
inc
inc
cwtl
test
or
dec
adc
pop
daa
or
jne
lods
pusha
add
dec
into
out
cmp
sbbb
movsl
add
in
iret
outsb
aad
xchg
xor
sub
jecxz
push
loop
cmpsb
push
rdtsc
cmp
sub
cld
test
inc
or
push
pop
cs
cwtl
inc
mov
sti
sbb
es
cmp
mov
int3
pop
mov
cmp
add
add
add
add
imul
fdivrl
pop
pop
adc
mov
add
add
add
sub
and
addb
dec
fimull
divl
add
pop
clc
mov
out
sub
int
hlt
out
add
out
push
nop
or
add
xor
and
dec
lds
sbb
pop
cmp
ret
ja
xchg
jg
sbb
jl
ja
push
jge
stos
add
int3
mov
pop
dec
fisubs
mov
imul
and
popa
mov
shl
mov
and
lcall
sarb
pushf
push
sub
push
hlt
or
dec
jo
test
push
mov
nop
repnz
mov
jno
mov
pusha
mov
pop
and
lea
mov
mov
cwtl
loop
out
cmp
in
shl
jge
shrb
or
mov
push
or
std
inc
scas
mov
add
aas
clc
repnz
mov
pop
push
into
popf
sbb
sbb
jecxz
mov
into
inc
sub
push
into
cwtl
jno
aad
mov
jecxz
std
add
pop
xchg
xorl
push
shl
lcall
xor
jno
pop
stos
int3
repz
nop
inc
cli
lret
or
stc
stc
aas
jge
sub
adc
pop
iret
dec
xchg
or
push
inc
test
ljmp
push
jns
lahf
addb
jae
mov
mov
popf
lods
loop
inc
mov
imulb
inc
pop
sbb
aas
jg
imul
mull
add
and
mov
and
pushl
xor
nop
out
fdivl
gs
xchg
lds
or
push
xchg
subps
mov
add
mov
xchg
adc
lcall
cmp
or
data16
add
add
jg
pop
fstps
testb
add
jbe
inc
imul
push
orb
jne
rcrl
sub
add
pop
imul
push
push
add
out
mov
into
jmp
cmpl
scas
pop
cmp
popf
jmp
push
jb
movsl
sbb
fwait
jae
jecxz
outsb
jecxz
fs
jecxz
xchg
push
lcall
or
mov
jb
out
cli
adc
adc
fsubs
cli
add
xchg
inc
loope
and
dec
inc
enter
shrb
shrb
dec
mov
push
int3
sub
es
xchg
cmpb
adc
inc
pop
inc
in
xchg
inc
sbb
mov
push
fisttpl
fstps
into
sar
jo
shlb
dec
bound
arpl
sahf
lcall
add
daa
sbb
inc
pop
fstps
pop
cmp
and
xor
push
inc
jno
lcall
hlt
jmp
sub
frstor
das
dec
sbb
dec
cltd
repz
dec
inc
adc
push
jns
adc
in
add
sub
jle
xor
mov
pop
fmulp
insl
les
jns
pop
pop
clc
sub
aad
stos
les
imul
inc
pop
dec
inc
cli
negl
sub
call
dec
mov
in
rclb
dec
jo
das
inc
mov
or
dec
or
sub
xchg
inc
cmp
movsb
sbb
cmpsl
fcmovne
mov
mov
inc
lcall
fldenv
call
popf
pop
push
nop
fwait
aaa
nop
push
xchg
addr16
pop
aaa
imul
dec
cmp
roll
inc
test
xchg
sbb
dec
out
insl
cld
loopne
mov
daa
adc
dec
in
loope
mov
scas
je
pusha
repnz
dec
paddw
mov
roll
jg
add
add
cmc
fistpll
movsb
fidivl
push
shrl
std
add
add
in
iret
jo
xor
shl
dec
add
stos
rcr
cs
cmp
xor
rcrl
cmp
jae
xchg
loopne
mov
inc
imul
add
xchg
fisttpl
inc
add
ss
sub
pusha
and
fcoms
adc
or
lock
imul
jbe
insb
cmp
in
push
jmp
int3
jns
cmp
xchg
add
and
cmp
dec
adc
sbb
jns
cmc
xchg
push
mov
or
or
repnz
cmp
and
xor
outsb
lret
jnp
imul
xor
mov
mov
jg
cmp
pop
xor
xchg
popl
ljmp
popf
imul
inc
push
iret
dec
xchg
cmp
test
xchg
add
dec
push
rcrl
pop
rorb
testl
push
lret
sbb
inc
sti
mov
testl
imul
add
mov
mov
mov
pop
data16
faddp
sub
mov
mov
sbb
insl
cwtl
xchg
jnp
ret
add
mov
or
enter
or
jmp
outsb
sub
test
addl
fcmovu
xor
popf
loope
loopne
outsl
rorl
int
mov
sub
pop
xor
mov
jecxz
jp
or
xchg
std
shl
fwait
lahf
stos
dec
jp
push
dec
add
and
or
xchg
adc
push
ja
cmovo
pop
xor
add
ficoml
ss
outsb
and
add
mov
pop
sub
das
and
push
ss
mov
stos
ja
cs
stos
mov
or
add
and
movsb
lea
sub
neg
mull
add
add
add
lret
pop
mov
lahf
rolb
xor
shlb
int
sti
pop
mov
insl
idivb
mov
cltd
inc
cwtl
push
jo
sub
add
test
pop
in
adc
sarl
enter
rorb
mov
arpl
test
dec
int
mov
inc
cmp
mov
imul
adc
fnstenv
cmpsb
jne
add
aam
push
inc
cli
jae
stos
sub
leave
stos
cwtl
call
sub
pop
or
pusha
jnp
adc
or
addr16
or
push
mov
int
add
lcall
push
imul
repz
add
mov
lahf
cmp
in
add
stc
rcrl
and
pop
imul
pop
sbb
jno
push
adc
nop
ficompl
jmp
jle
stos
mov
mov
jb
sub
xor
in
std
insb
popl
arpl
in
mov
stc
fiadds
lock
mov
movsl
std
enter
bound
jns
sti
mov
xorl
jecxz
fnstsw
jmp
xcrypt-ofb
cmpsl
out
add
incb
add
rcrb
iret
mov
divl
das
and
dec
jns
add
data16
mov
lretw
loop
test
lret
sub
lods
adcl
cmp
mov
ret
sbbl
adc
sub
cld
mov
imul
xor
sti
adc
icebp
nop
push
mov
aaa
pop
outsb
test
mov
les
fwait
mov
idivb
gs
xor
xchg
xchg
xlat
push
xchg
test
es
inc
xor
lock
enter
stc
add
add
mov
ficomps
out
lcall
push
stos
xchg
pop
push
add
add
test
mov
adc
xchg
add
std
add
add
push
mov
jg
inc
lods
bndstx
aam
xor
add
inc
test
xor
inc
les
pop
add
or
push
sbb
push
mov
or
add
in
dec
xchg
push
mov
xchg
pop
popf
addr16
stc
sbb
inc
adc
jns
in
int3
loop
clc
dec
mov
lahf
adc
xchg
push
xchg
mov
decl
sub
fcomip
clc
movsl
outsb
fcompl
test
jl
dec
pop
and
cli
fidivs
cmp
mov
jp
stc
push
and
push
mov
hlt
out
jmp
mov
aas
jecxz
out
clc
dec
xchg
sbb
add
dec
cli
sub
dec
in
cmpsl
push
cmp
ljmp
insb
mov
jge
inc
mov
daa
or
inc
and
pop
or
push
imull
in
lea
sarb
in
popa
clc
sbb
insb
in
sub
lock
jb
cmp
sbb
data16
mov
pop
and
add
cs
mov
inc
outsl
xchg
js
lock
inc
adc
pop
dec
mov
test
movsb
sub
cmpsl
jo
rcl
jge
repz
jle
xchg
xor
mov
cli
gs
test
adc
les
dec
test
xchg
add
cmpsb
push
aad
mov
dec
and
jmp
mov
xor
mov
mov
sahf
and
popf
jbe
das
push
inc
mov
push
mov
pop
outsb
std
pop
sub
or
mov
cmpsb
lds
loope
cmpsb
pop
mov
loopne
scas
cmpb
inc
xor
out
jl
adc
loope
push
test
imul
mov
push
lea
pop
popa
popf
add
add
xchg
std
jg
mov
scas
or
xchg
add
std
add
add
sbb
jp
or
cmp
movsl
outsl
jecxz
dec
rcll
jl
mov
scas
pop
and
lret
stc
cwtl
add
lret
inc
inc
in
xchg
es
loope
popa
mov
gs
rolb
push
dec
push
imul
jge
adc
xchg
xor
jg
and
lods
clc
mov
adc
jb
mov
clc
push
push
inc
adc
push
pop
mov
xor
aaa
mov
aas
data16
jl
je
or
in
inc
lahf
dec
mov
pop
adc
ss
jbe
inc
dec
sub
shlb
test
test
enter
movsb
notl
pushf
cmp
fisubs
push
mov
data16
enter
or
adc
adc
push
mov
jmp
pop
xchg
sarb
mov
xchg
pop
jo
mov
faddp
xlat
mov
leave
sbb
cltd
stos
pop
insb
sti
adc
pusha
sub
jae
scas
sbb
dec
or
dec
call
mov
push
sub
loopne
sbb
sub
ja
or
add
nop
into
leave
scas
ret
add
or
mov
ret
adc
push
dec
jmp
stos
sbb
mov
fdivrl
data16
pop
mov
pop
xchg
xchg
or
mov
pop
lahf
insb
mov
bound
cmp
clc
ss
mov
outsl
loope
gs
ss
pop
push
scas
jbe
std
fisttpll
lret
cs
pop
pop
jecxz
push
inc
xchg
movsl
dec
outsl
add
push
dec
mov
dec
jg
xor
in
lcall
pop
cmp
int3
sub
sti
jae
push
test
in
inc
jo
pop
pop
fildll
add
mov
idiv
iret
rorl
popf
mov
add
std
add
add
stos
into
jle
ja
xor
add
mov
call
gs
push
jbe
inc
in
lock
mov
std
pop
or
cs
gs
xchg
inc
popf
or
rcl
jp
out
bound
cmc
jnp
jb
inc
cmp
call
ds
std
cmp
xchg
add
mov
cmpsl
popa
dec
cltd
je
jl
xchg
mov
int
cmp
fisubrs
sub
in
jp
xor
pop
mov
fisttpl
sub
xchg
jmp
out
mov
lock
ljmp
mov
mov
iret
pop
and
xchg
add
cld
leave
addr16
jo
pop
hlt
sub
adc
pop
pop
movups
xchg
lcall
push
xor
pop
adc
test
mov
jae
mov
pop
xchg
daa
ret
je
shlb
dec
and
cs
mov
or
inc
mov
mov
mul
jae
dec
adc
and
add
les
xchg
mov
sub
pusha
add
clc
jp
pop
add
nop
pusha
fcom
dec
or
lcall
mov
mov
insb
dec
adc
cmpsb
push
and
xchg
ret
push
daa
fwait
pop
cltd
xchg
pop
ret
into
repz
sbb
fwait
xchg
gs
jbe
sub
outsb
adc
in
aad
adc
jnp
arpl
repnz
stos
test
popl
mov
les
lahf
fisubrs
sbb
fldl
dec
pop
xchg
mov
hlt
mov
jns
jb
jns
jge
shrb
cmp
adcl
push
pop
into
jae
in
jp
call
mov
lahf
jl
push
add
shll
cmpl
add
add
ret
mov
ja
or
pop
jmp
add
add
add
add
cmp
jno
test
or
adc
scas
fs
cltd
push
dec
lret
inc
scas
mov
or
pop
xor
push
pop
sub
popf
cltd
sbb
push
add
add
stc
dec
subl
shl
stos
stc
call
inc
sub
out
ffreep
jecxz
pop
inc
cs
pop
out
popf
adc
cmp
pop
ss
movsl
xchg
fcoml
xchg
testl
shlb
ret
adc
out
loope
sub
int3
and
mov
push
iret
jg
mov
and
cltd
fidivrs
int
push
pop
sub
inc
repz
sub
mov
gs
fwait
adc
mov
xor
dec
cli
push
push
inc
mov
mov
std
out
addr16
fidivl
or
cmp
int
dec
cltd
pop
movsb
inc
pushf
push
dec
rcrl
enter
add
movsl
outsl
ljmp
js
iret
je
loop
mov
aaa
mov
cmp
inc
imul
movsl
cmpsl
mov
js
into
mov
sbb
push
inc
pop
or
je
add
dec
shr
iret
xchg
xorl
rclb
outsl
pop
inc
lret
lcall
rcrb
push
std
cmp
cmp
xchg
int
cltd
cs
aas
aaa
pop
pop
mov
mov
mov
ljmp
jp
ficompl
pop
clc
xor
push
and
pop
add
enter
stos
push
inc
into
xchg
out
pop
mov
mov
std
test
ret
xorb
and
test
sub
je
pop
sub
dec
icebp
daa
sbb
cmpsl
xor
jne
andb
jbe
sub
cmp
cmp
daa
in
bound
pop
fstps
scas
jnp
mov
lds
push
fildl
or
testb
imul
add
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
aad
adc
add
inc
mov
insl
pop
arpl
dec
cmpsl
mov
xor
loop
ficompl
mov
push
lahf
add
loope
push
sbb
sarb
insl
ret
das
shlb
jmp
sti
mov
jle
dec
adc
dec
cmp
arpl
fs
and
and
and
in
mov
or
push
cli
lods
jg
pop
fs
dec
and
xchg
add
or
insl
faddl
or
ss
and
mov
std
jb
lret
inc
sub
dec
or
inc
pop
mov
push
outsl
pop
test
ret
lret
jecxz
inc
call
push
inc
scas
push
int
adc
push
or
int
and
xchg
or
push
add
cmpsl
adc
xchg
jo
in
in
sbb
inc
cmp
int3
rcrl
pop
movsb
nop
sbbl
cmp
test
ljmp
addr16
scas
xchg
fsubrl
dec
fwait
jno
pusha
in
aas
movsl
stos
jp
daa
jp
daa
and
jbe
test
xor
in
imul
xor
int3
adc
sub
sub
cmp
xchg
jb
pop
xchg
aaa
inc
mov
mov
pop
enter
mov
sbb
loope
sbb
adc
and
and
rclb
pop
test
in
dec
rorb
popl
or
mov
jbe
fcos
or
stos
pop
and
lret
lods
add
roll
adc
cmpsl
nop
dec
pop
xchg
pushf
test
cmp
loope
inc
lcall
rorl
lea
mov
mov
sub
loopne
add
mov
mov
int
loopne
rolb
test
jns
rcrl
movsb
dec
and
add
adc
or
pop
out
repz
fucomp
xor
test
std
add
add
mov
inc
rolb
loopne
push
mov
push
test
test
add
mov
cmp
hlt
xchg
call
mov
cli
leave
mov
mov
ret
repz
or
aam
jl
or
xor
and
push
stos
xorl
popa
jb
movsl
aas
fnstcw
xchg
sbb
popf
push
imul
lcall
jae
add
out
push
inc
cmpsb
push
jg
xor
ljmp
popf
mov
ret
cmpsl
insl
mov
xor
daa
push
js
mov
adc
cltd
les
and
cmpsl
dec
pop
cmp
pusha
daa
sti
mov
mov
or
mov
cmpsb
mov
lock
inc
data16
arpl
mov
mov
pop
aaa
fldl
mov
push
addr16
pop
hlt
mov
adc
sahf
xchg
push
push
adc
adc
inc
jle
jp
aam
cmc
inc
sarb
add
jl
insl
xor
out
stos
adc
pushf
ss
jp
sub
push
imul
push
add
mov
or
loopne
cli
dec
mov
std
add
scas
mov
push
pop
dec
jge
xchg
mov
js
xor
aam
pop
xchg
mov
xor
jl
cld
cmp
adc
int
bswap
into
sahf
cs
in
imul
xchg
mov
aam
scas
push
mov
jecxz
insl
sub
sub
sbb
mov
add
push
ret
sub
aas
or
mov
fisubs
push
lock
sbb
jnp
xor
subb
inc
jns
pop
in
push
mov
xor
ret
sbb
rorl
arpl
mov
push
ror
jp
cmpsl
add
add
add
add
add
xchg
insl
mov
out
nop
sbb
pop
cmp
add
insb
ljmp
fucomi
dec
push
idivl
sahf
push
out
dec
das
imul
mov
data16
mov
mov
xor
push
mov
jge
addr16
or
outsl
inc
xor
popf
iret
enter
movsl
or
xor
cmp
add
inc
jge
adc
xchg
pusha
sbb
adc
push
adc
cli
mov
popa
icebp
out
fiadds
insl
mov
lock
inc
add
mov
int3
mov
jb
mov
mov
sahf
test
jbe
xchg
stos
ljmp
in
jle
daa
lret
mov
sub
lds
pop
pop
push
cmp
pushf
dec
out
push
sub
loopne
stc
push
push
leave
xor
and
cmc
rorl
pop
ret
ljmp
xor
enter
cmp
inc
and
cmc
lock
xor
jmp
and
les
mov
jbe
jae
inc
add
sub
sub
iret
dec
pop
adc
sbb
pop
add
call
and
xlat
and
xor
or
cmp
sbb
sbb
popa
mov
andb
js
cmp
aas
aam
mov
xor
push
fiaddl
cli
ja
sbb
lcall
pop
push
dec
rorb
mov
push
mov
mov
idivl
es
cmp
ror
es
repz
repnz
movsb
add
test
mov
mov
mov
fnstcw
fmuls
sub
lea
xchg
cmc
adc
les
push
jp
nop
jmp
push
mov
or
fwait
jbe
add
add
ja
idiv
pop
out
cmp
push
hlt
fsubs
add
repnz
mov
mov
inc
fimuls
fsubs
ret
shlb
cli
lret
je
repnz
hlt
mov
mov
ret
mov
or
xrstor
jmp
scas
adc
mov
or
mov
xchg
iret
cmp
in
or
daa
mov
rcr
jge
mov
test
out
xor
dec
adc
sub
mov
fsubrl
jmp
push
xchg
adc
dec
pop
or
enter
mov
repz
test
jnp
inc
mov
mov
cwtl
insb
pop
stos
pop
ficompl
push
aas
pop
dec
cmpsl
or
mov
cmp
xchg
inc
mov
repz
stos
ja
imul
fmuls
dec
and
push
insb
shll
adc
lahf
xor
cs
mov
and
or
mov
and
out
dec
mov
insb
mov
nop
pop
xchg
jle
xor
daa
mov
mov
aad
inc
sti
cmp
sub
sub
mov
add
cmp
cwtl
sbbl
mov
adc
push
cmp
rcrb
cld
push
adc
imul
and
daa
lcall
dec
adc
ss
stos
decl
add
push
lret
adc
mov
push
mov
sbb
inc
pusha
stos
adc
mov
lret
push
inc
push
out
cwtl
outsb
xchg
lret
fdivrs
mov
rcll
or
cmp
mov
dec
dec
movsl
jne
shll
inc
shll
sbb
and
dec
cmp
ficoml
cwtl
mov
jp
addr16
mov
mov
pop
pop
sub
sub
jle
and
mov
push
add
add
sti
mov
inc
in
and
aad
add
std
add
add
xchg
sarl
xchg
xor
inc
pop
push
pop
cmp
push
stc
shll
leave
dec
and
mov
lds
dec
and
cmp
je
adc
repnz
push
jno
aam
pushf
add
addr16
jo
push
push
and
xchg
or
dec
mov
mov
sbb
fdivl
adc
repnz
jge
int
enter
sarl
jae
mov
out
mov
adc
jae
incl
dec
out
pop
repnz
in
loope
sub
and
add
and
adc
jl
xchg
imull
inc
ds
outsl
sub
cmp
or
pop
mov
add
inc
ss
add
lods
andl
ljmp
sub
lcall
mov
dec
and
lods
fcomi
adc
xchg
cmp
inc
in
jle
popa
test
cmp
je
add
xor
push
mov
xlat
fistpll
ljmp
pop
adc
sub
push
add
jge
xchg
lret
sub
bound
or
inc
lahf
jae
ss
fidivrs
and
xchg
outsb
cmp
ss
bound
mov
pop
ljmp
inc
dec
pushf
scas
lods
pop
sbb
xchg
mov
xchg
mov
stc
ss
bound
push
gs
mov
mov
mov
shlb
xchg
imul
inc
inc
or
jae
shll
es
inc
arpl
cmp
cmp
mov
lods
sti
out
sub
xor
cmpsb
mov
test
mov
jecxz,pt
lahf
sbb
push
stos
mov
jbe
movsl
in
xor
sar
fwait
mov
in
xor
add
sahf
xor
sub
push
out
shlb
add
adc
mov
jb
xor
fnstenv
mov
pop
push
push
lret
mov
xor
jno
xor
add
adc
mov
out
imul
sub
add
push
cmp
sbb
and
sarb
xor
test
mov
addr16
mov
sti
pop
pop
out
adc
loope
aas
das
jo
les
adc
out
and
pop
cmp
aas
les
dec
pop
out
inc
out
mov
xchg
aam
mov
insb
push
repnz
testb
pop
add
mov
mov
sbb
in
add
mov
dec
sub
testl
mov
and
rcrb
dec
cmp
popa
cmp
arpl
mov
or
popa
xor
lcall
movsl
inc
rclb
or
xchg
orl
rclb
adc
add
ljmp
push
push
movaps
push
push
push
add
mov
std
fwait
imul
mov
fsubl
mov
and
shlb
mov
mov
std
mov
inc
mov
push
lret
cmp
and
inc
fcoml
push
xor
subb
push
sarb
shl
mov
and
lret
fildl
das
lock
js
test
bound
xlat
xor
shl
fldt
jle
shll
shlb
pop
dec
cmp
test
int3
data16
lcall
test
pop
lods
clc
bound
mov
or
and
push
test
push
xchg
int
scas
mov
mov
fisttpl
into
add
add
std
in
mov
mov
std
cmp
push
mov
test
add
add
add
add
sbb
jns
cmp
and
mov
pop
mov
pop
mov
repnz
mul
jp
push
lock
pop
mov
cmp
push
cli
cmc
and
sbb
mov
rolb
addb
loopne
push
cmp
and
cmpsb
push
iret
cli
add
xchg
pop
mov
fmulp
xor
mov
fistpll
pop
jo
leave
repz
cmp
add
pop
sbb
mov
imul
sbb
add
xor
ljmp
aad
aas
inc
adc
testl
jo
repz
push
sub
icebp
push
mov
lods
adc
inc
gs
push
and
push
mov
mov
inc
std
mov
loop
pop
jg
xchg
add
out
xchg
sbb
dec
mov
or
adc
gs
jo
dec
pop
add
sub
add
sbb
sub
in
hlt
hlt
inc
and
pusha
dec
push
es
adc
cmp
and
pop
fisubrs
jno
or
clc
fisubrs
mov
test
jno
dec
ljmp
mul
insl
ret
sbb
mov
insb
sbb
or
movsb
popf
test
in
lods
sbb
add
add
loopne
push
or
pop
sti
mov
fsub
pushf
inc
test
ret
insl
dec
arpl
push
pop
inc
scas
int3
sahf
test
ret
aas
scas
jns
or
cs
xor
push
pop
stos
int3
lods
xchg
or
mov
jb
push
pop
mov
ja
pop
out
xchg
jb
or
int3
jns
adc
mov
mov
jae
ss
outsl
mov
add
rolb
testb
inc
adc
xlat
sahf
int3
stos
add
std
add
add
mov
popa
lcall
les
rcl
cltd
mov
pop
dec
adc
inc
sub
pusha
xchg
test
cmp
jp
add
sbb
jle
sub
cmp
in
movsl
mov
inc
mov
call
add
lock
mov
mov
fildll
xchg
and
fs
jp
into
push
mov
dec
sahf
push
xchg
cmp
std
iret
fnstenv
sbbb
jbe
in
cmpsl
push
mov
mov
adc
enter
rcll
and
cltd
xor
push
lea
push
xchg
gs
xchg
mov
jg
mov
sub
sbb
adc
icebp
cltd
sub
out
test
scas
ja
lds
stc
cmp
pop
stos
mov
aaa
test
mov
cltd
or
mov
or
push
fistpl
pop
mov
mov
inc
sub
push
loope
fwait
jge
mov
lahf
addr16
inc
ja
jne
test
add
das
mov
nop
pop
adc
incl
cli
sub
nop
jmp
and
pop
cmpsb
int
fcmove
je
cltd
xchg
fstl
sub
inc
test
mov
cmc
sub
inc
mov
fucomp
xchg
shrb
into
and
jne
sbbl
jbe
outsb
lea
fs
lcall
mov
andb
xor
cmp
jno
lea
xchg
sbb
mov
cs
mov
xorb
pop
dec
mov
jmp
dec
loopne
or
pusha
fwait
xchg
mov
sub
pop
mov
jp
mov
xlat
inc
pop
fcomps
adc
pushf
or
popf
out
push
adc
add
shlb
mov
in
add
add
popa
data16
gs
mov
test
lods
add
std
add
add
leave
pushf
add
sahf
rcrb
jae
push
fstl
and
jmp
mov
push
mov
xor
lods
outsb
in
lahf
fs
or
mov
inc
jg
in
pop
adc
rcrb
push
int3
addr16
push
arpl
test
nop
mov
and
adc
lahf
shll
lea
push
pop
outsb
mov
pop
push
and
or
sub
in
mov
and
sti
mov
bound
add
xor
push
arpl
aaa
jne
mov
mov
jns
dec
call
popf
sbb
int3
setae
shl
jo
mov
negb
xcrypt-cfb
cmpsl
daa
inc
mov
pop
adc
ret
scas
xchg
out
cmpsb
adc
dec
cwtl
fmuls
or
or
sti
xchg
cmp
std
or
js
das
notb
jecxz
lods
sbb
ficomps
out
push
dec
rorb
adc
sub
mov
js
cmp
jl
test
fcomps
or
loope
mov
pop
stc
sub
fnsave
xor
nop
rolb
or
sub
shll
xchg
jno
or
mov
mov
imul
mov
push
mov
pop
loop
fcmovu
loopne
mov
popa
xor
mov
push
xchg
std
scas
pop
imul
mov
or
cli
push
test
hlt
imul
iret
subb
mov
push
lods
in
sub
adc
jno
lock
xchg
or
mov
xlat
and
pop
in
test
push
mov
cld
mov
sub
fdivrp
xchg
in
imul
je
and
inc
loopne
jno
out
push
add
add
cmp
cli
cmp
adc
lret
xchg
ds
scas
add
std
add
add
stos
shrl
and
fidivrl
ljmp
addl
stos
push
loope
pop
rcrb
pop
icebp
push
pop
inc
pop
inc
mov
mov
jmp
insb
mov
aaa
das
stc
test
mov
adc
imul
addr16
mov
or
inc
loop
jmp
sbb
fstps
cmpsl
push
idiv
test
sub
add
add
push
scas
xorl
push
mov
push
and
orl
sub
or
xor
mov
dec
stos
gs
push
ret
icebp
std
movsl
cli
shll
call
or
imul
sbb
hlt
mov
rorl
iret
mov
xor
sbb
cli
out
std
dec
pop
xor
xor
cmp
or
sub
and
mov
cmpl
loop
repz
and
mov
jle
pop
pop
iret
jecxz
cmc
bound
mov
mov
jbe
adc
cli
sub
fwait
pushf
mov
stos
stos
mov
test
int
stos
lea
sub
adc
adc
loopne
sub
mov
sub
mov
jno
sbb
mov
xchg
push
mov
pop
push
or
addb
in
xchg
dec
cld
pop
adc
es
hlt
mov
mov
cltd
imul
adc
mov
cltd
sbb
rclb
test
jae
sahf
or
fdivrl
xchg
insb
movsl
fwait
jns
scas
sbb
je
les
shlb
icebp
sbb
jmp
into
push
mov
add
loopne
ror
inc
enter
jbe
xchg
dec
sub
int3
ret
test
mov
jno
xchg
rcll
lds
or
shlb
xchg
lcall
cmp
daa
imul
add
sbb
shlb
idivb
dec
aam
call
hlt
mov
add
icebp
loope
enter
cltd
mov
xor
aad
loopne
mov
int3
xor
lcall
pushf
pop
imul
pop
push
aaa
iret
outsl
xchg
pop
lret
adc
mov
out
pop
insb
imul
xor
inc
outsl
jge
xor
es
jno
repnz
test
mov
shl
cmp
inc
imul
cwtl
mov
in
scas
or
cmp
movsb
int
int
test
sub
jle
inc
adc
lock
movsl
inc
pop
test
cli
mov
or
and
lds
ret
xor
jle
ss
imul
lcall
pop
ds
mov
stos
int3
loopne
std
xchg
scas
pop
das
inc
xor
push
mov
jle
add
lods
xchg
mov
cmp
xor
push
lret
jbe
in
dec
das
ss
inc
add
push
int3
fists
push
mov
add
aas
cltd
out
xorb
jns
movsb
cmp
or
mov
or
cmp
rol
leave
arpl
and
sbbb
mov
fdivrl
mov
mov
outsl
jb
push
enter
clc
adc
imul
xor
jecxz
int3
test
inc
or
lahf
insl
test
scas
shl
cmp
call
fsubrl
inc
sbb
mov
jg
das
inc
dec
arpl
pop
les
bnd
cmp
stc
sub
int3
fcomps
xlat
mov
sbb
or
dec
imul
pop
cmp
mov
dec
fidivs
pusha
xor
add
add
cmp
mov
in
outsb
fs
nop
add
add
add
add
fimuls
cwtl
out
clc
push
lods
daa
mov
jl
or
into
jp
sti
add
shl
xlat
sbb
adc
xchg
test
mov
lahf
lret
leave
call
push
clc
xor
leave
cwtl
pop
or
mov
in
jmp
and
dec
mov
fdivrp
xchg
mov
iret
push
mov
aaa
mov
nop
jbe
ja,pn
jge
push
scas
jecxz
or
sbb
xchg
adc
cmp
test
fxch
fcmovnbe
dec
xor
jge
dec
inc
jl
aam
mov
mov
test
loopne
inc
mov
leave
sbb
fdivrs
in
outsb
push
and
idivb
dec
sbb
jle
loopne
out
cli
es
jge
mov
mov
dec
sub
ror
mov
cli
es
std
pop
les
push
push
outsb
add
push
in
dec
fstl
and
push
sbb
adcl
push
push
repnz
cmp
cs
and
in
inc
sbb
xorl
add
dec
loop
fs
pushf
in
lods
xchg
orb
popf
dec
push
jle
stos
cltd
mov
add
stos
movsl
das
or
addr16
dec
stos
sub
push
add
sbb
arpl
xchg
sbb
jnp
mov
aam
outsb
xchg
mov
push
and
out
cmc
dec
and
push
add
cs
xchg
or
xorb
call
add
stc
mov
jl
scas
repnz
mov
mov
xchg
lea
sbb
jno
xor
sbb
pop
stc
fstps
mov
xlat
dec
sahf
mov
movsl
inc
adc
cwtl
add
hlt
push
dec
push
std
test
pop
or
mov
fwait
add
inc
mov
jb
sbb
add
std
add
add
dec
sbb
ljmp
jg
jns
lret
adc
xorb
jl
jno
pusha
nop
cmp
test
dec
push
push
aad
jne
in
out
dec
stc
scas
xchg
popf
gs
jo
bound
fisttpl
pop
dec
xchg
adc
insb
dec
sti
push
out
std
int
mov
imul
int
xchg
arpl
arpl
movsb
hlt
shrb
xor
sub
or
data16
cmc
rorl
dec
mov
lret
mov
movsl
cmpsl
out
add
stos
xchg
jns
mov
ret
mov
mov
or
lret
aad
inc
dec
xchg
sti
icebp
mov
ret
sub
mov
arpl
inc
push
repnz
in
xor
mov
and
shrb
mov
sbb
das
loop
xor
popa
and
addl
testl
push
xchg
insb
call
mov
mov
adc
sub
out
mov
insb
addb
fdivl
jp
nop
mov
lds
addr16
test
inc
inc
mov
ret
sbb
push
mov
popf
mov
sahf
xchg
aad
and
ficoms
jp
int
inc
cltd
or
sar
mov
sub
mov
add
ljmp
notl
inc
pop
xor
adc
shl
add
pop
andl
outsb
lret
cmpsb
scas
push
les
lods
movsl
sar
out
lea
fsub
orl
jns
imul
xchg
jb
xor
loope
sub
push
lahf
sub
leave
xor
aam
sub
pop
adc
push
or
test
mov
pop
adc
lcall
jnp
jne
je
add
add
mov
cmp
mov
pop
sbb
add
add
add
fsubr
add
aaa
cld
jecxz,pn
lods
testb
clc
jns
jae
int
mov
xlat
pop
jp
sti
inc
movsl
sbbl
fistpl
ss
cmp
or
rcrl
loope
fstps
adc
mov
add
mov
sub
cmp
mov
pop
decb
and
cwtl
mov
pop
fbld
fcoml
pop
gs
in
mov
int
cmpsl
add
sbb
pause
rol
icebp
lahf
pop
addl
cmp
dec
and
in
xor
sbb
jp
push
es
and
push
jbe
mov
out
xchg
or
cli
and
sahf
mov
jmp
lret
or
call
push
pcmpgtd
cltd
xor
fcomps
adc
ja
call
inc
and
push
pop
mov
adc
enter
bound
mov
sbb
call
add
mov
call
and
cmp
dec
adc
out
add
cmp
lods
add
in
adc
in
je
mull
push
pushf
xor
mov
push
pop
sti
out
sub
mov
push
jne
leave
push
out
inc
lea
scas
test
inc
adc
pusha
xor
xchg
data16
sub
add
rorb
out
in
xor
mov
sub
push
and
test
mov
push
xchg
mov
mov
jmp
mov
aam
or
xchg
mov
loopne
movsb
push
scas
das
jnp
cmp
push
testb
aad
ljmp
push
popf
insl
adc
imul
imul
add
add
add
cmp
out
idivl
test
and
mov
mov
add
test
outsb
andl
xchg
loope
in
nop
cltd
add
out
pop
orl
repnz
call
cmpsb
insb
xorl
adc
dec
repnz
out
insl
dec
xor
negb
mov
mov
jmp
sub
cmp
mov
inc
add
nop
xchg
enter
adc
mov
test
xchg
cmp
into
push
lea
outsl
sub
xor
cmp
pop
jns
pop
xor
push
repnz
inc
js
insl
jb
push
mov
lret
in
repz
cmp
push
cmpsb
loope
lea
outsb
jmp
pusha
dec
mov
ret
jno
push
enter
dec
test
jecxz
es
push
dec
jo
mov
fldt
jge
xchg
add
mov
pop
cld
enter
sub
lret
lret
out
mov
or
push
imul
add
lret
sbb
cltd
push
in
pop
adc
cmp
in
frstpm(287
pop
gs
insb
das
sub
pop
or
jnp
js
pop
sub
sbb
repnz
and
loop
repz
outsl
out
xchg
push
and
sub
and
adc
jmp
idivl
jnp
xchg
and
mov
lcall
xchg
push
push
dec
aas
ss
in
mov
arpl
push
xchg
adc
outsb
mov
loope
push
cs
sbb
push
add
xchg
lahf
cli
aad
inc
data16
lock
aam
call
push
ljmp
cs
arpl
mov
shll
fcoml
pop
mov
test
sub
data16
cmp
and
mov
ret
stos
leave
in
clc
push
add
jle
jge
rorl
test
inc
adc
add
add
sbb
fsin
out
fs
popf
outsb
pop
cmp
add
add
add
cmp
sub
mov
rcll
clc
rorb
bound
dec
fstps
mov
sbb
mov
test
inc
lahf
rcr
ret
mov
mov
sarl
sar
loop
mov
jge
xchg
pusha
push
out
loope
cmc
ds
cmp
andl
and
repz
jno
mov
cmc
jp
stos
imul
sti
in
lahf
out
cmpsb
mov
data16
dec
jno
pop
cltd
or
daa
adc
adcl
fs
cwtl
dec
es
dec
and
shrb
mov
inc
pop
mov
push
stc
pop
call
inc
movsb
cmpsl
loop
enter
stos
xchg
jo
dec
pusha
push
rol
inc
jmp
addl
mov
ja
and
and
push
sbb
adc
mov
mov
mov
cmp
inc
mov
push
sub
and
cmp
xchg
xor
or
dec
or
nop
mov
push
cmp
add
fdiv
mov
cmp
adc
sarb
jns
mov
xchg
test
adc
mov
xchg
outsl
and
jl
repnz
nop
jl
cmp
cmc
mov
movsb
push
pop
mov
in
sbb
loop
loopne
int
jnp
and
pop
lods
out
lahf
push
pop
loope
les
adc
ficoml
fistpl
adc
push
sub
and
cmp
pushf
push
mov
or
mov
ja
orb
adc
mov
jns
pusha
loopne
push
ds
inc
xor
jnp
loopne
mov
pop
mov
dec
dec
aas
pop
daa
addl
add
add
add
adc
arpl
sti
adc
jl
dec
dec
lret
cmpxchg
add
or
outsl
movsb
ficomps
call
test
ret
imul
push
mov
mov
sbb
cld
in
outsb
pop
clc
xchg
les
out
pop
xchg
ss
pop
stc
and
inc
inc
push
push
or
add
test
xchg
int3
std
int3
test
cli
xchg
hlt
enter
mov
and
cmp
test
push
mov
xchg
xchg
lds
mov
sub
adc
mov
gs
sarl
lods
push
aaa
and
aad
popf
shrb
sub
push
xchg
aas
out
pop
out
pop
daa
loope
pop
shr
mov
push
xchg
lock
leave
xor
jg
mov
cmpsl
pop
and
push
push
pop
cld
int
je
test
popa
das
aam
scas
decb
mov
aaa
inc
arpl
adc
and
ret
sahf
mov
sub
jmp
in
outsl
orl
cli
mov
cmc
into
or
test
push
pop
or
or
inc
sahf
cltd
std
lret
mov
pushf
loope
dec
add
xchg
add
hlt
and
aaa
mov
imul
pop
fcmovu
jbe
sbb
lahf
inc
insl
mov
btc
jns
or
dec
jne
or
and
xchg
jo
or
outsb
pop
cmc
in
sahf
rcr
mov
inc
push
pusha
cmpl
adc
xchg
cld
lods
xlat
fcoms
sbb
lea
pusha
push
and
or
pop
cmp
mov
xchg
negb
mov
out
js,pn
aaa
adc
mov
lods
fwait
popa
cli
pop
sub
xor
int3
adc
and
in
xchg
or
scas
test
push
repnz
mov
dec
gs
cmp
xor
test
sbb
push
dec
idivb
push
and
xor
sub
mov
mov
add
roll
cwtl
mov
data16
fstpl
ja
mov
cwtl
pop
mov
fistl
stos
aaa
test
fcomps
lahf
and
cmp
mov
cltd
popa
jnp
cmc
sbb
popf
sbb
loope
ficomps
movsb
arpl
cld
mov
out
rcr
add
cmp
lret
jo
dec
unpcklps
adc
test
rcrb
cmp
xor
rorl
lods
mov
iret
daa
dec
sbb
sti
hlt
pop
adc
divb
jp
and
in
inc
jno
jmp
add
divl
xchg
or
fisubrs
add
clc
lret
icebp
xor
xlat
test
loop
or
pop
data16
jbe
aas
dec
je
dec
cli
xchg
loopne
adc
push
fsubr
xlat
push
pushf
ds
push
push
sub
push
adc
aas
fidivl
sti
std
xchg
dec
adc
sbb
mov
pop
out
sub
clc
movb
xor
pop
cli
adc
sub
push
lods
js
xchg
call
adc
iret
daa
xlat
xchg
mov
mov
inc
adc
movsl
rorb
in
push
mov
push
test
xor
int3
insb
lret
push
jnp
add
sbb
inc
sbb
aaa
imul
add
sbb
shl
test
sub
jg
pop
push
dec
push
mov
inc
das
sbb
push
and
test
jg
out
imul
pusha
ljmp
push
jo
xor
incl
clc
push
test
repnz
jmp
push
nop
jne
add
enter
rcr
mov
ret
out
out
or
sbb
sbb
pushf
xor
jb
inc
inc
fisttpll
lret
sbb
lret
add
add
push
jecxz
jg
data16
sbb
jg
dec
stos
rolb
std
add
add
inc
pop
mov
xchg
test
sbb
std
inc
cmp
push
inc
inc
mov
mov
into
push
and
sbb
lcall
ljmp
dec
fcompl
cltd
pop
popf
sub
mov
sbb
in
dec
mov
dec
dec
sbb
or
js
inc
cmp
pop
pop
out
dec
dec
aad
mov
pop
inc
ljmp
dec
sub
or
fldl
push
imul
scas
push
mov
data16
aad
hlt
loopne
scas
loope
or
sbb
push
out
nop
xor
adc
sbb
test
sbb
in
adc
ja
or
xchg
pop
push
mov
inc
dec
push
push
push
dec
lret
int3
cmc
repz
rclb
mov
xlat
pusha
jo
lods
cld
in
addl
push
sbb
ljmp
pop
push
ret
fildl
jecxz
push
notb
mov
shrb
out
mov
push
dec
adc
movl
adc
xor
mov
cmpsl
pop
repnz
fs
push
xor
nop
call
push
mov
sub
sbb
and
and
or
in
mov
js
mov
sub
test
lock
or
jae
lods
mov
ja
fmull
fwait
add
fdivl
inc
xchg
call
bound
ss
or
test
and
sbb
ret
in
push
pusha
mov
pop
jae
jecxz
lods
or
lret
rcrl
sbb
dec
insb
test
mov
leave
push
andl
test
adc
nop
mov
and
cli
int3
jno
xchg
outsl
jl
stos
sldt
add
pusha
jbe
out
test
stos
imul
add
std
add
add
outsb
and
aad
cmpsb
ret
mov
cmc
mov
dec
aas
fnstcw
lret
inc
xchg
mov
cltd
jne
xlat
dec
cmpsb
sbb
sub
xchg
jno
subl
cmp
cmp
call
in
pop
push
xchg
dec
insl
cwtl
pop
lock
xorb
js
mov
aas
shr
and
lret
jle
popa
out
loop
pop
push
fsubrl
add
ljmp
jae
lods
or
movsl
pusha
leave
aad
adc
aad
test
rolb
and
imul
and
notl
pop
pop
and
negl
jnp
punpckhwd
jg
adc
out
in
mov
xorl
add
out
out
mov
mov
pop
rcll
cmp
cmpsb
call
pop
jno
xchg
loop
or
in
jo
cwtl
out
sub
mov
pop
test
aas
aad
mov
idivl
push
scas
jae
repz
cltd
xor
in
push
popf
inc
and
xchg
push
jl
lcall
out
pop
das
fst
sarb
imul
xor
pop
subl
pop
jo
pop
sbb
jecxz
in
iret
pop
outsl
sbbl
fisttps
ja
mov
popa
aaa
xchg
mov
fwait
iret
repz
pop
mov
imul
xorl
ds
imulb
jnp
loop
mov
or
pop
adc
mov
sbb
push
int
fbstp
ret
dec
cld
scas
fimull
mov
sub
add
sub
daa
dec
dec
push
sub
mov
int3
outsb
sub
sub
in
pop
ds
adc
jae
cmp
nop
and
lock
sbbb
movsb
cmc
or
test
add
add
pop
lcall
addr16
adc
movsl
les
add
add
add
or
pop
cmp
leave
les
pop
pop
fs
and
push
xor
divb
mov
bound
mov
movsb
dec
outsl
js
add
mov
mov
lcall
and
jns
ret
sbb
hlt
jb
fs
pop
push
stos
adc
pop
push
jb
push
mov
pop
mov
ja
enter
jge
mov
loope
ret
xchg
jns
push
lds
jp
inc
or
sbb
pushf
push
jle
idivl
xor
xor
inc
cltd
or
mov
jne
inc
int3
mov
sbb
iret
pop
and
ljmp
js
in
sbb
or
int3
jle
jnp
mov
xchg
mov
iret
in
xchg
sbb
lods
pop
mov
mov
je
adc
inc
in
mov
adcb
pop
cmp
call
sub
cmp
adc
or
hlt
test
test
xchg
mov
lahf
push
adc
jge
shr
dec
inc
les
cmp
stos
mov
cmp
jle
adc
sti
xchg
pop
push
mov
outsl
cs
subl
dec
sub
mov
xchg
xor
les
add
cmpsb
xlat
add
enter
fstpl
pop
mov
imul
sub
dec
adc
push
mov
push
fisubrl
shrb
repz
jl
sti
mov
test
sbb
jo
andb
add
or
int
adc
inc
jbe
aas
scas
arpl
movsl
or
aam
xchg
in
pusha
int3
movsb
int3
add
add
adc
in
xor
xchg
add
xchg
lcall
sub
add
insb
sub
outsl
daa
insl
push
addb
mov
movb
std
add
add
repz
aaa
mov
pop
jno
sub
dec
mov
ja
les
shrl
repz
pop
enter
add
int3
lods
sub
xchg
lar
adc
add
pop
inc
mov
shll
repnz
xorb
mov
fistpll
sbb
imul
pushf
push
inc
or
repz
lods
mov
jmp
iret
mov
stos
sub
jbe
push
shrl
pop
add
mov
das
pop
cmc
inc
mov
jnp
add
mov
mov
add
shll
fstps
test
in
clc
xchg
mov
mov
adc
jns
xorb
mov
call
loope
adc
mov
addr16
mov
push
in
leave
pop
mov
loopne
mov
ret
inc
in
cltd
or
movsl
pop
test
bound
jecxz
add
sahf
iret
add
cmp
test
test
jge
cmc
lods
mov
push
jb
arpl
pop
add
mov
sub
out
cs
imul
ljmp
and
xchg
repz
out
mov
mov
jae
ss
and
and
pop
cmpsb
push
cmp
and
outsb
mov
stos
sbb
mov
clc
cmpsl
sti
sbb
mov
cmp
and
push
lds
popf
pusha
xor
push
mov
mov
push
loope
pop
xchg
adc
xchg
out
nop
push
xchg
lahf
and
xorl
arpl
loopne
cmpsb
pop
pop
mov
mov
stc
movsl
fildl
ja
cmp
inc
lea
and
mov
out
leave
enter
cmp
sbbl
jo
fidivs
pushf
jne
test
aaa
mull
jns
inc
lret
aad
fwait
rcr
repnz
movb
pop
jbe
xchg
inc
addb
mov
jecxz
or
jl
daa
iret
push
nop
pop
in
mov
leave
aas
ret
inc
aas
mov
adc
mov
out
repnz
daa
rolb
cltd
dec
mov
ficompl
jne
cmpl
sub
mov
mov
cmpsb
pop
lahf
loopne
and
sbb
ljmp
movsl
dec
mov
scas
imul
jae
and
add
mov
pusha
pop
dec
aam
int3
popa
in
stos
sbb
push
sbb
enter
or
shlb
rcrb
jl
push
cltd
pop
inc
add
dec
mov
inc
stos
stos
rol
mov
in
add
mov
shll
sbb
dec
add
addr16
mov
pop
sar
imul
mov
sahf
idivl
sbbl
jno
pop
dec
and
mov
rorb
adc
xchg
cmc
cmp
or
shll
pop
fldcw
jmp
pop
mov
mov
ss
mov
gs
test
and
adc
add
add
aaa
sbb
dec
pop
and
cmpsb
nop
ret
jmp
and
cmpsl
andl
sub
adc
cmc
dec
cmp
or
pop
jb
mov
repnz
sub
jp
lahf
pop
test
xchg
mov
mov
cmp
cmp
in
xchg
outsb
in
and
enter
sub
arpl
in
adc
popa
clc
ror
mov
lcall
flds
add
add
add
add
cmp
mov
mov
lret
std
add
add
adc
mov
dec
in
addr16
sti
dec
mov
jg
cmc
dec
out
aaa
clc
mov
outsl
jne
stos
add
in
pop
and
adc
mov
es
shr
mov
jmp
dec
mov
les
lahf
aad
mov
inc
lock
pop
push
aam
orl
cs
seto
inc
shr
inc
push
test
add
xor
pop
jnp
je
xor
and
mov
in
fistl
push
stc
in
jmp
inc
inc
mov
mov
popa
mov
arpl
mov
jo
push
neg
mov
add
les
adc
fidivl
cli
shrb
cmp
out
inc
sbb
xor
movsb
pop
jnp
outsl
cmpsl
pop
jb
sbb
mov
xlat
mov
inc
mov
jle
test
xor
mov
push
jle
popa
xor
sbbl
push
loope
push
stc
xor
std
jo
and
je
cli
call
std
outsb
sub
popf
adc
dec
std
arpl
into
dec
test
sti
xor
dec
or
fwait
xchg
push
popf
mov
add
fildl
es
sbb
lds
or
les
int3
loopne
dec
andb
repz
cmp
mov
sub
lahf
into
or
leave
out
clc
xchg
mov
jbe
inc
call
dec
je
bound
jg
xor
cwtl
mov
das
sti
push
loop
orl
sbb
sti
mov
xchg
pop
stos
sbb
mov
mov
or
dec
add
lods
lock
insb
jo
rolb
mov
aam
add
les
test
adc
leave
mov
xchg
push
or
test
xor
push
repz
xchg
mov
mov
xchg
lcall
in
leave
add
add
sbb
jge
aam
dec
cs
das
cltd
int3
add
std
add
add
push
xor
jle
stos
repnz
mov
mov
or
jns
push
add
or
aad
sbb
ja
inc
in
cmp
xchg
fildll
andl
out
push
cmp
sub
fistpl
and
lahf
mov
or
jl
addr16
jl
outsb
inc
jecxz
pusha
in
lcall
lds
lods
xor
inc
imul
pop
in
sub
scas
fs
jb
cmp
scas
inc
sbb
lods
fiadds
js
daa
pop
int
je
adc
nop
sbbb
scas
xchg
out
sahf
in
call
cmpsl
jno
testl
mov
jecxz
add
jae
pusha
push
push
sbbb
xchg
imul
fmul
cwtl
cmp
mov
and
gs
cs
and
rcrb
push
add
jg
and
push
fbld
jnp
imul
sbbb
xchg
outsb
out
push
jnp
inc
xchg
cmp
ss
jnp
daa
shrl
jecxz
int3
in
xchg
mov
test
lahf
mov
clc
icebp
jbe
xchg
js
sbb
mov
stos
mov
jbe
add
push
mov
xor
and
inc
fidivs
add
mov
sti
push
in
mov
mov
or
and
popa
adc
adc
adc
xor
and
adc
popf
and
pushf
add
mov
sub
and
das
push
push
and
push
or
mov
push
mov
xor
cli
cmp
jne
or
outsl
xor
inc
jmp
idivb
loope
lcall
sbb
fstpl
xchg
rorl
jmp
push
lock
fcom
jae
loope
jge
enter
repnz
add
mov
nop
es
inc
xchg
into
add
std
add
add
aas
lock
mov
add
pop
inc
insl
cltd
add
or
data16
push
out
sub
popa
mov
fisubrl
inc
inc
lods
or
mov
arpl
sbb
and
in
lds
xlat
sti
adc
sub
push
fwait
ja
sub
js
ficomps
aam
insl
outsl
fisttpl
lret
jg
add
lret
cld
popf
imul
jbe
cmp
and
fmul
rorb
and
iret
cmp
add
fs
xor
pop
or
pop
push
outsl
test
sbb
xlat
inc
and
inc
ret
loope
dec
outsb
es
mov
jne
mov
rcl
daa
das
pop
adc
cwtl
fisubrs
jle
aas
push
mov
lock
loopne
pop
push
xchg
mov
jge
xor
inc
mov
inc
adc
jne
fcmovu
loope
sbb
pusha
repnz
test
sbb
in
add
cmp
sahf
les
cs
int3
pushf
pop
fisubl
movsb
fidivrs
mov
fisttpll
mov
int3
and
jg
add
cmc
in
pop
stos
pop
test
cmp
sub
mov
and
aaa
xlat
inc
xor
adc
cwtl
cmp
aam
js
mov
xor
imul
mov
jecxz
lods
push
repnz
test
push
aas
dec
add
push
jmp
pop
stos
jnp,pn
or
scas
or
cs
mov
ret
lea
mov
and
inc
shll
lds
lret
outsb
add
xor
mov
imul
inc
outsl
mov
xor
xlat
xchg
scas
sub
cmpsb
mov
dec
in
fildll
outsl
ret
mov
mov
add
mov
in
dec
cmp
outsb
shl
xlat
xchg
rolb
add
add
add
loop
dec
jecxz
mov
das
insl
cmp
and
repnz
mov
xor
call
movsl
jmp
mov
push
mov
mov
ljmp
repz
rep
mov
mov
les
bnd
inc
inc
inc
cmp
adc
je
ds
mov
xlat
cmp
push
xor
ret
cmp
mov
lods
movsb
lock
jne
xchg
popa
ja
ja
add
pop
call
mov
xor
dec
outsb
in
ljmp
jmp
xchg
imul
jmp
out
stos
pop
push
xchg
fisubrs
adc
stos
push
sub
cld
adc
or
mov
dec
inc
jge
mov
cs
mov
bound
dec
inc
out
or
loopne
pop
rorb
mov
loope
xlat
rcl
or
subl
jge
push
lea
cmpsl
adc
das
pop
clc
sbb
cs
push
fidivrl
ds
jge
jae
ljmp
shll
sbb
test
sar
xchg
mov
fsts
enter
je
push
add
xchg
idiv
stc
xor
xchg
xchg
cmpl
or
push
outsb
hlt
fimull
fmulp
mov
sbb
xor
sbb
daa
addr16
test
inc
jg
in
pop
mov
inc
in
add
dec
movl
mov
inc
outsb
cmpl
sbbb
test
dec
mov
lea
insl
into
xchg
xchg
fmull
out
imul
sub
aad
pop
fcmovnbe
mov
sbb
js
popa
lcall
xor
cli
mull
jne
mov
sub
fwait
stc
aad
jns
xor
je
daa
add
add
fldcw
outsb
cli
test
add
add
add
in
xchg
es
push
pop
outsl
adc
dec
inc
jno
xlat
push
leave
out
hlt
mov
mov
sub
loope
inc
push
push
wbinvd
xacquire
incb
mov
outsb
xor
xor
test
cmp
and
mov
jg
mov
xchg
add
xor
jns
les
inc
push
cmp
aas
test
and
jl
xchg
mov
mov
sbb
sub
push
scas
ret
movb
lea
mov
jmp
lret
dec
mov
push
sub
mov
enter
movsl
push
es
xchg
mov
int
and
sbb
jmp
fcompl
dec
loope
inc
ror
cmc
les
jno
div
insl
inc
dec
and
das
cs
fcomps
sub
jl
in
xlat
addr16
mov
dec
cmp
mov
sbb
scas
push
mov
arpl
push
add
je
dec
sar
insl
push
lahf
out
dec
mov
jmp
cmp
xchg
xlat
xor
shlb
jge
negb
loope
repnz
les
add
xor
xor
bnd
mov
mov
cmp
adc
sbb
stos
cmp
adc
or
adc
jns
jo
jbe
jne
fstps
pop
jle,pn
incb
jno
mov
into
fisubrs
pop
inc
rorl
dec
nop
scas
lods
add
and
xchg
shrl
movsb
xchg
lods
add
loopne
inc
or
inc
fisttpl
insb
jne
sbb
pusha
pop
pop
nop
cwtl
mov
mov
das
gs
xchg
daa
repnz
cmp
in
shrb
add
popf
pop
jecxz
inc
push
inc
pop
add
xchg
push
mov
pop
inc
jbe
push
cltd
push
add
add
push
dec
pop
xchg
stos
or
add
add
add
cmp
push
ljmp
cmp
or
jg
push
xor
adc
adc
adc
jecxz
rcll
and
add
int3
pop
xor
inc
into
scas
or
daa
cwtl
leave
push
adc
fldenv
and
mov
fists
lcall
imul
jl
nop
or
nop
pop
outsb
insb
in
push
jg
cmc
pop
ds
sbbb
sbb
xchg
iret
mov
inc
pop
es
test
push
test
push
imul
in
popf
mov
and
sub
jmp
xchg
pusha
jbe
mov
ljmp
into
push
jecxz
push
ret
mov
pop
inc
in
push
pop
adc
enter
mov
lea
jecxz
lock
lock
lret
aaa
and
xchg
test
xchg
scas
mov
loop
pusha
mov
sbb
cmpsb
mov
push
mov
out
cs
lds
mov
pop
mulw
pushf
movsl
fbstp
mov
lods
insl
lret
rcrl
imul
aam
stos
xchg
jle
sbb
pop
je
ds
lret
incl
xchg
xchg
sbb
xchg
insb
movsb
lcall
cmp
out
push
lock
outsl
aam
jge
add
and
dec
mov
xor
inc
clc
xchg
ret
jne
cmp
mov
jne
insb
mov
sbb
cs
jecxz
fcomi
push
dec
adc
inc
sahf
adc
cmpsl
and
out
les
adc
lret
mov
in
pop
jbe
push
arpl
in
scas
data16
fs
jb
imul
or
hlt
or
ss
pop
mov
add
push
int
popw
jg
fabs
dec
lcall
aam
mov
popf
mov
add
add
xchg
jl
cld
decl
or
sub
sub
std
add
add
jmp
xor
movswl
push
adc
lret
cmp
adc
and
xor
bound
xchg
mov
test
cld
sbb
dec
jns
sbb
cmp
and
hlt
mov
jo
dec
add
push
add
xor
xchg
test
mov
mov
mov
xchg
or
jg
int
jmp
cmpsb
outsl
bound
xchg
call
adc
mov
loope
sub
jle
mov
stos
outsl
pop
dec
mov
mov
push
icebp
dec
xchg
xor
icebp
ja
xor
mov
gs
jecxz
loope
call
jno
sub
xchg
enter
rcr
fwait
js
or
adc
jno
mov
add
imul
jne
xor
jbe
inc
pop
sbb
cmpsb
stos
dec
push
pop
pop
xor
xchg
adc
pop
push
roll
fiaddl
andl
sbb
in
psrad
or
lret
pop
leave
sbb
outsb
ret
stos
pop
adc
xchg
adc
hlt
push
mov
dec
jmp
push
nop
ljmp
shrl
xchg
push
ret
mov
mov
call
dec
jns
push
add
pop
pop
pop
mov
add
and
pop
fsubl
sbb
jg
lock
out
xchg
xchg
scas
scas
mov
ror
addl
jbe
loopne
adc
xchg
iret
and
pop
cmpsb
mov
int3
mov
decb
ljmp
lock
xchg
andl
iret
lods
ja
clc
test
xchg
mov
sahf
ja
arpl
ret
gs
jno
adc
add
push
in
test
stc
mov
cltd
mov
dec
mov
add
push
add
add
and
dec
repz
fldt
mov
adc
xchg
add
std
add
add
pushf
shrl
jle
mov
rolb
mov
in
aas
lret
adc
shll
xchg
fildll
mov
js
ds
sahf
pop
cwtl
jb
xor
or
insb
push
pop
inc
sbb
das
imul
mov
adc
inc
lret
adc
mov
sbb
addr16
lds
push
and
inc
push
jns
fdivrp
frstor
sarb
dec
and
mov
shll
dec
mov
ds
ds
pop
dec
stos
xchg
push
inc
test
inc
aam
aam
daa
pushf
inc
dec
sub
dec
xchg
cld
mov
jl
xor
scas
and
mov
cmp
in
addb
es
addb
inc
jnp
adc
jbe
push
inc
pop
sti
xchg
lods
test
rclb
adc
or
imul
sub
aas
js
js
mov
adc
mov
add
lods
aam
or
jns
das
in
not
mov
xor
xor
or
xchg
int3
mov
jns
mov
outsb
jne
enter
lcall
push
or
cltd
or
xor
jecxz
add
xchg
dec
gs
xchg
dec
clc
dec
les
push
push
in
gs
and
sarb
enter
sti
dec
pop
ret
outsb
clc
jno
sub
js
and
insb
scas
inc
aaa
mov
stos
xchg
insb
in
inc
inc
dec
xlat
in
push
sub
cmp
push
mov
loope
pop
in
adc
loopne
mov
push
stos
xchg
aaa
int3
insl
fisubl
push
fisttpl
mov
pop
loope
xchg
push
jmp
orb
gs
je
jbe
push
push
add
add
lcall
roll
push
stos
test
add
std
add
add
fsubs
cmp
sub
popa
cli
shlb
sti
ret
xchg
mov
mov
push
aas
pop
neg
mov
xchg
pusha
fsubr
mulb
sub
dec
in
pop
cmpsb
dec
outsl
icebp
call
fiadds
das
inc
xchg
add
xor
iret
xor
push
aas
cmc
movsl
popf
cmpsl
in
jbe
gs
addl
mov
nop
push
jle
ljmp
pop
pop
aas
mov
pushw
xchg
pushf
call
bound
lods
ss
jg
add
leave
mov
push
xor
pop
mov
lods
xor
or
cmp
xchg
call
into
pusha
subl
hlt
shlb
pushl
lret
sub
pop
mov
push
xchg
repz
sub
push
fwait
insl
or
dec
xlat
mov
add
add
mov
cmp
leave
mov
adc
add
jle
dec
cs
mov
cltd
stos
push
in
mov
jl
adc
pop
inc
mov
sar
and
arpl
mov
fucom
push
mov
nop
ja
mov
dec
dec
sbb
inc
aam
pushf
test
mov
or
inc
jl
xchg
jle
andl
xchg
mov
lcall
ret
imul
mov
mov
mov
divl
fnstenv
scas
or
lahf
dec
sub
stc
sahf
aaa
jge
mov
xlat
jnp
je
adc
inc
pushf
aas
sub
sbb
dec
push
pushf
adc
push
int
int
mov
mov
std
and
or
sar
add
hlt
out
and
sbbl
adc
imul
ljmp
dec
test
mov
add
add
idivl
jg
dec
andl
add
add
lcall
test
test
xchg
leave
lahf
popf
movb
xchg
mov
lods
aaa
push
cmp
imull
xor
adc
cmp
adc
shll
or
sbb
jl
inc
jle
pop
mov
lret
sub
fistpll
or
dec
out
push
sub
int
adc
jnp
mov
outsb
mov
mov
je
movl
pop
jmp
cld
in
jmp
sub
packuswb
andps
push
cld
mov
cmpsl
jae
inc
push
inc
daa
mov
scas
test
inc
js
cs
insl
ja
mov
fcmovnu
test
lcall
out
adcb
arpl
negl
dec
inc
push
push
push
mov
push
and
mov
push
mov
sub
enter
insb
mov
mov
dec
jbe
mov
je
mov
mov
pop
cmp
in
int3
pop
sti
xchg
pop
push
ss
inc
mov
insl
outsl
ror
testb
adc
popa
mov
cmp
dec
out
enter
out
dec
xchg
es
test
jge
xchg
ficomps
dec
or
gs
cmp
loop
xor
fucomi
cwtl
inc
fs
push
in
fwait
leave
lds
add
mov
jle
movsl
dec
mov
mov
and
rol
mov
jmp
pop
push
push
insl
test
mov
lock
lock
xor
cmp
mov
add
fldl
jge
sub
xchg
daa
inc
inc
aas
rorl
inc
add
push
inc
mov
adcb
jge
mov
sahf
add
add
jecxz
mov
inc
nop
jge
jle
add
std
add
add
adc
sbb
in
icebp
mov
sub
je
xchg
inc
mov
jmp
jo
notl
shl
mov
jmp
stos
adc
mov
into
es
push
jo
inc
jg
pushf
pop
scas
rclb
mov
xorl
psrlq
add
push
pop
or
jmp
jo
and
roll
outsb
je
cmp
sbb
test
cli
pop
mov
loopne
outsl
sub
mov
fisubrs
notl
push
add
outsl
sbb
sarl
aam
andl
aad
stc
cmp
jge
xchg
ret
xchg
xchg
mov
xor
aam
sbbb
lahf
or
adc
lahf
mov
into
add
push
adc
inc
aaa
mov
or
pushf
es
mov
cmp
rclb
mov
cld
cmpsb
bound
test
aas
inc
clc
xchg
xor
lock
or
div
andb
jg
xor
nop
jbe
push
arpl
lahf
std
sub
cmp
adc
addb
mov
popa
lods
sbb
pop
adc
and
rcr
mov
mov
notl
push
fsubl
xor
xor
inc
scas
xor
mov
int3
cli
imul
ficoms
popa
daa
stos
xchg
mov
aad
les
mov
or
push
or
or
movsl
pop
cmpsl
mov
pop
popf
mov
loop
sub
out
mov
leave
adc
xor
rclb
std
mov
imull
jle
adc
push
dec
addb
pop
mov
sub
cltd
xor
std
jnp
insl
fcoms
sbb
cmc
js
sub
fxch
inc
fsubp
arpl
add
mov
fcompl
or
pop
mov
add
std
add
add
xchg
pop
clc
out
fmul
rolb
test
mov
cmp
test
setge
mov
jb
ss
mov
jae
push
mov
aam
push
cltd
or
dec
test
repnz
stc
pusha
pop
mov
test
and
sub
cli
out
sub
or
push
push
push
lea
test
jo
dec
xchg
mull
lods
mov
xchg
fisttpll
sub
pop
test
add
sahf
inc
dec
xchg
out
jmp
xor
mov
ss
std
push
add
sbb
sti
push
sbb
cmp
lds
pop
jmp
std
test
les
js
xchg
push
scas
mov
push
test
sub
das
mov
cmc
test
mov
mov
mov
jb
push
cmp
add
pop
bound
xchg
sbb
jns
push
mov
push
jecxz
mov
add
fwait
lds
xor
jns
mov
out
cmpsl
mov
or
int
mov
fwait
imulb
in
lret
fildl
dec
sub
xchg
sti
mov
cli
or
in
in
das
jae
dec
xor
fisttps
fsubrl
xor
dec
es
rcpps
mov
inc
nop
je
fwait
jp
pop
call
and
loope
pop
sub
icebp
popf
cmc
cmp
inc
movsb
mov
push
jo
dec
xor
test
sahf
movsb
mov
adc
lds
int
movb
xchg
mov
cs
mov
mov
mov
je
or
xor
repz
mov
in
push
mov
inc
sbb
mov
hlt
xor
enter
out
les
jb
mov
xor
nop
xor
add
inc
inc
stos
ljmp
push
lods
mov
add
inc
stos
pop
sbb
cli
inc
cli
mov
sahf
hlt
or
add
std
add
add
lret
xor
push
jle
gs
pop
mov
outsl
sbb
outsb
rcrb
sar
sti
ror
data16
jge
xor
jnp
and
outsb
pop
in
xchg
xchg
clc
clc
sbb
xor
data16
std
xlat
mov
pop
outsb
stos
lods
repnz
dec
dec
cmp
in
mov
xchg
movsb
out
mov
mov
sub
jb
daa
pop
das
ficoml
or
push
popf
or
jmp
adc
jecxz
cmpsl
push
in
adc
enter
jns
pop
and
shl
pushf
mov
or
mov
je
lods
mov
dec
xchg
push
cs
and
in
addr16
mov
xchg
aad
pusha
sbb
lea
or
mov
and
adc
stos
mov
jmp
lahf
mov
scas
repnz
scas
jo
sahf
inc
dec
das
xor
inc
js
mov
jmp
fs
push
pop
cmp
rcr
or
ret
xor
lods
push
xor
lods
test
mov
out
ret
cli
int3
repz
clc
lret
lds
inc
mov
inc
ljmp
sbb
lock
mov
sahf
push
ds
lods
push
add
in
stos
jbe
sub
popa
xor
jns
jnp
jbe
into
pop
jge
or
ja
cli
pop
push
out
sub
negl
movsb
ret
inc
add
sub
sbb
mov
shr
adc
es
dec
push
jp
pusha
push
lea
repz
dec
fldt
add
xchg
mov
int
stos
xor
mov
cmc
out
test
mov
push
movsl
fstpt
jg
add
add
ja
out
push
lahf
add
cmpb
add
std
add
add
cwtl
arpl
rorl
test
xorl
ljmp
stos
fidivrs
loop
adc
movsl
int3
insl
lfs
fiadds
popa
outsb
lcall
inc
stc
mov
scas
je
stc
dec
inc
in
mov
dec
stos
push
pushl
rclb
movsl
fcoml
aaa
sub
pop
mov
xor
pop
adc
pop
cltd
mov
jmp
ds
jb
leave
hlt
adc
movsl
in
cmpsl
rcrl
sbb
cmp
pop
into
pop
sbb
rcrb
popa
mov
pop
sub
fwait
mov
sub
lea
jl
sub
jnp
sbb
inc
rorb
cmp
addr16
arpl
mov
mov
es
mov
aam
cli
lock
loope
dec
shrb
shl
jbe
arpl
adc
cmp
cld
test
mov
xor
and
dec
sbb
notb
adc
je
jnp
adc
lock
push
add
mov
mov
movsl
testl
mov
xor
sti
mov
cmpsl
push
xor
aam
daa
push
repz
in
mov
mov
or
jae
arpl
cmp
test
pusha
sar
jl
xchg
in
js
lock
int3
cmpsb
adc
push
into
in
outsl
jb
addr16
jge
jnp
sti
iret
push
jl
mov
lods
jmp
sbbb
and
imul
xchg
fwait
mov
lea
cs
lret
dec
int
bound
or
test
cld
call
icebp
leave
add
jns
outsl
cmp
jae
mov
pop
sbbb
dec
movsb
repz
orl
and
xor
lea
and
add
jmp
xchg
mov
js
push
dec
pop
and
addl
add
add
add
cli
rcll
jmp
pushf
ds
jb
add
std
add
add
push
fsubl
xor
jb
shl
cmc
xchg
fbstp
hlt
cmp
and
dec
and
ds
cmp
xchg
jo
or
lock
inc
leave
push
lea
mov
fstl
mov
imul
dec
push
jnp
je
in
notl
xor
incl
scas
ds
cs
jmp
scas
push
ja
xor
xchg
scas
mov
jno
adcl
dec
setge
jecxz
movsl
jne
push
mov
inc
mov
lods
iret
push
cmp
cmp
lea
data16
xchg
push
cmpsl
sbb
add
sub
les
dec
jb
ss
jmp
and
sub
aad
sub
imul
xchg
dec
push
mov
pop
fmull
jg
pop
decb
jge
addb
insl
mov
mov
sub
subb
add
call
inc
xchg
out
pop
xor
test
sub
fmuls
addl
dec
add
inc
add
es
lret
mov
add
xchg
inc
inc
add
repz
mov
in
sub
cmp
push
scas
add
add
imul
mov
mov
xchg
mov
cwtl
rcll
je
sti
xchg
fisubs
sbb
inc
fstpl
dec
xchg
aas
mov
mov
cmp
lcall
jne
loopne
xor
push
movsl
or
mov
sub
hlt
roll
add
mov
mov
imul
rcll
ret
movsb
rorl
xchg
dec
fistpll
das
mov
pop
scas
or
dec
shll
ret
out
mov
iret
negb
mov
cmc
mov
add
add
lret
push
enter
sbb
pop
mov
mov
imul
sarb
mov
mov
mov
adc
std
popl
jmp
jae
adc
dec
aaa
out
leave
fucom
ret
test
test
cltd
test
push
cmpsl
pop
mov
mov
ss
out
push
xorb
out
leave
and
sub
and
jmp
adc
mov
inc
xchg
xchg
mov
dec
jle
ret
xlat
add
xchg
xchg
dec
in
test
xchg
inc
sub
ja
inc
cmp
je
mov
jbe
cmp
scas
jae
push
gs
dec
jge
and
mov
pop
push
fwait
mov
sti
fs
or
mov
cmp
and
mov
out
aas
cmp
sbb
pop
cmpsb
decl
pop
mov
mov
ja
push
iret
fldcw
push
pop
sbb
rolb
and
sbb
fs
fwait
in
leave
sbb
fdivrs
mov
sti
cltd
sub
mov
inc
push
xor
pop
xor
mov
outsl
mov
es
push
lret
rorl
adc
mov
out
push
loop
jbe
mov
or
xlat
ficoms
fmul
lea
or
mov
lahf
xchg
aas
pop
rcrb
cli
mov
pusha
nop
jbe
jne
push
mov
push
and
adc
pusha
dec
in
ss
pop
popa
cld
pop
adc
stc
sbb
bnd
sbb
mov
repnz
js
add
std
xchg
repnz
popf
stos
push
mov
cmp
add
sbb
insb
daa
imul
shlb
fcompl
aam
loop
jmp
push
and
add
push
push
jnp
outsl
jno
dec
add
std
add
add
nop
xchg
xchg
movsl
shrl
sub
mov
clc
xor
pop
mov
sub
lods
adc
inc
sahf
add
sbb
and
cmp
je
out
push
daa
mov
add
xor
lods
test
cmp
bound
fidivl
cmpsb
pusha
push
mov
pop
test
lret
pop
aam
fcomps
mov
pusha
add
int3
addr16
pop
in
push
das
addr16
out
fimuls
cmp
insl
loope
xchg
fmull
cmp
sti
cld
xor
arpl
insl
scas
mov
mov
mov
mov
imul
mov
mov
jo
dec
push
scas
jbe
jecxz
pop
inc
add
pop
arpl
jo
dec
mov
push
or
add
xor
je
pop
in
testl
gs
mov
pop
insb
es
push
insb
sub
add
inc
lea
fwait
sbb
pop
js
subb
add
xor
arpl
mov
ljmp
clc
dec
ss
dec
addr16
mov
pop
jmp
das
arpl
in
jns
sub
push
js
test
mov
jb
sub
mov
mov
mov
ret
mov
xchg
cmpsl
dec
inc
stos
lret
loope
inc
aas
bound
cmp
imulb
push
cs
jp
jg
movsb
imul
mov
lret
or
adc
test
ss
jmp
popa
or
jnp
jmp
mov
sarl
xchg
pop
jmp
jmp
shll
adc
imul
push
cmp
cmp
and
out
pop
inc
add
add
lahf
and
xchg
mov
add
add
mov
stc
popf
ja
dec
shrb
add
std
add
add
cmpsl
xchg
data16
cmp
sahf
pop
push
adc
data16
xchg
adc
rcr
xchg
push
popa
sub
hlt
insl
mov
sbb
mov
fstpl
popa
push
adc
mov
bnd
arpl
stos
mov
ds
push
arpl
and
outsb
imul
imul
jmp
xor
popf
call
jnp
xchg
mov
sub
movsl
shlb
sub
pop
lret
sub
mov
pop
rcll
push
subb
outsb
movsl
loop
adc
push
mov
cmp
jecxz
push
inc
loop
inc
and
adc
je
jle
xor
jl
and
xor
mov
and
jmp
loop
in
pop
outsl
andb
ret
lods
jne
ret
pop
fsubl
pop
jmp
jp
or
fdivr
push
hlt
out
cmpsb
std
cmpsb
cmp
mov
push
mov
push
inc
sbb
mov
or
jle
scas
or
cmp
movsb
aas
push
push
decl
pop
and
mov
scas
adc
aam
loop
cmc
adc
mov
jb
loop
jp
jo
popf
stos
and
ds
daa
xor
xlat
lahf
sbb
inc
aad
bnd
xor
jae
aad
sti
arpl
xchg
pop
rcrb
pop
sub
xor
pushf
int3
dec
in
xlat
adcl
mov
xchg
and
cmp
mov
scas
dec
push
or
push
imul
sbb
cwtl
fwait
sbb
jo
adcb
jl
fsubs
mov
push
es
cmp
scas
insb
dec
sbb
adc
sarb
mov
jno
or
cld
dec
fisttps
aaa
or
repnz
sub
xor
in
cmp
stos
movsl
stos
test
add
jns
sbb
jge
and
dec
ds
mov
add
add
add
mov
cltd
push
pop
dec
jne
inc
and
lods
jb
mov
stc
sbb
in
mov
hlt
out
adcb
pusha
adc
in
sar
cmp
mov
push
cmpsl
out
les
pop
or
cmpsb
xchg
movsl
adc
mov
lock
push
test
and
pop
popa
das
out
loop
mov
test
or
pop
or
push
sbb
mov
mov
sub
jp
xor
sub
jmp
lret
test
add
jp
adc
push
out
mov
jo
add
stc
pusha
fsubrp
lods
push
mov
dec
push
dec
inc
es
dec
xor
pushf
leave
movl
add
pop
and
add
cwtl
cmp
insb
cmp
xor
scas
in
pop
jle
sbb
add
sbbl
mov
mov
pop
xor
push
cmp
xchg
cltd
sarl
push
mov
cli
pop
sub
mov
mov
ds
add
jl
cmpsb
sahf
mov
lods
cmp
or
pop
fs
jae
lods
in
repnz
fistl
popf
cs
fildl
sub
or
dec
outsl
jbe
mov
xor
xor
lock
emms
jp
sbb
out
cmp
fidivrl
pop
and
and
add
shr
shlb
jmp
jae
lds
insl
mov
and
mov
push
jne
and
outsb
cmp
jg
popf
and
jne
inc
push
test
mov
addl
call
dec
sti
test
push
popf
les
inc
das
xchg
inc
jbe
pop
ret
dec
cmc
pop
add
sub
mov
hlt
jg
mov
pop
movsb
add
sbb
and
mov
push
jecxz
add
pop
add
inc
fcmovnb
fstpl
arpl
call
add
add
add
test
sti
icebp
add
rcrb
add
jo
cmpsl
rorl
sbb
dec
push
nop
or
fstpt
sbb
aas
scas
mov
cmpsb
in
std
mov
daa
mov
mov
xchg
fnstenv
pop
add
push
loope
fists
pop
and
add
ljmp
xor
push
inc
div
cli
cmp
mov
sbb
inc
sqrtps
stc
nop
mov
fcmovne
add
mov
adc
shlb
call
cmp
jmp
les
rolb
push
lods
sub
pop
clc
push
sub
push
dec
xchg
push
mov
mov
aam
in
sub
insl
cmpsl
inc
test
mov
fwait
ja
jg
sbb
xchg
imul
es
jae
gs
sti
inc
cmp
mov
mov
inc
jl
stos
mov
insl
pop
jmp
cmp
test
test
cmpsb
data16
mov
dec
das
dec
nop
sub
shll
fwait
cmp
test
stc
lea
int3
dec
and
out
js
fwait
das
dec
jp
xchg
addr16
sub
movl
adc
pop
int
adc
push
mov
popf
pop
scas
add
lea
or
pop
cmp
sub
or
cltd
inc
add
pop
push
enter
sbb
sti
out
dec
insl
fwait
sahf
arpl
xor
cmp
dec
fstpt
or
dec
or
out
bound
cmp
xor
sti
fcmovnbe
lock
pusha
pop
negb
fcoml
xchg
fstps
add
jb
aad
aad
sbb
jnp
sarb
cli
add
push
aam
mov
cmc
cmp
jecxz
ja
mov
in
or
sbb
pushf
cli
mov
xchg
out
cltd
test
push
pusha
repnz
std
add
add
mov
test
push
cmp
and
push
insl
mov
mov
lcall
adc
ret
cmp
lcall
aam
scas
mov
ror
ja
inc
sub
mov
arpl
in
xor
sbb
pop
hlt
mov
push
jb
test
push
jb
lds
into
sahf
not
test
mov
fs
loop
rcrb
mov
test
fucomp
and
push
js
add
sub
adc
test
jge
cld
sbb
mov
clc
test
fs
jne
add
sub
cld
inc
add
xchg
cmc
repnz
rcrl
sbb
dec
jno
pop
lret
cmp
enter
xchg
iret
lods
in
jmp
insb
fcoml
mov
out
mov
xor
repz
stc
inc
lods
and
and
sbb
and
and
cltd
push
fcom
leave
out
movsb
pushf
inc
loop
in
or
mov
stc
xor
fmuls
mov
mov
aam
xor
cmp
add
mov
lods
mov
push
pop
xchg
test
out
xchg
pushf
jg
add
adc
cli
mov
xlat
xchg
sbb
loope
push
sub
lret
popf
mov
pop
jae
dec
sub
cmp
xchg
jl
xor
faddl
mov
sbb
int3
jecxz
push
mov
cmp
cmp
pop
aam
mov
aad
mov
pop
cltd
test
daa
imul
pop
push
mov
pop
mov
cmpsb
jnp
out
pop
aad
mov
mov
sbb
out
mov
lcall
leavew
and
movsl
mov
add
add
add
enter
lods
and
std
sub
movsb
les
fst
das
pop
cmp
mov
test
and
pop
dec
adc
jge
xlat
movsl
jg
push
in
jb
lock
sbb
sbb
jle
lret
in
mov
sub
pop
pop
mov
add
sbb
frstor
push
outsb
ror
loope
mov
xor
imul
ja
xchg
cmc
or
out
add
lds
inc
scas
loope
ja
sti
dec
loop
jl
xchg
xor
pushf
repnz
adc
cmpl
mov
fdivl
xor
lahf
jmp
ja
cmpsb
adcl
jno
pop
repz
xchg
mov
addr16
cli
xchg
jns
mov
inc
shlb
out
adc
sub
movsl
pop
add
lret
pusha
add
adc
pop
xor
sti
insl
push
rcll
push
outsl
insl
aam
xchg
loopne
ss
or
pop
imulb
xor
fistpl
push
xorb
dec
outsl
pop
lea
adc
arpl
sbb
das
outsl
mov
xchg
xchg
mov
inc
loope
mov
repnz
adc
inc
jae
mov
aam
cmp
jnp
movsb
js
xchg
iret
sub
dec
or
dec
test
insl
pop
stos
or
mov
xchg
pop
jmp
cmpsb
adc
lods
pop
pop
pop
cwtl
mov
iret
mov
xchg
jo
mov
and
cmp
aaa
and
inc
push
sub
mov
xor
stos
aam
fists
test
xor
sahf
push
rolb
adc
cmp
fcomps
dec
ret
bound
add
sub
outsb
add
stos
dec
dec
mov
pop
sbb
adc
js
jge
push
out
jmp
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
xor
pop
pop
testb
std
add
add
ds
lea
dec
pusha
aaa
cmp
jp
add
mov
push
and
and
mov
imul
adc
push
lcall
cmp
and
xchg
cli
in
iret
dec
lret
mov
mov
and
gs
je
sub
xchg
pusha
scas
xchg
imul
and
push
iret
and
jbe
jnp
inc
xor
lahf
jmp
mov
mov
pop
add
mov
loope
or
jmp
or
addr16
sahf
clc
push
jg
cmpsl
ret
or
mov
mov
sbb
and
aad
add
sbb
adc
je
inc
sub
leave
xchg
inc
cmp
lcall
shlb
xchg
clc
je
pop
and
xor
pop
mov
cmpl
roll
pop
jns
shlb
sbb
dec
xor
les
push
divl
xchg
pop
jo
test
xor
push
xor
loop
pop
gs
mov
mov
adc
xchg
cmc
mov
sbb
shl
mov
test
add
fadd
fstpl
bound
xchg
cmpsl
cwtl
dec
jno
mov
dec
fmuls
and
dec
testl
lea
aas
inc
shrb
daa
adc
fbstp
add
rcrb
int3
shl
insl
and
push
add
std
in
jno
pop
adc
push
movsl
adc
cli
pop
daa
jne
jge
sbb
pop
sahf
test
cmp
orl
push
dec
pop
popf
insb
mov
xchg
fistps
lock
fwait
add
cmp
xchg
arpl
mov
and
ret
sub
cmpsl
in
stc
push
pop
mov
movsl
inc
and
and
movb
add
std
cmp
stc
jl
stc
jne
and
add
add
add
mov
sbb
lahf
adc
mov
dec
push
movsl
in
mov
dec
loop
or
loopne
cmpsb
jae
fcomip
cmp
jecxz
xchg
push
sub
ret
sahf
jmp
loop
inc
mov
or
inc
hlt
mov
int
inc
ret
fcompl
jge
push
test
out
and
aas
cmp
push
lds
ljmp
enter
lods
lods
cmp
hlt
inc
fs
mov
cmp
pop
shl
mov
dec
sbb
test
fs
jne
mov
sahf
ror
jecxz
dec
cmp
mov
dec
cmc
cmp
movsb
loop
xchg
push
mov
cmpsb
int
fiaddl
iret
and
inc
lea
call
and
bound
das
cmp
ljmp
pushf
outsl
fs
or
nop
adcb
adc
movsb
mov
jge
cmp
or
fucom
adc
push
les
jp
in
cmc
push
dec
add
call
cmc
gs
mov
popf
xchg
mov
lds
cld
jbe
or
loope
mov
cmp
arpl
out
hlt
scas
inc
xlat
xor
lea
cs
mov
daa
js
push
ljmp
fsubrl
push
pop
mov
push
loope
scas
mov
xchg
repnz
jb
enter
jae
subb
out
fsts
or
mov
call
xor
xchg
int
dec
shrl
scas
lret
sub
movsb
mov
mov
add
shlb
btr
or
daa
and
and
cmp
icebp
sbb
add
xlat
jne
loop
scas
test
lcall
lds
clc
sbb
add
