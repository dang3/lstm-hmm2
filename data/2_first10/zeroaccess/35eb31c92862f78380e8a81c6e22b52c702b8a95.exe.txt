push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
loopne
jb
push
push
push
sub
push
push
sbb
scas
fdivrl
inc
mov
push
popf
inc
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
ret
cmpsb
push
mov
repnz
test
jae
cmp
outsb
jg
addr16
mov
dec
mov
shl
lret
inc
mov
inc
sbb
adc
xor
push
pop
adc
outsb
gs
rolb
jne
jge
xchg
in
dec
aam
dec
rcll
pop
aaa
ss
orl
and
push
cmpl
sti
lods
test
sbb
or
cmp
or
mov
cmp
fisubrs
clc
add
cwtl
push
int3
repnz
fs
push
shlb
pushf
pop
xchg
push
inc
xchg
cwtl
in
jmp
mov
push
pop
or
dec
and
rcr
mov
push
int
outsl
adc
mov
pop
pop
sub
mov
lahf
lods
mov
push
inc
mov
popa
insl
ja
adc
mov
and
orb
test
cli
cwtl
adc
fcmovnbe
xchg
out
add
push
jbe
xchg
jne
aam
mov
shll
nop
les
mov
xor
lret
cmpsl
pop
rcl
sbb
dec
dec
aas
pop
out
cmp
adc
loopne
jo
lahf
push
loop
mov
lods
js
cmp
ds
push
push
aas
hlt
lcall
push
imull
loope
cmp
lods
pop
inc
push
fmuls
sbb
enter
clc
sub
adc
sub
leave
lods
and
je
fbstp
xchg
das
scas
or
jg
decl
adc
or
add
icebp
sub
or
repz
aaa
andb
or
bound
jns
into
sub
lahf
fdivrl
xor
dec
int
push
imul
push
fwait
and
outsb
cmp
jae
pop
jmp
inc
adc
mov
cmp
enter
aaa
and
pop
pop
shlb
jl
dec
sub
push
pop
mov
pop
jg
cmp
xor
clc
dec
jbe
lods
pushf
or
test
cli
inc
xor
sub
pushf
inc
sbb
pop
sub
or
mov
jge
sbb
out
inc
sub
xor
jp
mov
add
pop
cltd
jle
and
insl
ja
push
out
mov
ss
sub
inc
cmp
or
inc
lods
mov
jae
sbb
mov
mov
cwtl
inc
roll
jle
lcall
xchg
xor
push
incl
jo
outsl
cmp
in
insb
lcall
pop
adc
std
imul
stos
orl
mov
sub
or
ret
mov
pop
add
sub
push
popa
stos
lret
test
add
push
hlt
fisubs
pop
popf
mov
lcall
sbb
mov
insb
stc
dec
xchg
xchg
loopne
hlt
mov
bound
rclb
out
enter
out
into
sarb
cmpl
dec
out
test
shlb
pusha
jecxz
loopne
jmp
and
and
mov
sub
sbb
fst
cmc
fwait
pusha
mov
lea
inc
inc
mov
mov
sbb
sub
or
xchg
leave
mov
cmp
pop
mov
int3
xchg
lds
in
loop
dec
jno
xchg
mov
out
cmp
fimull
stos
int3
lds
fs
fsubrl
cld
cwtl
xchg
push
dec
sub
adc
adc
pusha
addr16
mov
sbb
adc
mov
or
int3
rcr
push
push
fbstp
int
jmp
rcrb
push
inc
xchg
mov
popf
test
add
lock
stc
je
iret
or
iret
push
gs
nop
inc
ja
in
int3
jmp
test
fstl
das
sub
cmpsl
pop
mov
xchg
loopne,pn
je
js
loop
dec
xor
jb
mov
dec
xchg
cwtl
mov
ret
pop
push
rclb
push
lret
idivl
jl
xchg
push
sub
fsin
adc
xchg
sub
sbb
gs
mov
in
mov
std
sahf
or
mov
mov
push
addr16
xor
outsb
inc
out
fwait
sub
mov
stos
and
scas
jp
mov
loopne
jbe
inc
shl
mov
jbe
mov
jl
stc
xchg
les
sub
out
mov
fldcw
fs
ret
sub
lahf
adc
jle
js
add
inc
ljmp
push
aas
mov
jmp
mov
xchg
push
inc
jo
dec
insl
fs
fisubrl
out
jne
insb
ret
inc
push
aas
dec
push
xchg
dec
xor
push
rolb
adc
cmp
lds
mov
adc
mov
out
fldl
notl
or
ss
cmp
or
mov
pop
dec
cmp
loope
imul
out
int
shll
bound
add
fucomp
xchg
mov
mov
fldt
mov
inc
mov
push
sub
stos
cmp
mov
mov
pop
push
stos
lds
aad
xlat
push
or
mov
sub
data16
cmpsl
popa
test
push
aaa
adc
lret
into
aas
into
cmp
mov
and
fsts
fisttpll
mov
cmpl
pop
leave
xchg
push
es
pop
sbb
pop
lea
cmp
push
daa
dec
cmp
insl
movsl
sbb
std
icebp
stos
push
popf
dec
jecxz
xchg
stos
fwait
addr16
neg
aas
xor
mov
dec
sub
popf
pusha
jno
sub
mov
out
and
outsl
add
lcall
xor
aas
cmc
aam
pop
das
lcall
push
mov
dec
or
push
imulb
push
inc
pop
inc
lods
fisttps
mov
add
rorb
xchg
pop
mov
push
cmp
cmpsb
je
in
jae
addr16
add
push
inc
mov
fcoms
sub
arpl
loopne
mov
sbb
cmovle
xor
mov
mov
xor
and
lret
push
mov
addl
or
push
and
push
pusha
cmpsl
testl
push
or
pop
cli
fidivrl
ret
leave
push
xor
dec
jl
test
movsb
mov
call
inc
inc
and
cmpl
mov
jmp
adc
outsl
push
test
pop
jle
lcall
mov
sub
cmp
stc
jecxz
ret
lea
mov
loope
xchg
push
rcl
in
lds
xchg
mov
imul
sbb
inc
addl
dec
jnp
jle
icebp
rcrl
inc
push
sub
dec
outsb
fs
rcll
lret
jb
and
pusha
lds
mov
call
sbb
fstpt
push
lea
into
xchg
dec
pop
xchg
inc
cmc
cmp
jge
mov
mov
sub
ljmp
sub
call
mov
in
push
lahf
xchg
jecxz
movsb
fdivl
or
cmp
daa
cltd
jge
sbb
jl
inc
popf
or
xchg
movsl
lcall
stos
data16
jno
sbb
fsubrl
in
outsl
inc
orb
daa
hlt
push
push
push
lret
ret
jne
fdiv
in
xor
shll
push
add
sub
push
pop
push
push
sbb
leave
pop
mov
mov
cmp
mov
mov
ja
push
xor
adc
sub
sub
pusha
xchg
cli
cwtl
fs
mov
xor
mov
jge
cmp
nop
ljmp
scas
sbb
clc
orl
pop
inc
push
xor
stos
xlat
xchg
pop
cld
aad
cmpsb
and
and
inc
ds
cmc
push
jns
vcvtsd2ss
pop
xchg
test
wbinvd
mov
scas
sahf
inc
in
cmp
mov
rclb
inc
fwait
lea
pop
jp
aam
jae
stc
cld
cmp
mov
add
adc
call
sbb
add
mov
sbb
or
pop
out
and
push
xlat
aad
mov
loop
fildl
dec
shr
aas
out
das
imul
pop
fnstcw
and
cmp
cwtl
icebp
in
mov
into
fadds
add
aas
iret
jp
dec
fcomps
cmp
ja
cld
icebp
in
push
xor
inc
inc
push
xor
pop
incl
fwait
xor
subb
ja
mov
push
out
pushf
repz
rcrb
inc
jmp
sbb
mov
push
adc
mov
in
jge
or
cwtl
adc
insb
in
rol
out
xor
sbb
pop
daa
movsl
scas
adc
aad
inc
cmp
and
cmp
test
pop
fwait
cwtl
lock
adc
push
inc
mov
jbe
mov
sahf
es
sar
adc
dec
loop
cmc
pop
test
and
add
xchg
push
mov
imul
jb
jg
pusha
ja
pop
pop
ljmp
jns
push
xchg
andl
lcall
add
mov
mov
mov
dec
xchg
sbb
push
dec
and
dec
dec
imul
pusha
sbb
mov
add
xorl
dec
pop
aas
adc
in
aad
iret
lds
mov
call
fdiv
insl
add
mov
xorb
jb
test
or
bound
jmp
jge
push
arpl
int
add
pop
in
sbb
ret
cmp
nop
shl
int3
and
popf
incb
call
out
enter
popf
aad
push
jne
ja
sar
mov
ss
adc
add
stc
cli
adc
mov
cli
xorw
and
mov
inc
loope
mov
jmp
popa
jns
jbe
pop
call
mov
sub
addr16
inc
inc
mov
push
nop
scas
adc
mov
mov
fwait
xor
mov
add
popa
sub
jne
jp
sbb
out
or
lahf
jg
mov
xchg
and
int3
out
in
lods
push
ds
pop
arpl
aaa
pop
pop
xchg
add
inc
or
lcall
test
cmp
test
outsb
lret
das
repnz
cld
cmp
dec
mov
lret
shll
mov
addr16
add
mov
and
pop
mov
insb
cmc
xchg
sub
jae
insl
pop
cmpb
push
push
and
lea
dec
sbb
or
iret
call
jne
or
pop
sub
out
mov
lcall
arpl
mov
mov
mov
mov
scas
adc
push
mov
inc
xchg
add
stc
mov
popf
jl
pop
adc
xor
pop
xor
cli
dec
loopne
sub
mov
clc
jbe
cltd
addr16
insl
xor
mov
and
test
mov
cld
and
imul
pop
ja
xchg
jecxz
mov
and
lcall
clc
lahf
sub
xor
dec
loop
xor
nop
push
pop
mov
push
jne
mov
adcl
add
scas
dec
lcall
lahf
in
mov
dec
insl
ja
push
xchg
dec
aam
or
jecxz
dec
push
subl
lcall
cmp
fildll
push
mov
xchg
insb
aam
or
sub
clc
roll
imul
pop
jmp
push
shlb
mov
or
test
cmp
cs
movsb
xor
xchg
imul
les
and
jp
dec
push
adc
and
xchg
mov
ja
outsl
push
fsub
cmp
lods
jo
push
fs
jmp
aaa
mov
andb
pop
xchg
xor
dec
stos
xor
lds
loop
xlat
sub
movsl
cmp
mov
fs
scas
inc
imul
fisttpll
push
idiv
out
mov
mov
inc
sub
lods
mov
mov
test
cltd
stc
scas
imul
icebp
out
test
sub
push
ljmp
lods
mov
pushf
daa
ds
lcall
in
xor
lcall
mov
xlat
adc
shrl
popa
adc
popa
adcl
push
loop
je
mov
cmp
mov
sub
add
cs
inc
adc
mov
jns
stos
out
pusha
subb
adc
xor
movsl
xchg
push
ljmp
test
pop
loop
mov
mov
push
das
push
stos
cmpsl
aam
add
cmp
push
lcall
jnp
mov
jl
push
add
mov
fadds
mov
jbe
lock
stos
sub
into
cli
notb
add
shll
lods
data16
iret
aam
mov
data16
add
push
cmpsb
mov
or
fisttpl
mov
sti
cmpsl
cs
push
movsb
inc
dec
push
out
sbb
pushf
adc
and
out
mov
xor
aaa
cwtl
sbb
push
push
xor
js
outsb
stos
push
adc
movsb
dec
jp
pusha
aam
and
adc
cmc
fldenv
xor
out
sub
pop
adc
iret
clc
mov
lock
xchg
je,pn
or
pusha
das
pop
or
push
mov
sbb
fcomip
jbe
pop
cmpsl
push
movsb
jge
dec
les
lods
jl
jg
lds
mov
movsb
shll
pushf
ret
mov
dec
call
int
ss
shl
mov
pusha
jg
imul
and
pusha
push
push
and
lret
inc
gs
test
imul
mov
push
add
aaa
pop
fwait
or
pop
jbe
cld
cmovle
sub
or
pop
shrb
lahf
push
rcll
push
ljmp
out
xor
mov
dec
add
sti
ret
pop
and
xchg
jmp
push
adc
xor
outsb
mov
clc
rorb
sbb
mov
stos
and
inc
sub
leave
sar
jg
stc
inc
lods
daa
pop
aad
fs
ljmp
sarb
pop
cmp
dec
xchg
add
push
add
mov
inc
mov
and
sbb
adc
scas
mov
lret
xor
pop
outsb
movb
pusha
fs
push
pop
mov
inc
pushl
jns
nop
sub
mov
test
mov
jmp
push
cs
xchg
shrb
cmp
mov
dec
fcmovbe
jp
pop
mov
outsb
insl
dec
mov
enter
popa
ret
xlat
pop
into
mov
movsb
enter
cli
popf
aam
sub
mov
lods
jecxz
jp
enter
jg
add
movsb
pop
dec
idivb
aam
insb
lahf
push
in
aaa
cmp
mov
popf
xor
xchg
add
icebp
mov
cs
dec
int3
test
sbb
or
js
mov
lock
pop
std
in
xlat
push
mov
xor
in
bound
and
popa
pop
rcl
jg
sbb
out
enter
push
add
jnp
rcll
jne
fstl
and
mov
mov
test
and
jno
in
andb
loopne
push
mov
inc
xchg
push
fs
js
shlb
cli
cmpsl
mov
push
lods
mov
mov
adc
fcompl
push
mov
movsl
add
incl
pop
mov
cmp
aas
push
pop
xchg
stos
sbb
sbb
nop
jg
jne
add
xchg
lcall
icebp
push
xchg
pop
into
scas
pop
lds
dec
cmpsb
fdivrs
add
arpl
nop
lods
inc
notl
mov
xchg
rolb
sub
pop
pop
andl
push
jecxz
mov
loop
cs
bound
xchg
push
push
out
scas
push
cmpsb
cli
mov
sub
dec
pusha
cld
sarb
mov
data16
aad
jmp
and
cltd
push
xchg
aad
mov
aam
sub
icebp
insl
insl
xor
or
loop
jge
jmp
cwtl
movsb
dec
jno
dec
and
lret
mov
cmpsl
inc
sbb
jg
add
mov
jbe
fcmovnu
add
ds
inc
lods
insl
mov
lock
add
jecxz
pop
dec
inc
mov
lret
adc
repnz
sbb
lods
mov
imul
xchg
mov
arpl
imul
loopne
fidivrl
ds
lods
je
add
mov
ss
fdiv
arpl
inc
xor
call
es
jp
mov
or
inc
js
sub
pop
jmp
mov
push
and
aam
rcll
jbe
fcmovnu
idiv
pop
mov
mov
sbbl
fstps
jecxz
push
lea
scas
rcll
sub
jnp
inc
fsts
js
mov
testb
mov
pop
sbb
repz
mulb
sub
jmp
test
jle
out
push
imulb
cmp
movsb
stos
xlat
mov
sub
sbb
test
xchg
out
in
or
push
push
mov
lret
add
xlat
stos
lds
and
inc
dec
das
inc
test
test
jns
cli
push
iret
fld
aad
inc
cmp
and
xor
adc
mov
int
jecxz
or
imul
jmp
lcall
ljmp
popf
fcmovnu
loope
aas
lcall
mov
sbb
xchg
dec
lcall
push
push
push
cmp
test
pop
arpl
fimuls
ror
xor
ljmp
sub
jnp
xchg
pop
lret
fld
aad
xchg
test
jne
jns
inc
ja
xchg
rcrb
js
jg
pushf
mov
outsb
mov
pusha
inc
inc
std
mov
inc
cmp
mov
dec
icebp
adc
loop
xchg
inc
add
mov
or
mov
push
sbb
test
pop
xor
adc
inc
xchg
cmpsb
lock
rcl
jnp
popa
jns
fbstp
lahf
test
push
adc
in
cmc
adc
jbe
cmpsb
scas
subb
ret
loop
filds
xor
mov
cli
sti
scas
popa
in
push
mov
push
daa
pusha
jo
xor
fstl
pop
add
jl
pop
loope
inc
sub
lods
xchg
cmpsl
inc
sbb
sub
fisttpll
ret
mov
adc
xchg
sbb
imul
xor
mov
jbe
sbb
dec
xor
inc
sbb
pop
leave
adc
je
inc
dec
shll
xchg
outsl
xchg
pushf
xlat
sbb
or
mov
sbb
add
frstor
js
sarb
sub
imulb
push
fwait
and
rcrb
addl
and
sub
xor
inc
scas
lea
adc
aad
cli
repnz
out
push
fldcw
jg
shrb
mov
jo
push
cmpsb
cmpsb
scas
mov
jns
xchg
cltd
inc
and
xchg
gs
fists
mov
out
int3
out
sub
pop
loop
dec
hlt
adc
hlt
fldln2
cli
jne
sbb
and
leave
test
cltd
in
add
ret
out
test
mov
daa
mov
mov
xchg
mov
nop
and
addr16
push
scas
xor
aaa
add
lret
mov
lcall
clc
xchg
mov
lea
test
divb
outsb
or
xorl
outsb
cmp
pop
add
xchg
ss
test
aas
dec
adc
pop
mov
xor
mov
orl
dec
inc
inc
sub
xchg
out
push
call
mov
loop
xor
adc
adc
jge
push
push
lcall
lcall
pop
add
les
fistpl
pusha
cmp
shlb
xchg
das
jne
or
pop
adc
out
xor
loope
dec
call
sub
cs
insb
cld
cmp
sbb
ss
dec
and
pop
dec
inc
cwtl
jns
sub
inc
dec
insb
mov
mov
sbb
imul
add
int
jmp
loope
push
fnstsw
add
dec
leave
push
add
fs
lcall
push
ror
sti
xor
into
lahf
inc
out
mov
dec
or
jmp
sbb
mov
stc
and
sahf
lcall
movsl
testl
mov
pop
pop
jb
xchg
scas
out
or
roll
push
sub
cmc
lret
pushf
dec
jmp
popa
test
mov
popl
jno
cmp
push
subb
push
xchg
sbb
aad
je
iret
xchg
or
pop
mov
fwait
jecxz
adc
out
inc
lret
test
xor
mov
rorl
inc
enter
xor
inc
fs
dec
clc
imul
jnp
rclb
sub
movsb
lret
into
push
data16
movsb
push
imul
dec
and
add
bnd
xchg
pop
fs
rcrb
fcomps
lret
cmp
fnstsw
adc
mov
jecxz
mov
adc
fnstenv
cli
dec
xchg
fdiv
adc
xor
cmpsl
sub
out
sub
xor
jo
or
ret
iret
lahf
dec
fnstcw
or
xor
negb
cltd
cmp
add
ffreep
ss
add
xor
sbb
sbb
sbb
movsl
sbb
mov
leave
cmpsb
shlb
mov
pop
sbb
xchg
sub
sti
add
fistps
dec
add
push
inc
mov
mov
out
mov
shrb
lret
aaa
jg
or
mov
loopne
enter
pusha
roll
cmpsb
pop
xchg
push
fwait
daa
sub
xchg
imul
jp
xor
sbb
leave
fwait
xchg
or
stos
cmp
in
jne
das
call
xchg
cwtl
or
pop
dec
popl
pop
insl
stos
sbb
fsubrs
adcl
scas
ss
push
aam
pop
cwtl
addr16
inc
fdivrp
pop
jae
jb
pop
inc
xchg
je
inc
pushf
mov
cli
lret
or
fcoml
cwtl
ss
sub
xor
mov
mov
or
lahf
test
inc
push
lahf
and
mov
mov
add
cmp
cltd
rclb
sbb
enter
das
mov
xchg
das
leave
popa
inc
mov
insl
mov
fmul
jl
scas
jg
hlt
cld
dec
scas
repz
fcmovb
pop
pop
push
sbb
cld
fwait
sbb
adc
adc
pop
cli
sub
or
fadds
test
arpl
dec
adc
movsl
adc
jl
ret
dec
cmp
pop
rcl
jbe
shr
jo
js
mov
xchg
and
ret
mov
adc
mov
xor
rorl
lahf
xor
inc
cmp
pop
cmpsl
xchg
inc
das
xor
iret
repnz
push
jecxz
push
lods
leave
pop
jecxz
sub
lcall
add
xlat
pop
ret
rclb
scas
inc
jecxz
or
and
sub
rcr
hlt
sub
and
inc
mov
jnp
mov
pop
movsl
adc
outsb
or
or
mov
push
ljmp
and
test
xchg
test
xchg
bound
notb
adc
dec
fcmovb
das
adcb
mov
mov
push
xchg
mov
push
test
sbb
dec
inc
in
enter
mov
push
inc
movsb
movsb
cmpsb
xchg
or
imul
pushf
and
mov
mov
out
insl
cltd
xchg
test
mov
dec
mov
clc
dec
mov
dec
inc
out
jg
add
mov
sbb
xchg
leave
shll
out
xchg
bound
scas
adc
decl
and
mov
xor
push
das
mov
gs
sub
xchg
xchg
int
mov
jne
pminub
fdivs
in
je
push
insb
shrb
jne
add
mov
icebp
out
add
mov
clc
mov
iret
aam
push
out
pmaxsw
xor
divb
add
in
out
lock
out
arpl
dec
jmp
xchg
rcr
js
push
into
fadds
jns
fsubrp
aaa
movsb
mov
jp
in
pop
mov
mov
in
push
ret
mov
ljmp
andb
cmp
scas
cmpsb
mov
shll
arpl
sbb
mov
gs
daa
push
mov
hlt
nop
lret
mov
xchg
test
xchg
push
fnstcw
xchg
fists
or
xchg
jns
movsl
add
std
ljmp
js
xor
fnsave
or
test
mov
jmp
sub
bound
xor
cmp
mov
adc
xchg
mov
insl
cs
movsb
push
loope
int
inc
inc
xor
insl
mov
mov
outsb
andb
js
inc
cs
aaa
mov
rcr
adc
outsb
jle
add
lock
test
or
and
mov
loop
ds
and
mov
cltd
inc
mov
popa
pop
xchg
inc
sbb
inc
lds
mov
fdivp
outsb
xchg
mov
lcall
mov
or
jb
push
jo
js
mov
scas
outsl
lcall
inc
mov
jnp
in
and
xor
fnstsw
cld
cs
dec
pusha
jg
scas
mov
push
repnz
jmp
cwtl
sub
mov
sub
fidivrs
enter
data16
pusha
mov
and
shlb
lahf
cld
sub
dec
lock
pop
add
fistps
pop
inc
bnd
mov
mov
hlt
out
add
push
add
test
pop
jne
xchg
xchg
jb
xor
pop
sub
lcall
scas
gs
sub
mov
nop
cmove
stos
in
cltd
cld
xchg
xchg
push
in
ret
xchg
pop
loope
push
fimuls
dec
repz
mov
jno
sbb
mov
aad
xchg
repz
cmp
and
xchg
in
cltd
and
ja
cmp
les
jmp
cmp
dec
mov
fimuls
leave
jmp
pop
in
or
sub
rcrb
mov
mov
mov
xor
jp
xchg
pop
sbb
shll
inc
lcall
mov
or
jo
repz
mov
push
dec
loopnew
fistpl
mov
dec
push
mov
mov
scas
xor
mov
inc
stos
out
fwait
sub
sbb
inc
jbe
sahf
push
clc
insb
fdivrl
call
lods
dec
push
sub
cmpsl
ret
ljmp
clc
xor
sarb
or
pop
push
ficompl
pop
push
mov
push
sbb
gs
sbb
inc
je
sub
lock
cmpsb
sbb
add
cs
imull
cld
das
pop
add
mov
mov
rolb
sbb
or
into
fdivl
and
push
pop
jo
test
outsl
jle
test
push
out
es
loopne
mov
repnz
jecxz
pop
push
add
lds
mov
lret
popa
mov
cli
cmp
imul
andb
sbb
jl
imul
mov
lahf
aas
lea
lahf
hlt
jmp
push
jns
nop
aad
jne
sbb
rcrl
cmp
mov
add
pop
rorl
rcll
push
mov
popa
out
pop
xor
ficoml
mov
cmp
add
xor
push
test
hlt
sbbl
push
outsb
mov
fsubl
lret
adc
push
arpl
lahf
dec
or
mov
cwtl
and
addr16
test
ljmp
imul
inc
adc
aas
scas
stos
cmp
out
jp
test
mov
vcvtpd2dqx
inc
add
scas
cs
arpl
adc
daa
jmp
std
mov
fcoms
loopne
cmp
push
jb
fcoms
pop
and
cmp
jge
mov
push
fildll
popf
inc
mov
in
gs
gs
and
mov
push
cmc
cmp
inc
mov
les
mulb
cmp
cmp
mov
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
inc
test
xlat
push
push
sub
push
push
rcl
pop
cmp
push
pop
out
iret
adc
rcrl
mov
mov
mov
and
xchg
xor
xchg
push
fdiv
scas
jno
jne
ss
dec
jge
div
iret
pop
cwtl
fistpll
inc
dec
dec
gs
pop
loopne
fwait
push
lahf
add
popf
shlb
std
aas
aaa
and
push
ljmp
jecxz,pn
push
mov
inc
push
sbb
aas
mov
loopne
leave
rclb
lods
mov
cmp
sbb
fbstp
hlt
xlat
outsl
cmp
loop
cmp
mov
popf
cmp
test
insb
dec
fwait
sub
dec
cmpsl
daa
divb
push
fwait
leave
xchg
fsubrp
subl
int3
inc
jmp
popa
mov
lods
xchg
cmp
sub
pop
push
pop
xor
js
andl
test
aad
repnz
lret
mov
cltd
xchg
or
lret
pop
fdivrl
clc
adc
pop
dec
aaa
cs
sub
stos
sbb
jge
arpl
push
mov
sarl
lods
push
in
sbb
js
add
movsl
nop
add
mov
lret
push
lcall
sbb
push
leave
xchg
lods
push
jge
add
sub
push
sar
and
adc
mov
ret
decb
insb
sub
out
adc
pop
ljmp
mov
inc
lods
xor
pop
dec
add
add
in
xor
xor
aam
enter
push
push
jbe
pop
adcl
sub
push
sbb
adc
test
push
in
es
inc
cmpsl
insb
lea
mov
adc
adc
jge
jne
in
mov
leave
popf
fmull
and
inc
in
push
mov
or
fwait
mov
sbb
xchg
jb
in
mov
sahf
hlt
mov
stos
lock
push
add
vpmulhw
out
lret
js
cmc
ljmp
jns
iret
in
dec
negb
sahf
sbb
je
mov
pop
sahf
aas
in
out
xchg
mov
into
push
pushl
jle
repnz
ds
aam
mov
mov
shlb
and
aam
scas
cmpsb
pop
js
sub
fsubrs
mov
add
xchg
and
sub
test
in
cli
test
jle
js
into
sbb
sbb
pop
lea
in
jne
leave
out
test
push
das
loope
pop
popf
or
mov
jp
add
out
sub
mov
xchg
decb
scas
sbb
insb
in
test
push
fistpll
adc
mov
jmp
lods
cmpsb
pop
xor
loopne
xor
cmp
fbld
shl
or
jno
in
mov
ss
lret
or
pop
dec
cmp
lcall
inc
lods
mov
cmp
adc
cwtl
imul
mov
mov
mov
aaa
test
lds
inc
test
inc
aad
sub
xchg
incl
mov
sti
pop
pop
js
in
pop
cmp
popf
fdivs
shr
mov
fisubl
fisubl
rol
out
xor
jb
lds
xchg
pop
lea
dec
cmp
repz
mov
push
iret
dec
aas
fwait
mov
ljmp
mov
movsb
sub
std
daa
mov
xor
repz
inc
out
mov
push
call
or
test
leave
js
cmp
mov
mov
sub
iret
or
add
mov
inc
mov
pop
arpl
xchg
fildl
inc
add
not
add
loop
add
repz
std
loopne
repz
add
inc
jno
pop
jno
hlt
imul
shrl
int
int
lret
add
aaa
inc
dec
push
cld
xor
in
loope
in
and
mov
jno
loope
push
adc
inc
jmp
imull
sahf
add
jge
pop
ljmp
mov
mov
ds
xlat
pop
mov
xchg
jno
pop
shll
cmpsb
nop
xchg
popa
push
mov
out
nop
jmp
mov
sbb
in
xorl
jle
sbb
fwait
gs
or
test
and
fisubs
and
ret
mov
roll
dec
outsl
sbb
sbb
sbb
out
mov
jns
mov
insb
int
outsl
pop
roll
shrb
divl
jbe
push
or
mov
dec
les
pushl
and
dec
sbb
lods
or
incl
jno
xchg
loop
add
xchg
mov
cmpsl
or
mov
add
xchg
mov
and
inc
adc
loope
adc
mov
and
loope
adc
mov
outsl
push
out
fsubl
leave
negb
aas
test
sub
sbb
mov
out
sub
lods
mov
jmp
adc
adc
pop
ret
shll
mov
pop
push
ljmp
leave
xchg
fisubrs
sub
shll
jbe
ficompl
pusha
xlat
outsb
imulb
ss
mov
xchg
pop
test
inc
test
ficomps
mov
mov
mov
sbb
repnz
cmp
jno
adc
frstor
push
aam
sbb
jmp
imul
out
out
ss
iret
loopne
outsb
hlt
add
xchg
and
inc
inc
ret
addr16
dec
daa
out
xchg
pop
inc
or
push
mov
mov
in
pop
xchg
add
cmpsb
int3
sbb
xor
fstp
ficomps
call
jg
mov
dec
mov
dec
xchg
bound
mov
inc
dec
sti
mov
lret
notb
lcall
loopne
hlt
and
sub
out
arpl
out
add
mov
xorb
jne
popf
add
loopne
push
jg
aam
out
outsb
pop
addl
push
mov
pop
push
cwtl
je
enter
inc
aad
inc
cmpsl
mov
dec
fldcw
sub
jne
jns
clc
in
mov
outsb
pop
push
mov
insb
jmp
inc
cmpsb
popf
sar
fsub
out
int
popa
mov
cld
dec
mov
mov
js
or
or
lds
push
mov
add
mov
mov
xchg
dec
mov
mov
mov
or
addr16
icebp
inc
into
or
shlb
add
mov
push
testb
mov
pop
pop
mov
fs
inc
push
fbstp
dec
mov
add
std
icebp
insl
mov
add
jae
dec
lret
jns
adc
cld
xor
dec
push
imul
aam
dec
arpl
mov
jne
fimull
mov
insb
sub
in
jp
inc
imul
cmpb
add
cmp
scas
adc
cmp
inc
fcmovnu
mov
popa
in
pop
add
rcll
push
dec
adc
in
sbb
clc
test
mov
into
adc
xor
stos
lahf
add
mov
jae
sarl
push
cmpsb
pop
and
inc
lods
icebp
inc
jns
cmpsb
adc
cmpl
push
mov
push
call
push
movsl
mov
divl
stc
inc
in
mov
js
sub
jl
mov
push
adc
out
cmp
pop
or
inc
jl
dec
int3
pop
scas
into
out
inc
dec
scas
cli
repz
adc
cwtl
sbb
adc
stos
xor
flds
cmp
or
push
lock
push
adc
roll
or
daa
jnp
jmp
mov
popa
rcl
xor
nop
mov
push
stos
test
clc
mov
int3
fs
sbb
jecxz
xchg
loope
mov
dec
mov
inc
aad
test
push
jmp
push
stos
sub
jl
shl
roll
lock
cmc
sbb
lds
add
push
aam
pop
mov
in
sbb
movsl
enter
push
int3
filds
lods
pop
fwait
or
and
adc
sti
dec
mov
sti
push
outsl
fisttpl
outsl
data16
mov
dec
push
adc
jo
jne
imul
pusha
pop
cmc
add
fiadds
or
fisubrs
clc
jl
mov
jbe
pop
outsb
push
out
jmp
xchg
rorl
gs
cmpxchg
cwtl
push
das
cmpb
mov
push
test
aam
in
push
sahf
ss
les
jno
out
call
jmp
and
jns,pt
sub
cmp
adc
repnz
movsl
mov
mov
mov
sub
xchg
adc
add
xor
mov
rcll
push
sub
out
das
nop
inc
ret
pop
rclb
inc
lret
pusha
int3
sub
loopne
clc
sub
mov
outsb
cli
int3
cmp
pop
push
cwtl
sbb
std
scas
lods
xchg
loopne
adc
xchg
push
out
mov
inc
mov
not
sbb
paddw
aaa
mov
or
jo
sbb
fwait
jne
sti
xchg
out
faddl
add
sti
arpl
mov
sub
pop
loopne
into
scas
add
sub
out
sbb
dec
pop
add
lea
sti
sub
call
sub
pop
fsubrl
jne
or
inc
insl
rep
outsb
loope
xchg
repz
sarb
stos
push
jmp
cmp
sbb
cmp
lret
inc
or
and
pop
push
paddq
sub
les
gs
add
adc
fdivs
out
xor
mov
inc
stos
and
fstl
test
dec
lds
idivl
mov
in
das
cmp
pop
inc
xor
fbstp
into
fxch
xchg
dec
scas
xchg
inc
or
test
repnz
push
pop
push
mov
and
mov
adc
aad
jno
iret
imul
sbb
shlb
pop
push
jne
loope
xchg
cmpsb
pop
pop
xchg
xchg
push
test
cltd
push
and
es
das
xchg
iret
mov
xlat
xor
and
mov
les
sbb
aaa
pushf
and
std
sbbl
out
iret
imul
cmp
pop
gs
or
daa
jmp
cmp
sub
je
in
or
mov
lods
and
cld
outsb
into
aas
lret
in
dec
aad
xchg
cmpsb
xor
outsl
mov
mov
xlat
push
sar
or
roll
mov
xor
mov
add
sub
fwait
mov
ficoml
and
loopne
aad
ret
cmpsl
jecxz
cmpsl
blcmsk
adc
inc
jo
pop
loope
xchg
mov
gs
in
addb
dec
or
pop
rol
movsl
fsubrs
daa
mov
and
mov
mov
sub
or
stc
arpl
nop
push
mov
test
cmp
fisubs
xor
bound
inc
bound
into
push
je
aaa
sahf
jnp
repz
add
sub
fmulp
dec
jne
stos
pusha
dec
cmp
add
ljmp
push
adc
push
push
lods
les
leave
jmp
adc
iret
pop
jae
not
fsubrs
pop
sbb
lret
dec
inc
mov
ss
fwait
insl
into
ja
cmp
mov
xorb
ror
popf
mov
xchg
mov
popa
cwtl
sub
jge
or
xor
xchg
lods
and
push
pushl
adc
rcrb
mov
mov
adc
mov
jg
out
jl
push
sbb
pop
fidivs
mov
jne
push
xchg
das
lret
xor
and
ja
testb
lret
rol
repz
cltd
test
sub
out
aaa
or
ret
ljmp
orl
popa
daa
sbb
cli
xchg
lods
rclb
xlat
xchg
in
fsubrp
imul
pop
aaa
dec
mov
ljmp
call
sub
out
inc
cld
push
ja
mov
es
pop
loopne
jecxz
les
ret
out
mov
fcomp
xor
fs
ljmpw
xorb
jmp
mov
cs
mov
movsl
cld
cmp
jns
pop
and
test
out
xlat
scas
mov
xor
mov
leave
and
jp
rcrb
mov
mov
or
mov
ljmp
lods
fcoml
dec
dec
cmpsl
jp
fnstcw
cmc
xor
sti
popa
icebp
or
aad
ss
clc
movsl
out
test
xor
add
mov
jl
shr
fcmovu
imul
sub
lcall
aad
repnz
das
jecxz
xor
pop
push
and
xor
jg
xor
pop
clc
pop
jo
xorl
cwtl
les
out
pop
ret
inc
mov
adc
push
rorb
push
mov
xor
pmullw
add
jnp
insl
in
movsb
xor
adc
shl
xlat
or
test
jg
pop
sbb
repz
out
push
push
sub
jle
lahf
xchg
jl
mov
maskmovq
testl
loop
and
ret
lods
aam
sbb
mov
and
pusha
pop
mov
pop
sti
jg
popa
paddusw
push
es
jl
bnd
inc
fildll
cld
and
push
cmpb
lds
ds
outsb
jnp
dec
aad
in
int3
push
mov
dec
sbb
jo
or
btr
lret
push
pop
or
mov
lret
out
jns
aas
push
fs
or
fs
or
outsl
fs
shlb
mov
ss
cwtl
push
xchg
repz
push
inc
lods
xor
and
rcll
cltd
and
jno
mov
inc
pop
out
sbb
aad
xor
test
xchg
dec
jmp
push
test
sub
mov
je
ja
sti
sub
dec
xor
jbe
mov
std
aam
aam
mov
ds
iret
lea
mov
mov
sub
mov
cwtl
in
push
xor
aaa
jns
adc
and
idivl
sti
and
adc
lret
sbb
movsb
mov
xor
ljmp
ds
fmul
mov
jbe
popf
push
aam
push
push
mov
cs
fidivl
pop
andb
push
lcall
xor
push
fisttpl
cmp
pop
out
jle
mov
lea
pop
mov
aam
pop
outsb
jbe
stos
sti
rcr
stc
cmp
inc
mov
adc
mov
insl
mov
or
or
xor
mov
dec
call
or
jae
in
lahf
ret
mov
mov
test
sahf
andb
sahf
loopne
fdivrl
movsb
nop
fwait
sbb
ljmp
adc
xrelease
imul
xlat
xor
lahf
cmpl
out
and
lock
cmp
int
shl
dec
jns
lods
xchg
xor
stos
lcall
mov
in
pop
inc
icebp
push
push
cmp
mov
mov
pop
lret
add
aad
mov
loope
decb
push
std
or
jne
sbb
imul
inc
cmc
xchg
iret
pop
jge
stc
jge
dec
fcompp
loope
or
es
push
push
icebp
pop
add
hlt
mov
jl
adc
push
xchg
push
ret
inc
into
cltd
in
cwtl
outsl
sbb
pushf
push
or
clc
or
pop
test
adc
jmp
test
aas
add
xchg
test
sbb
add
pop
or
pop
adc
dec
inc
dec
leave
jl
jmp
xor
push
in
iret
add
cltd
jmp
sub
add
xchg
sub
sub
gs
jmp
lret
push
subl
adc
dec
fildll
sbb
mov
addr16
dec
cmp
cwtl
fwait
gs
cld
pop
leave
arpl
dec
iret
cltd
cmpsb
cmp
jne
xor
mov
xchg
cmpsb
add
push
mov
xor
js
inc
push
stc
scas
push
jg
mov
gs
inc
sub
xchg
fcmovbe
loop
lret
insb
sbb
pop
xchg
mov
hlt
js
sti
adc
mov
in
cmp
lea
stos
adc
sbb
movl
shlb
lcall
inc
rclb
sbb
test
sar
mov
pusha
add
test
xor
ljmp
imul
mov
iret
sbb
dec
jmp
add
int3
push
stos
mov
or
lcall
xor
stos
pusha
popa
xor
cmp
ficoml
loopne
mov
aad
jp
enter
jp
les
shlb
pop
sub
or
cmp
xchg
add
sub
sub
nop
pop
jae
add
ljmp
cmovb
lahf
les
sub
loopne
rolb
int
in
xchg
xorb
inc
inc
sti
lds
icebp
add
cmc
testl
out
push
dec
hlt
push
ljmp
sbb
iret
push
mov
xor
add
jo
cltd
push
jmp
cwtl
jo
aad
mov
dec
and
jae
pop
into
lock
adc
push
jb
push
and
ljmp
jge
mov
insl
sbb
ljmp
mov
pop
lock
test
repnz
imul
sbb
out
jp
cmpsb
jno
stc
je
push
cmp
pop
or
inc
aam
fdivrs
pop
loop
lcall
mov
into
dec
push
xor
mov
cwtl
push
outsb
fdivrs
jne
xchg
int
adc
inc
lock
adc
inc
pop
push
andl
jmp
push
push
mov
sbb
cwtl
xchg
mov
sbb
add
inc
mov
mov
and
ss
insl
cli
dec
mov
adc
lret
and
mov
pop
shr
rorl
pop
push
dec
clc
sub
mov
test
in
sub
imul
mov
jge
mov
aaa
fdiv
fnstcw
mov
push
jne
pusha
lcall
dec
xor
inc
xchg
add
inc
xor
push
fidivs
mov
lcall
sbb
sbb
mov
shlb
mov
push
dec
add
sub
xorb
mov
in
cmpb
jecxz
lret
movb
orl
adc
movsb
aad
das
pop
and
dec
jnp
pushf
mov
incb
mov
pop
xchg
mov
mov
xchg
cmpsl
mov
cmpsb
in
ja
mov
sbb
mov
insb
mov
ds
test
sub
adc
mov
in
cmp
jne
daa
je
cltd
addps
jp
fisubs
leave
idivb
lock
jmp
test
cmp
lret
push
cmp
aam
inc
xchg
enter
sub
setns
push
pusha
mov
in
dec
mov
inc
cmovo
ja
popa
add
pop
push
mov
test
jbe
incb
cwtl
adc
sub
mov
add
pop
pop
sarl
mov
sub
adc
shlb
lock
cltd
mov
cltd
test
lret
int
aaa
mov
lret
test
xchg
pop
nop
pop
fs
lods
pop
xor
pop
add
or
jge
inc
test
cmp
repnz
pop
mov
xchg
loop
sti
cmp
xor
pop
scas
dec
or
lods
in
sub
xor
loopne
fcoms
cli
sbb
stos
jnp
jns
inc
or
repz
jmp
mov
pop
mov
inc
lahf
mov
push
and
and
mov
jecxz
js
les
ljmp
jg
pusha
stos
push
push
or
mov
inc
add
insb
pop
sbb
loope
adc
rcrl
es
popa
adc
add
jge
cmc
ja
adc
daa
out
je
std
shrl
mov
push
push
loope
test
std
mov
push
shl
pop
lods
call
repnz
cmp
xchg
fdivs
jb
jmp
or
sarb
jo
mov
data16
push
dec
xchg
arpl
fstpl
inc
arpl
popf
stc
rorb
addb
xchg
or
icebp
fsubs
stos
daa
pop
mov
xchg
cmp
cs
loopne
popf
movsb
xor
mov
xchg
xlat
or
push
icebp
jbe
mov
rorb
cmp
push
sub
cmp
int
cmp
pop
sbb
fucomp
rcl
add
xchg
jg
jb
in
mov
lods
mov
sbb
mov
loopne
cmp
scas
jae
lcall
imul
int
aad
movsb
adc
jnp
fidivrl
das
int3
xchg
call
movsl
cmpsb
cmp
enter
inc
pop
fdivrs
ja
jmp
dec
dec
xor
ja
xor
push
in
push
inc
adc
fidivrs
inc
jnp
mov
adc
aaa
test
cmpb
pushf
sahf
inc
lcall
xchg
call
aas
adc
sbb
cmp
sub
int3
pop
push
sub
inc
daa
add
dec
mov
pop
sbb
mov
cld
push
mov
jae
mov
movsb
pop
shrl
xor
push
dec
jae
rclb
inc
jle
mov
adc
or
aaa
pop
dec
push
inc
setle
jmp
add
test
test
stos
movsb
or
mov
test
mov
push
mov
leave
ficoms
in
pop
les
inc
jmp
loop
cmp
push
xchg
popa
inc
xlat
divb
pop
sub
push
inc
pusha
movsb
lfs
mov
mov
cs
leave
and
mov
dec
add
pushf
jo
and
xchg
iret
jmp
loopne
nop
sbbl
fcmovb
pop
sub
ss
xchg
fdivs
jecxz
pop
inc
dec
in
mov
or
sbb
pmuludq
lods
push
xchg
jno
cltd
lods
mov
and
push
jne
xchg
jecxz
loopne
mov
lock
dec
shlb
inc
daa
clc
push
outsb
movsb
div
mov
xor
call
cmpsb
stos
adc
dec
pop
into
inc
mov
jnp
jmp
outsl
and
popf
dec
and
mulb
push
cli
sbb
mov
out
mov
xchg
daa
push
pop
cmpsl
movsb
dec
repnz
pushf
xchg
je
adcb
pop
sti
clc
cmp
and
inc
or
sbb
cmpl
jnp
push
mov
icebp
or
jecxz
insl
mov
adc
in
cld
sbb
or
out
dec
pop
mov
sbb
arpl
jae
mov
daa
data16
mov
push
movsl
inc
test
add
fs
jecxz
add
aam
mov
lock
mov
dec
enter
pop
aas
adc
jp
xchg
push
and
sub
aas
push
dec
mov
mov
or
push
test
adcl
sub
es
cmp
dec
mov
add
xor
js,pn
fdivr
xchg
sub
xor
sti
insl
fwait
dec
lock
push
xchg
in
test
push
xor
xchg
int
add
daa
repnz
pop
cmp
ss
int
push
mov
mov
and
pop
pop
loopne
inc
movsl
adcl
pop
fcompl
xor
mov
jmp
arpl
out
add
jle
les
pop
push
mull
test
push
sbb
push
pusha
push
scas
out
ret
aad
clc
jp
rcr
jle
pop
outsb
inc
cmpsl
xor
cltd
lea
or
xchg
sub
lods
adc
out
xor
out
add
mov
loope
js
subl
adc
mov
sbb
mov
in
or
rolb
rorb
add
adc
mov
popl
mov
jo
jg
adcb
pop
adc
clc
clc
add
lcall
xchg
mov
pop
ja
push
mov
rcr
jns
lds
aam
push
call
sahf
fiadds
mov
lcall
sub
insb
inc
push
dec
and
cld
ljmp
jg
pop
jno
sbb
imul
push
push
sub
mov
xchg
sbb
stos
jmp
out
out
cld
sbb
adc
out
sub
out
mov
xchg
test
data16
enter
movsb
movsl
pop
int
or
jle
adc
addl
int
lret
and
mov
imul
cmc
or
jmp
jge
jb
arpl
dec
mov
xorb
sub
repnz
pop
dec
dec
inc
movsl
dec
gs
or
sub
adc
fimuls
inc
dec
scas
mov
addb
inc
add
adc
test
and
jb
mov
xor
hlt
and
xlat
cmpsb
repz
daa
aam
jle
push
xor
mov
dec
mov
or
jae
repz
addr16
xchg
mov
insb
stos
mov
leave
sbb
test
push
std
scas
lahf
pop
loope
inc
arpl
lret
dec
jns
pop
mov
addb
mov
lret
pop
lods
lock
cmp
add
mov
push
jb
cltd
test
sbb
pop
cmpsl
enter
jnp
cltd
jne
sub
and
lret
and
push
fcomp
jecxz
add
and
in
cmpsb
sbb
add
imul
jge
fistl
or
push
mov
loop
mov
dec
pushf
xor
ss
jg
incl
fstl
rcrb
cli
repz
push
in
mov
movsl
jle
ret
adcl
mov
ret
roll
pusha
cmp
or
sbb
stos
ficoms
dec
xor
sti
enter
jle
mov
lahf
mov
addr16
and
mov
xor
pop
sub
popf
jecxz
jl
out
fidivl
fs
sbb
mov
rcll
sar
cmpsl
cwtl
jo
inc
sub
repnz
movsl
int
sub
imul
sbb
add
out
cmp
sahf
jle
mov
xchg
bound
movsb
cmp
jo
out
je
cmpl
je
icebp
pop
xor
enter
dec
push
in
xchg
lahf
sub
xchg
insl
lret
clc
push
ss
mov
in
sub
scas
ds
xor
mov
jbe
xor
mov
push
leave
jle
xor
mov
sub
repnz
xchg
add
xchg
jecxz
shlb
jns
out
enter
cmp
orb
lcall
call
sub
jne
pop
gs
inc
jp
not
int
xchg
or
push
cwtl
sub
xlat
mov
ficomps
and
std
xor
js
dec
mov
scas
mov
mov
mov
push
js
xchg
bnd
add
loopne
mov
mov
pop
scas
xor
repz
jb
fucomip
pop
fisubrl
xorb
ret
out
dec
loope
mov
dec
imul
test
mov
push
int
in
add
mov
jns
sub
jl
xor
sub
mov
in
mov
test
loop
into
sub
jnp
nop
sub
into
int
test
xchg
frstor
pop
sar
aad
iret
xor
pusha
inc
xchg
mov
mov
mov
mov
or
leave
fistpll
mov
sub
int
cwtl
add
mov
lods
enter
cli
rclb
mov
sub
xchg
pushf
stos
cmp
push
push
mov
inc
rolb
cltd
jnp
test
push
movsb
popa
jae
mov
mov
outsb
xor
pop
sbb
xchg
in
or
xor
clc
cwtl
das
rorb
xor
repnz
neg
cmpsl
or
dec
sub
mov
into
push
jp
sbb
adcb
dec
add
scas
sub
mov
jmp
mov
jg
popf
stc
mov
int
push
adc
subb
cld
sub
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
enter
xor
in
loop
mov
leave
mov
pop
cmp
mov
mov
and
test
pusha
sbb
clc
dec
cmpsb
or
repnz
inc
jae
mov
adc
je
in
inc
cld
shlb
add
lods
push
cmp
jmp
fcoml
cmp
rcrb
in
sub
cmp
daa
pop
ds
popa
mov
add
popf
jp
int3
rorb
repz
f2xm1
imul
pop
sbb
inc
mov
push
add
iret
es
dec
jae
test
lcall
shrl
in
jae
sub
xor
lods
inc
repnz
imul
rcl
fistl
rorb
stos
add
mov
mov
fs
aam
mov
dec
call
xor
sbb
push
cwtl
stc
test
dec
ficomps
call
cmc
mov
mov
js
daa
loopne
cmpsl
push
add
pusha
jp
je
cwtl
or
jge
outsb
bound
adc
je
or
rdtsc
cmp
dec
mov
or
cmp
movsl
sbb
test
xchg
icebp
and
lret
and
movsb
xchg
mov
sarl
fsubrl
and
push
imul
arpl
insb
into
jae
mov
adc
js
push
sti
fldenv
repz
arpl
pop
pop
mov
pop
inc
loop
stos
xchg
andb
add
jl
sub
pop
pushf
lods
xchg
xchg
cltd
cmp
dec
fisubrs
cs
pop
dec
and
leave
lret
adc
push
jg
repz
mov
stc
xor
int
decb
adc
push
clc
cld
jp
pop
lds
addr16
cli
sar
rcl
ret
push
mov
mov
inc
xor
mov
or
test
adc
shrl
sub
iret
jns
fnsave
repz
xchg
cli
sbb
mov
test
int
test
inc
push
dec
xor
mov
loop
ret
sahf
cmpsl
inc
dec
ds
mov
subb
xchg
int3
ficompl
clc
fnstcw
fs
mov
in
sub
sbb
or
dec
and
pop
adc
cld
int3
fidivrl
addb
mov
jb
inc
mov
gs
aad
pop
fdivrl
xchg
loopne
jbe
or
fstpt
sbb
inc
pop
cmp
push
and
jae
aas
inc
xlat
out
inc
mov
aam
sub
mov
je
push
scas
xchg
lds
lea
repz
frstor
lret
mov
les
incb
aas
inc
push
push
jno
push
lret
fiadds
mov
enter
sbb
or
pop
jne
fisubl
movsb
inc
cmp
imul
data16
jb
mov
cmp
test
cmpsb
mov
adc
int3
pop
sub
adc
pop
inc
pop
outsl
dec
fsubrl
cmp
iret
sbb
lods
sahf
push
inc
jp
or
loope
out
in
outsb
jae
lods
jg
int
int
sahf
mov
stc
push
imul
mov
dec
xchg
lea
sub
mov
ffree
sbb
sbb
xchg
out
jne
mov
mov
es
and
cmp
andb
aam
mov
in
xchg
arpl
jle
inc
lea
cmc
jp
pusha
rolb
sbb
jae
mov
and
lds
test
and
arpl
dec
or
mov
fsts
xchg
dec
mov
pop
inc
mov
mov
jp
adc
mov
divl
movsl
cmp
addr16
cmp
cmp
sub
cmp
ja
insb
pop
cmc
pop
pop
call
lret
mov
add
mov
cmp
fsubrs
mov
jl
xchg
jecxz
imul
movsb
mov
ljmp
sub
lock
sub
rol
outsb
das
dec
int
cmp
lds
sub
inc
sbb
pop
jp,pn
or
or
fimuls
icebp
or
popa
xchg
shlb
les
fimuls
rcrb
push
pop
fwait
stc
iret
movsb
xor
add
aaa
xchg
pop
sub
add
adc
sbbl
mov
adc
insb
or
push
testl
lret
mov
iret
lock
fmul
xchg
shrb
sub
sar
subl
or
scas
or
in
sbb
xchg
or
xacquire
inc
sbb
push
aad
loopne
pop
fsubp
push
jmp
loop
cmc
ds
push
insb
jns
or
repnz
pop
push
mov
sub
fcompl
jnp
sub
jbe
xchg
fwait
cmp
push
and
inc
cli
test
mov
mov
jb
add
insl
jo
popf
sbb
aad
out
cmp
pop
lret
pusha
xor
jg
push
xchg
jecxz
xor
cwtl
pop
lcall
or
incl
mov
in
push
jae
lar
lds
lds
xor
push
clc
mov
subl
adc
add
mov
sbb
stos
cmp
aad
ror
hlt
hlt
addr16
fwait
sbb
cmp
push
xor
into
aam
jmp
mov
addr16
test
dec
inc
shll
clc
stc
dec
push
out
cmc
add
adc
xchg
add
xchg
ss
jmp
pop
and
movsl
sbb
lret
pusha
shrl
ds
inc
push
loopne
mov
pop
adc
dec
push
and
shlb
cli
aad
inc
arpl
and
je
pop
mov
icebp
popa
and
std
fsubp
push
and
or
lcall
das
and
punpcklbw
loop
inc
in
jg
lret
outsl
push
lock
lds
mov
call
xchg
fstpt
add
dec
mov
out
jl
push
enter
pop
ja
insl
fucomip
jle
inc
cwtl
and
in
jne
mov
add
loop
shrl
les
cli
push
sub
sbb
in
mov
fcmove
icebp
sbb
roll
xor
xchg
cmp
inc
mov
int3
inc
test
push
xchg
repnz
jnp
dec
cs
cmpsl
lods
inc
adc
sbb
or
or
jns
pop
shll
stos
add
fildl
push
inc
fistpl
out
cmp
add
mov
sbb
std
adc
push
inc
push
mov
int
sub
or
lea
cwtl
or
outsb
sahf
sbb
cmp
pop
xlat
movsb
cld
out
cmpsl
fcoml
pop
push
mov
imul
test
adc
push
int3
adc
out
es
out
push
sub
adc
ljmp
pop
jb
mov
mov
call
push
popa
dec
rorb
ds
xchg
addr16
pop
test
xchg
cli
ds
loopne
cmp
ret
bound
out
push
das
nop
cld
jb
push
pop
inc
dec
mov
pop
sub
pop
daa
sub
push
or
cs
mov
sbb
mov
cmp
and
sbb
ror
sbb
push
bound
aas
push
cmp
pop
xlat
fwait
jle
lds
inc
and
mov
fmull
mov
pop
mov
cmp
dec
mov
and
stc
repz
adc
pop
mov
insb
mov
imul
int
sarb
xchg
int3
pop
dec
idiv
and
stos
lds
mov
xor
icebp
das
or
jecxz
mov
stc
pop
mov
fs
outsb
jmp
out
adc
push
dec
loop
lods
ja
lcall
push
dec
cmp
push
and
dec
bound
into
jns
dec
icebp
xor
loop
ficomps
shll
inc
loope
iret
mov
popf
xchg
mov
jns
xchg
inc
notb
test
jl
sbb
add
shrb
pop
cld
xchg
inc
add
nop
jbe
add
cmp
xor
mov
stos
pop
repz
sarb
lcall
sahf
aam
mov
or
lcall
aam
les
pop
pavgb
cmpsb
cs
pop
or
dec
call
mov
aas
aam
mov
xchg
add
sbb
jno
insl
inc
out
fcoms
push
ret
fstpl
test
popf
add
pop
mov
pop
movsl
arpl
insl
test
in
fildl
sub
in
or
or
incb
mov
cltd
icebp
jnp
lods
rcl
adc
adc
sub
mov
mov
repz
stos
sbb
xchg
sub
jae
mov
or
inc
mov
div
ss
mov
fmuls
xchg
shlb
xor
sti
mov
add
sub
push
jo
fstpt
cmp
adc
shl
stc
pop
mov
bnd
arpl
data16
aas
or
inc
xor
shll
cld
lds
popf
mull
lea
pop
add
mov
repz
jae
mov
jle
add
js
fdivr
aaa
xor
adc
and
scas
inc
insb
test
cmc
loope
pop
xchg
jp
sub
mov
xchg
subl
mov
push
xor
je
and
mov
scas
cltd
arpl
insl
cltd
xchg
aas
adc
mov
xchg
mov
and
shl
lods
jns
pop
std
cs
out
or
stos
dec
cmc
das
xchg
jecxz
mov
inc
lahf
xchg
data16
or
fcoml
data16
popa
bound
inc
mov
and
idivb
xor
mov
or
dec
xchg
leave
fs
fisubrl
cli
popf
xchg
or
mov
mov
push
adc
mov
ss
push
pop
in
or
jb
dec
adc
mov
lds
dec
xor
xchg
mov
or
sbb
pop
or
and
mov
dec
pusha
jl
push
outsl
mov
ja
push
movsl
cld
xor
repz
je
xchg
pop
push
gs
iret
inc
pop
xchg
xchg
sub
cld
in
je
movsb
ficompl
enter
daa
pop
add
mov
inc
rcrb
push
or
ret
popf
or
imul
jmp
in
aad
aam
aam
mov
in
ja
xorb
les
mov
mov
lock
inc
mov
and
ror
cmp
pushf
jecxz
rcr
cmpsl
or
pop
mov
jecxz
ds
mov
lahf
sub
popf
mov
arpl
lods
mov
out
js
sbb
mov
cmp
mov
push
enter
cmc
mov
sti
cmpsl
xor
mov
fldenv
iret
jae
andl
and
test
mov
lldt
inc
scas
lds
push
pop
lods
pop
jnp
jecxz
mov
push
insb
sbb
sbb
mov
cld
add
sbb
sbb
and
inc
lahf
mov
or
ds
push
push
xor
and
repz
rorb
and
cmpsl
mov
iret
js
adcl
jo
pop
push
fwait
pop
lods
mov
lahf
push
arpl
in
inc
rclb
out
jg
pop
andl
ret
sub
add
push
ja
rclb
cld
popf
imul
pop
push
hlt
pop
fiaddl
and
je
push
or
xchg
mov
lcall
mov
mov
fbld
cmp
rcrb
pop
mov
popl
femms
pop
out
ljmp
mov
pop
mov
fisubl
cmp
daa
ret
rcr
das
cwtl
xchg
inc
mov
or
pop
cwtl
xchg
jl
or
push
arpl
sahf
div
scas
fistpll
jns
pop
xchg
push
popa
adc
in
das
push
ss
cmp
pop
mov
add
xchg
or
add
lds
mov
nop
xadd
sti
mov
mov
in
xor
nop
stos
jbe
jb
in
mov
imul
fstpt
arpl
mov
out
push
repz
cwtl
sub
jl
lcall
sahf
aas
push
lods
add
lock
lcall
sub
pop
xor
xor
pop
data16
or
paddd
orl
ljmp
jle
xchg
dec
sahf
aam
xor
sub
adc
scas
cli
xchg
ss
pop
pop
push
xor
iret
or
sbb
xor
stos
sbb
add
mov
mov
inc
mov
scas
ljmp
dec
outsl
sub
gs
cld
adc
jmp
lcall
cmp
sub
xchg
or
pusha
adc
daa
jle
inc
mov
es
add
push
jmp
and
gs
inc
pop
mov
test
jo
mov
outsb
cmp
add
pop
jecxz
push
loope
pop
fiaddl
stos
inc
lret
sbb
lcall
les
arpl
outsb
xor
sarl
or
mov
imul
mov
pop
bound
arpl
push
sbb
sub
add
mov
arpl
adc
mov
sub
push
lock
in
aam
fidivrs
xchg
lret
ljmp
lret
sbb
mov
in
ja
loopnew
stos
or
mov
scas
and
ja
lcall
adc
jnp
in
jb
rclb
inc
in
mov
cmp
fsubrs
or
cmp
dec
subl
mov
loope
out
push
ret
mov
ljmp
mov
shl
daa
xchg
pop
int3
pop
lcall
cmpsb
xchg
aad
jbe
lods
test
stos
mov
push
sub
xor
dec
mov
inc
outsb
inc
stos
pop
ret
sbbl
xor
sbb
cmc
fidivrs
push
or
jge
in
push
sbb
mov
outsb
cmp
fsubl
mov
pop
jbe
fldenv
lea
sub
push
xor
add
sbbl
icebp
lahf
jno
lcall
int3
cs
fsts
mov
pop
adc
sbb
into
mov
ja
ret
pop
enter
hlt
leave
jae
repz
out
jnp
mov
decb
pop
jo
aas
jecxz
addr16
dec
xchg
add
xorl
call
je
in
sbb
jmp
pusha
movsl
stc
lret
mov
std
cmp
or
ja
jle
ret
loopne
fs
or
jge
insl
pop
lret
push
sbb
lods
fdivrs
loop
gs
test
jl
mov
sbb
and
xchg
mov
and
xor
fisubl
lret
jae
and
pop
or
sbb
or
out
push
pop
inc
mov
mov
cmp
mov
dec
cwtl
pusha
cwtl
push
jns
gs
lret
xchg
mov
scas
xchg
or
mov
inc
mov
cmp
adc
lods
lret
test
das
fs
sbbb
jnp
fisttpl
aam
jge
cmp
in
popf
in
jmp
add
jl
sub
xor
lahf
rcll
xor
mov
out
jns
adc
cmp
mov
daa
pop
dec
xchg
gs
je
mov
add
xchg
mov
sub
bound
add
pop
pop
je
out
mov
pop
push
dec
mov
int
mov
push
inc
cli
add
fwait
int3
xchg
jae
and
xchg
pop
sbb
jbe
jns
ja
call
fidivl
push
nop
popa
gs
ficoms
loopne
xor
repz
cmp
dec
mov
jnp
mov
inc
pushf
mov
mov
sbb
mov
or
arpl
ja
cmp
insl
cmp
sbb
xor
lds
dec
push
push
dec
xor
inc
movsl
out
jnp
in
insl
shll
jg
dec
test
icebp
iret
mov
rcl
and
scas
mov
jnp
ret
add
cmp
mov
cmp
push
pop
jnp
stos
addr16
pop
loope
sbb
lret
out
sbb
cmp
sbbb
lcall
in
or
js
fistpl
nop
cltd
pop
pop
add
cwtl
insl
outsb
arpl
icebp
shlb
scas
iret
or
or
cmp
mov
dec
dec
sub
pop
pop
adc
pusha
push
or
loop
rcrb
fstl
push
mov
orb
ja
std
or
hlt
sub
and
xchg
push
jb
outsl
rorl
sbb
push
sub
fwait
pop
out
inc
jae
push
inc
mov
lret
out
vphaddubd
je
mov
sahf
inc
ret
aaa
jo
scas
adc
mov
mov
loope
decb
sub
clc
mov
lret
pop
daa
inc
mov
dec
pop
stos
pop
add
push
jnp
fs
jle
pop
push
fistpll
int3
add
push
mov
mov
rorb
dec
inc
inc
movsb
ret
cmp
mov
enter
inc
stos
call
jecxz
icebp
bound
jge
fists
push
sub
gs
xchg
sub
aaa
xor
jb
out
out
divb
add
ja
lret
push
or
call
push
xlat
add
pop
lock
inc
sbb
repnz
push
push
inc
jbe
out
pop
ljmp
fsubrl
mov
shll
das
lods
fdivs
mov
gs
push
rcll
mov
div
fisttpl
gs
outsb
in
cmp
pop
adcb
push
int3
js
push
mov
cli
insl
jle
shlb
cmp
je
lods
pop
inc
inc
mov
pusha
mov
jge
push
and
cwtl
stos
mov
cmp
out
sbb
or
sub
and
jo
cmc
into
test
iret
repz
jno
jp
xor
in
rcr
aas
into
sub
xchg
inc
sub
jg
sub
fstpt
pop
rorl
sub
jae
cmpsb
shll
lods
ja
adc
push
inc
imul
and
insl
repz
jge
pop
outsl
xor
popa
pusha
ret
and
repnz
sub
aas
mov
into
outsb
push
insl
or
arpl
lret
sbb
jmp
rclb
test
int
aas
pop
out
add
adc
out
lcall
mov
lahf
sbb
jle
aad
adc
push
in
push
add
and
in
inc
push
or
pop
sub
cmp
pop
clc
jne
or
mov
cmp
push
sub
les
mov
jge
nop
stos
fildl
mov
add
pop
mov
out
movsb
mov
and
loopne
and
add
gs
lahf
repz
scas
pop
sbb
mov
push
cmpsl
push
or
lock
in
add
roll
pop
or
adc
cmp
das
dec
adc
add
push
add
rcrb
cli
push
fldenv
dec
out
fldl
ljmp
in
ret
inc
mov
xchg
push
stc
outsb
mov
cwtl
repnz
inc
cmpb
rol
lods
fadd
sbb
and
pop
fadd
cmp
pop
movsb
fnstsw
nop
lahf
das
push
adc
push
mov
fimull
and
ss
adc
sbb
dec
pop
aad
sub
mov
clc
cmpsl
push
test
repz
js
lds
add
pop
sub
leave
pop
popa
mov
loop
fucomi
repnz
inc
mov
nop
sub
addl
fists
adc
aas
lret
inc
push
imul
xchg
test
mov
jg
lods
insb
xor
mov
orl
imul
iret
ja
pop
and
jge
es
xor
shrl
shll
and
andb
sti
add
mov
fsts
push
jae
adcl
stc
je
push
cltd
pop
push
inc
add
rclb
inc
pop
mov
xor
iret
fs
mov
in
mov
cmp
dec
jae
jl
add
xor
sbb
repnz
and
inc
pop
in
lret
or
push
outsl
pushf
mov
out
lcall
dec
fldcw
jl
mov
lods
fwait
inc
mov
icebp
push
sbb
mov
gs
fisubs
in
xchg
movsl
cltd
jnp
add
and
add
sbb
lahf
arpl
subb
loop
xchg
sub
out
xor
jae
aad
and
push
std
ljmp
ss
in
or
sub
lret
stos
in
mov
mov
jmp
or
mov
fwait
or
pop
daa
pusha
sbb
rorb
lret
insb
push
pop
mov
shll
push
fdivp
ficomps
jmp
lock
pop
inc
jg
inc
or
adc
inc
push
mov
lods
cmpsl
push
mov
jmp
mov
add
and
cmc
sahf
aad
mov
rcrb
call
sbb
push
lea
cmp
pop
lahf
scas
rcrl
out
bound
in
inc
test
push
inc
filds
nop
add
shl
call
mov
xor
adc
add
sbb
push
scas
fdivrl
iret
loop
scas
aad
and
orps
xchg
mov
shlb
or
jmp
pushf
jl
je
inc
pop
xlat
jmp
fildl
sbb
lahf
jb
das
jae
inc
and
xlat
adc
adc
pop
pop
fs
or
loop
and
fmull
cltd
stos
call
ljmp
fwait
mov
xchg
sbb
push
lds
ficompl
inc
ret
adc
daa
sbb
mov
dec
lods
pop
xor
push
out
fldenv
int3
mov
mov
int
push
mov
mov
in
jg
adc
imul
dec
lcall
mov
lret
adc
dec
testb
adcb
inc
push
aam
in
jb
xchg
jmp
ljmp
cmp
jo
and
xchg
test
out
pop
insb
dec
adc
test
or
movsb
mov
inc
fxch
push
xchg
rorl
lret
mov
out
sub
mov
mov
inc
add
mov
inc
jle
out
push
sbbb
and
pop
mov
daa
adc
and
cmp
adc
sbb
xlat
js
fisubrl
xor
aas
sbb
das
mov
fucomi
clc
push
in
add
mov
popf
out
jle
mov
sub
iret
or
sub
push
mov
test
orb
int3
xchg
cmp
mov
mov
cltd
sbb
inc
mov
dec
dec
cwtl
push
pop
sub
rcll
xor
imul
push
xchg
cmc
mov
cli
xchg
inc
inc
add
pop
and
mov
push
imul
cwtl
jge
cmpsb
xchg
push
cltd
movsb
mov
stos
hlt
popf
and
push
iret
xchg
push
lcall
inc
ret
sub
stos
lcall
leave
aad
adc
lock
lret
xchg
sub
ljmp
xchg
push
movsl
stc
mov
mov
pop
cltd
ret
aam
jb
fld
ret
inc
faddl
lahf
fcompl
and
sti
jns
lcall
repnz
sub
divb
cld
jno
adc
cmpl
mov
push
mov
mov
aam
dec
mov
inc
popf
lcall
sbb
scas
xor
divl
pop
subb
std
fildl
lcall
xor
adc
sub
lea
fisubl
icebp
dec
and
cmpsl
outsb
mov
roll
rolb
iret
mov
jnp
in
scas
cld
pop
popf
lcall
inc
subl
es
sbbb
adc
pop
dec
mov
mov
std
outsl
mov
int
fstl
jae
cmp
mov
ret
jae
pop
push
xor
mov
and
jae
push
pop
shll
jmp
add
insl
scas
out
add
cmp
pop
or
stos
lods
sbb
jo
js
inc
mov
fisubrl
bound
push
lret
add
cmpsb
cmp
into
adc
mov
test
mov
mov
inc
mov
mov
mov
pusha
mov
stc
sub
fwait
push
push
ss
out
jle
or
sub
call
mov
pop
test
test
pop
sbb
jge
je
sbb
inc
out
sbb
adc
or
sti
xor
dec
scas
pop
and
arpl
lret
dec
jae
pop
sub
mov
sbb
xlat
inc
mov
divb
stos
pop
fldcw
stos
jns
jl
push
mov
pop
cmc
bound
and
cmp
and
jo
ds
shrl
jbe
adc
cmpsb
jl
jns
ret
mov
movsb
or
stos
in
daa
lcall
xchg
lahf
mov
lcall
les
inc
sahf
jg
jns
push
rcrl
ljmp
mov
cmp
mov
fnstenv
aas
cmp
sub
push
dec
xorb
xchg
movsl
and
insb
xor
cwtl
in
ljmp
jb
sub
inc
hlt
sahf
addr16
or
cmp
dec
xchg
jecxz
arpl
mov
cmc
sub
mov
pusha
iret
add
push
sbb
push
jp
mov
pop
dec
adcl
gs
mov
lahf
lahf
mov
daa
jo
jge
dec
xchg
jp
mov
sbb
xor
cmp
rcr
push
icebp
scas
scas
push
sbb
lahf
mov
cli
cmpsb
daa
test
enter
ret
xchg
sbb
das
movsl
ret
stc
fistps
push
dec
popf
test
dec
scas
xor
push
sbb
mov
rorb
lea
jl
mov
nop
jle
into
inc
andl
gs
call
ret
xor
rep
call
lahf
je
enter
jns
cmpsl
insl
loopne
in
adc
cmp
mov
aad
mov
jnp
cmpsb
xor
push
mov
add
lcallw
cmp
push
sbb
or
push
push
jbe
push
mov
sub
add
sbb
fistpl
xchg
inc
jne
repz
or
lret
xorb
in
inc
sub
sbb
push
fcoms
fnsave
add
loope
and
fists
test
pusha
sarl
decl
cmp
flds
mov
mov
add
nop
push
fcoml
aaa
and
mov
jecxz
in
cmpsb
xor
sub
ficomps
inc
jnp
jae
mov
rep
mov
push
imul
xorb
mov
xor
mov
rcrl
jp
mov
out
push
and
push
pop
dec
std
push
jg,pt
clc
cs
scas
jl
mov
in
popa
into
rcrb
xlat
int3
mov
xorl
mov
add
lret
or
addr16
cmpb
mov
adc
jmp
mov
rclb
pop
call
mov
fistps
loopne
add
xchg
pop
pop
inc
xor
xchg
leave
mov
jge
hlt
jp
call
enter
jg
mov
lods
or
aam
insl
pop
cld
decl
push
lods
cmp
adc
pop
push
mov
test
sti
cltd
mov
pop
es
jo
fbstp
inc
push
lock
iret
dec
sbb
int
add
jmp
cltd
cmp
and
aas
mov
cmpsl
sbb
xor
test
pop
jb,pn
or
cmc
xor
pop
test
sbb
cmp
mov
int
jl
xor
aam
mov
and
arpl
arpl
fisubs
pop
into
out
inc
mov
adc
stos
push
pop
insl
cmpsl
movsl
jo
fucom
jns
les
pop
push
sub
mov
loopne
mov
jg
push
push
mov
or
popf
xor
xor
fdivrl
pop
dec
and
inc
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
cli
je
inc
dec
push
push
sub
push
push
and
dec
jl
push
dec
adc
sbb
jo
cmpsl
imul
testb
jg
out
pushf
int3
lret
push
sub
int3
mov
hlt
mov
test
out
jg
fs
jnp
pop
jb
ja
test
dec
and
push
addr16
push
into
mov
xor
xchg
push
pushf
es
jmp
xchg
cmp
xchg
jb
ja
adc
pop
in
stos
xlat
clc
mov
inc
je
mov
add
aad
cmp
out
jp
dec
lods
or
adc
dec
push
mov
add
leave
push
jnp
mov
push
insb
icebp
scas
or
les
mov
outsb
add
and
std
mov
test
push
ja
pop
cld
in
add
rcll
out
add
or
or
xor
push
sbb
or
insl
inc
push
and
sbb
dec
outsl
xor
rclb
mov
fstpt
add
shll
push
jae
fdivrs
lcall
mov
test
loope
mov
and
add
inc
mov
pop
or
mov
scas
cmp
adc
dec
js
test
cltd
dec
push
inc
and
popf
repnz
and
inc
mov
iret
lods
out
mov
jbe
test
mov
dec
pop
in
add
out
sbb
xor
pop
mov
adc
mov
mov
inc
inc
xor
push
mov
mov
xor
push
ret
icebp
divl
cwtl
xchg
sub
sub
inc
jmp
scas
cmpsl
fwait
mulb
mov
ljmpw
int
xchg
pop
mov
xchg
lret
pop
adc
pop
imul
dec
repnz
gs
mov
shll
aad
push
sbb
cmp
xor
movsl
xchg
push
jecxz
sub
push
mov
inc
in
ss
xchg
push
mov
jmp
jno
jb
inc
ret
shlb
lahf
cmp
ds
jg
sbb
data16
jp
adc
fwait
mov
xchg
jo
push
out
fwait
call
dec
cmp
push
aad
push
sub
cmp
aam
lods
in
or
sbbb
and
clc
push
cmpsb
ss
std
dec
add
add
sub
push
inc
lock
lret
iret
clc
daa
fcoms
and
add
add
cwtl
in
in
mov
pop
mov
notl
fisttpl
bound
jl
rorb
std
inc
or
xchg
mov
mov
xchg
and
push
stc
xchg
fwait
cld
lea
and
movsl
aad
sbb
and
sub
cmp
add
clc
pop
pop
xor
das
mov
call
cmpsb
pop
test
leave
inc
push
pop
loopne
icebp
mov
cwtl
cltd
out
mov
cmp
pop
xor
sbb
sub
push
add
test
or
imul
xor
fistps
cld
xchg
sub
xchg
pop
xor
xchg
imul
pop
pushf
ret
inc
mov
xchg
out
aam
jmp
lock
lea
lds
xlat
push
mov
into
mov
mov
in
xchg
loop
and
adc
adc
sub
cwtl
out
cmp
test
mov
mov
pop
xor
sbb
sub
test
ret
jne
movsb
ret
jo
mov
nop
cmpsl
cmp
xor
add
jne
and
dec
adc
add
jae
push
xor
xchg
pop
jmp
inc
pop
and
jle
in
sarb
shll
ss
rcr
jae
dec
fdiv
pop
push
mov
lret
mov
out
lods
and
jne
icebp
je
xor
or
sub
insl
pop
xor
push
mov
and
out
jp
pusha
jmp
out
and
fbld
pusha
sbb
inc
outsb
pop
sub
out
lock
int3
push
enter
pop
out
sbb
data16
xor
mov
stos
adc
and
addr16
push
popf
jbe
sbb
pop
xchg
inc
mov
cmpsl
pop
push
test
or
out
in
addr16
xchg
in
data16
mov
pop
cmp
movsl
push
pusha
aas
repz
jecxz
outsl
test
stos
inc
cmpsb
je
adc
hlt
xor
repnz
lock
jns
shrb
cmp
mov
int3
adc
nop
divl
push
and
sub
imull
scas
popa
sbb
and
aaa
ffreep
mov
ret
imul
dec
lds
xchg
xchg
pusha
punpcklbw
std
and
mov
jnp
ret
and
movsl
sbb
mov
repz
sbb
jne
add
repnz
icebp
jae
inc
xlat
loope
into
push
fidivs
push
into
dec
lret
mov
add
xor
idivb
ds
cli
and
scas
addr16
push
out
cmp
pop
xlat
add
psubsb
push
test
mov
imul
mov
out
sub
and
mov
ja
pop
shrb
add
or
fldl
mov
jg
add
out
mov
je
mov
xchg
fstps
decb
insl
inc
inc
mov
push
jecxz
pop
subl
sbb
mov
cmc
ret
lock
mov
pop
ret
fiadds
jno
add
and
adc
lahf
sahf
popa
mov
push
negl
out
in
adc
sub
arpl
add
adc
push
outsb
fsubrp
movsl
mov
pcmpgtw
adc
sub
sub
add
mov
out
mov
lods
outsl
cwtl
push
into
lds
push
cmp
lcall
stc
movl
iret
js
and
ficomps
pushf
fs
jno,pt
xor
pop
add
aam
pop
mov
xchg
mov
mov
int3
mov
leave
pop
faddl
xchg
pop
stc
adc
imul
les
out
lret
ja
fwait
outsb
out
jbe
jo
pop
xlat
je
fwait
inc
add
sbb
push
lock
xchg
addl
cwtl
push
andb
jmp
mov
push
xchg
rcr
add
jo
test
in
or
cmc
push
out
loop
imul
push
or
int3
movsb
or
std
int3
or
mov
mov
xchg
xchg
mov
sbbl
int3
jnp
imul
loope
fistpll
xchg
cwtl
jmp
movl
shrb
lock
aaa
ljmp
ds
es
inc
leave
stc
icebp
jp
mov
and
dec
fnstenv
adc
push
or
mov
xchg
xor
or
mov
movsb
repz
gs
pop
adc
jl
lock
repz
push
sub
cld
and
xor
or
fidivrl
mov
push
mov
pop
fnstenv
sbb
mov
jae
dec
or
jb
and
jnp
pop
xchg
int
subl
mov
fmull
in
xchg
fwait
addl
insb
test
or
ficoml
push
xor
cmp
mov
dec
movsl
sahf
pusha
in
xchg
mov
inc
push
in
aas
insl
out
pop
mov
lcall
push
ret
cmpb
jbe
cltd
das
or
mov
inc
shrl
aam
add
aam
loop
inc
xchg
in
or
iret
xchg
aaa
pop
cmp
fidivl
out
lods
ret
ret
cmp
cmp
test
cmp
pop
push
imul
pop
xchg
lods
shr
aad
and
xchg
fnstsw
out
xlat
cmp
xchg
inc
movsl
subb
in
or
jnp
mov
and
adc
scas
xchg
dec
xor
divb
pop
fwait
lahf
dec
jmp
fnstenv
xor
in
add
inc
mov
insb
sub
pusha
shrl
xchg
xor
rorl
pop
jb
pusha
cmpsb
sub
push
sub
jbe
add
mov
xchg
enter
mov
mov
loope
icebp
dec
clc
mov
iret
push
shrl
rcll
push
jle
jae
pop
leave
ret
or
ret
stos
and
mov
cmp
push
xchg
dec
loop
push
iret
mov
push
adc
jbe
leave
sbbb
lcall
es
aaa
pop
fbstp
mov
jge
jae
cld
xor
mov
push
xchg
ss
xor
mov
push
dec
mov
ret
sub
cmp
fs
push
fwait
xor
ds
fadds
and
push
mov
es
stc
dec
sti
adc
js
add
jl
pop
inc
outsl
out
out
pop
jbe
pop
loop
pop
push
mov
cli
cmpsl
xchg
in
lret
add
pop
cmpsb
mov
add
negl
push
adc
dec
sbb
push
xor
sar
jge
ds
push
sbb
mov
mov
scas
inc
int3
loopne
xor
scas
aad
xchg
cmp
dec
jecxz
in
std
sbb
jecxz
sbb
test
xor
push
or
clc
in
sub
mov
mov
and
pop
lds
arpl
ljmp
pushf
mov
xor
aad
xchg
add
inc
sbb
adcl
mov
outsb
xor
mov
leave
jg
test
mov
xchg
mov
dec
mov
cmc
push
cmpb
lahf
cmp
mov
pop
mov
mov
fadd
mov
pop
in
mov
ret
pushf
cmpsb
push
int3
sbb
add
xor
lretw
inc
inc
mov
out
enter
fiadds
pop
incl
mov
jb
pop
test
movsl
repnz
ret
call
loopne
jno
scas
mull
out
or
jo
lods
movsb
pop
int3
ffree
andl
adc
sti
push
lahf
sarl
cmp
add
enterw
jmp
xor
push
or
dec
cs
ljmp
ret
mov
or
repnz
mov
sbb
push
lods
cld
pop
lret
clc
test
cli
or
add
insb
inc
insb
scas
loop
mov
repz
ret
sbb
sar
lds
dec
cmc
inc
xor
stos
cmp
leave
pop
jno
xor
lahf
mov
jl
data16
adc
jp
fmuls
pop
fcomi
xchg
pop
pop
out
test
aaa
lock
scas
jge
and
stc
mov
imul
adc
inc
cld
repnz
cmp
cs
js
faddl
cmp
cmpsl
lahf
js
sub
xchg
sub
pop
pop
fs
test
push
pop
jb
adc
lods
adc
push
roll
mov
jnp
out
inc
insl
shl
push
push
cmpsl
jecxz
loope
jns
push
push
mov
sub
xor
stos
ja
in
pop
mov
or
pop
sahf
or
push
push
bound
cli
and
mov
cmpsb
pop
cmc
aam
add
andb
sub
pop
in
loop
mov
pusha
mov
cmpsb
outsb
push
fs
ja
xchg
sub
cli
mov
cmpsb
ret
jb
fxch
loop
cmpsl
jnp
and
push
clc
js
jbe
dec
pop
push
cmp
test
cli
es
sub
js
inc
dec
pop
sbb
popa
sub
xchg
sub
pop
sbb
inc
mov
push
xchg
pop
push
mov
cli
xor
add
or
cld
fwait
ret
dec
loope
lcall
adc
mov
aad
adc
gs
cli
push
pop
sub
jl
test
xor
scas
add
int3
fisubrs
push
mov
stos
pop
es
imul
in
mov
mov
lea
lahf
jl
push
cmp
jg
xchg
cwtl
outsl
pop
xchg
mov
cmp
ret
jmp
and
out
mov
int3
dec
bound
jo
loopne
cld
mov
js
outsb
lret
sub
int3
dec
lret
pushf
decb
mov
ss
push
insl
in
xchg
inc
loop
push
outsl
inc
movb
rolb
sti
dec
ficoms
leave
mov
cmp
lcall
or
adc
or
or
scas
add
daa
adc
sti
fidivrl
dec
mov
fldl
fwait
into
dec
idivl
sub
add
mov
arpl
lods
lods
inc
ds
loope
mov
loopne
xlat
and
jp
pop
stc
out
mov
sti
pushf
dec
lret
push
jle
shrl
lods
jecxz
mov
sub
ds
shl
mov
adc
xchg
xchg
pop
push
clc
jge
lcall
sbb
jo
popa
movsb
sahf
loop
jg
mov
xor
lcall
das
loope
jl
and
mov
lahf
imul
into
shr
fs
test
divl
fwait
testl
cli
push
out
cmp
in
or
pop
add
stos
ret
ficoms
cmpsb
mov
sahf
mov
out
hlt
mov
loop
inc
mov
xchg
je
push
les
test
sbbl
out
in
cmp
loopne
jmp
adc
push
fcoms
test
mov
dec
inc
push
xor
adc
nop
js
xchg
pop
mov
xor
ljmp
lock
inc
fs
mov
jae
cmp
and
leave
cltd
cmp
xor
add
mov
fadd
arpl
jae
or
pop
and
or
nop
movsb
lock
adc
xor
std
jns
mov
cmpsl
push
pusha
xlat
popa
loopne
popa
adc
nop
rcrb
leave
pop
xor
adc
and
nop
jb
sbbl
inc
jno
add
dec
aad
sbb
sub
push
dec
scas
iret
ffreep
sbb
mov
stc
pop
test
sbb
push
aam
ret
lcall
mov
xor
pop
inc
outsl
pop
test
mov
jbe
orb
lds
stc
or
fildl
push
test
fcompl
int3
mov
leave
in
add
add
in
jne
mov
loope
push
xor
int3
shl
jns
or
adc
pop
stos
jg
push
jns
repz
int3
mov
lret
sti
cmp
leave
movsb
dec
push
push
sbb
int
pop
dec
and
adc
rolb
inc
sub
enter
jecxz
jbe
ret
dec
and
cmpsl
and
imul
sub
lahf
sub
fcoml
xlat
clc
enter
or
out
out
jbe
outsb
mov
dec
inc
inc
insb
loop
and
rorb
push
mov
rolb
xchg
jp
sbb
mov
jge
inc
sbb
sbbb
pop
stos
dec
mov
sti
adc
fsubr
and
jge
sahf
fisttpl
xor
mov
jg
pop
fisubrl
xchg
mov
outsb
insl
in
call
jmp
add
xchg
xor
cmovbe
sahf
dec
lods
ss
jb
or
pop
push
mov
pop
fnsave
sub
cmpsb
stos
push
mov
fistl
cltd
push
sub
nop
stos
jo
or
pushf
cmpsb
mov
popf
stos
mov
aas
out
mov
push
mov
and
mov
iret
mov
add
xchg
out
rolb
pop
jp
sahf
test
cli
ja
pushf
adc
mov
popf
mov
cmp
out
mov
scas
repnz
jg
das
add
imul
jp
sbb
testl
sbb
push
xchg
dec
jne
cmpsl
xchg
cmp
add
cmp
jp
pushf
mov
mov
xor
cmp
push
pop
stos
xchg
leave
loop
xchg
fsubr
cvtpi2ps
dec
aas
and
mov
inc
out
icebp
dec
jp
mov
mov
mov
sti
out
fisubrl
xor
push
dec
test
cli
pop
and
leave
int
mov
stc
sbb
sbb
lock
daa
sbb
add
fidivrl
adc
dec
lret
jp
in
xor
cmp
pop
jb
xrelease
xchg
arpl
fs
push
fwait
arpl
iret
mov
pop
lea
cli
mov
cltd
add
scas
int
cmc
lahf
addr16
out
ljmp
ss
inc
pop
mov
jl,pn
das
cltd
pop
stos
pop
pop
push
and
ds
push
out
cmpb
adc
in
add
adc
test
pop
nop
mov
popa
test
mov
xlat
sub
xchg
mulb
xorb
sub
enter
outsl
add
cmc
js
pop
cmp
mov
imul
rcl
enter
cmpsl
iret
sti
push
mov
sbb
lods
outsb
and
arpl
xchg
nop
lahf
xor
sub
xor
or
nop
mov
out
inc
pop
xor
pop
adc
fs
adc
fistps
rolb
xchg
iret
imul
mov
pop
mov
les
jmp
sbb
scas
in
test
in
ljmp
cmc
shll
mov
imul
fistl
cwtl
inc
int
lea
popf
xor
push
inc
push
jg
dec
insb
insb
push
adc
ret
cmc
sbb
mov
icebp
scas
cmp
jo
stos
xor
jp
icebp
fdivrl
add
mov
lret
mov
adc
call
int3
outsb
and
mov
sbb
adc
imul
les
fs
pop
xchg
gs
iret
pop
fldt
push
pop
push
cli
mov
ja
scas
inc
mov
jp
xchg
mov
pop
addr16
repnz
push
cmp
xchg
sbb
je
in
sub
add
xchg
and
cmp
test
adc
jne
sahf
rolb
xchg
or
jns
ds
jae
jp
mov
push
rcll
sub
sub
movsl
push
test
lock
aaa
dec
lret
adc
or
loopne
gs
out
dec
xor
mov
adc
dec
or
fildl
testl
add
jns
call
idivb
xor
fs
movsl
fcompl
inc
mov
mov
sbb
nop
mov
sub
nop
stos
out
cmc
aaa
ljmp
mov
mov
lods
mov
cs
mov
inc
mov
adc
stos
adc
int3
mov
int
mov
push
inc
push
shrb
orl
les
sahf
cmpb
hlt
fwait
push
push
xchg
daa
mov
push
and
fistl
stos
fcom
repz
mov
outsl
loopne
cmp
add
mov
addr16
mov
pop
and
add
xor
shrl
push
jne
dec
sahf
push
js
xor
hlt
fildll
sub
inc
cltd
inc
divb
sub
loope
into
test
lods
repz
scas
jae
sbb
push
incl
push
or
idivb
jb
mov
mov
dec
aas
push
jns
scas
cmp
fists
add
int
inc
or
pop
inc
imul
sbbl
iret
insb
or
pop
std
push
pop
mov
add
mov
fwait
or
out
cmp
je
or
ds
jb
aad
in
rolb
dec
stos
rcl
insl
cld
hlt
jns
xlat
mov
xchg
pusha
mov
sub
add
adc
outsl
pop
push
inc
out
dec
xor
push
jae
in
ljmp
mov
jnp
mov
sub
daa
notl
sbb
push
jl
cmp
pop
xchg
cmpsl
enter
addr16
ror
mov
les
jmp
rolb
mov
sub
ret
lcall
or
fcmovu
orl
cmpsb
dec
dec
stos
cmpsb
and
push
pop
mov
test
jno
xchg
jne
sub
dec
pop
cmp
add
loope
roll
mov
daa
stos
push
or
ss
or
sub
cmp
push
xor
jno
roll
aam
ljmp
or
lret
addb
aaa
rorb
setge
imul
cmp
lret
stos
pop
pop
sub
ja
cmpsl
dec
sti
push
or
push
push
je
roll
fcompl
cmp
stos
lret
les
outsl
push
nop
push
sti
mulb
xchg
jmp
mov
inc
sarl
xchg
adc
fwait
xchg
stos
inc
jge
hlt
push
mov
fdivs
pop
sub
sbb
jle
jmp
jg
pop
nop
jne
push
jmp
cmp
ficompl
sbb
sbb
push
adc
or
push
movb
jecxz
adc
mov
push
inc
push
aam
cmp
lahf
out
and
push
movsb
sub
cld
and
pop
daa
mov
sahf
pop
cmp
lods
pop
push
mov
mov
dec
and
jmp
psllq
sub
data16
xor
jae
mov
adc
mov
inc
push
xor
or
adc
mov
xor
and
push
adc
xchg
pop
insb
and
sbb
cwtl
inc
das
jbe
dec
sbb
pop
test
pop
and
jmp
dec
jb
loopne
xchg
jnp
mov
sub
add
xor
sbb
mov
add
mov
inc
mov
cld
dec
and
fdivl
xor
je
lods
sub
fucomip
jbe
inc
fcomip
stc
inc
xchg
inc
inc
int
fsubs
xchg
idivl
or
jg
xor
xchg
shl
adc
out
sbb
imul
mov
es
enter
add
mov
adc
mov
mov
loopne
fists
ror
adc
stc
popa
or
loope
jo
ja
adc
mov
movsl
cmp
iret
lret
fcomps
jne
push
cmp
inc
cmp
add
add
or
shrl
lods
pop
out
inc
out
xchg
mov
out
nop
test
mov
leave
imul
loope
icebp
loopne
clc
sub
mov
push
jmp
ss
loope
fadd
mov
scas
ja
dec
call
scas
cmp
adc
sbb
push
pop
mov
test
mov
pop
imul
out
subb
fadd
add
pop
xor
mov
adc
fnstenv
out
stc
fidivl
xor
push
scas
cmp
jl
adc
mov
add
sbb
push
adc
add
ljmp
movlps
in
scas
loop
cmp
inc
pop
rcl
jo
fldt
lahf
scas
cmpsb
cmp
mov
ja
fucom
or
add
arpl
inc
xchg
out
into
jns
sbb
scas
ret
adc
mov
jno
dec
icebp
push
fidivs
popa
and
cmp
adc
sub
add
sti
ja
or
inc
inc
inc
and
fiadds
jnp
push
add
cltd
dec
pop
or
lahf
mov
aas
dec
inc
adcb
xlat
inc
fwait
push
stos
pop
xchg
pop
js
mov
push
and
fs
sbbb
pop
mov
bound
rcrb
jno
adc
pop
scas
xchg
pop
mov
int3
mov
push
out
dec
stos
dec
call
jo
dec
xchg
sbb
shrb
mov
mov
push
cmpsb
cmp
jne
adc
jecxz
cmp
out
hlt
stc
leave
sub
out
fs
ljmp
arpl
mov
stc
out
push
dec
fldcw
sub
jp
inc
stc
bound
scas
inc
jmp
cmp
in
lcall
stc
sub
lods
sbb
dec
out
add
pop
pop
cmp
mov
dec
repz
sbb
sbb
mov
push
sub
cmpl
stos
xor
pop
call
fwait
adc
sti
cmc
jle
into
imul
cld
pop
jmp
repz
jno
push
repz
rcr
mov
xlat
pop
jne
dec
pop
jecxz
outsl
sbb
js
xor
lahf
sbb
inc
mov
popa
adc
outsb
mov
xchg
xchg
mov
mov
inc
cmp
shl
dec
sbb
mov
pop
sbb
leave
jbe
sar
mov
out
jo
pop
cmp
loope
inc
outsl
mov
test
lret
iret
jge
mov
std
aas
push
pusha
sbb
jbe
xor
add
xchg
jb
test
or
adc
popf
in
stos
cwtl
xor
je
jb
lds
fdivl
push
cmp
rorb
inc
setp
sbb
lds
out
jge
insl
sti
mov
arpl
in
or
cli
sti
stos
add
mov
or
jbe
push
add
jp
test
daa
jbe
push
push
test
xor
sub
cmp
cltd
insl
out
and
in
or
or
push
sbb
xor
adc
and
add
adc
mov
and
lret
sbb
mov
mov
jne
add
ret
imul
xor
xor
xor
lret
out
call
lock
add
jnp
out
inc
xor
dec
pop
lret
dec
ljmp
jo
xchg
mov
daa
push
je
fcomi
stos
bound
mov
lock
or
sbb
in
cmpsl
xor
push
xlat
leave
mov
loop
mul
out
call
fldl
inc
shl
sub
inc
or
jp
push
sub
cmpsl
mov
ja
test
xchg
ds
test
mov
out
mov
mov
lock
lcall
cmpsl
cltd
fcoml
mov
mov
push
or
fiadds
call
mov
xor
xor
jg
aad
inc
mov
mov
pop
push
dec
mov
aaa
movsl
jmp
das
test
sti
fldt
cwtl
jmp
outsb
and
mov
ret
mov
and
fiadds
and
in
insb
sub
repz
mov
pop
sbb
sub
xchg
icebp
push
pop
icebp
xor
sbb
insl
fdivrp
pop
jbe
mov
add
cs
xor
clc
decb
imul
test
push
inc
xchg
or
scas
lods
daa
mov
pusha
sbb
mov
mov
insb
pop
popa
or
or
addr16
xchg
jge
jg
inc
inc
insb
sbb
scas
jp
add
iret
mov
out
cmp
mov
adc
out
adc
repz
mov
xor
je
popa
cwtl
cmpsl
pop
adc
sub
sahf
movsl
mov
ss
push
mov
mov
push
pop
adc
les
aas
cs
adc
in
mov
and
mov
arpl
sbb
sbb
mov
scas
out
xor
push
jecxz
pop
lods
xor
sbb
push
xor
das
mov
pop
adc
aas
jb
mov
out
mov
adc
push
mov
jmp
shrl
pop
dec
insl
jmp
xchg
aaa
jo
dec
push
adc
adc
inc
lcall
pop
sub
fst
sbb
adc
mov
das
pop
cmc
test
pop
mov
dec
in
bt
and
jge
xor
dec
push
lcall
jle
mov
mov
mov
ljmp
adc
ja
cmpsl
xchg
jno
xchg
sbb
or
dec
inc
cltd
call
icebp
or
inc
gs
clc
pop
or
fidivl
jmp
or
sarb
repnz
sahf
adc
lea
push
push
jg
cmp
or
push
push
es
adc
cld
movsb
xchg
push
cmpb
inc
les
xchg
mov
pop
mov
push
loop
enter
inc
mov
add
loop
jge
or
xorb
loope
icebp
lret
lahf
push
rorl
in
shlb
cmpsb
xor
mov
hlt
xchg
jle
xchg
mov
mov
and
in
daa
jno
xchg
mov
mov
imul
fisttpl
xor
ret
jle
dec
and
add
imul
mov
mov
mov
pop
lcall
mov
cmp
and
enter
sub
shl
jb
loope
or
lock
cmc
shrb
lcall
jb
ret
daa
jno
mov
ja
pop
jp
lahf
addr16
push
insl
insb
dec
push
in
in
addr16
loope
pop
mov
cmp
dec
sbb
xor
cwtl
push
adc
xchg
in
lcall
xlat
mov
inc
int
dec
jae
loopne
adc
aas
outsb
jg
adc
pop
adc
sti
or
lret
pusha
push
sbb
sti
leave
cmp
sbb
addb
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
push
mov
sub
push
push
icebp
inc
sbb
testb
loopne
jae
mov
imul
adc
repz
add
arpl
orl
or
enter
push
ret
inc
inc
mov
lock
or
addr16
push
pushf
les
cli
pop
pop
ljmp
stos
je
out
and
and
aaa
cmp
lods
data16
fcomps
movb
or
bnd
roll
sub
aas
movsl
adc
test
and
or
adc
xchg
lcall
xchg
mov
mov
adc
cmpsb
popf
sub
mov
adc
jp
stc
sub
jl
dec
aas
pop
icebp
outsb
mov
adc
mov
je
test
mov
push
add
imulb
sub
imul
mov
mov
jecxz
xchg
push
das
jb
lds
and
add
push
jecxz
loopne
testl
mulb
out
adc
push
add
or
push
inc
sti
stc
icebp
xchg
outsl
sti
or
mov
lret
xor
repz
pop
pushf
add
xchg
or
pop
jb
xchg
jno
mov
mov
popf
xor
mov
and
add
je
jbe
sarb
add
loopne
cmp
sarl
cmpsb
sbb
dec
jne
ret
jno
and
aas
ljmp
ja
mov
jnp
pop
and
dec
jle
jl
jl
mov
cmpsl
inc
pop
jecxz
cltd
adc
scas
inc
jp
sbb
add
hlt
dec
stc
xchg
adc
in
sbb
sub
push
aaa
mov
mov
daa
iret
gs
cli
in
fdivrl
cld
dec
cli
jns
repz
inc
or
insb
xchg
out
out
rorl
push
push
aas
dec
add
xchg
or
mov
ja
fwait
add
mov
lret
rclb
in
pop
xchg
sbb
jecxz
fimuls
jmp
xchg
mov
pop
jnp
jns
lret
mov
lock
adc
movsl
ret
inc
scas
cmpsb
test
and
inc
pop
jns
inc
pop
cs
inc
push
jne
repnz
rcrl
sub
xchg
sub
mov
sub
mov
xlat
sbb
mov
and
das
mov
scas
dec
push
adc
mov
arpl
sbb
jbe
mov
ret
xor
xchg
sbb
sbbl
scas
daa
add
rolb
imul
adc
cmp
xchg
roll
jns
lods
pop
clc
mov
lcall
xchg
lcall
fcmovb
push
out
sub
test
ret
fcompl
std
mov
dec
dec
and
pop
cmp
push
push
loope
pop
aam
lea
lods
and
sub
sbb
add
lret
int3
hlt
pushf
mov
inc
loopne
addr16
in
adc
pop
mov
clc
xlat
push
sahf
sub
stos
xor
daa
shrl
push
cld
sarl
aad
addr16
jns
cli
pop
xchg
push
jns
push
mov
xchg
add
cs
adc
call
addr16
or
inc
inc
iret
shrb
or
pusha
invd
ds
push
xlat
je
subb
jecxz
into
push
xchg
mov
leave
add
and
adc
mov
stc
cs
adc
incb
out
adc
mov
pushf
mov
sub
pop
dec
inc
mov
jb
adc
sub
xchg
dec
pslld
out
ret
int3
lret
mov
out
repz
xor
pop
mov
out
repz
pop
loopne
inc
xor
cmp
dec
fdivrl
xchg
pop
dec
mov
xchg
xchg
arpl
push
mov
push
jmp
xor
in
insl
fnsave
int
repnz
pop
rorb
out
adc
mov
cmp
mov
adc
lock
mov
ja
data16
shlb
xchg
pop
loope
or
xchg
testb
cmp
dec
and
cmc
rcrb
and
jmp
add
jo
gs
test
lret
sahf
cld
ss
ljmp
jmp
bnd
fsubrs
pop
sub
ret
es
add
stos
insb
mov
stos
fdivl
cmp
mov
and
xlat
and
cmp
fcoml
mov
scas
push
imul
test
xor
sarb
rcrb
inc
inc
jnp
mov
xchg
andb
cld
pop
fadds
lret
lret
hlt
push
cmp
and
fs
jnp
arpl
inc
sahf
adc
popf
adc
jg
test
add
popa
mov
jmp
jno
aad
mov
jne
mov
cmp
lahf
sub
pop
test
inc
sbb
test
or
popf
add
aad
cltd
sub
jne
les
loopne
mov
sub
and
rorl
xchg
jge
into
mov
push
icebp
xchg
ljmp
or
xor
leave
sarb
nop
loop
xchg
dec
sub
cmpsb
call
xchg
pop
cmp
mov
mov
imul
ja
lods
loope
xchg
popf
adc
insl
push
dec
fimull
imul
mov
mov
je
test
jmp
push
lret
dec
xor
sub
lods
xor
daa
sbb
aad
out
xor
pop
adc
cmp
mov
call
loop
cmp
test
and
sbb
pop
add
dec
xchg
popf
fidivs
imul
mov
scas
fbld
js
push
nop
adc
imul
int3
inc
cmpl
leave
jp
mov
xlat
push
lock
fs
je
mov
adc
xor
cmp
sbb
jmp
popf
xor
jbe
xor
xor
outsb
lahf
in
adc
adc
fldcw
lods
cmp
jno
pop
inc
call
addr16
adc
shlb
les
sbb
push
daa
cmp
add
imull
or
xchg
mov
jae
outsl
lcall
into
insb
movsl
lcall
dec
int
fisubl
mov
shll
push
lret
push
xor
insb
sarb
daa
and
loope
xchg
ds
pop
test
xchg
out
outsl
cmp
bound
mov
ljmp
and
pusha
sbb
js
in
mov
push
sub
push
lahf
push
jns
gs
pop
sbb
mov
mov
insb
lock
push
or
push
int3
jo
in
xor
ja
add
and
jmp
cmp
popf
mov
cmp
stc
sbbl
jle
cmp
adc
or
int
cmc
and
xor
lods
xchg
xlat
jne
nop
mov
mov
sub
mov
jbe
sub
dec
mov
jl
imul
xchg
out
aas
test
out
jl
cmpsl
mov
ja
xor
or
arpl
xchg
jmp
lods
xor
gs
push
out
out
mov
inc
mov
cltd
jmp
cltd
pop
sub
imul
xorl
pop
inc
es
scas
dec
cmp
and
inc
test
clc
add
shl
int
in
test
outsb
scas
aaa
add
mov
shrb
aas
lods
out
inc
sti
cmp
adc
mov
adc
std
cmp
pop
jg
decl
flds
stos
cmp
jge
cmp
js
fiadds
mov
pop
adc
mov
push
loop
iret
sbb
outsl
mov
enter
int3
add
into
cmpsl
cli
jmp
adc
rol
inc
and
outsl
push
scas
js
mov
push
adc
xchg
lock
mov
insl
std
lock
dec
rcll
daa
mov
outsb
xor
mov
mov
jl
int
jb
lock
xor
fcom
jne
mov
jle
sbb
mov
dec
pop
pop
arpl
insb
or
xor
add
xchg
jae
cmc
mov
addb
and
mov
xor
ret
dec
aam
mov
push
jne
repz
shll
inc
or
ja
aaa
push
mov
lcall
out
xor
adc
aaa
out
outsl
cli
xor
test
xlat
out
rcll
push
and
mov
mov
addr16
cmp
jae
mov
sbb
xchg
and
or
xchg
push
jae
dec
mov
movb
sahf
inc
mov
sbb
clc
addr16
ret
mov
pop
lods
adc
mov
mov
lahf
push
ds
xchg
xor
ljmp
mov
mov
cmpb
push
xor
outsb
scas
mov
add
inc
sbb
lret
or
clc
ret
mov
imul
mov
mov
add
notb
decl
les
arpl
sbb
fcmovb
mov
mov
rcrb
cmp
lret
mov
lcall
mov
ret
jecxz
iret
je
add
mov
push
clc
fcomp
in
cwtl
mov
mov
push
inc
icebp
xchg
fs
movsb
jns
pop
adc
inc
and
mov
sbb
in
fimull
adc
jecxz
or
inc
lret
fs
jg
xchg
hlt
inc
xlat
push
add
mov
pop
js
and
mov
cmp
pushf
jae
imul
adcb
lock
cmp
fs
lds
scas
push
dec
std
cld
fstpl
mov
out
mov
in
mov
xor
popf
mulb
pop
shrb
inc
mov
mov
test
cld
push
aas
daa
sti
sub
or
repnz
jb
sbb
aam
imul
call
lahf
das
xchg
fs
pop
sbb
pop
in
das
pop
fists
adc
out
jbe
daa
cwtl
sbb
outsl
jno
adc
jmp
sarl
jb
mov
in
sahf
int
sub
rcrb
add
inc
cld
popa
lds
cmc
mov
ss
sub
rcll
roll
push
into
sbb
dec
nop
sarl
xorl
pop
cmp
sub
ljmp
and
lcall
pop
xor
pop
leave
popl
les
ljmp
dec
inc
or
mov
arpl
loopne
and
in
xor
lods
daa
bound
and
pop
inc
aad
pop
loope
rorl
pop
ljmp
rcll
adc
xor
je
mov
loopne
push
scas
into
lahf
mov
cmp
dec
sub
das
out
push
lret
insl
inc
cli
mov
adc
jbe
xchg
inc
pop
cmp
xchg
loopne
sbb
and
push
cli
cld
sbb
mov
push
pop
dec
jecxz
add
pusha
dec
call
lret
jbe
test
and
sub
and
ror
insl
mov
rorl
pop
sub
mov
mov
sub
sets
mov
rcll
pop
leavew
pop
add
ds
jmp
aad
push
rcrl
xchg
adc
push
clc
loopne
daa
orl
lret
cmp
mov
mov
sbb
xchg
pop
pusha
into
ret
mov
mov
add
sbb
inc
pushf
sub
outsb
test
cmp
loopne
ret
andl
popa
xlat
xor
jb
add
push
add
dec
inc
mov
sbb
ja
xchg
pushf
lea
jl
rclb
lahf
ret
mov
pop
sarb
fmull
mov
jno
cmpsb
fs
mov
adc
xchg
adc
ret
cmp
les
loopne
xor
js
jae
mov
jno
and
jl
out
pop
lret
mov
inc
adc
scas
lret
movsl
xor
fistpl
push
xor
outsb
adc
nop
hlt
fisttps
sub
popf
cltd
cli
repnz
sbb
test
fsubrs
xchg
jecxz
or
inc
jo
notb
fnstenv
gs
into
sub
or
push
xor
dec
in
icebp
pusha
xchg
xchg
adcl
jno
aad
stc
add
loopne
and
stc
xchg
inc
fst
dec
xchg
cmp
pop
fdivl
out
jp
sbb
rorl
lahf
cmc
std
lcall
aam
lds
cld
movsb
pop
mov
pop
mov
add
dec
add
sub
clc
jg
in
jno
push
sti
mov
scas
shl
fnstsw
fisttpll
cld
xchg
jo
sarb
in
sbb
addr16
mov
mov
push
repnz
ja
mov
or
das
ja
repnz
int
sub
jne
sub
mov
push
mov
rcrb
aaa
cmp
enter
mov
mov
loope
fs
inc
mov
push
mov
push
out
dec
shrl
movl
mov
jg
pop
fnstenv
enter
push
inc
and
clc
xchg
stc
es
sub
das
test
arpl
out
imul
mov
jne
fcomi
jns
and
dec
mov
mov
fists
iret
or
sbb
shlb
cmp
shll
push
or
push
dec
stos
mov
push
ds
outsl
inc
loopne
ljmp
rsm
dec
mov
inc
out
mov
mov
aam
jle
in
call
lods
fwait
loop
push
cmc
repnz
movsl
mov
lods
push
pop
fwait
mov
frstor
sub
in
xor
cwtl
pop
fwait
mov
lret
sbb
xorb
jbe
dec
shrb
dec
xor
pop
and
jnp
addl
push
negl
aad
fistps
or
leave
es
push
daa
jge
notb
mov
scas
movsb
push
push
addr16
shl
push
xchg
stos
xchg
clc
jl
ja
or
push
mov
jp
mov
jno
sbb
sbb
push
mov
out
nop
insb
push
fstps
mov
outsb
xchg
cld
or
lds
sub
jns
rcrl
std
or
xor
pop
std
sar
push
dec
out
bound
sbb
out
cmp
inc
sbb
push
mov
bound
or
int3
aas
arpl
mov
push
out
fst
call
leave
fdivl
scas
cmpsl
mov
cwtl
push
sub
cli
push
add
mov
xchg
and
pop
ljmp
filds
adc
cmpsl
test
cmp
xor
cmp
clc
inc
fs
adc
orl
add
cvtps2pi
loope
sbb
loope
push
xchg
cmp
push
popa
jmp
fwait
push
mov
adc
das
add
or
inc
jecxz
outsl
dec
bound
push
cltd
icebp
or
xchg
ja
jnp
pop
outsb
sbb
insl
push
repz
mov
mov
movups
cli
xchg
out
add
imul
or
pusha
jnp
jmp
incl
xor
inc
add
jecxz
xchg
stos
inc
les
scas
arpl
mov
push
pop
pusha
xchg
and
cmp
lret
out
movsb
inc
icebp
add
cmpsl
je
jns
jb
das
test
dec
push
pop
inc
dec
pop
sub
std
and
fnstenv
test
adc
ss
ret
add
pop
daa
xor
adc
or
dec
xchg
jnp
out
jno
dec
ffreep
cld
jb
inc
pop
repz
daa
push
loopne
mov
mov
jmp
enter
inc
mov
lock
mov
arpl
lods
fmull
fisubl
xor
ljmp
xchg
cmp
and
adc
repz
bound
popa
mov
mov
lock
or
sbb
mov
adc
cmp
pop
lods
mov
inc
popf
or
test
jecxz
arpl
sbb
pop
movsl
loope
negb
lcall
les
scas
adc
les
add
or
popa
mov
pop
mov
cmp
ret
scas
lock
jl
cltd
pop
mov
imul
dec
fmuls
sbb
mov
sub
insb
fs
gs
dec
mov
or
pop
ljmp
cmp
nop
add
adc
jne
mov
sbb
aad
and
es
mov
js
gs
bound
not
sub
scas
je
fwait
xchg
stos
cmp
loopne
xchg
fcmovnu
scas
mov
insb
lock
jne
xor
test
push
dec
ja
pop
mov
ret
or
jns
mov
jle
pushf
je
lods
lods
clc
jmp
cmpsl
leave
fcoms
adcl
fwait
ret
mov
mov
push
jns
insb
cmp
xchg
xchg
enter
icebp
insl
pop
and
push
pop
je
cmpsl
ss
dec
lcall
aas
mov
les
insb
cltd
repz
jmp
sub
clc
sub
xorl
inc
and
and
jnp
imul
repz
push
mov
outsb
or
pushf
je
or
jmp
pop
out
cwtl
add
ret
out
adc
sar
jno
add
popf
fcoms
repz
orl
mov
mov
repz
mov
inc
jne
mov
add
pop
xchg
cmpsl
inc
sub
lods
pop
jbe
addl
pushf
lods
pop
imul
sbb
sub
sbb
fmull
push
pop
add
fiadds
cmp
add
xchg
loopne
outsb
sahf
cld
adc
loop
loope
push
xor
cmp
pop
add
push
js
mov
dec
or
mov
les
fisubrs
out
xor
ljmp
or
cmpsb
ljmp
pop
push
xchg
add
int
pop
sahf
cmpb
xchg
push
cwtl
mov
push
inc
rolb
sbb
cli
sbb
inc
sbb
fs
sahf
sahf
jno
enter
and
fisubs
push
pushl
adc
fxch
movsl
sbb
pop
pop
scas
pop
iret
xchg
ret
dec
sarb
sti
adc
popa
mov
add
adc
addr16
negb
rcl
jae
shrb
adcb
jo
popa
or
xchg
add
mov
lods
or
or
xchg
andl
imul
mov
popf
js
fnstcw
add
daa
js
adc
xor
push
inc
movsl
and
movsb
rorl
loop
mov
lret
xlat
insl
test
pop
cltd
mov
das
mov
testb
sbb
int
pop
out
adc
faddl
lods
mov
bound
pusha
lods
push
and
mov
or
sub
out
sti
adc
mov
arpl
pop
lds
lods
aaa
lea
pop
mov
mov
xchg
shrl
scas
addr16
dec
les
add
pop
icebp
jg
xor
hlt
xchg
jmp
orl
or
inc
push
cmp
dec
mov
mov
jmp
fstpt
scas
jmp
daa
jp
les
sbb
xchg
mov
lret
mov
and
sub
xor
xor
adcl
imul
addb
bound
in
dec
xorl
xchg
dec
adc
inc
adc
mov
inc
mov
imul
data16
cli
xchg
inc
mov
sbb
mov
cmp
sahf
adc
fisttpll
add
aad
sbb
cld
jmp
mov
add
movsl
iret
mov
sbb
cmc
lret
mov
clc
push
xchg
dec
outsl
rolb
xlat
lret
iret
dec
cmp
cmp
inc
testb
in
test
adc
lods
add
push
jne
jne
pop
jmp
fs
aad
test
cmpsb
insl
cltd
pop
mov
jge
jecxz
lods
repnz
inc
or
jge
add
fisttpl
movntq
pop
mov
iret
mov
jge
xchg
out
cmp
or
lcall
repnz
leave
jle
hlt
outsl
insl
out
shrl
aam
sub
aad
and
insb
mov
ja
sarl
xor
jnp
sbb
ret
leave
mov
dec
cmp
shrb
jl
bswap
pop
push
lahf
stos
jb
stos
jecxz
xchg
lods
xor
icebp
jns
pop
push
cli
movsb
dec
cmpsl
arpl
outsb
push
dec
jo
icebp
push
cmp
and
repnz
dec
xor
push
lcall
mov
adc
dec
xchg
ret
xchg
dec
push
xchg
jge
fdivrs
inc
in
cmp
es
push
out
test
add
in
mov
fcompl
lahf
mov
idivl
ljmp
int
push
sti
jecxz
popf
pop
rcr
pop
mov
dec
rcr
out
xchg
lods
imul
sbb
aad
adc
xor
dec
push
rolb
xchg
sub
out
jae
cltd
stc
in
loope
divb
out
lock
cld
movsb
push
lock
xchg
push
xor
je
lret
cmpsb
lods
or
enter
and
out
pop
or
clc
cmpsb
scas
incb
cmp
sub
sbb
negb
mov
lret
jmp
push
mov
ss
xlat
icebp
test
mov
push
xor
add
aaa
cld
out
mov
jo
pusha
mov
sahf
jnp
inc
mov
jecxz
test
mov
and
outsl
loopne
scas
pop
jmp
in
in
dec
stc
sbb
mov
popa
repnz
xlat
xchg
mov
aaa
aaa
jp
push
insl
aas
jle
into
push
aam
sbbl
inc
cmp
icebp
jmp
dec
int3
pop
andb
pop
out
imul
and
fiadds
push
sbb
addr16
cld
jmp
and
jmp
stc
out
mov
and
mov
cmpsb
addl
cmp
out
push
jmp
subb
sbb
gs
jl
pushf
ljmp
cli
mov
mov
xor
and
mov
dec
mov
mov
sbb
dec
inc
icebp
xor
movsb
mov
sahf
sub
movsl
in
mov
lods
pop
push
adc
std
subb
xlat
insb
inc
lods
dec
add
stc
xlat
mov
fcmovnb
rclb
fs
mov
hlt
mov
mov
out
aad
jmp
mov
stos
jmp
adc
mov
test
add
sub
jbe
xor
push
cmp
push
stos
xor
sbb
shrl
hlt
jl
inc
fnstenv
cwtl
mov
stc
gs
je
scas
test
daa
cs
cmp
loop
dec
push
xor
ja
clc
dec
xor
push
or
jne
jbe
fisubrs
mov
stos
mov
mov
mov
xchg
cmp
mov
mov
jns
inc
jb
push
sti
mov
shlb
insl
insl
jns
jmp
and
inc
jnp
aam
dec
ljmp
add
pusha
or
jg
loop
repnz
mov
push
sbb
sarb
and
test
adc
jp
popl
sbb
push
imul
or
js
inc
sbb
ljmp
sbb
jle
out
sub
aam
imulb
push
leave
data16
mov
dec
dec
arpl
out
ss
fcompl
pop
enter
insl
orb
sar
scas
lods
mov
inc
sub
fs
adc
inc
cmp
cwtl
mov
lds
movsl
add
repnz
cli
push
or
scas
xchg
and
test
pop
iret
or
or
sub
jbe
jle
test
jle
ret
sbb
js
dec
shrl
jno
mov
xchg
int3
insl
fs
lea
jo
mov
and
repz
inc
int3
sti
push
jb
es
sbb
imulb
test
sbb
jmp
adc
mov
dec
sbb
pop
out
cmp
adc
add
movsb
or
pusha
dec
sbb
adc
or
movsb
lret
or
lahf
pop
xchg
popaw
lods
shll
mov
hlt
inc
sub
inc
fldt
inc
lcall
sub
adc
add
xor
stos
mov
cwtl
andb
jae
aad
inc
sar
dec
adc
inc
div
xor
insl
and
jbe
add
popf
mov
es
jg
and
aam
sarb
out
cwtl
pop
bnd
lods
push
or
fnsave
pushf
jg
and
ss
xchg
mov
jl
dec
shrl
mov
xlat
sub
repz
pop
std
mov
jae
xchg
pop
lahf
rol
cmpsl
leave
xchg
and
pop
pushf
xor
pop
out
int
and
cmc
fsubr
adc
dec
pusha
or
cmp
popf
fisttpll
subb
mov
jbe
rep
dec
cmp
xchg
push
cwtl
mov
test
lcall
mov
inc
sub
adc
cmpsb
ret
imul
cmp
and
movsb
popa
addb
jmp
mov
mov
xchg
movsl
popa
jno
inc
daa
mov
sbb
jmp
jp
mov
sbb
repnz
inc
movsl
sbb
dec
or
dec
jbe,pt
popa
movsl
cmp
in
or
rcrb
xlat
ds
xchg
les
jb
jbe
rcrl
xor
iret
mov
pop
pop
mov
aad
addb
jbe
incl
stos
and
std
adc
inc
arpl
bound
int3
pop
and
sub
mov
rclb
sbb
dec
pop
xor
ja
pop
idiv
call
mov
or
jae
imul
lcall
jbe
pop
movsb
mov
aam
cli
lock
adc
hlt
pop
stos
iret
test
ret
int3
dec
inc
rcrb
jne
dec
fisubrl
cs
pop
xor
pushf
lret
inc
rorl
loope
pop
adc
mov
xor
fwait
lea
adcb
aam
sti
add
hlt
ret
cmp
js
cmp
or
aad
sarl
xor
xor
lds
imul
pop
lea
out
jb
fmulp
inc
mov
mov
sbb
xchg
jle
leave
dec
sbb
jecxz
scas
xlat
mov
xorl
enter
stos
push
pop
sub
pop
add
imul
ljmp
pop
jbe
jp
bound
lahf
and
hlt
das
adc
out
inc
sti
movsl
aam
xchg
ret
dec
fwait
and
push
inc
jmp
fcoml
nop
cmp
xor
stos
or
mov
push
imul
stos
push
fldl
or
mov
icebp
mov
mov
pop
in
inc
xor
jno
leave
out
pop
movsb
test
xchg
es
aaa
popf
pop
es
add
sbb
aas
fnstcw
xchg
clc
cmp
ficomps
mov
push
mov
add
and
push
jge
fsubl
or
sti
jne
add
popf
popf
mov
test
adc
xchg
jg
cmp
or
icebp
rol
and
mov
incb
inc
lret
adcl
jo
lea
test
xchg
shrl
jae
sub
xchg
test
insb
mov
dec
sbb
lods
pusha
mov
sbb
jo
loope
rorl
mov
jo
push
sbb
xor
int3
out
pop
jmp
cld
mov
sti
inc
iret
roll
sbb
leave
push
mov
cmc
pop
int3
sbb
jle
push
inc
pop
jmp
fdivr
sbb
xlat
pop
insb
push
lret
aaa
shlb
cmp
add
xor
int
pop
icebp
xor
cmpsl
test
stos
js
xchg
popa
sub
inc
daa
in
jne
fcomps
lret
lcall
xor
xor
js
out
xor
lea
inc
sub
add
pushw
rclb
idiv
cmp
ljmp
clc
test
mov
je
xor
jne
sub
lock
inc
out
push
gs
mov
mov
dec
adc
sub
mov
js
hlt
xor
jge
inc
lock
xor
cs
mov
add
movsb
scas
push
mov
ficoms
ret
push
pop
inc
int
lret
adc
test
sub
imul
subb
aad
int3
ffreep
inc
mov
icebp
add
aaa
popa
out
push
dec
cmpsl
jae
add
adc
lahf
xchg
sahf
in
cltd
jmp
xor
aam
nop
clc
divb
outsl
outsl
mov
push
das
pusha
icebp
ss
pop
pop
fsubl
mov
jecxz
stos
std
inc
cs
jo
inc
fildll
addb
or
jmp
add
pop
push
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
mov
lret
lret
sub
push
push
push
xor
jbe
sub
fldcw
mov
dec
aas
enter
mov
rcll
push
scas
sub
repz
imull
test
jp
sub
movsl
mov
js
or
movl
push
sbb
and
cmp
inc
mov
jno
xorl
or
scas
sub
add
or
pop
jnp
mov
push
inc
lcall
and
fmull
mov
divb
adc
outsb
dec
push
std
repz
cmp
xor
add
or
hlt
dec
loopne
lock
add
xor
push
bound
sbb
jne
pop
dec
add
icebp
cmpsb
ror
rcl
das
pop
cmp
jp
lcall
inc
xor
sbb
mov
mov
stos
mov
insl
or
rcl
adc
push
cmpsb
mov
push
sbb
inc
fwait
cltd
xor
jmp
inc
outsl
push
je
popl
mov
je
test
movsb
rcll
pushf
movsl
sub
jmp
lods
sub
cld
in
pop
adc
inc
mov
mov
sub
or
cwtl
std
xchg
int3
test
clc
mov
pop
out
ja
les
lea
dec
scas
aad
jb
and
adc
inc
pop
dec
adc
cmpsl
fsubs
mov
jp
lods
push
sub
call
rorl
jmp
sarb
push
lret
lret
push
pop
ljmp
sbb
popa
mov
jae
nop
xchg
fists
mov
pop
rcl
mov
test
push
cmpsb
add
in
jmp
push
insl
fcomps
enter
lods
lds
sbb
mov
inc
shlb
jecxz
mov
inc
pusha
mov
cltd
lahf
xor
sbb
cmp
jle
pop
and
movl
je
xor
mov
ret
sahf
mov
sahf
add
adc
in
mov
dec
insb
mov
das
sub
or
test
pop
xlat
xchg
xchg
mov
fcmovnbe
lcall
leave
int
aaa
cmp
insl
or
mov
test
lea
inc
xor
xchg
ret
mov
sbb
inc
test
jge
pop
xor
dec
pop
jne
stc
sbb
flds
outsb
es
pop
pop
xor
hlt
jl
push
push
js
jmp
add
cmc
mov
into
or
fisttps
mov
dec
imul
jnp
ja
ss
fistpl
in
popf
mov
add
jge
outsl
lods
loope
ss
loope
test
cld
sub
call
fstpl
scas
nop
xchg
repz
cli
or
ret
fiaddl
ret
inc
inc
lahf
inc
jmp
insb
scas
rol
adc
scas
and
and
popf
inc
mov
inc
xor
sub
ret
lock
das
sahf
pop
inc
inc
mov
and
jmp
into
or
mov
mov
adc
dec
nop
push
sub
dec
add
mov
loop
mov
lret
and
push
popf
xchg
movsl
sub
out
pop
repnz
push
fists
jg
addl
add
rcrb
jmp
add
arpl
dec
jno
jne
inc
jb
pop
leave
rcrl
cs
fists
std
fwait
sbb
cmpsb
fwait
or
shll
fcmove
iret
daa
aad
or
jg
enter
icebp
xor
int3
iretw
lret
push
add
imul
mov
movl
scas
or
sar
pusha
clc
xchg
movsl
stc
leave
loope
mov
sub
mov
adc
add
sar
adc
andl
mov
jbe
bound
lods
ss
mov
xchg
adc
das
andb
dec
fnstsw
in
fcoml
ja
jecxz
dec
arpl
xlat
dec
sub
int3
add
cmp
add
xchg
add
and
xchg
les
outsb
jge
mov
repz
fidivl
sti
dec
xchg
mov
scas
or
roll
cltd
mov
mov
mov
adc
adc
push
test
push
mov
fsts
fsubrs
jle
pop
jno
shrb
mov
lea
mov
enter
nop
jbe
sti
cltd
push
pop
dec
jnp
dec
push
lods
imul
aad
xchg
sbb
ja
fdivrl
mov
cmp
xchg
and
add
arpl
push
jp
push
js
gs
out
jge
enter
loop
inc
or
icebp
xor
icebp
movsb
lea
leave
add
orb
sbb
or
pop
jno
imul
mov
inc
xor
xchg
lret
outsl
test
mov
and
scas
push
stos
add
rorb
xchg
lock
adc
mov
lods
jg
mov
lcall
or
leave
xchg
push
mov
jbe
cwtl
push
sti
and
inc
pop
inc
sbb
cld
into
or
test
jle
xchg
sti
in
xchg
or
js
xor
aam
lods
and
jne
stos
lcall
push
or
cld
daa
xchg
shll
inc
xchg
ljmp
dec
out
xor
outsb
add
arpl
fwait
cwtd
jle
daa
rcrl
xchg
xchg
sbb
push
push
inc
cmpb
pop
or
xor
xor
mov
ja
cld
icebp
fsts
pop
mov
dec
pop
sahf
dec
push
sub
and
test
push
and
not
mov
mov
add
pop
sbb
pop
in
dec
or
or
sub
inc
cli
leave
stos
orb
sarb
push
push
out
sub
jbe
inc
lods
ja
cltd
sub
icebp
inc
dec
dec
pop
lret
pop
test
jns
loop
mov
jb
ljmp
out
das
sarb
push
sub
loope
inc
or
lods
add
xchg
loop
push
js
xor
dec
mov
cmc
xchg
comiss
mov
add
mov
das
fldl
and
insl
push
test
ds
pop
mov
lock
adc
inc
into
mov
lock
fidivrl
sub
into
shrl
cmp
std
sub
xchg
push
lods
ret
nop
enter
push
repnz
and
rcrb
xor
pop
jbe
cld
call
or
cmp
dec
sbb
add
jle
xabort
cmpl
jae
mov
mov
dec
lcall
adcb
xorl
mov
stos
popf
pop
dec
or
rclb
pusha
sbb
cmc
movl
daa
pop
test
mov
andb
fbstp
mov
rcrb
test
in
xor
lods
insb
cmpsl
dec
add
mov
xor
adc
fnstcw
and
or
in
mov
mov
aas
fistl
lahf
jbe
ret
xlat
mov
iret
inc
lods
negb
add
cwtl
dec
inc
sub
adc
subl
xchg
in
sbb
out
mov
jns
or
add
out
inc
shrl
cmp
lods
shlb
js
popa
popa
std
aas
aam
loop
push
popf
jno
es
mov
mov
nop
inc
inc
fistpll
shrl
pusha
and
arpl
out
sub
cmp
pop
lahf
fsubr
scas
int
lahf
push
sbb
add
adc
jns
movsl
std
mov
adc
sbbl
aad
lret
out
push
mov
mov
fcomi
cmp
inc
push
jae
dec
mov
shlb
jb
fmull
test
test
jle
or
mov
add
cmp
sub
pop
sbb
add
jo
movsb
mov
inc
cmp
pushl
jbe
insl
or
and
daa
push
or
xor
cltd
aas
lret
and
xchg
mov
xchg
cltd
xchg
jb
push
jmp
jge
out
fldl
jge
cmp
in
inc
add
push
imul
jmp
arpl
aaa
fmulp
adc
cmp
das
shll
mov
fcomps
sbb
pop
lock
inc
cmpsl
mov
or
cmp
pop
add
push
push
jmp
loope
push
cmp
push
or
loope
push
sarl
lds
stos
jecxz
enter
fidivs
dec
inc
fbld
cwtl
leave
sub
and
out
div
pusha
jns
push
outsb
test
adc
insb
xorl
pop
std
adc
arpl
andb
imul
rorb
cmpsb
roll
fstpl
mull
xchg
adc
into
lahf
inc
aaa
fmull
dec
push
xchg
cmp
xchg
jmp
push
adc
or
nop
mov
pop
in
pop
imul
imul
lods
pushf
inc
fcomi
adc
xchg
jno
add
in
in
mov
das
mov
fstl
stos
aas
mov
pop
xor
lret
or
cld
xchg
jl
inc
stos
or
les
mov
fnstcw
jb
inc
sbb
xchg
lret
add
scas
adc
ss
es
lahf
clc
sub
bound
aaa
outsl
repz
orb
shl
lret
xchg
shll
and
jne
push
and
cltd
xor
dec
std
insb
mov
inc
mov
mov
loope
inc
cli
sub
test
sub
ds
pop
xchg
pop
in
rclb
push
inc
loopne
jno
into
push
cmp
xor
push
sbb
pop
fmulp
mov
xlat
test
adc
inc
sub
mov
rcrl
aam
daa
jnp
out
push
pop
bound
push
fsubrs
and
mov
out
imul
pop
rcrb
addb
cmp
mov
mov
jns
add
shll
xchg
fwait
lret
int
pop
push
mov
xchg
mov
int3
mov
daa
jne
loopne
int3
mov
call
lods
lea
push
mov
push
int3
or
roll
pop
mov
shrl
movsl
jno
mov
pop
push
xchg
roll
xchg
fdivl
dec
aad
xor
inc
xor
dec
pop
addr16
sar
test
and
icebp
xor
popa
cli
adc
mov
lds
int3
sub
movsl
add
sbb
push
push
pushf
es
xchg
mov
insl
mov
stos
hlt
in
lds
daa
mov
enter
addr16
xchg
imul
insb
mov
sbb
pop
nop
mov
mov
cli
or
cwtl
dec
fadds
fstpl
push
jl
or
daa
jns
std
arpl
sbb
rcrl
sbb
or
cmpsb
bound
xchg
mov
push
inc
mov
icebp
adc
cli
fldt
jmp
mov
xchg
mov
in
cltd
pop
push
jmp
push
add
sti
adc
xor
mov
aaa
cmp
sub
repnz
xor
xlat
addr16
pop
and
cmp
adc
les
sbbl
into
in
fistps
call
adc
je
xchg
addr16
and
xor
inc
out
adc
vmwrite
mov
or
leave
insb
xchg
push
sbb
lcall
pop
inc
sub
jmp
sbb
mov
sbb
push
es
mov
xchg
aam
push
xor
mov
outsb
int3
stos
jbe
cltd
adc
push
clc
jmp
fimull
sub
div
jno
jbe
lcall
ljmp
pop
lods
adcl
inc
ds
test
jo
ret
gs
rorb
int3
arpl
fsts
repz
shl
push
inc
cs
inc
push
or
insl
js
arpl
out
and
mov
sbb
lcall
ljmp
and
push
push
movsl
cltd
imul
pop
xor
fs
mov
sub
je
dec
adcl
and
cmp
mov
jae
leave
stos
push
add
dec
xor
and
xor
cmp
add
repz
scas
cmc
sbb
mov
loope
sub
xchg
ja
scas
cmp
sbbb
xchg
icebp
add
repz
ds
xor
jl
xor
test
mov
xchg
sbb
add
out
sub
imul
pusha
cmp
les
cmpb
das
test
sub
je
jns
test
imul
jge
ja
jne
ror
ds
mov
mov
sbb
out
jnp
int
jno
jle
and
es
mov
and
fwait
cwtl
dec
cmc
xor
js
lretw
inc
lea
lock
sti
mov
dec
mov
mov
aaa
mov
add
out
cld
jl
insb
stos
addr16
inc
sub
cmp
hlt
dec
or
add
rorl
lret
pop
fisttpl
sar
push
bound
ds
into
dec
fstl
dec
cmp
dec
js
mov
adcb
sub
shl
ja
cltd
mov
inc
clc
mov
xchg
dec
cwtl
and
jp
cmp
jmp
fldl2t
dec
gs
xchg
sbb
jno
and
and
jbe
fwait
jns
inc
push
scas
roll
mov
call
sar
je
jb
stos
sbb
aaa
addb
jg
mov
fsubr
dec
cmp
push
lods
sbb
sub
xor
mov
in
aas
and
adc
shll
or
jecxz
jns
lea
push
sbb
cmp
mov
test
dec
mov
scas
das
pop
inc
orl
jnp
es
in
popa
addr16
cs
xchg
nop
test
out
mov
mov
addr16
daa
mov
sub
das
es
inc
addb
mulb
push
sub
jg
pop
out
push
enter
fidivl
nop
inc
loope
cli
test
cmp
je
aam
cltd
pop
and
push
and
jg
or
sub
xchg
stc
push
jp
sbb
sarb
mov
rorb
addr16
and
movsb
adc
call
lahf
cmp
sub
jns
clc
xchg
iret
jmp
stc
enter
lock
negl
jp
inc
push
popf
mov
mov
adc
xchg
fcom
ret
dec
gs
jmp
nop
lods
pusha
adc
pop
jmp
sub
add
cmc
mov
stc
xor
scas
arpl
test
jl
rol
sarb
pop
xor
mov
xchg
fs
popa
jnp
dec
sbb
shrl
mov
je
ret
sub
jmp
xchg
js
sub
and
dec
dec
sbb
js
mov
stos
not
jae
jge
adc
insb
ss
mov
mov
sbb
push
in
je
pop
adc
imul
xchg
or
mov
es
popf
xchg
inc
mov
movsl
jns
inc
xchg
es
andl
add
ficompl
xchg
movl
cmp
neg
add
dec
inc
sub
xor
adc
mov
xor
inc
cwtl
or
mov
popa
lods
andl
mov
dec
out
orw
lahf
or
cmpsl
adc
and
test
lret
std
aaa
xchg
daa
gs
mov
ljmp
push
pop
add
lret
sbb
lds
adc
pop
xchg
cmpsl
ds
inc
lods
leave
inc
mov
pop
push
add
sbb
testb
repnz
cmp
in
jae
pop
fs
inc
inc
add
push
adc
dec
scas
xlat
dec
cmp
fimull
ljmp
pop
xor
mov
jo
ss
xchg
mov
sbb
push
stc
popf
fistl
xchg
or
mov
push
movsb
xor
jl
out
stos
js
xlat
into
cli
or
add
and
pop
push
rolb
pop
xchg
into
and
push
mov
cmp
dec
pop
pop
xchg
lcall
out
mov
inc
jb
jb
jbe
fs
xchg
pop
mov
xchg
jb
lods
mov
ret
inc
dec
mov
lock
sub
cs
xor
dec
mov
dec
rclb
mov
das
scas
stc
int
add
mov
lods
out
movsb
leave
adc
push
gs
sub
adc
and
mov
call
push
xchg
fcoms
sub
jne
jae
push
inc
and
test
fs
push
push
sbb
cmp
out
add
pop
aas
testl
fst
inc
and
jns,pt
clc
icebp
stc
mov
inc
repnz
mov
pop
lods
pop
and
jo
lea
jecxz
xor
adc
jns
ficoms
dec
or
sahf
les
add
aam
push
insb
and
push
fcomi
int
lret
adc
in
mov
in
xchg
xor
cwtl
sar
push
sub
pop
jle
inc
setne
fsubs
stos
mov
and
cmpsb
xchg
pop
mov
ja
inc
cmp
jae
shll
mov
dec
push
xorb
pop
sub
pop
xchg
stc
aas
inc
mov
xchg
fcmovnu
nop
in
jle
arpl
test
call
hlt
push
mov
xor
xor
cmp
dec
repnz
xor
sbb
mov
inc
lods
sbb
dec
dec
jmp
iret
call
adc
xchg
repz
xchg
or
adc
mov
mov
out
test
or
inc
inc
pushf
pop
sub
stos
or
cmp
jae
clc
cmp
sub
mov
xchg
aad
or
jp
pop
xlat
mov
xchg
adc
add
jo
es
iret
lods
inc
arpl
lcall
cs
lea
add
xor
stc
ds
push
mov
push
push
push
pop
data16
xor
dec
scas
pop
mov
lea
ficoms
lret
push
out
push
push
or
or
mov
jnp
pop
divb
inc
or
ds
dec
call
sbbl
std
ret
xchg
cmp
pop
rclb
out
mov
inc
in
xor
ss
fisubrl
sub
arpl
lcall
loope
loop
cmp
int3
mov
xor
or
inc
dec
push
leave
negb
jnp
adc
js
ljmp
inc
lods
sbb
adc
cltd
notb
and
mov
movntq
out
stos
pop
and
loop
fisttpl
add
add
ja
mov
dec
inc
adc
inc
push
inc
pop
pop
jae
ffreep
or
dec
stos
mov
movsb
rclb
pop
inc
xor
testl
cld
mov
jle
stos
js
push
rclb
push
shll
lock
push
bound
dec
cmp
arpl
pop
sbb
cli
adc
mov
push
in
xor
dec
dec
sub
ret
or
ja
push
cmp
sbb
imul
xchg
xchg
dec
fsubr
aaa
imul
enter
out
fldl
sahf
or
outsl
insl
scas
lock
and
and
mov
ret
mov
psrad
aaa
adc
out
xor
flds
test
and
in
pop
mov
repz
int
iret
inc
in
movsl
out
push
dec
ror
into
pop
aas
dec
pop
push
dec
push
ljmp
int3
imul
mov
pop
nop
push
sub
lret
dec
sbb
add
adc
mov
push
cmp
movsl
jb
push
in
xchg
jbe
sbb
adc
es
mov
rorb
xor
pop
or
arpl
jg
jnp
out
dec
sub
mov
and
lods
lahf
fisubrl
dec
mov
aam
test
inc
imul
movsl
fwait
daa
insl
mov
inc
sarb
clc
and
daa
inc
enter
bound
mov
or
mov
dec
push
aaa
mov
insl
pusha
mov
fimull
or
mov
sbb
jecxz
pop
or
pop
cmp
fcmove
cmp
pop
addl
pop
jecxz
cltd
cmp
sahf
inc
fucomp
insl
sbb
dec
pushf
jg
push
or
icebp
push
stos
jae
loopne
xor
bound
sbb
data16
outsl
inc
sbb
pop
mov
xor
pop
rclb
inc
or
sub
mov
adc
jge
and
adcb
push
pop
fldenv
add
pop
fistpll
cmc
push
test
dec
sbb
xchg
xor
xlat
add
hlt
xchg
lods
add
es
jp
test
sub
insl
cmp
nop
mov
mov
mov
nop
inc
mov
dec
push
out
mov
xchg
inc
jbe
mov
dec
outsl
push
repz
outsl
mov
repz
adc
mov
std
push
inc
popa
cmpsl
dec
adc
rclb
notb
mov
sbb
cmc
call
enter
dec
inc
mov
fndisi(8087
cmc
mov
je
adc
jl
clc
movsb
ss
mov
cltd
mov
das
inc
movsl
pop
in
jb
and
lds
dec
lods
sbb
add
iret
addr16
ljmp
mov
out
lret
lret
adc
xchg
movl
push
cmc
pop
mov
mov
insl
mov
mov
sbb
int3
aad
ss
repz
sub
jno
out
test
sub
scas
enter
cmp
outsl
jge
test
inc
ljmp
scas
dec
int3
push
in
das
dec
adc
jecxz
sbb
je
leave
pop
stos
or
or
xchg
cmp
outsb
into
mov
xchg
xchg
aad
cli
push
lds
mov
into
and
inc
xchg
jae
mov
and
sarl
es
and
cld
xlat
sahf
or
sbb
jno
and
movsl
inc
data16
pop
mov
xlat
sbb
ja
sbb
xor
test
mov
scas
outsl
icebp
out
mov
sub
shl
andb
cmp
pop
push
aam
mov
or
cmp
mov
push
xor
loope
into
inc
cmp
repz
imul
push
add
loopne
aad
mov
ret
dec
stc
loopne
push
dec
push
out
cmp
outsb
popa
movsb
cmp
fsubrs
xchg
jecxz
clc
inc
xorb
pop
push
arpl
insb
add
andb
pop
dec
add
cli
repz
repnz
shlb
push
movsl
ja
push
push
insb
sbb
and
or
pop
jmp
cmp
add
mov
mov
orb
ret
xchg
mov
lret
rclb
es
lahf
xor
push
cmp
outsl
clc
call
xlat
mov
sbb
addl
test
or
push
mov
cmp
mov
push
mov
jns
daa
in
pop
daa
pop
out
sbb
cwtl
jl
idivb
sub
stos
and
mov
cld
test
dec
push
push
adc
test
call
cmp
push
inc
push
inc
aad
imul
ret
imul
dec
push
nop
xor
push
mov
mov
leave
jecxz
arpl
xor
or
fnstcw
stc
js
sub
jns
js
add
inc
mov
nop
xorb
lahf
sub
xchg
and
push
je
outsb
ja
lock
xchg
mov
mulb
or
sarb
pop
mov
jns
add
and
cmpb
ret
scas
je
dec
mov
dec
out
pusha
sub
repz
or
cmp
pusha
dec
loopne
lods
js
pop
stc
mov
push
push
ss
push
ljmp
shll
and
sbb
xor
sub
sbb
xchg
aad
add
jge
sahf
test
dec
in
aas
repz
add
push
in
out
jns
pop
aaa
aaa
dec
mov
lea
dec
xchg
pop
jnp
pop
xor
push
mov
mov
cli
jae
and
mov
fisubrs
pop
jecxz
cmpsb
fmulp
or
and
movsl
xlat
and
lret
mov
fstl
gs
mov
mov
fmuls
push
mov
add
jp
scas
adc
jne
popa
fadds
out
enter
jnp
mov
jnp
mov
fsubrp
lods
push
add
mov
jo,pt
mov
push
scas
or
ljmp
fdivrp
shl
push
lock
and
mov
pusha
pop
mov
cmp
adc
insb
push
fcoms
xchg
dec
push
jo
push
sub
push
stos
push
hlt
mov
jg
push
jle
in
jge
loope
jecxz
xor
adc
jl
cmp
divb
pushf
ror
add
sub
push
lods
mov
shl
test
loopne
pop
push
out
inc
leave
pushf
adc
loop
aam
mov
adc
sbb
push
and
mov
lds
mov
pop
cmpsl
fsubr
test
int
cmp
pop
dec
jl
fdivl
pop
mov
adc
mov
out
dec
mov
mov
and
mov
aad
in
xor
out
mov
or
mov
scas
das
xchg
dec
test
sub
dec
loope
popa
daa
sbb
and
push
mov
sahf
out
cmp
pop
add
adc
or
in
js
ljmp
ss
and
cmp
dec
arpl
frstor
and
out
push
cmpsl
mov
loopne
scas
add
out
adc
imul
je
push
gs
daa
xor
les
jno
adc
enter
xchg
pop
popa
sahf
out
std
lea
pop
push
mov
ja
ret
push
aas
and
dec
ret
mov
xchg
and
xchg
sbb
outsb
dec
sbb
enter
xchg
inc
and
mov
xchg
mov
xchg
push
jbe
fdivrs
stos
jge
dec
pop
mov
filds
addr16
lock
clc
dec
jnp
loope
mov
int
sub
xor
sti
cmp
cmp
gs
lock
sbb
and
jmp
cltd
sbb
fbld
lods
stos
inc
out
fwait
ljmp
bnd
adc
test
repnz
cmp
test
fsub
inc
cmp
test
ret
xor
cld
inc
push
add
orb
in
mov
dec
ja
rorb
shr
mov
sub
stos
sub
movsl
mov
mov
mov
testb
out
inc
into
je
add
add
mov
xchg
jae
push
add
or
movsb
loopne
sti
jae
xor
mov
loopne
xor
sub
mov
out
mov
mov
mov
fadd
popa
in
jecxz
mov
pop
subl
mov
icebp
ja
adc
jecxz
pushf
or
or
push
and
add
cld
test
adc
sahf
ljmp
cmp
scas
loopne
popl
stos
fiaddl
xor
inc
push
or
pop
fistpll
inc
repz
mov
daa
push
ja
pop
dec
sahf
scas
in
stos
xchg
jbe
cmp
inc
inc
movsb
ret
cmc
mov
xchg
mov
push
and
mov
or
pushf
addr16
mov
dec
mov
mov
ds
outsl
cli
mov
incl
test
clc
mov
rcr
pop
enter
outsb
inc
adcb
fucomi
mov
int
jo,pn
pop
addl
mov
push
mulb
or
clc
icebp
and
sete
inc
je
int3
inc
les
mov
addr16
call
jbe
cmpsb
cmp
add
jnp
nop
xor
mov
insl
lods
shll
sub
andl
jl
loopne
das
std
sub
jl
sbb
xchg
pop
or
push
lcall
pop
sbb
setae
cmp
xorl
xchg
bound
or
adc
jge
jmp
movsb
or
cmc
or
pop
xchg
mov
fidivrs
and
enter
adc
cmc
mov
jmp
add
call
leave
and
jno
xchg
cmp
pop
mov
dec
jl
rolb
fisttpll
mov
jecxz
aas
call
jg
mov
into
jns
sbb
mov
mov
mov
adc
xchg
xchg
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
call
mov
push
sub
push
push
nop
es
jp
jmp
fnstsw
sahf
sub
xchg
ljmp
aad
dec
dec
dec
jae
jnp
or
insl
xlat
inc
cmp
push
jecxz
testb
fwait
push
inc
fstp
mov
push
mov
rorb
push
mov
aad
or
scas
mov
cmp
int
popa
rcr
adc
adc
xor
inc
repz
cmpsl
in
mov
adc
mov
je
repz
in
sub
push
movb
insl
iret
jmp
adc
sti
mov
adc
mov
inc
iret
xlat
mov
out
mov
mov
cmp
push
clc
div
and
hlt
and
je
lock
nop
cmc
jp
cmpsb
pop
xlat
sbb
sub
pusha
jae
ds
in
xchg
movsb
cld
addl
test
add
flds
push
pop
data16
push
bound
xchg
popa
test
icebp
jge
jge
ret
push
push
aas
cmp
mov
mov
dec
inc
fs
insb
mov
test
adc
cltd
fisubrl
push
cmpsl
cmp
lods
mov
mov
push
repz
jp
shr
adc
pop
mov
push
mov
mov
push
fsub
mov
pop
cmp
sub
popa
push
pop
in
cmp
jne
inc
mov
std
jb
push
sbb
sub
nop
ss
pop
pop
enter
pop
pop
xchg
xor
outsl
lret
cmp
in
add
mov
push
cmp
xlat
mov
xor
mov
jns
cs
push
std
sub
arpl
je
push
fidivrl
mov
dec
push
inc
xlat
inc
out
ja
xor
popf
mov
push
les
sti
sub
sub
cmc
xchg
js
and
sbb
cmp
sub
sti
or
lahf
or
rclb
xchg
rcll
push
inc
pop
popf
cs
cs
arpl
cwtl
pop
andb
mov
cmpl
xchg
push
in
lods
mov
sub
sbb
enter
stc
and
stos
das
jbe
jle
xchg
sahf
enter
push
lods
dec
test
das
mov
es
inc
xchg
dec
adc
pop
es
adc
test
push
mov
jno
lds
mov
pop
and
shll
sub
jge
and
inc
bswap
mov
push
cmpsl
out
sub
test
cmp
ret
pop
arpl
pop
pop
mov
xchg
sti
jmp
rorb
inc
hlt
test
push
in
andb
pop
jecxz
pop
test
jge
sub
mov
loop
test
ret
or
movsb
mov
mov
scas
notb
cli
sbb
aam
inc
adc
mov
jbe
add
sub
push
stos
sbb
fst
xor
add
dec
inc
arpl
pop
mov
fstpt
sti
push
mov
test
andl
ds
daa
pusha
push
inc
inc
jno
leave
cmp
cmp
ret
cs
push
int
cmp
pusha
jp
int3
das
mov
arpl
xor
xor
pusha
fistps
loop
lea
call
cmp
das
xor
push
daa
insb
shl
daa
mov
sub
lock
sub
xchg
sbb
adc
out
sbb
push
sbb
inc
xchg
outsb
hlt
bound
cmp
lods
into
sub
inc
fdivrp
sbb
cmp
inc
popl
push
mov
push
movsbl
jo
or
test
fsub
outsb
dec
fsub
mov
add
jge
xor
xlat
xchg
and
add
sbb
sub
mov
xor
jbe
jmp
and
mov
imul
sbb
rorl
into
sbb
addb
xor
out
cld
cmpl
aam
xor
jmp
xchg
pop
enter
cltd
test
xchg
jb
xchg
aaa
jmp
or
shl
stos
push
add
addl
repnz
and
add
push
pop
js
jne
inc
jg
xor
outsb
cmpb
insw
xchg
loop
xlat
fbstp
pop
mov
add
pop
lret
sbb
aam
iret
outsb
shlb
jns
pop
jb
in
fldl
add
rorl
jmp
enter
jmp
jmp
push
sahf
fidivs
jno
cli
pop
test
inc
or
out
mov
mov
add
jl
pop
daa
test
shlb
lea
dec
les
jo
adc
mov
loope
push
mov
out
inc
jg
mov
cmp
mov
cwtl
ds
loopne
cld
mov
mov
pop
jg
movsb
dec
mov
xor
dec
movsl
sarl
xchg
pop
jge
jmp
xchg
xchg
cmp
rorl
loopne
enter
lds
fisubrs
dec
movsb
arpl
inc
inc
cmp
lret
ljmp
hlt
xchg
jle
mov
repnz
ret
push
jae
mov
or
mov
xchg
loop
mov
lahf
leave
sbb
push
test
and
sub
jnp
xor
stos
sub
mov
mov
xchg
insl
gs
or
inc
add
jns
fimuls
sahf
repz
test
mov
adc
inc
inc
je
push
icebp
push
ret
test
loopne
add
push
fmul
cmp
pusha
cwtl
or
dec
xlat
lea
pop
pop
push
pop
mov
cmp
lcall
xchg
fwait
push
in
and
cmp
xchg
lods
fsubl
lock
inc
jp
xchg
mov
adc
push
jmp
push
in
ljmp
es
mov
xchg
adc
inc
push
inc
xlat
dec
mov
cmp
mov
xor
inc
xor
cmp
add
push
les
cs
mov
inc
ret
popa
sbb
out
mov
fiaddl
mov
jo
fnsave
adc
push
push
pop
dec
aam
push
cmpb
xor
push
mov
shl
sub
es
cld
movsb
pop
cli
and
jne
fs
mov
fnstsw
xor
pop
adc
fisttpl
test
xchg
popf
cmp
jbe
ja
aas
inc
insl
pop
mov
sti
insl
movsl
add
cmp
jb
cmpsl
mov
das
inc
fninit
cmp
fdivl
xlat
fmuls
out
inc
lcall
inc
jmp
push
sbb
mov
mov
mov
jb
mov
es
aam
shrl
mov
inc
jb
sbb
cmpb
ret
or
xor
imul
or
adc
int
add
popa
sbb
mov
mov
pop
xor
add
outsl
cmpsl
pushl
lret
lret
pushf
lds
sbb
leave
mov
ljmp
add
push
push
cli
repnz
lock
pop
mov
sarb
mov
mov
pop
mov
inc
cmp
xor
dec
and
inc
ds
sbb
shl
pop
cwtl
cmp
inc
es
fildl
cmc
xchg
add
lcall
ds
pop
dec
jge
add
insl
xchg
stos
cli
push
aam
test
and
in
inc
vmwrite
xchg
or
xor
movsb
xor
add
jmp
ja
mov
out
xor
push
test
add
out
sub
nop
sbb
sti
mov
lea
insb
lds
test
cli
mov
testl
jo
loope
mov
dec
and
xchg
repnz
sti
mov
rclb
pushf
mov
lahf
cmp
ss
mov
cvtps2pi
push
mov
fldcw
popa
xchg
xchg
xchg
fs
push
lcall
add
or
inc
or
sbb
inc
rol
cmpsl
add
adc
xchg
add
push
mov
incb
add
adc
aam
out
ficoms
pop
and
adc
cmp
xchg
and
aas
ds
fwait
push
mov
mov
lret
jmp
pop
and
loopne
push
mov
sub
dec
jmp
xchg
mov
test
pop
and
insl
jno
insl
fdivl
push
jb
lock
lods
xor
mov
cltd
insb
cmp
stc
ljmp
in
lods
cli
jmp
mov
out
mov
push
nop
adcl
sub
sub
mov
adc
mov
not
sub
xchg
sub
mov
popf
or
cmc
aas
xchg
mov
cmc
xchg
push
fsub
xor
xchg
push
ret
inc
jbe
test
loope
divb
fsubrl
cli
and
and
rcrl
or
mov
or
test
sub
dec
aaa
dec
mov
pusha
dec
fwait
notb
rorb
jle
add
insl
and
jae
decb
pop
adc
popf
add
cld
test
and
stc
out
mov
adc
pop
aas
lds
xchg
pop
iret
push
aaa
inc
cmpsl
inc
clc
xchg
pushf
dec
sub
test
out
stos
mov
xor
jl
movsl
pop
xchg
loopne
sbb
pop
jno
xchg
jae
fmuls
clc
mov
mov
pop
pushf
je
aad
loop
stos
cmp
pop
cmp
inc
mov
mov
xor
mov
mov
push
daa
jg
xchg
add
aas
adc
adc
jne
negb
or
add
xchg
or
outsl
inc
cwtl
xor
cmc
adc
sub
loop
pop
icebp
rcr
iret
outsb
leave
sub
insb
insl
das
push
sub
mov
leave
addb
ljmp
sbb
push
daa
dec
scas
mov
mov
xor
icebp
lock
lock
jg
aam
out
and
bound
movsl
mov
xor
out
mov
cltd
pop
fsub
sub
repnz
popf
jl
dec
add
daa
push
imul
sbb
cmp
aad
lock
adc
push
ret
arpl
icebp
lock
fisubrs
sub
out
sti
outsb
and
pusha
inc
mov
add
int
lcall
ret
lds
xor
cmp
xchg
inc
or
dec
push
jp
dec
sbb
aaa
stc
rcll
xchg
stc
or
scas
xchg
and
push
xor
jmp
lret
pop
mov
mov
sub
shrl
lret
into
in
inc
sub
sub
inc
lahf
in
leave
int3
push
loopne
popa
inc
xor
stos
jb
out
ds
add
cli
cld
out
adc
aam
ret
jns
jb
push
inc
mov
test
repnz
pop
popa
xor
inc
push
jae
dec
xor
dec
jmp
cmp
inc
aad
jp
je
jge
ret
sub
cmpsl
xchg
scas
insl
jno
hlt
in
mov
std
xor
aaa
ljmp
push
sub
xor
imul
xchg
jo
sub
stos
xor
push
jno
popl
inc
rcl
and
scas
jbe
xchg
and
pop
stc
push
jno
mov
lods
fs
pop
js
hlt
fcmove
sbb
cmc
inc
ret
movups
test
and
push
pop
push
test
iret
sub
inc
inc
aaa
mov
mov
stc
insl
dec
cs
mov
test
add
call
dec
int
sub
stc
jl
mov
sub
and
cltd
fnsave
out
jmp
push
stos
jno
pop
pop
ss
in
mov
aam
mov
scas
nop
adc
mov
stos
lock
lock
xor
mov
xor
faddp
adc
lods
or
jp
adc
cmc
inc
pop
fwait
cmp
addr16
dec
testb
add
sub
cli
jne
rep
movsl
mov
pop
mov
xor
imul
add
ds
out
mov
push
and
lds
test
jge
leave
jno
rolb
shlb
sarb
pop
outsb
cmc
test
push
push
das
add
stos
adc
dec
mov
or
jo
nop
rorb
ret
ljmp
js
cwtl
test
stos
push
aas
pusha
scas
inc
push
mov
sti
xchg
cmp
mov
mov
mov
movsl
mov
mov
xchg
inc
xlat
ja
imul
xor
add
jp
lret
jmp
inc
dec
pushf
cs
je
adc
cmpsb
mov
push
ror
inc
cmpsl
test
or
test
mov
pop
push
rcrb
imul
repnz
ret
sub
loop
dec
fisttps
cld
inc
jle
jl
mov
insl
adc
sub
xor
out
mov
je
testl
lret
xchg
mov
xor
movsb
ret
and
sub
sub
cmp
call
ja
aam
lcall
inc
and
stos
lods
mov
je
movsl
push
lahf
or
fldlg2
pop
cmpb
mov
mov
xor
notl
test
jecxz
repz
jg
mov
icebp
repz
cmpsl
mov
enter
add
repz
divl
pop
pop
rolb
js
sub
mov
xor
clc
loopne
ljmp
divl
sbb
das
mov
scas
xabort
jmp
jge
ret
mov
sub
shlb
movsb
stos
or
inc
jns
dec
pushf
lods
and
cld
outsl
sti
xchg
sub
andl
addr16
ja
sub
popf
xchg
cmc
jb
jbe
popa
sti
or
loopne
cmp
inc
xchg
add
js
imul
adc
inc
jmp
movsl
dec
push
das
push
mov
xor
insl
dec
mov
mov
mov
push
adcb
mov
addr16
mov
imul
sbb
sub
pop
push
mov
dec
add
cmp
test
lods
out
imul
lret
mov
lcall
adc
xchg
daa
push
adc
pop
sbb
mov
pop
and
dec
pop
mov
es
mov
stos
jnp
icebp
out
cmc
aam
sbb
test
xor
aaa
dec
addr16
test
andl
push
pop
mov
iret
push
mov
scas
sub
inc
mov
or
mov
push
mov
inc
lock
dec
scas
inc
add
inc
out
insl
rorl
movsb
lds
cmp
insl
mov
orl
incb
xchg
int3
push
stc
pop
and
xor
add
mov
mov
das
cs
push
pop
or
insl
pop
repz
xor
push
std
jg
adc
jmp
sub
negl
xchg
sti
pop
push
jno
lock
mov
mov
lods
pop
testl
gs
sbb
test
add
cmpsb
bound
mov
mov
pop
adcl
or
xchg
movsb
cmp
aas
xor
dec
test
fwait
test
and
arpl
das
sub
outsb
or
int3
dec
int3
sbb
inc
jmp
xchg
repz
jo
mov
jnp
rorl
mov
lea
in
out
mov
cld
dec
popf
ss
mov
test
mov
rorl
mov
stos
packsswb
jne
push
fwait
stos
push
loope
mov
mov
ja
testl
in
cmp
ret
adc
xchg
push
pop
or
lcall
and
mov
push
pop
cmpsb
mov
ja
adc
jmp
pop
sahf
clc
add
mov
dec
push
test
adc
andb
inc
roll
je
mov
sbb
fcoml
mov
push
daa
jno
or
in
pop
in
xchg
popf
add
add
jnp
sbb
sbb
mov
les
xchg
push
and
xchg
mov
or
jle
pop
xchg
aaa
pop
js
or
inc
cltd
enter
test
jl
dec
pop
or
stc
xchg
loopne
rcrb
add
jb
daa
popf
popa
xchg
testb
xchg
bound
insl
dec
lods
cmp
in
push
ror
repnz
pop
jge
mov
mov
add
test
int
popf
cmp
add
push
mov
jp
or
test
lahf
loope
mov
or
dec
xor
lods
mov
jne
loope
fildll
sbb
in
inc
push
xchg
test
das
loop
std
adc
xchg
aas
dec
mov
sbb
xchg
jae
add
je
mov
into
insl
cwtl
je
sbb
sbbb
and
sbb
mov
mov
lcall
popa
mov
loopne
stos
icebp
addl
mov
adcl
push
iret
scas
les
or
xchg
push
ljmp
idivb
mov
insl
fcomip
push
mov
jno
mov
outsl
and
pop
sti
mov
xor
add
push
sub
adc
hlt
insb
mov
subl
je
aad
rcrl
jge
ret
pop
dec
dec
hlt
lds
imull
repz
xchg
adc
mov
add
or
aam
cld
pop
xor
mov
or
inc
js
out
into
push
adc
insl
cmc
ror
pop
outsl
mov
inc
mov
mov
les
add
scas
fwait
cmc
pop
and
stc
and
adc
fdivrl
jne
sub
or
sbb
cmp
xchg
cmp
movsb
outsl
pop
jnp
xchg
mov
mov
ret
push
aad
repz
fs
mov
cli
ret
movsl
and
decb
lahf
and
mov
loope
bound
cmp
xchg
outsl
jne
out
push
imul
insl
js
dec
daa
adc
xchg
xchg
into
enter
add
xchg
insl
hlt
xchg
inc
sbb
fsub
insb
shll
add
or
fs
jae
mov
in
cs
data16
cwtl
push
xchg
add
fstpl
xor
imul
sub
aam
xlat
pop
add
gs
lea
mov
fwait
pop
cmp
jbe
hlt
ljmp
xor
sysenter
pop
jne
cmp
ret
aad
cmp
fsubrp
cmp
push
arpl
lahf
lds
ret
jbe
mov
cld
pop
or
jp
negb
outsl
mov
adc
jnp
mov
int3
loope
jnp
stos
inc
pushf
pop
fdivrs
xchg
dec
repz
cli
add
fidivrs
out
inc
int
ret
mov
out
adc
aad
jne
gs
nop
adc
mov
jl
push
xlat
jg
mov
cs
bound
pop
shlb
stos
repnz
jge
add
push
mov
add
movsl
ret
fwait
pop
arpl
cwtl
xor
cmp
cli
call
mov
and
rcll
jae
and
leave
loopne
cmp
shlb
mov
push
leave
xchg
sbb
push
mov
xor
testl
jb
pop
jecxz
and
xlat
pop
je
daa
push
xchg
jecxz
test
lret
mov
cld
imul
in
xor
mov
loopw
lea
stc
mov
pusha
sti
test
cld
push
cld
imul
fmul
cmc
or
or
mov
inc
mov
sbb
and
cli
push
mov
jno
pop
pop
dec
enter
lods
and
rclb
lods
lds
sub
mov
cmc
mov
and
push
lds
lea
gs
inc
and
sbb
ja
enter
fsubrs
jnp
dec
insb
stc
out
mov
aas
xchg
fsubr
aam
and
cltd
repnz
aad
push
push
arpl
fmul
shl
cmc
mull
repz
mov
rcr
mov
add
andl
add
pop
add
ja
iret
jge
xchg
mov
xor
sbb
lods
outsl
sub
insb
test
inc
movsl
mov
mov
mov
dec
lock
pop
dec
cmp
push
cmp
jne
popa
xchg
outsb
xor
js
dec
sbb
inc
jno
pop
cmpsl
xor
jg
sub
dec
dec
lret
pop
es
movsb
test
xchg
imul
ret
cltd
nop
sub
cmp
mov
faddl
adc
mov
and
fldcw
inc
and
pop
loop
mov
pop
fstl
cmp
mov
call
into
xlat
bound
jge
insb
pushf
or
push
div
sti
mov
add
ljmp
lds
jg
icebp
mov
xor
mov
cmpsl
icebp
lea
cmc
sbb
loop
loopne
in
push
out
imul
or
or
mov
hlt
jmp
cltd
sub
sarb
ror
div
xchg
fistpll
std
jge
test
jb
cld
push
xchg
aaa
loopne
dec
js
lods
in
xchg
lods
popf
mov
mov
shrl
imul
jp
mov
rolb
mov
jmp
mov
add
xorb
sarl
scas
mov
out
mov
inc
icebp
or
leave
and
dec
rcrl
push
push
push
leave
add
lea
and
test
sbbb
inc
inc
add
mov
mov
mov
jns
scas
mov
adc
fsqrt
mov
sub
shrb
addl
decb
jecxz
push
jne
arpl
shll
add
xchg
or
repz
stos
popa
or
sub
pushf
and
xor
dec
movsl
sub
je
push
mov
jns
lahf
inc
jo
jle
call
or
mov
mov
mov
pop
mov
out
fnstsw
cmpsl
rcll
push
iret
cltd
sbbb
imul
jnp
cwtl
cmp
xorl
lods
sahf
inc
aas
push
test
jne
into
insl
and
pushf
xchg
out
pop
sbb
cwtl
into
icebp
cmp
and
jmp
in
pop
dec
inc
inc
mov
cmp
pop
xor
pop
inc
jmp
sbb
adc
push
push
jge
xor
sub
mov
sub
mov
sub
jno
std
xchg
xor
scas
dec
jne
mov
fwait
aam
ds
insb
cmp
loop
iret
xor
ds
or
js
icebp
add
loope
xchg
lods
cmp
pop
pop
jb
push
bound
leave
int3
jge
mov
push
add
aaa
mov
jmp
sbb
inc
popf
and
mov
ja
xor
adc
outsl
stos
pop
push
cltd
dec
cltd
xor
notb
inc
cmp
push
xchg
mov
imul
push
test
pop
lahf
add
lahf
xor
sbb
pusha
gs
imul
push
mov
xchg
adc
adc
stc
loopne
repnz
loop
or
or
movl
inc
adc
and
cltd
xor
and
jl
mov
ja
push
add
ss
inc
int3
test
rolb
fsubl
mov
mov
jo
sti
mov
lret
sbbl
xor
jge
leave
cld
das
shl
mov
rolb
mov
adc
rcrl
addr16
mov
jns
adc
mov
jl
dec
push
inc
ja
or
fwait
sbb
and
outsb
sahf
push
and
xchg
or
inc
lret
and
ja
push
cmp
in
add
fnstenv
lods
pop
das
xor
dec
and
add
pop
fs
into
dec
shlb
mov
push
push
ja
push
pop
add
cs
sbbb
pop
jbe
xor
dec
je
fs
movsb
mov
or
sub
addr16
pop
fwait
or
cmp
push
orb
cmp
cs
push
sbb
lret
idivb
add
pop
js
test
pop
loope
inc
inc
push
lret
mov
ficoml
pop
jnp
int3
sti
push
xchg
jnp
pop
push
dec
pop
push
popf
lret
in
aam
fsubrl
fsubl
mov
and
lods
mov
dec
adc
rclb
fnstsw
and
xor
mov
or
dec
daa
xchg
pop
jg
into
jp
sub
add
test
push
pusha
sti
push
push
push
mov
cmp
pop
sbb
mov
adc
sbb
add
sub
insb
outsb
dec
mov
clc
xchg
push
add
pop
cmp
cli
mov
xlat
sbb
and
mov
adc
jns
xchg
sbb
or
test
inc
jmp
sub
pop
call
inc
popa
jne
cld
into
inc
jmp
test
cs
mov
rolb
and
rdmsr
mov
jle
sub
xlat
leave
mov
lret
sub
pop
xor
sbb
or
push
sbb
adc
and
andl
xor
out
push
or
hlt
aam
pop
incl
out
dec
fsubs
mov
xchg
cmp
es
cli
xor
mov
sbb
mov
inc
and
dec
mov
clc
testl
mov
xlat
inc
es
xor
adc
mov
mov
loop
add
and
dec
add
popa
fcompl
lds
mov
xchg
adc
hlt
jns
pop
movsl
lods
and
mov
jnp
mov
cmp
idiv
lods
js
out
cwtl
dec
dec
sub
xor
hlt
pop
jp
dec
jnp
jle
sub
sub
xchg
nop
ror
jnp
pop
cld
adc
bound
adc
mov
mov
cwtl
das
in
imul
shll
fistps
je
and
enter
lret
pop
lds
das
dec
lock
fs
sbb
ljmp
cmpsb
sarb
dec
pop
lods
insl
mov
lahf
shld
test
push
addr16
cwtl
aam
lods
aam
sub
in
pop
nop
mov
je
icebp
lods
add
rcll
pusha
xchg
sbbb
outsl
and
js,pn
mov
pop
popf
stc
loop
pop
mov
fs
pop
fcoms
jle
cmp
in
sub
sbb
mov
xchg
pop
clc
and
mov
lock
daa
mov
sbb
push
push
mov
lret
insb
cmp
aad
bound
fs
divb
imul
popf
fstpt
push
and
andl
mov
out
lds
repz
push
inc
inc
adc
mov
push
mov
mov
inc
mov
cli
imul
jl
or
sub
pop
sbb
sub
imul
push
mov
push
test
cmp
add
int
fstl
jo
loopne
mov
out
test
mov
mov
loope
ja
arpl
testl
jmp
jle
mov
enter
push
fcoml
cli
add
xchg
or
daa
shlb
push
xor
sbb
inc
fisubrl
fldcw
call
or
fimull
sbb
mov
js
icebp
mov
es
mov
outsl
out
call
push
adc
dec
sbb
insb
mov
add
data16
or
inc
pop
das
cld
dec
lock
push
imul
fmull
lds
dec
push
outsl
xor
mov
jae
mov
test
cmp
lahf
mov
xchg
adc
insl
push
rclb
mov
inc
scas
and
cmp
enter
cmpsl
lcall
pop
fldt
test
adc
mov
mov
or
bswap
lret
cs
movsb
xchg
in
cli
aas
ret
out
xor
lea
mov
pop
std
sti
or
mov
push
pop
pop
add
lds
dec
push
and
sub
xchg
and
movsb
jne
and
loop
dec
jb
lock
movsl
xor
push
int3
in
fcoml
scas
gs
jg
adc
xorl
dec
xor
inc
adc
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
scas
lea
push
sub
push
push
cltd
test
aaa
dec
bound
test
sub
mov
mov
in
ret
and
bnd
cwtl
rorb
into
sahf
xor
loopne
stos
adc
ficoml
popf
stos
andl
add
int3
mov
dec
dec
lds
and
cwtl
cmc
sub
lds
xlat
or
fistl
lea
cmp
jl
and
cld
into
push
push
adc
and
mov
jbe
push
sti
inc
inc
lret
sbb
mov
test
fldenv
mov
inc
jns
popa
jge
xchg
add
push
add
lret
xor
jno
out
fcoml
scas
sub
xchg
cltd
jecxz
es
cmp
or
xchg
sub
addb
inc
pop
mov
lret
repnz
xor
addb
sti
pop
aad
cmp
sahf
faddl
or
fsubrl
adc
pop
xchg
cli
inc
jno
fnsave
mov
leave
out
scas
loope
inc
fcomps
std
push
dec
cmp
pop
outsb
aam
test
lods
clc
push
dec
sbb
jo
sbb
imul
pop
push
popa
add
add
fs
clc
and
dec
mov
jne
sub
outsb
scas
inc
fstp
add
push
push
loop
xor
pop
rcrl
jge,pt
out
dec
cli
jae
mov
lds
mov
pusha
jl
or
xor
push
or
push
insb
mov
clc
out
and
out
push
icebp
jnp
je
ret
test
and
adc
jns
pop
cmpsb
mov
xor
pop
loopne
ficoml
inc
daa
lahf
and
xchg
pop
insl
and
jmp
jnp
or
lcall
inc
setl
loop
testb
pop
push
push
in
xlat
fdivl
stos
jno
insb
sbb
outsb
aaa
scas
adc
push
arpl
mov
sub
add
mov
scas
inc
loopne
push
inc
and
pusha
loop
ja
push
bound
ret
leave
hlt
gs
out
call
xchg
lcall
pop
fwait
std
pop
mov
add
inc
mov
loopne
scas
subl
jle
sahf
cmp
jno
repz
icebp
int3
into
insb
mov
sub
cmpsb
sar
in
xor
imul
dec
xlat
mov
fcoms
test
push
gs
movsl
lahf
test
xor
sbbb
aas
ret
xor
pop
mov
jbe
xor
mov
rorb
pop
inc
or
and
in
xchg
int3
sbbb
push
repz
imull
mov
xor
push
js
cmpsl
dec
jle
out
repz
lds
lods
lret
fists
std
out
popa
lea
into
dec
dec
int3
push
loopne
inc
cmp
ret
mov
fcmovnu
mov
test
jl
adc
xor
in
push
es
mov
popf
lds
jl
imul
adc
add
lods
jbe
lds
cmpb
pop
cld
push
out
out
xchg
scas
push
mov
and
cld
mov
cli
lock
dec
add
mov
adc
xchg
xchg
mov
sbb
push
cltd
sub
and
inc
cmp
test
scas
mov
gs
dec
adc
fisubl
vmread
sub
dec
icebp
fwait
jmp
sarl
inc
push
mov
mov
movsl
cmpsl
adc
ficoml
aad
enter
adc
shll
ljmpw
and
jns
push
push
sahf
xchg
orl
sbb
cmp
repz
and
lcall
cmp
stos
rcrb
xchg
dec
dec
or
push
fwait
jge
jb
sub
adc
inc
mov
mov
jp
aas
xchg
fwait
push
dec
sti
inc
mov
sbb
xor
xchg
push
sbb
push
push
loopne
orb
sbb
sahf
jge
jp
or
gs
test
pmullw
mov
inc
fisubrl
loopne
ret
xor
mov
or
pop
add
push
fidivl
in
clc
sbb
dec
popa
dec
mov
mov
jg
enter
xchg
leave
jbe
add
add
dec
aam
push
stos
or
jmp
inc
or
mov
jl
cmp
shll
ror
and
and
sbb
lods
andl
push
pop
cmp
popf
ss
push
loopne
mov
sbb
lret
mov
lahf
shl
push
in
mov
pop
and
pushf
int3
shrl
ds
cwtl
inc
jg
shrl
lcall
jg
push
sti
and
push
clc
mov
adc
testl
xorl
rorl
cmp
cmp
and
enter
add
add
cmp
add
in
pop
lock
push
push
mov
scas
dec
in
mov
test
repz
fstps
shlb
xor
jecxz
xchg
push
out
daa
jmp
sub
jnp
jno
dec
test
ds
lock
jecxz
or
and
sub
dec
rcrb
popf
dec
mov
xlat
icebp
mov
sti
cltd
mov
sbb
arpl
mov
sbb
cmp
jae
jmp
adc
stc
popa
pop
push
rcrb
mov
add
lcall
inc
push
mov
jno
stc
sub
test
ficomps
pop
mov
and
jnp
fmuls
jb
rorb
test
aad
mov
and
dec
mov
xor
gs
lret
add
inc
inc
mov
adc
sub
jo
and
lret
lods
mov
mov
inc
adc
adc
jle
jmp
int3
mov
push
cmp
add
fs
jae
and
jo
push
sti
xor
ret
test
mov
fwait
out
jmp
ret
xchg
mov
ror
in
xor
clc
mov
or
push
fnstsw
or
mov
add
xchg
fisttpl
jbe
mov
and
mov
sub
and
bound
fwait
jge
lods
inc
cmp
dec
int3
cltd
or
push
aam
popa
inc
xor
and
pop
lahf
mov
out
lret
ror
outsb
adc
std
ja
add
in
jo
push
push
sbbb
enter
inc
cmp
gs
test
hlt
adc
or
movsb
lock
inc
in
divl
stos
pop
pop
in
pop
fstpt
loop
lods
or
push
int
aaa
sti
testb
or
adc
dec
popa
dec
inc
jecxz
push
and
mov
push
mov
xchg
dec
je
insl
popa
push
out
adc
mov
inc
cmc
repz
or
xchg
mov
int
push
jg
or
out
xchg
adc
test
imul
fstps
outsb
rcll
push
push
pop
add
jmp
fimull
testl
jbe
gs
add
cli
pop
ficomps
dec
or
push
lock
push
and
lods
xchg
out
cltd
lds
dec
repnz
mov
lods
mov
push
lock
sbb
adc
iret
repz
repz
mov
shl
jne
xor
addr16
pusha
add
fmul
pop
daa
fistl
xor
cmp
test
sub
add
sub
je
das
pushf
cmp
pop
inc
mov
aam
out
cwtl
dec
fstpt
cmp
int3
mov
mov
mov
sti
mul
out
mulb
fwait
sub
sbb
mov
lods
and
push
arpl
sarl
push
fdiv
push
arpl
aad
shlb
rolb
adc
adc
and
mov
and
ljmp
push
add
mov
lret
xor
mov
test
cmc
and
rorb
push
xlat
pop
aaa
negb
ret
add
fsubp
push
fs
cmp
xchg
dec
adc
cmc
lock
add
xchg
adc
mov
jl
cmpsl
sar
push
cmp
push
int3
cli
in
outsl
cltd
movsb
jmp
jmp
out
xchg
push
sub
dec
mov
sub
and
mov
xor
bound
add
sahf
xlat
leave
push
jmp
testl
into
adc
jmp
dec
mov
aas
cs
or
fs
popf
icebp
push
dec
cmpl
imul
mov
nop
sub
repnz
jge
adc
adc
mov
lret
push
pop
mov
test
xchg
stc
aad
pushl
andl
sti
dec
shr
rcl
int
dec
ja
or
and
ds
jno
mov
sahf
or
push
pusha
lods
fucomip
in
out
loope
push
pop
xchg
xchg
push
mov
iret
mov
add
jmp
mov
enter
push
in
jp
or
add
xor
push
sub
mov
cmc
jno
push
insl
sarb
aam
fistps
pop
int
mov
lret
push
loope
jnp
add
jb
ret
sub
pushf
cltd
xor
faddl
inc
lods
movsb
loope
stc
jnp
data16
and
cmp
mov
outsb
call
lods
testb
dec
ja
lock
mov
int3
adc
add
inc
jecxz
mov
cwtl
ljmp
scas
outsl
cli
lahf
clc
push
nop
jb
xor
push
push
mov
ficoms
in
popf
loope
orl
out
xchg
arpl
sbb
and
inc
popf
add
in
xor
cmp
add
incl
dec
stos
aam
add
add
in
pop
fwait
cli
mov
cwtl
sbb
cmp
testb
push
xchg
cmc
jae
dec
aas
mov
jp
mov
mov
sbb
inc
add
jg
sbb
in
dec
sbb
lock
mov
mov
test
mov
test
cmpsl
mov
and
cs
lea
xchg
mov
inc
pop
fs
cmc
jno
cmp
xor
pop
sub
cmpsl
pop
stos
aas
mov
sbb
jo
mov
in
lds
leave
sbbl
scas
popf
mov
xchg
out
mov
push
insl
ret
pop
hlt
fisttps
repz
push
outsb
xchg
add
push
jb
xchg
daa
mov
jno
adc
pop
addr16
or
out
xchg
push
mov
jmp
jne
mov
fcoml
inc
je
push
xlat
pusha
ss
xlat
js
rolb
test
xchg
lret
jo
outsb
es
sub
lret
and
push
adc
pushf
dec
cltd
mov
call
mov
jb
pop
pop
outsb
nop
dec
jnp
sub
push
jb
pop
ret
mov
fs
jge
out
pop
pushf
add
xor
mov
cwtl
and
inc
stc
es
inc
shll
push
nop
in
jns
mov
ret
inc
and
ljmp
dec
mov
jecxz
add
jo
mov
xchg
shrl
inc
out
pop
xchg
or
sub
cltd
xchg
leave
mov
decb
rcll
pop
pop
imul
nop
fidivrl
sbb
xchg
jbe
pop
clc
movsl
jo
add
subl
lret
sbb
sub
adc
add
leave
xor
ds
clc
mov
xor
mov
imul
inc
int
cmp
sub
adcl
dec
int
pop
adc
in
xor
mov
cmp
xchg
xor
divl
mov
cwtl
xor
hlt
cwtl
arpl
jecxz
dec
adc
and
insl
pushw
sub
mov
mov
loope
iret
add
mov
or
lcall
push
out
mov
inc
mov
mov
or
push
rcrl
push
sbb
adc
fdiv
stos
fiaddl
mov
popf
dec
lret
std
mov
daa
pop
mov
lds
add
nop
xor
addr16
sbb
insb
or
incl
popa
pop
sbb
movsl
inc
ficoms
popf
mov
sub
jb
dec
mov
cltd
iret
ret
lret
ret
mov
dec
pavgb
stos
sub
push
mov
cwtl
ficoml
stc
sub
pop
push
push
or
in
mov
mov
cs
stos
jecxz
cmp
and
jae
pop
sub
adc
xor
cmp
add
mov
shl
adc
mov
adc
xor
push
pusha
gs
xchg
addr16
int
xchg
ss
sbb
and
icebp
movsl
cmp
or
and
push
mov
xchg
cmp
adc
out
std
pusha
push
pushf
stos
insb
or
in
lahf
dec
rcl
or
sarb
xchg
add
sub
out
mov
gs
xchg
lret
sbb
add
or
shlb
mov
es
mov
dec
mov
orl
dec
push
xor
stos
mov
rsm
addr16
pop
ja
xor
pop
and
aas
pop
das
dec
out
lea
mov
lods
push
xor
lahf
jmp
out
std
mov
fdivs
cmp
aad
enter
cmp
add
negb
dec
push
sahf
pop
push
mov
xor
jae
cmp
enter
daa
and
inc
add
cmp
hlt
mov
mov
bound
shlb
adc
leave
xor
push
mov
and
fsubp
dec
mov
mov
lds
subb
popa
cmp
sub
ret
shrb
loopne
es
dec
arpl
xor
sub
xor
mov
add
cs
cltd
fucom
pushf
repz
pusha
mov
xor
add
xchg
xchg
dec
sahf
arpl
cmp
inc
pop
mov
loopne
dec
jecxz
xchg
pushf
lea
ss
push
sbb
scas
movsl
mov
pop
xor
loope
sub
rcrb
xchg
sub
mov
repnz
fildl
mov
mov
add
inc
pop
daa
cmpsb
add
push
enter
clc
rclb
xor
push
roll
or
add
dec
mov
cmpsl
mov
adc
xor
out
repnz
in
das
jmp
adc
ss
lods
fs
rorb
fadd
push
cmc
imul
int
sbb
dec
push
and
call
fwait
les
add
das
lret
push
xor
lds
stc
sub
sahf
aad
insb
jle
mov
dec
xchg
lods
sarb
fwait
push
xchg
lea
mov
cmp
lods
mov
pushf
pop
push
xchg
adc
stos
sub
ret
xchg
das
pop
pop
jmp
imul
je
mov
frstor
frstpm(287
bound
test
cmp
pop
mov
lock
aam
scas
add
mov
and
adc
sahf
mov
and
pusha
int3
xchg
mov
dec
mov
xor
sbb
xor
sub
fsubl
or
es
rcl
inc
fisttpll
clc
mov
sub
mov
repnz
pop
adc
cli
movsl
pop
push
and
sbb
xchg
sarl
jmp
sbb
aam
xor
xchg
cld
out
ss
mov
lret
mov
push
mov
test
idivb
mov
out
popf
lcall
gs
std
stos
mov
mov
dec
in
int3
inc
add
or
and
test
dec
adc
fildll
dec
cmpsl
xor
cwtl
push
ljmp
jae
insb
and
sahf
or
mov
jp
loope
sbb
js
not
jg
mov
out
fs
pop
hlt
fstpl
and
iret
js
add
jecxz
lahf
in
insl
clc
mov
ret
jle
xor
clc
pop
lcall
push
sbb
mov
pop
dec
mov
mov
mov
push
sahf
sbb
dec
add
jns
arpl
imul
inc
sahf
scas
pop
jb
mov
and
aam
cli
adc
jb
pop
mov
pop
jbe
scas
mov
jge
daa
shll
mov
int
cmc
and
cmp
mov
pop
push
sbb
clc
popf
and
ds
mov
clc
andb
jmp
cltd
pop
xchg
insb
sub
xchg
cwtl
xchg
movb
shlb
mov
cmp
nop
fisubs
add
adc
jae
addr16
sahf
jg
push
add
pop
jl
cmpsb
js
js
fisubrs
sub
pusha
shlb
mov
mov
and
and
and
notb
fistpll
mov
mov
hlt
mov
add
jb
int3
ds
incl
scas
mov
aas
push
mov
adc
mov
das
mov
sub
adc
out
pop
lock
fisubs
lret
jno
rorb
cmpsb
lea
fidivs
imul
imul
loope
mov
rorb
sbb
push
jg
sub
jmp
test
and
std
jecxz
mov
hlt
shl
pop
sub
scas
into
popa
sbb
sbb
inc
mov
xchg
into
call
add
xchg
pop
jle
jnp
aad
in
mov
repnz
stos
pop
xchg
clc
xchg
das
es
mov
out
mov
jbe
and
xchg
xlat
pop
push
mov
adc
mov
pop
sti
push
pop
mov
dec
std
and
mov
mov
mov
stos
bound
test
faddl
and
daa
or
fs
sub
mov
push
xchg
data16
mov
enter
sub
sub
mov
hlt
sbb
xlat
inc
pop
or
les
lret
xchg
les
roll
cld
xchg
sub
mov
mov
lock
cld
add
iret
sub
shl
jo
mov
cwtl
fyl2xp1
dec
mov
jb
inc
add
sbb
sahf
mov
push
xor
andl
xchg
push
xchg
inc
mov
jp
adc
and
push
mov
addb
sub
lea
mov
lock
stc
int
fs
test
outsl
mov
fs
dec
ret
rcl
sbb
cmp
in
adc
js
push
inc
call
cmpsl
outsb
push
jo
pop
scas
mov
mov
test
imul
arpl
pusha
clc
lcall
inc
sbb
and
das
rcrl
notb
repz
mov
lds
inc
sbb
xchg
aad
sub
fcmovnb
into
stos
jno
mov
adc
dec
mov
or
jne
mov
mov
mov
repz
rol
and
inc
call
testb
cmp
shlb
mov
xchg
adc
je
jle
ds
lahf
cltd
dec
daa
out
aas
mov
lds
add
mov
cmp
cli
repz
jge
lret
lods
int3
mov
jb
lds
inc
mov
cli
xchg
sbb
ljmp
movsb
add
cmpsb
fs
adc
sbb
pop
loope
adc
mov
inc
dec
aam
hlt
jbe
jg
std
dec
movsb
or
pop
lret
test
adc
jp
rolb
dec
clc
repnz
pushl
xlat
test
outsb
sub
mov
mov
cmp
arpl
outsl
sub
mov
add
pop
addr16
pop
cmp
cs
iret
xchg
jnp
mov
push
fsubs
lret
and
lret
and
mov
mov
push
dec
ja
out
lea
mov
ljmp
out
dec
testl
movsb
mov
adc
adcb
rol
jno
popa
jl
das
mov
test
xor
sub
fs
fdiv
loop
aam
cmp
sbb
cmpsl
jp
into
add
inc
xchg
or
dec
into
std
ds
mov
outsb
rcrl
stos
pop
adc
push
cmp
or
xlat
notl
mov
jns
fcoml
faddp
testl
out
dec
mov
dec
push
jg
mov
aam
outsb
xchg
in
je
pop
dec
adc
stc
dec
xlat
adc
adc
cmpsb
js
xchg
pop
mov
in
js,pt
stos
aas
adc
pop
imul
and
mov
lods
out
rorl
ss
mov
loopne
xor
loop
data16
and
orb
movsl
inc
sub
outsb
cwtl
dec
andl
jl
nop
frstor
mov
cmp
mov
cmp
inc
xchg
jecxz
shll
jp
decb
inc
out
or
and
inc
cmc
aas
jno
pop
loope
and
sahf
pop
or
leave
fildll
aaa
push
and
mov
imul
fidivl
sub
pop
mov
out
test
out
xchg
scas
lock
cmp
pop
lret
repnz
sti
push
loope
mov
jl
clc
inc
shll
jnp
stos
leave
movsb
push
adc
mov
clc
mov
mov
dec
mov
popa
mov
lahf
bound
adc
lret
sahf
rorb
xor
pop
sbb
jmp
jo
dec
jle
into
pop
cmp
sub
test
arpl
dec
adc
ret
push
and
in
jg
lods
aad
and
fs
adc
mov
lods
mov
add
and
mov
pop
lods
es
adc
fwait
xor
mul
pop
xchg
add
fsubrs
addr16
bound
repnz
out
ljmp
out
mov
loop
stos
out
clc
das
push
insl
fdiv
cmp
and
adc
push
and
popl
pop
jg
xor
cwtl
mov
aas
inc
ret
pop
insb
jb
mov
sub
into
scas
shlb
aad
sub
sbb
insl
lret
cwtl
mov
pop
sbb
fdiv
test
mov
mov
and
push
mov
jp
stos
aas
nop
push
sub
int
dec
jle
popa
daa
mov
mov
leave
mov
cld
pop
imul
push
mov
idivb
dec
js
sbbb
dec
or
fdivr
dec
cmpsl
sahf
jmp
add
inc
dec
xlat
mov
jg
dec
xchg
sbb
lds
cli
mov
dec
cs
stos
in
test
popf
fisubrl
cmp
push
mov
nop
subl
in
xor
sbb
insl
and
into
cmpsb
ret
xchg
or
sbb
add
inc
mov
or
pop
aas
rorl
stos
addb
and
ljmp
loope
aam
arpl
stos
ret
movsl
fstp
je
scas
xchg
repz
mov
xchg
hlt
sti
lds
outsb
cmpsb
mov
fistpll
ret
rcll
xchg
add
mov
sub
push
inc
stc
popa
mov
dec
rcrl
mov
fidivrl
cmp
out
out
loopne
mov
push
cmp
imul
hlt
call
or
lcall
adc
test
lahf
outsb
inc
ret
mov
xor
add
xchg
or
sub
shlb
push
insl
pop
pusha
les
jbe
fmuls
lcall
push
cltd
inc
rolb
push
out
jle
out
jle
sub
cwtl
cmp
out
pop
sub
les
cmp
xor
inc
dec
mov
cmc
fs
clc
dec
sub
hlt
js
lret
outsb
mov
neg
insb
jbe
add
sbb
sar
push
mov
pushf
or
hlt
in
xchg
andb
inc
inc
pop
shrl
mov
dec
sahf
in
sub
daa
inc
xchg
jns
cltd
test
in
dec
cmc
mulb
nop
repnz
out
pop
adc
dec
dec
adc
scas
dec
mov
xchg
push
or
inc
xchg
sub
inc
mov
inc
mov
inc
push
cld
out
push
int3
aas
add
mov
jp
xor
test
mov
out
xor
cmp
jmp
push
mov
inc
mov
mov
xchg
daa
fcmovnb
mov
and
out
cmp
push
scas
roll
shlb
movsb
fdiv
daa
push
mov
test
sub
and
int3
arpl
fcom
hlt
repnz
pop
rcr
jl
mov
mov
jb
addr16
adc
cmp
sbb
movsb
imulb
sahf
xchg
adcb
pop
xor
test
add
pop
popf
jnp
sbb
lock
out
fldt
and
pop
sub
inc
cmp
ror
xchg
mov
insb
push
cmpsb
adc
fwait
cmp
fs
sub
fstpt
jl
fcomps
outsl
lea
or
mov
ss
sbb
xchg
jg
fcom
sbb
jl
jbe
jns
cltd
movsb
test
sub
push
in
sbb
dec
or
ret
in
jne
add
xlat
je
sub
cmp
loopne
rcrb
pop
mov
and
call
repnz
jg
fucomi
xchg
mov
ljmpw
stos
push
fldcw
bnd
or
scas
jbe
ss
nop
stc
rcr
sub
adc
test
insb
inc
mov
fistps
xlat
lahf
lods
fsubrs
mov
in
dec
or
lods
lea
ss
mov
stos
push
jne
xor
je
or
add
mov
or
aad
push
nop
ficoml
or
adc
or
cmpsl
dec
push
xor
push
mov
inc
xor
push
sub
and
sahf
jecxz
test
sbb
out
int3
add
arpl
jl
mov
fwait
cld
adcl
mov
jle
inc
imul
mov
andl
hlt
adc
dec
popf
add
shll
dec
cmp
into
adc
push
jmp
mov
lds
ret
jmp
dec
sbbl
xchg
mov
loope
icebp
aam
mov
clc
mov
mov
out
inc
notl
data16
mov
add
sahf
movsb
out
and
mov
mov
push
sar
popl
cld
jo
push
das
pop
sbb
push
arpl
popa
jmp
call
leave
sbb
jno
in
inc
pushf
enter
pop
push
ss
and
imul
pop
ds
popa
repz
inc
popl
sub
insl
xchg
test
adc
aad
pushf
fwait
push
jecxz
aaa
into
jae
or
movsl
lret
into
mov
fbld
mov
es
jo
lcall
sub
adc
dec
push
sbb
push
xchg
xlat
and
xor
mov
je
xor
mov
data16
adcl
xchg
lods
cltd
movaps
int3
aas
inc
stc
inc
nop
push
push
cmp
into
pop
xchg
or
rolb
dec
cmp
pop
mov
jnp
mov
mov
rcll
xchg
dec
std
mov
xchg
lods
sbbb
or
sub
lds
sbb
cmp
int3
jae
add
xchg
jmp
jle
push
imul
dec
sbb
stc
cmc
pushf
in
sbb
aad
and
mov
sub
popa
adc
pop
and
sbb
sbb
fldenv
inc
mov
pop
push
or
sbb
loopne
rolb
cli
jns
and
je
pop
pop
test
add
out
mov
mov
or
les
xorb
mov
push
test
in
popf
insl
cmp
nop
out
adc
fmull
lods
in
dec
inc
ret
enter
jnp
ret
jmp
xlat
cmp
and
inc
dec
enter
out
inc
dec
mov
jmp
xchg
lret
pop
ret
inc
jb
sbb
xorl
add
sub
pop
scas
xchg
dec
xor
loopne
mov
add
repz
push
setbe
mov
ret
inc
inc
dec
xchg
sti
add
pop
ja
lcall
inc
stc
shl
jg
push
pusha
ds
push
repz
rorb
arpl
cmpl
cmc
xorl
bound
add
push
and
and
rcr
jecxz
pop
jb
cmp
cmp
pop
push
cmp
jecxz
repnz
sbb
sub
push
add
push
and
mov
je
lret
cltd
mov
and
mov
fld
add
cmp
xchg
pusha
insl
jne
pop
test
cmp
sbb
and
and
inc
cmpsb
xchg
ljmp
push
and
sahf
test
rorb
and
push
mov
sar
out
pop
push
mov
cmpsb
rolb
sbbb
add
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
mov
je
adc
sub
push
push
jmp
hlt
out
sti
popf
scas
insl
es
sub
add
rclb
fwait
ljmp
mov
xchg
xchg
lret
std
ljmp
stos
jno
inc
mov
cmp
adc
or
mov
leave
push
and
jns
aam
xlat
and
cs
je
xor
adcl
sub
or
lret
mov
leave
pop
clc
and
stos
add
mov
dec
daa
icebp
xor
mov
xor
inc
add
adc
mov
cwtl
sbb
in
mov
fildl
aas
lods
mov
mov
ljmp
pop
shrb
mov
jne
hlt
adc
outsb
mov
mov
mov
xchg
dec
xchg
mov
in
je
ljmp
or
test
dec
mov
out
mov
sbb
sbb
adc
adcb
insl
xor
lods
xor
xor
jbe
stos
adc
sti
int3
cld
mov
push
dec
fcoml
jmp
or
stc
inc
push
aaa
add
popa
mov
mov
pusha
mov
mov
dec
ret
jns
in
in
and
cmp
inc
inc
cwtl
mov
push
fs
lahf
mov
pushf
jne
push
jns
sub
inc
mov
dec
out
pop
fnstcw
jae
mov
ret
aaa
daa
xorb
sub
push
stos
xor
adc
cmpsb
aaa
or
dec
mov
jmp
pop
lcall
add
mov
mov
pop
fiadds
push
mov
pop
or
cwtl
std
popf
inc
mov
stos
in
nop
ror
mov
js
out
inc
js
adc
and
sarb
jp
inc
insl
inc
lock
jnp
and
add
lock
jg
in
test
adc
cmp
cmp
lahf
sub
xor
mov
insb
xor
jg
in
xor
pop
push
fnstsw
fmul
mov
add
insb
xchg
inc
xchg
push
je
sbb
jecxz
xor
js
mov
sbb
xor
jae
jno
aas
sbb
mov
dec
test
orl
jle
test
dec
xchg
add
shl
dec
sbb
movsb
jne
sbb
xlat
cmp
cmp
push
imul
subl
out
jbe
inc
inc
and
add
dec
popf
clc
jns
movsb
dec
xchg
cmpsl
mov
dec
push
cmpsb
iret
push
subb
sbb
test
out
mov
or
push
push
scas
add
jb
add
andl
and
fucomp
jmp
imulb
cmpsb
shl
sub
dec
test
test
mov
aam
cmp
out
jbe
jle
je
fisubrl
pop
xchg
sub
dec
sbb
repnz
enter
xor
fmull
push
jb
pop
lods
adc
je
mov
xchg
sub
jbe
cli
dec
xchg
cmpb
inc
inc
fistpll
out
cs
pop
gs
pop
mov
push
inc
inc
pop
test
scas
or
jmp
mov
and
dec
add
adc
mov
jb
stos
inc
aas
test
es
or
mov
pop
sub
or
aas
fstps
js
call
sbb
lock
xchg
inc
cwtl
xchg
cmc
sub
out
rcll
test
arpl
or
lods
sbbl
adc
mov
inc
aas
sub
dec
push
dec
or
push
mov
mov
add
sbb
sbb
and
out
nop
push
sub
scas
cli
mov
stos
das
lcall
mov
outsl
cmp
scas
popf
popf
fdiv
pop
mov
jb
int
add
sbb
aas
int
dec
adcb
fcompl
sbb
int3
aas
xchg
shrb
aad
add
pop
enter
push
jmp
or
fiaddl
mov
imul
arpl
test
jmp
inc
xor
pusha
fs
into
out
out
mov
cmp
loope
movsl
sub
fistpl
inc
ds
xlat
ljmp
stos
mov
mov
xchg
fisttps
jb
nop
sub
cmp
data16
les
sub
lret
insb
mov
add
fists
add
cwtl
loope
mov
cmp
lods
mov
shll
dec
cmp
dec
mov
sub
repnz
mov
xchg
cmp
pop
mov
mov
jo
je
jo
push
inc
movsb
jle
pushw
stc
xchg
stos
shll
notl
sbb
aas
inc
mov
cld
mov
sub
daa
cmpsb
je
out
test
sbb
or
adc
cmp
xchg
popf
jp
pusha
mov
out
sbb
xlat
xchg
mov
es
sbb
jnp
stos
outsb
es
fisubl
mov
lock
pushf
pop
sbb
fcoms
xchg
addr16
cmp
jle
cmp
sbbl
nop
and
cs
jae
adcl
jne
inc
cmp
int
ja
push
lock
test
pushf
cmp
push
fdivrl
bnd
dec
scas
jmp
mov
add
xchg
test
inc
dec
aas
fnstcw
fidivrs
add
lock
mov
mov
stc
mov
lret
data16
mov
mov
outsb
xchg
andb
mov
pusha
outsl
mov
mov
addr16
add
daa
dec
push
and
adc
dec
inc
fnstsw
call
repz
dec
mov
frstor
inc
inc
stos
xchg
cld
jle
ljmp
xchg
sbb
xchg
call
mov
jns
lea
std
rorb
xor
push
repnz
lock
jno
pop
mov
fmuls
push
adc
push
je
sub
inc
mov
mov
cmpsl
cmp
inc
out
das
jecxz
rcll
xchg
repz
pop
sub
int
movsl
sarb
adc
movsl
mov
pop
sub
and
out
int
xchg
xor
addr16
cmp
or
ljmp
push
in
add
ds
mov
xchg
push
stos
sub
les
push
mov
push
das
jecxz
fiadds
pusha
stc
xlat
jbe
std
and
or
insb
sub
mov
and
adc
imul
xchg
sub
mov
lret
decb
mov
mov
ljmp
insl
fmuls
inc
pusha
sahf
js
ja
mov
sbb
lahf
adc
sub
scas
mov
into
sub
lods
aaa
jbe
ret
pop
es
dec
test
imul
negl
fwait
pop
push
jge
int
mov
stos
push
mov
or
xchg
out
pop
xchg
sbb
hlt
fs
dec
pop
adc
xor
das
or
dec
je
lret
lret
xchg
mov
jnp
push
push
dec
jecxz
lahf
popa
divl
xchg
pop
sbb
mov
imul
adc
out
ljmp
loope
mov
push
ja
rolb
sub
aas
cltd
and
xchg
cmp
lods
push
add
adc
iret
pop
in
clc
das
sub
test
inc
and
out
cmp
int3
push
testl
test
inc
dec
jae
stc
xor
cmp
aad
dec
stos
mov
mov
int3
mov
mov
sbb
sti
insb
repz
addr16
outsb
jg
ds
loope
arpl
push
dec
jns
mov
cmp
push
jp
lock
fnsave
data16
aaa
cli
imul
sub
push
addl
fimuls
pop
stos
inc
sti
pop
loope
cwtl
ljmp
sbb
jle
hlt
inc
fcoms
dec
lea
cli
push
mov
cmp
sbb
and
mov
sbb
cmpb
fidivl
cmp
push
stos
rcr
ljmp
inc
lea
dec
xchg
ret
shrb
sbb
in
lcall
adc
pop
rcll
push
mov
int3
mov
inc
lcall
lret
mov
movsb
shll
mov
fldenv
push
addr16
mov
push
scas
push
mov
jle
ja
pop
xchg
adc
stos
fildll
mov
js
pop
inc
imul
add
fcom
xorb
movntps
lcall
fstl
cli
in
xorb
jbe
dec
rorl
shll
dec
imul
lds
jg
imul
test
cmp
add
push
mov
in
dec
xchg
hlt
xor
fcmovbe
cld
in
clc
xchg
jo
jle
ss
mov
jmp
pusha
fwait
daa
inc
popf
fdivs
push
add
pusha
xchg
xchg
repnz
pop
adc
add
inc
movl
ds
cmp
and
sbbl
jg
in
stc
xor
outsb
in
push
jb
jecxz
movl
mov
movsl
jnp
and
sbb
cs
scas
push
fmuls
enter
fstpt
inc
negb
xchg
mov
mov
mov
pop
dec
stos
cltd
nop
mov
imul
push
movsl
fisubrl
push
xor
xchg
sbb
push
arpl
cs
lods
int
cltd
push
and
xchg
jecxz
xchg
push
jge
push
xchg
test
addb
test
rep
cltd
pop
dec
add
or
push
aas
mov
cmpsl
outsb
stc
ja
xor
int3
sbb
mov
icebp
mov
xchg
sub
mov
in
pop
cmpsl
movsb
push
jmp
add
ficoms
loope
mov
cmp
mov
fdivrp
seto
and
out
mov
aaa
dec
hlt
add
test
sbb
sti
shrl
fldenv
in
add
hlt
stos
adc
aaa
sbbl
fmull
cmp
xchg
aad
sbb
lds
cmp
jo
pop
or
sub
mov
xchg
pop
dec
scas
fsubrs
add
loop
mov
jo
lcall
das
stc
clc
rolb
push
sbb
adc
fwait
xlat
ds
repz
mov
pop
repz
repnz
cmpsl
dec
rorb
push
and
xor
xchg
fmul
insb
cltd
shrb
mov
dec
mov
jmp
scas
shl
mov
and
inc
je
mov
adc
mov
cmpsl
mov
pop
orl
sarb
pop
adc
pop
pushf
sub
push
mov
adc
push
jp
mov
out
sub
inc
or
imul
pop
pop
repnz
jbe
add
dec
daa
lods
lock
xor
sub
cwtl
aam
cld
mov
dec
loop
cmc
mov
fldcw
std
out
call
and
mov
adc
int3
add
fdivrs
sbb
pusha
pop
sar
adc
mov
leave
sbb
sbb
jmp
adc
insb
shll
xchg
adc
lahf
mov
lods
xchg
sub
sbb
les
add
jae
xor
movsl
bound
shll
in
adc
push
repz
shll
dec
fdivl
dec
dec
je
scas
addb
dec
and
pop
arpl
ja
xor
mov
mov
jns
lcall
nop
jmp
shr
clc
lock
addr16
push
fistpll
pop
addb
cmp
fst
sbbb
or
pop
xchg
mov
dec
jnp
lret
fdivrp
mov
stos
mov
inc
mulb
push
cld
sub
mov
ss
les
jo
test
mov
testl
fs
mov
popl
fistps
insb
push
insl
fstpt
pop
dec
cmp
loope
push
or
mov
pop
xchg
dec
add
test
popf
fldl
jns
sbb
pop
jbe
nop
or
fisubs
sbb
mov
mov
sahf
or
and
movsl
cltd
xor
clc
mov
icebp
push
test
and
xchg
test
sbb
lods
add
jbe
mov
xchg
rorb
mov
mov
ja
in
loopne
mov
jle
push
jmp
xchg
sub
inc
mov
rcll
aas
cld
adc
test
add
pop
lds
mov
je
mov
xchg
test
sahf
xchg
sti
fwait
insl
call
std
push
dec
repnz
sbbb
enter
jbe
and
dec
enter
pop
cmp
add
pminsw
inc
mov
ret
dec
fwait
js
outsl
test
cltd
call
fistpl
pusha
inc
cmp
dec
sbb
dec
or
adc
push
push
rcr
pop
dec
add
cli
gs
sbb
push
imul
test
cmpsl
push
or
testl
out
icebp
mov
jle
sbbb
mov
and
stos
or
cmpsl
jle
or
leave
lods
sub
in
lds
xchg
jecxz
mov
adc
lahf
dec
test
and
mov
dec
rclb
mov
movl
es
cmp
and
ja
xchg
inc
dec
cwtl
mov
fsts
ret
in
sub
movsl
sbb
adc
popa
jnp
jge
shrd
cmpsb
rorb
icebp
insb
out
arpl
je
adc
jle
push
or
mov
addr16
cmp
sbb
lcall
fisubrl
add
xchg
cli
pop
jle
ret
shlb
in
mov
aad
jp
jne
repz
cmpsl
loopne
pslld
mov
sub
scas
dec
inc
and
cmp
jge
cmp
push
stos
fistps
insl
in
or
adc
push
push
dec
mov
ljmp
mov
into
cmp
ljmp
loopne
add
mov
out
sbb
adc
xor
inc
pop
ret
jmp
mov
dec
cmpb
sahf
fnstenv
inc
scas
inc
sub
enter
test
sub
add
fimuls
andl
xorb
mov
pop
icebp
adc
pop
mov
mov
xchg
movsb
jle
inc
push
jmp
insl
mov
fisubrl
mov
mov
testl
movsb
mov
ss
imul
sub
sub
and
jo
or
sub
mov
adc
cmpb
sub
xor
add
ss
jns
inc
sahf
lcall
adc
cmp
sahf
ret
or
cmp
sbb
jmp
sbb
or
mov
mov
push
mov
inc
into
ret
dec
pop
push
push
inc
aas
inc
push
mov
ja
or
bound
fstpl
add
ret
dec
sub
mov
outsl
frstor
xchg
stc
mov
sbbl
push
jbe
int3
cld
arpl
sar
sub
dec
sbb
xor
and
cmp
cli
in
cli
jno
pushf
mov
fs
jo
mov
lock
sub
cmc
push
jecxz
outsb
mov
gs
dec
popa
fdivl
mov
add
rcr
jb
mov
repnz
push
mov
xchg
jg
push
arpl
mov
ljmp
outsl
lret
aam
fxch
popf
lods
jmp
les
sub
sub
loope
test
imul
repz
jle
sub
inc
pop
and
iret
pushf
sub
dec
inc
push
je
mov
aam
aad
aad
dec
aas
push
jnp
out
mov
pop
cmp
imul
imul
stos
inc
sarl
orl
int3
fwait
dec
out
xlat
jp
ja
xchg
hlt
cs
addl
xchg
daa
mov
rclb
ljmp
inc
pop
xchg
pop
stos
mov
aaa
cmp
in
ss
mov
cld
xchg
inc
rcrb
cltd
or
stc
leave
xchg
pop
push
sbbb
dec
add
ljmp
mov
mov
pop
inc
cmc
loop
cmpb
icebp
das
mov
add
sub
les
in
lds
cltd
cld
push
adc
pop
sahf
pop
shlb
xchg
inc
mov
cmp
sbb
shl
addr16
mov
jp
dec
outsb
out
xlat
mov
fldl
test
pop
out
inc
xor
ret
les
es
or
dec
lahf
out
repnz
leave
push
scas
mov
mov
pop
ficoms
fisubrs
fdivrp
int
stc
inc
xor
and
adc
mov
popf
imul
push
pusha
jne
addr16
inc
mov
mov
xlat
roll
arpl
add
scas
arpl
enter
test
pop
aas
mov
psrad
sub
stos
repnz
pop
xor
jae
sbb
in
cwtl
iret
pushf
repnz
in
in
shll
outsb
imul
call
jp
inc
mov
mov
mov
sbbl
pop
xchg
lods
sub
adc
icebp
popa
out
nop
out
jg
lret
icebp
and
cmp
ljmp
fldenv
or
sbb
adc
cmp
lds
int
movsl
jle
popa
movsl
mov
adc
sti
aas
ljmp
xchg
jp
push
mov
or
xor
loope
ja
fmul
dec
or
xchg
roll
push
mov
outsb
test
cmpsl
mov
lods
or
outsl
scas
xchg
iret
or
pop
sub
mov
add
inc
jo
sbb
sub
mov
arpl
jge
pop
scas
stos
xchg
and
push
sub
sbb
out
xchg
add
push
xor
pop
movsb
movsl
push
mov
inc
and
and
mov
jecxz
mov
or
stos
push
mov
cmpsl
out
cmpsl
ror
mov
ss
pop
pop
jns
aas
jmp
add
lahf
mov
mov
fisubs
outsb
aam
fstpt
fwait
cmpsl
pop
clc
andl
add
mov
mov
xor
fdivrs
scas
or
xchg
xchg
and
mov
dec
mov
fldenv
push
fildll
pusha
mov
inc
fldl
mov
sbb
cmc
xchg
sub
hlt
movb
in
test
bound
pop
jmp
mov
mov
push
mov
pusha
push
cmp
out
lods
pop
adc
sub
jp
cmpsb
lea
mov
cmp
mov
adc
sbb
cmc
lahf
jnp
mov
incb
mov
lcall
jnp
idivb
sub
es
cmpsl
aaa
lods
stc
sbb
mov
hlt
ja
mov
and
cmpl
icebp
sub
pop
insb
push
xchg
cvttps2pi
in
mov
dec
pop
shll
cmpsb
cmpsb
add
addr16
push
xchg
cmpsb
cmp
movsl
dec
dec
jmp
or
sub
push
shl
mov
pop
jnp
push
shr
in
dec
iret
in
and
and
add
xchg
fadd
cmp
adc
mov
sub
sub
lods
or
push
mov
and
int3
pop
pcmpeqb
push
loope
push
sbb
xchg
roll
inc
bound
cld
cmpsb
xor
icebp
dec
mov
mov
gs
std
xor
outsb
jo
xlat
pop
fsubs
pop
push
dec
cwtl
out
sbb
and
lret
aaa
adcb
scas
cli
xor
push
cmpsl
aam
pop
dec
pop
sub
lea
dec
shll
mov
sub
ds
shr
and
pop
into
stos
fnstcw
cltd
cmpsl
sub
sbb
repnz
ljmp
mov
xchg
mov
xor
lock
mov
in
cs
js
sbb
popa
add
popa
mov
leave
iret
inc
cmp
pop
cmp
gs
xchg
clc
push
sub
pop
test
js
mov
push
xor
stos
pop
adc
ret
xor
dec
jl
inc
xor
adc
icebp
in
bound
scas
sub
mov
ficomps
cmp
stos
adc
mov
lea
and
bound
jnp
mov
add
sahf
inc
pop
pop
lods
xchg
jmp
ret
dec
es
test
xorl
out
pop
les
and
jmp
call
das
icebp
adcl
push
and
and
jbe
and
push
mov
mov
out
lock
mov
mov
lods
push
dec
push
mov
fiaddl
and
rclb
in
adc
pop
xor
adc
xchg
lret
mov
jp
and
xchg
cmp
cmpsl
in
xlat
into
lods
jmp
push
loopne
mov
nop
and
das
and
xchg
and
int3
addb
adc
and
sbb
pop
inc
fadds
xor
xchg
adc
dec
inc
fs
les
xor
sub
sub
pop
int3
inc
mov
jle
stos
cmpsl
mov
icebp
jp
xchg
out
xchg
lcall
in
and
xor
jne
push
dec
mov
into
out
cmpsb
pop
inc
cltd
xchg
sarl
push
leave
lahf
pop
arpl
fdivrl
gs
xchg
inc
jb
adc
testl
add
mov
sti
icebp
ljmp
or
aam
push
dec
int3
nop
je
je
mov
mov
jg
std
outsb
pusha
out
xchg
dec
adc
jl
lods
hlt
dec
ljmp
pusha
mov
test
bound
test
xchg
jp
xchg
in
push
and
insl
mov
inc
dec
shll
xor
fcoml
out
add
sbb
imul
and
and
inc
push
lods
daa
icebp
push
ror
pushf
dec
loopne
jl
out
js
mov
cmp
jmp
shl
neg
ss
std
fdivr
sti
adcb
sbb
xchg
je
arpl
sbb
icebp
pcmpgtb
inc
pushf
arpl
sbb
mov
fimuls
out
gs
es
out
adc
repz
jle
jg
mov
call
pop
push
jge
in
or
jbe
xlat
shrb
out
cmpsb
ja
mov
lods
fwait
lods
lret
xor
popa
shrl
xor
stos
xor
and
inc
fmull
dec
outsb
sti
pop
das
sub
daa
sbb
sbb
sbb
ja
arpl
fidivl
divl
clc
jmp
xchg
or
movsb
add
insl
testl
mov
ret
or
andb
xchg
xchg
js
sub
dec
jp
push
decl
fildl
dec
cmc
or
icebp
fstpl
in
add
mov
cmp
jbe
mov
or
lock
testb
addr16
adc
out
repz
inc
stos
inc
cmpsb
in
inc
cmp
jle
addl
pusha
mov
icebp
bound
loop
lret
test
int3
or
or
cmc
fwait
jb
sub
out
sbbb
push
adc
js
cmp
mov
or
out
aad
hlt
sahf
xlat
push
push
sub
jno
and
aas
dec
jnp
cs
jmp
add
nop
push
cmpsb
adc
and
sbb
mov
imul
jno
or
loope,pt
pop
repnz
mov
iret
dec
fs
jb
push
fistps
inc
adc
fcoml
rcl
cs
mov
mov
fisubl
fadds
in
push
sub
cmc
loope
loope
and
popf
mov
movsl
sbb
fnstenv
aas
jmp
orl
out
adc
out
js
fstpl
mov
mov
xor
test
jl
or
add
divb
xchg
xorl
or
xchg
fisubl
and
lods
pop
mov
xor
mov
pop
inc
pop
mov
push
enter
clc
jo
adc
fldcw
sbb
lcall
push
test
mov
daa
lds
daa
pop
lret
lret
dec
test
out
scas
jp
fbld
repz
jmp
adc
dec
add
inc
dec
in
push
jb
enter
fwait
lods
jg
stos
jmp
cli
cld
out
inc
cli
es
cli
scas
xchg
fadds
jne
out
ror
rcr
sbb
jecxz
cmp
lret
mov
sbb
sti
outsb
push
inc
lret
pop
push
sub
mov
push
inc
sti
loop
and
test
add
mov
push
pop
dec
jg
xor
jns
jge
xor
jno
pop
int
orl
inc
adc
cmp
adc
cmpb
xchg
loope,pt
mov
loopne
test
jne
dec
sbb
stos
fcomps
mov
movsb
xchg
cmp
sahf
inc
mov
adc
cli
xchg
ficoml
jb
adc
pop
inc
jg
push
pop
sbb
inc
adc
inc
adc
jno
or
push
sbb
rorl
xchg
iret
sub
das
aas
dec
pop
pop
xlat
sbb
add
jb
outsb
int3
ficoms
out
rolb
loopne
shrb
hlt
dec
pushf
cld
int
dec
xchg
movsb
mov
xchg
mov
cmp
aad
testb
test
add
iret
sbb
sahf
aam
push
xchg
push
in
xchg
sti
or
cmp
inc
cmpsb
mov
iret
in
aas
orb
dec
ficoms
push
mov
sub
subl
and
sub
mov
mov
lcall
push
and
lock
clc
out
repz
sbb
clc
mov
sti
fdivrs
or
sub
pop
cmp
sub
loopne
roll
in
divb
dec
jno
fs
ljmp
sbb
loopne
fcomps
xor
cmp
mov
orb
xchg
leave
scas
std
daa
mov
add
mov
xchg
imul
fwait
stc
and
and
push
mov
xchg
mov
rcrl
cmp
rcrl
jp
mov
mov
jo
in
sub
cmc
arpl
stos
icebp
mov
clc
xchg
lods
pop
daa
sbb
xor
pop
mov
jmp
jmp
push
jp
mov
daa
cmpsb
pop
leave
add
cmp
shlb
ss
lods
and
xor
pop
repnz
pop
pop
and
dec
ljmp
adc
addl
rcr
xchg
mov
mov
push
jbe
inc
stos
scas
in
push
daa
cmp
imul
jl
ss
jl
mov
test
mov
mov
adc
jns
inc
adc
pushf
rcr
push
sub
test
test
and
fs
rcrl
lret
sbb
xchg
or
mov
cli
mov
pop
mov
sbb
and
pop
or
pop
push
mov
and
shrl
iret
shll
jnp
rclb
push
xchg
das
rol
loopne
pop
pop
cmp
insl
mov
mov
int3
mov
mov
pop
lahf
jmp
push
inc
push
mov
add
ss
rclb
dec
scas
jnp
fs
ret
lea
fstl
push
idiv
cmp
lods
cltd
or
rorb
dec
push
jne
mov
pop
sbb
dec
outsl
rcr
dec
and
fadds
pop
jnp
aad
mov
push
out
mov
lret
imull
outsl
fnstenv
fsubs
pusha
pop
push
xlat
mov
xchg
test
sub
push
out
xor
stc
adc
rcrl
mov
mov
mov
hlt
cltd
imul
xchg
jp
push
stc
jecxz
push
mov
adc
or
and
sbb
adc
sti
int
sub
mov
xchg
pop
xchg
cmp
dec
addr16
sti
mov
mov
mov
stos
inc
add
cmpsl
test
sarb
jp
mov
fnstenv
add
bound
inc
icebp
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
adc
dec
out
and
jge
loope
cmpb
pop
push
dec
pop
stos
xor
push
nop
dec
lods
shr
mov
repz
jb
push
lahf
push
pushf
add
fnstsw
in
bnd
adc
jmp
mov
jg
adc
inc
jge
nop
push
stos
lods
nop
das
cs
sahf
inc
shr
test
adc
daa
dec
sub
stos
dec
addr16
movsb
push
subb
pusha
test
andb
push
repz
xchg
fadds
data16
and
pop
ljmp
ja
imul
xrelease
roll
sar
dec
movsb
call
rcrb
les
sub
push
xchg
imul
bound
dec
add
arpl
push
cmp
mov
add
and
mov
inc
js
mov
sbb
jb
or
repz
push
repz
cmpsb
lcall
xor
and
or
loop
lahf
mov
sbb
jnp
enter
cmp
out
pop
cld
xchg
stos
dec
cmp
int3
jl
adc
test
pop
jmp
push
sub
cli
cmpsb
or
pop
push
add
cmovl
jns
push
jno
cmp
test
dec
test
mov
pushf
movd
xchg
mov
or
repnz
sbb
mov
outsl
push
std
mov
pusha
sarl
ds
in
push
or
mov
daa
sarb
mov
adc
xchg
add
shlb
cwtl
pop
inc
std
push
dec
jle
pop
inc
sub
test
or
mov
push
mov
xchg
std
shll
icebp
in
rorb
out
mov
out
sahf
mov
orb
es
and
imul
mov
test
pop
dec
test
push
aad
negb
or
or
mov
mov
jmp
sub
or
add
mov
inc
pop
and
fwait
push
aaa
stc
cld
roll
sub
inc
inc
test
hlt
xchg
mov
enter
xor
mov
and
push
adc
shlb
jne
std
leave
add
movsl
xlat
adc
insl
repz
lretw
inc
or
mov
xchg
xchg
out
lahf
pop
rorl
mov
adc
and
xchg
popa
orl
stos
scas
cmp
fwait
push
insb
mov
cli
cmp
clc
dec
mov
test
cmp
in
aas
loope
test
hlt
dec
and
xchg
mov
fbstp
add
addr16
pushf
mov
stos
out
xchg
in
ret
cmpsl
or
cmpsl
xor
mov
and
out
mov
jns
sub
mov
xchg
pop
mov
xchg
ljmp
pop
inc
movsb
dec
lahf
daa
push
mov
xchg
lret
inc
cld
out
mov
lret
cli
fnstenv
clc
outsl
ficomps
pop
fisubrl
mov
push
jl
fldt
cmpsb
or
jne
shrl
in
or
loopne
bound
out
mov
mov
mov
fdivrl
movsb
xchg
xor
sar
out
shrl
pushf
mov
imul
push
mov
pop
test
pop
push
ljmp
lahf
cli
aas
and
xlat
pop
iret
xor
pop
lods
mov
es
out
loop
xchg
jl
jmp
lret
movsb
sti
mov
sbb
mov
pop
insl
imul
addr16
xchg
lret
cmpsl
push
dec
hlt
add
and
jmp
repnz
dec
into
xor
shll
mov
adc
stos
mov
mov
aas
std
cmp
adc
jb
test
fcoms
jne
aaa
mov
aaa
pushfw
jg
add
mov
xor
mov
mov
dec
div
mulb
fcmovu
xchg
sub
adc
pop
inc
xor
xchg
lods
mov
int
clc
incl
jmp
adc
xacquire
out
je
mov
lret
hlt
pop
shll
mov
xlat
jo
jg
ds
inc
mov
adc
aad
jbe
adc
pushf
int3
test
lock
mov
sub
divb
add
sub
fucomp
and
jno
rcrl
mov
cmc
cmpsl
and
test
ret
add
jb
xor
dec
push
add
inc
mov
pop
and
mov
xorl
test
cli
adc
dec
out
ret
mov
cmp
lahf
insl
xlat
int3
add
testb
int3
pop
out
hlt
aam
daa
rorl
jge
inc
outsb
sar
and
std
xlat
je
dec
jecxz
movb
ror
jg
aas
xor
sbb
dec
mov
jne
lods
sbb
adc
pop
cmc
cld
add
push
jl
xchg
imulb
pop
loop
test
es
sub
mov
or
xchg
push
out
xor
lea
jns
sub
adc
dec
loopne
sub
adc
jne
mov
xchg
outsb
push
popa
mov
add
imul
loope
in
dec
addr16
andb
imulb
into
pop
cltd
stos
pop
out
dec
jb
mov
cmp
imul
pop
add
out
jo
xchg
push
adcl
nop
cmp
xor
inc
push
std
int
mov
adc
fdivrl
test
or
add
test
rorb
sub
xor
test
bound
push
cmp
int3
adc
in
pusha
jbe
lock
loopne
and
jecxz
enter
les
jge
xchg
xchg
int3
inc
or
xchg
sub
fildl
es
jmp
sti
es
adc
fs
ja
mov
sbb
xor
lods
and
fwait
lods
adc
push
sti
js
sbb
push
sbb
aam
xor
jno
das
jg
sbb
cmp
or
push
cmc
orb
xor
sarl
fmul
in
add
fildl
sub
or
cmp
in
cmpsl
mov
aaa
or
push
daa
scas
lret
aas
mov
inc
mov
aad
jb
xchg
jns
test
pop
pushf
insl
push
xchg
pop
mov
and
cmpb
jb
inc
mov
inc
daa
cmpsl
cs
push
add
rcll
gs
out
inc
sbb
sbb
sub
bound
pop
adc
mov
push
bound
hlt
jne
sub
pop
lods
mov
mov
or
jg
sub
adc
fdivrs
sub
inc
notl
xor
cmp
jbe
cmp
cwtl
pop
adc
aas
repnz
lods
cmp
sbb
test
mov
cmp
repnz
add
and
lea
imul
imul
jp
test
ret
into
test
mov
jb
cmp
mov
repz
or
lods
movsl
scas
xchg
xorb
pop
lock
insl
pop
clc
das
jno
xor
dec
jp
or
cmp
mov
lret
aas
jl
adc
mov
mov
ja
inc
iret
xor
addr16
mov
inc
xchg
push
lock
sbbl
xor
fisubrs
imul
hlt
and
clc
lods
fcmovnbe
jle
outsb
push
cmpsl
test
push
or
ficoml
xchg
ret
cmpsl
jae
push
dec
pushf
mov
xor
xchg
repz
or
dec
mov
fiadds
adc
adc
addr16
cs
pushf
popf
mov
fidivrs
cs
icebp
inc
dec
xor
cltd
cli
pop
lds
jmp
dec
dec
inc
adc
sbb
add
jnp
stos
pop
xchg
mov
int3
jle
xchg
jo
inc
xchg
and
pusha
mov
mov
push
mov
mov
insl
mov
fmulp
stc
sahf
test
mov
xor
loopne
in
lret
loop
add
test
loop
xchg
fisubs
mov
callw
ret
jl
xor
cmpsb
add
add
mov
pop
ret
pop
jne
negb
pxor
xchg
into
repnz
dec
and
push
mov
fsubrl
inc
pop
xor
test
sbb
mov
cmp
inc
xchg
shrl
stos
mov
pop
shrb
ficoml
inc
and
lret
mov
pop
inc
out
test
push
pop
xor
ljmp
xchg
push
mov
dec
fsubrl
mov
es
into
jbe
aas
pshufw
push
and
xchg
fwait
inc
cmpb
xchg
cmpb
jns
pop
jb
xchg
push
popf
es
sarl
mov
xchg
in
int
in
scas
sub
or
inc
dec
and
xchg
mov
cld
ds
shrl
pushf
cmpsb
cwtl
dec
stos
inc
xchg
int3
push
int3
mov
roll
sbb
xor
psubq
mov
imul
mov
push
sbb
pop
fcoml
push
sub
popf
mov
mov
gs
cli
les
pushf
fld
test
jns
mov
cmp
pop
stc
rcr
jne
push
ret
or
rol
or
icebp
mov
out
call
aas
sti
inc
xchg
inc
jbe
xchg
mov
loopne
and
fildll
xor
lods
inc
adc
das
pusha
out
cmp
mov
arpl
out
in
xor
in
pop
cmp
imul
scas
fcomp
push
dec
xchg
cmp
js
dec
adc
popa
int3
jmp
adc
bound
scas
fwait
dec
cltd
adcb
leave
sub
in
fstpt
sbb
fnsave
repz
in
into
cmp
hlt
pop
das
sub
mov
leave
mov
adcb
int
lret
sub
fwait
test
das
lods
xchg
pop
mov
lahf
stos
push
nop
cmpsb
aaa
xorl
inc
cmp
sub
sbb
sub
jne
push
sbb
mov
pop
cmp
jbe
add
lock
popa
clc
add
lods
xchg
and
vmread
das
cmpsb
adc
mov
inc
jge
mov
push
lods
push
and
or
add
movsb
dec
loop
xor
cs
imul
pop
in
cs
sahf
stos
outsb
mov
push
dec
pop
dec
cmc
in
ret
into
daa
and
dec
sahf
fisubs
mov
cs
or
and
je
xchg
aaa
shrl
inc
sub
repz
xchg
scas
inc
jg
inc
mov
aad
add
iret
jmp
xchg
push
mov
jnp
xchg
mov
push
lds
adc
xchg
xor
xchg
sub
and
mov
or
and
addr16
jb
cmp
adc
loopne
popa
sub
mov
fstps
cmpsb
inc
mov
or
sub
shrl
xor
xchg
mov
push
hlt
shlb
xor
test
xorpd
adc
jle
push
dec
std
sar
bound
dec
dec
dec
fstpl
dec
outsb
enter
dec
sbb
push
cmp
push
fistps
sarb
adc
mov
sti
insl
out
mov
xchg
fsubl
mov
cmpsl
mov
cld
sarb
stos
mov
lahf
call
xchg
ret
xchg
subb
into
cld
add
sub
pop
mov
fisubs
inc
pop
xor
loope
sarl
pushf
inc
jne
es
inc
mov
mov
or
push
test
lahf
sub
inc
mov
pop
mov
mov
aaa
add
or
inc
sbb
pop
popf
sarl
mov
inc
in
inc
sahf
dec
repnz
inc
sbb
push
pusha
jbe
stos
dec
mov
cmc
ja
fnstcw
inc
and
movsb
daa
pusha
sub
pop
es
jb
and
or
pusha
insl
fldenv
hlt
movsl
jecxz
and
fwait
shrl
adcb
insb
mov
xchg
push
xchg
sbb
jno
sub
cmp
or
cmp
sub
jge
xchg
lcall
inc
mov
cld
mov
shrl
jns
adc
lea
xor
inc
adc
pop
push
push
mov
lea
inc
mov
mov
xchg
sbb
lods
mov
icebp
pop
mov
data16
cmpsb
xchg
push
add
cmp
mov
in
int3
repnz
jnp
add
inc
and
push
mov
adcl
add
lcall
ss
xchg
sub
rorb
shll
out
cmp
push
dec
sub
xchg
inc
js
dec
and
adcb
xor
loop
pop
int
test
inc
cmpsb
les
dec
sar
cs
cs
mov
and
push
cs
xchg
adc
mov
outsb
xchg
rorb
scas
movsb
inc
or
xor
ficomps
push
xor
jle
inc
es
mov
and
fwait
repnz
inc
sub
mov
addr16
xchg
sub
mov
and
icebp
adc
or
xor
pop
push
scas
roll
mov
push
dec
adc
jbe
fcompl
clc
push
daa
addr16
mov
aam
and
sbb
lock
clc
popl
jl
loopne
repz
and
sub
dec
xor
cmp
xlat
lds
orl
leave
bound
ss
daa
lahf
cmp
out
sub
cli
dec
aaa
inc
mov
fstpt
pop
js
pusha
sub
xchg
cwtl
loope
enter
std
add
addr16
jno
push
sub
jo
xchg
lcall
testl
dec
sbb
pop
adc
mov
cs
mov
mov
xor
fdivs
test
cmp
dec
std
jbe
aam
repnz
popa
dec
mov
push
mov
dec
mov
sbb
loope
rcll
cmp
leave
push
dec
out
lock
inc
push
loop
into
js
pop
outsl
push
push
and
push
mov
xchg
in
jo
ret
in
aaa
sub
cld
sahf
adc
pop
or
jns
sahf
push
lcall
xor
cmp
jo
inc
adc
loop
int
enter
add
add
mov
enter
in
xchg
pop
fisttpl
shlb
push
xlat
pop
jnp
mov
mov
inc
inc
push
mov
adc
sahf
xor
ds
fninit
arpl
imul
clc
wbinvd
or
pop
mov
aaa
inc
push
int
mov
or
pop
pop
jle
push
add
fildll
dec
jle
xor
lea
cli
lds
xor
sahf
dec
inc
dec
adc
adc
and
data16
leave
jmp
insl
push
das
and
mov
mov
aam
sbbl
sti
cmpsb
push
movsb
fistpl
test
push
cmp
or
loopne
test
adc
pop
aaa
pop
dec
jmp
data16
nop
ret
dec
add
loop
js
imul
add
popa
jnp
xchg
lock
push
cmp
sarb
sbb
fdiv
in
bound
insb
xchg
arpl
cmp
ds
xor
les
clc
push
int3
cmp
out
and
pop
mov
cmp
insb
push
int3
xor
cwtl
push
jns
icebp
push
into
test
jmp
outsl
pop
mov
cmp
pushf
push
or
enter
fstl
movsl
push
xor
cld
jb
pop
cmpsb
jae
push
cmp
add
inc
pop
pop
bound
jl
adc
daa
fwait
and
testl
outsl
jo
pusha
scas
sti
inc
shll
outsl
pop
mov
and
mov
jmp
arpl
aam
ljmp
mov
jp
lret
xchg
arpl
mov
mov
push
lahf
jo
pop
push
mov
iret
lret
sub
outsl
lods
sub
in
sub
in
dec
jne
in
pop
sub
das
or
mov
stc
daa
movsl
iret
sub
jmp
lahf
std
icebp
mov
inc
daa
out
push
mov
in
jae
push
out
movsl
xlat
dec
fmull
jnp
mov
cs
sbb
ja
dec
xchg
sub
xchg
pop
xchg
jp
jno
jmp
loop
shl
cwtl
jns
push
mov
iret
lds
mov
push
adcl
sub
push
sbb
pop
pop
sub
or
es
mov
push
jnp
mov
sbb
lds
push
in
xchg
mov
xor
call
xchg
jbe
push
mov
fistpll
js
or
rorl
push
jmp
clc
mov
out
ja
dec
dec
iret
mov
fmull
fcoms
xchg
popa
ja
test
jns
jle
mov
es
repnz
rcrl
xor
sti
js
and
mov
or
jns
xchg
xchg
mov
arpl
ja
mov
repnz
sarl
mov
cmc
inc
mov
rcrl
fimuls
loope
and
int
push
shlb
and
mov
out
jmp
iret
cld
aad
mov
out
xor
call
xchg
aad
repnz
pop
iret
push
addr16
pop
mov
ja
hlt
mov
dec
jge
iret
pop
js
push
es
push
dec
pop
lahf
mov
aas
pushf
mov
or
inc
mov
add
add
inc
js
sahf
scas
out
out
inc
push
mov
jb
xchg
inc
pop
mov
lret
cmp
shrl
mov
jg
sub
test
and
imul
mov
mov
lds
mov
enter
stc
jns
repnz
jo
lahf
fcomps
xchg
xor
or
scas
sahf
iret
gs
stc
out
jbe
inc
mov
cmp
int3
rcll
mov
jmp
add
jg
sbb
jno
int3
or
xor
mov
xor
sbbb
mov
xor
fs
jle
or
inc
pop
jge
or
sub
cmp
sahf
fldcw
fstp
test
xchg
int3
popf
xchg
sub
mov
jns
xor
lret
out
xchg
mov
lcall
ss
pushf
add
cltd
repz
dec
addb
mov
xchg
outsb
xchg
dec
orb
xchg
lret
scas
loope
mov
mov
pop
and
shl
scas
jl
sbb
and
jcxz
fbstp
js
adc
mov
pop
xchg
leave
adcb
fstpl
orb
div
and
call
ljmp
les
sub
mov
sbb
jo
push
lahf
push
push
test
mov
enter
sub
int
int3
and
bound
and
clc
loope
jmp
inc
ja
stc
jmp
aaa
outsl
stos
cmp
test
push
push
inc
mov
lcall
movsb
or
nop
mov
shl
xchg
pop
imul
and
stc
and
cmp
dec
add
repz
imul
push
out
dec
mov
mov
aam
push
cmp
shll
cmp
rcrb
xor
test
or
cltd
in
sti
sbb
adc
push
mov
lock
sbb
mov
daa
lock
and
xchg
test
push
fdivrs
loope
cmpsl
sub
mov
cmp
icebp
das
jl
repnz
push
jmp
xchg
clc
addb
movsl
mov
repz
push
push
push
pop
inc
mov
popa
leave
xor
pop
repnz
cld
cmp
stc
imull
xchg
mov
push
mov
inc
mov
lods
dec
jg
cmpsb
ljmp
dec
subl
mov
sub
arpl
mov
pop
xchg
sbb
pop
and
dec
mov
xchg
pop
pop
push
push
mov
jecxz
icebp
repz
cmpsl
iret
fnstcw
dec
or
push
and
add
lret
scas
mul
xlat
outsb
cmc
jp
lcall
inc
movsl
adc
in
dec
mov
in
add
jl
addr16
jge
push
xchg
or
ds
cs
fcmovbe
cmp
cmc
aas
mov
inc
sahf
xor
lock
ret
jae
int
adc
mov
in
mov
fnstcw
xor
inc
lret
sti
mov
cmpsl
iret
imul
pop
sub
push
lcall
iret
cmp
loop
nop
cmpsb
mov
fcmovnu
pushl
outsb
pop
push
inc
leave
xchg
xchg
cmp
es
lahf
out
sbb
mov
pop
mov
sub
sub
push
sub
movl
xor
xlat
cmp
lahf
mov
mov
mov
call
jno
jmp
add
lods
testb
cmp
int3
mov
xchg
xor
in
pop
movsl
dec
movsb
cmp
stc
loopne
repnz
push
fwait
add
jne
dec
adc
adc
sub
outsl
fldcw
adcb
jge
mov
call
cwtl
jl
sub
add
jmp
test
ja
popa
inc
push
pop
add
xor
cs
pop
fdivl
inc
lret
repz
adc
mov
stc
aas
daa
in
sbb
sbb
sbb
xchg
adc
loope
and
into
insl
loop
ficoml
jg
sbb
das
nop
in
outsl
lret
scas
mov
out
fs
push
or
fadds
mov
lret
rolb
mov
mov
repnz
popa
arpl
and
mov
icebp
repz
inc
xchg
lahf
pop
ret
cli
repnz
fmuls
xlat
mov
mov
data16
sub
fwait
or
lock
adc
xor
jno
mov
fdivr
shll
cmp
push
lret
lret
das
cmpsb
je
xor
xchg
pop
jl
xchg
ss
pop
and
scas
fisubrl
cmc
aad
and
imul
sbb
push
dec
xchg
and
cmp
int3
sub
pop
xor
lds
mov
leave
ljmp
lods
out
adc
mov
in
add
mov
aad
fstps
adc
cmp
fwait
xchg
inc
cmovns
test
cmp
std
mov
and
inc
fcos
xor
sub
in
sahf
sbb
mov
mov
call
sahf
pop
stos
arpl
cli
push
lods
inc
and
sbb
add
hlt
faddp
in
or
jle
aaa
adc
mov
sub
aam
and
dec
xchg
sbb
shlb
fimuls
sbb
data16
in
add
daa
add
mov
andb
test
cmp
and
sub
inc
pop
mov
xor
popa
and
xor
dec
loopne
lret
shrb
lcall
and
inc
stos
stc
cmp
mov
std
roll
cld
out
pop
jmp
or
mov
je
sbb
nop
cld
leave
das
jle
mov
and
movsl
stos
mov
sbb
pop
dec
push
adc
cmpsb
jb
mov
jne
cld
mov
and
jecxz
inc
repz
lods
out
stos
mov
push
cmp
clc
icebp
dec
jbe
dec
and
cli
out
popf
add
jae
hlt
iret
xor
repnz
in
and
stos
insb
in
insl
test
jge
fsubrs
fs
add
js
jns
outsb
lods
sbbb
call
dec
mov
bound
xor
aas
addb
lock
insb
jb
divb
out
push
add
cld
pop
fsubrp
jecxz
mov
dec
mov
std
imul
lcall
imul
xor
orl
xchg
lret
shl
adc
lcall
leave
test
shrb
push
and
sub
pop
cmpsl
ds
mov
daa
mov
and
jl
cmp
fdivs
cmc
hlt
in
mov
pop
cld
je
sti
push
test
and
sub
mov
sbb
cmp
xchg
cmc
jmp
test
jnp
jg
inc
mov
jmp
mov
mov
jle
fsubl
push
xor
push
add
cmp
add
adc
sub
clc
lret
fwait
inc
mov
inc
mov
or
sarb
sub
shrl
scas
test
jl
scas
adc
ljmp
int
dec
pop
fsubp
pop
mov
adc
or
inc
mov
roll
cmp
movsl
cld
loop
cli
cld
xor
lahf
addr16
push
scas
pop
fisttps
jp
test
dec
xchg
mov
cmc
lahf
popa
adc
adc
inc
xor
rclb
fistpll
sbb
pop
cld
int
pop
xchg
inc
push
mov
arpl
sub
cwtl
bound
in
aas
daa
pop
test
inc
es
mov
ficompl
jge
lods
push
add
test
inc
lcall
mov
or
cltd
or
mov
ljmp
inc
add
sti
out
sub
xor
xor
das
fmuls
cmp
xchg
adc
sbb
xor
scas
gs
sub
push
dec
clc
lds
test
adc
sbb
aam
sbbl
ljmp
mov
je
inc
sbb
test
mov
lret
arpl
pop
fstpl
cmp
lret
int3
icebp
int3
in
pusha
data16
popf
adc
movsb
xchg
lock
or
insl
enter
sbb
rcrl
stos
leave
xor
nop
jmp
add
fists
jg
dec
sbb
and
jecxz
movsl
movsl
std
or
inc
jg
imul
inc
lcall
pop
jp
jns
or
rorl
push
dec
mov
or
inc
cmp
aam
iret
ret
inc
dec
pushf
sbb
inc
push
dec
outsb
mov
jge
lret
nop
dec
adc
scas
push
mov
je
xchg
adc
dec
shrl
cvtps2pi
loopne
lock
mov
push
lock
pop
mov
adc
cs
or
sub
ds
mov
sub
push
adc
data16
and
push
dec
lods
xchg
shrb
ljmp
sbb
lcall
outsl
lock
mov
aaa
adc
xor
inc
sub
loope
mov
mov
mov
xor
les
movl
int
push
cmp
in
enter
jge
gs
add
pop
jecxz
das
les
cmp
roll
adc
bound
pop
add
xchg
int
xchg
adc
push
sub
std
fwait
add
pop
mov
xchg
or
and
dec
jp
test
jmp
es
sbb
xor
add
jmp
pop
mov
mov
in
inc
dec
mov
adc
push
addr16
mov
add
je
out
out
gs
jge
dec
cmp
das
int
mov
jbe
or
dec
movsl
adc
adc
inc
fs
jo
popa
aaa
mov
mov
xchg
xchg
aas
ja
push
call
mov
push
fs
push
sbb
iret
aad
pop
aad
cmp
mov
stos
mov
mov
mov
stc
ret
in
mov
test
sub
ja
fistl
fildll
aad
and
cmp
ret
bound
mov
out
inc
stos
xchg
sub
mov
out
xchg
push
pop
and
pop
sarl
scas
xchg
and
fmull
push
loop
adcb
inc
sbb
mov
popa
sbb
pop
jb
add
dec
xor
outsl
test
fimuls
cmp
pop
pop
push
adc
addr16
inc
arpl
lahf
lods
subb
cwtl
adc
mov
lahf
loop
call
repz
pop
mov
sahf
dec
stos
loop
in
push
inc
pop
data16
sub
lods
cmp
inc
xor
andb
sbb
std
fdivrs
xor
push
popa
xor
sbb
inc
mov
insl
xor
xchg
mov
repnz
xchg
clc
dec
pop
xor
add
dec
inc
ljmp
mov
daa
dec
sub
sti
push
pop
stos
cmp
sti
test
pop
data16
jb
xchg
xor
push
xchg
aam
adc
das
leave
ret
mov
lcall
ret
cmpsb
pop
cmc
pusha
mov
inc
dec
mov
inc
and
inc
cwtl
push
pop
push
push
xor
rclb
aad
test
pop
xor
ljmp
mov
xor
movsb
stos
bswap
or
dec
je
mov
push
lds
nop
dec
sub
and
adc
add
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
pop
add
push
sub
push
push
pusha
sbb
adc
lret
negl
xchg
sbb
enter
cmp
inc
xlat
sbb
push
inc
dec
fstp
repnz
dec
or
mov
pop
lcall
jns
mov
xchg
fidivrl
sbb
stos
cmpsb
ja
cmp
lret
jns
xchg
cmp
mov
pop
popa
rolb
rcrl
add
test
dec
js
in
mov
fldcw
or
sahf
xor
xlat
mov
aas
out
sub
iret
pop
iret
mov
sbb
nop
inc
in
inc
lcall
jns
xor
cmc
cmp
adc
ja
sbb
pushf
in
mov
out
jbe
mov
mov
arpl
imul
std
adc
push
sub
mov
bswap
lock
mov
popf
pop
mov
pop
and
repz
test
mov
push
mov
adc
mov
xor
mov
fiaddl
cmp
mov
out
mov
push
pop
pop
pop
in
push
jb
frstor
popa
inc
jnp
lea
inc
cli
dec
aas
sbb
cmp
xor
enter
ljmp
addb
jbe
or
aam
ljmp
mov
mov
add
inc
jae
ret
cmp
xlat
xchg
fucom
pop
sub
fistps
insb
xor
xor
js
std
sbb
bound
sbb
lret
xchg
loopne
push
sahf
xchg
js
cli
sub
outsb
inc
jg
sbb
cmpsl
movb
orb
pop
and
jno
mov
jne
fistps
test
push
mov
or
std
xchg
mov
leave
insl
stos
cltd
pop
fwait
pop
mov
gs
lock
imul
sub
je
and
mov
sub
cli
xchg
inc
and
ret
imul
std
pop
in
sbb
fbstp
daa
imul
sbb
ljmp
mov
out
pop
mov
and
cmpsl
lret
fmuls
pop
int3
repz
es
cld
movsb
xchg
inc
rorl
xchg
push
add
out
dec
imul
stc
sbb
sub
sub
mov
pop
pop
dec
cmp
daa
sub
aaa
je
sub
aas
aas
xchg
xchg
or
shrl
lret
addl
inc
sub
ret
mov
dec
movsb
stc
inc
test
or
adc
xor
sar
xor
xchg
xor
sub
fbld
ret
ret
test
imul
jle
sbb
xchg
sbb
incb
loopne
mov
mov
mov
gs
je
shrl
int
outsl
bound
jmp
lock
pop
std
stos
or
push
or
inc
pop
icebp
dec
jmp
enter
pop
jge
cs
xchg
pop
xchg
aad
xor
je
cmp
dec
jo
sub
mov
xchg
xor
test
xchg
movsb
mov
inc
add
pop
push
gs
or
sub
push
bound
test
or
rclb
xor
faddl
mov
mov
nop
or
pop
subl
fwait
es
ret
mov
or
mov
sbb
dec
shr
push
pop
insl
idivb
in
xchg
fistps
pop
xchg
sub
loop
dec
int
jmp
mov
adc
jno
jo
pop
cmpsb
movl
mov
cmp
add
stos
mov
or
andl
push
pop
cmpsb
cmp
fiadds
xchg
in
mov
cli
pop
dec
adc
xlat
xchg
add
lods
ret
flds
out
into
data16
ljmp
mov
out
lret
pop
or
icebp
outsb
in
insl
and
xchg
shlb
ja
std
push
jge
cmpsl
or
repz
mov
dec
mov
pop
ja
pop
and
rcrb
or
mov
mov
loope
arpl
or
push
xor
lret
mov
mov
xchg
das
mov
xchg
xchg
xor
jno
repz
or
cmc
jno
sar
xor
jp
inc
mov
std
jbe
mov
cs
and
outsb
xchg
jno
inc
loopne
shrl
cli
jmp
mov
mov
fucomi
aas
dec
aaa
into
jno
inc
xchg
mov
adc
or
pusha
mov
lock
arpl
test
push
xchg
push
inc
sbbl
add
push
shlb
fistpll
add
ja
sahf
ficomps
mov
sub
stc
jmp
jne
std
into
sarb
or
inc
xor
pop
mov
ficoml
repz
cmp
cmp
push
outsl
adc
lds
std
pusha
aaa
fs
add
or
fbstp
cmp
add
push
gs
movsl
in
push
fneni(8087
data16
xchg
xchg
xor
jge
incb
shrl
add
jmp
mov
mov
cltd
ljmp
cmp
pop
sbb
and
mov
in
pop
cmc
lock
mov
int3
scas
call
ret
in
push
sub
lret
inc
pop
xchg
out
fisttpl
fisttpl
fcompl
nop
xor
pop
ljmp
bound
scas
adc
xor
loopne
jo
add
push
pusha
leave
dec
in
aaa
mov
pop
sbb
jecxz
jbe
jbe
sbb
jle
in
or
daa
push
adc
push
add
push
gs
pushf
add
hlt
inc
mov
lret
ftst
inc
test
lock
mov
pushf
jg
lods
sbb
and
push
stos
mov
repnz
xor
scas
jecxz
movsl
pop
and
push
lock
dec
cmp
inc
loope
push
mov
scas
pop
outsl
dec
add
out
sbbl
roll
data16
mov
dec
js
jp
aam
daa
into
addr16
cli
and
lds
jb
popf
xchg
insb
sbb
pop
mov
leave
movsl
or
mov
mov
pop
xor
lea
jle
xchg
add
scas
imul
pop
mov
fsubl
ja
mov
shrl
mov
push
add
ja
ja
and
movsb
pop
jne
das
idiv
lcall
ret
in
inc
test
out
pop
mov
ds
cmpsb
stc
sbbl
cmpsb
jns
push
push
aas
inc
push
sbb
cmc
adc
add
jge
pop
leave
sbb
sub
lcall
movsb
fwait
add
inc
data16
insl
cmp
lds
cmp
mov
aad
jp
movsl
mov
sub
mov
pop
sti
mov
sahf
fwait
test
xchg
jb
push
and
lret
scas
push
and
in
cmpsb
mov
orb
xor
rclb
bound
cld
sub
lcall
or
jp
and
nop
fstpl
push
fistpll
add
push
push
loopne
and
fsubl
pop
ret
insl
cmp
inc
xlat
pop
js
out
call
pop
les
jnp
sahf
test
pop
jmp
test
lds
inc
stos
xchg
movsb
int
mov
cmp
pop
fcoms
nop
pop
adc
fildl
scas
sbb
inc
dec
cmp
shlb
sub
fwait
mov
in
out
push
adc
cs
lods
mov
jnp
pop
enter
test
jl,pt
xor
jae
popa
mov
jnp
arpl
mov
mov
mov
xor
mov
mov
and
push
shll
ret
mov
sarl
jle
xchg
test
xlat
pop
or
fnsave
push
jo
cmp
mov
test
mov
add
push
js
jge
imul
jnp
in
imul
cld
and
mov
sub
xlat
mov
sbb
xor
les
inc
xor
and
into
mov
sti
inc
lock
lods
pop
push
ss
sub
sbb
or
sbb
iret
or
fisubs
sbb
rclb
je,pt
repz
test
scas
mov
jg
xlat
pop
cmc
das
push
adc
cmp
mov
mov
pushf
fnstcw
pusha
mov
aam
ds
es
imul
std
aam
mov
sti
orl
mov
xchg
call
jnp
mov
xchg
bound
sbb
fucomip
mov
push
call
adc
insb
cs
jg
cwtl
xor
pushf
clc
push
mov
das
cmp
lret
into
hlt
and
ja
fbstp
jbe
jmp
insl
lods
xor
scas
adc
sub
jne
popl
jns
sahf
popa
shlb
inc
cmp
sti
pusha
push
or
inc
test
mov
maxps
aaa
gs
dec
xchg
call
mov
pushf
dec
sbb
fnstenv
ja
aas
mov
cmp
push
out
mov
mov
popa
scas
ljmp
jmp
adc
scas
xchg
stos
iret
icebp
push
sti
ja
add
xor
adc
es
sub
pop
mov
mov
sbb
pusha
or
or
pop
or
imul
pushf
lcall
clc
loopne
push
xor
sub
call
push
icebp
jbe
xor
imul
push
aaa
adc
hlt
out
enter
pop
ds
sub
or
mov
mov
or
push
xor
mov
push
pop
dec
inc
sbbl
xorb
fisubs
outsb
jle
shl
mov
inc
rolb
insl
outsb
xor
jnp
lret
outsb
jno
sub
fs
push
pop
imul
sub
xor
ret
cmpsb
inc
xor
xchg
pop
pop
lods
mov
addr16
sub
and
xlat
ret
jg
mov
in
cmpsl
sbb
sbb
imull
mov
dec
gs
repnz
ret
enter
aad
jmp
hlt
mov
jle
mov
mov
outsl
xchg
fiaddl
jecxz
jbe
push
fwait
scas
pop
mov
xchg
out
pop
test
and
std
jl
jbe
pop
stos
fldenv
ljmp
sub
iret
xor
inc
inc
jmp
stc
cmpsb
lea
rcll
repnz
adc
insl
dec
ret
inc
out
test
inc
jne
insb
jp
sbb
movsb
add
scas
fstpl
sti
sbb
jb
pop
jge
and
jl
idivl
aad
mov
push
inc
repz
into
test
inc
sub
xchg
cmpsb
jae
push
mov
fwait
mov
pop
leave
loope
push
or
sbb
data16
divb
jb
lods
fcompl
cmp
or
in
jno
mov
sbb
fcoms
push
js
push
xchg
mov
push
xchg
movsl
lea
filds
aam
test
adc
xlat
adc
and
cli
mov
push
out
add
inc
xchg
leave
stc
pop
les
mov
fimull
add
lods
sbb
rcl
xchg
test
pop
xor
push
ljmp
xchg
mov
fnstsw
ret
xchg
sbb
xor
ljmp
dec
imul
push
fidivrs
popf
ljmp
dec
pusha
cmp
or
inc
mov
lds
testl
jae
pop
sbb
mov
insb
add
inc
aam
rcll
pop
idivb
out
lods
push
xchg
xchg
mov
stos
stos
pusha
popf
adc
cwtl
lahf
call
in
lret
mov
aaa
or
dec
xchg
add
mov
xchg
cmovge
push
fucomip
pop
aam
mov
and
stos
fwait
dec
or
stc
loop
test
cmpsl
inc
mov
cmp
lcall
push
cmpl
int
insb
jae
mov
div
mov
inc
inc
mov
test
push
in
cmp
inc
inc
inc
rcrb
int
outsb
idiv
cld
scas
ss
call
cmp
addr16
mov
clc
cmp
mov
addr16
fldcw
cld
push
rorb
push
iret
adc
cmp
mov
jp
lahf
hlt
lcall
ds
sbb
int3
cltd
pop
push
mov
js
sbb
sbb
xchg
nop
cmpl
test
cs
add
jns
cmp
sbb
addr16
insb
popf
push
loopne
rol
daa
dec
push
xchg
aam
and
dec
adc
sub
sbb
push
fstps
into
sub
call
int
incb
xor
pop
mov
jbe
adc
negb
iret
or
fwait
jb
jg
xchg
test
je
mov
inc
inc
ret
mov
sbb
pop
cmp
sbb
sti
shll
add
and
fs
pushf
add
sbb
pop
adc
iret
jg
das
push
or
gs
lret
xor
sub
mov
test
hlt
iret
xor
push
fcomps
xchg
inc
add
cmp
mov
dec
sbb
int3
push
inc
mov
jge
sub
repnz
imul
xchg
shlb
or
add
popa
push
data16
lock
push
push
fidivrl
popf
rorl
call
cmp
repnz
movsl
ds
mov
pop
sub
arpl
addb
sbb
push
adc
fistpl
stos
xlat
ret
ljmp
ret
push
movsb
xchg
inc
xor
test
push
dec
addb
ds
jbe
sbb
insb
dec
lock
xchg
mov
mov
aas
cmc
enter
dec
sbb
push
push
popf
push
js
jns
adc
jo
mov
icebp
and
mov
ja
enter
pushaw
xlat
sbb
xchg
aam
xor
fldenv
inc
add
out
pop
ret
and
lods
mov
andb
adcb
cmp
cli
mov
movsb
xchg
leave
popa
enter
dec
stc
enter
test
mov
xor
and
dec
popf
cmpsl
out
outsl
and
xchg
cld
mov
ds
cmp
lea
fisttpll
mov
stos
sahf
mov
xchg
fisttps
call
sub
pop
js
icebp
popa
sub
dec
movsl
xchg
inc
push
mov
out
nop
jae
fbstp
scas
repnz
mov
subb
fwait
mov
out
stc
jg
pop
cltd
jo
fwait
outsb
push
fwait
inc
jp
pop
inc
stos
mov
mov
imul
scas
cmc
add
sbb
xlat
cmc
mov
adc
lret
mov
mov
jne
mov
iret
jg
std
push
pop
mov
sbb
adc
out
mov
fwait
push
mov
push
or
mov
mov
jbe
xchg
js
lcall
jecxz
push
nop
push
ja
xor
mov
and
lea
fildll
sbb
into
rorl
dec
ret
inc
repnz
stos
xchg
sbb
insl
push
les
cli
xchg
dec
dec
adcb
mov
loopne
sbbl
hlt
out
icebp
add
add
pop
leave
lret
mov
and
iretw
fisubs
aad
sbb
cmpsl
xchg
test
and
inc
leave
mov
scas
repnz
mov
stos
inc
dec
clc
push
mov
fwait
cli
scas
push
cli
dec
fsubs
nop
pop
pop
out
scas
shrl
fs
xor
cli
test
jl
push
jbe
sbb
xor
adc
xor
test
mov
inc
cmpsb
test
fcompl
aad
mov
jl
mov
stc
insl
fidivl
mov
rcll
stos
add
xchg
hlt
mov
enter
cli
pop
mov
push
std
dec
stc
lock
add
xor
pop
xchg
xor
hlt
jl
mov
push
aad
cmp
cmp
or
scas
iret
mov
inc
mov
mov
push
stos
cmp
js
mov
mov
push
lea
addb
mov
mov
add
negl
and
test
iret
test
addr16
shll
push
jg
loop
push
push
xor
test
loop
mov
cmpb
ds
sbb
sub
jo
idivl
push
inc
lods
push
xchg
cmp
pop
add
int
inc
adc
pop
push
mov
xchg
jle
subb
fstps
roll
outsb
fadds
arpl
lods
push
inc
mov
or
or
test
mov
mov
push
clc
or
add
jae
push
pop
mov
jnp
push
jns
int3
jp
inc
add
std
push
stos
out
mov
lock
jne
scas
jmp
sbb
js
lahf
ljmp
ja
mov
inc
rol
push
xchg
mov
stos
shrl
or
and
jmp
mov
sub
out
mov
and
fstl
xchg
bound
push
push
test
xchg
push
cmp
daa
scas
add
mov
pop
int3
mov
outsl
test
mov
jnp
xchg
xchg
mov
js
ret
jecxz
jne
lods
mov
jb
test
rcrl
xchg
lds
dec
jbe
jp
icebp
jge
cmpsb
xor
sub
or
lea
imul
addr16
xchg
mov
test
cmpsl
adc
movsl
mov
out
scas
mov
movl
mov
cmc
movsl
scas
outsb
mov
xor
dec
fs
adc
pop
add
push
cld
fwait
push
xchg
lret
xchg
leave
lcall
adc
lret
adc
pop
test
jl,pt
xchg
adc
sub
or
cmp
mov
xor
mov
ss
mov
incl
ret
sbb
mulb
xchg
or
cmp
pop
cmpsl
mov
add
jbe
stos
int3
shr
xor
mov
jns
mov
jmp
mov
dec
divb
sbb
shl
loope
jmp
fistps
enter
jp
mul
jmp
mov
add
jmp
dec
jge
mov
roll
orl
stos
repz
inc
lea
rorb
jge
outsb
jne
imulb
test
jl
adc
stos
xchg
inc
into
test
mov
adc
xchg
les
inc
mov
xor
ret
pop
or
jl
sub
xchg
xchg
xchg
shlb
push
dec
and
xor
xchg
sahf
and
sub
outsl
jle
inc
fsubr
scas
mov
mov
and
pop
xor
or
jmp
std
add
or
dec
mov
push
push
mov
inc
mov
jmp
fcoml
add
jb
movsb
mov
into
fistpll
icebp
mov
dec
outsb
call
xchg
out
and
in
inc
fldpi
cwtl
aaa
dec
mov
cmp
cmp
mov
inc
jl
aam
repz
subl
ret
xchg
jle
xchg
push
popf
xbegin
adc
out
xor
xchg
add
fwait
in
mov
xchg
xor
movsl
repnz
in
jecxz
jno
imul
jb
inc
jno
inc
inc
cltd
enter
inc
mov
push
push
sub
out
xlat
jae
rolb
or
cmpsb
jmp
out
jge
add
jmp
sbb
fnstsw
mov
or
inc
in
rorb
sbb
mov
mov
or
mov
pusha
incl
fistpll
mov
movsl
shll
mov
loop
adc
inc
cltd
jmp
fistl
xor
add
stos
into
mov
cmpsl
in
sub
and
cmp
and
cmp
popa
loope
inc
imul
jg
jne
jge
inc
xchg
cmp
mov
lock
ret
clc
inc
ret
lods
cmp
pop
scas
ret
jbe
push
sti
rol
cltd
jmp
test
mov
in
fwait
mov
outsb
and
je
pop
xor
sbb
push
add
mov
aaa
push
mov
mov
inc
push
out
in
mov
enter
jae
jno
lcall
out
adc
cltd
dec
arpl
in
fistps
mov
cmpsb
inc
xor
int3
push
mov
xchg
rol
xchg
repnz
add
jnp
and
mov
mov
lret
adc
ret
mov
inc
xchg
lret
xchg
movsl
imul
mov
or
aam
aam
popa
rolb
aaa
fscale
xchg
xchg
fldt
mov
pop
and
dec
das
cmp
in
and
mov
inc
lock
test
push
out
push
dec
stc
sub
jns
inc
xlat
mov
aas
adc
es
shlb
pop
lea
inc
aam
jno
rol
orl
push
sub
sarb
push
lock
imul
ret
out
loope
cli
daa
cmc
stc
push
ja
dec
adc
movhps
test
cmc
gs
jns
cli
int3
xor
cwtl
jge
cmp
cwtl
mov
lcall
mov
mov
add
push
jmp
popa
xchg
pop
loopne
xlat
fcompp
xchg
sub
mov
and
jp
mov
push
icebp
adc
or
dec
aas
bound
lcall
mull
std
xor
xor
insb
out
adc
fcompl
daa
xor
sbb
sub
push
aaa
or
lds
and
cmp
arpl
rorl
xchg
jge
das
mov
adc
xor
pop
jbe
or
adc
lret
mov
in
pop
sbb
mov
fcoms
jo
popaw
jmp
cmp
push
dec
inc
cmp
stc
pop
push
push
out
dec
xchg
inc
outsb
gs
sub
ret
iret
xor
andb
stos
leave
push
xchg
stos
cmp
mov
aas
jae
je
aas
int3
xor
cld
dec
aas
adc
into
dec
aad
pop
xor
sub
sbb
cmpsb
inc
push
xor
aas
outsl
sahf
adcb
leave
pop
mov
sahf
jb
in
in
ret
cmp
cmp
sbb
mov
sub
add
add
jl
mov
ficompl
sahf
insl
jecxz
loop
adc
fmuls
in
cmp
mov
cmpsb
cwtl
mov
aaa
loopne
mov
push
sbb
idivl
xchg
nop
mov
push
add
mov
xchg
xchg
inc
sbb
arpl
aas
pop
dec
lcall
inc
js
movsb
in
sbb
lds
dec
push
pop
inc
mov
add
jb
jb
xorb
ljmp
xchg
add
jnp
scas
outsl
or
jmp
imul
dec
jg
int
adc
adc
imul
lods
aam
mov
add
rcrb
sbb
jmp
push
mov
outsb
jg
shrb
jge
call
dec
lret
dec
aaa
add
cmpsb
stos
or
leave
inc
xchg
sbb
push
test
dec
pop
adcb
enter
call
jp
add
data16
arpl
sbb
fildll
pop
rcrb
daa
mov
cld
sbb
pop
scas
and
mov
mov
mov
push
push
adc
add
gs
dec
mov
das
loop
test
jne
dec
je
imul
mov
sti
push
mov
leave
add
jnp
lods
lock
xor
or
rol
or
sbb
jl
test
sti
loop
cmp
shll
pextrw
mov
xor
pop
push
jle
xchg
test
sub
jmp
pop
arpl
sub
cmp
lock
fwait
dec
or
mov
hlt
jns
push
jmp
jne
mov
fsubrs
cld
aas
lods
or
mov
cs
inc
adc
movsl
pop
fidivl
lods
lgs
or
loop
push
inc
inc
sub
and
test
mov
and
pop
sub
sub
inc
repnz
jbe
out
in
inc
rclb
and
inc
scas
jae
lret
sub
popf
sbb
pop
lods
or
sarb
fs
jno
cld
daa
push
aas
dec
cmp
xchg
add
jle
jge
mov
xor
push
dec
sub
mov
dec
stos
int
mov
pop
mov
sbb
jg
mov
jl
or
outsb
sbb
sbb
or
js
push
rorl
rcrl
adc
fiaddl
outsb
fmuls
pop
sub
addr16
xorb
dec
push
jno
inc
call
mov
out
adc
sub
inc
repnz
add
add
decb
and
idiv
cmpsl
ss
inc
in
pop
outsl
fidivrl
jo
ja
pop
push
mov
mov
test
das
lcall
add
shll
inc
mov
xchg
cmc
lods
cmp
push
out
push
enter
sahf
mov
cmpsb
iret
outsb
out
sub
scas
fimuls
sbb
test
push
or
icebp
sub
subb
xor
or
add
xchg
popf
pop
scas
orb
inc
xor
pop
enter
test
xchg
sbb
push
xchg
mov
xchg
jge
out
xchg
cld
les
outsb
and
and
pop
xchg
bswap
imul
js
pop
cmp
aad
dec
out
call
stos
xor
add
push
or
lcall
or
out
mov
sahf
mov
xchg
daa
cmpsb
bound
sahf
pop
scas
push
xor
mov
inc
dec
jecxz
pop
test
lcall
push
jns
inc
jecxz
jns
inc
push
jbe
pop
xor
lods
cwtl
je
pusha
jl
insb
sbb
add
fwait
das
enter
stc
and
and
pop
push
mov
mov
imul
fwait
mov
add
push
sbb
icebp
imul
cmp
jp
add
pop
or
mov
out
aas
xor
push
in
add
mov
out
adc
repnz
jbe
movsb
movsb
mov
sbb
sbb
js
sti
rclb
iret
arpl
mov
ljmp
and
into
movsl
xor
shr
scas
fisttpll
mov
jl
insl
adc
adcl
lods
xor
je
xchg
ret
mov
stos
sub
jge
push
pop
pop
int3
js
pop
lock
xor
aad
jno
or
in
mov
push
and
jl
test
and
roll
sub
stc
es
pop
dec
mov
aad
adc
and
mov
jl
pushl
outsb
adc
xor
inc
cmpsl
and
push
imul
pop
cmp
pop
notb
decb
repnz
cmp
push
ret
iret
sub
sbb
pop
in
movsb
mov
lods
arpl
ljmp
arpl
test
pusha
cmp
mov
iret
mov
dec
push
and
iret
push
shr
fprem1
insb
lock
cli
mov
pop
ret
jl
or
inc
cmp
and
insb
xlat
adc
sti
inc
sbb
push
mov
cmpl
outsl
div
or
adc
hlt
cmovl
adcb
jmp
cmp
adc
insl
scas
hlt
pop
xor
xor
fwait
aas
inc
stc
push
and
inc
add
mov
and
mov
aam
add
xor
out
sahf
repnz
stos
xchg
jle
and
lret
push
insl
jns
adc
add
sub
lods
dec
into
out
fwait
adcl
mov
sub
mov
mov
push
cmp
cmp
call
cli
jns
sub
out
mov
push
dec
mov
xor
cmp
cmpl
lea
je
repz
dec
into
daa
imull
xlat
fdivs
or
push
imul
sbb
mov
jnp
mov
mov
hlt
dec
or
fistps
mov
movl
mov
int3
adcb
xchg
adc
and
dec
pop
xchg
mov
adc
cmp
loope
push
dec
xchg
push
out
daa
pop
loopne
xor
ret
or
jno
and
jne
jp
push
xor
into
lea
in
jl
scas
mov
xor
pop
mov
and
cld
in
jne
or
push
lcall
inc
les
adc
dec
scas
cmp
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
scas
aad
or
xchg
int
push
rcrl
aaa
jae
or
jp
push
dec
push
xchg
dec
test
fnstenv
jg
dec
mov
mov
cltd
push
fimull
nop
adc
andl
mov
lret
sub
mov
clc
mov
inc
pushf
add
insl
mov
xorb
mov
pop
les
push
movsl
imul
adc
sti
into
adc
jecxz
movsb
test
dec
push
sub
and
jno
out
mov
mov
cmp
add
pop
inc
mov
insb
or
cmp
popa
lret
mov
stc
jl
mov
ds
dec
imul
cli
jp
in
out
out
inc
pop
and
cmp
dec
pop
dec
aam
dec
and
sbb
in
push
jp
fstpt
add
jle
cmp
mov
outsl
add
add
or
aam
imul
dec
pop
clc
cmp
sbb
pop
in
and
mov
aam
sbb
imull
test
js
jns
je
lahf
pop
daa
cmp
dec
pusha
fsubr
inc
xchg
repz
outsl
xchg
xchg
add
mov
stos
push
mov
aam
es
int3
add
std
push
mov
sti
sub
cmp
bound
call
je
data16
mov
push
sbb
jl
xorl
icebp
hlt
xor
or
inc
clc
sbb
rclb
loop
mov
call
outsb
sbb
shrb
sbb
pop
inc
lea
imul
jl
push
call
in
out
mov
jecxz
out
movsl
mov
cmp
ljmp
pop
inc
loopne,pt
std
sbb
adc
cmpxchg
jl
jl
xor
aad
stc
testl
test
gs
inc
sub
dec
or
pop
aaa
sub
popf
pop
pushf
push
loope
outsb
fchs
mov
sub
outsb
cmp
movsl
or
out
or
xorb
jb
cli
mov
cmp
mov
mov
xchg
mov
sbb
lcall
out
imul
test
outsb
fidivl
ja
call
jp
int
and
mov
fcomp
lret
sbb
enter
inc
push
outsl
mov
rclb
cmp
ficoms
rcrl
mov
mov
cltd
pop
into
std
data16
mov
push
popa
push
addr16
push
pop
mul
or
sarl
mov
loope
add
jl
iret
addr16
fisubrs
fwait
cmp
insb
shlb
loope
cli
add
mov
mov
jne
iret
xor
lds
push
cmp
mov
sub
dec
ja
mov
movl
arpl
xchg
xor
sub
push
inc
sub
push
push
push
pop
and
add
popa
jae
addb
pop
enter
insl
jae
pop
mov
jl
add
and
or
stos
cwtl
loopne
lret
sbb
test
insl
arpl
xchg
ja
fnsave
bound
mov
shl
pushf
jns
scas
scas
repnz
pop
insb
xchg
lret
dec
sbb
pop
rorl
cmp
subb
mov
in
jns
stos
rcr
xor
rol
and
pushf
add
sbb
mov
cmp
sbb
mov
mov
xchg
cmp
movb
add
add
lcall
rdtsc
test
xbegin
mov
fwait
insl
mov
mov
int3
or
ret
ss
or
ret
mov
dec
push
mov
jmp
outsb
or
xor
lret
movsl
pop
push
sub
add
push
repz
jp
mov
inc
dec
int3
sub
pop
out
mov
xchg
ljmp
sbb
les
lahf
fbstp
mov
adc
iret
jno
push
fldenv
in
aas
hlt
xor
xor
jae
xchg
out
mov
dec
add
cmpsl
jp
js
test
pop
mov
test
loop
std
jle
fs
push
mov
aad
fsts
rcll
xchg
leave
cmp
aaa
xor
or
aas
dec
mov
xchg
sbb
cmpsl
jecxz
inc
addr16
iret
push
pushf
mov
das
lods
xor
pop
repz
daa
mov
cs
push
fwait
scas
shlb
enter
arpl
popa
outsl
scas
cmpsb
popa
xchg
int
pop
jecxz
fidivrs
push
add
pop
neg
push
add
lea
xchg
sbbb
jae
jecxz
add
pushf
aam
into
arpl
pop
mov
mov
dec
jp
adc
adc
clc
dec
jns
jno
mov
cmp
fsub
es
mov
pop
out
dec
cmp
push
mov
mov
nop
push
cwtl
movntps
mov
and
ret
inc
add
mov
sti
mov
jle
pop
fisubl
adc
xchg
mov
ja
sub
jmp
out
inc
ss
pop
loope
adcb
add
incl
fldl
hlt
jno
ss
test
or
xchg
sub
push
adc
ret
ljmp
inc
int
fdivl
daa
in
sub
cmp
mov
in
mov
out
test
push
sbb
xchg
loop
sbb
in
stc
add
fcos
jb
shl
xor
int
or
xor
mov
xor
loope
sub
out
jecxz
cmp
mov
jg
gs
sbbl
mov
loopne
or
bound
fiaddl
push
call
loope
xor
sbb
or
shll
pop
outsl
test
insl
cmp
test
cmp
int3
xorb
dec
test
in
jle
dec
loop
push
sahf
ror
mov
sub
xor
inc
out
lds
lock
cltd
movsl
cwtl
inc
jb
mov
insb
mov
loopne
dec
ds
inc
leave
movsl
clc
cmpsb
mov
dec
fnstenv
cmp
pop
std
xor
mov
rcl
mov
imul
into
xchg
fwait
cs
jle
das
mov
sti
push
repnz
shrl
add
mov
outsb
xor
ljmp
hlt
jae
sub
adc
bound
push
mov
stc
orl
and
inc
int
adc
sbbl
dec
outsb
adc
cmpb
shrb
lret
pop
outsb
and
lcall
setle
mov
push
xchg
and
sub
mov
inc
dec
cwtl
push
mov
xor
fidivl
jle
inc
jge
loopne
push
fst
dec
arpl
jns
jmp
imul
sub
xor
rolb
dec
loope
test
xlat
push
xchg
sub
jne
jmp
lret
scas
pop
lahf
mov
fdivl
in
add
out
inc
pop
sti
sub
cmp
dec
mulb
xchg
icebp
fnstcw
lods
jns
push
inc
cmp
mov
mov
dec
lock
cmp
add
fcmovnbe
jae
push
sub
inc
aaa
loop
ror
in
cmpsb
imul
bound
pop
out
dec
mov
xchg
loope
mov
push
bound
push
aad
push
scas
add
stos
call
jp
pop
stos
bound
jecxz
iret
mov
mov
pop
push
cmp
insb
mov
mov
ret
jecxz
jp
sti
jl
push
xchg
xchg
xor
mov
into
jl
dec
cli
adc
xor
jnp
out
inc
popf
aam
inc
xor
addr16
addr16
mov
dec
sub
or
adc
jge
xor
mov
aad
add
push
clc
int
jecxz
pop
ja
dec
daa
stos
ds
cltd
inc
pop
pop
inc
pop
xor
add
xchg
adc
add
inc
lahf
lods
push
nop
lret
push
ja
loope
ds
jo
add
into
cmovp
pop
xor
sbb
aas
add
xor
mov
je
cs
out
je
rcl
imul
push
cld
xor
jnp
add
imul
data16
rorl
mov
add
lcall
nop
loope
mov
stos
cs
testl
imul
inc
add
fdivrl
push
std
sti
mov
stos
gs
sub
scas
pop
mov
pushf
mov
std
stc
xchg
pop
daa
rolb
jge
ds
cmpl
movsl
sbb
into
addr16
and
sbb
les
int3
mov
cmpsb
pop
dec
push
cmp
cwtl
push
je
in
imul
dec
aam
cmp
subl
out
xor
push
mov
pop
and
shll
inc
out
sahf
xor
call
gs
cmp
ja
and
std
inc
movsb
stos
jl
test
cld
loopne
push
out
fs
pusha
push
outsl
test
ficompl
data16
cltd
mov
push
fsubrs
das
jl
jmp
push
js
mov
xchg
arpl
js
lea
adc
mov
xor
sub
pop
inc
jno
lods
mov
pop
push
mov
repz
jb
push
pusha
int3
dec
or
lock
out
dec
imul
sahf
mov
mov
and
nop
idivb
jo
jmp
inc
out
cmpsb
mov
or
jl
insl
push
enter
call
inc
pop
push
jmp
mov
mov
dec
insl
pop
out
cmp
pop
imul
push
outsl
or
enter
shl
push
xchg
jno
push
xor
push
mov
push
pop
je
mov
fidivrs
addr16
pop
push
sbb
sbb
push
jnp
mov
aas
insb
mov
adc
or
and
and
lret
loope
dec
cs
sbb
mov
jp
aaa
inc
adc
push
stos
repnz
pop
ja
fnstcw
pop
inc
mov
add
ds
adc
cltd
jns
dec
filds
aam
mov
pop
push
sub
in
jns
dec
jmp
int
stc
xchg
lock
fiadds
pop
sti
adc
sbb
mov
cmpsb
pop
mov
mov
fwait
jns
or
imul
add
stc
lea
lcall
and
push
and
dec
dec
lds
stos
add
scas
or
jo
and
test
jo
clc
xchg
leave
push
les
dec
or
xchg
add
scas
cmp
in
adc
pop
out
jae
mov
pop
xchg
xor
lods
in
fs
cwtl
xor
mov
cmp
test
xchg
cmp
fs
cmp
fnstsw
push
push
in
mov
pop
shrl
or
leave
add
add
lahf
repnz
pop
xor
ficompl
fnstsw
push
mov
ret
jmp
sti
pushf
fldt
fdivr
dec
mov
xchg
sub
bnd
in
and
xchg
daa
incl
movsl
sub
xor
test
out
push
es
inc
les
push
inc
rcrb
int
gs
mov
sub
daa
pop
dec
add
es
lret
or
loop
mov
sbb
insb
aam
dec
mov
in
xchg
sbb
cmp
ljmp
imul
mov
ja
jbe
and
add
shl
xor
push
adc
jne
push
jmp
decb
xor
out
adc
roll
cmp
lret
sbb
popf
inc
lahf
fisubs
aaa
shlb
stc
add
pusha
push
imul
push
imul
xchg
add
imul
insb
push
cmp
and
cmp
daa
mov
push
push
out
jge
cmp
stos
and
push
adc
adc
int
add
sbb
int
xor
jl
mov
or
aad
int3
pop
test
lds
add
sbb
aam
xchg
xlat
test
adc
scas
adc
addr16
and
int
imul
inc
std
gs
and
dec
idivl
xchg
xor
jmp
jp
inc
sbb
push
je
and
fdivl
push
dec
xor
or
jae
jmp
movsb
jg,pn
cli
jl
or
orb
cmc
lret
fldt
inc
test
mov
adc
pop
xchg
std
inc
pop
daa
and
lret
and
adcb
push
xchg
push
and
mov
pop
jno
or
ffreep
enter
push
inc
insl
xchg
mov
mov
lret
pop
addr16
jb
out
loop
add
fildl
adc
data16
ljmp
jb
xor
fldenv
inc
inc
lea
in
aaa
xor
loop
mov
cli
out
popa
cmp
push
jl
xchg
cmpsl
popf
and
out
aad
out
and
scas
cli
add
push
cltd
insl
dec
pop
fisttps
mov
mov
mov
cltd
outsb
test
push
insb
aaa
ja
xchg
cmp
out
cmp
movsl
jo
ret
jle
stc
jg
fwait
cli
in
sbb
mov
jle
addr16
jle
jnp
xor
data16
jo
sbb
mov
pop
movsb
jno
mov
fnstenv
mov
cmp
mov
and
mov
rorb
inc
fnstcw
fmull
sub
xor
stos
movsl
imul
or
mov
jp
out
sub
or
mov
movsl
and
lea
movhps
fisubl
fsub
sbb
xor
pop
push
enter
sbb
in
fdivr
mov
in
cmp
push
fucomi
rorl
scas
mov
and
jecxz
mov
ja
out
lds
mov
jp
push
les
arpl
leave
iret
sub
mov
ds
cltd
jl
mov
ficompl
loope
dec
add
mov
mov
push
and
lods
xor
jle
mov
mov
cltd
loop
popf
imul
cmc
dec
fwait
pop
mov
out
adc
mov
or
lret
data16
std
and
and
pop
or
addr16
and
push
xchg
pop
arpl
jns
cmp
lahf
mov
sbb
jbe
out
scas
pop
push
daa
dec
mov
xor
or
dec
sbb
loopne
cwtl
and
rclb
mov
loope
add
push
fnstenv
push
out
push
xchg
inc
push
and
sub
push
imul
jcxz
mov
test
dec
es
rcrb
sarb
sub
test
fsubrs
xor
mov
call
pushf
dec
inc
pop
or
int
push
loop
adc
mov
test
mov
jo
fadd
les
inc
adc
push
and
mov
aam
scas
scas
cmp
pop
cmpsb
xchg
negb
jne
push
mov
mov
mov
popa
cmp
hlt
int3
sub
mov
pop
jmp
filds
ds
es
popf
push
outsl
shll
pop
std
add
leave
dec
roll
fcmovnu
ffree
xlat
aad
shll
pop
mov
scas
ret
outsl
and
and
push
rorb
mov
insb
lds
mov
filds
cltd
xor
push
testl
frstor
les
jg
test
lods
jno
loope
add
shrb
scas
jecxz
fs
ret
push
call
scas
pop
enter
stc
hlt
pop
pop
add
ja
movl
lret
mov
or
jge
ret
or
cmp
rcll
in
aad
fbstp
push
aam
mov
xor
inc
imul
fiaddl
xor
loop
cmp
std
jne
push
mov
xor
clc
pop
inc
inc
adc
stos
out
pop
or
dec
adc
mov
imul
lcall
call
sahf
cmp
cmc
pop
mov
fsubl
and
add
jns
mov
leave
es
lods
sbbl
out
sbb
dec
decb
push
vcvtpd2psx
xchg
pop
xor
jno
mov
push
lods
push
mov
mov
mov
inc
sub
push
ret
fistps
imul
repnz
leave
jne
jmp
inc
outsl
inc
dec
out
sub
rorl
ljmp
xchg
pop
jg
popa
nop
pop
lret
xor
add
mov
jb
rcll
rolb
push
and
in
push
mov
test
fs
lret
xchg
sub
outsb
cmp
mov
pop
aas
ret
cwtl
es
jecxz
in
mov
bound
ja
and
jnp
pusha
flds
clc
xchg
lret
xchg
loopne
roll
lods
test
insb
mov
sahf
movsl
pop
mov
cmc
add
shl
notl
out
cmp
movsb
and
cmp
mov
jno
adc
jl
push
in
mov
cmp
inc
jb
adc
dec
cmp
adc
mov
add
nop
test
sahf
inc
ss
aad
jge
test
sub
push
mov
leave
add
xchg
subl
mov
aad
clc
mov
add
pop
fldl
imul
cmp
fidivrs
stos
es
cmp
sarl
or
xchg
icebp
les
mov
lret
in
test
sub
mov
rep
inc
ljmp
or
rcll
cli
ss
xchg
data16
cs
or
and
inc
sbb
push
fisttps
inc
test
push
mov
shlb
jg
fwait
mov
pop
and
mov
ficomps
imul
les
sbb
and
adc
pop
push
mov
fs
imul
enter
mov
ds
fdivs
in
push
sbb
aam
inc
add
iret
and
adc
mov
enter
movlps
and
iret
cwtl
aaa
call
mov
mov
push
push
incb
rcrl
cmp
and
push
push
push
sbb
les
jmp
lret
cli
shl
in
mov
rcll
nop
icebp
in
aad
aam
movsb
inc
outsl
gs
sbb
outsl
addr16
fstps
xchg
cmp
push
pop
push
and
fwait
int3
or
daa
iret
mov
cmp
test
adc
jl
jae
test
add
aam
shl
cmpb
arpl
mov
mov
fildl
arpl
push
test
cmp
xchg
cmp
mov
das
insl
mov
fwait
mov
jecxz
cmp
sub
cmpb
dec
mov
pop
mov
loop
dec
xor
leave
popa
add
pop
pushf
sbb
movsb
mov
sbb
xchg
out
fimull
push
sub
lret
inc
jo
pop
neg
jg
lods
andl
fdiv
push
inc
sahf
arpl
mov
int
mov
or
shrb
loop
leave
push
or
ret
sub
cmp
imul
mov
loop
into
cmp
popa
jae
rcll
jecxz
xor
fsubrl
push
mov
fisubs
popf
xchg
dec
outsb
push
sbb
aad
xor
and
cmpsl
pop
push
add
add
gs
inc
and
pop
mov
jns
inc
push
leave
insl
add
sub
sub
out
add
mov
mov
sub
add
sub
sbb
insb
je
cmp
lcall
aam
hlt
pop
dec
ret
jl
aad
js,pt
stos
add
sbb
mov
sbb
add
outsb
sub
sbb
inc
pusha
imul
in
cltd
inc
pop
mov
xlat
sub
dec
add
mov
stc
sbb
out
sub
push
adc
into
sub
push
jns
push
xchg
push
inc
rclw
stos
mov
out
scas
dec
pushf
pop
es
arpl
mov
lahf
and
imul
add
fistpl
xlat
jl
cwtl
leave
push
push
push
fsubrl
adc
sarl
sub
xor
push
pop
mov
cltd
mov
rorl
jae
jl
dec
andb
add
ljmp
iret
mov
and
or
fidivrl
lock
and
xor
scas
daa
push
cmpsl
mov
sbb
sub
pop
mov
fdivrs
test
mov
pop
mov
sub
shlb
mov
push
xor
xor
jl
dec
push
loopne
je
jp
inc
jns
jnp
int3
mov
imul
mov
imul
sbb
pusha
xchg
jne
push
nop
add
call
cmp
jno
aad
jne
or
xchg
repnz
dec
daa
sub
gs
ret
sub
cli
push
cmp
xor
je
call
jmp
inc
arpl
dec
movsl
xchg
adc
inc
cmp
mov
shll
xchg
pop
jo
cmp
cltd
mov
lret
inc
cmc
add
pusha
sti
iret
aas
je
dec
ds
dec
arpl
insb
hlt
fstpt
fiaddl
cli
rorb
or
cwtl
shlb
add
icebp
inc
test
mov
and
adc
fcmovnb
ljmp
ja
mov
test
bound
dec
cwtl
mov
sub
shrl
mov
mov
cmpsb
in
pop
push
dec
or
inc
lret
loope
jg
ljmp
pusha
mov
or
imul
pop
sub
jmp
pop
sbb
mov
aas
out
leave
stc
mov
repz
and
sbb
mov
xchg
cli
out
stc
jns
inc
aaa
test
mov
add
pusha
js
hlt
sbb
scas
enter
testb
push
in
xchg
lcall
pop
daa
movsb
jl
jns
jbe
imulb
or
lcall
mov
push
push
loop
lds
test
imul
mov
push
scas
scas
sbb
inc
movsl
dec
or
jns
fwait
lds
xchg
loop
pop
adc
popf
push
lods
jecxz
jl
into
lahf
cmp
roll
lods
and
stos
pushf
movsl
lods
shr
add
jg
pop
lret
into
push
pop
ljmp
lret
mov
jle
movsb
xchg
sbb
hlt
cmpsb
cmp
pop
std
sub
sbb
scas
sub
mov
gs
inc
adc
testl
jg
movsb
and
pop
iret
in
pop
pop
in
jecxz
push
loop
cli
or
or
dec
or
insb
push
sbb
dec
int
fbstp
enter
nop
insl
call
push
rorl
pop
xor
xchg
jge
inc
pop
sub
pop
xchg
cmp
adc
xorb
loop
mov
shl
test
jmp
sahf
pop
mov
lods
imul
rorb
mov
sub
pop
push
pop
pop
int
adc
testl
mov
adc
jg
addr16
pmaxsw
adc
fwait
cltd
add
xchg
mov
adc
lcall
ljmp
jae
clc
xor
mov
mov
push
mov
sbbl
jle
aam
adc
fldenv
xor
mov
add
sbb
loop
pop
test
lahf
stos
call
out
adc
lock
nop
es
mov
pop
setae
orl
add
inc
dec
call
cmpl
dec
sar
leave
out
jbe
rol
sbb
add
push
daa
sahf
jmp
push
sahf
enter
aam
jns
jb
ret
jo
add
xchg
mov
scas
mov
insb
fcmovbe
stc
mov
mov
sub
push
xchg
push
in
in
enter
out
or
jns
in
adc
jl
cmp
aas
cwtl
in
or
fwait
dec
std
mov
mov
cltd
imul
xchg
push
sbb
cltd
xor
xor
fwait
mov
xchg
pushf
popf
jae
add
mov
imul
mov
pop
je
xchg
mov
mov
rclb
add
lcall
jge
jmp
xchg
test
int
shrl
std
loop
jno
rcll
mov
add
mov
jmp
xor
inc
push
test
test
in
subb
dec
or
and
mov
stos
mov
or
push
arpl
add
xchg
inc
mov
mov
clc
xchg
push
bnd
call
dec
sub
int
inc
lcall
mov
push
push
movsb
sar
lahf
sbb
fcomi
xchg
ffree
jno
mov
unpcklps
pushf
ss
fs
jp
or
jmp
mov
lahf
push
decl
xor
cmp
pop
inc
dec
jecxz
in
adc
popf
xchg
cmp
mov
mov
lds
ss
or
mov
cmp
js
mov
xorb
cmpsb
dec
js
movsb
push
stc
jbe
cmp
gs
idivl
daa
jb
lds
iret
pop
lahf
cmpsb
cmp
je
lods
adc
mov
mov
arpl
and
push
cmpl
movsb
shll
sahf
jl
adc
std
bound
testb
mov
outsl
scas
adc
lods
outsb
std
cmp
lock
filds
lahf
jnp
sbb
aas
cmp
insl
enter
inc
inc
pop
jecxz
in
js
fs
fldpi
std
add
cmp
mov
imull
mov
frstor
gs
mov
cmp
sbb
inc
mov
dec
ljmp
notl
pop
or
mov
popa
mov
ja
push
repnz
fdivrs
leave
pop
inc
push
inc
popa
adc
ljmp
out
add
negl
or
div
pop
adcl
test
sub
sbb
out
add
pop
rcll
mov
push
xchg
fmull
push
dec
push
leave
mov
sar
neg
popf
test
into
in
push
sub
push
notb
fwait
mov
pop
sahf
iret
in
sti
fwait
sahf
and
inc
adc
std
test
mov
push
out
sbb
lret
push
add
push
js
popa
lock
lds
outsb
sub
xchg
xchg
mov
or
mov
jne
sbbb
or
adc
movsl
inc
jns
add
pusha
out
sbb
iret
xor
add
ret
mov
fdiv
and
and
xchg
jbe
mov
mov
jp
jbe
push
es
jne
inc
loopne
pop
push
js
pop
repnz
test
mov
cmp
lods
mov
mov
popa
int3
jecxz
outsl
aaa
xchg
push
mov
lods
mov
iret
xchg
mov
mov
push
xor
fcomip
sub
pop
iret
repz
mov
aaa
and
cmpsl
std
jl
inc
popa
in
mov
aad
or
ja
sahf
xorl
mov
sbb
imul
xchg
mov
or
or
aaa
xor
jns
andl
push
inc
lret
popf
gs
negb
xchg
lock
push
cmp
sbb
loop
adc
sbb
jne
movsl
adc
xor
cld
pop
and
movsl
cs
frstor
mov
sbb
sub
ror
add
add
inc
adc
mov
lods
inc
ds
pop
jl
lahf
data16
sub
pop
stc
scas
xor
cmpsb
pop
dec
mov
add
or
add
out
jp
xchg
in
ror
inc
fisubrl
and
ljmp
mov
js
mov
jle
push
xchg
scas
pop
pop
loope
movsb
mov
mov
and
hlt
jno
push
jns
add
aad
add
das
lock
nop
test
cwtl
cmp
rclb
loopne
fldt
push
and
or
jl
cltd
jge
mov
clc
add
push
jae
out
add
sahf
aaa
bound
mov
das
sub
fwait
iret
scas
test
push
enter
stos
cltd
in
cmpsl
sti
xchg
loope
xor
ss
fldcw
imulb
or
xor
and
fidivs
lods
pop
stos
loope
mov
mov
inc
fwait
mov
popa
out
lock
je
push
lret
loopne
stc
in
decb
push
inc
mov
push
mov
sbbb
mov
dec
cmp
shr
fs
add
jg
test
fdivs
or
call
cltd
mov
lea
push
inc
sti
pop
pop
mov
in
icebp
lea
inc
pushf
lock
add
lahf
push
sbb
aad
xchg
data16
mov
test
xchg
mov
cmpsl
movsb
cmpsl
adc
popa
or
in
adc
imul
ret
mov
add
fistpl
inc
add
jl
aam
lock
jne
outsb
into
stc
aaa
popf
inc
or
rorb
inc
in
ds
or
fsubp
push
arpl
push
push
pop
dec
xor
stc
xchg
fwait
imul
mov
pop
mov
nop
gs
add
ret
in
jae
ja
mov
jmp
cld
cmpsl
cmpl
cs
xchg
aas
jbe
push
jbe
cmpb
out
or
pop
mov
dec
inc
and
in
das
in
je
aaa
leave
dec
pop
cmp
stos
stos
int
fists
cmp
ffree
pop
dec
rol
adc
fsubs
mov
mov
es
mov
push
nop
movsl
ror
jecxz
out
ds
mov
cmp
inc
cmc
push
call
cmp
out
mov
xor
sbb
in
incb
mov
mov
les
loopne
jne
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
je
push
add
push
fcmovnb
xchg
push
mov
pop
bound
inc
cld
sbb
push
jp
jmp
pop
sub
push
decb
push
stos
push
incl
dec
fsubrl
scas
aad
cmpsb
clc
aad
ja
es
shll
lock
in
fists
out
sarl
xadd
push
movb
je
lret
lods
xchg
cmpsl
jno
sahf
cmpsb
mov
push
cmp
pop
daa
int
xlat
mov
icebp
sahf
mov
and
dec
sub
inc
testb
mov
aaa
pop
call
sub
cmp
dec
inc
sub
pop
pop
scas
loop
inc
mov
mov
lea
stos
aad
fs
es
dec
mov
clc
std
inc
mov
and
fwait
mov
pop
push
ja
mov
add
sbb
insl
ja
addr16
cmp
add
dec
mov
daa
adc
ror
jns
jnp,pn
jb
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
