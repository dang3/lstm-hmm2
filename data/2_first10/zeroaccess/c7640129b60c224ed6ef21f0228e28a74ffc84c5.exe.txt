push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
cltd
xchg
jle
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
imul
lahf
jns
leave
pop
mov
xchg
sarl
pop
xor
loop
adc
pop
inc
iret
xor
mov
xor
imul
jb
jns
repz
mov
xchg
movsb
mov
stc
jne
mov
push
push
jg
push
icebp
xor
cmp
movsl
andb
mov
addr16
fisttpll
jb
addr16
mov
movq
negb
or
ja
lds
mov
cli
aas
out
xor
imul
addb
lds
pop
rcll
out
push
icebp
lock
jmp
add
fwait
int3
cld
and
add
dec
je
pusha
inc
fcmovnu
adc
jle
xchg
pop
mov
rorb
add
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
jp
mov
jg
jle
jg
jle
dec
icebp
jns
inc
pop
sub
call
fsubp
push
cmpsl
mov
out
push
and
ficomps
daa
dec
shr
or
cmpsb
adc
cmp
stos
sbb
xor
cmp
movsb
inc
out
imul
xor
fildl
pop
add
dec
cwtl
cli
cs
inc
ss
xor
lcall
fs
imul
xorl
scas
xorl
and
jp
ljmp
or
aam
popa
mov
add
icebp
in
cmpl
lea
jle
jo
fldt
inc
es
divb
fsubl
mov
mov
lods
ss
pusha
inc
arpl
imul
pop
rorb
or
mov
ja
xor
imul
cmc
pop
jbe
cltd
and
pushf
and
lods
push
adc
dec
aaa
mov
push
push
lret
xchg
nop
xor
arpl
insl
or
lcall
fidivrs
push
in
mov
jbe
test
push
inc
sbb
popf
inc
dec
jl
fs
out
jns
or
jmp
mov
sbb
mull
stos
xchg
xlat
out
cli
cmpsl
inc
sbb
fnstenv
in
xchg
imul
cmp
mov
dec
sbb
scas
inc
dec
add
or
sub
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
rolb
jle
cli
jg
jle
jle
jmp
pop
pop
xchg
ja
jp
movsl
nop
mov
je
mov
testb
imul
xorl
jmp
dec
mov
add
arpl
jnp
mov
gs
popa
xor
add
data16
and
hlt
inc
test
out
mov
sub
mov
cmpsb
aas
mov
popf
mov
xchg
mov
cmp
xchg
jns
lret
push
insl
or
loop
push
test
js
clc
pop
sub
int3
cmp
bound
pop
sti
push
mov
cmpsl
push
rcrl
loop
fmull
pop
cmp
mov
mov
das
add
scas
fdivs
dec
push
mov
xchg
je
cwtl
jae
or
sub
mov
pop
mov
cmpsl
dec
jne
xchg
notb
mov
dec
je
or
fs
lock
adc
mov
jno
popa
sbb
xor
push
mov
insl
xor
movb
mov
sub
pop
adc
inc
mov
sahf
sti
test
and
movsl
mov
push
sub
mov
xchg
add
xchg
xchg
jp
iret
push
inc
cmp
fmul
add
daa
and
mov
xlat
inc
movsl
sub
cmpsb
dec
shl
stos
jbe
ret
fwait
push
mov
cmpsb
jle
push
fldl
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
arpl
jp
jle
jg
jle
mov
mov
sub
cmpsl
jge
add
push
fsubr
mov
sub
hlt
test
sub
int3
xchg
out
pop
ret
sbb
or
repnz
mov
mov
xor
and
dec
popa
add
lcall
and
adcb
and
stos
dec
dec
jp
mov
and
stos
loope
movsl
dec
sahf
inc
in
ljmp
jae
lods
dec
cld
ds
jecxz
cli
and
mov
push
cs
push
mov
or
lods
dec
ret
cmp
iret
push
cld
jg
jecxz
call
or
xchg
or
dec
aam
scas
ret
jb
ljmp
sub
test
movsb
dec
fsubrs
sahf
dec
bound
hlt
pop
cmp
sar
dec
xchg
jp
pop
xor
out
xchg
cltd
sar
push
test
mov
fisubrs
test
dec
push
movsb
stos
mov
jnp
outsl
test
dec
sarl
adc
jge
icebp
scas
adc
ror
fldenv
xor
xor
aam
cmp
jbe
add
mov
mov
add
pusha
leave
adc
or
mov
outsb
ljmp
pop
nop
push
fistl
add
or
add
sub
mov
add
add
jmp
push
dec
shrb
and
cli
jg
jle
dec
mov
out
insl
ret
lret
adc
mov
lods
adc
push
fcoml
aas
mov
lods
mov
lea
jb
pop
sbb
repz
clc
aad
jae
cmp
inc
sbb
sub
sbb
mov
test
cmpsl
mov
ficoml
lret
push
nop
ficomps
xor
mov
inc
rcl
and
cld
movsl
ret
scas
jb
inc
jnp
inc
sub
clc
mov
ret
cltd
pop
in
jmp
jae
or
adc
xchg
pop
shlb
adc
repz
cmp
push
xor
pop
or
movsl
cmp
cltd
cs
lret
dec
out
inc
cli
push
xchg
in
add
xlat
icebp
cmp
mov
inc
in
push
les
dec
add
jns
jbe
notl
sbbb
xchg
jno
addr16
jae
dec
adc
sti
mov
xchg
adc
into
jo
js
shlb
inc
lea
inc
fadds
inc
adc
fucom
rcrl
mov
leave
pop
fwait
mov
inc
adc
mull
sbb
hlt
inc
and
xor
mov
stos
inc
jne
and
pop
push
adc
test
sbb
mov
popa
lea
push
push
sbb
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
daa
push
mov
jle
jg
jle
pop
enter
sub
aaa
std
ds
nop
mov
sbb
cmp
dec
les
adc
hlt
mov
and
add
outsl
lods
cmp
scas
bound
jl
mov
xchg
jae
aam
or
notb
and
jne
push
or
pop
sbb
mov
test
mov
je
xor
pop
push
nop
cmpsb
push
add
lcall
push
inc
in
mov
sti
les
outsl
mov
je
pop
mov
add
mov
push
or
dec
decb
mov
das
in
jae
push
or
mov
pop
popf
bound
jnp
and
cmp
aam
enter
repz
and
push
and
imull
jmp
dec
lock
dec
xchg
pop
das
pop
mov
fwait
push
mov
xor
movsl
mov
xor
sti
xor
cmp
fimuls
cmpsb
lcall
into
push
adc
dec
push
cmp
xchg
sarl
repnz
in
cmp
xchg
fsts
ja
fldcw
pop
clc
jne
push
sbb
inc
int3
loope
aas
and
cmc
mov
fxch
nop
fninit
pop
loope
add
xor
cmc
dec
push
add
daa
add
testl
mov
aaa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
add
cli
jg
jle
clc
js
push
add
push
out
and
out
add
sbb
outsb
sbbb
cmc
add
mov
push
lret
fs
test
and
push
rcrl
out
xchg
jg
jle
push
movsb
orl
ds
pop
inc
push
ds
pusha
lods
ret
sbbl
fs
jne
test
mov
rorl
leave
stos
stc
and
dec
lods
notl
int
push
jge
cmp
jl
sub
dec
pop
jg
push
pop
filds
jns
cmc
inc
sub
jp
in
scas
je
and
dec
adc
clc
and
cmc
nop
ja
push
scas
popf
fmuls
ret
int3
mov
insb
jl
insl
out
out
pop
add
sub
fcmovnbe
jno
fwait
dec
dec
add
ret
sbb
and
inc
and
fcoms
out
into
cs
sarl
adc
js
fucomp
push
sbb
dec
jae
push
loopne
push
sbb
mov
and
jmp
xchg
insb
push
rorb
jnp
ds
negl
jbe
arpl
jno
in
repz
mov
pop
sub
dec
cli
xchg
cmc
inc
or
mov
add
cmp
pop
dec
mov
jno
xor
pop
jle
les
sub
out
inc
fiaddl
fdivrs
xor
aaa
xchg
mov
jmp
call
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
add
lcall
cmp
imul
adc
cltd
mov
les
mov
add
jmp
dec
mov
push
lahf
push
mov
or
or
fwait
mov
fistpll
dec
push
bound
inc
fimull
dec
sub
mov
dec
sti
pop
adc
push
and
mov
das
mov
nop
cwtl
imul
fidivs
adc
push
cli
mov
xchg
push
lods
sub
stc
adc
and
mov
pop
mov
cmpsl
decb
jno
outsb
out
or
mov
cmp
push
and
mov
in
pop
sahf
cs
xor
lret
mov
sbb
scas
mov
les
pop
cmp
aas
pop
jbe
dec
cld
inc
arpl
stc
and
ret
fdivrs
add
sbb
push
in
sub
div
jb
mov
test
jbe
pop
pusha
mov
loope
lret
inc
xor
dec
daa
push
inc
xchg
sbb
and
or
dec
and
pop
and
or
hlt
sbb
imul
js
adc
jo
jmp
or
jge
sbb
ret
lods
dec
xchg
imul
mov
sar
cmpsl
popa
lret
inc
pop
cmpb
test
xchg
xor
fimull
jle
popf
repz
sub
rcrb
adc
cld
jb
je
mov
add
jmp
cmc
dec
and
jno
push
mov
filds
jle
cli
jg
jle
inc
insl
flds
push
fisubl
add
pop
xchg
ja
dec
stc
rclb
imull
jae
or
shlb
cmp
mov
jnp
sub
mov
mov
sbb
in
push
sbb
adc
sarb
fsub
ja
bound
cmp
popl
sbb
inc
les
or
loopne
outsl
pop
cmp
clc
sarl
ljmp
cwtl
popa
js
dec
push
mov
call
jg
pushf
pop
push
sbb
inc
daa
into
icebp
and
mov
int
jle
rclb
cltd
ss
xlat
ret
xchg
aam
rol
push
loop
pusha
pop
xchg
outsb
inc
gs
dec
push
cmpsb
mov
shlb
cwtl
out
sub
inc
adc
rcll
jecxz
lea
out
add
iret
test
xor
dec
fisttps
jae
cld
dec
jns
inc
leave
mov
mov
mov
mov
shl
xor
and
int
fnstenv
jle
loopne
adc
outsb
fldt
loope
decb
or
shlb
cltd
cld
fdivs
xchg
dec
les
out
add
daa
push
dec
fwait
or
daa
mov
jmp
les
sbb
adc
fildll
movb
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
icebp
cli
push
jle
jg
jle
sbb
insb
inc
sub
cmc
jge
lcall
xlat
pushf
push
lock
pusha
pop
test
inc
fwait
insl
inc
cmp
out
imull
call
mov
push
inc
xchg
cmp
scas
mov
pop
and
fstps
adc
imul
xchg
mov
push
loop
test
out
ficoml
add
push
aas
sub
or
mov
xchg
jle
push
push
xlat
or
movsb
mov
or
xor
fidivrs
mov
hlt
xor
clc
popa
pop
xor
into
das
subl
int
or
add
cwtl
push
dec
fcomi
cltd
jle
xchg
cwtl
sarl
mov
int3
xor
push
cwtl
push
lret
lock
push
cmp
pop
adc
popa
insl
push
movsl
and
leave
adc
add
mov
rcrl
xor
ret
sbb
loope
in
cmp
test
popf
xchg
je
or
stc
inc
fnsave
scas
jl
xor
jg
pop
dec
xchg
mov
sub
sub
lret
cmp
add
in
or
or
iret
daa
movsb
fcmove
dec
sbb
mov
sbb
cmp
pop
stc
popa
insl
jae
inc
push
cld
jae,pt
incl
pop
sbb
push
test
jno
iret
xchg
adc
sbb
repz
push
add
pop
cmpb
mov
xchg
fbstp
push
mov
jg
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
cwtl
jb
shlb
add
cli
jg
jle
inc
add
popa
std
dec
loope
clc
in
sbb
cld
std
inc
and
jbe
or
pop
push
pop
stos
dec
pop
adc
popa
int
sbbl
outsb
or
decb
mov
xchg
cmp
add
sub
sub
cmp
push
aam
lods
push
cmp
into
and
or
jp
call
cmp
insb
arpl
popa
xor
shrb
inc
in
jb
sub
into
xchg
add
fsubp
inc
mov
and
xchg
inc
arpl
shl
call
jl
gs
push
std
cmp
or
imul
hlt
adcl
inc
lret
mov
pushf
or
jge
data16
test
pushf
mov
inc
js
out
inc
sbb
add
out
lds
inc
gs
push
push
sbb
mov
call
xchg
stos
jo
jge
mov
push
xchg
mov
clc
push
sbb
addr16
xchg
sbb
cmp
pop
gs
pop
shlb
nop
in
mov
mov
inc
nop
sbb
pop
sub
push
mov
push
add
adc
mov
inc
sub
xlat
or
pop
loope
test
xchg
imul
out
into
out
sub
cmp
or
mov
loopne
add
lcall
mov
scas
out
fnstcw
aam
ror
push
out
inc
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
jl
mov
mov
jg
jle
push
adc
call
xor
mov
dec
aas
jp
inc
jne
jp
and
sub
fisttps
pusha
inc
js
mov
mov
jb
sbb
or
fldl
xchg
cmpl
aam
cmp
add
adc
xor
out
mov
and
clc
cmp
out
push
pop
pop
inc
mov
dec
arpl
pop
cs
and
aad
sbb
push
mov
lods
xorl
xchg
sbb
int3
stos
xor
push
add
xlat
rorb
les
push
loope
mov
xchg
pop
in
and
pop
xchg
andb
add
jne
xlat
pop
call
popf
inc
mov
mov
filds
dec
rcll
lods
pop
jb
cmpsb
push
wrmsr
or
aad
push
jbe
pop
or
subb
ja
jbe
iret
jno
mov
lds
into
negl
jg
cs
test
push
cmp
dec
lods
pop
lahf
push
movsb
shl
fstpl
push
pop
mov
mov
leave
lahf
sub
orl
xchg
jno
mov
test
fdiv
or
xor
jnp
daa
mov
out
rclb
aaa
jae
ret
sbbl
push
xchg
sti
xlat
dec
lds
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
outsl
jg
jmp
or
jle
jg
jle
lea
dec
push
xor
cltd
out
int3
mov
in
lock
mov
fwait
cmpsb
aas
add
scas
es
pop
mov
sbb
xchg
repz
sarb
stc
out
lea
adc
pop
ljmp
and
pop
lcall
rcl
lock
mov
mov
mov
jnp
je
jge
mov
mov
sbb
je
jne
ficoml
push
xor
and
mov
sbb
inc
andb
mov
sbb
aad
bound
mov
sub
inc
push
insb
daa
mov
movsb
lods
mov
shrb
mov
mov
das
inc
lea
cmp
jp
xchg
push
cmpsb
xchg
xor
ja
jp
push
stos
dec
cmp
xchg
nop
jmp
in
inc
pop
push
push
mov
pop
mov
xchg
mov
xor
imul
js
dec
ds
mov
leave
pop
adc
inc
out
jmp
addr16
movsb
es
pop
and
push
mov
jne
jb
loope
nop
lahf
fdiv
pop
out
xchg
imul
add
mov
shll
xchg
aad
jl
test
jno
int3
adcb
mov
lcall
roll
bswap
icebp
sti
lcall
ds
or
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
jae
sub
jg
jle
mov
aas
sarl
rcrb
ss
ss
outsl
loope
jnp
lods
loop
cmp
push
push
lret
jne
mov
clc
stos
add
jb
inc
scas
sti
jns
gs
fnsave
shrl
bound
jg
mov
movsl
inc
dec
lods
pop
icebp
add
push
stc
lds
or
xor
rcrl
cmp
fs
mov
sbb
mov
in
out
push
mov
jmp
test
mov
lea
pop
xchg
mov
xchg
popf
addr16
dec
movsb
stos
jb
cmp
mov
xchg
lret
mov
popa
jb
imul
roll
push
call
mov
mov
call
fdiv
or
and
xchg
stos
rclb
dec
fiaddl
xchg
add
lea
rclb
jle
xchg
inc
cmp
mov
push
imul
xchg
jecxz
adc
or
add
hlt
insl
push
out
push
inc
js
mov
test
fs
arpl
sub
mov
test
fmull
jp
sbb
adc
dec
mov
nop
jecxz
lret
xchg
sbb
movsl
imul
cmpsb
sbb
sbb
pop
inc
rclb
popa
inc
pop
ja
mov
inc
push
in
lret
xchg
mov
cmp
stc
mov
dec
iret
inc
es
inc
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
inc
sbb
jle
cli
jg
jle
jle
mov
insb
ja
sbb
fldl
dec
mov
stos
shll
jg
out
or
push
xor
mov
xchg
or
inc
mov
and
mov
fs
adc
aas
adc
sub
or
shrb
push
out
cmpsl
cmc
cs
dec
sahf
loop
dec
sub
or
push
out
fs
pusha
loop
cs
sbb
mov
xchg
mov
cwtl
sahf
pop
lds
push
fistpl
jae
iret
sbbl
loop
cmp
jge
fidivrl
dec
je
mov
scas
jge
aaa
and
push
loopne
cmp
out
push
lret
ss
mov
fdivl
imulb
sbb
cld
das
lret
xchg
imul
xor
pop
mov
xor
aaa
clc
mov
push
aas
sbb
aas
inc
jae
push
or
and
add
imulb
lret
call
rol
hlt
xlat
fistpl
lcall
jecxz
or
stos
outsb
push
mov
test
push
inc
sub
mov
mov
or
stos
jecxz
pop
lds
les
flds
insb
ljmp
jae
xor
mov
xor
loope
and
add
ds
lods
mov
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
jnp
mov
jle
cli
jg
jle
stos
dec
push
cwtl
repnz
dec
sub
mov
das
ret
lods
nop
pop
repnz
stc
jl
cmpsl
adc
pop
or
dec
adcl
xor
sub
les
aaa
scas
xchg
ljmp
mov
mov
arpl
repnz
cmp
stos
xchg
insl
and
lret
mov
mov
js
cmp
shl
movsl
lds
push
lock
daa
cld
add
hlt
dec
jbe
movsb
cmp
in
out
mov
lock
pop
scas
fs
jge
das
inc
aad
mov
out
adc
jl
fcomps
or
addr16
mov
loop
repnz
xchg
mov
inc
jbe
stos
arpl
clc
xchg
jge
jbe
mov
mov
xor
inc
cmp
jne
inc
inc
call
shll
std
mov
lahf
aas
aad
jno
fiadds
adc
mov
sub
dec
add
mov
pop
pop
xchg
stos
cmpb
inc
cli
or
out
sub
or
jge
push
scas
popa
inc
call
test
cwtl
inc
pop
inc
pop
stc
jno
hlt
repnz
mov
mov
lret
mov
repz
lock
sti
int3
in
mov
sub
pop
movsl
xchg
mov
bound
fistl
icebp
in
xor
ss
adc
aas
insl
mov
hlt
lock
ret
addb
rclb
repz
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
in
or
push
jle
cli
jg
jle
inc
aad
jge
rcr
inc
sti
mov
push
aad
fnstcw
lods
in
or
lcall
pushf
repz
cmp
xchg
repz
mov
jp
clc
push
dec
xlat
inc
sub
popa
pop
pop
aaa
jmp
mov
jne
cmp
mov
aam
movsl
and
dec
pop
jns
dec
test
enter
fcmovnbe
sbb
add
sub
cmc
push
jp
mov
mov
sbb
out
xor
sbb
enter
stc
outsl
sbb
pop
or
xlat
sbb
out
rclb
jnp
lcall
aam
addl
ss
clc
mov
std
jb
cs
popf
jecxz
mov
xchg
push
or
or
fs
in
mov
sub
xchg
pop
mov
push
roll
xchg
lahf
test
cmp
data16
shl
pop
lret
mov
icebp
std
cmpsl
inc
mov
pop
stos
outsb
cltd
xchg
xchg
call
dec
jp
rcll
leave
or
std
aad
pop
pop
in
out
and
inc
push
outsb
lock
xor
add
inc
lahf
bound
pop
inc
xor
or
adc
sub
sub
cmc
push
push
and
and
mov
jecxz
xor
sahf
aam
mov
jno
sti
bound
push
inc
aam
inc
or
fcos
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
roll
dec
push
cli
jg
jle
js
cmp
adc
pop
xchg
or
jle
push
adc
movb
sub
outsb
mov
xor
pop
lret
insl
xlat
rcl
test
leave
ss
push
push
cmp
sub
xor
lods
std
je
jns
inc
fcoml
daa
push
jo
jl
aas
bound
cs
scas
das
pop
lea
pop
into
jl
test
loopne
fstpl
lahf
arpl
and
shll
and
dec
xor
lods
adc
push
xor
cld
sub
xchg
call
ds
push
fwait
scas
mov
out
and
fldt
cli
repnz
lret
fnsave
dec
in
mov
loopne
insb
sub
adc
pop
cmpsb
xor
inc
or
dec
lock
shl
or
mov
jecxz
add
flds
xchg
imul
push
outsb
lods
and
or
ja
imul
mov
dec
in
in
orb
adc
push
mov
push
sub
sbb
out
rorb
lret
pop
in
xor
adc
xor
dec
ljmp
mov
mov
sahf
mov
pop
shll
mov
lahf
int3
pop
push
add
popa
and
cmp
decl
adc
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fisttpll
jle
pop
jl
jle
lods
xor
fwait
outsl
addr16
xor
jo
pop
mov
jne
xor
leave
cmp
add
ja
sub
ljmp
sbb
and
lcall
mov
mov
mov
or
cmc
loopne
stc
xchg
lret
or
dec
xorb
mov
jno
cltd
adc
jb
imul
sbb
scas
adc
aam
add
cli
pusha
cltd
rcr
push
js
fwait
push
je
leave
cmpsb
add
mov
adc
out
push
in
jnp
mov
inc
push
lahf
cmp
mov
mov
pop
cwtd
sbb
sbb
fs
sbb
inc
xchg
scas
inc
lea
rorb
or
xchg
jl
rcrl
arpl
cmc
pop
inc
pusha
lds
mov
shr
fs
daa
inc
pop
shr
pop
in
movsb
cmp
jge
adc
push
shlb
pop
add
sbb
xor
mov
add
or
test
xor
insb
mov
scas
mov
adc
int3
iret
enter
jmp
push
aaa
out
cmp
or
push
fldcw
xor
jge
adc
xchg
movsl
popf
pop
jns
pop
push
bound
mov
xchg
jg
mov
mov
stos
dec
sub
out
aas
or
jb
cwtl
jecxz
mov
movsl
adc
fwait
mov
add
ret
mov
test
mov
mov
dec
arpl
cmpl
sub
mov
pop
dec
jns
xor
mov
int3
jg
inc
scas
arpl
fxtract
or
addr16
fcomp
out
fdivr
adc
stos
push
inc
and
sbb
sub
inc
je
mov
pushf
add
mov
js
dec
sub
xchg
or
divb
add
jns
loop
ss
add
mov
ds
enter
mov
js
stc
lock
adc
test
out
popa
fs
add
jp
xor
mov
push
aam
xchg
xor
jo
clc
iret
faddp
fcmovnbe
mov
dec
testb
or
add
stos
ud2
lret
ja
mov
imul
jbe
out
add
adc
imul
jl
add
inc
mov
xchg
xchg
orb
mov
jecxz
mov
pop
test
xor
pop
pop
data16
data16
stos
inc
movsb
aaa
dec
pushf
orl
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
in
cwtl
pop
and
jle
pop
jl
jle
bnd
mov
push
sbb
fwait
sbb
inc
insb
add
push
cmpb
jae
scas
daa
fmuls
in
cmp
push
sbb
fucomip
rolb
inc
movsb
imul
cmc
jg
daa
mov
cltd
sahf
pop
loope
adc
cmp
cmp
dec
mov
fstps
gs
movl
xor
mov
xchg
cld
push
cmp
and
idivb
dec
pushf
mov
pop
in
or
cli
pop
outsl
jle
dec
in
ljmp
ja
out
cmpsl
mov
out
xor
in
push
insb
xor
mov
int
jmp
lret
in
xchg
xchg
jbe
adc
sub
fcompl
cs
pop
push
scas
sar
mov
rcrb
imul
int
mov
dec
mov
pop
cmp
sbb
stos
and
das
inc
adcl
push
inc
mov
jecxz
pop
or
add
xchg
nop
out
scas
mov
idivl
pop
lcall
shlb
and
enter
jne
push
or
fiaddl
sub
data16
sub
inc
pop
cwtl
dec
mov
test
push
test
in
outsl
push
ds
dec
mov
inc
mov
inc
fldl
jecxz
rolb
cltd
fcom
popa
gs
adc
out
neg
clc
adc
dec
data16
cwtl
insl
in
inc
mov
in
cmpsl
xchg
pop
mov
addl
inc
mov
mov
shlb
adc
inc
jg
aad
pop
push
js
cli
pop
outsl
fcompl
pop
out
ret
pop
mov
xchg
jb
popaw
adc
bnd
mov
pop
inc
jne
daa
test
xchg
xor
mov
negb
loop
sbb
lock
push
jae
ljmp
mov
mov
pop
enter
je
orl
push
jge
pusha
ja
shr
cmc
mov
or
mov
sbb
inc
mov
pop
repnz
sti
pop
xlat
and
mov
mov
dec
add
xor
jp
jns
shrb
mov
xchg
into
into
gs
mov
jne
xor
lods
iret
push
inc
cmpsb
or
roll
stc
fcomps
push
pop
lock
dec
adcb
xor
push
add
rorl
inc
adc
icebp
jle
loop
xchg
in
shl
jne
mov
cmp
icebp
js
inc
imul
movsb
call
insb
mov
sbb
xor
cmpsl
aad
mov
push
jmp
repnz
jl
fildl
sub
int
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
fistpl
or
jle
pop
jl
jle
adc
lea
adc
ljmp
repz
ja
sub
mov
call
cmp
int3
mov
add
je
mov
in
push
repz
push
rcrb
push
adc
adc
sub
push
sub
aad
inc
mov
xchg
mov
aas
cwtl
xchg
mov
xchg
incb
dec
fcomps
xchg
test
repz
or
pop
mov
adc
sbb
adc
pop
fwait
movb
mov
lods
test
daa
jno
dec
subl
pop
cmp
inc
mov
repnz
xchg
lcall
push
dec
rorb
and
lret
xor
mov
dec
fstpl
shr
add
mov
sti
or
or
sub
mov
jle
mov
and
jnp
mov
and
cmpsb
mov
mov
sub
adc
jmp
mov
adc
cmp
push
cmpsl
js
pop
cli
cwtl
lret
and
int3
inc
and
shrl
pop
popa
pop
loope
and
xchg
mov
insb
sbb
sub
jae
add
stos
movsb
xchg
mov
jo
std
sub
mov
pop
push
std
iret
rorl
cmp
mov
aaa
es
mov
xor
mov
or
enter
mov
idivl
cmc
icebp
js
pop
xchg
sub
and
ds
mov
push
arpl
fidivrl
add
mov
test
imul
gs
push
fldl
mov
divl
pop
jno
mov
add
and
pop
lcall
stc
mov
fisubrl
enter
jmp
daa
xor
mov
dec
ret
sbb
test
imul
leave
inc
xchg
call
dec
test
test
jg
and
add
mov
inc
xchg
ret
pop
sub
addb
test
int
adc
pop
inc
sub
jne
jns
shlb
push
loope
inc
cmpsb
inc
dec
jl
cmpsl
adc
push
ror
pop
aas
mov
cli
mov
or
push
in
repz
ja
cmpl
notb
mov
sarb
popa
das
scas
js
loopne
inc
pop
push
insl
cmp
mov
imul
mov
xor
cmp
inc
inc
xchg
jnp,pt
sbb
test
shlb
imul
orb
mov
pop
nop
inc
add
pusha
icebp
xchg
addr16
data16
int
pop
int
pop
ljmp
int
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
mov
cmpsl
je
jle
pop
jl
jle
ja
fwait
mov
test
ret
jp
in
mull
xchg
mov
sbb
aad
mov
push
lods
pop
sti
xchg
push
pusha
lret
push
push
lock
arpl
pop
test
ja
inc
mov
add
insb
roll
dec
jle
lcall
and
fsubrp
data16
inc
jg,pn
aam
pop
rol
daa
cmc
in
pop
fwait
cmp
add
fidivrl
ja
ja
jae
int
mov
mov
outsb
dec
mov
nop
rorb
jl
leave
test
mov
in
jecxz
in
repnz
int3
and
mov
xor
adc
xorl
mov
dec
push
xlat
outsb
jp
pusha
scas
push
scas
sahf
xchg
sub
mov
cmc
inc
sti
jns
shlb
daa
xchg
adc
cmp
int3
inc
pop
push
pmullw
xor
mov
icebp
adc
in
stos
loop
pop
mov
mov
or
das
dec
dec
cmp
leave
and
pop
out
lea
test
imul
mov
jge
push
pop
xor
push
mov
inc
aam
xchg
xor
mov
mov
mov
xor
push
xlat
mov
push
xchg
cmp
repnz
mov
iret
jo
stos
pusha
push
movsl
inc
shll
pushf
scas
or
sarl
sub
bound
aad
push
popa
xor
loopne
mov
push
imul
push
repnz
popf
xchg
loope
jnp
mov
stos
pop
xchg
imul
dec
scas
pusha
imul
call
icebp
lds
cmp
dec
xchg
sbb
add
ror
mov
add
jl
push
sbb
stos
loope
push
and
inc
cmp
jg
add
ds
mov
shl
xorb
pop
cmc
jnp
cmp
xlat
call
aad
jge
xchg
jb
cmp
mov
adc
jne
cs
adc
clc
fbld
mov
ja
inc
add
les
js
cmpsl
pop
push
cmp
xchg
dec
hlt
xchg
mov
jp
add
ret
inc
sbb
dec
div
dec
add
int3
popf
test
fnstcw
inc
aaa
enter
repz
pop
or
es
dec
je
stos
stos
inc
and
mov
jp
arpl
movsb
ficomps
fsubl
add
jmp
fldt
int3
dec
imul
out
jb
xlat
push
push
int
jl
fs
and
adc
arpl
aaa
mov
cmpsl
sub
or
out
sahf
popa
cmp
pop
sub
loopne
bound
clc
jmp
add
dec
popa
jno
jne
xor
jle
push
in
push
pop
sbb
pop
jl
jle
cmpsl
jae
mov
adc
mov
jae
cmc
mov
test
push
inc
adc
sub
mov
jecxz
xor
inc
or
stos
aad
pushf
leave
sbb
xchg
dec
or
in
xchg
arpl
push
test
out
les
cmp
mov
sub
sub
sti
jnp
fs
mov
cmp
xchg
jg
sahf
lcall
mov
mov
pop
add
mov
and
int
adc
cmpsb
fcoms
nop
js
xor
and
movsl
xchg
mov
jecxz
cmp
sbb
push
inc
push
ss
loope
add
push
popa
mov
jge
sbb
jmp
or
mov
mov
shrb
clc
fiaddl
movsb
and
xorb
enter
std
sub
sub
or
xchg
jne
push
fcmovne
mov
push
or
mov
lahf
pop
xor
mov
in
ret
jno
mov
shl
adcl
cmpsb
fwait
scas
insb
cld
sbbl
subl
fdiv
aaa
ljmp
hlt
pop
sahf
cmp
inc
popa
mov
push
aas
dec
in
sub
pop
clc
xor
test
and
pop
lret
sub
adc
sbb
loopne
cmc
xor
cmc
negl
inc
jge
or
jmp
add
xorl
sbb
pop
loope
out
xchg
stos
gs
push
mov
push
and
adc
xchg
movsl
pop
ja
lock
sub
fistpll
sub
addr16
jmp
sub
mov
mov
pop
cmpsl
cmp
pop
sub
push
fnstenv
mov
dec
push
int
aas
sub
and
leave
and
das
pop
enter
cmp
imul
cmp
int3
mov
adc
divl
sbb
push
test
daa
pop
pop
testl
push
jmp
outsl
pop
adc
pop
jmp
and
subl
xchg
icebp
jns
ja
fs
cmpsb
ret
xor
movsl
push
jae
mov
add
test
loope
rorl
loop
loope
jg
inc
mov
mov
mov
jmp
jbe
fstpt
mov
cwtl
les
dec
cmpsl
fstps
gs
sub
dec
or
in
mov
mov
adc
add
das
subb
icebp
adc
lret
xchg
mov
lahf
push
mov
out
test
pop
movsl
jb
inc
add
in
push
xlat
sub
cmpsl
jo
jb
and
adc
xor
imul
xor
sub
inc
and
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
mov
daa
jle
pop
jl
jle
fnstcw
sub
popf
push
loope
pop
cmp
out
rolb
jmp
inc
xchg
hlt
call
xor
and
mov
daa
scas
bound
pop
call
andl
dec
or
or
inc
xor
insb
xchg
sbb
mov
enter
inc
pop
dec
enter
lcall
aad
push
aam
adc
xor
mov
lods
cmp
adc
push
fsubr
je
or
mov
mov
sahf
cli
xor
cmp
out
jecxz
add
mov
in
lock
popl
jmp
mov
mov
mov
stc
fcmovne
dec
and
cmpsl
xchg
jle
inc
xor
cmp
fnstenv
cmp
addr16
pop
sahf
mov
mov
cld
cmp
sahf
out
mov
add
imul
orb
jmp
lretw
adc
stos
fucomi
xchg
push
imull
xor
jp
jno
xchg
fwait
std
out
mov
and
ljmp
syscall
daa
push
inc
roll
mov
icebp
leave
jecxz
inc
daa
push
xor
imul
fs
add
fdivl
fiaddl
push
and
xchg
sahf
shrb
mov
or
or
scas
push
test
mov
xor
mov
push
lret
xlat
and
sarb
sti
push
loop
xchg
push
in
ljmp
stos
sarb
jmp
and
idiv
mov
sub
or
test
dec
sbb
sahf
imul
inc
mov
nop
cmp
cld
jmp
mov
fcompl
mov
dec
push
sahf
test
sub
sub
popa
push
push
mov
mov
outsl
ja
cltd
push
scas
jns
jb
stc
inc
fwait
in
mov
cmp
cmp
fisubs
lcall
add
adc
and
out
push
cli
aad
jnp
mov
dec
jno
sub
sbb
iret
jmp
inc
leave
sub
cmpsl
ret
punpcklbw
mov
xchg
mov
xchg
jg
pop
jg
inc
cmp
mov
data16
lret
lds
sub
inc
es
insb
sub
cli
mov
mov
in
icebp
cmp
pop
icebp
jmp
adc
in
or
adc
xchg
jge,pt
imull
icebp
stc
sub
std
xchg
movsl
lock
data16
push
insb
loopne
mov
mov
sub
jae
or
imul
pusha
adc
out
cmp
add
outsb
cmpsl
iret
outsl
dec
add
incb
clc
mov
sbb
test
test
rolb
shr
imul
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
adc
jo
and
pop
jl
jle
xchg
out
push
inc
lock
in
inc
xchg
dec
xchg
test
add
mov
push
lret
int3
pop
push
loope
in
outsl
addr16
jne
addr16
pop
add
sub
inc
mov
lds
push
sub
cmp
dec
dec
sahf
push
stos
pop
das
lahf
xor
stos
or
int
outsb
out
pop
mov
insb
pop
inc
enter
fcmovnu
or
push
mov
outsb
xchg
and
dec
inc
sbb
loope
push
dec
jge
add
dec
mov
iret
outsb
les
mov
stos
push
xchg
cld
dec
insb
or
js
push
fsubl
les
rorb
aaa
push
sub
pop
inc
lods
loope
ret
mov
add
mov
in
dec
outsl
mov
icebp
xor
jbe
mov
inc
rcrb
xchg
cmpsb
add
test
sbb
push
jae
mov
mov
sbb
ret
xor
xchg
std
call
in
aaa
cmp
sbb
imul
pop
jb
mov
xchg
dec
out
sub
xor
add
push
add
add
xchg
sbb
or
pop
xor
jl
fdivrl
fsubrl
inc
lds
push
and
test
pop
cltd
sbb
into
mov
push
xorl
xor
mov
enter
lcall
xchg
pushf
cli
clc
mov
mov
mov
sarl
and
dec
push
xchg
xchg
cltd
in
jg
std
testl
in
mov
fsubl
mov
test
dec
lods
repz
mov
stos
mov
inc
cmp
inc
pop
xor
or
or
mov
notb
dec
push
mov
enter
out
xchg
push
repz
lret
loop
fistps
outsb
insb
cli
mov
cmpsw
and
or
xchg
mov
mov
cmp
pushl
mov
xor
pop
fcoms
enter
into
loopne
sub
outsl
mov
xor
and
in
int
fstpl
popa
or
cmp
push
roll
jge
sub
pop
ficomps
pop
roll
bnd
push
xchg
cmpsl
arpl
push
ror
pop
lods
and
cmpsb
and
cmp
int3
xchg
js
mov
xor
icebp
lret
stos
cmc
and
std
outsl
sbb
xor
sub
cmp
sub
adcl
loope
je
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
push
fincstp
mov
jle
pop
jl
jle
mov
call
jge
shll
stc
test
push
adc
clc
gs
out
fisubrl
mov
push
outsb
nop
sti
stos
dec
pop
rcll
repnz
cmp
cmp
jno
and
test
mov
js
or
cmove
outsb
popf
xor
sub
push
inc
out
scas
in
sbb
shlb
sbb
mov
ds
ret
add
cmp
cld
out
mov
and
adcb
push
and
popa
jno
outsb
aad
pop
mov
icebp
sub
imul
sbbb
adc
gs
lcall
scas
jg
and
cmpb
sub
ss
xchg
dec
mov
cmp
xor
push
sbb
std
cld
lea
jmp
inc
fildll
push
dec
aaa
sbb
ret
lock
test
aaa
and
sub
mov
add
xor
lcall
repz
aaa
push
or
insb
pushf
mov
das
les
dec
iret
test
xchg
cmp
data16
loope
pushf
lds
push
js
mov
mov
push
xor
push
mov
adc
xchg
xor
xchg
or
sti
in
insl
ja
test
inc
jmp
push
inc
popa
add
sub
sub
xchg
dec
pop
dec
fcoml
in
pop
inc
jno
xchg
hlt
popf
mov
pop
mov
fidivrl
push
push
test
out
or
ss
push
mov
adc
int3
enter
dec
jae
mov
mov
cmc
xchg
shlb
shll
push
rolb
xor
or
std
enter
xchg
inc
cli
mov
ds
fsub
inc
scas
rorb
mov
inc
cs
and
bound
mov
pop
xor
mov
push
es
repnz
mov
shrb
xchg
in
dec
add
fistpll
out
mov
lds
or
notl
push
addr16
into
out
loop
cmp
jo
fs
jmp
pushf
mov
je
outsl
cltd
mov
insb
xor
arpl
inc
inc
neg
mov
sub
xor
orl
fcomps
addr16
pop
movsl
lods
xor
sub
out
outsl
cld
je
lea
add
xor
outsl
pop
adc
les
or
mov
loope
mov
mov
inc
pop
clc
leave
ficoms
fdivs
outsl
adc
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
sbbl
jle
pop
jl
jle
in
in
xor
clc
sub
sub
mov
xor
jbe
mull
fmulp
sahf
inc
jns
in
popf
lock
js
outsl
mov
leave
test
xor
bound
fsts
add
xchg
sbb
mov
fbstp
lret
aaa
xor
dec
xchg
movsb
mov
mov
sub
popf
pop
pusha
shl
xlat
insb
out
negb
add
sbb
shl
sbb
dec
rdtsc
mov
sbb
xor
sbb
cwtl
aam
mov
sub
mov
xor
dec
stos
sbb
inc
mov
adc
ret
ficomps
jbe
jmp
or
xchg
aam
and
mov
pop
punpckhbw
xlat
arpl
pop
mov
in
lea
xchg
mov
lock
cmp
sub
cltd
lods
dec
cmovne
jle
cmpps
sbb
fstpt
ja
push
into
xor
pop
mov
call
cwtl
and
enter
rolb
push
cmc
and
cmp
mov
cmp
mov
jo
mov
cmpsb
cmp
jp
movl
mov
jns
int3
shlb
jle
mov
outsl
push
xchg
xchg
cmp
dec
push
ljmp
out
scas
call
lods
xchg
mov
jb
or
push
mov
and
sti
jns
inc
sub
rcl
js
imul
stc
nop
mov
leave
test
out
mov
mov
je
adc
jle
movsl
and
inc
test
test
mov
mov
ret
xchg
in
dec
mov
dec
je
andl
lea
xchg
enter
mov
sub
out
xchg
dec
loopne
in
popa
imull
sbb
std
push
mov
pop
pushf
push
jl
cmp
add
dec
mov
insb
mov
ljmp
repnz
arpl
and
sbb
and
sub
mov
dec
aas
sbb
sbb
call
dec
leave
into
and
sbbl
jb
sub
test
mov
lods
add
sub
jno
inc
stos
push
imul
xor
leave
inc
push
std
jp
adcb
push
lcall
ja
mov
faddl
fisubl
cmp
xchg
cmp
sbbb
mov
cld
pop
mov
mov
loope
outsl
loope
pusha
nop
enter
pop
push
scas
mov
scas
jb
or
jmp
mov
lret
push
test
pop
scas
inc
lahf
lcall
dec
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
inc
rcl
sub
pop
jl
jle
push
sbb
jae
sub
mov
pop
xlat
cmc
movsl
test
nop
std
jb
add
mov
and
jmp
mov
and
or
mov
lret
pushf
outsb
daa
dec
mov
rolb
mov
enter
lods
jle
frstor
iret
sub
shll
push
out
pushf
daa
repnz
outsb
dec
xlat
dec
fwait
sbb
outsb
mov
mov
dec
inc
repz
jne
outsb
es
cmpsl
sub
jbe
lods
cwtl
pop
inc
in
in
fnop
mov
jg
add
sbb
cmpsl
dec
sub
movsl
push
adc
roll
pop
inc
mov
mov
pop
fnsave
xor
add
mov
mov
std
rorb
stos
subb
sbb
in
imul
cmp
pop
and
stos
stc
adc
fldl
mov
inc
and
hlt
imul
and
push
pop
and
nop
ja
sbb
and
std
arpl
add
cmc
ret
xor
cmp
stc
add
ss
xchg
lret
bnd
pop
inc
into
aad
les
jle
jbe
rclb
sbb
push
pop
in
sbb
push
xorl
sbb
add
lcall
lds
jl
test
movsl
jmp
mov
cmc
into
addr16
das
mov
cli
faddl
lahf
lea
imul
sub
dec
cmp
lock
rcll
call
nop
xchg
push
js
out
cmp
pusha
mov
repz
lods
aad
rolb
aad
jge
inc
stos
push
outsl
pop
jo
jle
jae
fcoms
dec
adc
bound
push
popa
inc
cmp
mov
mov
mov
push
inc
jb
sbb
scas
pop
js
lods
imul
ss
sbb
inc
inc
cmpsl
adc
call
or
shlb
adc
push
jmp
jge
hlt
insb
js
xor
push
andl
push
orl
insl
pop
add
pop
and
lods
das
outsl
fwait
cmp
add
scas
pcmpeqb
and
into
inc
push
add
popf
push
mov
sarl
and
in
in
test
adc
movsl
dec
arpl
leave
cmpsl
incl
mov
xchg
ss
stos
push
add
hlt
sub
dec
or
stc
pop
adc
push
in
das
xchg
lahf
xchg
fwait
push
mov
cmp
test
adcl
popa
sbb
shrl
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
jge
or
ss
sub
jle
out
dec
fimuls
dec
push
mov
mov
cmc
and
daa
ljmp
test
push
adc
loope
sub
test
jp
inc
dec
jo
mov
fs
bound
pusha
lret
test
insb
pop
ror
sbb
hlt
push
add
lock
jg
ljmp
rol
fcoms
sub
in
in
jge
pop
shlb
outsl
stos
jmp
jae
sti
in
out
xchg
xchg
dec
loop
or
test
in
jmp
push
cltd
sbb
fwait
mov
sub
sbb
or
dec
mov
popa
mov
adc
or
push
cmp
insl
jmp
jp
push
repz
jae
mov
and
jge
shlb
mov
jp
test
xchg
sbb
mov
inc
loopne
mov
pop
cmp
mov
insb
mov
clc
jns
xchg
ret
or
addr16
mov
ret
test
pop
cwtl
pop
xchg
cmp
aaa
lret
and
dec
xor
xor
mov
orl
ds
jl
test
xor
jb
xchg
mov
int
scas
bound
mov
inc
sahf
add
loope
or
mov
sbb
mov
mov
lds
in
lret
or
jmp
add
sbb
xchg
in
and
call
pop
inc
sar
shr
aam
fwait
add
out
lea
mov
roll
pushf
int
xlat
in
push
pop
dec
loopne
je
xchg
and
sbb
or
lds
repz
pop
out
rcrb
mov
or
cmpsl
jnp
mov
roll
adc
call
cltd
mov
inc
imul
test
and
sti
pop
sbb
pop
lcall
out
and
pop
mov
sti
cmpsb
mov
rorb
ret
xor
pop
pop
adc
sbb
imul
and
jmp
cmp
pop
inc
jbe
xchg
mov
or
mov
push
fwait
call
movsb
test
dec
push
dec
cmp
roll
jo
enter
and
pop
xchg
mov
mov
scas
dec
icebp
fnstsw
sbb
rorb
movsl
imul
and
sub
jl
ret
shl
mov
pop
lds
add
jle
push
mov
dec
sti
jp
std
xor
pop
xchg
xor
inc
hlt
mov
mov
nop
or
into
rorb
dec
lods
pop
int3
pop
push
repnz
mov
jle
imul
bound
sub
cmc
repz
scas
hlt
sbb
lock
in
stc
fiadds
cmp
xor
fisubrl
xor
popf
int3
pop
jg
lea
or
adc
sbb
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
int3
push
scas
cmp
inc
insb
std
or
or
pop
fbld
xchg
inc
jp
data16
sub
sbb
jb
cmpsb
lds
cmpsb
mov
xchg
loop
inc
stos
jmp
movsb
or
lret
rclb
mov
leave
mov
icebp
jg
mov
mov
cmp
mov
out
arpl
lods
dec
pop
cwtl
or
pop
mov
adc
in
add
js
dec
push
fsubrs
cmpsb
js
rorl
xor
sub
xor
in
dec
dec
in
call
in
cltd
fildll
int3
movsl
std
cmc
jmp
mov
pop
cmp
mov
std
rorl
cwtl
aad
xchg
pop
ja
jmp
push
scas
mov
pushf
les
add
and
inc
sbb
repnz
adc
xor
or
pop
std
xor
xchg
lea
mov
push
pushf
inc
and
sub
aas
in
into
inc
xlat
lods
ja
and
push
sub
push
cmp
add
or
xchg
sar
test
xor
les
adc
test
cltd
fistl
mov
add
iret
cmp
ficoml
mov
in
adc
insb
xchg
jns
fdivl
js
repz
jns
movsb
into
test
mov
popa
sub
out
lret
xchg
pop
sbb
popf
lock
testb
jecxz
xor
jp
stc
cs
movsl
add
jecxz
sbb
and
and
stos
test
adc
es
sbb
int
jmp
into
xor
mov
mov
negb
jmp
and
mov
sub
inc
push
and
cmp
icebp
adc
pop
pop
loopne
scas
sbb
or
int
push
jle
mov
imul
ds
cmc
inc
pop
outsb
popa
fldt
inc
mov
int
sbb
nop
andb
mov
lret
push
dec
ja
stc
imul
addb
and
popa
xchg
aad
jbe
push
lods
es
shr
pop
cld
xor
mov
pop
xchg
jmp
mov
sahf
mov
testb
rolb
cmpsl
mov
scas
inc
frstor
inc
cltd
stc
push
jae
shll
pop
ds
xchg
out
fidivrl
mov
shll
sbb
add
insl
push
push
cwtl
dec
bound
push
cmpsl
push
pop
rcll
inc
inc
cmpsl
dec
xchg
lahf
fadds
imul
mov
xchg
mov
jne
jle
orb
outsb
aam
stos
stc
lret
aad
mov
cltd
and
add
ret
mov
shl
and
fbstp
cmc
test
scas
jp,pn
fdiv
in
fistps
das
sbb
sbb
or
jbe
in
jbe
fwait
ret
xor
inc
push
inc
jae
push
je
push
mov
notl
gs
inc
int
cmovs
lods
repnz
mov
icebp
neg
jmp
jne
sub
test
test
mov
into
fldenv
jge
jle
cmpsl
cltd
inc
dec
sbb
lcall
xorb
in
jno
or
or
orb
mov
lcall
cmpb
daa
test
jge
outsl
repnz
push
push
test
bound
call
lret
dec
jmp
lods
inc
inc
ljmp
inc
pushf
mov
jecxz
mov
jns
sub
push
in
jp
cli
bnd
mov
mov
inc
inc
xlat
inc
lea
mov
add
cwtl
mov
negl
jg
or
push
test
cmpsl
mov
cmp
cltd
xchg
rcrl
incb
dec
xchg
ja
dec
outsl
fisubrl
jns
mov
aas
lods
cs
rorl
mov
cmpsl
mov
xchg
jl
add
mov
xor
int3
cmpsl
lea
xchg
xchg
js
cs
and
insl
iret
jecxz
hlt
ja
idivb
mov
jne
repnz
sbb
mov
insl
and
push
popf
sub
adc
fxch
and
and
test
movl
sbbb
pop
sbb
sarb
and
add
sub
mov
add
rcrb
into
fs
lret
jbe
cwtl
addr16
or
fnsave
dec
lods
cmp
int
lods
mov
cltd
movb
rcll
mov
cmp
mov
lahf
pop
mov
adc
or
jo
and
jecxz
stos
or
imul
movsb
scas
sub
repnz
notb
and
mov
daa
sti
cmp
out
shl
add
dec
test
mov
dec
daa
xor
cltd
pushf
mov
jnp
and
pop
dec
push
cmp
inc
pop
cmpsl
jae
insb
mov
push
dec
testl
rcrb
mov
mov
into
sbb
or
sub
ljmp
mov
jmp
cli
inc
xor
cmpsb
xor
rcll
clc
ret
xlat
aas
dec
mov
pop
gs
inc
cli
rep
mov
sahf
push
aaa
in
fcoms
ret
cmp
addl
stos
push
mov
in
pop
test
fsts
insb
push
pushf
stc
and
incl
movsb
fdivp
add
popa
mov
xchg
and
out
xchg
cmpsb
shll
mulb
and
xchg
jmp
int3
mov
sub
daa
scas
std
outsb
and
add
and
jl
sbb
pusha
mov
jp
push
sbb
iret
movsb
cmpsl
std
ds
mov
pop
jns
lock
in
inc
mov
lcall
shrb
xchg
pop
sbb
cmpsb
jle
mov
incb
dec
pop
sti
mov
pop
sti
movsb
dec
mov
pop
and
out
outsb
cs
push
incb
fsub
dec
push
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
pop
orl
sub
jle
mov
pop
or
outsl
jecxz
jns
scas
sarb
sarl
pusha
out
aad
mov
dec
dec
cmpsl
test
jo
ret
movsb
data16
dec
dec
jmp
or
aas
or
jae
fisttpll
imull
sbb
jbe
in
rcll
push
movsb
cmpsl
enter
call
cmp
mov
rcr
jg
jmp
lahf
sbb
push
aam
jb
cmp
and
xor
pop
jmp
mov
xchg
jp
xchg
stc
mov
nop
xor
rolb
xchg
push
pop
flds
es
sti
or
add
pop
aad
das
shll
aas
shlb
sub
sub
mov
push
xchg
daa
insb
xadd
leave
cld
pop
js
daa
sub
out
jo
sub
xchg
jnp
push
jb
adc
loopne
add
arpl
sbb
push
mov
lock
mov
popf
sub
pop
in
out
mov
and
inc
jno
xchg
dec
in
xor
rorl
ljmp
fcomi
imul
test
cwtl
inc
js
int3
mov
jp
test
lret
mov
and
sbb
dec
push
dec
jg
mov
rcll
repnz
mov
outsl
xlat
inc
clc
insl
push
fwait
cmp
popl
and
roll
test
jle
jle
js
mov
pop
jl
cltd
push
mov
pop
shr
jno
sbb
xor
jp
dec
enter
mov
push
sbbb
andb
cmpsl
lahf
cmpsl
cltd
stos
fidivrl
lahf
pop
adc
fldenv
clc
lds
fstpl
pop
xor
aaa
gs
loope
jns
bound
add
mov
out
mov
gs
push
dec
pop
sub
call
lock
lahf
inc
fidivs
adc
add
mov
mov
mov
adc
sar
and
call
and
std
pop
int
enter
dec
xor
xchg
ret
pop
ret
inc
inc
fucom
add
xor
rcl
push
repz
jge
shrb
lods
ret
sbb
mov
cwtl
gs
aas
stos
or
dec
repnz
lea
dec
out
das
dec
cmp
outsl
pop
cmp
in
xor
xor
jns
pop
fcoml
call
mov
or
lret
xchg
mov
int
dec
mov
test
test
push
loope
or
adc
or
jle
mov
add
sbb
daa
repz
sub
ds
jecxz
cmp
popa
lcall
inc
fwait
pop
xchg
or
leave
cld
hlt
dec
aam
and
fildll
adc
sub
xor
sub
push
push
movsb
dec
insb
adc
adc
mov
xchg
xor
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
xlat
add
jle
mov
shlb
test
jae
xor
dec
cmp
repz
lret
jbe
call
xor
cmpsl
xor
pop
int
scas
outsl
pop
aad
mov
cmp
mov
lret
and
push
rorl
popf
adc
dec
inc
bound
xchg
pop
mov
sbb
std
ffree
sbb
jne
xor
lods
es
or
test
icebp
cmp
outsb
icebp
clc
cli
paddd
loopne
icebp
inc
cld
cmp
aas
iret
ret
stos
shrl
fnsave
mov
out
xor
mov
jns
nop
pop
ljmp
ja
aas
dec
lock
bnd
call
and
or
iret
sub
sbbb
or
jmp
pop
lret
das
ficomps
mov
mov
mov
push
lds
out
pop
xor
cltd
sub
cwtl
jl
adc
and
or
test
adc
ret
dec
test
cwtl
adc
dec
sub
jg
inc
jg
adc
dec
ret
aaa
inc
adc
cld
add
outsl
out
jno
bnd
inc
push
repnz
mov
cmpsb
jns
mov
subb
sbb
mov
sub
out
mov
xchg
jns
or
add
pushf
icebp
xor
or
pop
sbb
mov
adc
js
mov
shll
pusha
es
xchg
gs
fistpll
clc
js
lret
mov
fsubrl
dec
dec
mov
mov
sarl
sbb
xchg
aaa
inc
add
roll
push
jge
add
rolb
aaa
inc
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
stos
mov
jle
jg
jle
int3
and
xor
push
mov
cltd
insl
mov
stc
cmpsl
sbb
cmc
jnp
bound
mov
dec
sbb
hlt
push
andl
clc
bound
popa
xchg
mov
pusha
mov
stos
pop
imul
adc
scas
lcall
inc
lds
dec
cmp
faddl
pop
insb
dec
mov
push
mov
adc
mov
fidivs
xor
mov
aaa
fnstenv
stc
test
outsb
aam
cmc
sahf
xchg
in
out
add
adc
xor
mov
or
jge
dec
or
loopne
pushf
cmp
lds
in
je
sbb
mov
jle
jge
mov
push
fcompl
loope
xchg
aad
xchg
scas
rcll
jl
imul
and
shrl
sarl
pop
lods
inc
std
dec
addl
dec
std
fisubl
mov
in
negl
push
pop
test
out
xor
mov
in
inc
mov
pop
test
mov
lods
dec
ja
fldl
daa
push
sub
sbb
pop
imul
movsl
push
js
out
sbb
push
stc
inc
sub
fildl
xchg
cmp
sahf
iret
or
pop
popa
cmpsl
sub
std
loopne
aad
shll
jno
sti
push
xchg
flds
mov
and
sbb
mov
pop
stc
mov
sbb
mov
lods
in
fwait
test
les
inc
dec
mov
sub
xor
or
mov
mov
cmpsb
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
mov
icebp
movsl
xor
push
jmp
cmpb
push
add
jae
mov
add
sub
jbe
push
popa
mov
mov
jae
inc
int
dec
je
shll
mov
cmpsb
es
pop
cs
xor
and
orb
hlt
ss
mov
pusha
inc
sbb
loop
push
lock
cmp
stos
ja
ss
pop
jb
sarl
fcoml
aas
sti
cld
add
fucom
ljmp
push
mov
scas
fwait
xor
repnz
mov
xorl
mov
inc
clc
fucomp
je
jne,pt
lods
add
mov
in
imul
push
out
loope
sbb
mov
rclb
test
lret
test
movsb
sbb
or
je
pop
add
and
adc
push
mov
xchg
ja
xchg
iret
fistpl
movsb
stos
push
sti
mov
lods
jns
js
aad
xchg
xor
scas
push
xor
lret
mov
addr16
ja
dec
jp
xchg
push
inc
lods
pop
jno
sti
pop
into
mov
mov
xor
lods
ret
lods
sub
es
imul
mov
adc
dec
and
inc
xor
test
mov
mov
imul
or
push
pop
push
pop
insb
repz
or
stos
xchg
and
xor
dec
jns
dec
mov
repnz
mov
sub
movl
dec
mov
mov
jne
call
test
jmp
and
in
popa
push
lret
xchg
sub
xchg
arpl
les
mov
xrelease
js
lea
roll
cmp
xchg
pop
das
mov
out
mov
aam
xchg
ror
dec
or
shrl
mov
mov
addl
sub
fimull
xchg
pop
adc
adc
repnz
repnz
add
pop
mov
inc
bound
cs
mov
dec
jae
push
mov
or
fstpl
outsb
fisubrs
imul
cs
and
push
mov
mov
xor
test
or
je
add
ds
mov
cmp
adc
ret
mov
lods
xchg
les
test
push
in
pop
je
mov
xchg
mulb
insl
mov
leave
jae
jo
add
pop
xchg
sbb
jmp
dec
nop
lahf
sub
and
mov
push
and
adc
jno
fs
pop
xor
test
push
lods
dec
inc
loop
cmp
cmp
int3
lock
push
mov
imul
inc
xchg
insb
adc
jle
test
jmp
pop
mov
cmpsl
aad
xchg
pop
loopne
pop
ret
dec
jmp
adc
insb
inc
rorb
imul
xchg
push
mov
pop
lret
fs
jmp
jmp
ds
xor
add
popa
adc
outsl
jne
jg
xchg
or
xor
data16
mov
cmp
xchg
mov
xor
mov
sbb
daa
arpl
mov
aad
test
sub
cmc
or
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
adc
xchg
or
jle
add
ljmp
outsb
push
fcomps
adc
mov
lea
or
jp
movsl
shrb
jp
push
in
or
pusha
jnp
jmp
push
je
push
clc
xchg
gs
out
es
popa
popa
mov
push
mov
cmp
sbb
cmp
scas
scas
mov
std
mov
lods
in
dec
sub
lds
inc
dec
jb
lret
cmp
and
mov
jbe
cmpsl
xchg
cmp
dec
movsl
xchg
cltd
movsb
push
and
out
and
lods
icebp
mov
mov
jecxz
aam
subb
or
dec
mov
dec
xchg
mov
xor
cmp
push
add
out
cmp
dec
push
pop
aad
dec
ret
ffree
test
sub
aaa
xor
fbstp
imul
pop
inc
adc
in
cmpl
push
jl
rclb
rcr
mov
cmc
jle
ss
sbb
shrl
gs
jg
out
mov
popf
cmp
jmp
aam
leave
je
jae
ss
fwait
lea
cld
test
fsts
subb
xor
add
imul
lret
fdivr
xchg
lods
hlt
nop
add
gs
mov
push
fcmovnu
lea
xor
fistl
sub
fimuls
inc
jb
fdivr
test
jg
sbb
out
jmp
bound
outsb
ret
loop
ficompl
ret
cmpsb
mov
push
sti
cli
mov
inc
mov
in
shll
dec
outsb
pop
cmp
pop
jnp
sub
imul
jbe
sub
mov
lods
pcmpgtb
pop
movsb
je
or
adcl
minps
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
loopne
xchg
fs
jle
add
repz
rolb
std
icebp
xor
nop
shll
jno
mov
mov
pop
fmull
sbb
jne
fadds
cmp
sti
imull
or
mov
mov
fildl
jbe
lods
imul
loop
aam
stos
sbb
arpl
add
iret
inc
xchg
pop
push
int
jle
ss
push
lods
jo
pushf
loop
xchg
and
pop
push
loopne
insl
stos
icebp
mull
xchg
jmp
or
sbb
cmp
inc
lods
fs
jmp
rorl
pop
in
cmp
dec
arpl
or
mull
xor
les
jb
push
sub
or
notl
and
cmp
icebp
push
push
dec
ret
cld
xor
jl
movsl
mov
xor
push
mov
rol
dec
bound
push
out
out
xchg
fidivrs
and
je
les
sub
lods
icebp
sbb
cwtl
movsl
leave
je
dec
mov
mov
arpl
xlat
daa
or
or
test
and
sbb
fs
mov
cmp
cwtl
sub
jne
out
and
pop
cmp
mov
sub
push
test
inc
mov
es
nop
inc
push
xchg
cmpsl
mov
jo
inc
xor
pushf
mov
popf
icebp
mov
xor
xor
mov
or
mov
dec
mov
jmp
outsl
in
adc
cmpsl
xchg
cwtl
xor
or
outsl
jb
outsl
push
cmp
lea
push
add
jns
add
push
outsl
js
sub
xor
jmp
cmp
or
inc
mov
mov
inc
or
das
push
xchg
add
xor
lods
les
dec
jmp
sti
call
push
cmpsb
insl
sub
addb
ljmp
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
add
jle
jl
jle
jg
scas
sub
stos
test
adc
fcoml
cld
or
pop
into
stos
lcall
dec
sahf
xchg
xchg
ss
hlt
lcall
add
test
scas
fstpl
or
cmc
push
fisttps
push
jo
sub
arpl
adc
mov
push
xchg
jmp
inc
test
mov
iret
outsl
mov
inc
shl
sbb
fsubrl
add
mov
inc
sub
rcrb
popf
pop
ds
jg
cmp
xchg
test
test
mov
ret
adc
rcr
scas
mov
cs
lahf
aad
cmc
cli
xlat
jnp
add
icebp
bound
mov
and
jp
shrl
daa
push
sbb
pop
adc
mov
mov
ds
mov
pop
loop
ds
xor
rcrb
leave
scas
mov
push
fmulp
sub
pop
shl
pop
pop
mov
stc
stc
out
jae
push
pop
sbb
mov
cmp
addr16
ret
adc
shr
jns
std
dec
stc
insb
add
in
and
xchg
stos
pop
inc
int
xor
in
adc
in
mov
lock
add
popa
mov
dec
jbe
jge
mov
hlt
repnz
push
fisubs
inc
stos
sub
mov
lret
int3
lcall
mov
pusha
mov
push
fwait
loope
sbb
push
pop
xorb
sub
dec
xor
inc
cmp
and
scas
inc
aam
adc
ljmp
cmpsl
push
xchg
jbe
loop
insb
outsb
shll
cmp
in
loop
ss
lahf
repz
or
imul
out
push
mov
insl
int3
es
pop
cli
mov
into
into
out
arpl
or
in
or
pop
sbb
xor
add
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
xchg
bound
jle
jl
jle
jbe
dec
ret
cmc
cld
inc
shlb
add
jb
jae
mov
dec
cltd
fisttpll
dec
fcomp
mov
test
mov
lods
cmpsl
add
pop
into
mov
in
lret
orb
fcomp
or
add
adc
sub
or
data16
add
clc
inc
sbb
and
out
cltd
mov
sbb
sbb
sbb
scas
mov
int
fcoml
add
pop
jge
ret
sub
pop
cmp
xchg
enter
jge
mov
mov
mov
pop
test
mov
out
dec
in
pop
jg
loopne
cwtl
stos
in
shr
sbb
mov
add
gs
into
mov
in
ret
test
mov
jno
cmp
shll
mov
inc
and
das
jecxz
mov
inc
mov
fwait
decl
iret
push
jo
xchg
shrb
xor
shrl
lea
lock
js,pn
add
testb
xchg
adc
push
xor
cli
xchg
leave
inc
xor
ficoms
sbb
outsl
leave
cmp
pop
inc
dec
imul
mov
sbb
dec
lods
jle
mov
pop
cmc
ss
ss
movl
add
push
xor
push
pop
jecxz
sbbl
jnp
addr16
jno
push
push
rclb
outsl
nop
xor
cmp
sbb
test
ss
mov
js
stos
jmp
cmpsl
sbb
movsl
push
xchg
xchg
dec
add
add
inc
shll
dec
stos
xor
mov
das
lods
inc
inc
lods
cmp
cmpsb
fists
push
pusha
mov
fisubrs
and
sbb
imul
inc
cltd
mov
ja
xchg
cltd
sub
out
add
or
mov
outsb
cmp
jge
into
aas
lods
adc
inc
hlt
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
inc
ds
and
jle
mov
cmpb
push
lea
or
lret
mov
mov
lock
jno
mov
inc
pop
nop
mov
mov
dec
in
insl
movsb
xor
lds
or
inc
xor
sbb
in
fstps
scas
sbb
das
inc
push
popa
frstor
gs
aam
cwtl
push
add
jmp
cmc
add
aaa
pop
sub
and
mov
mov
mov
mov
aaa
inc
push
sarb
jb
adc
jb
cmp
cmp
adc
push
and
or
sbb
adc
push
ds
add
mov
imul
xchg
pop
fistpll
cld
jp
dec
cmp
adc
ljmp
hlt
jmp
ret
inc
fbstp
add
mov
insl
mov
push
inc
sahf
jg
aas
and
cwtl
popl
andb
je
lret
or
loop
xchg
mov
repz
jb
or
out
push
shll
addl
jne
test
shlb
push
cmp
fstl
lcall
mov
push
fnstcw
pusha
int3
jno
sbb
mov
mov
aam
imul
sbb
arpl
mov
das
call
sub
push
jmp
sub
aaa
jbe
lock
sub
xchg
lea
xor
fiaddl
in
and
or
add
jge
xchg
aas
adc
ds
cmp
push
inc
push
pop
dec
aas
pop
jle
lods
negb
ret
fcoml
push
and
inc
xchg
or
fcomps
lret
in
popf
adc
testl
js
test
clc
jmp
pusha
in
nop
sbb
pusha
jbe
sub
in
cmp
jnp
shl
cmp
ds
scas
jbe
mov
sub
xchg
sbb
adc
pop
add
push
cmp
jne
push
jmp
add
xchg
push
lahf
pop
push
dec
shr
xchg
ret
fisubrs
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
dec
add
jle
and
jle
dec
adc
jle
outsl
mov
popf
add
rcr
aas
ret
sti
test
jno
xchg
mov
xchg
adc
mov
cmpsb
leave
repnz
push
int3
iret
jnp
mov
sbb
div
inc
cmp
daa
scas
cld
rorb
mov
repz
dec
test
mov
add
test
sbb
cmp
jo
in
scas
and
cmp
out
aaa
nop
sarb
sub
jmp
inc
orl
scas
adc
jl
mov
inc
pop
fiaddl
adc
or
dec
inc
call
lods
je
cmp
sub
inc
mov
xchg
cs
xor
and
loope
pop
andl
xchg
mov
adc
xchg
bound
andb
add
xor
jae
ficomps
clc
insl
dec
push
test
xchg
add
xor
mov
movsl
addl
mov
cmp
or
cmp
mov
xor
iret
jbe
lock
jge
pop
loopne
xchg
data16
xchg
mov
xor
adc
fwait
out
jmp
push
xchg
cmp
repz
dec
inc
mov
in
pop
out
test
jp
adc
dec
std
fstpl
inc
jp
mov
or
cmp
scas
lods
jge
push
insl
jo
test
jmp
cmpsl
scas
xchg
scas
sub
ret
adc
std
clts
js
cmp
sub
and
and
cmp
sub
test
lods
jae
mov
test
dec
daa
inc
lea
or
or
ret
pop
adc
inc
inc
pop
fsubs
or
mov
add
sub
pushf
out
xchg
or
push
shlb
loopne
mov
push
shll
inc
and
sbb
in
jbe
pop
jmp
mov
or
in
inc
push
arpl
mov
adc
jnp
inc
add
outsl
cmp
cmpsl
cmp
jmp
pop
push
jg
xor
add
and
jl
jle
in
outsl
inc
jb
xchg
xchg
xor
movsb
std
or
cmp
xchg
xchg
xor
call
and
jecxz
jnp
mov
int
fadd
dec
sar
jmp
loop
sub
mov
movq
hlt
sbb
popa
cli
pusha
aam
fnstcw
imul
hlt
mov
xchg
stos
enter
jne
and
jge
and
xor
mov
xchg
jae
jno
lock
mov
les
push
sbbl
data16
jg
xor
lret
cmpb
jbe
dec
insl
stos
xorb
pop
and
add
pop
cli
mov
test
inc
iret
arpl
stc
xor
insl
test
mov
movsl
push
test
stc
dec
sbb
cmp
faddl
jno
loop
sbb
test
jecxz
inc
dec
outsb
cs
xchg
in
xor
subb
pop
in
iret
cmp
sbb
xchg
fcomi
jg
mov
cld
pusha
rcrl
xorl
push
adc
push
in
push
nop
ficompl
xchg
sti
or
ljmp
xor
sub
mov
xor
and
les
sub
mov
imul
add
mov
mov
shrl
fisttpll
dec
dec
jns
bound
arpl
jae
stos
mov
lea
add
mov
xor
add
xchg
adcl
in
fcmovnb
enter
xchg
inc
cltd
out
call
insb
push
or
mov
inc
xchg
andb
dec
jbe
pop
or
sbb
mulb
ss
jp
adc
out
scas
dec
outsl
lret
imul
cwtl
stos
adc
jmp
int3
loop
jns
ret
out
fmulp
lret
repnz
sub
in
lret
jp
loopne
hlt
sub
daa
jne
xor
imul
pop
dec
repnz
fldt
add
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
out
mov
jle
and
jle
insl
push
cwtl
test
outsl
jae
dec
pop
jp
out
and
call
and
nop
in
mov
or
sbb
aas
leave
clc
clc
testb
adc
or
jne
jo
hlt
mov
call
lods
pop
jno
cwtl
xchg
int
lea
jne
dec
sub
mov
xor
or
push
enter
sti
inc
mov
mov
inc
loopne
xchg
cli
jno
imul
fmull
lds
and
shlb
push
movb
lods
jg
jge
insb
jp
xor
xor
stos
fistpl
add
in
aad
push
inc
gs
jne
mov
jb
and
mov
dec
ret
dec
mov
sbb
scas
testb
subb
cmp
loopne
mov
cmpsb
xchg
subl
shll
jo
sub
mov
fstps
or
fwait
lret
pop
jbe
dec
imul
movl
inc
fadds
sbb
test
and
stos
cmp
mov
std
xchg
ss
jno
xor
cli
push
add
add
and
imul
cmc
inc
outsb
mov
xor
inc
fiaddl
les
dec
mov
mov
inc
sub
xchg
dec
dec
sub
xor
clc
xor
add
push
fadd
cmp
push
cmc
xchg
inc
pop
cmp
ret
incl
andb
mov
fwait
xchg
repz
xchg
rorl
jp
adc
call
popa
loop
pop
pop
or
jge
jno
fldl
insb
add
sub
out
xchg
mov
pop
cmp
adc
push
aas
decl
pop
dec
mov
push
stos
in
add
inc
stc
mov
test
aad
dec
mov
test
pop
pusha
call
dec
mov
cmp
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
dec
push
sub
jle
and
jle
rolb
ret
out
cmpsb
aaa
add
or
sub
inc
js
test
fstps
in
mov
dec
jbe
jno
mov
adc
imul
scas
jle
out
nop
mov
mov
out
pop
add
icebp
add
mulb
cmp
mov
das
out
mov
inc
cli
bnd
xor
les
rcrb
mov
jo
xchg
pop
pop
int3
in
jnp
mov
fdivl
pop
lods
cs
pop
pusha
int
pop
jne
in
xabort
xor
in
mov
sub
xor
jmp
jle
dec
xor
sub
cltd
adc
add
ret
xor
mov
cmp
ret
inc
iret
mov
and
outsl
adc
or
call
dec
xlat
insl
insb
in
xchg
pop
daa
dec
pop
push
or
mov
xchg
or
fs
loop
dec
clc
repz
and
inc
pop
cmp
mov
bnd
in
aaa
dec
mov
mov
dec
xchg
in
add
push
jb
push
repz
loop
loopne
adc
out
das
rcll
pop
jmp
fdivl
aas
xchg
mov
dec
xchg
in
jecxz
pop
clc
cmpl
push
push
jle
xchg
in
mov
rcrl
mov
sub
cmpsl
push
mov
dec
adc
loop
mov
scas
dec
add
outsl
push
pop
icebp
pop
xor
aad
push
insb
add
andb
scas
out
and
int3
ret
das
mov
leave
cld
sbb
loop
mov
rcll
pop
iret
and
push
mov
cmc
xchg
ljmp
enter
adc
or
or
imul
and
xor
lcall
push
jbe
imul
mov
push
dec
cltd
xor
loop
rolb
pop
test
sub
cmp
pminub
cli
adc
inc
stc
sub
xchg
jp
popa
mov
add
popf
lds
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
or
dec
pop
or
ss
pop
repnz
xor
stc
or
sub
push
pop
aam
and
fcmovne
imul
ret
ljmp
lea
adc
into
or
jae
push
xor
xlat
out
shll
lods
in
mov
push
inc
faddp
je
lret
inc
ds
mov
xor
insl
daa
inc
nop
jno
insb
in
es
popf
iret
lcall
dec
cmpsb
fnsave
cmpsl
icebp
add
fwait
pop
int
stos
mov
or
add
sbb
xchg
inc
jo
mov
loop
movsb
lret
push
fcmovne
orb
mov
rcrb
adc
xchg
aam
or
xchg
aas
sbb
mov
inc
mov
dec
sbb
push
push
sbb
xchg
push
sub
jb
xor
xor
jne
adc
mulb
cld
lcall
insb
cmp
xor
cmc
mov
std
mov
inc
lods
mov
inc
push
push
push
xor
not
jle
push
or
clc
xor
ds
int
ret
icebp
je
lret
jmp
lock
imul
movsl
sub
rorb
cmpsl
loop
shl
and
popf
jne
cmc
and
repnz
cmpsb
mov
pop
jbe
mov
nop
cli
out
repz
je
cmp
fisubl
xchg
cmp
jl
mov
test
or
aam
test
fwait
lea
and
data16
push
mov
mov
mov
cmc
leave
push
mov
push
push
leave
jo
jbe
cmp
jbe
ret
std
cld
xchg
mov
call
inc
les
jae
outsl
xchg
pop
add
xor
test
add
adc
xor
repnz
scas
cmpsb
dec
repnz
push
lods
cmp
mov
adcl
mov
jnp
mov
inc
lret
outsl
in
ja
pop
fwait
xchg
ret
jmp
jl
jne
lret
cmpsb
std
cmp
add
lret
test
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
or
sub
fistpll
and
jle
xchg
loopne
shll
mov
cmp
xor
imul
hlt
aas
xor
cmp
push
sbb
enter
mov
sbb
insl
in
cmp
mov
mov
xor
repnz
daa
out
push
pop
add
sbb
fstpt
xor
addl
pop
test
pop
xor
fdivrl
mov
mov
or
push
into
push
jbe
cmp
and
daa
mov
dec
repnz
sti
out
or
push
jl
stos
mov
popa
or
aad
imul
jge
adc
inc
ret
push
fs
js
jno
push
inc
sarl
outsl
adc
outsl
push
decl
cmpsb
mov
test
stos
insb
popf
aas
and
sbb
dec
out
pop
flds
test
jae
mov
jl
enter
imul
add
mov
cmp
movb
ret
insb
scas
xchg
imul
lock
or
cmp
mov
xor
cmp
cmp
rcr
ret
dec
fcompl
and
in
sbb
sub
sub
ja
or
rsqrtps
xor
xchg
xor
les
lds
mov
mov
xchg
mov
data16
test
mov
popf
loopne
cmpsb
cmp
out
inc
mull
jns
cmpsl
or
shrl
aad
jae
push
pop
cld
inc
lahf
xor
mov
dec
dec
mov
das
mov
jecxz
push
idivb
in
daa
jo
lcall
icebp
add
aaa
sbb
repz
fld
fisubl
jl
cli
lcall
push
adc
pop
pop
jne
ficompl
sub
xor
imull
or
sub
xchg
bound
sbb
mov
sahf
lods
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
sub
fcomp
jle
and
jle
in
ret
xor
adc
inc
inc
pop
pop
aaa
or
add
inc
pop
adc
addr16
movsl
sub
fcmovnbe
push
adc
and
sub
daa
jle
ljmp
stc
cmp
mov
mov
xor
sarb
nop
sbb
adc
xchg
ret
fisubrs
cmp
lcall
add
adc
mov
dec
or
sbb
testb
adc
mov
ret
ja
push
mov
mov
lcall
xchg
and
adc
sub
jmp
push
sub
insb
roll
dec
outsl
and
in
jle
cli
int
pop
sub
sbb
cwtl
shrl
pop
mov
fisubs
jb
lret
push
jmp
push
adc
aas
cwtl
add
movsl
in
and
imul
dec
scas
outsl
cli
into
mov
sbb
arpl
xor
cmp
mov
dec
cmp
pop
push
pop
std
stc
xor
xorb
sbb
rorb
xlat
sub
int
pop
and
scas
mov
push
xlat
movsl
xor
or
pusha
adc
outsl
and
adc
cmp
call
imul
insl
ds
jne
lahf
dec
das
daa
enter
fwait
sti
xchg
push
mov
mov
int3
test
inc
xlat
sbb
fs
sarl
sub
aas
push
xchg
xor
stc
iret
inc
pop
ret
and
insl
sub
pop
fwait
push
fdiv
stos
pop
sbb
push
sahf
jp
dec
inc
push
ficompl
cmpl
dec
sbb
sbb
sub
sub
jle
xor
xor
pusha
pusha
rorl
mov
into
mov
push
pushf
cld
sbb
pop
mov
xor
sub
loop
pop
lahf
push
cltd
ret
sub
jo
loop
add
shr
inc
lea
test
mov
xchg
repz
pop
lea
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
add
test
and
inc
mov
pop
cli
inc
clc
aas
mov
or
add
arpl
adc
sub
pop
rorb
pop
in
icebp
sub
pop
dec
int
pusha
fisttpll
es
mov
icebp
or
shl
dec
mov
enter
mov
sbb
cmp
bound
in
pop
insb
repnz
push
jecxz
out
sub
jbe
ror
mov
xchg
xchg
xor
pop
sarl
ljmp
dec
cli
ret
cmp
cmp
xchg
jnp
mov
shlb
aad
test
andl
lahf
jbe
aaa
aaa
daa
add
dec
sahf
subb
add
pop
out
push
push
sub
inc
cli
sub
pop
sub
or
pop
or
nop
stc
inc
shll
jp
into
mov
outsl
cs
cltd
mov
or
mov
fs
pushf
cwtl
aaa
mov
push
inc
mov
ss
xchg
add
icebp
cmc
stc
mov
pushf
aad
roll
xchg
cmp
lret
xorb
pop
icebp
mov
mov
test
jne
or
xor
push
jp
mov
push
dec
jns
ret
popa
pop
mov
cmp
rclb
jb
mov
gs
test
fnstenv
sarb
inc
pop
stc
mov
or
cmp
dec
outsb
pop
shl
mov
fbstp
push
jnp
out
pushf
cmp
lds
out
pop
pop
pushf
daa
and
adc
lret
xlat
je
lods
adc
daa
cld
cwtl
cmc
push
dec
pop
out
sub
mov
arpl
aad
add
lock
push
popf
in
inc
add
lret
cld
push
ror
xchg
movsb
or
scas
mov
outsl
fistl
loopne
sub
cmp
pushf
enter
adc
cltd
cmp
mov
in
push
popa
dec
fnsave
add
push
loop
lcall
xchg
pop
das
mov
xchg
and
dec
in
popa
iret
outsb
push
and
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
cmpl
jle
cmp
sbb
xor
mov
sub
dec
or
pop
and
push
pop
in
stc
pop
subps
and
jmp
aas
call
xchg
add
adc
nop
pop
mov
push
inc
iret
outsb
leave
ds
pop
jmp
into
sub
call
lret
fwait
lret
xchg
cmp
fstps
testl
ficoms
mov
push
jns
aam
insb
dec
inc
mov
jp
add
sbb
aas
arpl
add
fisubrl
jnp
leave
pop
fistpll
insl
andnps
lods
clc
push
inc
mov
pop
mov
ret
in
icebp
pop
pop
dec
les
nop
rcl
stos
jns
lds
out
loope
and
stc
sbb
inc
mov
adc
ret
stos
repnz
lds
push
imul
pop
sbb
inc
mov
push
les
mov
mov
das
or
popf
xchg
dec
scas
mov
ds
in
insl
mov
neg
jns
out
repnz
es
xchg
test
adc
sti
xor
rclb
imul
add
sbb
ficoms
mov
movsb
out
xchg
fcom
add
outsb
xor
movsl
adc
push
xor
andb
es
stc
outsl
daa
repz
mov
imul
jecxz
inc
addr16
addl
aaa
shll
fdivrs
out
aas
cli
sub
dec
or
push
lahf
adc
dec
aaa
enter
shr
fsubrl
pop
mov
hlt
aas
loop
fxch
xchg
pushf
sar
add
xchg
inc
insb
ret
sub
std
pop
push
push
stc
push
test
loop
pop
jno
mov
mov
push
popf
cmpb
add
dec
inc
mov
loope
inc
int
adc
stc
mov
xlat
cmpsb
jp
mov
mov
xlat
pop
push
mov
and
in
mov
rol
pop
add
imul
arpl
jecxz
ffreep
orb
sub
mov
mov
push
push
sbbl
jmp
lds
popa
mov
fisttpll
sarl
jle
cmp
in
xchg
shl
mov
test
iret
rolb
add
cmpl
pop
xchg
xor
or
sbb
add
shrl
in
mov
iret
decl
pop
add
repz
dec
int
ljmp
movsb
sbb
jns
in
psrad
fisubrs
outsb
cmp
xor
cmpb
call
push
andl
jp
pop
sbb
mov
and
out
js
mov
adc
nop
pop
sub
scas
pop
xchg
call
and
inc
in
push
mov
data16
int
push
sub
stos
push
add
xchg
loop
mov
into
lcall
loope
rolb
mov
test
push
stos
cmp
popa
cs
inc
pop
mov
pop
xchg
aam
minps
stos
cwtl
push
add
mov
scas
pop
sub
in
int
or
mov
lods
out
xchg
cmp
outsl
aad
add
in
leave
lods
out
sub
loope
push
stc
mov
xchg
add
cmp
xor
xchg
lea
testl
ja
mov
sbb
inc
cmp
fnop
push
je
mov
inc
jmp
jbe
jg
lds
lahf
adc
nop
or
xor
sbbl
test
fisubrs
js
iret
div
pop
sbb
xchg
sti
in
fadd
mov
ja
je
scas
pusha
mov
sbb
inc
xchg
cmp
inc
repnz
pop
mov
push
inc
jbe
scas
leave
xor
xorb
mov
mov
addr16
scas
xor
xchg
ss
adc
sahf
mov
out
push
xchg
out
and
aam
mov
adc
fdivrs
mov
cld
mov
out
enter
std
int
loope
es
jbe
xchg
xchg
push
test
pop
aam
cs
icebp
fs
xlat
jne
lock
adc
inc
imul
pushf
out
stc
xor
cmp
sbb
movsl
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
cs
jns
loop
jle
jl
jle
les
cmp
push
es
scas
arpl
and
push
ret
out
add
jge
out
fnstsw
iret
out
js
outsl
inc
push
fnstsw
nop
sub
jns
scas
lods
pop
cmp
jp
jns
loope
imul
mov
outsb
lret
negb
and
fs
mov
mov
dec
inc
in
inc
push
int
mov
ret
mov
cmp
adc
jg
mov
cmpsb
gs
push
push
es
push
adc
mov
mov
sarl
call
push
add
repnz
daa
inc
or
fisubl
sub
adc
es
aaa
jl
push
outsl
dec
outsl
and
shl
xchg
and
dec
cmp
sub
testb
imul
loopne
loopne
jbe
and
and
fwait
insl
in
and
xlat
xchg
pop
aas
pushf
and
sbb
rcl
inc
push
or
pushf
xchg
test
mov
push
mov
sbb
inc
lock
pop
xchg
add
cmp
xchg
pop
shll
mov
loop
out
out
xchg
mov
dec
je
add
pop
xor
add
xchg
xorb
sbb
popl
loopne
jge
sub
xorb
xor
sub
xor
inc
out
adc
repz
pop
and
cmp
push
std
addb
insl
add
hlt
jno
jmp
out
pop
inc
xor
jg
test
xchg
jno
pop
shl
pop
scas
xor
or
xchg
cld
stos
scas
repz
inc
je
jg
fadd
sarb
fwait
cmp
mov
push
jae
in
std
or
jo
mov
nop
xchg
sub
mov
xchg
jg
pop
inc
outsb
push
adc
ja
into
jg
cmp
fistpll
cmp
test
pop
jp
xlat
pop
and
cmp
mov
stc
test
mov
lret
js
mov
jmp
inc
push
and
inc
cmpsb
and
add
int3
into
xchg
sub
adc
push
mov
mov
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
inc
push
jg
loopne
jle
jl
jle
sbb
rcrl
jo
orl
adc
cmc
mov
push
mov
in
or
pop
enter
xchg
dec
stc
shll
shrl
hlt
jg
fistpll
les
dec
cs
fmull
test
sub
pop
cmc
fstp
shlb
or
fwait
inc
adc
sbb
test
lock
or
pop
push
jns
sbb
dec
mov
adc
ja
add
sti
mov
das
bnd
in
push
pop
mov
push
mov
mov
and
xchg
push
fwait
inc
mov
out
sbb
or
dec
cmp
je
mov
imul
sbbl
sahf
mov
out
jbe
xlat
mov
mov
add
and
rolb
adc
mov
vprotb
adc
repnz
mov
orb
bound
aam
sbb
or
lds
das
sarb
icebp
inc
inc
push
sbb
ja
stos
jbe
jo
mov
imul
sbb
jge
int
or
scas
mov
gs
inc
dec
cmp
outsb
in
in
xor
inc
in
movsl
mov
gs
pop
shlb
jle
outsl
aaa
xor
dec
jle
stos
sub
dec
dec
push
movsb
jmp
rcrl
jl
mov
lcall
xchg
popa
push
aad
push
add
sti
out
rcrl
sti
inc
cmc
jbe
push
ror
cmp
mov
inc
je
sub
jmp
mov
push
mov
add
jns
and
dec
inc
nop
into
mov
ss
jg
fisttps
loope
neg
jbe
ljmp
outsl
adc
lock
mov
out
sbb
mov
xchg
sbb
xchg
std
jle
bound
ss
xchg
adc
or
mov
scas
jae
in
test
fsts
xor
cmpb
sbb
and
stos
sub
xchg
add
imul
cld
stc
sub
aaa
inc
xchg
scas
mov
xchg
jae
adcb
jp
ja
and
stc
bound
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
jnp
fstpl
out
jle
cmp
jo
cmp
jo
jg
sbb
and
jp
int
cmp
and
or
sar
inc
mov
jnp
sub
test
inc
sbb
mov
insl
inc
mov
adc
jno
les
sbb
test
xchg
call
mov
cmp
mov
hlt
shll
ja
out
mov
dec
mov
dec
dec
aam
mov
xlat
sub
ficoms
div
in
loope
mov
sub
dec
mov
sbb
mov
mov
fcmovne
icebp
imul
mov
xchg
jno
and
pop
sub
ss
sub
cmp
arpl
cmp
adc
add
adc
jne
mov
cmp
cmp
xor
push
pop
sub
stc
addr16
cmp
adc
dec
popf
cmpsl
sbbb
aad
xlat
mov
jl
cwtl
pop
mov
shll
insl
xlat
iret
pusha
pop
popf
fcomip
jo,pn
inc
mov
aaa
mov
pop
and
pop
xchg
sbb
pop
iret
cmp
lahf
pop
dec
fmuls
insl
jbe
sub
mov
cwtl
and
cmp
sahf
mov
ja
add
jnp
xchg
fidivrl
int3
ss
adc
js
lahf
adc
repz
movsl
or
jne
repz
int
adc
lret
xchg
cli
icebp
and
stos
scas
adcl
mov
shlb
ret
dec
pop
imul
sub
out
cmp
test
pop
jns
push
jne
adc
negb
mov
jo
js
or
orb
jns
bound
pusha
mov
mov
and
rcrb
xor
push
dec
test
sbb
shll
fcmovnu
push
jl
mov
mov
fisubrs
ljmp
jmp
repnz
xchg
dec
les
imul
and
stos
sti
inc
xchg
out
adc
xchg
jecxz
ja
in
test
adc
dec
les
es
jae
lcall
jmp
inc
add
test
or
xlat
aaa
inc
add
or
add
jne
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
inc
dec
push
in
jle
cmp
and
xor
mov
or
cmp
lods
clc
in
and
push
pop
add
cli
pusha
lock
xor
dec
aam
xchg
mov
lods
gs
nop
ret
push
inc
cltd
adc
jb
adc
gs
xchg
sub
int
lret
fbld
rolb
cmp
imul
int3
adc
test
cmp
shl
xor
sbb
sti
movsl
pop
cmp
push
push
cmp
movsb
stos
mov
jmp
fiadds
or
xlat
mov
cli
sub
cmp
out
in
jne
adc
sub
xor
mov
inc
mull
add
jp
rorb
cmc
push
les
cli
lods
jg
fldenv
into
int
mov
or
mov
adc
pushf
ds
dec
bound
xor
jmp
push
lcall
add
push
xor
stos
fstpt
and
xor
movsb
ds
aas
cli
add
pop
jge
popl
lret
mov
cmp
je
movsb
test
mov
imul
out
or
lcall
mov
fiadds
pop
out
dec
roll
popa
jp
push
pop
adc
xchg
jle
test
inc
push
orl
pop
mov
adc
in
ja
push
xchg
jae
call
jp
ret
inc
movb
pusha
fistps
cmp
test
and
jae
fildll
outsl
dec
mov
pop
sbb
sbb
lret
scas
mov
out
or
out
sub
xor
pop
nop
addb
out
xchg
leave
pop
int3
mov
push
jle
cmc
pop
push
fldl
add
pop
mov
fsts
add
mov
jnp
ljmp
cmovae
cwtl
stos
pop
pop
mov
pop
int
ds
scas
adc
lret
incb
shlb
int3
in
add
nop
mov
ret
mov
fnstsw
cli
nop
fldl
xor
inc
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
adc
jmp
shr
jle
cmp
dec
cmp
mov
leave
xor
push
add
cmpsl
out
mov
and
push
cmc
sub
lcall
adc
push
cltd
fwait
nop
and
or
ret
jbe
sbb
pusha
ja
mov
sbb
in
imul
inc
sti
and
insb
bound
xchg
mov
jno
inc
cs
int
xlat
insl
or
enter
sub
jns
sbb
push
mov
xchg
inc
lea
or
mov
shrl
out
push
addr16
adc
xchg
cmp
mov
out
es
jns
sbb
cmc
int
mov
cmp
mov
sarl
push
nop
sub
stos
cmp
mov
sub
call
clc
loop
adc
push
loope
test
cmpsb
into
cmp
push
jnp
inc
mov
cmpsl
repz
out
out
enter
pop
outsb
enter
out
adc
xor
and
jne
cmp
add
repz
lahf
ret
not
push
cmp
ds
cltd
lods
subl
pop
pop
scas
clc
jmp
movsl
insl
lea
pop
jo
rcrl
lods
pop
push
cmc
push
jl
mov
xor
int3
add
daa
ret
push
aam
sub
iret
cmc
dec
or
nop
in
outsl
outsl
lret
mov
pop
dec
add
dec
pushf
rorb
sub
jp
jp
lea
andb
mov
aaa
mov
in
fdivl
cld
add
pop
jle
test
icebp
pop
nop
mov
xor
repz
mov
xorl
imul
ret
lahf
call
push
shrb
push
rcrb
dec
mov
cmp
test
push
mov
mov
mov
addr16
ljmp
fists
pop
sbb
dec
mov
sarl
das
adc
adc
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
jg
pop
ret
insl
icebp
or
cmc
and
push
push
sub
xor
xchg
and
test
fwait
mov
pusha
loop
pushl
aas
dec
pushf
add
adcl
mov
cmp
mov
mov
adc
inc
and
push
inc
sub
inc
sbb
aad
and
push
popa
scas
dec
jp
lret
shll
cmc
jae
cwtl
cmp
stc
push
cld
stos
sti
jmp
sub
aas
jno
adc
push
xchg
popa
jle
sub
std
int
fildll
and
sbb
xchg
and
in
aam
inc
inc
sbb
mov
iret
div
pop
lock
lea
out
mov
div
mov
inc
push
add
pushf
inc
daa
dec
cs
data16
push
jbe
add
sarl
adc
callw
dec
outsl
dec
shlb
cli
pop
add
add
push
std
jne
or
int3
fistl
xlat
fidivrs
roll
cli
xchg
cld
movsl
mov
pushf
lret
xor
daa
cld
xor
mov
xchg
xor
mov
xor
jp
rcl
push
xor
or
jp
mov
gs
call
out
call
scas
test
arpl
cmpl
addl
mov
leave
vpsrld
mov
pop
fwait
push
xchg
pop
dec
insl
dec
hlt
add
cmpsb
add
push
push
lcall
sbb
out
fildl
lahf
push
push
into
das
scas
iret
jecxz
mov
mov
test
mov
out
sbb
rolb
lcall
cmp
nop
ljmp
lahf
repnz
push
adc
sarb
inc
cwtl
adc
fists
bound
inc
outsb
popf
outsl
push
hlt
ret
lret
mov
or
lahf
pop
sbb
in
ret
push
out
mov
ret
mov
mov
xchg
sarl
ret
mov
arpl
jp
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
pop
xor
adc
cmp
and
xchg
add
inc
lds
cs
add
add
jb
inc
lret
pop
aam
adc
lock
fsubl
test
xchg
xor
and
mov
ret
fsubp
lock
add
fyl2xp1
and
cmp
add
cli
mov
popa
add
jns
ljmp
mov
dec
mov
xor
std
cli
add
jmp
jecxz
jecxz
dec
sbb
inc
sub
jb
out
addr16
and
inc
and
loopne
addr16
mov
lret
data16
xlat
ffreep
sub
sbb
sbb
push
gs
and
mov
lock
and
arpl
push
adc
or
pop
enter
hlt
stos
adc
iret
inc
inc
bound
pop
jb
outsl
mov
dec
and
jmp
sbb
lret
pop
ss
push
fdivrp
stos
mov
dec
or
jns
lea
adc
data16
cmc
into
cwtl
leave
cwtl
enter
pop
mov
fs
or
adc
sahf
enter
out
jb
stc
inc
sahf
ja
mov
adc
mov
push
ret
lret
mov
cmp
cwtl
mov
or
xor
test
js
mov
test
push
push
add
add
mul
mov
enter
adc
dec
or
mov
pusha
mov
sub
mov
xor
ror
lea
sete
sub
fists
sbb
jp
inc
dec
pop
movsb
push
stc
mov
mov
lods
lds
inc
fcoml
arpl
push
jae
sbb
cmpsb
pop
testb
adc
shlb
jae
lds
mov
cs
cmp
cmp
int
mov
in
add
mov
push
xor
xchg
sar
inc
dec
dec
jle
mov
sub
aam
test
jb
out
fmuls
fcomps
jnp
cltd
pop
add
mov
mov
loop
enter
lahf
mov
mov
or
pop
push
mov
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
jo
mov
bnd
cmp
ret
jle
cld
xor
sub
bound
enter
dec
pusha
je
push
test
sbb
dec
icebp
out
clc
daa
pop
pop
xchg
or
fstl
es
cmp
or
mov
sub
mov
int
pushf
or
jb
fidivl
or
cmp
insl
sbb
aas
pop
repz
scas
push
repz
adc
and
shll
ficomps
fwait
sbb
daa
fmul
dec
xlat
sub
shl
mov
sub
mov
push
ljmp
push
fdivp
pop
arpl
add
jae
adc
mov
xor
test
and
mov
mov
xor
jg
xchg
icebp
mov
add
push
sbb
mov
pop
and
jmp
adc
inc
adc
cmp
mov
loope
stos
sarl
and
inc
into
sub
mov
add
jecxz
pop
fldenv
mov
insl
ds
adc
and
mov
push
js
jge
out
pop
sbb
jbe
stc
insb
mov
lahf
dec
adc
mov
bound
das
push
adc
push
inc
push
cmc
scas
bound
xchg
leave
dec
lds
loope
push
int
scas
fdivrl
sub
fwait
pusha
adc
xchg
imul
mov
shll
decl
cltd
mov
fcompl
inc
in
bound
clc
cmpsb
test
or
cwtl
pop
jbe
roll
xchg
iret
push
pop
repnz
fstpl
mov
fcoms
pop
jecxz
adc
dec
mov
push
inc
repz
sbb
adc
add
xchg
mov
movsb
test
in
mov
cmp
insl
inc
cmp
imul
je
in
popf
pop
mov
mov
test
cli
inc
icebp
jmp
push
imul
test
rcl
dec
bound
add
stos
sub
in
idiv
nop
jl
repz
loop
movsb
mov
mov
aam
cmp
sahf
mov
lahf
add
add
jp
xor
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
add
lock
cmp
fstpt
xchg
cld
xchg
out
jns
mov
sbb
add
lahf
xor
pop
test
out
pushf
fstl
aam
shr
sbb
fisttpl
sub
dec
iret
mov
loope
dec
into
pop
out
push
addr16
std
div
movsb
cmpsb
andl
mov
xchg
negl
inc
adc
cltd
mov
sti
imul
cmp
gs
pushf
or
testl
and
xor
pop
jg
xchg
jmp
subb
adc
test
pop
outsb
jg
lods
fstl
mov
pop
imul
fidivs
sub
jmp
cwtl
cmpsb
jmp
scas
incl
fidivs
vmovaps
setno
roll
jae
mov
adc
orb
xor
add
pop
in
fisubs
push
fistpll
inc
scas
push
mov
lahf
das
mov
ja
sbb
shrl
mov
pop
mov
inc
cli
enter
enter
dec
out
leave
pop
in
ds
iret
add
aaa
fcoml
repz
jb
fcmovb
jmp
cltd
subb
imul
add
out
enter
jl
mov
lds
inc
adcb
loopne
add
and
adc
cmp
js
fwait
and
jp
lock
lret
xchg
call
mov
mov
scas
jecxz
mov
mov
std
and
mov
sahf
shrb
data16
sub
popf
flds
dec
dec
mov
je
icebp
rolb
cmc
lock
push
sbb
jo
jl
cmp
sbb
cmp
call
loope
sub
jo,pt
sbb
outsl
mov
push
push
xchg
jbe
inc
cli
imul
and
inc
or
in
icebp
mov
jp
push
jl
xor
add
sbb
loop
xor
inc
les
jo
clc
out
xor
outsl
xor
sbb
lret
xor
pop
mov
mov
out
sbb
sar
jne
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
les
jle
jl
jle
add
dec
addb
mov
call
test
stc
das
insl
pop
mov
mov
dec
adc
out
imul
popa
das
add
mov
inc
scas
popa
fnstcw
and
mov
and
aad
std
sub
mov
lods
pop
mov
clc
jnp
pop
push
lret
cmp
sub
lock
roll
and
push
mov
dec
push
dec
xchg
inc
imul
xchg
xchg
xchg
or
daa
adc
les
mov
arpl
int
clc
test
data16
lds
dec
xor
push
dec
scas
adc
sarl
out
xlat
fisubs
pop
rclb
cltd
shr
inc
inc
pop
out
add
out
subb
push
fcompl
dec
or
or
xchg
cwtl
std
mov
cmp
mov
dec
sbb
hlt
adc
xchg
out
and
cmp
inc
and
add
fiadds
or
mov
daa
stos
jle
fdivrp
insb
add
xchg
std
insl
outsl
fwait
fwait
sub
jmp
jno
pop
adc
sub
out
cmc
rorb
rcrl
ja
sbb
or
fucomip
divb
fcmovnu
mov
sub
outsb
lods
or
fwait
dec
push
insb
enter
lds
fstpl
cmc
pop
pop
pop
ljmp
shl
push
rcl
test
idivb
mov
dec
bnd
test
cmp
mov
out
call
and
lcall
in
aaa
add
ret
loopne
cmp
xchg
in
cmp
lahf
es
and
xchg
testb
mov
sub
cmp
cmpsb
pop
xor
adc
ds
jecxz
mov
scas
xor
xor
jae
int
insl
into
out
add
outsb
iret
lea
xchg
mov
mov
push
pop
and
roll
lret
loop
mov
jno
inc
aam
mov
cs
or
add
jnp
and
push
xchg
andb
sbb
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
dec
cwtl
jl
jle
cmp
mov
cmpsl
cmp
addr16
push
je
sbb
add
aaa
or
or
sbb
addr16
clc
outsb
jl
leave
test
loope
pop
scas
inc
aaa
jae
shlb
fwait
les
clc
xchg
imul
push
daa
repnz
hlt
pop
sbb
repnz
jae
repz
push
faddl
and
sub
pop
icebp
loopne
and
shll
nop
mov
or
inc
push
add
or
adc
inc
aam
lret
fidivrl
cld
outsl
out
sub
test
test
fadds
repz
popf
jnp
jae
in
cmp
xor
sub
or
rclb
addr16
push
dec
xchg
fs
lcall
xlat
aas
or
pop
and
inc
out
std
jp
or
xchg
dec
xor
xor
inc
mov
mov
mov
mov
jne
jbe
mov
cmp
out
pop
add
push
mov
sbb
xor
aas
cli
pushf
leave
es
int3
xchg
in
and
push
sub
xchg
stos
movsl
hlt
ret
addr16
mov
leave
out
in
dec
rcr
dec
les
iret
leave
fdivl
xorb
push
xchg
xor
lea
push
xor
rcrl
cmp
pop
pop
popf
jo
lods
push
out
inc
scas
xchg
jmp
mov
lods
cmpsl
scas
cwtl
rcl
pop
fistpll
leave
push
add
or
inc
filds
pop
mov
push
or
cld
mov
inc
andb
xor
movsl
push
dec
dec
ds
mov
xor
push
xchg
sbb
nop
lahf
lahf
adc
out
fstpt
sub
xchg
pop
cmc
stc
adc
mov
int3
jp
adc
cmp
dec
testb
jp
out
lods
adc
test
push
scas
in
out
or
ficomps
pop
cmp
addr16
cmp
stos
js
in
cmpsl
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
adc
sti
jle
cmp
lods
outsl
or
cmp
mov
cld
les
leave
or
popa
leave
insb
and
enter
jmp
cmpsb
jbe
orl
or
test
mov
and
ds
loop
sbb
dec
outsb
jbe
ljmp
adc
add
adc
xchg
push
cltd
hlt
push
cld
pop
call
pushf
shrd
push
xlat
inc
jnp
jmp
scas
pop
mov
ficoms
js
es
in
mov
enter
and
add
push
test
lods
xor
and
inc
dec
mov
loop
lcall
lret
call
cmp
inc
push
repnz
stc
stos
push
inc
add
mov
jp
jae
lahf
mov
sbb
push
inc
imul
and
inc
outsl
xchg
xchg
sub
inc
aam
sub
push
test
xor
dec
rclb
les
sub
pop
push
js
mov
or
mov
jp,pt
in
cwtl
sub
sub
mov
insb
int
jp
xchg
sub
test
es
dec
mov
sbb
mov
mov
test
pop
sbb
stos
loope
add
int
frstor
pop
lret
adc
push
in
push
lods
idivb
mov
jns
push
repz
lcall
sbb
stc
pop
dec
dec
jno
xchg
lods
xchg
imul
leave
adc
iret
push
lock
pop
lock
subb
lds
and
stos
sbb
rclb
push
push
pop
lahf
ret
stc
in
in
xchg
stc
xor
pop
rdtsc
fisubl
dec
pop
pop
inc
sbb
jbe
ret
xor
mov
xor
jl
or
adc
std
testl
mov
stc
jmp
stos
inc
or
cmpsl
popf
sub
popa
xor
pusha
jno
mov
xlat
inc
bound
push
dec
lahf
fnstsw
mov
inc
fcomip
loop
js
mov
xchg
push
sahf
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
out
cmp
jle
jl
jle
xchg
mov
lret
sahf
imul
and
insb
imul
lock
mov
aad
xchg
jbe
xchg
lcall
mov
into
push
int
mov
xor
adc
nop
repz
fwait
mov
nop
mov
ss
add
sbb
scas
mov
push
pop
aad
lds
and
imul
or
mov
push
push
xchg
jle
sub
stos
in
mov
adc
mov
add
push
call
push
sbb
es
hlt
movsb
or
cmp
inc
cmpsl
cmpsl
cwtl
cmpb
mov
jne
lods
in
cmp
add
jl
stc
jno
subb
mov
pushf
loope
or
or
xor
jmp
cmp
push
into
das
inc
push
push
js
mov
mov
add
enter
mov
jbe
sub
imul
push
lock
mov
andb
inc
mov
sub
int3
enter
in
jmp
add
imul
mov
cmp
sbb
add
data16
xchg
orb
inc
xchg
dec
push
inc
loopne
cmc
dec
bswap
xchg
mov
xor
lea
xchg
cltd
out
int
mov
xchg
mov
adc
lret
sbb
xor
lahf
popl
dec
push
jae
dec
out
aaa
inc
out
push
xor
mov
lods
xlat
mov
push
lret
test
add
lahf
int3
fs
sbb
repnz
sbb
xchg
jne
jl
cs
mov
inc
inc
rcll
ljmp
gs
fsubr
pop
xchg
add
cmc
jns
mov
cmp
xlat
mull
mov
mov
flds
mov
or
subl
cmp
imulb
inc
movsl
mov
iret
lds
mov
ret
adc
jo
inc
pushf
adc
add
or
icebp
push
int
sbb
aaa
dec
sub
mov
cwtl
and
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
pop
in
mov
xchg
cmp
std
in
jp
fstpt
sbb
mov
out
xchg
shr
mov
in
jge
insb
shlb
and
inc
sbb
mov
or
jne
daa
ja
ss
cmp
adc
mov
int
popf
cmpsb
je
nop
jmp
repz
xor
leave
int3
dec
mov
std
decl
sbb
push
sub
jp
icebp
sub
jo
pop
inc
and
out
loopne
inc
inc
les
arpl
and
pop
scas
psllw
mov
mov
movsb
mov
scas
inc
push
mov
enter
aaa
sar
or
out
nop
xchg
jae
cmc
push
insb
popf
mov
int3
test
push
pop
sub
or
js
xlat
push
lods
fld
daa
leave
push
and
sbb
or
sbb
mov
ds
mov
mov
and
push
imul
xchg
or
pop
popf
mov
pop
and
je
xchg
xor
mov
cmp
test
dec
add
js
shll
xlat
pop
inc
arpl
sbb
push
bound
sub
ss
incb
xor
cld
or
lea
sbb
test
jno
adc
popf
cld
iret
icebp
xchg
pop
shll
add
and
dec
out
jmp
xchg
sub
lock
jns
pop
and
sbb
mulb
mov
test
nop
jae
or
jne
cwtl
pop
xchg
add
pop
cltd
mov
aad
sub
mov
xchg
addr16
and
mov
out
adcb
fiaddl
jge
dec
les
push
mov
push
jl
mov
jns
or
orb
mov
dec
inc
aaa
shlb
mov
fsubs
lock
aam
ljmp
add
mov
out
jae
push
movsl
or
dec
mov
jl
xor
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcll
cmpb
jl
jle
xchg
mov
aad
pusha
push
sbb
negb
push
cmpsl
test
jmp
sbb
and
dec
fcmovne
pushf
arpl
pusha
inc
jo
int3
test
stos
pop
lods
and
sub
mov
xor
daa
lock
push
jo
scas
popa
aam
push
cwtl
inc
dec
call
mov
shll
ss
enter
inc
hlt
xchg
shl
aaa
lret
fsubrl
adc
add
push
mov
and
gs
imul
jbe
stos
stos
fistl
inc
clc
adc
rorb
repz
mov
ret
adc
and
mov
in
inc
xchg
cmpsb
xor
lds
push
andb
push
sub
lret
sub
add
clc
xor
cwtl
jno
outsb
sbb
jno
add
sti
or
mov
jp
addl
mov
shll
imul
sti
sahf
das
jp
pop
stos
dec
jae
lock
ret
std
jns
sarb
dec
aas
push
test
daa
xchg
cli
pop
jp
adc
mov
dec
pop
sub
mov
out
insb
mov
sbb
lock
pop
ret
push
xlat
mov
out
cwtl
xor
insl
sbb
call
add
aaa
jle
sub
cs
insl
xlat
pop
mov
sub
cs
outsl
pop
push
negb
ror
adc
movsl
mov
mov
loop
popf
pop
inc
push
or
sub
adc
pop
insb
ret
push
lret
and
dec
sub
inc
subb
push
push
les
and
dec
mov
mov
xchg
movsl
mov
aad
cmc
xchg
xchg
test
aas
inc
mov
jo
addr16
fwait
adc
dec
pop
dec
icebp
add
pusha
stc
pop
jg
jo
mov
lock
out
jge
clc
je
lock
push
inc
jns
icebp
sub
jnp
xor
push
push
fdivs
push
scas
stc
loope
pop
dec
cld
in
jae
imul
incl
mov
jae
push
push
cmpsb
hlt
pop
xchg
jne
sbb
popf
jne
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
jno
fiadds
jle
out
rorb
movsb
mov
test
cmp
inc
xchg
dec
add
lds
int3
in
push
jnp
push
mov
sub
mov
mov
jmp
scas
call
xor
fcom
sar
push
jae
shll
in
xchg
cmp
negl
push
or
ret
mov
sahf
inc
mov
xchg
adc
mov
mov
loopne
xor
loope
mov
sub
bound
inc
jg
ljmp
mov
mov
ss
sub
xor
add
and
push
mov
push
or
add
testb
sub
xchg
lods
test
aad
fstl
scas
je
sti
adc
loop
mov
pop
ljmp
je
dec
add
add
popa
push
arpl
imul
xchg
push
add
in
xchg
data16
scas
dec
lods
or
insl
mov
sub
cmpsl
xchg
or
arpl
andb
test
cvtdq2ps
rcrb
out
add
movsb
sub
pop
ret
hlt
sahf
enter
cmpsl
lahf
inc
lock
js
cmpsb
enter
push
loopne
ret
xlat
ljmp
insl
jg
hlt
mov
sbb
scas
pop
sahf
and
popa
jl
push
sub
sbb
or
inc
cmc
or
lock
arpl
adc
out
sahf
in
rcr
cpuid
inc
nop
mov
test
mov
notl
jmp
xchg
stos
bts
aas
push
daa
shlb
iret
frstpm(287
push
xchg
int3
or
mov
pusha
scas
cmp
cmp
sbb
in
sbb
cmp
inc
outsb
sub
cli
lret
ficompl
stc
add
pop
mov
push
scas
pop
das
lahf
cwtl
std
sbbl
push
and
imul
test
add
adc
jnp
mov
sar
pushf
dec
shr
cmp
int
cli
mov
adc
aam
shrb
adc
shr
add
add
mov
cwtl
mov
mov
cmp
mov
cmp
jb
daa
les
ljmp
push
iret
or
xor
pusha
es
xchg
adc
cwtl
inc
hlt
daa
add
mov
sbb
add
lahf
xor
fxch
inc
fldln2
data16
xchg
stos
dec
les
mov
lods
mov
jge
mov
lret
sahf
xor
iret
xor
add
or
sbb
pop
loope
stc
xor
adcb
pusha
popa
rolb
mov
jecxz
and
mov
sbb
dec
xor
in
add
inc
mov
dec
jp
dec
lahf
and
roll
fbstp
xchg
loopne
mov
in
push
js
sbb
outsl
add
inc
push
pushf
mov
dec
cmc
outsl
out
jl
mov
mov
add
xlat
mov
jne
cmpsb
adc
fnstcw
insb
testb
jns
mov
dec
push
pushf
outsl
iret
jbe
jns
stc
sub
push
mov
ds
aas
cmp
movsb
lcall
cmp
push
push
mov
sub
mov
cs
mov
push
xchg
loope
stc
jp
push
xor
gs
data16
inc
push
push
jg
add
mov
bswap
push
cwtl
fdivrp
mov
into
loopne
pop
ret
pop
cmc
daa
xor
dec
mov
inc
jecxz
sbb
rorl
dec
sbb
mov
xchg
mov
and
push
dec
insl
sub
cmp
std
mov
inc
leave
mov
push
or
push
mov
and
jecxz
sub
das
xor
jge
imul
jno
jp
xchg
sbbl
jecxz
inc
mov
cld
xchg
jae
hlt
dec
mov
fisttps
jb
jo
add
pop
stos
and
add
or
stc
jecxz
add
sub
jne
adc
data16
sub
mov
pop
sub
insl
scas
test
fcoml
cmp
in
mov
xor
cmpsb
out
aaa
cmp
cmp
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
cmp
cmp
jle
cmp
test
cmp
push
mov
data16
ds
cmp
xor
mov
outsb
pop
movl
mov
aaa
imul
out
mov
mov
ret
pop
mov
andl
xchg
dec
ljmp
dec
cmp
fcmovnb
mov
fdivr
pop
test
mov
repz
int
adc
mov
rolb
mov
jno
outsl
fildll
mov
mov
jb
pop
insb
je
xchg
jmp
lods
ljmp
loop
roll
shlb
mov
clc
and
pushl
push
cmp
jl
testl
jnp
pop
pop
lock
push
test
pusha
lret
mov
dec
mov
insb
cmpsb
cmp
xor
je
jmp
imul
pushf
cmp
cli
xor
stos
push
dec
mov
fcomp
cmc
fistpl
inc
sbb
push
sbb
aad
cmp
xor
dec
fsts
jns,pn
add
or
xchg
hlt
mov
in
leave
scas
cmp
cmpsb
mov
insb
xor
aaa
dec
mov
add
repnz
icebp
in
inc
mov
ret
repz
and
sub
mov
aam
sub
pop
aad
push
je
sub
mov
pusha
cmpsl
lds
xor
imul
les
inc
imul
push
pop
push
mov
xchg
ljmp
push
mov
sbb
lret
mov
mov
or
sahf
pop
scas
insl
aas
pop
je
lret
mov
mov
testl
js
pop
add
dec
stos
inc
pop
sbb
aas
loop
imul
mov
cmp
adc
mov
lods
es
jecxz
sbb
mov
cmp
aas
imul
aas
mov
push
movsb
ja
cmp
movsl
cs
dec
xchg
and
hlt
mov
mov
inc
enter
push
test
push
lea
movsb
test
test
push
sub
xchg
jmp
push
std
dec
sahf
push
push
add
mov
sub
mov
cmp
inc
cmp
mov
in
loop
push
mov
cmpsl
int
jmp
and
inc
add
push
pop
popa
jb
clc
dec
bound
sahf
add
add
ds
addb
pusha
xor
in
repnz
adc
hlt
cmp
adc
mov
sti
adc
pushf
mov
and
sub
frstor
or
cld
dec
dec
insb
iret
add
jmp
dec
jnp
dec
adc
and
mov
cmpsb
and
lea
add
mov
pop
orb
adc
mov
fidivs
push
lds
xchg
xor
jp
mov
enter
and
hlt
mov
inc
add
fisttps
and
mov
push
pop
or
dec
sbb
pop
dec
sbb
jae
add
scas
sbb
xchg
xchg
loope
nop
shll
outsb
mov
mov
add
addl
jle
inc
imul
arpl
sbb
xchg
in
popa
daa
mov
lods
fidivrs
add
les
movsl
mov
aaa
scas
xchg
in
fdivs
scas
pop
icebp
pop
add
push
xor
or
dec
dec
in
imul
mov
inc
mov
push
mov
test
sarl
ljmp
cmp
movsl
cwtl
jecxz
repz
incb
mov
pop
mov
sub
stos
and
add
sbb
or
adcb
push
mov
sub
mov
sahf
ss
mov
push
sub
in
or
inc
inc
js
lds
adc
adc
leave
sub
mov
mov
xchg
pop
sub
out
data16
push
add
call
lods
pop
dec
mov
pop
iret
divl
mov
mov
mov
js
insl
cmp
mov
push
mov
fistps
fwait
add
sbb
push
dec
pop
lret
cmpsl
call
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
jb
jnp
testb
jle
mov
jmp
pminsw
mov
in
adcl
xchg
mov
push
xor
sbb
and
inc
sub
dec
lock
repz
mov
push
or
push
pop
outsb
push
das
adc
out
icebp
ret
mov
movb
test
mov
leave
jecxz
sub
jb
shlb
in
push
mov
mov
stos
dec
inc
fisubrs
pop
loopne
jb
push
ss
pop
std
add
add
sbb
and
jns
xorb
sub
add
lret
push
push
clc
xchg
data16
fwait
jne
inc
rclb
sti
das
scas
cmc
add
lss
pop
shl
dec
or
mov
shrb
jl
into
out
xchg
jecxz
pop
xchg
inc
xor
or
stos
dec
push
dec
push
inc
into
xchg
adc
sub
rcrb
aad
rcrb
add
mov
lods
jge
jg
dec
and
push
aaa
adc
sub
xchg
mov
lods
popa
cmpb
orl
lea
adcl
add
pop
and
mov
out
adc
mov
daa
popa
std
scas
and
xchg
push
and
sahf
jbe
loopne
rcr
pop
pop
jp
and
adc
sbb
xchg
popf
es
jno
mov
sbb
cmpsl
dec
xor
dec
inc
xchg
sub
dec
dec
jnp
adc
movsl
and
push
cmpsb
std
into
cwtl
xor
mov
out
js
cs
int
dec
sahf
sub
ja
and
jns
in
ret
cmp
pextrw
add
xchg
xor
arpl
push
or
mov
out
xchg
pop
imul
insb
test
jle
lods
scas
out
mov
push
cltd
ljmp
adc
or
jp
mov
fstl
lcall
mov
ret
roll
aaa
dec
pop
test
adc
jl
fistl
fisttpl
add
add
stos
mov
pop
insl
bound
xchg
jle
cmp
mov
ret
or
pop
rclb
mov
cmp
xchg
or
cld
jb
es
pop
out
xchg
out
mov
add
pop
mov
xchg
lods
mov
dec
dec
xchg
pop
inc
call
fadds
push
pusha
addr16
adc
pop
push
mov
lea
xor
sub
fidivs
outsb
jbe
leave
into
scas
ficoms
fisttpll
daa
icebp
or
mull
scas
push
or
push
mov
lret
movl
cmp
out
mov
add
lret
dec
scas
and
stc
into
cmp
mov
imul
add
mov
fst
popa
or
dec
pop
xchg
shlb
adc
cmpb
scas
outsl
cli
out
repnz
adc
fisubrs
data16
lock
jno
sub
push
in
mov
inc
dec
add
xchg
or
jp
pop
loop
in
pop
xor
pop
loopne
sbb
push
and
and
xor
test
out
push
pop
ss
inc
enter
stc
addr16
mov
loopne
movsl
daa
rorb
scas
sti
sub
inc
mov
stos
adc
daa
cmp
jo
dec
xchg
das
jne
pop
stc
push
test
jbe
jl
leave
mov
out
scas
xor
mov
dec
push
shlb
sbb
ret
aaa
xor
jb
dec
and
psubq
xor
je
inc
xchg
lcall
dec
inc
in
popf
mov
cmp
leave
xor
loopne
out
jl
mov
in
lahf
lock
xchg
jge
dec
mov
push
test
out
mov
enter
inc
push
pop
push
jl
int3
fisubl
jae
ret
add
pusha
sbb
or
jo
and
imul
imul
pop
enter
leave
out
push
xchg
hlt
xchg
pusha
mov
jns
jge
xor
addb
ss
jg
dec
push
test
mov
out
push
add
repnz
popf
in
add
inc
les
jmp
mov
int3
mov
sbbb
sub
or
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
in
pop
jp
jle
jl,pt
jle
pop
cmp
btsl
pop
and
in
add
xchg
adc
jl
imul
imul
cli
or
mov
cmp
aaa
ljmp
xchg
jg
bnd
mov
shl
pop
mov
cmp
fidivrs
cwtl
ret
pushf
push
stos
ja
ret
sub
push
std
push
repnz
imul
jmp
test
or
jne
push
push
into
fsts
fsts
cmpsl
lahf
scas
adcb
lahf
jl
jp
inc
cmpsl
xchg
pushf
dec
push
imul
mov
adc
xor
pop
inc
movsl
push
out
sub
sbb
rdpmc
fdivrs
mov
mov
xchg
and
jnp
loope
mov
jecxz
and
lea
push
and
pop
test
stos
mov
jbe
int3
repz
std
jge
shrb
ja
addb
cmc
stc
mov
push
push
decl
pusha
add
pop
sbb
stc
adc
push
sbb
mov
repnz
scas
xchg
jmp
mov
xchg
sbb
mov
mov
xor
or
lahf
mov
inc
sbb
push
out
lahf
inc
inc
pop
aam
out
stos
cmp
nop
xor
and
fsubs
enter
loope
sti
lods
xor
ja
es
mov
pop
xor
enter
stos
xchg
jb
movsl
pop
out
test
out
leave
repz
jbe
jl
push
lahf
mov
dec
jae
lock
dec
cmpsb
lods
loopne
into
mov
sti
fnstcw
lock
push
pop
daa
pop
les
out
xchg
mov
subl
sbb
cmp
mov
jecxz
or
xlat
data16
inc
add
jl
adc
inc
scas
jo
push
xor
jnp
xor
roll
mov
test
xchg
sub
or
in
in
push
or
add
push
sub
scas
jle
mov
out
mov
addl
add
add
add
adc
movl
add
orl
imul
movsb
iret
jle
jl,pt
jle
xor
mov
shlb
or
in
xor
pop
fisubrl
lea
ret
enter
ds
xor
adc
push
push
pushf
bound
stos
and
aaa
xor
xor
cmpsb
push
call
in
jae
add
lret
test
test
test
jp
cmp
or
jecxz
cmp
sub
jno
loope
inc
adc
adc
mov
mov
sub
popf
inc
mov
lret
movsl
cmpsb
ret
cld
loope
jmp
popa
roll
or
dec
movsb
and
mov
jg
ljmp
cmp
mov
xchg
pop
mov
test
stc
mov
lods
mov
cmpsl
xchg
mov
mov
sbb
imul
cmp
sti
sar
xchg
push
shlb
call
sbb
cli
and
jp
rcrb
lods
jo
rorl
ret
or
lods
popf
xchg
shrb
jae
lret
sahf
mov
or
mov
nop
inc
cmp
dec
pop
out
pop
fs
mov
inc
test
push
insl
pop
inc
sti
je
mov
jnp
xchg
test
cmpsl
aam
mov
inc
mov
repz
push
hlt
mov
addr16
sub
cmp
sbb
aaa
pop
pop
xchg
sub
jg
lcall
es
sub
nop
scas
push
and
sbb
dec
and
mov
sbb
adc
xor
movaps
cmp
and
push
xlat
mov
xchg
in
outsb
pop
out
movsl
dec
in
jb
jl
dec
jb
ds
cmp
cltd
pop
int
adc
dec
add
mov
sub
mov
ds
je
jb
inc
ja
xchg
jmp
mov
dec
or
mov
or
daa
jecxz
imul
sbb
arpl
inc
cmp
out
mov
push
in
dec
int
mov
sbb
rcr
out
fwait
push
cmpl
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
pop
or
inc
xchg
or
cld
push
dec
push
mov
pushf
insl
mov
movsl
dec
mov
mov
xchg
add
mov
sbb
out
add
dec
inc
int3
loopne
sbb
cwtl
pop
mov
and
repnz
daa
inc
adc
jg
push
repz
test
shlb
jmp
lahf
sub
inc
fmul
inc
add
push
mov
fisubrs
or
pop
mov
xor
push
push
or
lcall
imul
push
push
pop
in
fistpl
and
lea
cmpsl
mov
inc
mov
psubusw
mov
and
pop
xchg
inc
imul
ss
bound
xchg
int3
js
les
and
call
adc
aas
pop
xor
push
xchg
pop
push
dec
ja
adc
sbb
inc
popf
cs
js
mov
jecxz
lret
jmp
mov
xor
or
sub
pop
nop
mov
int3
rol
lods
push
test
or
lds
test
nop
pushf
sbb
sub
xor
xchg
pusha
lods
push
in
jno
push
pop
mov
bound
icebp
shll
out
clc
ret
sub
xchg
mov
bound
xor
mov
xchg
fisttpl
and
jge
jns
pop
pop
daa
lock
lea
popa
pop
sbb
shl
mov
jbe
cwtl
xor
xor
xor
inc
loop
mov
adc
inc
xchg
ror
pop
movsb
mov
add
or
lret
cmp
sar
enter
fstl
xlat
cmp
xchg
xor
popf
outsl
mov
ret
and
ds
outsl
push
or
stos
dec
in
test
xchg
daa
cltd
shlb
cwtl
add
jle
cltd
push
mov
jne
dec
xor
or
and
nop
into
adc
cmp
adc
pop
mov
xchg
push
shlb
jnp
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
negl
imul
jle
jg
jle
lret
mov
add
push
jmp
fnstenv
adc
loop
icebp
xchg
xor
mov
out
lds
test
enter
lods
lret
mov
scas
imul
je
aaa
mov
push
lret
aaa
mov
loope
mov
push
data16
imul
jg
inc
sbb
jae
push
lods
add
push
arpl
pusha
cld
call
pop
pop
jg
lret
daa
fmul
sbb
nop
movsl
push
jge
mov
fsubl
or
or
sahf
sbb
mov
addr16
dec
inc
add
jb
movsb
mov
data16
push
adc
mov
into
sti
negb
mov
and
and
ja
in
mov
addr16
push
imul
jmp
add
mov
dec
popf
jge
aas
shlb
fisubs
mov
mov
xor
inc
mov
movsb
pushf
inc
ror
cmc
push
pushf
lods
mov
rcrl
clc
dec
fsub
loopne
sbb
sub
lret
out
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
and
pop
popf
jle
adc
jle
jb
dec
sub
inc
outsl
gs
jg
stos
cmp
imul
enter
cltd
fstpt
jmp
pushf
or
imulb
test
push
sub
dec
mov
scas
aam
ja
adc
mov
loope
cmpsl
xchg
dec
inc
xchg
dec
jb
push
push
orl
pop
cmp
jns
insb
cld
out
xchg
in
lods
add
stos
iret
cmpsl
fwait
jge
adc
sbb
add
aad
aaa
shr
sahf
jno
int
stc
sbb
or
cld
and
cmp
adc
sub
sbb
je
ffree
mov
lds
popaw
inc
or
and
and
roll
jmp
jmp
add
sub
jae
dec
jge
pop
ret
or
mov
mov
jo
mov
push
jecxz
push
insb
frstor
inc
mov
repz
inc
out
sbb
adc
into
xchg
xchg
bound
jl
shlb
push
mov
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
xor
lcall
hlt
pop
jno
in
rcrb
das
clc
icebp
push
shlb
push
or
bound
loopne
rep
push
xchg
mov
cs
addr16
fiaddl
push
mov
dec
ljmp
xchg
mov
jg
jo
pop
xor
jns
into
cs
pop
imul
push
cmp
adc
xchg
add
push
mov
xchg
popa
nop
mov
push
add
dec
xchg
dec
shr
shlb
or
sbb
jge
push
sub
inc
lret
out
xchg
pusha
std
mov
test
stos
mov
cltd
repnz
pop
mov
shll
mov
mov
adc
mov
es
das
inc
out
mov
jo
mov
cld
mov
mov
ja,pt
pushf
push
ficoml
scas
mov
sbb
xlat
test
cmp
test
movsl
sbb
add
into
insl
mov
fwait
enter
push
and
mov
shrb
jmp
movsl
xchg
scas
scas
out
dec
jbe
nop
lahf
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
mov
lahf
push
push
cwtl
jle
adc
jle
fisubrs
imul
lock
xchg
in
push
sbb
xor
mov
push
enter
bound
jp
sub
sbb
mov
mov
sub
test
xchg
bnd
bnd
inc
sbb
push
out
cld
push
js
xchg
xchg
push
lods
je
repnz
jbe
daa
cmp
call
cwtl
mov
adc
leave
es
sti
js
cmp
push
mov
push
jmp
addr16
popa
int
jne
enter
ret
in
and
mov
mov
mov
bound
pop
push
ficoms
scas
sub
fidivs
cmp
rclb
imulb
daa
es
fdivp
insl
sbb
mov
and
inc
add
or
xor
inc
mov
mov
ret
incb
xchg
stc
in
fisubrl
jecxz
fadds
add
aas
fs
into
mov
or
shr
lea
pop
je
pop
xchg
shrb
or
imul
add
movb
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jge
jb
cltd
jle
adc
jle
fsts
stos
mov
fisttps
repz
adc
in
push
cmp
out
push
fwait
inc
fildl
jg
mov
inc
jo
fadd
jb
mov
sub
jae
inc
pop
outsb
sbb
out
sub
imul
pop
hlt
xchg
je
jge
jecxz
iret
imul
rolb
cld
lret
fbld
mov
cmp
movsb
add
sbb
or
es
daa
leave
mov
push
repnz
push
or
ss
jnp
and
daa
movaps
bound
pop
sbb
aam
rcr
mov
cmpsl
cmc
std
and
or
jmp
lods
lcall
ja
imul
mov
iret
adc
cs
push
sub
test
mov
sub
mov
xchg
xor
sbb
cltd
jns
push
movsb
fcoms
icebp
xlat
mov
adc
divl
dec
add
popa
sbb
inc
add
in
and
ljmp
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
clc
imull
lods
mov
fs
scas
and
mov
int3
mov
mov
dec
lds
lods
std
test
cli
cs
xchg
jecxz
mov
jg
dec
fsubs
xor
xchg
leave
es
loop
xor
scas
and
arpl
test
jae
cwtl
repz
iret
adc
inc
cmp
xlat
out
fsubrs
lahf
shll
loope
sub
cltd
lds
sub
gs
lret
bound
fisubrs
jg
nop
scas
adc
push
jmp
or
inc
ds
pop
push
lods
and
push
int
fsubrp
out
xchg
jne,pt
fsubl
push
jmp
aas
xor
push
add
and
push
rcrl
mov
je
jnp
add
popa
cmpsb
lock
jnp
sbb
pop
sti
jo
add
inc
push
sub
inc
das
jge
and
and
jns
jbe
mov
mov
xchg
cltd
imul
fcmovb
mov
jmp
in
clc
ret
iret
repnz
mov
jge
loop
je
cwtl
movsl
dec
or
lods
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jbe
xor
cmpsl
jle
adc
jle
jno
in
push
adc
lods
fs
mov
xor
mov
adc
sbb
xor
pusha
pop
dec
inc
push
fisttpl
enter
inc
and
xor
mov
sbbb
xchg
test
das
sub
pop
or
loopne
data16
repnz
push
xchg
add
push
add
sub
dec
mov
mov
inc
pop
aaa
fldenv
movsl
sbb
out
aaa
loop
rclb
addb
rcrb
test
sub
jmp
repz
pop
and
xor
test
adc
outsb
rcr
in
push
sub
decb
push
rol
in
addr16
call
cmp
notb
lds
cmp
cmp
lea
push
adc
push
jno
lea
cwtl
sub
mov
mov
adc
push
pop
adcb
in
dec
movsb
imul
ss
mov
popa
xchg
repnz
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
inc
xchg
jle
jp
push
bound
lds
xor
test
sub
fwait
sahf
shll
mov
mov
insb
xchg
push
jle
add
push
pop
push
lcall
add
xchg
push
shlb
mov
out
fwait
xlat
xchg
mov
outsl
or
dec
xor
push
inc
je
push
add
lret
cmc
enter
pop
sbb
dec
lea
xchg
dec
movsb
fists
ret
jp
popf
cmc
mov
mov
and
aas
sbbb
ljmp
add
stos
push
in
sub
inc
mov
xchg
sbb
rolb
sbb
inc
jne
sti
cmpb
push
sahf
or
pusha
mov
mov
popa
cltd
mov
push
jge
mov
popf
pop
xor
movsb
xchg
jp
std
inc
jne
xchg
dec
aaa
out
inc
sarb
jb
sahf
sub
xor
jno
sbb
mov
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
pop
sbbb
jle
add
pop
es
ljmp
or
add
cltd
les
xchg
out
inc
add
mov
imul
xor
gs
sub
cmp
mov
push
and
mov
test
jecxz
push
xchg
inc
fidivrl
pop
sub
mov
jno
aad
add
cld
aas
testb
adc
cs
or
xor
jge
mov
out
pop
sub
jns
adc
push
sub
push
mov
inc
icebp
test
test
add
mov
cs
xor
adc
and
mov
fisttpll
jecxz
pushf
cs
dec
in
stos
mov
lret
sbb
lock
or
hlt
adc
aam
rcr
or
arpl
inc
shlb
push
dec
dec
les
push
and
dec
jl
lods
cmc
jl
out
sub
and
test
mov
clc
sub
out
fsubrp
dec
dec
mov
in
popf
jg
add
mov
mov
adc
shlb
jne
mov
insb
push
dec
mov
or
aas
jnp
arpl
fwait
xor
inc
into
sbb
cli
cltd
inc
cmp
stos
sbb
sub
lods
dec
std
aas
add
jg
popf
cmc
mov
nop
ds
movl
pop
inc
sub
decb
jecxz
divb
or
jl
fmull
adc
inc
push
jns
jl
add
into
insb
xchg
sub
leave
xchg
loope
test
inc
mov
add
out
je
and
cmp
lds
sbbb
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
cwtl
inc
add
add
inc
mov
fsub
mov
mov
mov
xor
jbe
ret
jge
cwtl
imul
repnz
in
dec
jnp
mov
stos
ret
and
jg
stos
sub
ror
inc
flds
int3
push
test
jge
jbe
loop
xchg
pop
mov
lret
or
pop
adc
sbb
ja
mov
daa
xchg
add
jmp
cld
mov
das
lahf
mov
into
cmp
jns
xchg
mov
jecxz
pop
inc
cmp
dec
dec
dec
nop
scas
ficompl
pop
and
add
movsl
and
dec
les
cmp
xor
or
fsqrt
or
add
lods
mov
sub
fstpt
inc
test
lock
push
gs
pop
fwait
lcall
lret
stc
stos
out
mov
xlat
push
leave
out
push
loop
pop
adc
mov
in
ss
xchg
adc
sub
enter
stos
mov
xor
out
jle
pop
cmp
push
pusha
jno
pop
cs
and
sti
sub
jno
ss
sarl
push
mov
cmpsl
mov
fisubrl
push
push
cwtl
mov
in
fisubl
dec
insl
pop
out
cmp
push
push
lcall
in
xchg
or
es
xor
decl
mov
push
sub
or
sbb
enter
out
xchg
push
cs
imul
jbe
jge
ljmp
leave
leave
lret
cmp
add
sub
mov
jnp
test
jne
sbb
stc
loop
xchg
subb
cmp
mov
lahf
dec
adc
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
sbb
jle
jge
jle
mov
lods
in
lahf
xchg
push
nop
xor
sbb
or
xchg
movsl
jbe
pop
dec
inc
xchg
test
test
loop
lock
jb
jle
mov
push
mov
push
nop
add
out
dec
addr16
pop
inc
stos
scas
ficoml
ds
cld
gs
mov
rorb
or
dec
and
adc
mov
icebp
or
lahf
dec
mov
sub
cwtl
ljmp
adc
jecxz
xchg
outsb
and
add
xchg
test
fsubr
stos
or
outsb
adc
mov
sub
push
jb
and
mov
mov
cmp
rorl
sub
inc
daa
out
and
or
cmp
nop
jmp
cmp
dec
inc
cmp
inc
add
test
rcll
cltd
xchg
repz
fnstcw
mov
jg
or
iret
xor
test
adc
popa
jb
mov
ljmp
mov
int3
pop
daa
shrl
adc
adc
js
lods
xor
dec
enter
inc
popf
jno
pop
cmpsl
jnp
test
shrl
add
mov
cs
out
or
add
cmpsb
orl
or
push
xchg
jne
sub
xor
xchg
popa
jl
or
pusha
push
shl
out
imul
push
mov
sets
lahf
push
idivl
fs
aaa
hlt
hlt
das
jne
sub
push
popf
xor
xor
shrb
mov
sub
mov
push
mov
xchg
jge
inc
hlt
jno
pop
stos
shll
jge
call
sbb
mov
xchg
mov
movsl
rorl
jno
sbb
imul
jp
pop
imul
mov
repnz
lock
pop
add
cmp
push
jle
push
mov
push
lret
cltd
push
sbb
aam
pop
arpl
fwait
xchg
ficoml
data16
in
or
ds
popf
outsb
repnz
rcl
test
dec
and
in
mov
push
ljmp
and
std
add
pop
mov
into
xor
dec
aas
pop
rcl
cmpsb
sbb
test
sub
out
test
outsb
cmp
arpl
xchg
mov
xchg
rol
add
je
test
in
add
fisttpll
push
sbb
lret
xor
and
hlt
mov
jae
pop
jecxz
rcll
mov
fidivrl
imul
pop
inc
in
dec
mov
subb
xchg
xchg
jbe
push
popa
add
mov
imul
cmp
iret
cmp
jl
mov
ljmp
test
inc
add
add
add
leave
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
aam
jle
jl
jle
xchg
gs
dec
popf
xchg
cld
ret
aaa
das
scas
cmp
ss
test
daa
sahf
xchg
and
mov
cli
push
push
lds
enter
into
mov
imul
out
inc
cmpsl
jne
in
in
sub
inc
adc
or
pop
xchg
or
and
cmp
test
xor
sub
jae
push
push
pop
ror
or
jbe
outsl
mov
pop
pop
subb
mov
andl
inc
mov
pop
jno
jo
insb
addr16
or
loopne
pop
jle
push
push
or
mov
stc
cmp
ss
push
lods
mov
enter
adc
xlat
and
pop
mov
sbb
sarb
test
cld
lea
lods
fnstcw
xlat
dec
cld
mov
mov
in
movsl
repnz
je
repnz
mov
sub
addr16
and
cltd
jp
bound
out
and
push
into
push
jbe
mov
std
nop
sbbl
dec
rorl
and
cld
jbe
ret
cmp
bound
cmp
out
in
mov
lods
sub
icebp
mov
jle
cmp
push
adc
jle
jae
dec
push
jle
add
popl
add
push
clc
xor
or
pop
rcll
int3
cmp
daa
in
inc
mov
scas
inc
repz
mov
xchg
or
inc
mov
ret
adc
addr16
lret
or
movsb
mov
test
out
stos
cmpsb
dec
pop
mov
cmp
push
sub
subl
xor
mov
adc
jmp
insb
xchg
in
lock
jge
fcoms
fdivrs
scas
call
lock
jecxz
adc
das
mov
xchg
fstpt
mov
mov
loop
add
jo
sub
pop
nop
jb
push
stc
mov
fildll
mov
sbb
enter
adc
mov
int
dec
arpl
mov
or
push
mov
loope
sub
js
ss
or
stos
stc
xchg
sbb
or
and
in
adc
or
sbb
pop
in
js
sub
scas
lds
sti
mov
cmp
ficomps
xchg
adc
push
mov
inc
jno,pn
fdivl
inc
testl
outsl
in
js
inc
dec
dec
mov
jns
test
pop
pop
stc
cwtl
in
ret
insl
sbb
mov
jp
xchg
cs
adc
mov
adc
lods
mov
aaa
mov
ret
push
push
js
loope
in
ljmp
outsl
sub
dec
ss
loope
dec
in
popf
mov
lahf
mov
add
ret
stc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
stos
jle
jl
jle
inc
pusha
push
pop
cmp
adc
pop
jecxz
lea
inc
and
nop
sub
cs
lods
pop
mul
jns
mov
sub
repnz
cmpsb
pop
xchg
je
add
inc
xchg
rorl
in
test
jns
jnp
pop
repz
fnsave
stc
and
push
pop
das
icebp
nop
sub
inc
into
add
add
sahf
adc
loope
call
dec
stos
and
dec
ss
ret
leave
rolb
insb
xchg
mov
cmp
pop
repnz
xchg
inc
add
jle
lea
or
mov
mov
ret
mov
aad
add
out
repz
repz
xchg
test
push
cmp
and
call
iret
xor
lretw
cmp
pop
sar
enter
and
popf
aam
xchg
repz
push
jo
mov
dec
xchg
xchg
mov
sbb
test
jg
sbb
xor
mov
shll
jnp
jp
bound
pop
repnz
inc
push
outsl
jno
jb
repnz
mov
mov
jp
lods
in
cmc
push
push
sub
and
bound
fcoms
push
mov
mov
bound
lea
sbb
cmp
int
jp
add
mov
mov
stc
cmpl
js
jno
mov
xor
ja
lret
div
aaa
test
test
mov
sahf
pop
fisubrs
xor
push
jo
subb
mov
xor
movsb
push
test
mov
fsubl
push
repnz
jne
faddl
repnz
mov
iret
aaa
inc
jo
loope
test
inc
cmpsl
sub
dec
pop
aaa
mov
stos
or
dec
push
lahf
dec
addl
in
add
inc
test
in
mov
adc
and
mov
and
cmp
test
cmc
push
cli
cwtl
jns
push
adc
push
lcall
icebp
lock
adc
lds
xlat
inc
adc
sub
or
cltd
notl
mov
daa
inc
sti
sub
imulb
stos
outsl
out
push
shrl
gs
pop
xchg
inc
popa
xchg
xchg
lret
stc
ljmp
aaa
ljmp
and
inc
pop
lea
mov
rcrb
ds
int3
mov
cwtl
lock
jle
xchg
ss
movsb
mov
outsl
mov
loope
mov
xchg
xchg
mov
dec
lcall
jge
mov
jl
es
arpl
iret
icebp
addb
and
xor
bound
inc
lods
ja
pop
sbb
es
arpl
lods
ja
movsb
push
pop
outsb
sbb
movsb
sub
dec
mov
xchg
mov
out
je
popf
rcll
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
jp
stc
shlb
jle
movsb
xchg
and
loopne
and
mov
push
imul
jecxz
mov
loopne
inc
lret
sub
test
fdivrs
sub
or
sbb
stc
cmp
jp
xchg
push
shlb
popa
cmp
inc
fmuls
adc
push
sbb
scas
out
push
mov
imul
popa
int
cwtl
icebp
movsb
or
in
out
lcall
adc
inc
xor
push
cmp
sbb
xor
fs
fisttpll
imul
inc
push
fdivrs
inc
mov
enter
xchg
mov
test
add
cld
rcl
popa
hlt
dec
test
mov
lods
mov
push
mov
mov
test
xchg
cmp
mov
popa
dec
les
jle
jg
popf
pusha
cld
into
es
pop
aad
xor
sbb
loopne
in
add
lods
adc
testl
cmp
or
movsl
push
jbe
scas
outsb
or
cmp
xchg
lret
fcmovbe
mov
lea
aad
mov
sbb
add
sub
lock
out
push
xor
lret
push
aas
je
int3
or
dec
mov
adc
es
xorl
mov
sbb
xchg
adc
pusha
xchg
outsb
push
fistps
xor
mov
scas
inc
pop
cwtl
jae
stos
ret
jmp
fstpl
cltd
test
sarb
es
into
adc
cmp
aaa
test
add
testl
sbb
or
lret
leave
imul
xchg
fadds
aas
dec
push
andb
xor
repnz
mov
fistpll
cmp
inc
xor
cmp
mov
sbb
or
loopne
push
int3
or
mov
scas
push
cmp
push
ret
pop
xchg
mov
or
adc
mov
xor
inc
lret
ret
mov
stos
jmp
loopne
push
mov
cmp
inc
addr16
mov
adc
push
or
mov
cmc
in
push
xor
divps
mov
mov
or
mov
sub
int
and
xchg
mov
sbb
push
dec
jno
mov
out
add
enter
jge
sbb
mov
gs
mov
push
jge
and
imul
push
enter
movsl
add
jmp
or
push
rcrl
mov
lcall
jo
push
xchg
int
xchg
lock
jge
cs
aas
fsts
sbb
in
push
push
nop
je
aam
mov
mov
or
test
pop
pushf
jmp
push
bound
pushf
or
es
mov
or
test
push
dec
add
stos
ficoms
sarb
jmp
or
pop
jno
xchg
add
mov
fidivs
jle
mov
push
int
shl
adc
lret
es
inc
lahf
aaa
jp
inc
test
mul
clc
mov
or
sbbl
jmp
insb
cmpsl
out
and
testb
push
lea
jb
sub
dec
mov
stos
int3
std
mov
pop
sahf
ja
test
sbb
out
push
jp
fdiv
dec
xchg
dec
sbb
push
movsb
loopne
aad
jbe
adc
inc
xor
jmp
cs
pop
and
jae
movsl
and
inc
int3
mov
call
insb
jnp
daa
sbb
push
mov
adc
push
mov
pop
int
adc
stos
dec
shl
mov
into
jl
lahf
fwait
add
loopne
cli
push
jp
aam
call
aam
cmp
push
adc
adc
es
test
and
in
jno
daa
jecxz
lds
and
and
cmp
cld
fidivrs
outsl
xchg
scas
cmp
push
inc
mov
push
xchg
sub
icebp
test
mov
push
lea
dec
adc
mov
xor
xchg
arpl
test
mov
xchg
dec
test
mov
outsl
mov
sbb
pop
jne
jns
addr16
pop
cmp
test
adcl
int3
pop
xor
mov
push
inc
inc
dec
xchg
inc
in
xor
adc
mov
testl
mov
pushf
icebp
push
cmp
scas
imul
cmp
mull
mov
jg
lds
mov
movsl
push
pop
adc
lock
shrb
inc
jno
push
call
inc
mov
sbb
js
lea
inc
popa
fnstenv
test
cs
je
iret
mov
iret
push
push
testl
inc
test
jle
and
shr
aad
cmpsl
pop
and
pop
mov
loopne
rorl
and
int
rcrl
sub
push
push
aas
cmpsb
movsb
mov
adc
mov
je
jmp
and
scas
cmc
inc
andl
push
loop
call
cmp
and
pop
mov
dec
sarb
push
pop
mov
mov
push
mov
loop
in
leave
xlat
push
loop
cmp
insb
pop
out
cmpsl
imul
addr16
sbb
fmulp
mov
mov
mov
push
sub
int3
inc
mov
dec
add
inc
mov
popf
lea
xchg
add
aaa
lcall
or
xchg
pop
inc
pop
mov
xor
sub
icebp
cltd
aaa
movsl
xor
lret
mov
sub
mov
mov
cli
adc
sbb
movq
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
insb
push
xchg
fdivl
jle
pushf
fidivrl
jl
mov
test
in
ljmp
jp
push
xchg
stos
lahf
mov
add
fildl
out
mov
and
mov
push
cmpsl
or
add
int
pop
sti
test
aad
jecxz
xchg
subl
jne
shl
fcmovne
push
in
imul
mov
sub
jo
pop
mov
xor
xchg
imul
mov
pop
xchg
test
test
add
mov
push
jb
shl
fidivrs
push
mov
enter
jecxz
pop
imul
xchg
roll
mov
call
push
sahf
dec
scas
js
nop
stc
aas
incl
cmp
incl
cmp
add
sbb
es
jge
fnstenv
pusha
cmp
sub
lds
out
je
cmp
mov
inc
push
mov
iret
and
xor
mov
inc
xor
popf
shlb
ret
daa
fstpl
mov
mov
add
outsb
dec
jmp
fcmovbe
ret
test
xor
sub
out
lods
inc
cmp
ja
xchg
xor
sbb
mov
lods
mov
aam
into
pcmpeqb
or
sti
leave
rclb
cmp
addr16
shrb
cmp
lds
out
push
inc
jle
fsts
imul
cld
xchg
arpl
push
add
sbb
or
aaa
cmpsb
fwait
std
lret
lods
ljmp
pop
les
mov
pop
mov
das
push
shll
popf
xor
incl
ficoms
xchg
push
and
sub
dec
mov
mov
mov
insb
scas
imul
and
jle
insb
les
mov
mov
cmp
sub
fistl
and
dec
loopw
dec
in
or
fwait
cmp
pop
or
jae
ljmp
lret
fyl2x
aaa
ss
or
clc
inc
out
jmp
jecxz
inc
bnd
inc
jg
xor
test
cmc
pop
jno
popa
xchg
fnstsw
inc
in
mov
dec
es
cmp
pop
mov
insl
das
scas
cmp
shll
xor
retw
bound
ljmp
push
icebp
jge
xor
pop
fidivrs
jns
pop
or
jmp
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
xchg
inc
inc
ds
in
enter
in
rcll
mul
xor
jae
aam
adc
test
inc
in
test
rclb
aas
add
xchg
enter
or
mov
ljmp
loopne
add
leave
or
fdivrl
add
cmova
jg
push
jmp
stos
in
and
in
movsb
jmp
sbb
mov
push
test
mov
push
sahf
sub
jl
fiaddl
mov
cltd
mov
push
div
pop
sbb
lods
pop
les
std
addr16
mov
xchg
insl
popa
mov
dec
out
push
xchg
cmp
mov
in
movsb
pop
adc
mov
clc
lahf
dec
xchg
mov
mov
outsb
push
jmp
ss
mov
stos
movsl
mov
adc
mov
test
add
fdivr
jbe
sti
xchg
movsl
fmuls
arpl
pop
stc
clc
sub
xor
pop
in
ret
mov
dec
mov
addr16
mov
push
jb
xlat
inc
lret
fwait
lds
jnp
adc
fcompl
inc
fadd
lds
lea
movsl
pop
aaa
cmp
aas
outsb
repnz
ret
jno
cwtl
cmp
jae
add
repz
mov
push
fbld
pop
cs
sbb
add
cmp
mov
ja
jle
dec
repz
cltd
arpl
jo
jge
dec
and
lods
xchg
pop
mov
inc
lds
mov
fidivrs
gs
int
ds
sahf
std
xchg
jae
sarb
std
jl
inc
lahf
jmp
mov
dec
and
mov
je
jmp
sub
stc
fsubr
ficomps
or
ret
repz
outsl
mov
std
mov
insb
jle
out
addr16
and
sahf
pop
mov
xlat
jns
test
push
cmpsl
enter
add
scas
pop
les
dec
insl
mov
daa
push
arpl
mov
cmc
mov
mov
cmp
stc
insb
inc
mov
lahf
ja
test
xchg
test
lret
lcall
add
dec
jle
or
and
shlb
aas
jg
outsl
gs
push
cmp
ror
push
inc
pop
int
lods
add
rcll
lods
jns
outsl
hlt
dec
leave
jne
mov
mov
mov
push
rcll
and
nop
cmp
cmp
int
cli
aas
push
fldcw
hlt
addr16
add
jmp
add
fdivl
lock
xchg
pop
mov
mov
jle
mov
or
mov
addl
mov
mov
in
jo
cmp
sbb
adc
leave
iret
in
mov
cmc
into
mov
imul
repnz
jne
add
clc
sub
sbb
jb,pt
out
roll
xchg
cmp
adc
mov
daa
cwtl
and
into
inc
inc
mov
or
jge
pusha
negl
pop
not
mov
or
dec
mov
sub
lds
js
lcall
sub
xor
xchg
cld
adc
inc
repnz
push
repz
and
jbe
mov
mov
mov
mov
xor
xchg
inc
xchg
push
jmp
dec
lcall
cmp
push
jne
lods
and
xchg
jbe
dec
outsl
mov
stos
clc
in
pusha
adc
jg
div
orb
push
loope
lret
je
sub
cmc
sbb
pop
mov
xchg
pushf
testb
inc
dec
mov
cmpsb
outsb
dec
imul
aas
popf
adc
push
jno,pn
sbbl
out
xchg
adc
ret
adc
cmp
outsb
fbld
ljmp
inc
adc
aas
pop
lods
push
push
pop
aaa
adc
xchg
aad
cmp
fcoms
cmp
and
pop
xor
and
mov
sahf
in
or
push
cmp
testb
das
ja
fdivr
xchg
lcall
loop
mov
push
shld
cwtl
jmp
xor
cltd
cmp
lret
inc
or
adc
cli
pushf
pop
and
insb
push
les
cmc
cmpsl
data16
xorl
or
jle
jns
cmp
xchg
cld
lods
pop
aas
dec
inc
sub
adc
psrld
xchg
push
adcl
push
rolb
push
pop
adc
pop
sbb
add
mov
fs
daa
xor
jnp
xchg
cwtl
test
inc
sbb
mov
cmp
aad
xchg
fsubs
data16
incb
and
rclb
dec
jns
sub
pushf
cld
sbb
jmp
cmpsb
jb
cmp
push
add
aam
mov
dec
es
pop
xor
int
movsb
rcrl
insl
jb
lea
push
add
test
in
xor
dec
jecxz
fbstp
rorb
loope
and
insb
pop
hlt
stos
movsl
repnz
faddp
mov
mov
aas
and
xchg
clc
jmp
je
push
push
lock
outsb
dec
mov
mov
mov
jle
rorb
adc
pop
cwtl
jge
mov
out
test
fwait
gs
es
cmp
fs
fwait
dec
xor
mov
xchg
xor
pushf
xchg
adc
push
je
mov
leave
aas
pop
push
test
nop
cs
movsb
pop
ljmp
sbb
ljmp
mov
dec
fdivrs
xor
iret
test
mov
cmp
lock
popa
xchg
dec
push
cli
loope
and
cld
repz
or
mov
jns
jg
test
sub
xor
jp
lea
adcb
in
or
sete
and
fs
xchg
dec
and
out
lahf
fisubl
cli
mov
push
sub
loope
pop
subb
loope
mov
xor
popf
jp
mov
or
inc
mov
ljmp
icebp
jmp
mov
dec
mov
ljmp
inc
int3
data16
sbbb
ret
xchg
push
iret
aas
jno,pt
loop
aaa
mov
jbe
int3
add
maskmovq
notl
aad
rcll
xchg
lret
lock
stos
mov
rcrb
mov
pop
cmp
pushf
dec
sarl
popf
lcall
shl
mov
dec
add
jb
cltd
xlat
lods
popf
das
std
jle
or
mov
adc
test
mov
cmp
mov
lret
lret
jp
mov
inc
sbb
xor
lods
jo
in
inc
fists
jnp
push
lods
fisttpll
mov
mov
adc
mov
mov
cli
clc
daa
inc
jbe
je
mov
cmpsl
inc
jns
incb
mov
mov
and
cltd
xor
push
mov
les
inc
cmp
xchg
sbb
cltd
sub
cmp
dec
popa
stos
imul
cmp
filds
mov
adc
cmp
call
fwait
adc
jbe
dec
cmpb
ds
xor
jno
jno
loopne
mov
pop
lcall
pusha
bound
pop
push
add
je
cmc
negb
lods
adc
jnp
icebp
jecxz
leave
add
mov
mov
movsl
cmp
daa
push
iret
inc
xchg
or
rorl
adc
ret
mov
addr16
and
push
cmp
insl
mov
or
js
mov
jp
mov
pop
xor
mov
sbb
pop
out
mov
inc
xchg
jle
push
insb
std
aas
stc
scas
push
inc
jl
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
lock
pop
sbb
jle
jl
jle
push
cmp
test
mov
into
cmpsl
sub
adc
jae
and
mov
outsb
js
in
jmp
sub
cmc
movsl
jp
fwait
xor
aad
fwait
in
mov
aaa
sbb
ret
mov
adc
shlb
aas
and
sub
ror
xchg
pop
pop
pop
xor
mov
push
add
jle
xchg
sbb
out
bsr
jmp
mov
xchg
in
pop
add
sbb
push
xor
jecxz
sbb
jp
sbb
mov
outsl
jno
mov
add
nop
js
cld
shr
push
frstor
cli
out
xor
cmp
sub
repz
insl
push
and
jg
and
pop
add
std
sar
mov
push
movsl
cld
adc
inc
and
sub
add
adc
and
mov
mov
sar
sub
mov
add
xor
xor
pop
scas
sub
xchg
popa
outsb
cmp
and
adcb
xchg
jl
jns
ds
fstps
shrl
orl
xchg
sbb
cmp
mov
dec
mov
mov
xchg
mov
out
bound
pop
jo
sbbb
fwait
jle
xlat
cmp
repnz
nop
aas
sub
cs
push
std
enter
iret
shll
xchg
mov
cmp
jmp
jp
repnz
cmc
imul
lds
inc
notb
loopne,pn
nop
repz
bound
mov
inc
jge
ljmp
imul
push
rclb
lahf
fdivl
daa
mov
jle
add
leave
in
mov
pop
adc
add
and
icebp
fs
cmp
cs
push
mov
sahf
stos
imul
add
mov
dec
cltd
jns
out
daa
mov
cmp
in
rorb
mov
outsb
xor
dec
addr16
jmp
sbb
mov
iret
push
pusha
mov
lds
xorb
xchg
mov
loop
leave
mov
inc
out
cmp
movsb
sub
xor
cmp
lock
xor
or
std
jmp
mov
dec
jecxz
pop
dec
mov
xchg
insl
mov
cmp
shlb
push
aam
mov
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
dec
pop
dec
inc
jle
scas
jl
jle
push
cmp
aaa
pop
mov
or
fidivl
movsl
iret
cli
xor
push
add
jecxz
arpl
xlat
jae
and
sar
inc
xchg
fnstenv
rorb
repnz
add
mov
pop
xor
mov
gs
push
mov
fdivrl
hlt
push
loop
in
fcompl
loope
jns
insl
popa
pop
sbb
fmull
outsl
loope
mov
mov
dec
into
pop
mov
imul
incb
pop
je
pop
hlt
stos
in
xor
and
fdivs
jle
sbb
jmp
push
cmpsb
mov
out
es
sub
push
sbb
adc
mov
adc
inc
fstp
je
mov
push
imul
icebp
push
pop
push
mov
into
sub
rclb
dec
pop
sub
sub
jp
xchg
sub
shrl
or
push
lcall
push
pop
pop
and
ds
lcall
imulb
sbb
sbb
aas
cmp
js
das
gs
add
lahf
shll
sahf
outsl
or
jg
lret
es
adcb
int
lret
xor
rcl
iret
or
cmp
lahf
ja
adc
insl
popl
mov
xor
fisttps
jb
mov
mov
and
inc
cmpsb
adc
push
xlat
cmp
mov
fidivrl
lods
inc
movsb
xchg
daa
hlt
ficoms
and
dec
sub
add
xchg
jl
repz
loop
flds
leave
int
cmc
cltd
jp
add
ficoms
movsl
aam
gs
jl
ficoml
xchg
inc
stos
movsb
repz
ja
loopne
cmpb
movsb
into
push
pop
and
or
push
fcmovnbe
insb
inc
cmpsb
inc
mov
xor
xor
pop
fnstcw
mov
test
daa
xor
jns
mov
testb
lock
test
push
xchg
jge
sbb
ret
lahf
repnz
ret
xor
xchg
pop
inc
mov
popf
iret
mov
sub
dec
pop
xor
add
test
ret
mov
mov
jle
inc
pop
inc
jne
push
adc
jae
iret
les
out
shll
push
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
stc
mov
jle
movsb
jg
jle
sbb
outsl
loopne
jge
cwtl
mov
data16
aaa
jp
loop
cld
int
mov
or
jbe
add
jmp
mov
imul
pop
jmp
add
mov
aaa
cwtl
mov
js
dec
add
adc
push
push
cmp
jne
mov
int3
add
or
jnp
lret
mov
ljmp
outsl
in
mov
imul
xchg
pop
lods
xchg
xlat
cmpsl
and
cmp
pop
add
or
mov
mov
rorb
xor
loope
addl
sbb
js
cltd
fcoms
mov
dec
push
cmpsl
dec
and
push
inc
push
imul
jno
hlt
int
stos
cwtl
jo
les
fbstp
aaa
icebp
add
repnz
lods
or
inc
popl
sub
xchg
lds
dec
push
fsub
xor
sbb
cltd
iret
pushf
or
push
cltd
mov
clc
rcrb
jl
add
cmp
pop
cld
add
nop
xlat
sub
icebp
fiaddl
mov
and
ja
lcall
mov
in
cmp
jl
pop
insl
scas
jmp
dec
push
mov
in
mov
push
jg
xor
add
xor
mov
adc
adc
xor
pop
je
dec
addr16
scas
add
push
xor
movsl
add
inc
adc
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
and
icebp
test
dec
jle
movsb
jg
jle
outsb
cmp
xchg
loope
mov
mov
mov
cmc
cmpsb
sub
mov
je
push
cmp
sub
mov
jecxz
xchg
pop
jae
test
inc
push
imulb
bound
cmp
cmp
push
xchg
and
jae
add
leave
jbe
int
pminub
insb
adc
or
out
roll
faddl
adc
dec
mov
xor
out
cmc
cmp
fidivrs
lods
and
sbb
sbb
out
cltd
mov
cmp
std
jmp
popa
bound
cmpsb
lods
mov
scas
bound
adc
mov
es
push
sbb
adc
int3
icebp
inc
mov
and
lcall
dec
inc
std
leave
out
mov
insl
sub
fsub
imul
dec
lcall
aaa
shrl
bswap
xor
sub
int
mov
popa
add
inc
fstps
dec
test
cmp
movd
icebp
into
mov
and
mov
insl
mov
rcrl
out
mov
jno
dec
xchg
or
sbb
vmovupd
addr16
nop
sub
sbb
mov
mov
sub
stos
insb
lods
xor
add
xor
jmp
jp
and
and
xchg
adc
test
pushf
sbb
mov
sti
and
xor
mov
adc
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
sbb
add
add
add
addr16
or
pop
xor
xchg
xchg
mov
pop
aam
aam
mov
movsb
rcrl
jbe
mov
inc
imul
ja
pop
orb
outsb
jl
insl
adc
add
test
adc
dec
mov
js
std
sbb
add
add
mov
enter
in
dec
lock
cli
xchg
ret
stc
xlat
xchg
and
pushf
pop
lods
int
jne
push
rcr
ss
mov
mov
ret
aad
loop
lods
or
push
sahf
dec
mov
push
jo
popf
and
mov
icebp
xchg
int3
fisubrs
xor
cld
notb
inc
fisubs
xchg
adc
aad
mov
and
add
jno
mov
sub
test
xchg
lcall
mov
mov
ret
fdivp
lock
push
nop
sub
pop
ficoml
in
jle
lcall
and
add
add
add
insb
cmp
jb
pop
xchg
cmp
mov
jg
lahf
fsubr
dec
test
pop
psrld
cmp
mov
add
mov
sbb
in
pop
stos
imul
mov
dec
push
add
fwait
bound
xchg
gs
repz
fistl
cmp
std
push
call
push
pop
fcomps
outsl
jnp
dec
ficomps
adc
push
mov
repz
or
cmpb
cltd
push
outsl
and
cmp
loop
add
ficomps
pop
cli
ljmp
inc
add
push
and
mov
jle
lahf
jg
outsb
outsl
daa
xchg
inc
scas
pop
jl
cltd
incl
mov
push
push
stc
bnd
arpl
lahf
scas
inc
xchg
nop
fisubl
push
mov
cs
sar
ret
mov
xor
test
dec
cmpsl
pushf
mov
in
inc
shl
lods
fadds
add
add
adc
mov
mov
push
or
in
add
add
add
pop
mov
test
pop
inc
std
mov
and
cwtl
xchg
jmp
xchg
adc
rcll
cmpsl
jl
pushf
icebp
xor
mov
arpl
sbb
jno
mov
shrl
jns
mov
inc
or
fisubs
add
xor
dec
test
leave
shll
jge
mov
mov
mov
leave
jbe
mov
stos
pop
filds
scas
mov
mov
and
or
xor
insb
xor
ss
add
aad
in
addr16
aaa
adc
ds
adc
notb
or
or
jns
mov
push
ds
cmp
or
mov
or
mov
mov
scas
lds
push
or
sub
dec
fisubrl
push
jle
dec
pop
sbb
lods
fwait
mov
scas
inc
inc
adc
mov
popf
je
in
daa
inc
xchg
popf
adc
jmp
add
add
subl
roll
push
in
fwait
jno
aam
add
add
sbb
pop
add
jae
aad
popf
imul
scas
mov
mov
shl
std
fsubrs
push
pop
insb
push
repnz
das
aaa
and
loope,pt
push
pop
nop
addr16
dec
adc
and
iret
or
xchg
gs
mov
and
pop
out
sti
mov
inc
sub
ret
sbb
inc
pop
dec
xor
movsl
dec
or
psrlw
xchg
or
das
loop
mov
sub
add
fstl
int
mov
mov
mov
rcrl
lret
cmc
xchg
mov
aaa
adc
xor
test
fwait
add
fnstsw
mov
mov
xlat
imul
fucompp
pop
pop
push
xor
icebp
shr
in
sbb
dec
push
pop
adc
sbb
xchg
gs
xor
into
scas
xchg
push
js
xor
cmp
and
jmp
clc
add
sbb
jnp
mov
loope
iret
negb
add
add
inc
or
pop
dec
or
cld
mov
add
add
jp
inc
adc
inc
sarb
jg
rcr
mov
iret
pusha
in
push
adc
jo
dec
push
out
sbb
push
ja
mov
adc
lret
in
lods
sahf
int3
sub
addr16
jl
adc
std
fisttps
insl
inc
and
jg
pop
pop
dec
push
push
andb
inc
mov
into
jae
sbb
sarb
stos
out
sbb
les
shlb
js
scas
setno
push
pop
hlt
popf
mov
pop
fs
or
add
mov
pop
xor
pop
out
and
jae
ror
je
ret
aad
mov
aaa
jp
cs
mov
inc
jns
xchg
shr
clc
jns
es
aam
call
xor
imul
inc
mov
fdivrl
jp
inc
adc
out
cmp
sub
cmc
mov
addl
or
sbb
jg
cmc
insl
cmc
out
lcall
enter
cmp
xchg
lock
add
add
add
fwait
xor
jnp
lcall
jno
pusha
or
dec
and
lahf
pop
xchg
xor
sar
or
lock
mov
dec
mov
mov
and
sahf
sub
mov
fadds
stos
cmp
test
nop
nop
lods
inc
stos
and
decl
add
insl
sub
in
bound
ret
fidivrl
dec
fwait
mov
mov
jl
jo
daa
outsb
imul
cmp
mov
imul
xor
ljmp
fnstcw
pop
xchg
pop
repz
in
cli
pop
adc
inc
mov
or
or
jle
and
jmp
inc
icebp
vcvtsd2si
lahf
imul
jb
xchg
mov
fdivs
or
xor
subb
jb
pop
out
outsb
ret
ljmp
dec
jnp
jbe
lahf
push
icebp
inc
aad
push
push
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
sbb
xchg
rorl
repz
stc
jecxz
xchg
jmp
loope
daa
and
lea
lock
push
out
jnp
and
jbe
push
push
inc
pop
pushf
mov
mov
jae
dec
add
fdivrp
js
mov
sub
loope
sbb
popf
jle
test
or
test
jns
sub
sub
sbb
push
jne
ret
enter
sub
adc
push
jge
sub
iret
sub
out
sbb
inc
dec
pop
xor
xorb
scas
or
jmp
js
outsb
push
loopne
sarb
subl
jmp
pop
inc
and
mov
jmp
dec
lret
push
xchg
fs
aaa
lar
scas
ja
mov
dec
xor
inc
sub
int3
jb
dec
repnz
aas
mov
push
jmp
test
or
jbe
add
lock
add
aam
or
and
scas
sti
jle
pop
push
pop
fldl
clc
fadds
add
add
push
or
rol
insl
dec
inc
xchg
jae
and
cmp
xchg
pop
add
iret
mov
inc
sub
scas
fs
mov
jnp
dec
and
adc
pop
pushf
and
fwait
xchg
les
mov
push
adc
push
cmp
mov
push
fdivl
or
xchg
adc
fs
movsb
dec
fisubl
lea
or
nop
and
xchg
add
mov
lds
adc
adc
aad
repnz
jge
in
mov
pop
aas
mov
lods
cmpl
mov
fbstp
inc
mov
movsb
daa
pop
mov
jp
das
aam
and
ss
xchg
test
int3
fstps
hlt
ds
insl
popa
jecxz
shrb
ret
outsb
rcrl
orb
std
in
insl
cmpsb
sbbl
scas
ljmp
loop
nop
call
mov
pop
stos
out
cwtl
pop
lahf
fnstcw
ss
lahf
stc
bound
sbb
add
add
sbb
fnsave
pop
stc
int3
dec
xchg
push
decb
pusha
xchg
inc
or
loop
mov
push
aam
arpl
inc
mov
mov
and
iret
mov
sti
inc
xchg
int
mov
sbb
inc
mov
add
iret
sbb
and
mov
mov
xor
push
stos
mov
push
cmp
push
push
add
push
pop
popa
rcr
popf
cmp
js
push
or
or
out
dec
repz
adc
pop
out
repnz
mov
mov
jge
mov
mov
mulb
pop
sub
insl
and
pop
rcpps
push
sbb
nop
sub
test
dec
lock
call
repz
inc
mov
pusha
push
sub
xchg
fisttps
jnp
fs
pop
stos
adc
repz
mov
imul
xchg
pop
xor
push
jl
jle
insb
out
cs
pushl
add
add
add
add
cmpsb
adcb
dec
dec
stos
jbe
mov
or
inc
ds
inc
mov
push
nop
adc
pushf
test
mov
repz
enter
mov
lea
insl
jmp
les
xchg
call
xor
xchg
test
popf
jno
shll
jnp
orb
adc
mov
add
pop
aaa
loopne
loop
les
pop
jae
sub
dec
lret
fstp
lahf
dec
ret
xor
dec
out
mov
dec
movsl
in
cltd
push
cmp
jg
cmpsb
cmpsl
mov
sub
inc
cmp
mov
ljmp
push
loopne
add
dec
sbbl
sbb
shlb
cmp
mov
cmp
push
jge
sti
clc
inc
pop
sbb
xchg
push
xor
xchg
sub
inc
adc
cs
push
adc
pop
inc
repz
xor
shll
add
fwait
mov
in
xor
adc
add
add
add
add
mov
int3
sub
jge
stos
mov
iret
cld
inc
arpl
add
fisttps
sahf
mov
add
vmovsd
outsb
nop
adc
popa
jecxz,pt
in
inc
and
loope
lcall
mov
pop
xlat
pop
mov
add
divl
cmp
mov
jnp
movsl
fs
push
pop
popa
ret
xchg
push
lret
leave
cwtl
cmp
adc
mov
insb
sbb
and
mov
lcall
pop
xor
or
and
jne
sbb
test
stos
subb
xor
pop
lcall
add
pop
lods
cmp
cmp
test
sbb
or
hlt
sbb
xor
ss
jno
push
xor
loop
mov
subl
inc
or
dec
fsubrs
xor
pusha
and
push
fs
xchg
mov
xorl
inc
mov
stos
and
xchg
add
add
data16
jne
mov
lcall
add
add
add
int
ret
jge
mov
sbb
cmp
mov
idivb
cltd
fiadds
ret
add
movsl
arpl
pop
fdivrl
hlt
mov
push
cli
add
sbb
cli
sbb
outsb
popf
jg
lea
push
xchg
cmp
push
and
mov
lret
insl
or
push
roll
psrad
daa
xchg
ja
fiaddl
pop
leave
pop
dec
cmp
fidivrs
cmp
sub
jecxz
mov
adc
jne
inc
and
das
mov
leave
or
inc
test
lea
sahf
lret
out
xor
call
arpl
add
test
data16
push
push
add
mov
out
addl
dec
ret
cmc
insl
inc
and
mov
ffree
dec
call
sahf
pop
xchg
loopne
adc
push
in
push
loope
mov
jmp
insl
and
pop
pop
lret
push
ficompl
dec
push
and
lret
dec
mov
jnp
add
jnp
sti
xchg
lahf
mov
pop
xor
add
add
add
lock
mov
jns
sbbl
movsl
mov
lret
dec
push
mov
jmp
not
xchg
bound
arpl
lea
mov
push
push
sub
pushf
mov
mov
xchg
jnp
ds
mov
mov
pop
cmc
aad
mov
pop
das
sbb
xchg
nop
dec
cmp
es
mov
iret
jmp
xchg
pop
daa
ret
and
jle
imul
jae
popf
pop
dec
stc
js
ljmp
push
jno
add
xchg
insb
jmp
sbb
push
js
jl
mov
popf
aad
ja
and
dec
stc
jecxz
push
pop
sbb
lret
jge
out
loop
je
sbb
xchg
push
fwait
sbb
cmc
test
mov
stos
xchg
inc
add
dec
add
insl
fwait
cltd
mov
outsl
and
xchg
cwtl
push
pop
inc
sbb
adc
not
hlt
adc
mov
push
in
dec
leave
mov
add
pop
sarl
mov
aas
adc
add
add
add
dec
xor
xor
add
loop
insb
sbb
mov
or
xchg
ret
or
ljmp
imul
gs
jnp
mov
and
xchg
ds
push
imulb
and
inc
out
stos
pop
aaa
lahf
dec
call
jmp
test
mov
ffree
push
inc
pop
mov
xlat
andl
pop
imul
pop
jo
sub
bound
pop
roll
mov
aam
push
int3
mov
and
and
scas
push
mov
jns
pop
jge
pop
adc
cltd
pop
mov
out
pop
mov
aaa
lea
mov
push
cmp
test
jl
add
adc
inc
cmp
xchg
into
jp
aaa
mov
movsb
es
xor
arpl
jl
cmp
loope
adc
dec
decl
pop
and
test
mov
sbb
add
insl
lock
std
repz
xchg
adc
add
add
add
xchg
rol
mov
imul
out
pusha
inc
mov
xor
movsl
addr16
mov
or
xor
scas
sub
mov
inc
mov
inc
adc
sub
or
dec
add
arpl
hlt
or
test
push
mov
test
subl
push
inc
add
test
inc
call
cmc
fsubs
mov
dec
push
in
cmp
jae
icebp
or
xor
int3
mov
push
ret
inc
sub
sub
fwait
lea
out
shlb
int
sbb
pop
pushf
dec
ds
jns
lds
stc
in
xchg
addb
in
dec
ljmp
jle
adc
sub
xchg
pop
sub
sbb
fcomps
call
xchg
push
dec
pop
shrl
lret
lods
loopne
xchg
dec
loop
dec
fs
js
aam
mov
dec
xchg
mov
pop
decl
add
in
sub
cmp
arpl
je
enter
loope
add
add
cli
inc
xor
jo
sti
jg
pop
nop
ljmp
cli
fdivl
add
lcall
inc
pop
int
leave
mov
xchg
clts
mov
mov
stos
sub
jb
push
adc
sub
adc
cmp
das
icebp
jbe
imul
jmp
test
in
lods
aad
pop
mov
cmp
and
cli
fldenv
mov
xchg
jne
xor
out
xchg
ret
out
clc
shll
and
pop
imul
cli
pop
lods
dec
es
cmc
or
cs
cmp
out
aad
rcll
movsb
sahf
and
xchg
lock
aam
inc
popa
jle
addl
xor
adc
sub
fisubs
aas
je
icebp
sub
fimull
lds
mov
and
sbb
or
out
out
and
mov
scas
ret
mov
push
xchg
mov
cmp
enter
add
mov
mov
xchg
adcl
sbb
add
add
add
js
sub
mov
pushf
sbb
inc
lcall
dec
pop
aad
and
or
push
dec
push
scas
mov
fmulp
mov
mov
mov
push
mov
fistpll
cmp
pop
sbb
inc
or
xor
lea
je
js
pop
divb
cmp
adcl
movsl
loope
ljmp
jb
sbb
stos
insl
loop
inc
cmp
xchg
inc
or
and
xor
cwtl
push
movsl
lret
arpl
pop
cmpb
or
in
fsub
pop
int
decl
fstps
cmp
fldl
shll
sub
fisttps
cmp
sub
add
test
or
adc
or
mov
int
mov
jge
ljmp
sti
mov
jecxz
ja
xchg
and
and
fwait
mov
repz
lret
xchg
in
mov
incl
roll
jecxz
add
add
out
xlat
mov
xchg
ret
push
push
shr
cmp
sub
push
mov
jns
fs
enter
pusha
mov
stos
sub
xchg
add
outsl
ret
mov
xchg
stc
daa
mov
mov
pusha
mov
jbe
pop
pop
aam
flds
adc
outsl
xchg
mov
fyl2xp1
push
imul
in
es
xchg
loopne
or
push
or
mov
outsl
mov
out
outsb
and
int
sub
leave
jge
jp
xor
rolb
mov
jno
loope
xchg
mov
sti
mov
inc
xchg
adc
cmpsl
inc
and
pop
adc
fwait
lock
insb
out
cmpb
inc
xor
jp
or
push
or
out
xchg
ret
jge
enter
jns
jle
idivb
add
inc
mov
in
negl
sub
movsb
sub
inc
pusha
and
add
add
add
ljmp
sub
in
lock
cmpsl
jns
xor
and
hlt
dec
or
sahf
mov
andb
out
scas
ss
jb
adc
subb
mov
popa
hlt
clc
inc
sub
dec
jmp
addr16
mov
icebp
dec
jns
xor
push
leave
and
mov
mov
jl
cwtl
jb
jno
fistl
cmp
xlat
xchg
insw
xchg
cld
jno
daa
fcomps
aad
cmc
add
inc
movsl
aaa
popa
into
jo
dec
ds
in
cld
in
push
pop
dec
or
loop
dec
or
pop
sahf
mov
xlat
test
rcrl
test
ss
loope
scas
lcall
add
es
xor
pushf
out
leave
adc
inc
mov
aam
xchg
nop
sub
std
in
insb
lcall
push
iret
stos
mov
push
fistpll
stc
dec
push
fsubl
in
add
add
xchg
mov
jg
cltd
push
jb
mov
adc
xchg
pop
test
jle
inc
dec
gs
popa
popa
add
inc
push
cmp
jbe
xchg
mov
lcall
fnstcw
xor
push
and
xchg
sti
hlt
ret
inc
mov
jl
nop
sti
ret
mov
dec
call
test
pop
sahf
leave
mov
cmpsl
adc
dec
sahf
lds
loopne
push
insb
fadds
aas
sahf
sbb
add
inc
pop
pop
mov
push
arpl
adc
inc
jb
pop
lcall
je
cmp
icebp
int3
mov
xor
push
inc
and
sbb
sbb
cmp
fidivrl
pusha
cmp
mov
push
sti
cmp
stos
cmp
jae
xor
cmpsb
mov
fcomi
lods
mov
xchg
jnp
mov
test
pop
popf
push
mov
and
enter
push
aad
add
add
adc
push
push
push
mov
sub
out
add
add
sbb
and
fwait
mov
fsubrs
psubusw
pop
fiadds
or
mov
push
adc
jecxz
ret
cwtl
out
push
mov
xchg
mov
jg
lods
xor
sbb
mov
dec
test
dec
adc
xchg
pushf
cmpsb
pop
mov
inc
jg
dec
stc
movb
cmp
mov
xchg
int3
dec
pushf
mov
pop
mov
sub
mov
xchg
decl
jns
sahf
lea
push
in
sti
fistpll
aam
adc
pop
push
jae
inc
ret
xor
ss
dec
xor
jne
push
sti
pop
xor
je
push
fisttpll
dec
add
repnz
or
jl
sub
loopne,pn
pop
xorl
dec
xor
lret
or
or
addb
sbb
mov
shl
lds
fnstcw
out
repnz
add
pop
lcall
les
and
loope
out
add
add
adc
cmp
addr16
push
jae
mov
sbb
dec
jno
aaa
lahf
mov
stc
push
jecxz
in
adc
pop
jae
adc
test
lds
fcmovnb
and
xor
push
sti
or
cmp
cmpb
pop
rcrl
and
les
and
and
pop
or
xor
add
outsl
les
add
mov
flds
sbb
and
ja
cmc
mov
cmp
xchg
cmp
stc
sbb
pop
les
lods
dec
adc
mov
jbe
clc
pop
mov
cmpsl
fstpl
clc
lret
into
jae
rcrl
fistps
out
scas
iret
ljmp
movsl
js
jno
xchg
fwait
push
popa
lcall
clc
cmp
fsubrl
sub
push
xchg
stos
cs
outsl
sub
jae
lcall
pusha
xchg
add
add
mov
push
decl
and
mov
add
add
add
or
cmp
fcmove
or
mov
sbb
sbb
mov
test
js
push
popa
inc
add
repnz
cltd
subl
push
dec
lock
imul
and
xchg
sub
cmp
stos
mov
mov
cwtl
loop
push
cmp
pop
mov
and
mov
pop
and
cmp
icebp
sbb
and
or
pop
lret
jno
in
subl
cltd
jnp
mov
push
xor
lds
xor
push
sbb
inc
and
pop
outsl
jmp
add
ficomps
inc
inc
nop
dec
xchg
fildll
inc
aaa
ror
out
cltd
mov
cmp
and
sub
inc
push
sbb
outsl
xchg
push
adc
aam
aam
pop
gs
ficompl
ja
in
arpl
mov
shlb
add
add
and
cmp
sti
fsubp
inc
push
sub
xchg
cmp
add
add
add
fcmove
mov
lods
cmp
or
inc
adcl
pop
ret
in
in
jnp
lds
mov
inc
repz
or
je
scas
mov
jne
int
lods
push
jge
xor
pop
or
in
add
test
dec
sub
imul
jne
inc
push
adc
xchg
mov
or
aas
into
mov
cmc
lret
or
shlb
lock
jecxz
es
fsub
mov
cmpsl
inc
outsl
dec
push
mov
rcrb
push
in
add
frstor
inc
cmp
orl
mov
dec
je
lods
jp
lods
jo
pop
dec
jbe
adc
in
mov
mov
insl
leave
add
jns
insb
lock
outsb
mov
xor
and
adc
std
pop
push
imul
cs
test
xchg
add
fnstcw
notl
pusha
or
and
and
mov
lcall
ljmp
stos
scas
lret
imul
mov
xor
jnp
mov
ss
push
sbb
enter
js
mov
sub
push
mov
addr16
mov
dec
push
std
add
out
mov
aad
fstl
cmp
xchg
fs
mov
jno
pop
or
mov
pop
inc
pop
inc
cmp
pop
jg
cli
loop
mov
or
mov
pop
jne
gs
push
jle
xor
xor
and
mov
sbb
roll
scas
add
or
cmp
in
gs
cs
or
cmp
aam
jmp
jecxz
ret
fwait
lds
rcl
ljmp
cmpsl
loope
mov
out
lcall
jne
xchg
mov
sti
lret
sahf
into
hlt
xor
stc
cmp
aaa
int
mov
cltd
pop
repz
ror
lock
jnp
xor
xchg
divb
lods
test
add
add
scas
xchg
mov
fdiv
in
iret
outsl
call
jle
out
mov
ja
rcrl
lock
mov
ss
add
jp
lret
sti
xchg
xor
mov
and
int
movsb
sub
repnz
nop
lcall
aam
stos
repz
hlt
in
inc
icebp
push
xorb
pop
subl
js
stc
pop
push
pop
test
cmp
xchg
mov
inc
addr16
pop
clc
popa
cmc
dec
cmp
dec
mov
push
push
adc
bound
mov
outsb
and
sarb
push
rclb
hlt
pusha
cld
add
dec
xor
fbld
imul
popa
and
lea
popa
loop
mov
jnp
movsb
les
arpl
shr
cld
inc
addr16
sub
data16
or
mov
jl
rcrl
pop
mov
scas
mov
dec
test
fs
add
add
repz
fisubs
lret
mov
add
add
in
push
and
shlb
cmpb
jno
mov
jmp
or
andb
pop
aad
std
xor
imul
dec
mov
aam
movl
push
mov
mov
pop
xor
dec
insb
dec
cs
inc
stos
pop
jecxz
mov
sbb
int
inc
mov
mov
mov
rorb
pushw
inc
mov
mov
or
cmp
jno
sti
xor
jae
and
call
mov
mov
mov
pusha
cmp
mov
mov
outsb
push
xor
dec
incl
mulb
mov
fisttps
xchg
hlt
insb
pop
ss
sub
shl
sbb
or
push
sahf
push
cmp
scas
mov
pushf
pop
inc
adcl
movsl
sbbl
add
push
neg
dec
adc
jecxz
xlat
sahf
fcoms
int
mov
inc
mov
out
sbb
cwtl
jno
test
add
add
add
or
dec
dec
jge
dec
jmp
test
xorb
cmpsb
sbb
insl
jno
push
pop
enter
rorl
lock
xor
mov
inc
jl
aaa
insl
cmc
or
roll
inc
int3
imul
dec
lret
mov
pop
ret
xor
test
arpl
popf
push
cmpsl
mov
jp
jge
test
dec
push
xor
jge
sbb
mov
xchg
add
mov
sbb
out
jbe
push
or
imul
aaa
mov
xchg
fwait
jno
test
gs
cmp
push
and
lea
bound
inc
shrb
aaa
sbb
pop
ret
mov
adc
push
cli
dec
test
mov
push
add
cmpsb
mov
cli
arpl
cmp
out
mov
movsl
cmp
adc
pop
mov
xchg
repnz
push
jb
cmp
inc
dec
adc
aaa
popa
out
xchg
les
add
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
pop
testb
nop
sbb
and
mov
xor
cltd
xor
sbb
push
push
mov
testl
lret
xchg
test
andl
sub
dec
cmp
movsl
ss
push
sbb
int3
mov
adc
jle
scas
popa
lds
lcall
pop
xor
jns
test
cwtl
xchg
scas
insl
lahf
jmp
mov
pop
add
imul
pop
add
and
inc
push
dec
outsb
jg
movsb
cmp
shl
ljmp
clc
shl
mov
daa
fiadds
aas
ljmp
pop
or
add
sbb
insb
xchg
or
ret
pop
shlb
xchg
test
inc
out
gs
clc
mov
mov
sbb
inc
and
into
rcl
push
jmp
push
or
mov
push
mov
pop
xor
lret
pusha
rorb
cmpsb
mov
lret
pop
push
out
add
add
add
mov
sbb
shll
sbb
pop
and
shlb
adcl
idivl
or
jno
mov
pop
cwtl
mov
in
outsb
clc
leave
fsts
and
jo
add
das
push
jae
cli
add
xor
pop
ficoms
fucom
add
aam
rorl
stos
inc
stos
and
int
sar
push
mov
add
fadd
add
lods
negb
mov
pop
ficompl
xchg
aad
mov
mov
push
lds
iret
pop
dec
outsl
fidivs
pop
sbb
test
ds
dec
ret
stos
shll
pop
jl
cmp
ror
sbb
je
jmp
out
loope
xchg
lods
loop
fcmove
pop
sbb
lds
xchg
jne
jno
adc
lock
mov
adc
imul
add
jecxz
push
testl
dec
mov
add
add
jnp
movsb
add
insb
push
iret
inc
pop
test
adc
adc
or
arpl
lret
and
cmpsl
je
lods
jecxz
push
cmpsl
lret
mov
jns
inc
sbbl
jl
rolb
adc
sbb
and
mov
outsb
or
test
arpl
jne
sub
sbb
ljmp
xor
jmp
adc
or
stos
cmp
pop
rorb
and
cmpsb
fmull
fisubl
movsl
lcall
sbb
loop
clc
gs
and
sub
jle
pop
outsl
lahf
dec
adc
xchg
das
add
xor
jecxz
fstpt
loop
insl
cli
mov
loope
sub
getsec
mov
loope
sub
push
out
dec
mov
xor
sbb
lahf
sahf
subl
push
xor
mov
xor
addr16
lods
pop
out
adc
xor
dec
push
mov
shlb
and
daa
lahf
mov
pop
das
xlat
adc
add
add
sbb
in
stos
ja
test
xor
aad
jg
or
add
lods
popa
jecxz
sbb
imulb
pop
mov
out
inc
cld
inc
push
or
mov
add
in
push
dec
mov
xor
lock
sbb
in
mov
lahf
push
mov
dec
jmp
mov
dec
pop
les
sbb
sbb
push
test
mov
bound
or
mov
sub
mov
int
stos
mov
mov
stos
inc
xchg
addr16
xor
shrb
jbe
push
inc
imul
sub
mov
loopne
stos
mov
sub
test
xchg
pop
cmpsb
dec
mov
pop
add
inc
inc
cmp
in
adc
orb
andb
jmp
mov
xor
add
dec
push
dec
inc
or
fs
cmp
cli
mov
fucomi
xor
inc
mov
add
add
xchg
das
jl
mov
xchg
scas
mov
sar
jg
subl
in
xchg
adc
jae
fdivrs
shll
mov
mov
enter
aam
or
cmp
dec
js
cwtl
repnz
adc
andb
xchg
and
adc
add
xor
mov
imul
lock
sarl
lret
divb
lock
cmc
xchg
jnp
clc
adc
jg
pop
mov
das
test
fcomi
inc
mov
mov
jnp
jne
mov
movsb
lret
pop
fwait
xchg
add
fwait
mov
rdpmc
repnz
in
mov
int3
ret
outsl
insl
inc
loop
mov
add
loope
cmc
in
xchg
hlt
scas
sbb
pusha
sbb
arpl
cmp
cwtl
dec
inc
mov
imul
jp
and
iret
lock
in
das
push
add
repz
fcomps
or
xor
jo
lcall
add
push
inc
pop
jns
aas
loopne
sub
xor
fsubl
add
add
add
jle
xor
xor
insb
lock
icebp
push
pop
inc
add
mov
mov
lret
cmp
sbb
xchg
je
xchg
sub
sbb
out
orl
into
sbb
pushf
scas
sbb
out
fnsave
filds
lret
dec
dec
out
xchg
data16
cmpsl
fs
pop
scas
pop
cmp
xor
pop
mov
mov
notl
add
push
test
mov
mov
cli
xchg
xor
pop
lds
in
in
mov
cmp
jecxz
pop
aam
pop
movsl
mov
mov
cmc
mov
and
jbe,pt
pop
xor
sahf
movsb
xchg
pop
popf
add
es
lock
or
hlt
xor
aam
rorb
adc
jo
pop
push
or
mov
add
loope
add
lret
pop
cmpsb
sbb
jnp
mov
push
scas
fs
add
add
add
in
sbb
call
call
filds
loop
push
adc
loopne
xor
dec
rep
imul
xor
pop
xchg
sub
push
xchg
shlb
jecxz
xchg
gs
mov
push
sbb
sbb
mov
cmpsb
outsl
gs
movsb
inc
aam
or
lcall
pop
or
icebp
mov
mov
test
pop
dec
dec
shll
aas
xchg
mov
cmp
adc
pop
jp
inc
adc
enter
loope
sbb
mov
pop
cmc
hlt
aas
pop
sbbl
mov
fcom
cmp
rorb
and
pusha
test
loopne
es
pop
mov
xorb
jl
mov
push
mov
cmc
addr16
mov
pop
dec
call
inc
shll
pop
lods
push
test
dec
sub
dec
cmpsl
mov
add
add
xlat
pop
xlat
jg
mov
jle
ds
push
add
add
int3
int3
mov
add
jae
xor
mov
lahf
and
inc
jge
jnp
mov
arpl
es
and
pop
shr
push
adc
and
daa
mov
or
add
jns
imul
hlt
mov
or
jg
enter
jl
inc
not
xor
sbb
lahf
lods
jnp
das
xor
je
pop
fs
dec
pop
lods
lds
sub
sarl
jmp
aad
push
shr
dec
push
xor
shrb
inc
sub
inc
mov
inc
cmc
bound
lods
int3
inc
outsb
lcall
or
or
sub
mov
cltd
mov
adc
stos
adc
lret
popa
daa
je
loope
lcall
xchg
cmp
test
push
mov
sbb
or
addb
mov
mov
lahf
xlat
mov
dec
pop
xor
and
xor
adcl
push
xchg
add
add
add
fdiv
mov
add
dec
pop
insb
testb
add
add
rolb
cs
xchg
xor
lret
addr16
arpl
je
cmpsl
pusha
rol
lea
outsl
ret
jp
adc
jnp
mov
xchg
and
jne
inc
cmp
or
xor
stc
sub
or
dec
jp
inc
pop
xchg
sbb
pop
cmp
in
inc
push
aad
sub
clc
loope
xor
inc
sti
ja
mov
or
jmp
xrelease
xchg
bound
das
pop
movsl
adc
jge
gs
sbb
loop
repz
pop
cmp
fnstsw
xchg
xor
adc
pop
mov
cltd
fbld
mov
add
lock
dec
push
clc
pusha
mov
jbe
mov
inc
push
or
les
test
push
in
outsl
mov
fdivrp
xchg
fcompl
addl
dec
popf
fidivrs
jo
rol
loope
or
jge
sbb
cmc
inc
cmp
cli
adc
test
mov
fisubrl
xchg
int3
adc
testl
add
imul
shr
sbb
sub
and
cmp
sbb
test
in
dec
scas
pop
mov
pushf
aas
jns
pop
out
cmp
dec
imul
jo
in
stc
mov
insb
daa
cmpsl
mov
fsts
dec
pop
and
add
call
dec
jecxz
dec
shll
adc
into
jl
mov
cli
cs
mov
in
imul
jno
out
adcl
mov
gs
mov
push
mov
mov
mov
dec
dec
sbb
mov
mov
test
adc
lods
ja
mov
cltd
mov
rorl
cmp
pop
cmp
pop
adc
test
out
lods
xor
pop
push
mov
fidivl
or
fwait
cld
icebp
add
add
add
push
pop
push
jmp
shrb
clc
add
add
add
dec
enter
jae
adc
jnp
and
loope
leave
or
sbb
push
call
negl
lods
and
movsl
rclb
icebp
sbb
xor
lods
mov
leave
cwtl
mov
loop
nop
jne
or
sar
out
xchg
mov
dec
dec
les
push
gs
gs
arpl
fxch
ja
inc
jge
fnstcw
pop
dec
mov
mov
movsl
mov
stc
in
in
test
jl
add
icebp
pop
aad
jnp
lahf
in
xor
roll
xor
outsl
adc
mov
out
sub
ret
jecxz
loop
shrb
in
jbe
cltd
stc
repnz
movb
jg
mov
shll
dec
dec
adc
add
mov
divl
test
xchg
xor
cwtl
roll
xor
push
fsubp
sbb
or
push
mov
adc
ss
insl
sahf
and
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
mov
stc
add
add
add
aas
outsb
sub
mov
jecxz
loop
sub
push
jbe
ja
pushf
pop
cmp
dec
jno
lret
mov
push
jge
shl
ljmp
fs
push
ret
xor
arpl
ret
or
ja
sub
sbb
rorl
cmp
adc
aas
xor
call
pop
les
pop
lret
test
xchg
je
stos
popa
cwtl
xchg
arpl
outsb
loop
inc
mov
xor
enter
ljmp
sbb
inc
cmp
mov
jmp
lret
ficoms
movsb
mov
xchg
lret
les
out
xor
jle
sbb
cmp
gs
adc
adc
enter
stos
pop
lods
test
ss
rol
push
pop
sbb
add
std
xchg
mov
js
mov
orb
dec
xchg
arpl
add
add
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
lods
push
mov
xchg
in
xor
cmc
dec
sbbl
push
push
lret
hlt
add
sbb
push
cli
popf
xor
rol
pop
or
mov
dec
jae
jnp
mov
scas
xlat
jne
sahf
push
adc
imul
inc
enter
jge
mov
fbstp
jb
incb
cmpsb
push
add
cwtl
and
jmp
or
mov
inc
sahf
pop
movl
push
sahf
fistpll
ret
dec
popf
outsl
push
adc
and
loopne
xor
movsl
jl
fidivs
arpl
cmp
fwait
inc
mov
add
inc
insb
pop
imul
in
mov
cmp
out
xor
xor
je
lret
lahf
bound
test
stos
inc
add
repz
fwait
in
jl
in
cmp
and
mov
or
out
es
rcr
jge
call
cs
hlt
jecxz
cmp
add
jecxz
and
add
add
aam
int
aaa
das
aam
and
push
cmp
add
add
mov
push
mov
dec
test
scas
add
sub
fsubrl
sub
jl
mov
les
or
or
in
pusha
ret
rcll
pop
sbb
lds
inc
add
shlb
dec
imul
leave
xor
test
stc
subl
add
sub
push
inc
cmp
test
insb
daa
psubq
add
add
xchg
push
dec
cmp
or
xor
xchg
into
insb
arpl
mov
push
inc
roll
adc
xchg
or
or
ret
movsl
popf
loope
pop
xor
loopne
aam
sub
pop
int3
lds
adc
fs
lcall
sub
stc
stos
and
or
dec
fwait
push
adc
data16
ljmp
dec
imul
mov
sahf
pop
shrb
ret
add
movsl
pop
arpl
addr16
sub
xor
add
add
add
insb
imul
ds
ss
push
cmc
pop
xchg
xor
xchg
lcall
out
insl
rcrb
and
ret
cli
sbb
lock
out
push
xor
jns
push
add
xor
aas
pop
repz
or
xchg
dec
cmp
jl
inc
add
or
repz
arpl
sarb
insb
outsl
sbb
xchg
cmp
shlb
adc
push
mov
testb
lock
int3
or
adc
inc
das
inc
negl
xchg
jno
pop
loope
and
outsb
add
and
enter
mov
xchg
pop
imul
mov
cmc
imul
mov
xchg
inc
les
cmpsb
push
sub
loope
dec
sub
mov
movsl
insl
mov
add
iret
jl
mov
xchg
mov
add
out
cmp
cmp
pushl
xchg
xor
movsb
aad
mov
std
add
add
add
add
pop
out
mov
int
xor
cs
mov
cltd
xchg
out
movsl
xchg
add
jb
jmp
cmp
add
test
dec
mov
cmp
cmpsb
loop
ds
cmp
iret
dec
rcrl
shr
mov
adc
mov
mov
or
or
outsb
hlt
aad
inc
test
inc
or
fcmovne
cmp
sub
mov
xchg
loope
orl
pop
lret
popa
out
inc
adc
bound
cmp
push
mov
dec
js
lret
daa
jne
sub
lret
push
mov
pop
jge
jmp
and
out
jle
mov
stos
jmp
fmul
add
call
imul
lods
mov
fcomps
add
fsts
sahf
xor
ss
les
movsl
push
and
mov
lock
add
push
scas
mov
in
or
add
cmp
orb
std
test
cmpsb
mov
dec
fildl
sbb
jge
sbb
pop
jne
arpl
sub
jne
pop
pop
ljmp
pop
cwtl
aad
mov
mov
mov
in
aad
mov
xor
and
aam
call
mov
jae
cwtl
hlt
cs
ret
cwtl
adc
enter
ss
out
movsl
push
pop
xlat
lods
cmp
repnz
mov
mov
jae
push
xchg
push
dec
cs
lahf
inc
adc
jle
nop
dec
dec
jp
add
lock
mov
rol
adc
test
pop
daa
in
lods
push
sub
sbb
jg
xchg
in
xor
in
loop
je
loopne
subl
cmc
and
sub
fucomi
adc
dec
cmp
loopne
ja
adc
sbb
ficomps
mov
jbe
inc
dec
pushf
xlat
add
cltd
aaa
xchg
and
movsl
mov
mov
mov
ret
inc
nop
incl
add
add
add
idivl
mov
aaa
adc
lds
pop
inc
xor
sub
inc
daa
mov
fisubl
negb
and
mov
fstpl
mov
pop
out
push
xchg
sub
das
mov
add
jns
hlt
fwait
adc
repnz
decb
push
les
es
ljmp
fistl
mov
and
sub
scas
jl
add
outsb
and
call
xlat
shrb
lahf
loope
adc
mov
bound
cmp
cld
mov
sbb
lods
jp
sbb
jmp
or
adc
sub
out
subb
xchg
ljmp
push
jmp
jnp
or
enter
mov
test
rclb
or
sbb
rclb
jne
roll
aaa
sub
cli
out
mov
xor
mov
mov
repnz
pop
lahf
adcl
mov
inc
fdivl
mov
ljmp
add
add
push
mov
cwtl
outsb
iret
push
and
adc
sahf
adc
andl
add
jne
push
push
cli
or
sarb
sbb
add
inc
mov
lock
imul
test
cmpsl
xrelease
pop
cld
push
push
cmp
pusha
xor
sbb
gs
inc
mov
into
sbb
ret
cltd
xor
imul
mov
nop
lret
pop
xchg
add
inc
add
mov
aaa
outsb
fdivrl
or
jg
aam
mov
dec
loope
push
dec
or
insb
adc
fcoml
mov
or
cmp
test
enter
add
fldt
mov
movb
xchg
out
test
jmp
vpsraw
jb
cmpsl
lock
jo
jle
xor
jae
rol
mov
mov
aam
mov
call
jnp
push
xor
inc
stc
mov
mov
lods
imul
mov
add
add
add
push
inc
add
fadd
or
stc
cmp
bound
sarl
cmp
pusha
inc
sub
mov
or
fwait
aad
test
inc
fimull
and
fsubrl
dec
or
xchg
xchg
imulb
jns
call
jo
fsubl
rcrl
add
mov
mov
sub
mov
sub
jnp
mov
adc
cltd
push
pop
negb
inc
das
xchg
push
leave
ret
pop
outsb
cmp
aam
mov
mov
pop
lock
and
test
in
pop
or
mov
pop
pop
adc
push
bound
fnstenv
adc
sbb
rclb
lock
jne
push
and
stos
out
popf
popa
scas
push
bound
lcall
pop
dec
xlat
lcall
call
dec
cs
xchg
sub
scas
or
cmp
aad
jmp
pushf
add
add
add
fsts
gs
aaa
inc
cmpsl
lea
addr16
mov
sbb
movsl
in
clc
sub
ret
scas
or
and
mov
add
jmp
cmp
mov
dec
aam
shr
daa
sahf
ret
xchg
sti
push
enter
aaa
fdivrl
js
lds
mov
push
mov
mov
mov
iret
or
pusha
into
pop
push
loope
push
popa
mov
fucom
aam
sarb
or
pop
xchg
sub
cli
insl
xor
cmp
aad
stc
xor
push
xor
cmp
movsl
jae
add
cwtl
xchg
jns
loopne,pt
fsubrl
add
xor
jge
cmpsb
pop
mov
push
jle
stc
sbb
scas
imul
loopne
dec
mov
aas
dec
or
mov
leave
fdivs
ds
mov
inc
add
xchg
enter
push
fbld
jbe
aas
mov
add
add
lods
pop
jb
push
cmp
test
int3
mov
out
pop
stc
push
add
orb
dec
ud0
xchg
mov
pop
test
mov
xor
or
mov
out
xor
jno
std
jns
adc
stc
mov
jae
sub
mov
decb
push
mov
add
lods
enter
pop
pop
pop
xor
mov
xchg
sub
jle
gs
loop
dec
jmp
sbb
in
adc
adc
fs
xchg
push
add
int3
inc
push
jmp
pusha
dec
dec
adc
jl
data16
ficompl
lds
lcall
in
pop
inc
mov
movsw
aad
test
je
dec
add
cmpsl
cmc
mov
incb
sub
push
fxam
cltd
lods
dec
adc
cmp
lock
lahf
insb
add
aam
out
sbb
jbe
sub
and
mov
into
fwait
add
mov
movsb
movsb
add
add
add
mov
in
push
xor
jl
stos
mov
leave
jnp
xor
aas
cmp
add
push
shll
mov
mov
cli
xchg
movsl
mov
pop
cmp
adc
lea
gs
mov
dec
repz
mov
mov
xchg
daa
mov
lock
lret
adc
shl
repz
ficoms
sbb
mov
cmp
lahf
imul
sub
mov
repz
mov
scas
push
outsl
push
jp
mov
fwait
cltd
dec
std
add
repnz
out
or
arpl
jnp
jge
scas
xchg
push
shl
insl
and
fs
mul
sarl
aad
jg
dec
pop
outsb
jno
aas
push
insb
jb
cmc
test
mov
add
xor
cli
or
subb
jmp
adcl
and
mov
add
jl
test
out
mov
pop
sarb
in
shr
sbb
add
add
push
movsl
sar
aaa
pop
sarb
frstor
cwtl
xchg
psrad
mov
enter
mov
sbb
jne
call
lods
xor
dec
mov
out
jne
cmpl
lret
push
add
cmp
loopne
jle
inc
add
cld
mov
inc
jle
loopne
cmc
hlt
das
or
or
pop
repnz
sbb
mov
out
gs
pop
out
cmpsb
sbb
mov
push
loope
adc
xchg
cmp
lret
loopne
mov
repz
std
push
mov
add
lods
out
xor
test
sti
test
leave
inc
lods
adc
cmp
add
mov
xchg
mov
mov
cwtl
into
ficompl
insl
mov
pop
stos
pop
xchg
adc
pop
clc
call
in
and
mov
or
shrb
push
imulb
add
add
sti
inc
out
aas
mov
shr
shrb
add
add
mov
and
jnp
inc
nop
xor
test
aas
mov
or
movsl
mov
pop
or
push
ret
data16
mov
add
xchg
push
sub
jns
ret
jle
push
loopne
cld
xchg
push
add
dec
pop
add
jne
sahf
xor
test
xchg
inc
xlat
push
stos
lods
push
jnp
mov
ret
or
mov
inc
mov
aas
sbb
or
push
cmpsb
pop
sbb
pop
cmp
sarl
mov
mov
fsub
sbb
mov
and
int3
add
aas
jl
fsubs
pop
sub
das
nop
clc
shl
rcrl
cld
iret
and
xchg
idivl
repz
sub
cmp
addr16
ret
loope
jb
add
mov
out
mov
mov
push
aad
clc
cwtl
outsl
cmc
fldcw
les
push
bnd
dec
leave
and
daa
fs
add
add
xchg
adc
xor
sub
mov
push
insb
dec
mov
std
xchg
loop
xlat
das
dec
jl
fcompl
sbb
ficompl
mov
jp
sbb
jns
lret
sub
testl
xchg
bound
pop
push
jl
inc
lea
cmp
sbb
shr
fisubrl
and
jle
fmull
mov
push
jae
pop
sbb
ffreep
ret
repz
lret
pop
test
cmc
sub
movsl
mov
shl
inc
jl
outsl
inc
or
mov
add
xor
bound
and
je
das
stos
add
push
jp
lock
mov
jae
cli
les
loope
adc
mov
fcmovnbe
aaa
scas
xor
jge
clc
mov
test
xchg
movsb
int3
addr16
cmpsl
out
fs
sbb
leave
cmc
mov
sub
sbb
in
out
ja
filds
clc
jp
mov
add
add
add
cli
int3
jns
push
sbb
enter
sbb
insl
adc
cmc
sti
jp
fbld
inc
cmp
mov
and
mov
pop
inc
add
push
in
cltd
add
ret
mov
arpl
jns
mov
stos
mov
jb
ficoml
add
hlt
enter
jl
mov
imul
pusha
lret
dec
mov
into
pusha
push
js
loopne
mov
cld
addr16
sub
lock
aam
cmpsl
mov
stc
sub
inc
lret
les
mov
cmpb
mov
inc
leave
lahf
bswap
dec
and
push
pop
mov
test
sar
xchg
jl
seto
sub
rolb
fcoms
pushf
insb
addr16
dec
sbb
pushf
cmp
shll
jl
or
mov
add
mov
in
mov
clc
out
loopne
ss
jmp
scas
test
in
inc
push
or
mov
add
add
lock
pushf
add
in
call
lahf
jbe
movsl
jle
and
jecxz
mov
das
mov
outsb
mov
stos
sub
jbe
or
test
lahf
sub
int
inc
push
dec
testb
dec
mov
gs
aaa
dec
push
add
shl
pop
xchg
shlb
pop
lock
sbb
xlat
sub
inc
mov
daa
das
cmp
out
jl
pop
dec
lcall
cmp
push
mov
aaa
vpclmulqdq
in
loop
or
or
cmp
addb
cwtl
jl
pop
adc
int
or
jg
sahf
mov
jle
sbb
xor
adc
sbb
addr16
lea
out
xchg
mov
xchg
push
je
gs
sub
xchg
adc
into
mov
jg
adc
pop
outsl
push
mov
fwait
add
es
mov
outsb
dec
mov
add
mov
jg
neg
pop
daa
inc
pop
inc
jne
mov
add
add
scas
jno
loope
fidivrl
lret
push
and
popa
dec
push
into
ljmp
sbb
push
fildl
mov
dec
and
fisubl
ja
aaa
repnz
insb
mov
clc
imulb
sbb
fnstsw
nop
jg
xor
sub
jg
movsb
movsb
adc
jne
sbb
leave
xor
addr16
pop
mov
clc
sbb
push
loop
outsl
mov
lock
rcll
add
sti
cmp
mov
xchg
or
push
pop
sbb
dec
dec
pop
xchg
loop
ret
cltd
xchg
imul
in
pop
fdivs
pop
adc
gs
push
int
ret
test
inc
cmp
and
pop
aas
test
push
mov
rcll
or
add
add
cmp
sti
jg
cmp
je
cmp
call
add
add
popa
das
adc
loopne
xor
adc
iret
push
push
push
push
cmp
inc
inc
or
outsb
int
sub
arpl
dec
test
mov
sbb
mov
out
mov
es
idiv
pushf
pop
into
xchg
jecxz
xor
pop
jl
mov
jmp
stc
xor
int
jns
outsw
push
jne
mov
jmp
rorb
sar
adc
test
add
loop
push
lret
imull
cmpsl
mov
inc
pop
add
aam
xchg
mov
repnz
push
hlt
jbe
in
adc
in
inc
mov
xor
clc
sub
xorb
imul
repz
aad
xor
push
cmp
bound
movsb
inc
xor
adc
orb
cmp
adc
stos
mov
mov
add
cmpsl
dec
lcall
jno
xor
stos
fwait
daa
int
hlt
test
push
cmp
pop
adc
scas
aam
jnp
fstp
fcompl
xor
enter
add
add
add
jge
jmp
loope
iret
mov
orl
cmp
push
lock
mov
jle
addr16
xor
cmc
int3
xchg
inc
notl
incl
inc
insl
loopne
fadds
fisubrl
xor
xor
imul
mov
pushf
and
or
mov
pushf
fadds
push
jle
popf
sbb
xchg
loope
xchg
mov
out
into
loopne
cmpl
cmpsb
pop
cld
loope
stc
in
mov
adc
pop
loope
cmp
xchg
cli
sahf
inc
xlat
mov
imul
or
jne
lcall
test
or
jmp
lods
clc
jo
sbb
jge
lock
add
inc
mov
dec
sbb
dec
dec
adc
pop
push
xor
das
mov
inc
clc
in
sbbb
push
inc
add
nop
bound
outsb
mov
jno
std
outsl
mov
add
jnp
and
or
add
add
push
sub
sub
pop
push
push
inc
sub
stos
mov
dec
mov
cld
push
or
in
sbbb
xchg
inc
scas
adc
inc
cld
or
sub
mov
mov
out
std
mov
ja
pop
xchg
push
cmp
cmp
cltd
stos
xchg
mov
subb
cmp
mov
or
aad
inc
jo
je
fisubs
jle
out
inc
mov
dec
in
stos
push
jp
mov
loopne
lock
mov
scas
ret
xchg
mov
in
adc
xlat
cmp
fldcw
push
mov
xchg
cwtl
cmpsb
xor
xchg
jno
xor
pop
and
ss
sub
or
xor
xchg
dec
dec
arpl
push
dec
inc
cltd
jecxz
mov
enter
mov
sahf
fsubs
pop
sbb
sti
loopne
mov
or
push
hlt
lods
andl
mov
add
add
jmp
fnsave
push
add
add
add
not
mov
daa
jp
clc
scas
movsb
push
scas
adcb
push
lods
into
addr16
and
adc
in
sbb
inc
lods
inc
sahf
sub
fcoms
stos
aam
pop
dec
cmp
aad
sbb
mov
test
sti
cmp
rcr
add
sahf
jne
xchg
mov
ret
test
pop
cltd
movsl
mov
dec
popf
mov
or
or
mov
pop
test
clc
push
or
mov
fcmove
insl
mov
cmp
and
or
mov
lods
xchg
mov
test
lock
lret
inc
jns
imul
test
or
lods
push
mov
and
cltd
ljmp
push
inc
arpl
stc
jnp
sbb
and
dec
clc
mov
dec
jp
data16
cmpsl
bound
mov
rcrl
mov
mov
xor
call
pushf
aas
push
push
push
or
xor
xchg
lds
rcll
push
rorb
add
add
add
cmp
std
xchg
xchg
jmp
push
pop
xchg
jl
es
stos
sbb
pop
push
outsb
xchg
imul
xor
adcl
inc
cmp
lahf
ret
out
call
sbb
sub
xchg
and
push
pushf
or
mov
or
int3
insl
xchg
dec
jnp
xor
add
sbb
cmp
push
mov
mov
ret
cmpl
jae
loope
dec
sbb
in
and
xor
mov
cmpsb
es
push
fists
jne
add
repz
and
mov
add
sti
dec
popf
ja
scas
mov
movsl
mov
xor
push
cmp
cld
lahf
pop
pop
jns
fnstsw
in
aaa
inc
xchg
sub
xlat
leave
sarl
xor
in
sbb
je
hlt
push
add
in
cltd
jo
push
sbb
dec
xor
scas
xlat
sub
xlat
push
icebp
lcall
add
dec
cli
inc
jg
int
xchg
lods
or
and
aam
add
add
add
jge
shll
mov
jbe
movsb
push
xchg
out
into
sbb
in
add
rcrb
jbe
push
sub
mov
mov
test
add
push
dec
mov
or
insb
cmpsl
inc
pushf
mov
out
pop
cmpsl
dec
push
sub
hlt
or
cmp
sbb
int
hlt
jecxz
xor
cmp
mov
cmpsb
jmp
lods
push
add
imul
icebp
shll
jle
push
inc
aaa
cmp
xor
or
or
mov
fimuls
shr
int
jg
mov
frstor
mov
imul
aaa
xchg
pop
xlat
pop
mov
fidivrs
addr16
stos
add
xchg
dec
fisttpl
or
mov
or
out
fs
mov
mov
push
aaa
pop
cmp
out
scas
stc
aaa
rclb
jp
sub
add
add
xchg
std
cmp
jle
fistpll
ficompl
adc
add
add
jecxz
push
loop
das
roll
mov
jnp
push
push
repz
mov
vrsqrtps
cmpsb
icebp
paddusb
push
or
roll
les
mov
dec
pop
ret
mov
xor
aas
aaa
test
adc
out
sub
and
mov
push
mov
or
mov
subl
add
jg
pop
in
adc
lret
hlt
pop
or
aam
test
xor
mov
push
inc
xor
or
shlb
jecxz
dec
in
mov
pop
sub
cmp
mov
je
or
xor
add
rcrb
and
sub
pop
fsubp
inc
movsl
pushf
or
sahf
scas
je
out
fdivr
mov
dec
test
stc
movsl
mov
sub
addr16
inc
mov
dec
mov
add
add
iret
xlat
ficompl
inc
and
add
add
or
xchg
xchg
sbb
inc
loopne
mov
gs
cmpsb
int3
and
xchg
cmpsb
fistl
movsbl
leave
adc
push
adc
mov
jbe
sbb
inc
cmp
cmp
ja
xor
mov
and
add
aam
in
shlb
test
out
inc
push
jecxz
sahf
inc
push
cmc
ss
sub
push
xchg
mov
ja
pop
je
xchg
imul
push
fldenv
cmp
pop
jo
xor
sub
and
mov
mov
push
div
and
out
ret
and
cmp
pop
pushf
bound
lahf
xor
cvtdq2ps
loope
pop
push
ret
popf
leave
add
cmpsl
push
clc
push
clc
mov
mov
std
or
sti
sbb
fdivs
mov
push
add
jne
mov
sub
leave
pop
mov
pusha
sbb
popf
add
cli
cmpb
mov
jae
inc
mov
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
xchg
mov
loopne
add
add
add
sbb
push
pop
shlb
andl
out
pop
movsb
inc
push
adc
mov
fincstp
js
in
inc
mov
loope
test
cmp
gs
scas
es
repz
pop
sbb
xchg
jo
movsl
fists
frstor
jg
or
adc
pop
lods
cmp
call
hlt
push
or
rol
bound
fnstcw
add
stc
js
or
and
fidivl
addr16
aad
out
in
pusha
icebp
pop
stc
mov
ret
adcb
mov
sub
pusha
pop
mov
pop
sbbb
lahf
scas
adc
dec
loope
push
ss
movsl
cs
aaa
mov
inc
mov
inc
sbb
xor
sbb
mov
nop
imul
mov
sbb
mov
test
shll
cmp
fs
sbb
std
sbb
stc
cld
or
popf
fcompl
adc
add
add
mov
loop
mov
push
pusha
mov
push
jae
test
mov
inc
mov
lahf
push
add
mov
xor
test
lret
xor
and
inc
dec
icebp
out
mov
imul
lods
cmp
daa
popa
into
mov
movsl
jg
jno
inc
and
cmpb
pop
cmp
sbb
dec
mov
pop
aam
and
dec
adc
ret
iret
pusha
iret
rcrl
push
jl
push
mov
cmc
mov
out
mov
popf
mov
sub
cmp
call
adc
mov
loope
insb
lahf
lods
inc
fcoms
das
fdivl
dec
cmpsl
pop
cmp
cli
mov
ss
xchg
pushf
std
aad
das
out
out
jo
cmp
xchg
imul
mov
cwtl
test
std
dec
jbe
pushf
rclb
divb
push
es
lahf
ret
rcrb
negl
adc
pop
xchg
cmpsb
inc
mov
inc
call
add
add
arpl
fistps
popa
mov
enter
xor
sahf
jne
js
push
xchg
xor
adc
aad
ficoml
out
scas
inc
js
mov
cmp
mov
pop
inc
test
scas
addl
mov
sub
decb
in
dec
sbb
lahf
adc
jnp
adcb
mov
ljmp
es
add
aas
mov
sub
sub
jge
pusha
and
dec
and
adc
mov
je
hlt
dec
sub
mov
sti
dec
mov
out
ficoms
inc
ljmp
lret
mov
enter
lods
pushf
imull
sub
ljmp
arpl
fnstcw
loopne
outsb
push
mov
mov
lods
jae
outsl
leave
sbb
xchg
mov
repz
mov
out
hlt
adc
push
aas
and
jmp
in
in
mov
dec
pushl
fwait
jmp
xchg
in
push
add
add
add
xchg
xchg
repz
scas
mov
pop
mov
jmp
add
add
fsts
jae
decb
xchg
inc
cmp
xchg
push
xorb
rcll
xor
pop
mov
mov
fldenv
or
addr16
cltd
jae
fs
divb
pop
dec
jns
das
sti
mov
mov
sub
rcll
out
sub
xchg
or
repnz
aad
xor
cmp
mov
imul
and
cmc
and
mov
orb
dec
xchg
fldenv
jecxz
mov
xlat
and
outsb
sub
imul
add
cltd
pop
outsb
mov
adc
leave
pop
sbb
test
lahf
mov
ret
fisttpl
out
jno
fstpl
andnps
repz
adc
dec
ret
mov
xor
iret
dec
icebp
orl
test
or
imull
pop
sub
inc
ja
pop
aas
dec
push
sub
add
add
out
mov
jmp
inc
iret
mov
push
clc
test
sbb
mov
add
std
push
sbbb
push
cmp
imul
insl
rcrb
aas
push
mov
subl
jp
push
mov
adc
or
cmp
enter
sbb
stos
hlt
mov
faddl
dec
insl
out
cvtps2pi
mov
orl
fnsave
cltd
xchg
ficoml
or
sarb
jecxz
jb
fwait
stc
push
mov
cltd
push
test
js
push
in
jnp
jl
movsb
frstor
fsubrs
clc
mov
dec
shlb
clc
push
jno
outsb
fcomi
sbb
or
mov
bswap
cmp
ret
mov
push
push
jmp
pop
jno
sbb
add
test
ds
js
push
insl
ljmp
sub
xor
inc
repz
jae
ja
div
mov
not
cld
hlt
sbb
add
add
lods
sub
enter
jp
sub
mov
xchg
dec
and
mov
xchg
pop
lock
inc
sub
xor
xchg
js
jnp
add
aaa
loop
lret
lcall
mov
xchg
cs
test
addl
and
leave
cmc
iret
sbb
dec
pop
scas
or
mov
or
sbb
cmc
adc
test
mov
ficoml
pusha
mov
jmp
test
cmp
xor
adc
test
push
fwait
pusha
rolb
out
xor
pop
dec
daa
je
jb
hlt
mov
imul
push
cmc
loopne
int
in
in
mov
jecxz
xchg
push
xchg
ficoms
cmp
adc
or
and
xor
lcall
mov
xor
mov
push
add
ljmp
or
ja
mov
adc
sub
jg
iret
inc
xor
cli
std
jg
push
pushf
dec
lock
ljmp
add
sub
dec
xlat
xor
repnz
popa
sbb
push
loop
sbb
iret
xchg
dec
add
pop
fcmove
rcll
mov
lods
push
movsl
test
and
xchg
pop
enter
test
mov
jbe
adc
mov
sub
shrl
sahf
lods
test
xchg
dec
lcall
add
or
or
scas
stc
push
and
mov
fbstp
jmp
pop
cli
popf
xor
sub
popf
sbb
sbb
mov
inc
ljmp
adc
jg
and
inc
lahf
rol
test
rclb
add
jecxz
xchg
or
cwtl
xor
dec
int3
lret
out
cli
mul
xchg
jno
outsl
jecxz
iret
jle
sahf
leavew
test
mov
xor
push
jl
mov
jns
mov
pushf
addb
add
testl
incl
sbb
lds
out
cld
sbb
add
add
cmp
mov
xor
push
push
je
in
sbb
sti
sahf
cmp
sarl
fisttpl
movsl
stos
stc
xor
and
dec
js
and
dec
ret
jmp
pop
cmpsb
sbb
jb
sbb
mov
xor
sahf
mov
push
aad
jb
sub
inc
mulb
add
mov
or
lea
lret
add
es
xchg
mov
rorl
adc
jecxz
mov
es
jl
stos
xchg
or
jb
loope
mov
add
cmpsb
xchg
pop
add
setnp
pop
mov
arpl
cld
dec
bound
js
sbb
cmp
shrb
add
les
lcall
pusha
xchg
arpl
js
insl
jle
xchg
scas
mov
enter
pop
push
outsb
les
or
or
addr16
bound
add
es
jg
pop
or
xor
adc
sbb
add
add
scas
shrb
mov
xor
movsb
outsb
pop
and
mov
outsl
push
movsl
jbe
mov
jge
icebp
imull
dec
aas
push
icebp
mov
ficomps
push
push
inc
cmp
mov
cmpsb
inc
mulb
popf
addl
and
rclb
mul
mov
int3
gs
sbb
int
fdivr
xchg
test
jecxz
cwtl
pop
decl
jns
xchg
xchg
ljmp
repnz
xchg
push
add
addr16
cmp
repz
xor
sub
inc
xchg
ss
jns
ja
xor
inc
ret
cmp
and
test
inc
cli
xchg
fimuls
stc
mov
cmp
into
or
xchg
adc
outsb
test
dec
xor
shrl
repz
cwtl
dec
bound
xchg
xchg
ds
aas
adc
pop
stos
push
mov
inc
cmc
sub
loopne
dec
push
inc
sub
adc
icebp
xchg
fstpl
add
add
or
dec
push
cmp
sbb
add
arpl
decl
mov
in
mov
cld
movl
sbb
insl
idivb
lcall
fcoml
arpl
sub
sbb
fstpt
inc
fs
xor
xchg
scas
and
pop
std
dec
cld
arpl
test
lds
pusha
mov
repnz
popa
rcrb
fisttps
int3
lods
in
testl
xlat
add
popf
push
sbbb
adc
ss
mov
mov
ret
pop
fucomi
outsl
mov
mov
dec
outsb
fidivrs
sbb
cwtl
pop
adc
add
je
jg
aaa
sbb
lahf
mov
inc
test
or
shrl
sbb
mov
or
pop
and
dec
ss
dec
jns
pushf
jg
hlt
bound
mov
inc
repnz
out
mov
jo
xlat
xor
mov
mov
add
add
js
sbb
xchg
mov
leave
jb
mov
push
push
or
jp
pop
bound
adc
pushl
or
sbb
fbstp
shl
inc
sar
aam
in
cld
xchg
outsb
jg
push
jo
pop
add
shrl
addr16
push
movsl
pusha
rcll
lret
lods
inc
shrb
add
push
jae
mov
das
fstpl
nop
mov
int3
out
iret
pop
dec
iret
cltd
mov
or
sarl
or
mov
test
add
jne
inc
outsl
test
rorb
sbbb
popa
mov
enter
fwait
ret
out
lods
imul
adc
into
xchg
and
adc
cmp
or
pop
rcll
xchg
mov
jb
test
inc
into
das
xchg
ret
jg
test
bound
jne
pop
sbb
ds
add
ficoms
stos
sbb
call
mov
or
add
add
add
std
or
es
xchg
dec
js
jne
pop
and
cli
push
mov
lret
jo
jmp
sti
fildl
add
pushf
sub
test
std
mov
mov
add
test
pushf
mov
xchg
inc
adc
mov
out
pop
xchg
imul
imull
sbb
cmp
movsl
push
or
shll
lds
xchg
dec
sub
xchg
adc
mov
in
sbb
or
sbb
jno
cltd
fwait
xor
insb
sub
aam
sbb
or
sti
in
add
xchg
fidivrl
loope
aam
aaa
sub
test
roll
adc
mov
sub
jmp
mov
dec
test
jg
mov
scas
cmp
out
cs
cmpsl
dec
insb
push
jns
pushf
mov
out
stos
jge
or
push
mov
and
add
add
sbb
jb
jg
or
pop
xor
sbb
call
cmp
shl
enter
mov
mov
ss
xlat
aaa
repz
subb
cltd
mov
outsl
fsubs
popa
push
sub
mov
xor
insl
or
stos
psubd
push
sbb
mov
inc
test
ljmp
insb
sbb
outsb
or
sub
add
cmpsb
in
jne
pop
rol
pop
or
xor
and
test
out
movsl
outsb
adc
add
pop
iret
pop
jmp
mov
mov
in
scas
mov
ret
cmp
fwait
aam
and
jbe
fwait
mov
fs
sub
mov
cltd
cmpps
sub
inc
xchg
stos
into
std
js
add
mov
cmp
ficompl
xchg
ret
sub
xchg
xchg
ret
fbld
test
add
add
sbb
out
xchg
iret
push
aas
add
mov
add
add
add
pusha
mov
cli
mov
add
pop
push
mov
lock
dec
mulb
mov
jae
xchg
stos
in
dec
and
jg
sbb
push
scas
mov
ss
stc
mov
xor
cmp
push
push
loopne
aas
dec
cld
cmp
mov
jb
test
stos
or
imul
jge
fsub
jne
into
or
inc
jge
lret
notl
out
adc
push
bound
mov
cmp
xchg
mov
leave
xor
cmp
movsb
in
jae
push
test
jne
inc
or
sbb
rol
sub
arpl
loop
stos
jg
repz
push
xor
inc
das
out
dec
xchg
leave
jmp
jg
pop
insl
inc
js
jo
out
stos
mov
jne
je
cmpsl
fiaddl
sbb
into
inc
jno
pop
sbb
pop
or
or
arpl
out
pusha
lea
shll
pop
rol
aam
add
cmp
out
loope
jns
cmpsb
lock
adc
and
add
add
movsb
test
or
add
add
dec
inc
mov
test
pusha
popa
lods
in
push
pop
sub
sbbb
ds
movb
jl
test
sahf
mov
cmpsl
inc
mov
into
sbb
push
jb
adc
and
push
pop
mov
loop
mov
mull
pop
adc
movsl
sbb
lods
rclb
out
mov
jge
pusha
jp
dec
fiaddl
fcmove
imul
cmc
mov
jb
inc
ret
inc
in
fs
fsubp
hlt
pop
inc
orl
xchg
ja
xor
mull
je
jne
les
lcall
jns
testl
lods
xorb
inc
lret
lcall
repnz
and
shlb
dec
out
mov
push
imul
fidivrl
stc
sti
mov
and
mov
and
out
ss
stc
xchg
jle
add
add
lods
jg
push
mov
mov
out
movsb
sbb
add
add
add
lods
lahf
fildl
or
aas
in
lret
daa
jle
shlb
leave
in
fcmovbe
and
dec
inc
inc
dec
push
cli
imul
jmp
ljmp
movsl
fnstsw
lea
test
roll
add
arpl
or
shrb
movsl
pop
into
or
addb
and
sti
add
xor
xchg
arpl
movlps
or
push
enter
cltd
fisubs
sbb
sbb
mulb
mov
inc
mov
es
jp
mov
adc
dec
cmc
or
scas
sbb
cmpsl
lcall
cmp
and
cmc
and
into
shlb
aaa
dec
test
scas
je
dec
inc
pop
and
pop
in
inc
mov
adc
push
jbe
push
sub
pop
sbbb
scas
jae
clc
bound
add
add
jg
cld
ret
add
push
add
add
add
mov
cmpsb
mov
sbb
dec
hlt
sub
icebp
mov
shrl
roll
mov
mov
mov
dec
mov
loope
nop
in
inc
lret
inc
js
lret
cmp
mov
aad
inc
fnstenv
imull
fiaddl
scas
adc
xchg
fs
xchg
rcrl
adc
jno
mov
mov
cmp
xchg
mov
loopne
aaa
repz
cmp
lock
ds
pop
popf
movb
icebp
mov
xorb
dec
lcall
mov
inc
scas
mov
sar
fnstenv
jmp
inc
sub
pop
ret
push
lret
inc
mov
xchg
add
addr16
mov
not
js
mov
mov
pop
push
mov
into
sub
insb
mov
dec
xor
push
mov
adc
adc
add
mov
iret
mov
dec
das
pop
fbld
add
test
or
or
fists
xchg
dec
inc
mov
jb
lret
xchg
lcall
ret
iret
mov
lock
push
repz
sub
mov
push
add
cmp
ja
fsubs
mov
je
lods
testb
pushw
sbb
cmpl
push
inc
arpl
add
push
outsl
adc
lahf
cmp
mov
and
inc
repz
sbb
mov
clc
xchg
lods
rol
xchg
sbb
push
leave
or
leave
lret
xlat
int3
inc
sub
in
sub
call
mov
lret
jbe
fmull
and
add
dec
mov
daa
cmc
lods
stos
popf
imul
sub
movsl
and
xor
mov
cwtl
lds
mov
mov
adc
xchg
inc
stc
jae
xor
sbb
shll
in
popa
out
aad
dec
or
jg
arpl
and
pushf
sub
add
add
add
mov
loope
xchg
jo
js
cmp
das
sub
in
outsb
out
adc
outsb
out
test
push
out
repz
test
int3
xchg
adc
filds
cmc
push
lcall
ss
mov
pop
dec
sbb
mov
pop
pop
push
sahf
or
push
call
push
ret
mov
push
sbb
lock
dec
xchg
scas
out
sbb
lods
cmpsb
push
push
data16
mov
roll
dec
push
bound
and
cmpsl
bound
and
cmpsb
push
fs
repz
das
add
adc
icebp
outsb
xchg
pop
loope
or
cmc
in
dec
lahf
outsb
push
dec
stos
push
pop
out
sbb
or
pop
js
in
test
mov
das
adc
clc
movsl
das
or
jae
sub
into
and
ljmp
add
mov
mov
push
sbb
cmpsl
iret
xchg
mov
mov
mov
rorb
shlb
cli
clc
cli
clc
sarb
sti
mov
add
add
add
jbe
lods
push
jbe
cwtl
hlt
xor
mov
scas
movsb
loop
sbb
setl
imul
gs
or
loop
fdivrp
in
or
cld
in
imulb
iret
call
push
mov
orb
sub
mov
or
ret
fs
in
sbb
sub
aaa
mov
sti
sbb
jp
jmp
dec
gs
out
add
push
lret
jg
cwtl
push
shrl
xor
in
aas
in
lea
cs
leave
pushf
popa
push
repz
push
enter
aas
aaa
imul
dec
es
xchg
test
outsb
pop
dec
pop
repz
test
repz
mov
pushf
xchg
fdivl
loope
movsl
or
imul
imul
fldt
enter
cltd
sub
xor
xchg
int
imull
push
xor
test
imul
mov
pushf
int
sub
add
add
push
shll
sub
out
call
push
pusha
popa
arpl
or
pop
xchg
pop
jno
test
mov
imul
mov
int3
xor
xor
repnz
sbb
movsl
adc
pop
xlat
dec
int
cwtl
es
dec
push
pop
sub
mov
mov
enter
xor
inc
mov
push
fiadds
in
sbb
repz
fisubl
addl
jns
jmp
push
test
sub
jmp
mov
xor
aas
aam
lods
loopne
sbb
inc
pop
call
xchg
dec
mov
fists
pop
repz
xor
xchg
add
imul
repz
cmp
jecxz
jl
popl
aas
sbb
jno
cld
push
xchg
mov
push
loopne
je
fldt
add
sbb
pusha
adc
scas
rcrb
cmp
cs
imul
mov
cmp
fs
es
data16
insb
daa
mov
inc
mov
pop
xor
add
add
add
and
outsb
repz
movsb
inc
aad
stos
inc
push
adc
sbbl
iret
lret
loop
arpl
inc
jo
inc
andb
movsb
mov
cmpb
sti
inc
lahf
test
inc
mov
or
popa
ficompl
and
mov
cmp
inc
inc
mov
mov
in
adc
loop
je
insl
lahf
pop
pop
jbe
icebp
leave
mov
lahf
in
push
mov
imul
rcll
dec
fsubl
dec
dec
add
mov
cli
pop
aam
add
jle
or
sar
in
inc
push
push
repz
and
cmp
popf
xchg
ja
cs
lret
jno
test
rcl
comiss
xchg
and
imul
decl
push
jmp
fdivrs
adc
push
leave
dec
cmp
add
add
dec
mov
imul
xchg
mov
add
add
sahf
das
neg
sbb
lods
insl
cmp
add
bswap
xor
pop
mov
mov
dec
fnsave
jmp
xor
pop
jecxz
mov
xlat
leave
imul
aaa
imul
mov
inc
add
dec
pop
xchg
sahf
sti
icebp
xchg
repz
mov
hlt
test
int3
mov
test
jecxz
or
and
mov
and
cs
fisubs
jp
imul
popa
test
jecxz
xchg
mov
cmc
xchg
js
jno
mov
add
jp
fadds
das
ja
sbb
xor
rcll
jp
icebp
pop
jmp
test
jge
test
pop
popf
inc
dec
pop
jae
or
lret
xor
lods
adc
lds
adc
jmp
inc
lret
or
lcall
inc
jmp
shll
push
cmpsb
das
xor
sbb
jnp
in
fisubs
add
push
inc
outsb
repz
push
sti
cmpsl
enter
xor
cmp
add
add
add
cwtl
inc
leave
hlt
or
imul
pop
dec
in
mov
fldl
inc
mov
jecxz
sub
jle
mov
dec
out
pop
xor
inc
mov
sbb
sbb
and
and
and
shlb
adc
cs
sub
mov
js
repz
subb
arpl
jae
mov
mov
out
cld
cmp
push
push
scas
clc
pop
pop
mov
dec
lods
bound
repnz
sub
inc
aas
inc
idivb
and
and
push
push
add
sub
or
dec
jmp
imul
icebp
jecxz
test
sbb
push
ss
scas
inc
sbb
jae
add
cmp
mov
inc
or
pop
add
imull
xchg
mov
mov
movsl
jne
jne
dec
xchg
jp
nop
lret
js
test
js
std
xlat
call
cli
jle
fcmovnb
addl
add
push
and
std
mov
dec
push
sbb
ret
sub
add
add
es
and
outsl
in
xchg
cmp
cmp
or
and
pop
adc
in
cmp
std
shll
in
iret
shrb
jbe
mov
sbbl
xchg
ret
mov
mov
push
stc
cli
pop
je
in
rcll
jbe
sub
inc
sbb
inc
imul
inc
or
cmp
stos
mov
add
dec
loopne
call
daa
nop
mov
mov
inc
pop
xchg
push
cs
sub
xchg
test
cmp
add
outsb
or
mov
orl
daa
out
push
test
je
mov
pusha
jae
mov
dec
mov
cmpsb
cmp
xchg
dec
int
out
pushf
dec
aas
inc
inc
cmp
jle
jb
gs
xchg
leave
dec
jle
sub
dec
mov
mov
mov
inc
cwtl
jno
into
lock
push
lods
xor
lds
xchg
and
inc
and
lcall
add
add
add
jg
popl
adc
inc
add
sbb
sub
fdivs
gs
out
lcall
inc
cmp
mov
mov
sti
add
sahf
repnz
xor
xor
cwtl
jns
sbb
mov
dec
stos
push
pop
std
pop
xor
pop
lea
xlat
test
stc
fbld
sub
clc
stos
sub
cmp
xchg
fwait
ret
js
cmp
outsl
gs
add
loop
or
dec
pop
mov
bound
nop
jecxz
mov
je
mov
icebp
test
stos
insl
push
and
jp
pop
hlt
test
scas
add
jl
movsl
jp
rcrb
ds
in
dec
adc
ss
pop
adc
iret
leave
repnz
sub
lds
jp
xchg
inc
mov
add
xor
add
add
xchg
ficomps
cmp
lahf
xlat
mov
add
add
add
in
das
ss
jns
mov
pop
imul
pop
xchg
iret
sub
push
or
mov
test
inc
push
lock
dec
add
mov
dec
cs
pop
cmpsb
in
ret
in
and
cs
outsl
out
sub
xchg
hlt
xor
ds
dec
insb
lock
fs
or
push
loope
inc
xor
xchg
inc
in
or
sbb
stos
js
std
sbb
rolb
fdivp
and
ljmp
loopne
pop
push
mov
lods
xchg
and
arpl
jp
mov
nop
loop
push
out
testl
lret
loope
adc
lret
stc
repnz
xor
mov
es
pop
lods
shrb
stos
sub
cmpsl
sub
dec
repz
push
movsl
sub
mov
int
test
clc
mov
mov
hlt
and
arpl
ja
sub
add
rol
dec
das
add
add
add
rcr
cltd
sub
jns
dec
pop
stc
dec
inc
fstsw
into
dec
push
xchg
dec
dec
and
aaa
mov
scas
lock
inc
fwait
in
fs
xor
icebp
in
cld
cmpsb
dec
mov
dec
lret
cs
arpl
cli
movsb
cmc
mov
or
mov
cmp
mov
fidivrl
les
imul
outsl
pop
sbb
imull
std
ljmp
add
sub
mov
adc
sbb
fistps
test
xor
xlat
fwait
fs
stos
mov
popf
inc
cmp
addr16
loop
jl
xor
fldln2
movsb
test
mov
and
icebp
cld
or
sti
dec
mov
xchg
xor
mov
mov
shll
sub
mov
imul
ds
add
jecxz
mov
test
lcall
sbb
jle
inc
lock
mov
or
lods
dec
pusha
fsts
add
add
add
jns
inc
and
in
xor
pop
mov
inc
sti
inc
inc
rol
rcrl
test
add
pop
scas
dec
in
clc
popa
adc
mov
mov
jg
jne
mov
adc
xchg
or
bound
jle
fcmovnb
sbb
pop
jae
aas
in
pop
aaa
lcall
add
in
mov
inc
cmp
push
sbb
sbb
sbb
test
mov
fisttpl
lret
add
xor
sahf
pop
ljmp
xchg
dec
fiadds
cmp
xchg
aad
sbb
lahf
stc
les
outsb
push
dec
out
scas
imul
add
mov
dec
jecxz
icebp
or
jnp
mov
ss
or
pop
cltd
dec
out
inc
sub
jae
jmp
mov
ret
fs
pop
arpl
arpl
jle
mov
add
add
sti
pop
jge
neg
hlt
add
adc
xor
add
add
les
inc
sub
in
pop
dec
cs
pop
insb
stos
dec
jl
cltd
clc
cmpl
repnz
loope
iret
xchg
lret
lret
loope
sub
test
dec
ds
dec
addr16
dec
vsubps
adc
add
arpl
pop
mov
in
fnsave
mov
adc
xor
in
adc
clc
push
pop
and
push
ja
fstp
jno
ljmp
mov
inc
addl
sbb
cmpsb
mov
out
sbb
or
aam
cmp
or
mov
xchg
dec
and
mov
imulb
loopne
and
inc
cmp
dec
lods
sub
inc
sub
fildl
repz
fwait
out
int3
call
hlt
xor
fidivrs
xor
dec
fcmovne
xorb
jge
test
popa
pop
insb
jb
push
mov
cmp
xor
icebp
pop
add
fiaddl
or
daa
adc
pusha
cltd
fsub
std
in
popf
in
stc
jmp
dec
mov
das
pop
xor
add
add
dec
pop
or
out
in
add
and
or
adc
pop
mov
sub
and
insb
stos
or
sbb
std
pop
cmp
repz
insl
in
gs
and
es
das
push
cmp
mov
int3
pop
addr16
lret
push
imul
loope
cmp
jmp
add
mov
mov
mov
in
cmp
mov
mov
repnz
cmp
push
mov
test
test
out
or
aaa
dec
test
out
pop
mov
cmp
pop
das
hlt
jp
push
jge
pop
jmp
outsl
js
dec
or
test
or
movq
movsl
cmp
jns
gs
in
std
sbb
or
add
imul
das
out
cld
mov
adc
sarl
pop
jp
jnp
sti
xchg
jle
jp
lods
xor
fldenv
xor
add
add
fcompl
dec
push
mov
mov
mov
insb
mov
jae
push
add
das
and
sbb
imul
cmp
das
pushf
sub
jne
je
in
loop
jl
not
lret
mov
adc
jle
fwait
int3
sub
sbb
bound
and
xchg
lock
popa
fbstp
mov
pop
xchg
hlt
jge
jae
aad
fdivrp
sub
pop
out
fbstp
adc
cmp
mov
lods
js
aam
fmulp
fiadds
cmp
adc
in
jp
jnp
stos
xor
cmp
mov
sahf
dec
rcrl
lahf
loopne
mov
jmp
dec
cwtl
insb
repz
hlt
mov
sub
scas
fidivl
fucomi
mov
ja
xchg
and
xor
shll
jae
shl
das
jle
jle
arpl
cmp
jns
out
ucomiss
add
add
push
sti
decb
mov
push
pusha
xor
add
add
jg
inc
mov
and
out
push
int3
enter
outsl
lcall
ja
imulb
sbb
or
mov
popf
pop
mov
and
mov
imul
dec
lret
mov
mov
out
dec
dec
mov
ficomps
testb
sbb
push
repnz
adc
arpl
mov
imul
sti
inc
fs
sbb
jge
popa
es
and
lock
inc
cmp
jnp
in
xor
pusha
xchg
jne
mov
aad
mov
cmp
imul
test
or
add
fmull
dec
ret
orl
enter
aaa
sbb
pushf
pop
inc
gs
add
stos
xchg
adc
adc
sti
imul
arpl
push
mov
push
fldcw
aaa
lahf
inc
data16
add
push
ret
cmp
xor
hlt
inc
lret
fadd
fs
add
imul
add
shlb
clc
add
test
jmp
aas
sub
sarl
std
mov
add
mov
mov
mov
sbbb
push
out
mov
loop
push
lods
fstp
mov
cmp
ss
fucomp
daa
mov
mov
fsubl
out
div
or
pop
incl
js
cmpsl
mov
push
dec
mov
out
mov
xchg
int3
fwait
js
add
pop
das
popl
xchg
enter
dec
ss
push
fisubs
icebp
push
popl
push
adc
mov
ss
jns
mov
mov
jns
stos
lea
dec
mov
xchg
in
push
es
push
xchg
mov
test
leave
sub
lds
aad
les
xlat
mov
sbb
int3
mov
pop
cltd
mov
sub
incb
ljmp
xchg
aaa
arpl
add
add
push
pop
mul
push
push
inc
mov
xchg
push
sub
dec
rclb
and
jg
inc
push
pop
enter
xchg
clc
xchg
lock
shlb
popf
dec
mov
enter
dec
and
sub
sub
jg
pop
rcrb
lret
or
lds
imul
inc
dec
cmpsl
movsl
mov
shll
cmp
iret
pop
iret
jmp
sbb
das
pop
pop
dec
sub
mov
daa
hlt
mov
call
inc
xchg
pushf
jmp
push
rolb
push
pop
inc
adc
cmp
mov
popa
inc
dec
sbb
sets
inc
lock
xchg
shl
xchg
mov
jne
faddl
loop
xchg
test
arpl
pop
or
pushf
mov
clc
shlb
insl
mov
adc
pushf
sbb
imul
mov
sar
jne
mov
mov
add
rclb
nop
lcall
aaa
add
add
add
jmp
or
fdivrs
mov
inc
pop
loop
push
pop
std
subl
daa
cmp
or
cld
and
frstor
arpl
les
loopne
sti
nop
mov
push
aaa
xchg
jbe
dec
jmp
mov
lcall
jmp
add
cs
pop
xchg
outsl
cmp
jecxz
xchg
pop
pop
add
insb
sbb
scas
aaa
frstor
sub
cmc
pop
and
dec
adc
and
sbb
lret
cmpsb
imul
add
or
loopne
sbb
xchg
xchg
push
in
iret
xor
xor
fs
adc
es
sbbl
mov
push
cmp
enter
add
dec
gs
insb
jecxz
sbb
cmp
adc
cmpb
cmpsb
in
xor
xchg
repz
push
fadd
int3
loope
inc
nop
fsubs
test
and
or
add
add
jbe
idivl
or
test
add
add
add
pusha
mov
jmp
lahf
jbe
push
and
call
jae
adc
jae
mov
xor
andb
cmp
push
out
das
mov
push
sbb
sahf
xlat
pop
lods
push
xchg
cmp
je
das
xchg
pop
xor
clc
daa
inc
jmp
adc
jl
mov
ss
xchg
push
aad
shl
rolb
xchg
lods
out
testl
sbb
aad
xchg
and
mov
nop
arpl
stos
cmp
fs
outsl
push
sub
mov
das
inc
pop
cld
add
bound
sub
rclb
cmp
mov
int3
lcall
pop
scas
and
cmp
add
cmc
jecxz
into
push
sub
mov
add
pop
outsl
insb
movsb
cmp
push
mov
les
mov
jne
xchg
ret
movsb
mov
dec
mov
ja
xor
jnp
sbb
inc
lock
and
outsb
sub
stos
fs
jmp
leave
aas
shrb
lcall
add
push
fisubs
test
xchg
data16
sbb
fstpt
mov
jecxz
imul
push
loopne
das
xchg
pop
cwtl
jns
repz
add
cmp
stc
test
pushf
push
adc
mov
addr16
leave
gs
daa
pop
jecxz
adc
cli
repnz
cmp
mov
jnp
sbb
lcall
arpl
xchg
int
adc
in
imul
cltd
and
imul
or
pop
mov
inc
add
inc
jmp
jmp
je
push
cmpsb
lcall
cmp
jns
jmp
cmc
rorl
sbb
xor
pop
pop
mov
bound
aam
inc
clc
int3
out
ss
jmp
loope
push
add
popa
pop
lcall
adc
mov
scas
mov
mov
jmp
inc
push
pop
push
ljmp
xor
sub
lret
test
or
popf
push
les
scas
fistpll
outsl
gs
iret
ja
cmp
add
add
rcrb
sub
cs
ret
add
loopne
cs
inc
xchg
out
sbb
sub
sub
push
and
pop
mov
sarb
cmp
dec
dec
push
mov
pop
int3
xchg
lods
mov
add
xchg
sbb
je
subl
int
jns
dec
icebp
mov
mov
mov
inc
in
lcall
jp
mov
jle
fnstenv
cmp
ds
sub
add
push
and
cmpsl
mov
repz
fstps
int
das
sbb
popa
add
xchg
scas
adc
cs
lea
gs
iret
loopne
sbb
or
jle
jmp
xchg
in
cmp
mov
js
ret
mov
mov
in
mov
sti
adc
lock
movsb
loop
or
push
xlat
pop
and
pop
incb
push
sbb
jnp
jnp
cmp
movsb
push
sbb
mov
add
add
add
loopne
rcll
inc
lret
and
add
inc
cli
push
pop
scas
pop
mov
out
dec
inc
mov
iret
iret
add
pop
je
es
pop
sbb
out
cld
xchg
add
out
xchg
aas
out
mov
xchg
in
push
and
ret
testb
pop
stos
push
nop
scas
mov
loop
roll
sbb
xchg
mov
jmp
pop
loop
mov
inc
mov
enter
push
jmp
movsb
mov
test
fisttpll
push
fimuls
decb
xchg
test
cbtw
mov
clc
or
and
test
xor
sbb
xchg
into
sub
lds
pop
dec
pop
aam
mov
xor
cmp
push
sub
pop
test
pop
clc
adc
mov
bound
sbb
sahf
nop
xchg
mov
outsb
pop
shll
sahf
inc
jp
outsl
lret
mov
out
jmp
inc
scas
mov
cmp
add
add
fists
pushf
dec
lock
fiaddl
or
fidivs
sub
in
orb
lret
mov
fstps
or
dec
hlt
ret
mov
mov
sti
insb
jne
jmp
add
insb
out
jl
out
jno
push
dec
in
xor
pushf
jno
imul
add
scas
bswap
dec
mov
xlat
shrl
lds
dec
inc
mov
pop
ret
sub
testb
dec
cld
add
adc
xor
sbb
outsl
das
insb
lret
loopne
mov
and
fs
lcall
rcr
mov
cmp
sub
lods
cld
cmp
adc
or
mov
push
ljmp
sbb
push
xor
or
rolb
mov
jg
add
mov
and
add
and
das
cmp
lods
repz
mov
cmp
push
cmp
add
adc
jb
push
gs
push
aad
or
inc
or
push
dec
out
loope
iret
pop
cli
lods
bound
lds
gs
pushl
adc
ret
scas
cmpb
rolb
icebp
addb
push
into
push
cld
xlat
pusha
adc
xchg
lea
jbe
sub
push
sub
and
dec
aam
scas
outsb
lret
xor
sub
pop
outsb
xchg
sbbb
in
fdivl
mov
int3
xor
ja
movsl
add
push
mov
loop
jl
inc
and
adcl
es
std
lret
mov
jle
lret
cwtl
lret
xchg
imul
dec
push
pop
jns
pop
jecxz
out
pop
xchg
hlt
mov
nop
aaa
sbb
cld
xor
out
mov
push
sarl
test
shrb
xor
adc
mov
inc
inc
pop
test
adc
and
xor
push
jno
jmp
repz
aas
daa
push
cld
push
std
jmp
dec
push
retw
add
add
add
mov
test
push
inc
shrb
mov
pop
test
mov
and
and
mov
xchg
data16
subb
inc
mov
pushf
or
mov
mov
sub
fcos
add
mov
test
pop
sbb
sarl
decb
addr16
std
shlb
shrl
jns
je
jg
mov
neg
dec
sub
in
sbb
jecxz
adcb
arpl
jge
daa
jmp
or
cmp
in
lock
push
sbb
or
lcall
imul
xchg
aam
pusha
mov
inc
pop
shlb
mov
dec
adc
lea
in
xchg
jb
das
test
mull
pop
outsb
add
lret
cltd
es
pop
inc
xchg
cmp
sub
enter
pop
roll
mov
in
pop
and
mov
jnp
add
add
add
sbb
dec
push
out
aad
cmpl
add
add
int3
jle
mov
cltd
push
jmp
popf
xchg
mov
test
jle
sub
cmc
xor
cmpsb
and
ds
xor
testl
or
sti
jmp
pop
mov
dec
fdivs
mov
lods
ficoml
sub
stos
bound
rcll
fwait
hlt
adc
mov
sbb
jb
and
cmp
cmp
jmp
pusha
hlt
dec
scas
inc
xchg
lahf
roll
mov
call
xchg
jnp
add
inc
pop
xor
pop
cmpl
dec
std
setns
pop
mov
hlt
inc
or
xchg
dec
adc
fs
add
outsl
xchg
into
mov
pop
rcr
xor
icebp
jp
dec
test
mov
or
nop
int
cmpsl
fnsave
push
fsubl
sub
lea
lret
bswap
mov
addr16
sbb
inc
in
jne
loopne
push
or
stos
add
push
mov
or
adc
nop
inc
add
add
add
xchg
lds
ss
enter
popf
rcll
mov
mov
jnp
fwait
sub
popa
pushf
outsl
enter
adc
ja
xlat
imul
lea
cmp
mov
and
and
lock
mov
cltd
scas
outsb
sarl
lock
adc
cli
mov
cld
add
jmp
lret
insb
dec
and
stc
in
das
fistpl
cli
push
jno
std
test
inc
out
push
adc
scas
test
lock
aam
sub
xchg
roll
jbe
xor
mov
mov
in
ljmp
inc
and
xor
lock
rorb
pop
inc
lock
rorb
mov
mov
imul
fnstcw
and
bound
fsubs
cmp
subb
int3
sbb
push
enter
pushf
mul
mov
pop
lahf
lret
repnz
loopne
rorb
add
mov
ja
jg
xchg
orl
out
inc
add
add
add
movsl
mov
das
sub
arpl
jg
xchg
jne
xorl
jmp
jb
push
pop
mov
jbe
mov
cltd
scas
loope
enter
int3
hlt
mov
mov
mov
sub
adc
mov
jne
adc
adcb
push
push
pop
outsb
push
pusha
mov
lods
xor
outsb
divl
cmpsb
pop
loope
adc
mov
fbld
sbb
and
nop
sub
pop
lahf
or
sbb
clc
push
data16
fidivs
int3
mov
xor
and
pop
add
sbb
jnp
mov
addr16
scas
pop
inc
jg
mov
outsb
ljmpw
outsb
outsb
movl
cli
adc
mov
daa
enter
pop
mov
outsl
cmp
jbe
jns
nop
pop
inc
movsb
mov
sub
inc
aam
dec
arpl
jmp
mov
aam
dec
outsb
out
inc
in
adc
test
popa
js
dec
insb
outsl
sub
add
add
push
dec
lret
jmp
imul
aaa
je
mov
and
add
add
rep
xchg
xor
lahf
testl
push
popa
sbbb
sbb
std
testb
push
xchg
dec
jp
add
dec
daa
into
out
xor
adc
mov
add
xchg
fsubs
not
inc
jo
in
or
add
and
stos
aad
bound
and
test
cmp
inc
int
shl
repz
jg
arpl
mov
daa
push
frstor
das
mov
pop
or
repz
pushf
adc
and
sbb
sbb
stos
mov
xchg
adc
aad
mov
lcall
addr16
iret
pop
xchg
les
dec
test
stos
iret
loopne
scas
ja
add
mov
imul
leave
sbb
scas
daa
sub
push
sbb
cmp
test
out
aaa
inc
inc
addl
push
rcll
pop
mov
jae
insl
cmpsl
cmp
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
cmp
add
add
add
test
lods
push
inc
bound
sub
cwtl
fimuls
adc
jmp
inc
mov
mov
lahf
loope
xlat
out
jp
aas
push
aas
call
cmpsb
mov
jg
pop
push
icebp
sbb
and
fnstsw
pop
stc
jb
mov
lods
outsb
scas
insl
insl
pop
mov
loope
aaa
mov
lock
stos
xlat
movsb
ret
in
add
movsl
sbb
inc
sbb
pusha
add
loopne
outsb
add
outsl
sub
cld
int3
outsb
jle
adc
bound
pop
dec
pop
lea
inc
adc
inc
or
lock
inc
mov
nop
out
lods
andb
cmp
mov
lcall
xchg
enter
jo
jmp
cwtl
inc
add
xchg
push
imul
jg
adc
repnz
pop
add
xchg
pop
sub
ret
mov
add
int3
ds
and
fcomps
dec
ds
mov
loopne
add
add
jns
xor
jg
and
add
add
imul
and
and
cmpsl
in
mov
push
pop
ficoml
subb
push
lret
jb
loopne
leave
pop
rcrl
or
mov
cli
bound
enter
dec
jne
dec
pusha
addr16
and
xor
pop
mov
add
fs
and
cmpsb
jnp
pop
mov
stc
mov
cmp
into
jno
mov
mov
xorl
xchg
jnp
xchg
xor
inc
jge
push
fsubrs
out
dec
lcall
cmp
push
mov
push
lret
cld
mov
adc
push
inc
mov
les
lahf
es
cltd
fistps
mov
xchg
sbbl
cmp
push
mov
loopne
mov
aas
cmpsb
setns
popa
mov
fwait
mov
aam
sub
xchg
add
call
dec
inc
mov
es
pop
imul
add
add
ret
jg
decl
rol
sbb
movsb
inc
add
add
add
btc
xchg
lea
xor
mov
ja
cmc
mov
ja
sub
aaa
inc
mov
mov
xor
std
std
inc
inc
scas
arpl
pushf
push
es
push
jnp
mov
enter
push
push
hlt
int3
in
testb
mov
mov
in
out
daa
movsb
add
mov
pop
mov
pushf
fsubrl
push
in
mov
inc
nop
shl
push
iret
pop
jnp
xor
mov
scas
addr16
loopne
adc
jae
and
dec
sub
lahf
enter
outsl
dec
fmuls
lods
xor
or
mov
lret
pop
imul
add
bound
in
imull
add
add
arpl
jbe
fwait
pop
mov
xchg
repz
inc
and
inc
xchg
into
dec
jbe
sbb
paddsb
sub
mov
clc
in
jge
dec
lea
mov
adc
mov
out
aad
mov
add
add
add
jmp
jae
cmp
sub
loope
add
call
pop
aam
int3
enter
sbb
and
shrb
and
cmp
sbb
cmpsl
fs
mov
xchg
or
scas
mov
lods
xchg
mov
loopne
push
ret
push
cltd
cmp
sahf
fcmovb
hlt
fs
mov
mov
jb
out
or
test
stos
pop
sbb
adc
outsl
or
in
sbb
icebp
push
sbb
dec
jnp
add
nop
gs
fnsave
int
cmpsb
mov
aaa
fdivl
push
jbe
cltd
repz
enter
imul
or
lods
lcall
scas
enter
mov
xor
mov
fnstcw
inc
jae
ljmpw
inc
rcrl
sub
inc
xchg
pop
jg
cmpsl
test
lret
jecxz
inc
ds
int3
lret
xor
add
add
hlt
gs
dec
adc
push
lods
inc
add
add
add
movsb
fnstcw
repnz
loopne
and
and
into
add
xlat
xchg
mov
lcall
int3
mov
sbb
pop
gs
push
mov
add
sti
adc
out
sbb
dec
loope
js
lods
pop
xlat
push
sub
dec
mov
and
es
pop
cmp
push
sub
push
fistl
push
xchg
aaa
mov
or
out
stos
gs
imulb
xorl
stos
xor
sti
xor
adc
xorl
bound
out
jg
jnp
inc
lret
xchg
ds
xor
out
mov
dec
scas
or
xchg
push
and
cmp
jmp
xor
sti
jge
js
mov
push
mul
scas
jmp
or
xchg
aas
mov
idivl
sbbl
adcl
add
mov
sbb
popf
push
xchg
stc
ljmp
test
aaa
jge
pop
cmc
add
add
add
aas
gs
pop
repnz
dec
add
add
add
add
cmp
mov
or
lods
sub
mov
inc
push
jno
and
inc
and
push
sub
sbb
xor
std
scas
inc
sub
addl
jo
insl
pop
out
fcmovbe
mov
sbb
pop
mov
lock
lds
jnp
pusha
adc
dec
mov
into
sbb
sub
mov
and
cmp
enter
and
sub
xchg
adc
jg
lods
nop
lahf
in
xchg
xchg
hlt
inc
rcrl
adc
push
sbb
stos
icebp
push
mov
scas
repz
mov
mov
inc
loop
popa
cs
push
push
dec
mov
add
jle
and
mov
xorb
lret
ss
cmp
push
pop
jmp
push
inc
adc
out
xchg
dec
cmp
xchg
add
out
lods
inc
sbb
add
add
out
fisttpll
lock
push
nop
mov
add
add
add
in
cmp
add
pusha
in
test
mov
fs
dec
mov
orb
jp
sarb
adc
aam
orb
rorb
or
pushf
inc
mov
mov
push
or
sub
mov
int
add
enter
push
movsl
fldt
and
adc
dec
sbb
push
cltd
mov
dec
fadd
lret
test
pop
cmp
test
out
mov
orb
sub
sub
imul
in
js
or
lcall
loopne
das
mov
daa
lds
aas
mov
xchg
mov
stc
mov
xchg
jnp
popf
mov
fsubs
mov
imul
cmp
cmpsl
push
jle
popf
sahf
pop
xchg
repz
adc
mov
sub
rcrb
mov
sbb
add
xchg
xor
xor
add
add
mov
ljmp
add
add
add
fs
jnp
rorl
xchg
loope
inc
pop
xchg
push
nop
adc
lds
and
mov
leave
cltd
push
nop
xchg
dec
lds
dec
and
aam
mov
push
int3
mov
add
shlb
mov
and
pop
xchg
xchg
ror
mov
pushl
dec
fdivl
and
jg
add
pusha
jne
cmp
xchg
or
out
fidivrs
add
repz
leave
pop
lcall
push
cmpsb
ret
mov
jp
dec
adc
imul
xor
ja
js
push
pop
stos
add
xchg
xchg
call
xor
mov
in
fsubrs
ret
mov
jae
add
mov
aad
fnstcw
loope
jecxz
sbbb
xchg
inc
xchg
fwait
adc
and
mov
xor
mov
icebp
ss
insb
daa
inc
aad
lds
fiaddl
mov
flds
add
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
adc
imul
adc
iret
ljmp
inc
xchg
push
and
cwtl
sub
mov
cltd
mov
pop
lea
out
lea
dec
jg
xchg
arpl
icebp
nop
cmp
out
stc
arpl
or
mov
push
mov
xchg
push
sub
stos
rclb
es
psubsb
repz
cld
push
and
pop
mov
sbb
add
mov
pop
insl
pushf
gs
repz
stos
xorl
mov
jl
lret
lock
ret
adc
movsl
stos
cmpsl
push
jno
aaa
mov
cmp
adc
adc
jl
bound
pop
dec
fwait
ret
mov
jmp
repnz
xorb
gs
bound
cld
sbb
ljmp
jmp
testb
fstpl
cmpl
punpckldq
jo
cmp
inc
push
or
sbb
out
sbb
stos
push
xor
sub
std
add
or
add
cmp
imul
out
mov
mov
insb
and
add
add
aad
add
lods
xchg
pop
xor
add
orl
aad
outsl
shll
pusha
test
mov
pop
mov
test
jmp
daa
cmpsb
rorl
pop
adc
sti
jne
push
pop
cmp
aaa
js
jbe
sbb
js
rorb
cmpsb
cmp
aad
mov
repnz
insb
stos
cmp
sbb
pusha
pop
lods
test
bound
ret
cld
jbe
into
xlat
cmc
and
ret
or
xor
sub
in
inc
mov
fisubrs
in
insb
icebp
ljmp
jae
or
push
insl
push
out
clc
lds
jne
mov
pop
sbb
or
dec
mov
fs
push
ljmp
push
mov
loop,pn
lahf
jo
enter
xlat
inc
stc
jp
lahf
hlt
out
das
nop
mov
dec
mov
fnstenv
push
enter
and
imul
fmull
notl
js
add
dec
stc
mov
ljmp
les
add
add
add
mov
add
mov
fwait
add
int
adc
push
ljmpw
push
stos
imul
shr
icebp
aas
mov
mov
sbb
rorb
push
push
jb
dec
add
lahf
insl
sbb
and
mov
repz
insb
dec
or
aaa
mov
repz
repz
jne
jg
mov
cmp
ds
add
push
push
xor
out
sub
cld
arpl
pusha
out
dec
scas
mov
sub
orb
sbb
mov
dec
xor
pop
cmc
adc
mov
xor
mov
cmp
stc
aas
pop
stos
scas
cmp
aad
inc
out
xchg
clc
dec
jp
ss
je
fwait
sti
iret
mov
fnsave
inc
lahf
pop
xlat
leave
mov
sbb
jge
hlt
fsts
lea
popf
sbb
add
add
jg
cld
lcall
add
dec
add
add
add
dec
push
insb
cmpsb
sbb
push
push
or
mov
push
or
cwtl
lods
and
shrl
lods
inc
ret
lahf
in
ljmp
dec
push
pop
das
lods
jb
pop
dec
test
rorl
test
dec
adcb
jne
inc
jl
cmpsl
xor
cmpsb
movsb
sbb
pop
repz
enter
pop
loope
aad
jp
stos
lcall
imul
scas
cltd
fldcw
shr
flds
push
cmova
jb
jb
jnp
loopne
or
insb
ret
inc
sbb
loopne
cmp
mov
imul
push
xor
xor
rcrl
jp
jae
adc
iret
test
repz
xchg
sbb
cmc
outsb
pop
add
pop
leave
lea
adc
orb
test
add
movsl
inc
pop
out
inc
daa
mov
xchg
mov
pop
pop
hlt
iret
int3
dec
add
add
add
js
int3
add
pshufw
pushl
xor
outsb
cmp
out
add
jb
orl
mov
and
or
push
nop
mov
jo
add
mov
cmc
pop
xrelease
adc
orb
adc
fsubp
in
mov
or
pop
sbb
inc
sub
int
xorl
push
rorb
mov
scas
xchg
jnp
push
inc
adc
lock
pop
fs
push
jle
cwtl
cmp
or
xor
pop
adc
test
push
or
jbe
and
fstp
int3
and
outsb
das
or
aas
pop
dec
sbb
push
dec
jmp
jmp
xchg
std
std
scas
adc
insb
mov
push
pop
sti
addr16
in
jg
mov
rorb
ds
outsb
shrl
idivb
or
mov
and
adc
rclb
add
add
repz
cld
xor
mov
or
and
add
jle
jle
js
and
xor
test
adc
das
pop
jg
jno
scas
inc
adc
adc
jmp
push
push
stos
pop
inc
fstp
aad
loop
jp
pop
dec
dec
inc
notb
cld
xor
cs
rcll
add
xor
out
cmpb
adc
cld
leave
jo
push
arpl
lcall
shrb
xor
ds
adc
or
jb
lods
mov
lea
add
leave
jle
mov
gs
lret
pushf
imul
xor
xor
pushf
icebp
sbb
nop
fs
cmp
gs
push
dec
mov
jne
and
into
cmp
in
imul
test
jb
out
push
push
fcompl
and
addr16
es
aam
int3
daa
xor
mov
cld
adc
inc
mov
fdivs
add
add
add
sub
cmp
ret
or
lahf
xchg
out
aam
add
add
add
int3
imul
lock
mov
jg
sbb
loopne
icebp
mov
imul
mov
or
rolb
loop
jp
adc
inc
push
int
shll
out
mov
icebp
mov
sbb
and
out
in
cwtl
jmp
and
lcall
dec
mov
jl,pn
and
or
xchg
mov
out
add
mov
jnp
repnz
adc
add
adc
cmpsb
scas
xor
and
stos
jg
and
xor
inc
scas
ds
xchg
out
add
aad
in
adc
mov
xchg
cltd
dec
movsb
lea
push
and
daa
ds
fiadds
xor
inc
into
loopne
push
mov
jg
xor
push
loopne
scas
pop
xchg
or
lea
out
mov
divb
or
push
shll
out
pop
pop
pushf
push
push
adc
fcoms
add
add
jns
clc
fdivs
daa
rcrb
addr16
frndint
or
add
add
adc
out
lahf
scas
mov
cwtl
es
xchg
je
xchg
in
adc
daa
or
adc
inc
mov
sub
lock
fnsave
ja
out
inc
dec
insb
repnz
test
mov
sti
adc
ja
stos
push
xchg
inc
ret
ret
pop
daa
dec
es
sub
loop
and
cmc
sbb
mov
inc
adc
lahf
push
lds
xchg
iret
pop
into
pop
push
or
xor
push
xchg
mov
inc
xor
or
fwait
dec
mov
xor
movsl
jp
inc
data16
call
stc
and
add
das
xor
pop
pop
pusha
cld
mov
cmc
xor
imul
imul
and
jle
rcrl
add
stos
push
stos
push
lcall
hlt
mov
mov
add
add
add
xchg
jmp
aaa
inc
in
leave
pushf
js
scas
push
mov
mov
xor
inc
fidivrl
adc
in
outsl
test
cwtl
js
cmpb
sbb
inc
pop
test
jb
sub
cmc
mov
push
mov
add
xor
mov
mov
pop
push
xchg
loopne
pop
in
jb
or
mov
es
shlb
or
inc
sub
push
aas
inc
test
cs
loop
fsts
scas
lods
loop
pop
cltd
call
pusha
in
clc
pop
push
adc
add
push
lcall
popf
orl
outsl
mov
stc
adc
push
outsl
jo
or
negl
jge
add
aam
iret
movsb
and
pop
mov
jnp
xchg
mov
inc
cld
nop
lret
add
insl
and
mov
imul
add
add
jbe
idiv
imul
inc
pop
fchs
push
add
add
add
into
mov
aam
inc
cmpsl
and
mov
xor
ds
or
dec
mov
mov
lds
sahf
test
in
cmp
mov
outsb
stos
cmp
push
inc
fcoml
incl
icebp
jne
lret
mov
cs
lret
cmp
mov
inc
xchg
add
icebp
jmp
xchg
cmp
or
dec
js
fwait
xor
or
fisttpl
mov
sbb
cmpsl
rcrb
loope
fwait
xchg
cltd
subb
shll
cmp
in
push
xor
push
fdiv
in
pushf
inc
jecxz
inc
push
sbb
mov
jae
aam
aas
rolb
pop
xor
xor
lahf
sub
cwtl
int3
imul
push
rep
push
decl
mov
lea
movl
push
pop
fisttpll
gs
fwait
bound
push
mov
hlt
dec
sbb
shll
dec
cld
or
or
push
mov
aad
add
add
fwait
cmp
stos
sarb
in
add
add
add
ss
rcrl
into
xchg
loope
inc
stos
pop
leave
ljmp
ror
inc
push
dec
dec
imul
xor
jb
aam
jno
add
xor
das
leave
pop
lea
sbb
in
mov
dec
sbb
sbb
out
dec
outsb
jecxz
dec
adc
rclb
cmpsl
movsl
jl
sub
insl
sarl
or
testl
or
dec
das
cmp
stos
repnz
mov
and
lahf
inc
sbb
xchg
into
in
lcall
pop
sub
mov
pop
mov
cmp
pusha
sti
jns
xchg
stos
cmp
mov
adc
sub
jae
fstp
je
xchg
xor
sbb
add
dec
cmpsb
fiaddl
pusha
insb
sub
inc
repnz
mov
aas
in
sub
push
jg
into
shlb
cwtl
clc
dec
ja
ret
ficoml
dec
push
sbb
dec
jg
rcl
sub
inc
push
clc
mov
and
hlt
xor
das
inc
call
add
add
mov
mov
xchg
fmull
jl
lds
jmp
stc
cmp
mov
cmpsb
jp
movsl
pop
inc
push
xchg
xor
sub
mov
dec
movsl
push
cmc
adc
xor
jl
cs
cmp
pop
sbb
test
sub
sbb
xchg
inc
xlat
or
xor
sbb
orb
sahf
pop
jno
xor
stc
pushf
in
xor
ja
push
push
dec
pop
je
cltd
xchg
xor
popf
and
pop
aam
xor
movsl
std
mov
mov
loop
push
push
cltd
sbb
pop
fwait
jb
pusha
xchg
jns
mov
and
cmpsl
lret
sbb
dec
xor
js
jmp
rclb
aas
leave
lods
adc
fs
fwait
js
adc
popl
scas
mov
lret
mov
stos
mov
dec
cmp
xchg
cltd
xchg
jmp
pop
lods
fsubr
imul
add
add
add
shr
mov
cld
aad
cmpsb
in
push
add
add
add
push
mov
daa
ds
mov
mov
cmc
fmulp
rolb
jnp
outsl
adc
int3
push
push
mov
les
push
setge
or
hlt
aaa
cmc
push
xchg
jmp
vcvttsd2usi
cmp
lret
xchg
stc
repz
sbb
in
cmc
je
outsl
lcall
or
cld
dec
jns
outsl
insl
xor
inc
inc
clc
scas
mov
sub
mov
inc
mov
add
movsb
push
stos
mov
je
in
sbb
lahf
notl
out
pop
int
pop
jb
jl
outsl
and
lahf
xorl
lods
in
mov
mov
or
je
or
icebp
push
iret
sbb
mov
iret
dec
add
cmpsb
sbb
xor
outsl
xchg
lea
add
cmp
test
call
dec
enter
jnp
sub
and
ret
cmp
outsb
pop
jno
enter
adcb
add
add
mov
lds
aad
lret
pusha
lock
add
add
add
or
or
sub
enter
dec
push
les
push
in
adc
fcmovb
mov
xchg
jmp
pop
sbb
xlat
stos
icebp
or
jecxz
fisubl
inc
xchg
fsubrl
cmp
pop
lea
ss
jl
jle
jb
push
sub
mov
mov
dec
insb
out
push
mov
test
or
pop
mov
adc
je
pop
stos
addr16
out
sub
aam
adcl
and
mov
mov
sub
arpl
sahf
test
fadd
shl
mov
cli
mulb
dec
cmp
bound
inc
inc
cmp
neg
jmp
mov
outsb
das
enter
loop
jge
aam
mov
cmpsl
in
inc
and
rcr
stos
mov
repz
adc
jae
out
loop
fwait
ret
push
jno
inc
sub
out
arpl
aad
or
sahf
push
scas
mov
and
das
cmp
pusha
cmpsl
inc
dec
push
hlt
pop
add
add
add
pop
mov
sub
cld
jnp
lea
ds
sbb
loop
loopne
gs
push
mov
roll
repz
add
pop
shll
inc
jge
faddl
lret
fadds
into
lahf
jnp
popw
iret
lock
stos
adc
push
divl
stc
push
add
cli
leave
mov
mov
ds
movsb
sub
dec
aam
adc
jle
lret
pop
imul
fiaddl
add
les
addl
and
arpl
cli
lret
mov
ljmp
inc
aas
mov
int
sub
push
lods
sub
inc
repz
cmp
gs
fwait
sub
scas
xchg
mov
and
insb
fsubs
xchg
stos
cmp
bnd
jle
and
mov
decl
sbb
pop
and
test
mov
arpl
dec
lret
sti
or
mov
sahf
fsubl
mov
ja
mov
inc
out
clc
pop
add
add
add
clc
out
xchg
mov
scas
inc
and
jbe
push
add
xor
inc
cli
stc
fdivrs
cs
fidivs
popa
inc
rol
sub
scas
jl
lock
dec
sbbl
mov
ret
inc
jns
daa
xor
cmpsl
mov
lret
mov
pop
jge
adc
addr16
loopne
mov
call
inc
inc
mov
xor
adc
dec
push
push
mov
mov
mov
push
in
add
adc
mov
jp
xchg
ljmp
mov
jg
mov
mov
repz
sbb
add
imul
lock
arpl
scas
pop
pop
mov
and
cmp
dec
and
xchg
xchg
ljmp
cmp
inc
mov
addr16
mov
fbstp
scas
adc
lahf
xlat
out
cld
insl
enter
add
add
add
shll
xor
dec
cmp
push
fidivl
lds
mov
bound
mov
sar
and
negl
pop
sbb
mov
push
jmp
fsubs
test
ficomps
fisubrl
fcoml
clc
fdivl
mov
dec
add
mov
mov
push
rclb
test
dec
mov
push
push
orl
and
add
xchg
pop
and
xor
add
push
sub
jno
push
sub
and
mov
ror
xchg
pushf
movsl
push
mov
jae
xchg
out
fsubrl
es
cmc
jge
pushf
les
popf
push
push
pop
pop
lret
std
xor
repz
cmp
sub
mov
js
mov
loop
push
mov
mov
fcomi
fiadds
push
sub
dec
aam
js
or
int3
add
mov
add
mov
mov
in
sti
pop
stc
add
add
add
jge
popa
orl
jge
scas
outsb
inc
je
ja
fnsave
fwait
dec
test
and
cmp
pop
sbb
lahf
dec
jo
inc
fsubs
ljmp
sub
pop
or
stos
movsb
dec
mov
xchg
out
adc
lock
lret
andl
mov
sarb
xchg
pop
mov
test
xchg
sub
arpl
loope
sbb
inc
jb
rclb
dec
push
cmp
mov
jo
pushf
pushf
xchg
pop
sbb
movsb
ret
sbb
into
xchg
adc
ljmp
lds
and
and
mov
inc
adc
jmp
sahf
inc
cmpsl
je
cmpsb
fisttpl
mov
adc
fldenv
cld
cltd
and
and
xchg
repz
add
shlb
enter
aad
insl
mov
cwtl
cli
jp
stos
movsb
aas
enter
pop
dec
or
clc
push
out
into
push
push
inc
lahf
mov
add
add
add
add
mov
enter
icebp
neg
jp
popa
orb
inc
mov
pop
or
push
sbb
ret
lcall
add
adc
jmp
add
rcrl
pop
adc
loopne
test
push
cmpsl
sbbl
rcrb
cmpsb
xlat
mov
dec
xlat
scas
or
clc
test
repz
syscall
sbb
aam
rol
mov
push
loopne
lahf
das
mov
sbb
xor
cmpsl
int3
inc
ret
dec
hlt
push
adc
push
repz
imul
rolb
mov
xor
clc
sub
mov
cmp
lds
mov
inc
shll
call
jmp
stc
hlt
addr16
dec
lea
stc
and
mov
sbb
inc
lcall
jno
cwtl
xlat
arpl
movsl
push
sbb
and
mov
sbb
jge
enter
sub
or
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
mov
mov
or
test
or
or
aaa
push
sbb
daa
ljmp
mov
movsl
sbb
xchg
pop
pop
out
adc
clc
cmpsl
pop
xchg
jbe
adc
adc
lret
xchg
mov
jmp
lea
mov
lret
jae
sti
nop
jbe
mov
mov
adc
rcrb
add
aas
ret
sub
nop
mov
cli
mov
fmull
outsb
or
adc
daa
inc
push
ret
cmp
es
mov
fnstsw
stos
xlat
or
sbb
aas
data16
xor
mov
and
dec
sbb
scas
lahf
ja
or
rcl
adc
mov
sbb
cs
cmpsb
cmp
mov
int3
pop
lret
or
jo
dec
popl
lahf
out
call
ss
add
add
lahf
pop
cmpsl
jne
mov
push
pop
xlat
or
add
add
add
sub
xor
jle
roll
push
sbb
mov
mov
std
ret
out
movsl
push
movsb
outsl
insl
fildl
rorb
mov
aam
sub
mov
loop
sub
push
mov
inc
mov
cmp
add
adc
fwait
inc
cmp
add
dec
cli
insb
inc
sahf
test
stos
divl
jecxz
or
dec
push
stos
lret
push
dec
arpl
dec
add
xor
push
and
bound
mov
jne
aas
dec
stos
sbb
mov
or
xor
hlt
mov
jae
test
test
xor
stos
pop
and
pop
fs
inc
scas
roll
add
push
mov
leave
ret
in
jne
mov
dec
mov
xchg
scas
inc
mov
jle
cwtl
push
adc
xor
mov
dec
add
push
hlt
movsb
lea
adc
push
sahf
pop
testl
xor
add
add
pop
sahf
clc
sbb
imul
sub
dec
outsb
jp
mov
xchg
fcoms
xchg
inc
jbe
or
mov
fsub
inc
mov
dec
imul
push
jecxz
loop
mov
fcmovb
xchg
jns
mov
pushl
cld
dec
jp
mov
je
push
push
cmpsl
fildll
xlat
fcompl
push
inc
mov
mov
lahf
xor
jl
ja
pop
out
pop
and
lahf
das
add
lret
push
mov
stos
cmp
scas
btr
inc
lahf
add
push
inc
mov
stos
sbb
aad
cld
mov
xor
jle
adc
mov
or
adc
dec
xchg
out
dec
cmpsb
push
or
arpl
nop
popa
cs
lret
dec
inc
test
rcrb
aam
mov
lea
and
fmull
pop
filds
dec
pop
mov
xchg
out
lret
mov
add
inc
pop
mov
fstps
scas
aaa
adc
add
add
add
jmp
pop
fists
xchg
ss
rcrl
daa
or
push
rorl
mov
add
lahf
std
sbbb
popa
loop
shlb
pop
cmp
test
lds
loopne
pop
shll
inc
push
fs
andl
inc
call
or
aaa
sub
gs
rcll
cs
fisubl
mov
add
xchg
into
mov
jb
mov
lock
mov
mov
xchg
mov
enter
in
test
test
xor
push
add
icebp
orb
mov
jecxz
mov
inc
imul
lret
scas
sbb
imul
loopne
lock
mov
dec
mov
dec
popf
mov
push
insl
popa
sbbb
out
daa
inc
stc
and
jle
sbb
adc
andb
adc
iret
push
fldenv
add
add
repnz
movsb
jle
arpl
repnz
sbb
add
add
stos
fabs
or
sub
fwait
mov
popf
js
lcall
mov
add
mov
out
fildll
div
in
inc
js
cmp
adcb
stos
xchg
pop
adc
shrb
pop
loopne
in
dec
pop
jae
rorb
mov
arpl
int3
leave
jns
lcall
inc
mov
rcr
negb
roll
cmpsl
sub
ret
movsb
mov
sahf
push
das
mov
sub
cmp
ja
add
cmp
inc
test
and
xor
sub
mov
inc
push
sub
jo
mov
or
mov
les
pusha
aad
out
shrl
loop
adc
das
insb
pushl
leave
call
xchg
arpl
mov
pop
adcb
out
scas
inc
mov
out
pop
adc
xchg
jle
aaa
push
bound
stos
sub
stos
out
jmp
sub
mov
add
add
add
sbb
aas
adc
dec
or
ret
fucomp
lret
mov
mov
sub
dec
sub
in
cwtl
mov
insl
mov
popa
pop
xchg
add
pop
mov
xchg
lret
pop
in
out
cmc
ja
fiaddl
xchg
imul
frstor
cmp
enter
add
std
scas
mov
sub
call
andl
lods
in
popa
push
inc
fs
xor
rcr
loopne
jle
imul
aas
add
jle
xor
int
aad
stos
fcomps
fstp
cwtl
mov
lods
and
loope
mov
int
bound
ret
fidivl
sbb
outsl
sub
push
in
out
add
cltd
ja
mov
orb
sbb
xor
in
xchg
pop
mov
mov
sub
inc
stos
mov
lret
rolb
shll
fnstenv
sbb
push
repnz
add
add
popf
fwait
jnp
or
leave
or
or
insl
pop
out
in
lods
push
cmp
subb
mov
xchg
cli
pusha
mov
xchg
lret
imul
mov
dec
add
loop
or
xchg
inc
rclb
jo
fdivr
push
lahf
jg
sar
lahf
fisubrs
stos
jo
rsqrtps
ficoml
mov
clc
stos
andb
cmpsl
loopne
dec
or
xchg
adc
loopne
lods
jae
subb
jno
lahf
mov
cmp
call
in
mov
cltd
dec
ds
cs
adc
push
mov
jge
orl
xlat
jp
jmp
sbb
lcall
enter
mov
pop
inc
jle
pusha
pop
mov
pop
sbb
adc
xchg
leave
jl
pop
pop
jmp
ljmp
add
and
sti
mov
mov
ja
repnz
ficoml
ficoms
inc
cwtl
filds
and
add
add
cld
je
jbe
jns
sbb
rcr
jl
add
add
add
ret
push
and
cltd
ja
xor
ss
into
aas
icebp
adc
adc
mov
pop
inc
dec
enter
iret
jae
mov
leave
jp
push
sbbl
nop
aaa
in
fdivrl
cwtl
mov
test
inc
mov
js
mov
mov
int
lods
fstpl
sbb
push
pusha
aad
jb
xlat
es
sub
push
ljmp
xor
dec
in
ds
add
dec
xchg
int3
xchg
movsl
jle
sahf
stos
cmp
repnz
stc
aad
pop
push
and
ja
insb
push
repz
mov
push
jmp
daa
jbe
sbb
ds
pushf
add
fcmovne
sbb
out
inc
imul
pop
xorl
mov
sets
mov
pandn
fadds
inc
mov
leave
mov
sub
mov
inc
ss
mov
subb
mov
stos
dec
or
fadd
into
push
cltd
jmp
fildl
or
in
mov
add
add
lods
inc
adc
mov
add
lret
sbb
stc
lret
inc
dec
jl
out
mov
dec
cmp
add
mov
add
jnp
dec
mov
jno
cmpsb
mov
clc
dec
xchg
arpl
int
xchg
adc
xor
mov
mov
clc
inc
xchg
icebp
cmp
outsb
mov
sbb
mov
mov
fcom
xor
shrl
jp
pop
mov
xor
iret
jnp
dec
mov
mov
in
enter
sub
pop
xchg
push
inc
cli
pop
xor
mov
pop
xor
jnp
nop
push
out
cmp
lret
cs
xchg
fiadds
mov
je
sub
jbe
sti
lret
lret
popa
cmpb
and
fidivrs
shr
jnp
adc
outsb
repz
pop
movsl
mov
sub
lea
xchg
fldenv
fsts
add
add
push
jg
dec
xchg
dec
xchg
aad
xor
push
add
je
and
insl
mov
inc
xchg
sbb
push
adc
mov
xchg
pop
dec
inc
lcall
mov
js
push
push
mov
out
in
xor
les
jmp
ret
or
sbb
mov
push
in
jnp
in
js
mov
lock
cmp
pop
pop
mov
mov
dec
dec
xchg
packsswb
mov
daa
cwtl
aaa
stos
pusha
adc
xchg
and
roll
cld
icebp
popf
sbb
rcl
popf
imul
insl
mov
sbb
add
es
dec
data16
xchg
mov
in
mov
jmp
arpl
push
inc
add
mov
lahf
push
mov
fisttps
xchg
sbb
push
stc
dec
sbb
cmpsl
ljmp
cld
jp
pop
push
lea
or
in
pop
imul
leave
stos
loop
sbb
dec
jne
ja
cld
cmp
call
add
add
mov
fucomip
push
insb
xor
add
iret
xor
add
add
add
je
testl
mov
lods
pushf
mov
xor
cmp
adc
ljmp
fsubl
push
repz
outsl
push
les
sbb
es
std
cmp
popf
gs
adc
dec
add
mov
in
es
and
and
mov
shl
int3
jge
jecxz
sbb
cli
rolb
mov
cltd
sub
adc
int
adc
cmpsb
rcll
xor
mov
bound
cmp
sbb
stos
push
js
mov
dec
rorb
mov
jecxz
in
loopne
xchg
and
loop
jmp
leave
add
xchg
shrb
mov
movsb
mov
outsl
sbb
or
mov
sbb
dec
mov
loop
scas
pusha
xchg
insb
jns
and
xchg
add
popl
add
add
dec
out
iret
jmp
aas
in
push
lods
in
lcall
add
pop
or
pop
xlat
lcall
inc
cmc
sub
sbb
cmp
adc
xchg
loopne
rolb
fwait
fwait
xchg
fs
jnp
incl
cld
lcall
pop
mov
lret
daa
pop
popa
sti
addr16
movsl
adc
in
ja
inc
fnsave
je
pop
dec
push
fcompl
movsl
cmp
inc
loop
jo
int3
add
arpl
and
cwtl
sub
mov
lcall
cmp
and
test
xor
lret
test
inc
inc
bound
cmp
inc
inc
cmpsb
das
or
and
lret
pop
fs
call
xlat
icebp
lahf
xor
sarb
mov
push
repnz
pop
jae
cmp
aaa
ljmp
xlat
mov
ret
and
fwait
or
jecxz
mov
mov
leave
insl
loop
mov
inc
lods
jecxz
cwtl
cmp
sbb
or
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
inc
cmp
add
add
lock
inc
loope
sti
inc
lret
cvtps2pi
stc
jmp
js
and
jo
pop
es
test
mov
stc
notb
cmp
outsb
cmp
out
cmc
mov
xor
neg
jge
lret
les
sbb
and
jmp
lea
dec
mov
and
jg
xor
dec
outsl
int
pop
popf
mov
lret
pop
daa
in
xor
rep
adc
js
cli
jge
roll
inc
jmp
xchg
cli
mov
jo
cld
repnz
or
gs
jbe
cmp
xor
push
pop
inc
or
pop
mov
push
add
xor
jmp
dec
xor
push
inc
mov
pusha
sbb
jle
repz
loope
mov
sbb
enter
orb
ret
ret
mov
sbb
add
fs
stos
scas
add
cld
cmpsb
xchg
hlt
aad
xchg
or
in
lods
imul
neg
std
sub
dec
dec
fisubrs
cmp
add
add
add
push
or
mov
and
xchg
sarb
ljmp
repz
mov
enter
jns
push
jecxz
test
int
ret
cmpsb
inc
xchg
xchg
loop
addr16
test
mov
pop
mov
out
into
xchg
and
inc
jo
mov
mov
add
and
repnz
je
mov
notl
lahf
seto
lods
js
xor
out
roll
fnstcw
nop
and
xor
or
jl
scas
ret
dec
or
push
jbe
icebp
mov
ja
mov
int
test
pop
fldenv
into
cmpsl
push
out
dec
sarl
mov
fcoms
sbb
and
mov
xor
mov
mov
or
xchg
test
test
xor
movsl
lods
adc
imul
push
pop
ret
mov
add
rcrl
mov
add
cs
xor
cltd
mov
insl
add
add
add
ret
push
aaa
insb
dec
jbe
mov
mov
inc
or
xlat
and
das
jae
fs
push
gs
sub
lcall
cmp
xor
mov
ljmp
rcll
in
insb
test
or
std
pop
aad
cmp
add
or
or
in
andb
int
push
dec
stos
pop
push
aaa
pop
mov
mov
dec
xor
test
in
xchg
jne
in
mov
adc
push
mov
into
aas
call
test
cs
lcall
cmc
in
cld
outsl
or
jae
sub
hlt
imul
lods
mov
sub
jmp
xchg
inc
xchg
lods
ja
jne
outsl
sub
adc
adc
or
or
dec
mov
push
imul
cmp
dec
imul
mov
jge
rclb
lcall
out
sbb
aas
out
outsb
add
add
add
add
fildl
mov
xorb
jns
mov
fldcw
nop
pop
imul
es
push
jecxz
xlat
clc
das
xlat
inc
xchg
add
dec
push
cmp
lock
pop
pop
int3
jb
xor
xchg
and
icebp
sub
add
or
int3
inc
pop
cmp
dec
repz
lret
dec
and
push
iret
out
xor
dec
jmp
fucom
inc
cmp
push
imul
outsl
or
dec
xchg
aad
pop
and
xor
jns
push
sub
addr16
repz
xor
lods
cmpsb
mov
ficomps
repnz
jb
dec
mov
cwtl
inc
test
inc
pop
dec
sub
mov
dec
dec
sti
jle
movsb
scas
adc
daa
ljmp
push
dec
in
jp
mov
pop
enter
gs
cmp
dec
mov
outsb
popa
mov
and
add
sub
ja
mov
mov
add
add
addr16
push
jg
mov
mov
test
sub
mov
popa
pop
lcall
call
int3
pusha
xor
clc
pop
jo
int
scas
mov
cwtl
push
pop
sbb
jmp
and
lea
repz
jg
leave
adc
mov
ret
hlt
sub
add
aad
nop
sbb
jno
bound
lcall
daa
and
jmp
jns
rclb
push
or
sti
loop
sbb
movsl
pop
push
dec
sbb
call
enter
xor
mov
and
popf
das
aaa
push
mov
fists
out
xchg
sahf
in
or
fwait
call
iret
addl
mov
sub
aad
pop
inc
das
xchg
cmpl
mov
pop
xchg
inc
test
dec
xorl
scas
inc
aam
int
mov
jnp
outsl
cmpsb
loopne
test
inc
dec
jo
add
add
push
insl
sbb
das
xor
imul
inc
cwtl
mov
pop
jo
cmp
lds
popf
add
push
sahf
fdivr
pop
jnp
cmp
adc
imul
rol
or
add
das
sbb
jp
adc
jne
jmp
in
hlt
xor
popa
jae
enter
out
mov
insb
lea
xlat
popa
rcl
mov
cmp
xchg
mov
cmp
insb
stc
dec
jp
xlat
add
sbb
testb
shl
add
sbb
in
mov
jecxz
xchg
jmp
imull
cmp
cmp
ficoml
push
dec
push
inc
inc
fcompl
mull
xor
addb
icebp
clc
in
pop
sub
call
and
jmp
into
fst
cli
cmp
xchg
and
push
jecxz
fnstenv
pop
jbe
fs
jl
in
repnz
mov
aaa
jns
push
xchg
push
mov
cli
xchg
jle
push
je
mov
jno
add
add
stos
inc
cltd
sbb
mov
loop
enter
es
repnz
insb
xor
pop
sub
sti
or
std
iret
xchg
jl
loop
aas
fcomp
pop
jnp
add
lock
mov
lds
jne
int3
inc
xchg
nop
adc
push
leave
imul
jns
sub
and
sahf
out
test
xchg
mov
inc
dec
pop
adc
mov
push
jae
call
xor
dec
inc
je
sbb
push
sub
pop
dec
fiaddl
jne
inc
scas
fwait
adc
inc
xor
int
and
xor
adc
fbstp
popf
cmp
hlt
dec
jg
fstps
cmp
sub
shr
pusha
xchg
fistpl
daa
push
in
mov
cmp
push
sbb
sub
xchg
xchg
nop
sub
dec
xchg
out
testl
mov
add
add
fwait
jnp
aad
sbb
in
aam
jb
add
add
mov
insb
mov
pop
mov
and
pop
sbb
inc
icebp
jmp
cmp
mov
and
lods
xchg
mov
sub
inc
arpl
pop
dec
jne
push
xchg
in
or
xchg
mov
sub
mov
shll
imul
lock
stos
iret
popf
mov
xchg
jecxz
inc
sbb
add
sub
lcall
stos
push
int3
fcoml
xchg
jge
xchg
mov
mov
dec
repz
les
push
out
push
or
scas
rcll
flds
xchg
fisubrl
adc
ljmp
jo
mov
mov
movsl
lahf
mov
mov
das
cmpl
or
popf
xor
xchg
add
movsb
gs
fisubrl
inc
ret
ja
cwtl
fidivrl
xchg
sti
mov
xorl
ljmp
es
cmp
add
mov
std
mov
sub
or
sbb
add
add
add
scas
cmp
cmp
mov
cltd
movsb
mov
cmc
loopne
icebp
inc
hlt
inc
sbb
fldenv
std
shlb
pusha
int
sbb
aas
or
outsb
subl
insb
inc
cmp
lret
xor
add
fwait
mov
je
sbbb
cmp
ljmp
sti
push
push
repnz
pop
cld
cwtl
sbb
aaa
xchg
cmp
sbb
imul
cmp
add
es
int
das
xchg
sbb
or
xchg
imul
mov
add
mov
mov
inc
adc
imul
lods
push
pop
inc
scas
xor
sti
scas
push
cltd
xor
movsl
jbe
mov
push
xorb
mov
inc
mov
test
adc
push
fmull
mov
pop
and
mov
loope
pop
addr16
idivb
jge
pop
mov
add
adcl
xchg
fisttps
mov
mov
add
add
push
and
fildl
out
inc
scas
mov
add
lods
sub
add
push
mov
scas
xor
cmp
bound
int
in
inc
rcrl
popf
cmp
add
test
mov
repz
insb
les
cld
pop
sbb
dec
cmp
fwait
scas
data16
xchg
fldenv
mov
and
divb
in
mov
enter
mov
xchg
push
lret
adc
and
jge
popf
gs
pop
dec
out
cwtl
pop
dec
int
inc
imul
sub
movsb
jge
imul
push
sbb
mov
sub
test
add
dec
dec
fidivrs
push
std
test
push
fdiv
in
je
mov
xor
mov
xchg
sti
sbb
cs
fldt
cmc
lods
cmp
xchg
ret
mov
nop
leave
mov
iret
cltd
jb
inc
in
mov
mov
out
sub
sbb
jne
add
add
mov
ret
aas
sbb
mov
sub
mov
stos
xchg
sbb
mov
js
outsb
mov
fidivrl
scas
push
movsl
sub
dec
lods
mov
pop
loop
in
inc
sub
mov
inc
cmp
cmp
rclb
daa
mov
outsl
sbb
adc
push
sub
dec
cmp
xchg
mov
js
ret
add
jle
push
push
in
hlt
dec
icebp
lcall
and
jno
ss
gs
mov
inc
xlat
lock
xchg
lea
in
mov
xor
push
adc
jbe
stc
scas
jb
push
es
mov
mov
or
jmp
mov
ss
popf
push
insl
mov
jo
lea
cmp
xchg
adc
xor
jg
lds
mov
js
or
sbb
adc
sub
mov
xchg
test
sti
xor
xchg
inc
jns
divl
in
sub
fs
add
add
mov
test
shl
mov
jmp
lahf
xor
fwait
xlat
mov
push
lea
add
jg
mov
mov
jbe
add
cmp
lret
sbb
mov
push
pop
rcll
pmulhuw
xor
and
xchg
out
cmp
jne
dec
cmp
movsl
jl
pushf
mov
cmp
sbb
mov
movsb
mov
popa
pop
pop
test
fsubrs
negb
rcrb
jmp
mov
lahf
push
mov
lock
xor
mov
mov
xchg
add
xor
cmp
push
mov
or
pushf
mov
fs
cmpsl
lods
xchg
adc
add
push
jmp
rep
ss
dec
shrb
and
outsb
jecxz,pn
xlat
xchg
lret
jecxz
adc
push
and
gs
cmc
pmaxub
pop
adc
adc
clc
fisubs
mov
mov
push
pop
push
add
add
ss
mov
mov
ret
inc
and
mov
or
inc
clc
push
xlat
mov
stos
sti
test
add
jmp
stos
in
xchg
dec
fsubrl
rcrl
rcrb
es
sbb
ror
cmpsb
fldenv
fwait
xor
mov
lods
jb
mov
sbb
scas
add
jno
cmp
je
mov
add
clc
adc
jecxz
push
repnz
and
lock
cmp
and
sbb
not
mov
fisttpll
ret
pop
sbbl
sbb
jle
mov
adc
pcmpeqb
cs
mov
divb
fwait
cmc
cmpsb
dec
xor
in
mov
fidivrl
mov
out
sbb
or
push
mov
pop
pop
xchg
loop
inc
sub
mov
lcall
cwtl
loopne
adc
cmc
inc
inc
aas
jnp,pn
bsr
and
jns
aaa
shlb
mov
xchg
daa
fidivl
add
add
repnz
jmp
inc
ljmp
sar
sub
cmp
das
cwtl
outsl
xchg
sub
inc
pop
push
push
rclb
push
pop
add
in
popf
leave
and
adc
in
and
or
lea
je
test
push
xchg
popl
hlt
in
imul
push
enter
pusha
subl
cmp
and
and
jg
mov
jl
and
cmpsb
fisubrs
pop
ljmp
jge
jecxz
sbb
push
jmp
jle
pop
dec
xor
js
pop
adc
test
adc
out
loope
loope
imul
fists
jno
cli
fistps
push
sahf
outsl
xchg
insl
sbb
test
ds
pushf
enter
pop
fistpll
sub
pop
pusha
mov
clc
xlat
rolb
fcomps
sub
inc
orb
ljmp
jl
dec
mov
imul
add
add
pop
hlt
and
aad
adc
mov
dec
inc
pusha
inc
xor
pop
jne
inc
ds
adc
stos
lods
mov
add
push
into
dec
sbb
into
outsb
pop
insl
add
sub
xor
push
popa
push
lret
pusha
mov
test
fldl
clc
dec
repnz
stos
jmp
jno
sub
and
shrb
mov
outsb
sahf
cmpsl
push
xchg
mov
fnstcw
xor
repnz
dec
push
jne
sahf
cltd
lahf
xlat
ljmp
or
jg
ja
inc
lock
int
mov
mov
gs
xor
jg
loopne
out
rolb
push
push
add
testb
pop
leave
xor
push
adc
pop
lahf
dec
push
xchg
into
xchg
push
fisubl
dec
push
out
dec
jae
rcl
mov
and
popl
mov
lock
and
or
fdivrs
add
jo
ja
std
stos
sbb
ljmp
add
add
add
inc
addl
sub
dec
dec
cli
push
pop
or
dec
cmp
inc
push
pop
inc
jg
sbb
add
in
or
pop
dec
dec
add
enter
cmp
fnstenv
mov
push
adc
repnz
cmp
in
enter
push
out
xchg
fstpl
mov
jle
fdivrl
push
inc
movb
xchg
jge
int
mov
inc
fwait
lods
push
cltd
hlt
roll
and
cld
inc
mov
adc
mov
adc
insb
decb
test
mov
push
pop
insb
jmp
in
and
dec
xor
jg
fisubrl
inc
add
mov
call
test
fiadds
lret
cmp
pusha
loop
sub
sub
stos
mov
out
pop
ja
dec
mov
andl
popf
and
divl
insl
pop
sbb
and
lds
dec
xlat
stos
ss
push
or
add
add
mov
cmpsb
push
sbb
fdivrs
add
add
add
xchg
jmp
je
mov
outsl
dec
xchg
and
mov
outsl
leave
dec
cmc
in
subl
loope
aam
mov
jge
jno
adc
bound
int
adc
and
pop
sub
imul
or
dec
jo
aaa
adc
stc
jl
daa
and
pop
aad
loope
mov
mov
in
mov
and
std
xchg
cmp
mov
xchg
xchg
jns
adc
aaa
jp
leave
cwtl
xchg
nop
cmp
lret
sub
push
inc
sbbb
xchg
or
out
outsl
inc
or
stos
mov
add
lea
mov
cwtl
jmp
ficomps
in
mov
adc
ds
adc
in
sbb
fildl
outsl
inc
addr16
sub
fsubp
outsl
loopne
inc
sbb
fisubrs
and
int3
loopne
pusha
jmp
sub
jae
jno
out
xor
cli
mov
dec
mov
add
add
add
daa
mov
jecxz
sub
into
gs
ja
sbb
xchg
adc
out
fwait
js
inc
inc
sahf
js
add
xor
mov
stos
fisttps
mov
sti
inc
jl
xlat
lods
fimuls
repz
mov
divl
out
pop
std
push
mov
in
xor
mov
insl
scas
mov
lahf
out
mov
mov
jne
cmpsl
mov
je
rorl
out
jae
js
cmp
loopne
iret
pop
lods
repz
mov
push
push
pop
push
mov
and
and
jae
mov
ds
divl
inc
mov
dec
idivb
dec
xchg
xor
adcb
push
lods
xchg
jmp
out
and
sub
jae
sbb
fidivl
fbld
out
jne
jp
mov
mov
into
rcr
jbe
test
scas
lahf
in
jecxz
push
inc
ja,pn
adc
loope
loopne
int3
and
mov
mov
add
test
lcall
mov
inc
cmpb
add
add
iret
xchg
cwtl
inc
cltd
es
js
and
roll
add
adc
sub
adc
mov
testl
mov
stos
in
mov
pop
clc
daa
cmp
ja
pop
out
sub
idivb
sub
loope
or
repz
jmp
leave
dec
cmp
ret
cmp
cltd
pushf
ficoms
imul
xchg
pop
xor
pop
pop
pop
add
fstpl
push
pushf
dec
add
lret
les
adc
jg
out
mov
push
lods
adc
mov
jle
pop
mov
fisubrl
ljmpw
ds
jmp
addb
stos
xchg
dec
mov
mov
in
adc
ret
push
int3
push
fwait
popa
cmp
or
dec
pop
outsb
stc
jne
lahf
sub
stc
jmp
fidivs
jle
int
addr16
mov
ds
jmp
add
add
xchg
xchg
jns
jmp
mov
xor
add
cmc
ret
sbb
mov
test
xor
cmp
sbb
mov
aaa
cmp
lock
aas
push
in
lea
cmc
xor
lea
push
jae
push
dec
xor
xor
pop
das
dec
repnz
fcomps
and
add
or
scas
add
push
jecxz
out
adc
popa
cmc
or
xor
lods
fimuls
movsb
fucompp
lock
inc
add
int3
int
es
inc
sub
cmp
push
js
outsl
jbe
dec
sbb
xchg
ss
and
or
mov
pop
add
adc
outsl
in
mov
mov
cmp
fimuls
inc
stos
xchg
ret
cmp
insl
popl
ds
xchg
pop
rorb
sbb
addr16
daa
pop
jb
pop
push
iret
cmc
popa
mov
inc
shlb
mov
sbb
rcll
jl
cld
insl
or
sub
add
add
lcall
jg
jnp
mov
add
add
push
inc
mov
cld
jmp
jmp
mov
or
jge
pop
add
inc
pop
int3
les
cwtl
test
xchg
add
incl
out
jbe
ret
lahf
in
push
xchg
imul
mov
cs
stos
xchg
fildll
cs
inc
sarb
lods
test
stos
mov
int
or
rcrl
idivb
loopne
push
jmp
inc
sbb
push
xorl
add
lds
lret
or
adc
cmp
out
pop
mov
out
sbb
push
add
push
dec
pop
add
in
mov
jnp
insb
into
sub
and
ds
xor
sbb
jnp
inc
sbb
add
negb
sbb
mov
add
cmpsl
jbe
mov
mov
or
test
je
push
sahf
push
shll
cmpl
add
add
mov
idiv
jne
iret
arpl
xor
add
add
adc
cmp
adc
in
pop
fs
and
jl
xchg
push
icebp
lds
mov
adc
mov
pop
mov
xorl
rcll
rcll
fs
pusha
push
scas
orl
cmp
xor
and
adc
sahf
mov
mov
xchg
mov
adc
push
dec
movsl
fsubl
jmp
in
jl
outsl
pop
xor
sbb
add
loop
sbbb
cli
das
aad
imul
popf
mov
ss
cmc
xchg
xchg
cltd
stos
stos
test
and
insl
lock
les
outsb
mov
jmp
clc
int3
lret
inc
lea
and
dec
lock
push
ja
lret
dec
adc
jmp
adc
and
repz
ja
fcompl
sub
jbe
add
add
add
pushl
sub
lret
inc
nop
addl
add
rol
adc
adc
clc
push
ret
cmpsb
add
xor
dec
cs
push
xchg
sub
mov
cmpsl
shrb
cs
pop
mov
rolb
pop
inc
mov
lods
xchg
aam
inc
xor
movsl
cmp
pop
add
pop
push
aad
rolb
pop
rcrb
xchg
xchg
lods
dec
das
outsl
mov
lahf
inc
push
les
aam
xchg
imul
movsl
psubq
push
add
js
test
test
roll
or
mov
sbb
xor
test
xchg
pop
mov
push
mov
sub
outsb
lret
sarl
mov
addr16
lock
mov
push
in
imul
insl
test
stos
subb
xchg
xchg
clc
adc
iret
push
cmp
cwtl
std
int3
ret
dec
mov
add
jp
pop
movsb
shr
pop
je
std
mov
mov
jge
std
sti
iret
ss
push
jno
dec
cld
les
add
pop
cs
adc
mov
cmp
repnz
mov
jmp
add
push
loop
push
mov
xchg
inc
add
cmp
dec
mov
out
sbb
and
push
call
mov
mov
ljmp
ret
fwait
cmp
inc
add
nop
repz
add
mov
and
daa
les
cmc
lds
cmc
das
mov
pop
dec
aaa
movsl
lret
fsubs
call
adcl
cmpsl
in
aaa
stc
push
fmuls
wrmsr
ja
xor
call
sbb
ljmp
pop
adc
rcrb
popf
mov
dec
mov
jno
dec
dec
jl
dec
push
fwait
add
aas
ds
je
and
out
jp
xchg
into
xchg
lds
sbb
pop
mov
dec
mov
aam
cmpb
add
mov
jnp
out
or
clc
mov
addb
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
es
pop
cwtl
addl
add
add
in
push
inc
dec
mov
xchg
es
sbb
mov
push
mov
outsb
mov
ret
pop
insl
nop
loop
mov
and
stos
outsl
add
test
sahf
fdivr
xor
xor
dec
fcom
sub
sbb
outsl
fsubs
pushf
cmpsl
das
inc
sub
je
mov
addr16
lret
sub
mov
insb
push
cltd
sub
jmp
std
test
insl
mov
das
sub
mov
cmp
dec
jecxz
test
stc
imul
nop
fsub
mov
test
xor
lods
sub
mov
pushf
insb
jne
in
lret
dec
dec
push
cmp
push
fwait
and
add
pop
gs
lods
jnp
pop
lods
imul
fwait
jno
xchg
cmpsl
xorl
jno
out
das
xor
outsb
movb
jne,pn
add
lea
test
or
mov
mov
mov
cmpsl
imul
add
cltd
stc
xorl
sbb
testb
mov
in
roll
lahf
adc
lahf
sub
jne
iret
adc
shll
mov
push
mov
aam
pop
and
ljmp
ljmp
push
jne
xor
and
call
push
jno
popa
pop
xchg
leave
jmp
push
insb
jno
inc
adc
add
xchg
xchg
jl,pt
loopne
push
cltd
das
int3
xchg
int3
gs
ficomps
jg
inc
push
ror
sbb
dec
pop
pop
jle
mov
imulb
notb
mov
jl
aam
jl
ja
gs
or
adc
push
or
js
andl
cmp
mov
xor
fwait
pop
bound
das
inc
dec
and
inc
sbb
jp
and
out
ljmp
lock
xchg
stos
popf
adc
add
add
jae
jae
lock
cmpsl
sbb
into
in
push
inc
scas
or
mov
add
js
aaa
xchg
and
xchg
and
call
inc
mov
push
inc
jl
mov
mov
push
roll
pop
or
shlb
int
aas
lahf
sub
test
in
in
inc
pop
xor
cwtl
cmp
push
xchg
push
cmc
xchg
adc
mov
mov
icebp
mov
je
xlat
add
pop
inc
bound
stos
mov
les
cld
ljmp
push
jae
aas
popa
add
testl
mov
insb
xlat
add
and
in
add
xchg
mov
iret
sub
cmpsb
mov
xor
int3
adc
psubb
andl
add
cld
mov
dec
pusha
sub
mov
repnz
sbb
loopne
dec
mov
mov
sbb
loopne
cld
mov
sub
add
add
arpl
jnp
sbb
push
xor
hlt
ret
xchg
add
add
jno
decl
cli
sub
inc
aad
xchg
xchg
xor
dec
xor
dec
fnstenv
and
push
cmp
add
das
outsb
pop
mov
push
inc
adc
jbe
test
dec
stc
push
cmpsl
icebp
fwait
xchg
or
pop
lock
or
movsb
in
adcb
insb
sub
jp
out
xchg
shrl
dec
xor
loop
and
push
jb
push
outsb
add
cwtl
xchg
in
mov
jmp
fnstcw
test
es
lea
enter
in
dec
xor
cltd
or
push
mov
cwtl
jg
insl
or
daa
pop
jecxz
cmp
sub
ss
sub
pop
pop
scas
bound
sbb
mov
out
pop
daa
cmpsl
cmp
repnz
popa
repz
fildll
adc
push
push
cltd
loopne
pop
lock
mov
pushf
push
push
xor
loop
fisubrl
cmp
push
adc
popa
sub
dec
jle
xchg
jp
add
push
aas
or
mov
adc
loope
test
add
add
add
js
push
sub
or
adc
cmc
xchg
sbbb
cmpsl
insb
test
ficompl
xchg
cmpsb
mov
mov
mov
dec
div
lods
or
movsb
lods
aas
stc
dec
int
sub
xor
push
mov
jnp
fcmovbe
mov
push
and
test
jns
pop
mov
push
insb
mov
imul
push
xor
popa
les
mov
enter
loop
shlb
jp
mov
add
lock
push
icebp
inc
loope
dec
sbb
cmp
clc
dec
test
scas
pop
cwtl
leave
fucom
push
fsubs
mov
and
sahf
jae
sarb
popa
test
push
mov
lahf
aam
out
push
cs
lods
mov
dec
movsl
cmp
aaa
and
push
mov
cld
shrb
dec
inc
sbb
or
push
ret
fldenv
pop
insb
fidivl
bound
or
mov
add
add
ret
cltd
je
cmp
loop
inc
addl
xor
inc
movsb
les
call
std
dec
daa
sub
mov
test
mov
loope
imul
in
subb
mov
insl
mov
in
jb
or
loope
and
xchg
xchg
jne
jmp
popa
mov
add
inc
lods
jno
je
mov
aad
insl
lahf
mov
sub
mov
divl
add
mov
loope
aad
sbb
jg
rol
pop
dec
cmpsb
sub
sti
xchg
orb
adc
xchg
stos
dec
dec
sbb
sub
adc
push
aaa
test
cld
jecxz
pop
mov
nop
sub
mov
hlt
mov
fsubrl
aad
addr16
loope
rcrb
dec
jno
sbb
pop
call
popa
xor
cmp
mov
jns
xor
into
mov
add
add
add
out
xor
mov
shl
and
inc
and
out
sub
jnp
cmc
mov
mov
stos
je
femms
jecxz
mov
add
pop
pop
inc
push
testl
in
mov
scas
pop
inc
xchg
ljmp
cmp
mov
shll
xchg
dec
sbb
rcrb
and
into
dec
stc
fcomps
ss
xchg
add
lods
mul
adc
push
aas
add
cs
int3
mov
pusha
out
cld
push
sbb
push
mov
pop
jns
imull
or
mov
iret
rcl
out
xchg
push
ss
cld
pop
cld
lret
adc
das
cmp
outsl
xor
ret
sub
push
xchg
xchg
int
mov
rorl
dec
stos
xchg
frstor
sbb
fcompl
jle
sub
xlat
mov
scas
mov
inc
pop
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
enter
mov
add
add
add
fnstcw
cld
or
mov
cmp
and
xor
rcrb
push
xor
scas
push
cmp
xchg
xchg
call
inc
ss
and
xchg
rcll
cmp
sbbb
insb
pop
loope
xor
sbb
pop
inc
and
dec
lods
stc
lahf
mov
popa
xchg
and
mov
popf
pop
das
in
test
jbe
push
mov
and
jnp
cmp
icebp
jg
int
leave
pop
std
and
mov
pop
xor
mov
in
dec
adc
xchg
int
sub
add
cli
jmp
icebp
lods
lods
or
push
shl
out
jno
mov
jp
mov
xchg
bound
sahf
push
and
je
mov
insl
push
cwtl
jnp
nop
xor
dec
loopne
push
dec
jge
sbb
mov
outsl
xor
mov
cmpsl
sub
loop
push
inc
loopne
cltd
arpl
ljmp
adc
add
add
adc
std
out
ljmp
mov
add
add
test
push
mov
cli
push
jo
sbb
cld
ljmp
aaa
xorl
adc
mov
popa
popf
rorb
pop
repnz
push
cwtl
aad
add
loope
or
movsl
add
int
loope
or
xchg
add
shll
std
pushf
gs
sub
insb
push
mov
movsb
cli
sbb
mov
or
or
sub
inc
sahf
das
aad
and
mov
jns
hlt
incl
xor
mov
sbb
mov
test
push
aaa
popf
dec
mov
sub
inc
lret
imul
adc
or
mov
sbbl
insl
xlat
out
push
fbld
fs
mov
cmp
adc
pop
sub
sbb
nop
jne
add
mov
xor
cmpsb
fisubrl
push
mov
mov
dec
in
sbb
add
mov
icebp
or
xor
mov
add
add
xchg
and
arpl
mov
pop
cwtl
movsl
pop
aaa
fmulp
test
mov
rolb
pop
ret
cmp
jae
frstor
dec
arpl
dec
int
inc
rclb
in
ljmp
or
clc
push
push
jle
ret
into
sarl
cwtl
add
mov
and
jbe
fsubrs
mov
push
mov
dec
pop
sbb
sub
push
dec
arpl
sti
mov
xchg
jnp
adc
fisttps
mov
or
xchg
rolb
cmpsb
int3
add
orl
mul
ja
jo
in
movb
loopne
mov
xor
jbe
inc
inc
iret
xchg
adc
ret
pop
mov
incb
clc
pop
out
jl
jne
cmc
mov
sub
xchg
out
shrl
lods
imul
xchg
call
call
rcr
aam
aaa
or
orl
rcrb
add
add
les
fcomps
add
lret
lret
dec
rorb
add
push
std
push
inc
mov
je
jle
xlat
pop
mov
rep
mov
jmp
mov
fstl
in
inc
pushf
dec
into
adc
add
fidivrl
jo
sbb
mov
dec
fisttps
cmp
push
mov
push
stos
or
add
mov
xchg
int3
cmp
mov
jb,pn
cmc
ja
dec
jmp
or
xor
xor
lret
inc
xchg
dec
out
lcall
aad
xor
cmp
negl
iret
mov
cmp
in
orl
xchg
rclb
fisubrl
cld
add
inc
out
jnp
pop
add
or
dec
outsb
aas
jge
fwait
les
daa
xor
in
cmp
adc
mov
into
stos
aam
testl
cmp
mov
lcall
adc
rorb
xlat
test
bound
add
add
ljmp
dec
mov
ret
mov
add
add
lahf
data16
fsubr
cltd
insb
pop
jbe
stos
inc
ljmp
nop
inc
insb
sub
fs
fcmovnbe
cltd
lods
pop
into
jns
cmpsl
addr16
clc
xchg
clc
add
and
adc
insl
xchg
in
mov
repz
mov
in
mov
push
mov
shrb
add
in
xchg
adc
dec
out
push
or
mov
ds
push
cmp
push
dec
daa
jae
es
and
insl
xadd
mov
pop
or
movsb
push
aad
xorl
mov
sbb
mov
push
xor
shl
loop
popa
sahf
icebp
xchg
cltd
neg
lea
push
pop
mov
and
arpl
or
mov
mov
lock
les
sahf
mov
or
fadds
aam
in
push
sti
xlat
pop
xor
adc
push
xchg
mov
cwtl
pop
out
push
out
loope
add
add
aaa
shlb
cmc
div
testl
movsb
enter
add
add
pusha
mov
sbb
mov
dec
mov
sbb
push
sarl
mov
mov
push
push
mov
in
mov
addb
mov
popa
sub
jbe
xor
mov
or
aaa
or
ljmp
lret
inc
lcall
aas
testl
scas
scas
call
int3
fdivs
jbe
xchg
pop
dec
and
pop
fwait
aam
stc
or
aam
mov
into
pop
iret
jp
incl
dec
sub
hlt
out
fistl
gs
int3
gs
arpl
mov
xor
es
in
pushf
lods
sub
cmp
and
aad
jo
mov
xchg
repz
scas
jae
jecxz
aaa
out
jae
int3
jg
out
popa
testb
xor
pusha
fwait
pop
adc
cld
cmp
and
xchg
add
inc
add
add
pop
push
nop
push
sahf
rcr
pop
adcb
or
add
nop
add
add
add
xchg
xchg
ss
jae
mov
outsl
nop
ljmp
fwait
jge
mov
mov
dec
xchg
hlt
xorb
cmp
mov
adc
mov
cli
or
pop
xchg
jmp
fsubrl
add
lods
je
mov
fwait
lock
test
mov
divb
or
fmul
pusha
add
inc
jmp
ret
add
ja
andb
cmp
dec
fadd
fs
xlat
cs
mov
ds
mov
fcmovu
push
popl
repnz
fcmovnbe
push
lock
mov
iret
mov
gs
jl
test
imul
int
ret
pop
les
jmp
loop
test
adc
shl
sbb
cmpsl
mov
fildll
xchg
movsl
xchg
xor
jmp
fnstenv
cmp
mov
lds
sbb
add
add
arpl
cmpsb
jcxz
fimull
rclb
add
imul
jp
hlt
hlt
pop
jae
lods
insl
push
xchg
push
pusha
sbb
mov
and
popa
out
imul
je
out
rcll
mov
sbb
mov
push
repz
scas
mov
sub
in
in
pushf
in
add
in
lret
out
fs
or
jmp
hlt
push
arpl
mov
jge
mov
cld
out
das
fidivrl
ret
test
push
add
sti
rcll
adc
lcall
jg
mov
mov
pop
push
pop
aaa
sbb
mov
adc
jle
test
push
pop
cmpsl
pop
xchg
or
push
fisubrl
push
lret
jmp
int
fists
mov
push
xorb
and
mov
and
mov
daa
inc
sub
inc
add
mov
ss
enter
shrl
dec
push
pushf
xor
xchg
popf
daa
pop
clc
jnp
jg
in
cli
enter
pop
lea
add
add
adc
mov
icebp
movsb
xchg
rcr
scas
and
mov
inc
adc
xchg
cmp
xchg
cmp
int3
dec
hlt
test
arpl
call
push
xchg
jl
cltd
pop
push
fstl
sbb
xor
dec
outsb
repnz
pop
hlt
dec
das
jmp
sub
adc
xchg
jne
jne
dec
xor
xor
sub
repnz
push
lcall
popa
mov
std
aam
sub
pusha
es
dec
lret
cli
ja
mov
orb
outsb
xor
adc
adc
sbb
scas
ret
xor
clc
fdivs
inc
pop
inc
lds
addr16
xchg
jge
rcrl
pop
lret
jecxz
push
cwtl
cwtl
enter
imul
push
nop
inc
cli
jb
inc
jno
rorb
ss
mov
pop
cmpsb
pop
test
fisubs
dec
ljmp
cld
gs
mov
fcoms
add
and
pushf
fcompl
testb
out
cmp
mov
test
pusha
fsubs
push
loop
repz
push
xchg
mov
sub
daa
in
fdivl
test
cmp
rcll
lahf
and
daa
xchg
adc
pop
les
sbb
sbb
sbb
mov
adc
ret
lods
test
gs
mov
inc
jge
dec
push
icebp
fsubs
pop
pop
repnz
loope
lcall
pop
dec
int3
lcall
es
ffree
jb
jmp
insl
jmp
popa
mov
adc
xchg
pop
xchg
xchg
in
sarl
ds
pop
sub
aad
mov
jo
pop
mov
adc
pop
call
sbb
cli
mov
in
fidivs
hlt
imul
sti
out
jnp
aas
aam
and
nop
repnz
fwait
ss
out
mov
or
add
jl
sar
std
jle
pop
popf
scas
xchg
jns
sbb
xchg
add
add
add
sbb
xlat
dec
fwait
int
cmp
lret
imul
cmp
cs
dec
adc
cmp
push
ds
lahf
dec
enter
sub
inc
clc
adc
mov
sarb
mov
fldcw
sbb
ds
mov
pop
jb
mov
fadds
ljmp
divl
sbb
add
xchg
movsb
inc
cwtl
dec
mov
or
fadds
ss
push
jle
aam
gs
loope
out
and
mov
inc
mov
jp
mov
mov
filds
dec
jge
xchg
fcoms
sbb
scas
dec
leave
xor
icebp
clc
movsb
fbld
out
sahf
das
inc
jnp
jecxz
xor
aam
sti
popf
pusha
push
and
push
inc
push
clc
test
and
xor
aam
mov
sub
mov
vsubps
jb
addr16
faddl
add
add
cwtl
or
stos
xchg
cmp
in
mov
xchg
add
add
add
xor
shr
cmpsl
cmp
xor
adc
mov
adcb
mov
sbb
push
mov
push
add
pop
or
scas
pop
adcl
mov
jge
out
mov
xchg
xchg
add
shlb
ret
jecxz
lahf
add
cmp
das
gs
iret
adc
not
ljmp
mov
aas
sub
and
fidivrs
pop
dec
jb
mov
sub
lds
icebp
dec
icebp
adc
xor
daa
mov
into
pop
xor
outsb
jb
jb
mov
push
shrl
lret
mov
lcall
jmp
jne
jae
push
lock
sarl
rolb
ficoml
fildll
sub
add
add
prefetcht0
inc
or
js
stos
movsb
mov
and
mov
ret
das
sbb
cs
xchg
add
add
outsl
sti
mov
mov
xchg
lret
xchg
add
add
add
popf
mov
xchg
lret
lret
or
iret
pop
jg
aad
cli
int
jo
sub
imull
fmuls
movb
mov
push
push
jle
inc
push
fwait
pusha
sbbb
cmp
stos
mov
scas
jne
push
aaa
mov
sbb
pop
testb
mov
mov
xlat
cltd
movsb
int
cli
test
xor
push
jmp
cmp
neg
cmp
mov
ja
call
movhps
jb
fisttps
sbb
push
push
xor
xchg
bound
sub
inc
fstpt
pop
imul
pop
aam
and
jae
cmp
or
add
add
push
fnclex
xchg
cmp
shl
aad
sbb
icebp
fildl
daa
cmc
sahf
dec
cmp
jb
cmp
sarl
repz
es
dec
mov
outsl
push
clc
stos
outsl
sbb
mov
add
leave
push
and
xlat
aas
dec
sbb
or
call
add
add
pop
mov
mov
dec
rcrb
mov
mov
inc
cmpsl
loope
mov
dec
mov
push
adc
mov
cmp
nop
ret
jmp
ficompl
leave
cmp
filds
push
scas
and
pop
lcall
xchg
mov
arpl
lea
pop
cmp
xchg
mov
enter
jg
stc
ret
rorb
stos
jne
xor
sub
cmp
or
mov
push
lret
out
sub
imul
or
rcrl
dec
xchg
int
add
mov
std
aas
adc
sbb
push
and
dec
sbb
add
pushf
dec
arpl
adc
mov
or
in
loop
push
push
and
push
pop
test
xchg
sahf
sub
nop
out
mov
mov
lahf
mov
inc
pop
sbb
loopne
cld
jg
out
add
add
mov
mov
jmp
test
gs
scas
in
cwtl
add
add
add
int
push
xor
iret
enter
cmp
mov
pop
add
popa
testl
sub
mov
adc
sahf
inc
stos
gs
test
int
in
jb
sbb
pop
adc
jmp
xor
stos
dec
enter
and
cmp
pop
imul
adc
mov
lock
or
or
sbbb
test
cli
push
rclb
mov
fisubs
inc
pusha
decb
loop
add
outsl
dec
jo
push
xor
leave
and
lcall
mov
test
mov
dec
loopne
and
std
and
repz
mov
push
mov
fsubrs
pop
in
jb
movsl
and
jge
std
mov
pop
jl
xor
add
sbb
lahf
mov
dec
mov
mov
adc
sbbl
popl
and
add
add
or
adc
mov
stos
cwtl
adc
jl
flds
out
xchg
jno
mov
into
and
loop
sbb
add
push
sub
adc
mov
xor
flds
cli
mov
mov
insl
push
cmpsb
push
sbb
pop
mov
test
cmp
lods
dec
int3
test
mov
xchg
movaps
fwait
dec
jo
sub
divl
jmp
fisubrl
movsl
iret
and
push
sbb
mov
roll
lods
gs
inc
aam
xor
sbb
mov
imul
mov
cmc
jge
lahf
jns
idivl
pushf
mov
jecxz
xor
adc
cld
sub
push
loope
sub
xchg
aaa
xchg
ss
lods
adc
mov
test
arpl
pusha
add
and
inc
shlb
arpl
and
sbb
sbb
add
add
imul
movsb
and
ret
ret
add
add
add
sbb
int3
ret
pop
jnp
icebp
in
arpl
add
aam
cwtl
push
out
sub
mov
pop
pop
pusha
jb
jmp
or
add
or
shrl
mov
sub
fnstcw
repnz
sub
sbb
push
jp
jg
or
mov
hlt
cmpsl
ja
leave
sbb
pop
inc
push
imul
xchg
sarb
jmp
leave
fiadds
int
mov
mov
mov
adc
nop
fsubrs
in
dec
enter
dec
leave
popa
std
jl
loope
push
ret
jne
inc
jge
mov
sbb
push
mov
addr16
punpckhbw
les
adc
sbb
jno
xor
out
xor
out
or
mov
jbe
xor
mov
pop
adc
ffree
sub
mov
sub
divl
add
mov
jge
jg
ljmp
in
lahf
mov
cmp
add
add
add
cmp
xchg
adc
fwait
mov
sbb
xor
pop
and
iret
mov
enter
dec
cltd
and
or
ret
loop
pop
jns
scas
rcrl
pop
scas
in
cmpl
adc
mov
ljmp
or
pop
rol
outsl
push
mov
lds
sub
sbb
dec
popa
rcrb
in
xor
push
addl
loop
cli
ja
scas
inc
ljmp
add
push
or
mov
popf
bound
ret
test
sbb
sbb
xor
push
inc
cmpsl
cmp
mov
pusha
adc
in
sub
xor
in
data16
xchg
add
cmpsl
cmp
scas
leave
inc
xchg
loope
sbb
mov
xchg
ror
fsubr
jns
fdivrs
fildl
dec
or
jo
xchg
dec
push
jae
popf
fdivrl
fcomps
xchg
cltd
sub
out
inc
sub
or
cmp
cld
pushf
add
add
add
arpl
pop
in
movb
push
orl
pop
inc
loop
and
stc
jecxz
sub
pushf
inc
mov
push
sbb
cmp
mov
out
das
ficompl
sub
in
jle
xchg
jecxz
pop
mov
mov
xor
in
cli
pop
push
aas
cmp
mov
sbb
mov
std
mov
ds
roll
xor
fsubrp
lock
aas
imul
in
repz
cli
and
push
std
lock
jne
push
lret
loope
ret
loopne
sub
clc
sbb
inc
pusha
pop
lcall
push
mov
xor
pop
xor
insl
dec
gs
and
outsl
das
lret
leave
sub
lock
inc
mov
mov
adc
js
in
adc
fdivrs
es
cmp
and
lea
andl
cmp
xlat
pop
loop
test
mov
cld
mov
add
add
ret
cwtd
push
lcall
pop
xchg
sub
pusha
les
dec
dec
sub
push
insb
loopne
fildl
mov
cmpsb
add
push
jne
push
repnz
lods
mov
xchg
dec
lahf
insb
push
mov
adc
jecxz
das
add
sarl
sub
sub
dec
cmc
mov
fs
mov
push
xchg
xor
mov
adc
dec
cmc
push
imul
jne
dec
cmp
addr16
into
xor
push
or
loopne
jne
pop
push
xor
pop
fdivrs
sub
inc
pop
scas
lret
pop
rolb
rclb
rorb
arpl
sbb
cmp
sbb
mov
dec
inc
das
sub
loop
gs
mov
scas
sub
ret
cmp
fisubrs
dec
out
pop
hlt
jp
dec
pop
push
xchg
push
adc
sahf
lret
add
add
mov
repz
repz
or
add
add
add
add
stc
mov
ljmp
std
aad
inc
push
xor
gs
xlat
cmp
fidivrs
or
scas
out
or
and
jae
hlt
dec
call
and
cmp
dec
push
mov
cli
push
stos
and
movsb
mov
xchg
fsubl
push
add
pushf
scas
leave
clc
mov
mov
mov
jo
aad
ss
fxch
lret
insl
stos
sub
sbb
scas
imul
fnstenv
out
push
or
gs
jnp
xchg
push
mov
dec
cmpb
xchg
je
jbe
dec
xchg
sbb
aaa
mov
sahf
mov
dec
sub
cmc
push
cmp
adc
sbb
xchg
clc
mov
mov
mov
in
pushf
and
fisubrs
xor
cmp
repz
mov
add
add
mov
inc
inc
add
mov
add
push
aas
push
adc
jge
sub
inc
andl
repz
jbe
rcrl
rcrb
add
mov
call
gs
mov
add
or
mov
int
ret
sub
xchg
int
push
ret
shlb
add
daa
pushf
xchg
xor
divl
xchg
clc
jns
adc
mov
pop
pop
lock
lds
sbb
ret
lcall
mov
ss
stos
sti
mov
jmp
notb
mov
mov
mov
pop
pop
shll
cld
cmp
push
pushf
repnz
pop
mov
lods
inc
les
push
loope
push
sbb
inc
cmp
pop
adc
stos
push
mov
cmp
xor
aas
pushf
mov
mov
and
dec
dec
and
outsb
jmp
add
add
std
inc
mov
ret
mov
add
ljmp
imul
mov
mov
pop
sbb
push
iret
orl
mov
cld
mov
add
mov
push
jae
aam
fsubr
and
jne
pop
lea
lods
ror
sbb
sbb
adc
or
ss
jb
mov
rcll
lret
dec
dec
outsb
jae
in
jle
stos
and
lret
test
sbb
mov
lea
pop
lods
mov
jg
cmp
push
scas
ljmp
loopne
jb
sbb
sub
dec
lods
dec
mov
lahf
lea
or
sbbl
sub
out
push
mov
js
sbb
dec
xor
imull
neg
mov
sahf
enter
rol
xchg
pop
pop
into
imul
mov
lods
jne
je
push
inc
fdivl
push
dec
mov
adc
add
not
iret
lods
and
or
or
subb
cmp
js
xchg
inc
add
into
out
iret
in
xchg
sbb
lds
ffreep
jbe
push
dec
test
push
pop
cld
into
jne
es
es
lret
mov
inc
xor
and
mov
std
mov
out
jmp
fbld
insl
fwait
insb
into
pop
push
mov
mov
je
jge
dec
out
mov
mov
je
and
xor
adc
ret
push
cmpsb
aam
out
cmp
cli
mov
and
loop
inc
jl
push
popf
stos
shll
fisubrs
mov
jnp
inc
xor
call
call
test
and
fdivrl
xchg
mov
jno
inc
lds
rorb
gs
sub
lods
mov
and
lea
clc
sbb
adc
mov
sbb
xor
adc
add
add
add
dec
fwait
fs
sub
cld
jns
xor
loope
mov
mov
rorl
or
xor
sbb
sub
fmull
movsb
adc
mov
mov
leave
sbb
cwtl
mov
inc
cmpsb
cs
jae
out
inc
addl
ss
jno
sbbl
call
cs
testl
add
popf
cld
and
cmp
adc
mov
cmp
pop
push
imul
push
sub
and
adc
sbb
shlb
fwait
lds
movsl
sub
sbb
mov
lock
add
sarb
ljmp
dec
push
push
mov
push
mov
test
lea
in
sbb
pop
mulb
add
mov
adc
jl
dec
jnp
repnz
lahf
jae
jo
out
test
add
stos
hlt
jmp
cmp
jbe
test
out
adc
movsb
add
add
add
dec
mov
cmp
mov
mov
pushf
inc
dec
mov
push
pop
loopne
cmp
lcall
in
daa
adc
mov
mov
push
jae
insb
aad
inc
push
lret
push
nop
sbb
addl
ds
jle
pop
jb
xchg
repnz
inc
cltd
or
inc
cmp
orb
cltd
adc
aam
cmp
and
cmp
jbe
mov
sarl
adc
stos
pushf
pop
push
fsubl
xlat
adc
aad
sub
fdivs
xor
push
sbb
repz
je
dec
stc
int
gs
imul
inc
ds
les
std
ss
pop
out
stc
dec
repnz
xor
enter
dec
mov
jb
and
popf
fwait
aam
xor
sub
addb
les
lret
arpl
imulb
add
out
xlat
out
jg
in
xor
fptan
inc
test
add
add
cmp
lret
push
add
or
aaa
in
adc
mov
pop
adc
fsubr
pop
sub
mov
aaa
xchg
rcl
mov
scas
push
je
pop
add
cltd
fmull
ret
adc
adc
or
nop
clc
mov
out
sbbb
shl
leave
jns
dec
popa
jo
jl
jmp
jnp
shlb
sti
push
into
mov
cmpsb
stc
mov
mov
adc
or
fdivrs
lahf
out
cmp
stos
int
pop
movsb
sbb
jp
daa
cli
xor
jecxz
dec
jne
cld
push
mov
pop
fisttps
jo
cltd
adc
mov
loopne
xor
mov
add
out
sbb
outsl
cmp
add
push
add
add
jl
inc
inc
outsl
in
pop
push
shl
aam
sbb
pop
xor
sbb
pop
fbstp
fldl2e
sub
push
xchg
cmpsb
add
add
add
addr16
test
sbb
pop
out
mov
dec
fnstcw
add
stc
lret
into
fistpll
mov
call
mov
and
push
movsb
mov
xor
mov
shl
and
xchg
or
pushf
pop
lret
js
stos
push
sbb
nop
pop
cli
sub
dec
and
xchg
iret
xchg
rorl
dec
adc
push
fwait
and
lds
imul
mov
jne
popf
cmp
mov
pushf
pusha
jbe
jns
sbb
add
inc
ljmp
icebp
jns
stc
cmp
aaa
sbb
into
xor
js
stos
jecxz
mov
pushf
pop
fidivrs
and
and
mov
sbb
movsl
mov
jnp
aam
stos
inc
and
stos
jg
fidivs
push
jne
jno
test
dec
jmp
sub
in
inc
mov
arpl
mov
jno
add
add
mov
fadds
and
add
add
add
inc
nop
jbe
popa
roll
sub
movsl
mov
shrl
xor
cmp
aam
and
cmc
jl
cmp
sbb
and
mov
aam
add
fdivrl
lret
in
sub
jge
mov
add
mov
das
test
add
filds
inc
scas
cwtl
xor
push
mov
dec
xor
std
out
daa
jmp
lock
lcall
mov
jae
std
xchg
xchg
pop
mov
pop
ds
lahf
js
cmp
xchg
mov
stc
fists
jns
ss
cmp
pop
jae
clc
mov
sti
jmp
aam
mov
inc
aad
jno
push
and
repnz
push
mov
cmpsl
jo
jmp
push
rcll
pop
lds
cmpsl
pop
jl
xchg
xchg
push
repnz
dec
ss
ds
push
hlt
rclb
mov
add
add
mov
push
sti
jmp
push
mov
test
cld
xchg
test
add
add
mov
cmp
hlt
iret
mov
jae
popa
xor
mov
mov
push
adc
outsl
sar
loopne
cmpsl
or
pop
mov
push
in
dec
pop
lea
divb
xchg
push
jb
into
notrack
cmp
subb
and
imul
and
cmpsl
lcall
lcall
stos
inc
in
popf
les
or
ljmp
dec
add
pop
out
sub
or
frstor
mov
scas
cmp
rclb
sbb
test
loope
mov
cmpsb
out
enter
les
fisttpll
inc
xchg
test
icebp
fisubl
xor
push
notb
stc
ja
pop
nop
mov
xchg
sub
mov
inc
rcrb
pop
lea
repz
shlb
insb
in
dec
mov
pop
fidivrl
and
jp
out
xor
clc
stos
adc
pop
push
mov
jecxz
lock
adc
sub
add
add
add
loope
dec
mov
cmp
or
mov
push
mov
push
addb
sub
outsl
mov
and
movsb
mov
xchg
popa
data16
out
cld
stc
sub
out
lret
mov
mov
xlat
pop
jbe
lock
jp
xchg
testl
mov
lea
fcompl
fdivrl
sbb
sub
push
push
xchg
nop
scas
fs
cli
adc
adc
movsl
xchg
cmp
and
xor
push
mov
ja
dec
in
insb
mov
cmp
cmpsl
aaa
fldenv
push
sbb
jle
xchg
jo
push
or
call
fiadds
scas
push
pop
into
loop
and
int3
pop
int
repnz
in
lret
or
xchg
mov
lret
push
push
jge
push
or
lea
cmpsb
test
jo
xchg
pop
jl
sbb
push
fstps
call
ljmp
cmp
push
adc
mov
cld
mov
leave
jle
mov
stos
add
add
add
ljmp
idiv
xor
sub
sbb
mov
enter
adc
or
dec
rclb
and
aad
mov
mov
push
cwtl
xchg
push
cwtl
fstpt
inc
mov
mov
sub
cmp
in
inc
xor
idiv
jns
mov
sbb
movsl
js
add
mov
imull
cli
add
jae
andb
or
rcrb
adc
mov
ret
ror
int
cmpsb
jmp
xchg
mov
fnstenv
jnp
lds
mov
cmp
and
jb
inc
fwait
lods
cs
inc
fildll
push
and
add
mov
sbb
xor
add
shlb
jbe
sub
in
or
insl
pop
out
dec
insl
popa
dec
into
inc
iret
into
lds
pusha
test
fucomp
movsl
cmp
mov
dec
das
pop
out
cmc
mov
shlb
add
add
add
adc
push
xchg
fld
int
xlat
mov
dec
faddl
lea
in
js
movb
ja
ret
add
pop
cmp
lds
adc
inc
hlt
and
cmpsb
xor
enter
jg
add
out
lods
popf
pop
and
pop
xchg
adc
jmp
xchg
aaa
mov
inc
imul
cltd
cmpsb
add
ja
test
mov
ja
rcr
aaa
fistpl
mulb
jl
cltd
pop
add
in
stos
rorb
jnp
sbb
popf
dec
popf
jmp
loopne
sub
fcompl
adc
adc
lcall
pop
push
test
sub
popf
mov
inc
adc
hlt
loopne
push
nop
mov
jp
je
pop
test
sub
pop
cmp
roll
jno
movsb
hlt
arpl
sbb
lret
data16
cli
fucomip
std
dec
std
pop
lcall
xchg
pop
push
inc
dec
lahf
pop
cmp
add
scas
inc
dec
stc
sub
stc
mov
xchg
andl
daa
bound
push
cli
mov
out
inc
ret
xor
repnz
bound
cmpl
ja
inc
jns
out
popa
popf
mov
fs
in
mov
int
inc
dec
imul
cmp
js
mov
inc
je
fldl
mov
add
push
sub
jl
jl
mov
ljmp
lret
and
fists
inc
imul
push
xchg
push
inc
lock
jecxz
test
dec
stos
stos
nop
js
rolb
xchg
psrad
push
mov
lret
sbb
insb
lds
mov
push
mov
add
mov
adc
nop
lea
sbb
fildll
stc
test
divb
lea
jb
cmp
adc
push
enter
push
mov
add
fidivs
loop
ljmp
sbb
add
add
add
clc
into
mov
or
jno
dec
nop
scas
ficoml
push
inc
sub
inc
pop
jnp
jmp
pop
mov
fimuls
cmpsl
cmp
mov
mov
lods
jbe
mov
sub
inc
inc
sbbl
adc
pop
xchg
sub
or
adc
pop
mov
adc
ss
jge
lret
xor
mov
inc
lods
cli
mov
cmp
aas
cmp
or
push
test
inc
inc
je
mov
out
lret
push
in
js
pop
pop
fldt
adcb
or
jle
dec
or
inc
mov
ja
add
dec
push
shrb
lods
cmpl
mov
xchg
xchg
loop
xchg
mov
add
imul
mov
fmull
mov
push
or
out
or
into
fisttps
push
js
sbb
in
push
xchg
jg
jmp
std
mov
adc
test
add
add
add
mov
sahf
pop
aaa
and
mov
addr16
sarl
ret
mov
cmc
fdivrs
or
xor
push
bound
dec
js
inc
aas
pop
dec
sub
popa
sub
jns
fistps
ljmp
stos
test
shrl
cmpsl
mov
pop
cmp
xor
inc
bnd
xchg
xchg
mov
cmp
fmuls
xchg
mov
or
or
add
sub
cld
xlat
mov
in
call
jmp
inc
dec
mov
test
ds
sbb
and
sbb
inc
fcmovnu
jmp
outsl
inc
dec
ret
or
jbe
cmp
or
movsb
pop
xor
push
cmpb
aas
pop
gs
std
mov
sbb
pop
sbb
stos
push
inc
insl
daa
dec
arpl
sub
cmpsb
jno
mov
rorb
inc
cs
loop
push
divb
inc
mov
xchg
add
add
and
inc
sbb
cmpl
pop
stc
mov
push
icebp
sub
mov
out
stos
push
ss
lea
jecxz
xor
sub
jnp
fcompl
dec
lahf
push
sub
cmp
and
shll
jmp
mov
jnp
cli
push
and
mov
aam
pop
stos
jl
xor
mov
call
or
mov
divb
add
and
sbb
andl
leave
fdivrs
mov
aas
xor
or
jns
iret
movsl
sub
pushf
pop
lds
mov
or
cmpl
cli
sub
pop
loope
adc
addl
mov
test
mov
sbb
test
ret
add
lret
arpl
into
and
jo
pop
sbb
push
imul
mov
mull
mov
inc
pop
inc
lods
les
push
pop
xor
cmp
inc
call
decb
add
add
add
cmpsb
mov
and
repz
sahf
xchg
fnstcw
lret
mov
push
cmpsl
test
movsb
das
bound
pop
cmp
fisubrl
lea
or
push
loope
sbb
cmpsb
add
fadds
mov
xchg
mov
adc
pop
ret
cld
notb
stos
repz
stc
lahf
mov
pop
jns
xchg
push
mov
mov
stos
fcmovnb
daa
rcrl
inc
movsl
cmp
repnz
das
mov
fs
xlat
cwtl
fs
jo
xchg
pop
aas
push
sbb
jmp
pop
pop
pop
jnp
popf
insl
insl
into
push
fsincos
out
jecxz
xchg
hlt
cli
aam
jg
lahf
ret
in
cmc
sub
loope
mov
jnp
movsl
sub
lds
cwtl
adc
jbe
push
lds
bswap
xor
and
mov
pop
push
rolb
dec
sub
mov
nop
push
cli
enter
rolb
popf
sub
es
les
mov
arpl
adc
dec
mov
add
add
enter
shlb
cmp
lods
xor
mov
repnz
mov
xlat
mov
int
push
push
push
xchg
out
dec
xchg
mov
pop
rorl
push
adc
jle
jmp
ja
dec
jp
test
rorl
negb
andl
lock
das
xchg
adc
cmp
or
pop
lock
pop
jge
adc
inc
sbb
pop
sub
out
xchg
and
ret
fstpl
mov
mov
push
jmp
cmp
jbe
jnp
loopne
inc
fimull
jg
cmpsl
cli
movsl
movsb
inc
cli
out
lret
fists
daa
enter
outsl
sub
loope
dec
scas
jmp
dec
lret
inc
lret
ret
loop
insl
jne
out
das
pop
add
in
pop
jg
adc
adc
cmpsb
lahf
adc
ret
movl
jmp
mov
adc
ret
movsb
pop
arpl
mov
push
cltd
xor
cmp
add
add
clc
pop
stc
out
push
pop
bound
mov
mov
add
add
sti
inc
jb
or
subb
push
cmpsb
push
jo
shll
gs
mov
cmp
mov
addl
lds
xchg
cmp
popf
sbb
xchg
aaa
aaa
sub
sub
or
lds
or
xchg
mov
inc
sbb
lcall
jecxz
sbb
clc
jns
test
mov
xor
jno
lods
cwtl
fldl
out
vmovddup
lret
movsb
mov
inc
daa
sbb
adc
icebp
fsubrs
jae
aaa
jp
icebp
and
pusha
repz
mov
in
adc
or
jnp
dec
cmp
cmovne
xchg
jmp
jbe
ret
xchg
pusha
add
fnstsw
sub
sub
and
mov
add
test
cmpsb
push
or
or
cs
mov
add
push
or
aaa
rorb
lds
cli
lcall
push
push
mov
add
add
insl
push
scas
or
jbe
sbb
cltd
mov
xchg
mov
lcall
bound
xchg
sbb
out
data16
test
dec
pop
std
insb
sbb
out
cmp
ljmp
enter
xchg
inc
into
mov
pusha
xchg
pop
inc
lds
ret
addr16
sub
int
mov
cltd
sarb
cmp
add
dec
inc
ljmp
test
xchg
setb
movl
jecxz
aad
loop
aas
pop
sbb
insb
sub
in
push
or
push
cmp
sbb
lock
xor
xor
jnp
and
in
adc
int
mov
jnp
pop
test
mov
ret
aam
mov
mov
jg
rorl
cmp
mov
loope
leave
inc
push
stos
and
popaw
test
xorl
insb
lret
adc
add
add
sbb
adc
xchg
cmpsb
cmp
sbb
push
shlb
inc
push
mov
insb
sub
pushf
fiaddl
leave
add
mov
dec
sub
cltd
lcall
aad
cltd
bound
int
jbe
jg
inc
cmp
std
cli
mov
call
push
ds
lcall
xchg
xor
rolb
xchg
mov
or
int3
xchg
inc
cmp
fwait
test
insb
inc
sahf
mov
pop
aaa
mov
mov
subl
jno
fistpl
aas
mov
adc
rcrl
js
int3
cld
dec
cmp
pop
jp
shll
mov
sbb
aam
pop
dec
adc
fstl
cmp
insl
in
ret
nop
in
cmc
hlt
cmc
sbb
and
movsl
xchg
adc
cwtl
daa
ljmp
push
mov
lret
xchg
sub
pop
mov
movsl
ds
mov
ljmp
add
dec
pop
pop
sbbl
fstp
rorl
mulb
add
add
jb
xorb
into
test
out
lock
adc
jno
jae
lock
or
pop
imul
mov
fs
dec
popa
fimull
add
fdivrs
add
test
or
jnp
adc
outsb
lret
xor
jb
adc
aam
mov
mov
lret
lock
jecxz
mov
pusha
mov
xchg
add
int
and
dec
or
xchg
sbb
dec
pushf
and
out
sbb
js
aas
repnz
cwtl
or
pop
in
and
or
push
imul
inc
dec
lret
inc
or
mov
sbb
pop
dec
xor
adc
inc
jae
xchg
lods
lret
data16
pop
jno
outsl
data16
jp
xchg
sbb
pop
shll
lahf
lods
cmc
testb
pop
push
jmp
rorl
call
add
add
in
mov
jecxz
out
mov
rorb
add
add
add
pop
imul
sbb
popa
mov
repz
add
cmpsl
imul
shll
ja
leave
popa
minps
sahf
jnp
test
int
sti
ret
fs
shll
mov
je
push
movsl
movsl
lcall
test
or
push
movq
cli
roll
daa
ss
repz
bound
push
inc
fcmovb
mov
insl
bound
add
or
in
jne
jnp
pop
fstl
jne
pushf
cld
scas
jnp
das
fs
lcall
nop
inc
repnz
cmc
add
mov
mov
insl
jl
cmp
leave
clc
aas
fsubrp
inc
sbb
das
fdivrs
iret
add
jmp
rol
imul
movsb
rorb
push
daa
lret
mov
cmpsb
push
mulb
lfs
addr16
loop
test
or
and
nop
inc
mov
stos
xor
push
xchg
test
jg
into
lret
orl
add
add
jmp
inc
pop
out
out
enter
xchg
mov
lods
jge
mov
pop
lret
jecxz
stc
sub
cmp
in
repz
xchg
xchg
lea
push
inc
loope
test
xchg
adc
jl
cltd
mov
jbe
xlat
out
or
sbb
cwtl
adc
and
mov
repnz
aas
std
out
int3
loop
outsb
xchg
aad
pop
cmp
push
sti
cmp
shll
sbb
jp
jle
xchg
insl
jl,pn
out
jns
xchg
jns
sub
mov
dec
scas
repnz
stos
adc
cmp
or
clc
call
jmp
or
loop
jecxz
sarb
dec
xchg
add
jecxz
dec
push
jge
jl
rorb
adc
rcrl
insb
pop
xchg
faddl
cmc
cmp
lcall
sbb
fcmovnb
or
clc
stos
mov
inc
and
xor
add
add
adc
in
lcall
jae
dec
mov
and
nop
push
add
add
push
shll
adc
repz
mov
cmp
xor
push
cmp
xor
movsb
ds
lret
lock
sbb
aam
xor
sub
into
fldcw
fs
xchg
xor
imull
sub
adc
adc
les
add
mov
inc
daa
push
lret
sbb
mov
pop
mov
push
adc
pusha
in
and
xor
or
call
push
into
inc
es
stos
xor
cmc
xchg
lods
cld
jp
mov
lods
mov
orl
push
clc
inc
bswap
ds
rcrl
mov
jmp
sahf
pop
dec
dec
and
test
lcall
adc
iret
mov
cmp
shrb
bound
push
pop
sbb
mov
cmc
aad
dec
cs
pop
pop
cmp
mov
adc
in
int3
fs
idivl
int
add
add
sub
jg,pt
dec
arpl
call
add
add
mov
mov
mov
mov
sbb
xchg
jb
stos
push
xor
test
jge
lock
pop
push
pushf
mov
mov
ss
mov
out
push
jae
mov
pop
int
jmp
mov
xor
aaa
ss
in
ja
mov
movsb
xor
and
inc
aam
hlt
xor
adc
jecxz
ja
mov
adc
nop
out
fimuls
sti
bound
fimuls
adc
pusha
out
mov
jg
rcr
xor
sarl
and
fidivrs
jo
mov
lret
xor
arpl
mov
sbbl
mov
mov
mov
in
rorl
rorl
inc
sub
xor
hlt
scas
addl
adc
mov
outsl
inc
rolb
push
jns
add
mov
pop
movsb
mov
dec
fisttps
add
jnp
leave
cs
mov
add
add
out
idiv
outsl
mov
mov
adc
jo
add
add
add
roll
push
adc
ja
mov
test
pop
adc
addr16
cltd
and
xchg
fdivp
cmp
cltd
sarl
sti
pop
in
push
insb
rclb
jg
data16
add
xor
jno
sbb
adc
cli
lea
mov
sub
add
jl
inc
fsubl
jmp
mov
or
xchg
push
xchg
push
stc
rcrb
sbb
stos
arpl
sub
data16
jb
xor
out
xchg
jecxz
jb
adc
jne
push
and
inc
hlt
xchg
pop
cmp
sub
or
mov
clc
or
arpl
mov
add
out
call
ficoms
mov
aas
pop
sbb
xor
mov
push
or
and
rorb
xchg
pop
pop
sub
fildl
dec
clc
syscall
mov
dec
jmp
fwait
hlt
xor
mov
pop
daa
lods
jae
je
add
add
add
adc
notl
push
add
jnp
aam
adc
mov
or
fwait
daa
adc
ss
jg
cs
rcrb
dec
mov
add
movsb
jl
pop
out
lret
or
daa
jle
insl
xor
fstps
leave
cmc
xchg
jb
inc
decl
dec
and
push
sbb
fwait
aad
sbb
inc
es
fcoml
sub
dec
movsb
push
jno
jnp
mov
sub
pop
daa
movsl
scas
into
lds
fisttpl
xchg
dec
lret
repnz
in
pop
adc
sahf
clc
sbb
adc
cmp
dec
and
jae
xchg
movsl
sbb
jne
push
loopne
mov
inc
orb
dec
mov
hlt
mov
jns
mov
repnz
push
test
inc
rclb
sub
das
mov
test
jp
outsl
cmp
pmullw
pop
jmp
in
add
mov
lea
add
push
push
call
sub
xlat
fidivrl
add
add
add
cmp
cmp
in
fstp
adc
stos
out
sbb
frstor
adc
fstl
xor
or
lret
int
pop
loopne
shll
xchg
mov
pop
movsb
cmp
dec
mov
fwait
adc
pushf
fwait
mov
xchg
sti
and
mov
pusha
cmp
jl
sub
shll
adc
ds
adc
in
shlb
fdivrl
mov
icebp
dec
cmpsb
pop
jle
jp
xor
addb
fs
loop
in
lods
iret
fnsave
xchg
sub
sub
adc
mov
lods
jo
in
cmpsl
pop
xchg
shrb
inc
xchg
cmpsl
push
xchg
lret
sbb
push
dec
mov
mov
cwtl
add
cmc
hlt
in
mov
pop
lods
inc
loope
sub
ljmp
in
push
mov
imul
mov
lcall
orb
dec
or
arpl
into
std
sti
leave
sti
iret
jmp
ss
add
add
lret
popa
jl
into
xchg
mov
jge
sbb
and
xlat
xchg
mov
in
sbb
mov
or
sub
inc
push
mov
xor
inc
pop
adc
adc
mov
or
fs
mov
pushf
jnp
cmc
and
sbb
or
pop
jecxz
and
test
inc
mov
test
mov
sub
pop
sub
outsb
push
fimuls
mov
inc
mov
lret
lods
inc
dec
inc
jp
aaa
or
adc
test
xchg
ds
das
mov
push
fdivrl
call
cwtl
scas
fsubrp
movsb
inc
in
cltd
sub
sbb
int
call
or
repnz
sub
rorb
pop
inc
int3
leave
fidivrs
loop
push
pop
or
cwtl
mov
xor
nop
mov
ret
cmp
add
add
add
mov
xor
mov
add
adc
adc
pusha
jbe
add
sbb
clc
or
cmp
pop
pop
xchg
iret
pushf
pop
or
push
mov
nop
or
mov
mov
loop
leave
jmp
xchg
cwtl
sbb
xor
movsb
in
repnz
push
jo
cmp
decb
int
mov
sbb
push
mov
inc
outsl
xchg
into
push
ret
jmp
pop
adc
insl
ljmp
mov
pextrw
cmp
mov
mov
cmp
mov
push
out
test
pop
mov
cmp
outsl
add
inc
or
imul
ja
fs
pop
insb
inc
push
pushf
xchg
test
inc
test
mov
xor
test
scas
lcall
xchg
dec
cltd
and
cmpsb
xchg
adc
or
mov
andb
and
adc
mov
add
xor
push
fwait
mov
or
jg
mov
sahf
loop
jns
and
test
add
jecxz
mov
xor
push
mov
movsb
fcoml
add
scas
push
in
pusha
mov
fiadds
ja
enter
sub
add
pop
imull
flds
repnz
xchg
xor
or
into
out
sub
mov
rcrb
stos
inc
rcll
push
icebp
sti
inc
sbb
inc
adc
and
cmp
lcall
subb
loope
lret
fiadds
inc
loope
ret
ret
popf
or
es
and
adc
and
aaa
mov
insl
aad
les
fisubrs
sub
dec
test
out
cmp
test
lcall
out
loopne
jmp
mov
shrb
add
sub
nop
call
push
rcr
pop
mov
das
dec
jnp
lods
cmc
and
out
fsubrp
mov
add
add
inc
enter
pushl
cld
sbb
mov
add
add
add
dec
mov
insl
ja
daa
push
stos
cmpsb
shrb
push
cli
fstl
repz
enter
pop
js
pop
sbb
push
and
cmp
inc
xorl
inc
int3
mov
mov
arpl
sbb
loopne
sub
sbb
in
jbe
dec
adc
es
ret
gs
lods
outsb
pop
jle
orb
mov
lahf
mov
dec
mov
and
dec
xchg
rcll
rcr
ja
icebp
inc
cli
mov
pop
sub
mov
iret
pop
lock
jbe
out
mov
movsb
push
lock
cltd
imul
adc
pop
cld
gs
pop
js
pop
sarl
in
lods
aad
pcmpgtw
repz
jl
outsb
jae
nop
sub
push
cmpsl
in
mov
cli
leave
iret
fcoml
push
insb
test
scas
and
int3
fidivs
repz
test
test
add
xlat
pushf
shrb
lcall
mov
or
mov
add
add
add
jb
shlb
arpl
test
xor
pop
arpl
in
rclb
imul
mov
test
cmp
mov
nop
movsb
leave
movsb
push
push
fildl
add
push
inc
test
pop
call
cmp
cmp
lahf
pop
lea
mov
dec
stos
adc
sbb
jbe
sbb
inc
shrl
dec
push
pop
scas
mov
push
xchg
cmpsl
lahf
test
cs
adcl
stos
cmp
les
pop
mov
sub
push
jg
ss
movsb
mov
push
sbb
out
out
sbb
sbb
jno
dec
and
cs
mov
mov
add
cltd
push
imul
je
mov
xchg
testl
push
js
sbb
pop
mov
dec
push
mov
idiv
push
mov
dec
and
add
add
test
mov
aas
scas
fld
outsl
sbb
add
add
clc
sub
ret
push
push
mov
cwtl
add
cld
orl
mov
imul
cmp
je
stos
loope
jmp
jns
hlt
jge
jmp
add
and
popa
imul
lods
ficoml
mov
dec
jl
arpl
add
cmp
dec
and
inc
xorl
ds
imul
sarl
arpl
dec
xchg
pop
mov
les
xchg
add
test
stos
xchg
int3
mov
xchg
pmulhuw
pop
xor
cs
ret
scas
mov
das
xor
push
divb
roll
imul
cmp
div
mov
out
dec
jecxz
dec
or
mov
pop
mov
lock
pusha
lahf
imul
pop
sbb
repz
dec
add
sbb
push
ror
cmp
nop
sub
or
pop
push
movsl
shrl
faddp
push
jbe
mov
lock
add
add
add
add
jne
jne
jg
loop
mov
sete
add
add
add
popa
jmp
cwtl
popl
xchg
cmp
adc
push
test
sbb
mov
aad
jo
push
push
bnd
lret
in
cmp
sbb
add
lcall
mov
adc
dec
sbbl
push
push
out
push
push
fisubl
call
ret
mov
jnp
in
sbb
bound
push
lock
sub
out
jle
and
fiadds
pop
sub
out
xchg
outsb
mov
dec
out
sub
sbb
iret
inc
pop
xor
inc
and
xchg
push
cli
xor
and
xor
lods
xor
cmc
ret
sbb
ljmp
mov
sub
stos
movsb
sbb
aas
jnp
add
and
push
sahf
je
jg
xchg
jg
push
popf
push
sti
push
cmpsl
lret
sahf
add
or
sbb
mov
cmc
mov
adc
add
add
adc
lods
adc
adc
decb
xchg
cmp
fcoml
out
xlat
je
in
jmp
pop
aaa
cltd
loope
lods
stc
inc
into
xchg
cmp
stos
bound
ret
fidivs
aaa
pushf
rcrb
and
xor
or
add
dec
insl
lea
cmpsb
or
bound
mov
mov
xor
lds
stc
dec
addl
fwait
jle
lret
lds
mov
cmp
inc
jno
jbe
jnp
pop
adc
cmp
clc
daa
mov
addr16
mov
in
popa
in
aad
cmp
pop
add
jge
scas
dec
imull
cmp
xor
push
xor
or
scas
mov
inc
icebp
mov
mov
mov
jnp
and
int
es
nop
cmc
repnz
shrb
xor
sbb
dec
inc
dec
fadd
cwtl
fimuls
mov
add
add
outsb
jle
lods
testl
lds
add
add
cmp
daa
sub
cmp
inc
popf
push
jno
xchg
fisttpl
daa
jecxz
or
int
and
jns
or
ds
push
or
aaa
or
or
pop
adc
js
jp
add
pop
orl
mov
add
cmc
mov
shll
mov
out
cld
push
in
inc
push
daa
mov
xcrypt-ctr
cmpsl
fwait
js
push
lcall
jae
sbb
loopne
data16
adcb
popf
push
aaa
inc
shlb
jo
and
ficoms
add
loopne
imul
sub
faddl
jbe
cwtl
imul
ljmp
pop
sbb
shrb
mov
or
and
pop
dec
add
jo
jno
mov
adc
lods
loopne
lret
push
hlt
cmpsb
or
cmpsb
push
scas
push
lea
negl
insl
jae
orb
pop
and
mov
mov
add
pop
mulb
add
add
add
loope
loop
xchg
movsb
lret
and
sti
cmpsl
mov
les
sub
cwtl
push
pop
dec
shlb
cmp
mov
xor
lea
sub
mov
lret
imul
sbb
enter
aad
jne
fwait
in
into
cs
dec
pop
pushf
xor
mov
into
dec
fwait
and
dec
fsubp
mov
xbegin
test
ds
outsb
popa
cld
ret
shlb
push
inc
mov
add
out
add
pusha
push
cmp
push
mov
push
cli
pusha
pop
mov
add
jg
or
push
sbbb
sbb
data16
test
ds
notl
pop
jnp
lods
sti
or
xor
jp
call
pushf
ja
inc
xlat
xchg
pop
aas
movsb
jp
mov
out
ret
loop
addb
inc
and
dec
cwtl
out
or
add
out
sti
xlat
in
aad
shrb
lcall
add
data16
pop
in
leave
es
xchg
lret
js
and
lahf
dec
add
pushf
xchg
in
add
mov
clc
mov
xchg
add
mov
rolb
icebp
jecxz
in
fstl
fadd
aas
mov
daa
sub
cltd
cs
xchg
mov
mov
lahf
add
mov
sbb
push
and
push
push
cmp
adc
inc
je,pt
sub
mov
add
repnz
mov
lods
sbb
and
fcmovb
and
int
sub
push
mov
dec
outsl
mov
mov
or
pop
xchg
cmc
adc
sub
dec
lret
test
test
cld
orl
psllq
sbb
sarb
inc
mov
pop
sbb
pop
jg
xsaves
add
mov
inc
mov
ds
sub
cmp
jg
and
mov
iret
sub
test
add
add
add
push
jbe
inc
jecxz
adc
sarb
pop
push
and
inc
imul
add
out
pusha
xorl
dec
xor
and
jle
arpl
imull
jne
cld
and
ret
out
mov
add
mov
int3
push
inc
xchg
mov
mov
mov
icebp
cmp
or
add
dec
xor
inc
sub
in
std
add
fsubrl
in
sahf
jb
mov
je
movl
je
cld
dec
dec
neg
int
mov
mov
sbb
add
pop
cmp
mov
mov
xchg
jns
lret
lea
cmp
cwtl
arpl
pushf
dec
stc
mov
and
out
push
jnp
rcrb
ja
aas
adc
cmp
mov
mov
push
inc
incl
rcrb
aas
sub
inc
add
xor
fistpll
out
repz
fcoms
fsubs
add
add
add
imul
inc
aam
add
sbb
dec
aaa
or
xor
cwtl
and
push
jl
and
mov
xchg
fwait
jns
cltd
dec
rorl
loop
addr16
sub
ret
inc
xor
cmpb
push
dec
cs
xchg
repz
test
ffreep
or
push
shr
loop
dec
sti
js
repz
lock
inc
xchg
sti
aam
push
xchg
lods
jbe
dec
cld
loop
lret
cmp
les
sar
xlat
je
out
jp
pop
mov
sub
jle
fimuls
lods
and
lock
sub
cwtl
inc
mov
and
sbb
xor
sub
inc
jno
aaa
xchg
lret
adc
add
and
pop
mov
pop
scas
sub
lods
pop
pop
xor
sub
stos
mov
pop
inc
nop
popa
add
push
sub
sahf
adc
les
mov
add
add
mov
mov
fimuls
and
add
add
xchg
gs
into
pop
dec
dec
loopne
push
or
push
adc
mov
or
push
push
inc
pop
add
pop
arpl
test
cmp
jg
popa
lods
adc
push
jge
add
xor
push
in
push
mov
adc
inc
dec
les
push
fildl
dec
orb
xor
ret
jnp
movsb
dec
jbe
pusha
stc
add
jmp
push
pop
sbb
xor
adc
mov
sbb
sub
das
and
sti
out
push
cmp
mov
fimuls
shrb
sbb
pop
faddp
xor
pop
pop
out
cli
add
and
ficomps
sub
inc
lret
dec
out
daa
xor
dec
inc
xor
clc
mov
push
stos
push
push
ret
mov
mov
ljmp
pop
dec
mov
push
or
adc
lret
andl
add
stc
enter
in
sbb
push
inc
and
scas
sbb
add
lcall
sub
ja
iret
out
xchg
ret
push
iret
cmpsb
xlat
fdivp
lods
or
add
outsb
pop
fiadds
xor
or
sub
sbb
bound
enter
pop
ss
jb
out
iret
pop
and
xchg
incb
jmp
adc
and
imul
xor
call
add
add
and
jno
dec
sbb
inc
dec
std
push
out
push
bound
dec
xor
les
xor
imul
mov
lea
jle
cmpsb
or
mov
dec
xchg
xor
sub
repz
mov
adc
pop
test
ja
adc
dec
leave
dec
outsb
jge
cmp
loope
int3
sti
lock
xor
cmp
mov
insb
in
popf
sbb
mov
and
mov
sbb
lea
add
add
imul
cmc
call
inc
push
popa
push
mov
insl
mov
add
add
rorl
in
pop
iret
arpl
pop
sbb
adc
popa
pusha
push
aas
and
xor
sbb
mov
dec
and
mov
pushl
aam
fcoms
adc
or
xchg
insl
jns
popl
into
test
dec
and
xor
jp
add
xchg
cmp
mov
gs
daa
mov
cmpsl
fcmovnu
leave
js
mov
shl
and
sub
mov
popf
and
and
call
pop
sbb
and
cmc
push
adc
inc
mov
out
dec
pushf
add
and
push
add
iret
aam
mov
les
or
insb
popf
pop
insb
bound
fstpt
js
std
nop
in
mov
jecxz
push
mov
ret
mov
hlt
adc
mov
dec
insb
movsl
mov
movb
push
add
add
ja
iret
sub
stos
add
mov
add
add
scas
xchg
ret
lods
repnz
inc
xchg
or
stos
das
xor
mov
out
nop
xchg
lea
dec
mov
shlb
push
les
mov
adc
es
add
mov
xchg
push
adc
push
stc
or
push
pop
jns
jnp
mov
inc
pop
in
fcoml
pop
lret
and
xor
xor
inc
mov
and
and
mov
jecxz
xor
cs
mov
addr16
repz
xchg
test
xchg
inc
jno
sbb
xchg
dec
sub
fisubrs
jns
mov
shl
mov
jae
mov
jl
loope
pop
mov
addl
jae
push
rcl
mov
sub
inc
or
push
or
xchg
daa
cmp
add
add
mov
out
out
out
into
gs
cld
test
into
add
add
add
mov
dec
cld
inc
sbb
push
and
xlat
outsb
or
push
dec
cli
cli
mov
cmp
stc
orl
push
or
xlat
loop
sbb
es
fcmove
xor
inc
ss
test
and
aas
lcall
mov
push
jl
xchg
adc
mov
pop
stos
sbb
pop
decb
pop
adc
mov
outsl
pop
add
or
push
imul
sub
jmp
aam
and
loop
movsl
pusha
xor
jmp
inc
or
aad
xchg
repnz
rcl
outsb
push
out
jmp
push
push
pushf
xor
les
orl
jo
mov
and
fs
cwtl
pushf
dec
xor
jg
leave
movsb
jae
mov
lea
notb
fwait
icebp
scas
les
mov
jae
mov
jecxz
add
loopne
std
mov
push
stc
leave
push
xor
js
inc
and
xchg
loopne
and
je
out
mov
xchg
adc
pop
iret
add
add
add
or
xor
frstor
fwait
imull
jp
or
test
bound
mov
mull
push
decl
jae
je
setne
in
jb
addr16
pop
or
and
cmpsl
pop
in
es
outsb
add
push
repz
gs
jp
cmp
iret
sbb
mov
hlt
jg
adc
sbb
cmp
jbe
sbb
repz
dec
cmc
mov
or
xchg
mov
movsl
movsb
sbb
or
jno
cltd
xor
xchg
sub
jecxz
pop
out
or
rcll
mov
adc
dec
xor
mov
inc
add
xchg
jo
push
outsl
dec
jae
xchg
mov
movsl
push
ds
ret
mov
rorl
jns
fiadds
fincstp
push
popf
dec
les
mov
repz
enter
and
and
dec
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
pop
and
mov
add
add
jmp
call
loop
jns
dec
bsr
jae
std
inc
pop
movb
cmp
xchg
bound
and
js
pushf
aas
out
xor
test
stos
fcmove
out
xor
jecxz
popa
mov
jae
push
or
xchg
cmp
arpl
sbb
jae
cld
push
cmpsb
adc
stos
outsb
jns
lahf
adc
cmp
pop
xchg
stc
inc
leave
fisttps
sbb
and
adcb
dec
mov
mov
sub
ljmp
decl
adc
cltd
sarl
add
incb
pushf
fstp
mov
les
insl
jns
xor
xchg
shrb
cmp
imul
adc
rcll
pushf
cmp
mov
add
ja
pushf
orl
inc
xor
or
lret
insl
jp
pop
xor
add
add
popf
mov
lahf
ret
or
int3
loop
roll
add
add
outsl
test
daa
mov
pop
jp
mov
pop
jae
jp
mov
adc
in
pop
shll
aas
ja
xlat
imul
sub
mov
xchg
or
jo
arpl
insl
int3
push
data16
aaa
je
out
mov
int
lcall
inc
test
adc
aas
push
jae
xchg
inc
clc
out
sti
shlb
jecxz
in
cmp
cmp
imul
cmp
push
add
or
gs
xor
jo
xchg
movsb
mov
dec
mov
inc
push
mov
jnp
jmp
into
int3
test
push
lds
cmc
pop
lcall
xlat
sbb
cmp
jmp
pop
pop
icebp
dec
xor
lds
and
outsl
pop
inc
xchg
leave
adc
push
lds
add
and
push
insb
mov
adc
nop
test
mov
add
neg
outsl
push
xchg
or
rolb
add
add
jmp
xorb
xchg
outsl
inc
repnz
push
pop
cmpsb
mov
add
enter
aas
movl
mov
bnd
les
jle
cmpsb
inc
cmp
mov
push
imul
out
cmp
mov
inc
lock
cmpl
scas
bound
shl
jp
mov
loop
cld
lret
mov
or
adc
fcmovu
rcrb
xchg
inc
or
stc
jmp
xchg
pop
cli
je
mov
hlt
xchg
hlt
cmpsl
xor
xchg
inc
test
adc
jne
mov
mov
jns
in
xlat
pop
popa
mov
mov
repnz
jmp
adc
mov
inc
mov
mov
adc
fstpl
ret
fisttpll
sub
shl
out
jae
lods
mov
nop
and
int
gs
je
scas
adc
in
fldl
add
add
add
sbb
sub
dec
or
sbb
aam
add
add
add
jb
dec
push
or
stos
jnp
mov
addb
jg
call
outsb
pop
in
movsb
adc
incl
sub
sub
mov
sub
sti
repz
mov
out
mov
sub
cwtl
mov
bndstx
dec
hlt
xchg
hlt
adc
aas
dec
lds
pop
xchg
xlat
xchg
lock
sub
push
cltd
jno
clc
fldenv
sbb
insl
test
jecxz
lret
mov
dec
add
cwtl
ja
je
sub
jp
cmp
pusha
icebp
bound
or
mov
or
and
jmp
or
or
mov
outsl
lcall
dec
dec
push
js
cs
and
push
mov
std
je
mov
or
add
sbb
data16
mov
xchg
cmp
xchg
shl
mov
mov
pushf
pop
dec
es
mov
shlb
ljmp
fucomp
nop
mov
jb
xor
add
add
ds
jae
jbe
aam
aam
add
add
mov
xor
push
xlat
enter
out
jp
inc
scas
cli
negl
fnsave
mov
fcomi
cli
stos
lds
pop
outsb
jmp
hlt
fwait
insb
pop
jmp
mov
push
mov
shlb
imul
add
xchg
pop
test
jge
inc
inc
inc
into
xor
cmp
repnz
jmp
in
sbb
clc
xchg
loope
out
inc
sbb
mov
adc
mov
cmpsl
xor
inc
mov
int
cld
pop
mov
mov
mov
outsb
adc
sbb
aam
decl
ja
and
cltd
movsl
push
in
insb
pop
les
mov
xchg
add
jecxz
outsb
jae
mov
imul
push
ja
aam
jle
inc
sbb
dec
push
push
cmpsb
xorl
setl
mull
jnp
mov
add
lcall
jnp
ljmp
add
add
and
jmp
push
xor
sbb
mov
adc
cmpsb
adc
or
and
sub
stc
sbb
fistps
adc
ja
hlt
lods
sbb
std
push
shll
nop
push
mul
add
cmp
xchg
inc
sar
pop
cmp
fnstcw
cli
cmc
movsb
dec
inc
mov
dec
mov
das
int
push
jae
jmp
dec
lds
and
arpl
push
adc
test
sub
adc
fmuls
xor
imul
iret
sub
push
call
cld
lock
in
testb
aam
call
outsb
jge
xchg
pop
out
sub
xor
mov
popf
test
stos
sbb
outsb
xchg
out
mov
orb
stc
cmp
ss
inc
mov
ss
xchg
and
dec
iret
dec
push
jae
sahf
fnstenv
test
sbb
add
xchg
ja
push
jg
leave
or
or
push
loopne
add
add
add
loope
push
xor
addr16
sahf
fldt
mov
dec
add
outsb
pop
mov
mov
push
push
and
test
cwtl
cmc
xor
subl
pop
xchg
sbb
mov
lods
jbe
popf
fwait
nop
sbb
popa
cmpsb
pusha
fcoms
sub
jge
dec
js
lods
es
cmpsb
mov
testb
push
nop
insl
xchg
data16
lcall
test
xlat
lret
dec
popf
hlt
push
movsb
imul
das
ret
mov
in
sahf
into
adc
cmpsl
shl
fidivs
mov
stos
mov
mov
out
ret
pop
jnp
cmpsb
inc
push
mov
inc
test
dec
jge
cmp
iret
cltd
jp
mov
cmpl
cmp
jl
fadds
jbe
and
int
mov
or
jns
enter
mov
orl
push
xor
inc
inc
cs
clc
sbbw
loope
sub
loopne
imul
add
int
out
out
imul
nop
xchg
movsb
add
push
xor
xlat
add
add
add
xor
dec
int3
push
call
jmp
add
leave
in
xchg
sti
jp
jns
jno
int
mov
cmpsl
inc
xchg
movsb
xchg
push
inc
in
mov
mov
std
ljmp
pushf
outsb
clc
test
push
ret
gs
pop
jmp
subb
xor
int3
and
es
das
dec
cmp
mov
std
test
push
push
push
insb
out
das
and
cmp
add
dec
addr16
into
jno
dec
shlb
ret
pop
bound
loop
xor
dec
inc
sbb
cmp
test
cwtl
es
add
fnstsw
repz
push
cmp
or
stos
out
dec
mov
sub
xor
xchg
rcll
lcall
xor
popf
or
inc
adc
jb
clc
jg
mov
sub
rcll
test
dec
shrl
pop
pushf
pushf
sub
out
fldcw
push
in
sub
dec
call
add
add
mov
mov
cmpsb
push
or
and
roll
ret
adc
mov
push
iret
subl
js
int3
push
fmuls
bnd
sar
movl
rorb
lods
jmp
dec
lcall
push
inc
cs
push
and
and
xor
pop
nop
mov
dec
mov
mov
decb
xorb
mov
leave
lods
push
repnz
rcrl
xor
test
aas
in
cmp
cld
ljmp
sbb
lret
pop
adc
mov
or
lret
and
loop
je
mov
insb
mov
lret
nop
xor
add
lds
xchg
js
jmp
sti
or
loop
jb
pop
sbbl
pop
mov
lea
inc
ficompl
mov
sub
xor
stos
jno
push
or
jno
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
sub
in
flds
add
add
mov
and
insb
dec
repnz
in
push
pop
cwtl
jns
pop
int
shlb
enter
shrb
inc
les
lret
stos
rolb
add
push
out
outsl
adc
hlt
out
iret
push
push
mov
jecxz
enter
mov
jne
hlt
shrl
movsb
ds
sub
and
stos
sub
pop
enter
test
adc
test
incb
xor
test
cmp
insb
xchg
add
popa
adc
jge
rorl
mov
lret
hlt
pop
sub
sub
mov
leave
cwtl
in
fcmovnb
pop
adc
faddl
lcall
xorl
mov
fucom
add
cs
jno
jge
fists
insb
repnz
aam
jg
leave
sarb
repz
sarb
xchg
mov
pop
gs
lods
pop
dec
jle
jg
std
fstpt
cld
fcomip
fiaddl
add
add
add
imul
mov
aam
gs
sub
pop
sbb
mov
fwait
push
ja
cmp
inc
js
xorl
xor
adc
aad
inc
out
jns
inc
sbb
mov
pop
test
nop
sub
ds
cld
jl
sub
dec
mov
cmp
fimull
jne
jae
add
dec
mov
js
cmpl
lahf
mov
pop
inc
lds
stos
pop
out
pushf
pop
push
push
or
add
adc
or
nop
xor
std
and
cmpb
jae
frstor
push
in
push
push
sub
insl
adc
fidivrl
aad
push
mov
nop
xlat
and
cmp
inc
repnz
addr16
push
insb
test
lock
or
aaa
cmp
loope
or
xchg
adc
stos
mov
inc
test
add
add
mov
sti
idiv
lods
pop
sbb
insb
hlt
fildl
add
add
jge
jnp
push
jne
rclb
and
repnz
jmp
loopne
int
mov
sub
mov
mov
adc
lods
fnstcw
sbb
pusha
popf
pxor
xchg
or
inc
inc
test
lods
inc
push
cs
js
xlat
fcompl
add
fdivrs
or
in
jg
push
mov
mov
and
int3
fisubl
or
mov
cltd
mov
pop
sbb
cmp
pusha
inc
pusha
cld
jge
xor
and
fstpt
sub
daa
incl
icebp
int3
shlb
or
js
insb
sbb
into
in
jle
das
mov
mov
jl
pop
sbb
fdiv
into
mov
movsb
add
xor
movl
xchg
call
jae
lods
xchg
pop
in
jmp
fwait
mov
mov
insl
xchg
mov
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
stos
pop
int3
jo
push
rcll
push
cmp
and
test
outsl
and
ss
push
das
inc
xchg
fs
xchg
dec
pop
xor
in
mov
mov
push
cmpsb
jg
popf
ret
cmpsb
aaa
cld
cmc
dec
mov
add
mov
push
mov
mov
xchg
cmp
adc
jo
and
and
xlat
jmp
xchg
aad
out
imul
lret
int
sbb
dec
pop
cmp
fildll
out
or
ss
push
in
hlt
pop
fbld
mov
jns
jae
cwtl
or
or
xorb
jg
dec
sub
mov
icebp
pushf
mov
jo
mov
jne
dec
cs
mov
rol
mov
scas
repnz
adc
sbb
pop
jbe
jg
les
jecxz
add
push
cs
pop
ja
sti
xchg
xchg
jge
add
add
push
out
faddl
ds
cld
fldl
add
add
pop
push
lds
imul
out
adc
xor
xchg
mov
push
iret
lahf
scas
mov
scas
nop
pop
aad
cld
rcrb
imul
add
int3
ss
ljmp
les
inc
cmp
lret
fmull
into
cwtl
test
mov
rcl
ljmp
sub
jl
mov
adc
mov
es
enter
outsl
ret
mov
sub
outsb
cli
adc
lods
pop
jecxz
enter
mov
cmp
dec
mov
int
sbb
jge
iret
push
insl
imul
mov
cltd
cmp
sar
lea
lret
xor
shll
test
fs
call
sbb
add
loop
in
push
jg
push
lret
adc
sub
aas
mov
xor
mov
add
add
mov
lcall
fisttps
or
add
add
add
add
xlat
mov
pop
inc
roll
push
add
pushf
mov
stos
xchg
jmp
fucomp
xchg
inc
dec
mov
cmpl
add
jl
mov
cmp
jg
mov
addb
and
aas
sub
adc
sbb
jns
xchg
lret
mov
xor
repnz
xlat
fdivrs
popa
push
jae
mov
notb
add
repz
icebp
lret
push
neg
push
imul
lods
movsl
jbe
jg
jne
xorb
jno
stos
leave
adc
mov
mov
lods
adc
add
push
sbb
test
out
inc
inc
inc
decb
inc
dec
cmp
nop
mov
push
push
jbe
pop
fbld
jns
nop
lods
or
dec
push
xor
jne
outsl
cli
mov
decl
cli
sub
add
mov
sbb
xchg
pop
filds
add
add
mov
jns
xchg
xchg
mov
xchg
xlat
pop
add
add
add
add
cmp
inc
pushf
mov
mov
sbb
jnp
sub
loope
xlat
stos
shlb
xlat
stc
fsubrs
adc
adc
sahf
jo
jle
jecxz
adc
aad
jge
and
cmc
pop
out
shll
bound
subb
shl
jge
add
push
ss
and
pop
cld
pop
xchg
jle
pop
push
mov
lret
jmp
test
cltd
addr16
inc
pop
dec
xchg
sti
movsl
out
nop
adc
mov
jno
out
scas
or
jl
hlt
and
loopne
dec
outsl
mov
push
repz
xor
flds
xchg
mov
in
adc
inc
imul
adcb
jo
xchg
mov
pop
or
iret
mov
xor
pusha
negl
xor
enter
push
add
mov
lret
jae
fadd
fsubp
jnp
or
cld
fistps
data16
add
add
add
imul
dec
shlb
js
xchg
in
loopne
xchg
sbb
push
push
cltd
jp
pop
jl
loope
test
mov
jmp
xchg
mov
ret
or
fsubl
sbb
xchg
aad
std
ret
cmp
adc
popf
loopne
scas
in
jle
mov
push
lea
sub
pop
jp
mov
aad
inc
stc
cmpsl
push
jne
pop
cmp
adc
adc
and
fbstp
sbb
mov
sahf
mov
sti
and
pusha
outsb
sahf
rcr
dec
loopne
adc
andl
ja
ja
mov
sub
fldz
imul
mov
mov
out
in
call
jnp
adc
or
xor
xlat
mov
cmp
mov
out
negb
das
jae
callw
and
xor
decb
rcrb
xor
jnp
test
push
cmp
sub
cld
cli
jle
dec
nop
xor
loop
add
add
lret
dec
pushl
arpl
cmp
sub
fdivs
push
pop
jmp
jle
cmp
xchg
mov
mov
mov
pop
push
scas
pop
push
mov
pop
scas
inc
dec
pop
in
cmp
popf
flds
ret
not
mov
arpl
dec
movsl
lds
iret
mov
or
and
add
pop
fistpl
mov
mov
sbb
xor
add
scas
xorl
add
mov
dec
inc
mov
test
xchg
shlb
push
jae
inc
lret
prefetcht0
xchg
push
in
adc
push
jbe
cmp
aam
test
pop
pusha
in
lods
push
sbb
or
sbbb
xor
xor
test
inc
xchg
sub
jnp
fs
dec
add
jmp
fldt
outsl
out
mov
lea
pop
jbe
ja
sti
aaa
out
ja
mov
aam
jecxz
add
add
adc
xor
push
packuswb
xor
ficoml
xor
jmp
push
notb
pop
add
stos
mov
lods
cltd
push
lock
mov
mov
add
add
adc
inc
push
sub
add
daa
add
outsb
mov
dec
in
xor
push
add
scas
pop
xchg
ret
popa
loope
div
pop
arpl
in
and
scas
data16
rclb
lods
js
and
or
dec
push
data16
sti
fimuls
and
xor
mov
es
test
dec
xchg
sbb
repnz
dec
jp
add
out
or
test
push
sub
dec
xor
mov
mov
pavgw
js
adcl
pop
loopne
jns
icebp
les
push
and
dec
pop
dec
in
pop
lret
cmc
int3
inc
xor
loop
add
add
into
arpl
pop
xchg
aaa
pushf
popf
sub
add
add
jbe
cmpsl
out
stos
mov
xor
not
ret
lahf
into
fbld
clc
sub
loope
out
pop
cmp
and
and
sti
mov
and
inc
mov
jle
inc
arpl
push
lods
test
mov
mov
loope
sub
mov
sbb
xchg
sahf
sbb
shll
dec
dec
mov
cmp
insb
imul
pop
call
std
sahf
mov
je
jg
iret
push
xor
or
sbb
stc
int3
outsl
dec
cmp
xor
cmp
sbb
inc
dec
scas
push
fst
jo
lcall
shlb
xor
sbb
cmc
jno
dec
je
clc
loope
xor
jo
push
or
mov
inc
push
cld
fimull
cmp
and
stc
mov
ja
inc
aad
inc
stc
outsb
fiadds
add
add
ja
lcall
mov
inc
sbb
add
add
add
movsb
leave
ret
fwait
loopne
jae
xchg
fs
mov
icebp
push
enter
or
pop
push
mov
adc
or
push
mov
or
jmp
inc
push
std
cld
mov
xchg
pop
addr16
inc
adcl
test
jecxz
push
jl
int
repnz
xor
sub
imul
sub
jmp
fnstsw
in
addr16
lods
mov
jb
scas
adc
jge
cmc
outsb
rcrl
and
cmc
xchg
mov
iret
adcb
inc
lcall
divb
push
push
jp
jge
adc
push
mov
add
and
add
test
or
ret
pop
push
shr
jg
icebp
rep
sub
mov
inc
and
and
ret
insl
ss
mov
jge
and
imul
pusha
imul
mov
aam
and
call
fs
pop
or
add
repz
lock
jg
in
and
or
sbb
add
add
add
mov
insb
push
arpl
cmp
pop
es
cmp
adc
pop
fsubl
pop
xor
sub
mov
lahf
cmp
imul
mov
out
cld
mov
enter
les
sar
xchg
dec
dec
mov
jp
jle
insl
jb
lds
mov
insb
ja
das
dec
mov
repnz
push
mov
or
dec
test
xchg
ljmp
push
xor
xchg
fdivl
cmp
and
repnz
stos
pop
call
lea
pop
xchg
push
push
in
cmpsb
cmp
cmp
or
xchg
push
cmp
stc
dec
jg
push
xchg
mov
fsubs
dec
lds
icebp
les
dec
fsubl
out
fildl
outsl
push
nop
ss
pmaddwd
orb
cmpsb
out
sbb
mov
push
jge
or
and
mov
into
fucom
cmpsb
or
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
and
shll
out
add
add
out
shlb
dec
mov
imul
mov
dec
pop
cltd
enter
pop
popa
fcoms
stos
daa
adc
and
cmpsb
fisttpl
adc
pop
add
cld
dec
or
stc
sub
cli
cmp
sub
sub
dec
jg
jecxz
dec
dec
hlt
adc
rcrb
push
and
and
dec
das
adc
sbb
jle
cwtl
dec
loop
shll
daa
stc
or
pop
pushf
insb
int
test
sbb
stos
mov
mov
sbb
pop
or
adc
pop
sub
sahf
scas
jae
iret
ljmp
leave
mov
je
sti
add
lock
inc
xor
outsb
push
adc
pop
pop
pop
pop
pop
xor
sub
div
mov
cli
inc
fucomip
xor
pop
loope
mov
mov
adc
jno
add
add
mov
dec
js
stc
mov
dec
int
or
fbld
add
add
add
lods
out
cmp
or
or
cmp
xchg
xor
lahf
pop
mov
es
bound
sub
movsb
sbb
sti
outsl
dec
aam
push
dec
dec
jae
dec
lret
adc
dec
adc
in
pushf
addr16
mov
inc
and
lea
push
negb
mov
js
add
fiadds
jmp
out
loopne
call
sbb
push
dec
gs
mov
rclb
test
mov
xlat
or
sub
push
push
mov
or
pop
imul
sbb
lods
jle
std
dec
insl
idivl
nop
subb
or
lahf
jg
jmp
aas
pop
inc
lcall
and
sahf
loope
mov
xor
cmpsl
mov
lcall
stos
cmp
insb
sbb
scas
or
cmp
shll
jae
leave
inc
lods
addr16
mov
pop
insb
fildll
fwait
jns
jns
jl
popf
sub
add
add
add
jno
add
xchg
mov
lahf
dec
fwait
and
lahf
arpl
push
pop
movsl
rcl
lock
pusha
mov
ret
mov
pop
in
push
inc
xchg
pop
jge
cmc
jg
cmpsb
roll
sbbl
int
movsb
push
inc
add
je
jecxz
aad
cli
shlb
xor
inc
lret
rcrl
sub
stos
jnp
mov
jg
push
push
mov
clc
repnz
mov
add
xor
hlt
mov
inc
lods
and
sub
std
xchg
insb
rcrb
loope
add
push
dec
in
dec
fldt
lods
dec
scas
jns
or
dec
push
into
push
and
push
dec
js
xor
ja
mov
insb
lea
inc
stos
imul
fstpt
ljmp
adc
jg
lcall
das
js
out
in
pop
cmp
jnp
adc
jne
aam
rcrl
add
add
push
add
mov
mov
in
pusha
iret
pop
mov
outsl
sbb
ljmp
mov
in
inc
movsl
ds
rcrb
push
lods
cmpsl
jo
or
add
mov
rcll
fbstp
fnsave
xor
int3
daa
sub
jnp
push
int
push
leave
sarl
or
push
cmp
mov
mov
pop
adc
mov
sub
cmp
add
mov
js
test
in
mov
fistl
ret
mov
movsb
out
iret
push
sub
mov
mov
pusha
jno
in
cmp
or
xchg
cmpsl
rolb
xor
jno
shll
dec
lret
and
jecxz
xchg
add
pop
bound
adc
adc
pop
fs
sub
gs
push
xor
pop
aaa
jecxz
ljmp
loope
xor
sbb
jle
add
and
add
out
lods
xor
aas
xlat
fistl
das
shlb
add
add
js
rcl
cwtl
lret
daa
imul
aas
adc
jg
js
mov
sub
mov
movsb
cwtl
repnz
mov
lret
int
or
scas
mov
in
jp
jle
test
bound
mov
aad
out
je
fstpl
mov
test
movsb
adc
insl
insl
pop
mov
roll
and
aad
roll
lea
pop
push
fnstenv
push
fstps
or
sbb
jbe
shl
ss
pop
mov
or
arpl
fidivrl
and
lea
pop
addr16
jns
loopne
sub
or
testl
cmc
out
mov
jns
mov
icebp
cmpb
pop
sbb
lods
loope
adc
or
cmp
mov
mov
mov
mov
ljmp
or
pop
stos
and
shl
and
add
add
jb
scas
decb
fisttps
out
mov
xor
add
add
add
mov
lock
stc
inc
push
sub
add
inc
lods
add
pop
xor
add
lret
daa
push
sbb
sbb
push
and
sbbl
push
cmc
inc
inc
out
push
and
push
das
testl
enter
mov
inc
cmp
orb
jl
dec
fnstsw
cmpsb
scas
inc
xchg
ret
sarl
mov
dec
inc
push
xchg
movsb
xchg
sbbb
xchg
lods
xlat
mov
cmp
xchg
in
adc
dec
rcrl
sahf
pop
lahf
dec
hlt
and
test
in
add
or
inc
es
aas
ljmp
or
pop
int3
add
jmp
in
stos
mov
inc
data16
push
fbld
fcoms
out
jno
faddl
fcomp
ret
jbe
dec
push
ret
fmuls
inc
test
add
mov
mov
lcall
add
mov
xlat
mov
xchg
mov
dec
cmp
add
add
add
add
out
jge
inc
xchg
push
iret
rdmsr
lods
ret
xlat
push
sar
sub
sub
leave
push
mov
ret
mov
out
xor
mov
push
cld
add
fs
pop
push
ret
push
jecxz
inc
dec
mov
movsl
cmp
push
dec
dec
fsubrs
mov
cmp
mov
movsl
shlb
adc
aas
xor
pop
lret
mov
mov
mov
cmp
xchg
subb
mov
es
cmc
addb
jae
pop
mov
dec
aad
or
cmpsb
inc
adc
push
outsb
cmp
inc
notb
fisttpl
jae
outsl
pop
inc
fnsave
sbb
push
cmc
cmp
and
sub
add
push
sub
mov
add
out
push
gs
jb
shl
cmp
cld
cltd
pop
adc
call
cmp
sbb
inc
sbb
inc
sub
lods
cmp
lods
aas
mov
sub
cmp
add
add
add
jl
popa
imul
repz
ja
adc
fsubl
in
cmp
xchg
daa
mov
mov
std
mov
xchg
loope
push
mov
dec
xchg
je
xor
movl
subl
jecxz
sti
sub
mov
xorb
xchg
dec
inc
ret
in
stc
test
gs
movl
loope
add
int
insl
jle
dec
cwtl
dec
jge
pop
mov
xchg
in
addb
movsl
dec
pop
imul
clc
stos
mov
adc
rcll
cltd
push
mov
and
test
add
mov
cmc
cmp
add
loop
push
pop
shll
jl
push
xchg
xchg
not
lods
xor
add
imul
cmc
mov
sbb
loopne
and
and
aam
sbb
stc
or
mov
add
add
mov
sti
mov
dec
or
inc
out
add
add
add
shrb
push
mov
es
outsl
js
out
inc
sub
jae
insl
sbb
add
pop
dec
inc
mov
test
shlb
jle
dec
xlat
push
adc
xor
fsubl
xchg
sub
mov
int3
movsl
lahf
dec
lods
mov
inc
xchg
or
lcall
jl
pop
aad
ja
enter
pop
call
and
in
sbb
xchg
ficoms
jae
imul
loopne
xor
mov
mov
imull
notb
adc
xor
pop
push
xchg
gs
cmp
jns
pop
jecxz
lock
mov
js
xor
pop
jl
lahf
mov
add
popf
push
lret
cs
mov
inc
inc
out
arpl
cmp
cmpsb
fnstcw
enter
or
fs
sbb
cwtl
fwait
dec
cmpsl
or
filds
mov
pop
lret
sub
stc
push
lcall
add
push
cmp
adc
neg
jge
xchg
jns
scas
pop
and
lock
add
add
mov
cmp
iret
mov
inc
dec
cli
lcall
or
mov
movsl
cmp
fldcw
push
jecxz
insl
jbe
push
ja
mov
jae
cli
aad
rcr
xorl
lock
into
xchg
mov
and
jb
adc
mov
xchg
notl
xor
cld
dec
adc
mov
pop
inc
push
or
out
mov
mov
jecxz
jmp
das
dec
movsb
sbb
push
mov
xor
jp
mov
or
addr16
clc
jno
lret
mov
jecxz
sti
lcall
sub
out
sub
aas
stos
add
mov
add
in
test
add
cld
imul
fimull
ds
out
xor
push
sbb
add
jo
jl
ss
inc
dec
or
pop
and
hlt
xchg
pop
and
add
dec
sub
sub
ficompl
icebp
add
add
add
xor
or
push
sbb
pop
fs
nop
mov
paddb
mov
xor
add
xchg
push
icebp
rol
idivb
adc
addr16
mov
push
sbb
scas
add
cmova
pop
cld
push
mov
enter
sbb
in
and
std
mov
ja
mov
mov
negl
loope
imul
test
daa
shlb
outsb
jnp
push
push
xor
dec
mov
pop
fimuls
popf
mov
or
daa
xor
pop
loopne
and
cmpsb
mov
inc
cmp
inc
jb
mov
jnp
out
mov
fiaddl
stc
dec
cmp
stos
lcall
add
jbe
cmpsb
jecxz
xchg
mov
into
aaa
int
lcall
sub
test
mov
mov
outsl
pop
dec
imul
cmp
data16
add
ret
ja
and
aaa
divl
pop
pop
dec
repnz
add
add
std
cmpsl
lds
push
and
enter
jne
fs
int
or
stos
xor
or
inc
sub
xchg
in
popf
xchg
dec
sti
and
sti
push
mov
push
in
pop
mov
cli
shrb
add
mov
cmc
andnps
shr
clc
sbb
orl
jo
in
orl
sbb
mov
adc
and
mov
cmp
jp
les
push
sub
jnp
cmp
dec
inc
scas
cli
xchg
adc
nop
pop
mov
or
inc
shlb
jae
pop
inc
lock
mov
fdiv
or
mov
ds
push
sbb
mov
mov
pusha
int
push
xchg
aas
orl
inc
mov
pop
ror
xor
push
test
test
call
dec
mov
and
mov
add
add
mov
cmc
mov
mov
push
repz
add
add
sub
xchg
les
pop
sbb
jae
jnp
jge
cmp
add
or
mov
popl
aam
push
jne
sub
fwait
iret
dec
test
sbb
lods
adc
sub
adc
pop
sub
cmpsb
mov
pop
lcall
sti
mov
fldt
mov
mov
daa
and
sub
je
inc
push
out
and
sbb
into
dec
or
adc
adc
je
int
fistpll
aam
mov
fistl
std
pop
fwait
mov
arpl
mov
push
mov
lcall
es
adc
mov
sub
sbb
sub
push
gs
mov
mov
ret
add
pop
in
jae
push
dec
mov
popf
mov
lea
addl
xorb
pop
cmpsb
sbb
je
cs
cmp
rcll
jmp
test
lock
jle
jne
pusha
popf
pop
addl
add
add
add
sub
jae
loopne
xor
jecxz
add
into
adc
pusha
dec
xchg
lock
cld
lret
pusha
mov
aad
adc
sti
in
mov
imul
sbb
ss
inc
xchg
fdivrl
jle
cmp
aad
mov
cli
sub
jge
sbbl
mov
lret
pop
in
push
test
xchg
mov
inc
jo
ret
dec
outsb
or
pop
addr16
shll
adc
mov
jb
inc
pusha
addr16
jne
fwait
out
jecxz
movsl
fistpll
inc
push
rolb
fsubs
lds
mov
fisttps
xlat
iret
andl
pop
dec
pop
mov
mov
xor
jbe
sbb
gs
cli
mov
cmpsb
mov
and
cmp
add
mov
sub
testb
shll
movsl
dec
out
lds
ja
mov
lods
mov
repz
xchg
jo
adc
add
add
imulb
mul
xor
loope
cmc
add
add
add
rol
stc
adc
dec
clc
js
bound
sbb
adc
jg
mov
in
push
jle
sub
and
loop
and
push
enter
icebp
lea
shr
idivb
pusha
dec
hlt
inc
leave
ja
bound
mov
addr16
sbb
xchg
push
xchg
dec
out
arpl
imul
dec
or
mov
lret
in
iret
mov
iret
sub
add
sbb
xor
or
jnp
pushl
bound
push
inc
fwait
out
cs
xor
pop
mov
mov
inc
mov
std
push
es
mov
daa
xor
jbe
mov
fcomps
roll
or
xchg
loope
pop
test
mov
and
xchg
inc
adc
and
adc
and
mov
cmp
cld
push
cmc
in
lret
xchg
popf
repz
sarb
add
add
add
xor
jb
jae
jl
lea
add
add
pop
call
sti
xchg
int
faddl
enter
lock
sub
push
jbe
add
pop
mov
cmpl
loope
push
jle
int3
xor
xor
fs
mov
ja
jmp
popa
mov
rorb
fadds
shll
outsb
pop
cmp
cld
push
rcll
movsb
or
incb
mov
pop
jae
stc
clc
sub
imul
sub
or
jmp
ja
fistps
cltd
jle
ljmp
lock
push
lods
add
leave
mov
std
push
js
cld
add
pop
in
push
outsb
push
lods
jmp
or
cltd
add
or
and
ret
pop
scas
xchg
mov
cwtl
cs
repnz
inc
out
cmp
imul
sbb
lret
jbe
mov
inc
insb
lahf
add
sub
mov
leave
inc
push
push
inc
lahf
jle
decl
cltd
sbb
add
add
ds
in
idivl
js
mov
sbbl
add
add
add
mov
mov
fnsave
in
mov
cmp
mov
inc
jne
jmp
in
xor
sub
lods
adc
out
dec
and
push
cmpsl
or
push
sbb
pusha
adc
in
xchg
xor
jae
fistpll
mov
jo
sbb
std
lds
int
out
scas
rcll
add
cmp
imul
lods
bound
call
lock
adc
lock
mov
mov
into
adc
adc
add
add
jns
mov
movsl
test
mov
mov
lret
push
add
sahf
in
rcll
sub
cs
sub
xor
sub
fwait
hlt
xor
dec
dec
test
and
mov
in
jge
add
dec
xor
dec
call
xor
popa
dec
enter
dec
pop
pop
popf
or
sub
or
add
jbe
pop
fisubl
das
fldenv
push
jne
je
arpl
add
add
jecxz
inc
cli
aas
into
lret
lret
bound
add
add
adc
adc
dec
idivb
jb
sub
cmp
dec
cmc
dec
mov
popf
outsl
sub
cwtl
cli
push
jne
insl
rcll
lds
subl
xlat
mov
mov
stos
xor
mul
push
daa
fdivrl
pushl
xchg
jbe
jg
mov
fiaddl
aas
sbb
xchg
pop
dec
or
adc
dec
adc
scas
cmc
in
mov
rcrb
cmp
or
insb
dec
push
imul
sub
and
mov
dec
out
stos
mov
pop
fnstenv
xor
mov
pop
adcb
pop
mov
xor
shrl
inc
sub
pop
in
out
and
push
sbb
pop
jp
scas
bound
je
add
rcll
lret
push
mov
add
lcall
into
aas
pop
push
add
add
mov
dec
ret
pop
sahf
push
sbb
xchg
or
sub
cmpl
inc
xor
pop
bound
or
sbb
outsl
lcall
add
push
sarl
sbb
mov
or
fnsave
pop
lret
jg
int
jae
lds
dec
outsl
inc
iret
jo
stos
jb
mov
mov
cmp
adc
jp
xchg
cmp
add
out
push
push
jns
cmove
int
movsb
pop
cs
pop
stc
popl
xchg
push
mov
filds
jns
dec
or
cmp
and
andl
jo
xor
arpl
pop
xchg
in
xacquire
scas
test
movsb
mov
pop
or
cmpb
sbb
lea
shl
jmp
aaa
jae
cltd
dec
mov
jno
xor
add
add
add
and
xor
push
lret
jnp
pusha
mov
icebp
cld
imul
push
cmp
xor
pop
xchg
xchg
adc
pop
sahf
mov
lret
out
addl
imul
push
aaa
cmp
jae
xor
xchg
mov
and
ss
mov
imull
clc
jne
fstl
push
lahf
aas
in
daa
imul
dec
gs
scas
ss
mov
call
adc
loop
pusha
push
xchg
sbb
cltd
mov
and
lods
and
sbb
pusha
fucom
lret
test
notl
bound
cmp
les
imul
cmp
or
inc
cltd
fcmovne
dec
xor
jne
xlat
xchg
das
xchg
lock
adc
cmp
mov
sbb
out
subb
js
rcrb
cmc
adc
imul
xor
mov
and
stos
pop
popf
jle
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
cld
push
adc
jo
add
add
add
cmp
xchg
inc
add
movsl
xor
sahf
fidivrs
mov
mov
push
mov
cltd
push
add
dec
jecxz
popf
ljmp
in
jp
ljmp
seta
mov
push
dec
dec
pop
pop
jno
inc
fmulp
and
sub
mov
arpl
xor
mov
sub
repnz
pushf
or
pop
int
pop
incl
lahf
idiv
lods
dec
cmpb
es
cli
lcall
std
test
mov
hlt
negl
ret
add
shlb
pusha
mov
or
mov
movsl
mov
clc
mov
adc
pop
gs
std
lea
lock
add
mov
cmp
inc
inc
dec
js
sub
mov
loope
xor
mov
cli
rorl
pop
xchg
cs
ja
fsubp
adc
mov
fbld
lret
adcb
das
ret
jno
test
jg
push
pop
push
mov
je
add
add
add
mov
sub
mov
in
push
pop
idiv
mov
dec
sbbl
fdivr
lods
xchg
nop
ret
sub
mov
or
orl
lock
cmp
aam
out
es
dec
sbb
and
sbb
pop
cld
out
testb
movsl
hlt
mov
mov
adcl
mov
xor
or
or
add
sbb
stos
mov
mov
mov
dec
fisubs
mov
dec
or
int3
ret
scas
insb
leave
push
in
outsl
loope
push
ss
js
jno
test
mov
and
cmp
outsl
repnz
and
call
mov
sub
sbb
xor
stos
cld
jno
repz
pop
jge
push
push
mov
jne
es
outsb
insl
jge
adc
movsb
push
in
cmc
jne
sbb
js
loop
icebp
js
add
add
add
mov
or
outsl
or
cmp
aam
and
xor
push
mov
mov
daa
nop
movd
pop
and
ret
fisttpl
fsubl
push
scas
das
and
in
pop
sti
adc
nop
mov
fwait
mov
pop
outsb
push
and
xor
es
jo
xor
inc
out
push
dec
jbe
cmpsl
jp
adc
call
rcll
mov
cmp
pop
aaa
imul
rorb
push
pop
sbb
out
lds
jno
mov
jle
loopne
xor
cld
jnp
fisubrs
inc
cmp
sub
loopne
mov
fimuls
inc
notl
aaa
xchg
outsl
push
in
cld
cmp
rorb
cmp
or
stos
cld
cmpsb
jge
add
or
push
out
sbb
pop
js
jno
and
xor
inc
loope
ficompl
ffreep
push
add
stos
lea
lea
xchg
popf
inc
mov
xchg
lock
sbb
shlb
aas
out
int3
mov
aas
jns
bnd
add
add
add
ss
out
shl
popf
sbb
daa
and
mov
repz
xchg
adc
jp
ljmp
lret
sub
pop
nop
and
out
mov
sbb
add
dec
push
call
dec
test
out
or
jb
scas
push
jg
test
dec
mov
inc
mov
sbb
sub
roll
in
outsl
call
push
shrl
and
xchg
and
fdivs
sub
pop
fidivrl
lahf
mov
rolb
xchg
mull
cmc
sbb
sbb
mov
in
mov
push
fmull
into
movb
idivb
and
mov
xor
inc
cmc
or
xchg
and
rol
mov
rol
nop
push
std
movsl
push
cmp
test
cmpsl
sbb
frstor
shrb
popa
xchg
fwait
xor
testl
add
add
mov
lcall
int3
or
add
add
mov
mov
pop
sub
aad
mov
cmc
mov
arpl
sbb
repz
push
pop
sbb
test
mov
incb
dec
inc
sbbb
mov
xchg
push
mov
xor
inc
popa
push
lock
hlt
cwtl
xlat
xlat
push
xor
mov
pop
inc
out
mov
shlb
pop
pushf
or
mov
in
xrelease
and
lods
push
push
test
sbb
dec
pop
mov
int
and
cltd
push
in
lcall
pushf
test
pushf
pop
push
shll
call
sub
insl
mov
cmp
popa
mov
fwait
cld
mov
xchg
mov
iret
adc
out
mov
popa
and
mov
repnz
jecxz
cmp
out
addl
push
xchg
shrl
aas
push
ljmp
inc
pop
aas
or
jg
shlb
jbe
dec
rol
lret
clc
cmc
inc
stos
repz
add
add
add
xchg
out
sbb
jmp
pop
scas
std
dec
ss
outsl
mov
in
pop
lcall
stos
push
sub
cli
xchg
scas
mov
push
xchg
loopne
push
jge
cmp
aad
inc
js
pop
or
xchg
stc
xorb
clc
mov
shll
add
enter
insb
fistps
movsl
jbe
loopne
push
fadds
xlat
loopne
push
dec
pop
pop
cwtl
mov
jge
sbb
andl
push
mov
add
sub
repnz
les
ds
lret
xor
imul
arpl
inc
mov
mov
xchg
mov
js
ror
jp
push
popf
push
and
adc
test
fdivl
mov
push
repz
dec
mov
nop
fwait
stos
inc
dec
lahf
in
mov
mov
mov
xor
je
mov
adc
outsb
cmpsl
mov
dec
pop
lods
xor
dec
cs
dec
stos
add
std
aaa
mov
shll
stos
mov
add
add
add
ret
arpl
sub
shrl
sbb
push
data16
test
test
rol
into
push
pop
fcmovnu
jge
xor
or
inc
jmp
cmp
xor
inc
pop
imulb
int3
mov
pop
push
out
ja
into
inc
repnz
mov
inc
aaa
test
mov
out
pop
loop
adc
into
stc
imul
inc
xor
lret
pop
aas
test
out
cmp
test
dec
mov
inc
pop
out
sub
lcall
aaa
adc
xchg
or
inc
jo
test
repnz
xchg
xor
scas
andl
dec
aad
sub
shrb
bswap
mov
xchg
test
adc
cmpsb
jl
les
mov
jne
lret
mov
or
insl
enter
push
mov
sti
lods
sbb
insl
aam
mov
scas
add
fsubrs
mov
add
addl
repz
or
out
mov
mov
lods
push
xor
push
dec
adc
sarb
mov
cmc
bound
mov
sar
add
xchg
pop
mov
adc
stos
push
xchg
lea
pop
dec
je
sbb
sbb
or
inc
sbb
shl
push
out
mov
ljmp
inc
aas
aas
cmc
cmc
xchg
dec
scas
pop
cltd
mov
popf
mov
dec
push
int
das
xchg
add
movl
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
xor
rolb
movsl
stos
inc
jns
dec
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
