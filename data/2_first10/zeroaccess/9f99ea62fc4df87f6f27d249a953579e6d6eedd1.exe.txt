push
mov
sub
mov
jmp
incl
shlb
fs
pop
jle
jle
cwtl
jg
jle
xlat
cmp
rol
pop
add
sysexit
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
ss
clc
lods
adc
push
in
cwtl
sbb
icebp
push
or
xchg
jns
jne
cli
imul
jmp
mov
sub
rcll
add
imul
jo
inc
call
xor
data16
jmp
cmp
jno
fs
inc
inc
decl
movsl
popf
imul
xor
inc
popl
fcomps
or
inc
inc
shll
daa
out
test
pop
add
mov
mov
push
or
or
push
sub
loopne
loopne
xchg
jae
fs
or
xor
je
mov
fwait
pop
in
out
out
push
dec
insb
mov
ret
imulb
push
and
daa
sbb
in
mov
xchg
sahf
or
fs
aaa
clc
out
aad
les
rorl
sahf
or
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
fwait
adcl
pop
mov
mov
cs
mov
jb
fidivl
in
mov
dec
or
ret
adc
dec
push
adc
jbe
dec
sub
xchg
das
adc
shll
mov
push
hlt
cmp
mov
dec
popf
jns
jmp
xor
or
shll
sub
and
xchg
sub
popf
dec
dec
mov
and
or
jl
insb
scas
mov
adcb
lods
xchg
sub
fmuls
stos
xchg
shlb
mov
loope
loopne
push
xor
xlat
and
mov
jb
aam
or
andl
xor
fs
cmp
or
aaa
mov
ret
icebp
lea
jae
popa
xchg
mov
mov
xor
sub
in
stos
sub
push
shrl
popa
clc
popf
aaa
int3
mov
inc
sbb
push
and
lds
stc
mov
dec
push
hlt
xor
insb
push
xor
out
xlat
mov
mov
xor
and
push
shr
or
mov
add
fwait
loopne
dec
cmp
dec
pop
dec
shlb
jnp
loope
out
dec
pop
ja
shl
mov
adc
jle
mul
mov
cltd
aaa
jge
imul
aad
imull
push
rcr
ret
dec
je
mov
out
popf
sub
scas
fcompp
dec
movsl
pop
pop
je
mov
and
data16
push
adc
movsb
cli
mov
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
ret
jge
jle
jg
jle
jb
jmp
sbb
pushf
out
jnp
xor
dec
shrl
out
and
aad
jne
imul
pop
outsl
xchg
popa
pop
popf
rorb
mov
dec
aad
ja
sub
dec
cmpsb
imul
inc
outsb
pop
xchg
mov
scas
xor
adc
cmpb
dec
mov
mov
pop
push
inc
mov
xchg
and
lods
pop
repz
xchg
mov
or
mov
jle
lods
pop
fsubs
imul
xor
jle
mov
cmpb
mov
jl
jo
jb
repz
mov
sbb
mov
jno
mov
sbb
mov
sbb
sti
je
popf
mov
mulb
mov
scas
test
ja
cmp
pop
or
inc
outsl
jno
adc
xchg
repz
in
or
mov
es
jnp
sbb
test
pushf
popf
cwtl
pop
mov
mov
loop
gs
adc
push
jnp
stos
repz
imul
xor
xor
jle
cmp
out
jmp
mov
jb
adc
je
scas
inc
xor
mov
dec
push
lods
jecxz
mov
lret
ja
das
mov
lea
mov
les
sub
sbb
push
outsl
call
fpatan
dec
inc
mov
jg
mov
dec
push
dec
fcmovnu
popa
repnz
shrl
daa
lds
call
cmp
dec
push
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
insl
xchg
rcll
cwtl
jg
jle
pop
dec
cmp
int3
jns
roll
out
mov
jb
ja
xchg
xchg
or
sbb
xlat
push
sub
cli
rol
stc
into
mov
rep
sbb
push
out
mov
xchg
jo
fs
rolb
sarl
xchg
mov
iret
sbb
or
adc
in
jno
nop
or
movsl
push
test
jo
inc
dec
dec
mov
adc
outsl
push
cmp
cmp
iret
push
aaa
outsl
notl
sub
add
jge
inc
dec
and
ja
fwait
sbbb
dec
cmc
and
sbb
xor
stos
fnstsw
lock
or
xchg
add
ror
pop
loop
mov
pop
mov
xchg
leave
mov
out
mov
jno
and
cmc
lahf
int
push
frstpm(287
jl
gs
and
fbld
mov
xchg
mov
pusha
cmp
int3
sbb
scas
pop
jo
pop
xor
es
sahf
fs
sbb
mov
push
in
push
in
adc
inc
push
enter
repz
out
lcall
cmp
dec
mov
adc
push
insl
or
mov
std
imul
lods
cmc
enter
or
cli
scas
sbbl
sub
mov
push
scas
arpl
push
mov
inc
pop
mov
and
mov
std
and
stos
adcl
test
and
sahf
inc
dec
test
add
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
notb
mov
btc
mov
dec
pop
mov
and
adc
push
xor
repz
cltd
xor
sahf
dec
imul
mov
mov
inc
out
jmp
cmpsl
xchg
dec
in
mov
out
mov
cmp
or
xchg
cld
inc
jb
fst
or
xor
pop
push
int3
or
int
cmpsl
cmp
int3
cmp
xorb
inc
mov
cmp
sti
add
push
mov
in
sbb
shl
rolb
fdivp
stc
imul
and
imul
xorl
sub
loopne
mov
pop
and
je
ret
or
cli
sbbb
fprem1
cld
rcrb
adc
pop
mov
pop
fmul
lret
mov
pop
or
or
pop
popa
cs
sarb
mov
or
adc
cmpsl
push
or
cmovnp
lcall
mov
lods
push
sub
repnz
popf
lods
push
stos
test
sbb
arpl
jo
push
int3
int
add
in
or
imul
aaa
in
cli
cmp
js
xchg
mov
pushl
in
dec
inc
sbb
jp
xor
subb
mov
std
aam
push
pop
adc
sub
add
mov
pop
dec
mov
hlt
add
inc
dec
jo
push
shll
jbe
std
sub
sbb
hlt
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
rsm
lret
jo
push
jle
cwtl
jg
jle
ret
fildll
cmp
lcall
jnp
les
aas
jle
stc
je
sbb
movsb
fbld
inc
fdivrp
std
add
enter
jp
dec
aaa
cmp
xor
shlb
cmp
insb
fsts
add
std
add
adcl
and
les
push
ds
dec
call
lea
orb
insl
mov
mov
mov
add
aam
das
jle
je
es
movsl
lods
fisubrl
add
push
add
inc
sbb
shrb
push
cmp
fiaddl
and
aad
fiadds
xchg
xchg
hlt
outsb
or
jl
xchg
xchg
push
ds
cmp
addr16
sub
jns
movsl
lods
jo
push
mov
mov
add
loop
or
imul
pop
jg
mov
jp
mov
mov
sub
and
jmp
inc
sbb
lock
aad
jge
addr16
and
mov
mov
xchg
add
scas
pushf
push
inc
loopne
pop
add
xchg
mov
jl,pn
sub
aas
cmp
aaa
inc
fwait
fwait
inc
push
out
pop
xchg
leave
loop
inc
notl
ljmp
ljmp
imul
sub
jl
cmc
shlb
add
or
test
out
fldl
jne
outsb
cltd
rolb
jno
adc
hlt
mov
enter
mov
mull
mov
cmp
push
in
mov
xchg
arpl
or
icebp
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
mov
pop
jle
cwtl
jg
jle
jnp
cmp
push
or
lods
push
mov
dec
and
cmp
aam
pusha
smsw
mov
jns
or
scas
mov
movsl
into
push
mov
sub
xchg
sbb
loope
mov
push
jae
push
inc
movsl
icebp
call
adc
lds
push
cmc
enter
fimull
dec
xor
sub
xor
lods
ljmp
push
mov
xchg
div
pop
fisttpl
inc
rcr
xchg
add
push
push
ret
xor
call
int3
push
pop
add
inc
adc
in
nop
emms
adc
cmp
mov
or
repnz
mov
in
fs
jmp
add
adc
shr
xchg
cmp
scas
mov
jb
out
pop
push
jb
dec
aam
popa
xor
pop
or
shlb
inc
insb
sub
ret
inc
xchg
jae
or
xchg
or
xchg
dec
popf
lret
lock
fsubrl
arpl
push
jmp
push
cs
fisttps
add
sbb
ret
pusha
xchg
xchg
mov
inc
fidivs
cmp
push
pop
and
stos
bound
xchg
xlat
or
push
fbld
adc
cmp
mov
mov
cltd
idivb
cmc
and
cli
pop
fildl
mov
sbb
pop
mov
mov
jb
jno
outsb
or
inc
js
test
inc
repnz
lock
lcall
imul
rorb
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
out
ret
test
jle
push
mov
nop
repz
outsb
insl
adc
fcoms
ja
and
mov
pop
fwait
pop
in
push
divb
push
dec
pop
fwait
inc
cwtl
jno
add
rcll
push
es
sbb
jmp
fisubs
int
in
cmpsb
mov
not
cld
and
sub
add
inc
jle
test
xor
xor
dec
mov
cld
idivb
incl
push
ss
cmp
jge
loopne
leave
cwtl
es
shlb
dec
cmpsb
sub
clc
mov
or
out
ljmp
test
movsl
or
incl
addl
xor
iret
hlt
dec
jp
lahf
dec
and
cmp
mov
popl
add
jge
fildl
movsb
mov
pusha
scas
insb
inc
sub
popf
pushf
add
inc
out
leave
jg
into
xchg
dec
rcrl
cmp
xchg
testb
call
push
shlb
xchg
cwtl
xchg
stos
stos
ret
lock
mov
and
jp
adc
sub
scas
xor
inc
pop
inc
pushf
daa
out
invd
mov
jg
popf
dec
sub
or
add
imul
push
pop
jb
ficoml
push
loop
ljmp
mov
xchg
sahf
orl
popa
push
popa
inc
push
or
push
jmp
stos
add
stc
mov
jno
outsb
loope
and
and
xchg
out
and
inc
sbb
add
fwait
cli
stos
fwait
rcrl
xchg
jns
cli
cmpsb
div
mov
mov
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
arpl
jle
push
jg
jle
out
aas
jb
xchg
dec
clc
and
adc
add
push
sbb
test
cld
xor
icebp
test
or
or
rorl
cmpsl
enter
and
ret
outsl
ss
test
data16
shl
outsl
xor
add
cltd
enter
xchg
jg
add
cmp
sbb
push
andb
sub
jl
mov
out
xor
pushf
jns,pn
out
jmp
add
mov
or
fmul
and
les
enter
stos
jl
jae
cmpsl
hlt
sub
cld
out
xor
ljmp
sti
push
aas
inc
lahf
fstps
in
sub
jge
dec
add
call
movsl
or
mov
lcall
out
movsl
push
mov
add
sbb
repnz
xchg
and
mov
sbb
mov
imul
ficoml
movsb
mov
jnp
sub
or
add
jge
aaa
mov
test
je
adc
xchg
dec
xchg
adc
pushf
mov
mov
cmpsl
addr16
pop
paddsw
mov
inc
sbb
mov
push
push
ret
ja
push
cmp
jl
push
add
test
lea
loope
jge
pop
cmpsl
fwait
int3
fwait
xor
mov
mov
adcl
jae
jo
cmpb
jbe
mov
lea
aaa
ss
jbe
mov
xchg
and
fnstsw
pop
sub
dec
cmpsl
mov
cmpsl
popa
fs
fimull
cmp
andl
pusha
loope
test
into
test
stos
jle
adc
xchg
into
mov
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
stc
and
add
push
jg
jle
fwait
jmp
lahf
mov
push
rcrb
push
icebp
lahf
adc
mov
mov
sub
dec
test
mov
mov
icebp
push
out
mov
cli
mov
fdivr
std
cmp
sbb
aaa
aas
popf
mov
jbe
nop
shrb
sbb
nop
mov
into
xor
mov
jg
xor
ljmp
inc
lret
enter
or
into
mov
aad
outsl
xor
pop
jge
mov
das
and
jns
pop
jnp
mov
outsl
adc
bound
xor
cmp
add
outsl
mov
push
out
lds
mov
sub
push
cmp
idivb
outsl
scas
cmp
jo
out
ljmp
lahf
pop
popf
push
xor
push
out
inc
push
or
lahf
sbb
js
mov
shl
icebp
mov
sti
out
or
and
pop
push
adc
int
rcrl
lcall
dec
or
mov
jae
inc
lcall
faddl
adc
int3
in
sub
pop
inc
sahf
arpl
mov
pushf
add
cli
je,pt
insl
sub
in
mov
adc
pop
lds
push
dec
mov
int3
mov
mov
xchg
push
mov
in
pop
push
push
xlat
add
xchg
fnstsw
cmpsb
sub
or
mov
jecxz
loop
xchg
jbe
mov
push
leave
inc
and
fildl
inc
sub
dec
jne
sub
adc
sti
ds
nop
aas
push
dec
add
aad
icebp
mov
out
orl
jge
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
jle
push
jg
jle
in
aam
or
jp
shrl
js
rclb
or
pushf
inc
cmp
cmp
adc
cltd
push
jo
push
inc
dec
and
test
push
mov
sbb
cmp
scas
or
dec
cltd
mov
mov
inc
jae
mov
sub
xchg
add
sub
and
je
and
cltd
pop
in
loop
mov
pop
bound
push
subl
xor
or
data16
sbb
pop
adc
pop
mov
in
adc
gs
jne
test
in
adc
cmp
movsb
mov
adc
jp
dec
mov
xor
pop
cmpsb
mov
cwtl
ficoml
stos
pop
jb
push
pop
pop
ja
inc
sub
dec
mov
jbe
or
and
mov
jno
adc
pop
lock
xor
aam
pop
inc
add
lods
pop
mov
imul
aas
jnp
jle
push
out
loop
fwait
xchg
ret
push
xchg
push
loopne
movsb
test
cli
lcall
cwtl
push
pop
test
mov
lcall
shrl
mov
sbb
mov
insb
mov
fcompl
push
and
lods
xchg
or
jae
out
lods
inc
mov
pop
push
gs
jmp
sbb
sbb
test
and
xlat
stc
inc
out
mov
push
mov
and
hlt
pop
xchg
xlat
pop
sub
inc
cmp
rclb
fbstp
shl
or
dec
lods
push
dec
mov
mov
sahf
mov
cmp
xchg
test
pop
popa
out
mov
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
int
or
jle
jg
jle
pop
dec
ss
push
inc
lds
cmpsb
xor
xor
in
in
jo
shlb
pop
in
and
jnp
loope
sub
cmp
into
ret
fwait
pop
andb
xor
icebp
in
imul
cmp
ljmp
cmp
dec
push
push
dec
rorb
adc
mov
adc
cmp
imul
mov
sarb
or
or
mov
adc
stos
xor
fnstenv
dec
xchg
sbb
data16
jmp
fldt
inc
ljmp
mov
dec
sbbl
cmp
push
push
test
ja
sub
mov
sub
jle
ds
xor
imul
push
and
call
in
outsb
and
ret
iret
dec
push
cmc
xor
bound
js
dec
cld
clc
bound
scas
mov
aam
xorl
popf
cmp
push
inc
pop
sub
loopne
lahf
loopne
dec
jp
arpl
cmp
cmp
inc
popf
adc
aam
cmp
mov
pop
pusha
mov
jno
cmp
out
test
lcall
in
es
xchg
and
lcall
sbb
mov
and
dec
cmp
imul
and
mov
sub
mov
movsb
bound
int3
gs
and
insl
mov
lahf
add
jb
jge
jne
pushf
mov
mov
dec
cmp
int3
jge
out
add
and
push
ret
repnz
inc
leave
mov
arpl
enter
popa
inc
and
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
pusha
pop
lods
dec
or
push
jg
jle
cmp
xlat
jno
bound
in
dec
inc
out
pop
and
inc
cmpsb
je
clc
sub
and
movsb
icebp
mov
mov
jnp
aam
xchg
mov
inc
xchg
xchg
int
add
cwtl
add
shrl
push
cmpb
mov
pop
jns
push
outsb
filds
ret
jne
pop
xchg
cli
imul
mov
jl
xor
jge
fsubrl
jmp
in
or
or
je
cmp
pop
xor
repz
dec
mov
sti
push
dec
adc
test
aaa
out
mov
fstl
cwtl
adc
cmp
and
jbe
sub
ret
xchg
sbb
or
add
sbb
jo
in
test
shrb
jg
pushf
dec
sti
clc
pop
mov
sub
mov
adc
fisubrl
mov
fwait
xchg
dec
fistps
in
push
int
int3
xchg
scas
mov
les
aam
pop
js
stos
mov
nop
push
add
dec
pop
popf
dec
xor
mov
mov
mov
repz
mov
ds
je
repz
cmp
loopne
dec
bswap
jae
mov
or
add
fnclex
rclb
adc
sub
mov
loope
test
jecxz
sarb
cmpsl
jno
movsb
scas
adc
scas
aas
sub
add
bound
jae
cmp
lret
movsb
mov
jp
test
mov
xor
orl
es
add
int
mov
fildl
loope
lods
dec
xchg
and
mov
stos
int3
or
push
cmpsl
aad
std
notb
and
std
push
lds
jp
mov
adc
jge
js
mov
and
adc
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
inc
lods
fdivp
mov
jg
jle
sub
dec
movsl
cmpsb
mov
or
je
adc
add
inc
ror
push
js
out
jno
xor
lea
mov
push
shl
lea
push
lcall
shlb
mov
hlt
lock
xchg
or
pop
mov
out
xor
ja
jl
fisubs
pusha
dec
loopne
popa
fsubs
pusha
dec
xor
imul
sbb
lahf
insb
rcll
lock
and
scas
fadd
push
add
push
dec
movsl
push
inc
in
pop
inc
cltd
mov
sub
ror
loop
movsl
xchg
jnp
fwait
scas
push
aad
dec
sbb
add
lock
ret
cld
pop
or
cmp
mov
sub
cmc
rclb
fdivs
xor
push
into
sarb
xor
into
nop
in
leave
jnp
repnz
and
stos
cmp
cld
insl
cmp
jbe
jg
push
jle
jmp
shl
int3
cmc
leave
mov
xchg
clc
or
push
into
enter
das
push
sbb
sbb
loop
sbb
pop
test
stos
dec
inc
sub
cmp
dec
or
repnz
pop
cltd
pop
sbb
xor
sarb
jmp
and
jbe
push
int
add
and
xchg
xor
sub
inc
mov
call
mov
mov
pop
xor
or
and
xor
out
mov
gs
push
jg
sbb
jb
iret
inc
inc
clc
xor
lock
out
in
inc
add
or
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
jns
sti
icebp
rclb
jle
scas
jg
jle
imul
jb
mov
fwait
arpl
cmp
loop
add
mov
sbb
cmp
fiaddl
fbld
mov
rorb
xor
adc
inc
dec
lea
jb
mov
inc
and
pop
adc
stc
push
mov
mov
xchg
mov
mov
lahf
loope
adc
and
sbb
sub
inc
scas
jne
testb
sub
fndisi(8087
aam
filds
sbb
imul
hlt
sub
dec
daa
add
pushf
dec
les
enter
mov
iret
cmc
xchg
add
or
pushf
loopne
int3
add
sub
inc
adc
or
xor
push
pop
push
or
pop
dec
repnz
mov
mov
movsl
rclb
push
aaa
pop
pop
ficoml
rorl
stos
int3
popl
jg
shl
sbb
movsl
mov
es
push
mov
dec
push
arpl
repz
repnz
adc
lock
add
xor
mov
loopne
loopne
sub
or
leave
sub
xor
dec
out
addr16
ret
push
xor
jmp
push
repz
cmc
xor
sahf
movsb
stc
decb
mov
mov
sti
push
je
jne
or
push
jo
ret
loop
lret
push
daa
push
mov
scas
pop
out
cmp
and
leave
pushw
inc
lahf
xchg
movsb
idivl
and
orl
clc
jle
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
nop
sarb
adc
jle
jg
jle
add
cmp
fcomps
aas
mov
inc
mul
insl
sbb
testl
sub
jg
xor
pushf
inc
mov
loop
aaa
int3
iret
pop
fbstp
aam
jge
mov
mov
jg
add
add
xchg
jae
sbb
add
dec
jnp
sub
ja
xor
cmpsl
and
rcrb
ret
addr16
xchg
rcl
inc
stos
aam
leave
pop
daa
sbb
pop
push
insl
scas
cmp
cld
pop
mov
adc
sbb
es
xlat
mov
into
cmp
dec
add
in
test
fidivs
and
mov
pop
lret
stc
jae
ss
inc
andb
mov
jnp
xor
in
cmp
test
add
ret
inc
mov
mov
pop
aaa
inc
fwait
daa
cmp
lcall
jbe
push
or
das
lea
adc
jmp
iret
push
mov
lea
or
push
test
inc
jecxz
roll
mov
call
xchg
test
dec
push
dec
in
fcompl
xchg
mov
arpl
push
jb
repz
ljmp
aam
rorl
mov
or
xchg
bound
mov
mov
or
xchg
ja
sti
lds
cwtl
out
test
fs
jno
sbb
mov
sub
in
leave
add
imul
or
sbb
mov
lock
dec
fbld
aas
pop
xlat
mov
roll
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
cmp
adc
jg
jle
xchg
sub
mov
xchg
cs
int3
mov
dec
dec
dec
xchg
fisttpl
sbb
in
or
xchg
lds
in
mov
xchg
stos
lds
mov
and
pop
mov
lock
subb
inc
jle
leave
mov
push
test
xor
push
adc
sbb
fidivrl
loop
inc
addr16
shl
mov
dec
sbb
jns
hlt
rclb
jmp
inc
sahf
mov
pop
pop
push
ret
sahf
xor
lret
nop
push
shll
or
inc
mov
jo
adc
xorl
lds
cmp
pusha
or
adc
fimuls
idivl
dec
jl
cmpsb
addb
bound
push
inc
sti
mov
xchg
icebp
xor
and
dec
jmp
bound
pop
vpcmpgtd
add
nop
popf
xchg
jne
push
push
call
pop
imul
in
js
ret
push
mov
adc
mov
inc
xchg
pusha
aaa
pop
movsl
sub
icebp
pop
xchg
imul
gs
jns
testl
ds
inc
das
lret
nop
fcmovbe
cltd
mov
imul
jns
nop
hlt
mov
movsb
cmpsl
pusha
xor
mov
jle
rclb
orl
add
pop
out
or
cs
js
sti
ss
aas
mov
ret
popa
push
jno
outsb
js
push
pushf
adc
repnz
mov
js
xor
or
sbb
push
lret
dec
lods
orl
add
add
mov
mov
mov
pop
call
shl
adc
scas
jg
jle
xor
test
adc
dec
sbb
jns
mov
test
sub
mov
test
lock
into
std
cmp
divl
cmpsb
xor
pop
in
sti
mov
call
aas
test
mov
das
scas
subl
inc
jl
jecxz
shlb
dec
loop
int3
or
out
push
cmp
and
inc
xor
inc
fldl
xchg
inc
repnz
addps
jg
loop
je
ret
jns
xor
inc
dec
cmp
scas
imul
pop
cmp
outsb
rcr
xchg
lahf
rcrb
mov
cmp
pushf
mov
mov
nop
test
in
mov
icebp
lea
icebp
nop
sbb
mov
mov
mov
cmc
sbb
inc
hlt
and
stc
xchg
mov
sbb
popf
mov
out
mov
ljmp
sahf
leave
mov
cli
das
mov
fdivs
gs
add
xor
loop
mov
aas
js
div
jp
push
or
fidivrs
cmpsb
test
in
push
push
or
xor
in
add
movsb
std
jl
adc
loop
add
and
cmpsl
jae
mov
mov
cmp
push
pop
popa
subb
repz
jbe
cmp
pop
xchg
shrl
or
push
or
sub
cs
ret
inc
mov
or
mov
jbe
outsl
xchg
pop
xor
test
or
jge
stc
sub
imul
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
jg
pop
outsb
rol
jecxz
sbb
lods
stc
sahf
jo
pop
dec
xchg
xchg
and
into
xchg
mov
out
adc
pop
fistl
jns
dec
and
sbb
mov
fadd
addb
repnz
mov
outsl
test
xchg
push
or
pop
leave
test
inc
stos
mov
add
in
icebp
aas
push
mov
in
ja
shll
cmp
xor
jno
test
adc
push
xor
or
dec
ljmp
add
adc
lock
rclb
loope
bound
xchg
dec
sahf
add
push
lea
fst
pop
out
out
enter
cmp
lock
xchg
inc
add
adc
rcr
clc
mov
or
mov
xor
push
lcall
push
adc
cmpsl
push
pop
xchg
icebp
pop
leave
push
pop
sbb
add
popf
xor
aaa
and
leave
or
scas
sub
jo
xorb
push
test
and
rcrb
jne
pop
add
push
cmp
dec
pop
f2xm1
inc
or
jmp
pop
push
shr
xchg
inc
dec
out
lock
fs
xor
loopne
mov
pop
jle
lock
mov
mov
outsl
mov
jae
lret
nop
sti
push
add
pushf
jle
cltd
inc
push
xor
sbb
cmpsl
int3
sbb
js
xchg
aad
lea
jb
inc
xor
fistpl
mov
xchg
outsb
neg
rol
mov
push
sarb
cwtl
je
movl
jmp
scas
or
xor
mov
les
mov
jle
scas
jg
jle
mov
push
or
in
add
stos
and
lods
notb
cmp
pop
xchg
shll
in
xchg
cmc
cmpsb
xor
adc
inc
repnz
mov
fisubrs
data16
xor
into
cmp
ljmp
add
inc
inc
adc
lds
in
movsb
insb
adc
sti
into
out
test
pop
sub
cmp
popl
jo
mov
ja
push
in
inc
idivl
fucomip
rcll
and
sub
scas
xchg
jno
mov
lods
cs
int
cmp
cmp
testb
sbb
out
cmp
push
daa
movsl
sub
lret
data16
test
jg
shlb
add
arpl
pusha
in
mov
nop
push
add
sbb
sub
in
outsl
mov
popf
aad
jl
xchg
pop
insl
cmpsl
sub
adc
jo
cmp
lahf
push
outsb
shl
fxch
mov
insl
cmp
add
test
outsl
bound
cmp
add
test
inc
and
mov
ficompl
fists
aad
pop
adc
lretw
mov
dec
les
mov
push
jne
shrl
mov
insl
push
cli
dec
sahf
mov
and
popl
lods
test
push
shll
hlt
pop
fwait
iret
in
movsl
icebp
push
lcall
ljmp
add
lods
push
sub
adc
imul
push
lret
sbbl
mov
clc
sub
dec
fwait
xor
inc
fimull
arpl
jge
and
lea
mov
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
mov
add
mov
test
jmp
fs
gs
out
shll
sti
imul
cltd
loopne
repz
mov
inc
mov
pop
rdpmc
fsubrl
in
mov
xor
jns
shr
jns
mov
hlt
mov
pop
mov
adc
fcomip
cmp
xorl
enter
icebp
pop
inc
dec
lahf
xor
mov
loopne
cli
fdiv
scas
push
loop
push
push
mov
jmp
push
loope
js
xlat
das
clc
mov
adcb
mov
cltd
scas
jo
aam
fistpl
pushf
jb
dec
pop
sbb
in
aam
xor
sub
imul
adc
mov
outsl
jl
mov
jecxz
adc
es
scas
mov
rclb
push
mov
pusha
das
cmp
mov
cld
jno
dec
imul
jmp
int
dec
shl
jae
dec
mov
pop
lcall
imul
es
xchg
cli
lods
xchg
les
push
testb
xor
out
cmc
fs
ds
arpl
xchg
aas
mov
and
shufps
sbb
pushf
mov
mov
mov
imul
rorl
push
leave
iret
shll
xor
mov
add
lret
adc
fcompl
test
push
cs
lods
or
cmpsl
inc
insl
test
movb
insl
or
arpl
dec
testb
sub
rcll
or
pop
dec
xchg
lret
stos
xchg
sbb
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
mov
jne
and
jle
scas
jg
jle
scas
mov
popf
mov
adc
mov
push
xchg
call
mov
das
aaa
sti
jmp
pop
mov
or
cmp
lret
lahf
out
sbbl
lods
lock
shrb
cld
cmc
filds
loopne
insl
cmp
adc
jp
insl
inc
loop
push
push
jne,pt
frstor
push
aas
mov
in
push
jne
das
shl
lock
mov
cmp
pop
mov
cmpsl
popf
iret
stc
into
out
lret
leave
repnz
cwtl
mov
out
rcrb
push
rcr
jno
xchg
xadd
outsl
std
ret
add
add
mov
inc
pop
cltd
jge
movsl
movsl
fldcw
insb
or
sbb
lock
shrl
mov
push
loop
sbb
mov
sub
clc
roll
insl
sbb
arpl
sbb
ret
aaa
or
sbb
dec
adc
cmp
cmpsb
xor
or
sbb
lods
gs
lods
subb
testb
into
mov
jle
stc
lock
fwait
xchg
test
sbb
movsl
pop
pushf
cli
inc
push
cld
jbe
jmp
mov
mov
push
insl
cmp
ds
push
aad
shlb
jno
in
cmp
in
or
aam
cmc
push
test
sbb
jno
scas
movsb
mov
stos
jl
mov
lcall
pop
xor
sub
iret
mov
add
push
jle
clc
outsl
insl
sub
in
fwait
or
mov
call
pushf
mov
adc
jle
clc
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
and
scas
mov
cltd
jg
jle
in
aad
jp
sarb
mov
out
mov
xor
sahf
pop
loop
xchg
ds
lods
add
sub
mov
or
push
mov
pop
stc
ret
dec
xchg
push
clc
adc
shrl
xor
lcall
dec
dec
cmp
pusha
mov
into
js
sar
ljmp
push
or
inc
mov
out
and
adc
and
aaa
subl
xlat
lahf
les
xchg
stos
mov
mov
js
lret
dec
cmp
dec
aam
insl
mov
sti
in
add
inc
fdivr
pop
cwtl
mov
int3
fimull
cld
push
into
pop
dec
mov
mov
xor
sub
pusha
out
aad
test
ret
fwait
out
xor
and
mov
and
jo
adc
push
int3
stos
jl
push
dec
or
push
shrb
mov
xchg
pop
mov
mov
stos
movsl
jns
pushf
vpavgb
jnp
fisubs
mov
mov
xor
jp
xchg
cmc
mov
inc
ror
push
pop
sub
out
add
pop
mov
xor
cltd
add
mov
adc
mov
sub
lcall
or
cmp
sub
jle
shll
xchg
sub
inc
xor
std
andb
out
push
pop
cld
jge
push
loope
je
sub
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
inc
cmp
loop
sbb
cltd
jg
jle
aaa
lea
pop
jae
pusha
xor
xor
rcrl
pop
xchg
sbb
orl
fcomps
popf
push
mov
stos
inc
ja
jge
sbb
pushf
icebp
pop
mov
and
add
int3
icebp
ds
dec
cmc
pop
sub
cmp
xor
jecxz
imul
sbb
in
jg
in
add
mov
popf
or
adc
pop
xor
lock
jecxz
lcall
mov
pop
jns
fbld
lods
jecxz
xor
aam
mov
cmp
sahf
cltd
cmpsl
xchg
pop
pusha
into
out
push
mov
pop
test
lods
push
adc
pop
shlb
icebp
rolb
movsb
test
ja
fsub
mov
jmp
movsb
insb
push
test
pop
xchg
shlb
lahf
jmp
sbb
lret
xlat
pop
fstpl
cmp
pop
dec
push
sub
inc
add
insl
nop
mov
and
inc
mov
cmpsb
dec
xor
adcl
aam
cmpsb
or
and
shl
repz
adc
js
dec
js
and
js
fldt
les
jnp
sahf
out
lcall
loope
cmp
push
dec
pop
fdivrl
flds
imul
mov
inc
push
mov
adc
sub
ljmp
mov
pusha
cmp
cmp
movl
mov
jne
dec
std
ds
ds
sub
in
add
das
fs
or
fwait
pop
or
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
out
cwtl
and
jle
xchg
jl
jle
pop
lcall
or
jl
and
je
es
lcall
sbb
aam
cmp
xchg
adc
sti
roll
ss
cmp
mov
sbbb
imul
sbb
mov
mov
push
rcrl
sbb
dec
mov
mov
fidivrl
shrb
or
adc
pop
add
les
jle
es
jle
xor
push
xlat
dec
scas
in
aam
std
test
adc
inc
dec
xchg
in
and
sbb
cmpsl
rorl
pop
xchg
std
mov
cmp
pushf
repnz
or
push
pop
mov
xchg
push
sbbl
jge
xchg
pop
call
int
test
cmpsl
sti
outsl
out
mov
addl
jno
repz
adc
daa
js
shll
and
test
sbb
daa
inc
lret
sarl
out
not
add
and
mov
mov
popa
sub
dec
aad
jge
rorl
aas
cmp
fdivrs
stos
adc
lods
adc
cmpsb
enter
mov
fldcw
or
or
hlt
sar
insl
int
jecxz
daa
sbb
daa
xchg
xchg
rclb
xor
dec
mov
xchg
notb
cmp
lods
jge
mov
mov
mov
repz
and
fwait
es
daa
leave
movsb
movsb
sub
imul
dec
sysenter
fs
pop
sub
pop
jle
iret
aad
data16
int3
sub
xchg
sbb
dec
dec
mov
lret
icebp
lds
in
mov
imul
loopne
shrl
mov
fimull
sarl
sahf
mov
sbb
mov
cmp
jmp
fucomip
pop
pop
daa
test
aaa
cmpsl
dec
sahf
xor
stos
test
out
jp
in
test
push
cltd
loope
es
xchg
clc
inc
pop
jae
out
jge
sub
sub
mov
cmp
test
adcl
shrl
das
inc
push
mov
lret
neg
sahf
add
sub
popa
repz
xor
icebp
mov
or
shrl
mov
lock
imul
stc
je
orl
and
push
inc
or
or
mov
and
scas
xor
dec
xchg
cmp
decb
xor
std
lcall
lea
daa
pusha
sbb
and
scas
arpl
and
out
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
fs
adc
jle
xchg
jl
jle
int
movsl
cmp
rcll
mov
jo
scas
dec
addr16
ret
adc
fisttpll
inc
aam
aad
sbbb
mov
jnp
sbb
inc
sub
out
in
xor
scas
dec
fs
jae
lea
enter
in
mov
daa
das
adc
daa
push
xchg
or
or
outsb
jnp
or
pop
mov
sub
xor
mov
shrb
movsl
jg
ret
lock
lahf
add
sbb
xchg
ret
fwait
adc
mov
jne
dec
cmp
xor
xor
aad
or
cmp
dec
xchg
stc
orb
popf
aas
bound
pop
jle
mov
sbb
movsl
out
jbe
mov
mov
jo
push
adc
dec
xchg
cmpsl
stos
cmpsl
fadds
jmp
aaa
push
mov
mov
sub
push
imul
sub
xchg
jge
int3
mov
call
cmp
xchg
mov
aad
stos
dec
sub
jge
mov
cltd
in
pop
xchg
xchg
push
jg
rorl
vmovapd
mov
das
clc
sbb
hlt
add
sub
inc
lea
jmp
shlb
sub
cmp
inc
sub
cli
andl
ret
into
mov
pop
into
xorl
hlt
xchg
and
jnp
pop
call
and
leave
sub
scas
ss
loope
les
notb
pushf
aam
mov
and
mov
and
push
fwait
add
sbb
test
fiaddl
popa
mov
and
cmc
sbb
xchg
int3
enter
cmp
xor
xchg
add
mov
incb
dec
push
adcb
loope
pop
sub
rorl
xchg
out
sub
cmpsl
push
sub
cli
inc
pop
xchg
pop
pop
lock
add
inc
pusha
xchg
dec
aas
cmp
sub
and
and
or
cmp
stos
aad
lret
stos
inc
ret
mov
mov
jg
idivb
negb
mov
or
push
ljmp
xchg
aam
inc
repnz
std
jne
push
add
insb
sbb
jnp
lret
cmpsb
jnp
xor
sub
or
gs
adc
aas
mov
call
ss
mov
add
dec
xor
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
cmp
mov
mov
jnp
cld
inc
adc
fstpt
jle
mov
adc
cmp
cmp
orl
xchg
and
scas
in
into
inc
push
cmp
popl
ds
push
fistpll
jg
dec
cli
cmpsb
imul
jb
lock
cli
test
inc
lock
icebp
test
jg
and
inc
loop
std
daa
stos
iret
aam
lock
mov
mov
add
sbb
stos
pop
mov
loopne
cmp
in
push
jmp
test
push
mov
lds
jecxz
xchg
arpl
fsubs
mov
std
or
add
pushf
inc
ret
fbstp
not
fs
fs
mov
mov
add
cmpsl
cmp
pop
ret
clc
fucomi
lea
adc
popa
jbe
mov
roll
imul
jnp
cmp
add
sbb
xchg
cmp
mov
mov
dec
stc
xlat
xorl
shlb
imul
pop
mov
jno
and
xchg
xchg
fcompl
mov
adc
hlt
maxps
sbb
push
ss
dec
add
mov
and
mov
inc
mov
stos
mov
insl
adc
cli
dec
movsb
dec
xchg
or
push
push
popa
out
pop
shl
jecxz
cmp
mov
sbb
xchg
popa
xchg
xlat
xchg
xchg
pop
push
mov
lock
adc
lret
sbb
adc
clc
add
cmpsl
pop
bound
dec
inc
mov
test
pop
mov
aad
add
out
or
arpl
push
mov
pushf
jne
mov
test
jp
incb
xchg
mov
vsqrtss
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
loopne
inc
cld
jle,pn
outsb
jg
jle
popf
imul
std
es
push
lods
or
mov
cmc
mov
xlat
repz
scas
jle
out
push
adc
ljmp
adc
mov
mov
adc
sbb
inc
sub
int
cmp
or
xor
adc
jns
xchg
and
in
and
call
int
cmpsl
inc
repz
std
add
or
pop
es
cmp
cmp
adc
les
xor
ds
test
adcb
loopne
xchg
mov
lods
gs
imul
stos
jnp
fldenv
push
or
stos
cmp
lcall
popa
roll
cmp
push
stc
testl
sub
rcrl
dec
push
fisttpl
jle
or
int
stos
jnp
mov
mov
arpl
or
imul
inc
jae
out
lods
stos
or
enter
test
mov
pop
inc
testb
adc
push
push
cltd
xor
cmc
fldl
fldl
xchg
pop
shrb
add
xorb
rcl
mov
lcall
ds
data16
mov
xchg
pop
loop
iret
jne
lods
unpckhps
cmp
mov
lea
stc
dec
mov
adc
in
cmp
xchg
loope
in
mov
mov
jnp
xor
pop
movsb
inc
mov
xchg
cltd
sarl
mov
jo
in
cmpsb
mov
stos
int3
lds
inc
testl
dec
pop
loopne
lock
call
cmp
fldt
pop
insb
push
adc
aas
pop
insb
pop
push
add
push
or
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
add
and
sub
jle
jg
jle
inc
and
in
vandps
push
repnz
test
aaa
xor
xor
add
jge
push
stos
rcl
movsb
mov
ficoml
xchg
in
inc
xchg
push
rcl
jg
xchg
call
test
sub
push
xchg
lret
test
jns,pn
push
dec
and
gs
hlt
shlb
and
push
test
jno
mov
ljmp
jnp
or
lock
pop
mul
dec
push
out
mov
rolb
iret
aam
push
je
repz
fistps
xor
in
loopne
xor
sub
adc
fistpl
mov
jg
fistl
lret
cmp
dec
aam
es
mov
pop
in
std
cmp
and
lahf
cmpsb
aad
arpl
dec
pop
mov
add
mov
sbb
stos
or
dec
out
arpl
jmp
lock
movl
loop
test
inc
aad
xchg
and
xchg
out
repnz
jmp
push
lcall
push
sbb
mov
xchg
pop
rcl
lods
and
or
sub
imul
push
outsb
xchg
dec
ljmp
push
jb
and
push
out
add
shlb
imulb
sbb
and
cwtl
pop
add
mov
ss
data16
push
lds
sti
cltd
adc
dec
into
inc
or
jg
clc
add
push
inc
adc
jg
mov
aaa
dec
pushf
lea
sub
comiss
pop
test
add
mov
push
push
std
les
repz
and
and
inc
ret
cmp
cmp
rolb
shl
jp
aas
adc
jecxz
sub
mov
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
sahf
cld
sub
push
jg
jle
mov
adc
fidivrl
xor
pushf
mov
pusha
hlt
pop
repnz
outsb
aad
arpl
aam
xlat
out
mov
jecxz
test
mov
into
dec
das
mov
mov
add
xor
or
ffree
pop
add
aaa
in
shl
push
jecxz
add
cli
lods
es
cmc
adc
pop
or
loope
or
clc
cmp
jp
sbb
fildll
in
sar
mov
mov
xor
or
mov
imull
fs
cmp
lods
sbb
xchg
inc
xchg
imul
jecxz
adcb
inc
jae
adc
ss
stos
lret
andl
jp
jae
cld
mov
adc
pop
push
call
decb
dec
inc
jle
daa
mov
pop
xlat
pop
jb
mov
test
iret
mov
dec
dec
mov
or
fwait
cmp
loop
leave
and
jmp
xor
add
lock
cmc
out
mov
sub
pop
xor
pop
lods
pop
pop
dec
mov
aaa
xor
into
xor
ret
ror
add
push
mov
xor
jl
mov
jnp
fisttpl
in
mov
fstps
ret
data16
push
push
xlat
cmp
dec
jbe
push
fsubl
sub
stos
ljmp
mov
inc
sbb
pop
sub
scas
jmp
xor
ljmp
out
and
clc
add
pop
ret
gs
adc
xor
inc
mov
pop
insb
outsb
mov
out
xor
ja
fpatan
dec
lret
and
out
test
enter
jae
into
adc
adcb
or
stos
or
les
stos
movsl
mov
xor
fucomi
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
or
or
push
jg
jle
loope
and
xchg
stos
inc
jmp
push
das
leave
add
repnz
mov
and
xchg
xlat
out
lods
inc
sbb
sbb
dec
add
clc
out
fcmove
mov
sbb
dec
cs
sbb
ljmp
dec
and
mov
inc
mov
sbb
ljmp
mov
and
push
sbb
jg
mov
jne
inc
xor
mov
dec
aad
pop
inc
jne
je
rorb
jo
cld
cmpsl
jmp
mov
add
pop
xchg
sbb
fcmovnbe
cmpsl
scas
mov
mov
in
push
jmp
or
or
xor
ds
clc
xchg
add
add
lcall
cmp
jp
cmp
pop
cld
call
jmp
mov
jbe
enter
fimuls
out
add
jae
xor
push
scas
scas
mov
dec
jno
mov
lahf
mov
pop
xor
aaa
pop
mov
inc
sbb
push
repz
xchg
sbb
ljmp
loop
mov
fmuls
in
xor
stos
pop
and
push
xlat
pop
in
fdivr
movsl
pop
test
nop
out
fstl
push
or
jecxz
cmp
repz
fdivs
inc
cmp
xlat
ret
xchg
jl
cli
or
mov
xchg
ret
sub
dec
pop
sub
cwtl
push
sub
or
dec
or
pop
or
pop
xchg
xchg
stos
arpl
rcr
shr
and
nop
jg
xor
hlt
cmp
lret
js
loop
pop
test
jl
jge
or
jecxz
mov
push
inc
fcomip
xchg
dec
mov
mov
push
movb
push
mov
add
push
jmp
jne
adc
flds
mov
pusha
sub
push
jg
jle
mov
pop
and
addr16
lock
mov
pop
cmp
popa
push
and
push
dec
in
push
int
sub
popf
jmp
lcall
jns
lock
daa
aam
sbb
sahf
arpl
fists
lock
add
out
sti
idiv
scas
out
int
adc
dec
lds
pushf
vpsrad
scas
cmpsb
mov
cmc
mov
mov
and
cwtl
mov
inc
or
rolb
stos
jno
icebp
les
rcrb
and
test
mov
fst
pop
adc
repnz
insl
sbb
xor
or
jae
mov
outsb
jo
jb
or
fcom
sub
pop
add
imul
das
stos
and
inc
mov
add
test
aaa
inc
mov
cmp
mov
xchg
jl
jns
aad
cwtl
int
ret
lods
ret
adcb
test
add
add
xor
pop
pop
mov
or
out
dec
shll
bound
jae
lods
and
mov
inc
and
mov
lcall
mov
test
sbb
or
push
jg
pop
pop
add
push
or
ss
push
fwait
pusha
pop
sbb
fsts
cld
mov
lock
lods
pop
into
and
ret
jns
rorl
fadds
dec
test
loope
pushf
cmp
xor
pop
ljmp
add
xor
repz
ja
inc
add
je
mov
pop
xor
pop
pop
lret
mov
test
push
ljmp
jo
jnp
subl
cmpsl
mov
mov
xchg
sub
cwtl
add
add
xor
and
add
clc
add
add
add
xchg
push
shll
or
nop
inc
aaa
jle
push
jg
jle
pop
xor
inc
add
lret
popf
je
cwtl
lcall
and
and
mov
scas
xchg
int3
test
je
dec
repnz
mov
je
pop
or
or
sbb
sub
pop
lret
mov
adc
mov
pop
ret
cmp
inc
das
int
or
sub
cmp
jmp
icebp
test
fwait
push
enter
pop
outsb
adc
xor
cli
jbe
popa
jmp
xchg
ss
xor
std
push
test
decl
cs
iret
mov
cmp
lahf
add
dec
or
pop
adc
lret
xchg
pop
das
loopne
mov
push
mov
nop
mov
jge
push
popf
ds
sti
mov
pop
jnp
xorb
mov
cld
cmpsl
jno
mov
mov
dec
scas
xlat
mov
jne
in
and
jmp
adc
dec
ret
xchg
sbb
jae
fidivrl
mov
loope
jnp
loop
cmpsb
ds
mov
fistl
cltd
pusha
or
ret
orb
fwait
and
jmp
sbb
scas
fldl
pop
cwtl
test
xor
mov
push
scas
sub
pop
loope
sub
lds
lret
inc
cmp
xchg
in
jp
inc
scas
and
mov
jae
mov
mov
xor
fmuls
aad
jp
and
mov
fidivrs
push
das
xchg
dec
icebp
fdivr
add
pop
cltd
xor
imul
into
aam
pop
cs
dec
cmpl
nop
cwtl
fdivr
loop
gs
ret
repnz
mov
xchg
or
add
repz
add
hlt
pushf
dec
mov
inc
and
mov
jle
jg
jle
sub
js
pop
shlb
push
sahf
icebp
aaa
repz
test
fistl
cmp
mov
enter
mov
xor
in
inc
mul
jno
push
mov
dec
dec
fildl
outsb
das
arpl
enter
mov
xchg
jp
rol
jnp
loopne
orb
js
sub
ret
xchg
out
out
lds
fnstenv
mov
inc
mov
pop
test
jns
push
sub
imul
adc
lods
aad
repnz
cmc
repnz
lcall
inc
cmpsb
push
pop
cli
imul
inc
fucomi
xor
mov
pop
ss
mov
sbbb
pop
stc
or
dec
insl
in
mov
mov
dec
xchg
pop
cli
aad
addr16
bts
mov
mov
sub
scas
enter
movsb
xor
pushf
je
jnp
in
test
popa
adc
add
scas
mov
rolb
jns
push
daa
orl
dec
jns
dec
push
pop
std
xchg
add
stc
into
sbb
dec
jnp
fmull
mov
movsl
fs
lods
ds
pop
ss
inc
fcompl
dec
jmp
and
push
xchg
icebp
jb
jmp
mov
jb
icebp
jg
rcrl
pop
pop
inc
je
cwtl
inc
push
xchg
scas
xchg
jb
lcall
cld
adcl
aaa
data16
repnz
inc
xchg
adc
movsl
mov
rorl
adcb
lahf
popa
jbe
cmp
pop
movb
cmp
mov
lea
rcrl
cmp
repz
sti
mov
sub
jae
adc
add
adc
in
je
cmpsl
dec
pop
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
lea
popf
icebp
xor
push
jg
jle
ficompl
inc
jbe
aaa
add
xchg
push
scas
xor
mov
fmul
inc
nop
cmpsb
and
add
cmp
mov
shrb
aam
hlt
xchg
dec
loope
and
mov
sub
dec
adc
daa
fs
cmp
sub
dec
xor
mov
mov
loop
or
jmp
dec
insb
gs
ja
mov
pop
inc
xor
fxch
mov
movl
jge
or
sti
mov
and
lock
cmp
popf
inc
pop
rol
cmpsl
xchg
jb
mov
push
jge
in
push
and
aad
sbb
sub
imul
mov
and
dec
outsl
pop
cmp
push
lcall
pop
sbb
xchg
push
pop
push
stos
mov
add
jl
or
or
pop
cmpl
test
and
jge
mov
jecxz
jno
int3
inc
mov
push
pushf
adc
push
repz
xchg
jmp
add
sub
pop
or
mov
jg
cmp
jno
dec
js
add
lret
subb
lods
ret
sub
xchg
and
daa
out
fs
lahf
stos
xor
xchg
cmp
inc
add
enter
xchg
pusha
test
mov
or
push
xor
mov
pushf
push
mov
push
inc
enter
add
inc
sub
cmp
test
in
lods
xor
mov
cmp
subl
jecxz
dec
iret
inc
sbb
fs
mov
sub
movl
mov
xchg
pop
hlt
repz
pusha
and
in
jge
mov
jne
pushl
jmp
push
mov
dec
sub
enter
out
xchg
aam
jle
push
jg
jle
dec
test
stos
inc
cld
das
add
sti
jns
mov
push
adc
xchg
xchg
cmp
mov
clc
sbb
lret
scas
mov
push
dec
mov
fxch
xor
xchg
mov
add
or
outsl
lret
test
out
sbb
testl
int3
push
sub
jecxz
sbb
ret
ret
std
xchg
fs
movsb
dec
jns
mov
cmp
repnz
mov
or
stos
mov
sti
jg
into
int
adc
pop
icebp
data16
stc
adc
shlb
add
xchg
loop
ret
ljmp
test
push
out
mov
data16
sbb
jnp
pushf
xchg
lcall
xchg
call
pop
jne
xor
sbb
test
hlt
roll
inc
and
mov
xchg
repnz
adc
ljmp
cmp
or
inc
sub
fisttpll
mov
inc
mov
mov
scas
iret
gs
jp
sub
clc
adc
sbb
ret
addr16
enter
inc
in
movsl
pop
cmpsb
int3
lahf
sbbl
adcb
cs
inc
mov
add
jns
lods
rcrl
add
repnz
xchg
mov
xor
bound
jle
lea
inc
push
lods
cmpsl
push
hlt
sub
mov
sbb
in
dec
jnp
scas
ret
mov
or
mov
bound
mov
frstor
xchg
mov
mov
cmp
push
fmull
lahf
push
lea
push
pop
lcall
in
dec
pop
push
pop
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
outsl
aam
addr16
or
adc
push
insl
add
jns
aad
adc
mov
cmp
inc
call
repz
fstps
ds
inc
or
pop
mov
shrl
xor
sbb
imul
sti
arpl
xor
cmpsl
popf
adc
or
aam
pushf
sub
jno
repz
ret
push
xlat
mov
jmp
jae
cmpsl
or
ret
jg
andb
push
icebp
mov
adc
dec
xor
add
jmp
mov
mov
pop
jbe
jno
loope
xor
mov
int
fisttpl
mov
das
push
je
cmp
and
add
add
outsl
cmp
iret
or
test
jno
addr16
sbb
imul
xchg
and
jns
add
into
adc
sti
vpshaq
cmpl
inc
push
shll
lods
sbb
sbb
arpl
sar
aaa
or
mov
es
testl
fsubs
xlat
cld
call
pop
push
shlb
je
mov
das
push
and
cld
cmpl
getsec
fadds
sahf
and
xchg
fstpl
push
iret
data16
xchg
sbb
mov
fimull
inc
rorb
imul
lret
faddp
es
pop
and
out
popf
pop
call
pop
jae
sub
cmp
ret
aaa
sbb
jae
or
and
or
push
hlt
lock
aad
shll
push
icebp
test
xchg
jmp
lahf
and
xchg
std
xor
loopne
xor
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
inc
ds
out
out
sbb
stos
adc
out
cmp
xchg
sub
in
mov
out
mov
les
cmp
enter
arpl
and
in
add
roll
js
dec
cmp
lds
inc
and
fsubrp
mov
mov
and
icebp
or
int3
xchg
fs
inc
xchg
sarb
jle
add
test
outsb
mov
jmp
rcrl
sub
mov
and
shll
lret
les
push
movsb
xor
mov
mov
mov
sub
cmpsl
aas
cli
in
inc
jg
inc
into
movsl
inc
fsubrp
or
les
sub
sub
sarl
dec
mov
jo
jbe
pop
mov
dec
aas
push
bound
inc
addr16
ds
xchg
mov
in
pushf
push
js
icebp
adc
push
cmp
in
out
dec
fdivl
cli
add
mulb
frstor
inc
lock
je
pop
pusha
rcrb
add
stos
push
pop
ret
fsubrl
mov
lods
popaw
cli
lret
lea
call
xchg
hlt
xchg
adc
aas
sbb
and
rorl
xor
jl
fisubl
fsts
jae
add
and
cli
dec
lret
fdivrl
clc
jecxz
lret
sub
sbb
xor
shl
adc
adc
add
andb
lret
pop
arpl
popl
imul
test
dec
stos
add
inc
sub
aam
cvttps2pi
fbld
std
dec
xchg
jl
push
ret
jbe
jmp
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
push
shll
jle
mov
jle
pushl
xchg
mov
testl
in
scas
fs
repz
divb
push
lds
jno
outsb
das
int3
addr16
mov
push
xchg
pop
pushf
ss
stos
or
call
fildll
mov
adc
or
aam
jmp
inc
fnstsw
ret
xchg
or
roll
lret
insb
sbb
inc
mov
out
xchg
outsb
pop
out
xchg
add
and
inc
adc
mov
mov
cmpl
stos
in
pop
movsb
outsb
mov
inc
rcrl
push
push
test
shll
and
fildll
cmovae
cmpsb
icebp
mov
or
cmp
popf
cmp
or
jp
fsubr
fcoms
movsb
jae
sub
int
cmp
cmp
jmp
jge
jne
pop
jbe
inc
in
sarb
pop
xlat
gs
mov
ret
shlb
dec
jne
sbb
sbb
addb
aaa
movb
call
inc
add
and
pop
push
jecxz
jg
xchg
add
push
loopne
sahf
nop
xchg
daa
jns
dec
jge
ljmp
add
rcrb
jno
add
cmpsb
dec
inc
outsb
ds
loopne
mov
push
sub
adcb
ljmp
test
in
fsubrl
sub
jno
push
xchg
sub
pop
xchg
jne
outsb
popf
mov
mov
mov
jg
cltd
sub
roll
add
add
add
add
cmp
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
push
insl
mov
mov
jle
bound
daa
shrb
pop
mov
fldenv
movsl
in
aad
add
or
pop
xchg
cmp
ret
roll
sbb
leave
dec
in
cmpsl
orl
addb
xor
add
cmp
xchg
sbb
insl
jo
jbe
gs
jge
sbb
pop
mov
mov
pop
addr16
jl
popf
ret
cmp
inc
sar
sub
xor
imul
pop
pop
arpl
addr16
movsl
bound
out
sub
gs
dec
pop
sbb
cltd
xchg
loope
cmpsb
xchg
cmc
js
lcall
xchg
movsl
jns
jae
lahf
out
xchg
daa
ret
roll
mov
fiadds
pop
test
mov
mov
add
dec
inc
test
add
dec
or
lcall
aaa
cmp
mov
stos
cmp
int3
lds
mov
jae
fwait
adcb
lahf
and
dec
add
cwtl
std
int
lret
dec
mov
mov
cmc
mov
cmp
xchg
rcll
out
dec
jg
in
adc
cs
loopne
lds
cwtl
sahf
mov
inc
xor
mov
aas
mov
cmc
loope
in
les
shlb
pop
arpl
lds
and
inc
fstpl
setge
mov
jle
push
clc
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
fiadds
mov
jle
in
lret
movsb
jo
sbb
adc
sub
loop
adc
jle
pop
orb
pop
adc
pop
inc
inc
sub
xor
add
push
mov
popf
inc
into
mov
add
and
add
aad
data16
jle,pt
sub
movsb
inc
cmp
adc
fstpt
dec
xchg
das
popf
mov
and
xchg
pop
cmp
imul
xchg
outsb
lcall
xor
adc
adc
pop
popf
rcr
je
iret
xor
inc
xchg
loope
leave
add
movl
je
int3
cmp
into
cmpsl
cmpsb
mov
mov
insb
cltd
jmp
xor
test
icebp
or
jbe
dec
dec
fdivrs
pop
pop
test
aaa
shlb
es
jns
push
ja
cmp
adc
mov
and
xchg
ja
sbb
jl
add
lret
add
mov
fistpll
fbstp
mov
gs
sti
call
negl
int
push
cmp
add
mov
and
xchg
push
imul
test
lea
jmp
and
and
hlt
xchg
mov
cmp
movsb
call
and
pop
fwait
dec
mov
ret
jno
sbb
inc
insb
das
cs
shr
in
pusha
cwtl
stc
push
mov
and
je
stc
je
inc
pop
lcall
fsubrp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
sbb
jle
jg
jle
orb
mov
adc
es
mov
mov
lret
cltd
sub
dec
daa
cmpsb
shl
mov
push
pop
lahf
iret
fstpl
out
rorb
insl
inc
fcompl
mov
gs
rcll
jg
in
adc
ja
ret
rolb
xchg
xchg
lods
inc
xor
and
push
rcrb
insb
add
rorb
pop
pop
mov
dec
jmp
div
out
movb
mov
fadds
adc
cmpsl
sahf
mov
xchg
cmp
ja
test
jle
int
pop
jbe
sbb
testl
fadd
cmp
jnp
xlat
sub
cmpsl
cld
mov
xor
test
xlat
lds
mov
sub
out
jecxz
jns
add
adc
sbb
sub
or
shrb
test
lcall
imul
mov
xchg
jg
cwtl
fmuls
subb
xor
ljmp
shlb
repz
inc
aam
mov
cmpsl
dec
fildl
rcrb
dec
adc
cmp
scas
fstps
lods
into
out
iret
shl
jp
sub
dec
mov
dec
in
insb
out
mov
cld
mov
mov
xor
repz
adc
movsb
add
lret
jno
int3
mov
mov
xor
loope
and
sbb
pop
jne
and
xor
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
xchg
inc
xor
jg
jle
adc
sub
leave
sbb
jmp
push
dec
push
mov
mov
jb
pop
ret
dec
add
fidivs
and
js
mov
dec
lret
adc
and
popa
sbb
pop
cld
sbb
adc
subb
jns
movsb
jg
mulb
sub
out
sbb
adc
jge
ror
lods
or
sbb
xchg
jmp
sub
sub
call
jle
out
and
push
cwtl
mov
add
es
mov
in
jae
jnp
shrb
mov
add
lret
sub
movsl
in
shlb
loope
mov
ss
out
test
or
lods
or
test
enter
lcall
in
insb
xchg
outsb
sub
bound
mov
shlb
mov
dec
popf
add
adc
insl
in
mov
iret
or
sbb
inc
or
call
push
lock
addb
icebp
leave
inc
cs
icebp
lahf
mov
pop
xor
sub
mov
inc
add
adc
repnz
sti
cli
jg
ljmp
daa
mov
test
push
cmpsl
unpckhps
int3
sbb
std
push
xor
lock
add
dec
jo
adc
test
ficomps
testb
jmp
add
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
jbe
mov
jle
jg
jle
and
pop
nop
in
andb
cld
hlt
jae
xchg
add
ret
jge
das
add
lahf
cmc
je
sti
cld
cld
dec
int3
adc
je
js
xchg
fsubrl
xchg
xchg
dec
fimull
xor
xchg
arpl
or
fs
adc
dec
sub
inc
mov
das
iret
jge
fsubs
aad
adc
sahf
fnstcw
gs
movsb
leave
or
cmp
imul
fdivl
cmpsb
lahf
inc
pop
cli
dec
mov
ret
mov
and
in
cmp
pop
inc
lea
scas
xor
cmp
leave
loope
jle
rcll
fidivrs
fs
xchg
add
popl
mov
arpl
popf
hlt
adc
mov
stos
push
mov
sbb
sbb
out
cld
xor
xchg
inc
rorl
outsb
push
jns
dec
call
or
adc
notl
inc
dec
pop
testb
lea
mov
push
cmp
rolb
push
ret
or
xorl
jl
sub
shll
push
shlb
hlt
pop
movsl
inc
inc
and
in
push
gs
or
test
xchg
jle
and
outsb
aad
insb
mov
rorl
or
ljmp
lods
sbb
faddl
sbb
fstps
mov
pop
mov
sbb
xlat
nop
push
negb
xchg
shll
out
es
sbbb
jne
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
call
pop
jp
ffree
jle
mov
jle
mov
cmpsb
fcmovu
dec
and
data16
jle
mov
push
mulps
hlt
jg
fnsave
nop
mov
inc
xchg
adc
cvtpi2ps
sbb
mov
imul
popf
dec
xchg
adc
pop
mov
jge
inc
jns
push
sub
cmc
sarl
dec
aaa
ret
in
insb
jnp
or
and
add
add
rcrl
xor
movsl
das
mov
xor
pop
cwtl
or
scas
or
jmp
fsubrl
push
mov
mov
push
mov
adcb
daa
decl
or
es
jno
mov
xchg
sub
push
push
dec
pop
ds
mov
popf
sti
imul
nop
int3
lds
jl
push
iret
fildl
adc
popa
inc
gs
or
in
xor
fnstcw
sahf
stc
pop
insb
dec
addr16
adc
loop
mov
addr16
jl
daa
sub
push
sbb
mov
push
jb
lcall
cli
add
je
inc
aad
mov
mov
cmp
add
addl
sub
int
inc
lret
aaa
push
xchg
xor
jp
mov
push
mov
pushf
rcr
lods
shll
jmp
cmp
dec
mov
inc
xchg
and
xor
call
in
xchg
clc
adc
and
popf
xchg
sub
mov
fildl
push
lret
inc
je
pop
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
pop
imul
jle
adc
stc
sub
cmp
mov
fldl
loopne
push
jmp
jb
push
mov
ret
test
push
push
and
adcb
sub
fstps
rorb
push
push
iret
xchg
pop
int3
out
mov
mov
mov
xchg
cltd
inc
sbb
jns
mov
cmp
cli
lret
and
pop
and
divl
out
adc
cmp
inc
movsb
outsb
xor
jmp
fbld
sub
push
xchg
movsl
pop
jmp
inc
dec
inc
insb
js
shll
ds
int3
mov
pop
ret
push
sbb
fcoms
adc
xor
icebp
inc
adc
inc
fisttps
ret
inc
jnp
les
test
hlt
push
pop
and
adc
add
lahf
js
fbstp
mov
mov
and
aaa
js
call
xchg
aas
cmpsl
pop
popf
gs
lock
inc
mov
insl
cli
dec
mov
pop
jl
js
into
scas
aam
les
mov
mov
xlat
cld
mov
aam
sbb
dec
stc
mov
sub
pusha
sbb
jge
rolb
lcall
int3
ss
push
mov
jecxz
test
gs
mov
jp
imul
iret
pop
lock
mov
call
xchg
shlb
push
lods
fidivl
push
inc
sti
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
pop
xchg
inc
mov
orb
push
fldcw
icebp
push
xchg
ret
push
sbb
stos
aad
jmp
gs
ljmp
cld
mov
cld
jmp
pusha
cmpsl
dec
not
push
test
and
sub
out
imul
lea
xchg
push
je
cmp
popa
popa
or
mov
cmp
ljmp
rcrb
xchg
pop
out
popf
sbb
pop
addr16
adc
pop
mov
fs
cmp
jns
pop
in
mov
in
shlb
xchg
sub
ss
mov
mov
jns
fsubs
and
ja
push
sub
movsl
add
pop
imul
int
out
pop
mov
test
dec
mov
fimull
out
adc
ror
push
adcb
test
lods
adc
mov
xchg
sbb
add
push
lahf
repz
dec
xchg
cs
ret
in
mov
and
mov
arpl
xchg
dec
sub
fdivp
icebp
in
mov
into
sbb
jg
dec
jg
xchg
fmuls
fnsave
mov
jnp
aad
push
mov
ret
adc
xor
mov
rorl
inc
jge
cmp
adc
mov
mov
repnz
and
lret
int3
xchg
je
mov
xor
jg
push
ja
jns
push
out
sbb
out
and
add
add
or
add
cld
xor
xor
jmp
in
test
call
subb
adc
jle
mov
jle
mov
push
sub
xor
xlat
addr16
jae
and
jp
cmpsb
cltd
pop
xchg
jmp
sbb
loope
sahf
cmpsl
movsb
push
testl
jo
push
fisubrl
repz
test
mov
ds
insl
dec
lds
and
dec
xchg
das
fnstsw
sahf
rcll
addr16
xchg
lea
add
push
mov
gs
cmp
push
idivb
ret
lahf
outsl
push
push
hlt
mov
dec
outsl
fwait
hlt
bound
scas
inc
sbb
imul
lods
std
ret
and
movsl
testb
mov
out
mov
xor
sbb
jnp
xchg
push
outsb
sub
jno
les
xchg
mov
sarl
jp
dec
cmp
cld
pop
call
lcall
lahf
leave
add
push
aas
aam
adc
stc
add
inc
fucomi
mov
popa
lods
fbstp
filds
push
ret
xor
xlat
popa
test
dec
mull
test
loope
sub
mov
nop
cmpsl
mov
nop
adc
fists
push
push
cs
adc
jo
ficomps
sbb
push
mov
mov
fmull
and
xchg
sbb
jle
jmp
jno
test
fdivrl
push
adc
cmp
adc
rcrb
shrl
cmpsb
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
gs
cmp
jg
jle
mov
fldl
jge
and
push
xlat
loope
pushl
xchg
mov
xor
mov
and
adc
pop
pop
sbb
mov
loop
mov
adc
std
jne
imul
lock
icebp
add
mov
add
rcr
mov
push
add
ljmp
roll
xor
in
mov
mov
sbb
sarl
sub
mov
sbb
mov
sub
cwtl
pop
je
xchg
adcb
sbbb
pusha
xor
iret
mov
imul
mov
cmpsb
add
movsb
popf
push
pop
push
call
push
jp
div
jo
cli
push
jns
mov
jno
push
xchg
pop
cmp
out
mov
mov
jle
imul
fnstcw
inc
xchg
mov
jns
jo
and
cld
popa
adc
aad
cld
xlat
fisubrl
mov
mov
rcr
xchg
test
cld
and
nop
pop
sub
cli
iret
aam
jl
popf
sub
or
sbb
sub
jge
test
push
mov
orb
push
adc
lahf
in
repz
cltd
add
arpl
sbb
mov
cmp
adc
cmc
repz
lock
in
mov
or
scas
cmpb
push
dec
xor
mov
sbb
push
add
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
loope
leave
js
add
jl
xchg
pop
mov
movsb
sub
and
xchg
addr16
adc
xchg
sbb
mov
cld
fadds
xchg
adc
pop
movsl
cmpsb
dec
loopne
addr16
pop
push
sub
aas
cli
nop
or
mov
mov
jl
cld
add
cmp
xor
mov
lahf
in
cld
add
bound
dec
and
ret
in
lcall
cmc
jl
sbb
pusha
testl
rcrb
cmp
and
or
cmp
mov
sti
mov
sbb
roll
lea
and
and
addr16
add
jmp
mov
xlat
out
mov
add
and
lock
cmp
mov
lcall
mov
loope
inc
popf
pop
lods
loope
outsl
notb
cwtl
push
mov
stos
push
xchg
or
jbe
ljmp
adc
sbb
test
or
xor
std
out
mov
sub
mov
push
cmp
cld
dec
mov
add
sub
int
cmpl
test
les
shrl
sbb
xchg
cmp
inc
out
or
ds
sub
push
mov
adc
cmc
add
push
sub
and
imul
mov
mov
sub
jmp
and
xor
sbb
cwtl
push
leave
jle
mov
jle
mov
and
xor
cmpsb
and
cmp
pop
fdivrs
xor
or
mov
xchg
xor
cmc
xor
push
jle
std
mov
xor
xor
push
or
xchg
cld
inc
pop
ficompl
out
std
and
mov
mov
daa
xor
or
fs
or
js
cwtl
mov
ja
jle
or
adc
push
push
adc
je
addr16
cmc
aad
xchg
xchg
inc
lds
push
sahf
jp
orb
inc
in
mov
xor
jo
cld
xor
pop
push
mov
or
lret
pusha
in
fdivl
daa
fimuls
xchg
add
mov
ss
mov
xchg
inc
enter
iret
dec
adc
mov
or
inc
pop
mov
insl
negl
popl
insl
loope
xchg
adc
imul
ja
adc
jle
dec
jae
push
mov
pop
icebp
push
lea
fstps
sbb
cwtl
adc
xlat
jb
xchg
insl
xor
adc
mov
lock
fimuls
dec
push
lds
fucompp
subl
sub
jae
push
adc
cmp
adc
test
push
jmp
lods
dec
imul
xchg
nop
add
fs
xor
mov
push
not
xchg
sbb
ss
mov
aaa
test
clc
shll
ljmp
aad
icebp
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
lret
or
xlat
jle
mov
jle
cld
out
push
and
inc
stos
nop
add
sarl
mov
fcoms
out
lcall
call
xor
xchg
mov
out
jle
out
mov
dec
cmp
mov
and
sub
dec
imul
popf
pop
inc
adc
mov
xchg
sub
dec
mov
stos
sbb
inc
arpl
jge
lcall
mov
data16
xor
jns
cmp
bound
cmc
lock
or
lcall
or
cmpsb
push
data16
xchg
in
adc
lock
xchg
out
xchg
inc
mov
aad
xlat
push
sti
out
je
jbe
mov
cmpsl
jnp
dec
call
gs
add
and
xchg
push
pop
ror
dec
popf
mov
shrb
test
outsl
sub
sub
lock
xor
mov
mov
push
xor
inc
xor
ficompl
rcrb
jno
inc
ljmp
scas
insb
test
dec
sub
jae
je
xchg
mov
mov
cltd
push
enter
stc
xor
pop
xchg
add
sbb
pop
repz
xor
movsl
inc
sub
add
std
mov
adc
in
jmp
arpl
mov
out
mov
test
loop
push
ljmp
aam
incb
push
mov
inc
pop
lahf
ds
sahf
lds
fimull
add
add
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
out
xchg
push
jge
jle
mov
jle
mov
mov
cwtl
out
js
dec
push
andb
in
mov
dec
fisubl
adc
testl
repz
adc
lods
sarl
sub
data16
mov
jg
test
cmp
xor
js
push
fsubl
jmp
xor
ljmp
inc
ud1
mov
push
pushf
cmp
insl
addb
std
push
jo
test
mov
cmp
outsl
fstpt
xchg
sub
arpl
inc
jp
in
pop
test
inc
add
sub
pop
mov
pushf
jge
bound
and
mov
das
jmp
xor
xchg
push
repz
sub
pusha
mov
push
mov
sub
in
lods
adc
pushf
imul
inc
push
push
scas
mov
pusha
dec
cmp
sbb
stos
rcrb
movsb
cs
add
cwtl
sub
outsl
rcrb
pop
ja
xor
adc
clc
out
xchg
dec
add
sbb
loopne
and
mov
xchg
pushf
call
std
xor
push
ljmp
push
out
ljmp
iret
push
inc
add
adc
or
clc
add
mov
push
jbe
test
sbb
arpl
lcall
push
push
pop
dec
cpuid
incb
push
and
cmp
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
cmp
testb
jle
push
movsl
call
pop
test
adc
les
test
mov
push
movsl
gs
push
pusha
sub
sarl
sub
popl
mov
xor
pop
ss
loope
mov
xchg
dec
lret
xor
test
mov
mov
cmp
imulb
sbb
xchg
and
stc
jbe
add
enter
sub
or
rol
hlt
loop
mov
push
std
sahf
loope
aaa
jmp
mov
shrl
cmp
or
sbb
lods
in
push
sub
mov
mov
cs
jo
cwtl
xchg
jg
push
xorl
out
stc
jns
test
ret
mov
mov
in
clc
xchg
pushf
icebp
mov
push
popf
call
jg
lds
incl
mov
push
push
in
inc
mov
or
cmpsl
or
loope
in
push
push
push
add
dec
in
fidivrs
adc
sub
test
not
nop
call
mov
push
dec
xor
push
ds
inc
jb
mov
pop
pop
dec
push
popf
ret
mov
es
popa
sahf
ljmp
xor
xchg
fstpl
xchg
pop
push
xor
push
jmp
push
repz
sbb
scas
adc
testb
jne
push
cmp
stc
mov
fwait
lahf
sbbb
mov
push
jbe
jp
xor
xor
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
jge
pop
mov
mov
jle
in
mov
mov
test
lea
fucomip
stc
sbb
ljmp
pop
lcall
loop
jge
add
repz
jb
xchg
in
stc
mov
push
nop
and
fisubrl
outsb
pop
jnp
pop
loopne
xor
mov
movsb
pop
scas
mov
fldl
sub
jb
pushf
ffree
shrl
enter
out
dec
mov
stos
inc
xchg
dec
sti
into
jle
push
cmp
lahf
aaa
mov
and
mov
pop
and
hlt
pusha
jg
inc
cmp
xor
adc
ret
mov
cltd
cmpsl
cltd
lret
cwtl
js
mov
or
inc
inc
pop
inc
cmpsb
sbb
lds
call
cmp
les
cld
fs
adc
adc
add
fneni(8087
cmp
add
outsb
data16
add
jge
or
or
xchg
fcomps
dec
cmp
lods
bound
les
lods
sbb
lds
mov
insb
push
fstp
push
cmp
jp
in
pop
cmp
push
adc
and
pop
pusha
add
mov
imul
enter
dec
push
bound
lret
stos
out
into
mov
or
scas
xor
rorb
or
sub
inc
scas
and
or
jns
and
xchg
cmp
mov
add
lods
sub
imul
lods
popf
stos
add
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
data16
jle
jg
jle
popa
cmpsl
dec
jle
or
nop
push
das
xchg
sub
cmp
add
sub
dec
inc
out
stos
pop
xor
add
test
test
sti
jbe
sub
pushf
hlt
push
popf
jle
test
lods
mov
imul
inc
rorb
loop
sub
cli
mov
sbbb
fbld
cs
adc
mov
out
add
sub
pop
xor
hlt
data16
cmpb
jns
dec
test
imul
sub
decl
ss
cltd
ds
cmp
jle
or
cmp
sub
test
xchg
sbb
push
sbb
adc
cmp
mov
outsl
jb
jb
push
sti
mov
dec
leave
lret
cmpsl
icebp
xor
xorb
fdivs
sub
mov
inc
jl
pop
xchg
imul
jne
push
xlat
mov
shl
cwtl
pop
fucom
clc
jno
roll
jnp
insb
xor
imul
cmp
cmpb
scas
dec
movsl
dec
clc
subl
into
mov
out
cmpsl
ret
push
jns
arpl
test
cwtl
xor
movsl
fisttps
dec
addr16
mov
insl
and
lods
cld
mov
mov
push
and
jbe
loop
fwait
dec
daa
stos
movsb
ret
xchg
jae
inc
jns
or
mov
lret
mov
movsb
lock
loop
xchg
push
mov
push
mov
dec
icebp
test
aas
movsl
fisubrs
or
mov
xor
jmp
or
addr16
jne
mov
mov
jnp
das
pushf
int
jle
mov
jle
xchg
cmp
and
icebp
in
jns
sarb
sub
cmp
jp
inc
pusha
mov
or
mov
rcrl
popw
xorl
dec
and
jae
shr
pop
cmp
shlb
sub
and
push
int
push
enter
push
ja
xchg
cmp
in
lahf
inc
push
inc
mov
lock
test
push
popa
xchg
es
out
jno
cmp
stos
rcr
sbb
sub
outsl
cmp
repz
mov
cmpsb
push
cmp
pop
xlat
test
xchg
in
push
out
pop
lret
jnp
sbb
int
fadd
test
je
or
jge
fbld
fadds
shlb
and
cmp
icebp
mov
pop
aaa
iret
cmpsl
dec
mov
xor
cs
loope
into
aad
pop
fmull
insl
js
ds
add
stos
mov
mov
mov
fmulp
xor
int3
mov
je
or
movzwl
int3
es
push
cmpsb
jo
push
inc
mov
test
test
xchg
mov
decb
pop
push
fldt
rcrb
mov
mov
or
xrelease
daa
loope
pop
mov
jmp
dec
push
inc
negl
es
stos
rorl
sbb
je
cmpsb
je
std
and
vcvtsd2ss
test
pop
adcl
shrb
mov
jg
sbb
sti
cli
xchg
mov
lea
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
dec
rorl
xchg
pop
fdivrl
jge,pn
jle
push
sub
dec
mov
sbb
mov
mov
je
inc
inc
cmp
aad
adc
sbb
mov
scas
es
and
inc
popf
adc
fs
dec
add
push
xor
push
xor
mov
test
aam
jmp
in
nop
sbb
mov
sbb
adc
xchg
fsub
cmpsl
dec
push
call
pmaxsw
cmp
addr16
fcompl
out
xchg
inc
xchg
xor
adc
cmp
repz
repz
test
repnz
fdivrl
mov
jb
or
mov
scas
imul
jno
push
lret
xchg
jne
cmc
or
xor
sbb
mov
xchg
pop
cwtl
not
ljmp
jae
dec
sub
pusha
xchg
hlt
jle
dec
mov
mov
and
mov
lods
into
std
xor
push
pop
cmp
jmp
sub
mov
sub
movsb
andl
sub
adc
fstpl
sbb
xlat
gs
pop
add
outsb
test
dec
add
in
test
outsl
fisttpll
idiv
adc
push
mov
push
idivl
jbe
xor
mov
or
scas
adc
push
pop
stos
xchg
xchg
sbb
add
sbb
mov
subl
andl
xchg
lcall
mov
roll
sarl
inc
sbb
push
xor
xchg
not
xchg
adc
xchg
and
dec
jg
rcrl
shl
push
jnp
mov
push
loopne
sbb
inc
pop
dec
out
jne
test
imul
sub
cmp
fidivl
popf
jp
inc
or
sbb
xlat
add
xor
dec
mov
ficomps
stc
or
push
jle
jno
adcl
jb
xor
jg
cld
push
push
idiv
aaa
cmp
test
loope
stos
jmp
cltd
adc
scas
jno
jo
xchg
clc
sub
out
dec
pop
loopne
cmp
push
hlt
ret
push
lcall
push
mov
ret
scas
mov
or
ja
dec
es
xor
mov
push
sub
cltd
std
dec
sbb
and
and
lods
or
mov
sub
out
add
jnp
scas
mov
xlat
dec
outsl
stc
icebp
xor
int
mov
mov
push
push
mov
lea
cltd
push
stc
outsb
dec
push
mov
mov
adc
mov
dec
sub
cmp
mov
pushf
adc
jmp
cld
popf
rcr
test
int3
sub
js
jne
xor
popf
pop
sub
push
pop
jge
inc
sbb
imul
push
imull
inc
out
orl
mov
mov
dec
imulb
mov
xchg
push
xchg
add
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
push
jbe
or
jle
jge,pn
jle
push
jl
clc
push
out
addr16
out
sahf
fistl
cmp
sbb
jb
mov
xchg
test
decb
fisttps
sub
cmp
adc
cs
mov
cmpsb
and
ja
mov
gs
jle
inc
sahf
jmp
movsl
pop
and
mov
and
mov
in
fcomps
jbe
inc
fisttpl
push
sub
insl
imulb
sbb
mov
dec
ret
xchg
and
int3
cmp
cmp
mov
and
lock
cltd
je
or
xchg
push
mov
or
mov
gs
rol
inc
fildl
out
add
cmp
neg
stos
xchg
outsb
js
mov
hlt
jge
pop
mov
and
inc
movsl
sti
mov
clc
repz
clc
xor
sub
sbb
shrl
sbb
nop
lahf
je
xchg
mov
enter
int3
lret
std
leave
xchg
cmp
stos
fst
pop
push
adc
ljmp
cmp
push
testl
mov
cmp
xchg
inc
push
clc
or
ja
mov
fdiv
add
push
gs
jg
xchg
pusha
cmp
inc
orl
insl
jbe
xor
jl
inc
cmp
pusha
or
lret
pop
push
xor
imul
push
cmpl
movsb
rcl
bound
dec
cmp
fisubrl
outsb
mov
pop
xor
push
mov
leave
pop
daa
int
mov
pop
movsb
lods
rcl
shll
mov
xchg
out
and
test
sarb
push
ja
inc
mov
or
xchg
nop
icebp
mov
clc
mov
jo
adc
stos
jmp
xlat
sub
mov
add
or
sub
mov
mov
test
js
pop
and
js
mov
out
push
cmp
lock
int
sbb
fistl
aad
sahf
cltd
movsb
inc
cmpsl
js
or
cmp
or
adc
in
icebp
adc
and
mov
push
dec
adc
mov
lret
cli
xor
std
repnz
int
test
ss
jno
mov
push
outsl
dec
pop
out
pop
sbb
inc
xchg
lods
dec
cmp
adc
stos
mov
cmp
cmp
idiv
ficoms
test
out
ss
pop
insb
dec
or
imul
pop
fstpl
adc
or
rcrb
pop
lods
pushf
imul
adc
mov
xor
fstps
nop
jecxz
stc
mov
pop
bound
shrl
iret
adc
sbb
cs
aas
jmp
mov
lret
mov
adc
inc
mov
inc
jg
cmp
push
push
rcr
pop
jo
jmp
fwait
cmp
rorl
xchg
icebp
cwtl
cli
cmpsb
pop
dec
stc
imul
test
xor
jmp
push
or
int3
popa
hlt
jno
jae
and
das
adc
jle
jge
jle
imul
int3
xchg
mov
dec
int
dec
sub
lahf
call
dec
fnstenv
lods
addb
lret
adc
adc
loop
cli
mov
add
xchg
mov
jno
xor
testb
add
jmp
sub
stos
into
xchg
mov
outsl
out
push
sub
jle
mov
add
cvttps2pi
dec
mov
jecxz
ret
xor
sub
sahf
dec
mov
xor
and
push
mov
enter
test
out
xor
out
sbb
jge
push
out
jge
fs
sbb
decl
mov
incl
cmp
idivb
popa
jmp
pusha
popa
sub
jmp
incb
push
call
lret
dec
iret
xor
cli
cwtl
loopne
ds
mov
adc
pop
ret
pushf
fldl
shlb
aas
cmp
orl
rolb
mov
dec
cmp
jecxz
push
mov
or
adc
cmp
in
sahf
sbb
les
sbb
cmp
jge
xchg
or
xchg
sbb
dec
test
cmpl
js
or
shl
or
data16
xor
inc
cmp
fwait
nop
leave
cmpsb
sub
out
pop
fwait
cmc
dec
outsb
ret
lret
cs
in
js
mov
arpl
and
pop
sub
jl
pusha
rorl
scas
mov
inc
scas
xchg
xor
push
jmp
ljmp
popf
movsb
cmpl
out
push
cmpb
jp
inc
xlat
mov
inc
lods
ja
jle
sub
out
movsl
xchg
xchg
add
mov
sbb
dec
cmp
lods
mov
xchg
daa
mov
js
je
or
outsb
push
inc
cmpsb
dec
out
adc
xchg
cmp
int3
push
push
int
inc
sti
push
jge
cmp
xlat
adc
rorb
jecxz
pop
adcb
ret
ret
jmp
fldl
loope
aas
fmuls
aam
and
jne
sub
hlt
daa
adc
mov
shl
mov
mov
jne
push
insb
push
dec
xchg
orb
je
mov
mov
inc
sub
in
insb
mov
aad
not
cmpsb
or
out
or
pusha
fistps
pop
outsl
push
inc
push
es
mov
nop
and
ret
iret
inc
jl
xorps
push
mov
cmp
dec
lret
sbb
and
sub
cmp
call
push
jg
les
inc
mov
push
repz
and
lcall
inc
stos
sbb
arpl
movsl
pop
pusha
or
lcall
mov
push
aad
adc
add
aam
cli
ja
dec
popf
or
dec
jl
cwtl
int
adc
push
sbb
mov
and
dec
sahf
test
jb
push
and
pop
movsl
add
insb
scas
jb
pushf
jns
ss
cmp
cmp
pop
lods
mov
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
xor
sub
jle
jge,pn
jle
mov
jo
cmp
sub
jae
dec
lds
enter
xchg
stos
sahf
mov
pusha
mov
mov
jl
hlt
push
dec
test
push
fildl
cmp
cmp
push
mov
popf
adc
iret
les
bnd
add
movsl
add
mov
jo
icebp
fmulp
std
sub
pop
out
mov
xor
cmpsb
loopne
or
fs
inc
xchg
xor
mov
jb
fsts
aam
or
ret
pop
mov
push
out
mov
mov
arpl
adc
xchg
mov
cld
xor
mov
mov
sub
shrl
mov
shl
sub
cs
adc
jno
lods
add
rorl
jnp
sub
in
bound
mov
mov
dec
lcall
xor
js
in
add
cmp
inc
mov
jns
cmp
fadds
scas
ret
adc
aam
loop
pop
sbb
sbb
or
stos
repnz
fdivl
imul
adc
clc
xchg
iret
mov
out
cmc
ljmp
add
int
cmp
gs
outsl
movsb
sbb
js
fnsave
xor
pop
mov
mov
inc
cmp
bound
inc
jge
out
sbbl
or
pop
pop
dec
pop
stos
and
push
or
lret
iret
dec
mov
pop
lods
pop
and
xchg
outsl
gs
push
imul
mov
jnp
and
cmp
jns
daa
cmp
mov
mov
pop
jecxz
jns
jns
push
xchg
in
inc
sub
orl
pop
shll
les
mov
and
sarb
xor
mov
jl
pop
jecxz
pusha
xchg
xchg
mov
mov
loopne
mov
inc
push
jle,pt
test
inc
dec
add
fmuls
hlt
and
mov
mov
sub
lods
xor
add
ret
sub
lret
cmp
xor
cmpsl
cld
les
or
int3
xchg
sti
js
popa
mov
bnd
shlb
adcb
cs
iret
lock
jo
divl
push
cmp
sbb
out
lahf
jo
xchg
push
pop
mov
jecxz
test
jmp
ljmp
xlat
add
adc
stos
sub
sahf
cwtl
or
add
pop
xchg
cmp
mov
xchg
les
push
mov
and
je
pop
xchg
mov
inc
andb
add
fwait
push
or
and
pop
sbb
mov
xor
fiadds
out
arpl
fcmove
popf
add
jg
andb
and
mov
mov
into
divb
and
repnz
mov
dec
lock
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
adc
jge
jle
add
mov
sbb
push
adc
testl
jno
xorl
shr
mov
mov
pop
sbb
sub
dec
and
xchg
fstp
pop
cmp
inc
nop
mov
incb
sub
and
sti
add
enter
mov
lods
pop
sbb
repz
leave
add
lahf
xchg
ficomps
adc
jo
ret
test
clc
push
sqrtps
movsb
and
ret
pop
js
xchg
mov
int
lds
jecxz
sbb
dec
push
lret
inc
test
add
shl
ficompl
add
mov
mov
mov
mov
es
xlat
movsl
jmp
jmp
or
fldcw
or
mov
dec
in
push
and
jne
bound
sbb
mov
or
stos
scas
nop
mov
push
ret
call
or
mov
scas
int
pop
icebp
cld
int
fsubs
dec
iret
push
loope
mov
mov
enter
cmpsb
subb
inc
test
aam
jge
jbe
fwait
dec
xlat
lods
popf
subl
out
xchg
mov
jge
sti
pusha
cwtl
fcompl
cltd
mov
dec
je
ljmp
adc
enter
fidivl
fsubrl
rorl
pop
scas
loop
cltd
mov
lcall
mov
fldt
adc
adc
lcall
push
cmc
mov
jno
jbe
insl
add
aad
sbb
sbb
adc
ss
lods
into
and
inc
loopne
or
or
or
inc
mov
icebp
out
cltd
repz
cmp
scas
and
cmp
and
pusha
ljmp
loop
inc
push
jecxz
cli
cwtl
rcll
inc
mov
sub
push
fcoms
jnp
sub
icebp
push
and
and
repz
cmp
idivl
aas
jb
insb
adc
dec
dec
nop
hlt
jb
xchg
mov
dec
lods
mov
outsl
es
test
data16
add
mov
cmp
sbb
dec
push
ss
fidivs
outsl
js
lcall
mov
and
pop
cltd
fstps
fdivs
das
cmp
pop
rcr
cld
mov
adc
dec
push
xchg
sbb
add
ja
fs
daa
or
das
fsin
in
pop
mov
lods
jp
sub
insl
cmpsl
mov
sub
daa
nop
pushf
jb
test
cmpsl
mov
mov
adc
sarb
imul
xor
es
or
xor
jns
aaa
xor
psubq
sbb
and
scas
jp
test
gs
mov
sbb
jbe
inc
shlb
and
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
mov
sbb
jle
jge,pn
jle
mov
in
cmp
mov
cmpxchg
ljmp
jne
inc
cmp
rcl
pop
popa
into
cmp
fsubrl
insb
or
icebp
mov
int3
jl
dec
xchg
jns
sub
aaa
loopne
aas
cmp
adc
pop
xchg
cmp
repz
and
lret
sbb
jg
movsl
mov
mov
pop
push
jo
test
mov
xor
adc
repnz
push
sub
xchg
out
add
or
push
je
pop
add
gs
imul
ss
lahf
icebp
std
pop
xchg
lods
sub
scas
cmp
shl
sbb
push
repnz
xor
sbb
pushf
inc
sub
aaa
sbb
push
jg
out
inc
imul
out
loope
and
sub
enter
addr16
gs
inc
cmpsb
scas
out
cwtl
cltd
cmpsb
mov
adc
jp
jno
mov
bound
xchg
and
inc
mov
lds
xchg
out
cmc
insl
pop
popa
cwtl
pop
xorb
out
cmp
mov
pushf
inc
cmp
fistps
aas
mov
cltd
insb
jnp
sub
das
test
adc
sub
dec
mov
inc
xor
cmpsl
repnz
cmc
mov
xorb
cmp
xlat
jecxz
adc
mov
cmpsl
mov
data16
cmp
cld
pop
lods
mov
ss
fwait
adc
push
pop
lcall
inc
push
mov
incl
dec
cmpsb
mov
and
adc
pop
bound
push
and
in
and
jne
ret
pop
jp
dec
sti
mul
lret
mov
cmp
pusha
sub
sbb
jl
aam
push
clc
cmpsb
cwtl
sti
sti
out
lcall
ret
add
out
into
push
xlat
xlat
insl
mov
movsl
push
lods
dec
in
pop
xchg
and
dec
xor
jl
push
add
int
adc
shlb
cwtl
mov
cltd
cmpb
inc
in
outsb
mov
ret
loop
test
push
sbb
mov
xchg
mov
insb
jmp
mov
cmp
add
icebp
add
cmp
jg
movsl
xchg
outsb
out
adc
je
mov
test
call
push
outsl
sbb
mov
in
in
mulb
fcomp
fdivrl
xchg
imul
add
insb
dec
cs
or
lcall
mov
xchg
xor
insl
rol
push
aas
mov
xchg
jnp
push
nop
outsb
inc
jno
mov
ss
xor
clc
push
jne
mov
popa
enter
jb
add
pop
adc
pushf
test
pop
xor
out
mov
popa
push
ret
sbb
push
add
out
test
adc
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
jle
jge,pn
jle
fs
andl
push
cmpsl
insb
mov
pop
pop
pop
pand
mov
add
pop
xor
and
in
rolb
xorb
inc
dec
jg
and
mov
mov
lods
repz
and
xor
and
clc
sbb
push
add
cld
sbb
sbbl
inc
fwait
lea
mov
faddl
xor
enter
cmp
mov
xchg
xchg
mov
lods
xor
mov
repz
outsl
stos
lock
jg
mov
mov
push
push
stos
pusha
and
sub
das
movsl
and
pop
or
push
add
test
es
out
outsb
sarl
mov
mov
push
xchg
mulb
ss
or
out
or
mov
xor
loop
into
push
rcr
cmp
mov
mov
inc
adc
lea
mov
shll
jo
adc
jmp
sub
popa
jae
cltd
xchg
jmp
adc
push
xor
inc
sub
sub
xchg
iret
ret
shl
or
nop
fildll
adc
xor
pop
je
mov
push
push
addl
mov
pusha
in
shll
mov
sub
add
mov
fisubrl
cmovle
jnp
cmpsl
sarb
in
out
mov
and
push
and
pcmpeqw
push
clc
pop
jo
push
cmpsb
cmc
push
xor
xor
fildll
dec
out
cltd
ret
jl
sbb
sub
xchg
push
aad
in
add
movsb
andl
test
cmp
jb
ficoml
scas
bound
xor
jnp
or
test
lods
mov
aad
sbb
or
out
enter
pop
inc
mov
mov
cmpsb
mov
mov
cmp
push
aaa
jecxz
lret
sub
mov
loopne
mov
enter
lahf
add
in
popl
ficompl
imul
nop
push
adc
ljmp
popf
rolb
int3
dec
inc
psadbw
mov
jo
sbb
and
mov
or
pop
lea
push
cltd
and
dec
or
js
gs
prefetch
or
sub
inc
push
jle
lcall
les
aas
leave
aam
or
clc
cmpsl
mov
les
insb
xchg
rclb
push
in
add
xor
fstps
out
int3
movsl
jl
cs
jno
cmp
fcmovu
push
inc
jl
jmp
cmp
fidivrs
or
jmp
popf
dec
in
pop
int3
daa
pop
cld
int3
lahf
shrl
cmpsl
shl
xchg
add
push
adc
jbe
hlt
and
push
orl
adc
repnz
aas
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
push
mov
sbb
jge,pn
jle
push
mov
aaa
fldl
push
out
shll
jmp
push
push
dec
lcall
sti
or
sub
incl
mov
sbb
sub
test
or
push
sub
repnz
imul
sub
fcompl
fs
pop
sub
pop
dec
and
adc
and
push
test
or
fmul
mov
jnp
jmp
out
or
xor
push
test
sbbl
dec
inc
popf
sbb
aas
daa
icebp
int3
or
cld
leave
hlt
daa
push
inc
adc
fstps
push
lret
js
mov
mov
shlb
push
xchg
call
xchg
test
lea
adc
xchg
pop
cmp
dec
pop
sahf
pushf
pop
jle
fs
mov
mov
rep
fwait
mov
sub
ficomps
pop
sub
xor
out
xchg
push
xor
adc
cmp
fldl
sub
push
mov
or
ds
push
cltd
mov
jl
jmp
lock
mov
xchg
jnp
aaa
ja
aas
adc
int3
ss
mov
inc
scas
mov
and
xor
icebp
add
mov
lds
je
iret
pop
addl
cmp
cli
in
jbe
add
rorb
xchg
sub
out
jb
jge
and
test
ret
adc
cltd
dec
loope
mov
rclb
movsl
cmc
pusha
cmc
loope
sub
and
lods
jnp
jb
pop
in
xchg
out
and
stos
xor
test
jbe
stc
or
decb
pop
aam
call
std
mov
push
sub
clc
sub
pop
xorb
cmpsl
cmp
xor
les
or
movsl
jg
cltd
bound
roll
mov
dec
jb
pop
mov
or
loope
daa
add
sti
dec
pop
jmp
les
mov
hlt
rclb
hlt
adc
push
push
daa
pop
negb
fcompl
fcompl
add
jmp
push
dec
scas
int3
pop
subl
cli
or
jbe
xchg
sbb
and
and
or
push
popa
icebp
or
push
jge
push
mov
outsb
movsb
rorl
mov
mov
sbb
and
loope
idivb
cmp
and
adc
xor
cmpsb
or
popf
jl
inc
jnp
cli
dec
outsb
rcl
xor
pop
roll
push
out
mov
imul
xchg
aam
push
imul
mov
pop
dec
adc
xchg
mov
mov
scas
test
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
mov
neg
bnd
jge,pn
jle
aas
pop
nop
xchg
out
and
mov
cmp
dec
mov
or
jle
movsl
fmuls
xor
jnp
jmp
insb
mov
or
test
arpl
add
mov
jge
add
in
sub
jbe
pop
bswap
and
arpl
js
cmp
sti
es
sbbl
mov
stos
push
fidivs
das
sub
adc
push
in
dec
mov
bound
cli
jmp
clc
repz
shl
inc
aas
leave
or
pop
sbb
scas
mov
lcall
arpl
jmp
insl
inc
ror
sub
movsl
scas
sti
ret
imul
test
mov
inc
mov
shlb
cmp
out
xchg
mov
out
sbb
mov
jecxz
dec
adc
sub
sbb
pop
mov
mov
popf
pop
mov
pop
nop
cmc
pop
paddusb
xchg
mov
lods
jg
lret
insl
push
sbb
mov
loopne
ljmp
test
lods
jle
mov
jle
push
or
aaa
cld
dec
int3
iret
push
jb
pop
mov
mov
xchg
movsb
mov
repnz
xlat
scas
push
cltd
mov
adc
mov
repz
aad
lahf
sub
inc
cwtl
pushf
ja
out
pushf
jle
jl
dec
int
dec
test
push
enter
inc
adc
push
test
add
xchg
ja
scas
jg
movsb
or
out
push
push
sbb
in
ficoms
lret
ds
sub
add
enter
cmp
icebp
sahf
xor
data16
out
aaa
mov
ret
ret
cmpsl
outsb
push
xchg
mov
das
insb
xor
insl
xor
sub
pop
pop
xchg
imul
fs
mov
jmp
and
aad
cli
lret
jmp
and
sti
mov
inc
push
lea
or
lret
divl
jns
push
add
aas
jle
les
repz
push
pop
cmp
mov
iret
imul
in
mov
xor
pushf
mov
inc
cwtl
leave
or
mov
cmp
jge
mov
jnp
loopne
mov
xchg
sub
ret
cmc
jnp
xor
in
pop
or
scas
loopne
pop
je
mov
ret
add
mov
mov
inc
inc
int
dec
mov
jp
mov
adc
xchg
and
fstl
xchg
cltd
sub
in
mov
cwtl
jge
cmp
lahf
fldt
push
sbb
inc
or
cltd
push
in
inc
repnz
jne
cltd
pop
scas
test
fs
jb
inc
add
rcll
icebp
lock
inc
mov
inc
inc
sub
popa
mov
stos
or
movsl
call
push
out
fisubl
popf
into
or
push
xchg
repnz
xor
dec
dec
lret
lds
and
sbb
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
int
imul
jge
jle
faddl
sub
movsb
dec
fstl
push
cltd
lock
push
out
and
aaa
fisubl
adc
jle
das
add
mov
pop
mov
stc
inc
rcll
cmp
lea
jbe
ja
lods
fstps
divb
stc
pop
pushf
in
mov
lcall
cltd
jmp
dec
loope
and
inc
neg
mov
mov
test
add
pusha
pop
test
cld
lcall
and
push
jb
sbb
xchg
arpl
rolb
xor
shlb
push
mov
xchg
sub
insl
cli
in
imul
adc
outsl
pop
das
sbb
mov
pop
lods
in
pop
mov
ss
aas
sbb
in
dec
ficompl
adc
je
push
push
lods
push
sub
rorl
mov
fsub
dec
shrl
pop
push
cmpsl
das
das
ljmp
jmp
add
mov
jbe
xor
ljmp
int
test
sahf
cltd
xchg
test
xor
jbe
out
or
sub
adc
leave
or
mov
rcl
xchg
je
out
addb
inc
sbb
int
jo
cmp
pop
pushf
jge
cmp
les
imul
and
pushf
or
dec
fwait
test
push
aad
sub
sub
pop
cmp
das
and
aad
jo
aam
mov
mov
rcll
add
lods
cmp
fidivs
push
xchg
push
and
icebp
insb
inc
pop
add
int
gs
fdivs
xlat
loopne
data16
ds
arpl
pop
flds
and
push
ss
inc
mov
lea
pop
arpl
cli
into
mov
in
mov
push
clc
fucomi
out
aad
scas
jle
jnp
ljmp
lods
out
sub
xlat
test
arpl
dec
cmpsb
pusha
fisubrs
cli
sarb
js
mov
add
mov
lret
lds
pop
and
mov
sbb
mov
fbstp
cmp
in
lods
pop
stos
int3
sbbb
shlb
sbb
fdivrs
cmpsl
xchg
shrb
cmpsb
aaa
arpl
mov
mov
ret
movsl
sub
cmc
mov
lahf
jmp
adc
cmc
icebp
xor
push
xchg
sbb
sahf
rclb
fnstsw
xchg
ja
pop
cmp
or
cltd
jb
dec
sub
das
and
inc
dec
mov
idiv
xchg
xchg
pop
jp
push
or
sbb
fs
pop
inc
popa
xor
pop
add
insl
jbe
repnz
xchg
jl
sub
xchg
dec
stos
cli
roll
pusha
insl
jmp
fidivrl
sub
xor
in
ret
xor
adc
xchg
sub
xor
adc
mov
leave
push
push
add
movb
xor
jmp
pushl
outsl
jno
mov
repnz
fbld
cld
jle
jge,pn
jle
imul
add
adc
lcall
pop
sbb
dec
sbb
sub
fisubrs
decb
out
fistl
imul
fcoml
add
mov
mov
mov
xchg
pop
pop
adc
loopne
or
cmp
out
sbb
pop
or
pop
pop
and
enter
xorb
cmp
mov
repnz
add
rsm
hlt
loope
adc
subb
popa
cmpsl
test
loop
notb
jg
push
mov
or
repz
jns
aam
jnp
orb
xchg
dec
enter
pushl
scas
xor
mov
jo
mulb
or
sbb
and
adc
das
xchg
jl
ret
adc
mov
iret
mov
popf
xchg
call
addr16
aas
dec
fsubs
out
andl
cmp
push
mov
add
test
in
xor
mov
jo
xchg
cli
sbb
sub
cld
test
fisttpl
lods
aaa
sar
jg
xor
arpl
jp
xchg
iret
cwtl
lret
shl
or
mov
fdivs
adc
adc
or
cwtl
dec
adc
lods
movsl
popa
cmp
daa
xchg
xchg
sub
mov
popa
insb
xor
push
add
js
shlb
lret
sub
push
xor
pop
out
adc
decb
and
fstps
and
pop
adc
xchg
xchg
sub
outsb
clc
sbb
push
mov
ljmp
sub
aaa
xor
mov
jb
mov
in
mov
push
int3
enter
pop
mov
mov
sahf
inc
aad
jmp
dec
cmp
jbe
push
and
pop
inc
out
loopne
mov
mov
scas
in
xchg
das
mull
and
xchg
nop
jb
adc
aam
pop
es
movsl
fbstp
shr
dec
jge
sub
push
jl
rol
rep
pop
mov
shll
mov
and
popf
les
sub
mov
push
inc
aam
test
fistpl
inc
pop
push
push
hlt
lea
je
inc
cmp
fidivs
jno
test
iret
mov
lods
jmp
xchg
jg
or
mov
xor
xor
mull
push
ja
lock
mov
repnz
adc
and
mov
outsl
cs
and
in
mov
or
mov
ret
aam
addr16
test
cvttps2pi
mov
sahf
inc
sub
cmp
jno
scas
pop
std
test
mov
cmp
imul
cmp
clc
push
cmpsb
and
std
hlt
jnp
sbb
into
mov
shl
ret
lcall
lds
enter
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
mov
fsubrs
jle
jge,pn
jle
sbb
fstpt
es
es
lahf
and
scas
push
xchg
xor
xchg
decb
lret
in
push
pushf
jae
mov
sbb
mov
in
xlat
pop
or
shll
out
aas
push
insl
xbegin
jne
loop
arpl
adc
dec
cmp
add
daa
test
ss
gs
mov
jns
jge
pop
push
mov
out
jg
loope
xchg
fstpt
imul
pop
add
jns
stos
ds
cmp
cwtl
mov
test
cmpsl
sbb
ljmp
push
mov
popf
mov
or
pushf
fmull
and
pop
mov
gs
out
insb
shl
fiaddl
mov
lods
pusha
fadds
sub
daa
mov
push
adc
lahf
dec
int3
jo
stc
in
mov
xchg
dec
sbb
or
xchg
mov
pop
fadd
and
pushf
push
mov
add
sub
subb
addr16
xor
test
cmpsb
mov
sarl
sbb
cmpsl
cwtl
push
mov
xor
mov
fs
cwtl
adcb
getsec
mov
loop
rcr
inc
adc
xchg
cmpl
sub
jo
pop
loop
mov
popa
pop
sahf
or
rcrl
scas
jbe
ss
lock
fcomps
xchg
xchg
pop
test
ljmp
roll
adc
xchg
fisubrl
inc
dec
sahf
inc
clc
sub
cli
out
jns
and
xchg
xchg
test
jno
fdivs
adc
push
dec
imul
imul
push
sahf
adc
hlt
sub
jecxz
sbb
dec
fs
cmp
negb
mov
mov
cltd
adc
lea
push
sub
daa
pusha
ljmp
and
mov
or
icebp
jo
pop
addr16
jl
jb
push
sub
in
push
add
jp
xchg
mov
dec
fldl
imul
and
or
outsb
enter
mov
xlat
fbld
shlb
mov
push
push
loop
aas
ja
nop
cmpsl
lds
stos
int
mov
mov
cld
sub
xor
lcall
ficompl
shr
lret
clc
aas
adcl
in
loop
popf
push
orb
inc
pop
jmp
in
and
dec
pop
mov
out
jae
lds
mov
es
sti
dec
mov
jmp
mov
ja
mov
cmp
push
cmp
dec
xor
mov
adc
push
cltd
in
jg
out
and
jns
outsb
cmp
push
mov
jmp
mov
dec
inc
cmp
lea
shr
mov
incb
dec
ss
xor
sub
xor
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
jmp
jle
jge,pn
jle
jns
push
subl
xchg
loopne
xor
into
or
cmc
shlb
sub
mov
dec
leave
or
add
and
sbb
xor
test
pop
lret
cltd
out
sahf
in
or
sbb
in
xchg
or
ja
leave
mov
dec
lea
jns
cmpsl
push
mov
jns
test
leave
leave
jnp
mov
pop
push
xchg
shlb
jecxz
test
xchg
mov
or
adc
pop
xchg
lods
stc
inc
in
dec
ds
loope
inc
jne
mov
mov
sahf
lahf
stc
cmc
popa
push
data16
rorb
cmpsb
aas
mov
sbb
test
clc
scas
push
outsb
inc
mov
sbbb
cmp
test
xor
inc
pop
push
cli
xor
dec
into
imul
sub
and
dec
lods
jmp
js
fdivl
subb
push
push
xchg
stos
and
jge
push
xchg
ja
lea
lds
shll
ss
sub
lock
repz
mov
pop
rorb
jo
or
insb
data16
pusha
cmp
rcr
sub
into
push
daa
outsb
fs
pop
and
enter
cltd
outsb
stc
xchg
lods
les
shrb
lea
mulb
inc
scas
ret
jmp
iret
pop
mov
mov
rorl
xchg
cmp
or
and
sub
cmpsl
shl
xchg
lret
sub
xchg
jae
ror
inc
jno
cmp
and
enter
inc
fmul
cs
or
sub
or
andb
mov
leave
in
pop
lods
sbb
mov
fildll
data16
pop
jge
mov
sahf
dec
jecxz
pop
jl
decl
rclb
sbb
push
pop
cmp
mov
mov
cltd
adc
cld
push
xor
mov
lock
push
inc
pop
cltd
lret
aas
faddp
mov
xor
les
dec
insb
pop
sbb
cli
adc
nop
sar
rcrl
mov
mov
hlt
das
test
mov
lcall
stos
cs
mov
out
loop
pop
ret
rclb
jno
icebp
mov
in
lret
fstps
enter
out
pusha
jae
inc
and
inc
addr16
ss
outsb
adc
xchg
sub
shll
jne
jg
adc
hlt
pop
or
aad
out
inc
insl
inc
dec
in
pop
jns
xchg
je
loope
lret
and
adc
pusha
mov
push
ljmp
fidivl
fs
add
and
mov
lea
and
arpl
add
and
and
jp
fsubl
sbb
std
and
ja
cmp
in
xchg
xchg
das
mov
enter
mov
cmp
sbb
cmp
and
cmpsb
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
cltd
idiv
add
cmpb
jge
jle
xorb
mov
mov
jge
bound
sub
dec
mov
xchg
adc
lret
cmp
sbb
mov
adc
fnstenv
outsb
ror
pop
xchg
push
sti
out
test
mov
insl
gs
jp
lock
subl
popa
jns
xlat
xchg
ljmp
sbb
cmpsl
sahf
or
or
js
fiaddl
add
popf
push
mov
xorb
sahf
xor
test
and
in
ja
mov
dec
mov
negb
andl
adc
pop
lcall
jo
xor
and
leave
imul
js
shr
or
xor
xor
mov
dec
fdivp
sbb
enter
xorl
testl
cltd
mov
dec
sub
cmc
cmp
mov
outsb
sub
adc
mov
dec
inc
jg
mov
insl
dec
sbb
xchg
jbe
adc
inc
add
pusha
addr16
sub
mov
pop
dec
pushf
popa
push
test
std
shll
in
add
dec
pushf
adc
push
es
or
es
pop
add
popa
mov
outsl
push
dec
mov
out
fisttpll
sbb
rol
xchg
pop
jo
dec
and
add
cmp
rol
or
add
test
xor
mov
popa
sahf
popf
test
shlb
mov
out
push
xor
ret
cmp
pop
int
xor
xor
mov
xchg
jbe
xchg
xchg
mov
xor
lret
xor
push
ss
ret
call
gs
xchg
test
lret
insl
xchg
aaa
outsl
push
leave
jp
stos
js
repz
dec
jg
lea
cltd
mov
xchg
jle
adcb
sub
insl
xchg
shl
cmp
jb
sub
cld
or
outsb
lods
ss
mov
or
shr
mov
xor
and
int
outsl
inc
aam
das
int3
fcoms
or
out
add
jae
or
cld
int3
sti
pop
addr16
and
mov
stos
push
and
mov
out
fwait
xchg
shll
lods
sbb
enter
push
jl
stc
xchg
push
and
fadd
fs
rclb
inc
fprem
test
fxch
mov
mov
ds
push
loopne
jmp
xor
loope
std
mov
ds
push
add
shrl
bound
mov
mov
sahf
mov
fists
xchg
das
gs
inc
dec
and
fs
or
push
fisubl
mov
lds
gs
sub
fdivs
lret
xlat
ret
scas
icebp
jge
jle
fldl
push
test
xchg
xchg
pop
mov
mov
sub
sahf
rorb
xchg
ficoml
jno
xchg
inc
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
cmpl
in
and
divb
inc
rcrb
push
js
jne
arpl
jb
jmp
push
mov
pop
in
lods
jno
add
rolb
scas
cltd
mov
dec
xchg
inc
daa
aad
lods
idivl
cmp
outsb
and
pop
ror
pop
jl
xchg
inc
es
lock
sub
xchg
add
pop
ja
lock
call
xor
mov
orl
mov
xchg
mov
xor
lods
mov
ljmp
xchg
aaa
outsl
adc
mov
pop
dec
push
cmc
adc
fstpl
ljmp
pop
out
and
or
push
popa
pop
jg
inc
push
and
mov
mov
repnz
stc
jl
ja
sbb
lahf
lods
add
arpl
outsb
push
les
add
lds
rcr
xchg
and
cmp
cmpsb
sub
loop
stos
mov
popa
inc
arpl
xor
dec
arpl
xchg
and
or
xor
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
loop
mov
jg
jle
lock
jnp
add
xor
lahf
into
cmp
ds
push
dec
push
imul
lods
ret
fnstsw
add
mov
test
mov
stos
stos
pop
jae
mov
lock
sub
or
sahf
or
adc
rcrl
add
je
cli
fistpl
mov
sub
jle
xor
fs
cld
les
xchg
inc
fisttps
es
and
movsl
mov
sbb
inc
cmp
addr16
int
sub
notl
dec
jmp
inc
cmp
in
and
xlat
cmp
mov
jmp
or
ljmp
jnp
iret
lods
sahf
jmp
push
push
pop
push
aad
adc
iret
inc
mov
movsb
add
jecxz
aas
sbb
adc
adc
mov
mov
adcl
cmp
push
bound
and
inc
das
dec
pmulhuw
mov
addl
sbb
fnstcw
cltd
imull
stos
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
jmp
jle
and
jle
xchg
mov
negb
loop
in
and
scas
or
lods
gs
scas
jle
ror
das
int
and
xor
inc
add
xchg
cli
pop
jne
push
sbb
cmp
rolb
bound
mov
test
and
int
and
mov
and
add
fcompl
push
repz
movsl
cld
and
arpl
popa
nop
push
in
lret
lods
xor
adc
insb
sub
ret
push
addb
movsb
aam
xor
adc
mov
movsb
xor
sbb
add
pop
mov
xchg
ror
out
out
inc
add
sub
stos
dec
push
dec
adc
inc
or
cmp
sub
aas
dec
je
mov
inc
mov
xchg
ljmp
fcmovb
mov
cmpeqps
mov
dec
inc
add
or
sbb
testl
xlat
icebp
repnz
mov
repnz
outsl
push
mov
orl
push
data16
xchg
mov
adc
mov
inc
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
push
push
jle
fwait
inc
xchg
test
filds
sub
fwait
in
test
sub
loop
aad
cmpsl
push
fistl
xchg
ljmp
or
cwtl
dec
mov
pushf
xchg
lods
enter
ds
rcrl
lahf
pop
or
pop
ret
insb
ficoml
ss
cmp
push
aam
lcall
imul
mov
repz
cltd
movsl
stc
cmpsl
mov
push
dec
or
push
test
push
out
jp
es
stc
jmp
aad
and
pop
js
push
dec
in
pop
cmpsb
xlat
jbe
movsl
jmp
mov
fdivl
mov
inc
pop
adc
push
cmc
mov
shrb
inc
mov
pop
mov
popf
pop
or
sub
xchg
stos
dec
movsl
inc
nop
andl
pop
stos
movsbl
in
jb
mov
int
xchg
sahf
add
sahf
iret
daa
or
test
subb
push
lret
aad
pop
mov
nop
ficomps
or
pop
test
aad
xor
ja
call
jno
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
mov
mov
and
jle
pusha
or
mov
push
out
adc
idivb
mov
aad
loope
push
pop
ljmp
fisubs
add
ret
fadds
pusha
mov
cs
jmp
jae
pop
cmp
push
movsb
xor
sbb
rorb
inc
pop
sahf
lods
pop
lods
add
ret
jmp
lds
pop
cmp
pop
fidivrl
addb
outsb
ja
and
jecxz
pop
ljmp
je
mov
push
jnp
enter
jo
iret
fwait
ja
loop
dec
push
in
aas
scas
pop
jbe
fldt
mov
rorl
pop
dec
sub
dec
or
or
mov
out
cmpsl
bound
jo
daa
loopne
imul
clc
pop
in
out
je
mov
shll
xor
addr16
das
mov
mov
pop
ficompl
sbb
iret
in
pop
xchg
dec
imul
pop
in
mov
jae
pop
pop
stc
icebp
jp
cmp
push
jns
loope
adc
stc
pop
dec
leave
jl
cmc
jns
notl
mov
lret
jmp
mov
jo
mov
push
pop
push
scas
fisttpll
jle
xchg
mov
and
imul
repz
mov
es
add
pop
add
and
cmp
in
shll
std
cli
xchg
pop
dec
push
sbb
filds
and
shll
xchg
mov
bound
pop
push
sbb
pop
xor
test
movsb
gs
sbb
je
xchg
dec
outsl
mov
repnz
add
dec
dec
hlt
mov
ss
arpl
jp
aam
mov
sub
or
cmp
sbb
in
xor
fwait
in
in
pushf
push
hlt
aad
cmpsb
adc
ret
test
mov
push
lds
mov
test
cmpsb
ja
cmp
aas
mov
jecxz
pop
testb
dec
mov
xor
arpl
lds
popa
sbb
es
pop
sar
out
adc
addr16
insl
idivb
mov
daa
sahf
adcl
repnz
sarl
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
popf
ja
orl
mov
cltd
stc
loop
mov
imul
das
movsb
in
aad
insb
xor
dec
inc
xchg
ljmp
shll
nop
sub
cwtl
movsb
popa
fldcw
mov
insb
and
ret
js
jne
adc
insb
movsb
jnp
rolb
dec
lods
mov
in
movsb
sbb
mov
push
add
jg
hlt
adc
out
adc
or
sbb
outsb
push
jp
addr16
mov
cmpl
dec
aad
out
add
divb
add
mov
test
xchg
mov
rorb
ss
mov
test
pop
cltd
xor
mov
movsb
pushf
push
outsl
push
into
mov
jo
in
ficoml
repnz
fsub
lret
sbb
test
scas
jbe
mov
lret
sbb
cli
call
push
lret
loopne
mov
or
pop
xor
pop
fadds
repz
xchg
ljmp
push
nop
mov
js
jp
popf
loopne
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
out
mov
jle
and
jle
xchg
jmp
or
lahf
cmp
sub
or
jae
shlb
sbb
lock
pop
stc
push
inc
mov
call
xchg
jg
icebp
stos
cltd
js
stc
mov
movb
js
jg
jle
mov
sbb
aad
loope
in
dec
mov
ljmp
adc
xchg
or
cld
in
xchg
movsl
daa
push
jg
sub
iret
or
cli
movsb
inc
pop
lcall
pop
ficoms
dec
out
pushf
cmpl
jl
std
sti
mov
inc
or
iret
fmulp
pop
or
xor
or
mov
daa
xchg
fs
sub
xchg
jmp
push
frstor
cli
faddl
fwait
pop
sbb
scas
in
jb
aam
push
gs
and
jnp
jmp
cmp
xchg
push
or
lea
lock
and
xchg
mov
popa
stc
jae
cmpsb
xchg
fdivrs
mov
push
icebp
out
ret
movsb
inc
xor
cmc
fs
dec
push
cmp
test
jecxz
dec
xor
inc
or
adc
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
dec
pop
shlb
dec
out
aas
inc
push
out
mov
mov
sbb
inc
cmpsl
sbb
push
fwait
iret
cwtl
outsb
repnz
in
push
sar
clc
in
ljmp
leave
xor
push
mov
inc
cmp
lods
sub
and
inc
pop
ja
mov
outsb
test
adcb
pusha
mull
rcrl
flds
test
test
jne
sub
imulb
iret
sub
xchg
fs
aaa
add
or
push
and
push
jmp
insb
ljmp
mov
or
iret
cmp
mov
cltd
sbb
mov
jne
ljmp
into
xchg
cmp
cmp
out
mov
call
in
sti
jmp
inc
rcr
jle
jb
sbb
je
gs
mov
xor
add
movsl
int3
sbb
nop
stc
push
cli
mov
loope
outsl
mov
add
out
iret
adc
pop
aaa
mov
dec
sbb
nop
push
pop
cmp
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
