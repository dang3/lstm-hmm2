push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
mov
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
mov
sbb
jne
inc
aam
arpl
iret
push
jg
sbb
pop
aad
fildl
inc
out
out
jge
les
pop
mov
clc
in
mov
lock
push
daa
into
ds
inc
lea
jge
jb
sub
push
in
xchg
pop
es
push
cld
inc
jmp
xor
xor
int3
push
cmp
mov
jbe
stc
mov
scas
imul
push
arpl
popf
enter
add
js
inc
repz
test
sbb
pop
shll
out
int3
xchg
jo
repnz
xorl
sub
test
add
mov
mov
mov
push
or
in
popf
push
adc
fwait
xor
adc
gs
sub
addr16
sub
push
mov
or
or
cmp
ljmp
jb
xor
sub
fwait
ljmp
insb
and
sbb
lret
loope
xchg
push
popf
popa
jae
adc
iret
fbstp
mov
iret
subl
outsb
xchg
cmp
fisttpl
sub
in
pushf
jmp
inc
and
and
or
in
pop
mov
leave
cmpsb
mov
cmpsl
inc
jmp
ja
jecxz
scas
push
into
push
mov
pushf
add
movsl
insb
std
push
outsb
xchg
fisttpl
cmc
add
push
push
pop
out
add
mov
add
mov
xlat
arpl
inc
leave
or
and
out
into
xchg
mov
cmc
test
push
loop
daa
or
sti
jmp
mov
xor
mov
jp
filds
fbld
adcl
push
sarl
adc
loopne
xor
aas
addr16
stc
cs
mov
in
mov
cmpsl
rclb
lahf
sub
pop
jle
push
js
xor
cmpsl
fs
dec
jnp
push
je
push
into
sbb
ja
imul
movsl
pop
push
orb
fildl
adc
fidivl
ljmp
stc
xchg
add
das
xchg
scas
insl
cmp
jno
mov
push
inc
iret
iret
movsb
jge
xor
sahf
sbb
pop
or
dec
ja
xchg
out
int
sbb
shlb
push
sti
enter
jp
arpl
xor
dec
insl
call
mov
xchg
inc
mov
mov
loopne
out
dec
test
sbb
movb
mov
ljmp
jp
jae
xor
pop
aaa
dec
out
je
mov
push
out
jns
xchg
sub
push
push
das
inc
push
mov
push
inc
ds
cmp
mov
jl
cmpsl
inc
das
or
repz
leave
ds
test
shrl
addb
add
mov
push
dec
push
cmp
adc
cwtl
cmp
fldcw
pusha
mov
test
mov
fstpt
test
sarl
std
popf
test
push
enter
iret
jmp
pop
or
flds
scas
and
in
hlt
lret
movntq
popa
pusha
fldl
jle
sub
sahf
mov
outsl
inc
ret
popa
lret
dec
and
mov
pop
lods
pop
xchg
dec
xchg
mov
into
or
test
pop
test
es
data16
push
mov
and
push
bound
pop
sbb
jne
mov
stos
stos
pop
inc
fdivs
out
xor
dec
inc
push
roll
inc
mov
loopne
repnz
xor
scas
out
cmpsl
outsl
lods
xchg
and
loop
jno
andl
add
pop
push
or
or
inc
bound
rorb
xchg
adc
adc
cmp
cmc
pop
or
add
cmpsl
outsb
add
mov
imul
test
fcompl
pop
rcrl
jne
add
pusha
push
sbb
stos
cwtl
shll
dec
cmp
mov
pop
adc
xchg
sub
out
rclb
aam
mov
in
lcall
js
xchg
push
shrb
lods
push
dec
push
or
xchg
daa
lods
ja
movsl
scas
push
pusha
xor
ds
jg
insb
xor
inc
mov
mov
or
add
or
pop
lahf
imul
mov
arpl
clc
test
cmp
loopne
popf
push
pop
inc
outsl
mov
addr16
push
fwait
std
in
jg
sbb
in
jmp
lret
xchg
jno
inc
jbe
fldl
dec
cwtl
nop
jo
movsl
xchg
xchg
idivb
xlat
jmp
mov
push
ficompl
test
or
pusha
ss
loope
cmc
leave
lcall
or
or
nop
lods
inc
push
jno
dec
repz
adc
imul
fcoms
mov
xchg
imul
dec
gs
out
adc
mov
cli
scas
xchg
add
add
xchg
mov
inc
mov
aam
push
aad
mov
fsub
or
ja
adc
clc
xor
loop
subl
jb
mov
loopne
sub
imul
inc
push
orb
mov
jne
inc
sub
mov
in
in
out
icebp
rorb
add
adc
lock
cmc
std
cli
jmp
in
mov
idiv
sbb
ret
in
cmovle
sub
sbb
mov
jae
push
test
xchg
dec
push
xchg
add
jo
enter
incl
adc
clc
icebp
insl
fwait
ret
sub
cmc
and
or
xlat
adc
mov
stos
out
mov
stos
push
mov
add
push
add
aas
cmpl
mov
into
fwait
lods
jmp
xchg
dec
pop
mov
xor
mov
jb,pn
aaa
and
cmp
cmp
lods
xchg
out
movsl
push
hlt
insl
test
adc
rol
sbb
lods
pushf
mov
jmp
test
mov
in
xor
lds
or
jno
ret
adc
xchg
adc
movsl
cmpsl
sub
sbb
jns
mov
cltd
push
in
cltd
push
push
mov
mov
add
jecxz
mov
and
push
ret
and
pop
jns
enter
ficompl
push
mov
aam
xor
push
mulb
pop
paddw
ds
stos
cmp
lods
jecxz
pop
pop
push
xchg
mov
xchg
and
pusha
xchg
mov
pop
cmpsl
fldcw
or
ret
lods
and
or
xchg
loope
pop
add
lahf
dec
jle
insl
xor
pusha
aaa
fisubrl
adc
dec
cmpsl
lcall
mov
mov
insb
lds
and
jo
stos
adc
sbb
or
cli
mov
mov
stos
pop
or
leave
pop
jmp
std
push
pop
aaa
cmp
cli
mov
pop
int3
mov
scas
pop
aaa
push
std
les
insb
dec
int3
popf
out
subb
mov
cwtl
push
lds
inc
fst
std
jne
test
dec
loop
xchg
sbb
mov
rcll
leave
push
sbb
sbb
xchg
sub
aaa
mov
adc
ret
jmp
out
loopne
pop
cmp
pop
fdivrp
cmp
mov
push
call
mov
sub
pop
aam
sahf
inc
jb
scas
test
mov
push
fs
sbb
aam
jl
sub
testb
jns
mov
arpl
adc
dec
pop
mov
or
fldcw
cmpsl
sub
rcrb
jbe
adc
xchg
out
push
xchg
in
sbb
aaa
fwait
adc
xchg
adc
stos
jbe
sub
xor
ljmp
ret
push
popf
cs
jp
pop
and
xchg
inc
sbb
fsubl
loop
mov
aaa
jg
jecxz
movsb
cld
xor
pop
sub
addr16
in
sbb
into
jge
jg
xor
and
test
icebp
andb
cmpsl
out
push
mov
inc
les
jbe
xchg
jns
leave
add
enter
iret
idivl
inc
jmp
push
repnz
loope
mov
dec
adc
push
mov
mov
mov
jecxz
rcrb
repnz
fnsave
call
dec
data16
mov
mov
sbb
cmp
jo
jae
jae
fnstcw
cmp
in
inc
or
dec
sub
cwtl
mov
add
cmpsl
daa
push
popa
ret
mov
mov
push
inc
jmp
es
imul
shrb
mov
jb
jno
in
enter
pop
pop
jbe
inc
and
xchg
enter
icebp
add
sub
mov
ja
sub
dec
mov
bound
cld
call
xor
ret
in
es
lock
inc
mov
test
jmp
mov
jno
bound
sbb
leave
xchg
mov
sub
xchg
jae
movsl
pusha
or
and
lret
sti
pop
mov
fnsave
jns
lcall
gs
sti
repz
popf
scas
ret
lahf
mov
mov
mov
repz
daa
cmp
fidivrs
adc
cmc
mov
add
jp
test
jbe
dec
das
pop
je
xchg
inc
mov
mov
jns
nop
outsl
ja
sahf
xor
call
lea
xchg
std
nop
enter
push
jns
clc
sub
add
ja
xor
and
icebp
lds
lea
mov
sub
test
inc
fcomi
jae
ja
fmull
lret
cmp
mov
addb
push
rclb
adc
aad
adc
cs
in
dec
push
or
cltd
ds
insl
js
fisubs
repz
push
jge
pusha
andb
xor
popf
in
sbb
dec
pop
mov
push
and
divl
leave
push
jnp
push
push
push
xlat
inc
mov
adc
test
aad
jnp
aam
sbb
aaa
inc
cmova
xchg
push
mov
jecxz
aam
icebp
add
stc
mov
imul
pop
adc
sub
mov
xor
jb
push
inc
mov
gs
rcr
inc
outsl
add
add
or
jne
fsubrp
into
xchg
push
jmp
mov
pop
outsb
inc
dec
lock
lods
mov
repz
out
jo
ret
mov
stc
shlb
xor
shl
xor
pop
notb
cli
sarl
inc
dec
xor
hlt
js
into
repz
and
cmc
stc
jmp
dec
hlt
test
xchg
ret
push
repnz
pop
and
inc
lea
imulb
jge
cld
cmp
adc
orl
lds
and
sbb
jns
add
ret
out
rcrl
sbb
sbb
shl
daa
or
and
add
mov
sbb
mov
sub
repz
lret
cmp
cmp
rorl
adc
fs
push
mov
mov
adc
jo
stos
pop
lahf
and
dec
iret
fs
mov
in
fsubrl
mov
cli
adc
into
ljmp
and
dec
mov
inc
pop
jns
push
clc
clc
xchg
push
aaa
hlt
icebp
jo
inc
out
outsb
fmul
sub
orl
rdtsc
mov
mov
push
into
ss
mov
cmpb
inc
fwait
inc
push
xchg
push
bound
inc
orl
push
mov
fwait
add
pop
inc
insl
popf
sub
in
cltd
xor
out
fadds
push
cmpsb
mov
icebp
jg
andnps
and
pushf
shrb
ss
pop
push
shll
jno
rorl
orb
add
mov
jns
movsl
mov
push
dec
or
mov
scas
aas
lret
aas
pop
stos
pop
jge
push
xchg
add
sbb
jae
pop
sbb
xchg
xor
cmp
dec
mov
pop
dec
fistpl
sbb
mov
xchg
mov
mov
push
and
lods
lcall
ja
push
stc
and
inc
push
dec
ljmp
pop
mov
xchg
sbb
into
testb
pop
es
sbb
adc
adc
les
loopne
push
mov
roll
rcll
ljmp
cmp
pop
and
repnz
addl
cmp
xchg
data16
data16
xchg
mov
inc
pop
movsl
insl
in
cmpl
jecxz
call
jns
adc
push
add
jbe
jnp
aam
cli
cmp
mov
bound
js
xlat
mov
cmp
loope
push
jnp
mov
adc
hlt
daa
mov
xchg
mov
arpl
cmp
xchg
int
lds
xchg
mov
xchg
mov
iret
push
lret
mov
imul
dec
add
pop
jg
jne,pn
and
mov
pop
out
divl
adc
xchg
ss
adc
movsl
popf
add
inc
inc
sti
pop
in
mov
cmc
enter
sub
mov
ret
sbb
and
fcom
xor
imul
jns
add
and
cwtl
int
in
enter
pop
add
cvttps2pi
ret
jb
push
add
jmp
sbb
ret
add
dec
je
ficoms
stos
or
aam
push
and
mov
cld
pop
test
fs
mov
mov
ret
inc
ss
pop
sbb
jo
out
dec
sarl
pop
lds
rolb
lods
push
jmp
shll
repz
cwtl
xchg
pop
push
push
sub
mov
std
add
mov
adcl
and
mov
and
lahf
fisubrl
or
sbb
fbld
pop
xchg
cmp
out
aaa
dec
int3
imul
pop
pop
data16
addr16
addb
mov
aad
call
cmp
xchg
xlat
and
dec
add
stos
jo
push
hlt
in
loop
icebp
arpl
pop
pop
inc
mov
xor
sub
and
mov
faddl
aam
pusha
pop
push
lret
aad
sbb
xor
int3
inc
outsb
fistl
dec
jne
sub
jne
xor
xchg
pop
add
test
cld
adc
lds
pushf
mov
fistpl
fldenv
push
loope
or
leave
push
dec
adc
dec
adc
pusha
rcrl
iret
and
inc
int
mov
enter
leave
clc
adc
pop
sub
icebp
mov
jbe
xlat
das
mov
xchg
adc
stc
dec
aam
adc
mov
inc
sbb
pop
ja
cld
ret
es
sarb
leave
mov
sub
adc
shl
icebp
jle
adc
push
cmp
xor
loopne
mov
dec
insb
les
mov
insb
mov
leave
int3
sbb
nop
mov
xchg
divl
pop
add
sub
mov
xchg
mov
in
xor
push
xor
xchg
call
cmp
mov
lea
scas
pop
push
xor
sub
xchg
rorb
daa
adc
jo
fpatan
and
rcrl
in
sbb
int
jne
sbb
fisttpl
fwait
cld
jmp
test
push
adc
cltd
lcall
mov
shr
imul
adc
leave
cltd
ds
mov
jmp
insb
ret
and
or
push
lret
cmpsl
in
xchg
lcall
stos
jge
jns
xchg
ret
cli
testl
stos
stc
test
pushf
jmp
sti
cli
daa
sub
ds
mov
loope
sbbb
call
or
jmp
nop
sbb
rclb
pop
gs
dec
push
nop
aam
outsl
xchg
outsb
mov
loopne
and
dec
fs
das
jl
and
arpl
rorl
ljmp
test
inc
push
mov
cmp
sbb
mov
mov
push
and
or
lret
lret
xchg
call
add
fisttpl
sub
cmp
fdiv
mov
mov
mov
lock
fnstenv
cmp
sub
dec
mov
in
jnp
stc
cli
adc
xchg
xor
sti
inc
add
fisttps
jecxz
sbb
xor
mov
js
sub
mov
repz
push
or
sbb
dec
movsb
and
sarl
lcall
inc
mov
dec
or
imul
sbb
pop
add
sub
xor
leave
cmp
push
push
mov
sub
sbb
pop
and
cwtl
pop
jmp
push
inc
jecxz
outsb
lock
xor
mov
in
add
call
pop
pop
lcall
movntps
aad
ljmp
add
xchg
push
mov
in
enter
jg
inc
jl
sbb
dec
fstpt
sub
lcall
in
add
mov
mov
inc
inc
push
pop
lret
ret
mov
pop
and
out
push
out
push
orl
ret
pop
paddq
inc
or
push
cmc
aas
xor
xchg
out
divl
mov
sub
in
add
push
js
inc
rol
addl
fbld
mov
push
xor
cmp
sub
call
mov
inc
dec
mov
cltd
mov
mov
xor
in
leave
jl
or
and
pushf
push
out
and
inc
stos
adc
lds
lret
aad
xchg
ds
pop
or
or
sub
sti
movsb
push
jns
pop
aad
jg
rcl
lret
repnz
add
sub
and
fdivl
mov
pop
ret
sub
stc
filds
jle
les
xchg
pop
cli
xchg
nop
mov
or
and
das
addb
sbb
lods
dec
stos
sbb
xchg
subl
and
out
sub
popf
inc
mov
hlt
xchg
aad
imul
push
adc
and
mov
sbb
inc
jl
mov
sbb
mov
xlat
les
mov
xlat
and
mov
or
mov
rclb
out
mov
aaa
sbb
push
cs
pop
push
inc
jne
je
add
jle
xor
mov
out
cltd
std
ret
jbe
outsb
cmp
push
mov
xchg
js
iret
iret
mov
call
mov
cmpsl
push
aam
mov
cltd
add
mov
mov
mov
push
mov
adc
loope
push
js
jb
xlat
jbe
cmp
pusha
mov
test
and
cs
mov
mov
sub
push
dec
rorl
sti
mov
lock
jmp
movsl
das
mov
inc
xor
and
jno
icebp
sub
and
dec
add
sbb
jo
popa
outsb
pushf
jno
in
xor
jle
and
std
inc
pop
lock
out
call
inc
sahf
das
sti
orl
xchg
jecxz
mov
mov
data16
test
pop
aad
test
clc
pushf
out
dec
movsl
mov
cs
jp
xchg
xchg
xchg
inc
jle
pop
test
dec
in
and
aaa
sub
and
gs
sbb
jo
call
lods
push
xor
xor
xchg
jp
xor
mov
dec
test
or
jg
adc
and
scas
sbb
mov
sbb
xor
aas
sbb
mov
cmp
xor
aad
dec
scas
and
mov
in
and
mov
mov
pop
ret
adc
out
mov
movsb
insb
lock
lds
or
and
mov
cmp
sbb
outsb
stos
mov
nop
and
lcall
and
inc
or
leave
pop
mov
je
or
dec
jmp
pop
cmp
mov
popf
adc
sbb
dec
decb
fiadds
mov
sub
pop
outsl
lods
sbb
pop
and
xchg
aam
cmp
rcrl
push
xor
movd
sarl
divb
ss
les
dec
or
fldl
xchg
hlt
rcrb
pop
ret
cli
xchg
mov
repz
jl
les
adc
adc
adc
int3
iret
cmp
out
subb
and
inc
jae
pop
fldcw
add
dec
cs
stos
repz
pop
xor
mov
je
cmp
pop
sub
fwait
adc
lea
jns
out
and
scas
lcall
fisttps
add
mov
mull
dec
jl
mov
and
push
in
clc
insl
outsb
shll
mov
popf
push
sub
jae
addb
mov
push
sbb
outsl
jmp
ds
fdivrs
and
popf
cmpsb
cmp
insl
and
mov
xchg
sbb
out
cmp
xchg
nop
add
scas
push
dec
sti
xor
xor
inc
add
inc
jp
pop
inc
sbb
popa
nop
push
push
pop
lods
mov
mov
in
ljmp
clc
jmp
sti
mov
sbb
js
cli
mov
in
inc
cmp
mov
dec
mov
sbb
scas
fisubl
lret
lcall
jb
in
and
xor
jns
cmp
jbe
fmuls
mov
in
jb
xor
sub
in
sti
pusha
mov
inc
addr16
lret
and
adc
jle
dec
sbb
jno
sbb
pop
push
mov
push
mov
and
xor
out
out
cmp
xor
ret
outsb
cli
push
jmp
loope
xor
cmp
lods
shll
jecxz
nop
or
mov
mov
ret
push
in
adc
orb
push
shll
mov
jo
aad
daa
aam
jnp
xchg
ror
stc
fnstcw
data16
mov
ficoms
cmp
imul
repnz
add
sarb
iret
outsb
mov
stc
push
pop
mov
xchg
dec
sbbb
push
inc
push
cmpsl
repz
mov
push
xchg
aas
and
push
lcall
cmpsl
fcoms
jns
scas
lahf
jne
and
mov
cmp
adc
xor
inc
icebp
jecxz
fdivrp
fsub
cmp
mov
movsb
in
jb
repnz
inc
mov
mov
dec
mov
repnz
pushf
les
lods
outsl
xchg
push
adc
loope
or
cs
jge
add
test
inc
sub
dec
data16
xlat
pop
push
dec
sbb
mov
adc
mov
dec
mov
push
neg
notb
adc
aas
push
in
movsb
lods
ja
shrl
ret
dec
or
rol
push
jle
xor
cmpsb
cld
mov
mov
out
xchg
pop
add
mov
fldl
add
jle
cs
sbb
adc
loop
sub
cmovae
pusha
out
dec
mov
mov
hlt
test
push
xchg
es
mov
adc
in
rcrb
adc
imul
and
aas
push
repz
outsl
es
loopne
lcall
xor
mov
sub
lock
outsl
lods
arpl
scas
mov
pop
mov
stos
iret
cltd
pusha
clc
out
fists
insb
adc
movsl
pop
add
ljmp
mov
popa
test
cmpsl
cli
push
jle
dec
rol
mov
xor
ljmp
add
outsb
mov
inc
repz
adc
xchg
pop
mov
ds
add
jmp
sti
fdivl
lds
cmpsl
imul
clc
pushf
fsubp
sbb
es
sbb
fwait
inc
mov
negl
popf
pop
xor
in
pushf
shll
in
pop
xchg
adc
or
xchg
xchg
mov
loopne
jnp
jns
fsubrs
int3
shr
pop
in
sbb
aam
popf
stc
hlt
fwait
and
je
test
add
mov
cmp
lds
aas
pop
imul
mov
push
mov
and
movsl
hlt
jl
jb
and
mov
out
sti
and
push
jae
vphaddwq
mov
scas
jle
imul
lock
in
ljmp
aaa
mov
sub
jo
xlat
loop
jmp
ds
cmc
rolb
pop
out
pushf
mov
adc
std
or
jmp
arpl
pop
jnp
push
xor
inc
fdivr
imul
xchg
sub
jno
divb
js
mov
ficomps
orb
mov
jp
and
push
adc
iret
or
js
pushf
pop
dec
dec
jae
bound
jecxz
mov
or
int3
int
es
fistpl
or
mov
sti
pop
jmp
int3
fbstp
push
nop
or
aas
mov
fdivl
ficomps
mov
enter
fists
dec
mov
sahf
mov
les
jae
aas
sub
xchg
ljmp
pop
or
cwtl
mov
mov
push
popf
cs
jp
or
cmc
sbb
mov
ja
fsubs
mov
xor
add
push
cwtl
adc
cmpsb
pop
jnp
fcmovnu
pushf
or
cld
cmp
dec
add
fimull
not
pop
pop
jg
test
and
mov
mov
cmp
sub
nop
in
es
mov
test
aad
push
cltd
dec
pop
mov
sbb
xchg
movsl
aad
inc
fwait
shll
inc
push
lea
mov
dec
icebp
jno
jb
pop
xorl
add
cmpsb
insl
mov
lcall
xor
inc
sbb
mov
mov
sarl
shrb
mov
push
and
sub
imul
ljmp
out
fcmovnbe
stc
gs
mov
cmc
pushf
in
xor
cmpsl
and
cwtl
addr16
cmp
jp
inc
push
movsl
pushl
push
mov
leave
int3
aaa
stos
sub
fcomps
mov
jg
mov
outsb
adc
xchg
icebp
sbb
fstps
mov
test
icebp
and
mov
inc
inc
mov
push
cmc
scas
sub
sbb
cmpsl
scas
in
testl
mul
mov
lods
jp
cmp
sti
jp
push
ljmp
dec
ss
adc
jno
xchg
and
sbb
ret
mov
cs
insb
jl
out
mov
xchg
inc
icebp
daa
cli
ffreep
xor
outsl
and
out
mov
scas
test
push
gs
scas
mov
sub
inc
rolb
xchg
pop
xchg
cmpsb
cmpsl
or
sub
jle
add
pop
lahf
xor
arpl
arpl
mov
or
inc
or
leave
test
or
repnz
xchg
lcall
aaa
fnstenv
or
es
jp
mov
dec
wrmsr
jge
adc
mov
les
lock
and
aam
repnz
jo,pn
xchg
imul
cmp
std
test
leave
clc
shr
add
outsb
aaa
pop
sbb
shlb
or
int3
mov
insb
push
adc
jecxz
pop
push
xchg
push
movb
pushf
and
xchg
lret
cmp
mov
fwait
add
xor
push
push
mov
dec
and
rcrb
xor
jnp
fdivp
aad
stc
mov
mov
scas
push
or
call
into
stos
mov
cld
jne
push
mov
push
outsl
inc
xor
and
mov
jae
xor
cwtl
jp
jno
std
dec
call
fistps
shlb
rcr
mov
aas
xor
or
std
stos
jle
ret
cmp
sbbl
pusha
push
cmp
leave
lock
adc
xor
nop
inc
push
mov
xlat
adc
repz
aam
and
pop
push
add
sahf
push
jl
pusha
ret
setnp
sub
data16
xchg
aad
clc
and
and
je
jg
fwait
out
mov
xor
or
pop
xchg
nop
mov
cmp
add
pushf
sub
leave
jle
xchg
nop
and
ljmp
fs
or
ds
aaa
xor
in
mov
push
call
lods
repz
fs
test
pop
xor
js
mov
ds
or
js
ljmp
repz
and
jne
jne
push
insl
jmp
mov
fistps
xchg
orl
hlt
daa
jle
xlat
jo
dec
sti
out
jge
adc
les
aas
dec
lret
nop
xchg
fidivrs
lods
add
sbb
rorb
ficomps
xchg
in
xchg
das
in
xchg
sub
pop
stos
andb
sub
ret
test
mov
loope
and
subl
xor
dec
fistpl
stos
jle
pop
jp
jg
popa
scas
jp
jne
scas
and
and
dec
insb
inc
imul
adc
mov
mov
adc
mov
fs
lods
mov
sarl
in
out
imul
jae
fmull
xor
stos
cmp
pop
pop
test
dec
test
cld
icebp
dec
popa
js
leave
aaa
in
int3
fildll
pusha
push
sbb
push
adc
addr16
rorl
jo
sbb
clc
popa
clc
leave
pop
clc
dec
xor
frstor
stos
sahf
sub
in
jb
dec
xchg
in
adc
in
xor
movsl
jge
mov
sarb
notb
lea
fsub
mov
out
inc
or
scas
cmpb
jno
cltd
xlat
lods
popf
out
pusha
dec
inc
pusha
stos
clc
lcallw
xchg
in
ss
mov
inc
iret
pop
jg
mov
cmpsl
nop
cltd
xor
sbb
adc
push
stos
mov
inc
mov
test
fimull
add
or
jge
push
out
fildll
leave
rcrb
clc
repz
enter
pop
inc
and
dec
sub
push
inc
adc
pop
push
push
and
or
jmp
xor
fs
sbb
jl
imul
popa
sbb
repz
ljmp
sbb
xchg
push
cltd
cli
jmp
imul
shrl
xor
xor
dec
push
mov
test
inc
jmp
jbe
mov
and
sahf
cmp
jecxz
mov
ljmp
jmp
bound
jne
hlt
xchg
testl
mov
and
loop
fadd
stos
mov
jb
sahf
popa
aad
inc
mov
push
std
les
push
nop
scas
sbb
aad
pop
fimull
xor
push
jecxz
ss
jle
aam
dec
inc
inc
xor
in
test
test
xor
xchg
outsb
stos
push
push
push
add
and
cmp
jmp
xchg
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
push
cld
loopne
jl
dec
pop
jl
aas
xor
out
xchg
lock
add
push
pop
je
jnp
shrb
hlt
sbb
mov
xchg
dec
stos
test
aam
cwtl
xchg
push
inc
shr
inc
vpcmpgtb
pop
jo
xorb
cmp
jmp
mov
sbb
popf
stos
in
mov
sub
in
aas
in
pusha
std
add
lock
ds
xorb
adc
pop
sbb
dec
cmp
cmp
bsr
ret
aam
add
pop
std
xlat
pop
dec
push
movsl
sti
push
out
sbb
or
in
pop
mov
adc
mov
xchg
pop
fldpi
dec
lret
cmpsl
fbstp
inc
popf
xor
jle
jg
fldl
jae
fs
ret
mov
add
pop
fstpl
les
pushf
dec
push
dec
aad
or
jns
cmpsl
jae
cld
repz
pop
ret
andb
loopne
jno
loopne
xor
ret
arpl
iret
or
fstpt
cmc
xchg
in
fwait
into
jno
inc
leave
das
jg
fs
mov
and
dec
sbb
ret
data16
sub
fxch
jecxz
out
movsb
ss
adc
cs
cmp
mov
ret
ret
ds
fadd
jge
movsb
or
jne
rcrb
leave
aad
pusha
sub
clc
cmp
lds
lcall
jmp
cmp
sbb
aam
mov
ja
imull
faddp
dec
adc
mov
pop
jo
daa
ljmp
lods
lds
mov
stos
fcoms
mov
aam
pop
push
mov
and
sub
fbld
cld
icebp
ret
clc
xchg
xchg
into
icebp
mov
inc
rcl
aas
pop
mov
pop
cmpsb
std
sbb
jge
push
lock
vphaddwq
lret
cld
test
pop
pushf
pop
test
xlat
inc
enter
cwtl
add
insb
dec
or
imul
leave
stos
in
sbb
shrb
dec
in
push
mov
xor
push
jecxz
sbb
stos
jmp
xchg
lahf
fmuls
sbb
std
pop
std
sub
cmp
std
outsl
and
fsubrl
pop
das
or
mov
adc
sbb
mov
xor
jge
out
pop
jno
lds
mov
pop
fincstp
sar
hlt
xor
jnp
and
sbb
fcomps
sub
jmp
js
sbb
and
pop
test
ds
lret
scas
dec
les
jle
ljmp
mov
test
or
rclb
xchg
aas
lret
dec
inc
es
bndldx
cmp
pop
adc
dec
jmp
cmp
lret
mov
subb
scas
cmp
aam
fidivrl
sbb
in
mov
int
mov
pop
push
iret
mov
test
mov
sub
enter
pop
dec
daa
fld
stos
lcall
addb
mov
jl
shll
mov
jae
add
ljmp
clc
pop
mov
push
or
xchg
rorb
scas
js
xchg
dec
inc
mov
pop
sbb
loope
mov
xor
inc
xchg
aas
xchg
test
in
std
pop
jmp
movsb
shlb
test
addr16
fisttpl
outsl
cltd
sbb
cmp
xchg
mov
pop
mov
jge
repnz
sbb
cli
stc
out
push
shll
pop
fsubrp
xlat
test
inc
fdivr
lea
xor
popf
out
mov
dec
nop
adc
xchg
pop
cmp
fwait
push
adc
bound
mov
mov
pop
jae
imull
or
lock
push
mov
std
inc
xor
and
imul
jp
adc
test
test
pop
test
daa
jnp
xor
jmp
into
cld
es
jo
jbe
imul
popa
mov
shlb
adc
scas
and
add
cmpsb
lret
pop
sub
subl
jbe
test
mov
out
scas
pop
mov
cli
scas
mov
or
cmp
adc
mov
push
ds
das
mov
pop
aaa
fs
and
mov
jge
xchg
push
jb
sub
mov
xor
jno
pop
adc
mov
loop
pop
xor
pop
dec
lock
sbb
push
outsl
sbb
rorl
mov
leave
xchg
fistpl
int
cmp
sub
mov
ljmp
shll
divb
pop
mov
inc
inc
xchg
pop
xor
outsl
xchg
aad
mov
mov
mov
movsl
filds
and
and
movsb
pop
popf
jo
or
aas
mov
inc
cli
ja
orb
cmp
mov
shlb
scas
movsl
iret
push
aaa
inc
scas
inc
cmc
stos
add
add
mov
mov
xchg
fiadds
mov
test
jmp
into
addr16
jp
into
in
addr16
scas
mov
cmc
ja
data16
mov
rolb
jmp
fildl
es
mov
jg
roll
ljmp
push
lret
pop
movsl
cmp
xchg
call
pop
mov
insl
and
push
cltd
pop
lods
ret
movsb
ficoml
adc
jbe
std
xchg
mov
xchg
jb
jno
sbb
cli
mov
dec
mov
dec
inc
pop
push
xchg
repz
rolb
cmp
dec
xor
insl
pop
movsl
mov
sbb
sbb
mov
mov
or
xor
mov
add
jge
rcrb
pop
cs
push
add
cmp
shll
add
hlt
rcrl
and
loopne
dec
pop
jns
nop
jnp
push
dec
adc
jae,pn
pop
push
adc
lods
filds
adc
popf
mov
daa
andb
ss
sbb
les
jg
mov
jp
movsl
ret
mov
push
js
sbb
in
addl
pop
dec
inc
mov
hlt
or
mov
ja
sub
xchg
or
aam
and
push
loopne
fldenv
out
mul
mov
insl
js
push
mov
loopne
jecxz
dec
push
test
lret
xor
mov
hlt
xlat
leave
pop
or
add
jns
fnstcw
add
js
mov
mov
icebp
lret
loopne
and
xchg
popf
cld
and
push
adc
jl
cmp
loope
nop
out
shll
aas
dec
cmpsl
aas
mov
or
push
ret
neg
mov
jae
arpl
sub
mov
test
call
pop
dec
adc
enter
pop
hlt
push
rep
inc
push
insl
push
mov
popf
pushf
add
out
dec
pop
mov
and
das
push
sub
rol
fwait
in
test
jns
mov
xor
sbb
cmpsb
mov
les
pop
js
mov
jne
nop
int3
arpl
pop
ret
inc
mov
pop
es
mov
sbb
addr16
rcrb
xchg
lea
xchg
adc
lret
adc
clc
cld
cmp
jae
adc
inc
das
sub
call
sub
mov
mov
mov
jbe
in
push
push
xchg
lcall
lods
insl
jnp
xchg
pop
out
mov
fs
into
pop
mov
insl
add
dec
dec
cmp
loopne
test
mov
mov
sti
lods
inc
pop
andl
pushf
stos
inc
addr16
ja
out
arpl
xchg
jmp
cmpsb
jmp
test
jge
roll
sahf
mov
cmpsb
cmpsb
or
pop
lock
add
mov
imul
inc
inc
into
mov
mov
xchg
fnstenv
add
ja
xor
sub
and
fstpt
jno
mov
add
std
sub
mov
test
mov
test
jbe
and
or
aaa
lods
push
xor
lahf
mov
xchg
or
es
push
push
mov
into
cld
mov
mov
sub
test
inc
sbb
scas
push
xchg
inc
jnp
sub
mov
cwtl
aam
cmpsl
push
and
iret
int
fisttps
sti
lods
pop
inc
mov
jg
and
cs
mov
hlt
outsl
int
inc
js
sub
rcr
pop
iret
cmc
push
arpl
loop
in
ljmp
mov
or
test
or
mov
inc
pop
inc
fsubs
and
test
push
stc
xor
sub
lods
mov
lret
mov
mov
mov
or
dec
pop
lret
in
ja
hlt
jg
add
cs
outsl
cmp
inc
cmp
jge
sub
fisubl
inc
aad
dec
mov
test
sbb
mul
scas
mov
mov
mov
test
pop
ret
scas
enter
stos
mov
jmp
mov
sbb
imul
in
in
jne
mov
enter
mov
sub
jmp
cmpsb
iret
mov
pop
cmpsb
push
or
leave
mov
loopne
push
pop
dec
in
sbb
xchg
sub
adc
mov
or
mov
push
mov
ja
dec
and
inc
test
adc
ja
jge
fsts
outsl
sbb
inc
gs
xor
adc
mov
sub
mov
xchg
dec
sar
shll
pop
addr16
and
add
pop
test
pop
fimull
jg
movsl
bound
popf
mov
je
mov
pop
daa
popa
ljmpw
scas
lods
cmp
add
lret
dec
sbb
sbb
push
xchg
sub
dec
jmp
dec
jb
jmp
test
cmpsl
insb
or
fmull
cld
std
and
or
or
test
scas
popa
mov
test
imulb
sbb
cmpsb
and
jmp
pop
scas
pop
repnz
movsl
xor
or
or
push
icebp
dec
test
gs
aad
jl
cmpsl
inc
fistl
jnp
mov
pop
addr16
aaa
push
aam
jo
push
outsl
repz
adc
sbb
inc
fmulp
clc
jae
sti
xchg
out
outsb
dec
lods
std
leave
jl
dec
clc
xchg
push
xor
mov
sub
mov
pushf
bound
mov
ds
sub
seta
cmpsb
inc
addr16
repz
clc
dec
dec
fcom
sbb
mov
ss
pop
movsl
jmp
cmp
mov
jge
fs
fsubrs
divb
mov
in
or
inc
xchg
shl
pop
ret
stos
and
add
pop
aas
stos
adc
aas
xor
inc
dec
enter
sbb
sub
push
xor
mov
mov
sbb
repz
andb
add
aas
les
mov
cmp
mov
mov
es
ljmp
push
and
sub
call
dec
xchg
scas
movsb
mov
test
movsb
xor
jle
push
insb
cld
ja
loopne
dec
test
dec
out
push
fs
mov
mov
movsb
repz
xor
and
adc
rolb
popa
lahf
pop
pop
mull
int3
test
sub
lret
add
in
push
pop
jmp
insl
mov
ret
sub
xor
scas
loopne
sub
mov
gs
outsl
and
jae
loope
out
imul
jbe
cmpsb
xor
js
daa
testl
xchg
andl
jo
pop
push
lcall
sbb
add
jae
mov
dec
adc
jmp
cmc
and
sub
push
pop
push
popa
xchg
jne
ja
cmp
scas
dec
jecxz
out
mov
clc
js
out
jmp
loopne
int
or
ret
dec
push
push
add
popa
out
sbb
adc
mov
lcall
mov
push
lods
cwtl
lea
push
icebp
or
call
loopne
push
jne
sbb
lods
lods
add
dec
or
xchg
hlt
push
fldenv
jp
rcr
sbb
movl
outsb
dec
or
fdivs
jbe
daa
or
cli
add
pop
push
movups
xchg
bound
repz
test
pop
push
mov
mov
repz
pop
sub
jg
test
and
cmp
jmp
das
push
out
inc
pop
or
imul
popa
movsb
cmp
pop
xlat
push
pop
mov
jne
ds
mov
adc
lcall
fcmove
mov
addr16
lret
lock
inc
pop
daa
out
fwait
pop
sub
push
jno
stc
jae
leave
call
test
das
mov
adc
push
jecxz
into
pop
and
test
push
mov
stos
or
dec
fstpl
pop
xor
xchg
mov
or
add
push
inc
xor
mov
adc
jl
mov
xor
jmp
hlt
out
outsl
jne
xor
nop
xchg
in
push
xor
inc
jmp
scas
aam
lea
mov
add
leave
add
iret
sub
inc
sbb
add
sub
or
popa
inc
or
lret
mov
mov
aam
filds
pushf
lea
fwait
jmp
mov
jecxz
and
and
sti
sbb
xchg
jl
es
xor
lea
lret
and
jae
inc
mov
and
in
cmp
cmpsb
xor
or
test
xchg
ds
jne
jg
dec
cmp
xchg
cmc
sarb
mov
push
test
sbb
lds
sub
ret
dec
push
xchg
enter
imul
sbb
lea
push
popl
mov
jp
or
scas
outsl
push
scas
mov
adc
lcall
or
pop
addr16
aam
repnz
xchg
inc
insl
pop
mov
cwtl
out
fisubs
or
fmuls
jb
add
fcmovne
jg
jge
adc
notb
aam
xchg
mov
push
negb
int
je
arpl
les
dec
mov
mov
icebp
mov
in
xor
dec
enter
mov
lret
mov
mov
aad
xchg
xchg
mov
shlb
shll
cwtl
in
and
sti
xor
ret
jne
inc
stc
dec
in
cmp
mov
lods
adc
fisubrl
jnp
mov
xor
aad
and
out
daa
sub
ret
insl
add
in
repz
cld
sbb
mov
shlb
movsb
popf
or
xor
in
loope
lds
sbb
inc
loopne
shlb
mov
push
stc
xchg
dec
pop
cmpb
in
pop
sub
xchg
jno
xor
xchg
sahf
stos
test
pop
mov
lret
xchg
scas
je
xchg
std
mov
or
enter
add
adc
inc
push
nop
jmp
sahf
jle
in
adc
in
xor
pusha
lea
pop
dec
mov
cmp
in
ds
lock
xor
mov
push
fimuls
loop
shll
mov
bound
adc
in
mov
ret
pop
xchg
pop
cld
cmp
iret
dec
cmp
push
test
cmpsb
repz
xchg
inc
push
rol
aad
and
lcall
dec
popa
cmp
ss
add
ss
out
mov
push
jp
cmp
js
jecxz
icebp
icebp
popa
outsb
push
call
mov
xchg
cmp
sti
push
jmp
stc
fdivr
mov
mov
dec
std
mov
pop
fbld
stos
repz
sbb
aad
jne
mov
lcall
out
arpl
push
jg
push
movsw
jmp
fldcw
icebp
lods
sbb
mov
inc
cmc
dec
jo
jmp
ret
add
xchg
mov
mov
rol
mov
push
xor
rol
or
shrl
mov
jb
push
and
jg
push
mov
aad
stos
inc
and
fs
dec
jbe
push
add
pop
sbb
lret
xor
inc
sbb
push
pop
testb
jbe
adc
cmp
and
adc
movsl
jge
gs
insb
loope
insb
sar
dec
mov
sub
hlt
adc
jno
jae
and
decb
and
adc
pop
icebp
mov
pop
mov
jmp
jno
xchg
shrb
and
loop
cmp
fdivl
and
arpl
js
inc
cld
into
movl
cmpsb
or
and
jge
add
bound
adc
cmp
mov
sub
std
es
dec
push
movsb
cld
xchg
dec
mov
subb
jbe
or
testl
bound
cli
pop
nop
adc
xchg
rcll
cmpsb
inc
pause
movzwl
xchg
hlt
jns
sbb
sbb
out
inc
movsb
cmp
in
ds
xor
inc
push
xchg
in
push
shlb
push
jge
pusha
or
pop
jns
ret
sub
loopne
jb
cmpsl
push
adc
sbb
mov
repz
xchg
push
call
shrb
add
jbe
or
jecxz
mov
jmp
fsubr
rcll
cmp
loopne
lret
mov
jns
es
xchg
pop
in
and
loopne
addb
mov
and
dec
xchg
aam
jp
test
loopne
sar
add
insl
ljmp
push
pxor
shrl
insb
dec
int3
sbb
pop
mov
jp
adc
lret
xor
jecxz
jecxz
dec
cmpsl
mov
in
test
fcompl
mov
out
lods
test
jae
sub
xlat
and
mov
mov
cmp
pop
out
xchg
jae
sub
movsl
jnp
inc
jbe
dec
sarb
aad
xor
push
mov
pop
insl
mov
pushf
fstpl
in
sarl
sub
repz
inc
xchg
pop
push
add
jmp
xchg
sub
icebp
dec
xchg
lret
out
testl
or
jns
jo
out
mov
mov
nop
movb
fdivrs
or
pop
inc
cli
sbb
sbb
jns
xchg
rclb
sbb
stos
mov
dec
loopne
mov
lods
repz
jns
mov
clc
repz
mov
xor
shr
repz
pop
jo
cli
push
aas
negb
adc
fstps
mov
fdivr
mov
cmp
jae
enter
dec
dec
mov
or
cmp
adc
ret
jne
lahf
cmp
stos
je
xchg
outsl
test
int
mov
adc
push
adc
push
test
rcll
jge,pt
mov
lds
std
sbb
xchg
xor
test
ja
cmp
stos
pop
movsl
shll
mov
test
add
and
and
xchg
cli
subl
xor
and
repnz
fisubs
pop
mov
xlat
idivb
pop
icebp
jmp
mov
addr16
dec
prefetchw
or
sub
subl
es
xchg
lret
iret
jge
mov
out
xchg
aam
jb
pop
jl
out
dec
xchg
sub
dec
fildl
je
push
iret
jmp
clc
push
stc
mov
xchg
fsubs
inc
jge
mov
hlt
clc
sub
cld
das
mov
push
push
dec
pop
mov
xchg
insb
dec
or
inc
jns
mov
out
repz
xor
xchg
adc
push
cltd
mov
outsl
fcmovne
jecxz
in
stc
dec
ja
int3
out
xchg
nop
push
testb
cmp
pop
push
add
cmp
addr16
popa
into
jp
les
xchg
mov
add
push
je
pop
test
mulb
js
lret
test
out
jmp
das
pop
xchg
out
or
rcl
cltd
cmp
inc
lods
dec
orb
mov
cmc
fwait
sahf
mov
pop
into
popl
ja
mov
push
adc
cmp
lret
jle
lahf
mul
loopne
lods
mov
and
lods
adc
pop
jmp
xchg
aas
dec
mov
push
adc
pop
les
dec
sti
pusha
cmp
outsl
push
js,pn
movsb
sbb
dec
dec
pop
in
je,pn
jbe
cmpsb
pop
ret
clc
ficoms
push
sub
push
mov
fwait
test
bound
xor
lods
dec
repz
gs
ja
inc
dec
fldenv
cmp
xchg
adc
jno
adc
mov
shl
pop
inc
call
lcall
call
pop
imul
stos
pop
or
ja
inc
mov
call
jo
mov
adc
stos
and
lahf
arpl
iret
arpl
mov
les
aas
fimull
sbb
int3
mov
adc
repz
jl
fldenv
xor
sahf
and
xlat
cltd
pop
dec
sub
iret
pushf
fildll
adc
or
push
jecxz
data16
push
lcall
jns
ret
lock
sbb
sti
lcall
lcall
pop
add
dec
inc
and
out
inc
inc
adc
and
mov
sub
pushf
imul
mov
addl
push
sub
hlt
ja
and
jge
cmp
enter
rolb
push
inc
jae
sbb
mov
inc
hlt
je
xchg
jae
popf
outsb
insl
popf
scas
push
ja
fstp
pop
out
shll
or
iret
xor
dec
inc
xchg
jo
roll
pop
inc
mov
pop
mov
or
mov
xchg
aad
aam
sbb
ljmp
adc
push
add
mulb
push
push
dec
and
arpl
testb
std
jmp
push
dec
xchg
or
lods
mov
das
das
inc
cmp
out
pop
adc
mov
push
add
fisubrl
and
shlb
sti
dec
jbe
in
out
or
cmp
ds
push
loop
push
mov
sub
jb
data16
hlt
xchg
push
cmp
jg
cmc
mov
mov
out
out
es
adc
lods
lcall
insl
add
test
inc
sbb
xor
jbe
popa
rorb
mov
xor
jp
inc
xchg
aaa
sub
xchg
in
scas
jno
outsl
push
sbb
fdivrs
and
adc
add
mov
dec
scas
mul
fiaddl
into
mov
mov
ret
fs
add
jge
adc
or
sbb
mov
push
daa
xlat
sbb
cmp
lods
daa
stos
int
jcxz
mov
jno
jne
mov
mov
and
mov
inc
iret
jno
enter
paddsw
pushf
push
push
jbe
clc
popa
outsl
add
cmp
movsb
mov
push
orb
inc
movsb
mov
inc
scas
cmp
and
jno
jno
mov
cs
sub
adc
sbb
adc
in
dec
or
add
sbb
and
and
inc
push
jle
rcrl
dec
jae
leave
mov
in
cmp
sub
sahf
cmp
xor
or
cmp
mov
and
pop
xchg
add
aam
stos
pop
and
lods
ret
movnti
lock
jno
in
push
iret
push
sbb
test
sbbb
and
mov
in
add
push
outsb
xchg
or
push
fistl
stc
xor
add
mov
adc
mov
sub
leave
sbb
xchg
mov
jle
sub
fcompl
sbb
pop
sbb
pop
xor
push
rorl
lahf
arpl
xor
ret
mov
fisubl
icebp
push
dec
mov
and
test
sbb
inc
call
and
test
sbb
pop
mov
into
in
push
ret
adc
divb
enter
imul
jecxz
mov
adc
mov
push
xor
or
jge
or
and
loop
inc
into
xchg
ljmp
sarb
and
aas
pop
std
push
outsb
ljmp
mov
sbb
fistps
aas
pushf
imul
jnp
daa
push
adc
or
aas
mov
xor
push
sbb
mov
push
imul
add
es
dec
pop
mov
shlb
pop
xchg
jne
and
cld
inc
adc
decl
xchg
mov
push
shrl
sarl
incl
mov
outsb
icebp
sub
cmp
xchg
mov
test
cli
fucomp
or
add
incb
xor
ljmp
punpckhbw
inc
lcall
xor
dec
in
inc
adc
cld
xor
ret
mov
aaa
in
mov
pusha
shrb
inc
clc
inc
stos
pushf
adc
jp
sub
scas
mov
and
stc
cmp
in
xorl
fs
inc
repnz
inc
cmp
jge
add
xchg
xchg
pop
nop
xor
cmp
inc
inc
xchg
xchg
cmp
add
push
push
out
nop
subb
je
push
pop
pop
mov
xor
rorl
imul
fcompl
loop
cli
fdivs
sub
sbb
lret
pop
cwtl
clc
mov
jge
pop
enter
inc
dec
adcb
xchg
or
leave
adc
inc
fldcw
jecxz
das
push
cltd
cltd
or
sbb
fisubs
adc
popa
mov
xorl
mov
adc
pop
dec
pop
and
iret
jbe
or
adc
jg
mov
shlb
sahf
dec
leave
xchg
bound
xchg
ss
sbbl
insl
inc
push
ret
stos
repz
mov
das
ds
pushf
xlat
adc
les
cmp
insl
sub
out
sbb
xchg
gs
sbb
aam
cld
xor
mov
xorb
push
mov
imul
pop
lds
jbe
popa
pop
in
testl
rorl
mov
ljmp
mov
xchg
mov
add
orl
add
xchg
ret
or
jle
sub
es
cmp
fidivs
das
aam
or
insb
sbb
daa
pushf
pop
xchg
sub
pop
lret
cmc
mov
pop
lock
xor
mov
ret
fdiv
in
std
out
ficompl
int3
sbb
fs
sub
bound
and
xchg
mov
pop
xorl
push
pop
xchg
push
inc
dec
nop
movsl
inc
mov
jae
into
rclb
adc
dec
imull
sub
stos
add
sbb
xchg
insl
pop
add
cmc
inc
insb
rcrl
mov
xchg
outsb
jmp
jg
jns
inc
adc
aad
mov
sbb
pop
cmp
and
add
sahf
inc
adc
xorl
cmpl
xabort
lret
jbe
inc
shl
outsl
and
lds
jne
adc
inc
jle
ljmp
inc
mov
js
pusha
mov
or
sub
out
sub
lahf
into
subb
iret
outsb
cmp
neg
aas
data16
fmuls
add
icebp
cmc
sbb
push
fs
mov
sub
and
mov
rcr
dec
test
cmpsl
cmp
xor
js
fwait
mov
ljmp
mov
jne
cli
js
lret
jmp
rcll
insl
aas
ja
mov
xor
les
sbb
or
cli
vmread
ja
bound
sahf
inc
cmp
les
cltd
inc
js
mov
mov
lods
rclb
outsb
icebp
clc
sbb
pop
sar
push
daa
jns
clc
cmp
out
out
test
cmp
repz
fidivl
fdiv
cmpb
inc
cmp
add
dec
jge
jbe
jg
xchg
mov
dec
pusha
in
lds
xor
fs
mov
jbe
cmp
or
pop
mov
xchg
sub
mov
jbe
push
xchg
inc
xor
gs
mov
aas
in
das
out
pusha
sti
adc
dec
inc
inc
xchg
mov
inc
lret
mov
push
inc
xorl
dec
in
stos
jle
dec
mov
lods
or
push
add
jecxz
and
mov
cmp
xlat
dec
add
cli
mov
mov
cs
push
push
mov
jnp
iret
xchg
lret
xlat
inc
inc
sub
pop
pop
cmpsl
mov
sub
loopne
and
cmp
xchg
stos
and
rcr
mov
insl
inc
sti
lock
mov
ror
fnsave
imul
ja
and
cmp
cmp
imul
mov
daa
mov
jmp
add
into
adc
int
jns
stc
add
out
inc
fstps
lods
es
sti
stos
inc
cmp
mov
icebp
mov
sub
out
mov
cwtl
fsubr
ret
pop
imul
ja
mov
dec
js
jnp
inc
int
pusha
lahf
cmp
jne
mov
gs
fadds
adc
icebp
jnp
imul
test
push
mov
and
mov
hlt
dec
dec
push
dec
gs
enter
mov
cmpsb
pusha
mov
rorb
jge
cli
mov
sub
or
mov
dec
fisubrl
sbb
nop
add
mov
mov
scas
push
int
mov
mov
push
dec
mov
js
cmp
mov
mov
push
cmp
mov
xchg
ror
js
decb
das
inc
jne
cltd
testl
imulb
inc
nop
xchg
xor
mov
dec
jae
pushl
cmp
pop
adc
loop
aad
stos
sub
inc
xchg
xor
jns
sahf
and
dec
pop
mov
cmp
sub
jae
stos
cmc
adc
ljmp
mov
jae
jnp
add
in
xchg
out
push
lods
add
cmp
rolb
cld
shlb
stos
xchg
enter
jle
fwait
cmpsl
mov
popa
dec
cmp
lret
scas
push
lret
adc
mov
mov
adc
jle
dec
les
div
aam
fisubs
mov
push
call
jo
rcrb
ret
jmp
in
and
shll
daa
es
push
fildll
rorb
out
mov
push
pop
mov
lea
out
out
and
test
and
xchg
jns
xor
pop
lods
daa
push
stos
add
xlat
xchg
in
ds
imull
mov
xchg
mov
pop
loope
adc
adcb
mov
add
dec
dec
shrl
and
fstpt
ja
lret
in
mov
rcr
jg
mov
xor
sbb
or
push
gs
and
inc
inc
or
xor
mov
xlat
inc
push
lret
mov
lcall
cmpsb
lcall
rcrb
xchg
fnstsw
and
movsb
or
inc
movsl
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
test
and
pop
jl
jle
cmp
lret
ds
jb
fisubs
cmc
fdivrl
fwait
shlb
lods
ret
or
xchg
gs
inc
pop
adc
pop
int3
lock
inc
fwait
pop
adc
sbb
xor
xchg
lods
int
add
imul
mov
inc
aad
into
jne
mov
cld
ja
pop
sub
push
and
in
call
push
clc
testb
adc
lds
fists
jp
cld
aam
je
cmc
jno
xchg
xchg
rcr
iret
clc
into
hlt
fadds
dec
out
or
movsl
or
lods
scas
mov
sbb
push
shr
bound
mov
and
call
jmp
pop
adc
pop
mov
sbb
hlt
lods
cmp
mov
inc
icebp
out
add
rorb
in
and
cmp
imul
stos
jecxz
dec
or
jne
rcr
lret
pusha
enter
cmpl
pusha
jge
pop
xchg
sbb
je
pusha
out
adc
fadd
iret
fistpl
pop
xor
sbb
into
adc
and
cmp
les
mov
sbb
jle
and
pop
jecxz
out
pop
repnz
mov
aas
outsb
xchg
push
xchg
cmp
adc
lret
scas
mov
push
mov
sub
inc
scas
call
fs
outsl
rcrl
stc
dec
fstps
lret
sarl
dec
dec
push
dec
or
sub
lcall
int3
std
jne
adc
mov
test
sti
out
mov
pop
inc
mov
out
adc
lea
mov
push
pop
gs
iret
orb
test
data16
jecxz
int3
call
adcb
and
mov
cmpsb
aam
ror
fimull
rorb
clc
cmp
xchg
mov
dec
sub
dec
sbb
mov
xchg
mov
loope
insb
movb
mov
int3
pop
sbb
pop
pop
mov
push
sub
cmpsl
int3
sub
mov
lahf
pop
push
or
nop
popa
pushf
loopne
les
add
stos
adc
ds
mov
mov
sub
rorb
inc
add
or
sbb
aad
or
xchg
cld
sbb
aaa
js
fistpl
or
movd
pop
ret
xchg
dec
xchg
jo
pop
ljmp
popa
mov
ret
out
ret
addb
jecxz
sub
mov
cltd
inc
xchg
push
enter
mov
mov
adcl
in
fsubs
shll
iret
lds
inc
and
out
lock
leave
push
sbb
pushf
mov
lock
inc
inc
out
lock
ffree
xlat
out
outsb
enter
mov
push
pop
jp
gs
bound
jns
jb
sub
and
cld
cltd
jae
pop
adc
int3
or
rcr
inc
ss
add
fs
fs
fwait
pop
sti
mov
in
push
pop
mov
inc
push
out
loopne
aas
xor
repnz
jp
cmp
hlt
xchg
cwtl
inc
sarl
scas
imul
popa
add
pop
xchg
sahf
imul
ja
mov
rcr
fdivrs
dec
inc
inc
les
in
pusha
inc
xchg
imul
in
mov
cmpb
popf
test
scas
mov
push
sbb
cmp
mov
dec
notb
jmp
test
sub
xor
insb
imul
jl
sti
shll
sub
xor
lock
jns
and
pop
push
push
inc
push
sbb
mov
mov
push
adc
mov
sub
or
popa
sbb
out
lock
int3
jnp
push
or
xchg
inc
cwtl
sbb
xor
rcr
or
insl
leave
jecxz
mov
xlat
fs
in
push
fildll
dec
mov
jb
outsl
orl
mov
aas
push
sub
add
js
cltd
aas
jae
lret
xor
cmp
out
mull
jmp
push
leave
jg
dec
sbb
test
or
popa
fdivrs
mov
xchg
imul
push
icebp
cmp
mov
cs
xchg
xchg
in
sti
sbb
adc
mov
dec
and
mov
or
xchg
mov
mov
jb
loop
jnp
pop
and
rclb
icebp
rcrl
clc
cli
sub
mov
xchg
lods
cmpl
aam
xor
or
dec
add
or
sbb
int
fwait
mov
add
push
mov
jge
and
scas
call
xor
subl
andl
in
inc
mov
push
out
lret
fdivrl
sbb
arpl
cmp
xlat
test
mov
daa
xor
sbb
pushf
jmp
mov
fstl
adc
or
jg
dec
daa
add
rorl
popf
scas
movsl
sbb
clc
popa
fidivl
cmc
add
and
dec
test
int
cmpsb
outsl
cli
mov
sub
jae
push
test
test
adc
push
fisubrl
mov
pop
out
js
cmpsb
mov
xchg
push
frstor
les
sti
xchg
ja
loope
ret
roll
jl
call
sbb
xchg
iret
in
addr16
enter
push
int3
xor
das
pop
lret
xchg
cmp
aad
jae
mov
mov
sbb
movsb
sti
mov
xchg
and
mov
out
stos
iret
sti
nop
sub
inc
pop
and
xor
mov
sub
idivl
je
std
call
movsl
adc
xchg
add
in
ret
mov
cmc
push
mov
orb
lods
sbb
popf
add
in
mov
and
jge
xchg
sbb
mov
lret
cmp
fwait
inc
lcall
repnz
int3
mov
popf
addr16
pop
aaa
out
js
cmp
das
xchg
pminub
scas
je
or
jecxz
ret
sub
clc
out
cld
call
mov
push
jno
xor
and
adc
pusha
ds
mov
pop
push
orl
sbb
adc
push
aam
fnsetpm(287
ja
xlat
adc
sbb
inc
mov
mov
add
call
fld
lahf
sbb
stos
add
mov
jp
lret
ja
dec
dec
in
xor
stos
js
mov
push
inc
mov
pop
mov
scas
mov
adc
popf
push
aam
nop
int
mov
je
lcall
aas
movsb
out
or
lods
aas
inc
sub
or
aas
dec
lea
lcall
ret
scas
push
sbb
pusha
adc
sub
pop
pop
ja
mov
sbb
insb
dec
mov
push
das
or
inc
jb
push
int3
jb
adc
lcall
loopne
mov
sahf
lods
mov
sub
ret
mov
ret
cmpsl
push
cmp
rcrb
mulb
adc
mov
pop
hlt
push
fldcw
or
mov
out
sub
fidivs
or
inc
or
jge
push
push
or
cwtl
mov
dec
call
jns
cmpsl
pop
int3
cmpsl
sti
jbe
pushf
stos
jno
sub
pop
loopne
cs
fisubl
push
sub
ljmp
mov
dec
sub
outsl
fs
push
inc
scas
pop
test
xchg
pop
fiaddl
sub
gs
jb
xchg
jle
dec
mov
push
ret
sti
ss
mov
and
pop
and
adc
inc
adc
leave
cmc
std
pop
repnz
mov
std
push
stos
pop
sbb
adc
negl
dec
mov
les
mov
sub
and
and
pop
hlt
ds
sub
pop
btc
and
decb
dec
mov
aas
inc
adc
faddl
loope
xchg
icebp
stos
in
mov
add
sub
sbb
inc
or
dec
das
add
repz
ror
and
mov
imul
mov
or
xchg
popf
and
stc
dec
dec
ja
mov
insl
cmpsb
cmp
push
out
lahf
cmp
idivl
jg
fldenv
jns
rol
in
push
or
xchg
fldt
inc
pop
sub
adc
sbb
lds
imul
mov
dec
pusha
inc
and
cmp
sub
push
jne
popf
aam
pushf
je
add
xchg
sbb
sub
sub
pop
add
dec
inc
or
fcomps
cmp
lea
ja
mov
ret
rolb
dec
cmpsb
lds
pushf
pusha
imul
jg
in
push
cmc
sbb
dec
repnz
pop
mov
push
push
mov
jae
pop
mov
and
xchg
shll
sbb
inc
sub
push
push
cmp
dec
fidivrl
lret
cmp
loopne
dec
or
loopne
jl
jg
loopne
adcb
pop
into
enter
xor
jnp
sbb
sub
pop
shlb
lods
mov
popa
fcoml
jl
xchg
lcall
pop
dec
repz
jo
movsl
aas
lret
lds
aas
data16
mov
ljmp
fnsave
sar
jae
mov
lret
sub
sbb
fistpl
dec
jo
call
insb
pop
or
fsubl
mov
jle
mov
or
jnp
out
jae,pt
add
loope
movsb
dec
shll
xchg
rorl
and
inc
sbb
cmpsl
iret
ljmp
lods
frstor
mov
or
dec
popa
mov
divl
rclb
inc
xchg
cltd
jmp
lcall
rcll
jb
xchg
dec
fistpll
test
jbe
test
mov
inc
adc
dec
cmovl
fwait
movsl
in
push
xchg
jg
loop
into
mov
jo
push
lds
jge
mov
or
es
cmp
fsubrs
inc
mov
popf
movsb
inc
sbb
sub
adc
aas
mov
jl
jnp
icebp
push
pushf
cmp
outsb
repnz
test
mov
leave
xchg
inc
inc
lock
cmp
test
test
pop
out
mov
repz
and
cwtl
test
mov
sbb
mov
pop
iret
out
jl
push
lcall
stc
testb
test
inc
jbe
sub
cmp
nop
jg
adc
mov
fwait
jne
xchg
ret
mov
fildll
insb
cmp
lea
add
mov
imul
cli
cltd
add
loop
rcrb
sub
rorl
pop
movsl
ds
inc
inc
jmp
divl
sub
jo
in
shr
jne
fdivrl
add
sub
jbe
add
pusha
mov
xor
cmp
fucompp
jno
test
mov
out
fisubrs
addl
decl
push
and
push
stos
dec
and
mov
push
sarl
adc
lds
or
aam
cmpsl
arpl
adc
hlt
pop
lahf
fists
ret
fisubl
scas
or
cmp
mov
jnp
jae
dec
stos
cmpsb
sbb
ret
fwait
jle
jle
je
add
cmc
jb
adc
shlb
mov
jne
insl
popl
jmp
push
call
das
cmc
sbbb
cmp
aas
repz
out
pushl
movsb
cli
pop
jecxz
sub
mov
movsb
pop
mov
mov
add
int
ds
out
mov
sbb
dec
jle
movsl
push
out
cmc
cmc
add
jo
imul
js
or
repz
ret
sbb
push
inc
pop
std
cmp
hlt
loopne
mov
add
orl
jge
lret
bound
jp
pop
repz
arpl
enter
test
repz
lods
lods
lea
xor
dec
fisttpll
sbb
stc
and
inc
adc
lea
sub
outsl
call
shl
jp
pop
and
push
xchg
repnz
insb
dec
insb
sub
mov
hlt
sbb
xor
mov
fcoms
xor
pop
push
add
and
xchg
std
xor
xor
mov
add
and
filds
mov
pushf
mov
aaa
out
int
or
dec
cmpsl
push
into
mov
pop
lret
pop
mov
and
mov
and
sub
loopne
popf
cltd
and
mov
lds
or
inc
test
into
mov
ds
sub
jnp
pop
das
cmp
cli
adc
mov
loope
mov
jno
ficompl
scas
popf
xor
jnp
js
loope
pushf
aam
out
orps
cmp
clc
jl
dec
mov
aas
shlb
and
add
lret
xor
cmpsl
dec
call
xchg
icebp
xchg
in
aas
not
jle
pop
push
in
arpl
stos
adc
xchg
push
stos
test
add
loope
rcll
leave
ljmp
aam
js
aad
and
mov
sbb
rcll
lds
loope
or
push
repz
fstpt
mov
lods
mov
add
jmp
mov
addr16
cli
fs
cmpsb
dec
mov
sbb
repz
outsl
sbb
cmp
add
sahf
sub
stos
push
mov
xor
xchg
divl
xor
inc
add
jp
mov
out
xor
jp
sar
stos
sub
in
mov
push
pop
std
mov
jg
adc
add
hlt
xchg
les
xor
xchg
popa
lods
inc
cmp
inc
sbb
stc
mov
cs
push
cmc
jno
scas
outsb
inc
sbb
outsl
cmc
dec
pushf
rcl
sbb
mov
iret
ss
mov
decl
cwtl
mov
push
call
sbb
cwtl
ficoml
push
int
and
lea
push
arpl
inc
mov
out
or
cwtl
xlat
cmp
mov
mov
inc
adc
les
je
gs
mov
ljmp
dec
test
dec
imul
lods
lahf
cmpb
stos
movsl
pop
or
leave
xor
fidivrl
mov
push
je
outsl
xor
add
inc
cmpsb
mov
add
cmp
rcrb
dec
sub
cs
mov
pop
loopne
into
push
push
inc
or
in
push
pop
aas
xchg
insl
daa
push
stc
xchg
fsub
rolb
push
sahf
sub
sub
leave
fistpl
add
jno
push
sbb
inc
mov
push
sbbb
jb
mov
scas
push
and
sbb
lahf
xor
push
mov
sbb
add
insl
sub
jp
xchg
or
mov
pop
inc
bound
sbb
inc
lock
add
sbbl
jbe
or
jae
int
xchg
repnz
sarb
shrl
les
andl
cmp
xlat
mov
dec
in
jae
dec
pushf
mov
sti
mov
sub
aaa
inc
daa
mov
push
cmpsb
xchg
inc
dec
mov
inc
xlat
adc
jge
sub
jb
inc
insb
cmp
pusha
filds
adc
sub
mov
imul
imul
cmp
orl
push
fmull
ja
sbb
cmp
andl
mov
dec
lock
jbe
inc
or
in
stc
cltd
mov
enter
idivl
dec
andl
shll
inc
jo
push
out
mov
push
cld
inc
psubusw
stos
mov
lods
enter
push
mov
ret
sub
fs
mov
mov
int3
rcrl
outsl
lds
adc
mov
xchg
jl
movl
mov
mov
je
sbb
cwtl
mov
das
mov
mov
notl
daa
popa
movsb
repz
fistl
cmp
cmp
ds
mov
dec
popf
push
cmp
sbb
and
int3
sar
push
add
js
je
int3
xor
das
push
pop
adc
dec
scas
in
xor
mov
jns
gs
lea
lcall
inc
insb
repz
stc
insb
loopne
test
mov
push
fadd
cmc
sub
in
and
inc
xor
stos
leave
xchg
push
jb
or
push
inc
or
fnstsw
in
mov
roll
sub
rcll
js
mov
cli
xchg
adc
dec
mov
loop
movsl
jl
js
add
inc
push
addr16
loopne
xchg
leave
fistl
pusha
out
ds
inc
mov
sbb
lcall
int3
push
cmpsb
inc
out
jge
and
inc
lahf
test
lock
pop
mov
cmp
jno
arpl
sub
xchg
add
movsl
xchg
mov
xchg
fsubp
jno
dec
lock
sahf
mov
test
inc
add
inc
jns
mov
enter
cli
mov
mov
and
out
movsb
add
fbstp
lods
int3
lock
inc
and
xor
sub
push
test
xchg
xchg
jne
dec
and
push
stc
inc
in
sub
cmc
inc
rcrl
fiaddl
sbb
mov
mov
cwtl
jge
ret
scas
popf
frstor
jbe
aas
mov
fcmovnbe
in
xchg
or
add
nop
or
xor
pop
mov
ljmp
dec
test
incl
lcall
test
push
imul
jmp
pop
inc
js
push
test
or
fwait
add
dec
jecxz
xor
mov
cmp
adc
inc
repnz
sbb
ffree
xchg
pop
dec
aad
push
mov
sub
aad
mov
int
push
sbbl
mov
and
lahf
cmp
and
rcl
mov
sbb
rcrl
jl
sub
mov
push
leave
sbb
mov
pinsrw
pop
std
mov
movsb
movsl
aas
sub
ljmp
push
lea
sub
cmp
jo
mov
mov
clc
addr16
adc
lods
pop
aaa
flds
das
sub
and
mov
sub
sbb
test
psadbw
xor
jg
mov
cmp
loopne
cmp
inc
roll
leave
lods
cmp
gs
sbb
cltd
inc
orl
cmp
sub
xchg
mov
out
inc
fs
insb
mov
imul
xor
adc
and
mov
lock
mov
outsl
pop
xchg
stos
fbstp
jl
jle
sbb
or
out
insb
xchg
sbb
and
jg
push
jo
adc
and
movsb
or
test
mov
mov
pop
ror
pop
mov
loopne
sbb
jg
mov
aam
in
shrl
pusha
and
pop
push
movsl
jmp
fnstsw
aaa
bound
and
js
out
ja
pop
sbb
pop
inc
into
pop
sub
or
je
out
inc
pop
pop
out
inc
jbe,pt
aam
pusha
mov
pop
and
and
sbb
push
in
add
xlat
xchg
js
sarb
jecxz
sbbb
or
and
sbb
fisubrs
adc
xor
inc
and
cmpsb
lock
fsubr
jp
jecxz
or
mov
sbb
dec
shl
or
mov
mov
jne
xchg
test
mov
out
or
cmpsl
sbb
popf
insb
fwait
lahf
mov
adc
insb
outsb
imul
mov
fstps
rcll
aad
frstor
dec
xor
xor
add
shlb
dec
lcall
mov
adc
cmp
dec
mov
adc
pop
dec
or
cmp
mov
push
adc
push
fs
aad
shrl
cltd
icebp
add
inc
repnz
sbb
repz
fsubl
mov
icebp
std
mov
jne
pop
mov
inc
rol
addr16
add
push
mov
data16
hlt
mov
mov
inc
inc
sub
adc
sub
and
mov
das
push
test
push
sahf
cwtl
mov
adc
push
mov
jbe
or
add
inc
fmull
pop
sbb
push
out
sti
push
sti
xchg
lea
loop
lret
or
add
in
int
push
jae
out
mov
mov
lret
dec
icebp
mov
cmc
neg
int3
xchg
inc
in
dec
and
xchg
fwait
stc
sub
repnz
push
xchg
cmpsl
ret
mov
sbb
aaa
pop
or
adc
mov
icebp
out
inc
int
cmp
int3
je
daa
insl
mov
popf
dec
and
push
fisttpl
xor
fnstenv
push
inc
fstps
fnsetpm(287
icebp
push
movsb
pop
ss
popf
divl
popf
mov
outsl
add
lods
ja
fs
add
icebp
cltd
cmp
cs
aas
shll
mov
out
fisttpl
ljmp
cmp
jmp
out
sbb
daa
jp
pop
push
jne
cmp
adc
jl,pn
add
pusha
in
or
and
mov
jne
bound
fcomp
icebp
ljmp
dec
dec
ret
xlat
pop
and
pop
xchg
cwtl
and
mov
sub
jp
mov
xchg
push
aas
fcomps
cs
xchg
jg
lods
mov
mov
rorl
xchg
xchg
dec
cwtl
xor
dec
pop
push
jle
dec
pop
pop
aam
add
inc
testb
lds
cmc
insl
sub
daa
add
mov
cmpsl
fs
pop
mov
push
sbb
mov
jg
dec
mov
jecxz
cmp
cltd
sbb
dec
das
sub
fsubrs
cltd
mov
push
lahf
xchg
shr
inc
pusha
mov
adc
and
xchg
fimull
in
ss
and
xchg
cmc
sub
sahf
sbb
movsb
in
inc
mov
mov
roll
repnz
push
into
clc
imul
push
in
ljmp
fs
mov
pop
aaa
adc
cmp
gs
cmpsb
cmp
inc
push
push
cwtl
cli
inc
loopne
sbbl
test
mov
or
jmp
sti
ja
std
sbb
enter
mov
pop
arpl
mov
jge
xor
inc
ljmp
call
insb
into
loope
test
mov
pop
aad
inc
inc
adc
add
cmpsl
push
pop
sub
leave
xlat
pusha
int
adc
lcall
jecxz
cli
mov
lret
or
pop
add
cmp
out
out
push
outsb
mov
lret
lds
fmuls
cltd
and
imul
ja
mov
fs
imul
adc
cmp
mov
mov
mov
sbb
fcmovu
dec
xchg
push
aam
sbb
mov
cld
popf
or
dec
jno
jle
jg
das
out
inc
mov
add
mov
push
mov
fwait
jo
mov
stc
xor
lock
jecxz
mov
adc
lods
arpl
pusha
xchg
notb
cmpsb
arpl
cmp
mov
mov
mov
call
fistl
test
fsts
fs
mov
push
jb
sti
test
sbb
stos
clc
add
push
lds
addr16
arpl
insb
mov
in
jnp
adc
ror
pushf
inc
or
push
add
cmp
into
pop
in
cmp
mov
push
dec
andl
pop
scas
sub
test
ljmp
aaa
dec
das
in
mov
out
mov
jnp
aam
repnz
hlt
addr16
push
repz
mov
test
inc
repz
mov
int
je
mov
jle
mov
xor
lods
ret
loop
xorl
jo
mov
adc
cmp
jg
out
xorl
push
jmp
pop
clc
xchg
jb
nop
lcall
mov
push
xchg
rorb
aad
adc
mov
jae
lods
or
jp
push
mov
and
enter
mov
xchg
push
and
adc
or
cmp
mov
sbb
add
xor
lcall
pushf
dec
or
xchg
fcoms
test
jecxz
gs
aas
ja
imul
jns
and
rclb
imul
das
mov
cmp
pop
rcl
aad
cmp
nop
add
scas
mov
outsl
sti
mov
xor
dec
and
cwtl
xchg
mov
cmp
pushf
cmpsl
int
adc
cld
shrl
lock
loop
pop
std
movsb
jno
mov
mov
and
push
js
jnp
jnp
movsl
add
cmovns
stos
add
cmp
testb
and
xor
sbb
and
or
push
lods
xchg
and
inc
lret
pop
fs
into
testb
sbb
mov
out
pusha
rorl
je,pt
xor
or
in
push
shrl
sarl
stos
xorl
movsb
cmp
sbb
push
dec
sbb
mov
cmc
jnp
inc
pop
js
imul
in
xchg
jge
pop
mov
fisttpl
cmpsb
lcall
std
sub
sbb
fwait
cld
fldt
xor
or
rcll
mov
loope
inc
loop
or
pop
push
rolb
sahf
sub
adc
inc
and
ret
enter
mov
cmp
in
cli
xor
mov
ljmp
xchg
dec
xchg
pop
popa
pop
pop
push
cmc
pop
outsl
loopne
adc
pop
add
xchg
fs
add
xor
lcall
mov
pop
xchg
mov
inc
pop
or
popf
mov
sub
pop
orl
or
sahf
sbb
xchg
mov
imul
out
pop
loope
sub
fwait
lods
xchg
and
push
frstor
lcall
stc
addr16
cmc
int3
dec
and
mov
mov
mov
or
pop
add
xor
push
add
daa
ss
dec
mov
mov
imul
hlt
aad
cmp
les
push
push
icebp
xchg
push
push
jl
adc
fisttpll
xchg
sub
lock
fiaddl
fistpll
push
imul
jae
imul
scas
popa
sti
popa
test
aas
xor
sub
test
test
mov
or
add
inc
xlat
popa
inc
xor
je
imul
in
cmp
adc
xchg
mov
mov
loopne
mov
ja
mov
repnz
inc
pop
mov
adc
xchg
cltd
insb
or
xchg
push
cmpsb
mov
mov
movsb
mov
dec
cld
sub
pop
lcall
gs
xchg
jbe
sub
jmp
loope
push
scas
xor
sub
dec
mov
sub
dec
jo
bound
gs
data16
add
fildl
mov
out
add
into
fnstcw
loopne
cmpsl
mov
sti
and
adc
sub
loopne,pt
in
sarl
mov
pusha
mov
sbb
xchg
leave
cltd
jecxz
daa
aad
sub
sbb
mov
imul
pop
call
inc
lret
out
pop
inc
ret
sub
testl
in
jl
shl
inc
std
cld
imul
cmp
lret
pop
xchg
or
xlat
push
loope
test
inc
and
add
push
xchg
leave
xchg
push
rclb
inc
mov
xchg
js
enter
sub
xchg
push
jb
clc
push
jnp
adc
mov
xor
cmp
ljmp
loop
pop
pop
fidivrs
mov
cld
scas
pop
push
leave
and
sti
cmp
sahf
jnp
pop
mov
and
lret
pop
insb
loop
and
pop
add
stos
rol
pop
adc
das
dec
push
mov
js
fmul
mov
dec
test
fidivrs
outsl
aas
xor
push
fs
cmp
popf
lock
dec
fnsave
xchg
pop
adc
fisttps
mov
add
test
shll
shlb
or
push
cmpsl
mov
cmc
jg
push
outsl
out
or
sub
fcoml
jne
enter
xchg
mov
sbb
push
xchg
movsb
push
mov
jns
inc
fidivrl
and
aas
mov
int
aas
jl
sub
xchg
movsl
arpl
loopne
inc
mov
arpl
xchg
clc
or
arpl
in
inc
mov
push
lea
and
xor
outsb
fwait
xchg
jge
imull
push
cmpsl
aaa
int
xchg
jecxz
mov
sahf
jne
jns
gs
and
mov
or
cs
xor
pop
mov
mov
mov
mov
mov
lods
dec
sbb
inc
dec
movb
jbe
rolb
testb
imul
jle
xchg
mov
shrl
fincstp
lret
arpl
push
jmp
pop
lcall
mov
nop
cld
dec
shlb
mov
adc
push
jb
push
sub
xor
int3
leave
lds
mov
test
fistps
add
pushf
sub
dec
add
adc
mov
push
std
int3
divb
push
stos
std
ficomps
sti
int
mov
scas
ret
pop
pop
mov
std
sbb
jl
sub
in
insb
mov
scas
inc
mov
sbb
dec
gs
xchg
or
xor
and
cmp
mov
jo
addl
xchg
mov
iret
dec
add
lret
push
mov
mov
mov
push
ja
or
mov
inc
mov
jg
adc
cmc
or
ret
ss
out
mov
in
je
pop
pop
aam
add
gs
dec
aam
push
adc
dec
xchg
es
or
and
and
loope
fnstcw
mov
mov
ds
xor
dec
outsb
sub
xchg
adc
lea
pop
lret
pop
in
popa
fs
xchg
jp
ja
pusha
sarl
add
test
movsl
or
ss
shr
mov
add
xchg
mov
ret
jmp
mov
in
sarl
sub
out
cmp
leave
stos
mov
cs
pop
push
xlat
dec
ret
ret
out
cmp
or
aad
jnp
adc
test
push
or
out
clc
push
dec
pop
dec
adc
test
into
into
mov
test
jmp
pop
push
popf
iret
mov
xchg
hlt
sbb
call
ffreep
add
adcl
cmpsb
fnstsw
movsl
lret
aaa
aam
sqrtps
pop
int
int3
xchg
add
jo
shlb
xor
out
cmpsl
xor
push
cli
lcall
mov
adc
pop
punpckhdq
insb
push
lods
mov
cmp
mov
jns
and
push
out
mulb
mov
incb
addl
push
add
decb
and
xor
hlt
sbb
push
arpl
mov
inc
jle
jmp
jg
dec
add
inc
mov
lcall
or
repnz
lret
mov
and
jns
daa
xchg
stc
andb
jnp
add
cli
dec
mov
das
add
add
dec
shr
sbb
add
shll
push
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
sahf
sbb
daa
push
jl
pop
pop
jl
stos
add
adc
into
push
pop
sbb
lods
dec
in
xchg
jl
dec
test
sub
mov
imul
pop
addb
js
dec
and
or
aaa
test
jp
lret
mov
lahf
push
sub
xchg
cli
adc
sub
in
xor
clc
mov
jecxz
sbb
pop
std
fwait
std
jns
sbb
test
jg
out
into
bound
insl
xchg
clc
or
dec
mov
repz
xchg
outsl
movsb
mov
cmpsb
adcb
fnstenv
add
push
or
leave
leave
sub
dec
repz
push
and
pusha
fldl
xchg
mov
sar
mov
mov
addr16
sbb
jnp
jle
pop
pop
clc
popf
ret
outsl
xchg
cmpl
xchg
push
dec
stos
xor
jae
jbe
lock
mov
pop
aas
dec
sub
shrl
dec
mov
mov
inc
push
adc
mov
mov
xlat
sub
jns
jns
das
sub
mov
xchg
push
xor
fs
add
enter
jb
and
adc
shl
pop
mov
stc
aad
push
pusha
js
xchg
pop
xchg
cwtl
inc
pop
mov
xor
ret
and
add
fstps
loopne
xchg
adc
lret
ja
jp
xor
enter
hlt
adcb
decb
pop
jp
stos
xchg
push
fcomps
popa
lahf
add
imul
or
outsl
pop
lahf
scas
mov
int
lcall
pusha
adc
pop
pop
add
cltd
addb
orl
sub
aad
aaa
and
mov
lds
inc
adc
je
stos
sbb
xor
std
push
pop
lahf
mov
or
pop
fwait
push
hlt
xor
fidivl
pop
sbb
add
imul
std
add
dec
jmp
sub
fsubrl
bound
in
cmc
loopne
mov
fsubl
sub
stos
cld
inc
lcall
xchg
daa
cmp
or
mov
jb
xchg
cli
mov
fstpl
es
xor
cmp
push
pop
aaa
jmp
test
call
dec
mov
loopne
mov
lods
movsl
insb
loopne
cmp
jl
push
sbb
sahf
xchg
sbb
sahf
movsb
rcrl
inc
in
push
fsubrs
testb
je
ret
daa
leave
or
mov
cmp
cmp
dec
sub
fisubl
dec
lods
or
dec
js
lea
sbb
lret
test
or
subl
pusha
rcrl
jno
xchg
ret
aaa
add
cs
or
sbb
jp
jp
adc
insl
xchg
sub
dec
xor
in
add
cs
mov
mov
outsl
push
sbb
sahf
leave
and
mov
out
cs
hlt
push
sti
jg
clc
fildl
and
jg
cmp
push
jns
mov
jb
sbb
adc
outsl
ficomps
adc
mov
call
mov
mov
data16
inc
sarb
add
gs
int3
xchg
shrl
add
sub
movsl
addr16
pop
pop
or
mov
fdivrl
test
xchg
mov
lahf
test
call
lret
lcall
or
dec
add
xchg
pop
jmp
dec
out
rolb
cmpl
js
mov
cmc
mov
andl
imul
stos
cmpsb
mov
push
sbb
cmpb
stc
loop
inc
lcall
mov
mov
enter
dec
mov
xchg
or
dec
push
mov
mov
pop
pushf
mov
test
jnp
movsl
jp
push
xchg
jae
pop
add
cs
leave
jecxz
push
cmpsb
mov
ja
mov
in
roll
out
mov
pop
sub
or
repz
inc
hlt
sti
lods
adc
lods
mov
sbb
jle
dec
stos
stc
stos
fildl
orb
mov
fldcw
jb
and
push
lahf
mov
xor
fcompl
sub
xchg
mov
mov
inc
and
xorl
jmp
xchg
enter
adc
outsb
add
stos
test
xor
loop
cmpsl
push
jmp
xchg
jae
jl
jnp
or
inc
mov
aam
add
xorl
dec
push
dec
mov
cmovo
fcmovnu
js
cs
enter
push
adc
cltd
insl
xor
mov
adc
iret
push
out
movsb
cmp
mov
or
inc
push
cmp
aad
jge
sub
cs
ja
loopne
lret
mov
je
mov
rcrb
imul
xchg
or
push
fs
push
int3
fwait
gs
sbb
sub
fabs
in
daa
mov
imul
push
pop
add
sbb
hlt
jmp
in
ja
in
lret
jns
mov
mov
popa
jnp
lds
push
lahf
aam
push
mov
lcall
mov
inc
mov
mov
shl
int
bound
add
mov
data16
sahf
cltd
jne
mov
and
mov
push
pop
popf
mov
mov
inc
fs
dec
dec
loop
loopne
or
xchg
imul
push
ja
movsb
cs
mov
add
rep
std
iret
xor
pusha
xchg
cwtl
sbb
adc
les
aam
cmp
sarb
cmp
inc
in
cld
and
or
lret
inc
xchg
xchg
lret
adc
add
pop
xchg
or
insl
or
in
pop
scas
xor
in
sbb
sbb
add
std
and
scas
enter
lea
fwait
xlat
mov
mov
icebp
rcrl
lods
aam
sub
movsl
adc
mov
ror
dec
pushf
push
jns
loope
dec
lret
stc
aas
mov
gs
test
inc
inc
rclb
and
bound
test
xchg
dec
lock
iret
fucomip
addr16
lret
dec
add
out
inc
sbb
and
lods
aam
cli
add
lods
dec
lahf
mov
dec
movsb
lods
cmp
jne
xor
loope
fsubr
xchg
dec
loop
test
mov
scas
cmc
mov
rolb
lahf
xchg
outsb
loop
in
imul
imul
push
movsb
sbb
mov
out
aam
sub
pop
sbb
and
call
mov
lcall
iret
add
popf
dec
lods
xchg
sarl
das
push
xchg
pushl
sbb
jb
or
jl
jo
fcmovnbe
lds
or
mov
add
mov
je
subb
jae
aas
aas
loope
fcoms
xchg
dec
fsubrs
movsb
jmp
lret
mov
es
stos
fldl
out
xor
sub
sub
test
insl
lret
ja
adc
dec
insl
and
hlt
jge
aas
popf
xchg
std
push
mov
push
bound
daa
in
mov
push
pop
shll
pop
data16
mov
cltd
pop
test
ret
lea
xchg
adc
mov
pop
fwait
ret
push
inc
sbb
dec
push
or
mov
fmuls
ljmp
aaa
test
scas
dec
test
mov
cmp
sahf
aad
fwait
sub
xchg
rcrb
xchg
dec
lock
sub
push
sbb
mov
mov
lock
or
xchg
mov
xchg
fdivrl
movsl
shlb
pop
repz
dec
pop
xor
push
subl
test
jle
lahf
ljmp
mov
test
es
ret
dec
scas
dec
into
leave
jnp
clc
and
ret
ret
shlb
outsl
lods
mov
xlat
roll
mov
jg
pop
push
rolb
je
cmpsl
pusha
repz
lods
mov
nop
sub
cmpsb
rcr
repz
insb
adc
pop
pop
jnp
mov
sbb
cmpsl
fs
popa
adc
jp
lock
dec
jecxz
add
ja,pt
das
movsl
dec
clc
stc
or
mov
repz
rcrb
jbe
mov
add
jge
cmc
in
inc
sti
sbb
mov
push
push
add
inc
cmp
scas
jns
xor
fdivrl
sbb
in
mov
pushf
mov
push
cs
movsb
popa
or
ficomps
mov
push
cs
xchg
or
aam
loop
xchg
sahf
xchg
sub
fsts
fisubrs
mov
jne
mov
jg
dec
jbe
push
out
fidivrl
cmc
ljmp
cmp
push
mov
mov
je
inc
in
adc
mov
cmc
movsl
adc
pop
mov
mov
mov
push
xor
cli
mov
fiaddl
in
add
pushf
movsb
xor
mov
ret
cmp
lock
adc
add
ds
dec
and
cwtd
or
lcall
jo
lret
js
outsl
rorb
out
imul
xor
cmc
fsubrs
lea
pop
stos
push
xchg
mov
push
xchg
sbb
or
jb
dec
es
inc
ret
cmpsl
aam
pushf
rcll
pop
cmp
ss
or
fimull
lds
aas
fbld
sbb
xlat
sbbl
cmp
sbb
addr16
cmp
push
cld
mov
sti
rolw
in
pop
enter
mov
sbb
testl
out
repz
adc
sub
inc
xchg
lods
cltd
push
shl
loope
sub
mov
into
mov
lea
pop
inc
jecxz
lds
and
push
ret
test
mov
dec
ret
ss
jg
out
add
int
das
or
cmp
adc
xchg
int3
scas
dec
cltd
lahf
insb
mov
pushf
loop
pop
jnp
fdivrs
ds
add
das
lods
or
jmp
xor
sti
stos
sahf
pop
cmc
lahf
pop
roll
pop
cmp
enter
and
dec
pop
hlt
inc
aaa
fldlg2
lods
aaa
inc
sbb
or
loop
jle
jmp
popf
sbb
iret
cmc
push
call
scas
dec
inc
and
incl
xchg
cmp
and
ss
add
sub
lret
leave
sarl
rclb
sub
fs
enter
fildl
mov
dec
nop
xchg
jecxz
outsb
jno
dec
mov
pushf
gs
mov
mov
flds
out
enter
call
pop
add
sub
cwtl
aam
add
outsl
push
jge
roll
mov
xchg
mov
rolb
jno
and
pop
mov
xchg
jl
mov
mov
in
xlat
lret
pop
je
mov
jb
sti
xchg
adc
in
cmp
mov
sbb
add
lcall
mov
arpl
das
jle
mov
repz
rclb
adc
sbb
xchg
cmp
test
bound
mov
mov
js
mov
test
test
mov
mov
mov
in
out
rcr
icebp
xor
in
out
dec
adc
inc
xchg
js
cmp
call
test
inc
mov
inc
mov
cmp
or
fwait
imul
je
and
in
addr16
das
addl
xchg
xorb
cmp
repz
mov
insl
add
lds
test
out
dec
jne
push
aaa
cmp
cmp
jecxz
jge
and
movsl
and
out
fidivl
mov
in
les
popf
and
pop
rcr
xor
loopne
movsb
ss
stos
pop
lods
jnp
in
and
jae
rcrl
add
add
sub
loop
dec
mov
jecxz
fs
shll
roll
movl
out
clc
aad
daa
jg
adc
call
movsl
cltd
pop
sbb
jl
loopne
sub
mov
mov
cmpsl
or
inc
cld
fucomp
xlat
sbb
xor
sbb
sbb
stos
jl
mov
dec
cwtl
push
jns
dec
outsl
xchg
mov
je
icebp
std
sbb
sarb
dec
out
lock
mov
test
xor
push
pop
jae
repz
push
jbe
inc
call
test
and
mov
xchg
pop
push
jb
mov
jns
cwtl
and
arpl
mov
mov
imul
aaa
sbb
pop
xchg
xchg
mov
cmpsl
fisubrl
mov
test
jge
add
mov
sti
inc
inc
test
pop
push
mov
roll
xor
mov
xchg
or
xchg
mov
sbb
jg
movsb
push
adc
mov
mov
mov
lock
cmpsb
pop
repnz
sub
lock
push
shrl
movsb
fiadds
xchg
push
push
add
push
out
cwtl
sub
fldt
pop
lods
dec
xor
push
mov
pop
les
mov
xchg
and
xchg
iret
std
loope
ret
pushf
and
lcall
adc
cmp
xchg
rclb
or
sbbb
cli
cmp
mov
sub
or
fldl
nop
mov
fs
sbb
lahf
mov
sbb
stos
add
mov
test
mov
xchg
pop
in
rorl
movsb
scas
push
mov
xchg
mov
sbb
mov
shrb
in
lds
ds
es
icebp
into
vcmppd
loope
sub
mov
cmc
xor
pop
inc
into
ljmp
dec
in
push
cs
dec
add
ljmp
popf
test
add
sti
inc
ret
inc
cmp
mov
and
jb
sbb
push
arpl
adc
shl
fldl
nop
mov
jp
fstps
pop
leave
pop
mov
add
adc
mov
bound
xor
test
sub
adc
in
stos
inc
inc
push
int
insb
adc
xchg
mov
cmpsl
sub
and
adc
pusha
jl
mov
sbb
xor
pop
daa
inc
or
dec
jb
inc
imul
addr16
pushf
movlps
idiv
adc
lahf
pop
pop
push
add
das
imul
pop
jmp
leave
fstpl
push
adc
ljmp
negb
mov
stos
in
mov
test
testl
into
mov
je
cmp
ds
adc
popf
out
je
mov
cltd
mov
pop
decb
in
jg
push
inc
inc
ss
mov
hlt
jg
fsubr
imul
pop
xchg
push
xchg
ss
sub
fimull
mov
call
xor
fwait
pusha
gs
ret
hlt
std
jg
divl
scas
arpl
adc
addr16
addr16
ret
scas
jecxz
sub
sahf
mov
xor
test
sub
in
mov
and
daa
loopne
push
scas
cmc
inc
cli
xor
lret
rorb
out
add
adc
les
arpl
inc
push
pushf
iret
xchg
in
movb
mov
mov
lods
cs
loop
or
pop
dec
repz
jo
out
mov
mov
xlat
pop
cld
mov
sub
xchg
out
adc
xchg
lds
push
lret
add
xor
enter
inc
push
or
shll
into
sub
pop
scas
std
mov
das
push
std
call
arpl
sahf
push
and
jae
popf
push
testl
and
in
cmp
dec
xor
es
fcoms
jl
stc
pop
lahf
adc
push
sbb
cmpsl
and
pop
loop
adc
mov
sbb
fld1
fwait
dec
xlat
aaa
mov
fistpl
mov
lret
push
fadds
sahf
daa
cmp
stos
mov
jg
or
add
push
scas
jnp
cmc
xchg
pop
pop
shrb
jl
sahf
dec
mov
out
daa
dec
call
cmp
in
loopne
jb
stc
scas
push
lahf
lock
out
mov
xorl
sar
lds
dec
arpl
xor
cmp
call
stos
mov
and
gs
shlb
mov
mov
adc
sub
xchg
pushf
dec
gs
xorl
jle
js
mov
test
add
movsl
inc
mov
stos
not
cmp
fidivrs
sub
hlt
jbe
jp
or
movsl
aam
test
aad
movsb
lods
std
ja
clc
sbb
ja
and
test
xchg
adc
jo
and
mov
sbb
xor
xor
mov
sar
mov
or
adc
data16
enter
hlt
mov
dec
mov
push
push
push
pop
cld
lcall
push
cli
cmp
jae
ret
xchg
scas
push
inc
cs
xchg
or
sbb
and
add
mov
and
into
xor
pop
testb
fstp
jbe
test
xchg
sbb
pop
and
cmp
jl
cmp
ffreep
cmpl
push
mov
mov
sub
push
push
rcrl
scas
mov
jl
mov
or
mulb
fwait
xchg
shlb
cmp
pusha
pushf
sbb
loopne
xchg
xchg
inc
lret
enter
xor
xor
out
push
push
scas
scas
mov
fcompl
and
xchg
mov
dec
cmp
imul
sbb
outsl
cmp
inc
inc
test
rclb
into
add
out
dec
cmp
ret
in
cmp
ret
push
cmp
adc
push
leave
sbb
popa
push
pop
mov
and
ret
outsb
fsubr
adc
into
rcl
push
lret
mov
pop
iret
aas
ds
rcrb
lds
dec
mov
and
mov
adc
sub
mov
or
cwtl
inc
xor
aad
rorb
push
mov
sub
fisttpl
cld
mov
mov
out
lea
push
adc
inc
int3
cmp
xchg
sbb
pop
call
xchg
jb
fisubrs
jnp
mov
cmp
cs
imul
filds
jmp
push
pushf
cmp
push
xchg
xchg
xlat
fmuls
mov
out
cmp
test
stos
mov
dec
add
test
add
ljmp
xchg
lahf
fisubrl
int
call
pop
insb
adc
hlt
xchg
hlt
out
sar
mov
shlb
sarl
mov
je
mov
pop
scas
fisubl
xlat
sbb
addr16
cmpsl
sub
mov
xchg
addr16
in
repnz
mov
fcmovbe
loopne
dec
out
lods
insl
adc
xchg
stc
mov
cmc
inc
mov
ds
xchg
sub
sub
jmp
scas
push
add
pusha
sar
push
pop
popf
sub
add
cmp
mov
je
xchg
xchg
je
and
dec
imul
xor
xchg
cli
xor
fwait
or
insb
into
dec
leave
sub
add
inc
in
inc
lret
shll
scas
add
roll
addr16
rcrb
jecxz
xchg
pop
push
and
and
fiadds
xchg
loopne
aam
psubd
push
call
sbb
sti
aaa
pop
mov
ljmp
test
mov
in
cmp
mov
mov
add
xchg
push
push
lcall
les
mov
in
mov
xchg
push
inc
xor
movsl
std
jmp
add
push
sub
inc
enter
push
pushf
das
sbb
decb
rcll
push
sub
ljmp
cpuid
scas
adc
jmp
add
dec
jp
xchg
jmp
xor
std
repnz
mov
push
in
lock
js
jp
mov
and
xchg
pop
and
adc
nop
sbb
pusha
fsts
int
xchg
popa
popf
arpl
lret
aaa
gs
xor
mov
in
inc
into
jnp,pn
jne
inc
adc
js
mov
insl
adc
mov
aad
jnp
rorb
sub
int3
js
jecxz
orb
in
icebp
sbb
ljmp
mov
cmp
iret
push
enter
cltd
xchg
sbb
scas
fiaddl
mov
sub
xor
in
mov
xchg
in
lret
jl
push
inc
sar
adc
aas
fsubrl
or
movsb
daa
mov
scas
cmp
stos
cltd
cltd
lock
stc
xlat
inc
ret
dec
dec
aaa
push
cld
sbb
mov
ret
dec
scas
jb
add
adc
mov
dec
add
adc
cltd
fists
push
ret
cmpsl
push
jno
xbegin
add
mov
inc
mov
fnstsw
outsl
lods
cltd
mov
and
and
jnp
cmp
push
aam
aas
push
into
add
push
fisubl
mov
jne
in
dec
mov
xchg
mov
cld
jne
sbb
fnstsw
dec
mov
adc
sbb
xchg
cmp
or
testl
cmp
je
or
lea
jno
arpl
js
mov
push
pop
sub
mov
lret
mov
scas
mov
insl
jnp
add
mov
mov
mov
push
movsb
sub
imul
insb
lods
fistpl
push
jge
in
mov
adc
mov
sub
xchg
addr16
and
std
mov
dec
dec
in
mov
inc
je
idiv
push
es
or
xchg
sub
icebp
push
popf
sub
dec
pop
fnsave
jne
jnp
inc
push
or
push
inc
pop
xor
stos
adc
mov
adc
add
mov
sahf
adc
movsl
shlb
dec
adc
xlat
int3
inc
adc
inc
gs
pop
or
iret
ficomps
pop
jge
mov
adc
dec
jns
xchg
pop
out
filds
xchg
subb
mov
mov
notb
out
outsb
sbb
fstl
pusha
aaa
cmc
push
into
dec
xlat
pop
and
lret
sbb
scas
adc
dec
jne
movsl
and
cmp
daa
sub
adc
adc
jp
pop
mov
inc
push
sub
inc
cmpsb
sarb
pop
flds
clc
cmpsb
out
sti
mov
dec
sbb
mov
insl
shrb
sbb
pop
cmp
cs
or
cli
test
dec
cli
cwtl
cli
cmc
pop
and
enter
or
shl
loopne
lods
xchg
push
ret
mov
xchg
pushf
xchg
shrl
dec
pop
adc
dec
enter
sahf
in
and
cli
mov
push
pop
arpl
dec
mov
es
addr16
mov
shrl
mov
negl
es
mov
jnp
jno
jg
aas
sub
scas
jecxz
xchg
jb
and
mov
mov
and
lds
test
arpl
mov
rclb
mov
aaa
addb
jb
cmpps
push
gs
pop
sarb
pop
aam
jge
dec
cmpsb
mov
or
mov
xor
pop
in
cwtl
sarl
scas
insb
mov
jp
loopne
out
push
clc
out
sub
pop
or
mov
mov
icebp
mov
xchg
outsb
fxch
movsl
imul
jle
dec
insb
jl
mov
clc
mov
push
pop
push
lcallw
aad
cmc
adc
dec
jae
xchg
cltd
jae
lahf
nop
cmp
sbbb
push
mov
mov
andl
arpl
jge
mov
enter
and
cmp
adc
cmp
sar
jnp
adc
das
hlt
mov
lahf
xor
pop
pusha
bound
jne
je
jg
pop
lods
jecxz
push
data16
das
call
fmuls
inc
imul
mov
mov
ljmp
movsb
ret
pop
jl
xlat
and
insl
jb
or
jnp
sbb
bsf
mov
cs
mov
loop
inc
add
cwtl
and
jg
pop
xor
stos
pop
mov
fcmovnu
ficoml
in
cmp
cmp
imul
push
push
fidivrs
lods
es
je
inc
push
xor
push
add
faddp
mov
mov
mov
lret
movsl
push
scas
clc
inc
dec
shlb
adc
inc
shrl
mov
into
out
fsubrp
mov
cltd
mov
push
mov
cmp
xchg
lods
test
popa
aad
inc
movsb
pop
scas
jbe
sbb
mov
adcb
jle
or
imul
add
xchg
pop
push
and
mov
xor
call
sub
aas
lods
fcmove
ljmp
inc
cmp
add
fidivrs
ret
lret
push
push
xchg
lods
xchg
popa
pusha
dec
cmpb
jl
outsb
in
add
mov
dec
cmp
mov
lods
pop
sar
stos
test
xchg
adc
dec
sub
sub
pop
inc
cs
ja
aad
xchg
or
jg
ja
pop
mov
mov
shll
pop
jg
mov
sbb
add
add
push
lcall
daa
daa
xchg
sub
jp
dec
add
ljmp
pop
bound
and
mov
jo
xchg
add
cmpsl
adc
imul
xchg
lods
mov
mov
mov
les
cmp
cmp
bound
jg
mov
setne
xchg
inc
out
loopne
icebp
inc
bswap
sub
dec
fcmovbe
in
js
mov
adc
pop
add
outsb
and
fwait
mov
mull
shll
xor
xor
aad
sub
shll
loopne
rcrb
cmpsl
jo
jb
cwtl
mov
mov
mov
mov
in
dec
or
ds
sbb
push
shr
add
out
rorb
xchg
mov
aad
adc
lea
mov
adc
jle
add
int
movsl
or
inc
andb
push
jno
jmp
jge
add
xchg
pop
pop
dec
mov
jle
insb
loop
push
push
test
cmp
fistpl
out
adc
sbb
mov
or
adc
jae
cmp
sbb
pop
sbb
mov
iret
inc
das
push
mov
addr16
inc
mov
xlat
mov
dec
xchg
pop
xor
stos
outsb
xor
ja
mov
inc
cmc
movsl
mov
icebp
adc
mov
mov
and
rcrb
dec
inc
dec
fucompp
xchg
cwtl
mov
pop
sar
cmp
add
jbe
addl
mov
jecxz
rorb
into
push
jecxz
test
sar
stos
addb
push
in
andb
insb
jbe
push
sbb
add
pusha
pop
pop
orb
insb
bndstx
hlt
addr16
sub
ret
ss
mov
out
lds
jmp
mov
sbb
push
jo
popf
test
pop
sahf
lcall
jmp
mov
sbb
test
loope
aad
inc
pop
lods
cli
gs
cmp
sub
rclb
cmp
xchg
xchg
out
push
xchg
repnz
mov
lea
ljmp
fistl
clc
rclb
and
pop
push
jne
cmp
xorb
pop
rorl
mov
cltd
inc
cmpsl
mov
out
out
mov
jnp,pt
inc
push
lods
and
addb
push
pushf
sti
push
mov
loopne
js
mov
mov
movb
jl
jbe
icebp
es
adc
adc
push
xor
fisttpl
add
pop
jl
popf
pusha
loope
test
pop
in
lock
xchg
sbb
aam
stos
sub
stos
and
mov
mov
int3
mov
add
push
cmp
leave
jp
in
mov
idivb
inc
sub
jl
aas
inc
movsl
je
cmpsb
icebp
jbe
pop
insl
jne
outsb
movsb
push
sbb
mov
or
out
jae
out
cmc
cmp
cmp
out
mov
pop
cli
mov
xchg
jp
cld
fwait
and
cmp
cmp
pop
jmp
aas
lcall
dec
inc
cltd
lcall
jmp
int3
ret
xor
pop
ret
and
pop
inc
in
sbb
mov
insl
pop
jns
add
aaa
leave
push
push
cmp
sub
sbb
cwtl
sahf
adc
lods
push
fbld
sbb
dec
cmp
jmp
sbb
pop
jno
xchg
daa
mov
mov
lods
xlat
fbld
jbe
add
adc
sahf
test
sub
sub
sbb
out
sbb
push
and
inc
xchg
sbb
sub
pop
mov
stc
incb
and
pop
pop
insb
inc
mov
pop
mov
pop
mov
and
or
add
jmp
mov
ja
or
iret
iret
into
jge
cmp
xor
movsl
mov
bound
lcall
xchg
push
adc
sahf
adc
xchg
lock
imul
or
mov
pop
int
dec
inc
cmovl
and
cltd
fdivr
in
cltd
lcall
iret
rcl
xor
mov
sub
dec
jno
ds
fisttpl
sub
sub
add
loopne
test
stos
leave
fwait
dec
sbb
stos
test
es
fs
fiaddl
rcl
movsl
pusha
enter
mov
mov
int3
jl
jns
mov
or
ds
jl
sti
push
adc
cmp
dec
insl
stc
add
jno
xor
test
loope
inc
bound
mov
lock
into
adc
pop
test
in
push
scas
es
pop
mov
adc
jmp
xchg
aam
shl
int3
pop
cmc
xchg
mov
out
cmp
imul
inc
and
jbe
pop
push
adcl
outsb
xor
or
stos
pop
pushf
pop
cli
inc
popa
inc
xor
test
xor
fs
or
out
xchg
and
data16
pop
ficompl
pop
popa
shlb
mov
rorb
lret
dec
xor
jb
cmp
push
nop
cmp
pop
std
ffree
jns
gs
aaa
sbb
dec
xchg
cld
hlt
sub
jbe
repz
add
or
std
adc
scas
pop
dec
xor
jb
ss
xlat
adc
add
adc
in
push
stos
mov
addr16
inc
test
xchg
data16
pusha
lea
fstpt
fimull
ret
shlb
push
xchg
cmp
push
pop
imul
and
pop
jb
test
push
jecxz
test
sbb
and
adc
movb
and
push
movsl
sarl
fs
lret
in
test
jne
fistps
pop
addr16
mov
fsubrs
mov
sub
mov
int
adc
jb
clc
jns
inc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
insl
mov
jl
pop
pop
jl
out
xor
shll
xchg
push
mov
fwait
mov
gs
dec
aad
and
mov
push
out
daa
mov
outsb
lret
push
test
data16
fsubrp
bound
leave
mov
mov
add
fucomip
add
push
cmpsl
jo
mov
xor
mov
outsl
cmp
aam
mov
pop
scas
mov
int
adc
mov
mov
xchg
dec
adc
test
mov
fisttpl
sbb
lds
cld
mov
or
cmpsb
xchg
sub
ret
cmpsb
jp
push
and
jae
xor
aad
xchg
cmp
stc
outsl
xchg
daa
add
and
sub
mov
jmp
out
xchg
mov
inc
cmpl
repnz
cmp
das
pop
sbb
cmp
fs
lock
xor
push
inc
xchg
repz
and
xor
dec
xor
nop
dec
ret
pop
aam
test
mov
and
mov
jmp
addr16
pop
pop
jo
loop
inc
stos
inc
flds
ljmp
push
sbb
xchg
jo
adc
xchg
js
out
test
rclb
lock
lcall
xlat
rclb
cmp
mov
aad
adcb
pop
cmp
stc
and
pusha
test
push
pop
repz
movsl
cli
lahf
jo
mov
aam
in
mov
push
dec
bound
fmuls
adc
jb
mov
or
lret
mov
add
loope
negl
adc
in
fidivl
shl
cmp
xor
mov
aas
mov
push
lods
hlt
cld
fwait
test
icebp
sub
or
xchg
mov
mov
aad
jp
push
gs
in
xchg
sbb
rcrb
adc
pop
inc
pop
pusha
mov
dec
sub
mov
jecxz
out
xchg
sbb
mov
sahf
mov
sub
push
xchg
mov
xchg
popa
add
adc
sarb
and
shll
jo
mov
pop
lret
xchg
lahf
dec
add
popa
mov
dec
push
popf
mov
dec
repz
pop
xchg
pusha
push
mov
stos
xchg
iret
nop
mov
repz
iret
lds
test
push
and
in
orl
ljmp
mov
les
mov
xchg
hlt
imul
stos
rcl
int3
mov
pop
popf
push
inc
sbbb
das
dec
outsl
xor
mov
and
imul
testb
and
adc
andb
sub
icebp
adc
shr
sub
aas
xchg
sbb
mov
push
adc
lret
negb
test
popf
outsl
cmp
xor
push
leave
adc
mov
scas
mov
mov
std
neg
jmp
sahf
test
sub
cmp
pop
push
insl
loop
mov
lods
inc
call
das
enter
lods
or
or
xchg
mov
push
sbb
jns
adc
shll
push
inc
dec
jne
insb
loope
inc
cmp
pop
jecxz
dec
adc
rcl
shl
mov
xchg
dec
sub
popf
movsb
xchg
cmp
pop
stos
addr16
xlat
pop
fcoml
fbld
aaa
decb
out
xchg
stos
scas
mov
and
inc
aaa
cmp
xchg
cltd
pop
data16
loopne
fistpll
movsb
adc
out
push
mov
jg
adc
or
addl
aad
xor
outsb
pop
xchg
xor
sbb
jg
scas
leave
popa
std
jae
dec
loopne
ret
mov
push
and
je
sbb
mov
dec
out
push
adc
mov
lds
pushf
popf
sub
rol
or
arpl
out
adc
data16
test
lret
xchg
sub
arpl
mov
lret
aaa
sar
sub
push
xchg
je
dec
mov
xchg
je
add
leave
gs
out
les
adc
jp
pop
push
ja
mov
in
es
or
jmp
fsubrl
clc
and
pop
les
cs
shl
dec
pop
mov
cmp
orb
inc
mov
mov
sbb
dec
dec
enter
std
mov
push
xchg
test
sub
je
and
packuswb
dec
cmp
xor
cmp
enter
push
movsb
lcall
dec
jge
cld
cwtl
push
pop
fistps
jo
jl
dec
ljmp
push
push
ud2
cli
pusha
js
dec
ficomps
or
call
enter
insl
sbb
add
cwtl
gs
push
dec
cli
inc
dec
mov
iret
scas
sbb
sub
inc
xor
shrb
dec
mov
push
mov
orl
stc
cwtl
inc
pop
dec
mov
daa
dec
jle
incb
rcrb
pushf
int3
jne
rclb
sbb
roll
pop
mov
xchg
mov
enter
dec
add
in
clc
mov
daa
mov
mov
inc
sub
inc
pusha
sbb
jg
add
clc
cltd
scas
fisubrl
jecxz
aas
enter
xor
inc
adc
sub
and
addr16
push
or
lods
dec
cwtl
xchg
out
xchg
inc
dec
or
mov
add
adc
or
pop
add
fcoml
lcall
xor
lcall
mov
or
push
imulb
inc
pushf
inc
mov
mov
nop
cmp
lahf
cmp
iret
imul
xor
xchg
adc
loop
imul
ljmp
inc
push
test
mov
lods
repz
aam
add
loop
cmp
or
mov
adc
cmpsl
xchg
iret
dec
test
daa
mov
jmp
aad
mov
jno
sbb
cld
inc
add
cli
gs
mov
es
fnstcw
pop
mov
out
sbb
addb
out
dec
and
push
sarl
xchg
sub
sahf
cltd
stos
cmp
push
push
xchg
mov
lret
int
jae
repnz
dec
pop
rcpps
pop
dec
daa
cmp
mov
data16
mov
xchg
or
in
mov
jns
sub
ret
mov
sub
xchg
in
xchg
movsl
inc
cld
cmpsl
lods
je
mov
cltd
push
mov
mov
sub
mov
arpl
lcall
ret
fs
sub
mov
jg
adc
popa
unpcklps
inc
pop
test
ljmp
jle
jp
scas
subl
movsb
inc
lret
scas
addr16
je
sbb
mov
movsb
jge
xchg
inc
orb
aad
adc
mov
adc
add
inc
jns
and
push
dec
push
pmulhuw
dec
xchg
mov
xor
mov
adc
mov
out
lds
aad
lods
out
cmpsb
faddp
jno
xchg
insb
push
xchg
scas
fsubs
sbb
adc
lock
push
pop
pop
add
or
push
lods
pop
mov
add
push
push
repz
push
mov
xchg
imulb
and
clc
ljmp
and
shr
test
sub
sbbb
mov
out
clc
sub
push
push
jo
hlt
push
and
rcl
xor
rorb
xor
mov
push
clc
jbe
cwtl
addl
sbb
sbb
orb
nop
dec
lret
inc
fsubrs
call
sub
cli
add
in
xchg
push
add
in
pop
pushf
aam
sahf
mov
out
insl
lret
movsb
xlat
std
pop
negb
dec
cmp
dec
sub
ret
add
lret
cmp
out
add
cmp
cmp
xlat
jl
mov
lret
sti
data16
in
cmpsl
negb
je
xchg
rcl
push
lds
xorb
and
pop
ja
je
lods
xor
pop
inc
arpl
mov
fs
pop
incl
jbe
jl
ficompl
incb
movsl
jmp
push
mov
dec
std
pop
mov
xchg
cmp
out
stc
jne
push
add
rcr
add
jle
adc
push
gs
adc
es
sbb
std
push
xchg
ja
cmp
inc
cmp
lods
mov
adc
add
scas
aam
push
sbb
push
pop
mov
push
and
in
jge
sbb
std
xchg
and
or
cmpsl
pop
idivl
xchg
test
xor
test
in
loope
into
test
addr16
insl
jbe
pusha
inc
test
xchg
loop
stos
inc
mov
clc
subl
jg
sbb
and
add
movb
ret
or
movsl
dec
push
mov
int3
lcall
sub
outsb
movsb
arpl
push
dec
inc
xor
ret
ret
in
repz
add
bts
scas
mov
rorl
xor
lcall
mov
divb
icebp
inc
cmp
push
pop
mov
ret
fsub
mov
vshufpd
inc
adc
sbb
sahf
jne
lcall
or
in
add
mov
pop
adcb
ret
dec
rorl
jge
js
dec
jg
data16
nop
repnz
cld
cmp
sub
shlb
mov
shll
rorl
mov
shrl
inc
mov
notb
xor
and
xlat
sub
mov
mov
mov
sbb
fwait
jl
sub
mov
fstl
dec
stos
inc
or
inc
and
sub
push
andl
dec
movsb
icebp
push
outsb
push
cmpl
xor
addr16
add
popa
mov
scas
std
int
in
sbb
xor
sub
inc
xchg
mov
sbb
dec
mov
ss
add
insl
and
pop
pushf
jb
mov
cmp
inc
pop
jns
push
mov
adc
emms
cmpl
dec
in
mov
inc
jmp
xchg
fwait
jl,pn
or
xchg
mov
lods
jmp
pushf
cmp
cwtl
sbb
fimuls
test
and
repnz
mov
sbb
lods
cmc
fidivs
add
out
aad
and
inc
cmpsb
push
rolb
and
fmuls
sub
pop
js
xorl
sbb
subb
add
rcrb
add
pusha
pop
mov
rolb
push
xchg
and
insl
test
pop
xor
inc
repz
loope
inc
push
sub
cmp
or
cmp
mov
mov
mov
test
mov
stos
lock
movsl
inc
xchg
mov
jle
ficoms
jecxz
mov
aad
xor
jge
sub
mov
lahf
adc
adc
xchg
adc
gs
sbb
jnp
fisubrs
add
ret
repz
cmc
icebp
or
dec
es
xor
push
mov
pop
nop
rorb
push
in
hlt
inc
enter
mov
cmp
movsl
dec
repnz
sbb
rcrb
jne
imul
sbbl
push
cltd
sub
xor
sub
les
loop
leave
repnz
mov
mov
sbb
jl
jmp
movsb
daa
sub
pop
jns
je
push
mov
mov
and
adc
gs
mov
stos
and
and
iret
movsl
je
sub
cmp
jb
dec
mov
nop
rolb
xchg
hlt
lcall
or
mov
repz
xchg
inc
and
lods
or
insb
call
push
mov
in
fdivl
sbb
fdivp
sbb
sub
sub
cmp
jg
das
xchg
mov
pop
out
mov
fwait
jnp
or
sbb
jns
pusha
repnz
cmp
xchg
outsb
and
stos
push
shlb
daa
sub
adc
adc
xchg
and
jp
or
mov
push
or
in
dec
sub
xor
sub
mov
int3
lds
loope
xchg
and
or
inc
nop
mov
or
mov
loope
adc
jecxz
xchg
es
push
data16
cmp
mov
mov
jbe
insb
add
das
loop
mov
andb
jge
sub
cmp
adc
dec
lret
jno
push
cmpsl
lock
push
sbb
mov
hlt
adc
aam
hlt
das
pop
filds
xchg
mov
mov
int3
arpl
dec
xchg
iret
loopne
out
cmp
xchg
fstpt
jae
adc
imul
mov
add
loope
xor
push
mov
in
xlat
pop
mov
pusha
jae
adc
subl
sub
jnp
push
jp
sub
xlat
jl
repz
dec
sbb
dec
into
lods
cmp
jmp
enter
aad
int3
iret
data16
ret
jnp
addb
xchg
ss
dec
lret
out
jmp
fwait
inc
jnp
sbb
pop
mov
mov
fnclex
fidivl
jge
xor
ret
mov
mov
jmp
test
cld
into
pop
into
push
fcomps
xchg
mov
leave
or
and
mov
xchg
pop
shll
mov
mov
lcall
add
fisubl
cmp
les
push
jge
fisubs
push
stc
sbb
pop
cmp
xor
xor
popa
and
or
mov
scas
pop
clc
cmc
push
clc
and
add
ljmp
ret
dec
sti
sub
xchg
adc
pop
sbb
sub
jge
into
pop
adc
inc
push
xorb
imul
mov
sbb
lock
mov
out
sbb
cmp
out
loopne
mov
push
scas
jns
ljmp
fstl
movsl
je
fwait
sbb
jecxz
or
sub
fdivs
mov
lock
mov
xchg
mov
mov
popa
jb
xlat
test
lock
jbe
cmpsl
push
popf
aam
shr
mov
addr16
lahf
push
aam
mov
pop
or
add
inc
cmp
leave
out
xchg
xchg
clc
xor
inc
lods
push
cmpsb
inc
xor
insb
mov
xchg
in
fnstsw
lds
int
imul
test
negl
mov
inc
js
or
cld
lea
inc
pcmpgtb
lahf
xchg
adc
das
cli
add
out
adc
inc
push
mov
sbb
add
and
sub
sbb
dec
mov
pop
imul
es
inc
inc
mov
dec
xchg
iret
lds
fucomp
inc
jmp
and
jl
push
xchg
lcall
inc
push
mov
and
fbld
xor
aad
mov
lock
divl
sbb
aas
in
imul
roll
jae
in
jle
rcll
sub
mov
mov
xchg
push
add
cmpsb
dec
mov
jb
fwait
mov
dec
fnstcw
mov
sbb
mov
or
push
loopne
fcomps
and
push
mov
fists
lock
in
movb
das
cltd
adc
sub
mov
inc
xor
sbb
cwtl
out
jb
dec
outsb
ljmp
nop
out
xchg
dec
stos
sub
aaa
iret
fisttpll
push
mov
jns
mov
out
pop
add
xor
push
pop
repz
imul
mov
inc
flds
cmp
mov
pop
std
pop
add
incb
jle
fwait
add
xchg
jl
push
mov
mov
shlb
idivb
and
jo
inc
andl
mov
pop
test
sub
add
cltd
lcall
mov
arpl
leave
push
sbb
shr
sbb
cmp
pop
aaa
insl
leave
test
dec
lret
test
mov
test
in
mov
les
popf
add
test
in
insb
jle
mov
and
aaa
lds
fcomps
mov
sub
xor
fdivrs
push
lods
std
mov
jo
loope
and
loope
and
cmc
xchg
out
or
mov
dec
mov
add
push
das
push
jne
js
dec
arpl
sbb
or
dec
adc
adc
xchg
fidivrl
jbe
push
xor
bound
mov
ja
cmp
inc
je
mov
mov
mov
xor
fldt
lods
in
xlat
hlt
xor
and
scas
jno
dec
js
ret
dec
les
sbbl
sahf
jae
push
xor
sbb
adc
adc
push
mov
sub
xor
loop
push
push
jno
push
xor
jb
ss
or
int3
push
push
and
sbb
xrelease
dec
inc
push
shrb
mov
cmpsb
xlat
notl
sbb
xchg
jecxz
lahf
dec
xchg
fs
inc
push
dec
enter
jae
into
lods
scas
jno
dec
hlt
int
out
and
ja
in
out
adc
jno
adc
mov
and
iret
sub
push
inc
sub
inc
jbe
pop
cmp
add
andb
sub
ds
sub
xor
je
or
notb
fldl
or
andl
push
jle
push
mov
setne
mov
mov
lods
lea
pushf
stos
xlat
leave
push
mov
imul
sub
mov
and
or
dec
xlat
out
and
add
je
scas
mov
sahf
push
inc
arpl
push
aas
lea
fnstenv
adc
and
add
es
fmuls
sub
fidivl
aad
ljmp
cwtl
jge
and
mov
mov
mov
in
add
ljmp
in
insb
xchg
pop
jnp
iret
and
xchg
int
cmp
stos
cwtl
dec
pop
and
stos
adc
sub
repnz
ss
sti
movsb
dec
or
push
into
add
xchg
push
inc
xchg
sbb
lahf
jnp
sbb
in
sub
inc
cld
std
and
repz
out
sarl
or
imul
mov
xchg
in
xor
pop
hlt
insl
inc
insl
push
leave
lods
imul
insb
cmp
sub
cmp
dec
mov
sbb
sbb
sbb
insl
sti
mov
push
inc
pushf
fisubrl
icebp
out
scas
fisubrs
jbe
pop
testb
or
shr
jecxz
mov
mov
cmp
andb
addr16
push
pop
mov
and
mov
xor
ficoms
inc
movsl
sbb
mov
mov
xor
ret
movsl
test
inc
pop
stc
mov
or
jl
xchg
or
or
jb
jne
push
xor
in
xlat
int3
aad
je
or
sub
mov
icebp
or
lds
js
sub
inc
ds
dec
lret
subb
insl
adc
icebp
push
dec
xchg
jl
jae
insb
mov
fidivrl
xchg
mov
into
nop
in
cwtl
mov
pop
leave
shl
and
leave
hlt
mov
repz
mov
push
dec
testl
xor
call
hlt
in
orb
add
sbb
iret
lret
pop
cs
mov
ficoml
fs
lea
je
push
rcrb
push
leave
ret
nop
movsb
cmp
add
or
jge
adc
je
mov
movsl
cmpl
loopne
jae
pop
and
cwtl
jno
sarb
fsubs
imul
fidivrs
push
addb
xor
pop
es
mov
sub
xor
sbbl
das
insl
pusha
mull
std
pop
or
leave
or
push
mov
mov
mov
sbb
testl
testb
push
dec
sbb
inc
push
int3
es
stc
mov
addr16
das
aam
add
enter
jp
out
push
sub
lock
xchg
cmp
mov
mov
dec
mov
dec
add
sub
or
mov
shlb
mov
dec
inc
jle
movsl
mov
push
mov
dec
jb
movsl
inc
xchg
shrl
aaa
test
dec
ss
cmp
xchg
push
mov
cmovp
xorl
outsl
cwtl
mov
push
or
mov
mov
sub
aam
loop
jle
ret
jno
mov
push
mov
test
mov
cmp
adc
adc
test
aas
movsb
mov
mov
lock
outsb
out
test
push
movsb
in
and
jno
inc
imul
lock
in
xor
cmpsb
adc
xchg
mov
pop
dec
mov
cli
cmc
testl
push
andl
lcall
jl
or
push
adc
daa
or
cmp
sub
int
xorl
arpl
sbb
daa
daa
jns
mov
mov
cltd
mov
mov
jecxz
xlat
shlb
aad
inc
jne
push
addb
mov
fdivrs
fidivs
add
out
mov
nop
xchg
movsl
jmp
mov
jecxz
jl
xor
sbb
jnp
xchg
add
sub
xchg
int3
adc
mov
test
cld
daa
in
in
mov
inc
xor
stc
icebp
xorl
mov
sub
mov
rcrl
or
cwtl
or
call
cltd
pop
mov
out
sub
in
enter
test
jo
mov
sbb
movsl
inc
sbb
rcl
jae
fdiv
adc
es
mov
mov
sahf
inc
push
les
clc
xor
xchg
movsb
mov
sub
mov
cld
nop
iret
adc
test
stos
or
arpl
pop
xchg
adc
jb
bound
out
or
jae
arpl
dec
call
xchg
mov
pop
insl
sbb
xor
repz
mov
into
mov
lods
shrb
mov
jg
mov
das
add
loope
repnz
mov
ss
lcall
repnz
inc
cmp
ret
das
es
xor
jp
icebp
mov
push
mov
cmp
shl
sahf
xchg
xchg
push
sti
int3
lods
cmpsl
cs
cld
pop
and
mov
mov
and
ss
mov
adc
subl
and
jl
inc
outsb
js
sbb
scas
out
imul
jb
test
jb
add
add
pop
insb
xchg
icebp
in
jl
js
mov
push
or
mov
fnstsw
gs
mov
jg
iret
jae
testl
sbb
xor
stc
dec
sub
pop
mov
mov
stc
lods
sub
adc
dec
fisubs
push
xchg
imul
les
add
aad
push
jnp
adc
jle
sbb
dec
out
fcompl
not
sti
push
add
push
jmp
add
xor
fisubrl
mov
dec
stc
int3
fs
jbe
push
jb
cmpsl
or
pop
cmc
roll
jmp
lods
xlat
add
add
leave
test
je
addps
ljmp
fildl
fidivs
add
js
cmp
mov
aad
dec
xor
sbb
pop
aaa
ds
add
sub
aad
repz
push
inc
push
push
cmpsl
repnz
xchg
or
repnz
cmp
adc
aam
xchg
std
lret
xlat
loop
je
cmp
jnp
fldenv
insb
fcompl
sub
js
pop
inc
and
mov
int
add
daa
xchg
sbbb
jnp
dec
inc
push
pop
dec
fsts
xchg
fcomps
cs
ret
fcmovnu
push
mov
ljmp
popa
sub
cmpb
push
and
psubq
sub
pusha
or
cmpsb
loopne
mov
xor
nop
out
add
or
and
loopne
in
loope
enter
pop
jle
lahf
fnstsw
or
adc
mov
rorb
aas
jne
xlat
add
repnz
rolb
js
push
mov
xchg
dec
lcall
add
pop
aad
pop
mov
or
cmp
mov
mov
push
lds
inc
cmc
movsl
push
and
jbe
nop
xchg
lahf
iret
mov
in
sbb
jns
insl
xor
jl
mov
xorb
cmc
and
in
push
das
in
and
push
push
xchg
sbb
hlt
mov
aad
xchg
adc
inc
cmpb
pop
push
mov
hlt
mulb
cmpsl
xchg
cwtl
cmp
xor
xor
pop
pop
xchg
inc
mov
lret
pusha
mov
dec
pop
push
sbb
fwait
fwait
or
mov
repnz
scas
jnp
cmp
daa
int3
imul
lods
mov
pushf
xchg
push
fs
aas
inc
loope
ficompl
int3
jo
retw
aad
scas
push
bound
jb
sbb
scas
insb
mov
int3
outsl
cmpsb
inc
fsubl
movsw
cmp
dec
popa
and
movsb
sbb
mov
sarl
or
mov
adc
and
and
dec
popf
gs
sti
cmp
jmp
nop
dec
mov
cmp
mov
push
mov
push
test
sub
call
jo
clc
or
cmp
iretw
int3
xchg
gs
fwait
mov
xchg
lcall
xchg
jne
lret
dec
fs
scas
loope
outsl
pop
iret
int
xor
lock
lahf
fbld
mov
jmp
and
iret
inc
inc
loopne
call
fnstenv
cs
notl
sarl
je
dec
insb
adc
add
aad
push
rol
test
scas
mov
outsb
dec
out
mov
popa
jecxz
add
pop
push
inc
xor
xchg
dec
sbb
jnp
nop
ds
xchg
int
sub
fbstp
inc
cmp
add
mov
mov
cmp
cmc
daa
adc
ret
mov
add
cmp
rcl
dec
and
jne
fstp
sbbb
push
dec
lea
mov
insb
fidivs
dec
gs
pop
add
pushf
jmp
cmp
mov
xor
je
mov
cmp
test
and
add
mov
jge
scas
push
mov
mov
es
lds
mov
sbb
sbbb
in
testl
xchg
inc
jge
push
in
pop
rcr
inc
cld
sub
inc
jno
dec
mov
test
mov
or
mov
adcb
push
jp
mov
push
fucomi
int3
fldcw
mov
ds
mov
scas
flds
push
hlt
xchg
mov
mov
lock
add
dec
or
popf
sub
dec
cmp
pop
scas
fprem1
aam
cs
adc
js
icebp
mov
pop
jo
adc
in
fs
out
shll
aad
mov
loop
sub
and
aaa
jecxz
jecxz
xchg
std
jne
xchg
jns
sub
and
jmp
ss
sbb
mov
fsubs
sbb
push
lods
outsb
nop
mov
iret
pushf
or
cld
add
fimuls
pop
int3
iret
sbbl
jmp
dec
push
repnz
and
in
push
mov
dec
dec
jno
jge
inc
movsb
stos
arpl
movsb
shrb
cmpsl
in
fisttpl
aaa
dec
pop
inc
adc
lods
or
push
push
pop
loop
sbbl
dec
notb
sub
stos
pop
icebp
das
stos
jo
sbbl
xor
push
test
mov
xchg
jbe
ror
jecxz
xchg
aam
int3
jbe
sub
sahf
lcall
xchg
mov
adc
repnz
add
je
xor
mov
stos
scas
stc
push
lret
ja
and
mov
ss
sbb
xchg
rolb
out
stmxcsr
andl
sahf
aaa
test
mov
jmp
lods
call
xor
loopne
leave
jge
xor
inc
mov
insl
insb
sbb
daa
dec
or
or
inc
je
or
outsb
add
xchg
add
and
cli
fwait
xchg
sbb
fucomp
orl
cld
dec
pop
mov
cmp
xchg
mov
adc
xchg
test
lret
icebp
push
jno
cld
nop
addl
lods
inc
mov
cltd
arpl
sahf
mov
daa
fisubrl
ja
aaa
jnp
adcb
jmp
xchg
out
pop
fxch
mov
cwtl
mov
jae
sbb
and
outsl
or
push
pushf
adc
mov
mov
inc
aaa
lods
ljmp
xor
jne
out
icebp
enter
cmp
arpl
sub
inc
push
es
inc
ds
sub
fistpll
test
lahf
and
dec
addr16
jno
jp
stos
add
xchg
aad
pop
fwait
dec
cmp
cmp
cmpsb
lock
mov
mov
scas
adc
stos
xchg
fdiv
test
call
sbbb
aam
test
jnp
sub
fwait
test
pop
and
jle
int
mov
out
repz
xchg
adc
xor
fsubs
mov
popa
or
xor
mov
xchg
das
sub
jp
cli
add
lock
movsb
sub
sub
add
inc
push
lods
lret
mov
int
xchg
fwait
mov
fs
or
orb
mov
insb
xchg
leave
cmpsb
testl
pop
push
fs
std
lcall
rclb
pop
mov
jge
pop
mov
pop
repnz
jl
jne
arpl
pusha
test
sti
dec
dec
outsb
test
test
icebp
fmuls
jge
xchg
fs
adc
adc
cs
cwtl
ficompl
jo
jge
gs
or
fidivs
daa
sbb
push
shll
lret
mov
rol
loopne
leave
pop
in
std
andl
ljmp
add
pop
xchg
cmp
fildll
dec
ljmp
ss
push
int
push
test
mov
xchg
push
stos
mov
xchg
inc
insb
rcr
jae
popf
pop
adc
nop
cltd
xchg
scas
mov
add
ss
into
shll
jle
out
cmp
aas
sar
cmp
lcall
add
xchg
jno
std
sbb
sub
nop
jbe
push
adc
scas
mov
rorl
sbb
cli
fstl
fld
and
loop
outsb
out
push
push
or
jb
adc
push
stos
in
adc
jnp
pop
scas
inc
outsl
cld
dec
adc
or
mov
fisttps
mov
adc
fcompl
or
scas
popa
ficoms
icebp
ljmp
fadds
dec
ja
fstpt
xlat
mov
andl
pusha
int
push
leave
inc
incl
mov
cmp
rclb
or
je
pop
stos
or
sbb
push
pop
push
xchg
xchg
outsl
mov
jl
cld
jmp
push
cmp
movsl
mov
arpl
jp
aas
out
pusha
jne
pop
cwtl
addr16
mov
std
or
es
pop
jmp
mov
mov
fs
sbb
jmp
adc
les
imul
sbb
push
cmc
sbb
cmp
shl
xor
pop
sbb
sahf
sbb
sbb
fdivr
add
cmp
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
stos
ret
movsb
lret
dec
nop
loope
xor
je
jo
jge
dec
pushf
popf
push
jo
lock
xchg
out
xchg
mov
pushw
xor
jno
dec
push
jmp
add
mov
cmc
mov
cmpsl
enter
adc
mov
and
dec
xorb
fmull
mov
or
in
adc
ds
cmpsb
test
cwtl
push
loopne
cmpsl
test
nop
fbstp
cmp
cmp
in
pop
dec
pmullw
stos
dec
ret
sbb
loopne
das
push
outsl
jg
push
cli
inc
fs
loop
lds
rcrb
inc
sbb
pusha
add
lock
fstpt
fmull
fmull
mov
sub
mov
and
pop
push
fistpll
sbb
cmpsl
sbb
cmc
insl
loop
jmp
enter
inc
hlt
je
insb
add
inc
cmpsb
mov
push
inc
aad
lds
ljmp
pop
mov
lds
mov
sbb
scas
sbb
das
cmp
and
cwtl
sub
leave
jmp
cmp
cmp
xor
fnsave
aam
or
mov
lods
xchg
nop
mov
xchg
cmp
and
nop
fmulp
adc
pop
push
mov
add
into
push
xchg
jge
rcl
data16
das
adc
mov
cmovle
mov
stos
outsb
jg
inc
push
xor
arpl
inc
xchg
in
icebp
imul
sub
outsb
xor
outsl
pusha
jecxz
dec
dec
add
call
push
nop
pop
jbe
movsl
and
push
jnp
xchg
mov
xor
fwait
aaa
stos
lods
gs
adc
sbbl
lods
cs
dec
into
dec
scas
sub
push
xor
hlt
dec
ljmp
add
adc
mov
sub
ret
out
dec
jmp
in
dec
aad
std
jecxz
pop
in
inc
and
or
roll
mov
cmp
scas
xchg
inc
mov
push
add
and
loopne
in
fadds
sbb
scas
mov
lahf
in
insl
shr
xor
test
arpl
clc
jl
lret
mov
test
add
popa
outsb
jne
daa
imul
mov
pusha
pop
adc
mov
inc
jnp
addr16
and
mov
cs
and
sbb
ja
mov
out
fwait
mov
aad
push
mov
adc
push
int
xor
out
push
out
mov
mov
add
sub
into
or
in
sub
cli
out
mov
cli
stc
ds
jg
sub
cwtl
and
push
jae
data16
lret
negb
add
sahf
pop
sbb
lret
mov
testb
jg
out
fcmovnu
jle
pop
incb
sahf
xchg
mov
push
cmp
dec
imul
orb
test
cwtl
popf
mov
and
push
sbb
xor
dec
inc
rcrb
loope
dec
xchg
ret
ja
shr
cmp
xchg
xchg
push
imul
cmpsb
lcall
add
fs
sbb
push
repz
xor
and
add
out
mov
sub
pusha
fbstp
add
jp
lods
cmpsl
xor
bound
adc
xchg
and
or
mov
cmp
rol
push
sub
in
jo
jae
or
sub
sub
pop
sbb
mov
out
and
xlat
ljmp
hlt
adc
xor
fwait
push
and
cwtl
ret
sub
jnp
jmp
pusha
outsb
push
test
sub
jns
int3
pop
inc
imull
cmp
or
push
es
out
movb
das
iret
cs
rcll
jbe
dec
lmsw
pop
jmp
test
and
test
sbb
lcall
lock
lods
inc
adc
mov
jns
cmp
jne
mov
fisubs
inc
or
outsl
sbbb
test
inc
call
popl
aad
or
sbb
push
xchg
add
add
mov
sbb
mov
mov
out
loope
jecxz
mov
into
mov
sbb
mov
push
lret
pop
lods
fwait
lods
leave
sbb
notb
jbe
inc
mov
xor
std
ljmp
shl
or
out
mov
in
mov
gs
jnp
sub
push
movsl
dec
push
jle
gs
mov
mov
add
bnd
fdivrl
sti
shl
addr16
cmpsl
daa
icebp
cli
jmp
out
and
fimuls
cld
push
and
dec
jno
sbb
xchg
cmpsl
dec
dec
pop
adc
mov
mov
outsb
fucomip
arpl
test
add
hlt
inc
push
rorb
cwtl
test
push
paddq
xchg
loop
orl
sub
xchg
ret
fwait
scas
jnp
cltd
outsb
add
ja
dec
fisttpll
and
imul
imul
cmp
dec
mov
lret
sarb
cwtl
mov
or
mov
mov
call
icebp
insl
ret
stos
push
das
daa
shrl
mov
int3
dec
loop
addb
inc
movsl
mull
add
adc
mov
jb
outsb
mov
adcb
xchg
stos
cmc
jmp
mov
inc
inc
and
fiadds
aas
enter
fs
cmpsb
sti
mov
popa
pusha
loop
and
test
adc
aas
mov
xchg
pusha
data16
stc
mov
jae
and
dec
and
and
pop
dec
aas
pop
lcall
ljmp
pop
sbb
call
out
pop
push
lcall
fisttpll
sub
iret
clc
inc
in
cmp
xchg
int3
mov
decb
push
adcb
mov
pop
ret
mov
decb
scas
test
jnp
xchg
not
push
cltd
rcl
mov
ret
pop
cmpsb
std
fsts
imul
shrb
dec
push
cli
adc
mov
je
cmpsl
mov
mov
dec
gs
dec
pop
xor
cmp
outsb
add
insl
addl
jae
je
xchg
insl
pop
add
and
xlat
repz
aad
mov
pop
pop
xchg
inc
fwait
or
cli
xchg
rclb
dec
mulb
jg
jp
mov
popf
sbb
lahf
mov
or
jns
shlb
mov
inc
jl
mov
ds
les
fwait
shl
pop
xor
mov
mov
aaa
cmp
scas
sahf
cmp
mov
outsl
xchg
sti
sbb
mov
add
sahf
cmp
jle
loop
jge
clc
out
lds
out
cmc
cltd
test
adc
push
dec
sub
xor
xor
lea
sub
fcomps
push
lea
mov
jge
frstor
add
ror
and
jbe
fidivs
cli
data16
mov
clc
subb
cmpsl
and
adc
stos
mov
data16
xchg
pop
cmp
out
jmp
sub
loopne
add
mov
cmc
jmp
mov
add
aas
lock
clc
push
push
es
xor
jne
leave
in
enter
adc
in
mov
jnp
mov
inc
das
xor
or
fimuls
push
xor
sbb
push
or
mov
mov
jns
idivl
or
or
xchg
add
xor
test
int3
and
xchg
jmp
lea
cmp
imul
scas
aaa
cmp
dec
pop
mov
xor
or
flds
mov
push
dec
push
or
jmp
nop
mov
cmpsb
insl
dec
add
jp
and
jae
xor
mov
cmpsl
mov
nop
loope
lds
mov
jecxz
jns
add
sbb
into
lahf
shll
out
mov
jnp
dec
mov
loope
shll
pop
nop
lods
or
sti
mov
adc
cmp
sub
xchg
dec
xchg
ds
popl
cs
or
xchg
mov
jbe
sbb
pop
push
loope
mov
sub
xor
add
fildl
outsl
popf
xlat
shr
xor
in
test
add
ja
push
jns
out
mov
iret
lea
shll
mov
es
cmc
xchg
inc
adc
div
jmp
ljmp
std
jmp
arpl
jo
pop
fists
and
cmp
rorl
sbb
push
into
jl
inc
insl
pop
or
stos
roll
into
popf
push
sbb
sbb
shll
xchg
stos
pop
or
push
cli
into
mov
mov
daa
inc
jb
inc
push
or
fcmovnbe
ss
adc
pop
dec
pop
cmp
fwait
scas
in
adc
push
mov
int3
xlat
lods
push
loop
jmp
sbbl
inc
ss
rorb
pusha
nop
in
sahf
lds
jbe
shr
jb
call
push
dec
stos
lods
icebp
jne
bt
xor
loopne
and
mov
dec
ds
rorb
adc
sub
and
pop
in
sbb
fscale
clc
and
mov
mov
call
in
std
fwait
cli
insl
and
push
inc
mov
test
lods
jge,pt
loop
fwait
adc
addr16
fcoml
scas
push
setne
or
cmpsl
into
adc
sbbb
mov
movsb
rorb
adc
rcrb
jnp
int3
mov
mov
xor
in
mov
test
in
into
fstps
mov
sub
movsl
sbb
sarl
mov
and
jns
push
add
int3
popf
ret
stc
inc
enter
icebp
sub
int3
lods
enter
loopne
push
mov
push
pop
xchg
cmpsb
add
dec
sbb
sub
jae
out
test
xchg
xchg
jnp
popa
xchg
out
fucomp
sbb
add
movsl
lret
bound
dec
ret
mov
mov
jp
pushf
push
fisubrs
test
pop
xor
nop
push
jne
mov
jne
mov
push
arpl
and
repz
push
pop
lahf
imul
xor
in
stos
inc
mov
fwait
jecxz
mov
cmp
inc
adc
sbbl
dec
test
cmp
jp
imul
xor
xor
push
dec
movsl
mov
stos
ss
sub
lock
mov
lahf
rol
push
and
arpl
fisttps
inc
insb
mov
lret
mov
pop
cmp
sub
mov
adc
ret
mov
std
in
adc
push
push
in
rolb
adc
dec
stos
xchg
or
or
push
xor
out
mov
orb
movl
cltd
inc
xor
dec
scas
mov
mov
xor
ja
jle
loop
xor
jae
aas
insl
in
int3
add
dec
lcall
inc
push
repnz
xchg
cs
test
arpl
jbe
xchg
xor
lods
sbb
test
or
in
cs
push
xlat
lods
and
cmc
jbe
adc
pop
lds
mov
adc
in
mov
mov
inc
or
mov
dec
push
mov
aad
popl
lods
lret
into
loop
jle
int
daa
stos
jle
pop
pop
push
stos
sub
sub
test
data16
js
jno
push
in
fistl
lret
pop
mov
and
lds
ljmp
js
in
xor
cmp
jno
enter
orl
and
sbb
mov
push
and
pop
bound
int
int
xchg
hlt
mul
xchg
jne
rcl
fs
push
or
inc
sub
jl
mov
movsb
shl
xchg
cld
das
inc
ficomps
jo
shrb
mov
xchg
out
or
jge
sub
adc
xchg
out
jge
and
popf
inc
stos
cmc
inc
fucomi
mov
mov
pushf
add
movsl
dec
or
cli
xor
jl
pop
inc
xor
push
pop
sub
add
data16
dec
jge
arpl
cmpsb
mov
rep
pusha
lods
jge
or
xchg
sti
ds
int3
orl
xor
jae
mov
cld
mov
call
mov
daa
aaa
sub
add
jno
aas
in
add
and
and
stos
jbe
and
mov
xchg
push
test
add
cltd
sbb
add
sub
lods
xchg
push
dec
mov
out
rclb
scas
sbb
ret
push
dec
loopne
inc
cld
push
push
and
cmp
add
jnp
movsl
scas
xlat
dec
mov
mov
sbb
sti
imul
jecxz
sub
jo
add
lea
xchg
fucomip
jg
push
sub
mov
hlt
mov
stc
jbe
or
fcomi
into
lock
stc
xor
jge
ret
outsb
leave
cltd
sbb
mov
push
js
jge
arpl
fstl
rorl
xchg
mov
mov
fsts
lahf
stos
std
insl
rol
loope
stc
cmp
xor
je
das
dec
out
jo
imul
lea
stos
jae
es
sbb
mov
out
xchg
dec
ss
ja
cmp
push
jecxz
cmp
sub
dec
or
out
push
mov
roll
sbb
incb
sbb
scas
jmp
in
sbb
pop
cs
mov
aad
mov
cli
sub
mov
outsl
jne
push
scas
fldcw
repnz
in
shlb
shrl
sub
das
pop
xchg
popa
jmp
lea
dec
pushf
movsl
xchg
sub
fldcw
xchg
dec
mov
in
stc
int3
inc
jns
jp
mov
repnz
jmp
sarl
xchg
mov
xchg
cld
in
cltd
pushf
pop
cmp
jae
test
mov
scas
mov
mov
sbb
lods
fiadds
xor
ret
ds
xor
mov
aad
adc
subb
cmp
popa
scas
xchg
ret
push
and
pop
rorb
mov
outsl
ss
xchg
xchg
imul
inc
cmp
or
pop
push
jae
test
pop
cltd
lods
or
icebp
mov
mov
mov
fldl
jg
movsb
pop
hlt
daa
insb
js
inc
jp
push
or
dec
or
scas
lock
xchg
jmp
xchg
sub
pop
push
gs
and
xor
mov
mov
test
add
dec
jae
int3
xchg
push
inc
cmp
push
or
sub
jmp
test
and
out
jo
out
popf
and
sub
lret
inc
js
bound
mov
mov
cmp
xchg
jno
int
out
mov
mov
in
repnz
cltd
rol
iretw
shlb
bound
movsl
dec
sahf
cmpsl
ret
clc
xchg
inc
or
faddl
push
xchg
push
fstp
pop
getsec
pop
push
mov
xchg
popa
jno
or
and
pop
out
adc
push
bound
mov
sbb
push
jne
test
dec
sar
xlat
and
cmp
and
subb
loopne
insl
or
push
aaa
popf
xor
fsub
shrl
sub
ljmp
mov
dec
mov
pop
jnp
adc
push
cmp
adc
sub
popa
mov
dec
push
scas
add
jae
rcrl
scas
shll
imul
lret
xchg
es
lcall
and
xlat
fsubl
out
mov
xchg
add
test
dec
lock
sub
bound
cld
imul
cmp
sub
lock
clc
fwait
mov
pop
test
jle
loop
mov
add
mov
ja
outsl
xchg
daa
or
push
js
int
sub
push
scas
cmp
xor
bound
xchg
fwait
jg
in
arpl
and
dec
leave
mov
mov
leave
out
jl
or
outsb
int3
xchg
mov
push
shr
jne
lahf
sub
daa
mov
jge
push
pushl
pop
or
fcom
mov
pop
repnz
adc
shll
sub
leave
loopne
jg
inc
inc
insb
xchg
arpl
in
cli
xchg
subl
cmc
aam
sbb
mov
fwait
adc
mov
cli
pushf
sahf
insb
cmp
ds
xchg
in
jbe
jns
inc
xchg
mov
cwtl
add
das
or
aaa
loope
inc
mov
lret
dec
and
cmpsl
dec
call
call
jae
pop
inc
xchg
lods
clc
cmp
push
cmp
addl
pop
aam
mov
inc
push
cmp
inc
decl
fnstcw
sbb
mov
pop
adc
rorl
pop
mov
xchg
jge
push
pop
or
mov
clc
mov
leave
repnz
xor
dec
sbb
cmpsb
cmp
jns
loopne
cli
pop
ds
in
andl
lods
scas
jno
ss
cmpsl
mov
dec
repnz
cmp
ret
sbb
pop
add
cmc
cmp
ljmp
mov
cmp
mov
in
push
or
jno
sub
or
rorb
repz
xor
add
test
inc
enter
pop
mov
jecxz
sub
add
inc
mov
andb
mov
rol
movl
xchg
xor
jbe
fs
mov
jle
subb
aaa
rorl
fbld
push
xlat
testl
xor
xlat
scas
jo
xchg
pop
arpl
sbb
push
mov
or
fldl
jge
sahf
sbb
rclb
cmpsb
and
dec
sbb
daa
push
or
cmp
push
movsb
divl
in
fsts
add
outsl
inc
push
jb
imul
adc
ljmp
stos
addr16
pushf
inc
sahf
aam
pop
and
pop
or
jne
lock
divl
das
cmp
adc
inc
add
mov
xor
xor
out
dec
cmp
sub
repnz
or
leave
scas
sbb
adc
dec
add
sbb
sub
cmc
add
push
mov
gs
fidivrs
int
sbb
aas
jae
push
popf
pop
lea
push
outsb
jae,pt
pop
rcrl
repnz
push
fcoms
out
repnz
out
push
jle
sbb
ret
xchg
pop
push
inc
mov
fdivrl
sbb
stc
xor
fdivrp
mov
dec
setbe
jbe
test
inc
ficoms
scas
repz
mov
mov
movsl
sti
pop
inc
pop
or
popf
cmp
iret
cwtl
sbb
cmc
ljmp
adcb
cli
xchg
adcb
pop
jl
mov
push
and
lret
in
clc
inc
push
and
inc
push
sub
sub
push
inc
or
shlb
dec
ljmp
sub
cmp
push
xlat
popa
add
fcoms
xchg
cmp
mov
xor
mov
adc
arpl
lods
jne
fistpll
mov
icebp
xor
sbb
popa
dec
stos
in
aam
and
or
ja
dec
outsl
jp
mov
push
les
jb
inc
mov
inc
lods
mov
shrb
jmp
jo
outsl
jmp
push
jbe
jge
mov
test
mov
clc
lahf
xor
call
sbb
inc
jecxz
cltd
das
stc
fs
aad
jno
mov
stos
add
and
xchg
imul
pop
xchg
pop
sub
xor
mov
mov
adc
sbb
or
phaddd
sbbb
pushl
inc
fisubl
sub
push
or
test
ret
and
mov
sarb
xor
andl
rcrl
dec
push
inc
sub
ds
dec
test
je
inc
xchg
lcall
shll
add
daa
and
in
cmp
imul
or
inc
fildll
adc
mov
or
inc
push
jp
dec
or
iret
sub
arpl
mov
test
testb
lods
imul
xchg
sar
sbb
or
xchg
push
lods
pop
dec
cmp
fists
mov
int3
push
pusha
pop
jmp
sarl
dec
fiadds
xchg
jnp
fidivrl
test
cwtl
jp
dec
xor
push
jmp
rorb
imull
or
and
xor
sbb
mov
mov
jp
out
loopne
pop
dec
sti
or
jne
jb
adc
cmc
inc
ret
jbe
stc
sub
js
ret
mov
mov
out
test
add
add
ds
add
dec
lret
into
jl
pusha
xchg
fcompl
inc
jmp
xor
sbb
enter
dec
lds
clc
jmp
mov
jno
lret
outsb
push
out
mov
in
rcrl
sbbb
stos
sbb
and
sbb
pop
je,pn
sbb
adc
dec
cltd
popf
lahf
mov
inc
xor
or
jl
xor
push
adc
mov
pop
jp
push
mov
out
xchg
push
lods
or
cmp
int
xchg
mov
in
sbb
pop
xor
std
xchg
jecxz
sub
cmp
cmc
aam
out
mov
data16
inc
adc
jnp
adc
and
jg
jbe
jne
stos
mov
mov
data16
scas
loope
adc
ss
pop
scas
push
push
scas
mov
dec
pop
dec
lcall
mov
cs
je
cmp
dec
xchg
mov
ljmp
loop
hlt
adc
sbb
fidivs
pop
cltd
lods
loop
fisttpl
jmp
xor
into
test
jno
int
ret
dec
dec
dec
mov
jb
sbb
pop
int
mov
and
dec
xchg
scas
cwtl
and
out
and
sub
mov
mov
cmpb
iret
inc
lock
addr16
add
sbb
xchg
out
push
out
mov
data16
pop
sub
push
enter
gs
jne
out
arpl
fwait
push
pop
adc
lahf
imul
fnstenv
js
xor
pop
outsl
in
dec
cmp
lret
jecxz
sub
add
xor
lea
jbe
out
adc
mov
loop
enter
dec
sub
pop
mov
lahf
push
lcall
shrl
xchg
or
loope
dec
gs
mov
mov
iret
push
xor
mov
popa
daa
mov
int3
loope
jne
mov
xor
pop
in
ret
jp
icebp
mov
push
or
idivb
mov
out
pop
xchg
cld
pop
scas
lret
mov
icebp
xor
lahf
loope
dec
push
pop
jmp
mov
idiv
mov
sub
in
push
mov
and
pop
jne
int3
mul
jae
sub
jae
pusha
mov
call
nop
adc
pop
sbb
out
in
mov
adc
mov
sbb
push
out
mov
push
lods
pop
cli
and
leave
inc
jle
pop
gs
hlt
stc
test
push
addr16
add
or
jg
ljmp
gs
in
pop
movl
repnz
cld
xlat
sub
or
lods
into
pop
out
fisubrl
pop
int3
in
imulb
cmp
xchg
scas
jbe
imull
dec
sub
ljmp
xor
xor
or
cli
mov
xchg
rcrb
clc
xor
ficoml
sub
insb
je
clc
jmp
insl
pop
jge
loope
test
stos
popa
out
sbb
rorb
xchg
lea
sub
int3
and
xchg
add
xor
and
or
setne
int3
xor
push
ret
pushf
ss
aaa
nop
jne
mov
rcrb
jo
mov
sbb
rorl
mov
mov
xchg
push
shlb
xchg
pop
push
mov
sbb
cmpsb
and
cli
mov
cs
rolb
dec
daa
inc
push
rcrb
jg
fdivrl
jnp
and
sbb
jno
mov
mov
xor
in
movsl
leave
sti
xchg
test
and
lds
pop
fldl
mov
and
rcll
and
cmp
insl
pop
gs
and
jne
push
mov
pop
es
movsb
jae
dec
mov
shll
inc
cmp
xchg
pusha
movsb
decb
sbb
out
push
lret
xchg
das
lcall
loop
mov
insl
jp
push
mov
fs
test
add
mov
xor
mov
insl
jb
dec
test
pop
xchg
adc
push
test
subl
sub
mov
xchg
dec
scas
cmp
jnp
and
or
js
sub
ss
outsl
mov
fdivs
and
or
lret
dec
cmc
ror
lods
cmp
inc
psubb
cld
add
lea
out
xor
mov
cwtl
mov
mov
test
lock
inc
loopne
call
and
jmp
cmp
nop
and
ljmp
dec
clc
xor
mov
dec
sbb
in
pop
psubsb
jmp
bound
or
jp
or
fs
adc
inc
rcrl
and
bound
push
cmp
inc
cmp
stos
pop
movsl
jmp
or
xor
jne
js
aas
and
sub
std
and
cmpsl
push
lods
test
outsb
arpl
fsub
cld
lds
sub
cmp
jb
sbb
mov
out
arpl
pop
sub
popa
mov
fbld
packsswb
cwtl
xchg
cli
xchg
outsb
enter
cs
or
testb
leave
arpl
dec
pusha
mov
xchg
and
in
push
test
pop
adc
iret
fbstp
js
xor
out
sub
outsb
pushf
lret
js
pop
add
cltd
pop
cmc
lods
orl
adc
and
test
fidivrl
in
mov
jae
cmp
xchg
or
mov
and
mov
enter
popa
pop
mov
push
ret
xor
mov
inc
into
dec
aad
pop
jb
xchg
movsl
lcall
movsl
add
out
rcl
into
sbb
jmp
pop
icebp
and
mov
shr
mov
mov
inc
lret
mov
in
mov
mov
xchg
inc
imul
mov
push
xchg
rcrb
jmp
rorb
mov
test
add
imul
loope
ficompl
movsl
mov
xchg
into
xchg
mov
lock
addb
push
pop
sbb
test
pop
inc
clc
movsl
scas
sarl
cld
bound
cltd
cmp
pop
aaa
push
sbb
frstor
xchg
and
cmc
insl
lods
js
jae
leave
sti
mov
cmp
adc
out
imulb
lret
dec
shlb
jl
xor
or
imul
lret
inc
mov
jo
and
ss
lahf
mov
mov
call
or
lahf
aad
jns
dec
cmp
mul
or
inc
fwait
test
ss
bound
ja
dec
add
insb
or
stc
rcl
push
sub
out
fwait
mov
or
mov
xchg
imul
cmpsl
leave
add
pusha
lods
lock
daa
addr16
prefetch
xchg
adc
xchg
rclb
cs
sub
sarb
mov
dec
rcrb
psllw
jo
lods
adcl
xor
fstl
fcoms
aam
push
push
dec
jo
jns
leave
loopne
pop
mov
dec
aas
out
mov
push
cmp
decl
and
adc
imul
incl
orb
and
sub
jo
shll
jp
out
push
jmp
xor
jl
pop
lock
sub
out
mov
test
push
inc
push
push
popa
test
mov
pop
mov
cmp
fstps
outsl
dec
jecxz
lret
test
mov
xchg
repnz
jo
adc
or
sbb
mov
xchg
loop
sub
scas
test
pop
sbb
or
or
or
cmp
mov
adc
neg
pop
push
adc
aam
outsl
js
jge
enter
jle
lock
dec
xchg
mov
movsl
das
mov
and
xor
mov
loope
dec
arpl
movsb
add
pop
in
cltd
scas
shrb
bound
push
sub
out
scas
neg
iret
add
mov
lret
cmovo
mov
lock
lods
imul
test
jg
cmpsb
pop
decb
adc
cmp
and
rorl
xchg
mov
pop
mov
leave
inc
into
dec
rcll
sbb
into
sti
in
cmpsl
fadds
push
mov
sub
push
lods
xchg
enter
in
cmp
xor
mov
inc
clc
jg
in
lock
sub
mov
inc
or
xchg
push
xchg
and
repnz
push
pop
dec
hlt
movsb
aas
adc
cltd
mov
jl
mov
ds
mov
sarb
xchg
jo
pusha
out
pushf
fsubs
xor
xor
sbb
test
pop
out
add
mov
jmp
scas
jnp
sbb
mov
shll
je
sub
or
cmp
pop
daa
dec
iret
mov
mov
mov
gs
push
add
add
push
movl
lahf
sbb
xchg
movsb
xchg
imul
xor
mov
xchg
stc
call
dec
sbb
pusha
adc
enter
pop
mov
addr16
addl
lahf
iret
or
mov
mov
lods
shlb
test
push
adc
pop
pusha
sub
outsb
dec
iret
mov
xchg
ret
les
dec
and
jae
mov
sarl
jmp
ss
jecxz
push
xor
and
mov
movsb
ret
dec
xchg
push
adc
icebp
jecxz
sub
jae
inc
rcl
mov
add
push
fistpll
notl
shll
repz
hlt
add
ret
repz
bound
mov
pop
mov
js
mov
mov
scas
inc
loope
je
sbb
ljmp
cld
adc
fwait
mov
adc
dec
push
inc
cmc
in
les
dec
je
cmp
jecxz
insl
cltd
test
xchg
mov
cltd
nop
push
dec
mov
sbb
fs
sub
mov
mov
scas
divb
pop
ss
mov
xchg
mov
push
pop
jno
sarb
xchg
mov
push
dec
push
mov
bound
popa
mov
daa
push
or
subb
xor
cltd
insl
cmpb
mov
cmpsl
aad
jno
arpl
gs
movsb
inc
pushf
or
and
sbb
fucom
outsb
sbb
mov
xchg
leave
daa
lods
inc
popf
mov
mov
pop
sub
fwait
mov
jge
add
mov
add
jnp
js
sahf
mov
in
xor
mov
add
xchg
jns
sub
rcr
push
loop
movsb
pop
in
and
mov
addr16
out
push
xor
xchg
dec
js
mov
mov
ret
sub
mov
xor
je
pop
es
cmp
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
jno
sub
call
pop
jl
mov
push
or
dec
repz
adc
sbb
ss
js
lret
aaa
jbe
add
int
and
dec
mulps
pop
adc
jns
cmc
push
out
pop
sahf
fnsave
mov
sub
pop
outsb
mov
mov
rorb
iret
das
stc
imull
sub
fcmovbe
mov
fsubs
mov
lret
gs
mov
stos
and
mov
roll
sahf
in
cs
cwtl
in
ds
mov
test
xchg
mov
mov
xchg
enter
imul
jns
sbb
jno
ficoml
mov
dec
dec
inc
std
add
movsl
push
ret
negb
sbb
sbb
aam
jle
sti
or
push
test
das
dec
dec
fwait
or
xchg
add
jmp
aaa
dec
push
adc
push
push
pop
icebp
sbb
arpl
push
icebp
out
inc
mov
jl
data16
leave
daa
mov
lret
mov
push
dec
add
pop
dec
push
fcmovne
pop
cli
add
loop
push
adc
enter
mov
js
xor
push
mov
shll
xor
nop
lods
push
xorb
pop
sarl
adc
movsb
push
rcrb
mov
popf
push
jg
adc
mov
jns
dec
mov
mov
inc
icebp
nop
ja
ret
cmpsl
jno
mov
and
in
sub
int3
mov
add
push
gs
push
insb
es
in
dec
inc
call
adc
ss
fdiv
mov
cmpb
data16
mov
inc
gs
push
icebp
mov
je
mov
in
or
shrl
push
ljmp
stc
mov
adc
pop
jecxz
out
lea
jge
movsl
ret
scas
inc
sbb
and
in
rcr
pop
adc
inc
pop
jbe
repz
xchg
push
pop
ljmp
call
adc
adc
test
xchg
xchg
adc
adc
pop
das
das
push
ja
hlt
inc
pop
out
and
sub
cs
dec
popf
mov
movsl
or
and
clc
out
inc
xor
lods
in
arpl
and
dec
lods
mov
xchg
xchg
out
ret
pop
xchg
test
xor
scas
shlb
mov
sbb
enter
ficompl
xor
cmp
mov
nop
fildl
pop
ss
outsb
mov
mov
mov
mov
push
movsb
xlat
lods
push
scas
add
in
mov
jns
mov
cmpsb
xchg
not
lock
inc
xchg
stos
cli
fisttpl
shlb
jmp
rol
into
movsl
push
out
fmul
sub
sub
mov
arpl
ds
xlat
add
inc
xlat
std
inc
sub
jmp
jbe
mov
js
or
clc
jae
cltd
mov
sti
sbb
or
sub
es
ret
fadds
orl
bound
mov
mov
pop
test
iret
inc
insl
push
sarb
pop
jp
sub
push
add
xor
fmull
test
and
sahf
movsl
push
cmp
subl
pop
cmp
shrb
repnz
sub
xor
test
enter
inc
imul
push
add
les
mov
xchg
mov
inc
or
enter
mov
test
cmp
add
ror
test
insb
and
dec
jp
cmc
mov
jp
cld
pop
daa
clc
inc
jle
cwtl
mov
mov
dec
sub
jecxz
jge
sbb
inc
dec
push
fsubs
out
mov
sbb
cltd
push
mov
lea
and
pop
lret
cwtl
out
mov
repnz
xchg
fsubrl
scas
sets
iret
insb
adcl
inc
sub
mov
jne
cmp
lods
mov
loopne
push
je
insb
and
mov
pop
xor
inc
pop
mov
dec
popf
dec
push
iret
inc
cmp
shlb
sbb
and
aad
es
xchg
mov
fs
push
and
mov
out
inc
jnp
xlat
jnp
gs
mov
cwtl
mov
mov
xchg
lea
xchg
loop
xchg
out
and
xchg
imul
inc
or
cmpl
sahf
sti
out
lret
add
cmp
mov
cli
push
sti
js
lods
dec
cltd
pop
nop
xchg
xor
xchg
xor
insb
mov
shr
test
mov
sub
adc
mov
test
stos
push
in
out
test
push
jl
mov
or
dec
jg
mov
repz
sub
iret
rorb
sub
mov
jae
test
push
sub
jmp
cmpsb
mov
pop
sbb
addr16
popa
insb
int3
test
les
out
inc
rorb
scas
int3
mov
mov
lahf
aad
incb
sub
pop
dec
inc
inc
out
mov
adc
insb
imul
and
mov
dec
mov
cli
jns
push
dec
pop
xchg
hlt
pop
push
inc
test
xchg
scas
mov
faddp
jg
test
xchg
fnstenv
and
sub
push
mov
movsl
out
inc
lds
rclb
dec
clc
clc
inc
js
push
ss
in
dec
sub
hlt
inc
movsb
loope
data16
shll
cmp
and
pop
push
pushf
mov
mov
sbb
cmp
push
xchg
imul
outsl
sub
and
xor
cltd
popa
and
shlb
jmp
dec
and
mov
cmp
xor
and
cltd
mov
daa
jle
mov
test
pusha
xor
flds
cmp
pop
out
out
xchg
sub
hlt
jmp
pop
mov
add
push
inc
loopne
xlat
sub
cmp
loope
dec
movsl
popa
xchg
dec
and
pmuludq
in
test
stos
addl
dec
xor
jbe
mov
push
sahf
jmp
mov
sub
add
mov
rorb
cmp
dec
push
cmp
int
sub
jle
dec
outsb
mov
dec
sub
out
push
loop
xchg
test
mov
repz
mov
cltd
pop
xlat
adcl
mov
xor
lret
cmpb
inc
pop
jns
gs
push
pop
xor
sub
leave
ss
fistl
gs
or
and
xor
divb
cmp
pushl
imul
dec
nop
loop
icebp
push
push
out
mov
xchg
mov
pop
cmpsb
les
mov
orb
mov
and
mov
mov
mov
cwtl
repnz
cmp
outsl
test
sbb
xchg
int
cmpb
sarb
xor
and
adc
ja
fisubrl
in
push
icebp
stos
push
mov
stos
jge
lret
aaa
sbb
mov
mov
int
xchg
add
daa
sub
outsl
inc
and
mov
xchg
xchg
into
lcall
ret
push
sbb
xor
mov
cmp
popa
xor
std
rclb
lret
jb
mov
orb
andb
es
mov
lods
popa
cmp
sub
xorl
adc
xchg
mov
psrlw
addr16
jo
outsl
adc
pop
mov
je
jmp
xchg
cmpsb
push
lea
xor
and
jg
add
mov
cmp
dec
insl
sbb
ja
jns
add
insb
fcomp
ljmp
inc
in
into
mov
shlb
inc
mov
mov
inc
loope
jns
and
fcompl
mov
push
dec
nop
out
testl
psadbw
fisubl
arpl
and
adc
or
clc
fmulp
ss
movsl
jmp
aam
in
in
fs
lds
or
das
sarb
cwtl
xchg
in
dec
xchg
lods
in
lcall
mov
pop
push
jnp
dec
lret
mov
lods
dec
lds
in
cmc
jno
aaa
out
jg
cmp
stc
out
xor
jo
std
fldcw
shlb
sbb
xorb
jno
jp
ror
lcall
lock
xchg
stc
les
adc
ret
ret
clc
adc
inc
mov
inc
rcll
xchg
repz
push
mov
or
shrb
or
imul
mov
dec
jmp
ljmp
scas
xlat
addb
pop
mov
pop
and
add
shl
dec
mov
pop
imulb
add
call
out
ret
sub
push
imul
out
cmp
dec
ud2
dec
popa
pop
add
mov
mov
sbb
pop
pop
mov
jmp
push
out
inc
repnz
arpl
jle
out
push
xlat
inc
and
pusha
lods
lods
mov
sub
aas
shr
cmc
pop
adc
ds
aas
dec
sbb
and
cltd
int3
mov
dec
inc
push
add
inc
xchg
jnp
dec
in
insb
imul
ss
jmp
in
nop
pop
mov
xchg
mov
in
sbb
pop
outsb
sti
jno
jns
hlt
ds
lods
sbb
fists
lret
aad
adc
push
jb
ds
xchg
repnz
dec
sub
lea
push
notl
out
shll
xchg
or
inc
xchg
jno
jb
ret
iret
andb
xlat
aas
out
gs
push
adc
pop
int
sbb
je
es
push
mov
push
or
icebp
push
add
scas
sbb
push
jmp
mov
in
jno
fidivrs
loope
ret
mov
sub
and
cmp
add
pop
sbb
jge
mov
pop
jl
add
fisubrs
mov
adc
int3
jmp
shl
adc
or
add
adc
or
jb
push
sbb
xchg
jecxz
rcr
and
addr16
inc
ret
fwait
addl
rorb
jl
mov
push
jnp
dec
jp
fsubrl
mov
rcrl
mov
bound
pop
hlt
xchg
push
or
push
movsb
mov
mov
add
xchg
daa
insb
ljmp
and
aaa
sbbb
lea
jbe
mov
cmpsl
hlt
pop
sbb
test
ljmp
ds
pushf
in
dec
mov
inc
adc
adc
pop
loope
sbbb
scas
notl
cmpsl
xor
or
loop
push
cmp
and
pop
adc
dec
shrl
mov
mov
or
xchg
jae
vpunpckhbw
cmp
cmp
mov
cwtl
aas
cmp
insb
movsl
and
mov
movsb
and
fsubrl
push
inc
lahf
mov
mov
sbb
scas
insl
fistl
mov
pop
jbe
data16
jp
push
adc
or
fsubl
lods
shl
test
shlb
xchg
push
sub
dec
test
lret
mov
dec
pop
pop
xchg
inc
rcrl
icebp
and
cld
push
outsb
adc
mov
fimull
dec
add
lock
push
in
lret
xor
lret
repnz
dec
mov
adc
lds
cmp
jb
insb
add
add
adc
pop
mov
cmp
fsubrp
leave
fcompl
imul
xchg
jle
push
sahf
int3
cmp
test
mov
outsl
adc
cmpsb
fildl
fcoms
sub
cmpsb
push
shll
or
sub
out
mov
bound
in
and
mov
shrl
out
or
inc
enter
ret
fsubs
test
adc
jno
sbb
mov
mov
sub
es
mov
orl
jl
pop
or
cwtl
jns
sbb
movsl
out
inc
je
loopne
push
lods
fadd
out
push
popf
push
stos
in
mov
add
cmpsl
xorl
inc
ror
adc
push
ja
and
jns
push
popa
jecxz
sti
inc
jns
push
lahf
or
pop
cmp
sbb
and
std
jbe
pop
rcll
outsb
xorb
pop
add
xchg
fistpl
mov
gs
inc
or
sub
mov
mov
jmp
or
xchg
push
pop
push
leave
addb
mov
add
lahf
scas
dec
sub
add
movsb
cmp
loope
js
xchg
fbld
or
mov
jbe
jecxz
jne
pop
lock
adcb
lock
fisubrs
loop
adc
sub
in
sub
shrb
jle
arpl
ret
xchg
das
jae
xchg
jmp
icebp
xor
lea
and
mov
adc
xlat
out
and
jne
call
int
xor
and
hlt
mov
cmpsb
xchg
mov
lret
nop
mov
sub
enter
cmp
aad
hlt
xlat
mov
adc
negl
aas
repnz
or
test
sub
push
pop
xchg
mov
pop
test
xor
aas
lahf
mov
int
pop
adcb
fimuls
push
ret
iret
jp
add
int
lods
mov
sbb
pop
es
lds
into
cmp
in
jne
jo
out
inc
ficomps
sub
xchg
test
adc
adc
cltd
outsl
cmp
fsubp
movsb
jno
sub
fst
xchg
add
insb
xchg
or
lret
cmpl
sub
pusha
mov
out
dec
iret
sbb
mov
es
mov
sbb
adc
repnz
push
test
cmp
repnz
cmp
orb
int3
inc
fiadds
pop
inc
stos
rcrb
mov
sub
pop
fs
pop
sbb
sbb
cli
jle
loop
mov
test
jge
sbb
outsb
sahf
int
push
add
mov
add
into
mov
testb
in
dec
test
jp
mov
push
out
insb
aas
repnz
test
testl
std
adcb
xchg
push
cmpsl
fldt
xchg
test
adc
jl
mov
daa
pop
mov
sbb
and
ret
sub
icebp
cmp
sti
or
push
xchg
cmp
xchg
cmp
jo
sti
sub
in
std
xlat
add
je
mov
movsl
pop
pop
mov
call
jp
test
and
dec
fs
mov
jno
je
or
push
pmulhw
mov
xchg
ljmp
push
pop
lcall
iret
cmp
push
mov
in
imul
jb
js
pcmpeqd
cmp
sahf
xchg
aam
out
xchg
pop
xor
aad
jmp
jp
and
xchg
stc
sbb
aam
xor
scas
jo
aad
dec
or
ljmp
mov
push
sbb
cmpsb
nop
aaa
ss
mov
ljmp
or
sbb
add
jb
jne
test
outsl
test
lret
pop
sub
mov
dec
jmp
and
fcoml
push
mov
dec
push
ss
jecxz
xor
icebp
dec
aaa
aaa
jg
sub
adc
sub
mov
test
addb
les
pushf
addl
mov
mov
pushf
js
pop
jg
add
in
mov
imul
div
mov
jle
cmp
aam
outsb
dec
ja
ss
jo
fidivl
inc
test
cmp
popf
xor
mov
divb
int
xchg
add
or
cmp
sbb
xchg
add
xchg
mov
gs
cmp
mov
sbb
cmpsl
adc
dec
nop
cmpsl
test
mov
or
cld
scas
mov
sbb
jb
clc
cmpsb
mov
adc
sub
jecxz
movl
push
xchg
sahf
and
testb
stos
bound
adc
xor
fucomp
dec
mov
ljmp
aad
mov
or
mov
push
mov
dec
jae
inc
in
mov
das
xor
arpl
push
in
xchg
out
push
adc
push
fucomi
cmc
and
repz
shrl
mov
inc
rcrb
stos
out
jg
xchg
jmp
sub
jne
inc
test
dec
jbe
sahf
rorb
add
lret
out
push
call
inc
int
mov
or
push
fstpt
outsb
mov
ljmp
lcall
jp
shlb
in
sub
repz
pop
mov
fcmovb
mov
xchg
xor
push
pop
inc
cmpb
inc
add
push
es
mov
out
lahf
hlt
mov
jne
nop
movsl
jecxz
js
jne
pushw
loop
int3
rsm
test
mov
std
inc
adc
lea
mov
and
lahf
dec
imul
dec
syscall
jmp
dec
or
cmc
xchg
cltd
test
or
mov
insl
sub
repz
lret
fldenv
enter
lods
sub
fcomi
stos
xchg
imul
push
sub
adc
inc
icebp
sbb
fcomps
test
fdivrl
jns
push
psllq
push
ja
xor
iret
inc
int3
or
mov
sbb
cmc
stos
mov
hlt
add
xchg
out
adc
sub
xor
mov
xchg
das
mov
xor
imul
cmc
adc
scas
sarb
fistpl
mov
ror
in
push
sub
mov
enter
lods
mov
dec
inc
sbbl
nop
xchg
cmp
jge
mov
sub
sbb
rorl
scas
call
sub
ljmp
mov
rdtsc
pop
and
sub
jle
xchg
pop
into
pop
fst
shr
xor
push
sbb
daa
in
pushf
gs
push
cs
pop
mov
sbb
or
pop
mov
fidivs
push
inc
ret
mov
mov
sbb
in
cmp
adc
xchg
add
std
int
repz
xchg
stos
and
icebp
pop
cmp
pop
xchg
xchg
push
lods
mov
mov
syscall
fiaddl
dec
ss
data16
js
imul
cli
lret
cmpsl
fnsave
and
fwait
repz
add
lea
xlat
pop
or
xchg
ss
enter
lret
pop
mov
fxch
xchg
mov
lock
enter
movsl
cld
pop
adc
push
add
mov
call
inc
fisubrs
outsb
je
and
push
pop
add
insl
cmc
das
cmp
sbbb
out
loope
testl
shll
pop
pop
mov
outsb
loopne
and
pop
push
ret
sbb
mov
jo
mov
in
push
push
sub
mov
dec
out
out
mov
sub
pop
jnp
in
adc
mov
add
pop
mov
in
into
push
jbe
cltd
xorl
push
stc
scas
cld
out
jns
cwtl
test
pusha
mov
inc
sub
mov
movsb
mov
push
lds
scas
add
repnz
ret
jae
je
stos
jge
inc
call
mov
cmpsb
movsl
push
nop
loopne
or
and
mov
aaa
inc
sti
sbb
test
push
and
mov
gs
rcrb
xor
mov
jp
arpl
jns
movsb
popa
in
insb
cwtl
xor
sub
dec
leave
ja
addr16
mov
outsl
mov
pop
orl
xor
pop
decb
add
mov
xchg
mov
cmp
xchg
sub
jp
mov
pop
pushf
inc
outsl
repz
shll
jp
mov
dec
sbb
cmpsl
in
dec
hlt
ror
fwait
pop
pushf
mov
sub
clc
rorb
mov
mov
inc
mov
lock
mov
movsl
insb
sarl
xchg
jge
aaa
push
clc
outsb
mov
ficompl
jb
imul
fdivrs
fs
fadd
pop
nop
cmp
mov
jl,pt
loop
xchg
pop
es
mov
inc
mov
mov
push
lds
dec
stos
push
bnd
inc
or
cs
outsl
leave
lcall
dec
and
decb
and
inc
je
and
fninit
mov
xorb
mov
mov
push
notl
icebp
lds
pop
mov
inc
hlt
mov
leave
lock
cmpsl
and
add
stos
inc
movsb
es
outsb
and
bound
cmp
jns
jmp
aas
outsl
xchg
or
or
andl
lahf
mov
adc
mov
ds
add
fwait
cmpsl
mov
adc
push
mov
xchg
pop
pop
adc
lcall
wrmsr
dec
or
xchg
pusha
repnz
cmp
push
es
or
mul
and
push
mull
mov
xlat
pop
testb
out
jo
mul
in
inc
jb
dec
sbb
push
mov
lock
cltd
push
jns
test
lret
aaa
jnp
xlat
add
cwtl
out
popf
pop
inc
mov
mov
sub
pop
adc
pusha
inc
repnz
out
data16
pop
push
jnp
scas
push
sub
int
pop
dec
aas
or
push
sbb
cmp
mov
roll
out
cmp
fisubl
jecxz
loop
mov
pop
mov
cs
cmpsb
into
inc
ds
test
fdivr
push
sub
mov
popa
sbb
shlb
sbb
mov
lods
dec
jbe
repz
ss
aas
inc
inc
cmp
lods
js
pminub
xchg
fcompl
push
push
push
sub
sar
aam
xchg
sub
sbb
inc
adc
in
jb
jmp
or
pusha
lret
addr16
jge
aam
pop
les
inc
out
push
adc
jge
push
xchg
out
push
js
mov
sub
adc
mov
pop
jg
fisttps
push
test
jnp
push
mov
shlb
mov
xchg
popa
rorb
cmp
jns
pop
nop
out
xchg
enter
jno
cmp
mov
xchg
gs
jae
pop
mov
add
inc
je
push
sub
add
lea
out
xchg
adc
or
jae
jnp
sub
dec
xor
repz
addr16
add
clc
push
pop
pop
mov
dec
or
in
xchg
ljmp
pop
inc
jnp
pop
lret
mov
cltd
push
dec
in
adc
push
mov
cmp
jle
mov
loop
mov
imul
mov
popa
inc
mov
out
test
cmp
clc
or
fmul
xchg
push
aaa
inc
shl
ret
and
aam
outsb
jb
pop
mov
cs
lds
aaa
mov
mov
adcl
ds
dec
xchg
shrb
dec
xchg
sbb
sub
aad
cltd
xor
out
aaa
dec
jg
data16
and
xor
in
add
and
es
cld
lock
mov
mov
test
cmp
sbb
mov
push
in
ljmp
and
aam
movsb
sub
adc
repnz
leave
call
or
test
lret
ja
cmpsl
adc
std
pop
insb
jmp
mov
mov
test
mov
xchg
pop
loop
jne
xor
sbb
or
roll
inc
shlb
mov
popa
aad
out
lret
or
aas
jne
or
popf
lret
sbb
hlt
iret
pop
or
pushl
aam
je
pop
int
stos
cld
jecxz
jmp
inc
push
in
mov
xor
popf
xchg
jg
pop
push
in
lcall
pop
loope
insl
in
jle
call
jle
xor
mov
nop
aam
mov
xchg
pusha
mov
xchg
enter
call
aaa
popf
sti
adc
out
stos
pusha
push
fcmovnb
xor
sbb
pop
xchg
pop
fcompl
subb
pop
fimull
pop
cmc
in
test
arpl
jl
rolb
dec
adc
sbbb
sbb
in
cltd
or
ljmp
pop
xchg
sbb
mov
push
cmpsb
out
les
cmp
mov
cld
dec
cmp
mov
jne
adc
rcrb
sub
xor
aas
popa
cmp
jecxz
adc
mov
cmc
pop
cmp
mov
push
or
loop
testb
cmp
nop
rcl
popa
add
jmp
testl
repnz
lods
movsl
rcrb
sub
jg
dec
ljmp
or
out
pop
jmp
mov
xor
imul
fiaddl
xor
mov
mov
das
pop
jle
jb
cmp
adc
aaa
inc
fbstp
das
aaa
hlt
push
and
insl
int
xor
sbb
and
hlt
icebp
ja
or
mov
mov
dec
cmp
jnp
pop
pop
mov
das
shr
cli
inc
jl
mov
cmp
sbb
jmp
mov
repnz
push
lret
pushf
les
push
dec
stos
jmp
in
cmpsb
cmc
dec
pushf
sub
cli
das
cwtl
addb
bound
lahf
jmp
cs
jmp
pop
arpl
cmpsl
xchg
pop
das
xchg
inc
adc
cwtl
and
in
pop
xchg
aam
and
cmp
cmp
add
and
aas
repz
mov
jne
rcl
jns
jb
fidivs
cmp
cmpsb
add
xchg
mov
xor
mov
jnp
out
mov
cmpsb
out
jmp
aas
insl
sbb
popa
dec
lcall
mov
sarb
popf
sbb
inc
movsl
shll
or
pusha
sub
in
hlt
test
jmp
testl
adc
lahf
pop
xor
gs
lret
push
enter
ror
pop
push
loopne
imul
adc
pop
test
sbb
iret
incb
imul
in
xchg
mov
pop
lock
shrb
cmp
pop
pop
fs
loopne
incb
mov
imul
xchg
and
imul
xorb
add
cmp
cltd
shlb
sbb
lahf
arpl
jge
cmp
push
es
mov
aas
pushf
loopne
mov
cwtl
movsl
daa
ds
dec
gs
push
fwait
mov
sbb
cmp
lahf
in
hlt
add
shll
dec
lcall
in
mov
xor
pop
daa
push
cmpsb
fstpt
dec
and
std
push
xor
jecxz
push
pop
push
icebp
and
or
test
aad
sub
adc
inc
jecxz
int3
lret
sti
jns
stc
sub
jl
pop
jbe
inc
dec
cmp
jbe
dec
push
arpl
and
jbe
aad
sbb
xchg
pop
add
popa
cmp
pop
js
imull
pop
inc
lods
add
fsub
notb
and
movsb
sub
mov
pushf
jmp
and
pop
ficompl
jb
xorb
shl
sub
dec
cwtl
das
imul
pop
mov
inc
stos
xchg
xchg
aad
lods
cmp
jns
repz
movsb
xchg
cmpsl
mov
loope
lea
sub
fwait
ror
push
jle
test
xor
add
jae
inc
aad
or
sub
mov
inc
cmp
lcall
adc
mov
repz
ja
fimull
jle
rcll
adc
xchg
popa
ficomps
sub
cmp
pop
and
cmpsl
shl
fisttps
das
mov
mov
test
cmp
stc
jns
dec
lock
jg
cmp
lret
andl
dec
xor
adc
adc
in
or
inc
outsb
outsl
xor
sti
sbb
pop
xor
xchg
push
repnz
aad
dec
lods
jno
mov
insb
cmp
orl
sbb
xor
jno
mov
test
jle
mov
jne
dec
mov
dec
ss
int3
sub
push
daa
jo
xor
or
std
xchg
repnz
nop
mov
mov
mov
test
mov
cmp
enter
mov
or
sbb
test
inc
mov
push
mov
les
popa
repnz
gs
inc
aaa
push
test
in
fisubrl
shll
daa
popf
clc
and
gs
iret
mov
mull
jl
cmp
fs
dec
jae
pop
lea
std
dec
and
jl
call
mov
pop
mov
fidivs
dec
dec
xchg
or
ret
out
das
cmp
popa
in
sub
ret
gs
dec
mov
cmc
shl
sub
mov
das
sub
and
push
shrb
ret
fadds
jno
xor
int
jl
add
lods
push
movsl
push
push
fs
js
cmp
mov
ret
push
jg
lret
add
and
cmpsb
push
mov
stos
jmp
shr
sbb
jnp
xchg
push
inc
hlt
rcrl
jne
rcrl
push
jecxz
pop
js
mov
sbb
inc
push
js
adc
push
adc
add
mov
lret
push
sub
mov
stos
xchg
xchg
or
mov
mov
adcb
mov
clc
cmp
cmp
cwtl
xlat
cmpsl
mov
push
int
inc
xchg
and
fists
fcoml
sbb
lea
push
mov
xchg
jb
lods
adc
cld
call
mov
adc
js
out
fptan
jecxz
jb
or
std
lcall
mov
or
popf
stc
sahf
push
or
divl
and
jo
insb
cmp
arpl
mov
divl
push
jbe
xchg
imul
jmp
pop
ja
pop
movsb
imul
lods
jnp
mov
in
jecxz
cld
shrb
jmp
mov
mov
jns
div
lods
mov
sbb
rcrb
jle
jmp
fnstcw
mov
jb
push
mov
push
pop
push
js
repnz
inc
stos
bound
enter
jge
adc
mov
xor
push
xchg
jge
out
mov
mov
inc
loop
int3
cmp
xchg
mov
out
sti
fisubrl
xchg
or
jno
mov
and
cwtl
mov
fsubrs
in
cwtl
inc
test
mov
mov
into
mov
jns,pt
or
ja
adc
jb
out
xor
and
sbb
iret
data16
lea
repnz
in
les
adc
inc
mov
repz
push
mov
jp
in
cmpsb
push
mov
dec
and
mov
inc
inc
into
imul
sti
dec
mov
in
cmp
lea
dec
pop
inc
jmp
or
or
pop
pop
jnp
adc
in
adcb
mov
or
xchg
pop
jno
rcrb
lret
cmp
loopne
cmp
lcallw
iret
int3
mov
mov
push
jmp
mov
sub
scas
push
sub
pop
jecxz
dec
fldcw
ljmp
xlat
dec
stos
mov
in
mov
loopne
inc
dec
cld
dec
push
repz
push
mov
enter
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
pop
xchg
out
loop
and
inc
mov
sub
addl
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
