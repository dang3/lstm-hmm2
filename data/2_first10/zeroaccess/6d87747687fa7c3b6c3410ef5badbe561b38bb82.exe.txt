push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
pop
jl
jl
lods
jl
jl
xor
xor
ja
or
adc
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
sbb
sub
in
xor
pop
xchg
add
add
jmp
leave
mov
pop
mov
les
push
clc
lods
jl
jl
jl
jl
outsb
mov
aas
out
mov
sub
sub
or
test
cmc
arpl
or
mov
imul
fucompp
enter
pop
dec
leave
repnz
scas
fucomp
sbb
xchg
sub
pusha
add
mov
pop
ss
leave
scas
cmp
cwtl
sbb
es
gs
loop
call
icebp
pop
mov
xchg
fistl
pop
xlat
iret
scas
clc
ret
jp
je
mov
inc
dec
and
or
and
mov
add
psubsb
aas
mov
test
test
mov
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
lret
push
lods
jl
jl
jne
mov
and
jae
test
adc
fidivrl
out
inc
popf
mov
inc
xor
push
and
lock
icebp
push
inc
mov
xchg
push
xchg
sub
stos
sbb
aam
inc
je
sbb
pop
cwtl
sbb
jle
orl
push
idivb
stos
mov
in
fbld
ja
xor
in
push
sbbl
and
imul
push
mull
pop
in
pop
je
shlb
and
out
mov
shlb
dec
add
outsb
mov
mov
cmc
ret
int3
aad
mov
inc
mov
mov
mov
repz
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
or
test
jnp
xor
test
aas
cmc
clc
xor
idiv
push
stos
fistps
shrl
pop
movsb
cmp
cmpsl
push
mov
rorl
sarl
xchg
mov
xchg
rcrb
ljmp
lea
push
jecxz
fidivl
pop
insl
scas
popa
stos
bound
xchg
sub
outsb
cmc
gs
pop
add
or
jmp
fcmovbe
stos
cmp
add
xchg
mov
sub
insb
hlt
insl
pop
stos
das
jb
data16
pop
fiadds
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
lock
jl
or
fstps
hlt
mov
xchg
mov
mov
fwait
sub
clc
lods
cmc
inc
in
xchg
into
xchg
xor
xchg
hlt
and
jb
add
mov
fstl
adc
inc
sub
sub
rorl
scas
iret
adc
add
sub
cmp
dec
push
imul
out
cmp
fidivrl
rclb
jbe
or
pop
lahf
inc
movsbl
movlps
test
xchg
lods
cmp
jns
int
aam
inc
aam
outsl
inc
ja
int3
sarl
into
xchg
xchg
cmc
mov
dec
sahf
push
js
sbb
hlt
push
mov
inc
in
or
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
dec
popf
add
into
je
cli
jecxz
pusha
cmp
cmp
mov
stos
jmp
movsl
scas
lea
xchg
ds
out
cltd
das
sub
cld
cmp
push
mov
loopne
cmpsl
lcall
ret
lahf
fdivs
cmp
mov
scas
rorb
sub
fistpll
sbb
push
bound
imul
sbb
sub
mov
push
cwtl
in
sbbl
add
in
into
fimuls
ds
fidivrl
les
mov
rorl
push
loop
cltd
data16
jnp
lret
insb
add
add
movzwl
mov
jmp
repz
jecxz
push
scas
sarb
sub
sbb
jl
lods
jl
jl
sbb
fcoms
sti
shrb
test
stc
add
cmp
jno
repz
xchg
sub
mov
into
shlb
pusha
into
sahf
inc
pop
insb
xchg
fstps
icebp
imul
push
xorb
fldl
xor
stc
arpl
ds
and
fwait
mov
inc
cmp
pop
shrb
imulb
outsb
or
jno
fyl2x
mov
adc
out
pop
xchg
imull
xor
inc
mov
sbb
in
inc
jg
fnstsw
ja
jge
addr16
xor
dec
mov
sub
cmp
adc
clc
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
outsb
adc
lods
jl
jl
pop
sub
daa
in
mov
outsl
jno
fisubs
insb
push
nop
add
hlt
mov
mov
cmpsl
sub
xchg
jl
add
add
adc
out
js
test
jl
pop
jecxz
add
in
mov
lcall
sub
decl
add
fistpl
in
or
or
push
stos
fnstcw
xor
sbb
push
arpl
fistl
int3
sub
inc
add
add
xchg
test
mov
js
test
pusha
rcll
and
out
shlb
pushf
js
repz
xchg
into
lahf
testb
decl
call
imul
decl
add
cld
decl
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
dec
mov
mov
cmpsb
pop
lods
cmpsl
out
jno
pop
dec
push
sub
lret
pop
adc
mov
mul
lahf
icebp
ret
sbb
shrl
mov
or
sub
mov
lahf
stos
cmpsb
data16
lret
int3
lock
inc
in
mov
pop
and
jbe
pop
fs
test
sbb
push
mov
dec
inc
sbbb
push
aaa
aam
pop
stos
fisubrs
add
mov
fiadds
mov
xlat
xor
inc
nop
adc
mov
insb
pushf
arpl
in
fadds
lea
dec
pushf
and
test
fnsave
xchg
hlt
mov
jne
push
fwait
xor
sbb
inc
sbbb
leave
ljmp
loope
into
mov
or
mov
out
jg
fnstenv
push
fiadds
mov
sbb
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
popa
sbb
jmp
jb
jl
jg
jl
xchg
push
dec
clc
sub
adc
sbb
jo
fnstsw
dec
sub
inc
xchg
cwtl
ret
xchg
sub
loopne
or
pop
daa
or
fstps
inc
inc
repz
push
rcr
pusha
pop
jbe
cli
dec
push
scas
and
fnsave
lock
in
movl
sbb
out
mov
call
aad
inc
insb
add
cs
sub
mov
jmp
mov
imul
jae
dec
add
scas
ja
xchg
test
jg
filds
sub
cmpsl
jb
aaa
neg
repz
push
pushf
add
xchg
dec
cmp
add
out
cld
cmpsl
daa
cmp
data16
rcl
adc
test
or
add
ss
xchg
xchg
xor
push
or
ud0
stc
loope
rcl
in
pop
int
repz
adcl
jmp
mov
cltd
mov
sbb
jl
jno
jl
jnp
mov
mov
jmp
push
mov
outsl
loop
jae
cmpsl
shrl
xchg
es
in
das
pop
push
sti
pop
fmuls
mov
add
mov
sbb
aam
daa
mov
cmp
scas
and
mov
mov
mov
xor
sbb
mov
ret
test
pop
lds
pop
rcr
and
lret
or
xor
push
stc
adc
push
je
shlb
sti
mov
sbb
inc
adc
sub
xchg
mov
jp
cmp
jno
cmp
nop
inc
xor
xor
dec
xchg
ficompl
adc
xor
inc
mov
and
movsb
xchg
call
pusha
adc
mov
adc
imul
fadd
sub
loope
movb
lret
dec
adc
clc
inc
adc
push
mov
pop
aad
pop
xchg
sbb
xchg
push
imul
cmpl
or
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
dec
cmc
insl
lcall
jl
xchg
lods
ja
out
mov
fildl
call
stos
mov
sub
cmpsl
jl
outsb
stos
stc
lahf
push
lahf
or
std
pop
cmpb
popa
cmp
pop
loope
push
pop
jno
addl
adc
add
out
cmp
mov
pushf
mov
pop
sub
lcall
jl
aas
lret
daa
imulb
xor
out
aam
cmpsl
das
hlt
ja
movsl
jmp
push
fcomps
xor
stos
call
addr16
int
nop
jne
push
mov
das
push
sbb
pop
jge
sbb
stc
insl
arpl
mov
add
out
cld
mov
dec
push
sub
bound
pop
shr
movsb
movsl
mov
int
hlt
outsw
popa
dec
mov
inc
hlt
jg
mov
rorl
repnz
or
imul
jne
inc
enter
clc
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
cs
mov
jno
jl
icebp
out
into
or
push
sti
sbb
popa
sbb
and
test
sub
pop
cmp
pop
paddsw
lds
fdivrl
xor
out
lret
push
mov
mov
and
data16
mov
xchg
loop
pop
xor
xor
cmp
lds
test
mov
mov
fistpl
jns
add
push
pusha
xchg
das
ljmp
xor
leave
mov
push
mov
inc
mov
jns
mov
into
mov
ret
aam
subl
adc
pop
dec
add
jbe
mov
fists
or
in
loope
mov
cmpsb
inc
mov
ja
inc
movl
sub
insb
and
sbb
inc
inc
push
jp
sti
mov
int
adc
xchg
push
cmp
cld
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
push
pop
dec
lea
jl
jg
jl
int3
inc
int
pop
outsl
lea
sbb
pop
scas
sub
dec
loop
outsb
mov
cs
iret
jns
xlat
loop
xchg
xchg
scas
pop
sub
mov
inc
outsl
pop
test
movsb
mov
mov
push
sub
loope
cs
hlt
popa
cltd
popa
sbbl
rorb
js
stos
test
pop
es
sbb
imul
jle
pusha
stos
mov
sub
jnp
dec
gs
mov
push
bound
subb
cmpsb
fiaddl
pop
jmp
jl
xchg
popf
or
or
stc
xor
cmpsl
aaa
mov
pusha
nop
icebp
pop
lea
leave
in
mov
xchg
add
pop
adc
mov
cmp
stos
fmull
cmp
sub
xchg
pop
jl
lock
sub
leave
dec
cltd
cmpsb
lods
xchg
jo
cmpsb
subl
std
push
xchg
lods
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
cmpsb
test
jl
jg
jl
leave
push
stos
inc
or
repz
lcall
adc
lret
and
add
xor
mov
push
push
jne
or
cmp
push
push
sar
ret
pop
lods
xchg
or
and
mov
iret
sbb
outsl
lods
rorb
jne
mov
sbb
sub
xchg
mov
insl
cmp
fwait
shrl
dec
jno
into
lret
inc
test
adc
and
push
aas
or
daa
push
push
mov
jmp
mov
dec
xor
movsl
sbb
fstpt
cmp
ret
dec
mov
mov
and
mov
pop
pop
fcmovnbe
std
adc
mov
imul
push
cmp
aas
push
not
andb
cmpb
xor
mov
addb
pop
mov
scas
add
xorl
sbb
movsl
enter
adc
sbb
nop
jns
rcl
add
xlat
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
push
cmp
mov
nop
cmpsb
mov
or
in
ja
adcb
pop
xor
bound
sbb
sub
xchg
mov
fldt
fxch
or
sbb
dec
jg
fiaddl
adc
ret
adc
shrl
push
int
dec
cwtl
cmp
cltd
movsl
test
decl
or
pop
and
aad
and
sahf
dec
mov
mov
xor
movsb
or
into
mov
cmp
sbb
shrl
jecxz
scas
jge
dec
fstpl
sub
or
adcb
mov
sub
push
xor
xchg
in
movsl
test
and
ss
inc
xchg
fdivrs
inc
insb
mov
popf
pop
mov
jns
sbb
sti
ud1
repnz
clc
sti
subl
scas
sub
cmp
cmpsl
vhaddps
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
and
or
jg
jl
mov
lcall
test
mov
cmp
pop
inc
inc
dec
fcmovnb
cmc
pop
push
mov
inc
jge
nop
push
or
xchg
cli
daa
cli
imul
pop
cmp
adc
jb
sub
lcall
in
sub
cmp
lret
xchg
jl
push
sbb
jns
test
insl
call
cli
arpl
mov
stc
sbb
sbb
call
aaa
lret
test
or
sti
jmp
pop
hlt
dec
mov
lods
das
dec
sbb
pop
push
loopne
xchg
ret
push
pusha
lret
loope
pop
cld
in
or
loope
rclb
dec
xchg
or
xlat
outsb
rcrb
dec
mov
scas
mov
test
push
or
pop
mov
mov
push
mov
scas
cmp
daa
int3
fisubl
dec
xor
or
jb
xor
call
dec
xor
inc
call
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
xchg
sbb
jg
jl
pop
pop
jmp
andb
push
imulb
jae
fdivrl
xor
dec
adc
mov
lods
jecxz
sbb
out
iret
xor
adc
fistpl
test
rclb
push
je
popa
sbb
das
cmp
sub
inc
mov
sub
stc
mov
test
je
mov
imul
pushf
shll
xlat
xchg
loop
adc
xchg
xor
es
jmp
adc
imul
mov
aam
into
ss
jl
push
push
sbb
mov
inc
sbb
popf
dec
lods
dec
and
shrl
inc
fwait
icebp
popf
lea
add
jp
pop
xchg
pusha
into
inc
out
cmc
sbb
and
incb
inc
cmc
mov
sub
out
dec
pop
insb
jo
lock
fsts
aaa
xchg
notb
jg
mov
xor
cli
into
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
xor
movsl
lcall
jl
sbb
push
out
sbb
push
cltd
jb
push
lods
loopne
dec
aaa
call
mov
shlb
xor
mov
gs
sub
jnp
enter
mov
adc
cmp
pushf
cmp
shll
add
lahf
fcomi
adc
in
mov
addr16
repnz
pop
sbb
hlt
mov
test
lret
pop
jmp
inc
sbb
add
imul
jae
mov
test
adc
mov
std
mov
pop
push
pop
test
xor
mov
mov
xor
enter
pop
sbb
cmp
loop
add
divb
std
add
xchg
xchg
jno
push
xchg
test
pop
cmp
sarb
lock
sbbl
add
cmp
xchg
sbb
inc
mov
mull
mov
roll
mov
mov
cmp
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
stc
pop
idivb
or
jl
jl
jl
xchg
mov
adc
mov
jp
adc
psrlq
pop
sbb
aam
sbb
sahf
rorb
dec
fmul
in
mov
aad
subl
sub
dec
jb
nop
dec
loopne
fucomi
adc
pop
test
out
mov
pop
stc
or
jg
repnz
stos
mov
or
stos
add
jmp
dec
mov
mov
mov
push
mov
inc
adc
push
sahf
push
xchg
and
or
enter
mov
loop
aaa
dec
ss
xor
sti
std
stc
int3
aam
pop
mov
pop
sub
cmp
mov
lcall
dec
xchg
sbb
mov
fimuls
mov
rcll
adc
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
adc
haddps
jl
je
cmc
mov
xchg
cmp
sub
mov
pusha
aam
push
insb
mov
fstpl
mov
cmp
adc
sbb
mov
inc
into
fs
mov
jae
push
iret
push
dec
enter
or
add
cmp
cmpsl
cmpsl
sahf
mov
pusha
add
fwait
jmp
push
inc
cld
movsl
inc
imull
and
jmp
mov
push
push
loop
movb
xchg
pop
scas
xlat
repnz
add
out
popf
pop
int3
push
cmpsb
mov
inc
dec
sub
sub
popf
push
and
sbb
xchg
ret
idivl
lock
inc
push
scas
jo
outsl
push
les
push
push
fadds
mov
in
and
xorl
lea
dec
lcall
je
mov
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
mov
jl
jl
jl
jns
add
dec
mov
pop
push
je
xchg
loope
mov
xor
push
jnp
jecxz
push
mov
into
inc
call
icebp
jne
pusha
test
xor
dec
lods
jne
fwait
push
cmpsl
xchg
adc
ret
test
cmp
cmpb
lret
rcr
cmp
leave
nop
add
mov
imul
push
fidivl
cmp
cmc
sub
loop
ds
adc
xor
and
xor
movsl
cwtl
and
dec
lods
mov
repnz
aaa
mov
test
mov
fisttpl
sarl
pusha
mov
mov
xchg
or
loope
add
xchg
sub
lret
pop
cmc
and
cli
dec
fmul
shrb
call
mov
rcr
mov
pop
jmp
xlat
push
imul
xor
xchg
out
and
int3
add
jl
jl
push
fwait
bound
push
sub
inc
mov
fldl
lock
roll
sbbb
inc
into
or
cld
mov
imul
leave
add
mov
enter
addb
loopne
fcmovnu
fisubrs
or
icebp
sub
out
roll
xor
testb
or
cld
pop
ret
int
adc
arpl
and
add
lea
fimull
icebp
lret
neg
sub
mov
cmp
mov
pop
or
dec
pushf
call
lods
xlat
lods
outsb
stc
aam
sub
ja
call
enter
pop
shl
mov
xchg
xchg
outsb
orl
sub
and
clc
aam
lods
push
fisttpl
mov
pop
add
jp
jl
push
hlt
adc
scas
pop
gs
mov
or
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
push
push
jl
push
jl
jl
out
or
xchg
stos
dec
jns
pop
mov
push
imul
pop
push
popf
and
ret
out
sbb
xor
inc
clc
cmp
xchg
std
sub
pop
and
mov
dec
mov
cmp
push
aam
jg
jmp
dec
cltd
iret
pusha
iret
divl
std
xchg
in
mov
or
fsubs
sbb
pop
jae
in
mov
loop
pop
add
mov
fnstcw
fdivp
inc
add
mov
test
in
mov
mov
xchg
iret
ffree
lock
push
inc
cli
inc
add
inc
mov
fadds
mov
mov
pop
xchg
outsb
add
xor
mov
mov
push
push
bound
mov
lea
fildll
push
test
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
pop
mov
jl
jl
jl
jnp
adc
adc
aas
sbb
scas
mov
ds
add
lcall
sahf
add
xchg
fiadds
xor
rcll
push
rorl
inc
clc
sbb
pop
leave
sarb
or
cld
mov
inc
xchg
fadds
pop
pop
jb
fidivs
mov
push
push
jg
sub
subb
dec
xor
mov
push
cmpsb
call
in
or
push
mov
push
xchg
out
sub
add
hlt
sub
outsl
mov
pop
sub
jmp
or
insl
fdivrl
jl
bts
test
or
lcall
fdivl
stos
jb
jne
push
js
ss
jns
lods
test
sub
les
sbb
outsl
aas
adc
add
or
add
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
push
mov
jl
jl
jl
fidivrl
pop
pop
mov
xchg
lods
push
fadd
dec
xchg
pop
fwait
pop
sbb
daa
lock
dec
outsb
push
push
out
int3
jmp
inc
jne
movsl
inc
or
testl
loop
cmc
pop
jmp
fcomi
mov
pop
xor
in
or
mov
pop
sub
shrl
cwtl
inc
scas
sub
xchg
push
dec
gs
test
hlt
icebp
js
gs
pop
jbe
dec
add
sub
add
adc
or
mov
dec
fidivrl
push
jp
sarl
cmpsb
xchg
andl
pop
push
nop
aas
stos
sbb
mov
xchg
or
jmp
adc
jp
scas
mov
or
lods
sub
imul
lret
mov
repnz
dec
mov
xchg
jae
mov
pop
lahf
arpl
sub
sarl
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
add
cmp
pop
jl
jl
sbb
out
dec
pop
jle
push
push
mov
adc
jmp
and
int
inc
in
scas
loopne
jno
rcrl
out
aaa
adc
jg
pop
out
mov
xchg
ljmp
lret
mov
imulb
es
arpl
clc
popa
je
jae
cmp
cmp
int3
ljmp
pop
inc
repnz
das
inc
adc
je
cmp
jg
cmp
lahf
xlat
adcl
fucom
xlat
aam
sbb
pushf
popf
push
xchg
push
xor
push
jnp
pop
and
pop
push
test
movsb
idiv
xchg
and
inc
in
adc
mov
xchg
jmp
mov
lahf
faddl
shlb
sbb
not
mov
xchg
nop
xchg
mov
stos
int3
cli
adc
cmp
sarl
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
mov
lods
jecxz
sahf
stos
and
es
pop
push
xor
inc
pop
inc
daa
out
mov
das
dec
cs
jbe
push
flds
popf
jle
out
jecxz
sbb
mov
xchg
xchg
xor
sbb
mov
cmp
dec
mov
adc
mov
pop
sub
cmp
stos
dec
imul
mov
xor
fmuls
pop
cwtl
mov
mov
xchg
xor
hlt
lahf
test
add
pop
aam
push
movsb
sub
push
hlt
cmpsl
in
mov
push
fdivrs
mov
mov
push
push
jne
int
push
pop
push
jle
lretw
mov
push
sahf
mov
loop
dec
cmpsl
imul
jo
ja
and
scas
and
add
add
andl
jg
and
cmp
dec
xchg
add
jl
jl
jl
mov
pop
daa
dec
cmpsb
jb
in
lock
lea
mov
in
call
mov
insb
pop
lds
mov
cs
sub
dec
xchg
fmuls
lcall
dec
push
icebp
add
sti
push
jp
mov
sbb
and
adc
test
add
test
and
push
pop
insl
outsl
push
mov
aam
xchg
sarb
clc
popa
xchg
lahf
pop
ret
je
inc
inc
and
mov
cmp
jno
cwtl
fidivrs
shr
cs
inc
add
mov
push
push
push
rol
mov
fcomi
cmp
fwait
sbb
push
ds
mov
push
cmc
int3
aaa
dec
push
mov
loop
fcoms
cld
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
push
mov
pop
loope
cmp
mov
cmpsb
imul
add
out
es
adc
nop
mov
pop
add
mov
loope
lds
adc
in
fnstenv
and
outsl
ret
jb
movsb
leave
mov
fs
xor
dec
lahf
mov
sti
imul
das
popf
lods
jp
out
inc
into
stos
addr16
push
sti
loope
pop
int
dec
aaa
or
dec
or
mov
cs
inc
mov
jecxz
clc
lret
adc
push
inc
cmp
loopne
mov
push
cmpl
ret
pop
or
xor
mov
cwtl
push
inc
testl
dec
pop
arpl
add
xchg
xor
repnz
ja
cmpsb
xor
ss
mov
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
pop
in
out
push
jl
push
jl
jl
jge
and
mov
xchg
xor
mov
loopne
mov
icebp
mov
cmpsb
adc
sbb
outsl
stc
or
dec
dec
inc
sub
in
scas
test
add
fwait
pop
cmpsl
testl
adcb
test
fmull
fistpl
xchg
ret
mov
popa
aam
and
imul
jle
loope
add
sbb
push
sub
inc
jo
cmc
fldl
dec
xchg
inc
dec
dec
lret
int3
xor
in
repnz
cmpb
add
cmc
sub
mov
lods
in
pusha
stos
fisubl
or
mov
rep
leave
mov
cmpsl
scas
mov
adc
aam
es
mov
push
cmpsb
scas
xchg
and
xchg
sub
lahf
aad
sub
aaa
fwait
push
dec
icebp
mov
xchg
in
jmp
lock
pushf
clc
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
stc
sahf
cs
sbb
jl
jl
dec
mov
mov
or
jl
adc
adc
cmpsl
clc
loop
clc
cmp
addr16
pop
andl
cmpsl
repnz
push
fimuls
or
adcb
pop
jge
inc
dec
lods
dec
in
mov
ficoms
xchg
ds
mov
jl
rcrl
out
dec
sbb
sub
ret
sbbb
mov
mov
jmp
jge
out
sbb
lret
xor
mov
das
stos
mov
stos
sbb
fwait
pop
loope
inc
mov
cltd
push
sbb
mov
leave
xor
mov
inc
mov
mov
daa
cmpsl
adc
push
movsl
pop
popa
jbe
mov
mov
pop
add
popf
adc
mov
dec
test
movsl
cmpsl
push
push
mov
sbbl
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
rcll
xor
jl
jl
jl
sub
add
sub
pop
in
fidivrs
push
mov
iret
into
push
mov
fsubr
pop
cwtl
mov
dec
cld
cmp
ljmp
mov
and
subb
push
mov
sbb
imul
cltd
mov
xor
or
mov
add
push
sbb
imul
cs
inc
mov
lcall
out
popa
in
clc
subps
jle
sbb
sbb
in
test
or
xor
leave
xor
pop
push
ret
loop
int
lret
adc
inc
mov
cmc
jmp
and
test
pop
lods
sbb
or
jg
push
aaa
jnp
loope
test
rorb
sbb
in
dec
jmp
aas
xchg
sbb
push
add
jne
add
or
add
clc
inc
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
frstor
push
sbb
jl
jl
adc
stc
xchg
push
addb
std
cmp
xor
loopne
mov
fldl
inc
mov
sub
dec
xchg
sub
js
and
mov
jg
lret
push
pop
jbe
flds
inc
ret
mov
test
mov
orl
test
int3
jne
rol
adc
lods
pop
dec
int3
lret
fwait
lret
lods
sbb
push
push
pop
or
addl
out
push
push
xor
push
adc
test
jno
pop
push
call
in
imul
daa
xor
cmpsb
inc
mov
adc
push
cli
cmp
mov
in
mov
and
sub
inc
out
push
pop
mov
repnz
fcomip
scas
mov
bound
data16
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
push
and
jl
push
jl
jl
sub
in
std
inc
fadds
or
dec
cmp
mov
mov
in
cld
sbb
test
add
mov
jmp
test
inc
jno
cld
cmp
ret
ret
and
popf
les
and
sbb
adc
cld
mov
call
xor
pop
cmp
addb
xchg
xchg
das
mov
jg
std
dec
push
cltd
aaa
inc
mov
loop
fwait
push
fwait
mov
out
and
inc
push
push
nop
xchg
rcl
lahf
or
aas
push
sub
sarl
inc
xchg
ds
jae
lea
jns
adc
out
sbb
icebp
sub
push
mov
cmpsl
in
out
xchg
jmp
mov
jnp
jae
mov
movsb
mov
stos
jno
rclb
or
xor
jmp
sbb
mov
std
adc
imul
jl
jl
out
or
or
inc
pop
cli
idiv
and
idiv
and
addr16
outsb
and
loop
pop
arpl
xchg
ret
pop
data16
mov
loop
mov
rcrb
xor
sbb
jae
sbb
jnp
xor
lds
lea
jbe
jge
push
jnp
sub
cwtl
repnz
sti
cmp
mov
sbb
cli
push
repnz
jmp
stc
add
sbb
push
repnz
cltd
aas
mov
or
cmp
outsl
xchg
test
cld
aam
cmp
cmpsl
push
push
xchg
pushf
int3
lock
xorl
or
pop
lods
mov
scas
xlat
add
out
push
mov
enter
xchg
xchg
push
xchg
push
dec
xchg
jne
mov
fnstsw
adc
sbb
dec
dec
adc
add
adc
lods
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
inc
mov
jl
push
jl
jl
jnp
cmp
mov
inc
or
xchg
xor
and
push
push
sbb
push
lods
loopne
into
hlt
mov
fadds
jecxz
mov
fistps
pop
ljmp
mov
icebp
stos
mov
pop
mov
cmc
in
cmp
fnstcw
test
lods
dec
or
popa
xor
sbb
sbb
xchg
inc
ficompl
mov
into
cmp
push
sahf
mov
xchg
or
mov
clc
add
push
xchg
or
jo
jp,pt
adc
add
mov
xchg
ret
ret
outsb
dec
lret
mov
lret
mov
push
push
or
orl
clc
dec
sbb
mov
out
std
mov
lea
cmpsl
jae
sub
xor
dec
int3
das
jmp
cwtl
mov
jl
cltd
cmc
daa
cltd
in
clc
jg
inc
leave
fimull
adc
push
daa
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
movsl
push
mov
mov
and
xchg
xchg
cmp
ljmp
lods
xor
pushf
data16
adc
inc
sub
mov
add
imul
push
cmp
sub
adc
lcall
or
std
xchg
in
mov
dec
scas
dec
cmpsl
loopne
loop
pop
cmpsl
adc
xchg
cmpsl
add
jb
fdivrs
jb
push
std
lret
dec
hlt
dec
add
xchg
std
enter
rolb
sbb
xchg
add
mov
clc
test
inc
xchg
lea
inc
scas
popa
jo
sub
insb
adc
sbbb
pop
and
mov
rolb
stos
push
xchg
cmp
imul
shrb
jecxz
outsl
or
cmpsl
xor
mov
jmp
imul
test
xchg
lret
fstl
pop
jl
push
jl
jl
ret
stc
xchg
xor
mov
dec
dec
push
add
sti
adc
mov
mov
jecxz
cmp
pop
in
ret
addr16
rcrb
xor
jb
fsubr
lods
nop
vmovups
loop
pop
test
out
gs
imulb
lret
inc
jmp
xchg
adc
and
xor
sbb
add
push
cmp
sub
bound
stos
leave
fcomps
sub
in
inc
outsb
or
or
dec
les
cs
pop
es
insb
cltd
dec
mov
pop
pop
hlt
hlt
jle
fmuls
xchg
and
test
inc
mov
xor
xchg
fmuls
sahf
mov
rcl
jne
jne
lea
scas
cmpsl
adc
lods
inc
fadd
jb
or
jo
or
mov
xchg
or
std
push
pusha
dec
jb
lds
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
xor
mov
push
jl
adc
jl
mov
lret
add
add
hlt
popf
lahf
dec
cltd
icebp
mov
out
fwait
xor
xor
sbb
sub
sbb
in
test
test
lds
dec
dec
push
xchg
mov
push
inc
lods
xor
pop
add
add
lret
ret
das
rcrl
gs
in
mov
mov
and
js
ss
sbb
cli
cltd
xchg
test
dec
imul
mov
jnp
push
fadds
adc
sub
sub
and
jl
xchg
cwtl
ljmp
add
fbld
sbb
ret
test
mov
sub
movsb
jno
xor
icebp
push
mov
push
xlat
scas
js
xlat
cmp
subl
aam
xchg
test
sar
pop
jno
or
scas
int3
movsl
gs
leave
xchg
scas
out
sub
inc
dec
mull
pop
pop
ljmp
dec
adcb
and
loopne
rclb
ljmp
push
dec
in
mov
and
mov
rcll
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
test
jl
jg
jl
mov
sub
es
out
dec
neg
jle
and
in
jo
inc
nop
jl
lods
inc
das
xchg
add
mov
test
jmp
mov
pop
push
xchg
sub
outsl
divb
dec
dec
mov
icebp
scas
xchg
cld
or
out
inc
xor
mov
push
hlt
ffreep
cmpsb
test
mov
add
push
dec
bound
das
mov
jno
cmpsb
in
mov
mov
iret
outsl
mov
adc
or
orb
mov
push
nop
lea
es
push
xlat
popa
mov
jg
cld
mov
subb
dec
mov
mov
lock
jo
ficoms
negb
pop
movsl
add
fwait
sar
and
mov
sbb
inc
mov
pusha
daa
xchg
data16
out
adc
jge
mov
lds
jae
rorl
fcompl
fs
or
xor
imul
jnp
inc
adc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
xchg
pop
adc
jg
jl
xchg
cmp
nop
nop
lcall
xor
repnz
movsbl
nop
cmpsb
jmp
lcall
rcll
adc
mov
adc
cwtl
vpshad
ja
dec
sub
sti
popa
adc
scas
sti
fbld
sarl
dec
xchg
push
mov
orb
js
leave
iret
loop
iret
aaa
pop
enter
lea
fstl
mov
std
lea
out
test
and
shrb
add
jae
icebp
pop
xchg
cmpsl
add
cmp
jnp
mov
test
sti
cmp
lcall
pop
mov
in
or
cwtl
call
stos
push
ret
sti
popa
lds
or
nop
incb
push
xor
lds
adc
lods
or
imul
mov
xor
pop
push
dec
out
iret
mov
ret
dec
insb
cltd
sbb
push
test
jnp
jmp
inc
jmp
int
loop
or
test
xor
sbb
mov
and
or
jmp
in
xchg
imul
les
jmp
ds
jl
jg
jl
jne
sub
ljmp
or
push
mov
test
nop
shrb
insl
test
mov
ja
ficompl
int
test
bound
imul
shrl
int
out
stc
cmp
mov
jmp
lcall
outsl
hlt
leave
int3
push
jmp
jmp
pushf
sbb
lcall
negl
mov
sub
sbb
repz
repz
shl
xor
mov
repz
bound
xor
mov
mov
push
aad
lret
xchg
add
push
and
in
xchg
pop
push
push
xlat
fimuls
adc
sub
mov
cmc
dec
mov
adc
imul
lock
stc
push
xor
loope
mov
test
fidivl
call
push
fildl
jne
movsb
insl
fsubl
and
pop
sub
divl
notb
or
or
test
pop
push
jnp
rcrl
add
in
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
loopne
xchg
or
aaa
jg
jl
mov
cltd
iret
rcrl
cmp
cld
in
mov
push
fsts
jge
nop
movsb
and
jge
imul
out
mov
push
notl
ja
call
push
scas
orl
insb
fs
fimull
adc
sub
sub
sub
adc
sbb
nop
dec
pop
mull
das
fsts
scas
test
test
scas
sbb
sub
push
bound
mov
push
mov
xor
repz
shl
jge
sti
cltd
arpl
mov
jmp
out
jne
jecxz
lods
lock
lods
sub
add
mov
cwtl
js
icebp
scas
loopne
outsl
frstor
test
sub
lods
test
dec
jg
adc
add
xor
pop
inc
xor
loope
fildl
xchg
push
or
mov
repz
outsb
aad
filds
test
ret
push
sbb
das
lods
cwtl
movsb
inc
mov
es
pop
xorb
das
aas
adc
out
inc
or
push
jbe
mov
mov
ja
mov
push
xchg
sbb
jg
adc
jae
test
popf
fildl
out
mov
mov
or
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
dec
in
aam
js
cmp
mov
push
dec
mov
sub
inc
push
cmpsb
jnp
cmp
add
ljmp
int3
test
in
cmp
dec
shrl
negb
lret
adc
lds
xchg
pop
cmpsl
lret
inc
in
test
mov
and
inc
push
rol
ja
jge
popf
xor
jbe
clc
jae
test
xchg
adc
inc
aaa
dec
jle
roll
scas
jl
dec
mov
dec
push
push
jae
or
sarb
dec
call
cld
shlb
fcmovbe
imulb
sahf
ret
fists
cli
jae
lea
mov
xor
sub
mov
mov
shrl
mov
push
mov
lea
outsb
sub
std
pop
lret
xorb
jecxz
das
loop
ja
jo
mov
sbbl
test
shlb
test
lret
cs
fdiv
jle
and
mov
iret
mov
mov
cmp
xor
icebp
mov
movb
daa
add
mov
adc
sub
push
adc
inc
add
cwtl
jne
add
dec
add
jmp
jno
xlat
sti
sti
std
add
mov
movsb
mov
jl
jg
jl
cli
dec
int
sub
mov
mov
mov
fwait
lods
push
and
insb
insl
mov
xor
or
fs
xor
sahf
or
xchg
loopne
xchg
pop
inc
push
mov
add
or
les
pop
cltd
leave
xchg
test
jp
test
out
int
mov
faddl
xchg
sub
pop
mov
add
arpl
pop
jl
and
inc
bound
test
jge
es
pop
xor
stc
push
loopne
dec
cmc
stos
test
out
xchg
lret
gs
adc
icebp
cmp
jnp
inc
sbb
xor
or
push
rclb
mov
fxch
xor
imul
sbb
mov
daa
inc
fsubr
std
dec
call
sub
jg
faddl
sbb
in
test
aas
jg
shlb
or
fcoms
out
dec
dec
lahf
arpl
mov
shll
imul
jmp
sub
iret
repz
cmpsl
loop
xor
aad
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
cmp
fdivrs
jl
push
or
jnp
jecxz
loop
fucomip
xor
jno
mov
inc
push
popf
xchg
aam
rorl
xchg
jle
inc
addr16
imul
inc
jb
mov
imul
stos
adc
mov
popf
xchg
and
js
ud1
out
mov
rorl
inc
fs
push
add
dec
sub
jb
jp
push
push
cmpb
pop
cld
push
sub
fsubl
mov
cmp
je
mov
mov
add
adc
insb
loope
popa
fistps
xchg
or
pop
mov
lods
scas
sbb
pop
push
lods
cmp
xor
mov
dec
xor
jne
clc
int
stc
jbe
imul
aam
mov
adc
add
insl
xlat
lcall
cmpb
pop
stos
mov
outsb
and
outsl
cwtl
push
mov
and
xchg
mov
addb
cmc
cmp
test
sbb
inc
popf
xor
shl
adc
jge
mov
jmp
mov
jnp
imul
scas
push
and
mov
sti
mov
and
lods
pop
jne
shlb
pop
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
lret
sub
leave
ss
adc
stos
loop
sub
in
ja
out
scas
loope
push
outsb
lret
in
or
inc
sub
scas
out
or
push
inc
or
pusha
call
scas
fsubl
xor
cltd
inc
xor
ret
dec
sbbb
arpl
pop
pop
add
shll
jl
xlat
scas
sbb
repnz
imul
adc
and
outsb
dec
mov
out
icebp
leave
dec
mov
cmp
dec
jne
jmp
mov
shrl
dec
popf
add
and
add
iret
fwait
push
repnz
mov
mov
icebp
in
mov
push
add
mov
fstps
mov
stc
lds
lahf
daa
push
jecxz
xchg
lock
dec
movsb
int
js
dec
test
daa
dec
clc
fisubrl
jmp
pop
pop
push
nop
xchg
pop
jge
cmp
out
inc
or
cmp
push
xchg
jno
push
push
icebp
cmp
xor
or
scas
sub
jp
push
inc
mov
push
inc
mov
sarl
sbb
call
es
and
repnz
or
jbe
outsl
mov
cwtl
xchg
cmc
jns
repnz
or
lock
sub
scas
jmp
mov
jmp
mov
stc
mov
pop
mov
sub
jg
jl
mov
xor
xchg
aad
sub
mov
jb
scas
cli
and
adc
sbb
aad
cmp
push
scas
test
jge
adcl
cs
out
sbb
leave
or
dec
xor
fcoml
sub
adc
mov
int
sub
loopne
mov
sub
mov
jns
loope
cmp
add
sti
cmp
testl
jnp
sbb
cmp
mov
leave
lods
pushf
lret
xor
inc
into
dec
jbe
mov
shll
loopne
call
mov
imul
and
jp
mov
les
orl
les
adc
negl
pushf
loop
daa
xor
mov
jmp
imul
rcr
pop
push
les
and
push
dec
lea
mov
cmp
and
pop
xorb
fdivrl
cmp
aam
pop
test
mov
mov
lahf
jle
sahf
ja
cmp
repz
add
add
dec
fs
adc
cwtl
test
push
adc
mov
mov
in
sbb
pop
ja
xor
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
pop
jl
sub
jl
mov
push
psubw
dec
mov
xchg
mov
mov
out
inc
imul
pop
dec
in
ret
xor
inc
push
xchg
mov
sahf
stos
js
inc
sahf
sbb
clc
jl
or
je
out
sti
mov
mov
daa
int3
hlt
push
das
cmp
insl
or
push
pop
loop
xchg
pop
les
cmp
addb
out
or
pop
cmpsl
ds
xor
or
out
icebp
arpl
push
jb
sbb
stos
xchg
cwtl
rcrl
clc
xchg
mov
cld
sub
mov
pop
clc
popa
cmpsl
lea
dec
adc
dec
inc
lods
mov
sbb
cmp
mov
dec
and
insb
stc
cs
cmpsb
adc
and
shlw
cmovs
and
daa
lods
add
lcall
jbe
mov
push
pop
pop
in
das
lods
in
loopne
addl
cmp
ficoml
rcr
push
test
dec
pop
sbb
xor
loope
cli
mov
and
iret
int
mov
jns
sar
and
ljmp
xchg
jno
dec
push
xchg
mov
lock
push
mov
xor
repnz
mov
cmp
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
pop
pxor
jl
jg
jl
or
sub
ja
into
out
pop
push
jo
ret
sbb
inc
mov
insb
test
xchg
int3
add
push
cwtl
xchg
insl
pop
add
push
lods
lahf
mov
stos
out
iret
loop
leave
lahf
lods
flds
and
or
inc
movsb
testl
or
pusha
mov
incl
cmpsl
idivb
push
or
cmc
les
push
mov
push
pop
jnp
fs
inc
jp
popf
or
inc
push
mov
jle
or
loope
xor
and
adc
sub
xchg
jle
adc
arpl
and
rorb
gs
xor
cmc
fisttpll
add
mov
dec
dec
aas
ljmp
notrack
xchg
stos
incl
aas
sbbb
clc
aaa
mov
nop
mov
out
dec
roll
out
jg
fcom
dec
lcall
mov
xor
test
cmp
push
sti
pop
inc
aam
xor
mov
adc
pop
xor
adc
aaa
jbe
mov
adc
dec
idivl
and
mov
ja
pop
mov
xchg
andb
mov
and
scas
shr
add
add
sub
imul
mov
das
jl
fdivrs
jl
loopne
lock
and
add
push
mov
dec
xchg
mov
repz
shl
scas
int3
pop
fwait
push
pop
popf
outsb
scas
inc
out
outsl
xchg
pop
out
lea
sub
dec
pop
xchg
imul
push
add
clc
xor
pop
ret
pop
test
cld
pop
pop
dec
fisubl
test
mov
nop
sti
pop
outsl
das
fimull
push
adc
lcall
movl
cmp
sbb
arpl
ret
mov
and
in
fbstp
pop
push
cltd
int3
pusha
loopne
jge
xor
fdivrl
push
xor
cli
or
jmp
js
push
adc
call
call
mov
fsts
push
data16
mov
orl
movsb
pop
mov
enter
pop
cmp
out
or
cld
sub
pop
xor
sbb
scas
and
mov
mov
sbb
jns
inc
and
arpl
addr16
popa
popa
jle
jmp
sub
jno
jb
mov
es
mov
dec
and
dec
nop
cmp
ljmp
fstpl
in
pop
adc
movsl
mov
cli
jbe
mov
dec
mov
gs
movsl
and
inc
or
or
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
mov
sbb
notb
fwait
jnp
mul
inc
mov
mov
jb
pop
adc
insl
adc
push
mov
inc
jae
push
clc
aas
stc
hlt
in
pop
sbb
iret
adc
lcall
push
mov
cmp
cmp
cli
in
ds
push
mov
cld
mov
addr16
andb
mov
std
repz
inc
fmul
ss
in
sahf
repnz
jecxz
mov
pop
or
sbb
mov
push
jno
repz
pop
jns
jecxz
mov
pop
int3
insb
inc
outsl
jbe
inc
lahf
xchg
dec
xor
inc
test
sub
or
int3
push
cld
aas
pop
repz
sub
pop
push
mov
or
jb
dec
std
mov
loope
cwtl
daa
pushf
outsb
cwtl
mov
lea
mov
or
insb
inc
push
xlat
mov
mov
out
mov
pop
ja
lods
pop
adc
ja
mov
mov
inc
or
push
in
test
mov
push
out
cmp
or
lock
push
cs
jnp
insl
adc
push
adc
cmp
lea
test
jbe
movsl
cmp
cmpsl
and
rcll
pop
pop
sbb
jns
aam
and
js
and
movsl
xchg
inc
add
scas
shl
fidivrs
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
fcompl
jl
call
mov
jae
xor
or
mov
jns
inc
add
inc
mov
jnp
ja
sahf
out
dec
xor
push
sbb
inc
mov
jecxz
mov
xchg
jno
mov
jns
mov
es
add
scas
sbb
inc
dec
mov
ljmp
xchg
ss
mov
pop
jmp
pop
insb
or
int3
les
test
xchg
popa
jne
das
aas
jecxz
clc
inc
adc
inc
test
test
cli
pop
inc
lea
sarl
mov
mov
test
mov
and
das
int
cltd
push
push
aad
movsb
inc
pop
mov
repz
testb
jmp
adc
ficoml
xchg
mov
ds
test
jns
cmpsb
jno
pop
add
test
dec
negb
movsb
sbb
arpl
xchg
pusha
loopne
fsubrs
xchg
cmp
leave
xchg
pop
je
xor
push
pmaddwd
sahf
adc
jno
push
xchg
rorb
mov
pop
cmpl
testl
test
jmp
notb
xor
dec
ja
xchg
inc
loope
pop
cmp
jp
push
pusha
call
dec
call
add
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
mov
jl
call
fisubs
aad
lods
int3
dec
xor
mov
cmp
mov
cltd
adc
in
stc
and
shr
call
pop
sub
orl
daa
mov
xchg
rcrb
repnz
add
sub
in
and
add
mov
adc
push
out
in
ss
out
aaa
cmp
shlb
jno
pop
repz
dec
xchg
xchg
jmp
jb
or
fs
test
adc
xchg
pop
adc
jmp
adc
mov
les
lret
jp
or
in
test
add
or
imul
bound
fsub
pop
pop
mov
cmpsb
cmp
ret
lods
xlat
mov
xchg
sbb
inc
daa
aam
js
jecxz
inc
or
mov
dec
dec
subl
add
daa
adc
cmpsl
xchg
cmp
es
pop
in
test
enter
aam
mov
cltd
push
hlt
repnz
jae
test
out
jp
mov
call
ds
gs
cmp
xlat
xchg
jno
xlat
or
xor
add
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
sub
std
jmp
jl
call
xor
cli
xchg
sbb
jmp
subb
stos
jl
cmp
mov
push
bound
push
jbe
push
insl
fcmovnu
outsl
fwait
pop
push
mov
push
enter
or
jg
movsb
cmpl
push
cmp
jns
imul
es
jns
dec
inc
cmp
mov
add
mov
movsl
xor
add
adc
arpl
jp
cwtl
pop
push
and
clc
jns
sub
fsubp
icebp
aaa
sbb
xchg
pop
push
aas
mov
add
dec
clc
daa
xchg
test
xchg
jno
jp
jge
push
sbb
jb
ficoms
jg
fisttps
adc
mov
dec
pushf
imul
xchg
adc
out
jecxz
int3
sbb
xor
in
outsb
jg
sbb
std
rolb
and
lds
cmpsl
sub
inc
iret
shl
lods
jbe
push
cmc
imul
mov
xor
add
inc
icebp
lock
sbb
pop
dec
jge
jl
pop
adc
xchg
push
repnz
std
pop
cmp
mov
stos
mov
popa
pop
outsl
cltd
cmp
sahf
inc
fcoml
loop
mov
mov
or
repnz
cmpsl
push
outsl
loop
cmp
dec
test
icebp
adc
pop
loop
mov
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
xchg
pop
inc
addr16
and
jl
jg
jl
adcl
mov
das
out
and
xchg
cmp
fs
cli
inc
stos
cmp
enter
and
xor
enter
jle
mov
inc
out
or
lret
outsb
shrl
push
pushf
and
daa
in
and
inc
stc
fadds
dec
fidivs
sbb
arpl
sub
in
mov
ss
or
pop
stc
jno
es
jg
push
into
dec
lods
dec
imul
fdivs
add
enter
rcrl
jae
test
jmp
in
out
push
push
iret
andb
fs
inc
icebp
or
xchg
neg
in
adc
testb
and
insl
neg
out
mov
mov
testl
push
mov
int
loop
ss
push
cs
sbb
sbb
xchg
xor
ds
iret
xor
push
inc
dec
loopne
adc
stos
je
push
adc
jae
mov
xor
xchg
repz
dec
xchg
fcoml
mov
lods
xchg
dec
nop
adc
mov
and
mov
jmp
shr
cltd
sbb
sahf
testb
cmp
sbb
mov
adc
mov
cmc
mov
imul
sub
mov
jmp
dec
cli
sbb
test
outsb
jp
out
rclb
pop
rdpmc
es
call
push
and
les
lcall
add
hlt
jae
insl
out
fnsave
push
or
call
pushf
xchg
icebp
sub
push
push
dec
cltd
out
push
das
adc
xchg
mov
xchg
lahf
inc
test
cmp
cli
cmp
ljmp
scas
pop
xchg
daa
push
pop
xor
icebp
fistpll
and
fsubrp
adc
sbb
mov
mov
xchg
xor
pop
adc
repz
cld
std
pop
jnp
push
push
jnp
xor
lcall
and
clc
mov
mov
mov
aam
int3
sub
adc
mov
adc
mov
sbbl
mov
sub
in
jp
add
in
mov
adc
push
hlt
xchg
lock
outsb
out
or
cmp
jg
int
inc
inc
stc
jno
adc
sub
dec
lods
fildl
sub
jo
sbb
mov
fmuls
and
inc
in
sub
inc
push
outsb
jns
sbb
mov
mov
mov
push
lret
add
decb
xor
push
jnp
mov
fimuls
or
xor
mov
add
jmp
push
mov
aad
sbb
scas
cmp
jg
jl
int3
push
mov
xor
push
imul
iret
xor
clc
jecxz
xor
or
push
adc
iret
lahf
in
sub
or
insl
jp
nop
repz
imul
movsb
inc
loopne
and
push
addb
test
pushf
inc
dec
insb
inc
data16
clc
fisttps
lahf
jno
popf
inc
test
int3
arpl
push
xchg
cwtl
mov
sub
shrl
mov
into
movsb
loope
fistpl
repnz
clc
lcall
dec
and
mov
mov
mov
addr16
sub
fsubl
sbb
in
sbb
add
and
add
movsb
xchg
test
mov
push
aam
fisubl
and
gs
add
repz
add
jbe
push
subl
pop
or
sub
pop
les
jo
cmpsb
fdivrs
adc
clc
jp
nop
xchg
or
lds
pop
nop
inc
add
rorb
dec
xor
or
sub
lret
lods
push
stc
enter
aam
lret
push
push
clc
jns
mov
ret
insl
aaa
pop
and
es
jge
jnp
mov
jne
push
adc
shlb
int
mov
call
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
adc
xlat
sbb
jl
call
pop
in
pushf
out
sbb
hlt
jb,pn
xchg
lret
cmp
ds
iret
mov
in
std
ret
sahf
arpl
mov
fiaddl
fimull
mov
and
adc
test
and
scas
xor
scas
call
lret
adc
jb
mov
jmp
imul
sbbb
insl
adc
inc
pop
repnz
add
loop
dec
mov
and
pop
cmc
iret
and
int3
jg
inc
xchg
sbb
xor
jno
out
sbb
movsb
dec
std
mulb
push
std
inc
xor
aad
hlt
adc
mov
jmp
and
pushf
addr16
cmp
dec
adc
dec
int3
dec
shrl
repz
mov
stos
push
iret
test
daa
mov
inc
insb
loopne
out
test
insb
repnz
mov
nop
cmp
lea
out
ja
and
mov
imul
dec
cmpsl
mov
xchg
push
inc
fldt
std
or
push
cmc
adc
pop
jmp
popf
test
aas
or
cmp
leave
jae
dec
jne
mov
or
xor
xchg
cwtl
dec
mov
cmp
cmp
fnsave
mov
or
inc
xchg
out
xor
test
xchg
dec
cmpsb
shrl
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
sahf
mov
push
mov
sbb
cmp
jg
jl
fucomip
jno
xlat
cs
fcmovu
stc
and
mov
adc
dec
repnz
icebp
pop
pop
xchg
and
xchg
xchg
stos
insb
mov
imul
out
movsl
int3
test
loop
mov
dec
outsb
out
jle
popf
cmp
jp
mov
sahf
cltd
dec
mov
dec
pop
loop
pop
mov
and
fcoml
sahf
or
out
cmp
aas
mov
mov
jecxz
adc
mov
std
inc
gs
mov
call
call
mov
xor
lods
xchg
shrl
lods
out
mov
mov
mov
jge
or
out
ja
pop
dec
mov
sub
inc
sbb
or
add
repnz
cmp
sbbb
clc
pop
mov
subb
mov
mov
test
ret
cld
jge
dec
dec
add
gs
inc
in
inc
ret
xchg
mov
dec
lock
xchg
inc
lahf
and
pop
pop
stos
or
jo
jl
push
push
mov
mov
xchg
adc
out
xor
cmp
mulb
mov
inc
push
pop
pop
xchg
mov
cmp
pop
pop
sbb
lret
mov
cmpsl
cs
cmp
or
pop
rolb
adcb
dec
test
js
mov
test
fldcw
inc
push
pop
xchg
mov
jmp
ret
out
std
cli
cmp
into
insl
jns
cmp
jl
lds
cmp
das
xchg
sbb
inc
aam
sub
rclb
scas
fnstenv
in
jecxz
mov
dec
xchg
jmp
fisubl
mov
and
mov
lock
outsb
and
mov
dec
rcl
push
and
mov
pop
push
mov
cmp
lahf
mov
aaa
jno
jp
mov
sub
sub
cmpsb
adc
pop
push
jecxz
jbe
mov
movsb
mov
mov
fwait
sub
push
xchg
js
mov
rcrl
bound
mov
push
jbe
out
fincstp
rorb
pop
ljmp
mov
push
mov
push
dec
stos
pop
lock
popa
in
sbb
sub
xlat
xchg
fs
cmp
adc
jecxz
fldl
popf
aaa
enter
pop
cmp
adc
orb
add
or
or
fcmovnbe
in
xor
insb
jbe
jne
mov
push
adc
and
aaa
cli
and
mov
xor
inc
test
dec
push
xor
lahf
mov
mov
lret
cmpsl
lods
into
cwtl
mov
neg
inc
mov
fsubrp
mov
adc
lret
rcll
cs
xchg
test
inc
jns
or
dec
dec
outsl
repz
mov
fcoms
ffree
xor
jmp
sub
sti
je
out
sub
mov
jl
call
lds
sub
mov
test
or
jl
imul
lahf
test
ficomps
movsb
iret
xchg
pop
lods
push
inc
mov
jmp
inc
mov
popf
sbb
outsl
fisubs
and
and
mov
push
sub
movsb
inc
push
movl
ss
sbb
push
es
add
pop
and
cwtl
out
mov
dec
and
xor
jbe
or
scas
and
sbbl
out
das
lock
jno
aas
fmuls
sub
fistps
cli
pop
jns
jno
xchg
or
xchg
shrb
sbbl
ljmp
mov
lea
rorl
cltd
jmp
leave
or
ficoms
movl
xor
in
addr16
jle
insb
pop
mov
mov
sbb
pushf
popa
ret
mov
imul
xor
repz
adc
xchg
sbb
lock
mov
frstor
sub
xchg
add
mov
imul
add
out
jmp
scas
inc
push
pop
xchg
stos
data16
bnd
cmpsb
scas
pop
fsubs
or
scas
outsl
and
fists
movsb
scas
iret
add
fs
sbb
je
xchg
int
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
mov
jl,pt
call
or
or
and
rolb
adc
lret
xor
cmp
sbb
or
int3
pop
cmp
sub
xor
mov
notb
into
call
aas
cmp
ficompl
jle
inc
cmpsl
xor
or
data16
in
ljmp
loope
push
in
addr16
outsb
daa
in
dec
or
sahf
aas
pop
js
je
bound
jg
pop
pop
push
imul
loopne
mov
adc
out
movsl
insl
lahf
out
mov
int3
or
movsb
mov
mov
jae
push
and
xor
movsl
lret
push
and
out
push
je
lea
mov
orl
outsb
cli
sbb
stos
pop
pop
cld
jp
clc
or
aas
in
mov
push
in
xor
pop
insb
pop
jecxz
call
push
jecxz
xor
ficoml
enter
adc
pop
pop
adc
mov
mov
insb
cmp
push
xor
push
sbb
xchg
outsl
xchg
cli
not
cld
nop
and
daa
pop
xchg
sub
cwtl
mov
xor
outsl
popa
iret
add
dec
out
or
test
fistpl
ret
xor
jns
test
idiv
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
push
leave
out
daa
xor
jg
jl
dec
mov
dec
mov
inc
es
xor
js
dec
fs
mov
pusha
movsl
cmpsl
pusha
mov
add
shll
mov
imul
jge
dec
imul
push
xchg
pop
dec
mov
mov
pop
sub
hlt
orl
int3
sbb
sbb
adc
cmpsb
in
enter
push
stos
cli
clc
add
cmpsb
pop
in
pusha
ret
push
dec
push
inc
cmpsl
xchg
shrl
data16
mov
ds
out
xchg
mov
or
inc
jb
inc
push
decb
cwtl
mov
scas
xchg
cwtl
ficomps
mov
loope
ret
cld
sahf
jg
sbb
add
inc
pop
xor
pushf
sub
inc
jne
ret
adc
pop
add
fldl
outsl
mov
scas
sub
fmul
scas
inc
cmc
iret
xchg
fdivrl
dec
push
ret
mov
ret
ja
out
sub
xlat
pop
mov
test
shrb
mov
ror
pushf
cmp
pop
push
mov
insb
mov
jl
fists
push
xchg
sbb
inc
xchg
sub
add
mov
or
xor
ss
sti
or
or
imul
add
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
jnp
mov
data16
and
or
push
mov
xor
out
mov
movsb
and
or
ret
or
test
pop
in
test
xchg
imul
dec
aad
cwtl
xchg
in
repnz
and
fimull
sub
dec
pushf
jno
mov
or
out
sbb
cmpsb
inc
decl
push
out
lods
cmp
pop
and
add
inc
dec
scas
out
sub
jmp
lret
sbb
cmp
xchg
sub
jmp
test
xchg
insl
cmp
fs
pop
jnp
sti
sub
out
in
mov
dec
and
sbb
insl
pushf
and
fisubl
roll
ss
divl
push
sub
in
fidivs
out
imul
push
pop
adc
xchg
and
dec
shrb
mov
lahf
add
loop
pop
xchg
add
push
int
adc
sbb
adc
scas
mov
cmp
jge
cwtl
mov
test
sub
icebp
mov
test
in
push
out
mov
mov
xchg
xchg
insl
mov
inc
andl
inc
jge
es
pop
cmp
stos
and
lcall
and
mov
mov
cmp
inc
push
mov
xor
mov
dec
cli
xor
sbb
rolb
pop
hlt
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
ror
movsb
xor
xor
jl
mov
imul
cmpsb
cmp
cmpsb
in
neg
sub
inc
sbb
outsl
outsb
scas
sub
adc
sub
inc
ljmp
mull
sub
pop
out
dec
arpl
cltd
sub
shll
xor
cs
cltd
xor
dec
push
std
cs
xor
ret
add
add
loope
ds
add
sub
sub
push
nop
add
das
cli
lea
adc
push
arpl
cmpsb
loope
jns
dec
dec
or
pusha
or
mov
cmp
cmpsb
xor
hlt
loopne
mov
stos
adc
call
fdivr
push
and
mov
inc
ja
or
mov
shufps
add
jo
fildl
dec
daa
xchg
mov
out
xchg
cmp
imul
stos
adc
rolb
push
je
inc
mov
sub
aaa
jle
and
loop
xlat
lret
inc
in
aad
mov
mov
jbe
lds
mov
sahf
jle
xor
cmc
je
fnsave
subb
adc
test
fadd
aam
lcall
inc
pop
cmp
sbb
xor
and
aam
repnz
xor
adc
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
adcb
jge
add
imul
stos
xor
insl
inc
pop
xor
fdivr
xor
cmc
lea
push
push
dec
flds
fcomi
lods
out
loope
jb
push
scas
or
or
sub
aaa
cltd
stc
mov
fnstsw
cltd
shrb
sbbb
jecxz
in
dec
or
adc
push
pop
mov
mov
imul
cs
addb
fistpll
mov
in
enter
or
xchg
push
jl
roll
jle
push
add
incl
stc
fisubl
and
loope
in
iret
add
ljmp
xchg
pop
or
in
rolb
lock
inc
iret
arpl
sar
popf
leave
loopne
pop
pop
xchg
push
movsl
incl
popf
jo
mov
push
dec
daa
xor
aas
mov
nopl
addr16
or
in
jle
fucomip
sub
imul
hlt
jle
fists
test
hlt
inc
and
sub
cmp
sbbb
cmp
and
jae
mov
sbb
mov
in
insb
sti
das
iret
add
adc
js
sbb
mov
jne
cmc
fisubs
inc
sub
push
cmp
imul
dec
jecxz
and
sbb
rolb
xor
mov
les
repz
fldcw
test
pop
js
test
outsb
repnz
dec
cmp
aad
repnz
ljmp
xor
sub
sbb
or
add
stos
or
repz
in
in
test
mov
xchg
cwtl
or
mov
mov
je
je
ljmp
cwtl
test
bound
xor
icebp
mov
lock
movsl
jae
jnp
sub
xchg
das
sahf
or
jl
and
dec
jecxz
pop
fndisi(8087
sbbb
in
adc
xchg
push
jne
ss
xchg
mov
push
loope
push
repnz
mov
inc
sub
xor
push
xor
rolb
mov
dec
aas
nop
out
inc
ret
popf
sbb
pop
or
cmpb
repnz
mov
sahf
arpl
mov
out
mov
jl
sti
andb
xchg
or
cmp
inc
push
cmp
filds
scas
divb
lods
ret
add
sbb
lea
lret
lret
je
adc
or
inc
mov
test
lods
addr16
jp
test
xchg
in
mov
sti
popa
xchg
lods
movsb
add
jnp
out
xor
clc
movsl
or
mov
push
add
push
pop
out
push
cs
push
enter
stc
cmp
pop
jmp
sbb
fsubrl
stc
aaa
lret
dec
and
das
sub
mov
loop
popf
popa
mov
sbb
or
imul
int
sbb
add
or
adc
sub
mov
or
and
pusha
or
cs
cld
cmp
sbb
imul
cmp
mov
and
sbb
leave
pop
repnz
push
sbb
shll
sub
fldenv
lods
nop
stos
ror
cmp
cltd
shrb
jbe
mov
sub
push
and
push
sahf
cli
push
push
fists
aam
push
adc
outsl
push
inc
xchg
cwtl
fldl
dec
mov
mov
insb
test
int
gs
or
sarb
jae
lahf
sahf
std
mov
stos
insb
sbb
jge
push
mov
mov
lcall
lea
in
jp
xchg
add
jae
xchg
xorb
mov
cmpsb
popf
nop
shrb
push
or
push
fcoms
clc
sbb
insb
mov
sti
mov
repnz
mov
inc
rcr
add
mov
imulb
or
jne
aaa
inc
pop
scas
adc
in
push
fnstenv
into
js
fs
movsb
sbbb
sbb
sub
addl
inc
hlt
pop
mov
rcl
int3
dec
push
fistl
fadds
fnsave
ret
fcompl
pusha
ret
jne
inc
xor
xor
push
cmp
dec
daa
test
rcrb
mov
add
mulb
out
or
ret
aaa
sarb
into
dec
inc
dec
cmp
stos
jmp
ret
stos
cmp
sbb
cld
aas
int
es
outsl
xorl
fstl
jg
inc
cmp
push
ss
push
divb
in
out
mov
jae
dec
in
xchg
pop
xchg
add
sub
jp
push
sub
push
pushl
adc
add
cmpl
sub
adc
xchg
add
or
jnp
jo
aaa
or
cltd
mov
mov
pop
jb
xor
add
daa
pop
xchg
xchg
insb
or
std
sti
dec
adc
cltd
ss
aas
jno
adc
dec
xlat
sbb
test
scas
feni(8087
int3
mov
cmpsl
addr16
jbe
insb
mov
sub
sub
shrb
test
cmp
pushl
js
sbb
leave
popf
sbb
loop
mov
and
mov
xor
pop
cwtl
loop
sub
inc
daa
rolb
aad
bound
adc
jnp
or
add
dec
adc
mov
sarl
daa
mov
ja
adc
js
mov
ljmp
push
test
in
xor
int
and
xchg
pop
lds
leave
loop
or
rcrb
rcrl
outsb
mov
insl
fnstsw
test
jo
sub
repz
jne
xchg
jmp
push
xor
and
loop
jmp
inc
adc
out
xor
fs
push
sub
sbb
and
dec
jnp
incb
ret
mov
xchg
cmp
icebp
stc
movsl
scas
jns
adc
lahf
movsl
popf
cmp
xchg
stc
mov
sbbb
in
xchg
xchg
pop
dec
push
or
shlb
sti
stos
loope
adc
adc
leave
push
xchg
adc
sub
rcll
loop
dec
fsubrp
xchg
add
dec
cmovae
stos
pop
jns
or
sub
mov
push
push
sub
xorb
leave
fdivl
add
lds
mov
clc
dec
cmp
je
pop
inc
cmp
je
cltd
int
in
jg
push
mov
fcmovu
xor
xlat
jno
xchg
aas
faddl
push
dec
dec
and
inc
daa
test
pop
enter
sub
pop
mov
push
das
mov
scas
mov
ds
sub
xor
imul
stos
cwtl
jp
ja
jae
xchg
add
add
or
fildll
out
repz
add
imul
sub
lock
jno
icebp
xor
dec
mov
push
dec
std
sbb
add
int
hlt
popa
jnp
mov
int3
cmpsb
pop
loopne
bound
sti
icebp
and
or
inc
jne
mov
js
insb
xor
jle
sub
repz
mov
dec
nop
rcl
and
sub
xor
adc
jne
mov
jg
sarl
lock
scas
fldl
jo
call
cmp
push
cmp
jmp
clc
lret
and
and
sub
pop
xchg
mov
sti
js
pop
xlat
dec
stos
fisttpl
pushf
lock
in
mulb
mov
aaa
dec
fidivs
mov
push
stos
subl
pop
mov
jge
adc
repnz
iret
lahf
push
mov
cmpsb
inc
xlat
push
lea
fsubp
pop
insl
mov
outsl
mov
or
clc
sti
adc
mov
insb
mov
dec
adc
mov
iret
cmpsb
idivl
or
leave
scas
out
cmp
mov
dec
sub
mov
imul
cmp
sub
pop
adc
mov
inc
ss
out
out
push
out
rcrb
fists
scas
popa
scas
aad
je
dec
jp
std
call
pop
cmp
ret
fimuls
jle
mov
daa
jle
popf
faddl
fisubrl
sub
not
jnp
xor
outsl
icebp
int
stos
ret
add
xor
imul
sub
pop
cmp
mov
cmpsl
out
push
and
adc
sub
push
fmuls
push
jbe
xchg
fcomip
mov
leave
repnz
andl
cmp
fcmovnbe
xor
pop
loope
inc
cli
repnz
mov
adc
sub
movl
mov
and
ret
dec
adc
mov
adc
fwait
dec
movsb
pop
mov
push
movsl
and
mov
fldl
pop
xchg
rclb
sub
mov
lahf
or
popf
mov
popf
pop
mov
fisttpll
jo
and
test
sub
loop
mov
imul
sbb
push
pop
out
or
mov
jle
ffreep
or
or
inc
or
fbld
push
add
popl
xchg
cli
inc
stc
pusha
data16
push
jnp
jl
adcl
or
xchg
or
arpl
add
pop
mov
movsl
add
sbb
negb
les
adc
test
ret
test
pop
jo
movsb
popf
jo
mov
jb
xchg
push
movsb
pop
movsb
bound
push
cli
pop
pop
and
and
xchg
out
pop
pop
cmc
sbb
jg
repnz
lcall
in
mov
xor
imul
sbb
push
ret
hlt
es
sbb
ret
mov
aaa
add
xchg
xchg
mov
push
loop
nop
mov
jg
add
aad
pop
outsl
adc
xor
pop
call
pop
daa
ja
gs
lcall
push
sub
mov
add
jecxz
mov
stos
jb
dec
mov
sub
repz
test
mov
mov
clc
push
rolb
mov
adc
mov
roll
into
sbb
xchg
or
and
shlb
addr16
lcall
xchg
scas
cmp
adc
lret
fimull
cld
dec
pop
movsl
lret
jp
xchg
lret
mov
fs
xchg
fdivrl
pop
jns
in
push
and
stos
add
aad
inc
popf
mov
cld
mov
frstor
lods
xchg
jp
or
mov
insl
push
add
mov
push
jg
cwtl
pop
sub
mov
js
out
test
mov
mov
and
push
mov
jno
jbe
pop
int
xchg
jae
pop
mov
adc
pop
push
jecxz
outsl
push
shl
fldcw
mov
push
pop
sub
push
or
rolb
js
mov
add
adc
xor
idivl
cld
int3
cli
mov
lds
in
mov
fstpl
adc
mov
or
dec
cli
inc
es
gs
bound
dec
pop
popf
mov
sub
push
insb
xor
cmpps
shr
fcmovne
xchg
sti
xor
sub
and
jns
lods
mov
jg
in
xor
repz
cli
cmpsb
js
mov
fs
mov
mov
inc
mov
outsl
mov
jnp
jle
stc
adc
pop
loopne
insl
mov
push
mov
mov
repnz
push
inc
ja
movsb
imul
outsb
inc
sbb
xor
cmpsl
and
addr16
xchg
ljmp
mov
jecxz
leave
mov
push
inc
sbb
mov
add
mov
inc
mov
mov
adc
mov
mov
push
inc
aad
aam
rol
pop
add
pop
mov
mov
sub
jmp
jno
xchg
popf
mov
dec
imul
jmp
into
xchg
inc
push
repnz
inc
sbb
mov
jle
cmp
enter
xlat
ffreep
push
outsl
sbb
in
pop
push
fsubl
dec
shr
jbe
jecxz
jo
mov
add
call
cmp
adc
and
out
mov
and
ficoml
cwtl
lods
lret
popf
cmp
ds
dec
xor
fsubrs
jmp
push
aaa
pop
lcall
pop
hlt
fwait
aam
cmp
repz
mov
xchg
mov
fldenv
xchg
inc
ja
daa
lods
push
imul
out
cmpsl
inc
test
arpl
lods
in
sbb
daa
stos
lock
lret
sbb
push
out
push
mov
test
cmp
jb
or
or
push
mov
fnstcw
cmc
ds
int3
jg
mov
js
dec
xor
adc
pop
xchg
cmp
ss
aam
mov
xchg
cli
xor
lods
lods
push
jbe
mulb
popaw
lods
shll
mov
in
xchg
pop
sub
out
mov
xchg
xchg
or
mov
push
jg
andnps
stos
mov
sub
jmp
pop
adc
mov
mov
dec
mov
xchg
and
sub
adc
daa
pop
lahf
in
push
shrl
imul
mov
test
addr16
jmp
std
cmp
les
stos
ret
das
or
mov
add
insl
es
xor
mov
mov
or
and
adc
popf
xor
sbb
xor
add
add
in
push
scas
jp
jo
pop
dec
push
add
imul
sbb
lcall
lret
in
push
int
out
adc
and
daa
add
jmp
fidivrs
rcrb
std
add
sahf
sub
dec
sti
out
inc
push
xchg
inc
dec
inc
test
dec
loopne
xor
dec
inc
cld
fcoml
ljmp
test
sub
pop
mov
leave
and
add
popa
sbb
inc
fcomps
orb
in
pop
sbb
push
rcr
cmpsb
sahf
out
out
ficoms
int
and
lea
or
testb
lea
scas
cmp
fsubs
and
popf
pop
bound
pop
scas
and
sub
push
sbb
in
enter
mov
adc
dec
fstpl
xchg
addr16
sub
rcll
bswap
mov
xchg
dec
xchg
gs
push
mov
imul
dec
fstpl
in
and
inc
test
push
jmp
mov
gs
jb
xchg
xor
scas
xor
jbe
scas
xchg
jne
lods
adc
and
xor
inc
fidivl
faddl
xor
inc
cmp
xchg
das
les
in
iret
ds
jno
in
mov
mov
jnp
popa
ja
jo
lahf
or
mov
inc
pusha
ja
ror
andl
imul
out
push
movsb
cmp
jns
lcall
lds
xchg
outsl
pop
push
jbe
leave
mov
inc
pop
sub
rol
clc
dec
leave
js
dec
jns
call
out
mov
and
pop
inc
fnstcw
outsb
sti
jb
dec
jmp
cmpsb
ficompl
mov
out
mov
sbb
mov
test
xlat
jle
jmp
fsubrp
add
jmp
dec
cld
mov
push
test
in
ret
aad
stos
mov
pop
das
pushf
jmp
nop
int3
das
sub
push
jnp
mov
adc
mov
mov
fwait
cld
mov
lret
ds
pop
imul
push
lods
sbb
dec
dec
scas
inc
jne
lret
pop
and
mov
mov
lods
lock
mov
enter
fistpll
clc
ror
sarb
mov
inc
fiaddl
fidivrs
cmp
scas
add
and
in
jnp
and
adc
dec
andb
jne
add
xchg
shr
scas
mov
jno
das
adc
ret
pop
pop
push
adc
cmp
push
arpl
mov
inc
sbb
xchg
mov
push
dec
stc
test
rclb
jl
loope
xchg
dec
sub
cwtl
out
rcr
lods
push
scas
sahf
push
sarl
test
mov
pop
sub
in
into
mov
ljmp
je
in
insb
jnp
mov
mov
int
sub
lods
fsts
sahf
and
dec
int3
lret
jle
xor
data16
gs
decl
sbb
sahf
dec
push
cs
adc
test
sbb
pushl
xor
add
out
lds
mov
das
push
lcall
xchg
clc
frstor
addb
jge
add
or
icebp
pop
ja
popa
xchg
sahf
xchg
cmc
xor
in
xor
mov
mov
mov
inc
mov
push
push
cmp
sub
xchg
jp
inc
jecxz
test
push
into
xchg
mov
mov
fistpl
cmp
arpl
or
mov
add
jecxz
jae
mov
dec
adc
xor
repnz
adc
loope
adcb
or
jg
and
mov
dec
mov
dec
xchg
adc
out
mov
les
push
pop
or
mov
ljmp
mov
sti
cmp
ljmp
jbe
icebp
adc
and
push
dec
stc
xor
push
sbb
fcomps
mov
adc
cwtl
mov
push
push
jl
bound
loopne
rcll
cmp
imul
les
sbb
sbb
mov
cld
xchg
pushf
dec
sar
push
push
out
subl
pop
pushf
shrw
hlt
or
xor
les
xor
cmp
loop
imul
sub
jl
lahf
or
fwait
pop
test
sub
xchg
imul
dec
xchg
mov
test
in
outsl
int3
loopne
insb
pop
dec
and
in
mov
jne
lahf
sub
sub
mov
inc
rolb
dec
fiadds
cmpsb
inc
stos
cmpsl
push
into
addr16
adc
cwtl
add
push
push
xchg
jo
test
out
rcl
iret
add
mov
in
adc
fdivs
out
gs
lret
xor
sbb
outsl
cmc
int
jo
fs
iret
add
shlb
por
cs
mov
fsts
addr16
icebp
xchg
js
out
mov
xor
out
xorl
push
fisttps
fidivrs
jno
js
dec
cmp
xor
scas
test
psubusb
insb
dec
xor
xor
movsb
stos
scas
push
lods
sub
sti
dec
shlb
cmp
jge
inc
fdivrp
cmp
or
sarl
inc
and
and
in
add
sub
popa
and
xlat
sub
add
insb
adc
xchg
push
push
std
mov
repz
xchg
dec
inc
les
xor
fadds
xlat
js
fisubrs
mov
jmp
or
pop
out
mov
push
lret
pusha
sbb
pop
ret
fdiv
lods
mov
xchg
lret
arpl
pop
push
lds
mov
lods
leave
int
mov
das
mov
pop
inc
adc
sbb
cmp
cmpsl
cltd
sub
push
pop
cmp
icebp
cwtl
and
mov
aaa
loope
and
mov
dec
pop
cmp
sarb
xor
cwtl
sbb
pop
dec
push
mov
dec
or
or
jg
lret
cmp
jne
inc
int
nopl
push
mov
adcb
jl
dec
in
xor
push
fwait
mov
cmp
loope
xor
std
push
mov
andb
rcl
outsw
push
orl
add
int
out
cmp
jp
jne
loopne
adc
dec
mov
push
jmp
sub
or
mov
aaa
shl
adc
jae
std
adc
add
add
lahf
rorl
pushw
cmp
aas
push
mov
pop
add
fbstp
and
mov
sti
mov
mov
dec
xchg
cmp
int3
mov
dec
jl
push
sub
dec
loopne
incl
icebp
push
js
xchg
loope
cld
filds
test
and
or
lret
add
or
xchg
in
std
cmp
mov
das
fildll
add
mov
mov
js
lock
jmp
pop
xchg
xchg
pop
je
ljmp
pop
stos
lret
scas
xor
inc
cmp
xchg
mov
pop
and
xor
pusha
iret
cmp
stos
testl
add
sub
or
mov
pop
insl
and
mov
ja
and
popa
dec
out
fs
repz
clc
dec
mov
and
or
jl
fs
push
repnz
iret
mov
jne
jnp
adc
loope
clc
repz
xor
pop
cwtl
aad
inc
hlt
cmc
xchg
aaa
add
in
rcr
jle
out
inc
mov
mov
sub
insl
pushf
dec
mov
sub
xchg
jle
mov
push
mov
fdivr
adc
pop
add
test
cld
inc
xor
scas
pusha
sub
mov
lods
sub
je
jns
stos
addr16
add
sub
jp
xor
mov
dec
jae
sbb
mov
insl
push
sub
out
push
les
pop
push
sub
icebp
cmp
out
std
or
xchg
lock
lret
mov
mov
dec
mov
mov
cmc
xor
repnz
sub
sub
pop
jecxz
shl
fldt
test
test
ja
mov
cmp
cmp
cmovl
cld
and
inc
dec
gs
iret
jb
push
movsb
xchg
mov
pop
pmaxub
pop
or
sahf
mov
sub
pop
js
or
std
bound
pop
inc
test
sub
aam
push
lods
pop
mov
add
fistpl
aad
sbb
incb
or
std
outsl
out
lret
cmp
or
or
jno
mov
xor
dec
fdivrs
xlat
imul
lds
add
mov
shll
pop
adc
cmp
mov
mov
shlb
clc
dec
push
push
aad
xor
dec
adc
mov
dec
and
cli
mov
cltd
dec
sub
mov
std
push
cmp
lods
and
pop
lahf
push
jbe
jbe
inc
jge
test
mov
jg
inc
mov
insl
iret
sbb
movsb
inc
test
adc
andb
dec
jge
loopne,pt
sub
imul
xchg
adc
add
xorb
in
sub
cmp
les
call
pop
or
orl
subb
call
lds
jl
test
pop
mov
fdivrl
xor
push
movsl
fwait
jp
shr
addl
in
inc
scas
leave
cmp
jno
xchg
andl
add
fistpl
jmp
xorl
bound
dec
shr
fdiv
es
rclb
scas
xor
loopne
sahf
scas
mov
dec
stos
pop
cs
cs
test
dec
pop
ret
mov
jns
pop
js
xlat
testl
mov
xchg
shll
push
mov
mov
aaa
dec
sbb
fnstsw
or
dec
push
rep
inc
add
mov
mov
call
cmp
inc
xchg
test
lcall
cmpsb
mov
jp
cmp
pop
in
aas
adc
dec
scas
cmp
movsl
inc
mov
xor
aas
cmp
adc
mov
add
inc
dec
jge
pushf
jp
mov
mov
adc
jmp
stc
mov
bound
sbbl
or
sti
pop
pop
push
pop
ja
or
outsb
mov
movsl
mov
push
js
mov
pop
inc
pop
pop
mov
aad
xor
sbb
imul
jns
dec
dec
nop
xchg
sub
mov
pushf
mov
scas
js
and
dec
pop
cs
out
insl
stc
inc
sbb
sarl
ss
aad
aad
mov
ljmp
clc
jle
sub
sbb
push
stos
mov
push
insb
dec
imul
sub
or
leave
aad
stc
ja
mov
sbb
push
cmp
push
mov
pop
loope
cmpsb
cmp
addr16
add
mov
cmc
cltd
inc
popa
jl
mov
arpl
sbb
cmpsl
in
push
xor
mov
cmp
call
das
pop
mov
jle
mov
or
lret
subl
and
sub
out
jb
or
push
arpl
dec
out
mov
hlt
inc
je,pt
test
or
mov
andb
mov
cs
iret
lds
ss
cmp
xorl
movsl
or
or
sbbb
mov
mov
ss
and
pop
outsb
jl
nop
es
or
fwait
mov
mov
pop
sbb
scas
sahf
cmp
jmp
cltd
add
sbb
push
stc
dec
dec
lahf
popa
lods
xor
lods
lahf
hlt
dec
pop
pushf
and
fnsave
xor
jne
jb
fwait
mov
push
shlb
pop
push
int
ss
cmc
adc
pop
xchg
push
fcoms
sbb
add
stc
xor
mov
or
and
pop
add
fmull
inc
push
outsl
jge
and
add
cmp
out
push
js
pop
add
sbb
pushf
test
add
adc
pushf
dec
dec
mov
mov
adc
fxch
mov
out
sbb
sarl
repz
fists
in
pop
pop
jmp
add
dec
pusha
mov
shll
rcrl
aaa
rorl
xor
sbb
mov
xchg
imull
mov
dec
inc
cmpb
mov
fmul
jge
jns
loopne
adc
xorb
mov
xchg
outsb
jle
into
es
dec
push
aaa
xchg
out
aam
push
es
jp
cwtl
adc
push
xchg
jne
je
mov
xchg
mov
in
ja
inc
ds
pop
jp
cmp
insl
adc
scas
pop
or
or
push
stc
sub
loopne
dec
add
jns
int3
adc
push
inc
out
add
push
cmpsl
mov
bound
dec
sbb
xchg
mov
std
out
adc
mov
lret
lock
cli
data16
jnp
icebp
out
and
pop
rcl
pop
lret
loopne
jo
add
add
adc
std
out
lods
add
rcrl
mov
add
imul
xchg
scas
icebp
sub
shlb
xchg
and
xor
xchg
sub
dec
sub
inc
pop
push
fiadds
mov
jge
pop
and
add
mov
int3
xchg
imul
adc
fstl
sti
pop
xchg
adc
aas
mov
cld
sbb
mov
push
int
inc
inc
lock
mov
scas
mulb
pop
sbb
xor
repz
int
cmp
and
sahf
out
movb
enter
aaa
rcll
stos
dec
mov
testb
ja
popf
push
neg
popa
cmp
jl
pop
aas
fcoml
adc
pop
jne
push
call
mov
push
sbb
pop
xchg
unpckhps
xchg
push
mov
jne
mov
or
mov
mov
sti
loope
fidivrl
movsb
and
outsl
movsb
icebp
pop
dec
movsb
imul
inc
addl
pushf
adc
sbb
mov
popa
sti
xchg
xor
inc
xor
sub
and
fcompl
pop
cmp
fists
stos
cmp
lock
mov
dec
mov
pop
stos
dec
inc
pop
mov
imul
jg
rorl
jecxz
loope
or
sub
or
sbb
lret
lea
stc
xchg
mov
stos
adc
out
sub
jecxz
or
and
into
test
dec
arpl
movsb
pop
ja
imul
enter
push
mov
xorb
mov
mov
les
shr
pop
in
xchg
add
scas
sbbb
xchg
jp
xchg
les
or
es
cmp
push
aam
dec
xchg
js
mov
stc
xchg
sbb
scas
dec
data16
jl
and
adc
test
add
xchg
sbb
inc
ljmp
xchg
pusha
jecxz
mov
jp
cmp
popf
dec
inc
daa
call
sub
les
repz
and
mov
adc
jb
insb
subb
repnz
test
stc
add
add
enter
sbb
int3
jecxz
adc
sub
jnp
rorl
cmp
sub
xchg
push
mov
sbb
fsubrs
addr16
fs
gs
andb
outsl
in
lahf
test
mov
lahf
xlat
aad
frstor
fisubrl
jmp
in
ljmp
daa
imul
xchg
jb
sahf
sub
movsl
ficompl
mov
add
pop
pop
repz
inc
xchg
loopne
mov
es
mov
sub
inc
sbb
cwtl
adc
mov
cmp
jl
sbb
dec
add
sub
clc
imul
sti
movsl
or
out
dec
je
mov
sub
pop
pop
in
add
adc
inc
loope
jnp
xchg
fnsave
sub
jb
insb
xor
ret
pop
aas
int3
dec
pop
in
adc
call
cmp
out
lcall
cmp
sbb
out
sahf
std
push
lret
jg
rcrl
cltd
cmp
jle
pop
lea
add
outsl
pusha
arpl
and
mov
into
mov
sub
xchg
inc
lea
aaa
fs
in
xor
jno
xchg
les
mov
and
fildl
mov
jbe
push
or
xchg
sub
lock
mov
and
cmpsb
xchg
icebp
add
mov
btr
sub
add
test
imul
dec
sub
add
stos
movsb
andl
fldt
dec
lock
dec
cwtl
mov
push
push
add
outsl
aam
in
add
adc
jbe
lret
jb
dec
pand
cltd
pop
jns
sbb
jno
lods
lret
mov
inc
xor
or
or
cli
ljmp
sbb
icebp
outsl
lcall
add
in
pop
scas
fcmovne
mov
popf
aas
cs
aas
dec
pushf
push
leave
mov
or
cmp
xor
addr16
or
jecxz
and
inc
mov
add
add
rolb
add
add
out
inc
mov
jb
mov
divl
ror
adc
jp
adc
jg
push
mov
dec
in
movl
xchg
inc
cmp
sub
shlb
xor
pop
je
aaa
add
mov
mov
test
cmp
insb
test
cmp
test
arpl
jecxz
push
in
xchg
inc
xor
cmp
pusha
lock
jnp
jb
dec
sub
dec
xor
pop
push
les
lahf
sub
push
jno
push
xchg
lahf
or
jp
xor
cmp
int3
popa
ja
movsl
ljmp
jbe
or
icebp
outsl
add
sbb
push
pop
in
jle
cli
in
mov
ds
repz
dec
icebp
jne
ja
sbb
fists
into
xor
cwtl
pop
pop
xor
mov
adcl
stos
aad
inc
fsubl
mov
xlat
sub
jecxz
mov
push
jge
das
dec
mov
jns
mov
mov
clc
inc
xchg
mov
adc
jmp
fsubrl
push
iret
insb
outsb
jbe
jne
jge
xchg
int
testl
arpl
mov
arpl
sub
pop
mov
jb
cmp
out
sti
pop
ret
or
or
pop
jbe
jne
sbb
jecxz
movsl
jle
in
les
nop
or
fbld
fisubl
jbe
cmpb
dec
lret
mov
push
test
inc
cli
nop
fmuls
push
mov
add
in
shll
inc
cwtl
cmp
pop
inc
jg
pop
dec
xlat
test
sbb
adc
push
ret
fwait
lock
add
pop
adc
mov
mov
cmp
pop
js
enter
sbb
mov
xchg
ljmp
cmp
sub
ja
dec
sbb
adc
ret
sub
pop
pop
frstor
mov
xor
cmpl
inc
in
jae
mov
lahf
cmp
pop
cs
test
or
jge
fsub
xor
and
sbb
pop
aad
cmc
pop
int
repz
es
out
enter
ljmp
mov
pushf
dec
je
mov
dec
mov
ljmp
mov
out
pop
dec
xor
mov
cmp
add
pop
in
fnstsw
or
jle
pop
mov
add
add
xor
jl
jmp
mov
cmp
adc
xchg
push
sbb
xchg
popa
push
dec
int3
lea
pop
xor
mov
lds
lret
xchg
negl
xchg
aam
or
andb
xchg
or
mov
orl
push
into
fisubs
push
mov
repz
test
std
cmp
iret
fdivl
loopne
jg
xchg
and
jne
call
dec
cmp
repnz
adc
out
adc
mov
mov
xor
dec
pop
roll
lahf
ds
test
adc
jmp
frstor
mov
sub
jmp
in
fs
add
pop
es
push
shl
mov
repz
aad
cli
out
push
shlb
ret
add
or
adc
das
cmp
scas
mov
sbb
jp
mov
and
cmp
mov
and
fwait
call
inc
cltd
daa
sbb
mov
xlat
mov
add
sub
adc
xchg
lods
js
pop
rcrb
hlt
mov
icebp
mov
into
pop
sbb
xor
xchg
mov
in
popa
sbbl
xor
push
movsl
inc
pop
push
ja
inc
cld
pusha
mov
pop
cltd
int
push
das
xchg
xorl
cmp
out
loop
jp
je
and
jnp
or
xchg
xchg
aas
pop
stos
addr16
push
outsl
push
ljmp
or
mov
jecxz
jge
mov
sub
add
dec
jb
mov
jbe
cmpsb
jge
push
xchg
mov
sbb
ja
fwait
jns
xchg
sub
xchg
lods
add
test
dec
cmp
stc
cwtl
jmp
pop
mov
inc
push
pop
mov
movsl
insb
jnp
jns
push
or
nop
pusha
push
test
jbe
nop
out
xchg
jecxz
inc
scas
imul
lea
mov
sub
mov
lahf
push
int3
js
mov
jns
test
dec
negb
cs
incl
pop
fidivrl
shll
lcall
mov
mov
iret
in
push
pop
mov
sub
mov
sbb
fistl
xchg
mov
push
sub
jg
lea
ret
cmp
mov
jp
ror
pop
stos
lods
loope
mov
cld
dec
sub
and
cwtl
or
sub
sub
and
xor
mov
xchg
test
cltd
in
mov
jecxz
mov
push
xchg
xchg
cld
cmp
rcr
pop
adc
add
cmp
outsl
imul
lods
imul
mov
or
mov
andl
fadds
pop
pop
adc
out
test
or
lret
clc
insl
cmp
bnd
and
lds
pushf
hlt
push
mov
into
inc
push
sbb
test
push
jns
repnz
jo
cld
adc
and
mov
mov
test
int3
dec
psubusb
ljmp
push
push
and
or
icebp
mov
inc
xor
lret
pop
or
aam
mov
lock
aad
es
and
in
push
lret
ljmp
jbe
cmp
icebp
mov
sub
and
mov
mov
and
add
das
std
dec
xchg
test
pusha
add
mov
xor
out
lea
sub
or
dec
into
js
sahf
push
mov
inc
scas
scas
jl
jo
subl
lds
inc
xchg
js
clc
ret
fistl
mov
scas
cmp
fs
adc
mov
and
xchg
mov
loope
pop
lock
xchg
shrw
outsl
mov
icebp
jge
popf
inc
test
or
mov
nop
mov
outsb
rorl
cmp
test
xchg
in
in
mov
lods
jge
outsb
stos
and
inc
lds
xchg
cmp
and
push
lods
push
sti
popa
repz
popa
mov
fs
push
mov
dec
imul
je
cmc
push
imulb
or
pop
mov
outsb
xor
mov
and
sbb
sub
cmp
mov
push
mov
aam
test
mov
loop
mov
pop
lahf
hlt
dec
test
mov
sbb
push
call
out
push
sub
inc
jo
in
hlt
add
fcmovne
push
in
out
pop
xchg
jns
push
lcall
aad
pop
pushf
fildl
xlat
lahf
imul
pop
xor
daa
add
cvtps2pd
movsb
outsb
cmpb
mov
pop
adc
stos
iret
inc
jno
mov
pop
add
sub
lods
pop
mov
inc
scas
clc
imul
mov
sbb
push
mov
cmc
aam
jns
adc
lcall
jno
call
push
andps
push
jp
jmp
and
dec
insb
dec
sub
sub
pop
scas
hlt
fiadds
cmc
sub
pusha
and
add
decl
js
loope
mov
movsb
xchg
lahf
inc
jo
ds
pop
fldt
mov
mov
pop
movl
pushf
and
js
idivl
jmp
jb
mov
outsl
mov
xchg
fs
inc
mov
or
popa
mov
dec
sub
sbb
sub
mov
imul
fabs
add
rorb
pusha
gs
xchg
sbb
cmp
xor
pusha
cli
ja
jo
adc
iret
mov
mov
insl
dec
ljmp
adc
xor
addb
mov
or
push
test
rolb
pop
mov
mov
loop,pn
shlb
pusha
test
js
loope
imul
loop
std
mov
sti
in
movsb
lahf
fdivrs
aaa
insb
cld
int3
jnp
dec
mov
dec
jbe
cmpsb
push
xor
jg
mov
lods
push
xchg
loop
pushf
push
inc
rcll
add
imul
mov
das
add
dec
cltd
and
fs
xor
jl
test
cmpl
enter
outsb
popa
adc
mov
sbb
shlb
in
in
cwtl
xchg
push
ss
push
movl
clc
dec
aas
lcall
cli
dec
cmc
jmp
mull
push
pop
cwtl
lods
int
mov
mov
xor
test
stc
out
pop
pop
aam
mov
inc
nop
pop
movsl
test
sbb
add
loopne
add
es
sbb
loopew,pt
dec
inc
pushf
sahf
cmp
imul
lcall
nop
mov
std
adc
std
lock
lods
leave
sbb
in
mov
pop
fnstcw
je
dec
jge
mov
dec
les
mov
scas
into
int
ret
adc
jno
dec
int3
push
lcall
mov
stos
lret
mov
sbb
push
int3
sub
push
into
inc
jns
jg
or
loop
nop
sbbb
pop
jp
xor
xor
int3
ds
stc
cmp
fdivp
mov
pop
push
loope
in
loope
push
mov
dec
cmp
jae
jmp
fnsave
test
xor
cltd
fisubl
notl
xorb
sub
push
xchg
and
jp
jle
fisubs
sub
insl
shrb
jp
stos
xchg
and
scas
sub
xchg
mov
jl
push
sbb
sarb
add
sbb
inc
mov
clc
xchg
fldenv
add
stos
or
pop
push
mov
and
rclb
adc
push
loopne
push
cmc
daa
icebp
inc
mov
sub
icebp
mov
dec
ljmp
push
xchg
push
jle
jg
jns
cs
mov
addr16
out
es
mov
add
and
add
mov
imul
les
mov
fimuls
rclb
rep
ss
mov
jb
popa
inc
cmpsl
iret
push
dec
jmp
fcoms
fcompl
jo
inc
mov
xchg
jp
push
loopne
jne
and
inc
fmuls
sbb
dec
fwait
lods
cmp
push
in
jo
adc
loop
adc
ret
lret
dec
clc
xchg
xchg
adc
int3
inc
lret
jl
out
cmp
xor
lahf
cmp
dec
test
pop
fimuls
and
adc
xchg
cs
add
lcall
pushw
xchg
xchg
in
scas
nop
jge
out
add
sub
dec
dec
jae
clc
mov
loopne
mov
mov
andb
movsb
pop
daa
and
subb
mov
xchg
xchg
sti
inc
xchg
popl
xor
aad
sub
int
cmpsb
inc
orl
cld
jns
stc
dec
bound
dec
test
test
mov
cmpsb
imull
gs
lds
lcall
lods
mov
mul
rorb
xchg
push
cmc
imulb
jae
sahf
rep
sbbb
pop
sti
ret
xlat
inc
push
bound
cwtl
adc
dec
xchg
adcl
pop
comisd
cmp
outsb
xchg
fldl
jne
cmp
inc
lcall
ss
push
mov
idivb
jo
xchg
iret
jo
cmpsl
cmpsb
lock
test
ret
bound
pop
add
xchg
fsubrp
or
imul
adc
inc
int3
lods
mov
inc
adc
iret
int3
jb
xchg
cmp
or
xor
push
icebp
jns
mov
out
mov
insl
sti
call
pop
mov
inc
push
add
mov
aaa
aad
sti
mov
nop
mov
add
inc
mov
mov
sti
dec
pusha
xchg
stc
lahf
lcall
cs
bound
lcall
bound
sub
mov
test
lock
and
pop
mov
ds
push
add
dec
xor
dec
inc
scas
inc
int
push
dec
mov
add
inc
pop
dec
adc
xorl
fst
adc
mov
jbe,pn
cld
lret
aaa
mov
push
fstpl
jne
dec
adc
lret
xchg
or
fidivs
xchg
add
jnp
mov
inc
into
pop
nop
jmp
jl
ss
mov
pusha
ja
cmpb
in
ss
shrb
movsb
sti
add
sbb
sahf
les
fnstsw
stc
and
cmp
mov
les
mul
mov
hlt
jmp
nop
movsb
pop
pop
mov
in
popa
dec
pop
adc
and
add
mov
inc
push
fdivrs
lret
xchg
pop
int
cmpsb
int
jecxz
jnp
out
lods
inc
mov
sub
bound
mov
divl
ds
je
cli
add
lods
aam
insl
push
ss
fcoml
cmp
adc
lock
shll
jns
out
out
stc
pop
outsb
pop
add
ficomps
xlat
js
ficoms
cs
xor
mov
xchg
xor
lcall
jns
fs
addl
dec
xor
test
push
das
cmp
or
jecxz
xorl
jg
je
push
and
mov
sti
or
pop
sbb
or
ret
xchg
ljmp
push
ds
dec
xor
cmpsb
pop
jge
movsl
scas
into
in
xor
loopne
mov
xchg
fs
decb
fadds
push
icebp
mov
mov
cmp
js
sub
clc
add
or
dec
popa
repz
mov
pop
sti
ret
pop
push
push
jp
cmpsb
jle
cmp
ja
shl
xchg
es
js
mov
mov
js
push
sub
mov
push
jle
mov
lret
je
lods
xor
lret
lds
and
nop
add
and
ljmp
out
mov
adc
loop
sub
fwait
mov
leave
ja
ss
mov
test
inc
lods
sbb
inc
out
pop
xchg
adc
sbb
ss
or
roll
sub
testl
jmp
popa
xchg
mov
add
scas
add
jne
xchg
mov
lock
push
out
push
fsubrs
repnz
and
mov
xchg
stos
int3
mov
jbe
add
aas
jge
ds
dec
xchg
gs
cmp
mov
sub
cld
aaa
lods
mov
mov
xor
mov
adc
scas
aas
push
push
sub
loop
fstpl
sbb
and
pop
sbb
stos
rcl
inc
in
pop
das
pop
roll
repz
jns
jb
out
test
push
push
or
or
or
dec
xlat
jbe
inc
xlat
jg
scas
sbb
pop
leave
dec
jle
out
push
jne
pop
cmp
pop
cmp
std
sbb
pop
hlt
mov
sbb
sti
inc
lea
out
mov
cmc
jns
jecxz
dec
pop
mov
fs
push
xor
sbb
xchg
lret
stc
pop
push
mov
sub
and
test
dec
sbb
insl
out
outsl
mov
adc
shr
mov
cs
sbb
xor
mov
lcall
dec
ret
aas
mov
daa
dec
mov
sbb
inc
jnp
insl
in
lods
xchg
push
addl
jae
shll
add
add
shll
scas
ja
inc
xchg
pop
jl
add
add
aas
pop
in
mov
adc
stos
xor
cmp
inc
cmpsb
sub
inc
adc
icebp
addr16
cmp
in
sahf
pavgb
aad
loop
in
lods
andb
sbb
push
xor
rclb
mov
lret
loope
loope
push
std
sbb
xchg
fidivs
sbb
pushf
lahf
inc
xchg
dec
or
jo
or
jo
cltd
movsl
ret
lods
shrl
popa
sub
pop
stc
and
sti
pop
cwtl
lret
inc
cmp
cmp
xchg
imul
mov
pop
push
cmp
lock
fst
shll
nop
jmp
sbb
lock
scas
mov
imul
dec
orl
mov
outsb
ljmp
xchg
fs
daa
or
xor
push
in
divb
repz
pop
mov
stc
icebp
add
adc
stos
int
fs
int3
xchg
push
addr16
xchg
outsl
mov
mov
out
push
lods
mov
pop
movsb
das
pop
ljmp
js
mov
sub
icebp
and
sbb
mov
xor
out
out
iret
mov
insl
das
es
aad
jo
add
je
mov
and
divl
lods
roll
lods
in
pop
adc
fcoml
fimuls
cmp
cld
sbb
es
daa
and
add
inc
xorl
mov
add
popf
push
sub
dec
je
sub
mov
shr
inc
inc
popf
adc
loop
cmpl
es
or
mov
stos
add
lock
pop
pop
in
or
cmp
fwait
xlat
cmp
sbb
outsl
mov
inc
dec
mov
dec
xchg
mov
mov
out
mov
fnstenv
mov
cmpsb
nop
pushf
scas
adc
in
adc
loop
xchg
pop
lahf
mov
sbb
adc
aad
push
add
dec
ficompl
xor
les
lret
pop
into
and
push
add
sbb
jmp
gs
icebp
sub
xlat
setge
sbb
aam
xchg
push
iret
lea
insb
ds
or
aas
xchg
movsb
jl
xlat
add
push
mull
jns
pop
mov
ret
inc
rol
hlt
pop
xchg
cmc
clc
out
mov
fcoml
xor
fcompl
inc
mov
pop
mov
out
xchg
jmp
test
mov
adc
cmpsb
mov
add
adc
xchg
sub
cmp
add
cmp
jle
mov
loope
mov
push
xor
mov
mov
and
inc
pop
mov
mov
inc
stc
xchg
lock
and
bound
repz
xchg
psubb
outsl
mov
in
push
mov
scas
xor
out
inc
int3
add
push
out
sbb
sbb
inc
lret
mov
and
out
adc
lods
sub
mov
fmull
bswap
pop
jge
sbb
das
aaa
or
or
add
push
add
lea
insl
les
push
add
jb
jno
out
or
popf
push
pop
cmp
addr16
std
and
and
movsb
push
mov
add
clc
mov
lret
xchg
ja
fimull
dec
repnz
dec
lods
fsub
pop
imulb
and
add
out
mov
or
int3
fsub
mov
push
mov
or
mov
loope
mov
repnz
pop
jp
outsb
pop
hlt
sub
call
cmpsl
push
jb
push
jne
test
sbb
or
xchg
mov
inc
jne
ds
iret
lods
fwait
loopne
in
jle
shrb
out
add
mov
add
int
inc
inc
inc
clc
jle
push
mov
std
rorl
push
fs
ret
arpl
jecxz
push
jae
adc
iret
lds
and
and
jo
xchg
and
add
mov
cmpsb
sbbl
jp
rcrb
jmp
dec
stc
inc
mov
mov
cmp
jge
pop
mov
or
or
jle
xor
or
fmul
mov
std
mov
adcb
sub
repnz
insl
jle
or
push
xchg
mov
mov
sbb
push
jbe
push
inc
push
dec
les
and
xor
or
cwtl
adc
jmp
cmp
inc
ss
sub
pop
lret
add
adc
fnstcw
nop
das
cmpsl
adc
adc
aaa
xor
jecxz
add
pop
or
into
out
jae
push
cli
and
faddl
mov
div
movsb
scas
fcoms
add
xor
test
adc
nop
fnsave
iret
icebp
mov
test
in
sbb
sub
adc
int3
mov
dec
or
mov
mov
iret
adc
roll
lcall
push
jecxz
sti
and
loope
addl
sub
cmp
lret
add
cmp
aas
in
sbb
outsb
xchg
setl
pop
icebp
mov
scas
cmp
dec
out
lret
jmp
popa
pop
into
mov
mov
jne
inc
js
clc
xlat
std
pop
push
push
dec
outsl
inc
fmull
aad
sbb
and
outsl
push
xchg
xchg
adc
ret
int3
add
or
mov
es
xchg
adc
inc
push
sbb
mov
rcrl
mov
mov
and
sbb
adc
or
loope
arpl
int3
pop
mov
incb
cmp
arpl
adc
lods
into
lret
pop
imul
addr16
rolb
femms
push
pop
mov
xor
mov
ja
sub
mov
out
dec
aaa
pushf
or
dec
frstor
dec
imul
subl
notl
add
imul
inc
cmpsb
gs
scas
test
fmul
jecxz
fdivs
push
lods
mov
frstor
cld
rcl
sub
cld
xor
int
insl
xor
inc
arpl
or
xchg
push
js
leave
test
cmp
xlat
mov
pushl
pusha
popa
mov
scas
and
cmpsb
insb
clc
call
fwait
dec
cli
adc
mov
cmp
mov
inc
sub
test
lods
xor
fcoms
dec
sub
and
pop
insl
test
mov
jae
push
int3
dec
cmovo
xor
and
enter
aaa
pop
loopne
arpl
je
jbe
out
cmp
das
inc
scas
imul
repz
nop
icebp
pushf
scas
nop
add
add
mov
js
shlb
mov
lds
add
mov
ret
aad
inc
xchg
dec
popf
inc
fidivrl
es
cmp
xor
inc
mov
fdivr
cmp
pop
shr
cmp
jbe
add
pop
popa
mov
testb
mov
mov
daa
sahf
push
fwait
add
sbb
pop
push
xor
inc
loope
lret
or
inc
pop
mov
or
iret
hlt
pop
mov
clc
sbb
js
xor
mov
add
outsb
aad
inc
xor
sti
jb
ss
daa
add
jae
mov
call
sub
push
out
test
fildll
cmp
ret
loope
jmp
pop
mov
sub
scas
pop
add
movsb
inc
faddp
dec
xor
jae
dec
xor
mov
adc
jb
lods
ss
xchg
aam
repz
pop
scas
dec
pop
fwait
push
in
call
pop
sbb
or
fwait
ljmp
repnz
mov
sbb
lahf
cmpsl
sub
xor
xor
mov
out
loopne
pop
icebp
push
jne
mov
out
or
rorb
imulb
pusha
push
xor
jle
or
or
xor
mov
jge
decl
rcr
inc
cmpsb
fildl
dec
pop
ucomiss
push
ja
jae
data16
out
nop
jge
or
pop
sahf
aam
add
jmp
lahf
scas
mov
pop
popf
es
adcl
mull
cmp
repnz
cwtl
aaa
movsb
cmp
adc
ret
ljmp
add
push
mov
jmp
mov
jbe
sub
loopne
mov
daa
dec
push
jg
div
dec
js
cmpsl
lods
sbb
imul
jno
repnz
sbb
mov
add
test
imul
jne
xor
imul
out
cmpsl
aam
gs
xchg
imul
pop
pop
bnd
and
push
into
lahf
lds
in
in
ja
shll
lret
lock
ljmp
sbbb
pusha
push
mov
popf
add
aad
jmp
sub
test
jg
loopne
aas
mov
movsb
cmp
sub
push
jle
jl
into
ljmp
movsl
aad
pop
sub
jg
int3
and
mov
sarl
xchg
int3
loope
subl
cmc
jns
sub
add
nop
pop
lret
and
fnstsw
xchg
sub
jge
sahf
popf
lea
rolb
xchg
jle
add
xor
pop
mov
push
ret
out
add
pop
jg
xlat
push
in
or
inc
and
and
dec
mov
and
mov
push
sahf
popf
jae
sbb
outsb
adcb
repnz
test
pop
mov
mov
bound
mov
pop
mov
jg
iret
aas
shr
mov
jl
sbb
add
adc
push
pop
mov
mov
mov
pusha
ljmp
stos
add
and
sub
cmp
xor
aaa
mov
xor
rcrl
mov
sbb
xchg
lret
push
mov
into
xlat
cltd
aas
out
lret
popf
jns
in
fstl
push
lret
dec
stos
mov
filds
clc
fsubl
pushf
push
jne
xchg
sahf
test
pushf
xor
or
aas
mov
mov
sbb
sub
iret
movsl
xor
cmp
inc
dec
mov
test
and
in
repnz
push
xor
pop
adc
xchg
insl
scas
or
ror
dec
push
mov
xor
ds
mov
leave
subb
adc
xor
into
in
fwait
dec
jmp
mov
and
insb
lods
mov
inc
cmpsb
aad
les
push
mov
adc
shlb
lahf
xor
fwait
push
lahf
fisubl
and
jae
gs
enter
or
or
jg
inc
pop
xor
loope
and
jnp
xor
cld
popa
sbb
adc
jge
adc
scas
or
dec
loop
inc
pop
out
hlt
pop
test
fcmove
and
pop
xor
add
insl
xchg
adc
push
mov
jle
hlt
jg
mov
adc
mov
outsb
das
mov
out
mov
xchg
cmc
lea
call
push
sub
xchg
repnz
fidivl
add
scas
add
xchg
jl
sbbl
add
fbstp
jp
insl
inc
cmpsb
sub
push
in
lea
jnp
inc
in
cli
ljmp
xchg
test
mov
lods
std
in
xor
insl
or
jge
mov
cmp
ror
lahf
outsb
pop
movsl
push
jo
int3
sbb
and
pop
cmp
lahf
stos
push
push
popa
fbld
xor
enter
popa
jmp
shrb
sbb
lea
aaa
xchg
cmp
lret
icebp
loop
cmp
push
out
push
fincstp
sub
mov
mov
loopne
cwtl
cmp
lds
xchg
or
or
stos
dec
add
aaa
movsl
scas
enter
sub
xor
lret
jge
jne
loope
xchg
sub
mov
in
scas
push
daa
sub
testl
dec
test
sub
repnz
xchg
inc
test
xor
pushf
inc
loope
cltd
iret
mov
mov
in
xor
repz
mov
cmp
mov
dec
scas
cmc
mov
mov
or
push
in
mov
fcmovne
aaa
sub
cltd
repz
jns
fldcw
ret
mov
adc
jb,pt
or
clc
jo
lcall
cli
xor
xor
fmulp
insb
aad
add
adc
pop
adc
lret
loope
ljmp
pushf
stos
mov
testl
pop
sbb
outsb
and
fldl
shll
ss
mov
mov
cmp
mov
mov
sti
sbb
out
in
outsl
dec
dec
xchg
mov
push
sub
out
lret
insl
ret
repz
jnp
iret
imul
sub
test
cmp
sbb
cmp
loop
cltd
loope
js
or
call
andl
fldcw
mov
aaa
dec
push
pop
cmpsl
cwtl
icebp
fwait
aad
mov
mov
cltd
clc
jle
push
iret
cld
jne
scas
pushf
int
push
lods
movsl
pop
shl
add
xchg
xlat
adc
add
cmp
jno
loop
jg
addr16
imul
leave
test
lret
loopne
cltd
sbb
aaa
sub
push
cwtl
cmc
push
ret
or
icebp
movups
cmp
data16
xchg
mov
cwtl
xchg
lret
jns
stos
ret
ret
pushf
add
xchg
ljmp
add
repnz
into
imull
pop
mov
add
add
clc
cli
je
jecxz
icebp
lcall
out
sub
test
es
push
fcoms
mov
push
in
dec
test
enter
dec
mov
cltd
sbb
fdivl
push
je
imul
inc
jno
push
jmp
call
jne
into
out
inc
push
mov
fadds
push
dec
ud1
and
movsl
scas
jg
pop
pop
cmc
xor
popf
lret
faddl
cmp
pushf
xlat
inc
pop
jg
mov
mov
adc
mov
data16
roll
and
push
jl
or
cmpsb
pushf
mov
std
mov
vcvtss2si
mov
mov
clc
in
cltd
sub
in
in
cwtl
outsl
es
xor
or
sahf
es
xchg
jb
adc
mov
cmpsb
fucomip
popa
sub
mov
nop
jo
mov
jb
notb
mov
cmp
clc
dec
subb
lock
testl
int3
xor
push
pop
and
push
cmp
mov
test
js
arpl
adc
pop
psubb
clc
adcl
xor
xchg
cmp
add
and
pop
dec
call
dec
cmp
pop
adc
cltd
mov
stos
jbe
lea
fs
nop
jmp
xor
enter
rcrb
or
fcoml
and
jb
test
daa
mov
jno
mov
cmp
mov
fwait
test
dec
push
je
outsb
test
sub
jle
and
lock
shll
pop
dec
and
and
mov
sub
leave
add
mov
xor
mov
fcom
sbb
jo
out
add
xor
out
stc
loopne
out
lret
sbbb
pop
mov
inc
push
into
sbb
clc
xor
mov
xchg
out
mov
sub
arpl
push
test
imul
fstps
lret
xchg
lds
jns
addr16
imul
std
sub
xor
sub
outsl
inc
add
pop
push
pop
cmp
aas
shll
mov
jmp
mov
es
stc
fcmovbe
rolb
mov
iret
inc
outsb
mov
movsl
mov
sub
js
mov
bnd
inc
sahf
lds
lret
dec
lcall
sti
fcmovb
inc
adc
sub
icebp
mov
pop
mov
stc
popa
pop
imul
inc
cltd
or
int
loope
mov
ljmp
outsl
sub
mov
out
xorl
adc
mov
std
jne
or
pop
and
movsb
mov
shrb
push
jb
mov
ds
sbb
or
icebp
es
push
test
mov
mov
loope
fimuls
cltd
int3
jl
pop
jmp
and
adc
lea
mov
inc
xor
add
xchg
dec
mov
shrl
into
ret
mov
cmc
xchg
shlb
mov
je
ja,pt
mov
mov
outsl
stos
mov
cmp
pop
cmpsb
scas
cltd
xchg
adc
inc
and
mov
xchg
in
inc
push
scas
adc
imul
out
sahf
add
push
cmpsb
sbb
insb
push
xchg
call
rcll
in
fisttpll
iret
test
pop
mov
aam
pop
and
les
mov
xchg
and
outsb
dec
add
xchg
xchg
jge
cs
cltd
jo
inc
cmpsb
rcrl
mov
dec
xchg
push
mov
jns
paddw
xor
fidivl
scas
pop
push
mov
cli
out
inc
dec
mov
sub
push
fistpll
xor
jb
jne
shlb
outsb
cmpsb
push
and
mov
aaa
int
je
cwtl
pop
lahf
adc
add
sub
ret
insb
insl
les
inc
nop
stos
push
jl
aad
cmp
mov
cmpsl
mov
stc
push
out
or
ss
push
xchg
and
cmp
xchg
in
cmpl
xchg
pusha
fidivs
das
xchg
loop
in
cld
in
xchg
ljmp
cmp
jecxz
outsb
cwtl
push
jge
inc
push
and
sbb
outsl
sub
movlps
adc
add
add
cmp
mov
pop
push
xchg
test
daa
jbe
mov
daa
add
outsl
stos
dec
dec
dec
xchg
pop
out
inc
fbstp
aas
jle
rcr
jno
nop
sub
dec
mov
sbb
sbb
sbbb
sahf
decl
mov
rcrl
pop
je
test
pop
xchg
dec
roll
xchg
and
push
lret
pop
test
and
cmpsb
sbb
fisubl
call
movsl
mov
insb
test
fwait
jne
stos
out
retw
das
in
fs
mov
adc
stos
movsl
clc
daa
inc
ja
xchg
cmpsl
jbe
mov
sub
push
xor
mov
ret
cs
roll
xchg
fidivrl
pop
movsl
inc
adc
outsl
xchg
in
imul
in
xlat
negl
pop
mov
mov
sbb
or
orb
shr
xor
and
mov
xchg
sahf
sahf
xchg
mov
lret
push
loopne
mov
sub
int3
insl
lea
rcrb
pop
in
xchg
in
fs
loop
cmp
jl
add
jnp
jge
inc
mov
xlat
in
jne
ret
fwait
jbe
add
sub
ficomps
cmp
push
push
icebp
adc
insb
xor
mov
xchg
and
push
add
push
pop
popf
fstpt
sub
js
pop
cmp
rcrl
enter
or
inc
jbe
mov
popa
or
lret
jmp
or
fcmovu
sbb
xlat
mov
mov
test
jns
adc
rol
sub
xchg
test
jo
aam
enter
dec
out
adc
push
int
andl
xlat
nop
imul
mov
xor
mov
cmp
mov
xchg
sbbl
jp
mov
push
cltd
xor
and
pop
pop
das
jbe
mov
fdivl
pop
sub
sub
lret
fdivr
sbb
dec
mov
fwait
neg
repz
out
jg
fsubrs
pusha
push
sub
mov
loop
sbb
fsubs
test
lahf
dec
loop
push
shlb
and
cmp
imul
xchg
push
fcmove
pop
fnsave
mov
cli
pop
dec
aas
movsl
cli
or
enter
popf
add
add
add
pop
je
shrb
xchg
add
imul
std
pop
add
fistps
jnp
adc
mov
scas
rcl
outsl
repnz
mov
aas
or
jno
arpl
test
ljmp
fucom
pop
sub
test
mov
sbb
inc
xor
or
cmp
call
std
fcompl
dec
stos
xchg
decb
add
repnz
jge
pop
jp
dec
jo
leave
sub
mov
jo
xorb
popa
daa
inc
scas
sbb
mov
add
call
add
sahf
push
in
movsl
cmc
outsl
repnz
cmp
fdivl
mov
xchg
xchg
cmp
cmpsl
bound
clc
inc
mov
mov
icebp
push
xchg
fistpll
xchg
insb
xchg
fsub
add
cmp
xchg
dec
out
faddl
and
out
lret
adc
aas
dec
dec
andb
inc
call
add
mov
or
xchg
rolb
mov
icebp
test
sub
or
sahf
out
sbb
cmp
loope
or
in
jl
dec
cmpsb
mov
sbb
inc
scas
ret
add
mov
int
and
pop
daa
mov
xchg
push
daa
rorb
jns
movsb
push
pop
xor
jl
fmull
jnp
divb
push
test
jbe
scas
outsb
push
push
mov
movsb
jb
jmp
scas
push
rol
fldt
cmp
sbb
and
nop
adc
xchg
mov
push
cmc
push
imul
sub
adc
xchg
sbb
fstl
push
pop
xchg
mov
mov
mov
dec
pop
loop
mov
lret
adc
movsb
pop
cmpsb
push
xchg
fs
inc
xchg
mov
and
popa
adc
stc
or
sbb
or
cmp
dec
cmp
stos
push
in
data16
xchg
fincstp
popf
outsl
ja
cmp
fbld
mov
and
rolb
sarb
test
scas
xor
lds
pop
pop
sahf
bound
out
aam
sbb
fs
addr16
dec
fimuls
in
xchg
clc
shlb
shl
leave
xor
outsl
mov
pop
cmp
and
cmp
ret
cld
push
pop
hlt
movsb
and
pop
cmp
xchg
nop
in
lret
and
inc
cmp
jmp
in
xor
or
push
rorb
xor
sbb
cmpsb
jb
popf
out
aas
mov
stos
adc
shrb
sbb
pop
cmp
shl
push
arpl
out
or
nop
nop
jg
push
push
pop
mov
imul
movsl
cmp
adc
vfrczsd
dec
add
jle
out
dec
push
das
test
pop
pop
shl
push
icebp
ljmp
cmp
pop
jecxz
ret
jnp
icebp
pop
out
les
adc
push
cmp
mov
je
sub
xchg
jno
lret
mov
jbe
clc
push
adc
negb
mov
sbb
dec
pop
mov
sub
mov
sub
inc
xor
jmp
pushf
outsb
jge
decl
mov
xchg
xor
outsl
and
mov
jg
into
js
pop
lods
fnstcw
xor
jecxz
mov
sub
addr16
ljmp
negl
scas
clc
cmp
cmpsl
aas
jl
in
leave
dec
sub
sbb
inc
cmp
test
jmp
cld
dec
sub
mov
fsts
insl
idivb
in
test
cmpsl
fimuls
pop
cli
test
enter
movsl
test
insl
or
add
mov
popl
and
in
jo
test
or
xor
les
xor
les
push
dec
mov
je
xor
mov
sub
movsb
sbb
jb
and
mov
pop
jns
inc
adc
sbb
and
pop
popa
sbb
pusha
cmc
pop
jbe
mov
iret
lret
cmpsl
into
fistl
outsl
fstl
pop
adc
ficoms
nop
inc
push
mov
lret
sarl
enter
pop
fists
es
aad
lea
push
sbb
dec
into
cli
dec
movsb
in
imul
test
in
addb
xlat
xlat
imul
ds
inc
test
loop
or
orl
xchg
adc
movsl
es
sbb
stos
and
ret
pushf
aam
inc
mov
adc
add
add
adc
in
std
jecxz
jp
aad
cwtl
mov
xchg
pushf
js
std
or
cmp
hlt
movsl
or
ljmp
and
jmp
push
aas
and
mov
dec
jle
jno
aaa
mov
xchg
jmp
sbb
mov
notb
add
daa
and
sub
outsl
imul
mov
mov
clc
pop
cmpsl
scas
loope
hlt
aaa
push
jae
fstpl
inc
ljmp
jno
ljmp
or
mov
das
in
enter
mov
cmp
xchg
in
lock
xchg
sub
jp
in
pushf
in
sti
lcall
lret
push
pushf
xchg
push
daa
test
xchg
std
ss
xor
sti
test
fstpl
lock
xor
mov
fsubrl
fstpt
xor
fidivrl
js
rcll
out
mov
lahf
addb
cmp
mov
adc
mov
sub
iret
fsubrs
push
cmp
adc
cltd
ja
mov
sub
int
xchg
jle
call
icebp
repnz
testb
jecxz
or
hlt
or
inc
push
stc
pop
mov
xor
mov
fwait
pop
pop
scas
leave
dec
shrb
jo
fs
adc
xchg
cld
cltd
sbb
pop
sub
lock
cmp
out
fs
push
ljmp
mov
ja
rorb
stc
push
je
mov
jb
pop
sbb
push
mov
mov
cli
out
nop
sub
idivl
push
mov
loope
loop
mov
std
cmc
dec
cmpl
push
add
int
aam
inc
mov
or
nop
aad
jae
pop
inc
sti
imul
notb
nop
cld
in
mov
and
test
popa
sbb
xchg
push
jns
mov
loop
loope
push
popf
jle
pop
fsubs
hlt
mov
xchg
fnstsw
loop
insb
jbe
mov
ret
adc
es
loopne
pop
jbe
pop
mov
call
cmpsl
adc
mov
std
test
xchg
inc
add
iret
ret
ret
loopne
mov
aam
push
pop
dec
cmpsb
lahf
mov
adc
mov
jmp
inc
jg
enter
mov
cmp
scas
adc
scas
in
in
add
add
jmp
jne
pop
ljmp
lcall
mov
xor
bnd
lods
ret
sub
mov
fwait
cmp
aas
xor
push
inc
pop
push
outsb
dec
mov
push
dec
add
aam
dec
lret
insb
popf
fmul
mov
bound
mov
in
dec
leave
in
repz
dec
sbb
and
loop
xchg
xor
xchg
jge
xor
mull
push
jo
imul
das
ss
pop
xor
idivl
mov
mov
xor
popa
fsubs
cmp
cmp
cmp
aas
stc
loop
loop
into
cmc
sahf
xchg
data16
lea
mov
pusha
call
mov
cmpsl
xchg
mov
cli
mov
sub
inc
push
iret
pop
ret
pop
xchg
mov
scas
pop
aad
push
ficoms
and
stos
sub
cmp
adc
in
pop
int
and
jae
inc
adc
push
push
int
divb
xchg
push
xchg
jb
mov
push
and
fs
and
cmp
test
shr
jne
insb
cmc
loope
inc
fstl
mov
lods
mov
and
aam
push
lds
scas
push
outsb
call
add
ljmp
mulb
mov
jg
into
cld
test
neg
pop
or
ss
stos
rcrb
or
adc
cmp
cmp
into
test
jg
lods
pop
inc
push
movsl
call
dec
orl
jmp
jl
sbb
shlb
es
push
jl
clc
out
xor
in
hlt
cmp
jb
push
sub
push
xor
aad
push
adc
mov
sbb
in
repz
xchg
pop
mov
mov
ljmp
xor
arpl
jmp
dec
sub
in
xchg
mov
orb
pushf
cmpsb
insl
jns
xchg
insl
fldcw
pusha
and
ret
movsl
enter
xor
xor
cmp
jg
fsubrs
pop
pusha
xchg
push
mull
jno
pop
jmp
add
lods
jae
push
clc
aas
or
push
mov
push
or
mov
add
push
pop
popf
cmp
inc
sub
add
pop
push
and
ret
shll
mov
icebp
decb
jmp
lock
or
mov
jb
or
pop
xlat
je
inc
vpmaxub
aad
pop
pcmpeqw
inc
daa
jae
jle
frstor
cmp
push
push
out
sarb
add
jo
sbb
mov
xchg
ficoml
add
ds
push
popa
into
cmp
push
sub
xchg
inc
insb
fisubrs
cmp
adc
sti
jne
mov
sbb
pusha
in
clc
mov
jp
push
sbb
lret
mov
loop
imul
push
jmp
sub
ja
mov
jns
adc
ljmp
jmp
or
pop
push
cmp
clc
push
into
not
fwait
sub
shl
push
js
jecxz
cmp
in
insb
sti
shrl
or
cmp
test
sbb
push
test
or
aam
push
js
call
xchg
push
sub
fadd
aaa
inc
leave
cld
sahf
insb
pop
inc
out
rcll
dec
adc
sbb
dec
cmp
sub
test
pop
cs
jmp
pusha
icebp
mov
xchg
in
das
and
test
sub
or
push
int3
incb
jne
mov
cmp
or
fnstsw
adc
jo
inc
sbb
fsubrp
and
push
mov
mov
std
jmp
in
xor
xchg
add
mov
cld
test
mov
lea
xchg
add
push
shrb
jo
rcrb
sub
popl
lods
xchg
dec
inc
adc
into
dec
push
ss
or
cmp
cld
aad
add
in
out
xchg
mov
pop
and
push
jecxz
int
push
call
sub
pop
into
xchg
lea
sbb
into
daa
pushf
leave
dec
stos
out
andl
movsb
mov
cmp
sbb
rol
imul
inc
pop
push
fs
cwtl
jmp
cld
hlt
test
xchg
xor
inc
mov
jecxz
nop
ljmp
add
xlat
outsl
test
add
daa
imul
mov
jnp
and
sbb
add
add
orl
adc
ja
arpl
or
jmp
cltd
mov
fwait
mov
dec
jmp
call
leave
push
mov
push
xor
or
ss
in
cld
pop
lods
cmpb
push
pushl
js
xchg
or
mov
jns
addl
inc
in
loopne
or
and
xchg
data16
bound
bnd
data16
imul
jge
cmc
cmc
xchg
jge
stos
mov
enter
cs
ficoms
lea
pop
mov
or
adc
xchg
cld
jl
pop
addb
inc
adc
mov
mov
mov
adc
loopne
pop
jo
mov
mov
mov
dec
and
sbb
aas
popa
pop
push
loope
sub
test
xchg
jns
test
stos
add
dec
or
loop
test
push
adc
mov
aas
inc
int3
hlt
sub
aaa
and
cmpsl
sub
fs
and
dec
lret
add
mov
pop
enter
scas
add
test
add
sub
into
add
and
push
add
push
adc
insl
push
imul
mov
lock
cmpsl
mov
mov
or
cmp
adc
ja
ss
cmc
aas
aad
jle
je
cmpsb
mov
add
stos
xor
sub
pop
scas
lret
andb
cmpsl
push
leave
fmulp
mov
and
pop
mov
gs
sbb
xor
insl
les
pop
xchg
xchg
in
cmp
sub
orb
test
or
arpl
movl
cmp
fs
pop
data16
xor
mov
cmp
mov
cs
add
mov
inc
mov
hlt
dec
frstor
ja
xchg
and
mov
aad
sbb
daa
lock
add
sbb
xchg
pushf
cmp
xor
test
mov
mov
push
mov
or
nop
ljmp
pop
popa
stos
push
dec
add
add
test
js
std
in
mov
ds
mov
add
lea
sahf
pop
sbb
sar
jno
xlat
and
inc
jle
iret
and
xchg
mov
stos
cmp
add
xchg
inc
pop
xchg
xchg
jecxz
in
test
jo
xchg
sub
mov
mov
out
sbb
stc
push
inc
loop
mov
lods
xchg
xchg
pop
and
outsb
mov
das
add
out
push
out
pop
pop
mov
lcall
sbbb
push
dec
cltd
ljmp
pushf
fcoms
jg
negl
lods
xor
loop
int3
or
push
cld
adc
adcl
insl
mov
addb
lea
pop
push
test
or
dec
rol
push
flds
mov
jo
add
jnp
mul
push
mov
adcb
mov
push
and
pushf
inc
fs
mov
arpl
nop
pop
fildll
fs
sbb
stos
out
xchg
mov
in
fmulp
pop
xchg
jns
or
imul
in
into
add
and
pop
pop
and
aad
popf
pop
ja
xor
mov
insl
pop
ja
ja
jae
scas
or
jo
out
dec
ret
jmp
adc
jb
dec
pop
jecxz
sbb
cmpb
hlt
inc
out
dec
lds
mov
xlat
jo
push
and
dec
out
rorb
pop
mov
loopne
pop
in
jp
jnp
ret
dec
out
inc
or
mov
pop
cltd
xchg
ja
call
xor
cmpl
jnp
insb
popf
and
test
decl
negb
cmp
into
and
xchg
out
ljmp
jo
mov
lcall
data16
out
insb
push
mov
loope
cmc
mov
pop
inc
jno
das
ret
jbe
aas
daa
and
imul
xor
push
cs
lahf
xor
in
xchg
jp
fwait
push
pop
sub
mov
imul
lds
pop
jmp
test
fmul
jno
mov
jecxz
in
mov
dec
and
flds
out
xor
imul
icebp
repnz
xchg
scas
movsl
imul
into
mov
cmpl
pop
lods
adc
or
inc
pushf
lret
inc
lds
inc
in
sahf
mov
popa
aam
insl
push
mov
jl
out
inc
jnp
mov
xchg
fiaddl
sub
xchg
je
test
jge
roll
push
daa
aas
and
mov
andb
mov
cmp
add
mov
sub
push
add
je
cmpl
insl
jns
cli
add
inc
sahf
rcrl
mov
xor
dec
cmc
scas
ss
mov
jg
lods
mov
xchg
repnz
inc
xor
jl
mov
adc
cmp
mov
xorl
xchg
mov
sbb
jno
rcll
mov
cwtl
clc
imul
lods
cmpsb
shl
sbb
xchg
insl
adc
xor
faddl
leave
call
filds
jnp
jbe
sti
push
aam
sbb
push
hlt
fcoms
lods
popa
xchg
adc
xchg
or
lea
loopne
adc
rclb
adc
insb
rcr
add
fsub
imul
imul
out
add
lahf
aam
jno
cmp
test
adc
lods
cli
les
aam
add
mov
mov
xchg
xchg
adc
insl
movsb
out
push
cmp
repnz
jae
paddw
inc
jae,pn
mov
push
movsl
xchg
mov
mov
movl
fnstcw
xchg
mov
mov
int3
daa
and
inc
and
nop
xor
mov
or
xor
xor
and
cmc
push
sub
adc
test
xor
mov
xchg
montmul
cmpsb
cmpl
popf
and
fbstp
in
scas
call
clc
jle
adc
inc
dec
popa
sbb
int3
lock
in
jae
aaa
leave
pop
imul
sbb
inc
adc
xor
adc
cmp
nop
xchg
xchg
aam
sbb
mov
stc
jl
loope
mov
sbb
das
mov
test
dec
repz
addr16
dec
add
inc
mov
jl
xorl
push
sub
scas
mov
push
imul
imul
adc
js
dec
inc
lcall
ret
out
rorb
xchg
icebp
push
or
ss
mov
ret
push
inc
sti
into
adc
or
aam
fistps
add
inc
sbb
jns
push
inc
xchg
movsb
int3
iret
mov
jp
mov
fnstenv
imul
xchg
call
jl
fs
popf
sti
das
jbe
std
sbb
mov
xor
fdivl
ja
mov
cli
subb
sarb
mov
mov
in
lret
mov
adc
ss
sbb
or
cmpsb
in
leave
dec
cmc
cmpsl
sub
mov
jnp
adc
xor
mov
jnp
and
or
iret
jo
fiadds
inc
sub
pop
jp
push
mul
push
mov
cmp
xchg
nop
ja
pop
out
cld
or
imul
xchg
stos
int3
or
testb
dec
mov
push
fdivp
andl
cltd
mov
xor
mov
pop
out
mov
lret
jp
outsl
loopne
stos
outsb
and
popf
jae
bound
push
sti
jae
push
divb
cmp
xchg
mov
ljmp
add
es
test
fs
out
sbb
in
xor
mov
jns
sbb
inc
dec
mov
lcall
jne
jmp
xchg
dec
aam
cmp
popa
mov
imulb
sbbb
mov
aaa
cltd
shrb
lret
repnz
cmp
sahf
loop
or
adc
add
sahf
fwait
aaa
dec
loope
lds
pop
mov
fwait
pop
xchg
repz
sbb
test
xlat
std
addr16
push
rclb
in
jle
xor
daa
xchg
mul
pushl
pop
push
adc
push
dec
xchg
ficompl
and
mov
dec
pop
fldl
push
jle
psubq
adc
and
nop
and
lods
pop
mov
ja
test
mov
sbb
mulb
outsb
mov
fisttpll
movsb
lock
les
clc
fdivrl
mov
jle
sub
movsb
inc
addr16
pop
mov
add
jg
js
adc
or
subb
add
cmp
add
fdivl
mov
mov
xchg
iret
mov
imul
imul
dec
jmp
adc
lods
clc
pop
xchg
sarb
xor
sbb
lods
aas
int
loope
pop
push
jl
cltd
divl
pop
enter
push
std
rolb
pop
lcall
jo
pop
rorl
pusha
in
imul
and
fwait
pop
jo
popf
pop
jbe
dec
mov
inc
and
pop
addl
mov
push
lret
int3
and
push
add
inc
mov
fxch
fstpt
imul
addr16
mov
std
pop
dec
out
fs
xlat
stos
aaa
lret
cmp
cltd
adc
movsl
push
push
ds
cmc
push
mov
jmp
push
mov
out
mov
dec
push
xor
inc
jb
aas
pop
test
xor
jb
scas
ljmp
mov
mov
mov
clc
add
mov
cmp
pop
pushf
cmpxchg
add
xlat
xor
insl
add
mov
mov
sub
outsb
insl
fnstcw
stc
pusha
or
sbb
pop
sbb
add
xchg
test
push
add
inc
nop
xor
fldcw
xor
add
xchg
addb
fmuls
jno
in
cltd
pop
jl
pop
xchg
jl
lds
int3
pop
inc
std
push
lret
ret
mov
jl
cmpsb
mov
sbb
lods
pop
adc
and
sbb
call
sbb
lods
xorb
sbb
out
cmp
add
jb
jle
or
xchg
cs
les
pop
mov
outsl
fsubs
nop
ljmp
jmp
push
pop
pop
push
fs
stc
sbb
jge
ljmp
fs
xlat
cmpsl
std
mov
add
xor
push
pop
test
cmpsl
push
rcll
mov
cmc
cmp
mov
es
fsubrl
add
mov
ss
and
cmpsb
sbb
bound
dec
negb
cmc
add
aas
adcl
fs
pusha
pop
rclb
jg
fcomps
mov
pop
xchg
mov
cmp
in
jbe
push
insb
add
lahf
sub
xlat
inc
lcall
mov
lret
push
loop
adc
xchg
mov
ja
inc
insb
add
arpl
push
jmp
xchg
inc
stos
sbb
dec
add
clc
mov
nop
test
push
cmp
mul
js
jno
int3
sub
sahf
inc
gs
sbb
sbb
into
loopne
push
sub
and
out
xchg
inc
lret
pop
pop
int
inc
add
and
leave
sti
xchg
cmc
popf
push
sub
mov
adc
xchg
adc
xlat
loope
stc
mov
xlat
aad
xchg
ffree
shl
aad
push
adc
pop
cmpsl
jge
sub
mov
mov
xor
mov
leave
pop
push
mov
lock
jbe
shl
push
sbb
cli
mov
mov
or
jb
pop
jle
movsl
rcl
outsl
iret
ret
dec
in
out
xchg
lret
div
sbb
out
add
jo
mov
in
push
pop
stc
int3
test
push
xor
cmp
mov
cwtl
xchg
jbe
stc
dec
fwait
and
mov
movsb
ret
popl
lds
xlat
mov
sbb
icebp
or
mov
fsubl
scas
popa
xchg
pop
add
orl
stc
aas
inc
imul
int
jne
inc
popa
mov
sbb
sbb
mov
jl
fmuls
iret
push
inc
lods
cld
dec
call
neg
outsl
fadd
mov
cli
push
fiadds
pop
call
xchg
xor
lods
or
jge
addr16
flds
cmp
push
jmp
imulb
pop
test
fsubs
test
movsl
pop
push
icebp
cmp
sub
push
jb
mov
push
or
adc
lods
cmpsb
jne
add
hlt
in
movsb
sbb
arpl
sub
arpl
movsl
subl
mov
xchg
aaa
mov
imul
int
sbb
dec
xchg
mov
push
hlt
cmc
jl
movsl
pop
cmpsl
scas
cmp
sahf
push
push
std
orb
mov
push
fdivl
mov
xchg
outsb
icebp
and
js
sbb
adc
push
iret
ds
dec
loope
ljmp
imul
scas
fwait
mov
or
aas
inc
int3
jbe
iret
jmp
ret
mov
add
sbb
dec
fs
inc
shrl
adc
mov
mov
test
adc
lahf
or
xchg
sbb
mov
push
outsb
inc
imul
xor
call
push
push
loop
xchg
lcall
dec
test
or
sbb
push
pusha
insb
jo
dec
and
movsb
inc
in
out
int3
lock
lret
sbb
cltd
btc
decl
popf
xlat
push
aas
nop
in
sub
mov
xor
or
insl
xchg
push
popf
and
incb
leave
xchg
mov
add
es
leave
call
insb
sub
in
xchg
movsl
mov
psllq
cwtl
fidivrs
lock
xchg
arpl
lcall
mov
and
pop
aas
loop
test
stos
push
pop
les
ljmp
fs
cmpsl
push
mov
ds
and
jle
mov
push
sub
cwtl
mov
sub
mov
mov
out
push
jg
xor
out
xchg
pop
add
fs
mov
cmpsl
movsl
std
push
push
int3
dec
dec
into
mov
lahf
les
mov
rcrb
mov
shrl
add
mov
xor
xlat
jns
mov
push
jb
sbb
add
pop
and
xchg
lret
cltd
mov
popa
or
ss
push
les
sub
fldcw
xor
xor
xor
stc
xchg
addr16
inc
outsl
jb
mov
adc
sub
push
jmp
xchg
mov
xchg
inc
sahf
push
xchg
dec
jne
ja
sbb
ja
and
add
xchg
lahf
shlb
cmp
cmpsb
push
adc
push
pop
scas
dec
xchg
cwtl
lret
aam
shrb
idivb
jmp
push
or
push
stc
ljmp
mov
aas
das
adc
cmpsl
movsb
push
gs
or
pop
mov
sbb
fistpl
call
cmp
dec
sub
sbb
xchg
dec
pop
jb
ret
shll
lret
sub
push
popf
sbb
nop
ret
shrb
pop
jno
ret
dec
jbe
pop
dec
xor
add
imul
pop
sar
sbb
mov
add
add
jl
jnp
stos
out
inc
adc
inc
les
mov
adc
stos
leave
adc
sbb
pop
sbb
sbb
pop
fdivs
pop
dec
les
cmp
hlt
xchg
mov
sbb
xchg
mov
jl
cli
cwtl
rcr
mov
add
rol
mov
mov
inc
mov
imul
mov
dec
clc
mov
shl
pop
imul
fadd
orl
and
test
int3
push
pop
add
addl
fisubl
dec
cmp
mov
dec
pop
stos
fdivrl
adc
pop
mov
pop
sub
mov
fcomp
jg
sbb
xor
mov
mov
fwait
cltd
cmpsl
stc
and
adc
adc
and
les
ret
cmp
or
mov
push
cmp
or
jae
sbb
or
hlt
mov
repnz
imul
pop
xchg
popl
xor
mov
inc
insl
shrl
fbstp
adc
ds
inc
xchg
cmp
cmpsl
inc
pop
test
test
enter
push
pop
out
cmpsb
sub
imul
lahf
xchg
pusha
sti
imul
insb
dec
stc
xchg
mov
aas
add
jmp
das
aaa
mov
push
lock
mulb
es
push
lods
cmp
mov
cld
lret
sub
cwtl
push
pop
loop
data16
dec
mov
in
scas
outsl
pop
rclb
mov
lret
faddl
pop
mov
xchg
out
cmp
loopne
jae
push
dec
xchg
jp
daa
movsl
and
insb
cwtl
popf
jp
mov
xchg
fisubrs
xchg
out
push
mov
fistl
pop
cmp
addr16
lods
fbld
add
xor
test
cwtl
dec
adc
ss
arpl
or
push
or
test
cmp
insb
cltd
jg
inc
or
fucomi
xchg
sbb
inc
in
cmp
roll
ljmp
addb
out
push
ja
mov
mov
call
mov
popa
fists
xor
mov
rol
sub
pop
lods
int
jne
filds
pusha
push
cld
mov
xchg
jle
lcall
rcr
in
dec
cmc
outsl
sub
pusha
aas
sbb
repz
imulb
hlt
outsl
out
in
mov
fs
testb
jnp
aas
es
bound
call
arpl
enter
pop
das
push
loope
push
bound
and
jb
data16
es
mov
shr
jbe
mov
sbb
shlb
es
scas
jl
push
cld
shll
cmpsb
xlat
jo
in
sub
int
mov
push
in
sub
ret
popw
fistl
mov
sbb
fbstp
jo
jl
cmp
add
jge
add
loopne
stc
stos
mov
das
dec
lret
xchg
incl
mov
test
add
call
fmul
pushf
into
out
push
mov
pop
lret
pusha
out
sub
lock
pop
arpl
push
cld
mov
push
sti
dec
mov
fwait
stos
idiv
rorb
fnstenv
lds
mov
cmp
lock
mov
das
out
pop
movsb
cmp
dec
pushf
rcrl
testl
pop
lret
jmp
dec
insl
dec
lcall
inc
or
jb
mov
fs
adc
xchg
push
push
ds
ja
cmp
int3
mov
xorb
scas
js
aaa
pop
mov
pop
pop
add
sub
enter
loope
sub
mov
sbb
fs
gs
push
push
mov
sbb
jns
pop
xor
test
add
sarb
shl
pop
adc
scas
leave
je
xchg
scas
adc
outsl
push
sub
sbb
fsubp
push
jg
push
daa
int3
dec
pop
cmp
iret
rcr
popa
out
sbb
rcl
in
add
adc
jb
sbb
cwtl
pop
repnz
cld
ret
pop
xchg
inc
xchg
or
ljmp
cmp
sbb
push
fmul
dec
add
xchg
mov
mov
mov
ljmp
mov
or
popf
sbb
sub
ret
nop
ret
shlb
dec
jns
add
test
xchg
rol
inc
repnz
and
mov
testl
es
stos
js
mov
or
int3
aas
sbb
add
cmp
lret
jno
add
push
jp
lock
dec
xchg
sbbb
sub
mov
sbb
out
mov
ljmp
dec
mov
fsts
xchg
fisubs
adc
add
dec
out
aaa
adc
mov
fucom
sti
xchg
xor
mov
dec
pop
leave
insb
lahf
arpl
dec
mov
mov
xchg
xlat
jge
adc
push
sarb
fcoml
xchg
outsl
mov
out
test
push
mov
pop
and
cli
ds
sub
ljmp
dec
hlt
arpl
xlat
jo
mov
int
xchg
decb
jns
dec
nop
xor
scas
and
loopne
loope
in
out
sbb
lcall
push
sahf
cmp
or
rorl
pushf
mov
jmp
call
pop
and
cmp
adcl
mov
adc
dec
xchg
jns
mov
lcall
jl
push
fwait
xchg
in
arpl
nop
and
mov
lds
stc
inc
add
fucom
mov
sub
inc
push
pop
int3
fisttpl
aas
test
mov
mov
in
adc
int3
loopne
or
fidivrs
pop
jb
xchg
sarl
add
fidivs
out
mov
and
pop
in
sbb
xchg
inc
int
stc
push
pop
aaa
mov
jge
adc
push
test
aam
mov
test
imul
pop
in
push
fnsave
adc
xchg
fmull
sub
pushl
lret
jg
dec
lahf
jae
dec
mov
dec
pushf
add
mov
pop
arpl
arpl
pop
out
xor
out
adcb
cmp
shl
test
jno
pop
je
inc
sti
mov
pop
mov
dec
rcrb
dec
mov
cmp
ljmp
fwait
out
cmc
sub
out
imul
call
jle
std
shll
push
add
dec
mov
push
fstpt
xchg
jl
int3
cmp
aam
pushf
xchg
jecxz
mov
push
out
mov
out
and
mov
notl
xchg
add
mov
mov
mov
cmp
movsb
mov
add
add
mov
daa
imul
mov
jae
out
stc
push
jge
shll
loope
pop
bnd
xchg
mov
sub
or
add
imul
mov
popf
std
jbe
repz
mov
fmull
imul
mov
cmp
sub
adcl
add
fadd
insb
repz
dec
je
pop
cmpsb
mov
jecxz
pop
pop
sub
popa
adc
rorl
mov
push
addr16
push
idivb
fcomip
pop
cmp
jg
cs
sti
into
sub
inc
jg
pop
jae
bound
stos
adc
js
push
fmull
sbb
mov
mov
sub
xor
loop
repnz
inc
test
jnp
push
mov
pop
xchg
mov
test
je
shl
cs
out
lods
jmp
sbb
jp
xchg
pop
xorb
push
inc
mov
rcl
nop
sub
and
aas
fs
push
in
mov
pusha
lret
add
imul
sbb
iret
shll
jmp
jbe
cmp
cmpsl
cmp
xchg
test
adc
ficompl
sti
or
pop
push
js
cld
jl
stos
mov
push
aas
lea
repz
xlat
sbb
sub
mov
pop
sub
add
jmp
insl
jp
add
lret
sahf
test
ljmp
test
xlat
dec
jb
jo
cs
mov
out
pop
stos
inc
cmpl
xchg
popf
or
sub
pop
pusha
and
sbb
pusha
mov
loop
hlt
add
cmp
out
pop
pushf
cltd
push
and
add
pop
add
jmp
lods
repz
jg
push
pop
dec
imul
out
sahf
or
in
push
pop
sub
lds
jnp
or
arpl
sub
dec
movsl
inc
in
fcmovnb
inc
mov
stos
pop
add
lcall
outsl
aaa
in
sub
je
dec
bound
xchg
mov
pop
outsl
dec
faddl
jge
and
pop
fwait
mov
jnp
add
push
jae
push
xor
and
jmp
jnp
push
jecxz
inc
mov
xor
fxch
add
jnp
test
ljmp
fwait
adc
aas
mov
xor
add
jecxz
int3
adc
add
mov
cmc
jp
mov
pop
adc
hlt
pop
dec
bound
sub
ljmp
stc
insb
repnz
jbe
xchg
cs
lea
jne
movsl
cmp
loop
movsb
or
ret
clc
int3
lea
add
dec
push
pop
mov
inc
dec
in
loope
arpl
movsl
shrl
icebp
dec
or
inc
ret
incl
out
ret
popa
ljmp
por
pop
push
inc
jbe
leave
add
out
pushl
pop
inc
aaa
int3
dec
cmp
sub
mov
lret
sbb
mov
pushf
outsb
popf
or
rcr
repnz
mov
addl
fildll
decb
test
sub
int3
inc
add
push
sub
dec
jl
in
push
mov
imul
out
mov
arpl
aam
shlb
xchg
stos
mov
inc
jle
lds
rorb
test
sub
push
cltd
dec
pop
add
xor
ja
shl
sti
pop
jecxz
mov
mov
mov
inc
xor
xor
adc
fimuls
xor
inc
fistps
add
repnz
push
leave
inc
insb
jmp
inc
xor
lea
push
movsb
cmpsl
pop
or
aam
sbb
pop
jg
dec
push
fbld
mov
repnz
pushf
loopne
popl
testb
inc
dec
popa
cmp
xchg
cli
test
push
stos
mov
icebp
repnz
and
mov
sahf
mov
xor
arpl
stc
lret
cwtl
aam
aam
icebp
mov
mov
scas
rolb
pop
and
rcll
cmpsb
in
jge
xchg
xor
mov
push
pop
and
mov
in
insl
das
push
fcompl
int3
cwtl
jnp
or
add
imul
dec
jmp
iret
rol
mov
std
leave
xchg
imul
sbb
jo
int
adc
mov
add
pusha
pop
in
mov
in
mov
loope
or
push
icebp
pop
jg
dec
jo
jb
or
in
jp
imul
adc
test
jnp
inc
xchg
aad
hlt
js
jge
push
cld
daa
ss
cmpsl
pop
ss
loop
jo
xor
push
sbb
or
jo
pop
leave
ja
xlat
or
ret
jno
adc
jae
pop
or
and
push
sbb
hlt
dec
push
add
call
push
xor
scas
jnp
push
cld
add
pop
pop
iret
imul
pop
and
outsb
in
bound
mov
lea
xor
test
mov
xor
sbb
call
jmp
ds
pop
rclb
pop
loope
jb
aad
add
inc
out
mov
inc
scas
or
and
fpatan
mov
dec
lea
cmpsb
and
and
shrw
pop
int3
gs
inc
loope
add
enter
mov
and
inc
shlb
mov
dec
ja
outsb
fstps
hlt
in
push
dec
cmp
fstl
nop
push
popf
mov
je
adc
jbe
aam
addl
xchg
cld
adc
imul
jmp
shlb
arpl
dec
pop
jmp
loop
mov
and
xchg
pop
outsl
in
pop
lods
addr16
or
cmp
aaa
push
jbe
sub
dec
push
xor
aad
movsb
sbb
pop
jg
sbb
stc
add
xchg
stos
cwtl
pop
cmpsb
ss
pop
fsubl
loopne
divb
cld
ja
push
mulb
lods
mov
dec
out
sub
dec
inc
test
cmp
jb
mov
jno
mov
and
inc
xchg
mov
xchg
pusha
pop
cmpsb
add
pop
pop
pop
cmp
jb
leave
outsl
cmpsl
and
stc
or
scas
dec
mov
sub
lahf
cmp
stos
loop
or
je
repz
ja
xchg
cmp
notl
mov
add
outsl
das
fs
nop
insl
in
cmc
fnstenv
mov
data16
scas
sbb
pop
mov
pop
or
sub
push
mov
mov
pop
inc
sahf
sub
ljmp
xor
mov
fs
xchg
mov
hlt
arpl
dec
fbld
pop
jae
sub
and
hlt
fcomp
scas
loop
jbe
mov
mov
out
arpl
subb
and
adc
sarb
dec
sub
scas
mov
ss
daa
or
jl
cwtl
add
add
mov
mov
pop
or
pop
add
iret
jg
and
and
mov
push
fdivs
mov
pusha
pop
pop
in
lret
sub
xor
jno
or
lcall
mov
jbe
lret
sbb
sbb
lahf
in
cld
dec
or
ret
pop
imul
cmp
out
test
roll
and
mov
mov
add
dec
and
pop
inc
notb
xchg
add
scas
fcmove
inc
dec
adc
mov
push
cmp
sub
sbb
cmpsl
out
pop
inc
pop
cli
lcall
mov
xchg
ja
std
repz
xor
popa
into
orb
pop
inc
in
push
xor
faddl
scas
add
mov
pushf
notl
stc
js
sub
mov
lock
ret
push
movsl
enter
ficoml
insl
lea
add
pop
rcll
sbbb
sub
push
xchg
shll
or
in
pop
fisubs
dec
int
adc
mov
mov
sti
or
test
jge
pushf
into
or
lea
lea
xchg
and
inc
inc
adc
stc
and
and
shrl
jmp
daa
pushf
jno
cmp
fmul
repnz
push
iret
shr
lret
lods
mov
jmp
mov
jecxz
aaa
adc
es
cmpsl
stc
lock
cs
mov
and
or
loope
or
adcb
jge
into
lret
adc
xchg
fsubs
leave
lds
mov
mov
dec
mov
mov
bound
test
mov
jl
inc
out
push
xchg
cmp
pusha
jne
in
pop
fdivrs
inc
jb
insb
push
jb
pop
insb
repnz
adc
jnp
in
stos
dec
movsb
mov
lods
orb
popf
shrl
rcrl
bnd
mov
adc
push
jmp
cld
loopne
sbb
inc
jle
adc
shlb
je
xchg
xchg
dec
sub
mov
fwait
jne
movsl
xor
lahf
fisttps
test
or
cld
shlb
fs
jnp
dec
sbb
xchg
fwait
dec
aaa
xchg
lods
ja
sarb
push
clc
fmuls
movnti
jmp
cmp
mov
ret
jmp
cmpl
stc
sarb
addr16
jae
or
in
lock
ret
cmpsb
cmp
shll
and
xor
cltd
and
xor
ret
mov
mov
test
dec
cmp
ljmp
popa
and
jnp
loopne
test
dec
aad
mov
xor
popf
hlt
fimuls
enter
addr16
fsub
push
sub
jmp
xchg
and
xor
lods
sbb
xchg
repz
inc
jb
inc
clc
cwtl
xchg
jp
out
add
stos
sbb
xchg
jmp
outsl
jle
inc
jp
nop
fwait
push
or
mov
lds
jle
add
xlat
imul
popf
sub
dec
nop
mov
sahf
push
pop
or
shl
jns
inc
jae
out
mov
in
fstl
sarb
mov
jnp
lret
insl
mov
or
cmp
sub
shll
movq
aaa
aam
mov
nop
mov
cmpsb
aaa
stos
lcall
int3
pop
ror
push
into
enter
out
add
bound
xchg
stc
sub
pop
jns
mov
mov
sub
je
nop
add
or
cmp
add
push
loop
out
xchg
inc
cs
iret
orb
inc
das
enter
dec
cmpl
in
scas
cmp
mov
sub
imul
or
cmp
imull
aas
or
cs
pop
inc
cltd
imul
xor
sub
loop
sub
mov
loope
xor
cs
push
das
cmp
push
je
lock
dec
fldz
test
nop
pop
ret
mov
mov
sub
lods
in
daa
pop
pop
xor
fimuls
shlb
add
clc
or
fcomi
clc
fdivr
pop
push
and
xor
xor
sub
pop
fstl
sbb
pop
jecxz,pn
lcall
cli
data16
jns
jp
aam
lahf
into
sbb
cmp
fwait
call
or
jne
iret
and
xor
mov
js
in
out
xchg
adc
xchg
clc
push
adc
in
cmp
and
aam
dec
mov
sbb
leave
sub
xchg
sbb
xchg
mov
and
jmp
mov
loopne
inc
jecxz
in
mov
insl
popa
test
cmpsl
push
mov
pushf
jbe
sub
jnp
or
repz
add
mov
push
jnp
inc
jmp
out
inc
sti
push
rcrb
mov
and
test
mov
or
adc
ret
mov
ja
and
ss
mov
ljmp
inc
outsl
push
jae
shlb
outsb
mov
stc
push
add
push
push
push
in
mov
popa
sbb
adc
lret
mov
jecxz
inc
subl
fwait
dec
stc
nop
sub
mov
dec
mov
mov
push
neg
push
jb,pn
out
ljmp
cmpb
mov
mov
jecxz
fsub
add
rcll
push
sbb
jae
xchg
push
lcall
sub
sbb
sti
imul
mov
loope
data16
mov
cmc
pop
push
pop
mov
lea
inc
dec
test
push
jno
pop
pop
inc
push
lods
in
xchg
jnp
jb
popf
mov
cmp
or
rcrl
std
mov
cli
push
mov
ret
inc
and
outsl
repz
or
pop
ds
cmp
mov
or
addr16
xchg
sahf
scas
and
xchg
jns
mov
and
sbb
pop
or
inc
out
push
test
xchg
push
mov
out
adc
test
jle
into
adc
dec
xchg
loope
lds
add
std
out
mov
dec
test
jne
mov
popa
cmpl
cli
mov
icebp
mov
shlb
sbb
mov
push
dec
or
fninit
mov
mov
and
outsb
push
cmp
mov
cmp
icebp
xchg
or
out
dec
aam
mov
dec
inc
and
or
cltd
push
aam
add
jp
fwait
cmp
mov
sbb
mov
xor
aam
lret
push
in
add
add
test
sbb
add
add
pop
inc
sbb
jnp
lret
nop
out
shll
jbe
add
imul
mov
xor
sub
sbb
daa
insl
in
cmp
out
xchg
mov
test
inc
shll
inc
mulb
add
cmp
sarl
and
imul
and
scas
test
xchg
std
jmp
dec
imulb
cwtl
pushf
xor
or
xchg
dec
cmp
xchg
or
mov
cltd
mov
or
sbb
xchg
sub
mov
ja
int
pop
ljmp
jle
dec
jmp
incl
loop
out
or
mov
mov
mov
xchg
or
pop
cwtl
jns
cmp
push
push
inc
or
inc
pop
nop
test
cs
movsb
mov
in
inc
lods
dec
jmp
daa
popf
sarb
pop
cli
dec
jae
insb
rcrb
in
jl
mov
enter
pop
and
insb
sbb
sbb
movsb
js
cmc
xor
adcb
cmpsl
nop
xorl
shl
add
xchg
fadd
loop
sbb
testl
or
sub
cmp
and
movsl
fcomi
sbbl
mov
push
cmp
sarb
hlt
xlat
mov
stc
xchg
ret
fstl
shr
jmp
or
mov
pusha
fdivl
mov
dec
cmp
cli
mov
nop
adc
in
cmp
adc
scas
sbb
xchg
xchg
adc
push
sub
divb
mov
aam
push
es
sahf
mov
dec
daa
pusha
and
sarl
test
mov
mov
push
arpl
imul
add
mov
push
pop
outsb
inc
push
pop
arpl
pusha
xor
lock
orl
lretw
lock
mov
loope
ret
jo
mov
rcl
add
sub
cmpsb
movsl
push
movsb
jg
jp
inc
mov
in
jl
mov
and
mov
in
scas
xor
mov
mov
ret
test
fsubs
or
scas
pop
loope
lcall
hlt
jnp
loope
shrl
popf
adcl
popf
xchg
and
mov
xacquire
jbe
jb
adc
and
mov
cmp
scas
jl
and
aad
fwait
or
aaa
nop
stos
fldcw
test
add
aas
mov
loopne
jmp
push
xor
jb
lahf
mov
or
fsubr
mov
rorl
mov
dec
mov
adc
mov
test
int3
shl
pop
push
mov
fwait
int3
xchg
sbb
ret
std
aas
les
popa
lret
sub
sub
imul
cli
cmp
push
or
mov
ss
popa
ja
out
add
aam
mov
push
cld
std
sub
sub
jne
jb
in
les
pop
adc
and
stos
mov
xchg
enter
mov
cmc
int
subb
cmp
adc
push
ss
ret
sbb
jg
sti
inc
inc
hlt
mov
dec
inc
ljmp
mov
insb
fs
rolb
mov
and
dec
add
in
or
jbe
adc
out
sub
mov
fs
push
mov
loop
pushf
and
jecxz
cltd
int3
sbb
test
repnz
xchg
mov
das
cltd
sub
and
push
cld
dec
jp
pop
repnz
push
mov
mov
clc
fistpl
ret
outsb
mov
or
cwtl
clc
ljmp
inc
push
cmp
arpl
adc
ss
icebp
xchg
lock
pusha
sahf
das
cmp
inc
push
cld
lcall
or
or
les
or
out
bound
push
lods
pop
adcl
ds
cmpb
pop
dec
xchg
mov
out
mov
mov
sub
loope
addr16
push
lock
loop
fnstsw
enter
adc
addb
or
stc
xchg
hlt
test
adc
into
loopne
pop
sub
and
div
ret
out
dec
imul
xor
dec
pusha
xchg
in
pop
loope
sub
sahf
pop
mov
cmp
push
es
xor
inc
out
mov
inc
loopne
int
inc
js
hlt
fwait
adc
lock
lahf
mov
data16
push
sbb
rorl
in
jl
pop
or
aad
jge
nop
jp
filds
mov
xor
dec
xchg
mov
test
adc
sbb
mov
stos
dec
lea
dec
xchg
aam
not
stos
ror
test
adc
std
pop
jmp
pop
pop
push
adc
in
add
out
imul
hlt
insb
and
add
mov
fcomps
repnz
jo
xchg
adc
aas
pushf
add
cmp
dec
pusha
jmp
push
adc
push
lret
outsl
inc
sbb
es
sbb
mov
insb
lods
pusha
stos
push
adcb
jmp
sub
out
jecxz
or
repz
call
jns
popa
and
fsubrl
shr
popa
aam
xor
push
hlt
jb
add
faddl
or
add
sbb
jnp
sub
and
dec
or
sahf
out
adc
mov
xor
or
fimull
mov
mov
push
lds
push
cmpsb
outsb
out
or
in
jl
repnz
pop
leave
rcrb
addl
jns
mov
adc
out
lahf
xchg
test
in
bound
inc
pop
ret
movsl
mov
outsb
pushf
mov
call
sub
add
jl
fs
clc
sbb
es
adc
aas
pop
jl
loope
ss
out
fldt
lret
mov
inc
fdivrs
pop
rcll
add
adc
aaa
jae
mov
mov
add
inc
loope
pop
jbe
and
and
add
out
xor
jnp
jo
lods
mov
stos
into
cli
fdivrl
jno
mov
pop
inc
sub
mov
icebp
push
push
adc
push
data16
inc
dec
sbb
push
mov
movsb
popf
out
pop
in
dec
dec
mov
sar
cmpsl
jbe
dec
cmp
pop
add
pop
dec
cmp
and
clc
mov
in
pop
mov
sbb
inc
and
pop
nop
stos
pop
xlat
sub
ds
adc
xor
ds
mov
and
sbbb
jge
pop
dec
adc
push
sahf
jle
xor
repnz
daa
rolb
xchg
je
test
and
stos
inc
or
cli
xchg
xor
cli
in
lock
add
adc
call
inc
mov
push
mov
add
cmp
jnp
imul
and
mov
add
imul
lret
shlb
out
fildll
aaa
sbb
repz
mov
lret
lods
je
adc
mov
mov
and
mov
rcrb
sub
add
mov
or
inc
pop
pusha
iretw
xor
rolb
xchg
adc
lcall
mov
loop
xchg
mov
cltd
fcoml
pop
jnp
mov
idiv
mov
jmp
sarb
xchg
mov
pop
fxrstor
mov
jmp
mov
pop
mov
es
iret
icebp
dec
addr16
inc
sbb
mov
sub
jno
bound
sub
xorb
jge
lea
sahf
jo
rorb
mov
icebp
cwtl
dec
pop
push
rcll
cld
dec
lds
fmul
jl
nop
jne
lea
lret
mov
movsl
inc
imul
jns
repnz
push
sub
std
cmc
cmp
mov
mov
ds
adc
add
jp
jns
jg
lock
roll
test
loopne
pop
pop
adc
xchg
inc
or
int3
mov
pop
push
inc
negl
mov
outsl
das
shll
add
lahf
shrb
cwtl
out
mov
fmuls
cmp
loop
je
inc
fistpll
inc
loope
std
je
xchg
out
push
push
dec
sbb
imul
mov
cmpsb
jmp
and
imull
outsl
lds
inc
jecxz
xchg
test
popa
mov
data16
outsl
subb
inc
adc
stc
mov
pushf
fcomps
test
bound
ror
mov
iret
pop
notb
rclb
mov
scas
adc
aas
mov
jno
mov
shll
outsl
pop
test
mov
ljmp
push
cmc
cltd
stc
cmpsl
sbb
sbbb
jbe
popf
imul
movsb
fistpl
arpl
fs
xchg
or
fwait
lahf
mov
fsubr
add
add
jg
push
mov
sbb
cmc
jnp
mov
adc
jmp
xchg
mov
mov
test
and
dec
mov
sub
or
rcl
or
jns
movsb
xlat
icebp
inc
out
dec
lret
dec
pop
push
nop
andb
testb
hlt
test
and
mov
inc
adc
pop
or
cltd
call
jl
push
rcll
mov
ficoms
pop
cmpsl
xor
insl
and
aaa
orl
cwtl
mov
add
xor
jno
fstpt
fcoml
and
mov
lds
aas
cli
ret
aad
rcl
in
cmp
setns
pop
push
leave
xchg
test
dec
inc
jae
inc
adcl
jb
pop
test
inc
pusha
xchg
mov
loopne
and
fsubs
xor
leave
outsl
mov
cmpsb
stos
int3
aas
push
mov
scas
push
cmp
aad
jo
test
xor
pop
pop
lret
jg
xchg
mov
push
scas
push
hlt
cmp
ret
ficomps
repz
sub
fs
add
pop
mov
mov
or
arpl
je
insl
cmp
dec
jbe
xchg
sub
mov
pusha
inc
cs
lret
and
fs
add
dec
xor
jecxz
test
pop
flds
sbb
inc
xor
enter
lahf
scas
add
repnz
fldl
mov
fisttpl
sahf
push
lea
jecxz
testl
movsl
push
inc
xchg
lds
add
cmpsl
jmp
test
add
mov
pop
and
jmp
cmp
dec
mov
in
and
pop
inc
jae
in
ret
rclb
xchg
dec
xor
sti
sahf
jnp
stos
cmc
out
sti
xorl
insb
aas
repz
xorb
xchg
sbb
jle
xchg
inc
lods
cmp
push
inc
dec
hlt
mov
sbb
pop
mov
or
dec
rcrb
adc
movsb
sub
and
sbb
jns
lret
rorl
sub
popa
aam
push
xor
push
mov
xchg
jg
into
lret
mov
subl
std
scas
sahf
sti
push
shrb
enter
js
pop
pop
dec
mov
inc
insl
sub
into
cld
inc
jnp
xchg
subps
cwtl
fdivrl
cli
int3
out
add
sub
jl
jle
andl
or
mov
daa
push
cmp
mov
imul
jae
cli
lahf
cmpsl
and
cmovge
stos
fstpl
data16
stc
sysenter
mov
lock
ret
jo
jno
icebp
cmc
movsl
das
dec
fstl
jnp
ljmp
jl
pop
sahf
pushf
je
fisubrs
mov
mov
insl
iret
in
mov
push
bound
iret
iret
or
and
xchg
inc
js
jp
inc
sub
mov
jno
adc
out
sub
into
mov
aam
sub
jnp
fmulp
jp
mov
or
mov
sub
int3
push
insb
cmpsl
sub
pusha
loope
mov
out
xchg
push
pushf
enter
mov
or
inc
shrb
ds
xchg
rcrb
int3
mov
pop
mov
sbb
sahf
sbb
mov
stc
scas
lea
ss
sub
xchg
sti
jecxz
fsubr
adc
sub
xchg
jbe
aas
inc
std
mov
mov
add
insb
cmp
rcll
loopnew
xchg
out
test
inc
mov
add
aam
fnstenv
mov
mov
mov
jne
dec
cmc
or
pop
int3
jbe
outsl
mov
jnp
mov
or
xlat
mov
inc
popa
mov
test
sahf
adc
jle
out
cmp
xor
popf
mov
movsl
xchg
test
lea
mov
into
ss
pusha
mov
adc
je
lock
and
or
incl
cmp
cmpsb
mov
jb
orl
pop
out
insb
cli
ficoml
movsb
and
jle
ja
cmp
mov
cltd
mov
in
jle
cmc
and
push
sub
dec
pop
push
popf
enter
es
or
mov
xor
addb
dec
out
mov
inc
xor
sahf
repnz
es
ss
or
adc
add
mov
cwtl
or
push
push
ret
rorl
rcrb
outsl
xchg
in
nopl
fwait
in
push
addr16
dec
jp
imul
pmulhuw
out
cmp
fcoms
xor
mov
dec
mov
hlt
add
add
in
jp
jp
jnp
adc
cmc
imul
add
add
or
out
repnz
push
in
push
test
shrb
inc
sub
add
insb
mov
shlb
inc
lods
sahf
mov
add
adc
test
daa
push
bound
mov
pushf
das
out
ja
push
cmp
test
rcrb
xchg
fisubrs
sub
sub
pop
jnp
cs
mov
imul
sub
and
pop
seta
data16
lret
sub
jl
fdivr
push
cmpsb
pop
inc
mov
jge
or
dec
lret
cs
xchg
pop
ficoms
pop
lret
es
lret
loopne
std
push
test
xor
idivl
cmc
cmp
mov
xor
test
int
mov
cmc
in
push
and
rcll
or
mov
xor
push
lret
sbb
mov
mov
dec
mull
daa
mov
xchg
and
in
loope
inc
cmp
push
mov
dec
push
sub
stc
stos
push
enter
ss
lret
shll
jle
pop
push
jle
ljmp
add
mov
test
xor
repz
inc
cmp
xchg
in
comiss
pop
mov
stos
mov
fcomp
jno
das
lret
sbb
loop
mov
lock
xor
sahf
in
mov
stos
jb
out
aas
sti
cmpsb
ds
scas
sahf
inc
or
jae
les
cmpsl
or
sub
mov
push
lods
jo
adc
ror
in
int
dec
mov
dec
leave
out
or
aaa
mov
add
out
dec
or
xchg
sbb
push
pop
mov
call
pop
push
mov
mov
sub
in
push
test
sub
push
push
jae
stos
inc
sbb
pop
xchg
add
cmp
stos
and
xor
mov
push
aam
insb
fnstsw
test
rorl
fdivl
rorb
shlb
cmp
std
outsl
sub
pop
subl
fadds
dec
data16
and
jno
xchg
popl
outsb
insl
cli
int3
loope
iret
pop
mov
xchg
lods
insl
mov
sahf
in
aad
or
mov
xor
movsl
cmp
adc
outsl
add
aad
stc
fists
mov
pop
call
outsb
xor
jae
cmc
sbb
fwait
xchg
movl
push
and
je
loop
jae
fldl
mov
stos
adc
lcall
or
and
jecxz
cs
push
mov
inc
loope
sahf
lret
shl
std
in
add
pop
xor
fmul
or
pop
test
pop
jbe
stos
and
insl
hlt
sub
pushf
rorl
xchg
jnp
push
repnz
popf
xor
jns,pt
sbb
mov
lret
jmp
jecxz
sub
jmp
cltd
aam
popf
aam
fdivrs
mul
call
movsb
test
fs
mov
inc
ds
fisubrs
stos
mov
dec
jne
les
mov
sbb
cwtl
pop
inc
loopne
xchg
pop
or
aad
sub
lahf
lahf
jg
lds
out
cs
loope
icebp
sub
jns
add
sub
or
cmc
xor
test
jno
fisubrs
cld
incb
push
jbe
push
and
insl
out
popa
adc
out
mov
ret
pop
popa
add
cmp
add
inc
push
lret
xchg
lret
push
dec
and
inc
xor
inc
sub
outsb
xchg
xor
aaa
adc
xor
inc
out
pop
mov
push
mov
add
lret
jg
or
dec
popf
arpl
repnz
lods
sub
inc
push
loop
pop
sbb
cmp
mov
das
jle
neg
mov
inc
push
cmp
aad
sbb
add
mov
mov
add
sti
fbstp
or
fcmovb
cmpsl
addb
test
dec
push
mov
push
jl
daa
push
dec
insb
in
mov
adc
lock
in
mov
or
pop
or
and
jg
push
aad
mov
aaa
add
mov
sbb
aad
notl
push
mov
xor
loope
xor
jne
jnp
mov
test
pop
and
sahf
imul
das
cmp
pop
jnp
xchg
testb
mov
add
sub
xchg
add
ret
outsl
sbb
push
ret
push
leave
sub
cmpsl
and
movsb
in
ds
sbb
mov
sub
push
scas
pop
dec
fs
out
cmp
mov
aaa
stc
aad
push
enter
frstor
rorl
loopne
andb
shll
add
push
loopne
add
sub
dec
sbb
push
and
test
adc
push
xchg
push
pop
aam
sbb
jbe
pop
adc
pushf
inc
aam
inc
cmpsl
sub
mov
stos
push
sub
mov
std
mov
in
or
sbb
push
arpl
push
test
insb
sbb
call
imul
and
clc
dec
movsl
and
cmc
sbb
das
aas
movsl
punpckhbw
pop
jae
rcl
repz
cmp
pop
cmpsb
jmp
sub
inc
or
adc
cs
mov
mov
or
adc
and
inc
aad
mov
push
ss
inc
inc
and
js
xchg
jmp
cmp
loop
xchg
imul
xchg
sub
push
or
shlb
mov
inc
jno
mov
pop
leave
notw
pop
fmuls
xchg
xor
mov
and
loop
xchg
jns
lret
cli
inc
test
xchg
popa
stc
movsb
pop
ret
stos
icebp
xchg
pop
xlat
pusha
push
sub
in
or
aam
jle
mov
or
inc
je
jle
inc
push
daa
cmpsb
out
daa
outsl
mov
aas
jecxz
pop
aaa
jb
int3
xchg
clc
popf
push
push
sub
pop
aaa
mov
push
adc
iret
mov
add
add
xchg
jns
xchg
mov
daa
cmp
xor
call
adc
dec
mov
rcrb
mov
and
jne
in
and
dec
mov
pop
pop
sbb
mov
xor
adc
fwait
mov
push
sub
fcmovb
sub
inc
sub
xor
sub
xchg
add
es
aaa
sbb
pop
fiaddl
lods
pusha
mov
ret
or
pop
jle
fs
sub
pop
pop
xchg
sbb
push
mov
jb
push
pop
stos
mov
pop
xchg
cmpsb
setl
pop
dec
mov
ljmp
add
xchg
mov
sbb
add
imul
data16
xor
jmp
xor
xchg
repz
xor
push
shlb
int3
cmp
xchg
idivb
push
push
jg
sbb
mov
loopne
subl
jo
sub
in
dec
add
push
scas
dec
movsl
out
addr16
pop
bound
jg
xchg
pop
ficomps
mov
daa
call
cwtl
inc
or
sub
fisttps
mov
lods
and
pop
in
jae
sbb
movsl
andl
movsb
mov
push
dec
jl
fnclex
cmpsl
xor
cmp
xor
inc
data16
icebp
xchg
cmpsl
add
stos
sub
std
lea
repz
xchg
sti
lock
out
insl
shr
into
sbb
outsl
lcall
hlt
xchg
lcall
int
aad
ss
pop
aam
fmulp
aad
xlat
cli
cmp
jg
repz
dec
mov
add
sti
clc
cli
addr16
pop
jle
dec
mov
jge
mov
sub
mov
cli
lcall
loop
add
rcrl
xchg
std
mov
call
adc
jb
outsb
xor
clc
daa
ljmp
or
rcrb
aaa
pusha
jmp
loope
dec
mov
jb
xchg
dec
jb
scas
imul
dec
bound
add
fisttps
fisubs
int3
push
fimull
or
repnz
lahf
xor
mov
insl
xchg
ja
pop
dec
pop
bound
or
clc
sub
stos
xorl
mov
call
cmp
adc
clc
out
push
lea
sti
movsb
loopne
xchg
adc
in
test
dec
in
sarl
outsb
xor
imul
cmp
fiaddl
sbb
xchg
sub
mov
fsubl
dec
inc
fyl2xp1
popf
fwait
ds
push
sbb
cmp
lahf
out
in
add
xor
pop
pushf
push
jb
xor
xchg
push
movsb
cs
jae
jecxz
push
fidivrl
xor
out
push
sub
inc
mov
sub
inc
daa
jae
inc
inc
or
inc
aaa
push
movsl
stc
mov
cli
ret
imul
add
leave
xor
fs
aas
fs
mov
mov
dec
sub
int
pop
cmpsl
leave
sarb
dec
mov
rorl
add
and
addb
cmc
xchg
iret
add
jp
outsl
mov
pusha
loop
aas
or
and
xor
sbb
les
scas
cmp
addr16
or
shll
lret
clc
daa
loop
ret
int
mov
addl
push
push
clc
bound
dec
stos
add
out
pop
xrelease
loope
adc
dec
xchg
ficomps
repz
mull
inc
test
cmp
dec
test
cmp
inc
add
rcrb
and
pusha
xchg
jb
fsubs
movsl
sub
mov
int
cmc
es
pushf
sbbb
inc
scas
jb
and
lret
inc
cmpsl
xor
fmuls
in
mov
mov
xchg
push
push
pop
in
mov
push
es
jg
sar
out
or
ds
jbe
sub
mov
jo
jbe
aad
inc
pop
xchg
mov
pop
and
aam
mov
cmp
xor
xchg
cmp
movsb
scas
jl
cmp
add
popa
inc
test
lret
pop
test
and
std
pop
stos
jae
mov
sbb
xchg
pop
outsl
popa
es
movsl
xor
gs
out
gs
push
pop
push
sbb
mov
lcall
shld
xchg
ljmp
jnp
sbb
ljmp
imul
repnz
shrb
ljmp
jnp
sarb
push
mov
jg
xchg
stc
mov
mov
cmpsb
jb
fxam
dec
and
cmpsl
dec
popa
lret
mov
imul
sub
and
dec
mov
sarb
lcall
cltd
inc
test
stos
cmp
mov
pop
sete
add
mov
dec
ret
cmp
jns
lret
cmp
push
rcrb
xor
in
loop
pusha
into
or
movsl
jp
or
rclb
sbb
mov
mov
jo
add
jno
add
clc
or
xacquire
mov
mov
jg
fistps
jnp
jle
push
add
mov
repz
sub
rdpmc
or
clc
cmp
fistl
aaa
and
jns
lods
int3
adc
or
xor
and
sub
mov
adc
and
filds
sahf
xor
sbb
cmpsl
mov
ljmp
lods
jl
inc
or
inc
in
fidivrl
push
push
out
mull
std
xor
stos
pop
mov
sbb
mov
in
in
cmc
sbb
or
mov
daa
mov
sbb
cmpl
xor
xor
nop
dec
mov
xchg
shlb
push
scas
mov
loop
mov
push
xchg
sbb
int3
cmp
scas
adc
movsl
repz
lods
xchg
sbb
jb
test
bound
mov
hlt
loop
insl
movsb
adc
je
insl
xchg
xchg
popf
in
out
sbb
mov
test
xor
and
mov
mov
sub
mov
sarb
xlat
outsl
arpl
xchg
dec
outsl
cmp
pop
outsb
ljmp
add
xchg
pop
pop
mov
inc
cmpsb
int3
ret
lret
add
push
rclb
mov
push
fildll
cmova
push
pop
pop
sub
xor
das
and
popa
lret
mov
jmp
ja
aaa
pushl
mov
cwtl
inc
pop
push
stos
mov
nop
mov
mov
ljmp
and
popf
pop
in
xchg
cmp
dec
jbe
adc
es
sahf
mov
push
fndisi(8087
cmpsl
add
movsl
xchg
jo
jle
xchg
push
xor
ja
pop
clc
jno
sbb
test
aaa
inc
gs
shrb
lods
cli
daa
movb
bound
xor
ds
add
lahf
pop
loopne
xor
pop
ljmp
pop
daa
jg
inc
es
ss
fimull
fwait
outsb
cmp
loopne
cwtl
inc
sub
ret
insb
lods
sbb
inc
orl
fisubl
cli
cmp
push
daa
sti
loopne
or
sbb
shll
test
ljmp
mov
outsl
xchg
jno
enter
cmp
cltd
adc
ljmp
push
lea
jno
movsb
stos
jmp
pop
dec
inc
xchg
dec
xor
lods
push
mov
xor
mov
xor
mov
add
push
cli
divb
dec
dec
aam
in
add
add
jg
arpl
jge
add
rorl
cmc
daa
scas
lahf
jp
aam
dec
in
cmp
push
out
sbb
xchg
adc
lret
jo
rolb
pop
bndstx
fistps
push
les
popa
out
push
aas
xor
lods
mov
pop
mov
imul
in
negl
push
sbb
push
sub
js
inc
push
in
das
inc
xchg
stos
test
or
test
cs
add
push
iret
mov
mov
mov
mov
addb
test
div
ret
push
aam
sbb
mov
dec
xchg
push
mov
push
andb
xorb
dec
pop
mov
jno
in
xchg
in
mov
pusha
xorl
add
mov
lret
cmp
add
dec
sub
pop
mov
lret
xor
jbe
mov
popf
ds
add
add
shrb
sahf
dec
inc
mov
popa
iret
push
stos
dec
sbb
or
int3
sarl
jge
push
or
outsb
std
xor
ret
insl
out
pop
hlt
jl
mov
pop
test
sbb
popf
push
movsb
ret
mov
jp
stc
ds
pop
out
jmp
sti
push
fcmovnu
addb
xchg
insb
fimull
jl
cmc
dec
and
jno
jne
je
out
add
stos
mov
cmp
ret
sub
mov
mov
repz
sub
add
adc
into
or
push
fcomps
lcall
inc
sub
fstps
in
mov
icebp
inc
jb
mov
xchg
jbe
xchg
mov
mov
push
mov
inc
add
mov
in
jecxz
ret
stos
pop
daa
pop
push
sbb
adc
hlt
mov
loopne
sbbb
test
imul
mov
adc
push
add
pusha
mov
cmc
xor
stos
mov
and
dec
inc
dec
push
lods
sub
daa
cmp
ds
adc
scas
inc
mov
stos
das
sub
lods
mov
xlat
pushf
push
popa
aaa
cmp
in
popa
inc
push
mov
pop
push
inc
mov
or
pop
sbb
movsb
ss
vpcmpgtd
xchg
pop
sub
push
in
inc
pop
adc
jl
test
mov
aad
cmp
mov
dec
aam
mov
popf
imul
lret
mov
dec
fsubl
outsl
push
ja
mov
repnz
cmp
push
inc
mov
notb
xor
mov
jb
jmp
inc
cmp
mov
ss
xchg
inc
daa
pop
ds
in
mov
in
gs
gs
mul
mov
cld
xchg
dec
sbb
xchg
jmp
pop
leave
sbb
call
popf
movsl
sbb
idivl
out
rorb
adc
pslld
inc
inc
sub
cmc
outsb
jns
push
push
pop
adc
dec
lahf
jle
cs
fnstcw
pusha
xchg
arpl
aad
daa
stos
mov
mov
xor
cli
int
push
inc
enter
push
pop
pop
xchg
sahf
fs
aas
inc
xchg
pop
push
cld
fstps
mov
jo
dec
dec
add
xchg
push
test
lock
mov
inc
push
movsb
jno
push
sub
jmp
lret
cld
adc
jmp
pushf
mov
add
js
mov
test
leave
in
das
jbe
dec
mov
pop
sbb
cmp
mov
push
insb
jae
mov
adc
rol
sub
clc
outsl
xchg
jle
repnz
inc
mov
xchg
jl
and
in
jmp
sbb
mov
fmul
pop
pop
cwtl
and
js
push
scas
js
clc
movsb
dec
mov
clc
scas
and
jno
les
je
sbb
loopne
xchg
mov
xor
inc
xor
add
add
xlat
inc
movsb
mov
jp
mov
dec
in
and
mov
inc
and
stos
nop
mov
or
push
movsb
xchg
lds
cld
push
lods
adc
pop
dec
sbb
icebp
sti
mov
mov
je
dec
xlat
adc
pop
pushf
jecxz
or
xor
popf
jnp
testb
inc
out
xchg
cs
fwait
mov
nop
inc
xor
loopne
xor
in
mov
aad
pop
and
loop
push
lock
jle
mov
in
mov
mull
call
filds
call
mov
out
or
xor
mov
es
arpl
shrl
stc
js
cwtl
fcomip
js
les
pop
aad
xlat
mov
mov
lret
iret
out
enter
pop
shlb
sub
push
sbb
cmc
aas
lods
rorl
mov
mov
loope
inc
xchg
ljmp
lcall
mov
and
pop
movsl
xchg
jp,pn
push
add
int3
lods
dec
ret
icebp
cmp
push
add
out
fistpl
dec
or
and
decl
js
or
shll
daa
outsl
adc
je
mov
loope
cmp
jecxz
adc
xchg
ja
add
movsl
add
mov
dec
inc
cltd
adc
popa
inc
out
jmp
sub
or
bound
cmp
sbb
lock
xlat
dec
ja,pn
outsb
jecxz
insl
dec
dec
hlt
fcmovu
mov
mov
xchg
mov
add
pop
mov
push
mov
mov
and
add
lds
push
pop
les
into
cltd
pop
mov
mov
int
inc
outsb
adc
jmp
inc
xchg
push
sub
xor
add
inc
pop
in
lcall
subl
mov
pop
pop
or
aas
lods
push
int
xchg
les
inc
jp
and
pop
dec
xchg
jbe
sarb
movsl
stc
push
cmp
rep
mov
mov
insl
aaa
adc
ljmp
mov
test
push
ret
aaa
repnz
xchg
hlt
sbb
aad
insb
sahf
dec
fstps
out
addb
add
out
stc
imul
inc
in
int3
sub
adc
jg
lret
int
insb
mov
outsw
mov
movsl
sub
movsl
mov
cmpsl
jp
enter
aaa
xchg
adc
mov
push
sub
jb
xor
sti
push
into
mov
aaa
cmc
add
es
add
jb
sahf
sub
jne
sbb
scas
fwait
aaa
sahf
fstpl
rorb
int
cmp
jns
or
or
loop
jle
cltd
push
cmp
test
xor
add
lea
aaa
dec
adcb
inc
icebp
test
into
pop
mov
insb
imul
mov
dec
add
inc
outsb
xorl
outsl
into
ds
lcall
pushf
std
mov
jae
add
add
ss
or
pop
in
testl
lea
add
add
pop
lock
loopne
push
pushl
jmp
cwtl
and
xor
pop
je
cmp
lea
sub
inc
or
jae
push
xchg
and
xchg
fcoms
push
cmpsl
jmp
ret
daa
aas
repnz
fcoms
jp
lahf
jo
shll
adc
hlt
mov
mov
mov
dec
jle
push
xchg
lahf
enter
xor
sbb
out
stc
insb
jbe
cli
xchg
or
std
adc
add
cmp
pusha
test
arpl
pop
fcmove
sbb
outsl
stos
mov
sub
dec
cmp
stos
mov
test
jmp
inc
dec
mov
adc
inc
dec
cli
pop
or
mov
add
orl
lea
cmp
lcall
inc
imul
xchg
push
jmp
sub
insl
push
cmc
adc
in
mov
in
loop
sbb
pop
sub
flds
pop
pop
lea
mov
xor
and
pop
les
imul
subl
or
ret
inc
pop
sbbb
psllq
cmp
mov
das
adc
popa
in
mov
sub
fildll
stos
inc
push
dec
xor
fsub
cmp
daa
loopne
jno
sub
jge
inc
pop
push
outsb
mov
gs
in
xchg
and
repnz
fs
je
notb
dec
push
jne
dec
dec
frstor
das
ja
xor
lods
add
push
aas
ret
lock
fcomps
sub
sbb
mov
cs
fs
pusha
fldt
add
call
daa
lods
inc
aad
int
cmpb
mov
insb
sub
sub
inc
mov
push
adc
push
inc
and
inc
inc
popf
xchg
xchg
inc
cmp
push
shrl
sub
adc
call
pop
mov
cmpsb
imulb
iret
test
mov
push
pop
sub
pop
push
cltd
int
mov
xchg
cmp
xchg
cmp
imul
rclb
cs
scas
lret
fwait
cwtl
mov
andb
in
and
cmp
in
repnz
in
jmp
pushl
in
sbb
bound
cmp
shrb
pop
sarl
scas
push
mov
xchg
push
jge
call
sbb
ss
das
aad
mov
ds
stc
movsb
iret
or
adc
push
lods
bound
push
or
mov
sub
cwtl
push
fwait
add
pop
or
cltd
dec
and
add
imul
imulb
enter
push
push
lahf
loope
xor
cmpsl
stos
negb
push
inc
out
inc
mov
sahf
daa
xor
insl
dec
cmp
ret
dec
xor
cmp
cmc
pop
xchg
fcmovb
out
adc
iret
dec
push
or
jecxz
dec
dec
popa
mov
sbb
cmp
aas
sbb
inc
mov
mov
pushf
xchg
repz
jb
mov
xchg
pop
push
cmpsb
lods
mov
cmp
mov
push
fisubl
adc
inc
mov
or
outsb
inc
cmpsl
mov
cmp
add
imul
lds
cmc
mov
xchg
gs
add
cmovns
mov
sbb
jp
in
dec
mov
xor
sub
and
lahf
jns
mov
loopne
call
mov
mov
rorb
jno
lcall
mov
sub
dec
loop
dec
leave
testb
lods
cwtl
aad
sub
sti
xchg
jbe
mov
add
mov
mov
cmpsl
adc
mov
and
and
cmp
rcll
cli
xchg
inc
jne
addl
gs
rcrl
mov
adc
mov
out
mov
and
mov
test
loop
jg
push
xor
pop
push
pop
push
sub
es
fnstenv
data16
or
pop
mov
test
jge
jle
sbb
mov
mov
shlb
out
stos
mov
mov
scas
cmp
lahf
outsb
inc
and
aam
aas
xor
jmp
lret
xchg
test
mov
cmc
shll
cmpsb
clc
mov
adc
loope
andl
jle
inc
testl
hlt
pop
inc
loop
adc
push
cmp
sub
mov
mov
inc
mov
int3
movsb
push
xchg
fwait
imulb
imul
add
shrb
xchg
pop
addr16
inc
sbb
scas
fisubl
bound
jg
arpl
pop
data16
adc
inc
mov
mov
jmp
mov
mov
stos
cli
lods
xchg
push
push
mov
fiaddl
repz
jg
pop
nop
mov
cltd
and
pop
std
and
test
mov
mov
std
xchg
push
pusha
inc
les
push
ljmp
out
icebp
adc
cmp
insl
imul
into
loopne
sbb
stos
enter
mov
test
gs
fdivl
xor
enter
dec
fimull
jae
or
or
push
push
insl
neg
push
push
fcomps
gs
push
into
xchg
push
dec
jbe
mov
xchg
mov
pop
inc
loop
add
std
dec
push
stos
add
dec
or
fisttpll
insl
call
ja
jne
cmp
add
lahf
ret
or
ss
xchg
jo
sbb
jmp
loop
dec
lods
std
cmp
inc
es
pop
xor
mov
sarb
scas
sub
jge
mov
xor
pop
popa
cmp
fwait
es
sub
mov
lret
loopne
and
sbb
dec
aaa
push
jb
test
cli
leave
out
mov
imul
jmp
lret
mov
mov
shlb
sbb
mov
nop
adc
push
push
and
hlt
jp
inc
outsb
sbb
push
mov
dec
sbb
mov
push
adcl
cltd
cltd
addr16
mov
fldl
add
dec
push
cld
jmp
pushf
push
adcl
mov
test
shlb
cmp
out
das
sub
jns
sub
loopne
stc
cmp
mov
fincstp
mov
xor
and
jb
push
sub
negb
jno
jge
cmp
xor
shrl
into
push
dec
ret
mov
pusha
push
mov
shr
cmp
mov
in
push
or
xor
pushf
jmp
sbb
cmp
mov
repnz
add
adc
jnp
int
ficoms
jbe
in
repnz
imul
mov
xchg
pop
insl
jo
jge
pop
jg
aaa
xchg
insb
fnstcw
push
mov
icebp
sbb
dec
sub
ror
lods
out
dec
jmp
dec
pop
pop
ds
cli
push
push
adc
sub
push
imul
cmp
dec
lcall
ds
dec
adc
push
jp
xor
loop
push
ljmp
pop
mov
dec
mov
stos
int3
jg
ficompl
push
push
test
ljmp
or
outsl
lea
mov
push
xor
aam
insl
mov
pop
ret
movsb
xchg
in
adc
sbb
sbb
sub
test
cli
ljmp
mov
addr16
jae
ljmp
in
jecxz
pop
jp
push
push
adc
xor
stos
sbb
jge
sbb
xchg
sub
shlb
std
nop
cld
enter
mov
sub
pop
leave
jnp
mov
popa
pop
fiaddl
adc
cwtl
mov
test
pop
jnp
es
dec
int
loopne
add
loop
mov
adc
xchg
and
push
mov
ret
jl
jecxz
leave
push
mov
scas
inc
add
dec
push
test
popf
cwtl
orl
mov
xchg
push
icebp
dec
and
adc
aad
jae
push
add
jmp
bound
sub
sbb
add
xchg
stc
mov
shl
mov
jle
nop
dec
dec
push
xchg
mov
stos
es
in
cmp
adc
out
mov
mov
pop
sarl
xchg
sub
sbbb
xor
in
repnz
mov
jns
jo
test
and
pop
push
out
into
add
xlat
push
jle
lret
cmc
mov
xor
in
xchg
test
inc
mov
out
push
ret
insl
cwtl
add
mov
fistl
addb
inc
push
xor
scas
dec
sub
fsubrs
sbb
xchg
or
fimull
xor
outsl
push
jae
push
inc
xchg
cmpsl
std
jnp
sbb
xor
into
shrb
hlt
sarl
mov
in
jl
xchg
mov
xchg
cmp
adc
test
xlat
mov
and
push
mov
subl
pop
loopne
pop
and
pop
pop
mov
loop
sahf
sbb
lahf
mov
out
dec
and
ja
push
dec
push
add
cmp
mov
mov
das
mov
sbb
popf
mov
inc
mov
push
mov
sub
push
jns
pop
cmp
in
int3
inc
data16
popa
test
sbb
lret
int3
inc
shr
mov
fisubrs
push
jmp
in
out
movsl
pop
fnstsw
in
or
inc
leave
clc
inc
dec
sub
xor
jbe
in
jp
xchg
rorl
das
bound
inc
sub
pop
or
sahf
xor
rcll
cmc
mov
ficoms
ja
les
inc
cmp
sub
pop
fs
mov
lock
dec
mov
push
mov
dec
cld
adc
push
test
negb
dec
mov
or
bound
ljmp
cs
lods
sbb
sub
movsb
je
cmp
sub
shrl
jmp
sbb
mov
sbb
out
std
xorl
js
pop
xchg
push
ljmp
or
pop
sbbb
push
movl
int3
andl
adc
jmp
mov
mov
jge
mov
stos
std
inc
xorb
sub
stos
lret
je
mov
jle
add
pop
cmp
adc
pop
loope
lahf
jns
adc
push
push
gs
adc
pop
imul
mov
push
fwait
iret
xchg
jnp
dec
aaa
dec
push
pop
leave
jge
cmp
xchg
adc
mov
adc
in
push
icebp
test
filds
lock
add
ljmp
arpl
in
mov
jo
cwtl
adc
mov
in
and
mov
push
add
out
mov
gs
adc
adc
xor
nop
cmpsl
cwtl
xchg
insl
sub
pop
repnz
push
shlb
popa
jecxz
jge
add
hlt
insl
fadds
loop
xor
pop
pushf
mov
call
xor
and
icebp
rcrb
ret
cmp
pop
sub
nop
int3
jno
dec
hlt
subl
sub
out
shrl
sti
jb
push
add
stos
sbb
fcoml
lock
or
outsb
into
fs
push
and
sbb
sbb
adc
jg
js
loopne
jns
shl
mov
jmp
or
je
aad
cmp
mov
mov
add
mov
popf
mov
sub
mov
pop
fnsave
fstpl
jp
ret
pushf
sbb
je
lods
xcrypt-ctr
cmpsl
pop
enter
mov
sub
and
lret
jp
cmp
lret
xorb
push
out
dec
jbe
sub
clc
pop
addl
outsl
adc
jnp
imulb
mov
lods
js
pusha
jo
mov
dec
pop
testb
cmpsb
sbb
fcompl
cltd
stc
out
leave
xchg
inc
xchg
les
cmova
shr
cmp
nop
push
jmp
adc
outsl
jns
setbe
aaa
jns
jnp
xor
cs
iret
je
data16
inc
inc
fxch
xor
mulb
hlt
divl
xchg
dec
inc
nop
and
retw
jp
and
outsb
and
xor
enter
push
push
mov
lock
lcall
into
lock
jne
leave
ds
hlt
xor
jno
xchg
nop
jecxz
cmp
popa
xor
adc
lods
aaa
movsb
dec
add
cmp
dec
shlb
test
lea
pop
inc
xor
pop
mov
cmp
cld
sub
scas
fsubr
shl
push
pushf
lock
movsb
mull
push
iret
push
or
addr16
xor
mov
and
fcompl
mov
add
cmp
orb
xchg
push
subl
hlt
mov
pop
or
xor
sub
fisttps
test
daa
pop
sub
jnp
sub
lock
pop
aam
xor
es
or
inc
pop
leave
adc
xchg
js
mov
adc
add
cs
xlat
int3
in
test
pop
or
push
int
das
lea
jmp
cmp
sbb
mov
loopne
mov
push
jo
loope
pop
inc
sub
in
and
fildl
lahf
cmp
int3
or
mov
adc
push
lret
add
add
daa
jbe
idivl
mov
rcr
push
cli
add
imul
jae
ret
rcrl
addr16
xor
fcomps
dec
xchg
dec
inc
js
mov
call
jnp
pop
xor
push
js
insb
mov
mov
lock
add
mov
fisttpl
lods
mov
out
loopne
push
das
jp,pn
pop
insl
sbb
sub
cli
and
mov
fisubrl
pop
xchg
pop
sti
shll
sub
add
add
ss
and
mov
in
mov
dec
jp
ret
je
xchg
hlt
je
mov
pusha
fnstenv
or
imul
shll
hlt
call
outsb
shlb
adc
and
addr16
sti
pop
in
xchg
mov
jecxz
jg
pop
adc
mov
dec
shlb
dec
mov
or
cmova
xlat
xchg
xor
push
xchg
push
cmp
mov
fsubrs
js
mov
insl
mov
jno
cltd
fdivrp
sbb
push
loop
pop
xchg
push
jge
je
insl
je
sarb
jno
fsubrs
idivl
push
mov
xchg
movsl
lahf
push
dec
mov
mov
pop
fidivl
or
mov
js
add
push
xchg
shrl
jb
pop
jne
push
xlat
out
imul
rcr
lret
xchg
xchg
call
xor
pop
insb
xchg
adc
rorb
mov
cmpsl
sbb
xchg
vshufps
popf
mov
stc
scas
push
test
mov
sti
std
mov
mov
push
mov
ja
out
aam
dec
je
sbb
jnp
outsb
imul
pop
cwtl
in
int
and
adcl
adc
xor
mov
fildl
xchg
push
in
movsb
xor
out
ljmp
ljmp
xchg
repnz
or
sbb
cld
icebp
cmp
adc
iret
xlat
iret
cmp
mov
sbb
xor
xchg
outsb
sbb
test
lods
adc
scas
test
stos
scas
adc
pop
push
popf
out
lea
insb
popa
lret
stc
dec
add
add
das
pop
or
mov
dec
into
push
scas
add
test
ret
sbb
aam
adc
xchg
fucomi
cli
and
scas
mov
push
jo
aaa
fistpl
fwait
lret
out
dec
inc
xor
dec
nop
push
add
les
mov
or
movsl
popa
scas
nop
push
mov
mov
lds
adc
roll
stos
sub
iret
or
out
push
negb
and
movsb
xchg
in
out
push
pushf
cmp
mov
cmpsl
jmp
vandpd
adcl
mov
addb
inc
mov
xchg
push
movsl
dec
lods
xchg
fisubrl
mov
fcomps
fcmovbe
stc
ljmp
mov
or
ret
xor
lcall
insb
mov
bound
cltd
add
mov
cmp
add
push
sbb
jnp
popf
push
xor
cmc
inc
addr16
pop
sbb
lret
mov
dec
jns
in
add
and
jmp
insl
dec
test
nop
pop
fisubl
loopne
fists
icebp
pop
and
pop
cmp
xchg
cld
scas
repz
lods
xor
xchg
push
ret
fcomps
popa
popa
inc
mov
lret
out
ljmp
aad
cwtl
fs
mov
lret
push
mov
adc
lock
loopne
movl
sub
mov
sbbl
aad
int
roll
movsl
jl
xor
js
dec
test
jo
pop
adc
out
or
jp
or
adc
sahf
sub
cwtl
je
xor
xchg
inc
js
adc
xchg
test
les
sarb
mov
fistps
jp
lret
loope
out
xchg
push
out
repz
daa
ljmp
push
fisubrs
mov
dec
mov
jge
lock
repnz
xchg
cmp
sub
mov
or
dec
jne
shrb
iret
aad
lcall
pusha
cmp
xchg
pop
add
xorl
call
mov
push
adc
adc
pop
imul
or
sub
adc
aaa
notl
out
mov
or
jne
ret
jp
xor
stos
jg
sub
out
out
loope
enter
outsb
mov
mov
ficomps
sub
jle
sub
aas
sub
cmp
inc
sub
lods
scas
add
fbld
mov
xchg
push
lret
iret
hlt
adc
mov
cld
and
xor
packuswb
insl
sahf
cmpsb
xor
mov
jnp
loope
sub
mov
cmpb
stos
pusha
push
pop
outsb
rcll
add
negb
add
mov
adcl
loop
add
inc
sbb
sub
adc
inc
lahf
stos
pop
daa
xor
pop
loopne
or
in
andl
cmp
out
nop
rcll
or
push
testb
dec
movsl
add
lea
sbb
jno
popl
adc
ss
xchg
sarl
xor
xchg
xor
inc
loop
popa
lea
dec
push
xor
sub
mov
bound
fnsave
adc
add
cwtl
xor
add
arpl
ss
push
in
stc
fldl
mov
fists
lock
pop
push
lahf
inc
push
sbb
in
not
jp
popa
aaa
in
lods
sbb
xor
push
mov
mov
test
sti
xor
mov
pop
and
jno
lds
test
or
mulb
fincstp
pop
or
mov
incl
sbb
loopne
ficoms
xchg
jo
cmp
shr
xchg
jo
repnz
cld
jae
ljmp
call
adc
mov
xchg
cli
push
pop
sarb
sbb
jl
jmp
lahf
test
dec
sarl
rcrw
mov
cwtl
mov
xchg
testl
xchg
mov
cmp
pop
xor
push
push
hlt
outsl
inc
out
aad
into
fsubrl
cmp
in
sbb
movsb
adc
pop
push
fistpl
lcall
jno
xor
xor
dec
mov
mov
add
das
pop
jecxz
ljmp
movsl
dec
sbb
stos
xchg
ffree
xor
cld
xor
jne
push
or
inc
sub
shrl
in
das
push
xchg
mov
fwait
add
cli
test
rclb
adc
inc
inc
xor
sbb
add
mov
xlat
lea
shll
mov
pop
add
mov
mov
or
and
inc
mov
out
pusha
out
lret
popa
pop
dec
fnsave
mov
mov
lahf
or
scas
data16
les
dec
lret
cmp
setns
frndint
jns
fildll
int3
adc
out
and
pop
pop
cltd
xchg
arpl
jbe
or
mov
xor
mov
notl
add
mov
movsb
sub
shlb
in
shrb
imul
push
loope
sub
jns
jno
inc
rolb
jae
dec
dec
in
shlb
pop
pushf
stc
add
xchg
dec
or
sbb
ja
inc
stc
aas
outsl
stc
cmp
les
xchg
fbld
pop
push
sub
sti
cmc
hlt
and
jns
mov
hlt
popf
out
inc
fildl
mov
in
or
dec
mov
aaa
jb
or
push
scas
or
sti
push
jle
push
mov
push
dec
data16
pop
in
cmpsb
push
push
das
das
inc
stos
lret
nop
mov
pop
add
mov
aas
sub
orb
jecxz
push
sub
in
sbb
pusha
inc
sahf
in
leave
add
xchg
xchg
dec
iret
push
jl
xchg
adc
xlat
repz
std
je
jmp
push
sbb
lea
je
int
filds
dec
dec
xchg
sbb
das
sbb
les
push
adc
fcmovb
sub
jnp
roll
jno
fs
into
dec
leave
mov
and
mov
cmpsl
or
ret
shrb
or
inc
pusha
les
sub
xchg
xchg
jmp
jae
arpl
outsl
test
fcomp
adc
fists
repnz
fstps
shlb
jb
xor
hlt
cmp
or
push
addr16
aaa
push
es
push
xor
in
leave
cltd
mov
inc
test
into
ja
push
sbb
in
sbb
xchg
std
sub
data16
xchg
xchg
add
and
xchg
xor
or
mov
jbe
push
mov
das
sub
je
cmpsl
dec
xchg
fwait
insl
loopne
stos
sti
mov
fidivrl
fldl
jo
xchg
andl
xor
sub
xorl
in
loopne
int3
or
inc
nop
lret
inc
fnstcw
push
mov
popa
mov
mov
push
pop
mov
cld
cmpsl
popa
or
scas
imul
and
insl
mov
mov
lods
or
jo
or
mov
cmp
cwtl
fwait
lahf
push
mov
adcl
call
jmp
shlb
pushf
in
adc
mov
imul
sub
xchg
xchg
out
ss
popf
add
adc
jg
xchg
data16
inc
in
pop
sub
call
add
fiadds
cltd
adc
icebp
pop
lods
inc
push
loope
daa
popa
aad
nop
adc
fistpl
lods
lret
fidivrs
sbb
out
jb
test
jmp
xchg
ljmp
out
mov
lods
pop
sbb
pop
ss
dec
mov
movsl
sub
jl
test
lcall
cmp
fstpl
sub
test
dec
cmp
int3
xor
pop
stos
adc
ljmp
int3
sbb
pop
jno
sub
and
fisttps
jne
push
mov
jecxz
lds
je
das
sub
rol
inc
dec
cmp
dec
rcrb
xchg
in
out
hlt
sbb
sub
fcoms
adc
scas
out
xor
jns
mov
fs
cmp
out
dec
xchg
lods
rsm
test
pop
arpl
cltd
movsb
add
mov
fldenv
outsb
inc
es
push
mov
aas
outsl
pop
ds
or
ds
sbb
push
sbb
push
adcl
call
aam
mov
sti
stc
fidivs
jno
push
call
jecxz
das
fwait
xorb
repnz
test
xor
stos
jl
nop
lret
outsl
dec
cs
movb
mov
pushf
int
push
adc
xchg
jb
sbb
inc
ss
scas
or
fildl
xor
or
pop
push
cltd
push
aad
dec
clc
sarl
ret
pushf
aad
out
call
mov
adc
iret
leave
mov
or
sub
movsl
test
lods
add
aam
jmp
jbe
and
xchg
pusha
enter
out
lret
inc
imul
fstps
xchg
jl
repz
shll
dec
fs
mov
cmp
and
xor
data16
jne
repz
out
imul
lods
dec
fildll
shll
sbb
in
mov
adc
jmp
fimuls
dec
xchg
xor
push
addr16
and
pop
shlb
in
prefetcht2
les
mov
repnz
test
sti
test
mov
lods
mov
inc
or
testb
jbe
adc
inc
fldz
aad
pop
adc
ret
or
push
dec
pop
push
mov
fbstp
imul
jb
hlt
push
xchg
mov
ret
pop
outsb
add
lock
bound
pop
data16
sbb
jns
cltd
arpl
rcrl
ret
mov
daa
inc
mov
das
je
pop
mov
push
popa
xchg
lahf
adc
adc
push
aas
push
clc
cmp
cmc
jp
pop
mov
and
cmpsb
les
add
mov
and
aam
std
mov
jg
mov
ljmp
dec
push
mov
lods
push
inc
out
dec
xchg
popa
jb
dec
pop
shll
les
inc
lret
loopne
loopne
cmp
enter
ljmp
test
mov
adc
push
daa
mov
adc
add
sbb
mov
ds
xchg
outsb
jmp
shll
and
mov
or
or
lahf
inc
das
stos
jb
in
xchg
call
inc
and
je
pop
add
lds
cli
test
in
movsl
gs
mov
or
inc
inc
clc
push
jo
outsl
xor
sti
cli
imul
xchg
int
pop
cli
xchg
mov
xchg
adc
push
dec
aad
arpl
xchg
mov
pop
insb
xchg
add
jno
xor
dec
xchg
push
in
ret
ja
and
adc
and
fsubrl
or
or
dec
sbb
jb
dec
js
pop
imul
pop
loop
push
insb
mov
aam
insb
aas
xor
xchg
xor
sub
cs
cmp
sub
pop
add
add
jg
stos
mov
jecxz
daa
or
add
add
in
cmpsb
stos
ljmp
lods
mov
cmp
inc
fstpt
mov
addr16
cs
adc
les
or
loop
lcall
stos
mov
lahf
insl
adc
adc
pushf
aas
out
nop
xchg
push
cvtps2pd
xor
mov
sbb
pop
pop
mov
pop
pop
test
mov
out
loope
mov
shrb
mov
aas
aaa
sbb
test
lret
icebp
testl
movsb
push
repnz
sub
mov
push
xchg
mov
mov
lods
push
scas
cmc
movsb
scas
addl
loope
rcrb
xchg
arpl
es
iret
xor
scas
or
and
clc
ret
out
sub
dec
out
sub
hlt
and
jb
mov
xchg
notl
xchg
cltd
xor
cmpsl
jmp
shlb
ret
add
lea
fwait
dec
decb
aad
lea
sbb
sbb
incl
dec
idivb
jge
fld1
out
or
sbb
mov
push
movsl
ljmp
jg
sbb
lods
test
cmp
jne
cmc
sbb
aas
sbb
jmp
mov
and
xchg
mov
push
pop
sub
imul
sbb
mov
inc
push
int
ret
push
xchg
mov
insb
add
push
push
jb
ret
add
mov
mov
inc
jb
jno
mov
movsl
enter
jl
popf
and
sti
insl
mov
sub
fs
arpl
out
rolb
test
aad
mov
rcrl
add
add
fwait
daa
mov
xor
adc
loopne
ljmp
repnz
xchg
adc
insb
and
lret
mov
jbe
and
loop
out
mov
jp
loope
and
inc
mov
fsub
out
jnp
mov
ds
or
mov
daa
and
popf
mov
inc
add
add
cli
add
mov
dec
fisttps
ret
inc
in
mov
scas
jb
inc
stc
in
pusha
xchg
hlt
dec
std
sbb
ja
push
movsb
pop
lcall
aaa
push
rol
test
fildll
and
repz
and
movsb
xchg
dec
fnstsw
mov
fidivl
dec
imul
push
cmp
sbb
xchg
and
adc
int3
or
lret
xchg
pop
cmp
and
push
into
sahf
in
inc
dec
sub
in
into
sub
loopne
aad
xchg
frstor
and
or
or
stc
cmp
decb
ljmp
push
orl
mov
xor
cmp
fmuls
add
push
push
ret
nop
aaa
sub
mov
sub
push
ljmp
jb
mov
pop
cmpsl
mov
jl
lods
out
fwait
enter
cmp
cltd
push
push
sbb
divl
pop
enter
xor
pushf
in
xor
ds
insb
inc
mov
push
pushf
stos
cmp
lea
lods
fimull
cs
fimuls
push
lret
rcll
xchg
sbb
and
paddd
xor
pop
pop
test
or
add
jae
mov
mov
in
sbb
mov
dec
xlat
int
aas
std
inc
aam
aad
push
lcall
test
test
scas
sbb
jmp
sbb
aaa
jb
popf
jne
testb
lods
jae
sub
dec
dec
clc
cmp
les
adc
xchg
lods
stos
jno
sbb
fistl
mov
shrl
scas
pop
xor
dec
push
adc
cmp
dec
stos
leave
lahf
and
jl
mov
addb
push
in
sbb
enter
jl
into
repnz
push
ds
mov
dec
sarb
into
add
jbe
ficomps
mov
movsb
sub
scas
xchg
insl
push
push
pmuludq
dec
cmpsb
daa
sbb
adc
call
mov
andl
in
aam
inc
or
pushf
push
outsb
cltd
ljmp
stos
xchg
pop
gs
gs
fidivrl
mov
inc
mov
inc
fwait
dec
xchg
scas
dec
adc
pop
lods
cmp
push
and
das
pop
arpl
jl
aam
add
cmp
xor
enter
comiss
jns
push
aam
inc
jmp
adc
stos
pop
rcll
aad
cmp
subl
push
insb
fbstp
add
xchg
pop
insl
insb
and
enter
jge
mov
pop
dec
sub
xlat
fwait
lods
xor
js
jne
lcall
enter
jmp
les
bnd
mov
push
push
testl
das
lds
repz
mov
add
xlat
cwtl
jbe
xchg
dec
and
sub
je
xor
ret
fidivl
cmp
mov
fsqrt
mov
xor
insl
fmull
lods
sbb
stos
and
stos
pop
popa
movsl
stos
arpl
arpl
fsubs
mov
stos
jne
fmuls
dec
xlat
rclb
mov
mov
add
test
pop
sub
shlb
pop
inc
in
adc
shrb
jle
lcall
xchg
cs
inc
data16
push
sbbb
mov
hlt
sub
iret
xchg
scas
mov
xchg
or
jnp
shl
inc
rcrb
and
or
ljmp
mov
xchg
dec
cmp
aaa
sub
cmp
lea
add
stc
inc
push
mov
jmp
sar
cmp
xlat
mov
mov
outsl
rorb
cmp
into
mov
cmp
outsl
push
das
pushf
into
add
sarb
adc
and
rcll
pop
out
mov
or
push
jl
xchg
cld
push
out
jp
push
rcl
int3
pop
shll
lcall
sarb
add
nop
push
cmpsl
bound
adc
xchg
xchg
xchg
pop
nop
ret
fiadds
aas
xchg
test
lret
into
xor
roll
fstps
mov
sbb
adc
cld
jb
mov
inc
push
pushf
jmp
inc
push
inc
imul
js
scas
push
cmpsb
jmp
test
inc
icebp
fisubs
outsb
push
cltd
ljmp
dec
lock
nop
adc
jbe
mov
std
aaa
jle
or
es
add
add
je
out
cmp
repnz
mov
nop
adc
add
add
mov
ja
popw
xchg
fmull
aaa
cltd
dec
fs
js
cmpsb
jmp
shlb
popa
mov
aas
jge
xlat
in
pop
movsb
std
movsl
sbb
gs
and
cmpb
sbb
lret
in
test
fcmovnu
faddl
andl
mov
popf
mov
xchg
mov
fistpl
orb
xchg
inc
lods
push
ss
mov
out
adc
fidivrs
imul
ds
call
aam
jmp
xor
andl
cmp
mov
cmp
stos
arpl
or
add
or
xor
jb
inc
popf
sub
call
outsl
je
lock
adc
dec
in
scas
dec
mov
jns
or
jecxz
mov
dec
lods
data16
aaa
jle
out
sbb
cmp
mov
add
insb
push
sbb
movsb
pop
mov
jb
add
ret
scas
xor
inc
nop
call
push
push
add
test
repz
pop
fsubl
mov
sbb
dec
push
push
pop
mov
cmp
leave
pop
jge
sbb
mov
push
and
repnz
xor
aam
lods
mov
mov
cmpsb
pop
insb
cmp
stos
idiv
pop
xor
jmp
pop
rol
in
or
xchg
clc
psubw
scas
lahf
lret
ret
in
inc
aam
and
shlb
pop
mov
xorb
ljmp
mov
jno
add
testl
clc
mov
imul
outsb
pusha
clc
es
fucomip
enter
pop
adc
xor
xlat
mov
sub
dec
inc
iret
jg
daa
bound
mov
aaa
mov
inc
jmp
les
jnp
inc
sub
inc
stos
dec
in
loopne
or
sbb
fnstcw
lods
data16
inc
push
xchg
sahf
sbb
scas
add
lret
call
pop
push
sub
mov
jae
into
fs
shr
lds
loope
xor
mov
int3
pop
inc
add
sbb
xor
mov
xchg
cmp
mov
ret
push
dec
jmp
inc
and
pop
lds
dec
mov
jae
imul
pop
pop
xor
fdivrl
in
xchg
loope
les
mov
and
add
inc
movsl
cmp
subb
ret
shll
pusha
mov
dec
jnp
fldl
add
inc
movb
cmp
enter
int
dec
jo
test
ret
inc
cwtl
daa
push
and
shl
decl
cmpsb
mov
mov
stos
mov
inc
push
mov
clc
mov
ror
dec
mov
ja
adc
mov
adc
mov
pop
sbb
xchg
or
lds
dec
push
popf
xchg
dec
loope
cmp
sub
lock
bound
sbb
fwait
and
jg
push
mov
fbstp
int3
mov
cmpsb
lods
xor
nop
inc
lods
in
xchg
push
push
push
shrb
pusha
jmp
fadds
iret
ret
xchg
dec
pop
pop
mov
mov
les
sub
push
cs
push
clc
dec
lea
iret
daa
test
sub
mov
cmp
cli
adc
cmc
mov
loop
ret
js
inc
or
out
and
push
mov
and
sub
and
js
push
cmp
addr16
out
push
in
dec
push
inc
orl
xchg
outsb
aas
adc
int
lret
dec
popf
or
inc
loopne
aad
push
pop
loopne
and
cmpsb
mov
out
fadds
test
jae
jne
int3
cmc
data16
or
cmp
leave
inc
xchg
out
dec
adc
je
rcl
aaa
daa
pop
cmpsb
loop
outsb
in
test
fistpll
sbb
cmp
inc
lds
cmp
aad
xchg
std
dec
push
lcall
sbb
scas
loopnew
addr16
imull
dec
xor
dec
jg
out
inc
loope
xor
fs
sarl
mov
cmp
lods
lahf
and
pop
cmc
fstps
dec
pop
test
daa
loope
xchg
pusha
cmp
jo
lock
dec
int
adc
enter
stc
xchg
fwait
mov
pop
or
inc
xor
mov
push
lods
dec
xchg
shlb
lock
decb
in
xchg
call
push
int
std
cmp
mov
push
clc
sub
pop
fdivl
jg
mov
test
xchg
xor
test
mov
and
xor
mov
out
push
pop
push
push
push
subl
andl
fiadds
out
sbb
mov
jae
and
and
pop
adc
mov
jbe
add
lods
nop
xchg
cltd
mov
xchg
rclb
cltd
ja
push
jns
gs
outsl
xchg
addr16
push
mov
mov
ds
rcrl
test
dec
lock
pushf
mov
or
xchg
in
ret
into
and
test
sub
or
cmp
test
int3
out
cwtl
pop
mov
push
inc
cmp
ret
jge
pop
int
pop
sub
aaa
sti
or
sbb
fstpl
lds
pop
cld
ja
addb
imul
lods
rorb
sbbl
clc
mov
lods
fidivrs
pop
adc
lret
dec
orl
leave
dec
fisttpll
cltd
insl
fcomip
inc
push
jge
xor
cs
lock
jecxz
out
loopne
add
add
pushf
push
xchg
mov
pop
xchg
push
mov
repnz
shll
cld
xchg
mov
xor
or
sub
and
inc
mulb
and
ret
and
cltd
xchg
pop
cld
lahf
dec
mov
jbe
les
sbb
in
push
test
cmp
push
cli
dec
push
and
jp
xor
sarb
lret
add
pop
pop
cmp
lock
dec
aaa
inc
in
daa
inc
cmpsl
sbb
add
test
rcrb
adc
das
repz
lods
cmp
ss
add
nop
cmp
daa
sbb
jno
adc
hlt
cmp
sub
stos
inc
or
daa
imul
dec
mov
lods
int3
mov
lock
loop
jle
andb
pop
sbb
arpl
stos
mov
mov
add
and
nop
push
insl
imul
sahf
aas
inc
jae
cld
xchg
int
sarl
divb
fcomp
mov
lock
out
std
and
add
add
andb
cld
shlb
or
imul
aas
popl
add
call
jp
out
ficomps
hlt
inc
jmp
inc
iret
jp
jecxz
or
test
clc
insb
ret
pop
jnp
jl
pop
lods
inc
push
aad
inc
or
dec
mov
jp
xor
leave
mov
jge
adc
test
mov
test
int
rorb
dec
gs
hlt
adc
cmp
xor
mov
sbb
fsubl
jne
xchg
xchg
jmp
mov
xor
mov
sbb
mov
cmp
je
inc
ljmp
mov
ret
cwtl
push
cmp
fisttpll
pop
sbb
hlt
sti
add
mov
push
jg
pop
sbb
cmpb
push
push
scas
fidivrl
outsl
sub
mov
sbb
cmp
mov
xchg
arpl
push
jge
adc
inc
dec
xchg
jne
jp
inc
cwtl
adcl
adc
xor
sbb
cmp
dec
mov
test
in
sub
scas
out
aaa
incl
and
out
pusha
vmovups
mov
inc
ss
mov
dec
aas
mov
imul
cmc
adc
lods
fisubrl
and
bound
lods
fs
push
pop
pop
jecxz
pop
int
cmp
outsl
sub
xchg
out
mov
outsb
out
xor
push
xchg
enter
mov
fsubp
dec
sbb
orl
popa
jnp
mov
cmp
push
or
xchg
pop
xchg
fwait
mov
insl
ret
dec
aas
mov
iret
loop
add
mov
mov
xchg
into
out
add
push
jmp
mov
cltd
in
faddl
dec
or
arpl
push
pop
test
push
or
mov
add
push
out
leave
arpl
es
sub
sbb
push
xor
push
mov
sar
fldln2
mov
sar
movsl
rol
jnp
mov
pop
or
pop
mov
push
pop
pop
mov
rclb
jl
xchg
out
fwait
lcall
mov
loopne
push
mov
int3
sbb
dec
pop
dec
icebp
in
mov
adc
jle
in
mov
push
xchg
dec
cwtl
repnz
mov
stos
scas
push
in
into
movsb
in
aam
push
pop
pusha
xor
jo
lret
lods
icebp
lret
bound
fadds
or
push
int3
pop
dec
rorb
jmp
stos
mov
jmp
mov
lds
out
dec
fidivrl
jl
aaa
jb,pn
in
inc
popa
mov
pushl
and
lods
pop
out
insl
sbb
aaa
xor
popf
and
icebp
gs
jne
iret
nop
dec
mov
xchg
push
cmp
adc
sub
inc
sti
insb
enter
ret
jp
divb
mov
cmpsb
xchg
out
mov
mov
aas
mov
and
cmp
and
mov
jmp
push
repnz
xchg
clc
sti
xchg
fldenv
push
call
or
je
push
fwait
pop
fistpl
lods
lods
sahf
cmp
pop
mov
xchg
jg
inc
cs
dec
fisttps
sahf
mov
and
add
ficompl
add
fstl
and
sbb
or
sbb
enter
popf
lock
sbb
shrl
sub
iret
sub
sarb
dec
and
xlat
das
xchg
mov
jecxz
movsb
inc
sbb
shll
stos
xchg
pop
stos
mov
sub
ja
dec
addb
movsb
mov
jg
pusha
mov
arpl
cltd
repnz
ja
pop
orl
push
lret
cmpb
or
rcll
testb
and
cmp
out
je
pop
ja
add
icebp
in
mov
inc
pusha
outsl
ljmp
xor
sub
ds
in
fisubs
xchg
out
jg
lds
lods
sub
or
add
jecxz
sbb
fldt
and
mov
les
in
adc
addr16
sbb
jecxz
sub
dec
mov
out
fmulp
mov
and
mov
push
mov
sub
ds
rcll
mov
pop
sub
sti
xlat
and
dec
or
out
sbb
pop
rcl
cmp
xchg
movsb
push
cmp
outsb
out
jae
jg
pop
pop
or
lcall
out
push
push
xchg
fstps
gs
enter
push
scas
nop
xor
scas
mov
inc
sub
sub
or
dec
out
inc
ss
int3
aam
movsb
xor
test
push
pop
xchg
mov
imull
push
jae
xor
sub
test
sub
icebp
inc
pop
push
pop
leave
pop
sbb
fisubrl
stos
or
cmp
mov
sbb
cs
or
mov
mov
jl
loopne
mov
insl
inc
imull
adc
lods
xchg
je
jo
jbe
stos
ret
lret
pop
testl
push
cmpsb
ss
push
les
cmp
sub
add
xor
pop
int
push
loope
push
stos
testl
enter
cs
xor
in
leave
jge
stos
aam
dec
adc
call
adc
xorl
jl,pn
or
js
pop
inc
lods
xchg
pop
test
stos
pop
jnp
sbb
jge
hlt
push
loope
scas
jb
int3
xchg
jne
jge
movsb
aad
je
xchg
or
aas
stc
push
cmc
xor
and
data16
icebp
insb
inc
push
push
mov
insl
addb
adc
cwtl
loope
and
cmc
push
scas
mov
dec
push
cwtl
jbe
stos
dec
sub
repnz
arpl
push
fwait
push
rcl
imul
adc
cmp
cmpsl
imul
adc
rclb
jg
add
add
add
push
mov
out
cli
inc
jmp
xor
cmp
sub
cmp
cmp
pop
push
nop
mov
sub
add
push
loop
dec
mov
fwait
mov
jns
cli
hlt
shl
sar
pop
and
push
jb
test
ljmp
loope
jp
mov
inc
call
mov
cmp
iret
lock
cwtl
xor
lret
test
dec
shll
xchg
dec
scas
mov
sub
stc
inc
mov
lods
loope
mov
ljmp
cmp
push
adc
rol
xchg
enter
test
nop
popf
push
enter
je
cwtl
les
fadd
and
fildll
imul
mov
push
pop
pop
pop
add
pop
ja
xorb
fstps
clc
push
adc
xchg
mov
pop
inc
xchg
iret
popa
sti
sbb
or
add
add
mov
mov
bound
add
imul
jnp
movsb
pop
cmc
mov
addr16
imul
mov
add
cmpsl
fmull
in
jo
lock
out
dec
sbb
pop
je
adc
cmpsb
stc
or
add
push
jge
sub
aam
frstor
cli
je
movsl
sbb
rcrb
push
sti
fs
loopne
lahf
inc
je
mov
xchg
sbb
insl
and
subb
add
iret
sub
loopne
cmpsl
push
dec
cmp
pop
and
out
dec
in
xor
mov
aaa
in
nop
inc
pop
shlb
outsl
loope
rorl
insb
iret
cwtl
pop
test
in
xchg
in
mov
push
adc
fwait
mov
mov
mov
out
adc
xchg
and
mov
sti
or
cmp
cmpsl
sub
xor
ja
insb
dec
mov
lea
sbb
xchg
pusha
adc
imul
call
xchg
pop
adc
push
outsl
push
mov
jp
mov
daa
push
cs
adc
ss
adc
xor
lods
jno
fnstenv
xlat
mov
sub
and
push
enter
ljmp
dec
or
jae
sub
jbe
add
outsb
mov
popa
cwtl
inc
jp
les
mov
ret
xchg
sub
insl
hlt
xlat
out
cmp
je
stos
outsw
jmp
cmp
loopne
jo
fs
roll
out
mov
lock
dec
xor
xchg
xor
lods
sbb
push
lret
inc
rclb
mov
and
hlt
nop
push
inc
sub
or
fldl
mov
mov
mov
imul
mov
subl
xchg
sub
movaps
mov
stc
mov
in
or
sbb
in
cmp
insb
xchg
lahf
stos
lret
mov
ret
mov
pop
mov
mov
jg
fs
fs
mov
and
addb
bound
out
jns
inc
sub
or
in
repnz
mov
jg
testb
lahf
inc
nop
cmp
mov
mov
cmp
xchg
xor
or
dec
or
xor
push
xchg
dec
popa
jle
push
mov
icebp
push
leave
mov
nop
mov
xchg
xor
loopne
outsb
sbb
clc
jo
data16
cmp
in
dec
jb
sbb
test
sub
mov
test
shl
iret
pushf
mov
inc
adc
mov
inc
jne
adc
mov
rcr
add
fidivrl
aad
pop
ljmp
mov
xchg
sbb
ret
add
lods
dec
ret
mov
daa
sub
xchg
lret
sbb
ss
aad
mov
xor
mov
sub
xchg
cmp
test
pusha
ror
test
ret
data16
loop
push
cmp
shlb
popa
inc
out
jno
push
fsubl
fs
sub
push
jmp
rclb
aas
lock
rcrl
mov
sub
adcl
cwtl
decl
insb
cmp
mov
imul
mov
mov
mov
xor
das
pusha
call
sub
mov
mov
int3
mov
notl
sub
or
xor
sbb
push
or
jbe
cmp
fcompl
and
aam
xchg
data16
aaa
sbb
icebp
ret
popf
popa
xchg
sbb
add
inc
test
outsb
cmpl
or
data16
mov
inc
testl
fwait
call
icebp
lret
and
mov
xchg
test
inc
stos
je
in
pop
adc
cmp
out
cmpsb
cmp
jmp
lea
rcrl
adc
push
and
push
jl
push
cld
mov
test
aad
fcompl
xor
push
cmc
mov
jmp
scas
mov
popf
loope
ret
repz
sbb
mulps
jp
shll
push
xchg
cmp
negb
aad
out
mov
add
cld
mov
cld
and
xchg
sub
push
mov
aad
mov
cmp
jecxz
test
sub
push
rolb
mov
iret
sbb
ss
xor
andb
push
roll
mov
pushf
push
or
clc
jmp
inc
and
cmp
cwtl
sub
cwtl
push
push
cmp
adc
popa
add
icebp
ret
mov
hlt
clc
leave
cmp
rdtsc
ficoml
sbb
aam
mov
test
repz
std
xchg
les
dec
stos
imul
pop
sub
xor
faddl
ret
xlat
or
pop
test
loopne
jle
neg
mov
pop
call
lahf
push
or
aas
jmp
mov
or
shlb
cmp
xor
inc
mov
cmp
lods
cmp
dec
adc
into
mov
push
fwait
andb
aam
inc
push
push
jecxz
in
cmp
int3
dec
dec
jbe
sub
scas
hlt
loopne
sbb
and
lcall
jmp
adc
lret
push
in
or
out
dec
cltd
xor
jnp
inc
cld
inc
sub
scas
out
aam
lock
dec
mov
push
inc
jbe
js
jp
and
icebp
test
notb
shrl
fildll
outsb
fstp
or
ljmp
mov
clc
mov
mov
mov
fisubrs
add
push
cmp
mov
jne
mov
jne
call
or
imul
push
push
xor
dec
out
fadd
fwait
xchg
mov
fistl
aas
iret
mov
rcr
dec
popl
iret
or
or
popf
sbb
add
outsl
push
sbb
and
mov
add
cs
fisttps
push
repnz
inc
mov
push
lcall
pop
test
inc
cmc
ds
aas
pop
sub
xor
push
ffree
sti
divps
subb
icebp
and
mov
jp
xor
sub
aam
das
xor
dec
xor
xlat
in
jp
shr
lahf
lret
jno
outsb
fs
push
pop
rcrl
fstp
sbb
or
mov
xchg
dec
std
aam
and
hlt
push
addr16
sahf
and
mov
insl
fs
in
mov
mov
push
lea
sti
pop
lods
into
fisttpl
pop
or
cmp
add
imul
xor
fcoms
dec
mov
int3
cmp
ret
pop
mov
stos
decl
popa
mov
aam
adc
pop
cmpl
mov
repnz
jae
pop
sub
in
frstor
push
fldcw
cmp
cmp
unpckhps
inc
xchg
lcall
outsl
sti
jle
lods
es
sbb
rolb
out
and
sbb
leave
sbb
scas
inc
mov
xchg
cmpsb
mov
mov
jae
sub
mov
enter
notb
cs
outsl
fdiv
jge
das
xchg
mov
mov
inc
ds
inc
sar
lcall
cmpsb
shrb
adc
mov
das
movsl
out
mov
cwtl
fmull
or
shlb
daa
jle
cli
push
jl
test
xor
movsb
inc
js
and
mov
or
xchg
mov
xchg
jp
out
xor
ret
das
push
cmp
test
mov
inc
add
pop
rorb
xchg
mov
adc
psubw
jnp,pn
lea
mov
cmp
into
jge
js
or
roll
or
lods
sbb
jae
and
stos
mov
out
pop
mov
jns
adc
jecxz
hlt
xor
enter
test
and
cmp
dec
imul
adc
push
stos
and
into
sub
js
icebp
jle
scas
rcrl
adc
xchg
dec
sub
add
push
fidivrl
push
bound
test
inc
pop
push
das
xchg
xor
inc
jno
mov
sbb
mov
mov
lods
lcall
dec
out
mov
rol
popf
mov
mov
ljmp
add
sub
loop
cmpsb
add
sbb
notb
call
rcrl
icebp
push
fisubs
icebp
lds
pop
inc
loope
pop
dec
cmpsb
push
mov
bound
lcall
call
je
imul
or
fdiv
shll
test
inc
pop
mov
sbb
mov
or
bound
fisttpll
dec
push
pop
push
or
add
mov
mov
movsl
cmpl
je
cltd
out
push
jg
inc
inc
movsb
sub
inc
les
fisttps
hlt
xchg
cmpsb
xchg
inc
jb
pop
das
mov
fs
mov
xchg
add
xchg
iret
in
repnz
mov
je
pop
xchg
mov
inc
mov
insb
xlat
fdivrs
push
push
adc
test
fcomps
xchg
movsb
or
adc
lods
mov
or
mov
js
or
or
mov
mov
mov
lea
scas
adc
xchg
xchg
sti
iret
xchg
xchg
sub
neg
cmp
and
repz
je
push
adc
cmp
push
xchg
jmp
jnp
pusha
cmpsb
scas
aam
rolb
sub
rorl
imul
xor
mov
addb
jge
cmpsl
or
cmpsl
pop
pop
mov
xchg
mov
ret
mov
or
stc
call
cmp
jne
sub
pop
iret
jns
jo
push
xchg
idivb
sub
xor
mov
popf
les
outsl
in
ss
pop
and
subb
sub
inc
xor
mov
andl
cmpsl
pushf
ficoml
cwtl
fcmovbe
push
out
out
out
mov
into
mov
scas
jl
adc
jecxz
out
and
ds
add
mov
daa
out
push
adc
inc
movsb
sbb
mov
fcoms
out
js
dec
loopne
dec
cmp
jns
daa
push
sbb
push
or
test
mov
hlt
lods
inc
icebp
sub
cmp
arpl
cmpsb
cs
pop
inc
inc
faddl
push
faddl
or
xorb
sub
dec
js
scas
pop
jmp
xchg
insl
push
or
mov
ljmp
mov
and
pop
test
jnp
sub
out
loope
and
shrl
and
int
add
rorb
push
popf
aas
in
jl
mov
push
lods
into
push
push
or
out
pop
flds
jg
or
movl
fisubrs
mov
cmpl
js
addl
test
rclb
sbb
aad
sahf
pop
adc
xchg
dec
adc
adc
jg
fiaddl
dec
sbb
add
sbb
js
fsts
xchg
add
or
xchg
outsb
ds
cmpsl
pop
ds
xlat
mov
cs
push
xor
jp
rcrb
xorl
leave
xchg
inc
or
out
nop
fdivrp
sub
add
jb
sbb
and
ss
nop
push
ffreep
fcompl
add
aas
push
sahf
inc
enter
leave
mov
lods
mov
mov
fdivrs
jg
mov
jmp
adc
aad
adc
push
fsubrp
aam
push
mov
outsl
jmp
push
jle
dec
loop
xchg
push
inc
test
aaa
jmp
and
xchg
mov
ret
aad
mov
pop
add
dec
mov
mov
mov
mov
mov
outsb
and
jno
in
lret
rorb
jb
shld
xchg
adc
dec
add
push
inc
mov
inc
jecxz
pop
negl
aas
dec
enter
push
rorb
cltd
shrl
notb
testl
fsub
jns
cwtl
mov
inc
cltd
sti
aam
xchg
mov
fisubl
sbb
adc
push
into
adc
jge
es
ja
sub
stc
jns
xchg
out
and
subl
cmpl
mov
and
push
ljmp
and
loopne
push
aad
popa
jns
das
jno
push
nop
jle
nop
push
and
dec
mov
fisubs
sti
jg
mov
fimull
sub
push
push
pop
dec
lds
popa
negl
insl
fwait
shlb
out
cmp
and
mulb
sahf
xchg
js
outsl
test
dec
fs
je
js
sti
stos
fmull
loope
ror
hlt
xchg
cmpsl
mov
adc
pop
in
push
shrl
jae
sbb
pop
add
loopne
pop
enter
pop
mov
pop
aas
mov
mov
test
or
xor
and
stos
jno
pop
cmp
aas
les
add
jecxz
cmpsb
adc
mov
test
ss
xor
add
imul
movntps
lcall
inc
add
pushf
cmp
cmpsb
fists
sub
xchg
sub
ds
ficoms
inc
xor
and
mov
shr
hlt
movsb
lock
push
lret
dec
xchg
shll
stos
data16
mov
shrl
nop
xchg
add
jg
jg
bound
jbe
mov
push
sbb
xchg
es
out
and
and
out
or
add
outsb
rolb
jnp
bound
cld
pop
aam
inc
ss
aas
xlat
pop
insb
add
mov
das
test
out
ds
andl
aad
and
xor
sub
sarl
movsb
mov
sub
add
xchg
mov
jecxz
push
out
jns
add
xchg
inc
push
fbld
mov
add
push
inc
lcall
mov
xchg
divb
mov
xorl
adc
int3
pop
dec
negb
pop
push
and
xchg
ja
idivl
mov
bound
stc
arpl
jp
aaa
stc
push
imul
jne
shrl
rclb
in
stos
fs
jp
repz
jnp
push
cmp
int
cwtl
push
fistpl
inc
fimull
sub
mov
dec
sub
jnp
xchg
sahf
jnp
push
fdiv
test
jp
scas
pop
popa
mov
out
and
ds
sub
cmpsb
or
lahf
adc
popa
cmp
or
xorl
popf
jp
repnz
test
cs
lea
and
inc
inc
stos
mov
add
and
iret
lock
dec
lods
mov
fidivrs
jg
pusha
push
mov
xchg
scas
cs
sbb
mov
dec
sbb
out
movsl
lahf
mov
out
xchg
icebp
jl
ljmp
dec
pop
std
cli
icebp
add
scas
aas
cmp
fnsave
lret
daa
enter
ficoms
jge
lock
out
insb
dec
jge
je
or
mov
shll
adcb
lahf
int
dec
leave
mov
int3
pop
sub
mov
lods
mov
into
jb
push
pushf
or
in
pop
jae
ja
sub
push
xor
inc
imul
ror
scas
and
pop
dec
jnp
and
jecxz
enter
jb
mov
and
xor
xchg
fidivrs
xor
popf
gs
jp
mov
into
pop
push
or
shrl
lds
pop
rcll
jge
pop
rcrl
inc
pusha
sub
dec
mov
sub
sahf
push
xor
cs
cli
imul
cli
dec
jno
add
mov
iret
adc
fs
enter
cmp
rorl
ror
dec
jnp
cltd
or
lcall
push
aas
jnp
and
pop
stos
imul
out
sar
lcall
int3
jae
mov
xchg
jecxz
aas
sub
or
pop
fnstenv
clc
int
dec
sbb
insl
mov
and
dec
or
shl
push
xor
outsl
xchg
aad
shlb
sub
fs
sub
pop
pop
xchg
test
jmp
mov
sbb
test
incb
mov
push
jne
fimull
adc
push
incl
movsb
push
or
icebp
add
cwtl
jne
fstp
outsl
sbb
mov
fisubs
and
cli
cmp
data16
jnp
test
out
fdivl
cs
test
stos
mov
push
add
repnz
arpl
sub
add
inc
fistpll
add
pop
xchg
xchg
sub
cs
cld
xchg
pop
sub
sbb
sahf
fs
jno
ds
cmpb
dec
gs
jg
xchg
and
pop
push
pop
int3
add
add
loope
sub
fildl
mov
mov
add
rcr
inc
stc
subl
pushf
icebp
mov
iret
mov
mov
out
push
sub
xchg
jecxz
lds
xchg
fwait
mov
jg
test
pop
lea
std
mov
push
ss
out
scas
icebp
out
ljmp
lds
lret
mov
xor
add
das
stos
inc
mov
xor
or
mov
sbb
and
das
and
std
dec
ret
push
push
cmp
gs
push
shll
push
fmuls
les
adc
addr16
imul
push
stc
mov
xchg
arpl
loope
jl
push
shr
adc
sbb
inc
add
jmp
insb
or
mov
mov
scas
lcall
cmpsb
jbe,pt
stos
into
xor
push
clc
out
cmp
fmull
pusha
pushf
adc
or
ret
push
in
xchg
shll
mov
push
ficomps
and
xor
lret
xchg
xor
sub
pusha
mov
leave
sub
or
xor
xchg
adc
xchg
sub
ds
jns
or
lds
mov
xchg
jle
jle
push
rorb
adc
push
pop
jbe
inc
and
movsb
mov
pop
sbb
shrl
cmp
movsb
xor
xor
imul
fadds
scas
jp
ljmp
add
and
sahf
pop
pop
or
lods
negb
aam
lds
lcall
dec
shlb
push
jl
dec
lds
test
in
ss
pop
cmpsb
les
roll
sub
sub
es
mov
imul
mov
nop
jecxz
enter
fs
mov
int
fidivs
cmpsl
jno
jae
mov
mov
xor
xor
mov
push
int3
cmc
push
lahf
pop
std
sarb
jae
aad
push
es
psraw
imul
aad
fmull
xor
aad
push
mov
jg
fdivrs
push
fsubr
test
sarb
xor
sub
jp
mov
bound
cltd
add
pop
xchg
mov
mov
mov
aam
sbb
or
and
xchg
out
dec
out
iret
mov
lds
imul
insl
das
xchg
jnp
cmp
pop
movsl
ja
nop
mov
jnp
mov
add
out
pop
cmp
lods
xchg
cmp
dec
sbb
mov
pop
pop
mov
or
lret
pop
pop
jnp
mov
or
ss
fmuls
pop
test
adc
jmp
push
xlat
dec
test
push
nop
xor
xchg
test
inc
out
push
lahf
xchg
add
aad
xchg
xlat
dec
pop
and
nop
add
add
insl
les
mov
jae
test
jb
xor
add
xchg
in
xchg
loop
sbb
mov
lahf
lock
or
xlat
mov
add
out
pop
cltd
or
mov
inc
mov
xor
ljmp
xor
cli
jne
jne
insl
jp
or
sti
popf
jns
mov
loopne
and
mov
scas
aad
push
add
adc
ljmp
in
pop
test
jge
or
mov
inc
lock
sub
out
lret
inc
xor
lret
ja
paddw
sbbl
rorl
aad
aad
mov
dec
popa
mov
jns
daa
addb
mov
mov
repnz
ss
adcb
and
push
lret
ja
cmpsl
sub
jae
inc
xchg
mov
inc
dec
lea
outsb
jmp
add
aad
cli
and
scas
outsb
and
and
jno
mov
xchg
int
jp
mov
test
pop
pop
out
mov
cmc
mov
adc
and
xchg
cli
test
adc
or
dec
and
sub
push
adc
imul
pop
mov
pop
divl
sub
jns
mov
cmp
push
inc
dec
fiadds
mov
movsl
xchg
std
repnz
or
mov
xlat
dec
xorb
stos
in
xlat
jbe
sti
cltd
andl
jle
mov
mov
fists
sub
js
test
in
ja
jg
or
lcall
fimuls
inc
sbb
pusha
inc
inc
nop
mov
in
loop
mov
push
out
pushf
mov
dec
jo
call
icebp
sahf
jo
adc
imul
pusha
sti
sub
cmpsb
or
rorb
fadd
fcoml
iret
mov
mov
test
mov
mov
fistps
xchg
outsb
ror
iret
xor
add
xor
sbb
dec
idivl
sub
add
xor
inc
push
clc
stc
pop
outsb
repz
les
add
sahf
jcxz
xor
mov
xlat
cmp
imul
sbb
adc
xchg
cmp
sub
pushf
push
leave
dec
xchg
pop
fwait
push
dec
jne
and
pushf
sbb
or
or
cmc
push
test
popf
mov
fisubrl
mov
inc
add
movsb
inc
and
push
arpl
push
pop
icebp
dec
mov
imul
inc
add
stc
and
sahf
loopne
dec
ljmp
cwtl
pop
ficompl
mov
sub
adc
inc
pop
jp
push
jle
call
dec
mov
in
xor
leave
shlb
shrl
xor
lahf
scas
push
or
jo
stos
and
imul
iret
xor
leave
mov
xor
ljmp
lods
mov
loop
mov
cltd
pop
push
stos
sbb
xor
scas
aas
push
les
popf
mov
jne
push
pushf
jne
movsl
pop
fwait
push
push
add
les
mov
lret
inc
es
lods
add
mov
jecxz
cmpsb
lods
xchg
mov
in
inc
jns
xchg
andl
in
iret
insl
in
push
inc
and
mov
enter
aam
bound
add
mov
scas
in
insl
bound
dec
xor
pushf
jne
jge
pop
mov
xchg
cmp
add
dec
lods
sbb
push
sub
daa
push
dec
movsb
fdivrs
lock
add
inc
mov
in
test
insb
xor
or
lahf
inc
mov
cmpsl
cmc
add
in
sub
push
push
push
in
push
sbb
inc
jb
sbb
inc
xor
mov
insl
mov
inc
pop
add
stos
stos
jp
or
xchg
inc
xchg
adc
inc
dec
jmp
repnz
pushf
inc
add
gs
cs
add
fidivrs
xchg
xchg
and
sub
mov
lcall
mov
or
add
cmpsb
outsl
inc
in
andl
stc
nop
movsl
fdiv
mov
jle
sub
add
in
repz
subb
xchg
aaa
sbb
imul
test
dec
scas
fsubl
cmp
push
fidivrl
mov
push
mov
test
hlt
cmp
jo
hlt
adc
lahf
incb
add
dec
movsb
stc
add
adc
adc
mov
push
jg
or
imul
xor
push
or
fbstp
pop
adc
dec
xor
nop
dec
insb
xchg
push
cmp
cmpsl
arpl
sti
cmp
test
mov
push
ret
push
movsb
sbb
leave
dec
jo
pop
movsb
mov
sbb
push
pop
xlat
xchg
pop
cld
roll
inc
les
mov
repz
test
pop
sti
out
ds
xchg
mov
push
out
push
ret
std
jne
imul
in
cld
or
xchg
or
icebp
lds
adc
das
xlat
mov
rol
outsb
ja
arpl
repz
aam
jmp
sub
fnstcw
push
enter
cmp
test
shrl
daa
les
cmp
mov
mov
cmpsl
cmpl
in
mov
pusha
mov
jp
mull
fsubrl
ja
mov
jns
loope
iret
pop
pushf
sbb
push
pop
negb
jb
push
sub
popa
mov
push
sbb
fimuls
dec
cmp
push
clc
pop
inc
push
mov
rcll
xchg
jecxz
ds
and
in
test
popa
pop
mov
and
or
je
mov
adcl
idivb
shl
pop
pusha
and
or
xor
int
outsb
add
cmp
jg
jmp
sbb
mov
stc
and
xor
or
sub
lcall
test
lret
fnstcw
sti
paddusb
jle
adc
outsb
pop
pop
lock
xor
fsts
sti
and
mov
inc
mov
mov
enter
adc
jne
jecxz
sti
iret
fs
pop
imull
and
jae
inc
repnz
mov
scas
dec
loope
sbb
sti
jecxz
ds
jle
jns
inc
repz
pop
outsb
cld
add
push
jae
and
loopne
lret
sub
cltd
xchg
mov
adc
push
xorl
shr
inc
jno
fsts
out
xlat
fistl
push
out
mov
lcall
lret
push
test
cmp
jnp
lret
aad
cmp
cmp
dec
sub
sbb
inc
jne
xchg
addr16
daa
mov
cmp
lds
jnp
push
addr16
pop
inc
pop
aaa
mov
insl
add
add
lahf
arpl
mov
dec
stc
push
cmp
add
dec
cmpsl
xor
inc
dec
sub
mov
lahf
xchg
inc
pop
test
jnp
adc
jae
mov
out
and
data16
subb
cmp
test
repz
flds
test
pop
xchg
ss
scas
daa
stos
lods
roll
mov
cld
ret
mov
sbb
repnz
mov
scas
into
lock
out
adc
stos
xchg
leave
into
flds
gs
sahf
cmp
dec
sahf
shll
and
and
popa
lods
mov
sarb
imul
mov
cmp
cmp
inc
popa
mov
add
xchg
cwtl
test
cmp
dec
dec
ficompl
inc
sub
sbb
dec
push
and
int
xchg
fstpt
fildll
out
cmc
dec
shrb
add
loope
aas
push
or
enter
repz
test
cli
push
mov
les
in
dec
lock
push
sbbl
hlt
gs
into
xor
adc
dec
shl
lods
inc
add
test
lods
movsb
insl
sbb
xor
mov
outsl
mov
mov
sbb
fistl
fcom
cmpsb
loope
and
mov
fsubl
push
insl
test
sub
mov
cmp
pop
push
js
and
or
mov
inc
push
in
mov
adc
adc
das
call
imull
xor
test
mov
mov
xorb
outsl
xchg
addr16
arpl
xlat
mov
or
xor
shlb
das
or
mov
into
jne
icebp
jo
scas
dec
jb
movsl
prefetcht1
dec
imul
mov
mov
gs
or
sub
dec
test
or
mov
movsb
icebp
xor
mov
iret
popa
pop
jb
cmp
mov
inc
je
scas
sahf
in
add
cmp
repz
out
jno
loop
push
mov
sbb
and
push
aaa
dec
adc
nop
inc
nop
xor
sbb
jbe
sub
adcl
dec
pushf
mov
or
add
popa
mov
add
lcall
mov
sbb
idiv
mov
push
and
xchg
mov
sbb
add
push
adc
outsl
aas
sub
jae
sbb
inc
fwait
jbe
adc
les
pop
sub
lea
sbb
roll
enter
and
daa
jmp
xchg
adc
or
add
sbb
lret
xor
lods
dec
dec
repz
lahf
int
sbb
adc
into
and
add
mov
xor
sbb
or
lcall
notl
mov
stos
cmpsb
push
in
rclb
mov
rolb
imul
loope
loope
jmp
and
out
addl
dec
fs
push
sarb
pop
push
idivl
mov
fyl2x
outsl
mov
fistpll
sub
sbb
xchg
je
movsb
or
and
lret
fs
rorb
adc
roll
cmp
xchg
mov
jge
jne
lods
lcall
test
in
push
jmp
or
or
push
mov
mov
pop
jbe
lahf
clc
push
adc
xor
aam
aas
mov
pop
mov
bound
dec
or
cwtl
push
pop
push
pop
add
adc
pop
cmp
push
fimull
mov
ds
jge
adc
mov
aaa
sub
jl
xor
mov
jmp
int
push
cmc
hlt
out
scas
mov
adc
je
jle
fstpt
popa
movsb
push
push
sub
into
shr
jae
xchg
clc
jge
mov
daa
sub
and
add
out
shll
pop
loop
or
sbb
das
lahf
cli
and
shrl
ds
inc
aam
push
dec
enter
addr16
lcall
mov
pop
push
addl
and
movsb
xchg
push
inc
or
lahf
pop
clc
mov
dec
mov
cli
pop
outsb
sub
rorl
aad
jecxz
cmp
lret
cld
repz
mov
out
dec
cmpsb
jg
sahf
add
mov
push
shlb
mov
add
or
lea
inc
scas
mov
lods
int3
das
inc
jnp
cltd
out
inc
test
je
das
mov
cmc
mov
cwtl
cmp
test
mov
je
lock
jnp
cs
adc
inc
bnd
mov
mov
mov
jbe
shlb
sbb
filds
out
sbb
insb
ret
movsb
shrl
outsl
sub
xchg
out
pop
add
mov
test
xor
aad
add
mov
cwtl
xor
pop
cli
outsl
and
in
jge
jae
jp
int
jmp
mov
es
sbb
hlt
nop
lock
fs
gs
and
imul
mov
repz
pop
lret
push
sarl
lret
push
in
loop
addl
push
das
insb
mov
mov
lret
lcall
inc
pop
sub
and
sub
dec
add
incb
push
in
insl
ret
mov
dec
or
sub
les
sub
into
mov
in
mov
inc
lock
gs
push
cwtl
aaa
aad
paddb
cmpsb
iret
sub
sub
adc
xchg
sbb
ss
mov
or
js
push
inc
rcr
mov
in
clc
aad
data16
mov
pusha
jnp
mov
cmp
pop
xor
push
inc
mov
insl
ror
jge
je
mov
fwait
inc
cmpsb
jo
xor
or
add
mov
fcomp
fidivrs
loope
rcrl
sbb
push
adc
loop
mov
test
stos
sbb
xor
leave
push
add
cltd
movsb
aad
inc
or
xchg
cmp
xor
sbb
and
sbb
js
lcall
jbe
push
gs
outsl
inc
sub
ret
or
dec
shlw
jle
in
jp
vshufps
daa
nop
xchg
std
movsl
xchg
jl
pop
outsl
cltd
aaa
mov
sbb
or
iret
mov
mov
push
popf
and
aas
add
xchg
sti
popl
lret
test
dec
xchg
cmp
pushl
cmp
stos
pop
xlat
fstpl
mov
dec
xchg
outsb
jl
adc
cmp
fsub
gs
jecxz
les
fsubp
cmpsb
adc
sbb
add
or
add
add
mov
dec
mov
adc
add
imul
mov
addb
push
pusha
xchg
add
or
fidivl
xor
notb
sub
push
int
filds
mov
push
and
push
push
out
lahf
int
push
stos
cmp
sbb
mov
pop
mov
sbb
test
lock
mov
orps
repz
cmp
or
fdiv
sbb
xchg
adc
outsl
inc
incl
dec
cli
mov
rcrl
dec
push
jp
push
int3
insb
pop
cmp
test
add
mov
loop
dec
push
mov
xchg
pop
scas
mov
fndisi(8087
adc
dec
add
adc
sbb
dec
outsb
mov
jle
xchg
xor
sahf
cmpb
insl
pop
xor
cmp
fnstcw
fistpl
jecxz
mov
mov
and
repnz
mov
push
aam
mov
and
bound
pusha
pop
repnz
daa
jo
push
movsb
lret
shll
xor
fwait
cli
lahf
push
nop
mov
jno
sbb
cltd
jne
push
inc
cltd
mov
jg
fisubrs
aaa
popa
icebp
cmp
and
push
mov
cmp
pop
push
add
sbb
jg
mov
fadd
push
popf
dec
movsb
cs
adc
nop
adc
lcall
jne
fadds
fwait
test
mov
push
dec
xor
jb
fwait
xchg
outsb
dec
mov
clc
mov
xchg
ja
subl
cmpsb
inc
sub
mov
cmp
cld
adc
fcompl
push
sahf
out
imul
out
das
xor
frstor
xchg
mov
jmp
repnz
xor
bnd
mov
push
jbe
repnz
dec
jg
repz
sub
aam
mov
orl
mov
inc
sbb
xlat
sub
push
xchg
daa
push
push
add
mov
add
sub
adc
add
cmp
cld
xor
imul
pop
pop
lcall
mov
push
aad
pop
or
dec
pushf
mov
sarb
popa
or
lret
dec
cmp
test
fadds
xor
push
outsb
push
push
lcall
out
stos
je
jbe
adc
loope
push
dec
fnstenv
and
pusha
shl
push
repnz
jo
mov
movsl
mov
fsts
lods
and
incb
pop
fdivr
push
sbb
ret
or
rcl
pop
mov
push
cmp
adc
jg
repz
cmp
adc
adc
outsl
js
je
sahf
and
mov
dec
xorl
mov
push
jo
mov
cltd
lods
mov
mov
jge
pop
pop
pop
call
push
pop
and
lds
in
mov
pop
jbe
and
inc
aad
xor
lar
jg
jl,pt
mov
fsubr
mov
xchg
inc
rcrl
lahf
mov
cmc
xlat
xor
scas
push
out
imul
pop
clc
or
add
cmc
mov
scas
jle
mov
fcom
adc
pop
mov
xor
push
fcomi
sub
or
sbb
sub
jns
jp
mov
aam
mov
out
cmp
lods
xchg
ss
jbe
pop
addr16
jne
rorl
sub
sub
push
mov
bound
and
imul
xchg
lahf
fbstp
ljmp
mov
xor
jmp
or
lcall
sub
sbb
push
mov
mov
dec
in
mov
mov
push
pop
rcr
mov
xchg
aad
xor
push
pop
xor
jge
sbb
sbb
sahf
pop
push
inc
pop
sub
je
test
pop
sbb
cmp
in
and
lods
aaa
aaa
das
xor
sub
lahf
ljmp
fcoml
sbb
push
jne
iret
dec
es
and
nop
xchg
movsb
xchg
xchg
ljmp
aas
push
dec
aam
movsl
je
sbb
sub
sti
cmpsb
test
xor
ret
mov
cmp
sbb
xchg
sbb
mov
inc
lods
pop
popf
cmpb
push
dec
rcrb
cmc
lret
dec
sbb
mov
xchg
int3
in
mov
xchg
hlt
dec
aam
stos
rcrb
sbb
mov
mov
dec
scas
xor
ret
pmaddwd
dec
lock
mov
jb
shlb
icebp
xlat
mov
xor
push
rcrl
repnz
loope
loopne
aas
shll
jg
test
in
add
lret
mov
push
dec
sahf
jnp
jo
dec
mov
xchg
xchg
mov
loopne
dec
int
xchg
ja
mov
adc
mov
imul
dec
xor
cld
cmp
outsb
inc
sub
into
add
mov
je
dec
push
adc
push
test
add
cmp
insl
lea
mulb
and
enter
rclb
mov
dec
dec
adc
nop
cmpsl
xlat
push
xor
roll
mov
mov
inc
mov
xor
and
mov
aam
testb
repnz
scas
cmp
push
pop
cmp
iret
sahf
add
jle
pop
mov
add
sbb
xchg
out
xchg
jl
daa
cli
lds
imul
xchg
mov
sub
ja
out
push
add
add
mov
lret
mov
mov
cmpsb
mov
cld
sti
or
inc
fisttpll
out
lea
repz
fs
jo
mov
add
lock
sarb
xor
mov
mov
aaa
xchg
mov
stos
cmp
rorb
loopne
aad
mov
inc
pop
ret
dec
jb
mov
sti
pop
fsub
mov
ljmp
shll
cmp
aas
rcll
push
fistpl
cmp
mov
push
jne
rorl
cmp
push
je
cmp
les
mov
outsl
sub
fbld
mov
dec
shlb
xor
sub
mov
adc
push
ret
adc
ljmp
dec
gs
or
add
cmp
lea
outsb
sub
cld
cmc
sub
dec
jnp
lea
int3
int
cmp
movsb
shlb
pop
pop
ss
lcall
inc
push
inc
inc
dec
pop
std
xchg
lret
test
dec
mov
out
adc
cmpsb
out
add
add
or
pop
cltd
rcrl
add
add
iret
cmp
shrb
push
mov
int
mov
adcl
push
lock
pop
popa
icebp
cltd
rcll
and
fwait
int
aam
push
mov
sub
out
xchg
test
xlat
xlat
imul
cmc
mov
outsl
push
imul
pop
or
enter
add
adc
push
jo
sbb
outsb
xchg
push
inc
jl
cs
cmpb
or
cmp
mov
lret
jno
cmp
mov
pop
inc
sbb
movsb
pop
arpl
fsqrt
push
in
jns
into
jnp
daa
dec
lea
mov
pop
icebp
lods
mov
inc
mov
pushf
adc
inc
dec
sub
and
loopne
cmp
cmp
xchg
lret
xorb
jge
out
cld
stos
incl
jl
mov
gs
lods
jbe
and
nop
and
lret
xorb
lret
push
das
ss
sahf
jecxz
push
and
stos
mov
cmp
test
mov
shl
dec
pop
xor
xlat
pop
pop
adc
aam
or
stos
orl
xchg
sub
std
fs
cltd
shl
out
xorb
xor
jp
daa
sbb
aas
xor
int
std
rcrb
insb
test
andb
adc
clc
pop
adc
sub
fwait
cli
mov
or
jg
mov
xchg
sti
jg
adc
inc
lahf
mov
loop
jbe
cmp
pop
or
lods
ret
mov
jns
xchg
push
shrl
fistpl
jmp
test
repz
testb
mov
incb
pop
xchg
xor
adc
insl
test
aam
push
and
cmp
cld
add
cmp
push
in
int3
push
mov
lcall
insb
mov
aam
fucom
cmpsb
add
adc
fimuls
outsb
mov
dec
mov
or
int3
scas
mov
sub
xchg
jge
sahf
sub
iret
addl
idivb
cmp
add
push
mov
adc
add
aaa
cmp
dec
xor
inc
push
inc
out
sub
into
dec
jle
aas
mov
ret
xlat
jl
mov
dec
dec
sbb
fdivrl
repnz
cmp
popf
clc
push
stc
or
jp
mov
test
xchg
aas
data16
out
or
out
or
jbe
std
push
cmp
sbb
xchg
pop
add
repz
sub
xchg
ljmp
or
sahf
popf
inc
adc
out
in
push
and
jl
sbb
cli
dec
cmpsb
icebp
stos
xor
daa
cltd
adc
aas
add
movsb
sahf
jb
push
sub
push
or
sbbb
jg
nop
cmpsl
je
pop
adc
jge
cwtl
mov
fisubrl
lea
aad
sub
int
and
fnstenv
into
mov
jl
sysexit
fistpl
mov
add
and
add
in
cmovne
mov
xor
ret
aam
fsts
lahf
push
enter
add
in
sbb
or
xchg
push
loope
fcompl
rolb
repz
or
fbstp
es
movsb
mov
enter
sub
sbb
ljmp
pop
std
xor
cmpsb
mov
cmp
into
push
ljmp
aaa
out
xorb
sahf
adc
push
clc
adc
les
test
decb
cld
cld
or
ret
mov
inc
test
inc
ds
dec
pop
xlat
fsts
leave
fidivrs
inc
cld
push
cwtl
mov
mov
lea
jge
dec
adcb
std
in
lods
stos
call
pusha
fldl
mov
ljmp
jg
pop
push
add
pusha
sub
in
ret
add
lcall
in
cmp
mov
pusha
in
je
mov
cld
push
push
pop
gs
sbb
sub
insl
mov
pop
fwait
enter
lret
pop
sbb
jecxz
adc
adc
sbb
mov
icebp
popf
mov
sahf
imul
into
int3
xor
jmp
dec
adc
fs
mov
loope
add
int
repz
cmp
je
ja
xlat
mov
add
dec
add
mov
ja
popf
stc
ret
pop
xchg
cmpsb
push
pop
sub
cmp
nop
add
psraw
mov
hlt
push
or
xchg
hlt
movsb
std
sbb
cmp
xchg
inc
mov
loope
outsl
push
cwtl
cmp
cwtl
std
aas
testl
push
sahf
add
test
int
popf
pop
cli
cmpsl
adc
mov
push
lahf
mov
mov
in
movsl
dec
int3
fstpl
and
mov
loope
xchg
xlat
adc
cli
mov
sti
mov
popa
addr16
sub
lods
scas
push
stos
cmp
mov
mov
dec
mov
addr16
push
and
sbb
mov
imul
xchg
aam
adcl
cmp
outsl
sub
pop
inc
push
cmpsb
and
into
and
movsb
xchg
and
scas
pop
xchg
jmp
xchg
sbb
in
inc
into
pop
cmc
aam
stos
fisubrs
or
sub
divb
movsl
mov
jne
adc
call
insl
mov
mov
pop
pop
push
push
subl
arpl
lock
pusha
sub
push
in
inc
pushf
xchg
xchg
xor
aas
call
in
inc
popf
cmc
pushf
vunpckhpd
ret
call
pop
test
mov
mov
inc
pop
pop
or
ss
fisubrs
jp
fbld
in
cs
jmp
loop
xor
sub
adc
pop
popf
push
inc
cmp
mov
out
mov
add
addb
cli
testb
inc
sub
enter
gs
pop
xor
jmp
or
lea
mov
fstpl
pop
les
pop
jle
imul
jl
push
add
sti
or
lea
cmp
gs
cltd
mov
mov
mov
daa
fidivs
repnz
jecxz
sti
std
outsl
pusha
call
add
mov
fistpl
pop
xor
cwtl
or
arpl
xchg
jp
mov
mov
int
stos
xchg
push
or
push
cmp
mov
fidivl
aad
je
push
bound
insl
pop
inc
push
jns
into
enter
xchg
call
pop
sub
nop
fidivrl
aaa
push
loop
jae
nop
mov
or
out
xor
icebp
xchg
cmp
pop
lods
and
mov
cmpsb
imul
mov
adc
and
xor
fcmovne
sbb
add
sub
jmp
mov
orb
gs
inc
push
add
imul
push
pop
jmp
in
adc
or
loope
pop
sbb
or
gs
jae
ret
jge
and
and
test
mov
jp
xchg
cmp
imul
addr16
jns
ja
cmpsb
sub
ja
pop
pminub
sbb
cmc
xchg
mov
or
arpl
pop
dec
adc
test
and
pop
dec
jb
inc
out
addr16
cli
cmp
mov
gs
out
mov
or
ja
xor
mov
hlt
inc
and
int
pushf
das
or
xchg
mov
adc
inc
xchg
or
mov
and
push
and
push
adc
repnz
jge
shrl
sub
xor
add
adc
mov
ret
in
lock
out
adc
repnz
jns
jnp
adc
das
in
jle
and
xchg
cmpsb
dec
stos
outsb
push
in
shr
xor
cmp
int3
or
jo
mov
sahf
imul
imul
jns
adc
stos
icebp
sub
cmpsl
daa
push
mov
aaa
fisttpl
pop
stos
mov
sub
mov
jge
xchg
sbb
std
adc
aas
push
popf
inc
lcall
cld
pop
sarl
inc
adc
insl
nop
jecxz
dec
jp
cli
mov
ror
aas
dec
mov
ret
push
pop
shlb
test
pop
adc
mov
sti
data16
jg
adc
cmp
into
ja
push
adc
pop
pop
ror
in
mov
jo
std
int
call
shr
push
and
insb
les
dec
push
and
mov
dec
outsb
mov
sub
mov
scas
mov
fldcw
push
sbb
repz
cmpsb
jg
ret
jmp
pop
movsl
dec
pop
shrb
or
dec
pop
fmul
jmp
mov
or
pop
dec
popf
and
imul
xchg
insl
frstor
mov
push
pop
jmp
jg
jb
nop
pop
and
lret
ret
sbb
mov
sbb
mov
cwtl
xor
insb
mov
in
jnp
jmp
imul
pop
movsl
jge
inc
ret
js
cmp
fucomi
lret
shl
inc
scas
mov
xor
mov
xchg
icebp
loope
lods
loope
orb
mov
mov
ja
loope
jecxz
jmp
xor
pop
scas
das
cwtl
or
repz
lea
mov
mov
lods
into
xor
out
dec
pop
push
fst
cmp
mov
jp
jp
jge
js
and
cmc
bound
hlt
lds
mov
pop
sbb
add
data16
xor
adc
mov
popa
dec
imul
adc
mov
aaa
xorb
dec
dec
push
push
xor
sub
fisubl
rol
ret
xchg
movsb
lcall
clc
bound
inc
cmpsb
fs
xchg
movsl
dec
adc
jns
call
dec
pusha
sbb
sbb
neg
fisubrs
xor
fdivrp
outsl
jmp
pop
hlt
jg
pop
fldt
clc
rcrb
ljmp
rorb
mov
xlat
les
gs
int3
out
mov
in
mov
int3
js
sti
push
mov
loop
aam
mov
ret
fs
jno
sub
bound
mov
ljmp
xor
cwtl
dec
fstl
enter
pushl
mov
aam
cwtl
ret
xor
sbb
cmpsl
or
and
adc
cld
push
dec
cmp
icebp
push
sub
es
stos
aad
hlt
push
stos
mov
jae
arpl
sbb
repnz
push
dec
cmpsl
and
fimull
xor
hlt
int
sub
dec
inc
xchg
or
pop
nop
daa
data16
iret
rorb
jl
xchg
adc
test
ljmp
imul
push
dec
es
inc
enter
lret
pusha
mov
test
jns
mov
roll
jg
addr16
pop
clc
mov
cmp
and
add
jne
and
inc
faddp
push
popf
push
inc
adc
pop
pop
mov
je
inc
call
ret
popf
enter
fwait
cmp
inc
les
jl
or
popa
dec
sbb
loopne
and
loopne
pop
mov
mov
mov
push
stos
shl
add
mov
add
sub
mov
test
pop
cld
rcrb
mov
cmpsb
imul
mov
sub
adc
pop
mov
cmpsb
lcall
stos
pop
cmpb
ja
jl
mov
fsubs
insb
cmpsb
repz
dec
pusha
and
push
es
xor
jle
mov
lahf
cld
add
es
mov
cmp
cmp
int
add
sbb
mov
mov
lret
mov
out
outsb
sbb
push
dec
or
ljmp
loopne
mov
js
xchg
icebp
xor
sbb
push
sbb
add
pushf
ljmp
jnp
mov
loopne,pt
xchg
cmp
mov
imul
push
pusha
mov
cmpsl
je
xchg
nop
fs
fdivs
adc
test
jo
js
push
in
dec
push
insl
sub
in
push
sub
popf
bound
int3
xchg
mov
adc
movsb
cmp
mov
imul
imul
jb
arpl
rol
dec
xchg
adc
clc
faddl
and
fwait
movsb
or
adc
adc
xchg
mov
cmp
js
rcl
sub
in
mov
and
jmp
jle
xchg
and
add
pop
dec
sbb
pop
cmpsb
mov
dec
nop
jnp
inc
sub
and
sub
push
or
jne
stos
in
loop
cld
mov
outsb
adc
mov
nop
mov
sbb
fdivrs
sbb
xorb
cld
jp
mov
jmp
mov
sbb
mov
cmp
sub
lahf
adc
or
push
loope
lret
jbe
ljmp
test
cmc
daa
pop
faddp
jne
xlat
out
mov
scas
data16
fldt
int
push
and
adc
mov
pop
dec
pop
pop
addr16
adcb
rclb
mov
andl
ss
xchg
pop
pop
movzwl
xlat
sbb
mov
loop
repz
add
jp
dec
sahf
cmpsb
jle
jb
mov
js
pop
dec
test
xchg
inc
mov
mov
test
aaa
cli
mov
stos
push
insl
rorl
pop
pusha
adc
add
add
jle
ret
repz
std
jle
loope
mov
inc
out
stos
pop
add
imul
dec
sub
sti
lock
sbb
xchg
int
sbb
pop
push
and
mov
in
cmp
in
into
mov
imulb
adc
cmp
push
mov
incl
mov
sbb
sti
mov
gs
mov
in
mov
call
mov
testw
stos
adc
push
lods
cmp
ret
xor
mov
repz
ds
sub
cmpsl
push
add
sbb
jbe
pop
sbb
jbe,pt
loopne
pusha
call
sar
lds
cmp
imul
in
adc
in
test
sahf
jmp
pop
aad
pusha
cmp
loopne
push
pop
xor
imul
inc
jmp
xchg
fsubrs
and
adc
stc
into
mov
enter
mov
sbb
mov
and
mov
add
sub
mov
add
in
call
notb
xchg
into
jmp
fwait
add
fs
jg
roll
negl
in
push
sti
movsb
mov
test
and
ss
inc
es
jne
mov
or
adc
and
or
push
in
and
sbb
jo
push
xchg
push
mov
xchg
scas
jb
cmpsl
mov
cli
add
mov
fisubs
fwait
add
nop
inc
pop
das
xor
sbb
mov
jne
cmpsb
ret
cmpb
out
push
movsb
dec
ret
lret
dec
enter
sahf
pop
jno
enter
dec
lret
out
nop
mov
add
bound
loop
xchg
movsl
mov
sub
rcll
std
imul
sbb
mov
es
add
push
rcrb
gs
roll
loope
push
scas
aad
bound
das
fdivl
xor
leave
sbb
dec
aam
ret
push
add
lret
popf
mov
or
divl
inc
sahf
fnsave
push
mov
push
ja
dec
cmp
out
jbe
in
aas
sbb
lds
repz
lahf
cmp
mov
push
test
cwtl
adc
stc
sbb
pop
outsb
dec
push
ds
shr
mov
xchg
repz
lock
sub
test
xchg
popa
mov
pop
cmp
sbb
cmp
add
popf
and
pop
je
jmp
in
and
shll
jnp
xor
pop
jmp
ss
inc
sub
jp
dec
movsb
sbb
adc
nop
js
lahf
push
inc
xchg
cltd
or
jmp
pop
sbb
popa
insl
stos
jle
add
jne
jno
push
aas
jg
add
scas
std
int3
std
pop
fists
xchg
popa
jno
test
and
fwait
repz
add
cli
mov
sub
push
or
imull
fimuls
pusha
fld1
xchg
jl
mov
cmpsl
jp
insb
add
in
xchg
mov
add
push
imul
mov
stc
mov
pop
insb
ret
repz
pop
int
jbe
sbb
aas
mov
stos
add
adc
or
test
lret
mov
push
imulb
push
jl
jbe
loopne
ss
fld
nop
adc
fistl
cmpb
dec
iret
mov
sbb
adcb
push
movsb
icebp
insb
mov
mov
mov
js
mov
repz
fsubrp
jbe
bound
sbb
mov
add
jge
sub
mov
std
clc
jbe
push
arpl
sahf
mov
cmp
ljmp
pushf
pusha
mov
fwait
xlat
into
out
fldt
addr16
cld
inc
pop
cmp
imul
and
jbe
pop
fdivl
cld
mov
mov
daa
ja
adc
popa
jne
push
and
sub
lds
in
sbb
add
cmp
mov
and
add
xchg
cmp
and
jne
in
pop
in
jb
adc
cmc
pop
test
fwait
bound
and
lock
mov
xchg
xchg
cmp
repnz
mov
xor
in
mov
rorl
cmp
lock
aad
sar
and
jge
sub
jb
add
cmp
xchg
dec
shlb
mov
xchg
xchg
arpl
roll
jns
stos
mov
and
incl
jp
cmp
adc
jb
addr16
jb
in
cmp
mov
jp
daa
loop
jmp
pop
fbstp
jno
jnp
pop
cmpsb
in
std
test
aam
and
push
popa
mov
popl
sub
clc
mov
mov
add
push
in
dec
fwait
mov
mov
sahf
cmp
or
mov
fmuls
addr16
xchg
insb
rorl
sub
push
out
mov
add
jo
hlt
xchg
add
pop
or
lahf
and
cltd
adc
inc
imul
inc
adc
lahf
xlat
std
cmp
shl
gs
cmp
pop
test
mov
pop
mov
cmc
push
mulb
idivb
jae
and
push
ja
mov
movsb
ss
movsb
lock
dec
leave
daa
decl
mull
call
test
imul
ret
inc
mov
push
out
fcoms
adc
in
out
dec
stc
sbbb
inc
lret
fdivl
jmp
and
in
es
sub
cwtl
dec
psubsb
stos
pop
sbb
lret
les
lds
push
ljmp
jg,pt
push
cld
sahf
test
int3
pop
jno
lock
cmp
adc
fbstp
xchg
and
mov
insb
jmp
fidivrl
in
sti
adc
repz
pushf
out
pop
mov
cmp
test
hlt
or
mov
or
mov
mov
mov
cmp
mov
or
aad
test
fmul
jecxz
push
mov
jmp
pop
pop
out
data16
out
mov
cmp
sbb
movsl
dec
mov
xor
inc
and
jno
add
insl
orb
ret
call
ljmp
add
es
arpl
mov
ds
push
push
aas
adc
hlt
loopne
dec
mov
mov
fsubrl
xchg
inc
mov
arpl
adc
int3
gs
push
dec
sbb
sub
sub
and
frstor
rolb
dec
mov
lods
sub
hlt
dec
push
mov
test
mov
int3
rorl
sub
jns
mov
pop
cmpsb
push
popl
sarb
pusha
orl
add
xchg
dec
idiv
sahf
out
or
cmp
aas
adc
add
add
jge
test
out
xchg
mov
jnp
movsb
xor
inc
mov
sbb
fdivp
pop
inc
add
cli
cmp
outsb
insb
xor
enter
rorb
jae
std
in
pop
mov
jnp
or
cltd
leave
mov
lret
or
sti
dec
pop
or
aas
leave
add
daa
scas
int
xor
pop
dec
cmp
sbb
int3
aas
testl
loopne
mov
mov
mov
xor
mov
loope
sti
inc
or
aam
sbb
dec
cmp
out
aas
mov
test
push
inc
mov
sub
sbb
js
insb
xor
cmpsb
push
mov
ja
aas
inc
pop
pusha
js
hlt
jne
lds
mov
sub
xchg
or
int3
in
fisttpll
and
outsl
inc
dec
or
fdivrl
nop
jbe
enter
out
cmc
push
mov
cli
lods
xchg
add
mov
test
dec
sti
idivb
stos
aaa
cld
jg
mov
mov
sbb
dec
das
adcb
jb
mov
imul
scas
gs
rcrb
and
or
and
or
push
imull
add
xchg
pop
or
loope
in
adc
adc
imul
aam
aaa
or
cld
scas
dec
shlb
sub
pop
push
mov
push
dec
push
or
cltd
jne
arpl
mov
xor
mov
sub
fdivl
xor
dec
push
lret
mov
sbb
lret
out
pop
in
or
frstor
xor
dec
jo
xchg
mov
pop
mov
cmp
jmp
ljmp
pop
gs
or
push
test
mov
cmp
out
outsb
fnsave
mov
jg
pop
fisttps
sbbb
out
mov
or
cmp
cmp
gs
std
out
push
mov
shll
or
jle
lods
shlb
and
test
add
aad
cmp
ljmp
sub
movsb
fidivl
jnp
ja
fmul
jae
dec
cmp
ljmp
and
inc
mov
js
xchg
cmpl
ds
mov
hlt
and
sbb
lret
stos
in
and
sbb
cmp
mov
mov
js
pop
rcrb
add
imul
mov
or
cs
push
jg
dec
outsl
sub
inc
jecxz
cmp
xchg
adc
xchg
sub
and
je
pop
pop
adc
xor
pop
add
shr
fisubrs
ret
cmp
mov
inc
pushf
sahf
mov
in
arpl
mov
sbb
inc
inc
ret
ror
pusha
mov
mov
mov
jmp
sub
xchg
sti
xlat
aas
jae
fcmovne
shlb
out
aam
neg
aad
mov
subb
insl
add
hlt
mov
sbb
mov
cmp
mov
mov
xor
fcmovbe
push
dec
pop
or
pop
data16
nop
outsl
scas
jge
mov
rclb
outsb
mull
push
outsb
jl
xchg
jg
imul
sub
mov
sub
iret
mov
fdivl
mov
cmp
xchg
ljmp
stc
push
push
xchg
scas
add
imul
mov
into
bound
nop
in
cwtl
bound
pop
dec
inc
enter
testb
stc
jle
push
add
int
mov
push
test
and
loop
mov
fwait
push
add
cwtl
cs
jne
fidivs
jle
pop
mov
lea
scas
pop
mov
mov
jae
ret
lods
je
jnp
popf
cmpsb
and
movsb
push
jo
xchg
xchg
insl
stos
popa
push
insb
xchg
cmp
push
jecxz
xor
cwtl
jns
xor
sarb
mov
divl
sub
xchg
xchg
jecxz
jb
repnz
xchg
out
or
dec
js
jge
test
into
xchg
adc
adc
fwait
lock
and
fldcw
mov
adc
sbb
inc
outsl
out
and
push
dec
aad
lahf
call
pusha
arpl
ds
inc
cli
fdivr
lock
loope
jo
jo
mov
push
fs
pop
push
ret
push
scas
adc
lods
fisttpl
add
jae
jo
xchg
push
push
inc
fldt
mov
cmp
fwait
ror
or
sub
adc
push
cmp
jge
pop
aaa
xchg
mov
or
insl
shlb
scas
out
xchg
movsb
cwtl
jae
fwait
or
insl
cmpsl
cmp
mov
fadd
insb
jnp
sub
loop
mov
shll
out
cs
mov
push
cmp
daa
push
cmp
push
sub
fninit
js
hlt
and
mov
fidivrs
sbb
sbb
xchg
fldl
cld
stos
pop
hlt
pop
jg
pusha
mov
pop
stc
inc
lock
push
jmp
sti
into
pop
or
sub
add
int
je
sub
repnz
loope
dec
mov
vcmpps
and
pop
lcall
jge
sbb
xor
cmpl
test
xchg
clc
dec
inc
add
in
push
xchg
or
call
push
pop
mov
ds
dec
fimull
cli
jmp
pop
clc
iret
scas
cmp
call
add
js
cwtl
fwait
sbb
push
jl
and
sub
mov
jne
add
add
mov
pop
call
mov
iret
les
je
add
les
test
and
jbe
sbb
sub
jmp
std
cmpb
test
popa
or
xchg
inc
popf
jnp
mov
mov
lods
mov
in
insl
cmp
fmuls
mov
sbb
xchg
pop
repnz
inc
test
rol
mov
mov
lods
and
pop
or
imul
jle
loop
cmp
popa
pop
cmp
mov
data16
imul
xchg
clc
mov
or
sbb
cmpsl
cmp
shll
mov
test
jle
ja
dec
adc
cmc
inc
inc
mov
faddl
fs
stc
jl
mov
je
cmp
shlb
xchg
pusha
ds
mov
cld
sbbl
out
pop
test
sar
xchg
loop
mov
stc
xchg
push
fcom
or
push
jmp
mov
data16
mov
add
add
shlb
jg
stc
ficoms
inc
and
es
pop
jl
add
imul
dec
sbb
addr16
sbb
call
arpl
mov
incl
dec
dec
jno
inc
repnz
add
in
scas
and
std
iret
inc
pop
out
cs
clc
and
lcall
mov
call
leave
and
cmp
enter
loopne
inc
cld
sbb
mov
or
cmp
aad
xchg
cmpb
int
mov
lret
sahf
aam
push
ret
test
jo
idivb
mov
jae
jbe
je
jg
lds
es
xor
outsl
aam
ret
dec
xor
ja
data16
pop
and
add
cmpsl
inc
faddl
push
je
xchg
lret
cld
mov
aad
or
stos
outsb
lods
out
pop
sub
int3
fidivl
mov
mov
inc
stos
dec
stos
insl
leave
mov
in
push
or
jns
jo
mov
in
outsb
mov
rol
nop
ja
loopne
pushf
scas
mov
loop
cmpsl
adc
js
jo
stos
add
dec
push
movsl
mov
pop
mov
icebp
inc
pop
xchg
aas
pop
out
xchg
fldcw
rolb
test
ret
inc
hlt
adc
adc
xchg
scas
inc
mov
add
shrb
ss
in
fnstsw
out
inc
notb
pushf
movsb
push
loope
shrl
pop
jo
adc
pop
pushf
or
addr16
ljmp
jecxz
xor
inc
cwtl
pushf
cld
add
dec
jnp
mov
pop
cmp
jmp
pop
xor
fadds
sbb
scas
mov
mov
dec
pop
jno
repz
ljmp
loopne
test
sub
data16
dec
sbb
push
imul
stos
push
mov
lea
xchg
test
int3
fistps
fiaddl
pop
daa
movsl
jns
xchg
sarl
aad
add
outsb
imul
inc
rorb
mov
inc
in
in
les
jmp
adc
lea
push
push
push
loopne
sub
xor
fistl
dec
out
adc
inc
dec
jno
dec
into
inc
mov
rorl
pop
dec
cmp
outsl
cs
inc
adc
push
cli
dec
mov
adc
cltd
mov
shlb
dec
sbb
fstl
insl
xchg
lock
iret
daa
fldt
shl
in
mov
cmpsl
in
add
out
mov
or
or
inc
xor
lds
pavgw
lock
push
repz
out
lods
jbe
add
loope
xor
sub
push
adc
test
leave
test
mov
ljmp
ret
jbe
loopne
add
loop
nop
pop
negl
gs
jo
push
xchg
sahf
cmp
rcrl
fwait
jge
mov
pop
lea
ja
mov
sub
push
inc
adc
shlb
cmp
cwtl
xchg
add
out
ljmp
sub
and
pop
xchg
jnp
sbb
shlb
push
fistps
push
das
push
and
stos
push
jne
mov
cmp
mov
adcl
pop
or
leave
mov
xor
xor
in
pop
popf
rcrb
xchg
jb
add
push
mov
cmpb
lods
mov
movsl
cmpb
add
cli
sbb
dec
cmp
mov
inc
push
xchg
scas
cmp
mov
fcoml
popl
addr16
mov
jecxz
int3
mov
fs
adc
sbb
mov
ja
out
mov
arpl
test
loopne
xlat
adcl
jge
xor
mov
ljmp
xor
nop
push
mov
mov
or
mov
cld
sbb
in
push
clc
and
aas
jne
jne
clc
in
adc
mov
pop
int3
cmp
stc
dec
jmp
jns
mov
dec
gs
and
lcall
push
mov
repz
cltd
pop
mov
sbb
jecxz
inc
inc
mov
movsl
push
push
mov
mov
loopne
xchg
or
lea
test
xlat
inc
sbb
add
fcoml
xor
push
iret
subb
inc
lret
or
bound
push
mov
pop
enter
iret
clc
jne
out
push
jp
and
jo
ljmp
call
jecxz
sar
push
mov
call
mov
repz
jnp
xor
add
xchg
sub
push
jne
mov
bound
inc
jne
mov
xchg
dec
pop
mov
sbb
mov
and
lret
mov
jnp
enter
jno
mov
popf
mov
cmp
sub
nop
xorb
fst
cmp
inc
inc
push
loopne
into
scas
jecxz
into
and
xor
mov
add
xor
addr16
popf
lock
or
and
xor
rorb
insb
sub
loope
insb
repz
ffreep
xchg
dec
and
cmp
scas
jp
adc
fnstenv
nop
xchg
lds
enter
add
pop
stc
neg
mov
mov
mov
jbe
jge
cmp
cmpb
sub
cwtl
mov
dec
pop
inc
jg
pop
xor
stc
fwait
push
jne
js
mov
cld
nop
mov
outsl
outsb
lret
call
xor
imull
add
mov
mov
and
bound
cld
fsubl
movsl
out
and
loop
mov
stos
xor
andl
add
sbbl
pushf
pushf
mov
mov
fwait
loopne
mov
jp
fists
pushf
cmp
jmp
adc
stc
inc
adc
sbb
pop
dec
add
dec
scas
xor
scas
or
dec
mov
repz
cmp
shrl
icebp
nop
jo
aas
sbb
cld
or
leave
jle
sub
push
insl
stos
jmp
popa
jle
pop
xor
jns
push
aad
mov
or
mov
adc
lcall
outsb
push
adc
xchg
xchg
xor
icebp
and
add
in
movsl
test
adc
add
pop
inc
jp
aam
adc
enter
mov
fistl
fwait
scas
xchg
xchg
mov
mov
jno
in
jle
mov
arpl
inc
je
lods
into
int3
cmp
mov
rorb
testl
jb
enter
paddq
cmpsb
std
add
and
inc
enter
or
inc
dec
out
fmul
movsb
jmp
fldcw
inc
and
test
add
daa
and
mov
pusha
jbe
cltd
sub
jo
add
add
adcb
ret
fistl
mov
pop
mov
insl
jo
sbb
xlat
mov
lods
imul
xorb
push
push
push
sbb
sub
xchg
jmp
and
mov
and
leave
inc
jbe
push
fildll
or
pop
mov
jecxz
shrb
aas
mov
push
sub
mov
loop
fimull
pop
cmp
add
mov
inc
es
popa
in
stos
mov
outsb
cmp
lods
cmpsl
xchg
enter
cmp
push
rcll
cmp
pop
sbb
pop
adcl
sahf
mov
mov
adc
rclw
xchg
mov
pop
fstpl
insl
leave
mov
pop
mov
adc
movsl
inc
mov
addr16
inc
daa
loope
lcall
sbb
test
jae
cmp
pop
mov
es
sbb
xchg
mov
lret
push
mov
enter
les
cmp
pop
push
mov
and
int3
movsb
xchg
lds
ja
jns
fcoms
ds
sub
cmp
mov
pop
inc
ljmp
fisubrl
push
repz
lcall
hlt
fmull
inc
and
xchg
in
pop
aas
adc
ss
aas
lods
scas
sub
mov
jne
or
sahf
lcall
fsts
hlt
insl
test
xor
es
or
addb
pop
fsubs
lahf
xchg
dec
lret
fwait
mov
je
les
fiadds
dec
nop
jg
lret
jl
dec
repnz
bound
xor
in
adc
jp
jno
andl
jl
jecxz
mov
mov
lods
shl
or
sub
dec
xchg
loopne
push
jb
pusha
stos
sub
mov
inc
push
outsb
xchg
insl
into
jo
in
xchg
ds
mov
sub
cs
mov
leave
jl
push
and
jae
adc
lret
repnz
ret
in
xchg
xor
lods
aam
adc
fistpl
fcoml
sub
aad
jo
mov
push
xchg
roll
incb
or
sarb
add
inc
addr16
mov
cltd
xor
xor
add
xor
xor
push
ljmp
push
inc
mulb
popf
sub
push
push
scas
push
push
dec
and
loope
xchg
nop
mov
cmc
inc
mov
push
adc
mov
adc
je
loope
xchg
pop
jge
jle
loopne
popa
xor
dec
pusha
or
jg
sub
pop
push
sbb
mov
lret
stos
orl
inc
orb
fists
dec
daa
test
in
mov
out
rcrl
adc
je
sbb
es
pop
push
push
lea
mov
lods
mov
rorb
fmull
mov
xlat
iret
adc
cmpsl
lret
add
mov
adc
jecxz
lret
gs
out
in
mov
rorb
lods
jl
and
add
js
shrb
jmp
or
mov
sbb
jno
sub
shll
mov
xor
xor
leave
sar
xor
dec
jne
pop
rorl
mov
jmp
jns
xor
or
and
iret
scas
push
bound
pop
jo
dec
int
pop
test
popa
pop
f2xm1
scas
cmpsb
sbb
nop
or
pusha
scas
sbb
or
xchg
out
xchg
imul
jecxz
cvtps2pi
hlt
mov
mov
push
stc
insl
mov
mov
sub
pop
cmp
push
mov
scas
or
pop
aad
mov
xor
sahf
loope
addr16
pop
add
leave
push
aam
xchg
ljmp
lret
mov
out
mov
jb
jp
mov
in
mov
pop
cmp
cld
mov
into
jo
mov
test
movsl
xchg
mov
mov
imul
repnz
push
cmp
lea
xchg
dec
out
imul
push
xchg
cltd
decl
les
and
les
xchg
gs
cwtl
fsubrs
jp
mov
or
jmp
subb
test
in
sub
sbb
pop
aam
dec
andb
rcll
add
jg
pop
jg
lock
inc
movsb
jl
adc
iret
aaa
test
bound
pushf
addr16
sahf
fnstsw
inc
jns
lahf
push
ja
ja
pusha
jb
push
pop
pop
out
mov
or
orl
pop
jae
push
fcmovne
lret
popa
ret
add
jb
enter
test
sbb
stc
sub
lods
push
jbe
push
mov
sbb
mov
mov
push
sbb
in
cmp
subl
pushf
movsl
push
mov
add
into
sub
add
cld
shll
rclb
stos
pop
pop
fstpl
mov
sub
enter
adc
addr16
fistps
outsb
mov
test
adcl
inc
lret
das
mov
push
ja
mov
negl
mov
xchg
scas
ja
hlt
fs
xchg
dec
push
fistpl
faddl
dec
mov
lods
cmp
fs
push
stos
adc
inc
ss
rolb
ret
negb
mov
push
sub
cld
negl
les
fldcw
or
lret
jno
jle
pop
add
into
hlt
out
cli
std
aas
jae
loope
mov
int3
or
push
xchg
pop
dec
sbb
imul
inc
dec
jecxz
psubsw
sbb
insb
fcoml
ret
push
lret
pop
jo
sahf
inc
add
jb
fisubrs
icebp
dec
test
arpl
mov
fcoms
push
xchg
or
add
sbb
push
and
mov
or
pop
add
lahf
lcall
xchg
fistpl
aam
xchg
cld
test
cmc
clc
jbe
in
ljmp
or
out
bound
imul
push
out
fcoml
fcoml
imul
jmp
fdivp
std
sahf
jge
mov
shll
dec
xchg
push
push
adc
jnp
icebp
sbb
ja
aaa
mov
sub
iret
pop
push
cmc
dec
inc
testb
sbb
inc
pop
out
mov
js
push
mov
out
pop
mov
imul
fisubl
repnz
xchg
and
lods
push
imul
call
imul
push
popa
push
pop
jmp
jle
js
aam
push
in
and
add
imul
movsb
mov
cmp
rclb
subb
xchg
mov
in
mov
arpl
gs
add
pop
loop
fsubrp
fimull
cmp
mov
movsb
sub
mov
mov
arpl
push
inc
loop
jmp
cmp
push
hlt
push
dec
into
dec
or
hlt
push
mov
fistps
stos
push
cmp
and
xchg
mov
js
or
cwtl
lcall
mov
xor
add
dec
jmp
xchg
fs
jg
mov
gs
jae
or
cmc
ficompl
aaa
shl
call
aad
test
outsb
test
sbbl
sub
int
test
dec
xor
or
es
out
xchg
icebp
fucomip
cmp
clc
rcrl
inc
in
mov
or
sbb
mov
fs
adc
add
icebp
mov
and
mov
jnp
filds
push
xchg
xor
sbb
xor
mov
add
mov
ds
aas
ljmp
lahf
iret
jnp
ja
int3
dec
push
sbbl
sbb
repnz
mov
cmp
movsl
jns
cmp
lea
in
fisttpll
adcb
jl
pop
incl
mov
dec
jno
dec
mov
add
add
jge
xchg
mov
adc
mov
movsb
adc
out
xchg
and
and
xor
mov
pop
xchg
stos
or
dec
inc
shlb
dec
pushl
mov
push
add
lock
lcall
adc
pop
aad
les
cmp
pop
push
dec
lcall
pusha
mov
aas
jecxz
fisubrs
mov
cmp
int
std
mov
clc
pusha
sub
test
jbe
xchg
mov
data16
add
mov
add
ja
movsl
inc
jb
movb
mov
jo
adc
in
cld
adc
push
testb
jle
push
mov
mov
lock
push
arpl
xor
lret
mov
mov
icebp
jne
das
outsb
mov
adc
in
shrl
sub
in
test
pop
out
ljmp
jne
ss
xor
xchg
lcall
mov
mov
out
icebp
iret
dec
sub
arpl
test
push
mov
inc
adc
shl
out
scas
mov
insl
fwait
push
sub
int3
outsl
push
iret
pop
negl
ss
cwtl
mov
or
pop
xchg
ret
jmp
or
mov
push
mov
push
cli
mov
fxch
pop
sub
push
jb
loopne
push
mov
inc
inc
jp
mov
test
cwtl
pop
add
jno
pop
aaa
sbb
or
cmp
arpl
or
lret
test
mov
sbb
push
pop
cmp
sbb
inc
fimuls
dec
ss
mov
repz
outsl
test
mov
addr16
loop
test
int
or
pop
lds
mov
jg
mov
fldcw
mov
cltd
push
popa
fmull
mov
or
cmpsl
inc
sub
ja
sti
adc
fidivs
sahf
sar
out
fisttps
mov
lock
pop
push
hlt
pop
pop
mov
out
lods
fwait
jge
xor
jge
xlat
mov
add
push
in
mov
mov
shrb
in
or
fbstp
mov
in
aad
sbb
add
rcrb
adc
push
mov
mov
scas
mov
imull
sbb
push
mov
subl
loop
jmp
js
repz
mov
xchg
sbb
lock
dec
mov
xlat
lock
mov
fdivrs
sbb
int3
jne
mov
into
adc
push
jbe
xchg
adc
cmp
mov
rolb
out
ftst
imul
jno
or
ret
ret
and
push
pop
xor
into
or
lcall
xor
neg
in
dec
das
es
lret
sub
in
inc
sbb
mov
mov
ja
mov
adc
pushf
sub
inc
dec
cmpl
adc
adc
mov
mov
aas
nop
jmp
pop
lods
mov
cmpsl
adc
dec
sub
stos
pop
mov
bound
or
daa
or
xor
push
xor
jae
popa
mov
cmpsl
sbb
jge
push
aaa
jecxz
mov
pop
or
nop
or
push
rcrl
push
dec
fwait
jb
sbb
xchg
cwtl
cmp
mov
jbe
hlt
xchg
or
push
inc
repnz
inc
dec
stos
mov
mov
mov
jno
jle
jecxz
loopne
daa
scas
lret
push
mov
iret
test
das
mov
dec
mov
mov
leave
pushl
loopne
cwtl
adc
xor
sub
mov
fimuls
ret
push
fnsave
fwait
movl
lea
and
xchg
enter
std
in
js
dec
inc
loop
dec
mov
cmp
pushf
lock
shll
insl
dec
jno
adcb
shl
sbb
insl
in
mov
jmp
arpl
xchg
repnz
jl
lock
ja
and
lret
or
imul
sub
neg
dec
xchg
cli
daa
push
dec
stos
cmp
add
lahf
xchg
or
and
leave
call
enter
clc
jecxz
jns
pop
ret
sub
pop
xchg
insb
push
lahf
movsl
pop
sbb
xor
sbb
les
int
push
loope
movsb
stc
push
insl
xor
insb
outsb
ds
out
in
adc
and
inc
pusha
pop
jo
adc
cmp
mov
filds
lea
sub
mov
shrb
sbb
xor
dec
mov
jns
cmp
testl
rcr
clc
add
xor
fsubp
add
dec
dec
sysret
lret
mov
pop
inc
pushf
add
sbb
push
or
adc
jnp
xor
or
out
inc
cmpb
sub
mov
push
mov
sbb
movsl
cmp
dec
std
inc
cs
aaa
loope
sub
mov
add
inc
movsb
cmp
hlt
or
les
pop
in
jb
flds
fs
scas
inc
push
sbbb
cltd
cltd
push
jecxz
sub
idivb
cmpsl
inc
mov
sub
pop
cmp
ds
mov
inc
or
dec
dec
pushf
cmp
outsb
incl
sahf
xor
mov
push
mov
push
jmp
and
shrl
dec
inc
je
jbe
fdivl
addr16
sbb
xchg
add
add
test
mov
jecxz
arpl
push
shl
mov
add
imul
inc
imul
mov
xchg
jecxz
lcall
cmp
nop
lods
popa
dec
push
lea
lock
sub
pop
mov
dec
cli
psrlw
fisttpll
std
dec
xorl
mov
mov
add
call
or
push
mov
mov
lahf
mov
sti
push
sbb
cmp
je
pop
adc
fcomip
lcall
into
mov
cmp
push
sbb
cmp
outsl
js
popa
test
dec
mov
movsb
jp
pop
mov
imul
fwait
lret
or
imul
mov
and
push
xchg
sub
out
or
imul
xlat
jne
push
data16
and
je
movsl
leave
pop
xchg
ficoml
loope
jle
movsb
cld
shll
sub
jns
jno
xchg
cltd
in
fmull
push
pop
popf
or
cld
fsubp
push
cwtl
sub
cmp
test
mov
dec
inc
pop
fld
pop
add
sti
cmp
pop
fstps
or
iret
lret
popa
or
pop
and
sbb
jns
bound
sbb
mov
xchg
cltd
mov
sbb
call
cmp
mov
add
pushf
mov
add
jmp
push
mov
dec
jge
cli
jl
aaa
les
pop
cmc
jge
pcmpeqd
ds
dec
add
push
lahf
cmp
pop
sbb
fsubrs
dec
xor
sub
pusha
cmpsb
xchg
in
in
scas
fxch
inc
popf
pop
xor
and
pop
aas
sbb
ss
vaddsubps
sbb
test
mov
adc
sbb
mov
hlt
fwait
into
xor
ja
icebp
or
dec
pusha
lret
jo
jle
adc
adc
mov
inc
lods
inc
sarb
push
inc
leave
jmp
xchg
inc
sbb
cld
xor
loope
fwait
repnz
mov
and
xchg
loop
in
gs
repz
inc
subb
insb
pop
std
in
jle
push
repz
jge
out
aam
push
jmp
lcall
inc
push
pop
mov
mov
cmp
out
pop
mov
adc
push
xorl
mov
std
mov
dec
mov
inc
rorb
movsb
aaa
xor
stos
daa
inc
adc
jns
rorl
inc
addr16
adc
divl
cmpb
cmpsb
orb
pop
sub
sqrtps
cld
call
int
xchg
in
cmp
sti
in
stos
ja
sub
cwtl
out
lcall
jne
pop
pop
mov
cmp
scas
pushf
cli
inc
add
xor
adcl
mov
cwtl
clc
jo
or
sbb
cmpsb
mov
jnp
out
and
adc
loopne
add
mov
mov
aad
xchg
in
test
mov
fistl
xchg
idivb
jne
add
idiv
dec
xchg
sub
fnsave
pop
dec
jno
aad
mov
gs
nop
in
xchg
je
cmp
sbb
jo
cwtl
cmpsb
pop
fistpll
popf
clc
addb
cmp
jbe
fisubrl
jo
in
nop
ret
out
outsb
push
dec
adc
mov
out
cmp
loop
arpl
cmp
loope
xchg
repz
imul
shlb
ja
sub
jle
dec
shrd
in
add
cmc
popf
inc
rcll
mov
mov
push
jmp
aas
popa
mov
mov
testl
mov
mov
rorb
mov
push
add
in
sbb
stos
add
sbbl
insl
and
pop
xchg
in
or
mov
push
pop
and
xor
jmp
jb
mov
push
mov
pusha
and
pop
rcrl
push
cmp
pop
vsqrtpd
and
in
push
xchg
pop
ret
int3
cs
sbb
mov
mov
jl
sub
and
ljmp
rcrl
inc
insb
adc
sub
test
ss
testb
stos
inc
in
sbb
popf
mov
or
aam
imul
cmp
test
outsl
ljmp
push
roll
lahf
imul
divl
pop
pop
icebp
movsl
mov
stos
mov
mov
jge
outsl
rcrb
xor
cmp
jne
repnz
xchg
cmp
jl
inc
mov
arpl
jmp
aaa
sahf
add
pushf
adc
enter
pushl
test
sub
leave
out
pop
jle
faddl
cs
cltd
xor
mov
or
mov
inc
push
mov
mov
xor
xchg
mov
push
ret
jb
dec
sbb
adc
aam
adc
ds
push
jg
xor
outsl
bound
int
inc
add
sbb
je
stos
rorl
sahf
inc
inc
xor
mov
in
stos
int
adc
sub
dec
ror
hlt
lret
push
js
pop
push
imul
add
fdivs
loope
fnsave
dec
cmpl
out
jb
shll
jae
movsl
dec
inc
test
pop
test
jp
push
in
adc
stc
pop
leave
out
jl
dec
popa
nop
insl
or
xchg
push
and
sbb
int
sahf
pop
pop
les
jbe
pop
loop
inc
jp
add
jbe
jecxz
dec
xchg
loope
arpl
and
pop
sbbb
and
data16
in
lret
fidivrl
andb
loopne
test
sbb
jae
nop
in
ret
in
adc
inc
pop
lods
in
imul
sbb
sti
push
sbb
mov
aas
pop
pop
sbb
aam
push
ret
inc
and
cpuid
loop
mov
lods
xor
leave
dec
or
cmp
out
fdivp
daa
sbb
push
xchg
sub
notb
pop
adc
cmc
js
push
pop
ret
movq
jb
xchg
mov
imul
repnz
imul
rep
stos
sarl
popa
sbb
mov
addr16
rcrb
fbld
fildl
add
clc
inc
call
xor
sbb
arpl
fs
fistpl
mov
int
nop
sub
mov
mov
mov
sbb
mov
xchg
jns
push
sahf
repnz
push
sbb
imul
enter
imul
or
jnp
fsubr
or
adc
xor
or
ret
mov
cmp
xchg
cmp
dec
gs
or
fistl
scas
ss
push
add
add
aas
pop
push
jb
stc
cmpsb
test
add
imul
rcll
jne
hlt
adc
add
movsl
jae
rorb
xlat
movsl
in
push
cmpsl
mov
imull
ret
mov
pop
xchg
pop
stos
jns
cmp
clc
dec
xor
mulb
jecxz
pop
in
cltd
xlat
or
ja
push
pop
xchg
pop
setg
fwait
and
dec
dec
push
xchg
fldt
sub
sub
out
xor
dec
je
or
call
add
xchg
fs
pop
loop
fmul
mov
jmp
lds
js
cmpsl
lea
dec
aas
sub
lock
pop
xchg
ds
xchg
popa
adc
pushf
xor
adcl
cmp
outsl
xchg
push
clc
rorb
das
out
inc
movsl
pop
icebp
xor
pop
fs
fdivrs
mov
adc
adc
and
fnstcw
dec
pop
or
mov
pushf
lods
sar
inc
stos
loop
sahf
and
mov
xor
cwtl
and
pop
sub
push
shrb
sbb
mov
dec
out
sub
mov
mov
mov
add
outsb
inc
movsb
inc
std
mov
repz
jp
inc
pop
jne
mov
mov
dec
mov
je
repnz
pop
lret
subb
daa
daa
shrl
push
aad
sub
sahf
data16
jnp
movsl
dec
xor
pop
js
cmpsl
mov
adc
bound
fistl
lock
je
or
cmpsl
int
xchg
pop
shll
mov
mov
cmp
and
jne
inc
movsl
or
sbb
mov
mov
lcall
mov
sub
stos
push
sbb
imul
fwait
push
addb
push
push
push
push
aad
and
xchg
sub
adc
rorl
cmp
rorb
mov
test
aas
aaa
es
ret
xchg
ret
pushw
sbb
std
inc
ret
sarb
sti
mov
or
or
inc
rcrl
in
pcmpgtb
cli
xchg
data16
sub
pop
mov
mov
jmp
mov
stos
pushf
xor
jge
ja
dec
imul
popf
ret
rorl
jmp
pop
data16
xchg
clc
xchg
xchg
sub
lock
jo
sbb
inc
adc
add
sub
jecxz
pop
jno
stc
gs
pop
mov
testb
aam
inc
es
inc
test
or
xchg
dec
xchg
fbld
inc
cmp
sbb
lcall
dec
mov
clc
cs
push
xchg
movsl
loope
in
jo
outsl
cld
ljmp
cmp
lea
aam
addr16
jo
stos
jo
insb
aad
test
fcmovnb
pop
nop
dec
mov
dec
mov
push
pop
into
adc
mov
out
cmp
dec
xchg
pop
cmp
sbb
pushf
xor
xchg
xchg
aam
into
inc
out
and
sti
inc
sbb
ret
je
stos
enter
cli
dec
dec
sbb
cmc
enter
out
mov
scas
cmc
lods
pop
sbbl
leave
in
inc
inc
repnz
outsb
push
imul
aad
push
push
fiadds
or
mov
cmpsb
imul
sbb
movsl
test
mov
mov
aas
int
ljmp
into
mov
inc
loopne,pn
std
ss
sahf
pop
insb
or
mov
ret
sub
xor
scas
jae
fdivs
icebp
ret
fisttpl
cltd
mov
outsb
inc
pusha
cmp
sbb
xor
pop
insb
rsqrtps
mov
test
inc
mov
xor
jno
pop
out
cmpsl
mov
ret
cs
and
push
ds
ss
sub
js
daa
inc
and
xchg
push
or
xlat
xor
ss
sbb
xor
xor
adc
adc
inc
inc
cmp
or
mov
test
xor
loop
jl
imul
mov
jns
in
sub
or
stc
movl
pop
sbb
lcall
cltd
notl
push
add
das
repnz
inc
cmp
insl
call
sbb
sti
mov
rcrl
into
sub
inc
adc
divb
lret
sbb
xor
loope
inc
ds
fidivrl
nop
movl
popf
pop
fs
add
xchg
xor
mov
rcll
addr16
mov
mov
ds
divl
sbb
inc
lret
bound
call
cmp
push
xor
mov
ret
mov
cld
lods
sub
mov
sbb
inc
jno
or
imull
iret
dec
in
mov
mov
add
dec
loope
sti
cmpsb
fdivs
jmp
push
insl
test
js
xchg
xor
cmpsb
jae
jne
sbb
mov
fs
fs
mov
gs
pop
inc
lcall
xchg
add
jp
add
xchg
sti
cmp
or
adc
xchg
cmp
dec
xchg
adc
gs
stos
inc
push
ss
ret
dec
repz
gs
lahf
stos
dec
mov
dec
xor
xchg
mov
fnsave
jg
shll
into
mov
inc
sbb
lea
scas
sbb
rol
cmp
mov
xor
jne
jmp
subb
jl
cmp
xor
inc
in
ja
xchg
sub
mov
jge
sbb
jmp
push
arpl
dec
dec
xchg
xchg
das
rcl
jge
xchg
inc
dec
push
frstor
and
cmp
outsb
sahf
xor
stc
mov
jno
xchg
shrl
out
pop
mov
pop
out
hlt
das
stc
repz
and
pushf
rcrb
aad
or
nop
jecxz
push
xorb
cmp
out
jnp
and
fwait
test
rol
jle
sub
loop
or
add
pop
adc
lcall
in
push
in
cs
nop
int3
mov
mov
push
out
jno
test
add
push
movsl
sub
pop
cmpb
les
inc
mov
xchg
or
movsb
and
dec
in
cmc
cwtl
inc
add
leave
das
data16
adc
add
xor
push
pop
hlt
repnz
cmp
xchg
aam
xor
outsb
js
inc
cmpsb
xchg
sbb
pop
xchg
test
cmpsl
sbb
rcrl
inc
jmp
push
cli
dec
cltd
jge
test
enterw
xchg
inc
mov
fildl
insb
inc
cli
out
loope
fdiv
add
cltd
and
push
adc
xchg
and
shll
dec
cmc
fdivl
pop
push
rcll
maskmovq
outsb
aas
xchg
xor
gs
and
mov
mov
pusha
pop
add
add
lea
into
out
popf
adc
loop
xor
pop
add
addr16
shrb
outsb
bound
es
xor
add
mov
lret
pop
sbb
movsl
xchg
cld
push
jb
mov
in
push
shrb
dec
or
pushl
cmpsl
mov
mov
and
pop
scas
xchg
sbb
sub
sub
les
push
mov
mov
leave
sti
dec
mov
pop
lea
adc
pop
jae
push
pushf
mov
rolb
sbb
mov
xchg
sbb
xor
jg
add
lods
fwait
gs
or
adcb
call
sbb
movq
pop
push
push
popf
sub
jmp
subl
pop
cs
mov
pop
adc
stos
test
mov
cld
aad
rcrl
fcomp
mov
es
mov
sub
sub
out
cmpsb
jecxz
stos
lods
repz
add
test
lods
xor
add
sbb
imul
xorl
mov
sti
jne
sub
stc
jne
clc
pop
inc
sub
cltd
movsl
sub
jmp
pop
es
xorb
in
leave
sbb
and
pop
mov
test
int3
jo
dec
stc
cmpsb
inc
in
mov
mov
rcrl
jmp
pusha
inc
pusha
pop
pusha
sub
std
cwtl
lret
mov
inc
jno
stos
mov
or
adc
mov
jg
dec
jae
wrmsr
adc
movsl
jecxz
repz
ja
nop
fptan
shrl
push
repnz
push
int3
fdiv
in
into
test
je
fnsave
sbb
jecxz
outsl
sub
and
cs
inc
inc
mov
sbb
loop
add
jb
gs
cld
shlb
lock
aaa
jno
out
jmp
jnp
xor
lret
dec
shll
mov
cld
ja
sahf
pop
insb
or
adc
adc
movd
rcll
xchg
ficomps
popf
push
ret
dec
roll
pop
fidivrs
push
sbb
adc
rcr
data16
xchg
insl
pop
adc
xor
stc
dec
adc
das
scas
test
adc
sbb
and
jnp
mov
or
mov
mov
les
xchg
mov
pop
or
pusha
jo
push
outsb
fadds
inc
mov
lret
lds
pop
dec
andb
cmp
iret
inc
lea
mov
adc
out
xchg
daa
nop
fisubl
xchg
and
mov
or
daa
aam
loope
shll
cmpsl
or
jae
fists
lock
sub
out
cmpsb
aam
pop
outsb
test
mov
xor
fcmovne
sub
lret
into
aaa
aam
outsb
lahf
jg
mov
adc
mov
insl
arpl
xchg
lahf
adc
dec
int
fimull
div
dec
sbb
inc
sub
in
or
mov
sbb
daa
adc
pop
pop
and
mov
test
pushf
add
mov
add
imul
clc
sbb
cltd
push
mov
xor
xlat
sbb
push
aam
sarl
lea
mov
or
sahf
leave
adc
sbb
mov
dec
fst
jb
jnp
mov
pop
mov
mov
inc
add
push
mov
add
test
out
fwait
sbb
testl
mov
dec
dec
cld
rorb
daa
mulb
jns
xchg
inc
push
pop
jo,pt
mov
fmuls
stos
mov
inc
push
pop
fld
mov
sbb
pop
xor
mov
das
imul
push
xchg
jle
push
pop
cld
mov
dec
sbb
dec
lahf
sub
or
and
outsl
jmp
jmp
fisubrs
out
ficoms
imul
xchg
mov
movsl
cmpsl
popf
int3
nop
and
jns
adc
xchg
ret
loope
out
fldcw
mov
in
jle
and
call
punpckldq
hlt
loope
xchg
outsb
inc
lds
adc
lods
mov
jmp
cmp
mov
xchg
xlat
mov
cli
std
xchg
mov
mov
xchg
add
sub
jbe
jb
jno
test
arpl
jg
aas
pushf
and
jle
push
ret
push
movsl
sub
sub
jno
mov
movsb
xchg
jo
jno
stc
call
mov
ljmp
jne
push
in
lret
cltd
jmp
insl
and
pmaddwd
adc
xchg
lret
dec
mov
cmp
dec
hlt
adc
imul
pusha
movsb
fs
pop
sbb
test
cmpb
jecxz
push
sbb
popf
aas
cmpl
mov
shll
mov
dec
in
idivb
cmp
icebp
sub
dec
sbb
shrb
or
xor
fidivs
or
inc
xor
jle
aad
xchg
xchg
rcrl
repnz
mov
aaa
fidivs
add
fsubrl
arpl
add
or
outsl
test
jbe
and
xchg
imul
push
fistl
jno
and
and
adc
mov
rsm
and
add
int3
sar
es
iret
or
aas
dec
jns
aas
mov
scas
lcall
int3
fmulp
inc
lods
inc
rcrl
nop
xchg
outsl
and
movsb
mov
enter
mov
fisubs
clc
lea
jae
inc
add
pop
push
dec
push
lock
das
movsb
pop
mov
clc
test
cmpsl
xor
sbb
cmpsb
sub
icebp
fidivrs
mov
enter
gs
dec
and
enter
iret
xchg
mov
cli
ja
loop
ret
fisubrl
dec
loopne
mov
adc
out
outsb
fst
int3
out
imul
mov
cli
sub
pop
lds
hlt
in
lahf
popf
dec
out
jg
loopne
aam
fs
idivb
cli
sbbl
and
push
pop
xor
xchg
and
popa
jno
nop
shl
lahf
adc
in
fisubrl
cmp
pushf
ss
cmc
jbe
aas
inc
xchg
test
or
mov
jmp
nop
push
lret
loop
pushf
aad
push
test
ja
subb
cmp
sub
push
psrlw
ss
mov
xchg
mov
mov
jno
test
sbb
ss
xchg
callw
scas
add
mov
sub
lcall
jb
sbb
sbbb
adc
imul
cmpsl
pop
les
xorb
dec
dec
in
mov
add
loope
jbe
out
imul
add
sti
mov
ds
ret
lea
repnz
add
imul
in
dec
mov
xor
leave
or
mov
xchg
dec
pop
iret
sti
cs
jl
push
xchg
sbb
out
cmp
mov
xor
adc
cwtl
add
fidivrs
stos
xchg
loopne
ret
jle
fpatan
mov
cmpsl
fisubs
jge,pt
in
in
inc
dec
les
fiadds
adc
outsb
mov
ja
xchg
repz
mov
test
insl
jecxz
jmp
aaa
popl
sbb
scas
pop
stc
xor
mov
daa
movsb
insb
fsubrp
je
push
aad
sbb
shll
shl
sarb
pop
cs
in
xor
cmp
mov
pop
mov
push
enter
in
fchs
xchg
xor
das
clc
pop
or
push
jp
dec
ficoms
repnz
daa
mov
mov
inc
add
lods
rcl
xchg
sbb
out
mov
aaa
jl
cmpsl
out
cmc
xchg
lods
pop
pop
mov
xchg
shr
imul
jae
mov
inc
adc
mov
xchg
out
push
inc
inc
inc
dec
mov
les
inc
sbb
pop
inc
xchg
jecxz
dec
push
scas
ret
scas
inc
shr
lret
xor
loopne
sub
fwait
ret
jmp
fwait
or
mov
imul
mov
into
pop
push
adc
in
je
xchg
inc
add
jns
pop
adc
adc
xlat
decb
pusha
jle
mov
imul
adc
mov
add
in
hlt
repnz
lret
pop
mov
addb
sub
xchg
or
into
mov
cmp
push
xchg
cmp
push
in
mov
xor
repz
subb
test
cli
or
rcr
mov
hlt
ffreep
push
in
les
fnstsw
dec
xor
cmp
xchg
cld
mov
movsl
sbb
fs
mov
cmp
cmp
push
mov
cmp
adc
mov
mov
es
mov
cmp
addr16
jmp
les
push
nop
scas
pop
push
jns
mov
fs
das
mov
add
std
mov
jle
dec
jo
popa
outsl
add
cmp
int3
and
push
pop
jbe
pop
xchg
xor
movsl
xor
loope
inc
dec
cmpsb
sub
add
xchg
and
sbb
sub
push
mov
or
in
mov
into
fisubl
pop
in
mov
push
int3
pop
inc
rorb
pop
cld
dec
loope
sub
out
mov
sbb
dec
push
or
adc
insl
sub
movsl
sub
push
ds
faddl
lret
xchg
mov
sahf
pusha
cli
add
fists
push
jmp
dec
sbb
or
cli
dec
jns
test
repz
xchg
jle
inc
aas
inc
out
pop
xchg
mov
pop
fwait
je
adc
sub
xor
xor
ud2
xchg
add
adc
sub
pop
lahf
mov
sbb
dec
cltd
sub
jle
outsb
jno
add
and
pop
mov
lcall
sub
popa
outsb
push
out
testb
lret
push
cmpsl
jg
repnz
fnsave
insb
xor
mov
mov
stc
je
sbb
adc
arpl
cmp
out
stos
pop
pop
push
pop
cmpsl
jae,pn
int3
mov
cmc
mov
outsb
mov
fmul
ja
sbb
bound
aam
idivl
xchg
movups
lods
push
int3
jne
add
sub
sub
movsl
mov
sbb
fists
movsl
in
pop
jb
xchg
jns
cmp
mov
xchg
fmull
cmpsl
mov
sahf
jp
imul
enter
mov
pusha
xor
idivl
push
iret
out
das
push
lcall
fists
jp
push
gs
sbb
cmpsl
xor
std
push
rorl
jmp
dec
out
jg
or
out
roll
shll
pop
push
jb
xor
mov
push
sub
cmc
sbb
test
push
mov
sbb
pusha
enter
jno
or
pushf
jne
jmp
push
lcall
lods
stos
subl
sub
lea
stos
mov
push
sub
fs
cmp
xlat
mov
in
sbb
nop
sbb
sbbl
or
rcrl
popf
push
idivb
mov
mov
and
mov
push
clc
push
sub
cmp
mov
sti
inc
imul
jbe
dec
adc
cmpb
or
stc
mov
arpl
mov
adc
addl
push
mov
hlt
inc
push
lea
push
fistpll
cli
mov
jl
or
xlat
push
iret
push
xor
adc
mov
and
addl
pop
mov
dec
mov
push
xor
inc
add
loopne
dec
ret
pusha
mov
sub
jne
sbb
push
pop
cmp
add
loopne
test
inc
fistpl
sub
mov
add
mov
pop
nop
fstl
stos
addl
incb
dec
lret
stos
lods
mov
aaa
dec
push
add
in
out
out
fcompl
jbe
ret
xchg
clc
dec
and
mov
repnz
adc
and
mov
jg
push
aam
push
imull
pop
xchg
jl
cltd
xor
xchg
bound
insb
lock
fidivs
adc
subb
test
int
cmpsl
filds
jo
pop
mov
cmp
fwait
pushf
ret
jge
outsb
push
xchg
je
dec
rclb
adc
out
in
sub
or
orb
sbb
mov
push
out
je
pop
pop
ficomps
pop
hlt
jae
scas
xlat
ret
ss
pop
movsl
mov
lods
push
push
inc
mov
aas
pop
fs
les
popa
push
adcb
lea
fidivs
sub
xchg
dec
sbb
jp
fdivrl
sub
fwait
js
cmpsl
insb
pop
pop
add
loop
lret
loope
dec
movsl
mov
and
adc
incl
call
sbb
shl
mov
and
imul
mov
mov
enter
je
movsl
adc
jle
leave
jne
xchg
out
ja
rorl
mov
adc
mov
ja
adc
xor
xchg
fldenv
adc
cmpsb
hlt
out
jne
cltd
fwait
cs
fwait
and
test
mov
mov
aam
jg
js
jg
jge
mov
xchg
push
pop
sbb
add
mov
push
inc
mov
adc
dec
or
jl
jo
sub
xor
popl
push
sar
sub
add
add
mov
cli
cmp
mov
push
adc
add
imul
and
cmp
mov
sbbl
imul
faddl
inc
arpl
loop
aas
sub
test
cli
je
xchg
andb
xor
int
lea
xchg
insl
loopne
out
nop
test
push
mov
sbb
jb
add
adc
sbb
xor
xchg
xlat
cmp
mov
out
xlat
insl
sub
cmpl
lret
rcrl
and
lods
pop
xchg
xor
jno
ljmp
pop
push
aas
jmp
clc
test
jecxz
and
jmp
cmp
sub
pop
les
xlat
sahf
bound
mov
push
imul
stos
imul
ljmp
inc
inc
mov
push
movsl
js
mov
adc
outsb
outsl
sahf
das
mov
jb
out
fdiv
sti
popf
push
xchg
out
aaa
call
sbb
mov
cmp
mov
js
or
nop
push
jg
ss
sub
bound
mov
pusha
mov
adc
cs
push
stos
es
and
js
into
push
gs
jmp
sub
cmp
iret
and
xchg
sbb
mov
imul
icebp
in
xchg
sbb
jge
std
addl
mov
mov
push
pushf
bound
push
pop
lock
pop
sbb
cld
add
or
inc
shr
add
cmp
mov
push
nop
jl
std
and
negl
insb
daa
or
loop
jl
inc
xchg
popa
scas
ds
ret
cmp
mov
in
clc
in
out
adc
xchg
pop
jno
lock
xor
rcrb
xchg
imul
jo
mov
test
and
pop
mov
mov
aas
popa
add
cmp
push
inc
dec
andb
add
dec
imul
cld
ret
gs
xor
pop
dec
mov
fistpll
push
cwtl
jo
addl
aam
stc
jp
imul
std
call
rol
ficompl
dec
std
pop
ss
xchg
into
mov
jbe
stos
adc
mov
popa
adc
idivl
lret
push
xor
jp
int
pusha
lret
rcrb
fisttpll
stc
sub
mov
lea
inc
arpl
xchg
inc
adc
shll
inc
mov
lds
decb
inc
cwtl
mov
cmp
pop
mov
mov
je
stc
cmp
mov
daa
dec
test
arpl
ljmp
jg
jo
inc
lcall
outsl
jg
hlt
sub
insb
push
push
or
in
pop
shlb
lock
cmp
lcall
in
adc
dec
sbb
insl
cmpsl
sub
popa
jb
or
push
popf
push
leave
mov
scas
into
repnz
out
arpl
xchg
mov
mov
adc
out
mov
scas
rorl
mov
xchg
dec
jle
in
movsb
pop
mov
rorl
sub
pop
fisttps
fisttpll
insb
lret
xchg
out
ds
cmp
rolb
scas
into
push
mov
inc
pop
iret
bnd
ret
sub
mov
je
fmul
outsb
push
out
mov
mov
cs
repnz
inc
sbb
mov
aam
js
mov
and
mov
sub
xchg
flds
loop
lahf
inc
repnz
add
imul
sub
dec
cmp
push
jns
fsubl
xor
push
ja
pop
popf
xchg
jb
sti
xor
fidivs
adc
std
hlt
mov
popf
inc
mov
jle
cmp
mov
pop
cwtl
add
mov
cmpsb
sub
inc
sbb
out
test
sub
lcall
mov
pop
add
repnz
shr
arpl
rcrl
sbbl
test
std
adcb
notl
stos
scas
mov
dec
sbbb
push
imul
fldl
ljmp
mov
lahf
fsubp
or
pop
cmp
xor
shlb
pushf
loop
cmp
jae
inc
push
paddq
imul
inc
push
enter
xchg
andb
jle
mov
in
sbb
xchg
pop
inc
sub
lods
cs
sub
das
add
xchg
movsb
push
out
push
and
cld
xchg
mov
in
les
or
outsb
jb
lea
subl
flds
pop
cmp
fnstcw
xchg
mov
inc
test
insl
mov
and
scas
hlt
int
and
mov
sbb
lods
pushf
jns
fucomi
mov
add
dec
ret
cli
sbb
addl
fwait
int
negl
sbb
add
mov
test
and
inc
pop
ja
dec
fisttpl
testb
int
add
jg
sbb
int
jne
mov
cmp
jle
outsl
cmp
mov
pop
js
arpl
xchg
lahf
js
fnstsw
lods
stos
jg
xchg
add
inc
aaa
out
rorl
ret
push
and
sti
adc
in
dec
sarl
lcall
mov
or
ja
inc
sbb
stos
adc
push
mov
lcall
clc
pop
and
stos
mov
cmp
in
gs
outsb
repz
adc
cmp
lret
fnsave
mov
xchg
adcl
ret
cmp
jg
cltd
popa
fcomps
mov
pop
cltd
xchg
mov
push
outsl
pop
mov
lret
mov
loopne
cmp
ret
xor
xchg
inc
fisttpll
and
enter
das
mov
xor
xchg
push
or
and
inc
icebp
jge
shrb
jecxz
jno
or
fisubrl
add
or
xchg
imul
lcall
cmp
icebp
xchg
cmp
mov
mov
faddl
xchg
inc
inc
add
loopne
scas
ficoml
ja
xchg
jle
pop
sub
jle
lcall
mov
out
xchg
dec
push
insl
ja
rol
cld
mov
lods
mov
mov
in
mov
sub
cwtl
adc
mov
or
out
pop
and
loope
mov
ljmp
jmp
fdivrs
mov
in
mov
xor
pop
add
jnp
cmpsb
cmp
cs
jbe
mov
and
sub
xchg
push
add
jecxz
add
ja
xchg
popf
mov
in
imul
pop
add
cmp
loope
or
xor
leave
ljmp
jnp
movsl
aas
inc
stos
xchg
sub
inc
sbb
mov
mov
out
jp
adc
fdivrl
lret
loopne
movsl
fsubr
jle
lock
repnz
in
jge
mov
into
fcoml
push
sbb
pop
std
hlt
inc
leave
sub
add
dec
ja
cmp
mov
call
mov
pop
fst
shll
mov
clc
int
inc
sbbl
jnp
addb
popa
ds
xor
add
mov
fisubrl
adc
in
lock
pop
repz
in
xor
movsl
leave
or
xchg
mov
or
mov
jle
add
imul
cld
xchg
mov
enter
sub
enter
mov
pop
es
xchg
xor
cld
es
pop
js
loope
jne
test
xor
fnsave
decl
jecxz
scas
popa
mov
inc
jns
cmc
fwait
add
mov
mov
push
shl
ds
add
mov
aas
mov
lret
les
inc
mov
rorl
xor
mov
and
xchg
mov
dec
icebp
sahf
mov
and
lret
dec
xchg
sbb
iret
lock
jp
adc
movsl
ret
fsubr
ret
repz
ret
jp
in
sbb
cmpl
or
pop
mov
pusha
mov
jo
jl
scas
sub
fcoml
sub
xchg
sbb
xchg
mov
or
sub
hlt
sub
shrb
mov
jb
es
fldt
out
mov
adc
int
push
mov
xor
pop
pop
xlat
mov
test
or
adc
mov
out
fstpt
lods
inc
inc
dec
mov
cmpsl
and
lods
or
inc
fwait
pusha
inc
push
xchg
mov
ss
repz
hlt
jnp
mov
std
loop
inc
mov
mov
das
push
aas
xchg
clc
addr16
rol
arpl
mov
movsb
mov
jl
movl
push
dec
xor
mov
outsb
cmpsb
inc
sbbl
data16
and
push
xchg
or
loope
add
push
jmp
sbb
mov
push
adc
ror
ja
inc
push
adc
cwtl
jnp
lcall
aas
int3
in
sarb
lcall
fimull
ret
fisubs
ljmp
int
cmpsl
imul
lret
gs
fstl
xor
test
add
aas
push
fs
push
scas
outsb
sbb
pop
out
xchg
orl
sub
mov
cmp
mov
sub
outsb
dec
or
dec
lods
cmc
mov
xchg
pop
stc
add
or
sbb
sub
and
push
ljmp
pop
pusha
pop
int
cli
dec
stos
add
inc
insb
sub
shrl
push
dec
lret
lret
inc
insl
jo
pushf
lcall
test
mov
mov
dec
push
cmp
mov
dec
inc
mov
and
pop
mov
and
aas
shlb
cmp
adc
jb
xor
dec
ljmp
pop
jle
pop
lret
push
arpl
int
mov
clc
sub
out
dec
or
push
dec
push
cmp
inc
outsl
xchg
aas
add
add
mov
xchg
mov
mov
cmp
fwait
loope
mov
sub
adc
in
adc
cmc
dec
jo
sub
lahf
inc
inc
mov
push
mov
cmpsl
bound
addr16
push
push
mov
inc
mov
mov
inc
test
pusha
mov
sti
mov
xor
imul
fdivrl
movsb
xor
insl
out
xchg
stos
and
xor
cmp
fstl
lea
jg
aaa
push
sbb
and
lret
mov
sti
mov
adc
mov
mov
test
inc
test
mov
jmp
and
popf
aad
insl
daa
aaa
cmp
ret
mov
out
dec
mov
pop
jge
inc
fsubrl
or
and
xor
xchg
cmp
shrb
cmpsl
clc
movb
stos
cmp
data16
push
pop
add
pop
jmp
loopne
mov
adc
sub
ficomps
xor
mov
cmp
xchg
js
push
xlat
pushf
and
outsb
cli
fildl
pop
hlt
cmpsb
fnstsw
xor
push
inc
outsl
sarb
fisubs
pusha
in
pop
mov
idivb
stc
in
mov
pop
mov
inc
ljmp
cld
mov
movsb
jne
add
lret
pop
fcoms
cmp
pop
popf
xor
inc
sbb
push
jmpw
imul
xor
dec
stos
xor
xchg
cld
lret
adc
xchg
rcl
pop
aad
hlt
cli
sbb
fs
mov
test
mov
xchg
and
dec
pop
and
or
sbb
mov
shrl
fstpl
xchg
and
fimull
add
aas
xchg
jbe
push
jbe
push
mov
pop
push
stc
pop
fstps
add
js
mov
notb
rcl
je
lea
dec
fimuls
mov
and
inc
mov
jmp
add
daa
pop
and
or
pop
test
cmpsb
sub
insb
cld
mov
push
sbb
mov
cltd
xor
outsb
cmpsl
pushf
jg
push
cmp
sub
mov
lock
pop
push
pop
fildl
xchg
fidivl
sub
ss
mov
or
stos
xor
pop
mov
stos
mov
aas
push
push
inc
filds
dec
xor
aaa
add
xor
push
test
xchg
fsubs
xchg
add
sub
pop
sarb
leave
negb
lcall
jns
or
test
loopne
push
xor
or
xor
jmp
aas
sub
xchg
push
sub
xor
std
push
dec
and
jb
pushf
stc
nop
mov
or
arpl
ljmp
loop
cmp
testb
jle
jne
in
lods
pusha
sbb
dec
jo
sub
popa
fcomps
dec
aaa
test
push
jle
scas
in
pop
repnz
fisubl
push
sub
jae
pop
pop
jmp
push
inc
movsl
fisttpll
pop
inc
es
adc
scas
sub
add
add
sahf
fidivrl
add
outsb
movsl
loop
sub
pop
add
push
xor
mov
add
popf
icebp
dec
push
int3
lods
cmp
setbe
xchg
mov
lods
push
push
sbb
test
jbe
das
cmc
and
mov
ljmp
out
sbb
add
fisubl
xchg
adc
mov
cmpsb
pop
mov
jmp
int
aas
mov
inc
in
enter
pushf
bound
std
hlt
jl
push
add
inc
mov
mov
loop
mov
add
or
loope
cwtl
xchg
dec
outsb
or
push
dec
mov
cmp
mov
sbb
icebp
rol
sub
cmp
jmp
loopne
loop
xlat
int
sbb
jne
aam
add
lret
popl
popf
add
int
lods
pop
arpl
arpl
out
fisubrl
push
dec
fisubl
into
stos
adc
test
outsl
xchg
mov
jb
or
js
mov
setg
sbb
inc
pop
aad
insl
stos
lds
xchg
mov
imul
jmp
leave
jbe
pusha
mov
mov
cs
push
add
movl
and
nop
mov
cltd
or
jb
sbbb
test
insb
bound
fdivl
add
add
iret
sbb
dec
pusha
push
aam
bound
jns
xor
and
movsl
shlb
mov
mov
sub
xchg
je
adc
jbe
inc
aaa
dec
jle
xchg
cli
sti
adc
and
sbb
mov
jb
mov
gs
mov
pop
pop
add
mov
ret
sub
mov
cltd
jb
int3
pushf
leave
sbb
add
test
xlat
ret
sub
xlat
fsubs
pop
imul
inc
maskmovq
divl
and
sbb
mov
jbe
push
int3
stos
fstpt
and
movsl
int3
shlb
push
or
mov
insb
test
lods
pop
inc
fldt
mov
mov
iret
daa
xor
cmp
lds
add
sub
adc
add
adc
jno
cmp
mov
je
pusha
adc
pop
test
lret
cmc
mov
add
ds
ret
imul
insl
mov
in
add
decb
js
xlat
xchg
cmc
dec
sarl
cld
cmp
in
aaa
mov
lock
clc
icebp
jnp
jb
mov
std
add
fsubs
cmpsl
add
out
pusha
or
and
mov
dec
sbb
xchg
lods
xchg
ss
xor
pop
bound
in
xchg
mov
fcmovu
fsts
cmpsb
jae
popa
lret
push
inc
outsb
rcl
adcl
pusha
inc
pop
inc
aaa
cmp
add
mov
adc
jo
inc
rcrl
inc
and
sub
push
mov
enter
imul
xor
push
aas
push
mov
push
xor
inc
xchg
sub
lock
sub
mov
pop
mov
mov
push
out
sarb
xchg
or
cmpsb
adc
adc
add
ret
insb
das
jno
aaa
jecxz
movsb
cltd
inc
add
xchg
gs
push
cmpsl
and
cmp
sti
mov
or
std
push
or
into
pop
pop
icebp
jo
bound
or
sahf
add
jnp
mov
cmp
loopne
sbb
lcall
add
rcrb
movsl
loope
aad
inc
or
mov
outsb
mov
lret
push
push
test
pop
aas
jae
mov
jp
add
orb
mov
push
cmp
or
mov
mov
repnz
fnstcw
mov
das
mov
or
cmp
int
mov
ljmp
add
mov
adc
mov
shrl
sub
stos
pop
daa
inc
adc
pop
leave
orl
adc
pop
xchg
movsb
mov
mov
mov
pusha
xchg
pop
lock
add
ret
sahf
mov
fdivrs
mov
mov
cs
mov
mov
loopne
sbb
and
jl
jns
roll
mov
fimuls
add
xor
jl
push
mov
mov
pushf
push
cmp
cmp
fldt
pop
inc
sbbb
rcrb
push
push
xlat
sub
cli
inc
add
outsb
mov
jae
mov
call
popf
push
push
dec
repnz
pop
leave
mov
sub
sbb
js
and
shll
shr
loope
shrb
pop
mov
cmp
xorl
xor
inc
or
ljmp
imul
hlt
stos
lea
pusha
jne
sub
out
pop
std
push
push
dec
mov
push
xchg
mov
repz
xorl
aam
ljmp
mov
rclb
adc
xchg
sub
aaa
lods
es
repz
push
cmp
data16
std
lret
push
js
add
mov
mov
lcall
or
add
adc
dec
add
imul
push
outsl
push
or
test
andl
cmp
scas
mov
int
mov
dec
dec
cwtl
les
andb
in
push
sar
mov
jbe
jo
mov
jmp
mov
roll
es
les
mov
into
or
clc
mov
pop
insl
mov
jle
out
in
hlt
psubd
lea
mov
or
lret
out
mov
mov
or
pop
scas
pop
jl
ret
repz
icebp
mov
rol
leave
push
sub
or
push
mov
subl
pop
or
mov
mov
cmpsl
dec
mov
sub
aad
xchg
js
sbb
jb
and
bound
testl
add
xchg
inc
jo
pop
pop
mov
std
stos
mov
adc
pop
les
inc
add
cli
fwait
jmp
clc
and
cld
cld
xor
xor
mov
pop
mov
fdivp
adc
jl
ljmp
xor
sub
lods
lock
jl
adc
jo
push
push
xor
xchg
in
dec
out
mov
sbb
mov
mov
jae
lcall
in
sbb
sub
pop
lods
cwtl
adcl
cmp
fnstsw
jge
loop
rcr
js
add
out
pop
icebp
jecxz
add
arpl
lcall
int
mov
add
add
xorl
mov
pop
js
push
add
mov
outsl
je
cmpl
inc
pop
pop
and
add
lret
test
mov
pop
jmp
sti
rol
push
sbb
ljmp
mov
mov
jle
or
inc
push
arpl
or
fwait
mov
and
insb
and
pop
fisttpll
or
jecxz
call
into
hlt
cmpsl
leave
add
mov
movsb
cmp
add
mov
pop
mov
pop
test
sub
xlat
ljmp
data16
or
sbb
pop
dec
bound
ret
mov
je
jl
xor
jne
jbe
mov
test
ret
je
lret
jno
add
dec
out
push
sbb
xchg
enter
sub
add
mov
cmp
ret
ret
cmpsb
push
sbb
ficoml
scas
ret
lods
fisubs
dec
inc
jb
jnp
sub
adc
mov
hlt
mov
int
imul
std
pop
mov
adc
lds
mov
sub
and
mov
loope
cmpl
test
jge
adc
int3
xor
lahf
dec
mov
push
cmpsl
sub
iret
scas
dec
les
call
adc
ret
push
add
scas
mov
push
ja
jg
pop
jns
test
pop
mov
xlat
mov
push
stos
sbb
sbb
inc
mov
call
jle
lahf
sub
xor
adc
flds
test
xor
or
rolb
add
pop
outsb
cmpb
or
mov
pop
xor
cltd
loope
bound
outsl
icebp
xor
cli
sbb
lahf
push
jge
cmc
test
push
test
loope
lods
fiaddl
enter
push
pop
mov
sbb
rorl
jb
xor
push
mov
cmp
int
sbb
or
pop
cmp
int
jl
cltd
sbb
icebp
ds
dec
minps
adc
dec
pop
adc
or
sbb
inc
imul
cs
aas
data16
dec
mov
dec
cmpsl
movl
mov
cmp
cmp
cmp
add
rcrl
sbb
push
mov
bound
jmp
sahf
sbb
jg
fs
cltd
jnp
pop
cmp
sub
sbb
adc
jne
pop
push
addr16
push
cli
pop
xchg
cmpsl
addl
mov
add
enter
mov
jle
sahf
addl
sub
jb
pop
xchg
jno
pop
inc
jp
stos
sub
shll
xchg
idivb
fidivrl
sub
hlt
loopne
ret
es
or
insb
data16
cmp
stos
neg
mov
loope
sti
fnstsw
and
in
in
add
inc
fs
aas
or
add
jb
out
sbb
lcall
shlb
les
or
test
fwait
rorl
mov
arpl
stc
sub
jp
adc
inc
lahf
dec
xor
stc
lret
mov
das
xchg
std
int3
pop
mov
mov
jo
and
lret
mov
loope
rcrb
pop
mov
cmp
pop
pushf
fildl
mov
cmc
insb
lfs
dec
and
xor
icebp
xchg
imul
xchg
adc
jmp
pop
lret
in
add
arpl
inc
mov
pop
lods
aam
leave
insb
mov
sub
out
insl
push
xchg
and
in
dec
mov
addb
xchg
lock
rolb
adc
xchg
in
push
in
push
lods
inc
jns
ss
mov
lret
pushf
inc
jne
aas
stc
cmp
cmp
adc
mov
imul
cmp
add
mov
pop
adc
and
mov
aam
mov
js
mov
addps
pop
das
add
loope
shll
mull
add
cmp
mov
or
repz
loopne
aaa
sub
out
adc
pop
mov
xor
adc
js
cmp
sti
adc
dec
push
int3
push
jnp
push
xor
enter
sub
loop
test
aam
add
mov
jecxz
into
aas
es
js
icebp
sbb
sbb
div
or
or
cmp
mov
push
sarl
cs
lds
imul
stos
lcall
add
dec
add
pushf
lea
sub
in
out
push
les
stos
sbb
adc
das
pop
aad
imul
lds
into
inc
push
rolb
shl
popf
push
mov
adc
jmp
rcll
sbb
push
lret
test
jmp
xchg
imul
pop
dec
dec
nop
orl
pop
mov
call
jns
fisttps
rcr
or
popf
mov
xchg
insb
dec
add
add
shlb
inc
js
or
mov
lret
cmp
ret
scas
mov
xlat
lock
cld
rorb
and
push
popa
dec
leave
xor
jecxz
out
mov
int3
pop
fs
fcmovne
push
sti
mov
loope
lret
pop
stos
or
dec
stc
int3
std
add
imul
int3
imul
dec
insb
xchg
loop
stc
add
pop
shll
cmc
mov
gs
cmpsl
out
push
clc
std
xchg
cmc
das
fisttps
xchg
mov
sbb
push
inc
adc
sub
xor
add
sarl
das
sbbl
mov
movl
xor
xor
inc
paddb
lahf
and
fcoms
arpl
pop
dec
les
out
movsl
popf
jle
fwait
call
push
dec
push
outsl
fwait
jns
mov
call
sbb
das
rclb
and
arpl
cmc
add
cmp
sub
mov
sti
adc
pop
mov
popa
les
pop
test
cs
sbb
and
lods
xchg
cmpsl
sbb
jmp
sub
adc
cli
sbb
nop
xor
out
xor
sub
mov
sbb
pop
push
js
dec
sub
xor
xchg
and
inc
inc
mov
out
sub
frstor
xchg
aam
testl
jbe
pop
and
adc
jnp
in
mov
hlt
sarl
insl
fsubrl
inc
jl
or
jge
mov
pop
in
lods
push
enter
sub
jae
cmp
adc
xor
dec
sti
mov
xor
add
push
stc
out
inc
std
fidivrs
movsb
dec
mov
sahf
mov
mov
add
mov
data16
sub
lds
popa
daa
sbbb
lods
sub
rcl
out
mov
xchg
jle
lds
enter
pop
xchg
sub
test
xchg
pop
outsl
subb
mov
and
sbb
add
movsb
and
shl
idiv
stos
inc
pop
gs
lds
push
pop
ja
pop
mov
pusha
push
idivl
fs
enter
jo
inc
mov
cmp
push
jle
push
mov
mov
push
fisubs
call
pop
sbbl
jmp
jns
add
inc
mov
out
sbb
add
inc
sub
jge
cwtl
mov
shll
mov
push
pop
mov
cmp
push
loop
adc
inc
mov
outsl
rcrl
in
lcall
mov
ret
out
movsb
pusha
cmpsb
addb
add
add
push
push
mov
mov
call
dec
mov
arpl
les
add
and
or
lods
std
stc
lret
mov
lret
xchg
dec
in
imul
add
cmp
fsubl
push
cli
sbb
mov
push
pushf
or
stos
int3
outsb
shl
and
fldcw
inc
cmp
insb
stos
jmp
inc
mov
mov
ficoml
lcall
mov
scas
sti
xchg
neg
xor
push
test
sahf
dec
xchg
cmp
leave
in
mov
pushfw
fldcw
scas
sub
mov
fwait
or
pop
out
divps
stos
addr16
subl
pop
ss
pop
dec
push
cmp
mov
vandps
insl
ret
pop
daa
xlat
out
ljmp
fwait
inc
sbbb
in
sbb
jno
pop
leave
push
mov
test
dec
adc
lahf
mov
adc
imul
test
je
mov
iret
mov
push
xchg
out
mov
fwait
repz
ja
sbb
scas
loopne
cmp
fists
pop
jle
in
add
call
lods
dec
sub
dec
fs
imul
pop
push
pop
push
push
or
xchg
mov
mov
mov
jecxz
sub
mov
and
pop
jecxz
mov
lods
add
inc
or
add
lcall
mov
push
dec
shrl
jge
test
xchg
ret
mov
dec
insl
addr16
cmc
icebp
xor
sbb
add
sub
sbb
lcall
inc
pop
inc
jle
mov
fcoml
lods
insb
cmpsb
lods
push
pop
inc
imul
sbb
mov
inc
inc
jno
jbe
mov
mov
sbb
loop
lock
orb
sbb
add
or
pop
movsl
leave
xchg
test
lods
or
push
std
fnstenv
jns
stos
cmpb
xchg
xchg
aam
xorb
bound
push
ficoms
push
sbb
sbb
sub
shr
in
push
imul
and
mov
or
loope
scas
test
mov
jp
scas
jmp
out
sub
mov
push
inc
cmpsl
mov
and
push
push
mov
movsl
jae
mov
lods
scas
sbbb
mov
stc
test
stc
pop
test
xlat
jo
test
call
cmp
int
mov
cmp
lods
stos
xor
dec
jnp
cli
fldenv
loop
in
sub
test
fldl2t
xor
mov
dec
jl
add
adc
movsl
pop
jmp
sub
add
mov
mov
mov
les
insb
or
hlt
cmc
xchg
in
inc
xchg
pop
bswap
push
loope
pop
mov
xchg
xlat
jae
inc
shll
cmp
jl
mov
xchg
xor
mov
movsl
int
inc
out
outsb
or
lret
test
fcomip
ret
mov
call
xchg
push
jo
cltd
aad
sti
jbe
mov
sbb
mov
mov
push
aad
dec
stos
lret
pop
stos
mov
push
mov
or
inc
add
and
cmpsb
dec
dec
stos
repz
inc
iret
mov
xor
inc
xor
ret
push
mov
stc
ret
push
push
lret
ss
mov
in
dec
in
ja
or
fst
insl
or
add
sbb
pop
jmp
and
mov
jno
jo
inc
dec
out
xor
push
subps
std
mov
ficoml
dec
and
fwait
clc
ljmp
outsl
xor
pop
data16
fsubs
in
adc
pop
addr16
or
ljmp
enter
testl
sub
or
mov
cmc
cwtl
jbe
mov
fidivs
push
and
adc
push
pop
adc
js
enter
shlb
les
jp
cld
gs
mov
lret
out
mov
aad
jb
push
pop
cmp
popf
xchg
pop
mov
bswap
and
push
and
xor
sub
xchg
jae
in
nop
push
sub
jmp
fdivrs
repz
add
icebp
in
repz
mulb
cmpsb
sub
repnz
jno
mov
push
push
mov
into
imul
in
xchg
mov
push
incl
nop
jnp
jecxz
sub
iret
lea
pop
negb
mov
mov
jge
ds
iret
ret
gs
imul
pop
clc
jbe
xchg
xor
mov
mov
out
in
int3
jecxz
lds
scas
shlb
mov
pushf
test
pop
mov
add
mov
jmp
sub
popl
xorl
fs
xchg
pusha
mov
shlb
insb
jl
fs
loop
mov
push
push
pop
negb
ret
cld
pop
mov
js
mov
mov
push
mov
scas
xchg
or
test
mov
sbb
orl
sub
inc
xor
cmp
jge
ljmp
fucom
pushf
add
mov
pusha
cmp
lds
mov
sub
dec
cmp
or
aas
sbb
pop
cld
imul
sbb
mov
push
shlb
adc
xchg
das
lds
es
mov
sbb
xor
mov
add
loop
ss
int3
pop
and
pop
jae
mov
cmp
xchg
scas
mov
push
pop
test
mov
ss
das
pop
add
add
cld
jg
and
test
push
pop
add
ss
add
dec
movsl
add
or
dec
clc
mov
sahf
push
pop
aaa
sub
ret
inc
pop
sbb
mov
lds
and
rcll
xchg
popf
dec
inc
fildll
push
jmp
inc
and
xchg
lret
and
ss
loop
loope
mov
cmpsl
xor
dec
mov
rclb
aam
mov
lods
sub
add
pop
xchg
sub
lcall
add
xchg
jns
cli
clc
inc
es
and
mov
jmp
xor
mov
loopne
jb
aam
mov
fmul
dec
orl
aas
aad
cmpsl
icebp
fimuls
mov
sti
int3
scas
into
jg
ss
xchg
xor
cmp
test
push
inc
mov
xor
popf
test
in
mov
adc
lcall
mov
dec
mov
aaa
test
inc
rclb
jge
pop
mov
sub
pushf
pop
xor
js
push
imul
jnp
push
addr16
adc
clc
add
xchg
testb
mov
xor
je
adc
ds
arpl
sbb
bound
mov
les
jb
jmp
add
fadds
in
jp
addl
divb
jnp
cmp
xchg
xor
xor
fsubr
arpl
dec
jo
pop
loop
loope
sbb
ss
cmp
ja
dec
jne
js
push
outsl
jae
es
jb
xorb
popf
sub
in
fimull
std
enter
add
mov
int
test
outsb
inc
jecxz
add
add
sub
clc
nop
imul
int3
ljmp
xchg
data16
ret
mov
mov
outsb
stos
mov
test
xchg
lds
clc
rclb
dec
adc
rcll
sar
aas
setge
sbb
sbb
inc
out
pop
and
stos
out
popf
icebp
jg
outsb
push
add
mov
or
jo
movl
push
pop
arpl
mov
add
arpl
das
mov
or
ds
adc
sub
push
push
loope
mov
pop
into
mov
xchg
sahf
mov
pushf
fiadds
into
loop
xor
push
ss
mov
pop
pushf
jne
lret
pop
hlt
enter
jbe
sbb
dec
fstp
xor
enter
ret
mov
push
xchg
push
ds
lea
dec
int
negl
les
sbb
jmp
enter
inc
mov
or
and
cmp
push
pop
adc
js
xchg
out
loop
sub
adc
adc
mov
dec
das
and
or
xchg
fisubrs
loop
jo
nop
push
adc
mov
loopne
cli
aam
add
sti
lea
cli
scas
sub
xchg
sbb
lahf
jg
cmp
mov
jecxz
dec
aaa
pop
repnz
or
daa
nop
adc
movsb
pusha
add
pusha
pop
pop
push
subb
jbe
mov
jne
mov
insb
div
mov
jp
inc
cmc
stos
pushf
and
mov
or
xor
xchg
push
pusha
stos
add
jle
adc
into
xchg
and
add
flds
mov
lods
mov
sbb
push
mov
xor
repz
cmp
rep
stos
xchg
add
stos
mov
fbld
divb
mov
pop
sbb
cmp
dec
fldenv
jbe
mov
mov
outsb
cmp
cmp
add
scas
cmp
jp
sub
add
sub
sbb
out
push
add
testb
mov
add
js
enter
push
xor
aas
cmp
mov
scas
mulb
mov
mov
scas
cld
scas
or
adc
adc
mov
or
xorw
daa
std
xchg
adc
not
ret
stos
and
inc
fs
test
inc
mov
xchg
mov
addr16
test
aam
test
jecxz
roll
jecxz
cld
ss
loop
mov
hlt
fiadds
jge
and
movsb
xchg
mov
cmpsb
icebp
sbb
or
cmp
pusha
enter
jmp
cwtl
sub
enter
add
insb
in
inc
mov
xor
jns
mov
movsl
push
and
repnz
adc
mov
popa
or
lahf
rorb
lods
or
sti
rcr
outsb
shrl
inc
lcall
stos
mov
pop
lods
mov
cld
adc
cmp
mov
xorl
push
dec
sahf
mov
jmp
jo
fldl
stos
add
dec
popf
stos
adcl
out
jmp
cmp
xchg
mov
push
mov
mov
mov
dec
in
push
add
xchg
fadds
cmp
jecxz
cli
pop
data16
and
lods
loope
xor
test
mov
pop
mov
adc
jno
movsb
jle
sub
push
pop
push
pop
mov
dec
jo
adc
pop
loope
xchg
dec
jb
popf
out
in
cltd
addr16
xchg
inc
lret
or
pop
call
orl
clc
add
mov
dec
ficompl
shr
jno
in
fisttpll
jecxz
jns
jbe
into
andl
add
fidivl
js
int
adc
xchg
and
dec
std
mov
mov
fistpl
cmpsb
aas
pusha
rorb
add
fimull
aaa
jns
in
mov
add
sub
mov
mov
mov
enter
xchg
sbb
mov
pop
jg
iret
dec
jne
mov
pop
repz
pop
fcomp
xchg
je
stos
adc
popf
fistpll
add
sbb
cmc
arpl
adc
cmp
mov
add
dec
jge
xchg
fwait
mov
in
mov
sub
mov
aaa
addps
int3
rolb
mov
or
adcb
mov
sahf
ljmp
aam
jmp
pop
ja
sbb
addr16
mov
push
cmp
ficomps
cli
lcall
mov
or
cld
sub
adc
aam
roll
xchg
test
in
and
push
iret
or
lds
adc
pop
into
mov
xor
mov
loop
clc
jns
cmpl
adc
in
imul
cltd
fdivs
sbb
cmp
lea
aam
add
add
in
and
aas
fcomip
out
or
cwtl
or
leave
add
imul
fwait
mov
fwait
pusha
pop
icebp
cmp
xor
aad
pop
jle
je
mov
dec
pop
mov
jne
out
cwtl
cmp
fs
jb
xorl
mov
sbbl
mov
adc
xchg
jge
inc
leave
cmpsl
sbb
or
adc
repz
jl
iret
mov
std
jo
mov
push
xorb
push
outsl
push
stc
cmp
xchg
in
stos
cltd
mov
test
aaa
inc
cld
inc
loop
mov
fs
loopne
dec
cli
int3
iret
mov
cmp
sahf
jg
xor
loop
or
and
pop
lods
aam
or
aam
dec
popf
loop
sbb
adcl
lcall
ds
lock
push
gs
add
idivb
mov
jmp
pop
xchg
sub
insb
stos
fs
jmp
out
mov
ret
mov
jecxz
mov
mov
ja
push
mov
mov
cmp
inc
lcall
xchg
das
mov
push
out
popa
lahf
fcompl
scas
ja
hlt
lods
in
lcall
pop
dec
cli
mov
shlb
outsb
pop
jecxz
xchg
addr16
add
jle
or
sub
pop
sti
mov
sbb
push
mov
xor
mov
jae
roll
pusha
inc
test
and
mov
mov
sbb
xchg
test
cwtl
lea
scas
fisubrs
fwait
jge
pop
rcl
test
jno
adc
or
mov
xor
pop
lcall
addr16
mov
xchg
jns
pop
or
sbb
and
stos
jb
mov
subl
jg
lods
test
in
insb
mov
pop
bnd
push
sub
dec
sub
stos
cmp
arpl
ret
insl
mov
sub
stos
adc
or
lods
adc
sahf
cmpl
mov
mov
jp
ret
jae
fsubrs
shrl
cmp
cmpsl
lods
cmp
imul
daa
gs
outsl
push
xlat
sbb
and
shll
mov
in
mov
enter
mov
ror
cli
into
inc
add
cmp
push
sbb
aam
xchg
je
cltd
pushf
aas
mov
pop
mov
sbb
jle
scas
mov
clc
mov
mov
imul
xchg
fwait
mov
cmp
lods
clc
movsb
shl
sub
out
cmp
ret
mov
daa
repz
mov
or
and
loop
pop
aad
int
sbb
stc
mov
and
dec
and
xor
cmp
push
in
mov
pusha
mov
rcrb
fdivrl
hlt
mov
lahf
fs
cmp
test
xlat
ss
mov
shll
cmp
repz
push
xchg
cmp
push
rcll
xor
dec
xchg
jo
je
outsb
mov
mov
xor
nop
fwait
xor
shlb
into
add
cmp
popf
bound
test
xor
inc
pop
xlat
and
and
pop
ss
arpl
test
iret
clc
xor
testl
dec
push
out
dec
adc
clc
mov
mov
and
jnp
andl
or
lea
icebp
xchg
add
add
lock
stc
inc
jns
mov
outsb
xchg
mov
popf
sub
dec
out
sbbl
mov
adc
pop
hlt
xor
loopne
jp
and
bound
cltd
int
sahf
jg
enter
mov
inc
and
xlat
sub
test
dec
cmp
inc
pop
mov
pusha
cmpsl
mov
xchg
or
es
in
cmp
test
fnstsw
mov
stos
inc
and
push
mov
push
mov
stos
and
fistl
xchg
jns
test
imul
bound
push
add
pop
xchg
in
rcl
out
cmp
and
xchg
imul
mov
sbb
jecxz
cmc
lock
push
loop
cmp
bound
fiadds
sub
sub
lcall
adc
mov
dec
add
or
pop
jns
sahf
sbb
push
movsb
push
rcr
sahf
mov
decl
adc
cmp
gs
inc
jmp
mov
pop
sbb
mov
push
jp
mov
stos
les
scas
xchg
pop
pop
sbb
sbb
es
push
pop
adc
xor
xor
lret
and
jns
dec
cwtl
sub
inc
out
imul
mov
sub
mov
mov
cltd
fstl
dec
push
xorb
xchg
and
aam
out
cmpsl
aas
or
jg
mov
stc
testb
test
bound
les
fs
popa
push
sbb
and
testl
loop
sbb
mov
xor
rorb
cmp
gs
jbe
pop
xor
std
adc
std
jl
dec
xchg
mov
cmpsb
cmp
jmp
lods
and
ss
sti
pusha
int3
rcrl
push
ds
lret
test
fcoml
pop
inc
add
or
push
mov
pop
or
pop
adc
adc
pop
test
push
loop
cmp
cld
lock
pop
loop
mov
push
mov
pop
jne
jae
xor
outsl
dec
mov
loop
sbb
int3
lds
dec
inc
movsl
mov
cmc
xchg
aaa
faddl
push
movsb
daa
enter
aad
mov
lret
mov
shrl
fdivl
sbb
enter
ret
mov
dec
add
pusha
scas
movsl
xor
sbb
and
mov
out
pop
aam
jo
dec
inc
adc
mov
call
mov
pop
imul
inc
imul
test
sub
jns
xor
gs
into
or
inc
arpl
adc
cmp
push
sbb
and
mov
in
cmpsb
loope
or
fidivrl
adc
sti
xor
jnp
add
mov
mov
testl
iret
or
shll
fs
adcb
outsl
jo
and
dec
xchg
mov
lock
hlt
push
push
scas
xchg
call
pop
push
cvtps2pd
cmp
mov
sub
lds
clc
dec
inc
inc
js
test
add
lret
ja
daa
inc
call
lcall
add
shl
mov
push
sar
pop
push
pop
push
aas
bound
mov
fcomip
mov
shll
rclb
stos
cwtl
push
ljmp
sub
pop
scas
and
lcall
inc
xchg
cmp
movsb
push
js
sbb
mov
lock
pop
stc
pop
test
repz
xor
cmp
and
mov
mov
sbb
push
std
sub
add
sbb
push
jae
push
int3
push
inc
and
xor
iret
repnz
adc
push
out
or
repz
adc
or
lcall
sbb
pushf
out
scas
mov
rcrb
sbb
in
scas
in
test
sub
push
cmp
rorb
addr16
loopne,pt
lods
pop
mov
aam
jae
stos
or
mov
scas
push
in
sti
fsubrl
cmp
and
push
fists
sub
ret
mov
ja
adc
inc
gs
hlt
fldcw
pop
add
cltd
jge
movsl
xchg
inc
inc
fldl
sub
mov
add
std
jg
add
mov
in
mov
cmpsl
das
mov
repnz
fdivl
fdivl
inc
and
mov
dec
push
sarb
ljmp
sub
adc
in
ljmp
sbb
pop
test
mov
scas
aaa
jb
mov
sub
push
sar
js
pop
add
psrld
int
movsl
test
fcompl
imul
stos
sub
jmp
lds
jmp
sbb
adc
or
mov
push
sub
xchg
in
xor
push
cmp
mov
xor
ret
in
rclb
test
cmpsb
cmp
popf
add
or
push
jno
mov
lea
inc
inc
cli
push
stos
jge
cwtl
xchg
cmpsb
rcrb
mov
ljmp
fsubrs
mov
jns
xlat
in
test
add
pop
pop
xor
xlat
loopne
fld1
xchg
shrl
sub
fs
stos
inc
push
test
shr
enter
orl
test
mov
cmp
sub
insl
xor
outsl
sbb
sub
sub
dec
aaa
shlb
sub
sub
inc
push
shrl
mov
xor
cli
hlt
jg
clc
jge
outsl
dec
inc
push
imul
stc
fs
aam
sub
pop
jns
mov
and
dec
ds
xchg
leave
scas
scas
cmpsl
pop
cmp
imul
out
push
cmp
and
add
push
cmp
ffree
or
dec
and
hlt
jnp
cmp
hlt
pop
sub
dec
push
cmp
xlat
mov
xchg
pop
aam
mov
mov
gs
cmp
aaa
lock
stc
push
sub
cli
inc
rcrl
fwait
dec
dec
xchg
pusha
aaa
push
add
insb
lcall
and
js
lods
int3
inc
xchg
jmp
mov
mulb
lock
call
cmp
out
pop
int3
ret
mov
loop
push
pop
mov
fstpl
and
push
popf
clc
js
notb
or
dec
jno
stos
push
cmp
fst
adc
mov
into
out
jno
fld1
jne
aad
inc
lds
mov
test
leave
out
jp
cmp
xchg
pop
mov
dec
fwait
test
dec
pop
fldl
pop
mov
fwait
xchg
ljmp
xchg
push
xchg
inc
cs
inc
scas
mov
jle
inc
inc
push
push
daa
push
pop
sbb
push
dec
jns
sahf
fsubrl
je
fstps
jp
bnd
in
pop
pop
ret
jle
ja
push
inc
push
clc
inc
clc
sti
sbb
sub
loopne
cmc
jg
lock
xchg
dec
and
pop
push
inc
push
popf
adc
and
add
cmp
xor
jecxz
cmp
lods
mov
push
popf
jmp
cs
daa
stos
jno
stc
cmp
xor
sbb
data16
adc
ljmp
push
insl
decb
in
xchg
lock
mov
daa
mov
addr16
inc
xlat
ss
inc
mov
adc
cmp
jl
test
mov
rcr
cmp
sbb
sbbl
ss
xor
sub
lds
enter
sbb
popw
adc
lret
outsb
mov
imul
in
stos
ja
ja
pop
dec
xor
enter
addr16
cmp
repnz
testl
imull
mov
mov
cmp
mov
jae
inc
out
cmc
mov
jns
xchg
mov
sub
xchg
je
loop
subl
mov
aaa
or
jns
in
repz
lret
dec
cmc
hlt
mov
pop
subb
in
add
push
aam
xlat
and
mov
cmpsb
test
mov
add
inc
outsl
sub
push
ret
or
push
adc
out
outsl
jl
mov
xlat
xchg
pushf
inc
aas
mov
xor
sahf
mov
inc
jmp
sub
fimuls
adc
inc
fsubrl
add
sbb
bound
loope
inc
clc
pusha
xor
fcmovnu
repz
in
mov
loopne
xchg
hlt
dec
xchg
leave
stos
cmp
sbb
pusha
mov
push
or
push
cwtl
lods
and
dec
and
in
sbb
loopne
mov
cli
push
adc
mov
mov
dec
outsl
add
mov
mov
mov
pop
mov
inc
adc
xchg
imul
aad
dec
pop
cltd
imul
and
mov
clc
add
out
sub
add
sbb
clc
cmpsb
addb
stc
ret
dec
xchg
mov
add
aad
ret
push
push
push
jb
pop
pop
lahf
cmp
sub
mov
jb
add
loope
cmp
inc
push
xlat
clc
es
out
fstps
push
inc
sub
imul
mov
mov
das
and
xchg
mov
mov
lahf
add
xchg
lds
stc
cmp
std
pushf
andl
sbb
add
insl
iret
pop
sub
adc
mov
mov
aaa
inc
test
dec
and
add
icebp
dec
fcomps
sbb
cwtl
aam
dec
and
adc
or
push
mov
inc
insl
lock
dec
adc
jae
pusha
mov
inc
scas
pop
dec
add
add
pop
fidivl
fxtract
jmp
bound
xchg
imul
inc
lods
pop
scas
cmp
insl
xchg
add
add
pop
mov
pop
es
mov
add
add
test
hlt
xchg
cwtl
pop
out
fcoms
dec
ds
sub
mov
fwait
mov
adc
or
notb
clc
ret
inc
add
cld
xor
ja
xchg
ss
jg
inc
lods
lcall
clc
movsb
cmp
int3
test
data16
xor
dec
or
pusha
pop
inc
push
es
out
test
negb
pop
jae
sub
cld
aam
xchg
sbb
js
lods
push
shll
jo
sub
push
bound
into
or
ss
ret
ja
xor
inc
psraw
sub
dec
sub
pop
lcall
adc
mov
xor
jp
pop
adc
fdiv
xor
imulb
mov
and
cld
scas
jno
pop
inc
xor
or
test
aad
ret
and
xchg
adc
inc
outsb
dec
mov
test
leave
dec
std
mov
adc
ret
push
outsb
sti
cmp
mov
pop
enter
lods
mov
or
cld
jnp
scas
or
xchg
jle
push
mov
xor
sbb
dec
inc
rcrb
les
lea
dec
xor
or
es
push
xor
xor
popf
adc
call
aam
sub
cmp
loop
daa
and
sbb
clc
dec
in
ljmp
pusha
sbb
mov
movsb
lods
push
cli
pop
sbb
ret
pop
cmp
jp
aas
ljmp
mov
scas
test
adcb
xchg
jns
cmpsl
sub
adc
aam
mov
pop
and
jo
cmpsb
es
test
xchg
imul
ret
fs
lea
cmp
xchg
and
xchg
mov
pop
scas
inc
imul
mov
cmc
mov
in
cmp
fists
xchg
or
in
adc
setp
sahf
mov
xor
sbb
inc
sbb
cmp
shr
cmp
mov
ds
dec
movsb
jnp
or
negb
es
mov
cs
nop
test
stc
fadds
xor
leave
enter
jl
adc
shl
mov
inc
inc
mov
lods
cmp
or
cwtl
cmp
jnp
faddl
jb
cmp
mov
sub
cmp
lods
rcr
loop
cmp
ret
or
and
pop
jnp
cmp
add
scas
push
mov
cvtps2pd
inc
pop
jp
in
push
or
push
bound
in
loopne
mov
bound
lahf
sub
add
bound
dec
ja
inc
sbb
cmpsl
stos
push
dec
sub
jae
insb
stos
pop
les
gs
pushf
mov
aam
dec
shrl
fstpt
mov
add
lock
adc
inc
sbb
add
pushf
jo
jnp
push
mov
dec
iret
pop
ret
loope
or
fwait
out
lods
cwtl
vpmaxsw
dec
push
xchg
jne
sbb
xchg
push
inc
mov
pop
xchg
dec
sub
push
lds
add
and
hlt
pop
in
packsswb
xchg
adc
mov
hlt
inc
pop
inc
lret
xchg
shrl
push
in
movsl
inc
jge
sub
dec
and
pop
fldcw
adc
lods
jmp
repz
mov
lret
jl
loop
mov
cs
adc
mov
test
negb
test
sub
nop
repz
mov
iret
pop
push
sbb
push
add
fcoms
jge
bound
mov
jns
leave
nop
push
and
imul
sbb
xchg
iret
movsl
xchg
xchg
jae
jmp
push
pop
xchg
pop
sbb
push
dec
cltd
jb
andl
pushf
dec
mov
cmp
out
sbb
stos
xchg
stc
xchg
push
gs
jo
jb
out
test
jge
in
orb
mov
sbb
jne
dec
aad
add
mov
je
cli
loope
mov
test
jne
xchg
sbbb
out
lock
inc
pop
cmp
dec
orb
dec
jnp
testb
ret
cmp
adc
xchg
mov
lods
repz
jg
mov
jno
or
in
cmp
jbe
out
pusha
pop
lock
mov
add
out
and
mov
in
cwtl
adc
std
xchg
aas
jnp
outsl
sub
adc
fdivrs
inc
jnp
ljmp
enter
pop
cwtl
cmp
sub
shrl
push
sub
rorl
rclb
dec
les
pop
fistl
ljmp
lock
sub
mov
mov
out
out
pop
clc
ja
loopne
cld
cmp
sahf
subl
xchg
test
mov
jno
xor
aad
dec
jbe
mov
aas
sub
cmp
add
mov
lret
and
fdivs
cwtl
insb
inc
and
cmp
pop
js
sbb
subl
xchg
or
cmp
leave
add
jl
fsts
add
xor
out
cmp
ja
mov
and
pop
in
daa
add
int
inc
mov
bswap
xchg
clc
inc
xor
fisttpll
shr
adc
stos
cld
adcb
xorb
adc
mov
inc
adc
das
mov
ja
repnz
sahf
xor
or
pop
data16
dec
repnz
pop
in
cli
fwait
mov
pminub
lods
lcall
popf
dec
push
dec
imul
xchg
xor
in
xchg
repnz
in
lahf
icebp
loop
xor
in
mov
xorb
pop
sub
insb
xchg
cmp
mov
xor
add
hlt
pop
lahf
xchg
jp
push
dec
test
test
xchg
xchg
in
daa
cmp
insl
inc
fdivr
mov
lock
jne
ja
mov
mov
enter
add
sbb
mov
mov
mov
mov
sbb
add
in
outsb
mull
popf
sti
pop
lahf
xchg
shlb
xorb
bnd
std
je
dec
add
jecxz
mov
test
cmp
xchg
and
xor
movsb
pop
inc
adc
dec
xlat
mov
push
out
movsl
popa
dec
enter
cmpl
not
and
sbb
mov
jmp
test
hlt
xchg
adc
out
add
add
pop
mov
cmp
loopne
add
add
lods
movsl
test
sbb
test
mov
pushl
mov
push
mov
jecxz
push
test
push
ja
fcmove
lret
or
in
fisttpll
sub
lcall
pop
dec
adc
ss
mov
lds
mov
outsl
mov
xor
pop
scas
cmp
in
cmpsl
ds
and
gs
mov
mov
xchg
mov
or
and
fsubs
dec
lret
cld
pushf
jmp
in
repz
fimuls
xor
jmp
out
mul
mov
neg
hlt
or
xchg
xlat
into
push
stc
js
in
push
std
mov
push
jnp
xchg
mov
cmpb
aad
cwtl
sbb
cmp
in
lret
inc
xor
sub
push
sub
mov
inc
ret
or
sub
adc
lret
mov
sbb
adcl
je
inc
fisubrs
bound
gs
lret
jmp
inc
sbb
and
aaa
loope
inc
stos
into
std
mov
cwtl
adc
outsl
call
mov
mov
xchg
xchg
ljmp
jmp
pop
imul
mov
ds
lea
stc
and
sbb
out
out
popf
mov
lcall
and
pop
mov
xor
push
popf
or
bound
mov
mov
xchg
xchg
call
pop
rcl
mov
shll
jns
mov
movsl
dec
jp
cmp
push
adc
fisubrl
mov
jb
xchg
xor
ret
push
xchg
imul
dec
inc
xchg
mov
fisubrs
pop
testb
dec
xorb
pop
lret
adc
aaa
roll
insb
or
in
pop
fistpll
sub
out
push
roll
ret
xchg
xor
mov
push
insl
add
xchg
mov
aas
and
fimuls
dec
add
cmp
or
cmp
shll
adc
out
sti
out
out
mov
in
lcall
adc
inc
int
gs
movsb
lock
adc
int
mov
pop
ljmp
push
pop
push
rolb
mov
push
test
inc
mov
sub
jge
inc
or
mov
idivl
subl
enter
inc
movsl
ja
cli
imull
popa
jo
dec
pushf
test
mov
push
std
add
cwtl
out
data16
loope
push
or
loopne
decb
push
bound
sbb
fldcw
mov
add
add
std
aad
shrl
js
xor
sahf
loope
and
mov
mov
scas
xchg
xchg
xchg
lcall
mov
lds
je
ljmp
shll
fcom
std
aad
fisubl
cltd
jno
push
cli
lea
inc
icebp
fistpl
subl
inc
and
jns
lcall
mov
lahf
push
sahf
mov
rclb
xor
push
movsl
call
loope
stc
repz
pusha
adc
sub
mov
insb
lret
enter
mov
jle
inc
mov
and
sub
dec
sbb
popf
cmp
adc
mov
and
into
or
add
inc
push
push
in
cltd
sub
ja
lcall
add
mov
aaa
and
mov
inc
shlb
inc
or
jp
fsin
and
mov
mov
ja
pop
xchg
pop
insl
dec
dec
push
loop
fdivrl
or
stos
cltd
clc
sub
popf
nop
dec
adc
lea
pushf
or
xchg
mov
test
out
or
cmpsl
inc
pushf
imul
cmp
pusha
clc
xchg
fisubs
mov
xor
stc
fidivl
cltd
lods
jmp
lods
jns
sbb
daa
cmp
add
fucomi
lcall
xchg
loope
inc
mov
arpl
dec
push
inc
fcoms
xlat
call
out
cltd
xor
or
jecxz
stc
mov
lock
or
fmull
jg,pt
leave
leave
mov
or
dec
mov
pop
inc
and
sub
pop
cmpsl
add
int3
ret
xchg
dec
sub
test
fs
xchg
frstor
push
out
adc
mov
gs
pop
jg
ret
cltd
mov
movsb
imul
lret
lret
sbb
shr
test
pop
jp
xchg
lea
in
mov
mov
add
jbe
outsl
mov
adc
adc
scas
pop
sub
jb
aaa
jp
lret
repnz
sub
daa
dec
mov
fisubrl
or
sahf
jl
dec
pop
arpl
sub
adc
jmp
out
lret
xor
ja
insb
pop
std
sbb
mov
and
add
dec
cmpl
cmpsb
sbb
xchg
lret
push
push
inc
sbb
jno
jno
adc
cmp
std
inc
ja
add
movsb
or
xor
out
pop
jmp
and
stos
or
mov
fidivrl
cltd
jmp
sub
pop
das
cmp
outsb
push
mov
inc
sbb
mov
cmpsl
inc
dec
and
pop
iret
cmp
ds
outsl
inc
pop
test
dec
fstps
ljmp
mov
sahf
adc
mov
sbb
int
add
lahf
mov
mov
fcmove
outsb
lock
icebp
jae
rcl
push
ficoms
xor
push
test
lahf
fildll
out
adc
jle
pop
sbb
mov
mov
fbstp
in
jg
adcb
jle
sub
sbb
push
je
in
dec
sarb
mov
mov
jl
cltd
test
dec
hlt
insb
cmp
imul
adc
das
and
jb
lret
scas
add
sub
insb
out
xlat
mov
bound
mov
add
sub
and
adc
inc
mov
cmp
adc
push
xchg
int3
jmp
dec
jno
or
mov
mov
jmp
stos
and
xor
not
popa
sarb
add
dec
jl
inc
mov
xchg
add
add
pop
or
and
les
mov
fs
mov
call
and
pop
sbb
stc
xchg
xor
pop
adc
fbld
xchg
pop
enter
mov
adc
mov
xchg
aaa
je
and
sarb
call
fimull
mov
gs
shll
pushf
or
out
sub
mov
cmpsb
sbb
incl
loopne
mov
lahf
cltd
inc
std
fidivrs
xchg
pop
adc
xor
push
fidivs
add
add
loopne
mov
aas
stos
in
inc
push
mov
out
add
add
out
lea
mov
and
mov
je
jns
dec
mov
std
dec
pop
push
js
dec
mov
repnz
pop
adc
jno
cmc
cmp
setno
orl
fsubr
call
mov
mov
or
loopne
bound
cmp
mov
insb
pop
mov
mov
fdiv
adc
insl
or
and
or
lds
sbb
mov
loopne
jb
inc
les
mov
in
inc
add
sbb
ja
inc
xor
pop
jae
outsl
fsubrp
mov
cli
pop
xchg
movsl
call
mov
inc
or
jmp
lret
lret
sbb
insb
mov
rorl
xor
lcall
jmp
shlb
es
push
test
add
dec
rcr
jp
xchg
call
les
mov
aas
pop
es
cmp
lock
lret
dec
cltd
lcall
xor
xlat
jge
sti
loop
jge
outsb
fst
lds
insl
sar
push
popa
push
sahf
adc
pop
subb
mov
aas
xchg
fwait
pop
daa
xchg
sbb
sub
jo
test
int3
jnp
cmp
jne
jge
insl
jo
pop
sbb
test
adcl
lock
or
mov
das
xchg
mov
push
sahf
jbe
xlat
push
jns
es
ret
lret
cmp
xor
setne
sbb
loopne
sarb
cmp
jmp
mov
stc
movsb
jg
in
inc
inc
mov
out
mov
test
add
clc
pop
mov
mov
dec
adc
mov
jg
cmp
xchg
xchg
fimuls
in
cwtl
in
es
test
fs
jecxz
cltd
insb
mov
add
jp
jo
cmpsl
push
test
js
lahf
lret
enter
or
adc
aas
adc
fsubrp
sub
xchg
aam
outsb
mov
lods
int3
lock
aad
rcrl
xor
mov
inc
add
push
test
adc
add
and
or
push
push
shrb
add
ret
xor
cmp
stc
pop
inc
mov
lods
outsb
stos
mov
testl
jns
lahf
pop
adc
mov
inc
mov
test
rorl
imul
and
add
jb
lock
data16
imul
pop
js
aas
pop
ja
jp
loopne
push
lds
sti
test
neg
mov
push
into
ss
cmc
fcoml
fcoml
push
sub
stos
nop
sub
mov
test
cmp
imul
repnz
and
mov
int
pop
imul
add
outsb
mov
or
scas
push
sarb
aad
jge
in
and
sbb
pop
pushf
imul
imul
mov
cmc
test
mov
sbb
fstps
test
fldcw
xchg
sub
cs
movsl
pop
mov
pusha
mov
jo
jmp
lret
jle
mov
dec
mov
mov
and
inc
or
mov
out
test
outsl
stos
or
stc
mov
mov
fwait
cmc
add
jnp
mov
fdivrs
cld
fdiv
imul
repz
rclb
iret
cltd
or
mov
movsb
push
jecxz
pop
aaa
cwtl
pop
sub
or
xchg
mov
mov
ss
jecxz
dec
pop
iret
lcall
xor
jae
rcrl
sub
popa
sbb
out
mov
push
and
ljmp
cwtl
outsb
xchg
pop
push
sub
xchg
and
mov
bound
pop
and
scas
dec
hlt
and
cwtl
pop
sbb
les
push
dec
cmp
movsl
repnz
sbb
addr16
mov
mov
jmp
inc
lret
add
adc
push
or
mov
and
add
popa
dec
mov
call
push
fcoms
push
sbb
popf
ja
adc
lods
enter
iret
jg
mov
std
lock
out
hlt
pushf
stos
push
mov
mov
insb
add
scas
fstpl
pop
dec
repz
adc
les
lods
out
leave
dec
clc
stc
rcl
popa
cmp
sbb
add
and
and
dec
xor
fcmovb
cmc
cltd
cmp
mov
jae
jl
aam
scas
sub
inc
jmp
mov
lret
mov
dec
cwtl
js
mov
sub
fdiv
das
pop
insb
pop
stos
flds
inc
xor
cmp
movsb
repz
std
cmpsb
addr16
xor
aaa
int3
test
bound
jle
cli
jbe
adc
mov
xor
rcrb
cmpsb
mov
sbb
adc
xchg
xchg
insb
adc
or
and
mov
push
cmpsb
outsb
cltd
sub
mov
and
rcr
mov
dec
sahf
cltd
adc
dec
xchg
stos
neg
jp
adc
inc
stc
xchg
fcmovbe
int
jo
movsl
jp
adc
jb
ret
jb
push
subl
xchg
bound
mov
pop
outsb
sbb
adc
js
orl
fwait
sub
movb
cmp
seta
xor
pusha
add
sub
sub
stos
xchg
inc
push
fsubs
jae
push
xcrypt-ctr
cmpsl
sbb
ficoml
xlat
ret
sbb
pop
cwtl
int
adc
bound
lret
mov
arpl
repz
pop
jno
dec
sbb
vunpckhps
out
dec
adc
dec
inc
out
mov
mov
out
lret
sarb
sbb
xchg
sbbb
push
std
mov
cwtl
test
and
aaa
and
cld
adc
enter
mov
and
popf
addr16
mov
aad
mov
je
nop
inc
push
sub
sti
or
pop
test
nop
in
mov
add
in
outsl
xor
outsl
xchg
jmp
and
daa
outsb
and
jne
or
fcomp
fmull
ja
mov
les
scas
rcr
idivl
insb
jo
sub
das
xchg
mov
test
in
test
mov
jns
loopne
or
dec
cmpsl
loope
sub
mov
mov
push
sti
imul
jmp
pusha
or
aad
xchg
stos
movsl
xchg
mov
xchg
ret
ja
xchg
insb
in
ds
mov
movsl
mov
sbb
fdiv
jg,pn
pop
add
lret
jno
mov
ds
mov
xchg
mov
mov
sbb
mov
mov
push
pop
lea
mov
add
add
rclb
aad
adc
mov
fsubrp
add
imul
push
mov
lret
cmpl
pop
mov
out
mov
mov
jbe
std
xchg
xor
sub
insl
mov
sbb
fldt
mov
mov
test
xchg
sbb
jne
js
inc
pop
imul
and
add
imul
lahf
or
imul
cmp
rcr
gs
sub
mov
lahf
mov
push
or
sub
call
or
jne
xchg
loopne
add
insb
lock
mov
and
lcall
lock
or
ret
pop
fmuls
and
adc
loopne
cmp
outsl
xor
cmp
daa
sub
xchg
cmp
cltd
dec
ret
mov
and
inc
adc
pop
pop
iret
push
mov
adc
jne
loop
fidivrs
sbb
inc
jp
mul
push
in
xchg
sbb
adc
lret
clc
cmpsb
jno
inc
sub
adc
fsub
iret
xchg
push
lods
imul
shrb
push
add
outsb
popf
lock
clc
fwait
in
arpl
mov
andl
sbb
sbb
jbe
fsubrl
add
dec
call
inc
mov
push
sbb
dec
fcmovu
aad
shlb
mov
pop
mov
inc
mov
lahf
mov
lea
inc
sub
test
push
sbb
outsl
mov
neg
ds
scas
insb
in
dec
mov
cmp
adc
inc
and
and
fnstcw
fisubrl
popf
jl
lods
mov
imull
or
or
out
pop
lcall
push
cmc
adc
or
xchg
es
and
cld
lock
daa
or
stc
mov
mov
lods
xlat
adc
adc
inc
xchg
or
xorl
dec
scas
mov
test
filds
mov
mov
ror
xor
ss
sbb
xor
pop
cmp
bound
and
outsl
stc
inc
out
xor
dec
pop
lock
jo
mov
in
xchg
xchg
repz
mov
mov
push
xchg
xchg
mov
sbb
jne
test
sbb
loopne
xor
ret
or
dec
adc
fdivl
test
test
out
inc
adc
xor
or
fldenv
data16
adc
aaa
and
inc
sbb
cmp
or
jle
call
icebp
cltd
sub
xchg
sbb
push
out
mov
push
or
pop
scas
cmc
push
cwtl
sbb
in
dec
pop
xor
jne
sub
mov
xorl
inc
pop
xchg
mov
pop
ja
loope
sub
inc
loop
inc
xlat
popf
nop
adc
sbb
popf
jle
mov
mov
stos
notl
sub
and
das
lods
pop
mov
stos
ret
add
pop
add
mov
in
ret
push
adc
fisttpl
jbe
jnp
out
or
lret
pop
pop
ss
call
das
mov
sub
call
cwtl
loopne
pusha
test
add
insb
pop
stos
enter
jo
je
jb
xchg
sbb
and
ds
or
mov
mov
cmp
or
push
sahf
int3
adc
push
mov
jecxz
in
ffree
mov
lahf
sbb
or
mov
sbb
push
mov
pop
pop
cs
scas
addr16
sbb
fs
adc
xchg
xlat
aad
lock
mov
subb
and
mov
mov
xchg
test
out
lret
mulb
xlat
cmpsl
mov
testl
xor
sub
jl
adc
arpl
test
xchg
jge
js
jp
mov
jno
in
shl
push
jp
loop
sub
pop
xchg
enter
fnstsw
mov
pop
into
or
jne
lds
jmp
mov
es
ds
mov
hlt
ljmp
mov
in
sbb
icebp
jne
insl
popf
fidivrl
add
mov
pop
arpl
dec
dec
mov
sub
int
mov
ja
push
sub
outsl
aaa
jg
mov
sbb
dec
cli
xor
pop
pop
imull
dec
push
lea
outsl
push
scas
lds
jl
mov
addl
xchg
cli
push
adc
mov
mov
adc
pop
popa
jmp
jb
push
and
loope
push
and
pop
outsl
and
fsubrs
xor
xor
add
cld
sbb
jae
jge
mov
negl
cmpsl
pop
mov
dec
test
push
bswap
outsb
addr16
cmp
or
mov
mov
adc
xchg
cmpsb
pop
in
mov
lods
aaa
mov
outsl
pusha
jp
sarl
roll
dec
mov
jb
jl
sub
cmpsl
scas
aad
iret
mov
inc
imul
push
sub
ja
ja
mov
push
and
ret
enter
lods
imul
lcall
out
pop
pop
jg
outsl
in
adc
pop
addr16
or
sbb
frstor
dec
ss
std
xor
dec
inc
sti
inc
mov
mov
xchg
mov
insl
enter
inc
rcrl
lahf
mov
fadd
push
popf
fcomps
push
call
out
arpl
sbb
enter
pushf
jmp
dec
stos
in
mov
pop
xorl
dec
sub
ss
aaa
add
sub
jns
bound
jle
mov
dec
iret
inc
jp
scas
insl
mov
gs
mov
inc
xor
xor
xchg
mov
jmp
mov
fs
lahf
add
jno
pushf
orl
add
aad
and
jae
xorb
pop
push
aam
jno
push
cmp
std
adc
outsb
sbb
ljmp
repz
lock
sbbl
mulb
add
push
cltd
push
int
je
shll
push
in
inc
rorl
inc
cmpl
bound
xchg
adc
pop
lret
inc
xorb
mov
std
in
and
adc
sbb
and
in
fsubrs
jg
sub
lahf
ret
and
aaa
mov
mov
add
sub
xlat
int
and
dec
inc
sub
mov
test
in
jecxz
xlat
pop
into
fwait
aaa
mov
add
lea
dec
shlb
pop
sub
pop
ss
jbe
divl
in
jp
cs
movb
ret
sub
neg
test
or
stos
jne
aam
cmp
imul
mov
mov
push
lahf
ljmp
add
mov
xlat
mov
shlb
add
add
cmpsb
jno
push
sbbl
sbb
inc
sbb
ret
adc
fwait
sbb
sub
jno
in
jb
movsl
and
stos
daa
mov
adc
push
adc
mov
dec
pop
jle
js
and
inc
mov
daa
inc
push
shl
je
cmpsl
dec
repnz
inc
cmpl
pop
xchg
jbe
repz
decb
insb
cmp
and
lahf
lcall
sbb
orl
movsb
ds
aaa
ret
lds
push
addr16
sahf
jns
mov
mov
sbb
mov
and
ret
divb
xlat
mov
mov
and
cmpl
sub
js
push
mov
daa
sahf
cltd
jecxz
cmpsl
adc
movb
das
call
dec
adc
pop
sti
in
test
dec
cmp
roll
ret
fistpl
pop
hlt
test
imul
mov
rcrb
hlt
jge
repnz
cmpsl
add
adcl
popf
and
fidivrl
mov
scas
lods
out
stos
filds
jmp
test
or
inc
fstpl
xchg
int3
insb
mov
push
dec
mov
shld
xchg
sbb
add
aad
mov
nop
dec
mov
dec
add
and
xchg
ljmp
cmpsl
dec
xlat
mov
sarb
mov
jp
cmp
mov
mov
imul
aas
in
mov
cmp
inc
xor
pop
mov
adc
fcomps
arpl
movsl
sbb
push
inc
mov
dec
sarl
bound
lods
pop
pop
mov
adc
mov
pop
jg
aam
jle
ss
jmp
sti
dec
imul
fimuls
jl
data16
rclb
loopne
sbb
mov
inc
mov
lods
xlat
outsl
insb
adc
adcb
fwait
inc
sti
and
daa
jne
ja
mov
dec
adc
jmp
dec
xor
push
and
jae
es
insl
jo
xchg
cli
jne
icebp
jge
push
or
repnz
push
push
xchg
cmpsl
jmp
scas
jns
in
add
imul
es
inc
dec
jbe
xchg
in
adc
adc
adc
in
dec
mov
ja
nop
push
cmp
jmp
les
pushf
lahf
sarb
cmp
mov
sub
out
pop
mov
enter
aas
xchg
mov
repz
and
movsl
adc
push
cwtl
inc
mov
sbb
enter
lods
pop
or
sub
or
js
or
xchg
ss
outsb
in
fldt
and
adc
xor
push
ss
sub
test
lret
cld
mull
xlat
dec
jmp
xlat
mov
cld
mov
inc
push
ficoms
sbb
dec
sbb
in
loopne
jmp
or
cs
lea
pop
popa
adc
jbe
lock
xor
mov
jb
jl
int
ljmp
fwait
dec
out
leave
jle
repz
cs
enter
pop
int
fldl2e
cli
cld
fstpl
insl
xchg
pushf
sarl
mov
cmp
lret
mov
mov
test
hlt
repnz
add
in
xchg
mov
mov
ret
stc
in
add
loope
jnp
shll
jg
dec
inc
jecxz
rcll
es
jns
inc
fdivrs
orb
add
cmc
int3
jp
dec
sub
in
in
fmull
dec
jecxz
shll
and
push
adc
cli
cwtl
pop
dec
repz
aas
inc
or
pop
push
sub
xlat
mov
mov
out
lock
decb
ret
xor
mov
shrb
dec
movsb
sarl
sub
ret
mov
mov
movsb
orl
mov
movsb
leave
xor
jle
cmp
jno
sbb
fisubl
bound
mov
pop
stc
or
or
int3
test
sbb
in
lea
jnp
mov
movsl
fadd
jl
mov
xchg
shl
or
fwait
inc
add
pop
out
sbb
adc
ja
mov
xchg
dec
stc
push
popf
fadds
fwait
xor
out
push
repnz
dec
push
aaa
mov
xchg
or
cmp
add
pop
out
imul
add
push
jle
mov
in
add
jnp
or
sahf
lods
aam
arpl
xor
fdiv
dec
push
movsl
aaa
pop
fwait
mov
stos
pop
adc
ret
scas
mov
mov
or
cmpsb
fisubl
inc
jbe
data16
jnp
out
dec
jle
scas
or
into
or
pop
addr16
push
shl
fdiv
jle
cmpsb
xchg
pop
test
mov
js
sbb
xchg
mov
mov
fwait
sbb
dec
pop
daa
in
bound
shl
out
dec
xor
jno
jns
pushf
mov
mov
ret
loopne
sub
mov
jp
xor
adc
icebp
add
adc
ja
movsb
or
xor
adc
jle
je
cmp
and
and
pop
inc
gs
rolb
mov
dec
jg
jns
scas
ror
je
mov
lret
mov
push
jp
inc
aaa
sbb
in
test
mov
push
sbb
or
and
leave
xor
xor
cmpsb
mov
fwait
cmp
xor
in
cmp
jmp
push
gs
pusha
adcl
cmp
jl
stos
das
pop
insb
pop
xchg
cmp
mov
jecxz
xchg
popa
arpl
lahf
stos
mov
pop
test
and
sbb
inc
xchg
filds
pop
mov
mov
in
test
jl
arpl
lods
xchg
inc
dec
inc
scas
addl
shrl
push
xor
jp
dec
push
not
test
je
add
int
or
cmp
xor
imul
arpl
dec
dec
mov
pop
inc
or
adc
repz
cmpsb
repnz
pop
mov
mov
ror
dec
jl
mov
mov
popf
cld
pusha
imull
xchg
dec
cmpsl
pop
stos
incl
sbb
or
fwait
insb
arpl
int3
pop
mulb
dec
mov
lcall
jg
cmpb
fdivp
cmp
or
jmp
imul
es
sbb
or
xchg
mov
adc
adc
cmp
and
cli
push
cmpsl
push
test
sbbb
sbb
int3
ret
movsb
lods
sub
faddl
lods
cmc
xor
lcall
add
and
repz
movsb
adc
movsb
icebp
pop
aaa
mov
add
imul
aaa
xor
add
mov
mov
mov
fcomps
aas
sti
xchg
cmp
std
xchg
pop
dec
jg
fsubl
repz
fmul
ss
jbe
lahf
repnz
rcrl
push
xor
enter
out
mov
xchg
das
sub
mov
xchg
aaa
add
jge
mov
shlb
iret
in
jb
sar
jae
fdivr
sbb
icebp
sub
mov
xchg
or
dec
ss
sub
lods
addps
and
lods
inc
xlat
pop
nop
out
in
xchg
je
aas
xchg
pop
hlt
inc
mov
push
in
cwtl
int
jns
mov
shr
sbb
mov
add
stos
push
sub
cmc
push
pop
xlat
hlt
jae
sbb
adc
ret
inc
cmp
ds
jg
jnp
push
add
mov
test
insl
or
mov
mov
xor
jb
ficoms
imulb
lret
and
loop
xlat
push
pop
cmp
mov
ret
push
pop
ret
mov
loopne
pushf
lcall
xor
test
pop
mov
pop
inc
cli
fcos
adc
jae
xchg
test
lret
pusha
repnz
sbb
pop
pop
pop
stc
mov
ds
jno
inc
cmp
fs
nop
addr16
push
adcb
scas
pop
lcall
pop
subb
xchg
insl
sbb
scas
popa
mov
cmp
imul
movl
inc
lods
iret
sahf
cwtl
loop
jb
or
mov
mov
adc
jge
sub
scas
repnz
add
jp
sbb
cmp
push
scas
mov
mov
jge
sub
jg
test
push
jecxz
mov
mov
lea
mov
pop
subl
andb
daa
pop
jo
leave
js
xor
adc
gs
pop
adc
pop
cmp
mov
cltd
adc
daa
sub
inc
sbb
dec
stos
lcall
mov
sbb
or
push
notb
dec
inc
fsts
ja
gs
mov
inc
lahf
pop
daa
sbb
pop
lahf
adc
and
pop
daa
mov
outsb
cmp
adc
fisubrl
cmp
cmp
ret
clc
inc
and
add
jecxz
pop
jmp
push
inc
ljmp
cmpb
outsl
fwait
stos
sub
lock
jecxz
push
xchg
addr16
loop
pop
fdivl
sub
jmp
or
movsb
mov
and
sti
test
ss
lcall
pop
imul
in
rolb
clc
repz
data16
dec
sbbb
xor
mov
sbb
adc
ret
roll
gs
xchg
mov
pop
inc
xchg
xor
popa
rclb
lods
add
mov
aam
loop
mov
pop
push
add
xchg
jo
add
fisttpl
aas
dec
lds
int
rclb
sbb
stc
adc
dec
jmp
jo
loopne
jb
hlt
out
inc
das
mov
and
mov
or
fnstcw
sub
int
aad
das
push
cmp
pop
cmp
sub
cmp
in
mov
out
bound
aaa
mov
push
movsl
std
outsl
inc
lea
daa
sub
insb
lea
sbb
fnstcw
push
inc
mov
cwtl
xchg
shlb
dec
pop
pop
mov
dec
repnz
sub
pop
and
inc
jle
dec
inc
in
data16
das
or
jns
sub
pop
ljmp
fs
ja
icebp
roll
lods
or
leave
xchg
xor
mov
sub
lds
push
ret
cmp
aad
mov
aam
repnz
jl
scas
push
adcl
jno
push
std
sti
cmp
inc
aam
mov
mov
adc
xorl
or
popa
jae
adc
aam
jle
mov
std
out
popa
add
out
cmp
add
and
xchg
adc
sahf
cmp
xlat
icebp
mov
mov
insl
in
adc
into
int3
or
mov
js
out
mov
ficoms
inc
jle
mov
outsb
dec
arpl
mov
jg
out
xor
or
or
jp
jae
cltd
adc
notb
xchg
bound
or
mov
lcall
push
pushf
fisttpll
ds
and
in
ret
push
sub
dec
inc
icebp
jns
add
push
xorb
aaa
jp
lret
lods
add
mov
in
stos
sub
insb
push
jl
jo
adc
out
test
fldenv
pop
mov
and
les
fimuls
repz
push
sub
insl
stos
inc
sbb
dec
ja
js
icebp
movsl
mov
outsl
xchg
sbb
out
push
sbb
stc
xor
addr16
lea
scas
int
cld
push
dec
movsb
pusha
jns
jno
scas
rcrb
mov
mov
xor
in
mov
mov
loopne
xchg
pushf
pushf
pusha
xor
nop/reserved
jbe
mov
mov
cmp
rcl
mov
scas
jmp
movsb
jge
lret
adc
loop
jno
or
into
and
xor
push
aas
jae
xor
xor
jb
std
push
test
dec
mov
loopne
ret
and
or
loope
mov
sbbb
fs
xchg
in
je
enter
xchg
mov
push
stos
into
std
fnstenv
or
cmp
xchg
cs
lock
ficomps
hlt
lahf
pop
icebp
mov
lahf
push
into
mov
movsl
sbb
loopne
and
xchg
mov
ret
fcoms
mov
jmp
subb
jl
add
dec
dec
fimuls
roll
mov
push
enter
movb
inc
lods
mov
or
mov
divb
stos
shr
cmp
movb
adc
and
in
scas
popf
dec
movsl
xchg
add
cmp
sub
in
pop
xchg
jge
push
jb
fildl
out
popf
push
mov
push
jle
adcb
sbb
outsl
pusha
jecxz
inc
mov
mov
add
jp
inc
daa
xchg
push
ficoml
imul
and
jbe
outsb
push
dec
dec
sub
dec
push
scas
inc
test
adc
test
into
shrb
pop
es
add
pop
out
dec
arpl
jae
adc
sbb
add
dec
jbe
lret
cld
les
pop
cmp
mov
outsb
add
lahf
mov
add
add
dec
jbe
ja
sub
lret
clc
mov
add
add
or
cmp
ljmp
add
sub
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
xlat
inc
stos
xchg
ja
ja
or
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
