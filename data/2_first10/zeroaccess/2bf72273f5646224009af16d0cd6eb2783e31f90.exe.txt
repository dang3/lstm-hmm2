push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
xlat
insb
mov
fstpl
bound
sub
pop
add
pop
jne
mov
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
aas
insb
lcall
push
jb
adc
xor
stos
and
and
cmc
xchg
gs
fcomps
xor
cmp
mov
push
mov
popa
mov
testl
inc
aad
arpl
fsubr
popf
addb
stos
pop
ds
test
aaa
inc
mov
cmp
jp
push
xchg
jge
or
inc
dec
dec
fidivrs
push
pop
xchg
mov
jle
inc
adc
sbb
add
out
dec
jb
shrb
inc
add
ffreep
add
inc
addr16
incb
or
push
pop
stos
mov
mov
aad
out
and
lock
or
and
sbb
sbb
mov
pop
mov
hlt
bound
mov
dec
sahf
repnz
and
call
push
mov
jl
adc
xor
imul
popa
movsl
pop
xchg
mov
inc
test
pop
xchg
fistpl
cli
mov
inc
dec
xlat
ficoml
sub
lret
faddl
adc
adc
cmpsl
iret
aaa
pop
sbb
xchg
sbb
aas
xchg
stos
push
jmp
das
push
cmp
adc
inc
js
scas
push
scas
adc
xchg
sub
adc
pop
leave
mov
pop
cmp
add
xchg
pop
inc
push
or
daa
aam
imulb
int3
clc
sub
mov
pop
push
into
dec
mov
cmc
loop
add
add
hlt
pop
js
lods
jb
andl
cmpsb
xor
outsl
push
push
push
xchg
scas
push
insl
jnp
cwtl
imul
jne
inc
add
mov
outsl
mov
mov
add
cld
sbb
or
lock
add
mov
dec
sbb
outsl
mov
in
loop
sub
je
stos
shr
lret
inc
pop
jp
fsubl
xchg
cmp
mov
mov
test
xor
jne
sub
push
je
loope
ret
sub
sub
sbb
stos
aam
in
lods
aaa
mov
fs
mov
sbb
add
cmpsl
cmpsb
jg
fs
lret
cli
xchg
xchg
lods
sub
aas
enter
jnp
pushf
add
sti
lods
push
jle
data16
jo
into
out
test
and
js
jp
push
mov
jnp
jbe
movsl
add
jne
jmp
out
cmp
iret
mov
mov
pop
sub
pop
jae
mov
sub
mov
cmc
in
filds
movsl
movsb
cs
scas
inc
jo
sahf
inc
inc
push
cmpsl
xlat
fidivrs
pop
lret
dec
jmp
pop
xchg
jnp
jae
jmp
mov
sub
jnp
cltd
mov
clc
xchg
in
cwtl
out
and
push
pushf
dec
fsubr
mov
mov
push
incl
and
mov
fsts
rcrb
into
mov
out
mov
xor
add
or
lret
hlt
mov
or
insb
in
pushf
add
mov
faddl
and
test
cmove
in
out
into
insb
hlt
mov
fdivl
std
icebp
test
movsl
pop
inc
inc
lods
rorb
lods
jno
fsub
sbb
rorl
hlt
cli
divl
scas
push
mov
adc
sbb
mov
adc
arpl
dec
jo
add
aad
cs
push
imul
jbe
cld
inc
incl
sub
mov
pushf
inc
aad
sub
addr16
or
inc
xchg
mov
inc
cs
sub
jg
inc
arpl
cltd
push
mov
pop
pop
rorb
xor
xchg
jp
lods
std
sub
dec
jbe
xchg
imull
adc
push
dec
cwtl
cmp
je
xchg
mov
fwait
ss
mov
ds
add
popa
fsubrl
or
mov
das
movsl
out
sbb
in
ss
aas
mov
and
and
ret
iret
xchg
popa
iret
into
push
ljmp
mov
cli
sbb
jg
or
sub
ds
cld
mov
jge
jecxz
mov
int
int3
mov
mov
push
imul
mov
lds
push
sbb
ret
out
fildl
mov
jns
xor
repz
and
test
or
sbb
fbld
in
jno
fwait
sub
daa
stos
cmp
mov
test
pop
mov
push
jbe
mov
out
mov
je
movsl
frstor
movsb
movsb
pop
loopne
xor
pushf
mov
cmpsb
out
jge
push
pop
adcl
jo
push
sub
fldcw
or
ret
and
mov
imul
jno
mov
cmpsb
cmp
ret
jge,pt
dec
adc
and
add
dec
push
test
sbb
aad
cltd
mov
mov
lock
shrb
mov
xchg
inc
jge,pt
dec
fsts
cmp
xchg
aas
or
cs
add
mov
pop
cld
test
fwait
inc
inc
add
jle
mov
xor
xchg
add
dec
js
xchg
pop
xchg
mov
hlt
jecxz
das
jg
sbb
mov
add
dec
pop
addb
pop
sub
cli
jne
cltd
scas
xchg
pop
ss
addl
test
jbe
jmp
and
inc
jns
mov
dec
push
dec
push
add
push
fcmovne
fcompl
push
xor
pop
into
insl
xorl
xchg
dec
je
mov
and
inc
icebp
mov
xchg
xor
pop
xor
pop
xlat
cli
mov
fisttpll
sbb
dec
inc
add
push
pop
xlat
inc
js
jbe
sahf
icebp
insl
sbb
call
out
aam
push
popl
ror
pop
and
in
add
out
rcrl
mov
dec
jecxz
popf
clc
or
in
cmpsl
shrb
into
mov
mov
mov
adc
ret
and
jg
insl
xlat
aaa
pop
das
inc
scas
jbe
jle
inc
jmp
int3
mull
sub
sub
orb
ss
push
mov
shrl
cmp
xor
movb
mov
add
cmp
adc
dec
jae
push
adc
pop
mov
outsl
stos
xorb
ljmp
mov
icebp
lods
into
mov
adc
add
in
push
cmp
pop
repnz
jl
imul
pop
jl
rcrb
mov
sbb
test
mov
cmpsl
jp
adc
sbb
sub
push
call
mov
cmpsl
mov
or
inc
movsb
lret
mov
pop
add
mov
enter
data16
xchg
xchg
add
daa
test
cwtl
ja
mov
mov
xchg
pop
loopne
imul
aaa
pop
or
cwtl
mov
cmp
lock
xor
ss
sub
xorl
jecxz
mov
jle
jns
sub
or
xor
dec
xchg
inc
cmp
mov
imul
aaa
inc
dec
push
mov
rcll
jne
shll
xor
out
sbb
dec
fadds
pop
cltd
loopne
divb
xor
out
enter
xchg
cmp
lcall
push
stos
loope
pop
inc
push
insl
stc
or
cmp
sub
test
xchg
pop
xor
add
fs
add
dec
aas
fwait
in
add
fs
shll
bound
imul
mov
stos
call
sbb
stos
sbb
mov
pop
in
cs
shl
nop
jl
clc
mov
inc
or
push
out
sti
stc
sub
leave
add
std
loop
pusha
fcompl
cmpsl
sub
fnstsw
lds
sbb
push
test
pop
imul
mov
sbb
pop
nop
ficoms
cmp
mov
xor
mov
int3
in
fwait
lret
dec
dec
imul
sub
fs
repnz
cld
repz
or
mov
dec
lods
dec
dec
dec
dec
in
pop
pop
or
ljmp
mov
scas
mov
mov
push
shll
fcomps
mov
lods
xor
inc
mov
lock
dec
addr16
push
adc
notb
negb
pop
repnz
push
sbb
mov
int
jecxz
stos
js
sbb
loopne
sbb
mov
push
cs
inc
mov
dec
cs
rclb
test
cmp
fwait
pop
push
in
loop
rorl
hlt
insb
pusha
in
sbb
std
jle
bound
cmc
or
movsb
outsl
out
xchg
clc
arpl
sbb
icebp
dec
clc
enter
inc
repz
inc
mov
or
and
leave
shll
xchg
xor
adc
outsl
add
sub
pop
cmp
leave
and
sbb
ds
int3
scas
pop
lods
sub
adc
mov
and
jb
xor
dec
aas
mov
or
lds
mov
mov
repnz
dec
hlt
adc
pushf
pop
pop
cs
push
xchg
mov
dec
imul
mov
stos
sub
or
movsl
out
cld
jne
dec
jge
and
mov
ret
lret
mov
cmp
mov
dec
std
jp
cmp
add
jl
adc
push
call
or
mov
out
xor
sti
pop
push
insb
int3
inc
imul
dec
movsb
pop
dec
inc
mov
js
mov
or
out
imul
inc
xor
orl
mov
mov
test
je
lods
pop
mov
sbb
push
mov
pop
push
insb
sbb
push
jnp
mov
pushl
loopne
daa
jl
or
add
cmp
jne
mov
push
je
jmp
pop
mov
bound
mov
ret
cmp
nop
mov
jecxz
and
cld
clc
add
add
add
nop
push
sahf
pop
inc
data16
outsl
outsl
mov
pop
add
idiv
pop
ljmp
ja
mov
push
ljmp
lock
data16
xchg
dec
testb
jle
negl
cli
sub
jge
or
test
shll
pop
popa
cs
iret
cwtl
cli
in
or
sarb
ds
stos
mov
adc
xor
popa
and
lret
cld
sbb
mov
jge
cmp
add
sbb
mov
aam
daa
aaa
push
cld
inc
sub
rcr
pop
and
movsl
int3
pop
pop
lcall
jg
and
insb
fdivs
add
mov
adc
outsb
icebp
mov
push
adc
les
jle
dec
push
mov
into
add
in
mov
and
ss
pop
push
shlb
xchg
cmp
sti
ss
jecxz
sub
in
push
jo
jecxz
sbb
xchg
mov
out
inc
sbb
xchg
lcall
clc
adc
out
test
xchg
add
repnz
mov
mov
jnp
push
adc
fwait
cmpsb
push
cmp
push
mov
xchg
add
xchg
ds
jg
insb
jae
pop
sub
mov
cmp
jno
test
orl
adc
popf
inc
xchg
push
cli
add
das
ja
shlb
inc
outsl
sub
jp
sahf
and
cltd
pop
movsl
dec
in
sbb
adc
jg
icebp
push
pop
ljmp
addr16
popf
test
mov
ficoms
es
loopne
sub
cmp
or
sbb
into
xchg
rol
mov
aaa
and
mov
xchg
fistps
dec
xchg
ret
or
inc
mov
dec
daa
inc
cmp
aas
lret
xchg
or
out
ds
mov
outsb
fnsave
loopne
fcmovbe
dec
push
add
add
fucom
ret
sbb
insb
jae
mov
pop
adc
outsb
mov
in
sub
arpl
and
sub
cmpb
cmpsb
adcl
iret
mov
and
mov
mov
fmuls
jge
addr16
test
repz
fnsave
mov
mov
xorb
xchg
dec
enter
daa
xor
mov
sahf
leave
sub
dec
lods
idiv
inc
jle
or
jno
cwtl
add
scas
pop
das
cmp
jnp
and
inc
pop
xor
fwait
jmp
hlt
ds
bound
push
dec
cltd
loope
dec
lahf
out
mov
push
fnstsw
sahf
mov
dec
in
arpl
xchg
iret
loopne
les
xor
adc
insl
jae
call
out
and
stos
dec
lock
dec
je
aas
fnstenv
lds
subl
test
jo
lock
clc
in
imul
iret
push
rol
cmp
add
mov
ror
int
mov
data16
dec
mov
add
icebp
adc
in
mov
adc
loope
jns
lock
outsb
mov
xor
and
ss
sarl
dec
xchg
fwait
xchg
jecxz
dec
rcrb
cmp
mov
popa
jmp
inc
xor
loopne
pusha
cmp
jbe
inc
pop
jo
ret
lods
mov
jge
add
dec
aam
fst
aam
lds
les
xchg
clc
cltd
repz
mov
add
scas
ljmp
push
xchg
stos
jmp
mov
dec
pop
xchg
push
push
insl
stos
movsb
or
lahf
cmp
dec
inc
mov
jmp
add
lret
shr
sets
inc
sbb
adc
mov
mov
mov
ret
pop
cwtl
xchg
mov
sbb
sub
jno
xchg
inc
pop
push
sbb
mov
sti
jae
add
lret
mov
lahf
or
ljmp
inc
jno
lret
cld
add
push
mov
inc
sub
sbb
jmp
mov
gs
inc
pushf
add
adc
inc
cmp
cmp
nop
mov
cmp
cmp
mov
movsb
cmpsl
mov
jecxz
in
das
andb
out
jecxz
xor
hlt
arpl
and
xor
scas
xchg
xchg
out
push
mov
pop
data16
or
pop
add
das
and
push
inc
add
xchg
je
mov
push
popf
pop
rcl
sub
cmpsl
mov
cmp
repz
cld
data16
jns
mov
inc
hlt
sbb
daa
lcall
push
icebp
or
xor
bound
sbb
sub
push
ljmp
or
iret
pop
sub
enter
popf
ljmp
out
dec
rcl
push
outsl
mull
or
inc
aam
jb
insb
mov
jle
movsb
and
fnsave
gs
hlt
cmp
into
push
test
ds
in
xchg
xor
dec
std
or
shlb
push
mov
xchg
or
push
xchg
lahf
loope
or
test
aaa
rep
dec
mov
jl
push
add
popl
out
inc
mov
cmp
and
inc
mov
mov
jl
shll
lds
sbb
cli
jmp
mov
and
aas
push
popa
dec
pop
out
sub
mov
jle
cmpsb
stos
mov
and
push
xor
sbb
mov
sbb
mov
lods
cwtl
pop
jge
dec
loope
mov
data16
jno
mov
xchg
mov
mov
cmp
cmpl
ja
or
stos
call
and
mov
mov
js
sub
cmp
aam
or
scas
sahf
sarl
jnp
or
out
dec
jo
roll
mov
dec
xchg
lods
lock
lahf
jg
out
push
push
fwait
popf
mov
sub
jg
jne
aad
vpunpckhbw
adc
or
jno
and
test
or
xchg
jl
mov
xor
mov
nop
repz
sub
jmp
scas
test
ljmp
xor
adc
dec
aas
lret
cmp
push
pavgw
insb
sub
mov
iret
inc
or
mov
movsb
cmp
and
fisubs
cwtl
popf
movsl
insl
adc
push
rcr
enter
daa
mov
or
bound
push
fsubl
add
fimuls
imul
lret
fisttps
lahf
xor
inc
adc
in
push
loope
nop
push
daa
ja
popa
imul
daa
pushf
adc
cmpsl
mov
in
xor
sahf
ficoms
xchg
sub
xchg
pop
mov
xchg
cs
cmpsl
and
into
out
push
xor
loopne
push
ljmp
push
andl
push
jl
clc
sbb
gs
pop
aas
jmp
or
push
lret
imul
sbb
xchg
xchg
icebp
jnp
and
or
lahf
or
xor
pop
sbb
roll
ss
push
inc
push
cltd
sbb
mov
call
daa
jbe
jo
sarl
mov
clc
rorb
and
js
xchg
pop
insb
sub
mov
pusha
test
out
scas
xchg
sub
out
mov
mov
mov
outsl
push
jecxz
pushf
mov
fldl
repnz
push
outsb
fsub
lods
sbb
dec
mov
push
jecxz
xor
push
adc
insb
mov
out
scas
cld
dec
pmaddwd
push
mov
xchg
sub
mov
leave
and
pop
sub
test
mov
ja
cmp
and
mov
or
pop
jge
fimull
mov
orb
ljmp
pop
or
jno
adc
inc
repz
rcll
pop
jbe
cwtl
or
adcl
adc
inc
shr
aad
orb
xor
sub
sub
adcl
sub
popw
js
sub
sbb
dec
mov
pop
and
iret
lret
lock
mov
dec
movsb
aaa
icebp
lock
jnp
in
fwait
jmp
roll
push
pop
mov
mov
cs
cli
mov
mov
outsl
add
push
mov
daa
fnsave
xor
xchg
iret
dec
xorb
dec
lcall
sbb
push
push
add
mov
xor
push
sbb
sti
and
addr16
dec
lods
dec
jg
in
or
stc
outsb
out
cs
addl
stc
mov
je
xchg
mov
sub
and
loopne
repz
dec
push
aam
mov
jae
or
adc
shrl
inc
repnz
js
ficoms
sti
cmp
cltd
cwtl
fisttpl
insl
adcl
jl
imull
in
inc
outsb
add
or
mov
push
fs
xchg
aad
je
in
xor
in
pop
or
xchg
inc
insl
cmpl
stos
cwtl
mov
scas
mov
inc
xlat
jp
add
insl
add
adc
push
jb
sub
xchg
sub
nop
xchg
dec
lret
jnp
jle
push
push
test
hlt
inc
add
pop
popa
sti
imull
iret
aas
xlat
dec
pop
hlt
je
adc
and
add
inc
sub
loop
out
inc
fildll
push
pop
xchg
push
int3
or
push
push
mov
or
cli
mov
xchg
sbb
mov
mov
mov
gs
fnsave
cmovge
aam
push
and
ret
mov
dec
add
aam
pop
adc
jp
fldt
stc
sub
jnp
clc
add
jns
dec
lock
fmul
mov
cs
out
stos
idivb
push
sbb
shl
push
mov
lret
mov
cmp
xchg
lret
jne
js
ret
or
mov
mov
inc
leave
push
cmp
arpl
xor
insb
insl
cmp
mov
cmp
push
cwtl
stc
insb
push
out
and
or
ret
aas
cmp
adc
jl
popa
mov
jg
pop
movsb
push
mov
cli
push
jno
or
cmpsb
in
mov
jl
fmuls
rorb
dec
sub
out
xor
pop
ljmp
jnp
mov
iret
lret
stc
lahf
bound
ficomps
pop
or
ret
jbe
inc
jno
push
in
lds
notl
jecxz
in
jmp
inc
sub
xor
inc
test
xchg
dec
dec
inc
or
dec
jl
xor
stos
insl
add
ljmp
mov
sub
cld
test
iret
or
loope
loop
addr16
mov
repnz
nop
movsb
xor
or
bound
imul
add
pop
mov
sbb
sub
mov
xchg
xchg
icebp
sbbb
popa
leave
push
or
xchg
xchg
lahf
and
int3
push
in
ja
in
xor
cmp
jp
fstl
cltd
insb
arpl
dec
fiadds
ljmp
shll
jnp
test
or
vrsqrtss
inc
or
cmp
dec
jo
mov
test
pushf
inc
or
mov
xor
lods
fs
lods
test
sub
xorl
add
or
cmp
out
aad
icebp
sarl
adc
jnp
pop
add
cs
int3
loop
sbbl
cmp
add
xchg
or
push
dec
pop
movsb
and
hlt
loop
or
push
push
fcom
adc
cmp
out
add
daa
sub
in
xchg
lods
dec
push
push
into
adc
add
or
push
or
jae
and
jl
and
adc
cmpb
rorb
fs
jmp
fsts
aad
cmc
inc
or
daa
cmpl
add
pop
test
and
pop
scas
inc
rcl
js
and
lods
sub
in
adc
inc
pop
inc
mov
inc
cmp
add
add
mov
dec
movsb
xchg
xor
lahf
xor
sbb
and
jno
cmpsb
cmp
push
fbstp
fisubl
and
dec
int
mov
or
push
sbb
ret
pop
mov
push
mov
dec
shl
mull
push
push
idivb
cmpsl
leave
xchg
mov
mov
jb
js
mov
dec
pop
add
mov
cmp
ljmp
lods
and
add
outsb
add
out
xchg
dec
in
popa
mov
movsb
adc
push
add
or
hlt
mov
inc
jne
jp
in
xchg
adc
repnz
sub
or
push
mov
rcll
mov
sub
and
fwait
out
cltd
cwtl
repz
xor
mov
cs
cmp
jo
xchg
ret
adc
jmp
call
aaa
and
xor
jecxz
insb
xlat
jo
imul
jnp
hlt
and
lcall
push
sub
or
lods
cmpsb
or
mov
xor
add
insb
jge
inc
push
xchg
insb
jo
jecxz
adc
adc
mov
std
jno
or
mov
and
jle
inc
mov
jge
push
cmpsb
pop
insb
adc
shrl
movsb
mov
popf
xor
xor
add
out
int3
pop
fidivl
mov
cmp
in
subl
cltd
cmc
dec
inc
mov
mov
mov
sub
lea
les
in
xchg
mov
xchg
movsl
insb
or
fcoml
addr16
lret
xchg
jo
ljmp
xchg
rorl
mov
cli
pop
decl
gs
adc
ss
pop
add
movsl
push
sub
jnp
fwait
mov
leave
push
daa
hlt
cmp
gs
sbb
ds
shlb
sub
les
fldcw
out
insl
push
fdiv
or
and
sub
popa
xor
or
mov
test
xchg
popa
jne
dec
mov
push
ret
out
cmp
push
je
mov
jo
pop
inc
mov
insl
and
lock
pop
and
mov
std
mov
xchg
hlt
repz
lea
cmpsb
clc
ljmp
and
or
data16
pop
je
mov
in
insl
es
add
fsubl
xchg
ds
jbe
dec
xchg
dec
xchg
cmp
setl
pop
clc
fcmovb
inc
ret
out
in
sbb
mov
cmp
and
jle
jge
mov
xlat
xchg
cmp
fnsave
cmp
pop
cmp
jmp
xchg
out
cmc
and
or
jo
sub
push
addr16
xchg
fbld
fldcw
xchg
pop
loope
ret
pop
xor
inc
into
lods
stc
dec
int3
push
inc
je
adc
popl
ret
in
xor
dec
mov
inc
jbe
ret
fld
arpl
xchg
cld
jecxz
dec
inc
repnz
adc
sub
lea
pop
test
mov
enter
ss
xor
sbb
inc
cmp
aas
repnz
out
add
es
popf
mov
push
push
lock
and
xor
adc
fwait
ret
movsb
lock
pop
xchg
add
cltd
add
jnp
pop
lock
repz
add
mov
call
dec
call
add
inc
cmc
xchg
pop
iret
fs
daa
cmpsl
mov
ja
xchg
ja
sbb
push
sahf
dec
cmp
push
xchg
jle
pop
jp
jbe
fsts
mov
stos
mov
mov
jg
adc
lods
cs
leave
cmc
divl
aam
stos
inc
xor
ja
jp
in
aam
data16
ds
enter
psrld
clc
adc
jg
push
call
cld
xor
arpl
cmc
mov
or
leave
mov
outsb
clc
jns
inc
add
test
in
sbbl
mov
shrl
lds
mov
xchg
sbb
push
addr16
add
cmp
test
and
std
mov
ds
mov
bound
mov
mul
inc
mov
xchg
outsl
cmp
call
dec
xlat
ret
push
aam
ljmp
test
arpl
mov
stos
nop
inc
jg
push
cmpsb
adc
fists
xor
mov
int3
mov
ss
xchg
lods
lret
into
loop
fildl
adc
and
xchg
nop
pop
ss
pop
ja
insb
sbb
jns
daa
sub
and
gs
mov
or
mov
push
gs
xlat
push
pop
cmp
xor
enter
cwtl
rcrl
fs
shlb
jbe
fsubs
pushf
shrl
imul
fnsave
movsbl
adc
cld
stos
xchg
jmp
pop
scas
repnz
jl
push
mov
mov
jbe
adc
and
icebp
arpl
shll
dec
das
ss
repz
sbbb
stos
adc
into
mov
xchg
lods
cld
shlb
gs
mov
xchg
dec
or
and
pop
into
icebp
sbb
push
add
push
push
mov
dec
mov
mov
push
push
jecxz
push
mov
mov
daa
add
pop
or
xlat
mov
outsl
mov
ret
inc
adc
shll
xor
aam
push
loope
and
sbb
pusha
dec
int3
das
test
fldt
lea
mov
ds
push
and
sahf
xor
std
aad
pop
in
movsb
outsl
xor
repz
mov
adc
pinsrw
mov
cmp
add
jecxz
push
jb
adc
pop
pop
lret
dec
sub
int
stos
ffree
sbb
mov
jo
idiv
mov
pop
arpl
out
call
adc
out
outsl
sbb
out
cmp
cmp
inc
dec
in
sbb
sub
into
mov
jl
sub
xor
xchg
int3
sub
sbbb
cmp
and
dec
test
idiv
aaa
ja
data16
jg
insb
mov
or
mov
push
mov
and
adc
data16
sarl
mov
and
add
addl
loopne
sbb
ret
out
sub
es
sbb
stos
addb
enter
adc
dec
push
mov
inc
in
outsb
mov
xor
cmpsl
xchg
adc
aam
jp
jno
xchg
mov
addr16
aam
ja
inc
inc
scas
sub
pop
fcmovb
mulb
mov
or
cmp
shl
ja
lcall
mov
dec
ror
push
sub
mov
xor
ja
adc
lcall
push
das
mov
test
scas
pusha
mov
pop
jo
stos
and
sbb
in
cwtl
and
lea
pop
mov
int
sub
jne
lahf
stc
mov
push
xchg
adcb
jno
pop
aam
notl
filds
mov
dec
sub
gs
sbb
in
push
jle
mov
jbe
lods
sbb
dec
leave
js
mov
lahf
fcmovb
repz
sbbb
jnp
loope
icebp
xchg
pop
dec
cmp
cmpsb
ret
ret
push
jno
testb
into
bound
mov
xchg
or
jno
cmp
dec
out
inc
pop
adcl
mov
js
jl
fldenv
jbe
cmp
lods
jp
pop
mov
cld
cli
jnp
fiadds
daa
in
pop
mov
loop
ds
pop
mov
jl
jnp
decl
fildl
ss
jmp
xchg
or
or
mov
shlb
jge
pushf
mov
es
int3
popa
pop
in
xor
outsb
packsswb
push
jne
dec
mov
inc
insl
notb
add
lock
and
ret
test
mov
cmp
test
js
inc
mov
test
mov
dec
xchg
stos
pop
push
inc
dec
pop
push
sub
es
push
xor
xchg
fidivrl
xor
adc
test
mov
dec
inc
leave
cmp
jg
andb
ss
fistpll
mov
in
xor
cmovge
mov
das
cmp
cmp
xor
fsub
rcll
adc
add
sub
idivl
sub
hlt
scas
lods
imul
pop
mov
jae
and
adc
add
or
mov
pop
push
cmp
add
add
ljmp
mov
jnp
aas
mov
dec
jge
mov
and
mov
inc
std
jmp
xor
add
xchg
mov
cmp
cmp
dec
test
je
aad
dec
push
add
bound
mov
sub
pop
inc
test
mov
loop
xor
dec
jge
lods
aam
adc
mov
or
add
jg
scas
xchg
xchg
adc
jp
lods
push
cld
sub
sahf
sub
and
scas
shll
movsl
jp
push
or
hlt
inc
push
es
xor
mov
adc
leave
push
dec
add
outsb
fstl
leave
and
iret
cmc
mov
mov
cs
mov
fsubr
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubrl
pop
bound
pop
bound
adcb
pop
int
fnsave
mov
push
mov
jno
lods
push
shll
mov
inc
pop
lods
sbb
or
adc
cld
stos
cmp
mov
mov
mov
jle
push
or
add
cmpsb
push
rcll
pop
add
ret
shrb
mov
dec
or
or
xorl
push
divl
cmp
out
jae
ds
leave
push
mov
push
mov
shlb
push
nop
arpl
xchg
pop
out
outsb
inc
push
andb
aas
shlb
jecxz
sub
xor
or
les
xor
out
aam
add
cmp
jmp
push
sbb
lret
in
inc
lret
insl
push
jp
mov
stos
mov
inc
fsts
stos
cli
popf
lods
in
negb
mov
stc
cmpsb
in
clc
jg
mov
add
mov
mov
imul
and
mov
add
cmpsb
jns
cs
aam
das
pusha
ror
jo
and
sbb
sbb
sbb
aaa
and
lods
dec
pop
fdivrs
jae
mov
std
xchg
test
xchg
xor
mov
pop
push
pop
sbb
push
or
xor
neg
je
mov
bound
xchg
adc
andb
sbb
mov
enter
cmpsl
mov
mov
out
mov
movsl
pop
fucomi
push
in
mov
imul
les
test
mov
adc
inc
cmpsl
push
cmpsb
ss
xor
iret
stc
sbb
xor
insb
call
mov
xchg
mov
or
loop
out
scas
daa
add
jle
and
mov
xor
stc
xchg
adc
dec
mov
insb
mov
add
test
mull
loope
pop
fadd
ret
mov
push
inc
pop
jmp
int
push
jb
jecxz
push
out
lods
jl
mov
inc
pushf
inc
cmp
fstpl
sub
mov
and
cs
loop
lea
push
sti
sbb
shlb
mov
repnz
in
mov
das
lods
push
pop
frstor
mov
add
jle
cmp
out
mov
cmpsb
into
and
arpl
bound
out
in
inc
lds
das
std
clc
push
mov
xchg
xchg
insl
xor
xlat
dec
pusha
movsl
dec
ficompl
sbb
jmp
cmp
or
lods
adc
ja
mov
addr16
imul
repz
inc
stc
repz
in
dec
scas
cmc
inc
inc
pushf
cltd
cmp
and
pusha
arpl
stc
lcall
cmp
sub
xchg
sbb
mov
int3
jle
ret
cmp
dec
mov
lahf
aam
fs
out
sub
pop
out
xchg
pop
inc
sbb
cwtl
adc
hlt
xchg
inc
xchg
leave
add
mov
cmp
clc
add
mov
sub
loop
ffreep
or
movsb
cmp
popa
jecxz
cmpsb
pop
ret
cmpsb
push
sarl
rolb
gs
xchg
orb
or
hlt
adc
sub
addr16
les
out
mov
adc
lods
mov
mov
nop
call
jb
mov
pop
repnz
xchg
dec
fucom
xchg
push
scas
sub
sbb
inc
dec
inc
lcall
add
mov
sub
lret
pop
cltd
dec
in
adc
popa
test
dec
in
push
and
in
pop
jnp
push
hlt
sahf
cmp
leave
mov
xchg
inc
in
fwait
or
push
xchg
into
leave
ljmp
sbb
in
jbe
cs
nop
lock
xor
sub
inc
ss
jg
fwait
pop
outsl
push
cli
ds
inc
das
cmp
lcall
lret
jns
scas
cmp
and
dec
push
jg
rorl
sti
jge
xchg
das
in
push
xchg
and
imul
or
pushf
call
fiaddl
xchg
adc
push
jmp
mulb
cmpsb
mov
mov
int
mov
sahf
cmp
xor
push
and
shll
ja
xchg
xchg
out
sbb
jns
and
call
loope
iret
lret
mov
xlat
sbb
test
mov
mov
sub
mul
aaa
test
nop
jp
pop
mov
push
add
sub
shrl
jno
push
aad
push
push
or
or
xor
mov
mov
cmp
std
aas
inc
into
mov
pop
pop
and
dec
xchg
popa
aas
int
and
inc
enter
testb
xor
or
incl
into
cmpsl
mov
sub
pop
xchg
stos
in
sbb
mov
push
in
ja
jle
lds
fwait
mov
in
shlb
imul
jbe
cmp
mov
dec
clc
addl
rolb
push
sbb
cltd
jg
pop
xchg
xchg
push
mov
cmc
xor
mov
negb
pop
or
dec
mov
xchg
mov
insb
or
sbb
loope
iret
pop
aas
int
mov
gs
test
push
sub
sbb
lods
cmp
fisubs
pusha
xor
hlt
mov
mov
sarb
dec
sarl
mov
jns
out
addr16
imul
sub
adc
sub
icebp
jb
xchg
stos
or
cli
xor
cmp
ret
push
daa
push
xchg
mov
and
add
mov
inc
rcll
and
cmp
add
mov
ret
cmc
ljmp
mov
adc
ror
pop
lret
sbb
and
inc
xchg
cmpsb
arpl
orb
jg
ds
jns
scas
test
les
in
divb
jno
push
lcall
xchg
loop
jno
out
test
aas
cmova
cs
fimull
into
fists
push
stos
outsl
mov
mov
cmc
dec
add
jns
js
hlt
sub
cmp
rcrl
or
rorb
sub
push
lods
mov
in
or
ja
mov
xchg
add
or
push
inc
inc
cltd
pusha
fwait
gs
fld
jne
cld
xchg
push
shlb
je
jae
mov
and
sbb
and
xchg
daa
dec
xchg
popf
push
scas
rcrl
lahf
xchg
les
imul
and
xor
dec
stc
mov
lcall
lahf
mov
daa
adc
adc
xchg
push
pop
aas
cltd
loopne
dec
mov
push
int3
xchg
sbbb
push
data16
lahf
add
push
mov
jnp
and
popf
cli
imull
loop
aad
mov
int
xchg
arpl
push
mov
inc
pop
adc
xor
jecxz
add
sbb
mov
sub
scas
dec
pusha
jae
mov
popa
int
adc
and
in
rorb
inc
cltd
cmp
inc
fidivrl
jno
jmp
nop
pop
push
scas
and
addl
push
mov
fldenv
inc
mov
test
push
shrb
add
lock
xor
ret
adc
lock
add
pop
fidivrl
pusha
addb
lock
inc
cld
je
ss
sti
ret
adc
lock
mov
jmp
push
scas
jno
dec
cs
xchg
cvtps2pi
int
pop
out
jle
ret
xor
nop
push
insl
push
in
je
add
sub
loop
pop
pop
or
inc
add
int3
mov
pop
leave
xchg
daa
mov
movsl
mov
xchg
insb
xchg
add
imulb
gs
push
shlb
outsl
sub
call
das
test
stos
dec
inc
lret
push
or
enter
stos
push
and
xchg
dec
mov
add
outsl
add
pushf
ja
iret
adc
js
push
push
push
xor
stc
lahf
push
iret
jp
jno
xor
loopne
repz
andl
dec
cmp
ljmp
leave
popf
test
inc
pop
orb
repz
das
call
popa
mov
sub
movsb
test
inc
xlat
insl
rolb
fwait
pop
sahf
ljmp
ljmp
mov
push
clc
inc
sub
gs
outsb
pop
pusha
cmp
pop
inc
sbb
lods
add
in
or
wbinvd
mov
shr
mov
movsb
das
cmp
shll
xchg
sbb
cltd
les
lock
mov
adc
mov
icebp
gs
into
pop
cld
and
fdivr
mov
cmpsl
lcall
dec
xchg
imul
dec
in
cmpsl
movl
push
icebp
push
pop
out
add
xor
adc
jo
mov
mov
sbb
je
xchg
jae
insl
sub
push
mov
jno
jp
push
lock
xchg
ja
into
lods
add
mov
imul
les
js
mov
mov
add
push
sub
sub
add
xor
cmpsl
or
jo
and
xchg
cmp
cmpsl
cmp
orl
mov
xchg
sbb
dec
test
stos
mov
inc
loope
jp
sub
and
mov
enter
adc
mov
pushf
mov
mov
pop
cmp
add
cmp
xorb
ss
enter
mov
cmp
iret
dec
lock
push
stc
pop
sub
insl
inc
stc
jp
pop
into
into
pop
ficoms
fidivrs
nop
ss
mov
into
dec
mov
push
ja
shll
mov
cmpsl
data16
mov
push
inc
dec
sysret
cwtl
cmp
xor
ljmp
push
push
js
insb
adc
and
fs
js
bound
fabs
mov
loopne
int3
sub
notl
jb
cmc
gs
pop
mov
repz
out
sahf
and
cs
mov
or
in
out
pop
add
test
xor
mov
faddl
pop
mov
inc
test
out
sbb
push
jmp
fcmovu
imul
test
and
gs
sbb
adc
xchg
xchg
mov
sbb
pop
sti
jae
or
neg
hlt
out
fistpl
mov
in
hlt
out
xlat
leave
cmc
push
je
cmc
add
in
int3
in
inc
mov
flds
movsb
fisttpll
mov
adc
jl
cld
sahf
mov
push
adc
cmp
into
fbstp
dec
push
xor
imul
stc
push
movsb
ret
and
loope
cli
icebp
nop
jo
subl
mov
lcall
cs
bound
sub
xchg
arpl
lret
movsl
repz
pop
cmp
insl
adc
mov
mov
cmpsl
rorl
mov
out
cli
mov
pop
insl
jns
stos
and
je
sbb
cld
cmpsl
inc
sbb
rorl
jmp
pop
pop
mov
cli
xor
sub
pop
add
popa
push
inc
std
fs
lods
cmpsl
aam
cli
outsl
jp
pusha
mov
jbe
in
xchg
jle
mov
pusha
fs
cmp
jl
out
adc
push
iret
jb
test
push
inc
sahf
out
push
cmpl
dec
jbe
xchg
outsb
add
les
loop
sbb
cmp
ja
pop
lahf
test
sbb
mov
inc
push
ja
ljmp
jnp
pushf
push
cli
xchg
hlt
adc
jle
push
fcmove
cmpb
dec
mov
mov
inc
xchg
jle
push
rclb
test
mov
imul
inc
push
sbb
lods
lahf
movsl
jnp
inc
add
dec
jge
dec
test
and
xchg
jmp
cmp
pop
xchg
hlt
gs
js
sbb
jge
xchg
mov
ret
popf
out
lret
mov
outsb
jae
xchg
sub
movsb
xchg
mov
ds
dec
sbb
mov
and
aas
and
fnstcw
adc
fists
push
cmp
add
imul
das
mov
cmp
rcrl
notl
into
dec
fxch
lret
xor
mov
mov
in
arpl
imull
outsl
adc
push
add
xor
xor
ja
xlat
or
jnp
loope
int3
lods
adc
cmc
shlb
call
inc
in
sbb
and
pushf
inc
mov
daa
xchg
in
cld
cs
jae
incl
out
std
scas
or
nop
inc
and
xor
arpl
jno
popa
mov
inc
cs
shll
xchg
sub
add
bound
sbb
fstps
push
cmp
dec
adc
rol
mov
mov
sub
xchg
pop
fcoml
pop
aas
repnz
xor
jae
push
lds
es
fsubrs
adc
test
insb
dec
sub
and
call
enter
mov
xchg
stc
test
xor
lds
sub
inc
vpaddb
push
xchg
arpl
dec
jo
push
mov
out
fildll
cmpsl
cmp
pop
aaa
pop
mov
ror
es
aas
inc
insl
rcll
cmp
mov
dec
cs
mov
dec
mov
je
push
sub
ja
aas
mov
xlat
pop
data16
cmp
daa
mov
data16
out
rol
aaa
sub
lcall
adc
jmp
pop
xchg
rcr
clc
insb
inc
xor
cmp
es
pop
xor
mov
out
jmp
inc
leave
push
loopne
inc
push
xor
xchg
call
fists
jne
mov
adc
fwait
mov
push
int
out
out
lock
or
lock
adcl
leave
lahf
push
sarl
imul
in
sbb
jecxz
popf
test
enter
fwait
sbbb
mulb
mov
cmp
push
dec
and
xchg
cwtl
les
fnstenv
mov
jp
xor
js
stos
mov
fdivrl
inc
cmp
add
cmc
sbb
inc
lock
cmp
push
sub
fwait
test
aad
jp
xchg
xor
push
mov
int
sbb
sbb
and
and
arpl
xor
mov
sarb
xchg
or
mov
icebp
push
sub
add
pop
mov
mov
ret
push
cmp
mov
xor
mov
mov
test
stc
fs
imul
dec
movsb
sbb
popf
xchg
movb
stos
lds
pop
popf
pop
ja
jb
xlat
or
jo
mov
pop
fisttps
js
push
repz
fbld
nop
dec
xor
push
je
cmpsb
dec
mov
shrb
js
mov
cli
sti
xchg
push
cltd
xchg
outsb
cmp
mov
adc
shl
sub
xor
or
and
ret
testl
mov
inc
iret
repnz
mov
push
lods
push
bound
mov
cmp
xchg
cmp
in
xchg
loop
mov
mov
xchg
pop
xor
add
xchg
in
shll
ss
test
dec
popa
in
sbb
out
imul
mov
inc
jg
outsl
jb
pop
mov
lds
adc
xchg
int
push
sbb
jae
lds
in
loopne
mov
aad
imul
sbb
out
in
inc
sub
xchg
fwait
ljmp
arpl
loope
xchg
int3
pop
ja
jb
data16
scas
adc
mov
sub
fsub
and
lret
inc
add
pop
pop
out
stos
mov
cld
push
jo
push
ficompl
inc
pushf
jge
in
xor
pop
fisubs
into
es
xor
add
pop
std
lret
pop
mov
pop
gs
inc
cli
cmpsb
syscall
mov
push
or
hlt
cwtl
cltd
cmpsb
mov
mov
xlat
jnp
fstps
jp
sbb
or
add
pop
jo
inc
aaa
pop
xchg
into
xchg
repnz
out
pusha
cmc
shlb
lods
je
lret
pop
xor
mov
inc
clc
inc
mull
js
lahf
popa
fstl
cmp
mov
int
cld
add
scas
testb
lea
pushf
xchg
mov
cli
test
mov
dec
cld
push
dec
cld
outsl
jae
sub
out
adc
mov
pop
mov
adc
in
gs
fiaddl
jg
fldcw
or
jecxz
cmp
adc
call
ds
xchg
xor
hlt
xor
jp
push
jg
rcrb
fadds
int3
sbb
rclb
sbb
pop
jae
jo
ja
leave
es
mov
test
push
xor
pop
sub
lret
loop
call
jae
test
pop
fcoms
lock
jbe
add
sub
pop
push
add
sub
adc
lods
sarb
pop
repnz
jns
xchg
adc
mov
xor
daa
mov
mov
loopne
cli
xor
jge
push
sub
cwtl
cld
and
inc
mov
jg
outsl
mov
jns
dec
push
bound
insb
pop
push
gs
adc
mov
cmp
sarl
push
inc
std
loope
jmp
das
pop
cmp
cmc
loopne
pop
lcall
repnz
movsb
out
aad
pusha
xor
jo
push
rcll
mov
or
stc
pop
cmp
mov
or
adc
stos
sbb
data16
mov
xchg
inc
add
mov
shlb
jg
enter
add
mov
pop
mov
mov
or
push
flds
ret
add
dec
xor
mov
mov
sbb
push
xchg
mov
jno
jp
dec
cmp
movsl
push
xchg
cwtl
pop
mov
xchg
scas
fwait
xchg
push
adc
in
cmp
cli
sbb
sub
addr16
add
lods
push
xor
fsubrs
in
xor
mov
add
loop
pop
jl
dec
mov
and
inc
cltd
add
setne
popf
testb
xchg
sbb
inc
push
stos
and
add
les
jb
push
push
popa
sub
in
dec
pop
or
or
pop
xchg
dec
out
out
mov
push
mov
xchg
cmpsb
lock
test
jmp
icebp
cltd
xchg
rol
outsb
pop
sbb
xchg
cmp
or
sbb
mov
pop
xchg
rcrl
out
cld
inc
ds
mov
idivl
adc
mov
dec
lock
movsb
aad
gs
mov
xor
ja
incl
mov
jge
add
fisubs
sub
fld
mov
scas
in
pop
in
mov
push
out
stos
sub
cmp
pop
in
repnz
imul
cli
push
add
sub
xor
pop
test
push
popf
lahf
cmp
sbb
adcl
repnz
xor
xchg
stos
rcl
and
inc
dec
mov
sbb
sarl
pop
daa
mov
ret
sub
inc
in
adc
dec
stc
pusha
jmp
mov
xchg
sub
push
jo
scas
imul
sub
clc
push
and
dec
test
icebp
imul
stc
mov
xor
fldenv
pushf
and
rol
adc
mov
lahf
mov
xlat
lods
push
or
out
out
fstps
fdivr
int
cmp
jns
rcrl
sub
ljmp
or
pop
dec
mov
scas
adc
and
push
daa
dec
enter
adc
xchg
and
and
sub
add
xchg
int3
gs
aaa
test
pop
cmp
inc
xlat
mov
lods
les
xor
lahf
enter
sbbl
roll
in
jmp
std
lods
pop
inc
fs
push
adc
dec
or
mov
adc
fbstp
sahf
fnstsw
push
inc
outsl
daa
adc
insb
fmulp
bound
lcall
shlb
daa
jg
and
push
outsb
sbb
jmp
aad
jl
adc
lods
fnsave
jmp
shrl
inc
stc
nop
dec
pop
push
cmp
and
enter
xchg
hlt
imulb
js
aad
lret
or
jp
mov
jnp
fnstsw
mov
mov
dec
xchg
jae
aad
dec
inc
inc
stos
cmp
fnstsw
or
sub
dec
fstps
ret
or
and
jl
jmp
cmpsl
aas
adc
push
xor
or
and
dec
sbb
jo
and
fldenv
aam
cli
inc
sub
ljmp
push
ret
mov
dec
xor
push
lods
adc
adc
push
mov
aad
or
xlat
dec
aad
mov
inc
inc
pop
sub
cmpsb
xchg
cltd
xchg
and
pushf
pusha
jae
sub
movsb
pop
xlat
ret
filds
hlt
mov
and
es
mov
lret
mov
sub
dec
psllq
gs
icebp
in
dec
test
xor
lods
jg
sbb
enter
repnz
iret
repz
dec
int3
push
xor
andb
in
sub
pushf
js
addr16
mov
push
xchg
sub
insb
push
sbb
lock
pop
mov
pop
std
sti
je
sbb
mov
ljmp
lods
shrl
cmp
lahf
aaa
je
inc
add
mov
dec
std
icebp
dec
fistpl
jle
shlb
xor
idivb
push
lahf
imul
sti
inc
xchg
inc
sbb
sub
push
sbb
repz
in
inc
hlt
lock
movsl
push
push
addl
xor
mov
pop
outsb
pop
dec
jle
lock
into
sbb
pusha
xor
pop
cmpsb
repnz
mov
insb
mov
fld
jecxz
jb
sub
loopne
or
lret
push
push
xor
or
fadd
lods
ret
and
xchg
and
pop
shrl
or
adc
pop
ss
inc
rcll
sub
xor
test
and
into
addr16
inc
sub
and
loope
and
dec
inc
cld
gs
push
mov
and
ret
adc
xor
nop
in
popa
loope
ja
decl
mov
outsb
mov
add
es
push
lods
int3
jns
push
sub
fsubl
push
sbb
dec
sahf
cld
iret
outsb
mov
inc
mov
jae
test
dec
mov
icebp
pop
push
push
jmp
loope
mov
adc
cs
add
lock
xchg
rolb
cmp
sarl
pushf
sbb
dec
xchg
jne
jl
mov
cmpsb
xor
adc
test
mov
mov
rolb
sbb
add
mov
popf
add
cmpsb
add
cs
and
pop
add
push
js
in
cs
xor
add
jne
push
xor
push
mov
add
xchg
pop
or
or
mov
out
fadds
addr16
addr16
popa
pop
push
mov
jle
ljmp
mov
jae
inc
out
call
xchg
lods
stc
lock
out
gs
sahf
mov
scas
jnp
ds
idiv
fwait
pusha
cli
insl
scas
test
repz
and
aam
lods
stos
jmp
bound
fdivrl
sti
pushf
test
xchg
fldenv
adc
sbb
push
xchg
subb
in
push
data16
cmpsl
cli
inc
popf
mov
cmp
pop
mov
mov
shrb
push
outsb
call
arpl
and
jae
andl
inc
add
subb
aas
fcompl
push
jo
icebp
inc
das
xor
lret
sti
jmp
enter
sub
fwait
xchg
jne
fnstenv
mov
and
pop
adc
lds
les
add
lcall
fwait
dec
mov
insb
cmp
lods
add
cmp
into
inc
and
xor
mov
jp
outsl
cmc
rol
jb
jge
adcl
mov
imul
xor
pop
scas
mov
cmp
mov
lds
xchg
frstor
pop
pop
and
cld
sbb
jno
daa
leave
xchg
fcoml
rolb
pop
fsubl
jmp
icebp
dec
subl
cmp
pop
lahf
mov
clc
addr16
mov
cmc
movsb
dec
hlt
cwtl
testl
and
xor
jbe
xorb
js
push
mov
ja
sub
pop
pop
ja
mov
js
rclb
lea
shll
or
imulb
mov
test
cmp
fistl
loope
pop
jae
adc
test
subl
pop
in
aaa
cwtl
jge
jecxz
cmp
mov
lahf
push
adc
testl
xchg
dec
outsl
jbe
aam
sbb
or
inc
dec
clc
mov
cmp
popf
mov
jge
rcrb
xor
push
adc
xor
int3
sbb
pop
inc
sub
pop
daa
rol
push
std
jne
dec
sbb
pop
mov
test
mov
data16
dec
mov
test
pusha
movsl
pushf
fnstsw
mov
adc
xor
enter
mov
xor
enter
push
jnp
lcall
movsl
fcom
fnstcw
arpl
insl
cld
popf
dec
cli
sete
jb
xor
int3
adc
adc
mov
lret
jmp
inc
rolb
sahf
out
andb
arpl
jo
xchg
or
cltd
lcall
cmp
inc
insb
xchg
dec
into
mov
pop
out
ja
ja
rcrl
cld
mov
lret
dec
fisttps
loope
les
enter
adc
push
icebp
inc
pop
shlb
ficoms
xor
jge
sub
sub
mov
cmc
add
js
clc
je
in
sbb
fdivl
adc
add
inc
loopne
mov
rolb
popa
adc
and
adc
sub
cltd
movsb
adc
pop
and
ljmp
scas
xor
mov
enter
lret
dec
je
dec
inc
jnp
sti
xchg
push
insl
xchg
adc
cmp
inc
movsb
pop
and
push
mov
movl
popa
push
adc
sbb
pusha
outsl
mov
push
sbb
inc
mov
enter
jne
xchg
mov
adc
sbb
insl
mov
xor
mov
add
sub
pop
pop
xor
clc
mov
fiadds
out
inc
dec
out
test
sbb
popa
xor
cmp
cmpsl
mov
xor
cmpl
out
xlat
push
or
inc
fwait
lds
dec
mov
cmp
dec
pusha
xor
xchg
outsb
pusha
out
xchg
ret
sub
pop
sbb
in
lods
scas
mov
mov
stos
cs
ret
jno
or
outsb
add
in
sub
inc
and
adc
add
push
sub
add
cli
jle
pop
jp
xlat
imul
lock
adc
notb
xchg
and
mov
sbb
add
jb
mov
scas
mov
mov
lahf
unpckhps
and
popa
arpl
loopne
jge
inc
ja
jno
stc
clc
xor
lret
fisubrs
les
add
cs
jg
psraw
mov
jle
dec
add
push
mov
jecxz
and
dec
data16
or
mov
mov
cmpsl
lock
shll
xlat
jl
mov
sbb
in
sarl
push
jmp
je
into
insl
fldt
push
adc
inc
fiadds
jmp
cmc
mov
or
mov
mov
and
xchg
call
add
mov
ja
ret
sub
in
mov
cmp
dec
movsb
lret
cmp
shlb
pop
insb
adc
inc
sub
jg
loope
xor
lcall
ret
fsubs
lcall
cmpsb
sti
lret
add
or
les
mov
scas
cmc
in
pop
adc
jge
stos
mov
mov
add
in
sub
sbb
sbb
push
movsb
mov
jns
or
mov
xchg
fnstcw
test
mov
je
adcl
testl
aam
xchg
jg
jle
mov
pop
test
xchg
loopne
pop
push
out
syscall
outsb
fdivs
adc
cld
mov
mov
or
ss
mov
pop
inc
out
ret
and
mov
test
icebp
int
pop
jecxz
dec
dec
mov
out
lcall
mov
test
hlt
mov
mov
fcompl
iret
pop
icebp
jns
xorb
or
cmp
push
dec
push
sub
in
push
fwait
pop
hlt
mov
sahf
in
imul
icebp
jb
jb
insb
dec
cli
cmp
adc
dec
xor
add
pop
mov
in
call
mov
cmp
ja
pop
push
jb
test
lret
xchg
pop
sbb
push
xor
sbb
vmovd
mov
es
or
pop
jns
mov
insl
sub
mov
xor
or
ret
or
stos
psubusw
aad
mov
dec
popf
cmp
jae
sub
jg
pusha
mov
pop
inc
jae
jge
enter
mov
mov
cmc
push
jno
shlb
sbb
fildll
sbb
sub
pop
cmp
inc
icebp
xchg
sti
pop
bound
js
jmp
mov
out
dec
push
xor
push
inc
xor
pop
cltd
pop
pop
pop
sti
sub
jle
repz
cmp
sbb
mov
xchg
imulb
add
adc
pop
mov
mov
icebp
imul
mov
js
mov
mov
leave
jge
repz
lret
pop
pushf
enter
mov
mov
mov
fld
jnp
cmpl
mov
cltd
mov
hlt
xor
xor
xchg
or
shrl
sub
mov
sbb
jo
dec
dec
pop
mov
pop
cmpsl
test
cmp
jne
test
push
ja
mov
testl
dec
adc
xor
js
pop
add
inc
inc
hlt
mov
shll
fidivs
mov
jnp
daa
es
pop
iret
movsb
mov
pop
pop
jnp
push
dec
nop
cmp
ret
xorb
mov
scas
fs
pop
pop
lret
jbe
jo
fsubs
push
int
mov
adc
sub
sarb
cmpsl
inc
fsubr
push
pop
ja
mov
nop
es
push
mov
xchg
stos
add
movsl
je
cmpsl
lahf
or
xor
push
ret
cmp
jns
fcmovu
sub
mov
xor
or
push
dec
pop
jmp
or
lret
jne
insb
inc
leave
pop
aas
xchg
lret
sub
inc
jae
mov
int
xchg
push
call
xor
test
loop
cli
out
dec
test
push
mov
pop
bound
push
sbb
lock
xor
mov
addb
lret
sub
pop
jbe
jno
add
aad
test
push
inc
out
jp
mov
mov
in
adc
xlat
jle
pop
push
popa
test
pop
inc
nop
xorl
add
push
pop
mov
dec
inc
cmp
inc
lods
jb
inc
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
sub
or
cmp
bound
pop
bound
jmp
jno
outsl
loopne
loope
jecxz
popf
inc
mov
jle
xor
imull
jmp
push
into
je
call
sbb
dec
pop
faddl
jb
jnp
inc
movsl
inc
pop
loopne
fadd
sbb
cmp
loopne
or
in
mov
sub
jo
fwait
pop
push
push
mov
pop
pop
fldenv
sbb
dec
popa
insb
jbe
loop
movq
ret
dec
jg
daa
out
add
xchg
nop
cmovae
jmp
scas
sbb
push
inc
es
cmp
jnp
addb
xchg
data16
dec
aas
xchg
xor
pop
andb
out
dec
jge
test
jne
jmp
aaa
xadd
xchg
mov
sub
das
cmp
push
fnsave
out
xor
pop
push
xchg
les
mov
xor
mov
add
ja
outsb
sbb
push
mov
add
mov
scas
xchg
or
and
int3
das
es
sub
fnstsw
inc
dec
test
add
xlat
fidivrl
jne
out
out
ds
movsb
mov
sbbl
fdivs
lahf
ljmp
bound
cwtl
jo
sbb
dec
push
adc
mov
repnz
adc
js
rcrl
add
or
cmp
inc
cmp
insl
push
jmp
pop
test
jnp
sbb
je
xorl
out
loope
es
add
out
mov
push
cld
xor
mov
add
jg
sbb
jns
in
cmp
mov
ljmp
cmp
jns
jle
dec
popa
mov
sbb
sbb
int3
loop
add
je
mov
test
aam
inc
notl
int
leave
sub
out
sub
sahf
loope
adc
leave
out
push
imul
mov
xlat
add
dec
popf
sbb
pop
aas
hlt
lods
hlt
xchg
jle
lcall
mov
jno
add
ret
add
lret
call
lods
xor
jle
mov
arpl
mov
das
out
test
insl
dec
xor
aam
adc
mov
pop
scas
stos
pop
mov
jne
int3
pop
mov
add
icebp
mov
dec
cmovo
test
xor
hlt
test
in
insb
sbb
scas
scas
lahf
pop
fidivs
out
test
lods
inc
xchg
jp
and
add
rcr
gs
fistl
inc
hlt
andl
jnp
pop
aas
les
sahf
xchg
jmp
sbb
add
inc
xchg
sbb
push
xorl
jns
sbb
mov
mov
lahf
and
cld
sti
sub
push
mov
out
xchg
lea
loopne
sahf
mov
lret
out
jbe
sbb
inc
pop
int3
mov
pop
in
mov
cmpb
pop
mov
test
push
mov
jecxz
push
scas
jmp
fidivrs
adc
fistps
pop
dec
popa
je
rcrb
sahf
inc
pop
cli
out
movsl
out
add
sbb
imul
les
sbb
int
loop
pop
mov
pop
repnz
stc
stc
inc
icebp
add
mov
inc
movsb
in
rorb
mov
loop
ss
daa
lret
pusha
mov
fs
test
scas
mov
in
icebp
jge
jb
xchg
pop
mov
aam
lock
bound
js
mov
flds
addr16
push
push
and
lds
ficompl
dec
push
movl
icebp
or
std
gs
or
and
mov
and
cmp
fcompl
loope
sbb
mov
xor
dec
les
pop
aaa
cwtl
mov
int
jno
pop
lahf
stc
lahf
movsl
in
pop
mov
push
inc
pop
xlat
cmp
sbb
bound
cwtl
mov
sbb
inc
pusha
jmp
fimull
push
and
or
fmuls
fbstp
in
cs
dec
mov
mov
popf
aam
mov
pop
add
test
xchg
mov
aaa
cmp
inc
xor
sarl
sar
or
mov
jns
stc
divl
inc
push
fisubrl
xor
push
cmp
mov
inc
push
and
push
rcl
js
loop
insl
sub
outsb
dec
mov
pop
js
clc
jp
lcall
sub
or
loope
or
rclb
adc
jge
ret
cmp
int3
hlt
xchg
inc
pop
jmp
movsl
stos
jge
sub
clc
sbb
mov
cmpsb
mov
xchg
out
and
je
push
or
mov
in
ljmp
repz
das
lcall
cld
xchg
mov
push
fs
sbb
jns
mov
inc
sub
fsub
mov
sarl
es
cwtl
push
or
aad
int3
subb
dec
cwtl
inc
je
test
in
jbe
repnz
cmpl
xor
mov
and
dec
mov
fadd
dec
xchg
leave
outsl
jb
out
fcomps
jmp
cli
pop
mov
fsts
jnp
pushf
mov
pop
cmp
or
push
mov
lret
jge
push
sahf
sub
xchg
sub
or
in
inc
sub
mov
dec
arpl
mov
sbb
xchg
mov
sahf
or
das
jmp
sub
cld
mov
lahf
addr16
sbb
xchg
mov
pop
lds
inc
cmpsl
dec
dec
jno
fsts
adc
decb
add
into
jmp
mov
jb
add
mov
sub
or
or
outsb
lods
in
jno
and
leave
dec
inc
repz
imul
imul
shl
loop
jbe
jmp
jg
cmovbe
dec
fs
bound
mov
and
sti
sti
ret
jle
lods
pop
push
popa
add
cld
mov
dec
shlb
loop
jb
dec
cvtps2pi
adc
shll
pushw
fwait
mov
cmp
hlt
mov
in
and
mov
jns
fnstenv
xchg
pop
stos
movsl
adc
imul
std
in
mov
and
std
iret
jbe
das
and
sbb
rclb
mov
mov
das
jbe
mov
mov
movsl
lods
int3
popf
jnp
fstpt
lock
testb
mov
jl
inc
push
and
mov
andl
imul
xor
cwtl
mov
mov
mov
out
mov
packsswb
faddl
test
add
movl
pop
dec
xchg
pop
std
icebp
cmpsb
fsubr
and
xor
into
je
and
hlt
mov
rorl
ret
dec
mov
xchg
iret
adcb
mov
add
xchg
sbb
xchg
add
add
test
movsl
fdivs
stos
imul
cmp
mov
mov
aam
dec
push
es
adc
push
mov
ljmp
pop
sbb
mov
mov
daa
outsb
lods
push
stos
incl
cmpb
imul
std
in
jmp
mov
jecxz
lods
std
inc
hlt
sub
cmpsl
pop
es
mov
inc
mov
adc
dec
sahf
push
xor
xor
test
push
lds
and
push
xor
xchg
and
test
insl
sbb
mov
mov
mov
mov
xchg
or
dec
stc
rolb
filds
push
push
ds
pop
popf
xor
ljmp
ljmp
aas
loopne
cld
popf
inc
and
xchg
inc
push
lods
or
mov
aam
sub
push
data16
mov
dec
lret
aam
sarb
mov
or
rcll
adc
stc
mov
test
iret
outsl
or
repnz
aam
cmpsb
int3
mov
dec
enter
dec
cmp
mov
xchg
imul
inc
mulb
add
jle
adc
fwait
sub
or
imul
stc
out
mov
push
add
loop
lock
and
inc
out
in
push
and
add
lods
mov
aam
add
add
mov
fwait
aas
data16
xorb
in
iret
pop
ds
sbb
out
adcl
mov
or
jge
and
xchg
clc
imul
lcall
dec
shlb
mov
fdivl
daa
pop
xor
lods
adc
sub
xlat
nop
fcom
int
push
subl
add
js
neg
fucom
test
fcoml
sub
frstor
mov
inc
add
push
and
stos
or
mov
pop
lds
test
outsb
cli
fwait
add
add
push
dec
repz
adc
cld
mov
outsb
std
add
jnp
xor
fisttps
cmc
jle
push
sub
cltd
fcoms
mov
cmpsl
jbe
xor
cltd
or
jnp
sub
xor
mov
in
in
std
xor
negb
pop
stos
push
outsb
xor
xchg
pop
fstpt
sbb
imul
loop
in
fwait
icebp
psraw
roll
sti
sbb
sbb
out
scas
pop
adc
imul
mov
dec
cltd
sahf
add
adc
sahf
jb
test
testl
push
and
mov
sti
jge
mov
xchg
test
lock
push
clc
jge
sbb
repz
xor
fwait
jle
and
js
push
je
xor
and
fsubl
icebp
int3
jns
mov
loope
sub
adc
push
call
xchg
ja
cwtl
lret
icebp
adc
add
sub
jecxz
jle
jg
stc
mov
adc
push
or
in
mov
repz
mov
or
das
stos
jae
add
adc
sub
jl
js
lods
fstpt
repnz
or
repnz
sub
ja
push
loope
mov
or
lcall
inc
inc
add
add
jnp
or
scas
ret
sarb
in
int
fs
es
xlat
arpl
push
sub
test
in
add
pusha
mov
xchg
scas
ljmp
stc
dec
sub
xor
in
push
arpl
jne
je
ds
xor
fcomps
mov
ret
outsb
pushl
dec
xor
in
lods
sub
cmc
int
repnz
test
xchg
inc
test
pop
cmpl
fimuls
ret
pop
js
sbb
sub
jbe
int3
push
and
fnstcw
insb
jne
out
add
aad
nop
sub
dec
cmp
mov
jle
mov
fnstenv
pop
adc
xorb
es
and
mov
lea
push
in
aas
add
push
mov
aas
mov
jmp
xchg
std
cld
push
clc
outsl
sub
lods
jp
insb
push
sbb
add
mov
dec
cmp
mov
dec
movl
dec
add
mov
nop
add
jo
in
sub
and
es
cmc
or
js
fwait
mov
mov
push
in
mov
ja
outsb
xor
fwait
inc
sub
sbb
or
loope
cli
inc
and
push
ficoms
xchg
add
gs
arpl
ficomps
or
insl
xor
cmpsl
and
dec
mov
inc
shlb
mov
sbb
lss
cld
mov
inc
movsb
movb
scas
scas
add
jecxz
push
pop
mov
cmp
pop
inc
rcrb
outsl
lret
sub
imul
jl
add
sti
lock
out
mov
lahf
xor
dec
adc
xor
leave
xchg
gs
in
loope
xor
xchg
sbb
or
inc
mov
imulb
mov
aas
pop
mov
mov
push
mov
push
clc
jmp
add
cmp
leave
mov
mov
nop
sub
jle
push
rcll
cmp
xchg
enter
sub
adc
stos
out
cmc
loopne
nop
and
jnp
popf
jae
add
sub
jnp
and
xchg
and
into
push
mov
cs
shlb
pop
stc
and
add
daa
shll
sbb
pop
push
pushf
add
inc
mov
out
pop
adc
roll
adc
push
call
fsubrs
int3
fmulp
sbb
xor
cmc
aam
ja
inc
xchg
imul
std
int
push
arpl
sbb
fidivs
lret
mov
jno
jle
pop
popf
ja
inc
mov
pushf
jmp
std
push
dec
jno
push
imul
fiadds
pop
push
mov
lods
fbld
pop
push
jecxz
shl
pop
or
ret
sahf
jo
mov
pop
hlt
dec
movsb
or
popa
add
jmp
int
mov
pop
loopne
lret
dec
cwtl
sbb
push
jo
xchg
jle
push
repnz
je
push
stos
push
loop
test
or
bnd
or
jl
sar
inc
incb
pop
repnz
stc
cmpsb
jp
mov
pusha
call
adc
mov
pop
nop
cmp
sbb
adc
xchg
outsl
fdivrs
nop
mov
insl
and
js
pop
add
mov
adc
das
jle
push
mov
mov
nop
and
cmpl
jae
adc
jb
lret
push
divl
cmp
push
ret
fisubrl
cmpsl
jge
dec
cwtl
add
jo
stos
mov
rolb
pusha
add
addr16
test
cmp
pop
jge
inc
xchg
jb
pop
out
mov
sbb
xchg
ficomps
sbb
out
inc
icebp
sub
and
mov
add
ss
sub
adc
jae
and
xchg
sbbb
jle
pusha
xchg
sbb
repz
mov
xor
jg
movsl
add
pusha
imul
cmpsl
mov
fiaddl
lods
mov
mov
cmp
stos
dec
xchg
add
jne
hlt
xor
add
outsb
fcompl
xor
push
shrb
ss
jmp
inc
fidivl
and
pop
xchg
and
roll
out
shrb
call
pop
sbb
lods
stc
push
push
and
outsl
xchg
js
mov
icebp
push
iret
daa
cmp
xchg
xchg
sbb
icebp
shr
cwtl
mov
lods
lcall
cmc
fisubrs
in
stos
sub
and
stos
mov
aas
popa
mov
mov
lahf
add
cmpsb
rcrb
pop
jbe
dec
test
adc
mov
add
std
lcall
in
fwait
data16
setle
ficomps
mov
into
cs
addr16
clc
test
mov
jbe
xchg
dec
and
loop,pn
clc
cwtl
sbb
mov
add
cmc
inc
inc
pop
bound
mov
mov
jne
mov
fidivs
xchg
pushf
aas
test
cmp
jo
add
cmc
rcll
pop
fcoms
dec
jmp
mov
addr16
jge
mov
bnd
jbe
mov
xor
stos
push
add
lret
pop
lods
aaa
mov
daa
das
data16
pop
xchg
jge
fistpl
lret
adc
jb
mov
sbb
cmp
pop
subb
push
adc
divb
movl
jg
in
scas
dec
or
es
dec
leave
pop
aad
jnp
add
push
in
out
ljmp
clc
mov
pop
aaa
jbe
sub
sahf
adc
in
add
iret
loop
int
sub
adcb
popf
sbb
shrl
out
insl
mov
push
inc
mov
jo
mov
lea
lahf
pop
lods
cmove
sbb
lret
mov
stos
rolb
jb
adc
ja
popa
cmp
xlat
out
nop
adc
imul
ds
sub
jp
jne
cmp
xor
push
push
xlat
cld
das
jbe
out
adc
daa
jo
inc
mov
inc
sub
cmpsb
cmp
orps
mov
insl
push
cmp
pop
pop
divb
dec
adc
xchg
loopne
fnstsw
jns
adc
mov
jge
xor
adc
adc
mov
cld
shlb
hlt
inc
sbbb
jg
mov
mov
gs
nop
aad
aam
xor
xchg
lahf
xchg
iret
push
jge
dec
push
lret
jg
pop
xor
and
iret
inc
cmp
xchg
fnstcw
add
and
mov
jmp
push
and
sub
mov
jg
gs
sbb
ja
faddp
lock
sbb
test
subl
mov
cmp
dec
cmp
pop
sub
pop
and
push
jno
lret
sbb
mov
sti
xor
jmp
xchg
pop
fs
test
fld
aas
xchg
jle
scas
rcrl
hlt
mov
shll
std
leave
fisubs
cmp
scas
bound
cmp
or
jmp
shl
in
addr16
leave
push
pop
adc
loope
gs
mov
or
stc
aas
xor
aam
push
jno
rclb
stc
lods
int3
mov
fmull
inc
inc
outsl
stos
jmp
jnp
sub
xlat
mov
mov
gs
stc
loop
pop
xorl
call
jns
sub
pop
sahf
call
push
pop
repz
jecxz
dec
cmpb
push
lods
xorb
cmp
cmc
push
mov
ret
xchg
out
mov
lret
out
pop
sbb
lahf
adcl
std
bound
and
jns
js
pop
mov
pusha
cmp
add
insl
cs
fs
iret
repnz
sbb
xor
xor
mov
fstl
loope
xchg
fidivs
jmp
ror
call
and
sti
jp
stos
push
scas
imul
xor
jmp
mov
jge
pop
sub
mov
stos
xchg
lcall
jbe
mov
fcmovb
repnz
arpl
jg
xchg
sbbl
rcr
inc
lahf
mov
sub
clc
jo
adc
xor
out
fsts
fwait
mov
leave
fdivrs
jle
jecxz
jmp
sub
cs
inc
pusha
add
inc
push
adcb
mov
and
fisubs
sbb
add
xor
mov
cwtl
pop
or
insl
mov
xchg
negl
adc
fwait
outsb
notb
popa
mov
outsb
push
stc
hlt
in
shrl
testl
bound
gs
jbe
int
jmp
sti
pop
out
dec
addr16
push
pop
rol
lods
jno
jo
mov
out
jbe
jne,pn
push
das
out
repz
pop
lods
lret
cli
cld
mov
dec
lds
adc
cld
ljmp
lahf
repnz
push
xor
or
cmp
mov
jno
std
sbb
push
push
in
sub
pop
aam
xor
dec
jb
push
fistps
push
out
adc
pusha
cld
xchg
addr16
leave
sub
cmpl
inc
dec
jno
pop
out
and
repnz
int3
mov
fiaddl
xor
and
les
lods
cmp
leave
js
movb
xor
mov
and
int3
arpl
pop
cmp
dec
mov
add
imul
push
pop
fbstp
popa
sbb
test
leave
jl
out
imul
dec
addl
movsb
bswap
dec
popa
das
in
jecxz
incl
repz
mov
jo
sub
inc
mov
loopne
clc
stos
and
pop
call
pop
or
mov
je
icebp
pop
shr
push
mov
lds
lock
pop
mov
mov
out
push
add
pop
mov
lds
fisubrl
jne
test
xchg
out
fwait
popa
sub
jp
or
mov
into
mov
mov
nop
call
push
or
adc
or
jnp
imul
mov
or
dec
push
sbb
dec
cmp
bound
js
jb
and
fldcw
adc
mov
mov
mov
sbb
adc
push
cwtl
inc
inc
mov
ficoms
test
out
pop
fs
in
in
dec
adc
lods
xchg
mov
shll
add
leave
or
sbb
lods
out
and
out
cmp
inc
push
jne
imul
ja
fstl
stc
fimull
mov
mov
mov
xor
cli
add
enter
cs
in
je
sti
shll
lods
push
aad
arpl
leave
or
push
adcb
mov
add
or
push
push
test
or
jbe
cs
insb
mov
xor
stc
or
scas
fisubrs
push
lds
es
adc
int3
xchg
push
sub
dec
mov
mov
mov
mov
and
inc
mov
inc
sbb
add
or
jae
and
movsl
mov
push
repnz
xchg
test
pop
push
lock
movsb
push
aad
into
jo
jmp
adc
mov
jp
add
lret
lahf
je
add
or
and
inc
mov
idivl
daa
sbb
in
mov
out
inc
data16
sbb
in
sub
or
cmp
leave
outsb
xchg
pop
pusha
pop
inc
popa
sub
mov
jmp
lret
mov
mov
pusha
xchg
xor
inc
sbb
scas
and
mov
shll
cmp
sbb
out
movsb
pop
sbb
es
lock
jo
pop
inc
inc
jge
push
sbb
adc
aam
cmpsb
jmp
rolb
jnp
jmp
scas
sub
lret
outsb
adc
out
jmp
push
jmp
pop
leave
sbb
popa
pop
push
in
cli
aad
xor
or
test
mov
arpl
push
ret
int
in
data16
jno
cwtl
test
pop
jmp
pop
fistpl
arpl
mov
cmp
stc
ljmp
adcl
cmp
mov
stos
cli
push
gs
mov
xchg
int3
pop
faddp
xor
mov
sub
out
adc
mov
cwtl
cmp
dec
dec
stos
lcall
out
dec
and
mov
sbb
sub
pop
imull
call
fcmovbe
push
pop
xchg
sbb
aad
xlat
in
or
dec
push
jne
xor
mov
dec
fistpll
mov
mov
jge
mov
xchg
sti
lahf
pop
es
and
fisttps
dec
ja
mov
inc
dec
pop
xchg
sbb
jle
mov
shl
das
and
fisttpll
lahf
mov
aad
pop
cmp
outsl
mov
movsb
lahf
lcall
pop
push
sub
filds
adc
mov
mov
sub
push
sbb
jns
out
cmp
inc
xchg
lock
fcoml
fidivl
inc
into
movsb
mov
sub
sub
psubb
push
jmp
ret
lods
subl
dec
and
jae
push
inc
jbe
stos
inc
stos
je
sti
popf
pushf
stos
add
add
or
ja
xchg
fisubs
sub
xchg
insl
add
inc
mov
adc
jge
fildll
xchg
notb
pushf
push
icebp
cmpsl
mov
or
rcrl
mov
sahf
mov
jnp
jecxz
movsl
push
mov
mov
movsb
xor
arpl
xor
xchg
ljmp
push
fistpl
lret
and
jb
xchg
sub
ds
jmp
xlat
testl
js
xor
cwtl
xchg
push
sahf
ja
dec
mov
std
sahf
add
sub
enter
xchg
addr16
sbb
test
aaa
int
es
jmp
sbb
fdivrs
pop
inc
daa
outsl
out
inc
or
xlat
cwtl
mov
and
leave
cltd
adc
cld
out
iret
xlat
outsb
gs
sbb
jne
fucomip
jge
inc
cwtl
adc
in
cltd
fisubl
incl
mov
es
jmp
loope
test
test
bound
insb
aam
ficomps
xor
insb
xchg
ret
daa
xchg
jecxz
mov
nop
cmp
into
dec
outsl
cmp
jp
dec
or
fwait
push
xchg
cmc
push
jp
push
aaa
jo
aaa
jl
push
jmp
sbb
jmp
push
jmp
call
jecxz
sbb
sub
jecxz
pop
je
mov
cmp
sbb
sbb
sub
adc
ret
hlt
push
movsb
data16
cmpsl
lahf
ja
out
mov
loopne
lds
stos
test
sbb
fcmovb
lcall
pop
pushl
out
scas
test
scas
pushf
fs
and
fsubrl
aaa
inc
jbe
jle
les
adc
jp
into
xor
xchg
repnz
stos
outsb
fnstsw
pop
and
and
das
mov
dec
lods
cmp
dec
xchg
jge
or
xchg
js
push
cwtl
lods
adc
cmp
out
scas
outsl
jne
out
loope
push
and
and
jecxz
inc
int3
and
mov
loope
int3
fsubs
ja
jae
inc
xchg
ss
push
mov
jge
push
push
cmp
out
mov
clc
out
stos
cmc
pop
mov
xor
pop
fisubl
jb
jl
cmp
lcall
clc
jbe
xorb
pop
sarl
addl
push
pop
imul
xchg
xor
adc
cmp
pxor
ss
pusha
mov
repz
movl
and
jg
addr16
adcl
xchg
rolb
sbb
dec
xor
xchg
scas
push
data16
test
dec
mov
inc
inc
inc
and
fists
test
es
cli
xchg
sti
sub
je
sub
int3
push
daa
lods
cli
clc
push
repz
dec
pop
mov
ds
ret
mov
vmread
ret
inc
jae
jecxz
push
ret
mov
insb
jnp
adc
cmc
outsl
sub
or
int
mov
aaa
mov
imul
js
inc
mov
testl
mov
and
add
pop
daa
jo
or
addb
mov
inc
sub
sbb
cmp
jns
xchg
stos
and
in
xlat
dec
mov
nop
sub
ss
aam
sub
cmp
ret
or
or
pop
pop
mov
push
xchg
or
hlt
or
cld
loop
out
add
xchg
sbb
pop
arpl
lret
ja
hlt
xchg
sbb
and
xor
dec
sbb
iret
dec
leave
mov
test
pop
imul
xchg
sbb
in
inc
sbb
scas
lods
jae
popa
or
pop
inc
cmp
inc
xchg
xchg
mov
and
xor
mov
xlat
cli
in
fistl
dec
incl
jno
into
insl
jns
push
hlt
arpl
movsb
cmp
pop
ret
insb
flds
call
fcoml
jp
inc
notb
jno
dec
cmp
add
sbb
add
es
movsl
jmp
sub
daa
stc
shrb
xor
in
pop
push
xlat
sbb
movsl
dec
filds
movsb
sub
adc
call
cmp
xorl
inc
cmpsb
test
je
jo
cmp
mov
jns
sti
and
dec
scas
add
insl
ja
dec
pushf
aad
enter
mov
sbb
sub
out
jno
aad
cmpl
push
andl
mov
divb
push
pop
push
out
mov
out
sub
dec
cmpsl
mov
mov
ret
pop
inc
loope
arpl
push
loop
iret
fs
fistl
push
push
or
or
xor
jmp
cs
xchg
add
inc
aas
adc
roll
dec
xorl
jmp
stos
scas
ret
adc
jne
ljmp
aas
call
mov
and
aaa
scas
pushf
xlat
cmc
mov
fldt
mov
add
ja
jmp
dec
ret
hlt
and
ss
mov
sbb
lods
pop
int
pusha
and
push
push
add
and
xor
sub
pop
dec
fistps
jge
cmpsb
rorb
xlat
add
outsl
xor
dec
sub
decl
fildll
es
leave
aam
test
push
out
inc
push
adc
jmp
mov
je
out
add
in
add
lret
add
push
xchg
enter
ret
mov
dec
lea
mov
and
insb
imul
xchg
into
sar
loope
lahf
jmp
and
mov
nop
jecxz
popf
mov
sub
test
aaa
or
push
bound
sbb
sub
out
jge
lock
xchg
cltd
jb
cmp
sbb
fdivrl
je
in
lods
or
adc
cmp
mov
cs
or
orl
std
or
rcrl
mov
sub
inc
call
lret
jb
iret
out
ljmp
iret
xchg
aam
and
mov
and
cltd
imulb
inc
adc
mov
xor
mov
xchg
pop
add
out
lret
hlt
lea
repnz
dec
and
cmp
mov
js
mov
sub
jmp
jge
xor
pushf
lcall
ja
xor
cmpsl
adcl
fmull
leave
repz
pop
scas
mov
pop
xor
xor
roll
fimull
cmp
or
addr16
or
inc
push
sub
bound
js
sub
sbb
out
mov
mov
mulb
xor
mov
mov
adc
inc
add
pop
jmp
aaa
push
lret
rorl
jne
addl
rcl
adc
and
sbb
inc
or
push
sub
cwtl
lock
sub
push
adc
lret
fabs
mov
mov
aad
mov
ret
imul
bound
mov
movsb
adc
fwait
push
add
lret
iret
mov
xlat
pop
xor
sbb
add
xchg
outsl
xchg
sub
hlt
sbb
lret
lock
aam
dec
pushf
popf
mov
jne
mov
inc
add
aas
cmc
imul
aad
dec
adc
subb
sub
and
add
mov
jg
mov
or
lahf
fldenv
les
mov
mov
outsb
fnsave
test
mov
incl
dec
lcall
adc
jns
xchg
xchg
iret
cmp
xchg
mov
cmc
add
fcom
cmp
pop
rolb
movsl
gs
scas
mov
push
icebp
testb
cmpsb
push
mov
jbe
sbb
into
pushf
outsl
cli
sub
sbb
pop
push
rcrb
add
and
xchg
push
sar
xorb
mov
sub
mov
nop
ret
mov
mov
shrb
pop
lret
mov
xlat
cmp
rcrl
cmp
aas
ljmp
pusha
xchg
push
lea
insb
cs
dec
inc
jle
es
ret
enter
bound
cltd
adc
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
cmp
inc
cmp
dec
shrl
or
or
in
notb
js
loop
cmp
or
mov
mov
mov
mov
scas
sub
mov
lods
mov
mov
sub
sbb
or
push
fildll
mov
sarb
js
daa
out
jae
xor
push
jp
dec
push
mov
mov
mov
pop
mov
sarb
ljmp
pop
and
jne
push
enter
call
adcb
jge
jg
inc
xchg
push
shrl
and
loop
scas
js
add
popa
push
sbb
movsl
inc
lock
xchg
xor
bound
push
fildll
push
adc
movsl
jbe
xchg
pop
and
push
add
adc
out
sub
xchg
xchg
sub
cli
cwtl
fisubrs
outsb
xchg
dec
dec
cmp
xchg
lcall
subb
jge
in
cmpsl
mov
imul
stc
das
jge
push
push
cltd
ljmp
mov
sub
sub
out
cmp
inc
das
lods
sbb
test
icebp
sub
icebp
lret
and
lods
in
jb
and
arpl
jne
lods
out
mov
lds
lret
pop
std
test
repnz
enter
push
dec
call
inc
jle
dec
xchg
ljmp
or
pop
aas
hlt
js
mov
lea
cmp
dec
out
adc
push
cltd
pop
sbbl
es
scas
cmpsl
jmp
stc
js
push
xlat
bound
pop
xchg
pop
and
inc
stos
cmp
mov
in
nop
stos
dec
sbb
sbb
push
test
inc
nop
mov
cs
shll
out
cmp
add
and
xchg
std
inc
or
das
mov
adc
jno
mov
dec
add
pushf
and
add
xor
testl
add
sub
mov
xchg
in
into
aaa
mov
test
fcoml
ss
fs
sbb
mov
xor
idivb
push
test
xchg
lret
insb
adc
cli
aaa
lret
dec
cli
sub
in
adc
cwtl
xchg
xchg
aas
les
push
inc
inc
mov
rcrb
out
cmp
lock
ds
je
xor
pop
jae
sub
pop
jbe
and
es
jge
mov
push
loop
movsb
or
fst
leave
ret
inc
out
sbbl
pop
xchg
popa
push
adc
sbb
sbb
cmp
fists
imul
cmp
xchg
adc
lret
bndstx
dec
adc
xchg
out
dec
loope
or
lret
lcall
movsl
sti
nop
in
add
push
jbe
xchg
dec
cmp
push
ja
mov
dec
cmc
and
mov
push
sub
xchg
xchg
adc
fucomi
lea
ret
cmpsb
out
outsl
jg
jbe
and
xor
int3
movsb
jno
sub
call
inc
aaa
mov
out
popa
mov
out
daa
cmpsl
adc
pop
fiadds
sbb
mov
scas
or
inc
leave
push
push
xchg
mov
sbb
mov
xchg
ss
inc
lods
cli
in
or
mov
sub
ljmp
outsl
lret
lahf
test
jmp
jb
mov
mov
adc
aas
xlat
nop
jg
sub
or
ret
sbb
aad
sub
fs
arpl
out
mov
push
iret
cs
mov
dec
inc
rorl
sti
ds
push
push
and
fidivs
push
inc
and
adc
jp
lahf
in
idivl
lahf
pmaddwd
mov
loopne
push
mov
ja
es
push
arpl
loopne
dec
adc
ja
fstpl
mov
xor
inc
fwait
or
in
int
or
xor
aam
pop
in
fidivrl
or
sub
shrb
adc
xor
in
add
jb
add
mov
sub
dec
data16
orl
mov
jp
test
insb
jno
movsl
or
push
lret
je
mov
xor
out
mov
or
dec
je
mov
push
mov
aam
popa
loopne
xchg
mov
out
mov
loopne
mov
jp
out
pop
mov
cld
loope
imul
enter
xchg
aas
xchg
push
div
rorb
mov
icebp
outsl
push
dec
std
data16
mov
ljmp
push
xchg
inc
imul
out
cltd
enter
addb
dec
and
xchg
jecxz
dec
add
ss
aam
outsb
xchg
imul
adc
outsb
daa
jnp
adc
inc
insb
push
pop
out
cmp
shll
xor
push
mov
sbb
aaa
das
jno
mov
inc
and
fcomps
ss
jae
mulb
push
fs
mov
cmc
adc
pop
sbb
data16
xchg
cmp
mov
sub
xor
nop
push
or
xchg
andb
add
fdivs
outsl
pop
jbe
andb
push
push
push
lcall
jns
cmp
rorl
jp
into
aad
aaa
jecxz
inc
cwtl
iret
mov
negb
sbb
mov
loopne
mov
mov
sub
jb
mov
add
lret
sub
insl
add
imul
std
adcl
es
dec
cli
sbb
rcr
xchg
repnz
je
pop
das
lock
push
sysenter
shll
cmpb
cs
add
xchg
popf
out
xor
popf
and
outsb
stc
clc
pop
inc
push
std
add
and
mov
jmp
aaa
cmpsb
pop
cmp
xchg
enter
shrb
dec
cmp
jae
xor
push
jge
in
sbb
flds
sbb
inc
cmp
cmp
mov
iret
repnz
cmp
dec
fnsave
sarb
cmc
add
out
dec
icebp
rcr
sub
and
and
mov
or
es
pop
adc
mov
mov
shll
inc
xchg
inc
and
dec
adc
std
inc
inc
add
test
dec
push
mov
cmp
xchg
mov
imul
xchg
repnz
xor
xlat
or
jns
xor
je
out
pop
sub
and
push
dec
xor
mov
stos
mov
popa
std
push
scas
mov
mov
xor
xchg
pushf
xchg
inc
nop
inc
pop
ss
and
adc
push
fcoms
mov
xchg
or
faddp
popa
xor
fimull
lds
jne
push
pop
repz
sub
xchg
and
pop
ret
push
sub
adc
scas
je
aaa
mov
dec
jge
lods
and
adc
stos
jge
or
stc
pop
push
jl
sub
or
movsb
idivb
jp
negb
add
lret
push
and
pop
sbb
sub
fucomip
push
ljmp
je
lcall
outsl
or
jg
mov
inc
cld
mov
ret
xor
inc
fildl
sub
sbb
ret
mov
add
push
xor
stos
pop
lock
cwtl
mov
jmp
adc
mov
push
jo
mov
shrb
mov
mov
lods
pop
loopne
xor
int
sbb
std
xchg
dec
xchg
sbb
mov
xchg
ret
cmpsw
fsubrs
mov
into
adc
adc
dec
inc
xchg
iret
dec
jl
mov
or
out
pop
movsl
mov
imul
rorl
repz
stc
shl
outsl
dec
stc
adc
lds
cs
sub
loopne
and
shlb
dec
inc
bnd
sbb
and
lret
push
aaa
xchg
mov
scas
jo
fistpll
rol
cmp
addb
std
adc
lea
xchg
and
daa
mov
mov
icebp
add
push
jg
xor
mov
add
sbb
gs
nop
imul
rcrl
aaa
lret
shrb
pop
jle
lret
dec
sahf
jns
inc
fdivrs
cmp
jbe
in
rolb
adc
push
adc
pop
jnp
and
mull
mov
xlat
mov
jg
adc
lods
repnz
xchg
fists
pop
cmc
and
scas
lods
ret
push
dec
adc
ret
and
adc
loope
fiaddl
mov
insb
mov
pop
ja
cmpsb
push
or
mov
leave
cmpsl
cli
rorb
xor
sarb
imulb
sub
adc
punpcklwd
adcl
repz
lret
test
jp
cli
mov
aaa
imulb
std
and
scas
fistps
hlt
aaa
cmp
sub
mov
lea
add
ds
orb
incb
xchg
inc
fcomip
dec
and
enter
xchg
jne
and
ffreep
mov
scas
xlat
push
scas
push
jne
aaa
aam
inc
cmpl
cmp
out
push
insl
fs
inc
xlat
sbb
xor
jno
xchg
jb
fs
out
fisttpl
jmp
test
mov
mov
jb
or
sar
cwtl
fistl
hlt
dec
sbb
sub
mov
mov
pop
adc
mov
mov
pop
popf
cs
pop
ror
lret
jne
rclb
and
push
add
sbb
and
stos
rep
cmp
lds
shlb
call
cmp
push
into
sub
push
pushf
movsb
cltd
jnp
nop
mov
scas
cmp
aas
insl
icebp
xchg
stos
outsb
sub
pusha
int
add
int
push
add
inc
ljmp
inc
pop
pop
fisubs
addr16
mov
movsl
dec
ficomps
push
pop
add
dec
and
adc
pushf
ret
jne
push
je
xchg
push
inc
cmpsl
movsl
xor
xor
pop
cwtl
ficomps
out
ds
xchg
push
jmp
and
sbbl
adc
xchg
pop
ror
pop
popa
icebp
aam
and
inc
rorb
pop
dec
mov
lahf
insb
mov
fisttps
ds
pop
add
jmp
mov
into
inc
stos
addr16
das
cwtl
std
sarl
cld
aas
lret
mov
mov
jecxz
pop
sub
shrl
xchg
mov
push
out
outsl
scas
push
out
lods
pop
shll
pop
mov
mov
lds
mov
out
cmp
stc
pop
mov
xchg
and
in
movsl
cmpl
subb
pusha
and
fnsave
mov
call
movsl
movsb
cwtl
push
test
test
cmpsl
inc
cmp
inc
lds
ret
ss
push
icebp
xchg
shlb
bound
loop
fdivl
pushf
cwtd
mov
pusha
test
or
xchg
movsl
cltd
fdivl
testb
pop
xor
adc
cmp
lret
gs
adc
mov
pop
xchg
lods
sahf
xlat
jb
dec
cmp
out
loope
shlb
fistps
push
stos
aad
dec
xor
std
xor
jno
cld
adc
fidivl
mov
and
into
jl
clc
mov
cmp
jl
or
in
cmpsl
mov
cmc
in
xor
je
xor
pusha
rclb
push
cmpsl
dec
ret
or
jp
xchg
mov
mov
aam
xor
les
mov
adc
decl
incb
test
push
add
xchg
insb
and
popa
xchg
and
jns
cli
jecxz
cmpb
xor
xor
pushf
push
test
ljmp
sbb
inc
mov
inc
jnp
hlt
cmp
cmpsl
gs
mov
sub
imul
clc
add
add
jecxz
pop
sbb
fdivrl
xor
cs
or
mov
rcll
mov
data16
mov
sub
mov
ret
sub
sbb
in
xor
mov
push
cmp
insl
mov
fdivrp
ljmp
xchg
aam
icebp
in
adc
fldz
mov
pop
in
adc
rclb
push
cmpsl
gs
xchg
sub
adc
jbe
leave
mov
hlt
fsts
xor
jmp
rorb
lock
push
pop
or
out
icebp
inc
insl
mov
add
push
jg
add
jg
inc
movsb
in
insl
mov
jecxz
aam
xlat
or
out
sbb
sub
loop
call
lret
mov
jns
fldl
cmp
fisubl
dec
cmpl
aaa
sbbl
addr16
bnd
bound
dec
pop
jl
lcall
sbb
inc
add
nop
mov
loopnew
dec
cltd
add
in
test
pop
adcl
adc
adc
in
mov
fcoms
jp
push
test
aam
sahf
or
lret
out
sbb
stos
sahf
shlb
push
ja
orb
sub
mov
sub
mov
mov
mov
sbb
pop
sbb
mov
les
mov
add
rolb
pop
negl
jmp
mov
ret
sub
fidivrs
xor
out
dec
into
dec
js
xor
scas
and
xor
dec
das
sub
cld
xchg
dec
lea
fwait
das
lret
nop
adc
push
stc
ret
jge
movsb
in
int3
ds
mov
mov
and
rclb
in
xor
jle
dec
jl
adc
fld
movsb
mov
mov
jo
jmp
push
lcall
mov
mov
and
or
mov
mov
pushf
sbb
out
sub
in
xchg
sbb
or
cmp
lods
xor
jg
mov
xchg
divl
push
aas
jmp
inc
add
xor
rorb
popl
cltd
mov
pop
sbb
out
and
jnp
jle
sahf
sahf
or
dec
pop
and
ficoms
sbb
and
pop
pop
imul
aaa
stc
push
and
int
lea
mov
ret
push
ss
xchg
cmc
cmpsb
pushf
cmpsb
fcomps
mov
dec
inc
divl
sbb
fmuls
cmp
xchg
or
adc
mov
mov
dec
or
push
enter
pop
std
dec
and
test
mov
sbb
add
aas
push
pusha
add
insb
lcall
dec
fcompl
mov
mov
push
jb
push
into
cmpsb
xchg
xchg
movsl
xchg
xchg
adc
and
aaa
aad
adc
push
adc
adc
lea
in
inc
stos
push
cmpsb
outsb
inc
inc
lds
push
fistl
mov
pop
jl
orb
rol
mov
push
xor
and
lea
mov
cld
int3
shll
mov
cmpxchg
das
sub
or
push
add
lret
adc
cwtl
xchg
adc
fisubs
pop
inc
push
addr16
mov
fcoms
xchg
sub
cli
sarl
push
pop
cmpxchg
cltd
int
jnp
cwtl
sub
pop
xchg
imul
push
cld
int
xor
pop
or
cmpsl
xchg
aad
movsb
bound
mov
xor
mov
aam
out
int3
jnp
lods
xchg
and
adc
pop
pop
bound
mov
sbb
pop
push
fwait
movups
pop
rorb
cmp
and
sbb
scas
insb
lock
sahf
and
jne
push
mov
loope
pop
gs
lock
test
sbb
int
push
mov
outsb
fisubs
sbb
imul
adc
jns
pop
pop
jg
enter
xchg
pop
mov
cmpsb
mov
jg
mov
xor
mov
stos
push
and
sbb
mov
js
popf
push
insl
sbb
pop
jb
pushf
ljmp
and
mov
add
fmuls
je
aad
mov
and
in
xchg
scas
loop
out
ret
bound
xchg
sbb
push
pop
xchg
mov
sbb
adc
das
outsb
xchg
xchg
out
add
sub
adc
ss
push
loopne
push
pop
in
cmp
or
cmp
orb
std
lret
mov
jbe
mov
xor
js
out
in
xlat
js,pt
and
loope
das
lahf
orb
scas
add
and
and
mov
lods
pop
dec
push
adc
push
in
daa
xor
leave
or
fs
xchg
xor
es
sbb
add
loop
mov
out
pushf
xor
mov
push
cmp
les
test
in
fsub
lock
movsb
call
test
and
xchg
sbb
aam
imul
lret
ja
sbb
cmp
xor
add
gs
xchg
out
lret
or
inc
movsb
test
sahf
aas
imul
and
or
adc
mov
xchg
iret
cs
fcoms
xchg
jle
test
jecxz
add
cli
bound
jo
xchg
push
dec
mov
sub
fidivs
ret
push
pusha
add
lret
mov
out
stc
pop
xchg
ds
filds
addr16
xchg
pop
inc
mov
cwtl
insl
popf
xchg
push
addl
inc
lock
sub
lahf
test
pop
mov
mov
in
or
ds
mov
xchg
fnsave
mov
add
xor
fstpt
rcr
pop
push
loop
inc
repz
ficompl
or
adc
jbe
or
pop
ret
add
out
cmc
loope
push
das
mov
sbb
negl
mov
aaa
out
jns
arpl
insb
and
pusha
shll
iret
rorl
cmpsl
je
in
sbb
pop
fistl
lock
test
sbb
testl
cmpsl
cmp
aas
call
push
fwait
adc
adc
aam
sbb
dec
jnp
inc
adc
icebp
cltd
scas
inc
dec
aas
adc
sahf
and
jge
popa
test
pop
insb
pushf
les
pop
mov
dec
sbb
mov
sbb
cmp
push
mov
test
fwait
pop
das
inc
outsl
lcall
cli
cmpsb
add
xorl
rorb
jbe
mov
mov
mov
push
hlt
addr16
loopne
data16
adc
mov
fwait
and
hlt
add
loope
sti
pop
jns
rcr
ficoml
sti
sub
cld
pop
mov
ja
mov
in
clc
pop
insb
adc
inc
pop
sbb
pusha
and
and
stc
sub
mov
ljmp
icebp
nop
gs
sbb
push
popa
mov
cmp
cmc
pushf
inc
cmp
dec
aad
sbb
into
mov
mov
sub
and
imul
imul
push
and
rcll
lret
add
fstps
lods
inc
push
aam
or
or
sbb
add
clc
pop
int
or
adc
fnstcw
stc
fdivrp
dec
or
cmpsb
rcll
adc
sbb
fwait
dec
xor
pushf
sbb
pushf
notl
jge
test
jp
in
sbb
jp
sub
push
scas
iret
in
or
sbb
xchg
push
mov
fildl
les
mov
jmp
inc
jl
and
mov
inc
into
cld
cmp
or
aam
mov
and
inc
test
cmp
xor
lods
mov
dec
push
cs
xchg
or
pop
aas
js
inc
ljmp
pop
pusha
push
sbb
pusha
fisttpll
lahf
dec
aam
sarb
lret
daa
bound
jbe
aaa
loop
andb
dec
ja
or
dec
testl
aad
jno
imul
stos
mov
push
dec
and
out
jmp
inc
pop
movsl
scas
scas
jp
push
xchg
arpl
insb
data16
mov
xor
push
daa
jge
and
in
aam
je
mov
repz
pop
jg
adc
pop
shll
and
aas
lods
inc
das
iret
push
lcall
sbb
adc
mov
cs
jmp
idivb
cmp
add
sbb
mov
aaa
cld
cld
mov
mov
mov
mov
les
push
repnz
dec
add
insb
add
adc
movsb
pop
fnstsw
aaa
ss
cltd
ss
add
inc
xchg
out
ljmp
test
cltd
lahf
fwait
outsb
or
loop
loopne
stos
xor
iret
xor
fdiv
fdivr
sahf
leave
addr16
nop
push
test
cmc
dec
and
pop
add
sub
jge
imul
frstor
push
je
fcoml
in
push
lar
mov
jp
xor
lods
inc
fcoml
xor
jecxz
fistpll
push
pushw
mov
sbb
sub
sbb
insb
out
xchg
testb
jmp
insl
mov
mov
in
lds
mov
ds
cmp
test
push
aad
add
loope
aas
js
xchg
lods
movsl
push
adcb
and
outsb
je
popa
or
mov
jge
xor
fwait
mov
inc
push
js
in
lods
pop
mov
call
mov
jns
xchg
leave
pop
mov
insb
cmp
pop
dec
mov
adc
fdivr
testb
pop
es
and
mov
mov
shll
mov
xlat
sub
xor
jno
dec
int
push
cmp
sbb
cltd
jle
mov
cmp
cmp
test
sub
pop
xlat
sub
add
mov
xchg
jb
insb
stos
push
pop
xchg
insl
inc
sbb
push
pop
mov
push
or
inc
add
rolb
jbe
jno
jb
mov
ljmp
fsubl
lahf
ss
test
das
or
mov
mov
xchg
xchg
je
add
adc
sub
jmp
cli
je
push
mov
sbb
sbb
jbe
mov
gs
cmp
das
cltd
inc
xchg
jno
in
mov
sahf
jnp
jno
cmc
sbb
mov
ja
ja
sub
mov
push
bound
add
mov
add
loop
add
mov
mov
nop
jp
xchg
inc
push
inc
negb
daa
lods
in
das
add
std
repz
loop
incl
xor
cwtl
xchg
fnstsw
lds
in
dec
push
dec
faddl
outsl
push
dec
jge
jne
mov
cmpsb
cs
movsb
fldl
add
mov
add
push
inc
fidivl
icebp
into
int3
hlt
add
xor
mov
in
jne
fldcw
push
fiaddl
or
in
stos
and
dec
cmpl
jns
ret
mov
xchg
in
push
push
andl
repnz
mov
or
push
and
mov
mov
andl
dec
mov
mov
lds
jecxz
xchg
mov
gs
bswap
mov
jl
in
xor
xchg
xor
ds
inc
sbb
push
flds
pop
pop
mov
es
inc
pop
fwait
repz
test
gs
cs
aas
out
ljmp
jle
stos
inc
out
mov
add
popa
inc
dec
aas
addb
jecxz
sbb
and
or
jbe
adc
jns
stos
mov
rclb
lods
test
rolb
pop
dec
or
push
nop
push
mov
or
cwtl
and
inc
add
mov
inc
xor
fistl
lcall
pop
xor
pop
adc
stos
inc
xacquire
es
outsl
jl
pop
icebp
pop
push
and
outsl
das
clc
and
dec
popa
cmpsl
pop
add
xor
flds
rorl
jg
jmp
jg
int
test
cmpsb
repz
loop
push
out
repnz
mov
outsb
mov
push
jno
pushf
jnp
test
add
pop
xchg
in
or
xor
lods
fsubl
jmp
addr16
sub
mov
dec
inc
out
divb
test
or
mov
xchg
fiaddl
add
scas
adc
data16
es
sbb
jle
xchg
push
fs
cli
push
adc
mov
lock
mov
fsubl
das
jo
enter
ficomps
mov
cmp
sub
xor
inc
add
mov
in
daa
jbe
cmp
stos
push
arpl
and
rol
icebp
frstor
mov
out
push
or
fsubl
add
lea
xchg
xchg
mov
and
lea
loopne
xor
lods
inc
jno
pop
out
lahf
inc
lret
and
in
cmp
push
ficoml
or
mov
fdivrp
lds
dec
mov
lcall
xorb
mov
fdivrp
insb
ja
dec
and
push
lea
jmp
fwait
and
inc
lds
mov
testb
adc
data16
sub
pop
repnz
in
popa
movl
scas
or
cmp
adcl
mov
scas
inc
xchg
adc
sbb
xchg
pop
in
sub
enter
mov
adc
aaa
pusha
dec
cmp
orl
je
pop
imul
sbb
inc
jns
xchg
push
and
sbb
cmp
jge
mov
stos
xchg
imull
call
outsl
and
sub
push
shrl
lret
sbb
sti
fisubs
mov
std
inc
xchg
xor
out
jmp
shrl
xchg
dec
pop
mov
pop
or
dec
dec
in
enter
mov
test
add
js
fwait
cmp
xchg
lock
fistps
idivl
cmpsb
out
cmpsb
pop
mov
jnp
jae
push
in
pop
add
sub
sahf
lods
sti
mov
mov
inc
aaa
push
jae
xchg
cmc
mov
in
xchg
sbb
add
mov
popf
lret
fldt
inc
shrb
dec
cmp
ds
sbb
nop
in
fwait
mov
push
push
fcmovbe
mov
pop
cli
xor
andb
push
stc
shlb
xchg
inc
jne
subb
movsb
ljmp
sbb
bound
jle
pop
or
imul
daa
mov
jg
push
call
sub
jb
lcall
movsb
scas
add
xor
mov
cmp
push
cmp
popf
daa
fcomi
jmp
insb
lcall
push
inc
pop
push
shrb
mov
mov
dec
adc
fidivrl
je
dec
mov
xchg
xchg
leave
sub
xchg
sti
and
shrl
cltd
aad
fistpl
push
dec
push
ret
ds
cwtl
int
xor
fcomi
fnstcw
mov
outsb
mov
test
push
or
cli
and
xor
sbb
cmp
inc
sbb
pop
lods
jno
imul
shll
jae
pop
and
loop
mov
or
mov
or
pop
push
leave
lock
fwait
sbb
xchg
push
out
push
adc
lret
xchg
mov
mov
lret
push
pushf
shrb
dec
mov
pop
jb
cmp
pop
std
mov
or
aam
inc
jno
outsl
outsl
cwtl
fsubrs
push
cmpsl
xchg
or
pusha
xor
adc
rorb
rcll
push
jmp
popa
fsubp
mov
ds
add
movsl
insl
ljmp
cmp
pop
jb
repnz
inc
cmpsb
int
mov
shrb
int3
inc
inc
pop
xor
ds
test
xchg
mov
add
mov
ljmp
aaa
push
and
fwait
push
std
mov
lods
bound
adc
imul
xchg
mov
inc
pop
inc
stc
adc
add
fdivl
mov
loop
dec
loop
add
pop
fcomps
pop
lret
xchg
shrb
add
xchg
sbb
jecxz
ret
adc
test
mov
xor
push
rcrb
sbb
jl
add
mov
incb
cmp
push
cmpsl
popa
xchg
test
xor
xchg
push
xchg
lods
insb
jo
and
lods
pushf
movsb
fwait
lea
or
scas
ret
add
in
stos
and
pop
outsb
data16
outsb
jmp
int
movsl
sub
inc
push
rcrb
notl
stos
push
push
push
rcl
inc
lret
add
mov
pop
and
and
cld
sub
loop
xchg
inc
imul
int3
lods
cmc
cli
iret
push
cmp
aas
ja
in
push
mov
ss
imul
mov
inc
xor
fisttpll
cmp
repz
jbe
out
cmp
flds
into
cmpsl
dec
sysexit
loopne
sub
lahf
js
shll
pop
aaa
and
sub
movsl
and
mov
push
int
pop
bound
jbe
scas
in
fldenv
packuswb
cmp
fldenv
aad
pmulhw
or
arpl
push
ret
xor
pop
mov
js
add
fsubr
subb
or
cli
fistpl
out
cltd
mov
jae
fistpl
cmpsl
jp
scas
add
dec
dec
sub
and
push
shll
mov
push
inc
sub
sbb
pop
adc
ja
jg
div
jmp
jmp
lret
gs
add
lds
jo
sub
scas
aaa
lds
rol
iret
arpl
nop
js
jmp
fisubrl
loope
je
imull
aad
inc
cmpsb
mov
lods
push
movsl
movsl
pop
hlt
xchg
pusha
inc
mov
sub
mov
out
mov
inc
mov
sub
or
sub
fisttpl
jnp
jp
pop
lret
cmpsb
mov
push
mov
je
loopne
xchg
inc
dec
mov
jne
mov
xchg
pusha
mov
cmpsl
add
arpl
iret
jae
mov
addr16
std
addr16
jnp
mov
nop
pop
xchg
pop
out
fdivr
add
push
test
sbb
jnp
dec
pop
lds
movsb
or
adc
mov
or
repz
xor
sbb
add
cs
push
mov
mov
sbb
fdivrs
mov
adc
adc
loop
cmpsl
int
mov
roll
or
aam
and
push
pop
sub
ljmp
mov
iret
repz
ret
dec
rcll
dec
pop
std
mov
sub
xor
xor
mov
stos
stc
stc
mov
shrb
lock
push
inc
push
cli
xor
pop
imul
inc
aaa
push
push
ljmp
cmp
jmp
shll
outsl
push
sub
push
pop
cmc
dec
nop
fstps
ljmp
leave
jge
mov
jno
cli
push
outsl
in
dec
pop
lret
repz
outsb
lock
and
jo
add
xchg
pop
test
mov
or
imul
cmp
xor
lret
push
pushf
mov
test
xchg
out
jmp
and
ficoml
push
mov
sbb
add
push
test
cmpl
pop
xchg
fisttps
mov
push
lods
cltd
mov
pop
dec
xlat
push
mov
lods
repnz
mov
fmul
lock
ss
sub
movsb
mov
fldcw
xchg
sbb
or
push
sbb
outsl
sub
push
mov
inc
out
xorl
push
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
dec
push
hlt
bound
pop
bound
dec
dec
or
xchg
divl
scas
pop
pop
bound
sub
cli
adc
outsb
mov
ljmp
push
and
enter
scas
pop
js
pop
mov
sub
or
mov
jecxz
mov
in
and
mov
imul
dec
mov
push
pop
sub
adc
lock
fs
arpl
test
daa
xor
dec
int
out
xchg
test
pushf
dec
lcall
push
sti
pop
test
jg
or
outsb
fidivl
loope
nop
pop
xor
sub
addr16
pop
divl
mov
in
pushf
mov
mov
mov
dec
loope
fwait
dec
lods
pop
pop
js
sbb
pop
repnz
js
nop
xor
scas
in
notb
mov
or
std
iret
fstpl
ds
fildl
add
pop
out
cmp
add
loop
lods
int
test
add
xor
lds
hlt
inc
cmp
clc
pop
loope
inc
jl
repz
mov
iret
adc
or
std
push
ss
jne
or
or
sbb
and
sbb
xchg
cmp
push
fucomp
movsl
popf
andb
loope
adc
dec
loope
stos
xor
ret
loope
xchg
scas
jne
xchg
mov
mov
pop
sbb
fisttps
jbe
in
loopne
rcr
pop
adc
das
lcall
jmp
into
mov
add
fnstcw
xchg
and
iret
outsl
or
xchg
dec
mov
pop
pop
addr16
jp
popa
and
lret
xlat
xor
sarl
pop
dec
js
daa
xchg
adc
inc
pop
or
pusha
push
and
cwtl
popa
notl
enter
call
mov
scas
fsub
pop
and
je
cmp
mov
ds
mov
insl
popf
add
xchg
sbbb
insb
jo
clc
jbe
aas
leave
ds
ret
mov
xor
lods
mov
fisttpll
xor
xchg
xor
aaa
and
nop
rcr
push
outsl
and
out
repz
mov
mov
insb
adc
jb
xor
inc
ja
int3
movsb
jl
fsubl
cmp
and
test
sub
imul
jle
jbe
in
mov
pop
andl
js,pt
mov
jp
push
icebp
insl
jle
dec
jp
ret
in
adc
mov
xchg
cmp
mov
or
xlat
mov
cwtl
call
lods
mov
cld
hlt
cmp
and
mov
imul
fninit
xchg
sub
scas
or
std
xchg
cmp
pop
sahf
mov
cmp
dec
sub
inc
clc
nop
stos
sub
rcl
popl
lahf
adc
sbb
mov
mov
mov
xchg
addb
rcll
call
pushf
mov
adc
xchg
aaa
xchg
repz
and
xchg
pop
add
xlat
ret
mov
push
jp
push
xchg
out
mov
push
divb
or
jo
lds
pusha
pop
mov
pop
clc
test
fwait
rorl
dec
popf
push
jno
pop
cmc
push
jmp
adc
gs
or
inc
out
mov
in
lea
mulps
test
dec
int
cmp
add
scas
idivl
and
ss
push
and
dec
insb
arpl
add
ffree
movsb
insl
adc
mov
imul
mov
jo
jno
int
jp
xor
fisttps
jp
addr16
adc
mov
insl
in
mov
dec
inc
lahf
mov
mov
fcmovb
lds
shr
outsb
xor
lea
movl
push
cli
inc
cli
iret
shrb
inc
push
sub
push
inc
cmpsb
jg
aas
addr16
adcl
mov
sbb
arpl
lea
stos
repnz
pushf
shlb
mov
sub
cmpsb
sbb
dec
ja
jle
and
loop
mov
ljmp
add
mov
mov
push
cmp
iret
xor
imul
add
and
test
jg
adc
or
pushf
cmpsl
xor
add
aas
mov
cmp
jp
and
jle
lret
insl
push
xchg
mov
jecxz
or
push
test
inc
daa
xor
cmp
andl
inc
aas
add
ret
add
loopne
ss
inc
gs
adc
xchg
xchg
mov
scas
insb
arpl
jb
mov
pop
loop
hlt
xchg
lahf
adc
jecxz
jl
or
std
aam
call
sti
pcmpgtb
cli
and
add
std
cmp
mov
pushf
mov
cmc
xchg
push
xchg
pop
xor
sbb
dec
aas
jg
sbb
inc
fstl
xor
dec
fs
pop
outsb
out
jg
ja
pushf
mov
xchg
xchg
test
xchg
jmp
clc
adc
notb
inc
ja
or
out
pop
pop
add
pop
lret
fwait
aas
rol
mov
push
iret
sub
ret
xchg
sbb
xchg
lock
sbb
outsl
popa
push
inc
mov
aad
inc
dec
fisttps
add
push
test
xor
xchg
adc
add
pop
jecxz
push
lea
repz
xor
xchg
jnp
push
push
inc
das
push
rcl
sbb
das
push
cmpsb
lods
sub
mov
dec
add
insb
scas
push
dec
pop
rcrl
cmc
push
cmp
imul
cmc
movsb
movsl
fwait
std
pop
cmc
and
inc
pop
push
popa
stos
and
ret
cwtl
repnz
and
testl
lock
test
add
pop
push
call
fimull
sub
adc
cli
test
or
mov
mov
lods
arpl
sub
ret
ss
mov
dec
xchg
mov
pop
mov
addl
faddl
dec
cmc
xlat
out
sbbb
mov
enter
add
or
mov
pushf
outsl
push
sub
add
pop
popl
xor
leave
or
and
iret
pusha
push
pop
cmp
enter
scas
push
daa
dec
gs
addl
sahf
xchg
adc
ds
aam
and
cld
jns
repz
push
jnp
mov
nop
iret
add
or
jne
iret
mov
jp
jb
xlat
in
xchg
cld
iret
clc
cs
mov
cmc
push
test
add
push
mov
adc
push
adc
rclb
push
daa
dec
mov
mov
sbb
adc
stos
dec
jg
fdivp
push
lret
pop
sbb
sub
cwtl
or
imul
adc
jb
outsl
pop
cmpsl
jne
out
and
dec
shll
out
push
scas
adc
aam
mov
mov
jns
outsl
aaa
adc
adc
xchg
sbb
and
ljmp
fildl
or
xor
into
cmpsl
pop
cmp
mov
adc
fidivrs
cltd
dec
lret
idivb
ljmp
dec
and
loop
pop
aaa
mov
popa
test
mov
leave
dec
cmp
repz
not
dec
inc
dec
gs
cli
mov
pop
andb
or
cmpsb
inc
mov
add
imul
fwait
lret
mov
call
sbb
mov
mov
out
and
cmp
js
daa
mov
cmp
pop
clc
mov
stc
sub
gs
mov
xlat
mov
out
ror
fsqrt
ja
bound
loop
mov
pop
pushf
hlt
into
outsb
mov
sarl
insl
dec
enter
imul
adc
and
test
jns
fcoml
xor
xchg
clc
movsb
test
out
push
add
xor
sbb
pop
in
lea
test
gs
cmpsl
mov
mov
add
cmp
aad
movsb
imul
add
negl
sub
cltd
call
outsb
ficomps
hlt
out
popa
inc
mov
sub
fabs
lcall
mov
enter
sub
jne,pt
cmp
adc
mov
sbb
push
inc
mov
sub
mov
adc
jp
push
enter
and
dec
inc
mov
rcr
repnz
aas
mov
or
jp
dec
sti
cmp
movsb
xchg
cmpsb
xchg
pop
sbb
enter
cltd
mov
clc
pop
inc
shlb
lret
inc
jne
call
out
mov
idivb
mov
in
aas
cmp
add
int
aas
mov
addb
lds
popa
gs
adc
fmulp
jle
pop
jg
jp
xchg
cltd
in
push
mov
lods
or
add
push
shll
arpl
out
jmp
movsb
ret
out
clc
mov
xor
jmp
mov
xchg
cmp
dec
jecxz
mov
mov
leave
ljmp
and
testb
mov
xchg
ret
sti
fidivs
mov
aas
and
repnz
lcall
jp
jae
in
pop
and
aam
aam
xchg
add
out
adc
cltd
loope
out
pop
pop
xchg
xor
test
inc
mov
dec
jne
cmp
xor
fucomip
shl
pop
sbb
dec
sbb
enter
ret
or
xchg
mov
ss
fcmovne
cmc
sub
aad
ret
repz
in
aas
push
xor
add
movsb
push
push
push
aad
pushf
cmpsb
cmp
shl
jnp
arpl
stos
push
adc
sbb
cmpsl
push
scas
mov
sahf
lret
je
inc
xchg
adc
cs
shlb
sbb
inc
and
sbb
loope
fstpl
cld
xor
sub
inc
icebp
pop
jle
adc
in
aas
and
aaa
std
push
sahf
push
cld
xlat
push
mov
xor
stos
mov
jg
int3
adc
cmp
pop
mov
mov
rcrl
or
loopne
shrl
cmp
mov
not
pop
sbb
call
pop
nop
pop
imul
cmp
insb
subl
stos
dec
inc
shll
ret
pop
ror
and
dec
dec
push
jl
sbb
jmp
mov
pusha
rcrl
test
insb
fcomi
mov
sub
lds
adc
lret
arpl
xor
mov
shlb
or
pushf
scas
cltd
fmull
in
mov
pop
jns
jle
test
add
cmpsb
pusha
dec
adcb
insb
add
sub
sub
xchg
inc
jge
xor
lock
cmc
sbb
idivl
cmp
mov
cmpl
loop
imul
inc
int
call
lds
add
movsl
stos
sar
add
pop
inc
lret
dec
pop
outsl
mov
and
mov
movsl
push
rcrl
dec
pop
int
popf
mov
testl
das
or
adc
mov
pop
scas
leave
mov
cmp
out
push
push
jp
lret
push
xor
sub
mov
ss
inc
mov
in
sbb
cmp
and
xor
orl
js
jae
lcall
jbe
ror
jmp
addr16
fildll
xchg
gs
mov
jne
js
sti
dec
jge
or
arpl
std
jl
int
pop
xor
or
cmp
and
into
cmp
mov
and
adc
sbb
insb
add
shr
popf
push
mov
jne
dec
cmpsl
movsb
popa
incb
adc
je
lret
mov
ficoml
mov
enter
add
push
movsb
aas
cmpsb
jl
mov
add
add
nop
xchg
jmp
dec
out
inc
mov
mov
or
lret
push
loope
fidivrs
push
sbb
or
sub
push
adc
xchg
pop
jle
or
call
jecxz
cmp
pop
imul
mov
enter
insl
and
subb
in
add
adc
gs
xor
nop
xchg
mov
hlt
mov
mov
jecxz
jne
loopne
cmp
div
js
rcrb
mov
pushf
lock
xchg
inc
add
inc
popa
inc
add
push
movb
sub
iret
scas
js
mov
stos
cmc
fcompp
push
inc
mov
aaa
enter
inc
mov
inc
xor
adc
das
inc
mov
dec
pusha
sahf
pushf
adcl
or
push
sbb
pop
pop
sub
dec
sbb
fnsave
dec
dec
mov
sub
cld
push
in
pop
int3
lds
add
mov
sub
fnstenv
inc
xlat
cmp
leave
push
inc
adc
fs
cs
pusha
out
fmull
cs
and
adc
inc
lret
xlat
push
int
das
push
inc
jne
gs
andl
out
push
sbb
dec
dec
mov
jle
rcrb
scas
fs
popa
sub
pop
adcl
repnz
in
and
aad
jle
sub
push
call
push
hlt
ja
mov
int
andl
jecxz
sbb
aas
cmp
leave
mov
xor
mov
ret
xor
mov
popf
sbb
loop
push
imul
add
and
ds
mov
out
std
jecxz
add
inc
xchg
jno
hlt
adc
fcmovu
xchg
mov
ds
dec
loope
inc
aas
mov
outsl
pusha
setle
pusha
mov
push
xor
shrb
repz
dec
subb
movsb
loop
push
sub
lods
xchg
pushf
adcb
call
xchg
fsub
sub
jnp
lret
leave
imul
movsb
push
xchg
enter
test
addr16
lods
addr16
mov
mov
xorl
adc
or
push
add
xor
insb
rorl
nop
dec
in
mov
rorb
cmp
sti
movb
mov
or
popa
mov
mov
add
jge
out
jns
sub
es
pusha
add
aam
in
add
add
xchg
and
loop
fimull
fs
ds
push
mov
dec
je
adc
pop
add
mov
sub
dec
xor
mov
icebp
sbb
mov
xor
mov
test
sbb
and
xor
jl
dec
shl
ljmp
xchg
cltd
and
jae
in
in
addr16
xor
leave
push
xchg
dec
mov
ds
pop
test
adc
adc
pop
les
push
mov
add
inc
es
pop
dec
stos
stos
faddl
fdivrl
cltd
mov
dec
cmp
dec
xchg
push
cmp
mov
pop
xorb
ret
sbb
xor
pop
and
add
inc
addb
and
mov
mov
adc
insl
mov
out
in
inc
mov
dec
mov
push
lret
mul
rcrl
cli
rolb
cmp
lahf
cwtl
fs
mul
in
div
inc
sub
push
add
popf
sub
pop
xchg
sub
sub
mov
data16
fbld
dec
mov
stos
jle
lock
sub
inc
xchg
bnd
mov
mov
pop
adc
lcall
and
fistl
jmp
xor
loope
repz
daa
mov
addr16
mov
jbe
push
mov
and
gs
xor
mov
in
xchg
loope
inc
push
jmp
xlat
pop
adc
test
add
insl
in
aam
dec
lods
and
push
mov
sbb
sub
addl
push
and
int3
mov
ja
dec
out
jge
mov
das
cmc
popa
pop
jne
into
lea
push
xor
aam
mov
inc
add
or
inc
pop
lds
sub
mov
das
pop
push
fidivrl
jnp
cmpsl
into
cmp
lock
jg
jae
cmp
lods
or
cmp
fucomp
pop
cmp
arpl
mov
xchg
and
push
fidivrl
das
dec
lods
movsb
inc
add
add
daa
out
jae
xchg
pop
aad
lock
jno
fwait
jmp
ret
kortestw
and
mov
ret
pusha
inc
mov
mov
jb
sbb
sbb
fnsave
cltd
xor
and
test
inc
mov
push
jb
inc
dec
mov
fs
pop
fmull
dec
cmpxchg8b
insl
add
lret
cmp
adc
jo
or
fistl
scas
sub
fs
jne
push
aam
mov
jmp
sahf
es
xchg
mov
stos
and
jae
mov
dec
pop
loop
dec
mov
rclb
xchg
popa
and
cli
sub
push
lret
pop
sub
icebp
adc
bound
lods
push
leave
sarb
addr16
push
xchg
arpl
pop
add
data16
call
add
push
insl
popf
icebp
lds
ds
cmp
insb
xchg
add
xchg
dec
out
mov
cmp
jl
pop
push
sub
negb
or
sahf
hlt
mov
scas
pop
jne
dec
xor
add
push
in
and
and
mov
pop
ret
aad
xchg
loopne
or
test
cli
xchg
push
and
inc
test
sub
lods
mov
stos
lods
xlat
aaa
mov
cmpb
scas
ljmp
pop
mov
addr16
ja
sub
daa
mov
into
cld
popl
cltd
sahf
inc
add
xchg
xchg
xor
int
sub
lea
push
cmpsl
xchg
fdivr
out
mov
xchg
pop
pusha
pop
jae
shll
ljmp
push
jbe
negb
fdivr
test
or
push
loop
fildl
pop
push
repz
sbb
in
pop
and
and
mov
addl
adc
aad
jmp
mov
jo
pop
jle
imul
jg
pop
and
ret
cmp
adc
in
push
fistpl
mov
daa
nop
mov
stos
dec
and
pop
add
addr16
push
in
out
pop
inc
push
pop
adc
daa
xor
cmpsl
mov
fldt
lea
jge
xor
loopne
push
call
mov
negl
mov
ss
scas
fiadds
add
dec
rcrl
rcrb
push
cmp
push
icebp
test
jge
add
sbb
fs
in
sbb
push
scas
cmp
pop
test
pusha
popa
pop
js
repz
mov
cmpsl
jo
sbb
jmp
adc
push
in
in
mov
mov
inc
xchg
jnp
bound
inc
pushf
les
sub
mov
or
loope
dec
add
loopne
fnstsw
push
inc
stc
mov
aaa
adc
jmp
shrl
and
inc
add
push
xchg
iret
mov
add
out
arpl
fdivs
test
inc
push
mov
pop
movsl
xchg
pop
inc
jo
call
fmull
pusha
push
mov
cmp
mov
inc
pop
adc
and
in
mov
stos
outsl
fstpt
dec
add
outsb
jno
xor
orl
pop
mov
cld
mov
pushf
and
mov
dec
ret
lock
dec
adc
inc
sbb
fcoms
cmp
adc
rorl
xchg
jno
std
mov
out
call
or
mov
adc
mov
pushf
hlt
pusha
std
dec
aaa
cs
adc
je
xor
mov
rcrb
insb
pusha
sub
mov
mov
jno
fdivl
pop
lds
adc
xor
cmp
in
fxch
push
lock
gs
cmc
pop
and
call
xchg
das
sub
cmp
in
jb
pop
xchg
cmp
inc
xlat
push
xor
test
dec
mov
adc
cli
std
dec
shll
aam
sub
into
roll
pop
cwtl
into
xchg
and
mov
xchg
sti
sub
sub
imul
pusha
ret
aam
sti
nop
fistpll
psubsw
bnd
sbb
inc
mov
add
cli
inc
sti
xchg
add
inc
adc
aaa
fisttpl
fs
sbb
push
pop
add
loopne
xchg
or
repnz
fbstp
dec
pop
jb
enter
leave
add
clc
cmpsl
jmp
or
inc
cmp
or
cld
ljmp
in
add
ret
popf
xchg
nop
dec
pop
fucomi
and
js
nopl
push
repnz
ret
int3
mov
sub
gs
fcomi
xchg
shl
dec
fstpt
aas
nop
rcll
and
js
xlat
insb
aam
arpl
mov
sub
adc
mov
inc
add
idivl
rcrl
outsl
outsb
jno
in
xchg
loop
movsl
nop
inc
mov
jle
xor
jns
inc
fsubrl
jb
dec
mov
xorb
pop
pop
push
stos
in
cli
rorl
xor
iret
clc
add
dec
inc
mov
push
fsts
dec
iret
pusha
sbb
dec
jecxz
scas
push
mov
add
mov
xor
scas
jo
out
outsl
inc
sahf
dec
mov
jno
jne
lret
dec
std
add
shr
dec
outsl
and
scas
fucomip
mov
dec
push
mov
mov
push
mov
insl
inc
fdivl
push
repz
mov
je
xchg
sbb
jle,pt
sub
or
popf
repnz
rdtsc
mov
rcrb
lahf
sub
cmp
cmp
ret
lds
mov
sub
xchg
xchg
int3
clc
cld
jecxz
subl
gs
stos
push
stos
inc
call
dec
loop
ljmp
xor
mov
movsb
aad
adc
into
les
stos
pop
leave
mov
lcall
add
jne
and
xor
sbb
test
mov
test
lahf
xor
pushf
mov
stos
xchg
int3
stos
test
mov
movsb
mov
mov
push
fistps
xchg
push
je
push
sub
je
push
pop
cmp
push
ret
sbb
cmp
and
push
add
xchg
jge
cmp
scas
adc
call
xor
das
bnd
and
mov
dec
dec
and
popa
bswap
hlt
bound
in
cld
clc
mov
and
or
pop
fcompl
xor
data16
add
out
rorl
neg
pop
iret
jns
jecxz
ss
push
test
sbb
andb
addr16
sahf
outsl
movsb
cmp
inc
jl
sub
dec
les
loopne
cmc
and
cltd
in
push
xchg
rolb
cmp
mov
adc
xor
gs
push
push
jno
add
mov
inc
addr16
sbb
loopne
pop
cmp
hlt
loopne
loop
filds
add
mov
and
xor
adc
cmp
xchg
js
mov
mov
mov
lret
aam
mov
clc
xor
inc
repz
movl
insl
cmp
jg
mov
sub
xor
inc
jno
sti
cmp
cmp
lods
xchg
test
js
dec
or
ds
dec
dec
dec
imul
mov
mov
scas
inc
dec
into
mov
and
scas
xchg
and
xor
aaa
outsl
or
xor
loop
daa
cmp
or
push
or
xorl
mov
add
leave
cs
das
inc
fs
pop
jno
xor
movsb
sub
test
sti
sbb
aad
pop
int
mov
xorl
cmp
cmp
mov
rol
fcomps
icebp
xor
or
jns
iret
stos
sti
ret
scas
push
dec
sub
ret
add
ds
mov
pop
push
xchg
and
push
sub
push
xor
std
jge
jle
int
pop
jb
sbb
movsl
xor
fwait
test
mov
cltd
inc
push
pop
and
push
cmpsb
std
add
inc
mov
or
jge
cwtl
mov
lret
jns
sub
jno
push
pop
jmp
xor
mov
dec
xchg
add
push
in
push
cmp
and
add
xchg
push
xchg
int
jl
mov
push
add
jge
lret
fcom
test
stos
jmp
rclb
mov
or
out
cmpsl
mov
js
xchg
fidivl
push
shl
xchg
mov
cmp
aas
stos
sbb
mov
dec
sbbb
out
cmp
rclb
mov
adc
xchg
sub
mov
dec
push
ret
cmp
test
push
mov
ret
jbe
shl
adc
dec
mov
and
mov
inc
xor
xor
and
out
sub
dec
je
or
adc
push
mov
inc
xchg
out
and
loope
int
rcrl
xor
inc
sub
inc
imul
sbb
jnp
add
jb
test
inc
mov
push
jne
inc
jno
sbb
mov
xor
ret
ret
dec
xchg
xlat
cmp
les
das
push
sti
aas
jmp
inc
fidivl
clc
adc
sub
aad
push
js
push
leave
add
or
add
jecxz
sbb
add
repnz
fisttpl
xchg
mov
fs
mov
enter
push
sahf
mov
jo
lea
mov
add
add
mov
sub
mov
inc
pop
adc
rorl
add
stc
movsl
jmp
push
and
daa
test
fisubrl
jle
test
inc
movsb
sbb
pusha
adc
pusha
jge
andl
mov
fwait
or
sub
insb
cmp
movaps
sti
push
mull
push
leave
lcall
iret
outsl
cltd
loopne
not
cmpsb
jle
pusha
aam
adc
arpl
push
xor
loope
adc
and
pop
pop
push
mov
filds
and
scas
pop
mov
dec
repz
in
cmp
jnp
in
pop
xlat
pop
add
rorb
sbb
cmpsl
mov
lcall
push
loop
add
stos
adc
repz
subl
mov
out
sar
jae
cmp
insb
and
mov
xor
ret
mov
fimuls
push
pop
movsb
sub
push
pop
mov
adc
jno
insb
mov
cmp
jp
mov
xchg
in
filds
inc
sub
scas
incb
in
dec
jbe
mov
out
add
cltd
lcall
das
mov
cmp
xlat
mov
inc
in
stos
cmpsl
or
dec
add
in
stos
mov
movsb
loopne
dec
std
iret
lret
fs
sbb
arpl
fdivrs
jne
in
or
push
push
pop
in
pop
xchg
out
push
jo
cmp
jmp
cmp
test
rcll
lahf
clc
add
in
pop
mov
sbb
das
fisttpll
ljmp
aam
fs
jae
mov
outsl
jl
in
inc
fwait
cmpsl
cltd
adc
xor
inc
ror
adc
xor
jo
mov
inc
mov
add
add
faddl
loopne
inc
jl
mov
daa
ror
xchg
or
xchg
cmp
pop
jl
jbe
popa
xchg
mov
daa
xchg
mov
xchg
xor
fs
popf
push
mov
cmp
lds
out
sti
adc
lret
std
lods
data16
cmp
xor
cmpsb
or
ret
lret
fistpll
loope
lret
rcl
aam
xor
inc
cs
mull
xor
jg
push
push
dec
in
mov
aam
mov
inc
add
xchg
and
leave
cmp
or
shl
int
mov
shr
sar
dec
stos
cmp
cmp
dec
repz
lea
or
pop
cli
rcl
cmc
or
data16
push
inc
jg
adc
pop
mov
dec
andb
test
outsl
xor
cmpsb
mov
mov
jg
push
test
mov
ss
std
dec
pop
jbe
pop
mov
push
pop
jge
into
mov
and
adcb
jne
lahf
dec
test
fstpt
pop
bound
cmp
or
cwtl
les
sahf
pop
je
cmp
sahf
mov
ja
loopne
and
xchg
add
dec
or
jecxz
xchg
mov
xor
daa
and
mov
xchg
add
outsl
adc
rolb
mov
jge
mov
ja
leave
imul
mov
aam
push
sbb
or
inc
test
out
adc
mov
push
nop
mov
inc
clc
stos
ss
ret
push
xchg
ljmp
pop
lret
xchg
cld
xor
fcmovne
or
gs
sar
push
repz
rolb
push
shlb
iret
xchg
pusha
out
fimuls
sarb
aaa
out
xchg
fildll
mov
jne
or
push
fs
adc
mov
jb
add
sbb
mov
dec
data16
sub
je
jmp
stos
adc
sub
jge
pop
repnz
jmp
pusha
fwait
outsb
in
inc
jle
ja
adc
lret
imul
mov
xor
sbb
jo
or
enter
aad
enter
gs
inc
push
mov
dec
inc
sbb
jno
mov
movsb
xor
dec
sub
negb
pop
test
ljmp
orl
lock
testb
mov
dec
ljmp
dec
repnz
jle
sti
into
mov
js
xchg
dec
pop
addr16
hlt
mov
in
lret
test
ret
mov
cmp
adc
push
add
cmp
out
stc
mov
mov
xchg
imul
fldcw
push
mov
adc
mov
fucomp
lea
nop
fwait
jge
into
dec
pop
jne
push
or
ja
add
inc
shl
sbb
jno
fs
push
shl
pop
mov
mov
mov
or
out
and
popa
mov
fisubl
adc
inc
ljmp
in
dec
and
lahf
bound
jae
xchg
stc
adcl
in
popf
mov
rcl
and
inc
dec
scas
popa
clc
mov
repnz
jmp
push
outsb
jg
into
gs
and
bound
add
lret
imul
mov
cmpsb
mov
mov
xchg
addr16
test
je
mov
inc
inc
addr16
daa
outsb
mov
inc
pop
xor
adc
cmpsb
mov
sub
push
mov
push
lret
in
cmc
xchg
scas
mov
shr
rcrl
or
mov
inc
mov
shr
popa
jg
dec
ja
fcoml
push
push
dec
popa
fidivrl
push
cmp
xchg
dec
lea
ljmp
aam
push
pushf
dec
popa
addl
jne
ret
js
mov
mov
sbb
shlb
mov
mov
cmp
push
jae
dec
push
push
mov
and
test
orb
add
jb
pushw
mov
int3
shld
addr16
mov
je
or
adc
scas
aad
and
sub
and
push
xlat
inc
pusha
mov
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
dec
dec
ret
shll
jmp
bound
cmpsb
repnz
sub
sti
mov
out
push
pop
movsb
xchg
pop
nopl
cmp
aas
cmovle
push
jmp
ret
addr16
add
jle
mov
fistl
sbb
xchg
arpl
iret
mov
xchg
and
lds
mov
jno
dec
dec
jmp
lods
mov
fwait
cmpsl
es
dec
cli
dec
out
das
out
pop
lea
add
mov
leave
push
adc
mov
mov
push
mov
mov
mov
xchg
cmpsl
ret
inc
push
push
fmull
and
ss
loopne
test
cmp
sub
clc
stos
cmpsb
xor
mov
push
mov
ja
inc
int3
pop
xchg
stos
jge
imul
mov
xchg
push
push
sbb
jno
sbb
ds
enter
jnp,pt
mov
mov
xchg
or
push
or
pop
jmp
fcmovnb
rorl
mov
das
in
mov
adc
inc
mov
or
cltd
push
shlb
cmpsb
mov
xchg
cli
or
das
or
nop
jae
cld
push
arpl
or
jp
add
lock
sbb
sbb
insl
mov
mov
cmpsb
inc
mov
or
aam
fwait
sarb
mul
roll
popf
mov
pop
pushf
push
outsl
test
pop
and
outsb
push
loop
mov
sahf
in
mov
popa
lcall
dec
out
outsb
jl
jb
divb
out
cmpsl
xchg
xchg
into
pop
iret
daa
adc
out
int
xchg
mov
pop
sbb
push
aaa
jg
outsb
or
add
mov
inc
jmp
add
test
arpl
idiv
mov
dec
dec
mov
mov
mov
pop
in
nop
jl
rorb
bound
sbb
lds
aad
xchg
int
cltd
arpl
mov
mov
leave
popl
push
add
rcrl
mov
aas
test
mov
or
inc
and
movb
loop
adcb
imul
int
adc
scas
and
xchg
mov
ja
loopne
bswap
pusha
ss
mov
rolb
pop
out
fcoml
sub
xor
dec
fstpt
ss
jle
add
test
inc
jae
adc
pop
add
stos
int
fisubl
mov
mov
outsb
pop
pop
inc
fcom
fsub
or
out
in
mov
jp
sub
sti
jns
or
mov
iret
dec
pop
mov
push
daa
jl
arpl
rcll
data16
push
or
lret
inc
loop
cmp
cmp
cli
sub
popf
and
jae
sbb
cmp
out
andb
pop
mov
dec
fs
aad
push
insb
cmpsl
insl
jmp
or
jo
mov
jle
xor
fistps
insb
mov
jecxz
cld
jl
cmovno
int3
mov
or
int
das
les
cmp
inc
cmp
fwait
xlat
or
iret
loope
xchg
xor
cmp
stos
dec
sti
sub
orb
push
outsb
divl
fcoms
fdivrs
pop
add
outsl
mov
dec
mov
and
std
adc
and
or
lock
add
dec
and
adc
jae
call
inc
xor
adc
outsl
mov
mov
arpl
enter
fiaddl
gs
sub
aam
dec
or
cmpsl
sbb
insl
shll
jns
lock
mov
shll
push
inc
and
mov
and
mov
and
xor
sbb
jo
fdivr
aad
mov
xchg
mov
lret
movsb
daa
push
clc
adc
int
jno
movsl
sub
out
mov
rcl
notb
sub
fst
repnz
call
sbbl
and
mov
fwait
in
push
fwait
cmp
push
jns
ret
arpl
lret
rorl
clc
movsb
mov
sti
movsb
cmpb
les
das
and
push
cli
ljmp
push
jnp
xchg
push
hlt
lahf
fcompl
sub
stc
push
roll
outsl
jbe
lock
jg
mov
xchg
push
sbb
inc
out
adc
jmp
cltd
push
outsb
mov
or
push
mov
jae
push
inc
jmp
pop
pop
outsl
and
mov
lret
cmpsl
dec
xchg
cli
cmc
es
nopl
mov
out
leave
add
dec
mov
jns
add
into
mov
shll
mov
cmp
adc
ret
je
mov
test
or
xlat
lret
scas
pop
mov
xchg
addr16
cmpsb
loope
xchg
js
popf
test
push
jno
std
mov
pop
test
int3
jns
test
test
mov
cs
mov
sub
lcall
test
push
out
pushf
sar
popa
mov
sbb
pop
scas
inc
out
lcall
sbb
faddl
shlb
lret
shlb
repnz
int3
das
mov
jno
mov
mov
ljmp
mov
jle
sub
mov
xchg
addr16
push
xchg
push
popa
lock
addr16
adc
dec
ja
push
rcll
cmp
adc
inc
stos
aam
pop
push
jb
push
inc
sub
and
popa
enter
fcoml
jb
lret
fwait
inc
clc
mov
cmp
fisubrl
pop
rcrb
sub
mov
scas
out
lods
cld
mov
mov
pop
mov
addr16
insb
or
stos
add
pop
pop
jne
popf
pop
jo
and
mov
xchg
mov
pusha
repz
sbb
jbe
or
test
jp
xor
add
cmc
dec
imul
sti
stos
adcb
arpl
adc
dec
jmp
or
clc
jge,pn
fildll
cmpsb
aas
jnp
and
popa
stos
std
jecxz
int
ficomps
test
ret
add
jo
jb
adc
jae
imul
imull
pushf
dec
mov
push
and
push
inc
adcl
xchg
sub
scas
movsb
mov
mov
insl
cmpsl
dec
jno
add
jae
xchg
push
fcomi
mov
aas
push
jge
ljmp
out
sahf
xor
out
or
imulb
sub
jbe
rcrl
dec
sbb
mov
addr16
jae
jg
pop
jns
outsb
inc
cmc
dec
std
dec
add
ficomps
xor
dec
mov
stos
jl
inc
out
mov
call
jae
loop
sbb
pushaw
data16
imul
push
sub
les
ja
lods
shrl
lcall
inc
or
mov
gs
inc
add
cmp
fsub
fsubrp
pop
orl
in
sub
xor
mov
push
sbb
jl
pop
pop
mov
sub
ret
inc
or
adc
push
xchg
or
bound
or
mov
add
or
loope
mov
cwtl
sbb
js
cmp
in
cmp
push
cltd
and
mov
sbb
sub
ds
pop
addr16
cs
das
push
fcmovnu
jns
rcrb
jecxz
pop
cltd
mov
jmp
push
in
adc
inc
and
repnz
jmp
lods
add
cmp
jl
aam
js
cmp
leave
stc
scas
cmp
outsb
lea
add
aam
or
rorb
jnp
mov
jbe
xor
mov
sbb
sub
fwait
sahf
pop
stos
mov
fistpl
bts
xor
sbb
incb
imul
push
push
loopne
jmp
lahf
enter
push
mov
call
sub
loope
out
ror
sub
lret
jns
int3
int3
adc
lea
fdivl
hlt
hlt
mov
xchg
mov
mov
sbb
jle
xor
sub
lea
loopne
xchg
jecxz
and
add
cltd
jle
cmp
repnz
push
adc
add
mov
in
adc
std
pop
shll
aas
in
inc
cwtl
aas
lret
adc
cmp
pop
inc
inc
faddp
pop
pop
lock
mov
out
adc
out
fwait
sbb
sbb
add
bound
outsl
sbb
adc
fmul
push
sbb
stos
lock
nop
pop
adc
je
adc
mov
push
ja
mov
dec
lret
cmpsb
adcl
dec
pop
mov
pushf
sbb
aas
in
test
pushf
pop
jecxz
adc
and
icebp
xor
bound
or
out
jb
inc
ret
fildl
pop
push
pop
mov
in
shl
dec
jb
adc
inc
scas
movsb
sbb
inc
mov
in
mov
test
fsubrs
or
sub
jl
cs
in
xchg
dec
mov
add
and
jnp
in
or
cmpsb
mov
mov
sbb
cmp
in
sub
idivl
and
imul
repz
stc
jno
fidivrl
testb
imul
scas
fidivl
mov
cmpsl
and
mov
mov
in
inc
jp
jb
and
int3
out
push
sahf
xor
rclb
es
or
aad
sub
pop
fsubs
sbb
sub
cmc
out
out
bound
xchg
pop
lahf
mov
inc
hlt
xchg
in
imul
dec
adc
lods
dec
inc
sub
mov
hlt
pop
mul
cmp
and
mov
stc
out
add
fwait
insl
xchg
clc
cli
fidivrs
jb
nop
loopne
adcl
xchg
les
stc
scas
lret
add
jecxz
repz
in
in
cmp
xlat
stc
mulb
push
cwtl
outsb
mov
add
scas
out
int
inc
ja
pop
stos
mov
dec
pop
je
sbb
dec
adc
clc
sbb
xchg
cmpb
jecxz
cmp
mov
pushf
pop
adc
pop
subb
mov
scas
push
insl
out
adc
insb
stos
aad
es
jb
mov
push
pop
sub
inc
xor
push
cmp
adc
mov
ljmp
or
xchg
pop
mov
jmp
scas
and
xchg
lds
and
lods
out
rcrl
pop
and
xor
sahf
mov
bound
mov
or
in
mov
movsb
arpl
ljmp
inc
jnp
in
cwtl
push
adc
and
push
and
push
fs
enter
sbb
movsl
add
jmp
push
mov
adc
sbb
or
dec
ljmp
pop
push
iret
cmpsl
dec
push
xchg
adc
lahf
jge
stc
decb
fstps
add
inc
dec
pop
lahf
adc
cmp
xchg
lret
inc
xchg
adc
mov
dec
and
pop
sbb
rolb
lods
sbb
pop
jno
jno
loopw
out
pop
aam
inc
imull
add
inc
movsl
jp
cld
ds
mov
jbe
cli
aaa
lret
cmpb
lret
mov
sbb
jle
sub
sub
jbe
push
in
lds
cmpsb
popa
repz
shrb
negl
repnz
push
cmp
mov
cs
sub
mov
stos
xor
xor
ss
pop
lods
inc
aaa
push
ret
addr16
or
or
inc
cltd
and
push
addr16
shlb
push
adc
ret
push
bound
xchg
add
nop
mov
pop
sub
ud2
mov
adc
in
clc
sbb
lea
xor
jnp
sub
inc
mov
mov
cltd
idiv
inc
js
add
and
xchg
repz
roll
push
xchg
mov
dec
ds
insb
mull
and
sub
aas
ret
test
outsl
and
or
fidivrl
ljmp
into
notl
or
outsl
fsubrs
dec
es
mov
xchg
imul
loop
mov
lea
sub
ds
out
fnstsw
loopne
imul
push
mov
xchg
js
pop
mov
and
pop
add
sti
mov
out
adc
dec
out
mov
ja
sbb
lods
stos
add
pop
das
cmp
cs
in
fildl
bound
in
gs
in
mov
gs
insl
inc
mov
in
xor
ljmp
jno
dec
pop
lods
mov
pop
push
push
stc
pop
pushf
jge
shlb
sub
ljmp
pop
das
cli
inc
repnz
add
lcall
cmpsb
xor
sahf
sub
mov
ffreep
ljmp
in
inc
add
jb
cmp
fwait
and
lds
dec
jp
jbe
pop
add
push
out
data16
fwait
cmpsl
sahf
lea
lock
and
arpl
in
and
jne
movb
push
negb
cmc
push
bound
loop
cmp
jg
xchg
fstl
fstps
push
dec
je
sub
cmp
mov
fadds
xor
and
pushf
mov
lods
pusha
rep
jp
sti
out
cmp
pop
popf
movsb
and
gs
push
dec
jmp
icebp
xor
push
push
fldenv
adc
enter
outsl
jp
cmpsb
inc
mov
xchg
rcrb
fyl2xp1
mov
aas
aam
popa
pop
scas
or
sub
cmc
out
int
push
mov
ss
cmpsb
dec
mov
pop
fs
jne
pop
inc
inc
push
loope
inc
popa
js
add
and
movsb
pop
movsb
gs
mov
cwtl
cmpsl
pusha
outsl
aad
mov
push
negl
mov
stc
mov
lds
in
mov
insl
int3
ret
lret
sbb
out
or
mov
out
aad
add
push
or
jl
mov
outsb
lods
or
mov
lcall
clc
cmp
mov
dec
push
push
repz
daa
pop
inc
adc
mov
iret
pop
daa
pop
pushf
jns
sbbl
sbb
pop
mov
lcall
xchg
mov
cs
out
jle
popf
lea
sub
shl
or
les
sbb
lods
mov
outsl
ljmp
in
and
or
in
pusha
or
mov
jns
pop
fwait
mov
xlat
cmp
leavew
jne
cwtl
or
cmp
movsb
lcall
xor
cmpsl
add
push
sahf
mov
sbb
stc
in
cmp
inc
and
push
mov
push
dec
repz
in
pop
insb
aaa
mov
mov
add
mov
mov
jno
ret
daa
mov
popf
add
xor
push
test
sti
xchg
mov
repnz
xor
mov
xor
hlt
lahf
mov
in
loope
jns
jmp
dec
ljmp
out
icebp
out
cmc
lods
sbb
xchg
or
bound
bound
jbe
daa
es
mov
notl
xchg
iret
pop
sarb
jo
mov
lret
int
outsl
mov
sub
mov
stos
or
cmp
std
sub
and
or
clc
pop
dec
dec
pop
mov
addb
outsb
push
jp
fsubrs
test
mov
mov
ss
xor
adc
jmp
inc
fnsave
inc
insl
cwtl
cs
das
hlt
not
push
mov
movsl
and
in
outsl
or
sbb
pop
jb
outsb
subl
sub
pop
test
ror
xchg
cmc
sub
xchg
jae
xchg
or
add
sub
lahf
push
ja
sub
push
hlt
pusha
mov
stc
jne
jno
ss
jecxz
lods
lret
je
addl
sbb
push
push
jbe
lahf
call
jbe
aaa
pop
pop
jbe
lea
cmp
xchg
cmp
xor
push
sbb
jl
sub
inc
push
dec
sbb
fidivrl
fs
dec
fwait
xchg
jle
mov
lea
cmpsl
das
fs
rcrl
in
cmp
inc
jmp
inc
mov
jl
xor
iret
dec
mov
mov
xlat
push
je
xchg
fldcw
cltd
adc
fisubl
cmpsb
or
inc
call
push
xor
mov
shrb
lahf
enter
dec
pop
fs
or
cmc
insb
jl
pop
movsl
cmp
loop
xlat
orl
std
mov
test
xchg
xchg
shr
sub
mov
adc
jns
sub
mov
inc
push
mov
mov
push
data16
movsw
testl
and
pop
lahf
popa
das
push
sbb
pop
mov
push
imul
xor
adcl
sbb
adc
mov
adc
in
lahf
cmp
add
in
shlb
or
sbb
into
outsb
jb
mov
push
dec
test
pop
or
insb
xchg
mov
fmuls
add
decl
and
std
cwtl
popa
daa
lods
and
addr16
jecxz
nop
inc
add
das
push
pop
jbe
lods
aas
cli
rcrl
clc
sub
and
jns
cli
jns
stos
sub
out
sub
iret
je
out
nop
mov
push
sbb
pop
in
mov
nop
les
std
femms
sar
adc
jp
lcall
les
das
out
fcomps
mov
cmp
mov
cmp
pop
mov
pop
jmp
jmp
add
stc
cmpsb
js
aas
xlat
cmp
fdivs
jg
lock
cmp
sbb
icebp
add
es
push
arpl
inc
rcr
fpatan
ljmp
jge
jp
push
cmp
xchg
and
fbld
lcall
sub
in
mov
aaa
xchg
fs
and
dec
je
ficoml
cmp
jae
sbb
mov
push
ljmp
lahf
out
test
or
xchg
in
outsl
leave
push
add
sub
mov
pop
xor
movsb
jmp
lret
fisubl
int3
mov
adcb
mov
jne
pop
jl
cmc
dec
lahf
push
jmp
sbb
out
jb
cmp
outsl
inc
add
adc
andb
andb
and
jno
cmp
mov
out
jp
pusha
inc
cmpsb
sub
stos
fs
xchg
pusha
clc
push
dec
rcrl
push
xchg
cmpsb
sub
xor
shlb
in
sbb
shlb
das
cmp
dec
cmp
repnz
daa
xchg
ror
fdivs
mov
cmpsb
cmpsb
mov
xchg
fisubl
pop
push
in
mov
movsl
jae
loop
push
sbb
cmp
dec
lods
loope
enter
cmpb
sbb
or
pushf
add
adc
xchg
mov
xchg
ret
xlat
xchg
js
and
xor
mov
stc
arpl
push
pop
pop
sbb
or
mov
jbe
fs
sub
pusha
imul
dec
aaa
jmp
into
pop
push
mov
inc
in
aaa
ret
inc
fisttpl
push
push
xor
or
dec
lahf
aad
mov
xor
adc
stos
repz
mov
sbb
and
int3
shrb
add
outsl
lcall
fsubl
jne
mov
or
arpl
xorb
push
into
mov
xlat
test
out
jns
cmp
sub
mov
popf
cltd
je
adc
push
leave
daa
jmp
inc
ljmp
cs
sti
shr
sahf
ja
push
lock
xor
ret
pop
xor
aas
popf
add
mov
cwtl
stc
adc
dec
bound
mov
andb
dec
sti
out
push
sti
enter
adc
pop
cmp
outsb
mov
add
in
ja
sub
test
in
push
jae
and
sbb
cs
int
shrl
mov
pop
mov
test
xor
xchg
mov
pushl
ret
cmp
fsubr
movsl
jl
scas
inc
lcall
jp
mov
xchg
mov
mov
std
pop
in
jnp
iret
mov
add
lods
arpl
dec
xchg
mov
test
pop
mov
push
pushf
add
mov
sub
inc
mov
adcl
cmp
in
or
and
xchg
inc
mov
fisttpll
pop
mov
cltd
rcr
icebp
jne
rorb
pop
mov
sbb
hlt
dec
ljmp
sub
jo
ret
sub
dec
jg
repz
popf
mov
pop
sub
mov
cwtl
sbb
lock
xchg
mov
cmc
mov
mov
xchg
add
lods
imul
adc
cld
rcrb
dec
loop
cmp
loop
inc
popf
sub
insb
ja
popa
jb
fcmovne
add
fwait
in
xchg
stc
pushf
dec
daa
cmp
adc
mov
xor
jae
sahf
pop
adc
mov
jbe
mov
xchg
xchg
mov
sbb
fnsave
cltd
mov
loop
sub
arpl
ljmp
arpl
js
xchg
aaa
xorl
imul
mov
ss
add
sub
mov
out
insb
fbstp
lock
cmp
mov
cltd
mov
push
pop
xlat
stc
stc
arpl
ljmp
and
sbb
jmp
lock
add
push
xchg
jno
movsb
cwtl
xor
daa
push
repnz
dec
icebp
pop
cmp
rolb
insb
lcall
es
es
out
cmpb
mov
pushf
test
ja
out
mov
fwait
dec
lret
mov
xor
int3
loop
fistps
je
sub
sbb
sub
out
mov
movsb
dec
ljmp
sub
jmp
pushf
xchg
xor
adc
cmpsl
push
mov
insb
xchg
rol
je
jp
outsl
cmp
xchg
in
sub
xchg
rcrb
dec
jo
cmp
cmc
mov
nop
inc
movsl
hlt
es
stos
mov
loope
nop
jle
mov
mov
aaa
in
gs
ret
loop
xchg
and
or
aaa
xchg
sub
and
xchg
idivl
inc
xchg
sbb
jae
cmp
stos
and
int
ds
add
jb
add
add
push
mov
repnz
dec
jb
or
cmpsl
pop
push
xor
cmpb
mov
pop
fsubrs
jmp
in
in
imul
into
pop
lods
in
push
sub
hlt
add
cmpsb
popf
mov
mov
or
ret
mov
aas
xor
fs
loopne
imul
adc
cmp
or
fiadds
mov
push
lds
outsl
mov
pop
scas
xchg
dec
push
imul
dec
add
loopne
jmp
mov
pop
mov
add
mov
add
cmp
cmp
fnstcw
mov
sti
xchg
popa
repz
imul
mov
dec
push
jo
lods
lods
nop
out
mov
psubsw
dec
arpl
adc
xchg
push
pop
dec
jne
add
jg
cmp
xchg
fcoms
cmp
jmp
outsl
lea
push
mov
mov
aas
pop
je
or
lcall
mov
mov
aam
xor
dec
in
imul
idiv
cld
pop
orl
ss
out
roll
outsl
sarl
inc
xor
or
loop
sbb
aas
leave
xlat
fsubrs
rol
push
lds
mov
lahf
inc
and
xor
sbb
in
jae
test
push
es
xchg
push
add
push
pusha
repnz
cmpsl
loop
cwtl
sbb
or
std
mov
cmpsl
ret
push
fnstenv
scas
fcmove
and
lret
repz
cwtl
xor
inc
lret
dec
inc
add
jno
sub
jmp
pop
dec
xor
mov
pop
in
mov
out
cltd
test
pop
fnstenv
xchg
fldcw
jecxz
cmp
cli
and
andb
jne
sub
ss
lcall
sbb
mov
arpl
push
sub
push
icebp
lret
test
push
xchg
scas
jge
insb
push
inc
xchg
clc
or
jg
mov
push
daa
jb
loopne
add
or
adc
add
rcl
sti
and
push
sbb
sub
lcall
aam
push
inc
out
fstpt
outsl
jno
fldenv
sarl
pop
and
jbe
sub
cmp
jo
jl
jne
movsl
pop
fstps
insl
lds
mov
loopne
ret
xor
inc
decb
test
pop
out
rol
or
mov
enter
add
mov
lcall
jle
add
insl
sub
mov
mov
fs
int
mov
out
mov
loop
imull
ja
xchg
inc
mov
pop
cwtl
push
aad
push
movsl
add
insb
mov
xchg
push
subb
lret
push
sub
clc
mov
push
mov
test
mov
cwtl
nop
andl
or
les
pop
orl
or
dec
mov
scas
push
and
lods
pop
cmp
loop
jae
cmc
insl
ljmp
xlat
rclb
inc
mov
stos
nop
data16
mov
xor
or
addr16
aas
sbb
fadds
clc
mov
dec
jecxz
frstor
rorl
daa
cmp
insb
cmp
aaa
and
push
dec
cmpsl
stc
add
lods
rcrb
jno
std
cwtl
js
iret
push
pushf
mov
mov
in
adc
shll
in
inc
push
push
lds
push
scas
lods
leave
std
call
push
xchg
lods
lahf
stc
lahf
dec
pop
mov
and
sub
daa
daa
adc
fiadds
push
push
cmp
movsl
mov
mov
inc
leave
pop
pop
fs
xor
xor
mov
mov
cmpsl
mov
dec
testb
cwtl
dec
cmc
or
mov
mov
aam
sub
in
push
repz
push
rol
and
repnz
lds
inc
cld
mov
aam
outsl
fcomi
mov
shl
add
adc
ja
add
hlt
lret
sbb
push
or
xchg
fnstsw
out
mov
adc
lock
in
ljmp
adc
mov
push
ficoms
lock
pop
mov
sub
or
add
bound
push
cmp
and
cmp
imul
and
outsl
arpl
sub
movsl
rcll
cmp
int
cmp
pusha
xchg
mov
xchg
dec
jg
aam
cmp
lods
dec
dec
inc
in
jnp
lods
mov
push
mov
pop
push
movl
adc
sub
xchg
push
insl
pop
andb
movsl
out
dec
push
mov
jbe
outsb
jmp
sbb
xor
daa
es
or
xor
xor
mov
lret
lds
push
clc
cmpsl
or
shlb
mov
inc
cmc
jmp
dec
ja
fdiv
cmp
stos
out
pop
popf
mov
mov
adc
cmp
lret
ret
ja
xor
pop
sub
push
xchg
push
in
sbb
cmpsb
mov
cmp
repz
pop
mov
jl
mov
xchg
jg
pop
inc
pushf
test
xor
pop
pop
sbb
xchg
scas
cmpsb
push
mov
dec
js
mov
push
int3
add
or
or
jnp
int
imul
and
or
jnp
test
imul
pop
repnz
sbb
jmp
pop
enter
add
pop
adc
mov
push
lock
std
std
xlat
imul
xor
lcall
push
sub
lahf
mov
pushf
decb
repnz
sti
mov
and
imul
xchg
addb
aad
mov
push
sahf
push
in
loope
aam
adcb
in
lcall
and
xor
cwtl
test
sbb
sub
dec
adc
push
jecxz
add
sub
mov
out
cmp
cld
pop
es
push
aas
xchg
mov
pop
pop
sbb
mov
mov
loope
shrb
xchg
rorl
daa
mov
mov
mov
adc
mov
data16
jecxz
inc
jp
fsubrl
imul
stos
jnp
inc
hlt
add
xor
push
lret
pop
cwtl
inc
push
mov
sahf
push
cld
xor
mov
xchg
xchg
mov
mov
dec
es
mov
lea
cmp
or
es
cmp
jle
or
adc
and
das
and
xor
xchg
call
sub
cmc
lods
xor
les
aam
in
cmp
dec
insb
dec
xchg
in
jae
add
cmp
cs
xor
push
int
adc
divl
adc
lret
cwtl
sub
cld
sub
rol
stos
clc
outsb
cwtl
sub
lret
js
jnp
inc
dec
fmull
or
mov
xchg
jbe
inc
cmp
xchg
mov
jg
subb
jns
in
pop
xor
sbb
push
mov
and
mov
ds
and
mov
push
out
loope
repnz
and
scas
xor
add
pop
mov
sbb
imul
push
test
sbb
fstpl
stos
pavgw
mov
into
xchg
and
jl
sub
aam
sbb
adc
and
and
sahf
and
lods
fcomi
mov
negb
iret
cmp
adc
cs
lret
mov
adc
aas
lea
xor
pushf
sub
push
fstps
out
xchg
jne
out
fadds
mov
testb
add
test
mov
adc
mov
jmp
add
or
int
in
xlat
or
push
es
add
cmp
push
rorl
lock
add
push
pop
push
inc
movsb
sbb
loop
andl
jle
jns
mov
fisubrs
pop
push
fwait
pop
or
movsb
and
push
popf
or
mov
leave
hlt
popl
or
ja
clc
pop
push
mov
sbb
das
fwait
pop
iret
test
sbb
imul
iret
mov
and
je
sahf
cmp
xchg
ret
xchg
push
dec
pop
fisubs
scas
mov
jns
pop
adc
das
or
rorl
add
xchg
add
inc
xor
faddp
in
xor
pop
movsl
xor
lea
xchg
adc
outsl
mov
lods
pop
icebp
or
or
imul
jecxz
mov
enter
and
movsb
xchg
dec
pop
sbb
test
mov
lea
das
sub
dec
adc
mov
out
incl
bound
call
inc
lds
in
add
jns
divb
add
in
movsb
pusha
dec
daa
and
loopne
movsl
std
cmp
adc
add
xor
mov
notb
add
and
add
mov
xchg
movsl
jecxz
pop
sbb
ret
add
dec
lea
jmp
bound
shrb
mov
mov
jle
mov
push
push
imul
adc
jle
cmpsb
mov
ficoml
into
adc
pop
mov
fs
push
inc
inc
popa
mov
arpl
outsb
push
push
lock
mov
les
add
inc
mov
sub
dec
popl
push
xchg
adc
dec
int3
inc
xor
cmp
mov
and
cltd
lahf
pop
sub
mov
push
adc
out
push
mov
push
insl
cmc
in
dec
xor
push
dec
pop
cmp
daa
mov
mov
mov
or
mov
xor
in
call
gs
cmp
js
scas
pop
cmp
and
push
mov
cmp
xchg
or
shlb
jge
mov
sbb
mov
xchg
pop
cmp
sarl
xor
jb
sbb
div
rclb
shll
popf
cltd
data16
adc
sbb
fistl
pop
push
inc
cltd
pop
lea
scas
mov
push
cmp
lods
jmp
or
pop
aad
mov
add
jo
push
stos
int3
frstor
xlat
mov
dec
push
pop
push
lods
addr16
out
popa
dec
stc
mov
push
dec
sahf
xor
cwtl
dec
leave
imul
push
xchg
xchg
nop
popl
mov
fs
pop
mov
adc
adc
orb
outsl
adc
add
in
ds
xchg
jns
pop
sbb
fistpll
in
mov
dec
mov
stos
cld
push
ds
or
iret
push
mov
movsl
dec
je
test
out
sub
jmp
inc
pushf
xchg
adc
mov
sti
fwait
lret
ja
fdivrs
pop
add
out
fldl
sahf
test
lret
push
pop
and
stos
sbb
lock
fnstcw
nop
repnz
rcll
sub
push
in
mov
imul
test
int
xor
shl
fidivl
add
push
sub
pop
add
cmp
mov
rcrb
cmp
lods
dec
out
sub
aaa
mov
lods
xchg
jnp
xchg
lea
mov
push
sbb
stos
inc
inc
pushf
xlat
out
push
push
jmp
xor
je
std
adc
sub
stc
dec
sub
xchg
cmp
inc
into
push
xchg
pop
adc
push
cmp
das
imul
rcrb
ficomps
push
fists
mov
add
and
int
mov
and
or
fwait
xchg
loop
ds
dec
adc
adcl
mov
inc
and
pushf
mov
test
cmp
adc
popf
clc
aas
shll
mov
ljmp
add
jbe
dec
test
imul
insl
xchg
push
repnz
xor
push
fwait
lret
out
sahf
cmpsb
insl
sbb
in
push
push
fadds
jbe
ja
jle
rcrb
into
in
fcomps
mov
ret
adc
movb
cmp
ret
das
fcoms
fwait
scas
pop
push
sbb
or
icebp
mov
push
xlat
mov
and
push
mov
outsb
andps
fwait
inc
andb
loope
xor
lea
jno
hlt
popf
aam
jl
push
and
and
cmp
add
adc
daa
loop
imul
lods
imul
in
push
or
fs
jmp
mov
insb
push
arpl
outsb
adc
mov
xor
mov
dec
std
test
pop
in
inc
cmp
push
mov
sbb
cld
xchg
mov
mov
push
dec
inc
mov
inc
push
adc
and
dec
leave
sub
fdivl
mov
xlat
xor
inc
push
push
inc
xlat
xor
repnz
fisttpl
imul
jle
xchg
stos
cmp
dec
ja
sar
push
imul
sbbb
push
pop
loopne
ficoml
sahf
mov
test
das
jno
mov
daa
jl
jns
loope
xchg
and
std
es
add
int
push
jae
mov
jns
cltd
sub
push
lods
outsl
in
shlb
lret
cmpsb
sbb
loop
out
lods
xor
loopne
jmp
mov
cmp
pop
cli
lret
scas
inc
js
lods
test
pop
cmp
dec
xor
mov
test
popa
inc
repnz
jne
push
lret
sub
mov
sub
lcall
mov
mov
jne
push
and
mov
mov
dec
push
mov
pusha
lods
xchg
jo
mov
fidivrs
sub
dec
xchg
add
pusha
cmpsb
insl
icebp
jno
imul
mov
adc
mov
rclb
fwait
adc
and
aad
stos
iretw
in
jnp,pt
xchg
out
mov
sti
xor
pop
jmp
jge
out
fstpl
les
add
mov
sub
je
mov
jmp
mov
dec
mull
mov
test
in
xor
test
and
aas
mov
xor
repz
lock
leave
adc
sub
push
pop
push
push
clc
mov
scas
scas
insl
push
mov
sbb
daa
jne
repz
xchg
mov
js
mov
lret
cmp
loopne
enter
call
cli
ljmp
mov
push
pop
push
jno
sbb
mov
mov
out
stos
and
cmp
movswl
add
or
ret
ffree
add
repz
jp
stos
or
test
or
fldcw
mov
cmp
and
loop
pushf
mov
add
cmc
push
popf
mov
pusha
xor
mov
sbb
mov
and
scas
lret
in
jge
cmp
and
or
push
fidivrl
pop
cmpsl
xor
sub
dec
push
lds
lret
sub
out
mov
mov
cmp
fbld
jae
imul
lahf
inc
bound
and
sbb
cltd
cmpsb
std
xchg
push
push
in
movsb
xor
in
cmp
adc
rcrl
inc
fadd
mov
int
or
test
pusha
pop
pushf
shll
xchg
mov
pop
out
mov
lahf
shl
cmpsl
mov
insl
mov
test
addr16
loope
xchg
and
jge
cwtl
push
mov
xor
pop
leave
loop
call
push
loopne
clc
mov
cmp
pushf
mov
lods
lret
add
repnz
pop
shll
mov
shll
movsb
clc
pop
ret
pop
mov
jb
and
xor
clc
push
dec
out
cwtl
int
int
daa
or
incb
cmp
mov
es
mov
cli
sbb
lret
add
adc
roll
fmuls
in
push
out
fsubrl
arpl
daa
xchg
in
inc
cltd
xor
xchg
dec
nop
in
lock
lock
fldl
mov
and
stos
push
jb
cmp
pop
xchg
mov
xchg
enter
int3
pusha
stc
ds
mov
dec
repz
push
lods
push
dec
or
ljmp
adc
in
adc
xor
ret
jmp
sub
mov
or
les
jl
jp
out
sbb
mov
xchg
pop
mov
push
cmp
dec
imul
mov
dec
jle
xlat
ret
fs
or
das
cmp
adc
das
ror
xor
test
mov
test
mov
or
jae
insl
leave
movsb
add
fstpt
push
dec
jge
or
test
or
scas
add
test
mov
inc
out
cld
orb
fidivrl
sub
inc
imull
push
xlat
add
pop
cmp
xor
mov
repnz
push
cs
mov
out
pop
mov
out
jb
sti
movsl
and
cwtl
cs
rcrb
sahf
push
add
jnp
sbb
inc
sbb
push
or
lahf
inc
dec
mov
mov
aad
xchg
mov
add
adc
inc
push
insb
hlt
incl
inc
adc
ret
jbe
nop
in
add
stos
cltd
aam
maxps
or
test
jbe
xor
mov
shll
je
out
repnz
leave
outsl
in
mov
inc
inc
adc
outsb
dec
leave
add
cs
es
ljmp
lahf
scas
xchg
scas
out
xor
or
sbb
inc
jo
sub
dec
fstps
jmp
adc
mov
je
sbb
andps
push
jnp
pushf
mov
imul
je
out
imul
xchg
data16
xchg
inc
mov
adc
outsb
cmpsb
enter
xchg
pop
and
pop
mov
push
xor
and
dec
pop
jo
aam
lret
xchg
iret
popa
or
lahf
mov
or
test
add
and
and
pop
ja
cli
cli
xchg
dec
outsb
popa
xor
es
and
or
fs
or
sahf
shrl
jg
into
lahf
mov
aas
les
test
cwtl
es
mov
cmp
or
iret
mov
pop
push
xchg
repnz
outsl
mov
pop
jge
sbb
cmpsl
addb
movsl
insb
loop
stos
fwait
dec
mov
repnz
pop
or
inc
push
or
mov
fcomp
add
push
jecxz,pt
add
das
xchg
xchg
repnz
xor
lcall
das
call
pop
js
dec
xor
lock
xor
loope
scas
mov
mov
and
jp
rorl
cmp
adc
adc
paddw
push
ljmp
inc
cmp
mov
sbb
and
shll
loop
call
sub
add
add
aaa
iret
cmp
jmp
xchg
repnz
scas
enterw
in
cmc
jmp
sbb
adc
movsl
dec
mov
pop
popf
into
hlt
fmul
in
pop
leave
fistpll
mov
mov
inc
xor
leave
push
bound
push
sbb
mov
pop
pop
in
lret
sbb
mov
pop
fstpl
es
adc
in
or
rcr
mov
sub
mov
lock
call
jmp
mov
cmp
dec
sbb
cltd
xchg
mov
inc
push
fucomp
xchg
cmpsl
mov
insl
add
sarb
cmpsb
imul
or
adc
xchg
es
sub
stos
lret
xorl
ja
fwait
cmp
or
pop
xor
aas
bound
sarb
lea
xchg
ret
std
pop
sbbb
cmp
dec
arpl
dec
pop
mov
fsubs
call
jp
out
xor
xor
pop
mov
out
arpl
and
jo
inc
lret
jg
mov
repnz
mov
xchg
push
movsb
iret
je
fs
jne
popf
pusha
cmp
adc
mov
cmp
fcmovne
int
mov
js
fisttpll
jp
in
add
fcmove
pop
and
pop
test
rolb
fcoml
jecxz
inc
icebp
push
fmull
movsl
mov
nop
scas
jle
insl
pushf
mov
cltd
dec
arpl
fbstp
adc
add
pushf
notl
lret
sub
int3
ret
into
leave
adc
push
daa
fmuls
ror
sub
hlt
xchg
add
add
push
cmp
mov
imul
xchg
and
and
or
mov
jg
repz
jg
iret
inc
jge
roll
sbb
or
xchg
les
leave
cmp
mov
push
mov
push
sbb
xchg
pushf
dec
rorl
cmp
test
jb
mov
mov
fcom
scas
sbb
lods
jmp
mov
lret
or
pop
cmp
push
jle
es
sub
mov
in
addb
jo
out
pop
cmc
sbb
xor
repnz
pop
pop
push
iret
cli
daa
mov
pop
dec
insl
das
mov
jae
push
pushf
aad
inc
aam
inc
mov
movsl
lea
and
icebp
lret
pop
enter
inc
ficomps
jp
ret
inc
push
adc
jge
jle
dec
movsl
ret
stc
jns
jns
imul
inc
push
loope
push
pop
std
aas
pushf
rclb
imul
cmp
mov
adc
xchg
ja
movsl
xor
add
push
dec
push
adc
insl
adc
push
inc
ljmp
aaa
dec
and
fwait
loop
jns
nop
enter
mov
push
pop
jge
pop
or
or
mov
fldenv
leave
je
mov
sub
or
push
sbb
ret
popa
mov
rorb
mov
cmp
pop
imul
or
cmc
mov
mov
aaa
aas
mov
dec
sbb
dec
insb
inc
jns
xchg
or
mov
ds
jmp
cmp
sbb
lds
mov
outsl
int
mov
stos
xor
inc
jge
adc
pusha
loop
and
in
adc
shll
inc
jle
xchg
jecxz
jb
xchg
in
xchg
push
push
dec
mov
into
test
rclb
mov
push
iret
divb
cmc
sub
clc
ss
lret
jg
xor
jmp
jb
push
pop
push
inc
xor
stos
inc
jl
and
movb
jb
pusha
mov
jno
mov
add
icebp
mov
jmp
xor
xor
push
cmp
out
in
xchg
in
pop
sub
or
rcrl
stos
push
dec
lds
jecxz
test
fiadds
add
mov
pop
or
gs
and
jmp
into
adc
fdivp
xchg
xor
xchg
outsl
push
adc
mov
adc
mov
inc
xchg
aad
xor
pop
jmp
out
mov
mov
cmp
cmp
stos
push
pushf
arpl
sub
mov
stos
ljmp
mov
repnz
stos
pop
popa
loope
rolb
jmp
mov
in
mov
jp
pop
pop
mov
push
fnstcw
lcall
es
or
mov
or
out
push
pop
pop
push
push
or
loope
or
lock
sar
repnz
xchg
dec
pop
inc
mov
cmpb
add
dec
ds
insb
adc
stos
mov
push
cwtl
mov
dec
sbb
pop
push
lahf
arpl
test
clc
pop
inc
pop
xor
lret
frstor
pop
push
test
cmc
repnz
mov
dec
jge
xchg
sub
ja
xchg
mov
push
add
iret
leave
xor
jecxz
inc
lods
sbb
mov
jae
push
dec
inc
fsts
xor
fcomp
push
pop
push
std
sub
mov
cmpsl
cmpl
mov
fbstp
lret
lea
jne
mov
std
into
pop
hlt
push
mov
mov
inc
push
mov
iret
mov
movsb
dec
mov
out
cwtl
mov
pushf
inc
add
cmc
cmpsb
faddl
add
sbb
cmp
movsb
pop
xchg
pop
push
out
lods
test
test
inc
inc
addl
and
outsl
jns
cs
pop
fnclex
add
sahf
and
pop
and
sub
cmp
and
daa
add
mov
dec
cmp
inc
mov
aam
sbb
dec
jo
sbb
ja
pop
andb
or
mov
push
or
inc
ss
jnp
sbb
ret
loope
dec
mov
mov
roll
ds
cltd
pop
jb
dec
pop
cmp
and
inc
dec
lret
ret
or
or
push
int
iret
inc
popa
mov
push
mov
xor
dec
cmp
or
cmpsb
lods
outsb
jns
test
push
adc
fnstsw
out
mov
aam
nop
adc
fbld
jbe
je
jl
xor
jns
xor
bound
roll
mul
or
inc
inc
push
lock
sub
or
imul
xchg
mov
inc
fsub
xchg
fstps
pushf
xchg
mov
shlb
pushf
pop
fidivrs
lds
add
in
and
fcoml
loop
and
dec
fcompl
in
cli
jmp
jecxz
push
mov
lret
decl
xor
pop
jmp
pushl
lret
xchg
ret
mov
cmp
ret
add
inc
xchg
and
in
xchg
xor
aas
inc
mov
dec
push
fdivr
mov
xor
fs
into
mov
outsb
into
jne
addr16
jge
jecxz
mov
or
in
popf
cmpsl
popl
mov
and
inc
sbb
sarb
call
jl
jae
test
icebp
stc
and
into
push
sbb
test
jl
bound
fistps
xchg
lods
sbb
sub
mov
mov
jb
out
or
adc
pop
js
and
popf
add
dec
sarl
int
sub
ja
icebp
or
pop
mov
xchg
xor
test
test
movsl
stc
test
push
pop
call
and
jae
pshufw
std
pop
in
cmp
ret
cwtl
fldenv
mov
adc
addr16
repnz
jnp
insl
jae
mov
and
aad
leave
and
sub
mov
int
jge
jbe
mov
mov
add
testl
jecxz
jns
mov
arpl
aaa
inc
test
add
cmp
pop
pop
adc
iret
in
jmp
sbb
adc
push
pop
xor
jnp
loop
mov
cmpsb
leave
jp
ja
fsubs
xchg
and
dec
dec
mov
sbb
cmp
lods
movsl
or
adc
fcmove
in
mov
enter
in
and
push
loop
addr16
pusha
adc
push
rcrl
js
mov
jg
jnp
ret
cli
inc
sub
push
sub
jmp
mov
in
repz
ss
pop
xchg
imull
aaa
pop
and
call
lret
and
bts
jo
xor
mov
push
mov
sub
ss
dec
iret
jl
aam
sbb
sahf
jl
sti
and
mov
add
in
add
and
pop
mov
stos
ja
jmp
adc
push
xor
lods
les
aam
cltd
xor
or
push
sbb
nop
sbb
enter
jns
repz
idivb
dec
ljmp
movsl
adc
inc
aas
mov
aas
or
ljmp
mov
adc
loope
push
mov
push
mov
add
dec
out
pushf
fisttps
call
insb
push
scas
push
sbbl
call
cwtl
int
xlat
dec
xor
icebp
inc
imul
mov
xor
out
cmp
stos
cwtl
sub
fidivrl
push
icebp
sub
ds
pop
sub
ror
xchg
jmp
mov
in
adc
fbstp
inc
ret
jge
shlb
in
or
dec
dec
std
arpl
jmp
jae
mov
pushf
jb
sbb
shrl
push
and
cld
adcb
ja
cmc
jge
pop
push
fildl
cs
test
divb
out
dec
lods
and
xor
into
cli
fisubrs
mov
mov
fwait
in
add
test
sub
scas
rorb
aas
sbb
iret
les
mov
sbb
or
sbb
pop
dec
pop
jo
xchg
jmp
stos
jmp
xorb
xchg
mov
jne
sbb
mov
mov
mov
xor
int3
int
dec
pop
mul
aas
mov
cltd
das
pop
mov
add
xor
pop
cmpsl
sbb
out
add
sub
xchg
adc
mov
add
push
sahf
pop
arpl
orl
or
mov
push
mov
xor
shll
das
paddusb
leave
sbb
aaa
out
lret
dec
mov
xchg
xchg
sbbl
shll
jns
sub
in
xchg
push
push
pusha
rcrb
fidivrl
pop
xchg
or
pop
jbe
test
fstl
dec
mov
inc
das
fcoml
fdivr
pop
dec
into
sbb
jg
jp
jg
fldl
ret
adc
xor
cmp
mov
cmpsl
and
test
mov
pop
or
scas
rorl
out
loopne
push
push
cwtl
into
xor
lods
adc
pop
cmpsl
stos
jb
jbe
std
pushf
lahf
std
cmc
jp
inc
jp
in
and
add
into
push
adc
rorl
xchg
sub
pop
dec
popa
or
test
aaa
fimuls
xor
js
push
adc
notl
mov
icebp
test
dec
out
push
jl
gs
addb
xchg
xchg
lret
mov
cltd
loop
sbbb
xchg
pop
sub
cmpsl
sub
stos
out
ds
in
push
push
sbb
int
xor
fs
jge
cs
out
sbb
fdivr
xlat
sbb
cmpsl
push
cmpsb
push
dec
add
push
daa
xchg
out
adc
jecxz
mov
test
adc
nop
mov
std
sub
jge
xlat
jo
sahf
xor
add
ficomps
leave
aaa
sahf
test
imul
ficomps
xchg
pop
jo
pop
pop
sub
push
push
popa
mov
or
cltd
les
jecxz
or
cmp
lret
pop
in
es
test
je
imull
bound
in
push
popa
shlb
pop
in
mov
sbbl
rcrb
popa
adc
test
mov
push
pop
mov
shl
es
lods
cmp
mov
test
shll
xchg
imul
sbbb
outsb
push
sarl
addr16
or
xchg
sbb
jg
and
scas
mov
ret
lret
imul
inc
repz
jmp
jg
jle
adc
in
and
ret
xchg
push
mov
cld
movsb
out
push
jle
in
stos
daa
jae
repnz
mov
iret
lea
insl
dec
or
xchg
bound
jmp
cmp
fimull
scas
mov
cmp
pop
mov
inc
dec
fimull
add
xchg
out
xlat
test
pop
movq
pop
cwtl
jge
inc
das
pusha
fucomip
rcrb
xorl
push
into
fadds
jmp
mov
and
push
jmp
xor
cs
cmp
and
outsb
fistps
fiadds
mov
mov
mov
lret
mov
jnp
pop
out
ds
xor
hlt
cltd
into
aas
mov
test
jl
out
xchg
rcll
fisubl
out
xchg
jnp
mov
aam
pop
iret
popf
out
fcmovne
lods
lahf
xor
je
dec
ljmp
dec
inc
jne
call
imul
xchg
fistps
ffree
xchg
jge
push
lcall
gs
leave
inc
inc
inc
repz
mov
mov
test
shrl
dec
pop
into
mov
inc
pop
pop
test
dec
push
jle
inc
aad
mov
pop
pop
cmp
fcoml
jno
add
inc
rorb
inc
addl
sbb
sahf
stc
scas
lea
jo
sub
in
push
in
xchg
dec
and
mov
push
jo
mov
insb
xchg
and
movl
mov
cmp
imul
and
roll
addr16
mov
icebp
pusha
xor
or
in
lret
in
cmpsl
out
mov
fiaddl
jl
out
lods
pop
add
jmp
xlat
dec
xchg
adc
cld
push
mov
dec
jb
test
gs
jo
jecxz
mov
arpl
aam
stc
je
pop
xchg
fsubl
hlt
adc
sub
xor
in
push
bound
in
imul
xlat
cli
fbstp
sub
sub
jne
jg
mov
js
movb
enter
jnp
dec
jmp
loopne
jae
mov
idivl
rcrb
nop
jnp
out
mov
push
pop
add
shlb
mov
shlb
push
push
imul
mov
or
sbb
out
push
test
xchg
loopne
mov
mov
dec
mov
bound
int
fwait
xchg
outsb
and
dec
xchg
and
mov
mov
cmpsb
fs
test
fiadds
cmp
mov
add
pusha
xor
andl
sbb
add
iret
sub
jbe
adc
dec
cli
ss
mov
push
sbb
ret
jmp
xchg
sahf
cmpsl
cwtl
fistps
lds
clc
xlat
sub
sbbl
sbb
or
bound
iret
xor
ds
cmp
pusha
aaa
outsb
push
lcall
or
inc
jmp
aam
pop
push
push
scas
jnp
movsb
mov
rol
mov
imul
fcompl
mov
push
testb
add
ljmp
ficoml
mov
dec
add
jo
fadds
out
push
lcall
divb
and
pop
gs
jno
je
les
ljmp
notl
ss
imul
and
fmull
icebp
xor
out
and
sahf
lea
rclb
out
in
sub
aas
xlat
mov
and
xor
and
cmp
xor
jne
sti
sbb
cvttps2pi
jo
mov
sub
mov
sbb
inc
pushl
mov
mov
shrb
and
mov
lock
mov
in
dec
adc
das
xor
pop
inc
mov
push
xchg
push
jge
ljmp
or
je
popf
cld
add
cmp
or
pop
stc
outsl
jno
adc
and
xchg
or
add
sahf
mov
adcl
mov
repnz
mov
std
jnp
sbb
adc
mov
cwtl
xor
dec
movsl
cmp
iret
movsl
pop
push
add
imul
gs
clc
mov
pop
int
sahf
cs
cld
test
xchg
jecxz
loope
adc
test
or
xchg
add
cld
pop
fisttpl
loopne
xchg
mov
inc
cmp
andl
mov
mov
pop
mov
cld
adc
nop
filds
xor
rol
test
loop
cmp
sub
repz
lret
adc
dec
cltd
loop
call
or
rorl
sbb
mov
or
ss
inc
dec
into
xchg
cs
xlat
cmpsl
bnd
das
and
sbb
mov
outsl
enter
ljmp
fisubl
lods
pop
xchg
ror
xchg
idivl
jle
scas
sahf
test
dec
lcall
out
icebp
xchg
inc
int
pop
pop
xchg
aas
dec
test
cmp
int3
pop
ret
test
pop
js
fsubl
popf
insl
inc
stc
ret
mov
arpl
sbb
lahf
and
adc
lds
or
cld
pop
mov
call
mov
lcall
cmpsb
sub
pop
mov
test
mov
pop
cwtl
cs
sub
fmull
sbb
sbb
insb
mov
out
mov
push
rcl
subl
xor
es
inc
jo
cs
push
adc
punpckhwd
sub
lahf
lds
or
fnstcw
nop
add
out
icebp
aaa
sub
and
movsl
jne
and
std
in
fcompl
or
loope
inc
xor
jne
mov
push
adc
cmp
popa
ficompl
fwait
push
or
and
imul
push
cs
fwait
out
out
sbb
and
mov
and
xlat
pop
sbb
sub
push
insl
dec
outsl
sbb
pop
inc
dec
fwait
jmp
inc
sti
repz
sbb
and
push
xor
aas
das
mov
cmp
jl
les
into
negl
jecxz
fs
cld
iret
mov
inc
mov
mov
sbb
cmp
jecxz
aaa
test
sarl
dec
pop
dec
push
or
mov
inc
dec
push
sbb
cmc
cmp
push
dec
rol
pusha
jp
lds
jnp
and
fisttps
mov
mov
xor
dec
rorl
shl
popa
jl
in
adcb
in
dec
popa
adc
imulb
clc
pop
add
pushf
push
xchg
repnz
mov
mov
cmc
in
add
ret
int
pop
push
push
push
push
push
leave
mov
mov
imul
jns
fwait
movsl
aad
daa
push
jae
ljmp
test
cmpxchg
aam
dec
or
xchg
and
loopne
and
and
push
out
fiaddl
xor
xchg
shl
or
scas
or
fstl
pushf
jbe
scas
in
dec
int3
xchg
adc
repz
pop
lds
mov
mov
mov
push
jle
push
sbb
mov
inc
or
jo
add
xor
jns
pop
xchg
rcll
adc
lret
cmp
mov
fiaddl
jb
jo
out
aaa
icebp
add
pop
jp
add
push
hlt
and
xor
jmp
inc
xorb
sub
or
xor
out
scas
inc
xchg
jge
enter
mov
ret
outsl
xchg
or
mov
dec
arpl
dec
mov
sub
ja
lret
in
mov
std
es
mov
rep
mov
jno
pushf
xchg
lods
inc
adc
lret
sti
punpckhbw
jnp
pop
push
xchg
jnp
pop
sub
and
pop
out
std
jge
std
cltd
inc
push
call
xor
out
pushf
and
jle
jb
sti
push
pop
jl
bound
dec
cvtpi2ps
jmp
imul
iret
adc
pop
outsb
add
xor
xchg
sbb
pop
addl
jg
jae
mov
cltd
out
fbld
mov
nop
stc
and
pushf
jbe
iret
cmp
sub
inc
lock
int
cmpsl
pop
std
sbb
jne
mov
xor
out
jmp
scas
xchg
cmp
inc
add
jbe
cmpsl
fs
fsubrl
rorl
mov
and
adc
mov
loop
ret
js
js
ficomps
iret
pop
jb
aaa
frstor
leave
xor
and
sub
mov
roll
mov
loopne
lds
mov
mov
lock
mov
mov
pop
jmp
xor
movsb
add
dec
xchg
arpl
jmp
mov
movsl
xor
loop
mov
out
rcll
push
fadds
and
sbb
push
mov
clc
jp
cmc
push
outsb
in
sar
cmp
ja
mov
shlb
testl
cs
sub
cmp
push
xchg
sub
cld
push
and
pop
xor
test
pop
sbb
jns
adc
pop
repz
nop
mov
dec
aam
or
xlat
jo
in
cmp
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
cmp
jmp
bound
shlb
mov
ficoms
xor
int3
and
dec
test
sbb
test
lahf
push
add
push
mov
xchg
inc
xlat
stc
add
ljmp
cltd
inc
mov
sub
cmp
xor
lock
sarl
jns
stos
inc
or
inc
or
xchg
xchg
pop
ret
add
add
sub
cmp
mov
sub
xchg
push
jl
adc
pop
jmp
std
mov
pop
mov
sbb
mov
fidivrl
mov
sbb
cmpsl
scas
sub
sarl
out
push
movsl
sti
test
test
xor
movsl
xor
dec
sbb
mov
jg
arpl
inc
rclb
adc
je
push
repz
jp
adc
aad
sub
test
fwait
jp
cmpsl
mov
scas
xchg
shld
dec
add
sub
jbe
push
cli
test
jmp
out
mov
xchg
cli
aam
in
test
fcomps
xchg
in
sub
or
cmp
push
mov
lods
push
push
loope
idivb
bnd
sbb
sub
lods
adc
jo
lods
jmp
test
cmpsb
adc
mov
shrl
and
movsl
lcall
mov
pop
jne
jg
jp
or
arpl
jbe
cmpsb
mov
filds
xchg
pop
ret
test
ficompl
in
mov
lret
lods
add
sahf
cld
or
lock
xchg
dec
mov
aas
add
add
nop
cld
cwtl
mov
roll
sarb
rolb
mov
mov
cmc
inc
xchg
outsl
sub
test
sbb
push
jmp
lret
aad
inc
inc
nop
ret
cmp
mov
xor
mov
mov
int
mov
sbb
dec
pop
pop
or
ds
lock
mov
and
push
xchg
cmp
push
ds
xlat
push
jno
cmp
popa
and
fwait
into
and
call
das
adc
aaa
xchg
jge
xor
stos
sbb
add
push
mov
xor
es
push
test
dec
jp
mov
jg
xor
mov
push
ret
xchg
andl
out
arpl
sbb
mov
movsl
mov
mov
and
fs
pushf
dec
add
test
in
and
add
bound
mov
test
jge
pop
mov
je
push
dec
hlt
sahf
dec
sbb
mov
sub
jmp
mov
int3
insb
inc
adc
lret
cs
in
lds
sub
add
fwait
cmp
rcrb
out
in
ret
jb
aam
mov
scas
push
sbb
cmpb
sahf
in
dec
mov
repz
iret
jmp
cmp
mov
pusha
lods
cli
mov
mov
dec
jbe
dec
lods
xor
and
shlb
xchg
lret
sbb
xchg
mov
push
cmp
xchg
jmp
das
ljmp
pop
and
mov
xchg
sbb
scas
mov
gs
dec
cmp
push
sahf
xor
test
stos
movsl
mov
dec
mov
mov
push
outsl
subb
push
cmp
mov
cwtl
mov
movsl
xor
jbe
lods
stos
out
xlat
jno
insl
psubb
dec
mov
in
shl
cli
inc
pop
push
mov
push
sbb
repz
call
sbb
sub
fstpt
xorl
loopne
fmull
movsl
cmp
js
pop
roll
pop
mov
mov
sbb
inc
popf
loop
mov
xchg
cmp
adc
les
aad
ja
mov
jb
jne
pop
lcall
shlb
imul
ss
xchg
in
dec
faddl
rorb
gs
sbbl
cmp
xchg
insb
add
adc
loop
sbb
xchg
sub
pop
mov
das
sbb
loopne
xor
dec
adc
jno
cmpsl
mov
mov
cmp
mov
popa
mov
dec
cmpsb
jle
pop
std
cs
and
and
fisubrs
out
cwtl
loope
mov
das
lret
repz
ss
pop
inc
sbb
mov
shrb
mov
pop
inc
inc
or
daa
dec
sti
lret
imul
xchg
out
pop
stos
jp
arpl
sub
not
mov
cmpsl
movsb
and
adc
or
iret
aam
inc
insb
mov
ficompl
out
pop
arpl
dec
lods
xchg
jecxz
cmovb
inc
xchg
inc
rcrb
daa
mov
adc
dec
inc
push
cmp
lcall
loop
aam
shrb
out
aaa
mov
dec
xchg
sbb
ret
loopne
mov
cmp
sub
filds
cs
add
xchg
js
jnp
cmpsb
loope
xor
ret
ja
insl
ficomps
jg
or
nop
cmp
inc
xlat
jp
cmpsb
mov
cmpsl
daa
xchg
jge
inc
icebp
negl
mov
xchg
shl
popa
inc
pop
enter
add
stc
jbe
fnstcw
int3
jae
pop
repz
or
xchg
stos
fwait
mov
loope
leave
outsb
loop
xchg
lahf
mov
and
fwait
imul
jns
adc
mov
scas
jbe
gs
imul
push
mov
or
mov
cmpsl
shll
mov
add
sub
popa
pop
mov
adc
cmp
mov
lahf
lcall
iret
cmp
nop
rorb
mov
mov
flds
icebp
mov
mov
rorb
jmp
mov
pop
and
or
adc
cltd
mov
cltd
push
lock
adc
aaa
adc
xchg
addr16
add
fistpl
ret
mov
lret
shll
pop
mov
cmp
lds
es
xor
jmp
dec
sbb
pop
push
mov
arpl
push
jno
sub
sub
insb
jge
mov
xchg
fbld
inc
ljmp
pop
test
jg
cli
xor
out
and
neg
dec
add
fcmovnbe
test
mov
in
xchg
adc
mov
pop
sarb
and
adc
decl
dec
cmc
sbb
or
ds
sbb
les
inc
push
hlt
mov
mov
inc
mov
in
mov
test
push
mov
into
push
sahf
pop
jecxz
pop
movsb
hlt
xor
dec
test
jno
in
divb
and
data16
pushf
mov
repz
orb
cmp
faddl
fdivrs
dec
mov
or
scas
outsb
adc
fisttpll
in
mov
inc
cs
jnp
xchg
xchg
in
mov
jnp
push
push
push
push
ljmp
in
or
jbe
out
cmpsb
insl
jns
cli
sbb
add
lods
icebp
xchg
rorl
jb
sbb
lds
xchg
xchg
or
outsl
sub
in
int3
adc
nop
daa
pushf
test
into
xlat
cmpsb
jp
js
cmp
sbbl
push
sarb
call
adc
cmp
loopne
jl
lret
jmp
mov
sti
cmp
loope
rcrl
mov
fcomp
test
xchg
shrb
enter
jo
sbb
int
shr
dec
mov
out
xor
and
mov
gs
in
pop
out
pusha
xor
jg
jmp
mov
push
clc
fimull
lds
fisubrs
sahf
mov
fnsave
mov
or
push
inc
les
mov
cmpsl
dec
cwtl
and
cmp
mov
add
mov
lret
xchg
push
leave
loop
jns
pop
jecxz
lea
inc
cmp
cmp
lret
cmpsl
add
or
push
cmc
repnz
sbb
loopne
lods
dec
shll
aad
les
int
call
push
scas
xor
js
mov
jno
dec
sub
dec
adc
xchg
in
add
je
stc
pusha
movsl
mov
loopne
sub
or
pop
rol
mov
hlt
lods
pusha
lock
jmp
mov
inc
push
bound
ds
and
sbb
fsub
xlat
sub
push
xlat
pop
dec
fisttpl
fsubl
dec
aas
sub
jle
pushf
sbb
cmpsb
das
mov
out
push
mov
xchg
pop
cwtl
dec
stc
xchg
push
mov
adc
cld
out
ss
ret
mov
and
fldenv
shrl
stos
mov
and
daa
lea
jl
ret
nop
push
arpl
ljmp
lcall
in
fdiv
sbb
bound
addb
xlat
xor
in
push
push
mov
stc
shlb
mov
cmpsb
jbe
repnz
stos
orl
xor
out
xlat
cli
sarb
mov
loope
aam
cmpsl
out
lock
pop
add
out
dec
fwait
nop
mov
jge
push
stos
into
sub
jg
addr16
sub
mov
mov
scas
in
push
bound
add
push
jae
and
cltd
loope,pn
popf
call
pop
ja
clc
inc
jp
test
stc
cmp
mov
mov
ret
aad
cmp
push
fldenv
lods
xlat
xor
insb
lds
mov
pop
adc
cmp
jle
pushf
dec
mov
cmp
mov
lods
xorl
imul
cmp
adc
pop
rcr
jp
push
loope
cld
mov
in
ja
test
nop
repz
pop
xor
pop
pop
or
inc
add
pop
enter
pop
fdivp
dec
scas
ljmp
dec
repnz
cmp
jecxz
push
leave
pushf
mov
xor
sub
mov
sbb
push
loope
scas
mov
pop
or
adc
sub
addr16
js
in
xchg
popa
aam
in
inc
imul
rcll
xchg
imul
out
push
sbb
add
mov
addb
xor
pop
xchg
push
inc
shll
bound
sahf
xchg
mov
shll
pop
std
pop
adc
lods
add
stos
pop
in
pop
movsb
test
loope
mov
push
xchg
cmpsl
mov
shl
push
int3
xor
iret
pop
fsubrs
aad
pop
int
dec
adc
or
dec
out
xchg
incb
dec
inc
iret
clc
mov
adc
outsb
cli
mov
adc
out
aad
sub
jbe
mov
jmp
jae
ds
test
xchg
movsb
ds
jmp
adc
dec
jbe
out
pop
faddp
shll
jl
xor
pop
xchg
add
xor
imul
ficoms
mov
sbb
push
lahf
mov
mov
pop
loopne
mov
dec
inc
lods
dec
mov
xor
mov
dec
xchg
frstor
aam
push
test
pop
dec
inc
push
inc
dec
cmp
and
inc
ror
cmp
xchg
jnp
imul
jno,pt
les
pop
in
pop
and
movsl
jbe
bound
adc
or
push
nop
push
and
or
movsl
roll
jno
cli
subb
inc
inc
jecxz
sub
js
lods
cmp
dec
ret
pop
mov
jp
roll
call
lods
sbbb
addl
add
stc
fiadds
and
pushf
lods
rorb
jb
dec
scas
mov
gs
dec
fimull
and
push
mov
jge
mov
sub
dec
add
jne
fists
pop
out
mov
lock
mov
imulb
pop
int3
jo
ret
adc
push
add
fs
inc
mov
add
jge
fdivr
or
push
jecxz
cltd
xor
mov
mov
push
and
jbe
or
movsl
arpl
je
addr16
dec
push
sub
jp
mov
push
fs
cmp
mov
ljmp
xchg
es
into
mov
dec
divl
aam
fidivrs
jl
mov
mov
mov
mov
dec
adc
arpl
cmp
inc
fisubrl
dec
mov
cmp
dec
and
fldt
pop
repz
sbb
lods
lock
push
mov
rcr
test
loop
hlt
dec
dec
lcall
jmp
in
sbb
xchg
dec
rolb
int
insb
rclb
and
pop
in
rcrl
add
mov
add
aaa
movsb
jo
push
xchg
call
xchg
jb
gs
ds
dec
dec
stc
push
add
jge
sahf
xor
leave
pop
fisubrs
fs
cli
lods
push
cmp
and
js
or
es
addr16
mov
stos
jp
insl
insl
mov
xchg
adc
call
xor
jmp
test
mov
jecxz
out
sti
pusha
div
sarl
int3
xchg
jmp
fidivrs
nop
imul
dec
aad
and
xchg
aaa
imul
dec
sbbb
or
pop
and
jb
xor
cmp
aaa
or
and
inc
jp
mov
sti
push
outsb
mov
push
push
stc
mov
xchg
mov
pop
dec
imul
cmp
and
mov
cmp
add
ret
sub
sub
shr
mov
scas
xchg
insb
xor
test
fwait
or
or
add
fldcw
mov
dec
dec
ror
out
mov
xchg
and
and
fldt
add
add
stc
fdivr
cmpsb
loope
fidivs
cmp
in
jnp
dec
aam
dec
adc
sti
gs
mov
mov
iret
setp
inc
mov
rolb
loopne
dec
imul
mov
jbe
dec
cld
mov
mov
cmp
out
fwait
mov
ret
xor
stos
pop
sbb
sbb
lods
jae
lods
dec
enter
iret
out
call
xor
push
lea
cltd
mov
imul
js
jl
sbb
cmp
pop
add
push
fs
and
cmp
cmpl
jo
cmp
or
push
out
stos
mov
xor
push
gs
jecxz
stos
fiadds
sbb
mov
adc
lds
dec
adc
jnp
inc
pop
frstor
cmp
test
ret
adc
mov
mov
pusha
stc
in
adc
int3
mov
jl
fidivs
xchg
aad
arpl
adc
fidivs
mov
cmp
adc
pop
btr
or
arpl
cli
jb
and
subb
cwtl
enter
mov
call
pusha
mov
ljmp
bound
nop
loop
addr16
gs
movsl
mov
popf
in
ficompl
fs
daa
xor
push
iret
outsl
test
aaa
mov
pop
inc
mov
ds
in
nop
mov
or
pop
push
in
jecxz
adc
pop
rolb
sbb
inc
ret
scas
test
movlps
jne
jne
xchg
jle
ror
lds
jge
mov
fstl
stos
in
xor
in
cmp
and
lods
cmpsl
jb
loop
xchg
inc
sub
xchg
test
int
xchg
fildll
cmp
not
adc
pushf
es
pushl
and
cmpsl
leave
outsl
cmp
mov
inc
jae
lea
test
mov
mov
in
ret
sub
mov
fwait
jno
mov
pop
aaa
fists
pop
xchg
or
cwtl
sub
push
sub
cmp
sub
ficoml
cmp
call
push
jecxz
push
test
or
adc
xchg
add
outsl
cmpb
mov
xchg
mov
push
mov
ret
push
mov
mov
fadds
sbb
fisubrl
add
xchg
mov
pop
inc
out
fwait
jg
dec
pop
push
add
bound
insb
ljmp
aam
repnz
sbb
xchg
dec
adc
xchg
and
in
jp
mov
inc
sbb
repnz
lret
leave
xor
loop
adc
pop
mov
sbb
clc
adc
xor
lea
outsb
or
inc
sbb
mov
jno
lods
inc
inc
pop
hlt
out
ss
dec
ret
aam
daa
cmp
test
adc
mov
in
popf
xor
bound
mov
pop
lahf
jmp
adc
mov
addr16
add
std
xchg
fisubrl
xchg
jb
sbb
and
jl
imulb
push
test
xor
xchg
or
dec
mov
test
sub
nop
xor
pop
iret
xchg
adc
xor
daa
push
int
adc
out
xor
sub
pop
shr
fidivrl
mov
cld
push
shll
sbbl
pop
xor
sub
mov
xor
mov
shlb
je
ds
add
lods
pop
jmp
xchg
adc
mov
scas
loope
sbb
negb
ss
sub
adc
lock
adc
xor
clc
mov
lret
pop
cmc
xchg
movsl
push
pusha
rcrl
fcmovne
int3
rcrb
enter
repz
stc
xor
pop
sub
push
je,pn
push
adc
sub
mov
inc
mov
mov
push
daa
fdiv
cltd
rcrb
loope
cmp
jp
mov
repnz
mov
sbb
xchg
sar
js
inc
inc
scas
xor
dec
or
rol
scas
sub
add
ja
pushf
jmp
enter
ds
das
xlat
test
jg
pusha
ret
std
jbe
adc
pop
cmpsb
or
loopne
inc
sbb
adc
cli
cmp
imul
mov
pusha
dec
fimull
repnz
adc
arpl
mov
and
movsb
in
fidivl
sub
ret
xchg
or
dec
repz
test
notb
and
in
loopw
in
sbb
xchg
mov
ss
ja
sti
ror
sub
dec
push
rcl
inc
dec
lret
insb
and
dec
lret
lahf
pop
dec
fst
add
es
or
sub
shll
adc
mov
mov
xor
or
imul
xchg
cmp
int
push
lea
pop
lods
ja
inc
frstor
adc
pop
mov
cwtl
and
xchg
inc
xchg
push
lea
in
pop
ret
cmp
in
mulb
cmp
push
jne
jns
into
rcrl
add
inc
andl
mov
fidivl
mull
push
jb
into
inc
and
jae
or
lock
jl
push
repnz
pop
loop
ljmp
repz
add
popa
and
ds
inc
adc
aam
xor
pushf
sub
xchg
insl
mov
push
aas
xor
xchg
imul
push
add
sbbb
dec
and
stc
cmp
stos
mov
popf
clc
sahf
mov
out
sbb
outsb
cmp
mov
jp
mov
stos
shl
loopne
cmp
addl
jo
sbb
xor
fistpl
xchg
fists
subb
xor
xchg
jmp
jge
sbb
sbb
repnz
mov
sub
push
push
icebp
sbb
xchg
test
mov
or
daa
xor
add
shr
cs
outsb
sub
nop
and
mov
sub
mov
lock
imul
mov
test
pusha
sbb
and
in
adc
dec
and
aad
dec
in
das
mov
mov
jae
imul
lods
test
dec
sahf
dec
mov
pop
jecxz
sub
out
orl
mov
cmp
jo
and
fldenv
adc
fdivl
cltd
aaa
fldenv
enter
imul
arpl
rcll
cmpsb
js
aaa
lods
outsb
jno
into
sub
cmp
jmp
xchg
ficomps
xchg
fidivs
cmp
cli
popf
shlb
mov
xor
in
mov
aam
mov
clc
mov
out
pop
loop
xchg
fwait
imul
push
jbe
fwait
nop
subb
ror
or
adc
adc
fcmovnbe
fildl
jle
jbe
jecxz
out
sub
fdivrs
push
push
xchg
pop
daa
outsl
jle
jg
xchg
sub
shrl
lock
pop
and
push
enter
repnz
into
fsubrl
mov
sbb
hlt
scas
pop
push
in
adcb
test
insb
push
jnp
adc
dec
pushf
and
ret
push
cmp
jg
add
push
rclb
pop
es
xor
add
insb
pop
jno
jnp
sahf
fwait
insl
dec
inc
fiaddl
push
insl
sbb
lods
and
push
outsb
rcrb
pop
inc
mov
shrb
mov
and
mov
xor
je
add
pop
xchg
lds
shrl
cmpsb
cmc
sub
add
jg
repnz
mov
mov
or
jp
rcll
mov
inc
xor
test
movl
and
inc
cmp
dec
inc
out
cmpsb
inc
gs
push
dec
push
fst
mov
xor
icebp
jnp
pop
inc
sub
out
rclb
mov
bnd
stos
xchg
enter
dec
ds
stos
je
dec
add
lea
test
pop
jae,pn
lods
cmp
mov
in
adc
push
jno
scas
in
lock
dec
adc
or
out
fidivrs
xor
mov
fildl
enter
cld
leave
inc
fidivrs
ja
rolb
adc
add
fsubrs
pop
mov
pusha
pop
xor
shl
adc
cltd
addr16
std
cwtl
stc
pop
inc
scas
cmp
sub
popa
inc
adc
jnp
jo
mov
call
xchg
pop
push
cmc
and
loop
mov
sub
mov
iret
test
jg
loop
test
test
mov
cs
lahf
test
cmp
je
mov
mov
insl
dec
and
sbb
cli
ret
fnstsw
testl
lcall
insb
fistpl
pop
xchg
dec
adc
movsl
sbb
dec
mov
dec
clc
pop
inc
rcll
pop
cmp
and
popa
fadds
sbb
sbb
inc
pop
pusha
mov
jae
test
ret
out
dec
sti
mov
lret
mov
dec
mov
lahf
or
jl
sbb
dec
outsl
pmulhuw
mov
insl
ret
push
adc
loope
jns
sub
sub
mov
dec
xor
cmpsl
test
or
mov
jbe
je
out
pop
jge
mov
pop
bswap
lret
push
push
std
cmp
es
call
mov
lret
mov
mov
xchg
mov
sbb
in
push
inc
repz
das
jnp
pushf
add
push
push
shlb
pop
repz
pop
stos
or
adc
aam
inc
arpl
lea
mov
movsb
cmp
and
push
jle
addr16
cltd
cmp
pusha
push
pop
dec
ja
mov
or
mov
movsb
call
mov
sub
stos
outsb
dec
and
and
cld
push
arpl
jmp
adc
mov
push
cmpsb
lds
adc
or
ljmp
pop
cmp
and
stos
in
and
mov
mov
fs
lcall
std
and
push
xchg
cmpsb
es
cltd
add
jnp
int
lea
out
or
std
ja
mov
xchg
cld
outsl
sbb
loope
jl
inc
pop
scas
test
js
lods
sbb
xchg
jecxz
inc
push
into
pop
insl
adc
adc
or
mov
loope
mov
pop
dec
pop
in
not
xchg
mov
neg
insb
das
dec
in
push
jno
push
aaa
loop
mov
inc
and
in
sarl
addr16
test
xchg
dec
into
xchg
xchg
daa
add
push
or
push
xlat
es
mov
jl
movsl
daa
inc
mov
jns
cld
aas
imul
dec
into
mov
nop
pop
ds
stos
lock
adc
adc
pop
js
mov
dec
fnstsw
inc
pushf
and
push
or
lds
ret
ds
ret
or
inc
pop
adc
sub
dec
shrl
mov
mov
pop
repz
jmp
cmp
and
int3
xchg
mov
ljmp
bound
sub
push
add
inc
popl
pop
vpsrlq
mov
jp
push
or
add
mull
outsb
or
shrl
or
and
pop
sbb
mov
dec
or
js
out
out
mov
adc
sub
add
test
mov
sub
jl
ds
jmp
xlat
jecxz
jmp
movsb
addr16
dec
xlat
pop
mov
fistl
stos
pop
push
pop
pop
les
xchg
cmpsl
jno
jmp
mov
lock
cmpl
mov
xlat
lret
addr16
popl
and
adc
mov
es
shlb
sbb
add
and
iret
mov
push
cwtl
outsl
es
jmp
in
divb
dec
push
gs
push
sbb
ficoms
incl
test
lods
inc
sti
sti
jmp
js
sbb
mov
mov
insb
cs
mov
add
aaa
sub
and
xlat
mov
push
shrb
lods
xchg
or
lea
xchg
sahf
mov
adc
xchg
and
adc
in
jnp
imul
push
push
jp
mov
js
jp
push
and
jge
pop
rclb
mov
in
ljmp
enter
cmp
dec
lods
mulb
jae
jno
jle
fmuls
and
shrl
mov
cmp
lock
scas
jmp
xor
xchg
cmp
push
mov
inc
xchg
rolb
call
in
incb
jnp
dec
push
dec
rorl
mov
test
and
repz
icebp
leave
pop
adc
rolb
and
imul
sub
out
and
mov
gs
push
scas
lret
je
outsb
adc
add
repnz
aam
pop
adc
pop
lret
cmp
pushf
lea
jae
in
lcall
testb
xchg
pop
cld
sub
int3
push
dec
cmp
jns
addl
cmpsl
mov
sti
push
mov
mov
ret
xor
scas
and
vandnps
pushf
lahf
inc
lods
dec
test
jnp
mov
cs
outsl
fnstsw
pop
cmp
dec
cmp
je
dec
cltd
test
sub
push
icebp
jne
mov
or
test
mov
sbb
shrb
icebp
pop
dec
jo
imul
fs
lea
jns
sti
mov
repz
xchg
out
cmpsb
je
lods
mov
int
jl
xor
jmp
aas
in
cltd
arpl
aad
and
aam
mov
mov
sub
shlb
mov
xchg
popf
mov
cwtl
loopne
inc
mov
push
dec
mov
push
clc
fisubrl
lcall
mov
dec
mov
outsb
add
ds
lock
rorl
ret
inc
out
mov
int
movsb
jo
ss
arpl
imul
in
movsb
dec
les
shrb
add
test
pop
push
inc
or
pop
mov
inc
cmc
cmp
mov
dec
fstpl
cltd
test
in
cltd
adc
in
and
test
movsl
adc
jmp
das
imul
jl,pn
mov
adc
xlat
push
jno
cld
jp
jns
das
lds
icebp
int3
pop
jae
cmp
mov
mov
xchg
mov
je,pt
mov
mov
in
dec
aas
in
pop
syscall
pop
fprem1
cmp
aad
mov
mov
xchg
sub
je
insl
inc
pop
fdiv
hlt
inc
sbb
adc
and
xchg
call
pop
loope
mov
out
sbb
mov
cmp
jae
fiaddl
fwait
adc
push
sub
push
jp
test
push
fnstenv
jmp
icebp
lods
push
out
xchg
dec
fiadds
mov
jnp
pop
jnp
nop
fnclex
dec
mov
mov
xor
adc
inc
xor
cli
mov
mov
jl
adc
jbe
pop
inc
xorb
push
cmc
outsb
pop
cmpsb
roll
scas
imul
cs
jl
sub
mov
dec
aas
inc
dec
js
and
loop
or
cmp
mov
lcall
sub
aas
fidivrl
inc
lods
or
mov
inc
jmp
aam
pop
out
jo
imul
les
inc
jge
xor
push
mov
ret
fildll
push
push
dec
xor
inc
lret
adc
mov
into
inc
dec
jg
lock
inc
subb
leave
fisubrl
mov
sub
xchg
mov
lods
cltd
pushf
ss
jno
mov
repnz
lret
int3
mov
stos
lea
sub
shr
lahf
out
gs
jge
adc
cmp
adc
sub
jle
popa
dec
fisubrs
adc
inc
pusha
adc
cwtl
xor
add
paddb
mov
xor
sub
lcall
mov
push
xchg
mov
fbld
mov
mov
mov
mov
mov
mov
push
repnz
xor
mov
sbb
or
loope
popa
jnp
fistl
fiadds
repz
out
push
sub
enter
adc
inc
jne
or
adc
cmpsb
inc
fs
xor
jmp
out
es
xlat
jnp
repz
and
call
xor
jo
std
dec
ljmp
test
sahf
push
mov
mov
out
addb
pop
mov
out
enter
ret
mov
cld
push
mov
mov
imul
push
xorl
loope
mov
ret
out
mov
jae
divl
cwtl
fcomip
scas
add
push
fdivrl
mov
fidivrs
movsl
aad
mov
into
lret
and
mov
lea
mov
movsl
mov
fwait
xlat
les
call
cmp
sarb
mov
imul
add
lret
subb
not
or
sbb
adc
test
cmp
cmpsb
and
cld
mov
stos
inc
mov
data16
decb
int
dec
or
push
pop
out
pop
push
cmpsb
stos
mov
adc
cmpsb
js
mov
xchg
and
test
and
mov
into
and
sti
push
push
jmp
loopne
dec
inc
or
js
sub
out
or
mov
loop
fldt
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
lret
test
jge
popa
rcrb
xor
scas
rcrb
sbb
mov
push
add
outsb
cmp
push
in
out
movsb
addr16
cmp
shrb
inc
inc
jno
mov
test
xchg
lods
push
add
push
jno
fmul
jo
test
sarl
dec
sub
lods
ficoms
stc
mov
push
or
mov
pop
je
xchg
and
jnp
xor
sub
push
stc
pop
jns
enter
loop
jbe
inc
xchg
sti
outsl
xor
cmp
cltd
cld
cld
jo
push
cltd
push
fisttpll
enter
mov
dec
dec
fnstcw
push
add
jl
push
in
ss
std
sbb
gs
or
in
test
lea
push
jp
jmp
pushf
sbb
mov
or
jns
lahf
hlt
jp
cmp
decl
jmp
push
ljmp
pop
push
jb
mov
les
pop
mov
push
movsl
pop
mov
mov
sub
add
ljmp
jecxz
mov
jmp
jecxz
andps
xor
leave
sbb
inc
leave
jmp
and
sbbl
inc
add
out
das
stos
in
mov
mov
adc
sub
mov
xor
or
aad
inc
inc
fdivl
push
adc
int
adc
jmp
sub
and
shrb
push
cmp
inc
sbb
leave
rolb
xor
adc
pop
jmp
aad
pop
cmc
add
insb
fmuls
ret
fcompl
lods
mov
cmp
mov
add
fs
add
stc
inc
xor
push
lcall
and
hlt
xor
cld
add
lock
cmovns
cwtl
sbb
cli
negl
push
jmp
data16
lret
imul
cmp
notb
add
ret
mov
add
mov
jmp
xchg
lcall
mov
fidivrs
inc
dec
or
js
imul
movsl
dec
push
inc
scas
pusha
jnp
add
mov
cmp
push
mov
aad
je
lahf
sub
in
popa
test
xchg
or
mov
pop
sbb
cmpsl
stc
cmc
mov
push
fwait
push
pop
decl
icebp
lods
popf
mov
js,pn
jno
and
add
pop
jmp
arpl
addr16
pusha
dec
xchg
movsb
call
or
xchg
pop
lcall
jno
out
rcrl
daa
mov
clc
mov
jnp
ret
xor
xor
and
int
ljmp
test
mov
mov
filds
jbe
mov
cwtl
mov
xchg
sbb
ljmp
or
bound
adc
mov
sbb
add
test
xchg
or
jbe
fstl
add
outsb
inc
push
sbb
xchg
nop
sarb
filds
in
incb
leave
inc
sbb
lret
mov
loopne
adc
imul
and
rcr
adc
cwtl
adc
stc
dec
push
es
in
jae
add
or
add
lods
leave
cvtdq2ps
xchg
rclb
scas
jmp
jmp
xchg
leave
imul
daa
inc
sub
rclb
leave
lods
push
lods
andb
gs
out
cmp
mov
dec
mov
cs
jno
xor
pop
xor
mov
das
dec
sub
cmp
ljmp
fidivs
scas
mov
aad
in
mov
lds
add
stos
cmp
cli
not
std
addr16
mov
decb
pop
lock
loop
fisttps
xor
xchg
mul
xchg
xor
jno
mov
inc
das
mov
mov
js
or
jmp
data16
js
adc
stos
push
mov
push
repz
mov
mov
pushf
ds
xchg
test
add
push
push
mov
mov
shrb
popa
sub
test
dec
daa
imul
fstl
and
sbb
pop
aas
mov
add
es
xor
xor
inc
cmovge
adc
popf
dec
dec
mov
push
mov
push
dec
inc
push
jb
sub
push
hlt
sub
mov
cmp
mov
mov
outsl
mov
push
and
xchg
das
popa
sub
xorl
je
sbb
insl
sti
sub
lock
add
jns
fwait
pop
in
add
es
movsl
iret
cmp
pop
loopne
cwtl
dec
insb
les
sub
loop
adc
cmc
ficompl
dec
mov
mov
ror
mov
jp
and
rcl
lcall
aaa
jp
cmp
mov
aas
and
mov
in
andl
cld
sbb
jb
sti
mov
fs
push
or
mov
dec
aas
cwtl
movsl
into
adc
das
or
sbb
or
adc
pop
cmp
push
mov
ja
sarl
mul
aad
push
xchg
mov
in
ret
sahf
cmpsb
iret
call
mov
xchg
add
sub
xor
insb
mov
xor
sub
loope
mov
enter
jmp
rorb
loopne
mov
dec
into
sub
orb
imull
fisttps
pop
cwtl
mov
sbb
out
je
iret
mov
xlat
push
sbb
dec
imul
inc
insl
inc
push
and
xchg
sub
bswap
shrb
push
jp
and
stos
repz
mov
sbb
mov
pop
inc
es
xchg
adc
cmp
imul
jns
xor
outsl
jno
call
mov
lret
jmp
incl
mov
subl
sub
call
mov
and
sbb
mov
dec
lret
ljmp
or
adc
adcl
push
jecxz
inc
pusha
fistpll
std
lds
mov
popa
pop
mov
andb
sbb
test
lods
mov
dec
add
push
leave
mov
sub
in
loop
int
xor
cld
mov
cmp
mov
jno
aaa
shlb
jg
rol
hlt
add
pop
popa
dec
bts
push
fld
mov
call
sbbb
dec
movsl
fwait
xchg
sbb
insb
inc
lret
popa
rcrl
je
loope
mov
or
push
xchg
push
cs
push
cmp
int3
push
or
loop
fwait
xchg
cmp
cmp
cmp
fs
adc
fldl2e
jle
cld
dec
mov
or
jo
ja
xchg
mov
cli
or
cmpl
out
push
ret
sbb
inc
shlb
push
push
push
popa
ret
xor
mov
pop
mov
pop
adc
xchg
push
jmp
mov
pop
push
mov
stc
fwait
mov
test
seta
paddd
jne
xchg
adc
fimull
pop
xchg
lret
fsts
popa
xor
sub
mov
movsb
cmp
jl
add
ds
test
push
in
cmp
out
test
inc
lea
rol
xchg
bound
int3
mov
daa
xchg
pop
int
adc
xchg
xlat
jns
js
or
cli
push
cmp
ss
flds
dec
stos
xchg
mov
lods
inc
loop
imul
fs
push
cs
imul
jno
push
negl
fwait
out
lret
enter
push
cmp
es
cli
and
inc
sahf
sbb
inc
mov
rorb
call
inc
lcall
cmp
fs
cltd
std
outsb
sub
add
or
test
mov
sahf
addr16
cmp
pop
xchg
cmp
subl
mov
into
adc
fcomps
or
pushf
fimull
and
add
out
and
and
nop
enter
cltd
in
lds
lret
jecxz
sti
lods
shll
fdivp
sbb
arpl
mov
repnz
jnp
xor
mov
lods
mov
and
jmp
icebp
push
inc
hlt
mov
inc
mov
outsb
fisubl
xchg
nop
sub
out
add
inc
sbb
scas
pop
sarl
mov
lahf
lcall
sti
mov
stc
out
dec
mov
sbb
push
shr
enter
out
xor
pop
xchg
arpl
sbb
xchg
adc
push
pop
int3
and
and
mov
adc
mov
push
and
mov
push
test
pop
sbbl
jo
sbb
jns
movsb
dec
arpl
ss
dec
dec
mov
mov
pusha
and
insl
fisubrs
pop
dec
jnp
adc
pop
pushl
movsl
cmp
pop
hlt
fidivrs
lahf
cmpsl
in
jmp
stc
mov
cltd
loope
aad
cmp
xchg
lret
es
fnsave
mov
les
lea
stos
rcrl
push
lea
pop
pushf
mov
lods
pop
fbld
cmp
mov
xchg
and
cmpl
ret
loope
pop
push
icebp
sahf
pop
dec
mov
adc
cltd
les
loopne
push
movsb
das
jg
and
int3
out
lods
imul
aaa
divb
in
dec
cmpsl
sbb
aad
call
es
in
jmp
and
xchg
inc
jae
fidivs
mov
jp
and
cs
cmpsl
aam
sbb
aad
pop
adc
mov
cmpsb
call
cmc
test
jae
je
inc
mov
xor
pop
and
lods
add
add
or
xor
movhps
cmpsb
test
lahf
lcall
dec
push
pusha
loopne
test
add
dec
subb
rorl
and
cwtl
sbb
fwait
sub
mov
imul
test
xor
adc
pop
mov
mov
push
mov
test
repz
ljmp
rol
stos
imul
loop
pop
mov
sub
lea
in
pop
xor
push
sbb
xor
mov
mov
pop
push
int3
jnp
add
and
je
and
fs
aas
into
cmpsl
xor
das
xchg
mov
mov
mov
xchg
lret
lret
clc
pop
xchg
data16
outsb
fnsave
xchg
pushf
sbb
test
jbe
scas
rcll
movsl
mov
outsb
lods
dec
pop
scas
mov
inc
xor
inc
fnstenv
push
clc
jl
mov
loopne
sbb
push
mov
clc
ja
or
pop
xchg
shlb
mov
xchg
andb
fs
rcll
stos
dec
push
jle
xchg
cwtl
xlat
push
sbb
hlt
sbb
or
and
dec
addr16
push
and
nop
cmp
insl
and
sbb
lret
imul
aam
push
cld
push
and
sub
flds
sbb
xor
aad
aam
mov
cmp
dec
fcmove
lahf
xchg
xchg
lods
push
dec
jae
leave
pop
and
lcall
adc
mov
scas
inc
popa
repz
bnd
stos
pop
lds
push
xlat
lret
movsb
aaa
sbb
push
call
inc
sub
cmp
dec
xchg
mov
cwtl
adc
push
cwtl
sahf
jecxz
in
dec
jb
sbb
or
inc
scas
hlt
bound
jp
test
testb
sbbb
loop
adc
fistps
inc
dec
or
sti
fscale
aad
in
dec
ljmp
add
mov
xchg
push
repnz
push
in
test
jmp
pop
fcomps
test
inc
dec
enter
int
xor
push
das
jae
loopne
xchg
xor
and
jb
cmp
sub
dec
fs
loopne
or
add
xor
outsb
push
or
inc
ss
rclb
neg
bound
in
xor
xor
jns
dec
cli
cmpsb
scas
ss
arpl
cli
dec
enter
mov
mov
xor
icebp
mov
pop
add
dec
sbb
mov
insb
mov
dec
movsl
jnp
in
xchg
repnz
icebp
mov
lods
in
adc
movsl
call
out
clc
imul
cmc
mov
or
rcr
fisttps
sub
cmp
hlt
subb
adcb
das
add
xchg
dec
pusha
inc
lods
aad
mov
ss
outsl
out
jb
mov
scas
cltd
jg
pop
mov
mov
sub
arpl
flds
xchg
sub
and
in
dec
fsts
or
xor
push
add
dec
fcmovu
xchg
lods
dec
push
test
cmp
ljmp
dec
jge
inc
mov
icebp
fisttps
stos
lret
mov
shl
in
je
lods
int
dec
add
jb
dec
movsb
dec
xchg
outsb
mov
ret
inc
mov
mov
aaa
cs
pop
jne
ror
push
test
xor
cmpsl
hlt
rorb
sub
aaa
inc
ljmp
sbb
mov
xchg
in
adc
xchg
call
cli
dec
pop
icebp
movsl
aad
data16
pop
sbb
dec
push
xor
cwtl
pop
cmpsb
xchg
inc
xrelease
movsl
scas
pop
mov
mov
in
sbb
sbb
cld
stos
jno
imul
daa
iret
adc
pop
clc
bound
mov
or
dec
lret
cli
adc
dec
adc
inc
outsb
in
mov
jmp
push
xchg
pop
mov
push
scas
inc
mov
movsb
incb
sbb
push
je
in
dec
cmp
shrb
add
adc
repz
fnstsw
adc
sbb
cmp
push
jo
push
in
mov
gs
jo
movsl
cmp
and
fs
fnstsw
sbb
imul
add
sbb
jae
sbb
enter
fidivrl
loopne
or
fnstcw
mov
push
clc
les
sahf
cwtl
out
pop
or
or
ljmp
add
xorb
inc
les
add
jno
jbe
jae
sub
sub
sbb
mov
xchg
lret
out
mov
dec
jle
sahf
clc
xchg
repnz
insl
xor
mov
addr16
std
loop
mov
mov
push
mov
imul
inc
in
mov
je
sti
das
repz
es
inc
dec
sbb
loop
cmp
sub
popl
fldcw
out
cltd
leave
lret
fstl
xchg
dec
pop
test
sahf
jo
ljmp
rorl
orl
mov
pop
inc
stos
push
xchg
and
pop
sbb
dec
mov
int3
mov
adc
sub
sbb
ljmp
test
sarl
adc
shl
in
js
dec
mov
mov
sub
out
pop
test
jae
add
fcmovbe
add
mov
das
add
mov
mov
mov
lahf
and
inc
jge
repnz
call
gs
pushl
popf
pusha
mov
rol
shl
push
xchg
lahf
inc
das
jne
shl
pop
data16
sub
out
les
mov
sub
mov
insl
jnp
cmp
aad
cmp
imul
mov
in
mov
shl
repnz
cmpsl
js
lea
loopne
dec
ret
insl
rolb
inc
push
inc
bound
cmpsl
lods
pop
or
je
lcall
aad
dec
in
cmc
sub
mov
or
push
pop
adc
and
jle
dec
pop
dec
shlb
mov
push
addr16
leave
add
xchg
push
popa
jb
and
sub
xchg
inc
mov
add
pop
or
jge
mov
push
dec
outsl
insl
push
mov
int
xor
sub
push
mov
pusha
mov
shr
std
add
in
daa
cli
divb
stos
rcrl
xchg
andb
xchg
push
push
cmp
hlt
jbe
push
fs
bound
mov
xchg
mov
shll
xchg
push
test
jmp
push
jnp
sahf
inc
jnp
in
mov
mov
xchg
gs
push
andl
les
leave
es
jp
cwtl
sbb
stc
mov
pop
cmp
lock
sbb
lds
lock
ss
add
jnp
js
ljmp
lods
icebp
xchg
mov
or
out
cltd
push
fmul
decl
dec
dec
adc
daa
mov
repz
and
mov
jo
ss
and
pop
lcall
adc
add
das
repz
xchg
mov
fs
dec
lock
xchg
mov
cmp
pop
and
pop
xor
out
outsl
and
repz
movsb
cli
cmp
mov
je
push
cmpsb
xchg
aad
dec
aad
lods
xor
movsl
adc
jmp
enter
inc
pop
sbb
fldl
shl
mov
mov
xchg
xchg
repz
push
rclb
push
mov
mov
mov
sub
cli
cmpsl
scas
lds
addr16
lret
dec
rorb
sbb
shl
xchg
ljmp
sub
xchg
sub
add
aas
lahf
mov
cmp
adcb
ret
jmp
jbe
mov
push
repz
push
rcrl
je
adc
push
lcall
sbb
push
jecxz
push
xchg
je
jge
in
push
scas
movsb
shrb
xchg
std
push
ja
mov
repnz
inc
mov
lret
push
xchg
sbb
scas
mov
testb
adc
fisubrs
es
cli
mov
aam
mov
adc
sti
ret
das
push
movsl
inc
and
add
xor
inc
inc
aas
ret
and
dec
and
push
hlt
cmp
in
inc
mov
addb
sub
mov
adc
push
push
lret
push
cmpsb
add
push
inc
inc
pop
pushf
mov
mov
fidivrl
stos
movsb
xchg
in
fnstenv
fwait
cmp
pop
and
push
sub
pop
and
decl
push
push
and
scas
inc
fisttpll
inc
jl
loop
mov
test
incl
mov
add
outsl
or
sbb
and
aas
ljmp
les
cs
call
mov
movsl
or
lds
inc
decl
and
rcrb
sbb
addr16
sbb
pop
lock
jecxz
cli
sahf
repz
in
and
pop
outsl
clc
pop
out
ljmp
mov
sbb
and
sbb
loope
push
jne
fdiv
xchg
mov
pop
les
loope
and
or
mov
ror
push
xlat
fyl2x
mov
jno
and
cmp
movsl
in
xor
cmpsb
push
lods
or
pop
jmp
imul
cmp
and
popa
pop
sbb
dec
cmp
inc
cmpsb
ret
sbb
pop
insb
push
or
push
pop
stc
repz
fistpll
cltd
pop
mov
mov
jae
mov
xchg
mov
mov
mov
rclb
aad
gs
pusha
sub
inc
mov
lods
and
cld
cmpsb
cld
mov
lods
fdivrs
int3
cmp
mov
int
xchg
in
aas
cmp
add
aaa
adc
cld
loop
cs
ja
pop
push
clc
push
stc
cmpsb
movsl
test
push
in
cmovs
arpl
sub
pop
adc
dec
dec
out
sub
ret
mov
add
xorl
iretw
and
sbb
sbb
mov
mov
call
push
scas
xor
out
es
ds
sbb
pushfw
cmp
xchg
xor
xchg
and
cmpsb
test
es
inc
adc
push
push
xchg
mov
aam
inc
pop
adc
test
push
pop
sub
mov
test
popf
cli
leave
test
pop
and
mov
sub
jle
lcall
sarl
ljmp
outsb
inc
fnstcw
int3
out
call
adc
sbb
push
shll
test
cmp
popa
fdivrs
stc
leave
out
das
hlt
sbb
inc
pushf
cmc
movsb
xchg
mov
icebp
loop
lods
xorb
dec
fidivs
into
shrl
clc
jp
sahf
repnz
fsubrl
push
popf
dec
or
pop
test
iret
mov
cmp
rcll
jns
push
in
jns
add
adcl
loope
rclb
data16
leave
or
dec
addb
mov
sbb
cmp
mov
test
shrb
sbb
jns
mov
mov
inc
fisttps
sahf
mov
pop
add
rcrl
xor
into
lods
fmull
xchg
pop
gs
lahf
adc
cld
lods
sub
testb
jg,pn
std
lods
repz
in
xor
mov
int3
arpl
or
popl
adc
jno
fsub
cmp
cmp
push
jp
and
insb
ja
pop
cmp
xor
adc
ret
insl
repnz
or
leave
bound
dec
jns
negl
adc
in
push
jo
jmp
icebp
jl
popf
daa
sbb
and
sub
dec
es
and
pop
movsb
mov
pop
sahf
data16
shr
mov
mov
push
ja
adc
fiaddl
or
sbb
xchg
mov
insl
loope
test
test
lcall
jmp
pop
sub
cvtdq2ps
loopne
lea
lds
mov
in
shll
sub
mov
test
mov
mov
and
jbe
out
xor
and
cld
sub
gs
insl
out
das
mov
push
and
or
pop
or
sbb
dec
mov
call
xchg
or
xor
mov
loopne
fildll
fildll
jl
repz
xor
out
adc
test
loopne
push
fs
jno
or
scas
enter
jecxz
sbb
push
popa
out
imul
addl
imul
shll
loop
pop
pop
adc
add
imul
push
jge
adc
shrl
ret
subl
push
sub
push
fistpll
pop
mov
popa
mov
test
out
xchg
inc
repnz
scas
js,pt
sub
outsl
jecxz
out
push
cmpl
pop
pop
pop
shlb
mov
xchg
xor
mov
leave
cmc
mov
fimull
add
ret
pop
lds
xor
push
test
mov
jecxz
mov
insb
add
fwait
cmp
in
aam
or
test
shrl
jge
mov
and
aad
sbb
sahf
or
repz
add
sbbb
out
inc
inc
orb
sbb
xchg
ffree
dec
cs
mov
fld
mov
jmp
dec
ds
cmp
push
xchg
shrb
ja
cmp
daa
mov
mov
push
aas
adc
dec
fucomip
inc
outsb
sbb
mov
jns
xlat
packsswb
add
and
loop
aaa
or
push
fucomip
lahf
pushf
xor
negb
pop
inc
test
cli
and
js
ret
add
loop
shl
cwtl
aas
jno
dec
push
add
stc
lods
jne
dec
in
int3
sbb
sahf
cmp
mov
and
mov
lods
dec
sub
sbb
stos
test
lcall
and
dec
and
lcall
fnstcw
enter
insb
aad
jo
into
adc
cmp
scas
xor
mov
jne
add
add
fists
lods
or
rcrl
sbb
push
pusha
ljmp
push
pop
inc
mov
movsl
pop
or
nopl
mov
mov
fildl
scas
scas
add
es
arpl
xchg
mov
stos
mov
push
jns
sbb
xchg
pop
add
repnz
cwtl
mov
out
inc
loopne
sahf
flds
xor
mov
fsubrl
clc
cmp
test
cltd
scas
pushf
ficompl
iret
test
stc
sub
cmpsb
popa
dec
sahf
jle
mov
data16
clc
push
push
pusha
mov
subb
cld
sub
int3
add
xor
filds
xor
imul
sbb
arpl
jno
inc
pop
je
cltd
push
daa
xchg
add
mov
xchg
incl
setp
and
loope
int
mov
pop
ja
je
push
adc
lret
addb
pand
add
out
mov
jo
int
cli
cmp
push
adc
popl
cmpsb
shll
cmc
mov
mov
xchg
fcomps
ljmp
insl
inc
xchg
pusha
dec
out
add
icebp
jno
xchg
or
and
or
adc
in
jo
imul
and
adc
pusha
lahf
ficoml
jbe
inc
or
pop
clc
fcompl
std
unpckhps
mov
jbe
or
and
cmp
gs
mov
cs
mov
fstpl
nop
popl
pop
xor
fsubs
pop
mov
jns
xchg
mov
inc
fiadds
orl
pop
pushf
sub
fimull
mov
xchg
mov
stc
mov
inc
push
adc
sbbl
xchg
push
pop
xchg
cmpsl
daa
int
cmp
pop
pop
adc
in
icebp
adc
pop
pop
lds
out
push
mov
xor
xchg
jmp
push
pusha
cmpsb
sbb
dec
rolb
jl
sub
push
inc
aas
je
das
jo
mov
js
ljmp
fistpll
mov
add
dec
pop
and
jbe
cmp
mov
mov
clc
push
stos
dec
and
and
or
in
mov
nop
and
add
mov
mov
mov
mov
iret
push
imul
xor
enter
and
jl
dec
outsl
sbb
fsubl
ds
push
mov
mov
xor
cmp
sbb
in
cmp
cltd
cmp
or
add
gs
idivl
div
sub
fsubrl
mov
stos
out
inc
adc
movsl
add
add
push
sub
mov
inc
test
jmp
push
nop
pop
clc
lret
jbe
xor
mov
and
sbb
and
enter
mov
test
pushf
pusha
shll
cmpsb
sar
and
mov
outsb
dec
sbb
js
cs
sub
inc
pop
xlat
les
lret
les
popf
sbb
fadds
icebp
lods
jns
mov
push
js
in
push
ficompl
mov
push
in
out
push
or
notb
lock
nop
pop
mov
fnstsw
xchg
xor
mov
aas
xchg
mov
je
fwait
outsb
ljmp
add
jae
loope
fwait
xor
aad
mov
inc
cmc
mov
mov
or
je,pn
cmp
adc
imul
aad
push
xchg
xchg
mov
xor
xor
cwtl
test
sub
adc
mov
andb
lret
jmp
fstpl
popf
cmpl
lods
fidivrl
xor
pop
push
mov
imulb
loopne
and
or
mov
fimuls
push
dec
or
negl
ss
out
sbb
fmul
outsb
mov
mov
pop
mov
push
inc
mov
cwtl
scas
int3
push
push
xabort
xor
in
pop
stos
test
mov
paddusb
cld
inc
inc
and
sbb
cmp
sub
lock
imul
or
and
add
es
xchg
xorl
adc
test
mov
fsub
loope
mov
nop
mov
jns
push
mov
xchg
xor
daa
pushf
push
icebp
lods
and
and
insb
addr16
mov
xchg
jge
sub
jge
test
ret
dec
ds
leave
mov
int3
lea
insb
push
add
fcomip
ds
mov
add
movsb
mov
les
pop
cmp
jle
ret
cmp
pop
sbb
fptan
xor
mov
test
fnstsw
push
add
cli
cmp
insb
sub
push
mov
cmp
scas
adc
decl
xchg
sbb
xor
cwtl
sub
push
sbb
pop
loope
fidivrs
ror
movsl
cld
rcrl
inc
dec
fisttpl
iret
add
imul
out
fcmovnbe
jnp
push
push
xor
js
je
test
testb
shl
lds
mov
test
dec
in
into
out
pop
push
scas
dec
xor
xchg
jno
scas
mov
pop
arpl
mov
test
sbb
cli
inc
sahf
fwait
push
data16
xchg
sbb
addr16
fildl
lds
int
shll
stos
push
sbb
push
imul
sbb
test
into
enter
jmp
int3
pop
daa
jb
pop
add
fistpl
dec
out
sbb
aaa
sbb
imull
pusha
mov
mov
push
adc
jle
jne
push
lret
push
add
sarb
sbb
cmp
push
dec
mov
or
shrl
cld
jl
sarl
cs
dec
adcb
fisttpl
sbb
xchg
clc
imul
rcrb
mov
notb
dec
cpuid
shll
fwait
lret
add
pusha
jmp
out
ljmp
cltd
xchg
rolb
adcl
jp
dec
push
arpl
or
mov
in
xor
enter
lds
cmp
and
popa
popf
scas
mov
mov
sub
push
daa
or
dec
dec
xchg
push
std
xchg
popa
lahf
and
test
mov
mov
in
repnz
movsl
pop
push
std
mov
cwtl
cld
pop
repnz
xchg
or
jge
or
cmp
dec
mov
je
aam
mov
sbb
test
pop
pop
push
out
xlat
add
mov
cli
es
mov
push
lods
hlt
scas
jo
or
sbb
ret
negl
mov
push
cltd
add
mov
mov
ja
imull
push
shl
push
cmpsl
lods
mov
xchg
iret
xor
adc
pop
call
stc
cmp
imulb
es
xchg
fisubrl
icebp
pop
inc
out
ljmp
bound
sahf
add
push
pop
out
xor
movsb
repz
repnz
mov
dec
aam
fs
pop
aaa
cli
lcall
cmpsl
lds
je
pop
iret
mov
push
inc
cmp
xchg
dec
das
xchg
scas
shlb
ja
sahf
jb
cli
add
lret
testl
cmp
cmpsl
pop
or
pop
and
inc
sbb
mov
mov
insl
cmp
fsubl
in
inc
lods
das
rcrb
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
outsl
inc
push
popa
rcrb
test
cli
xchg
out
dec
mov
fbstp
jne
lea
jns
adc
rcrl
sbb
gs
xchg
xchg
popa
int3
inc
pop
pop
sbb
shrl
loopne
jecxz
sub
scas
fwait
inc
gs
roll
mov
add
shlb
sbb
inc
jns
mov
xor
repnz
in
add
push
mov
clc
mov
push
cmpsl
lret
push
dec
xchg
leave
shlb
lret
xor
stos
int
cmc
sub
add
in
dec
test
clc
adc
sub
jp
jg
daa
outsb
pop
jnp
mov
ret
outsb
push
inc
mov
pop
xchg
pop
xchg
inc
stos
push
daa
es
nop
scas
das
mov
inc
xor
pop
dec
pop
shrb
jg
daa
negb
mov
cmpb
mov
add
sbb
dec
xor
rcrb
sarl
pop
pop
or
mov
and
sub
xchg
loop
push
into
xchg
pop
mov
xchg
mov
pop
cwtl
xor
fnstenv
pusha
pop
stos
xchg
aaa
ss
sub
xchg
xor
cwtl
fxch
and
mov
divl
dec
mov
pop
inc
imul
mov
gs
mov
cmp
pop
cmp
stos
xchg
sub
xchg
mov
push
jae
out
into
jp
subb
lret
fs
je
inc
outsb
mov
into
adc
sub
outsb
das
test
adc
in
lods
push
sahf
sarb
mov
clc
aaa
and
add
xor
jae
aad
xor
jg
mov
xchg
push
shll
mov
cmc
cmp
loope
div
add
movsl
test
repnz
inc
shlb
lahf
mov
ret
loopne
lahf
inc
push
inc
out
clc
addr16
xor
push
ja
loop
push
push
mov
popf
jg
incl
das
add
xor
out
and
stc
jg
iret
add
sahf
or
and
in
inc
out
cmp
arpl
outsl
out
push
add
mov
pusha
sub
mov
pop
inc
shl
xor
loopne
scas
ficomps
sub
out
and
cmpsl
sub
add
dec
les
mov
cmp
xchg
dec
cmc
dec
out
je
hlt
jb
xchg
jnp
jbe
repz
std
enter
stc
jecxz
mov
ret
cli
cmpb
mov
sti
add
repnz
adc
and
je
in
mov
fldt
daa
pop
push
xor
leave
mov
das
dec
push
testl
push
cmp
adc
movsl
dec
add
cld
sbb
and
mov
aam
mov
ror
inc
add
nop
jge
ljmp
jge
leave
mov
loope
mov
push
aas
inc
in
xlat
and
scas
inc
ror
rcll
popa
xchg
js
gs
add
imul
cmp
iret
adcb
cmp
cld
pop
cmp
adc
in
stos
dec
sub
jp
xchg
repnz
aaa
jb
gs
push
cmp
cmpsl
add
mov
push
push
mov
or
mov
fs
sarb
adc
loop
pop
addl
ret
adc
xchg
jae
inc
xor
mov
cmp
mov
data16
fbstp
popf
imul
jg
shlb
pop
dec
push
outsl
andl
mov
cmp
mov
lods
xor
or
outsl
or
sbb
dec
push
push
jns
xor
xlat
fs
cwtl
push
loop
jle
sbb
jne
das
dec
lret
inc
imul
dec
stos
subb
mov
add
xor
das
outsl
mov
shll
daa
dec
test
ja
pop
cwtl
jmp
jbe
mov
add
adc
jae
gs
mov
fisttps
fcomps
shl
fisttpl
xchg
sub
pop
in
vpunpcklwd
jmp
bound
and
cs
mov
imul
rol
dec
jne
and
es
sbb
sub
and
xor
dec
dec
lods
mov
out
scas
mov
sbb
inc
or
and
push
popa
mov
outsl
adc
dec
and
stos
sbb
add
jae
pop
sbb
xchg
ficoms
sbb
pop
dec
and
mov
sbb
out
stos
ss
sbb
jmp
faddl
inc
aas
pop
movsb
loopne
push
mov
jmp
xchg
aaa
and
push
pop
clc
mov
jbe
push
push
jbe
cmp
inc
push
jno
dec
gs
cli
fnstcw
mov
mov
adc
jae
push
shl
cmpb
add
stos
dec
jb
shl
imul
lahf
fcomps
and
mov
pop
enter
pop
daa
pop
jg
dec
mov
cs
cmpb
dec
add
push
adc
cld
mov
lds
mov
jg
test
inc
pop
outsl
les
jmp
mov
insl
mov
lret
shrb
or
dec
xchg
mov
jno
dec
jg
and
in
jmp
pop
repz
fisubs
arpl
inc
jecxz
lret
nop
xchg
lea
int
xchg
ljmp
xchg
loop
ret
xchg
xor
jl
cwtl
fsubrs
out
cmp
pop
enter
cltd
push
loope
bound
sahf
stc
or
adc
lods
lcall
sub
scas
jb
push
addr16
cmp
xlat
imul
out
push
mov
inc
pop
in
sbb
sbb
xchg
push
mov
xor
inc
mov
inc
imul
shll
mov
ds
mov
mov
sub
mov
insl
dec
movsb
cli
adc
scas
icebp
test
push
inc
mov
icebp
lods
inc
rclb
dec
xlat
arpl
push
lods
jo
lcall
inc
repnz
out
push
out
xchg
sbb
rolb
sbb
xchg
push
cmp
std
xor
icebp
jecxz
cmpsb
test
imul
xor
jno
push
das
out
out
lds
subl
sbb
pop
pusha
or
mulps
lahf
rdmsr
cmp
lds
and
cld
out
sbb
dec
ror
out
je
test
pop
or
pop
aas
stc
adc
mov
daa
xchg
dec
add
dec
movsb
repnz
imul
mov
loop
jnp
push
or
icebp
call
pusha
inc
lret
inc
hlt
stos
les
gs
in
lcall
mov
insl
jne
fidivs
call
enter
ja
mov
mov
xchg
mov
sbb
hlt
jbe
mov
mov
lods
or
imul
and
loop
mov
cmp
xchg
movl
dec
incl
call
dec
inc
fyl2xp1
and
test
cmp
add
pop
stos
push
lds
push
adc
add
sub
enter
adc
notb
push
aas
lahf
repnz
mov
cmp
push
push
and
stc
shrb
ja
cmp
subl
xchg
fldcw
rclb
jg
cmp
xor
not
in
cmp
or
aas
sbb
test
test
mov
movsb
lock
xchg
inc
loopne
sub
pop
sub
mov
cmp
icebp
inc
ja
push
decl
sub
aam
aaa
sub
je
mov
pop
add
xchg
es
stos
mov
in
insl
jne
stos
mov
repnz
sub
cmpb
lods
je
bound
cltd
pop
jp
inc
fstp
jg
sti
mov
xchg
ret
or
push
cmpsb
adc
jo
xor
call
shrl
outsl
or
popa
sbb
pop
cs
aas
sub
pop
pop
sbb
mov
ret
fnstcw
or
sub
loope
xchg
dec
or
mov
mov
push
sub
cld
mov
stos
sub
or
mov
lcall
add
ret
lret
or
scas
inc
jmp
rolb
arpl
add
js,pt
scas
add
push
repz
fmull
ds
popa
push
fwait
add
sub
push
or
sub
push
inc
cmp
sub
or
aad
sbb
test
xor
pop
fsub
jg
sub
vsqrtsd
pop
jle
test
lcall
push
xor
jmp
push
sbb
out
xchg
repnz
dec
lea
jbe
test
dec
jg,pt
add
jbe
insb
sub
and
scas
inc
sti
xor
stc
inc
dec
mov
test
inc
jle
sbb
pop
call
sarl
add
mov
imul
out
out
iret
pop
aaa
push
ret
inc
out
call
xor
scas
movzwl
repz
fadd
jmp
xchg
jbe
mov
mov
pop
cmpsl
ror
fldl
xor
push
cmpsl
test
cwtl
cmp
xor
iret
ja
mov
mov
xor
xor
xor
jo
mov
lret
pop
repnz
mov
xchg
shlb
adc
sbb
aas
out
std
inc
xorb
dec
addr16
add
fs
int
xor
aad
jg
dec
push
cmp
into
adc
or
hlt
imul
hlt
pop
and
xor
jg
inc
pcmpeqd
addb
push
les
cmp
insl
inc
jne
xchg
aad
sahf
jge
cmpsl
jns
mov
dec
and
shlb
push
inc
pop
mov
in
add
push
pop
insl
bsr
xchg
pop
add
cmp
and
filds
int3
mov
and
push
push
inc
lret
cmp
stos
xor
jp
cwtl
push
scas
sbbl
mov
pop
jne
lcall
dec
add
popa
xchg
sbb
push
dec
cmp
aam
aas
sbb
je
and
mov
jns
cwtl
add
cwtl
push
sub
ljmp
xchg
out
lea
pop
jo
push
cltd
stos
xchg
jmp
into
mov
mov
lret
imul
xlat
mov
imul
inc
imul
imul
ja
mov
pop
loop
jg
push
mov
stc
cmp
rcrb
addr16
xor
ja
fcmovne
in
jno
jnp
lods
hlt
push
sbb
popa
mov
mov
mov
loope
stos
sub
sbb
aas
mov
rorl
or
mov
out
mov
jp
adc
adc
data16
sub
cwtl
jp
mov
sbb
popf
call
add
popa
dec
mov
sahf
call
xorl
add
xor
popf
mov
stc
insl
xchg
xchg
aaa
push
rcrb
push
mov
and
jns
js
push
push
insl
call
scas
push
xor
fnstenv
xor
mov
add
out
cmp
sbb
push
js
mov
lods
adc
xlat
popa
daa
and
cmc
nop
js
push
js
or
iret
leave
push
pop
xor
into
sahf
add
mov
push
or
pop
dec
jo
xchg
sub
mov
ret
add
fcmove
push
fnsave
adc
into
xor
inc
jle
aas
mov
sbb
sarb
out
stc
fmul
cmp
jmp
jnp
sub
out
shrb
lods
dec
or
inc
xchg
xor
ficoms
adc
ja
mov
cli
leave
push
js
inc
cs
mov
mov
in
pop
mov
xor
xchg
mov
pop
xchg
dec
outsl
add
push
js
cmp
xchg
xlat
or
mov
scas
sbb
inc
out
arpl
and
test
and
xor
out
jge
jnp
sbb
push
stos
xor
mov
leave
loop
aad
adc
mov
dec
and
xchg
mov
in
lods
inc
sbb
xchg
les
cmpsb
sbb
pop
mov
test
insb
fs
xchg
push
ljmp
inc
ret
and
mov
or
aas
xor
and
pop
movsl
int3
scas
xchg
xor
adc
xchg
or
inc
shr
sub
jmp
ja
imul
sbb
movsb
mov
push
add
cmp
daa
xor
jmp
mov
gs
fcomi
fnclex
int
roll
out
lret
dec
stos
imul
cmp
xor
xchg
xchg
into
inc
lret
sarb
cmp
cmp
adc
xlat
inc
push
fcmovne
dec
scas
jmp
mov
xlat
inc
call
shr
dec
dec
stos
into
insb
xchg
addr16
ror
into
cmp
shr
inc
adc
notb
push
xor
xchg
fisttpll
and
adcl
jp
xchg
cmp
in
sti
stos
or
jns
push
enter
in
cmpsl
rcrb
inc
imull
negl
int3
cmp
inc
ret
andb
icebp
outsb
inc
xchg
popa
push
push
adc
push
and
jne
test
outsb
pop
dec
push
and
add
cs
sbb
ljmp
lcall
jg
fucomi
dec
repnz
jbe
sbb
rcr
sub
jne
inc
sbb
cmp
xlat
mov
and
cmp
ret
mov
iret
mov
jecxz
push
dec
adc
fisubrl
pusha
and
fcmovu
ficomps
pop
jbe
mov
adc
cmp
push
or
mov
leave
arpl
lds
cmp
fdivrl
es
jbe
pop
loop
inc
test
push
addb
psubq
ljmp
ret
sbb
enter
pop
sub
cli
inc
mov
cmp
lret
sbb
leave
cmpsb
inc
imul
xchg
adc
mov
js
xrelease
in
adc
lret
sar
in
inc
jg
and
mov
arpl
ja
cmpsb
rclb
loop
sbb
sub
jae
sahf
iret
xorb
mov
xchg
mov
adcl
push
cmp
cmpl
cwtl
and
movsb
in
inc
or
pusha
or
imul
add
stc
fdivrl
mov
push
jecxz
add
andl
jbe
je
mov
xchg
jecxz
iret
pushf
sahf
pop
push
popa
popl
cltd
loopne,pt
adcl
sarb
mov
cltd
xchg
push
addr16
push
cltd
xchg
cmp
inc
xchg
inc
dec
sysret
das
xchg
xorb
cmp
pop
jb
sub
lea
dec
bound
stos
and
jge
dec
xchg
xor
push
xor
mov
jmp
push
or
sub
orl
pop
cwtl
ljmp
outsl
insl
and
sahf
inc
bound
ljmp
in
orl
jno
sbb
mov
jp
push
mov
mov
repnz
ds
push
scas
test
pop
sub
adc
popa
mov
ja
add
mov
repz
jg
cmp
lods
int
xchg
outsl
loopne
cs
fisubs
mov
mov
rorl
lods
rcrb
jecxz
cmp
lahf
inc
push
pop
sbb
add
popa
jb
mov
ja
popa
aad
inc
cmp
xchg
cvtps2pd
cli
push
mov
ja
and
adc
es
push
ret
mov
hlt
ds
jmp
fdivrl
push
mov
movsb
push
clc
cmpsb
mov
add
lret
mov
dec
lcall
fs
sub
stos
jge
xchg
push
or
movaps
pop
mov
popa
sahf
xchg
lcall
loopne
mov
push
daa
jbe
pop
iret
cmp
mov
out
pop
push
addr16
jg
fcoml
adc
add
lahf
cwtl
out
xchg
dec
je
into
mov
fstps
adc
out
leave
xchg
adc
mov
ljmp
pcmpgtb
jbe
std
pop
mov
sbb
inc
clc
jns
cmp
ds
loope
orb
and
test
fmull
popa
clc
rcll
cltd
js
imul
cmp
ds
shrb
out
push
test
adc
loop
insb
mov
push
movsb
or
inc
mov
lds
push
lds
add
inc
mov
imul
mov
adcb
jmp
into
push
ss
add
fistpll
mov
cli
pop
scas
in
adc
divb
inc
test
push
call
popa
pop
dec
mov
dec
popa
pop
xor
mov
addr16
pop
inc
rclb
adc
adc
adc
in
xor
push
fidivs
aam
xchg
sub
push
std
adc
jle
sub
add
mov
mov
lahf
or
lret
lret
push
lret
cld
push
out
popa
jecxz
lea
sti
sarb
popa
xchg
jno
mov
and
sub
bound
pop
dec
test
add
push
pusha
fs
cmp
sbb
ficoml
pop
mov
dec
pushf
or
fsqrt
xchg
popa
test
int
inc
mov
sbb
addr16
xchg
aas
paddq
or
sbb
lahf
inc
scas
dec
dec
and
fldl
jnp
jecxz
push
gs
ficoml
mov
imul
data16
mov
pop
or
pop
fsubl
mov
or
jne
pusha
add
outsb
insl
lock
add
push
std
leave
aaa
mov
call
mov
repz
popa
jmp
aaa
mov
pop
jae
outsb
xchg
inc
sub
mov
lcall
xchg
push
push
mov
lahf
jne
imul
or
orb
rorl
push
inc
mov
cmp
cmpsb
add
ja
test
repz
lea
jmp
lods
mov
in
cmovb
pop
repz
cmp
xor
arpl
popf
and
adcl
pop
ds
xor
ds
cmp
aam
es
pushf
cmc
jno
jne
jb
push
inc
adc
mov
push
xchg
inc
movsb
lret
daa
shll
dec
fcomi
push
xlat
sahf
pushf
shl
mov
and
int
sbb
adc
in
inc
stos
shll
lcall
jge
mov
dec
test
sub
sub
push
sub
mov
out
jbe
push
jne
pop
jne
cmpsb
mov
sbb
in
dec
xchg
stos
sub
push
and
scas
pop
movsl
testb
scas
xor
dec
add
ds
lcall
shl
arpl
cmp
es
inc
jbe
jp
adcb
out
pushf
cmp
push
je
lcall
add
dec
out
mov
mov
sarb
out
xor
mov
push
jmp
outsb
rclb
gs
pop
mov
loop
xor
jp
pop
xchg
arpl
mov
jl
pop
mov
loopne
aas
add
out
pusha
popl
xorb
mov
pop
sub
adc
loopne
xchg
into
and
xchg
xchg
ret
xor
popf
movsb
test
pop
pop
add
shl
xchg
xor
xchg
outsb
dec
push
xlat
cld
fmul
fsub
and
icebp
and
mov
or
lods
xchg
addr16
or
call
inc
adcb
xor
sbb
dec
sbb
cltd
or
sub
mov
into
loop
lods
mov
sbb
sub
rclb
jnp
aas
into
cmp
in
jmp
loope
sti
jnp
xor
test
icebp
xchg
fs
in
movsl
cmp
push
pop
inc
pusha
and
shrb
cmp
das
daa
test
sbb
xor
xor
js
dec
lea
sub
pusha
sbb
lret
roll
cld
sbb
imul
ret
and
sub
push
movsb
imul
imul
or
adc
insl
sub
pop
push
in
mov
out
loope
pop
add
mov
out
jns
sbb
loope
subl
lock
pop
and
xor
sti
jge
and
add
nop
imul
adc
fcmovu
call
adc
jmp
roll
stos
adc
cld
xorb
pop
mov
lret
cmpsb
mov
lea
in
sti
pop
in
add
push
pop
sub
dec
push
in
stos
xor
lret
push
and
lret
mov
jecxz
mov
sbb
repnz
dec
sar
xor
or
ret
add
bnd
xchg
sub
std
dec
adc
xchg
insl
cmp
adc
and
jae
mov
shrl
popf
fiaddl
pop
flds
push
movb
mov
hlt
scas
jmp
or
inc
sub
or
inc
mov
cmp
fsts
stos
imul
cmp
jns
sub
xor
stc
pop
jo
iret
aam
cld
imul
rolb
pop
shrl
mov
pop
pop
sbb
insl
ret
mov
sbb
jle
cwtl
add
jmp
aaa
lods
push
ss
add
or
inc
notl
test
movsb
adc
sub
sahf
insb
push
movsb
inc
jp
xchg
fbstp
dec
ficomps
xchg
sbb
xchg
inc
mov
fisubrl
test
adc
frstor
jb,pt
xor
fldl
pushf
lret
ds
push
mov
gs
jbe
mov
imulb
jmp
push
aaa
cmp
or
mov
dec
ficoml
pop
imul
xor
insl
inc
mov
rol
sbb
mov
sbb
cli
icebp
mov
in
cltd
xor
scas
mov
aam
dec
jnp
push
push
je
jae
lret
push
out
out
jle
je
imull
addr16
jbe
jmp
cs
xor
sbb
pop
jl
push
test
dec
call
cmc
fimuls
jbe
mov
jns
mov
sub
es
cli
inc
jg
or
sub
xor
and
loopne
inc
push
push
cltd
mov
sub
jns
jo
mov
jb
mov
ficoml
or
ja
jb
cwtl
mov
into
gs
rcl
aas
ja
xor
rclb
idiv
and
mulb
cmp
test
push
mov
movsb
mov
dec
insb
fwait
aam
loope
sbb
outsb
adc
inc
mov
add
mov
lea
scas
xchg
ret
std
mov
xlat
push
sub
stc
fwait
inc
mov
lcall
sbb
movsl
pop
fbld
xchg
sub
or
mov
stc
iret
clc
fxch
dec
daa
mov
ds
cmp
mov
inc
xchg
mov
leave
daa
scas
mov
add
mov
lods
xchg
js
dec
test
add
jmp
out
adc
lds
popa
and
mov
aam
rolb
ror
dec
aaa
lret
addb
mov
adc
out
adc
or
flds
jge
push
js
or
jne
and
nop
push
fsubr
add
std
int3
lret
push
fsubl
xor
fwait
pop
outsl
sbb
subl
cmp
test
mov
out
daa
or
leave
fsts
mov
cltd
mov
test
test
sbb
cltd
add
js
in
scas
fmul
stos
insb
imull
clc
fisubl
adc
pusha
xchg
or
xchg
sbb
xchg
and
jecxz
repnz
pop
pop
pop
scas
pop
insb
mov
pop
sarb
xor
ret
add
dec
cmp
cltd
inc
idivl
rclb
fsubs
cmpl
mov
push
pop
jb
jp
mov
cld
js
lahf
mov
out
xor
xchg
scas
add
scas
dec
mov
je
adc
xor
cltd
mov
push
jg
incb
in
inc
test
add
stos
data16
push
into
call
subb
ret
insb
pop
cmc
jne
push
jne
dec
push
leave
pop
jo
pop
fimull
and
pop
in
xor
std
loopne
scas
dec
mov
repnz
lahf
repnz
int3
dec
ret
das
cmp
bound
push
cmp
mov
dec
lret
xchg
ret
inc
pop
add
pusha
mov
std
popf
fidivs
sbb
push
dec
fnstenv
dec
scas
jns
push
inc
adc
jl
mov
pop
add
jae
sbb
daa
sub
scas
jnp
and
xchg
lcall
daa
insl
stos
cmp
add
or
mov
or
mov
cmc
nop
icebp
pusha
shlb
and
xor
repz
repnz
arpl
leave
xor
mov
push
in
imul
in
jl
mov
mov
stos
loopne
mov
jnp
xor
pushf
adc
inc
push
ds
mov
jbe
mov
cmp
addb
movsl
pop
std
lock
lcall
xor
gs
dec
xchg
stos
mov
cmc
fxch
imul
lock
test
push
and
jb
mulb
cmpsb
jmp
push
xchg
das
fwait
imul
and
js
xchg
addb
xor
daa
cs
push
sbb
es
shrd
and
in
sbb
cmp
mov
mov
aaa
or
sub
pop
mov
mov
or
bound
mov
aam
in
sub
aam
or
and
mov
xor
leave
xchg
jns
lock
pop
pop
imul
aad
mov
lret
lcall
scas
and
into
sbb
adc
cmp
xchg
cmpsb
mov
pop
mov
test
test
negb
push
push
jmp
adc
add
inc
adc
loope
cld
jle
out
and
mov
jge
jge
cwtl
jne
pop
push
sbb
push
ret
and
push
out
repz
xor
outsl
sub
jae
mov
out
push
xlat
int3
lcall
fstl
into
cld
adc
dec
enter
ror
fwait
mov
subl
xchg
enter
mov
jb
dec
jg
add
sbbl
stos
rcrb
pop
pop
push
ja
es
add
ficompl
pop
in
es
cmp
jl
mov
add
dec
hlt
sti
inc
xor
jg
aaa
mov
test
bound
insb
loopne
push
cmp
xchg
mov
push
pop
xchg
addr16
int3
pop
mov
mov
mov
stos
mov
lea
adc
test
shll
xchg
pop
add
jecxz
cld
lcall
mov
mov
mov
ret
inc
or
rorl
insb
fstps
inc
lods
arpl
ret
lea
cmp
pop
lcall
xor
mov
pop
and
jne
push
dec
xchg
cld
jl
xchg
pop
fstpl
or
sar
nopl
aad
sub
or
das
cmp
gs
subb
test
stos
cmp
sub
test
push
repnz
ja
cwtl
mov
sub
jecxz
mov
mov
push
cwtl
jge
mov
loopne
mov
mov
out
gs
adc
out
rorb
jge
push
jg
pop
sbb
mov
add
stos
fdivr
xchg
pop
scas
or
mov
or
subb
mov
or
inc
push
cs
fdivrs
outsl
mov
inc
push
mov
cmpsl
imul
ja
sbb
sar
sbb
adcl
idivb
cmc
mov
dec
sbb
and
xlat
fdivs
adc
orl
das
and
mov
mov
adc
push
push
sahf
in
pop
or
dec
add
clc
cmp
imul
adc
push
repz
push
add
pop
mov
dec
fisubs
mov
loope
into
dec
inc
dec
cmp
mov
outsb
sbb
mov
mov
lods
cmp
mov
fistpl
push
jge
dec
in
repnz
fcompl
push
xchg
mov
push
call
add
and
aad
pop
fcmove
test
out
in
dec
leave
cs
or
out
or
movsb
mov
add
adc
ret
mov
mov
pushf
dec
leave
sbb
add
mov
or
ss
pop
daa
push
mov
pop
mov
imul
inc
xor
and
arpl
loopne
cmp
cltd
outsb
sub
adc
mov
jo
adcl
imul
and
out
and
add
iret
into
jae
cmpsb
mov
sbb
pop
gs
das
test
fwait
xchg
xor
int
stos
jg
mov
cmp
insl
jnp
les
or
lock
inc
xchg
xor
in
dec
mov
jne
or
xchg
pop
std
inc
movsb
das
dec
jge
test
hlt
decb
cmp
and
aad
inc
sbb
inc
or
pop
lods
fisubs
movsb
adc
pusha
icebp
xor
scas
push
mov
lret
in
sbb
bound
outsb
ret
dec
dec
fcomi
mov
cmc
not
test
inc
popa
daa
ret
int3
xchg
xchg
mov
sub
sbb
or
dec
pop
sub
mov
xchg
adc
std
int
cwtl
sarb
inc
cmc
call
fsubrs
sub
faddl
push
test
arpl
fbstp
mov
scas
adc
fisttps
adc
mov
mov
call
inc
push
stos
popa
in
jbe
or
outsb
push
pop
test
mov
les
hlt
imul
and
jo
hlt
sub
stos
ret
call
das
dec
mov
rolb
lahf
sub
jb
test
rorl
and
testb
push
pushf
inc
fists
dec
test
ret
sub
ja
ret
push
and
idivl
clc
xchg
dec
ret
je
lods
cmpsl
push
lods
or
push
iret
outsl
clc
add
andl
xchg
ffreep
aam
ret
popf
into
stos
and
lea
testl
out
mov
xchg
or
mov
jp
jo
shlb
sbb
movsl
aas
ret
leave
aas
js
add
cltd
adc
leave
push
movsb
inc
or
bound
sbb
dec
dec
and
pop
xchg
out
pop
cli
daa
daa
mov
shlb
adc
and
hlt
xchg
daa
fwait
lds
xchg
mov
test
and
cmpsb
mov
pop
jge
aad
jmp
or
dec
jno
mov
divl
push
xor
or
rorl
scas
shr
and
add
loope
mov
test
mov
int3
fs
or
pop
popa
rcrb
push
adc
imul
add
xor
outsl
and
cld
sub
aaa
pop
std
jl
out
iret
shrl
fwait
or
scas
in
pop
and
mov
aad
pop
xor
sub
mov
fistpl
pop
xor
mov
or
rorb
inc
cmp
hlt
fwait
xor
daa
cmp
mov
sar
add
jg
jle
jmp
xchg
daa
xchg
lds
add
stc
pop
push
push
jo
mov
mov
jp
push
int
mov
sbb
insb
loope
repz
adc
in
jg
add
xor
cmp
jecxz
push
test
mov
push
sbb
mov
push
out
cmpsb
jae
dec
movsl
lods
mov
inc
int
push
pop
stos
in
mov
adc
dec
push
rcll
pop
sub
pop
jbe
push
popa
xchg
inc
adc
xchg
leave
sub
mov
dec
test
icebp
xchg
int
adcb
jnp
iret
dec
mov
leave
mov
enter
sub
sub
std
test
and
ficompl
add
push
cmp
inc
negb
hlt
inc
and
pop
insl
fbstp
pop
xor
jle
cmp
rcrl
test
mov
sbb
pop
push
jne
stc
adc
scas
fwait
mov
out
push
pop
jo
mov
add
aaa
cmpsl
push
mov
int
jmp
cs
mov
or
xchg
in
pop
mov
iret
xor
rolb
inc
int3
mov
sarb
inc
pushf
sbb
xor
outsb
pop
mov
adc
xor
call
xchg
lock
insl
mov
mov
push
lahf
daa
pop
rcll
ret
jae
call
mov
lcall
sti
mov
into
aam
popa
add
fsubrs
inc
mov
pop
incl
orl
mov
pushf
sbb
add
xchg
inc
dec
mov
test
stos
dec
int3
pusha
arpl
aaa
pushf
fadd
les
push
adc
pop
cmpsb
mov
sub
jno
xor
dec
xchg
rorb
scas
mov
adc
jl
xchg
mov
mov
popa
cltd
cltd
jo
push
sarl
sti
out
imul
pop
popfw
aas
push
scas
hlt
in
jnp
cmp
jle
or
jmp
scas
pusha
inc
push
push
test
sbb
sub
xor
xor
push
xor
adc
mov
test
aaa
mov
ret
push
jns
push
and
and
mov
sarl
out
cli
mov
ljmp
jg
lods
notb
mov
data16
cmp
xchg
outsl
xor
push
insb
in
jb
and
hlt
into
roll
outsl
xlat
mov
inc
cwtl
shlb
or
and
pop
test
xchg
mov
jge
test
and
fidivs
ljmp
push
ret
xor
loopne
dec
lret
fcmovnu
addr16
ret
pop
push
xor
cwtl
sub
mov
or
adc
pop
and
xchg
cli
pusha
cmp
in
paddb
arpl
fs
push
lahf
mov
fidivrl
add
aaa
jns
sbb
add
sbb
push
movb
fmul
fisttps
mov
pop
add
sub
ds
lock
popa
js
cli
inc
pop
ret
addr16
push
ret
outsb
xor
std
jl
or
cs
cmc
push
inc
ja
adc
stc
cmc
hlt
out
mov
jne
push
cmpsl
sarl
test
sarb
ret
out
nop
rolb
mov
popf
xor
loopne
or
test
fdivr
test
out
movsb
loop
mov
jns
or
inc
nop
jle
ret
jecxz
cmpsb
popf
cmp
les
jmp
test
pop
je
pop
adc
adc
mov
test
push
repnz
in
out
push
adc
push
sahf
in
out
jnp
js
pop
in
loopne
fs
stos
out
dec
jo
sub
lret
or
pop
adc
push
hlt
push
dec
add
pop
sbb
loope
loop
xor
cmp
cmp
add
lahf
dec
cwtl
xchg
enter
pushl
fwait
cli
pop
int
gs
pop
jmp
inc
xchg
add
add
mov
xchg
lret
lock
sbb
test
sti
imul
inc
fmul
adc
fldcw
es
hlt
jecxz
shlb
subb
clc
stos
mov
inc
dec
dec
pop
dec
mov
movsl
insb
mov
cmpsb
cmpb
pop
pop
sbb
jbe
sub
std
sbb
xchg
mov
add
cmp
pop
cwtl
test
lret
aaa
cmp
jno
xchg
add
mov
and
into
jge
fcoml
rolb
jno
flds
lret
xor
add
cld
xchg
dec
jns
subl
push
mov
xor
xor
pop
ljmp
xchg
sub
inc
mov
push
loope
jmp
mov
mov
xor
sahf
repz
arpl
sub
stos
mov
imul
push
mov
xchg
ficoml
ljmp
lret
add
mov
icebp
jnp
adc
cmp
add
into
mov
adc
mov
test
adc
pop
mov
fisubrl
jnp
push
xchg
push
cmp
les
dec
sub
mov
rcll
push
mov
in
popf
movsl
stos
clc
dec
mov
or
dec
mov
mov
push
int
sbb
mov
addr16
enter
sub
hlt
or
lods
adc
pop
and
arpl
popf
mov
dec
push
sbb
insl
or
dec
sbb
push
arpl
sbb
js
push
into
int3
push
mov
push
xchg
xchg
add
push
and
xorl
pop
sarl
addr16
xlat
cmp
je
sbb
aad
out
push
fwait
cmpsb
sahf
xchg
mov
adc
and
mov
lret
xchg
ffreep
scas
fdivrl
sub
cmp
fidivs
xor
lock
sub
imul
icebp
lods
stos
in
in
testl
adc
xor
sbbl
add
test
sbb
push
mov
mov
mov
adc
xor
pop
mov
push
xor
hlt
jl
insl
adc
adc
adc
insb
adc
lock
scas
adc
call
xor
sbb
sarl
sbb
incl
lret
inc
mov
sub
icebp
xorb
pop
pop
mov
andl
call
mov
push
lea
add
stos
out
js
adcl
daa
adc
add
xor
jne
addr16
lds
cli
dec
or
inc
in
and
mov
jmp
xchg
mov
lods
mov
jbe
mov
pop
inc
xor
jbe
lahf
mov
call
es
clc
jns
out
sub
xor
ljmp
mov
push
addl
jmp
cld
pop
mov
pop
outsb
aas
dec
sub
dec
xchg
sbb
xchg
and
sahf
imul
cli
mov
add
cmp
push
xor
pop
xor
enter
xor
das
ret
shrd
jnp
pop
sbb
adc
int
outsl
sbb
hlt
adc
adc
stc
test
in
stos
insl
cli
addl
jmp
pusha
mov
sbb
div
sti
lds
jae
or
je
movsl
jnp
push
das
mov
popa
jne
test
cmpsb
mov
dec
xor
sbb
or
cs
pushf
jns
js
out
lock
jge
pop
xlat
fbld
std
stos
cmp
cmp
sub
inc
icebp
btc
lahf
into
loop
insl
inc
int
aas
jbe
inc
into
mov
or
mov
rorl
pop
jbe
movsl
repnz
cwtl
inc
xchg
sbb
imul
mov
pop
mov
lcall
jb
inc
aam
std
mov
or
adc
loop
xchg
or
enter
stos
in
jno
std
inc
mov
mov
or
adc
mov
pop
inc
push
in
ret
gs
push
add
and
dec
dec
loopne
sti
rclb
jl
es
push
pop
mov
and
jge
dec
or
lods
push
lock
ljmp
xchg
dec
nop
out
dec
mov
adc
hlt
lcall
sahf
clc
cmc
pop
test
adc
cmp
insb
xchg
jp
xor
add
or
ficomps
jmp
sbb
dec
sbb
xor
movb
insl
das
mov
in
mov
xor
fnstsw
stc
push
or
xor
and
pusha
jnp
aam
adc
das
out
mov
mov
out
xchg
ror
jb
andb
push
mov
and
jecxz
sbb
mov
inc
cwtl
add
jns
outsb
mov
xor
cmp
loope
and
mov
cmc
jl
lods
and
int3
scas
xchg
cmp
addr16
loope
xchg
mov
mov
push
sbb
aas
jg
data16
pop
stc
ret
cli
ret
les
and
cmpsl
push
test
cmp
int
and
lret
or
jge
jne
fildll
aaa
shl
js
xchg
mov
sbb
jecxz
push
push
add
aam
jge
or
sahf
imul
ret
fcoms
push
scas
pop
mov
cmp
sbb
fadd
push
mov
inc
outsb
xlat
lock
push
dec
int3
cltd
mov
dec
jg
mov
sbb
bound
push
xchg
pop
dec
out
xchg
inc
pop
imul
fnsave
imulb
cwtl
mov
xchg
adc
sbb
sbb
out
mov
cmc
xor
fdivp
addr16
mov
std
pop
or
sub
adc
mov
dec
xor
or
mov
dec
shll
sbb
popa
daa
push
lcall
jno
into
negb
mov
add
sbb
pop
pushl
sbb
ss
scas
enter
add
leave
daa
push
enter
cmp
popa
fwait
in
iret
loop
enter
jl
inc
es
mov
repz
ror
sub
aas
jns
adc
rcrl
xchg
xchg
sbb
lods
movsb
push
pop
fmul
ret
mov
cmpsb
addb
imull
jg
pop
addb
std
mov
lcall
mov
gs
add
or
stos
mov
add
sub
out
add
add
int
inc
mov
xchg
outsl
mov
push
mov
in
dec
in
inc
in
dec
xchg
cltd
cmp
inc
xor
and
mov
jecxz
xorl
sub
ss
repnz
fwait
cmp
mov
xchg
pop
movsb
sub
adc
cli
in
xor
dec
push
jbe
shr
pop
sub
jbe
mov
inc
xor
xchg
add
sub
push
and
js
scas
clc
in
cwtl
mov
lock
mov
cmc
movsb
sub
adc
add
xor
stos
cld
adc
pop
gs
dec
adc
in
iret
icebp
sbb
pop
jnp
mov
ret
adc
stos
and
enter
push
mov
inc
shll
sbbl
jo
dec
push
adc
mov
incb
inc
and
pop
in
sahf
clc
or
cmpsb
mov
pop
out
inc
rcrb
add
incl
outsl
mov
add
dec
lret
mov
pop
repnz
xor
or
xor
cld
loope
adc
mov
mov
and
insl
or
sbb
mov
lahf
in
hlt
push
mov
bound
mov
jp
push
xchg
jg
sarb
mov
into
push
pop
test
fsubrl
inc
imull
dec
mov
mov
je
popa
cltd
cmp
out
pushf
pop
ja
sbb
cmpsl
pop
out
shlb
jno
add
jecxz
test
repz
sbb
xchg
jns
pop
je
or
add
pop
daa
push
cmp
push
xchg
in
adc
xlat
inc
movsb
cmc
or
fcoml
mov
xchg
mov
in
ret
mov
hlt
out
js
inc
sahf
inc
call
pop
out
push
imull
dec
fadds
cwtl
xchg
push
mov
jno
adc
sub
cmp
scas
mov
iret
movsl
or
push
push
xor
int
push
mov
jmp
in
jno
xor
out
out
std
ljmp
ljmp
inc
and
push
xchg
das
pop
mov
shrl
sbb
sub
psubusb
aam
inc
mov
bswap
cwtl
imul
int3
mov
inc
add
lea
mov
jg
mov
jae
sti
in
ss
call
hlt
ljmp
loope
popl
cmpb
jle
es
mov
sbb
xor
je
lcall
mov
push
mov
sub
loop
and
xor
imul
push
push
cltd
call
arpl
scas
out
in
das
int
ret
out
out
daa
jo
adc
mov
pop
sbb
xchg
mov
repz
movd
adcl
insb
xchg
ds
ror
adc
push
insb
rorl
or
inc
addr16
pop
daa
ror
add
fcomi
cld
int
push
out
fists
jp
xchg
jmp
enter
nop
lahf
insb
mov
movl
mov
and
jb
in
test
xchg
mov
pop
inc
shrl
mov
pop
imul
xchg
aad
xchg
or
rol
mov
mov
lahf
shrl
test
and
mov
xor
cmp
ret
push
cmpl
int
lods
fisubs
mov
and
repz
mov
add
push
mov
push
test
mulb
pop
sbb
out
addr16
cmpb
jmp
ja
popf
jl
cmp
aaa
jnp
insl
mov
rorb
push
cmp
sbb
jg
ftst
jb
and
mov
mov
or
out
mov
xor
push
stos
out
add
fcmovbe
outsb
fimull
cmp
nop
xchg
repnz
out
mov
scas
inc
clc
out
or
mov
jns
fnstcw
fsts
jbe
rcrl
cld
add
dec
fistl
mov
push
inc
cmpsb
das
mov
scas
arpl
mov
or
jns
lock
and
fistpll
add
xor
stc
in
andb
ja
push
out
inc
enter
add
in
shlb
mov
cmpsb
js
aam
stc
add
mov
jne
mov
xchg
ficoml
das
aad
nop
push
aaa
jae
aam
xchg
sbb
inc
movsb
xchg
pop
scas
lock
imul
dec
jl
jno
enter
fsubs
xchg
lcall
lds
lods
sub
loop
mov
inc
push
jl
cmpsb
xor
mov
scas
push
icebp
mov
push
cmpsl
aaa
pop
outsl
add
shl
rcrb
in
adc
push
add
xchg
mov
sub
sahf
push
or
sahf
mov
cmp
mov
sub
nop
daa
push
dec
jno
or
out
inc
mov
or
popa
add
scas
leave
inc
push
pop
mov
jmp
pop
push
dec
jmp
xchg
mov
dec
mov
pop
ficompl
jle
out
lea
adcl
rcrb
test
push
lret
or
cmp
in
and
xchg
cmp
shrl
call
mov
movb
loop
rcl
jmp
cmp
pop
jecxz
jnp
xchg
adc
jl
icebp
mov
mov
fbstp
outsb
scas
jbe
dec
or
jae
pop
mov
pop
sbb
xchg
push
sti
sar
ja
adc
add
adc
imul
and
dec
pop
ja
push
inc
repz
pop
sub
xor
xchg
aas
cmp
push
test
add
in
xor
popf
jo
incb
test
mov
adc
insb
mov
dec
jb
mov
jno
sbb
xor
sub
data16
out
push
add
scas
dec
mov
jecxz
shr
daa
int3
or
lods
loope
mov
add
decl
jecxz
mov
add
bound
lret
cmp
pop
adc
cmp
mov
aas
outsl
mov
inc
xchg
fcmovu
jl
push
in
mov
mov
push
push
mov
and
sbb
or
xchg
gs
push
mov
cmpsb
imul
xor
pop
popf
push
mov
push
mov
mov
insb
cli
add
daa
sarb
jbe
push
inc
xchg
insb
push
xor
popa
aam
push
fidivl
gs
imull
mov
xor
pop
das
jns
push
fists
jns
push
hlt
sbb
add
cs
inc
out
pop
pop
jmp
popa
in
add
movsb
mov
fbld
inc
lahf
xor
repnz
xchg
mov
mov
mov
push
test
aas
pop
lods
ret
arpl
out
jne
movsl
jns
mov
inc
ds
addb
sbb
fadd
cmpb
fimuls
popa
int3
and
ds
mov
data16
ret
xchg
xchg
xchg
pop
enter
xchg
jo
cwtl
hlt
push
mov
jp
cli
add
push
out
dec
sub
gs
push
xchg
movsb
push
xchg
xor
mov
or
ja
arpl
cmp
sub
xchg
call
push
mov
xchg
adc
outsb
lcall
adc
sarb
divb
adc
cmp
sbb
jae
xchg
inc
cltd
or
push
fcomip
fsubs
fsubl
mov
push
or
jns
or
adc
or
push
jae
lods
test
fs
mov
repz
xlat
popf
dec
xchg
sbb
jp
int3
sub
aaa
mov
jle
cmpb
lcall
sub
dec
data16
cmpl
mov
add
sub
popa
test
cmp
adc
scas
push
and
jp,pn
add
xor
divb
dec
cs
gs
cmc
adc
fcmovnbe
push
scas
jae
fbld
push
mov
fwait
xchg
push
es
push
negb
out
lea
mov
ljmp
pop
xor
pop
xlat
out
mov
jb
es
xor
shl
pop
icebp
or
sub
loopne
xchg
fs
push
sarl
xor
mov
mov
mov
arpl
jo
sbb
push
or
imul
cmp
and
mov
mov
in
jecxz
add
mov
repz
les
mov
mov
cwtl
addl
faddl
mov
jo
push
sbb
in
and
mov
mov
into
adc
cmc
in
pusha
ret
xor
loope
adc
rclb
add
in
sahf
and
test
xor
sbb
ds
subb
addb
mov
nop
mov
ja
iret
fs
jo
mov
pop
xchg
inc
lahf
in
inc
sbb
lods
mov
mov
fistl
add
jecxz
jae
mov
sbb
jno
sub
xchg
imul
jmp
scas
inc
imul
or
pusha
xchg
mov
data16
jae
mov
jge
xchg
mov
push
scas
add
insb
subb
mov
loope
mov
add
mov
inc
xchg
add
sub
cltd
lods
fwait
push
inc
lods
scas
pop
inc
jns
mov
popf
enter
in
roll
pop
or
in
stos
adc
imul
mov
cld
repz
in
popa
hlt
xchg
mov
mov
insb
xchg
mov
xchg
movsl
inc
add
cmp
stos
jecxz
repz
dec
inc
inc
xlat
mov
aam
cmc
sbb
dec
lock
or
sub
dec
es
adc
fistl
jae
mov
or
mov
cmp
adc
mov
loope
push
push
pop
int
adc
and
inc
pop
scas
pop
testl
mov
testl
fwait
decb
cmp
or
mov
push
dec
or
aaa
test
lds
in
leave
pop
nop
or
rcr
xchg
loope
dec
jg
pop
daa
movsl
fs
pop
add
scas
xor
aaa
dec
jecxz
lods
mov
addr16
and
mov
orl
jp
sub
sub
adc
mov
shlb
mov
jno
mov
pusha
xchg
mov
push
mov
inc
lds
push
adc
ja
mov
addr16
adc
pop
add
shr
faddp
data16
sbb
mov
xor
insb
sub
leave
sbb
cmpsl
outsl
sbb
clc
cmpsl
pusha
test
add
add
sub
mov
jg
jl
xchg
xor
addr16
xor
sub
cld
or
push
jp
ret
cmpsb
icebp
pusha
xchg
adc
pop
mov
cmc
mov
push
lcall
xchg
cmp
in
mov
cld
jg
push
insb
in
jle
push
dec
xchg
cmc
shrb
mov
push
pop
lret
sub
lods
nop
cmpsl
out
mov
adc
cmp
mov
sbb
into
pop
mov
test
andl
cld
imul
jg
push
daa
repz
out
and
enter
scas
ficompl
je
mov
aas
es
xor
sbb
js
dec
inc
cmpsb
lds
mov
lods
or
in
or
jae
arpl
push
and
sub
mov
ja
repnz
sub
xchg
xchg
pushf
stc
call
les
aam
stos
xor
dec
gs
or
outsl
push
test
fwait
inc
enter
lahf
jg
dec
inc
push
sbb
test
jb
mov
or
jg
outsb
push
es
in
dec
lret
jl
test
outsl
call
inc
xor
leave
mov
nop
jl
stos
repnz
mov
ret
and
xchg
jle
xor
rcll
sub
pop
mov
xor
rcl
mov
pop
or
std
fsts
pop
lods
inc
and
imul
insl
sub
divb
repnz
ja
xor
adc
mov
repnz
repnz
mov
mov
xchg
xchg
sbb
or
inc
daa
call
es
or
push
sti
addr16
dec
add
mov
sub
jmp
addb
cltd
xchg
push
jnp
mov
xlat
icebp
push
mov
inc
jae
aam
add
adc
sub
xor
out
sahf
mov
out
adc
sbb
stos
test
cmp
mov
jmp
mov
adc
xchg
stos
mov
push
cmc
adc
mov
stc
sub
iret
mov
jl
sbb
mov
dec
lock
sbb
pop
inc
push
or
daa
bound
sbb
add
imul
cmp
or
push
cmp
cwtl
hlt
cmp
push
arpl
jle
pop
dec
xchg
pop
jl
sub
pushf
arpl
les
fdivr
test
stos
inc
imul
int
push
xor
outsb
or
enter
arpl
cli
pop
int3
add
movsb
pop
cs
push
lret
cltd
dec
push
inc
and
sub
out
inc
mov
pop
xchg
mov
cs
or
or
stos
scas
push
pop
gs
add
cmp
add
pop
test
pop
jae
cwtl
cmp
icebp
dec
mov
add
sbb
mov
ja
stc
inc
scas
and
lret
sbb
jg
pushf
insb
and
and
arpl
test
add
dec
in
fisubl
lcall
outsb
flds
in
dec
mov
lcall
int
movl
dec
mov
test
mov
ss
clc
sbb
push
adc
pop
xor
movsl
pop
jge
jbe
or
cld
adc
imul
fldenv
push
out
xchg
add
push
enter
loop
stos
add
jg
not
jl
fistl
push
rol
inc
and
clc
das
sbb
imul
push
sbb
jg
ja
push
test
adc
push
ds
push
bound
adc
xchg
pop
push
mov
mov
fsts
inc
iret
mov
lret
xor
movsl
fidivrs
inc
stc
mov
mov
sbb
add
sub
imul
test
mov
stos
cli
and
jbe
arpl
sbb
add
xlat
and
adc
or
sahf
inc
pop
aas
out
jns
sbb
movsb
inc
pushl
push
sbb
jmp
loope
xor
bound
and
push
stos
fstpl
pop
incl
arpl
jno
jmp
js
fldenv
stc
mov
mov
or
in
xor
loop
mov
leave
bound
push
sub
ljmp
xor
xchg
aad
orl
frstor
pop
sub
in
jb
pop
loopne
mov
sbb
fnstenv
cmp
ja
ret
dec
cmpsl
pop
stos
pop
int3
jecxz
cmpsl
fildll
sbb
jbe
icebp
mov
clc
push
cmp
fsubs
jle
xor
cmc
jmp
sbb
cmp
test
xor
icebp
adc
sbb
dec
popf
lret
pop
xor
mov
ss
or
xor
xchg
fisttpll
xchg
xchg
iret
cwtl
std
std
cmpsl
jmp
mov
fsubrl
mov
pushf
std
add
mov
inc
js
enter
jmp
sar
inc
mov
xor
ss
push
das
jb
xor
add
je
sub
cmpsb
cltd
pop
js
aam
repz
mov
inc
xchg
je
xchg
adc
jmp
inc
pop
mov
dec
rcrl
push
mov
jg
ret
loop
aad
cmp
mov
nop
xor
sarb
jl
cmpsl
ljmp
std
mov
cs
sub
jmp
or
xchg
ret
pop
pop
data16
out
cmpsb
js
adc
outsb
leave
arpl
imul
stc
andb
pop
repnz
xchg
or
and
sbb
jl
lret
sbb
cs
loop
jecxz
or
sbb
push
ret
pop
sub
aaa
mov
cld
fldcw
mov
xor
mov
or
xchg
test
aas
fisubl
add
jecxz
push
mov
divl
mov
fwait
jl
test
add
pop
clc
mov
sbb
fimuls
dec
movsl
sbb
sub
inc
sbb
mov
test
sub
mov
mov
mov
mov
push
mov
sub
shlb
out
cmp
in
sti
pop
insb
es
sub
std
xchg
mov
je
jbe
cmp
mov
hlt
inc
and
and
cwtl
and
lods
popf
scas
and
sub
cwtl
ret
insl
fwait
in
out
push
dec
xorl
add
jne
jns
pop
or
out
fsubrp
cmp
sub
mov
xchg
data16
and
push
out
sub
stos
push
pusha
lods
ds
test
dec
cmp
cs
sbb
push
bound
push
test
and
test
sbb
out
push
inc
loop
hlt
push
mov
jne
lock
jnp
fnsave
dec
mov
data16
cmp
mov
add
cmp
xor
cmp
inc
bound
ljmp
clc
test
mov
ja
pop
xchg
mov
cmp
cwtl
dec
mov
xchg
or
repnz
jno
and
push
jp
mov
adcl
jo
xlat
sbb
loop
in
sarl
sti
movsb
shrb
push
xchg
jbe
leave
aad
hlt
mov
aas
sbb
movsl
fistpll
xchg
lret
mov
add
aam
and
call
dec
mov
cmp
jns
and
push
xchg
sbb
xor
push
imul
test
sbb
pop
xor
or
js
out
aam
xchg
fldz
out
int
push
int
and
mov
fildl
jmp
loopne
loope
lods
aam
into
movsb
pop
xchg
test
push
adc
ja
js
xor
add
xchg
pushf
mov
cmpb
pop
pop
cmc
xor
inc
fadds
lahf
inc
and
stos
mov
adc
lock
ret
pop
sbb
pop
sub
into
test
int
sub
neg
inc
adc
es
add
mov
mov
or
xor
je
jle
jb
shr
cmpsl
test
pop
dec
loope
push
lods
inc
xchg
cs
ss
and
js
xchg
add
and
mov
pop
movsl
push
and
lea
std
mov
jp
bound
int
cmc
insb
inc
aas
cltd
cmp
inc
jge
pop
cmp
mov
ljmp
lretw
clc
add
xchg
dec
mov
xorb
mov
mov
aas
inc
push
sub
aas
sub
rol
out
adc
adc
paddd
loope
arpl
fists
sbb
dec
pop
xchg
or
movsl
and
loope
sahf
clc
dec
jp
call
push
js
rcrl
test
fsubrp
push
addb
jne
stos
sbb
in
mov
scas
loope
sub
out
adc
andl
add
and
arpl
sarl
mov
mov
jmp
stos
cltd
shll
shl
push
stos
ds
shl
test
jmp
popa
sbb
fmulp
and
gs
mov
incb
into
aas
mov
fldt
mov
adc
adc
fsts
jle
fmull
stc
loop
jo
pop
fldl
mov
sub
push
jp
mov
jo
jle
aaa
ljmp
adc
lods
and
cmp
das
jge
push
test
scas
xchg
xchg
sahf
cmpsb
mov
loop
cmp
rclb
dec
pusha
aam
lea
pop
and
enter
test
subl
and
jns
mov
popl
mov
add
fisubs
stos
jp
cmp
bound
xor
movsl
ss
out
mov
cmp
in
sub
das
mov
mov
add
sbb
cwtl
push
js
fistpll
andb
notb
addb
add
incb
mov
ja
add
adc
ss
dec
fistl
mov
cs
rolb
xor
sub
imul
sbb
sbb
jne
inc
xchg
xchg
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
adc
xchg
cld
popa
bound
bound
cmp
or
or
rep
hlt
xchg
sub
xor
retw
pop
mov
fnstenv
in
out
outsb
js
daa
pop
clc
sbb
out
arpl
aas
imul
xchg
call
in
and
iret
inc
ret
imul
mov
icebp
sar
inc
or
cmp
xchg
rcrl
jns,pn
and
fs
jp
dec
jae
ret
and
es
dec
cwtl
push
divb
pop
out
shlb
sbb
dec
push
mov
mov
dec
dec
xor
and
mov
xor
loope
pop
sub
loopne
inc
shrl
cmc
or
push
adc
inc
shrl
subb
sub
adc
in
ret
cltd
aam
shlb
fistl
inc
in
adc
pop
mov
sahf
push
and
pop
push
loop
xchg
out
push
inc
push
ljmp
or
ret
push
adc
push
in
lock
sbb
and
jg
data16
fisttpll
ror
mov
mov
xlat
xor
mov
push
sbb
cmpl
inc
mov
sub
sbb
xor
push
jno
and
or
popf
cmpsb
mov
pop
fnstcw
out
xchg
enter
jne
xchg
enter
cmp
lahf
mov
xor
xor
rorb
call
clc
pop
sub
xchg
popf
or
jmp
cmp
addr16
icebp
pop
cmpsl
mov
das
pop
aad
cmp
push
push
andb
fldl
jno
bound
mov
adc
clc
push
pop
gs
jge
dec
pop
mov
dec
jge
outsb
adc
mov
pop
ret
jnp
popf
inc
push
clc
add
shl
xchg
in
mov
fs
pop
leave
lret
out
inc
sub
push
dec
lods
mov
mov
xorb
ljmp
cld
je
mov
pusha
lods
push
add
lahf
std
mov
pop
pop
data16
dec
push
fdivs
aas
mov
in
xchg
adc
sti
stc
sub
mov
int
pop
lods
mov
adc
sbb
xchg
xorl
xchg
push
jns
cmp
dec
shlb
jmp
inc
test
add
js
push
lock
adc
pop
jno
inc
int
cltd
mov
mov
out
push
sti
popa
push
sbb
es
lock
pop
test
out
cmpsb
pop
cmp
hlt
jl
dec
pushf
dec
imul
movsb
ret
sub
pusha
int
rcll
xlat
cmp
mov
xor
cmp
and
sbbl
pop
sahf
adc
pop
shrl
aas
adc
or
jae
add
dec
jge
cltd
inc
xchg
insb
or
mov
xchg
push
insl
js
adc
inc
sub
loop
jns
xor
in
dec
lds
add
mov
iret
hlt
pop
xor
jno
cmc
mov
int
mov
sti
arpl
sti
push
je
insb
enter
ds
and
or
loop
sbb
push
fbstp
es
pop
adcl
inc
or
in
or
cli
dec
push
pop
cmp
mov
jle
mov
or
mov
push
dec
call
dec
loopne
add
clc
fsubs
outsl
xchg
mov
scas
sbb
sub
dec
xchg
cli
jnp
insl
inc
or
les
or
push
inc
fdivrs
mov
popf
cwtl
jb
pop
sbb
sub
xchg
jne
fcompl
lcall
test
push
jbe
cli
lods
fidivrs
dec
and
cmp
or
in
sub
and
outsb
in
jmp
cmp
jecxz
fsqrt
push
cmp
mov
bound
dec
mov
shrl
rcr
in
xchg
sub
into
lret
daa
mov
lcall
sub
mov
mov
ret
clc
lods
sar
ds
or
shlb
pop
rcl
out
adc
lahf
mov
xor
pop
loope
mov
rolb
fstpl
adc
sub
jg
sub
add
popa
test
inc
pop
mov
mov
pop
sub
xor
push
jnp
insl
pop
pop
xchg
xor
adc
mov
sbb
cmp
mov
dec
adc
ret
pop
sahf
scas
xchg
mov
pop
movsb
aaa
in
test
aaa
push
pop
push
cwtl
jnp
icebp
cmc
testl
stos
add
xchg
inc
cli
dec
fidivrl
xchg
je
data16
movsl
jmp
clc
mov
lods
sub
xchg
lret
add
lds
mov
adc
push
ljmp
in
add
stc
lret
clc
and
lahf
outsb
outsb
jno
xchg
xsha256
cmpsb
pop
aam
xor
call
jl
aaa
or
fstps
and
int
push
or
mov
push
inc
mov
mov
out
sahf
mov
aad
ret
faddl
test
xchg
das
and
xchg
cmp
or
shr
mov
divl
jl
orb
xchg
mov
aam
push
mov
pusha
or
lods
inc
out
push
jmp
jecxz
or
add
pusha
imul
clc
loop
sahf
call
ss
or
mov
fwait
mov
adc
jnp
sti
scas
cmp
jge
xchg
lock
mov
cmp
mov
pop
push
std
jmp
cwtl
incb
mull
icebp
cmp
jo
scas
lds
ror
cmpsl
lea
loopne
adc
pop
es
cltd
les
outsl
push
test
enter
adc
fisttpll
push
flds
xchg
adc
jnp
outsb
mov
in
mov
dec
call
outsb
mov
bound
js
cwtl
push
int
insb
pop
test
jl
imul
inc
inc
mov
mov
shrb
in
aad
push
lret
xchg
enter
add
pusha
mov
add
push
xor
mov
fwait
imul
or
mov
jb
and
jge
xchg
xor
xor
sar
pop
test
mov
out
imul
sbb
lret
lock
push
repz
add
push
pop
pop
mov
insb
pop
add
shrb
mov
mov
xchg
jae
pop
js
push
mov
loope
sub
push
aad
or
sbb
out
inc
jg
xor
jg
sti
cld
inc
xor
push
cmp
adc
dec
scas
clc
cmp
sub
adc
dec
mov
pminsw
cs
jecxz
xchg
sub
mov
mov
pop
clc
int
jl
sbb
xor
pop
jg
enter
mov
push
insl
aaa
dec
pusha
pop
mov
aam
test
mov
sbb
mov
push
push
xchg
jns
repz
push
pop
mov
sbb
mov
dec
rcll
dec
insl
leave
sub
int
mov
cmp
out
xchg
inc
xchg
lahf
xorl
push
cmp
enter
cwtl
addb
sub
mov
lcall
popf
je
push
mov
sub
mov
xchg
dec
jb
mov
clc
insb
lock
adc
pop
xorb
mov
rcrl
adc
sub
in
lea
or
daa
dec
jb
pusha
repz
bound
das
lds
leave
xrstor
xorb
inc
adc
movsb
dec
jmp
clc
out
repnz
push
add
jb
mov
hlt
mov
push
dec
dec
dec
sub
inc
fisubrs
adc
imul
sub
aad
cmc
aam
adc
test
mov
cmp
pmullw
cltd
mov
mov
fmuls
mov
inc
mov
lods
and
pop
lea
les
sti
xor
hlt
call
rcll
fadd
in
mov
xchg
inc
mov
push
sti
jg
jo
jns
mov
jecxz
mov
call
sti
movsl
mov
pop
imul
ja
popf
mov
ret
inc
ja
jmp
mov
outsb
and
rclb
call
fnsave
loopne
mov
ja
insl
xor
fdivp
out
cmp
dec
jg
xchg
fsubrp
add
jmp
lret
add
in
cmpsb
mov
and
sahf
in
ficomps
adc
test
jmp
cmc
repnz
pop
mov
out
scas
xor
aaa
les
dec
mov
jo
xchg
ja
mov
cmc
sub
mov
mov
push
mov
fwait
and
scas
cmp
iret
in
xchg
push
bound
aas
inc
imulb
adc
dec
jmp
sbb
or
test
or
or
ljmp
bound
cmp
test
fstps
clc
xor
cmp
sbb
sub
repz
imul
sub
lods
xor
aas
cwtl
out
fmul
mov
push
lock
dec
jmp
out
enter
cltd
call
aas
push
inc
cli
xchg
sub
test
pop
jne
add
and
popf
mov
xlat
and
or
in
mov
addr16
xchg
cwtd
or
rorb
xchg
inc
sbbl
in
dec
sub
aas
or
call
sarl
xchg
sbb
popf
lods
cltd
adc
jmp
push
std
mov
mov
cmc
pop
add
ljmp
dec
jo
imul
jbe
push
cmp
dec
xor
jmp
sahf
enter
xchg
stos
lahf
xchg
sbb
xor
hlt
adc
dec
sub
out
je
scas
stc
xor
mov
xor
adc
nop
test
jo
sbb
fidivl
loopne
xchg
cwtl
jo
push
mov
sti
sbb
jg
mov
xor
popf
cli
sub
loope
in
lcall
add
insb
adc
popf
cmp
mov
fwait
adc
xor
lds
outsl
aaa
fisubrl
xchg
dec
mov
in
les
sub
dec
xor
cmp
stc
fistpll
or
loop
sbb
stos
test
inc
adc
dec
xor
cli
or
xchg
out
xor
mov
lcall
aad
sub
pop
jns
xchg
xor
mov
mov
fcoms
jle
jo
aam
fidivl
mov
mov
lret
pop
xchg
or
ret
xchg
vmovlpd
pop
orl
addl
lds
addr16
cwtl
sbb
lock
sub
inc
push
js
inc
cmpsb
mov
mov
test
jo
data16
ja
rcll
test
bound
movsl
in
push
popa
faddp
dec
mov
or
dec
andb
jecxz
loopne
mov
xor
mov
pop
or
jbe
sbb
xchg
adc
add
fidivrl
test
lret
mov
push
loop
and
test
mov
fildll
test
icebp
jl
adc
inc
lds
loope
or
xor
dec
mov
outsb
sti
pusha
jmp
jae
pop
xor
mov
cmp
bound
mov
cli
stos
rclb
fcoml
das
dec
add
xchg
jge
bound
pop
push
aas
nop
leave
pop
fs
movsl
cmp
push
inc
jns
jb
cltd
fsubrl
gs
ja
pop
add
je
inc
ss
cwtl
mov
ret
pop
enter
xchg
mov
out
jno
xor
int3
or
pusha
rcll
pop
aas
sarb
leave
arpl
int
loopne
rorb
cltd
mov
xlat
push
jbe
xchg
pop
cmp
lret
pop
xchg
fwait
inc
loope
or
loopne
sbb
cmp
jo
xchg
sbb
shll
das
je
shlb
insb
imul
out
mov
subl
mov
rcll
inc
xchg
fdivrs
popa
dec
cmova
mov
dec
cmpsb
mov
les
incb
ss
dec
xor
sbb
stc
imul
xchg
cmpb
pop
push
fcoml
xlat
bswap
mov
adc
and
aam
mov
jecxz
and
xorl
add
xor
mov
xor
cli
jns
xor
sarb
sub
or
jp
and
cwtl
inc
out
scas
std
mov
jge
cmp
pop
pop
rorb
xor
lds
fbld
add
mov
out
cli
xchg
jmp
push
adc
sub
aad
xchg
pop
leave
cmp
dec
stos
cmpsb
inc
push
pop
add
adc
push
add
dec
push
jge
add
adc
jle
daa
fidivrs
adc
clc
inc
out
cltd
xor
or
and
sub
and
mov
addr16
in
jp
push
dec
lret
shr
inc
test
fwait
lods
mov
fldenv
lcall
or
sarl
xchg
bound
dec
js
jns
leave
arpl
xor
mov
fwait
insl
mov
lret
mov
in
adc
add
mov
sub
data16
add
xor
jne
sbb
xor
cmp
out
fists
cmpb
xchg
jnp
xorl
push
fists
and
mov
jl
xchg
pop
sbb
inc
dec
adc
add
mov
xor
jle
and
mov
adc
mov
xor
xchg
scas
pop
pop
stos
pop
int3
nop
and
mov
pushl
lds
and
dec
rcll
and
shl
pop
pop
xor
std
pop
and
call
jo
sbb
les
mov
dec
add
pop
repnz
das
cs
add
int
sub
ljmp
pushf
movups
jecxz
loopne
mov
aas
jno
mov
sub
xchg
lods
jl
and
pop
les
mov
mov
cs
insl
lsl
cmp
arpl
inc
adc
xchg
rcrb
popa
add
or
cli
pop
or
push
sub
stos
or
jge
fisttpl
movsb
js
push
mov
cmp
adc
add
cmc
or
mov
inc
nop
mov
cmpsb
popf
adc
pop
pop
data16
nopl
sbb
fcomi
mov
lds
and
xchg
cmpsb
stos
push
push
xchg
ror
add
shrl
les
ja
jmp
iret
xor
lock
adc
rol
xchg
sub
or
test
mov
ds
push
lods
sbb
mov
loopne
xchg
sbb
push
stos
jnp
mov
add
sbb
dec
inc
clc
je
mov
add
mov
xchg
cmpl
outsb
loop
dec
dec
inc
xchg
push
aaa
xor
mov
ds
xchg
or
lahf
push
in
and
mov
mov
cmp
sub
loopne
push
sahf
xchg
es
orb
xor
outsl
scas
pop
das
mov
and
out
dec
pop
mov
sbbb
cld
lret
dec
mov
dec
scas
into
mov
sbb
es
std
or
pop
push
imul
mov
xchg
shl
jge
sub
sub
popl
add
adc
addr16
popa
lock
out
add
in
inc
jp
test
loopne
popa
push
sbb
jp
jb
mov
xchg
sahf
pop
std
rorl
push
mov
sti
inc
mov
ror
fwait
out
push
rolb
xchg
test
xchg
cmp
adc
jb
rolb
cmc
xchg
mov
lods
mov
jne
ljmp
jbe
ss
bound
movsl
shll
adc
dec
jbe
cmpsl
jge
push
xchg
mov
and
dec
jb
xchg
cli
cmpsb
pop
xor
test
inc
xor
sub
outsl
push
movsl
ja
adc
aam
sub
xor
and
pop
dec
and
movsl
in
sbb
fsubr
sbb
lds
mov
xlat
pop
dec
jbe
xchg
rol
ror
xchg
test
push
sbb
in
insl
aad
sub
sbb
inc
lock
ror
adc
dec
xchg
jne
cmp
and
xchg
mov
clc
adc
xchg
pop
jmp
inc
out
rorb
testl
sbb
in
cmp
mov
popl
or
mov
push
in
xor
pushf
scas
mov
pop
mov
dec
dec
fwait
jg
mov
enter
add
xlat
stc
mov
xchg
mov
lret
mov
out
adc
mov
sbb
jo
repnz
xchg
mov
jns
add
fs
jae
in
stc
dec
repnz
mov
pop
shll
sbb
cli
xor
movsb
rol
scas
testl
pop
dec
mov
orb
out
popa
in
push
iret
mov
pop
mov
jle
or
cwtl
cmp
add
lods
jecxz
movsb
or
mov
fistl
loopne
push
xchg
cmp
mov
and
inc
arpl
xor
cmp
inc
push
jno
stos
xlat
jg
fidivrl
cli
mov
cwtl
data16
pop
cwtl
addr16
sbb
cmp
dec
push
loope
orl
mov
adc
mull
mov
shrl
inc
cmc
test
leave
je
push
fnsave
xor
outsl
xchg
pop
push
mov
or
loope
xchg
sarl
mov
inc
dec
insl
je
fcompl
out
cld
cmc
jb
sub
out
loopne
fs
lock
vmwrite
clc
sbb
dec
dec
shrb
mov
inc
dec
int
dec
dec
sub
enter
enter
pushf
pop
dec
insl
cmp
loope
push
fadds
sub
xchg
loope
xchg
xor
pop
jae
jnp
push
fisttpll
cmpsl
or
lods
pusha
test
mov
pop
stos
jmp
cmp
ss
stos
fbld
dec
push
adc
push
scas
mov
pushf
sbb
mov
mov
shr
or
cli
add
xor
fs
jae
outsl
ficompl
cwtl
clc
sub
pop
dec
xchg
inc
jp
adc
int3
out
mov
push
mov
or
mov
sbbl
loopne
sub
lret
inc
and
push
pop
out
jl
mov
sub
jae
adc
pop
mov
fists
sbbl
pop
mov
mov
sbb
cmp
mov
js
repz
push
jb
xchg
sbbl
inc
leave
xchg
test
pop
or
mov
stos
or
mov
sub
aaa
lahf
push
je
fdiv
nop
std
iret
lods
ffree
repnz
popf
repnz
mov
jg
stc
enter
mov
cmp
and
sbb
mov
stos
cmpsb
imul
mov
xlat
mov
xor
jecxz
sbb
negb
pop
dec
adc
rclb
mov
xchg
pop
movsl
lds
and
jne
outsl
xor
xchg
mov
hlt
mov
in
lret
sbb
hlt
jne
add
lret
sbb
sbb
inc
xchg
cltd
dec
ret
aaa
mov
mov
or
je
xchg
lahf
loope
sbb
fbstp
or
mov
fsubl
and
out
sahf
ljmp
xchg
mov
cld
cmp
lret
negl
or
jnp
mov
ror
fisubl
andb
fcmovbe
lret
dec
jg
mov
mov
sbb
sub
xlat
sub
in
add
dec
jbe
adc
jmp
sub
cmp
call
pop
ficoms
push
mov
adc
scas
mov
xor
cs
adc
push
into
lahf
lods
ret
push
inc
mov
mov
xor
mov
ljmp
rorl
or
movsl
push
dec
add
sub
mul
mov
xchg
xor
cmpsl
out
mov
lock
daa
test
je
adc
mov
test
xor
bound
or
sub
xor
push
fs
mov
popa
or
mov
jne
ret
imul
in
push
mov
dec
push
idivb
out
mov
andl
or
cmc
xchg
and
xor
pop
add
xchg
mov
jp
call
push
pusha
pop
mov
leave
push
daa
xchg
xor
pop
test
fiadds
pop
push
or
push
hlt
sahf
mov
dec
dec
add
int3
adc
inc
cmp
sbb
cs
adc
or
dec
js
cs
sub
push
int
cmp
hlt
rcrl
pop
movsl
rcr
out
inc
add
out
cmp
out
jb
fs
clc
dec
mov
stos
push
push
pop
cmpsb
repnz
lret
fisubrs
add
in
or
or
int3
loope
stos
dec
scas
push
and
dec
add
jo
sub
out
mov
pop
xchg
filds
adc
cltd
xor
cmp
inc
inc
fsubrs
into
lods
sbb
cmc
lret
ja
gs
cwtl
das
leave
imul
enter
fwait
mov
ret
cmpsl
dec
cli
dec
push
dec
idiv
inc
sub
jle
jge
jbe
mov
enter
sub
mov
pop
outsl
or
push
jnp
adc
pusha
push
aad
imulb
test
sbb
incl
jne
lock
lea
jbe
dec
and
hlt
cmc
in
lahf
push
nop
sbb
push
jl
xchg
ret
cmp
xchg
adc
data16
daa
ja
inc
fisubs
xchg
mov
mov
movsb
xor
mov
imul
dec
cmp
push
or
ljmp
or
inc
push
stc
add
sub
in
int3
mov
add
add
xorl
in
mov
mov
int
or
cmp
mov
out
ret
mov
pushf
fdivrs
adc
call
and
pop
addr16
push
or
jns
mov
xor
jae
and
int
fmul
pushf
and
xchg
cmp
inc
pushf
xchg
int3
adc
inc
mov
dec
andb
jl
xor
adc
in
pop
in
inc
pushf
rcr
pop
or
push
cwtl
jae
jo
cld
sub
call
aaa
cmpsb
push
mov
ret
push
les
rcr
popf
mov
mov
imul
int3
fstps
cmp
lock
or
adcb
repz
xchg
lahf
mov
or
mov
scas
inc
mov
sbb
or
xchg
decb
les
mov
stos
mov
cwtl
loope
lret
pusha
in
push
mov
insb
imul
sub
pop
sahf
sub
pop
pop
pop
je
fisubl
xchg
xor
push
or
stc
mov
outsb
xor
dec
inc
xor
sub
push
fnsave
movsl
adc
call
push
cltd
ds
push
fwait
add
int
push
sub
addr16
pusha
cmp
std
pop
inc
cmpsl
int3
ds
loop
in
mov
pop
push
pop
fmull
mov
lret
adc
push
daa
xchg
enter
call
or
je
inc
cmp
xchg
ret
sbb
sbb
push
popf
outsl
aam
ss
iret
insb
sub
lea
lock
mov
mov
mov
repnz
xchg
cwtl
jns
dec
xchg
je
xor
sub
push
fnclex
ss
sbb
push
popf
xchg
incl
push
fsubrs
call
js
xchg
out
sbb
in
rep
sub
mov
sub
lods
fucom
outsl
mov
jae
imul
sub
xor
cmp
adc
push
inc
mov
popa
jge
sbb
pop
mov
mov
popf
inc
mov
std
aaa
sbbl
daa
popf
aas
push
push
sub
lcall
dec
mov
cmp
popf
add
ficomps
pop
mov
in
insl
adc
xorb
sahf
ret
add
or
jecxz
lcall
adc
fwait
jmp
hlt
test
cmp
or
pop
shl
lcall
push
push
stc
inc
scas
xchg
inc
data16
dec
add
jmp
adc
shlb
cmp
mov
and
mov
mov
enter
and
pop
push
pop
stos
dec
pop
lds
fisttpll
in
pop
icebp
std
and
push
in
push
pop
mov
xchg
sub
mov
adc
imul
fwait
imul
test
rol
enter
add
inc
test
sub
sbb
cmpsl
jmp
out
sti
push
inc
cli
divl
or
mov
mov
sbb
pop
cmp
sbb
xor
mov
xlat
and
ret
pop
cmc
daa
movsl
inc
dec
and
lahf
xor
aas
xor
inc
inc
jp
lods
int
stos
je
cltd
lret
rep
dec
pop
lcall
mov
cltd
push
sbb
dec
sub
dec
dec
xor
adc
or
shll
mov
jne
mov
push
xchg
push
push
out
sub
mov
jno
inc
push
xor
test
sub
lock
ss
jo
or
cmp
xchg
mov
popf
jg
xor
or
repnz
sbb
js
xchg
or
inc
fsubrs
cmpsb
lret
xchg
pop
xchg
stc
mov
ficomps
dec
movsb
mov
sub
popa
mov
enter
add
je
push
jo
cmp
mov
mov
push
call
lahf
jecxz
sbb
adc
in
jbe
imul
push
and
mov
or
xor
dec
sbb
cld
xchg
jbe
dec
in
cltd
mov
xchg
sbb
je
sbbl
mulb
mov
leave
and
and
mov
xchg
add
out
enter
mov
ljmp
mov
lret
or
inc
add
mov
mov
xor
sub
in
stc
pop
div
mov
and
imul
imul
jge
and
xlat
sub
arpl
dec
call
test
add
jge
push
cmp
xchg
out
aad
sti
or
negb
sub
dec
pushl
loope
or
fistps
mov
fidivrs
or
mov
scas
stos
cmpsb
add
dec
mov
pop
movsl
add
out
pop
jmp
neg
sub
mov
call
movsb
arpl
lock
lock
les
mov
int
test
xor
add
push
sarl
pushf
xchg
mov
repnz
ret
lock
jmp
xchg
sub
ucomiss
sbb
lods
and
inc
jb
pop
es
gs
push
mov
mov
mov
rcrb
data16
loop
xchg
sbb
cs
cmpl
out
gs
repnz
or
nop
pop
stos
sbbl
bound
pop
daa
mov
orl
sbb
in
pop
add
xchg
mov
or
add
fidivrl
in
mov
orl
pop
sbb
popa
ja
inc
mov
mov
jge
lock
pushl
lret
repz
in
dec
cmp
sub
adc
xchg
dec
lods
pop
ss
cmpl
mov
cmp
out
loope
mov
push
lds
daa
add
jae
sarb
pop
fwait
mov
scas
jecxz
push
cwtl
lods
test
mov
repnz
enter
inc
pop
aas
arpl
fwait
inc
push
add
int3
call
xor
lret
pop
cs
cld
mov
dec
les
enter
mov
data16
lahf
mov
insl
call
imul
cld
mov
lods
and
jge
adc
sbb
mov
in
jecxz
das
gs
cmp
inc
add
adc
test
aaa
movsb
ds
mov
sbb
dec
fwait
mov
push
xchg
jbe
in
mov
mov
lret
repnz
cmp
adc
ss
ficompl
mov
mov
lea
mov
and
jbe
pushf
add
mov
xchg
pop
xor
mov
mov
mov
xlat
cmp
js
nop
shl
jecxz
cltd
xchg
popf
std
xchg
mov
pop
add
mov
xor
add
mov
xchg
push
mov
mov
cmc
adc
add
push
xchg
out
fadd
mov
jecxz
clc
sbb
pop
xchg
rorl
movb
notl
fisubs
scas
add
add
xor
push
pop
xchg
adc
out
inc
push
inc
out
pushf
jmp
adc
sub
push
enter
xchg
mov
jb
cmp
popa
mov
and
sbb
jns
adc
imul
repz
arpl
jns
out
lds
inc
cli
pop
iret
sbb
ljmp
adc
pop
js
mov
call
or
mov
push
in
sarl
std
adc
je
mov
imul
adc
add
jmp
jnp
xchg
fimull
push
nop
add
fwait
mov
sbb
mov
push
ss
pop
mov
testl
push
pop
sub
xchg
xchg
int
popf
pop
xlat
clc
ja
jl
rorb
jge
movb
mov
imul
xchg
sub
dec
ljmp
cs
mov
xchg
push
and
cwtl
jno
incl
adc
sub
int
add
cmp
xchg
xor
lea
aas
data16
pop
push
push
mov
cmpsb
addb
push
sub
pop
adc
push
outsb
push
je
cwtl
inc
lea
inc
in
out
inc
stos
imul
stc
lcall
or
out
and
lret
mov
iret
faddl
je
jl
jl
in
cmc
or
jle
insb
test
test
mov
js
dec
add
sub
dec
icebp
in
out
out
pop
jecxz
push
push
pushf
push
adc
push
fisubrl
iret
sbb
push
cmp
dec
stos
xor
subb
dec
stc
mov
cmpsb
push
movsl
push
rcrb
jb
mov
daa
mov
xchg
inc
pop
sub
sbb
in
dec
cmp
cmp
nop
stos
or
icebp
cmp
sub
push
jne
adc
lods
xchg
mov
mov
push
push
lret
loop
mov
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
inc
rcll
popa
bound
bound
and
repnz
dec
or
mov
inc
pop
inc
in
cmp
xchg
mov
sti
cli
mov
push
adc
inc
jne
ret
ss
imul
aaa
inc
xchg
pop
fisubl
shll
push
mov
dec
or
in
dec
add
gs
push
xor
jcxz
ret
movsb
loop
scas
mov
movsl
dec
or
out
add
push
sub
and
imul
or
lods
in
arpl
prefetchnta
cmp
and
clc
mov
lret
cli
or
jecxz
movsb
inc
add
popf
xchg
popa
rcl
inc
xor
add
scas
push
xchg
mov
push
test
sahf
push
std
xor
xor
xchg
pop
nop
adc
iret
pop
mov
push
loope
das
xchg
ror
movb
int3
mov
and
sub
push
pushf
outsl
in
cmp
testb
mov
pop
cmpsb
data16
or
loop
fsubl
sub
imul
xchg
idivb
loopne
ja
sahf
std
jns
dec
das
jns
sub
call
adc
filds
loope
xor
or
nop
push
jno
rcrl
sub
mov
pop
cmpsb
sarl
mov
mov
adc
es
lret
cltd
je
jle
popa
push
sbb
fdivrs
push
mov
adc
movsb
test
aad
xlat
and
jg
xor
ja
repz
fdivrl
pop
adc
pop
mov
pop
fidivl
clc
mov
mov
lahf
dec
mov
std
in
cmp
call
aad
push
mov
add
insb
sahf
shrb
xlat
xor
cmp
jecxz
sbb
rcrb
push
push
mov
pop
out
shl
sbb
movsb
xor
lcall
add
popa
js
lods
pop
lcall
or
mov
pop
jle
pop
ret
mov
pop
aaa
sbb
sti
sbb
xchg
mov
iret
sub
rcrb
in
adc
cld
test
ffreep
push
push
jge
cmc
sub
sahf
adc
mov
mov
jne
out
cmpsl
mov
push
push
stos
cwtl
test
sbb
jne
fldt
lahf
mov
movsb
mov
orb
andl
and
loopne
stos
jne
and
outsb
loope
sub
push
adc
insl
pop
loope
mov
xchg
fs
pop
push
int
mov
and
fxch
orl
cmpsb
mov
std
shlb
xchg
iret
mov
inc
cmpsl
test
jg
roll
push
sbb
repnz
lds
fmuls
cmp
or
imul
sbb
jae
test
movsb
aad
rorl
add
xchg
gs
negb
push
sub
mov
xor
aad
mov
fisubs
shll
in
xsha256
cmpsb
rcl
sub
repz
jnp
mov
push
xor
adc
stos
mov
mov
mov
pop
mov
je
inc
sbb
mov
jb
add
xlat
int
mov
xchg
clc
pop
sub
xchg
aas
pop
sbb
or
inc
adc
stos
cmp
jle
pop
jmp
inc
inc
sti
cmp
cmp
insl
cmp
sub
xor
mov
fldenv
xchg
add
push
shrb
mov
pop
and
int3
aaa
paddw
cmpsb
mov
test
idivl
mov
shrb
and
xchg
or
faddp
les
pop
int
outsb
push
add
or
sub
or
push
xor
jg,pn
cmc
sub
lret
popf
clc
jb
es
lods
or
mov
daa
push
les
mov
ja
es
jne
fs
and
cmp
cmp
sbbl
sub
arpl
je
out
xchg
sub
ss
enter
mov
xor
mov
test
leave
icebp
dec
call
push
cmp
adc
cltd
mov
aaa
nop
das
mov
movsl
shr
ret
cmp
scas
add
xor
sbb
jb
xchg
iret
sarb
mov
or
rol
mov
jns,pn
cmp
dec
sahf
cmp
cmp
add
cmp
dec
loop
out
adc
dec
sub
xor
out
fisubrl
mov
subl
cmp
cmp
clc
cmp
add
push
lods
ljmp
mov
mov
adc
sub
mov
js
mov
xchg
or
push
mov
jge
cwtl
scas
or
loope
ret
mov
lea
xchg
jge
dec
jp
pushf
push
fmull
sub
push
repnz
push
mov
or
cmp
mov
adc
pop
out
es
and
jo
pusha
jp
sub
mov
bound
out
sub
loope
icebp
xchg
sub
add
xor
pop
das
dec
dec
lret
push
das
and
leave
mov
cmpsl
push
cmpsb
fcoms
nop
nop
cmp
call
dec
cmp
dec
test
add
push
in
jl
push
jns
bound
dec
jmp
mov
push
xchg
out
or
rcr
fldl2e
scas
sbb
mov
ds
mov
mov
in
clc
fstl
adc
fcmovu
xorb
mov
cmc
pop
out
inc
mov
cmp
test
cld
pusha
mov
or
aas
fadd
push
dec
xor
ljmp
xor
and
ret
or
dec
mov
xor
repnz
jge
cmc
cmp
fisttps
lds
and
mov
in
pushf
adc
jo
jnp
movsl
or
movsb
jge
nop
sbb
cmp
out
rcr
shrl
aas
clc
lea
xlat
lret
test
fldenv
dec
nop
cmp
pop
mov
fcomip
pop
or
jle
push
enter
mov
push
push
jle
mul
jmp
cmp
jne
pushf
clc
mov
loop
rorb
jle
addl
or
cs
dec
popa
dec
std
add
adc
or
inc
cwtl
jno
or
leave
imul
divl
and
in
or
cmp
ss
sti
aaa
inc
xchg
ret
lret
andl
leave
pusha
das
dec
int3
and
ljmp
aam
xchg
sbb
mov
nop
sti
push
adc
cli
inc
test
mov
mov
sub
in
jns
call
mov
fstpl
sub
cmpsl
xor
cs
cmp
mov
pop
push
cmpsl
push
mov
xor
fs
cmpsb
dec
pop
jecxz
or
mov
movsl
adc
dec
leave
jo
xchg
cmc
insl
sbbl
push
daa
fstl
xchg
aaa
mov
jno
ret
push
test
pop
js
sbb
aam
scas
jecxz
data16
daa
sub
fdivs
lret
dec
pushf
jne
push
test
push
xchg
pusha
stos
xor
or
xchg
mov
pop
loopne
xor
lret
xor
mov
fsubs
outsb
rcl
rcr
ljmp
jmp
shlb
xor
jp
xchg
sbb
movsl
loopne
xchg
pop
push
out
dec
popa
pop
lret
dec
iret
les
js
push
or
cwtl
push
fildl
mov
fdiv
mov
add
mov
xor
adcl
lods
loopne
adc
lods
mov
mov
sbb
subb
ljmp
es
das
insb
jnp
push
xchg
sahf
sbb
mov
clc
xchg
ficompl
bswap
call
shrl
mov
shlb
lret
sbb
inc
jae
push
div
ss
dec
repnz
cmp
pop
jmp
jg
icebp
leavew
push
xchg
sbb
mov
sub
je
repnz
sub
test
or
test
test
mov
xor
push
popa
push
mov
push
mov
arpl
add
aas
sub
gs
cltd
pop
cmp
sub
sbb
mov
mov
pop
fmuls
scas
mov
dec
or
data16
in
out
js
dec
ja
cmc
and
jg
xor
lahf
lahf
cmpsl
lods
in
ja
leave
lds
sub
add
andl
push
xchg
in
pop
int3
in
sub
or
aam
push
dec
aaa
cmc
xor
mov
cmpsb
mov
push
inc
xor
pop
xor
int
jbe
adcl
push
enter
pusha
mov
ret
mov
jne
cmp
int
insl
cli
inc
push
push
add
scas
adc
out
add
movsl
fldenv
pop
shl
enter
gs
fnsave
add
dec
inc
loopne
sarb
mov
in
adc
mov
inc
pop
enter
popf
outsl
jecxz
repz
mov
sarb
test
rol
hlt
push
icebp
sbb
cmpsb
frstor
stos
stc
jns
push
or
mov
arpl
addl
in
out
mov
icebp
leave
imul
das
js
js
sbb
xchg
add
dec
fstpl
cmp
mov
mov
fidivrs
repnz
pushf
insb
adc
inc
pop
cmp
ret
pop
sbb
out
add
stc
mul
ja
rorl
movsl
mov
sub
daa
ds
jle
push
pop
movsl
inc
stos
pop
push
dec
cmp
push
fdivp
and
sub
sbb
mov
add
shll
insb
mov
pop
xchg
fidivl
out
mov
movsb
insb
inc
aas
movsb
ret
int
jl
fsubr
movsb
jp
jns
jbe
and
mov
adc
jge
mov
sbb
sahf
xor
inc
cmp
shll
ret
push
repnz
outsb
push
pop
popf
movsl
jno
int
in
or
outsl
nopl
mov
push
lods
sti
mov
add
std
std
cli
mov
inc
and
mov
test
sub
mov
sub
leave
jmp
test
test
sbb
lcall
sub
movsl
xchg
sub
fstpl
stos
loopne
rorb
or
pop
fbstp
push
ljmp
cmp
test
rol
sub
shr
cwtl
shll
push
sub
andl
and
mov
cmp
xchg
add
stos
jns
xchg
dec
cmp
roll
jne
jge
add
add
lods
jns
les
lret
ljmp
or
and
inc
aam
aad
rclb
jmp
fwait
and
ret
add
lret
cs
pusha
adc
mov
adc
cltd
les
ds
cmpsl
insl
cmp
mov
mov
mov
mov
data16
xor
pop
popf
insb
es
repz
aas
xor
imul
lahf
and
cwtl
addl
sub
sub
mov
sub
sub
cmpsl
les
dec
int
lods
pop
dec
and
test
and
arpl
push
sub
mov
nop
movsb
rorb
fs
mov
movsl
add
lahf
or
scas
sar
sub
out
lds
dec
nop
xor
mov
jb
outsb
and
jne
out
add
or
mov
cmp
and
loop
inc
xor
lret
inc
or
xchg
mov
repz
push
xchg
cmp
add
cwtl
dec
cmc
ja
mov
fwait
and
add
sbb
ffreep
movsl
xor
adcb
pop
inc
pop
jl
adc
jecxz
fsubrs
add
xchg
imull
fwait
mov
sub
adc
enter
jno
stos
stos
dec
push
sbb
cmp
das
in
loopne
lea
pop
scas
mov
iret
ds
les
pop
lcall
aad
in
loopne
movsb
or
hlt
add
xchg
call
mov
mov
push
dec
mov
mov
rorb
mov
jne
loop
inc
mov
faddp
test
dec
scas
adc
dec
adc
pop
mov
pop
or
data16
leave
inc
inc
jno
pop
rorb
dec
jecxz
insb
dec
sahf
mov
popa
dec
dec
scas
push
dec
push
mov
out
push
int
cld
sbb
lret
lea
xchg
push
inc
test
and
jecxz
repnz
mov
mov
dec
aad
lahf
mov
push
push
sub
push
xchg
add
or
mov
imul
arpl
prefetch
dec
insl
xor
push
mov
inc
pushf
cmp
and
pop
mov
inc
dec
sub
xchg
fisubs
pusha
mov
jae
pop
fisubrl
gs
mov
inc
dec
xchg
mov
aam
scas
mov
xchg
sbb
push
imul
mov
mov
push
enter
jp
imul
lret
push
repz
xor
fsubrs
jnp
imul
sbb
outsl
std
cs
bound
test
popf
mov
push
mov
cli
adcl
mov
rcrl
fstpt
aas
cli
mov
movsb
mov
dec
dec
pushl
dec
sub
jmp
pop
push
jge
outsl
ljmp
inc
bnd
and
pushf
pusha
int3
mov
inc
mov
add
lods
mov
xor
insb
in
mov
adc
js
sbb
rcrl
pusha
dec
cmp
int3
ret
addr16
mov
stos
jmp
out
sbbl
push
jle
ss
insl
inc
mov
outsl
lds
push
cmp
sbbl
out
add
mov
inc
fs
and
es
fwait
imulb
inc
mov
mov
mov
add
xchg
es
jb
sbb
divl
cmp
test
lret
fldt
xchg
xor
xor
imul
bound
pop
pushf
outsb
sub
push
pop
jno
sbb
lods
mov
add
aam
cmp
dec
iret
movsl
stos
lret
push
fcoms
sbb
and
mov
out
or
sub
jmp
in
mov
pusha
sti
pusha
fimull
stc
pop
adc
xchg
pop
or
rcr
pop
cmp
jge
out
sbb
jmp
popa
loope
fnsetpm(287
add
xlat
and
into
lods
jg
mov
dec
dec
mov
or
inc
mov
dec
hlt
ss
js
inc
sub
sbb
arpl
mov
movsb
jo
push
shl
inc
por
fsub
push
pop
mov
mov
cli
ficomps
push
pop
pop
out
pop
xor
ds
mov
jno
lcall
lcall
fistl
pop
mov
pop
push
insb
mov
movsl
cmp
sbb
mov
jns
xor
inc
add
sbb
mov
xchg
rcrl
in
pop
cmpb
or
dec
add
adc
jg
sbb
adc
inc
cmp
test
loopne
mov
ljmp
xor
mov
xchg
mov
shlb
pop
adc
scas
and
iret
imul
fidivrl
loop
lea
xchg
insl
loopne
adc
mov
popa
mov
dec
mov
imul
push
lret
mov
loop
xchg
and
push
add
cmp
imulb
lret
movsb
idivb
bound
inc
subl
push
pop
rolb
in
cmpsb
dec
jno
in
push
addr16
mov
mov
jo
push
mull
fwait
lret
lret
xchg
iret
mov
loop
dec
out
jno
jmp
jne
mov
test
push
dec
ret
jl
addr16
cmp
and
sbb
pusha
sbb
fisttpl
push
popa
mov
mov
sub
divl
aas
roll
adc
cmp
or
cli
lcall
sub
add
jmp
mov
jle
and
test
enter
xchg
push
out
fists
int3
inc
popf
insl
scas
add
jg
call
mov
add
pushf
fdivl
shrb
dec
fldln2
insl
cmp
push
fisubrl
lret
cmpsl
lds
dec
jne
test
mov
flds
roll
xchg
mov
sbb
mov
or
fadd
and
and
dec
sub
subl
das
pop
pop
push
movsb
loop
loope
sbb
push
and
mov
ljmp
jge
int3
scas
outsl
pop
les
lret
jmp
rcll
cmp
arpl
sub
test
pop
dec
mov
arpl
cmpsl
pop
mov
shll
mov
pop
add
dec
push
shlb
mov
cwtl
cmc
mov
out
mov
movsl
pushf
xchg
sbb
mov
ficoms
sbb
cmp
ja
nop
movsl
outsl
imul
or
mov
and
addb
cmp
adc
add
cmp
popa
enter
xchg
xor
mov
ss
nop
les
pop
adc
data16
pusha
jle
dec
dec
fidivl
imul
xor
xchg
dec
out
fmull
andb
dec
lea
xor
aas
push
xorl
pop
test
sub
pop
sbb
push
inc
mov
adc
push
mov
push
dec
sbb
inc
pushf
jno
sti
mov
stc
in
hlt
daa
push
sbb
sub
push
loope
jnp
pusha
rolb
testb
jl
adc
adc
insb
and
inc
push
movsb
dec
jp
in
push
fdivr
jg
push
mov
shrl
repnz
sbb
jecxz
ss
inc
inc
addr16
ljmp
jb
push
out
pop
loope
in
sub
jno
lret
push
pop
pop
out
outsl
xlat
adc
cltd
psubq
popf
sbb
mov
leave
es
jl
movsl
loop
mov
shlb
out
mov
pop
lods
cmpsl
mov
push
icebp
das
jg
jnp
das
adc
xchg
mov
cmp
inc
jo
sbb
jnp
outsb
ret
mov
mov
clc
push
lods
imul
movsl
lds
je
push
ljmp
xchg
pop
out
jno
icebp
pop
xlat
fwait
xor
fcmovbe
push
cmp
rcll
jo
pop
test
and
les
xor
in
cmp
push
es
les
shl
es
es
cmp
push
lret
and
or
into
cltd
outsl
and
rcll
fsubr
out
mov
mov
jno
imul
add
xchg
push
pop
inc
lods
divb
and
aam
mov
sub
xor
fidivrs
je
dec
cmp
jle
ljmp
loopne
mov
and
out
and
push
xchg
clc
xor
les
aas
cmpb
jno
jle
cmp
push
xor
add
fildll
call
sub
test
sbb
std
push
aam
lcall
lods
int3
sbb
inc
mov
in
mov
lods
inc
data16
jnp
insl
or
aad
imul
mov
lret
sub
and
xchg
into
mov
dec
xchg
mov
js
mov
addr16
sbb
mov
mov
jo
mov
mov
xchg
ror
inc
out
push
mov
sbb
inc
stc
aas
jmp
out
mov
mov
test
daa
addr16
or
fwait
cltd
add
rcrl
pop
push
adc
sub
cld
jo
bound
mov
mov
add
cli
dec
mov
orl
iret
mov
cmp
push
popf
adc
cmp
mov
mov
mov
stos
cmpl
arpl
cmpsl
lahf
xchg
push
and
jae
and
or
and
imul
fdivrl
scas
lods
push
jns
mov
mov
xor
movsb
decl
ficomps
sti
dec
ss
jp
pop
and
filds
mov
loopne
popf
shrl
out
dec
adc
rorl
arpl
ss
clc
jecxz
sbb
fs
xor
mov
sbb
xor
outsl
sbb
aas
aam
pop
ljmp
stc
shrb
or
bound
xor
xor
pop
dec
pop
mov
add
sbb
addr16
xchg
outsb
lret
in
ret
sbb
push
adc
fwait
mov
outsl
push
inc
jnp
sub
inc
cld
imull
sahf
out
mov
mov
xchg
fiadds
aad
push
push
andb
add
add
mov
sahf
scas
sbb
xchg
or
insb
xchg
pop
stos
inc
mov
pop
es
ret
and
adc
fsubrs
hlt
mov
in
or
es
nop
repz
mov
negb
add
popa
cmp
cs
or
rorl
jp
push
add
cmp
pop
repnz
int
aad
std
outsb
into
stos
add
mull
rolb
lods
out
test
enter
andl
insb
pop
and
adc
or
xor
negb
mov
lods
push
xchg
lcall
ljmp
inc
stos
adc
inc
xor
aaa
scas
push
iret
add
sbb
test
cmp
push
roll
cmp
in
mov
sbb
pop
jne
push
push
inc
mov
mov
mov
int3
das
mov
or
push
add
jecxz
out
mov
sbb
rcll
out
mov
push
mov
push
push
jp
idiv
repnz
dec
mov
lods
in
shlb
or
cmc
adc
flds
test
adc
pop
xchg
jmp
mov
cwtl
mov
mov
inc
mov
or
xor
pop
xor
jo
stos
movsl
pop
mov
mov
pop
clc
icebp
xchg
nop
aas
cmpsb
fimuls
mov
pushf
clc
ja
jmp
fs
out
lcall
popf
lods
mov
jb
lret
inc
mov
popl
fcompl
jmp
mov
hlt
into
pop
mov
mov
add
aas
rep
fcomp
sub
ds
pop
shl
add
or
jp
xor
xor
push
and
push
fidivs
stos
and
cmp
pop
lcall
test
popf
mov
adc
in
ret
out
sbb
cs
stc
adc
cld
push
inc
loop
iret
in
xor
jge
bound
xchg
js
in
mov
imul
inc
outsl
jp
push
fdiv
repnz
out
cmc
push
arpl
push
mov
test
xor
sub
inc
pop
pop
or
cmp
xchg
int
fiaddl
outsb
cltd
mov
repz
movb
push
lcall
push
adc
mov
push
cmp
test
lods
cli
or
or
rorb
clc
mov
shl
mov
push
outsb
fadd
sub
pop
sub
int
dec
call
rcll
in
outsb
lods
or
xchg
jbe
cmpsl
mov
or
ret
mov
sahf
cmc
mov
jge
add
mov
loop
xchg
pop
dec
add
scas
cwtl
rcrl
pop
xchg
test
scas
in
pop
lds
mov
ljmp
ds
lds
cmp
push
loope
pop
push
repnz
cmc
pop
ret
ret
push
nop
outsb
lods
lret
aam
and
dec
outsl
jp
xor
sbb
jl
jo
fsubl
test
pop
pop
mov
jge,pt
push
mov
push
cld
insb
push
sbb
fidivrs
mov
dec
jbe
inc
dec
or
out
inc
mov
mov
pop
lock
inc
popf
xchg
pusha
ficompl
aam
test
gs
pop
push
jbe
fisubl
jp
je
pop
in
cmp
frstor
adc
inc
cwtl
push
gs
sbbl
dec
inc
sarb
outsl
mov
jg
test
push
sarb
and
adc
popa
fstpt
shl
lret
cwtl
ret
enter
xorb
lods
insl
inc
pop
inc
push
xor
mov
int3
dec
les
scas
or
inc
pop
sbb
mov
jbe
sbb
iret
bnd
lea
test
mov
int3
mov
pop
or
jne
or
call
or
xchg
inc
sbb
mull
test
out
mov
test
lods
cmc
push
es
sub
nop
sahf
test
mov
repnz
mov
add
sahf
cmc
push
bound
push
mov
cltd
push
lock
jae
jae
xchg
arpl
insb
jecxz
mov
mov
je
adc
sbbb
fstpl
fiaddl
mov
inc
cwtl
outsb
sbb
orl
mov
ss
mov
mov
xor
push
scas
add
sub
adc
pop
outsl
sub
loop
int
imul
mov
enter
cmp
mov
int
mov
ja
imull
cltd
cs
mov
push
xchg
in
incl
adc
cli
mov
or
mov
out
sbb
fwait
adc
adc
push
out
rorl
sbb
xchg
cmc
sub
adc
jne
mov
enter
fistpll
xor
mov
lea
nop
push
add
cmp
jmp
adc
inc
adc
xchg
push
ja
and
dec
subl
icebp
icebp
in
jbe
shl
sbb
scas
daa
icebp
or
xchg
pop
jb
push
shl
sub
cmp
movsb
mov
movsb
in
jge
fidivrs
adc
lods
xchg
test
xchg
push
sbb
in
mov
arpl
lds
mov
adc
rorl
repnz
pusha
loopne
pop
iret
pop
iret
loopne
xlat
das
push
inc
mov
nop
sti
or
and
inc
and
es
shll
xlat
shll
or
in
out
dec
push
xor
and
push
sub
in
xchg
xor
dec
pop
xchg
fwait
mov
cmpsb
lods
jb
pop
in
mov
dec
mov
fwait
insl
lcall
out
pop
mov
stos
jg
xchg
out
push
leave
push
push
outsb
es
dec
dec
cmp
call
xchg
movsb
inc
xchg
mov
jo
jle
inc
rcr
push
in
pusha
in
xorb
and
test
ret
fsts
insb
mov
mov
sub
imul
mov
xorl
es
pop
add
fisubs
xchg
cs
pop
in
out
jmp
mov
andl
lock
orb
aaa
push
sub
xor
sbb
rclb
popa
jle
test
or
push
push
lret
cli
jo
jne
jmp
imul
int3
push
lret
das
inc
clc
cmp
jbe
sub
pop
dec
repnz
push
or
mov
and
int
jge
jb
mov
mov
divl
or
in
cmp
mov
repnz
pop
ret
into
insl
cmpsl
cmp
rorb
dec
xchg
outsl
adc
push
icebp
test
push
daa
mov
int
pop
test
cs
mov
mov
jecxz
sbb
leave
or
aam
xchg
nop
jge
mov
dec
repnz
js
stc
lea
pop
pop
test
test
fistpll
inc
cli
xchg
cmp
xchg
sbb
stos
ja
inc
mov
imul
or
dec
repnz
pusha
jecxz
fisttpl
lock
je
bnd
je
lds
pop
sbb
pushw
int
xchg
add
xor
jae
stos
add
mov
jge
bound
pop
pop
nop
sbb
fwait
jb
mov
call
addr16
dec
ss
in
sahf
out
xor
rol
sbb
lods
dec
sbb
ret
loop
repnz
orb
mov
notb
mov
pop
out
and
pop
pop
xor
andl
out
cmp
and
sub
xchg
mov
ljmp
ffreep
fisttps
or
push
jge
in
push
mov
or
add
cwtl
clc
iret
subl
lahf
mov
dec
fsts
inc
leave
add
jae
mov
and
mov
mov
or
call
das
xchg
jp
or
dec
pop
das
push
jo
mov
jl
scas
les
lock
shl
adc
sbb
cmp
rorl
push
ud1
jp
fnstsw
dec
add
push
nop
inc
add
lods
ds
movsl
inc
repnz
lods
xor
out
fstl
cwtl
ds
push
cmp
mov
jae
je
xchg
push
push
in
xchg
bound
adc
mov
dec
pop
mov
repnz
call
inc
test
test
inc
fisttpl
add
push
xchg
insb
xchg
rcrl
and
mov
add
sbb
mov
cli
mov
pushf
add
into
xchg
push
xor
loopne
imul
xchg
push
and
lods
adc
fsubr
loope
fidivs
aam
or
mov
in
mov
cmpsl
pop
js
fsubl
or
add
fiadds
pop
lock
adc
out
stos
leave
push
aam
xchg
popf
jle
sahf
daa
cwtl
aaa
and
in
or
jmp
push
dec
mov
xchg
iret
pop
sbb
mov
mov
push
or
jge
jb
sub
cmpsl
lds
jbe
cmp
cmp
scas
cld
or
add
cmp
adc
movsl
dec
pop
daa
out
fimull
stos
rcl
dec
ljmp
jmp
or
mov
jecxz
mov
mov
pop
test
and
push
insb
pushf
mov
mov
jo
jb
mov
ja
mov
push
jle
mov
cs
sbb
and
cmpsb
mov
test
and
add
mov
jg
fisubrl
out
lea
push
shufps
sub
and
test
gs
stos
pushf
jo
xlat
je
loopne
or
mov
std
movsb
lock
mov
jne
imul
test
loopne
or
mov
ret
rolb
jge
stc
sti
cmpsb
and
popf
fcomip
pop
lods
das
add
jecxz
ljmp
jae
mov
mov
mov
xor
pop
cld
adc
xchg
push
adc
sbb
fsubrl
test
fsubl
mov
jmp
jns
mov
test
jno
inc
sub
or
mov
pop
fiadds
pop
lcall
int
and
and
jb
in
fucomip
insb
sub
sbb
pop
inc
mov
in
adc
icebp
mov
jl
xor
cld
into
out
data16
xor
dec
out
pushl
or
cmpsl
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
add
ja
add
pop
add
add
xor
rcr
out
mov
mov
imul
pop
fsubrs
adc
adc
lcall
mov
xor
cmp
lahf
push
scas
mov
adcl
mov
mov
add
sahf
xchg
arpl
mov
and
add
add
sub
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
clc
lahf
and
mov
push
out
and
xor
cmp
sub
lds
adc
test
dec
stos
test
pop
movsl
lea
mov
iret
fists
aad
sbb
pop
cmp
adc
cmc
push
pop
test
inc
aas
xor
pop
sub
sub
addb
into
add
pop
add
add
std
mov
cli
xor
lods
lds
adc
aam
inc
repz
xchg
jp
adc
in
loopne
fs
aas
lcall
mov
clc
jmp
mov
xchg
fmull
inc
icebp
ror
xchg
xchg
sarl
lcall
add
add
and
aam
aam
ljmp
je
ds
ds
into
add
pop
add
add
and
insb
mov
mov
jp
cmc
cltd
popl
data16
xor
push
push
and
and
pop
inc
mov
push
outsl
test
push
ret
addr16
loop
mov
call
push
push
stc
stos
adc
jmp
or
sub
dec
jmp
aas
hlt
add
mov
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
pop
in
sub
lret
adc
adc
cwtl
mov
cmc
dec
pusha
fmul
jo
mov
inc
mov
sti
fwait
loopne
xchg
inc
arpl
adc
lods
ljmp
fadds
inc
mov
js
adc
push
ret
inc
xchg
cld
inc
cmpsb
mov
mov
ficomps
push
ds
sbb
out
lods
cmp
stc
stc
repz
sbb
pop
add
add
ljmp
inc
sahf
in
insb
les
pushf
and
and
and
inc
dec
mov
in
jecxz
sbb
sub
scas
fldcw
dec
mov
sti
and
mov
xchg
incl
inc
stos
popa
mov
mov
rorl
push
pop
add
inc
gs
aaa
push
cmp
add
add
scas
mov
out
outsb
add
es
mov
shll
jle
ja
or
push
push
aad
in
lahf
and
push
mov
xchg
loope
mov
gs
in
mov
jno
jb
mov
mov
mov
cmp
dec
ds
mov
inc
insl
in
dec
inc
sub
das
jle
jg
imul
mov
loope
add
add
xor
popf
and
push
popf
jo
jecxz
addr16
pop
cmpsb
xor
fbld
adc
jo
addl
test
mov
pop
or
mov
lds
in
mov
jl
test
mov
xlat
test
sbb
cmp
and
mov
mov
addr16
and
mov
mov
mov
mov
add
add
test
add
sbb
jbe
psllw
and
imul
and
mov
leave
scas
xor
or
sbb
cmp
cli
aas
and
inc
and
fwait
sbb
test
mov
lret
mov
dec
aas
xchg
jo
addl
add
add
or
ret
lods
sub
mov
loop
loop
add
add
out
pusha
push
outsl
push
jle
insb
movsb
xchg
cmpsl
scas
push
clc
mov
pop
jae
dec
lea
add
or
test
jge
xchg
cld
mov
pop
scas
cli
fnsave
xchg
cmp
shrb
mov
sti
jnp
push
push
rcrl
test
outsb
jne
sbb
add
fld
add
ror
outsl
clc
ror
jmpw
loop
add
add
aaa
jbe
dec
pusha
mov
mov
dec
mov
lods
push
icebp
jne
roll
aaa
pushf
xchg
jg
pushf
insb
dec
std
leave
mov
fwait
ret
jmp
add
and
movsb
test
sar
fs
mov
dec
repnz
sub
cmc
addr16
out
lahf
loope
mov
aas
dec
jg
faddl
popa
pop
lock
out
repz
mov
ret
in
xchg
pop
shrb
loop
add
add
add
add
jmp
cmp
int3
sbb
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
scas
sbb
mov
sbb
add
inc
add
push
inc
add
sbb
add
push
inc
add
sbb
add
mov
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
inc
add
or
xorl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
sahf
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
xchg
sbb
add
sbb
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
sahf
in
fbstp
pop
add
add
flds
sarb
in
insl
xchg
mov
data16
mov
inc
sbb
cwtl
push
sbb
sbb
fsubrs
xor
das
pop
setno
xchg
cmpsb
mov
clc
fdivrs
sbb
pop
stos
cmpsb
push
xor
jmp
pop
mov
jle
or
shlb
sub
cli
jl
xlat
push
inc
mov
add
pop
add
add
push
cli
out
cld
and
push
loope
insb
cmp
or
idivl
push
cmpsl
mov
in
mov
mov
add
sub
sbb
mov
or
mov
push
enter
sbb
xchg
scas
mov
rcl
xor
xchg
or
fidivrl
sub
jno
mov
add
add
stos
pushl
xchg
push
adc
xlat
add
pop
add
add
cld
or
pop
mov
cmp
jbe
adc
push
push
jb
sahf
dec
rcrl
xchg
or
pop
dec
pop
insl
out
outsb
ja
cmp
aaa
push
xor
pop
jg
jecxz
mov
sahf
mov
aam
out
lods
push
cmc
hlt
pop
mov
cmp
cmp
in
fimuls
jb
adc
add
pop
add
add
rcrl
push
fcompl
fiadds
jae
sub
push
scas
loop
xbegin
outsb
pusha
loope
test
hlt
rcrl
ss
push
dec
out
inc
popl
push
fmull
lods
arpl
mov
xlat
push
jg
dec
jnp
xor
scas
inc
inc
sti
loopne
jg
sub
add
fnstenv
std
negb
sub
and
xlat
add
pop
add
add
add
mov
push
pandn
add
push
gs
loopne
add
sbb
cmpsb
shr
inc
push
jne
dec
lods
cwtl
rclb
push
mov
xor
xor
inc
push
shl
movsb
add
cwtl
shrb
lea
add
xor
jb
inc
mov
lea
fadds
add
add
cmp
mov
outsb
std
cmpl
pusha
mov
aaa
xor
fucom
ds
xchg
inc
testl
cli
jnp
push
add
scas
pop
add
lds
xchg
out
imul
scas
loopne
mov
mov
mov
mov
mov
les
add
add
add
pop
sub
sbb
add
add
fisttpll
aad
stc
or
std
xor
mov
dec
mov
sbb
divl
fldt
push
scas
jb
mov
push
push
cmp
sub
and
shlb
push
sbb
roll
sub
and
cmovo
push
pop
insl
filds
jnp
aad
mov
push
add
xor
jb
insl
xor
and
xlat
fadds
add
add
cld
mov
fwait
mov
sbb
sbb
mov
push
mov
hlt
arpl
or
cs
iret
inc
rolb
ss
push
fcmovu
mov
push
scas
loope
jbe
pop
xor
movsb
hlt
cmpsl
into
pop
pop
pop
add
shrb
xor
mov
add
push
add
mov
out
xchg
or
xor
add
pop
add
add
leave
adc
and
sbb
daa
dec
xchg
test
sbb
pop
shll
test
xchg
pop
pop
ljmp
sub
js
jne
into
mov
dec
in
xchg
test
xchg
popf
or
roll
or
and
add
movsb
push
lcall
repz
jmp
repz
fimull
xor
cmp
pop
add
add
repnz
push
push
mov
fcompl
pusha
and
pop
dec
xlat
lahf
stc
inc
shrb
pop
scas
inc
cld
xchg
and
lds
lods
xchg
add
lods
scas
ret
push
fwait
enter
subb
int3
jne
test
pop
enter
je
cmp
jge
xor
add
pop
inc
pop
iret
pop
aad
ss
dec
lods
xor
jo
flds
add
add
jl
mov
data16
test
mov
sti
and
push
cmpsl
mov
mov
in
lock
repnz
stos
cmp
fcomps
rcrb
xor
jb
push
adc
push
test
mov
ds
ret
sbb
adc
sbb
or
sub
xor
add
add
cld
cmc
add
mov
pop
add
add
pop
ror
divl
cmpb
mov
pusha
mov
sahf
les
cmp
jno
daa
dec
push
pop
dec
xorl
jp
in
loop
in
xchg
test
and
jmp
cmpb
lods
push
mov
jo
push
adc
movsb
sub
rcrl
add
lock
jle
repz
add
pop
add
add
dec
test
rcr
jne
ss
lahf
cmp
inc
in
pusha
mov
call
push
stc
dec
lcall
dec
popa
pop
iret
inc
and
sbb
imull
pop
pushf
ja
dec
lret
inc
mov
int
out
inc
ret
push
mov
repnz
stc
roll
add
adc
adc
mov
lds
stc
fiaddl
add
add
in
jmp
dec
fidivl
movl
int3
mov
in
enter
sub
repnz
mov
es
jmp
xlat
add
adc
test
pop
xor
sar
push
sub
das
jo
movsb
es
fwait
cmp
loop
and
cmp
mov
shr
add
add
add
lret
add
mov
sti
ljmp
fnsave
jns
push
fists
mov
sub
out
sbb
pop
cmp
jo
mov
jg
xor
inc
div
xlat
dec
std
sbb
cmc
insl
scas
jns
lds
or
push
xchg
push
pop
jle
aad
and
add
add
sqrtps
cmc
das
sbb
xchg
iret
lcall
add
add
cmp
jp
sbb
mov
mov
jecxz
fisttpll
push
mov
call
jno
xor
dec
pop
xchg
aad
push
mov
lcall
inc
cwtl
daa
or
sbb
std
inc
and
fstpl
mov
outsl
mov
xor
add
and
pushf
add
sub
fildll
loopne
mov
add
add
gs
pop
inc
stc
roll
pop
pop
xor
arpl
andl
stc
test
pusha
lcall
into
jl
mov
and
hlt
test
push
cwtl
stc
fmuls
mov
shlb
incl
cmp
jge
add
adc
add
fs
testl
mov
faddl
add
add
mov
push
jge
sbb
ss
mov
test
xchg
and
push
out
test
rclb
cmp
inc
inc
imul
pusha
xchg
cmc
cmpsl
mov
sbb
dec
push
jne
addr16
imull
push
push
mov
movsl
in
hlt
push
pushf
mov
dec
dec
xor
adc
jge
mov
adc
add
daa
push
imul
sub
add
pop
add
add
sbb
mov
adc
lea
jne
cmp
or
rep
xchg
adc
push
push
fcoml
aaa
cltd
sbb
test
xor
cmp
sbb
lods
push
iret
ret
add
imul
cli
sub
ja
out
mov
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
popf
ret
cli
adc
mov
push
xchg
jnp
lret
inc
pop
out
bound
push
std
add
icebp
lahf
imul
sub
int3
lret
jmp
or
popa
xchg
dec
adc
arpl
sub
inc
push
imul
test
negb
in
cmpsl
push
mov
and
lret
or
dec
mov
je
lcall
add
pop
add
add
dec
lar
dec
je
or
push
mov
shrl
push
js
lret
jnp
push
bound
shrb
cmp
dec
fistps
outsb
outsb
out
sbb
pusha
jecxz
mov
mov
sub
std
and
or
xor
cmp
push
fmul
add
adc
stos
sahf
add
push
mov
mov
xchg
adc
push
mov
add
add
and
pop
push
adc
add
std
mov
jne
idivb
pushf
or
fwait
adcb
aas
and
aam
test
add
leave
and
and
push
out
icebp
out
mov
push
xor
dec
xchg
repnz
outsb
add
xchg
mov
lahf
into
add
std
jne
or
xchg
fcmovu
fisttps
push
cld
or
add
pop
add
add
dec
fildll
arpl
xlat
xchg
add
lcall
lcall
loopne
out
das
push
inc
adc
sub
int3
xchg
in
test
and
xchg
dec
fmul
test
adc
data16
inc
sysexit
jp
pop
fdivrs
cwtl
testb
fbld
sahf
xor
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
icebp
cmpsl
ljmp
ljmp
dec
sub
ficomps
clc
and
mov
pop
or
xchg
iret
cmpsb
mov
or
fadd
dec
test
xchg
cmc
pop
add
int3
cld
jecxz
ror
mov
push
mov
lds
sar
lods
adc
or
pop
stos
add
and
cmp
dec
xchg
mov
add
add
imul
mov
test
lods
jae
andl
lahf
cmpb
inc
sar
test
cmpsl
mov
shrl
rcrb
les
lret
test
cmpsb
cmp
add
cmp
popf
stos
mov
sti
hlt
in
pop
mov
cmp
add
popf
aam
dec
adc
pop
add
add
fucom
xor
or
push
in
aaa
outsb
dec
push
xor
mov
lea
adc
scas
arpl
les
inc
xor
aad
add
repz
add
fbld
pop
mov
fistl
sub
je
mov
sti
pop
dec
sbb
add
mov
jbe
hlt
mov
and
cmpsb
fisubs
stos
jno
add
pop
add
add
loopne
scas
lods
sub
mov
and
pushf
mov
movsb
cmp
faddl
cltd
inc
test
mov
sbbl
aad
pop
or
cmp
jge
push
addl
stc
adc
sbbl
or
xchg
pop
adc
sub
mov
xor
into
mov
sub
out
shll
add
pop
add
add
mov
push
sub
mov
adc
pop
aam
mov
sbb
into
popw
dec
insb
rcrl
mov
push
xor
adc
push
inc
lods
jp
std
les
and
mov
hlt
cmp
sub
or
fisubrl
fmull
cld
orl
in
mov
fucomi
outsb
and
pop
mov
daa
roll
add
add
cwtl
lahf
sbb
negb
lods
test
cwtl
mov
or
fidivrl
ja
mov
add
jecxz
sub
out
pusha
sbb
in
sti
sbb
pop
cmc
rorb
adc
mov
pusha
push
mov
cltd
adc
mov
and
pop
rorl
add
mov
and
add
add
add
cmpsb
ret
aad
pop
sub
int
das
movsb
xor
test
repnz
mov
mov
aas
call
push
push
test
and
push
and
or
outsl
inc
jp
mov
dec
ret
mov
add
ja
stc
ret
repnz
sbb
sub
lcall
add
add
stc
call
into
inc
mov
mov
roll
add
add
xor
addl
in
push
adc
inc
mov
jo
je
imul
ss
pop
add
add
mov
jmp
in
fadd
out
push
push
icebp
sbbb
subps
outsl
push
xchg
push
fstpt
add
sub
sub
and
dec
mov
pop
add
add
out
or
adc
loopne
ljmp
loop
mov
test
xchg
in
aaa
sarl
gs
xorb
imul
push
mov
scas
pop
pop
addr16
add
push
cltd
mov
lcall
fildl
jns
cmp
push
cltd
and
push
mov
sbb
xor
dec
aas
int3
sbb
out
loopne
lods
pop
add
xchg
aam
add
add
jl
push
pop
loop
xchg
adcl
imulb
int
cmp
ficoms
pop
jbe
add
inc
mov
jle
cmp
popa
jl
divb
push
in
cwtl
cmp
adc
or
jp
jecxz
ret
stos
adc
add
imul
stc
ja
pop
add
test
fildll
pop
sahf
mov
out
aam
add
add
ret
mov
dec
rorb
das
repz
mov
stc
je
add
cli
dec
mov
cmp
fstps
hlt
mov
repz
mov
dec
shll
mov
test
adc
pop
or
repz
inc
fwait
test
mov
mov
dec
pop
arpl
pop
jle
add
lods
fcomi
sarb
add
jne
dec
aad
add
add
fidivl
add
or
pop
insb
pusha
adc
cmpl
adc
cltd
in
push
cmpsl
aam
jp
push
imul
adc
insl
loop
pop
outsl
pop
adc
sub
fldcw
pop
mov
into
cmp
jge
gs
lock
xchg
movsb
dec
inc
and
outsl
adc
add
divl
dec
cmp
dec
sub
aad
add
add
fsts
inc
je
fsubl
std
adc
test
lret
punpckldq
test
std
fcomp
add
shlb
and
inc
adc
dec
repnz
inc
pop
mov
sti
outsb
sbb
movsl
in
cltd
xor
lcall
jmp
xchg
add
arpl
jge
mov
daa
or
add
pop
add
add
inc
push
das
dec
test
xor
popf
mov
or
mov
inc
or
mov
fdivrs
arpl
or
lret
repnz
or
aad
dec
mov
adc
cmpb
xor
pop
fcomps
insb
arpl
dec
mov
daa
ss
xor
and
mov
sbb
add
pop
add
add
jo
sti
jns
cmc
out
mov
sahf
xchg
mov
shlb
jg
mov
adc
cmp
mov
rol
mov
mov
or
fildl
insb
mov
aam
xor
iret
add
addr16
imul
imul
stos
add
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
imul
inc
push
cltd
jae
jp
andl
or
push
int
sarb
fiadds
mov
cmc
fwait
add
jg
rol
out
dec
outsb
jns
sbb
mov
or
sub
in
adc
sti
push
mov
jne
inc
dec
pop
jbe
push
aad
out
fucomip
ss
cmp
bound
fldl
add
add
and
push
cmp
pop
dec
data16
aaa
cltd
adc
adc
in
filds
mov
stos
push
jg
fs
or
sub
jp
dec
test
mov
das
push
jno
arpl
dec
xchg
addl
cmp
in
inc
lds
pop
inc
shlb
aad
xorl
fstl
outsb
jbe
lret
outsb
negb
xchg
xchg
sub
add
pop
add
add
mov
mov
orl
aas
inc
mov
inc
mov
mov
mov
sub
cld
mov
pop
test
cmp
ret
lock
test
sub
sbb
sbb
pusha
push
fucomip
cltd
pop
loope
jg
cmpsl
xchg
mov
out
push
fcom
ret
dec
mov
xchg
add
push
les
in
lahf
sti
ja
rcll
cmp
add
add
adc
testb
push
dec
adc
call
xchg
loope
icebp
mov
jg
mov
fdiv
pop
dec
push
pusha
pushf
cmp
movsb
stos
stos
or
cltd
inc
dec
aad
lcall
sbb
clc
pop
adc
mov
xlat
fs
add
add
jle
call
cli
lcall
add
pop
add
add
mov
es
lret
and
sub
stc
mov
aas
cmpxchg
inc
and
shll
mov
lret
ret
daa
cmp
mov
cmp
shl
cmp
orl
imul
aad
cmp
pop
ret
jb
and
clc
loope
stc
movsb
pop
dec
xchg
js
rcrl
or
add
test
and
pop
dec
and
cmp
pop
add
add
lret
inc
and
imul
mov
ds
out
mov
pushf
std
imul
daa
sub
loop
dec
pop
clc
in
jns
inc
jp
fs
mov
loop
cmp
cmp
movsb
mov
and
pop
and
aad
popf
ljmp
loope
or
mov
stos
lcall
ja
outsl
mov
jmp
push
fcmovu
in
xchg
fxtract
cwtl
filds
add
add
adc
loop
push
lret
stos
inc
shl
mov
arpl
outsb
push
pop
xlat
mov
xchg
jge
testl
insb
movsl
pop
xchg
leave
mov
mov
imul
nop
mov
loopne
mov
aam
xor
scas
xor
mov
add
stc
sbb
inc
jecxz
mov
xor
filds
add
add
inc
into
xlat
cmp
rorl
adc
decb
ds
xchg
xchg
mov
sbb
icebp
push
mov
sub
dec
das
pop
mov
iret
xchg
dec
fs
adc
mov
add
push
lock
jge
xor
sarb
push
dec
add
mov
icebp
and
clc
ljmp
add
sbb
jb
push
inc
cmc
sub
or
cmp
mov
in
pusha
rcl
pushf
mov
outsb
push
mov
xchg
filds
dec
fidivrs
dec
sbb
fadd
push
xchg
push
cmpsl
aaa
out
mov
adc
inc
adc
aad
push
clc
pop
adc
pop
mov
add
sbb
popa
out
add
xlat
repz
das
cli
fists
dec
es
dec
push
add
pop
add
add
mov
je
push
push
fisttps
xchg
sbb
shll
aad
push
xchg
cltd
jmp
jnp
dec
call
add
lods
cmp
mov
sbb
push
inc
push
cmpsl
mov
cltd
and
pop
ljmp
jmp
rcll
fidivrs
dec
icebp
pop
cmp
adc
push
adc
cwtl
out
stc
addr16
add
add
pop
add
add
outsb
or
inc
fmul
jns
inc
repnz
xchg
mov
dec
sbb
adc
adc
dec
movsl
sub
push
std
jle
es
and
ljmp
dec
mov
sbb
lds
add
push
int3
sub
push
mov
xor
mov
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
push
cmp
add
add
add
add
add
add
add
add
dec
cmp
add
add
inc
iret
add
pop
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
