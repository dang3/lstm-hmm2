push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
xlat
int3
sarb
movlps
inc
sti
pop
loop
lea
push
xor
sub
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
daa
mov
notl
dec
mov
or
dec
mov
std
sahf
inc
sbb
add
adc
aad
sub
push
inc
cmp
test
outsl
imul
sub
test
jg
outsl
bound
sbb
adc
inc
iret
lcall
negb
mov
outsl
cld
ljmp
add
inc
xor
dec
call
add
movsb
imulb
mov
and
jmp
leave
add
dec
jl
jnp
aad
cmp
dec
xor
jne
add
lods
bound
in
and
ret
mov
stos
push
and
pop
sub
cmp
int
sbb
test
jge
mov
int3
and
fisubl
inc
push
repz
mov
mov
pushf
ja
add
sbb
enter
xchg
idivl
idivb
push
mov
hlt
ret
cmpsb
out
mull
repnz
jp
fisttpl
cmp
stos
sbb
mov
subl
fstp
rolb
and
fmul
lcall
add
or
lock
loop
mov
pop
and
add
or
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
loopne
jae
mov
mov
fcompl
add
neg
pushf
lret
push
inc
sub
enter
sti
mov
addr16
and
mov
bound
xchg
loope
push
xchg
jge
ds
popf
jp
shll
mov
inc
xor
pushf
ja
and
mov
xor
out
adc
push
sub
gs
sub
es
into
cli
sahf
push
les
scas
sub
stc
dec
sub
mov
sbb
push
mov
pop
cmp
das
inc
sub
jl
movsl
les
mov
sti
out
pop
xor
or
mov
push
stos
xchg
lret
pop
push
sub
int
sub
push
fdivrl
daa
aam
add
dec
imul
fmul
enter
cmpsb
ljmp
imul
mov
jmp
inc
mov
dec
push
cmp
addl
and
mov
fiadds
xor
mov
ficomps
outsl
jb
fiaddl
and
mov
andb
cmpsb
mov
or
out
jmp
movb
adc
jmp
lock
sub
inc
bound
push
adc
adc
les
or
jae
test
das
pop
push
test
inc
or
fistpl
xchg
outsl
dec
or
add
rep
lret
ss
imul
pop
imul
loopne
bound
adc
dec
mov
jg
mov
inc
inc
mov
jb
es
pusha
xor
les
push
mov
pop
or
add
jns
add
or
cmp
pop
pop
inc
cmpl
roll
std
rcrl
outsb
or
and
pop
xchg
data16
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
sub
or
adc
movlps
leave
mov
jmp
cld
dec
lds
inc
xlat
movl
clc
inc
mov
shll
adc
popf
or
sahf
jmp
lods
lds
decl
jmp
mov
sub
ss
cltd
mov
outsb
mov
push
push
cs
lock
cmp
outsl
mov
mov
fcomi
pop
mov
fs
pop
rclb
or
out
fisttpll
insb
xchg
jle
mov
and
push
mov
fwait
xor
pop
pop
jp
inc
clc
sbb
shlb
popa
xchg
cmp
cmp
cmp
dec
xchg
jl
push
lea
jmp
outsl
inc
cs
les
jns
fldcw
push
cmc
inc
clc
or
mov
and
cld
in
push
popa
fdivl
enter
int
out
sbb
pop
cmpsl
fidivl
jne
jns
pushf
inc
mov
inc
xchg
pop
bound
loopne
ret
mov
flds
inc
jg
jmp
mov
inc
test
sahf
jno
xchg
mov
jg
bound
cmc
aaa
xchg
scas
cmpl
mov
mov
daa
insb
imul
es
in
ficoml
and
push
jb
sbb
pop
div
xchg
ljmp
fwait
push
mov
dec
fldt
std
outsb
inc
sub
cli
ss
out
sub
add
cmp
shrb
xor
enter
jns
test
pop
loop
adc
or
mov
push
xor
stos
and
mov
add
jo
ljmp
or
insl
jno
and
or
and
inc
addw
mov
leave
jle
dec
xor
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
fwait
sahf
mov
adc
movlps
cmp
lock
push
push
mov
aas
xor
fcoml
push
sbb
shl
in
pop
subb
mov
clc
cmpsb
pop
or
cmc
push
ret
jecxz
push
roll
subl
movsb
fdivl
adcb
sbb
shr
jbe
test
es
aas
test
xchg
sti
out
lock
dec
inc
push
xor
jg
add
js
mov
ficoml
mov
js
mov
push
es
out
xor
lods
or
sub
add
fwait
bound
mov
inc
push
in
inc
mov
sbb
sbb
cmpsl
clc
insl
mov
insb
mov
add
lea
repnz
inc
sub
jg
les
xchg
pop
adc
test
xor
inc
rorl
inc
cmpl
inc
outsl
mov
lcall
add
pop
dec
sbb
pop
xor
mov
adc
fisttpll
divl
xchg
imul
add
loope
dec
push
lods
faddl
cmpsb
scas
outsl
jb
cld
mov
mov
sub
lock
xlat
out
add
cmc
std
nop
pop
repz
sbb
jo
add
jg
ljmp
sub
lock
xor
fxch
jl
inc
out
ret
jecxz
sbb
rcll
inc
and
daa
fucom
incb
and
cmp
lcall
xor
movsl
shlb
enter
daa
out
adc
iret
pop
adc
in
xor
xor
cmp
cld
xor
jno
stc
push
or
sbb
and
push
out
aaa
enter
iret
movlps
cld
es
fs
cltd
icebp
lea
lods
sar
iret
adc
ror
shl
push
les
lahf
popl
adc
pusha
mov
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
jle
add
adc
movlps
cmp
mov
dec
nop
xchg
jnp
and
xor
mov
push
sub
stc
mov
and
test
rorl
push
jmp
sbb
and
add
sub
repz
sarl
xor
ret
sbb
xor
mov
shlb
cwtl
outsb
fs
ret
rorl
daa
mov
ds
jo
xchg
mov
mov
adc
xchg
sbb
push
daa
add
add
push
test
add
mov
insb
or
mov
jge
movsl
mov
jo
inc
cltd
cmc
imul
in
push
sahf
shrb
std
movsb
mov
push
in
adc
jno
jo
pop
push
lods
mov
mov
fxch
lods
lds
subb
stos
aaa
adcl
cmp
mov
jae
insb
dec
jg
inc
push
mov
and
bswap
xchg
outsl
jp
shl
xor
inc
add
repnz
in
sahf
fsubl
sub
mov
pusha
in
cli
mov
sub
in
pop
and
push
mov
cmc
pusha
adc
pop
mov
mov
sub
adc
aad
push
rcr
sbb
pop
inc
sbbl
mov
and
dec
mov
out
addr16
pop
adc
mov
std
es
dec
sarb
out
das
sar
frstor
xor
sti
sbb
aas
scas
sbb
xlat
pop
sub
cmp
mov
sub
push
pop
sbb
ds
or
imul
push
insb
pop
test
in
out
iret
fmul
jmp
and
add
imul
subl
xchg
scas
ljmp
jecxz
pop
push
fstps
notl
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
sbb
aad
frstor
arpl
shll
push
repz
sahf
lock
rcrb
fprem1
or
iret
sub
xor
jle
frstor
push
test
cld
sub
sbb
push
mov
and
cwtl
xor
sahf
in
mull
jb
mov
or
sbb
pop
jl
xor
cmp
add
fsubrs
int
xor
cs
fidivl
pop
lahf
lds
out
loop
cmp
mov
je
push
pushf
xor
leave
xor
neg
jl
jae
and
in
mov
lods
lret
mov
xor
xor
xchg
xchg
decb
fwait
negb
pusha
cmp
mov
inc
xchg
subb
adc
cltd
lods
lret
mov
aad
dec
stos
test
shrl
and
inc
outsl
jmp
imul
sub
dec
int
scas
xor
in
and
cmpsb
pop
jbe
mov
and
ja
and
add
jl
and
or
outsb
sub
std
inc
xor
mov
push
xor
je
dec
arpl
movsb
mov
cmpsb
and
addl
pop
pop
mov
pop
aaa
xor
dec
bnd
and
cmpl
inc
lods
fwait
testb
adc
dec
icebp
leave
icebp
insl
das
or
and
mov
jmp
lahf
ret
adc
adcl
xor
xor
aas
pop
stc
daa
dec
cltd
add
sbb
aad
push
negl
loope
loopne
cmpsb
adc
xchg
movsl
bound
xchg
push
enter
add
stos
or
aam
xchg
inc
and
jg
shrl
push
scas
inc
cmpsb
cmp
lahf
sahf
mov
je
mov
mov
lods
push
jle
loopne
popl
call
out
dec
mov
mov
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
xor
sti
sti
adc
movlps
pop
jo
das
fsubrs
inc
jg
pop
ja
inc
push
lahf
into
sub
pop
add
mov
mov
mov
nop
add
or
and
aas
dec
lods
mov
adc
les
test
ljmp
cs
outsb
fisubl
in
xchg
cmp
ficompl
adc
rorl
jno
mov
sbb
repz
cmp
cwtl
fmuls
in
push
ret
rcl
inc
mov
mov
mov
pop
fnsave
jno
mov
into
test
add
push
and
xlat
inc
je
aaa
xor
dec
mov
xchg
or
movsl
dec
cltd
out
nop
inc
je
pop
pop
inc
rcr
dec
faddl
push
dec
adc
push
shrl
out
les
lahf
mov
notb
sbbb
sub
adc
movsl
xchg
add
gs
add
push
nop
jle
jo
adc
in
insl
iret
push
ja
shrb
fnstsw
xchg
js
pop
je
xor
popa
xor
shl
xor
mov
shlb
pop
sub
pushf
mov
mov
xchg
cmc
test
push
mov
and
in
ss
push
mov
test
jle
xor
mov
mov
cs
xchg
scas
lret
icebp
cmc
nop
test
mov
jns
test
lcall
add
aaa
inc
and
hlt
sti
sbb
pop
cmpsl
push
movsb
out
sub
stos
arpl
lcall
sub
jbe,pt
or
test
dec
push
xchg
lds
lahf
pop
adc
sub
mov
mov
out
fcoml
ffreep
mov
cmp
ja
dec
sbb
xor
xchg
mov
add
xor
in
lea
mov
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
mov
div
adc
movlps
scas
cmpsb
loop
roll
mov
imul
pushf
inc
pop
push
xchg
adc
aam
insl
inc
pop
mov
dec
roll
pop
cmp
pushf
mov
mov
xchg
or
mov
nop
das
push
mov
sbb
enter
imul
daa
ss
inc
stc
and
mov
adc
push
cmp
push
dec
cmp
adc
rorl
das
or
mov
xor
inc
mov
sahf
mov
push
data16
dec
fmulp
shrl
dec
dec
jb
test
cwtl
or
fdiv
sub
imull
imul
add
rol
pop
addr16
sarb
cmp
test
cmp
mov
stos
out
icebp
aam
insl
cmp
push
pop
xchg
fsub
mov
test
mov
dec
sub
xchg
dec
push
addb
cmp
jns
cmp
mov
pushf
addr16
or
popa
xor
outsl
repnz
mov
mov
imul
mov
jno
pop
pop
aad
movsb
cmp
sub
pop
pop
jg
shl
jne
pop
add
addr16
lods
xor
cld
int
out
lea
stos
xlat
das
imull
out
xchg
or
xchg
or
call
jg
mov
scas
xchg
aam
jmp
rcll
jo
xor
repnz
aaa
enter
sub
xchg
aas
lock
mov
in
xor
sbb
arpl
or
outsl
stos
out
push
cmpsb
dec
data16
mov
mov
pop
mov
outsb
imul
inc
pop
pop
into
xor
leave
push
jge
jo
sti
iret
lods
pop
inc
jmp
push
adc
push
adc
sahf
mov
cmp
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
jg
insb
repz
movlps
cli
lods
mov
jmp
and
xchg
cmc
push
je
cli
cmp
outsl
jp
add
jle
adc
divl
fisubs
mov
mov
cmpl
iret
push
push
lahf
sub
pop
mov
dec
dec
std
adc
xchg
jmp
dec
push
mov
cmp
jns
dec
xchg
jle
push
loop
sbbb
jmp
lahf
push
push
out
mov
push
xchg
and
shrb
sbbl
or
dec
pop
xchg
addr16
js
int
int
arpl
pop
stos
xchg
lods
loope
rclb
data16
ficoml
xchg
mov
or
scas
lods
aad
push
repz
mov
dec
inc
push
and
negb
or
insb
or
pop
leave
xorl
sub
add
add
mov
xchg
cld
jmp
xchg
push
mov
cld
mov
push
lods
mov
mov
notl
and
mov
and
iret
mov
and
cmpb
adc
pop
and
in
iret
lret
pop
cs
pop
dec
or
ljmp
xchg
jp,pn
and
daa
mov
pop
arpl
push
add
iret
movsl
jne
ret
int3
inc
lea
arpl
aas
cmp
in
loop
jmp
mov
jp
fildll
mov
cwtl
jo
sub
xor
rclb
mov
adcl
and
mov
dec
movsb
inc
dec
clc
pusha
pop
in
xchg
push
cli
ret
stos
and
cmpsb
movl
pop
es
cmp
add
pusha
push
aam
repz
movsl
gs
lds
hlt
test
stc
inc
push
xor
fisttpll
fistpll
sbb
add
inc
add
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
jecxz
call
adc
movlps
sbb
mov
mov
or
cltd
fists
pop
iret
imul
xchg
cwtl
pop
jno
sar
dec
testb
insb
imul
sbb
jge
adc
cmp
sub
jmp
je
jae
cwtl
je
sahf
inc
push
rcll
icebp
int
mov
and
push
aad
xchg
add
repz
cmp
rcrl
ret
dec
cld
insl
test
sbb
sbb
adc
cld
inc
test
imul
push
clc
inc
mov
call
bsf
cmpsb
jmp
mov
fcmovu
movsb
fisubrs
sbb
inc
fcoms
cmp
pushf
lea
icebp
mov
in
cltd
outsb
add
scas
and
test
add
and
pop
pop
jg
xchg
xchg
lret
jle
push
inc
cmp
inc
pop
sub
ss
mov
or
pop
fs
jp
mov
in
jp
inc
pop
mov
jp
xchg
mull
sub
pushf
cld
dec
adc
or
out
xor
sbb
jmp
cmpl
inc
test
repnz
scas
jae
sub
push
cld
hlt
pop
ja
and
test
rcrb
adc
repz
cmp
xchg
fbld
mov
jle
es
mov
add
ja
gs
and
scas
push
iret
push
or
aas
push
insb
cli
aaa
mov
jmp
mov
loope
pop
daa
xchg
mov
push
inc
inc
rorl
lea
out
cmpsb
adc
les
mov
lock
shlb
inc
rcll
or
cmp
pop
mov
clc
arpl
es
and
dec
popa
mov
shll
sbb
movsb
movsl
or
mov
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
sub
jmp
adc
movlps
leave
js
fbld
inc
pop
pop
test
dec
sbb
xor
test
repz
test
adcb
in
fcoml
cmp
cs
cmp
dec
lock
sub
ja
in
aaa
aaa
js
dec
shrl
and
cmpsl
push
cwtl
stos
push
ret
mov
lods
and
int3
jno
fsubrp
inc
lods
arpl
rcll
sbb
add
mov
aam
fcmovb
stc
and
cmp
jo
lcall
enter
lcall
pusha
adc
scas
inc
jns
sbb
xor
pop
dec
fsts
xchg
cmp
sub
cmc
out
mov
pop
insl
push
xor
inc
add
pop
hlt
into
rol
aad
sbb
dec
xchg
bound
pop
ret
lret
ds
cld
fdivrs
movsl
sti
pop
push
xchg
push
mov
test
outsb
imul
cltd
mov
sub
les
xlat
fistps
pushf
cmp
aaa
insb
mov
sub
mov
imul
push
and
and
mov
fistpll
dec
fwait
std
dec
stc
xchg
jno
xlat
xlat
xchg
clc
dec
les
cmpsb
adc
jb
mov
cmp
lods
int3
push
add
push
pop
nop
mov
imul
cli
xor
cmp
adc
mov
lcall
sti
dec
imul
shll
cs
int3
push
mulb
movsb
in
xchg
mov
jno
movsb
into
mov
loope
dec
loopne
sahf
out
xor
lret
out
decl
mov
push
bswap
xor
pop
std
jb
rcrb
cmp
pop
dec
sbb
mov
or
mov
mov
push
loop
push
sbb
mov
xchg
adc
inc
dec
and
dec
pop
sub
ret
or
sahf
lret
jns
pop
lods
stos
cmpsl
adc
jnp
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
lods
call
movlps
pop
aad
xor
xchg
or
xchg
bound
out
repnz
push
sbb
sbb
shll
loop
jae
add
je
cld
gs
ficoml
push
loopne
js
cmp
mov
pusha
dec
adc
pop
push
lds
mov
inc
movsb
pusha
mov
dec
push
mov
std
shll
lds
xor
xorb
inc
xchg
mov
mov
cltd
loope
in
cld
loope
and
pusha
sbb
dec
cmc
fmulp
xchg
mov
dec
popa
les
shl
jo
and
scas
cs
lock
inc
or
sahf
push
scas
ljmp
ss
add
pop
mov
sub
inc
or
sahf
sbb
mov
jp
popa
into
xor
jo
popf
mov
jns
aaa
fsubrp
shll
rolb
jg
pop
mov
fisubs
push
ss
cld
scas
ret
dec
pop
dec
stc
movsl
in
int3
and
pop
or
mov
xor
jp
jecxz
int3
imul
fstpl
roll
add
ds
into
addr16
rclb
pop
push
pop
fcoms
jmp
inc
repnz
stos
mov
adc
stos
stos
int
inc
sbb
mov
mov
add
xor
jg
sbb
pop
sbb
fadds
jb
dec
or
loop
pop
cmp
je
jp
jmp
inc
pop
imul
dec
mov
hlt
cltd
pop
inc
stos
pop
enter
mov
mov
add
mov
dec
jmp
cmp
sub
push
mov
popa
cmp
mov
loopne
xlat
aaa
jb
push
xor
mov
lds
inc
call
cld
divb
and
mov
mov
mov
stc
enterw
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
mov
jl
in
adc
movlps
pop
pushf
xchg
or
pop
mov
xlat
insl
jge
cs
adc
xchg
sarl
push
out
jae
adc
jmp
subl
dec
shrl
ljmp
add
pop
cltd
mov
xor
jae
fsub
lods
lea
dec
pusha
add
rcll
jp
fldpi
scas
int3
mov
cmp
xor
pop
xchg
sub
int3
outsl
add
mov
pop
pop
repz
notl
sub
or
inc
out
rcll
test
jo
sti
cmp
imulb
xor
push
loopne
add
pop
pop
mov
jne
fisttpll
iret
sub
jmp
xchg
adc
pop
mov
adc
sbb
mov
sub
rcrl
xor
shll
cmp
cmp
stc
dec
adc
add
mov
mov
dec
mov
adc
lock
ret
jne
pop
pop
nop
xor
dec
inc
pop
sub
and
xor
xchg
test
jecxz
rolb
fwait
push
data16
pop
into
xchg
repnz
mov
mov
inc
mov
scas
jnp
fdivp
sbb
pop
or
jbe
imul
nop
lds
fucom
fs
lcall
fiaddl
clc
popa
fs
je
repz
and
cmpsb
mov
push
jne
add
push
ret
jne
sub
pop
sbb
daa
adc
mov
out
aad
xchg
leave
pop
add
push
iret
in
push
or
xor
inc
inc
divl
sbb
push
loop
xchg
flds
addr16
fsubs
fistpl
negb
mov
in
in
sub
les
aas
jmp
or
mov
inc
adc
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
gs
insb
loopne
adc
movlps
repnz
sub
xchg
stc
pop
pop
mov
aas
cmp
add
jl
adc
inc
rcrl
lret
cmp
fcomps
or
add
xor
imul
mov
dec
sar
mov
cs
vpcmpeqb
cwtl
and
jne
loop
cmp
pop
sub
idivb
fdivrl
jo
lock
dec
out
leave
int
ljmp
lods
loop
shrb
adc
in
xor
mov
lret
pusha
sarb
lret
out
ret
add
lods
push
dec
push
in
inc
mov
test
ret
sub
cmpsb
sbb
jp
cwtl
nop
popf
sti
mov
rolb
jns
fdivrs
pop
push
stos
mov
loop
dec
call
insl
lock
insl
inc
out
pop
stc
jno
pop
aas
out
ja
rorl
push
aam
jb
repnz
lods
pushf
cmp
inc
shlb
bound
in
out
out
dec
test
xchg
stc
icebp
cmp
sub
cmp
icebp
cmp
imul
out
int
and
movsl
pushf
out
mov
decl
push
fdiv
mov
cmp
mov
loop
adcl
ret
mov
mov
push
push
out
add
mov
dec
xchg
insl
out
mov
sahf
lods
mov
test
in
add
fs
sub
push
fldenv
mov
sahf
fwait
repz
dec
push
push
add
test
hlt
js
jns
cmp
push
sub
jecxz
mov
or
fldt
and
je
inc
jns
and
mov
jg
icebp
xchg
or
and
imul
adc
add
aas
rolb
adc
lea
or
scas
mov
ffree
sbb
cmp
inc
nop
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
push
pushf
les
movlps
inc
ds
ja
outsl
test
and
cwtl
cmp
mov
movsb
add
or
mov
add
scas
addr16
imull
js
into
cwtl
dec
scas
inc
cmc
std
popa
push
fadd
pop
out
lcall
cmp
sub
pusha
pop
dec
pop
js
adc
loope
sbb
mov
adc
mov
dec
rclb
scas
sahf
fs
mov
adc
shrl
sbb
inc
nop
inc
inc
xchg
icebp
mov
mov
out
mov
das
mov
bound
jecxz
ret
enter
sbb
mov
mov
lods
adc
dec
sbb
negb
pop
out
pop
stc
out
adc
and
testl
lahf
inc
sbb
imul
adcl
cmp
jne
jge
xorl
mov
test
stos
xor
pop
lret
test
shlb
repz
mov
adc
add
mov
into
jns
xor
cmp
dec
ret
pop
in
ljmp
lods
or
clc
or
pop
pop
or
mov
fs
jns
ljmp
xor
jns
das
adc
std
mov
push
pop
mov
jp
cs
test
inc
in
in
pop
or
stc
or
jae
cli
ljmp
xor
incl
sbb
stos
adc
xor
mov
pop
mov
cmp
xor
xchg
or
icebp
mov
daa
std
insl
jecxz
sub
test
popa
pop
int
and
lock
vunpcklps
xchg
lods
sub
xor
add
mov
popf
add
loope
sbb
or
out
dec
xchg
pushf
xor
add
mov
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
sarb
jmp
fcomp
adc
movlps
icebp
test
jmp
lret
sbb
dec
decb
fnstenv
sahf
call
pop
sbbb
jecxz
test
addr16
sub
movsb
popf
add
aad
rolb
push
shrl
xlat
push
push
popf
xor
lock
aas
and
ss
jmp
lea
or
mov
dec
xchg
cmpsb
dec
scas
lods
push
push
popf
or
fisubrs
mov
dec
nop
cmc
mov
sub
inc
sbb
adc
jo
inc
pop
dec
es
out
inc
scas
cmp
ss
jo
adc
push
and
inc
push
loopne
daa
adc
icebp
aaa
pop
or
jae
arpl
inc
or
or
xchg
fistpll
cld
outsb
xchg
int3
pop
push
jb
lret
jl
cli
sub
inc
push
adc
and
sub
lcall
clc
adc
ret
jno
rol
mov
jns
lahf
lahf
loop
xchg
subb
out
push
inc
mov
xchg
std
clc
jmp
cmc
popf
inc
in
mov
scas
je
and
mov
popf
lea
inc
cwtl
movsl
mov
stos
mov
test
clc
and
bound
lahf
mov
cmp
test
push
jnp
push
lods
imul
xchg
and
mov
sub
xor
jecxz
sub
xchg
lods
loope
das
sub
dec
test
lcall
sbb
das
sbb
xor
inc
cli
sbb
jmp
pop
xchg
leave
lods
int3
test
es
icebp
sahf
jle
in
push
add
push
imul
fldt
popf
movsl
jo
xchg
mov
sbb
cmc
adc
mov
pop
aas
fidivrs
jnp
xchg
outsl
or
pop
rorb
cmp
inc
testb
or
push
mov
jmp
sub
mov
fstpt
ret
xchg
js
aam
adc
movlps
xor
dec
dec
test
jecxz
mov
xchg
lea
out
jns
mov
in
leave
pop
rol
leave
mov
lods
sbb
sbb
out
imul
lock
cmpsb
xor
addl
push
and
and
jne
outsl
add
imul
sub
dec
xor
sbb
mov
lret
into
cmp
dec
mov
and
out
push
stos
inc
sbb
sti
outsb
push
xchg
pusha
cli
lock
jmp
xchg
cmp
roll
jno
test
cli
mov
pop
mov
mov
lea
or
out
mov
xor
push
icebp
leave
adc
repnz
mov
cmp
jp
arpl
cmc
mov
jl
imul
insl
pop
lods
sbb
and
inc
push
outsl
loop
adc
mov
jae
test
mov
or
mov
adc
movhps
test
xchg
mov
dec
add
nop
mov
cli
add
sahf
loop
cmpl
cmp
clc
or
sub
fadds
mov
mov
xlat
xor
xchg
dec
lahf
or
call
sub
test
loope
push
dec
adc
lock
xchg
aad
clc
jne
or
lods
shlb
or
ljmp
cli
push
rclb
jmp
out
out
sbb
sbbl
xchg
js
ret
cmp
pushf
or
rolb
repnz
mov
xchg
jg
adc
cmp
xor
xchg
hlt
inc
adc
jno
je
aam
cmpsl
cmp
les
cld
xor
or
stos
bound
enter
push
adc
fcmovne
lock
lock
jnp
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
jo
stos
rcl
adc
movlps
push
insl
imul
sub
cmp
clc
inc
push
mov
dec
mov
inc
cmp
mov
loopne
adcl
cmpsl
inc
ja
push
sarl
jle
or
ss
aad
cmpsl
xor
cmpl
adc
pop
mov
inc
leave
sub
or
iret
pusha
and
lds
dec
cwtl
dec
loop
xchg
mov
xlat
mov
jns
mov
xlat
mov
mov
addb
iret
stc
dec
lahf
fyl2x
cmpl
into
outsb
idivl
pop
dec
mov
std
into
sbb
lock
dec
cmp
push
xchg
jl
cltd
rcrl
pop
cmc
or
mov
stos
loop
jle
mov
mov
scas
xchg
push
sub
or
fwait
push
mov
mov
mov
or
mov
fildll
pop
insb
outsb
cmp
pop
clc
jmp
imul
jl
arpl
and
sbb
or
mov
bnd
inc
lods
mov
aas
inc
mov
iret
add
mov
cmp
adc
aas
cmp
sbb
mov
dec
push
or
sbb
xchg
cmpsl
inc
gs
sahf
pop
aam
ja
movsb
dec
push
inc
mov
mov
mov
pop
iret
call
add
ja
sbb
sbb
or
lds
call
ret
inc
jge
xchg
sbb
push
inc
rclb
mov
std
adc
adc
imul
fldl
xor
test
int
sub
insl
lds
mov
pop
sub
and
dec
inc
adc
sbb
cmp
lods
dec
popa
addr16
dec
dec
sub
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
or
movlps
mov
mov
lock
mov
int3
mov
ss
add
bound
rol
pop
jecxz
mov
aaa
add
inc
xchg
mov
pop
mov
and
adc
lds
adc
sbbb
mov
rorl
lods
xor
pop
js
je
sbb
and
cmp
or
aas
leave
inc
movsl
popa
mov
test
jp
mov
adc
mov
and
mov
jp
pushf
xchg
mov
outsb
pusha
inc
jmp
in
cmp
dec
dec
jecxz
ds
pop
clc
add
cmp
mov
es
mov
xor
mov
sbb
jecxz
pushf
sti
mov
faddl
add
cmc
stc
sti
and
aam
inc
push
push
mov
mov
and
xchg
cmp
sbb
lods
mov
into
mov
jae
rol
mov
nop
lock
iret
test
aas
pop
sbbb
jae
arpl
mov
scas
xchg
mov
mov
orl
sbb
js
dec
mov
aaa
fnsave
dec
rclb
xor
xchg
or
gs
mov
adc
rorb
inc
pop
data16
enter
sub
sub
cmc
push
dec
data16
push
xchg
iret
loopne
cwtl
je
sbb
sti
cwtl
int3
dec
hlt
popf
in
lock
xchg
jg
test
push
push
sbb
dec
sbb
or
push
ljmp
fs
and
inc
xchg
loopne
scas
scas
mov
adc
inc
sub
fs
cmp
outsl
fistl
mov
subl
in
xor
jae
sub
jge
pop
cmp
dec
pop
mov
add
movsb
shll
sbb
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
aad
and
enter
movlps
loop
loopne
in
fwait
add
rol
mov
fldenv
into
jmp
push
xchg
fstpt
jne
fnsave
sub
xchg
into
leave
adc
jnp
lods
mov
int
sbb
push
sti
mov
and
jl
outsb
mov
setnp
xlat
mov
aaa
cmpsb
jecxz
mov
mov
push
sahf
cmp
fsubl
dec
lods
imul
cli
jle
sbb
inc
xorb
stc
mov
stos
shll
cmp
icebp
ss
aaa
or
cmp
shll
jo
arpl
ja
call
pop
cwtl
test
sub
lahf
jge
aad
sti
and
aam
iret
les
push
cmc
add
and
ret
push
xchg
or
mov
std
ss
mov
lcall
ds
push
loopne
popf
pop
add
xchg
jmp
rol
or
or
pusha
xor
dec
cmpsl
sub
fstpl
add
sarb
dec
xchg
aad
xor
dec
sahf
in
xor
fdivl
pusha
xor
cmpsl
insb
enter
cmpsb
xchg
push
scas
je
mull
shlb
push
xchg
push
or
push
jo
pop
sbb
xchg
in
dec
mov
stc
adc
sbb
xchg
aas
loope
aaa
adc
and
call
rcrl
pop
jno
adc
ljmp
shr
and
shl
mov
jl
lea
lods
aaa
leave
mov
aad
dec
and
pusha
out
adc
out
data16
idivl
jno
push
bound
sahf
aas
orb
add
test
push
daa
cwtl
or
std
ret
mov
cmpsb
lods
cmc
cs
mov
mov
movsl
enter
mov
mov
leave
fstps
nop
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
push
pop
mov
movlps
mov
cmp
rcrb
mov
jnp
pop
setl
hlt
jle
mov
fldl
andl
or
adc
movsl
test
xor
jno
out
ja
push
cs
outsb
sub
int
fsts
add
jl
mulb
movsb
adc
add
xchg
dec
mov
or
jmp
inc
popf
fistps
add
mov
mov
lcall
sub
cmovp
jmp
cmp
std
and
push
sub
cltd
mov
mov
fwait
add
andb
into
and
jns
fists
adc
mov
mov
jl
insl
cmp
sbb
icebp
xchg
mov
adc
mov
push
test
mov
fnstenv
xor
jae
cmp
imul
enter
movsb
addr16
clc
jns
xchg
mov
cld
js
push
in
and
repnz
push
mov
mov
jmp
les
in
shl
xchg
mov
lock
scas
cmpsl
arpl
dec
add
out
mov
call
mov
lods
xor
mov
sbb
repz
in
dec
jne
inc
mov
xlat
xchg
cs
fisubrl
dec
pop
mov
lahf
add
pop
test
aaa
inc
add
ds
xchg
call
cmpsl
sbb
dec
sahf
xchg
enter
movsl
cli
int
aad
mov
add
enter
add
pop
movsb
enter
stos
dec
xor
ljmp
call
and
pushf
ja
sub
jecxz
or
sbb
cld
stos
in
stc
enter
push
push
xchg
cmp
into
cmp
mov
shll
jg
xor
sbb
jnp
adc
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
mov
rclb
movlps
ret
xor
pop
cmp
pop
test
decb
imul
sbb
pop
outsb
movsl
ss
dec
stc
je
add
dec
add
iret
dec
jle
xchg
xchg
insb
jl
pop
inc
fisubrl
jle
addl
arpl
adc
sbb
jg
or
pushf
pop
mov
mov
mov
push
cli
je
sbb
mov
lock
test
dec
and
out
insb
decl
add
xchg
fidivrs
pop
lcall
sarl
and
xor
fwait
push
idivb
ret
inc
imul
daa
dec
mov
xchg
jbe
sub
xchg
aam
pusha
std
adc
xor
jno
lcall
xchg
or
push
lcall
dec
test
cmp
add
mov
inc
cmp
push
mov
in
cmpl
cli
mov
xchg
enter
lods
cwtl
pop
mov
add
insb
mov
pop
faddp
mov
loope
jge
push
shrd
cmp
pop
movsl
mov
pop
int
loop
mov
into
imul
imul
pop
xlat
aaa
adc
in
js
repnz
push
fcomps
sbb
rorl
outsb
pop
xorb
inc
popf
xchg
mov
push
test
stos
push
cwtl
sbb
inc
stos
ret
repz
scas
dec
jg
sub
repnz
push
sbb
je
into
lods
mov
mov
or
outsb
scas
pop
outsb
andl
jno
cmc
sbb
adc
arpl
fs
fildll
sti
inc
in
pop
add
cwtl
imul
mov
sub
adc
fisubl
dec
adc
jne
ljmp
dec
mov
fwait
mov
push
adc
mov
inc
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
jbe
loopne
mov
movlps
popa
sbb
std
dec
mov
out
cltd
push
inc
or
or
push
jecxz
notb
iret
inc
hlt
fimull
cmp
fistpll
jb
mov
loop
xlat
xor
xor
imul
and
mov
inc
adc
lret
push
sbb
fnstsw
add
pop
nop
test
jmp
pushf
scas
cltd
stos
loopne
cmc
or
jmp
lea
fistpl
out
sbb
pop
xlat
fistpll
or
mov
sub
lods
jle
mov
dec
outsl
test
cmp
jp
xchg
xlat
mov
cmp
in
inc
mov
mov
pop
add
decb
push
sbb
mov
out
icebp
outsl
cmpsl
test
loope
fstl
sti
das
les
cmp
dec
cmpsb
jg
pop
push
cld
fwait
lcall
in
fidivl
pop
shlb
mov
cltd
int3
les
inc
cmp
lcall
jmp
hlt
xchg
out
scas
xlat
inc
sbbb
rorb
clc
xchg
push
jecxz
out
in
push
or
push
mov
push
cs
outsb
xchg
push
xor
adcb
out
sahf
out
xchg
pop
test
ja
sub
fadd
xchg
out
hlt
insl
ss
aas
pop
push
pop
fsubrp
xor
dec
mov
jbe
outsl
divb
xchg
dec
cmp
outsb
repz
aas
hlt
test
inc
push
mov
cmpsl
imul
adc
mov
sbb
inc
les
lea
nop
or
cmpsl
fisttpll
cmp
jge
add
cmpsb
jnp
rcll
jnp
mov
cmp
jae
sbb
pop
insl
mov
ss
stos
adc
or
lock
sbb
loop
sbb
adc
add
enter
out
mov
stos
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
jne
ss
mov
movlps
pop
es
sub
add
in
repz
adc
push
dec
xchg
mov
icebp
dec
shrl
mov
mov
enter
inc
cmpsl
push
jl
popf
mov
negb
dec
addr16
jmp
or
xor
repz
roll
lods
mov
sarl
xchg
or
mov
dec
xor
ror
mov
neg
adc
int3
sbb
sub
fsubrl
je
lret
dec
jecxz
dec
insl
mov
aas
sarb
ja
loope
paddsw
gs
mov
jmp
xor
pop
fisttpll
and
push
call
mov
mov
cmpsb
imul
sbb
addb
sub
or
pusha
xor
stos
sbb
in
std
push
jg
or
scas
add
mov
cltd
adc
pop
xchg
push
div
jbe
iret
sar
xor
pop
mov
sbb
xlat
cltd
mov
ja
lea
loope
fistpll
fcompl
sbb
xchg
and
insl
xchg
cmc
dec
ror
fisubs
pop
xchg
mov
cltd
inc
add
jg
pop
and
fisubs
inc
xor
sub
dec
shlb
test
rcpps
pop
enter
outsb
sub
push
mov
daa
nop
inc
inc
ss
jae
push
xor
aam
jbe
and
scas
bound
neg
pop
fs
sti
add
or
mov
adc
lods
mov
movsl
fs
cmp
scas
mov
iret
clc
xchg
test
jb
dec
xchg
popa
jl
and
ljmp
insb
push
data16
imul
adc
dec
push
negl
push
das
xchg
movsl
pop
loope
or
int3
sbb
mov
sarl
nop
sub
iret
test
mov
addl
push
test
and
jnp
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
add
xchg
add
xchg
inc
xlat
mov
inc
pop
scas
inc
inc
gs
lock
and
pushf
cmp
insb
mov
imul
push
add
jne
pop
jo
aas
mov
adc
test
push
push
je
cli
xor
outsl
or
in
mov
adc
call
movsb
add
lcall
cmpb
stc
xchg
test
sub
call
mov
leave
jo
push
and
nop
and
call
lcall
rorb
dec
mov
add
push
gs
cmp
or
inc
test
or
push
cmpsl
inc
loope
or
xchg
insl
movsl
xor
loopne
pop
mov
inc
ds
cmp
lret
shrl
mov
fcoms
idivb
daa
or
enter
push
ret
pop
scas
aam
sbb
xchg
xchg
cmp
xlat
add
pop
sub
fwait
xor
or
mov
cmpl
pushf
int
pop
jo
ds
lods
and
jmp
es
push
aaa
pop
lds
and
add
mov
xor
lea
jle
test
jne
fsts
jle
jbe
xchg
cmpsl
and
arpl
sbb
xor
rcl
stc
ljmp
lds
push
cmp
insb
imulb
call
lock
loope
divb
test
cli
dec
jns
ljmp
push
das
ds
or
adc
xlat
imul
cmp
outsl
push
aam
addb
std
sbb
mov
mov
sbb
sbb
jge
fwait
fwait
mulb
jno
rorl
pop
testb
add
mov
sbb
sbb
sub
imul
mov
pop
jecxz
out
cmp
fidivrl
shl
lds
push
cmp
xchg
mov
xchg
xchg
out
sbb
push
pop
jmp
imul
cltd
mov
push
mov
adc
lahf
cltd
dec
je
imul
mov
pop
sti
cwtl
adc
fdivrl
add
sbb
in
stc
cld
stc
dec
loope
outsb
or
push
sub
xor
push
cmp
inc
movsl
lea
sbb
adc
mov
mov
mov
ret
leave
sub
shlb
push
out
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
lds
mov
lahf
movlps
mov
aas
bound
add
dec
je
iret
test
cmp
mov
xchg
push
pushf
jbe
lcall
iret
test
icebp
inc
cwtl
inc
jle
push
leave
test
inc
mov
roll
and
push
mov
push
add
push
dec
insl
pushf
jg
adc
in
mov
xchg
test
sub
jle
mov
outsl
testl
push
mov
add
cmp
cmp
sbb
jle
adc
fldt
mov
dec
fwait
in
add
xor
inc
popa
xchg
scas
repnz
aaa
xchg
inc
lods
sub
lds
dec
into
std
adc
aaa
inc
ja
in
daa
sbb
hlt
inc
fwait
lcall
hlt
stos
mov
pop
iret
adc
mov
dec
xor
loopne
sbbb
xlat
cmp
mov
ja
lcall
ss
lret
mov
fnstsw
iret
enter
rcr
cwtl
sbb
mov
fnstcw
pop
aad
pop
test
mov
out
ss
sti
cmp
smsw
pop
cmpsl
adc
stc
fistpll
lods
inc
lret
sbb
cmp
cld
jmp
push
cli
xor
xchg
mov
cli
in
in
movsb
scas
xor
inc
mov
les
sbb
dec
cmp
push
call
scas
icebp
popa
mov
mov
mov
xchg
mov
sub
outsl
mov
pop
jp
out
pop
inc
push
pop
mov
nop
sub
stc
mov
jae
adc
fadds
jp
hlt
lcall
jb
adc
loope
pushf
repnz
mov
rcr
shl
mov
pushf
adc
cmp
ret
push
mov
inc
das
xor
push
jle
bound
stos
outsl
cltd
inc
sbb
push
add
mov
and
outsl
roll
mov
xor
enter
movsl
sti
push
pop
mov
pushf
cmpsb
sarl
xor
mov
aam
out
mov
or
dec
mov
sbb
lods
punpckldq
dec
sahf
sahf
sbb
iret
popf
dec
jo
cmp
into
xor
pushf
lret
popa
pop
insb
out
in
and
mov
lret
aam
add
into
jns
enter
push
ljmp
repnz
pusha
cmp
insl
pop
lods
sub
sbb
fwait
loope
push
lea
sbb
push
cmp
cmpsb
ret
pop
loop
ds
mov
xchg
daa
add
pop
mov
icebp
scas
jne
loop
stos
mov
mov
mov
adc
aam
icebp
pop
std
pushl
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
sbb
push
xor
lahf
out
jg
push
popa
test
push
aas
add
add
inc
mov
test
insl
in
jns
mov
jb
lods
mov
inc
mov
in
push
jge
xchg
push
jo
xor
in
fisttpll
fiaddl
cmpsl
shr
add
jmp
lock
ret
repz
adc
jne
xchg
sbb
lds
xchg
and
push
pushf
sti
mov
or
dec
cmp
incb
jge
iret
pop
in
add
or
add
cmpsb
daa
mov
ret
xchg
sbbl
lret
mov
xchg
mov
push
ja
sub
adc
mov
cmpsb
xchg
out
jbe
loop
in
pop
jne
mov
inc
outsl
in
dec
data16
lods
push
dec
aam
adc
in
imul
mov
adcl
sub
leave
rcr
outsl
sbb
jae
loopne
add
and
sub
cmpsb
add
fsubs
pusha
mov
or
mov
xchg
sahf
and
dec
fwait
mov
out
inc
pop
sub
ljmp
cli
icebp
in
aad
test
mov
cmp
adc
cmp
push
jmp
add
and
cmp
jmp
xchg
pop
mov
mov
xchg
xlat
push
bound
mov
inc
inc
in
mov
jb
jbe
in
jp
ss
push
and
jecxz
popf
daa
lods
jge
adc
or
mov
pop
sub
and
sub
mov
mov
test
std
iret
push
xor
aad
mov
mov
lar
clc
roll
xchg
gs
xor
scas
xchg
xor
mov
popf
mov
mov
data16
int
jbe
lcall
pop
ds
sub
add
call
add
push
test
push
lahf
cld
push
fmuls
xor
jle
mov
ds
xor
jnp
or
pop
xchg
jbe
mov
jbe
cmp
cmc
xchg
jbe
repz
fstpl
mov
mov
sbb
inc
sub
xor
push
call
fldcw
pop
mov
jge
cld
int
cmp
jnp
inc
pop
rclb
and
inc
mov
push
inc
call
cs
loope
pop
mov
and
cmp
push
movsb
lret
push
add
les
out
leave
out
push
and
adc
cmpsl
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
or
adc
lahf
movlps
adc
dec
call
clc
stos
adcl
rcll
xor
lcall
divb
sub
mov
nop
sub
xchg
ret
sbbl
rcrl
jae
std
pusha
pop
mov
xchg
sahf
fcomps
fwait
jl
shrl
ret
xor
imul
insb
mov
sbb
push
outsl
stos
xor
out
inc
xchg
out
fwait
xorb
push
ja
cmc
mov
push
pop
lcall
jge
sbb
out
add
cmp
mov
divb
xor
mov
xchg
add
cmp
daa
mov
add
out
ret
add
lret
das
mov
mov
pop
aaa
pop
lods
roll
dec
xchg
andb
sbb
add
jbe
xchg
jo
xor
out
jbe
xchg
insl
cmp
or
loop
fwait
pop
jnp
ds
fdivrs
push
add
push
int
push
pop
test
test
inc
adc
mov
jl
icebp
add
mov
push
push
mov
je
dec
test
fwait
mov
adc
and
adc
movsl
iret
mov
xor
jnp
pop
rclb
xor
sbb
popa
orb
fstpl
adc
xchg
call
sbb
fsubs
dec
in
jb
add
loope
jg
cmp
fld
mov
mov
or
shlb
mov
mov
popf
fsubs
data16
jne
imul
inc
lret
fcomp
xlat
add
pop
adc
push
mov
fldl
pop
xchg
add
pop
lahf
push
and
jns
idiv
es
daa
cmpsb
dec
lods
movsb
cmp
movsl
fisubs
mov
cmp
push
jnp
sahf
push
subb
push
push
jno
xor
dec
inc
mov
inc
aam
roll
imul
fidivrl
xchg
repnz
mov
repz
repz
movsl
and
pop
cmp
adc
jns
mov
mov
sbb
push
mov
xchg
push
fistps
mov
or
ror
cmp
mov
repnz
push
xor
mov
outsl
fsubs
inc
xchg
gs
adc
sbb
xchg
jg
insb
and
cmp
aaa
adc
xor
pusha
sti
push
enter
cmpsl
mov
mov
or
xchg
push
out
cmp
dec
adc
pop
addr16
movsb
dec
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
lods
in
adc
lahf
movlps
outsl
in
push
xor
hlt
int3
and
cli
addr16
repz
fwait
adc
clc
testl
jmp
push
adc
dec
frstor
add
mov
lcall
jae
ss
movb
fwait
rcrl
out
sbb
dec
inc
addb
cmp
lods
movsb
lret
daa
jnp
sub
dec
jae
jno
call
inc
or
add
cmp
loop
xor
loopne
adc
jae
loop
mov
or
inc
dec
push
aam
jl
xchg
xor
ljmp
loop
push
xor
lret
jb
cmc
push
jae
andl
enter
scas
xchg
add
mov
aas
fcomps
adc
loop
inc
pop
hlt
add
loope
repz
adc
out
in
mov
ret
mov
xlat
js
pop
addr16
pop
push
lahf
mov
insl
mov
dec
arpl
ds
jmp
int3
rclb
je
add
in
jmp
dec
imul
push
pop
popa
lea
adc
push
inc
and
pop
imul
jo
jl
ret
cwtl
or
lock
adc
setg
xor
xchg
cltd
cmp
xor
or
nop
cmpsl
push
jno
out
push
sub
hlt
inc
imul
jp
sti
xchg
lcall
aas
mov
push
ret
mov
push
push
mov
and
xor
les
rcrb
inc
add
mov
es
xor
loopne
gs
fdivrl
mov
and
add
push
mov
sbb
aam
dec
lahf
mov
notb
idivb
icebp
mov
mov
sar
jae
or
dec
sti
mov
cmp
mov
jg
inc
mov
and
inc
xchg
push
pop
pusha
push
push
xchg
mov
call
fimuls
and
inc
or
movsb
jno
xchg
out
xchg
mov
mov
dec
inc
sti
std
repz
or
push
jo
pop
shr
ljmp
sub
pop
lret
jmp
mov
pusha
push
and
jmp
mov
clc
and
aam
inc
cli
aam
fldl
int
imul
leave
popf
fsts
jg
dec
fcoml
outsb
dec
fnstsw
or
aam
lock
xchg
frstor
fldt
imul
sar
je
inc
rclb
add
add
pop
add
rcll
push
bound
push
ss
outsl
sahf
adc
lahf
movlps
inc
fidivl
mov
in
in
es
mov
jne
test
repz
mov
clc
loop
cmp
ljmp
das
jne
add
mov
and
popa
pop
cwtl
mov
inc
pop
and
push
fs
aam
loope
xor
insb
pop
dec
cmp
or
add
pop
fidivrs
lock
jg
lds
pop
out
insb
testl
shlb
or
dec
leave
xchg
mov
or
fmuls
leave
cmpsl
ljmp
or
push
cmp
lods
cltd
push
and
cld
rolb
inc
fcompl
jae
in
nop
mov
aas
pop
inc
and
add
xchg
sbb
cltd
jno
imul
sbb
cmp
leave
dec
jl
adc
fstpt
mov
leave
mov
fnstcw
movsl
inc
ljmp
ljmp
xor
or
jle
adc
or
adc
mull
cltd
mov
jmp
and
outsb
or
or
ret
in
xor
cmp
mov
nop
test
sub
cmpsl
push
lods
repz
loope
mov
inc
xchg
lret
pop
push
arpl
ja
and
pop
inc
xchg
punpckldq
idivb
cmp
and
push
dec
test
arpl
imul
inc
imul
mov
std
xchg
in
shlb
jne
adc
mov
jb
pop
cmpsl
int3
fiadds
int
or
pop
xchg
movsl
out
movsb
jmp
adc
inc
mov
arpl
xchg
mov
xor
test
rolb
xor
dec
cmp
and
push
clc
jle
or
push
and
mov
fisubs
aad
jp
outsl
loop
add
mov
jno
cmp
cmp
lock
scas
pusha
sbb
aaa
cmpl
nop
into
sbb
mov
xor
push
mov
pusha
pop
pop
aas
ss
mov
idivl
negl
dec
inc
xchg
sar
js
mov
enter
gs
scas
loop
not
movsb
loopne
test
js
pop
ret
test
ret
xchg
push
iret
fsubrl
xchg
arpl
xchg
push
loope
jnp
rcr
and
das
lret
xchg
sahf
fisttps
enter
adc
daa
stos
dec
mov
push
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
dec
mov
lahf
movlps
call
pop
stos
pusha
mov
js
lahf
jnp
hlt
push
jp
sbb
adc
xchg
xlat
jns
mov
rorl
push
ja
push
mov
cmpsw
sti
test
mov
popf
imul
cmp
cmp
loope
loopne
inc
xor
pop
adc
adc
jae
sbb
xchg
jo
jnp
xchg
fwait
clc
add
mov
sbb
xor
pop
or
dec
jge
xchg
push
int
mov
xor
sti
or
faddl
xlat
push
ja
bnd
jno
push
leave
cmp
and
fs
sbb
inc
push
and
imul
push
rcrb
cli
jns
int
es
cmc
fisubl
loop
push
or
out
pusha
jp
fs
mov
mov
lock
pushf
int3
shl
mov
mov
cmp
imul
xchg
xlat
rol
shll
cmp
cltd
sbb
pop
daa
cmp
test
dec
pusha
stos
loop
mov
icebp
clc
jg
xchg
movsl
lds
add
test
inc
gs
sbb
std
push
cmpsl
mov
pop
xor
repz
mov
add
imull
dec
daa
cs
lret
jmp
or
mov
dec
dec
push
sub
dec
lods
ljmp
imul
in
xor
lahf
repz
xlat
shl
pop
mov
push
adc
lret
xor
rcr
pop
add
pusha
cmpsl
pop
mov
adcl
pushf
faddl
out
dec
dec
inc
aaa
mov
testl
popl
xor
add
arpl
dec
popf
test
out
ds
push
jg
sub
nop
xor
add
cmp
sub
lods
or
cmp
loop
icebp
cwtl
jne
into
pop
cmp
adc
or
mov
mov
push
sub
adc
pop
adc
mov
mov
inc
insl
xchg
mov
xlat
and
test
jg
ja
cmp
dec
xchg
dec
pop
pushf
adc
jnp
jbe
adc
or
ljmp
insl
sti
lock
in
movsl
stc
fwait
dec
std
jae
jg
daa
sbb
cs
mov
lea
sub
pop
push
inc
cltd
pop
ret
outsb
jno
push
aas
pushl
mov
add
xchg
xchg
cli
pop
pop
xchg
repnz
mov
scas
insb
dec
jbe
cmp
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
or
adc
adc
xor
or
jg
xor
movsb
std
xchg
dec
sahf
in
fsub
fidivrl
sub
notb
push
cwtl
inc
xor
xchg
adc
out
insl
test
clc
or
mov
cmp
xor
sti
outsl
push
rcrl
pusha
mov
fisubs
mov
mov
icebp
push
mov
cmpsb
or
inc
arpl
js
mov
mov
push
xchg
adc
sbb
push
frstor
ret
out
sub
xchg
popa
sub
cltd
mov
pop
xchg
cmp
hlt
les
pop
push
jne
clc
subl
arpl
push
pop
jb
jb
mov
call
push
inc
in
into
push
call
ss
cld
mov
data16
cwtl
js
mov
jo
lock
fstps
sbb
fiaddl
lret
cld
fisubl
test
enter
lea
xor
pop
popf
and
fst
cmp
sti
dec
sub
cs
mov
cld
adc
popw
jp
lock
fnstenv
sub
ds
dec
push
repz
and
xchg
xchg
xor
push
mov
fwait
loopne
xchg
repnz
cmp
sti
mov
insl
push
jno
cmp
pop
pop
mov
mov
xchg
xor
shll
mov
mov
adc
pop
movsb
xchg
jae
adc
cmp
test
cld
push
add
scas
xlat
dec
jno
add
sub
or
mov
test
inc
fwait
adc
ret
xor
mov
or
and
add
call
push
sub
in
in
daa
movsb
dec
xor
mov
pop
in
mov
mov
push
cmp
xchg
push
mov
pop
sbb
shrb
leave
ret
push
cwtl
fnstenv
mov
call
cmp
adc
or
mov
int
jo
inc
mov
jb
lds
jno
xchg
daa
iret
test
int
adc
seto
jae
push
add
stos
arpl
add
dec
pop
push
cmp
pop
jge
inc
adc
xchg
cmp
mov
aam
mov
inc
stc
and
rorl
divb
fistl
int3
sub
fidivrl
mov
xchg
pop
mov
fildl
out
add
inc
out
mull
icebp
dec
cmp
adc
inc
sarl
repnz
xchg
push
int3
or
or
addl
or
add
js
xchg
leave
mov
cltd
fnstsw
cli
or
jbe
loope
fmuls
test
pop
or
push
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
sub
loopne
adc
adc
mov
sbb
mov
loopne
mov
jle
mov
frstor
push
xchg
fldt
stc
jp
mov
cld
cltd
pop
shlb
test
pop
adc
ficoms
pop
xchg
es
mov
mov
add
push
cmp
outsb
inc
adc
ss
push
push
sub
fcmove
je
repz
imul
push
pop
outsl
ljmp
inc
clc
mov
shlb
sbb
in
xor
dec
adc
into
push
dec
fidivrs
mov
mov
xchg
adc
mov
dec
mov
mov
xlat
les
jle
fists
or
rorb
fcomps
xor
mov
cmp
scas
mov
and
and
and
mov
test
xor
daa
xchg
jae
popa
jge
imul
xchg
aas
sbb
push
add
in
rcrb
lea
outsb
dec
in
cmpsl
dec
scas
mov
ja
xchg
push
je
mull
loop
xor
sbb
mov
push
je
icebp
mov
and
add
pop
int3
mov
in
jp
push
or
fnstsw
push
xchg
cmp
add
add
sbb
dec
mov
and
mov
jnp
out
ficoml
push
adcl
xor
mov
push
pop
hlt
aam
ljmp
ja
dec
cmp
sbb
incl
pop
push
or
xchg
repnz
push
mov
and
push
push
xabort
in
or
or
pop
loope
inc
imul
mov
jge
push
shll
arpl
inc
outsb
int
or
jns
mov
fdivrp
pop
sub
or
dec
pop
repnz
jno
cmpsb
popa
icebp
test
xchg
xor
jge
inc
lret
cmc
cmpl
add
lds
sub
outsl
in
lret
and
mov
xor
sbb
add
fadds
xchg
add
add
imul
fists
mov
es
cmp
mov
xchg
dec
or
xor
fisttpll
jl
xchg
push
mov
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
mov
pop
movlps
test
dec
xor
adc
lods
gs
mov
pusha
xor
ret
pop
push
ljmp
cmpsl
mov
aas
lret
jae
inc
cmp
jle
ret
mov
pop
cli
mov
mov
jg
data16
inc
push
mov
mov
out
scas
gs
sub
sbb
mov
adc
div
aaa
mov
icebp
ljmp
loopne
into
mov
gs
lods
push
cmpsl
stc
nop
movsl
inc
xor
mov
iret
jns
sbb
adc
pop
shlb
cmp
mov
adc
rolb
pop
inc
neg
add
js
lods
mov
push
or
mov
mov
inc
iret
push
insb
sbb
addr16
out
inc
jp
sbb
or
sub
loop
in
stos
sub
add
in
scas
jecxz
mov
pop
mov
adc
and
je
lds
fimull
fsubrp
adc
and
pushf
pop
jg
mov
shrb
stos
mov
repnz
mov
jp
inc
sti
repnz
sub
cs
pop
adc
stos
cmp
fistpll
imul
pop
xor
flds
xchg
sbb
pop
or
cmpsl
ljmp
and
mov
sbb
pinsrw
in
xor
in
stos
jne
repnz
ljmp
mov
mov
inc
cltd
and
xchg
xor
mov
fidivl
jp
xor
adc
out
push
lret
bound
mov
sbb
outsb
sbb
inc
adc
xor
insb
iret
cld
cli
jnp
stc
adc
mov
dec
mov
repz
or
push
lret
mov
lret
dec
arpl
sub
mov
aam
push
push
out
sbb
out
cs
pop
out
xchg
je
inc
sub
sub
roll
ja
push
sub
lcall
xchg
sti
aad
push
adc
xor
cmp
mov
fwait
mov
xchg
push
sbb
je
mov
mov
jmp
fdivl
fnstcw
sbb
push
cmp
lods
lahf
adcb
pop
movlps
enter
movsl
jno
adc
xor
ja
loop
push
sub
leave
cmp
and
ficoml
or
stos
test
cld
cmp
push
out
adc
in
mov
jle
and
dec
or
and
subb
xor
push
dec
fbld
sbb
out
mov
jmp
pop
shl
jbe
inc
jmp
lock
cli
jae
fwait
hlt
imul
fldcw
jno
daa
adc
lods
mov
inc
lret
ljmp
jg
scas
inc
fsubs
or
lcall
movsb
into
push
sub
fxch
rorl
jmp
mov
inc
mov
mov
aam
add
rolb
pushl
mov
cmp
dec
ror
sbb
cmp
sahf
lods
orl
or
mov
mov
or
iret
add
push
lret
lret
loope
push
flds
loope
mov
add
movsb
push
pushf
push
sti
dec
call
sub
sbb
adc
mov
adc
jmp
mov
popf
outsl
jmp
push
sarl
cmp
mov
fsubl
outsb
jl
adc
xchg
ret
loop
dec
mov
fwait
in
aas
jae
aaa
ficoms
fcmovu
shrb
pop
mov
xchg
popa
push
cmc
mov
das
lds
cmp
scas
mov
in
xchg
push
sub
iret
mov
movsb
jnp
imul
pop
adc
scas
aam
cltd
enter
shlb
xchg
cmp
cmp
scas
fldt
jo
sub
and
aas
lds
dec
jnp
adc
mov
les
fsubs
add
sbb
std
adc
iret
inc
inc
lahf
adc
dec
dec
lcall
test
jmp
sahf
cmp
xor
push
inc
push
push
and
fnsave
mov
mov
jge
repz
and
out
adc
push
cmp
add
sar
push
sti
jg
mov
inc
add
adc
inc
mov
mov
imul
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
or
pop
movlps
call
cmp
in
mov
fisubs
fdivl
add
lret
xor
mov
lahf
movsl
iret
mov
std
addr16
lret
or
es
sub
fimull
flds
icebp
push
fisubrl
std
aad
sub
mov
repnz
mov
pushf
mov
int
je
lods
fisttps
inc
and
pop
loope
xor
sbb
loopne
in
push
inc
fs
addl
dec
aaa
mov
sub
cmp
jne
and
push
rcl
call
cmp
or
jnp
nop
insl
icebp
scas
pop
fs
add
add
mov
mov
outsb
repnz
je
pop
xchg
cmp
adc
inc
mov
xchg
pop
mov
and
aad
dec
add
inc
mov
xor
push
arpl
scas
mov
adcl
test
fldl
xor
inc
adc
push
mov
jle
int3
pusha
jle
shll
out
mov
incl
pop
nop
push
jge
test
cmp
xchg
mov
and
dec
mov
ret
fsts
dec
stos
add
int3
lods
inc
jecxz
add
nop
mov
movsl
mov
lds
cmc
xlat
pop
jns
hlt
popa
call
jmp
sarl
fcmovb
gs
lea
xor
test
ficomps
inc
jge
inc
jno
std
inc
cmp
out
jmp
mov
add
in
sbb
out
into
aaa
mov
mov
andb
jmp
and
cltd
fimuls
jo
dec
and
out
jno
test
or
and
push
sarl
add
sbb
push
inc
out
jecxz
fnstcw
sbb
mov
imul
push
pop
sbb
push
mov
pop
sub
and
xor
push
mov
daa
js
push
ficoms
jno
xchg
push
aad
adc
push
mov
pop
fdivrp
clc
iret
mov
mov
ljmp
or
push
imul
pusha
pop
or
lcall
push
out
cld
shll
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
cmpsl
dec
mov
ficoms
adc
outsl
mov
sbb
mov
push
mov
bound
xchg
pushf
fildl
pushf
or
enter
and
cs
sbb
and
mov
int
mov
add
and
jns
stos
push
sarb
cs
nop
int
roll
mov
xor
mov
ret
shrl
or
ret
push
and
sbb
xor
clc
stos
mov
rcll
gs
and
jnp
pop
nop
out
xor
xor
lea
adc
mov
sub
sub
lock
and
mov
flds
sbb
cmpl
pop
lea
lds
or
lahf
dec
fmull
sti
pop
pop
enter
xchg
fisubrl
sti
loopne
mov
cmpsb
imul
dec
adcl
fistpl
mov
or
jae
cmc
dec
xorl
outsl
jns
stos
adc
or
lds
xchg
stos
mov
mov
mov
cmc
sub
ss
mov
xchg
mov
adc
dec
fsubrs
jecxz
push
jle
je
adc
dec
pop
testl
imul
sbb
dec
lret
enter
mov
rcl
mov
clc
int
xor
fildll
pop
cmp
mov
jnp
adc
jge
cmp
andl
jmp
sub
fiadds
in
aam
in
fdivl
inc
dec
cs
cmp
inc
add
and
push
mov
xor
in
stc
dec
sub
lsl
push
mov
jne
fdivr
sbbb
jae
sbb
cltd
imul
loop
and
sub
cmc
mov
pop
add
mov
leave
gs
add
lds
pop
enter
test
ja
mov
add
or
and
shlb
or
mov
daa
dec
stos
int3
je
mov
inc
inc
lods
mov
rcll
shl
std
add
sub
push
mov
dec
pop
movsb
es
xor
xchg
jecxz
imul
sub
popf
cmp
and
mov
aad
shrl
mov
addb
and
inc
cltd
pop
mov
push
add
in
fcoml
jno
or
imul
shlb
outsl
popa
push
push
jp
sub
pop
incl
fdivrl
cmp
nop/reserved
std
rolb
xchg
or
mov
or
ss
inc
cwtl
test
push
sub
dec
testb
xor
jp
mov
xchg
and
inc
hlt
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
nop
and
mov
ficoms
adc
out
lock
sub
scas
fdivrs
push
dec
mov
sahf
sub
xlat
or
pop
jmp
jl
pop
mov
sti
xchg
mov
inc
push
setne
loopne
stos
neg
and
cli
mov
jp
int
movsb
dec
mov
dec
lahf
repnz
or
add
inc
pop
sbb
negl
xor
jge
mov
pop
xchg
pop
inc
cmp
cmp
cs
and
shll
into
add
jp
xchg
cmp
pop
jnp
add
and
jns
pop
xor
mov
jne
loope
add
xor
das
mov
and
in
andb
clc
mov
int
cmp
into
inc
popf
jge
xchg
inc
dec
adc
mov
push
popf
repnz
subl
xor
movl
mov
jno
push
or
lea
pop
jle
sahf
fistl
push
add
lods
ret
sub
sbb
out
call
es
lret
iret
sbb
push
cmp
xchg
jb
sbb
test
std
adc
icebp
cmp
out
hlt
lahf
outsb
add
out
push
sub
lret
sub
jmp
mov
popa
mov
fldt
aas
hlt
movsb
nop
cmp
add
and
lret
cwtl
or
sub
sub
inc
rolb
sub
insb
jo
mov
xchg
out
push
pusha
test
movb
sub
test
pop
xchg
pop
inc
enter
push
fs
cmpsb
mov
push
lcall
in
mov
dec
cmpsb
mov
in
push
add
outsl
push
rorl
add
iret
pop
and
and
mov
push
je
mov
jg
ds
movsl
sti
sub
pop
nop
aaa
in
push
push
push
mov
out
lret
xchg
ja
mov
mov
adc
add
inc
out
ss
xchg
aaa
les
divb
aas
js
jno
add
es
jg
loopne
insl
repz
add
push
xchg
incl
mov
test
cmp
sahf
pop
push
cmc
rcrl
adc
jns
push
xchg
inc
mov
pushf
aas
int3
mov
int
inc
in
stos
adc
rcll
cmc
ja
mov
xchg
ljmp
pop
and
sbb
cli
fstpt
jb
sub
pop
xor
jecxz
mov
lea
push
inc
lret
dec
mov
jno
inc
sbb
call
sub
adc
xor
jnp
cmp
add
xor
push
adc
mov
or
xor
outsl
mov
xchg
sbb
add
and
shlb
cmp
jmp
lods
les
lock
pop
adc
push
pop
test
pushf
push
xor
push
xchg
int3
xor
jle
mov
shll
push
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
js
outsb
adc
ficoms
adc
and
adc
mov
in
shll
xlat
lret
inc
mov
testb
fdivs
xchg
adc
lods
jnp
in
sar
lea
or
inc
xorl
clc
xor
popa
enter
pop
jnp
popf
pusha
mov
int
movsl
lret
repz
dec
inc
mov
add
jbe
xlat
outsb
adc
call
and
lret
dec
repnz
or
pop
xor
cmp
adc
and
icebp
cli
pop
idivl
cmpsl
imul
sbb
mov
mov
jmp
call
and
jg
add
pop
and
pop
imul
dec
cmpsb
mov
jno
adc
mov
and
dec
outsb
repz
inc
shrb
enter
mov
xchg
imul
and
shlb
cwtl
lret
negb
popa
jmp
rol
mov
or
push
sub
and
sbbl
arpl
dec
pop
pop
cltd
pop
arpl
mov
dec
mov
push
push
push
das
fidivs
lcall
mov
push
pop
lret
sahf
push
scas
scas
dec
xor
inc
mov
mov
mov
jno
lea
xor
imul
pop
cmp
lret
xchg
jns
ds
xor
out
cmpsl
fisttps
inc
pusha
sbb
cld
std
mov
mov
idivb
and
mov
outsb
xor
pop
or
pop
push
in
and
stos
sub
add
mov
hlt
jl
xor
loope
int
fisttpll
stc
frstor
repnz
jp
in
xchg
in
mov
or
push
cmp
popa
cli
stos
push
rclb
pop
xorl
mov
pop
sub
enter
cmp
loop
fcmovne
daa
xchg
loopne
adc
add
push
sub
lcall
jp
mov
sbb
test
push
and
cmp
fnstenv
scas
cmp
or
cld
adc
sub
add
insl
mov
movl
in
push
fwait
js
push
mov
pop
int3
cli
mov
pop
mov
data16
fistl
or
and
test
stos
lret
movsb
test
pop
and
cmp
push
push
xor
pop
xchg
cmp
pop
cld
mov
in
lahf
push
lods
mov
xor
xchg
int
cmp
test
mov
mov
pop
xorl
pusha
adc
inc
sbb
lret
xlat
lret
jno
fsts
loop
push
addb
sbb
lret
outsl
mov
pop
in
xchg
cmp
mov
mov
fwait
or
lret
pushf
aas
mov
xchg
enter
dec
dec
daa
sbb
arpl
mov
add
test
andb
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
sbb
inc
stos
andl
cmp
out
movsb
mov
movsb
leave
inc
xchg
lcall
jnp
fcmove
xchg
pop
dec
mov
shlb
cmpsb
cmp
jg
aam
inc
cmp
mov
inc
out
fdivrl
fdivr
std
aaa
sbb
push
and
adc
sbb
push
stos
loope
push
outsl
jns
push
cli
push
and
enter
and
push
int
dec
cmp
rol
sbb
sbb
xchg
mov
aam
mov
pop
in
gs
roll
pop
cmp
adc
pop
jns
jl
and
repz
push
fistpll
fiaddl
mov
dec
pusha
and
jp
setg
fs
mov
jle
sub
lea
and
cmp
mov
std
mov
sbb
mov
cli
sbb
xchg
add
mov
mov
jg
mov
jo
imul
pop
ss
push
addb
les
mov
pop
mov
into
sbb
mov
push
sbb
ret
xchg
jo
push
add
mov
movsb
push
adc
xlat
sub
jb
dec
jno
rol
pop
cltd
dec
repz
dec
ja
inc
xchg
loope
xchg
or
jne
and
jnp
jl
and
xlat
pcmpgtb
push
xchg
push
fisubrl
sbb
mov
push
xchg
lods
les
leave
and
stc
and
out
jo
les
or
sbb
shrl
dec
mov
andb
mov
inc
in
jo
inc
jb
adc
movzbl
inc
cmp
inc
shll
push
push
mov
rclb
out
repnz
mov
add
addl
lret
dec
outsl
xchg
insl
mov
cmc
sub
in
cwtl
daa
popf
std
fidivl
ret
xchg
mov
adc
ds
mov
cmpsl
adc
fnsave
daa
push
cmp
lret
or
add
cld
inc
mov
mov
cs
add
sub
and
cwtl
ret
add
fsubrl
mov
cmp
call
lcall
movsb
adc
scas
cmp
lret
inc
mov
push
pop
imul
or
fistl
jmp
sbb
add
dec
cli
push
jle
xchg
mov
mov
mov
add
pop
cmpsb
scas
push
mov
fsubl
push
jbe
mov
pop
aad
shrb
mov
jg
out
rcrb
jecxz
js
pop
cmp
andnps
fstl
mov
jae
adc
in
es
fwait
inc
hlt
xchg
cmp
mov
add
inc
les
enter
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
pop
mov
adc
ficoms
adc
or
jl
out
imul
ds
repnz
test
push
lret
xor
sub
das
add
icebp
dec
mov
notb
push
jmp
add
push
jmp
adc
fs
pop
push
cwtl
hlt
movsl
inc
fstpl
shlb
mov
push
repz
test
repz
add
jno
and
jge
stos
iret
push
out
xchg
fpatan
ja
lret
hlt
outsb
stc
sub
std
add
popf
cmp
dec
maskmovq
mull
and
loope
inc
fstl
out
pushf
fldt
into
cmpsb
dec
xor
jmp
pop
push
cmc
or
sbb
fisttps
cmpl
out
push
xchg
nop
dec
mov
repnz
into
rol
ljmp
out
data16
clc
insl
out
push
mov
mov
jne
cmp
jae
fisubrl
test
jo
pushf
das
and
insl
mov
sbb
test
push
xchg
pushf
mov
push
sbb
stos
rcl
inc
adc
pop
divl
sbb
sub
mov
flds
mov
jno
and
sbbl
add
cmpsb
rorl
xor
aam
xor
std
mov
test
loope
mov
and
mov
adc
data16
lods
and
rolb
mov
xor
outsb
inc
inc
orl
ror
mov
xor
or
xor
ret
and
xor
jne
fwait
daa
lcall
outsl
dec
sti
inc
je
sbb
mov
or
and
scas
sub
adc
mov
sub
add
mov
mov
or
push
sub
les
cmp
mov
dec
pop
push
mov
push
inc
mov
shlb
inc
jge
sbb
in
jl
dec
adc
pusha
dec
xchg
and
test
test
xor
push
fistl
ficoms
mov
inc
ja
lock
push
sbb
cltd
andb
jae
mov
jo
cmpsl
pop
ret
xor
adc
sbb
mov
add
sbb
add
pop
jl
cmp
lods
fcmovbe
scas
test
scas
loope
filds
fisttps
xlat
inc
fwait
out
lods
pop
mov
dec
aad
jg
push
sub
adc
icebp
jp
mov
sarb
lods
out
dec
pop
jecxz
jo
ror
mov
mov
cmp
and
mov
pop
dec
xor
or
mov
loop
adc
mov
in
loope
mov
lods
xchg
repnz
jbe
mov
xchg
and
mov
in
or
dec
data16
xchg
mov
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
sarb
pop
adc
xor
adc
lcall
mov
cmpl
xorl
sub
mov
jo
in
popf
cwtl
stc
or
lahf
test
mov
xor
sbb
and
dec
sahf
fs
pop
stos
nop
sbb
fwait
jg
sbb
xchg
insb
das
push
xchg
xchg
inc
pop
fadds
add
outsl
mov
push
pop
add
fistl
dec
mov
ljmp
push
jl
and
and
dec
imul
shlb
sub
jecxz
xchg
ss
ljmp
arpl
imul
pop
test
testl
ds
jbe
lcall
loopne
mov
popa
dec
pop
fnsave
es
add
inc
gs
fdivrs
cmp
shrb
sub
or
pop
cmp
sub
xchg
cmpsl
xor
adc
ret
fs
pop
mov
adcl
pop
push
mov
imul
adc
mov
sbb
push
in
adc
mov
icebp
push
inc
rorl
jnp
push
shlb
nop
and
ljmp
fisubl
popa
push
fwait
icebp
push
dec
test
jno
movups
out
dec
js
lret
cltd
ja
xchg
cmp
scas
fstpl
inc
ss
test
mov
inc
and
xor
fwait
dec
pop
jb
jns
inc
jo
out
pop
push
aam
scas
stos
iret
test
sahf
adc
add
mov
outsb
clc
mov
fsubrp
xchg
jbe
aas
pusha
outsb
add
add
xchg
loope
or
mov
push
int
jmp
mov
cmp
lds
adc
fdivl
aad
aad
imul
test
inc
ret
orb
inc
mov
or
inc
aas
pop
jns
rcrl
ret
pop
cmp
fsubl
out
icebp
and
and
lods
in
sub
push
int
jg
and
or
out
push
aas
insl
pop
mov
sub
scas
negl
xchg
jns
cmpsb
inc
or
mov
movsl
push
adc
push
aas
add
in
dec
ss
je
cltd
loopne
je
arpl
enter
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
adc
adc
xor
adc
iret
in
xor
lahf
pushf
mov
cltd
cmc
cmp
mov
cmp
or
rol
mov
adc
stos
push
jl
xor
inc
mov
cmp
nop
push
push
icebp
gs
pop
rol
push
push
push
pop
push
dec
xor
inc
shlb
notb
frstor
xchg
mov
add
mov
jb
sub
movsb
adc
aas
mov
jbe
jne
arpl
or
outsl
insl
lods
lcall
dec
xchg
decb
xchg
pop
shl
pop
enter
cmp
insl
sahf
fcomip
mov
arpl
cmp
mov
jecxz
adc
pop
and
and
xor
cltd
jns
and
inc
mov
or
stos
xchg
andl
loope
dec
mov
int
in
sub
int3
out
adc
cmpsb
add
in
sbbl
mov
fwait
pop
sub
out
mov
iret
sbb
dec
dec
jg
outsb
mov
mov
xchg
dec
int3
jg
dec
push
and
test
jg
cwtl
push
sbbl
adc
sahf
dec
pop
jbe
popf
pop
adc
imul
mov
push
popf
and
jno
or
cmp
jb
mov
xchg
push
gs
mov
jecxz
xor
add
call
xchg
adc
outsb
fadds
dec
pop
mov
and
or
insl
das
pop
popa
mov
xchg
movsl
push
cld
and
clc
or
lcall
in
imul
xor
mov
lret
ja
push
call
lahf
pushf
push
iret
cmp
gs
mov
lret
xor
icebp
xchg
inc
push
dec
cmp
pop
das
or
cli
jno
ret
aam
and
cmc
sbb
not
setbe
inc
sub
inc
xchg
fcmovne
cs
in
cmp
push
jecxz
sbb
mov
inc
adc
divb
nop
push
aaa
pop
push
dec
mov
cs
aas
rorl
inc
pop
dec
in
stc
add
or
addr16
pop
out
cmc
pop
outsl
add
filds
loop
jg
and
popf
je
cmp
and
les
cmp
in
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
sbb
adc
push
adc
adc
push
repz
icebp
js
cmpsl
mov
out
xor
lods
in
out
jns
mov
cwtl
push
push
jbe
mov
mov
nop
adc
pop
mov
nop
and
push
dec
pushf
rorb
test
lods
xchg
rclb
mov
mov
mov
repz
movsl
lea
stos
arpl
cmp
adc
mov
xchg
das
rcl
test
cli
mov
cmp
push
aam
pop
push
lcall
loopne
sahf
mov
test
sbb
arpl
shl
fnstcw
or
jb
imul
rorb
insl
pop
adc
xlat
xor
and
fbstp
enter
sbb
dec
ficoml
mov
mov
mov
mov
lahf
cmp
les
push
in
mov
jecxz
mov
loop
ret
dec
add
inc
out
mov
jge
add
lods
jns
outsb
jne
fwait
out
xchg
mov
test
outsl
mov
pop
cmp
xlat
xor
inc
pop
or
xchg
mov
pop
inc
imul
lods
xor
fnsave
inc
push
mov
or
int3
fistpl
loope
xrelease
lcall
adc
stos
ret
pop
lds
jne
adc
mov
std
adc
xorl
mov
inc
enter
mov
stos
aas
mov
jecxz
mov
je
xchg
push
aaa
loope
outsl
fwait
mov
pushf
xor
push
mov
filds
pop
ss
mov
pop
cmc
mov
pop
dec
cli
scas
in
std
out
aad
xchg
pop
inc
ret
out
sub
js
push
xchg
push
fwait
mov
push
sbb
or
pop
xchg
lcall
loop
inc
and
push
gs
jmp
cmp
gs
jg
push
scas
mov
sub
rcl
in
or
sub
stos
int3
push
jl
inc
jmp
repnz
xchg
sub
inc
test
loope
je
enter
jecxz
dec
in
push
mov
dec
in
movsl
stc
xor
in
sbb
rclb
leave
movsb
in
mov
sbb
jb,pt
aaa
andb
lods
jnp
mov
imul
arpl
scas
or
pop
push
jno
test
clc
lea
mov
loopne
mov
aad
hlt
push
movsb
sbb
or
sub
decl
pusha
xor
mov
or
sti
mov
push
popf
stos
and
inc
xchg
or
stc
push
mov
fstps
ret
add
lds
test
push
add
scas
sbb
xchg
sahf
psllq
lods
lds
cltd
jg
adc
sbb
mov
xor
push
in
cmp
enter
and
dec
push
sbb
adc
sbb
nop
mov
mov
aad
mov
pop
lods
push
jo
and
add
jb
sahf
cs
inc
adc
cli
insl
inc
push
lods
sbbb
shrb
xor
out
push
xorl
push
xchg
fbld
loopne
das
xchg
add
dec
jno
stos
imul
push
sbb
leave
dec
movsl
aaa
sbb
xor
sbb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
rclb
xor
adc
adc
adc
inc
xchg
xor
ljmp
pop
dec
rorb
inc
push
cmpsb
dec
ret
mov
in
and
jbe
mov
mov
sub
cmp
mov
sarl
fstpt
loop
push
adc
out
cli
in
int
incb
pop
xchg
clc
in
sbb
scas
icebp
or
or
ret
lods
inc
mov
fdiv
xor
nop
lret
aaa
sub
dec
cmp
jnp
sbb
mov
loopne
xchg
add
rol
xor
test
adc
pushf
xchg
jne
dec
shrl
test
pop
cmc
inc
lea
test
lods
lret
lret
aaa
jnp
sub
jnp
mov
mov
sarl
xchg
jno
in
mov
xor
mov
leave
shrb
imul
sbb
sub
pop
jb
out
or
push
mov
dec
xor
or
cmc
adc
sarb
pop
dec
in
xor
add
incl
dec
push
cmp
adc
mov
add
sub
mov
mov
mov
xorl
sub
sbb
flds
mov
popf
outsl
in
nop
mov
pop
test
testb
cmp
out
in
mov
test
stos
mov
mov
popf
iret
xchg
call
push
dec
push
push
ja
jae
sub
jnp
ss
fiadds
rcll
sub
movsb
mov
aam
jno
sbb
xchg
sbb
adc
sub
jle
pop
hlt
sarl
push
mov
adc
cmp
cld
push
jg
cmp
lahf
repz
divl
in
add
ljmp
jmp
jg
test
push
pop
mov
cs
or
pop
mov
jne
mul
mov
hlt
lock
jnp
popf
jbe
lods
add
in
decb
xchg
sbb
mov
mov
sti
fnstenv
cmp
or
add
cmc
andl
fcoms
mov
xor
dec
fcompl
jns
lea
mov
pop
sbb
mov
mov
xor
mov
loope
jmp
scas
push
mov
sbb
lods
loope
cltd
inc
lods
ds
sub
fstpl
inc
xchg
or
and
lods
flds
sub
lea
or
mov
jl
sarl
dec
dec
std
repnz
xchg
and
dec
add
in
cli
loop
mov
aaa
shl
sub
cmp
mov
mov
mov
rorl
movsb
loopne
or
stos
pop
dec
stc
les
mov
stos
lds
adcl
aad
adc
xchg
jo
rcrl
or
ss
xor
jae
inc
int3
adc
add
stos
stos
pop
in
loope
sub
out
cmp
jae
mov
mov
out
lods
shlb
push
loop
push
je
pop
insb
xor
cmc
push
imul
mov
sub
hlt
or
leave
mov
mov
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
dec
mov
mov
push
adc
adc
lret
leave
xchg
outsb
mov
in
xorb
mov
inc
mov
or
sbb
not
aas
dec
mov
cmp
fs
jo
insl
das
sbb
inc
test
stc
push
ljmp
cs
and
lods
arpl
loopne
mov
adc
data16
and
fildl
mov
fmull
push
cmp
ss
mov
repnz
pop
fwait
notb
mov
push
dec
mov
pop
adc
lods
mov
mov
mov
push
dec
dec
test
mov
rcr
and
or
mov
cmp
cmp
out
sbb
push
push
push
loope
pop
inc
jo
mov
ret
lea
mov
aad
jno
xchg
ja
xchg
fsubs
dec
xchg
sarb
or
repnz
dec
cmp
ja
iret
pop
inc
icebp
cmpsl
enter
stc
push
loop
jns
shl
mov
popa
add
rorb
pop
sub
mov
pop
jbe
dec
mov
adc
pop
pop
mov
xorb
fwait
mov
xor
pop
mov
in
xor
pop
push
mov
pop
outsb
sub
dec
xchg
divb
outsb
sbb
jnp
int
push
jne
outsl
subb
lods
fidivl
pusha
hlt
sub
mov
push
or
stc
sbb
mov
popa
cmp
adc
xchg
outsl
shrl
sub
cmp
adc
mov
xchg
lods
daa
mov
bound
scas
fadd
push
js
dec
ja
lea
imul
jl
xor
shlb
pop
mov
xlat
xor
aas
add
add
stc
into
fldt
dec
ret
pop
add
insl
cmpsl
jne
in
push
leave
pop
jp
pushf
movsl
stos
inc
in
pop
push
lods
cmpsb
das
pop
sub
cwtl
testl
leave
add
pop
incb
andl
push
rorl
add
fists
mov
and
data16
pop
push
stc
lock
scas
mov
mov
push
leave
cs
mov
daa
in
das
lock
enter
ficomps
push
inc
cld
sbb
jl
sbb
inc
xchg
and
xor
push
jno
es
jecxz
loop
imulb
push
das
mov
insl
and
jmp
mov
nop
sbbl
cs
mov
and
imul
cmpsl
or
cmc
inc
call
add
mov
mov
pop
movsl
mov
loopne
dec
sbb
sbb
daa
xchg
mov
sbbl
rorl
sarl
test
out
movsl
adc
cld
xor
or
int3
mov
cli
cmp
dec
and
mov
loop
add
push
or
sbb
rcrb
mov
scas
add
hlt
xor
imul
xor
xor
pop
mov
jecxz
rolb
pop
mov
leave
fwait
insl
notb
negl
fimull
cmp
dec
gs
sbb
push
cmp
in
push
rcll
inc
or
adc
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
and
jle
cmp
adc
adc
adc
and
in
xchg
stos
lahf
dec
repnz
xlat
sahf
push
cmp
test
popf
sub
loopne
filds
push
test
shl
in
in
stc
mov
arpl
pop
pushf
add
cmpl
xor
fcmovb
into
fmull
test
movsl
cld
xchg
mov
aad
mov
pop
cmp
or
pop
cmp
jl
push
arpl
inc
fdivrl
cmpsl
adc
push
jo
push
pop
sti
mov
outsl
dec
pop
insb
fs
add
cmp
mov
leave
lcall
out
pop
fadd
aaa
dec
mov
xchg
int3
movsb
iret
std
push
add
aam
idivl
andb
sar
jbe
sbb
je
xchg
out
adc
xchg
adc
xchg
fchs
sub
jge,pt
and
xor
cmp
fwait
cmp
pop
xchg
pop
pop
cld
test
ljmp
jne
lds
mov
jne
mov
fidivl
pop
sbb
fistl
add
jno
out
fsubr
cmp
gs
sub
test
mov
cwtl
test
arpl
imul
inc
mov
jno
jge
cltd
pop
int
out
int
nop
stos
outsb
sub
and
data16
loopne
fadds
add
adc
mov
andb
das
lods
jecxz
mov
loope
push
mov
dec
aas
insb
xlat
sbb
sbb
mov
sahf
mov
jns
jge
test
enter
in
hlt
jb
aam
or
out
sbb
dec
jo
jge
psubsw
push
sbb
inc
add
lods
lcall
bound
add
mov
inc
rcrb
jecxz
cmp
cmpsl
lret
mov
fstl
fwait
daa
mov
push
cwtl
mov
lahf
jecxz
sub
pop
cld
mov
lcall
jbe
fistpll
loop
sti
sub
ret
sbb
fsubrs
in
fwait
scas
cld
xchg
lds
jecxz
cs
gs
loop
cmp
addr16
popa
cs
pop
es
std
xchg
loope
xor
jnp
stc
adc
cld
in
xchg
pusha
cmc
push
mov
cmp
or
sub
pop
popa
xor
jo
out
daa
out
xchg
and
addr16
gs
mov
jnp
fstps
xchg
mov
cmpsb
adc
xchg
mov
inc
incl
inc
or
mov
dec
and
repnz
add
xor
outsb
and
add
mov
sahf
fwait
add
mov
lret
pop
ficomps
adc
or
arpl
xor
sbbb
faddl
sub
nop
movsl
inc
xchg
int
pop
sahf
push
iret
jge
sbb
les
push
sbb
push
cmp
loopne
aam
add
pop
xor
adc
push
pushw
in
jecxz
fmuls
adc
xchg
nop
push
aad
int3
or
mov
je
fimuls
mov
rorb
ljmp
in
mov
sbb
xor
and
outsl
pop
lock
jle
scas
adc
stos
mov
mov
clc
aam
and
sub
bnd
test
movsl
add
add
shlb
insb
daa
ret
mov
pusha
lds
std
xor
adc
adc
adc
mov
idiv
lods
mov
pop
in
push
dec
jae
xor
sub
rclb
jge
enter
xchg
lock
sbb
int
fstl
push
std
aaa
fsubrs
mov
fmull
lcall
loope
xchg
fists
stos
adc
call
jle
cmp
test
xor
push
adcb
sbb
shll
sub
pop
xor
mov
dec
xor
jo
js
fsubs
lahf
clc
mov
daa
imul
adc
outsl
faddl
pop
pop
mov
add
daa
outsb
mov
inc
mov
mov
dec
adc
cmpsl
scas
inc
ljmp
repnz
mov
cmp
cmpsb
mulb
test
je
adc
imul
and
out
sbb
push
and
lods
hlt
sbb
cwtl
sahf
in
fdivp
xlat
jbe
cli
popa
adcb
pop
inc
iret
movnti
fidivrl
adc
or
insl
int3
adc
adc
sub
jbe
xchg
add
pop
ss
dec
add
bound
cmp
cmpsb
dec
das
push
inc
scas
pop
xchg
in
sbb
cmp
aad
rcll
mov
xchg
lods
jne
xor
mov
addl
push
sarl
push
repz
insb
sbb
into
add
data16
xchg
and
repz
movsl
pop
rorl
dec
lods
addr16
or
fdivr
rcrb
and
nop
lahf
fwait
cmp
insb
addr16
je
xor
sub
ret
cltd
stc
scas
push
mov
idivb
cs
sbb
fdiv
xchg
into
sbb
push
ljmp
sub
cmc
push
pop
inc
push
sbb
fistps
mov
shr
dec
bound
imul
sub
jge
pop
push
xor
lods
test
js
jbe
jo
or
sbb
out
xlat
pause
dec
xor
xlat
sub
jmp
push
std
lods
or
sbb
fsts
adc
jno
scas
arpl
fistps
pop
xor
xor
scas
inc
fmull
add
movsb
xchg
or
mov
faddl
push
xchg
pop
or
lds
cmpsb
mov
cmp
xchg
jge
mov
hlt
adc
test
fs
add
imul
cs
mov
adc
jmp
int
aam
pop
mov
cli
xlat
mov
inc
imul
mov
cmpsl
out
daa
mov
mov
cmp
andl
jo
in
and
sbb
lods
roll
adc
pop
add
outsb
imul
frstor
xor
int3
fisubrs
loope
out
xor
loope
sub
repz
push
icebp
call
test
iret
jp
aam
and
jmp
xor
mov
loopne
popf
mov
gs
xchg
lea
testb
mov
loope
sbb
push
pop
scas
decb
jecxz
mov
cmp
xlat
adc
cmp
jne
daa
mov
cwtl
xor
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
inc
and
push
test
sbb
xchg
repz
in
inc
das
mov
pop
add
inc
rcl
jns
aas
stc
inc
repz
pusha
lea
loopne
cmp
aaa
mov
add
repnz
cmp
mov
push
das
insb
jae
movsb
stos
in
cmp
orb
sub
xor
dec
xchg
mov
addr16
sub
push
adc
add
xor
and
mov
jg
cltd
int3
jnp
pop
int3
inc
lods
in
mov
ljmp
inc
or
out
ucomiss
insl
arpl
fstl
jp
ja
and
jb
movsl
rcrl
rcrl
inc
mov
scas
sub
add
mov
push
sub
pop
cmp
pop
jecxz
sub
push
push
fucomp
in
ret
std
mov
loopne
mov
sar
test
mov
lret
mov
dec
aaa
insl
jle
mov
pop
popf
dec
js
and
bound
dec
mov
sub
mov
adc
adc
inc
or
iret
dec
xchg
jge
xor
mov
ja
mov
mov
std
pop
mov
pop
cmpsl
jns
mov
arpl
daa
or
adc
outsb
fcoml
arpl
add
and
push
xchg
push
and
js
add
outsb
sbb
pop
int
add
icebp
mov
xchg
sub
dec
xchg
jl
pop
sub
mov
dec
cmp
push
jl
fimuls
mov
fcomi
je
push
cmpsb
lock
push
pop
inc
rcrl
cs
fadds
cmp
insb
cmp
sub
clc
add
fs
xchg
sarb
cli
fldenv
jmp
je,pt
popa
test
inc
lea
div
aam
cmp
mov
out
cmp
scas
pushf
xchg
data16
sbb
test
loop
ret
aad
pop
add
sbb
mov
ficomps
andl
push
mov
int3
in
insb
movsb
push
mov
scas
imul
xor
cld
add
int
xor
aam
jne
pop
sub
subl
aad
notl
or
aaa
cmp
cmpsb
mov
and
addr16
pop
or
imul
sub
xlat
ds
aam
or
sbb
popf
inc
or
jo
pop
sub
adc
repnz
add
dec
jae
add
add
mov
jle
or
out
jnp
jns
xchg
and
add
cmp
incb
outsb
mov
jnp
mov
clc
mov
ja
stc
mov
test
mov
inc
clc
inc
add
jae
jbe
add
mov
jnp
mov
and
pop
and
ffree
inc
mov
popa
push
popa
aaa
shr
mov
mov
test
adcl
or
imul
adc
psllw
std
ljmp
jmp
stos
addr16
mov
scas
daa
std
mov
std
rcll
gs
inc
inc
pop
dec
pop
jg
dec
rolb
push
es
jne
sbb
mov
gs
daa
inc
fistpll
scas
or
fs
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
mov
adc
push
adc
adc
stos
mov
sub
dec
or
sahf
add
xchg
push
cmp
ss
or
adc
bound
lds
inc
imul
out
sarb
mov
ret
js
jg
popa
adc
push
or
clc
punpckldq
add
or
addl
js
jbe
or
loopne
cltd
dec
and
cmpsl
and
jg
ss
es
pop
pop
in
mov
filds
rcll
ljmp
or
or
inc
sub
sbb
xchg
in
aad
mov
outsl
add
pop
add
jle
xor
pop
inc
stos
add
add
add
or
scas
fistl
cmp
fistl
mov
outsb
cmp
cmp
mov
jns
dec
adc
add
sub
aas
jbe
cmp
mov
push
dec
popa
je
sbb
loope
and
ljmp
je
scas
test
adc
pop
cmpsl
sub
cmp
pushf
mov
xchg
xchg
or
xor
cmpl
mov
push
push
sbb
dec
in
xor
xchg
leave
cmc
sbb
mov
test
cmp
aad
enter
sbb
mov
test
pop
fwait
xlat
add
xchg
push
sub
inc
ds
inc
xor
cs
xlat
mov
inc
cs
je
sub
arpl
adc
or
inc
mov
loop,pt
push
out
ja
mov
mov
or
mov
add
scas
fcoml
pop
mov
push
aam
sbb
insl
or
pop
or
xchg
pop
lcall
push
mov
or
lock
sbb
cmp
outsb
cmp
or
and
xorb
jle
pop
fimull
jl
push
jmp
push
add
mov
cmp
test
jl
stos
mov
and
mov
lds
jle
out
mov
add
in
test
arpl
test
push
jmp
add
loopne
cmc
inc
leave
dec
fs
stos
jl
jo
adc
arpl
int3
fisubl
mov
ret
pop
loop
mov
ficompl
adc
mov
mov
dec
in
leave
and
dec
jle
ffreep
mov
mov
xchg
sub
mov
push
add
sbb
mov
out
mov
repz
popa
mov
lods
push
mov
adc
movsb
add
mov
cmp
sbb
daa
loopne
and
cmpsb
fcomp
mov
pushf
repz
imul
dec
xchg
hlt
xchg
shrl
pop
push
push
roll
inc
mov
or
jmp
loopne
ljmp
int3
loope
jns
hlt
dec
or
fistps
mov
xor
add
sarl
sub
jecxz
je
cmp
mov
add
mov
push
cmpsb
cmp
jnp
xchg
push
xor
sub
inc
sarl
or
out
cld
fdivs
xchg
fnsave
jmp
inc
push
pop
nop
or
push
mov
and
push
add
rcr
sub
and
add
add
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
sub
ret
sbb
adc
movlps
cwtl
jle
sbb
jae
push
and
pop
mov
clc
or
or
xor
push
pop
or
push
ljmp
and
test
and
mov
push
pop
out
pop
adcb
jle
sbb
into
pop
jne
rcrb
rolb
outsl
cmp
jecxz
cli
sarl
inc
and
fidivl
mov
imul
or
jne
stc
cvtps2pd
and
enter
sahf
pop
xor
xor
xchg
fcmovne
mov
jne
or
aaa
push
xrelease
inc
dec
dec
test
jo
add
inc
dec
lods
jnp
mov
push
fwait
je
pop
xchg
inc
fnstsw
scas
scas
or
push
xor
sbb
mov
outsl
mov
gs
mov
add
addl
inc
test
inc
sub
fadds
sub
pop
pop
repz
push
inc
jo
aad
decb
mov
outsl
in
sub
test
pop
xor
je
mov
negl
ss
mov
jg
xor
out
test
test
stos
cmpsb
pop
add
dec
ret
dec
inc
mov
dec
xor
stos
daa
add
sub
fildll
hlt
jmp
stos
xor
jb
sub
xchg
pushf
add
xor
shll
lods
fcomi
sub
push
movntq
out
pop
mov
pop
fcoms
test
int
xchg
jl
cwtl
mov
repnz
pop
lahf
sbb
or
dec
shlb
add
je
jle
icebp
pop
les
add
pop
dec
xchg
bound
daa
leave
adc
sbb
push
jge
dec
xor
aam
std
pop
mov
or
loopne
pop
mov
fcomps
pop
dec
movsb
into
das
mov
xor
popf
cmpb
sub
lea
mov
jo
data16
fistps
pop
push
ss
ret
mov
hlt
mov
iret
fstp
cmp
mov
jl
clc
adc
lds
jno
sub
sub
mov
aam
mov
popf
mov
ja
cld
aaa
inc
mov
cmpsb
xchg
sub
jbe
push
pop
mov
data16
insl
dec
fsub
mov
inc
push
xchg
pop
mov
mov
inc
jg
loop
pop
fwait
aas
lock
rcll
xor
add
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
mov
mov
decb
adc
pusha
fs
loopne
jb
in
inc
daa
mov
add
push
cmp
daa
xchg
xor
mov
jbe
outsl
rcll
lock
xchg
mov
mov
ljmp
mov
fidivrs
sbb
mov
sub
cwtl
les
jl
push
mov
test
mov
dec
push
sbb
push
lea
or
call
cmp
das
inc
shrl
mov
or
xchg
stos
xor
sarl
js
ret
cmpsl
adc
push
movl
stc
mov
adc
test
std
mov
push
ds
scas
icebp
loopne
inc
xchg
fucomi
cmpsl
cmp
mov
adc
fnstenv
stos
adc
test
dec
or
dec
sbb
mov
push
cwtl
pop
pusha
data16
add
or
sub
push
mov
push
dec
cmp
jae
dec
loope
sbb
inc
add
outsb
fwait
shrl
pop
loope
mov
sti
xor
pop
push
mov
ljmp
popf
xor
fisubrs
int3
pop
imul
leave
cs
outsb
dec
mov
inc
or
bndldx
shr
in
fstl
add
scas
test
rorb
push
adc
mov
jmp
add
lods
mov
adc
push
and
or
je
sbb
cmpb
hlt
outsl
leave
or
popa
gs
fs
scas
xor
inc
lret
adc
mov
bound
rcl
fs
mov
jmp
addr16
jno
clc
scas
rcrb
mov
mov
inc
insb
ret
test
inc
stos
addr16
mov
jmp
xchg
mov
jle
mov
mov
das
lret
daa
mov
lods
mov
jno
mov
push
in
test
inc
dec
xor
dec
pop
pop
fsubs
sbb
fdivrs
pop
push
outsb
fistl
call
ja
out
cmpsb
addb
out
jmp
daa
jne
nop
jbe
popf
add
add
out
push
xchg
adc
in
out
pop
cmc
mov
bound
xchg
jp
jge
jns
mov
jno
mov
jecxz
and
pop
dec
stc
mov
push
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
sub
push
adc
decb
adc
dec
or
cmp
inc
cmpsb
ss
insb
add
push
mov
jb
mov
leave
nop
xor
push
xchg
ljmp
push
lea
insb
ffreep
lret
add
xor
mov
nop
or
in
fdivs
inc
cmp
pop
test
rorl
ljmp
jge
hlt
push
jnp
insl
movsb
mov
push
xchg
sahf
mov
add
cwtl
inc
mov
pusha
iret
xchg
push
imul
test
jp
pop
repz
test
mov
sbb
mov
in
pop
imul
jg
ljmp
sbb
inc
mov
ljmp
stos
notb
cmp
cli
nop
cld
hlt
sbb
mov
xchg
add
lods
lods
dec
lret
jbe
adc
add
imul
subb
out
lods
mov
mov
push
ds
xchg
xor
xor
mov
jns
jp
je
out
lahf
repnz
lcall
outsl
fiadds
fdivrl
xor
xchg
jne
push
lea
lret
push
or
ss
repnz
ds
or
pop
movsl
clc
xor
scas
inc
mov
xchg
bound
mov
sbb
xor
push
dec
lds
cwtl
cmp
and
stc
jecxz
ss
mov
or
mov
es
mov
in
sbb
repz
jg
cli
mov
int3
sub
xchg
or
sbb
adc
lcall
sahf
je
or
ret
iret
or
addr16
push
sub
loopne
div
icebp
pop
mov
inc
test
lret
test
enter
imul
rcll
pop
add
push
sbb
sub
cmp
stc
mov
mov
inc
push
pop
in
xchg
in
lahf
call
jnp
int3
fistps
dec
inc
roll
push
cmpsl
incl
addr16
dec
push
adc
dec
mov
pusha
push
dec
int3
dec
lods
sub
sub
cmpb
xor
mov
sub
loopne,pn
push
dec
cmpb
js
dec
ljmp
imul
or
mov
jge
into
imul
scas
mov
or
cmp
stos
sub
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
fisubl
lods
jp
adc
decb
adc
dec
daa
or
inc
pop
and
call
mov
adc
shll
icebp
mov
mov
lods
push
adc
int
inc
sub
mov
and
and
loope
imul
jnp
inc
pop
test
dec
xor
imul
push
mov
shrl
lret
leave
andb
mov
pop
xchg
cmp
test
jno
inc
dec
mov
rcrl
lcall
cmp
mov
fidivl
dec
jle
imul
adc
imul
cmp
push
enter
std
outsb
xor
pop
das
in
cmp
push
pop
push
jmp
imul
and
xlat
push
test
or
or
and
into
cwtl
sub
add
fcomps
adc
in
loope
out
add
in
xor
mov
shl
xchg
cmpsl
jmp
test
fdivrl
lock
shl
jecxz
sbb
sbb
loop
loope
add
dec
inc
mov
repz
mov
mov
popa
lods
xor
movsl
frstor
insb
mov
xchg
push
or
xchg
or
insl
clc
cmp
fsubrs
cmpsl
jb
scas
fildll
cmp
mov
push
push
jns
and
fnstsw
stc
cltd
sub
add
push
in
sbb
outsb
dec
jbe
xor
test
and
mov
mov
or
sub
cmp
or
icebp
push
das
pop
insl
pop
insl
imul
aam
pushf
mov
leave
int
or
fucomip
stos
ljmp
inc
mov
aam
arpl
fsubl
shll
xor
ja
icebp
jp
rolb
and
sub
orb
and
stos
xchg
loop
sub
mov
xchg
sub
dec
add
cs
movsl
jno
cld
test
sbb
cmpsb
ficompl
cmp
mov
inc
sub
fs
lds
xlat
add
inc
adc
fwait
ret
lahf
cli
jnp
imul
mov
jae
push
jp
add
adc
push
xor
push
and
aaa
xor
gs
adc
jb
mov
scas
icebp
mov
test
xor
cmp
add
push
push
mov
and
and
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
adc
push
or
adc
movlps
cltd
cmc
das
sbb
lea
or
fsubs
les
iret
neg
inc
sarb
imul
jl
scas
inc
cmp
push
gs
ljmp
jecxz
sub
cli
or
mov
and
cmc
stos
push
mov
rclb
mov
js
mov
sub
inc
in
loopne
leavew
cmp
lods
xchg
stc
test
or
cmp
lret
xor
lret
pusha
test
xchg
add
xchg
and
outsb
int
jns
clc
pop
push
insb
popf
fcmovnb
xor
add
jl
and
lods
pop
gs
cld
test
mov
enter
addb
pop
cmp
add
xchg
test
or
sub
pop
imul
xchg
repz
fwait
bound
mov
xchg
adc
rorl
out
fwait
insb
fldl
mov
adc
xor
jnp
sbb
inc
pop
mov
fimull
in
xchg
shll
rclb
push
xor
inc
mov
push
inc
testl
cmc
mov
rolb
out
xchg
mov
nop
jbe
push
mov
mov
push
jns
imul
inc
inc
pop
rcrb
decb
movsl
adc
test
mov
aam
sub
cmp
pop
rcr
or
sbb
decl
jge
pusha
mov
adc
leave
jmp
in
bound
cmp
stos
nop
pop
adc
add
loop
scas
add
test
cmp
mov
and
in
mov
sti
mulb
push
aad
sbb
jns
pusha
mov
jge
addr16
outsb
sub
sbb
in
pop
cmpsb
and
mov
or
call
leave
fistpl
or
test
jb
xor
lock
xchg
adc
jl
sbb
dec
push
imul
jb
aam
inc
les
popw
push
cmpsb
les
inc
dec
xor
or
mov
xchg
cmp
or
int
pop
or
mov
aaa
fsubr
sbb
xchg
add
cmp
pop
fwait
pop
xchg
les
xchg
push
mov
sbb
out
sar
dec
pop
add
jb
mov
lea
cwtl
lcall
lahf
sub
test
push
popl
cmp
rorb
and
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
inc
into
stc
call
and
out
jb
lods
add
arpl
cmc
mov
xor
jno
lahf
mov
pop
std
inc
xchg
adc
xchg
inc
push
es
fstpt
lock
js
iret
adc
pop
jno
inc
das
sub
and
out
inc
fisttpl
int3
mov
pop
inc
dec
jb
mov
pop
add
rorl
stc
mov
insl
sbb
adc
and
lret
shrl
lods
jl
scas
out
jmp
hlt
fdivrl
cmp
pop
fstl
shlb
xchg
or
mov
pop
sbb
sysexit
rcll
jp
add
nop
xchg
add
stc
pop
stos
adc
lds
jmp
cld
cmc
fwait
xchg
xlat
inc
idivl
mov
rcr
leave
mov
mov
fs
lock
dec
sbb
sub
and
addb
mov
xor
xor
icebp
cmpl
jmp
jp
addr16
or
mov
push
sarb
sub
sarb
adcb
adc
test
imulb
inc
mov
test
pop
out
inc
cs
adc
push
imul
test
jb
sub
cld
sbb
insl
push
jbe
rcl
push
cmc
pop
adc
mov
aaa
leave
add
jmp
dec
cmp
jle
ds
in
les
lret
jne
dec
inc
js
lods
fadd
dec
ljmp
xor
ret
cmp
lret
int
xchg
dec
mov
push
mov
inc
and
addb
push
xlat
mov
adc
jle
ja
movsl
jns
or
daa
adcb
addb
mov
stos
xchg
loopne
out
mov
imul
imul
jecxz
aam
and
testl
sbb
sbb
sbb
mov
loope
idiv
mov
das
sbb
hlt
test
rolb
mov
lahf
lds
pop
lea
call
popa
dec
int3
and
in
fisubl
call
subl
fbld
sub
hlt
dec
lock
jae
pop
popa
gs
cmp
in
add
je
sub
gs
sbb
inc
fcompl
insb
push
mov
lods
mov
lods
fmul
nop
js
mov
jecxz
in
cmp
xor
rorl
vandnps
xor
cmp
bound
add
inc
enter
add
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
sub
out
add
movlps
mov
hlt
sbb
in
aas
popa
or
pop
inc
inc
or
stc
lea
or
dec
sub
in
jle
dec
inc
adc
mov
ss
or
ret
pop
test
mov
test
test
push
jb
jo
aas
jp
pop
mov
adc
add
dec
mov
pushf
adc
sbb
jg
add
jle
mov
push
sub
inc
add
sbb
test
test
xchg
jno
mov
jnp
cmpsl
mov
dec
or
mov
mov
in
inc
inc
mov
outsb
mov
inc
ds
sub
xor
orb
out
mov
das
mov
pushf
xchg
loop
in
out
lcall
mov
cmpsl
pop
dec
push
xor
dec
fildll
mov
icebp
arpl
aam
inc
sub
and
jecxz
cmp
daa
leave
dec
fistl
adc
cmp
cmp
setge
dec
sbb
test
push
mov
dec
mov
mov
enter
jp
mov
je
add
sbb
dec
or
stos
mov
dec
mov
hlt
pop
adc
mov
mov
jbe
cli
push
fcmove
jae
int
shr
sub
stc
ja
shll
ljmp
push
dec
lods
shrb
imul
inc
jl
fildll
xor
xor
mov
push
sub
inc
pop
cli
test
cmp
lret
lret
or
xchg
js
cmp
inc
cmp
xchg
push
mov
jnp
mov
xor
or
push
mov
negb
lds
stos
jnp
add
push
jle
scas
rcr
inc
or
mov
cmp
jl
jnp
leave
enter
push
cmp
adcb
aaa
sub
and
and
inc
outsl
ss
pusha
jnp
out
mulb
inc
pop
into
sahf
into
test
adc
rcrl
sbb
or
jne
jo
sahf
dec
aam
out
lcall
in
test
aam
jp
nop
setp
sbb
sbb
adc
loop
sbb
push
push
call
inc
xchg
push
and
fidivs
scas
jo
fiadds
sub
push
test
pop
in
cmp
enter
push
mov
add
cmp
andl
not
or
dec
mov
mov
loope
mov
dec
out
mov
dec
jmp
ret
xchg
mov
movsl
push
sub
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
inc
sbbb
popa
movlps
cwtl
mov
xor
icebp
scas
dec
dec
dec
les
xchg
adc
sti
inc
fadd
mov
imul
nop
loope
jno
xor
sbb
int
stos
adc
fcomps
sbb
incb
xor
jnp
sub
ss
and
xor
dec
pop
push
mov
dec
or
movsb
rcrl
xor
fcoml
mov
mov
cmp
xchg
mov
jmp
or
push
les
jmp
ret
cmpb
fdiv
jno
jo
adc
hlt
icebp
iret
pop
and
ftst
cmpsl
mov
jl
aad
adcb
mov
or
imul
fimull
inc
and
jb
mov
test
ret
xchg
sub
push
mov
push
in
adc
or
lods
aad
fimuls
mov
nop
mov
and
adc
sub
pop
xchg
xor
inc
cmpsl
mov
cmpsb
stc
clc
jmp
pop
xchg
out
insb
loopne
out
cli
sti
pop
mov
cltd
and
rorl
sub
mov
jl
andl
pop
sti
and
add
imulb
loopne
add
cs
pop
and
adc
add
xchg
enter
xor
jo
push
and
orb
leave
xchg
shlb
inc
jae
in
inc
sarl
xlat
and
xchg
adc
int
data16
lods
dec
enter
lds
hlt
sbb
shll
dec
out
hlt
hlt
jno
xchg
sub
adc
fs
ds
rorl
and
lret
ret
mov
inc
mov
dec
sti
xorl
inc
sbb
adc
push
add
or
out
pop
fcomps
jl
pop
xchg
sbb
ja
lods
pop
andl
int3
int
xor
mov
aaa
rcrl
pop
addr16
iret
movsb
sub
push
fisttpll
popa
bound
fsubs
push
pop
bound
insb
pop
mov
push
jmp
adc
std
lock
dec
xchg
rclb
inc
add
add
sbb
cmp
sbb
xchg
fwait
xor
and
xor
jmp
nop
or
loop
mov
popa
pop
flds
dec
dec
pop
or
jle
sub
xchg
les
repnz
or
lcall
dec
sub
clc
mov
es
pop
or
fstpt
pop
push
mov
fcmovnb
sub
imul
pusha
lahf
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
fsubrl
cltd
notb
adc
adc
aaa
ja
loopne
les
xchg
inc
add
sub
xlat
and
push
or
mov
cmp
sub
nop
out
std
xchg
push
in
xchg
sbbl
in
mov
jge
pop
cmp
pop
jle
jns
push
out
cmp
lock
adc
pop
je
imul
inc
test
test
jg
mov
pop
aad
add
sbb
test
xor
test
iret
jno
aas
mov
rcll
imul
jbe
mov
les
xchg
xchg
lock
scas
mov
push
int3
jl
outsl
adc
pop
jge
pop
rclb
mov
sbb
inc
sub
sub
jp
adcl
out
cltd
inc
xor
push
push
inc
jns
xchg
lea
in
pop
pop
int
pop
mov
add
lahf
jl
cmp
xor
fld1
das
es
xlat
icebp
iret
jae
les
add
jne
dec
insb
mov
ss
stc
cmpsb
mov
jg
rclb
jnp
outsl
add
dec
mov
cmpsl
mov
mov
testl
xlat
pop
fcompl
sbb
adc
cwtl
inc
mov
insl
lea
xchg
pop
dec
mov
in
sub
mov
in
xor
cmpb
mov
add
stos
mov
xor
pop
cmp
add
cmp
add
push
leave
push
push
mov
add
add
adc
adc
cmpsb
ja
dec
push
push
mov
mov
jb
pusha
int3
jb
jmp
inc
popf
mov
pusha
adc
dec
movsb
or
sar
pop
mulb
in
sub
add
in
loopne
jo
into
jo
lret
ret
fadds
jmp
add
ds
jne
add
sbb
push
frstor
pop
rcr
cmp
adc
adcl
notl
add
fbstp
sti
fwait
mov
mov
lea
jl
or
dec
js
jne
fmuls
sahf
enter
push
js
cmp
mov
xchg
fcompl
mov
lret
adc
jno
dec
pop
dec
scas
es
rcl
mov
les
sbb
dec
pusha
fidivrs
dec
add
cli
sti
out
push
mov
test
lahf
stos
rol
stc
and
pop
repnz
mov
shl
push
shrb
and
je
not
xlat
fwait
jle
and
xor
mov
mov
fwait
pop
mov
hlt
mov
pop
pushf
dec
jg
dec
frstor
cmp
idiv
mov
js
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
dec
xor
popa
movlps
loopne
lcall
pop
in
cmpsl
and
and
stos
out
cmp
jge
xor
into
adc
dec
lds
push
ljmp
gs
popa
jb
sub
pop
mov
jmp
or
test
sbb
popf
xchg
push
movsb
out
xor
inc
test
enter
lret
dec
and
sub
xor
test
xchg
mov
push
sub
lcall
mov
je
fcmove
icebp
cmpsl
or
arpl
cmp
mov
popa
xor
adc
mov
mov
pop
fisubrl
inc
xchg
mov
fcoml
mov
roll
icebp
jae
fbld
arpl
int
aad
pop
inc
and
mov
mov
test
lods
push
imul
movsb
in
mov
sub
repz
mov
roll
inc
popa
ret
inc
xlat
rcr
push
pop
fstl
add
mov
mov
std
shl
mov
js
mov
es
enter
loopne
xchg
out
adc
cmpsl
shlb
mov
mov
lret
pop
mov
cmpsl
sub
lock
push
jnp
and
inc
ds
adcl
movsl
cmpsl
pop
xchg
xor
aas
lds
inc
in
jns
push
scas
testb
xor
dec
pop
repnz
mov
fdivr
outsb
ljmp
push
in
or
sub
cmc
dec
bound
xchg
inc
jne
sbbl
dec
jns
push
scas
mov
lret
fldl2t
sahf
inc
movsl
pop
mov
data16
insl
xchg
mov
jbe
fdivrs
test
scas
cmp
sbb
data16
bnd
or
push
sbb
call
insl
iret
out
sbb
dec
xor
cltd
cs
xchg
inc
aad
outsb
icebp
and
sub
movsl
dec
adc
aaa
or
aaa
adc
sbb
sub
jmp
inc
jp
fisubl
loop
ds
mov
pop
ljmp
adc
in
ljmp
inc
sar
sahf
shrb
or
xchg
push
inc
mov
pop
jmp
or
das
inc
setge
push
push
jnp
scas
rcrb
lea
pop
dec
cltd
and
jg
cltd
clc
xor
cmpsb
lret
xchg
int
test
fcomi
stc
push
std
cmp
and
xlat
mov
xacquire
sbb
xchg
rorb
or
pop
frstor
btc
mov
cltd
stc
repnz
xchg
sbb
in
jb
aas
pop
mov
lret
movsl
mov
scas
movsb
xchg
dec
mov
dec
mov
ret
or
jmp
mov
ret
faddl
pop
jne
ltr
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
popa
push
jle,pt
jmp
adc
xor
xchg
out
movsl
fiadds
sbb
dec
pop
adc
out
outsb
push
jb
lods
rcll
aas
clc
and
or
imul
pop
call
fs
enter
addr16
orl
mov
cmp
mov
mov
cltd
and
rcll
ficomps
scas
push
jns
mov
arpl
lret
repnz
mov
insb
jmp
fistps
and
fs
out
mov
or
dec
and
mov
ja
sahf
pusha
sbb
pop
in
out
enter
mov
and
aam
fwait
shr
jnp
jp
dec
jle
pop
in
xor
pop
push
jmp
inc
and
pushf
jbe
ss
in
mov
lahf
or
mov
test
xchg
leave
loopne
adc
and
out
push
lea
insb
cmp
in
xchg
mov
pop
xchg
loop
enter
fidivrs
popf
xor
and
cmp
mov
daa
pop
mov
pop
sbb
xor
ja
das
push
test
mov
sub
lret
repnz
subl
lret
ljmp
inc
fcmovnbe
xor
xchg
push
jle
test
and
imul
sbb
aaa
lds
or
cld
xchg
arpl
cmp
aas
push
mov
jno
scas
or
enter
popa
arpl
dec
fsubs
scas
inc
testl
xchg
sub
mov
add
and
mov
or
jae
ret
xor
arpl
jle
outsl
mov
or
cmp
movb
loopne
push
pusha
fcmovb
dec
dec
stc
mov
xor
aas
icebp
loope
mov
add
and
jle
pop
ja
adc
popf
arpl
pop
push
add
int
dec
adc
and
mov
mov
push
ds
or
jp
push
or
and
or
es
mov
jb
push
popa
mov
jnp
loopne
mov
mov
ret
frstor
push
mov
dec
pop
sub
fldcw
jmp
inc
scas
push
cmp
out
inc
lea
sti
adc
pop
jl
flds
ljmp
xchg
adc
jae
xchg
dec
fwait
add
stos
ret
sahf
je
or
pop
jne
je
je
movsb
mov
dec
mov
lods
repz
or
push
pop
stc
shlb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
inc
cmp
fists
adc
or
shlb
lods
jae
sub
stos
pushf
cmpsb
and
aad
les
xchg
jmp
bound
push
outsl
pusha
add
adc
mov
cli
mov
fsubrs
lods
push
add
stos
push
pop
xor
into
lahf
inc
add
notl
mov
mov
ds
pop
push
ret
mov
add
movsl
in
add
xchg
jle
pop
scas
insb
push
hlt
jnp
pop
sbb
ds
jbe
inc
push
push
fwait
cld
mov
mov
cmp
dec
rorb
mov
sbb
mov
icebp
xchg
inc
imul
cmp
scas
fwait
jb
jno
stos
pop
nop
pop
lret
xchg
icebp
shrb
subb
xor
xchg
call
scas
loop
enter
es
push
xor
mov
outsb
jmp
or
jno
pushf
xchg
xchg
inc
jnp
aas
lods
ret
cmp
insb
jl
fistps
jl
je
jne
lret
mov
pop
cltd
rcll
add
sti
xchg
push
push
sub
sbb
js
cs
pop
push
push
jl
nop
pop
jns
sbb
lock
push
in
add
lahf
faddl
xor
ret
mov
add
ds
or
std
or
push
cmp
sbb
loope
xrelease
les
fstps
mov
push
add
mov
adc
aas
lock
cmpl
cmc
mov
stos
adc
sub
nop
fisubrs
sub
inc
mov
cmp
lea
movsb
sahf
jnp
dec
int3
dec
fsubl
xlat
add
std
mov
jl
add
call
cli
scas
add
mov
jno
add
lods
shrb
scas
pop
cmp
stos
sbbl
in
and
sub
or
fidivs
mov
sbb
xchg
ljmp
rcrl
fcoms
sub
and
push
test
push
xchg
subl
movsl
out
fcoml
xor
idivb
xchg
dec
and
pop
loop
ds
repz
push
in
add
addb
inc
fisubrl
bound
pop
xor
jle
push
loopne
nop
jmp
lea
push
inc
cmp
and
lods
scas
cli
das
xchg
into
dec
xchg
or
mov
jecxz
jmp
jmp
pop
mov
stos
inc
adc
cmpsl
mov
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
jp
ljmp
mov
bound
movsb
orb
dec
jnp
push
out
xchg
add
popa
loop
mov
arpl
int3
or
cmpsl
sbb
loope
pop
les
add
movsb
mov
mov
loopne
xor
cmp
jmp
cld
daa
mov
aaa
cmp
test
push
cmp
lcall
or
bound
fmuls
push
lock
jbe
shrl
xor
imull
xor
sti
jmp
nop
inc
pop
push
mov
jno
cltd
js
inc
stc
mov
ds
adc
stos
mov
sub
pop
iret
roll
or
sarb
sub
jo
add
mov
out
dec
lods
push
cmp
je
cmp
jmp
out
fmul
fnstenv
sub
jne
popf
pushl
cs
aaa
out
mov
xchg
pop
rorl
jne
xchg
lea
jnp
fildl
xchg
shr
inc
xchg
aaa
stos
and
cmp
sub
lahf
inc
sub
fsub
sarb
sbb
mov
insl
sub
mov
add
fistl
cli
clc
icebp
stos
rorb
adc
push
and
pop
mov
sub
stos
mov
mov
adc
imul
scas
stos
lods
jp
mov
or
xor
fwait
lods
and
jo
jecxz
shll
cmp
xchg
sub
jno
dec
mov
mov
mov
lds
xchg
pop
lock
fidivrs
stos
ja
push
jo
loope
or
cmp
sbb
cmpsl
sbbl
jmp
inc
mov
in
and
jg
test
push
or
pop
lret
sbb
add
xor
or
insl
cmc
lods
xchg
in
andb
test
jnp
sub
xor
xchg
stc
adc
jge
push
dec
jmp
dec
rcrb
xor
push
push
rcrb
das
iret
push
pop
mov
int3
clc
and
dec
std
mov
cltd
out
xchg
daa
add
in
add
es
js
ds
pop
mov
and
cmp
adc
mov
repz
scas
imul
jp
fwait
aas
pop
inc
jecxz
sub
shrl
test
aas
insb
dec
inc
mov
cltd
xor
mov
pop
mov
mov
push
notb
add
popf
dec
movsb
jle
lds
andl
jmp
sub
sbbl
pop
js
lods
mov
bound
fsts
adc
fcomip
xor
imul
push
rcr
jns
fwait
gs
sbb
dec
loopne
dec
pop
clc
sahf
idiv
cltd
bound
inc
mov
outsl
fs
scas
xchg
mov
jp
bound
mov
imul
inc
es
movsl
mov
and
iret
xor
cmp
mov
ss
dec
and
pop
cmp
outsb
pushf
jl
add
push
loopne
jbe
jo
cmp
add
pop
test
sbb
dec
insb
sub
call
and
hlt
fsubs
push
dec
cmc
lods
out
cs
mov
cltd
push
bound
negb
and
ljmp
sbb
out
in
arpl
sarb
andb
mov
sub
sbb
jno
inc
and
fisttps
adcb
pop
es
cltd
inc
inc
neg
loop
jns
lods
mov
fsubrs
roll
inc
aas
inc
in
inc
sahf
xchg
adc
push
pop
mov
es
cli
addb
cmp
cmp
ficompl
outsb
xchg
shll
xor
pop
shrb
push
inc
negb
fwait
outsl
lahf
or
xor
aad
xor
pop
outsb
cmp
mov
cmp
jb
out
scas
movntq
enter
hlt
jnp
inc
bound
ss
pop
jl
fstp
lahf
flds
jnp
fnstenv
js
pop
xlat
inc
mov
gs
andl
mov
lret
mov
sub
sarb
xor
mov
pop
lods
mov
pop
or
pop
outsl
loope
test
subb
or
movsl
push
cmc
fiaddl
in
pop
add
mov
inc
jb
mov
in
int
jecxz
arpl
repnz
add
sbb
repz
jno
inc
movl
add
inc
xor
pusha
push
xchg
sysret
xchg
mov
jp
movsl
or
fwait
sahf
or
nop
out
jp
push
mov
mov
and
sub
push
pop
fmulp
dec
xor
movsl
mov
repz
cli
push
jno
cmp
pop
lcall
pop
adc
notb
test
jb
mov
insl
std
negl
pop
xchg
lcall
rorb
inc
imul
je
pop
in
adc
in
and
pop
nop
stos
mov
push
out
and
popa
push
shr
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
ret
loope
push
hlt
lret
push
rorb
cmp
sarl
loopne
cmp
call
xchg
dec
fildl
nop
shr
and
stos
jp
or
into
out
loopne
bound
adc
sti
or
or
and
mov
and
dec
push
mov
dec
adc
stos
lcall
jb
cmp
inc
outsl
push
xor
popa
adc
movsb
mov
dec
push
pusha
xor
mov
pop
out
mov
dec
jb
mov
call
adc
iret
fwait
hlt
mov
mov
cmp
es
push
sub
adc
push
dec
mov
cmp
and
xchg
in
xchg
imul
xchg
cmpsl
inc
or
cs
setge
mov
insb
mov
jl
push
xor
sti
popa
addb
add
jle
movsb
jns
adc
jno
xor
mov
jecxz
aad
cmp
enter
dec
and
fs
cmp
in
movsb
push
lods
mov
adc
insl
pop
ljmp
fbstp
xor
outsb
movsl
jge
lods
adc
test
add
push
adc
adc
mov
sbb
int3
sarb
out
cmp
aas
enter
aam
jecxz
lcall
add
out
cli
stc
mov
lret
scas
and
shlb
mov
insl
add
out
jns
lods
popa
push
insb
and
pop
jne
cmpsl
pop
lahf
jb
xor
xchg
xchg
xchg
lock
fstps
xor
pushf
rclb
push
adc
or
sahf
pop
cmpl
nop
push
fmuls
lods
inc
sbb
jge
lods
mov
out
dec
xchg
cs
hlt
adc
pop
fistl
jno
pop
xchg
negb
cmp
sbb
jbe
arpl
out
out
sub
loop
int
jb
popa
mov
push
mov
lret
mov
mov
mov
repz
mov
leave
or
leave
insb
sti
pop
comiss
test
test
movsb
adc
fldenv
dec
pushl
jo
mov
inc
out
sti
nop
jae
cmc
pop
sahf
adc
cmp
loopne
xorb
icebp
mov
sub
adc
pop
imul
fcoms
loope
aam
lock
and
or
xor
nop
and
leave
in
cmc
std
stos
mov
jae
jnp
sbb
das
pushf
repz
fildl
es
jae
stc
lea
push
outsl
mov
push
call
cmpsb
shll
cmp
add
add
add
fwait
sbb
dec
add
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
punpckhwd
lods
mov
movlps
out
ds
fs
ljmp
pop
jecxz
jg
and
xor
dec
dec
stc
xchg
mov
mov
fadd
aam
jmp
aam
repz
test
push
cmp
aad
add
fstp
push
icebp
loope
push
lcall
jge
cmp
pop
dec
das
decb
cmp
cs
jb
in
jae
std
push
xchg
call
loope
stos
mov
das
and
inc
inc
cmp
test
icebp
cmp
fldt
icebp
aaa
loope
mov
repz
mov
jae
xchg
mov
stos
mov
stos
data16
jb
dec
xchg
add
mov
lret
cmpsb
into
dec
insl
fstps
out
pop
popf
xchg
out
mov
pop
cmp
loope
outsb
mov
pop
lock
pop
xor
jp
mov
push
movsl
fldenv
lahf
out
jmp
movl
add
iret
mov
xlat
jecxz
pop
fwait
add
fs
push
pop
fidivrs
dec
enter
mov
push
bound
ror
pop
dec
movsb
insb
dec
xchg
sub
or
loop
push
push
int
pusha
xchg
popf
popf
jmp
or
fistl
sub
mov
pop
mov
jnp
pop
cmp
push
sub
pushf
jno
inc
xor
call
push
jnp
popf
or
shlb
mov
aaa
lea
jp
dec
fcoms
int
lret
inc
pop
loope
xlat
and
popf
je
aad
jmp
mov
mov
stc
stos
push
call
mov
fstpt
adc
pop
fwait
jp
sub
jnp
xor
insl
test
in
and
xchg
sbb
aam
shlb
xor
es
int3
fcom
lods
sahf
jo
lahf
mov
cmp
dec
add
enter
or
loop
test
jmp
out
loopne
testb
jae
and
xor
daa
mov
inc
dec
test
ja
cwtl
cmpsb
xlat
or
jge
movsl
popa
hlt
rclb
xlat
gs
iret
mov
repnz
stc
pop
jno
gs
iret
jp
adc
adc
fsub
xchg
sub
daa
lahf
xor
dec
std
andnps
out
sbb
cwtl
cld
sbb
popf
test
xchg
aad
or
ss
lret
jle
push
inc
dec
mov
movsl
push
mov
daa
shrb
outsb
sbb
dec
clc
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
mov
adc
xchg
movlps
adc
test
hlt
jp
popa
inc
jge
xchg
js
and
jecxz
inc
ja
roll
mov
outsl
push
push
loope
hlt
jns
insl
lods
mov
push
repnz
in
mov
pop
push
push
jmp
nop
movsb
lods
clc
fchs
push
sub
sti
fisubs
test
fdivl
sub
push
mov
push
cs
addl
jge
adc
or
dec
lcall
mov
out
fyl2xp1
mov
cmpsb
or
les
imul
push
adc
adc
out
inc
bound
loope
adc
icebp
lahf
cld
adc
mov
mov
int
subl
fnsave
add
cli
clc
dec
add
xor
cmc
dec
inc
sbb
add
icebp
and
mov
adc
dec
outsb
popl
pop
js
ss
pop
pusha
shlb
dec
jle
cmp
icebp
or
mov
jbe
test
stos
addr16
xlat
mov
cs
jns
pop
insb
lfs
sub
lcall
and
add
mov
mov
stos
out
add
jae
and
cmp
cmpsb
mov
mov
sub
mov
dec
or
pop
cmp
xor
movsl
call
in
gs
jo
movsl
mov
adcb
sti
mov
pop
mov
mov
add
or
sahf
lods
mov
push
stc
jp
push
push
jecxz
add
mov
mov
lret
push
js
mov
pop
xor
xchg
lods
xchg
mov
addr16
push
push
jne
lods
lea
mov
xchg
push
push
in
xor
sbb
loopne
mov
mov
dec
xchg
aam
push
xor
sbb
and
sub
lock
in
mov
pop
iret
lods
movsb
idivb
repz
imul
imul
fmuls
or
mov
sahf
inc
call
xchg
loopne
xor
pusha
mov
pop
icebp
and
xor
dec
lcall
test
fadds
pop
dec
fidivl
ja
enter
push
lods
mov
cmp
in
mov
pop
aam
mov
aaa
add
lcall
add
into
mov
lret
pop
ljmp
andl
mov
or
sub
cmc
test
clc
mov
loop
lret
sbb
jo
mov
xchg
das
dec
cmp
inc
mov
rorl
xor
or
insl
push
push
mov
pop
pop
ds
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
test
pop
loopne
fldt
dec
xor
jle
test
les
fidivs
dec
fwait
cwtl
notl
mov
push
insb
loopne
cltd
loopne
adc
pop
imul
fsts
mov
leave
cmpsb
test
out
mov
push
inc
shlb
inc
ja
sbb
ja
arpl
pusha
dec
sub
test
mov
lret
fdivrl
mov
and
iret
or
out
pop
sub
scas
pushf
inc
dec
test
pop
inc
cltd
iret
add
iret
xchg
int
aaa
inc
sub
jbe
inc
mov
out
mov
scas
fiaddl
imul
aaa
sbb
add
inc
mov
sbb
subl
inc
cmp
out
push
xlat
sbb
arpl
rclb
xchg
inc
test
dec
fcoms
xchg
lock
sbb
jp,pt
pushf
inc
xchg
addr16
jmp
std
lods
pop
in
mov
xor
xor
leave
sbbl
sbb
and
and
cwtl
mov
jno
fldcw
imul
popl
out
pop
sub
mov
xor
lock
les
sub
mov
mov
lahf
jmp
add
adc
jle
loop
enter
cltd
pop
flds
mov
in
packsswb
cld
idivl
test
int3
shlb
dec
and
pop
sub
inc
dec
enter
loopne
dec
mull
ret
jno
insl
test
mov
pop
shrl
in
dec
stc
xchg
and
add
frstor
mov
divl
xor
ret
or
push
pop
add
cmp
xchg
popf
fsts
mov
adc
bound
mov
test
or
pusha
mov
cmp
rclb
jb
xchg
xor
xor
cmpsl
aad
js
fdivrs
mov
adc
mov
jae
jo
test
rclb
mov
data16
into
jg
pop
dec
add
sbb
xor
xor
shll
outsl
test
stos
popa
cmpsl
mov
xchg
and
inc
adc
fcompl
mov
xchg
mov
out
add
lret
xchg
mov
pusha
mov
out
sti
scas
or
mov
inc
int
xchg
jbe
jecxz
mov
mov
or
or
add
movl
inc
mov
dec
or
xor
loope
call
jmp
imul
cltd
sbb
imul
xchg
js
mov
adc
pop
shll
push
sub
shlb
mov
push
push
call
das
andl
and
mov
leave
in
mov
jmp
mov
xlat
test
lcall
lcall
lret
sbb
js
adc
fsubr
fstps
mov
ds
xor
push
sahf
xchg
xor
enter
push
popa
sbb
ret
xor
mov
xchg
mov
lret
inc
or
jnp
out
and
sub
imul
and
xchg
pop
mov
mov
mov
addb
out
daa
push
cmpsb
pop
rcrb
jg
add
push
mov
dec
addb
pop
xor
sub
push
int3
testl
jge
jo
js
xchg
and
mov
push
idiv
pop
xor
inc
cld
add
cmp
push
fisttps
mov
scas
and
popf
into
repz
pop
push
sbb
sub
and
push
testl
xchg
mov
sub
shlb
int3
sub
popa
inc
adc
and
or
pop
addr16
cmc
mov
add
mov
lods
inc
scas
stos
push
cmp
push
sbb
dec
icebp
in
push
repnz
test
int
int3
inc
inc
gs
jmp
sbbl
jb
js
icebp
jae
or
icebp
movups
mov
iret
scas
jo
cmp
and
push
js
xacquire
add
test
in
cmc
cmp
into
cwtl
inc
xor
ret
aas
sub
mov
sbb
jb
cmp
push
adc
push
mov
les
cld
and
jge
pop
xor
inc
and
mov
dec
adc
lds
sbb
rclb
rorl
or
push
and
adc
daa
arpl
cmpb
fcoml
mov
int3
xchg
loopne
mov
aaa
cmp
addb
ret
push
xor
iret
mov
jge
cli
jge
xchg
and
dec
xor
xchg
ss
cmp
rorl
sub
sub
mov
loope
push
mov
xchg
sbb
push
ds
es
aam
mov
pop
cmp
adcl
int3
rclb
repnz
xchg
pop
sbb
push
nop
pop
dec
test
mov
mov
or
out
fwait
mov
dec
mov
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
xor
cwtl
mov
adc
std
stos
sbb
shll
cmpb
xchg
sub
jp
lcall
mov
push
xchg
xchg
mov
push
mov
shrb
dec
mov
push
into
mov
xchg
mov
xor
incb
aad
push
push
add
mov
mov
xor
cmp
popf
pop
in
daa
pop
call
add
movsb
enter
repnz
dec
iret
cld
and
ret
out
test
dec
inc
js
enter
test
imul
mov
inc
push
dec
mov
mov
insl
pop
ja
mov
ret
fwait
mov
outsl
mov
stos
movsl
xor
xorb
sbb
les
imul
dec
add
add
inc
adc
insb
cwtl
mov
push
push
imul
jae
xor
shl
mov
jmp
in
sbb
scas
or
jnp
stc
movq
mov
loopne
call
insb
push
push
push
divl
or
xchg
test
scas
cmp
das
jns
push
push
rclb
daa
push
and
push
mov
mov
fisttpll
out
xchg
jbe
mov
pop
inc
sbb
fldcw
pusha
jp
cmp
scas
push
xor
sahf
popf
xor
mov
pop
push
test
icebp
int3
in
adcb
push
push
lahf
mov
xchg
pop
and
mov
js
into
adc
xchg
xor
xor
sbb
leave
cmp
or
clc
jns
xchg
shlb
dec
repnz
cmp
addr16
mov
mov
les
dec
and
mov
pop
fnstsw
shlb
sub
push
or
out
and
fisttpll
mov
repnz
icebp
addr16
and
stos
shll
ljmp
jge
mov
push
sbb
int3
fwait
mov
lea
jle
pop
sbb
cmpsl
fidivrl
xchg
mov
test
sub
jno
lret
cmpsb
jle
pop
push
das
out
jno
ljmp
pop
or
push
and
xor
bound
mov
add
cmp
xor
push
lahf
pop
shll
pop
mov
pminsw
dec
cmpsb
gs
dec
jmp
int
insl
mov
or
mov
push
ss
not
insb
xor
cmpsb
mov
xor
mov
dec
icebp
lcall
test
mov
rorb
ret
clc
imul
loope
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
insb
sbb
adc
pop
mov
xor
movsl
les
or
push
sub
dec
pop
xlat
push
rcl
daa
dec
sub
xor
jb
test
ret
jg
into
in
hlt
jns
and
or
xor
sahf
pop
xchg
xor
mul
jmp
sete
rcrl
flds
js
adc
push
iret
lds
sub
cli
xchg
push
dec
mov
mov
xchg
sti
mov
mov
mov
push
xchg
push
out
fucomp
mulb
sbb
mov
cmp
mov
mov
enter
lret
jnp
xchg
call
loopne
inc
mov
xchg
es
sub
pop
nop
adc
pop
cld
cld
stos
pop
inc
scas
jmp
in
enter
sbb
sub
aam
out
xor
jno
jmp
xlat
clc
in
pop
cmp
mov
addr16
outsl
and
jg
fmuls
lcall
jle
fadds
xchg
jecxz
jo
clc
jno
les
dec
stos
add
fldenv
pop
dec
sub
add
in
xor
int
cmpsl
test
push
cmpsl
add
orl
es
fbstp
xchg
inc
jo
insl
dec
mov
jmp
pop
xchg
popa
ret
jecxz
popa
pop
push
pop
add
push
mov
push
push
js
xor
jg
notl
pop
and
sahf
test
push
loope
jle
xlat
les
fs
int
push
scas
loope
pusha
addr16
enter
fidivs
movsl
mov
xchg
dec
nop
in
sub
aaa
imul
fstpl
aam
mov
dec
arpl
mov
xlat
ficoms
outsl
jle
lods
jge
xchg
inc
sbb
shl
jl
lret
or
mov
cmp
cmpsl
out
xor
dec
inc
xchg
fsubrl
repz
mov
pop
push
sub
lods
pop
fstpt
jne
cmp
jge
pop
shlb
aad
add
clc
adc
jecxz
scas
mov
add
shlb
xor
mov
rolb
jbe
insb
sete
ss
out
js
dec
insb
add
fcmove
xlat
cmc
test
and
mov
ss
sbb
clc
movsl
vcvttps2dq
and
jbe
push
imul
nop
add
mov
jp
cmc
test
stos
fwait
jbe
test
and
data16
adc
mov
push
mov
outsb
int
dec
sahf
sbb
lea
aad
jnp
in
sub
cmp
bound
mov
mov
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
orl
mov
xchg
movlps
xchg
push
inc
call
push
dec
mov
out
pop
push
or
nop
sbb
popa
cwtl
out
aaa
add
sti
or
cmp
pop
pop
loope
out
xor
or
add
ljmp
into
jo
jns
and
fiadds
inc
subb
js
outsl
inc
gs
xchg
dec
std
fdivrs
cmpsb
xor
and
xchg
mov
add
je
dec
push
xor
mov
push
dec
and
daa
pushl
test
inc
mov
dec
mov
shlb
iret
adc
fisubl
add
shl
dec
dec
mov
jns
gs
cli
mov
mov
ss
jae
jbe
jo
add
lret
sub
jnp
stc
xor
stc
xor
adc
aas
mov
hlt
mov
mov
pop
mov
add
or
xchg
decb
dec
idivl
lret
data16
ss
testl
jp
dec
sbb
rorl
test
inc
outsb
push
or
mov
dec
jns
dec
in
cmpsb
or
lcall
mov
sub
inc
mov
sub
sbb
enter
rorl
fwait
in
sbb
sbb
mov
sahf
cli
hlt
lock
lods
or
mov
cli
dec
pop
xlat
out
add
pushf
xchg
into
shll
mov
inc
push
and
or
fldt
test
inc
xchg
mov
add
push
cmp
enter
sahf
pop
mov
mov
into
xor
mov
or
cmp
mov
aam
cmp
xchg
pop
add
adc
nop
pop
dec
jmp
add
pop
outsb
and
push
push
iret
icebp
rcrb
lcall
pop
fwait
push
outsb
add
lods
bt
ret
mov
cmc
jb
sub
add
shl
sarb
adc
or
loopne
push
les
cmpl
daa
int3
mov
add
inc
mov
and
mov
jo
push
leave
adc
push
mov
xlat
push
sub
cmp
lret
adc
jb
sub
jg
jne
mov
andb
jno
cmp
cwtl
cs
leave
inc
mov
subl
jno
mov
cltd
out
mov
push
rcrb
divl
xchg
xchg
and
xchg
mov
ret
lods
loope
insl
movsl
outsl
scas
sub
and
push
fwait
xchg
pop
popf
lahf
xchg
aaa
rorl
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
pop
sarb
mov
adc
mov
clc
icebp
jmp
stos
pop
add
cli
leave
sub
jg
add
lcall
mov
or
inc
jmp
pop
inc
add
push
mov
dec
leave
rorb
jne
add
mov
inc
cltd
xchg
adcb
pop
add
enter
jns
push
and
repz
pop
cmc
mov
push
mov
sub
mov
inc
dec
cmp
aaa
fists
pop
sarl
stc
ret
test
inc
int3
popa
xor
fs
fcomip
pop
mov
push
sbb
xchg
shl
cmp
mov
fisttpll
repz
mov
xchg
sbb
call
cmp
mov
ja
sub
loope
das
call
testb
cmc
jno
ss
sbb
cmp
jecxz
loopne
xor
lods
mov
pop
or
idivl
jle
push
push
dec
pop
sub
fs
fcoms
mov
ret
sti
mov
add
mov
mov
xor
cmc
shll
addl
mov
je
ret
out
push
roll
dec
pop
pop
push
cmp
lods
shlb
lcall
and
adc
mov
adc
test
dec
sub
sti
sub
enter
mov
gs
inc
les
inc
xlat
ljmp
cmpsl
push
push
cmp
pop
stos
lods
roll
xor
cmp
movsl
push
inc
lock
pop
divb
shrl
dec
adc
push
dec
movl
push
icebp
lret
ljmp
into
in
lea
inc
daa
insl
pushf
push
and
jae
sub
out
push
imul
jno
pushf
fistps
cld
mov
sub
lods
mov
mov
hlt
xchg
lods
pop
sub
mov
mov
sub
mov
test
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
xor
adc
mov
bound
les
jns
test
jns
popa
add
adcl
outsb
mov
mov
xor
cmc
out
orb
xchg
shlb
je
cmc
cwtl
mov
dec
dec
mov
mov
push
xchg
mov
jl
test
mov
jae
pop
insl
adc
sub
stos
sbb
mov
sub
in
add
lcall
es
mov
xchg
jge
add
add
mov
adc
sbb
sub
aas
dec
dec
add
cwtl
adc
mov
push
outsl
pop
xlat
ljmp
bound
ja
jl
mov
pop
xlat
xlat
xchg
hlt
gs
pop
test
scas
sub
xchg
in
mov
ja
inc
jge
fbstp
push
pushf
inc
push
aad
pop
cli
arpl
adc
enter
adc
or
jge
sbb
inc
or
add
scas
push
mov
inc
inc
mov
ja
pop
pop
push
inc
sbb
dec
and
adc
sub
sbb
and
lods
mov
es
push
pusha
cwtl
xchg
dec
push
pop
repnz
sub
add
outsl
xchg
mov
jle
adc
mov
mov
sbb
cmc
xchg
xchg
iret
test
sbb
imul
loopne
xorb
and
mov
jne
mov
mov
imulb
std
fisttpl
imul
fadds
jmp
xor
data16
pminub
les
cmpb
xchg
cli
push
mov
adc
out
loop
mov
mov
sbb
pushf
jge
ret
add
rolb
stc
test
lods
pop
mov
arpl
lahf
jl
ljmp
rcrl
stos
dec
pop
xchg
inc
cld
repnz
xor
push
dec
in
add
aaa
pop
mulb
push
mov
int
mov
in
leave
cmpsl
gs
pop
in
sub
xchg
and
add
rorl
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
loope
mov
mov
xor
xchg
popa
lret
pop
mov
ficomps
pusha
xchg
cmp
cmp
and
add
sub
fdivrl
xchg
xor
mov
leave
cmp
push
daa
mov
imul
pushf
daa
insl
in
lret
insl
push
xor
mov
aas
ret
jbe
inc
cs
das
xchg
jle
xchg
lret
inc
repnz
push
sbb
dec
incb
xor
jb
mov
mov
repnz
sbb
daa
sbb
test
jno
sub
in
out
mov
pop
inc
push
adcb
push
or
pop
sub
aad
rolb
xor
or
ss
mov
push
and
ss
data16
loopne
je
and
and
pop
ficoml
das
jbe
repz
les
fwait
sub
xor
or
pop
mov
jg
ss
sub
inc
sbb
pop
data16
push
jl
test
shll
sub
in
jle
in
shrl
lods
stos
mov
popa
sub
cltd
scas
mov
dec
xchg
in
ficompl
mov
insb
xchg
add
stos
gs
outsb
sub
and
in
jne
dec
push
adc
icebp
cmp
fisttpll
xorl
repz
mov
or
enter
popa
cwtl
sahf
int3
inc
iret
lods
lcall
cmp
mov
jo
int
jbe
jge
cwtl
sub
mov
inc
mulb
mov
or
adcb
bnd
rcrb
dec
aaa
jne
sbb
add
testl
addr16
or
and
shr
jo
stc
pop
mov
xchg
xor
sub
add
mov
push
aad
rcrl
ss
cwtl
inc
cmpsb
sbb
push
lods
sbb
sub
adc
pop
aaa
aas
loopne
cmp
xchg
add
push
xor
shll
and
push
mov
inc
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
push
push
cltd
adc
mov
xchg
sbb
cwtl
out
in
mov
in
int3
test
stos
jb
dec
pop
cmp
and
and
shlb
xor
push
scas
pusha
test
sbbb
push
lock
sbb
jb
dec
xor
imulb
pop
and
push
jge
sbb
cltd
jns
mov
and
xor
sub
js
mov
inc
lods
cld
and
sbb
mov
stc
mov
out
jnp
fcoml
add
xlat
fs
sub
push
clc
movsb
mov
ljmp
mov
ss
cmp
jne
test
mov
rep
jg
cmc
mov
mov
pop
xchg
int3
in
rclb
and
fidivrl
adc
shlb
aam
add
pop
xchg
mov
add
out
push
inc
enter
repz
or
inc
sub
js
dec
add
es
outsb
pushf
dec
jge
sbb
jp
imul
push
je
jae
push
ret
xchg
pop
loopne
fstps
popf
mov
xor
jle
fs
or
in
and
mov
inc
imul
fbstp
jl
je
push
stc
jno
push
hlt
mov
inc
xchg
bound
lods
call
daa
inc
fistpll
js
stc
push
orl
into
cs
cmpsb
pop
addr16
outsl
nop
inc
roll
lea
push
xchg
add
dec
into
fimull
mov
push
sbb
aaa
in
push
push
push
int
stc
or
jge
cmp
mov
xor
nop
push
stos
pand
pop
mov
inc
in
inc
cmp
or
cmp
stos
mov
int3
xor
jno
ds
push
adc
mov
and
sub
nop
lods
add
das
pop
push
xchg
inc
orl
pop
sub
add
lods
mov
cmp
or
std
jmp
dec
enter
test
divl
and
sbb
push
dec
sub
mov
and
cmp
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
or
test
pop
adc
adc
add
mov
icebp
clc
mov
dec
sbb
mov
add
or
mov
lcall
enter
xchg
test
pop
jbe
pop
adc
iret
daa
inc
out
in
gs
mov
xorb
push
cmpsl
or
movsb
ljmp
lcall
jg
and
ja
cmpsb
out
lods
in
pusha
repz
fwait
lds
or
pop
je
or
xchg
popf
xchg
xchg
and
push
mov
sahf
jbe
out
push
loopne
or
cmp
cmp
lret
fildll
xchg
xchg
pop
test
ja
fwait
pop
jge
or
lods
je
xchg
test
adc
hlt
or
jno
mov
cs
push
xor
sahf
inc
sbb
jle
jp
cmp
inc
fcomps
xor
add
pop
jb
test
adc
mov
xchg
inc
jecxz
dec
cmp
mov
scas
xor
stc
lahf
aad
das
out
jbe
and
sub
sbb
inc
leave
push
scas
or
dec
cltd
inc
push
fadd
inc
aad
push
minps
stos
xchg
sub
popa
xrelease
sub
push
jb
and
or
fisubl
ljmp
xchg
lret
lods
and
xlat
pop
push
push
fcompl
std
add
adc
pusha
add
push
sub
xor
daa
stos
lock
imul
sub
jmp
lcall
loopne
iret
repz
cmovae
popf
sbbl
add
sbb
push
int3
ret
pop
cmpsl
add
sub
jp
scas
or
popa
push
roll
cmpl
dec
lcall
fs
sub
add
push
jno
push
stc
jl
cmp
cmp
div
test
or
rolb
cmpsb
stc
sbb
push
mov
ja
pop
and
jnp
imul
mov
das
xor
rorl
add
cmp
or
inc
mov
dec
stos
test
stos
mov
in
dec
in
inc
aaa
and
leave
xchg
inc
mov
leave
pop
loope
lret
clc
adc
sbb
pop
dec
fsts
lret
cltd
scas
inc
insl
hlt
cmc
cs
mov
mov
fcoms
loop
aam
mov
fldt
inc
mov
ret
les
xchg
push
jmp
cmc
xchg
adc
mov
dec
sbb
cmp
shll
push
or
ret
or
add
cltd
mov
push
shrl
mov
pop
mov
adc
addb
lods
or
pop
imul
and
pushf
cmc
shl
in
inc
xor
hlt
loope
out
mov
xlat
inc
dec
sub
les
xchg
movsl
fcmovu
addr16
ficoms
jbe
test
push
dec
mov
mov
mov
xchg
pop
popf
ljmp
xor
jmp
out
arpl
sub
inc
and
mov
inc
and
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
cmp
adc
pop
adc
adc
movsl
loopne
xchg
pop
push
cmp
faddl
daa
repnz
sbb
mov
push
rorb
jp
outsb
int
inc
inc
mov
fst
jle
scas
gs
and
pop
cmp
xlat
inc
sub
xor
jp
push
mov
sub
xor
xchg
cmpsb
out
loop
mov
xor
lcall
mov
leave
cwtl
gs
fnstsw
movb
dec
pop
cmpsl
pop
fidivrl
jae
jge
pop
sti
pop
sbb
inc
xchg
xchg
pop
xchg
fnstenv
pop
loope
pop
mov
ja
sbb
pop
outsl
jecxz
sub
mov
lahf
lcall
sub
insb
push
mov
or
call
pop
in
cs
mov
bound
or
lahf
and
mov
addr16
in
mov
lret
xchg
adc
push
out
push
pop
js
inc
pop
fstps
rolb
jmp
jmp
ret
scas
mov
or
js
lods
pushf
add
dec
mov
and
sahf
mov
cmp
fadds
mov
testl
aad
scas
xor
mov
aam
stc
mov
sub
jp
sub
in
test
sub
push
xchg
cmp
in
adc
xor
negb
jle
push
in
bnd
call
test
sbb
icebp
and
orb
pusha
in
stos
std
sbb
inc
xor
adc
popa
jb
cwtl
outsb
mov
adc
lcall
aas
push
aas
cmpl
aam
loop
ret
dec
shlb
lcall
leave
mov
inc
pop
inc
mov
inc
out
jne
push
pop
push
pop
outsb
jb
xor
bound
fst
xchg
rcr
mov
mov
xlat
adc
jmp
jae
imul
dec
ret
adc
fildl
pop
out
repz
jecxz
xor
in
mov
inc
sub
xchg
inc
mov
jmp
or
push
es
jnp
sub
adc
cmpsb
fdivrl
fistpll
lcall
lods
mov
mov
aaa
stos
push
scas
mov
pop
or
mov
jg
cmc
add
or
arpl
imul
cmpsl
sub
scas
dec
movl
or
sbb
out
mov
inc
lahf
stos
insl
cmpsb
jb
out
mov
outsb
test
rorl
sub
repz
push
push
test
dec
lret
fdivr
and
fisubl
data16
mov
leave
mov
jno
rorb
jae
xor
xor
leave
mov
and
pop
mov
xchg
cmp
mov
scas
push
nop
sbb
clc
push
outsl
movsl
fsts
loope
mov
scas
sub
test
pop
add
stc
lods
mov
subb
aad
outsb
scas
js
sub
repz
jecxz
jg
shlb
popf
push
scas
outsl
or
rcrl
popf
popa
outsb
addr16
test
cmc
lock
dec
test
lret
adc
add
jo
mov
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
sbb
adc
pop
adc
adc
mov
mov
fnstsw
xchg
ds
sub
movsl
inc
or
mov
mov
in
repnz
test
pop
pop
flds
out
cltd
and
iret
mov
sub
insb
push
dec
imul
subl
inc
jge
mov
fisubl
test
mov
iret
add
dec
imul
aas
popa
xchg
mov
inc
test
scas
xor
xchg
loope
jae
jne
lcall
data16
mov
aas
sahf
shr
out
sub
mov
jp
sarl
pushf
ror
imul
xor
mov
cmc
xchg
addb
pop
shrb
sti
popf
lahf
mov
push
jnp,pn
sub
clc
sbb
add
xchg
jne
adc
pushf
add
ja
enter
adc
jo
xor
xchg
pop
das
mov
jo
pop
mov
fucom
jne
daa
test
insl
je
mov
pop
shlb
cmp
out
scas
pop
pop
out
int3
cmc
imul
add
mov
or
sbb
and
adc
xor
xor
stc
les
inc
dec
dec
je
xchg
sub
add
xor
fmuls
lret
mov
pusha
hlt
insl
push
dec
cltd
and
xchg
mov
xchg
aaa
mov
cmp
sub
test
sbb
mov
pop
out
jno
sarl
push
fcompl
or
sbb
jns
pop
push
outsl
mov
mov
mov
dec
jge
jle
mov
mov
mov
and
loopne
xor
lock
jb
jmp
ret
out
daa
pop
mov
ret
cmp
andb
out
outsl
stc
xchg
insb
ret
fs
add
fxch
jle
cltd
repz
adc
xchg
inc
pcmpgtd
loopne
fbstp
xchg
xor
mov
rorl
insl
cwtl
mov
jge
fs
inc
in
fadd
ds
cmpsb
push
repnz
pop
mov
mov
leave
je
repnz
mov
imul
arpl
ds
mov
in
push
mov
idivb
xor
mov
mov
mov
jmp
sti
frstor
fs
cwtl
jmp
arpl
into
inc
or
mov
call
mov
test
lret
cmpb
loop
das
sub
fbstp
push
inc
out
shl
ret
inc
or
daa
mov
mov
test
imul
cmc
dec
rep
adc
rcll
pushf
shll
and
sub
inc
sti
aam
pusha
jae
fs
idivl
pop
push
out
icebp
out
arpl
mov
jmp
in
mov
sub
iret
push
push
out
mov
mov
out
das
aaa
int
inc
adc
mov
push
xor
inc
aad
mov
fnstenv
lods
adc
mov
outsw
push
stc
das
test
movq
je
push
out
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
stos
jbe
adc
pop
adc
adc
sbb
push
xor
ljmp
fs
lahf
cs
xchg
push
xor
pop
loop
fwait
stos
mov
push
dec
mov
pop
sbb
push
leave
mov
jl
xchg
inc
mov
mov
and
lea
jmp
lret
out
jo
jp
push
test
fs
mov
add
xchg
xchg
and
inc
bound
imul
fldl
call
out
xchg
dec
jl
scas
hlt
in
mov
das
ja
and
aas
nop
test
mov
ja
jae
insl
lcall
ret
fdivs
and
xor
jg
mov
lods
fstpl
js
addr16
xchg
dec
mov
or
bnd
cmp
cs
mov
aaa
out
scas
and
leave
cwtl
cmp
pop
add
cmc
ss
jno
adc
inc
enter
pop
mov
shrl
addr16
jle
fbstp
mov
sarl
and
movsb
movl
lods
sub
sub
mov
xor
or
add
in
sub
fsubr
sbb
in
mov
adc
rclb
sbb
lock
aad
loope
jbe
add
addl
mov
imul
jp
hlt
negw
enter
int3
pop
dec
lock
xor
movsl
sbb
sbb
test
pop
addr16
test
mov
dec
decl
stos
add
adc
xchg
loope
fs
in
int
cld
shll
mov
xchg
ret
popa
inc
fmul
push
and
mov
xlat
xchg
jae
aad
dec
and
push
xchg
add
mov
in
mov
lcall
stc
push
ds
dec
cmc
push
fdiv
sbb
clc
fadds
in
xchg
add
sahf
mov
mov
dec
pop
dec
lahf
sbb
xor
xchg
lret
adc
mov
int
cltd
xor
or
xchg
cwtl
pop
cmp
les
adc
xor
in
xchg
sbb
insl
or
pop
setb
mov
dec
rcll
xchg
cmpsl
mov
or
jbe
or
sub
adc
fstps
pop
dec
imul
ficomps
std
sbb
loope
jmp
pop
scas
cmp
addr16
decl
loop
rcll
popa
insl
icebp
adc
push
cs
mov
xor
fsubs
push
scas
das
lcall
xor
std
ljmp
js
or
push
adc
dec
inc
js
jns
adc
js
fdivrl
iret
inc
rolb
aaa
lods
jns
sti
loopne
add
add
cmp
cltd
or
popl
mov
cwtl
daa
pop
sbb
loop
xchg
cmpsl
jns
pop
push
xchg
add
das
es
outsl
in
push
mov
fcoms
xlat
pop
loopne
xchg
xchg
dec
repnz
xor
pop
sub
rorl
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
sarb
ja
adc
adc
cld
and
scas
inc
aaa
int3
add
addr16
test
sbbb
data16
sub
popf
loope
or
shll
lds
shlb
nop
xchg
xchg
sub
jmp
xor
popa
push
mov
xchg
scas
xor
test
push
lret
out
loop
mov
scas
jne
fcompl
arpl
push
and
xchg
adc
mov
mov
cmc
stos
sbb
cmpsb
xorb
xchg
fcoms
test
pop
xor
mov
lea
sbb
dec
clc
dec
mov
inc
jp
xchg
dec
xchg
push
push
push
mov
mov
fstpl
pusha
data16
sub
lcall
scas
mov
outsb
sub
and
mov
pop
data16
sub
xor
cmp
into
push
movsl
push
test
mov
adc
mov
adc
out
xor
pop
test
movsb
dec
inc
cmp
addl
push
sub
js
popf
mov
test
movsb
add
sub
sub
xchg
pop
shrl
cli
sbb
jp
cmp
mov
inc
test
clc
add
cmpl
lcall
xchg
xchg
das
dec
fidivs
mov
orb
imul
xor
push
repz
inc
push
add
sbb
push
arpl
cltd
push
sbb
sub
clc
mov
lods
ja
and
cli
rcll
cmpl
cli
je
iret
pusha
arpl
shr
jl
ja
cmp
and
lds
addl
fimuls
lods
lahf
fadd
call
dec
inc
testb
test
mov
mov
decb
sbb
and
aam
pop
push
ret
mov
ja
sarl
and
idiv
insl
or
in
pop
add
es
and
int
insl
push
outsb
mov
or
push
fcompl
ss
pop
pop
or
jp
mov
sahf
adc
push
cmp
adc
inc
fwait
xchg
sti
jbe
add
mov
mov
rcll
ja
cmp
jmp
enter
in
ja
rol
xchg
or
mov
pop
inc
divl
in
hlt
cld
dec
rclb
stos
ud2
dec
jae
in
fidivl
movsl
ficoml
popa
daa
pop
inc
add
f2xm1
jbe
into
xor
jg
push
shrd
rcl
adc
imul
xor
xor
mov
and
mov
pop
or
adc
mov
enter
pusha
bound
mov
or
popa
mov
mov
sbb
sub
cwtl
sbb
mov
aad
out
xchg
jno
fsubrs
xor
in
push
imull
idiv
lods
sub
mov
sbb
ret
popf
cwtl
add
add
and
pop
jnp
jge
gs
psubusb
lahf
subl
jo
add
movsl
jno
ljmp
bound
xchg
aas
mov
call
sbb
pushf
and
push
lret
test
repnz
cmpl
sub
jp
add
je
add
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
or
push
outsl
adc
pop
adc
adc
ja
pop
pop
mov
adc
jg
je
gs
pusha
out
add
add
int
je
inc
js
pop
pop
sub
ret
mov
and
repz
fwait
mov
sti
loope
push
xor
mov
stos
in
inc
push
fidivrl
test
push
or
shll
das
or
ret
xchg
loope
mov
jl
inc
aam
mov
or
adc
and
xor
pop
cwtl
pusha
sysret
mov
call
or
aam
xchg
fs
jge
decb
movsb
aaa
mov
xchg
push
and
adc
sbb
es
ds
cmp
jge
rclb
fldenv
xor
cmove
dec
push
orb
jmp
xor
les
enter
test
out
mov
lds
and
sub
popf
fcompl
jae
ja
add
cwtl
jecxz
scas
testl
ljmp
xor
and
and
jbe
divb
int
daa
mov
mov
repnz
xchg
mov
test
push
sub
dec
iret
test
in
push
jnp
mov
int
test
aaa
out
shrb
dec
lea
xor
lds
dec
sub
in
xacquire
or
int3
lahf
jnp
sub
hlt
sub
stos
pop
cmp
mov
inc
and
lcall
or
xchg
pop
gs
mov
lds
notl
repz
call
out
rcll
add
fnstsw
or
cld
neg
sub
cs
lcall
sub
cli
out
jae
xchg
jg
adc
in
dec
add
cmp
xchg
or
or
ret
int
mov
daa
cmpsb
cmp
lret
ss
cwtl
cmp
les
cmp
cld
sbb
or
lods
lods
daa
cld
lahf
adc
dec
sbb
inc
mov
jnp
jae
cmp
pop
test
mov
mov
mov
popf
loopne
jae
inc
xchg
fucom
out
cmp
pop
hlt
jp
push
inc
mov
xor
nop
dec
daa
sub
sbb
insl
bound
loop
shlb
jne
fiaddl
sbb
pop
mov
and
lock
push
xchg
push
push
xor
dec
xchg
testl
pop
lret
shll
popl
pop
xchg
stc
lds
and
sbb
adc
jb
scas
rcll
repnz
push
mull
mov
cld
or
add
out
mov
aas
popf
push
decb
lock
outsl
sahf
jge
xchg
mov
add
test
lods
out
or
outsl
xchg
and
jae
in
int3
insl
lds
cwtl
lea
xor
out
daa
xchg
lods
stc
push
pop
out
mov
adc
imul
mov
pop
popa
sbb
mov
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
adc
cmp
jo
jb
xor
mov
xchg
pushf
jae
dec
movsb
xorb
push
pop
mov
pop
xchg
loop
push
callw
pop
test
push
shll
ds
sub
nop
push
jmp
adc
mov
or
hlt
repnz
xchg
and
pusha
repnz
mov
push
lret
or
push
push
pop
cmp
jge
fs
push
outsb
sub
xchg
filds
sbb
and
cmp
jbe
jmp
xchg
add
or
enter
xchg
add
adc
fwait
js
pop
or
aam
imul
add
jns
mov
repz
xor
stos
leave
inc
and
in
dec
in
sbb
mov
imul
insb
iret
or
xor
cmp
insb
dec
pop
lds
pop
push
test
lods
shrb
xchg
inc
jb
stc
pop
je
lea
pop
sub
jmp
adc
sub
add
mov
push
jbe
imul
lods
mov
or
in
mov
xchg
adc
cmc
pop
pop
and
or
sub
jecxz
pop
addr16
add
es
mov
or
and
push
push
movsb
mov
fcoms
jg
mov
iret
push
js
jae
mov
test
jmp
mov
inc
sub
adc
sbb
dec
mov
out
xlat
push
xchg
push
lret
outsl
sahf
push
lcall
sti
jno
pop
sbb
out
cs
hlt
add
mov
inc
das
stc
es
out
ds
roll
jl
pushf
dec
add
add
repnz
adc
push
mov
mov
cmp
loopne
mov
xchg
mov
aam
fistpll
or
loopne
or
fwait
dec
dec
and
ret
push
inc
cmp
pop
arpl
les
in
loopne
les
negb
sub
ds
push
push
sub
xchg
shrl
les
rorl
dec
pop
decb
jp
add
adc
stos
mov
iret
xor
cmpl
mov
cwtl
call
ficompl
cmp
and
and
adc
adc
in
out
popl
mov
testb
add
mov
aad
mov
sub
test
sbb
popa
in
pop
sbb
dec
scas
inc
adc
mov
sbb
rorb
xchg
mov
push
mov
mov
jmp
mov
rcll
cwtl
enter
push
inc
ja
inc
or
inc
test
inc
add
cltd
push
push
je
cs
lea
xchg
aaa
inc
pusha
mov
xchg
imul
mov
mov
popf
jnp
in
mov
out
mov
and
sbb
in
in
out
xchg
xorb
sbb
gs
insl
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
push
cmpsb
js
arpl
adc
adc
fcomip
loope
in
subl
sub
adc
push
sbb
xor
pop
mov
push
and
or
xchg
cmp
fwait
jno
or
imul
xchg
into
repnz
pop
push
push
lea
rcrl
mov
shl
cltd
jle
or
bnd
adc
shlb
jp
xchg
nop
gs
cmpsb
cmp
loopne
clc
mov
add
stos
jge
push
cmp
add
xchg
pushf
in
cmp
andb
xlat
jae
mov
cmp
and
out
mov
or
insl
int
sbb
shll
pop
mov
rcll
decl
dec
outsb
sub
or
and
and
jp
pop
divl
es
xor
dec
aas
dec
sahf
jp
xor
xchg
iret
mov
shlb
mov
dec
sti
xchg
cmpsl
out
push
mov
jae
sub
hlt
xchg
jecxz
iret
adc
into
leave
addl
dec
cs
sbb
cmp
mov
call
push
mull
sbb
xor
cmp
pop
repz
leave
xor
out
int
call
sbb
add
or
push
jne
xor
lahf
shlb
arpl
inc
call
andl
dec
jge
cltd
jae
out
and
and
mov
xchg
loope
sbb
dec
test
pop
push
inc
push
adc
dec
jno
xchg
pop
fistpl
int
xor
mov
sahf
cli
mov
testl
sub
sbb
mov
icebp
fwait
adc
pushf
pop
shrd
inc
mov
mov
lret
inc
roll
lahf
sub
insb
mov
movsl
hlt
cmp
fcoms
pop
and
popf
int3
xorl
inc
pop
cmp
lods
xorb
in
cmp
mov
push
lds
in
scas
push
orb
fiadds
cld
pop
jle
sbb
into
sub
cmp
das
jmp
repnz
fwait
hlt
jne
jne
movb
push
fisubrs
arpl
mov
rorl
out
and
mov
ret
out
ret
mov
xchg
or
das
imul
out
test
lret
loopne
xor
pusha
clc
and
int
xchg
into
daa
jp
mov
xchg
lods
repnz
stos
leave
test
subb
cmpsb
mov
les
cmp
and
or
test
iret
cmpsb
fwait
mov
inc
sub
jnp
mull
fimuls
push
dec
lret
stc
pop
and
test
mov
mov
rcll
cmpsl
test
mov
jmp
fcmovbe
in
stos
sbbl
push
pop
incb
inc
fneni(8087
ljmp
mov
hlt
int3
adc
loope
jp
insl
shrb
std
popf
stos
cmp
jg
inc
sbb
je
shll
int3
add
push
dec
pusha
add
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
jb
out
stos
ficomps
adc
adc
xchg
sbb
lock
mov
dec
pop
and
cmp
jb
int3
gs
jle
jecxz
fildll
inc
and
sbb
aam
dec
pop
jb
lret
push
inc
in
in
xchg
jg
or
lea
push
xchg
lds
stos
pop
inc
outsb
movsl
xchg
sub
test
shlb
mov
orb
jp
loope
dec
negl
cmc
ja
pop
movsb
pop
pop
fwait
mov
dec
fs
lahf
xor
add
ds
scas
push
xor
fimull
sbb
scas
jmp
cmc
cmp
mulb
push
dec
icebp
cmp
dec
and
jnp
ds
in
cmp
jne
pop
push
pop
jns
mov
mov
js
std
into
pop
mov
xchg
inc
and
xchg
push
xor
aaa
das
lods
and
sahf
mov
sbb
xor
pop
out
dec
push
pop
addb
push
xor
fwait
ljmp
lahf
jp
mov
sub
arpl
dec
and
cmp
push
loopne
sub
push
cmp
insl
push
nop
add
xchg
clc
mov
lret
cmpsb
shll
inc
pop
out
ss
js
pop
and
inc
cmp
negl
adc
aaa
jb
setp
repz
xchg
xor
mov
lods
dec
call
sbb
inc
mov
lds
pop
out
inc
pop
cmp
in
imul
push
sbb
mov
push
leave
inc
fsubrl
xchg
or
xlat
rclb
in
imul
stos
jno
ret
or
jns
adc
and
stc
pop
pusha
adc
xor
sub
xor
and
or
mov
push
shlb
jno
sub
hlt
aam
add
add
cmp
pop
in
dec
sbb
and
lahf
sbb
mov
cmp
mov
xchg
fnstsw
dec
and
push
mov
add
iret
jecxz
ficoml
rolb
lea
cmp
or
xchg
cltd
shrl
out
orl
ds
jne
or
jo
mov
lret
lahf
dec
mov
pusha
repz
mov
sub
out
cli
lock
cli
push
mov
sbb
adc
stos
xchg
pop
dec
inc
pop
dec
mov
aaa
mov
stos
aam
mov
sub
sub
xchg
mov
add
xor
dec
loop
inc
sub
pushf
cmpsl
pop
inc
sti
stc
sbb
adc
jns
or
push
call
xchg
testl
sahf
popa
inc
dec
jnp
lret
or
mov
popa
int
sbb
dec
pop
fnstsw
dec
out
and
and
je
sub
and
adc
fwait
jnp
and
jo
push
pop
or
movsb
scas
sbb
xchg
outsb
mov
or
fdivrl
dec
pop
mov
jb
jo
out
addl
mov
mov
jl,pn
movsl
lret
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
add
sahf
lods
es
adc
pop
adc
adc
and
imul
in
rcrl
dec
pop
pop
icebp
jmp
stos
inc
or
shlb
mov
add
mov
jecxz
cwtl
ljmp
jecxz
cmp
dec
sub
rcrb
mov
mov
mov
jecxz
and
xor
mov
imul
xchg
pop
sahf
jp
lods
sub
mov
add
dec
or
sub
mov
cmp
in
cmp
sbb
and
cmpsb
sahf
insb
rclb
jmp
ret
xchg
sub
xor
or
repnz
push
cmp
lret
add
test
insb
mov
fs
push
pop
ficompl
xlat
jp
clc
xchg
pop
adc
jmp
in
mov
xor
push
fiadds
movsb
pop
fildll
test
sub
mov
pop
mov
arpl
enter
inc
add
push
xlat
cwtl
call
jnp
repnz
outsl
mov
enter
or
cli
daa
cwtl
mov
out
inc
or
cli
movsb
add
mov
pop
movsb
mov
cmpsb
out
cmp
test
adc
push
mov
repnz
sbb
mov
jge
stc
in
popf
cmp
sub
push
or
enter
cmp
jge
mov
hlt
jmp
je
insb
pop
enter
icebp
dec
in
push
pop
push
orl
mov
es
push
cmp
aas
mov
jbe
insl
xor
mov
enter
push
push
test
mov
fcmovu
sub
adc
xchg
adcb
cmp
and
sbb
and
mov
scas
mov
add
adc
aaa
and
pop
lock
pop
dec
lcall
jmp
ret
inc
dec
lret
pop
hlt
test
je
dec
fdivrs
mov
xor
push
inc
das
lahf
mov
cs
mov
imul
add
cmp
xor
push
cmp
popf
inc
mov
cmp
or
outsl
pop
mov
mov
push
leave
inc
pop
pop
jne
ret
xchg
or
cmpsb
and
dec
cmp
mov
cmpl
das
fldz
lea
outsl
test
out
pop
repnz
mov
pop
lds
imul
pop
jecxz
repnz
push
loope
or
inc
jmp
pop
lcall
mov
faddl
inc
sbb
pop
sti
pop
adc
adcb
jns
subl
pop
push
jo
jae
jmp
test
jmp
sbb
or
jns
adc
notl
cltd
mov
insl
push
je
pop
test
jns
push
ror
pop
addr16
mov
out
lcall
fwait
sarb
fabs
and
mov
mov
shl
popf
ja
and
cwtl
call
shl
cmp
clc
mov
mov
es
insb
sbb
int3
mov
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
enter
adc
pop
adc
adc
push
cmp
and
mov
sub
mov
aad
aas
int
mov
cmc
push
aad
inc
fwait
xor
into
dec
xchg
sub
mov
into
and
cmc
movsl
int
or
data16
mov
lret
dec
imul
gs
pop
jmp
xor
aam
popf
ss
mov
pop
jge
mov
jo
jbe
lcall
mov
leave
repnz
push
repnz
dec
xor
les
push
aas
lock
sbb
inc
fdivrs
lock
xchg
xchg
push
fwait
stc
mov
sub
or
xchg
mov
pop
and
push
filds
mov
test
dec
in
mov
cmp
mov
xchg
sbb
les
test
inc
add
mov
fisubrl
sub
add
inc
mov
or
inc
push
lods
fwait
inc
xchg
pop
sub
outsl
insb
gs
add
or
push
push
cwtl
mov
mov
mull
mov
das
mov
pushf
xchg
push
mov
out
cmpsl
popf
pop
mov
fs
aam
stos
cwtl
mov
pop
aas
dec
test
dec
mov
fistpl
or
subl
out
xor
mov
or
arpl
xor
clc
sub
movsb
lods
fldenv
movsl
les
outsl
xchg
and
mov
jb
shlb
mov
bswap
mov
dec
jmp
jp
adc
add
and
pop
ja
stos
fstpt
dec
sub
jbe
push
mov
pop
and
or
call
jge
dec
xor
add
cmp
fs
adc
std
adc
jmp
sti
or
mov
push
jo
test
mov
pushf
stc
decb
cmpsl
sbb
insb
push
dec
adc
pop
push
fwait
cmp
or
outsl
dec
mov
mov
jecxz
rcr
push
and
pop
or
clc
add
jecxz
in
pop
movsl
mov
xorb
add
and
mov
popf
cmp
pop
push
inc
inc
les
sbb
pusha
push
pushf
ljmp
adc
add
fidivs
cmp
adc
or
fcom
cmp
push
push
xchg
mov
push
subb
clc
lods
mov
mov
rcl
push
mov
push
in
insl
test
jae
and
icebp
push
xchg
mov
mov
cmp
lock
sub
in
sub
in
pushf
xor
lret
cli
xchg
mov
xorl
in
sbb
lea
rcrb
shlb
mov
cli
lea
jbe
jno
mov
add
inc
dec
in
rolb
sbb
xchg
int3
xchg
jne
mov
mov
mov
dec
jle
jne
fcomps
test
cmpsl
or
ret
sub
subl
shlb
cmpsl
cmp
lock
sbb
inc
and
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
cmpsb
js
inc
adc
pop
adc
adc
in
loope
jmp
fucom
shlb
call
mov
outsl
sub
add
shrb
rorb
jecxz
loopne
rorl
push
cltd
shlb
push
es
repz
push
sbb
xchg
out
add
aas
adc
inc
ret
sub
mov
jo
jnp
sbbb
jg
jmp
ljmp
and
imul
push
movsl
add
inc
out
sub
mov
std
lcall
sub
cmp
mov
insb
in
fistps
out
pop
fnstcw
mov
int
leave
inc
addr16
inc
xchg
add
into
loopne
mov
sub
inc
loope
and
nop
es
xlat
push
mov
dec
test
stos
jp
xor
jae
cmpsl
inc
std
rcrb
adc
jmp
pop
data16
ljmp
dec
lret
cmp
and
mov
and
mov
mov
notb
fs
enter
jmp
lcall
rcll
mov
add
adc
bound
xor
aaa
in
das
push
pop
cmp
and
xchg
add
arpl
cmp
pop
jno
lea
ds
add
call
pop
mov
xchg
insl
pop
test
dec
popf
or
or
and
fnstcw
rcl
add
dec
shll
adc
xchg
xchg
in
inc
stos
ret
test
cltd
jne
jo
popf
cs
cmp
fs
test
mov
mov
out
int3
lods
dec
cwtl
or
cmc
sub
jecxz
add
shl
lods
fcomps
icebp
std
jge
sub
cli
sbb
sbb
mov
shrl
test
pop
jbe
subl
inc
das
js
mov
mov
push
stos
push
fldt
push
and
pop
loop
jns
pop
xchg
das
push
mov
lret
sbb
vshufps
imul
jle
pusha
push
push
ret
outsb
daa
hlt
inc
mov
ja
imul
fs
sti
std
fiadds
pop
sti
add
lcall
jge
fildl
clc
xchg
fbstp
popf
inc
jae
jg
adc
xchg
stos
shrl
xchg
fisubl
call
outsl
subl
nop
dec
dec
jl
sbb
xchg
stos
es
icebp
ja
aam
or
addr16
shrl
popf
stos
les
jbe
mov
push
mov
mov
jb
push
or
les
xchg
xchg
notl
addr16
mov
idiv
lcall
movsb
mov
arpl
cmp
mov
push
cmp
ficoml
dec
sahf
clc
sar
lea
mov
test
in
sbb
add
push
mov
push
ret
test
das
mov
mov
lret
inc
mov
call
adc
sbb
lods
outsl
xor
lahf
cmp
movsb
ror
aas
cmp
sbb
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
jg
jle,pt
inc
adc
pop
adc
adc
pop
and
fimuls
jne
pop
adc
dec
sub
mov
or
addl
nop
adc
fucomi
loopne
jae
adc
shrl
sbb
push
test
mov
xchg
cmp
add
inc
inc
xor
xor
cmc
je
lahf
aaa
in
mov
decl
lcall
or
jae
in
jl
adc
lods
cs
hlt
sbb
pop
nop
fadds
xor
lahf
add
and
into
pop
mov
stos
aaa
inc
jge
movsl
jnp
xchg
pop
jnp
aaa
lcall
and
int3
jno
pop
leave
cmp
arpl
int
pop
jge,pn
ds
jge
inc
cmp
stos
icebp
adc
push
push
sbb
pop
lock
and
data16
cmp
jp
pusha
mov
xchg
add
inc
btr
xchg
sti
fiaddl
add
mov
dec
mov
push
sub
hlt
jb
pop
pop
push
stos
das
push
push
roll
pop
xchg
cld
sub
cs
cmp
push
xor
iret
sti
popf
inc
insl
and
es
mov
pop
mov
pop
xchg
cmp
cld
loope
jne
fwait
xorb
inc
in
mov
icebp
add
sub
lahf
adc
push
mov
inc
fnstenv
jno
dec
sbb
sahf
mov
xor
int3
in
mov
pop
xchg
enter
gs
mov
mov
pop
dec
loopne
fwait
sbb
pusha
mov
mov
adc
leave
xor
aam
jmp
inc
inc
mov
pop
imul
int3
idivl
lock
pop
leave
out
jne
or
into
cmp
cwtl
rcrl
dec
fwait
in
jge
inc
add
insb
imul
mov
mov
xchg
xchg
pop
pop
testl
jmp
push
ret
bound
out
rcll
add
dec
and
das
scas
ret
adc
stos
outsl
gs
or
ret
dec
aam
pause
cmp
dec
xchg
or
cmp
xchg
mov
in
jns
lahf
push
enter
daa
xor
cmp
sahf
roll
rorb
shl
mov
xchg
in
addr16
cmp
xchg
xchg
ljmp
lahf
mov
insl
fbstp
mov
neg
push
insb
andb
lods
fmuls
pop
in
mov
ret
fwait
cmp
jmp
add
cs
cli
andb
orl
add
je
mov
test
lcall
adc
inc
sti
jo
push
or
bound
scas
and
xor
enter
add
imull
mov
sub
scas
and
dec
mov
mov
addr16
mov
orl
xor
subb
sti
imul
int
jg
mov
and
leave
out
and
movsl
xchg
add
sarl
add
mov
mov
test
jle
jl
sub
fdivrs
xor
lock
jae
es
nop
sahf
imul
inc
inc
jp
add
push
ljmp
and
inc
and
add
inc
and
iret
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
aad
xchg
imul
pop
jo
sub
fstpt
shlb
lds
loope
dec
inc
shl
xor
das
sub
lret
pop
call
imul
sub
das
outsb
jmp
dec
out
fstpt
loope
je
ficoms
mov
fsubrl
test
pusha
out
xchg
adc
ja
es
test
xlat
xlat
add
scas
shrl
xchg
add
int3
sbb
fsubrs
repz
movsb
pop
popf
inc
js
insl
ds
adc
insl
xor
push
lahf
and
repz
or
and
sub
adc
je
push
sbb
mov
mov
sbb
js
push
insb
mov
jo
fwait
loope
sub
mov
add
popf
das
lds
push
int3
mov
shl
cs
mov
pop
int3
daa
xor
pushl
idivb
mov
les
addb
in
fistpll
mov
jecxz
addl
add
stc
mov
jns
dec
and
mov
movsb
xor
push
js
adcl
lods
push
inc
cld
xlat
lcall
in
out
fwait
dec
mov
sub
jae
mov
sub
dec
push
adc
and
sub
aad
sbb
inc
fwait
or
fmull
mov
test
xchg
psllq
das
adc
dec
inc
pop
lods
xchg
fwait
loop
pop
sti
lock
mov
cmp
in
subb
sbbl
nop
push
into
push
xlat
pop
fisubrl
push
push
push
dec
cmpsl
jg
data16
fidivs
sub
adc
rorl
xchg
xor
mov
xchg
jecxz
popf
cmp
out
sbb
test
stos
call
and
cmp
jns
pusha
sub
lcall
sbb
repz
add
xchg
xor
push
mov
repnz
push
jno
scas
sub
and
inc
pop
hlt
in
ljmp
lcall
xchg
xor
cld
pop
icebp
jbe
dec
xchg
mov
out
push
mov
int
pusha
daa
jg
int3
enter
jl
orb
jge
shlb
mov
insb
jae
xchg
je
jl
and
and
jae
outsb
jno
cmp
push
pop
scas
shll
dec
mov
je
insb
sti
js,pt
dec
push
jl
push
out
xchg
mov
mov
cmpsl
cmp
xorl
sub
pop
dec
mov
cmp
arpl
fdivrl
jmp
cmp
adc
cmp
gs
push
fs
add
je
lods
daa
sbb
push
cmc
insl
loopne
shlb
mov
xor
or
out
mov
xchg
repz
jo
stos
jmp
shrl
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
arpl
sbb
push
mov
mov
bnd
cwtl
fld
xchg
push
or
mov
pushf
les
into
inc
mov
cmp
inc
shlb
loop
inc
sub
lods
cmp
cli
lcall
adc
push
jno
mov
sbb
jo
fsubrs
movl
sub
ds
pop
inc
in
cmp
mov
mov
sbb
mov
push
sbb
daa
add
repnz
cltd
icebp
imul
push
stc
ss
xor
and
repnz
neg
inc
and
mov
in
in
xchg
push
push
test
lods
leave
shl
jle
movsl
movsb
lret
cmpsb
je
call
add
xchg
pop
or
test
jmp
mov
lahf
and
movsl
dec
movsl
and
out
jae
in
movsl
inc
xchg
data16
mov
pop
mov
xchg
cmp
cmp
in
je
loope
sti
les
or
mov
sbb
loope
hlt
lea
jmp
bound
lods
xor
push
inc
filds
jp
test
popf
call
mov
or
mov
stos
adc
popa
mov
and
adc
xor
repz
pop
mov
inc
xor
xchg
sub
pop
sbb
mov
mov
xchg
test
ja
or
inc
out
mov
call
push
outsb
pop
or
xchg
mov
insl
inc
sub
arpl
out
repnz
push
push
jb
sbb
int
xor
mov
xchg
jle
loopne
jp
sbb
xlat
pop
pop
or
add
sub
add
push
movsl
jb
xchg
push
add
push
xchg
shlb
push
les
test
jne
dec
imul
push
mov
mov
imulb
jne
sub
push
addr16
or
sbb
bound
mov
mov
lods
addr16
pop
push
int
sub
call
icebp
shll
xor
sub
mov
xor
mov
enter
stc
mov
repz
imul
sbb
adc
jbe
fs
jnp
dec
cmp
outsb
mov
xchg
push
loopne
pushl
add
mov
pop
mov
jle
sbb
inc
mov
ret
mov
or
es
insb
lret
test
iret
or
push
cmp
shrl
xchg
xchg
arpl
cmp
or
xlat
imul
cmp
leave
sti
xchg
xor
pop
add
fcmovu
inc
fistl
dec
mov
vhsubpd
cltd
cmp
faddl
in
sbb
inc
mull
push
cltd
inc
jno
shlb
add
fdivl
cmp
jp
clc
dec
aam
mov
loop
pop
fdivrl
xchg
subb
mov
lds
mov
xchg
mov
popa
test
sub
cmp
pop
push
mov
or
scas
dec
ss
dec
out
dec
xchg
xor
inc
test
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
mov
ret
xor
adc
adc
pusha
loop
outsl
adc
mov
mov
ds
loop
mov
inc
mov
ror
mov
mov
mov
mov
xchg
enter
jg
fs
sbbl
sub
and
fisubrs
in
dec
push
test
mov
push
add
push
fldt
addl
pop
je
add
cmpsl
fsubp
sbb
insb
mov
scas
and
push
mov
inc
or
ljmp
leave
jae
cmp
jno
lcall
lea
out
cmp
pop
cmp
xlat
pop
add
xor
jb
int
add
test
rcll
and
xchg
push
push
lds
inc
sarl
pop
mov
dec
shlb
movsl
inc
mov
push
cld
pop
test
outsb
scas
les
or
es
sub
mov
adc
sti
mov
mov
xchg
dec
test
fmuls
fcomip
pushf
popf
lea
add
dec
icebp
fbld
test
shlb
xlat
jecxz
cltd
and
call
jle
push
sub
mov
rcrl
xchg
fsubl
sub
add
ss
or
fcoml
adc
and
dec
cld
clc
sbb
sbb
jae
dec
cmpsb
and
lods
and
add
adc
popa
sbb
xchg
adc
xchg
jmp
loopne
xchg
fs
les
pop
das
loope
sbb
xlat
mov
push
mov
cmc
adc
dec
or
ss
outsb
scas
rcrb
jg
xchg
sub
xchg
loop
and
sub
jo
inc
dec
pop
mov
sarb
sbb
scas
movsb
pop
in
adc
xor
shlb
out
test
imul
mov
fwait
dec
lcall
and
in
pop
adc
cmp
push
jb
mov
jg
ret
or
adc
imul
push
loop
loopne
sbb
inc
cld
xchg
lcall
ljmp
push
mov
loope
xchg
fsubl
enter
inc
pop
stos
mov
addr16
out
pop
fcmove
scas
jmp
test
test
jo
xchg
std
jno
lahf
xlat
dec
es
fxch
adc
sbb
out
or
fldcw
or
stos
arpl
jg
into
in
lret
aaa
xor
outsb
xchg
xchg
inc
in
fucomp
add
in
cltd
stc
pop
pushf
pop
xlat
xchg
add
mov
ds
dec
jmp
and
repz
jecxz
cmpsl
inc
clc
rorl
aaa
gs
xlat
dec
mov
mov
mov
push
cmpsb
mov
dec
dec
xor
nop
std
loope
es
fs
test
int
jne
orl
bound
arpl
ds
insb
pop
jmp
repnz
xchg
mov
xchg
xor
out
xor
cwtl
mov
outsb
int
int
push
cmp
inc
add
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
mov
jmp
sbb
movlps
add
enter
cld
testl
inc
sub
addr16
js
popa
cmp
mov
xor
mov
inc
dec
adcb
xor
test
loope
fsincos
jae
xor
jbe
mov
cmpsl
repnz
add
xor
imul
dec
mov
add
mov
lods
jmp
and
mov
and
xor
xchg
sbb
mov
xchg
pop
adc
ja
inc
pusha
inc
lret
push
cmp
pop
fst
inc
mov
lret
inc
sbb
mov
mov
iret
pushf
insb
je
std
arpl
not
out
lret
add
cmp
iret
push
scas
jg
jmp
aad
imul
ffree
aas
lock
xor
xorl
sahf
movsl
in
sub
ss
int3
xchg
xchg
outsb
cmp
inc
pop
mov
mov
pushf
mov
fdivrs
dec
mov
sbb
test
into
sahf
dec
xchg
les
orb
add
std
sbb
sbb
or
jb
fxch
pop
in
inc
dec
insl
stc
in
rcr
ljmp
or
fwait
xor
adc
jp
jge
cwtl
movb
or
js
in
xor
push
add
test
out
mov
mov
inc
fbstp
adc
push
hlt
dec
pop
lret
imul
loope
scas
in
adc
nop
aam
or
icebp
sub
jb
cwtl
xorb
std
jnp
mov
sub
rcll
jbe
rorl
jmp
loope
jne
and
xchg
sub
cld
outsb
out
lret
add
das
mov
les
cmp
leave
pop
xor
or
xor
xchg
cmp
xor
jbe
das
mov
mov
push
icebp
cmp
sbb
jno
jne
sti
iret
dec
insl
cmp
das
lods
pop
or
and
mov
shrb
loopne
inc
add
inc
add
add
dec
adc
jb
outsl
mov
adc
int3
movlps
addr16
add
lret
cmpl
ds
sar
fnstcw
rorl
out
lret
mov
incb
insl
scas
add
sti
lret
in
push
sbb
rorl
xor
dec
fldenv
dec
add
fbstp
insl
lock
sahf
mov
test
mov
test
aam
stos
mov
mov
test
popl
inc
mov
fnstenv
je
adc
popa
sub
cmp
mov
fs
mov
fwait
out
pop
cmp
rolb
cltd
mov
aam
xlat
push
lea
cmp
add
cmp
out
pop
or
xchg
pop
hlt
jmp
xor
lods
leave
and
mov
sbb
pop
lea
inc
jae
lea
popf
dec
iret
mov
mov
jecxz
sbb
aam
pushf
pop
cld
adcb
ja
test
adc
rcr
pop
pop
mov
loop
or
push
dec
add
mov
mov
out
sahf
sbb
and
lds
push
aad
push
mov
mov
adc
out
pushf
scas
add
lea
lret
outsb
lcallw
lods
mov
mov
sub
or
sbb
push
pop
sbb
and
jae
in
arpl
pushf
add
popf
push
pop
ljmp
scas
sbb
and
rcrl
lea
pop
xlat
inc
or
outsb
xchg
fs
pushf
cmp
or
movsb
hlt
mov
xchg
inc
mov
cld
lea
stc
outsb
push
push
xor
stc
xchg
pusha
mov
mov
movsl
dec
sahf
xor
outsb
push
xchg
aaa
and
xor
cmp
adc
jbe
loope
jge
and
xor
lods
push
call
pop
mov
lcall
aaa
call
nop
ljmp
fsts
sub
hlt
xor
fwait
mov
popa
jo
adc
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
sbb
aam
mov
adc
int3
movlps
cmp
sub
push
xchg
adc
cs
outsb
scas
mov
mov
je
ret
sbbb
sarb
xchg
ds
fucomp
xchg
and
std
adcl
push
add
jl
gs
jle
lahf
movsb
and
cli
bound
and
loope
pop
outsl
jle
test
or
dec
notl
and
push
inc
inc
cmc
and
clc
jb
push
nop
ficompl
push
adc
lahf
cmc
dec
jmp
scas
sub
push
sub
pop
mov
scas
mov
test
arpl
jl
in
xor
jecxz
and
adc
loop
mov
movsb
jns
repnz
xchg
cmc
push
add
sub
inc
adc
scas
pushf
adc
pop
mov
or
cld
jae
stos
mov
or
push
stos
add
xchg
xor
js
int
mov
pop
mov
sub
xor
les
sbb
push
jge
mov
lds
cld
insb
shr
es
mov
pop
push
mov
jp
popa
xchg
dec
aam
inc
dec
add
push
loop
add
jns
cmp
das
movsl
pop
adc
jae
popa
sahf
xlat
insb
jo
xor
jnp
or
movsl
cmp
std
outsl
dec
das
push
ret
pop
pushf
fs
jbe
mov
xchg
mov
cmp
dec
jmp
notl
xchg
cmpl
divl
shrl
xor
jns
ds
pop
lock
mov
out
xlat
dec
pop
push
stos
mov
lea
addl
movsl
lcall
lret
add
sub
cmp
dec
mov
or
adc
pop
dec
fistpl
jl
loopne
dec
add
jns
fisubrs
push
lret
xchg
lcall
cmp
mov
sbbb
inc
cli
or
add
mov
out
das
incb
and
cmp
cmpsb
and
inc
adc
sbb
inc
daa
xchg
enter
push
call
dec
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
and
sbb
in
ret
xlat
negb
mov
popf
cmp
shlb
cltd
jno
ja
call
sbb
sbb
ficoms
sarl
push
mov
pop
sub
or
es
int
dec
sbb
in
xorb
cltd
mov
cmpsl
pushf
xor
inc
add
dec
mov
lret
and
and
xchg
push
mov
test
push
push
icebp
lods
into
mov
jge
and
sub
pop
std
addr16
mov
mov
xor
add
in
mov
sbb
sahf
std
pop
scas
or
lock
inc
jns
inc
inc
xor
sub
sub
cmpsb
imul
rol
fisttpl
or
pop
xor
adc
inc
add
fnstenv
sbb
jmp
ja
pop
nop
dec
or
push
xchg
int
dec
pop
inc
jbe,pt
sub
xchg
mov
jg
in
out
leave
pusha
test
test
and
fxam
xchg
push
rclb
clc
call
dec
loopne
movsb
or
mov
mov
loope
pop
test
jl
rol
hlt
shl
das
ret
xor
sbb
pop
es
scas
hlt
dec
sbb
aas
mov
xchg
inc
ljmp
mov
jmp
cmpsb
pop
adc
cmpsl
rorl
mov
sub
inc
pop
dec
adc
jo
pop
mov
sbb
xchg
stos
imul
mov
cmp
arpl
xor
mov
fcmovne
cmpl
fidivrs
cmpsl
insl
inc
mov
add
movsb
fwait
in
in
push
xchg
push
cli
repz
add
call
jno
pop
mov
das
mov
sub
jmp
mov
hlt
sbb
aad
lods
xor
ljmp
xchg
fs
sub
inc
inc
lock
int3
repz
add
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
inc
stos
sbb
adc
movlps
cwtl
pusha
pop
sbb
mov
xchg
outsb
dec
and
xchg
cmp
in
std
xchg
mov
xchg
push
cwtl
sub
jge
mov
cmp
cmpsb
or
mov
popa
fisubl
jns
mov
mov
inc
sahf
mov
mov
fdivrs
adc
fnstcw
ret
outsb
cmpsl
dec
push
jl
push
sbb
inc
out
xor
push
movsl
outsb
and
and
sarb
fucomp
adc
arpl
cs
xor
push
andl
fcoms
xor
push
mov
sub
rcll
shlb
sarb
jge
out
iret
dec
sbb
fcompl
adcb
inc
lods
and
sbb
lods
add
pop
shlb
in
jmp
ja
sub
test
test
jne
aas
repnz
lret
mov
xchg
push
jecxz
popa
ss
sbb
leave
aad
push
xlat
mov
push
xchg
ds
mov
arpl
hlt
movsb
aam
aam
push
in
lock
dec
or
lret
ret
test
addb
lock
fwait
loop
scas
inc
inc
cmc
and
dec
loop
sub
cmp
sub
stos
or
sti
sarl
inc
push
and
cmp
add
jne
cld
rcl
and
cmp
jo
out
or
push
cmp
nop
cmp
stos
dec
and
mov
dec
fnstsw
adc
leave
lds
rcr
mov
fnsave
mov
and
mov
testb
mov
loopne
movl
shrl
outsl
push
insl
sub
xorl
xchg
test
enter
gs
push
dec
into
sbb
push
jle
dec
and
xor
or
pop
fcoml
sbb
fmuls
pop
cmp
cmc
mov
fildl
mov
ja
test
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
sub
stos
mov
adc
adc
jno
mov
adc
arpl
cmp
sub
xchg
or
cmp
cld
push
addr16
subl
call
lahf
mov
mov
sub
push
ss
xor
cmp
sahf
push
es
xchg
out
xor
jmp
orl
xchg
movsl
mov
jp
ss
jb
xor
movsb
push
xchg
call
adc
les
sbb
pop
les
icebp
in
cmp
std
inc
cmc
cltd
push
jns
cmp
fiaddl
xor
cli
xor
aaa
jge
les
cmovl
test
cmpsl
mov
cs
cmpsb
mov
jno
sbb
lods
mov
cmp
cmpsb
addr16
outsb
mov
int3
test
inc
or
push
inc
push
jmp
adc
adc
pusha
rcll
mov
push
mov
dec
mov
mov
daa
cld
xchg
pop
fwait
cmp
mov
inc
mov
push
out
in
adc
addb
cltd
arpl
sbb
jo
int
mov
popa
sub
pusha
icebp
rolb
hlt
pusha
les
mov
dec
out
in
aaa
cmp
outsb
push
test
iret
inc
mov
jle
jl
push
mov
xchg
cwtl
xor
mov
icebp
and
decb
cmp
cmpsb
loopne
push
push
xchg
popf
das
fistl
fs
adc
lods
dec
cs
xchg
inc
aas
popa
js
scas
mov
mov
stc
cmpsb
lcall
inc
or
les
cmp
inc
dec
mov
outsl
dec
or
scas
not
aas
mov
leave
cli
fcoml
xchg
xchg
pop
adc
push
cld
push
adc
in
test
xor
loopne
leave
outsb
clc
xchg
fsubr
sub
sti
mov
in
add
xor
or
inc
push
clc
nop
imul
in
je
jecxz
xchg
mov
fidivs
incl
add
movb
roll
in
incl
add
movb
rorl
or
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
mov
adc
adc
lahf
xor
imul
fldt
mov
add
mov
inc
ss
fs
leave
fdiv
xor
call
out
enter
jae
or
mov
dec
mov
and
jbe
and
xor
scas
enter
por
mov
aas
inc
int3
xchg
pushf
and
push
test
mov
repz
out
sub
mov
xor
jo
iret
adc
cmpl
inc
or
ljmp
je
and
xor
inc
shll
flds
sub
xchg
fyl2xp1
push
sbb
push
iret
jl
xchg
inc
pop
jno
movsl
mov
dec
mov
jle
and
fwait
or
mov
stos
jns
enter
filds
fisubs
or
imul
push
stos
in
insb
xchg
pop
lods
mov
call
lods
ds
in
mov
in
add
and
es
shrb
mov
test
in
pop
xchg
xor
out
pop
in
cmc
sarl
ret
pop
daa
mov
lds
hlt
mov
push
pop
push
dec
mov
push
dec
arpl
in
lea
push
in
mov
mov
push
sbb
inc
hlt
and
movsl
cmpl
pop
cmpsl
dec
stc
loopne
mov
rclb
sbb
cmpsb
fstpl
andl
sub
fsubl
mov
lds
loop
cmp
ss
cmp
push
shlb
dec
and
push
push
fwait
mov
cwtl
repnz
aad
iret
out
leave
test
dec
lods
imul
inc
dec
out
pop
add
scas
xchg
insl
mov
mov
mov
mov
adc
mov
jl
push
add
lret
aam
push
and
int
out
cs
jp
sar
pop
sbb
sbb
popa
lret
or
aas
pop
les
dec
xchg
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
jle,pt
or
adc
cmp
jnp
mov
jae
sbb
jb
out
imul
fsubrs
movsb
xchg
cmpl
les
les
adc
lea
and
aaa
xor
lods
xchg
mov
lret
es
movsl
xchg
mov
insb
nop
xor
lock
lods
cmp
neg
adcb
push
mov
rol
shlb
dec
outsb
stos
mov
clc
add
call
mov
pop
dec
mov
cmpsb
sub
mov
das
mov
fcoms
xor
enter
ret
pop
xlat
repz
mov
repnz
cmp
sub
test
push
icebp
inc
mov
lock
xchg
cmpsl
adc
sbb
jecxz
push
push
iret
in
pusha
std
adc
sahf
jbe
inc
xorb
call
cmp
imul
jl
lret
sbb
mov
iret
pusha
negl
test
or
mov
call
dec
out
pusha
scas
push
adc
mov
inc
rorb
out
daa
nop
ds
insb
loope
cwtl
popa
popa
mov
adc
adc
scas
lods
out
add
push
dec
pop
cli
stos
push
jecxz
sub
mov
pop
mov
andb
fimull
dec
dec
mov
add
cli
dec
lds
stos
mov
repnz
pop
stc
fistpll
push
dec
cmp
mov
imul
dec
or
sub
movsb
shll
ja
rolb
adcl
mov
cmp
daa
jecxz
test
jl
dec
add
mov
sbbb
pop
mov
shl
add
mov
fisttpll
gs
mov
cmc
cltd
push
mov
fidivrl
leave
dec
jne
sbbb
leave
into
inc
pop
outsb
lcall
aad
jae
insl
mov
xchg
shl
outsb
je
adc
addr16
adc
iret
repz
les
arpl
sub
aaa
popf
div
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
movsb
sub
fiadds
adc
adc
js
sbb
jmp
pop
inc
jp
dec
add
xor
lea
test
xchg
imul
dec
and
pop
and
inc
loopne
rcrb
in
imul
xlat
aad
adc
test
icebp
ljmp
cmpsb
adc
lods
sarb
fisttps
cld
fimull
sbb
pop
mov
stos
dec
sub
cmp
cmp
add
lcall
icebp
inc
add
jl
add
addr16
pushf
mov
mov
test
dec
ds
std
scas
out
push
sar
pusha
es
jno
jg
add
and
std
sbb
outsb
iret
or
rorb
out
test
jp
jno
mov
inc
inc
and
std
lds
dec
add
cmc
push
hlt
adc
push
mov
test
mov
fsts
adc
sbb
add
bound
in
out
testb
fadd
les
lret
je
fcmovnu
pop
test
pop
lea
dec
js
cmp
sbb
xchg
xor
dec
out
in
xchg
mov
cmp
call
flds
scas
testb
inc
jae
xchg
les
scas
lods
mov
iret
jmp
xor
inc
mov
daa
ds
loopne
out
shr
inc
outsl
retw
fxch
imull
insb
call
inc
in
mov
outsb
data16
cmp
cmp
in
and
out
clc
add
mov
xor
ds
jne
sahf
in
jbe
xchg
stos
into
cmpsb
scas
dec
fsubr
aam
xchg
or
insl
jno
lods
pop
jb
cmp
inc
xchg
pop
xchg
adc
pop
loope
pop
daa
mov
fcomp
mov
lret
imul
loope
jns
cmpxchg
leave
push
ror
out
leave
in
scas
int3
lret
cli
cli
pop
cltd
scas
push
push
jns
pop
sbbb
mov
pop
xor
loopne
sbb
std
fmul
xchg
fsubs
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
add
filds
mov
xor
ss
push
je
lock
addr16
add
and
mov
jae
je
test
fistpl
jge
mov
sbb
fistps
incb
cltd
andl
cmp
sbb
mov
mov
icebp
sbb
das
rorl
pop
sub
xchg
pushf
jle
mov
push
cmp
adc
es
in
out
fs
jecxz
loop
inc
pushf
js
dec
add
sub
popl
in
shll
iret
jbe
out
lret
or
xchg
push
cmp
add
andb
popa
xchg
jnp
addr16
xchg
test
mov
fistpll
sarl
pop
jnp
adc
std
test
mov
jbe
dec
fnstsw
cmc
jno
push
ds
test
shrb
ficoms
jns
jle
jnp
push
jnp
not
rorl
das
jnp
sahf
idivb
or
push
in
loope
adc
test
cmp
cmp
orl
dec
xor
ss
int
in
out
cmpsl
sti
push
xchg
outsb
push
push
xlat
mov
or
dec
lock
int
pop
mov
int3
fiadds
add
pop
dec
pop
nopl
cmp
mov
mov
lret
sbb
orl
stos
into
leave
stc
clc
inc
cmp
jecxz
sarb
dec
outsb
inc
dec
inc
out
lcall
lret
mov
pop
push
movsl
sub
mov
neg
pop
cmp
pop
jb
pop
roll
inc
mul
push
and
popa
dec
mov
ljmp
lcall
ret
ja
sarb
ss
mov
mov
jo
pop
and
inc
mov
out
mov
xor
loopne
rclb
aas
push
pop
repz
sti
iret
lods
cmc
shrb
push
push
sbb
or
rolb
xchg
es
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
pop
xchg
pushf
lods
dec
sti
adc
adc
or
fmuls
sub
test
pmaxub
sub
loopne
enter
push
pop
mov
push
cmp
mov
mov
sbb
sbb
cmc
bound
lock
outsl
imul
mov
sub
pop
pushf
addr16
push
test
pop
lret
pop
add
sub
mov
mov
sub
mov
add
xor
add
dec
dec
imul
mov
rorl
adc
dec
loope
imul
adc
dec
cmp
mov
insb
jb
les
pop
les
cmp
int
mov
cmp
pop
push
xchg
cmc
adc
insb
cltd
inc
xorl
push
cmp
or
fistpll
or
cmp
das
sbb
out
push
add
test
shll
jl
addr16
negl
call
fwait
jecxz
jae
jb
xor
xor
and
mov
outsb
clc
pop
jns
sbb
mov
pop
imul
pushf
adc
pop
jno
stc
test
lea
arpl
mov
dec
rorl
mov
iret
jne
test
pop
mov
xchg
nop
int
jge
out
inc
out
in
pop
dec
mov
sub
add
sbb
cltd
cltd
scas
insb
insb
jmp
inc
mov
add
fs
mov
dec
in
js
mov
sub
fadd
mov
inc
mov
lds
pop
cwtl
push
add
lods
mov
adc
adc
push
clc
pop
pop
test
cmp
sahf
jns
mov
mov
cmp
cmp
fstpt
sti
mov
jne
and
ja
mov
adc
repz
dec
int3
or
dec
mov
adc
fucomip
test
mov
mov
enter
pushf
push
jle
cltd
or
jne
shlb
js
insl
xor
decl
ret
add
add
add
js
aas
mov
push
notl
adc
or
inc
rcl
mov
jno
sarb
xchg
fadds
les
imul
das
adc
dec
cwtl
std
cmc
ret
xor
and
in
sbb
stos
and
xlat
xchg
mov
inc
dec
movntq
in
mov
or
pop
pop
mov
inc
fucomi
insb
dec
sub
cmp
enter
mull
fnstcw
mov
inc
mov
xor
jmp
inc
stos
xor
mov
cs
xchg
pmaddwd
xor
mov
mov
cli
imul
shl
ss
sub
or
push
das
xchg
xor
push
jns
xor
inc
mov
cmp
pushf
mov
fwait
jle
js
push
fwait
cli
popa
jbe
fcompl
aas
fisubrs
adc
ficoms
insb
cli
imul
lahf
pop
dec
sarl
fwait
in
push
inc
mov
popf
cmc
mov
rcrb
sbb
mov
rclb
fcoms
shl
addr16
pop
data16
cmp
je
xor
dec
aam
stos
push
dec
jle
sub
inc
mov
enter
inc
dec
insl
hlt
dec
insl
mov
adc
add
jo
clc
fisubrl
or
das
fadds
movsl
fnstcw
subb
or
or
add
cld
fs
push
in
outsl
pop
or
pop
test
push
out
and
lcall
push
in
test
cli
add
push
pop
pushf
and
sti
jp
inc
aam
and
aam
jecxz
xor
pop
out
fistpll
lret
and
push
mov
jo
lahf
or
inc
in
pop
mov
stc
mov
and
rclb
cmp
test
xchg
je
call
loope
rol
jmp
ret
aam
sub
xchg
bound
mov
xchg
out
sub
popa
adc
imul
fadd
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
sub
popf
inc
add
scas
daa
popf
mov
data16
pop
xchg
jp
dec
add
out
pop
mov
jno
enter
test
rcrb
outsb
cmp
push
jp
int3
and
loop
out
popf
sti
adc
xchg
and
and
mov
cmp
loopne
push
mov
xchg
xchg
movsb
loope
filds
in
and
outsb
pusha
cmp
adc
sarl
inc
negb
xchg
call
movl
mov
popa
add
dec
ljmp
orl
shlb
push
add
inc
xor
xchg
xchg
mov
sub
test
movsl
pushf
inc
add
mov
pop
decb
pusha
mov
lret
std
cld
or
mov
sbbb
xchg
leave
mov
xchg
enter
adc
js
add
ret
pop
pop
out
add
je
cmpsb
pop
cmpsl
lret
jns
sub
mov
xchg
cltd
es
pop
mov
in
inc
adc
sub
push
jge
mov
sbb
adc
lahf
add
ds
addr16
imul
lcall
in
push
sub
clc
data16
mov
enter
lcall
lahf
fisubrs
xchg
aam
stc
dec
mov
fmull
push
mov
sbb
cli
sbb
in
sahf
icebp
jb
negb
icebp
mov
std
xchg
outsl
outsl
adc
pusha
adc
mov
pop
call
fstps
nop
pop
cmp
xor
add
nop
dec
adc
mov
or
xor
fstpl
xlat
ds
cmpsl
xor
sub
cmpsb
xor
mov
arpl
in
popa
inc
es
mov
adc
fildl
mov
jp
iret
out
pop
cs
rorl
test
insb
jae
std
insl
cltd
mov
mov
nop
dec
fwait
popf
xor
sub
js
aaa
adc
iret
test
fidivl
push
fs
roll
xchg
mov
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
in
dec
mov
int3
movlps
call
push
neg
mov
xor
xchg
pusha
je
mov
cmp
repz
sbb
jecxz
mov
cmp
nop
mov
adc
sub
rcrl
and
pushf
aas
sbb
mov
pop
cmp
out
addb
out
push
pop
and
inc
mull
out
leave
mov
add
and
std
pop
pop
insl
jo
xor
sub
aas
push
jp
lea
fldl
mov
mov
add
jns
popa
xor
mov
adc
movsb
leave
mov
stos
fldl
adc
jo
test
push
xchg
sub
jg
shr
push
or
and
ss
adc
adc
mov
xlat
push
cltd
jmp
call
stos
loopne
cmp
xchg
stos
xor
mov
pop
dec
shll
cwtl
lods
jne
repnz
in
testl
into
test
enter
in
inc
fiaddl
in
ss
lock
pop
jns
loop
and
mov
notb
push
jae
lcall
pop
dec
int
les
out
cmpsl
pop
es
or
pusha
jp
fmull
adc
outsb
out
push
add
pop
jnp
loop
add
out
sbb
push
lea
mov
lret
pop
add
adc
data16
std
incl
sbb
dec
cmp
cmp
push
icebp
push
cli
inc
cld
or
mov
mov
aad
in
not
enter
mov
push
inc
push
push
dec
ret
jbe
add
fldcw
inc
and
stc
cmc
push
mov
push
pop
call
test
mov
lods
sub
mov
pop
push
cmp
ss
xchg
ret
mov
mov
pop
rorl
iret
ss
mov
sbb
stc
popf
xchg
pop
xchg
fists
pop
imulb
and
xlat
icebp
add
es
in
imul
cwtl
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
lcall
adc
cmp
mov
aad
push
sti
ret
cmpb
pop
out
mov
lock
aaa
pop
aam
push
add
pop
mov
and
mov
inc
xlat
cld
inc
pop
jno
in
add
xchg
sti
mov
add
jmpw
xchg
cmp
call
and
add
sub
cmp
in
or
out
data16
fstpt
push
mov
mov
inc
test
xchg
lahf
push
mov
push
popa
clc
push
push
test
popa
adc
sub
lret
lahf
data16
adc
mov
add
mov
pop
jnp
add
mov
sub
adc
xchg
arpl
lret
mov
adc
mov
jge
sub
adc
lods
into
iret
in
ljmp
fcmovu
jbe
fwait
xor
xchg
outsb
cmp
or
test
cmp
shrl
xchg
sbb
mov
jno
lea
jb
adc
inc
lret
fsts
icebp
imul
mov
shrb
int
sbb
jle
pop
jge
push
rolb
mov
bswap
mov
and
push
fstp
stos
in
xchg
sub
cmp
jp
push
fidivs
and
fisubrl
xor
and
add
mov
xor
jp
shll
movsl
sbbl
sbb
cmp
add
repnz
repnz
inc
sbb
sbb
mov
pop
inc
in
arpl
sub
mov
jb
les
and
dec
xchg
bound
lds
sub
and
adc
pusha
rol
outsl
dec
mov
fs
xchg
popa
out
imul
push
repz
lds
movsl
push
jne
mov
mov
jmp
xor
fisttpll
and
rcrb
lods
out
adc
adc
sub
xor
jmp
mov
stc
mov
loope
fidivl
xor
stos
push
xchg
xor
or
mov
cmp
add
fcoms
mov
jl
add
and
add
mov
leave
xor
push
insb
popl
fstl
in
hlt
mov
fwait
lret
testl
loop
in
adc
daa
mov
sbb
and
or
lock
sbb
or
xor
insl
push
imul
fwait
hlt
mov
mov
mov
fdivl
mov
jns
mov
rolb
push
xlat
inc
or
sub
mov
sub
les
les
jno
roll
insb
das
ret
aaa
xor
inc
cs
in
dec
jnp
fnstcw
fstpl
call
push
mov
popa
arpl
arpl
andb
pop
add
insl
xor
jbe
mov
adc
insl
xchg
adc
lfs
insb
out
ss
rolb
ljmp
rcrl
std
and
fcmovnbe
pop
inc
pop
push
add
idivb
xchg
enter
pop
mov
adc
test
loop
cmpsb
aas
inc
movsl
mov
cmp
mov
and
xlat
scas
xchg
sti
jl
push
cmpsl
mov
mov
sub
shl
cltd
xor
lock
fld
dec
mov
fnstcw
lahf
popf
push
pushf
andb
test
or
repnz
xchg
xchg
hlt
jns
sbb
inc
mov
and
cwtl
stos
dec
cmp
imul
mov
loope
xor
mov
sub
sbb
lret
cmp
dec
or
aad
scas
push
roll
jle
sub
inc
jns
lret
lahf
pop
std
pop
lahf
pop
mov
sub
mov
push
inc
push
roll
lret
adc
bnd
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
mov
imul
mov
ds
repz
and
pop
imul
cmp
inc
xchg
cmp
inc
insb
fldt
repz
dec
sti
sbb
stos
pop
frstor
outsl
movl
test
in
mov
jnp
loopne
popl
and
adc
fbstp
xchg
xchg
xchg
pause
inc
mov
shlb
fs
lea
add
push
lock
mov
rolb
cmc
ret
jge
aam
sbb
push
and
mov
jb
bound
dec
xchg
popf
test
adc
subb
lret
dec
movsb
mov
sbbl
cltd
mov
and
data16
push
shr
fists
xorl
add
cmp
push
insb
mov
xchg
pop
out
add
mov
xchg
or
inc
xchg
jno
loop
push
out
movsb
jp
cmp
rorl
add
xchg
clc
jmp
sbb
pop
mov
addr16
jne
insl
mov
stc
and
imull
repz
jb
xor
or
cmp
mov
xchg
call
adc
gs
inc
mov
into
incl
js
mov
stc
cmp
sbb
subb
push
mov
lret
daa
test
inc
push
idivl
dec
fwait
xor
in
movsb
pop
in
cltd
mov
mov
add
adc
cmp
aam
icebp
and
cmpsb
adc
jp
mov
pop
lcall
push
stos
pop
shlb
je
lds
cmp
mov
mov
xor
inc
jmp
adc
adc
or
mov
aad
mov
lock
xchg
icebp
jno
and
push
add
mov
and
pop
loop
icebp
mov
lahf
fsqrt
add
lcall
cli
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
daa
mov
adc
adc
imul
loopne
xor
adc
lret
movsl
js
cmp
lcall
pop
cld
dec
or
lock
mov
inc
pop
push
insb
xchg
loope
pop
ja
pop
add
repz
mov
mov
iret
push
aad
lret
repz
cs
dec
ss
imul
jg
fsubrl
inc
mov
and
enter
stos
dec
xorl
inc
push
sbb
mov
cmpsb
fnstenv
mov
xchg
xchg
rolb
dec
popf
out
test
cmp
xchg
jnp
rclb
repnz
pop
add
adc
xlat
mov
scas
std
ss
lret
mov
loope
aad
mov
mov
es
mov
cmp
mov
jne
push
cltd
lock
dec
mov
cltd
arpl
out
pop
ror
pusha
movsb
inc
mov
and
nop
shl
ficoms
jno
fildl
adc
jae
mov
cs
aad
out
sub
in
shrb
arpl
mov
dec
dec
int
sub
rcr
xor
push
mov
adc
and
push
stos
xor
sahf
ds
gs
cltd
les
subl
push
dec
pop
inc
iret
mov
aaa
push
flds
mov
gs
and
jne
jl
ljmp
mov
inc
or
inc
adc
call
sub
pop
mov
movsb
icebp
pop
inc
aam
sub
jge,pt
dec
mulb
mov
divb
aad
inc
or
rorb
mov
jnp
sti
flds
lock
xchg
insl
xchg
into
imul
test
lret
into
loop
mov
js
mov
sarb
mov
int
inc
icebp
das
fnsave
sub
popl
adc
movsb
jbe
pop
inc
ret
mov
lcall
mov
xor
mov
inc
lcall
fiadds
repz
mov
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
pushf
rep
push
ficoms
adc
cmp
jbe
int3
inc
mov
add
movsb
mov
and
movsl
jae
pop
fwait
insb
mov
mov
fwait
inc
or
pop
adc
hlt
stos
ret
pop
push
pop
pop
cmpsb
ret
daa
mov
inc
sti
test
movsl
dec
pop
add
lret
out
das
add
pop
push
test
fstpl
mov
or
pop
cmp
test
mov
push
jle
mov
jp
rcr
cmp
mov
pop
pop
mov
push
jg
repnz
out
mov
xchg
lret
pushf
test
jne
imul
fbld
jmp
fs
lods
add
aad
adc
add
adc
mov
sbb
mov
test
pushl
shlb
mov
call
incl
or
fcmovnb
aaa
repnz
les
mov
add
mov
fmull
aam
jne
cmpsb
cltd
push
sub
fldcw
and
and
mov
pop
call
fsubrl
mov
std
notl
insb
add
dec
stc
les
and
adc
stos
push
pop
fninit
mov
mov
and
repz
push
or
cwtl
mov
pop
aaa
xor
pop
mov
lock
enter
out
sub
inc
push
scas
cld
cmpsl
stos
addl
popa
pop
bound
add
int3
dec
insb
pop
cs
fs
test
addb
mov
jns
fnsave
aaa
or
jnp
sub
movsb
aaa
pop
imul
push
push
mov
push
fmul
xchg
inc
aad
push
addr16
xor
incb
lods
mov
dec
add
adc
lds
mov
and
dec
dec
xor
mov
lret
jp
xchg
in
in
and
and
xor
push
sbb
stc
call
lock
addb
imul
aam
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
mov
adc
adc
sub
xor
scas
jno
cmpsl
pop
mov
cmpsb
inc
cmp
enter
push
cld
cmp
xchg
addr16
push
inc
add
int
rorl
imul
aam
xchg
push
adc
push
mov
ljmp
imul
push
mov
push
cmp
sub
mov
mov
in
cs
jo
jmp
dec
push
in
aaa
xchg
arpl
and
add
lahf
mov
scas
daa
shrl
out
inc
sub
or
out
mov
cmp
mov
cwtl
sub
jns
xor
sbb
pop
in
dec
mov
push
ja
addl
or
popa
loope
jge
aam
sub
xchg
sub
fildl
stos
xchg
cmp
xchg
cwtl
and
rol
jecxz
sub
jne
inc
daa
popa
jns
mov
gs
sbb
aas
ret
push
arpl
or
cs
sub
add
mov
gs
push
sbb
cmp
test
lcall
aam
dec
sub
ljmp
imul
cmp
outsl
inc
mov
push
mul
push
rolb
dec
sbb
and
icebp
stos
cmpsl
lahf
subl
and
xchg
jns
out
mov
cmp
jno
jmp
fidivrs
add
mov
insl
pop
adc
dec
or
out
sbb
in
gs
mov
int
pusha
cmp
mov
out
fs
ljmp
cmpsb
shl
xchg
cmp
mov
outsl
shll
stos
pop
xor
lea
hlt
jb
dec
inc
stos
adc
js
sub
or
fadd
push
shl
xchg
cmc
jecxz
inc
es
ss
imulb
lahf
out
aas
add
xor
inc
out
repnz
into
cmp
xchg
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
mov
stos
jge
adc
adc
jb
sbb
mov
ret
add
xchg
add
sbb
push
test
push
sti
cmpsl
jmp
js
in
mov
mov
pop
jle
in
out
fdivl
sub
and
insb
mov
dec
xor
add
imul
cmpsb
ss
push
fucom
test
mov
cmp
cmpsb
stos
mov
pushl
adc
push
pop
pop
jne
xor
or
mov
stos
insb
and
push
sub
xor
mov
jmp
in
fdiv
jle
mov
lock
pop
push
pop
mov
insl
cltd
push
mov
dec
adc
in
testb
test
andl
and
stos
in
testl
insl
push
or
adc
imul
adc
pop
jmp
mov
out
fs
leave
or
pop
jbe
mov
xor
xor
xor
imul
dec
cltd
pop
push
bound
iret
xor
sub
add
pop
icebp
dec
adc
mov
cmp
leave
cmp
in
push
pop
icebp
or
movsb
sti
adc
or
adc
xor
or
repnz
pop
cmp
lcall
dec
xchg
divb
inc
fstpt
push
int
push
sarl
add
add
adc
cli
mov
add
sbb
jns
inc
mulb
insb
sub
mov
jle
jmp
cs
push
push
sbb
loope
out
loop
mov
cwtl
repnz
dec
cmpsl
repz
jecxz
mov
test
test
push
sarl
in
ljmp
test
add
adc
inc
mov
adc
dec
jg
xchg
cmp
jns
imul
inc
sbb
push
sbb
cmc
fstps
jne
adc
aaa
and
jecxz
lcall
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
nop
mov
adc
adc
stos
xor
cmpsb
mov
adc
out
cmp
mov
xor
pop
cmp
push
leave
cmc
fdivr
outsl
inc
or
ret
ja
cmpsl
call
les
scas
xchg
push
jb
in
call
icebp
push
out
mov
mov
jmp
negb
addb
mulb
pop
push
mov
icebp
add
fldcw
loop
les
adcb
jmp
outsb
mov
mov
xchg
jle
push
jnp
pop
aas
mov
insl
cmp
icebp
mov
xchg
inc
cmp
sub
fildll
in
movsl
jbe
and
and
imul
clc
adc
into
xor
cs
in
cmpsb
sbb
mov
aas
dec
cwtl
lock
jae
fcomps
enter
daa
xlat
mov
inc
enter
test
mov
fsubrl
or
cmp
mov
cltd
pop
or
imul
rcrl
call
ficomps
scas
pusha
int3
push
mov
jae
vpcmpeqb
aaa
jae
sub
aas
xchg
jbe
ss
jo
pop
mov
imul
cmp
test
push
push
std
or
dec
jp
pop
sahf
daa
stos
pop
pushf
cmp
sti
shlb
adc
insb
orl
je
push
adc
xor
fildl
mov
cmp
mov
sub
xchg
add
in
gs
imul
into
ljmp
cmp
mov
fdivrs
sbb
lcall
adc
jns
xor
loopne
or
stc
shlb
call
sbb
scas
pmullw
lret
add
add
jle
aas
pop
jnp
dec
mov
push
in
cmp
adc
movsl
add
sub
jo
push
dec
jg
or
fmuls
pop
adc
lock
cld
std
jno
push
mov
popa
popl
movsl
inc
aas
xchg
repz
lea
push
std
dec
add
jl
nop
mov
test
sarb
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
push
enter
movlps
or
es
sub
push
sbb
lea
cwtl
adc
and
add
aas
inc
xchg
lods
mov
ljmp
jl
sbb
pop
popa
hlt
in
mov
icebp
push
jo
jecxz
mov
sub
and
out
cmc
push
push
push
mov
mov
mov
aam
xor
es
out
dec
pop
in
loop
pop
dec
dec
pop
out
fisubl
out
cld
xor
mov
in
shrb
xchg
fistpl
sub
cmp
cmpsb
dec
pop
rorl
lcallw
inc
and
push
ss
sbb
xor
call
lahf
aas
xchg
adc
lcall
clts
repz
push
pop
add
or
shl
push
pusha
test
cld
dec
test
loope
mov
cltd
js
dec
lock
mov
inc
movsl
xlat
testb
adc
das
fiadds
aam
push
ds
jnp
add
sub
je
cli
mov
sub
mov
fisttpll
sbb
pop
xchg
shrl
imul
sub
sbb
or
xchg
jae
in
push
dec
daa
push
sahf
faddl
les
pushf
aam
popa
xchg
adc
mov
xchg
sbb
jne
jmp
repz
cmpsl
push
jge
mov
jg
push
cmp
movsl
push
sbb
mov
js
roll
aam
cmc
mov
sub
xchg
hlt
inc
loopne
ret
add
lcall
push
shlb
pop
ds
cli
ffreep
add
dec
xchg
cmp
sahf
ja
and
cmp
jb
xchg
cmp
pop
sub
sub
cmp
mov
and
pop
ja
loope
sarb
pop
incb
add
jmp
mul
in
sbb
stc
hlt
into
mov
in
fwait
out
mov
xor
xlat
adc
dec
test
shrb
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
loop
fdivrs
int3
movlps
das
cmp
ljmp
push
inc
sub
test
jb
and
xchg
popa
xor
and
fcoml
lock
xlat
dec
icebp
inc
test
xchg
jnp
mov
jg
out
mov
mov
cmpsb
xor
stc
jmp
sbbl
scas
mov
and
scas
push
push
pop
loope
adc
jg
aam
jo
outsl
add
mov
mov
cmp
imul
and
imull
lea
cmpb
xchg
dec
inc
aaa
loopne
pop
and
imul
add
xor
int3
add
orl
aaa
fimull
aad
xor
in
push
xlat
adc
jmp
aaa
imul
pop
mov
scas
push
mov
jle
movsb
xchg
dec
ret
test
inc
nop
in
loop
sub
mov
mov
adc
nop
xchg
and
mov
jg
jge
mov
addr16
aas
inc
and
xchg
inc
jmp
sbb
imul
mov
fcoml
pop
or
aas
pop
jecxz
inc
jg
pusha
cmp
movsb
nop
and
scas
loopne
adc
and
sti
and
xchg
movsb
jmp
shll
sbb
and
out
mov
pop
fidivrs
divps
mov
pop
ret
or
movb
xor
sub
push
mov
mov
push
mov
xchg
push
subl
std
je
and
int3
iret
test
mov
js
dec
add
inc
dec
pop
cmp
xchg
bound
inc
sarb
sbb
cmpsb
and
into
pushf
jne
nop
lea
xor
scas
in
sub
gs
lea
in
leave
or
jns
lahf
outsl
lcall
pop
dec
and
xor
fisttpll
xchg
xchg
mov
and
push
icebp
pop
adc
test
cmpsb
xor
adcl
orb
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
or
jle
rclb
pop
jl
stc
notb
mov
sub
outsl
inc
aam
rol
push
xchg
in
jg
fs
pop
push
cmc
icebp
mov
lods
fisubl
jnp
imul
rcl
push
imul
cmp
pop
cmpsl
sbb
xlat
pusha
mov
outsl
pushl
push
xor
cwtl
out
mov
jno
stc
push
or
addr16
jecxz
push
inc
outsl
jne
xchg
xor
mov
xchg
mov
pop
add
lods
lret
ds
addr16
mov
push
pop
mov
dec
mov
fidivs
or
out
lds
aad
lret
cmp
enter
jne
push
jno
push
xor
jl
sti
mov
notb
scas
ret
fwait
xchg
xor
xchg
ss
xchg
daa
dec
das
pand
repnz
jge
mov
inc
ret
lea
mov
outsb
adc
inc
pop
hlt
pop
out
push
ss
sahf
cmp
int3
arpl
jno
test
dec
xlat
aam
mov
push
add
rcl
mov
stos
mov
paddsw
jecxz
push
add
sbb
out
pop
sub
mov
loopne
cmc
jl
sub
pop
mov
xor
jle
loop
xor
shl
cltd
sub
mov
out
outsl
fwait
fwait
shr
movsb
movsb
and
outsl
pand
mov
sub
fs
push
mov
les
popl
es
popf
xchg
cld
xchg
mov
enter
movsl
sti
jg
arpl
lods
nop
add
fisttpll
inc
xchg
or
adc
je
cltd
into
das
inc
cmp
jne
dec
ss
movsl
cmp
out
jno,pn
mov
rorb
imul
push
sub
mov
mov
pushf
pop
jae
and
stc
icebp
fs
repz
je
inc
sahf
add
sub
jle
jae
mov
push
push
lea
add
pop
loopne
sbb
imul
lcall
or
add
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
jp
mov
int3
movlps
add
push
ljmp
pop
fistpll
addr16
cmp
xchg
sub
fs
popa
jne
fst
push
mov
call
fsubrl
es
repnz
mov
in
adc
push
sub
sub
sbb
xor
inc
adc
push
fmul
xor
pusha
push
mov
push
call
dec
inc
mov
call
fildll
pop
mov
popf
sbb
sbb
xchg
pop
cli
negl
pop
and
push
dec
sti
stc
scas
push
adc
xchg
in
addr16
scas
xchg
and
adc
fsubrl
push
cltd
ds
pusha
dec
inc
sub
in
aad
inc
sbb
stos
cmpsb
sbb
add
in
inc
iret
outsl
pop
xor
fcompl
mov
rcr
in
sub
inc
aaa
xchg
pop
cmp
das
xchg
jp
fs
fisubrs
dec
mov
bound
dec
xchg
xchg
pop
loopne
imul
stos
lret
popf
push
test
add
cmpsb
stos
movsl
sub
cmp
adc
adc
neg
loop
sbb
cmp
pop
insl
xchg
push
sub
bound
in
fcompp
frstor
repnz
mov
pushf
fwait
sbb
jo
adc
sbb
popf
xchg
jg
movsb
lret
int3
mov
ret
and
rorb
in
arpl
push
stos
cmpsb
pop
push
sahf
clc
filds
jl
ss
jmp
jl,pn
or
xchg
pmulhw
jns
lods
and
pop
push
mov
roll
adc
or
lcall
imul
int
aad
mov
cs
pop
mov
inc
fadds
cwtl
sbb
int
je
pop
or
dec
fisttpl
add
inc
gs
rol
out
je
inc
rolb
loope
xchg
jae
fsts
popa
dec
out
mov
pop
inc
pop
xchg
xchg
sbb
shl
xchg
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
sti
mov
movlps
pop
mov
xor
shlb
cmc
jne
mov
mov
mov
pop
scas
test
outsl
out
cwtl
sbb
and
jb
shr
adc
ja
bound
mov
insl
arpl
or
pop
loop
dec
popf
cmp
dec
sbb
xor
in
mov
fdivp
mov
xchg
inc
fcoms
shl
jno
pop
inc
out
jg
xchg
icebp
fidivrs
push
pop
and
sub
repz
xor
std
xor
dec
shll
outsb
stos
add
ljmp
push
ljmp
xchg
hlt
enter
in
pop
lret
mov
dec
or
inc
sub
dec
push
movsb
arpl
inc
iret
pop
mov
jnp
cmp
mov
xor
out
arpl
sbb
repnz
scas
andl
inc
es
push
lahf
stos
and
xor
pusha
jmp
test
adc
rorb
mov
inc
imul
ljmp
sub
push
push
imul
icebp
cmpl
pop
push
or
sbb
fwait
movsb
xchg
jge
jb
cltd
test
push
stc
sub
jnp
mov
mov
ljmp
out
push
nop
lret
test
cwtl
inc
push
iret
pop
les
mov
faddl
hlt
jg
mov
frstor
sbb
ss
add
sub
mov
adc
mov
notl
lea
fsts
mov
sub
xchg
arpl
fdivrs
fnstsw
inc
push
or
dec
push
outsb
cmpsl
ss
sbb
mov
test
lds
sub
dec
cmpsb
gs
jl
mov
ss
xorb
inc
aaa
stc
xor
sub
mov
inc
and
daa
mov
dec
imul
iret
sahf
push
xor
out
xor
and
mov
pop
or
mov
mov
mov
xor
hlt
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
adc
xor
test
xor
jns
mov
inc
xchg
ds
dec
jae
adcl
jmp
dec
in
outsb
dec
int
xor
or
sub
cmp
call
jmp
adc
mov
fwait
add
sarb
xchg
mov
repnz
mov
aad
iret
inc
jg
or
pusha
inc
ret
sti
xchg
push
dec
sti
scas
repz
sub
jne
sbb
lock
mov
shlb
or
mov
add
push
mov
bound
and
popf
push
xchg
mov
cmc
mov
loop
lcall
cmpxchg
inc
inc
into
in
out
push
fcompl
loope
test
lret
repnz
jg
push
scas
xor
push
adc
subl
jle
xor
cmp
js
xor
je
push
xchg
mov
loop
daa
sbb
mov
arpl
pop
xor
in
xor
test
fistl
add
pop
lahf
nop
es
sub
lea
or
imul
rorl
pushf
sub
push
int
fdivrl
shl
leave
iret
mov
sbb
adc
mov
or
add
jle
mov
inc
push
hlt
das
cmp
mov
mov
inc
jecxz
out
fldenv
xchg
jecxz
daa
xchg
lock
in
add
pop
mov
or
jmp
in
jle
sub
notl
outsl
mov
and
aam
movsb
add
pop
mulb
sti
sub
hlt
sbb
or
mov
dec
add
leave
clc
fimull
adc
adc
cmpsl
into
aaa
pop
cli
jecxz
mov
testl
js,pt
jmp
hlt
jle
mov
test
stos
or
stos
inc
mov
add
or
mov
and
add
lock
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
fidivrs
int3
movlps
cmp
adc
icebp
xor
push
mov
adc
pushf
push
shl
mov
aas
aas
sub
dec
and
mov
jp
cmc
out
pop
push
mov
std
sub
imul
sub
call
cli
cmp
lea
pop
inc
sub
and
mov
mov
adcb
frstor
sti
jle
les
ds
fdivp
sub
out
cmc
jnp
adc
loopne
in
xlat
jbe
loop
jo
fildll
aas
pop
popf
mov
pop
pop
pop
outsb
dec
dec
jb
jb
arpl
mov
or
mov
xchg
pop
sub
adc
jb
mov
jns
xor
aaa
fs
sarl
imull
xchg
rclb
adcb
xor
mov
push
jae
out
addr16
pop
outsl
fcmovb
mov
jge
adc
jp
outsb
pop
outsl
fdivrp
ret
in
movsl
jnp
add
and
mov
mov
push
xor
inc
adc
sub
mov
in
scas
scas
out
mov
push
mov
es
mov
sbb
fwait
dec
popf
xchg
das
ret
pop
push
je
inc
mov
ret
arpl
rcll
cwtl
push
stos
roll
xchg
push
and
push
mov
jne
adc
ds
xchg
sarb
outsb
adc
mov
cmpsl
xor
inc
imul
sbb
mov
data16
lock
sbbl
lcall
ret
sbb
mov
dec
add
sub
pop
sub
cmp
movsl
xchg
mov
int3
mov
gs
rolb
je
icebp
sbb
jo
adc
cs
mov
add
xor
lods
hlt
jl
push
mov
cltd
mov
mov
into
icebp
jge
push
or
outsb
mov
jp
jge
mov
cmpsb
fs
xchg
out
mov
inc
xchg
sbb
xor
xor
mov
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
movsb
js
scas
adc
adc
in
loope
sub
shll
cmp
js
pop
lock
popa
lahf
lock
and
hlt
pop
push
es
inc
push
push
inc
lods
push
leave
push
repz
ss
or
inc
insl
idivb
gs
in
loope
arpl
je
dec
mov
fdivr
xchg
inc
lahf
dec
movsl
cmp
fisttpll
out
repnz
dec
push
dec
xor
dec
sub
push
int
mov
lock
daa
xor
xchg
adc
dec
daa
iret
pushl
mov
and
and
adc
push
ret
pop
mov
adc
idivl
and
shll
imul
cli
mov
cli
add
cmpsl
or
inc
aas
pop
pop
and
popf
and
pop
mov
sub
lcall
inc
scas
ja
push
lds
push
out
jmp
data16
data16
mov
int3
or
mov
xchg
into
sub
push
icebp
mov
or
mov
mov
ss
arpl
sbb
subl
add
xor
add
arpl
sub
sub
movsl
mov
rcll
xor
popa
and
dec
mov
sbb
mov
scas
sub
adc
fs
insb
mov
out
shl
int
mov
and
stos
pop
fdivrl
out
xchg
test
adc
sub
xor
fstpl
adc
jp
fnop
pushf
push
inc
scas
ret
movl
xor
cmc
sub
mov
mov
inc
ljmp
sub
push
lret
push
mov
movsb
inc
clc
cmpsb
mov
pop
mov
sbb
add
fs
add
rorb
cmp
out
and
mov
lods
dec
mov
jae
or
mov
mov
cld
or
divl
es
fstpt
fnstenv
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
js
stos
adc
adc
or
lea
stos
cmp
insl
push
pop
xlat
fmull
xchg
insb
cmp
adc
aas
xchg
xor
call
decb
inc
pop
dec
cmp
push
fimuls
arpl
loope
pop
movsl
stos
mov
pop
movsl
jbe
cmpl
mov
pushw
inc
jle
ja
sbbl
mov
mov
push
movsl
subl
push
sti
and
jle
frstor
das
mov
je
xchg
jne
outsl
xchg
roll
xchg
sub
sub
and
shlb
dec
xor
adc
xchg
nop
cmpsl
loope
hlt
and
cmp
sub
es
call
mov
into
imul
cmc
mov
push
sub
push
jp
pop
and
xchg
std
inc
scas
lods
lods
xor
pop
xchg
or
adc
pop
push
test
imul
vpaddd
adc
sti
fisubs
out
stos
inc
loope
mov
gs
inc
fcomps
int
or
push
mov
loope
testb
nop
sub
std
ja,pn
pop
mov
bound
cwtl
push
add
imul
scas
push
xchg
stc
cmp
and
scas
scas
aas
in
sub
sub
push
mov
fnstsw
push
ljmp
add
dec
lret
outsb
popa
fidivl
push
or
scas
aaa
hlt
ljmp
insl
fwait
jb
pop
pop
inc
repnz
pop
pop
icebp
outsl
out
cmc
mov
jns
adc
add
mov
imul
scas
add
test
aad
sub
rcrl
pop
xchg
or
jl
xchg
aaa
xchg
out
jg
rcll
push
sarl
bound
daa
dec
popa
jns
sbb
sahf
out
add
push
dec
repnz
scas
add
ljmp
pop
mov
out
rolb
sar
add
dec
rorl
mov
cmpsb
cmp
aas
jae
loope
cmp
loopne
sbb
mov
inc
roll
add
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
jmp
data16
adc
adc
loope
add
andl
jmp
or
gs
pop
push
call
xor
push
jl
dec
cwtl
icebp
adc
mov
or
xor
lods
bound
push
jmp
mov
loop
sti
movsl
push
and
xor
pop
ds
cmpsb
shrl
mov
mov
iret
mov
mov
push
inc
inc
stc
jl
and
or
mov
inc
pop
push
pop
pop
fists
cmpb
and
sti
xlat
daa
loope
xor
bound
and
addb
push
jp
iret
pop
test
dec
call
in
hlt
flds
shlb
adc
nop
int
mov
mov
pop
jnp
sub
mov
ljmp
test
popa
push
jmp
adc
stos
clc
mov
loope
daa
mov
jo
arpl
or
icebp
int3
push
inc
rcr
xor
add
cmp
sbb
jmp
add
aad
pop
mov
popf
push
xchg
insb
jmp
xchg
inc
aaa
mov
jbe
dec
lret
dec
inc
jle
inc
mov
mov
inc
iret
popf
inc
xchg
das
mov
out
cmp
mov
call
icebp
cmpsb
stc
out
lock
adc
repnz
mov
stos
dec
loop
xchg
cmp
pop
shlb
push
cmp
lods
push
add
fdivrl
sahf
or
nop
pop
inc
add
and
es
in
dec
fimuls
dec
sbb
faddp
xor
lds
hlt
popa
mov
inc
inc
les
in
cmp
addr16
mov
enter
sub
imul
ja
out
fsubs
push
rcrb
pop
cmp
nop
dec
ficoms
movl
icebp
pop
mov
push
lcall
sti
sti
repz
lret
sbb
ret
mov
pop
lahf
push
js
jg
sbb
stc
subl
test
cmpsb
and
pop
hlt
cmp
cmp
inc
xor
or
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
xchg
fwait
cmp
push
mov
adc
loope
mov
adc
dec
cmpsb
test
lea
lret
mov
aad
std
je
sub
xchg
pop
sarb
lahf
mov
addr16
je
stos
or
or
sbb
cmpsl
push
xor
dec
pop
aam
push
pop
fmull
dec
lods
lcall
out
mov
xor
repnz
pop
and
jno
jmp
dec
decl
std
dec
lret
js
xor
cwtl
cltd
xchg
ja
push
sub
rcrb
test
jle
pushf
inc
jl
pop
inc
lcall
mov
fsubs
xor
xchg
aaa
sbb
cld
mov
mov
and
test
fsubs
mov
lock
test
mov
mov
dec
jnp
fsubr
or
lods
dec
aaa
nop
stos
push
sbb
mov
xor
out
mov
test
lock
in
mov
fists
imul
add
movsb
lahf
pushf
mov
aas
in
mov
cmp
xchg
into
adc
xorl
xchg
sti
sti
mov
pop
sub
sub
das
push
fadd
sub
in
push
sub
arpl
popaw
mov
sbb
stc
dec
or
outsl
mov
cmp
inc
mov
mov
scas
imul
pop
mov
xchg
mov
scas
pop
sbb
sbb
xchg
mov
xor
dec
dec
mov
scas
into
sbb
cltd
push
sub
or
lcall
add
push
jb
ja
ja
rolb
mov
lret
sub
loope
iret
sbb
in
pop
cmp
cld
repz
jo
je
insb
mov
pop
hlt
mov
mov
or
sbb
inc
pop
mov
fisttpll
jmp
push
sub
shrl
and
sub
into
jo
jnp
cmp
xor
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
mov
sahf
adc
adc
lods
lret
jmp
inc
jle
addb
and
mov
lea
inc
xor
add
jne
ja
leave
jmp
pop
xor
in
push
sbb
jl
cltd
mov
sub
jg
decb
push
stc
wrmsr
mov
jnp
cwtl
jbe
loop
sub
jl
imul
in
adc
mov
mov
push
mov
js
lods
mov
or
fs
cs
call
cltd
xchg
jbe
lea
inc
loope
lret
lret
pop
xchg
leave
pop
dec
adc
xor
iret
mov
jg
std
clc
sbb
inc
and
add
in
push
mov
fs
push
add
cmp
repnz
dec
sbb
push
xchg
stc
cli
sbb
ret
jecxz
pop
into
lcall
mov
jno
xchg
xor
jle
repz
or
cmpsl
repz
xor
cmp
cmpl
mov
inc
lret
mov
sub
mov
add
loopne
pop
or
mov
xchg
cmpsb
in
add
aas
insl
mov
mov
pop
mov
jmp
fimull
jbe
xchg
jmp
nop
in
xchg
mov
movsl
int
pop
xor
mul
mov
stos
sbb
ss
sbb
mov
cld
std
adc
pop
dec
scas
lea
jp,pt
adc
push
in
sub
rol
stos
addr16
pop
mov
pop
fwait
pop
jge
call
inc
dec
mov
xor
or
adc
xchg
inc
or
repnz
popa
cmp
daa
arpl
enter
lds
ja
movsl
mov
lds
cmp
aam
sbb
dec
sbb
pop
lret
inc
push
xchg
mov
push
mov
les
inc
int
or
cmp
call
sbb
scas
or
mov
loope
pop
daa
lcall
imul
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
adc
adc
adc
mov
pop
int3
xor
rcr
mov
lret
xchg
scas
xor
or
mov
or
cmp
movsl
insb
and
cli
xchg
imul
das
xor
icebp
test
mov
xor
hlt
xor
mov
ja
lret
fs
add
imul
jo
leave
andl
mov
push
pop
xchg
mov
xor
daa
mov
jmp
push
outsb
adc
add
fstl
or
cmp
test
out
cmp
sbb
into
testl
jmp
cmp
add
jbe
movsb
inc
mov
insb
loope
mov
imul
xchg
xchg
imul
pop
jno
cs
sbb
leave
scas
add
into
pusha
lods
mov
decl
imul
sti
jb
mov
mov
and
ljmp
sti
arpl
fistps
sub
out
jns
push
sarl
rorb
into
mov
sub
jno
int
push
std
mov
cmpsl
jmp
push
rcll
pop
dec
inc
mov
jp
adc
fucomip
rorb
push
bound
dec
rcl
movsb
lahf
push
clc
sub
jo
cmp
cs
ret
mov
dec
xchg
ficomps
pushf
imul
jns
pop
pop
sahf
addr16
xorl
push
or
cwtl
js
lods
add
mov
es
xchg
pop
sar
in
xor
mov
leave
xchg
adc
mov
push
rclb
xchg
sub
inc
adc
loop
aaa
sbb
or
mov
xchg
ss
push
hlt
mov
xchg
fmuls
addr16
fmuls
insb
mov
jle
xorb
arpl
cld
shl
je
mul
test
daa
mov
cs
fldl
in
pop
mov
jg
nop
adc
cmp
dec
inc
adc
add
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
mov
int3
movlps
ja
stos
loop
push
mov
test
subl
cltd
cmp
sub
mov
hlt
cwtl
xchg
pop
mov
pop
cmp
jg
sti
loopne
sub
stos
movsl
mov
dec
push
mov
push
sbb
sub
jle
jnp
adc
les
sub
fcompl
mov
lret
out
es
inc
or
icebp
mov
leave
das
pop
sbb
testl
fdivrs
or
or
test
jno
cwtl
testl
mov
cwtl
dec
arpl
sub
push
sub
cmpsl
gs
mov
addr16
ror
push
sti
fs
fs
jnp
call
scas
fists
insl
sub
mov
sub
sbb
ds
sbb
std
js
lods
addr16
into
comiss
out
flds
and
lahf
sqrtps
pop
or
xchg
push
sub
dec
ret
std
lahf
dec
pushf
add
nop
sahf
pop
cwtl
mov
push
ret
cmpb
jg
iret
pop
pop
mov
in
xchg
jo
sub
jo
imul
add
aad
push
shl
sbb
push
jmp
mov
lret
sbb
cld
cmpb
pop
inc
adc
sarb
jae
inc
mov
xor
pushf
cmp
sub
rorl
inc
pop
rorb
mov
or
inc
or
cmp
int3
mov
or
fsubl
or
or
mov
fldcw
scas
sarl
sarl
popf
push
pop
inc
ljmp
mov
repnz
jg
mov
xor
pusha
mov
insl
push
test
cli
lahf
jo
inc
and
push
fimull
popa
ja
int3
push
push
xor
adc
addr16
mul
push
push
cmp
movl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
loop
push
adc
movlps
xor
mov
sti
fwait
ret
subl
das
pop
pop
mov
imul
cmp
jno
xchg
inc
pushf
inc
movsl
mov
push
lret
or
dec
loopne
mov
push
lods
jle
dec
adc
popa
sub
lret
sub
xor
je
dec
shlb
push
popa
and
sbb
lahf
adc
imul
jp
xchg
or
mov
call
mov
and
or
xchg
pop
jle
push
inc
pop
stos
fs
sub
xchg
sbb
in
cmp
adc
inc
out
cmp
cld
sub
and
mov
push
je
push
sbb
inc
cmp
push
call
adc
pushf
mov
and
enter
mov
push
mov
mov
push
fistpll
jns
in
aam
gs
mul
fdivr
mov
lods
mov
cmpsb
add
in
outsl
das
lock
call
sub
add
movsl
sbb
or
mov
inc
out
leave
jno
in
call
cmpsb
mov
or
push
ss
or
jbe
loop
sarl
pop
hlt
popa
repnz
jns
insb
and
mov
sbb
xor
mov
mov
rolb
push
sub
xlat
xchg
das
jbe
and
lods
inc
cmpsb
gs
fcmovnbe
sub
stos
es
pop
pop
or
insb
sbb
mov
push
or
sub
sub
dec
mov
sub
out
pop
js
gs
unpckhps
xor
dec
repz
mov
out
out
add
repnz
iret
xchg
inc
pop
orl
shlb
call
dec
mov
jmp
xchg
in
lods
cmp
dec
jle
or
inc
lock
insl
cld
xlat
cmp
loope
shlb
sbb
scas
cs
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
sbb
stos
mov
adc
adc
cmp
test
mov
dec
cmc
enter
push
xor
cmp
lods
cmp
mov
sub
mov
mov
add
jbe
and
mov
loopne
loopne
sub
push
mov
mov
or
mov
fcoml
jle
mov
lea
cmp
cli
mov
lret
jmp
xchg
out
jp
xor
inc
das
jnp
jno
mov
mov
ljmp
push
jg
push
arpl
xchg
and
or
int
mov
fnstenv
adc
frstor
cmpsl
mull
outsl
xchg
or
push
adc
inc
incl
sub
jno
adc
test
or
aam
xor
mov
mov
add
jae
enter
data16
and
xlat
in
sub
and
mov
cwtl
cmpsl
pop
sub
mov
subb
ja
scas
cs
iret
jnp
je
test
mov
leave
adc
or
dec
sbb
cmpsb
add
jo
jo
scas
hlt
xor
stos
aaa
mov
cmp
adc
jl
jp
out
jbe
mov
mov
mov
or
lcall
insl
mov
stos
xchg
push
or
jge
mov
arpl
mov
mov
leave
cmp
fcoml
or
sbb
test
enter
adc
aas
or
lods
add
cmpsl
mov
and
arpl
push
clc
ja
cld
lahf
xor
test
lods
xor
in
push
ljmpw
out
icebp
pop
shll
out
add
lret
dec
fstpl
sbb
enter
jbe
push
jae
sbb
shl
xor
or
and
int3
and
cmp
xchg
out
jb
sub
xlat
jle
popf
insl
add
xchg
mov
xchg
sbb
sub
pop
mov
jmp
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
std
pop
lods
outsb
test
adc
adc
aam
dec
or
xor
pusha
pop
dec
repz
popf
ficomps
fstps
push
pop
cmp
nop
push
out
adc
fldl
xchg
repz
xor
dec
push
sahf
pop
xor
xor
out
push
js
inc
out
pop
sub
rolb
pop
les
ds
nop
or
xchg
mov
fiaddl
pop
pop
mov
mov
sbb
in
js
insl
out
repz
xor
dec
mov
xchg
or
vpshab
xor
mov
icebp
jae
sarl
sub
sbb
jecxz
ljmp
leave
adc
cli
repz
mov
fs
or
fildl
dec
test
jg
mull
and
push
ror
insl
sub
sbb
lds
scas
popf
aaa
fisttpll
push
cmp
mov
cltd
cld
out
mov
mov
dec
sti
shrl
cmp
rolb
outsb
dec
push
clc
inc
cmp
or
pusha
std
ja
and
js
xor
and
imul
lret
adc
mov
push
cmpsb
in
jnp
xchg
lods
sahf
xchg
std
adc
shrl
subb
fnstenv
test
dec
adc
jl
ret
pop
aas
or
cmpl
mov
dec
lret
sub
cmpb
sub
push
and
xlat
lds
popf
xchg
in
fwait
jle
outsb
mov
inc
adc
cmp
pop
mov
or
fbstp
mulb
add
mov
jo
mov
test
cmovb
cmp
push
cmp
or
dec
stc
cmp
sbb
pushl
mov
jo
mov
push
inc
ds
mov
jne
or
lret
or
arpl
test
lods
out
scas
xchg
mov
cwtl
sub
push
pop
sub
cs
mov
movsb
outsl
movsl
mov
out
xchg
push
sub
out
inc
lret
daa
cmp
andl
loopne
pusha
jnp
mov
mov
lret
ret
std
jb
jbe
rol
sub
cmp
outsb
add
sub
xchg
ret
jmp
mov
iret
icebp
adc
fldl
add
cmp
sub
mov
sub
arpl
mov
lods
movsb
maskmovq
testl
shlb
dec
cmpsl
and
jle
outsl
xor
jbe
push
and
cmpsb
inc
ss
es
dec
btc
jg
jns
xchg
fs
dec
or
popf
hlt
mov
jnp
xorl
inc
ljmp
dec
in
mov
lock
mov
sbb
cltd
das
mov
cli
sub
and
fcompl
bound
sub
push
mov
xchg
fisttpll
jne
mov
or
shrl
or
int
les
imul
pop
fisubrl
mov
es
cmp
dec
sub
int
lahf
jo
push
cmp
orl
add
add
or
sbb
and
lret
push
xor
mov
push
adc
adc
or
je
jmp
insb
lods
adc
test
lahf
test
dec
cvtdq2ps
ret
pop
or
inc
cmp
out
data16
xchg
push
js
mov
mov
imul
hlt
cwtl
popa
out
jno
cmp
jg
sub
and
xchg
xor
mov
cmpsl
xchg
pop
int3
fimull
dec
sarb
xchg
aam
cli
jle
mov
add
mov
inc
mov
lock
pop
vmovaps
cli
mov
repz
push
nop
dec
adc
vdivpd
pop
cmc
cli
testb
jle
jae
sbb
es
es
mov
popa
or
loopne
mov
xchg
and
scas
scas
pop
cld
les
xlat
mov
in
fwait
jbe
ds
jae
push
xchg
loop
sarb
push
inc
xor
sbb
jge
add
hlt
jne
in
and
adc
insl
mov
jp
test
lock
or
jle
testl
mov
adc
movsl
imul
jbe
fidivs
cld
pop
aaa
pop
mov
and
inc
fcmovnbe
and
inc
icebp
cld
jp
inc
xor
sub
mov
mov
adc
mov
push
aad
out
stos
xchg
or
jne
jge
pop
clc
mov
cmp
shrb
or
scas
xor
mov
mov
xlat
mov
xchg
push
push
dec
xor
xor
push
adc
nop
gs
adc
or
push
lcall
sarl
inc
push
es
gs
int
in
scas
xchg
pop
and
pop
mov
lods
cmpsl
jl
ret
or
cmp
imul
shll
js
dec
pushf
adc
adc
sub
mov
dec
mov
insl
mov
sbb
push
add
push
jo
aad
jne
mov
sub
mov
enter
sti
aam
jg
popf
mov
ss
das
add
addr16
jno
mov
stos
lahf
test
pop
das
cmc
movsl
pushf
insb
stos
mov
inc
cmp
imul
sub
mov
and
popa
movsb
jbe
fucom
cmp
push
ficoms
fcoml
loop
lahf
cli
pusha
mov
negl
ja
pusha
addl
xor
jecxz
outsl
call
mov
pop
out
lods
xor
aaa
sbb
pop
push
adcb
iret
dec
out
adc
mov
push
lock
mov
aad
xchg
loope
mov
mov
in
mov
scas
repz
movsb
push
mov
jnp
pop
xchg
pop
jae
lcall
push
dec
adc
sbb
mov
add
fistl
ret
lahf
mov
xchg
andl
inc
pop
aad
aas
push
jae
pop
mov
div
lods
push
jmp
pxor
lods
js
sbb
repz
fisttps
jnp
sar
mov
push
cmp
aas
sbb
js
dec
inc
ret
mov
bound
mov
iret
repz
sub
in
mov
es
imul
popl
sbb
js
dec
inc
jae
bound
addr16
ret
test
or
lea
pop
icebp
rcl
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
