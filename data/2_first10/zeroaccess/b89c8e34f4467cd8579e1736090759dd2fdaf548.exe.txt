push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
les
inc
bound
fstpl
bound
sub
pop
add
pop
jne
movsb
push
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
or
nop
pop
pusha
inc
nop
pop
push
cmp
lahf
lret
fidivl
daa
arpl
push
arpl
jecxz
dec
mov
icebp
sub
mov
inc
ja
mov
cmp
inc
mov
mov
out
mov
or
dec
ljmp
cmp
ljmp
div
mov
xor
aad
popa
xchg
xor
movsb
sbb
or
and
cs
jl
mov
sbb
mov
subb
sets
mov
mov
adcb
or
cmp
mov
add
lea
dec
mov
cli
sti
aaa
addr16
xchg
cmc
jecxz
adc
mov
mov
sarl
pop
xor
iret
dec
push
cli
outsb
imul
and
or
adc
jg
pop
insb
push
xor
stos
leave
jecxz
aad
adc
test
int3
adc
je
jne
jecxz
bound
pop
xchg
daa
mov
sub
sahf
dec
adc
orb
dec
ljmp
push
gs
popf
cltd
dec
aaa
dec
fldl
inc
neg
cmpsb
or
xlat
int
fldt
cmp
movsb
lret
push
popa
mov
cmp
dec
out
sbb
mov
lahf
cmp
mov
lret
testl
ret
stos
xorl
inc
rcr
and
in
in
or
jecxz
imul
rol
fildll
sub
hlt
fcoml
jg
mov
jnp
mov
jle
pop
cltd
stos
cmp
fwait
xchg
rclb
inc
dec
sahf
pop
adc
inc
mov
stc
xchg
daa
xor
mov
test
or
call
rclb
jge
fwait
xor
inc
clc
bsr
cmp
push
inc
xchg
sbb
scas
adcl
cmp
into
dec
mov
sbb
divb
adc
mov
xchg
sbb
aaa
and
push
ljmp
add
into
jno
aad
aad
mov
cmp
or
add
adc
push
cltd
out
jae
adc
xchg
mov
push
jg
cld
sbb
add
dec
adc
xlat
imul
jl
dec
es
inc
jbe
ja
inc
adc
lret
xchg
jae
sahf
mov
push
fimull
mov
mov
or
ss
cmp
add
jb
movsl
cld
jae
pop
std
lea
daa
inc
outsb
add
insl
and
lcall
dec
scas
std
jnp
pop
stc
and
cmpsl
andl
push
jge
adc
cmpl
mov
inc
sub
les
pop
mov
adc
jae
ljmp
jns
ljmp
movsl
xor
xor
cmp
ret
inc
in
pop
pushf
push
out
push
pusha
into
mov
cld
xchg
push
ret
je
and
sub
sbb
xchg
xchg
pop
shr
je
out
cwtl
push
pop
ror
into
cmp
js
pop
inc
mov
cltd
aad
jno
aaa
out
xchg
pusha
adc
sbb
dec
jecxz
aad
incl
mov
jle
imul
mov
repnz
andb
dec
push
lds
sub
in
dec
in
sbb
cmp
mov
jge
aas
aam
push
jae
repnz
lock
pop
sub
dec
in
xchg
cmpb
mov
push
sbb
cltd
inc
ja
cmpsl
in
das
sbb
xor
fcom
ret
sbb
frstor
jns
shrl
push
push
mov
xchg
push
push
adc
inc
ljmp
pop
shrl
mov
in
jle
mov
lock
and
rclb
xchg
arpl
iret
das
sarb
call
filds
jle
lcall
pop
cmp
push
dec
es
pop
std
pushf
cmpsb
jg
or
test
jecxz
fsubrl
mov
xor
out
lahf
inc
cmp
mov
das
testl
inc
xor
inc
mov
cltd
cmp
test
pop
out
sbb
jle
pushf
test
inc
xor
push
jnp
push
xlat
cmpsl
mov
mov
pop
mov
fndisi(8087
pop
repz
out
enter
mov
jmp
fisubs
xor
lahf
pop
and
push
dec
mov
nop
inc
mov
insb
sub
orl
icebp
pusha
test
shll
aad
cmp
sti
and
mov
jbe
in
imul
or
jge
xorl
stos
jae
orb
ficoms
test
out
sub
xchg
daa
shl
mov
inc
addr16
cs
sub
sbb
xchg
test
fidivrs
mov
inc
loope
das
mov
mov
popa
mov
adc
std
cli
pop
lock
inc
dec
mov
mov
mov
sarl
out
adc
cld
adc
faddl
aam
push
outsb
xchg
jb
ds
sub
sub
popl
cmp
xor
ds
outsb
das
push
loop
sub
mov
sti
aad
lcall
rcll
cld
mov
je
cmp
xchg
or
fs
mov
jge
lret
imul
xchg
loopne
rorl
movsb
out
test
sbb
dec
repnz
shrl
andl
xchg
push
je
jae
mov
or
sbbb
fdiv
imul
or
scas
cltd
mov
jmp
xor
adc
xchg
xchg
imul
int3
dec
adc
mov
lock
push
gs
sub
pop
outsb
in
xor
clc
mov
jge
sub
lret
sub
in
sub
mov
push
fwait
mov
cltd
testl
cmp
bound
pop
lret
cli
shrb
xchg
pop
xchg
xchg
js
adc
call
loop
pop
dec
push
xchg
stc
xchg
out
cmp
sbb
cwtl
mov
ss
mov
aad
test
and
scas
mov
mov
outsb
mov
jle
lret
aam
or
sbb
xor
inc
dec
jnp
cmp
jno
pop
andb
and
xlat
mov
orl
fcoms
js
lock
pop
movsl
nop
or
push
cmp
dec
aad
bound
shlb
adc
loopne
xor
in
push
cs
push
jg
mov
popa
cmp
gs
mov
lret
in
mov
stc
sub
in
lods
pop
xchg
inc
mov
ja
pushf
leave
sahf
adc
stc
rcrl
mov
mov
das
mov
push
push
mov
push
cli
xchg
outsb
sti
sbb
popf
cmp
stos
sbb
sub
imulb
lret
sbb
aad
sbb
xchg
add
cwtl
jl
cmp
inc
push
inc
incl
fcmovb
push
test
jmp
or
cmc
or
mov
xlat
mov
push
push
jle
inc
int3
push
adc
sub
cmpb
add
xchg
mov
inc
sub
leave
and
fists
push
adc
dec
mov
adc
adc
out
push
in
popa
push
cmp
or
xchg
push
lods
push
sub
mov
cld
inc
dec
movsl
repnz
movsb
test
mov
add
call
notl
dec
loopne
add
adc
pop
xor
add
das
mov
mov
iret
xchg
and
xor
fbstp
xor
rorb
mov
stos
cmp
mov
insb
js
mov
inc
jmp
int3
shrl
sub
adc
pusha
pop
and
xor
dec
dec
sub
add
push
les
jo
or
xor
stc
cmpsb
jo
lahf
push
pop
movsl
inc
popa
lea
adc
in
adc
clc
sbb
cwtl
xchg
dec
cmp
dec
hlt
jp
addr16
popf
bound
xor
inc
lods
mov
xchg
stos
lahf
xchg
fcom
lret
dec
mov
bound
rcll
dec
xchg
lds
adc
jecxz
xchg
mov
push
icebp
mov
test
das
pushf
call
cmpsl
pop
jp
push
sbb
dec
cmc
outsb
pushf
nop
dec
cmp
decb
cmc
or
dec
dec
jge
fidivl
cmp
arpl
jge
insb
dec
hlt
sub
adc
in
sbb
lret
mov
sub
incb
cs
or
cmc
test
int3
testb
imul
daa
add
test
in
sti
mov
ljmp
mov
ds
int
and
rolb
or
mov
leave
pop
fiadds
mov
ficoml
push
outsb
fwait
jns
std
xchg
repz
push
jg
out
into
add
and
ds
std
and
pop
lock
xor
fsubl
pusha
repnz
in
data16
mov
jge
jecxz
addr16
shll
add
xchg
mov
bound
in
lods
sub
mov
aad
sub
scas
js
in
jno
mov
test
sbb
ja
mov
leave
aas
dec
cli
and
mov
inc
lret
add
and
mov
fdivs
call
inc
test
push
aam
push
jno
lret
movsb
push
mov
stos
stos
cmp
jmp
js
xor
push
jae
add
dec
stc
pop
jae
std
test
mov
jmp
xor
and
pop
lock
mov
inc
xchg
ret
and
lods
and
and
dec
lock
inc
idiv
mov
dec
cmpsl
xlat
out
and
outsl
arpl
ljmp
cmpsl
adc
pop
out
push
cmp
jmp
mov
adc
cmp
push
adc
add
jmp
dec
dec
mov
pop
push
out
sbb
push
dec
inc
and
insl
js
jl
dec
jp
xchg
mov
insl
iret
inc
push
popf
pop
cmp
stos
mulb
mov
xor
push
adc
xorb
imul
pop
jle
adc
mov
jecxz
lock
test
cmp
shlb
pop
mov
incl
and
sub
sub
test
mov
cld
repz
scas
iret
clc
leave
test
jle
mov
imul
rolb
clc
out
push
scas
and
loopne
cmpb
mov
jg
nop
jb
cmpsl
adc
std
push
sub
push
aas
or
sub
push
xchg
nop
cmp
addr16
dec
fdivr
test
stc
push
dec
or
push
jle
mov
jle
inc
hlt
xor
pop
ja
rcll
jno
push
cmpsl
out
and
out
or
lods
xchg
push
imul
shlb
in
adc
sti
movsl
jecxz
jb
jo
pop
mov
sub
fcomp
jg
pop
movsb
xchg
sti
sub
sbb
test
cmpb
push
iret
pop
xor
imul
push
inc
ljmp
int3
dec
stc
cmp
push
sbb
mov
or
test
test
mov
in
cwtl
cmp
decb
stc
inc
or
pop
sbb
rorl
shl
or
lock
dec
sbb
push
sbb
mov
inc
dec
adcl
loopne
adc
out
jae
sbb
fistpll
inc
pop
cs
sahf
push
jae
aad
lock
rcll
inc
in
int3
jne
adc
out
movsb
sub
mov
std
idivb
pop
int3
adc
jo
inc
loope
sbb
pop
pop
or
imul
lds
sbb
sub
xor
ds
cltd
jnp
xchg
stos
pop
ret
imulb
inc
sbb
shll
inc
add
inc
sbb
loop
std
pop
inc
xchg
in
or
xor
cmp
testl
ret
fcmovne
xor
mov
jo
cmp
stc
pop
sbb
and
dec
fldt
roll
sbb
lret
int
int3
sbb
inc
bound
imul
lret
in
xchg
mov
inc
movsb
std
cmp
xor
hlt
jns
mov
popa
clc
negl
aaa
mov
xchg
mov
sub
enter
pop
push
mov
and
mov
pop
xlat
pop
and
stos
cli
test
test
repnz
es
out
test
mulb
movsl
jb
test
or
ret
lods
mov
out
xor
mov
mov
xchg
imul
or
xor
loope,pt
cmp
add
or
hlt
loop
and
std
xchg
imul
test
rcrb
cmp
les
cltd
and
mov
das
out
sub
cltd
mov
xchg
arpl
cmp
xor
cli
xor
movsb
shll
xor
repz
mov
xchg
popf
or
insb
mov
push
mov
xor
in
stos
test
sub
inc
jae
sarl
mov
dec
inc
dec
jo
jecxz
dec
fisttpl
mov
popf
pop
fwait
cmovo
adc
pop
rol
shll
fmulp
fcomi
test
mov
fldl
cltd
xchg
sbb
pushf
xchg
in
ja
ss
int3
ret
or
sti
leave
or
sbb
repnz
push
cmp
pop
fwait
sub
push
jo
lea
jge
push
in
bound
inc
adc
scas
add
jo
int
out
js
repz
push
push
aas
mov
js
shrb
inc
pop
cmpb
lds
mov
out
outsl
or
pop
xchg
push
jmp
imul
enter
lret
sbb
pop
in
mov
fnsave
jo
xor
pop
popl
sbb
lock
mov
fwait
adc
xchg
xor
mov
imul
sub
sti
mov
int
sbb
mov
in
cwtl
push
pop
dec
mov
xor
sbbl
lds
or
mov
aas
adc
out
out
adc
pop
xchg
cltd
std
cmpsb
or
cmp
aad
pop
movsl
inc
sbb
scas
jb
mov
lret
in
iret
or
adc
addr16
add
or
jge
inc
out
inc
jno
outsb
and
jno
mov
pushf
sub
fwait
lods
decl
test
or
mov
or
mov
popf
or
and
incb
adc
stc
cltd
mov
int3
cmpsl
lea
mov
inc
mov
scas
mov
stos
cmp
xchg
push
fdivrs
imul
adc
in
repnz
test
add
mov
cli
mov
push
icebp
pop
pop
std
dec
lods
cmp
loope
adc
leave
or
push
lods
pop
lds
int
out
xor
scas
mov
push
jns
mov
jmp
repz
test
aaa
scas
xchg
inc
data16
lahf
enter
inc
jmp
mov
ja
cmp
mov
icebp
test
jnp
pop
or
add
dec
and
sahf
jae
ja
pop
enter
test
popf
movb
or
dec
ret
xor
cmpl
xlat
movsb
cli
addr16
loope
bound
pop
std
ljmp
and
sbb
sbb
inc
push
sbb
sbb
mov
cmc
mov
in
xor
fidivs
dec
inc
inc
mov
xor
repz
adcl
and
ss
lock
xor
mov
xor
sarl
or
in
scas
xorl
test
push
out
adc
test
stos
and
imul
scas
sar
xchg
pusha
jbe
xchg
mov
repz
pop
pushf
test
outsb
inc
hlt
aas
mov
psrlw
fwait
mov
mov
sub
mov
idivl
out
pop
xor
push
xchg
add
iret
out
xorb
call
add
inc
jle
adc
push
insl
xor
jle
pop
xchg
lds
lahf
xchg
mov
jmp
das
insb
lds
insb
or
mov
xchg
lcall
xchg
cmpb
ret
adc
into
jge
inc
xchg
in
xor
call
fsubrs
lods
mov
xchg
fneni(8087
mov
out
sahf
cmp
cmp
setno
lds
inc
sti
in
test
mov
enter
out
insb
ja
xor
add
inc
fisttpl
aas
mov
lods
sub
cmp
stc
outsl
stos
pop
inc
cmovg
loop
xchg
dec
repz
cs
insl
in
pop
inc
dec
outsl
test
fadds
inc
or
in
cmpsl
in
add
dec
push
je
mov
andl
cs
mov
add
xorl
addr16
leave
lcall
int3
jns
loope
pop
outsb
lret
sbb
stos
ret
nop
ret
outsl
xor
add
xor
lret
cmpsl
jl
push
add
sub
cmp
dec
sub
xchg
or
test
cmp
test
ret
adc
and
cmp
push
inc
cmp
pop
push
fmull
xchg
out
int3
out
dec
jmp
mov
cmp
fisubrs
lea
ret
cwtl
pop
sub
mov
shll
loop
in
xor
stc
xchg
ret
or
and
adc
pop
sub
xchg
or
inc
hlt
test
insb
subb
neg
popf
mov
rol
into
xchg
add
add
pop
leave
xchg
xchg
jne
xchg
push
sbb
sahf
fmuls
loop
dec
rcll
adc
daa
inc
pop
inc
bound
icebp
xchg
add
mov
mov
popf
enter
dec
ja
mov
aad
sahf
push
jae
int
add
mov
rorb
fisttpll
test
je
sbb
push
rol
lahf
jbe
test
je
push
push
loope
fs
fs
xor
pop
aas
repz
fimull
das
fwait
imul
pushf
je
nop
mov
mov
cmpb
in
cltd
dec
aam
roll
dec
js
cmp
int
pop
mov
hlt
mov
xchg
outsb
clc
cltd
clc
cmc
lahf
pop
addr16
sub
sbb
lods
je
jp
or
cmpsl
dec
mov
or
push
icebp
sti
cmpsl
mov
cs
or
mov
push
lret
iret
loopne
sbb
mov
xor
xchg
aas
cmp
dec
or
pop
xchg
sbb
ljmp
and
mov
push
mov
jo
xchg
xchg
pushf
sub
cli
das
sbbl
push
cmp
sub
jno
incl
jp
std
rolb
push
xor
push
bound
ret
push
bound
mov
dec
mov
pop
and
lods
mov
inc
sub
and
lods
rcrl
mov
pop
shll
mov
sub
jl
outsl
mov
in
cmp
mov
push
pusha
add
lods
clc
sub
movsb
jno
xor
pop
loop
pop
cmp
mov
inc
jl
lret
sbb
lea
mov
mov
mov
sbb
xor
dec
mov
cmp
sahf
mov
pop
jne
icebp
cwtl
adc
inc
cmp
outsb
and
mov
dec
jo
call
mov
adc
mov
aam
popa
orl
inc
mov
lock
dec
pushf
mov
or
movsb
mov
daa
int3
mov
adc
xor
stos
insb
mov
push
adc
inc
ret
xor
adc
cmpb
push
int3
mov
int3
dec
sar
rcr
sbbl
mov
inc
cmp
mov
dec
fcomps
push
nop
leave
xor
bound
xor
jecxz
jbe
push
out
dec
xchg
or
cmp
rol
fisubl
push
jb
cmp
mov
rorb
stc
dec
lods
outsb
mov
mov
call
inc
and
mov
test
cld
jns
outsb
jae
insl
in
and
sbb
movsl
jne
jecxz
add
mov
push
nop
dec
mov
cmc
ret
jl
in
jmp
cmp
xchg
std
jg
fistpl
divl
adc
fdivrl
pop
inc
arpl
insl
pop
imul
cmp
idivb
pop
shlb
arpl
iret
dec
pop
dec
mov
inc
movsl
aam
pop
mov
loopne
or
cmp
mov
movsl
mov
xchg
jl
stos
mov
mov
cld
jae
outsb
xor
gs
test
insb
inc
sbb
cmp
repz
pop
jae
in
les
sbb
mov
ds
jmp
xor
test
mov
push
lds
ficompl
cmp
pop
sahf
mov
and
mov
out
enter
mov
jbe
cld
pop
out
test
mov
fs
dec
fldcw
mov
in
sbb
sub
mov
xchg
mov
mov
imul
ljmp
in
fwait
pop
sub
out
inc
xor
idivl
les
out
add
or
push
inc
pop
sti
es
fwait
mov
add
in
movsl
mov
in
out
mov
cmp
repnz
popa
pushl
xchg
addr16
dec
xlat
or
jns
mov
xor
rcrb
sti
mov
outsl
test
push
mov
out
xchg
mov
jae
jne
shl
std
sbb
adc
js
fisttps
push
in
dec
rcll
mov
mov
or
sub
lock
rclb
es
pop
rcrb
xchg
outsl
ret
fists
sbb
lods
adc
pop
lock
repz
mov
mov
roll
dec
and
add
pop
lea
orb
xor
rorl
mov
aas
shlb
cmovle
mov
jbe
sbb
jmp
jno
mov
cmp
lea
in
xchg
ljmp
inc
cmp
dec
ds
daa
ss
sbb
dec
inc
aad
sbb
loope
mov
shl
sub
xor
mov
xchg
lahf
test
rolb
jge
push
xorb
fdivrs
outsb
icebp
cwtl
js
testl
xchg
mov
jnp
outsb
sub
out
lret
fidivs
fistpl
jno
lret
ret
stos
adc
sub
or
sbb
insl
ret
js
in
rorl
dec
std
lret
pop
gs
jmp
pop
ss
and
inc
lea
pop
add
lahf
inc
repz
clc
popa
mov
daa
push
aaa
sbb
mov
sarb
or
es
sub
xchg
cmp
insl
sarb
xchg
movsl
mov
jmp
sub
push
inc
xchg
dec
out
int
mov
xchg
lret
or
pop
ficoms
inc
loope
xchg
test
test
pop
sti
mov
adc
cmp
sbb
addr16
xchg
incb
sbb
pop
imul
daa
mov
iret
shll
mov
mov
sahf
jns
outsb
mov
cmp
enter
inc
jp
pop
hlt
fbld
popa
xor
sbb
out
dec
fisubrl
mov
jmp
or
jno
call
popf
jo
pop
sub
int3
insb
out
cmp
inc
out
push
repz
cmc
and
xchg
inc
pop
push
push
dec
fmull
xor
jp
sar
jb
addb
lds
adc
pop
imul
scas
xchg
nop
dec
pop
pop
add
pop
hlt
popf
sti
mov
sub
or
xchg
fwait
add
mov
enter
cld
shlb
roll
or
popa
adc
in
inc
aaa
iret
fidivs
ljmp
stos
test
xchg
jp
dec
mov
mov
lcall
ja
jbe
sbb
push
pop
dec
fs
aaa
orl
pop
ja
dec
pop
shll
mov
jmp
pop
and
xlat
dec
pop
lods
imul
push
xchg
repz
mov
stc
jl
inc
mov
mov
push
add
jo
sub
loopne
cs
ds
mov
xchg
sub
lds
test
lret
gs
ret
inc
les
cld
sub
stos
repz
outsl
jns
mov
adc
pop
jno
adc
mov
push
mov
hlt
cwtl
pusha
fwait
adc
push
xchg
jmp
sbb
xor
insb
lds
mov
jge
lods
push
and
cmp
stos
out
icebp
nop
arpl
xor
jae
int
mov
jno
loop
xchg
inc
lods
addr16
pop
pop
rcrl
je
ror
aam
xor
imul
hlt
xchg
add
mov
arpl
test
sbb
adc
stos
xchg
add
mov
cmp
xor
or
mov
pop
jbe
mov
mov
xor
xchg
pop
jae
xor
jb
ret
aam
xor
in
ds
cmp
inc
stos
repnz
pop
bound
fidivrs
xchg
mull
jle
push
lret
mov
stos
or
je
lcall
xor
rcrl
xchg
out
ret
xlat
fidivl
loopne
lcall
pop
mov
inc
jl
sbb
enter
xchg
pop
js
roll
and
and
dec
adc
cs
mov
jmp
dec
mov
gs
dec
shl
fs
icebp
xchg
std
nop
cmp
cltd
xor
ret
pusha
dec
loope
outsb
sbbl
call
inc
mov
xor
mov
movsl
fs
or
and
pop
and
fcoml
mov
in
std
jne
call
cmc
sub
lret
aad
mov
xchg
enter
scas
adc
inc
in
fs
mov
pusha
shll
add
popa
jmp
push
xchg
dec
mov
mov
push
and
cmp
adc
ljmp
cmpsl
sub
jns
in
jnp
pushf
in
xorl
push
xchg
jmp
pop
cmp
lods
bound
jmp
push
mov
push
ffree
nop
ret
cwtl
add
xor
sub
jle
inc
add
xchg
lds
jo
pop
mov
mov
jmp
sar
rorl
ds
movsl
mov
pop
sbb
cwtl
mov
pop
enter
subl
outsl
push
xor
push
loopne
pop
testl
cmp
in
jle
popf
dec
loopne
sub
ja
xor
mov
dec
cwtl
xchg
cmp
mov
mov
xor
push
inc
dec
ds
jb
cmpsb
xchg
mov
jl
sti
in
jae
pop
scas
das
cmp
rolb
lods
xchg
pushf
mov
xor
cmpsb
inc
lret
into
jae
popf
add
add
dec
rcl
push
sbb
mov
push
push
mov
fdivr
lcall
outsb
and
negl
mov
cmpsl
repnz
add
es
leave
aam
adcl
add
std
mov
repz
and
push
insb
inc
repnz
jne
dec
jae
insb
adc
test
and
cmp
mov
pop
cmp
test
sbb
push
dec
shll
aas
xchg
mov
jmp
pop
popl
lds
cmc
push
pop
adc
js
inc
inc
and
or
scas
mov
push
xor
clc
dec
das
orb
add
notb
cmpsb
inc
cs
lret
addr16
jne
idivl
lods
popa
sbb
orps
sbb
jl
jbe
jb
and
imul
sub
pop
adc
lret
fucomp
inc
xchg
es
jb
cs
add
push
pop
fstl
les
mov
mov
xor
iret
sub
in
sbb
mov
hlt
push
jmp
cmp
pop
dec
inc
cmc
or
and
mov
xor
addr16
and
je
and
xor
mov
bound
fistl
leave
sbb
es
aaa
aam
jecxz
pop
cwtl
lret
mov
addb
out
popa
sbb
dec
mov
pop
loop
xor
clc
dec
lods
cld
inc
out
push
rcll
leave
inc
jae
fldl
test
shrw
xchg
push
popf
fisubrl
and
dec
sbb
into
loop
xchg
pop
dec
frstor
or
cltd
fcmove
int3
addr16
and
xchg
je,pn
push
jb
jg
mov
dec
ret
jl
xchg
mov
xchg
test
les
jnp
xchg
pushf
cmpsl
inc
repz
loop
pop
dec
add
lcall
push
push
into
jle
test
push
inc
hlt
decb
rorb
fwait
push
sbb
cmp
cmpsl
dec
inc
enter
sti
pusha
ss
lret
dec
add
ja
mov
sub
mov
mov
and
cmp
stos
mov
into
lret
inc
adc
ds
xchg
and
pop
loop
dec
xor
sbb
add
imul
popl
shl
cmc
or
shufps
fsubp
or
xchg
cmp
adc
jo
out
jl
sbb
jg
jns
xchg
cmpsl
xchg
shll
imul
mov
inc
pushf
dec
jbe
int
dec
clc
daa
add
sub
ret
jno
mov
sti
xchg
adc
sub
add
out
xor
mov
mov
fsubl
add
fwait
mov
divb
gs
cmp
lcall
inc
movsl
test
jnp
divl
cmp
push
dec
lea
push
and
or
stos
mov
leave
es
pop
leave
jecxz
jmp
arpl
sbb
xor
xchg
repz
mov
jnp,pt
sub
outsb
lret
int
nop
or
aas
cmp
xor
iret
out
stc
xchg
test
inc
xchg
loopne
sbb
or
cld
cmpsb
scas
jl
adc
xchg
repz
xchg
adc
xchg
dec
imul
sti
inc
xchg
add
push
push
out
fnstcw
addr16
std
int3
bnd
js,pt
pop
sbb
or
sub
pusha
jb
jp
inc
xchg
stc
cmp
shll
stc
push
xchg
dec
rcrl
sbb
mov
cmpsb
push
lea
push
aam
inc
ljmp
push
in
sbb
mov
add
dec
mov
cmp
add
xchg
pusha
outsl
pop
xchg
cltd
pusha
movsl
jmp
mov
out
lock
adcl
jne
xchg
fldenv
mov
cltd
shlb
repnz
test
add
dec
in
scas
push
push
aam
fildll
scas
and
sub
sbb
ds
mov
lods
cli
das
mov
aam
rol
in
fs
bound
ss
gs
and
comiss
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
mov
bound
pop
bound
in
push
jne
out
ljmp
out
xor
mov
and
pop
mov
test
fwait
nop
xchg
mov
mov
mov
mov
sti
cwtl
ds
lds
or
test
sbb
jo
adc
outsl
lahf
xchg
dec
rolb
andl
nop
stc
test
scas
test
pop
adc
xor
ret
stc
sub
add
fs
pop
lahf
adc
dec
xor
mov
pop
pop
mov
mov
and
cmp
call
stos
xor
or
pop
add
dec
pop
jae
les
pop
or
inc
arpl
mov
or
xchg
xor
xor
mov
add
push
xor
out
aad
int
cmp
stos
aad
jl
lea
and
mov
sbb
push
cmp
in
xchg
jle
sub
mov
loop
pop
fldcw
xchg
popa
hlt
test
inc
aas
mov
lods
ss
fistpl
ds
ret
aad
ret
stos
sub
pop
lea
sbb
outsl
xor
lret
and
xchg
aaa
aas
test
in
and
jns
stos
add
fisubs
push
es
shll
mov
lods
loop
ljmp
push
jb
bound
mov
push
inc
add
fdivs
pop
push
mov
sub
pop
lret
arpl
cmpsl
xchg
es
lea
jbe
clc
pop
jbe
mov
cmp
lret
adc
in
push
xchg
push
das
adc
jl
or
cmp
shr
mov
cmpsb
mov
rcrl
cwtl
and
mov
in
jge
xchg
fs
add
push
andb
mov
mov
inc
push
xlat
icebp
pop
stos
stc
and
dec
je
adc
jns
sub
fdivs
dec
push
loope
fwait
mov
push
cld
jl
sub
and
mov
push
into
cmc
sbb
sub
mov
dec
lahf
adc
mov
es
xor
and
mov
cwtl
add
pop
inc
add
jge
jnp
jmp
and
mov
xor
sti
adc
aas
out
ficoms
das
pop
loope
mov
xchg
sbb
mov
add
imul
arpl
test
fistl
mov
js
les
aad
cli
xchg
aas
push
sbb
cmp
push
pop
mov
adc
in
sub
rep
arpl
movb
push
in
das
adc
xchg
sti
imul
push
mov
adc
push
push
add
nop
push
pop
mov
rol
pop
mov
xchg
fistpll
in
sbb
mov
mov
test
mov
cs
cld
je
mov
dec
sub
in
push
adc
in
dec
aaa
push
rorb
js
sub
xchg
or
ljmp
inc
andl
sahf
pop
fwait
cmpsl
andl
or
push
fs
loopne
xchg
inc
aas
mov
mov
addr16
in
xor
xor
push
rorl
and
xor
adc
mov
dec
sti
aad
cmp
push
cmp
xor
xchg
ja
scas
imul
adc
ret
push
imul
and
and
cs
cwtl
xchg
inc
loopne
sub
ret
ret
mov
cmpsl
lahf
add
mov
aaa
fildll
xor
js
outsb
jae
push
es
push
cmp
jg
sub
adc
mov
cmp
jo
rorl
lds
stc
mov
in
cltd
gs
adc
in
push
ljmp
loopne
loope
jb
jp
jmp
bound
filds
pushf
fnstsw
mov
xor
jmp
xchg
ja
lds
test
stc
jns
lock
or
inc
pop
dec
sbb
jb
loopne
mov
movsl
sti
cmp
adc
pop
inc
into
bound
loope
call
pop
dec
mov
stos
mull
push
leave
pop
scas
pop
sub
inc
mov
jb,pn
test
xchg
pusha
sbb
jns
or
je
int
xor
pop
cmp
mov
in
pusha
adc
sub
pop
cmp
loope
imul
sbb
cmpsl
in
sub
mov
mov
pop
sbb
cs
out
cmc
mov
cltd
mov
lds
push
fucomi
dec
jl
jo
add
mov
lods
mov
lahf
insl
fnstenv
push
push
lcall
mov
rcl
movsb
dec
repz
fisubl
leave
popa
cmpsb
repz
jmp
pop
push
xor
ud1
cmp
push
xor
incl
loopne
std
mov
pop
outsb
or
ljmp
push
sbb
out
dec
in
data16
aad
loope
adc
pop
aad
call
xchg
scas
repz
mov
ret
in
je
shll
insl
push
scas
stos
sahf
cmp
roll
inc
mov
mov
loopne
jmp
and
arpl
inc
jnp
les
push
mov
xor
cltd
aaa
mov
fcmovnbe
jmp
cs
jg
inc
mov
es
scas
gs
hlt
dec
and
int3
xchg
stos
mov
cmc
into
in
pop
cmpsb
dec
lds
and
adc
fadds
jl
jno
dec
out
enter
sbb
adcl
sub
jmp
movsl
out
arpl
in
test
add
xor
mov
xchg
or
mov
cltd
mov
fstps
pusha
std
xchg
mov
insb
inc
sar
pop
out
test
dec
adc
inc
mov
cmpsl
lds
arpl
push
popa
int
cltd
ds
jge
gs
rcrl
mov
out
jns
cmp
stc
inc
sbbl
mov
data16
cltd
jge
pop
cmc
mov
ret
jo
inc
xor
dec
pop
jbe
sbbl
daa
jle
xchg
inc
and
push
mov
adc
cmp
dec
outsl
out
aam
add
gs
mov
sub
sar
pop
neg
sub
jo
push
shrb
lret
out
pop
lcall
inc
push
mov
in
cld
out
sbb
push
add
fldt
mov
mov
iret
ret
rclb
and
inc
nop
xchg
sub
xor
mov
jns
jae
inc
das
xchg
out
repnz
fisttpll
js
or
adc
jecxz
lret
fdivrl
jb
pushf
and
push
jp
stos
cmc
rcrl
dec
mov
repz
loope
ljmp
push
ret
jne,pt
shl
mov
addr16
or
xor
outsl
movsl
mov
add
fwait
mov
inc
lock
inc
adc
dec
iret
pushf
jle
movsl
cli
mov
mov
mov
sub
mov
cmp
into
popf
insb
cmp
cmc
cld
stos
mov
mov
sbb
fcompl
push
mov
ljmp
cmp
rorb
adc
adc
sub
xchg
lds
outsl
sbb
push
add
loope
push
cmpsl
xor
push
in
dec
cmp
jmp
cmp
jp
xor
add
inc
pop
sbb
adc
in
shll
push
popf
sbb
xlat
and
jnp
lea
aaa
fwait
add
outsb
scas
leave
lcall
test
int
push
rolb
sub
adc
ficoml
dec
pop
scas
jecxz
push
jae
fwait
pop
xchg
repnz
cmpsl
dec
push
ror
imul
jns
add
stc
xchg
lock
mov
stc
mov
jecxz
leave
add
loopne
mov
lods
dec
int
mov
dec
xor
or
arpl
cltd
mov
jecxz
jmp
pop
and
sub
out
jns
and
mov
jl
add
fisttpll
pop
popf
dec
jns
outsl
movsl
test
pop
fdivl
cmp
or
jns
test
pop
push
push
loope
and
mov
lret
sbb
dec
mov
in
cmp
push
mov
push
popf
orl
lods
lcall
mov
lock
jns
xchg
dec
adc
mov
bound
mov
lret
sub
cmp
leave
mull
jge
pushf
in
decl
push
ret
ror
pop
clc
repz
dec
xchg
call
rol
movsl
push
aad
aas
dec
sbb
std
jmp
cltd
jnp
ljmp
add
sub
stc
in
iret
xchg
bound
ja
test
shlb
enter
arpl
lds
lea
sbb
add
stos
mov
fidivrl
insb
jnp
mov
shufps
std
subl
jge
and
mov
add
sbb
cld
adc
imul
pushf
mov
xchg
jns
ja
mov
in
testl
movsb
rolb
jle
push
mov
xchg
mov
mov
stos
or
inc
sbbb
inc
sarb
or
and
scas
mov
add
enter
fiadds
dec
cltd
scas
xchg
aad
fwait
loope
push
cmpsb
cmpl
sub
mov
xor
fadds
fldcw
in
out
pop
dec
scas
test
pop
adcl
cld
push
insl
mov
in
out
mov
push
jns
scas
pop
xlat
insb
lods
push
fistpll
pop
jo
int3
lret
xchg
cltd
pop
insl
fcmovnb
or
clc
inc
add
sti
push
sbbl
jae
jge
arpl
lret
xchg
hlt
and
loope
mov
out
adc
pusha
icebp
sbb
jne
fsts
lret
test
or
mov
push
addr16
cmpsb
jo
test
jnp
adc
sub
imul
inc
rorb
cmp
test
lahf
popf
push
out
int3
out
in
mov
es
sti
xchg
jno
leave
ficoms
sub
idiv
inc
mov
mov
out
lahf
cli
inc
leave
sbb
repnz
xchg
mov
jnp
pop
jo
int
movsl
les
popf
inc
orb
pop
scas
je
shlb
leave
fs
mov
push
scas
loopne
sbb
push
push
lods
adc
jp
add
mov
mov
cwtl
or
xchg
cli
push
ds
cmp
lahf
ficoml
test
push
movsb
test
sbb
jnp
or
in
int
adc
cmc
jge
dec
pop
sbb
imul
mov
mov
cmp
add
shrb
enter
mov
xchg
loope
fnstsw
pop
in
frstor
xchg
xchg
adc
in
pop
mov
aam
dec
cmpsb
jle
or
mov
lea
and
adc
loope
movsb
dec
pusha
imul
test
aas
mov
inc
xor
insb
cs
out
insb
mov
rol
loope
jp
and
jmp
inc
std
push
out
stos
rcr
adc
mov
cmp
setg
or
xchg
mov
add
inc
jb
cmpsl
in
jp
jge
xchg
inc
rclb
outsl
dec
mov
pop
sub
pop
pop
adc
and
rolb
push
ljmp
push
sbb
cwtl
and
xor
repz
pop
stos
xchg
sarb
mov
mov
sti
dec
push
dec
sbb
cmpsb
out
insl
add
cmp
outsl
cmp
mov
aas
aam
or
pop
dec
cmc
mov
add
lcall
cmp
xchg
mov
decl
in
xor
in
fisttpl
lea
xor
not
push
loop
test
roll
jle
daa
shl
sbb
popa
push
fsub
mov
popf
sbb
adc
xchg
and
and
in
xchg
xor
or
cmc
add
cmp
sbb
mov
add
cmpsl
ret
mov
and
cmp
icebp
add
cmc
aas
adc
xlat
aas
ds
out
clc
mov
scas
jge
push
imul
pop
pusha
pusha
int
test
pusha
rolb
sub
mov
add
stos
out
push
xchg
add
pushf
fsubrl
mov
dec
and
in
repz
pop
cmp
xorb
bound
test
shr
lcall
cmc
inc
cmpsb
inc
jne
xlat
pop
pushf
mov
inc
push
not
mov
pop
sbb
add
clc
mov
sub
sahf
mov
subl
jp
popf
ja
pop
mov
sub
je
pushf
cmp
push
dec
xchg
stc
sub
sti
pop
inc
adc
inc
fsubrs
push
cld
xor
aas
test
jg
mov
adc
mov
or
xor
cmpsl
dec
dec
test
mov
inc
shll
mov
xchg
inc
dec
push
xchg
faddl
sub
dec
mov
add
jo
dec
mov
stos
lods
ret
xchg
jl
mov
xlat
add
aaa
dec
adc
jmp
xor
mov
notb
push
cmc
scas
movb
xchg
xor
xchg
mov
xchg
adc
imul
xlat
loop
test
adc
sbb
mov
adc
cmc
mov
bswap
shlb
mov
pop
sbb
cld
push
cmpb
mov
sbb
cmp
mov
and
hlt
lds
pop
jmp
pop
pop
jp
stc
pusha
dec
lret
adc
push
lcall
test
push
stos
dec
fiadds
push
fs
lret
std
rorb
test
push
jecxz
mov
out
or
ret
pop
cmp
cld
xor
jmp
mov
adc
dec
pop
aaa
cs
add
mov
pop
testl
inc
push
aad
mov
mov
pop
ja
shll
xchg
aas
push
jns
out
inc
push
int
pop
mov
dec
scas
dec
inc
xchg
leavew
adc
dec
imul
cmc
jnp
daa
xchg
sub
fbld
push
ss
cmpb
jno
push
sub
mov
xchg
aad
sub
leave
je
gs
loop
shl
sub
imull
xchg
xchg
popl
xor
pop
fwait
ja
test
mov
dec
cmc
fisubrs
test
inc
inc
pop
mov
cli
stc
arpl
fisubs
bound
fisubs
in
into
push
test
rcrl
adc
cmp
mov
and
std
sub
sahf
xor
movsl
cwtl
push
or
dec
pop
xchg
push
sub
adc
mulb
mov
push
sub
pushf
mov
sbb
jmp
jae
mov
repz
jmp
pop
dec
ret
in
pop
call
push
jmp
jmp
sub
and
incb
fwait
mov
jle
sbb
fisubs
adc
mull
popf
push
jnp
add
adc
mov
pop
cmpsl
scas
sub
add
push
push
lret
dec
xor
out
test
in
mov
xchg
pop
xor
nop
lea
push
lods
clc
add
cmc
stc
xchg
jl
push
sub
imul
cmp
jle
addl
leave
int
and
push
adc
sbb
cmp
and
push
xor
dec
fwait
inc
dec
cmp
imul
mov
ds
cmp
jmp
or
inc
scas
rclb
adc
adc
fldt
rol
lods
out
rolb
rorb
xor
jo
cmpsb
pushf
mov
les
add
cmp
lahf
or
push
mov
mov
pop
lods
pop
sbb
call
in
adc
rcrb
leave
add
dec
movsb
mov
ds
cmp
nop
xor
fs
jae
orl
xor
hlt
xorl
or
loope
pop
hlt
scas
in
iret
mov
xor
out
sbb
jl
inc
sbb
dec
rcrb
sahf
dec
push
jmp
cmp
and
mov
stos
call
sbb
mov
ljmp
xlat
out
and
lret
subl
inc
fsubrs
icebp
loopne
hlt
test
fwait
je
or
inc
fildll
ja
pop
lret
jbe
jp
pop
aad
jmp
pop
fs
xlat
test
adc
jmp
cmpsb
inc
fidivrl
loop
xchg
adcb
xor
xor
xor
lea
push
repnz
fnsetpm(287
mov
dec
pop
inc
sbb
jno
test
lahf
pop
jl
cmp
test
sbb
dec
sub
sbb
push
ja
xchg
sub
icebp
push
adc
mov
cmpsl
jb
inc
ss
dec
fbld
inc
xchg
dec
adc
or
jo
or
mov
call
fcmovu
pop
mov
fldcw
ret
mov
jae
sub
fsubp
nop
inc
stos
xchg
lret
cmp
and
pushf
bound
div
subl
aad
mov
mov
sub
rorb
stos
sub
out
mov
cmp
aas
fldt
and
xchg
into
jb
and
in
mov
mov
stos
fs
xchg
xchg
jp
and
out
insb
or
dec
es
test
jno
pop
jns
stos
scas
je
and
sub
push
icebp
mov
push
stos
sub
push
sarl
repz
imul
mov
je
arpl
jno
ljmp
jae
cld
fldt
insb
icebp
out
xchg
xchg
push
pushf
js
ret
jo
xchg
insl
jne
adc
aad
test
mov
push
pop
inc
mov
loop
lock
xchg
in
xchg
jl
rorb
push
xor
mov
ss
not
inc
fcoml
and
xchg
mov
out
push
fwait
stos
mov
sti
test
xchg
mov
lret
test
std
jmp
mov
xchg
and
sbb
in
out
add
outsb
nop
subl
mov
sbb
test
pop
jecxz
movsb
sub
add
adc
lods
adc
cmpsb
mov
mov
dec
inc
push
cmp
mov
lret
cmp
scas
pop
repz
shll
cmc
dec
enter
nop
scas
orb
jnp
fwait
xorl
aam
or
add
fwait
lret
push
mov
push
scas
jae
movsb
lahf
xor
lods
jmp
sahf
xor
ficoml
jg
clc
inc
pop
popf
jae
push
and
push
add
push
add
out
mov
jecxz
xchg
lods
or
cs
mov
loop
mov
mov
dec
xchg
adc
mov
jae
daa
pop
lock
inc
mov
mov
push
mov
cltd
popa
inc
test
inc
jne
jbe
push
pop
out
aad
and
cltd
int3
or
fldt
cld
js
pop
pop
cmp
and
jmp
pop
leave
jl
xchg
cmp
aam
pop
cmp
push
jge
std
pop
jp
ret
fwait
jmp
push
jp
xor
mov
lds
jne
into
popf
mov
or
xchg
ds
mov
cmc
sub
out
mov
xor
test
repz
and
test
cmpsl
mov
lret
jo
pop
decl
mov
add
pop
add
or
xor
adc
and
adc
rol
test
pop
lds
xchg
lret
es
es
and
mov
inc
xor
lret
cmpsl
xchg
add
daa
in
mov
fildl
lcall
arpl
push
or
mov
or
pop
cmpsb
jmp
sbb
fcmovne
int
fiadds
jb
imul
push
xor
lret
popf
lret
mov
mov
push
inc
sub
jmp
fimuls
stos
adc
test
xor
addr16
mov
xchg
fdivrs
es
flds
cmp
sahf
sbb
mov
out
mov
lcall
jns
ds
into
jo
pop
or
adc
dec
rcrb
xchg
shll
or
int3
mov
mov
dec
jmp
and
jge
mov
in
xchg
mov
das
in
repz
ljmp
inc
cmp
pop
outsl
sub
adc
xchg
or
inc
cmp
test
mov
sarb
int3
xchg
jne
add
nop
les
jo
and
mov
mov
test
mov
jp
loope
imul
add
xor
test
ds
je
push
jmp
jns
adc
lahf
int
lahf
sub
les
mov
pusha
and
jmp
cmc
pop
add
loopne
xchg
stos
jge
faddp
xor
pop
repz
xor
test
pop
int
out
pop
push
gs
aad
fwait
pop
xchg
out
sti
xchg
jbe
pop
jg
inc
dec
or
adc
adc
int
in
repz
decl
incl
daa
jns
xchg
mov
lea
mov
mov
inc
enter
fldenv
sbb
ret
sub
ficoml
jl
js
bound
mov
push
sub
xchg
pop
pop
lds
gs
pop
push
stos
pop
std
jb
movsl
cld
cmp
mov
mov
mov
cmp
mov
loope
jno
jae
sub
js
jbe
xchg
xor
sub
jle
test
das
and
and
aad
ljmp
out
dec
out
dec
rorl
jle
jbe
sbb
pop
fucomp
into
push
cmp
lds
and
test
add
dec
and
lret
fnstcw
fstps
xchg
mov
outsb
inc
insl
cmp
push
sarb
cmp
adc
ja
hlt
inc
mov
movsl
cmpsl
xor
cmp
jae
sub
pop
inc
inc
repnz
leave
push
and
fsincos
js
and
lahf
and
imul
adc
loopne
xor
repnz
mov
adc
int
jbe
sarl
sar
xchg
and
fcompl
in
or
pop
mov
sub
leave
sarl
mov
mov
mov
out
mov
in
cltd
jge
fmul
push
scas
mov
sarb
std
call
in
jl
push
mov
in
adc
test
sbb
sti
mov
xchg
cmpsl
fs
cltd
pop
dec
push
xchg
jnp
out
hlt
jb
xlat
cmp
push
shll
es
adc
jae
mov
stos
inc
jp
or
clc
cli
mov
fiadds
xchg
mov
lods
in
pusha
jno
call
dec
rcl
push
lcall
aaa
std
cld
out
pop
inc
xchg
xchg
cmp
sbb
pushf
lods
xor
cmp
imul
sbb
mov
jbe,pn
adc
jp
xor
arpl
add
inc
test
popf
jle
jp
ds
data16
in
mov
std
and
jl
mov
and
jne
lea
mov
add
out
pushf
lock
mov
in
test
fs
in
dec
mov
scas
call
mov
xchg
jbe
xchg
jne
inc
loopne
sub
cmp
movsb
mov
bound
jns
cs
push
pop
sub
adc
lcall
xchg
addr16
sub
add
mov
adcb
mov
clc
and
das
inc
pop
cli
and
in
jecxz
dec
mov
lock
leave
or
std
mov
push
sbb
sub
outsb
cmp
icebp
fcom
leave
mov
jae
popa
fildl
xchg
sub
ja
int
jg
sub
pop
int3
inc
cmpsl
dec
mov
popa
cld
test
sahf
jmp
cmpsl
mov
hlt
stc
xchg
pop
lahf
mov
inc
jl
std
xor
cwtl
repnz
push
mov
xorb
xor
and
addr16
fisubs
mov
clc
jbe
jle
jno
out
fbld
sbb
pop
ret
pop
mov
cld
sbb
dec
sbb
inc
xchg
jp
lods
cli
movsb
or
bound
loope
aam
pop
or
xor
xor
cmpsl
sti
pushf
dec
mov
cltd
rcpps
idivl
data16
push
mov
mov
shlb
sbb
adc
jecxz
das
stos
imul
jmp
xor
out
dec
mov
xor
mov
ss
leave
jb
aaa
ret
rolb
sub
ficomps
ljmp
push
test
inc
mov
inc
pusha
in
out
stos
push
jmp
dec
cmp
sub
mov
jge
popf
das
ret
arpl
add
xchg
jg
cld
xchg
inc
lods
vphaddbw
lcall
icebp
adc
jmp
add
xor
sub
cmp
enter
fbld
decl
lds
sub
hlt
mov
push
inc
jmp
mov
aad
daa
sbbb
in
inc
push
xchg
push
add
mov
mov
fsubs
aas
mov
mov
inc
adc
pop
pop
jbe
push
cs
fs
jg
jle
push
addb
test
fs
pop
mov
lds
inc
inc
push
push
cmp
jnp
or
mov
daa
mov
push
fmuls
loopne
cltd
std
not
inc
mov
daa
ret
or
dec
mov
sbb
xor
pop
add
inc
xchg
hlt
jle
mov
mov
imull
cs
ja
cltd
dec
in
rol
fwait
out
xor
push
mov
repz
sbb
clc
inc
pop
jp
mov
mov
addr16
push
movsl
lods
xor
into
out
and
and
or
repz
cmpsb
mov
rcrb
out
lods
xor
into
out
jmp
pop
aam
jno
frstor
movsb
dec
adc
inc
mov
dec
adc
rcrl
mov
cmpsl
mov
dec
jmp
out
mov
dec
or
and
in
fwait
pushf
and
arpl
jecxz
push
sahf
hlt
sub
push
sub
in
popf
pop
add
dec
shll
jbe
movl
jl
aad
mov
loop
adc
push
adc
pop
repnz
enter
je
dec
or
out
shrl
xorl
pop
jns
jns
sbb
in
pop
sub
push
aaa
imul
and
aam
or
or
push
fmul
or
jge
testl
mov
aaa
and
mov
movl
popf
in
addr16
mov
or
pop
in
lahf
mov
enter
and
mov
xchg
cmpsl
push
movsb
cmpsb
push
sbb
push
inc
push
loope
xor
xchg
loop
push
xor
inc
push
inc
ja
dec
aad
push
jle
pop
add
fimull
or
sbb
mov
cmp
std
inc
pop
xchg
popf
xchg
cmpsl
sbb
mov
push
inc
cwtl
push
insb
es
std
jnp
test
in
add
pop
lds
push
sub
sub
push
data16
push
sbbb
or
lahf
and
sahf
sarb
mov
in
fmuls
jl
adc
mov
cltd
push
inc
rorb
adc
jmp
jo
cmpsl
mov
fisttpll
push
pop
test
insb
scas
add
mov
xor
cmp
xchg
cmc
xor
bound
mov
xchg
xchg
xchg
mov
ret
xor
xchg
adc
aam
mov
cmp
jmp
adc
dec
out
out
sub
or
xorb
sub
insl
jb
enter
and
stos
not
mov
cli
xchg
jne
add
and
pop
adc
push
inc
push
push
push
imul
aam
sbb
inc
shll
add
imul
xlat
mov
adc
pop
movsb
cmp
and
xor
jmp
sbb
and
ret
or
rcrl
dec
mov
pusha
jp
addb
push
dec
and
pop
xlat
pop
cmp
and
out
int3
fsubrl
lret
sti
xor
push
mov
cltd
addr16
adc
sub
or
ret
jnp
aam
dec
sbb
xchg
mov
or
mov
and
xchg
cmp
xor
xor
jg
jo
call
into
shlb
bound
inc
out
and
cld
pusha
lret
enter
or
adc
out
in
outsb
jae
inc
jo,pn
xor
ja
mov
lods
mov
inc
enter
push
mov
push
pop
mov
dec
add
lock
cmpsl
dec
in
lock
test
adc
cltd
ret
jl
mov
arpl
pop
mov
cmp
call
movsb
push
xchg
push
xchg
cmp
pop
outsl
pop
mov
jmp
out
in
push
movb
mul
mov
inc
iret
fnclex
xchg
jo
mov
lods
mov
movsb
mov
xchg
aaa
push
insl
push
mov
ret
stc
les
xchg
sub
mov
inc
xchg
dec
lahf
dec
adc
dec
jbe
arpl
lods
shrb
call
adc
xor
xor
in
movsl
sbb
mov
jns
pop
jp
popf
and
mov
rcr
es
std
rcl
popa
mov
fwait
rorb
repnz
pop
jo
push
in
decl
into
fildll
int3
into
lahf
adc
mov
add
xchg
gs
pop
popa
mov
ss
mov
sbb
adc
aas
lret
sahf
sub
in
xorb
mov
lret
enter
inc
pop
sub
int
adc
jge
repz
mov
xor
or
jnp
push
pop
cmc
sbb
lods
jne
sbb
das
into
lret
jb
mov
addl
or
mov
push
iret
xor
mov
ja
lahf
jp
fdivl
shlb
jo
ds
sbb
lcall
daa
adc
negb
mov
and
bound
in
es
or
out
daa
jecxz,pt
in
adc
rorb
sub
fisttpl
xor
mov
xor
or
mov
cs
cmpsl
sub
pushf
enter
cltd
sbb
xchg
jns
and
add
cmp
inc
mov
pop
lods
roll
xor
xchg
scas
mov
jl
popf
loopne
inc
mov
cmpsb
xor
pop
cmp
mov
jmp
xchg
in
repnz
add
mov
ret
in
push
or
je
jmp
pop
shrl
pop
iret
dec
or
mov
cld
push
mov
gs
scas
xor
mov
xor
andb
xor
int
and
ret
in
mov
scas
sub
mov
push
enter
dec
sub
mov
or
hlt
pushf
outsl
shlb
xchg
mov
dec
push
mov
cmc
sbb
mov
inc
pushf
inc
jge
gs
mov
jmp
icebp
sub
sbb
add
xor
adc
faddl
lock
jecxz
xchg
mov
mov
test
inc
cmp
aam
les
cltd
xor
ja
stos
dec
pop
or
rolb
jb
cmp
fmul
mov
arpl
push
inc
shlb
adc
push
rol
cs
in
mov
mov
or
and
rcl
jmp
mov
mov
push
or
inc
stc
jle
js
sbb
sub
inc
jg
lds
loopne
pushf
cmp
xchg
rorb
out
pushf
sub
inc
insb
jmp
and
cmp
dec
fildll
jo
cmp
sbb
or
sarb
cwtl
dec
or
dec
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
inc
or
cmp
adc
bound
test
xor
jb
fnstsw
mov
sbb
inc
add
dec
mov
xor
icebp
dec
sub
push
aam
lret
push
and
pop
gs
ljmp
testl
pushf
xchg
xchg
mov
adc
mov
cmpsl
pop
popf
pushf
ret
inc
divl
inc
daa
lea
enter
inc
aam
repz
jecxz
xor
lock
pushf
mov
sub
or
inc
cs
inc
pushf
pop
dec
dec
mov
ror
js
in
inc
enter
dec
push
xchg
rcrb
sbb
jmp
shlb
lock
mov
popa
fdivl
cmpsb
clc
add
mov
inc
jg
fnstsw
ret
adc
movl
leave
mov
aam
fstpt
repnz
mov
js
sub
pop
or
addr16
arpl
js
stos
cli
xchg
mov
dec
int3
pushf
sub
outsl
xchg
repz
add
mov
xor
xor
ds
fnstcw
xchg
dec
jne
and
notb
add
sbb
es
mov
push
test
lret
pop
adc
insl
js
add
xchg
lock
int
mov
push
ljmp
sbb
and
push
in
pop
dec
mov
push
cmp
mov
pop
and
add
mov
add
cmp
repnz
orb
mov
scas
inc
stos
xchg
ja
sbb
or
or
addl
dec
lock
and
add
stos
negl
adc
jo
mov
xor
je
pop
lea
mov
sbb
mov
cmpb
cmp
mov
cmp
icebp
data16
sub
sub
fadds
inc
and
hlt
adc
mov
cmp
arpl
push
xor
in
loope
jecxz
sub
out
mov
inc
enter
push
mov
inc
lods
xchg
cs
add
jg
cld
ficomps
add
stos
je
sub
scas
inc
in
cmc
ljmp
dec
pushf
iret
mov
xchg
xlat
dec
addr16
sbb
cli
sub
fcoml
mov
and
sti
sub
out
sub
mov
adc
fs
fxch
or
xor
sbb
fcmovnbe
push
add
push
xlat
push
push
sarb
pop
adc
pop
iret
cmpsl
fistl
mov
jo
adc
xor
in
jl
adc
push
mov
jns
xor
add
pop
adc
dec
mov
mov
popf
test
jecxz
push
mov
je
repz
cmp
rol
mov
arpl
jns
test
push
dec
push
mov
push
inc
stc
stos
ret
push
sub
enter
fldl
out
or
sub
jecxz
std
lea
inc
incl
xchg
dec
jle
sub
lahf
fxtract
movsb
ds
xor
jle
clc
jne
pusha
push
jmp
cmp
in
mov
shrl
mov
mov
mov
sti
pmaxub
es
xchg
cltd
mov
insl
push
nop
jb
sbbl
or
in
test
xlat
aas
cli
xor
out
cmp
or
imul
and
sub
cmp
push
sub
push
inc
sarl
ret
jne
test
scas
mov
inc
mov
lea
imul
fs
les
inc
add
add
sub
in
pop
add
stc
inc
test
adc
scas
add
push
inc
jmp
mov
mov
xchg
call
mov
adc
sti
test
push
xchg
insl
jno
mov
phaddd
mov
js
shlb
test
mov
dec
mov
mov
mov
xor
or
inc
pop
lea
stc
outsb
imul
or
fldl
pop
es
jp
das
addr16
stc
mov
xor
adc
daa
insl
les
jecxz
mov
mov
fwait
pop
sbb
clc
movsb
or
push
mov
and
out
adc
pop
cmp
dec
cmp
subl
int
popa
inc
push
jns
test
push
mov
sub
mov
adc
jle
and
jb
adc
sub
add
mov
pusha
call
push
sar
std
mov
mov
loopne
dec
mov
push
aam
push
loop
insl
add
push
dec
or
xor
mov
adc
int3
ret
aam
add
fiadds
rcr
xorl
cwtl
sbb
nop
decb
push
test
xchg
and
and
inc
pop
xchg
and
push
test
push
jmp
imul
fildll
or
inc
imul
or
mov
test
daa
inc
mov
mov
inc
sub
pop
pop
es
xchg
mov
ss
push
in
ja
pop
daa
adc
mov
xor
pop
sbb
mov
jo
adc
inc
cmpsl
inc
inc
jnp
ljmp
mov
mov
cmp
push
inc
jbe
cwtl
jmp
dec
sub
loopne
pop
aas
jle
lahf
adc
pop
js
push
enter
outsl
or
out
pop
mov
sbb
inc
dec
pop
mov
insb
aaa
xorb
add
shll
loop
loop
cltd
clc
mov
or
clc
jp,pt
std
mov
aad
mov
mov
pop
sti
movsl
faddl
jg
and
adc
adc
jne
pusha
insb
lea
daa
inc
push
and
jmp
sbb
inc
rep
jl
cld
inc
mov
cltd
loope
jp
and
cmp
xor
push
shrb
jmp
cmpsb
pop
loopne
mov
pop
out
inc
js
outsl
ds
sub
pop
test
cli
mov
pop
ja
adc
mulb
mov
sub
sti
in
mov
stos
push
inc
inc
mov
inc
mov
dec
and
test
test
ret
orb
in
push
cld
hlt
fldcw
dec
adc
lcall
push
mov
loop
dec
sbb
pop
pusha
fbld
fs
arpl
mov
adc
dec
adc
cmpb
ror
add
mov
pop
or
and
in
sahf
lahf
xor
sbb
fsubr
jno
mov
out
push
push
cmp
mov
lods
and
lahf
loopne
test
hlt
mov
or
adc
fildl
fdivl
inc
push
sbb
fwait
int3
mov
dec
test
xchg
js
mov
pushf
sahf
loop
add
mov
outsl
xor
imul
fbld
in
mov
cmp
adc
adc
cmp
insb
push
flds
imul
jb
scas
imul
push
in
xchg
lahf
call
dec
xchg
push
lea
cmc
dec
push
cmc
hlt
pop
add
mov
inc
repnz
xor
outsl
inc
inc
xchg
lahf
jg
jg
push
scas
push
fwait
push
pop
movntq
sub
fcomps
rorl
inc
sbb
mov
loopne
cmpsl
and
push
mov
ss
and
ret
repz
ret
sti
sbb
in
hlt
movsl
movsb
out
das
add
dec
cmp
fmull
jne
mov
js
pop
jno
mov
sub
xchg
sbb
jg
mov
xor
minps
lds
mov
ffreep
mov
xor
mov
orb
or
insb
mov
cmp
pushf
loopne
inc
xchg
in
cmp
clc
ss
in
loope
dec
rclb
jbe
cmpsb
add
je
pop
pushf
jp
les
xchg
test
cmp
xor
mov
xchg
loopne
mov
inc
rcrl
push
in
imul
pop
out
or
pop
es
out
pop
mov
adc
cld
popa
cltd
scas
lods
pop
push
xor
inc
js
cld
xor
jnp
jns
and
mov
or
loop
pop
fnsave
stc
mov
jl
cmp
shlb
sbb
dec
test
enter
sub
mov
inc
cmp
repz
mov
fnstsw
adcl
push
sti
ret
cld
in
inc
sub
mov
dec
push
mov
mov
loope
and
push
adc
and
xchg
mov
js
add
shrb
int3
lea
int3
xor
sbb
inc
lea
mov
push
fidivrs
dec
js
pop
sub
cmp
aad
fwait
sbb
sbb
loope
call
dec
dec
mov
repz
add
jns
sub
cmpsl
orb
scas
inc
pop
cmp
int3
and
and
test
pop
xor
repnz
mov
loop
movsb
sub
popa
popf
call
test
jge
and
rcll
jmp
xchg
es
dec
xor
movsl
add
bound
and
enter
lret
mov
push
jnp
insb
adc
stos
stos
inc
xor
dec
mov
and
fsts
mov
mov
out
mov
ret
xchg
sub
dec
mov
dec
out
mov
mov
xchg
lret
pushf
mov
fwait
ret
rorb
pop
fs
push
push
sarb
fs
fldt
ret
insl
mov
scas
xor
mov
jmp
rolb
pop
filds
mov
scas
xlat
pop
adc
mov
es
xchg
sub
iret
sub
pushf
sbb
xchg
je
dec
cmc
ret
testb
shlb
push
mov
dec
flds
ret
cmp
cs
xorl
std
andb
push
sub
mov
dec
xor
push
scas
flds
shrl
mov
js
push
dec
clc
imul
pop
popa
dec
inc
ss
or
ljmp
js
mov
cwtl
or
mov
cmpsb
xchg
xor
scas
mov
xor
out
push
mov
adc
jbe
dec
sahf
sub
out
nop
add
jmp
push
sahf
jnp
int3
popf
adc
clc
adc
iret
sti
sub
ret
in
mov
and
sbb
mov
fdivr
and
inc
repnz
repz
xchg
push
push
pop
mov
stos
arpl
cmp
mov
test
mov
push
mov
dec
jmp
jns
cmp
ret
push
cli
jnp
and
rolb
pop
or
sbb
jmp
mov
and
insb
pop
sub
nop
divb
mov
and
ficomps
push
je
sub
mov
call
push
fsub
rcll
loope
dec
mov
add
mov
pop
or
fdivrl
cmpsb
mov
mov
sub
adc
and
dec
inc
aaa
pop
mov
xor
push
cmp
sbb
jmp
sarl
fldt
and
xor
mov
cmpsb
or
push
pop
aad
int
les
loope
or
xchg
sar
scas
adc
cli
sti
inc
insl
cmpb
repz
mov
sbb
andb
and
mov
pop
fldl
ja
push
push
iret
and
dec
mov
xor
mov
mov
inc
pop
movsb
testb
aas
ja
arpl
fdivrl
frstor
stos
inc
and
push
mov
das
jecxz
call
jecxz
mov
cli
sub
or
jg
pusha
inc
movsb
mov
shlb
and
pusha
lcall
fwait
dec
les
outsb
mov
es
adcb
mov
insl
jg
dec
clc
jne
dec
scas
pop
push
adc
sub
jns
outsb
orl
jns
loop
ficompl
xchg
xchg
push
mov
dec
push
arpl
jne
push
dec
jnp
scas
adc
xchg
sub
call
into
outsl
fyl2xp1
daa
enter
imul
cmp
rcrb
cwtl
push
adc
test
pop
shrb
mov
xchg
xchg
aam
push
cmp
xor
xor
jmp
inc
xor
jno
sub
mov
cwtl
add
cmc
mov
mov
jno
sub
add
aad
dec
push
mov
les
pushf
sbb
xor
rcl
pop
push
xor
jne,pt
int3
push
or
cld
jp
stc
inc
popa
xlat
add
mov
into
add
fldenv
push
scas
cld
push
and
push
in
jge
mov
adc
add
ja
pop
sbb
jp
xor
adc
ljmp
in
mov
imul
xchg
sub
shll
call
mov
enter
nop
jns
fs
fnstcw
movsl
mov
lock
inc
lahf
scas
xor
nop
adc
ret
mov
push
enter
cmc
or
sub
out
pop
aas
adcb
sub
into
aas
xlat
dec
inc
inc
jmp
dec
mov
xchg
aam
mov
jne
cmpsl
cmp
add
popa
xchg
outsl
lods
ds
xchg
add
push
xor
cmc
jb
adc
inc
and
mov
dec
pop
mov
pop
lcall
cmp
xchg
xor
fcoml
xchg
pop
lods
js,pn
movsl
cmp
lahf
cmpsl
in
cld
cmpsb
sbb
xchg
and
xlat
push
inc
xchg
cs
bound
fsubrl
push
mov
int3
xlat
pop
add
adcb
cwtl
es
js
test
pop
mov
xchg
jecxz
and
add
inc
dec
lods
gs
push
cmpsl
int3
out
dec
sbb
mov
aad
fidivrs
adc
adc
sub
pop
ss
call
jb
or
and
call
sti
push
inc
shrl
pop
mov
xor
popa
cmp
in
jmp
jo
jno
adc
je
in
outsb
aam
neg
adc
add
addb
cmpb
js
lock
repnz
out
adc
pop
cmp
cmc
xor
adc
mov
out
dec
nop
add
rcrl
in
iret
xor
jbe
pop
je
xor
or
mov
cwtl
orb
outsb
mov
andnps
or
popa
mov
or
dec
lret
add
pop
out
or
cmp
sub
xor
mov
fwait
enter
xchg
imul
hlt
cli
fs
mov
cli
lds
ret
ljmp
shlb
or
dec
inc
testl
mov
jge
scas
pop
sbb
sbb
push
cmp
jg
movl
enter
xchg
push
xlat
push
aaa
dec
mov
loop
sbb
popf
jnp
and
xor
sub
cltd
test
cli
inc
int
dec
jmp
sbbl
and
xchg
mov
add
test
ret
dec
mov
cmp
or
test
aam
sbb
sti
inc
cli
lret
test
cltd
jecxz
lods
pushf
fcomip
inc
int3
dec
mov
insb
loope
mov
mov
jnp
dec
clc
arpl
je
lods
int
and
dec
into
pop
ret
and
mov
dec
inc
and
fiadds
lret
cmpsl
pop
and
fmuls
push
jecxz
out
or
jae
push
cmp
arpl
cmp
repz
cmp
in
push
cmp
int
and
sti
pop
mov
sarl
clc
xlat
popa
sub
in
aad
pop
popa
cmpsl
sti
negb
sbb
fdivr
push
sub
out
cmp
pop
inc
mov
push
stc
sahf
xor
mov
xchg
pop
sti
and
fdiv
sub
icebp
lret
and
test
and
fimull
add
lret
cltd
or
psllw
dec
pop
es
lea
out
add
imulb
or
xlat
int3
iret
mov
into
mov
mov
pop
push
add
iret
adc
stc
js
lock
cmp
cwtl
mov
and
int3
in
andl
jb
add
jle
sub
pop
add
sbb
mov
js
mov
mov
ljmp
pop
loop
ss
in
idivb
or
loope
aad
stos
rorb
subb
mov
lods
push
icebp
cmpb
jns
or
pop
inc
add
adc
or
push
call
mov
scas
inc
rcll
mov
imul
shrb
xchg
outsl
mov
rcrl
mov
adc
inc
test
and
jmp
fstl
push
push
push
aas
call
cmc
outsl
lea
cmc
aas
adc
sbb
mov
clc
nop
loope
pop
sbb
cmpsl
loopne
insb
pop
jbe
pop
sbb
fs
mov
adc
sub
fidivrl
pop
mov
clc
sub
xchg
test
mov
adc
lock
imul
or
loope
pop
orb
or
popf
es
pop
inc
aas
pop
in
add
and
movsb
jmp
and
rolb
fsubs
sbb
cltd
outsb
dec
push
xchg
fwait
sbb
push
pop
icebp
hlt
fs
and
div
sub
add
aam
icebp
mov
xchg
test
mov
in
imul
cmc
inc
pop
jge
clc
mov
mov
ss
jecxz
mov
andb
test
out
add
pop
fmuls
cmp
mov
out
outsb
jnp
cmp
inc
pop
lods
out
sub
dec
xor
mov
cmp
mov
jbe
call
add
mov
jbe
add
sbb
or
push
sub
js
arpl
arpl
push
int
jns
aam
fs
jo
pusha
iret
or
cmpsl
scas
add
mov
xchg
jnp
movsl
mov
jns
adc
divb
int3
cmpb
add
fs
mov
inc
push
push
or
bound
jmp
dec
filds
test
xor
push
jl
imul
aaa
jmp
add
in
movsl
add
mov
dec
add
dec
mov
inc
les
push
adc
mov
gs
call
imul
outsl
aad
and
lcall
sbb
into
or
leave
inc
subl
in
fisttpl
fmul
fistps
stos
add
lods
jae
mov
push
fisubrl
hlt
add
loopne
xchg
jbe
inc
in
and
push
int
sbb
xchg
ja
mov
cmp
inc
ja
push
leave
out
out
jae
pop
jl
cmp
subl
out
lods
push
cmpsl
outsb
mov
les
nop
mov
push
loope
inc
and
fidivrl
dec
adcb
push
fisttpl
dec
mov
orb
cmc
and
mov
andb
mov
js
clc
mov
imul
cwtl
mov
outsl
mov
pop
bound
pop
lret
shr
cmpsb
in
sub
addr16
roll
pop
adc
gs
xchg
les
cmc
sbb
adc
cltd
shrl
int
stos
mov
inc
test
out
mov
lret
push
dec
xor
cmc
jle
and
out
cmp
mov
negl
sub
out
gs
aas
das
enter
inc
xchg
pop
pop
pop
bound
fnstsw
mov
sub
pop
xchg
xor
cmp
or
xor
andb
js
ret
fbstp
mov
fcompl
repz
imul
xor
inc
xor
leave
adc
sti
outsl
lea
inc
jl
cltd
mov
pop
popf
pop
add
rorb
in
mov
sub
dec
pop
push
xor
cwtl
rclb
pop
and
or
loopne
insl
and
movsl
movsb
adc
f2xm1
std
push
sbb
ljmp
jl
shr
push
gs
xchg
lock
jle
hlt
rolb
lods
jge
xchg
imul
lret
and
inc
mov
test
clc
sub
pop
sub
out
inc
jae
cs
rcll
pop
scas
sub
sbb
test
insl
scas
fwait
jmp
daa
and
dec
jnp
das
jo
or
sbb
push
ljmp
outsb
xor
jmp
xchg
pushf
or
sbb
clc
dec
adc
pop
arpl
sub
inc
cmpsb
cwtl
aam
xchg
fmull
iret
jmp
add
loopne
xor
enter
rcll
idivb
add
fs
adc
repnz
jg
mov
imul
adc
mov
sysenter
pop
arpl
pop
push
rcl
and
inc
pop
add
add
repz
dec
mov
pop
adc
mov
scas
call
dec
push
push
and
leave
mov
pop
and
push
repnz
xor
les
fisubl
cs
xchg
loop
int
stos
icebp
pop
rorl
mov
stc
xchg
clc
mov
mov
cmp
jo
repnz
jg
sbb
cmpsb
stc
hlt
rcl
mov
cmp
pop
mov
dec
rcl
mov
sub
cmp
push
inc
sbb
call
bound
scas
movsl
daa
push
dec
mov
mov
fnstsw
sbb
sub
inc
xchg
fnsave
mov
loop
xor
rclb
outsl
add
add
xchg
fistl
ss
inc
jbe
sub
ja
inc
jle
cmpsb
test
mov
js
jnp
jecxz
cmp
fsubp
mov
push
popa
jp
lods
lods
push
xchg
lds
xor
cmp
sbb
stos
and
jno
rolb
nop
outsb
mov
imul
sbb
xchg
jnp
aad
dec
in
and
in
and
das
push
sbb
addb
push
in
cmp
jp
ss
mov
xor
out
movsl
inc
pusha
cmp
aad
sub
es
adc
pop
das
lret
push
lds
pushf
gs
xchg
or
ss
out
ljmp
movsb
xchg
ja
pusha
add
imul
inc
jne
loope
leave
sbb
popa
pushf
out
in
insb
jbe
mov
dec
es
mov
jbe
scas
fsts
dec
ljmp
mov
push
xchg
inc
xchg
pop
pop
ds
aad
or
jp
jp
pop
mov
call
out
dec
jne
inc
xchg
mov
inc
push
shll
cmpsb
cld
cmp
push
sub
scas
dec
dec
insb
push
mov
insb
inc
add
jns
jns
mov
outsl
je
inc
push
test
ret
xchg
xchg
dec
outsl
sarl
adc
xor
cmpsb
imul
or
sbb
popa
inc
xchg
cltd
mov
sub
movsb
ret
xchg
clc
faddl
std
push
jge
push
loope
iret
sti
dec
lret
test
sub
mov
cltd
leave
out
sti
leave
inc
push
sub
cltd
inc
ss
xor
pusha
loope
jne
dec
andb
and
xchg
out
cmp
xor
cs
orl
xchg
cmp
cli
jmp
pop
mov
fisttps
xor
jmp
cmpsb
aaa
fs
pop
fninit
clc
jl
and
mov
xor
jg
cmp
push
dec
pop
cs
cld
mov
clc
js
or
movsl
test
xchg
jle
mov
dec
lds
push
mov
lret
insb
add
sub
aam
pop
cwtl
push
jnp
leave
out
xchg
movsb
xor
jle
notb
or
daa
les
or
out
aam
inc
stc
cwtl
sti
jl
mov
xlat
pop
xchg
scas
movsb
cld
and
je
pop
add
test
clc
fistpll
push
and
movsl
add
mov
push
mov
xchg
insb
aam
loop
fnstsw
arpl
ret
jecxz
arpl
inc
loop
stc
loope
dec
sti
sub
fwait
jl
fnsave
stos
shll
sahf
and
movsl
scas
mov
push
pop
jmp
jmp
and
outsl
out
nop
fisttpl
cmp
cmp
mov
insb
inc
jmp
mov
adc
push
clc
cwtl
loope
inc
imul
testl
sbb
pcmpgtw
mov
dec
in
sub
mov
lret
popf
popf
mov
lock
decl
push
lcall
dec
push
faddl
cmp
dec
aad
sarl
fadds
or
xchg
shll
fsub
gs
add
outsl
lods
xchg
aam
outsb
mov
in
and
dec
frndint
data16
cs
inc
rolb
imul
mov
lods
push
fiadds
pop
xchg
call
mov
je
or
insb
cmp
ficompl
lret
jne
test
mov
call
push
add
pushf
pop
das
outsb
in
cmp
adc
int
jg
andb
xchg
xchg
incl
insl
lea
sbbl
dec
ja
jl
mov
jno
cltd
or
push
cmp
add
cmp
sbb
outsl
push
sbb
pop
ljmp
lahf
repz
pop
notb
or
add
jle
and
pop
divb
inc
outsl
cwtl
scas
dec
and
and
movsb
or
test
bound
jo
enter
das
notb
leave
jp
subl
shl
mov
xor
inc
add
outsb
leave
test
iret
jo
shlb
into
je
pop
push
dec
push
arpl
adc
lret
add
add
aam
inc
les
sahf
mov
testl
add
sub
stos
pop
push
push
pusha
aaa
in
push
es
insb
cmc
loope
xchg
and
and
fists
mov
rcr
push
mov
jmp
lea
movsl
push
inc
mov
pop
outsl
cmp
add
testl
adc
outsl
clc
movsb
cmp
xchg
jnp
inc
sbb
dec
jecxz
test
cmp
imul
outsb
xchg
andb
or
aaa
mov
push
mov
rclb
icebp
fs
jecxz
sbb
rcll
push
cmpsb
imul
dec
call
cmpsl
daa
sbb
mov
push
repnz
into
cld
clc
lahf
or
lcall
or
test
shrb
pop
push
inc
stos
sub
sub
out
mov
inc
inc
pop
mov
das
cmpsb
add
and
inc
test
inc
aam
xchg
roll
inc
stos
adc
cld
add
rcrb
push
outsl
rcll
inc
les
pop
mov
mov
add
mov
xchg
subb
mov
test
add
cmpl
dec
inc
mov
fildll
sbb
iret
mov
rcrl
sub
dec
cs
call
push
aas
icebp
stos
sub
cmp
mov
rclb
jo
adc
stos
sub
sahf
stos
hlt
std
es
popf
sub
dec
dec
arpl
xchg
sbb
ja
repz
and
movsb
xor
dec
cmovg
rolb
ds
jge
das
js
cmp
push
xchg
inc
mov
out
cmpl
or
out
stc
push
insb
jo
cmp
leave
push
mov
pushf
dec
gs
sub
pusha
and
adc
xchg
lahf
test
cwtl
jb
fbstp
lds
pop
rorb
icebp
rclb
adc
dec
cmp
xor
dec
jnp
roll
test
outsl
inc
cmp
out
mov
loopne
and
das
sbb
enter
cwtl
shll
jecxz
jae
ficompl
sub
cmp
add
out
inc
mov
xchg
test
jg
imul
and
push
in
shll
and
sub
xor
cmpsl
or
add
adc
fidivrl
jns
jnp
sbb
sbb
les
stos
cmp
ja
mov
or
sbb
jle
shll
stos
arpl
xchg
push
shll
add
pop
outsb
mov
push
insb
xchg
mov
fbstp
shrb
and
push
sbb
add
stos
inc
cmp
jnp
or
sub
sub
es
cltd
int3
mov
add
adc
lds
sbb
jl
or
aam
mov
mov
push
adc
cli
or
add
mov
imul
out
mov
scas
jo
fcom
cmpsb
cmpsb
nop
pop
pop
add
aam
cmp
lods
sbbb
or
outsb
cltd
add
pusha
call
mov
out
dec
repnz
xchg
dec
popf
fcompl
pop
sti
pop
pushf
mov
jo
adc
les
out
cmpl
adc
leave
mov
sub
mov
pop
pop
fdivs
pop
xchg
add
push
mov
fdiv
push
jmp
mov
nop
mov
jge
xchg
mov
or
iret
popa
fidivs
nop
inc
adc
lahf
inc
cli
jl
arpl
nop
filds
gs
sub
loop
aas
push
aas
clc
ds
inc
mov
and
and
outsl
push
loope
or
stos
mov
pop
jmp
addr16
fidivrs
test
popa
movb
xor
sub
fwait
in
jno
in
jecxz
and
nop
in
jg
sub
push
add
sbb
test
shll
adc
jnp
cmp
scas
push
and
cmp
sbb
push
xchg
dec
mov
or
lret
add
adc
sbb
or
pop
cwtl
repnz
adc
and
stc
movsb
inc
mov
or
shll
push
and
mov
iret
addr16
mov
or
test
sbbb
mov
mov
or
fisubrs
adc
aas
repnz
sahf
aas
insl
in
subl
mov
cwtl
add
adc
dec
das
out
lods
call
jmp
mov
mov
dec
push
inc
stc
clc
pop
inc
scas
or
mov
pushl
mov
mov
adc
mov
ffreep
jb
ret
int3
enter
add
add
popf
in
popa
xor
push
aaa
mov
push
pop
sti
cltd
das
jnp
adc
sub
repnz
in
push
insl
jnp
icebp
hlt
mov
push
ja
jb
adc
daa
ret
xor
or
fdivrs
insb
mov
xchg
loope
mov
int
test
xlat
cs
pop
dec
mov
cmpsb
adc
inc
or
pop
jo
pop
lock
sub
cmp
in
lret
scas
insl
mov
loop
cmp
test
rorl
pop
cmp
cmp
and
sub
or
sbb
add
insl
xchg
lods
aas
jno
std
xor
lahf
mov
ds
in
in
cmpsl
jns
fabs
repz
ljmp
xor
cltd
in
adc
jb
push
cs
gs
in
shlb
out
into
pop
or
aam
fwait
inc
mulb
xrelease
lret
push
inc
in
rcrl
ljmp
or
cmp
cli
xchg
incb
stos
push
inc
inc
sbb
mov
addr16
pop
enter
xchg
and
push
aas
pop
scas
rcl
stos
pop
adc
aas
hlt
adc
or
inc
roll
sarl
adc
jb
push
movsb
pop
push
add
cwtl
sbb
inc
push
push
sub
lods
fnsave
jnp
push
fdiv
ss
roll
leave
ret
adc
add
outsl
mov
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
or
cmp
sub
sti
dec
ss
rcrl
pop
ljmp
subl
lods
or
ljmp
adc
inc
ret
test
fimuls
stc
xchg
or
loope
inc
sub
pop
cltd
xor
mov
cmp
ljmp
or
stos
les
scas
or
sti
mulb
lock
push
ret
jbe
inc
out
in
cmp
fwait
imul
adc
xor
stos
lcall
mov
test
in
int3
out
mov
test
inc
in
pop
add
xchg
shrl
fsubs
xchg
push
mov
mov
mov
lock
gs
cmp
cmpsl
add
add
push
inc
loopne
stos
lods
scas
lods
add
sub
loopne
push
clc
nop
mov
popf
sar
outsl
mov
mov
push
xor
jbe
cmp
mov
pusha
sbb
jno
dec
outsl
dec
and
jl
aad
idivl
daa
fcomp
je
daa
xchg
loopne
jnp
add
aas
lret
jo
pusha
mov
mov
call
stc
aas
outsb
cmp
mov
test
cmp
lcall
test
lods
and
cld
cwtl
push
aad
cmpsl
mov
xchg
mov
xchg
arpl
xor
vfrczss
flds
lahf
lock
rol
iret
cmp
mov
mov
jne
xor
daa
xlat
cltd
aas
sbb
call
fnsave
add
adc
loopne
loopne
in
push
imul
in
jo
roll
xor
jbe
adc
adc
and
sub
push
push
enter
mov
pop
gs
xor
in
lcall
or
imul
sub
xchg
mov
sbb
not
add
fbstp
push
push
adc
sbb
call
xor
rcrl
mov
sub
adcb
xchg
insl
aad
mov
loope
push
in
add
mov
shr
dec
shlb
aas
xchg
cmpsl
mov
xchg
push
xor
fstpl
sub
out
and
int3
adc
inc
push
mov
ljmp
inc
dec
lahf
pop
inc
pop
add
daa
aaa
in
popa
jb
cmp
enter
ljmp
or
inc
xchg
jle
jno
xor
and
xor
sbb
lahf
popf
loopne
sub
mov
sub
enter
scas
inc
xchg
mov
mov
xchg
stos
xchg
cwtl
mov
mov
ljmp
roll
or
sub
dec
sbbl
xlat
sbb
xchg
mov
rolb
imul
jbe
jns
inc
sbb
cmp
sbb
add
inc
pop
xor
into
rcrl
inc
sbb
xchg
or
ret
fistpll
inc
xlat
xchg
push
pusha
sti
push
pop
mov
icebp
ss
push
pop
push
leave
jg
pop
and
enter
cmp
ret
and
lods
test
xchg
dec
fwait
shrb
gs
ds
push
in
sbb
sti
leave
push
pop
addr16
pop
mov
xchg
movsl
sub
iret
popl
or
dec
imul
lret
sbb
push
dec
cmpsb
popf
sbb
add
int3
push
ja
push
cld
and
xorb
fisubl
mov
not
jo
push
clc
add
sub
sahf
jae
xchg
jns
mov
clc
fcomps
xchg
aam
cltd
push
cmp
cmp
push
les
cmp
sub
cmp
jge
std
lret
lret
cmp
ljmp
pop
cmp
jecxz
pop
adc
mov
shufps
fwait
mov
test
xor
sub
test
daa
outsl
jbe
or
call
mov
mov
push
sbb
pop
loope
push
inc
sti
popa
cli
ljmp
xor
pop
jnp
push
mov
jmp
cmpsl
xchg
repz
imul
out
jl
push
aaa
data16
push
sbb
add
or
sti
ljmp
popf
lea
or
jno
xchg
mov
enter
ss
aam
leave
xchg
mov
sbb
pushf
and
ror
pop
popa
mov
mov
rorl
cli
in
cli
bound
cmp
sbb
jb
mov
xor
fwait
leave
repz
out
or
loopne
push
lock
scas
loop
enter
push
loopne
mov
lods
xchg
push
test
cld
movntps
push
lcall
divl
scas
xchg
xor
fistl
pop
arpl
lcall
cmpsl
scas
dec
in
cmp
xchg
nop
addr16
bound
mov
xchg
rcr
popf
xor
and
jecxz
fwait
les
insl
insl
push
push
cmp
add
dec
icebp
pusha
mov
test
and
in
ret
inc
subb
inc
enter
or
xchg
inc
inc
addl
dec
fcompl
test
addr16
sbb
cmc
xchg
fistl
mov
mov
mov
mov
loop
mov
jl
pop
adc
hlt
movsb
out
sbb
mov
repz
sti
stc
or
sbb
sub
mov
lock
ja
mov
ficoml
sbb
popa
jp
ljmp
or
ds
out
mov
xor
ds
mov
sbb
xlat
icebp
cli
xor
js
sub
mov
push
fldcw
lcall
sub
pop
xchg
imul
add
bound
rorb
push
push
or
jg
insl
mov
or
cmp
push
enter
pushf
decl
imulb
cmove
fsub
stc
addr16
sub
inc
testb
and
fs
mov
sbb
rcll
lods
loopne
jp
ljmp
stos
cmp
fs
je
or
cmp
aam
inc
cld
sub
add
push
gs
or
pushf
mov
outsb
sbb
popf
sti
dec
insb
push
cltd
jb
adc
mov
xor
mov
push
int
std
or
nop
cmp
fwait
out
xchg
jnp
icebp
and
jb
and
scas
movsl
movsb
test
add
shll
inc
jo
and
mov
push
lcall
or
sarb
xchg
outsl
nop
cmp
lcall
adc
sbb
push
orb
mov
xchg
in
sub
cmp
xor
clc
jmp
mov
repz
inc
ficomps
nop
mov
and
adcl
and
jne
sub
jmp
mov
mov
cli
push
or
jno
cmp
shlb
clc
sub
add
mov
dec
daa
lret
ja
fwait
mov
mov
or
out
lods
xor
cs
mov
stos
or
adcb
mov
lock
add
push
vpunpckhdq
bound
inc
out
push
push
int3
inc
mov
in
jmp
mov
inc
movsb
decl
sub
pop
push
orb
or
loop
cmpsb
adc
test
inc
aad
xorl
mov
adc
mov
xchg
out
ficoml
sub
adc
test
loope
mov
das
sbb
sti
imul
fwait
and
jmp
add
push
jp
push
sub
or
mov
pop
inc
or
xor
movsb
inc
inc
call
rcrl
fs
mov
iret
cwtl
xor
adc
sub
xchg
and
sbb
sub
imul
mov
dec
cmpsl
jge
aam
in
cs
cmp
pop
repz
cmp
scas
fdivr
rorl
xor
shr
pushf
fldt
std
in
aaa
mov
adc
nop
mov
call
ljmp
mov
fstpt
pop
jnp
loope
cltd
and
push
lds
sub
jbe
ljmp
call
push
push
push
sub
mov
jle
xchg
sub
cmc
pop
hlt
fbld
push
movsl
or
mov
test
sbb
fisubrl
les
fcmovnu
dec
mov
push
insl
ficoms
inc
ds
out
test
vpmacsdql
xchg
jl
sbb
ret
fs
std
insl
jno
inc
clc
add
stos
leave
mov
gs
int3
movsb
data16
pop
int
sbb
mov
cmp
ret
cmpsb
sub
mov
pushf
xchg
and
ljmp
mov
mov
xchg
sti
inc
pop
sbb
stc
jo
iret
ret
js
fsts
pop
dec
push
mov
rclb
pop
push
mov
mov
int
cwtl
mov
jge
stos
xchg
push
push
stos
iret
cltd
cmp
lods
addr16
xchg
ret
sub
push
loopne
pusha
add
sbb
cmc
push
aam
lock
mov
and
rclb
fstpt
and
sub
in
fnsave
shl
add
cmp
sub
cmp
adc
mov
mov
inc
sahf
or
fisttps
adc
daa
xor
fldcw
add
sbbb
fadds
xchg
pop
cmp
inc
or
push
sbb
loopne
adc
pusha
mov
or
lods
pop
lods
lea
xchg
aam
movsb
mov
inc
xchg
mov
adc
repnz
pushf
push
cmp
in
iret
inc
stc
mov
sub
pop
jns
cmp
push
ret
sub
aas
push
pop
xchg
insl
sub
std
faddl
mov
inc
rcrb
std
imulb
out
or
mov
mov
jne
outsb
in
sub
sbb
jmp
cmp
inc
mov
faddp
insb
scas
ljmp
jb
push
push
out
aaa
aaa
outsb
push
cmp
jecxz
scas
or
dec
stos
cmp
and
in
push
adc
inc
xchg
sub
gs
adc
sbb
jmp
fs
or
bound
sbb
imul
pop
jge
les
xchg
adc
push
pop
mov
test
out
or
cmpsb
imul
mov
data16
pop
pop
and
outsb
bound
fnclex
jb
and
mov
arpl
xchg
mov
in
push
dec
cmc
sub
jp
sbb
xor
and
addr16
mov
and
xor
dec
jnp
pop
hlt
sti
jle
or
sub
adc
jo
sub
repnz
push
pop
dec
and
outsb
xchg
jmp
xchg
loop
ljmp
loope
xchg
addr16
sbb
outsb
std
inc
xor
push
stc
fwait
cmp
mov
aas
leave
test
out
jmp
dec
mov
lea
adc
imul
pusha
lcall
push
test
sbb
xor
or
xchg
test
insl
adc
insl
jae
or
arpl
mov
cmp
arpl
jl
fiadds
stos
or
xor
test
rolb
mov
pop
cs
push
adc
fsubl
dec
mov
dec
add
mov
push
aas
mov
inc
arpl
cwtl
mov
push
push
xchg
daa
dec
mov
cltd
stc
aam
arpl
sbb
cmp
jmp
int
sub
out
mov
jne
dec
daa
add
dec
scas
cmpsl
pusha
add
jb
push
and
fidivs
and
xchg
or
pop
xchg
push
hlt
cld
push
js
or
dec
xchg
xor
stos
out
aaa
cmpsb
adc
xchg
xchg
inc
icebp
data16
lds
push
cmp
leave
insb
sbb
mov
xor
push
mov
lock
mov
pop
mov
xchg
dec
cmp
mov
dec
xor
mov
pop
ret
loope
jae
cmc
cmp
mov
in
mov
inc
pop
stc
or
add
or
js
jae
mov
cmp
dec
or
dec
sbbb
pop
or
inc
lods
lds
aad
dec
dec
inc
lods
cmp
push
jp
add
lods
pop
xchg
test
push
lods
mov
cwtl
jnp
mov
cli
mov
inc
out
or
or
mov
std
add
inc
sub
int3
xchg
inc
mov
push
sbb
lret
cmpsl
in
scas
xchg
push
push
xor
in
jne
mov
adc
ss
push
shll
movsl
add
jo
or
xchg
fcomp
loopne
or
cmp
or
fsub
sub
jo
sub
mov
fwait
adc
mov
rcrl
sbb
inc
sbb
jg
mov
int3
std
sbb
wbinvd
std
add
add
push
push
repnz
int3
and
mov
repz
add
xor
sbb
jno
xchg
int
push
xchg
jl
test
mov
lret
lret
movl
pop
mov
or
adc
jmp
jg
sub
stos
jg
ds
and
jns
repz
loope
pop
imul
push
push
scas
inc
dec
shrb
mov
lret
inc
or
lock
mov
inc
mov
mov
mov
daa
jg
sub
inc
lods
fisttps
fdivrl
mov
aas
mov
adc
addl
lods
call
xchg
cmp
scas
jae
ljmp
jns
test
pop
xchg
cmp
arpl
xchg
mov
sub
sub
adc
pop
push
push
jb
out
inc
add
mov
mov
aaa
sub
andb
mov
out
jge
pop
jno
iret
jle
incb
in
pop
xor
ret
loopne
sbb
and
fnsave
addr16
mov
mov
pop
dec
int3
mov
ss
into
loopne
test
aad
jns
inc
pop
xchg
repnz
test
in
cmp
imul
push
push
aad
movl
cwtl
mov
cmc
mov
or
adc
repz
pushf
mov
stc
inc
divl
adc
movsl
arpl
por
jns
lcall
lods
mov
add
adc
jg
icebp
cmp
ret
cmc
cmpsl
cmp
xchg
jne
inc
jp
dec
mull
xor
jnp
sbb
cmp
pop
insb
je
lret
mov
movsb
and
jbe
call
xor
call
push
cmp
ret
scas
mov
fstps
movsl
test
pushf
shlb
dec
or
xor
sub
and
add
push
leave
mov
jbe
lea
movsb
sti
adc
out
aam
xor
xor
pop
jae
adc
mov
adc
leave
mov
xor
add
js
insl
push
xor
pop
enter
adc
cwtl
fistpll
icebp
cmp
jo
dec
iret
push
mul
add
push
push
in
daa
push
mov
sub
push
jnp
aad
dec
sbb
das
adc
int3
loopne
add
pushf
orl
mov
sbb
push
jo
xchg
hlt
add
fldl
subl
push
test
mov
clc
rorl
movsb
and
mov
test
sub
insb
daa
mov
pop
jno
mov
int3
das
xor
mov
push
mov
test
lret
popa
pop
ret
stc
sbb
lcall
xchg
out
fwait
scas
sub
jg
loop
pop
inc
popa
push
xchg
push
add
fisubrl
out
push
testl
and
mov
push
xchg
xor
xor
xchg
push
sub
sti
pop
cmpsl
je
mov
pop
pop
dec
mov
frstor
inc
inc
lods
mov
pop
into
xchg
mov
fmuls
and
stos
aam
ret
cmpsl
lods
mov
push
sub
movaps
notb
and
push
mov
xorl
sbb
add
jnp
jnp
test
loopne
leave
mov
fbstp
stos
push
and
pushf
pop
pop
xchg
mov
loope
movsl
cs
jecxz
dec
lahf
mov
pop
pusha
fisttpll
adc
nop
scas
fwait
mov
mov
call
push
pop
in
jns
insb
inc
pusha
mov
mov
cwtl
cmp
aas
and
faddp
inc
jp
add
mov
iret
clc
and
cli
outsl
in
out
inc
psadbw
sub
add
in
mov
xor
stos
xchg
and
pop
lret
xchg
or
add
loop
ret
xchg
pop
mov
mov
add
mov
jb
push
sub
mov
hlt
cmp
jns
xchg
xor
ss
pop
pop
adc
mov
cld
data16
mov
fnstenv
xor
xlat
fwait
mov
cmp
mov
incb
pop
xchg
fwait
dec
xchg
cmpl
test
iret
outsb
mov
mov
ret
int3
pop
add
mov
add
lahf
xchg
sti
es
pop
loope
repnz
add
les
pop
insl
sar
andb
sbbb
aam
mov
xchg
mov
mov
stc
pop
and
lret
mov
aas
aam
fsubrl
cmc
push
xchg
inc
inc
ja
test
push
addr16
cltd
mov
inc
dec
jl
shl
test
xchg
dec
icebp
cmp
cmp
cmp
scas
pslld
cmp
sbb
in
arpl
fs
jp
adc
es
jns
shl
push
clc
stos
jl
sar
mulb
out
cld
ret
nop
xor
int
or
mov
mov
in
sbb
push
adc
push
sub
lods
shll
jb
mov
dec
push
test
insb
lds
aaa
xchg
or
adc
into
xor
dec
xor
sbb
push
push
jge
fcompl
xor
ja
push
loopne
pushf
sub
cmp
push
push
in
or
scas
inc
in
mov
mov
cmp
sbb
add
sbbl
adc
mov
cltd
outsb
popf
jge
and
jle
cmp
xchg
adc
and
sbb
iret
mov
xchg
pop
ret
std
pop
inc
push
stc
sarl
fwait
call
sbb
push
pop
mov
mov
movsl
fs
jo
mov
roll
push
fwait
adc
jmp
sti
or
add
test
insb
push
sti
pop
paddw
lret
call
movsb
jmp
dec
popf
sub
adc
mov
cmp
enter
cmp
ret
mov
add
mov
lahf
xor
or
lods
mov
add
call
dec
ss
cmp
add
cmpsb
push
repnz
mov
lods
pushf
pop
je
inc
sbb
stos
sub
jp
jecxz
mov
lods
lock
ds
mov
rorl
ds
add
in
and
addr16
cmpsb
test
sti
adc
sti
lahf
and
pop
call
mov
push
mov
pop
sahf
icebp
testl
int
std
nop
das
sbb
pop
outsl
jecxz
sub
push
add
xlat
sub
mov
sti
sti
icebp
outsl
loopne
pop
mov
mov
and
push
sti
pop
fstl
lods
std
and
jle
and
lret
ret
xchg
popa
push
push
cli
sbb
mov
int
jge
fimuls
sub
out
jbe
cltd
xchg
enter
arpl
push
mov
icebp
and
loop
pop
jnp
pop
jp
dec
and
mov
cmp
pushf
aam
nop
aas
and
mov
jno
pop
cmp
mov
fisttpl
sbb
pop
int3
mov
cmp
jl
sbb
sub
repnz
cwtl
adc
testb
mov
sub
xor
pop
shll
lock
and
leave
mov
imul
daa
loope
outsb
and
aam
movsb
mov
call
pop
push
loope
fdiv
or
push
sti
out
ss
mov
scas
pop
mov
js
mov
sbb
xlat
cwtl
cld
dec
mov
and
stos
mov
movsb
dec
adc
cmpsb
popf
lret
cli
mov
sbb
cmp
cwtl
out
push
cmpl
ret
mov
xchg
lea
add
es
jecxz
xorl
mov
jmp
inc
jg
fildl
pop
test
lds
lds
sbb
aam
aad
lea
rcll
xchg
push
cltd
arpl
sbb
lahf
in
adc
mov
int
pop
in
leave
pop
or
or
mov
out
into
dec
hlt
shrb
insl
inc
lea
test
xchg
sub
push
popa
pop
inc
dec
xor
xlat
fwait
sbbb
call
push
je
fidivs
mov
mov
das
dec
xchg
lahf
or
repz
int3
popa
sbb
es
jne
mov
push
mov
inc
add
test
ds
xchg
mov
leave
ficomps
aad
stos
stos
cmpsl
xlat
mov
aaa
mov
mov
mov
popf
clc
insl
jae
xlat
or
inc
push
ret
mov
xchg
leave
mov
lods
in
jno
loopne
pop
icebp
cmp
outsl
jne
push
push
sub
hlt
mov
or
or
push
je
ror
and
mov
cmp
fdivrl
xchg
nopl
mov
int3
adc
adc
jno
push
in
adc
imul
mov
fsin
sub
xchg
scas
cmp
lods
addr16
pushf
popf
lods
cmp
mov
fbld
jb
in
xchg
dec
repnz
pop
adc
sub
jmp
jnp
lret
mov
mov
sub
jb
test
outsl
mov
mov
roll
mov
adc
mov
aaa
xorb
mov
or
out
pop
pop
adc
lahf
fmuls
mov
sbbb
dec
lods
adc
push
lods
in
stos
xor
loopne
mov
pop
add
cs
jns
add
test
mov
loope
jmp
add
xor
gs
jo
mov
add
xor
outsb
mov
scas
and
pop
or
lret
and
mov
push
lea
outsb
fdivs
dec
or
xchg
ljmp
pop
mov
jecxz
dec
inc
sub
insl
pop
sahf
scas
push
rcll
flds
pop
in
mov
push
stc
cmp
adc
inc
daa
mov
ret
sti
jp
pop
les
bound
lods
inc
cltd
stos
and
cmp
inc
dec
cmp
cmp
xor
pminsw
dec
cmp
repnz
jmp
jg
jo
dec
cmp
into
add
lods
pusha
movsb
cltd
stos
xchg
jge
ljmp
cwtl
pop
xor
sti
mov
sbb
jmp
pop
sbb
lods
pop
or
sarb
mov
addr16
call
mov
sbb
mov
or
mov
outsb
addb
push
pand
test
movsl
inc
mov
test
xchg
adc
repz
fsubp
mov
jo
les
sbb
rolb
push
int
std
int3
and
dec
adc
or
call
repnz
fistps
std
mov
mov
mov
loope
pop
sbb
loop
leave
shrb
mov
out
jae
outsl
outsb
sbb
rorb
movsl
xchg
fst
push
sbb
adc
push
and
pop
loope
mov
cs
jbe
mov
loop
aas
and
pop
push
or
jnp
sbb
sub
xor
jge
xchg
mov
push
out
pop
stos
inc
push
mov
mov
dec
call
adc
pusha
inc
fs
jecxz
pop
les
mov
push
xchg
sahf
push
or
dec
add
adc
es
xchg
fidivrl
jmp
cwtl
mov
push
xchg
divb
mov
idiv
cmc
mov
jmp
rcl
mov
mov
jmp
imull
xor
push
jae
sub
sbb
sbb
divb
add
dec
cmp
mov
icebp
fs
xchg
ret
in
iret
inc
adc
pop
in
cmp
mov
push
pop
jno
sbb
mov
xchg
dec
push
pop
nop
scas
pop
lcall
xchg
rorb
popf
movsl
mov
and
call
push
in
dec
add
dec
std
cmpsl
xor
push
dec
aaa
cmpb
cmp
ja
ret
fildl
cbtw
or
movsb
cmpsb
jp
pop
dec
adc
iret
sub
push
pop
icebp
push
arpl
dec
jle
lret
mov
les
into
test
and
ss
sbb
cwtl
rol
pop
mov
adc
mov
add
loopne
int
adc
int3
inc
mov
jecxz
push
imul
xchg
xor
xor
mov
push
cmpsl
mov
lahf
insb
dec
inc
test
add
sarl
insl
loopne
jbe,pn
cld
divb
stos
aad
jo
adc
test
cmpb
xchg
adc
sbb
scas
xor
icebp
out
lods
xchg
call
ds
add
xchg
jle
fmul
cmp
cltd
xchg
pusha
test
test
push
inc
xchg
mov
mov
jg
cli
or
out
gs
gs
int
out
add
adc
mov
xor
adc
add
sbb
sbb
sub
sahf
cmc
fstpt
push
mov
movsb
daa
imul
mov
sub
xor
push
jb
addl
lcall
jecxz
mov
stc
fmull
xchg
movsb
shlb
mov
push
inc
ret
mov
cmc
inc
mov
push
cld
arpl
rcr
pop
jg
cmpsl
push
sbb
ror
in
lahf
popf
shrl
repnz
pushf
movsl
jnp
repnz
cld
push
push
inc
outsl
scas
dec
sub
push
add
dec
outsl
mulb
cmpsb
push
clc
std
call
sub
pop
call
cs
mov
adc
or
fsubs
jmp
in
popa
inc
stc
loopne
out
leave
cli
and
and
dec
mov
cmp
into
push
lcall
or
je
mov
ret
fiadds
andl
outsb
cmpsl
add
sbb
cli
dec
mov
and
lret
pusha
mov
ds
cmp
int
xor
xchg
jns
xchg
fidivl
in
idiv
inc
pop
push
xor
xchg
inc
adc
les
fs
dec
lcall
loop
mov
xchg
aaa
push
push
mov
out
and
fwait
dec
insl
enter
pushf
lahf
test
inc
add
dec
mov
loope
adc
add
jge
mov
push
arpl
arpl
push
pop
sbb
repnz
ja
mov
xor
gs
mov
mov
mov
in
ret
jmp
jmp
hlt
lods
addb
xchg
jns
inc
or
lods
fwait
and
push
out
ja
or
lds
adc
jmp
adc
test
sub
js
sarb
cli
ret
mov
sbb
aaa
jge,pt
pop
stos
jle
rorb
add
andb
sub
mov
pop
out
cmp
icebp
rcll
push
sti
nop
icebp
jb
ret
push
pusha
and
mov
lods
les
sbb
adc
fs
add
call
mov
test
jmp
out
pushf
mov
inc
cmp
adc
inc
andb
dec
jecxz
pop
inc
push
lahf
push
or
sub
and
leave
xchg
lahf
mov
pop
stos
inc
movsl
test
push
push
call
stos
inc
ja
cwtl
cld
push
sbb
jb
icebp
fiaddl
fidivs
sbb
ljmp
outsl
icebp
mov
xor
fwait
outsl
popa
ja
and
lds
fnstsw
lahf
addr16
inc
mov
inc
ret
ss
mov
lds
push
and
ret
nop
jmp
push
das
adc
jmp
gs
lods
daa
adc
xor
int3
jecxz
decb
int3
fmuls
fwait
inc
xchg
jo
out
daa
in
cltd
in
pusha
cmp
rclb
dec
sub
icebp
sub
xor
js
in
pop
mov
pop
push
hlt
jae
or
mov
or
jae
xchg
mov
loop
xor
in
cli
mov
js
lret
and
mov
inc
xor
sbb
enter
mov
jns
loope
sub
outsb
lock
ds
rcrb
or
lods
cmp
xor
xor
dec
xchg
pop
jmp
sbb
in
lret
mov
sti
xchg
mov
ss
stos
pop
sub
fcoml
es
dec
ds
add
cmp
aas
sub
fsub
sarb
cmc
mov
jnp
xor
es
mov
mov
out
jbe
call
js
fwait
aas
fmull
test
sbb
sub
addr16
shrb
mov
or
inc
sbb
in
jb
call
adc
push
lock
jmp
fnstsw
out
add
jge
inc
jecxz
xor
and
xor
cmp
adc
dec
dec
xchg
mov
and
xchg
mov
push
mov
gs
add
fs
fcmovu
xor
pop
or
pop
fwait
inc
stc
fbstp
popf
xchg
mov
xchg
xor
adc
add
xor
pop
add
dec
push
mov
jecxz
push
into
add
subb
es
inc
ss
lcall
pop
xor
and
adc
mov
outsl
add
sub
ljmp
jp
add
shlb
lds
popa
sub
loope
sub
icebp
pushf
jno
rorb
jg
mov
rclb
mov
test
jns
pop
sbb
sbb
out
push
int
aaa
sbb
mov
out
clc
mov
inc
mov
pop
aad
jmp
adc
icebp
jp
mov
outsb
fisttpll
mov
shr
jno
out
out
and
fistpl
cmc
loopne
jbe
cmp
inc
jns
mov
ljmp
mov
movsb
cs
pop
lret
jp
dec
lds
xchg
daa
inc
mov
pop
mov
sbb
repz
mov
mov
lret
fadd
and
into
push
add
lock
push
pop
and
scas
push
lods
mov
ret
cmpsb
mov
decl
pop
push
pop
scas
bound
push
fisubrs
adc
xor
dec
in
fsubrp
pop
xorb
add
mov
enter
fs
addr16
test
push
jp
mov
std
mov
dec
cs
jp
cltd
sbb
push
and
dec
ss
push
sarb
lcall
push
pop
iret
cmpsb
lock
scas
jne
imul
fidivl
rcll
add
or
stos
inc
cmc
inc
jo
ss
cwtl
out
test
daa
xor
jl
mov
call
fisubrs
fsubrl
aaa
scas
mov
mov
fwait
push
cli
push
orl
ss
cmpsl
loope
xor
or
rclb
dec
out
xchg
xchg
push
fs
ja
andb
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
mov
hlt
bound
pop
bound
push
mov
lret
bound
pop
stos
cli
mov
lods
add
out
subb
xchg
cmpsb
outsb
sti
sbb
jns
stos
mov
lock
sub
mov
mov
sti
push
xor
jbe
mov
add
push
cld
mov
testb
push
loop
das
or
dec
shrb
das
mov
sbb
cmp
pop
or
sub
lret
jge
xchg
add
inc
add
out
out
fistpl
lret
iret
cmp
xchg
loopne
daa
inc
and
xchg
xor
pop
int
push
sbb
aam
rolb
fwait
testb
jno
dec
sbb
jo
xor
xor
fwait
jge
ffreep
loope
data16
jns
mov
mov
cmc
js
sbb
dec
inc
daa
mov
adc
mov
call
pop
incb
fdivrl
xchg
rorl
fisubrl
push
mov
and
ret
xchg
test
cmp
fstps
inc
mov
jno
push
js
mov
jg
addl
mov
sbb
shll
lea
push
mov
jbe
enter
cmc
push
insb
push
mov
add
das
xor
dec
and
pop
icebp
sub
pop
loopne
out
cmp
popw
fnstsw
push
add
loope
test
mov
icebp
jle
cmpsb
jne
inc
addr16
fisttps
xor
or
loopne
mov
cmc
in
mov
stos
xchg
dec
leave
cld
sahf
inc
xchg
mov
add
je
push
call
fadd
jne
mov
stos
bound
sbb
sbb
dec
mov
pop
cltd
sub
loopne
mov
js
push
call
int3
jmp
sbb
aad
test
rcr
jl
cmp
inc
lods
std
test
cmp
and
xor
jnp
sbb
cs
in
cmp
imul
push
jae
in
call
add
xchg
xchg
loopne
sbb
push
xchg
push
push
mov
mov
push
sub
or
in
mov
in
pop
inc
jns
into
popf
cmovns
in
shlb
push
jg
and
lret
inc
jno
push
pop
push
out
mov
loopne
imul
movsb
or
mov
mov
sbb
mov
out
cmp
sub
or
push
rcll
cltd
jb
mov
insb
and
fidivs
pop
jmp
sahf
push
and
cld
popa
add
inc
call
les
das
mov
mov
int
sbb
outsl
dec
mov
jecxz
in
mov
jl
xchg
sti
sbb
cli
push
or
pop
xor
jbe
fldcw
pushf
aam
adc
dec
in
dec
scas
pop
cs
mov
or
sbb
push
je
dec
shl
xchg
loop
add
xchg
sub
fcoms
sbb
out
jecxz
push
lock
imul
std
sahf
jno
mov
mov
loopne
pop
hlt
aam
fidivl
dec
loope
jmp
ret
add
jnp
repz
xchg
test
sub
leave
xor
hlt
aaa
dec
xchg
cmp
sub
fadd
pop
loop
push
sbb
fcom
mov
fs
mov
pop
iret
push
mov
sbb
cld
add
dec
loopne
shll
sti
ja
mov
xor
sahf
mov
and
xlat
fnstenv
insl
or
xchg
and
and
pushf
enter
pop
hlt
or
jno
fdivrl
push
aaa
dec
sub
push
sbb
sub
call
cmp
sub
lcall
cli
add
out
mov
jbe
cwtl
cmp
dec
aam
or
jae
in
mov
loop
imul
iret
out
dec
loopne
sub
pop
or
xchg
mov
ss
pop
int
sti
sub
mov
push
cmp
out
stc
mov
dec
lret
and
scas
aaa
movsb
adc
mov
push
push
out
loop
fdivrp
loop
sub
xchg
add
push
mov
xor
shrb
stos
subb
repz
mov
dec
cmp
dec
incb
out
xchg
cmc
in
push
sbb
mov
fsts
jo
shl
xchg
mov
stos
fcmove
sarb
roll
adc
call
je
sarl
sahf
mov
or
bound
aad
xor
cmpsb
sbb
insl
push
mov
ja
sbb
sub
popa
mov
sub
rorb
push
insl
rcr
loop
push
cmp
xchg
xor
xor
fbld
cmp
lcall
cmp
add
jp
xorl
jae
movsb
jbe
out
je
out
jns
les
mov
adc
in
js
pop
jns
push
cmp
and
mov
inc
faddl
ss
cmc
fwait
xor
jns
or
jb
xor
push
pop
push
int3
shrd
lods
outsl
jmp
lock
mov
out
sbb
and
in
or
cli
add
cmp
xchg
mov
dec
pop
call
pop
and
out
leave
push
repz
jp
stos
jge
adcl
test
popa
mull
in
jle
pop
mov
dec
push
outsb
jnp
dec
loopne
push
mov
mov
idivb
insl
loopne
jne
mov
stos
mov
sbb
orl
or
mov
jnp
adc
xchg
or
cmp
loop
leave
push
movb
lret
lcall
xchg
xor
xor
cmp
jmp
cmp
repnz
mov
mov
sbb
or
imul
mov
rolb
jmp
std
iret
push
pusha
pop
xor
jo
lock
rcr
adcb
popf
cmpsb
sbb
push
xor
outsb
push
xchg
cmp
loop
lahf
pop
push
mov
mov
test
add
enter
cmpsl
scas
jmp
pusha
pop
push
in
mov
push
popf
aad
cli
cmp
cmp
fs
iret
lcall
hlt
ret
aad
call
imul
ret
into
mov
or
decl
dec
addb
pop
sub
xlat
cmc
mov
xor
vandpd
xchg
insl
adc
into
out
push
add
pop
mov
xor
sub
js
lock
sbb
push
shlb
mov
jp
xor
or
add
iret
xor
test
out
in
les
inc
sbb
pop
stos
xlat
or
data16
xor
xor
mov
mov
jmp
xor
lea
or
jle
xor
push
cmovb
dec
call
popf
pop
pop
jle
cmpsl
out
xor
enter
jmp
dec
mov
sbb
add
inc
cld
rclb
or
mov
popa
daa
add
imul
mov
stos
and
mov
mov
mov
add
xchg
in
mov
sub
inc
dec
sbb
daa
sub
outsb
inc
mov
mov
loopne
aas
jb
push
bound
inc
xor
iret
mov
movsb
addr16
mov
pop
inc
push
pop
jb
aam
cmp
or
ljmp
movsl
dec
popaw
xlat
imul
cmpsl
push
inc
repnz
icebp
roll
jmp
es
sub
inc
enter
insb
in
inc
test
and
insb
js
clc
jmp
pop
sub
jmp
mov
scas
int3
jbe
inc
dec
cmp
cmp
fstps
and
and
pop
mov
adc
out
leave
sub
stc
sti
jge
push
int3
mov
push
fbld
fmull
lds
iret
sbb
pusha
arpl
arpl
sbb
mov
aaa
jo
mov
in
test
mov
push
bound
repz
and
jbe
out
xor
inc
push
orl
lahf
xor
add
mov
cwtl
lods
loope
dec
lock
mov
arpl
mov
jle
adc
sub
mov
cli
lds
pop
orps
xor
dec
into
aam
fwait
hlt
add
sub
cmc
adc
ss
push
std
into
add
mov
les
cmp
mov
lret
jl
test
js
xchg
lods
movsl
fldlg2
roll
ss
rorb
mov
mov
lods
popf
mov
fwait
mov
mov
xchg
insb
psrld
out
pop
jp
scas
push
lret
mov
insl
jecxz
sbb
mov
mov
movb
lods
push
jge
dec
daa
sbb
je
aas
lea
repz
out
scas
xchg
negb
sub
test
repz
rolb
addr16
aas
mov
mulps
push
pushf
cmp
jge
rolb
lods
sarb
arpl
mov
je
insb
shll
bound
jl
or
pop
xor
ret
rcll
mov
test
mov
pushf
pop
dec
leave
roll
cli
test
cmpsb
cwtl
push
push
lahf
pop
gs
lcall
fists
call
inc
inc
pop
fs
imul
sub
sbb
push
cmpsl
lret
or
aaa
inc
pop
call
xor
xor
jge
xor
cmpl
inc
rclb
leave
lea
dec
or
aam
nop
xchg
and
mov
jmp
movsl
cltd
push
cmp
mov
neg
cld
scas
int3
mov
inc
iret
out
cmpsl
jge
shll
daa
sub
mov
sbbl
test
adc
add
imul
cwtl
lea
fdivs
pop
mov
xor
mov
adc
rclb
and
jge
jecxz
and
sub
adc
jo
cmp
data16
std
push
push
mov
dec
push
dec
cld
jnp
arpl
or
fmull
sbb
sti
mov
lahf
lock
in
lods
push
test
and
js
add
xor
mov
lods
xlat
sbb
cli
stos
mov
sbb
lcall
cmc
adc
add
jmp
mov
sub
ja
sbb
scas
inc
cmp
dec
dec
movsl
and
ljmp
xlat
popf
cmp
inc
out
cmpsl
es
aaa
fisubrl
aam
ljmp
sti
jae
jg
std
push
mov
out
inc
roll
mov
clc
xchg
dec
push
divl
aaa
push
xlat
and
adc
inc
scas
jbe
adc
imulb
cwtl
hlt
jecxz
bound
jle
lret
mov
mov
roll
icebp
mov
popf
adc
or
and
adc
xchg
xor
add
pop
mov
sarl
or
xlat
dec
cli
sub
inc
mov
jno
add
and
adc
into
insl
mov
sbbb
test
fs
popa
les
jae
push
orb
xchg
sub
fistpl
daa
je
jns
loope
jecxz
or
iret
fstps
mov
int
mov
js
insb
sbb
fldcw
or
add
and
sbb
scas
adc
mov
jae
in
sub
pushf
cmp
addb
sub
mov
xchg
pusha
hlt
and
out
adc
jl
aam
rcl
mov
std
xor
push
dec
jnp
fbld
cmpb
and
and
pop
in
xor
clc
jbe
and
fidivrs
shrl
mov
mov
jmp
add
and
jae
mov
add
js
jnp
mov
sti
xor
shl
lcall
pop
pop
repz
movsl
sub
fcoms
fmulp
pop
cmpsl
xor
int
cmpsb
sub
addr16
lret
push
xchg
loop
mov
jnp
divb
cmp
stc
sbb
push
cmpsb
fs
jne
jo
or
shl
mov
nop
call
aaa
jmp
movsl
mov
mov
in
stc
cmp
iret
dec
dec
and
inc
fimuls
cmp
shl
faddl
data16
push
push
push
insl
jne
inc
inc
adc
lods
out
jne
fldenv
in
mov
inc
xor
gs
das
jge
lods
dec
daa
fisubrl
dec
mov
les
out
loope
fmul
mov
xlat
into
sub
lcall
mov
cmp
add
xlat
xor
push
xor
sub
nop
arpl
jno
sbb
test
jmp
pop
out
push
xchg
stos
std
jmp
mov
dec
test
xchg
test
stos
aam
lahf
and
cmp
pop
fidivrs
sub
fstpt
movsl
es
cmp
mov
xchg
insl
xor
outsl
je
arpl
repnz
inc
xchg
sub
clc
xor
xchg
push
stos
aas
stos
inc
jbe
mov
xchg
push
mov
mov
nop
or
jecxz
xchg
mov
push
sar
fsubrl
lcall
loope
imul
and
aas
lods
pop
adc
xchg
mov
mov
stc
cmpsl
fwait
mov
and
inc
je
xor
sar
in
jne
hlt
rolb
or
es
fdivrl
jle
sbb
mov
test
in
sub
inc
scas
inc
flds
fadds
jecxz
and
not
test
popa
test
pop
jmp
mov
push
fucompp
repz
out
ret
hlt
aaa
cli
outsb
mov
bound
mov
inc
ds
add
fldcw
pop
push
xchg
lret
fsubs
test
rcr
inc
push
and
cmpsl
test
jbe
adc
sub
mov
icebp
shl
mov
lea
es
xchg
xchg
cld
jmp
adc
stos
mov
stos
fadds
lds
outsl
or
cltd
inc
out
call
cmp
xchg
add
push
or
aas
scas
adc
jno
and
jl
pop
lea
fstl
fdiv
ficompl
pop
testl
dec
push
jo
mov
nop
test
cltd
xchg
fimull
ret
scas
and
or
add
scas
cmp
cmp
jae
sub
bndstx
fldl
mov
and
jbe
mov
xor
imul
lods
stc
pop
aad
lea
sub
nop
jg
cs
jno
push
insb
pusha
test
int3
in
addb
inc
or
rolb
fcmovbe
scas
or
inc
push
movsl
dec
xor
xchg
hlt
movb
in
xlat
mov
adc
xchg
sub
xor
pop
jo
shr
and
sub
fwait
ret
cld
mov
mov
push
add
jns
cmc
in
fwait
push
mov
mov
adcb
mov
sbb
add
inc
inc
sbb
insl
cmp
and
mov
jecxz
and
aam
xchg
cmp
into
xchg
hlt
movaps
jle
test
fiadds
lret
cmc
adc
or
jb
jp
jns
push
fsubr
notl
pop
les
mov
add
pushl
mov
dec
sub
and
popf
test
sub
mov
in
sub
push
mov
mov
mov
inc
imul
sbb
mul
xor
fldl
inc
repz
divb
ljmp
sub
xor
aad
lock
movsl
out
shlb
and
leave
lret
lahf
add
adc
xchg
test
adc
sub
adc
xlat
pop
std
pop
mov
imul
idivl
xor
cmpsb
sbb
xor
mov
add
or
xor
mov
gs
lcall
stos
ja
xor
jp
loop
sahf
push
rclb
mov
jne
loop
add
mov
jo
test
mov
mov
test
mov
fistl
pop
imul
repnz
shr
or
pop
insl
sbb
popf
in
insb
sbbb
pop
and
ficompl
in
aas
and
aam
ljmp
jmp
lods
into
and
gs
dec
lods
test
or
jg
mov
mov
call
mov
dec
lcall
pop
or
andb
adc
iret
cs
jecxz
sbb
and
or
and
lret
ret
xor
push
fs
cmc
and
cli
pop
sbb
imul
aam
ljmp
outsb
pop
inc
decb
pop
pusha
cmpsb
mov
loopne
stos
add
mov
hlt
push
push
mov
xchg
movsb
mov
and
jecxz
xchg
jb
outsb
outsb
out
in
test
push
add
mov
xor
test
add
repz
and
jno
addr16
sbb
shll
outsb
and
daa
sub
imul
fwait
out
mov
adc
pop
pop
sbb
nop
mov
or
push
shr
xor
and
mov
push
dec
addr16
test
add
pop
jne
sbb
das
pop
jecxz
mov
and
sbb
call
scas
roll
popa
lcall
jecxz
mov
add
mov
scas
mov
dec
cmpsl
push
je
gs
mov
in
lock
int3
and
rep
fwait
orl
cld
inc
popa
mov
inc
adc
inc
inc
divb
dec
popa
in
add
int
imul
shrl
bound
pop
test
iret
lahf
push
cmpsl
cmp
inc
jns
sbb
mov
sti
pop
arpl
mov
add
sub
sti
lods
nop
jns
decl
stos
add
xchg
pushf
xor
shl
sbb
addl
lods
push
popf
leave
jns
mov
rol
test
cli
ds
xor
push
and
mov
cmp
xor
fmulp
pop
leave
insb
cmpsb
xor
fsubs
clc
xchg
addr16
test
pop
and
cmc
pop
in
clc
rcll
je
xchg
jae
jb
xorb
xorb
jecxz
push
ds
js
movsb
call
push
int3
jmp
ljmp
sbb
mov
dec
mov
sbb
xor
dec
loop
ja
pop
imul
aaa
sub
push
pusha
add
cmp
push
cmc
iret
jo
mov
aaa
add
nop
and
ljmp
inc
nop
pusha
fdivl
cmp
jb
sub
ljmp
jne
xchg
out
jmp
xor
fisubs
push
std
jns
adc
mov
push
xor
pop
mov
loope
mov
arpl
add
mov
jg
insb
es
fstpt
add
push
sbb
cwtl
mov
push
dec
xchg
cli
das
sbb
rorb
xlat
jecxz
into
mov
loope
mov
ficoms
push
jp
dec
pusha
rcrb
push
xchg
fiaddl
and
outsb
rcll
and
push
popa
sub
mov
jp
aam
dec
jg
xorl
sbb
dec
mov
mov
xor
int
pop
in
lods
adc
divb
mov
aaa
mov
or
shrl
or
sub
and
mov
xor
mov
test
cmpsl
and
movsl
cli
mov
stos
and
mov
loopne
push
lcall
shrl
xor
and
push
xor
loop
add
add
mov
pop
pop
adcl
xor
push
int3
or
fstps
scas
sbb
aas
mov
daa
jp
push
dec
lcall
jmp
sub
nop
and
cmp
or
enter
imul
cli
ss
cltd
call
mov
mov
xchg
aaa
dec
loope
aam
jg
testl
mov
das
cmp
arpl
sbb
js
in
gs
fsubr
and
add
mov
sbb
dec
mov
inc
xchg
adc
fists
adc
push
xlat
sbbl
mov
mov
pushf
call
xor
outsl
push
jl
idiv
jns
push
xchg
sbb
jnp
enter
cwtl
fwait
adcl
iret
dec
push
pusha
imul
xchg
mov
fmull
ds
add
out
lcall
mov
mov
rol
or
out
mov
push
nop
in
xchg
pusha
and
lods
lahf
xorl
jbe
lcall
pop
mov
jp
aas
cmpl
addr16
push
in
dec
sub
mov
scas
push
jbe
lea
mov
ljmp
ljmp
in
mov
sub
sbb
mov
mov
dec
popf
loop
sbb
mov
dec
jmp
hlt
jmp
sbb
leave
or
shrl
add
jge
mov
jbe
iret
rcll
das
jp
orb
movsl
scas
daa
clc
and
cmp
add
dec
rep
add
sbb
data16
push
test
addb
cmp
push
roll
sub
dec
jb
insl
lret
xchg
jle
mov
jecxz
std
sbb
adc
dec
test
fidivrl
int
mov
in
in
ds
call
sbb
jle
cmp
and
lcall
mov
push
push
mov
out
das
xchg
aam
adc
pop
mov
xorl
mov
rol
popa
push
or
jno
out
shr
in
mov
and
and
test
xchg
xchg
mov
into
add
sbb
hlt
iret
jae
cld
movsb
scas
out
decl
pop
stos
cmp
pop
dec
jno
ret
push
inc
outsb
inc
mov
sbb
cmp
sbb
bound
ss
pop
inc
test
movsb
push
lods
lods
sahf
aaa
dec
and
sub
inc
popf
test
sub
in
incl
imul
pop
add
fs
test
out
repnz
jbe
es
push
sbb
cwtl
sbb
cmp
fcmovbe
xchg
sub
sub
pop
cld
repnz
add
or
mov
mov
jg
push
cmp
loopne
mov
add
push
ret
data16
ds
push
push
mov
insb
sbb
add
movsb
dec
and
andb
sbb
jo
push
push
sub
inc
rol
lahf
std
in
lods
xchg
xor
lods
push
fsubl
or
and
inc
jno
mov
cmc
adc
cmp
xchg
stos
jl
ffree
xor
fcomps
and
fwait
outsb
jb
jp
mov
add
test
inc
imul
jb
lds
jae
push
sub
out
daa
xchg
ret
jb
xor
rol
cld
mov
loope
dec
jb
push
sti
out
out
test
add
jl
cmp
stos
and
xchg
adc
push
outsl
in
gs
pop
icebp
cmpl
cmpsb
mov
aaa
in
lods
mov
rcrb
addl
cltd
push
int
lock
jae
imul
mov
sahf
dec
push
test
test
jg
aam
and
xacquire
jmp
imul
xchg
xor
push
lds
jo
stos
and
add
pop
sbb
add
test
fimuls
adc
outsb
sbb
hlt
sbb
push
mull
aas
addr16
xchg
ja
idivb
pop
test
sub
push
sub
hlt
js
dec
iret
sbb
stos
sti
arpl
cmp
int
or
out
outsl
nop
mov
mov
mov
icebp
push
or
push
cmpsl
nopl
push
aad
fucom
cmp
das
loopne
pop
int3
or
push
push
and
mov
test
push
fisttpl
ds
cmc
fsubrl
dec
mov
mov
mov
in
cmc
jg
xchg
lret
imul
andl
xor
xchg
sbb
shll
fmul
mov
cmc
cmp
sub
xlat
cmpsl
jnp
sahf
call
aad
es
add
mov
fnsave
out
test
cld
pushf
inc
pop
cmp
sub
shr
and
dec
clc
jge
xorb
pop
pop
jmp
sub
jecxz
xor
xchg
in
shrb
dec
mov
push
jns
shl
leave
outsl
and
inc
es
outsl
test
orb
push
inc
js
fs
lret
mov
mov
mov
jne
push
xchg
sti
xchg
loope
pushf
pop
and
inc
lds
mov
ja
ss
daa
cmp
cmc
sbb
push
push
cmp
repz
xor
jae
mov
xchg
mov
fidivrl
loope
cmp
sub
push
xchg
mov
pop
add
and
dec
xchg
fstpl
shrl
out
xchg
and
rcll
in
dec
cld
jl
dec
xor
int
fs
lret
fcompl
xor
dec
lods
xor
jne
pop
test
add
dec
mov
adc
cmp
insl
xchg
je
inc
movsb
inc
jmp
mov
jns
test
fidivrl
movsb
outsl
enter
mov
dec
mov
data16
ret
jmp
xchg
pop
pop
xchg
cmpsl
inc
cli
popf
stc
pop
xchg
aam
xchg
sahf
int
push
movsb
fsub
jnp
xchg
lahf
mov
divb
imul
movsb
js
mov
xor
insl
movsl
loop
movsb
xor
mov
adc
mov
outsb
pushf
jp
xlat
lock
adc
push
test
add
pop
sbbb
push
xchg
or
in
pop
jnp
mov
and
iret
lods
inc
je
cmpsl
aaa
cmp
test
js
test
jle
jecxz
dec
test
je
sub
pop
and
pop
arpl
jns
mov
cmp
pop
lret
cmp
in
sti
xor
xlat
andb
adc
push
jg
ds
fyl2xp1
mov
je
mov
jge
js
test
insl
xor
ja
out
nop
ficomps
push
and
xor
mov
outsl
dec
iret
pop
jg
in
stos
dec
repz
loop
jae
lods
lods
fcmovb
lret
inc
push
aad
outsl
inc
dec
cmp
loope
aad
sub
movsb
scas
fildl
or
push
mov
out
and
mov
sahf
adc
lcall
cwtl
into
sub
rcll
in
rol
xor
mov
adc
les
or
fiadds
outsb
dec
lods
xchg
ret
xor
pop
cmp
mov
testb
pop
mov
hlt
lret
push
sub
sbb
loope
data16
pop
xchg
and
jnp
imul
je
inc
pop
push
xchg
inc
cmpsl
mov
push
insb
hlt
pop
add
inc
data16
leave
and
cltd
fadd
scas
dec
rcr
jae
out
gs
lock
fucomp
jp
jns
jmp
arpl
or
cltd
cmp
mov
add
inc
test
pushl
ja
lea
mov
or
mov
sub
and
adc
movsb
das
les
mov
xlat
mov
repnz
inc
xchg
dec
mov
mov
mov
outsb
inc
cs
mov
push
jb
mov
pusha
rclb
outsl
jnp
push
lret
dec
fstpt
jp
stos
push
push
or
adc
int
fs
or
inc
repz
stos
or
test
aaa
out
loop
scas
and
cmp
scas
test
sarw
push
aas
ret
adc
lock
cwtl
pop
addr16
mov
js
dec
push
clc
icebp
nop
push
mov
stos
pop
inc
adc
inc
xor
push
or
popf
nop
adc
mov
inc
pushf
push
xchg
or
jl
insb
pop
aad
add
mov
cli
xor
dec
sub
xor
ja
or
cmp
pop
jg
or
aaa
add
adc
sbb
aaa
cwtl
daa
out
xor
rep
test
das
push
jb
repz
inc
cli
xor
xor
xchg
mov
es
xchg
inc
pop
jmp
push
jg
arpl
xor
xlat
popa
pop
jge
inc
cmp
jb
mov
ljmp
cmp
sub
mov
bound
popf
xlat
pop
jmp
lahf
cltd
or
cli
mov
insb
xchg
aad
push
int
pop
jmp
dec
arpl
fimuls
and
in
test
sub
dec
xor
mov
sub
in
add
jp
adc
jge
addl
adc
cwtl
dec
sub
mov
and
shlb
lahf
push
push
dec
stos
aam
jns
icebp
pop
fs
neg
adc
das
unpcklps
iret
lahf
aad
imul
and
lahf
shl
out
in
sub
pop
mov
daa
inc
dec
jne
shl
fimuls
in
sbb
inc
sub
inc
test
sbb
xor
xchg
movsb
pop
int3
adc
sub
je
ret
and
ljmp
mov
lahf
xchg
and
jmp
or
push
mov
adc
pushw
cmpb
test
into
or
jo
mov
test
mov
loop
and
and
fists
push
xor
inc
xchg
loope
adc
sahf
mov
mov
mov
ljmp
addl
clc
dec
stos
mov
sahf
ret
adc
aas
in
dec
out
cmp
xchg
cmpsl
shrb
lock
push
inc
es
sbb
jmp
stc
popa
loope
lods
cmpsl
cmc
nop
int
push
jl
ret
sub
cld
push
shrl
or
out
icebp
push
in
gs
call
aaa
scas
fnstcw
pop
mov
lods
js
jmp
scas
mov
jne
clc
idiv
fistpll
scas
into
aam
repz
data16
and
xchg
cltd
cwtl
xchg
jbe
jb
pop
dec
stos
popf
idivb
jb
jl
gs
repnz
xchg
pushf
mov
lret
movsb
repz
jne
in
ja
sub
fwait
or
repnz
call
fsubrs
or
fwait
cwtl
jbe
icebp
mov
loopne
out
inc
inc
xor
add
mov
hlt
fwait
push
jl
mov
xchg
sub
fstl
stc
mov
mov
mov
pop
test
inc
push
jp,pn
pop
iret
fs
stos
inc
test
xchg
jns
btrl
jnp
xor
cwtl
jmp
jecxz
pop
cmc
sub
scas
test
mov
xchg
sub
dec
jo
imul
fistps
inc
xchg
or
jp
xor
mov
out
xchg
lods
mov
mov
mov
outsl
push
call
or
sbb
in
aaa
or
in
lods
lahf
add
daa
sbb
pop
insb
pop
mov
repz
je
lret
dec
add
jae
pop
in
je
out
and
mov
mov
push
or
jb
dec
aaa
xchg
jl
pop
sub
mov
push
aam
xor
cmp
mov
lahf
sub
jae
lods
sub
push
jbe
ret
fs
ror
jecxz
sarb
fwait
jle
je
mov
popf
jge
and
inc
movsb
mov
stos
insl
and
sar
jle
push
push
dec
aaa
jae
lock
push
mov
cmpsl
mov
call
cmp
aaa
sub
push
setle
mov
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
outsl
aas
lret
shll
jmp
bound
fildl
or
nop
popa
and
inc
jbe
das
jns
lcall
jne
inc
cli
outsb
jp
jl
pop
and
sbb
and
sbbl
jo
sub
xor
cmpsl
add
out
inc
mov
xchg
std
adc
inc
add
or
xchg
repnz
mov
pop
call
aas
add
adc
xchg
mov
xchg
mov
movq
mov
movsb
cmp
stos
and
cli
pop
inc
pushf
out
dec
fstpl
lea
lcall
shrl
fisubrs
sarl
jb
cmc
stc
dec
fldl
push
push
loopne
fcmovne
mov
out
pop
fsubl
stos
lret
pop
push
test
out
sub
mov
inc
xlat
xor
int3
xchg
jmp
ret
mov
sub
jle
add
rolb
imul
push
das
pop
cmp
dec
sbb
call
aam
daa
icebp
push
outsl
fists
xchg
cwtl
cmp
das
cmp
mov
inc
push
cwtl
enter
xchg
fdivp
ret
leave
in
xchg
iret
xchg
mov
push
mov
aas
filds
mov
fisttps
inc
bound
arpl
xorb
ljmp
mov
pop
sti
fidivs
cmc
or
rorl
rorb
into
ds
inc
leave
push
js
xchg
lods
mov
dec
pop
sarl
int
sahf
icebp
ja
mov
cmp
nop
out
movsl
sarb
cld
cli
outsl
push
cmp
mov
cmpsb
mov
jp
xchg
adc
or
pusha
mov
sbb
data16
jbe
dec
and
and
iret
or
scas
loop
and
sbbl
mov
pop
xchg
xchg
mov
popa
sbb
icebp
or
insl
cmp
ja
dec
mov
loopne
dec
fs
mov
addb
pop
icebp
arpl
adc
shl
sbb
mov
enter
out
push
scas
adc
jo
or
repz
pop
pusha
and
lret
sbb
dec
pop
pop
mov
jb
dec
pop
mov
gs
aas
lahf
push
mov
ss
cmc
xor
dec
movsb
fiadds
gs
mov
jnp
cmp
lock
push
les
jecxz
pop
adc
mov
sbb
js
fs
cli
mov
ja
rclb
dec
sub
in
xor
jns
cmp
loop
push
outsb
mov
hlt
stos
mov
pop
fidivrs
es
aam
sbb
mov
ja
mov
push
sahf
in
scas
mov
fadd
dec
pusha
push
fwait
mov
mov
inc
inc
mov
call
adc
inc
jp
sbb
sbb
int3
pop
cmp
mov
mov
xor
data16
mov
out
sub
mov
mov
jns
adc
dec
test
rcrl
sub
in
in
dec
ret
sub
js
mov
push
pop
inc
xchg
mov
xor
hlt
movsl
jns
cltd
and
es
xchg
fdivrp
subl
stos
pop
fsub
in
aaa
fldl
stc
ret
jl
adc
xchg
mov
cmp
out
repz
rorb
xchg
xchg
push
out
pop
sub
outsl
lds
jae
jb
outsl
push
shl
test
jge
call
int3
sti
jmp
or
add
push
dec
lds
nop
sub
insb
cmpsl
fsubrp
rorb
es
sub
mov
dec
or
loop
lret
add
push
fistl
inc
pop
ja
rcr
daa
mov
cmp
dec
fstps
jg
out
ret
shlb
mov
pop
mov
addr16
aaa
sub
and
jo
dec
xor
xorb
dec
and
sbb
scas
xlat
cmp
push
adc
xchg
inc
xorb
cmpsl
add
lock
ds
cmpsb
push
mov
sbb
hlt
movsl
stc
cmp
cmpsb
call
out
sbb
adc
hlt
pop
filds
sbb
arpl
in
xchg
sahf
inc
jp
das
cltd
hlt
jo
iret
mov
movsl
fnop
lea
and
pop
xchg
ljmp
mov
pop
push
jb
hlt
setns
fsubrs
mov
or
iret
data16
lret
adc
test
fadd
push
pop
mov
imul
push
jnp
mov
iret
push
cmpsl
lret
mov
push
or
jecxz
dec
adc
loope
leave
movb
scas
cld
or
out
jbe
mov
ja
daa
xor
xchg
mov
insl
jg
orb
adc
xchg
pushf
pop
frstor
iret
sub
insl
popa
mov
sbb
inc
test
cmp
push
fcoms
out
inc
fsubrs
enter
shl
out
sbb
mov
sahf
jge
stc
adc
dec
sub
push
push
sub
ds
movl
addl
mov
mov
sahf
dec
mov
pop
in
les
in
mov
and
and
mov
aaa
inc
mov
cwtl
arpl
inc
je
inc
orb
adc
pop
je
aam
das
aam
mov
bound
xorl
adc
or
xchg
lret
jmp
rol
mov
jne
and
popa
pminub
ds
inc
out
adc
push
rcrl
and
decb
aas
and
jg
stc
unpckhps
pop
inc
imul
jo
xchg
jbe
aaa
aad
ljmp
movsb
or
mov
xchg
push
data16
jl
fwait
mov
iret
xchg
mov
cmp
sub
subb
icebp
xchg
and
das
jno
bound
xor
mov
lahf
test
sbb
roll
out
pop
add
pop
sub
jl
popa
rcr
dec
out
mov
and
pop
add
push
lock
mov
xor
pop
sbb
gs
mov
push
lcall
mov
xor
mov
repz
cmpsb
bnd
jnp
or
xor
jg
push
shl
push
adc
lds
push
iret
cli
sub
jp
add
mov
popa
cmpsl
fcomps
jle
in
add
out
adc
lods
sub
dec
aas
out
inc
mov
push
pop
cmc
loop
inc
push
fldt
push
jbe
je
xchg
sbb
movsb
inc
dec
mov
mov
fildl
add
nop
lcall
clc
cld
push
xor
push
push
xchg
xchg
pusha
mov
test
arpl
dec
std
roll
call
sub
sbb
out
mov
mov
movsl
enter
sub
popf
adc
mov
or
jno
mov
fsubr
nop
loop
jns
add
pop
pop
outsl
cmp
imul
loope,pn
enter
dec
sarb
mov
pusha
jb
or
inc
subl
pop
adc
add
test
lods
cmp
push
das
ret
testb
mov
xchg
lock
push
jp
shlb
pop
sub
insl
inc
fldt
cmp
inc
jno
dec
xchg
sbb
add
xorb
pop
xchg
jmp
and
add
jle
push
in
fldcw
adc
mov
stos
test
dec
daa
mov
ja
mov
xchg
cmpsl
cmp
inc
jp
xor
xchg
aam
adc
insb
rorb
cmpl
cwtl
or
mov
adc
and
rcrb
and
enter
adc
add
iret
push
cmp
rorl
and
sub
clc
xchg
stc
lahf
xchg
cmp
dec
ror
in
push
and
insb
mov
mov
std
add
daa
mov
xlat
xchg
pop
cld
inc
das
movsb
dec
cmp
push
pop
shll
in
testb
popf
add
jo
cmp
call
inc
jl
hlt
roll
sbb
cwtl
xrelease
mov
push
push
xchg
fists
inc
or
mov
jmp
cmp
pop
or
rorl
cld
cltd
jbe
movsl
mov
inc
stos
pop
xchg
jecxz
movsl
dec
sbb
movsl
and
out
cmp
cmp
div
sti
orl
scas
xor
and
or
mov
sahf
add
fimuls
xlat
outsb
scas
pop
adc
repz
repz
ss
xrelease
loopne
jp
popa
lock
mov
sarl
xlat
fcmovnu
dec
add
or
movsl
and
pop
lods
inc
adc
sub
sub
pusha
mov
rclb
shll
jp
mov
cmp
sbb
ss
sub
stos
sbb
xchg
cli
addb
sahf
add
xor
dec
fwait
ret
ret
dec
mov
dec
test
mov
cmp
cwtl
xor
mov
in
bnd
or
into
aas
pop
mov
adc
mov
inc
inc
cmp
rol
or
xchg
lds
mov
mov
imul
xorb
jecxz
sub
enter
fstp
pushf
sbb
dec
sub
mov
fstps
xor
sbb
in
cmpsb
sti
xchg
jmp
js
ret
sub
or
sbb
jle
sbb
test
ss
mov
aad
in
mov
mov
cmp
sbb
add
or
mov
inc
movhlps
in
jmp
out
mov
filds
add
and
cld
in
loop
lds
call
in
lcall
shll
dec
mov
jae
dec
aad
mov
add
gs
imul
enter
mov
cmp
xor
int3
or
loopne
out
mov
cmc
aad
lret
lds
imul
jae
mov
xor
pusha
or
cmp
outsb
dec
sbb
xor
inc
imul
cmp
cmp
dec
mov
cmc
stc
in
pop
imul
or
subl
repnz
arpl
or
or
std
popa
sub
lods
imul
inc
lret
test
lret
xor
dec
adc
cld
pop
mov
lods
sahf
xor
add
imul
outsl
loope
mull
cwtl
cmp
scas
jno
sti
cli
test
jecxz
lret
inc
out
in
in
sbb
lcall
lret
mov
add
int3
mov
cmp
and
pop
jmp
adc
sti
movsl
push
insl
lahf
pop
lret
push
xchg
test
inc
test
in
frstor
push
dec
ss
mov
pop
sbb
fcoms
push
int
or
jp
xor
jl
sbb
mov
and
shll
mov
das
das
stos
aaa
dec
les
and
pop
sbbb
cmpsl
cli
lea
repnz
push
mov
push
decl
xchg
sub
adc
pop
xchg
and
sbb
dec
inc
les
sarl
mov
jle
add
lret
test
orb
mov
mov
push
pop
cmpsb
push
inc
mov
mov
lcall
dec
mov
outsb
daa
pusha
shl
add
movsb
xchg
add
mov
das
dec
mov
cld
xchg
fidivl
loope
rclb
push
in
push
add
stc
cmpsb
lret
loope
mov
call
loope
test
cmp
add
or
mov
cld
pop
shl
shl
add
dec
sahf
xor
test
mov
sub
sbbb
xchg
sbbb
fsub
out
je
test
hlt
and
mov
sbb
mov
insl
icebp
mov
inc
adcb
sbb
sbb
stos
mov
ss
and
inc
mov
call
xchg
jecxz
cld
fsubrl
or
mov
imul
orl
dec
xor
and
adc
pop
insl
pop
sbbl
sub
cmp
pop
daa
inc
lock
icebp
jbe
cmpsl
test
out
dec
pop
stc
test
jne
and
add
rclb
sbb
xor
xlat
cli
and
pusha
sbb
and
jmp
loop
divb
es
jne
jge
cmp
mov
sbb
ret
xchg
adc
test
mov
add
xor
pop
repnz
scas
es
sbb
xor
pop
xor
movsl
addb
inc
clc
push
adc
push
imul
popf
mov
cmpsb
das
push
xchg
addb
call
mov
dec
scas
in
dec
jecxz
es
xchg
cmp
jecxz
pop
divl
stos
mov
pop
lods
repz
mov
adc
mov
inc
add
lret
in
mov
xchg
and
pop
mov
add
mov
scas
sub
xchg
adc
jnp
pop
mov
cmp
insl
lret
pop
jno
push
ja
jns
mov
xchg
mov
dec
fsubs
and
and
outsl
outsl
mov
in
ljmp
dec
inc
xor
fld
sub
shrl
inc
adc
insb
add
pop
push
ss
fisttpll
cmp
push
xor
data16
jne
test
mov
lea
jne
movsb
call
jle
mov
cld
or
sti
iret
fidivrs
xchg
push
push
out
mov
mov
mov
inc
out
js
inc
popf
mov
ret
mov
test
or
mov
out
and
xchg
xor
call
add
js
lahf
push
xorl
mov
adc
ds
lahf
cmp
pusha
lret
imul
xchg
clc
or
xchg
hlt
js
add
ds
pushf
addr16
mov
fmuls
mov
and
gs
mov
aad
pusha
inc
sbb
sub
dec
xchg
inc
sub
gs
dec
push
mov
xlat
lret
cmp
movsb
pop
push
add
jne
pop
add
ficoml
fcompl
pop
pop
mov
pop
cmp
movsb
mov
and
cmp
popa
push
jno
xor
xchg
mov
add
cli
add
adc
fistpl
mov
sub
mov
mov
aas
das
int
sub
aas
mov
shl
xor
in
pop
test
mov
in
and
xchg
dec
push
adc
pop
pusha
movsw
xchg
adc
ret
lock
xchg
push
jbe
mov
mov
or
out
js
mov
pushf
jae
sahf
jmp
icebp
out
cmp
push
aam
aad
inc
mov
cmp
cs
daa
mov
movsb
pusha
jmp
xchg
pop
xor
insb
out
divl
jbe
inc
push
ret
xor
sbb
dec
pop
loop
cmpsb
ficoms
in
fnstenv
mov
jbe
mov
sub
test
xor
sub
mov
in
xchg
cwtl
aaa
int
sub
cmpsb
cltd
xor
scas
sbb
inc
push
mov
inc
add
mov
add
jecxz
es
das
inc
jnp
jno
lods
mov
xor
lds
mov
cmp
xor
sbb
mov
lods
nop
inc
in
pop
mov
call
xor
sub
fimull
and
rcll
repz
cwtl
fsubrs
fdivrl
adcb
pusha
jnp
dec
int
jl
xor
int
adc
fwait
pop
test
sti
push
popa
jbe
xor
and
xchg
sahf
inc
movsl
inc
xchg
mov
cmp
fistpl
xor
sbb
mov
cmpsl
lds
sub
jle
lds
jns
gs
sbb
into
imul
mov
outsl
ds
jb
cmp
mov
mov
xor
sbb
out
push
mov
outsb
jnp
arpl
stos
adc
xor
cmp
inc
dec
insl
scas
fcom
aas
pop
mov
jae
and
mov
sbb
cmp
out
es
and
jle
push
je
mov
lock
ret
movsb
push
dec
pop
mov
shlb
xchg
lods
fadd
jbe
into
out
loop
sbb
add
aad
sub
mov
push
notl
insb
lahf
sub
outsl
and
lret
fistpll
icebp
std
dec
mov
pop
addr16
pop
or
push
jg
push
sub
sti
sbb
pop
je
xor
std
push
imul
cmpsb
jae
dec
sbb
and
jb
into
loope
jmp
into
cmp
jbe
mov
or
nop
cli
jmp
mov
pusha
xchg
fwait
rolb
add
adc
dec
iret
stos
in
and
pop
aam
das
fisubrl
movsl
iret
insl
arpl
mov
out
jge
in
sbb
mov
xlat
ret
push
inc
repnz
jno
pop
dec
and
movsb
shlb
push
aam
mov
mov
inc
jno
push
lock
jbe
jnp
adc
icebp
jnp
movsl
out
pop
lods
outsl
in
test
cmp
jbe
and
xor
mov
pop
xor
fdivr
pusha
push
inc
mov
mov
mov
stos
mov
subl
push
ja
mov
pop
or
mov
jbe
jb
fwait
push
inc
sarb
aad
sbb
das
ss
pop
jae
into
mov
cmc
cmp
xchg
roll
dec
xchg
dec
jmp
adc
ss
and
ret
pop
nop
imul
decl
adc
fists
call
push
lret
imul
popf
and
nop
jmp
in
jne
xchg
fisubrs
lretw
adc
cltd
in
flds
fwait
incl
jns
orl
or
jp
mov
rolb
ljmp
mov
or
lds
sub
repnz
dec
ret
xchg
arpl
dec
leave
aas
aad
cmpb
sbbl
rorl
lock
call
adc
inc
xchg
pushf
mov
jne
pop
addr16
ja
dec
mov
mov
aas
int
inc
repnz
dec
cmp
sbb
icebp
adc
cld
pusha
mov
mov
imul
pop
inc
adc
mov
inc
aaa
lds
cwtl
push
push
lcall
loope
iret
pop
addr16
inc
shlb
int3
push
mov
mov
fisubrs
les
pop
lods
pop
in
inc
imul
sbb
cmp
fs
xor
pop
clc
loope
and
icebp
mov
sbb
mov
mov
aaa
add
xchg
jp
mov
es
xor
insb
test
or
push
mov
out
cwtl
pop
mov
cmc
cmp
scas
les
fnsave
aam
sub
mov
inc
pop
stos
mov
aad
ret
sbb
sub
pop
mov
and
jbe
mov
les
inc
insb
mov
lods
test
test
pop
sub
xchg
jbe
mov
and
outsb
jbe
movsl
fisubrl
sbbl
xorb
sbb
xchg
mov
xchg
ss
mov
pop
in
xor
ss
mov
mov
pop
pop
jne
push
cli
sti
loopne
jge
iret
movsl
arpl
ja
push
sbb
mov
aad
mov
jo
pop
xchg
sub
loop
call
stos
cs
int3
adc
outsl
imul
or
cmp
movsl
add
out
mov
adc
hlt
js
inc
sub
xchg
pusha
push
sbb
movsb
add
mov
fistps
aaa
inc
lcall
mov
fdivrs
add
ret
xchg
gs
adc
cli
call
jnp
dec
out
or
adc
xchg
lock
mov
mov
cmp
pop
aaa
add
cwtl
popf
pop
push
lods
fdivl
xchg
daa
mov
mov
icebp
xrelease
lods
xor
mov
out
dec
mov
and
fs
xor
mov
pop
lds
mov
and
orb
xor
mov
in
orl
ja
int3
out
les
sub
xor
add
xor
or
stos
xchg
push
jle
fimuls
push
cmp
mov
adc
xor
repnz
mov
inc
jo
xor
xor
cmp
int
loop
dec
and
movsl
pop
xchg
pop
jecxz
add
mov
mov
mov
cmp
pop
pop
cmp
bound
mov
sub
cld
pop
push
pop
mov
hlt
xor
add
add
mov
xchg
arpl
daa
arpl
add
loopne
mov
frstor
and
pop
xchg
inc
ljmp
dec
stc
sbb
adc
or
loope
and
insb
xchg
mov
fcmovbe
xchg
xlat
or
sub
in
mov
out
fcompl
fisubs
lods
arpl
dec
or
dec
push
popa
sbb
insb
in
das
pusha
mov
movsl
and
jl
in
dec
hlt
cld
mov
pop
cmp
dec
xchg
and
sub
addb
ja
stos
push
std
test
sbb
test
xchg
jp
xor
jne
add
pop
ja
pop
inc
add
je
out
call
loopne
push
cld
jecxz
clc
inc
bound
sub
xchg
test
mov
adc
sbb
xor
pop
adc
mov
push
mov
xchg
sarb
and
ret
mov
sub
fbstp
or
std
rclb
and
jno
inc
mov
fdivrs
dec
mov
repz
out
inc
dec
sti
stos
add
jle
mov
pop
adc
add
adc
xchg
push
rcrb
scas
rolb
jb
mov
push
into
xor
into
loop
jb
sahf
sub
adc
mov
pop
repnz
mov
test
push
add
out
pop
cmp
sub
pop
or
xchg
xchg
cmc
mov
jle
adc
and
outsl
mov
ss
jnp
push
pusha
fildl
fnsave
mov
rorb
push
add
test
arpl
mov
push
ret
ds
add
jb
push
add
sub
adc
call
stos
jo
popa
jge
test
add
sahf
sbb
pop
dec
stos
bound
push
push
pop
aas
les
sahf
add
repnz
jo
xchg
test
xor
adc
jp
lret
mov
roll
add
mov
arpl
adc
cwtl
mov
pop
inc
in
and
jl
into
add
pusha
jb
nop
arpl
popf
lock
leave
aam
xor
mov
or
les
xor
icebp
fs
rolb
or
imul
add
cld
inc
or
sbb
popa
adc
test
cmp
jns
rol
ds
lods
lods
scas
jbe
or
imul
into
ljmp
aas
or
or
and
push
push
insl
dec
push
addl
cmp
mov
movsb
jb
inc
pop
mov
jo
lret
pop
sbb
in
fwait
adc
mov
adc
lea
jns
lods
ret
push
fstpt
js
jmp
push
adc
sbb
lock
outsl
jge,pn
mov
test
lock
push
mov
lds
ret
sbb
iret
rolb
sub
in
mov
or
push
js
lret
not
out
loop
loop
mov
mov
cmp
push
jo
ret
dec
out
xor
jns
pop
test
adc
shlb
sub
int3
push
mov
pop
jno
hlt
jl
sbb
xchg
daa
xlat
mov
ret
and
ret
or
xor
movsl
inc
mov
test
mov
adc
iret
pop
divb
add
sbb
cmp
cmp
mov
jecxz
push
ficoms
mov
sbb
mov
and
repz
int
push
push
push
mov
or
and
mov
mov
fmulp
or
int
mov
pop
xor
nop
jecxz
fstps
jle
mov
scas
mov
push
push
stos
sbb
push
mov
push
aaa
insb
cmp
and
mov
xchg
pop
fcmovne
xchg
fdivs
lcall
sbb
aaa
lods
xor
jle
insl
inc
pop
jo
popa
xchg
push
fcmovne
pop
gs
inc
ds
repz
lret
popf
xor
aaa
dec
repz
jo
xor
add
pop
or
dec
push
negl
sti
xchg
sub
or
bound
ffreep
icebp
jmp
or
stos
pop
adc
pop
xchg
push
nop
imul
iret
or
mov
mov
and
push
mov
imul
adc
repnz
imul
sbb
sbbl
push
stos
mov
cmp
adc
and
popf
jb
hlt
cltd
push
mov
or
cmc
pushw
and
sub
mov
add
inc
dec
jns
push
inc
ss
stos
jmp
movsb
lods
mov
dec
inc
loop
aas
pusha
xchg
adc
xlat
dec
or
cli
xchg
shll
push
ss
lcall
insb
xchg
pop
mov
jl
shl
mov
fs
enter
imul
jecxz
jle
call
push
mov
jnp
xchg
and
aad
lods
adc
out
sub
xor
shrl
cmp
mov
cmc
or
sbb
decb
cmp
adcl
test
in
push
nop
push
out
inc
mov
jecxz
ja
jle
les
xchg
out
jl
sub
xor
data16
mov
ja
mov
imul
xchg
dec
jno
cmp
or
mov
sbb
push
fcomi
pop
outsl
int3
pop
repnz
xchg
daa
cmpb
ja
testb
pop
sbb
leave
das
xor
test
xchg
into
push
in
cltd
lcall
push
push
cli
and
aaa
je
adc
sub
scas
pop
ljmp
mov
je
xor
mov
and
dec
out
add
js
mov
xor
outsl
int3
sub
shll
lcall
jo
stos
dec
jo
jecxz
das
push
lock
fistpl
ret
aas
adcl
xor
bound
fistps
int
ret
xchg
mov
outsb
fistpl
es
lods
push
xchg
xor
or
pop
stos
setno
ret
rcll
xchg
repnz
cmp
aaa
or
mov
lods
mov
and
cmp
lcall
pop
adc
jp
sub
push
dec
orb
pop
mov
cmp
sti
jbe
push
cmp
xchg
cli
das
mov
shrl
jns
frstor
sub
mov
xchg
add
aad
fdivs
pop
jnp
adc
inc
cmp
aad
mov
pop
iret
fsts
mov
stc
shll
repz
aam
sbb
hlt
lret
push
dec
gs
adc
loop
push
jo
mov
pop
stos
jp
popa
push
inc
lock
push
aad
push
lcall
es
rcr
outsl
int3
jns
add
cli
repz
loopne
cmpsb
fidivl
add
orb
test
subb
jecxz
push
out
dec
xor
addb
cmp
das
jnp
mov
int
movsb
aaa
std
lret
in
xor
dec
dec
setle
or
push
outsb
les
in
aam
xorb
std
sub
push
lar
das
aam
sbb
notl
rorb
pop
roll
into
mov
sub
pusha
fucomi
cmp
movsl
out
jne
jo
cmp
sub
mov
dec
int
pop
das
cmp
popl
xchg
push
in
mov
dec
dec
mov
lret
inc
xchg
inc
cmpsb
xor
ds
lock
test
jb
mov
cmp
jp
ljmp
jo
mov
pushf
xchg
movsb
pop
lds
pop
sti
dec
es
xor
pop
out
push
fisubl
add
mull
and
insl
mov
insb
aas
loope
xlat
in
out
sti
or
push
lea
add
shll
adc
roll
in
cmc
lcall
sbb
xchg
ljmp
mov
sub
push
jmp
mov
and
jle
push
lcall
out
mov
daa
mov
sub
loopne
inc
fisubs
mov
mov
cltd
sbb
and
shl
out
push
daa
ror
arpl
adc
in
dec
mov
cmp
cmp
fldl
or
int3
adc
insb
loop
fidivrl
sbb
clc
adc
or
shll
int3
cmpsl
sub
into
repnz
icebp
push
fnstcw
inc
cwtl
cld
in
ficomps
je
dec
cmp
pop
mov
shr
inc
negl
enter
pop
jg
fidivs
jb
pop
sbb
cmovne
mov
or
insl
les
stos
jl
cli
and
sbb
mul
ja
sub
mov
jne
rorb
inc
lea
add
cmp
movsb
jne
ret
in
andl
xchg
cmp
mov
xor
lea
mov
jge
sub
push
insb
loopne
inc
jl
xor
loopne
sub
mov
pop
shll
std
xchg
icebp
xor
dec
arpl
sub
xchg
dec
and
mov
sbb
sbb
aaa
push
inc
push
mov
ret
xor
mov
aam
jge
cmpsl
mov
lods
pop
add
insb
push
loope
mov
lret
jnp
mov
and
data16
pop
aad
and
aam
dec
cmp
repz
out
nop
fnclex
adcl
sub
imul
das
cltd
pushl
psubw
inc
adc
mov
sub
ljmp
inc
enter
pusha
lcall
inc
data16
jo
addb
xchg
ret
ljmp
sub
xchg
jno
ret
enter
sbb
push
adc
fs
and
mov
stos
pushf
fsubrl
lods
xlat
cmpsl
mov
dec
push
not
xchg
cmp
cmp
test
popa
call
sub
lds
add
iret
push
xor
pop
in
lods
pop
jge
fcmovbe
leave
int3
cs
setle
cmp
pop
mov
xchg
xor
fidivrs
call
aas
dec
and
add
das
dec
cmpsb
adc
test
pop
pop
roll
push
sub
idivb
jp
or
mov
lcall
iret
out
push
pop
and
pop
xlat
inc
imul
jle
es
add
imul
adc
inc
dec
push
stos
out
and
enter
adc
shrb
ret
pop
sti
rcll
addr16
loop
inc
add
xor
loop
inc
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
cmc
hlt
xlat
popa
dec
lea
jmp
bound
ss
xchg
mov
int3
bound
adc
pop
xor
sbb
xchg
inc
xor
sub
in
stos
dec
fbld
jns
mov
jl
xchg
xchg
ljmp
aad
loope
pop
adcl
and
pop
mov
cli
pop
div
dec
push
pusha
pop
xchg
popa
stos
cmp
das
mov
ljmp
cmp
popf
cmp
lret
inc
cmovbe
fdivl
lods
adc
mov
mov
mov
hlt
cmp
int
daa
lret
push
mov
inc
pop
movsb
imul
sbb
and
in
imul
aaa
loope
pop
std
out
hlt
divb
shl
leave
ds
sub
and
pop
inc
std
jecxz
mov
adc
jmp
jecxz
leave
dec
dec
shrb
and
test
imul
sub
add
clc
mov
or
sbb
xchg
outsb
shr
bound
mov
icebp
fdivs
cwtl
jl
into
xchg
push
or
cli
andb
push
sbb
mov
je
das
pop
jns
inc
insb
arpl
xor
jae
mul
mov
sub
cltd
mov
add
mov
xlat
fiaddl
push
or
mov
xchg
mov
rcr
fs
mov
es
xchg
out
mov
jae
cmp
enter
dec
sbb
xor
push
push
lea
imul
mov
xchg
sub
jp
mov
stos
push
shll
adc
xchg
iret
sahf
adc
pop
fbld
xor
in
leave
cmpl
in
repnz
rorb
cmp
test
sbb
fadd
loop
aam
adc
jb
cmp
repnz
lahf
inc
mov
mov
and
xchg
insl
imul
jg
sbb
rorb
push
xor
sti
and
xchg
mov
xlat
sub
add
sbb
ja
add
js
popf
aaa
pop
test
data16
aad
pop
add
and
cli
add
push
inc
in
and
cld
push
cmp
cmc
or
jbe
dec
jecxz
mov
sub
jmp
rorb
pop
pop
mov
dec
jo
cmp
les
push
adc
xchg
cli
shll
aas
sub
sar
into
insb
or
popa
ljmp
rcll
loop
or
idivb
pop
aad
fidivrl
shlb
int3
loop
pop
aaa
pop
sbb
mov
mov
ss
cmp
lock
or
setp
repz
adcl
jb
cmc
in
jecxz
daa
cltd
mov
or
sbb
std
xchg
mov
inc
cwtl
or
outsb
outsl
dec
sub
inc
test
movsl
and
sub
dec
xorl
ret
jns
outsb
mov
mov
rcll
in
jg
pusha
lcall
std
insb
dec
adc
fildll
pop
out
sub
lcall
cwtl
aad
dec
or
sbb
sub
bound
test
enter
sarb
rcll
push
pop
cmp
mov
jmp
subps
fsubr
push
adc
push
pop
incb
push
jmp
cmp
dec
mov
dec
jl
mov
enter
sub
repz
jmp
mov
popf
hlt
out
push
dec
jge
sub
leave
fwait
loope
sub
cmpsb
mov
pop
cltd
fwait
iret
xlat
push
inc
jecxz,pt
jns
fcmovb
test
es
add
ja
decl
movsl
in
push
jno
fidivrl
lods
mov
cmp
xchg
xchg
or
adc
cmp
inc
les
mov
push
xor
pop
mov
pop
cmp
mov
movsl
inc
lahf
cmp
xor
inc
mov
jns
adc
out
clc
adc
cmp
jecxz
sub
frstor
dec
xchg
xor
mov
pop
stos
dec
in
fidivs
cmp
or
fs
xchg
adc
push
js
sub
fwait
bnd
test
cmp
hlt
mov
lahf
daa
rolb
jns
lods
jne
cld
in
ljmp
inc
inc
push
mov
push
push
adc
notb
pop
scas
mov
push
jg
inc
fwait
mov
sub
gs
inc
sub
stos
ja
push
out
aas
push
xchg
fbld
jl
push
cmp
hlt
pop
fstpt
iret
in
jle
js,pt
dec
mov
out
test
push
push
testb
or
mov
scas
xchg
add
daa
jl
mov
sbb
mov
jno
jle
push
repnz
in
jbe
iret
or
in
push
sbb
ljmp
test
mov
add
xchg
mov
lods
or
sub
add
cs
mov
mov
mov
jno
call
xchg
int3
inc
xchg
push
push
adc
adcb
inc
add
inc
pushf
or
sbb
inc
and
mov
loopne
lret
pusha
imul
test
orb
inc
sarb
add
pop
hlt
sbb
add
jbe
xchg
scas
cltd
push
pop
out
cld
cmp
nop
or
aaa
jnp
insb
jecxz
pop
dec
lods
nop
xchg
cmp
nop
xchg
into
dec
rclb
sub
stc
and
mov
pop
clc
loope
pusha
pop
push
movsb
mov
mov
bnd
leave
mov
xchg
pushf
ljmp
pop
or
ljmp
cmp
in
icebp
push
outsb
dec
mov
iret
pop
push
adc
jg
lahf
mov
call
hlt
pushf
adcl
inc
xchg
sbbb
push
stos
jo
lahf
mov
mov
and
mov
stos
sbb
fstps
push
jb
inc
js
ds
enter
cmp
daa
inc
or
and
xchg
mov
out
dec
iret
jmp
bound
sub
and
or
ljmp
mov
sub
xor
pusha
mov
and
outsl
pusha
sbb
mov
add
mov
inc
aas
mov
lea
push
mov
mov
and
iret
fwait
insb
xor
scas
dec
jb
arpl
ja
mov
pusha
pushf
sbb
test
mov
push
test
jno
orb
inc
ret
xchg
pusha
adc
dec
lahf
xchg
test
test
clc
push
test
jns
push
movsb
out
adc
jecxz
cmpsb
movsl
sar
in
xchg
mov
aas
and
rolb
gs
push
xor
test
cmp
add
pop
inc
xchg
lds
sub
xchg
rcrb
and
lock
jne
ret
ljmp
cltd
test
cld
insl
fdivrs
int
xchg
mov
aaa
inc
test
inc
lods
mov
xchg
sahf
into
pop
adc
inc
fcmovbe
lods
das
cmpsl
shr
shr
mov
imul
xor
adc
lahf
pop
aaa
je
loop
pop
sub
jmp
fisubl
and
icebp
xchg
sub
or
sub
xchg
popf
jnp
out
sbb
xor
cli
mov
jae,pt
sbb
mov
xor
es
bound
pop
test
push
ret
aam
dec
mov
mov
lea
out
std
adc
out
mov
inc
cwtl
cmp
cmp
flds
and
into
es
shlb
ret
int3
in
ds
insl
sar
jbe
das
xchg
sub
sahf
out
sub
dec
jge
in
or
jp
cld
adc
inc
push
dec
dec
aad
rorb
mov
sahf
pop
int
mov
xor
mov
mov
je
orl
aaa
mov
mov
mov
sub
cli
outsb
mov
sub
lods
in
arpl
sub
jmp
lret
nop
rcrl
scas
fsubrp
shrd
stc
imul
icebp
ret
fcmovne
mov
fdivs
xchg
pushf
jno
dec
xor
lcall
nop
mov
in
mov
test
mov
and
jl
mov
xor
push
push
or
jo
mov
adcb
mov
aad
xor
iret
mov
jns
xor
insl
mov
mov
int
shrl
into
jns
pop
into
jb
js
cs
orl
icebp
mov
cltd
scas
inc
add
inc
jbe
add
fcmovb
pop
les
loop
in
and
mov
loope
shlb
outsb
mov
scas
insb
leave
popf
iret
test
xor
fbld
mov
xchg
scas
stc
das
into
movsl
jmp
repnz
pop
or
sbb
sbb
xchg
sahf
rcr
mov
std
cld
add
dec
in
mov
add
loop
jb
out
pop
jecxz
jge
ja
insb
lock
fwait
je
stc
jbe
mov
push
xchg
inc
je,pn
mov
pushl
xor
shl
dec
cmp
mov
push
xchg
mov
xor
add
and
xchg
dec
ljmp
std
xchg
adc
rol
aam
int
jbe
lahf
in
xchg
mov
lods
aam
sub
fucom
decb
mov
addb
pop
aaa
mov
mov
call
sahf
stos
rcrl
aaa
lods
aad
xor
mov
xlat
xor
and
jle
movsl
lahf
pushf
outsb
jbe
xchg
shlb
mov
test
mov
mov
testb
sub
cmpsb
aaa
or
adc
je
loope
test
icebp
es
xchg
mov
lock
ja
clc
mov
xchg
pop
jp
pop
leave
xchg
fdivs
add
movsl
pop
int3
out
cwtl
rcl
sbb
pop
xor
inc
ja
mov
push
adc
ret
adc
push
inc
mov
xor
aas
pushf
adc
push
sbb
rcll
inc
pop
push
mov
xor
gs
mov
or
dec
fmull
imul
popf
push
icebp
xor
fdivrs
jecxz
xor
or
leave
mov
sub
inc
lds
fisubs
pusha
jb
ss
ja
or
out
pop
pop
push
inc
dec
mov
push
inc
mov
outsb
adc
popa
jl
mov
repz
push
adc
xchg
mov
sarb
cmpsb
mov
in
ret
inc
mov
mov
adc
inc
jmp
push
mov
xchg
fimuls
andl
dec
pop
icebp
cmp
mov
add
roll
and
fiadds
adc
std
and
sbb
jp
push
push
pop
movsb
cmpsl
cmp
jae
mov
mov
dec
int3
or
mov
and
and
add
jmp
or
mov
pop
jne
cmp
lahf
jbe
pop
ljmp
pop
push
or
lea
lret
outsl
aaa
sbb
cli
or
gs
dec
shrb
mov
aam
xchg
ficoml
js
push
mov
hlt
mov
jo
jne
das
sbb
inc
aaa
pop
sub
ds
sahf
aam
sub
in
or
jmp
pop
sub
sub
xchg
mov
iret
lods
test
in
xchg
or
xchg
inc
mov
fcmovb
scas
popa
sub
mov
pusha
xlat
pop
stos
roll
lods
sub
rolb
les
mov
lcall
mov
adc
and
and
icebp
sbb
cmp
and
outsl
push
jl
pop
lods
and
xchg
adc
xchg
popf
pop
js
sbb
cwtl
sub
sti
fwait
cmpsb
xchg
sbb
loop
je
imulb
mov
cmp
xchg
push
mov
scas
imul
dec
out
sbb
xchg
in
jo
inc
div
pusha
mov
movsl
sbb
out
cmpsb
xchg
int
les
aam
and
rcrb
icebp
sub
in
cmpsl
jb
fnstsw
cmp
pop
fmul
imul
leave
xchg
dec
in
push
inc
sub
or
pop
inc
aad
sarl
dec
mov
fistpll
sbb
mov
xchg
lds
mov
or
xor
inc
das
push
jb
movsl
rcl
in
das
push
lahf
and
lcall
inc
pop
or
or
mov
push
add
out
insb
pop
cwtl
adc
dec
psllw
pop
or
sbb
mov
pop
xor
and
jnp
cmpl
cmpsl
lods
ljmp
lret
push
push
rcll
dec
addr16
imul
ja,pt
mov
pushf
push
adc
inc
mov
aam
add
sbb
hlt
clc
ret
sub
xchg
cmp
adc
test
inc
fs
and
sbb
inc
cltd
pop
dec
cli
test
addr16
sub
sub
roll
cmp
pushf
add
or
js
inc
sbb
cli
roll
sbb
popf
xchg
pop
cmp
loope
lods
push
cmp
mov
push
loope
and
jmp
pop
and
mov
mov
cld
lods
xor
push
jmp
push
sbb
clc
call
or
sub
cmp
cmp
add
cmp
pushf
sub
mov
add
dec
cli
mov
lret
or
pop
popf
in
pusha
push
mov
pop
cmp
push
call
dec
dec
sub
lahf
mov
jbe
mov
rol
mov
sbb
popa
es
adc
pop
fstpl
push
push
and
jnp
mov
scas
push
xchg
dec
ja
or
or
hlt
mov
ret
jg
arpl
xchg
out
jg
pop
nop
mov
inc
sahf
jne
or
sbb
sbb
mov
and
fiaddl
xchg
les
inc
shr
sbb
clc
enter
xor
scas
pop
dec
mov
in
xchg
adc
filds
mov
cs
scas
int
sahf
mov
call
sbb
nop
pusha
mov
int3
cli
jb
add
or
shr
fwait
dec
fidivs
inc
repnz
push
test
pop
lds
jbe
push
stc
pusha
es
mov
mov
cmpsb
sbb
inc
sbb
mov
mov
and
lcall
pop
lcall
jle
xor
rorl
cmp
add
dec
loope
mov
xchg
lock
shrl
mov
stc
shr
xchg
bound
shll
lahf
mov
sbb
sahf
push
mov
cmp
arpl
adc
push
jg
call
xlat
lods
out
push
mov
cmp
nop
mov
shrl
lds
xchg
shlb
xor
pop
pop
cmc
mov
enter
sbb
add
cld
xor
sub
jae
sarl
repz
mov
ret
lcall
stc
adc
test
repz
mov
fimuls
mov
jmp
lock
in
loopne
xchg
sub
inc
push
addl
dec
stc
nop
in
xor
push
xchg
fdivs
jl
test
test
xlat
adc
mov
imul
adc
xchg
out
stos
movsl
mov
push
lods
lret
jle
sub
pop
xor
adc
in
xor
fisttpll
adc
inc
or
xor
and
test
hlt
dec
mov
sbbb
push
cwtl
std
filds
popa
or
jmp
xchg
jns
push
hlt
fimull
add
es
out
push
pusha
iret
and
sub
or
pushf
pop
test
or
add
scas
ja
xchg
dec
push
dec
pushw
rorb
cmp
sub
mov
dec
clc
xchg
sub
lahf
mov
aad
or
pop
xchg
mov
in
sbb
pop
fs
scas
aam
cmp
dec
adc
pop
mov
sbb
sbb
adc
pop
lret
add
call
int3
dec
lock
jle
mov
inc
testb
test
ja
lret
cmp
sub
lret
lcall
sbb
cmp
ficoml
popa
out
push
push
inc
ljmp
add
mov
dec
and
push
mov
movsl
ljmp
push
sbb
insl
lods
xchg
and
jmp
stos
repnz
pop
test
testb
inc
xor
into
xor
jae
in
data16
iret
push
mov
add
sub
mov
cmp
scas
outsl
pusha
pushf
jnp
ret
loopne
sub
mov
aas
testl
aam
lahf
jb
aam
mov
xor
jmp
jbe
lret
clc
movsl
xchg
leave
and
sub
das
inc
test
mov
jae
in
push
jne
cmp
arpl
xor
sub
jmp
jmp
bnd
es
xchg
pop
arpl
fwait
push
pop
dec
jle
or
mov
mov
cmp
cmp
rolb
test
sub
loop
movsb
jno
cli
and
out
popa
mov
push
mov
mov
mov
orb
pusha
pop
mov
dec
pop
call
mov
cmp
shrl
lods
push
mov
mov
andb
and
adc
xchg
das
xor
push
aas
fsubs
movsl
pop
into
fsubl
push
dec
icebp
movsl
lahf
inc
push
rcl
jl
sbb
sub
fmull
cmpsb
xchg
sub
loope
mov
pop
sub
lret
mov
jge
out
jg
enter
sbb
scas
mov
mov
jmp
jg
adc
leave
sbb
into
add
test
loope
lret
jo
mov
pop
jb
out
sbb
sbb
adcb
xchg
mov
insb
cld
pop
mov
lds
in
pop
hlt
xor
pushf
xchg
push
push
fs
stc
mov
inc
and
lahf
or
push
loopne
fwait
mov
sbb
in
sarb
fiadds
faddl
and
mov
in
dec
clc
or
lods
rcr
adc
outsb
mov
push
das
mov
sbb
push
push
les
and
adc
pop
nop
movsl
ss
sub
dec
iret
stos
xor
push
clc
jno
mov
dec
ret
fcompl
dec
in
nop
pop
or
aaa
popf
or
dec
lods
xchg
fcoms
or
out
cltd
xor
add
hlt
aam
sti
push
test
inc
pmaxsw
shll
loopne
push
hlt
jge
xchg
add
dec
fcomps
pushf
or
add
cmp
out
cmpsb
mov
push
stos
std
push
ss
cli
fmull
push
or
dec
inc
leave
mov
push
je
std
stos
cmpsb
inc
adc
adcl
in
mov
clc
and
mov
or
xchg
add
push
int3
sbb
lret
lret
mov
push
push
dec
jno
adc
lcall
movsl
movsl
fwait
mov
jecxz
lret
dec
ss
std
test
movsl
cmp
xor
xor
insb
push
and
jns
iret
rclb
mov
adc
insl
pop
xchg
cltd
fmul
mov
in
movsb
shl
movsl
xor
insl
icebp
mov
xor
lret
sbbl
sub
aas
mov
and
pop
xchg
pop
and
lods
mov
push
fdivl
sti
aam
or
xor
or
pop
inc
test
push
cmpb
push
cmp
popf
xor
in
imul
ret
fldt
adc
inc
cld
push
pop
sti
popa
dec
ficoms
pop
xor
xchg
pop
jmp
add
shlb
lret
dec
mov
lea
mov
mov
nop
xchg
insb
xchg
stos
jle
into
mov
jl
sub
pushf
mov
mov
ret
mov
sbb
mov
inc
rorl
rcrl
enter
cmp
cltd
test
aad
iretw
xor
daa
pop
outsl
shll
cs
aas
jae
lret
sahf
dec
xor
loope
xor
adc
pop
sti
cmc
xor
fcomip
out
popf
loop
adc
jno
add
notb
ret
inc
add
sub
and
sub
bound
mov
mov
aaa
insb
adc
js
xchg
jmp
popa
mov
out
movsl
mov
xor
inc
into
out
or
mov
jl
bound
xchg
add
jmp
cmp
cmp
add
mov
or
cltd
cmc
jne
mov
loop,pt
scas
loope
lea
pop
push
mov
popl
ja
sub
cli
divl
cmp
and
or
aas
cmp
insl
loope
push
loope
xchg
jo
out
clc
lea
repnz
lods
jo
adc
cmp
test
insl
dec
adc
test
mov
ret
in
faddl
lret
adc
push
andb
mov
mov
lods
mov
dec
clc
push
pop
leave
movsl
cmc
scas
in
mov
pop
pop
mov
ljmp
andb
adc
jae
pop
or
fs
push
push
lcall
push
mov
test
push
xorb
sbb
fs
push
push
test
and
jno
lcall
pop
xor
pop
jl
mov
sub
jnp
fists
mov
push
aas
mov
repz
pop
insl
das
sub
test
and
cmp
sti
scas
push
int3
test
pop
mov
sahf
and
subb
mov
pop
adc
repnz
cmpsl
mov
nop
mov
add
dec
mov
dec
shlb
mov
jle
push
cmp
sub
cmp
xchg
lds
lds
in
imul
enter
sub
popa
pop
and
unpckhps
xor
lds
nop
sahf
sti
mov
cmpsb
ret
cmpsl
aaa
dec
cmpsb
lods
push
mov
movsb
adcb
mov
repz
lods
jl
and
xchg
jp
mov
fbld
cmpb
xchg
xor
sub
insb
xor
inc
mov
mov
out
pusha
xchg
inc
jae
dec
scas
orl
ror
jl
inc
arpl
dec
push
ds
std
pop
inc
ss
pop
sub
dec
mov
adcl
mov
mov
mov
std
sub
add
flds
out
fsts
xchg
mov
push
push
insl
faddl
fildll
pop
mov
in
or
ja
fwait
add
outsb
cmpsb
xchg
out
xchg
push
das
dec
imul
aaa
lret
ss
lret
repz
lods
xchg
hlt
mov
ret
pop
push
into
cmp
pop
test
and
mov
popa
enter
nop
add
mov
jns
cmp
test
ret
outsb
lret
push
xor
and
sub
push
loop
lret
jbe
push
jl
xor
mov
int3
jo
add
subl
push
dec
or
rorb
enter
or
dec
test
sub
stos
ret
adc
sub
mov
pop
sti
inc
lods
jl
jne
das
push
ret
stos
xor
add
and
mov
sbbb
lret
lahf
inc
es
scas
lea
and
sbb
jae
ljmp
jb
jae
pop
cmp
test
sbb
inc
mov
and
xchg
sbb
into
jg
mov
push
cmp
fsubr
and
icebp
lds
aad
push
lods
pop
enter
pop
adcb
pop
push
push
testb
cltd
imul
sbb
psrlw
mov
cmc
pop
mov
shll
sbb
fnstcw
insl
mov
adc
test
popf
sti
aad
cmp
adc
cmp
adc
popf
test
pushf
mov
sbb
pop
dec
push
in
add
push
mov
sbb
push
mov
jnp
mov
mov
stos
lret
mov
mov
lea
cmpsb
clc
leave
repnz
cmpsb
bound
out
inc
xchg
outsl
ds
jl
xchg
movsb
popf
lret
bnd
inc
and
mov
movsb
xchg
adc
cmp
ljmp
push
mov
loopne
mov
ja
inc
adc
pop
rcrb
or
andb
aam
out
nop
pop
mov
les
das
add
and
lds
add
inc
fdivp
popa
jo
jp
inc
ret
adc
push
xchg
push
aaa
call
xor
in
mov
dec
std
loop
mov
xchg
cs
jbe
pop
daa
mov
xchg
lods
mov
sbb
roll
ret
fildll
fwait
stos
orl
inc
xor
xchg
xchg
hlt
fisttpl
dec
dec
or
mov
arpl
xor
nop
mov
addb
mov
pop
mov
insb
pop
iret
mov
cmp
icebp
jmp
ds
cmp
out
clc
cli
jp
pop
cmpsl
jmp
mov
xchg
out
sub
call
repnz
push
adc
mov
cwtl
jnp
icebp
jb
or
testb
sbb
mov
cmc
aad
lea
cmpl
mov
repnz
dec
jns
and
cld
test
mov
push
icebp
push
insb
sub
xchg
fstps
jae
test
int
jb
in
iret
xchg
movsb
xchg
mov
dec
fisttpl
push
loopne
adc
inc
int
mov
ss
popf
aad
div
test
jle
outsl
or
xor
mov
pop
stos
xchg
orl
in
loop
dec
pushf
stos
movsl
xchg
fs
sbb
ljmp
ret
add
lods
fidivrs
and
orps
xchg
popf
lahf
and
cltd
daa
mov
xor
mov
lret
adc
or
dec
fmull
nop
movsb
xchg
or
aam
sub
inc
mov
ficoml
jp
pop
jo
push
loop
test
add
aas
cmp
out
repnz
sbb
fstps
pop
out
test
dec
leave
mov
bound
sahf
aaa
jecxz
and
adc
sub
addl
lods
add
fsubrl
bound
aaa
ret
jcxz
mov
mov
call
or
lret
movsb
aam
neg
out
lahf
pushf
and
pop
xchg
andl
xor
loope
mov
pop
pop
xor
cmpsl
xchg
cli
out
mov
sbb
dec
pusha
insl
arpl
jae
adc
dec
pop
leave
add
jmp
pop
mov
ffree
xor
mov
lret
push
test
out
aam
or
mov
clc
sahf
mov
adc
sub
xor
push
in
lret
rorl
add
cmp
xchg
push
ja
shrb
les
lds
mov
or
xor
xchg
fsubrl
and
sub
or
mov
add
out
xorl
pop
lret
ljmp
adc
jnp
mov
jl
lea
clc
inc
xchg
pop
lods
xor
push
daa
je
std
pop
fdivl
bound
pop
xor
out
mov
jp
arpl
in
rorb
add
adcl
lods
scas
inc
push
pop
xor
cmc
add
sbb
sbbl
xchg
scas
adc
shll
gs
add
sub
sub
fs
jae
mov
out
aaa
sahf
imul
sbb
xor
shlb
xor
mov
cltd
lahf
int
das
push
mov
scas
and
repnz
lods
gs
push
lahf
cmpsb
pop
jle
inc
outsb
dec
pop
mov
out
jmp
mov
sbb
aam
movsl
movsl
mov
stos
cwtl
clc
test
ljmp
imul
xor
sbb
orl
dec
enter
test
jecxz
xchg
add
popl
imul
inc
dec
ja
jne
inc
imul
decl
cmp
sti
inc
aas
inc
loop
cwtl
and
in
cmp
enter
inc
push
int3
xor
cmpsl
cli
stc
mov
in
aad
insl
pop
sti
in
ret
imul
jecxz
aaa
jle
fwait
cmp
sbb
lea
dec
int
nop
inc
sbb
dec
dec
cmc
pop
subl
and
mov
fldenv
std
jae
or
xchg
xchg
data16
movsb
adc
or
inc
inc
jp
mov
out
sarb
outsb
mov
iret
push
out
jmp
sti
jp
pop
testl
jno
mov
jae
cltd
out
sti
aam
clc
sbb
js
das
jne
call
es
sar
pop
push
fwait
lahf
mull
icebp
push
or
rorb
mov
gs
xchg
pop
jne
and
mov
mov
adc
in
aas
inc
repz
xchg
daa
rclb
xor
inc
cwtl
pop
inc
nop
push
inc
cmp
add
sub
mov
test
sub
pop
jmp
cld
xchg
push
call
bnd
rclb
mov
addr16
notl
sub
pop
mov
xchg
scas
fstps
xchg
ret
adc
iret
popa
addl
test
sbb
mov
pop
pop
sbb
stos
mov
jns
mov
sbb
mov
mov
outsl
sti
stc
clc
jl
div
and
xchg
add
jl
addb
fucomi
bound
mov
leave
fldcw
mov
lret
cmc
movsb
push
push
mov
pop
adc
fbstp
adc
ss
jo
push
add
xchg
inc
enter
cmpsl
mov
mov
adc
sbbl
push
bound
gs
pop
hlt
out
mov
stos
and
dec
cmp
xchg
mov
nop
adc
jo
stc
mov
push
orl
out
inc
and
decl
mov
mov
gs
jge
js
cmpl
add
movsb
fnstenv
mov
in
popa
push
sbb
push
push
lods
jns
icebp
mov
and
jnp
arpl
data16
aaa
js
cld
dec
lret
add
icebp
mov
pop
push
mov
lods
inc
xchg
outsl
dec
shrb
add
mov
std
call
adc
mov
pop
mov
add
xchg
fidivrs
adc
repnz
dec
shll
cs
add
push
mov
push
ficompl
jae
sub
shr
lcall
arpl
sub
test
mov
repz
cld
sub
or
sub
hlt
xor
push
lods
es
ljmp
sti
ss
cmpl
push
mov
popf
imul
popa
sub
mov
or
dec
push
mov
out
imul
push
xor
popl
sub
std
dec
pushl
cmp
movsb
mov
std
push
pop
fs
xorl
das
lret
add
cwtl
or
outsb
mov
imul
popa
push
mov
aam
adc
mov
dec
sbb
cltd
sub
ss
dec
inc
test
in
dec
pcmpeqb
fldl
push
add
sub
pusha
mov
jae
call
bound
mov
fwait
mov
scas
shl
scas
dec
pop
imul
insb
fstps
popa
xor
mov
jp
movsb
pop
mov
jp
push
jg
lahf
jbe
mov
rclb
xchg
mov
repnz
cmp
ljmp
sbb
fnstenv
lds
jg
xor
xchg
dec
inc
lcall
sbbb
sub
mov
lcall
cli
imul
xlat
inc
adc
mov
dec
shll
btc
and
mov
xor
cmp
repz
or
or
mov
jle
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
xchg
adc
push
jmp
bound
imull
add
imul
aad
in
mov
insb
scas
in
inc
cmp
mov
fisubrs
jecxz
fsubl
inc
loope
stc
xor
adc
cmpsb
mov
xlat
jmp
and
mov
bound
imul
sarb
xchg
or
lret
nop
sbb
nop
loopne
gs
jbe
cltd
or
xchg
movsb
lret
iret
or
movsl
mov
xchg
pop
xlat
xchg
push
or
sbb
mov
dec
lea
fldenv
pushl
pushf
es
out
jbe
add
and
dec
ret
jge
loopne
fdivl
mov
xor
xor
or
xlat
xor
lds
xor
and
inc
mov
jmp
sbb
enter
inc
dec
fists
lock
fdivrl
xchg
fdivs
scas
xchg
inc
mov
lcall
dec
movsb
lods
mov
sbb
mov
fstps
inc
or
xchg
adcb
mov
cltd
in
pop
pushf
arpl
scas
lret
sbb
pop
xchg
push
scas
loope
and
inc
lods
sub
adc
pop
repnz
push
sbb
in
enter
movsl
ret
or
pushf
ljmp
and
mov
fldl
ret
outsb
pusha
mov
adc
mov
stc
pop
test
sub
mov
dec
push
pusha
adc
and
ret
add
stos
xor
mov
mov
mov
xor
and
int
push
rcrb
mov
scas
bound
dec
jg
jl
jg
mov
cli
and
mov
imul
mov
cld
gs
push
lods
pop
adc
aam
popa
mov
mov
repnz
jae
es
mov
mov
sub
jge
and
nop
sbb
popf
cmpl
ljmp
jle
pop
imul
pop
jg
sti
or
into
mov
mov
inc
sbb
inc
push
sbb
bound
mov
jo
orl
inc
mov
jecxz
mov
mov
insb
lcall
adc
push
mov
xchg
clc
test
mov
lahf
mov
jae
icebp
das
test
addr16
cmp
lret
pusha
stc
arpl
jl
mov
push
mov
cld
je
mov
cmp
or
mov
sahf
int3
int
nop
mov
lock
inc
and
out
cmp
xorb
subb
pusha
sub
or
mov
movsb
xchg
out
xchg
ja
adc
cmp
xchg
das
inc
mov
scas
pushf
and
scas
pop
js
sub
repnz
inc
insb
sbb
jl
movsb
fsubrl
jl
jecxz
inc
int
lcall
add
sbb
pushf
adc
inc
adc
fprem1
mov
xor
mov
ds
jmp
fldt
lret
sbb
push
inc
push
mov
loope
jo
xchg
xchg
push
fsubrs
jmp
jp
or
aas
mov
std
repz
imul
cmp
mov
mov
jl
ljmp
mov
shrb
daa
outsb
fstpl
imul
shrl
aam
pushf
mov
shll
sbb
icebp
popa
insb
in
loope
pop
movsb
scas
xor
inc
push
decb
mov
xor
xor
add
mov
jns
repnz
mov
mov
jl
mov
and
jge
sub
sarl
jo
rorl
stos
xchg
mov
out
call
sbb
ja
ret
xor
in
ljmp
adc
sub
dec
jl
mov
stos
movsl
sahf
insb
fmull
or
lods
jge
mov
mov
sub
filds
andl
in
adc
clc
rcrl
jp
popf
cmp
sbb
inc
pusha
sub
and
pushf
inc
dec
cli
dec
stc
mov
or
clc
lea
adc
aas
stc
insl
scas
sarl
mov
inc
push
mov
gs
or
or
and
sbb
outsb
test
push
add
leave
push
dec
ret
outsb
jns
jecxz
pop
or
cmp
mov
pop
cmp
add
inc
sbb
dec
push
sub
pop
or
popf
mov
cmp
xchg
jne
fwait
adcl
aad
int3
pop
loope
addl
sbb
enter
push
push
cld
lcallw
pop
fbstp
mov
mov
imul
movsl
aam
fstl
and
aas
insl
scas
insl
mov
fldl
xlat
pop
sbb
pop
jnp,pn
cmp
cmp
dec
adc
mov
jae
fwait
pushf
rorl
lret
lods
aad
aas
adc
xor
cmp
decb
je
mov
mov
fdivp
jge
inc
push
jmp
push
cmpsl
aaa
inc
je
outsb
mov
xchg
inc
mov
mov
and
mov
lcall
movsl
pop
mov
loopne
xchg
cmp
fadds
sbb
mov
mov
jl
mov
xor
mov
bswap
pop
dec
cmp
xor
or
xor
movsl
mov
sarl
call
clc
and
jae
imul
pop
std
xchg
mov
hlt
push
rolb
mov
out
mov
orl
add
push
andl
or
jae
jg
jnp
test
jne
push
adc
stos
outsb
loope
mov
aas
iret
ret
stos
popa
jo
xor
mov
jne
icebp
push
test
jbe
arpl
push
jne
movsl
rorb
pusha
xor
mov
xchg
mov
lea
jp
subb
mov
outsl
loope
add
and
mov
in
movsl
add
andnps
push
aad
lea
insl
and
jg
jecxz
mov
les
loope
outsb
aas
push
mov
adc
mov
mov
stos
je
dec
call
popa
mov
push
int3
add
and
insl
sub
cmpb
outsb
jp
orl
repz
cmp
jo
ds
andl
icebp
fmuls
jl
imul
jp
aas
jb
movsl
les
pushf
sub
sbb
and
dec
sbb
add
mov
add
sbb
test
movsl
iret
fiadds
xor
cmp
pushf
out
data16
push
inc
jb
pop
not
mov
popf
in
les
or
pop
out
outsl
icebp
pop
imul
cld
rclb
lret
nop
jge
fdiv
test
mov
push
push
or
insb
pop
inc
lret
jns
add
out
cmovle
daa
mov
movsb
lcall
pop
or
cli
push
in
pop
sahf
cmp
sbb
popa
xorb
sbb
nop
cmp
sbb
push
cs
xor
xchg
pop
lcall
lahf
jl
imul
adc
test
pop
data16
enter
mov
out
inc
scas
movsw
lret
inc
xor
cmp
in
test
mov
neg
jno
sbb
jle
pop
fdivr
jnp
mov
mov
mov
repnz
jmp
iret
mov
jmp
rcrb
aam
sahf
push
scas
jmp
dec
xor
mov
push
aaa
xor
and
adc
ljmp
clc
mov
call
mov
adc
push
ret
mov
mov
pop
or
das
testb
mov
push
xchg
into
and
jg
in
test
sysret
fidivl
push
inc
pop
push
shl
mov
nop
je
inc
shlb
fildl
or
cmpsl
test
push
daa
mov
sub
lcall
and
sub
andb
jbe
call
pop
rolb
arpl
stc
hlt
sar
cmp
clc
js
inc
sti
inc
push
rclb
mov
lock
sbb
leave
insb
jne
push
stos
mov
test
test
dec
push
pop
sub
sbb
ret
ret
push
jo
inc
aas
xchg
mov
repz
adc
pop
and
loop
sbb
lea
adc
mov
mov
mov
mov
cli
loopne
sbb
adcl
xlat
aad
mov
cmc
stc
mov
popfw
jo
adc
xor
je
or
popf
out
pop
add
and
arpl
adc
or
pop
pop
push
or
dec
ljmp
pop
mov
xchg
lods
dec
aam
xchg
sub
xchg
cli
pop
fsubl
sub
jb
loop
and
int3
or
movsb
pop
data16
ret
and
sub
xor
dec
xor
and
mov
push
cmp
jle
popa
jge
fisubl
es
dec
insl
jl
push
insl
push
mov
movsb
or
adc
add
arpl
push
jb
popf
imul
dec
or
and
addb
inc
in
lods
mov
pop
outsb
and
mov
push
jecxz
iret
lods
mov
adcb
jo
shrb
sub
cltd
mov
std
test
stos
fisubrs
sarl
cmp
sub
push
sbb
hlt
push
in
cmp
push
lret
fwait
enter
mov
mov
mov
jecxz
xor
mov
dec
out
add
and
inc
pop
js
sarl
mov
shrb
loopne
jnp
adc
test
mov
and
shrl
or
pop
movsb
and
inc
or
jbe
inc
xor
pop
pop
sub
sub
or
shll
pusha
sub
adc
in
adc
jne
jmp
dec
mov
sbb
sbb
adc
dec
push
jecxz
int
pop
std
xchg
cli
lods
aam
popf
adc
out
mov
jl
lahf
or
xor
enter
adc
cmpsl
stos
inc
insl
adc
pop
jecxz
repnz
push
and
cmp
iret
loop
or
add
test
insb
jl
lret
pop
mov
les
out
mov
dec
ret
dec
dec
pop
popf
fstps
mov
cmc
and
sti
sbb
paddusb
pop
rol
sti
xchg
sbb
push
cmp
xchg
jmp
nop
test
sub
sahf
mov
movsb
mov
in
popa
in
in
andb
jno
mov
icebp
jb
cmpsb
adc
test
lock
xchg
jle
fs
in
adc
pop
loope
pop
push
mov
fbstp
clc
jge
sbb
jb
push
lahf
jmp
mov
aaa
outsb
fs
mov
sti
cmp
jne
push
adc
lea
ja
and
scas
in
adc
leave
stos
xor
insl
in
das
ret
andb
mov
arpl
push
push
stc
into
outsl
or
jae
cmpsl
icebp
gs
data16
jl
jl
repz
movsl
push
insl
push
mov
fsub
fwait
sub
das
xor
sub
hlt
ret
inc
sti
pop
jg
xchg
pop
xor
lret
je
mov
std
jecxz
aad
inc
lds
movsb
sub
fsubp
inc
mov
outsb
filds
cmp
cmp
fisttpl
sub
push
inc
aam
ljmp
cmp
and
or
cmp
dec
or
pop
mov
pushf
jg
in
mov
or
andl
lahf
int
adc
lahf
xchg
clc
push
enter
mov
mov
dec
sbb
jno
cmp
push
xchg
sbb
sub
pop
loope
je
adc
mov
cmpsb
imul
mov
mov
sub
adc
push
xchg
or
xlat
es
lcall
jb
inc
popa
adc
xor
sbb
adc
adc
data16
adc
lods
loop
scas
call
rcr
jle
and
and
stc
andl
pusha
stos
test
or
lcall
ret
aam
pop
shl
sti
std
fstpl
int
or
or
cs
jbe
fmuls
mov
and
sbb
insb
xchg
imull
xchg
loopne
daa
movsb
pop
mov
mov
pushf
pop
popf
cs
notb
loope
or
push
popf
aam
fldl
je
ljmp
cmpsb
xchg
sbbb
xchg
scas
cmp
ret
inc
push
pop
cmp
and
jge
mov
lret
outsb
pop
inc
rorb
lcall
ja
fwait
test
inc
vpsrad
pusha
sbb
xchg
adc
aaa
push
sub
inc
sbbl
pop
pop
arpl
mov
xor
lcall
repz
pop
lods
push
pop
dec
imul
mov
mov
pop
stc
mov
repz
mov
adc
cmc
jns
jo
addr16
mov
idivl
test
xchg
mov
sub
stos
mov
fmull
xor
jmp
pop
lock
push
cli
popa
sbbb
xchg
stos
imul
popa
sti
add
xor
ljmp
push
ja
repz
bound
sbb
sbb
sub
cmp
push
cs
inc
jl
icebp
mov
push
ret
shlb
repnz
scas
xor
test
outsb
imul
pop
push
mov
ret
jbe
pop
popa
mov
jb
xlat
mov
fwait
mov
out
and
mov
mov
std
push
nop
pusha
bnd
or
cmp
xchg
cli
or
mov
push
mov
add
sti
pusha
sbb
mov
sahf
out
xor
pop
or
xchg
out
cmp
sbb
push
test
dec
ljmp
jno
mov
pop
shl
or
popa
negb
pop
xor
sub
inc
aad
sbb
fsubrl
test
pop
insl
sbb
or
adc
jp
push
stos
inc
push
mov
fiaddl
mov
pushf
adc
add
xchg
sbb
lret
fwait
loope
gs
xor
call
mov
add
and
mov
mov
movsb
xor
jns
dec
mov
lock
mov
iret
inc
loope
cli
sub
or
les
std
pop
or
popa
add
cmpsb
mov
dec
stos
or
dec
cmp
ja
std
sub
or
dec
roll
dec
mov
popa
adc
inc
sub
stos
xor
loop
jecxz
fmull
cld
aam
fnstsw
sbb
jle
cltd
xor
mov
mov
pop
es
nop
jecxz
pusha
test
mov
push
iret
test
lods
shll
test
mov
cmp
add
add
push
jp
loop
push
stos
push
adc
push
mov
pop
jecxz
icebp
inc
call
out
pusha
clc
cmp
pop
sub
out
inc
idivb
lods
adcb
hlt
mov
or
ljmp
scas
into
jge
sbb
mov
sbb
ret
mov
push
clc
aad
stos
insl
icebp
cmp
out
pop
lret
icebp
xchg
and
jmp
stos
push
cmp
mov
fwait
fwait
pop
xchg
pop
pop
fdivr
aaa
push
jl
pop
cmp
jbe
cmc
subl
jbe
test
sub
enter
mov
add
inc
push
mov
enter
rcrl
mov
cmpps
jle
mov
mov
dec
sbb
and
pop
fdivl
cmp
pop
dec
andb
dec
cltd
sbb
or
mov
mov
stc
push
rol
mov
test
xrelease
and
sub
cmp
jnp
dec
dec
xor
out
xor
outsb
cmpsb
sbb
stc
push
dec
lret
jl
fsts
mov
sbb
inc
inc
stos
jb,pn
stc
mov
xchg
fcmovb
sbb
add
into
inc
dec
mov
mov
add
adc
std
cmpsl
in
cmpsb
cld
jmp
enter
imul
in
push
rcrl
loop
aam
aas
movsl
cltd
lcall
mov
pop
xor
xchg
call
stc
xchg
ljmp
call
outsb
int
adc
pop
pusha
push
sahf
xor
mov
mov
ds
enter
dec
jp
or
pmaddwd
cmovae
insb
mov
popf
or
loope
pop
cld
fs
push
pusha
das
out
mov
mov
lock
sbb
outsl
sub
pop
mov
push
jne
adc
jle
jo
jmp
sbb
push
ja
lahf
sub
scas
adc
sahf
sub
rorb
aas
das
orl
int3
mov
xor
outsb
add
fptan
adc
dec
popa
sub
jecxz
outsb
fucom
pushf
loopne
jmp
pop
lret
pop
jbe
jge
xor
movsl
lret
xchg
xchg
xor
out
add
push
pop
mov
outsb
pop
jbe
fdivrl
pop
in
test
jle
cmp
pop
ja
sbb
cmp
ds
fistpll
fnstsw
cld
xor
inc
nop
insl
pushf
jb
ret
xchg
test
repnz
push
roll
hlt
pop
test
mov
lcall
sub
aam
and
adc
test
stos
push
ss
push
and
nop
enter
cld
dec
out
shlb
jbe
dec
add
mov
fildll
rcl
fs
popf
or
dec
xor
pop
cli
xor
cmp
imul
sub
sub
loopne
adc
jge
or
in
rcl
jnp
loop
pushf
push
inc
adc
mov
or
mov
scas
and
inc
in
pop
les
imulb
sahf
les
sbb
push
fisttpll
xchg
and
jb
pop
xlat
clc
pop
cmpsb
pop
xor
jg
out
sub
jae
pop
movsb
jecxz
xlat
xchg
dec
sbb
mov
mov
insl
jge
sbb
fisttps
fmul
scas
sub
repnz
enter
rcrb
sahf
pop
inc
xchg
stc
mov
inc
adc
push
lods
xchg
popa
mov
lcall
outsl
lds
push
stos
mov
xchg
xor
ss
or
cmpl
adc
xor
lods
aas
jmp
call
scas
or
mov
movsb
dec
rcrb
inc
stos
jbe
jnp
cs
sub
jo
repnz
push
test
sbb
scas
into
loopne
add
jb
xchg
imul
outsl
dec
sub
sub
aas
lcall
jl
xchg
pop
les
roll
in
cmp
and
pop
push
cmp
xchg
out
pop
ljmp
xchg
outsb
cltd
addr16
cmp
enter
mov
fnstsw
push
sub
mov
jle
mov
int3
or
inc
jne
xor
push
sbb
mov
pavgw
sub
ds
sub
mov
xchg
lds
ror
mov
add
rcrb
icebp
adc
ja
add
or
mov
push
add
lret
adc
insl
mov
push
in
inc
pushf
cltd
rol
das
cld
sbb
xchg
repnz
notl
xlat
stos
jmp
stc
push
nop
leave
ja
pop
fimuls
scas
dec
lods
fildl
fildll
jge
faddl
insl
push
test
hlt
jmp
mov
cld
pop
pop
add
hlt
inc
push
mov
inc
xchg
sub
push
mov
addr16
arpl
mov
lret
in
pushf
repz
pop
push
addb
xchg
outsb
daa
cwtl
scas
rcrl
add
lea
jbe
xchg
push
jns
cmc
jle
out
inc
xchg
mov
rcrb
adc
aaa
scas
insb
mov
shll
cwtl
dec
lods
jmp
mov
mov
mov
inc
push
or
rorl
mov
jne
loope
scas
cmp
inc
mov
orl
adc
mov
out
sbb
loop
enter
popa
add
fisttpl
pop
nop
loope
nop
iret
aaa
cs
in
mov
add
ret
mov
into
jo
xchg
jne
dec
iret
aaa
popf
inc
fldcw
mov
fsubrp
and
imul
call
stc
into
push
push
mov
and
lret
lahf
inc
outsb
int3
sub
dec
pop
hlt
add
add
fmuls
mov
and
pop
push
addr16
mov
xor
jae
in
cmpsb
sub
sti
bound
inc
out
mov
loope
jae
lods
xchg
jl
pop
sti
sbb
or
add
imulb
cmp
jmp
hlt
mov
sub
sub
inc
add
ficoml
ss
lret
in
ja
cltd
or
stos
call
cmp
pop
ret
sub
mov
mov
mov
test
mov
push
aaa
mov
inc
call
jecxz
imul
ja
int3
add
pop
testl
popf
fcompl
stc
jg
dec
or
xorl
fcmove
push
push
inc
xchg
push
adc
cmpsl
test
pop
rorb
loope
jae
cltd
mov
shrl
cmp
mov
lret
packsswb
inc
sub
jnp
fisubl
ss
xchg
addr16
in
int3
fsubr
roll
lahf
jmp
sti
gs
add
jg
hlt
pop
xor
add
sbb
insl
cld
jle
gs
lret
pop
cmp
outsl
rcll
packsswb
mov
sti
out
pop
fdivl
mov
mov
xor
or
rcrl
mov
clc
push
pop
aam
gs
jbe
push
xor
sub
scas
dec
dec
out
xchg
repnz
in
inc
push
in
mov
insb
pop
enter
roll
xor
in
test
cmp
test
aam
lret
jns
subl
push
xchg
ds
nop
pop
xor
mov
and
stc
push
scas
and
inc
fs
add
cwtl
loop
test
mov
movsl
call
pop
mov
ret
arpl
sti
and
cli
jne
fs
outsl
pop
lret
aaa
gs
adc
repnz
inc
dec
enter
pop
cld
mov
test
cmp
and
iret
out
fcomip
iret
clc
mov
rcrb
inc
int3
into
dec
jle
push
dec
mov
test
gs
jmp
adc
stos
test
imul
fldt
cld
push
or
stos
xchg
pushf
mov
xchg
mov
mov
imul
sbb
push
or
mov
xchg
fdivrl
lahf
rcll
or
and
aad
jecxz
ss
cmp
in
adc
cmpsl
inc
push
pop
push
in
mov
sub
in
loope
cmp
and
test
into
inc
rcrl
add
push
push
push
lea
or
cmc
xor
cmp
adc
test
adc
pop
push
sbb
test
cs
mov
pop
test
xchg
add
cltd
fmulp
aad
inc
sub
mov
add
pop
bound
sub
pop
cmpsl
stc
pop
into
mov
inc
mov
pop
dec
stos
xor
movq
sub
xchg
pop
es
cmp
sahf
push
mov
sub
jg
adc
add
xchg
fildl
pop
dec
pusha
dec
sub
in
and
aam
lcall
jecxz
out
into
imul
pop
and
arpl
xor
scas
sub
iret
jmp
add
lea
add
adc
sbb
push
lahf
pop
test
test
xchg
jne
push
xor
stos
inc
or
mov
adc
out
push
icebp
int
rcrb
scas
dec
sub
add
lret
adc
pop
fistpll
icebp
sub
adc
into
xor
mov
enter
pop
mov
sbbb
cmc
out
ljmp
outsb
xchg
notb
xchg
jp
out
jp
add
aaa
cwtl
inc
mov
in
sbb
clc
insl
mov
in
stos
fs
dec
fcmove
pop
or
pop
mov
mov
or
in
jne
je
and
cs
sbb
jns
jecxz
and
or
inc
xchg
sub
dec
pop
push
mov
sbb
insb
inc
ljmp
jmp
into
jmp
jne
subl
sbb
jne
or
int
fsubrl
out
push
enter
adc
cwtl
in
cmc
jns
xchg
testl
popa
and
mov
push
stos
fcomi
movsl
jmp
test
fs
bound
xor
das
shlb
aas
test
jns
mov
or
jno
cmpsl
aas
xor
repz
mov
xchg
icebp
hlt
popf
mov
or
inc
movsb
dec
cmc
or
dec
xchg
sbb
mov
addr16
wbinvd
loop
adc
rclb
and
mov
sti
and
jge
loop
mov
stos
mov
nop
out
and
lods
test
pushf
aas
movsb
push
or
loop
ss
dec
xor
push
int
mov
add
lcall
pusha
add
leave
mov
pop
and
mov
inc
das
sub
out
dec
xor
ljmp
dec
xchg
adcl
mov
mov
pop
dec
mov
int3
cmp
sub
sbb
leave
sub
xor
rorb
test
pop
mov
roll
sti
cmp
xchg
or
int3
or
pop
jbe
push
imul
movl
push
xchg
nop
mov
sub
pop
sub
pop
div
sbb
push
pop
pop
adcb
movsl
pop
dec
add
divl
outsb
mov
in
push
mov
xchg
scas
rcr
icebp
sbb
ret
cmpsl
popa
cmp
ja
movsb
insl
imul
fistpl
aad
lods
ljmp
pop
jp
insb
aam
iret
add
mov
and
xor
and
movb
push
mov
movsb
xchg
in
mov
pop
cld
jmp
std
jno
ret
inc
mov
add
pop
aaa
and
adc
lods
insl
mov
lods
sarl
addr16
enter
xchg
lcall
dec
iret
jb,pn
out
sub
fstps
popf
or
aaa
dec
sbb
cli
inc
jbe
adc
xor
test
add
movsb
lds
xlat
push
movsb
shl
jl
add
add
sub
sub
fstps
push
cli
jns
xor
les
pushf
idivl
xchg
cmp
int
addr16
inc
divb
data16
mov
test
lea
inc
mov
or
add
xchg
inc
mov
xchg
lcall
and
pusha
cmp
mov
xor
aad
sbb
pop
dec
inc
mov
pusha
lahf
outsb
xchg
pop
les
aam
repnz
pushf
sub
xchg
add
mov
sbbl
scas
adc
jnp
adc
xchg
movsb
stos
mov
movsb
in
or
mov
jge
sub
adc
pop
xchg
js
xor
xchg
fs
mov
test
inc
sahf
jecxz
pusha
cmp
cli
in
arpl
lahf
stos
mov
pusha
nop
mov
sub
aad
fsubl
pushf
enter
rcr
ret
loop
cmc
aaa
cmp
stos
adc
xchg
sub
int
sub
inc
xor
int
push
ret
popf
cmp
test
pop
add
lea
xchg
push
int
cltd
and
mov
jbe
jmp
cmp
push
inc
xlat
sbb
push
and
lock
jecxz
mov
mov
clc
push
xchg
loope
xor
mov
lock
mov
adc
fildll
mov
divb
adc
insl
sti
cs
add
mov
jbe
js
or
test
lods
dec
or
sub
and
sub
fs
xchg
dec
ss
outsl
mov
cmpsb
mov
cmp
repz
call
sti
ror
int3
lea
shlb
out
lods
aad
out
inc
dec
adc
xorl
cmpsl
mov
clc
ljmp
cmpsb
int
cmp
xchg
popa
add
ja
pop
cmp
stos
call
sbb
pop
xlat
stos
lea
mov
xchg
inc
stos
mov
ljmp
push
fisttpl
lahf
inc
adc
insl
cmpsb
movsl
cmp
or
cs
movb
inc
adc
mov
aam
pop
fnsave
add
nop
mov
cmpsl
daa
in
dec
call
les
cmpsb
inc
pop
ret
jb
add
or
xchg
lods
into
xor
je
pushf
stos
js
je
push
jno
push
enter
in
push
shrl
sub
xor
mov
jne
inc
mov
mov
out
int
ds
cmp
mov
pop
mov
mov
jl
jns
ja
sbb
loope
pop
push
stos
sbb
insb
icebp
add
mov
mov
mov
xchg
call
out
pop
mov
cwtl
test
jg
sysenter
repnz
pushf
outsb
fldcw
xorb
pop
or
and
cmc
ret
add
xor
aad
sub
add
js
movsl
cmp
inc
iret
mov
and
loop
cmc
mov
mov
int
fs
add
sub
lret
inc
lcall
mov
mov
inc
cmp
xchg
xor
inc
test
stos
push
jg
mov
jge
mov
lock
jb
pusha
sub
cmp
in
icebp
jbe
jno
aam
imul
push
xchg
mov
data16
mov
jmp
jne
gs
mov
ds
gs
ret
or
xorl
int
arpl
stos
xor
outsb
mov
lds
icebp
jo
lret
outsb
sbb
and
push
mov
pushf
inc
fcoms
add
sub
xchg
test
filds
loope
ljmp
add
dec
fnsave
aam
out
cmc
add
inc
ss
test
pop
lcall
cmp
ret
xchg
sub
xor
fnstenv
movsl
adcb
and
push
push
inc
les
in
mov
sahf
mov
inc
push
inc
xor
lahf
mov
testb
icebp
into
sti
ret
rcr
jb
es
jo
sahf
mov
inc
jl
pop
in
repnz
in
outsl
insl
jnp
les
std
mov
ja
mov
cmp
xor
lret
push
scas
jns
ret
dec
sarb
inc
inc
sbb
pop
mov
lea
loopne
test
outsb
repz
mov
jbe
push
xor
mov
mov
sub
fmul
aaa
lret
cmp
fsubl
mov
divb
out
cmp
pop
fdiv
sar
fbstp
in
pop
leave
cmpsb
andb
lret
adc
mov
rcl
pop
daa
inc
xchg
xchg
jb
sub
dec
inc
dec
sbb
stos
add
lahf
fsts
inc
movsl
jbe
pop
clc
fwait
inc
push
xlat
cmp
enter
mov
ds
push
mov
or
mov
cmp
jno
aas
xchg
sbb
mov
int3
dec
adc
mov
adc
adc
mov
sbb
and
cs
and
mov
pushl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
ja
sub
rcrb
ret
xor
sti
jo
loop
out
out
mov
test
lcall
pop
xor
ja
xor
loope
jp
cmpsl
andl
sbb
fiaddl
fldcw
out
movsb
push
sbb
or
dec
mov
inc
popa
out
repnz
adc
cmp
insl
inc
shll
xlat
push
jbe
add
pushf
add
popf
jbe
sbbl
fsts
mov
sbb
jecxz
leave
bound
rcll
lcall
and
insb
js
dec
sub
test
arpl
enter
cli
mov
jne
or
push
fcoml
jne
out
ss
cs
mov
test
std
cmp
push
stos
inc
inc
std
lds
sub
loopne
or
orb
pop
or
xchg
pop
dec
pop
sub
neg
fisubs
pop
and
cmc
pop
pop
out
dec
icebp
and
xorb
xchg
daa
lcall
stos
cmp
repz
test
mov
je
es
aas
mov
xchg
mov
std
lret
mov
repz
push
jne
insl
xor
or
test
add
cmpsl
pop
lea
jbe
mov
jae
lods
xchg
mov
dec
mov
das
shl
jbe
mov
das
sarl
call
stc
int3
int3
shrl
jg
mov
add
jb
test
mov
xlat
xchg
push
and
and
dec
sub
test
jl
mov
xor
pop
ret
iret
addb
or
mov
outsl
jne
cmp
ja
fldenv
pop
adc
push
rcrb
jb
mov
mov
jmp
jae
and
mov
sub
dec
mov
enter
cmpsb
rcll
jae
daa
jo
inc
rclb
jae
imul
ret
mov
ljmp
rclb
in
mov
pushf
in
mov
in
jns
inc
test
loope
arpl
sbb
cmpsb
or
sbb
mov
ss
lods
loop
cmp
mov
push
in
pop
jbe
rcr
clc
sub
cmp
jne
sub
jl
clc
push
jle
lea
jae
mov
mov
jle
bound
mov
pop
push
pop
pop
mov
fimuls
icebp
jge
xor
xchg
clc
add
mov
pop
pop
push
mov
fnstenv
mov
jp
cmp
mov
add
mov
add
jp
cmpsl
subb
test
push
loope
cmp
fs
mov
inc
in
or
int3
cltd
in
pusha
mov
cmp
pop
lods
push
idivl
jne
push
sarl
ret
test
xchg
dec
out
dec
shll
xor
sub
pop
cmpsl
ret
xor
cs
pop
mov
jnp
cmp
sub
dec
sub
icebp
mov
fs
jmp
daa
out
adc
cld
into
add
lea
hlt
lea
sub
jno
bound
jge
sti
push
sub
shl
jae
add
mov
or
sub
addr16
add
fdivr
sub
jbe
ja
xchg
out
pop
add
mov
aas
out
fadd
mov
and
mov
adc
cmp
xchg
enter
mov
ljmp
or
rcr
test
push
or
cltd
inc
imul
jecxz
popf
cmp
pusha
xor
call
loop
add
pop
out
cmp
mov
push
mov
fldlg2
sub
adc
bound
or
rorl
mov
and
and
test
xchg
jmp
adcl
aam
fnstenv
sub
jb
addr16
add
and
adc
cwtl
sbb
or
pusha
dec
in
inc
cli
ljmp
out
sbb
dec
rcll
mov
pop
clc
leave
pop
iret
das
sbb
rol
nop
fimuls
adc
popf
push
mov
jnp
xor
jns
bound
pop
in
fwait
loopne
push
fidivs
dec
mov
mov
xchg
jno
sub
xor
push
push
arpl
xchg
fndisi(8087
stos
nop
mov
and
add
or
mov
and
sbb
or
adc
cmpsb
pop
pop
ds
aas
sub
jmp
adc
out
add
adc
repnz
cltd
std
fstps
mov
repz
insl
fcomps
fstpt
adc
cwtl
cmp
aam
test
mov
cld
jecxz
mov
pop
push
rorl
dec
mov
lahf
jge
sbb
jg
mov
and
sahf
jl
push
dec
fwait
sbb
loope
mov
mov
imul
dec
daa
rcrl
ds
sahf
adc
jecxz
adc
mov
jae
repnz
das
mov
shlb
in
sub
sbb
imul
mov
out
out
jg
sti
xchg
sub
call
sti
je
stos
xchg
inc
in
jae
jae
xchg
sub
xlat
call
mov
icebp
insl
in
in
ds
mov
push
sbbb
mov
lret
icebp
or
adc
and
adc
push
inc
mov
sub
outsb
shl
xor
adc
mov
inc
js
aaa
in
in
adc
hlt
mov
lea
out
loopne
fiadds
lock
xlat
push
sub
aas
fadds
out
outsb
inc
add
call
jl
xor
pop
shrb
xor
mov
mov
scas
mov
inc
add
push
clc
cmpl
pushf
cmp
std
mov
shl
sub
vcvttpd2dqy
jge
popf
inc
mov
ret
mov
dec
daa
sbb
sahf
leave
rorl
xchg
pop
loope
dec
sbb
or
fdivs
xor
mov
test
fistps
jge
push
xchg
in
popf
xchg
sub
arpl
dec
adc
cmp
xchg
push
jmp
jae
imul
arpl
or
push
das
cmp
scas
stc
inc
bound
push
xorl
cld
jmp
sub
insb
add
sbb
into
jo
in
xorb
js
dec
xchg
push
aad
popa
repz
sub
push
pop
rorb
insb
pop
sub
pop
adc
xchg
stos
cmp
shlb
into
or
add
sahf
lock
int
je
xor
rcrb
and
mov
push
setne
jp
jno
or
adc
fcompl
sub
mov
xchg
sub
dec
cmp
flds
inc
divl
in
adc
inc
xor
cltd
xchg
testb
movsb
inc
xor
fsts
xchg
push
loopne
push
xlat
popf
jle
clc
fldl
jbe
insl
enter
lahf
out
dec
mov
xlat
into
mov
pop
jecxz
push
lods
adc
cld
loope
cmp
pop
ljmp
push
mov
adc
aad
mov
sbb
stos
inc
or
or
sbb
hlt
dec
sbb
cwtl
sarl
mov
aaa
mov
xor
and
sbb
in
pop
mov
push
sub
jmp
mov
fldl
ret
mov
call
sub
ret
jl
sub
adc
mov
xchg
push
cmp
dec
mov
jb
insl
dec
fwait
int3
lock
testw
xor
test
loope
jnp
or
xchg
cs
dec
test
push
notb
shr
xor
push
mov
icebp
pop
scas
pop
ja
mov
cmp
das
aas
jle
insl
fidivs
clc
push
dec
mov
test
cmp
or
add
lret
dec
xchg
in
sub
dec
jae
xchg
dec
das
and
cltd
mov
aas
mov
mov
mov
cmpsl
jne
fstps
or
outsl
dec
xchg
repz
fnstsw
and
int
rcrl
jbe
jns
mov
push
push
push
sbb
inc
ret
rclb
lods
ss
sbb
loopne
inc
fcomps
mov
cmp
scas
xor
sti
dec
shll
jp
pop
sbb
pop
push
sub
adc
fs
aad
cli
int
shlb
sub
push
mov
add
aad
push
movsl
je
in
adc
add
and
fists
data16
xlat
sbb
push
lock
xor
pop
lea
xchg
fwait
inc
repnz
push
movsb
pop
xlat
in
inc
jge
js
sbb
xchg
in
repnz
repnz
pop
cmp
pop
pop
popf
push
psubb
xor
or
jp
cltd
aad
pushf
mov
cmp
dec
push
imul
shll
mov
mov
int3
icebp
cmp
sub
in
xor
push
mov
mov
les
push
imul
sbb
imul
popf
inc
and
xor
adc
nop
aas
out
aad
add
xlat
fmul
mov
mov
imul
sub
mov
pop
or
aas
mov
icebp
insl
pop
adc
push
push
sbb
xor
jno
xchg
pop
sbb
int
addr16
xor
cmp
sub
inc
hlt
fwait
push
test
lret
push
adc
loopne
jle
mov
cmp
in
rep
add
sub
or
jg
or
pop
nop
incl
imul
mov
sub
in
movsl
pop
and
mov
and
addl
iret
pop
ja
push
jp
jmp
mov
in
cltd
sbb
adc
xchg
jp
mov
pop
sub
ljmp
pop
stos
ror
xchg
ret
jg
adc
inc
test
call
lock
aaa
mov
xor
or
sub
fwait
jp
dec
sub
sub
adc
inc
and
pop
pop
push
aaa
mov
gs
mov
xchg
pop
push
out
pop
sarw
addr16
wrmsr
int3
sbb
adc
pop
sbb
inc
das
mov
lcall
repz
test
shr
jne
xlat
dec
js
cli
mov
jle
jecxz
cld
mov
xchg
mov
out
push
jb
dec
sbb
cltd
cmp
les
or
dec
and
repnz
fldenv
xlat
cmp
push
adc
fs
pop
xor
ljmp
jmp
adc
roll
fidivrs
xchg
ret
scas
inc
ds
ja
inc
mov
imul
push
mov
ljmp
aas
into
and
sbb
dec
jno
xor
mov
pop
rorl
dec
xor
cmp
jmp
pop
fsts
cmp
inc
int
xchg
fldenv
mov
daa
sti
leave
jl
sbb
dec
cmpsb
sbb
mov
sub
sarl
loope
cli
ret
test
lret
cmp
in
popw
fildl
or
sti
test
and
jp
ss
orl
push
ret
jmp
or
fldl
mov
cld
cmpsb
add
shl
inc
and
mov
inc
cmp
insb
lds
out
inc
fldenv
mov
mov
loop
lret
adc
or
sub
jns
sub
dec
mov
push
testl
and
in
mov
lock
mov
je
repnz
jno
jp
inc
rolb
jno
inc
outsb
push
mov
pusha
inc
stos
data16
dec
insl
cld
fcmovu
movsb
test
enter
imul
adc
rclb
push
and
stos
dec
mov
and
loope
cmp
jge
in
mov
jl
xchg
shlb
mov
mov
mov
aam
mov
adc
hlt
call
popa
out
or
cli
cmpb
inc
fnsave
adc
xor
sub
mull
popa
sahf
cltd
pop
or
into
mov
mov
xchg
mov
or
mov
int
lods
out
inc
lds
aad
xchg
in
loope
xchg
loopne
sti
pop
push
adc
cwtl
push
mov
arpl
ss
lods
push
pop
jnp
dec
movq
jnp
clc
and
stc
mov
inc
push
cmpl
fwait
sbb
das
jg
pop
mov
sub
movsl
jp
shlb
sahf
dec
cwtl
mov
push
pop
out
decb
mov
std
push
inc
jae
gs
adc
xchg
cwtl
xchg
mov
inc
mov
mov
test
test
mov
mov
mov
out
addl
ds
mov
data16
jnp
mov
mov
movsb
sbb
imul
pop
bound
les
rclb
mov
popf
push
hlt
sahf
jg
stc
test
or
adcl
pop
adc
add
cmp
mov
adc
bound
push
mov
or
push
nop
out
xchg
lret
sahf
push
frstor
mov
iret
mov
inc
ficompl
loopne
je
js
jb
push
mov
js
int3
push
les
ret
std
mov
fwait
mov
sti
std
pandn
and
jge
xchg
xor
inc
mov
pop
xor
je
and
inc
int3
repz
fidivl
pop
stos
loopne
cltd
iret
inc
dec
fs
insb
sbb
gs
xchg
mov
popf
add
mov
jbe
cmpsl
push
subl
shr
pop
loope
cld
std
push
faddl
sub
ficoms
hlt
mov
ss
mov
sbb
push
ret
lock
mov
inc
sbb
mov
mov
inc
testl
movsl
fildll
pop
xchg
inc
movsb
movl
sub
xchg
jns
or
push
subps
xchg
mov
adc
cmp
xor
fwait
xorb
pop
xchg
in
dec
fidivl
sub
jp
fidivs
sbb
dec
dec
jg
xor
cmpsl
imul
movsl
xlat
or
sbb
lret
mov
xchg
mov
jge
sub
loop
mov
ss
cmp
dec
repz
fs
push
cmc
pop
xchg
clc
mov
rolb
inc
push
mov
dec
jecxz
mov
pop
mov
mov
addr16
mov
cli
mov
out
jl
jnp
or
mov
mov
mov
pop
pop
push
les
pushf
xchg
es
lret
push
in
sbb
mov
xchg
inc
mov
sub
dec
iret
int
cmp
movl
pop
ficoms
adc
pop
mov
cmpsl
ret
or
test
add
out
sarb
push
xchg
orb
in
or
xchg
test
lret
cltd
sti
mov
out
pop
xchg
or
push
pop
fwait
or
nop
pop
adc
xor
imul
pushf
out
xor
inc
mov
mov
add
adc
out
adc
out
or
int
xchg
loopne
dec
mov
adc
add
out
sbb
xchg
mov
rolb
jmp
sbb
xchg
add
sub
pop
pop
adc
push
add
dec
cmp
std
iret
icebp
cmp
test
repnz
daa
cmc
dec
rcl
dec
push
push
mov
pop
cs
cmp
adc
pop
fadds
cmp
jo
rcl
rorb
ds
push
pop
push
mov
ret
xlat
les
pop
aas
dec
jae
test
je
aas
fwait
mov
adc
add
jnp
inc
inc
adc
lret
sar
dec
add
cmpsl
loop
pop
and
pop
xchg
nop
stos
cmpsb
sbb
pop
data16
push
mov
cmp
push
stc
insb
xor
jno
jp
adc
xchg
fnstsw
loopne
dec
fwait
sti
cmp
adc
dec
inc
ds
inc
shrl
js
pop
push
xchg
inc
xchg
cmp
cmp
cmp
in
jnp
jle
sbbl
mov
out
cmp
jns
imul
icebp
add
in
hlt
cmc
ret
sub
mov
cmp
mov
cmpsb
dec
fnsave
push
push
js
or
add
add
fnstenv
mov
dec
adc
push
test
scas
push
push
scas
pop
fwait
xchg
call
push
loop
popf
or
enter
adc
notl
sbb
push
mov
dec
adc
les
les
push
inc
mov
stc
and
out
fidivrs
in
xor
mov
inc
jmp
pusha
mov
xchg
arpl
cs
lret
das
aas
ds
push
in
xchg
inc
ds
push
mov
mov
mov
xchg
mov
inc
jmp
sub
daa
inc
lods
adc
in
loop
test
shll
int3
adc
jg
data16
inc
loope
out
lret
sarl
pusha
jg
pop
decb
bound
xor
cmp
shlb
xchg
movb
into
add
test
or
pushf
adc
enter
or
xchg
and
test
imul
or
jp
rcrl
aaa
stos
inc
fiadds
or
push
sbb
pop
cs
jecxz
movsl
jnp
movsl
lahf
ja
fwait
jge
sbb
adc
xchg
jle
sbb
nop
test
cmp
sub
lcall
test
jmp
mov
dec
xor
sbb
lods
fnsave
data16
psllw
push
fistl
xchg
and
int3
mov
adc
pop
xor
js
xor
cs
and
xchg
jae
lcall
ficompl
adc
push
jmp
mov
fnsave
pop
mov
out
lea
cmc
jne
iret
in
ss
jg
or
test
and
jg
pushaw
test
aad
test
xchg
mov
push
lds
or
sti
aaa
xchg
fs
gs
cmp
push
mov
aad
push
cmp
jno
jno
inc
mov
sbbl
sbb
xchg
insb
dec
cli
ret
dec
mov
popa
inc
imul
adc
fstpl
jb
pop
imulb
fistpl
loope
mov
js
add
xchg
pop
outsb
mov
cmp
mov
js
ds
sbb
loope
xor
sbb
fsubrl
sahf
icebp
inc
cmp
fmuls
inc
pop
fstps
mov
mov
lock
notb
inc
mov
imul
test
pusha
xlat
test
clc
and
push
lret
lahf
push
push
adc
and
cld
add
lods
pop
cmp
adc
hlt
jb
es
insl
xor
loop
fs
cli
ret
sbb
jnp
xor
pop
sbb
mov
mov
cmp
pop
or
jo
xchg
pop
dec
jns
out
rep
sarb
adc
pop
cmp
jno
lods
cmp
lret
or
jge
leave
in
mov
fs
adc
mov
xchg
mov
into
fwait
call
popf
xor
sub
inc
out
inc
sti
cltd
out
pop
mov
insl
nopl
mov
test
mov
xor
jno
ficoml
nop
gs
cmp
jmp
sbb
mov
cmc
dec
sbb
into
rcll
push
cmp
roll
jg
adc
loope
test
jo
aad
mov
aaa
aam
sbb
adc
inc
stos
hlt
adc
int3
sub
das
sbbl
outsb
in
fldt
cltd
out
in
repnz
fld
imul
fistps
inc
cmpsb
mov
jle
incb
and
sbb
int
jp
cmp
jne
mov
lcall
mov
sub
sarb
sti
push
or
add
mov
testb
imul
mov
ja
data16
mov
push
xchg
movsl
dec
sbb
ror
aam
insb
lret
push
aad
subb
test
mov
lods
xor
aas
xlat
push
ffreep
jg
mov
fsubrp
inc
jb
sub
or
dec
jbe
sbb
insl
mov
sbb
filds
cltd
mov
xor
mov
xor
cmpsl
pop
mov
adc
in
xor
test
xchg
aas
lock
jae
cmp
sarb
outsb
insl
cmpsb
sub
xor
adc
fdiv
xor
push
dec
loopne
cwtl
aaa
idivl
stos
inc
fs
bound
inc
push
daa
cli
mov
cmpsb
sbb
std
mov
aaa
fucom
xlat
js
push
int3
shrb
in
cwtl
int
add
into
jmp
loop
incl
mov
pop
inc
scas
dec
or
mov
loopne
mov
stos
test
sbb
inc
add
cs
outsb
and
int
cmpsb
and
mov
lods
stos
leave
mov
insb
sbb
pop
shrl
out
test
push
mov
stos
cltd
lods
jne
hlt
or
call
stos
movsb
xchg
loope
pop
mov
inc
sub
pop
cwtl
push
add
aam
add
fxch
xchg
dec
cmp
rcl
dec
add
adc
push
ret
push
or
scas
push
das
test
mov
jg
pop
mov
pusha
mov
call
stos
and
lahf
lea
jnp
cmp
cmpsl
xchg
test
adc
or
lret
out
cld
add
mov
jo
cmp
fdivrs
in
test
cmp
aad
int
jo
xchg
push
push
mov
push
pushl
mov
paddsw
jns
add
or
jmp
xor
push
out
pushf
mov
dec
xor
out
jl
cmp
aas
out
lods
or
mov
cmpsl
cmpsb
push
in
loope
mov
adc
sti
push
xchg
bound
mov
cltd
aas
in
cld
dec
int3
into
clc
xchg
dec
mov
cmc
push
lods
dec
adc
xchg
pop
or
push
xchg
xchg
icebp
out
fimuls
mov
mov
int3
ret
xor
cwtl
xchg
push
and
faddl
mov
mov
lret
and
push
jmp
pop
gs
sub
repnz
fwait
pop
xchg
cmpsl
ss
pop
aas
push
cmp
ss
stos
fs
mov
mov
jb
and
pop
pop
jg
mov
das
mov
xor
out
call
frstor
mov
loope
pop
repz
jbe
mov
ds
addr16
sub
mov
push
xchg
jno
les
faddl
dec
repz
scas
add
sbb
leave
jge
in
and
pop
pop
cltd
dec
adc
aaa
shrl
cmp
xchg
popa
sub
xor
xchg
je
pop
fistpll
test
test
test
idiv
inc
movsb
xchg
adc
fstpt
jno
jge
loope
mov
mov
add
pop
jl
ds
movaps
iret
in
cmp
mov
das
or
jb
je
or
lds
push
cmp
cmc
into
scas
mov
push
dec
in
pop
mov
pop
push
push
mov
dec
imul
push
sub
cwtl
dec
hlt
pop
aad
push
inc
adc
pop
ljmp
rol
test
push
adc
pop
imul
or
addr16
outsl
dec
ret
ljmp
jnp
mov
rclb
aas
mov
fldcw
mov
cmp
cld
mov
aas
int3
mov
fistps
sub
lahf
lods
clc
call
in
mov
inc
adc
or
sub
push
rolb
mov
sbb
aad
rcrl
inc
outsb
je
call
rcr
insl
mov
sub
es
jmp
adc
loope
pusha
subb
xchg
push
das
data16
xchg
inc
cmp
aad
jns
pop
mov
xor
arpl
dec
daa
cmp
je
pushf
cmpsb
test
pusha
in
pop
push
ss
and
or
nop
lahf
bound
lcall
inc
iret
push
ud0
sbb
cs
call
add
pop
movsl
lods
jle
ret
jo
mov
adc
cmp
data16
sbb
ficomps
icebp
push
dec
mov
xchg
mov
adc
cmp
jmp
sbb
mov
add
mov
jo
jo
neg
inc
mov
inc
push
sub
lds
or
leave
das
imul
pop
test
and
loope
les
arpl
dec
sub
or
adc
jno
lcall
cli
sahf
call
and
in
popf
mov
push
sub
mov
mov
lock
and
inc
test
mov
cmp
pop
lock
repz
push
popf
adc
push
dec
cmc
push
dec
push
sbb
pop
std
xor
dec
push
in
out
xor
inc
and
jo
icebp
loop
repz
imul
mov
in
mov
movaps
ljmp
mov
out
int
pop
mov
pop
popa
fmull
ljmp
cli
mov
xchg
out
lock
fstl
and
xlat
jle
sbb
mov
mov
cmp
loop
jns
xchg
jno
sub
pop
shll
xchg
in
jo
lods
or
je
stos
mov
sti
and
mov
adcl
bound
or
dec
mov
shlb
int3
mov
jl
xor
inc
lds
jl
mov
add
dec
add
push
pop
maxps
push
test
das
pop
push
imul
idivb
or
rorl
pop
sbb
enter
inc
jl
loope
test
fsts
cs
test
jb
add
pop
mov
add
in
mov
cli
add
mov
clc
lret
test
sub
les
int3
aas
inc
mov
shlb
add
push
andb
imul
pop
cmp
mov
ret
push
xchg
test
sub
iret
pop
lods
bound
insb
xchg
aad
mov
jno
in
popf
imul
mov
jo
add
cmpsl
xchg
sub
xor
dec
repz
add
lret
or
pop
fdiv
adc
movsb
pop
daa
ficomps
insb
mov
stc
sahf
shr
hlt
orl
sahf
jg
inc
fdivs
pop
ret
fs
imul
adc
imul
hlt
call
xor
inc
shr
das
and
pop
pop
cmp
jo
imul
jns
aaa
xor
test
test
lcall
es
cmp
xchg
push
insb
jmp
insl
pop
pop
dec
insb
cmp
jmp
subb
sub
lcall
pop
jg
xor
mov
fidivl
cmc
or
jp
sub
xor
icebp
cld
jbe
sub
jne
je
mov
inc
adc
daa
lock
mov
test
add
sub
and
hlt
xchg
dec
stc
sub
int
filds
fwait
test
lock
rorw
mov
test
aam
xchg
xchg
lcall
nop
out
adcl
pop
std
out
imul
jl
xchg
into
pop
fdiv
cmp
popa
add
jg
add
sbb
push
sub
push
std
ret
jb
into
ljmp
xchg
push
or
arpl
cs
mov
sarb
and
cmpsb
setg
icebp
push
cmp
dec
or
pusha
jno
test
jno
call
outsb
inc
pop
push
shll
mov
sti
nop
or
jp
imul
pop
jg
adc
jl
mov
ljmp
sub
push
int
xchg
push
xchg
ss
mov
out
ror
sbb
cmp
sbb
jns
sti
inc
outsl
gs
sub
pusha
mov
movsl
repnz
pop
add
dec
rcl
cmp
push
aaa
fwait
push
es
std
outsl
rorl
mov
mov
pop
push
push
push
pop
lcall
xchg
cmp
pop
mov
fcmovu
fdivs
jg
xchg
into
inc
mov
push
mov
pusha
hlt
mov
sub
andl
jnp
xor
xchg
add
xchg
sarl
data16
cmp
mov
into
shl
stos
cmpsl
cmp
cmp
scas
imul
or
in
pusha
mov
movsl
jge
xchg
repz
or
add
repnz
mov
push
in
xchg
test
sbb
nop
loop
cmp
xor
inc
nop
data16
mov
push
fisttpll
pop
xorb
mov
sbb
sbb
push
sahf
mov
dec
icebp
mov
mov
aam
lahf
sub
jle
push
outsl
sbb
mov
shlb
jne
movsb
bnd
mov
sbb
aam
pusha
adc
pop
test
lret
andb
imul
push
push
xchg
dec
std
xchg
mov
pop
xchg
mov
xchg
pop
nop
pushf
mov
sbb
adc
ret
push
xor
mov
lods
lea
fiaddl
jae
add
dec
add
push
shll
movsl
or
and
xchg
pop
cld
call
clc
jp
popa
and
insl
pushf
movsl
test
or
aaa
and
into
inc
inc
scas
inc
pop
jnp
mov
mov
push
push
dec
push
mov
cmp
adc
js
cmc
xchg
popf
mov
push
push
rorl
inc
mov
stos
cs
ror
repnz
ret
or
data16
stos
jecxz
out
mov
sub
aaa
jne
imul
cwtl
push
or
enter
and
mov
push
pop
xchg
adc
popa
xchg
test
shrb
mov
jmp
je
cmp
xor
and
mov
lret
inc
dec
sysenter
insb
cmp
and
jp
push
mov
andb
ljmp
pop
pop
lret
mov
lret
and
out
mov
std
mov
mov
xor
jecxz
mov
pusha
mov
xor
in
cmp
popa
jmp
mov
int
inc
and
sarl
dec
mov
jb
jge
lea
lahf
mov
xchg
out
sbb
addl
fprem
add
sub
pushf
subl
fstpl
movsl
and
push
stc
adc
fnsave
dec
xor
xchg
fisttps
cld
aas
push
pop
and
jno
jo
mov
pop
mov
mov
arpl
mov
add
jae
das
inc
cmpsb
mov
sub
xchg
popf
dec
lahf
ret
pop
dec
lods
lret
fwait
push
daa
pop
ljmp
mov
adc
push
jns
mov
into
ss
adc
dec
jge
mov
or
jmp
xchg
inc
sti
icebp
xorb
idiv
mov
jecxz
adc
add
aad
or
bound
push
jno
cmc
hlt
cmp
stc
les
jae
stos
xor
cmp
insl
aad
rolb
jle
jne
sub
inc
std
insb
push
jp
push
jecxz
push
sti
loop
dec
jns
sahf
aaa
inc
xchg
lods
les
xlat
xchg
fsubr
mov
lret
xor
push
pop
adc
and
sub
lret
xor
out
loope
cmp
xchg
or
clc
sahf
out
and
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
inc
shll
ljmp
or
xor
stos
ja
or
jo
push
stc
xor
orl
sbb
in
push
and
imul
lock
shr
ljmp
scas
mov
push
jno
rcrb
enter
movsb
cltd
sti
movsl
mov
test
sahf
cld
pop
or
test
adc
xchg
orb
imul
das
out
push
sub
loop
ret
pop
mov
dec
cmp
fnstcw
mov
or
xor
add
out
adc
or
ss
repnz
push
xchg
cld
jmp
push
roll
je
jbe
xchg
enter
xor
ret
lds
sarl
or
push
lahf
cmp
xchg
repz
pop
push
loopne
orb
adc
jmp
dec
xchg
pop
call
je
pop
test
rorb
sbb
inc
mov
in
add
cmpsl
outsl
jmp
xlat
push
xor
test
mov
sbb
and
dec
xor
test
enter
fsts
lret
sub
dec
adcb
lcall
adc
aam
cmp
pop
stos
mov
ret
xchg
in
in
push
fucom
rcl
pop
in
jg
fldenv
ficoms
mov
inc
mov
mov
lods
push
cmp
loop
rcll
dec
sbb
mov
call
add
in
mov
mov
js
and
sub
mov
cmp
and
aaa
and
xchg
jl
dec
adc
shl
jo
sub
sti
popf
xchg
mov
mulb
push
je
mov
dec
dec
sbb
push
iret
push
xchg
std
sub
pslld
mov
mov
lret
jne
fisubs
fistpll
pushf
jmp
mov
mov
cltd
pop
or
je
xor
sbb
or
test
das
jmp
fcoms
cmp
shl
rsm
add
add
and
aas
sbb
in
fsubrs
and
loopne
dec
mulb
or
stos
add
int3
mov
test
cli
in
pop
inc
or
jbe
notb
mov
cs
pop
out
inc
cmp
inc
mov
xchg
cmp
insl
xchg
test
add
movsb
add
addr16
jecxz
sarb
and
imul
in
in
pop
insb
push
dec
add
sub
lret
pushf
mov
not
or
mov
lds
sub
sbb
xchg
out
inc
sub
cmc
sbb
movb
mov
dec
popf
fcomip
test
cmp
fmuls
arpl
adc
pop
addr16
jecxz
movsl
inc
jecxz
int3
ss
cmp
jle
pop
jbe
xchg
dec
add
sub
push
fwait
cmp
es
idivb
mov
ljmp
hlt
sub
imul
repz
cmp
scas
mov
aam
push
jne
xor
enter
enter
sub
sub
dec
rcr
mov
aam
and
xchg
scas
pop
lret
std
fstps
sub
aaa
xor
call
push
xchg
or
outsl
ljmp
rcl
pusha
loope
pop
inc
loopne
out
cmp
lret
inc
and
sahf
cmp
inc
mov
clc
adc
cmp
cmp
test
arpl
pop
jmp
and
cli
out
add
mov
mov
sub
or
xchg
das
xchg
test
push
es
dec
sub
sub
mov
push
hlt
add
mov
sub
out
adc
sbb
cmc
dec
fisubrl
sub
cmpsb
in
rcrl
ret
push
stos
aam
imulb
jbe
pop
mov
je
js
arpl
mov
or
xchg
push
sbb
xchg
cmp
arpl
jns
xchg
and
aaa
addr16
or
out
sub
jmp
adc
and
into
fs
xchg
arpl
cmp
jmp
stc
or
ret
adcb
test
inc
imul
cmp
out
xor
mov
clc
and
xor
addr16
push
xchg
push
mov
push
repnz
jl
jne
fsqrt
cmpsb
stc
fidivrs
or
fisubs
data16
push
dec
ljmp
xchg
in
repnz
int3
dec
popa
mov
jp
stos
cmp
hlt
mov
push
hlt
inc
ds
mov
imul
pop
cld
pop
cmc
push
insl
jb
pop
cmp
push
push
out
cmp
adc
jmp
pop
cmp
xchg
aad
dec
popf
and
sub
in
push
add
lods
icebp
pop
arpl
int3
push
sbb
lret
dec
or
and
iret
adc
lahf
popf
lcall
icebp
xlat
xchg
push
inc
dec
inc
mov
fmuls
test
rolb
arpl
push
add
test
std
sbb
inc
ds
adc
mov
xchg
lahf
add
push
idivb
adc
out
pusha
ds
jmp
mov
add
sub
movsb
dec
out
sub
push
and
icebp
inc
jle
je
fwait
push
cmp
mov
push
inc
loop
add
mov
std
fldl
aam
aad
mov
sarb
fwait
roll
lret
popa
adc
inc
stc
ljmp
enter
movsb
mov
xor
mov
mov
aam
orl
test
psrlw
cs
imul
jl
cmp
leave
movsb
aad
xchg
ret
push
dec
icebp
and
iret
mov
adc
add
shl
mov
fistpll
pop
cmp
testl
dec
in
repz
and
cmpsb
icebp
push
xchg
mov
clc
xchg
hlt
movsl
or
es
ss
or
sbb
inc
rorl
xchg
out
xor
sub
rclb
sbb
aad
or
pop
filds
mov
je
sub
ret
push
pushf
dec
fstl
jns
push
sub
cli
dec
xchg
fstps
test
ljmp
xchg
jg
fldcw
push
add
push
sub
lret
gs
test
icebp
stos
and
xchg
aaa
mov
sbb
mov
subb
sub
xchg
leave
mov
jle
insl
jge
dec
outsb
xor
lahf
sbb
adc
sub
out
dec
pop
fildll
inc
inc
sbb
push
jae
lea
xchg
insl
jecxz
and
pop
cmp
or
aaa
fnsave
sarl
lret
sub
popf
adc
pop
movl
and
mov
fidivrl
cmc
test
or
fimull
loope
sbb
mov
add
or
insb
mov
cmpsl
les
repz
add
les
sbbl
xchg
dec
xor
dec
aam
xorl
mov
rclb
out
insl
push
inc
xchg
stos
sbb
and
daa
xchg
xor
rcrl
xor
popa
mov
es
out
push
or
xorl
fmul
mov
add
jb
ret
imul
inc
sbb
xchg
mov
ljmp
push
stos
adc
dec
rorb
rorb
mov
sahf
push
ss
xchg
mov
sub
out
inc
inc
xor
and
pop
popf
push
add
fists
mov
ud2
icebp
push
lds
repnz
xor
and
or
or
xlat
iret
push
xchg
fcoms
decl
insb
movsb
dec
dec
adc
mov
inc
cmp
xor
leave
fisubrs
rorb
lods
repnz
or
push
lock
dec
fists
stc
ds
cltd
fimuls
ror
xor
xchg
cmpsb
icebp
loope
js
push
xor
dec
jecxz
mov
adc
ss
xorb
or
sub
mov
outsl
add
sub
mov
push
mov
nop
es
adc
or
aaa
into
inc
inc
mov
loop
out
sub
jge
hlt
mov
stos
pop
push
leave
test
sbb
dec
xor
dec
xchg
test
cmp
adc
pop
push
scas
repz
iret
leave
dec
dec
outsb
add
scas
int3
jge
ja
push
and
push
jp
jle
in
cmc
xchg
pop
lods
jecxz
cwtl
or
rorb
sbbl
fdivl
divl
cld
jns
mov
cmc
cwtl
seta
sti
rclb
xchg
out
popa
adc
enter
cmpsb
lcall
mov
push
inc
jl
xor
lods
cmpsl
out
jecxz
repz
mov
in
mov
inc
sub
hlt
mov
pop
shll
push
inc
mov
dec
inc
ret
cmc
into
sbb
or
out
mov
xchg
fstl
sbb
mov
xchg
dec
jecxz
cltd
push
push
rcll
mov
lret
loop
inc
mov
and
scas
adc
sub
incl
shrl
push
jnp
insl
aad
lock
or
lcall
jae
decl
or
out
mov
dec
mov
jg
sahf
std
pop
arpl
repnz
mov
call
jg
cmp
add
pop
xor
rorb
lcall
out
xchg
lds
pop
inc
insb
adc
adc
cli
adc
sbb
mov
push
dec
and
pop
xor
pop
out
movsl
mov
mov
mov
arpl
jne
shrb
pushl
mov
mov
add
sub
push
sbb
stos
jne
pop
jns
pop
mov
jl
xchg
pop
jbe
sub
aad
shrb
sbb
adc
or
xchg
push
iret
adc
aad
xchg
ret
or
sub
add
pop
xorl
jb
add
jb
rcll
xlat
pop
pop
dec
xchg
movsl
adc
mov
mov
mov
lret
push
add
divb
outsb
mov
xorl
dec
fld
or
cs
repnz
or
mov
loope
shrl
push
or
mov
hlt
das
repnz
mov
inc
xor
inc
shll
cld
dec
sbb
mov
mov
sub
les
and
cltd
jne
dec
in
jmp
movsb
and
cli
xor
xchg
insb
xor
daa
pop
push
test
jecxz
cmc
xorl
sahf
and
mov
cmc
ljmp
hlt
sbb
cmp
filds
adc
pop
xor
lcall
loop
xor
and
inc
xlat
ja
xchg
xchg
shlb
jno
outsl
packssdw
popf
lahf
pop
inc
rolb
int3
pop
jnp
fbstp
cmp
ret
push
or
push
pop
mov
pop
sbbl
xor
mov
cmpsl
movsl
mov
in
adc
cmp
ret
inc
je
lea
pusha
xor
add
lret
repnz
fcoms
add
xor
xchg
sbb
imul
or
push
add
popf
jne
sbb
jle
jl
xchg
inc
repz
mov
add
push
popf
add
sub
pop
push
lret
push
or
mov
push
test
xor
pop
pop
xchg
mov
pop
fstps
int3
jp
mov
std
jl
icebp
dec
mov
std
push
enter
push
mov
pushf
dec
push
sub
std
mov
cmp
pushf
roll
inc
sbbl
movsl
jge
mov
insb
loope
mov
and
loopne
icebp
push
pop
add
pusha
test
jmp
outsl
sub
xorb
ds
bound
sti
inc
aad
cmpsb
jg
mov
sub
push
cmp
aas
or
jmp
rorb
and
xchg
std
clc
or
sahf
int
stos
std
xchg
sub
or
pop
and
jl
cmp
je
jge
sbb
xor
push
fldt
ficoms
cli
jae
cmpsl
sti
mov
sahf
mov
or
or
sbb
test
sbb
test
xchg
cmc
adc
test
dec
fs
push
idivl
pushf
lretw
inc
cmp
lock
test
dec
mov
bound
shl
divl
jmp
repnz
test
mov
les
test
mov
lret
movsb
xor
fldl
test
imul
push
out
jne
js
add
scas
cmp
out
mov
sub
lods
outsb
jmp
dec
imul
arpl
rcr
test
int3
std
xor
scas
lds
and
jl
cltd
push
nop
pop
mov
push
movsb
rolb
inc
push
mov
mov
adc
in
je
adc
inc
xchg
inc
mov
dec
add
test
imul
bound
outsl
dec
inc
fldt
dec
jae
in
rorb
jns
test
push
cltd
xlat
jecxz
push
xor
mov
loope
loop
pop
or
sahf
push
add
xor
ret
mov
scas
push
scas
sub
call
out
lods
notb
mov
lock
lcall
add
js
inc
ds
test
pop
sub
addb
subb
push
push
inc
mov
mov
cwtl
xor
loop
call
sbb
lret
les
adc
adc
fdivs
add
bound
xor
test
xchg
daa
pop
jne
ret
sbb
das
pop
je
mov
movl
cmp
push
mov
inc
pop
lds
mov
addl
dec
push
in
mov
push
cmc
xchg
outsb
sub
clc
lds
xchg
imul
cmp
add
and
pop
fisubrs
pop
cwtl
ds
jecxz
dec
push
mov
dec
inc
or
sarl
out
xchg
insl
dec
jp
mov
and
mov
xchg
push
stos
sub
adc
mov
adc
adcb
pop
fucompp
inc
xchg
mov
sub
jbe
loopne
pop
sbb
xchg
imul
push
mov
or
add
insl
xchg
push
inc
sbb
movsl
push
pop
or
fsubs
xor
pop
mov
push
cli
fwait
pop
imul
adc
idiv
pop
mov
jl
es
sbb
cltd
mov
inc
add
push
filds
push
es
or
psubusw
pop
roll
cmp
fdiv
mov
xlat
das
fsubs
mov
jo
cmp
push
int
movsl
cmpsb
outsl
sub
mov
sub
faddl
or
ljmp
pop
adc
sahf
push
out
xchg
cmp
mov
pop
cmp
or
shl
mov
mov
and
push
mov
jb
call
add
jle
data16
push
sub
enter
insl
loop
aam
mov
add
mov
xor
inc
shr
fstp
test
sbb
cltd
mov
push
ror
jnp
mov
pop
cmp
xor
mov
and
movsl
push
dec
sub
dec
xor
mov
dec
notl
mov
lds
mov
fwait
ret
jl
orb
aad
sub
and
lock
ret
push
fnstcw
popf
stos
mov
dec
cmp
ret
lcall
sbb
cmp
pop
or
or
jb
sbb
and
mov
les
push
bound
stc
pop
mov
aaa
or
sbb
unpcklps
adc
pop
mov
adc
lods
and
lds
pop
insb
jle
xchg
shrb
mov
cmpl
mov
gs
or
mov
sbb
xchg
jge
dec
dec
adc
fsubs
add
test
or
jle
or
or
fcompl
fmul
lea
into
jge
push
fdivrl
int3
outsl
mov
jbe
movsb
adc
or
out
nop
dec
sub
push
clc
lret
pop
cs
pop
gs
ret
and
mov
inc
inc
out
int3
scas
add
adc
pop
in
mov
pushf
movsl
div
das
inc
inc
dec
xchg
mov
cmp
test
cwtl
lahf
mov
fldcw
cs
ret
bound
adcl
test
jle
les
push
sub
push
ficoml
adc
xchg
sbb
inc
jae
aam
leave
pop
loop
mov
std
je
test
cmc
sahf
jecxz
fistl
lahf
icebp
dec
inc
dec
sub
das
push
cmp
mov
or
sahf
xchg
sbb
xchg
mov
adc
mov
mov
xor
fs
nop
lock
roll
inc
add
pop
ret
push
jecxz
lahf
ret
lahf
jmp
scas
adc
and
pop
loop
cmp
scas
dec
jnp
adc
mov
inc
mov
xor
dec
and
in
pop
and
vminsd
adc
shr
clc
jnp
jmp
cmpsl
and
fimull
stc
iret
js
mov
push
sub
or
orb
fwait
jmp
fwait
mov
loopne
in
leave
outsb
xor
mov
stos
sbb
aam
pushw
mov
loope
dec
fcompl
xchg
dec
jle
fcmovu
scas
icebp
sahf
inc
leave
cmp
mov
popa
fcompl
pop
sbb
arpl
pop
data16
sub
clc
inc
outsl
xchg
pop
pop
cld
es
arpl
pop
or
pop
inc
test
pop
cwtl
addr16
jecxz
stc
addb
add
cmpsb
clc
int
xchg
dec
xchg
cmc
push
add
clc
mov
pusha
pop
rcll
and
push
add
inc
inc
sub
lea
clc
mov
addr16
cmp
dec
aad
fistps
add
or
inc
hlt
push
pop
xor
add
inc
popf
icebp
test
adc
pop
fwait
mov
ret
test
js
test
mov
xchg
fmul
dec
sbb
std
xchg
push
xor
or
insl
test
scas
cmpsb
mov
inc
cmp
sub
mov
cmp
pusha
or
and
nop
loope
pushf
mov
adc
jmp
dec
int3
movb
sbb
lcall
push
mov
jae
xor
add
out
outsl
idivb
pop
push
xor
xor
insb
je
or
sbb
or
cmp
or
jno
or
or
or
int
or
mov
mov
out
mov
test
fnsave
jmp
xor
xchg
ret
lods
arpl
adc
sub
or
outsl
jp
fmul
add
and
xchg
test
rcrl
sbb
rcll
fisttpll
sbb
fcoml
xchg
pop
fbstp
push
jnp
gs
fs
or
add
pop
or
test
leave
pop
cmpsl
ret
push
cmp
fisttpl
aam
lock
xor
into
or
adc
mov
inc
mov
imul
push
nop
xchg
fidivrl
inc
pop
inc
push
cmp
clc
xor
jne
add
stc
or
outsl
mov
xchg
loope
push
or
push
and
dec
jae
fldt
imul
movsb
adc
jns
inc
in
cmp
lcall
out
mov
sub
aaa
and
add
dec
jb
faddp
iret
xchg
push
mov
push
repnz
adc
lods
dec
dec
popf
lahf
jp
lods
jl
sub
mov
jmp
test
push
inc
xchg
mov
xchg
jg
pop
in
lods
xchg
mov
lret
push
jl
mov
stos
mov
mov
cmc
sbb
jmp
insl
shrb
pop
faddp
gs
mov
cmp
jmp
sub
jecxz
pop
add
mov
or
xor
cmpsb
or
dec
aaa
cmp
cwtl
cmp
jne
outsb
imul
push
stos
mov
test
mov
jl
hlt
decl
adc
pop
negl
mov
out
loope
mov
jp
cmp
insb
ret
cmp
sbb
orb
adc
lods
cmp
imul
push
lret
lods
iret
sbb
ret
sub
call
movsl
jbe
sub
jmp
add
mov
lods
xorl
adc
cmc
push
lcall
xorl
inc
jmp
adc
out
mov
xchg
adc
sub
mov
in
xlat
jb
in
movsl
outsl
fwait
jg
fwait
cmp
mov
mov
jo
shrl
ja
cs
cmpsb
mov
inc
daa
jae
rcrb
fildll
jb
cmpsb
aas
shrb
sbb
or
imul
jl
jb
clc
push
stc
cmp
jae
addr16
jecxz
mov
hlt
stc
std
fisubrs
cmpsb
or
ficoms
lcall
aaa
push
mov
pusha
ds
inc
lock
mov
int
xchg
mov
lods
mov
stc
lret
scas
movsl
pop
adc
dec
daa
jp
push
jp
inc
pop
js
jle
cmc
mov
js
cmp
jmp
lea
sbb
xor
inc
xor
out
mov
leave
movsb
out
cmp
data16
mov
fsubrs
lods
pushl
cs
adc
pop
push
xor
idivl
cmovs
mov
xor
idivb
subl
sbb
inc
das
xchg
in
das
cmc
mov
mov
mov
pslld
push
aad
ja
jb
and
adcl
pop
push
in
rorl
push
xchg
dec
jg
or
cmc
sbb
mov
enter
sub
aad
ds
jne
fs
notb
roll
in
and
and
sbb
fld
test
sbb
icebp
into
add
out
out
pop
popa
std
xor
or
lock
stos
mov
jecxz
cld
pop
cmc
pop
lds
jno
loopne
stos
ja
and
fs
shl
std
stos
lret
jns
test
rorl
mov
sbbb
push
jbe
cmp
sti
mov
push
repz
lock
xor
bound
sub
xor
jns
xor
sub
stos
mov
cmp
xchg
add
cld
nop
in
mov
add
pop
bound
jae
cmp
mov
stos
adc
inc
popf
xadd
or
push
push
xor
shl
fcmovu
mov
hlt
repnz
ret
fs
push
xchg
lret
cmp
cmpsb
pop
mov
outsb
or
push
and
jmp
cwtl
test
push
int3
mov
sbb
mov
pusha
pushw
mov
sahf
icebp
cmpl
cmpsb
subl
fisttpl
push
movsl
add
shrb
insl
adc
xchg
xor
scas
ds
leave
sub
mov
insl
outsl
mov
popf
cld
mov
sub
jb
xor
jno
mov
mov
inc
into
fldenv
cltd
inc
mov
hlt
les
adc
movsb
out
repnz
adc
xor
xlat
add
scas
repz
push
and
out
mov
std
or
daa
cwtl
imul
push
sub
scas
mov
fistpl
and
mov
lret
inc
loope
or
inc
adc
jp
xchg
adc
movsl
int
xor
ffree
cmp
loope
psrld
mov
out
fisttpll
and
xchg
add
mov
nop
pop
dec
sub
jl
sub
incl
insb
push
fistpll
and
aam
rclb
mov
jnp
push
icebp
jo
mov
fbld
movsl
cmp
mov
int
or
addl
xchg
or
in
sbb
notb
rclb
pop
lods
mov
inc
cmp
stos
test
adc
mov
fldl
and
and
pushf
dec
fildll
fstps
sub
int3
pushf
adc
xor
xchg
imul
lock
sub
mov
imul
into
push
and
sub
sbb
test
sub
test
scas
push
adc
stos
pop
sub
pop
test
fs
imul
mov
cmp
int
sub
repnz
arpl
fstl
aas
cwtl
mov
fldcw
jmp
les
pop
rcrb
dec
xor
ss
enter
lods
push
aad
icebp
dec
cwtl
xchg
push
or
sarb
fwait
js
mov
in
and
lds
or
pop
test
adc
out
cltd
inc
lret
push
dec
fdivrs
and
and
and
lock
fs
out
sub
shll
pop
mov
popa
sbb
lock
lea
fcomp
mov
in
bound
in
mov
or
repz
lea
mov
insl
inc
subl
dec
ss
lock
mov
or
push
nop
inc
pushf
cld
repnz
mov
sub
lahf
int
jp
movsb
addb
mov
inc
mov
jno
in
jbe
jle
bound
pop
enter
dec
inc
or
or
adc
js
es
aaa
push
loop
nop
adc
or
fldl
inc
cmp
pop
cld
fdivrp
pop
mov
or
dec
cltd
sbb
fadds
gs
ret
xchg
test
xchg
pop
loop
dec
test
leave
ret
stos
xchg
xchg
sub
in
subb
adc
sbb
or
or
dec
cmp
mov
jo
xchg
inc
mov
push
popf
pop
popf
xor
imul
cli
pop
mov
mov
inc
ret
pop
mov
fistpl
mov
nop
lcall
sub
orb
movsl
stc
xchg
xor
clc
cmp
sahf
addr16
and
xor
mov
mov
jmp
cwtl
inc
jp
xor
ds
pop
movsb
add
jmp
sbb
adc
cmpsb
xchg
cmp
in
cs
enter
test
add
push
insb
or
jns
cmpsl
ljmp
movsb
test
movsl
mov
jmp
pusha
push
out
in
cmpsb
jne
repnz
ljmp
sbb
repz
xlat
call
gs
sbb
mov
pop
sbb
dec
mov
inc
jnp
mov
pop
int3
lock
out
sbb
pop
das
push
jecxz
rolb
mov
add
sbb
sbb
aas
adc
sbb
ret
in
jnp
sbb
and
test
sub
mov
fdivs
inc
aam
dec
in
repz
sub
je
push
xchg
adc
enter
int
in
ljmp
fst
lcall
push
cmp
xchg
dec
ljmp
pop
outsl
jno
ds
cltd
pop
jne
lods
popf
fsubl
and
mov
xor
and
jge
in
sub
mov
scas
out
pop
das
das
add
fstpl
das
fildl
xchg
inc
incl
scas
or
xchg
lahf
imul
bound
stc
jg
xor
fs
and
pop
or
adc
mov
movsb
adc
and
clc
sub
dec
mov
and
mov
out
sbb
jle
into
mov
lcall
dec
stc
loop
ds
cmp
mov
cmp
cmpsb
es
testb
fsubs
xlat
stos
gs
jmp
xor
sbb
fldt
xor
sub
lods
rcrb
pop
dec
jnp
adc
xchg
cltd
push
pop
ret
lret
ss
sub
mov
mov
dec
add
xor
int
sbb
lahf
dec
push
xchg
popf
test
xchg
xor
and
cmp
pop
hlt
je
ja
sbb
push
mov
or
insl
outsl
sub
push
in
pop
xor
in
movsb
nopl
sar
xor
and
mov
in
ljmp
lds
push
pop
push
mov
sahf
jne
cmpb
xchg
dec
xchg
int3
or
xchg
mov
fstps
pop
daa
xchg
in
fbstp
aam
mov
cwtl
xor
into
fnstcw
mov
mov
jnp
test
jle
pushf
cmpsb
adc
aas
imul
pop
dec
inc
mov
movsl
pusha
fnstenv
repnz
bound
lret
pop
adc
decl
lahf
ret
fildll
sub
icebp
inc
dec
sbb
movsb
or
mov
sub
pushf
xchg
sbb
adc
mov
sbb
pusha
mov
shll
xor
xorb
int3
and
sbb
jae
sarb
mov
sub
movsl
add
imul
adc
loopne
movb
cltd
dec
jg
pop
nop
dec
out
popa
rol
jbe
pop
mov
test
lods
addr16
popa
mov
pop
insl
pusha
fidivrl
mov
fbld
sub
test
mov
jmp
mov
stc
shrl
test
sarb
pushl
call
add
stc
jno
pop
push
test
pop
clc
sahf
faddl
add
aaa
dec
outsl
adc
rcl
inc
sbb
arpl
jmp
and
mov
daa
adc
and
sbb
push
pop
jb
cli
mov
dec
dec
js
mov
jns
add
inc
sub
daa
add
es
xor
stos
cmc
xor
lea
mov
sti
fiadds
pusha
sub
ja
add
rorl
test
in
cmp
xlat
outsb
lock
rorb
push
cltd
pop
adc
and
mov
mov
push
rclb
lret
pusha
inc
pop
xor
add
call
inc
jle
rcrb
pop
and
adc
or
sub
popa
jp
push
xor
dec
xor
mov
jbe
mov
stc
insl
out
insl
push
test
cmp
jno
cmp
mov
dec
pop
call
adc
jo
push
insl
push
push
jecxz
in
stos
push
dec
sub
dec
loope
sub
dec
lock
sbb
pop
test
jne
cltd
iret
and
mov
rcl
mov
addb
lret
sbb
inc
push
xchg
push
mov
mov
cmp
mov
ret
add
sbbw
xlat
xor
push
stos
daa
dec
cli
rcr
inc
fidivs
ficoml
call
xchg
push
popf
push
add
imul
aad
xchg
imul
mov
loopne
mov
dec
inc
mov
sbb
xchg
mov
mov
jnp
inc
sbb
and
movsb
sub
je
enter
xchg
jg
scas
ror
pop
repnz
int
or
add
stos
pop
fsubrl
jo
aad
jl
arpl
jle
pop
xchg
in
push
mov
sub
mov
or
nop
mov
dec
bound
jae
incb
jge
jo
add
dec
int3
dec
sbb
or
pop
lods
xchg
mov
dec
flds
push
lock
adc
dec
push
or
mov
push
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
or
mov
pop
popa
rcrb
nop
stc
lods
push
pop
jne
lret
cltd
mov
fs
jp
mov
in
mov
push
add
scas
inc
ret
out
pop
dec
push
addb
test
adc
sahf
jecxz
mov
jnp
cmp
mov
fdivr
inc
lds
cwtl
pushf
dec
cwtl
popf
cwtl
add
pusha
pand
loop
js
cld
cwtl
cmpsb
mov
add
push
sub
in
popf
sti
mov
insl
ret
mov
adc
jge
mov
mov
ss
and
mov
fildll
jmp
adc
insl
in
pop
shrl
jb
push
pop
xchg
push
xchg
pop
fs
inc
test
data16
mov
adc
mov
es
aas
jne
mov
cmpsb
pop
sub
sti
inc
fmull
scas
adcb
es
inc
add
call
inc
mov
pop
mov
xchg
mov
add
sub
rcr
imul
mov
fistpl
xchg
cmp
add
fxch
push
xchg
shlb
out
xchg
das
mov
jmp
push
rorl
inc
mov
fldcw
test
dec
cmp
cmpsb
lds
xchg
adc
or
push
subl
sbb
sbb
ret
sahf
dec
insb
dec
out
out
sbb
lahf
sub
fnstsw
adc
loopne
outsl
aas
sub
subl
and
xchg
adc
or
jge
mov
insb
jmp
pop
flds
sub
js
and
data16
les
jnp
mov
mov
sti
sub
cmp
mov
ljmp
dec
movsb
js
les
std
lret
xchg
les
stos
fstps
rep
mov
push
xchg
mov
movsl
jl
pop
mov
int
test
cmp
pusha
xchg
std
xchg
mov
mov
jecxz
sub
ds
call
insl
cmp
jne
inc
add
lahf
cmpsl
push
fwait
add
call
cltd
dec
xchg
mov
stos
add
and
or
andl
mov
inc
fmulp
inc
pop
out
cltd
sub
stos
jg
push
clc
in
lcall
xor
rolb
and
shr
test
in
xor
aaa
icebp
int
adc
popf
mov
cmp
pop
fwait
loopne
rcr
inc
mov
cmp
fsubrs
pop
push
insl
pop
mov
xchg
stos
fstpl
inc
lds
dec
out
and
dec
jg
add
and
sti
pop
test
aas
sub
xchg
cmc
fwait
aam
pop
mov
mov
inc
sbb
cwtl
popa
xchg
or
loope
cmpl
cmp
adc
pop
enter
jnp
dec
ja
push
mov
arpl
add
lds
fnstcw
in
push
ffreep
add
mov
stos
cwtl
pop
mov
ljmp
cltd
or
daa
pop
xchg
sub
stos
mov
cmp
push
inc
arpl
jmp
lock
push
adc
fmull
outsb
or
jmp
pop
mov
dec
mov
ljmp
das
xchg
cmpsl
adc
sti
add
lods
xorb
fcoms
cmc
cmp
inc
adc
out
cltd
lret
mov
sti
pop
ja
lods
push
in
loopne
rcl
and
fistpl
lea
lret
sub
je
rcl
sub
sbb
fcomi
jns
in
call
mov
js
pop
fs
or
movsl
inc
andl
scas
inc
ss
hlt
gs
sbb
cmp
stos
xchg
int3
adc
jne
jbe
mov
or
stc
jmp
xchg
push
loop
test
inc
xchg
mov
je
rorb
sub
sti
cwtl
fmuls
loopne
insb
mov
lods
cltd
pop
in
sub
or
mov
call
rorb
sbb
cltd
outsb
push
mov
loop
out
in
cmpsl
cmp
adc
inc
mov
sbb
insl
pop
ss
pop
rorl
ss
dec
push
and
lea
loop
jge
or
jl
cltd
ss
out
mov
inc
ss
nop
fsubs
mov
repnz
pop
dec
cs
xor
aaa
loop
sbb
dec
and
int3
xchg
icebp
sbb
subl
mov
aas
les
push
jo
dec
mov
aaa
add
add
dec
fisttpll
pusha
mov
lret
sbbl
push
sub
cmpb
movb
or
inc
hlt
inc
cmp
jne
xlat
pop
in
outsb
and
stos
cs
dec
mov
and
mov
xchg
mov
pop
and
push
xchg
in
mov
xchg
xor
jp
adc
mov
lods
hlt
sub
add
and
lahf
adc
xchg
aad
jmp
adc
fxam
mov
jge
push
int3
lock
sahf
mov
outsl
pop
and
jle
rclb
cmp
and
bound
incb
cmp
pop
jmp
cmc
mov
adc
fnsave
jg
pop
fnstsw
dec
xor
xor
daa
mov
cmc
out
cli
push
xchg
sbb
cmpsb
jne
jae
jno
pop
cltd
xchg
scas
sbb
enter
mov
xlat
fimull
mov
xchg
mov
jae
xchg
popa
in
jg
gs
insb
pop
lea
push
fistps
in
xor
rcl
inc
jp
rorb
push
fstpl
cmpsb
into
xor
cld
int
cmp
rorl
inc
ffreep
out
xor
mov
xchg
fistl
inc
jne
adc
das
add
cs
mov
jg
jbe
mov
and
push
inc
push
jecxz
ds
push
mov
fstpl
icebp
fstps
push
ss
xor
arpl
and
frstor
pop
xlat
subl
je
dec
xchg
mov
adc
dec
push
js
dec
test
stc
or
pop
inc
sti
inc
mov
mov
mov
dec
fldcw
pop
jmp
inc
push
adcl
adc
test
or
sbb
xchg
mov
jecxz
pop
xor
dec
cmc
mov
xchg
dec
xchg
mulb
pop
mov
mov
add
lret
arpl
cwtl
pop
sahf
dec
dec
xor
and
push
sbb
sbb
ljmp
in
out
sub
pop
jg
mov
or
cmp
cwtl
scas
in
aaa
xor
sub
adc
pop
leave
cmp
sbb
lea
pop
xchg
loopne
sbb
xor
mov
push
testl
add
addl
call
cmc
xor
dec
outsb
cwtl
fisubrl
mov
cmp
inc
adc
push
pop
in
ja
xchg
mov
bound
adc
inc
xchg
pop
ljmp
dec
jbe
in
xor
mov
in
pop
cmp
mov
loop
dec
in
and
dec
fwait
adc
jg
add
loope
or
jge
add
test
mov
fld
fcoms
jae
lea
or
aaa
fcoms
jg
iret
dec
xchg
dec
dec
jo
adc
addr16
fnstsw
sub
gs
test
sub
leave
aad
loope
cmp
movsl
iret
cmp
call
fwait
hlt
jae
inc
dec
adc
int3
scas
dec
xorb
inc
dec
jo
pop
clc
orb
insl
sbb
imul
or
sub
das
jl
push
mov
mov
fldl
xchg
xor
mov
jl
pop
sub
aam
inc
xor
or
ss
add
xchg
ret
jl
int
inc
dec
pop
cmp
lahf
xor
push
jae
push
pop
scas
or
adc
dec
idivb
and
mov
repz
pop
sub
dec
jne
xchg
addl
mov
pop
inc
cmp
les
aam
out
mov
inc
icebp
xchg
add
mov
lods
iret
rcrb
jp
cmp
insb
pop
mov
mov
dec
or
popa
pop
les
cltd
outsb
cmp
mov
or
dec
jo
cld
hlt
das
xchg
ds
je
sti
xchg
pop
adc
push
cwtl
xchg
shrb
dec
jecxz
inc
add
mov
push
insl
dec
cmp
cs
jae
nop
push
pop
pop
popa
xor
and
outsl
mov
fidivl
shll
cmp
insl
add
adc
pop
cmpsl
enter
ds
daa
xchg
stos
lods
lahf
out
cli
outsl
repnz
psrlq
and
xchg
test
rcr
arpl
aaa
push
pop
scas
fldl
in
or
out
inc
or
mov
je
pushf
jb
aam
inc
test
or
mov
outsl
sub
scas
pop
cwtl
sub
data16
shrl
xor
lahf
call
adc
icebp
int
xchg
movsl
shll
icebp
adc
loopne
frstor
sahf
and
dec
jo
outsb
xor
adcl
inc
or
and
or
mov
push
inc
pop
add
xor
adc
add
xchg
scas
fcomip
jne
stos
out
xor
roll
xor
or
xorl
pop
jmp
fwait
lea
lcall
fistpl
jb
xchg
dec
mov
repz
xor
and
push
scas
xor
dec
and
mov
jo
dec
lods
sbb
arpl
leave
aam
push
int
mov
loopne
mov
repz
sub
mov
cmp
fldpi
repnz
int3
inc
stc
push
inc
popa
fimuls
shlb
jle
shlb
sbb
dec
push
sub
loope
jmp
mov
std
andb
fldcw
mov
sbb
ss
dec
xchg
lods
or
out
daa
sbb
pop
and
fdivrs
xchg
enter
fcmovb
xor
mov
test
mov
xchg
scas
pushl
insl
cltd
mov
jle
into
aad
xlat
cld
daa
jle
adc
inc
movsb
and
out
pop
lahf
in
fldcw
lcall
xor
push
out
movsb
dec
push
dec
insb
pop
shrl
jnp
xor
in
out
lods
ret
or
mov
test
ret
lcall
mov
nop
scas
cmp
sub
clc
mov
mov
xchg
adc
cmpsl
push
jge
sub
icebp
je
xchg
ficomps
mov
xchg
push
pop
add
xor
cmpl
daa
cmp
mov
fnstenv
push
insb
dec
lods
pop
mov
sbb
daa
fidivs
xor
sbb
ljmp
mov
or
cmp
add
add
push
repz
scas
int3
mov
inc
xor
or
test
popa
add
int3
jae
jle
mov
enter
insb
int
shl
jbe
jb
inc
cmc
dec
cld
mov
divb
inc
mov
adc
shll
jne
sbb
aaa
and
incl
loope
inc
imul
hlt
popa
xor
sbb
adc
xor
cmp
sbb
ficompl
fistpl
movsb
pop
loopne
pop
mov
fs
jmp
stc
bound
fucomip
or
sbbl
popf
mov
jmp
pushf
call
adc
repz
ret
out
mov
popf
mov
sub
push
test
or
mov
pop
adc
dec
movsl
iret
arpl
jbe
mov
repz
rcrb
in
adc
fadds
sub
negl
adc
push
inc
cwtl
int
sbb
and
xlat
mov
jbe
call
sbb
lods
inc
iret
adc
or
mov
aaa
cmpsb
lods
sub
pop
sbb
cs
or
sbb
daa
pop
pusha
ror
out
jmp
jae
jbe
mov
scas
cmpsb
xor
aas
out
aam
negl
arpl
cwtl
outsl
dec
push
dec
movsl
push
imul
aam
xor
xchg
stc
cmp
xchg
mov
cltd
cmp
push
push
cmpl
jl,pt
fistpl
or
bound
push
out
push
mov
sbb
and
leave
stos
cmp
jae
jle
cmp
mov
jge
or
sti
aad
mov
adc
sbb
mov
xchg
mov
adc
loope
cmp
test
and
imul
sbb
or
add
daa
cmp
dec
es
inc
mov
inc
adc
lahf
pop
cmp
stos
cmp
int
push
inc
pop
xchg
pop
and
out
rolb
je
or
mov
popa
outsl
sbb
cmpsl
xor
loope
lea
xlat
jo
or
sbb
mov
dec
or
out
cmp
push
mov
rcll
int
pop
mov
outsb
int3
add
pop
dec
xor
out
or
movsb
and
mov
mov
inc
movsl
and
aam
enter
push
pusha
pop
daa
push
sbb
jae
shll
inc
pop
aas
jns
roll
aas
std
ds
pop
rcrb
xor
jo
cmpsb
xchg
and
scas
fnstenv
add
pop
xchg
xor
jmp
lea
dec
xchg
push
sbb
mov
jb
icebp
movsl
je
loope
std
sbb
sub
inc
xchg
addr16
mov
cmpsl
cli
inc
lock
rcrb
fistl
popa
or
mov
xchg
sbb
jno
fisubs
pushf
add
or
pop
pop
adc
hlt
pop
pop
rcl
dec
ja
adc
lods
sahf
push
cwtl
push
movsb
fisubrl
bnd
jb
mov
arpl
mov
cmp
and
sub
rclb
das
push
xchg
mov
and
add
cmp
push
xor
lea
push
in
adc
cs
mov
lds
pop
lods
sahf
jecxz
dec
mov
add
sub
xor
fxch
jo
add
arpl
mov
bound
addr16
pop
subb
sub
sbb
xchg
imul
cmpsl
pop
xor
lock
cld
xorl
sub
lret
insb
push
cwtl
ret
iret
or
adc
inc
dec
int3
shlb
lcall
dec
jp
idivl
mov
loope
and
insl
aas
test
lcall
call
mov
xchg
mull
dec
insb
mov
test
cli
jo
xchg
mov
das
testl
pop
popa
push
sub
mov
jne
imul
adc
ret
ja
pusha
hlt
jecxz
ret
xor
sub
js
cltd
inc
push
mov
stos
int3
ss
ss
orb
pop
and
mov
push
mov
aad
sub
push
out
xor
and
insl
shlb
aaa
sub
dec
and
in
xor
and
popf
jo
ss
mov
xor
fcmove
jne
sbb
mov
sub
push
clc
mov
mov
mov
idivl
and
sub
repnz
fisttpl
out
sub
inc
pop
cwtl
out
sbb
jg
mov
jg
pop
cmc
dec
mov
scas
xchg
cmp
idivb
setnp
push
xchg
pop
ret
rcll
dec
dec
ja
hlt
cmp
push
leave
inc
sbb
push
add
ljmp
test
imul
push
jnp
aas
cmp
mov
fisttps
mov
lret
cmc
xor
push
pop
test
sti
sub
inc
jno
sub
sbb
in
into
cwtl
movsb
dec
sbb
inc
push
add
stos
pop
jp
xchg
nop
mov
das
xor
pop
sbb
mov
test
sub
mov
dec
fldl
ret
mov
push
call
call
nop
iret
outsb
fcomi
aad
mov
lahf
js
mov
cmpsl
sarb
fimuls
gs
add
test
int3
push
sahf
and
jb
or
mov
push
cmp
cmpsl
inc
sub
insb
daa
jb
mov
xlat
mov
sub
lods
aad
push
inc
and
ret
jns
stc
sub
dec
pop
push
cmpsl
push
mov
insl
test
sarb
rol
stos
pop
xchg
xchg
mov
addr16
mov
repz
xor
adc
jmp
xor
xchg
push
inc
xchg
mov
jle
aam
pop
inc
fnstcw
and
ret
addb
sub
lahf
push
or
lret
in
mov
add
inc
cmp
push
popa
mov
sbb
cmp
add
xchg
ret
inc
lea
je
sbb
in
inc
cmp
and
mov
or
xor
repz
mov
in
cwtl
mov
add
ljmp
aad
or
mov
jnp
jecxz
dec
mov
sahf
ret
jp
fnsave
inc
movsb
movsl
inc
shl
call
inc
adc
push
fstpl
ljmp
mov
pop
lea
lret
dec
fcoms
adc
movsl
andl
cmpl
mov
es
inc
cmp
bound
cli
or
ljmp
lea
add
inc
inc
xchg
pushf
bound
xchg
stos
pop
push
xor
jns
sbb
push
repz
stos
add
cmp
adc
stos
dec
test
mov
cwtl
mov
mov
or
rcll
xchg
mov
sub
add
push
outsl
idivl
jl
lahf
lcall
xchg
and
pop
dec
inc
test
sti
daa
cmp
mov
ret
in
or
test
movsb
rcrb
xchg
mov
jmp
bound
testb
and
es
loope
sbb
jecxz
cltd
adc
fists
xor
lock
nop
add
orl
fcmovnu
push
movsb
sub
mov
fs
lcall
fmul
mov
mov
and
jae
adc
adc
cmpsb
xchg
clc
addr16
mov
mov
add
cmc
cmc
fisttps
cli
aaa
push
es
pusha
popf
jo
xor
push
sub
inc
push
sbbl
inc
xchg
int
mov
mov
and
addr16
pusha
jnp
mov
mov
lea
in
xchg
insb
movsl
mov
mov
push
jmp
pop
daa
adc
pop
cwtl
or
jle
sbbl
out
imul
je
mov
cmp
outsb
adc
adc
stos
push
lea
leave
cld
pop
int
xlat
inc
xor
inc
pop
imul
or
fstpt
out
addr16
leave
add
pop
xor
mov
dec
adc
aas
xor
cwtl
adc
ljmp
fs
mov
xchg
cmpsl
ljmp
test
loop
inc
jecxz
xchg
xor
jnp
loopne
push
lds
jecxz
arpl
or
loope
mov
pop
cmc
xor
loopne
inc
jl
mulb
sub
pop
sbbl
adc
add
cmp
repnz
push
sbbl
push
jmp
sbb
insl
aad
cld
fisttpl
repnz
loop
test
xchg
mov
mov
sbb
hlt
lahf
ja
pop
movsl
int
inc
stos
push
mov
dec
idiv
iret
pop
and
push
sub
enter
addb
pop
loopne
mov
add
xchg
sbbb
mov
or
add
lea
test
rorl
dec
leave
sub
and
jo
dec
xor
es
mov
je
push
cmp
mov
icebp
mov
aas
addr16
int3
ficoml
mov
insb
iret
addr16
iret
mov
or
add
mov
add
dec
adc
or
and
cwtl
or
je
add
sbb
test
sbbl
fisttpl
mov
mov
cli
hlt
and
xor
mov
push
out
test
loope
jae
rolb
xlat
in
jae
dec
daa
jge
mov
es
and
imul
mov
lcall
or
std
fcmovnbe
pop
add
ret
jns
push
jp
ja
insb
xor
dec
mov
inc
xchg
test
jne
jmp
arpl
pusha
mov
push
jle
adc
jns
hlt
xchg
cwtl
xchg
bound
fcmovnb
mov
push
cmc
adc
rorl
sbb
pop
mov
icebp
rclb
daa
fs
fmull
dec
dec
cmc
pusha
out
mov
stos
loopne
in
mov
jns
or
push
dec
ret
pop
pop
das
pop
mov
xor
stos
sbb
adc
repz
jle
or
stc
mov
mov
xor
lods
jno
ljmp
imul
rcrb
push
movsl
mov
hlt
je
cmc
jl
ds
stc
loopne
mov
in
ret
sbb
gs
sub
repnz
or
mov
dec
push
sarb
jno
int
and
lods
sbb
or
loope
sbb
push
xchg
push
add
loopne
out
mov
mov
dec
jnp
adc
mov
bound
mov
test
sbb
jne
or
push
xor
xor
loope
data16
cwtl
mov
hlt
pop
sar
lret
pop
pop
push
xchg
sub
or
inc
mov
sbbl
and
mov
lods
add
jp
mov
stc
or
bound
ja
inc
push
jecxz
push
fstp
loop,pt
or
in
sub
daa
hlt
push
pop
mov
sarb
push
xchg
or
into
xor
xchg
lock
pop
inc
sahf
lahf
je
xchg
pop
das
cmp
notl
daa
stos
insl
aam
test
inc
or
lcall
dec
cmpb
test
fcoml
cmp
rorb
pop
cmp
add
test
cmp
adc
icebp
jnp
shll
push
push
and
sbb
imulb
mov
fucomp
fiaddl
dec
aam
mov
int3
test
sub
pop
ss
push
push
popf
cmpsl
aam
cld
test
popa
in
pop
mov
daa
xor
pop
push
mov
mov
jle
mov
lds
or
je
cmp
jle
xor
aad
mov
mov
jmp
add
leave
cmc
in
scas
mov
clc
nop
aaa
adc
jle
js
mov
xchg
inc
lcall
sbb
rol
jle
imul
jmp
and
aam
xchg
pop
je
pop
in
and
mov
push
adc
dec
cmp
dec
fistl
out
popf
dec
mov
mov
mov
ret
imul
test
xchg
ljmp
mov
gs
pop
lret
mov
dec
jns
inc
cmp
jb
sbb
into
pop
sbb
jae
scas
mov
and
jge
fisttpl
lea
sti
adc
adc
cmp
dec
fnstsw
pop
shlb
sbb
fsubrs
sbb
push
push
sub
sub
pop
add
gs
btr
xchg
add
je
xchg
push
jge
arpl
xchg
sbb
mov
jle
jo
mov
jl
sub
mov
cmpsb
mov
pop
push
mov
mov
dec
out
repnz
sbb
int
nop
lret
dec
push
jno
jle
sbb
cmc
cmp
out
ficoms
fstpl
cmp
leave
jb
mov
jnp
icebp
movsl
jbe
hlt
cmp
pop
jmp
xorl
ret
out
inc
call
jecxz
int
add
fsubs
pop
popa
sbb
into
out
cs
pop
movsl
jno
sar
dec
mov
daa
cmp
xchg
jno
into
cmpsb
jne
cltd
pusha
test
call
in
cmpsb
push
in
arpl
jb
ret
jno
and
es
call
out
jmp
pop
add
popf
loopne
push
andl
add
outsb
leave
sub
ja
xchg
ja
fcoml
sub
mov
lret
in
sbb
ds
cli
lahf
pop
inc
scas
pop
push
test
mov
movsl
rolb
xor
adc
mov
sbb
and
add
sub
jae
adc
imul
inc
out
inc
daa
rcrb
stc
mov
jbe
sbb
jle
xchg
and
cmp
dec
bound
lock
or
mov
sub
push
mov
mov
add
add
scas
sarb
cwtl
mov
xor
pushf
mov
std
mov
out
and
jnp
inc
outsb
popf
call
jno
pusha
je
test
sbb
mov
pusha
cmpsl
xor
add
mov
adc
add
fnstcw
adc
mov
jo
sub
jo
push
stos
xchg
in
daa
push
pusha
dec
pushf
lret
lds
xchg
outsl
dec
bound
mull
or
xlat
pop
mov
mov
cld
aad
push
jo
test
dec
sub
or
lcall
mov
es
jno
xor
call
jmp
cmp
push
notl
xor
repnz
mov
sbb
lea
stos
jp
shl
fidivl
loopne
repz
pop
mov
mov
adc
xchg
cmp
dec
add
out
mov
in
and
fisttpl
push
jmp
lahf
cmp
dec
notb
mov
push
fstpl
xor
inc
mov
and
sbbb
lea
jp
sbb
stc
shl
or
mov
in
arpl
out
pop
cmp
xchg
jnp
push
popf
xchg
rcrl
scas
push
sar
jle
mov
jne
cli
inc
js
gs
push
out
sub
movsl
lods
pop
mov
iret
push
les
pop
dec
das
dec
mul
jo
mov
ss
iret
xor
nop
inc
sahf
mov
lods
scas
sbb
shrl
and
aas
ret
int3
push
fcomps
jnp
mov
fstps
and
xor
jecxz
sub
nop
fs
xchg
jno
js
mov
repnz
or
or
into
push
in
push
push
mov
les
dec
icebp
daa
andb
out
test
adc
cmp
arpl
add
sub
xchg
pop
out
scas
in
test
and
jle
push
aas
sbb
out
insb
gs
mov
int3
sub
inc
lcall
sub
xchg
cmp
orb
lahf
pushf
mov
lret
xchg
int
add
and
xor
movsl
xlat
mov
stc
loop
xorl
repnz
or
pusha
repz
aas
mov
flds
inc
cmpsl
push
mov
inc
dec
add
push
ss
stc
gs
mov
popf
fisttpl
xchg
push
pop
shlb
xchg
lcall
xor
lret
clc
add
inc
inc
push
ja,pn
jae
xor
push
mov
or
leave
push
dec
shrb
mov
mov
xor
outsb
data16
mov
mov
addl
cmp
pop
inc
add
push
loope
stos
fdiv
test
or
sub
jecxz
fisttps
out
test
outsb
call
stos
aad
lret
mov
fdivrl
adc
mov
add
lret
lods
mov
mov
pop
js
les
adc
frstor
lret
iret
int
jb
inc
fidivrl
mov
out
test
mov
fcoms
bnd
xchg
test
xchg
sub
out
out
fsubrs
movsb
movsl
notb
rorb
rolb
or
xor
lods
out
imul
out
add
cs
xchg
lret
fs
add
or
inc
mov
ja
shll
xchg
pop
mov
inc
repz
rolb
daa
xor
cmp
stos
mov
repz
sub
call
xchg
push
adc
mov
in
faddp
ret
mov
jle
jne
test
movsb
mov
or
add
roll
mov
sub
loop
das
ja
xchg
dec
cmp
pushf
stc
stos
arpl
push
pop
in
test
adc
inc
mov
cmp
pop
cs
xchg
and
cwtl
lcall
in
sbb
fucomip
add
xchg
pop
fisttpl
ss
cmp
push
pop
xchg
xchg
sub
mov
push
xchg
cmc
mov
xchg
dec
pop
notb
add
pminsw
fxch
sbb
dec
cmpsb
mov
leave
ja
out
in
bound
ret
mov
mov
push
sar
sbb
aaa
rol
jbe
jno
push
mov
fldenv
shl
in
shll
stos
push
lret
adc
pop
dec
int
fsubs
or
and
lds
xor
and
and
mov
cmp
add
rorl
jne
fdivrl
xchg
test
in
push
insb
xorl
mov
dec
or
outsl
mov
pop
or
cmp
les
std
mov
sub
mov
ss
icebp
xor
mov
adc
jmp
jecxz
add
imul
call
lret
add
shll
dec
jb
cld
push
xchg
lcall
mov
repnz
call
out
inc
push
adc
jb
idivb
xchg
dec
loope
stos
mov
fstpl
xor
js
into
xchg
sub
and
push
adc
ret
dec
insl
jg
mov
sbb
dec
mov
scas
mov
ljmp
popf
jge
rolb
lahf
inc
insb
add
add
push
fsts
jge
pop
add
shr
cmp
mov
pop
add
mov
inc
imul
mov
das
movsl
inc
push
pop
push
dec
push
ret
ficompl
mov
test
pop
adc
rorl
add
mov
mov
cmp
jne
xchg
rclb
push
adc
shrl
xchg
xchg
xor
inc
in
sbb
cmp
mov
sete
pop
pop
mov
pusha
jno
mov
xchg
xchg
cmpsb
mov
mov
xchg
idivl
lods
vhaddps
lcall
out
mov
les
ja
or
daa
inc
dec
xchg
dec
in
imul
xor
push
inc
and
inc
or
jmp
call
test
loope
mov
rolb
stos
fcoml
push
xchg
cs
adc
scas
add
sti
enter
or
jp
lret
xor
lods
push
loope
pop
out
and
gs
sti
pop
lret
sbb
cmp
lahf
push
sbb
mov
push
adc
add
mov
xchg
pop
daa
add
lods
mov
int
and
or
in
pop
mov
lret
and
jns
jle
sub
mov
mov
push
or
rorb
out
adc
mov
push
movsb
pop
repz
xor
ds
scas
popf
add
dec
jmp
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
adc
push
cld
popa
bound
bound
dec
cld
cmp
sub
lods
adc
gs
subb
cmpsl
in
mov
add
ds
mov
sbb
xor
mov
mov
nop
test
or
aas
in
test
push
and
pop
mov
xor
imull
outsb
gs
push
mov
mov
xor
cs
dec
cs
pop
push
sbb
ret
outsb
outsl
sub
lea
hlt
add
pop
or
inc
movsl
inc
add
clc
lea
out
dec
jge
jp
pop
mov
and
dec
pop
addl
mov
adc
mov
jo
out
sub
pop
bnd
pusha
ret
pop
mov
in
outsl
pop
loop
ret
andb
mov
shrl
mov
and
add
mov
xlat
js
mov
xchg
adc
cmpsb
jo
sbb
push
nop
fs
xor
push
ds
sbb
in
cs
jne
daa
sbb
insb
shl
jbe
xchg
mov
jo
inc
je
mov
push
mov
mov
pmaxub
sub
and
mov
out
push
neg
ljmp
sbb
loop
stos
leave
test
call
shll
and
add
xchg
dec
mov
lahf
test
outsb
call
lret
sbbl
sbb
xor
add
aad
pop
mov
add
hlt
cmpsl
mov
cli
xorb
lods
jno
mov
je
xor
into
clc
in
and
jno
push
ror
addr16
int3
add
es
mov
movsb
adc
loope
ret
xor
addr16
cmpsl
shr
adc
hlt
push
icebp
mov
xor
pop
stos
insl
aas
sbb
sub
stos
pop
pop
out
dec
in
shll
pop
sbb
out
push
sbb
clc
jg
cld
dec
frstpm(287
and
inc
cmc
adc
xchg
imul
mov
mov
xchg
and
leave
cmc
and
clc
mov
inc
aam
push
add
add
xchg
call
ja
andb
je
mov
out
push
pushf
fimull
test
mov
outsb
mov
aad
cld
or
mov
pop
xor
add
test
or
mov
out
lea
cmp
sahf
xchg
movsb
pop
push
shl
xchg
loope
push
push
imul
cli
jmp
xchg
loope
sub
sub
or
jmp
arpl
aaa
xor
and
or
lods
xchg
add
jnp
orb
cmpl
into
mov
mov
out
cltd
lds
push
cmp
and
imul
leave
xlat
cmp
ret
mov
jne
scas
shlb
pusha
fwait
out
jo
mov
and
inc
out
rclb
in
sbb
gs
push
fs
popf
cmp
ret
cld
scas
mov
imul
ret
xorb
inc
and
inc
inc
out
imul
ss
mov
lea
adc
out
and
cmp
or
push
mov
cltd
push
mov
ficoml
mulb
adc
xchg
inc
mov
xor
and
xor
inc
into
dec
cwtl
push
std
clc
aaa
ret
lret
and
mov
and
adc
dec
test
insl
shll
pop
cwtl
or
scas
push
jg
movsb
outsl
mov
jp
out
leave
stos
iret
push
faddl
lahf
xlat
cs
fstpt
iret
and
mov
add
and
mov
pop
fdivrl
lds
jns
inc
cmp
mov
mov
aad
add
cs
or
lret
push
insl
pop
test
gs
les
fwait
sarb
pop
test
mul
xor
or
mov
flds
call
sub
dec
ror
mov
push
cmp
test
subb
stc
sbb
or
jecxz
out
push
pop
push
lods
dec
mov
outsb
inc
add
outsb
pop
jp
push
es
jge
pop
cmpsb
int
sbb
insb
xor
fcoml
xor
adc
stos
lods
sbb
sbb
sub
lods
daa
outsl
cli
data16
push
loopne
les
xorl
or
inc
movsb
pop
sbb
cmp
imul
sub
data16
loopne
sahf
pop
insl
xor
mov
dec
test
mov
stos
mov
imul
xor
cwtl
and
jns
arpl
repnz
mov
lret
inc
sbb
ljmp
xchg
ficoml
loop
or
test
loope
or
push
xor
aaa
mov
mov
cmp
sar
cmpsl
jmp
mov
sahf
add
nop
adcb
mov
movsb
stos
ljmp
ficoms
sahf
lods
or
lods
sbb
aas
out
jle
mov
mov
lret
insb
dec
clc
adc
mov
inc
and
inc
cmpsb
adc
adc
rcrl
stos
cld
or
add
shlb
repz
cltd
mov
or
dec
loopne
push
fists
sbb
fidivs
aam
cli
sub
loopne
icebp
sub
jne
leave
aaa
xor
outsb
ljmp
inc
or
and
add
icebp
pop
scas
adc
pop
leave
cmpsl
out
ret
enter
test
add
stos
loopne
fdiv
icebp
test
adc
dec
out
add
repnz
pop
mov
xlat
popf
xchg
mov
cmp
add
popf
dec
sbb
inc
pusha
lcall
jp
pop
cs
sub
xor
loopne
imul
sbb
mov
imul
negb
lret
push
in
ljmp
ret
push
arpl
inc
pop
mov
ja
dec
push
fsubrl
mov
xchg
sti
std
inc
xchg
pop
inc
mov
sub
aaa
add
sbb
cmc
mov
subb
orb
push
pop
push
repnz
sbb
out
xor
call
push
add
jmp
sbb
adc
or
fisubl
jbe
xchg
or
mov
pop
xor
xchg
leave
sub
repnz
hlt
clc
ret
mov
sub
mov
dec
dec
xchg
aad
call
sbb
movsb
inc
mov
sub
lret
stc
test
sub
jo
xchg
mov
je
add
aaa
mov
scas
dec
or
std
jge
mov
or
or
xchg
outsb
test
dec
jp
push
jbe
fbstp
test
popl
dec
fnsave
jecxz
mov
mov
xor
or
push
idivl
mov
sahf
push
or
adc
mov
pop
jo
popa
push
bnd
aad
int
inc
es
sbb
fidivrl
aam
inc
sbb
inc
pop
mov
shll
fistl
daa
ret
lcall
lahf
jo
fistpll
mov
inc
test
mov
mov
xor
add
inc
out
imul
out
jno
icebp
repz
sub
jns
insb
or
out
mov
ss
jne
xchg
push
addl
push
orb
pop
daa
int
jge
or
or
mov
lcall
jbe
or
cmc
adc
jmp
xchg
push
pushf
insl
push
shl
jle
adc
jns
scas
dec
mov
push
ds
fldenv
and
sub
adc
scas
pop
cmpsb
mov
xchg
pop
adc
lea
imul
push
lock
mov
xchg
inc
mov
loope
and
test
bound
pop
testb
pushl
pop
push
jg
test
sbb
loop
into
pop
packuswb
dec
adc
icebp
dec
cmc
xchg
pop
xchg
jecxz
loop
or
add
mov
dec
pop
jmp
call
cli
dec
cld
hlt
jb
mov
lea
ljmp
inc
mov
push
je
pop
push
sahf
test
or
mulb
sub
dec
jmp
out
inc
mov
lret
mov
subb
in
je
sbb
push
lahf
jecxz
mov
movsb
mov
scas
dec
xchg
mov
std
pop
xchg
ljmp
push
cmp
xchg
nop
fistpl
sbb
or
pop
mov
fistl
dec
sarb
or
iret
stc
jo
mov
stos
xchg
cld
leave
fcoml
sahf
fnstsw
sbb
js
xchg
fldenv
mov
dec
dec
pop
add
inc
mulb
test
dec
enter
int
out
xor
inc
push
xchg
sub
and
sbbl
inc
jnp
pop
idiv
test
cmp
and
mov
cmp
mov
clc
jg
lea
push
inc
std
ds
sbb
adc
cmpsl
popf
cltd
mov
inc
jnp
int
jecxz
xchg
pop
lahf
and
movsl
push
push
mov
sarl
add
xchg
call
test
decb
fs
jge
pusha
push
dec
add
dec
pop
nop
addr16
mov
sub
push
mov
jne
xchg
cmp
jp
mov
dec
hlt
movhps
fstps
add
movsl
test
jb
jno
cli
add
or
or
aaa
out
mov
pop
cmpsb
mov
loop
outsl
xchg
sahf
sbb
sub
mov
pop
rcrb
sbb
cmp
fstps
and
inc
scas
aad
xchg
xchg
ret
outsb
lret
xchg
daa
mov
imul
jo
pop
arpl
add
add
xchg
or
xlat
xor
jp
je
jmp
jg
or
mov
scas
fsubl
pop
adc
js
add
jbe
add
lret
js
cmpsl
bound
xchg
in
xchg
push
jle
jbe
pop
loop
in
mov
or
cld
cmp
test
mov
ror
inc
adc
ficoml
or
or
adc
fadd
push
dec
cltd
add
bound
add
loopne
lahf
dec
lods
sbb
push
jmp
jbe
clc
pop
jb
cmpsb
cmp
push
jns
mov
mov
orl
insl
cs
cmc
cmpsb
mov
sub
pop
mov
push
jne
cmpsb
pop
or
pop
cmpsl
jl
adc
cmpsl
addl
adc
mov
push
daa
jo
popa
cmp
jns
lock
sub
cltd
xorb
cs
lods
add
jne
loope
xor
jbe
icebp
test
or
pusha
and
push
out
pop
std
pop
jp
repz
gs
fldpi
xchg
mov
lods
jno
push
leave
mov
dec
cmp
inc
iret
and
sahf
jae
xchg
or
cmc
xorl
inc
repz
push
mov
push
lret
pop
insb
out
mov
jmp
xor
loope
rcll
int3
xor
xchg
fcmovnb
pop
xor
fsubl
push
dec
js
stos
insb
mov
adc
mov
jno
data16
push
and
pop
mov
or
jae
pop
test
test
cmp
scas
xchg
sbbl
fistl
imul
leave
out
inc
int
mov
mov
scas
sub
aaa
add
xor
rol
data16
fnstsw
adc
or
mov
stc
fmull
inc
cmpsl
data16
call
addb
dec
mov
imul
es
int
stc
arpl
xor
cmp
dec
pop
or
sbb
cmp
push
mov
out
repnz
jae
ror
mov
mov
stos
dec
mov
lret
aas
scas
ret
and
add
fwait
push
pop
cltd
fisubrl
test
test
inc
aad
mov
loopne
pop
mov
push
addr16
cld
scas
dec
int
dec
in
xor
cmc
cmc
and
push
ffree
clc
push
inc
cld
cmpsb
dec
pop
je
mov
push
orl
outsb
int3
push
or
dec
cmp
xor
mov
xor
sub
cmpsb
outsl
cli
fidivrl
mov
cwtl
fisubrs
in
mov
cmp
je
clc
addr16
inc
inc
les
fs
sbb
and
jno
jmpw
push
out
ja
add
xchg
dec
jne
arpl
arpl
rol
aam
shl
add
das
scas
xchg
out
jns
movsl
add
push
mov
pop
pop
mov
jb
xchg
mov
jns
xchg
aaa
cs
repnz
jo
cmpsl
mov
sub
iret
iret
xchg
inc
cli
mov
cmpsl
cmpsb
mov
lret
dec
sahf
testl
xor
push
scas
std
andl
dec
incl
jecxz
xor
imul
addr16
sbb
add
mov
cmp
inc
or
int
call
fs
jo
inc
and
ljmp
test
push
outsb
rcrb
sbb
test
dec
push
dec
jg
stos
push
mov
aad
insl
mov
dec
das
lret
aaa
mov
sub
lods
stos
shr
dec
xor
mov
bswap
pop
and
stos
dec
sub
outsb
mov
filds
xchg
lea
mov
repnz
ret
scas
out
xlat
xor
sti
out
sar
sbb
mov
faddl
aam
ljmp
cld
aas
out
xchg
sbb
mov
mov
in
cmp
cltd
jge
xchg
loop
dec
and
aas
jp
gs
int
jge
and
fildl
pop
int3
es
mov
add
sub
int3
mov
pop
lods
jge
add
adc
stos
enter
dec
sti
ljmp
xor
mov
aaa
shlb
mov
ret
sub
mov
dec
inc
pop
fsts
mov
xchg
mov
dec
sub
stos
repz
mov
fsts
xor
aam
jne
cs
inc
inc
int
push
int3
bnd
enter
sbb
mov
iret
jle
mov
dec
xchg
add
out
insl
push
fwait
mov
and
or
fs
insb
pop
dec
jae
pop
xor
sbb
sbb
push
movl
mov
mov
inc
jg
jl
add
or
clc
jno
out
or
cli
fxch
in
adc
add
lret
sub
in
pop
pop
stos
pusha
je
mov
addr16
push
loopne
xchg
mov
pushf
or
popa
mov
int3
imul
xchg
sub
or
inc
dec
and
or
cli
js
in
popl
aas
sbb
in
ficomps
cmp
xor
dec
or
inc
lods
lods
xor
fisubl
fwait
sbb
aam
cmpsl
lock
pushf
mov
inc
pushf
jp
imul
jmp
or
shlb
mov
add
icebp
jae
movsb
call
and
adcl
ds
adc
jno
jbe
imul
pop
cwtl
loop
pop
jne
lret
jbe
enter
xchg
sub
jne
lahf
cli
ds
add
adcl
mov
xlat
fcmovnb
std
ret
adc
jecxz
ljmp
push
and
push
repnz
add
orl
leave
or
imul
or
xlat
movsb
and
mov
das
sbb
pop
pop
xchg
dec
fstpl
fisubrl
xchg
mov
popf
fnstenv
push
shll
mov
inc
jb
shll
lahf
aaa
xchg
int
mov
sbb
push
cli
into
imul
jge
in
filds
fucomi
xchg
fldl
sub
pop
push
push
sbb
and
sti
sbbl
dec
nop
push
cmpsb
xlat
cli
inc
jno
clc
loop
into
outsl
js
mov
in
mov
ret
jecxz
orl
out
mov
xor
cmp
mov
xor
add
adc
mov
inc
mul
xor
sti
popa
mov
mov
mov
test
leave
and
and
sbb
xchg
aas
insb
lods
fnstcw
cmp
push
test
scas
cmpsb
jns
cmpsl
mov
mov
push
jp
pop
mov
sub
dec
divb
sbb
insb
add
out
sbb
sub
inc
xlat
push
ret
lds
xchg
lods
or
or
hlt
xchg
sti
push
jle
cs
sahf
inc
cmp
pop
test
rcrb
aad
add
or
mov
adc
fidivrl
stos
adcl
push
mov
aaa
test
mov
fcompl
sub
fisubrs
xchg
or
data16
nop
sahf
test
les
pop
add
scas
lds
insl
scas
mov
movsl
adc
jmp
sbbb
xchg
out
pop
stc
push
movsb
cmpsl
mov
fsubs
dec
aas
mov
sub
gs
cltd
xchg
xchg
sbb
arpl
fpatan
mov
and
loope
fmul
icebp
out
loope
xor
add
jmp
push
pushf
mov
lods
pop
jae
mov
fimuls
push
and
adc
stc
adc
push
mov
sbbl
push
dec
dec
jb
leave
jle
mov
jno
sbb
inc
arpl
adc
fisttpl
and
push
jp
fidivrs
shlb
dec
into
cmpsl
jle
pusha
lods
jl
bound
xor
pop
pop
mov
add
inc
and
in
pop
fistps
cli
aaa
repnz
mov
in
mov
inc
mov
jmp
nop
roll
test
mov
mov
push
xor
popf
daa
inc
outsl
and
lcall
inc
lahf
dec
outsl
in
push
shlb
push
scas
clc
in
andb
push
mov
jp
add
fnsave
push
test
mov
mov
pop
les
lret
fdivr
ljmp
add
push
and
inc
adc
fcompl
or
inc
cltd
xchg
add
jae
cmp
xor
mov
cld
aam
cmc
fldl2e
shl
stos
mov
repz
lret
cmc
fcomps
js
clc
fmuls
mov
inc
aad
or
lds
cmp
int
mov
inc
jb
pop
mov
stc
sahf
add
enter
sub
push
push
sub
pop
xchg
jns
add
cltd
mov
pop
ds
mov
stos
pop
popf
leave
decl
adcb
dec
cli
rclb
inc
inc
mov
push
lret
add
dec
sub
dec
sbb
daa
mov
fisubs
pop
cmp
pop
adc
mov
out
mov
in
das
je
cli
rcll
clc
outsl
and
add
or
add
std
popa
ret
xchg
call
or
outsl
shr
jl
xchg
add
shr
mov
and
sub
xchg
call
and
pop
dec
movsl
inc
dec
mov
push
add
pop
jae
fsubrl
xor
jo
test
mov
dec
bound
jg
imul
fnstsw
adc
mov
in
mov
int3
call
add
jg
cmp
imul
xchg
cmc
inc
push
out
adc
sbb
in
or
rolb
movsb
mov
aam
inc
xor
int3
adc
ret
mov
pop
xchg
inc
jnp
call
push
and
repz
aas
cwtl
push
stc
pop
pop
bound
mov
sub
or
fistps
fwait
fs
aad
gs
adc
pop
mov
fwait
or
or
add
lock
lea
pop
lret
sbb
pop
in
cli
add
dec
loope
adc
sbb
dec
pop
xchg
repz
in
ljmpw
add
adc
pop
enter
roll
test
mov
int3
jno
mov
xlat
jnp
scas
sbb
inc
lret
xchg
sarl
xor
iret
jne
lret
daa
mov
dec
adc
xchg
ljmp
scas
icebp
imull
repz
mulb
lahf
xor
push
cmpsb
int
and
out
dec
iret
loop
push
cmp
movsb
inc
lds
loope
out
movsl
insl
shl
mov
iret
js
sbb
inc
test
lahf
test
push
in
dec
mov
mov
scas
fwait
mov
push
mov
sub
pop
rorb
int3
sahf
neg
shll
add
sub
sbb
mov
scas
dec
pop
ficoml
cld
pop
push
push
pop
mov
xorl
scas
movsl
inc
dec
push
push
add
push
sbb
movsl
test
xchg
ret
push
fs
fcompl
inc
push
int3
popf
loope
push
scas
imul
mov
sbb
xor
aaa
cmp
not
inc
adc
repz
dec
fdivrl
mov
out
nop
ljmp
push
fidivrs
cld
stos
jmp
pop
pushf
and
lea
js
push
mov
fwait
sub
test
ds
add
push
sub
add
outsb
pop
sbb
hlt
pop
sbbl
aad
cltd
or
mov
insb
sub
mov
and
pop
mov
mov
fidivs
in
daa
xchg
daa
xlat
push
jmp
stos
pushf
test
int3
pusha
pop
lods
test
push
pushl
out
xchg
fisubl
mov
adc
dec
mov
push
adc
xchg
out
xchg
add
xchg
test
leave
mov
cmpsl
adc
pusha
ret
into
dec
lods
adcl
xchg
addr16
repnz
cmpsl
ficoms
or
int
test
aam
mov
imul
pop
and
pusha
xchg
pop
fisubrl
imul
pushf
dec
mov
iret
incb
out
sub
xor
test
lea
dec
aaa
imul
stos
imul
stos
shlw
cmp
outsl
pop
fxch
fs
push
push
jecxz
addr16
fwait
in
push
int
push
leave
fs
jno
mov
sahf
mov
ds
and
fdiv
pusha
fstpl
mov
mov
fisubl
lods
pop
pop
xchg
out
cmc
out
outsb
clc
jg
push
mov
sbb
outsb
lcall
faddl
jge
or
sub
sbb
loopne
jnp
mov
xchg
ljmp
call
out
ds
adc
push
mov
scas
cltd
div
and
adc
xchg
aad
test
or
push
ficoml
jle
stos
mov
dec
ficoms
cli
mov
outsl
in
and
mov
pop
out
cli
xor
dec
pop
pop
dec
movb
loop
rcrl
mov
inc
xchg
pop
je
mov
cld
dec
xor
out
push
and
cli
mov
mov
les
or
mov
inc
sub
cltd
or
fs
sarl
pop
mov
sbb
fwait
idivl
dec
mov
and
roll
das
pusha
pop
into
xchg
add
or
test
movsb
push
pop
and
mov
ss
dec
ljmp
add
jp
sarb
xchg
or
or
mov
fstps
jnp
out
cmp
jecxz
lds
aaa
call
cmpsl
cmp
jbe
mov
or
and
shll
jle
pop
in
xchg
andl
sbb
xlat
pushf
roll
or
lock
ret
shlb
icebp
popa
lea
ret
sub
and
scas
mov
xor
and
lods
xchg
mov
mov
cmp
ror
adc
imul
mov
out
loope
loope
jle
mov
mov
dec
loop
xor
dec
popf
stc
cmp
pop
test
mov
sbb
test
and
cwtl
arpl
repz
movsb
sub
shrb
imul
aaa
sbb
push
fidivrl
adc
je
ja
mov
xchg
mov
in
leave
ret
or
daa
pop
stos
dec
lods
nop
push
or
inc
iret
sbb
inc
inc
inc
pop
cmp
ds
push
pop
jecxz
aam
leave
bound
mov
out
pop
push
or
add
pop
divl
bound
push
mov
cmp
inc
std
pop
out
jge
inc
cli
lods
dec
addr16
fcomp
xlat
sbb
ljmp
cmp
push
das
ds
dec
inc
in
xor
and
cmp
mov
mov
xor
js
mov
pop
adc
adc
pop
pop
fcmove
loop
jnp
jb
arpl
sbb
out
inc
popa
sub
cmc
xchg
inc
ja
pop
hlt
sub
jo
ds
addr16
pop
add
push
lret
dec
and
jecxz
enter
mov
xor
hlt
jmp
xchg
mov
adc
xor
cld
sub
push
mov
das
mov
stos
rorl
mov
into
and
dec
or
inc
push
jno
mov
and
mov
sub
daa
jecxz
sub
jo
aaa
stos
std
ss
xchg
jecxz
lock
push
jo
rolb
leave
mov
rorb
mov
dec
fsts
loope
lahf
cmp
sbb
push
or
fsts
mov
es
iret
mov
movsl
cmp
mov
xchg
lahf
mov
add
sub
push
sbb
mov
push
mov
push
movsl
repz
mov
cmp
lock
and
jno
mov
sub
sub
and
and
or
pop
cld
xlat
sbb
mov
sbb
or
or
fmul
fwait
jb
adc
pop
call
jp
imul
or
inc
xor
in
or
cmp
ljmp
leave
mov
sbb
or
mov
inc
add
mov
icebp
shrl
and
out
mov
mov
je
cmp
aaa
or
cmp
jnp
xchg
rclb
negl
js
in
imul
rorb
das
inc
xchg
or
xchg
xor
es
in
xor
jo
pop
lcall
imul
sub
sarl
mov
popa
outsl
enter
shrl
or
popa
or
cmp
fisttpl
cld
jb
and
inc
sbb
xchg
pop
movzbl
and
xor
mov
pop
ljmp
push
imul
sti
jg
xchg
mov
test
xchg
into
adc
arpl
mov
test
mov
push
jmp
subb
inc
in
outsl
or
xchg
jp
inc
fnsaves
add
fistl
movsl
inc
popf
test
and
pop
dec
cmp
filds
mov
mov
add
and
adc
sub
add
mov
rcrb
test
xchg
shlb
jno
scas
pushf
ret
lcall
insl
inc
lret
fdivrs
add
mov
les
or
lea
lahf
cmp
xor
sub
fstps
cmc
cmp
xchg
aaa
stc
sbb
movsb
xor
stos
cmpsl
into
jo
jnp
sbb
dec
mov
adc
adc
or
jo
sbb
jge
add
jb
pushf
and
and
sub
mov
arpl
std
ljmp
test
cmp
insb
jmp
xor
adc
aam
into
adc
data16
ljmp
xchg
loopne
push
je
xlat
push
inc
push
inc
push
sbb
popa
les
enter
and
mov
adc
mov
pop
daa
cmpsl
pop
push
xchg
aas
or
adc
xor
lcall
outsl
adc
dec
xchg
pop
int3
movsb
and
repnz
stos
pushf
xchg
out
pop
loopne
in
mov
jge
push
inc
loop
pop
fcmovne
mov
or
shrl
sub
jnp
enter
xchg
inc
mov
xlat
mov
gs
mov
mov
xchg
mov
leave
loopne
aas
cli
adc
xchg
or
insl
pop
pushf
pop
sbbl
mov
jecxz
cwtl
or
pop
dec
jnp
cli
fwait
out
out
stos
pop
push
push
mov
stos
inc
xchg
jno
pop
shl
in
hlt
or
mov
inc
fsubs
jg
aaa
or
lds
aas
fistpll
mov
sbb
push
sub
xchg
movsb
xchg
adc
push
cli
xor
mov
cmp
hlt
pusha
dec
jb
aaa
mov
mov
shll
adc
sbb
repnz
mov
xchg
sarl
mov
outsb
pop
test
or
lret
cli
pop
outsb
ret
mov
les
jns
insl
sti
push
inc
dec
gs
and
mov
test
inc
popf
js
and
xchg
adc
in
xchg
outsl
or
or
in
sub
mov
and
inc
xchg
xchg
jae
hlt
insl
sar
scas
pop
outsl
xlat
jg
test
or
mov
in
cmp
xchg
cwtl
outsl
iret
pop
mov
dec
fmulp
gs
jge
rol
dec
into
mov
mov
enter
mov
dec
dec
mov
es
push
dec
in
pusha
scas
inc
dec
cmp
pop
rorb
dec
push
xchg
mov
icebp
loop
lods
mov
loopne
xor
cli
repnz
mov
dec
mov
fstl
je
mov
cld
stc
scas
int3
les
add
fldenv
mov
mov
mov
cwtl
pop
xchg
dec
aas
inc
mov
cmpsb
fadd
mov
mov
push
xor
adc
test
loope
xor
sub
mov
sti
push
jecxz
les
rcr
cs
sbb
pop
out
pop
mov
cmp
es
xchg
icebp
mov
movsb
shlb
push
insl
sbb
push
cmp
push
adc
and
incl
fwait
or
add
lds
pusha
pusha
sub
jbe
xchg
data16
cmc
or
mov
shll
mov
inc
mov
pop
lret
jle
cmp
fcmove
push
jae
mov
and
gs
sar
scas
sbb
mov
in
mov
mov
sub
es
gs
insb
in
dec
pop
clc
mov
enter
test
sbb
mov
mov
out
call
mov
insl
push
das
daa
shrl
ret
pop
out
rorb
mov
cs
sahf
mov
aam
cltd
xchg
js
xchg
sub
sbb
xor
mov
ss
data16
or
push
gs
testb
jl
in
shrl
inc
subl
pop
dec
jmp
cmpl
out
int
mov
outsl
push
lcall
push
inc
xor
mov
adcl
jg
mov
jge
test
fsts
adc
xlat
add
shrl
pop
inc
insb
nop
shr
cs
hlt
pop
xor
mov
pop
mov
pop
cmp
inc
xchg
mov
xor
and
cmp
cmp
enter
xor
sarl
mov
cmpsl
jge
push
sbb
push
sub
sub
dec
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
mov
bound
bound
pushw
pop
dec
mov
jp
notb
sbb
rcrl
push
loopne
jnp
or
imul
xor
add
pop
xor
cmp
psllq
mov
lahf
popf
rolb
les
outsl
mov
ss
mov
pop
ljmp
hlt
mov
mov
adc
dec
js
push
fs
jae
sbb
lods
mov
and
and
push
sbb
test
std
mov
pop
sbb
sti
repz
add
cwtl
testb
xchg
insb
cmp
repnz
mov
inc
push
xchg
push
test
and
jmp
movsb
xlat
mov
mov
pop
inc
adc
ret
inc
or
cmpsl
mov
loope
nop
pop
jg
xchg
pop
lods
int3
or
scas
enter
sub
cld
fs
sub
insb
test
xor
stos
sub
xchg
das
mov
xlat
test
fucomip
cltd
sbb
and
cmp
adc
lds
sub
mov
into
int
inc
mov
js
addl
adc
adc
lret
sbb
mov
or
stos
push
push
and
push
inc
fidivl
xor
aas
cmp
push
pop
nop
mov
sub
out
sub
es
cmp
out
cmp
andb
inc
out
inc
push
push
and
adc
ret
mov
pop
cmpsl
push
add
clc
pop
addl
xchg
push
addr16
andb
cwtl
pop
xchg
iret
rcrl
xchg
inc
test
inc
in
pop
test
xchg
jns
mov
cmpsb
orb
imul
lds
call
jbe
inc
jmp
xchg
pop
sbb
ja
stc
enter
fsubrp
xchg
lock
subb
adc
aaa
inc
sub
adc
cwtl
dec
and
sub
mov
fsubrs
jmp
clc
call
aam
aam
icebp
mov
cwtl
cmp
pop
sub
clc
ret
jp
push
push
iret
cli
xchg
cmp
sub
sbb
push
xchg
sub
xchg
cmp
and
sub
out
push
pop
ss
in
sbb
ret
mov
icebp
and
sub
xchg
hlt
inc
fistpll
idiv
punpckhwd
sbb
push
movsl
cmp
cmp
sub
enter
xor
int
das
cs
ljmp
mov
in
fistl
mov
adc
in
jo
and
sti
das
push
add
push
pusha
pop
pop
nop
ret
ja
mov
xchg
mov
ficomps
jg
aas
repz
fucomip
sbb
cmc
inc
jb
int
sbb
adc
dec
incl
lds
xor
dec
in
cmpsb
xor
mov
daa
mov
int
xchg
int3
xchg
fs
scas
cltd
icebp
in
repz
mov
and
mov
in
mov
fildl
push
es
and
lret
lret
lahf
mov
pop
dec
fwait
sbbl
insb
out
dec
sahf
cmp
add
xor
or
or
js
xor
push
push
pushf
mov
xor
jo
mov
enter
dec
inc
jb
mov
lret
mov
cld
out
add
mov
fstps
pop
jns
adc
push
add
xchg
pop
add
and
mov
jp
push
jmp
pop
and
xchg
out
xor
js
loop
ja
cmpsb
cmpsb
and
sub
dec
popf
adc
je
fistl
cld
std
fdivrs
cmc
loope
add
testb
addb
leave
pusha
inc
pop
fs
sbb
xchg
or
adc
push
call
jecxz
mov
les
icebp
aam
inc
lock
lret
jae
mov
xor
add
movl
jl
js
test
sub
cmc
ljmp
xchg
mov
scas
in
sbb
jno
adc
or
sub
push
subl
push
sub
cmp
and
add
and
cs
xchg
loopne
rcll
xor
sub
sub
jae,pt
movsl
and
rorl
mov
xor
xor
push
jecxz
leave
mov
sahf
inc
loope
iret
cmp
shlb
js
sub
cwtl
adcl
sbb
mov
loop
stos
inc
jecxz
das
xchg
sub
sub
pop
and
aam
mov
jno
pop
outsb
xchg
dec
jae
cmpsb
ljmp
jns
lcall
pop
mov
out
aas
xchg
cmp
jae
xchg
push
vmovq
aad
mov
call
inc
xor
movsl
xchg
imul
fadds
mov
cli
xor
fsub
imul
mov
mov
lods
adc
movsw
pop
cld
ret
push
aas
je
les
enter
sbb
jne
lret
inc
movsb
xor
cmp
jb
lods
scas
xchg
sahf
dec
push
adc
mov
xchg
ljmp
lret
pusha
mov
mov
fmuls
xlat
sub
add
push
pop
push
mov
insb
ja
dec
loope
mov
push
in
pop
mov
sbbl
repz
cmp
pop
enter
mov
stos
xor
inc
jecxz
pop
xor
pop
jle
cmc
je
and
xor
jg
or
sarl
mov
mov
dec
mov
ret
fisubl
mov
arpl
add
fistps
or
xchg
leave
cmc
xlat
jae
pop
stos
mov
cltd
xchg
aaa
mov
cmp
push
rorl
mov
icebp
pop
pop
xor
mov
in
mov
inc
add
adc
les
aas
repz
mov
inc
lret
stc
sbb
stc
inc
shlb
daa
aam
fidivl
stos
js
xor
adc
iret
adcb
and
fsubrs
fmulp
shlb
ja
cwtl
and
cmp
in
or
sarb
jae
xchg
xor
push
stos
stos
lret
ud1
adc
dec
rolb
mov
mov
pop
clc
jno
fstpt
lret
or
xchg
mov
sbb
push
jmp
subb
fucomp
push
xchg
test
into
es
push
out
clc
cwtl
nop
jb
xlat
sbb
cmp
dec
in
push
add
pop
dec
lret
inc
shll
mov
cltd
arpl
fcoms
cmp
mov
adc
jge
loope
mov
mulb
xchg
aam
rolb
sub
mov
mov
sub
icebp
cmp
inc
addl
addr16
mov
mov
jne
adc
mov
pushf
xchg
test
enter
loopne
ds
into
adc
add
stos
pop
sub
push
fwait
inc
pushf
mov
jno
add
xchg
nop
mov
mov
xchg
xchg
insb
ret
mov
jne
inc
mov
ljmp
cltd
or
adc
data16
fidivs
ret
dec
fstpt
push
ja
inc
or
enter
pop
jns
nop
pop
jne
mov
or
and
xchg
sub
jb
lahf
or
es
fnstsw
repnz
fidivs
inc
repz
loope
ret
pusha
lock
xlat
push
sti
mov
or
mov
rorb
std
mov
js
cld
dec
jl
jae
jmp
pop
test
push
dec
lods
out
or
sub
mov
and
rolb
jmp
mov
popl
xor
mov
xor
lret
sti
js
sbb
je
push
mov
sbb
inc
sub
inc
out
pop
dec
sub
add
mov
sarl
call
out
cld
sti
cmp
push
hlt
xor
pop
xchg
cli
insl
rcl
sahf
sub
fmull
push
call
inc
adc
addb
stc
fstps
iret
cltd
pop
push
js
fldl
mov
pop
cmc
ds
push
test
cmpsl
push
mov
sbb
icebp
cmp
jb
icebp
cld
dec
xchg
rol
loop
mov
adc
lahf
and
cmp
outsb
in
mov
out
fcmovne
imul
popa
out
dec
push
jg
fsubr
lods
in
add
or
adc
sub
out
jmp
xchg
mov
cld
aam
dec
movsl
test
push
mov
mov
mov
lea
xchg
pop
add
lock
mov
xlat
clc
sbb
test
inc
movsl
mov
imul
jb
xchg
sarl
je
lahf
sub
jge
cmpsb
mov
cmpsb
mov
cmp
adc
jae
dec
fidivs
push
jo
push
mov
imul
cmp
ret
add
ret
push
cmc
iret
mov
mov
adc
dec
or
adc
xchg
call
out
xchg
stc
cli
pop
fidivl
ljmp
dec
rorb
push
out
xchg
adc
mov
dec
lods
jbe
adc
add
pop
adc
jbe
test
aam
cmc
or
push
and
mov
inc
sub
sub
ficompl
cltd
or
cwtl
out
sub
stos
insb
mov
xchg
jbe
jecxz
pop
pushf
sub
cmp
mov
mov
mov
mov
jne
cld
jb
push
fscale
and
sbb
rcll
imul
mov
and
int
orl
inc
mov
push
or
xlat
cli
loop
adc
test
xchg
mov
inc
ret
ret
aam
mov
add
mov
bound
ljmp
lret
clc
inc
mov
test
inc
cmp
inc
sbb
mov
add
jb
dec
xchg
mov
shl
test
mov
fucom
mov
push
mov
dec
mov
rcll
xor
jnp
aad
cli
sbb
adc
aas
cli
jg
xchg
es
fs
sahf
jns
fists
push
cltd
in
sbb
lea
add
inc
cmp
sub
lret
fildl
inc
out
shrl
cmp
xchg
out
and
jae
out
mov
repz
movsl
cltd
dec
mov
stc
ret
daa
xor
pop
and
lods
xchg
add
daa
sahf
mov
lea
mov
sub
mov
sbb
popf
pop
inc
inc
lret
push
cmp
or
jns
decl
mov
or
cltd
or
adcb
stc
bound
icebp
add
or
xor
cltd
cwtl
aas
testb
aam
jo
inc
sub
pop
roll
lret
adc
push
lds
test
inc
sahf
fmuls
loopne
jg
sbb
fimull
pop
fcomps
or
and
push
pop
call
mov
sbb
ljmp
mov
and
adc
lods
les
out
mov
lock
jno
mov
push
pop
add
lcall
cmp
mov
or
lock
sbb
dec
jo
jmp
jle
lods
ficoms
dec
pop
in
mov
imul
mov
fsubr
xchg
add
inc
sti
fs
pop
sub
mov
js
jo
pop
fs
cmp
inc
fcmove
lods
insl
fldt
push
push
push
sub
jg
inc
adc
fimull
scas
and
arpl
ret
add
sbb
lret
jbe
and
mov
jle
mov
mov
jb
xchg
sbb
ret
xchg
lret
lea
cli
iret
jmp
addr16
jbe
sbb
xor
lods
out
aaa
dec
pop
div
add
push
or
push
or
xor
stc
and
testl
push
fcompl
fstpl
dec
jnp
jae
jb
xchg
cmp
inc
shlb
xor
imul
xchg
adcl
loop
jecxz
shll
imulb
xchg
and
push
inc
sbb
cmp
cs
inc
inc
mov
or
sbb
jo
shlb
jl
push
adc
jmp
fcmovu
ror
cmc
out
pop
pop
mov
aaa
push
push
push
xchg
dec
cli
hlt
mov
inc
xchg
sub
fsubrs
jge
push
popf
jl
xor
out
das
fld
pop
mov
push
push
xor
ret
add
jl
add
xor
outsl
jo
iret
pushf
xchg
jmp
aam
mov
lcall
mov
ds
add
dec
add
push
jno
ja
lret
out
sbb
mov
ja
jp
mov
dec
jne
ljmp
sbb
sub
aas
xchg
das
or
fdivrl
lds
sbb
adc
pop
lock
sbbl
mov
filds
leave
dec
daa
cmp
pushf
bound
shll
xchg
scas
fadds
push
int
lahf
insl
xor
xchg
lcall
xchg
inc
xor
lds
loopne
movsb
xchg
movsb
sahf
cmp
pop
lcall
adc
enter
andl
or
push
xchg
cmpsb
dec
cmp
out
sbb
imul
pop
xor
shr
xchg
stos
xchg
ficoml
movsl
adc
in
push
pop
fcom
out
jmp
and
sbb
and
ss
jo
mov
adc
mov
or
rcr
jnp
jmp
sbb
xchg
addr16
or
lret
je
lock
dec
mov
mov
xorb
mov
adc
imul
jo
and
dec
addr16
popf
and
icebp
in
jae
add
outsb
or
jo
out
mov
cmp
mov
jl
jb
hlt
mov
clc
lds
add
xor
js
sbb
mov
jmp
lret
sub
or
jp
repz
lret
lods
sub
sub
and
and
mov
popa
ja
daa
or
inc
mulb
sub
sbb
mov
hlt
xchg
test
int3
rolb
jecxz
in
pop
sub
ds
stos
fsubr
loope
inc
repz
mov
adc
pop
push
and
mov
rcr
das
fs
cltd
add
sbb
adc
out
add
dec
dec
adc
cwtl
inc
add
out
shlb
or
or
jne
push
das
imul
cmpsl
jns
ss
adc
imul
mov
cld
mov
inc
das
ljmp
adc
push
mov
lds
pop
push
stc
push
sbb
into
cmp
fcomps
push
repnz
and
push
out
movsl
xor
mov
mov
cwtl
unpckhps
sbb
testl
xor
rorb
and
hlt
mov
fsts
mov
mov
mov
imulb
add
fst
bound
xor
cmp
cwtl
cwtl
movsb
or
iret
jmp
sbb
push
mov
insb
in
push
std
mov
jecxz
insb
cli
jecxz
popf
jo
sub
jge
dec
movb
dec
xor
addr16
aam
add
imul
pop
adc
clc
lret
fistpl
add
in
xor
pop
xlat
pop
push
adc
and
jnp
popa
or
es
adc
cmpsl
xor
movsl
sub
out
pop
and
xor
mov
cmc
pop
out
rcrb
sbb
fisubs
shrb
adc
push
icebp
daa
add
adc
jle
pusha
aad
sbbl
xor
jns
dec
sahf
push
outsb
add
mov
and
lahf
mov
mov
nop
add
ja
pusha
inc
call
jnp
rclb
xor
cmp
push
data16
jno
fs
adc
mov
aam
cmp
imul
xor
mov
pop
fmulp
push
aad
xor
push
loopne
sbb
iret
fdivrs
fbld
dec
sbb
inc
scas
inc
push
lret
push
pop
js
loopne
enter
stc
lcall
mov
stos
lret
add
xchg
es
or
gs
sti
pusha
xchg
mov
mov
cltd
adc
int3
add
inc
lods
lea
insb
loope
cld
cmp
xchg
icebp
mov
push
pop
aad
jl
xlat
and
outsb
mov
or
dec
movsb
test
jb
jge,pt
or
mov
dec
and
cmp
testb
leave
mov
mov
arpl
sub
inc
mov
push
sbb
scas
xchg
sbb
pop
lods
shrl
ds
aad
inc
lock
lods
mov
lea
inc
in
imul
mov
cwtl
ret
jmp
sub
adc
mov
dec
and
dec
js
fiaddl
fmuls
mov
stc
dec
push
cmp
movsl
xor
jge
sub
fs
fs
sub
cmpl
imul
movsl
mov
pop
shrl
test
mov
cli
add
sub
frstor
pop
mov
sarl
shlb
nop
xchg
sub
stc
mov
xchg
js
xorb
inc
imull
clc
xchg
adcb
mov
or
out
lods
rcll
sbb
mov
inc
cli
test
iret
out
push
daa
cmpb
out
lock
mov
das
cmp
inc
mov
lods
inc
movsb
jb
lods
out
loop
dec
or
push
cmp
lret
decl
fistpll
xchg
lock
mov
aad
jle
jo
cmp
adc
lret
or
or
mov
jle
mov
and
addb
mov
je
jo
push
mov
jae
inc
add
inc
leave
out
insb
popf
add
je
js
sbb
xor
rorl
imulb
and
sub
jecxz
mov
es
mov
stos
dec
push
sbb
push
fs
shlb
or
std
pop
fsubs
adc
test
xor
adc
lcall
cld
enter
mov
add
cmp
cmp
popf
push
cmc
jbe
lret
pop
out
sub
in
movsl
jg
sahf
jecxz
ss
or
cmp
ret
outsb
pand
test
push
lret
loopne
xchg
jl
sbb
fucomi
addr16
popf
mov
xchg
prefetchwt1
ret
lods
flds
xor
loope
cmp
sub
xlat
adc
icebp
mov
gs
out
imul
adc
adc
movsb
fucomip
push
inc
mov
xchg
sarl
add
cmp
jns
test
adc
jbe
push
cmp
insb
adc
fwait
neg
std
iret
xor
test
push
jmp
movsb
xor
mov
in
stc
cwtl
pop
mov
or
and
lods
int
inc
dec
loopne
imul
jae
pop
into
mov
xor
pop
push
mov
jb
jl
sbb
add
jnp
cld
pop
not
push
push
imul
das
clc
test
xor
xchg
and
pop
xor
out
add
mov
push
inc
nop
fcmove
inc
mov
jo,pn
add
fists
adc
or
addr16
sbb
decl
and
pop
cmp
pop
lods
push
or
sbb
sub
sbb
cmp
lcall
sub
mov
and
cmpsl
xchg
sub
cmp
and
rorb
inc
pop
xor
sub
pop
push
cmp
lret
icebp
mov
jns
inc
in
in
mov
adc
in
test
rcl
xchg
call
dec
pop
sahf
outsl
ss
jge
inc
scas
movsb
jmp
pop
sahf
xchg
ljmp
xchg
loop
pusha
ja
cmp
out
mov
fadds
cmpsl
and
popf
inc
xlat
adc
and
and
into
clc
inc
lahf
lods
rcrb
in
test
sub
xorl
pop
xor
cmp
cmp
xchg
dec
push
pop
gs
arpl
pop
popf
shlb
jg
xchg
jnp
aaa
test
or
mov
test
out
dec
jge
scas
cmp
loop
jmp
pushf
data16
int
mov
xor
sarb
iret
xchg
cmp
daa
xor
movsl
lret
cli
les
inc
lods
dec
inc
daa
cmp
fstpl
dec
rcll
stos
and
mov
shlb
pusha
fwait
push
ss
push
xchg
sub
add
scas
insb
cli
dec
sti
popf
out
mov
dec
cmp
or
jge
fadds
ja
mov
or
xchg
and
ss
mov
loop
adc
push
mov
xchg
adc
incl
add
negb
sbb
icebp
int3
cli
pop
and
ja
es
hlt
adc
outsl
fisubrl
mov
pop
pop
arpl
push
add
int3
xlat
movsb
push
pop
sti
sub
test
or
test
dec
xchg
add
jo
shld
mov
lods
mov
push
push
push
push
icebp
stos
sub
cmp
push
sub
xchg
push
pop
and
or
and
orl
in
leave
int3
sub
jbe
sbb
push
mov
lock
push
jl
test
mov
mov
cs
dec
sbbl
sub
andb
add
es
das
and
stos
dec
push
xchg
xchg
dec
cvttps2pi
jae
or
shr
cli
dec
jnp
cli
cmp
in
je
mov
push
pop
mov
popf
jecxz
loopne
dec
lret
daa
je,pt
add
xchg
stc
jae
loope
jno
or
sbb
notl
rcll
xorl
push
lcall
xor
scas
test
dec
rcl
mov
or
dec
jbe
data16
mov
mov
sbb
xor
pushf
xchg
andl
adc
jmp
mov
xchg
movsb
sbb
je
icebp
insl
pop
inc
js
test
pop
and
push
jg
jae
sti
add
sti
pmaddwd
rcll
and
and
adc
iret
mov
inc
jbe
std
jmp
loope
adc
fldcw
xor
test
pop
fcoml
push
sub
fidivs
mov
and
call
jle
enter
push
cmp
sbb
sahf
pusha
sbb
dec
push
sub
push
cs
jmp
mov
and
cmp
pop
lcall
ljmp
sarb
gs
jle
sbb
das
xor
adc
test
fidivrl
xlat
stos
sub
lock
ja
out
imul
arpl
subl
push
addl
sub
stos
neg
xlat
fsts
sub
sub
add
cmp
pop
jns
pusha
jo
test
dec
leave
and
ss
scas
cmp
xor
mov
ljmp
shrb
sub
push
sub
bswap
jns
dec
jl
cltd
inc
mov
imul
xchg
pop
pop
xchg
or
xlat
insb
xor
in
inc
in
into
mov
movsb
cmp
jp
or
dec
push
out
sahf
mov
cmpsl
jle
xchg
push
scas
adc
fdivs
pop
cld
shrl
add
les
fadds
enter
leave
pop
movsl
jecxz
mov
mov
aam
add
push
data16
sub
mov
les
hlt
and
movb
push
or
mov
jl
lret
inc
fsub
mov
mov
pop
dec
lock
dec
mov
int3
pop
cld
shlb
add
sbb
test
roll
sti
int3
std
inc
xlat
mov
push
clc
sahf
mov
imull
fimuls
fwait
cmpsb
xor
insl
aas
push
inc
test
les
in
leave
sub
mov
fcompl
xchg
out
xor
mov
add
js
mov
cmp
push
mov
xor
outsb
aad
out
das
pop
iret
daa
adc
popf
xor
clc
cld
jmp
sahf
cmp
out
shll
adc
dec
lahf
enter
ja
fldenv
mov
and
icebp
add
imul
adc
mov
loop
lret
cltd
mov
mov
add
repnz
xchg
sub
mov
shll
movsb
inc
stos
outsb
stos
dec
jbe
cmp
or
sti
es
push
repz
inc
jno
mov
dec
sbb
lods
lods
xor
roll
xor
and
pop
cmp
sub
push
inc
xchg
sbb
sbb
push
dec
out
cs
mov
dec
popf
lea
inc
ja
lea
cmc
jbe,pt
cmp
mov
sarl
mov
aas
push
dec
data16
jmp
shrl
cltd
shll
rcll
cld
sti
lea
jle
cmpsb
pop
out
add
push
ljmp
xchg
fucomp
push
into
xchg
loop
fimuls
rcrb
inc
inc
xor
data16
lock
sub
pop
ds
xchg
mov
xchg
add
iret
sbb
push
ljmp
in
fwait
add
xor
sub
inc
aad
mov
nop
dec
jge
pop
insb
popf
jae
or
push
push
mulb
push
test
das
push
cmpsb
inc
jmp
ss
dec
mov
or
push
push
test
clc
cwtd
arpl
push
fwait
test
rcll
test
xchg
fisubs
mov
inc
xchg
inc
sbb
adc
inc
outsb
das
dec
scas
fwait
mov
test
xchg
add
mov
pushf
js
or
or
mov
insb
mov
xchg
cmp
push
mov
cmpsb
pop
es
rcrb
or
movsl
ja
jmp
call
cmp
in
mov
xor
push
sahf
stc
mov
inc
pushf
stos
es
outsl
cmp
icebp
rorl
xchg
bound
dec
cmc
std
push
xor
dec
test
int
pop
popa
push
idivl
ds
jl
jge
dec
mov
jb
add
in
xor
loope
ret
mov
aam
test
lods
and
pop
push
and
or
mov
sti
xor
mov
and
jbe
or
xor
and
in
xchg
push
jae
lea
mov
sub
cmc
cld
sti
adc
pop
imul
insb
mov
pop
xor
xchg
mov
out
or
sbb
sbb
adc
sahf
mov
add
mov
rcll
rcrl
enter
repz
pushf
stos
jle
mov
cld
ja
mov
jp
iret
mov
pop
into
pusha
pop
pop
push
or
inc
psubsw
jnp
and
mov
mov
adc
shrl
mov
jnp
imul
lret
aad
push
sub
jl
loop
mov
movsl
add
xchg
mov
adc
out
pop
loopne
adc
out
jb
in
pop
mov
ljmp
fidivrs
pop
adc
xor
imul
or
or
aaa
decb
dec
mov
pushf
lock
shlb
sbb
push
shrb
dec
and
add
push
xor
add
or
cmp
jp
addr16
insb
pop
jmp
mov
and
aam
outsl
andb
notl
inc
bound
data16
jno
loop
stos
dec
mov
filds
xchg
jo
out
lret
insl
jb
stos
pop
and
push
xchg
lcall
int
ficompl
and
fst
jl
push
sbb
enter
mov
std
outsb
cmp
pushf
outsb
insl
adc
push
js
subl
sar
inc
dec
or
out
sbb
mov
inc
adc
cmp
inc
test
mov
iret
loope
push
or
jge
xchg
iret
lret
dec
lret
int
mov
out
clc
add
and
cli
xchg
and
jne
out
push
ja
and
mov
mov
xchg
test
inc
aas
push
daa
sahf
mov
in
addl
xor
mov
rorb
rorl
adc
cltd
ds
insb
sbb
push
pop
jb
lds
mov
pop
or
mov
dec
sbb
sbb
xchg
cld
jne
enter
or
ljmp
out
xor
adc
jb
mov
arpl
cmp
fnsave
xchg
xchg
push
insl
pop
cwtl
inc
mov
sub
mov
dec
xchg
shlb
jle
cmp
icebp
inc
popa
inc
ja
pop
punpcklwd
ja
cmpl
pop
or
rorb
jae
jae
add
cmp
adc
xchg
pop
cmc
push
popf
add
mov
lahf
add
popf
mov
or
mov
jg
adc
mov
jne
mov
daa
in
test
push
mov
push
pop
push
mov
ret
gs
outsl
call
mov
aaa
mov
stc
sub
cmpsl
add
ja
xchg
mov
addr16
xchg
orb
fucom
push
sub
xorl
add
std
daa
lock
push
lock
movsb
repz
lahf
pop
addl
sbb
nop
add
jecxz
jl
decl
push
add
jo
lret
or
push
cmp
iret
pop
cmp
andl
ljmp
mov
adcl
in
lea
and
push
push
in
inc
pushf
xor
dec
mov
jle
and
pop
rcll
pop
shl
pop
pop
out
stc
jmp
stos
push
inc
add
mov
sub
or
xor
pop
xchg
push
xchg
test
xor
addl
mov
sbb
push
inc
mov
inc
pushf
xor
xchg
mov
fwait
int3
mov
pop
mov
mov
xchg
pop
pop
inc
mov
ja
data16
jle
pop
imul
enter
xchg
mov
fidivrs
and
icebp
add
rcrb
fstps
movsl
cwtl
xor
mov
mov
shlb
pop
pushf
ret
es
fcoms
out
pop
and
mov
xor
inc
lcall
inc
pop
insl
add
mov
in
jno
lahf
pop
rcrb
jg
scas
mov
movsb
faddl
and
aad
push
xor
xlat
or
insl
or
es
nop
adc
sbb
js
mov
daa
lock
in
cmc
or
fsubrs
or
pop
sbb
pop
and
mov
ss
xchg
mov
js
dec
push
hlt
stos
xchg
outsb
jns,pn
xor
xchg
push
xchg
mov
jmp
icebp
inc
xchg
jp
ss
daa
cmp
std
mov
lret
mov
lcall
push
arpl
dec
cli
fs
pop
cld
inc
lgs
lret
mov
cli
xchg
xor
lret
test
inc
cmp
push
sub
dec
jno
cli
cmp
imul
dec
jmp
sbb
dec
scas
inc
adc
ljmp
cmp
dec
test
cmpsb
imul
add
cld
stos
test
inc
vcvttss2si
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
or
ja
add
pop
add
add
pop
andl
sbb
or
test
push
fisttpl
pop
xor
jge
cmp
enter
lret
int
popl
mov
mov
aaa
fcoml
fdivs
into
and
shll
adc
jge
inc
stos
pop
mov
repnz
mov
add
shrl
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
cmp
dec
dec
repz
mov
mov
ret
test
xor
es
arpl
cli
les
lods
je
xchg
jge
pop
push
cmp
xchg
xor
inc
addr16
inc
jle
lahf
fcmovne
loopne
hlt
cs
nop
imul
cmp
sbb
add
sub
sub
addb
into
add
pop
add
add
pop
fldenv
sub
mov
in
mov
int3
push
cmpsl
andb
xor
hlt
das
inc
call
add
movsl
cwtl
out
sub
es
insl
jno
and
mov
mov
test
or
orb
cmp
fcompl
sarb
add
and
aam
aam
ljmp
je
test
nop
pop
mov
add
pop
add
add
sub
push
cld
push
in
lods
or
bound
or
or
mov
cmpsb
scas
mov
scas
sub
mov
inc
mov
sbb
inc
add
jp
or
pop
adc
test
in
fstpl
sbb
fs
add
lahf
lea
add
add
mov
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
fwait
and
addr16
sbb
jl
xchg
xor
jle
mov
fsubrl
popa
mov
aaa
sbb
orl
ss
jae
notl
mov
in
cli
pop
fisubrl
jbe
mov
loop
lret
add
insb
xchg
xrelease
notb
pop
mov
add
out
lods
cmp
stc
stc
fldl
popf
ds
add
pop
add
add
jb
xor
dec
dec
xor
out
mov
pusha
jl
adc
bswap
mov
dec
add
or
cmp
mov
mov
xchg
pop
adc
sbb
inc
mov
popa
out
adc
imul
sub
xchg
das
cwtl
lock
lret
jle
les
lods
fwait
adc
pop
sbb
push
xor
gs
aaa
push
mov
je
iret
add
pop
add
add
ret
or
lahf
or
roll
pop
mov
insl
inc
repz
dec
xor
mov
js
pusha
and
movsb
mov
mov
imul
pop
loope
dec
lods
xchg
aaa
loope
cmc
imul
push
imul
fldt
add
loope
adc
push
adc
cwtl
out
cmp
add
pop
add
add
in
push
mov
fwait
add
inc
nop
scas
pop
lods
or
out
int
xlat
xor
enter
sub
incb
mov
setge
sub
ss
stc
xchg
xchg
scas
in
data16
xchg
or
dec
inc
pop
lcall
push
int3
xchg
mov
pop
xlat
add
sub
das
jle
jg
imul
push
fwait
adc
add
pop
add
add
jb
mov
xlat
inc
loop
mov
push
lods
arpl
std
outsl
fsubl
lds
lahf
in
jne
push
pop
mov
fisttps
je
imulb
jb
sub
jo
fisubrs
xor
xchg
jno
xchg
mov
or
addr16
and
mov
mov
ret
test
add
add
out
jbe
jl
dec
cmp
in
data16
mov
lea
push
jo
shlb
test
xchg
sub
mov
mov
imul
ret
inc
or
mov
pop
test
arpl
xchg
leave
stos
setp
mov
push
cmp
inc
pop
pop
push
mov
add
or
ret
lods
sub
mov
adc
add
add
fdivrs
sti
and
and
add
add
js
adc
lahf
inc
cmp
adc
mov
cmp
jle
int3
in
sub
pop
adc
dec
jg
push
push
iret
daa
push
pop
pop
lds
cmp
cmp
cmc
call
xchg
fld
add
ror
outsl
clc
ror
push
and
push
add
add
pop
sub
sbb
mov
mul
jge
negl
rorl
lock
push
mov
je
scas
xor
iret
sbb
bnd
and
mov
int
mov
push
stc
dec
push
push
pop
je
add
add
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
inc
fdivrs
add
add
or
aaa
sbb
sbb
or
cltd
mov
push
push
push
sti
dec
imul
jae
stc
dec
popa
mov
daa
jnp
add
mov
pop
push
hlt
test
lret
jp
adc
cmc
jl
imul
cli
js
push
cmp
jp
pop
aad
sbb
add
add
mov
push
mov
xlat
push
sub
pop
add
pop
add
add
sub
sarb
sbb
adc
in
lcall
fisttps
pop
xchg
popf
scas
sarl
add
fstpl
je
je
mov
enter
fwait
cwtl
fisttpl
pop
xor
xchg
lcall
jae
cmp
and
xor
in
adc
add
stos
pushl
xchg
push
lock
add
pop
add
add
mov
mov
rol
popf
adc
pop
and
sbb
repz
inc
xchg
mov
sub
out
jbe
jge
hlt
cmp
inc
or
sub
icebp
push
mov
lods
in
mov
add
xor
in
mov
sbbl
xor
mov
fsts
lods
cmpsb
jecxz
add
cmp
in
fimuls
jp
sahf
imul
add
add
sbb
das
popf
mov
outsl
fbld
outsb
xlat
in
inc
xchg
push
das
and
scas
jo
cs
ljmp
mov
jo
fidivrs
loop
pop
popf
pop
or
ljmp
add
and
ljmp
lods
out
sub
add
inc
or
mov
add
mov
sbb
std
negb
sub
or
adc
pop
add
add
pusha
push
in
arpl
mov
push
and
loope
add
std
clc
in
sub
aam
mov
lods
and
icebp
xchg
fwait
jnp
js
jbe
mov
lcall
fisubrl
or
sbb
cmp
sbb
fst
add
xor
jb
inc
mov
mov
pop
add
add
daa
out
js
xchg
xor
pop
and
loope
into
jns
arpl
or
mov
push
gs
add
fcmovu
popa
adcb
inc
xchg
dec
push
pextrw
jbe
ret
pop
popf
adc
out
mov
cltd
rclb
mov
jecxz
mov
daa
into
sub
cmp
add
add
pop
sub
insb
jl
add
pop
add
add
addr16
mov
mov
cmp
cmp
movsl
push
out
mov
stos
adc
stos
mov
test
test
lcall
add
test
push
outsb
pop
or
dec
popa
ds
xchg
mov
and
cli
cmp
ret
mulb
add
mov
aam
xor
and
xlat
fadds
add
add
mov
scas
jmp
xor
adc
pop
jnp
jo
daa
fidivrs
push
xor
int3
push
xchg
sub
sbb
out
test
out
push
cmp
and
fsubrp
or
cmp
and
stc
mov
inc
xchg
pop
shrl
aaa
scas
jbe
or
int3
add
push
add
mov
out
and
xor
add
pop
add
add
mov
loope
call
dec
push
sbb
lret
cmpsb
fistl
xor
pop
ja
subl
jecxz
inc
mov
lret
push
jl
mov
test
je
ficomps
dec
jbe
or
pusha
mov
jp
lea
filds
jmp
repz
fimull
cmp
scas
fmuls
add
add
inc
pop
int
inc
stc
shr
scas
and
xchg
xor
lahf
inc
cmpsb
aas
jecxz
lahf
mov
jne
in
or
repz
inc
or
cmp
adc
mov
nop
jecxz
inc
adc
lods
xlat
ficomps
xor
adc
mov
xor
adcb
test
pop
inc
pop
iret
pop
aad
ss
dec
adc
flds
add
add
dec
outsl
fs
pop
adc
call
test
pop
loop
das
mov
and
lret
int3
xor
pop
adc
xchg
je
fimuls
loop
dec
and
mov
cmp
adc
movsb
imul
stos
leave
shlb
mov
lret
aam
add
cld
clc
xor
inc
fiaddl
add
add
push
push
inc
mov
jne
bound
lock
repnz
popl
cmp
cmpsb
or
xor
lret
into
cld
cmp
mov
mov
cmp
or
cmc
divl
popf
xchg
or
xchg
ja,pt
jp
add
lock
jle
repz
xchg
mov
pop
add
add
leave
fisubs
dec
mov
ret
sub
stos
jns
outsb
jbe
jl
outsb
ljmp
push
mov
fists
inc
cmp
je
scas
call
add
inc
or
pop
les
push
mov
mov
mov
adc
loope
fadds
add
adc
adc
mov
lds
stc
fiaddl
add
add
push
inc
out
inc
iret
lcall
ljmp
push
lods
ja
movsb
out
and
iret
movsb
push
adc
sbb
push
dec
jge
sbb
and
dec
adc
leave
adc
je
mov
jns
and
rcl
dec
xbegin
mov
add
jle,pn
movsb
add
mov
lock
mov
rclb
dec
push
fildl
add
add
in
je
cli
cs
nop
test
jnp
cmp
xchg
in
xlat
dec
scas
leave
adc
jmp
mov
jno
out
or
bound
stc
lds
inc
aas
mov
adc
mov
shrb
sbb
pop
jb
fwait
sub
out
jno
mov
dec
dec
and
xor
add
sqrtps
cmc
das
sbb
xchg
iret
lret
scas
fildl
add
add
ss
push
and
push
addps
lret
addr16
sbb
mov
push
pusha
movsb
jb
sub
xchg
sar
adc
mov
sub
or
sub
inc
ljmp
adc
ljmp
aam
jecxz
mov
sub
sub
cwtl
adcl
les
aam
pop
add
sub
fildll
push
faddl
add
add
push
xchg
jge
stc
pop
or
movsb
ss
addr16
fldl
sub
in
cmpsb
lahf
push
clc
dec
jp
scas
daa
je
pusha
cmp
xor
fisubs
jne
cli
inc
xchg
pop
nop
les
mov
in
imul
mov
cmp
jg
or
cwtl
addr16
add
add
fs
testl
in
sbb
add
pop
add
add
jecxz
popa
stos
mov
mov
pop
in
or
rcrb
stos
cmp
or
xlat
cmpb
jno
pop
aas
mov
addl
and
pop
sahf
xor
stos
ljmp
ror
xor
adc
xor
sub
jns
lret
lods
dec
add
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
add
mov
add
fimuls
test
aaa
lret
and
and
push
ffreep
cmp
jae
bound
inc
fwait
shll
jae
dec
inc
rcrl
sub
stos
addr16
scas
sub
inc
lahf
std
pop
jge
sbb
sub
inc
stc
notl
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
filds
sub
xchg
cld
sub
roll
jns
mov
fwait
dec
mov
jbe
bound
add
xor
inc
cltd
xor
jns
dec
sbb
cltd
ss
or
jae
push
xor
aam
inc
push
mov
push
lds
inc
jl
mov
fists
dec
mov
xchg
adc
cmp
stos
rolb
add
add
addr16
scas
stos
adc
in
cltd
scas
dec
adc
outsl
mov
add
cld
push
dec
mov
fiadds
xlat
mov
xchg
push
mov
loop
pop
push
jo
xor
fsts
mov
stos
jp
push
cmp
sub
cwtl
dec
inc
mov
insb
add
fisttps
push
cmp
add
pop
add
add
mov
loope
lret
xchg
jmp
loope
out
mov
and
int3
mov
das
and
jnp
sbb
push
and
jb
sbb
xchg
fdivs
dec
adc
mov
dec
lea
dec
pop
and
xor
jae
ds
repnz
popf
bound
mov
sbb
jl
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
mov
mov
mov
push
jp
out
imul
sub
dec
ss
mov
lock
mov
sub
cs
cmpsl
mov
jae
addr16
sub
jne
push
in
sub
dec
xor
fistps
inc
mov
pop
in
je
dec
fsubrl
and
lods
add
and
cmp
xchg
cmp
pop
add
add
cld
repnz
pop
jmp
mov
in
fsubrl
cli
stc
pop
xchg
fmull
jle
and
mov
sbb
lods
std
push
pop
jle
xchg
popf
xchg
xchg
gs
js
push
jno
adc
ja
add
shll
pop
int3
mov
mov
shrl
stos
ret
add
popf
aam
or
push
rolb
add
add
lods
test
dec
push
iret
mov
sub
dec
adcb
rcll
stos
mov
fisubrl
pop
xor
dec
insb
gs
inc
and
aaa
inc
ret
inc
jae
ja
in
mov
cmp
push
hlt
sub
mov
repnz
add
add
iret
sub
es
hlt
mov
jbe
hlt
mov
and
cmpsb
inc
xor
add
add
fisttps
stos
mov
mull
mov
int3
xlat
les
or
or
inc
and
mov
addl
push
xchg
sub
adc
in
stos
inc
popf
mov
cmp
sub
jle
pop
mov
sbb
cwtl
inc
jns
dec
xchg
movsl
sbb
cmp
fcomp
sti
sub
mov
xor
into
mov
sub
out
clc
dec
call
add
add
push
stos
dec
sahf
repz
xchg
lret
xchg
andb
xchg
enter
int
sbb
lahf
dec
fisubrs
adc
xchg
xchg
mov
rclb
mov
int3
xor
or
and
adcb
adc
cmp
cmpsb
mov
and
add
add
in
outsb
and
pop
mov
daa
roll
add
add
lods
lds
mov
loopne
cmp
inc
pop
cli
ficoml
pop
lret
dec
sbb
aaa
scas
dec
add
mov
xor
adc
dec
rolb
jns
pop
int3
fidivrs
in
mov
xchg
jg
cmp
scas
pop
cld
or
sbb
dec
xlat
lea
ja
dec
sbb
imul
incl
add
mov
and
or
add
add
or
mov
and
pop
xor
incl
xor
loop
js
test
adcb
push
push
cltd
cmp
add
mov
jno
adc
push
frstor
cmp
inc
xchg
pop
mov
inc
les
popf
push
out
dec
sbb
jb
mov
adc
sti
add
stc
call
into
inc
mov
mov
roll
add
add
aad
sti
daa
out
lret
mov
sbb
nop
loopne
fsubrl
or
icebp
outsl
fsub
xchg
pop
movsl
dec
iret
mov
pop
lahf
imul
pushf
mov
outsb
mov
dec
push
add
ljmp
ja
xor
pushf
jbe
mov
add
fisubrs
cwtl
sar
repz
addr16
add
pop
add
add
daa
sub
push
sbb
movsb
inc
pop
clc
xor
sub
dec
pop
mov
shrb
mul
pop
pop
mov
das
mov
cmp
iret
mov
lds
lods
push
push
popf
mov
aas
jmp
add
int3
sbb
out
loopne
lods
ss
andl
add
add
out
sub
pop
sub
scas
xlat
js
stos
leave
inc
push
fdivs
jnp
je
dec
clc
push
jle
fsubrl
rorl
xchg
rcll
pop
fildl
push
cli
sbb
andb
sbb
xorl
in
mov
aad
jns
aam
popl
push
test
fildll
test
aam
add
add
fstpl
add
lods
pop
aas
nop
stos
and
mov
push
xchg
jb
jge
push
cmp
ret
loop
frstor
js
pop
arpl
imul
pop
loope
xor
mov
xor
pop
std
stos
hlt
insl
pslld
pop
stos
inc
cmp
add
movsl
jo
mov
fwait
loope
sub
sarb
add
aad
add
add
arpl
fsubr
inc
cmpsb
testw
jl
stos
cld
adc
test
pop
cmp
or
pop
sbb
sbb
das
lock
aas
jne
mov
cmp
add
lods
pop
mov
mov
cmp
ret
fildl
pop
sub
dec
mov
lods
cmp
pop
leave
add
divl
dec
cmp
dec
xor
ss
movsb
aad
add
add
mov
jl
adc
test
cmp
loopne
jne
inc
stos
inc
ret
lds
daa
mov
inc
dec
push
add
outsl
pop
pop
gs
push
push
daa
pop
insb
mov
xchg
mov
jl
daa
mov
insl
xchg
sub
mov
add
arpl
jge
mov
daa
mov
aad
add
add
mov
lods
cltd
mov
insl
lods
add
push
xor
pusha
lods
clc
add
incl
xchg
or
xchg
jnp
or
data16
insb
out
shrb
stos
sahf
xor
or
and
jecxz
xchg
ret
cmpb
daa
push
imul
mov
mov
rcr
add
add
in
sub
ljmp
imul
stc
and
shlb
cmpsb
icebp
add
ljmp
or
stc
push
dec
push
sbb
or
out
jg
hlt
inc
test
or
stos
inc
dec
or
rcll
cmp
push
xorb
and
add
daa
ss
xor
and
popf
scas
sbb
add
pop
add
add
adcl
sti
negl
mov
lahf
push
sub
mov
es
iret
add
dec
jg
loopew
orl
fwait
pop
out
inc
mov
pusha
loop
call
or
add
xor
test
fnsave
pop
add
test
add
add
add
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
xchg
jge
xchg
sarl
bound
xchg
mov
aad
and
push
pop
leave
pop
pop
leave
pop
add
and
loope
jge
in
sub
mov
call
adc
pop
lret
dec
add
mov
push
stos
push
aas
pop
inc
sub
pop
sub
popf
push
add
aad
out
fucomip
ss
cmp
sbb
rcr
add
pop
add
add
xchg
dec
outsl
dec
aas
mov
sahf
and
inc
pop
jnp
sbb
cmp
xchg
cs
sbb
daa
sbb
loop
and
insl
fstpt
imul
dec
rcrb
jl
mov
fcmove
jecxz
iret
sub
mov
jl
aas
pushf
adc
inc
inc
cwtl
rolb
outsb
jbe
lret
outsb
negb
xchg
xchg
sub
add
pop
add
add
sbbl
in
pusha
and
add
pop
outsb
sub
mov
sbb
pop
add
mov
cmc
or
push
scas
push
ja
xchg
xchg
fsubl
cld
add
mov
into
adc
pop
sub
mov
jb
jl
adc
loop
pop
sub
mov
cmp
paddsb
nop
shl
pop
xor
add
add
cmp
sbbl
cld
sub
enter
out
xor
pop
into
mov
cmp
pop
test
ret
dec
addr16
mov
ja
xor
sbb
scas
negl
into
pop
mov
dec
jno
mov
inc
stos
pop
dec
clc
loopne
pushf
imul
push
jns
roll
add
jle
call
cli
lcall
add
pop
add
add
jmp
jb
divl
fdivrl
scas
cli
lock
sub
add
push
lock
enter
or
sbb
mov
xor
sbb
out
sbbl
ss
sub
loopne
das
jnp
xchg
sar
pop
icebp
lock
add
add
fincstp
shl
frstor
pop
dec
out
sbb
filds
add
add
clc
call
loopne,pn
dec
arpl
jae
sbb
add
popa
adc
mov
and
pop
inc
mov
jg
stos
lret
pop
inc
push
dec
and
mov
inc
fisubs
inc
mov
xlat
dec
ret
sub
stos
lds
jecxz
push
or
pusha
pop
add
aam
fnstsw
out
fcmovu
in
icebp
outsl
repnz
filds
add
add
mov
addr16
je
jle
aad
je
dec
mov
iret
fbstp
lcall
xchg
dec
stos
mov
or
xor
sub
add
ljmp
mov
popa
pop
mov
lock
cld
pusha
sbb
rorl
in
jp
lret
inc
jmp
add
sbb
inc
jecxz
mov
in
cmp
repz
add
add
xchg
nop
pop
es
hlt
ja
mov
repz
and
lods
add
loope
mov
jb
mov
dec
push
sub
pop
cmpsl
mov
and
add
out
dec
dec
inc
xchg
and
cmpsl
xchg
pop
jecxz
push
xchg
or
cmc
add
mov
icebp
and
mov
loopne
add
add
call
jp
adc
mov
cmp
xor
push
popf
inc
cmc
inc
imul
jo
pop
es
sub
pushf
faddl
inc
and
js
pop
sub
scas
pop
cmp
pop
push
ret
sbb
test
movsb
cmp
sub
push
ds
in
adc
or
push
ffreep
add
xlat
repz
das
cli
fists
dec
es
sar
inc
lcall
add
mov
dec
inc
mov
aas
pop
es
cmp
jbe
cld
push
dec
push
into
shlb
push
insb
cmc
repnz
ds
das
adcb
dec
je
pop
leave
hlt
mov
push
popf
mov
push
jle
movsb
cltd
cmpsb
orb
ss
xor
and
mov
je
mov
cs
addr16
xchg
cli
gs
jmp
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
