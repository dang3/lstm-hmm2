push
mov
sub
movl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
push
push
mov
mov
xor
or
sub
or
mov
lea
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
sbb
xor
or
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
mov
adc
mov
movl
movzwl
sub
mov
or
movl
subl
mov
mov
sbb
mov
xor
inc
mov
orl
add
movzwl
xor
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
xor
orl
add
movl
jmp
mov
mov
mov
mov
movl
inc
movl
cmp
movl
jb
mov
addl
mov
adcl
xor
orl
add
jmp
add
mov
not
mov
addl
xor
sub
mov
add
movzwl
mov
mov
movzwl
mov
xor
add
mov
mov
inc
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
mov
jmp
mov
sub
xor
mov
mov
mov
xor
mov
mov
xor
xor
xor
sub
sbb
add
adc
xor
mov
mov
xor
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
xor
push
mov
mov
sub
add
movl
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
push
sub
mov
negl
mov
sbbl
xor
push
mov
add
mov
mov
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
mov
xor
xorl
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
xor
movl
mov
movl
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
andl
mov
xor
add
add
mov
mov
adc
xor
mov
mov
andl
xor
mov
mov
add
mov
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
or
movl
mov
mov
add
movl
neg
mov
mov
mov
sub
and
mov
mov
andl
push
xorl
push
movzwl
xor
mov
xor
push
mov
subl
add
addl
mov
orl
mov
test
movl
je
movzbl
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
xor
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
dec
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
add
mov
jmp
imul
jb
outsl
js
or
mov
ret
jae
jae
xlat
sahf
jae
aam
mov
test
mov
clc
mov
jns
nop
cs
mov
ja
lods
jle
imul
incb
fisttps
sub
or
lret
shr
inc
arpl
adc
mov
xor
cwtl
in
incb
mov
xchg
lock
jno
jp
push
sahf
bound
out
pop
test
pop
mov
int3
mov
xchg
cli
cs
pusha
sub
sub
mov
fimull
inc
test
mov
icebp
fwait
aam
mov
xchg
dec
jno
in
or
xchg
stc
dec
jp
insl
cmp
rcll
int
test
dec
das
inc
xor
mov
mov
into
inc
add
aaa
stc
enter
ficoms
sub
mov
cmp
sub
push
test
push
push
jg
jnp
dec
xor
call
or
push
imul
mov
pushf
stos
cmp
sbb
or
or
pop
push
subl
sub
sub
and
and
cmc
and
mov
pop
cmpsl
aas
adc
cmc
scas
push
mov
inc
mov
cmc
dec
pop
push
or
mov
push
outsb
pop
xchg
push
or
sbb
inc
rcr
jp
les
and
inc
loopne
cmpsb
sub
addr16
pop
je
push
xchg
stos
adc
push
xchg
lcall
gs
and
or
inc
and
sbb
mov
jle
loope
call
mov
xor
and
fldenv
insl
pop
aam
mov
mov
pop
jmp
pop
rorb
movsl
ds
pop
adc
or
stos
or
mov
jge
xor
jb
and
je
lock
mov
je
mov
out
rcll
xchg
mov
rcrl
inc
sar
jmp
addr16
or
cltd
std
lods
jbe
std
in
sub
pop
mov
fdivl
mov
popa
xor
sbb
pop
fwait
adc
sti
push
insb
shrl
ss
mov
insb
js
ja
jle
loop
push
out
xor
ss
addr16
inc
fxch
mov
mov
pop
das
xor
push
out
leave
dec
retw
dec
pop
cwtl
mov
xchg
xlat
mov
arpl
adc
inc
mov
stos
es
std
jp
inc
cli
lret
es
das
xchg
mov
and
cli
xor
adc
js
mov
inc
dec
or
mov
in
stos
sbb
flds
shlb
mov
cmp
fnstsw
jle
push
xchg
and
sub
pop
and
cmp
clc
lods
dec
and
mov
xchg
mov
push
sub
subb
pop
fcoml
pop
inc
mov
add
fstpl
pusha
inc
shll
lret
jb
ret
lahf
jg
mov
push
iret
dec
repz
arpl
div
imul
and
int
mov
ljmp
inc
loope
dec
push
loope
insb
dec
jecxz
dec
dec
mov
sarb
cmp
inc
cli
push
loope
mov
jecxz
orl
mov
cltd
sub
bound
xchg
push
mov
mov
fdivs
sub
dec
cmpsl
mov
test
clc
or
add
call
pop
mov
mov
outsb
fimull
inc
into
xchg
int3
int3
xor
and
pop
xlat
clc
mov
rcrb
lret
subb
pop
sub
pop
pop
inc
hlt
pop
call
into
popf
xchg
push
pop
mov
ret
lods
lea
xor
jnp
xor
inc
outsl
clc
pop
and
std
test
pop
cld
call
adc
fdivs
lds
dec
pop
xchg
lret
inc
fisubs
or
sahf
das
pusha
mov
data16
push
arpl
cltd
movmskps
outsb
mov
add
enter
leave
sbb
and
sub
add
shr
out
out
mov
stos
add
scas
fisubl
mov
pop
clc
mov
push
pop
cmp
mov
lods
scas
es
add
addr16
mov
lcall
and
push
xchg
push
xor
mov
dec
lcall
dec
and
cmc
jmp
cmp
pop
int
clc
test
test
fwait
mov
out
call
testb
push
cmpsb
xchg
xor
or
or
mov
aam
sbb
mov
adc
cmpsb
jmp
mov
je
nop
mov
aas
add
sti
add
jp
out
adc
rorb
push
and
push
roll
jle
jb
subl
rolb
xor
mov
ret
dec
mov
ds
mov
sahf
mov
jl
xchg
lahf
ss
jo
lds
loop
xchg
shll
sbb
mov
sbb
dec
add
jge
lods
repnz
sbb
ds
or
pop
imul
std
stos
pop
loope
or
add
and
push
testl
test
mov
xchg
or
scas
bound
pop
cs
insb
fnstenv
cmp
or
push
dec
cmpsb
mov
and
mov
or
push
mov
repnz
push
mov
adc
lcall
mov
adc
in
int
adc
imul
popf
in
pop
jne
adc
fucomi
push
orps
ds
int3
inc
mov
add
sahf
adc
rorb
shl
add
jbe
int3
xlat
lea
add
or
std
inc
incb
sub
jg
adc
or
push
jns
insl
in
rorb
fistps
cli
jno
loopne
jge
fsubl
test
jg
dec
sbbb
xor
sbb
mov
mov
pusha
outsb
jecxz
mov
outsl
mov
mov
ljmp
push
mov
out
fiaddl
inc
gs
out
rclb
dec
push
scas
xchg
dec
sub
je
sahf
pop
bound
jo
add
xchg
fcoms
mov
lea
dec
cmpsl
pop
jno
mov
inc
lds
bsf
add
mov
add
in
ljmp
inc
fcompl
or
cmp
outsb
xor
outsb
lods
or
xor
iret
es
stc
icebp
mov
bound
jb
sub
adc
pop
movsb
ljmp
imul
push
cmpsb
jecxz
sub
sti
test
data16
mov
jns
cmp
cld
dec
pop
cs
or
movsl
sbb
lret
cltd
adc
mov
pop
mov
and
ret
sub
pop
xchg
mov
rcll
push
jbe
cmp
sub
test
inc
xchg
and
add
dec
aaa
addr16
int3
pop
xorl
xchg
and
insl
icebp
ret
repz
adc
mov
jmp
or
int3
sti
dec
mov
mov
dec
mov
adc
and
movsb
xchg
outsl
call
mov
inc
jmp
lods
test
mov
lahf
jecxz
cs
test
and
cmp
ror
data16
ds
mov
insl
imul
sub
iret
icebp
aaa
in
cmc
aam
mov
mov
cmp
mov
inc
sbb
jo
add
mov
dec
adc
sbb
test
ljmp
inc
loop
ret
imul
sbb
pop
int3
jl
jae
push
test
sub
dec
jne
mov
imul
shl
pop
or
mov
loope
aas
imul
mov
js
add
cmp
or
cltd
adc
mov
cld
call
lods
insb
call
clc
mov
pop
mov
mov
mov
les
mov
adc
testb
add
xor
dec
mov
cmp
xchg
or
push
scas
loop
mov
adc
and
clc
gs
or
sub
sbb
out
insb
lret
cmp
inc
inc
es
jbe
loope
xor
sbb
mov
dec
lds
pop
mov
or
fildll
add
mov
cld
or
xor
push
lret
cld
out
lret
mov
and
and
push
loop
add
jb
sbb
lret
xor
sbb
inc
aam
jo
add
jmp
popf
sub
sbb
fldcw
sub
jno
std
arpl
decl
outsb
clc
fisttps
sub
or
cmp
mov
test
lret
flds
les
mov
xor
and
mov
xorb
fsts
sub
adc
shl
pop
insl
push
xor
fnstsw
push
mov
mov
nopl
loopne
mov
push
mov
addl
fwait
idivl
mov
aam
pop
jno
mov
xchg
dec
aad
es
xchg
mov
and
loopne
mov
xchg
sbb
rclb
scas
push
jbe
and
cwtl
test
push
xor
cld
push
jecxz
mov
inc
aam
mov
cmp
in
mov
dec
iret
add
adc
fistps
mov
je
mov
iret
test
testl
mov
xor
stc
ss
lcall
jbe
mov
cmpsb
ja
or
mov
jmp
shlb
xchg
in
popa
imul
dec
stos
filds
push
inc
sbb
pop
data16
lahf
sarl
daa
es
xchg
push
jo
int3
fwait
inc
movsl
sbb
ficomps
and
xchg
into
mov
and
mov
mov
lds
dec
ficoml
js
pop
push
dec
stc
sub
loop
aam
jmp
fcmovnu
fsubl
sub
movsb
fsub
pop
hlt
xchg
mov
add
or
inc
jmp
loopne
clc
rclb
cltd
sti
mov
dec
sarl
sub
inc
scas
or
xchg
mov
adc
iret
int
stc
movsb
fs
ja
pop
dec
ret
hlt
xchg
scas
daa
iret
rcr
pop
jae
xor
jne
stc
jo
sub
or
xor
imul
cmp
dec
gs
pop
lea
orb
push
incb
enter
mov
loope
imul
cmp
and
rolb
xor
movsl
or
dec
inc
lock
xor
sbb
sub
xchg
ljmp
push
iret
orl
adc
adc
mov
test
ret
in
sete
jg
out
or
lahf
inc
push
int3
cmpsl
mov
rolb
push
pop
stc
mov
call
add
jp
xchg
add
dec
daa
jle
and
adcl
data16
mov
shrl
sbbb
xlat
or
mov
mov
arpl
dec
iret
inc
cld
or
rcl
inc
fs
cmp
inc
sub
mov
cwtl
jl
in
inc
cli
cli
or
pop
adc
inc
pusha
add
or
lods
or
shll
lret
push
in
adc
int
dec
sub
shll
sub
xchg
push
movsb
push
and
outsl
add
jmp
and
imul
pop
inc
mov
pop
and
mov
faddl
bound
cmp
lea
inc
sub
test
lock
fdivs
add
lea
lea
movsb
adc
jbe
iret
xchg
and
ljmp
or
xor
nop
movsb
shlb
jge
enter
insl
jae
mov
and
test
cs
movsb
imulb
lret
mov
pop
inc
dec
in
fidivl
out
outsb
mov
inc
mov
scas
sbb
pusha
fwait
popl
cld
movsb
pop
mov
out
sub
add
mov
mov
pop
xchg
sub
mov
xor
mov
pop
bnd
fcmovnu
mov
out
jmp
fmulp
into
insb
aam
scas
mov
in
incl
push
dec
bound
fmuls
addl
in
jnp
ret
rorb
and
xor
mov
lcall
fstpl
and
ret
pop
cltd
push
lcall
fbstp
mov
xchg
mov
xcrypt-ecb
cmpsl
leave
mov
and
add
xchg
sub
cmpsl
sbb
and
and
and
mov
aad
ret
push
mov
inc
xchg
scas
mov
adc
add
xchg
inc
loop
jnp
mov
repz
outsb
inc
mov
add
rcrl
jecxz
xchg
jge
rclb
outsb
lock
lds
adc
in
lock
or
fstpl
into
mov
xchg
mov
movsb
adc
fdiv
xchg
jae
push
jecxz
mov
subl
out
jnp
fisttpll
fildll
in
or
lea
loope
pushf
int
inc
cmp
ljmp
insl
dec
adc
jbe
push
or
imul
stos
nop
xor
xchg
lds
push
movsw
movl
dec
sub
xor
jne
out
push
adc
stos
pop
add
and
jno
imul
out
iret
and
sbb
xchg
call
sub
rolb
dec
andl
lahf
or
xor
xchg
lahf
cmpsl
dec
dec
test
adc
loope
dec
pusha
sbb
gs
sahf
inc
inc
pop
out
les
adc
add
mov
lea
ljmp
or
push
sbb
fwait
sti
cmp
or
sub
pop
cmp
stc
mov
imul
into
subb
push
rcrb
pop
icebp
iret
fldenv
shrb
add
push
cwtl
cmp
jno
andb
and
pop
loop
call
inc
dec
repnz
mov
and
xor
add
ja
lret
sbbb
mov
jno
ror
imul
mov
fidivrl
test
lret
mov
clc
stos
and
xor
jge
sbb
pop
mov
mov
or
es
dec
dec
mov
inc
ffree
lret
lret
jge
lret
push
ss
aam
mov
lret
mov
add
cli
les
shlb
xchg
pushf
pop
xor
rolb
or
mov
sar
cs
insl
mov
lcall
push
push
adc
stos
fs
rcll
nop
pushf
jp
fimuls
and
mov
gs
push
mov
stc
sub
std
and
mov
in
dec
aaa
sbb
push
mov
push
mov
push
inc
lds
push
inc
lahf
or
dec
enter
push
je
movsl
rclb
pop
push
xchg
ficoml
push
lahf
push
pushf
in
daa
dec
xchg
je
int
aam
out
in
imul
or
in
stos
dec
mov
cmp
js
sub
mov
scas
jns
jnp
cmp
in
enter
lret
ljmp
addr16
dec
xchg
xor
addr16
fdiv
fistps
cmp
cwtl
test
push
into
dec
mov
inc
push
roll
nop
enter
lcall
fstl
adc
mov
jnp
push
imul
xor
shll
clc
std
inc
addr16
sbb
adc
xchg
pop
mov
test
jns
jo
mov
pushf
sbb
arpl
jecxz
push
jno
sbb
xor
js
jle
mov
pusha
sbb
inc
insl
in
mov
sbb
jg
pop
mov
or
and
sti
adc
subl
cmp
push
les
cmp
fwait
mov
lcall
push
or
sbb
call
inc
shlb
cmp
jae,pt
mov
mov
in
push
mov
mov
imul
mov
dec
aam
mov
xchg
push
es
mov
lret
mov
ljmp
fwait
or
xor
or
sahf
inc
add
jmp
out
je
sub
ljmp
icebp
and
fstps
fucomp
lods
sub
popa
shlb
fcmovu
push
sahf
dec
les
pop
scas
push
ret
xorb
jne
ds
pop
dec
and
xor
push
jb
stc
jmp
push
pop
push
mov
jo
shrl
testb
pop
pop
mov
mov
push
sahf
loope
into
lea
leave
mov
xchg
ja,pt
cltd
xchg
shll
add
jmp
loope
mov
push
push
adc
fsts
mov
jne
subl
je
rclb
dec
cmp
cwtl
bound
out
and
sbb
lock
sbbl
cli
lea
mov
cmp
add
or
mov
adc
pop
int
iret
xor
stos
pushf
mov
xchg
mov
dec
lds
jb
mov
sbb
lock
pop
jns
mov
fistpll
lret
out
xorl
sbb
cmp
mov
jns
mov
jae
lret
adc
or
mov
fisttps
lods
or
scas
int3
jbe
movsl
jne
xchg
popa
or
or
add
jnp
mov
or
fadds
ret
fcomps
push
adc
insl
aaa
jno
gs
inc
and
rcr
imul
cmc
sbb
fs
fwait
add
mov
jmp
pop
mov
pop
sbb
dec
pop
cmp
and
xchg
sbb
jnp
test
movsb
xor
xor
insl
cmp
les
ret
shll
sub
movb
out
or
adc
add
fistps
cmp
sub
push
rorb
xor
and
jge
cwtl
out
cltd
test
inc
push
stos
das
jne
jl
fidivs
ret
icebp
xchg
xor
push
lds
pop
les
jno
mov
sbb
ljmp
dec
mov
hlt
pop
sbb
or
dec
inc
sub
cs
xchg
adc
loope
add
popa
push
push
jo
aad
mov
imul
inc
or
fcmovu
loop
cmp
push
and
xlat
sbb
or
inc
mov
pop
cmc
push
mov
das
jge
sub
mov
mov
jecxz
push
xchg
jae
fwait
push
push
push
int3
adc
add
add
rcll
scas
push
push
data16
mov
mov
sub
stos
ret
lea
popf
sti
test
sbb
push
jnp
ljmp
arpl
cld
jmp
nop
lcall
mov
cmp
pusha
arpl
or
dec
dec
and
jle
in
shrb
mov
sbb
shlb
rcll
jae
in
imul
and
add
out
push
inc
dec
je
push
negb
dec
adc
ds
adcb
stos
hlt
fcompl
aad
push
test
fldcw
push
mov
add
pop
pop
fsubp
push
push
cmp
sbb
jns
mov
inc
add
aaa
xlat
stos
test
imul
pop
fldenv
xor
adc
xchg
xor
mov
xor
pop
dec
imul
xchg
insl
cli
ret
repz
mov
pusha
repz
jmp
enter
repz
shlb
rcrl
mov
xor
cmp
and
cld
stos
cmc
movsb
bound
insb
push
ret
sti
and
shlb
mov
jae
outsl
xchg
lret
stos
sbbb
dec
mov
mov
mov
add
out
inc
push
incb
cmp
mov
rolb
or
inc
insb
jo
cwtl
ror
shlb
std
aaa
add
and
adc
ret
lods
xchg
pop
cmp
out
jge
mov
xor
mov
xchg
add
pop
xchg
xchg
jmp
stc
int3
jecxz
clc
imul
repnz
aam
dec
xor
pop
mov
out
sub
and
in
lods
les
lock
push
inc
cmp
dec
cmpsl
sub
mov
xor
ret
lds
dec
es
fisubrl
push
gs
pushf
jbe
push
outsb
stos
xchg
es
jecxz
and
jle
add
outsl
cmp
xchg
test
outsb
loopne
sub
cltd
or
lds
and
mov
or
mov
mov
movsb
out
call
add
pop
inc
push
das
stos
nop
je
mov
test
sub
xor
leave
sbb
mov
out
pop
lret
and
movsl
mov
mov
shr
add
pop
lds
push
aad
shrb
neg
scas
int3
xchg
loop
push
push
js
mov
fwait
xor
test
adcl
adc
and
jl
les
fdivp
insb
loopne
sbb
orb
in
fwait
mov
jl
mov
sar
mov
mov
or
movsl
scas
popf
push
adc
test
gs
cli
rorb
jg
or
jmp
fcoml
pop
push
popf
scas
sub
mov
mov
xor
cld
push
divl
ret
adcb
jp
jns
ret
adc
mov
jno
sti
fcom
jle
mov
sub
add
add
ss
stos
imul
aam
or
xchg
js
jo
test
mov
sbb
inc
or
mov
jne
adc
add
and
jno
loope
jge
dec
cmp
mov
pusha
dec
fst
aad
dec
sbb
ret
mov
mov
pop
xor
push
add
mov
aaa
leave
flds
inc
pop
mov
dec
hlt
jae
pop
xchg
cltd
dec
jecxz
xchg
pop
call
scas
add
fucom
dec
test
sub
in
adc
mov
cmpsb
popa
inc
or
cmp
shr
cmc
adc
sub
aas
aam
ror
daa
in
imul
mov
cmp
lcall
mov
push
or
sbb
jge
adc
pushf
xchg
sub
or
or
pop
cmpsb
pop
jmp
inc
shrl
rcrl
dec
cmp
jge
sub
jno
aaa
cli
sub
jno
add
cld
in
adc
gs
addr16
pop
jo
sub
add
mov
pop
jne
imul
movsl
fwait
mov
jecxz
push
jno
inc
mov
stc
icebp
mov
cmp
lahf
jge
dec
cmp
cmp
add
cwtl
push
and
pop
iret
pop
lret
bound
lret
mov
int
push
sbb
sub
sub
cmpsb
mov
push
orl
push
jo
stc
cltd
movsb
and
je
adc
jp
es
dec
adc
mov
hlt
daa
into
push
sub
stos
adc
jne
mov
pop
push
inc
shld
adc
testl
loopne
cmp
aaa
idivb
test
test
pop
xor
mov
divl
hlt
push
sub
lock
adc
pop
cwtl
mov
xor
test
xlat
xor
into
mov
addr16
call
pop
popf
cmp
icebp
sub
out
jge
in
stos
jno
aad
sarl
lds
xor
and
mov
sub
lods
pop
outsb
rcrl
pop
nop
jnp
cmpsl
mov
xchg
pop
repnz
xor
arpl
mov
xchg
movsb
test
cld
push
scas
inc
hlt
jnp
dec
mov
jecxz
in
add
pop
add
pusha
sbb
adc
jmp
divb
add
and
cmp
filds
inc
push
sub
and
xchg
int
cmpsl
mov
call
xchg
std
outsl
dec
call
cmp
add
lret
dec
add
mov
cmp
adc
in
iret
stos
push
sub
or
loopne
rolb
add
cwtl
cmc
mov
fisttpll
sub
aad
loop
mov
daa
pop
rcrb
mov
ror
negl
adc
and
test
xor
push
ficomps
test
ja
leave
push
jns
std
insb
movq
inc
jno
mov
mov
js
mov
mov
mov
push
inc
ds
and
loopne
jns
test
ss
int
ljmp
aam
jbe
sbb
and
subl
clc
cmc
xor
xchg
imul
fsubr
push
std
int3
push
cwtl
jg
fistpl
imul
push
aaa
fmuls
xchg
xchg
xor
loope
fadds
iret
and
mov
add
push
outsl
cwtl
imul
mov
sbb
lret
and
pop
nop
dec
inc
push
dec
test
mov
xor
xchg
sub
loopne
sbb
xor
mov
out
push
and
adc
cltd
inc
idivl
dec
mov
xor
mov
jecxz
and
jae
scas
aaa
and
cs
push
adc
mov
fadd
sub
sarb
push
jl
aam
lahf
movsl
leave
mov
ljmp
xor
sbb
mov
mov
pop
jb
mov
cli
repnz
cmpsl
inc
xchg
das
les
mov
test
ret
jb
pop
sbb
mov
cmc
mov
fistps
je
shll
shl
mov
in
stc
sbb
daa
icebp
push
mov
sub
xor
jnp
xor
push
push
mul
sub
adc
subl
ss
jle
mov
clc
pop
cmpsl
enter
fsubr
mull
hlt
cli
out
mov
mov
sbb
jo
mov
or
dec
adc
ljmp
push
adc
je
mov
stos
int3
adc
in
emms
in
or
rcr
or
rcll
stc
je
movsl
add
gs
mov
xchg
or
scas
adc
pop
and
cmc
sbb
lods
xchg
sarl
mov
push
xchg
mov
pop
sbb
mov
stos
sub
popl
loopne
fimull
popa
jg
sbb
jbe
jb
pop
and
repz
add
mov
enter
jl
imul
shll
insl
sub
jae
xor
inc
sub
pop
ljmp
fidivl
sarb
add
cmp
mov
xor
adc
or
sbb
mov
and
xor
ret
adc
cmp
shrb
inc
dec
cmp
mov
dec
mov
and
or
ljmp
push
ljmp
jne
bound
cmc
pushf
clc
negl
push
dec
inc
inc
lahf
out
xor
mull
mov
imul
adc
ret
movsl
or
sbb
andl
and
rorb
lcall
ds
mov
nop
mov
inc
stc
repnz
in
cli
sub
or
xchg
mov
mov
sti
ret
ljmp
dec
jbe
iret
or
out
sbb
sbb
adcl
int3
dec
mov
dec
les
adc
popa
fs
push
jmp
fcmovb
cwtl
jae
loop
js
test
sub
popa
mov
jp
xchg
xlat
sub
in
idiv
mov
and
jp
jle
xlat
push
and
push
repnz
rcrb
push
or
ret
mov
orb
push
inc
mov
and
dec
jmp
mov
fldt
mov
fcoml
add
movsb
pusha
les
xchg
test
cld
jo
adc
or
icebp
cwtl
add
popa
push
rorl
xchg
sub
mov
jle
inc
adc
xor
jp
jge
mov
push
aas
cli
fdivs
inc
js
sub
test
jo
lds
nop
daa
scas
rol
pop
outsl
xor
xchg
inc
out
mov
shll
shlb
cmc
and
aad
into
bnd
loop
jle
push
into
jmp
fimull
fnsave
dec
jae
gs
mov
lcall
adcl
stc
gs
mov
test
pusha
or
in
and
cmp
int
mov
mov
loopne
mov
stos
or
xor
xchg
out
iret
rol
leave
adc
mov
add
aaa
lahf
leave
dec
movsb
push
repz
jle
popa
jae
enter
hlt
fcoml
add
inc
outsb
mov
gs
mov
cmp
outsb
fwait
out
lahf
push
xchg
cmpsb
shll
loop
rcl
shlb
imul
and
outsb
gs
jmp
jge
hlt
in
fwait
gs
push
cli
cmc
dec
outsl
loope
cmp
je
repnz
roll
or
jae
arpl
mov
inc
in
push
in
in
out
push
insb
bound
xchg
fdivrs
lea
daa
js
xor
stos
xor
or
movb
orl
outsb
rcl
cmp
jnp
mov
pop
lock
jp
dec
sbb
inc
das
push
mov
bound
push
push
aad
sahf
adc
mov
enter
push
add
call
ret
xchg
mov
sbb
dec
out
pop
push
gs
sbb
popa
inc
pusha
lods
dec
mov
cmp
cmp
jns
shr
rorb
pop
xchg
push
out
ret
inc
in
daa
push
nop
lcall
adc
pop
inc
sub
les
loopne
sahf
pop
inc
imul
outsl
inc
mov
push
push
js
sub
add
pop
mov
add
in
in
cwtl
lods
push
dec
dec
sarb
add
jne
adc
pop
pop
fdivs
setbe
dec
adcl
and
addl
lods
jno
cli
inc
xchg
or
and
push
jl
and
test
jae
ds
jp
sub
mov
ljmp
mov
fimuls
or
dec
cmp
bound
jne
mov
hlt
push
ss
in
dec
sbb
add
out
inc
fdivrl
cmp
add
mov
sti
mov
cwtl
sbb
inc
aaa
je
mov
and
jle
dec
jo
xor
pop
jg
xchg
mov
negl
jle
and
mov
xchg
and
dec
fstps
push
pop
cmpsb
xchg
imul
gs
mov
imul
outsb
pusha
sbb
jbe
cli
xor
cmp
andb
cltd
push
mov
into
mov
jb
xchg
mul
push
add
fldcw
add
in
les
pushf
aad
inc
dec
push
ds
mov
mov
dec
cwtl
mov
dec
lods
movsl
mov
lods
subb
add
test
out
mov
add
out
sbb
rcll
popa
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
mov
mov
or
xor
add
or
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
mov
dec
mov
jmp
sub
add
mov
subl
lea
xorl
xor
xor
movl
cmp
movl
jmp
mov
and
jne
cltd
rorb
push
cmp
xlat
sahf
jae
std
mov
pop
popf
stos
mov
and
hlt
ret
popa
xor
icebp
push
movsl
out
dec
shll
stos
mov
jl
stos
in
pushf
xor
fidivs
xor
jle
stos
mov
inc
lcall
bnd
shrl
fstpt
adc
pop
les
popa
mov
sub
inc
clc
pop
inc
adc
and
adc
xchg
dec
add
lahf
push
in
rcrl
adc
push
dec
jbe
mov
push
jb
fistps
nop
adc
xchg
dec
shll
and
xchg
aas
test
jb
imul
out
mov
movl
popa
aas
les
adc
xchg
fs
arpl
nop
cld
das
out
sti
rcrl
mov
adc
outsb
sahf
and
pop
mov
and
mov
outsb
movsb
mov
rolb
inc
cmp
stos
sbb
ja
inc
jnp
es
jne
xlat
imul
xor
and
or
xor
or
cwtl
push
jnp
addb
ss
xchg
stos
adc
es
adc
inc
addr16
add
test
cwtl
into
adc
aaa
xchg
and
aad
push
adc
dec
or
push
cmp
push
xchg
pop
mov
test
jno
sub
adc
loopne
jp
mov
xchg
aad
pop
mov
dec
inc
adc
mov
mov
lret
jmp
jmp
test
out
inc
and
dec
fnsave
stos
pop
ficoms
addb
push
push
xor
movsl
push
in
scas
gs
cmp
mov
test
and
sub
test
push
sub
xor
ret
dec
jo
xchg
mov
cmp
mov
jno
arpl
cmp
push
lods
imul
add
fwait
cli
and
add
adc
movb
adc
cmpsb
js
inc
push
out
cwtl
or
push
in
push
aam
ret
jecxz
cs
loopne
loopne
xchg
mov
or
pop
pushf
adc
insl
imull
int3
std
jne
mov
nop
ret
movsb
aaa
adc
jecxz
add
repz
mov
mov
adc
pop
adc
ds
inc
sub
pop
mov
negl
cmp
mov
mov
in
push
add
xor
insb
dec
mov
push
and
jle
pop
outsl
jle
add
mov
rolb
cwtl
loope
pop
sub
mov
xchg
sbb
stos
cmp
in
and
lcall
add
inc
in
xor
push
adc
ja
jne
adc
lret
fimull
jle
ljmp
mov
pop
outsb
mov
shlb
xor
std
movsb
icebp
ficomps
inc
mov
popa
lret
xor
xchg
nop
or
xlat
mov
fucomp
jns
jne
or
enter
rorb
mov
inc
dec
fwait
mov
arpl
imul
mov
shrl
ds
mov
in
mov
add
rolb
adc
jl
sbb
jae
popa
xchg
lret
cltd
sub
loope
add
adc
lret
fimull
sarl
in
pop
xchg
loopne
outsb
mov
jae
pop
cmp
and
pop
add
into
es
aaa
xchg
into
dec
xchg
into
mov
sbb
dec
xchg
add
sub
sub
jp
repnz
adc
jg
fcoml
cli
jl
rcrw
jno
ret
cltd
icebp
jmp
add
sbb
es
out
mov
sbb
gs
push
out
outsl
xorl
les
or
icebp
and
pushf
or
mov
test
outsb
dec
sub
inc
pusha
pop
jg
lcall
call
enter
es
add
mov
mov
shrl
arpl
orl
xorl
dec
outsl
scas
mov
cmp
int3
aas
inc
loop
addb
cmp
out
push
in
xchg
xchg
push
hlt
daa
xchg
loopne
or
aad
scas
inc
sbb
jl
inc
inc
or
enter
dec
jo
add
imul
fcompl
cltd
loope
xchg
xchg
ret
xor
dec
rcrl
aas
jno
loopne
in
inc
das
inc
rclb
cltd
sbb
jecxz
xchg
ja
enter
adc
pop
in
or
repz
into
pop
mov
ret
test
stos
mov
xchg
lahf
sti
dec
loop
push
adc
in
test
mov
adc
test
fwait
sub
out
stos
pop
push
enter
ds
leave
rolb
sti
stos
lret
sarb
jge
pop
mov
mov
es
mov
stc
and
in
mull
lods
adc
jge
mov
in
stos
cmp
ss
mov
out
movsl
add
hlt
adc
shl
xor
jbe
in
adc
enter
fmull
lods
mov
ja
rorl
scas
lods
jnp
pop
out
rcl
push
es
mov
xchg
test
mov
gs
std
fwait
clc
lret
push
gs
in
sbb
lret
dec
inc
in
lea
sbb
pop
cmc
push
imul
push
pop
cmp
shrb
arpl
xorb
test
push
jg
movsl
mov
fsubr
les
lods
jb
ret
mov
fdivs
pop
sbb
rolb
divl
jmp
fcmovnb
lret
mov
xchg
pusha
subl
je
lds
jno
fadds
aam
icebp
inc
fdivl
repnz
bound
sub
xchg
or
fmul
ljmp
push
ds
fmuls
lret
jmp
in
sbb
mov
mov
mov
fsubrl
loopne
test
pusha
insb
aaa
dec
cmp
orl
push
jg
inc
and
cmp
jo
mov
iret
out
and
mov
mov
adc
fwait
adc
mov
mov
jmp
icebp
popf
cmp
push
hlt
mul
fildl
popa
jecxz
lret
xor
push
adc
fistl
jne
pop
ljmp
icebp
jno
push
sbb
lcall
mov
push
insb
lods
in
add
xor
adc
and
add
out
add
dec
inc
subl
fsubrs
sub
shlb
mov
push
xchg
jne
jl
push
mov
jae
pop
mov
inc
inc
push
mov
cmp
test
mov
int3
test
ss
daa
loope
std
out
add
mov
and
sub
loop
inc
cmpsb
call
cltd
popa
cmp
dec
inc
outsb
insl
es
int3
add
pop
push
jne
xorl
jno
pop
inc
jg
movsl
lret
cmp
subb
lds
dec
ja
aaa
rep
add
mov
xorps
into
inc
jb
jne
mov
add
scas
xchg
fwait
sbb
test
xor
into
int
jg
and
enter
daa
fisubrs
cld
jl
push
aad
push
leave
ja
in
pop
in
test
pop
push
fnstsw
cmp
sub
or
arpl
dec
mov
adc
mov
cli
leave
stc
rol
xchg
cmpsl
mov
adc
adc
mov
mov
test
xchg
nop
push
jmp
les
xlat
mov
dec
cwtl
rorl
add
nop
push
dec
xlat
stos
jle
xchg
in
stos
push
xor
popa
mov
xchg
sti
lods
sub
lcall
and
ret
cmp
cmp
mov
outsb
mov
cmp
mov
in
pop
jge
push
jle
mov
imul
jge
dec
adc
sub
out
xchg
mov
sub
push
imul
shll
sub
fsubr
or
scas
test
and
mov
or
sub
jmp
push
cmp
xchg
fdivp
xor
xchg
insl
lods
or
jbe
cmp
mov
inc
stos
in
ja
into
or
mov
jle
dec
xchg
in
inc
push
mov
inc
rorl
out
adc
cmp
or
adc
scas
rolb
and
push
push
or
popa
out
int
fadds
pusha
adc
cmpsb
and
stc
xchg
out
mov
mov
cmpsb
test
nop
sahf
jmp
pop
fsts
push
jmp
fidivs
jge
lcall
cmpsl
pusha
lahf
jmp
xchg
push
ja
ds
jmp
leave
stos
push
jae
rclb
dec
jnp
jae
mov
test
cwtl
in
jl
js
fs
imul
mov
insl
mov
push
xchg
push
sbb
gs
clc
pop
ljmp
test
or
outsl
test
and
hlt
sbb
lods
push
inc
iret
dec
outsb
stos
fucomip
xchg
jno
pop
mov
bound
std
dec
and
and
insl
jo
loope
ficoms
cs
xchg
cmp
xchg
test
lock
test
jae
icebp
cmpb
cmp
addr16
sub
sbbl
fistl
cmp
jmp
mov
jns
xor
loop
insb
je
dec
mov
out
sbb
and
lods
lods
movsb
les
aam
lret
inc
hlt
lret
icebp
sbb
xchg
test
shlb
cmp
ret
ss
ljmp
mov
jne
xchg
test
jo
pop
pusha
jmp
in
arpl
and
sub
add
cmp
test
add
out
lods
fldcw
mov
mov
inc
cmp
js
aam
data16
std
sub
stos
test
mov
ret
sahf
stos
xor
or
push
xchg
inc
lods
movsb
xchg
and
dec
iret
fs
sub
mov
dec
xor
add
mov
enter
jne
pop
repz
inc
jmp
pop
mov
stos
dec
inc
xor
mov
and
inc
cmp
push
pop
insl
push
ljmp
in
std
inc
xchg
imul
fsubrl
aam
sub
ret
mov
mov
xchg
testl
mov
pop
repnz
movsb
and
mov
add
icebp
sub
adc
pop
push
call
lds
icebp
in
dec
jbe
cmpsb
xchg
add
sbb
mov
or
outsb
add
add
inc
mov
sbb
lods
ret
dec
mov
sahf
mov
aaa
ret
stos
gs
xor
lods
mov
mov
or
adc
pop
fucomi
shll
sbb
das
push
mov
cwtl
aas
cmpsl
imul
test
loopne
jns
or
addr16
sahf
loope
cmp
cmpsl
mov
adc
mov
pushf
sbb
out
pop
out
fisubl
mov
out
cmpsl
push
inc
jae
clc
out
sub
fdivrs
dec
mov
aaa
into
enter
ret
outsb
movsl
mov
xchg
movsb
fcmovbe
fisubs
inc
lods
negb
imul
fs
push
dec
data16
sbb
jae
lea
sahf
cmp
lods
sbb
push
repz
mov
icebp
ret
gs
adc
jle
mull
sbb
sbb
in
mov
sbb
gs
scas
pushf
xor
aas
mov
adc
lods
ficoms
cli
and
dec
push
aas
and
xchg
shll
jbe
mov
cmp
inc
xchg
lret
movsl
aam
icebp
lods
popa
xchg
push
or
xor
sub
ljmp
mov
sbb
pop
clc
ljmp
xchg
sbb
stos
push
adc
and
dec
mov
pop
sbb
ja
clc
sti
mov
or
and
mov
jno
dec
pushf
or
mov
dec
fs
subl
pop
fisttps
movsl
inc
dec
or
mov
add
cmpl
mov
dec
inc
mov
les
add
sbb
dec
fdivrl
notl
push
ficomps
outsb
out
add
push
pop
bnd
add
aad
or
jno
jo
imul
push
leave
ljmp
mov
sbb
adc
lods
jp
or
xor
fimull
mov
inc
push
lods
pusha
mov
jbe
jo
xchg
inc
sbbb
mov
push
cltd
out
mov
mov
bound
pusha
inc
jno
scas
daa
jge
ret
in
aaa
fstpt
subb
mov
into
xor
xorl
out
stc
imul
je
push
fildl
aaa
fisttpl
ja
mov
cmpsl
int
push
ljmp
inc
push
lahf
in
xor
pop
sub
imul
rclb
push
lods
push
xchg
ret
lret
arpl
jnp
ror
cmp
push
cmpsb
mov
test
cmc
push
mov
xlat
mov
jns
hlt
pop
addb
pop
imul
bound
repz
cmpsl
lret
shl
hlt
adc
xchg
sbb
dec
xchg
xor
xchg
add
ret
cmpsb
xchg
movsl
cmovnp
insl
and
mov
or
test
inc
loopne
repnz
add
cs
cmp
jno
call
out
loope
fistps
ja
inc
pop
jnp
stc
in
pop
xor
jg
ss
push
mov
jo
xchg
fcmovnu
mov
movsb
insb
cld
jmp
xchg
fs
jne
rcr
pop
sub
test
lcall
sub
pop
cmp
xchg
lods
test
xchg
dec
fisttpll
cwtl
mov
pop
scas
rcrb
stos
mov
into
fdiv
insb
dec
or
push
dec
dec
cmpsb
pop
cmp
jmp
repnz
sbb
arpl
test
sbb
insb
cmp
push
jmp
scas
bound
mov
daa
lahf
inc
loop
add
xchg
push
sbb
jne
sbb
data16
loop
adc
sarb
or
mov
sub
stc
fstpt
xchg
inc
daa
test
dec
xor
dec
push
shrl
ja
movsl
cmp
ds
pop
loope
dec
sub
pop
xchg
adcb
mov
addb
push
mov
test
xor
outsl
cmpsl
sub
loopne
lret
and
dec
pop
xor
popf
cmc
xor
jmp
mov
sub
sub
outsl
adc
or
and
xchg
in
popf
cmp
inc
js
push
loopne
movsb
fists
mov
popa
imul
fiadds
imul
test
mov
mov
mov
rcrb
cld
mov
sub
push
cmp
push
leave
dec
xchg
lds
sbb
test
lcall
jl
cmp
sbb
push
xor
popa
sbb
sub
lds
arpl
mov
data16
call
notb
in
mov
adc
jmp
sahf
sbb
adc
add
xchg
add
iret
lea
or
imul
xchg
movsb
dec
jmp
sbb
sbb
jmp
xor
mov
in
and
in
and
mov
shll
aad
lock
sarb
addr16
push
mov
cs
aas
imul
les
sbb
push
xor
push
inc
les
cmc
sti
pop
js
lahf
adc
fldl
les
mov
rclb
sbb
bound
dec
adc
jae
clc
cmp
inc
pop
fsub
push
test
sbb
inc
mov
enter
pop
push
outsb
sbb
fisttpl
pop
cmp
icebp
or
les
hlt
pop
outsl
mov
cmp
and
call
inc
push
mov
pop
lret
movswl
cmp
mov
jnp
mov
sub
adc
icebp
sbb
repnz
pop
push
jl
push
sbb
out
mov
sbb
inc
pusha
sbb
push
lcall
inc
vmovlhps
fadds
fsubrs
outsb
jle
pop
xor
imul
loope
sbb
xchg
lds
lret
das
std
mov
movsl
xchg
mov
decl
inc
sub
dec
dec
inc
stos
push
adc
jo
cmp
fistpll
movsl
push
popf
daa
mov
int
sbb
jecxz
pop
sub
or
fnsave
inc
cwtl
mov
inc
insb
jne
fidivs
movsl
and
adc
imul
add
imul
mov
test
and
push
or
shr
cltd
mov
sarl
in
pop
stos
sub
mov
jge
sbb
xchg
addl
popl
jbe
fidivrl
mov
sarb
sbbb
daa
pop
sahf
lock
ljmp
xor
bnd
out
jp
fsts
mov
inc
imul
sbb
xchg
or
xor
shrl
sbb
mov
jl
notb
movsl
lret
fsubp
gs
push
fcmovnu
das
jb
test
push
sbb
add
les
or
pop
mov
xchg
jne
fisttps
mov
loope
push
mov
xor
mov
xchg
pop
loope
js
jge
or
push
daa
cmp
imul
xchg
jp
cmp
stos
sahf
pop
push
ret
stos
test
mov
xchg
inc
mov
or
jp
add
ja
and
imul
imul
aam
out
stc
xchg
pop
outsl
push
add
cmpsl
aad
jb
jae
rcrl
loope
mov
cmp
aaa
enter
push
leave
push
and
cli
popa
jecxz
les
rcrl
nop
push
jno,pn
out
or
jecxz
vpmacssdd
shl
mov
inc
test
loope
outsb
pop
mov
frstor
sub
bswap
out
shrb
mov
pop
and
hlt
xor
mov
pop
sub
pushf
inc
je
jns
ficoms
add
xchg
jae
or
pusha
bound
adc
sti
fidivs
mov
cld
xchg
and
mov
clc
inc
xchg
or
dec
loope
sub
xchg
idiv
mov
bound
and
adc
and
loop
inc
ds
add
mov
stc
int
mov
ja
test
notl
cltd
cmp
fidivrl
divl
outsb
iret
addb
clc
enter
mov
xchg
sub
aaa
rorl
sahf
sub
sbb
sbb
xor
and
lods
jns
scas
repz
lret
pop
pop
jmp
lret
jo
cli
setne
fdivl
insb
mov
mov
dec
inc
mov
test
or
xor
cmp
into
sub
rclb
add
add
icebp
jno
sahf
es
push
mov
cli
imul
jnp
mov
in
mov
imul
insb
push
xor
add
jle
jg
hlt
hlt
lods
insb
dec
int
clc
aas
and
in
add
mov
adc
xlat
ret
fidivrs
imul
inc
inc
repnz
push
outsb
jbe
push
sbb
mov
mov
ja
mov
xor
lods
cltd
je
mov
cmp
loop
push
push
stos
aam
sahf
ljmp
sbb
cld
stos
push
imul
pop
push
mov
push
mov
inc
mov
xorb
popf
bound
lret
mov
jne
xlat
mov
sub
sub
cld
popa
imul
push
add
ds
push
in
imul
in
mov
xor
pop
mov
inc
popf
cmp
aas
call
jp
cmpsl
pop
mov
adc
push
in
les
adc
pop
in
sub
insb
movsb
aas
faddl
jno
push
roll
xchg
jnp
outsl
inc
adc
pop
inc
out
leave
push
ret
jnp
cld
xchg
mov
aam
cmc
adc
loop
sub
pop
aaa
ss
les
adc
mov
sbb
xchg
test
loope
test
sub
ljmp
jg
jp
int3
and
xchg
pushf
nop
aam
je
jns
ret
movsl
les
inc
stos
loopne
testl
dec
jns
mov
sbb
addl
repz
and
ljmp
aas
mov
push
sub
jbe
xor
adc
sub
int
push
adc
outsb
shrl
popa
movsl
hlt
dec
jp
rep
push
rcrb
or
aad
popa
fcom
pop
push
ja
or
mov
sbb
jle
call
clc
aad
in
outsb
sbb
push
jmp
negb
jo
xor
push
fdivl
in
scas
push
jo
xor
mov
mov
inc
js
mov
cltd
in
sti
rcrl
mov
orb
dec
and
inc
adc
push
cmp
xchg
iret
fldl
push
imul
dec
or
int3
movsb
mov
out
push
pop
pop
mov
popf
clc
xchg
jge
jae
fcmovnb
out
out
sub
fbstp
pop
testb
popa
int
xchg
or
cwtl
mov
pusha
scas
jb
fs
mov
cwtl
pop
and
and
test
xchg
mov
mov
push
shlb
inc
jmp
movsb
cmp
mov
in
adc
sbb
test
test
mov
sar
cltd
ror
dec
std
inc
xor
and
sub
jl
mov
loop
push
lret
or
dec
push
lret
repz
add
or
je
lret
ret
push
ljmp
insl
in
cltd
mov
push
sti
xchg
sbb
in
dec
mov
movsl
inc
dec
repz
inc
sub
int3
ja
flds
push
fwait
sti
mov
in
inc
adc
repnz
fbld
out
pusha
sbb
out
cmp
mov
movsl
daa
xchg
pop
rorb
adc
addl
sub
movsl
xlat
push
adcl
insb
push
mov
mov
inc
jmp
xor
cmp
pop
lcall
movsb
cmpb
inc
jnp
in
or
mov
xchg
insb
add
cmpsb
jp
lock
push
fdiv
jnp
ja
xor
and
aad
icebp
in
xchg
cld
push
add
ret
mov
ret
push
jnp
movsl
aad
test
movsl
push
data16
mov
gs
sub
stc
mov
mov
orb
stos
and
dec
sbb
sbb
xchg
addl
or
sbb
mov
dec
mov
movsl
mov
arpl
mov
sub
jg
jge
sub
imul
fcmovu
repz
imul
clc
adc
or
inc
test
out
jb
cmc
sbb
xchg
add
popl
xchg
xor
ret
mov
mov
xor
pop
or
dec
jmp
fidivl
out
sub
andb
scas
jns
pop
mov
cmpsb
cmpps
fisubl
clc
mov
xor
mov
jl
aad
cmp
sbb
add
jns
sub
stc
scas
sarl
idivb
inc
pop
add
xchg
add
jo
and
dec
xchg
xor
insl
out
cmp
mov
ljmp
xchg
sbb
jbe
ja
sbb
mov
mov
imul
outsb
sti
mov
mov
mov
stos
ficompl
cwtl
mov
inc
negl
out
adc
mov
dec
in
lods
andl
xor
lret
ja
shrl
enter
negl
pushf
pushf
cmp
xor
jb
scas
push
xor
pop
loop
inc
ret
popa
lds
out
pop
add
add
fcmovb
push
sbb
fnsave
pusha
inc
or
dec
sub
flds
enter
cmp
fwait
dec
loop
xchg
cwtl
sti
lahf
cmp
aam
test
mov
add
adc
xchg
fdivl
test
push
mov
dec
and
mov
push
int3
jmp
fmull
mov
push
rorl
sbb
fsub
xor
loope
cmc
pop
or
jle
in
push
push
mov
inc
sub
jle
pop
mov
mov
cmpsl
in
mov
and
inc
xor
push
jne
lret
cmp
out
xor
xchg
lock
sub
mov
xor
mov
bound
adc
jecxz
rcr
mov
xchg
sub
dec
add
iret
push
dec
sbb
xchg
jecxz
adc
mov
scas
outsb
xchg
shll
xchg
fsts
push
data16
daa
das
jg
and
inc
popf
mov
fdivrs
mov
mov
jne
cs
bound
push
ret
rcll
icebp
xchg
int3
pushl
xchg
paddusw
xchg
push
lea
in
mov
pusha
sbb
dec
sub
push
cmc
rcrb
fsubr
aaa
call
xor
mov
mov
jnp
dec
cmc
push
bound
inc
mov
mov
aaa
mov
xor
ljmp
popa
popa
out
lahf
jl
push
inc
lret
cmp
aas
fsubrl
pop
xor
leave
popa
insb
stos
sub
sbb
mov
or
inc
mov
push
pop
std
adc
push
cmp
stc
ret
std
in
loopne
or
dec
jo
nop
pop
or
test
mov
jmp
xchg
idivb
es
pop
mov
sbb
mov
mov
jecxz
jecxz
or
cld
push
xchg
pop
dec
out
addr16
and
inc
into
sub
xor
mov
inc
inc
or
ficoms
paddusb
js
adc
push
or
gs
js
sbb
inc
mov
push
xchg
jns
mov
add
inc
jno
pushf
inc
mov
cmp
mov
arpl
test
stc
repnz
sub
loopne
pop
xor
jp
add
or
std
shll
xchg
fs
pushl
sub
push
notb
add
out
xchg
aaa
xchg
sub
into
dec
ljmp
aad
cltd
jle
and
lea
cmp
cld
andl
xchg
ret
addl
cld
insb
scas
aaa
sub
mov
push
dec
ror
es
cmovge
cmp
lea
xchg
fsubrs
push
jns
xchg
sti
mov
rcrb
mov
sub
xor
push
loop
or
mov
ss
stos
sub
int
cmc
cmp
fcmove
shlb
psubq
jl
jo
sbb
out
jns
dec
pop
loopne
les
add
ds
fcompl
fstp
stos
or
mov
stc
add
pop
addl
push
mov
pusha
pop
arpl
sub
call
or
add
jb
mov
test
adc
adc
jo
std
inc
cmp
sahf
imul
in
enter
inc
adc
popa
and
je
imul
jnp
jmp
mov
mov
pop
xor
xchg
fdivs
and
pop
mov
jecxz
bswap
mov
outsb
pop
stos
imul
gs
mov
pop
adc
mov
imul
stos
adc
loopne
cmpsl
pusha
fists
mov
stos
and
cmp
sub
xchg
addr16
xchg
jle
mov
loopne
shrb
sbb
nop
sub
sub
sbb
inc
xor
xor
inc
popa
pop
shlb
shll
jae
pop
mov
inc
stos
jb
negl
jecxz
mov
pop
lods
js
sbb
dec
js
mov
out
push
xor
aam
in
jb
push
int
movsl
les
in
daa
add
int
inc
bound
lret
out
sbb
mov
jbe
add
and
jo
pushf
mov
dec
mov
ljmp
jecxz
and
test
adc
fiadds
pop
sub
xchg
inc
out
pop
in
loope
push
cmp
inc
xchg
nop
and
jne
ja
mov
popa
add
je
inc
push
mul
fimuls
xchg
mov
inc
aam
insl
test
test
inc
push
xlat
subb
inc
nop
outsb
xchg
stos
adc
jno
adc
add
pushf
adc
mov
dec
jmp
push
mov
jp
xor
xchg
loop
xor
subl
push
pop
lods
push
or
inc
mov
fsubrl
sbb
cmpsb
inc
test
pusha
xor
out
cmp
sbb
jle
and
aas
repz
inc
and
es
dec
jecxz
roll
dec
stos
pop
rcll
jle
fwait
push
daa
fs
ror
inc
push
cmpsb
out
xchg
sbb
sar
mov
jno
clc
sub
js
mov
gs
mov
push
inc
cmp
iret
mov
cwtl
dec
mov
adc
sub
sbb
push
imul
pushl
pop
jge
mov
inc
pop
xor
sbb
mov
andl
in
aaa
push
std
push
xorb
aas
fimuls
ret
push
popa
push
mov
xchg
test
cmp
pop
push
dec
data16
pop
dec
mov
addb
dec
ficoms
out
jg
std
and
das
and
and
xchg
in
dec
dec
xchg
repnz
lahf
mov
mov
mov
test
inc
mov
ret
pop
es
cmp
pop
jge
sti
inc
les
sbb
aad
xcrypt-cfb
cmpsl
fs
cmp
cmpsb
dec
mov
mov
mov
mov
fsts
inc
out
cmp
inc
shll
movsl
loopne
lahf
int3
in
sbb
lcall
aas
aad
xlat
sbb
roll
insl
cld
pop
jb
jns
and
and
fisttpll
leave
dec
loope
jae
clc
cmp
and
jmp
inc
and
sub
mov
cmp
and
mov
mov
iret
aaa
push
inc
lds
out
fistps
scas
cwtl
stos
fildl
in
rcrl
sti
rcrb
jge
add
push
ret
xor
lret
jns
inc
mov
lahf
pop
inc
dec
in
je
sub
pop
loope
loopne
mov
test
jnp
cmp
xchg
popa
mov
push
cmp
sbb
aaa
fwait
mov
adc
sub
rcr
jecxz
adc
sub
inc
arpl
daa
rcr
pop
xchg
in
adc
jae
shll
cmp
and
shll
dec
sub
out
push
pop
mov
push
add
scas
pop
xchg
add
push
es
push
int3
fidivrl
xchg
out
mov
ret
inc
nop
dec
call
test
cmpsl
std
in
rcl
cmp
loope
fcoms
addb
dec
cmp
push
daa
es
mov
outsl
movb
mov
fs
or
aam
cmc
jge
push
push
push
pop
pop
push
cmp
mov
pusha
iret
mov
and
ficompl
add
inc
dec
jp
xchg
push
mov
call
sub
lcall
xchg
outsb
fmull
mov
pop
and
dec
out
dec
cmpsl
shll
push
imul
repz
or
jns
or
pop
or
add
inc
movsb
iret
xor
fldenv
mov
add
sbb
cmp
jbe
outsl
out
repz
mov
mov
stos
pushf
add
jl
ljmp
pusha
add
lea
leave
out
sbb
in
ret
mov
inc
enter
cld
into
mov
out
outsb
fadds
fwait
in
lods
mov
cwtl
lar
push
sbb
mov
repnz
jp
push
out
pop
fs
scas
xor
xchg
mov
ljmp
sub
es
pop
mov
add
cli
fcoml
scas
adc
inc
cmp
inc
cmpsl
sbb
nop
sbb
sbb
pop
mov
mov
dec
cmp
lcall
jnp
je
xor
or
add
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
xorl
xor
add
cmp
movl
jne
pushl
call
mov
mov
adcl
mov
mov
addl
xor
sbbl
add
cmp
movl
je
pushl
pushl
addl
call
sub
mov
decl
mov
mov
or
mov
xor
andl
add
movl
cmp
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
xor
add
cmp
mov
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
mov
xor
lea
jmp
mov
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
add
jmp
mov
jmp
mov
enter
xchg
cmp
push
arpl
sub
jae
push
cmp
push
out
lahf
jmp
add
xchg
xchg
cmp
cmp
mov
fmull
pop
fildll
xchg
test
in
ficompl
adc
cmp
sub
mov
enter
sub
mov
out
mov
ljmp
testb
cmp
jp
jns
mov
lahf
xchg
icebp
mov
fmull
cmp
mov
xchg
addr16
jns
add
xchg
sub
insl
adc
arpl
ljmp
fs
cmp
mov
imul
sub
hlt
and
xor
fbld
pop
rcrb
jl
fwait
or
mov
jge
insb
or
and
add
outsb
adc
mov
xor
repnz
loopne
sub
scas
or
bound
out
adc
jl
mov
mov
into
cld
stos
or
dec
repnz
out
mov
and
cwtl
mov
mov
add
jne
mov
cmc
movsb
bound
jb
sub
gs
adc
mov
cmp
sti
add
repnz
add
loopne
in
or
fistl
mov
je
xlat
das
nop
je
xchg
push
out
sbb
xchg
loop
stos
call
xchg
mov
mov
les
mov
xchg
stos
in
jmp
das
addr16
push
and
call
sahf
cmpl
ficoml
out
xor
pusha
mov
jmp
hlt
sbb
out
jle
leave
outsl
jo
in
dec
repz
scas
xlat
xchg
jge
dec
sarl
jnp
loopne
bound
inc
push
adc
or
sbb
or
push
popa
cltd
pop
rcrl
mov
sahf
sbb
and
jl
inc
fistps
cmpsb
insl
dec
inc
jae
shlb
scas
adc
jecxz
dec
enter
and
xor
xchg
sbb
mov
jns
mov
addr16
rolb
movl
pop
pop
in
jmp
lret
iret
sbb
add
sub
sub
aad
adc
addl
enter
loope
idivl
or
push
mov
and
shl
inc
cmc
xchg
xchg
cmpsl
bound
add
mov
dec
std
test
mov
clc
xchg
or
stos
inc
data16
or
les
rcll
xor
and
pusha
xor
mov
iret
cwtl
mov
mov
popf
das
pop
inc
sbb
cmp
aas
mov
mov
jg
adc
and
dec
pop
sbb
push
xlat
stos
shll
dec
mov
cld
push
and
in
fisubrl
outsl
dec
insb
push
int
sbb
xchg
or
clc
lcall
xorb
add
inc
rcr
or
out
out
cmp
push
push
fldt
outsl
imul
jno
add
out
add
and
or
mov
iret
pop
aam
mov
lahf
sbb
mov
sbb
sbb
mov
pop
cmp
cwtl
ret
inc
notb
push
fsts
push
mov
push
addl
inc
xchg
rclb
imul
sub
cltd
fwait
sar
jns
adc
cmp
mov
hlt
pop
xchg
mov
inc
int
xlat
imul
add
push
cltd
cmp
es
xchg
cwtl
pusha
mov
xchg
test
sub
and
pop
orl
pop
xchg
mov
mov
cmp
add
ja
pop
mov
arpl
in
dec
dec
dec
adc
sub
fidivrs
fdivrl
mov
inc
push
jl
inc
mov
ljmp
test
xor
jmp
mov
sbb
pop
or
or
mov
mov
cmp
jle
dec
xorb
and
or
pop
and
mov
or
fs
inc
fsubr
dec
dec
jns
dec
sbb
fldenv
rorl
call
dec
push
in
mov
dec
push
pushf
push
outsb
insb
mov
inc
sarl
jne
sbb
sub
mov
sbbl
sub
sbb
dec
push
push
jne
push
out
sub
inc
pop
lods
cmp
int
sub
and
xchg
xor
jo
xchg
lret
adc
inc
xchg
mov
sbb
sub
dec
push
mov
inc
test
sub
ja
gs
lcall
lods
jae
adcb
sar
or
jge
sub
push
and
das
mov
int3
ja
and
out
cld
out
cltd
lods
fadd
jle
add
lret
sub
outsl
jmp
mov
sub
cli
adc
add
mov
out
pop
push
jne
add
or
pop
mov
sti
or
outsb
stos
stos
ljmp
sub
outsb
mov
jecxz
sti
push
mov
mov
cmpsl
aad
mov
lods
jbe
push
shrb
lea
sbbb
subl
sub
mov
sbb
incb
mov
out
push
popa
inc
and
cmp
mov
shll
lds
jno
je
xchg
loop
imul
mov
cmp
push
pop
dec
cmp
ret
push
jns
cmpsl
gs
adc
test
mov
inc
mov
mov
movsb
leave
dec
sub
dec
lret
push
mov
dec
lret
jne
and
in
cld
in
push
hlt
cmp
test
cs
mov
lret
imul
ret
cmc
push
pop
adc
xchg
adc
xchg
pop
daa
xchg
sbb
and
les
push
daa
fyl2x
mov
sbb
pop
test
sub
mov
fisttps
xchg
or
cwtl
icebp
sahf
mov
cmpl
std
mov
pop
lods
cld
push
sub
push
clc
bound
jbe
or
int
aas
pop
dec
lods
das
sbb
out
mov
leave
shll
int3
adc
mov
mov
dec
in
bnd
enter
inc
inc
das
repnz
test
cmpsl
fbld
and
cli
cld
mov
mov
inc
pop
xlat
inc
sbbl
mov
cmp
int
jmp
inc
outsb
and
lahf
jp
loopne
pop
stos
xor
clc
rol
xor
leave
ret
hlt
clc
pop
ds
inc
sti
xor
xchg
mov
mov
es
inc
mov
decl
xchg
into
loope
inc
xchg
out
add
xchg
outsb
arpl
jae
and
cmp
inc
sub
mov
es
sbb
push
adc
outsl
jnp
fcmovbe
outsl
mov
mov
fcomi
pop
int
jne
dec
iret
gs
shl
out
in
xchg
add
rcl
push
mov
daa
mov
jnp
push
lgs
push
add
sub
xchg
shrb
sub
cmp
xchg
xchg
ret
dec
lods
bound
rclb
sar
cmp
into
push
push
fdivrs
and
add
ret
cli
sbb
add
mov
pop
jg
les
push
xor
lret
scas
ret
xlat
and
ret
xor
mov
add
lea
sub
dec
inc
sbb
popa
push
jp
adc
rorl
xor
popa
out
jno
imul
aaa
lds
dec
fdivrs
std
add
jle
iret
inc
adc
leave
jecxz
pop
sub
mov
nop
cmc
cmp
or
ljmp
pop
pop
add
fidivs
loopne
fdivrs
fdivr
xlat
jle
mov
sub
dec
xchg
sbb
lock
and
orl
and
ficompl
adc
ljmp
pop
xor
rep
lods
push
add
add
repnz
test
leave
and
jge
dec
push
pop
cmpsb
dec
xchg
sub
paddsw
sbb
mov
sub
fwait
jns
les
out
cmp
test
inc
xorb
repz
mov
and
mov
pop
and
add
xchg
mov
hlt
test
lods
jmp
stc
test
gs
dec
sub
mov
dec
icebp
imul
sti
push
mov
arpl
fs
pop
and
sbb
repnz
cwtl
xchg
pop
xor
test
icebp
sub
pusha
das
mov
addr16
cvtps2pi
mov
insb
and
aaa
xchg
out
pop
adc
jae
mov
inc
mov
pop
push
scas
xor
ja
inc
les
sbb
jae
add
sub
stc
or
cld
adc
call
mov
xchg
leave
jg
sarl
pushf
cmpsl
das
sbbb
movsl
dec
xchg
cmp
adc
fldz
lcall
cmpsb
lahf
sti
lret
add
sub
xor
andb
pop
sahf
ret
push
clc
jg
sub
add
pop
inc
int
fidivs
test
bound
mov
negb
imul
mov
andb
jl
mov
push
mov
jbe
mov
xor
jo
stos
pushl
and
dec
cltd
mov
pop
mov
pop
out
xchg
aaa
cli
cmp
sub
dec
push
mov
xchg
mov
mov
inc
addr16
pop
mov
subl
sub
cli
shll
add
ret
jmp
dec
movsl
dec
jns
jns
sarl
cltd
out
stos
adc
out
mov
xlat
jecxz
sub
xor
out
hlt
cmp
push
push
push
mov
cmp
lahf
cltd
outsb
cli
cmc
arpl
or
adc
sub
pop
data16
jns
incl
aaa
lds
pushf
mov
imul
push
cmp
jg
and
mov
fcomi
jmp
mov
ljmp
ljmp
mov
fsubrl
mov
call
cltd
mov
mov
lcall
lock
sti
sub
jae
jmp
hlt
jmp
mov
adc
xor
aas
lret
jne
push
lret
pop
adcl
or
ds
jae
inc
sarl
fisubl
movsl
pop
addr16
inc
aaa
push
int
cmp
lds
dec
cmc
jl
inc
fsubrl
add
cs
push
jae
xor
mov
mov
orl
and
mov
cmp
cmpsb
insl
in
aam
ret
cmpsl
movsl
fstpt
add
xchg
aaa
add
aaa
mov
and
mov
pop
push
fistl
jb
jp
adc
sub
and
cli
fwait
imul
sbb
icebp
mov
pop
and
js
fwait
jmp
cmp
arpl
inc
mov
fmuls
in
imul
jmp
cmp
int3
cmpsl
in
dec
cmp
cmc
mov
in
and
neg
mov
mov
rcr
les
test
int
into
cmpsl
int
push
sbb
rcll
call
push
add
mov
mov
jno
xor
rcrl
and
stos
leave
or
lock
sbb
jg
lret
add
xchg
or
insb
movsl
mov
and
ret
mov
imul
divb
inc
dec
and
scas
aad
sub
dec
std
mov
fs
push
sar
xor
pusha
add
das
out
jne
pop
mov
loop
add
push
inc
pop
sbb
adc
jle
push
add
sbb
add
push
fiadds
arpl
out
pop
andb
shlb
inc
fmull
aaa
jle
sar
sar
or
sahf
mov
xor
jne
jp
nop
jo
mov
xchg
outsb
dec
mov
sti
xchg
mov
jp
sub
in
inc
add
in
cwtl
cmc
shrl
and
outsb
insl
mov
mov
pusha
adc
in
shll
mov
inc
sbb
ficompl
or
fcmove
pushf
inc
int
loopne
leave
sub
xchg
push
push
daa
mov
mov
std
repz
shlb
jg
inc
scas
int3
or
scas
test
push
add
shl
jno
sarl
test
adc
cs
jns
ds
popf
mov
loopne
xchg
nop
adc
pop
inc
or
adc
dec
scas
xchg
push
std
jbe
cmp
inc
add
popf
cmpsl
xchg
jae
mov
imul
call
sub
push
jg
bound
fildl
and
jae
and
mov
push
stos
rclb
lcall
and
subl
jno
nop
cwtl
outsl
jge
push
insb
add
hlt
mov
loopne
xor
insb
decb
out
shl
rol
sahf
cmp
sub
outsb
xchg
add
jb
das
adc
sti
addr16
pusha
sub
out
inc
mov
rcll
pop
int3
inc
pop
mov
out
push
clc
xchg
adcb
sub
decl
lock
sub
movsb
xchg
js
test
xchg
bound
add
clc
dec
xchg
or
je
sub
push
cmp
or
in
mov
push
leave
jbe,pt
loopne
jmp
out
leave
in
je
sub
dec
pop
and
sar
xchg
pop
fld
jmp
xchg
call
test
jo
sbb
pop
dec
icebp
in
mov
iret
mov
mov
cmp
lods
mov
je
and
fcomip
inc
push
mov
sub
popa
jbe
lahf
xchg
jge
mov
mov
sahf
punpckhwd
aaa
push
or
loope
xlat
jle
fildl
fwait
sub
movsl
loopne
sarb
and
cwtl
in
push
mov
push
jg
xchg
dec
mov
cmpsb
dec
out
sbb
insl
leave
lods
adc
fcomi
loopne
lods
jbe
testb
clc
fwait
in
cltd
mov
test
xchg
mov
xor
or
ljmp
jb
jae
fimull
pop
fs
add
int
popf
push
inc
push
cmpsl
xor
insb
jmp
mov
addl
push
push
cmpsb
loope
xor
pop
je
push
push
js
inc
mov
dec
dec
ror
jne
push
loopne
sti
mov
loopne
outsl
int3
push
push
sub
add
loopne
loop
fstps
fnstenv
dec
hlt
in
int
addr16
std
fdivrs
add
daa
mov
xchg
call
sub
stc
fs
inc
xlat
xchg
jne
movsb
or
dec
test
jns
cmp
jno
xlat
scas
mov
clc
mov
mov
fisttpl
js
xor
cld
sub
xor
push
ret
daa
dec
mov
and
loope
push
pop
xchg
inc
jmp
fisubrs
andl
iretw
sbb
mov
sub
lret
cs
lea
loop
cmp
push
fisttpll
popa
mov
adc
add
in
mov
stos
sarb
jae
push
ret
mov
add
mov
inc
fstpl
dec
sub
dec
jle
dec
adc
cwtl
je
push
inc
movsb
sub
nop
push
jns
sbb
fmull
imul
pop
xchg
js
stos
movsb
scas
push
add
dec
ds
push
cmpsl
mov
mov
mov
arpl
mov
pop
jb
arpl
mov
lds
ljmp
lea
je
test
push
xchg
xor
shr
jbe
cmpsl
test
sahf
movsb
xor
push
add
lds
sahf
adc
push
test
cmp
in
jp
or
rcll
aas
cmc
ret
xchg
jl
sub
lret
out
out
mov
test
mov
ret
push
enter
jmp
mov
or
rcll
push
ror
inc
lcall
and
insl
xchg
jl
fwait
inc
mov
and
in
and
pop
mov
insl
shr
dec
sbb
scas
pop
pop
dec
cmp
call
xor
pop
mov
pop
popaw
mov
or
dec
lahf
and
lret
mov
pop
test
in
addr16
jge
testb
mov
pop
ja
pop
subb
cld
or
ja
ljmp
shrl
adc
mov
push
push
sarl
stos
mov
lahf
mov
cmp
xlat
cmpsl
daa
lret
inc
jle
ss
shll
pusha
cmp
jno
cmp
sbb
in
cmp
dec
jnp
pop
movsl
push
es
mov
cmpsb
add
xchg
xor
sahf
dec
cwtl
mov
call
mov
add
cld
or
xchg
jge
push
cmp
in
or
pusha
sub
or
xor
pop
push
js
mov
sbb
sahf
jle
outsl
xor
xor
adc
cmp
inc
stos
push
les
pop
shl
add
divb
push
popa
adc
out
mov
fidivs
mov
test
int
das
call
inc
add
push
dec
pop
out
leave
subb
fwait
jecxz
jmp
shlb
popa
mov
mov
orl
mov
rcrl
outsb
sub
push
int3
mov
sbbb
test
je
call
sbb
outsl
call
ss
inc
sub
jl
sub
inc
sub
xchg
and
mov
pusha
dec
jecxz
fdivrs
xchg
mov
movsb
push
cmp
rclb
inc
jne
sub
popf
cltd
in
divl
mov
mov
pop
out
jns
hlt
pop
mov
ss
xor
insb
adc
rolb
jo
fisttpl
in
pop
pop
and
cli
add
or
aad
cmc
adc
inc
or
out
mov
sub
inc
push
aad
xor
fimull
jmp
cmp
ss
test
lret
in
cmp
sub
pop
test
mov
jmp
arpl
aam
xchg
jb
jno
in
pop
xchg
xrelease
sbb
stos
lea
int
dec
sbb
and
test
ja
daa
imul
pusha
lods
mov
mov
inc
cmpl
jg
cmc
lahf
sbb
rcll
lods
push
mov
inc
fucom
aas
lock
push
xlat
hlt
scas
das
std
add
mov
dec
xchg
test
add
jecxz,pn
xchg
arpl
or
adc
inc
mov
aad
push
jle
shl
sbb
inc
cltd
lret
stos
push
sahf
push
sbb
mov
shrb
adc
xor
or
loope
pop
lahf
pop
aad
dec
ds
hlt
testb
fisubrs
mov
aas
and
cmp
bound
push
ja
pop
xlat
stos
jmp
xor
pop
xorl
push
push
inc
fimuls
jo
jne
push
roll
fldenv
sbb
shlb
lret
mov
scas
repnz
cmp
outsb
mov
mov
jle
iret
out
xor
mov
pusha
fcom
loopne
or
lret
pop
imull
or
jo
subb
push
scas
mov
cs
adc
or
lea
ds
adc
scas
in
je
xor
jecxz
add
push
and
lahf
mov
sub
es
pop
sbb
insl
aam
fcoml
mul
pop
dec
enter
cmp
mov
pop
inc
hlt
ret
ja
push
jge
std
cmp
sti
push
in
jmp
adc
sbb
fwait
dec
lods
mov
jbe
std
sub
inc
xor
in
push
or
and
loop
aad
jg
loop
mov
mov
dec
xor
cmpsb
sbb
jmp
popa
stc
xor
push
pop
clc
dec
ret
shlb
xchg
movb
jns
loop
xorb
cmpsl
mov
push
mov
dec
cld
jnp
adc
mov
sbb
faddl
mov
cmp
iret
xor
mov
mulb
inc
fistpl
and
hlt
ss
popa
aaa
lret
push
cmp
jle
or
ja
jnp
enter
fs
out
in
fadds
in
ret
mov
test
sbb
mov
or
aaa
dec
lret
lcall
pop
cli
arpl
lahf
stos
inc
pop
pop
mov
xchg
mov
cmc
fs
xor
icebp
mov
xchg
aas
arpl
popa
lret
outsl
push
inc
enter
fs
stos
test
cmp
in
imul
sub
push
popa
xchg
aam
lret
int3
cmpsl
ficompl
sub
jecxz
ss
mov
test
inc
jmp
mov
adc
fsubl
aam
dec
jno
mov
loop
stos
inc
push
or
pop
fldcw
in
xor
test
fwait
xchg
push
jle
jmp
stos
aad
lcall
xlat
mov
xchg
jl
vandps
pushf
lret
push
jae
mov
stos
fiaddl
rcl
and
sbb
lods
aam
adc
inc
popf
jo
test
add
int3
or
cmpsb
bound
js
fisttpll
out
int
mov
imul
cmpsl
xor
repnz
imul
pop
push
insl
add
sub
movsb
lock
mov
add
testb
jae
jnp
test
ret
xor
in
in
scas
xchg
jo
xchg
cmp
mov
jmp
int
jns
shlb
jmp
pushl
jecxz
test
xchg
cmp
adc
cmp
test
dec
or
push
mov
pop
sti
push
fsubrs
fidivs
xchg
xor
inc
fwait
push
dec
lahf
rcrb
adc
lock
sti
ljmp
xor
loopne
pavgw
lahf
push
imul
mov
xchg
jecxz
stc
aam
ret
jp
xchg
adc
ja
test
mov
xchg
mov
stos
in
pop
fbstp
jno
xor
jo
jae
inc
xor
mov
mov
mov
jns
stos
ret
mov
mov
jecxz
repz
mov
gs
inc
mov
inc
dec
imul
stos
jg
adc
enter
mov
sbb
loope
stos
fs
mov
sarb
mov
les
je
jnp
stc
mov
cltd
stc
in
inc
movsb
pop
or
push
aam
sub
int3
sub
ljmp
fsubs
xchg
sti
cmpl
mov
mov
jnp
out
je
sub
js
sbb
loop
pop
push
icebp
pop
adc
movsl
mov
clc
frstor
pop
mov
mov
pop
incl
cmp
push
xchg
push
dec
cltd
sub
leave
push
xchg
adc
loop
in
pop
inc
dec
dec
and
sub
push
cmp
cld
pop
mov
jecxz
dec
movsl
inc
sub
rolb
or
pushf
stc
aad
cmpsl
pop
add
pop
jg
pop
pushf
add
xor
mov
jae
pushf
inc
jecxz
fisttpl
and
xchg
das
int
xchg
fldt
sbb
jle
ficompl
fcomps
and
popa
mov
test
popa
sbb
cmovl
jae
ljmp
push
sarl
push
sbb
in
pop
cmp
xchg
sub
lods
and
adc
lret
rcrb
jo
xchg
mov
arpl
bound
loope
xchg
push
xchg
dec
push
add
fsubr
jl
dec
enter
mov
dec
cmp
adc
sbb
sbb
fcomi
or
jmp
push
mov
inc
data16
out
es
jb
mov
nop
mov
pop
push
xchg
push
dec
fs
lds
push
jno
lcall
outsb
ret
mov
lock
push
lar
cmc
mov
sub
jb
xor
pop
fsubs
lcall
pop
lods
jg
out
cmpsb
jno
and
jne,pt
mov
loope
jb
jecxz
mov
push
push
adc
scas
add
mov
sbb
push
scas
adc
ja
sahf
fwait
xchg
pop
cmp
mov
and
jg
aas
mov
mov
adc
inc
outsl
mov
push
xchg
mov
adc
addr16
inc
sahf
pushf
jnp
or
lea
adc
in
pop
dec
add
test
adc
sub
xor
je
push
iret
inc
in
jge
addr16
xor
push
arpl
jmp
mov
adc
shl
mov
fidivrs
xor
mov
or
xor
inc
sub
xchg
jnp
xchg
stos
dec
in
lret
cmp
xchg
rorl
add
std
repz
mov
sahf
loop
stc
inc
inc
jnp
ror
cmp
add
scas
and
imul
jecxz
jno
int3
out
ret
push
iret
fstps
imulb
mov
dec
add
and
mov
or
loopne
fistl
mov
adc
jo
dec
push
pop
inc
sub
stos
push
add
aas
cmp
add
jl
movsb
lds
sub
movsl
pop
pop
xchg
js
push
xor
int
fwait
test
dec
or
cmp
mov
cltd
mov
cli
repz
outsl
mov
sub
push
vmovupd
out
mov
xor
inc
ja
sub
cli
jg
lret
lahf
daa
mull
mov
cltd
mov
add
out
aad
sbb
xor
mov
mov
sti
es
lock
add
xor
cltd
mov
push
test
popa
lock
mov
aas
scas
fldenv
xor
inc
mov
iret
imulb
insb
loope
aam
cmp
adc
sbb
mov
xor
and
imul
sbb
addr16
cmp
xor
in
int3
rcrb
shll
or
hlt
std
push
lock
dec
das
xor
hlt
sarb
in
mov
ret
push
test
out
mov
push
sbb
mov
add
jecxz
adc
add
add
nop
cmp
leave
sahf
mov
inc
xor
inc
mov
pop
roll
cmp
push
stos
mov
jle
fwait
and
aas
arpl
ret
pop
adc
xchg
shrb
cltd
dec
into
pusha
add
out
adc
mov
adc
nop
stos
push
cmpsb
dec
adc
pop
mov
into
inc
jne
fwait
std
pop
push
push
and
mov
cmc
mov
and
push
push
xchg
loopne
cmpsb
push
arpl
and
sbb
dec
mov
insl
mov
mov
iret
xor
or
movsb
out
int3
test
inc
stc
sub
shlb
inc
orl
xchg
xchg
mov
xorl
or
ss
jns
arpl
pushf
mov
aas
xchg
andl
repnz
out
faddl
or
idivb
shl
ja
jo
iret
jbe
inc
loope
les
jge
punpcklbw
pop
ret
dec
xor
into
out
ds
pop
lahf
xchg
jecxz
push
aaa
sub
ja
dec
jecxz
vpsadbw
leave
jg
loope
inc
mov
fcmovbe
mov
or
mov
pop
outsl
subps
in
push
test
push
dec
fwait
pop
adc
mov
inc
addb
cmp
clc
inc
cmp
pop
sarl
call
outsl
push
cmp
nop
cmc
loopne
cmpsl
ss
shr
iret
pop
mov
out
cmc
bound
xchg
fiadds
mov
test
fbstp
cmp
push
out
add
mov
imul
outsb
aas
and
outsl
inc
inc
or
and
sbb
jb
mov
mov
push
adc
xchg
pop
clc
lock
jge
mov
ljmp
stc
jg
jbe
sub
int
shrb
xor
push
je
mov
lahf
cmc
pop
fists
adc
add
sub
lea
fcmovu
push
add
repnz
arpl
pop
aas
cli
outsb
and
nop
mov
mov
dec
push
cmp
push
push
in
dec
xchg
mov
add
ja
rcrl
jmp
test
les
push
out
movsb
sub
fistpl
sub
dec
mov
jns
push
adc
call
mov
push
inc
lock
push
cmp
cmpsb
add
jmp
cld
rcll
add
je
push
cli
dec
fwait
xor
push
pop
mov
mov
adc
mov
jns
lods
mov
adc
in
mov
fs
cmp
xchg
xor
and
push
jbe
sbb
scas
jae
push
sti
into
inc
pinsrw
adc
bound
mov
xchg
sbb
inc
mov
lret
pop
fists
hlt
js
cmp
je
dec
mov
jo
jp
fstps
subb
push
sub
out
push
aad
mov
cmc
add
daa
popf
cwtl
pop
cli
mov
js
lds
sub
cmp
push
xor
xchg
sbb
test
mov
js
out
lret
stos
xchg
dec
push
out
sbb
add
sub
dec
mov
outsl
ret
pop
push
movsl
and
repnz
mov
jge
mov
xor
sub
outsb
pop
sbb
jb
je
dec
je
or
bound
or
lret
fdivs
mov
xchg
sbb
xor
add
aaa
mov
mov
in
or
shrb
dec
sbb
jge
movsl
std
pusha
jb
lcall
hlt
jp
mov
cmp
arpl
dec
push
xor
imul
pop
inc
add
inc
or
xor
jno
sub
jg
inc
jb
sub
or
loop
stos
idivb
imul
inc
arpl
adc
repnz
insb
mov
lcall
loop
ljmp
test
push
loope
aas
sahf
movsl
mov
fidivrs
or
push
ret
sbb
lods
mov
rcrl
test
ja
xor
insb
cmpsb
nop
cmp
loop
mul
std
and
and
ja
and
lds
ss
pop
add
pushf
push
lock
gs
and
cwtl
hlt
cld
es
pop
aam
or
or
cmc
lock
ja
jno
mov
or
xor
lahf
pushf
aad
xor
aaa
negl
add
das
leave
test
in
pop
mov
addr16
inc
stos
movsb
insl
ficomps
rcr
insb
repz
das
incb
adc
sbb
rorl
gs
jge
add
add
add
repnz
es
inc
and
mov
int
flds
push
sbb
rcrl
pop
adc
fstpt
test
xchg
push
aam
ds
add
add
xor
dec
sbb
aad
fisubrl
stos
mov
pop
stos
sub
pop
mov
lret
cwtl
cmp
cmp
mov
inc
das
mov
int
int
xchg
arpl
icebp
mov
jns
cmc
ja
push
sub
sub
test
pop
leave
pushf
cmp
loope
sbb
in
sbb
mov
fisubrs
fdivrl
out
adc
ror
jmp
cmp
dec
adc
sbb
in
daa
int3
lret
in
sbb
mov
popa
or
mov
imul
mov
inc
cmp
jnp
lods
xor
cwtl
addr16
sub
mov
and
daa
stos
pop
mov
mov
fmul
mov
mov
es
mov
mov
mov
mov
xor
xor
add
div
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
lea
cmp
jne
mov
mov
xor
add
mov
and
xor
xchg
jmp
outsl
push
cmp
bound
jbe
push
xchg
pushf
hlt
nop
in
jae
sahf
jae
ds
pop
pop
in
shlb
sub
pop
add
into
xor
inc
fcmovbe
pop
fwait
out
ficoml
adc
mov
test
std
stos
xchg
sub
inc
je
fmull
daa
push
lcall
out
push
mov
iret
dec
xorb
enter
fstps
leave
iret
mov
mov
lahf
mov
pop
inc
mov
jmp
mov
scas
adc
stos
jns
inc
adc
and
stc
outsb
adc
dec
pushf
xor
xchg
out
stos
addl
lods
mov
cmpsb
mov
jb
loope
xor
mov
xor
imul
dec
roll
adc
shl
mov
jg
cmp
stos
lds
ret
ror
mov
ja
sbb
and
xchg
movsl
in
in
cmp
and
repnz
sub
gs
mov
mov
dec
and
bound
enter
xor
pushw
out
sbb
cmc
test
lret
or
cmpsl
add
popa
pop
mov
inc
inc
jmp
lcall
pop
xor
lcall
add
jg
frstor
lahf
scas
and
dec
repz
add
dec
mov
sbb
lret
repz
js
in
xchg
insb
mov
dec
and
pop
dec
enter
inc
fisubrl
fisubl
mov
sub
jae
sub
and
sub
xor
mov
pcmpgtw
jbe
xchg
nop
inc
leave
jno
sub
mov
xchg
out
mov
xor
or
cmp
aad
imull
loope
aaa
outsb
xchg
cmpsl
dec
or
jmp
ss
jge
stc
and
je
pop
push
xchg
ds
fwait
test
in
ja
push
ja
in
and
pop
outsb
lea
inc
sub
js
dec
bnd
inc
out
dec
jno
dec
fiaddl
repz
pop
adc
add
aas
add
fidivl
or
mov
ljmp
sbb
call
clc
stos
ret
stos
jb
ja
mov
mov
inc
add
add
cmp
shll
cli
dec
fs
pop
cmpsb
dec
adc
xor
and
or
dec
lds
popa
aaa
lcall
into
push
test
xchg
out
jno
es
xchg
jp
pop
je
int
dec
and
fmull
inc
adc
mov
xor
out
sti
add
and
out
out
ficoms
adc
gs
fwait
push
int
mov
push
pushf
daa
jg
jno
in
mov
xchg
jo
inc
icebp
cld
lods
and
in
mov
jo
mov
les
fmull
cs
pop
pop
outsl
and
jbe
xlat
frstor
jbe
popa
test
jnp
mov
pop
leave
mov
in
add
push
pop
add
nop
sbb
fidivl
pmullw
pop
imul
dec
cmp
adc
ja
imul
jp
mov
dec
roll
lods
adc
lret
mov
add
sbb
aas
xchg
mull
dec
pop
pop
sub
xorl
aam
xchg
into
and
enter
jnp
repz
xor
fidivl
aad
pop
sbb
lahf
xor
loop
or
cs
jg
popf
xor
mov
push
imul
adc
mov
imul
or
inc
movsl
iret
testb
out
js
adc
testl
mov
jg
dec
lea
cmp
rorl
and
cmc
scas
fadd
adc
mov
lods
cmp
xor
or
das
xchg
jnp
fwait
sub
adc
cmp
cmp
mov
mov
cli
popf
ljmp
adc
mov
jge
and
sar
jnp
movsb
packssdw
xchg
inc
enter
sbb
and
sub
adc
cltd
loope
aas
push
push
ret
sbb
jns
push
mov
xor
jb
ljmp
repnz
push
popf
in
movsl
iret
dec
daa
imull
scas
jo
nop
xchg
adc
xchg
sti
aad
cmp
mov
sub
and
shlb
and
jb
pop
nop
test
in
sub
or
mov
je
stc
roll
jecxz
hlt
insl
xchg
arpl
dec
rep
push
pop
adc
das
push
pop
out
es
int3
into
xchg
and
lret
mov
nop
push
lcall
pusha
shrl
xor
shll
ds
xchg
jno
xchg
mov
lock
test
xor
ss
push
jmp
mov
test
xlat
push
lods
sbbb
aam
xchg
in
fsincos
mov
shl
fistl
xchg
mov
push
jmp
ljmp
or
stos
mov
fildll
iret
mov
mov
mov
cmpsb
jge
ds
xor
decb
cmp
dec
xchg
mov
sbb
bound
or
out
jo
test
test
imul
pop
pusha
stos
cmp
fs
mov
mov
pop
insl
sub
dec
xchg
inc
or
sbb
out
jbe
dec
add
inc
adc
insl
faddl
dec
pop
js
jae
lret
test
cmpsb
into
out
inc
adcb
fldenv
jge
push
cmp
inc
das
xor
mov
out
int
xchg
pop
inc
pop
jae
lods
sub
push
cli
roll
aam
imul
cmpsb
loop
cld
mov
and
add
xchg
sbb
leave
pop
shll
inc
je
cmpsl
sbb
lahf
mov
inc
jns
lret
mov
pushf
in
outsb
xchg
dec
sbb
mov
pusha
add
adc
int3
int
push
cmpsl
sub
adc
test
in
jp
cwtl
jbe
or
push
push
ror
jns
and
lahf
fstps
call
aad
nop
fdivrl
fisubrl
add
out
jb
cmp
mov
shll
or
inc
roll
mov
rol
dec
decb
xchg
jmp
enter
xchg
icebp
cmp
cmp
xchg
push
mov
lods
and
jae
loope
jge,pt
in
fcmovb
jae,pn
xor
xchg
adc
xchg
jno
jnp
dec
xchg
adc
push
imul
je
enter
add
out
lret
test
sub
mov
mov
push
nop
mov
add
popa
aas
les
cmp
push
mov
ds
mov
adc
mov
stos
ds
pop
ja
stos
mov
out
repnz
mov
ljmp
gs
xorl
dec
mov
or
andb
and
popf
shll
aam
dec
les
stc
cli
xchg
adc
mov
ret
in
scas
inc
js
dec
adc
jno
jo
inc
cmp
ljmp
and
sbb
out
mov
stos
jae
adc
negb
fstps
dec
lods
fs
adc
or
inc
enter
push
mov
in
out
sub
xchg
fucom
fmuls
sti
repnz
mov
push
lcall
leave
pop
pop
inc
sete
lock
or
lret
aam
mov
mov
mov
adc
or
xor
push
and
jo
cmp
mov
into
xchg
clc
push
mov
aam
and
fs
adc
mov
mov
jp
xor
pop
sub
cmp
adc
xorl
mov
sti
sub
mov
fbld
faddp
loop
sahf
icebp
aas
sub
jecxz
fs
mov
addb
pop
or
and
enter
inc
ret
lcall
and
sbb
cs
inc
mov
push
ja
sbb
pop
dec
enter
sub
cld
pushf
sti
inc
fwait
sub
add
outsl
mov
xchg
inc
dec
insl
ja
xlat
scas
adc
test
and
jl
pop
mov
dec
and
lret
cmp
lret
dec
aad
mov
ret
jl
repnz
xor
push
pop
sbb
mov
psubsb
mov
fwait
jb
lahf
jnp
pushf
sbb
into
movsl
push
lret
imull
cwtl
stos
xchg
pop
fsubl
cmc
clc
pop
mov
icebp
dec
pop
sbb
xchg
lcall
outsl
push
jge
cmpsl
mov
xchg
cmp
aas
jbe
mov
inc
pop
out
sub
fs
adc
xor
cmpsl
push
jns
push
cmpsb
sbb
inc
cmc
in
cmp
out
xor
xchg
notb
ds
out
cli
out
out
andb
dec
xor
pop
mov
mov
add
lds
cmp
sub
and
fdivr
fnstsw
cmp
cmp
mov
adc
les
xor
stos
jbe
mov
xor
cmp
and
mov
aad
loope
jbe
mov
scas
shrb
aam
push
xchg
cmpsl
mov
mov
ret
jl
adc
insb
inc
pop
std
and
xchg
fsubrl
nop
fnstsw
sub
pusha
push
dec
imul
dec
pop
xchg
lahf
fildll
mov
in
add
push
imul
subl
push
mov
popf
or
xchg
in
mov
cltd
dec
aaa
sbb
int
pop
jmp
nop
dec
cmp
cmp
addr16
and
mov
subl
or
sbb
dec
loopne
add
mov
mov
cmp
push
fisubrl
add
ds
ret
stc
hlt
imul
dec
pop
adc
out
mov
cmp
xor
or
sarb
inc
xor
mov
mov
xorb
out
sbb
les
xor
push
fs
daa
in
jmp
test
fstl
dec
fsub
dec
pop
or
lock
mov
xchg
fisubrl
mov
in
in
and
ljmp
call
xchg
orb
in
lock
mov
test
xor
mov
dec
dec
push
insl
inc
jl
dec
push
pop
movsb
fiadds
fildll
mov
aad
mov
mov
xchg
jb
jge
leave
hlt
cmc
scas
outsl
xchg
dec
incl
push
repnz
xchg
std
lea
test
ret
fs
stc
push
jp
dec
pop
push
adc
mov
int3
pusha
call
in
and
pop
in
lahf
ja
dec
adc
call
inc
cmp
ljmp
sbb
pushf
js
mov
sbb
roll
jb
int3
mov
lret
sub
and
mov
les
jle
pop
add
insl
cmp
mov
push
sti
cmpsb
jp
enter
out
push
cmpsl
aas
into
cwtl
int
or
pop
pop
or
jge
xor
call
cmp
mov
sub
inc
leave
xchg
arpl
mov
xor
adc
pusha
dec
cmc
orb
and
mov
sbb
mov
sbb
rorl
cld
adc
add
inc
pop
sbb
mov
test
and
nop
sbb
mov
sub
cmp
clc
test
and
dec
in
mov
imul
cltd
xor
insl
add
cli
shlb
scas
in
test
lret
fbstp
add
mov
pushf
bound
sti
push
or
xor
xor
les
mov
pop
decb
sbb
lcall
incl
outsl
sub
stos
push
sub
loope
lock
mov
mov
pop
aam
popl
inc
xor
mov
ds
call
pop
xlat
ja
test
push
mov
sbb
and
or
mov
stos
lcall
outsl
loope
imul
mov
inc
or
pop
cmp
and
and
mov
push
loop
adc
and
mov
push
setge
insb
rorl
int
mov
sub
mov
mov
fisttpl
pop
sub
rorb
dec
sbb
sub
mov
fldcw
cmp
and
cmp
pop
xor
insb
mov
sub
iret
cli
mov
ljmp
and
push
jae
and
jno
test
ja
into
jne
pop
pushf
pop
das
dec
enter
push
aas
adc
fimull
add
push
iret
shlb
lods
add
orl
aam
ss
cld
sbb
pop
adc
push
cmc
add
aas
fwait
add
shr
ficomps
cmp
dec
inc
mov
dec
xor
and
stc
sar
xorl
add
outsb
incl
test
add
fxch
cmp
je
nop
outsl
push
je
bound
test
dec
arpl
dec
adc
push
mov
insl
push
movsl
outsl
jle
inc
aas
stos
jns
int3
mov
inc
out
add
mov
hlt
fdivrs
xlat
data16
push
aaa
pop
sub
push
mov
pop
or
rorb
dec
nop
mov
fdivrp
dec
jl
loop
lcall
mov
outsb
xor
das
int3
jecxz
mov
leave
stos
sbb
pop
mov
cmp
out
pop
xor
out
dec
jl
jmp
out
jmp
jg
cli
add
cmp
add
jmp
xor
out
cli
sbb
push
clc
popa
cmpb
xchg
xlat
scas
mov
imul
xchg
test
fdivr
cld
fisubs
push
adc
and
sbb
pop
std
mov
mov
and
jmp
jmp
mov
test
sub
mov
jecxz
pop
test
cmp
loop
sbb
clc
cmpsl
pmaxsw
cmpsb
out
imulb
xchg
scas
sub
xchg
push
in
or
push
call
cmc
mov
add
pop
lahf
jne
mov
cli
mov
test
fdivrl
push
inc
int
adc
enter
stc
data16
nop
xor
loope
iret
or
scas
dec
and
xor
jno
loopne
or
jmp
push
and
movsl
dec
ss
setne
push
xor
inc
fmul
adc
std
arpl
rorb
jle
mov
pop
dec
cmp
cvtpi2ps
cmp
stc
or
sarb
inc
xlat
mov
js
push
cli
roll
cmp
movsl
sub
adc
lods
nop
test
data16
adc
test
cli
mov
jb
adc
cmp
and
lret
dec
stos
aad
scas
mov
pop
push
sbb
inc
aad
loope
hlt
pop
jmp
mov
push
jb
jecxz
sbb
std
das
jmp
outsb
adc
fnsave
mov
ljmp
jo
rcl
xor
sub
xchg
pop
inc
adc
aam
ffree
daa
and
loope
mov
lcall
iret
add
call
pop
popf
adc
pop
loop
pop
mov
ja
mov
in
repnz
jp
outsb
ja
adc
fxtract
insl
xchg
add
outsb
gs
clc
mov
dec
aas
lds
mov
inc
xchg
stos
cs
insb
ffreep
out
push
ja
xchg
mov
lds
mov
call
mov
or
jecxz
and
dec
push
subl
subb
add
xor
xlat
mov
push
pop
js
cmp
sub
test
jmp
inc
rorb
js
ret
loop
ja
mov
popf
and
insl
add
lock
jae
shlb
lock
jbe
jne
add
leave
out
in
jno
ja
int
lret
das
sbbl
dec
clc
sub
pop
cmpb
mov
ficoml
mov
out
pop
adc
adc
in
cmp
je
andb
sbb
enter
loope
enter
jle
into
repz
or
push
pop
inc
and
cmp
icebp
add
mov
mov
jb
out
sbb
jb
ret
xor
push
lock
bnd
xchg
mov
jae
clc
cmp
jecxz
cli
jnp
clc
and
dec
xor
ljmp
ret
push
repnz
outsl
jae
dec
sahf
lods
adc
pop
mov
test
cmp
cmp
fstpl
fstpt
sub
mov
imul
cmp
cli
inc
loope
jnp
inc
pop
out
sbb
loopne
dec
out
popf
mov
pop
mov
outsb
repnz
pop
dec
mov
stos
ds
subl
cmp
int3
mov
push
inc
insb
xor
les
mov
clc
sub
stc
repnz
outsb
lret
sysenter
mov
pusha
test
mov
in
mov
shll
ds
in
jb
andb
dec
adc
sbb
mov
ss
mov
aad
add
mov
into
push
xchg
leave
push
mov
mov
pop
and
jge
add
mov
inc
test
jp
in
rcrb
mov
sbb
repz
test
sbb
popa
nop
fsub
rcl
push
pop
cli
outsb
fdivrp
xchg
dec
leave
inc
andb
clc
lock
js
lods
in
mov
push
push
dec
bound
and
stc
dec
shll
icebp
cli
iret
mov
mov
jbe
ja
mov
pop
xor
movsb
inc
fcmove
ret
or
push
push
push
in
ljmp
push
sbb
cmp
fbld
fwait
mov
rcrl
mov
sbb
add
outsb
or
insl
push
sahf
stc
inc
mov
jle
outsl
stc
sub
out
or
xor
lret
test
rcr
pushf
mov
sub
iret
lock
sbb
xchg
xchg
loop,pt
jo
push
in
cwtl
sbb
sahf
add
adc
pushf
and
cmc
inc
subb
loope
repz
test
roll
sbb
in
leave
or
idivl
jg
stos
push
sbbl
lret
inc
hlt
nop
mov
bswap
mov
adc
data16
sti
push
hlt
add
pop
fistpl
xor
pop
int3
cmp
pop
nop
mov
jg
mov
jle
ficomps
cli
popf
dec
jne
popa
stos
mov
jns
jl
ficoms
push
pop
fildl
push
sub
add
and
mov
clc
sub
lret
add
mov
in
testl
sahf
stc
dec
cmpl
xchg
into
add
dec
xor
bound
dec
sbbb
adc
stos
push
and
repnz
xchg
aas
or
popf
sahf
bound
mov
iret
adc
and
fmull
cmp
movsl
btc
test
pop
dec
je
or
cmpsl
popa
test
xchg
sbb
sbb
jno
push
sbb
std
pusha
dec
push
pop
push
mov
sbb
add
or
loope
jmp
imul
lock
pop
jmp
mov
add
dec
mov
outsb
stc
push
hlt
cltd
addr16
sbb
inc
aas
jo
cmpsb
add
push
in
mov
or
inc
ljmp
push
mov
xlat
xchg
jns
bound
rclb
fnstcw
mov
lods
xor
xchg
shr
cmp
cmpsl
ret
mov
shrl
push
dec
mov
into
or
movsl
pop
xor
repnz
test
cmp
sbb
stc
dec
and
sub
movsl
mov
pop
test
push
sti
fsubl
sub
cmp
jge
xor
sbb
sbb
stos
sahf
ret
pusha
mov
sub
pop
ss
pop
push
sub
or
pop
out
lret
fdivrs
in
lahf
imul
adc
pop
and
mov
les
mov
mov
lahf
scas
addl
std
xchg
mov
inc
dec
popf
jecxz
push
cli
jge
addr16
mov
add
and
jns
xchg
sbbl
iret
xor
cmp
jns
std
jns
sub
xchg
inc
leave
add
andb
sbb
faddp
int
in
xchg
cmp
insb
out
and
xchg
cltd
inc
es
sbb
sub
andb
dec
mov
cmc
pop
out
ss
or
and
cmp
cmp
mov
xchg
aaa
mov
mov
add
scas
push
iret
punpcklbw
imul
int
push
addr16
dec
into
in
test
bound
addl
sub
cltd
push
pusha
jmp
fdivrl
mov
in
mov
push
repz
jecxz
idiv
xchg
lods
xchg
cmp
adc
inc
ljmp
xor
lock
jb
out
aad
rcrb
movsb
sub
out
jle
push
xchg
les
repz
daa
jmp
or
outsl
xor
imul
cmp
add
adc
cwtl
mov
dec
pusha
push
test
mov
jbe
xchg
inc
fsub
xchg
xor
dec
nop
cwtl
adc
cltd
cli
dec
mov
jle
sbb
cmp
ss
outsl
xchg
out
outsb
in
cmp
sub
fldenv
push
sub
outsl
sbb
inc
daa
test
jp
addl
in
inc
pop
mov
jmp
out
adc
cmc
push
sbb
imul
lods
and
push
popa
je
sahf
mov
imul
sbb
mov
jb
pop
jp
aas
pop
sub
xor
jle
fists
push
lock
pop
fldt
pop
test
jle
js
push
enter
fsts
xor
sbb
in
in
inc
je
mov
hlt
dec
int3
inc
test
lock
ds
mov
jb
pop
fsub
xchg
movsl
xor
sbb
xor
adc
push
jge
push
daa
std
push
push
mov
sbb
cmp
and
inc
daa
inc
or
mov
icebp
faddp
inc
int3
pop
imull
mov
stos
mov
jge
repnz
mov
inc
mov
in
xchg
lret
push
dec
adc
mov
push
fcmovne
push
jge
gs
js
pusha
pop
mov
xchg
cltd
xor
push
les
pop
push
insl
imul
xor
aas
mov
or
cmc
jmp
and
insl
jb
xchg
push
mov
mov
aad
mov
out
push
adc
outsb
lret
adc
jae
cwtl
and
adc
fucom
dec
xor
stos
xchg
inc
sbb
or
and
aaa
mov
sub
out
push
out
adc
inc
mov
aam
jmp
xlat
pushf
jmp
fs
pop
jb
adc
jne
and
sti
pop
rolb
adc
subb
jl
insl
push
dec
mov
and
mov
mov
inc
adc
enter
shlb
fidivrs
fwait
mov
lcall
pusha
push
ds
cmp
dec
frstor
ja
mov
dec
mov
add
insb
int
dec
leave
mov
or
inc
pop
es
cwtl
cltd
mov
hlt
mov
adc
push
and
test
dec
popa
cmp
dec
jo
push
mov
adc
sbb
xchg
cs
xchg
rorb
sahf
jno
xchg
dec
ljmp
or
lods
push
xor
cmpsb
push
repz
jle
mov
dec
jge
rcll
aas
adc
lret
mov
jno
leave
popa
mov
adcb
xchg
push
mov
movb
or
roll
idivb
jae
inc
js
out
xchg
rcrl
add
ja
push
bound
sbb
rcll
add
and
push
pop
jbe
enter
pop
shrb
fistpl
mov
pop
push
fdivl
arpl
mov
jecxz
test
mov
push
inc
push
xchg
repz
cmp
mov
jg
adc
add
pop
mov
lods
and
xchg
dec
xorl
mov
cmpsb
out
dec
mov
inc
lock
lock
fwait
in
xchg
xchg
add
sub
add
cmp
movsl
fwait
and
dec
mov
mov
adc
es
or
loope
loope
xor
push
cli
ja
push
shlb
cmpsb
in
mov
add
negb
in
pop
mov
jbe,pt
and
add
inc
cmp
scas
mov
or
push
sarb
dec
es
fldcw
and
or
mov
cmp
adc
fisubrl
sub
sti
and
inc
hlt
pop
ret
cmp
or
mov
pop
pop
cmpsb
push
mov
push
pop
adc
adc
stos
dec
popa
mov
mov
cmp
rolb
jmp
jno
xor
notb
addr16
sarb
bound
out
shll
xchg
cli
cmpsl
hlt
outsl
test
les
jbe
fs
xor
adc
or
imul
sbb
push
cmp
cltd
xchg
jbe
push
jbe
loop
fs
xor
sbb
xor
jmp
or
push
inc
mov
sub
hlt
sbb
out
mov
lcall
das
sbb
mov
pushf
movsl
mov
clc
sub
jnp
xor
aad
push
mov
fisubs
cmp
or
jecxz
adc
dec
cmpsb
pop
mov
fcomip
pop
sbb
js
shlb
inc
repnz
jns
call
cwtl
insl
sbb
xor
adc
jp
ja
xchg
push
adc
push
icebp
unpckhps
lea
xlat
aad
stos
mov
mov
mov
mov
popl
out
jo
mov
mov
loop
test
or
out
es
clc
out
test
aad
sub
jge
mov
pop
leave
push
stos
lcall
push
add
cmp
cmp
pop
xor
test
mov
adc
push
cld
inc
xor
push
imul
daa
jo
cwtl
adc
jge
int
or
sub
call
aam
inc
arpl
scas
mov
pop
jle
cmp
add
or
cmpb
mov
mov
adc
aad
mov
xlat
shll
out
pop
cmpsl
and
adcl
sub
rcrb
mov
add
pop
cmc
adc
clc
add
mov
rcll
test
adc
loop,pn
jns
mov
adc
out
sahf
pop
inc
lret
mov
mov
cltd
ficoms
mov
ficoms
or
jp
xor
das
add
es
dec
xor
test
cltd
cs
clc
in
test
je
ja
filds
std
mov
mov
pop
xorb
dec
out
sbb
lods
mov
clc
mov
mov
xchg
mov
push
clc
pushf
movl
push
push
add
adc
mov
rol
sbb
fcompp
add
mov
xor
and
sbb
loope
inc
jecxz
imul
sbb
jnp
push
lcall
adc
sub
lods
jb
adc
push
std
jecxz
push
sub
lret
das
sbb
mov
in
in
cltd
adc
rcrl
dec
sub
stc
sbb
ret
push
cli
gs
adc
adc
pop
jp
dec
test
dec
rcrl
in
je
int3
lock
inc
orb
loopne
scas
lods
lods
ret
enter
aas
lods
xor
sub
sub
mulb
jge
movsb
cmp
inc
jmp
or
cwtl
int3
cmp
fiaddl
mov
dec
lret
cmp
xchg
sbb
pop
shll
cmp
xor
cld
popf
push
cmp
cmp
es
cli
pop
mul
and
inc
jne
test
lods
xchg
loop
addr16
mov
lods
call
push
jg
call
mov
and
sub
rolb
and
or
lock
and
mov
mov
pop
insb
jle
test
push
inc
popf
out
sahf
cmp
jecxz
and
std
mov
pop
das
dec
cmc
mov
mov
inc
xchg
push
sahf
mov
jle
push
pop
imul
jnp
insb
outsl
and
test
sub
xor
das
xor
fildl
push
unpckhps
mov
out
add
test
or
push
mov
test
sub
out
dec
mov
inc
aam
sbb
dec
aas
aaa
push
fisubrs
fildl
push
pop
add
je
inc
push
gs
dec
mov
pop
jb
leave
add
xchg
mov
lret
nop
or
mov
add
cmp
mov
lret
cli
hlt
jne
je
mov
outsl
mov
fstps
popa
mov
mulb
push
fs
imul
pop
jecxz
push
mov
insl
shlb
push
xlat
in
xchg
and
std
lcall
mov
not
xchg
in
jge
mov
sbb
or
add
adc
jecxz
mov
stos
mov
or
jnp
icebp
cwtl
std
ret
pop
xor
test
sbb
pop
clc
rcrl
call
lret
inc
add
jge
jo
mov
gs
insl
mov
outsl
gs
push
stos
pop
push
adc
or
jp
mov
xlat
test
fcmovnbe
lret
daa
cmc
lret
jbe
sub
mov
mov
push
cwtl
adc
aas
xchg
roll
inc
push
jnp
aaa
xchg
mov
pop
xor
fwait
stos
lods
jle
pop
push
sarl
call
or
jle
dec
xchg
mov
test
xchg
jmp
and
icebp
aam
mov
pusha
push
sub
ja
pop
fnstsw
dec
mov
jb
daa
or
push
inc
fisttps
push
push
jp
sbb
bound
add
testb
addr16
pop
mov
in
jnp
repz
fcoml
mov
gs
dec
cltd
addr16
xor
test
test
adc
shlb
push
out
push
sub
inc
mov
jbe
pushf
insb
call
adc
rorl
jecxz
popf
sub
aaa
pop
daa
out
cmp
xor
fsubr
ja
jne
fs
adc
pop
adc
sbb
dec
lods
inc
stos
fistpll
cli
jno
mov
or
int3
sub
int3
das
in
jecxz
fidivs
orl
ret
mov
mov
ss
aam
inc
repz
mov
dec
adc
jbe
sbb
daa
or
loope
or
xchg
sahf
movsb
bound
es
es
pop
or
sbb
or
lahf
or
out
jns
popa
pop
repnz
mov
and
dec
push
pop
jno
insb
out
insb
stc
aaa
cmpsl
add
test
js
or
jno
jnp
out
sahf
add
jl
subb
or
lds
mov
dec
insl
shl
stos
push
loope
iret
insl
loope
adc
xchg
xchg
xchg
push
call
mov
inc
sti
hlt
dec
testb
pop
mov
add
lea
add
add
jmp
loope
jo
jb
rclb
sub
xlat
sahf
jae
hlt
ds
sbbl
es
jmp
pop
jmp
mov
pop
push
out
cld
and
fmull
aad
movsb
int3
xchg
call
repz
gs
jae
mov
push
orl
mov
sbb
and
aaa
jg
cmc
std
mov
mov
decl
gs
push
push
cmp
xor
vmovapd
es
jnp
sbb
add
xchg
jno
or
mov
mov
cmpl
shlb
repnz
push
fnstcw
jno
sar
shlb
cmp
mov
mov
ret
add
lods
nop
pop
xchg
flds
pop
arpl
clc
mov
int
sub
addr16
mov
in
sub
rorb
xchg
dec
cs
iret
pop
or
and
loope
jae
dec
rclb
sub
mov
push
lret
pop
and
gs
loop
pushf
das
xchg
xor
jno
pop
sarb
jo
push
lret
aaa
cmpsl
stos
movsb
das
neg
adc
xor
push
jno
psrlq
mov
fadds
sbb
adc
add
push
clc
lcall
fidivl
lret
repnz
push
imul
pop
imul
sbb
insb
add
inc
cli
ret
ja
push
sbb
jne
push
sbb
xchg
ja
pop
fmul
xor
mov
call
mov
cltd
into
push
push
and
xor
loop
lret
inc
sub
orb
stos
jnp
cmp
inc
int
insb
fcomps
loop
xor
push
sub
push
add
leave
ljmp
cmpsb
sub
call
mov
sub
into
nop
orb
inc
aas
inc
vmovd
out
jae
sbb
sbb
mov
std
std
rclb
lock
xor
scas
lock
pop
and
add
push
test
cmpsl
mov
iret
pop
mov
inc
inc
fbld
xchg
add
leave
pop
es
icebp
mov
test
sar
dec
scas
xor
xor
sbb
xchg
push
incl
fiaddl
stos
pop
jnp
cld
sbbb
out
es
xor
call
jno
push
sub
into
test
add
add
dec
lret
fnstcw
fwait
jle
sub
mov
sbb
pop
inc
xchg
push
inc
stos
jl
adcl
cmp
sub
xor
inc
dec
in
pop
xchg
les
aad
cmpsl
fistpl
clc
dec
xor
jecxz
jp
daa
ds
inc
jmp
push
jge
test
idivl
dec
call
push
or
mov
aam
iret
fwait
lahf
jge
in
int3
cmp
arpl
rcrb
push
xor
xchg
notl
rcr
int3
adc
push
dec
mov
test
or
mov
xchg
mov
jb
lods
pop
inc
loopne
pop
mov
jecxz
jb
pop
lahf
mov
push
mov
mov
push
insb
insl
cmp
mov
and
cbtw
mov
jne
add
xchg
sbb
and
jp
mov
daa
icebp
shr
iret
repnz
movsl
pop
js
xchg
sahf
adc
add
jg
xchg
mov
lcall
xchg
js
mov
pop
push
and
sahf
jle
sbb
andb
aad
sarb
cld
addr16
jle
repz
xor
dec
pop
or
sub
mov
stos
daa
sbb
int3
in
sbb
mov
int3
jecxz
mov
push
cmpb
lock
sbb
mov
cmp
stos
pusha
jg
in
loope
adc
mov
cmp
dec
mov
aaa
cld
xchg
lcall
adc
pop
inc
int
pop
data16
mov
lret
and
test
or
enter
aam
push
add
arpl
add
lahf
aas
jle
add
movsl
arpl
insl
insb
push
je
ja
mov
cltd
jg
xor
inc
mov
xor
scas
sub
push
mov
fidivl
adc
jp
loopne
or
icebp
jbe
push
out
imul
adc
inc
jle
sbb
into
mov
mov
gs
xchg
stos
arpl
stos
rol
loop
pop
add
or
push
dec
out
loopne
and
or
lods
data16
inc
adc
vmwrite
xchg
inc
cmpsb
jnp
subb
ret
jge
and
scas
mov
call
push
shll
cmp
inc
dec
xchg
fisubrl
lret
dec
movsl
xchg
push
cltd
push
mov
jb
lret
fadds
ja
ret
push
pop
inc
or
in
mov
in
or
mov
cmp
xchg
push
cmp
shll
jg
movsl
mov
push
xchg
test
insl
pop
mov
dec
fstp
xor
loopne
je
mov
mov
out
in
adc
cmp
test
xor
stc
sbb
add
mov
mov
or
and
sbb
mov
das
dec
repz
and
pusha
into
pop
xor
lcall
and
shll
xchg
imul
fs
cmpb
pop
dec
dec
or
cs
das
sbb
mov
jg
das
sbbl
imul
aad
push
cmp
cmc
aam
std
jnp
push
push
das
test
pop
clc
jns
sahf
fsub
and
fstpl
mov
stos
test
shrb
cmp
data16
imul
pop
int
dec
movsl
shrb
dec
xorl
jp
push
mov
mov
xchg
sub
push
rcl
xor
dec
gs
ds
or
loopne
ficoms
out
and
out
inc
pop
inc
into
cmp
pushf
add
or
mov
jp
cmp
add
popf
sti
fs
jb
fstpt
xor
sbb
jbe
outsb
divl
dec
das
inc
cmovo
mov
clc
jne
enter
mov
dec
dec
ss
outsl
cld
pop
aad
cltd
adc
stc
ss
push
push
out
repz
stos
cmp
or
sub
inc
sbb
mov
pop
dec
out
sub
mov
push
mov
mov
pop
les
es
lcall
or
xadd
das
incl
sahf
pop
mov
jbe
push
and
push
mov
gs
dec
or
fldenv
mov
add
lods
xchg
inc
xor
sbb
push
scas
imul
ss
dec
xchg
enter
in
jg
jge
sti
stos
xlat
flds
inc
dec
mov
or
mov
jns,pn
repz
push
sbb
adc
jecxz
in
cwtl
sub
jno
add
aam
cs
mov
jno
xor
fst
fistl
stc
aas
dec
cmp
push
push
add
inc
xor
push
push
lods
iret
incl
push
or
mov
nop
cmp
ljmp
imul
insb
arpl
sub
lods
cli
jp
imul
ss
push
iret
sbb
test
jg
into
jo
lcall
add
or
push
rclb
mov
mov
inc
push
int3
adc
js
adc
repz
sbb
out
and
outsb
xchg
orps
out
pushf
push
pushf
xchg
into
imul
inc
add
pop
das
shr
mov
pop
mov
jge
ret
scas
imul
cmp
add
rol
lret
fsubrs
call
lods
push
push
jle
dec
mov
and
adc
std
notb
mov
std
stc
fstpt
or
outsl
push
scas
sbb
adc
ret
cmp
push
adc
aaa
mov
clc
stc
stos
or
ret
push
lods
pushf
jb
out
jne
imul
mov
cmp
jp
sub
ret
mov
mov
cmc
dec
iret
sbbb
test
sbb
imul
cmp
aad
sbb
or
xchg
inc
mov
cwtl
sahf
pop
imul
fistps
mov
mov
dec
inc
lock
xor
gs
stos
jne
push
push
mov
sub
je
xchg
or
insl
xchg
pop
dec
enter
push
and
shr
jle
cltd
fisttpll
imul
aaa
cmp
cli
rol
mov
ljmp
xchg
aas
scas
scas
mov
fdiv
stos
jbe
and
mov
xchg
mov
pop
push
and
cmp
pop
push
movsl
inc
or
mov
mov
shl
out
mov
clc
out
fcoml
sbbb
dec
jne
sbb
dec
popf
mov
rorb
mov
ret
mov
mov
mov
jne
push
cltd
orb
and
lods
xchg
cli
push
mov
mov
scas
pushf
jmp
aam
inc
add
pop
fidivrs
xchg
data16
mov
gs
into
or
jge
loope
add
cmpsl
mov
pcmpgtd
lock
push
sbb
push
cli
fstl
mov
adc
inc
shr
add
fnsave
dec
push
repz
loop
mov
out
pop
push
and
ja
in
dec
imul
loop
test
out
addr16
nop
shrb
add
inc
clc
sbb
pop
popa
popf
into
negb
fsubrs
mov
cmpsb
int
xor
jns
add
mov
stc
mov
les
ret
imul
sahf
loope
js
dec
pop
xlat
or
sar
and
mov
loop
loop
enter
jbe
int
xacquire
adc
mov
inc
outsl
in
in
xor
fistl
pop
je
sbbb
fidivl
lods
test
outsl
pop
fdiv
ja
les
push
repz
popa
pop
jmp
cwtl
xchg
and
mov
enter
std
cs
jg
fbld
in
ror
push
adc
outsb
out
jbe
dec
mul
inc
push
jmp
dec
mov
dec
scas
xchg
pop
leave
sbb
adcl
pop
push
aaa
pusha
call
mov
cmpsb
push
push
sbb
inc
aas
mov
mov
sbb
das
lahf
ljmp
push
add
mov
jnp
orb
loopne
mov
pop
cmpsb
add
dec
popa
insl
rorb
push
pop
test
inc
mov
push
mov
adc
lods
lcall
push
shrb
cli
add
hlt
sbb
shlb
sub
dec
shrb
sti
cmp
mov
push
fisubrl
fimull
pop
fidivrs
loope
aas
inc
pop
inc
dec
sub
inc
popa
rcll
mov
rorb
in
ja
cltd
or
dec
aad
push
mov
orl
hlt
dec
cmpb
pop
imul
xor
inc
xchg
cwtl
sub
test
scas
add
mov
mov
inc
sbb
pop
mov
loop
addl
cmp
je
dec
sub
test
shl
inc
insl
movsl
sarl
mov
ja
dec
cmp
mov
ds
mov
bswap
dec
fdiv
xor
inc
pop
clc
mov
lret
mov
push
rolb
les
inc
mov
dec
pop
sub
sub
push
dec
sub
jo
sub
addr16
mov
movsb
iret
ja
mov
dec
movsl
sbb
cmp
add
jo
xor
push
jne
mov
xchg
pushf
clc
hlt
test
sbb
lock
adc
insl
mov
cwtl
mov
repnz
test
cmp
pushf
outsb
in
in
push
pop
pop
pop
ljmp
jae
sbb
addr16
sub
xor
sbb
or
repz
add
adc
adc
jns
pop
push
mov
jp
xor
ss
pop
test
sub
int3
aad
xor
out
inc
mov
dec
or
shrb
sbb
cmp
addr16
sbb
cmp
cmp
mov
mov
xor
movsl
or
sub
push
dec
insb
in
add
popa
inc
sbb
push
cs
xorl
mov
aad
popa
and
jo
movsl
inc
fwait
pushf
push
in
push
repnz
jne
xchg
mov
mov
jns
dec
nop
cmp
mov
push
adc
pop
mov
cmpsl
cmpl
push
movsb
inc
mov
movsl
lret
test
mov
add
ret
incb
xchg
imul
test
cmpsb
hlt
mov
jno
sarl
jmp
roll
imul
xor
ret
cmp
cmc
out
xor
out
mov
enter
mulb
pushf
xor
sub
sbb
push
cld
pop
in
imul
pop
out
adc
pop
xchg
adc
fdivrs
movsb
lods
mov
bound
addr16
mov
pusha
xor
lods
adc
mov
dec
mov
push
andl
ret
pop
dec
push
xchg
push
cmpsb
xchg
xchg
inc
cmp
cmp
ret
push
shrb
push
dec
cmp
jmp
dec
dec
mov
inc
pop
fdivs
xor
das
fnstenv
pushf
dec
pop
pop
out
pop
sub
adc
adc
adc
popf
cmp
sbb
adc
push
in
push
adc
xchg
sbb
das
mov
mov
xchg
mov
popf
cs
xchg
divl
jmp
mov
out
int3
jg
int
and
das
sahf
int
push
jge
cmp
aad
outsb
gs
cmp
cmp
sub
pop
in
mov
mov
or
sti
mov
mov
mov
enter
iret
cmpb
mov
call
xchg
pop
mov
insl
and
stos
mov
push
jmp
adc
icebp
es
mov
push
mov
or
pop
cmp
push
add
clc
and
inc
aaa
inc
sbb
and
iret
ret
add
sub
xchg
out
mov
daa
shlb
mov
fndisi(8087
mov
ja
outsb
inc
scas
fnstenv
xor
adc
push
pop
insl
mov
mov
xchg
mov
in
lcall
stos
jo
divb
and
clc
cmp
cmpl
jl
xchg
in
mov
jno
pop
aaa
pop
fiaddl
cmp
xchg
mov
mov
dec
cmp
stos
xchg
xchg
pop
daa
int
jmp
jecxz
jmp
hlt
incb
imul
fsubrs
enter
mov
inc
loope
insl
aaa
imul
sub
icebp
clc
pop
mov
incl
push
cmp
fwait
inc
shll
and
adc
pop
out
mov
pop
popf
fcoml
adc
add
add
loopne
and
int3
icebp
sbb
sub
xor
jge
aaa
nop
jno
sbb
dec
les
js
xchg
cmc
add
xchg
mov
std
in
jl
adcl
add
aas
mov
sbb
imul
mov
arpl
ficompl
test
cmpsl
xor
ficoms
mov
xchg
popa
scas
or
push
jo
cmc
push
lcall
outsl
sti
push
sub
mov
aaa
mov
xchg
and
jo
sub
addr16
cmp
mov
es
cwtl
iret
out
push
and
mov
popf
insb
mov
adc
and
bound
imul
inc
pop
and
sahf
rcrl
mov
out
xlat
mov
dec
or
mov
cmp
mull
in
push
ja
jo
les
sub
xor
sub
jbe
popa
mov
mov
es
jmp
fistl
inc
out
mov
pushf
es
inc
lcall
jns
adc
aam
push
xchg
push
pop
jbe
movsb
ret
or
pop
jle
aad
mov
xchg
cmpsb
into
scas
imul
inc
mov
pop
ret
sarl
jns
cmpsb
leave
push
rclb
jle
push
std
and
fxch
xor
add
fsubrl
or
jl
rolb
push
mov
ficoml
mov
cld
dec
push
insl
fwait
loopne
sub
negl
sti
mov
push
fs
clc
xchg
repnz
dec
sub
in
add
sub
jg
cmc
subb
clc
daa
pop
jb
cmp
ficoms
fidivl
xor
aaa
pop
subl
cli
adc
jg
mov
rcrl
aam
pop
jge
sub
lcall
enter
test
jne
cmp
or
pop
inc
jb
xor
mov
loop
sahf
adc
test
fptan
jo
lods
sbb
xchg
adc
out
shrb
ljmp
lret
xchg
xchg
js
pop
jae
aas
mov
mov
sub
cmp
xor
xor
mov
push
andl
scas
mov
push
icebp
hlt
dec
push
xor
xor
divl
inc
scas
popf
inc
lods
in
mov
dec
mov
inc
xchg
jle
andl
insl
enter
data16
pushf
lods
mov
in
rcr
push
jno
cltd
cmp
dec
pop
jle
or
es
dec
scas
frstor
inc
mov
ret
dec
jbe
iret
dec
adc
fwait
hlt
inc
stos
push
sbb
ret
js
pushf
movsb
pop
bound
mov
ret
inc
hlt
dec
hlt
mov
and
mov
sbb
ja
fistpll
ret
cmp
xor
lret
jmp
int
mov
pop
cmpsb
mov
xor
leave
mov
cmpsl
adc
mov
stc
ja
icebp
jle
mov
mov
movsb
dec
bound
das
bound
lret
mov
xlat
jmp
dec
add
mov
jo
sub
dec
and
push
inc
lea
mov
jne
cmp
mov
int3
mov
call
lea
ds
push
add
or
movsl
jle
mov
test
or
nop
cmp
movsb
lret
testb
les
out
dec
out
wrmsr
test
and
iret
push
sbb
jne
mov
or
filds
in
loop
lock
enter
lea
push
pop
mov
ja
mov
es
popa
or
lcall
mov
stc
fistpl
jnp
lds
jge
push
rcll
les
adc
insb
mov
idiv
das
ss
stos
and
pop
les
mov
cmp
fsubrl
gs
xchg
fucomi
repz
aas
iret
lahf
push
mov
xchg
and
mov
xchg
jmp
jle
pusha
lahf
insl
adc
rorl
cmp
or
insb
inc
cmp
out
call
and
movsb
push
mov
stos
xor
pop
adc
ja
push
cmp
movl
add
movsl
subl
inc
lcall
loop
lret
addr16
mov
test
movl
or
mov
clc
movsl
repz
mov
pop
leave
loopne
fnstsw
outsl
mov
push
shlb
popf
sbb
les
and
push
je
pushf
adc
xlat
xchg
xor
add
push
pusha
cmp
fs
dec
mov
add
jb
mov
js
stos
call
mov
mov
mov
cmc
fldenv
jo
outsl
or
rorb
push
imull
jle
cmpsb
xor
loopne
out
outsb
adc
mov
or
push
adc
ljmp
cltd
sbb
pop
lds
repz
test
dec
lcall
pop
jb
inc
mov
adc
cmpsl
push
pop
les
insl
jno
or
inc
fwait
mov
cwtl
pusha
sbb
and
adc
icebp
clc
test
inc
ljmp
repnz
jge
sub
xchg
dec
jp
ljmp
loope
jne
mov
mov
callw
push
das
cmp
out
push
push
xor
and
ss
push
jg
daa
stos
sbb
gs
addr16
xlat
int
mov
aaa
xorb
ja
inc
rcll
jns
push
outsl
dec
push
pop
clc
pop
sbb
xlat
out
lea
mov
push
int3
inc
xor
mov
leave
xor
and
int3
xchg
inc
xor
mov
inc
and
xchg
sbbl
jl
fnstcw
test
inc
clc
fnstenv
lea
fdivl
jg
push
imul
mov
or
cmp
or
fsincos
test
call
dec
push
adc
out
jbe
iret
mov
jge
pop
xchg
dec
push
xor
jle
lcall
or
ret
arpl
mov
out
lea
jle
clc
xchg
loop
xlat
sub
mov
loop
popa
arpl
add
das
hlt
in
mov
jno
int3
push
sbb
bound
mov
and
iret
stos
aam
aaa
cmpl
pop
into
cwtl
out
pushf
bound
in
insb
ljmp
inc
jae
stos
lret
sub
xor
pop
inc
add
mov
xchg
insb
adc
jge
pop
add
push
aad
mov
mov
pop
je
mov
icebp
add
fcomps
add
jp
fstps
push
mov
imul
or
dec
push
fstps
lock
or
jp
loopne
xchg
mov
movsl
and
sub
nop
adc
adc
sbb
lahf
xchg
lahf
lock
scas
xchg
or
push
movsl
xchg
std
cmpsl
pusha
or
jge
test
and
push
mov
sub
mov
pop
push
lods
pusha
jle
sbb
add
mov
frstor
xchg
xor
pushl
xor
mov
mov
adc
lahf
xlat
loope
inc
fwait
ret
test
xchg
lcall
add
adc
pop
dec
dec
icebp
rol
shlb
movsl
data16
lret
mov
movsb
or
fdivrl
or
inc
subb
mov
shrl
rcrb
mov
xor
adc
roll
out
filds
in
into
pushf
jl
mov
inc
mov
push
test
inc
adc
or
mov
jo
mov
sub
push
mov
add
cmp
call
and
xchg
xchg
mov
cmpl
dec
adc
pusha
jae
sub
out
stos
mov
mov
mov
int
lret
aas
inc
sbb
and
ret
in
jle
mov
add
cmc
jnp
fmull
push
mov
push
pop
jno
hlt
cli
fucompp
scas
inc
or
sub
fs
aad
xchg
dec
sbb
mov
shrb
dec
jns
dec
test
out
fisttpll
stc
clc
clc
lods
mov
jg
outsb
test
push
adcb
xchg
adc
sbb
movsl
xor
mov
popa
ds
sar
xchg
adc
mov
sbb
mov
cmpsb
dec
fwait
lock
mov
nop
loop
inc
movsl
push
mov
rorb
leave
pop
repz
test
pop
xor
enter
call
mov
fisttpll
call
fmull
push
imul
ljmp
ret
mov
cs
sarb
adc
xor
jno
xor
jl
ret
lea
fiaddl
repz
dec
xchg
push
fldl
mov
in
lea
cld
jbe
adc
outsl
jmp
mov
iret
outsb
pop
push
xchg
aaa
mov
push
ss
jne
outsb
inc
fldenv
mov
mov
es
mov
pop
add
jno
adc
sbb
popa
mov
jmp
mov
inc
test
sahf
jmp
cmp
repz
inc
addr16
stos
cmp
mov
repz
imul
push
std
sub
push
dec
push
int
sub
icebp
lods
loope
mov
notb
mov
hlt
fwait
fstps
xlat
movsb
add
shlb
and
fists
dec
mov
jp
into
cwtl
push
mov
aas
pop
daa
or
pop
mov
js
mov
inc
jne
out
sbb
xchg
cmp
std
std
ja
movsb
jg
dec
outsl
cld
mov
jns
add
xor
loope
fdivrl
push
and
mov
adc
inc
or
icebp
xchg
lret
add
cmp
adc
sbb
sbb
add
mov
sub
pop
addr16
fstpl
push
add
cmpsb
roll
xor
int3
mov
xchg
loop
xor
fwait
mov
push
mov
inc
decl
and
sbb
inc
stc
xchg
push
xchg
mov
or
add
fildl
cmpsb
push
mov
push
inc
push
jp
scas
mov
lret
nop
and
sbb
shll
fs
in
outsb
aam
pop
mov
sbb
push
stos
jecxz
adc
push
repnz
dec
jmp
mov
rolb
inc
sub
rcrb
pop
cmpsl
pop
or
cli
add
push
ret
and
in
mov
roll
dec
lock
lds
xor
ret
pop
testl
xor
xchg
mov
sub
inc
stc
hlt
adc
or
cmp
movsl
bound
add
pop
scas
stos
cmpsb
and
aas
xor
dec
xor
inc
jmp
pop
jl
and
push
in
scas
mov
add
adc
sbb
shlb
loop
mov
mov
out
mov
xchg
imul
or
loop,pt
xchg
fcomps
loop
int
repz
push
jns
mov
popf
pop
jge
xchg
jbe
adc
rorl
outsb
or
aam
gs
sbb
cltd
cwtl
cwtl
pop
cli
not
adc
cmp
fldcw
outsl
jno
and
sbb
and
pop
push
xor
mov
js
adc
cltd
rol
imul
shr
mov
pop
insb
lods
iret
test
jl
cmp
push
out
and
jle,pt
add
sbb
add
and
dec
mov
pop
scas
stos
sarb
xor
mov
mov
sbb
xchg
xchg
dec
js
cmc
lock
mov
xor
stos
repz
xchg
and
cli
xor
pop
ljmp
popa
sub
jno
addr16
jbe
decl
xor
addb
jns
call
mov
cmpsb
shll
inc
xor
movl
mov
jle
inc
jns
push
lahf
cwtl
cwtl
loop
scas
mov
repz
leave
pop
inc
scas
bound
cmp
push
xchg
movsl
push
stos
cltd
and
pop
sub
inc
add
cmp
in
shrl
inc
xchg
les
pop
jne
aaa
int
jle
mov
leave
pop
mov
push
outsb
inc
or
jle
or
inc
pop
mov
mov
je
shlb
xchg
adc
pop
aaa
je
dec
pop
and
inc
pop
sbb
add
xorl
pop
inc
shlb
pop
dec
mov
sub
inc
cwtl
jmp
aas
je
xchg
leave
int3
xchg
inc
das
ss
test
inc
jne
sti
push
outsb
lea
int3
and
push
testb
or
ja
repz
add
dec
data16
or
std
add
xor
xchg
stos
je
into
loope
nop
repz
pop
enter
sub
gs
repz
aam
stos
pop
das
lds
ficoml
scas
test
outsl
repz
mov
cmpsl
or
jecxz
push
adc
push
nop
xor
jmp
sub
out
test
pushw
ja
inc
jg
stos
xchg
pop
faddl
inc
rcrb
mov
rorl
mov
sbb
push
ljmp
xchg
data16
repnz
ret
xor
xor
pcmpgtd
mov
cmp
sarl
movsb
xchg
popf
mov
jle
std
xchg
cmpsb
leave
xor
add
push
popf
and
xor
jp
imul
rcll
or
sub
cwtl
mov
jo
stc
loop
insl
test
in
jge
lcall
and
ss
or
sbb
sub
and
pop
xchg
jbe
rcrl
sbb
pusha
mov
test
adc
shrb
or
sbb
and
outsb
ret
mov
ret
je
sbb
sbb
pop
repnz
aad
jb
mov
das
pop
gs
jp
mov
lds
mov
or
pop
outsb
out
xlat
or
loopne
add
jp
mov
aaa
add
aam
pop
test
xor
jge
in
insb
xchg
cmpxchg
dec
sbb
je
cmp
mov
or
je,pn
cmp
lds
data16
mov
mov
jb
test
dec
push
pop
push
xor
aad
clc
into
les
mov
and
in
push
loope
in
shlb
aas
lret
test
cmc
ds
adc
jne
push
inc
imul
sbb
shlb
cmpsb
push
lahf
sub
loopne
mov
call
cmp
mov
lods
push
stc
dec
pusha
inc
xlat
imul
adc
mov
repz
push
jecxz
mov
push
xchg
stos
js
cmp
mov
sub
lods
and
ja
clc
faddl
lods
jl
xor
add
pop
inc
mov
mov
iret
jge
push
ficoms
dec
lds
jb
xlat
stos
or
loopne
leave
leave
sub
xchg
and
or
in
jae
cmp
sbb
cmp
jmp
movsl
mov
into
test
mov
mov
jmp
inc
sti
fldcw
clc
test
clc
push
outsl
jo
adc
mov
movsl
sub
add
lock
ror
mov
fbstp
fsub
add
dec
sub
scas
push
es
jne
mov
cmpsl
das
lods
pop
std
adc
mov
xor
testb
sub
fwait
jne
shl
jmp
cmc
or
filds
dec
outsb
and
ret
dec
pop
jmp
repnz
xchg
mov
inc
inc
pop
sub
loope
es
adc
scas
adc
cmp
inc
out
pop
leave
fildll
and
inc
pushl
sarb
call
or
jp
dec
test
pop
das
sarb
inc
sarl
rcll
push
test
into
iret
mov
andl
sub
inc
sbb
jo
pop
aam
fnstsw
adc
sub
sub
adc
psrlq
shll
faddl
icebp
scas
pop
data16
xchg
cmp
out
push
pop
mov
jne
push
xlat
movsl
jno
add
cli
ljmp
add
xchg
movsl
sub
int
mov
and
je
push
test
inc
andb
jmp
cld
push
xchg
cmp
cmp
xor
fdivs
ret
inc
sbb
lods
scas
popa
mov
popf
jae
aaa
bound
cmp
test
movsb
sbb
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
mov
mov
movzbl
and
mov
mov
xorl
mov
adc
sub
decl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
push
pushl
call
mov
dec
mov
jmp
movl
movl
xor
xorl
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
sub
push
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
adc
mov
subl
mov
adc
mov
mov
not
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
pushl
push
push
call
jmp
push
mov
adc
add
inc
push
movl
mov
adc
mov
mov
xor
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
movl
mov
mov
cmp
jne
cmp
jne
mov
mov
xor
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
mov
xor
or
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
sbb
push
movl
and
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
push
sub
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
movzbl
add
mov
xor
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
notl
xorl
add
mov
sbb
mov
sub
mov
adcl
orl
mov
sbb
mov
sub
mov
mov
xor
add
sub
and
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
mov
xor
mov
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
call
test
je
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
sub
xor
mov
cmp
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
mov
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
sub
movl
dec
lea
adc
mov
xor
movl
or
lea
mov
mov
mov
mov
addl
push
andl
xor
adcl
push
movzbl
or
add
sbb
push
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbb
mov
sbb
mov
and
mov
movzwl
and
add
orl
mov
sub
mov
mov
and
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
addl
add
movl
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmp
movl
jmp
add
ret
cltd
jo
bound
out
cmpsb
and
inc
and
push
sahf
jae
sbb
mov
dec
cli
xor
jnp
ret
test
clc
sub
aas
push
loope
mov
notl
sub
inc
and
dec
lahf
shlb
hlt
out
sbb
test
xor
out
pop
and
xchg
out
xchg
mov
imul
jg
sub
pop
sbb
mov
je
jbe
out
push
popf
fidivrl
cmpsb
data16
hlt
loopne
mov
out
bound
in
pop
inc
dec
out
out
fsubl
pop
in
mov
cltd
add
cmp
or
pop
pop
leave
sub
cmc
dec
inc
int
cmp
adcl
adcl
test
sar
adc
and
divb
cmp
lret
adc
rcrl
xor
xlat
mov
push
pop
insb
scas
or
clc
mov
loopne
stos
test
inc
dec
lock
jp
jb
popa
pop
mov
dec
cli
addr16
fwait
dec
xor
ret
lret
mov
inc
inc
inc
test
pop
xchg
cmp
les
in
into
out
sbb
ljmp
lds
push
add
push
loop
cli
mov
arpl
mov
das
xchg
sbb
add
push
mov
xor
sub
xchg
rcll
and
ret
std
add
imul
out
jnp
lds
sub
jecxz
xchg
std
roll
leave
inc
inc
hlt
mov
repz
test
pop
std
mov
push
cmp
loope
push
es
or
scas
mov
push
xchg
push
cmp
imul
add
fcmovb
sub
ds
add
dec
je
in
imull
test
idiv
jae
sub
out
sub
cmp
in
and
jae
push
adc
pop
inc
test
push
es
sbb
shlb
hlt
sub
mov
dec
int
jmp
xlat
mov
jbe
pop
and
fcomp
je
push
adc
lea
call
std
movsb
inc
insl
adc
popf
jge,pt
lods
adc
inc
into
repz
popf
int3
jecxz
cli
jge
cs
or
inc
or
mov
mov
inc
ss
jmp
loope
jnp
adc
pop
stc
fs
sub
jl
test
adc
inc
mov
fsqrt
mov
dec
or
cwtl
mov
movsl
and
ret
and
dec
push
add
jo
and
cmp
pushf
dec
and
mov
jne
xor
cltd
sbb
gs
mov
cld
ret
pop
adc
sbb
lock
jne
loope
repnz
mov
enter
xor
imul
sbb
mov
stc
inc
pop
cmp
gs
inc
jb
cmp
or
into
dec
or
ret
sbb
dec
mov
sub
ret
inc
sub
scas
xor
lret
push
mov
add
jne
push
imul
stc
lahf
dec
mov
test
jo
xor
aaa
bound
xor
pop
cmp
lret
mov
lcall
fstpl
xor
mov
jmp
pop
sub
xchg
das
sar
adc
push
dec
pushf
cmp
call
ret
push
jnp
repnz
sub
lods
cmp
pop
ss
movsl
mov
out
adc
fs
loope
mov
bnd
push
mov
std
push
cmp
nop
sub
ja
popl
sub
cmp
mov
aam
rcll
in
mov
ret
push
cmp
mov
dec
mov
std
inc
cmp
add
add
cmpsl
rclb
pop
jns
pop
jmp
cli
in
cwtl
daa
jbe
rolb
fisubs
cmp
in
pop
sub
add
or
mov
mov
cwtl
repz
cmp
pop
cmpsb
aaa
fmuls
cmpsl
popf
add
ret
cmp
leave
xchg
pop
je
test
xchg
and
mov
push
mov
sbb
adc
xor
imul
fucomi
push
add
andl
dec
imul
pop
add
xchg
popa
data16
dec
andl
cli
cmpsl
pushf
int3
ja
es
push
xchg
dec
adcb
add
xchg
pop
mov
mov
inc
and
cs
divb
scas
jecxz
lods
repz
iret
jle
xchg
inc
jg
xchg
out
stc
mov
jb
pusha
ret
mulps
add
mov
in
xor
jno
les
cmpl
xor
sbbl
loope
cmpsl
mov
jne
mov
sahf
in
fiadds
ds
sub
dec
fimuls
push
jae
out
and
dec
cmp
es
adc
stc
insb
jb
repnz
mov
sub
iret
hlt
jae
movsb
jbe
and
mull
outsl
ds
sub
mov
sub
lret
mov
nop
add
dec
xchg
inc
cli
xor
stos
or
cmp
cmp
test
out
fucom
lods
xor
mov
mov
scas
jg
aas
std
or
dec
xchg
sti
adc
aaa
xchg
add
xor
jnp
sub
jne
sbb
jb
adc
idivl
sub
jns
fsubr
adc
pushf
adc
pop
fisttpll
jecxz
add
xchg
mov
in
add
lret
push
jno
lods
sbb
out
in
outsl
sbb
cmp
rcrl
sub
cmp
adcl
xor
shl
cmp
arpl
mov
xchg
into
jns
imul
repz
dec
pop
jnp
adc
add
leave
repnz
into
scas
outsb
mov
cmp
lahf
faddl
pop
cmp
or
sub
leave
inc
mov
mov
out
jmp
cltd
cmp
ret
mov
sbb
daa
pop
mov
pop
ds
es
lret
aad
nop
mov
lock
xchg
negb
fwait
push
or
inc
fcmovbe
icebp
cmp
push
push
pop
jg
dec
sub
divb
aam
sbb
arpl
int
dec
mov
mov
or
fdivs
sub
shlb
mov
xchg
pop
cmpsl
mov
jne
cltd
enter
mov
cltd
lret
outsl
or
mov
stc
bound
jae
sub
jmp
into
repnz
pusha
fiadds
adcl
jnp
sbb
xchg
add
mov
inc
mov
stos
ret
mov
inc
leave
mov
lods
pop
test
and
xor
xor
or
mov
cmpsb
je
sbbl
mov
cmp
mov
mov
cwtl
adc
ljmp
shlb
mov
das
movsb
sub
cmp
outsb
out
sub
arpl
jae
shrb
dec
or
jmp
jns
pop
aam
pop
lods
xchg
dec
ret
add
xor
int3
inc
shlb
out
out
cmp
sub
mov
sub
push
pop
xor
andl
mov
push
xchg
pushf
cmp
jno
push
push
pop
lea
cmpsl
mov
rorb
push
push
cmc
loope
adc
int
call
shl
xchg
repnz
insl
adcb
ss
xchg
cmpsb
out
adc
hlt
push
xor
xor
lods
mov
or
cmpsb
inc
gs
push
mov
xorb
xchg
pop
das
out
adcl
fisttpl
adc
mov
lea
je
fcomps
xchg
mov
fsubrs
jo
hlt
sahf
mov
adc
cmp
cmp
lret
nop
cmpsb
adc
push
and
fists
dec
stc
loop
add
roll
xchg
aas
cmp
inc
push
lahf
loope
cltd
adc
hlt
ja
jno
xchg
addr16
insl
cmp
mov
outsb
ja
ret
jnp
or
ljmp
sbb
sub
xor
xchg
xor
shrl
xchg
ss
fidivrl
repnz
xor
push
into
jbe
fwait
mov
sbb
mov
jne
fisubl
and
cli
mov
adc
cld
out
or
mov
pop
mov
cli
aaa
mov
ret
xchg
fcoml
push
jne
pop
sub
xor
gs
and
xchg
pop
mov
and
mov
pop
sub
jnp
scas
outsb
push
jg
xor
push
in
inc
fimull
xchg
push
inc
jl
sub
je
sahf
and
sti
rolb
enter
in
adc
mov
mov
xchg
xlat
pusha
rorl
fwait
aas
sbb
rcr
inc
leave
jo
add
pop
inc
mov
std
test
sbb
mov
xchg
test
sahf
test
jnp
les
mov
movsb
mov
push
subb
xor
mov
sub
or
cld
mov
or
adc
movsl
dec
clc
je
and
pushf
outsl
div
xchg
xchg
mov
push
mov
or
xor
jecxz
aad
je
xchg
xchg
lcall
and
jb
ficoml
push
ss
or
xchg
cmp
pop
mov
sbb
cwtl
sti
sub
pop
jge
inc
aaa
gs
sub
xor
mov
in
push
ret
sbb
and
sbb
shrb
fs
lret
lret
dec
mov
jnp
inc
adc
movsb
sbb
xor
cmc
pop
js
stos
mov
push
dec
jl
in
sahf
add
cmpsl
mov
fwait
hlt
pop
jb
dec
push
dec
pop
bound
sub
mov
popf
outsb
xchg
cmp
xor
ficoms
mov
add
push
mov
leave
loop
and
push
add
sub
xchg
iret
ljmp
stos
out
mov
cmp
xchg
cmp
movsl
iret
mov
jbe
or
mov
jne
sub
push
lret
adc
push
xchg
in
xchg
popf
scas
cmp
or
lret
sub
icebp
divb
mov
rol
cmp
mov
add
and
int3
cs
and
push
fdivl
ds
and
xchg
push
mov
call
mov
jmp
dec
insl
push
adc
lret
sti
aad
dec
das
fldcw
iret
aad
push
xchg
cltd
icebp
fisttpll
xor
xchg
jmp
or
aad
pop
push
lret
dec
xchg
dec
test
inc
imull
and
fisubrl
jno
dec
mov
sarb
test
lcall
xchg
mov
push
mov
outsl
jg
mov
lds
fiadds
test
lea
xorb
jnp
pop
push
aas
loop
nop
cld
inc
cwtl
xor
dec
arpl
ds
hlt
ret
mov
into
mov
inc
frstor
mov
inc
idivb
adc
test
mov
psubsb
mov
cmpsb
inc
adc
and
dec
jb
dec
push
mov
fcoml
or
in
sub
cwtl
inc
jb
inc
cmpsb
sbb
les
add
rclb
icebp
add
push
ret
push
das
push
xchg
imul
outsl
fcmovnu
jno
ljmp
inc
mov
arpl
pop
pop
test
xchg
and
add
jge
insb
in
dec
cmp
mov
gs
int
lds
add
jmp
pop
js
push
jmp
or
and
push
mov
pop
add
divl
xchg
push
push
mov
mov
lods
mov
mov
add
mov
xchg
lods
gs
out
fsubrs
pop
xchg
xchg
adc
and
mov
ja
and
mov
mov
outsl
arpl
movsb
xchg
mov
repnz
and
aad
lret
repz
and
cmc
mov
inc
rolb
inc
mull
dec
nop
dec
push
in
jo
adc
gs
push
xchg
out
sbb
jno
adc
bound
sub
mov
mov
push
int3
pop
gs
mov
xchg
cmp
lock
or
jae
or
inc
inc
sahf
rcll
sti
add
lahf
sbb
pop
jp
roll
test
mov
rorl
sub
sub
stc
or
sub
or
mov
sub
jecxz
mov
movsb
rorl
dec
fld
xor
sub
push
mov
rclb
call
lds
jp
dec
sub
pop
mull
lret
jae
mov
sahf
shlb
jbe
and
jae
jbe
mov
inc
gs
inc
sub
pop
test
pushf
adc
shr
jo
out
jecxz
or
hlt
mov
push
insb
add
jno
sbb
cmc
addb
into
dec
out
pop
add
std
nop
xchg
pop
test
lcall
inc
in
dec
fs
mov
imul
pop
int3
arpl
stos
add
xchg
mov
mov
pop
pop
lret
mov
mov
inc
cmpsb
jnp
pop
dec
into
xlat
loopne
ret
dec
mov
lods
mov
outsb
dec
xlat
adc
call
out
das
fwait
jp
sub
fbld
rcl
in
ljmp
or
mov
sbb
ja
mov
fwait
das
cmpsl
mov
fucomip
scas
fmul
cwtl
daa
mov
lock
add
jbe
push
and
iret
xchg
cmc
imul
adc
fs
push
pop
js
jae
mov
xor
inc
xchg
mov
mov
lock
out
iret
daa
push
fdivrs
sub
adc
jge
xor
arpl
add
jge
insb
lods
addl
and
jbe
xchg
sbb
fsubs
add
mov
gs
jmp
add
add
dec
out
inc
pop
inc
adc
pop
jle
hlt
adc
jl
jo
lea
shr
clc
movsl
test
pop
cwtl
push
dec
jne
mov
cmp
hlt
push
push
ljmp
cmp
mov
jle
ljmp
testb
out
push
add
pop
js
mov
mov
icebp
cmp
pop
adc
sbb
sbb
mov
inc
pop
add
psllq
add
pop
out
pop
jmp
mov
dec
jne
ljmp
mov
lock
fs
das
xchg
dec
mov
add
aam
add
mov
js
mov
idivb
push
cmp
lods
sub
mov
sti
cmp
nop
adc
fmulp
fiaddl
dec
mov
sarb
shll
adc
mov
mov
test
jl
cmp
lock
dec
cli
or
and
mov
ss
dec
push
test
lds
inc
bound
mov
das
and
ret
pop
xor
inc
lock
cld
test
imul
imul
aaa
lods
leave
dec
sbb
cld
cmpsl
jns
jbe
mov
movd
je
sub
dec
call
lds
sub
sub
jo
jp
or
mov
mov
or
xor
repnz
mov
jae
mov
js
pinsrw
mov
push
push
call
fdivrs
arpl
and
out
cwtl
into
dec
lods
stos
icebp
jbe
sub
jo
cmp
sub
push
flds
stos
das
push
ret
push
add
lahf
lahf
mov
xor
test
cmp
jbe
lods
inc
incb
or
ljmp
in
inc
xor
adc
mov
xor
xchg
pop
jmp
les
les
inc
sbb
sub
es
out
sahf
test
adc
sbb
xor
inc
push
cmp
hlt
movb
push
imul
and
adc
xchg
push
inc
adc
push
mov
sarb
clc
jle
jns
pop
jle
xlat
repnz
cmpl
mov
inc
daa
mov
popf
enter
aas
inc
inc
cmpb
pop
arpl
lcall
dec
sbb
cmpsb
and
or
idiv
mov
inc
sbb
in
icebp
out
ja
mov
jae
push
daa
sbb
cmp
inc
das
inc
mov
stos
dec
jmp
push
push
or
bound
push
in
movsl
cmp
sub
movsl
mov
mov
movsb
dec
bound
xor
push
pushf
in
xchg
mov
xor
daa
jns
pop
cmp
hlt
inc
pop
push
and
lcall
imul
jmp
ss
sub
xchg
ljmp
cmp
in
xchg
lret
mov
jae
arpl
jnp
dec
stc
repz
out
fimuls
inc
pop
jno
repz
mov
xchg
and
sub
cmp
add
cmp
xor
je
scas
aam
ficompl
adc
mov
mov
aam
dec
arpl
repz
mov
lock
xor
push
sbb
loope
adc
fwait
sbb
mov
cld
test
mov
cld
lods
insb
shll
orl
lcall
icebp
fbstp
and
repz
push
add
or
jp
jl
lahf
xor
or
insl
pop
xor
lret
scas
lret
movsb
jge
pop
cmc
pop
loope
push
mov
arpl
cmp
add
lods
add
add
mov
or
mov
mov
or
xlat
dec
adc
mov
mov
xlat
mov
nop
in
in
sbb
push
imul
push
rcll
int3
loope
stos
movsb
push
bound
test
sub
stc
nop
rolb
cmp
psrld
pushf
in
cmpsl
xchg
pop
push
outsl
bound
ljmp
jne
jo
push
xor
orb
add
inc
adc
ret
out
cmpsb
pop
xchg
test
sti
push
fbstp
lahf
jge
loopne
ss
roll
mov
jmp
xchg
sub
rol
xchg
inc
jbe
cltd
cmp
repnz
push
adc
and
xor
pop
dec
enter
inc
add
popa
mov
jecxz
fdiv
mov
dec
pop
in
mov
or
call
lcall
subb
movsb
aaa
lods
loop
sbb
insl
cld
dec
int3
adc
mov
xchg
insb
je
xorb
jp
out
lret
add
jmp
inc
and
aad
adc
popf
inc
outsl
dec
adc
icebp
push
cmpsl
add
cwtl
push
pop
stos
sbb
xor
stos
sub
lret
cmp
jns
or
adc
inc
lret
push
push
sarl
adc
movb
into
test
shll
mov
sbb
repz
pop
clc
mov
xchg
push
inc
cwtl
add
nop
push
test
inc
inc
jge
sub
mov
scas
mov
test
aas
inc
and
popf
add
in
xor
xor
sbb
decb
mov
push
mov
dec
orb
loope
and
xor
xchg
stc
out
add
push
push
leave
mov
outsl
cmc
dec
xchg
outsl
cmpsb
in
push
jge
jp
mov
add
add
mov
clc
loop
mov
inc
adc
inc
push
lret
sub
mov
sbb
movsl
sbb
sub
enter
lret
pop
push
ds
filds
call
xchg
les
inc
jmp
in
xlat
or
repz
ds
cmp
mov
dec
sub
repnz
add
push
das
jnp
jne
cli
out
inc
in
and
insb
sbb
mov
push
xchg
jne
xor
ret
cmp
ret
es
xlat
mov
dec
sbb
jg
movsl
loopne
xchg
jl
xchg
xor
xchg
pop
cmp
sub
jp
lret
in
or
iret
fisubl
mov
out
inc
dec
scas
xchg
jno
xlat
inc
jp
push
pop
mov
cwtl
addl
addr16
sub
inc
pop
mov
movsl
add
inc
stc
jg
aad
movsl
fs
orb
fists
push
lcall
cmp
ret
hlt
movsl
cmp
lds
pop
cltd
mov
dec
cmpsl
sarb
std
ret
and
push
fidivs
inc
scas
mov
lret
inc
add
addb
icebp
loop
xor
pop
jp
insl
leave
enter
loopne
or
adc
inc
cmp
mov
mov
push
add
add
movsl
test
movl
mov
add
mov
or
xchg
frstor
mov
cltd
pop
pop
scas
aam
pop
subb
insl
test
sbb
jns
sub
push
xchg
fsubs
and
pop
jae
xchg
shr
loope
pop
mov
jle
xchg
adc
enter
adc
outsl
sbb
push
cmp
ret
xchg
lcall
test
out
js
or
xchg
loopne
in
sahf
movsl
lcall
pop
cmp
lcall
sbbb
jnp
xor
mov
outsl
lods
xchg
sbb
and
xor
pop
or
std
mov
pop
jle
dec
mov
repz
repnz
lahf
pusha
adc
bound
push
or
adc
sbb
xchg
lods
data16
outsl
sub
xor
lock
push
out
ljmp
in
adc
pop
pop
fs
push
ja
lods
or
push
push
aam
fists
mov
push
pop
inc
inc
add
xchg
fnstenv
inc
dec
scas
jae
shll
leave
std
rolb
adc
sub
je
and
jno
mov
subb
inc
call
jmp
bound
arpl
push
inc
xchg
pop
cltd
mov
testl
pop
in
loopne
pop
mov
lcall
xor
adc
jb
mov
mov
aaa
repnz
adc
and
outsl
movb
pop
and
inc
out
test
mov
cmc
mov
std
fwait
push
test
cmc
jecxz
pop
repz
imul
ja
cmpsb
std
cmp
inc
push
int
sbb
aaa
mov
mov
and
jbe
in
inc
jge
and
rcl
sarl
cmc
or
cmp
and
insb
xor
push
std
pop
push
jecxz
mov
xor
push
or
inc
xor
outsl
mov
out
jl
mov
stc
inc
cmp
xor
bts
add
adcb
enter
shrb
ljmp
pop
cmp
dec
pop
jne
stos
or
dec
insb
mov
mov
out
hlt
inc
std
incl
lods
stc
sbb
gs
frstor
xor
jle
fs
out
cmp
leave
adc
inc
dec
daa
sub
ja
rolb
adc
cld
pop
pop
icebp
icebp
dec
scas
mov
loope
inc
jae
push
bound
add
cmp
push
out
ja
scas
out
loope
out
push
test
ss
or
scas
push
adc
mov
xchg
xor
les
mov
push
jae
pop
subl
xchg
adc
roll
lret
pop
xor
adc
ljmp
adc
push
rcrb
daa
mov
push
xchg
xor
clc
je
aam
je
jl
push
xor
lret
scas
fisubrs
mov
pop
mov
daa
scas
xlat
sub
dec
xchg
mov
xor
dec
test
push
and
lods
push
popf
aas
jg
out
inc
pop
mov
push
mov
adc
lock
movsb
push
xchg
ds
repnz
push
inc
or
ret
push
cmp
pop
and
cmp
cmp
cmp
adc
push
xchg
rcrb
pop
mov
sbb
xlat
pop
nop
mov
sub
ficoms
ficompl
addl
and
sti
adc
pop
popf
into
jae
ljmp
icebp
mov
pop
xor
cli
ror
mov
mov
push
or
jae
jae
loopne
jge
xchg
xchg
lock
je
js
or
cwtl
aas
bound
xchg
sbb
sbb
insb
and
adc
addr16
or
jecxz
shrb
movsl
xchg
out
jle
call
insl
imul
mov
lds
outsl
outsl
sub
xor
lea
inc
cmpl
sbb
jecxz
and
inc
ja
xor
xor
negl
push
sbb
sbb
pop
mov
push
jmp
pop
and
dec
add
lcall
mov
lahf
pop
pop
jp
dec
inc
cmp
mov
fimull
mov
mov
push
test
cmp
xchg
pop
mov
and
std
push
mov
or
cmp
cmpsl
shld
out
mov
mov
mov
push
mov
mov
and
je
test
dec
inc
and
pop
and
ret
cmp
sub
imul
clc
or
jge
pop
orl
xchg
inc
in
mov
and
cmp
mov
inc
imul
dec
push
xchg
cmp
cld
nop
mov
jne
jbe
mov
push
cmp
jno
mov
lock
push
pop
xchg
in
push
xchg
rolb
dec
ss
mov
push
orl
jle
dec
or
jbe
cltd
jbe
out
mov
or
rorl
add
ficomps
outsl
cmp
pop
sub
cmpsw
scas
sub
xchg
test
aaa
cmpsl
fadds
test
xchg
repnz
mov
push
pop
dec
xor
xor
inc
test
imul
mov
xor
rcl
test
enter
fwait
lahf
loopne
jg
adcl
lret
or
hlt
gs
sub
fstps
kandw
xchg
mov
mov
fcmovnb
adc
lods
push
xor
add
lds
or
lods
int
test
push
jmp
xchg
mov
popf
out
lahf
push
cltd
dec
xorb
add
mov
jl
aaa
pusha
push
std
inc
fbstp
or
xor
xchg
mov
mov
jnp
lcall
xchg
rcl
xor
fldcw
xor
clc
fstp
movl
jmp
mov
xchg
cmc
jo
shll
in
das
lret
cbtw
shrl
jb
xchg
xor
add
cli
lret
jp
fbld
push
lcall
mov
fcoms
out
test
aam
xchg
popf
pop
push
adc
adc
pop
xchg
add
iret
push
idivl
lods
fists
push
xor
push
fisubl
test
dec
adc
lods
cmc
test
add
lock
pop
add
pop
push
ret
mov
push
rcr
scas
dec
or
inc
dec
iret
outsl
xchg
negb
push
fcompp
ss
jmp
gs
xorl
in
push
or
push
pop
mov
mov
and
movl
pop
mov
hlt
call
xchg
in
out
xchg
and
pop
shlb
leave
test
popf
sub
test
and
gs
jnp
pop
add
add
xchg
xchg
sbb
test
adc
push
add
xlat
daa
lcall
adc
pop
pop
mov
ljmp
fwait
int3
sbb
dec
or
imul
mov
push
xchg
jo
xlat
xchg
movsb
inc
and
adc
fisttpll
dec
fucomip
nop
lret
mov
cmp
mov
xor
aaa
cmpsb
cmp
xor
out
pop
cmpsl
out
sub
xchg
leave
push
cli
popa
mov
mov
leave
leave
or
aaa
andb
adc
sti
sbb
js
ljmp
mov
in
jl
pop
sub
adc
push
jae
sbbb
jae
pop
hlt
outsl
daa
inc
cmpsl
test
push
jns
insl
inc
pop
mov
xor
test
adc
mov
test
data16
xor
mov
add
fildll
adc
daa
shl
pop
xchg
cmp
clc
jmp
lods
es
mov
sbb
in
sbb
std
push
loope
leave
loopne
jge
push
daa
iret
fs
popf
inc
adc
jp
sub
or
outsl
enter
inc
sbb
or
lods
add
jmp
xor
dec
mov
jl
or
add
jns
mov
jmp
jp
fldl
leave
jmp
fildl
cmp
scas
js
ds
enter
xor
std
adc
add
aaa
test
pop
int3
ljmp
nop
xchg
adc
ja
cmp
mov
or
cmp
inc
leave
adc
add
sbbl
leave
mov
lcall
mov
cmp
dec
iret
mov
cmpsb
xchg
add
test
data16
js
cltd
mov
add
incl
cmp
ret
adc
mov
or
dec
or
push
insb
add
and
adc
xchg
mov
and
rolb
std
nop
mov
outsl
out
scas
push
mov
or
sub
adc
js
push
push
mov
stos
mov
cmpl
into
sbb
bound
cmc
out
into
push
xchg
dec
jnp
ss
fiaddl
sub
push
andl
and
mov
ror
mov
and
pop
aam
push
inc
scas
or
mov
out
jne
clc
gs
sub
cwtl
out
jle
jo
jmp
imul
xor
outsb
cwtl
xor
jo
mov
mov
ret
xor
add
sub
or
mov
cld
add
stos
or
enter
lahf
jb,pt
movsl
jbe
fadds
in
jo
mov
push
inc
fwait
inc
scas
je
inc
out
add
bound
shl
push
test
std
dec
nop
andl
movsl
pushf
lret
mov
add
cmpsl
xchg
mov
pop
push
sbb
loope
enter
incb
movsb
in
cld
pop
sbb
arpl
xchg
cld
jle
addl
lock
shrb
outsb
pop
mov
jp
imul
push
sbbb
jg
rcl
push
and
sahf
testl
clc
mov
mov
and
int3
fstl
std
mov
sbb
dec
pop
mov
test
nop
jg
dec
pusha
rorl
cmc
xchg
and
fcompl
mov
sarb
xchg
popa
pop
dec
mov
inc
fisubrs
push
mov
mov
mov
cmp
aam
es
test
cmp
jbe
in
cli
jo
ja
inc
divl
push
or
std
cwtl
les
ljmp
leave
loope
xor
loopne
fldl
insb
cmc
jecxz
add
pop
xorb
addr16
xor
add
fbld
mov
dec
mov
xchg
mov
leave
call
adc
dec
lods
pop
jne
push
pop
xor
lds
add
pop
mov
xchg
bound
imul
sahf
mov
daa
and
mov
xchg
dec
jle
mov
fldenv
mov
adc
xchg
sub
jmp
call
addl
inc
mov
mov
jne
pop
jecxz
enter
sbb
roll
push
xchg
mov
call
repz
jg
push
cmp
jge
cmpsl
mov
adc
nop
fmuls
insb
jle
push
mov
addr16
sub
mov
xor
add
add
adc
mov
mov
mov
mov
sbb
xor
add
sbbl
imul
or
mov
mov
xor
add
cmp
mov
mov
movl
je
mov
adc
mov
mov
add
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
push
pushl
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
imul
mov
jmp
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
xor
mov
mov
xor
mov
sub
add
mov
mov
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
mov
xor
add
imul
mov
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
jmp
mov
xor
mov
sub
add
movl
mov
mov
movl
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
mov
add
cmp
je
jmp
lods
pop
std
testl
push
mov
loop
jae
push
sahf
jae
xor
xchg
popf
incl
sti
lods
inc
add
cmpsl
inc
push
test
xor
pushf
cmp
dec
mov
ds
pop
in
adc
ret
dec
add
push
out
stos
sti
sbb
arpl
dec
push
mov
fldl
ja
cmpsb
cmp
lcall
sahf
sbb
out
fincstp
pop
pushf
push
sub
jbe
ret
or
push
mov
or
ret
loopne
out
add
test
test
jne
lods
lret
or
xor
mov
test
xchg
popf
sub
inc
push
jbe
mov
loopne
sahf
mov
add
fadd
pop
imul
pop
push
cmp
or
loope
aad
fbstp
imul
sbb
mov
xlat
aas
jns
push
int3
and
pop
pop
cs
add
fs
sub
cli
loopne
loopne
jo
loope
push
mov
sbb
stc
push
mov
inc
xlat
inc
jno
mov
int
jg
sbb
je
push
jns
stos
and
es
mov
fcmovb
xlat
push
or
lea
xchg
or
loope
fbstp
push
mov
mov
into
adc
imul
mov
test
aas
xor
ss
or
sti
dec
push
pop
mov
rcll
mov
data16
mov
ja
xor
dec
neg
or
sbb
subb
scas
out
fnsave
pop
mov
ljmp
jo
jg
jge
idiv
jb
loopne
fildl
popa
push
mov
sbb
mov
lret
pop
mov
cs
fs
pop
cmp
xchg
bound
stos
add
out
das
dec
dec
mul
mov
rol
mov
inc
pop
out
hlt
xor
loope
sarb
mov
lock
sub
push
xchg
sarb
insl
out
jmp
jno
xchg
cltd
repnz
xchg
ret
cmp
xchg
jl
ficoml
cmp
int
inc
xlat
decb
mov
jae
cmp
sbb
mov
lcall
pop
int
sahf
mov
and
add
add
je
movsb
sarb
insl
adc
adc
inc
or
xor
push
ss
es
pop
outsb
shlb
or
cwtl
jg
sti
jno
mov
dec
insl
lock
mov
filds
or
cli
fs
and
add
imul
insb
xchg
ret
sbb
ret
adc
mov
sub
xorl
xchg
les
lea
add
jecxz
sbb
xlat
sub
fidivs
cwtl
xchg
mov
repz
adc
psubusw
mov
inc
addr16
ljmp
sar
and
jmp
lods
mov
dec
push
pop
xchg
int3
mulb
mov
cltd
mov
mul
dec
imul
adc
inc
pushf
in
inc
mov
jns
sub
je
mov
fwait
mov
test
mov
cmp
sub
push
push
in
pusha
pop
xlat
lea
or
push
cwtl
sbbb
mov
adc
jmp
hlt
repz
push
dec
inc
inc
push
jae
pop
adc
or
dec
sbb
test
das
ljmp
pop
mov
and
mov
movsb
push
mov
iret
push
pop
sub
stos
cli
jns
jl
shlb
hlt
push
dec
inc
outsl
dec
xchg
aad
clc
jae
xor
push
daa
subb
mov
adc
call
xchg
or
inc
and
inc
pop
jmp
pop
xchg
jno
pusha
cmp
iret
mov
shll
das
and
pop
xor
sti
aad
sub
adc
dec
mov
cmpsb
jb
fwait
insb
cld
cwtl
cltd
cmp
mov
push
and
inc
mov
xor
sbb
or
movsb
ja
flds
sub
das
scas
jmp
aaa
ret
imul
inc
xchg
jp
cmc
lds
jne
ficoml
push
sub
mov
cltd
imul
or
adcb
xor
into
int
sahf
jb
pop
push
test
outsb
pop
pop
mov
out
lock
cmp
insb
jl
loop
mov
pop
and
out
in
int
adc
xchg
cmc
pop
inc
xchg
js
out
jp
loope
in
mov
icebp
in
popf
adc
int3
cmp
push
jae
lret
in
lahf
inc
dec
sub
lds
popf
rcrl
mov
pop
test
stc
sti
test
xor
sub
mov
popa
jmp
or
cmp
out
jno
sbb
lcall
mov
sbb
cmp
push
ja
mov
fisttpll
ja
imul
repnz
add
repnz
push
push
xchg
gs
mov
dec
int3
repz
lock
dec
test
lcall
shll
push
jp
stos
push
stc
adc
loop
mov
add
jbe
add
xchg
sub
and
loop
pusha
in
imul
and
inc
mov
outsb
pusha
jle
add
roll
mov
or
mov
neg
cmp
int3
mov
sub
sbb
test
flds
jmp
lds
mov
mov
in
das
fbstp
lret
rcll
sarl
out
lods
cmpsb
sub
push
inc
mov
push
add
xlat
out
or
add
mov
push
das
mov
fucomip
imul
popa
aaa
ret
cltd
out
or
out
shll
cltd
cmp
scas
stc
pop
ljmp
adc
fldenv
int
es
mov
gs
or
mov
dec
ror
cmp
ljmp
lret
mov
icebp
pop
inc
cmp
xor
loope
js
sbb
dec
cwtl
push
xlat
mov
xchg
arpl
mov
pop
or
movb
negb
mov
xchg
jle
fcmovnb
push
movsl
aam
dec
fsubs
je
and
push
cmpsb
adc
xor
aam
call
mov
clc
xchg
mov
jmp
adc
hlt
add
pop
shlb
mov
or
mov
and
adc
das
sti
xorb
fcomi
outsl
jecxz
inc
bound
pop
dec
xchg
push
imul
std
loope
stos
pop
jo
les
sub
cmp
faddl
jo
inc
lret
cmc
sbb
sbb
cmp
mov
inc
imul
lea
mov
ret
fstpl
int
insl
pop
xor
mov
mov
incb
jp
jb
cmpsl
or
mov
xor
imul
xchg
mov
icebp
pop
push
scas
test
xchg
sbb
cmpsl
iret
scas
int3
test
add
fisttpll
sbb
loop
out
xchg
pop
jnp
js
call
out
mov
or
cmp
adcb
mov
jmp
and
dec
mov
xchg
push
sbb
stos
addr16
pop
inc
dec
ljmp
or
mov
aam
ret
lock
or
aad
push
push
lods
fisubrl
push
inc
xchg
push
bnd
sti
pop
adc
mov
lea
clc
into
fs
push
imul
lret
inc
movsl
push
add
dec
lds
adc
aaa
dec
leave
or
cld
push
ds
imul
std
fimull
sbb
sbb
adc
jl
xchg
add
in
xchg
cmp
repnz
mov
insl
sbb
mov
movsb
out
adc
jmp
sub
flds
xchg
mov
loopne
hlt
pop
test
sbb
aas
xchg
fildll
dec
aaa
jg
dec
lods
inc
and
ja
ss
push
xchg
imul
inc
and
jg
xor
adc
mulps
dec
inc
and
pop
jl
jmp
dec
divl
dec
outsb
push
je
outsb
repnz
in
sbb
xchg
push
mov
mov
movsb
xor
add
xor
mov
test
popf
xlat
mov
push
orps
sbb
jl
lds
popf
nop
mov
and
in
cmpsl
lods
imul
mov
scas
repz
movsb
adcl
cmp
mov
jnp
outsl
cmpsl
mov
mov
push
scas
rcll
lock
mov
data16
or
mov
mov
push
pop
inc
and
call
and
and
vmread
sbb
cmpl
mov
mov
sbb
mov
jbe
setae
cld
cwtl
or
xchg
dec
cltd
xorb
inc
in
loop
mov
lock
push
adc
xor
push
repnz
or
dec
lods
cmpsb
dec
inc
lret
outsb
hlt
mov
pop
inc
cli
pushl
push
repz
ret
cld
cli
popf
push
xchg
jecxz
jbe
fs
push
dec
cmp
stos
imul
dec
lea
and
xor
cmp
dec
push
sub
xor
push
jecxz
cltd
repz
clc
sub
adc
xchg
xchg
inc
out
js
pop
inc
or
sub
data16
sub
gs
movsb
add
xchg
mov
jnp
call
or
int3
cld
movl
ret
imul
fildl
dec
mov
xor
std
adc
aaa
enter
xor
adc
inc
xchg
orb
gs
lret
xchg
aas
push
dec
jecxz
dec
es
dec
cmp
jb
sbb
dec
int3
xchg
rorl
sbb
scas
cmp
mov
stos
frstor
jae
add
or
int
fwait
out
test
psrlw
mov
cmp
js
enter
pop
sub
mov
add
inc
mov
lahf
sbb
xlat
enter
hlt
jecxz
nop
js
add
or
lcall
inc
sub
inc
sarb
icebp
jecxz
shlb
and
shl
test
mov
rolb
fs
xor
push
mov
loopne
les
ffree
adcb
sbb
cmp
jp
outsl
adc
and
mov
sbb
lock
ja
inc
jo
add
push
mov
sub
cmp
out
lret
loop
shrl
adc
cmp
sbb
sbb
mov
push
out
mov
cs
cmp
das
ffree
ljmp
arpl
sub
push
fs
mov
fstps
aad
dec
adc
or
fcmovbe
mov
imull
xor
add
push
dec
push
scas
dec
push
arpl
sahf
insl
mov
fdivr
mov
jmp
push
xchg
dec
popf
pop
ljmp
stos
and
sbb
popf
jne
sti
xchg
adc
mov
push
or
scas
sbbb
sbb
loopne
adc
clc
mov
pop
int
in
inc
pop
pop
mov
scas
pop
fwait
in
ror
sub
jmp
enter
push
aam
inc
inc
popa
cmp
sbb
repz
pop
pop
cmp
xor
jne
icebp
ljmp
icebp
or
jmp
and
or
push
mov
js
xchg
pop
arpl
aad
inc
in
dec
rcrl
xor
data16
loop
and
pop
ficomps
dec
push
addr16
inc
jne
adc
sbb
movsb
push
or
test
loopne
add
ficoml
mov
inc
sub
push
outsl
lods
lds
jb
dec
xchg
ret
mov
pop
testl
pusha
push
cmpsl
sbb
xchg
and
loop
je
pop
test
shr
add
mov
push
mov
push
pop
add
or
xchg
cmp
fsts
jno
fadd
add
arpl
fsts
stc
jae
pushf
mov
push
scas
xor
inc
lods
cs
mov
pop
ror
inc
push
mov
lea
lcall
fdivr
pusha
push
test
ss
add
fisttps
int3
dec
stos
sub
and
out
push
inc
mov
add
mov
push
sahf
or
cmp
ficoml
aaa
out
js
fwait
loop
jae
xor
mov
mov
in
dec
cmp
add
mov
fidivrl
mov
xchg
int3
ror
dec
xchg
push
push
shlb
and
xchg
xor
ds
jl
mov
fimull
sti
aam
xchg
pop
or
loope
fidivrs
push
fnstcw
insb
adc
insb
jle
dec
push
sbb
test
xchg
imul
xor
cltd
rcrb
jg
cmpsb
test
push
push
adc
aam
mov
mov
incb
mov
scas
sbb
in
pop
xchg
decb
mov
inc
xchg
lock
xchg
lahf
pop
xchg
lods
pop
lret
rclb
jno
push
adc
popf
adc
inc
out
mov
push
cs
movsl
or
aad
xchg
or
pop
jnp
inc
pop
cmpsb
xchg
xchg
sbb
fisubrl
daa
movsb
and
sbb
mov
cmp
dec
mov
shl
cltd
cmp
test
sahf
pop
mov
aad
es
faddl
nop
jb
fistpll
and
hlt
dec
test
sub
pop
pop
mov
lret
outsb
fisubrs
inc
pop
lock
scas
cs
xchg
iret
fcoms
not
xchg
aam
and
shlb
xchg
fldenv
leave
idivl
test
add
out
mov
mov
pop
jae
jb
mov
add
xchg
mov
xchg
xlat
pop
mov
shll
pop
fisubl
adc
adc
ds
stos
jo
dec
sub
jo
sbb
or
or
cmp
push
ret
sbb
test
inc
mov
gs
mov
and
aas
jge
cld
sar
pop
push
xor
fwait
ret
or
je
sbb
jle
out
inc
cli
xor
nop
cwtl
mov
xor
pop
movups
xchg
int3
sbb
sbb
clc
rcr
mov
inc
repz
adc
or
inc
shl
jo
out
mov
mov
dec
sti
cmc
dec
push
sbb
xor
xor
rorl
nop
repz
testl
mov
sbb
repnz
iret
test
xchg
roll
out
xor
mov
fmull
mov
mov
and
jmp
test
dec
sbb
stos
pop
testb
mov
mov
icebp
push
mov
pusha
add
jle
push
xchg
fs
jmp
sti
mov
test
inc
sbb
or
push
int3
mov
in
ss
inc
sahf
cwtl
mov
or
loopne
dec
and
lock
arpl
mov
cld
push
fiaddl
ss
dec
adc
xchg
jno
ffreep
shrd
in
mov
pop
icebp
mov
fsts
cmpsl
imul
sub
dec
add
negl
rcr
cld
dec
jg
aad
jp
lret
test
pop
insl
dec
mov
sbb
mov
pop
shld
cmp
test
jl
or
cmp
dec
insl
daa
xchg
shrb
and
jl
ret
jbe
sbb
idivl
ftst
xchg
test
subb
repz
cmc
clc
out
icebp
jl
xor
es
lret
lods
into
ds
enter
cmp
push
or
bound
or
hlt
mov
aaa
or
jecxz
adc
into
andb
fucomi
dec
cld
hlt
ret
test
and
adc
stos
sub
dec
push
enter
jbe
xchg
pop
iret
les
mov
mov
test
repnz
lcall
xor
mov
imul
push
adc
stos
sbb
mov
mov
mov
xchg
xchg
out
out
loop,pt
push
adc
push
jne
data16
popf
test
or
dec
dec
cmpl
int3
add
in
cmp
sarl
call
xor
or
test
enter
cmp
mov
and
xor
arpl
in
xrelease
pop
sub
out
mov
jecxz
pop
pop
pop
lret
pop
mov
outsb
pop
gs
jecxz
jbe
mov
dec
dec
test
div
or
xchg
outsb
cmc
rcll
sub
sarb
inc
jge
dec
add
insl
jge
jp
and
push
xchg
pop
add
cld
push
lock
mov
mov
fiadds
jle
pop
or
push
cmc
out
cmp
and
addr16
pop
stos
enter
jle
dec
andb
jb
outsl
dec
scas
jg
popa
mov
jl
inc
lods
sti
faddp
add
fidivl
mov
es
mov
and
adc
mov
push
loopne
test
cmp
inc
in
inc
fcomip
lahf
add
ja
into
xchg
sarb
mov
cmp
mov
inc
jns
mov
pop
sub
pop
sti
mov
popa
cwtl
addr16
jae
add
mov
xor
nop
mov
sub
arpl
jo
and
cmp
inc
and
sbb
int
cmc
mov
adc
lods
and
and
sub
leave
arpl
inc
icebp
adc
xchg
lcall
mov
cs
adc
scas
jl
mov
mov
mov
jns
push
fldln2
cmp
inc
mov
pushf
xor
int
mov
mov
xor
dec
xlat
pop
mov
ja
add
not
jp
cmc
pop
pop
fstps
jne
scas
cmp
sub
ret
dec
push
add
push
filds
insb
add
aad
cli
popf
mov
cli
jae
cmpsb
sub
jg
and
adc
rorl
ss
icebp
push
or
inc
lods
fstl
lods
pushf
dec
test
jns
ds
pop
dec
pop
loope
dec
pop
stc
mov
sbb
xlat
scas
clc
jg
ret
xchg
push
mov
cmpsb
xlat
pusha
cwtl
add
rdpmc
orl
fdivrp
js
lods
mov
dec
jmp
orb
cwtl
or
push
xchg
fldenv
add
mov
pop
xor
pop
push
pop
lcall
stos
jne
mov
cmp
inc
lock
mov
mov
mov
icebp
lahf
aad
iret
adc
jae
jp
sbb
mov
mov
jno
mov
xchg
fs
daa
pop
add
insb
cmc
rclb
out
mov
xor
cli
ds
push
xchg
cmp
pop
mov
mov
js
mov
jae
insb
test
and
inc
fs
pop
cld
movsb
sub
mov
add
pop
jno
or
xchg
sti
add
xchg
dec
cmp
ret
mov
jl
stos
push
das
outsb
add
adc
in
imul
mov
mov
je
dec
js
inc
loopne
shlb
jb
popf
dec
ljmp
int3
add
mov
shlb
arpl
arpl
lods
mov
push
jb
mov
pop
mov
mov
bnd
loope
out
adcb
inc
sbb
in
pop
aam
pop
ja
out
and
fcmovne
fnstenv
fwait
add
sub
mov
ss
js
mov
xor
jecxz
pusha
push
imul
adc
and
aam
mov
dec
jns
push
les
shld
sub
push
addl
ljmp
adc
ljmp
rcl
or
je
push
dec
or
lret
outsl
cmp
xchg
mov
fsubp
mov
rcrl
inc
push
je
fwait
idiv
mov
int
jmp
mov
out
mov
out
sbb
pushfw
les
sbb
push
mov
cmp
xor
out
cltd
ljmp
adc
adc
or
inc
xor
cmp
mov
decb
mov
cmp
mov
pushf
xor
xor
subb
sub
imul
adc
inc
push
lods
push
les
lret
sub
push
sbb
in
rorl
sub
insl
or
pop
inc
imul
roll
das
fxch
cmp
push
dec
and
in
lods
cwtl
push
lret
adc
das
mov
scas
dec
fistpll
call
shl
jnp
int
sub
ret
push
xchg
and
js
in
push
lahf
pavgb
mov
or
and
lods
loop
scas
fsin
aam
sub
movsb
es
out
dec
ret
sbb
sbb
sub
aam
cmp
stc
xchg
pushf
mov
loopne
xchg
in
je
xchg
mov
js
add
inc
mov
sahf
xchg
movsl
lods
ss
gs
es
fwait
mov
loop
add
pop
xchg
shlb
sub
fs
iret
sub
or
xor
pop
mov
popa
jae
inc
xchg
pop
adc
jns
lods
pop
and
bound
mov
aad
test
lock
insl
xlat
cmc
push
sub
fnstenv
mov
das
mov
add
roll
scas
sti
xor
ljmp
or
inc
jo
popf
sub
lcall
sahf
add
fdivl
sub
jbe
outsl
test
and
add
push
cmpsl
mov
stc
pop
inc
cmp
push
popa
test
enter
mov
sub
dec
in
or
adc
xor
cmp
sbb
inc
jae
pop
fidivs
xlat
adc
push
fdivl
add
fcmovne
sub
mov
out
repnz
imul
repz
mov
xlat
xchg
add
vpunpckhwd
mov
rcrb
orl
push
repnz
or
xor
jnp
or
dec
mov
xchg
adc
test
sub
xor
xchg
lret
mov
int
mov
loopne
xchg
rcrb
test
pop
push
lcall
lret
jno
cld
outsl
imulb
data16
shl
orl
xor
pop
jge
mov
dec
mov
add
and
xchg
movsl
add
stc
adc
sub
jns
mov
scas
test
push
cmp
ds
sub
push
out
aad
push
mov
outsb
pop
fisubrl
aaa
inc
jns
int3
movsb
jnp
hlt
jbe
cmp
push
and
push
mov
mov
jle
xchg
sub
out
shll
mov
pop
xchg
fisttpl
pop
insl
shrl
fimull
pop
jmp
lcall
push
cli
xor
test
adc
xor
mov
lock
push
xchg
jae
mov
cwtl
push
mov
in
roll
mov
aaa
lret
jg
cmpl
cmp
adc
sbb
mov
jno
jecxz
lock
jbe,pt
mov
cmp
leave
pop
and
out
dec
in
or
pop
sub
lods
adc
loopne
inc
pop
and
sub
ret
ud2
sub
xchg
cwtl
arpl
dec
xor
mov
ficomps
push
cmp
pop
add
ret
sub
dec
mov
stos
lods
repnz
pop
or
mov
arpl
mov
mov
push
sbb
push
dec
cld
pop
inc
cmp
fwait
push
sub
ret
adc
in
test
mov
mov
das
jbe
ret
scas
fwait
jns
ja
and
clc
sub
jb
or
pop
xchg
test
lea
sbb
in
popf
sbb
loopne
xor
inc
push
cmpsl
sub
mov
inc
loope,pt
inc
mov
adc
bound
aam
test
dec
inc
incl
mov
and
mov
out
outsb
scas
call
mov
imull
sub
cld
inc
push
and
test
je
or
and
push
xor
mov
insl
or
or
lret
popa
mov
pop
jnp
pusha
cwtl
jbe
xchg
stos
mov
adcl
xchg
orb
sub
push
push
inc
mov
sahf
je
sbb
aas
addr16
mov
adc
into
mov
jg
xor
mov
or
mov
push
sub
ljmp
add
add
out
push
stos
cmc
sarb
aad
inc
test
in
jmp
mov
bound
jno
ljmp
pop
sahf
lods
fistps
add
mov
repz
mov
in
cli
mov
xchg
sub
push
fidivrs
mov
and
fistpll
pop
push
xor
jns
sbb
push
negb
jle
rcrb
dec
pushf
push
push
push
int
mov
js
mov
es
xchg
sahf
fadd
cld
enter
dec
xor
jp
jno
jnp
cmpsb
cli
aam
test
jnp
call
push
sub
or
testl
dec
fwait
add
lahf
xor
and
mov
cmpsb
pusha
fldt
inc
mov
ja
outsb
pushf
sub
scas
mov
int
push
pop
cmc
dec
cmp
je
test
iret
cmp
jne
cltd
sub
inc
sbb
dec
and
ljmp
adc
shl
adc
cmp
jle
push
mov
aam
or
test
cmp
in
out
cld
xchg
xor
fildl
test
ljmp
mov
gs
scas
cmp
fistl
dec
dec
inc
in
rcll
xchg
jne
jne
jo
cmp
mov
mov
adc
jb
ljmp
add
sub
in
call
add
clc
imul
mov
add
pop
push
loop
add
imul
and
sbb
es
stos
sub
xchg
cmc
jns
jle
jg
daa
push
xchg
xor
adc
shl
cmpsb
scas
lods
subl
xchg
mov
inc
lret
xor
lret
popa
xlat
movsl
out
aaa
xor
aas
mov
icebp
sbb
xchg
or
sub
test
out
or
lods
nop
imull
cmp
sbb
xor
pushf
lcall
incb
jno
jno
imul
fcomps
lret
or
add
sbb
jb
ja
mov
ja
mov
mov
test
lea
fisttpl
sti
and
addr16
cmpsb
mov
pusha
fidivrl
mov
cmp
dec
scas
cwtl
sub
mov
mov
inc
cmc
bound
pop
or
sub
push
xchg
add
mov
inc
cwtl
pop
ja
popf
gs
stos
push
int
pushf
in
xchg
icebp
fiadds
xor
or
mov
inc
subb
dec
lcall
mov
test
pushf
movsb
loopne
mov
pusha
lea
mov
dec
jl
or
cwtl
mov
pop
push
xchg
icebp
ds
loopne
outsb
cltd
pusha
subl
ret
xor
jo
cltd
jb
imul
dec
bound
xchg
dec
jmp
pop
push
daa
imul
rcr
lods
into
mov
das
out
add
pop
sub
or
dec
nop
adc
lret
cmp
sarb
sahf
pop
mov
stos
mov
je
mov
sbb
test
sbb
pop
jb
mov
int
fnsave
xchg
sbb
xchg
iret
ret
into
inc
aaa
push
into
imul
std
aaa
sub
push
add
inc
pop
data16
out
add
mov
sbb
pop
movl
fidivrl
cmpsb
push
dec
jp
repnz
fiadds
ljmp
pushf
push
insl
push
rorb
rorb
mov
pop
push
jo
cmp
mov
adcb
in
and
enter
out
inc
movl
stos
dec
pusha
in
and
insl
test
lahf
sub
cmpl
in
cmp
in
mov
mov
and
test
or
fwait
into
lret
xchg
sub
js
ja
testl
rolb
ret
mov
jno
decl
sbb
scas
mov
leave
xor
mov
subl
pop
sbb
repz
shl
xchg
inc
jmp
xchg
add
in
pop
loop
lods
hlt
pop
cltd
insl
aam
ds
sbb
push
mov
in
ja
mov
test
inc
adc
pop
mov
test
add
inc
adc
and
push
repnz
pop
arpl
fwait
jmp
sahf
adc
out
or
xor
push
ljmp
lds
ljmp
xor
dec
xchg
pop
xor
ja
jge
sub
stos
mov
mov
or
pop
push
aam
push
push
stos
cmc
sahf
and
sbbl
hlt
inc
sbb
jno
das
xlat
adc
push
dec
and
pushf
in
lods
aam
sub
push
out
aad
sub
mov
mov
enter
push
cmp
cmp
adc
test
mov
hlt
push
or
daa
lret
mov
sub
add
mov
mov
sub
into
adc
shlb
jge
neg
cmpsb
xchg
pop
cli
cmpl
add
mov
stos
movsb
push
movsl
sbb
test
sbb
adc
mov
addr16
inc
jbe
jae
stos
aas
mov
sbb
shrl
mov
ret
pop
dec
js
cld
mov
xor
inc
jl
imul
sbb
pop
jg
jbe
jns
cmc
lods
aaa
mov
enter
dec
jnp
fsub
push
jne
icebp
hlt
add
cld
stc
mov
cmp
or
lahf
jg
mov
insl
out
das
xorl
sub
dec
sub
mov
cmp
mov
push
mov
sub
mov
ret
outsl
aad
mov
sbb
xchg
lret
movsb
mov
mov
dec
sbb
stos
lock
shrl
inc
inc
in
add
inc
ja
sub
pop
mov
and
aad
add
adc
xchg
dec
out
mov
inc
and
mov
lods
ret
pop
bnd
in
dec
jnp
lcall
xchg
sub
fisttps
ret
cmp
daa
clc
cmpsl
cmp
stos
or
imul
std
mov
ss
and
jg
in
in
push
xor
pop
jbe
enter
je
push
sbbl
clc
push
push
dec
mov
mov
mov
dec
ljmp
lahf
lret
ret
mov
pop
pop
cmp
pop
add
add
add
sub
clc
stos
dec
sub
xchg
pushf
es
mov
sti
xchg
js
fldl
daa
sbb
cmp
mov
adc
xor
xor
lcall
push
adc
mov
enter
xchg
pop
xchg
sub
cmp
dec
jo
repnz
dec
imul
fidivrs
pusha
inc
rcrl
fistl
shll
imul
cmp
les
xacquire
std
repz
mov
mov
dec
test
frstor
ret
loope
jp
push
das
dec
gs
ss
mov
lret
add
popf
loop
inc
pop
or
out
or
jge
mov
jg
and
xchg
fcompl
test
and
dec
call
in
dec
rorb
mov
lret
and
add
dec
rcll
inc
pop
push
leave
jbe
xchg
lea
jae
sahf
jae
outsb
call
fsubl
sahf
jbe
sbb
inc
out
sti
jg
mov
out
loopne
mov
gs
or
jno
push
lods
roll
cld
loope
pop
adc
jno
lcall
pop
mov
mov
dec
inc
mov
in
lods
dec
lret
push
clc
add
je
mov
repnz
or
sub
scas
dec
or
pop
pusha
cmpsb
sbb
jno
mov
pop
push
inc
add
popa
test
mov
or
aaa
jp
lss
add
pop
sbb
cwtl
std
ja
mov
push
xor
lods
int3
outsb
push
and
dec
cmp
in
sub
or
call
loopne
ficomps
or
xor
add
mov
jp,pt
outsl
or
dec
mov
xchg
mov
test
xchg
inc
in
xor
loope
jo
or
pop
cmpsb
outsb
fwait
out
jp
lret
adc
mov
pop
daa
sub
iret
pop
jae
lret
leave
hlt
hlt
push
pop
jg
aad
movsl
leave
jp
pop
decl
sbb
push
stos
out
add
jecxz
mov
adc
aam
xor
insb
cmp
sub
mov
adc
cmp
push
mov
sbb
mov
pop
inc
push
mov
stc
sub
aam
rolb
ja
lret
pop
test
mov
jae
sahf
js
inc
subb
mov
sbb
test
mov
mov
cwtl
bound
stos
add
imul
sub
call
int
pop
pop
or
shll
mov
ja
xor
or
dec
xorl
push
dec
sub
sbb
jne
iret
adc
subl
jle
pushf
ljmp
xor
and
xor
push
ss
push
xchg
lret
loopne
add
push
inc
es
xor
pop
movsl
cmp
sub
push
sahf
dec
adc
push
pop
fists
xchg
aaa
js
mov
sbb
shlb
cwtl
aam
loopne
fiadds
andl
dec
jns
nop
push
push
arpl
and
sbb
jo
mov
fsubrl
test
dec
adc
mov
sub
scas
dec
lret
mov
push
loopne
push
inc
in
sarb
pop
cmpsb
pop
nop
mov
out
sub
add
popa
outsb
aad
or
or
xchg
cmpsb
jae
into
adc
int3
and
jne
stos
loopne
add
popa
rorb
pop
and
lock
adc
sbb
sbb
cmpl
mulb
adc
std
dec
mov
ds
push
out
add
subb
shr
pop
pusha
jns
fbstp
xor
sahf
test
ret
cmp
js
or
popa
cmp
fwait
add
push
mov
pop
adc
mov
stos
dec
mov
cltd
movb
popf
lcall
cmp
adc
js
test
test
jb
aam
or
lods
ja
pop
fidivrs
cwtl
decl
shrl
rcll
push
inc
call
xchg
imul
stos
test
aam
in
jae
js
jns
dec
scas
or
mov
xchg
xor
lahf
pop
sbb
adc
loope
xchg
push
lds
push
pop
sub
sti
pop
cwtl
test
mov
stos
addr16
mov
adc
sub
sub
lds
push
icebp
sub
sub
jg
dec
sub
roll
cli
adc
lds
cli
gs
hlt
shll
in
xchg
mov
mov
lods
mov
sub
dec
and
jo
jno
jp
adc
loope
ret
mov
mov
xchg
jmp
dec
gs
aam
in
loope
push
cltd
cld
out
push
add
loopne
or
gs
dec
lds
insb
push
orl
xor
lret
push
mov
add
cmp
gs
stc
jl
cld
movsb
and
jnp
jg
into
stc
mov
add
lods
push
sbb
xor
bnd
shlb
xchg
pop
inc
loope
cwtl
mov
push
jmp
je
jle
rorl
sarb
cmpsb
mov
xor
xchg
rcll
in
sahf
scas
div
aad
sub
outsl
inc
enter
mov
lret
adc
add
insb
jb
mov
jno
xlat
addr16
pop
fnsave
cmp
imul
addr16
in
addr16
sub
cmpl
mov
fsubr
out
inc
cltd
shll
movsb
xchg
add
cs
ret
sub
sub
dec
or
into
stos
and
mov
lock
in
pop
sub
scas
fnsave
or
movsb
push
jo
cmp
popa
cmp
inc
lds
loopne
adc
test
dec
push
out
cmpsb
xor
nop
mov
cld
xlat
inc
fiadds
xor
or
daa
jmp
aam
jmp
dec
mov
les
sub
scas
stc
pushf
jg
and
leave
fadds
loope
xor
xchg
and
sbb
outsl
out
xlat
cld
dec
or
xor
imul
add
or
movsb
xlat
jmp
mov
jb
inc
cwtl
mov
pop
repnz
pop
mov
test
insl
push
loop
sbb
xchg
mov
les
jb
mov
xor
mov
loop
stos
dec
push
jo
inc
nop
ret
sbb
sub
push
lock
out
push
pop
fwait
jmp
cmp
cmpsb
pop
xchg
pop
and
jne
lret
mov
js
mov
push
or
adc
pop
ljmp
stos
mov
and
fcmovb
cmp
cmpsl
test
sub
lret
mov
push
xchg
insl
sub
lock
faddl
push
mov
into
decl
scas
std
fistl
mov
icebp
rclb
test
jne
sub
cmp
push
pop
cli
and
sbb
mov
incl
aas
pop
add
cmpsl
stos
jae
push
xor
jmp
mov
jae
aas
jle
xchg
lret
out
ret
xor
insl
shl
push
fnsave
sbb
push
mov
sub
xchg
adc
jp
mov
mov
inc
fsubrl
adc
imul
mov
cmp
sub
orl
and
in
mov
jecxz
cmp
cli
ss
mov
lcall
jmp
cmp
push
jb
push
inc
addl
outsl
or
jnp
push
mov
push
rclb
lret
xor
xor
arpl
jno
bound
cli
push
sbb
push
mov
outsb
adc
mov
mov
cltd
mov
jg
fnstenv
repz
clc
adc
pop
adc
xor
add
mov
mov
test
xor
mov
mov
adcb
popf
movsl
cmpsl
iret
xchg
sahf
test
mov
cmpsb
add
das
lea
hlt
leave
jg
sub
popf
inc
cmp
push
cmp
ret
add
fwait
mov
sbb
ficoms
scas
sbb
lods
cmc
cmc
xor
ret
add
sub
ja
cmc
cmp
push
rolb
cwtl
out
sarb
ja
inc
xchg
dec
and
cmpsb
add
mov
or
lahf
push
lret
mov
test
scas
in
xor
pop
rorl
outsl
sub
mov
mov
add
inc
adc
outsb
adc
sti
inc
sti
push
xchg
sbb
add
sub
imul
xchg
xchg
push
pop
into
cmp
dec
sub
sub
aad
xchg
in
gs
push
popa
insl
inc
addb
inc
aaa
jp
loop
lahf
popf
movsb
inc
idiv
mov
jae
test
lret
mov
stc
int
push
push
and
xor
add
jmp
mov
ss
cli
inc
add
jg
scas
pop
iret
mov
pop
push
ss
mov
ja
adc
xchg
cmp
xor
popf
adc
adc
mov
mov
or
cmp
pop
fcoms
fwait
mov
ret
xchg
cli
cwtl
push
aad
in
test
xchg
outsb
xor
add
pushf
pop
lods
push
das
fs
outsb
push
xlat
imulb
jns
fisubrs
sysret
and
js
out
movsb
pop
movq
adc
out
sub
dec
mov
fabs
lret
jle
push
dec
ds
mov
xor
ret
fs
cmpxchg
fiaddl
adc
pop
sub
add
jle
push
add
arpl
insl
fcompl
test
push
test
xchg
mov
hlt
je
mov
pop
sub
mov
into
lock
je
xor
xchg
mov
inc
jns
mov
inc
push
dec
call
jae
out
shlb
xor
clc
inc
jne
jl
repz
js
int3
fisttpl
mov
and
and
mov
push
pop
mov
xchg
add
jg
push
sub
lret
nop
ja
imul
xlat
pop
nop
mov
jg
and
jnp
mov
sub
add
lret
or
sbb
xchg
xorb
sbb
aas
jmp
inc
std
xor
inc
mov
sub
cmp
push
bound
add
sub
and
dec
stos
add
test
lock
scas
daa
iret
jnp
ja
jno
imul
mov
jle
and
test
ret
mov
mov
cmc
lahf
add
push
jp
add
push
xchg
add
jge
mov
mov
sysexit
dec
rorb
test
add
jne
in
imul
push
popa
push
out
sub
popa
movsb
mov
jne
test
add
xchg
loopne
dec
ret
and
inc
jae
fs
lahf
pop
inc
sarl
fdivr
add
sbb
aas
fldcw
or
mov
stos
aam
int
repnz
jg
jmp
mov
aas
iret
or
sbb
jge
mov
out
int
adc
inc
test
mov
loopne
jbe
sbb
sbb
dec
aaa
cmpsl
sub
aas
das
sbb
pusha
clc
loope
mov
gs
jno
mov
mov
pusha
pop
push
sub
pop
sub
addr16
fwait
test
ljmp
data16
dec
outsl
fimuls
roll
sub
pop
shl
dec
rcll
xchg
outsb
or
fsubl
sub
inc
shlb
adc
sub
adc
pop
js
ds
or
inc
icebp
jae
adc
add
jnp
xor
or
das
mov
mov
and
pop
loopne
arpl
pop
sub
sub
sahf
jb
lods
push
and
in
addl
jb
arpl
mov
negl
xorl
or
mov
imul
xlat
dec
add
and
fcoml
icebp
mov
aad
mov
fidivrl
sub
pusha
push
mov
int3
lahf
xor
out
fcomp
add
out
and
sub
cwtl
jl
cmc
arpl
or
push
cli
adc
sti
test
sub
jnp
movsl
lret
dec
fsubrl
cmpl
jmp
mov
ss
mov
jae
cmp
jbe
xchg
aad
aad
jp
mov
lods
lea
sbb
or
sub
bnd
or
cmp
sub
mov
arpl
hlt
xchg
xlat
dec
cli
sub
jno
outsb
notb
mov
adc
enter
icebp
dec
rcrl
pop
or
ss
push
sub
and
movsl
mov
mov
cmp
cmp
push
mov
test
or
test
pop
inc
movsb
aam
lcall
iret
inc
mov
enter
nop
mov
push
fimull
add
insb
lret
int3
aaa
sub
js
cmpb
jno
xchg
pop
xlat
cld
imul
imul
cmp
call
add
lahf
pop
and
mov
push
add
iret
insl
fistpll
mov
outsl
dec
xor
cmp
xor
movsl
sbb
filds
mov
clc
adc
cmp
mov
mov
lahf
jae
inc
jmp
sbb
lret
sub
cltd
sbbb
mov
push
or
loopne
add
and
xchg
cmp
xchg
jae
push
jbe
push
pop
xchg
notb
inc
or
adc
push
xlat
sub
xor
scas
add
les
sub
or
and
pop
mov
xor
je
in
fcoms
adc
and
clc
sbb
js
pop
test
test
xchg
daa
mov
xchg
inc
std
mov
cs
ret
xor
or
stos
incb
pop
mov
or
mov
aad
call
jmp
jns
mov
jb
std
dec
gs
aas
jae
mov
mov
mov
fmull
das
and
out
adc
lods
ss
mov
jo
push
xchg
mov
xchg
xchg
push
xor
negl
or
mov
test
nop
enter
add
sub
and
lcallw
sti
inc
fdivrl
mov
pop
les
pop
loop
pop
loope
jg
stos
inc
es
loop
or
arpl
andl
mov
dec
daa
inc
xchg
xor
dec
call
xchg
dec
fdivl
iret
cs
fcompl
pop
js
repnz
imul
das
pushf
or
scas
xor
xor
fs
repnz
push
jb
mov
aas
mov
mov
ds
popf
jno
rclb
mov
clc
outsl
int3
ss
push
add
test
xor
call
daa
lds
mov
jne
inc
lds
add
repnz
mov
in
mov
mov
int
xchg
push
pusha
loopne
aad
mov
pop
sbbl
xchg
inc
fwait
popf
adc
cld
xor
mov
leave
lea
in
in
or
mov
xchg
outsl
lods
das
dec
inc
mov
xchg
mov
cwtl
mov
bound
push
es
push
add
cwtl
bound
adc
cmp
gs
fidivrl
jbe
cs
cmp
in
mov
data16
int3
xor
cmp
push
mov
xchg
movsl
es
cwtl
and
setne
xchg
jge
cwtl
scas
dec
inc
push
pop
or
hlt
aad
fldl
or
mov
mov
mov
mov
xor
popf
cli
mov
xlat
add
add
sub
icebp
pop
pop
xor
test
push
test
push
xchg
sbb
loop
call
es
mov
ljmp
cld
sub
mov
dec
dec
inc
lods
xchg
mov
imul
xor
sub
add
sarl
je
and
orb
jo
clc
push
mov
jge
js
push
and
lods
cmp
mov
outsl
into
pop
scas
add
xor
lods
test
push
cmp
inc
mov
pop
dec
push
or
sbb
hlt
ret
dec
jae
test
je
and
sti
iret
mov
push
jb
test
loope
fcmovnb
pop
shr
inc
les
aas
shlb
cmpsl
cmp
xor
fbld
mov
fisttpll
adc
and
push
cmp
cltd
mov
out
add
sub
push
in
std
mov
mov
lcall
pop
add
inc
cmp
pushf
fs
std
sbb
pop
repz
jae
adc
dec
fcmove
push
fdivrl
add
movsl
jl
xor
pop
add
dec
mov
fistpl
sbb
movsb
dec
push
mov
jmp
jns
les
mov
inc
jp
jp
push
out
dec
or
pop
call
icebp
stc
adc
cmp
in
leave
shll
mov
scas
adc
and
and
inc
jmp
cmp
inc
inc
les
in
andb
daa
push
sub
out
or
clc
mov
adc
stos
insb
lret
or
std
je
enter
mov
in
push
xlat
test
js
into
xchg
mov
xor
mull
jmp
sub
inc
bound
inc
inc
dec
aas
sahf
rclb
jl
lcall
adc
adc
bound
insb
popa
cmp
out
or
pop
lret
pusha
icebp
lcall
sbb
cmpsb
and
mov
lahf
mov
das
in
xchg
outsb
jmp
sbb
jnp
pop
ftst
inc
std
icebp
cmp
dec
scas
push
lcall
sub
pushf
scas
aam
xor
out
push
nop
inc
or
pop
loope
lock
cli
xlat
sbb
lea
xor
insb
insl
sub
test
fwait
cmp
mov
les
mov
in
jbe
pop
cmpsl
push
enter
sub
pop
and
pop
or
xor
aad
push
sti
push
mov
adc
dec
push
cmc
sub
ds
sbb
aaa
adc
xor
bound
xor
lcall
out
fld
dec
cwtl
push
insb
pop
jno
push
loop
xchg
pop
imul
pop
icebp
in
jge
xchg
ret
insb
add
ffree
outsl
je
sub
inc
mull
cmp
data16
stc
mov
xchg
cmp
cmp
push
test
or
negl
xorb
mov
sar
ret
vmread
sub
das
stc
mov
ljmp
test
inc
mov
clc
dec
mov
dec
sub
enter
mov
aas
loopne
or
sub
fwait
cmp
icebp
or
pop
or
push
mov
sar
lods
add
add
mov
dec
xlat
mov
mov
and
cmp
fldl
add
mov
jbe
fisttpll
push
cmp
imul
pop
mov
stc
pop
dec
adc
fstpl
in
lret
mov
xchg
xchg
inc
addr16
sbbb
xor
inc
shll
cmp
sbb
and
mov
inc
sub
sub
enter
ret
sbb
aaa
adc
and
imul
pushf
out
cli
mov
scas
mov
jg
sub
jno
cmp
in
js
out
mov
lret
or
ja
xchg
int3
mov
push
jle
roll
rorl
xchg
call
sbb
inc
pop
negb
xlat
and
xlat
inc
mov
sbb
cmpb
dec
xor
or
sbb
jle
xchg
shlb
shrl
mov
mov
jbe
sahf
dec
xchg
push
cltd
test
out
pop
push
push
sub
or
pushf
inc
xchg
xor
pop
push
jle
cmp
mov
lret
sbb
or
jnp
inc
jno
mov
pop
rcll
xor
adc
daa
push
push
hlt
fwait
xor
arpl
push
test
fisubs
mov
out
push
test
test
adc
subb
xchg
mov
and
lea
in
hlt
addr16
add
add
adc
cmp
test
repz
data16
push
ds
lcall
test
jns
mov
rclb
mov
or
sti
sub
xchg
popa
popa
outsl
mov
jecxz
insb
in
cmpsb
pop
fs
hlt
repz
aam
clc
cmp
pop
dec
adc
shll
or
push
stos
jb
xchg
push
fcmovnbe
stc
lret
popf
jno
fstps
mov
mov
into
loop
and
ret
loope
xchg
sub
adc
sbb
inc
sahf
clc
lock
mov
pop
pushf
out
pop
mov
inc
mov
ja
out
inc
stos
mov
inc
jne
add
xlat
dec
dec
nop
lods
es
push
ja
push
cltd
ficompl
shll
lcall
fbld
out
mov
addr16
pop
out
cs
adc
sub
cmp
inc
adc
mov
mov
int3
pop
test
inc
outsl
adc
bound
aad
dec
or
sub
push
pushf
test
dec
sbb
sub
inc
cmp
adc
pop
sub
pop
jle
adc
sbb
fiadds
pop
aad
jno
cwtl
test
pop
xchg
ficoml
pop
push
mov
lods
fists
sahf
ficoml
mov
pop
push
xchg
icebp
cmp
add
ja
mov
lahf
xchg
dec
sbb
mov
in
mov
cmp
mov
add
fcoml
and
mov
and
clc
pop
jo
adc
imul
nop
adc
cmp
lcall
push
leave
iret
ffreep
cmpl
int
mov
mov
pop
test
into
lret
int3
push
stc
pop
mov
add
test
and
xor
sbb
pop
inc
cli
jp
hlt
jb
lea
std
inc
pop
into
xchg
pop
cvtdq2ps
sbb
test
pop
push
insl
push
mov
adc
xlat
into
mov
push
inc
mov
daa
js
insl
fdivs
pop
mov
rcll
dec
mov
push
and
dec
sbb
mov
ss
pop
lds
int
push
jmp
mov
out
push
inc
and
out
xchg
mov
test
lods
xchg
pop
mov
imul
xor
sub
inc
xchg
mov
in
test
adc
scas
pop
pop
inc
jl
cld
loopne
repz
in
sbb
dec
adc
adc
add
incb
xchg
mov
ficomps
add
pop
sbb
les
shlb
pushf
repz
shlb
add
lahf
das
je
ljmp
add
and
clc
mov
je
push
push
sbb
idivl
jno
insb
sbb
pop
sub
out
pop
adc
sbb
push
adc
ljmp
sbb
push
jmp
cld
aaa
xor
loop
jg
sahf
adc
and
or
insl
bound
sub
pop
rcll
xchg
cmpsl
jg
cwtl
xor
dec
aas
mov
xlat
and
aas
adc
test
popa
pop
pop
xor
in
inc
test
test
and
dec
jge
push
das
aam
popa
out
sbb
rcll
in
or
mov
scas
jns
mov
mov
inc
sbb
adc
into
mov
bound
cmp
sbb
xor
test
xlat
pusha
hlt
lock
cmpsl
das
adc
leave
inc
in
add
lahf
test
inc
in
pop
xchg
cmp
sbb
insl
cli
mov
shlb
sub
aam
fmull
adc
mov
jmp
xor
les
lea
lret
add
sub
fnstsw
addr16
lret
push
dec
fists
sahf
or
mov
cwtl
call
jmp
movsl
stos
xchg
outsb
loop
jns
pushf
xor
dec
sub
or
clc
lret
movsl
mov
and
scas
arpl
sbb
js
xchg
push
push
add
jp
sub
add
cli
ja
std
into
dec
repz
dec
cmp
jne
shlb
inc
cs
mov
inc
xchg
mov
dec
aam
testb
outsb
les
ud1
std
push
insl
out
adc
inc
mov
lahf
jg
lods
mov
inc
jg
test
and
divb
push
cli
mov
xor
stc
dec
push
fists
test
mov
lock
adc
cmp
jns
xchg
scas
sub
inc
aas
movsb
in
es
mov
fsts
jnp
dec
jns
repnz
movsl
scas
mov
fidivrl
xor
jne
stos
mov
and
int3
sbb
out
add
addl
xchg
rolb
cmpsb
mov
and
repz
jbe
cmpsl
movsb
icebp
daa
negl
jg
lock
mov
mov
dec
mov
cmpsl
pop
data16
cld
repz
jnp
mov
sbb
out
xor
cmp
jo
bnd
xchg
sub
inc
or
inc
jge
add
or
das
sbb
cltd
int
outsb
jp
je
fdivrs
add
mov
and
outsl
test
mov
jl
lea
out
mov
xlat
jb
push
cmp
or
add
lahf
jle
fistpl
cmpsb
loopne
sbb
lea
push
ss
movsl
std
shrb
push
popf
rclb
inc
xor
push
les
xchg
jae
fwait
scas
dec
dec
lock
repnz
sbb
dec
mov
jns
adc
pop
mov
ret
lret
fs
pop
mov
xchg
sub
gs
je
rol
js
ds
xchg
in
out
inc
cmp
test
and
mov
xchg
mov
jle
add
ret
fnstsw
add
cmp
push
xchg
xor
cmc
out
push
enter
jle
xor
jo
movsl
imul
mov
mov
pop
mov
stos
and
daa
dec
adc
bound
cmp
pop
test
adc
add
repz
add
dec
cmp
outsb
out
cmp
outsl
mov
mov
insb
add
fiadds
or
pop
arpl
dec
stc
cltd
jnp
sub
mov
cmp
in
jae
pop
scas
mov
enter
inc
or
add
ja
arpl
in
push
push
arpl
jae
icebp
icebp
stc
jl
mov
loope
je
dec
add
push
outsl
scas
lret
sbb
pop
push
dec
inc
loopne
push
cmp
orl
or
add
mov
fildll
mov
cmc
adc
xor
sbb
sub
add
fstpl
outsl
inc
test
ljmp
mov
or
add
jge
jg
outsb
sbb
aam
sub
and
push
push
push
fwait
aam
and
lahf
adc
mov
fwait
stos
jns
push
cmp
daa
or
aad
adc
popf
test
outsl
xchg
xor
jb
icebp
test
cmpsl
int3
out
mov
xor
nop
push
sbb
push
sbb
mov
sbb
or
sbb
cmpl
cs
lods
mov
mov
or
xchg
lods
push
inc
or
ljmp
jle
daa
lcall
mov
dec
out
dec
and
pop
add
sarb
jo
cwtl
in
cmp
ret
dec
add
or
pop
push
loopne
dec
adc
fwait
add
add
dec
test
xchg
ljmp
xchg
call
push
dec
dec
pop
xor
dec
pop
dec
rorl
add
cmp
jle
cmp
cmp
loop
pushf
fmul
inc
xchg
xchg
push
pop
xchg
sub
ja
cmp
mov
lods
out
cs
dec
mov
pop
cwtl
jb
bound
jecxz
enter
call
cmp
fistpll
push
lea
add
stos
mov
mov
inc
or
jns
ficompl
mov
mov
sub
ja
in
ja
pop
push
insl
insl
fnstenv
aam
idiv
cmpsl
xchg
loop
lahf
jle
push
sbb
in
ret
mov
aas
xlat
mov
sbb
iret
mov
sub
inc
or
adc
scas
shr
shll
push
mov
inc
mov
dec
fdivrl
jge
or
int3
nop
lahf
pop
inc
dec
aad
mov
mov
or
mov
inc
das
lret
aas
out
inc
lcall
inc
lock
lods
imul
loopne
sbb
xor
inc
sbb
lret
xor
call
bound
mov
push
push
push
decl
sub
sbb
es
popa
sub
rcrb
xlat
out
shlb
add
pop
cmp
cmp
jle
pop
inc
clc
int3
out
lcall
aam
je
ds
lods
out
mov
ret
in
pop
jo
mov
dec
pop
out
xor
dec
out
ljmp
lret
push
loop
js
popa
mov
into
jae
scas
ds
roll
cwtl
dec
pop
pop
xor
rcrb
or
jmp
xchg
dec
mov
mov
push
ret
lds
ja
or
lret
subb
mov
or
test
jo
ds
dec
lret
and
aam
push
dec
xor
jns
shlb
mov
out
add
or
push
rol
mov
dec
dec
out
mov
inc
into
sahf
mov
jno
in
and
or
xor
push
fwait
xchg
loope
pusha
lahf
loop
inc
jno
mov
daa
fsubr
xor
aaa
bound
pop
push
aam
loopne,pn
fistl
daa
vpmulhuw
sbb
data16
jb
pop
jo
mov
push
push
addb
es
cmp
je
cld
fadds
jp
and
mov
dec
push
nop
inc
mov
mov
lods
jns
out
call
rorl
ds
and
xor
sub
arpl
mov
lods
cs
ss
divb
gs
mov
cmc
adc
rclb
cld
lds
inc
adc
mov
lret
mov
jbe
jne
xchg
sbb
cs
psubb
out
sub
adc
outsl
andl
sub
loopne
xor
adc
lret
in
or
testl
aam
push
mov
cmp
out
fwait
jl
scas
inc
dec
xchg
lahf
mov
ds
ljmp
and
and
adc
in
lea
jmp
adc
shrb
sub
test
pop
clc
mov
mov
outsb
addr16
lahf
in
loopne
orl
add
or
push
out
mov
mov
inc
dec
sbb
loope
adc
jp
repz
fcoml
jmp
mov
jne
sub
or
add
pop
lods
xor
jmp
in
cltd
neg
push
addr16
sbb
jecxz
adc
inc
bound
scas
lcall
ffree
pusha
push
cld
jecxz
shlb
pusha
ljmp
scas
loop
mov
push
into
add
and
mov
call
mov
repnz
fiadds
fistl
add
cmp
js
cmp
cmc
popf
sub
loopne
loope
insl
or
xchg
mov
mov
pop
cmp
mov
cmp
pusha
paddb
loop
fsubrs
in
jle
leave
in
jmp
ret
fldenv
or
mov
popl
sti
mov
inc
pop
cmp
insb
jmp
std
ret
popa
in
mov
ficoms
push
stos
and
stos
and
push
sbbl
pop
push
lds
std
and
repz
adc
aaa
fcompl
cld
fwait
push
xchg
adc
mov
push
sub
xchg
pusha
and
dec
or
addr16
or
and
repz
mov
out
daa
cs
jp
sub
pop
xor
loope
out
cltd
add
push
je
lcall
scas
lret
cs
sbb
add
lea
xor
aam
xchg
in
in
rcrl
pop
inc
sbb
adc
xlat
mov
frndint
jns
stos
mov
lret
in
push
or
cmp
jne
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
andl
sub
addl
push
orl
push
push
xorl
xor
xorl
push
push
andl
push
push
push
push
sbbl
push
adcl
call
movl
cmp
movl
je
adcl
xor
movl
jmp
push
call
addl
test
jne
push
xorl
call
test
jne
movl
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
lea
or
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
mov
mov
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
add
movzwl
mov
mov
mov
cmp
movl
jne
mov
sub
mov
mov
xor
add
sub
xor
mov
sbbl
mov
adc
xor
and
mov
andl
add
xorl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
mov
dec
mov
jmp
xor
xor
xor
or
add
mov
mov
mov
sbbl
xor
xorl
add
movl
mov
movl
jmp
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
neg
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
and
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
call
jmp
movl
mov
adc
mov
mov
add
mov
movl
sub
mov
and
mov
mov
addl
xor
add
movl
jmp
mov
or
mov
neg
mov
xor
sbbl
lea
push
xor
mov
mov
sub
mov
mov
xor
adcl
lea
subl
push
mov
add
mov
mov
orl
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
xor
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
xor
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
sub
mov
xor
mov
lea
mov
lea
mov
mov
xor
add
xor
add
mov
adc
mov
xor
xor
cmp
jne
cmp
je
mov
mov
cltd
add
adc
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
jmp
mov
xor
add
adc
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
xor
add
push
push
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
mov
mov
xor
add
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
xor
xor
add
adc
xor
cmp
jne
cmp
je
movl
movl
movl
movl
call
mov
lea
push
pushl
pushl
pushl
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
xor
add
mov
sbbl
mov
andl
mov
orl
mov
mov
sbb
mov
subl
mov
orl
mov
orl
mov
movl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
push
inc
mov
adc
xor
andl
xor
push
mov
mov
movl
movl
jmp
out
fsubrl
clc
outsl
dec
rcll
fildll
xchg
jl
pop
sahf
jae
fsubl
or
insb
mov
clc
jne
ljmp
xchg
add
mov
xchg
int3
negl
mov
push
lods
xor
pusha
jne
push
jge
testb
jno
adc
mov
rorl
aam
or
pop
sbb
das
ret
shlb
xchg
mov
cmp
gs
mov
adc
dec
xchg
pop
dec
ss
lods
xchg
add
mov
mov
std
scas
out
sub
aas
pop
add
out
cmp
mov
repnz
fidivrl
repz
push
adc
insl
lahf
add
xor
shrb
and
inc
add
orb
rol
das
stos
add
hlt
push
adc
sub
and
dec
mov
iret
ret
dec
in
sbb
adc
and
and
xchg
lods
leave
xor
stos
jno
pop
arpl
sbb
push
xchg
mov
jl
lret
lds
push
sbb
xchg
addr16
jge
outsl
lret
ret
subb
add
test
daa
dec
cmp
or
lret
cmp
mov
xchg
jl
xor
push
xchg
push
aaa
pop
or
cmpsl
mov
pop
aaa
dec
aad
or
jno
pop
or
int
enter
cmpsb
cmp
insl
mov
add
negl
ljmp
cmc
push
xor
stos
mov
inc
dec
dec
repz
lcall
cmp
jecxz
mov
fistps
cmp
icebp
adc
fwait
imul
pushf
mov
mov
push
add
xor
out
mov
repz
adc
das
orb
adc
test
cmp
fisubrl
mov
xchg
cmp
lahf
sub
mov
mov
std
iret
dec
aad
sbb
or
nop
jp
mov
scas
sbb
add
loope
popa
rcr
jnp
rcll
fistpll
push
icebp
and
sub
jo
out
jnp
dec
ret
mov
shlb
jge
jp
mov
push
sbb
mov
add
fldcw
lea
add
loopne
call
xchg
rol
or
xor
test
outsl
sbbb
xor
push
or
sbb
rorb
sbbl
or
leave
aaa
imul
in
jecxz
xchg
adc
xor
cmp
mov
inc
pop
and
pushf
jmp
xorb
rorl
mov
sub
scas
cmp
clc
pop
mov
mov
call
sub
pop
lahf
and
int
fs
lods
je
fdivl
push
jmp
sbb
cmp
imul
popf
mov
pop
into
mov
push
adc
sbb
aad
leave
loopne
insl
mov
fdivrl
loop
pop
adcl
mov
xchg
jns
hlt
iret
filds
inc
loopne
push
out
add
lret
dec
and
xor
xbegin
xor
and
inc
mov
push
mov
je
add
lret
test
movsb
rol
pushf
xor
xor
cmc
aad
xchg
jecxz
pop
and
int3
xchg
or
loop
and
jmp
sbb
aam
movsl
rcll
js
xchg
adc
das
jecxz
or
add
xor
shll
jbe
imul
bound
fwait
mov
shll
lret
nop
dec
push
mov
ret
or
mov
jl
xor
into
les
dec
pushf
pushf
or
icebp
lods
dec
repz
pop
xchg
jge
xor
imul
mov
pop
xchg
push
add
xchg
adc
mov
mov
xlat
pop
in
cmp
aas
gs
popf
mov
dec
test
lds
ss
jno
jle
sub
adc
jmp
xchg
nop
and
xchg
and
lcall
arpl
mov
in
inc
je
inc
push
push
sub
mov
aas
imul
es
shll
cmp
cwtl
iret
mov
mov
add
xor
sbb
jae
mov
sub
xchg
mov
jns
call
pcmpgtw
or
scas
adc
cltd
or
and
je
mov
push
addr16
sbb
orb
mov
mov
aam
adc
jp
test
jb
ret
les
xor
call
rorl
and
dec
cmp
add
pop
cmpsb
cmp
adc
push
rorl
jecxz
ss
pop
test
jbe
test
fcompl
nop
xchg
jo
in
jae
xlat
jmp
push
cmp
jns
add
sub
loope
leave
sub
out
add
scas
and
loop
or
dec
loope
aaa
dec
test
or
aas
push
xchg
mov
xor
xor
pop
stos
adc
into
xor
ss
mov
scas
mov
inc
push
xchg
addr16
mov
pop
aaa
pusha
and
outsb
or
adc
popa
daa
xor
pop
pop
pop
pop
sahf
fwait
test
pop
add
stos
add
sbb
push
pop
out
xchg
add
or
pop
movsl
inc
shlb
sti
sbb
push
dec
jne
sbb
xchg
mov
test
imul
js
sbb
or
push
scas
or
test
mov
gs
mov
sub
in
fstps
xlat
add
fldt
dec
mov
iret
xor
add
xor
mov
mov
and
sbb
out
mov
push
sbb
pop
pop
inc
stos
addr16
and
les
push
inc
xor
lcall
sahf
cltd
repz
pop
pop
jbe
cmpsl
sbb
outsl
scas
js
mov
push
imul
dec
cmp
mov
ret
jecxz
insb
sub
popa
jge
into
xchg
sbb
mov
leave
mov
clc
jg
push
fiadds
das
fcomi
data16
lret
loopne
lods
jmp
lahf
xor
pushf
cmp
push
and
adc
icebp
lock
push
popf
mov
data16
jae
in
xor
jecxz
jecxz
cmp
dec
mov
xchg
nop
arpl
dec
dec
mov
les
push
inc
add
sub
jp
aam
lret
fiaddl
or
inc
mov
push
rolb
mov
and
dec
push
pop
in
add
and
dec
or
xchg
mov
and
cmp
insb
adc
push
mov
inc
gs
cli
xlat
xlat
call
arpl
jno
mov
xchg
ficompl
jmp
or
and
test
das
int
fnstsw
xor
mov
lock
pop
pop
sub
or
cltd
mov
call
sub
bound
jle
sbb
or
stos
cmp
jmp
ffreep
jmp
inc
jns
mov
xor
add
adc
xchg
xchg
xor
adc
mov
dec
add
mov
mov
jmp
cmpsl
xchg
add
fwait
stos
insb
xchg
adc
add
ss
icebp
pop
pop
lds
add
add
cli
mov
cmp
cmp
lcall
push
test
mov
xor
dec
sbb
pop
inc
xor
sbb
push
or
pop
lea
push
dec
jp
and
or
jb
ret
sub
gs
xchg
shrb
or
xor
adc
and
inc
inc
inc
mov
sbb
ss
bound
imul
hlt
mov
pop
xchg
or
jb
lahf
adc
push
fwait
sbb
pop
sub
int
pushf
test
xchg
cs
jae
pushf
push
das
pop
fisttpl
hlt
dec
mov
lcall
xor
add
sub
mov
loop
mov
cmpsl
inc
mov
pop
aad
mov
fcos
push
divl
and
add
fistps
pop
movsb
es
aad
xlat
inc
xchg
pop
mov
xchg
or
mov
divl
or
ret
not
or
subl
xchg
mov
cmc
js
in
ret
pop
adc
xor
mov
pop
imul
mov
adcl
jmp
mov
aam
neg
push
into
rolb
push
outsl
or
mov
dec
cld
xchg
stc
mov
xchg
nop
insl
js
sahf
push
xbegin
jle
in
push
lret
subb
test
das
push
sbb
dec
fs
dec
add
jno
nop
inc
sbb
or
jecxz
xchg
inc
fwait
push
mov
mov
sbb
add
pop
push
movsb
adc
mulb
movsl
adc
cmp
xor
add
dec
ret
cmp
and
inc
repnz
arpl
ret
mov
fnsave
push
fadds
and
cmp
dec
or
push
clc
stc
mov
xchg
sub
imul
push
xor
xor
inc
adc
jae
lret
jge
xor
xchg
shl
xlat
imul
sbb
fiadds
call
sti
in
daa
sahf
sub
xchg
xchg
testl
inc
test
xor
mov
sti
xchg
inc
fstp
pop
mov
push
pop
dec
cmp
dec
adcl
mov
push
mov
and
cmp
out
shrb
push
jp
sub
nop
shlb
test
lahf
in
push
hlt
add
pop
fcomp
sub
test
add
popa
stos
test
inc
pop
pop
jo
mov
mov
mov
mov
mov
out
add
mov
sbb
add
into
addr16
int3
lock
addr16
ss
mov
sbb
xchg
stos
or
hlt
and
ret
and
fwait
and
ficoms
aas
insl
fwait
sbb
ljmp
mov
inc
fmul
pop
inc
rcrb
sub
addl
out
arpl
pop
loopne
jp
jp
popa
movsb
mov
jnp
test
popa
sbb
cmp
push
xor
jecxz
xchg
dec
repnz
js
lcall
aam
jns
fwait
cmp
xchg
lcall
cmp
in
cs
movsb
inc
dec
xchg
adcl
push
pop
cmp
adc
and
inc
andb
xor
cmp
add
xchg
icebp
loop
or
xchg
insb
add
xor
cltd
mov
push
loop
jmp
dec
jg
je
fimuls
and
jae
cli
into
dec
mov
jne
daa
sbb
arpl
cld
fidivrl
in
loope
jg
aaa
sbb
test
test
adc
ds
cmp
xchg
and
pop
cld
jno
lcall
pop
pop
cmpb
das
jle
lret
stc
mov
pop
jno
int
jbe
lods
aad
dec
ljmp
dec
add
xchg
and
mov
dec
dec
bound
pushf
int
int
sub
call
jle
xchg
sub
jl
insb
push
outsl
mov
mov
dec
or
lods
shrl
lahf
jne
test
xchg
lcall
cld
jg
repnz
negb
xor
cwtl
jmp
inc
jbe
adc
stos
and
shl
pop
jle
test
adc
int
xchg
cwtl
xchg
fistl
and
mov
into
fsts
fwait
jbe
int
in
test
xor
push
mov
out
and
fsubr
push
adc
lcall
xor
xchg
cltd
dec
ret
enter
mov
mov
jge
jmp
mov
mov
fistpl
pop
jne
icebp
xor
push
xchg
pop
jno
mov
cmp
addr16
movsb
push
jns
or
addr16
test
sub
xor
mov
test
out
repnz
jl
enter
lds
jl
fisubs
pusha
push
jg
data16
cmp
xchg
jo
mov
scas
add
push
sbb
and
xor
sbb
loopne
or
leave
jns
and
cs
movsl
mov
sub
lds
xchg
out
aas
sub
pushf
test
cmp
jg
daa
ljmp
imul
pop
sub
arpl
jge
xchg
lret
sbb
push
lock
sbb
bound
test
lea
insl
outsl
dec
repz
sub
cmp
xchg
xchg
or
setbe
dec
adc
adc
cmp
in
or
int3
std
cs
dec
push
push
mov
jecxz
mov
push
mov
les
cmp
fisubrs
into
dec
pushf
loopne
adc
das
cltd
inc
jg
pop
pop
jmp
bound
movsb
outsl
mov
or
pushf
inc
mov
divb
xchg
pop
ja
dec
mov
sub
cmp
push
push
mov
adc
add
out
push
adc
inc
aad
sbb
ret
push
add
pop
in
and
scas
xchg
pop
or
aas
lcall
fwait
sbb
cli
loop
xchg
fsubrl
xlat
loop
and
push
xchg
cmp
jg
test
int
pop
xor
stos
es
cmp
inc
add
cmp
add
mov
mov
pop
jecxz
sbb
scas
fistl
lahf
test
push
or
pop
sub
repnz
rol
leave
inc
sbb
mov
add
mov
sub
adc
cmp
sbb
mov
inc
test
sbb
push
test
testb
decl
xor
int
xchg
or
scas
sti
jbe
imul
push
es
in
icebp
insl
jne
jge
xor
mov
loopne
test
push
pop
ds
jo
mov
pushf
int3
aaa
fnstenv
push
aaa
out
sub
and
jl
jo
adc
push
jg
in
leave
std
cmp
dec
aas
dec
jle
out
stos
icebp
imul
xchg
inc
cmpsl
pop
in
push
fildl
pop
iret
add
xor
lcall
mov
push
xor
sub
jp
ret
mov
add
roll
mov
and
rclb
mov
outsl
mov
fnstenv
test
jnp
fwait
mov
enter
push
inc
jne
pop
bound
push
sahf
setl
push
pop
vmulps
shrb
and
lret
and
loopne
xchg
inc
jo
loopne
dec
repnz
push
out
or
sbb
sub
push
rorl
hlt
jb
rcll
dec
pop
push
xchg
mov
xor
sbb
mov
or
mov
aam
and
mov
je
push
stos
push
jno
push
fwait
or
mov
fs
je
mov
in
push
lahf
pop
mov
sti
push
orb
aad
aaa
scas
daa
inc
sub
sbb
and
into
mov
js
jns
inc
out
cmpsl
nop
stc
pop
jo
and
test
dec
cmpsb
movb
cltd
sti
cld
cmp
xchg
mov
pusha
jae
lahf
movsl
aas
dec
dec
movsb
addr16
xchg
cli
or
mov
cld
inc
cltd
sahf
add
xchg
mov
cmp
xchg
fdivrs
pop
in
stos
fsubr
mov
jmp
inc
cli
xchg
or
dec
pop
test
ret
mov
and
xorb
sbb
notl
add
popf
rol
subb
xor
stos
mov
pop
hlt
mov
xchg
aad
mov
lods
xchg
adc
loop
fildll
mov
pop
xor
cmp
ja
mov
push
outsl
and
popf
loope
pop
fstpl
adc
push
and
jo
push
lods
dec
fstpl
adc
adc
loop
hlt
mov
pop
enter
xchg
jmp
jns
add
lret
dec
call
and
cmp
cmp
lock
iret
les
jno
jmp
stc
add
push
xor
icebp
and
push
pop
in
jo
dec
push
mov
mov
idiv
xor
inc
dec
cmc
pusha
ljmp
fwait
repnz
adc
mov
adc
adc
int
xchg
sub
pusha
movsb
xor
xchg
dec
jg
shl
daa
adc
add
inc
jl
popa
xchg
push
and
stos
stos
ret
cmc
jo
out
out
push
jge
lret
dec
icebp
pop
sub
xorl
mov
das
jg
xchg
bnd
pop
and
push
sarl
test
sbb
shll
inc
pop
xchg
cmp
push
imul
lret
xor
ss
jl
test
int
lret
pushf
pop
outsl
xor
jecxz
xchg
xor
or
lods
dec
cmp
adc
pop
cld
add
pop
xchg
sub
sub
and
pop
data16
fwait
rclb
subb
in
push
cmp
out
imul
aas
push
ja
inc
jb
or
jnp
testl
pop
mov
adcb
jnp
or
aam
jno
push
pop
mov
loop
cltd
pop
out
and
ljmp
mov
call
add
filds
mov
sbb
xor
hlt
push
xor
frstor
sub
dec
pop
mov
and
mov
cmpsl
je
jg
iret
push
aam
add
mov
out
out
fs
popl
adc
daa
adc
ss
mov
scas
lcall
imul
jp
xor
inc
ljmp
pop
jmp
lcall
data16
int3
lahf
es
arpl
mov
pop
push
jne
fistpll
fstps
mov
into
lcall
pop
or
or
std
mov
cmp
jns
pop
jmp
out
jmp
cmp
stos
adc
cmp
sbb
bound
xor
enter
pop
mov
xor
pop
popf
mov
sub
push
not
ds
cld
inc
fnstenv
pop
in
xchg
insl
pop
jo
faddl
mov
sbb
ja
mov
mov
jnp
sub
fldenv
mov
scas
mov
sub
mov
sub
or
xchg
into
inc
inc
into
lcall
lea
add
xchg
lahf
cmpsb
dec
sahf
mov
das
lcall
jl
adc
je
adc
btc
push
cmpsb
jp
bound
pop
inc
xchg
cli
cmpsb
cmp
push
jns
sub
inc
cmp
test
fmull
ja
push
into
xchg
es
cmp
cmp
pop
ror
shrb
sbb
push
cmp
jne
notb
cmp
clc
mov
push
jge
mov
xlat
mov
adc
callw
dec
fistps
pushf
sarb
aaa
xchg
pusha
sbb
xchg
push
pusha
roll
jno
xor
addl
pop
and
fwait
push
arpl
pop
mov
sbb
xor
lods
and
cmc
mov
pop
test
push
inc
sahf
movsl
inc
pop
mov
push
adc
mov
lea
pop
leave
mov
jno
inc
adc
fcom
mov
out
jo
das
jl
std
repz
push
adc
or
and
push
popf
and
pop
push
or
push
mov
aad
push
nop
push
push
fldl
dec
fdivrl
sbb
das
xchg
and
add
sbb
fnstenv
arpl
sbb
jge
lahf
jb
stos
jmp
repz
scas
mov
fsubrl
pop
pop
ljmp
imul
das
inc
cwtl
pop
mov
ds
or
jg
add
fs
adc
mov
movsl
push
shll
xchg
stos
jb
loopne
cmp
push
push
cmp
data16
std
lret
jp
mov
lods
movsl
outsl
cmp
cmp
add
loopne
rolb
jno
mov
push
mov
and
xor
jge
add
incl
loopne
mov
and
xor
sbb
out
xchg
aaa
sub
push
add
fwait
test
pop
jle
stc
ds
and
mov
adc
mov
sbb
fistpl
dec
out
xor
dec
mov
int3
test
add
mov
jecxz
out
imul
xor
repz
aam
stos
xchg
jmp
pop
scas
lds
adc
dec
lock
pop
pop
lret
popf
adc
add
add
sbb
movb
dec
sbb
inc
push
data16
loope
fsubs
mov
jle
mov
inc
icebp
outsl
fisttps
push
pop
or
lret
adc
lods
mov
les
push
dec
imul
push
and
dec
cmp
adc
and
test
movsl
xchg
cs
ds
into
fistpl
mov
hlt
scas
inc
stc
fdivrl
add
fnstcw
xor
xor
jne
xor
cwtl
sbb
movsl
rol
jp
jg
stos
inc
scas
dec
pop
cld
lds
arpl
lahf
insb
ret
push
cmp
outsl
and
cmp
mov
xchg
lea
jns
jne
or
push
pushf
sbb
xor
orb
push
cmp
mov
mov
mov
mov
and
xor
cli
xor
cld
lret
jo
jecxz
loope
push
int3
les
xchg
inc
mov
cmp
sbb
or
leave
and
mov
mov
mov
inc
pusha
adc
pop
out
jecxz
mov
pop
sbb
jne
xor
push
inc
fs
hlt
stos
mov
jns
and
or
andl
mov
bound
in
xchg
lret
add
mov
mov
adc
pop
xchg
ret
cs
fisttpl
and
call
adc
mov
inc
mov
das
xor
fsubrl
push
arpl
mov
cmp
pop
fcmovb
in
sub
inc
clc
jg
mov
or
sbb
insl
stos
js
out
aas
mov
rcll
aaa
pop
enter
addr16
jnp
xchg
pop
or
pop
or
cmc
jg
outsl
xor
push
add
inc
sahf
lahf
faddl
adc
je
int3
mov
repz
fistpll
push
add
push
and
pop
inc
lock
jmp
loop
in
xorl
pushl
mov
jle
in
dec
cmp
mov
mov
dec
inc
inc
lods
repz
lods
inc
sbb
arpl
rcll
out
xchg
popf
and
cmp
filds
sbb
inc
es
mov
rcll
inc
cmp
mov
lret
pusha
add
push
ss
inc
sbb
or
int3
xchg
mov
in
shlb
in
mov
cli
sub
popf
paddsw
push
adc
sbb
addr16
xor
push
adc
aas
lcall
push
ret
xor
push
or
xchg
add
lahf
lcall
lock
lds
sub
or
or
and
insb
pop
cwtl
cmp
movsb
dec
inc
adc
push
fidivs
and
outsb
das
mov
push
das
mov
jecxz
or
fadds
and
sub
lahf
cmp
xchg
shll
loopne
xchg
repz
or
sbbb
aas
sub
jns
loop
dec
mov
int
inc
jmp
les
cs
das
jg
in
pop
or
insl
mov
loopne
sbb
pop
sbbb
je
mov
gs
sub
sbb
add
fwait
dec
pop
scas
rolb
into
adc
xor
mov
inc
mov
jno
ja
inc
clc
mov
jbe
loope
sahf
pushf
and
push
lds
pop
or
arpl
insb
sub
test
pop
enter
cmpsb
or
lret
sub
cwtl
enter
and
das
je
icebp
cmp
lock
mov
adc
int3
xchg
cmp
xor
push
flds
cld
xor
xlat
push
mov
stos
out
pusha
ror
insb
mov
aaa
aas
sbb
int3
pop
adc
pop
inc
lahf
sub
pop
fdiv
inc
into
sbb
dec
gs
xchg
mov
fcoms
jo
adc
aad
mov
push
add
dec
xchg
mov
adc
rorl
push
fisubrl
call
andps
out
pop
add
ds
sarb
out
flds
stc
call
inc
mov
sub
mov
jg
aad
add
inc
cmp
arpl
es
arpl
data16
enter
cwtl
arpl
adc
rcrb
or
add
xor
pop
iret
mov
xchg
imul
push
dec
inc
adcl
clc
mov
outsb
jmp
incb
push
mov
pusha
xchg
mov
mov
roll
push
das
popf
fisttpl
push
mov
testb
push
mov
jo
fisttps
mov
imul
sbb
jg
dec
inc
test
icebp
lea
sub
add
ret
cltd
pop
or
popa
xchg
xchg
iret
pop
shl
push
lret
mov
fldt
push
cmpsb
in
pop
testl
mov
dec
jg
call
and
jg
jns
sbb
push
orl
fildll
aad
in
sarl
cmp
add
xor
dec
add
add
xchg
adc
addr16
pop
mov
std
xchg
in
mov
and
pop
push
sbb
push
xor
incl
in
icebp
pop
mov
and
enter
cli
push
push
or
ficomps
icebp
or
pop
pop
out
jg
and
daa
xchg
mov
jbe
stc
fsubs
or
dec
cmp
mov
xchg
or
xchg
mov
xchg
or
push
fwait
or
cmpsl
dec
imul
sbb
lcall
adc
mov
cmp
dec
aad
push
push
mov
dec
pop
push
imul
frstor
or
push
mov
aam
mov
mov
pushf
add
add
pop
call
repz
loope
jo
int
dec
jmp
push
cmp
inc
mov
into
mov
sbbb
fstpt
in
lods
int3
aad
cli
jnp
aad
lret
xor
std
cmp
xchg
inc
leave
push
adc
mov
add
call
mov
fwait
cmp
inc
rcr
pop
jb
or
dec
fimuls
mov
ja
js
adc
push
sbb
dec
add
xor
sub
insb
je
sahf
xor
add
xchg
mull
jle
adc
xor
jecxz
dec
rorb
pop
bnd
pop
push
xorb
xchg
sbb
jns
cmp
out
mov
inc
mov
rolb
aaa
loope
jo
dec
iret
or
ret
pop
pop
into
arpl
push
mov
test
lcall
loopne
or
jmp
loope
adc
repz
loop
aam
fistl
jp
dec
sbb
and
push
xor
mov
lcall
jge
mov
mov
pop
sti
jo
add
cmp
adc
mov
fldt
clc
fs
lcall
add
es
fmull
fnstenv
ret
adc
xchg
add
cmp
sbb
dec
mov
dec
xchg
and
xchg
imul
ja
dec
fbstp
mov
cmpsl
jp
inc
mov
xchg
xchg
shll
cli
and
ret
push
mov
jne
fadd
push
shlb
data16
pop
add
pop
adc
pop
nop
sbb
into
push
xchg
iret
popf
pop
addb
fnstcw
add
cmpsb
push
mov
mov
enter
mov
mov
jp
lret
add
cld
decb
in
inc
push
loope
enter
jb
add
jmp
pop
push
cmpsb
mov
incb
mov
std
and
shrb
sbb
lahf
popa
call
out
jbe
inc
clc
fs
sub
insl
and
push
rcll
or
lods
ret
jnp
sbb
xchg
les
add
xchg
cmp
fldz
cltd
ds
jg
xchg
dec
fs
and
call
mov
ljmp
ret
xchg
lret
jmp
adc
iret
addr16
sub
dec
leave
repnz
inc
or
push
sarl
fcomps
stc
outsb
push
movb
pmuludq
rcl
mov
out
subl
shl
out
sbb
fwait
imul
dec
mov
clc
fimull
shrl
addb
adc
icebp
lret
push
jmp
cmp
dec
jmp
cmpsb
sahf
or
inc
mov
add
push
iret
sub
push
pusha
jno
mov
jp
js
pop
adc
mov
aaa
sar
pop
imul
pop
loop
popf
loopne
mov
jb
xor
outsb
xchg
cmp
jbe
clc
sti
out
jb
into
jg
mov
mov
ffree
imul
into
xchg
cwtl
or
mov
mov
xor
je
mov
pushf
adc
xchg
pop
bound
mov
out
loopne
mov
or
pusha
inc
sahf
ret
xor
orl
sub
cmp
adc
pop
stos
cmpsb
push
mov
mov
sub
mov
enter
stc
pop
or
adc
insb
xchg
ja
bound
cmc
jno
insb
rolb
ret
imul
sub
mov
icebp
movsl
int
mov
adc
mov
mov
pop
stos
das
sub
pop
mov
jecxz
lods
add
repnz
shr
js
icebp
imul
jb
jmp
pop
push
je
mov
adc
arpl
xorl
mov
sub
nop
pop
push
xor
in
push
cld
ljmp
loop
aaa
insl
icebp
rcll
xorb
ja
cld
jns
sbb
xchg
addb
push
xchg
inc
psrad
add
popf
push
adc
lea
and
fldl
stos
sbb
mov
imul
and
pop
adc
aaa
fsubrl
jae
mulb
sahf
and
cmpsb
xchg
mov
aas
lcall
loop
loop
movsb
xor
fsubl
and
imul
mov
stc
jmp
test
pop
das
cmpl
test
mov
push
in
std
pop
ja
push
dec
sub
sti
jo
sub
outsb
out
in
sbb
pop
hlt
dec
push
push
sub
dec
stc
lock
pop
inc
inc
cmp
dec
inc
adc
xlat
es
jb
jbe
lret
inc
mov
pusha
or
dec
mov
pop
fcomps
and
stos
cwtl
cltd
clc
mov
idivl
mov
daa
rorb
mov
arpl
in
mov
add
aas
cwtl
dec
push
fiadds
testb
jne
cld
jb
aaa
movl
cmp
jne
movl
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
adc
addl
mov
notl
mov
xor
xor
movl
mov
movl
cmp
jne
movl
cmp
movl
je
subl
mov
xor
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jb
add
mov
movzwl
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
mov
or
mov
push
adc
pop
addl
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jb
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
xor
mov
mov
mov
sbb
mov
mov
or
xor
and
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
jmp
enter
loope,pn
push
add
out
aad
in
dec
inc
aam
jl
pop
sahf
jae
pop
addr16
icebp
out
xor
cwtl
mov
fsubrs
jns
js
pop
enter
cmp
lods
pop
popf
outsl
sahf
push
fstpt
cmp
add
sub
rorl
mov
aad
jecxz
out
mov
jg
gs
jle
xor
inc
sub
cwtl
sbb
pop
les
out
sub
mov
aad
mov
test
lea
pushf
repnz
xchg
mov
divl
repz
mulb
hlt
stos
outsb
add
shll
mov
dec
sbb
lahf
ja
out
lds
rcrl
gs
dec
mov
sti
inc
rorl
sub
sti
jnp
mov
ss
imul
xchg
nop
push
ljmp
or
mov
mov
and
cmp
lret
enter
xchg
cmp
push
xchg
jae
sbb
sub
sti
pop
add
mov
sub
jmp
sub
mov
dec
scas
pop
stos
adc
fidivrl
add
imul
lock
out
sbb
sub
fistpl
cld
cmp
arpl
push
ja
xchg
leave
adc
add
inc
cld
xor
fwait
and
sub
ss
cli
pop
iret
xchg
daa
popa
lret
or
cld
sbb
sub
cltd
popl
push
popl
push
xchg
addr16
cmp
mov
mov
adc
daa
insl
cmp
ljmp
stos
das
mov
xchg
mov
mov
sbb
xor
cmp
jp
ds
cmpsb
xchg
unpckhps
add
loop
sbb
mov
repz
into
rcll
xchg
icebp
jae
fildl
cmpsb
cli
xor
xor
data16
and
xor
andb
shr
nop
shrl
je
push
aad
pusha
test
popf
addr16
loope
hlt
repz
dec
dec
hlt
ss
sub
pop
adc
orb
leave
or
incb
pushf
pop
iret
rolb
insl
mov
inc
sahf
das
add
aad
fdivrl
xchg
mov
repnz
test
mov
aaa
cmp
imul
add
fwait
stos
and
lea
cmpsl
aad
in
mov
nop
das
push
cmp
je
sub
movsl
insb
xor
mov
popf
mov
xor
push
or
jmp
in
push
movsb
sbb
cli
mov
stc
pop
add
pop
mov
jbe
arpl
filds
cwtl
insl
das
adc
stc
mov
mov
dec
aad
pop
dec
inc
xchg
mov
pop
sub
repnz
jge
add
jnp
mov
sbb
pop
cmpsb
daa
mov
in
mov
test
push
cwtl
dec
stos
jmp
push
insb
lods
insb
lds
sbb
mov
or
cmpsl
int
and
bnd
loop
or
idivb
lahf
jmp
jecxz
data16
cltd
push
sub
es
pop
outsl
lds
std
andl
inc
not
mull
das
test
test
test
outsb
jg
adcb
sbb
dec
daa
xchg
add
lock
daa
mov
cmpsl
xor
test
jge
ds
js
inc
pop
movsl
pop
mov
jp
pop
and
xchg
aaa
mov
sub
or
mov
sbb
lret
imul
push
push
lret
shlb
push
sar
sub
mov
add
push
xchg
fiaddl
repz
pop
sub
push
lock
js
iret
shl
pop
pop
mov
loopne
nop
dec
test
push
clc
fildl
sbb
sbb
aam
xchg
sub
repnz
adc
push
hlt
dec
mov
jne
jae
and
test
popa
add
fidivrs
push
mov
push
mov
inc
pop
xchg
movsb
cmp
ret
push
inc
imul
jmp
cmp
cmp
out
enter
jmp
stos
lds
insl
add
sahf
orb
pop
enter
fisubs
mov
mov
adc
cmp
pop
inc
mov
push
xchg
lods
mov
ljmp
cmpsl
mov
or
sbb
adc
nop
int3
insb
out
test
arpl
cmp
xchg
jo
pop
pop
scas
jmp
leave
or
pop
sub
pop
jne
pop
hlt
fisubrl
xor
test
push
loop
inc
adc
test
jne
dec
rcrl
push
int3
adc
cmp
jno
xor
push
cmpsl
mov
jbe
mov
call
mov
xchg
mov
mov
add
cmp
and
test
in
cld
mov
fldenv
negl
stos
dec
jmp
cmpsb
xchg
inc
xchg
jl
scas
test
jns
lea
dec
movsl
sbb
adc
jb
outsl
iret
fiadds
fs
pop
mov
jmp
jmp
mov
push
aas
test
jo
repnz
jbe
sub
pop
cs
das
sbb
add
fisubrl
mov
in
sub
xchg
shll
inc
sbb
push
js
in
cmp
adc
test
outsl
mov
push
dec
repz
push
xor
cld
and
mov
int3
xor
cmpsb
hlt
push
cs
jmp
daa
xor
jne
add
icebp
push
and
xlat
or
xor
mov
push
mov
xor
pop
push
inc
xor
sbb
leave
cmp
loop
adc
test
push
insl
jg
mov
pop
repnz
jb
or
cmp
hlt
pusha
out
mov
rcrb
jg
mov
rclb
jne
cmp
mov
push
subl
cmp
jb
pop
dec
xchg
and
mov
aas
sub
pop
in
mull
cwtl
outsb
mov
daa
insl
je
lea
add
cmp
orb
jne
aad
xchg
xchg
cmpsb
jae
mov
mov
jb
bound
fadds
sub
dec
arpl
push
clc
jecxz
imul
fnstenv
dec
push
out
mov
xchg
fisubs
imul
es
shll
sbb
xlat
cmp
mov
xchg
aaa
scas
call
sbb
in
nop
mov
push
frstor
ficoms
or
jns
dec
push
sbb
mov
and
clc
and
popa
and
loopne
cmp
out
lahf
inc
clc
scas
popf
push
mov
pop
xor
sub
mov
movsb
fwait
dec
daa
lret
pop
pop
xorl
mov
pushf
cld
bswap
inc
add
add
nop
hlt
add
sub
pop
and
in
push
sub
add
or
adc
lock
mov
sbb
movsb
push
dec
andb
je
mov
or
fs
scas
mov
or
xchg
std
icebp
jb
loope
pop
iret
push
fbld
mov
push
and
push
or
cmpsb
cs
ficomps
mov
fucom
shr
into
mov
pop
out
mov
cwtl
ja
xchg
loopne
adc
mov
and
inc
cmp
lahf
testl
sti
mov
pop
xchg
cmpsb
or
mov
push
adc
dec
test
push
popf
mov
cmp
repnz
bound
in
in
add
in
int3
int
mov
in
mov
mov
xor
outsb
cmp
cmp
add
stc
dec
insb
xor
outsl
pop
and
pop
push
in
pop
jb
lcall
push
xchg
push
push
cmp
dec
shl
fistpll
fwait
aam
sahf
mov
pusha
fdivs
push
dec
push
outsb
fisttps
mov
js
pop
loopne
pop
or
dec
jb
mov
in
cmp
xchg
jecxz
sti
pop
push
sub
mov
lods
cmp
jmp
loope
jle
ljmp
ret
pop
inc
lods
cmp
xlat
daa
sub
lds
jae
jl
jno
dec
aaa
sub
add
das
loopne
popa
shll
and
cmpsb
cmp
movsb
lds
mov
dec
std
cmp
addr16
cld
ja
push
mov
mov
imul
movsb
inc
int
movsl
push
imul
mov
mov
cltd
dec
cmp
inc
inc
rol
or
mov
rcll
inc
mov
jnp
jo
mov
idivb
and
in
lds
stos
insl
repz
jbe
out
jle
sub
jl
ffreep
add
xchg
and
sub
loopne
mov
add
test
movsl
fsubs
or
cwtl
add
sbb
push
sbb
dec
and
mov
mov
xor
ret
jbe
dec
push
sti
sbb
test
add
popa
clc
jmp
lds
fnstsw
rolb
push
xchg
out
and
test
ja
xchg
pop
into
loop
in
mov
fisttps
push
imul
popf
and
loop
cmp
out
jle
mov
pushf
mov
mov
jge
in
xchg
cld
sbb
jo
data16
pop
mov
and
adc
sub
data16
leave
add
add
lods
stc
cmp
sub
sbb
int3
sub
xor
or
aad
stos
mov
push
cld
ds
mov
fcoml
push
inc
adc
pop
aam
mov
xchg
out
xchg
jb
dec
pop
xchg
aas
mov
loop
dec
lahf
adc
mov
cmc
pushf
cwtl
mov
ja
mov
in
cmpsb
mov
js
mov
lcall
or
add
test
dec
xchg
cmpsl
add
gs
mov
int3
pop
jbe
adc
cld
xchg
xchg
push
fs
je
pop
pop
cmp
insl
cmpsb
cmp
add
mov
xchg
outsb
jmp
in
dec
cmpsb
inc
push
mov
and
int
aam
rorl
out
dec
pop
loopne
pop
fildll
mov
add
jb
mov
jecxz
clc
arpl
push
push
jo
inc
cmp
aas
xchg
jmp
sarb
aaa
cmp
shlb
jo
push
push
lahf
stc
xor
jle
mov
sbb
jb
rorl
push
ja
stos
xor
pop
insb
dec
pop
adcb
push
sbb
cmpsl
pusha
aas
bnd
fwait
xchg
fs
add
test
outsl
xchg
fistl
push
dec
sub
sub
dec
sbb
aaa
xor
lea
test
jnp
outsb
xor
xchg
lret
test
mov
push
jmp
aas
xchg
inc
insl
das
xor
stc
xor
xor
ret
stos
shld
std
mov
mov
je
imul
xchg
popa
and
shrl
cli
js
jno
lcall
mov
mov
push
push
gs
mov
push
sbb
mov
xor
jo
jo
dec
loop
xchg
scas
outsl
push
jns
push
push
inc
cmpb
cmp
mov
dec
pop
div
jl
insb
cli
bound
iret
test
out
insb
leave
pop
out
ja
repz
jnp
clc
mov
xchg
fnstcw
adc
cmp
fptan
mov
or
xor
add
mov
dec
cmp
cmpsl
mov
std
cmc
insb
pop
mov
mov
dec
scas
add
or
dec
push
outsb
jns
dec
fmuls
fs
push
insb
add
or
add
fstpt
dec
ret
dec
out
mov
inc
jbe
inc
jl
aaa
in
movsb
lcall
mov
pop
inc
cli
aam
xchg
xlat
iret
cmc
mov
dec
adc
ljmp
aam
int
push
xchg
cmp
mov
jb
jmp
and
cmp
rclb
test
pop
inc
mov
push
daa
incb
add
dec
adc
loop
mov
mov
cltd
mov
and
pop
cs
iret
adc
xor
xchg
jmp
jmp
sbb
fwait
cmp
add
jae
fstps
or
xchg
fadd
cltd
cltd
loopne
add
imul
insb
stc
loop
jle
mov
mov
jo
and
xchg
pushf
fdivrs
push
and
mov
stos
add
lods
pop
rorl
movsb
loope
mov
cld
std
es
js
in
jmp
xchg
pushf
push
dec
xchg
testb
mov
aad
mov
dec
mov
pop
add
data16
push
dec
jno
mov
jmp
iret
lret
andl
or
inc
loope
xchg
lods
mov
ficoml
aas
pusha
push
pop
lret
push
fadds
lds
je
pop
pop
nop
pop
lcall
pop
push
fs
sub
fwait
sbbl
jmp
lods
mov
add
sub
push
or
inc
mov
adc
push
mov
fyl2xp1
fdivrs
cltd
or
push
push
push
sub
aas
jnp
sub
lahf
sub
mov
shrb
mov
movsb
inc
test
rorl
inc
ljmp
clc
das
xchg
decb
shlb
sub
mov
push
mov
insl
or
xor
mov
or
subl
mov
or
push
mov
loope
dec
mov
mov
cltd
lds
cmp
jg
inc
and
push
push
pop
mov
add
lret
es
xchg
xlat
sub
popa
cld
popf
sbb
sub
out
and
mov
push
and
sti
mov
sbb
out
test
cld
cli
jnp
js
push
xchg
test
jns
pop
mov
inc
fldenv
jns
rclb
lret
jns
pop
sahf
mov
pop
jb
or
fidivl
add
out
out
cmp
outsl
pop
mov
std
mov
inc
out
xchg
in
jecxz
and
push
adcb
xor
ja
xchg
and
pop
std
mov
mov
test
inc
xlat
mov
sbb
repnz
mov
into
sbb
js
jg
mov
mov
ds
lock
inc
pop
stos
in
sub
pop
mov
sbb
push
mov
jecxz
push
fwait
enter
add
js
push
adc
nopl
and
inc
js
cmc
cli
or
int
mov
lcall
jl
push
adc
fisttps
dec
jns
call
addb
jbe
imul
xchg
test
and
mov
push
loop
or
ret
pop
dec
jecxz
or
inc
add
test
inc
sub
add
aaa
jo
mov
mov
je
shll
mov
push
ss
jl
lahf
addr16
xchg
pop
icebp
fwait
cltd
les
xor
es
aam
adc
test
or
dec
mov
xchg
leave
out
das
ljmp
mov
aas
fwait
cld
outsl
jno
mov
xchg
lds
lret
movsl
popa
rorl
sar
aas
adc
out
and
push
in
xchg
or
xor
jb
add
mov
xor
pop
add
xchg
cmc
or
jne
and
xchg
mov
adc
sbb
add
cmpsb
sbb
mov
mov
loopne
shrl
in
cmc
adc
cs
or
jge
lods
sahf
mov
outsb
in
test
or
jb
add
test
xor
mov
mov
mov
mov
cmpsl
mov
rorl
leave
jb
sbb
mov
jns
xlat
ljmp
sub
mov
sub
into
inc
and
xchg
xchg
popf
dec
sar
mov
ja
lret
jns
aaa
aam
or
mov
push
movsb
push
add
shrl
push
jge
testl
enter
lcall
adc
inc
adc
fptan
jbe
fildl
xor
out
loopne
xor
pop
faddl
cmp
loop
add
sbb
sub
and
push
push
add
fs
xor
js
stos
jl
outsl
sahf
fsubl
lock
stos
inc
dec
cwtl
hlt
mov
fs
arpl
sbb
ret
mov
pop
test
dec
inc
push
je
dec
cltd
dec
sti
push
lahf
mov
int
cli
jno
fcmovu
imull
dec
jle
fnsave
inc
fcmovb
je
outsl
insl
adc
incb
xchg
cmp
rcrl
mov
je
adc
push
adc
lock
adc
dec
decb
pop
mov
sbb
pop
xor
je
clc
mov
std
ss
xchg
xor
adc
mov
add
stos
jl
add
cs
add
or
imul
outsb
mov
sbb
and
or
iret
cmp
jl
lods
pop
xchg
aam
add
imul
test
mov
mov
les
call
and
loope
out
iret
outsl
xchg
jns
mov
push
scas
push
sbb
stos
adc
rorl
push
adc
or
push
cld
lock
jo
cwtl
jnp
sub
ret
popf
sbb
repnz
mov
loope
add
pop
cmp
sbb
and
push
ds
mov
mov
xor
faddl
cltd
xchg
dec
xchg
clc
add
xchg
push
clc
push
incb
data16
and
jge
lods
stc
loopne
jl
shll
mov
das
add
js
fwait
jge
or
pop
out
mov
aam
pop
cmp
or
xchg
repnz
pop
cmp
jae
test
int3
mov
cmp
roll
adc
flds
adc
xor
out
or
or
cli
jge
jmp
test
pop
inc
sub
push
dec
pop
ffreep
das
cmpsl
jle
imul
push
outsl
jne
adc
test
scas
in
push
sti
adc
popf
mov
dec
in
mov
xchg
iret
aad
pop
ljmp
xchg
cmc
push
xchg
mov
pop
xchg
int3
loop
xlat
addr16
and
sub
xchg
into
into
shrb
xchg
filds
fwait
imul
in
rcll
pop
ss
cmpsl
and
cmp
cmc
pop
pushf
inc
add
inc
jp
ds
sub
lahf
mov
lahf
add
fisubs
loopne
jo
mov
sub
mov
imul
aam
mov
std
aas
jle
ljmp
and
aaa
fsubs
fisttpll
nop
test
sub
jl
mov
mov
jecxz
fsts
cmp
xchg
enter
push
mov
jb
iret
cmc
cmp
out
es
iret
inc
add
mov
sbb
dec
push
data16
inc
ja
adc
es
out
lods
lret
rcrl
fildl
test
mov
xchg
adc
shlb
mov
adc
add
push
ljmp
add
adc
push
fsubl
sbb
mov
push
adc
lea
out
repnz
mov
mov
jmp
jl
sbb
xchg
lcall
mov
push
jecxz
fimull
into
and
out
pusha
mov
mov
loope
push
lds
sub
fstp
adc
push
imul
adcb
mov
icebp
inc
repnz
jecxz
sbb
mov
fs
xchg
mov
fcompl
mov
dec
mov
je
aad
pushf
push
xchg
and
lret
inc
outsl
andb
xchg
push
in
dec
psubsw
pop
lods
ss
pop
ret
mov
cmpb
or
cmp
xor
loop
or
int
loop
sbb
lahf
ljmp
pop
adc
in
dec
into
push
std
cmp
dec
pop
push
cli
adc
xchg
je
fs
shl
mov
adc
enter
loope
invd
lods
shrl
xor
sub
aas
jnp
cwtl
leave
mov
lcall
jb
fprem
cs
xor
lods
xor
pusha
mov
cmp
xchg
add
cltd
fnclex
aas
push
outsl
pushf
mov
mov
arpl
mov
lds
in
ja
arpl
push
bound
in
mov
jp
les
test
les
das
repnz
lods
push
pop
xchg
dec
cmp
aad
repz
das
aas
cmpsb
shlb
mov
sti
ljmp
insb
mov
jecxz
xlat
adc
fisubrl
idiv
push
fdivrs
cmpsl
jmp
pop
push
loopne
xor
ja,pn
cli
lock
push
test
insl
push
push
push
daa
sbb
pushf
int
iret
and
pusha
sarb
loope
cs
jmp
stos
jp
repz
cmp
add
and
xchg
push
cli
sbb
scas
xchg
xor
pusha
mov
test
inc
test
xchg
sub
test
jbe
cmc
jge
and
int
sbbl
loop
xor
lock
jle
and
cwtl
cli
je
test
in
fimull
stc
out
pop
out
mov
xor
inc
push
outsl
loop
and
adc
fcmovnu
shlb
sarb
pop
aas
xor
mov
int
or
les
jmp
inc
and
hlt
and
lret
jmp
aad
cld
out
sub
sub
dec
and
mov
mov
xor
jmp
pop
sbb
movsl
jbe
ret
adc
xchg
xchg
ret
loopne
cmp
insb
xchg
mov
into
jl
repz
fwait
pop
cmp
lods
pop
dec
dec
or
insl
mov
push
popa
pop
cmc
stos
loopne
ret
sti
cmp
sti
mov
ror
stc
lods
cld
xchg
jmp
rol
inc
scas
sub
loope
xor
mov
mov
cli
movups
push
rcr
push
ret
mov
insl
inc
xor
outsl
into
rorl
sti
sub
push
imul
cwtl
icebp
daa
xchg
imul
push
sbb
push
adc
jp
lods
dec
inc
std
or
xchg
repz
ret
int3
dec
mov
cmp
mov
adc
in
insl
fistpll
pop
daa
sbb
fildll
hlt
loope
out
cld
incb
cwtl
iret
dec
ret
andl
int3
mov
sbb
loopne,pn
jl
dec
push
shlb
push
inc
lcall
cmp
fildl
mov
inc
rcrl
bound
sub
test
mov
xchg
sub
jbe
fbstp
insb
fiadds
mov
popf
lcall
mov
ret
inc
movsl
pop
xchg
mov
xor
mov
addr16
rcr
pop
fsubrp
loopne
mov
mov
xor
cli
fisttpll
imul
rorl
jl
sbb
cmp
jo
mov
sarb
movsb
dec
lods
lcall
sbb
add
push
call
xchg
ja
fidivl
fs
test
call
push
mov
mov
sub
and
orl
daa
test
or
sbb
mov
pusha
pop
orl
stc
xchg
mov
fimuls
dec
xchg
jp
inc
xchg
mov
loop
jae
aaa
sub
inc
in
inc
bound
inc
outsb
repz
aad
cmpsb
cmp
jecxz
jbe
int3
repnz
mov
xor
pop
sbb
js
xlat
or
add
repnz
popa
data16
out
lods
cli
push
cmp
dec
cmp
ficomps
dec
xor
outsl
pusha
fs
loopne
cli
lret
iret
dec
mov
sbb
sub
jge
sti
lcall
sbb
fnstcw
pop
ret
xchg
xchg
cmp
jnp
lock
sbb
add
js
inc
pop
sar
and
add
addr16
sbb
sahf
dec
xor
and
addr16
adc
arpl
hlt
xor
imul
ret
xchg
cmp
xor
nop
shll
rcrl
push
loop
jne
sub
es
pop
jne
cmp
or
add
or
cmp
and
xchg
js
or
or
aaa
clc
imul
adcb
mov
jecxz
cmp
inc
shlb
sti
jo
scas
enter
pop
inc
pushf
dec
mov
pusha
scas
inc
movaps
in
call
jae
jbe
daa
icebp
flds
ds
int
adc
bound
insl
and
rorb
lods
sbb
loop
mov
inc
jecxz
add
imul
into
dec
sub
arpl
inc
mov
jbe
adc
mov
xchg
int3
out
frstor
into
pop
scas
dec
mov
movsb
loope
rclb
ret
movsb
stc
and
push
out
dec
mov
add
jbe
adc
mov
adcb
jne
mov
mov
adc
inc
cmp
inc
in
addl
fsubrl
pop
das
repz
ja
out
add
test
sarl
mov
ja
stos
mov
lea
fdivrs
rcrb
aad
xor
jle
jle
push
mov
or
push
sub
jge
pop
clc
or
ljmp
popa
cld
js
sbb
popf
pushf
push
test
jmp
xor
flds
sub
arpl
xchg
mov
xor
push
aaa
adc
in
sbb
mov
fdivs
fdivs
inc
xor
test
repnz
es
xchg
inc
rol
sbb
and
and
add
sbb
into
push
cmp
adcl
out
dec
push
push
mov
inc
outsl
push
push
mov
inc
addr16
dec
lret
lahf
mov
add
or
lds
psubsb
popf
cmp
dec
jnp
fimull
pop
call
and
imul
rorl
mov
fiadds
mov
and
movb
fisttps
sub
int
insb
sbb
adc
movsb
movsl
aad
fucompp
fs
out
add
cmc
icebp
loope
lret
int
gs
pop
mov
clc
jne
mov
decb
ljmp
jp
popa
std
add
dec
sub
add
xor
insb
xchg
and
and
push
mov
xlat
lcall
push
xchg
xlat
inc
fildl
aad
mov
pop
mov
sbb
int
loopne
adcl
cmpsl
and
add
bound
rol
scas
dec
mov
push
inc
je
js
out
leave
fs
or
mov
and
lret
sbb
inc
push
jg
pop
push
jbe
loopne
lods
jp
xchg
and
or
test
push
and
fstps
cs
imul
lods
sub
mov
dec
fisttpll
fistps
dec
fstl
cltd
xor
xchg
imul
pop
idivb
mov
leave
je
mov
lds
sbb
cmp
pushf
subl
popa
scas
xchg
mov
jecxz
mov
inc
ljmp
testl
adc
push
sbbb
dec
fisttpl
cmp
adc
in
mov
sub
insb
mov
fistps
mov
aad
por
xchg
pushl
int3
call
jb
dec
js
push
adc
orl
pushf
cmp
outsb
scas
mov
outsb
arpl
in
sub
ds
cs
sahf
adc
cmp
int3
xor
jns
ljmp
add
lock
out
add
mov
pushf
mov
inc
jae
cmp
cmpsl
jo
mov
or
repz
mov
xchg
xor
add
cmp
push
mov
sub
sbb
repnz
fadd
push
adc
lahf
jle
cmp
sub
jo
sbbl
cmpsl
mov
xor
push
push
jge
je
cmp
xchg
out
dec
aas
aas
sbb
mov
mov
or
xchg
dec
scas
lahf
scas
mov
sub
notl
mov
push
test
xchg
sub
jecxz,pn
idivb
pop
stos
inc
fmull
and
cmp
cmc
xor
push
mov
jp
rorl
ss
roll
dec
imul
popa
pop
cmc
mov
or
and
out
js
add
leave
lcall
insl
push
pop
popf
sub
push
xchg
fstl
jg
mov
cmpsl
int3
xchg
es
bswap
int
ss
inc
jge
les
mov
or
mov
jmp
push
cli
rcr
sub
sti
cli
cmpsl
js
loopne
into
call
sbb
xor
les
ljmp
inc
scas
cmp
mov
cmp
push
mov
rol
cmp
inc
sub
cmp
mov
dec
ficoml
lds
dec
xor
imul
push
jnp
pop
or
into
xchg
xchg
lods
insb
std
stos
dec
loop
jmp
mov
cwtl
repz
mov
jmp
fwait
sahf
adc
std
mov
push
mov
inc
add
and
pop
rolb
add
in
decl
xor
mov
addl
rcr
pop
xor
cld
rep
shl
in
pop
test
out
fsubr
cs
xchg
push
dec
rorb
sub
inc
push
out
out
std
jb
pop
add
xlat
add
and
fs
xchg
and
mov
push
xor
cmp
inc
pusha
pop
push
mov
inc
xchg
outsb
dec
mov
and
lcall
mov
shlb
jae
hlt
jbe
inc
inc
or
in
pop
xlat
dec
fbld
ret
dec
pop
adc
inc
mov
outsb
mov
xchg
or
xchg
loop
repz
cmp
ud1
psllw
mov
leave
fsubrs
cmp
sub
int3
popf
call
addb
jecxz
addl
cmp
sub
ret
mov
orl
insb
push
xchg
cli
adc
bound
loope
loop
xchg
pop
or
ljmp
dec
dec
xchg
jg
sbb
pop
jbe
loope
inc
pop
and
sbb
inc
xor
cmp
sarl
jae
lret
cltd
mov
adc
int
mov
sahf
inc
outsb
lret
xchg
sbb
fimuls
mov
mov
das
cwtl
mov
adc
mov
testb
mov
out
jl
and
cltd
jns
decl
cmpsl
loopne
mov
call
lock
pop
push
jmp
out
xorb
fcomp
mov
xlat
adc
sbb
in
cmp
mov
inc
mul
add
icebp
fcomps
in
lock
pushf
pop
jp
add
and
dec
shrb
cmp
rorb
fs
jbe
add
inc
xor
or
stos
jbe
xchg
push
jbe
inc
mov
sbb
mov
lret
std
in
or
mov
push
bound
or
jns
ljmp
jb
xor
or
arpl
iret
loopne
sbb
mov
fidivrl
sub
sahf
push
rcrl
add
insb
sub
jae
adc
mov
pop
icebp
xchg
push
and
cmpsb
cmp
incl
cmp
xor
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
sbb
push
movl
mov
mov
movl
xor
and
mov
adcl
add
push
push
pushl
call
mov
mov
mov
lea
movzwl
or
xor
mov
mov
mov
movl
cmp
movl
jne
xor
movl
jmp
and
mov
movzbl
add
movl
adc
movl
add
mov
orl
movl
movl
xor
mov
subl
mov
adcl
xor
sub
adcl
sub
movl
mov
movl
mov
movl
cmp
je
mov
movzbl
sub
mov
xor
movl
xor
andl
lea
mov
andl
xor
div
mov
mov
sub
or
mov
mov
subl
xor
movl
xor
sub
cmp
movl
jne
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
xorl
mov
andl
xor
movl
xor
adcl
add
adcl
add
mov
movl
cmp
jae
lea
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
xor
xorl
add
movl
lea
mov
movl
mov
movl
cmp
movl
jbe
xorl
addl
movl
jmp
andl
addl
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jb
mov
xor
inc
incl
add
movl
cmp
movl
jb
mov
mov
sbb
mov
mov
sub
xor
adc
add
sbb
xor
movzbl
sbb
mov
sub
mov
adcl
mov
xor
add
or
mov
mov
sub
xor
cmp
movl
jne
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
subl
jmp
dec
scas
sbb
pop
push
test
icebp
ret
aam
add
jl
pop
sahf
jae
sbb
addb
add
cwtl
xor
scas
bound
out
mov
in
adc
adc
xchg
out
push
fsts
mov
sbb
mov
outsl
scas
aad
dec
xchg
packssdw
arpl
insl
xor
pop
cmp
add
adc
inc
sbb
inc
hlt
xor
popf
xchg
jecxz
push
pop
jno
mov
jno
or
adc
adc
jae
adcl
fcmovnb
jmp
daa
or
pop
lcall
pop
stos
pop
jg
jo
mov
adc
dec
loopne
adc
pop
ret
xchg
clc
js
daa
push
cs
xchg
or
je
fdivs
push
xchg
pop
push
loope
xor
daa
mov
dec
jno
imul
lcall
and
ljmp
pop
jg
pusha
push
or
mov
mov
mov
popa
mov
or
rcl
cmp
mov
fprem
repnz
jle
insl
add
mov
fisubl
dec
jb
leave
or
outsl
mov
shlb
xchg
dec
aam
and
lds
add
into
xor
mov
xor
in
mov
mov
push
add
xor
pop
push
lea
dec
repz
adc
pusha
lret
shll
sbb
data16
in
xchg
mov
loope
les
sub
outsl
mov
in
out
lcall
mov
fcmovnbe
mov
push
xor
cmc
insb
add
fdivs
mov
insb
jnp
xchg
bound
lock
fdiv
xor
inc
loope
mov
sbb
mov
int
and
mov
push
js
loope
jge
movsl
insl
test
inc
lods
std
push
sub
out
cmpsl
les
adcb
daa
xchg
push
cmp
cli
out
ja
mov
pop
pop
in
out
push
pop
call
lcall
sahf
in
fs
adc
lret
add
cld
nop
sbb
rcrb
xor
scas
adc
loop
jb
mov
xor
cmc
out
mov
lods
stos
xchg
subl
lret
dec
xchg
adc
and
inc
cmp
sti
addr16
sahf
pop
je
push
mov
jo
rclb
into
ret
cld
ret
orb
mov
outsl
sub
mov
dec
jbe
or
int
jne
stos
cmp
add
push
push
push
ret
pop
sbb
push
pop
and
enter
cmp
mov
xor
sub
sahf
test
les
add
sub
daa
sbb
mov
xchg
es
ljmp
out
mov
lret
gs
aad
inc
xlat
cmp
xor
loope
repz
clc
out
add
je
mov
popa
aaa
loopne
xchg
jge
arpl
lret
and
cltd
iret
push
mov
jae
loop
fst
add
fmul
add
clc
cmp
pop
pop
inc
xor
adc
adc
fdivrl
mov
pop
dec
mov
pushf
cmp
dec
xor
aaa
cli
stos
and
inc
cmp
jne
lods
xor
mov
scas
loop
fadds
adc
push
mov
sub
or
jle
popa
push
mov
xorb
dec
or
push
and
mov
mov
inc
sbb
mov
push
push
xor
out
dec
cwtl
jb
and
sub
arpl
and
mov
sarb
add
inc
add
xchg
cmp
cmp
add
xchg
add
xor
sbb
subl
add
jg
cmc
cmpsl
cmp
inc
lahf
pop
enter
bound
cmpsl
cld
mov
negb
cmp
psubw
fiaddl
sub
dec
mov
stos
pop
aam
sub
repnz
lds
xchg
mov
sub
sbb
pusha
push
add
sub
repz
xchg
aaa
das
lds
rcll
jle
push
or
mov
movsb
movsl
add
pushf
push
rcr
in
aaa
test
mov
psllq
and
ljmp
add
lds
adc
in
adc
je
xor
cmpl
add
aas
lods
fildl
shrl
pop
in
cmp
mov
test
sbbb
push
orb
sub
inc
ljmp
in
test
pop
xlat
cmp
sbb
roll
out
xchg
int3
push
mov
sub
sbb
jb
mov
jo
pop
jg
push
mov
movsb
dec
jne
stc
jns
and
push
outsb
insl
lahf
pop
nop
inc
xchg
add
pop
addl
aaa
jle
ret
xchg
mov
dec
rorb
mov
imul
ror
lds
adc
fcoms
ret
xlat
cvttps2pi
inc
ds
negl
negb
ss
test
push
and
adc
sarb
lods
or
push
nop
mov
or
push
xlat
mov
mov
jnp
jno
imul
sub
fdivs
in
icebp
cwtl
out
mov
or
jns
ja
mov
pop
jg
test
rcl
xchg
push
enter
sub
push
push
push
mov
push
aad
je
xchg
lods
data16
mov
fists
push
sbb
xor
sub
cmp
jge
fisttpll
pop
xchg
push
ja
aaa
fwait
daa
js
xchg
gs
aad
add
push
lock
ss
mov
leave
inc
mov
iret
lea
pop
adc
test
fwait
hlt
and
ja
cmp
mov
repnz
add
ds
adc
sub
and
adc
pop
cwtl
cli
fbstp
in
cld
inc
popf
and
mov
jns
sbb
arpl
inc
mov
jnp
pusha
sub
ds
dec
and
daa
dec
ss
jge
xchg
inc
in
bnd
rcll
fcomip
add
into
inc
mov
and
dec
mov
int
and
outsl
push
movsb
adc
jns
push
jge
cmpsb
ljmp
stos
and
mov
rcrl
jnp
stos
jbe
xor
mov
dec
in
and
std
jg
or
jae
jmp
test
inc
rcll
scas
xchg
adc
cld
dec
xchg
xor
arpl
into
std
ret
sahf
inc
std
add
pop
mov
js
jle
sbb
test
insl
jmp
bound
pop
das
lock
je
adc
inc
fwait
outsb
push
dec
mov
gs
adc
xchg
jns
orl
in
addr16
xchg
sub
cs
or
rcrb
sub
fwait
jle
mov
inc
jae
js
jmp
lds
nop
mov
sbb
cmp
cld
or
push
test
stos
jns
sub
shrb
pop
xchg
stos
rcr
pop
or
popf
jge
icebp
or
and
cmp
pop
addl
mov
out
testb
test
sahf
icebp
addl
xchg
and
in
sbb
jno
add
cmp
push
adc
sbb
or
test
filds
cmpsl
stos
movsb
fwait
scas
cmp
inc
sub
mov
xchg
lcall
xlat
jle
jge
nop
popa
cwtl
pop
sub
mov
xor
sbb
leave
lahf
jge
bound
rol
mov
outsl
mov
mov
dec
ljmp
das
outsl
mov
test
cmp
test
xchg
jg
mov
cmpsl
mov
fstl
adc
adc
sub
ret
daa
and
mov
flds
mov
pop
ret
xchg
push
imul
lret
popa
pop
imul
mov
mov
into
pop
test
ret
sbb
push
out
imul
cmc
mov
in
mov
mov
and
cmp
mov
push
and
jno
aam
mov
pop
mov
xor
dec
xchg
and
imul
enter
cwtl
leave
pop
inc
stos
pop
add
leave
imul
cmpsl
movsl
jp
jecxz
pop
sbb
adc
pop
dec
lea
xchg
addr16
cli
push
cmp
mov
pusha
or
je
mov
push
in
push
mov
mov
pusha
sar
mov
ja
cmc
adc
sti
adc
lods
outsb
iret
sub
or
dec
mov
out
sub
sbb
inc
push
sub
push
add
out
mov
shl
jne
test
add
inc
add
push
in
faddl
jnp
sub
stos
sbb
inc
mov
mov
push
push
cmp
pop
sub
out
iret
sub
xchg
cmp
mov
jmp
dec
xchg
gs
sbb
mov
cmp
xor
push
jbe
mov
test
scas
jne
push
pop
add
ss
stos
sarl
in
push
mov
dec
pop
pushf
int
mov
xchg
inc
pushf
add
fistl
cmp
inc
dec
adc
call
shrb
mov
and
jne
dec
cs
pop
and
lahf
inc
mov
and
mov
movb
jge
and
fidivl
loopne
xor
inc
insl
rcrl
mov
loope
loop
xorl
fcoml
mov
and
aaa
orb
sbb
sar
stos
push
mov
mov
or
jne
or
jecxz
sub
filds
int3
outsl
lods
and
cmp
inc
xchg
cmp
jl
add
push
push
xor
dec
call
mov
xor
sbb
dec
mov
nop
mov
hlt
jb
aaa
scas
stc
adc
test
mov
xor
cmpsl
inc
adc
cmp
inc
addb
pop
mov
push
jg
addr16
mov
jmp
inc
scas
outsb
fisttpll
lahf
adc
xchg
cmp
ja
cmp
push
pop
jb
pushf
int
lock
mov
fisttps
ja
je
rcl
adc
cmp
jae
cmp
xchg
xlat
xchg
jne
gs
pop
cmp
jge
stos
xchg
add
cmp
jge
in
pop
cli
stos
xor
cmp
and
mov
and
jmp
dec
mov
insl
clc
dec
loopne
jbe
dec
jp
cmc
or
inc
lods
std
cmp
cmp
repz
mov
xchg
scas
push
add
dec
addr16
sarl
idivl
aam
mov
gs
gs
xchg
cmpsl
pushl
mov
mov
addr16
inc
mov
loope
sbbl
xor
push
sub
sti
mov
mov
iret
dec
jecxz
stos
or
inc
outsl
jp
inc
mov
daa
cmc
jne
mov
cmp
mov
sub
jo
sti
fwait
sbb
clc
mov
mov
cmc
jnp
jbe
lods
adc
push
cmc
push
add
shrb
mov
jg
inc
je
aaa
enter
adc
fwait
cmpsb
out
jno
xor
dec
mov
in
pushf
xchg
icebp
add
sbb
xor
lcall
xchg
fldcw
aam
aaa
aaa
xchg
les
or
push
or
xor
cmc
xor
xchg
pusha
mov
roll
loope
stos
pushf
push
push
out
push
ja
out
xlat
aaa
and
cli
jecxz
mov
xchg
and
inc
fstl
dec
repz
mov
or
sub
pop
jnp
les
insl
data16
dec
mov
inc
ret
cmp
call
mov
hlt
sub
xchg
cmp
ss
mov
in
pop
faddl
push
xchg
popa
xchg
and
sbb
push
jb
ror
mov
aam
test
shll
cmp
push
stc
jg
add
sbb
aad
add
pop
sub
jg
mov
inc
cmp
xor
mov
xchg
popf
xor
and
mov
sbb
inc
and
dec
cmc
cs
push
test
out
mov
inc
sub
rclb
mov
mov
jo
xor
dec
dec
subb
aaa
xchg
mov
in
nop
cli
jbe
push
xor
jne
popa
or
xor
or
jno
adc
mov
adc
test
fadds
jl
js
pop
pop
movsl
dec
les
xchg
mov
dec
jle
in
jae
addb
push
jbe
adc
dec
lahf
outsl
inc
xor
es
fnstcw
lret
std
pextrw
add
and
push
jl
xlat
mov
jl
lahf
inc
fsubrs
daa
sub
fstpt
div
test
call
cmpsl
mov
add
stos
insb
push
cld
sahf
cli
loope,pt
stos
jle
inc
ljmp
add
mov
nop
lret
pop
pusha
and
test
icebp
stos
jp
mull
sbbl
cwtl
cmp
xlat
xor
mov
xor
add
loope
mov
xchg
js
xchg
mov
xor
push
fcoml
pop
enter
inc
jp
push
test
lds
dec
int
mov
data16
sbb
jb
jl
lods
stc
sub
cmp
mov
and
addr16
cmpb
mov
jg
js
mov
xor
mov
xchg
imul
rol
test
cli
leave
adc
sub
int3
dec
pop
in
popa
out
daa
fiaddl
out
add
imul
aad
and
xchg
mov
addr16
or
arpl
push
sbb
inc
xchg
leave
add
inc
cmp
cmc
ror
xor
pop
lret
mov
ret
bound
sub
add
andb
divb
aam
add
xor
xor
or
jbe
push
scas
scas
pop
mov
sub
cmp
pop
or
mov
sbb
xor
mov
iret
mov
std
adc
inc
xchg
lahf
sub
dec
add
call
movsl
cld
mov
sbb
adcb
sbb
mov
dec
adc
call
jne
pop
into
adc
cmp
dec
or
mov
test
sbb
mov
dec
imul
sub
dec
and
lahf
adc
mov
push
hlt
cmp
fstpl
test
call
push
push
mov
and
loope
mov
push
adc
fisttpl
out
push
dec
inc
sti
jne
lock
lods
sbb
mov
xchg
push
aas
xlat
loope
daa
sbb
add
fistl
setp
roll
adcb
push
jne
inc
mov
jl
sbb
xchg
lods
call
test
js
bnd
js
test
sub
orl
add
mov
dec
dec
dec
push
movsl
ret
adc
mov
jno
cs
fdivrs
stos
fs
aad
inc
hlt
out
adc
ret
mov
xchg
cwtl
jle
xchg
out
mov
andl
mov
xchg
xor
imul
sbb
gs
adc
push
mov
inc
dec
cltd
jnp
arpl
rolb
stos
in
mov
fsubrl
stc
mov
repz
fidivrl
mov
pop
dec
cmp
call
stc
cmpsb
divl
and
pop
jbe
std
popf
pop
adc
push
subb
adc
ja
call
cwtl
mov
leave
iret
scas
xchg
fwait
xchg
or
negb
gs
xchg
add
dec
dec
sbb
jb
lret
jmp
decb
movsb
pop
pop
xchg
pushf
clc
sub
jbe
lret
js
inc
popl
add
and
imul
push
sbb
cmp
sahf
and
inc
sbb
rcl
scas
div
stc
aad
add
jno
jle
sbb
cmp
cmc
sti
inc
in
cwtl
or
lods
mov
jbe
mov
arpl
adc
ja
das
aam
xor
pop
ss
fsincos
ror
enter
push
push
std
lods
jg
rorb
mov
push
out
dec
jp
xchg
in
test
fidivrs
fs
loop
dec
mov
outsl
mov
inc
push
loopne
dec
and
lock
xchg
daa
mov
fwait
xchg
call
in
clc
push
jne
mov
mov
mov
rcrb
lods
pop
add
pusha
inc
cmp
scas
sarb
xor
cmpsl
jb
xchg
sub
das
adcb
aas
loopne
jbe
push
mov
jmp
cmp
test
xor
mov
push
out
jmp
cmc
mov
mov
fstpt
sub
imul
dec
xchg
xchg
push
js
je
pop
movsb
js
aas
cmp
sar
adcb
sbb
mov
xchg
xchg
imul
jbe
dec
mov
leave
fdivl
or
jae
stc
imul
fidivs
lods
inc
mov
xchg
aas
pushf
or
cmc
dec
out
in
cmc
mov
repz
push
or
pop
das
sbbl
inc
or
and
sbb
bnd
push
add
ljmp
aas
jmp
xorl
addl
pop
and
xor
mov
shl
inc
test
jb
nop
pop
xchg
push
mov
test
adc
and
std
mov
xchg
or
in
icebp
ja
out
arpl
mov
add
dec
pop
rcrl
lods
xor
fsubp
mov
lock
xchg
mov
mov
xchg
cmp
mov
stos
packuswb
mov
repnz
mov
nop
idiv
xchg
inc
mov
xor
mov
or
ret
pop
sub
mov
mov
mov
xchg
inc
add
jge
pop
xchg
pop
pop
mov
push
std
mov
in
cmp
daa
dec
or
adc
push
push
and
incl
cmp
test
cltd
mov
mov
lock
ds
jbe
pop
stc
and
fmuls
mov
roll
pop
cmpl
sub
pusha
adc
mov
nop
jl
pop
cwtl
pop
push
fimuls
adc
pop
xor
and
adc
icebp
lods
cwtl
sbb
lods
adc
mov
add
add
sub
xor
divb
sub
gs
imulb
loope
imulb
out
insl
cltd
aaa
jle
dec
sub
imul
adc
sbb
dec
jb
mov
dec
cmp
call
dec
das
imulb
movsl
jp
leave
lock
ret
cld
mov
in
xorl
test
lret
jge
sbb
fistpll
jno
lcall
scas
dec
and
imul
enter
sub
enter
sub
lods
icebp
mov
jo
xor
xchg
push
mov
imul
js
cltd
jne
mov
xchg
test
mov
jecxz,pn
enter
push
inc
sbb
pop
push
dec
pop
sub
pop
out
loop
adc
fidivrl
sbb
jp
add
stos
aas
enter
jge
xchg
mov
leave
cmc
mov
fmull
test
sbb
loop
outsb
add
jmp
fimuls
bound
loope
mov
nop
or
mov
push
xor
cmp
push
mov
cmpl
sbb
dec
out
ret
and
clc
and
clc
jno
push
repz
mov
pop
dec
lods
stos
shl
test
push
adc
pusha
add
mov
aam
sub
loopne
jmp
stos
rol
or
js
xchg
add
aam
cli
cmp
bound
int3
xchg
addr16
jbe
inc
cwtl
ret
pop
test
leave
inc
sbb
loop
jmp
mov
lret
sbb
jg
push
pop
cltd
jne
cltd
adc
mov
mov
mov
out
pusha
loopne
mov
push
sar
jbe
loop
test
cmp
fstl
xor
fists
icebp
mov
jae
hlt
frstor
push
and
jae
sbb
adc
cld
xchg
int3
or
insb
fimull
cmpsb
cwtl
inc
mov
mov
loopne
std
rcr
dec
je
out
cmpl
pop
stc
sbb
das
das
sbb
pop
rorl
mov
test
test
lods
jge
movsl
xor
adcl
sbb
icebp
push
dec
mov
inc
or
iret
push
fldcw
test
fldenv
subl
in
es
mov
mov
push
push
sbb
and
inc
fisubl
sbb
imul
pop
mov
mov
cmp
movsl
incb
pop
add
insb
mov
or
pop
sbbl
out
loopne
push
out
and
into
lea
test
fidivs
or
icebp
in
adc
sbb
imul
mov
add
dec
xchg
enter
mov
icebp
mov
xor
pushf
call
daa
add
dec
push
test
xchg
push
sbb
lahf
add
cmp
xor
sbb
les
insb
adc
sbb
push
shll
addr16
fistpl
push
test
mov
fldenv
sub
add
scas
cmpsb
outsb
fnstcw
sub
hlt
leave
jno
ror
dec
clc
mul
push
addr16
orl
pop
out
popa
arpl
xor
mov
pop
push
pop
lods
hlt
mov
jnp
addl
pop
dec
pop
cmp
sub
ja
cltd
adc
pop
add
mov
inc
hlt
push
mov
nop
out
add
clc
pop
test
inc
movsb
inc
lods
sbb
mov
sub
daa
aaa
xor
or
out
jecxz
jnp
jmp
push
xchg
push
pop
cli
or
cmp
pusha
dec
xor
mov
test
stos
and
call
lea
test
sub
out
lret
out
pushf
int
es
and
mov
call
clc
into
inc
fnsave
shll
add
insl
pop
mov
jnp
lock
add
loope
imul
xor
jo
lret
sub
repz
dec
xchg
lahf
add
scas
int
lods
scas
xchg
in
rcll
outsl
xor
or
sahf
mov
scas
aaa
fisubrl
adc
outsl
int3
lods
rcrl
sbb
add
pop
cmp
movsb
inc
pushf
sarl
mov
sub
scas
pop
ficoml
inc
cmp
leave
inc
out
call
push
add
xor
inc
pop
leave
pop
test
out
inc
dec
or
imul
subb
shll
cmp
outsb
ja
loopne
fwait
test
sahf
out
fcmovbe
mov
jge
inc
nop
mov
or
sub
sbb
insl
mov
push
sahf
and
aam
or
and
jno
cltd
mov
or
movsl
mov
movl
scas
mov
push
stc
pextrw
mov
adc
pop
ss
retw
adc
push
in
pop
loopne
call
and
jl
mov
jecxz
in
cmp
aam
mov
gs
jge
icebp
xlat
push
push
movsb
mov
movsb
xchg
dec
cmpsl
cmp
insb
add
sub
add
test
mov
int
or
add
xchg
jge
pop
ret
popa
and
jbe
lcall
push
fdivrl
aam
push
mov
xchg
and
xor
stos
pop
loope
mov
fsubrs
cmp
pop
int3
push
xchg
push
pop
mov
sti
add
aad
iret
loopne
mov
adc
xor
int3
jb
push
int3
add
dec
lahf
stos
ret
out
cli
js
mov
pop
in
cmp
add
lcall
rcrb
fs
cmpb
icebp
fnstcw
sbb
adc
sbb
add
daa
mov
mov
ret
std
lret
push
mov
jle
cmp
adcl
dec
sub
adc
mov
add
or
xor
cmp
add
or
inc
dec
pop
mov
cmpsb
mov
mov
adcl
stos
mov
pop
sbb
pop
pop
or
inc
sahf
aam
enter
icebp
pop
dec
xchg
test
loopne
dec
mov
sti
and
enter
or
stc
pop
pusha
mov
sub
shlb
scas
xor
xor
out
cmpsl
stos
push
fstl
mov
outsb
xlat
mov
mov
insl
mov
mov
outsb
fs
pop
xchg
jge
xchg
in
into
ret
sbb
daa
jnp
lods
or
insb
sub
repnz
xchg
pop
pop
mov
sub
push
sbb
push
mov
cld
test
shlb
cmp
inc
sbb
jbe
rdpmc
mov
addr16
adc
loopne
mov
mov
out
cli
mov
or
push
mov
sub
fwait
push
daa
pusha
and
sti
dec
inc
jns
and
bound
sub
or
movsb
dec
mov
daa
mov
mov
mov
sbb
subb
jbe
pop
fisubrl
mov
cld
jne
adc
pop
in
jp
out
or
sbb
dec
or
int3
sub
mov
xor
aaa
adc
push
inc
add
adc
xor
cmp
push
sbb
into
fcomip
insb
cmp
std
mov
or
and
mov
sbbl
xor
scas
adc
insl
xchg
mov
xchg
push
jecxz
es
hlt
leave
loop
shlb
cltd
push
cwtl
sti
sbb
push
hlt
cmp
stos
loope
aas
cmp
cmp
push
popf
push
mov
push
mov
xchg
cmpsl
popf
pushf
in
rcrl
xchg
or
push
jns
adc
incl
jne
push
fsts
mov
out
mov
lret
push
ret
in
inc
ds
imul
lock
into
enter
shl
rolb
sbb
or
es
sub
sub
pop
sti
push
iret
xor
decl
ret
iret
xchg
je
loope
arpl
push
inc
mov
or
aaa
jge
lret
jmp
jecxz
lcall
xor
jns
sub
jle
aad
dec
imul
sbb
cmp
aam
fsubrl
and
dec
dec
out
add
loope
cld
mov
hlt
add
mov
inc
mov
lret
loop
mov
call
cmp
cmp
stc
int3
cltd
ljmp
aam
add
ret
int
rcrl
popf
fst
jle
insb
pop
or
outsl
clc
imul
ss
leave
pushf
mov
imul
popf
inc
inc
fbstp
cmp
push
inc
fwait
and
inc
in
adc
cltd
or
out
pop
pop
xor
lea
push
and
pop
out
xchg
jmp
inc
xchg
push
loopne
lea
outsl
mov
ret
arpl
aam
sub
lcall
sbb
cmp
jns
xor
jnp
dec
scas
mov
bound
loopne
cmc
enter
add
lods
xlat
xchg
ffree
mov
sub
xchg
dec
sub
cmp
jae
mov
aad
shrl
push
adc
push
fs
sbb
dec
sbb
xchg
in
and
and
roll
pusha
imul
jp
adc
repz
jbe
test
std
ret
fstpt
mul
or
sub
pushf
dec
incb
popa
adcb
fwait
clc
cld
inc
pop
rcrb
inc
call
iret
mov
ds
fildl
lds
adc
cmc
in
ds
outsb
rcll
mov
subb
pushf
stc
jge
add
ljmp
filds
ret
cli
jg
stc
cmpsb
sub
jp
sub
mov
mov
mov
lds
in
in
jae
and
pop
insl
in
lods
cwtl
inc
xchg
loopne
in
sbb
mov
jg
jge
es
mov
and
push
adc
pop
jg
cwtl
repnz
cltd
andb
out
xor
ds
push
adc
push
jne
xor
xchg
rcrl
cld
aas
sahf
clc
mov
or
addr16
push
xor
mov
sub
jns
or
xor
xor
in
mov
or
movsb
push
mov
sbb
lret
sub
jbe
add
pop
insl
aam
out
mov
jl
shll
jne
pop
mov
enter
sbb
jmp
sbb
icebp
mov
xchg
inc
test
xlat
sbb
adc
ljmp
inc
scas
lret
out
add
mov
sub
cmp
cli
movsl
test
scas
pop
mov
cmpsl
xchg
xlat
pop
pop
dec
cmc
mov
push
mov
data16
lret
cs
jmp
xorps
mov
ss
outsb
das
or
mov
iret
lret
stos
mov
add
dec
sub
test
dec
mov
int
mov
insb
and
xor
jmp
arpl
loope
das
push
push
pop
out
popf
fnstcw
std
adc
jmp
add
aam
jne
movsl
add
push
lcall
insb
pop
push
hlt
loopne
inc
leave
lahf
lret
iret
pop
or
mov
cmp
push
es
xchg
push
mov
xor
and
in
fisubrs
inc
adc
sub
inc
ret
mov
fsts
negb
xchg
pop
or
ljmp
fnstsw
mov
add
dec
lods
xor
pop
iret
ret
test
lcall
mov
out
push
test
and
aad
xor
mov
push
dec
mov
mov
xor
std
or
sbb
cmpsb
mov
cli
or
outsb
xchg
mov
push
imul
out
jne
or
sub
sub
sub
leave
push
icebp
mov
mov
push
mov
mov
push
jae
repnz
xor
int3
push
lds
dec
shr
fistpl
es
push
ds
arpl
add
inc
dec
popa
popf
dec
movsl
inc
dec
push
xchg
sbb
js
mov
imul
pop
sti
mov
data16
aaa
mov
shll
xor
push
mov
repz
pop
cmpsl
xchg
inc
fs
adc
xchg
sub
pusha
jecxz
addr16
cmp
and
push
push
test
outsb
andl
call
shrb
mov
ror
movsb
inc
xor
fstpt
movsl
mov
dec
inc
cmp
cwtl
mov
sbb
leave
pop
cmpb
jae
sub
mov
add
in
leave
cli
inc
mov
pop
xlat
jge
jae
inc
pop
fcom
adc
outsb
dec
cld
leave
push
fdivrp
dec
mov
repnz
in
scas
or
pop
xlat
mov
push
aas
or
or
cmp
std
in
mov
clc
or
sub
push
push
pop
or
push
ret
imul
jl
ja
add
mov
dec
pop
negl
test
adc
daa
cmp
jbe
or
daa
dec
push
movntq
fstps
in
into
out
ret
adc
adc
sbb
jmp
mov
cltd
jns
pop
mov
xchg
push
fldl
loop
and
cmp
or
ds
or
andb
pop
fsubrs
cwtl
incb
lret
and
push
int3
pop
sbb
or
add
push
mov
mov
xchg
sub
inc
ss
inc
pop
lds
sub
ljmp
je
xor
incl
sub
mov
sub
xor
orl
mov
decl
mov
xor
adcl
sub
addl
sub
movl
jmp
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
dec
mov
sub
add
mov
mov
cmp
jne
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
or
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
movl
mov
adc
mov
sub
movl
orl
movl
xor
mov
mov
sbbl
xor
sub
addl
sub
mov
movl
movl
mov
mov
movl
cmp
je
and
jmp
andl
and
xchg
mov
sbb
jl
pop
sahf
jae
out
fbstp
jae
icebp
jb
out
dec
out
filds
mov
cmpsb
xor
pop
sbb
int3
loop
out
mov
mov
pop
adc
adc
xchg
and
pop
sbb
enter
scas
dec
dec
movsb
and
pop
jno
mov
jno
out
in
aas
fistl
pusha
scas
loope
sub
sbb
imul
sub
test
orl
testl
fnstcw
testb
daa
mov
xlat
lret
in
scas
xor
dec
xchg
aaa
data16
mov
jae
gs
cs
popa
out
insl
mov
imul
adc
imul
test
mov
add
popa
out
pop
lret
out
push
cmp
xor
sub
stos
imul
push
aas
fwait
into
xor
xchg
sub
mov
loopne
dec
ret
push
fimull
out
pop
push
adc
subb
push
and
ja
push
aas
adc
dec
sbbl
movsl
in
push
jo
mov
or
jae
inc
std
lock
mov
push
mov
xor
mov
mov
xchg
clc
stos
lods
pop
pop
jae
call
mov
call
add
mov
pushf
cs
call
cmp
pusha
sub
cs
mov
pop
sub
imul
add
mull
std
pop
mov
jmp
mov
cmp
adc
repz
mov
and
pop
xor
push
jbe
gs
inc
out
enter
and
jge
push
xchg
std
xchg
lock
cltd
or
nop
xor
xchg
dec
outsl
push
fidivrs
out
xchg
movsl
push
sbb
mov
xchg
sub
aaa
mov
jge
fidivs
lds
xchg
pop
sbb
repnz
jae
push
add
xlat
fildl
jmp
jmp
dec
shlb
data16
in
jbe
pop
scas
sti
push
inc
xor
pusha
fadds
xor
jns
and
inc
mov
lahf
xor
lds
jo
fidivs
sbb
cmp
or
test
shlb
je
popa
loopne
pop
mov
cmp
out
pop
mov
mov
mov
fcomip
mov
in
adc
push
mov
stos
cmp
rolb
mov
in
nop
inc
loopne
sub
or
mov
dec
or
fbld
push
mov
pop
adc
push
rcl
cmp
test
mov
push
dec
sub
sbb
pop
mov
xchg
dec
pop
xchg
clc
movsb
out
mov
sub
in
jb
jns
xor
inc
dec
popf
dec
jo
xor
jecxz
sbb
daa
mov
stos
in
and
test
cwtl
add
xchg
inc
pop
shrl
lcall
pop
inc
js,pt
xchg
out
rorb
aaa
pusha
in
fdivrs
leave
pop
dec
xchg
add
es
add
hlt
jo
in
sbb
les
push
test
les
shrl
mov
and
rolb
imul
ret
add
lods
out
xchg
jp
mov
stos
aas
jno
mov
cltd
les
mov
adc
imulb
movsb
jno
mull
in
insl
mov
sub
or
lea
push
or
and
mov
rclb
std
xchg
push
leave
shlb
jl
test
jg
out
aas
pop
popa
dec
popf
and
jg
mov
loopne
add
les
shl
mov
roll
push
mov
sub
subb
or
cli
fisttpl
jecxz
inc
stc
call
push
mov
mov
test
mull
jno
mov
loop
aad
idivl
je
xchg
hlt
adc
mov
shl
inc
mov
xchg
xchg
add
mov
je
fs
out
dec
aad
mov
mov
push
aas
mov
mov
mov
out
dec
rcrl
cmp
cmovl
hlt
pop
scas
pop
mov
cmpsl
dec
popa
lock
jp
push
lods
xlat
add
les
cmp
clc
fildll
xor
fstl
fbld
loope
jl
sbb
push
add
movsl
loop
nop
lods
hlt
mul
fwait
inc
in
insb
push
mov
es
addb
test
cmp
sahf
mov
out
pop
sbb
rclb
mov
mov
dec
stos
dec
adc
mov
imulb
jge
push
mov
xchg
shll
mov
das
leave
jecxz
cmp
jp
mov
push
sub
push
inc
das
xchg
cmpsl
popa
jbe
xchg
mov
and
xor
mov
mov
xchg
push
outsl
lret
pop
aam
push
gs
loope,pn
fiaddl
jnp
push
ja
xor
push
xor
les
aam
mov
sar
scas
xchg
paddd
pop
daa
mov
sbb
push
sbb
sbb
mov
adc
inc
sbb
leave
scas
pop
or
inc
mov
repnz
cmpsb
pop
in
je
xchg
mov
jns
add
cmc
fwait
jg
loopne
adc
mov
xchg
xchg
push
lea
or
adc
lods
pop
fimull
pop
stos
repz
dec
nop
repz
inc
repz
and
fistl
and
ds
out
xor
mov
add
jle
gs
repnz
jmp
push
rep
lcall
xchg
push
inc
lds
or
add
jmp
sbb
mov
push
cmp
js
imul
test
imul
push
adcl
mov
mov
add
xor
push
aam
push
xchg
lahf
cmc
cs
out
std
push
ds
shr
cmp
sub
cltd
xlat
lds
push
jnp
ja
pusha
add
push
pop
push
xchg
aad
push
mov
iret
arpl
lds
setno
and
insl
or
jnp
xchg
ja
fcoms
push
pop
or
sarb
in
xor
imul
or
lret
je
decb
push
fnsave
pop
aaa
cmpl
ja
lods
sahf
sbb
lea
fucomip
cs
adc
inc
je
rcl
add
mov
push
mov
xor
pop
mov
add
lret
sbb
or
fwait
pop
out
xorb
mov
test
jge
cmp
and
xor
addr16
fcomps
ret
and
xchg
cwtl
sub
cmp
mov
subl
popf
push
hlt
mov
arpl
mov
jns
dec
mov
inc
aaa
popf
int3
xchg
out
cmp
mov
testb
dec
shll
mov
rolb
pop
xor
or
xlat
push
mov
mov
in
push
push
inc
mov
loop
ret
fcomps
push
jae
sub
jle
mov
enter
loop
imul
fidivrs
xor
ret
sbb
sar
in
xchg
into
cmc
sub
dec
xor
jp
or
cmpsb
xchg
test
popf
scas
outsb
sbb
loope
push
adc
cmp
dec
mov
push
enter
jne
loop,pn
rcl
insb
sbb
movsl
loope
cmc
js
xor
fadd
repz
adc
and
sub
pop
jecxz
sbb
aad
jecxz
pusha
test
jmp
movsl
aad
daa
cmp
fiadds
mov
shlb
fistpll
aam
popa
jno
addr16
pushf
scas
jecxz
add
jns
pop
ret
lock
out
xchg
out
and
addr16
xchg
mov
out
negb
adc
ss
push
movsl
pop
cmp
mov
clc
xchg
lds
fcoml
sub
frstor
mov
jne
mov
das
daa
ror
xchg
pop
add
pop
mov
mov
aas
dec
cmpsl
dec
ja
sahf
inc
call
xlat
sub
dec
pop
fcmovnbe
and
pop
pop
jb
rcll
fwait
insb
out
dec
ljmp
test
xchg
into
cmp
cltd
lods
sub
bound
adc
jle
jecxz
add
and
or
pop
jbe
xchg
loop
pop
and
hlt
sbb
or
mov
or
jecxz
or
sarl
xchg
lods
testl
repz
sub
lret
xchg
or
ljmp
or
mov
insb
pop
les
xlat
jmp
sarb
outsl
push
js
shlb
and
xor
cmp
push
clc
mov
lock
dec
outsb
xchg
mov
xchg
lahf
push
pop
hlt
jg
mov
pushl
and
pop
mov
cld
add
sti
inc
mov
pop
sahf
popa
popa
jno
sbb
pop
pop
repnz
ret
mov
orb
jmp
lds
sahf
adc
push
dec
jo
aam
paddusb
sbb
addl
sbb
or
mov
push
dec
jbe
xchg
push
xchg
aam
popa
add
scas
fcoml
push
and
pusha
int3
jmp
inc
fstpl
push
aad
sti
testl
sbb
insl
mov
push
sub
scas
loope
icebp
adcl
mov
jp
inc
loop
in
xchg
push
xorb
fidivrs
lret
add
cmp
push
ljmp
mov
sbb
imulb
cmp
or
mov
imul
les
mov
hlt
xchg
enter
adc
push
or
jbe
pop
aas
aas
inc
mov
pop
or
and
aad
inc
mov
popa
jae
outsb
pop
loope
or
jae
push
in
push
loop
cli
jb
aad
dec
mov
aaa
xchg
jo
jne
and
insb
lret
inc
insl
cmp
test
lock
cmp
inc
loope
imul
inc
mov
imul
and
mov
mov
out
add
or
xlat
mov
or
xorl
and
js
cmc
inc
sbb
xchg
stc
sbb
mov
mov
mov
push
movsb
pop
cmc
cmp
into
jp
sub
shl
mov
lods
pop
outsb
pop
dec
dec
pop
lods
jb
xor
push
ret
or
std
enter
and
aas
xchg
mov
mov
shlb
cmpsl
jle
xor
idivl
mov
cs
sub
xchg
xchg
lds
stos
dec
out
cmpsb
andb
mov
adc
je
mov
fcompl
jl
fwait
add
xchg
cli
mov
mov
dec
sbb
cmp
lcall
sbb
cmp
push
xchg
sbb
int
ret
fcomp
std
pop
loopne
pop
pop
inc
push
xchg
das
es
in
and
addl
sbb
rcrb
dec
lock
jb
add
lahf
stos
jle
pop
sbb
xor
test
dec
nop
pop
mov
in
test
scas
int3
inc
outsb
outsb
in
subb
push
jnp
dec
sbb
sub
rcl
sub
jmp
adc
mov
mov
xchg
dec
pop
adc
test
jbe
sbb
dec
inc
out
faddl
mov
bound
mov
adc
lcall
addr16
dec
imul
inc
mov
mov
rcrl
sbb
xchg
das
sbb
mov
out
mov
out
fs
repnz
cmpsl
mov
push
sub
addb
inc
or
aaa
cmpsb
jno
mov
push
push
add
dec
cld
pop
xchg
divl
out
scas
push
add
arpl
fsubr
das
gs
sahf
jo
mov
adc
mov
pop
mov
xlat
and
xorb
lret
scas
fs
cli
out
push
mov
outsb
inc
jne
lret
xor
and
popa
out
xchg
adc
jns
add
clc
cs
rolb
fistps
xchg
push
push
xor
jg
imul
adc
adc
jmp
mov
addr16
add
cmc
dec
cld
mov
jno
dec
dec
lahf
xchg
sbb
xor
pushf
call
sbb
fimull
mov
iret
mov
stos
push
push
pop
push
push
std
fisubl
or
push
xchg
out
insb
inc
fcompl
icebp
cmpsb
jmp
call
xchg
and
inc
fcoms
pop
xchg
mov
push
dec
mov
cs
or
mov
cltd
repnz
ja
scas
adc
and
dec
inc
sub
fwait
call
subl
lahf
iret
cltd
inc
lods
adc
lods
push
jo
xchg
mov
ljmp
or
xor
aas
dec
leave
movlhps
jmp
icebp
in
ss
shl
mov
aaa
mov
sbb
sub
sbb
shrb
ret
sub
test
jns
insl
lahf
xlat
cltd
ficoms
mov
push
rorb
fstl
sub
xchg
call
rcrb
mov
icebp
jp
push
aam
dec
dec
add
mov
xchg
mov
inc
sbb
cwtl
pop
test
cmpsb
in
pop
pop
movsb
inc
xchg
inc
or
jmp
push
movsb
mov
jecxz
sub
sub
adc
pop
mov
mov
inc
stc
jnp
fisttpll
sbb
orl
mov
lds
sbb
orb
mov
pop
xor
lods
imul
xor
aas
ja
jg
fwait
out
ret
dec
mov
dec
sbb
jbe
bound
and
push
enter
jecxz
pop
outsl
mov
fadds
stc
jl
dec
cmc
incb
push
xor
inc
xor
shlb
push
out
push
ret
out
ljmp
movsb
lods
or
pop
inc
jae
xchg
loopne
js
test
xlat
add
orb
lret
in
mov
mov
jecxz
mov
shlb
sub
les
test
in
or
sbb
enter
and
xchg
xchg
call
bound
sbb
subb
cmpsl
mov
pop
outsl
aaa
cltd
push
sbb
push
and
nop
dec
adc
cmp
push
repz
and
jmp
inc
repz
loope
arpl
adc
in
lods
fisttps
push
inc
or
incb
icebp
push
xor
lods
push
inc
jb
fwait
sbb
push
mov
sbb
mov
arpl
in
or
test
in
sarl
xor
cmp
sbb
shlb
lds
xchg
clc
iret
pop
mov
cmp
outsb
pop
dec
add
gs
insl
inc
test
or
mov
sbb
pop
mov
insl
sub
sbb
adc
cmp
dec
stc
push
test
in
xor
out
dec
notb
add
dec
arpl
ret
lret
stos
xchg
ret
ds
inc
xchg
cli
cmp
jb
pop
es
in
push
push
push
jns
stc
mov
xor
push
push
or
sbb
sbb
adc
stos
xchg
rcr
aas
dec
sbb
lcall
dec
insl
sub
aam
jo
outsl
add
cwtl
loope
jno
shl
push
dec
rorb
sbb
loopne
dec
jno
insb
outsl
cmp
orl
lret
sarl
jne
and
test
js
push
inc
mov
sbb
insl
inc
in
js
sarl
out
xchg
orl
int
ffree
leave
lods
lret
adc
hlt
leave
push
hlt
push
imul
popa
cmpsl
dec
jmp
dec
aad
jle
sub
mov
dec
pop
push
sbb
xlat
inc
xor
dec
nop
adc
pop
aad
sbb
xorl
adc
ret
jge
ret
cmp
mov
movsl
xchg
icebp
xchg
scas
sub
add
xchg
sbb
pop
adc
mov
add
or
sahf
scas
stos
cmc
mov
aas
lcall
inc
loope
pop
adc
bound
cwtl
push
cli
jns
mov
xor
xchg
cmp
pop
scas
test
xchg
inc
push
loopne
mov
loopne
pushf
xchg
std
rorl
push
cltd
subb
pushf
lahf
xor
sub
dec
test
pusha
mov
daa
stc
add
dec
dec
stos
pop
scas
inc
push
adc
js
mov
adc
fisubl
shrb
in
out
popa
sbb
dec
cmp
xor
dec
mov
scas
mov
cmp
dec
push
out
sbb
pop
cmp
adc
enter
jne
or
stos
out
rorb
xchg
push
loope
jns
mov
sbb
insl
insb
and
filds
leave
aaa
cmc
cmp
ret
cli
fst
lret
xchg
data16
push
inc
aaa
lret
sarl
jbe
push
sti
push
inc
lret
adc
int3
add
es
mov
adc
add
jno
ljmp
js
insb
mov
out
bound
mov
or
adc
pop
test
and
pop
xor
or
inc
aas
rcr
sbb
mov
sahf
aaa
adc
and
jg
mov
out
gs
subb
aaa
ret
arpl
push
ss
cmp
or
sbb
pop
shl
imul
imul
dec
comiss
xchg
push
lcall
dec
lea
xchg
fcompl
lods
mov
or
inc
fcomp
dec
ss
test
or
cmp
push
scas
loop
rcl
test
push
or
xor
lret
xor
js
push
jbe
arpl
adc
mov
rcrb
mov
xchg
adc
add
xchg
aas
xchg
jmp
mov
loope
add
dec
mov
or
sarb
push
lock
fdivl
cli
or
mov
xchg
mulb
jg
xor
pop
arpl
xchg
lock
test
fmul
aam
xor
pop
daa
sub
cmc
fsubrl
shll
xlat
xor
adc
xor
jmp
in
arpl
push
inc
xchg
jno
push
xchg
test
in
sbb
cs
and
aaa
jbe
adc
inc
out
mov
push
mov
mov
jns
cmp
jl
dec
mov
xor
xchg
aad
mov
hlt
int3
add
lods
or
ja
xor
jle
xchg
sub
dec
mov
lret
outsl
jb
jo
repz
scas
hlt
mov
aaa
divl
sub
sub
xor
cmp
dec
push
push
mov
cmpsl
inc
ret
data16
mov
mov
jns
sub
cld
pop
popf
jo
or
movups
nop
fbstp
mov
adcl
jo
push
sub
stc
gs
mov
in
jp
mov
push
out
xor
or
in
adc
inc
push
xchg
and
sub
nop
jmp
dec
sub
subb
cmp
sbb
jp
std
lret
insl
or
lret
shrb
fwait
xchg
test
imul
int
dec
pop
inc
inc
adc
and
xchg
xchg
xorl
push
mov
xchg
adc
std
push
mov
push
pop
sbb
pusha
mov
int
jg
mov
lahf
push
aad
iret
sbb
rorl
aam
lods
xor
pop
out
out
xor
pop
sbb
int
notl
sub
sub
mov
xor
jge
cmp
add
or
bnd
mov
pop
add
push
mov
xor
mov
incb
ljmp
cld
js
mov
jle
or
test
cmpsb
test
shrl
enter
pop
xchg
dec
iret
int
ja
loope
bound
scas
dec
lods
add
add
mov
cli
fstpl
push
fcmovnu
fwait
inc
ja
inc
pop
push
inc
std
fdivs
shll
call
jle
sub
mov
add
mov
std
xlat
inc
mov
jp
out
nop
stos
add
je
sub
mov
pop
mov
dec
adc
adc
lret
gs
insl
push
aad
fmul
add
or
mov
iret
shl
aas
mov
jbe
dec
push
inc
mov
out
lcall
push
mov
add
enter
add
clc
addl
push
jnp
cmp
dec
call
jle
dec
cmp
adc
cltd
jl
dec
xorb
aas
mov
inc
push
or
dec
push
push
sar
pop
ss
dec
add
mov
jmp
xorl
aas
jmp
sbb
clc
test
pop
shll
inc
fldcw
negb
mov
ficoms
mov
addr16
aad
or
test
mov
mov
cs
xchg
out
sub
inc
pop
adc
fnstenv
pushf
xor
mov
addr16
lret
in
cmc
cld
clc
mov
int3
test
pop
daa
imul
or
shll
notl
mov
push
std
push
xchg
mov
push
cmp
inc
xchg
cld
or
sub
fcmovbe
aas
std
addr16
cmp
cs
fsubp
mov
imul
lock
testb
setns
aas
add
scas
fucom
pop
pop
sbb
xor
push
call
add
sub
mov
and
popa
mov
lock
dec
jecxz
rcrl
pop
int
test
repnz
ds
add
or
stos
test
inc
mov
or
mov
frndint
lcall
sahf
scas
nop
rorb
js
xchg
jp
out
inc
dec
cltd
push
pop
je
pop
fbstp
pop
mov
mov
adc
in
and
push
insl
adc
xorl
int3
fidivrs
sti
jae
lock
imul
jl
imul
loopne
stc
bound
int3
pop
mov
sbb
outsl
push
dec
lret
jp
aad
aas
in
or
sahf
mov
sbb
sbb
inc
xlat
and
pop
fmul
pusha
dec
andl
jnp
mov
sub
mov
js
dec
fisttpll
push
out
xchg
xchg
dec
dec
in
scas
rcrl
lock
adc
jne
xor
xor
mov
in
sub
mov
sbb
mov
xor
ss
mov
inc
gs
inc
push
push
mov
fldt
or
outsl
cmp
mov
push
jle
movsl
dec
rorl
sub
scas
into
je
cmp
xor
mov
cltd
mov
mov
sub
push
orb
fidivl
push
pop
not
mov
jo
pop
ljmp
das
xor
dec
inc
sbb
stos
cwtl
mov
cmc
lret
notb
mov
ret
adc
addb
jo
jo
push
xchg
sbb
inc
sub
or
movswl
inc
mov
mov
cld
push
sbb
push
adc
fs
rolb
inc
adc
in
jo
cmpsl
ud2
push
in
dec
jmp
mov
mov
xlat
or
adc
out
cs
adc
into
ror
lods
loopne
cli
into
bound
cli
push
pusha
jl
sarb
lds
mov
lret
sbb
push
lret
inc
sbb
and
aam
icebp
jmp
enter
mov
hlt
loope
jne
dec
xlat
push
and
ljmp
hlt
in
pushf
popf
sbb
adc
xchg
pop
inc
xchg
call
pop
jo
and
dec
or
xor
aas
mov
jg
outsl
popa
xor
adc
push
scas
mov
cmp
or
test
mov
fisttpll
outsl
and
inc
cmc
dec
rclb
mov
add
adc
xchg
adc
icebp
call
xchg
jmp
or
jl
mov
push
dec
sub
adc
adc
test
push
or
and
sub
or
dec
xor
int
push
jp
iret
mov
xor
test
jp
pop
pushf
adc
stos
push
mov
dec
adc
idiv
cmpb
sbb
jmp
adc
sbb
dec
jo
sbb
shr
xorb
xchg
fmull
out
mov
ret
add
cmp
cs
and
mov
mov
imul
movsb
loop
xor
xabort
push
push
mov
and
sub
cwtl
mov
enter
dec
pop
inc
mov
addr16
aaa
or
imul
fucomip
pop
lret
dec
fdivr
push
std
xor
inc
mov
repz
ds
jno
lret
test
testl
push
fbld
cmp
xorl
and
into
or
or
add
cmpsb
popa
shlb
test
pop
je
div
mov
int
xor
sbb
mov
push
gs
push
into
aas
pop
jmp
dec
jne
xchg
or
xor
ss
outsl
arpl
sub
or
inc
or
and
jle
lods
and
push
jmp
xchg
adc
and
movb
and
loop
dec
jl
mov
andl
imull
mov
adc
cmp
cmp
mov
adc
sub
test
xchg
adc
xor
push
sbb
push
inc
sbb
subb
cs
lods
adc
adc
loope
adc
mov
pushf
xchg
call
pop
das
xchg
xchg
dec
sbb
int3
dec
sti
movsl
insb
pop
imulb
lods
mov
cmpsl
cmp
push
imul
fisttpll
inc
adc
cmp
push
out
shlb
imul
inc
xchg
div
scas
test
jae
ja
push
adc
movsb
nop
mov
add
mov
sbb
imul
iret
jne
push
dec
mov
and
xchg
pusha
sahf
add
pushf
pop
push
xor
jp
popf
or
mov
pop
pop
popa
insb
adc
test
insb
jno
jge
mov
mov
testl
xchg
xchg
adc
inc
cmc
mov
les
imul
and
cmp
stos
ret
gs
pop
jo
jo
cltd
push
out
pop
cmp
push
inc
decl
data16
mov
sahf
shll
scas
fs
xor
notb
push
rol
mov
jnp
sbb
cmp
mov
cmpsb
sub
mov
sahf
sbb
mov
jno
xor
stc
mov
inc
mov
scas
adc
fildll
push
or
stos
inc
fnstcw
dec
popa
out
and
sarl
or
pusha
clc
xor
sbb
pushf
and
ret
mov
and
es
push
dec
sarl
loope
inc
sbb
pop
popa
sub
adc
aas
fdivrs
scas
testl
arpl
addb
lods
fs
test
leave
mov
sbbb
gs
fmuls
or
push
shrl
cmp
jmp
imul
sub
stc
shrb
sbb
or
adc
cmp
addr16
gs
mov
cmp
testb
add
mov
adc
sub
push
push
lock
ret
xchg
pop
mov
xor
roll
push
adc
push
pop
cmpsb
and
add
fcoml
filds
mov
xor
xchg
pusha
out
jbe
push
sbb
mov
and
cmc
xchg
pop
sbb
jl
lret
adc
movsb
addr16
mov
mov
outsl
mov
js
add
ret
mov
lods
incl
mov
adc
jns
test
dec
lods
add
xchg
std
mul
into
adc
inc
test
push
es
mov
or
or
loope
loope
imul
in
and
jg
mov
aam
adc
push
insl
ret
loop
pop
arpl
xor
lret
push
cmp
mov
xchg
clc
and
lods
aam
shll
rclb
add
imul
push
cmp
fidivrs
xchg
add
inc
push
scas
lea
jae
sti
addb
xor
imul
in
mov
pop
bnd
ljmp
arpl
fwait
ja
mov
test
inc
push
sub
or
fmuls
mov
push
out
ja
mov
sti
in
xchg
inc
out
push
pop
cmp
mov
outsb
sub
test
or
cmp
lahf
out
adc
mov
xchg
shl
sbb
ja
les
stos
frstor
or
clc
lods
das
and
call
scas
add
test
push
jne
fnstenv
adcl
mov
int3
and
repz
mov
add
push
cmp
sbb
or
mov
hlt
lods
loopne
das
pop
mov
pop
jmp
es
push
orb
andl
ja
sbb
mov
and
in
into
jbe
int3
sub
push
aas
xchg
pop
jle
push
adc
daa
cli
push
inc
sbb
mov
sbb
sti
xchg
std
out
jae
sbb
dec
sub
in
cmp
sbb
push
and
adc
dec
adc
lock
in
int
shl
cltd
mov
pop
and
repnz
adcb
or
mov
je
push
push
int3
dec
xchg
cltd
or
popf
adc
cwtl
icebp
cmp
cmc
and
xchg
xchg
addr16
push
sub
mov
cmp
adc
mov
in
jmp
test
jno
vmovupd
lods
cmp
ds
xlat
cmpsl
or
pop
shll
xchg
sahf
cmp
pop
outsb
imul
push
lcall
xchg
xchg
push
imul
jae
sbb
ret
mov
or
aad
movsl
dec
inc
xor
adc
fstpl
pop
sub
fbstp
jp
insb
mov
push
mov
imul
mov
loopne
dec
dec
or
pop
xchg
popa
in
mov
clc
in
add
out
outsb
stc
adc
dec
cmpsb
popa
pop
cld
add
adc
mov
jnp
stos
mov
push
repnz
push
push
mov
enter
cmp
sbb
dec
or
lahf
jp
sub
fsubr
inc
repnz
imul
call
mov
xor
xor
out
mov
inc
into
adc
cmp
in
dec
cltd
push
call
pushf
lods
mov
in
mov
test
imul
xchg
scas
lods
shlb
subb
mov
insb
jne,pt
or
out
fwait
mov
jno
jecxz
jecxz
xchg
pop
cs
dec
jge
nop
cmp
and
inc
pop
mov
jg
mov
adc
pop
jl
mov
das
add
int
inc
sub
shrl
or
mov
clc
sbb
mov
adcl
xor
sbbl
xor
orl
lea
mov
xor
div
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
jmp
hlt
fwait
hlt
hlt
xor
lret
mov
sahf
jae
dec
psadbw
cmc
bound
hlt
and
insb
call
push
mov
mov
mov
aad
cmpsl
ja
das
cwtl
mov
mov
xor
cmp
lods
lret
jg
mov
scas
jp
mov
lcall
fwait
add
sbb
cmp
into
cmp
mov
loopne
inc
insb
pop
dec
dec
and
sub
cmpb
lock
mov
fisttpl
push
js
push
xchg
sub
xor
aaa
es
and
cmp
scas
mov
popa
mov
gs
iret
daa
push
nop
xlat
repz
cmp
aam
mov
xchg
lret
bound
imul
jge
add
mov
mov
push
sub
xor
dec
adc
inc
mov
dec
xlat
dec
out
xchg
fs
inc
mov
scas
mov
jle
pop
cmp
addl
jmp
add
jo
mov
dec
mov
leave
fbstp
jg
xchg
out
pop
or
test
pop
xor
mov
popl
or
push
dec
add
xchg
mov
jno
shll
xor
sbbl
sti
andl
popa
push
cs
out
inc
shl
jge
fnstcw
add
or
mov
inc
jae
dec
lock
shlb
push
fisttps
fistl
cld
lret
das
add
mov
dec
fwait
cmp
es
sub
cmp
lods
je
inc
js
jge
cmp
fadds
xchg
push
in
and
stos
or
jg
cmpsl
pop
jno
fcomps
sbb
xor
aad
mov
test
adc
dec
sub
sbb
lea
shll
mov
std
adc
mov
call
shl
sub
mov
xchg
pop
fstpt
push
stc
out
lods
nop
fistps
xchg
pop
adc
popf
jle
ret
popf
ret
into
ja
ds
ljmp
roll
popf
insb
dec
stc
in
movsl
aas
xor
pusha
je
es
adc
rolb
clc
stos
clc
push
gs
cmp
bound
xchg
imul
ret
insl
sub
dec
test
mov
push
movlps
test
pop
scas
xchg
mov
push
vmread
jmp
xchg
add
iret
mov
rolb
adc
insl
int
pusha
test
call
or
mov
stc
push
cmpsb
pushf
cs
cmp
sbb
xchg
enter
mov
outsb
sahf
sbb
js
jbe
sahf
add
sbb
cli
push
popl
out
push
or
pushf
lods
movups
mov
jnp
jle
test
dec
nop
movsb
enter
xor
mov
test
mov
shll
inc
dec
icebp
and
insb
out
push
mov
mov
lock
bound
jo
mov
ljmp
insb
push
pop
pop
sub
and
popf
sbb
cmp
push
int
and
push
pusha
mov
lret
sub
lods
shlb
xchg
dec
add
dec
sahf
xor
insb
or
sbb
jae
and
stos
fsubp
out
adc
lods
pop
int
mov
scas
lcall
cld
dec
or
aaa
je
in
nop
lcall
test
push
add
adc
out
pop
fldlg2
jge
mov
cmc
jge
scas
addr16
add
insl
cwtl
adc
cmp
push
adc
fdivrl
mov
mov
push
inc
gs
ret
aas
or
mov
sub
jbe
mov
fs
pop
mov
nop
insb
sub
aas
push
daa
mov
andl
popf
ret
inc
hlt
enter
test
xchg
sub
into
test
cli
aas
loope
dec
pop
push
jo
orb
dec
inc
cmp
add
add
xor
lret
movb
push
mov
ret
pusha
xorb
dec
xor
icebp
mov
jecxz
cmp
xchg
int3
fidivrs
in
test
and
inc
pop
test
push
cltd
and
inc
das
jge
outsb
loopne
pushf
popa
bnd
sbb
adc
sbb
sub
mov
sub
or
jmp
inc
dec
imul
or
les
rclb
and
sarb
pop
adc
mov
inc
sub
stos
adc
into
jg
dec
in
cld
pop
xchg
hlt
push
cmc
notb
jmp
lods
cli
iret
aad
adc
shll
lcall
dec
lea
push
pop
push
out
sbb
mov
dec
movsl
jae
push
lds
mov
pop
mov
in
xchg
ret
decb
test
mov
das
loop
imul
pop
imul
mov
or
add
xchg
ss
arpl
cld
aam
repnz
nop
es
mov
sub
adc
sbb
inc
dec
jo
in
scas
dec
int3
pop
dec
jg
cmpsl
or
sub
cs
or
shll
aad
in
jnp
add
fisubrs
hlt
mov
pop
cmp
sbb
imul
cltd
das
jb
jg
stc
jecxz
adcl
lods
shlb
xor
rolb
and
dec
mov
inc
lret
icebp
push
ret
mov
mov
or
mov
pop
jae
out
lods
mov
mov
mov
fldcw
repz
out
int
ret
push
int3
ljmp
outsl
dec
ret
mov
clc
sub
sub
jg
test
mov
mov
sbbb
inc
inc
xor
push
mov
lods
out
xchg
mov
mov
mov
adc
adcl
xchg
and
fcompl
mov
in
jecxz
inc
xor
nop
push
push
or
push
or
fs
dec
push
or
pop
mov
jnp
int3
adc
xor
fwait
cltd
cmp
idiv
push
mov
add
dec
je
xchg
clc
lods
push
pop
rorb
jne
xchg
shlb
mov
lret
sbb
leave
cmp
not
inc
sbb
jnp
leave
insl
popf
or
ss
sbb
add
ss
mov
stos
dec
sbb
jecxz
jmp
mov
outsb
jbe
outsb
xchg
lcall
sub
jp
mov
ds
or
das
test
xorb
stos
push
fsts
out
and
lds
mov
and
pop
jae
flds
jp
pop
int3
mov
pop
push
add
mov
mov
jge
cltd
lods
dec
leave
js
jnp
push
ds
in
xor
pop
pop
mov
push
pop
pop
jae
cmpsl
xchg
push
add
in
sahf
popa
in
and
outsb
xlat
stc
mov
jge
cld
in
hlt
adc
sub
and
jnp
pop
xchg
jns
mov
fstpt
xchg
mov
push
xor
paddusb
mov
or
mulb
add
push
sbb
pop
pusha
fdivs
insl
dec
js
imul
rclb
mov
addr16
mov
rcr
sub
cmp
or
push
sub
pop
xchg
stc
jbe
cmp
test
push
cmpsl
cmp
xchg
in
fadds
xor
das
fwait
les
test
adc
fwait
fwait
pushf
mov
jns
fldl
stc
cmp
mov
outsl
sbb
popf
mov
xchg
shl
add
inc
jg
mov
outsb
sarl
mov
cmpsl
inc
mov
sbb
enter
pop
jp
clc
jns
push
leave
shl
je
inc
mov
ja
mov
cmpsb
jns
leave
cmp
scas
sbb
add
mov
jae
dec
ljmp
xchg
or
cmp
pop
stos
sahf
cmp
aaa
dec
addr16
int3
mov
rcr
jg
int
not
mov
sbb
dec
aad
mov
dec
imul
add
imul
gs
xchg
bound
or
test
jae
test
je
movsb
cmp
mov
sti
lock
pop
mov
cmpsb
mov
and
lcall
in
lds
xor
add
mov
lds
arpl
arpl
fwait
movsl
xchg
ljmp
adc
pop
in
jae
push
mov
pop
dec
test
loope
test
cld
jno
mov
mov
jnp
int
out
cwtl
repz
push
inc
sbb
jge
or
js
data16
push
mov
stos
data16
lahf
lahf
cmp
data16
sub
mov
mov
out
icebp
pop
repnz
lcall
mov
xor
test
jl
add
pop
mov
xchg
xlat
mov
sahf
push
repz
mov
adc
add
dec
dec
jne
push
cld
out
aas
fldt
addb
pushf
popa
and
shlb
loop
xchg
add
ja
sub
shll
das
adc
adc
cwtl
xchg
mov
arpl
andb
aad
cmp
loope
adc
shll
lea
mov
lret
nop
leave
dec
xor
fildl
mov
imul
mov
addr16
ret
les
adc
sahf
cltd
jge
cli
or
repnz
psadbw
and
imul
adc
jecxz
mov
stos
inc
push
or
imulb
cmpsl
call
mov
mov
cli
xor
mov
lcall
gs
aaa
aaa
pushw
or
sbb
adc
pop
inc
sub
and
cmp
addb
jbe
into
pop
lds
mov
push
fxch
loopne
jg
pop
lods
adc
or
stos
xor
dec
stos
insl
jl
cltd
push
adc
push
add
inc
xlat
in
sub
fcoml
jle
loope
xchg
fwait
lret
or
xor
insl
or
test
push
jl
shrb
out
jge
pop
jmp
xchg
int3
loopne
pop
outsl
lds
jo
push
cmp
imul
sarb
mov
negl
ss
mov
out
and
loopne
outsb
sub
mov
pop
add
test
js
pop
fisubs
scas
and
fidivrs
xor
push
fcomp
jmpw
je
inc
pop
push
mov
cmpsl
jecxz
inc
xor
mov
adc
push
cmpsl
sub
mov
andl
mov
xor
xchg
sbb
mov
jns
add
cmpsb
dec
mov
or
mov
or
mov
mov
mov
and
loop
imul
jmp
pop
addr16
cs
adc
jae
sbb
fs
pop
jns
or
pusha
and
and
add
mov
call
out
cli
xchg
jmp
in
pushf
mov
in
test
jnp
imul
dec
divl
pop
std
ret
je
or
pop
inc
fsubr
sub
push
inc
adc
inc
mov
push
jmp
pop
dec
xchg
sub
inc
xchg
into
repnz
loopne
aad
adc
dec
cwtl
pop
out
xor
and
mov
aam
xor
fisttpll
add
cld
lea
sbb
inc
mulb
movsl
test
leave
lods
nop
leave
std
aam
mov
push
or
stos
cld
fisttpl
mov
mov
shrd
sbb
aad
es
cmpsb
mov
xchg
out
inc
fstl
addr16
adc
mov
mov
jmp
lahf
ret
fwait
inc
inc
xor
imul
jmp
mov
cmp
fisttpl
imul
clc
inc
xor
ja
pop
cmp
xchg
adc
sbb
jb
popf
aam
xlat
mov
mov
sbb
clc
sub
inc
popa
jne
xchg
out
lcall
sbb
bound
test
jno
mov
out
ret
mov
mov
dec
pop
mov
jnp
pop
xchg
gs
int
push
mov
push
cmp
mov
and
sbb
inc
sahf
imul
stc
into
lahf
bound
into
pop
cwtl
lret
pop
and
and
stc
xor
ss
ss
add
and
fwait
xor
sti
dec
mov
inc
popf
mov
mov
jle
xchg
jp
inc
and
mov
push
aas
stos
fs
psubd
insb
mov
mov
ror
lock
fwait
lods
popa
js
shll
pop
xor
mov
xor
xchg
cltd
mov
lahf
enter
insl
dec
cmp
mov
stc
mov
dec
stc
std
rolb
mov
int3
and
fbld
clc
pop
pop
sub
xchg
sbb
mov
pop
cmc
stos
out
loopne
xchg
addr16
int3
adc
jmp
mov
out
adc
jp
push
xor
insb
mov
int
sub
sbbl
inc
sbb
xchg
or
jp
mov
cmpsl
mov
mov
cwtl
scas
mov
add
adc
and
std
add
popa
mov
dec
jg
push
sub
fs
out
or
mov
outsl
jmp
xchg
pop
push
cmp
mov
pop
loop
mov
mov
jnp
outsb
or
sub
sbbl
mov
int3
xchg
sbb
pop
ljmp
xlat
mov
xor
or
mov
dec
fwait
insb
std
and
dec
out
xchg
test
loop
stos
loopne
cmp
jnp
sbb
fisttpll
lcall
stos
mov
sub
test
ret
in
lret
into
in
icebp
xchg
cmp
or
inc
mov
push
mov
call
ret
mov
jl
out
jae
out
push
ret
mov
sub
sbb
dec
sbb
mov
int
fs
jno
das
add
add
scas
xchg
lds
and
mov
dec
push
iret
adc
jae
aas
dec
arpl
sahf
aad
mov
inc
pop
cmpsb
imul
and
xorb
mov
inc
not
in
rclb
fcompl
mov
jle
mov
push
mov
fidivrl
and
xor
xchg
fsubrp
in
xor
aad
jnp
bswap
add
lcall
xor
jp
xor
sub
icebp
fsubrl
mov
insl
loope
aas
and
xchg
aad
and
insl
out
cmp
clc
cld
and
or
movsb
test
out
stos
jecxz
test
sub
mov
pusha
adc
mov
mov
xchg
xchg
in
call
lods
sbb
or
pop
push
xchg
adc
jo
mov
int
jmp
push
inc
sub
roll
stos
pop
mov
pop
mov
mov
inc
pop
mov
in
add
inc
and
and
mov
fwait
or
sub
outsb
aas
les
or
mov
negl
sbb
jecxz
mov
iretw
inc
mov
adc
gs
sub
outsl
imul
jb
test
inc
lods
cmp
push
add
cmp
or
or
jno
lock
in
aad
mov
cmc
repnz
inc
loope
pop
sti
test
or
lock
jl
das
xor
imul
insl
scas
push
jmp
lds
xchg
into
add
jb
fcoms
in
xchg
fmull
pop
ficoml
mov
fstpt
out
test
or
jle
jmp
int3
pusha
repnz
xchg
ret
push
mov
cmpsb
push
test
movb
fsubl
aad
add
mov
cmc
imul
adc
mov
dec
push
stos
fdivs
mov
xlat
loop
mov
ror
dec
lods
mov
aas
popf
sub
pop
sbb
cmp
ficoms
mov
out
lcall
pop
addr16
mov
sub
mov
out
insl
sbb
loopne
jno
cmp
repnz
sub
push
mov
jno
lds
shlb
and
lods
cld
mov
ja
pop
mov
sub
cltd
push
lcall
mov
jl
lahf
dec
mov
or
std
mov
mov
sbb
cmp
sub
bound
lcall
iret
and
or
xchg
dec
notb
prefetch
ds
incb
sub
sbb
push
inc
aam
fldcw
adc
ficoml
xor
pop
push
adc
mov
jae
mov
cs
or
jle
cmpsl
or
sub
push
adc
and
out
lret
fildll
ds
xchg
and
xor
jg
icebp
call
mov
push
popl
jmp
inc
addb
and
adc
scas
adc
ja
xlat
daa
hlt
xchg
out
adc
jns
mov
cmp
dec
and
dec
inc
int
add
call
xlat
sub
movsb
sub
sub
jmp
fdivrs
lock
push
cmp
pop
movsb
enter
bound
dec
lret
dec
iret
xchg
dec
fdivrs
pop
mov
push
pop
xor
jno
or
lods
jecxz
test
mov
insb
int3
adc
push
and
inc
into
orl
scas
out
gs
sub
es
mov
int3
jle
inc
outsl
rcl
aam
in
int3
mov
and
pop
or
jg
jle,pt
mov
mov
jbe
mov
fadds
ljmp
cmc
mov
sub
mov
movsb
in
dec
adc
das
sbb
and
pushf
iret
ret
and
pop
loopne
push
mov
fdivrs
loopne
inc
pusha
dec
ret
cwtl
mov
add
inc
pop
inc
pusha
aas
rorb
loopne
cmp
scas
lahf
jne
std
fldt
or
push
push
sub
inc
jge
mov
icebp
jle
push
sub
sub
outsb
sbbl
leave
and
jg
das
insb
sub
sbb
xor
loope
lcall
sbb
cmp
lods
pop
push
jg
mov
in
jmp
test
mov
mov
mov
inc
jg
pop
repnz
fidivrs
lret
loop
stos
pop
mov
loopne
xor
aam
push
sbb
mov
mov
cmpl
add
adc
js
sbb
mov
nop
cmp
filds
stos
fisubs
xor
lret
stos
loope
dec
or
in
sub
xchg
jae
mov
inc
mov
and
ja
mov
jne
mov
adc
push
pop
jnp
das
popa
movsl
gs
imul
pop
sti
loopne
adc
sub
dec
imul
repnz
inc
or
and
push
xchg
das
lahf
shr
cwtl
popf
sti
aaa
std
push
test
lds
pusha
add
mov
push
movsb
shrl
sbb
cld
and
scas
pop
sub
jge
sbb
in
daa
or
cmpxchg
aam
lock
hlt
jb
adc
cs
incb
mov
icebp
mov
insb
adc
mov
adc
test
sub
loop
push
lahf
repnz
loope
xlat
fs
cli
mov
inc
push
dec
dec
lcall
icebp
loop
xchg
dec
sub
sahf
xor
inc
pop
push
mov
out
jbe
cli
nop
and
or
inc
mov
shlb
cmp
into
jbe
push
push
mov
in
lcall
je
or
sahf
test
aas
int
dec
sub
jns
sbb
repnz
add
in
pop
pusha
push
dec
adc
test
movsl
icebp
test
dec
inc
rcll
add
mov
pushf
nop
inc
jecxz
sar
cwtl
pop
lock
adc
sbb
jo
fstl
je
pop
xchg
xor
pushf
nop
xchg
in
add
mov
int3
xchg
mov
je
cld
mov
add
mov
mov
and
lret
loop
xchg
pushf
xor
cmp
aas
test
adc
and
xor
fdivs
movsl
push
jnp
and
adc
push
push
in
cli
ss
insl
fiadds
inc
aas
pushf
mov
add
test
aam
dec
push
clc
push
jb
mov
jle
es
mov
push
and
xchg
icebp
addr16
cli
and
test
mov
adc
addb
dec
xchg
adc
adc
fldt
xor
inc
pop
push
sub
test
adcl
sbb
in
nop
outsl
jle
addr16
cmp
inc
out
jge
push
push
mov
mov
cmp
sbb
pop
inc
mov
jg
bound
xor
call
xchg
mov
jnp
mov
in
mov
lea
xor
cmp
mov
pop
pop
mov
not
sbb
out
dec
test
mov
or
add
and
lcall
cmpsb
sub
adc
shl
cli
mov
test
mov
pop
inc
out
pushf
shrb
dec
iret
stos
sbb
ret
and
sahf
jae
lock
jmp
sbb
or
or
or
xor
shrb
loope
imul
and
das
arpl
incb
in
xchg
gs
jecxz
adc
dec
jle
inc
loope
xor
mov
and
sub
dec
jl
movsl
movsl
inc
and
pop
xor
fstps
int
popf
filds
in
fistps
or
lds
pusha
or
fildll
jae
ss
scas
push
cmc
gs
imul
sub
fbld
mov
enter
add
jp
jmp
les
and
lea
inc
mov
lds
loopne
movsl
xor
pop
dec
pop
pop
dec
cli
mov
xchg
inc
stos
addr16
sub
les
dec
sbb
lods
jo
push
pop
popa
loop
rcl
add
pop
jnp
sti
mov
hlt
dec
mov
sbb
out
psubd
add
mov
mov
test
lcall
int
mov
push
mov
pop
sbb
andl
enter
jne
push
lods
in
or
xchg
dec
pop
rcll
popa
shl
jg
imul
xorl
mov
nop
push
jmp
xor
pop
pop
mov
push
popa
stos
test
popa
pop
call
hlt
in
aas
test
std
jle
add
les
mov
sub
rorl
lock
cmp
inc
stc
jp
sub
xor
fucomip
xchg
mov
sub
xchg
arpl
pop
clc
lcall
out
jp
pop
popa
cmp
enter
shr
push
push
and
sbb
loopne
xlat
in
outsl
pop
sub
sub
js
jbe
fldl
mov
pop
rdtsc
mov
push
inc
dec
push
int
out
xchg
cmp
cmpl
dec
movb
adc
rcrb
int3
mov
sbb
jb
dec
xor
lret
pushf
pop
and
mov
insb
cli
and
fcmovnb
je
xchg
push
or
mov
dec
jae
and
xchg
fstpt
push
jp
adc
jle
xchg
inc
repnz
inc
sbb
pop
sub
xor
lds
pushf
loop
or
enter
xchg
push
ljmp
cld
aas
dec
mov
outsl
xchg
push
xchg
xchg
sub
mov
xchg
cmp
jecxz
mov
xchg
scas
xchg
xchg
or
cmpb
add
add
inc
mov
add
arpl
push
gs
imul
mov
push
push
rcll
fcmovnu
cmc
int
es
lret
out
repz
mov
rclb
jb
xchg
pop
inc
mov
or
jbe
and
cli
lahf
popa
inc
ret
add
repnz
inc
or
shrl
pop
xchg
in
adc
or
and
jge
cmp
out
int
adc
fisttpll
in
shl
inc
push
mov
fistpll
ljmp
hlt
imul
push
add
jge
shrl
sti
sub
cmp
inc
aaa
adc
sbb
lahf
sar
mov
adc
pop
jnp
mov
movaps
call
or
sub
cld
in
cli
push
pop
push
and
pop
scas
aas
xchg
shr
xchg
xchg
mov
out
out
lods
movsl
sub
in
daa
xlat
add
fwait
push
push
lods
rclb
lds
sub
mov
lods
add
jmp
aam
mov
pusha
ret
inc
divl
xchg
inc
std
pop
in
jns
ja
fstps
cmovo
inc
arpl
mov
cmp
xor
repnz
inc
jmp
xchg
xchg
or
aas
sub
movsl
gs
es
popa
scas
cmc
daa
push
adc
fsts
jl
inc
pushf
and
notl
jns
sahf
addb
sub
inc
add
sub
ja
repnz
cmc
push
fists
ret
mov
xchg
mov
add
sti
cmp
sbb
test
sub
xchg
dec
mov
xchg
push
les
aaa
lret
jl
jae
pushf
cmp
jl
or
or
lahf
std
fcoml
and
mov
das
mov
mov
call
jbe
add
jno
clc
push
insb
inc
pop
jl
mov
fwait
ds
jne
test
btr
ss
jmp
ljmp
xlat
cli
lcall
cli
lcall
adc
movl
and
lods
lock
outsb
adc
or
imul
cmpsl
andb
adc
push
in
ss
and
xchg
pop
adc
std
sub
shrb
test
adc
enter
or
xor
int
data16
fwait
js
adc
in
lret
jbe
xor
cmp
jmp
xor
stc
push
mov
sbb
lret
outsb
aam
sbb
cmp
shrb
inc
test
popa
mov
inc
loopne
leave
fiaddl
pop
hlt
pop
and
adc
sbb
mov
fisubrl
and
mov
and
dec
std
into
shrb
and
out
ret
cld
idivl
out
aam
arpl
lea
fs
mov
lret
inc
loop
insl
ficompl
mov
mov
ret
jns
inc
popf
cmp
inc
hlt
jle
cmp
repz
sub
sbb
sbb
mov
mov
repz
cld
xlat
fwait
loop
test
repz
fidivs
adc
in
or
jle
fwait
mov
cmc
jle
rorb
fdivl
roll
mov
xchg
subl
daa
ljmp
jg
pop
scas
adc
ret
pop
mov
xor
das
in
and
js
cmc
sbbl
jge
ret
leave
jb
mov
sbb
fcmovne
adc
mov
hlt
scas
js
jmp
stc
adc
and
jnp
dec
adc
in
lock
es
std
iret
and
cmpsl
in
xchg
xchg
push
fwait
lret
sarl
stos
test
aas
pop
mov
loopne
mov
dec
addb
mov
or
popa
jle
out
adc
subb
xor
pop
and
popa
roll
ds
loop
add
pop
sbb
and
xchg
test
pop
repnz
xchg
jl
scas
inc
mov
pop
pop
or
mov
ficoms
stos
sarl
jb
insb
and
pop
push
ljmp
sbb
xlat
xlat
rorl
lds
mov
lods
das
mov
imul
ljmp
hlt
inc
lods
dec
xchg
xor
cs
sti
jp
popl
push
movsb
imul
and
mov
cmp
sub
imul
ds
lret
test
test
popl
cmpsl
cld
inc
out
orb
and
xchg
jecxz
lret
or
mov
adc
test
xchg
arpl
pop
dec
dec
jecxz
jg
xor
mulb
mov
loopne
xor
cmp
repnz
mov
pop
out
xor
pop
lea
cmpl
jle
sub
add
sub
divl
push
popa
push
xchg
xchg
mov
in
ret
dec
push
xor
jge
sub
jl
sub
jb
xchg
add
pop
jnp
pop
in
push
jo
fisubrl
sbb
inc
mov
inc
jae
push
popf
jge
mov
push
cmpsb
inc
daa
je
lret
in
cmc
jg
pop
or
lret
jns
mov
filds
lods
inc
cmp
pop
dec
sub
and
cmp
in
sbb
mov
cmp
fwait
inc
scas
cmpsl
add
push
cmp
mov
inc
pop
push
imul
sub
aaa
pushf
xor
repz
adc
std
inc
push
ror
add
lds
mov
xor
bound
repnz
jb
jecxz
sbb
nop
ret
leave
inc
leave
pop
or
stos
movsl
cli
xchg
sbb
and
cmpsl
and
jg
mov
mov
nop
enter
add
roll
sbb
sarb
push
rcll
sub
jo
add
mov
stos
pusha
adcl
xor
dec
ljmp
imul
decl
test
mov
shlb
cli
jl
mov
xchg
cmp
add
out
fwait
je
inc
sbb
pop
pop
jmp
jo
popa
shrl
shr
mov
popf
mov
mov
pop
jecxz
or
adcb
int
sahf
or
mov
iret
sub
inc
sar
lcall
divl
lret
mov
js
mulb
je
mov
jno
and
test
cmp
push
xchg
sub
lea
pop
lock
and
mov
xor
sub
pop
into
inc
sub
iret
popa
pop
jmp
sbb
pop
mov
lock
lods
jecxz
clc
jns
stos
mov
or
test
and
push
mov
outsb
lret
adc
subb
mov
int3
test
lcall
dec
push
or
lret
sbb
xor
std
sbb
xchg
push
dec
push
pushf
xor
mov
fdivs
mov
stc
pop
inc
stc
cmc
mov
lods
xor
test
frstor
jmp
and
fadd
mov
ficomps
sbb
iret
cmp
inc
sti
mov
mov
xchg
es
push
imul
adc
pushf
outsb
or
dec
or
fldenv
add
call
cmp
popf
out
mov
sbbl
dec
ret
sub
pop
ds
rcl
lahf
mov
ja
sbb
adcl
fstps
sbb
jecxz
xchg
ret
add
mov
pop
mov
leave
test
pop
icebp
push
out
xchg
negl
add
pop
and
inc
in
or
and
loop
gs
or
addb
xor
enter
xchg
aaa
sub
lcall
fs
arpl
mov
mov
mov
repz
pop
fnstcw
and
in
inc
repz
pusha
or
adc
add
xor
into
shlb
sub
jge
xorb
imul
inc
pusha
xchg
jge
imul
dec
mov
cmp
lds
inc
sarl
loope
int
loope
xchg
pushf
jmp
or
push
mov
in
pop
cmp
clc
in
mov
push
in
idivb
call
rorb
push
and
mov
rcr
dec
pop
jge
mov
and
add
in
add
dec
xor
add
mov
lods
arpl
and
mov
scas
cmpsb
push
sub
test
lret
jmp
dec
clc
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
movl
mov
dec
and
mov
mov
movl
movl
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
jmp
cwtl
cwtl
dec
push
dec
jb
xor
inc
push
cs
fs
jl
pop
sahf
jae
sbb
xorl
idivb
and
test
cmp
mov
xor
stos
and
pop
lret
int3
push
insb
popfw
push
dec
or
push
pop
mov
xor
cmp
cmp
in
jp
clc
rcrb
fstpl
sub
outsl
or
shrl
pop
mov
mov
cs
inc
lods
into
inc
pop
pop
addl
pop
lret
cs
rcrb
add
or
call
jmp
in
sub
xchg
mov
std
ds
cmp
jecxz
xchg
jo
sahf
and
mov
xchg
cmp
add
push
aaa
cmpsb
daa
popa
leave
stos
test
add
fnsave
repnz
bnd
mov
push
js
or
inc
mov
pop
jg
mov
add
add
popa
ret
pop
dec
and
in
adc
fnstcw
sahf
dec
inc
jle
iret
add
xor
cli
push
sbb
pop
popf
pop
rcr
adc
dec
push
int3
imul
mov
jl
push
jo
jae
push
mov
cmp
inc
push
xor
add
js
sub
push
ss
add
mov
outsb
adc
sbb
push
jge
and
xor
inc
jmp
xor
and
es
adc
lea
cwtl
inc
mov
int3
mov
xchg
repnz
add
in
cmpsl
imul
and
cmp
jle
cmp
inc
mov
push
out
add
stos
lea
movsl
push
mov
sarl
push
loopne
mov
in
push
mov
pop
iret
gs
jns
add
xorl
jnp
and
int3
cmp
mov
pop
repnz
imul
xchg
xchg
aaa
jo
test
fsub
fwait
std
jmp
pop
sbb
sub
mov
test
mov
xor
mov
xchg
pop
aam
arpl
pop
push
pop
cwtl
sbb
es
mov
mov
pop
xchg
fwait
scas
xchg
pusha
pop
cld
jg
push
adc
lahf
mov
std
inc
jb
shlb
outsl
gs
hlt
dec
scas
jge
lret
xor
movsl
movsl
dec
and
pop
xor
dec
push
mov
dec
test
lret
and
in
pop
xor
pop
xchg
movsl
fsubp
sarl
fcmove
ret
das
or
stos
fucomip
xchg
dec
and
cmc
mov
push
divl
jle
push
xlat
or
sbb
int
pop
push
xor
push
jmp
popf
sbb
ret
ret
adc
xchg
out
ljmp
ds
jmp
pop
out
dec
jns
sbb
daa
dec
add
mov
outsb
punpckhdq
xor
lahf
int
mov
push
xchg
cmp
xrelease
add
ds
dec
test
stc
in
inc
into
sub
adc
lahf
lret
inc
icebp
lret
fstps
push
aaa
mov
mov
jmp
add
fadds
jle
outsb
mov
sarl
fistps
outsb
mov
push
pop
das
int3
mov
dec
in
jp
sti
and
push
mov
enter
movsb
or
jae
sbb
movsl
push
loopne
cmp
test
fdivrs
lds
movb
sbbb
jg
loop
addr16
pop
push
jne
sbb
aas
out
lds
push
mov
inc
stos
mov
push
pop
mov
pusha
push
xchg
fcmove
jle
insb
das
pop
cmp
mov
and
lds
mov
xchg
jmp
sti
pop
negb
sbb
add
cmp
hlt
or
push
inc
jle
and
mov
cmp
in
ret
dec
xchg
inc
mov
xor
cmp
mov
mov
push
mov
and
test
fisubrl
cmc
pop
sbb
cmpsl
orl
jno
es
xor
jno
es
dec
add
sbb
popf
jbe
xchg
std
cmc
inc
xor
or
lcall
jg
arpl
fisttpll
jb
xchg
daa
jo
xlat
int3
sarl
dec
jo
movsb
cmpsb
andl
push
mov
popf
push
inc
ds
aad
popf
sub
call
aas
ds
les
pop
mov
pop
xchg
in
xor
pop
insl
xlat
aam
push
movsb
mov
movsb
mov
cld
lods
lock
push
mov
mov
or
std
cmpsb
insl
in
xchg
and
and
cmpsl
fildl
pop
lock
jbe
test
xchg
xor
clc
sub
int
mov
pop
lock
push
out
loope
push
rorl
mov
jne
sbb
push
loop
sbb
push
popa
repnz
aam
xor
ja
mov
push
fsubp
cltd
cwtl
shrl
mov
int
rolb
inc
and
push
cwtl
mov
xor
xchg
jl
mov
fs
inc
or
push
sbb
mov
jecxz
cmpsb
push
icebp
inc
mov
into
popa
insb
sub
scas
fdivp
xchg
jmp
and
add
xchg
ret
rorl
hlt
dec
insl
sub
je
in
push
add
stc
shrl
adc
stos
mov
jmp
pop
stos
push
dec
or
sbb
icebp
fisttpl
adc
std
xlat
jge
fstl
loopne
sbb
mov
pushf
or
out
xchg
jmp
sbb
xor
leave
inc
clc
jmp
insb
hlt
sub
imul
int3
or
into
xchg
push
and
ret
popa
int3
out
jns
mov
pop
movsl
repnz
sbb
pop
xor
out
fisttpl
lock
ja
cltd
mov
add
xor
ss
xor
fdivr
sbb
int
sbb
sbb
popa
lahf
and
cli
pop
inc
insl
movsl
imul
xor
icebp
adcb
mov
sti
lock
sub
and
gs
and
stc
movsl
psubusb
xlat
imul
shrb
loop
jne
pop
cmp
push
dec
inc
fwait
je
or
shlb
outsb
lods
or
pop
xchg
cmp
ss
mov
sahf
xchg
and
dec
repz
mov
notb
xor
stos
rcrl
xchg
test
push
push
ds
pop
roll
inc
lds
fstpl
lahf
movsb
dec
inc
imul
scas
xchg
push
pop
push
cmpsb
cmp
push
stos
cmp
adc
repnz
in
sbb
inc
add
sub
jle
aaa
jne
push
in
pop
mov
lahf
pop
cwtl
je
xchg
mov
mov
xor
xchg
lds
push
mov
lcall
mulb
mov
xor
pop
mov
shrl
fsubl
aas
outsl
fcomps
push
icebp
aas
cmp
sbb
out
flds
flds
cmp
sub
mov
or
mov
push
rcrb
fcmovnu
jecxz
cmp
sub
ret
push
mov
stos
ret
jl
pop
pop
adc
out
and
add
rcll
and
fs
xor
jmp
stos
idiv
or
mov
xor
and
push
and
ljmp
fs
in
jae
jmp
fs
adc
push
push
scas
adc
ss
inc
movsb
pop
test
dec
and
adc
icebp
flds
jns
and
shll
cwtl
xchg
fistpll
wbinvd
setb
mov
addr16
mov
mov
cmp
add
push
xchg
jbe
fwait
xchg
mov
ljmp
adc
add
xchg
imul
call
mov
ljmp
inc
add
mov
ljmp
pop
scas
xlat
fidivl
daa
cmp
sarb
adc
push
xchg
push
test
hlt
lods
stc
scas
sub
in
shll
stc
test
notl
and
int3
mov
loop
in
mov
xor
pop
and
pop
pop
or
sarl
rcrl
pop
inc
int3
and
in
mov
in
int3
inc
outsb
mov
out
out
jmp
rorb
sbb
push
lds
out
mov
push
in
cwtl
das
lods
add
rolb
fcmovnbe
xchg
int
jp
fwait
dec
xchg
jle
mov
pop
imulb
icebp
jo
roll
nop
test
sbb
ret
adc
inc
jne
fcoms
xlat
xchg
sbb
aas
imul
ss
sar
or
and
sarb
in
sbb
inc
ja
push
xor
cmp
shll
jne
jg
dec
rcrb
aad
dec
cmp
cmp
icebp
test
jo
popa
pop
rorl
mov
arpl
pusha
bound
call
sarl
mov
rcrl
filds
in
cmp
mov
dec
xchg
cmp
cmp
jp
inc
inc
orl
adc
sub
dec
negl
dec
push
nop
add
movsb
cld
sbb
push
pop
out
sti
jae
rol
paddd
inc
sarl
cmpl
jg
mov
lgs
cli
test
jb
shlb
orb
push
call
adc
sub
inc
leave
mov
out
aad
dec
aaa
add
push
sbb
inc
mov
jns
lods
test
cmp
sub
loopne
shll
jge
sbb
mov
mov
mov
std
notb
in
sbb
sub
insl
adc
mov
fstps
data16
jnp
fldcw
add
jo
into
mov
jmp
orl
inc
cwtl
push
push
repz
and
std
jmp
lds
sahf
lock
sbb
pop
pop
mov
sbb
inc
in
mov
add
mov
fmull
ficoms
gs
jbe
jge
cmp
xchg
add
lods
push
mov
popa
and
mov
push
jae
sbb
push
lds
decl
aaa
call
leave
lea
add
adc
pop
mov
jecxz
sub
sub
sbb
xchg
dec
push
sbb
adc
daa
xchg
pushf
jno
add
shll
sbb
adc
enter
cmp
jmp
dec
into
pop
int
pop
cld
cmp
push
imul
imul
insl
fwait
xchg
dec
call
sub
or
sub
bound
add
push
cmp
adc
fisubs
sbb
dec
inc
and
pushf
sbb
pop
add
xor
cmpl
notl
adc
cmc
imul
jecxz
mov
fsubs
push
fld
mov
xor
inc
cmpsb
int
push
scas
fdivrl
fs
stc
or
fldenv
call
lret
stos
push
sahf
sti
push
aad
mov
fstl
jmp
xor
or
jnp
mov
push
push
mov
xor
scas
movl
and
sbb
xchg
cwtl
in
sub
pop
int
loopne
mov
push
lcall
pushf
mov
out
mov
and
and
and
push
inc
movsb
xlat
andb
cmp
adc
lret
mov
mov
mov
pop
divl
lods
jb
ja
fcos
sahf
pop
je
pop
mov
fwait
mov
inc
adc
mov
in
fstp
sub
mov
sub
inc
and
aas
pop
in
stc
je
lods
fmul
cli
push
cmp
das
sbb
aad
out
in
mov
sub
movsb
pop
ds
xchg
xchg
jae
call
movsl
ret
out
movsl
lods
pop
sub
icebp
movsl
cmp
fwait
dec
fs
bound
push
mov
push
or
lock
dec
outsb
or
inc
insb
and
sub
jmp
sub
pop
cmp
adc
xor
out
or
mov
and
xchg
inc
sub
insl
jle
in
xchg
jle
sub
movsl
mov
jne
loop
push
pusha
js
loopne
mov
adc
xor
cmp
jge
mov
out
sbb
js
jns
iret
push
rorl
xor
adc
adc
fildll
xchg
add
outsl
jb
cld
push
daa
ljmp
push
pop
daa
lea
and
mov
test
push
loopne
jle
cmp
rolb
and
in
and
pusha
cltd
push
pop
sub
mov
cs
xchg
lock
inc
push
out
cmp
loopne
push
pop
push
jo
cmpl
adc
fistps
push
stos
mov
mov
lret
ss
inc
stc
jecxz
or
pop
and
jno
pop
into
inc
mov
imul
add
mov
dec
or
xchg
adc
decl
addr16
mov
inc
sub
ljmp
imull
dec
jle
cs
adc
scas
xchg
fmuls
lods
outsb
mov
cmpsl
jle
cmp
jp
popa
adc
add
sub
dec
xor
dec
daa
dec
dec
rorl
popa
out
cmpsb
xlat
xor
call
jnp
pushf
into
xbegin
add
loopne
cli
xor
ret
lahf
fnstsw
dec
mov
push
pop
dec
mov
and
mov
addr16
xor
nop
das
aaa
adc
push
adc
dec
push
pop
aam
push
jbe
xor
cli
sahf
xchg
cmpsl
jne
fs
xchg
nop
sub
mov
test
lret
mov
data16
jo
push
add
scas
scas
stc
xlat
lret
dec
pop
stos
dec
and
movsl
mov
aaa
and
in
push
push
outsl
cmpsb
stos
mov
sbb
mov
dec
xor
jbe
ret
sbb
jg
loop
xchg
jp
cld
pushf
push
ss
sub
add
fsubl
push
divl
or
and
adc
mov
cmc
fimuls
ljmp
aaa
sbbl
or
sbb
andb
pop
jecxz
jae
xor
repnz
and
aam
addr16
mov
and
mov
inc
ljmp
push
testb
jl
rep
enter
negb
fsubp
cltd
add
hlt
flds
shll
out
xor
pushf
nop
jne
mov
push
xchg
cmp
jge
or
cmp
idivl
push
xchg
mov
inc
xchg
sbb
insl
xchg
test
and
mov
aas
mov
or
adc
jae
out
lcall
mov
inc
add
fadds
and
push
mov
mov
jge
cmp
pop
pop
arpl
or
xlat
addr16
pop
pop
in
dec
push
dec
or
bsr
xor
xor
pop
ficomps
mov
dec
jne
js
inc
pushl
repz
nopl
adc
addr16
dec
mov
adc
xor
in
add
xchg
daa
aam
add
incb
shrb
js
lahf
pop
pop
hlt
inc
xchg
into
cs
jle
enter
ss
mov
and
pop
cmc
int3
lea
in
addl
pop
cmp
dec
add
cmp
ds
xchg
xchg
inc
fistpll
adc
pop
ret
jbe
adc
fsubl
pop
dec
test
sub
iret
push
ds
push
fildll
jmp
cmp
dec
in
fimuls
dec
inc
mov
push
cmpsl
add
fmul
mov
push
inc
and
push
and
sbbb
addb
and
vpshuflw
jl
jae
out
lock
mov
push
stc
and
fidivs
fdivs
xor
inc
xchg
int
push
and
mov
clc
inc
mov
adc
and
sub
test
daa
sub
lahf
lahf
xchg
mov
pop
cltd
xor
icebp
notb
movsb
dec
inc
pop
clc
andl
and
loopne
cmpl
dec
jno
adc
iret
and
cmp
negl
xlat
insb
cld
repnz
push
mov
adc
inc
fiaddl
jle
cmpsb
ficompl
fadd
pop
ss
jmp
movsl
push
std
cltd
cmp
dec
icebp
mov
mov
lock
dec
inc
arpl
lods
je
cmc
xlat
push
inc
jae
repnz
mov
jge
ja
std
jp
push
gs
pop
lods
andl
ljmp
loopne
inc
xchg
lcall
adc
fwait
push
pop
sbbb
push
mov
mov
daa
jae
mov
fcomps
clc
push
jo
inc
mov
sub
pop
ljmp
dec
jecxz
or
inc
jno
fnstenv
xor
jge
dec
int
xor
xor
loope
jbe
sahf
ror
pop
orb
fisttps
js
shlb
shlb
das
cmpl
clc
outsb
jb
sub
and
xchg
xor
enter
loop
adc
stos
ret
test
jae
pop
adc
scas
mov
sub
mov
arpl
push
test
lret
repnz
adc
fnsave
cwtl
pop
cmpsl
in
daa
call
mov
add
xor
or
xchg
dec
sbb
int
les
fldcw
push
sub
jns
jg
pop
mov
sti
or
gs
jbe
sbb
fs
jecxz
mov
xchg
cmpxchg
dec
inc
mov
mov
push
bound
fildll
or
cld
sahf
into
shll
cmp
call
addr16
loopne
cld
movsb
xchg
xchg
adc
xor
int
not
mov
imul
fwait
sahf
rol
inc
pop
mov
push
andl
pop
loopne
or
mov
sbb
stos
adc
xchg
fsts
fldcw
cmp
cs
cmp
xor
and
jmp
roll
mov
outsl
or
and
mov
jbe
ret
cli
inc
test
aas
pop
neg
pop
stos
mov
xchg
js
arpl
iret
cld
xlat
lea
rcrl
mov
ja
sbb
sub
push
xchg
ds
cmp
nop
mov
xchg
movsl
out
fisttpll
add
mov
jl
push
int
fs
int
stc
gs
stos
loopne
ljmp
mov
out
repnz
arpl
jno
pop
adc
adc
ds
and
fistpl
mov
pop
lret
sti
scas
std
popf
outsl
pusha
pop
arpl
push
rcll
call
sub
int
aam
sbb
jnp
test
jge
lret
mov
push
leave
fsts
mov
mov
cmp
mov
aam
sbb
aaa
rcll
ljmp
sbb
lods
mov
inc
sti
mov
imul
push
shl
hlt
mov
sub
aas
inc
fistl
mov
adc
popf
sahf
lods
mov
xor
test
dec
dec
setns
mov
mov
call
jl
in
dec
jmp
sub
mov
and
rolb
adc
and
popa
ljmp
sbb
push
fwait
inc
xchg
aam
sbb
sbb
jg
pop
xlat
inc
pushf
mov
imul
adc
aam
dec
jne
sti
insl
cwtl
movsb
cmp
mov
cmpsl
pushf
sub
idivb
lret
lret
inc
xor
push
dec
add
sub
jne
adc
leave
add
cs
or
iret
repnz
gs
adc
sarb
push
dec
adc
or
push
mov
pop
cmp
push
jb
iret
and
scas
out
dec
inc
push
mov
adc
addb
sbb
dec
out
divl
adc
pushf
loop
mov
cmp
jp
pop
pop
push
add
bound
stos
stos
cmp
jecxz
jge
pop
cli
fsub
aam
arpl
movsb
enter
dec
sbb
xor
add
cld
push
inc
imul
ja
imul
sub
jno
addr16
cmp
aam
cmp
repnz
mov
jnp
addr16
add
adcb
mov
inc
imul
xchg
pcmpgtd
mov
imul
inc
push
xchg
and
add
je
sbb
mov
dec
stos
mov
inc
fbld
iret
aas
xchg
pop
or
adc
cmp
cmpsb
or
js
adc
rcrl
adc
popa
xchg
xchg
xor
stos
mov
sbb
cmp
fnstcw
mov
sub
sub
repnz
and
test
push
jne
dec
xchg
sbb
jl
mov
clc
das
add
jp
shlb
or
jecxz
xlat
cmp
loope
xchg
dec
call
mov
mov
adc
jp
lcall
es
aam
imulb
mov
pop
inc
xchg
out
adc
xor
test
or
dec
test
dec
imul
lret
aad
pushf
orb
aam
mov
push
lcall
sbb
test
xchg
ja
xor
xor
imul
sub
or
ds
jmp
sahf
fmulp
movsb
in
pop
and
cmp
adc
dec
mov
gs
cmp
add
xchg
daa
loopne
pop
jmp
and
cmp
fs
xchg
js
or
xor
push
inc
sbb
lds
daa
pop
mov
loopne
cmc
je
dec
jno,pt
push
xor
imull
sub
iret
adcb
sub
xchg
jne
add
idivb
jg
add
fisubs
imul
cmp
movsl
rol
into
pushf
sub
fdivrl
adc
loopne
lcall
pushf
xchg
xor
imul
imul
adc
sbb
or
xor
popw
add
fiaddl
imul
rcrl
sbb
jae
adc
ja
xor
lret
inc
xchg
xchg
jmp
insl
xchg
mov
lock
jns
cld
pop
jl
inc
dec
sbb
mov
sub
out
sbb
clc
fsubr
cwtl
push
aaa
lcall
movsb
test
inc
xchg
fs
out
xchg
loop
pop
andl
je
and
jno
out
fdivrl
test
xor
sahf
lahf
mov
mov
push
and
pop
dec
mov
popf
dec
lods
jl
cld
adc
test
sti
out
or
pop
inc
and
xor
mov
cmpsb
sbb
pop
jno
pop
sbb
or
ds
popf
mov
pop
mov
and
sub
push
xchg
out
dec
mov
or
jmp
sbb
adc
xor
repz
adc
sarb
rcll
cli
fdivs
in
push
push
xor
pop
fld
xor
dec
push
inc
xchg
arpl
push
push
sbb
rcll
mov
cli
out
push
mov
mov
fildll
leave
roll
cmpsb
inc
gs
cmp
cmp
cld
in
xchg
add
xor
mov
cmp
loopne
push
add
fs
fst
lcall
mov
mov
push
inc
adcb
cmp
pop
adc
fnstcw
pop
sub
lcall
mov
mov
or
insb
jle
sub
test
stos
es
sahf
test
mov
stos
out
addr16
mov
jge
outsl
push
inc
insl
and
and
cmp
movsl
mov
jno
lret
lret
loopne
ret
jno
popf
or
insb
pop
mov
cmp
pop
inc
sbb
test
mov
ljmp
xchg
sub
mov
inc
sub
lahf
leave
das
or
es
adcb
cld
and
or
push
pusha
imul
dec
adc
aas
std
insl
cmpsl
or
lret
rclb
out
fstpt
dec
inc
cmpsb
adc
jle
push
lret
or
mov
fcmovnb
les
repnz
cltd
pop
inc
xchg
push
aam
cmp
jns
stos
repnz
or
jno
add
pop
das
les
xor
ret
fisubl
push
push
push
adcl
mov
out
stos
sbbl
repz
test
or
aaa
hlt
mov
mov
mov
insb
into
dec
add
inc
mov
lahf
outsb
cmp
je
pop
mov
mov
dec
pop
pushf
popa
dec
mull
push
loop
ljmp
add
stos
leave
xchg
mov
mov
jle
sbb
push
es
int3
int
shl
mov
xor
pop
aam
lcall
pop
mov
loop
lods
aaa
test
pop
jns
xchg
fidivs
jb
and
inc
push
orl
rcr
jne
je
cltd
addr16
les
loop
sahf
and
fcoms
in
shlb
lahf
inc
cwtl
insb
jb
adc
xchg
mov
fsubs
inc
imul
push
jle
ljmp
jle
rcll
xlat
test
mov
sub
jg
rorb
shlb
test
cwtl
cmp
pop
fistps
jp
jbe
mov
in
mov
inc
mov
mov
xchg
lea
add
daa
bound
loop
wrmsr
push
aad
sub
scas
int
outsl
lods
jp
das
sub
sub
inc
fstps
push
lret
and
sub
scas
mov
fistl
les
in
xchg
cmpsl
out
shrb
and
icebp
pop
add
aaa
lahf
vminsd
sub
mov
and
je
nop
jg
push
fldt
lea
adc
clc
pop
dec
xor
xor
sahf
insb
xor
jecxz,pt
jg
mov
jne
stc
das
shl
pop
adc
arpl
pop
jecxz
fbstp
push
fldcw
fdivrl
push
lea
test
sbb
jmp
repnz
or
jb
cli
shll
in
or
daa
sti
fnstcw
sarb
mov
mov
dec
in
and
push
loope
jno
xor
enter
cmp
int3
lret
movsb
mov
in
jae
inc
inc
inc
pop
xchg
in
xor
sub
pop
enter
cmp
insl
testb
lods
insl
mov
push
in
out
mov
stc
sarl
roll
mov
sub
sub
xchg
bound
lock
mov
shlb
shll
insl
or
cmpsb
stos
imul
pop
jne
inc
mov
jle
mov
or
jg
jp
fdivrs
sub
dec
iret
imul
xor
mov
inc
cld
jb
pop
notl
push
aam
or
push
sub
xor
stc
adc
pusha
pop
gs
sbb
inc
outsl
sbb
cmpb
pop
cli
sub
sarl
shlb
aad
lds
push
fidivs
push
jmp
add
inc
shrb
fwait
rolb
push
and
mov
xchg
test
jcxz
fs
add
xor
test
popf
leave
or
mov
or
aam
add
sbb
popa
inc
in
ljmp
or
fsubs
xor
jmp
add
mov
movsb
rol
mov
sub
loope
jl
outsb
test
jmp
cld
jno
and
xchg
lret
inc
popf
xor
mov
sbb
pusha
jl
sub
sub
add
enter
dec
cltd
inc
mov
std
mov
leave
ljmp
and
icebp
sub
adc
pusha
xor
movsb
lcall
and
notb
test
mov
clc
aad
das
cwtl
int
insb
push
mov
mov
inc
sbb
es
mov
lock
xchg
into
pop
aad
fidivs
pop
mov
lret
addr16
xchg
push
jg
into
arpl
scas
pusha
add
aaa
dec
mov
int
xchg
dec
cs
jmp
sarb
mov
scas
inc
stc
fsubl
lock
sub
iret
imul
sbb
andnps
cmp
call
pusha
hlt
pop
mov
inc
jmp
xchg
xor
dec
cmpsl
mov
lea
icebp
xchg
loope
xchg
adc
rcrb
ret
pusha
adc
xchg
in
popl
mov
jns
sub
int3
adc
divb
lds
arpl
inc
push
stos
cld
xchg
call
movsl
clc
mov
pusha
stc
mov
imul
mov
sub
adc
push
mov
shlb
xor
es
in
pop
mov
push
imul
xchg
in
int
fucomi
dec
pop
cltd
sub
push
dec
adc
movl
adc
jl
arpl
psubusw
inc
push
pushf
idivl
pop
sub
sub
fistpl
pop
adc
jecxz
mull
mov
movsl
js
arpl
nop
cmp
loop
jmp
popf
aam
in
loopne
das
or
jne
push
adc
xchg
repz
pop
inc
rclb
xor
ret
idivl
fidivrs
jb
cmc
inc
shll
stc
lods
mov
and
inc
push
pop
je
leave
clc
scas
pop
pop
repnz
or
mov
adc
leave
fdivl
sbb
sahf
jmp
lret
mov
push
jl
outsb
adc
pop
sbb
stos
movzwl
pop
mov
les
dec
scas
xchg
loop
ret
push
std
adc
in
inc
xor
mov
cmp
adc
push
inc
stc
mov
gs
fidivs
lahf
mov
sub
jns
shlb
xchg
sub
cld
sbb
inc
fcmovbe
fisubs
icebp
push
lock
pop
mov
jl
fwait
adc
inc
ret
dec
movsb
dec
or
cwtl
jne
push
inc
or
sbb
add
aas
mov
sub
pop
push
cs
xchg
fdivl
dec
cltd
shll
scas
jb
sub
mov
in
dec
jle
xor
es
dec
ljmp
shl
addr16
fistpll
pop
cmc
sub
in
push
sub
sbb
pop
pop
loope
pop
sub
and
mov
dec
xor
jmp
aas
scas
les
pop
in
test
inc
js
inc
xchg
mov
sbb
scas
mov
xchg
insl
sti
adc
mov
int3
add
pop
cltd
or
mov
movsl
adc
aad
enter
xor
xchg
jp
test
mov
leave
inc
pop
add
mov
jp
inc
jge
jge
iret
sub
jne
cmp
jg
fidivrs
inc
pop
cmp
sbbl
mov
xor
das
rol
or
cmp
in
cs
shlb
call
jmp
ficompl
bound
cmp
sahf
outsl
xlat
push
popf
or
rcr
cmpsb
fidivrl
xor
xor
or
xor
lock
mov
into
dec
das
jo
dec
adc
jb
repnz
lret
mov
jb
cmpsb
adc
rol
push
and
xor
mov
mov
inc
jle
dec
jmp
mov
mov
pop
scas
xlat
xor
jno
rclb
insl
pop
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
jmp
ret
sbbb
jb
ja
int
aad
add
insb
jl
outsl
mov
sub
mov
test
pop
test
in
mov
iret
cmpsb
fmull
ljmp
shrb
sub
nop
dec
sbbl
lods
aaa
inc
in
push
mov
pusha
rol
test
mov
push
popa
popa
mov
mov
pop
aam
xor
cmp
gs
pop
push
hlt
arpl
imul
mov
outsb
shl
adc
mov
aad
xor
std
push
xlat
push
jmp
hlt
ror
arpl
sbb
add
push
aam
repz
bound
jb
adc
sbb
jne
sub
movsb
test
or
int3
pop
popa
mov
test
and
mov
xchg
push
test
cmp
mov
dec
int
shrb
sub
inc
fcoml
and
stc
fidivs
enter
pop
addr16
aaa
or
pop
cmp
sbb
ret
imul
mov
lds
shrl
call
ljmp
xchg
mov
insb
lcall
aam
scas
daa
sbb
inc
xor
aam
rcrb
idivl
lds
and
mov
adc
pop
and
outsl
in
jne
jp
jmp
jns
and
lret
fs
insl
test
xchg
sub
outsl
xchg
jno
repnz
pop
imul
repnz
push
enter
and
push
shr
inc
inc
pop
xchg
imul
mov
cmp
sub
lea
aam
xchg
xchg
in
rcrl
xchg
xchg
sbb
cld
push
jmp
pop
shlb
ja
push
lock
iret
dec
ret
in
or
dec
mov
dec
in
xchg
clc
rol
aas
out
in
push
mov
jns
jecxz
lret
adc
lods
ss
loop
lahf
fmulp
orb
xor
xchg
inc
push
daa
cmpsb
loop
fiaddl
push
push
bound
xor
push
mov
xlat
gs
mov
adc
daa
movsb
mov
rcrl
dec
xor
inc
mov
das
ss
cmp
bound
xor
mov
ret
mov
aam
xor
dec
sub
lds
scas
xorps
mov
mov
xchg
inc
in
out
sbb
mov
cld
xor
mov
and
adc
in
mov
lds
or
add
mov
in
mov
jecxz
and
in
jge
push
mov
iret
or
mov
in
out
aas
icebp
out
or
jmp
popa
mov
or
daa
mov
push
push
or
pop
xor
push
fldcw
mov
aad
in
mov
loop
dec
stos
lods
mov
mov
mov
aas
push
in
cmp
in
mov
xchg
divb
add
adc
push
lock
inc
mov
es
adc
roll
cli
xor
and
mov
xlat
popf
xor
enter
lods
dec
sbb
arpl
push
xor
sub
sbb
ret
icebp
cltd
cmp
fisttpll
push
cmp
push
cmp
mov
dec
ss
js
lock
sbbb
pop
aas
repz
cmp
out
mov
sbb
pop
shlb
fxch
sbb
incb
iret
push
outsl
rcrb
xor
inc
andl
je
xor
bound
cwtl
xlat
sbb
cmp
pop
frstor
arpl
out
dec
or
lock
roll
push
sbb
iret
mul
push
shlb
aaa
jne
out
xor
inc
test
mov
lock
scas
mov
xor
aas
es
ja
cltd
pop
push
test
out
jne
call
inc
mov
push
nop
xor
xlat
sbb
pop
push
mov
jp
loopne
and
cmp
aam
outsb
mov
sub
push
add
mov
stos
out
mov
es
mov
jnp
std
xor
pusha
sub
pop
jno
pop
inc
dec
add
xchg
and
xchg
push
scas
rcl
lret
mov
mov
xchg
inc
fistpll
es
sbb
cmp
dec
ret
test
sahf
xor
ljmp
in
or
push
lret
std
inc
jecxz
std
or
and
inc
lcall
pop
jecxz
arpl
testl
stos
repnz
orl
xchg
adc
push
popf
mov
je
mov
mov
mov
jmp
push
sub
jnp
mov
pop
rolb
pop
iret
cmp
cs
push
lret
dec
loop
data16
out
jecxz
rolb
test
xor
dec
stc
data16
xor
out
shlb
stc
jge
push
adc
inc
xlat
repz
stos
xchg
pusha
stc
sti
inc
add
shlb
lret
jl
and
inc
shl
dec
stos
push
xor
scas
cmp
add
xor
sub
hlt
jb
daa
xchg
rcll
inc
dec
iret
aas
mov
out
and
xor
dec
fld1
cmp
rorb
out
test
daa
push
xlat
dec
frstor
stos
inc
add
pop
pop
inc
jne
sbb
test
jb
fdivrl
xor
gs
mov
add
sahf
sbb
jg
xchg
outsb
or
test
out
cwtl
aad
pop
mov
addl
pop
mov
or
cmp
out
pop
sub
pushf
jae
cld
mov
sub
pop
jo
std
aam
mov
test
sbb
inc
push
es
dec
lds
mov
aam
in
shll
lods
or
pop
sub
jl
pop
jb,pt
push
int3
and
mov
adc
fistps
sbb
dec
das
insl
sbbl
xor
les
jmp
or
loopne
jno
and
lea
mov
cmp
in
lods
scas
popf
lret
xchg
fstps
das
les
cmp
pushf
mov
ret
push
jb
cs
lret
sbb
std
les
outsl
nop
cmp
ds
repnz
test
or
sbb
adc
cltd
pushf
dec
xlat
pop
add
les
sbb
jo
pop
mov
rcrb
xor
pop
test
dec
add
stc
aas
repz
call
and
adc
out
jl
xor
lea
aam
test
ds
sbb
xchg
add
sbbb
xor
test
pop
std
ja
in
push
rcll
inc
inc
pop
lods
lret
bound
push
inc
ds
or
mov
sbb
fs
pop
adc
dec
add
fsubrp
or
cs
xchg
mov
mov
mov
mov
push
xor
push
cli
mov
xor
xor
icebp
add
cmp
sbb
pop
adc
xchg
mov
pop
xchg
lret
push
mull
mov
and
out
int3
or
push
movsb
and
repnz
repnz
sbb
out
movsb
push
jo
leave
repz
cmpsb
mov
scas
sub
xchg
fistpll
cs
and
xlat
pop
sbb
cs
out
jno
cmpb
popf
stos
insb
sahf
lret
xor
data16
inc
insl
orl
popf
adc
dec
add
scas
shrl
imul
pop
iret
sub
cmp
adc
test
loopne
roll
stos
push
push
fsubs
fdiv
loope
pop
fsts
int
ret
push
mov
add
mov
cmc
jno
outsb
ret
inc
ret
testb
jae
shll
fistl
mov
mov
adc
imul
test
movsl
pop
pop
out
repnz
cmpsl
xchg
in
fidivs
lods
in
pop
push
xchg
jecxz
out
lahf
xor
loopne
and
sarb
cmp
cmpsl
unpcklps
ror
in
pop
and
cwtl
jl
push
scas
adc
xchg
ja
stc
inc
sbb
int
icebp
push
insl
pop
inc
mov
xor
and
mov
rolb
das
hlt
out
xor
shll
mov
and
div
stc
jns
int3
nop
mov
arpl
jmp
insb
sub
xlat
int
jecxz
inc
in
ljmp
sub
sub
sub
pop
iret
adc
pop
and
nop
lahf
push
icebp
frstor
mov
xor
pop
stos
icebp
outsb
fisubrl
xchg
lods
insb
in
xorl
cltd
mov
mov
sub
or
mov
aas
icebp
mov
sbb
or
mov
jge
or
js
mov
arpl
and
dec
scas
jae
jp
mov
adc
dec
sub
inc
lock
cs
fdivrs
dec
outsb
lods
popf
mov
insl
movsb
bnd
pop
pop
add
or
adc
or
xor
test
inc
out
sub
ret
and
stc
cld
pushf
mov
mov
filds
inc
mov
jl
aam
cmp
ret
out
pop
xor
ljmp
repnz
ret
cmp
dec
mov
std
and
add
jmp
subl
nop
cmp
ja
in
jo
in
in
lods
clc
adc
xchg
fwait
xlat
shll
xchg
sub
lret
stos
lahf
inc
push
pop
cmp
in
push
and
and
jb
test
rorb
jno
bound
inc
xchg
out
pop
and
scas
dec
dec
lea
iret
cmc
fidivl
addr16
data16
faddp
pop
jp
or
mov
jnp
push
in
outsl
in
mov
test
xchg
dec
loope
js
jmp
inc
imul
or
les
cmp
lar
and
pop
jno
cld
imul
xorb
imul
push
dec
sbb
jb
xchg
cmc
push
sub
push
arpl
nop
fiaddl
out
ds
mov
push
mov
in
jl
mov
enter
adc
jns
dec
das
fwait
inc
xchg
test
js
nop
or
mov
mov
mov
adc
adc
scas
or
lret
and
movsb
mov
xlat
jmp
rcr
repz
cmp
clc
stc
daa
push
jecxz
add
xchg
hlt
ds
int3
aam
lcall
test
jecxz
bound
adc
popf
mov
mov
or
mov
and
sub
in
outsb
dec
lea
repnz
dec
addr16
imul
outsl
and
lahf
mov
cwtl
mov
or
rcll
pop
xchg
dec
mov
fimull
mov
test
movsl
imul
mov
add
mulb
shlb
adcl
inc
shlb
ljmp
push
enter
imul
mov
adc
ret
jmp
sbb
jnp
mov
or
out
adc
stos
mov
mov
cmp
xlat
stc
es
mov
adcb
sbb
cld
sbb
ss
clc
and
mov
jp
dec
arpl
inc
xor
cmp
push
out
mov
scas
mov
inc
mov
cltd
sub
cmp
out
sub
sti
or
and
sbb
inc
cltd
pop
jbe
insb
ja
mov
popa
jecxz
pop
inc
or
scas
mov
add
ret
or
mov
shlb
push
popa
mov
or
gs
test
jmp
inc
dec
movsl
icebp
add
lea
int3
xor
shll
loope
in
or
add
jge
js
xchg
and
inc
das
dec
fdiv
inc
adc
lods
push
sub
lahf
pop
adc
cld
mov
int3
loop
mov
inc
sub
ret
xor
stos
dec
or
sbb
stos
nop
pop
das
jmp
mov
or
adc
cmpsl
inc
sbb
or
jnp
lcall
enter
scas
ss
inc
xchg
xor
push
jg,pn
push
lret
popa
sbb
pop
inc
push
stos
mov
dec
xor
roll
mov
shlb
dec
mov
je
adc
mov
jmp
ret
pushfw
mov
jge
mov
fists
test
outsl
inc
int3
pop
push
jmp
test
cld
cmp
mov
out
mov
das
fnclex
xlat
xor
cs
repnz
push
dec
xchg
jns
xor
mov
adcb
add
out
jns
gs
pushf
jbe
mov
jl
test
add
pop
sub
test
adc
pop
lahf
pop
push
xchg
xchg
fldl
fisttpll
shl
dec
stos
xchg
test
pop
inc
mov
loopne
mov
jo
dec
xchg
daa
xor
mov
sbb
outsl
inc
push
mov
rorl
pop
enter
jb
pop
and
and
test
and
pop
movsl
andl
cmp
into
arpl
fisubrs
or
inc
xchg
add
pop
add
sub
xlat
pop
js
int
pop
push
rorl
pop
pushf
add
push
lock
test
adc
push
or
push
mov
stos
mov
and
pop
sbb
movsl
nop
sub
mov
xor
xchg
mov
sbb
jne
scas
ret
dec
pop
shrl
iret
arpl
push
imulb
inc
sbbl
stc
cli
or
cmc
adc
cmp
sub
sbb
push
mov
insl
or
pop
insb
aas
add
fdivs
fs
push
shlb
adc
les
add
in
hlt
jnp
xchg
sub
outsl
dec
cmpb
dec
jmp
pop
dec
outsl
jo
lret
or
test
mov
or
pushf
sbb
cmp
add
xchg
inc
adc
xor
inc
faddp
jne
enter
enter
cmp
jecxz
push
sarl
jge
sub
xor
aaa
push
repz
xchg
test
and
add
pop
sahf
and
lcall
jle
pop
sbb
fistpll
movsl
aam
jmp
and
inc
lods
xchg
add
fsubr
movsl
or
in
repnz
push
lods
loopne
adc
data16
jge
fdivs
sub
orl
mov
loope
mov
sbb
addr16
mov
jp
popf
aaa
and
daa
movlps
lret
arpl
in
fwait
mov
mov
jno
jmp
mov
sbb
xchg
push
mov
mov
mov
sbb
inc
ss
cmp
mov
loope
fnstcw
sbb
xor
adc
jle
movsb
ss
popf
jecxz
push
lods
out
in
xor
dec
push
push
int3
add
dec
cmp
push
pop
ss
shl
dec
notb
and
xchg
jl
bound
outsl
in
and
out
dec
mov
movsl
shlb
loope
dec
ja
sahf
xchg
dec
lods
jge
test
clc
adc
cmpsl
dec
clc
cmpb
mov
push
pop
lock
je
insb
sub
sbb
ror
push
jg
add
rcrl
mov
pop
test
push
sub
out
ljmp
xor
add
in
mov
ss
lods
lret
cwtl
cmpl
in
and
popa
mov
fstl
sbb
or
cmpsb
cs
fadds
xor
adc
jge
aad
aad
call
cmp
and
fs
inc
push
shlb
arpl
sarb
in
push
adc
mov
jno
jae
cmpsl
rcl
pop
aad
arpl
loope
cli
jp
aas
pop
mov
xor
mov
stc
mov
lret
int
push
das
in
jnp
mov
shl
pushf
mov
rorl
imul
sbb
ss
sub
pop
adcl
mov
cli
movsb
push
mov
sub
ja
adc
mull
addb
js
gs
cmpsb
lods
mov
data16
in
inc
arpl
mov
sbb
lods
je
icebp
add
psubb
push
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
mov
xor
lea
lea
xor
mov
cmp
jne
decl
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
sub
push
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
mov
and
movl
mov
mov
orl
mov
movsbl
cltd
add
add
movl
adc
xor
mov
xor
adcl
xor
movl
cmp
jne
cmp
jne
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
jmp
mov
mov
xor
add
jmp
mov
mov
xor
add
pop
leave
ret
push
mov
sub
and
movl
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
movzwl
and
mov
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
push
mov
mov
cmp
je
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
mov
xor
add
mov
imul
add
mov
mov
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
add
push
add
loopne
add
add
add
push
push
inc
push
pop
adcb
jne
mov
imulb
add
inc
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
mov
add
add
add
add
add
add
add
add
add
sub
add
cmp
add
cmp
add
dec
addb
jbe
add
add
add
push
arpl
outsb
inc
popa
je
cs
add
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
pop
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
add
imul
add
push
add
add
xor
add
dec
push
add
add
add
add
mov
add
add
add
push
add
push
add
push
add
imul
push
imul
sub
add
imul
push
imul
push
add
jbe
add
mov
add
imul
mov
imul
add
