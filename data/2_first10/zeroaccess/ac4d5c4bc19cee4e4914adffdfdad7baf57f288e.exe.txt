push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
mov
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
dec
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
mov
outsb
fcoms
sarb
pop
inc
or
into
test
imul
ficomps
sub
dec
xor
cld
fadds
mov
push
or
iret
jae
ljmp
mov
fwait
fs
enter
pop
cwtl
hlt
mov
sub
scas
dec
or
movd
push
push
jne
mov
pop
jns
les
pushl
dec
xor
jno
sub
out
add
xlat
hlt
pop
sbb
ss
aam
dec
xchg
popa
mov
cs
xor
pop
push
aaa
cmp
push
enter
imulb
mov
mov
jo
sbb
xor
cmp
jbe
fwait
outsl
adc
mov
mov
and
fsubrs
jl
mov
inc
rolb
test
push
push
shl
addr16
xchg
inc
adc
mov
std
lcall
push
jns
test
pop
inc
jp
das
xor
jmp
fstps
addr16
js
xchg
das
push
lods
dec
dec
in
sub
loope
jb
sub
imul
pop
mov
xchg
add
push
add
pop
aad
fmuls
outsl
outsl
in
jecxz
dec
adc
jmp
inc
cld
jmp
clc
icebp
mov
icebp
ficompl
loopne
jo
jo
jo
jo
insb
push
jmp
cs
xor
in
scas
mov
adc
mov
jecxz
das
jecxz
push
mov
push
aaa
movq
test
mov
and
mov
adc
inc
leave
aam
ficoms
mov
cmp
jp
jle
outsb
inc
stc
jl
lods
mov
out
add
or
xchg
or
fwait
push
lahf
clc
in
push
adc
mov
xor
cmp
inc
jns
push
adc
lods
es
cmp
xor
ficoml
mov
inc
xor
arpl
jp
out
xchg
add
or
xor
push
rorl
loop
adc
jmp
jb
outsb
repz
pop
ror
stos
add
mov
pusha
cli
mov
jmp
sarb
xor
fcompl
cli
push
add
pop
lahf
adc
es
jg
inc
inc
mov
sti
rolb
and
pop
push
fnsave
fsubrl
push
xor
mov
sbb
mul
pop
mov
mov
mov
lea
mov
inc
movsb
lods
mov
push
fwait
inc
pushf
sbb
xchg
andb
adc
sbb
loope
jo
enter
pop
push
add
fcmovnbe
pop
add
mov
or
inc
dec
mov
mov
dec
popf
insl
loope
mov
adc
sbb
jno
inc
orl
insb
bound
mov
popf
add
int
sbb
shrb
pop
jle
sub
scas
cmc
xlat
and
shrb
pop
jb
push
divl
jl
or
dec
mov
xor
pop
mov
adc
int3
fistpl
mov
jg
arpl
jp
xchg
and
fiadds
jnp
rcll
repnz
gs
push
cld
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
lret
pop
jo
jo
jo
jo
pop
push
xchg
repnz
mov
pop
add
imul
js
adc
pop
sub
pop
pop
aas
sbb
inc
or
dec
push
inc
jmp
lahf
jne
rcr
sub
adcl
leave
mov
jl
pop
nop
adc
pop
mov
cmp
lahf
mov
test
dec
in
add
lock
movsl
rcrb
adc
jmp
pop
fsubl
or
enter
pushf
cld
jnp
or
repz
rcrb
data16
cmpsl
sbb
mov
fmul
xlat
loop
jb
jns
jnp
hlt
dec
add
adc
insb
popf
pop
incb
arpl
in
sub
jnp
inc
inc
lods
inc
test
sub
adc
jg
mov
inc
loop
je
adc
mov
cmc
mov
add
hlt
orb
ret
sbb
jmp
push
mov
xchg
lret
inc
adc
popa
jg
pop
mov
les
enter
dec
mov
jb
dec
ds
int3
not
bnd
add
out
out
in
les
pop
add
add
bound
cmp
mov
ret
inc
xor
jecxz
xchg
addb
push
xchg
inc
aam
movsl
das
outsl
fwait
js
out
icebp
lret
xor
push
cmpsl
fwait
xchg
and
xchg
adc
jp
lcall
loope
das
aad
dec
xchg
jg
xchg
sahf
dec
push
mov
mov
scas
dec
xchg
xor
sub
les
or
sub
cmp
daa
sub
jae
or
jnp
push
outsl
push
imul
in
sarb
repz
pushf
sub
mov
fcoml
insb
loope
test
lcall
test
std
jo
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
jb
mov
jo
jo
jo
pop
jne
int3
xchg
data16
ficomps
pop
jne
xor
lcall
scas
adc
icebp
and
jnp
mov
clc
pop
movl
cmc
scas
pop
daa
add
lds
icebp
bnd
dec
and
sbb
sbb
in
in
imulb
andl
jmp
rcll
push
push
aas
test
lret
stc
mov
imul
mov
cmpsb
cld
int
push
rcll
loope
mov
xor
shl
push
mov
lock
and
sahf
out
cmp
cmp
pop
ret
int3
jp
xchg
mov
sub
push
xchg
sbb
jecxz
mov
xchg
lret
fldcw
add
push
adc
sub
out
sbb
ss
rol
jg
insl
sbb
es
repnz
jno
jp
cmpb
push
or
icebp
mov
fdivp
test
jbe
loope
inc
aas
add
fwait
add
pushf
repnz
outsb
clc
adc
lea
jns
cmpsl
add
addr16
cmp
sbb
or
mov
daa
pop
xchg
nop
out
lods
lahf
mov
jmp
call
and
fnsave
stc
mov
test
or
jmp
inc
cs
mov
rolb
xchg
addr16
mov
add
fs
shll
test
mov
imul
rcll
and
and
mov
push
mov
jbe
push
cmpsl
xor
popf
sub
addb
mov
enter
js
sbb
popl
es
sub
pop
and
addr16
ret
xchg
and
cmc
jl
dec
sti
addr16
adc
out
cmp
inc
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
mov
sub
jo
jo
jo
cmp
dec
jle
inc
push
or
fcmovu
ret
daa
mov
cwtl
inc
sbb
rolb
and
xchg
dec
adc
sbb
rcr
jp
sti
sub
adcl
push
insb
mov
mul
std
mov
mov
imul
push
scas
sbb
mov
xchg
insb
scas
cmp
sub
mov
insb
fwait
sub
repnz
push
scas
lcall
mov
mov
ret
test
sub
repz
push
cmp
push
rcrl
pop
xchg
mov
or
push
fbstp
xor
iret
ljmp
enter
or
clc
pop
cmp
bound
jge
stos
add
cmp
loop
sub
outsb
popa
push
cmp
movsb
mov
xchg
cmpsl
xchg
aam
je
fidivrs
mov
mov
inc
dec
push
jne
add
sbb
inc
lcall
frstor
cltd
mov
xchg
sbb
inc
xor
std
adc
mov
mov
mov
mov
sub
int3
or
mulb
mov
adc
jmp
xchg
std
adc
jnp
scas
mov
sbb
mov
mov
ja
loope,pt
mov
and
gs
rcrb
cs
leave
insl
cmp
xor
cmpsl
test
jmp
sub
aas
enter
rcrb
mov
mov
or
dec
test
mov
cltd
jae
cli
es
mov
sqrtps
rcrl
jecxz
adc
push
pop
and
fisubl
lcall
out
shrb
arpl
xor
dec
xor
and
xchg
jg
push
ljmp
xchg
outsb
aad
xchg
sub
ficoml
jp
jmp
jg
mov
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
movsb
pop
jo
jo
jo
jo
mov
cs
inc
mov
mov
xchg
repz
push
jmp
add
in
add
shrl
inc
adc
push
jb
mov
iret
or
or
les
lock
test
xor
pop
or
aam
jnp
and
pop
push
addr16
lds
fwait
pop
icebp
dec
ds
xor
psubusb
cli
jnp
les
mov
out
bound
add
aas
jp,pt
fadd
sub
iret
sbb
sbb
pop
imul
ret
and
jge
cmp
dec
pusha
enter
add
push
push
jg
mov
inc
ja
test
loopne
pop
fstl
cwtl
sub
rol
pop
push
js
jbe
jle
aad
clts
inc
stos
jne
adcl
ret
and
jbe
sub
mov
mov
mov
mov
add
add
sub
repz
popa
mov
xor
inc
mov
pop
int
pop
divb
movsl
inc
sbb
push
xor
or
pop
fdivl
push
call
fstpl
stos
dec
mov
sti
inc
mov
add
push
lret
lahf
inc
stos
cmc
fmuls
push
les
adcb
loop
and
jge
dec
lcall
and
jo
mov
rclb
out
xchg
mov
push
lret
scas
lds
cmc
sub
add
jl
es
mov
sbb
aam
sub
adc
mov
les
shrb
cmp
sbbb
movsl
mov
jo
mov
arpl
and
repz
push
mov
and
inc
popa
mov
in
test
out
jg
mov
shl
mov
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
adcb
out
add
jo
jle
jo
lahf
sub
fs
mov
movsb
and
add
js
mov
ss
mov
mov
cli
outsl
pusha
movsl
inc
adc
fistpl
sti
in
inc
les
ljmp
mov
jmp
mov
add
mov
xor
jne
jmp
push
sub
stc
mov
adc
pop
stc
out
xor
nop
mov
add
and
mov
cmpsb
add
sbb
ret
hlt
jecxz
cmpsb
xchg
xchg
cli
mov
inc
inc
test
je
lret
xchg
mov
dec
sbb
mov
push
adc
movsl
test
dec
aas
es
into
data16
and
das
in
push
jbe
icebp
cmp
pop
sti
addl
in
testb
lock
lock
aad
nop
push
mov
inc
insl
sbb
sbb
and
fwait
mov
ja
pop
aaa
mov
loop
cmpsl
xor
adc
stos
rorb
inc
or
mov
das
add
or
pusha
pop
loopne
xor
jl
lock
mov
xor
pop
jle
cltd
or
fiadds
cmp
cmc
sbb
popa
rolb
push
pop
inc
add
scas
sbb
sbb
decb
or
je
repz
outsl
cmp
cltd
fwait
or
push
mov
jno
rolb
mov
out
mov
dec
mov
adc
je
pop
xor
mov
mov
push
adc
add
mov
xchg
mov
jo
lock
popf
inc
and
leave
or
orb
dec
mov
sahf
push
jno
dec
dec
xchg
subl
shlb
movsb
shrl
pop
enter
testl
add
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
pop
mov
jo
jo
jo
fucomp
add
mov
lahf
cmp
adc
xchg
adc
outsl
leave
fidivrs
insl
mov
sub
cmp
sub
cld
xchg
jge
jae
xchg
in
filds
adc
jo
iret
testl
repz
out
les
bound
gs
test
cs
sub
jb
imul
scas
fstl
pushf
adc
jae
mov
lods
jne
inc
iret
fidivrs
shll
push
lea
jne
mov
mov
imull
cmpsl
out
insb
sti
pop
movsb
jae
or
xchg
cmpsb
leave
xchg
and
mov
xchg
sub
add
roll
mov
stc
aas
inc
sbb
pop
mov
icebp
add
cmpsl
push
outsb
out
xchg
les
mov
push
xor
cwtl
cmp
push
jecxz
rcl
inc
xor
fldenv
sbb
into
sbb
fists
fdivl
fs
dec
loope
sub
xchg
push
fidivl
mov
iret
in
push
test
je
int3
and
adc
mov
and
jb
fs
xchg
subb
fs
or
lock
repnz
xchg
data16
jecxz
test
xor
cmp
aaa
mov
mov
loop
das
ljmp
scas
xor
mov
mov
cld
lods
jne
je
lahf
loope
inc
push
lds
scas
jne
dec
movsl
stc
pop
or
xor
dec
add
or
rcrb
push
shrl
out
push
enter
gs
xchg
shr
xorb
shll
sbb
popf
jae
sbb
jb
pop
ljmp
jg
test
movsl
and
sar
pop
cltd
xchg
lret
sarb
xor
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
loope
add
jo
jo
xor
cmp
movsb
sbb
cltd
js
das
pusha
sub
mov
out
pop
jae
and
icebp
mov
pop
jbe
sbb
pop
dec
decb
in
lcall
cmp
call
jb
cmp
ljmp
ror
test
loop
xchg
fwait
outsl
mov
jb
add
mov
xlat
ret
xor
jns
jno
cli
dec
cmpsl
dec
gs
inc
cmp
pop
lret
lock
xor
sbb
outsl
pusha
xchg
enter
mov
scas
int
push
out
push
orl
cmp
aas
and
pop
dec
fs
and
aam
jp
mov
fisubl
sbb
push
daa
pop
incb
push
outsb
cmp
lods
cmp
cmpsl
aad
jge
insl
sub
les
iret
mov
dec
stc
jge
sbb
gs
pop
jo
push
outsb
gs
push
adcl
jnp,pn
flds
push
dec
lea
jae
inc
inc
stos
movsb
cs
das
js
push
mov
int3
cli
adc
mov
subb
inc
mov
jne
lods
dec
fildll
or
test
mov
cltd
es
pop
fistpll
pop
sub
add
pop
insb
xor
mov
test
sub
ljmp
in
fcomi
and
and
roll
decb
std
scas
sbb
test
sub
dec
sub
push
add
xchg
and
jno
xor
pop
dec
adc
jmp
je
sbb
cmpsb
nop
in
pop
fimull
adc
pop
pop
test
sub
mov
aaa
pop
lret
and
push
cli
add
int
adc
int
push
shll
pop
cwtl
test
leave
cld
jle
fisubs
lret
bound
fdivs
mov
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
cmc
jns
dec
cmp
icebp
and
je
lds
jl
jmp
sti
inc
cmpsb
lret
sub
iret
outsb
and
jecxz
sbb
int
and
xlat
data16
dec
push
and
fbstp
push
add
adc
sub
pop
inc
mov
xchg
loope
sub
jmp
or
push
enter
out
push
outsb
test
outsl
std
dec
mov
mov
in
cmpsb
inc
jl
aam
dec
lods
mov
inc
lock
inc
push
movsb
lret
xor
add
push
cmpsb
adc
xor
adc
sahf
movsb
jmp
xchg
loope
mov
iret
adc
cmpsl
andb
push
mov
lea
out
cli
je
mov
mov
pop
push
imul
adc
out
leave
test
cmpsl
push
mov
add
push
add
call
or
mov
mov
imul
sub
mov
test
mov
cmc
mov
movl
mov
hlt
or
pop
push
enter
and
pushf
adc
mov
test
inc
sub
push
cmp
je
adc
shlb
mov
clc
or
mov
popa
lods
in
sahf
lds
bnd
jge
jmp
decl
add
xor
aas
adc
das
adc
das
mov
jb
aas
xor
sbbl
shll
pushf
ja
jmp
mov
jl
jne
pop
ds
sub
pop
ljmp
mov
inc
mov
dec
mov
lods
or
out
add
xor
or
pop
dec
cmp
cld
pop
mov
adc
out
xor
jl
clc
cmp
fucomip
js
sub
sub
movsb
lcall
jle
adc
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
cmp
push
push
pop
bound
sub
in
mov
arpl
shll
push
add
dec
cmp
xor
loopne
mov
lret
xchg
jnp
mov
xchg
xchg
xorl
pop
aam
lret
xchg
jbe
sbb
insl
out
xor
movsl
adc
pop
mov
fiaddl
adc
dec
gs
notl
add
cmc
cltd
insb
push
mov
dec
cld
add
inc
das
aas
outsb
cmp
and
pop
fdivrp
test
in
mov
lock
sub
mov
repz
push
push
cmp
out
inc
int3
sub
nop
xorb
in
xor
push
popf
fs
or
std
push
fcoml
je
loope
mov
pushf
icebp
js
repz
ret
das
call
add
xor
push
push
pusha
mov
pop
xchg
mov
inc
aaa
fmull
lods
leave
xchg
adc
icebp
xor
iret
jle
pushf
cmpsl
cld
pop
mov
ja
sbb
mov
incl
sub
shlb
popa
adc
test
bound
xor
xor
sbb
xor
cmpsb
popa
xchg
fidivrs
repz
aad
std
fistpll
mov
into
xchg
test
test
jmp
sub
xor
mov
loope
jb
and
fcompl
and
mov
mov
outsl
ds
pcmpgtd
popa
pop
leave
mov
imul
out
loopne
push
mov
je
mov
mov
inc
mov
mov
rcrb
and
dec
out
data16
std
pop
bound
sti
cmovo
or
rorb
cmp
repnz
mov
les
push
clc
dec
and
pop
cmp
insb
ret
xchg
jl
outsb
xor
dec
loopne
push
ljmp
mov
push
push
cmpsb
pop
int3
push
aaa
out
mov
xchg
and
fistps
xchg
xchg
inc
call
push
pushf
aad
je
jns
mov
or
push
add
call
imul
popa
mov
ret
or
and
mov
mov
mov
adc
and
ret
test
or
ljmp
ret
pop
mov
mov
dec
cmp
mov
bound
outsb
sahf
xor
cmp
outsb
inc
loope
mov
xor
dec
xorl
fs
add
mov
mov
sbb
push
push
dec
jle
addb
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
aaa
lahf
loop
mov
jle
jo
mov
cmpsb
lea
lea
push
js
pusha
ror
sub
repnz
mov
mov
jmp
push
jecxz
out
push
insb
fldl
push
mov
jne
mov
fcomip
popf
mov
dec
adc
mov
mov
ds
mov
adc
std
fst
or
mov
cmp
push
or
push
dec
repnz
test
fistl
mov
fidivs
nop
push
out
push
ret
inc
lea
cmp
pop
inc
xchg
dec
int3
mov
repnz
call
pop
xlat
loope
or
xchg
fidivrs
jno
stos
aaa
shl
adc
dec
dec
jp
add
mov
mov
mov
out
sbb
dec
mov
in
pop
pop
test
adc
enter
lcall
xor
push
es
test
sbb
insl
push
nop
push
fisttpll
ret
hlt
clc
xor
das
shll
add
mov
loopne
icebp
sti
pusha
psllq
pop
insb
enter
in
jle
dec
jp
add
xchg
mov
popa
in
lahf
test
jp
popf
adc
mov
lret
in
ss
stc
iret
cmp
rep
negl
sbb
mov
stc
es
mov
sub
out
and
push
dec
mov
cmc
adc
lret
pop
test
pop
adc
xor
nop
jecxz
cmp
xchg
jb
rol
cmp
adc
mov
mov
mov
mov
mulb
push
bnd
inc
rolb
sub
ret
pop
jns
lock
add
adcl
and
stos
cmpb
fs
adc
ljmp
das
push
pop
xor
or
std
mov
loopne
xlat
jmp
int3
sbb
adc
inc
jb
xchg
pop
adc
sub
sub
out
xchg
fdivrp
pusha
mov
out
inc
xor
add
ret
jl
push
les
scas
ja
mov
inc
adc
dec
xor
aas
mov
or
hlt
and
lcall
fsubs
out
or
repnz
fwait
jnp
shr
adc
pop
clc
data16
nop
fwait
outsb
inc
or
sbb
push
push
popa
xchg
xchg
inc
sub
mov
jnp
inc
lahf
fstl
xor
xchg
cmpl
mov
in
cwtl
insl
mov
inc
mov
add
cld
xor
add
jmp
fistl
loope
lds
add
mov
jo
mov
cwtl
xchg
push
jecxz
push
mov
pop
cmp
mov
adc
sub
in
icebp
faddl
cmp
jns
das
sbb
lods
out
add
push
pop
cwtl
into
mov
iret
adc
jne
jae
cld
sbb
mov
inc
push
mov
or
sub
iret
ss
enter
jne
xlat
lds
jmp
or
iret
pop
rcrl
xor
gs
imul
inc
jmp
xor
sub
xor
ljmp
leave
lock
mov
mov
jmp
and
push
xor
es
jno
movsb
push
jmp
sub
fidivl
mov
and
xchg
mov
mov
xchg
jns
cmp
add
and
ja
inc
repnz
outsl
cmp
js
lcall
subl
add
cld
mov
stos
dec
mov
and
sbb
pop
xor
in
adc
repz
xchg
ja
arpl
lret
cmp
pusha
mov
imul
add
and
in
jno
cmc
lret
jb
xor
out
push
es
imul
sbb
int3
lcall
lret
cmp
xchg
mov
add
movsb
rorl
add
jp
leave
pop
sbb
leave
push
xor
aaa
cs
lcall
xchg
jge
adc
add
test
lods
stos
add
test
pop
mov
dec
inc
inc
mov
arpl
imul
sub
das
sub
xchg
mov
sbb
xor
sbb
dec
negl
push
movsl
movsb
push
push
sbb
xchg
add
jecxz
push
cwtl
sbb
mov
mov
jmp
jmp
repnz
cmp
stos
inc
mov
add
sub
sbb
mov
mov
push
test
out
xchg
jg
push
fistl
jnp
cmp
sti
jge
lods
dec
mov
cli
mov
jmp
fcoml
scas
shlb
pop
xor
dec
flds
sbb
negb
pop
fistps
shll
out
add
pop
popf
int
fdivrs
dec
bound
std
hlt
fldcw
bound
or
xchg
cmp
pop
mov
sbb
sbb
add
aam
inc
aaa
and
inc
pop
add
cmpsl
cmpsl
adc
dec
inc
mov
jmp
cltd
rcl
jg
sbb
enter
rcll
add
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
dec
ret
popf
cmp
adc
jo
jle
jo
inc
push
cltd
ret
or
push
inc
fldenv
mov
js
repz
stc
jle
inc
imul
mov
jle
ret
push
bound
shlb
mov
and
jp
adcb
pusha
loop
adc
push
mov
sbb
inc
cwtl
fcmovb
sahf
test
and
inc
or
mov
aam
dec
sbb
cmp
mull
inc
test
rcr
mov
ret
cmp
xchg
jl
mov
xchg
test
cmp
jecxz
clc
scas
mov
cwtl
aad
or
cmp
ja
sbb
bound
lret
aam
leave
hlt
scas
orb
nop
ret
dec
outsb
dec
adc
or
pop
jns
jle
int
mov
and
xlat
cmp
cmpsl
mov
popa
pop
push
xchg
jp
add
in
ljmp
jmp
add
or
leave
sub
xchg
dec
push
mov
adc
std
pop
sbb
orb
sub
shr
into
mov
or
jle
pop
fnstsw
fcompl
sbb
enter
inc
into
leave
sbb
ret
push
test
dec
neg
xor
imul
out
pop
adc
cmpsl
orl
sbb
lahf
in
mov
rorl
out
roll
aad
sub
xchg
idiv
xor
push
xchg
fidivl
dec
cmp
pop
pop
jle
inc
mov
push
mov
movsl
cmp
movsb
cs
add
xor
jp
dec
cld
je
add
pop
das
or
mov
pop
inc
and
repnz
mov
dec
push
mov
ficomps
ja
and
nop
test
fwait
jns
and
mov
cmc
call
stc
decb
xchg
adc
sbb
loop
inc
outsl
jg
jmp
pop
mov
dec
mov
dec
xchg
sub
push
jb
mov
push
popf
mov
movsb
out
xchg
jne
div
mov
enter
in
mov
lret
dec
sbb
sbb
aaa
mov
out
out
push
xchg
shl
ljmp
mov
xchg
add
mov
mov
push
add
sti
sub
popa
das
lods
mov
sub
and
dec
inc
mov
scas
sbb
inc
mov
insb
pusha
cmp
add
pop
in
adc
hlt
push
outsl
rcrl
xchg
mov
and
call
sub
lret
sahf
jno
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
pop
jl
js
jo
cmp
clc
jae
mov
push
fstl
scas
lcall
jo
fisttps
push
jns
mov
negb
fs
lret
add
int3
jns
sub
inc
cmp
mov
insl
inc
divl
dec
adc
mov
pop
or
in
adc
mov
mov
add
xchg
push
push
mov
xor
lret
cmp
andb
out
pop
mov
addr16
shr
add
je
push
adc
pop
xor
pop
adc
leave
inc
pop
mov
sbb
add
es
xor
add
mov
adc
sbb
int
xchg
loopne
mov
lcall
pop
or
jns
stos
pusha
dec
addr16
mov
add
sbb
imul
lret
pop
shrl
out
push
jecxz
cmp
inc
ret
sarb
mov
std
rcrb
in
iret
enter
cli
aad
imul
pop
jnp
push
ss
pop
cmp
jbe
leave
das
sarl
or
mov
sub
cltd
inc
imul
jnp
xchg
rol
test
not
mov
cmp
aas
inc
test
inc
inc
mov
aas
dec
mov
add
test
pop
cltd
and
rclb
xor
iret
jns
mov
ret
outsb
cmp
add
jae
cmp
mov
fidivs
pop
pop
adc
push
add
movsl
fistpll
adc
loope
out
out
mov
ljmp
popa
out
out
aas
nop
xchg
sub
int
mov
or
xchg
vphadduwq
pop
sbb
sbb
add
inc
push
shll
test
cmp
sbb
cwtl
push
sbb
lcall
aaa
cmp
aas
or
mov
fs
icebp
repz
out
add
adc
repz
sub
int3
push
jle
cmpsl
mov
mov
fsubrl
jbe
mov
cltd
pop
js
inc
inc
xchg
leave
mov
adc
or
pop
imul
pop
scas
ja
ja
fnstcw
inc
sub
or
pop
insl
sahf
clc
or
push
leave
or
mov
mov
cmp
dec
cmpsb
jae
mov
mov
mov
int
push
push
fwait
repz
xchg
jmp
pop
stc
scas
inc
mov
rcrb
repz
cmp
jp
xchg
aas
add
mov
add
mov
pushf
sbb
loope
std
stc
mov
dec
and
addb
in
icebp
insl
fnstsw
pop
pop
divb
add
dec
mov
mov
add
imul
cmc
lret
cmpsb
and
mov
dec
fwait
pop
fbld
test
sbb
or
rcr
jae
mov
lods
jo
fimull
gs
or
inc
stc
or
push
pop
dec
movsb
loopne
pop
mov
popf
hlt
mov
jne
subb
jbe
inc
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
lds
jo
cmp
je
ror
add
inc
inc
shlb
dec
xchg
leave
cwtl
cmc
push
mov
sub
insl
les
cmp
jnp
mov
pop
mov
add
cltd
dec
imulb
scas
xor
cld
addr16
mov
movsl
rsm
cmp
push
lret
je
jae
stc
jb
inc
xchg
xor
jp
mov
dec
nop
aam
xor
mov
cmpsb
or
push
data16
bound
jbe
pop
rol
test
cmp
cltd
rolb
add
test
jp
push
sbb
nop
shlb
rol
xor
pop
test
loope
js
test
data16
add
dec
inc
push
cmp
out
cwtl
lcall
icebp
xchg
mov
lea
xchg
aad
push
scas
out
clc
pop
outsb
cmp
lds
imull
aaa
lret
xlat
mov
inc
xor
bound
mov
int
pop
stos
push
pop
lods
xor
xor
mov
mov
add
sub
jno
jp
xchg
data16
cli
mov
push
or
xor
test
andl
testb
xor
ficoms
adc
sub
mov
cmp
popa
ja
into
cmc
nop
insl
cli
aas
or
push
jb
adc
mov
adc
push
mov
pop
clc
mov
or
dec
lret
pop
dec
adc
ret
jae
jns
jmp
and
adc
adc
inc
xchg
bound
xchg
dec
popa
aaa
mov
inc
cltd
lcall
fsubr
mov
jns
push
pop
xor
sarb
sub
cmp
xchg
in
shl
icebp
adc
aad
inc
xchg
popl
rclb
dec
sbb
rcll
js
and
daa
mov
pop
and
hlt
pop
or
inc
lods
test
mov
movsl
stos
and
insb
into
enter
add
rcl
jecxz
out
push
in
into
lret
rol
mov
dec
not
and
pop
dec
inc
or
dec
jns
sbb
in
ss
mov
in
fwait
lods
in
jge
loopne
cmp
clc
ret
mov
lret
pop
xlat
mov
inc
mov
cmp
add
xchg
nop
sub
mov
sar
push
test
lcall
sahf
pop
fdivrs
xchg
adcl
mov
inc
scas
lock
loope
sbb
sub
outsb
inc
outsb
sub
shrb
mov
lret
mov
enter
xchg
maskmovq
imull
mov
js
xor
cmp
cmp
push
pop
movsb
movsb
imul
pop
lcall
data16
pop
js
imul
stos
mov
xor
push
xor
test
test
les
int
add
out
neg
push
and
pop
ja
pop
imul
negl
mov
inc
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
adc
jo
jge
jo
rorb
jcxz
loop
mov
cld
fiadds
add
sub
cmp
sub
orl
shll
lret
fcoml
add
sbb
inc
push
scas
inc
bswap
incb
add
jae
add
jle
pop
mov
lcall
shlb
inc
inc
loope
fbld
jp
dec
jo
loope
cmpsl
fsts
call
mov
or
inc
scas
sbb
add
sbb
lret
dec
pop
cmpsl
test
xchg
mov
and
jecxz
cmp
xchg
sbb
je
pop
cwtl
mov
adc
and
std
mov
mov
jl
sbbb
mov
mov
incb
mov
jbe
mov
mov
mov
fmull
in
lcall
icebp
dec
cltd
cmp
aas
addr16
push
jb
ret
in
mov
pop
jg
paddd
and
rcrl
add
mov
add
dec
or
or
xor
pop
int
das
cld
rorl
cmp
push
in
rcrl
stos
fists
pop
cmpsb
mov
loope
repnz
in
mov
and
lods
in
fs
adc
pop
inc
in
and
and
push
xchg
shl
inc
imul
cs
push
test
mov
xchg
jb
cs
dec
cmp
aam
xor
fildll
sbb
mov
jno
mov
lds
rolw
push
je
sbb
jmp
sbb
sbb
pop
lods
call
or
lcall
dec
adc
dec
daa
jo
pushf
inc
ss
pop
mov
orl
and
jae
mov
pushf
cs
jno
shrl
and
fisubrs
stc
repnz
sbb
repnz
push
jp
psubd
add
inc
mov
lahf
pop
ficomps
pusha
stos
aaa
testb
fisubl
sbb
jb
dec
ss
punpckldq
inc
je
sub
jg
addr16
dec
rcrb
loope
push
aad
lea
popf
dec
xor
adc
cmp
fldenv
mov
cltd
cmpsl
aaa
jnp
fldcw
sbbl
inc
add
sub
sbb
dec
sbbl
xchg
jp
add
addr16
test
aam
jns
inc
add
int3
and
out
jmp
scas
mov
inc
repnz
stos
jo
inc
ret
dec
pop
adc
inc
dec
mov
gs
xchg
mov
fsubrs
push
sub
insb
or
or
or
inc
iret
pop
js
dec
mov
xchg
cmp
push
mov
mov
dec
add
fs
pushf
mov
cld
cmp
test
movd
jno
mov
mov
mov
push
das
out
add
jg
add
xchg
xchg
mov
test
mov
mov
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
bts
jo
cmp
aam
sub
push
scas
inc
cmp
adc
arpl
call
mov
out
pop
and
outsb
sub
into
addb
in
mov
inc
frstor
adc
icebp
mov
jno
and
xlat
mov
daa
icebp
mov
into
add
push
leave
adc
rcr
xchg
lret
jp
shll
jmp
jb
pushf
push
lods
cmpsb
mov
dec
adc
push
out
ss
sub
mov
in
push
shll
xchg
push
iret
and
cmp
xor
sub
rcrl
pop
loopne
das
adc
addr16
daa
sub
inc
imul
mov
jae
mov
popf
sbb
inc
inc
cwtl
dec
sbb
and
popa
jns
pop
push
or
jb
mov
lods
mov
adc
push
data16
shll
sub
stc
outsb
pop
aad
popa
in
in
outsb
mov
and
ds
cmp
popa
fistps
in
rol
lods
xchg
scas
fmuls
filds
push
sub
push
mov
lods
sub
mov
movsl
mov
jno
xor
repnz
stos
in
lods
cli
mov
inc
outsb
scas
sub
mov
aam
adc
add
mov
out
and
xchg
jae
pusha
xor
dec
push
sbb
je
scas
or
lcall
icebp
adc
out
jbe
divb
xchg
int
add
stc
push
ds
adc
jnp
xchg
arpl
ljmp
adc
jp
test
in
xchg
pusha
test
ret
push
and
adc
mov
aaa
js
sbb
test
lahf
stc
inc
call
mov
jb
test
xchg
insb
sbb
loopne
push
inc
cltd
test
mov
add
andl
mov
xchg
xchg
ja
scas
xchg
xchg
mov
sbb
adc
xchg
mov
enter
mov
sub
pushf
fs
pop
nop
pop
imul
xorb
xchg
ss
rorl
pushf
sub
jo
pop
pop
add
push
jne
mov
mov
xchg
sbb
outsl
cli
jmp
inc
sub
fcomps
shlb
loopne
pushf
es
mov
add
xor
add
daa
jb
mov
jb
mov
lods
std
push
xchg
cmp
jbe
pop
jb
cmp
xlat
icebp
mov
sbb
push
cwtl
in
sub
pop
pushf
subl
fcoms
pop
sbb
dec
mov
and
pop
cmp
testl
mov
jo
ljmp
cli
fildll
cwtl
add
cli
cmp
aam
enter
mov
call
sbb
jecxz
and
mov
mov
popf
insb
xor
iret
push
push
mov
mov
cmc
dec
xor
pop
xchg
mov
and
sbb
inc
inc
sbb
test
inc
jae
xor
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
in
dec
jne
and
jo
jge
jo
push
test
notl
or
sahf
loopne
aaa
mov
add
gs
inc
jbe
lcall
call
sbb
dec
cmp
jmp
cli
aam
fsubrl
fcmovnu
xor
pop
les
sub
pop
adc
aam
adc
pop
add
and
leave
pop
aaa
mov
inc
add
mov
dec
adc
mov
addr16
add
jno
dec
nop
les
int
mov
sbb
dec
ja
pop
out
push
test
in
rcr
dec
add
cld
sbb
push
jnp
lods
lret
fcom
arpl
xlat
cmp
push
or
xlat
push
loopne
cltd
xor
cmp
jno
jne
sahf
shrl
dec
mov
ss
adc
and
bnd
mov
lods
xor
pop
xchg
push
aas
mov
adc
mov
xchg
lds
iret
cmp
dec
adc
or
dec
inc
in
adc
pop
daa
mov
xlat
inc
or
fmull
sbb
push
xchg
or
and
or
add
mov
stos
popa
add
inc
lea
cli
cmp
cwtl
lods
cmp
jle
mov
icebp
xor
mov
shrl
fbld
sbb
xor
push
inc
das
cmp
test
imul
leave
xchg
mov
sti
cmc
mov
mov
push
push
lret
pop
push
pop
addr16
mov
ret
add
dec
dec
or
ret
dec
lock
sub
jl
mov
pop
pop
jecxz
dec
sbb
int
dec
xor
inc
mov
sbb
dec
scas
rcrb
cmpsb
iret
bound
add
cli
sub
fs
mov
fdivl
aas
mov
dec
jp
mov
add
into
loopne
xor
fstpl
dec
nop
mov
std
jno
lret
and
adc
nop
gs
movb
pop
out
icebp
fidivl
or
out
fs
test
fidivrl
mov
inc
clc
cmpsl
mov
sbb
into
pop
pop
pop
mov
lods
inc
clc
icebp
xchg
repz
add
in
xor
cs
ds
in
cmp
inc
xor
in
or
jno
cwtl
jno
dec
push
popa
jne
jmp
and
out
cmp
fcomp
iret
cld
lret
std
out
pop
mov
sbb
cmp
mov
cmp
pop
std
mov
xchg
jo
out
mov
outsl
pop
and
movsb
sub
push
mov
std
lds
out
je
movsb
std
push
xchg
and
cwtl
roll
xlat
xchg
pop
pop
adc
mov
fdivrs
fisubrl
xchg
mov
cmpsb
mov
aam
or
mov
push
cmpsb
stos
das
jae
add
neg
and
hlt
jo
je
repnz
or
push
jo
rol
rorb
sbb
dec
xchg
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
mov
and
cmp
daa
out
jmp
mov
adc
xchg
mov
inc
sub
lds
into
movsb
ds
push
adc
mov
or
add
mov
mov
fucomip
push
sahf
arpl
loop
sysret
mov
cmp
jg
lods
jmp
out
test
inc
cmpsl
gs
adc
mov
mov
dec
out
mov
popl
mov
loopne
inc
pop
xor
jbe
enter
nop
aad
mov
dec
pushf
addl
sbb
pop
addr16
mov
cwtl
jbe,pt
mov
andl
arpl
fsubs
aad
je
dec
mov
icebp
repz
xor
xchg
repz
mov
subl
shl
mov
in
push
dec
adc
outsb
shlb
inc
call
cmp
scas
sbb
jmp
or
in
push
lea
sbb
xlat
inc
cltd
imul
pop
ja
push
xor
aam
mov
es
movsl
fwait
daa
loopne
add
xor
mov
inc
in
insl
pop
sub
sub
out
add
jne
scas
rcl
mov
rclb
pop
ss
push
packuswb
out
popf
outsl
imul
in
jne
mov
mov
jno
cli
je
jmp
lret
dec
or
std
and
and
aaa
sbb
pop
out
push
jg
push
pop
fcoml
clc
adc
push
jl
fidivl
test
notl
dec
jmp
inc
and
jno
out
cmp
push
mov
movsl
pop
aam
ret
mov
inc
mov
lahf
jo
ss
test
dec
mov
dec
aad
stos
cmp
jl
jg
jne
and
jp
mov
addr16
roll
cmpsl
pop
inc
mov
aam
jb
cmpsb
daa
adc
cmpsl
or
push
mov
shll
jne
scas
sbb
mov
stos
test
pop
mov
pop
mov
cmp
sbb
repnz
andl
pop
es
out
or
lock
je,pn
xchg
xlat
cmp
outsb
mov
and
daa
and
orl
loop
jl
lods
add
and
mov
push
in
xchg
jecxz
les
fwait
repnz
gs
cmp
and
rol
pushf
xor
idiv
aaa
push
dec
mov
call
pop
dec
push
add
je
push
xchg
mov
gs
insl
jnp
fisttpl
cmp
jae
ficoml
mov
push
xchg
sbb
into
mov
jne
inc
arpl
add
shl
insl
pop
mov
pop
push
sub
dec
arpl
adc
push
mov
es
hlt
loopne
xchg
mov
jns
mov
pop
out
inc
push
dec
jmp
stc
outsl
mov
cmpsl
lock
push
or
sbb
fnstenv
bound
enter
pop
adcl
dec
jbe
rcl
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
sbb
cmp
repnz
jno
outsl
mov
mov
imul
pop
lock
dec
out
inc
pop
popf
sub
lods
imul
leave
and
and
ds
cmp
enter
jle
pushl
jns
lea
xor
outsb
jnp
fcomps
ret
orb
in
cmc
sbb
popf
in
or
pushf
hlt
movsl
jmp
ret
push
cmp
std
insb
jns
daa
mov
mov
lcall
clc
loope
test
imul
add
or
pop
jecxz
jle
pop
jg
sub
addl
xchg
xchg
cwtl
std
inc
in
ds
ret
clc
mov
inc
dec
out
outsl
push
adc
jo
sub
aas
pushf
cli
lods
mov
mov
stc
out
sbb
mov
xlat
and
popf
pop
add
nop
aas
popf
lret
xor
pop
daa
pusha
addr16
cmp
fistl
hlt
orl
out
movsb
outsb
cmp
sbbl
xchg
aam
stos
dec
cs
das
int3
dec
es
int3
out
add
push
push
popa
negb
lcall
scas
aad
jmp
mov
repz
stos
sahf
cmpsl
loopne
push
mov
popf
sbb
in
iret
leave
shl
mov
out
lea
sub
jbe
out
cmpsb
loop
pop
xor
pop
das
adc
mov
lret
jmp
jnp
decl
negb
aaa
in
xorb
xor
fimuls
dec
add
jecxz
push
jne
sahf
ret
sbbb
ret
lods
jmp
xchg
mov
iret
dec
jne
js
jp
or
dec
scas
not
fldln2
push
repnz
mov
stos
fildl
data16
call
in
lret
push
and
push
enter
jmp
rcrb
andb
test
bound
in
insl
add
test
xchg
or
adc
inc
cs
sub
add
fcmovbe
or
cmp
hlt
jl
mov
cld
cmp
push
iret
xchg
out
adc
das
jle
sbb
shll
fwait
push
mov
loopne
jo
sub
mov
daa
mov
es
jbe
outsl
enter
pushf
int
push
mov
ss
test
fcmovnbe
mov
insb
fs
mov
dec
and
stos
mov
cmp
cmc
jbe
sub
mov
sub
shll
popa
cmp
out
nop
fsub
leave
mov
xchg
pop
lcall
push
shrl
imul
adc
fadds
stc
cmpsl
lahf
and
int
mov
jne
lods
fmul
cmc
jbe
jmp
jne
dec
add
sbb
shll
lods
sbb
push
mov
fnstenv
sub
dec
hlt
iret
jnp
add
dec
mov
push
mov
dec
jns
fwait
ret
dec
nop
xor
shll
cmpb
adc
or
rorb
test
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shrl
cmpsl
push
sub
cmp
stos
cmpsl
dec
subl
mov
add
push
sub
insl
adc
ffree
dec
leave
ss
jg
cmp
jae
insb
movsl
repz
push
dec
lcall
in
notl
add
movsb
addb
and
push
xor
and
xchg
pop
mov
pop
dec
repnz
cmpsb
in
scas
movsl
mov
fneni(8087
test
add
mov
dec
adc
ret
mov
mull
push
xor
pop
imul
xorb
or
mov
ret
lods
lods
sbb
push
hlt
push
je
jg
cmc
orb
mov
das
fcmovb
adc
sbb
mov
arpl
loopne
mov
js
mov
movsl
push
shrb
inc
cmp
jae
gs
fwait
jg
xchg
sub
fmuls
pop
pop
and
sar
pop
xchg
mov
pusha
outsb
inc
pushl
pop
out
je
pop
test
pop
aam
stos
aam
mov
xor
fwait
sub
sarl
and
in
mov
fwait
leave
mov
xchg
jecxz
jmp
cmp
in
lea
fnstsw
inc
test
call
fstpl
xchg
xchg
fsubl
add
dec
jp
scas
pushf
scas
hlt
insl
cmovge
lea
icebp
shrb
cltd
leave
cs
pop
sbb
ss
or
hlt
inc
push
sbbb
mov
mov
push
jns
dec
test
and
lret
loopne
test
repnz
inc
mov
cmpsb
or
js
jge
sbb
incl
sahf
fiadds
negb
or
loopne
cmp
push
or
sbbl
shl
push
adc
aaa
mov
in
jb
xlat
inc
sub
in
push
into
clc
pop
fadds
or
push
sahf
rcr
xchg
jo
push
rcll
jbe
push
xlat
push
enter
mov
mov
enter
xchg
out
sbb
mov
rcl
dec
cmc
xchg
sub
fwait
mov
mov
sar
cli
push
popf
into
iret
cmp
mov
or
jmp
cmp
inc
stc
sub
and
cmp
in
sub
movsb
shll
sahf
inc
inc
pop
xchg
push
inc
sar
or
addr16
lods
test
sar
push
nop
and
insb
cmp
dec
lahf
inc
or
outsl
test
add
cmp
push
int3
mov
in
dec
and
xchg
inc
lret
push
fdiv
sub
out
mov
movsb
pusha
sub
mov
jle
arpl
mov
dec
fs
jmp
orl
addr16
shr
and
outsl
pop
push
imul
inc
mov
dec
aaa
cmovp
rorb
add
outsb
push
inc
movsb
dec
enter
mov
adc
movsb
and
fisttpl
mov
or
in
sbb
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
subb
jo
jle
jo
xchg
pushf
mov
stos
pop
push
popa
xchg
enter
mov
out
cmp
xchg
imul
std
jno
mov
leave
push
lret
movsb
imul
and
sbb
cwtl
out
or
hlt
mov
mov
or
fildll
test
aad
or
xchg
push
scas
faddp
ret
mov
mov
mov
mov
aad
addb
stos
popa
das
push
mov
or
dec
hlt
fs
cmp
dec
xchg
sub
mov
lock
push
jle
xchg
xorl
leave
adc
adc
dec
jns
stos
ret
dec
mov
fisubrs
jo
clc
jbe
mov
les
dec
rol
xorb
pop
jp
int
addr16
fnstenv
adc
out
xor
cmpsl
sub
push
pop
mov
aas
dec
dec
jns
into
mov
fst
mov
sbb
andb
pop
stos
xchg
ds
gs
sbb
rolb
pop
ds
push
ss
stos
xchg
mov
neg
pusha
jb
cli
jl
sbb
je
decl
lea
das
jb
or
ss
cmp
jle
movsb
bound
pop
insl
or
inc
les
fcompl
popa
test
push
pop
jge
mov
jo
sbb
pop
mov
push
sub
cmp
xchg
iret
xorb
mov
adc
mov
sbb
popa
pop
int3
sub
and
xor
fstpt
jne
fwait
add
sub
adc
pop
je
add
outsl
in
and
jo
fcompl
leave
mov
es
insl
pop
in
ljmp
lods
sbb
adc
push
jg
iret
and
scas
cvttps2pi
push
jmp
add
lret
js
cli
mov
insb
fidivrs
fucom
sarb
cmp
dec
movsl
xlat
dec
test
push
mov
sbb
sub
push
push
adc
scas
loopne
push
aam
mov
cltd
jg
out
stos
cmp
scas
cmp
add
mov
sbb
cltd
lahf
mov
dec
aaa
std
fdivrs
inc
ficompl
fdivs
mov
aas
fcmovnu
addr16
inc
lahf
scas
out
push
bound
gs
push
loop
dec
rcrb
jg
loop
add
lahf
orb
cmp
mov
xor
or
gs
sbb
mov
xchg
inc
add
add
mov
jmp
ja
and
dec
xchg
ret
xor
jo
cltd
dec
cltd
jno
pop
cmp
dec
mov
sub
lods
insb
and
jg
pop
xor
ret
dec
inc
adc
mov
in
jl
in
cltd
mov
sbb
pop
hlt
mov
rorb
mov
frstor
mov
popl
mov
aaa
daa
push
icebp
jg
aam
bound
stos
notl
daa
movsb
ljmp
fwait
mov
sti
scas
jb
lea
clc
fcompl
int
mov
xchg
mov
fwait
lock
mov
fsubl
rcl
out
out
push
mov
xorb
insl
mov
push
movsb
add
in
je
out
mov
adc
in
push
lret
lcall
inc
gs
jnp
adc
iret
inc
ds
push
mov
lea
pop
movl
rcr
adc
ror
inc
enter
popf
bound
stos
fsubrl
test
repnz
and
sub
aam
sub
jo
mov
std
mov
out
adc
push
inc
out
out
xchg
dec
fstl
jnp
repz
mov
hlt
jecxz
int3
mov
sbb
lea
push
fdivs
adc
sbb
lcall
pop
xor
xchg
in
and
mov
inc
push
scas
data16
outsl
shlb
sub
dec
sub
lcall
fdivr
xchg
cmp
or
pusha
mov
test
dec
add
out
sub
call
push
dec
bsr
add
adc
xlat
xorb
andl
pop
cs
mov
jl
int
popf
sub
shrl
cmpsb
cltd
mov
mov
ja
sub
dec
or
clc
in
xor
cmp
or
xor
loopne
sub
outsb
add
popa
add
dec
or
cli
push
ficoms
mov
loopne
outsb
jp
imul
sub
mov
scas
jmp
jae
les
not
test
sub
pushf
and
and
mov
jecxz
adc
fisubrl
lret
push
imul
cltd
mov
lcall
adc
cmc
adc
jle
push
add
push
lahf
mov
aad
pop
es
mov
ljmp
adcb
fwait
js
or
mov
jmp
sub
cld
je
sbb
xor
and
das
jmp
inc
cmp
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
out
test
jo
stos
jle
jo
inc
test
fcomps
sar
xor
inc
iret
pushf
mov
daa
out
test
or
mov
inc
mov
dec
test
cmp
and
pop
push
xchg
mov
mov
jl
cmp
lahf
xor
inc
aad
mov
and
or
rorb
mov
adc
sub
pop
or
inc
pop
std
pushf
ja
cmc
push
xor
pop
loop
or
pusha
shlb
pushf
push
push
cmp
and
jno
adc
jne
nop
mov
mov
add
cli
inc
test
in
repnz
imulb
mov
nop
mov
cmp
lret
bnd
adc
dec
pop
es
and
les
sub
cwtl
std
pop
jnp
or
cmp
push
testb
pop
stc
mov
jg
push
seto
mov
sbb
rorb
inc
push
mov
inc
xchg
loopne
les
inc
dec
mov
xchg
popf
dec
sub
outsl
push
mov
fdivrl
push
or
xor
testl
and
movb
xchg
nop
xchg
fisubrl
stos
cmp
cwtl
xchg
push
lahf
lock
mov
cmpps
sbb
inc
in
bound
div
add
pusha
nop
inc
imulb
mov
scas
nop
sbb
jp
into
outsb
sbb
cmp
sbb
imul
sarl
pusha
push
cli
push
test
mov
sbb
sti
add
jecxz
les
mov
sbb
jge
mov
or
sub
dec
arpl
or
jae
add
jp
iret
out
push
pop
out
lret
cli
les
outsb
xchg
lcall
cs
and
cmc
or
mov
cld
and
add
fs
add
add
das
mov
push
imul
aas
sub
mov
mov
xor
sbb
data16
mov
jl
imul
dec
in
push
mov
mov
xchg
xorl
push
sti
test
shll
sbb
bound
lods
insb
adc
pushf
ss
adc
xor
pushf
sub
dec
and
pop
ret
lea
add
inc
xor
sbb
add
mov
mov
or
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
shll
jo
jg
jo
out
jo
loope
mov
pop
aad
jp
les
cwtl
scas
aas
lds
das
ret
inc
or
adc
leave
pop
mov
lcall
inc
ficoms
js
lahf
mov
bound
ret
mov
push
lret
inc
jne
ret
insl
pop
cs
pop
movsl
sbb
aam
xchg
and
arpl
lock
jge
movsb
pop
sub
fadd
imul
jl
imul
test
xchg
cmpsl
repnz
test
push
pop
int3
cwtl
xchg
ret
and
or
inc
ds
dec
sarl
mov
mov
dec
xor
in
mov
cmp
xchg
inc
test
mov
fdivr
into
mov
lods
mov
inc
ds
xor
incl
inc
cmc
mov
aad
outsb
ss
bound
insb
sbb
sbb
int
push
push
fwait
into
adc
enter
cs
aad
adc
adc
sub
cmp
jns
imul
jmp
adc
pop
pop
mov
mov
xchg
clc
adc
jle
daa
cmp
fcoms
into
push
ja
xchg
dec
mov
jg
loop
inc
testb
or
aam
imul
pop
in
sbb
xchg
cli
jmp
loopne
int3
xor
xchg
addr16
cmp
sub
push
and
cmp
pop
sub
fisubrl
pop
sub
pop
cwtl
loopne
in
dec
mov
in
iret
imul
hlt
mov
stos
pushf
xor
or
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
mov
jo
cmpsl
jg
jo
add
das
push
movsl
mov
add
cmp
push
xchg
pop
sbb
mov
mov
sbbb
test
pushf
movsb
jno
dec
xchg
push
fmul
stos
movsl
dec
inc
and
sub
roll
inc
inc
xor
int
mov
jmp
repz
dec
mov
inc
sbb
lock
jnp
add
insl
jbe
popf
imul
and
push
pushf
jnp
ret
pop
mov
sbb
fdivl
rorl
or
addb
push
ds
adc
jns
imul
imul
mov
add
dec
lods
add
pop
sbb
sti
sbb
stos
test
into
sub
push
ja
pop
int3
mov
mov
jp
dec
xchg
sub
or
jg
loope
movsl
mov
inc
in
sbb
fcompl
daa
fcmovb
and
popf
adc
jbe
dec
bound
xchg
fwait
jp
testl
jnp
xor
mov
aas
mov
js
mov
addl
fcom
aas
push
sbb
sbb
cltd
cmp
dec
mov
sbb
aas
xlat
and
mull
or
cmp
fsubrl
sbb
jns
js
sbb
pop
hlt
or
repz
inc
jns
xchg
mov
movsb
inc
push
sbb
aam
pop
mov
fimuls
xchg
dec
fwait
pop
pushf
push
addr16
orb
fldl
in
mov
jge
push
adc
out
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
cmp
cmpl
jg
jo
rep
mov
mov
add
mov
fadd
and
jp
test
fstpt
and
fisttps
add
dec
lock
jns
daa
inc
xor
test
repz
and
movsb
aam
mov
or
pop
out
mov
int3
or
mov
movsb
adcl
or
fistpll
mov
or
je
inc
jne
mov
leave
imul
cmc
in
addr16
jl
lock
add
pop
xchg
dec
or
mov
adc
in
push
sbb
adc
leave
lods
cmp
xor
clc
inc
add
or
jl
push
daa
add
mov
xchg
les
push
dec
ljmp
sub
in
test
sbb
cltd
inc
cmp
hlt
lret
repz
fstp
xchg
push
mov
stc
dec
movsb
fwait
xchg
pop
push
aam
and
and
insb
pusha
insb
frstor
divb
or
loopne
cmp
add
sub
nop
test
outsb
jecxz
cmp
inc
clc
jmp
xor
das
notb
lahf
jne
or
data16
andb
or
and
imul
sub
dec
sub
daa
mov
ret
insl
jo
push
mov
hlt
sahf
jns
scas
push
xor
movsb
std
dec
int3
and
dec
push
sub
insl
cmpsl
mov
xor
sbb
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
popf
or
jg
cmp
loop
jo
ja,pt
add
push
sub
ficoms
leave
push
adc
jge
decl
enter
sahf
scas
sbb
les
xchg
lods
sbb
nop
sub
adc
clc
and
xchg
cmp
cmp
lcall
jns
cmp
push
in
or
fisttpl
push
test
sbb
dec
and
jo
lret
adc
ja
ljmp
dec
mov
sub
cmp
sbb
das
cmpsb
and
mov
imul
push
stc
mov
subl
xor
stc
mov
jmp
mov
cld
xchg
out
icebp
jmp
mov
jb
adc
aas
fmulp
push
push
xchg
mov
outsl
xchg
rclb
outsb
and
dec
js
dec
pop
cmpl
mul
and
adc
pop
mov
sub
aaa
ljmp
aam
flds
dec
cld
rol
outsl
jne
jno
shrl
jns
test
fwait
adc
iret
add
enterw
adc
lods
out
arpl
in
jno
pop
in
mov
and
mov
or
mov
icebp
loopne
scas
sub
pop
not
lods
bound
xchg
jnp
cmpsl
dec
lcall
das
jl
push
jbe
mov
mov
add
push
mov
push
subl
ret
add
movb
xchg
loopne
aam
push
insl
cli
xchg
mov
fisttpll
jl
mov
out
fstl
sbb
xor
int3
mov
icebp
cmp
pop
mov
cmc
sub
dec
cld
add
fs
bound
jg
leave
push
cmpsl
mov
pop
mov
or
cmpsl
pop
mov
mov
lret
jmp
movsb
mov
cmovae
pop
cmp
sbb
sub
xchg
es
pop
push
or
mov
cs
jne
outsl
cmp
sbb
pop
call
jg
jl
sub
xchg
sbb
fsubl
sbb
mov
insl
cmpsl
pop
leave
jns
ljmp
lcall
push
mov
cmp
xor
xor
add
and
dec
pusha
movsl
out
stos
xor
mov
jl
outsl
fiadds
arpl
fbld
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
sub
jo
loop
jo
loope
mov
aaa
rorb
adc
repnz
mov
sarb
lret
addr16
lcall
mov
mov
or
jg
call
add
ret
jae
je
inc
fs
pusha
cmp
std
addr16
lahf
dec
data16
and
cltd
push
lds
sahf
add
js
mov
push
or
dec
mov
xor
mov
sahf
cmpsl
lods
imul
dec
adc
cmpsb
outsb
lods
js
roll
mov
notl
out
add
leave
mov
dec
rolb
adc
and
adc
push
out
nop
sub
add
jo
or
sbb
into
jp
test
nop
call
std
idivl
lret
mov
mov
push
xchg
int
xchg
ret
push
mov
mov
adc
inc
xorb
and
pop
js
imul
sbb
out
faddl
lods
jb
or
test
gs
add
lcall
cmp
iret
push
aaa
and
dec
test
repnz
add
int3
inc
lret
xor
sbb
xor
and
inc
xchg
in
insb
int3
mov
inc
cmp
inc
int3
or
addl
je
mov
mov
pop
out
aad
sub
fsub
mov
data16
xlat
sub
cvtpi2ps
rorb
sbb
jmp
ss
lret
adc
cmp
pop
popa
jne
ret
xor
sub
jb
xchg
ja
and
out
mov
xchg
lret
rcll
dec
cmc
in
pop
sub
pop
test
repz
imul
rorl
inc
push
xchg
mov
cmpsl
and
subb
push
lea
ds
test
mov
jle
repz
stc
ret
or
out
in
repz
leave
lret
pushf
repnz
jle
ret
xchg
sarb
movsl
mov
lea
aaa
out
ss
mov
sub
fiaddl
enter
xor
mov
fs
sbb
mov
outsl
mov
fldcw
mov
push
out
insl
dec
mov
decl
les
test
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
lahf
pop
out
pop
lds
and
jo
imul
sahf
inc
mov
sti
sub
push
pop
xchg
dec
outsb
fldcw
scas
mov
dec
pop
inc
lods
xchg
shll
out
loop
roll
cmp
xchg
aad
fdivrp
rorb
loope
inc
xchg
cmp
dec
stos
mov
inc
outsl
jo
add
incb
sub
fldz
sbb
inc
or
and
loopne
jmp
div
dec
lret
pop
and
mov
dec
mov
scas
sbb
jns
xor
push
cmp
push
xchg
and
mov
sbb
cmp
xchg
test
imul
sub
xor
inc
int3
sbb
dec
dec
or
stc
xchg
push
fnsave
rcrl
mov
adc
lahf
enter
adc
mov
lods
imul
idivb
mov
jb
push
in
push
xchg
inc
cmp
in
je
pop
das
jge
into
fs
mov
movsl
test
mov
sub
xchg
in
pop
pushf
ja
jns
mov
sbb
rolb
jle
sarl
insl
daa
addr16
fistpll
sbb
mov
sbb
je
jnp
cmc
mov
add
lcall
xchg
mov
jno
xchg
outsb
shll
mov
loop
xchg
push
rcll
sahf
lods
loopne
sub
cltd
dec
mov
inc
rclb
notl
pop
xchg
testl
adc
push
lods
cmp
lcall
cwtl
cmp
pop
and
pop
push
adc
cmpsl
movsl
mov
ja
dec
jb
and
inc
lret
movsb
mov
outsb
int3
sub
outsb
push
or
aas
int
cli
and
lods
or
sbb
test
mov
mov
daa
mov
aad
icebp
std
stos
jmp
adc
icebp
fisubrl
ljmp
adc
mov
in
fwait
lahf
xor
mov
scas
insb
mov
movsl
in
dec
clc
adc
inc
dec
or
jne
fcoml
cmp
mov
cmc
xchg
cmp
scas
fnsave
adc
cmp
fs
adc
sbb
ret
jmp
or
and
push
std
dec
fmulp
cmp
mov
jge
xor
mov
popf
nop
fidivl
jb
xor
mov
stos
imul
and
jo
loopne
into
data16
push
jecxz
ror
mov
xor
bound
cmp
leave
andl
and
push
and
pushf
faddl
sub
cmpl
or
and
cmpsl
mov
or
dec
stos
mov
add
mov
test
xchg
cmp
mov
inc
dec
xchg
mov
push
roll
lret
lret
std
leave
test
pop
dec
mov
popa
repz
cwtl
fldenv
fildl
adcb
jl
or
sbb
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
pushf
or
jo
jge
jo
lock
cmp
rorl
xchg
repz
stc
cmp
sti
add
roll
loop
push
mov
jne
lahf
xlat
ds
or
loopne
in
sarb
add
pop
nop
negl
sarb
xor
daa
push
mov
cmp
sub
xchg
sbb
rorb
xor
fs
xchg
mov
fldt
ret
or
test
loop
rorl
jno
cmpsb
or
hlt
adcb
adcl
pop
dec
aam
push
mov
pop
sub
mov
xor
fcoml
std
dec
push
daa
or
pop
pop
shrb
adc
xchg
sbb
pop
and
cmp
cmc
push
sbb
add
loope
lret
cwtl
aas
jl
and
jg
leave
ljmp
push
imul
and
int3
sub
ret
enter
sti
scas
xchg
outsl
ljmp
ljmp
fxtract
pop
cli
bound
cmp
std
mov
aam
cmp
outsb
mov
mov
adc
mov
insb
jmp
popa
fnsave
lcall
push
test
out
ror
out
dec
ja
nop
ret
ja
pop
fdivrs
aas
push
jo
stc
pop
inc
icebp
in
gs
sbb
aas
xchg
or
mov
pop
data16
mov
pop
cmpb
mov
mov
mov
or
in
lret
push
in
push
adc
jne
dec
fildl
in
cmp
popa
lahf
inc
sub
inc
adc
ror
xor
cmp
jno
popf
jns
cmpl
setl
xor
sub
sbb
or
xchg
xchg
adc
jnp
mov
inc
sbb
push
push
cmpsl
ret
std
das
daa
aam
rdseed
inc
loopne
mov
inc
and
imul
insb
pop
adc
dec
daa
mov
nop
sahf
mov
mov
xchg
scas
mov
mov
movsb
sbb
and
push
movsl
mov
xchg
imul
sbb
outsb
scas
adc
mov
mov
pop
sbb
test
adc
int3
notl
packsswb
cmp
pop
ljmp
ja
jg
mov
jecxz
cmp
out
add
xor
sbb
push
push
jp
inc
int3
sub
ret
push
mov
ljmp
mov
jo
xlat
push
leave
call
jnp
cmpsb
push
loopw
pushl
loope
or
xor
sub
pop
adcl
sti
push
ss
push
int
mov
xchg
inc
lds
cmp
push
cmp
fcmovnb
sbb
in
jbe
mov
cs
out
pcmpgtd
fcompl
popa
and
rcl
sub
mov
inc
add
ja
jmp
adc
jl
adc
mov
sub
mov
fldenv
xor
rcrl
and
fmull
sar
inc
add
out
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
jp
hlt
test
jo
sbb
icebp
data16
in
ret
sbb
jmp
or
mov
and
push
xchg
repz
xor
outsl
pop
imul
aaa
insb
in
stos
push
rorl
fst
stos
int3
rorb
pop
fstpl
xchg
aam
jbe
xchg
aaa
test
or
inc
popf
sub
xor
jl
dec
insl
push
out
push
scas
jbe
mov
or
push
xor
pop
ror
cmp
mov
repz
fistps
jg
cmp
enter
add
lods
dec
jnp
xlat
mov
insb
std
add
mov
sbb
adc
pop
push
sbb
movsb
outsb
aaa
mov
lock
in
push
in
inc
push
and
fsubl
xchg
enter
xchg
inc
xchg
jp
popa
test
xchg
and
arpl
jns
clc
insb
jb
push
shll
sbb
sub
imul
cmp
jno
aad
ja
push
mov
sub
mov
dec
jne
call
pushf
cmp
outsb
adc
sti
testl
fnstsw
bound
mov
and
or
or
bound
inc
sub
int
push
sbb
sbb
xor
sbb
shr
xor
rcl
iret
push
leave
fwait
mov
adc
pusha
xor
sarb
mov
testl
movsb
cmp
inc
in
xchg
rcrb
add
mov
xchg
les
xchg
and
data16
pop
iret
push
mov
rorl
fs
aaa
pop
jae
xlat
mov
lock
stos
mov
mov
movsb
leave
push
cmp
and
add
add
cmpsb
pop
push
fstps
andb
jo
das
ficoml
pop
addb
or
dec
in
xchg
test
pop
mov
cmp
push
lcall
pop
mov
sub
je
mov
adc
pmaxsw
cmp
inc
popa
mov
repz
ljmp
add
and
dec
sbb
xchg
aam
cltd
imul
dec
clc
daa
addb
mov
fcom
dec
or
daa
inc
mov
insl
loope
xchg
sub
jle
sbb
sub
xchg
mov
mov
iret
xor
lret
pop
lea
leave
stos
out
clc
lea
xchg
ret
push
cmp
orb
mov
sub
add
cltd
insl
pop
or
data16
mov
imul
sar
push
sub
rcrl
sarb
lea
mov
push
enter
pop
pushf
xor
shlb
xorl
push
mov
loopne
movsb
mov
data16
test
inc
shl
adc
or
cmpsl
dec
pop
in
stc
jae
pop
js
imul
dec
dec
mov
pushw
mov
and
cmp
js
shl
sub
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
cmpsl
adc
jo
jge
jo
repz
cltd
test
mull
arpl
jnp
or
xor
rcrb
lods
cmp
adc
repnz
xchg
jle
dec
mov
push
daa
test
xchg
enterw
loopne
adc
and
push
sbb
cltd
ss
icebp
jo
movsl
popf
mov
sbb
fs
mov
jo
mov
sbb
lods
stos
dec
aaa
int
cmp
pushf
xor
flds
adc
xor
xor
jbe
jne
xor
push
xlat
sub
cmc
lret
faddl
mov
sbbl
nop
fidivs
roll
dec
sub
cmpsl
test
retw
loope
and
ficomps
lods
inc
inc
es
stos
pop
inc
cmp
outsl
daa
add
stos
cmp
inc
push
mov
lds
test
out
gs
aad
shlb
sbb
pop
jae
adc
clc
lret
js
fstpl
mov
adc
cmc
sub
lcall
add
daa
push
adc
dec
sbb
mov
lea
enter
mov
aaa
out
loope
adc
pushf
mov
ror
dec
cmp
jmp
cltd
push
aas
mov
xchg
xchg
lds
lock
mov
popa
push
dec
jmp
arpl
insl
push
inc
ret
sbb
nop
jecxz
loopne
pop
mov
and
pop
subb
lcall
push
pop
lock
sbb
je
cs
add
xor
das
dec
outsl
js
inc
loope
fidivl
sub
or
ss
sbb
and
and
push
out
scas
jmp
xchg
jge
cmp
daa
mov
rolb
mov
daa
pop
jmp
add
mov
std
mov
and
out
jb
fisttpl
and
push
sti
int3
ret
test
ds
adc
add
in
in
fadd
xor
push
add
add
stc
out
ret
test
popf
cmp
xchg
clc
jp
mov
adc
sub
aas
adc
push
inc
jmp
cmc
lods
les
and
jnp
mov
inc
repnz
mov
cmc
dec
xchg
xor
sti
jne
pop
into
rcrb
aad
jmp
test
mov
test
cmc
cmp
add
mov
pop
aam
dec
movsb
cs
pop
or
mov
popf
mov
out
sbb
lcall
xchg
adc
loop
xorl
inc
add
sbb
mov
push
add
movhps
xor
dec
in
movl
adcb
movsl
test
loop
pop
lahf
addb
adc
sub
xor
cmpsl
sub
iret
add
mov
add
sub
cmp
sarl
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
popa
xchg
mov
and
jo
fsubrp
mov
loope
inc
add
pop
or
xchg
jle
imul
inc
cmp
and
mov
sbb
pop
movsl
cmp
cmp
mov
lret
mov
dec
repnz
pop
push
adc
mov
ss
push
xchg
adc
inc
cmc
sub
adc
mov
xchg
inc
pop
and
mov
inc
jnp
push
pop
mov
sbb
lcall
push
ljmp
push
loopne
xlat
enter
sbb
jo
push
jg
sbb
dec
push
nop
jle
seto
add
adc
push
jns
out
xchg
sti
pop
and
cmpb
xchg
mov
cmp
sbb
repnz
jge
mov
bound
jecxz
pop
pop
mov
jge
mov
mov
test
mov
fldcw
mov
lcall
xchg
jns
sub
std
mov
cwtl
xchg
xchg
movsb
sbb
jg
dec
scas
pop
pop
das
lret
jne
daa
jns
mov
fdivrp
dec
icebp
jecxz
mov
stos
aaa
fsts
adc
jnp
call
jle
in
fwait
jmp
or
sti
push
add
data16
jbe
ds
loopne
das
call
mov
xchg
xchg
mov
test
xor
or
insl
mov
jae
in
pushf
leave
ljmp
mov
mov
aaa
int3
dec
push
jne
rolb
shlb
mov
mov
dec
mov
das
push
pop
cmpsb
in
les
jecxz
bnd
jle
cmp
mov
sub
in
rol
fstpl
clc
inc
adc
xor
mov
cmp
mov
sti
xchg
lock
out
jnp
mov
jnp
ret
mov
js
adc
inc
out
sar
daa
xor
jb
or
xchg
xchg
push
mov
xlat
push
xor
dec
jbe
xor
sbb
pop
call
sbb
into
push
dec
xor
xchg
sarl
pop
cmp
pop
xor
ret
popf
xchg
ret
pop
insb
incl
popa
jbe
adc
cltd
movsbl
fidivrs
rcrb
add
mov
and
out
dec
mov
dec
sub
xchg
push
xor
ja
sbb
mov
loope
mov
mov
aaa
pop
sti
inc
cld
in
dec
inc
inc
stc
mov
jecxz
mov
repnz
cltd
mov
testb
repnz
repnz
cs
jo
adc
testb
adc
cli
xchg
adc
sub
mov
out
jl
shll
sub
aaa
add
movsb
jnp
pushf
xchg
xchg
mov
xchg
aad
sti
mov
test
cmpsb
jbe
sub
push
leave
fistpl
fisttpl
jl
add
sub
bound
fimull
cltd
stc
pop
add
push
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
mov
sbb
pop
aad
jo
jge
jo
jg
daa
sbb
sbb
dec
es
imul
cmp
into
loop
mull
xor
dec
in
cmp
push
sub
icebp
mov
mov
jns
xchg
push
dec
leave
ret
inc
push
dec
inc
fdivrs
pop
inc
mov
xor
fwait
cmp
fsubrs
ja
popf
outsb
jecxz
mov
mov
push
mov
lcall
mov
xchg
lods
fwait
push
mov
and
imul
cmp
jns
inc
scas
mov
test
xor
push
mov
sub
mov
sarb
jns
dec
push
stc
mov
addb
mov
ljmp
cmp
mov
push
cltd
daa
movsl
dec
or
adc
pop
and
out
shrl
js
scas
es
sar
push
mov
jb
inc
imul
fisttpl
sti
xor
aam
cmp
mov
mov
popa
test
mov
js
and
loope
int
pop
movsb
addr16
mov
pop
mov
cmpsl
sti
mov
test
xor
shlb
xorl
cmpsl
mov
adc
cmp
cli
lock
fwait
mov
add
call
pop
add
pop
mov
mov
xor
dec
jle
inc
notl
fldenv
mov
bound
sti
add
mov
dec
dec
cmpsl
ret
out
sbb
faddl
xchg
insb
xlat
aam
dec
inc
popf
mov
js
push
pop
cmpsl
lret
mov
sbb
dec
mov
inc
jae
inc
cwtl
jns
loopne
call
or
inc
push
or
adc
and
das
fistpll
adc
loop
rorl
pop
in
inc
push
stos
lret
sub
xchg
fsubrs
push
sub
adc
pop
into
add
mov
vrangesd
arpl
fidivrl
loopne
pop
mov
xchg
fwait
lfs
sbb
ficoml
outsb
imul
mov
xchg
into
lret
mov
or
push
xchg
pop
fwait
mov
jecxz
iret
add
sub
rcrl
mov
sbb
inc
push
sub
pop
adc
add
pop
jle
pushf
test
inc
adc
arpl
and
xlat
fs
test
adc
inc
dec
mov
jne
test
xor
xchg
test
jp
int3
add
mov
pushf
jae
int
cwtl
mov
repz
ret
cltd
fs
orl
xchg
add
leave
sahf
push
jmp
mov
add
fisubs
mov
popf
scas
cmp
fsubrs
xchg
cmc
test
jp
lods
jmp
mov
sub
frstor
notb
outsl
pop
add
inc
repnz
inc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
shlb
and
jo
mov
cmp
test
cmp
clc
mov
clc
lcall
jmp
mov
lahf
add
loopne
rcrb
jb
mov
clc
outsl
js
sbb
dec
push
mov
sti
sarl
sub
xor
scas
arpl
push
jg
sarl
inc
cmp
cmp
fsubrs
ret
push
pop
icebp
lods
jo
mov
loopne
fldl
loope
iret
and
leave
scas
shl
push
dec
out
ja
sub
add
push
mov
int3
cmpsb
jne
push
lods
dec
mov
xchg
clc
dec
push
dec
mov
out
jns
mov
ds
addb
std
jecxz
fidivs
lahf
or
fsts
mov
xor
popa
push
out
xchg
aaa
call
test
mov
adc
cmp
xor
cli
lds
test
jecxz
pop
jecxz
mov
jecxz
into
xorl
and
sbb
and
pop
xor
sbb
push
sbb
aas
xor
std
sbb
es
aas
lock
push
xchg
pop
and
cmpsl
and
dec
jg
mov
test
sub
adc
and
mov
mov
dec
push
scas
ja
out
arpl
ret
lock
repnz
xchg
add
idivb
lret
xor
mov
movsl
shlb
imul
xor
out
in
xchg
mov
cmp
jg
xchg
dec
ss
mov
push
in
mov
mov
mov
jmp
out
and
xchg
jge
nop
jae
xchg
lds
scas
cmp
fwait
mov
add
insl
jbe
mov
in
mov
or
inc
sub
movsb
call
mov
push
cmp
ds
dec
testl
cmp
xor
imul
xorl
inc
cld
xor
inc
lds
stos
neg
out
stc
shll
adc
rolb
mov
cmp
nop
cmp
test
sbb
jge
mov
lock
push
iret
xor
fwait
or
test
mov
inc
test
jge
and
cmp
push
xlat
mov
in
pop
adcl
jo
repz
sarl
sbb
pusha
out
pop
cmp
mov
inc
mov
std
xor
jle
xchg
vpmovzxbd
aaa
addr16
repnz
sub
mov
fwait
mov
and
aam
leave
xor
mov
mov
push
cwtl
xor
cmovae
jmp
push
sahf
lcall
jnp
ja
shrl
out
arpl
pushf
repnz
fstpt
sahf
inc
call
push
sub
sbb
test
sbb
lahf
les
stos
gs
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
int
sbb
or
mov
jno
push
addl
pop
sbb
out
cmp
popa
jge
gs
pop
xchg
dec
test
inc
inc
ret
push
inc
rol
add
hlt
pusha
push
packsswb
mov
daa
and
inc
sbb
mov
rcrb
loopne
inc
mov
mov
mov
mov
fsubrs
cmp
cmp
dec
pusha
scas
hlt
stc
nop
cmp
pusha
icebp
addr16
insl
hlt
adc
sbb
aam
mov
pop
or
enter
xchg
lock
rol
les
test
pop
cmc
lcall
mov
imul
cmp
xchg
rol
sti
imul
mov
add
call
dec
dec
shl
clc
lcall
mov
jne
loopne
push
scas
or
movsl
clc
mov
add
pop
add
jno
shlb
mov
pop
lods
addr16
pop
rorb
push
lods
and
ja
adc
fistl
xchg
icebp
add
sub
mov
push
out
xor
mov
out
adc
fisttps
jmp
push
dec
mov
mov
pusha
push
repz
fcomps
test
mov
test
fisubl
jmp
xchg
shlb
imul
inc
add
aad
mov
out
cs
out
jmp
dec
xorl
stos
pop
out
mov
jl
xorb
pushf
inc
ja
xor
and
test
pop
jmp
pushf
dec
in
jl,pn
add
fistps
mov
sbb
cmpsl
adc
mov
sbb
mov
test
int
mov
mov
test
cmp
push
ja
int3
pop
cmp
mov
aad
movb
es
enter
xor
je
les
scas
push
scas
mov
aad
in
fldcw
or
pop
and
arpl
cmp
lea
push
push
jns
add
jbe
xchg
push
hlt
cmpb
sub
loop
or
cmc
leave
inc
jg
add
repnz
push
cs
ja
sbb
fmul
nop
je
ret
adcl
ret
scas
pop
mov
mov
jo
add
cli
repz
mov
cmc
imul
insb
movsl
clc
lahf
jle
push
cmpsb
jnp
fsubl
jp
aaa
lds
jo
outsb
mov
idiv
cmpsb
shrl
pop
xor
arpl
roll
loope
cmp
add
dec
jle
andl
push
addl
in
rcrb
hlt
and
lea
mov
ljmp
aad
fcomps
pop
and
lret
in
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
mov
jo
and
jo
jne
inc
loope
jl
ds
fiadds
loop
and
out
mov
cmp
adc
push
out
pop
jp
mov
mov
ds
adc
and
jo
addr16
ret
inc
das
push
xchg
xchg
cmpsl
fcoms
push
adc
pop
imul
mov
les
mov
cld
mov
ljmp
ds
fisttpll
mov
push
push
shll
fwait
xchg
jmp
out
fistl
xor
aad
aaa
and
jg
fwait
cmpsb
xchg
push
ss
mov
cmpsl
lret
mov
push
jne
xchg
jnp
imull
xor
sahf
inc
sub
adc
test
dec
aam
inc
mov
dec
std
inc
jecxz
mov
outsb
mov
dec
cs
hlt
or
test
dec
sub
repz
out
lods
outsb
xchg
mov
mov
je
or
push
clc
pushf
into
sbb
popa
les
or
sbb
dec
mov
cld
inc
lea
movsb
xchg
add
cmpsb
cmpsl
repnz
adc
xchg
imul
stos
jbe
roll
inc
jmp
lock
stos
sbb
daa
popf
push
dec
pop
fwait
mov
ud2
enter
adc
push
mov
adc
xor
popa
xchg
popa
xchg
je
out
dec
addr16
mov
mov
jno
jg
inc
sbb
mov
mov
dec
fwait
or
pop
add
xor
das
imul
sbb
pop
or
into
outsl
dec
jecxz
in
jmp
mov
xor
pop
mov
jns
push
in
stos
lret
mov
mov
out
lds
mov
xchg
inc
insb
cld
movsb
sti
lods
jp
mov
sub
and
cmp
aaa
push
js
mov
fwait
scas
cltd
imul
stos
push
jg
mov
stos
sbb
sbb
sub
ficomps
cmp
data16
movsl
push
fisttpl
in
out
mov
fldt
pop
pop
imul
mov
cmp
cmp
sub
movsl
bound
insb
mov
nop
inc
daa
jl
push
xchg
imul
pop
mov
and
dec
xor
dec
or
xchg
or
mov
mov
xchg
mov
dec
mov
bound
out
mov
mov
jg
or
xor
mov
lret
movsl
cmp
adc
aaa
test
lcall
jp
xchg
pop
xchg
call
cli
mov
loopne
loopne,pt
jne
push
mov
mov
pop
out
rcrb
mov
ret
push
cwtl
aad
mov
fs
inc
cmp
ss
sub
loop
lret
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
dec
push
fnstenv
and
jo
or
in
testb
inc
jecxz
and
movsb
jp
jl
pop
add
sub
lods
mov
in
mov
mov
out
sub
divl
lock
das
daa
pop
leave
ds
ljmp
aaa
mov
clc
add
adc
sbb
mov
lds
mov
dec
lock
stos
movsb
pushf
or
pop
lock
adc
dec
enter
xchg
or
enter
dec
add
mov
gs
pushf
jae
jne
bound
insb
dec
enter
push
and
subb
mov
rcr
dec
inc
pop
mov
addr16
lods
pop
jns
pop
dec
jmp
cmp
mov
test
ljmp
mov
cmovnp
aas
jle
pusha
cltd
sbb
imul
mov
icebp
in
pushf
and
mov
mov
push
xlat
leave
gs
hlt
iret
lret
cmp
push
mov
and
inc
xor
lods
shl
jmp
mov
orb
gs
and
cmp
xchg
mov
xchg
insb
ljmp
lcall
cs
and
xchg
dec
dec
imul
mov
lods
mov
mov
mov
test
orb
xchg
fsubs
lret
imulb
or
or
pop
inc
dec
pop
lea
xor
xchg
in
dec
sbb
cltd
pop
or
jnp
movsl
mov
imul
jo
xchg
lds
repnz
lahf
scas
add
jo
push
dec
in
lods
andl
add
pop
mov
cwtl
sbb
jne
mov
pop
stos
movsl
mov
div
xor
inc
mov
in
sarl
jmp
shl
xchg
ljmp
outsl
fdivrl
pop
inc
xchg
cs
or
sbb
or
shll
dec
xchg
pop
dec
xchg
cmc
stc
pop
es
out
inc
lcall
and
icebp
mov
sub
popa
lahf
scas
xchg
jge
mov
in
add
pop
push
pop
das
and
scas
roll
sahf
mov
pop
pop
cmc
mov
dec
arpl
fwait
lahf
nop
ljmp
test
movsl
testl
push
or
js
inc
shll
fists
ds
lods
scas
iret
aas
scas
jmp
pop
ret
cmpsb
cmpsb
mov
out
outsl
rclb
mov
sbb
xchg
ret
rolb
adc
outsl
adc
mov
lds
cmp
dec
addr16
push
pop
out
clc
aaa
pusha
mov
xor
lret
jg
jle
push
xor
fwait
nop
and
mov
pushl
lea
jmp
add
out
out
xor
call
xchg
xor
ja
jo
and
jo
mov
je
pop
scas
push
in
sub
mov
lahf
call
jae
mov
aam
sub
mov
lret
add
inc
mov
xor
fldl
test
jl
shll
movsb
mov
xor
adc
addr16
std
push
in
pop
mov
fidivl
jmp
enter
lret
sahf
or
push
stc
push
popf
jbe
ret
out
dec
aad
and
outsb
test
and
mov
test
jl
inc
in
inc
sbb
adc
xor
xchg
push
pop
xchg
push
cltd
es
mov
xchg
fs
outsb
fdivr
pop
jp
imul
scas
and
inc
xor
cwtl
jns
mov
sbb
xchg
pop
test
pop
ret
cmpsb
sub
popf
inc
pop
push
adc
or
sub
iret
add
push
pop
fisttpl
cltd
inc
mov
add
jo
mov
loop
ret
add
add
cmp
xchg
xchg
pop
outsb
andl
shl
das
jle
cwtl
cltd
add
hlt
pop
cmpsb
mov
jne
mov
dec
sub
push
mov
inc
out
pop
xchg
cmpsl
push
test
ficoml
sbb
aas
test
add
cmp
in
dec
insb
and
cmp
mov
out
sbb
mov
addr16
dec
jge
mulb
cmp
arpl
ljmp
in
mov
or
dec
xchg
fidivrl
cwtl
std
out
stc
mov
mov
fdivrl
dec
repz
lret
mov
je
mov
ret
movsl
mov
cli
inc
jp
int
mov
pushf
loopne
mov
out
ljmp
and
mov
int3
and
adc
and
fld1
inc
out
push
dec
dec
cmp
inc
fdiv
fs
into
pop
mov
pop
add
jns
add
rclb
add
test
add
mov
stc
and
neg
repz
jo
addr16
in
inc
mov
ds
sti
xchg
pusha
jae
rcrb
popa
fadd
dec
mov
pop
inc
hlt
es
lods
xchg
mov
loope
sbb
dec
xor
mov
pop
aad
inc
mov
pop
ret
ljmp
test
cmpsl
sub
cwtl
in
push
fwait
push
cmp
stos
or
std
mov
sub
test
lahf
xchg
sbb
orl
xor
cmp
mov
push
int3
xor
pushl
lea
outsl
enter
rorl
jbe
insb
popa
andl
and
lods
lods
and
mov
pop
in
add
dec
insl
sbb
jecxz
jp
mov
lret
out
scas
iret
cmp
jne
add
inc
sbb
push
inc
pop
pop
push
mov
xor
or
imul
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
ss
jo
and
jo
lret
insl
insl
lock
mov
cmp
std
popa
gs
loop
frstor
stos
movsl
loopne
and
xchg
cmc
sub
fdiv
nop
iret
jnp
and
or
cmp
stc
nop
sbbl
divl
cmp
push
sar
jo
enter
popf
call
jmp
cld
test
inc
lock
movswl
cli
aam
imul
scas
mulb
aad
in
pop
xor
sbb
lock
sub
push
adc
ds
lods
fwait
mov
pop
or
lods
sub
add
std
adc
adc
jae
xor
xchg
loop
jbe
idivb
imul
mov
inc
dec
ljmp
shlb
dec
sbb
push
or
bound
dec
inc
iret
jle
pop
movsb
ret
std
xchg
xorb
aas
push
xchg
xchg
rorl
and
pop
lock
addr16
dec
dec
mov
and
mov
mov
test
rolb
jne
test
sti
mov
lcall
adc
cmpsl
dec
mov
clc
outsb
push
cli
pop
jmp
imul
std
inc
addr16
aaa
lock
mov
int
shll
jl
and
xchg
and
pop
aaa
xor
xor
lcall
cs
mov
icebp
dec
inc
fucomp
dec
daa
adc
addr16
mov
mov
xchg
neg
cs
ljmp
inc
int3
cli
clc
arpl
lcall
push
jl
mov
add
jno
out
insb
dec
loopne
mov
test
out
pop
das
xor
dec
stos
mov
xchg
push
test
lds
in
lods
outsl
dec
cmpsl
orl
std
jmp
or
push
sbb
ret
les
sub
cltd
loope
rclb
fs
xor
inc
addr16
ds
repz
pusha
insl
and
aam
xchg
ret
inc
sub
push
pushf
fwait
daa
lcall
pop
cld
fidivrs
mov
movsl
hlt
es
sbb
mov
cmp
pusha
dec
mov
out
mov
mov
fisubs
push
mov
xchg
add
push
movsl
dec
pushf
pop
sub
es
and
pop
sbb
int3
fdiv
movsb
imul
ja
test
and
imul
sbb
shr
insb
mov
jecxz
ljmp
adc
insl
inc
sarb
adc
inc
push
dec
xor
inc
test
into
and
xor
jnp
das
pop
test
arpl
out
jnp
jnp
and
mov
sub
mov
adc
les
roll
bound
cmpl
sbb
sub
mov
mov
std
scas
ss
test
add
and
inc
add
dec
add
add
mov
ja
add
xchg
mov
xlat
out
jo
and
jo
fcmovnb
pop
nop
cld
shlb
push
and
out
mul
mov
jp
ja
ja
std
jmp
adc
mov
inc
xor
sub
mov
jnp
mov
das
popa
adc
inc
cmovb
jle
stos
and
andb
add
adc
push
pop
test
mov
leave
cli
adc
lods
mov
adc
xor
mov
mov
mov
loopne
shlb
xchg
lds
es
adc
jb
push
ljmp
pop
add
mov
cltd
cmpsb
pop
imul
mov
xchg
push
xchg
movsl
stos
pushf
rorb
lret
add
add
xor
push
sbb
xchg
inc
imul
inc
mov
sbb
js
pop
add
imul
mov
int
stc
movsb
pushf
dec
dec
mov
jecxz
inc
inc
es
div
dec
xor
jb
imul
scas
xor
mov
cld
subb
iret
cld
xchg
dec
inc
mov
adc
push
xchg
int3
pop
cmp
add
add
clc
stc
into
mov
add
push
dec
ret
push
push
rol
inc
dec
out
cmp
lock
aas
ret
movsl
jbe
dec
scas
adc
cmp
das
or
pushl
cmpsl
aad
rorb
xor
scas
lea
pop
fs
xor
pop
mov
mov
sbb
daa
repnz
xchg
adc
movb
add
and
or
push
je
pop
pop
inc
xchg
push
fnstcw
xchg
pop
loope
xor
xchg
and
xor
cmpsl
repnz
mov
cltd
jle
and
cltd
cmp
call
clc
mov
call
pop
fucomi
aam
inc
aas
xchg
int3
sbb
inc
and
fldl
aaa
push
cmp
lahf
lahf
push
or
test
frstor
repnz
jmp
push
xchg
adc
sub
sub
or
mov
xlat
stc
inc
jb
cltd
mov
xor
xchg
hlt
adc
movsb
in
in
push
add
push
pushf
and
lods
test
mov
scas
lods
insl
dec
pop
ficoml
rcrb
js
jne
xchg
mov
fcmovb
mulb
nop
or
sbb
or
test
out
cwtl
cltd
inc
ss
sbb
into
rcrl
inc
in
xchg
jns
fwait
and
and
testl
scas
pop
int3
insb
or
mov
ret
add
stc
mov
ja
xor
adc
cmpsb
fidivl
mov
aad
xor
in
push
inc
cli
loopne
cmc
shrl
insl
in
push
outsl
add
test
sbb
dec
lods
scas
ret
out
cmp
fsts
jbe
jg
adc
xor
add
pop
sub
arpl
sbb
push
fadd
mov
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
idivl
icebp
and
jge
jo
dec
push
xchg
insl
ret
bound
lret
pop
xchg
mov
xchg
jnp
pop
mov
iret
in
pop
popf
cmpsb
or
and
rolb
mov
test
inc
add
in
test
daa
cwtl
pushf
fcoms
call
inc
dec
mov
out
das
stos
outsl
data16
cmp
inc
pop
hlt
and
loope
shll
push
sub
jne
and
loope
jmp
movsb
mov
aam
cmp
aaa
cvtps2pi
outsl
mov
adc
sbb
or
ficoml
jle
xchg
cli
das
mov
mov
and
fbld
xor
mov
cmpl
xorl
sbb
push
dec
xlat
orl
cmpsb
aam
dec
mov
jno
push
in
lcall
mov
push
jp
and
and
push
xchg
mov
in
stc
push
jl
push
loope
outsb
in
out
icebp
aad
mov
mov
nop
mov
push
add
push
xlat
mov
xchg
mov
add
add
cmpsl
pusha
nop
cmp
aad
push
cmc
pop
xchg
xchg
fisttpll
xchg
dec
adcl
xorb
test
gs
stc
js
xor
call
dec
add
dec
push
popa
jl
fcmovbe
lods
imul
cwtl
rep
add
rep
loopne
fisttpl
mov
pop
xchg
xor
andb
les
push
inc
out
xchg
or
mov
jo
je
or
xor
adc
ds
movsb
mov
out
xchg
push
int
clc
test
or
ret
adc
push
dec
out
mov
daa
hlt
pop
or
sbb
fs
loopne
cs
ja
jae
in
inc
test
js
jbe
imul
bound
dec
rolb
cmpsb
and
dec
jbe
imul
sarl
int3
mov
aaa
cmpsb
jmp
not
mov
and
mov
mov
push
pop
insl
or
dec
inc
push
sbb
pop
cli
mov
sub
xchg
and
push
and
stos
jmp
cmp
lods
mov
mov
rcl
dec
add
mov
inc
insl
fisubrl
push
adc
mov
je
push
lods
adc
jecxz
xchg
jle
jmp
mov
jl
loope
fs
pop
inc
xchg
pop
es
hlt
xor
add
loopne
addr16
inc
aaa
lcall
nop
jl
loopne
pop
dec
cwtl
mov
pushf
add
dec
mov
adc
dec
push
cmp
aam
xor
sbb
dec
outsl
mov
lahf
inc
outsb
pusha
sbb
pushf
add
cmp
xor
xchg
push
sbb
and
pop
dec
flds
inc
test
push
mov
out
out
sahf
call
dec
cmp
dec
mov
scas
es
cmpsl
pusha
dec
jb
imul
mov
shl
xchg
push
scas
dec
imul
fs
mov
std
jmp
sbb
and
push
icebp
jno
fcom
or
push
movsb
adc
pop
lea
and
push
and
rorl
cmp
push
std
lds
dec
pop
mov
scas
add
lahf
inc
dec
sub
lret
cli
inc
jmp
mov
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
cmpsb
mov
jo
lahf
jge
jo
ss
xchg
mov
inc
mov
or
les
xchg
add
ja
sbb
aas
jb
jle
xor
mov
add
insb
fwait
int
xor
fisubs
xchg
add
ja
mov
loopne
inc
je
shll
scas
xchg
xchg
and
jbe
pop
insb
push
sub
pusha
cmp
fwait
add
lods
fucomp
loopne
or
xor
in
mov
mov
sahf
push
push
pusha
rcll
jle
cmp
lahf
inc
mov
daa
loopne
sub
push
pop
or
pop
dec
and
mov
rcl
js
xchg
or
add
cmp
push
fmuls
arpl
xchg
pop
mov
fs
jl
fisubl
mov
add
cld
ja
mov
cmp
in
imul
mov
push
rcrb
sti
ror
int
push
sub
push
jns
push
lahf
and
outsb
notl
mov
stos
shll
mov
nop
insl
je
in
push
push
lock
jbe
test
test
mov
xlat
leave
loope
xor
jmp
popf
leave
repnz
insl
mov
add
sub
push
cmp
sbb
xchg
fldl
shr
dec
lock
sbbl
scas
pop
data16
mov
jge
test
mov
or
or
es
sahf
sub
xchg
int
idiv
adc
mov
dec
test
loop
lods
and
fimuls
sub
enter
sbb
or
call
push
mov
push
inc
mov
popf
xor
popa
xchg
inc
cmp
mov
int
inc
sbb
lods
push
cmp
sub
xchg
ljmp
jo
sahf
out
push
rcll
mov
or
inc
xchg
movsl
scas
test
lds
les
cmp
lds
add
hlt
mov
gs
xchg
into
lock
push
add
divl
and
jo
bound
clc
cltd
mov
xor
push
inc
rcr
imul
push
ror
push
lahf
imull
repz
sbb
gs
in
jg
enter
nop
xchg
pop
mov
cmp
push
mov
shl
aaa
pop
adc
sti
ret
push
inc
dec
stos
ret
pop
pop
xorl
cmp
xor
and
pop
pop
in
mov
xor
push
adcb
inc
out
out
jbe
clc
in
out
icebp
nop
mov
cltd
pop
adc
stos
jecxz
scas
add
push
jmp
popf
test
jp
aam
jge,pt
sub
loop
add
stos
arpl
stos
push
lret
xor
xchg
mov
shl
loope
hlt
pop
push
scas
or
cli
jp
outsb
test
dec
repz
mov
push
and
pusha
xchg
mov
outsb
ljmp
testl
roll
jmp
cmpl
jno
mov
ja
mov
jmp
mov
lock
and
iret
ljmp
push
adc
mov
pop
add
shll
pushl
adc
adc
cltd
adc
bound
jnp
idivb
jbe
clc
adc
in
jne
out
in
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
cli
mov
xchg
inc
cmc
jo
lahf
jge
jo
push
sbb
mov
ret
stc
lea
fstp
xchg
in
movsl
cwtl
or
jmp
aam
sarl
dec
mov
cmp
mov
sbb
sub
andl
dec
iret
or
push
cmp
mov
mov
mov
push
mov
sub
and
mov
push
and
sbb
enter
sub
inc
inc
pop
sahf
jmp
or
jns
jbe
mov
xchg
lret
mov
and
mov
mov
xchg
test
in
push
loop,pt
fcomp
adc
enter
jle
push
int
xchg
pop
sbb
enter
cmp
push
std
jns
jnp
inc
mov
xor
pushf
leave
ja
stos
add
roll
popf
push
add
fwait
sbb
jge
cs
mov
dec
adcb
loope
push
xor
int3
and
mov
nop
mov
mov
and
fwait
cmpsb
or
adc
push
xor
xchg
mov
pop
sub
mov
jne
insl
jg
lock
pop
popf
les
inc
addb
daa
xchg
ljmp
stos
dec
out
pop
into
pop
mov
or
and
push
ss
sub
out
adc
jp
cmp
lret
mov
jbe
mov
xor
pop
div
dec
mov
nop
and
push
out
test
stos
mov
je
sub
in
gs
out
inc
lea
outsb
mov
push
shr
push
orl
sbb
cmp
shrb
cmp
xchg
inc
bound
or
xchg
dec
xchg
mov
sarl
orb
mov
das
sbb
int3
cwtl
pop
idivl
pop
xor
push
lds
aad
in
mov
mov
sbb
mov
xchg
je
and
mov
stc
dec
jno
or
out
xchg
xchg
sub
ja
mov
and
push
adc
and
mov
arpl
jbe
leave
incl
inc
mov
mov
inc
test
dec
mov
pop
std
aam
ds
cmpsl
xor
adc
in
cs
shlb
dec
lock
fld
aam
sbb
scas
mov
sbb
cmp
pop
mov
prefetcht0
mov
mov
insb
mov
add
add
cmp
xchg
cmpsl
push
fnstcw
sbb
sbb
imul
cmp
rcl
addr16
loope
push
mov
sub
jbe
xor
mov
fstl
mov
jno
shl
into
popf
stos
cmpsl
dec
dec
lods
cltd
cld
shl
fisttpll
xorps
xor
mov
mov
cld
jns
iret
and
loopne
pop
pop
icebp
imul
lret
outsl
adc
imul
adc
push
cmp
testl
cld
out
mov
mov
cltd
xchg
fiadds
mov
leave
arpl
sahf
pop
sub
push
sub
and
outsl
in
mov
nop
popf
adc
shrb
sub
adc
sub
mov
imul
sbb
arpl
ss
out
test
orb
js
adcb
jl
jmp
shl
xchg
xchg
popa
cmp
mov
xchg
mov
dec
inc
dec
mov
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
cld
aam
insl
in
jo
lahf
jge
jo
pusha
inc
adc
stc
xor
adc
iret
rclb
cmpb
dec
scas
insl
jp
mov
sub
mov
pusha
rcl
jp
adc
movsl
ljmp
pop
ret
subb
dec
test
stc
scas
fmuls
icebp
fdiv
mov
shl
jge
xor
push
fstpl
mov
loop
add
outsl
xor
out
sub
xchg
adc
xor
shr
sub
push
mov
loopne
test
mov
in
cmp
outsb
movsl
ret
sbb
cmpsl
xor
add
enter
lods
dec
lock
mov
mov
cli
in
int
scas
or
inc
sub
movsb
sbb
add
fcoms
and
lea
dec
insl
ds
and
cmp
and
fadds
xor
fsts
mov
cmp
arpl
inc
xor
jge
pusha
les
xchg
cmpsl
xor
sbb
add
add
jno
push
popa
mov
shr
mov
mov
mov
add
add
cs
adc
pusha
xor
sub
ret
jo
repnz
je
pusha
inc
mov
movl
fsubrs
orl
sbb
dec
call
stc
sbbb
push
fbld
inc
dec
movsb
jmp
inc
add
mov
fsubrl
out
or
and
test
out
popa
daa
repnz
in
pop
or
call
ror
jae
xchg
lret
into
int
rorb
push
push
add
jle
pop
pop
and
pop
push
cmp
aas
aas
xor
or
mov
pop
or
aas
or
cmpsl
mov
and
scas
fcomi
cld
fs
or
call
mov
dec
add
sbb
aad
push
data16
xor
pop
mov
int3
adc
inc
lret
jnp
sbb
int
mov
mov
push
jae
lods
add
lods
push
pop
outsb
cmp
xor
or
push
push
arpl
push
js
jnp
push
adcb
sub
mov
push
xchg
mov
ss
fs
imulb
adc
adc
dec
imul
fwait
ret
cmp
in
jl
mov
mov
loopne
pop
pop
sbb
insl
mov
loope
mov
adc
and
jmp
push
cli
out
pop
cmp
outsb
sub
push
int
loop
test
cmp
push
mov
mov
and
xorb
lea
dec
xchg
cmp
sbb
gs
ja
inc
push
jecxz
add
aam
test
inc
xor
mov
repnz
pop
push
xlat
add
xor
fdivl
push
inc
out
mov
cmp
ds
insb
sub
subl
add
ret
push
xchg
jae
push
add
ja
xchg
out
fcompl
add
adc
leave
cwtl
jnp
jno
lds
jne
test
iret
loop
pop
icebp
mov
ror
adc
sbb
mov
or
push
test
cmp
ja
push
ffreep
bnd
outsb
add
lods
imul
mov
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
ret
insb
dec
add
jo
lahf
jge
jo
sbb
iret
sub
and
insb
ja
sub
out
fimull
movl
mov
push
mov
and
cmp
mov
dec
push
pushf
int3
jo
movsl
adc
dec
or
cmp
test
push
mov
and
dec
daa
push
mul
mov
pushf
negb
and
mov
enter
lahf
cld
nop
lods
mov
and
into
sub
scas
add
fstps
jo
std
pop
stc
fstp
mov
dec
inc
mov
cs
mov
xchg
mov
cmp
pop
js
mov
pop
mov
outsl
insl
lods
dec
ret
pusha
aaa
movsl
fbstp
sbb
rorl
test
jb
add
lcall
xchg
in
es
rep
setle
and
mov
adc
jno
cmpsl
sub
scas
or
mov
jecxz
pop
insb
pop
je
aad
push
orl
push
mov
stos
pushf
push
lods
mov
mov
push
jmp
pop
jb
leave
jmp
jae
cltd
lods
add
ss
mov
dec
cwtl
mov
adc
xchg
in
mov
cmp
pushf
in
cld
call
and
icebp
xor
test
pushf
out
push
sbbl
and
arpl
shrl
loopne
fs
popa
clts
in
lret
rcrb
adc
and
inc
xor
push
inc
pop
jge
or
pusha
lret
push
cwtl
je
pop
lret
out
das
cmp
mov
fbld
mov
xchg
jle
addr16
cmp
test
jmp
sub
loope
popa
jae
add
adc
pop
adc
fimull
fcoms
jno
cmp
dec
mov
jns
cmp
sub
rcrl
mov
cmp
imul
mov
movsb
cmpb
cmp
add
dec
mov
mov
aas
roll
fldcw
je
inc
loope
addb
sbb
jmp
cltd
and
add
dec
adc
clc
shl
iret
add
sbb
loop
and
inc
mov
clc
subl
add
push
pop
gs
aam
ds
xor
lds
push
jno
xchg
fwait
fwait
int
cmp
ljmp
pop
dec
pop
popa
cmp
outsl
repz
adc
sbb
popf
les
mov
aam
inc
xchg
mov
mov
test
in
inc
jle
cs
or
test
mov
into
js
xor
push
jmp
push
ss
ja
jp
fmull
dec
into
fs
pop
aas
je
test
repnz
adc
aad
cmc
cmp
adc
dec
aas
insb
jae
pop
cmp
jge
testl
adc
outsl
shrb
orb
aas
popl
ret
cmpsb
or
js
test
imull
push
mov
pop
cs
push
jno
jmp
inc
ror
mov
aaa
jle
add
imul
pop
das
lret
imul
xchg
sbb
xchg
push
into
jb
pop
inc
dec
shll
adcb
addl
jmp
shlb
sub
lret
inc
stos
andb
jo
adc
out
or
xor
rcrl
cmp
scas
out
jmp
mov
mov
inc
push
or
jmp
xchg
or
popa
iret
ljmp
xchg
mov
ss
pusha
or
out
pop
jl
insl
fwait
into
adc
ljmp
insb
or
insb
dec
mov
sbb
nop
mov
icebp
cltd
rcl
loop
test
jb
lods
add
fmul
insl
inc
xlat
mov
stos
sub
iret
fisttps
sbb
mov
inc
out
enter
jg
and
cli
jae
pop
es
inc
mov
xchg
mov
mov
mov
icebp
mov
xchg
jno
adc
scas
je
cmp
sbb
incb
pop
arpl
repz
movsl
ljmp
lret
std
arpl
cmp
addr16
lea
mov
sbb
cld
jg
jmp
ret
mov
fisubl
push
xchg
mov
movsb
jne
int3
jnp
hlt
cmpl
gs
scas
cwtl
sub
pop
xchg
dec
inc
negb
sub
leave
xchg
movsl
pop
pop
fiaddl
ret
inc
mov
xchg
sbb
mov
jp,pt
loope
pop
cmp
and
add
ljmp
inc
or
add
jp
lock
mov
xorl
xchg
test
cmc
fcmovnu
enter
jb
in
out
sub
and
ss
xchg
insl
sbb
jne
out
inc
mov
lcall
fmuls
pushf
inc
mov
mov
cmp
int
mov
fstps
movsl
push
in
jb
inc
jle
in
xor
dec
stos
cmp
fstl
movsb
out
mov
push
jl
inc
bound
pop
sbb
test
mov
out
test
stc
dec
popa
cwtl
imul
sub
mov
js
lds
dec
adc
dec
jne
ror
adc
adc
sbb
sub
push
and
inc
insl
cwtl
adcl
jbe
and
sbb
xchg
js
mov
movsl
push
inc
fs
test
out
mov
inc
rorl
jle
repz
xorb
sarl
and
sbb
mov
cwtl
sbb
and
iret
cwtl
das
out
add
mov
push
rcrl
add
daa
mov
mov
lret
subb
aad
movsb
pop
push
push
sbb
xor
push
and
lret
scas
xchg
lcall
insb
fwait
cmp
add
cmp
jno
adc
xchg
mov
js
ja
mov
cwtl
bound
cmp
fs
lcall
mov
lods
lret
adc
loop
es
xchg
xor
clc
rcrl
push
add
sbb
sbb
loop
add
push
push
pop
cmp
or
sbb
clc
push
or
sub
jmp
fwait
pop
cmc
sub
sbb
mov
movb
iret
les
and
mov
decb
cltd
jecxz
add
ret
cmp
leave
pop
gs
sub
call
in
xlat
ja
stos
add
faddl
popa
rorl
fcomps
fucom
scas
dec
sbb
into
arpl
aad
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
ret
icebp
mov
xchg
lahf
jge
jo
mov
fbld
lret
insl
adc
and
fcompl
jmp
lods
gs
xor
and
dec
push
pop
sbb
sti
ret
adc
lahf
inc
mov
pop
push
pop
pop
sbb
push
and
imul
xor
mov
popf
mov
cld
sub
int
test
or
cmc
and
xor
xchg
shll
jne
int
push
xchg
sbb
repz
and
push
pushf
ret
or
sti
xchg
movsl
stc
cmpb
mov
aad
push
pop
jecxz
push
sbb
push
out
jecxz
mov
add
and
push
mov
or
pop
lea
pop
repz
bound
enter
and
cs
mov
dec
pop
loopne
mull
add
dec
push
pop
push
xchg
cmp
pop
out
jo
nop
imul
mov
pop
aad
jns
mov
pop
dec
popa
pusha
ffreep
jp
adc
sbb
ret
adc
aas
adc
daa
out
pop
fcompl
cltd
dec
cmpb
pop
pop
cmp
fnsave
ficoms
dec
mov
outsb
sbb
inc
movsl
cmpsl
mov
or
push
push
incb
mov
bound
testb
push
out
jmp
insl
cmp
fcomps
shl
push
pop
inc
sub
adc
lock
and
ja
movsl
orb
mov
xchg
jmp
in
push
and
push
ljmp
xchg
fsubl
dec
repz
inc
scas
testl
test
incb
cmp
mov
sti
insl
inc
mov
pop
cwtl
push
ja
sub
push
lds
dec
mov
mov
clc
nop
lret
insb
das
add
nop
pop
mov
aaa
sub
push
insb
test
xor
add
lods
or
rclb
bound
cmp
fcmovnu
xor
mov
scas
push
jns
mov
aaa
int3
lret
das
push
rcll
mov
loope
mov
xchg
push
and
test
outsl
dec
out
ret
xchg
dec
into
dec
pop
push
xor
and
pop
jne
or
repz
pop
mov
mov
inc
testb
aam
paddq
jnp
les
cli
dec
inc
icebp
fbstp
scas
into
repz
dec
pop
xor
jmp
mov
mov
dec
sbb
in
es
pop
das
adc
pop
push
or
jno
addr16
std
inc
pushf
out
fcomps
scas
test
jl
xchg
jne
adc
mov
mov
in
enter
jecxz
clc
add
jbe
andl
mov
push
aam
outsb
sbb
xlat
int3
pop
fcom
lret
das
push
adc
fcmovne
cmc
and
adc
adc
lcall
mov
and
cwtl
sbb
cmc
cli
jl
test
jg
nop
shlb
push
int
sti
lret
adc
pop
leave
xor
or
or
mov
mov
in
sub
dec
sub
jle
fldlg2
xchg
cmp
mov
jnp
je
cli
stc
jbe
out
enter
stc
pushf
lock
jno
sub
jl
xor
mov
mov
fmuls
pop
lahf
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
jne
pusha
xorl
jge
jo
sti
lock
call
add
cmp
and
xchg
mov
mov
not
outsb
add
test
out
out
cmp
jp
testl
shlb
ficomps
xor
xor
inc
cmpsl
aas
xchg
aad
cmp
bnd
cmp
dec
mov
mov
in
roll
and
inc
mov
inc
add
mov
jl
aad
mov
xchg
arpl
insl
push
aam
or
cmp
shlb
mov
sub
leave
dec
adc
sahf
adc
movsb
in
and
and
or
cmpsb
test
pop
aam
jecxz
push
filds
mov
imul
xchg
sahf
ret
mov
dec
data16
mov
sahf
ret
lock
and
adc
ja
push
fwait
sarl
fisubl
cltd
lea
loop
mov
jbe
popf
test
sbb
xchg
lret
cs
pop
or
cwtl
ja
mov
sub
xor
jno
out
add
dec
loope
xchg
mov
icebp
stos
mov
xchg
out
cmp
jl
inc
sbb
enter
or
cmp
inc
mull
cwtl
stc
jle
loope
loope
xor
adc
iret
dec
into
mov
or
push
xchg
cmp
xchg
fcoml
jae
inc
popf
stos
mov
sbb
fisubs
xchg
pushf
jne
push
push
add
push
pop
xor
sub
lret
or
into
pusha
mov
jge
mov
sbb
cmpsl
cmpsb
lds
in
jne
jnp
out
rolb
je
push
lcall
jp
mov
pop
jns
dec
in
push
adc
clc
in
xchg
idiv
mov
inc
jmp
out
and
and
mov
pop
je
popa
and
les
jmp
out
dec
mov
xor
cs
loope
cmp
push
rcr
std
push
adc
testl
into
gs
mov
and
clc
ja
hlt
repnz
pop
mov
lods
shrb
inc
or
arpl
clc
cmp
cltd
and
mov
xor
sbb
fildl
jno
xchg
cmc
movsb
inc
imul
push
push
jno
out
pop
mov
dec
loope
mov
jp
jle
inc
jge
mov
cld
ja
and
pushl
xchg
jmp
les
cs
inc
aam
xchg
mov
js
inc
sub
mov
iret
mov
outsb
popf
pusha
pop
mov
and
sbb
pop
outsl
or
cli
mov
xor
pop
mov
scas
loop
jnp
cs
and
out
cmp
cmp
push
mov
or
divb
ja
push
lret
rol
mov
in
push
pop
adc
stos
mov
pop
mov
cs
pusha
pop
out
cmpsb
subl
jg
push
setp
cmp
xchg
data16
scas
rcll
sub
cmpsl
push
enter
mov
scas
fimuls
das
stos
dec
inc
hlt
aam
jp
loopne
jae
sbb
push
jnp
pop
imul
jmp
and
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
dec
das
push
aaa
dec
bound
xchg
and
int3
pop
push
push
xchg
cld
int3
ret
in
je
sti
hlt
lods
adc
push
test
imul
fnsave
pop
sub
dec
lea
push
insb
add
jmp
inc
mov
push
jns
pop
out
mov
lcall
andl
lret
xchg
sub
cs
sbb
xchg
movsl
pop
bound
or
or
mov
adc
xor
call
pushf
push
pop
add
jge
std
out
pop
fdivs
xchg
aad
adc
jmp
xor
mov
jl
inc
loopne
arpl
aas
enter
std
add
and
sbb
xor
aam
shll
jae
outsb
xlat
addr16
lock
mov
lds
mov
les
enter
iret
mov
mov
inc
mov
xlat
repnz
mov
mov
xor
xchg
fdivl
mov
fcoml
sub
inc
das
add
in
insl
int3
and
add
addr16
out
adc
fistpll
and
orl
movq
aam
call
xchg
in
insb
adc
sbb
mov
pusha
add
jae
xor
das
inc
arpl
daa
aam
dec
mov
xchg
movsb
es
lahf
mov
add
cmp
ljmp
out
mov
daa
mov
lret
clc
ja
sub
sub
pop
pcmpgtw
ret
ljmp
js
xchg
fidivs
je
cmp
jns
pop
rcr
shlb
and
push
add
je
sbb
test
shll
lock
add
dec
mov
mov
cmp
pop
test
adc
jp
das
jle
sbb
or
pop
movsl
mov
sti
nop
dec
movsl
xor
sbb
or
iret
int3
in
in
pop
xchg
icebp
mov
jbe
fninit
leave
mov
jae
jbe
mov
ds
push
decb
and
pop
imul
pop
test
es
test
jl
pop
outsl
mov
enter
shrb
mov
pop
imul
lods
pusha
xchg
out
sbb
gs
repnz
push
ljmp
sub
subl
jo
cltd
inc
ja
js
fcmovnu
mov
mov
push
adc
push
sub
mov
mov
pushf
sub
in
enter
lods
sti
xor
push
xchg
loop
lock
aas
cltd
and
pop
jmp
sti
sbb
rolb
dec
ss
mov
inc
push
mov
fldt
mov
addb
in
int3
imul
push
or
mov
das
add
in
push
ret
push
test
ss
in
inc
ljmp
sub
loop
repnz
notl
lcall
add
xchg
std
pusha
cmpsb
jle
adc
jo
sbb
xchg
adc
push
or
mov
xchg
outsl
inc
int3
mov
adc
pop
nop
push
shl
loop
fdivrl
lret
sbb
mov
push
jns
inc
clc
shr
pusha
pop
jne
mov
or
and
dec
xor
jp
jns
mov
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
xor
das
mov
lahf
jge
jo
inc
pop
xchg
mov
sub
shl
ret
mov
add
ret
sbb
xor
jo
or
icebp
ljmp
sti
cld
in
jo
mov
and
jecxz
addl
push
jnp
jg
sub
xchg
out
test
inc
fbld
test
push
sbb
scas
and
dec
in
inc
and
mov
mov
or
iret
aam
pop
ss
int3
jne
add
mov
inc
mov
insl
fs
in
out
cwtl
jl
push
mov
pop
jp
xor
xchg
scas
and
mov
cwtl
imul
int
xor
movaps
and
push
pop
inc
xor
ljmp
mov
insl
fnsave
pushf
push
hlt
lods
cld
sar
xchg
xchg
mov
test
inc
fcoms
jo
hlt
cli
pop
and
inc
outsb
cmc
sbb
add
mov
sub
lcall
in
mov
movsl
stos
loope
ljmp
pop
or
in
push
int
xchg
cmc
cmp
jno
sbb
adc
pop
int3
rcrb
cmp
adc
adc
push
arpl
test
xchg
and
loopne
adc
in
int
insl
inc
shll
inc
cld
jae
add
std
mov
jecxz
loopne
movsb
cli
int
jns
daa
adc
xchg
cli
add
or
fistps
outsb
adcl
mov
push
mov
cmp
and
cs
jnp
popa
loope
mov
icebp
push
in
xor
inc
insl
lahf
mov
xchg
xchg
fsubrp
inc
and
dec
jnp
and
pop
cltd
sbb
scas
mov
mov
cld
and
xchg
cltd
pop
xor
aas
mov
xchg
mov
mov
pop
pop
mov
xchg
jp
icebp
xor
call
daa
push
jg
jg
jno
mov
adc
pop
test
xor
xor
cmp
lahf
mov
sub
rcll
inc
push
jne
movsl
mov
sub
cmpsb
notl
mov
xchg
mov
jecxz
movsb
push
inc
pushf
pop
mov
xor
ja
push
cli
xchg
push
loope
lret
xchg
xchg
xchg
outsl
push
adc
pop
gs
mov
add
sub
mov
cmpsl
sti
push
dec
push
push
xlat
adc
jecxz
dec
mov
repnz
mov
pop
pop
push
push
ret
adc
and
cltd
shlb
jo
ljmp
stos
inc
inc
inc
xor
aad
lret
mov
jno
and
scas
lret
in
add
insb
sahf
cli
fstpl
or
dec
mov
dec
nop
push
lods
ljmp
fsubl
dec
and
jg
jno
cmp
jbe
clc
je
push
pop
stos
mov
lea
out
insb
mov
test
hlt
int
dec
push
sub
adc
jne
imul
test
mov
pop
mov
cmpsl
test
ficoms
gs
test
data16
mov
xor
lds
lcall
stos
icebp
xchg
sbb
fidivrl
call
dec
pusha
mov
movsb
mov
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
mov
lahf
jge
jo
std
mov
pusha
maxps
xor
nop
mov
sbbl
ret
lock
fidivs
fcmovnbe
loope
arpl
sub
stos
and
mov
int
cmp
and
in
es
repnz
clc
adc
subl
adc
icebp
mov
xchg
sti
fsubr
xchg
push
mov
pop
jge
js
leave
cmc
in
mov
or
jg
lods
inc
lods
js
push
adc
jmp
out
sbb
call
fldt
xlat
imul
aaa
push
inc
bound
jo
push
add
inc
fmul
fidivrs
dec
add
scas
push
movsb
jp
gs
or
push
add
sbb
mov
loop
dec
js
mov
stc
bound
sbb
sbb
pop
pop
loope
mov
and
xchg
sbb
mov
xchg
js
popf
in
sub
pop
lock
and
or
xchg
mov
cmpl
mov
jb
sbb
insb
out
mov
push
int3
lret
ss
push
lods
fnsave
mov
pusha
push
mov
scas
int
cld
cmp
cld
pop
adc
nop
cmp
scas
and
jne
sbb
lods
dec
insl
jp
pusha
test
dec
lods
enter
mov
cmpsb
inc
xor
add
nop
cmp
mov
iret
jmp
pop
int3
pop
adc
rorb
add
dec
in
or
inc
cmc
imul
lahf
leave
outsb
fisttpl
jb
or
dec
sub
jle
stos
insl
push
jnp
push
xchg
ficomps
loop
and
test
mov
out
mov
es
jl
xor
jge
rcr
push
ret
jmp
xor
push
xchg
cmp
jns
inc
pop
sahf
scas
mov
add
or
jecxz
push
and
sub
xchg
adc
inc
pop
adc
jg
or
fisttps
out
sbb
jne
pop
xlat
adc
sbbb
dec
jl
adc
mov
sub
ljmp
movsb
sahf
push
aas
or
fsub
jmp
xor
nop
jb
pop
mov
cmp
mov
insb
sbb
mov
xchg
and
pop
push
jae
mov
je
stc
cmc
in
stos
xchg
adc
mov
sub
pop
push
scas
cmc
mov
movsl
mov
inc
push
mov
mov
lds
jle
insb
mov
sub
or
pop
imull
fdivs
mov
in
push
pop
repz
cmc
adc
outsb
cmp
les
decb
or
push
lahf
cmp
lods
mov
stc
pop
test
fs
mul
pop
decb
stos
pusha
push
call
dec
imul
and
mov
adc
dec
fldenv
icebp
fs
out
dec
mov
out
loopne
data16
movsb
rol
xchg
jns
sub
popa
pop
add
adc
pop
je
lods
sbb
pop
insl
fists
jecxz
jbe
adcl
aam
push
out
roll
sub
mov
mov
stos
jmp
mov
jl
test
push
dec
fwait
jns
scas
mov
lahf
aad
jae
fbld
sbb
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
jp
pushf
loope
xchg
jo
lahf
jge
jo
xchg
lock
or
xchg
sub
push
xchg
inc
scas
les
mov
mov
lock
xor
mov
adc
imul
sbb
dec
dec
dec
es
xchg
cmpsb
jg
sub
push
fdivs
shlb
leave
jg
loop
es
push
ja
sub
push
pop
jle
seta
mov
fidivs
loope
fildl
add
bound
mov
inc
jno
sbb
rorb
cld
shlb
pop
sti
xor
ret
mov
sub
xchg
sub
jge
push
mov
add
nop
in
movsl
jne
mov
pop
test
xlat
mov
pop
mov
ja
pop
sub
fcmovb
testb
push
adc
mov
aas
stos
sbb
pop
insb
jmp
sbb
pop
aas
jne
jae
lret
repnz
jmp
cli
sub
sub
and
push
mov
dec
pop
pop
push
xchg
bound
stos
xchg
test
pop
sbb
mov
add
mov
dec
pop
mov
data16
aam
jo
cmp
mov
xchg
addb
jp
pop
add
dec
out
pop
mov
mov
test
push
arpl
rep
ret
xor
or
or
mov
push
mov
hlt
into
lret
cmp
jns
lahf
adc
add
sbb
jle
fistl
sbb
mov
jae
or
push
dec
sbb
fsubl
xor
in
cmp
clc
lret
jp
pop
fs
sbb
aam
cmc
push
rol
sub
pop
nop
fisubl
and
or
push
jmp
pop
xor
jg
subl
mov
daa
push
lret
jle
inc
push
pop
cmpsl
or
lret
insb
or
sub
pop
and
in
or
aam
std
pusha
imul
bound
stc
in
and
mov
inc
push
int3
in
loop
lods
pmuludq
dec
dec
jl
arpl
pop
pop
enter
jbe
push
popa
add
adc
cmp
data16
dec
pushaw
push
pop
jmp
push
fcomps
in
or
xor
add
sahf
pop
iret
lret
push
enter
fs
add
cmp
jb
sbb
adc
add
and
mov
add
mov
mov
popa
aam
pop
jno
mov
aam
outsl
pop
stc
stos
sub
insl
dec
cwtl
jge
adc
andb
push
daa
sbb
inc
pushf
mov
and
inc
sbb
outsl
xlat
in
aam
test
ds
jno
cmpsl
adc
imulb
push
das
jge
jg
inc
dec
loope
test
mov
daa
fwait
pop
and
lods
repnz
jbe
int
mov
dec
or
leave
add
aad
push
inc
mov
mov
outsl
cmp
lea
sbb
inc
outsb
push
mov
out
test
add
inc
sahf
repz
loopne
lret
in
stos
dec
fs
jge
aam
std
push
fadd
hlt
ds
jae
inc
fisubs
repz
mov
jp
movsb
subl
xchg
lret
jno
and
cmp
popa
push
cmp
popfw
sub
cltd
xchg
stos
shrd
adc
jo
dec
mov
xor
scas
aaa
sbb
add
test
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
addl
pop
or
jo
push
stc
mov
jne
cli
mov
sahf
push
bnd
jo
jmp
lock
pop
cld
outsl
mov
fmul
sub
sub
jno
pop
add
mov
lods
xchg
mov
push
xchg
fstps
dec
ret
mov
mov
pop
lahf
negb
idiv
dec
addl
iret
inc
dec
std
jmp
cmp
jnp
cli
mov
sub
mov
push
fnstenv
pusha
or
jno
movsl
leave
add
fisttpll
cli
push
lahf
movsb
ror
pop
das
mull
and
loop
pop
fisttpll
jmp
pushf
fcmovb
loop,pn
outsb
fsubr
jp
movsb
xor
int3
adc
push
push
imul
xchg
jbe
adc
mov
pusha
dec
dec
jge
sbb
sbb
mov
sbb
inc
sub
insl
loop
or
add
xchg
cs
mov
scas
adc
bound
and
call
jo
in
pop
lds
adc
mov
loope
jb
aad
xchg
xchg
lcall
and
movsl
out
lret
jbe
jmp
outsb
push
cmp
xorl
adc
xchg
or
test
xchg
outsb
out
ljmp
pop
xchg
test
push
out
push
inc
jno
pop
xchg
rcll
inc
mov
lahf
xchg
scas
add
fs
pusha
xor
or
pop
enter
xlat
jecxz
es
jge
imul
inc
fidivl
pop
and
in
shrd
fldenv
jecxz
pop
clc
mov
sti
and
dec
pop
scas
push
out
pop
cmp
mov
cmp
test
dec
lcall
repnz
stos
xor
inc
mov
jo
jbe
iret
fst
mov
into
nop
adc
ss
mov
pusha
lret
xor
jl
outsb
and
adc
cmpsl
ret
loope
sbb
fs
or
scas
push
movsb
jnp
mov
adc
cmp
test
jge
push
sbb
push
insl
push
sti
inc
call
pop
lods
loope
pop
xor
and
test
xchg
push
rorl
mov
adc
scas
xor
cmp
lods
pushf
in
mov
rcrb
dec
cmp
outsl
mov
fdivrl
sub
add
push
sub
fldl
xor
pop
inc
push
cmp
push
jns
in
insl
mov
or
xchg
and
aaa
lahf
adc
inc
adc
adc
mov
jmp
mov
dec
or
cmpsl
arpl
cmp
je
add
mov
cld
nop
pop
jno
inc
sbb
mov
ljmp
jns
xchg
sub
into
adc
pop
add
pop
mov
mov
div
cltd
mov
xchg
pop
movsl
sbb
fcmovnbe
and
or
inc
and
mov
repnz
mov
dec
and
mov
movsb
rclb
loop
icebp
or
mov
ds
mulb
dec
adc
jp
fidivl
inc
clc
movsl
aam
ja
mov
mov
xchg
nop
insb
and
inc
sub
xor
js
mov
dec
dec
add
lods
loopne
imul
push
in
sbb
jns
adc
sub
ljmp
or
xor
push
fs
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
adc
stos
popf
jo
lahf
jge
jo
cmpsb
xchg
je
mov
repnz
push
orl
fisubl
add
cld
aaa
jnp
cmp
mov
sbb
xchg
out
loope,pt
addl
dec
lcall
nop
pushf
mov
cmp
mov
inc
icebp
std
push
in
inc
push
cmp
xchg
mov
and
lea
jg
jmp
adc
inc
fsubl
mov
sbb
or
xchg
inc
je
jp
movsb
sub
dec
dec
lods
fnsave
gs
aas
ret
int3
imul
mov
adc
add
mov
push
pop
jl
leave
lds
jmp
daa
mov
xor
lcall
xchg
inc
test
jnp
push
and
sbbb
shl
std
sub
xchg
loop
or
sub
int3
xchg
dec
test
lret
xor
cltd
rclb
repnz
call
jnp
cmp
xchg
out
push
leave
mov
jge
in
fdivl
push
fstl
xor
lock
push
repnz
shr
daa
lds
adc
out
mov
adc
jno
xor
pop
xchg
push
in
pop
int3
stos
out
jns
inc
xor
and
push
pop
inc
pop
inc
fldpi
int3
push
ss
lahf
in
ror
decb
lds
sti
test
lock
mov
mov
xchg
add
push
adc
out
in
loope
inc
repnz
dec
adc
divb
daa
das
or
fldl
jno
lods
pusha
lret
outsb
fs
cmp
xor
lret
pusha
les
mov
cmp
inc
inc
ret
in
ja
inc
dec
xlat
jo
ja
mov
mov
shrb
fwait
dec
je
je
dec
aaa
aaa
push
subb
out
cltd
enter
mov
or
inc
push
jne
insl
sub
xchg
imul
pop
cmc
stos
jle
dec
jl
bound
push
fsub
adc
xchg
add
cmc
idivb
ss
call
adc
cmp
cmp
jne
orb
jl
push
mov
add
xchg
inc
mov
mov
shl
roll
popa
or
cmp
std
pop
movsl
in
mov
inc
push
sub
into
jbe
push
push
out
mov
jns
fsts
fs
pop
data16
lret
jno
mov
mov
cmpsl
mov
stc
push
shll
push
hlt
cmpl
rorl
mov
movsb
or
je
js
push
push
push
push
ss
jo
mov
push
mov
cmp
lea
movsb
sbb
mov
testb
aam
arpl
sbb
ljmp
sbb
pop
in
scas
loop
ja
fisubrl
mov
in
jmp
adc
sbb
data16
jno
pop
sahf
ret
mov
mov
stos
shll
inc
inc
enter
fisubrl
push
cmp
ret
fs
fists
mov
mov
jl
mov
push
push
xlat
mov
push
andl
lret
fists
xor
sbb
sub
clc
jmp
shl
int3
add
test
push
pop
cmc
adc
sub
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
enter
cltd
jo
lahf
jge
jo
push
sbb
fistpl
and
xchg
in
dec
pop
pusha
imull
push
jo
or
insl
movsb
cli
xchg
push
addl
nop
add
test
jnp
in
pushf
inc
cwtl
xchg
stc
out
xor
pop
cmp
and
cmpsb
dec
pop
aam
hlt
shrb
pop
push
or
adc
pushf
stos
inc
xchg
data16
insb
inc
sub
imul
xor
mov
add
mov
int3
sub
or
sub
mov
and
xchg
jg
xor
push
cmc
push
cmp
lahf
cmp
jnp
sbb
clc
jg
mov
xor
or
cmc
mov
repz
xchg
stc
es
dec
cwtl
lea
or
adc
loop
and
dec
js
out
stos
add
pop
loop
push
insb
fstl
outsb
loope
sbb
insb
lret
cmpsl
mov
sbb
cld
sbb
aas
push
add
pop
ss
das
popf
or
pop
mov
enter
fcmovbe
imulb
xor
push
add
push
scas
jne
push
fisubrs
mov
inc
push
adc
int3
push
sahf
sarl
jno
nop
in
push
jecxz
loope
gs
adc
push
aas
sbb
dec
mov
fstpl
dec
ja
ds
jge
xchg
aaa
sbb
fstl
xor
popf
inc
out
out
orl
pop
out
data16
cld
stos
pop
mov
xor
dec
dec
mov
icebp
and
dec
xchg
dec
mov
stc
aad
test
sub
insl
imul
push
jo
mov
mov
adc
out
pushf
test
and
js
loop
movsl
mov
cmovp
push
push
mov
bnd
mov
add
xchg
sub
dec
add
shll
sub
into
sbb
fisubrl
xchg
ret
or
ds
popa
dec
and
and
negb
bound
or
mov
sub
sub
scas
insb
sbb
jb
cmc
movl
imul
insl
rol
lds
es
sub
jb
mov
int
jecxz
imul
inc
in
and
mov
xor
mov
mov
xchg
pop
mov
in
jno
pop
pop
fcomps
xchg
dec
fidivrs
add
shrb
mov
jmp
sub
shrl
mov
data16
mov
push
lods
xchg
and
stc
addr16
pop
fnstcw
je
and
movsl
sub
jmp
scas
ds
addl
add
jb
aas
mov
fcmovbe
pop
push
or
add
icebp
mov
xchg
ja
mov
dec
fildll
and
pop
mov
movsl
mov
inc
jo
insb
pop
nop
imul
sub
jbe
cmp
icebp
pop
je
xor
adc
rorl
addb
or
push
add
popa
cltd
dec
jbe
jns
add
sub
and
cwtl
pop
push
pop
jmp
popf
inc
pushf
lods
cmc
and
sbb
push
addr16
adc
mov
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
or
cmpsb
jo
ret
jg
jo
fsubrp
add
add
push
mov
mov
mov
addb
shll
into
or
test
shll
xchg
daa
jb
data16
mov
adc
jae
mov
cs
inc
roll
add
mov
lret
arpl
add
and
mov
in
and
stos
rcrl
sbb
loop
jb
inc
mov
fsts
pop
push
fs
xor
pop
call
xor
mov
dec
pop
push
lahf
loope
mov
in
sti
dec
add
push
sbb
mov
jnp
loop
dec
adc
mov
ficompl
or
xor
push
mov
adc
rcr
dec
inc
mov
mov
mov
sar
mov
mov
ds
roll
cltd
mov
mov
lahf
adc
xor
or
test
rcr
in
xor
or
rclb
fists
sbb
ljmp
mov
test
adcl
sub
in
inc
sbb
movsl
pusha
and
xchg
add
std
cld
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
inc
jo
out
movsb
jo
ret
jg
jo
daa
ret
sbbl
out
mov
dec
inc
loop
jnp
cmp
call
mov
mov
jg
cmc
xchg
std
inc
xchg
xor
ret
add
bound
xlat
rorl
scas
out
push
les
push
pop
jo
cld
or
sbb
out
sub
xchg
leave
lret
jg
mov
xchg
clc
xchg
pop
xor
sub
mov
pop
xor
inc
xlat
int
fmuls
pushf
aas
cmp
jae
ja
popa
lret
icebp
lahf
sub
jmp
xchg
aad
shll
jno
xor
loopne
shll
mov
pop
cmp
mov
enter
or
insl
mov
cli
mov
mov
lds
mov
mov
or
lods
lcall
in
mov
cmpsb
push
xchg
stc
mov
shll
sub
dec
dec
dec
into
inc
mov
std
es
ret
jo
inc
dec
cmp
inc
mov
gs
repnz
movsb
flds
shrb
pop
test
iret
scas
xchg
mov
push
push
daa
ret
ret
xchg
imul
imul
movl
and
lea
mov
jmp
rorl
sbb
testb
jo
fmull
aas
mov
dec
arpl
rorl
pop
decb
add
add
or
mov
jbe
outsb
pop
mov
jbe
jp
inc
jo
mov
je
push
inc
adc
or
sbb
sbb
ds
adcl
xchg
aam
pop
xor
sbb
fdiv
and
mov
cmp
jno
es
fistl
xor
and
sbb
and
push
mov
push
pop
sub
pop
xchg
mov
aas
xor
es
imul
cmp
repz
inc
push
jnp
in
fbstp
aam
inc
adc
fisttpll
inc
or
and
jbe
jbe
cwtl
or
pop
dec
jns
and
xor
xor
mov
jno
loop
xchg
jl
cltd
fistps
faddl
dec
loopne
imul
test
pop
mov
pushf
test
or
xor
out
xor
mov
pop
imul
xchg
mov
pop
mov
push
xchg
fmuls
adc
dec
and
inc
inc
jno,pt
mov
and
cltd
add
and
enter
cmp
mov
mull
lcall
lods
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
push
fdiv
push
mov
jo
andb
push
nop
push
add
and
pop
or
mov
inc
ucomiss
stos
js
loopne
ficoms
popf
fwait
testl
mov
int
in
rcrl
mov
xchg
je
arpl
test
dec
mov
repnz
stos
xchg
enter
inc
fnsave
jmp
sbb
jae
lret
or
shlb
lea
shrb
cmp
push
notb
lods
stc
and
xchg
hlt
push
hlt
sar
iret
aad
add
mov
insl
imul
sbb
add
push
cmp
xor
sbb
sub
loopne
jbe
xlat
int
sub
sbb
sbb
mov
dec
xchg
mov
sbb
mov
pop
mov
mov
in
lods
sbb
mov
int
dec
add
cmp
push
cmc
and
inc
inc
xlat
cmp
mov
enter
pop
dec
cwtl
mov
mov
adc
inc
lock
jns
mov
shlb
lods
bound
dec
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
lock
sub
and
jo
ret
jg
jo
push
xchg
push
cmp
push
inc
out
dec
shll
xor
int
inc
adc
pusha
push
js
pop
sbb
xchg
xchg
dec
pushf
lret
fistpl
push
inc
xlat
xchg
sbb
sbb
mov
dec
and
push
ds
jb
hlt
pop
es
addb
lock
repz
jl
stos
dec
xchg
test
cmp
push
push
xchg
mov
jmp
sub
xor
sub
push
push
ret
fdiv
mov
xor
adc
inc
and
fld
pop
jno
in
pop
jne
adc
gs
xor
int
inc
mov
jno
push
sub
shlb
and
and
add
mov
pop
sub
mov
lea
mov
mov
jnp
cmc
inc
adc
push
jge
outsb
mov
int3
subps
sbb
imul
pushf
rclb
pop
test
xchg
andl
jl
adc
inc
out
push
fdivrs
sahf
stc
aam
nop
ljmp
jmp
vmulsd
xchg
jne
bound
repnz
imul
mov
ret
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
sbb
jo
ret
jg
jo
mov
push
adc
xrelease
fstl
mov
stos
xchg
mov
dec
cmp
imul
jp
pop
rcll
sti
jmp
cltd
out
jmp
mov
es
lods
jb
push
jecxz
push
xor
mov
jbe
xor
add
add
mov
pop
imul
pop
ffree
inc
push
cmp
cmp
cmp
outsl
clc
mov
stc
xchg
incb
add
scas
hlt
into
stos
sub
das
or
or
insb
xor
push
movsl
flds
lods
arpl
add
or
dec
loopne
push
sbb
jmp
nop
mov
subb
jecxz
xchg
pop
jmp
sub
jecxz
int3
aas
mov
jle
push
mov
mov
pop
xor
cmp
mov
scas
data16
icebp
pop
jns
mov
mov
xchg
xor
loop
aas
push
push
and
dec
shll
jne
cmp
jecxz
push
icebp
sarb
pop
pop
in
mov
fabs
or
gs
jns
and
adc
shlb
inc
in
movzwl
jmp
movntps
push
rep
mov
push
jle
vmread
scas
jo
ret
jg
jo
les
add
aas
out
cmp
pop
push
or
cmp
fnstenv
jecxz
icebp
ds
js
mov
inc
sbb
inc
repnz
and
fwait
pop
xchg
sub
jl
test
enter
scas
pop
pop
add
mov
dec
mov
dec
add
xchg
popf
fistps
push
xlat
adc
mov
mov
inc
jb
jmp
and
dec
test
les
loope
pop
dec
push
daa
in
sub
pop
or
mov
outsb
inc
add
cmpsb
jae
les
sub
cmp
add
dec
dec
cmp
repz
adc
xor
jmp
notl
cmp
push
test
in
imul
sub
xchg
jb
mov
cltd
mov
neg
and
out
mov
test
imul
pop
shl
ss
pop
jb
jl
adc
repz
jnp
xchg
fisttpll
pop
mov
sbb
add
cmp
leave
mov
sbb
pop
mov
cwtl
xchg
and
lock
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
rcrb
or
jg
jo
std
aas
inc
mov
mov
rorl
mov
pop
out
dec
out
mulb
dec
dec
rclb
push
fsubs
xor
jmp
pop
cmpsl
fwait
jo
ja
push
popf
and
lret
mov
and
ficomps
or
test
gs
mov
lods
dec
ds
enter
mov
jnp
aad
sub
inc
jg
fst
in
int3
jns
xorl
cld
idivl
jne
cld
leave
push
xlat
fistps
das
dec
sub
in
scas
out
mov
daa
mov
movsb
fisubl
push
xchg
fcoml
inc
cs
ja
push
popf
stos
decl
js
pop
cwtl
movsb
cmp
mov
in
test
jno
mov
addr16
enter
loope
sub
push
imul
inc
mov
inc
out
psubsb
pop
and
sbb
sbb
fldl
cld
mov
mov
fisttps
lock
add
aaa
arpl
or
inc
fdivrl
dec
adc
cmpsl
xlat
outsl
ja
test
pushf
mov
sub
inc
mov
mov
pop
pushf
scas
test
adc
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
out
das
jge
shrb
jo
in
loope
gs
sub
xchg
lods
xor
pusha
and
xchg
aad
mov
cs
push
loope
push
jnp
out
fs
mov
insb
and
rclb
gs
jo
add
xchg
mov
and
repnz
push
je
lcall
push
and
stc
dec
insl
sahf
adc
rolb
lds
int3
sub
push
or
repz
mov
mov
sbb
cmp
fstl
orl
in
mov
ret
xor
into
jp
jae
addb
rcr
imul
dec
andl
mov
test
cmp
test
ret
nop
ret
inc
enter
data16
cli
jp
mov
xchg
mov
lods
mov
mov
lods
push
sbb
fwait
mov
mov
xor
pop
lahf
jecxz
dec
lea
mov
mov
cli
in
test
mov
mov
pop
xchg
pop
cmpsl
ss
push
push
ds
xor
xlat
xchg
nop
loop
xor
xor
ret
pop
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
xrelease
jg
jo
jl
cmp
or
jge
scas
insb
add
es
repz
lahf
nop
lods
gs
out
cld
loope
inc
in
insb
pop
sbb
jecxz
xor
insb
movsb
mov
test
inc
lock
es
xchg
push
jmp
adc
or
pop
icebp
inc
xor
cmp
push
stos
je
popf
xchg
push
ficompl
lcall
xor
js
add
lret
out
sbb
adc
movsl
jns
pop
sub
inc
movsl
cmp
xchg
shrb
sub
std
mov
js
lods
into
arpl
push
fistpl
jecxz
fbstp
in
out
pop
inc
fadds
iret
in
push
sub
adc
sub
or
lret
mov
inc
lahf
jle
pop
mov
mov
xchg
icebp
les
scas
jns
mov
xor
xchg
aam
xor
xchg
jbe
xchg
imul
or
ds
repz
mov
lds
lods
add
cmp
inc
xor
sahf
rcr
adc
inc
mov
pop
jbe
push
out
das
add
int3
sbb
in
xor
call
add
cltd
xchg
mov
cmpsb
or
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shrb
es
test
jo
xor
clc
pop
mov
loop
pop
ljmp
je
enter
ret
popa
lods
jnp
fs
mov
sbb
idivl
int3
push
mov
jb
aad
mov
sub
mov
push
stc
and
xchg
mov
inc
imul
in
stc
and
std
add
add
mov
dec
out
mov
in
or
je
pop
frstor
push
test
push
pop
inc
pop
mov
decb
or
repz
cmpsl
clc
hlt
jp,pt
mov
add
sub
adc
cmp
xchg
subb
fcomp
lea
xchg
loopne
xor
sub
loope
adc
mov
mov
std
pop
cs
lock
add
mov
adc
sbb
xor
xor
sub
pop
mov
int3
adc
and
outsl
sbb
mov
push
popf
inc
cmp
fcmovne
xchg
mov
in
mov
clc
jl
loop
aas
pop
push
dec
pop
pop
es
call
add
xchg
lahf
cld
adc
push
mov
dec
pop
xchg
in
pop
push
arpl
sbb
jne
adc
mov
inc
clc
jmp
inc
gs
icebp
imul
out
sub
jo
ret
jg
jo
jg
sbb
loopne
ja
push
sbb
xchg
xchg
pop
repz
mov
pop
scas
popa
inc
mov
gs
sbb
aad
mov
adc
mov
ret
xor
adc
cmp
jge
sarl
dec
push
mov
xor
nop
jo
rdtsc
jns
ret
sahf
int3
fwait
inc
mov
sub
mov
loopnew
je
insl
push
sub
mov
mov
nop
enter
push
jo
pusha
mov
fists
test
adc
call
cmp
out
mov
loopne
push
leave
sbb
mov
ss
xor
mov
xchg
fisubl
xlat
xlat
cmp
add
jecxz
mov
add
pop
rorl
js
cwtl
mov
mov
mov
inc
mov
int
clc
into
cs
mov
mov
fldenv
addb
in
sbbb
js
les
and
sub
ret
out
xchg
andl
icebp
jg
dec
mov
sbb
cmpsl
fimuls
outsl
xchg
mov
xchg
inc
sbb
sbb
popf
cwtl
flds
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
js
push
jo
jg
jo
adc
and
test
icebp
out
cmp
leave
sub
dec
mov
jbe
push
sbb
call
in
adc
xchg
sbb
roll
push
add
push
clc
sub
add
stc
mov
movsb
add
mov
outsb
shlb
icebp
addr16
loope
iret
pop
flds
gs
sarb
popa
mov
shlb
rcl
arpl
xor
aam
push
push
sbb
inc
orb
movsb
sub
push
inc
lret
mov
push
add
sub
xchg
dec
lock
pop
adc
mov
rolb
mov
add
pop
adc
cmp
and
mov
dec
aam
add
cmp
sbb
push
std
mov
hlt
iret
push
cmpsl
cwtl
fildl
and
movsb
out
jg
xlat
xor
mov
jne
jmp
hlt
shll
push
imul
lods
xchg
out
and
enter
cmp
mov
mov
or
cmp
cltd
add
repnz
pop
xlat
inc
cmpsb
push
xorl
and
cli
cmc
jb
js
in
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
jne
pop
mov
jo
jge
jo
inc
les
mov
mov
jmp
es
dec
add
pop
mov
lea
nop
bound
xor
add
mov
inc
adc
out
stos
add
dec
lcall
mov
jl
out
sbb
aad
jns
push
movsl
push
pushl
daa
and
jnp
rcrb
push
xor
mov
jle
jmp
sub
jne
cmp
imulb
mov
rcl
push
jnp
call
lret
int
pop
sub
mov
inc
test
cmpsb
xchg
insl
and
loopne
or
mov
outsb
or
nop
nop
sub
out
arpl
lret
push
les
adc
outsl
fbstp
jo
scas
xchg
inc
bound
and
xchg
cltd
mov
stos
pusha
mov
jg
mov
mov
cmp
mov
sbb
add
push
repz
iret
mov
out
cmp
bswap
shrb
or
jae
push
lret
cmp
fsubl
or
vcvtps2pd
lahf
add
jmp
cmp
sbb
movsl
or
mov
arpl
hlt
in
adc
lcall
shll
pop
pop
jp
in
sbb
jnp
mov
loop
xor
pusha
pushf
shr
lea
aas
push
or
inc
push
test
gs
or
and
pop
xor
cwtl
int
sub
sbb
cmpsb
lahf
pop
add
sub
or
negb
iret
cmpsb
aad
xor
sar
iret
fsubs
call
stc
inc
cmc
mov
or
xchg
lods
and
inc
mov
adc
or
lret
dec
adc
xchg
mov
lods
nop
or
push
neg
arpl
push
rcrb
into
dec
jecxz
adc
addl
insb
arpl
adc
aam
out
add
es
hlt
jle
push
mov
pop
and
popa
cmpsb
repnz
pop
je
mov
add
cwtl
outsb
sub
js
out
movsl
repnz
orb
inc
divb
sub
cmp
cmpsl
lods
dec
imul
push
jo
push
jle
mov
push
sub
push
mov
test
cltd
cwtl
sub
dec
adc
cmc
into
mov
sub
ljmp
and
add
loopne
fwait
movsb
fwait
cmp
ret
mov
dec
cmc
mov
sahf
dec
cmpsb
jae
int
mov
test
xchg
xchg
cs
sub
aaa
fisubrs
fistps
sbb
push
sahf
sub
cmp
add
test
das
mov
lock
mov
icebp
xor
dec
in
fadd
lea
addr16
push
cmp
cmp
mov
jle
sarl
inc
sarb
andb
jmp
bound
stc
pop
pop
shll
sbb
bswap
adc
xchg
insl
movsl
insl
movsb
cmp
sbb
shlb
xor
cld
lods
movsb
int3
adcb
add
cwtl
sti
repz
cs
jmp
iret
cwtl
jp
dec
pop
aas
jecxz
js
outsb
dec
dec
sbb
or
test
fstpl
dec
rolb
mov
icebp
add
adc
test
addr16
add
push
mov
jmp
roll
xchg
fstl
lods
scas
insl
lods
mov
mov
and
inc
add
lds
add
mov
cli
xor
testb
jp
in
mov
jo
jge
jo
mov
stos
iret
fwait
cltd
stos
sbb
inc
lods
nop
sub
scas
cmpsl
mov
rcrl
fisubrs
sub
add
ret
clc
mov
sub
adc
fdivl
cli
sub
pop
sti
lods
out
mov
mov
test
mov
jge
lcall
insl
clc
shlb
call
fimuls
in
hlt
outsl
rcrb
push
adc
push
call
add
jne
jle
jp
mov
dec
jg
mov
pop
lock
sbb
out
jne
test
jno
xor
sahf
adc
sub
std
jecxz
xchg
and
pmullw
push
cmp
jne
sub
mov
jne
ja
xor
xor
cmp
arpl
inc
or
fstps
xor
mov
stc
sub
js
mov
lcall
mov
stos
lret
add
xor
xor
idivl
sbb
sarl
xchg
aad
push
jecxz
mov
sub
test
pop
mov
inc
mov
pop
jg
push
push
or
mov
nop
data16
mov
jbe
cmp
shll
push
pop
mov
mov
pop
mov
scas
mov
mov
test
aas
in
stos
cmp
shll
cmp
sub
in
lods
push
adc
push
pop
cmp
mov
mov
pusha
mov
mov
fcoms
cld
pop
adc
aas
or
add
fldl
pop
test
fs
inc
imul
push
loope
cmp
mov
imul
push
jge
add
push
sub
dec
jbe
dec
imul
or
ret
sub
add
lcall
loop
out
les
subl
or
loope
jg
int
aam
sub
push
data16
rcl
icebp
cltd
pop
lods
ror
pop
cmc
dec
mov
scas
mov
jno
fistpll
in
sahf
pop
mov
or
js
lock
and
pop
jns
repz
push
sbbb
fstpl
aad
dec
je
mov
sub
adc
pop
shld
imul
adc
shlb
pop
cmp
movntq
imul
das
lcall
push
fstps
push
popl
jns
xor
fistps
add
movsl
jl
and
mov
pop
scas
cwtl
fmull
xchg
mov
mov
xchg
pusha
addr16
cmpsl
pushf
dec
xor
iret
lcall
ljmp
mov
pop
daa
mov
xor
cmpsb
inc
jbe
push
sti
int3
dec
inc
std
std
cmpsb
imul
jnp
rcrb
loop
sub
test
bnd
cs
add
ljmp
insl
or
push
addr16
ficoms
mov
adc
subl
insb
data16
adc
shrl
mov
fsubrs
or
adc
sub
aad
lahf
out
ljmp
packuswb
jns
xor
inc
adc
movsb
ja
mov
shll
mov
sub
lods
mov
cs
stos
and
pop
into
faddp
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
xor
dec
mov
mov
jo
pop
cmpsl
push
or
or
mov
scas
mov
mov
mov
cmc
push
push
push
jmp
xchg
push
push
and
sarl
fdivr
cmp
adc
stc
loop
jns
cltd
pop
aaa
add
xchg
cli
push
pop
in
imul
xchg
loop
dec
xchg
mov
addr16
ret
pop
xchg
in
jge
iret
addr16
dec
cwtl
cmp
inc
ds
adc
loop
xchg
add
cld
lret
out
mov
jne
fdiv
jbe
sbb
in
cmp
inc
aas
pop
xor
shlb
into
loopne
pushf
push
pop
cli
inc
jnp
shl
xchg
xchg
push
pop
adc
shll
push
push
je
push
mov
mov
pop
xor
ss
xchg
pop
jno
sbb
fwait
int
jle
daa
xchg
xor
fucomip
in
cmc
clc
fldt
out
int3
cmp
jb
scas
fistpl
in
pop
or
jbe
push
les
push
test
sbb
push
sbb
push
push
shll
cmp
in
inc
jmp
adc
loopne
divl
mov
daa
aam
lret
shll
push
push
push
cmp
pusha
dec
push
icebp
sbb
xor
mov
lret
pop
ret
and
xor
lods
cmp
pop
xor
mov
mov
jb
cmp
dec
jns
add
or
roll
fucomi
in
shll
fimuls
hlt
fwait
sbb
ds
test
push
leave
into
or
sti
jecxz
lods
test
shlb
mov
cmpsl
adc
imulb
pop
adc
or
scas
jbe
pop
inc
sti
iret
pop
sbb
cmpsl
movsb
sub
mov
loope
add
scas
lcall
xchg
push
mov
fldt
aad
dec
mov
add
out
or
jno
add
into
xor
insl
or
jbe
mov
insb
mov
sbb
and
and
fsubp
cmp
sbb
hlt
scas
sub
imul
insl
mov
out
lret
je
mov
rcr
mov
lock
enter
push
xor
sbb
je
lock
test
push
add
cmp
adc
jmp
xchg
and
inc
mov
inc
test
jns
in
adc
popf
sbb
add
fbstp
sti
push
mov
or
inc
pop
jb
repz
test
lods
outsb
adc
add
mov
mov
stos
flds
sub
out
mov
and
mov
add
movb
mov
dec
and
xor
sarl
xlat
mov
aas
pop
dec
dec
es
mov
mov
not
sub
lret
xchg
adc
stc
lret
loop
scas
dec
lods
addr16
icebp
dec
add
or
jns
rorb
js
push
lds
movsb
es
imul
jne
mov
out
loopne
cli
insb
int3
jge
jb
dec
mov
idiv
pusha
jae
int
cwtl
push
xor
mov
sub
add
or
sti
stos
jle
xor
sub
pop
into
stos
scas
movsb
daa
addr16
iret
mov
or
sub
sbb
inc
imul
pop
cld
lret
pop
in
xchg
pop
sub
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
stos
lea
and
in
ret
add
mov
inc
ja
out
rorb
and
rcrl
jo
cwtl
xchg
sahf
ret
mov
xor
leave
out
sbb
sub
cmpb
test
lods
mov
int
sub
push
push
gs
sahf
popf
cwtl
push
mov
js
add
and
js
xor
adc
adcb
dec
pushf
lods
fdiv
fiadds
lahf
add
enter
push
jmp
pop
popf
push
xchg
insl
cmpsb
sub
fstpl
aaa
in
sbb
test
cmp
add
mov
lods
aaa
or
cmp
ljmp
mov
adc
enter
in
cmc
xchg
mov
jg
lcall
jge
mov
or
sub
jle
xchg
in
nop
fwait
ret
inc
les
testb
cmp
scas
sbb
push
cmpsb
push
dec
cli
dec
xchg
fsubrl
in
xchg
cmp
ljmp
out
scas
jmp
scas
in
xor
sbb
mov
imul
das
stos
adc
fdivl
test
fsubrs
cmpsb
andb
jl
call
pop
ror
add
aad
push
fcompl
xchg
cmp
dec
shrl
lahf
lock
cmp
adc
rcll
jbe
int
lea
pusha
mov
cmc
xchg
cwtl
je
push
enter
gs
or
sub
das
aam
movsb
xchg
add
mov
loope
xchg
xor
divb
mov
fstps
xor
push
leave
and
pop
subl
pop
xor
and
xor
xchg
in
inc
pop
jmp
shl
outsb
lods
out
iret
out
aas
mov
popf
adc
mov
loopne
nop
jbe
push
aas
inc
sbb
gs
dec
adc
sub
lea
aam
dec
out
or
neg
jp
xchg
sti
or
xchg
rolb
pop
testb
jl
pop
bound
mov
push
mov
pushf
inc
ficompl
lds
nop
cmp
inc
and
fcomps
lahf
push
xchg
inc
aaa
into
mov
dec
movd
dec
and
aad
mov
int3
fldenv
incl
jae
ret
in
fwait
outsb
data16
or
adc
xor
int
mov
es
subl
imul
inc
fiadds
mov
movsl
or
dec
mov
push
test
push
or
adc
addr16
push
xorl
ret
rclb
rcrl
add
stos
je
test
rorb
pop
fidivs
rolb
popf
dec
sub
enter
pop
push
and
stos
xchg
pop
int
in
ret
or
and
mov
mov
xor
adc
sub
int
fistpl
mov
aad
mov
and
pop
pushf
sbb
jle
mov
jo
push
ljmp
fadds
pop
adc
and
jo
push
adc
aas
push
mov
push
fs
sahf
js
std
ficoml
sbb
lcall
sbb
jl
cmp
ljmp
inc
cmp
outsb
sub
cmp
or
xchg
div
lret
out
out
cmp
insb
cwtl
scas
inc
mov
xor
push
fcmovu
jb
in
mov
mov
sbb
mov
add
jmp
outsl
mov
or
imul
movsl
adcl
mov
les
enter
xlat
mov
pop
xor
scas
jmp
jae
and
mov
enter
fucom
push
pop
test
shlb
jne
dec
test
mul
jle,pn
insb
into
push
adc
xor
xor
inc
jns
test
jns
add
lock
and
push
sti
faddl
lock
pop
test
stos
mov
lret
mov
push
out
and
out
adc
scas
cmp
jno
jg
out
add
mov
je
or
lock
push
andl
js
push
les
sbb
test
push
mov
dec
jp
lock
je
loopne
jg
or
pop
and
rorb
lahf
neg
xor
pop
notl
test
or
cmc
jecxz
test
pop
hlt
jns
add
mov
stos
jge
sbb
test
std
shrb
aam
xchg
ljmp
push
scas
lods
addb
sbb
inc
pop
mov
jmp
and
out
shll
outsl
hlt
add
notb
lcall
jg
repnz
dec
stc
ret
jmp
bound
cmp
and
lea
jae
lods
pop
xlat
stc
mov
dec
bnd
or
hlt
cld
adc
jbe
push
mov
mov
aas
xchg
stos
sbb
ficomps
mov
xor
xor
add
les
xchg
xchg
mov
fisubs
add
loopne
and
inc
aas
adc
xchg
mov
or
mov
cli
and
push
aas
popf
inc
aam
outsb
test
cmpb
loope
xchg
sarl
out
cmpsl
popf
sub
sti
or
xchg
negb
call
icebp
jae
pop
out
jns
xor
inc
sub
pop
mov
jae
xchg
adc
incl
enter
es
daa
dec
mov
dec
call
sahf
and
stos
scas
mov
cmp
mov
lahf
aaa
cmp
and
jg
add
lods
mov
cmp
bnd
insb
xor
and
in
pop
jmp
pop
dec
xchg
and
push
movsb
cld
leave
and
data16
pop
in
cmp
lret
inc
mov
shll
or
dec
jnp
sbb
and
adc
jo
jo
sub
rcl
push
cmc
and
cmc
jmp
dec
mov
jecxz
je
adc
dec
int
push
push
js
and
je
inc
inc
leave
and
scas
dec
in
pop
add
jl
xchg
addr16
scas
mov
sub
xor
push
xchg
shll
xchg
push
jns
xchg
pop
popa
dec
pop
push
leave
das
push
mov
or
or
add
nop
out
lret
outsl
pop
fisttpl
push
pop
mov
xor
ds
pop
add
stc
xchg
jp
or
push
testb
jge
shrb
es
sub
icebp
add
or
inc
shr
push
pop
loop
sti
les
pop
ljmp
sbb
lret
cmp
nop
dec
loope
repz
adc
daa
push
sub
fcmovne
mov
jp
in
stos
test
pushf
std
xchg
sbb
fbld
jl
roll
jb
or
stos
mov
adc
jmp
dec
sub
jns
pop
popa
xchg
les
out
adc
mov
pop
jnp
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
mov
pop
jge
jo
add
push
jo
dec
shlb
dec
das
xchg
rorb
sbb
out
mov
lcall
je
fstpl
lods
or
test
out
xchg
mov
stos
jne
cltd
mov
clc
push
pusha
and
jle
dec
pop
inc
inc
cltd
xor
jge
adc
pop
enter
mov
xchg
mov
pop
inc
inc
mov
mov
gs
cmc
andb
dec
pop
dec
mov
ret
adc
and
dec
push
js
mov
jno
adc
lods
divl
jbe
sbb
sub
cmc
lds
negl
lock
adc
mov
test
js
xchg
lcall
push
xor
cmp
mov
adc
mov
sbb
in
fidivrl
or
cli
subb
cmc
and
add
in
mov
push
and
dec
push
jp
fdivs
mov
aas
pop
add
cmpsl
sarl
mov
in
out
fcomp
insl
xchg
repnz
adc
faddl
out
lea
pop
sub
mov
arpl
in
jl
negb
xchg
mov
or
mov
or
outsb
lock
mov
popf
fldt
dec
mov
cwtl
addr16
rorl
cltd
dec
pop
pusha
push
jae
scas
fcomip
mov
mov
shlb
dec
es
ljmp
mov
jo
ds
mov
pop
daa
inc
popa
jp
in
add
push
dec
mov
mov
jle
dec
and
xchg
sahf
or
test
sbbb
mov
jmp
add
jmp
ss
mov
insl
and
pop
pop
dec
ljmp
and
mov
nop
sbb
hlt
xor
xlat
xchg
arpl
out
shlb
mov
xchg
xor
or
out
lock
adc
test
push
js
push
arpl
je
stos
xchg
das
or
gs
std
ret
das
popf
xor
hlt
cltd
out
fidivs
mov
cmpsl
fsubrl
jp
cs
mov
repnz
mov
jg
in
lds
dec
cltd
aam
mov
push
shl
mov
aam
pop
icebp
push
stos
pop
enter
pop
mov
cmp
cmp
jae
test
rclb
add
int
outsb
and
dec
sbb
xchg
test
jl
xor
add
mov
push
xlat
mov
iret
pop
jb
data16
add
adc
sbb
pushf
lea
adc
imul
pop
pushf
lds
adc
xor
fld
adc
in
fsubr
mov
and
or
lcall
in
fsubr
sahf
pop
cmpl
movsb
push
lods
push
xor
xchg
pop
cs
dec
rcrb
mov
cmp
lea
loop
sbb
sub
xchg
mov
xor
dec
popf
cli
fsts
cmp
sbb
pop
jge
jg
in
or
je
mov
dec
je
xchg
je
sbb
mov
std
and
daa
push
jmp
dec
add
icebp
lcall
ffreep
lcall
imul
cmpsb
out
mov
inc
sbb
test
inc
mov
add
hlt
idivl
add
gs
mov
dec
fisttps
push
lock
lock
leave
testb
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
adc
xchg
lahf
adc
fisttpll
movsl
and
ror
movsl
sub
jo
or
jne
orw
addl
mov
test
fnsave
mov
repnz
lret
insb
aad
jnp
jl
sbb
inc
notb
inc
cld
jge
cwtl
int3
dec
jbe
pop
cmp
lods
xor
jle
pop
icebp
xchg
imul
mov
mov
mov
das
es
sbbb
jno
dec
mov
xchg
xor
sbb
push
mov
and
lods
sub
pop
fisttpl
jbe
or
dec
fdivr
data16
pop
les
outsl
xchg
push
hlt
cmovl
jecxz
pop
js
test
push
push
adc
fidivrl
mov
push
stos
scas
sub
out
mov
ret
psrlw
sub
pop
sbb
dec
mov
in
fbld
mov
sbb
sarl
sbb
cmpsb
loope
pop
shl
or
outsb
arpl
jecxz
xchg
jbe
clc
sarl
or
dec
stos
pop
ret
sub
adc
aaa
and
jbe
insl
nop
jbe
cmp
pandn
clc
mov
ja
inc
pop
xlat
out
leave
iret
out
lcall
jl
movsb
or
pop
sub
hlt
scas
shrl
fucomip
rcll
mov
outsb
icebp
mov
pushf
pop
jp
xor
lods
sti
jge
loop
iret
divl
xor
pop
mov
add
cmc
stos
sub
inc
stos
lahf
and
cmp
push
lret
insl
js
int
add
cmp
bound
xchg
loope
leave
cmc
addr16
pusha
xchg
addb
lds
jne
push
fidivrs
mov
es
ja
inc
popf
cld
inc
xchg
sets
or
pusha
ss
sub
shll
ret
xor
jbe
adc
data16
pushf
hlt
cmp
sbb
cli
mov
loop
inc
rcrb
cltd
lcall
push
xchg
fisubl
pop
cli
addr16
inc
xchg
dec
pop
daa
aas
pop
test
push
stos
fidivrl
dec
fwait
enter
inc
pop
into
jae
je
push
stos
xchg
inc
clc
mov
insb
stos
fwait
jg
or
mov
gs
test
inc
sahf
xlat
sti
lret
push
and
xor
fistps
lea
frstor
and
dec
fwait
daa
jp
fbld
inc
sti
addb
loope
cld
mov
dec
pop
jae
xchg
repz
dec
sarb
ljmp
mov
cltd
int3
mov
loop
push
dec
testl
gs
push
bound
push
popa
jg
stos
mov
xor
insl
jmp
je
bound
sahf
jle
adc
lret
nop
test
pop
ret
lds
popa
jne
mov
test
scas
call
jo
scas
xchg
or
jne
dec
fs
movsl
dec
xchg
mov
jp
cld
fcoml
jnp
mov
mov
outsb
fs
push
in
jge
sub
not
dec
mov
ficompl
pop
cmp
push
xchg
scas
or
or
or
test
lock
push
mov
movsl
mov
lcall
fwait
sub
push
jp
mov
pusha
cli
out
push
insl
inc
push
sub
jbe
pop
xor
mov
popf
xor
stos
pmaxsw
outsl
inc
in
add
mov
cmp
idiv
leave
cmp
cmpsl
pop
dec
dec
and
cli
jbe
ds
imul
out
jns
dec
push
jno
inc
call
rcrb
jmp
pop
xchg
insb
popa
clc
jns
loop
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
in
iret
rcrl
pop
jge
jo
cmpl
stos
xchg
aaa
and
pop
and
dec
cmpsl
ljmp
mov
js
call
rcrb
int
leave
xchg
adc
cmp
jne
out
pop
mov
dec
ret
or
add
cli
xchg
mov
jne
inc
adc
adc
pushf
decb
inc
push
sbb
adc
adc
jne
sbb
mov
or
cmc
mov
or
xor
neg
cmpsl
sahf
or
stos
lods
jmp
repz
test
jle
scas
rcr
dec
ljmp
fstpl
cltd
lahf
aam
pop
addr16
mov
ds
xor
dec
jnp
inc
pop
push
cltd
je
das
mov
xchg
mov
inc
dec
inc
test
mov
dec
adc
enter
mov
popf
adc
fsubl
cmpl
mov
aam
mov
sbb
xchg
and
cmp
in
xchg
mov
aad
mov
in
and
xor
jno
mov
es
vpminsw
sub
punpckhwd
mov
xor
fstps
ja
cmpsl
loope
push
repnz
fs
add
scas
mov
roll
mov
notl
sub
adc
fcmovb
stos
and
mov
cwtl
outsl
lahf
and
repz
dec
dec
popa
cmpsl
push
test
adc
cmc
pop
outsb
call
cmpsb
xchg
or
cmpsb
mov
es
or
xor
iret
sbb
lcall
fs
cmpsb
mov
xchg
cmc
pop
fsts
add
cmp
cmp
out
add
jno
xchg
ficomps
fisttpl
xor
lea
and
jb
xchg
xorl
pop
subb
adc
pusha
jmp
fdivl
sub
cmp
mov
mov
mov
mov
mov
dec
jmp
dec
or
hlt
jle
shrl
xchg
cmp
fsts
test
push
pop
inc
xchg
stos
xchg
xor
out
mov
rcr
inc
add
gs
test
popa
push
ss
sub
adc
adc
or
leave
loop
ss
in
mov
pop
in
aam
adc
popa
fmul
sub
sbb
stos
inc
dec
mov
cwtl
jg
mov
and
jp
mov
in
fldl
lret
rolb
inc
in
xchg
ss
xor
cmp
sbb
jl
sbb
xor
sbb
inc
mov
adc
int
insb
rcrb
inc
js
mov
and
addr16
sub
lods
sbb
xchg
inc
xor
sub
jno
pop
enter
and
add
idivl
ret
fcomps
adc
dec
stos
push
jns
popf
mov
xchg
mov
xchg
or
push
lods
cld
mov
jae
ja
dec
aaa
mov
dec
mov
push
sub
sbb
push
cmp
mov
repz
pop
lahf
mov
mov
cmpsl
pop
ret
inc
xor
dec
dec
sbb
test
imul
testl
and
jge
adc
or
sar
mov
adc
mov
lret
rolb
or
cwtl
push
mov
popa
popa
mov
inc
pop
cmpsb
mov
pushf
dec
dec
sahf
mov
daa
movsb
outsb
xchg
lret
sbbb
fiadds
adc
hlt
lahf
gs
fisttps
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
data16
jo
pop
jge
jo
jmp
push
mov
fiaddl
scas
push
out
mov
pop
sahf
mov
or
inc
cmp
and
pop
imul
addr16
addr16
cld
call
leave
outsl
cmc
fidivl
fs
push
in
enter
repz
push
pop
divl
push
add
shrl
pop
jmp
adc
push
jo
push
jecxz
lds
pop
imul
jle
lods
fnstenv
outsl
jb
mov
jns
nop
daa
cmpsb
iret
and
mov
lret
das
movsl
out
rorl
loopne
shl
es
mov
pop
inc
xchg
push
add
outsb
movsl
lahf
adc
xor
jns
xchg
dec
and
mov
daa
xlat
push
jmp
mov
das
hlt
and
aam
sbb
and
mov
adc
xchg
xchg
fiaddl
cmp
call
cmp
sub
js
lea
and
mov
jmp
mov
adc
and
inc
mov
mov
push
mov
inc
push
adc
cld
dec
lock
jno
adc
sub
mov
test
lock
dec
fistpl
loopne
scas
sub
push
lock
sub
pop
roll
mov
sub
jne
sti
in
add
xor
fisttpl
cmp
rorb
sub
cli
out
jecxz
sub
pushf
arpl
and
xchg
popa
jle
xchg
scas
adc
lods
sbb
pop
fisubs
jae
icebp
lods
addl
sub
test
ja
enter
nop
and
enter
mov
add
xchg
fwait
stos
pop
in
sub
int3
lcall
inc
push
sar
jg
add
idiv
jmp
xchg
inc
aad
lods
cli
add
push
test
push
and
add
fs
xchg
in
inc
jmp
mov
jle
and
pop
outsl
lahf
and
and
clc
pop
fwait
cs
cmc
sub
daa
xchg
scas
sbb
lret
testb
ret
adc
sub
lret
movsb
xchg
rcrl
inc
pop
and
inc
jns
repz
int
bound
sti
adc
or
jns
mov
sbb
pslld
cmp
cmp
js
jle
out
jb
les
out
in
das
inc
pop
popf
rclb
sbb
push
aaa
push
xor
popf
enter
pop
das
and
cld
lea
sbb
dec
mov
sti
scas
notb
int3
and
and
out
ret
inc
push
push
pop
popf
sbb
fisttps
adc
pop
push
pop
jnp
jecxz
xor
cltd
dec
and
mov
sub
or
cmpsb
xchg
cs
int
pushf
or
sub
and
or
xchg
jno
movsb
jbe
sti
xchg
xchg
iret
sub
or
dec
addl
aaa
lcall
jl
std
loop
xor
loope
mov
sub
jnp
mov
call
dec
shrl
dec
ljmp
and
xchg
stc
jmp
cmp
cmpsb
jge
push
stos
lds
nop
stos
in
cli
mov
lods
loope
pop
mov
mov
nop
insb
adc
or
add
inc
rclb
lea
fwait
aam
mov
leave
imul
mov
cmp
in
out
or
addb
test
loop
cmp
jns
jns
addr16
mov
bound
xchg
mov
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
jmp
pop
jge
jo
jbe
and
fwait
xor
pop
sbb
cwtl
clc
ficomps
fwait
in
or
add
cmp
addr16
dec
push
adc
in
jecxz
rcl
push
push
xor
jle
ljmp
pop
aas
xchg
mov
sub
add
jae
fistpll
into
ss
jns
outsb
xlat
fdivp
push
bound
cli
jge
cmc
in
inc
fdivrl
dec
lret
add
arpl
or
pop
xorl
movsb
out
mov
xor
outsl
negb
mov
fcomps
sub
jnp
ret
fidivrs
push
sub
add
out
dec
in
lahf
mov
fsubrs
xchg
mov
fisttpl
or
in
jns
je
xchg
pop
out
dec
icebp
arpl
rcrb
negb
mov
push
nop
and
sub
pop
mov
pop
cwtl
loop
leave
leave
mov
sbb
fsubrl
ret
outsb
sub
cmpl
sub
jb
adc
in
inc
loop
add
adc
clc
lea
pop
pop
cmp
ret
mov
mov
or
out
push
or
stos
sub
enter
into
enter
mov
gs
dec
into
lcall
sub
cmp
add
into
xor
xor
rolb
mov
pop
cs
inc
popf
dec
adc
fstpt
popl
pop
jb
or
mov
inc
testb
daa
cmpb
out
add
outsb
mov
add
fidivrs
inc
hlt
xchg
sbb
fcom
shl
addr16
jae
pop
sub
das
xchg
cmp
arpl
mov
push
or
scas
jg
or
or
test
jbe
mov
fcmovb
dec
adc
jecxz
fiaddl
mov
jbe
fdivl
fisubl
xor
fistl
imul
cltd
lods
xchg
outsb
imul
mov
scas
xchg
loope
push
push
ds
push
jbe
dec
xchg
pop
mov
dec
leave
lea
mov
in
jns
sub
testl
dec
cmp
pop
or
loop
xor
jg
stc
insl
and
movsb
jge
adc
mov
mov
in
mov
mov
call
xchg
test
add
adc
in
sub
inc
enter
add
inc
adc
iret
push
shl
imul
or
inc
cmp
cmpsb
xchg
mov
aad
lods
lods
mov
add
inc
xor
jp
scas
xor
fidivs
insl
fs
xchg
hlt
and
xor
fmulp
int3
mov
lcall
mov
mov
dec
push
push
inc
push
mov
loopne
add
pop
add
aam
mov
cld
sub
repz
es
add
aad
les
xor
cmpsb
dec
bound
popa
pop
sbb
pop
and
push
popa
inc
adc
adc
icebp
mov
jecxz,pt
addr16
mov
out
lcall
fdivl
cmpsb
sbb
stos
test
cld
mov
mov
insb
iret
in
je
fwait
push
movsb
add
and
jnp
ret
sbb
arpl
out
mov
or
dec
loop
jmp
paddw
cld
mov
inc
jmp
dec
test
jnp
loopne
loopne
sbb
sub
iret
xorb
cwtl
out
cli
dec
jecxz
lret
dec
and
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
call
pop
jo
mov
shrb
enter
cmp
adc
in
sti
push
mov
rcr
pop
push
adc
xor
jnp
mov
pop
in
int
sti
and
push
xor
mov
repnz
out
push
and
das
xchg
ds
sub
ret
ja
popf
and
push
cwtl
mov
jae
fdivrp
ficoml
sub
loop
push
pushf
pop
subb
cmp
jnp
sub
inc
mov
add
sbb
sbb
out
stos
xor
sub
inc
stc
lds
add
cld
push
inc
mov
pushf
arpl
push
clc
jle
test
cmp
iret
fbld
lds
jl
mov
iret
jbe
jns
into
insl
movsl
xor
pop
les
popa
mov
push
test
fwait
lcall
pop
ficoml
pop
mov
sub
popf
out
push
out
push
inc
idivb
cmp
jae
popf
cwtl
pop
add
rclb
cli
push
xchg
in
js
xchg
sbb
lcall
out
lds
inc
test
push
pushf
outsb
dec
push
or
cwtl
int3
ljmp
shlb
cltd
loope
int3
push
push
jns
in
inc
aam
lcall
dec
in
loope
sbb
xor
popa
fisubl
es
adc
int
or
negl
pop
leave
or
adc
xor
pop
insb
inc
sub
adc
es
xlat
in
cmpsl
cmp
sbb
mov
addl
aaa
aam
lret
or
cmpb
lahf
ret
mov
sbb
add
dec
subl
push
int3
mov
das
pop
out
mov
push
idiv
sub
or
pop
mov
out
mov
js
inc
cmpsl
dec
inc
in
mov
imul
outsb
insb
push
sbb
fildl
or
js
cmp
jbe
stc
das
daa
jmp
xlat
and
cmpl
xor
flds
sub
mov
out
dec
call
push
inc
fsubrl
jge
cmp
repnz
clc
pop
inc
jo
add
or
subl
mov
loope
stos
call
out
push
pop
pop
fisubl
cmpsb
insb
dec
fldenv
adc
jg
repz
loopne
scas
pop
mov
ror
fdivs
pop
jmp
mov
add
test
loope
push
sub
test
xchg
and
stos
mov
cmp
sub
xchg
sldt
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
popf
jne
pop
jo
mov
inc
or
mov
test
sahf
push
push
ret
popa
mov
adc
cmpsb
shl
push
dec
clc
imul
cpuid
jp
mov
jns
mov
adc
dec
arpl
push
sub
adc
add
xchg
testb
xchg
hlt
jmp
pop
into
and
cmp
mov
push
pop
enter
roll
mov
sbb
push
mov
xor
stc
jle
insl
sub
jge
lods
popa
jecxz
lds
aam
and
dec
jle
jae
adc
movsb
lock
xchg
mov
cli
mov
pusha
fldl
repz
adc
lahf
mov
popf
mov
aad
faddl
xchg
lret
mov
repz
lds
inc
sbb
testl
cmpl
inc
jmp
fidivl
pop
mov
xchg
inc
xor
push
outsl
rorb
sub
push
call
mov
sbb
pop
fistpll
jno
sub
xor
clc
cmc
jo
pop
dec
push
in
push
popa
pop
daa
test
cmpb
arpl
pop
in
or
mov
movsb
cltd
dec
xor
lret
jbe
sbb
out
inc
cli
add
enter
fiadds
hlt
js
sbb
push
inc
and
xchg
les
andb
std
imul
mov
jp
sahf
jne
mov
cwtl
mov
inc
es
lea
xchg
dec
fsubs
push
cmp
scas
pop
sbbl
ja
loop
mov
pop
xor
das
sti
int
jae
add
push
xchg
mov
mov
cld
fs
scas
rclb
dec
jg
sub
pop
dec
lret
mov
sub
add
test
jge
sbb
or
repz
repnz
lcall
push
sub
inc
scas
jp
jg
movsb
scas
dec
xchg
mov
adc
in
notl
inc
jnp
imul
jo
ds
dec
push
push
in
dec
and
ljmp
hlt
push
xor
orb
popf
addr16
or
pop
push
dec
xchg
fistpl
xor
sub
inc
xchg
add
out
add
stos
imul
bound
cmp
pop
shll
repz
and
leave
and
pop
jg
ret
dec
sub
sub
mov
cmp
ret
xor
jns
testl
mov
call
inc
pop
lods
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
rol
pop
mov
arpl
mov
xor
mov
adc
cmpsl
jo
clc
imul
pop
lods
paddq
pushf
dec
sub
or
and
shll
pop
inc
stos
cmp
movb
xor
icebp
cmp
fidivrs
sbb
movsl
lods
xor
rcrb
addl
pop
xchg
ds
sbb
ret
outsl
adc
mov
lods
imulb
enter
and
dec
clc
lock
sub
lcall
pop
div
sbb
or
mov
xchg
push
lret
add
cmp
mov
cmpsl
mov
jns
mov
dec
add
insl
xor
lret
movsl
mov
mov
cmpsb
cs
ss
adc
lret
inc
mov
and
in
sahf
stos
in
add
andl
movsl
push
aad
push
das
cmpsb
dec
sbb
adc
inc
mov
inc
xchg
lock
cmpsl
add
dec
adc
data16
xchg
lods
xchg
data16
pop
fstl
mov
push
shr
push
xor
fstps
pop
and
sbb
std
push
movb
sub
sbb
ljmp
fisttpll
pop
sbb
pop
nop
jmp
mov
cmc
mov
adc
mov
push
int3
xorb
fmul
push
and
movsl
or
loop
gs
mov
enter
nop
pop
cmpl
adc
lcall
push
xor
mov
push
mov
fmull
sub
push
xchg
fdivrp
xchg
shl
jp
cmc
mov
jp
mov
pop
lahf
icebp
xchg
ret
das
push
repnz
lods
ljmp
call
je
mov
pop
lret
popa
out
inc
or
mov
fistpl
negb
es
cmp
adc
adc
loope
test
fmull
push
jbe
cmp
xor
pushf
adc
sti
or
or
fs
xchg
mov
and
insb
lock
jno
pop
fiaddl
xor
aas
loop
xor
add
inc
mov
fsubr
mov
xor
into
ljmp
xor
ljmp
mov
jl
inc
popf
xlat
xorb
or
sub
jo
fcoml
out
lock
out
fstps
pop
cmpsb
add
or
in
sub
dec
jp
and
jae
cli
mov
jbe
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
sub
adc
jo
jle
jo
mov
add
cmp
loope
ss
cmp
jg
inc
lahf
push
fwait
subb
popa
dec
out
sub
push
jo
jmp
cmp
scas
rcrb
sbb
sbb
addr16
adc
shll
dec
push
cmp
enter
sti
test
add
adc
out
add
mov
sbb
je
push
pop
into
mov
scas
push
out
xor
repnz
add
mov
mov
jp
sub
sub
mov
mov
pop
outsl
push
adc
push
maskmovq
imull
xchg
fcompl
dec
jno
sbb
mov
add
and
sbb
sub
sbb
push
adc
adc
mov
les
push
ret
dec
push
adc
movsb
jmp
rcl
aam
in
sbb
mov
les
jg
sbb
jg
cmp
mov
jmp
mov
inc
cmp
cmp
lret
daa
mov
jecxz
push
or
daa
cwtl
dec
adc
push
outsb
cmp
sbb
xchg
mov
hlt
add
mov
mov
divl
or
gs
cmp
stos
shlb
mov
enter
dec
call
push
add
fnstenv
sbb
sti
pop
in
dec
pop
jne
push
fildl
jl
lret
jns
call
adc
and
mov
mov
cmc
fcmovb
dec
stos
sbb
sbb
dec
mov
fbld
into
outsb
cwtl
leave
movsl
test
pop
data16
cs
rorl
iret
sbb
jecxz
aad
pop
xor
into
xlat
in
leave
scas
push
xor
xchg
mov
pop
lret
xchg
jle
and
cmp
imul
mov
repz
hlt
shrb
add
cmpsl
sti
xchg
adc
lea
xchg
mov
jno
jge
das
fnstcw
popa
dec
fldcw
gs
fisubrs
fldcw
movsb
pop
in
popf
rcll
imul
xor
adc
sbb
mov
push
inc
into
fmulp
in
repz
in
mov
inc
nop
sti
test
and
inc
xorb
xor
pop
xor
push
jmp
nop
push
hlt
mov
mov
jae
xchg
push
mov
jg
mov
mov
mov
adc
inc
shll
mov
lahf
mov
xor
orb
sahf
mov
cmc
fistpll
sbb
add
ret
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
jge
xchg
pop
fs
mov
lock
lret
fbld
daa
out
sahf
xor
repnz
aam
dec
icebp
xor
movsl
repz
cmp
push
jp
bound
xor
cmpsl
pop
cmp
dec
rolb
es
push
xor
aas
xor
xor
fwait
stc
jecxz
in
leave
mov
mov
and
stos
push
fisubs
mov
imul
lods
mov
sub
aad
pop
push
shrl
shl
push
sub
jns
popf
ret
cmp
ljmp
inc
fisttpl
sarb
xchg
mov
add
icebp
or
mov
add
pop
and
and
loop
ds
sbb
movsl
cli
mov
ja
fs
movsl
xor
inc
insb
adc
jno
lret
aas
mov
jmp
addr16
push
xchg
mov
outsl
stc
icebp
dec
push
aad
movsb
mov
cmpsl
jae
mov
cmp
push
cmp
xchg
dec
bound
in
pop
aad
icebp
mov
adc
lock
scas
jle
lock
dec
and
push
lret
push
sub
dec
icebp
adc
in
loop
test
fxtract
adc
xor
pushf
mov
int3
and
hlt
scas
push
jge
aad
push
in
lcall
xor
sbb
mov
sub
sbb
cmp
lock
insl
push
add
into
or
dec
movsl
pop
mov
movsb
pop
jno
out
jne
pop
scas
jo
hlt
ljmp
into
mov
dec
push
test
mov
push
fcmovnu
push
jle
xor
pop
imul
call
mov
or
pop
mov
movsl
mov
repz
push
push
outsl
add
inc
jo
sub
jae
cmp
int3
ja
in
mov
insl
jae
xchg
les
cmpsl
push
loop
test
mov
out
movsb
xchg
sub
pop
ficomps
lds
std
xor
adc
inc
out
xchg
and
jge
pop
inc
test
insb
and
repnz
mov
mov
or
or
sub
push
repz
fs
hlt
push
mov
ret
inc
and
loope
and
pop
xor
adc
pushf
mulb
and
mov
mov
inc
mov
mov
ljmp
fidivrs
mov
xchg
ja
and
xor
dec
lock
std
daa
scas
sbb
cmc
call
sbb
cmp
mov
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
sub
popa
jo
mov
mov
mov
ss
int3
pop
adc
dec
adc
xchg
sbb
jne
sub
leave
sub
push
pop
cmp
sub
inc
outsb
imull
test
shrl
leave
dec
mov
in
ja
xchg
cmpsl
push
jne
mov
test
pop
adc
jle
pop
in
cmp
lods
add
xlat
test
outsl
dec
mov
mov
dec
stos
repnz
in
jne
ds
push
mov
jb
push
jg
sbbl
add
adc
data16
rcr
nop
lods
jle
out
push
and
pop
sbb
xchg
dec
imul
call
mov
iret
roll
sub
js
lahf
mov
push
sbb
not
shlb
push
mov
mov
lret
sbb
xor
xchg
fisubrl
pop
test
faddp
cwtl
in
enter
imul
fildll
outsb
ret
je
outsl
jno
je
jbe
mov
movsl
xchg
sbb
lahf
mov
xor
xor
and
popf
mov
nop
and
jle
mov
add
add
xchg
in
jo
call
mulb
sub
and
cmc
pop
push
mov
jno
fcomi
push
push
js
cld
cs
jmp
setne
xchg
fistl
mov
mov
fisubs
cmpb
aas
xchg
fistpll
inc
idivl
mov
push
scas
or
add
rol
push
add
rclb
ss
jle
mov
data16
sahf
and
mov
jo
repnz
sbb
dec
dec
add
xor
push
pop
inc
sub
cmpsl
out
stos
lahf
jmp
add
shr
mov
and
in
fwait
xchg
and
jnp
ds
pusha
mov
pop
sbb
clc
jae
dec
fnsave
stos
jp
neg
sti
mov
test
clc
std
mov
das
ja
inc
in
fistpll
cmp
addr16
sbb
inc
cmpsb
fstl
cmpsl
int3
cmc
enter
pop
mulb
lds
sbb
fcomps
movsb
push
jo
push
push
lea
mov
arpl
dec
lods
test
cmpsl
lods
jl
push
jecxz
dec
int
dec
push
pop
ljmp
sbb
adcl
outsb
push
in
sub
int3
add
mov
out
xchg
divb
insl
addl
lcall
insl
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
lahf
in
outsb
jo
mov
sub
jg
gs
adc
push
dec
testb
jns
in
pop
jmp
out
pusha
add
faddl
scas
push
and
add
pop
filds
push
sahf
dec
sbb
xor
add
dec
outsl
adc
test
fwait
xorl
sub
rcll
jmp
mov
les
and
lcall
mov
scas
mov
or
aaa
imul
andb
adc
int
jecxz
and
add
lds
adc
insl
jbe
aas
pop
nop
pusha
fidivs
push
or
dec
nop
cmpsb
xor
inc
dec
das
push
cmp
add
pop
xlat
push
xchg
sbb
cmp
rcrb
stc
fisttpl
arpl
cmc
loope
adcl
daa
rcr
test
sbb
inc
pop
mov
loop
lds
jle
in
jmp
adc
sbb
or
loop
lcall
or
hlt
mov
mov
es
mov
adc
lock
pop
xchg
icebp
xor
cmc
lcall
cmpsb
int3
stos
push
inc
cmp
xchg
or
aaa
int3
lret
jle
or
or
dec
xchg
mov
inc
jp
xor
call
cmp
mov
rcrl
cmpsb
or
cmc
jne
adc
out
hlt
add
xchg
push
ljmp
mov
nop
ror
inc
adc
lret
adc
mov
cmpsl
jmp
mov
mov
mov
lret
lock
popf
adc
popf
mov
lret
xchg
aas
repz
dec
inc
orl
push
push
mov
lock
stc
mov
sbb
cmp
cmpsl
ret
xchg
mov
adc
add
fwait
clc
imul
ja
popf
add
pop
data16
test
repz
js
mov
add
pop
adc
push
cmp
std
or
pop
je
jle
cmp
cmp
fsubl
out
cmp
fadds
mov
movb
cmp
out
sub
push
sti
add
bound
dec
loop
and
movsbl
lock
xor
clc
mov
call
test
sub
inc
xor
fdivrp
and
sbb
cmp
xchg
daa
mov
dec
rorb
inc
outsb
xor
call
lahf
xor
clc
jne
pushl
jmp
and
lods
shrb
in
sbb
jo
mov
and
aas
adc
arpl
mov
shl
jnp
jnp
stos
push
cmp
adc
inc
outsl
cmp
xor
mov
sub
pop
mov
inc
and
add
out
inc
sbb
pushf
and
inc
pop
popa
or
jae
int
daa
push
dec
xor
adc
sub
lds
mov
adcl
pushf
adcl
cmpsb
add
mov
push
push
dec
add
cmc
push
cwtl
sahf
and
enter
in
mov
mov
mov
cmp
loop
scas
inc
xchg
push
adc
xchg
adc
stos
or
add
fwait
add
xchg
repnz
dec
stc
jl
stos
sub
testl
inc
xchg
jge
daa
pop
dec
inc
scas
scas
push
adc
and
push
mov
or
or
or
daa
roll
pop
mov
outsb
mov
jp
mov
out
push
push
jmp
xlat
push
out
out
adc
push
les
mov
in
add
cmpl
aaa
sbb
jb
mov
enter
mov
xchg
loopne
sub
popa
jnp
xchg
mov
ja
pushfw
loope
mov
xor
push
mov
mov
into
movsb
xchg
push
push
sbb
pusha
shll
cltd
sti
stos
in
lea
roll
mov
frstor
stos
cmp
inc
push
sub
adc
imul
int3
cmp
pusha
out
dec
jae
test
push
inc
rorb
jmp
cltd
pop
shll
xor
std
std
inc
push
jp
add
insl
xor
xchg
out
dec
push
mov
lods
push
mov
xchg
testb
mov
sbb
jne
xor
push
add
or
mov
out
shlb
or
roll
lods
push
sbb
mov
ss
call
dec
cmpsl
test
pop
loope
xor
shlb
hlt
mov
inc
fisttpll
push
cmovbe
jns
scas
fwait
jl
or
mov
jp
add
xchg
pop
test
sar
mov
xchg
clc
pop
inc
mov
cmp
iret
lds
sub
push
ret
addl
adc
decb
or
jle
outsb
and
stos
bound
test
addr16
lcall
and
repz
and
fistl
jmp
pop
insl
and
xor
insl
jp
or
insl
adcb
push
jo
jb
test
mov
adc
das
stc
test
jb
xor
sbb
insl
xchg
push
int
frstor
and
pushl
fimuls
pop
push
mov
inc
xor
xchg
cli
mov
mov
scas
mov
bound
adc
js
jle
sbb
xor
adc
lods
icebp
clc
outsb
sahf
xchg
mov
mov
je
dec
sub
in
xchg
std
ljmp
popf
sbb
mov
sbb
xor
or
xchg
jecxz
nop
das
pop
aam
jnp
jbe
je
add
inc
loopne
adcb
inc
loope
test
add
bound
push
push
cs
pop
push
xor
or
js
mov
cmc
inc
jns
rcll
and
popf
es
inc
rcrl
je
lods
or
xchg
push
test
outsl
mov
ja
int3
ss
sti
sub
scas
xchg
mov
jmp
xchg
add
push
jecxz
pushf
psllq
fsts
adc
ss
xor
xchg
aaa
iret
mov
jo
icebp
sub
xchg
sbb
cltd
jno
adc
bound
mov
mov
aad
test
repnz
add
lea
push
cli
inc
sbb
sub
push
pop
clc
cmp
add
lahf
cltd
lret
ljmp
sub
mov
out
dec
add
cmp
clc
pop
rclb
pop
pushf
xchg
subl
cltd
call
mov
jb
and
mov
mov
lods
push
cmp
lcall
jns
ljmp
test
and
rcl
xor
mov
imul
inc
push
jb
dec
push
in
mov
shl
outsb
adc
xchg
xchg
pop
rorb
mov
xchg
imul
push
dec
mov
dec
and
orl
loope
push
movsb
pop
adcb
mov
dec
xorl
mov
popl
shl
and
sub
xchg
xor
lahf
movsl
dec
jb
movsl
and
aaa
test
mov
cmc
dec
jmp
mov
mov
lods
inc
cmpsb
mov
dec
jmp
cld
pop
pop
movsb
clc
xchg
jmp
push
push
and
insl
jg
mov
jp
sahf
xchg
aam
dec
ret
pop
clc
das
mov
shr
xchg
jmp
lea
ja
jecxz
jmp
push
shlb
pop
jmp
or
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
aas
inc
jbe
jo
jle
jo
out
das
mov
cmp
sahf
push
mov
cs
xchg
mov
in
xbegin
dec
cmp
int3
or
sti
fcomps
dec
jmp
add
cmp
xor
sbb
clc
jge
inc
cmp
repnz
in
mov
aam
pop
or
xor
nop
xor
test
iret
lret
rcrb
lds
dec
xlat
scas
jns
cmpsl
jecxz
bound
scas
sub
mov
outsb
adc
sbb
lahf
int
and
or
jae
mov
into
push
push
cmp
cmp
jg
dec
sub
dec
imulb
test
mov
pop
loope
ret
or
adc
dec
or
setnp
mov
repnz
sbb
push
fisubs
mov
ficomps
imul
mov
xchg
gs
js
test
rclb
sbb
in
aas
adc
sub
not
in
dec
lods
in
push
bound
pop
cli
inc
push
cld
neg
jle
xor
in
lods
std
mov
mov
push
imul
adc
imul
xchg
and
inc
sub
aad
orl
dec
cmp
fsubrs
popa
jno
fildl
rcrb
data16
or
or
movsl
in
jmp
mov
sub
loope
rclb
bound
out
inc
bnd
mul
pop
add
sub
insb
add
jae
sbb
add
xor
ror
and
movsl
cmpsl
jle
lock
roll
aaa
add
xor
dec
push
sub
add
mov
xchg
jae
subl
pop
fimuls
push
push
lods
out
cli
or
js
stos
daa
jecxz
sahf
xorl
cmp
stos
jae
cmpsl
xlat
outsb
sub
and
sbb
and
ja
shll
xchg
aas
add
repz
jmp
int3
xchg
dec
mov
pop
or
push
push
mov
dec
xchg
push
mov
nop
out
xchg
rcr
pop
scas
cmc
push
push
or
mov
pop
mov
jb
nop
jno
jb
xor
stos
adc
lret
mov
xlat
inc
jo
mov
mov
gs
adc
add
popa
inc
mov
popf
test
jbe
imull
test
out
jnp
mov
pop
ja
test
push
adc
sbb
in
lcall
xchg
in
cmpsl
aad
inc
xchg
add
pop
and
jp
repz
or
jge
push
xchg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
test
flds
jle
jo
sbb
adc
mov
cli
inc
cs
mov
fnsave
inc
aaa
mov
cmp
adc
inc
enter
jg
push
push
movsb
sbb
das
movsl
loopne
aas
mov
pusha
imul
lock
xchg
mov
adc
inc
hlt
cmp
jmp
ret
mov
cmp
int
mov
das
outsl
cltd
movsb
push
adc
cmp
add
arpl
leave
imul
push
loopne
leave
add
repnz
icebp
xchg
mov
mov
bound
ds
repz
adc
xchg
and
fldt
rcrb
test
ret
xchg
jnp
jno
mov
pop
jo
sub
push
pop
fwait
sub
mov
js
fistl
push
cwtl
mov
imul
cmp
mov
push
aam
mov
and
mov
adc
xchg
ficoms
cwtl
test
sbb
out
es
fwait
wbinvd
mov
jg
mov
cmpsb
or
out
pop
repz
bound
inc
pop
addl
inc
mov
popl
cmpsb
and
sarl
adc
es
or
scas
xchg
inc
and
sbb
add
or
ret
sahf
nop
dec
mov
cmp
adc
clc
mov
sbb
jno
into
cmp
sbb
pop
repnz
insb
or
in
iret
cs
xchg
movsb
inc
outsl
jae
fcom
push
xor
xchg
das
pop
sbb
add
sahf
dec
fs
jecxz
mov
mov
test
loopne
dec
lods
insb
outsb
movsb
rorb
imul
into
icebp
jecxz
inc
sahf
xchg
jmp
and
push
je
add
pop
xor
loope
scas
stos
pop
sarb
mov
subl
cmp
jecxz
sub
cmpsb
stos
js
xor
cmp
mov
ljmp
push
fwait
sbb
sbb
nop
scas
fnsave
xchg
mov
xadd
push
cmp
leave
negb
mov
sbb
jb
lret
loope
repnz
push
insl
mov
std
mov
adc
shlb
cltd
popa
sbb
lea
lret
pop
ds
pop
mov
pop
xchg
adcb
aam
jecxz
mov
xrelease
sbb
cmc
xchg
mov
push
outsb
push
stos
pop
out
inc
jg
pop
aad
cmp
inc
mov
decl
std
ja
mov
imul
jo
mov
push
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
xchg
fcmovne
jo
jo
jle
jo
jns
dec
pminsw
ljmp
mov
mov
icebp
cld
pop
scas
jp
inc
cld
lret
idiv
xchg
cmp
flds
pop
mov
push
test
xlat
sbb
xchg
xchg
mov
xlat
repz
add
mov
test
mov
jo
or
call
xor
addr16
xchg
pusha
icebp
inc
movsl
cmp
int3
dec
inc
dec
adc
mov
jp
xor
push
push
arpl
mov
ret
xchg
adc
ja
fbstp
xchg
fdivr
push
gs
push
ror
imul
push
xchg
outsb
add
mov
nop
and
inc
xchg
mov
cs
stc
jl
sub
je
dec
stos
inc
test
mov
call
call
int
shll
xor
cltd
ja
mov
shrl
fwait
jmp
xor
nop
add
mov
sbb
iret
add
aaa
pop
push
push
ja
mov
mov
jge
sub
mov
test
in
mov
mov
out
and
sub
idivb
and
sub
inc
adc
sbb
fdivl
cmp
xchg
xchg
push
sub
jo
pop
mov
sbb
mov
add
test
lds
mov
dec
dec
scas
pop
cmpsl
insb
gs
jmp
in
sti
shll
or
std
les
into
inc
aas
xor
pop
mov
pop
push
shll
xchg
add
int3
insl
push
xchg
imul
add
movsl
mov
cmp
mov
fsin
sbbl
and
sarb
je
sub
cli
cmp
mov
push
insl
dec
xchg
adc
pop
fcoms
cltd
xorb
fdivl
or
jmp
lods
fimull
inc
pusha
cli
jns
dec
hlt
test
jno
out
cwtl
in
sub
out
mov
test
subb
cmc
pop
popf
jns
xor
popa
fucom
dec
cmp
out
push
ret
dec
shlb
sub
pop
gs
adc
jmp
iret
cs
fwait
cmp
test
sbbl
or
out
loopne
xchg
addr16
and
xchg
movsb
aad
lret
in
sbb
sbb
jmp
aam
cmpsl
adc
loop
inc
fadd
mov
jno
stc
push
jl
cmp
scas
aad
fdivrl
dec
mov
jb
adc
mov
mov
fs
in
dec
clc
xor
jmp
add
mov
jb
jge
jge
lds
into
adc
jo
jle
jo
push
cmp
and
sub
add
push
sbb
movsb
test
pop
inc
xor
sub
mov
xchg
scas
push
hlt
es
fists
test
dec
les
dec
push
push
dec
rcrb
enter
mov
lock
xor
xor
or
test
add
inc
in
dec
jns
ds
jmp
jl
pop
xor
pop
leave
inc
jmp
popa
mov
test
cmc
lret
push
push
jnp
xor
clc
fcompl
sub
rdmsr
cmp
lock
or
mov
js
or
jns
sub
icebp
ss
cmc
lret
pop
dec
inc
cmp
and
push
mov
inc
stos
loope
mov
into
aam
or
bound
sbb
cmp
xor
and
or
jge
jbe
push
dec
cmpsb
jne
mov
pop
push
arpl
xchg
gs
xchg
js
outsb
mov
int3
movb
imul
xor
add
jl
push
imul
testb
or
push
stos
testb
int3
mov
and
xchg
out
dec
adc
and
and
es
xchg
sub
mov
fisubl
xchg
das
popa
pop
mov
sub
pop
inc
xchg
and
or
jb
aas
jne
pop
push
pop
das
lret
cmp
fidivl
cmpb
pop
add
xor
sbb
jo
test
inc
dec
cmp
mov
mov
lock
int
xor
push
xchg
ss
scas
inc
or
sub
jns
sub
and
dec
je
incb
jae
ret
xlat
and
pop
fisubrl
dec
mov
ss
insl
lds
lods
xchg
in
jle
and
inc
sub
cmp
ror
xlat
xor
xlat
out
inc
push
xor
mov
mov
cmp
call
jp
insl
fists
pop
ss
xlat
mov
nop
mov
in
ljmp
cmp
inc
test
mov
notl
fistpll
push
mov
hlt
fldl
xor
fs
out
and
inc
push
lea
mov
fsubl
mov
addr16
push
insl
ja
or
popa
cmc
mov
icebp
cmpsb
inc
push
add
pop
mov
xchg
icebp
mov
loop
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
pop
popf
pop
pop
jnp
jo
jle
jo
shlb
pop
das
daa
xchg
cmc
cli
mov
mov
movl
mov
mov
pop
cmpsb
xchg
or
lret
movsl
xchg
push
jno
mov
rolb
xchg
popa
xor
out
int3
mov
je
dec
pushf
add
dec
das
stos
ret
inc
hlt
in
pop
dec
shrl
cmp
sub
push
cmpsb
and
fidivl
cmp
fisttps
pop
sbb
scas
stos
jle
pop
js
xchg
je
lea
sub
cltd
je
sub
mov
xchg
pop
or
sbb
adc
fnstcw
inc
fcmovne
movsb
cmpsb
js
pop
jne
add
xchg
in
movsl
adc
sbb
outsb
jae
mov
in
fisubs
sbb
test
xor
imull
add
fwait
data16
scas
fs
rorl
mov
aad
mov
pop
into
cltd
ficompl
lea
addr16
leave
jle
mov
pop
enter
stos
mov
push
inc
testb
xchg
scas
loope
mov
mov
push
dec
in
sbb
lock
mov
inc
repz
xchg
jno
pop
sbb
push
push
push
pop
mov
pop
or
fcomip
test
sub
inc
mov
lret
add
addb
loop
jle
icebp
mov
stos
cmp
shlb
mov
daa
jle
inc
movsb
ret
lods
or
out
mov
xchg
les
mov
xor
vcvtps2dq
insl
int3
inc
jmp
jbe
xor
push
mov
inc
data16
push
inc
and
ret
dec
adc
push
mov
jge,pn
movsl
ret
popf
cs
das
sub
xor
mov
out
push
xor
inc
outsl
adc
sbb
jo
adcb
sti
lret
and
xchg
lahf
and
push
lock
xchg
push
push
xor
movsl
test
xor
inc
xchg
leave
cld
mov
dec
pop
inc
mov
cmpsl
xor
mov
push
pop
add
mov
jl
pop
pushf
mov
fxch
xchg
or
xchg
ja
inc
adc
push
xor
jns
xchg
gs
aas
andb
push
movsl
pop
fldcw
sbb
xchg
xlat
fs
mov
jg,pn
mov
lret
dec
xor
push
sarb
out
test
sub
mov
inc
push
dec
stos
mov
dec
shll
lcall
push
cmp
movsb
ficoms
xchg
call
rcrl
popa
xorb
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
cmpb
movsb
js
jo
jle
jo
call
fnsave
pop
std
fidivrl
inc
ret
cmc
dec
mov
mov
mov
movsl
cmp
cmp
mov
jo
call
sub
mov
push
dec
roll
fs
mov
repnz
fldenv
xor
cmc
sbb
scas
test
out
stc
mov
lret
movsl
jl
daa
fwait
push
dec
cmpsb
imul
dec
pop
inc
stos
or
add
mov
sbb
xchg
cmp
lock
jmp
movsw
inc
aad
xchg
cmc
push
outsb
inc
mov
push
aaa
adc
add
mov
jae
cmc
and
fmuls
int
push
pop
xor
sub
repz
mov
pop
push
in
push
fcmovu
and
and
ret
cmc
les
jecxz
sub
mov
ss
sti
aaa
cltd
les
mov
jb
icebp
sub
dec
es
cwtl
pop
or
iret
loope
lahf
decb
mov
inc
insl
mov
jae
stc
iret
cmpsb
xchg
pop
ret
aaa
sbb
imul
push
sbb
push
mov
test
push
ss
pop
cmp
lock
fldenv
sub
xchg
pusha
jl
mov
outsl
shlb
lods
aam
jmp
xor
les
mov
sbb
add
pusha
jmp
es
xchg
fdivrl
and
addr16
push
mov
xchg
divl
ret
push
mov
mov
jae
pop
push
xor
aam
inc
aas
ss
mov
add
inc
jno
jne
mov
shll
call
fnstsw
push
add
enter
cli
jno
xchg
sbb
popf
ja
or
insb
xchg
notl
es
jne
or
out
std
addr16
or
mov
orb
xlat
cmp
inc
xor
cmp
add
aaa
xchg
jns
add
push
adc
push
test
mov
mov
pop
push
out
add
outsb
or
xlat
jb
stc
push
jp
and
test
repnz
and
aas
pop
push
push
cwtl
ret
fwait
loope
push
sub
mov
adc
rorb
cmc
loop
fsubrl
xchg
push
cmp
push
mov
inc
and
jae
in
mov
inc
cmpsl
in
jge
decl
adc
sbb
dec
xor
scas
lcall
mov
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fldenv
add
jo
sbb
outsb
mov
xor
in
sub
lods
in
xchg
repz
sbb
xor
sbb
mov
cwtl
xor
mov
das
popf
loopne
loopne
jbe
int
dec
test
and
push
fistl
lcall
aaa
test
jecxz
xchg
jg
inc
add
add
shrb
cwtl
add
xchg
pop
lret
mov
dec
into
cs
ss
loop
call
xchg
dec
xor
sub
mov
mov
dec
leave
pushf
popf
xchg
cmp
cmpsb
into
int3
cmp
pop
adc
mov
sarl
insl
mov
nop
shr
inc
xchg
and
aas
lea
aad
xor
lcall
mov
sti
ss
mov
cs
outsb
int3
jl
fs
es
call
fdivr
cwtl
xor
imul
xchg
xchg
inc
repnz
mov
pusha
lahf
fldcw
rclb
pop
jl
aaa
test
mov
inc
jmp
inc
les
sbb
stc
inc
pop
inc
pusha
sti
nop
fnsave
jmp
imul
mov
mov
mov
xor
dec
push
lea
add
shl
add
int3
jg
jmp
xchg
fs
mov
sarb
jns
mov
pop
mov
and
mov
stc
xchg
cs
ljmp
push
jl
cli
push
xchg
xchg
jge
inc
cmpsb
or
mov
dec
pushf
inc
xor
mov
xor
cmp
add
xor
inc
and
jl
insb
lock
or
jns
sub
or
dec
and
pop
ja
jne
aam
out
mov
add
xor
repnz
enter
or
popa
mov
push
loope
lods
les
jmp
or
stos
repnz
push
add
pop
js
mov
jg
popa
mov
add
dec
xor
pop
fidivrl
adc
mov
xchg
jae
cs
ja
fildll
sbb
jb
ret
xlat
cmp
dec
sbb
mov
mov
imul
jns
rcr
inc
jb
das
imul
movsb
push
push
jnp
jb
and
inc
mov
popf
pop
sub
mov
movsl
jmp
icebp
cmpl
int3
fs
sbb
jbe
dec
rcr
sub
fwait
fwait
inc
inc
fdivrs
xchg
insl
in
lcall
push
outsb
sti
jge
cmp
mov
adc
imul
popf
sti
loope
sub
jl
jne
and
push
lahf
and
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
pop
loopne
add
mov
jb
and
stos
xchg
int
imulb
cmp
or
insl
inc
and
jno
pop
dec
push
stos
shll
xchg
outsb
fs
push
stos
testb
into
das
cmp
xor
push
fdivrp
xchg
or
sub
shr
fimuls
sub
je
push
mov
sbb
xor
pop
sub
xor
scas
push
cmc
xchg
incl
scas
cmp
xchg
add
jl
insl
cld
mov
push
aad
mov
xor
or
mov
dec
ss
xchg
inc
loop
jns
int3
xchg
push
aam
sub
dec
pop
dec
mov
adc
cmp
lds
cli
jnp
addr16
push
or
xor
pushf
pop
sbb
cmpsb
popa
dec
dec
fidivl
or
popl
jno
js
imul
in
std
push
mov
push
loop
jmp
mov
dec
jle
mov
dec
loop
xchg
sub
loop
out
xor
dec
mov
aaa
or
adc
jl
xor
adc
sti
fiadds
mov
sarb
lret
sbb
jnp
inc
push
pop
fstp
dec
xchg
inc
ljmp
out
loopne
push
mov
and
adc
inc
into
aam
aad
aas
popf
pop
sub
sti
xchg
cltd
push
cmc
int
cwtl
cmp
lret
stos
mov
push
pop
data16
ret
aaa
in
dec
fwait
es
or
mov
xchg
arpl
arpl
leave
int3
pusha
mov
xor
cs
and
sti
add
cltd
fdivl
xor
imul
pop
add
pushf
aam
mov
jbe
jmp
jnp
stc
or
lcall
push
and
sbb
mov
mov
sub
and
push
call
and
pop
test
test
sbb
insb
mov
xchg
jg
push
insb
mov
inc
jecxz
lock
clc
or
popf
pop
xlat
dec
out
inc
xchg
push
sbb
inc
fidivl
add
pop
insl
cmp
or
loop
inc
push
inc
push
sub
and
cmp
and
testl
int3
mov
sti
push
test
stc
pop
imul
cld
push
ret
mov
xchg
test
mov
inc
sbb
push
lods
hlt
mov
stc
les
mov
shrl
or
lret
dec
scas
fnstenv
adc
jne
fisubrs
push
stc
and
add
rclb
push
mov
adc
mov
negl
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movsb
fists
jg
jg
mov
mov
test
cmp
cmp
je
fadds
pop
jmp
xor
pusha
arpl
or
int3
repz
xor
addr16
btc
mov
pop
test
insb
repnz
push
sub
mov
jno
or
test
subb
add
dec
or
pop
in
stos
cmp
mov
aas
jns
or
int
cmp
fcomp
push
add
rorl
in
test
mov
push
call
in
cmpsl
orl
scas
add
in
outsb
pop
test
mov
add
out
cmp
xor
fsubrl
xchg
cmpsb
outsl
subb
jg
adc
jb
mov
pop
inc
ja
movsb
xchg
mov
push
fwait
dec
push
and
dec
inc
outsb
xor
sbbb
mov
test
jle
adc
je
mov
es
and
or
out
jne
daa
cmc
xor
outsb
outsl
popf
cmpsl
adc
dec
add
arpl
mov
inc
xor
mov
sbb
sahf
insl
stos
push
push
ret
mov
fimuls
in
mov
push
adc
in
sti
xor
jmp
cmp
dec
bound
jne
sahf
add
std
and
repnz
sub
sbb
imul
outsl
sub
jmp
push
gs
stc
jbe
cltd
ss
daa
out
and
pop
dec
inc
pop
inc
ljmp
add
stos
ror
mov
lret
int
jo
enter
jge
movsb
fistpll
movsb
je
mov
cs
into
jns
scas
mov
mov
sarb
jp
sarb
pop
jle
imul
xchg
fimuls
jmp
sbb
cmp
sti
adc
xchg
jnp
mov
mov
ds
pop
pop
xor
lea
rorb
cwtl
lds
aad
jno
add
cmpsb
addr16
dec
mov
push
and
push
rcll
push
nop
xchg
sbb
lock
lret
leave
jb
sub
mov
pushf
and
push
xchg
movsb
cmpsb
ds
stos
inc
loopne
or
push
test
cltd
mov
inc
xor
and
and
icebp
xorl
sti
int3
mov
adc
mov
inc
stos
popf
mov
pushf
jmp
jmp
loope,pn
movaps
data16
xchg
cmpsl
fs
push
lea
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
jb
loop
mov
jle
jo
pushl
popf
mov
jp
or
iret
jo,pn
call
xchg
and
xor
test
mov
inc
mov
sub
sbb
ret
hlt
sub
jecxz
jbe
packuswb
or
in
outsb
clc
enter
leave
cmp
insl
fistpll
aas
fs
adcl
jno
repnz
out
mov
cmpl
sbb
mov
ja
add
std
cmc
jb
out
mov
sub
xchg
jne
mov
imul
movsl
push
mov
aad
seto
nop
cmpsb
movsl
inc
ja
aad
je
repnz
sbb
pop
addr16
adc
push
or
mov
loopne
push
cmpsb
pop
and
xchg
or
pop
dec
jmp
pop
xchg
mov
push
sub
inc
lret
or
mov
pop
fimull
mov
push
hlt
shll
jg
jne
jmp
aaa
adc
add
testb
cmp
xlat
dec
cmpsb
cmpsl
mov
mov
shll
stos
jge
repz
test
sbb
shrd
lea
sarl
mov
xchg
lock
xchg
pusha
sahf
cmp
inc
out
aam
adc
in
dec
sbb
mov
out
js
xor
int3
dec
adc
scas
jns
jae
jl
push
leave
mov
dec
sbb
out
mov
shl
mov
in
cwtl
std
aad
mov
sbb
cld
mov
mov
jle
jno
loopne
cmp
adc
loope
add
in
add
or
push
icebp
movsb
inc
sbb
sub
push
test
jle
add
push
cmpsb
stc
out
jmp
scas
pop
mov
ret
push
add
adc
jl
jbe
and
fcos
cmc
push
sbb
lds
jecxz
inc
and
movsl
stos
or
mov
mov
inc
cmp
adc
addl
add
arpl
pop
sbb
xchg
jp
lds
lock
push
mov
dec
leave
pop
mov
loopne
popa
mov
aaa
jae
iret
in
int
mov
ror
push
repnz
lret
add
int
sbb
out
xchg
out
clc
outsl
cmpl
adc
aad
pop
fisubl
js
inc
ret
leave
popf
repnz
stc
xor
cli
ss
mov
lahf
testb
cld
test
xor
cmpsl
or
cwtl
aas
shlb
lcall
dec
ljmp
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
jmp
or
mov
pop
mov
mov
lods
out
jecxz
inc
lods
ja
inc
jno
fcompp
mov
stos
pop
mov
or
xchg
out
push
fwait
pop
cmp
aaa
popa
data16
jae
sub
lcall
clc
xchg
movsl
add
push
imul
jle
mov
jle
lcall
mul
mov
inc
test
mov
dec
adc
and
daa
outsb
fs
fsubrl
hlt
jbe
xchg
adc
les
into
aam
lods
leave
lea
dec
les
in
jb
pusha
fwait
out
loop
or
jb
mov
jp
fsqrt
out
es
sar
outsb
rorl
es
inc
sub
mov
aam
lds
xchg
xor
sbb
lock
das
adc
and
dec
enter
test
sbb
rorb
int3
jnp
addl
or
scas
add
cmp
mov
call
inc
adc
add
out
hlt
out
mov
sub
fnstenv
mov
lret
outsb
jge
mov
xor
inc
ja
push
xchg
test
cmpsb
jo
leave
add
sbb
inc
jo
subb
mov
mov
push
jo
sbb
lret
dec
adc
fdivrl
ds
dec
pop
dec
sub
pop
sbb
les
push
or
inc
cmp
sbb
jo
int3
xchg
hlt
mov
lods
movsl
les
push
leave
out
or
cld
jae
or
pop
ret
sub
and
fnsave
xchg
or
and
sbb
xchg
mov
loope
add
xor
mov
scas
dec
js
in
cltd
shrl
cmp
ds
fnsave
sbb
js
pop
and
in
dec
lds
add
mov
cmp
pop
sub
enter
adc
cmp
cmp
into
mov
xchg
sub
fs
test
cld
xlat
push
pop
repnz
out
shll
cwtl
in
cld
out
rcrb
xchg
shlb
add
stc
out
fcoms
psubsb
out
mov
xchg
fdivrl
int3
fcoml
pop
inc
sahf
repnz
fwait
inc
outsl
ret
inc
sub
aad
sbb
xor
sbb
fidivrs
aaa
or
lods
pusha
hlt
loopne
leave
pop
fs
sub
rcrl
or
or
dec
test
add
mov
sti
push
stos
push
clc
mov
cmp
inc
out
cli
fnstcw
inc
test
out
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
add
lret
jo
jle
jo
insb
pop
imul
push
pop
pop
adc
test
xchg
arpl
inc
out
stos
das
xor
sub
pop
dec
out
stos
sub
ror
cmp
jg
push
pop
push
push
inc
xchg
das
jae
call
cmc
dec
bound
cmp
bound
lods
bound
jne
test
popa
insl
cmpsl
cmp
mov
hlt
sbb
jg
pop
dec
jo
imulb
cmp
dec
gs
jmp
xor
mov
xor
imul
mov
or
jnp
fnstenv
inc
lret
pusha
out
sub
ret
cmp
adc
shl
and
iret
and
fildl
mov
popf
inc
movl
aas
pop
cmpsb
lods
aam
inc
sub
pop
ljmp
lcall
ud1
pop
into
dec
popf
fimuls
pop
hlt
jnp
mov
push
int3
jbe
cmpl
leave
mov
xchg
rolb
ret
mov
add
push
dec
sub
mov
xor
jge
adc
push
mov
dec
adc
mov
flds
mov
add
ret
les
fsubrs
dec
mov
xor
xchg
xor
ljmp
loopne
sub
mov
mov
loop
push
pop
push
push
sahf
push
mov
int3
fisttps
inc
cltd
or
dec
sub
xchg
xchg
decb
xor
dec
dec
mov
jo
pop
lret
cmpsb
sarb
sbb
push
aam
enter
bound
scas
test
pop
push
push
sbb
popf
scas
cmp
aas
mov
sbb
clc
sti
sbb
popa
jmp
mul
inc
adc
add
jmp
data16
loop
shlb
les
push
gs
push
cmp
outsb
dec
cmp
mov
jae
adc
gs
adc
push
gs
inc
inc
mov
popa
imul
loop
push
push
repnz
icebp
ja
inc
popf
mov
idivl
sub
or
pushf
xchg
in
lret
in
adc
xor
leave
imul
je
int
cli
xchg
jecxz
fstpt
mov
ss
and
rcr
or
in
int3
fcompl
nop
and
inc
adc
sbb
fimull
call
aam
inc
or
fadd
mov
fcomp
and
jle
mov
subl
sub
sbb
lret
xchg
jg
loope
push
popf
mov
mov
pushf
jb
add
enter
icebp
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
loopne
adc
jo
jle
jo
cmp
jle
jno
jae
xor
push
jb,pn
push
pop
sbb
jp
lods
repz
mov
aam
cmp
add
insb
call
jge
push
or
test
outsb
mov
push
decb
xchg
fsubrl
pushl
fs
loopne
inc
shll
popf
dec
xchg
xchg
pusha
es
push
pop
xor
enter
test
test
adc
fimuls
and
mov
xchg
jg
xchg
mov
mov
mov
adc
adc
mov
mov
imul
jb
push
fsubl
lock
push
pop
pop
lods
repnz
pop
pop
mov
shrl
fwait
sbb
inc
or
loopne
bound
mov
xchg
sbb
or
jp
and
and
jb
enter
pop
imul
fidivrl
mov
dec
fisubs
jle
gs
and
shrb
out
repnz
sub
cmp
shlb
xchg
sub
sub
pop
xor
repnz
or
loope
push
out
subl
lods
jle
pop
dec
data16
inc
sbb
outsl
sbb
aas
sbb
mov
sti
mov
leave
push
mov
lahf
fs
fdivl
mov
jmp
stos
cmp
cmp
pop
pop
xchg
push
push
testl
pop
rolb
adcb
lock
inc
xchg
mov
shl
fldenv
int3
push
jns
dec
add
inc
dec
imul
xor
cmp
mov
pusha
mov
sbb
dec
enter
cmp
pop
jmp
push
or
sbb
sbb
stos
divl
jae
adc
add
fbld
out
dec
test
adc
adc
aam
add
dec
test
sar
pop
jae
out
mov
test
cmpsb
cwtl
clc
icebp
shr
test
shlb
sub
or
rcr
test
lods
push
shr
icebp
ja
xor
adc
rcrb
sub
je
push
ja
jo
mov
xor
push
leave
shr
cmpsl
loop
pushf
psubsw
fs
out
xorl
adc
fisttpll
test
jbe
pop
mov
mov
sar
mov
mov
ja
or
sub
mov
inc
fildl
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
sub
aad
adc
mov
mov
inc
xchg
jno
inc
push
jge
outsl
lret
insb
xchg
pusha
xlat
sbb
mov
test
inc
test
dec
adc
lret
mov
cltd
fstps
shlb
ret
fsubl
inc
xchg
lock
rolb
jle
loopne
jp
inc
and
cli
cmc
lds
pop
add
aaa
xchg
imul
xchg
addr16
push
mov
loop
ss
ljmp
jmp
sub
sbb
outsb
not
sub
fcompl
adc
and
push
mov
xchg
xchg
or
xor
call
into
jne
inc
sbb
out
test
pushf
jmp
jo
test
xor
fisubs
sub
pop
in
sub
popa
adc
iret
mov
mov
pop
or
xchg
cmp
in
sar
sub
mov
push
add
icebp
add
fs
fwait
data16
mov
sbb
imul
aaa
shll
jae
popf
push
jmp
out
rcl
pushf
mov
sbb
adcl
adc
dec
and
sbb
aaa
add
bound
and
sbb
out
cmpsb
arpl
mov
imul
nop
sub
and
mov
dec
aam
mov
arpl
push
add
sar
cmc
divb
xchg
sub
pop
jge
push
imul
cmpsl
scas
mov
cld
xchg
pop
inc
push
dec
pop
lea
dec
fistpl
cmp
subb
jmp
in
push
fsubp
mov
insb
insl
jmp
xor
jo
push
mov
test
adc
sub
jp
add
add
pop
enter
or
daa
test
adc
lcall
cmp
iret
or
xor
add
cltd
and
jle
xor
fwait
sti
push
shll
xchg
add
cmp
push
in
lret
pause
call
ljmp
nop
test
and
aaa
out
push
xchg
gs
ds
xchg
popf
shll
dec
and
inc
mov
xlat
pop
add
pop
mov
lods
jae
sub
jnp
cmp
lcall
gs
rclb
fucomi
stos
outsb
lds
push
andb
rorb
shlb
stos
sahf
and
xor
xchg
lret
subl
cmpsl
pop
popa
je
push
pop
xchg
add
push
dec
xchg
jmp
cmc
std
fs
jno
mov
cmp
addr16
movsl
pop
jg
mov
lock
mov
enter
adc
xor
mov
jbe
cmpsl
fs
mov
test
shll
iret
cmp
or
loop
ret
mov
cli
cmp
mov
arpl
jecxz
xor
scas
sarl
fwait
push
jno
push
mov
imul
leave
jg
pop
test
jg
jns
mov
fisubrl
xlat
and
sahf
jecxz
jae
push
sahf
mov
repz
inc
xchg
fwait
sub
lds
jne
fstl
jb
push
lods
je
ds
cmp
inc
adc
jne
or
data16
cli
sbb
mov
inc
xchg
flds
ljmp
mov
dec
mov
cltd
lahf
adc
sub
and
cmp
push
cmc
cmp
mov
stos
xchg
add
mov
clc
xchg
fimuls
push
push
and
push
inc
sahf
andl
cmc
fs
adc
xlat
sahf
shl
or
and
loop
test
jge
stos
mov
cmp
and
fildl
ficompl
push
and
sub
pop
pop
jo
cltd
ljmp
sbb
inc
dec
in
cmpsl
adc
fsubl
hlt
jecxz
jb
movsl
add
push
insb
xlat
sbb
lea
push
js
enter
push
int
and
mov
int
ja
subl
jb
and
addr16
add
xor
nop
push
fcomps
and
sbb
adc
fisttpl
je
pop
enter
pushf
ret
test
push
das
lods
or
rcrb
int
mov
rcl
enter
dec
loope
pop
add
rcrl
scas
sbb
imul
mov
dec
popa
es
flds
mov
dec
movsb
mov
jae
stc
jmp
vpcomq
pop
xchg
mov
xor
fisttpll
push
stos
mov
push
movsb
pop
or
mov
fstpt
arpl
pop
dec
out
out
aaa
mov
push
inc
dec
jae
lar
call
xchg
jl
pop
mov
xor
lods
and
insl
pop
or
add
icebp
fists
or
push
or
or
inc
mov
pop
nop
mov
and
ljmp
roll
sbb
xchg
lea
outsl
mov
and
adc
and
jbe
test
sub
int
xor
dec
int
stos
and
xchg
imul
nop
sbbb
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
or
sbb
jo
jle
jo
xor
je
push
mov
insb
mov
mov
jno
std
sbb
iret
in
pusha
in
xchg
cmp
fwait
inc
dec
xlat
nop
pop
in
and
into
push
aam
jle
and
dec
je
fwait
and
adc
cltd
lcall
adc
repz
jp
rorb
shrl
cmp
ss
dec
hlt
jp
mov
out
cmpsl
hlt
test
push
or
hlt
arpl
femms
push
xor
in
xorl
add
fwait
mov
out
and
dec
cmpsb
mov
daa
sbb
mov
add
sub
testb
adc
inc
push
test
adc
loop
test
sbb
dec
ds
cli
pop
or
test
dec
mov
mov
inc
arpl
lds
fmul
mov
or
push
scas
repz
fwait
add
cmpsl
cld
inc
sub
iret
cmc
cmp
movl
out
cmp
clc
dec
sbb
mov
cwtl
cwtl
jecxz
in
icebp
cld
stc
push
nop
adc
mov
pop
imul
xor
stos
adc
movsl
neg
sahf
inc
push
pop
nop
push
pop
pushf
shr
test
pop
or
test
xchg
imul
mov
cmp
cs
push
scas
sub
lret
int3
aaa
mov
mov
and
bound
lret
sbb
es
ret
sub
je
add
fildll
cmp
stos
adc
lods
sarl
jo
jbe
sbb
nop
cmp
or
out
mov
mov
jecxz
mov
adc
mov
faddp
pusha
pop
inc
add
mov
add
cmp
loop
xchg
add
sbb
sub
push
aam
in
lahf
repnz
insl
repz
fadds
sbb
xlat
sahf
mov
and
inc
mov
mov
outsb
mov
push
cltd
jecxz
cmc
orb
rcrb
or
jbe
xor
add
jl
imul
add
mov
jb,pt
lods
test
rcrb
mov
outsl
fwait
cwtl
cmp
mov
pop
ja
push
cmp
subl
aad
mov
xor
fdivs
movsl
cltd
dec
or
cmp
push
pop
mov
lods
leave
xchg
idivl
inc
or
and
sub
mov
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
cli
dec
inc
iret
aaa
sbb
mov
es
js
xchg
xor
aad
stc
mov
mov
and
lret
and
or
add
pop
fwait
cmp
jb
mov
pop
mov
std
and
mov
fldl
push
jo
lret
push
ds
lods
push
adc
leave
shl
rorb
cld
pop
mov
or
add
nop
jge
mov
dec
sub
fidivrl
scas
loop
mov
lock
sub
js
pusha
testl
pusha
mov
aam
xor
sbb
jb
popa
fildl
add
in
cmp
movsb
aad
stos
pop
outsl
shr
xchg
in
decb
movl
ja
fwait
lds
mov
push
das
pop
sarl
adc
aas
inc
mov
imul
mov
out
push
in
jne
ds
cmp
mov
icebp
aaa
fs
mov
lahf
test
loope
mov
out
fstpt
roll
sbb
mov
cmp
jbe
out
out
mov
call
loopne
fdiv
nop
divb
xorl
int3
ja
adc
dec
adc
adc
mov
je
aad
and
in
push
push
cmp
add
int3
mov
popf
push
jmp
ss
sahf
sbb
stos
loope
mov
imul
pop
mov
inc
or
cmp
inc
add
outsl
cli
adc
int3
pusha
jp
xchg
imul
add
lret
push
cltd
mov
xchg
cmp
dec
scas
sbb
iret
cmc
cmpl
mov
or
pop
pop
ljmp
enter
cwtl
mov
add
nop
adc
sub
or
or
movsb
fdivr
rcrl
mov
mov
jecxz
lret
fbld
out
sub
fsts
js
icebp
adc
outsl
repnz
xchg
sbb
dec
test
push
rclb
leave
pop
xor
aad
pop
pop
push
add
loop
inc
adc
lds
adc
mov
icebp
inc
xchg
loope
push
js
push
cmpsl
jmp
stc
jl
inc
loopne
adc
or
in
shlb
in
mov
push
push
push
sbb
jmp
push
repnz
jg
jg
inc
push
sub
and
dec
or
inc
push
rol
inc
clts
fcmovnbe
ficoml
jl
ret
mov
adc
mov
movsb
mov
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
mov
es
mov
push
mov
push
pop
push
lcall
dec
jp
icebp
inc
out
in
aas
xchg
fnstsw
push
add
dec
movsl
repz
cmp
lock
clc
lds
jge
icebp
add
iret
jge
mov
ljmp
jo
xchg
mov
stos
xor
fptan
sahf
jns
clc
cmp
pop
or
xor
out
push
xorl
and
js
scas
sub
ja
or
jg
xchg
es
push
pop
loope
sbb
ja
or
pushf
je
jl
and
adc
outsb
addr16
into
mov
xchg
jnp
call
jne
pusha
int
lods
imul
in
pop
xor
push
mov
mov
dec
cltd
aad
stos
push
enter
fs
sub
and
mov
sbb
pop
cld
adc
or
ja
sub
sarb
cli
lcall
jb
in
add
mov
push
xor
cmp
sub
inc
add
xchg
popf
das
movsb
jno
lret
mov
fsubrs
sbb
outsb
xchg
xor
jno
dec
iret
ret
xlat
leave
or
push
das
xchg
scas
scas
idivb
mov
push
lods
mov
push
jbe
movsl
icebp
stos
mov
cltd
test
push
or
mov
fstpt
pop
mov
inc
dec
repnz
cmpsl
pop
pop
repnz
mov
xor
scas
adc
push
add
imul
fcmovbe
cmpsb
cmp
mov
inc
jmp
adc
movb
iret
into
sub
gs
mov
in
push
cmpl
mov
mov
add
fstpl
lcall
push
push
adc
mov
adcb
jecxz
lcall
dec
lcall
jbe
repz
hlt
enter
addr16
inc
shrl
inc
xor
xchg
mov
imul
je
into
movl
push
cltd
popf
pop
dec
dec
cmp
inc
sbb
add
popl
ficoml
push
mov
dec
adc
cld
inc
stos
inc
push
mov
adc
add
jnp
std
or
jne
or
sbb
into
cs
fnstsw
push
outsl
mov
mov
out
push
roll
cmp
test
sbb
pop
push
sub
or
sub
js
movsb
dec
hlt
loop
xchg
mov
fistps
and
movsl
or
adcl
sbb
cmp
bound
adc
scas
in
or
mov
inc
mov
fwait
icebp
or
push
cmpsl
xchg
inc
imulb
xorb
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
fisttps
and
jo
jle
jo
shlb
xor
jp
in
dec
add
iret
icebp
sbb
mov
mov
jp
cwtl
mov
and
xchg
pusha
or
jo
fsubl
xor
mov
mov
es
lret
pop
dec
pop
adc
ss
cmp
js
in
cltd
test
insl
and
mov
enter
or
inc
mov
leave
icebp
cs
add
xchg
es
cli
fisubrs
cmp
into
jmp
dec
lahf
mov
mov
into
in
jne
sub
sbb
jne
pop
test
aaa
mov
sub
adc
push
outsl
cmp
int3
mull
es
adc
jge
add
sub
jl
jnp
or
dec
int3
ljmp
pop
insl
ja
ret
jge
lahf
cmpsl
jmp
inc
inc
in
out
movsb
push
dec
cmpsl
mov
push
pushf
mov
mov
lea
outsl
fcoml
std
std
scas
arpl
daa
xchg
inc
jae
jbe
xor
jle
test
mov
add
lock
bnd
lods
or
inc
scas
or
or
stos
popl
call
jle
in
jmp
fcmovnbe
jbe
pop
imul
ljmp
pop
jo
mov
dec
xchg
sub
fdivr
push
mov
mov
lods
pop
out
ret
mov
jo
jl
test
cmp
mov
mov
gs
fimuls
lock
or
mov
cmp
dec
lods
inc
cmp
adc
arpl
js
mov
pusha
out
mov
loope
and
xor
pop
inc
push
push
imul
fwait
adc
aad
int
pop
sbb
test
aad
test
pop
pop
jae
push
mov
or
or
sbb
cld
or
mov
sbb
negl
mulb
iret
xchg
push
pop
pushf
imul
or
push
inc
lods
xchg
pop
in
into
mov
mov
jge
xchg
leave
repnz
js
aad
pop
fdivrl
mov
xor
mov
ret
pop
in
inc
cmp
mov
mov
mov
xchg
sub
dec
and
xor
or
int3
mov
iret
adcb
fisubrs
jb
jbe
xor
mov
jle
mov
in
push
pop
push
add
push
arpl
data16
mov
mov
pusha
lahf
adc
push
enter
and
push
scas
outsl
out
add
cs
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
