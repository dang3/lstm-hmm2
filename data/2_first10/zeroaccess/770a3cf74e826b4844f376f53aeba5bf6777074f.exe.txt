push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
mov
jle
jle
mov
jle
into
xlat
cmp
pop
add
shufps
bswap
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
dec
adc
imul
inc
shll
ds
popa
and
dec
mov
push
in
test
fidivs
xchg
aas
inc
pop
mov
into
mov
push
jmp
shl
in
sub
jmp
mov
mov
xchg
xlat
lret
pop
cmp
cmp
or
shll
jbe
xor
or
mov
jbe
mov
push
loopne
dec
inc
xchg
or
imul
xchg
je
mov
movsb
sub
in
mov
aaa
jmp
add
test
arpl
push
mov
movsl
insb
cwtl
dec
xchg
mov
or
or
sub
xchg
inc
adc
insb
add
inc
mov
sub
cmp
xor
cmpsb
mov
in
or
inc
inc
xor
mov
lcall
mov
cmp
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
pop
icebp
or
popl
ds
nop
frstor
mov
mov
ret
inc
mov
addl
mov
test
pop
enter
jecxz
and
lds
add
fcomi
es
int
mov
or
mov
and
dec
inc
lahf
adc
adc
lods
pop
mov
fldcw
jle
movb
scas
dec
xchg
inc
ja
jne
into
xor
jmp
lods
dec
test
mov
xor
pop
mov
stos
push
flds
sub
fwait
lods
mov
fcomps
test
pop
push
imul
dec
mov
and
cmp
jns
adc
stc
fnstenv
or
jle
cwtl
roll
addl
cmpsl
or
jecxz
ds
jp
sbb
je
or
sub
or
xchg
cmp
int3
popf
add
adc
daa
out
pop
and
dec
or
mov
mov
add
sbb
in
mov
xchg
andl
inc
lds
fcom
fmul
movl
outsb
adc
sbb
mov
add
jl
enter
pop
mov
js
lods
xorb
xchg
lods
sbb
mov
inc
jnp
arpl
subl
mov
push
std
dec
testb
xchg
jbe
push
adc
loopne
ret
sub
or
fs
out
pop
loope
iret
push
xchg
std
mov
push
pop
lret
inc
ja
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
xor
jle
mov
jle
pop
mov
lret
mov
roll
pop
jno
xchg
and
pop
dec
dec
mov
addb
or
sbb
dec
adc
movsb
push
int3
sub
sub
int3
test
push
pop
mov
fnstcw
mov
sahf
nop
xchg
jbe
fcmovbe
je
sahf
cmp
xor
stc
mov
push
push
add
adc
jns
xor
mov
sbb
jecxz
insb
adc
inc
mov
jo
sbb
jg
mov
cmp
lea
inc
mov
cmovno
shrl
int
add
pusha
mov
jae
and
inc
movsl
xchg
shlb
inc
jle
inc
rorl
cmp
sub
xchg
sub
push
jl
dec
jns
xor
jne
out
out
imul
addr16
leave
mov
mov
xchg
cmpsl
repz
aaa
lcall
jmp
in
in
push
mov
xor
mov
xor
out
push
in
sbb
icebp
cwtl
pop
cmpsl
enter
mov
imulb
adcl
in
clc
mov
leave
int
sti
imul
mov
dec
ljmp
aam
into
or
fcompl
inc
lods
add
sub
mov
adc
sbb
xor
das
sub
dec
push
mov
test
mov
jnp
adc
push
popa
dec
xrelease
pop
sbb
cltd
dec
insb
xchg
and
pop
bound
sub
xor
ficomps
lcall
js
mov
fildll
and
push
jne
mov
or
jmp
or
popa
sbb
jnp
jle
jg
jle
xor
mov
cltd
pop
sub
jne
cmc
and
or
xchg
dec
out
push
xchg
sub
xor
pop
lds
ss
shlb
sbbb
push
shl
mov
mov
push
cmc
cmp
outsb
shlb
add
cs
adc
pop
mov
push
mov
mov
inc
and
mov
pop
xor
fdivrl
stos
inc
jmp
mov
stos
mov
inc
jno
insb
sub
std
dec
xchg
lods
out
dec
int
cli
xchg
fisttpll
pop
fdivrl
enter
mov
cmp
pop
je
xorl
aas
shlb
xchg
stos
les
adc
enter
sbb
mov
and
lret
fmull
sti
scas
cmp
negb
out
xor
adc
in
into
fs
in
aaa
icebp
dec
pop
sub
mov
sbb
sub
mov
sbb
pop
test
mov
ds
or
jne
in
insb
mov
xorb
inc
xlat
jne
xor
pop
repz
hlt
push
mov
push
jmp
add
inc
cld
insb
and
mov
lods
scas
push
mov
adc
cmc
wrmsr
and
jge
cmp
cmp
inc
pushf
out
lcall
daa
jmp
inc
mov
test
sbb
test
inc
inc
push
cmc
jp
jns
push
add
mov
sub
jmp
ljmp
movsb
dec
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
jnp
push
add
jle
jg
jle
push
pop
lcall
mov
mov
and
dec
pop
mov
fs
push
leave
jle
sbb
jle,pn
pusha
lods
or
cs
xchg
imul
fiadds
cltd
inc
jnp
test
pop
sub
jno
sbb
inc
mov
test
insb
fbstp
mov
sbb
xchg
icebp
repz
pop
shll
idivb
pop
cmc
push
andb
pop
cmp
int3
inc
fisubl
adc
pop
leave
frstpm(287
sbb
fistps
fwait
test
sbb
pop
sarb
push
int
rcrl
or
sbb
add
mov
dec
loopne
sub
jae
std
aas
pushf
adc
xchg
mov
loope
fs
ljmp
cld
sub
cltd
outsl
xor
sbb
jp
popf
into
testl
inc
sbb
in
cmpsb
adc
imul
stc
mov
ja
push
push
test
dec
bound
xor
dec
fidivrs
dec
int3
xchg
hlt
or
inc
icebp
arpl
into
xchg
mov
mov
loope
or
xor
addr16
insl
push
jl
or
mov
inc
repnz
add
dec
jg
out
mov
jb
cmp
sti
jecxz
insl
hlt
out
data16
pop
pop
sbb
push
rcr
or
or
sbb
test
pop
idivb
and
test
into
imul
inc
js
and
outsl
add
xchg
push
jo
rclb
sti
dec
in
add
rorb
add
cld
movzwl
add
jmp
push
mov
test
add
fimull
jg
jle
jp
mov
dec
gs
shl
inc
add
in
mov
ja
lahf
rclb
daa
mov
imull
mov
test
jno
or
in
jo
xor
sub
sub
movsl
jge
xchg
mov
sub
dec
je
jo
mov
xchg
das
rclb
aad
int
in
pop
fwait
mov
ds
inc
iret
aas
int
lds
pushf
call
dec
pop
mov
repnz
adc
das
cmp
mov
out
adc
xlat
and
sub
bound
shrb
stos
pop
and
push
mov
xchg
pushf
xchg
out
int3
sbb
shrl
jae
sbb
test
test
int3
pusha
mov
pop
inc
flds
call
or
jp
add
loope
inc
movsb
xor
aam
int
adc
lret
out
sub
dec
movsb
push
mov
xor
test
inc
stos
test
shrl
ljmp
lret
pop
or
cmp
ljmp
push
fsubrs
popf
cmp
push
xchg
adc
call
push
xchg
cmpsl
push
xor
enter
popf
fimuls
dec
sbb
push
add
fucomp
dec
sbb
add
add
call
dec
and
cld
pop
in
adc
inc
push
testl
adc
add
imul
test
xchg
adc
push
scas
pop
stos
in
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
cs
jmp
add
mov
jle
inc
adc
xor
pop
rorb
mov
leave
mov
pop
mov
ss
out
xchg
inc
test
insb
dec
testb
cltd
xchg
pop
mov
dec
pop
lcall
mov
cld
xor
out
test
daa
enter
xlat
sbb
dec
push
and
mov
push
mov
inc
mov
mov
out
and
out
sarl
fdivrs
cmp
sbb
push
enter
insl
adc
lcall
lret
jmp
sbb
xchg
xor
popf
sbb
add
dec
sbb
pop
adc
pop
mov
fnstcw
imul
iret
out
dec
pop
popa
in
imul
xor
jecxz
or
pushf
repnz
cmp
xchg
sub
xor
dec
adc
mov
in
pop
cmp
stos
and
sbb
bnd
mov
std
leave
shrb
adc
jmp
jbe
mov
lahf
and
cmp
jmp
les
outsl
xor
push
pop
adc
xor
sbb
xchg
jns
mov
loope
sbb
pushf
mov
div
mov
js
mov
filds
cli
inc
ss
ret
into
fsubrl
push
push
xor
lret
test
sub
pop
fiadds
xor
enter
testl
adc
lret
out
mov
mov
aaa
rcll
adc
mov
pop
mov
push
dec
sarb
jmp
mov
in
nop
jl
scas
mov
popf
fildl
pop
jbe
mov
push
mov
and
mov
add
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
mov
gs
mov
or
lea
mov
gs
fiadds
pushf
mov
mov
into
into
iret
push
mov
ret
jnp
and
adc
rcr
mov
push
mov
jl
std
cmp
call
dec
imul
int3
dec
push
push
xchg
and
add
xor
pusha
add
push
addr16
add
xchg
gs
mov
pop
movsl
test
imul
sub
mov
xchg
or
mov
int
push
cmp
mov
add
fildll
xchg
aas
stos
orb
int3
in
lret
mov
icebp
in
popf
in
xchg
xor
mov
cs
outsb
sub
jb
notb
out
sbb
ja
sbb
xor
shl
add
cwtl
pop
mov
pop
fmull
loope
aam
outsl
push
xor
out
movsl
movsl
cmp
xchg
shll
xchg
fcoms
pop
add
cwtl
mov
insl
push
pop
mov
out
shlb
inc
mov
lret
mov
clc
cmp
push
int
std
push
js
push
jge
cmp
out
stos
lcall
adc
adc
jo
push
int
stc
call
and
xor
push
sub
and
sbb
dec
xor
aaa
mov
inc
and
cs
xor
dec
or
cmp
sbb
lahf
lret
dec
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
jle
jmp
mov
jle
sbb
bound
push
sub
sarb
adc
cmp
jbe
cmpsb
cmp
cld
push
dec
and
mov
xorb
jmp
fs
inc
arpl
les
orb
jne
loope
push
pop
push
mov
push
cmpsl
xor
fs
push
xor
lock
test
dec
adc
cmp
ja
pop
cmp
in
and
xlat
movsb
int
jmp
cs
mov
mov
insb
jno
dec
loope
xchg
cwtl
and
in
add
sub
cltd
leave
and
lcall
push
aad
rclb
mov
lock
imul
pop
push
addl
mov
push
and
lds
adc
sub
push
addb
andl
in
adc
popf
sti
fbstp
push
push
data16
lock
xor
mov
or
or
out
call
jmp
xchg
jnp
cmc
add
xchg
jmp
xor
out
leave
loope
fsubs
pop
xlat
mov
rorb
insl
dec
mov
pop
inc
jo
jbe
xorb
add
inc
out
mov
mov
adc
mov
mov
fwait
jmp
cmp
fisttpl
nop
loopne
rorl
dec
pushf
sub
aas
fwait
cmp
sub
lock
shlb
je
loopne
in
stos
xchg
jmp
rcrl
loop
jno
dec
in
lcall
push
or
mov
mov
adc
jl
push
sub
call
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
xchg
cmpsl
sbb
and
dec
xor
and
dec
xchg
das
cmpsb
inc
inc
add
cmp
cmp
add
loope
hlt
mov
imul
xor
fdiv
and
xchg
mov
imul
arpl
fstps
cwtl
jae
stos
sbb
enter
test
cmp
fs
mov
rcrb
pushf
fidivrs
loopne
jnp
mov
sbb
jns
inc
mov
sub
push
aas
out
fidivrs
add
sbb
rolb
mov
aam
repz
ss
fcom
repnz
xchg
sbb
pop
stos
sub
call
or
sbb
std
jnp
popf
or
lea
pop
faddp
test
hlt
fldcw
xor
pop
inc
addr16
stos
fiaddl
mov
insl
sub
pop
loope
dec
add
shlb
stc
or
mov
xchg
jecxz
or
sahf
xor
cmp
cmp
or
push
out
cmp
imul
rcrb
pushf
inc
mov
fistl
in
and
xchg
xchg
ljmp
sbb
jo
pushw
loopew
jmp
adc
and
inc
cmp
sub
sbb
xchg
cmp
xchg
mov
jg
cmpsb
ss
dec
add
cmp
decl
jle,pn
or
dec
int3
ljmp
cld
js
push
icebp
and
and
popf
jmp
inc
push
clc
lods
adc
shlb
inc
jb
inc
lods
jg
cmpsb
mov
out
sub
adc
cmp
push
jo
dec
loopne
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
enter
movd
jg
jle
xchg
push
cmc
mov
sub
pop
or
adc
adc
nop
mov
push
xchg
fs
lret
lret
das
sbb
imul
js
xor
aaa
xor
sbb
jge
xchg
dec
ss
mov
mov
jne
push
or
mov
inc
icebp
adc
xor
bound
pop
icebp
sub
ds
sar
sbbb
adc
xchg
or
sti
sbb
scas
jmp
pusha
sbb
jo
ret
and
fnstcw
fldt
mov
xlat
orb
jnp
cmp
adc
jecxz
aas
xorl
test
push
jae
js
inc
mov
imul
pop
dec
inc
out
push
mov
std
jp
add
cmp
mov
arpl
cmp
fimull
sbb
lods
fisttpl
cmpsl
out
icebp
enter
push
insl
mov
hlt
out
lods
pop
inc
inc
cmp
dec
jmp
loop
and
and
mov
iret
and
mov
test
add
xchg
fdivl
fsubp
mulb
cmp
cli
and
fsubs
shrl
xor
mov
dec
arpl
movsl
push
cltd
mov
call
push
lods
mov
pushf
ja
fcmovnbe
inc
imul
fadds
fwait
in
jmp
and
les
add
sbb
out
loop
call
push
xchg
iret
sub
or
je
push
je
xchg
pop
pusha
sbb
jb
js
add
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
gs
cmp
jle
push
jg
jle
sub
lret
divb
and
imul
shll
pusha
pop
pushf
repnz
lcall
loope
inc
loop
or
add
xor
and
mov
outsl
sub
jmp
mov
push
inc
lret
inc
pop
add
xchg
dec
mov
pop
je
push
aas
out
mov
xlat
ss
idivb
push
inc
add
stos
repnz
sarl
push
push
push
jns
jg
push
aaa
fdivrl
jnp
and
cmp
xchg
jge
lock
mov
sti
mov
stc
insl
cmp
mov
mov
sarb
ja
icebp
pop
aas
add
mov
sub
test
pop
adcb
dec
mov
sbb
rclb
xchg
pop
lcall
mov
cmp
mov
shl
inc
mov
sahf
mov
and
mov
into
aad
mov
int3
jo
pop
je
push
mov
mov
movb
sbb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
jno
pop
out
or
push
jg
jle
insl
push
inc
xor
pop
inc
aam
sub
push
or
mov
fucom
add
bnd
lds
and
sub
jle
sbb
add
adc
loopne
sbb
add
push
and
mov
jmp
add
push
cmp
cltd
std
mov
dec
std
jge
adc
inc
and
add
movsb
rclb
ficomps
xor
inc
cmp
or
dec
sahf
pop
dec
ja
les
daa
push
imul
stc
dec
or
mov
dec
lods
idiv
enter
jmp
inc
pop
pop
add
std
and
add
shrb
and
xor
in
std
pop
xchg
mov
filds
adc
pop
cmpsb
push
shrb
mov
jg
stc
leave
cltd
js
sbb
or
cmc
lds
fcmovu
leave
xchg
push
inc
mov
outsb
and
push
in
jge
or
out
and
and
dec
adc
cmp
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
push
data16
adc
jle
push
jg
jle
or
pop
inc
cmp
mov
in
cmp
jno
lock
mov
mov
clc
sbb
jg
lods
and
add
popf
popa
xchg
cli
dec
rcr
mov
mov
aam
inc
mov
adc
test
mov
and
dec
xchg
mov
hlt
in
pop
sub
fstpt
stc
push
push
test
sbb
adc
mov
ficoms
in
mov
mov
adc
fnstsw
cwtl
pop
es
lcall
insb
xchg
xor
adc
jmp
and
lea
sub
xlat
insl
jo
sahf
xchg
movsb
jne
push
popa
jnp
jns
add
mov
or
bnd
sub
cmp
je
mov
sub
cmp
cmp
sbb
repnz
daa
pusha
aas
pushf
mov
daa
or
jge
hlt
dec
into
dec
aad
push
and
popf
or
int
dec
clc
sahf
inc
fildl
bound
jnp
jbe
adc
loope
pop
mov
or
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
cmpsl
out
shl
sub
aaa
mov
cmpb
mov
fstp
pop
cmp
mov
cld
sahf
mov
add
add
mov
dec
xchg
das
imul
push
pushf
iret
fmull
insl
cmpsl
mov
insb
dec
outsb
sub
outsl
into
lock
pop
outsb
cmc
add
in
xchg
mul
pop
fldenv
sub
or
or
push
pop
cltd
cld
scas
adc
jl
cld
push
dec
push
outsb
lea
loope
jns
insb
outsl
sbb
mov
mov
mov
loope
mov
jbe
shll
jp
call
enter
shl
sbb
pop
mov
xor
jo
pop
xchg
les
cli
mov
iret
adc
jp
out
in
cwtl
dec
das
mov
xchg
test
pop
or
add
shl
ret
daa
xor
jns
mov
pop
cltd
stos
les
cmp
shlb
iret
mov
xor
xchg
in
lcall
nop
jmp
sbb
mov
std
stos
sub
ss
int3
js
ret
cmc
inc
jb
loopne
sub
sbb
push
adc
lods
xchg
xchg
cmp
pop
das
dec
aaa
fs
icebp
in
lds
sub
adc
rclb
in
outsb
int
add
mov
sub
scas
mov
stos
es
fiaddl
cmpsl
pop
push
rclb
outsb
push
lcall
scas
fisubrl
adc
and
mov
lods
or
push
inc
sbb
fwait
sub
fistpll
push
or
xchg
imul
and
loop
or
xchg
pop
sub
aam
loope
lea
enter
mov
xchg
mov
pusha
imul
in
jge
push
sub
in
arpl
fmul
dec
inc
ja
aad
loope
and
bound
gs
adcl
in
repz
ret
int
loop
add
lret
jns
inc
mov
addr16
sub
in
xchg
das
out
xchg
mov
jne
jp
sahf
jl
popa
push
iret
adc
iret
nop
sub
cmc
push
sub
sub
cwtl
enter
ljmp
popf
mov
js
inc
push
aam
stc
sahf
add
cmp
outsl
push
fildll
adc
lea
in
in
movsb
in
pop
rol
mov
sti
push
in
lea
or
lds
jg
cmpsb
xor
cmp
popl
adc
loope
insl
and
mov
icebp
cmp
pop
inc
xchg
push
je
mov
sub
add
test
cwtl
cmc
mov
mov
mov
push
pop
pusha
test
ljmp
imul
sub
mov
in
sub
mov
outsb
and
cmp
rol
cltd
and
xor
xchg
sbb
jl
in
push
enter
mov
cmp
pop
mov
jle
enter
mov
jg
out
test
xchg
jnp
mov
clc
adc
out
mov
out
mov
rclb
pop
sbb
shl
inc
dec
test
ss
push
mov
rcll
mov
mov
cmp
pop
rolb
inc
lahf
repz
in
push
jle
add
aaa
lcall
cwtl
rclb
jbe
xchg
test
push
pop
and
out
and
stos
mov
inc
push
jmp
add
out
push
jnp
in
movsl
imul
icebp
xor
xor
xchg
mov
or
leave
test
cmp
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
push
int3
or
jle
push
jns
jle
ret
xor
mov
add
cli
gs
push
or
sbb
divl
adc
testb
loopne
adc
insb
rcll
push
inc
in
push
jnp
sub
adc
xchg
je
xchg
cwtl
cwtl
and
jb
repnz
jecxz
mov
es
rol
pop
jle,pt
ret
mov
pop
jnp
jl
stc
pop
or
push
stos
scas
stos
mov
into
xor
sbbb
jnp
lods
lods
add
aam
mov
cmp
ret
movsb
loope
repnz
loopne
jmp
movsl
mov
fwait
add
dec
mov
incb
sbb
loop
and
pop
imul
leave
cmpsb
pop
js
in
imul
sbb
cmp
sub
mov
movsl
mov
xchg
and
pop
inc
inc
dec
pop
cmpsl
dec
fistl
repz
das
lods
out
add
mov
and
ja
jno
pop
sub
mov
mov
jl
ret
sbb
inc
cld
subb
test
mov
and
jb
cmc
pop
jb
insb
repnz
sti
xor
and
push
adcl
jns
push
adc
fsubrs
push
push
dec
and
repnz
das
scas
repnz
push
cmp
mov
rolb
int3
mov
push
repnz
mov
mov
xor
leave
or
mov
int
jle
iret
lret
inc
add
fwait
xor
dec
fisubrs
dec
jge
in
icebp
push
mov
inc
jnp
fsubrl
daa
jno
gs
xchg
cmp
stc
lea
mov
popa
ficompl
push
inc
popa
jmp
jns
fnstcw
test
ljmp
insb
mov
pop
mov
cmp
lcall
push
in
add
and
xchg
imul
add
adc
or
loop
in
inc
sbb
mov
arpl
xchg
and
dec
adc
mov
fadd
push
xchg
pop
outsb
das
xchg
es
jns
loope
scas
add
sub
fcomp
push
ja
repz
sahf
lock
loope
movsl
daa
ret
jns
xchg
mov
sahf
pop
jmp
cmp
mov
mov
add
mov
pop
clc
inc
mov
xor
movsl
fs
and
fstps
jb
dec
aas
push
pop
add
dec
jg
mov
ja
jge
sbb
mov
xchg
mov
xor
and
cmp
sahf
in
movsb
adc
mov
sub
imulb
sbb
push
cmc
jge
lret
test
shlb
shlb
inc
push
mov
xor
add
jmp
int3
scas
lds
enter
les
xchg
or
push
xlat
cwtl
or
mov
dec
mov
repz
adc
ret
xor
aas
stos
mov
cld
inc
sbb
in
push
adc
push
and
aas
or
xchg
sub
and
test
xchg
sbb
mov
fs
clc
test
ja
add
iret
iret
cmp
sub
inc
jle
popf
jo
dec
shll
jnp
dec
bound
daa
ds
test
jae
test
inc
xchg
cmp
aaa
jno
icebp
push
push
mov
in
sub
mov
xchg
mov
sub
cmp
test
sub
cmp
jno
mul
outsl
repz
pop
in
inc
js
push
jne
sbb
xor
scas
pop
pusha
stos
nop
xor
scas
jo
lods
jmp
mov
les
inc
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
adc
adc
push
jns
jle
int
jnp
mov
and
jns
popa
jae
xchg
mov
jp
jno
stos
mov
lret
fldcw
decb
mov
stos
out
mov
lret
arpl
sahf
es
and
std
fisttpl
mov
mov
aad
xorl
lret
mov
cwtl
xor
sahf
pop
stc
add
jecxz
dec
lret
mov
jp
jle
ja
sti
cmp
sub
cmp
jae
inc
sub
mov
sub
iret
loopne
sbb
inc
jo
mov
loope
shll
flds
inc
lret
imul
insb
xchg
lret
xor
xchg
xchg
in
mov
mov
cmpsl
dec
aad
inc
call
fistpl
int
mov
add
and
and
push
and
rcl
mov
sti
loope
dec
out
mov
in
xor
ja
in
sti
pusha
roll
cmp
testb
fistl
adc
push
arpl
mov
add
pop
lods
mov
add
in
lods
lcall
sti
subb
std
mov
pop
inc
imul
in
push
or
cs
inc
adc
push
mov
bound
sbb
jnp
mov
enter
out
dec
hlt
adc
cmp
mov
push
mov
mov
out
jo
or
lret
mov
xor
inc
pop
cmpl
sti
push
mov
testl
jecxz
xor
orw
shll
nop
orb
mov
cltd
sbb
xlat
int3
arpl
dec
sahf
in
int
mov
fmul
push
pop
mov
adc
xchg
test
rol
push
and
addl
leave
xor
xchg
ficoml
lret
inc
test
fsubs
in
add
push
jo
xchg
or
dec
inc
and
movsl
mov
cmp
pop
lods
dec
cmp
repz
imul
jae
add
cld
sahf
push
cmp
pop
cs
jae
add
and
adc
sbb
sbb
mov
inc
jb
xchg
mov
xchg
mov
add
movw
aaa
xor
mov
xorl
mov
outsl
mov
mov
sub
mov
out
inc
cmpsl
js
loopne
cmp
add
dec
mov
mov
fnstenv
adc
dec
movsl
lock
jo
loopne
js
fstpl
aas
ss
jbe
orb
ret
lahf
pop
out
lret
mov
and
mov
imul
cmp
flds
add
aad
pop
xchg
sbb
jns
mov
mov
popa
imul
mov
mov
xchg
inc
xlat
mov
mov
in
push
dec
dec
push
leave
push
jl
test
sbb
dec
mov
jnp
ret
stos
jnp
sub
in
loop
pushf
lahf
jb
pop
jno
es
adc
adc
pushf
push
pushf
xlat
mov
shll
stos
sahf
mov
xchg
jmp
mov
sbb
mov
loopne
fiaddl
into
add
inc
jmp
je
inc
pushl
lods
ja
lods
or
fstp
xor
popa
scas
jge
pop
int
es
dec
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
xchg
xor
ror
xor
fcmovb
daa
dec
not
cmp
xor
xor
inc
cld
pop
mov
pop
jg
stos
popf
lods
lret
fmulp
adc
repnz
mov
iret
push
aas
scas
bound
sti
add
pushf
mov
push
push
shll
daa
js
cmpsl
ljmp
stc
mov
push
sub
fs
or
adc
jge
mov
push
push
test
or
dec
imul
jmp
push
dec
lock
fimuls
xchg
dec
dec
mov
sub
sub
ds
test
mov
repnz
mov
outsb
cwtl
sub
int3
iret
test
cwtl
cmp
xchg
pop
jnp
fsubr
dec
push
insb
xchg
jns
cli
vcmppd
fistpll
into
ret
adc
in
and
inc
xchg
jne
lock
stos
add
cmp
stos
push
int
inc
je
mov
repz
pop
in
push
lea
push
jmp
js
sbb
dec
enter
xchg
adc
sbb
or
lods
sbb
cli
mov
dec
cmp
ss
jmp
test
movsl
and
xchg
jno
sub
test
xlat
sbb
out
xor
stos
dec
fmul
or
fcmovbe
xor
test
stos
jne
jp
mov
mov
mov
fsubs
movb
pop
mov
lahf
pop
mov
cmp
jg
mov
mov
adc
lock
sbb
pop
jl
pusha
mov
lods
add
or
out
sti
adc
fsubrs
cmpsl
fbld
insl
xor
xor
aad
push
jmp
mov
jle
iret
test
sahf
and
adc
or
push
jo
fs
mov
adc
push
dec
stc
leave
xor
add
js
push
adc
xor
stos
in
mov
fnsave
in
lret
adc
mov
mov
das
sub
data16
call
xchg
pop
push
adc
out
and
pop
sti
repnz
xchg
in
pop
cld
sahf
mov
mov
out
out
popa
pop
mov
loope
js
jp
out
fisubl
xchg
inc
sbb
dec
push
xchg
or
jno
push
outsb
clc
ror
inc
fldl
inc
sub
xor
cmp
stos
test
or
andb
adc
shlb
shlb
push
adc
xchg
push
pop
push
andb
cmp
arpl
sbb
sbb
sbb
jle
push
or
stos
hlt
fdivl
loop
pop
xor
test
sub
test
sahf
cmp
mov
sahf
sbb
mov
ja
jmp
sub
xor
push
fildl
movsb
push
dec
push
and
cmp
and
mov
push
cmp
movsl
in
mov
mov
mov
jmp
out
inc
inc
pop
add
pop
jmp
and
jmp
jge
mov
and
jmp
push
repz
adc
loopne
pusha
sbb
movsl
loop
jp
or
sbb
popf
dec
mov
fcoms
dec
push
in
push
pop
sub
aad
jl
sub
insb
add
push
xchg
pushf
scas
cmc
lea
cmp
shl
sbb
inc
mov
sub
cmp
xchg
les
xchg
mov
or
xchg
lea
stos
imul
rcl
outsb
rclb
and
int3
lock
js
test
roll
mov
mov
jmp
pop
ret
jge
insb
jae
test
icebp
xchg
sbb
push
jns
jle
bound
icebp
loop
mull
push
mov
ss
mov
inc
pop
jns
pop
push
adc
dec
call
in
lahf
jns
sub
mov
push
sti
popa
mov
fwait
jg
out
test
sub
mov
mov
dec
push
adc
mov
xchg
sub
movsb
cmp
mov
in
cwtl
adc
push
in
or
add
insl
cmp
es
aaa
jmp
fstps
cld
mov
jae
push
repz
sub
sbb
out
dec
sub
mov
fucomp
add
ficoml
imul
in
in
add
out
mov
mov
pusha
ss
int
sbb
mov
cwtl
fs
ret
push
mov
cmc
xchg
addb
mov
lock
adc
mov
nop
popa
mov
ret
and
orl
mov
lods
xor
lea
add
mov
fwait
sub
pop
and
dec
lcall
dec
sub
pushf
js
cmp
push
pop
aam
adc
mov
inc
in
add
pop
jmp
adcl
dec
mov
dec
lahf
aaa
mov
mov
sub
dec
xchg
inc
outsl
fwait
pop
dec
xchg
int
orl
push
fldt
ss
push
sbb
leave
xor
lods
cmc
mov
add
dec
cmpsb
mov
mov
xchg
ss
inc
rcrb
sub
scas
into
rolb
jge
mov
and
fmull
lds
stos
mov
loopne
rcrb
xchg
cs
fs
adc
mov
and
loop
inc
js
mov
cwtl
test
dec
add
pop
divb
inc
or
popf
sub
jns
sahf
and
pop
inc
jle
jmp
aas
push
mov
pushl
loop
scas
push
loop
nop
inc
push
call
shl
jge
push
adc
fimuls
mov
xor
mov
ret
jge
mov
rol
xrelease
fldl
sub
scas
and
mov
mov
jg
mov
xor
mov
iret
inc
es
leave
aad
mov
xchg
and
and
into
sub
idiv
jmp
pop
push
cmpsb
cmpb
mov
adc
maxps
cli
fstps
gs
sub
ret
call
jno
shll
pop
sti
imul
out
and
fstpl
sub
mov
sti
out
adc
add
cmp
xlat
mov
push
mov
gs
sub
cmp
push
fldl
push
lret
iret
lret
enter
pop
push
xor
hlt
sbb
and
cli
stos
and
cmp
iret
jo
dec
cli
jnp
inc
test
imul
outsl
call
mov
cmp
inc
jmp
mov
aad
xchg
or
jp
dec
lret
cmp
pop
lock
aaa
mov
and
nop
inc
das
add
dec
test
sub
mov
imul
push
or
int3
pop
rcr
stc
and
psllw
popf
pop
out
jno
ljmp
and
push
adc
out
cld
xor
imul
fwait
outsb
fadds
lods
pop
rcr
add
sti
in
jp
xchg
shl
es
in
out
lds
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
push
mov
jle
push
jns
jle
es
jp
and
sub
adc
lea
jge
fcmovb
push
adc
xchg
adc
loopne
ljmp
test
imul
mov
jp
adc
xchg
loop
pushf
int
push
cmp
jmp
or
movsb
xor
sahf
xchg
xchg
jo
scas
cltd
inc
pop
pop
gs
iret
pop
sti
loop
xchg
pop
sub
cmp
jno
popl
sbb
rorb
push
push
mov
popa
mov
sbb
decl
xchg
inc
in
lcall
pop
pop
dec
push
ret
mov
fldenv
imul
and
jno
lods
in
fwait
pop
mov
movsb
subl
stos
fidivl
int3
lret
lods
mov
sub
in
mov
xlat
in
add
ljmp
icebp
lds
mov
loop
xor
fisttpl
pusha
aaa
mov
pop
jge
vdivss
or
imul
aam
stos
mov
sti
jne
std
sub
cmp
dec
mov
push
pop
sti
add
mov
pop
mov
cmpsb
xchg
icebp
leave
mov
jo
xor
mov
andb
mov
lock
mov
sub
xchg
xchg
inc
lcall
mov
cli
sub
cltd
call
mov
fsubs
jg
cmp
mov
out
js
dec
adc
adcl
cmp
sbb
mov
dec
lods
ret
lock
cld
aad
lods
pop
sub
addr16
pop
js
jecxz
adc
jb
jno
push
sbb
push
fs
fcoms
cmp
xorps
inc
and
adc
or
xchg
es
imull
pop
adc
cltd
ret
shrb
divb
and
fiadds
sub
wbinvd
cmpsb
sbb
nop
ret
jbe
pop
adc
mov
pop
mov
mov
pop
cmovae
pusha
adc
ret
jle
popa
sbb
sbb
hlt
push
into
sbb
jle
stos
into
loop
fidivrs
sbb
xchg
js
pop
cmp
sbb
rorl
mov
mov
push
stos
movsb
pop
andl
lods
data16
dec
lcall
xor
je
in
mov
inc
pop
inc
sbb
push
mov
mov
pop
adc
mov
cmp
stos
xor
dec
shl
jg
dec
rorl
jns
sbb
addb
in
push
xchg
movsb
mov
jg
adc
inc
pop
test
xor
inc
cld
or
pushf
adc
xchg
mov
sbb
push
pop
push
mov
inc
mov
pop
mov
js
ss
scas
rclb
jp
jg
imul
xchg
test
daa
ss
lcall
aam
les
xchg
jmp
jns
into
xlat
jns
add
popf
ret
aam
add
test
stc
add
sbb
outsl
sbb
xchg
pop
sub
jno
out
xchg
push
test
les
push
decb
mov
shll
pop
dec
loope
fstpt
cmp
test
pop
test
ror
cmp
cmpsb
dec
clc
loopne
popl
jae
mov
mov
inc
adc
notl
lret
dec
lods
lret
push
and
fwait
pop
cmp
negb
into
push
jmp
lcall
movsl
dec
mov
xchg
cld
addr16
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
dec
or
jle
jns
jle
nop
mov
inc
adc
adc
call
cmc
out
sub
cld
xor
sub
icebp
adc
add
fstpl
xlat
jno
sti
dec
sub
sahf
jl
mov
push
sbbb
addr16
je
jb
jp
scas
mov
xor
adc
jl
dec
xorl
adc
xor
ret
popaw
enter
js
sub
sub
inc
push
pop
daa
sub
gs
pop
pop
insl
pop
xchg
imul
or
adc
inc
cmp
ror
xor
jae
mov
inc
cmp
dec
in
out
dec
xor
movsb
rclb
cld
fs
cwtl
dec
jae
mov
out
lcall
mov
pusha
cmp
loop
rcr
lret
lret
stos
jns
pop
pop
in
mov
lea
pop
jle
lret
jnp
cmc
icebp
arpl
leave
and
jns
in
test
scas
pushf
and
inc
sbb
xor
mov
jne
xchg
xor
stos
fstpt
notb
mov
sbbl
sti
call
shll
adc
out
test
inc
repz
js
loop
xor
push
test
mov
dec
sbb
xor
rorl
cwtl
out
cmp
fdivrl
sahf
sbb
ds
xlat
and
daa
sahf
push
sub
dec
mov
push
movsb
mov
jno
pop
or
adc
mov
cmpsl
sahf
xchg
mov
jle
repz
xchg
mov
jmp
dec
mov
lods
or
xor
sti
pop
adc
mov
jo
add
repz
pop
fsts
dec
pop
push
jge
mov
std
les
rcrl
fsin
movsb
rol
push
mov
subb
sub
fisubs
call
addr16
dec
int3
or
pop
pushl
aas
fs
dec
jo
fbstp
jns
cltd
mov
hlt
in
in
dec
pusha
or
mov
add
in
imul
shlb
inc
ret
jb
dec
mov
mov
pop
sub
jmp
stos
mov
pusha
jl
out
push
push
lret
shl
fwait
xor
xor
aaa
mov
push
jl
into
xor
sub
lods
sub
stos
mov
pusha
jp
ja
les
fcmove
test
mov
mov
hlt
int
pop
test
stos
insl
sub
adc
mov
movsl
adc
shl
xchg
cmp
int
out
repnz
mov
lahf
xor
loop
lret
add
push
dec
int3
loopne
add
test
pop
xor
js
popa
xor
push
pop
test
data16
js
into
sbb
push
xor
lret
xor
jge
push
es
pop
push
repz
xor
sbb
xchg
push
sbb
xchg
mov
idivl
dec
test
xor
loope
jg
scas
cld
movsb
fwait
sbb
mov
jmp
mov
pop
imul
std
mov
inc
jno
cmp
or
push
test
mov
movsb
add
xchg
xor
mov
stos
icebp
fsubrs
adc
jnp
adc
push
ret
xor
aaa
sarb
in
and
jl
add
xlat
and
mov
push
ds
andb
int3
sbb
inc
inc
out
std
cld
add
arpl
sbb
out
xchg
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
mov
js
das
jle
pop
jg
jle
dec
xchg
xchg
mov
or
mov
push
outsl
jmp
int
je
push
inc
out
sub
push
lcall
mov
aaa
sub
and
jl
fisttpl
xchg
lret
clc
xorl
or
sti
mov
ja
cmp
rcrb
jmp
pop
cltd
inc
mov
adc
mov
and
push
leave
pushf
jge
mov
stos
fwait
scas
cmp
jmp
sbb
mov
shll
hlt
js
xorl
testl
dec
dec
inc
out
rorl
sbb
and
fs
cmp
test
sbb
pop
test
imul
lea
repnz
add
mov
xor
xor
sub
sbb
rcl
or
pop
sti
or
and
xchg
adc
push
xorl
test
rcrb
aam
filds
cmc
sbb
lock
cmp
mov
push
xor
sbb
int
loope
xchg
lds
movsl
fcomi
pusha
fwait
pop
jmp
push
sbb
xor
out
push
int3
and
mov
mov
arpl
lock
jb
jbe
loope
mov
dec
rcl
mov
fwait
shl
jmp
ret
inc
pop
push
jge
lods
cltd
pop
aad
js
adc
or
dec
mov
add
test
sbb
fdiv
lahf
cmp
ja
mov
out
lret
mov
xor
pop
adc
nop
jo
ret
es
adc
cmpb
lcall
adc
mov
rorb
sub
dec
or
mov
mov
orl
enter
sbb
test
sub
sti
inc
inc
add
inc
clc
test
inc
add
add
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
ret
ja
sub
pop
jg
jle
jp
mov
shll
jne
rcrl
imulb
into
icebp
in
xlat
iret
mov
sbb
ds
push
bound
pushf
xchg
lods
int3
sub
mov
in
jno
inc
sbbb
dec
push
imul
test
jne
dec
push
xor
aam
push
push
mov
popf
iret
adcb
out
aam
lock
psrlw
ret
pop
mov
mov
inc
sbb
mov
movsb
jnp,pn
aas
mov
aam
xchg
sbb
and
in
adc
cmpsl
push
shlb
imul
and
call
mov
mov
sbb
jne
jmp
sub
leave
pop
adc
xchg
rorl
data16
mov
outsl
or
pop
adc
lock
jle
fiadds
mov
xor
sub
iret
mov
jae
adc
jbe
arpl
incl
cmp
xor
sahf
xor
insl
mov
and
je
mov
fwait
jmp
inc
adc
dec
mov
pop
xor
loop
xchg
jne
dec
and
idivl
xchg
sub
mov
cmpsb
or
or
sbb
jne
push
sub
mov
cmp
pop
pop
not
mov
repnz
das
jle
mov
inc
xor
sarl
mov
gs
mov
push
jecxz
mov
sbb
std
in
or
std
int3
psadbw
lret
push
pop
rcr
xchg
jbe
adc
push
add
jno
jmp
mov
pop
adc
test
popa
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
into
pop
sub
les
jle
ffreep
stc
popa
lret
sub
scas
mov
dec
cmc
push
hlt
stc
lcall
mov
add
xor
test
mov
xor
popf
push
or
dec
push
mov
outsl
xor
or
aas
mov
scas
push
outsl
into
sub
les
pop
push
jg
pop
lcall
jno
je
lret
cli
divl
jle
clc
aam
pop
sbbb
inc
int
test
mov
push
xchg
test
sahf
cmpb
fistpl
enter
mov
je
popl
pushf
hlt
addb
jl
sub
xchg
cld
das
push
pop
sahf
xor
scas
in
sbb
inc
xor
cs
jl
sti
fisubrl
jae
bound
xchg
pop
ljmp
lods
adc
pusha
cs
loopne
into
adc
cs
mov
xchg
imul
jns
mov
popf
cvtdq2ps
dec
pop
subl
subl
pop
rcr
mov
jl
xchg
idivb
mov
repz
xchg
fcom
jmp
nop
out
cli
jp
xor
movsb
or
test
popa
dec
dec
xchg
pop
mov
repz
dec
mov
adc
movsl
stos
mov
aaa
add
lods
mov
cld
inc
xlat
fsubrs
mov
int3
cmp
cmp
movsl
call
clc
cmp
sbb
jmp
jne
xor
out
addl
cwtl
push
push
sti
ja
test
dec
xor
mov
fs
xor
and
out
xchg
aas
fwait
lahf
repnz
inc
flds
jl
sbb
xor
int
dec
int3
xor
lret
push
jno
sbb
push
add
fldenv
cmpsl
ds
inc
and
mov
imul
loope
or
subb
dec
jmp
jg
dec
call
xchg
clc
sub
movsl
loop
add
or
fwait
les
pop
or
and
orb
sub
push
jne
imul
cmp
leave
inc
fdivs
lret
mov
adc
aas
adcb
addr16
pop
xchg
loope
cld
jbe
mov
xchg
fildl
ret
cmc
or
pop
dec
sbb
sahf
scas
mov
rorl
and
lds
add
lret
or
sbb
sahf
xor
into
jmp
mov
sbb
or
shll
in
sbb
leave
pushf
push
xchg
cmc
pop
xchg
lods
iret
xor
dec
jmp
xor
test
push
pop
jmp
call
pop
std
fildll
idivl
adc
addr16
sub
cmp
sbb
aaa
es
add
hlt
pop
push
lods
add
mov
mov
arpl
mov
lea
shlb
add
lea
and
adc
inc
hlt
adc
fadds
aad
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
jle
les
jle
cmc
aaa
add
mov
out
cmpsl
scas
fcoms
mov
add
iret
push
not
push
sahf
ror
ds
inc
shl
adc
push
cmp
test
lea
aam
test
cmp
jl
jmp
fdivrl
jae
sbb
lock
fdivl
add
mov
add
and
or
sub
xor
cwtl
dec
inc
out
push
sbb
or
imul
ret
das
cmp
adc
fidivrl
sti
push
pushf
cmp
mov
in
shll
lods
xchg
cli
mov
jmp
sahf
sub
adcl
cmp
mulb
xchg
aas
jecxz
inc
push
push
xor
add
mov
dec
in
arpl
stos
in
sub
or
jmp
mov
jne
mov
cmp
xchg
cmp
adc
cmp
xor
mov
and
mov
mov
and
cld
out
fcompl
push
add
gs
test
pop
repnz
sub
fsubl
mov
jg
adc
clc
pushf
jmp
cmp
sti
xor
mov
mull
es
fisubl
test
push
pop
adc
xchg
stos
jo
out
xor
sub
ret
ret
aad
icebp
mov
pop
mov
push
or
inc
mov
xor
mov
arpl
mov
movsb
xchg
push
leave
adcb
jmp
push
ljmp
and
shrl
shl
into
mov
decl
push
and
cmp
or
xchg
jno
enter
in
pop
mul
into
pusha
fxch
jp
xor
cmp
dec
inc
cmp
xor
popf
rcll
dec
aam
dec
fildl
push
jae
xor
dec
in
dec
les
out
fs
fwait
movsb
mov
mov
jno
ret
jl
mov
popf
push
movsl
imul
xchg
mov
fcomip
mov
push
out
sbb
movsl
mov
inc
or
cmpsb
test
in
xor
enter
aam
dec
sarl
lahf
dec
add
in
xchg
xor
pop
mov
cmp
lds
adc
inc
dec
flds
ljmp
in
xchg
leave
cvtps2pi
add
mov
std
add
adc
es
xor
dec
ja
sbbb
aaa
sbb
insb
sub
popa
or
shr
stos
jp
add
xor
xchg
sahf
es
fldl
mov
imul
or
mov
and
and
sbb
aaa
mov
inc
push
inc
dec
orl
inc
push
fdivr
fdivrs
add
mov
fiaddl
xor
loopne
mov
mov
out
icebp
pop
mov
inc
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
or
scas
dec
out
xor
les
jle
das
fistpll
outsb
mov
outsl
push
cmp
mov
pop
fimuls
dec
mov
jae
out
lods
mov
dec
jns
inc
daa
stos
pop
jo
faddl
movb
repnz
and
push
test
ret
stos
push
adc
add
popl
bound
inc
mov
or
push
xchg
das
int
jecxz
jge
mov
fs
test
mov
cmp
jl
imull
jg
loope
jecxz
addb
or
sar
mov
or
xor
adcb
xchg
sub
gs
pop
push
or
push
pop
das
push
popa
cltd
into
insl
cli
or
and
fs
lahf
scas
push
and
sbb
push
inc
cmpsl
cltd
adc
dec
mov
inc
xor
ja
rcll
nop
cmpsb
ja
loopne
ret
push
pand
mov
push
pop
inc
jnp
in
push
clc
rol
negl
aam
cwtl
xchg
cld
mov
add
pop
and
add
mov
ss
aas
fsubs
mov
roll
xlat
cltd
call
mov
adc
mov
jge
data16
lahf
mov
cmc
fdivl
lahf
fmul
mov
xchg
std
inc
dec
sub
fucom
cmc
jecxz
mov
outsb
addr16
fcomps
inc
jae
mov
sub
add
int3
mov
repz
sub
sar
aam
xchg
je
sub
lret
push
mov
fs
int
jecxz
aad
clc
xor
push
cmp
jp
xchg
mov
mov
imul
xorl
push
in
push
cli
addr16
jl
arpl
aam
lret
sti
in
lcall
cmp
imul
jo
push
pop
pushf
stos
jle
cmpsl
out
sub
sbb
faddp
push
repnz
cmc
xchg
push
mov
shlb
xor
ret
inc
sbb
call
sbbl
jb
sti
jne
pop
push
sbb
push
or
xchg
ret
pushl
pop
mov
or
or
sub
fwait
test
dec
jecxz
sub
test
xchg
xchg
push
or
jo
in
pop
inc
jl
xor
jno
or
ficoms
add
and
dec
shll
popf
jne
lea
xchg
pop
addb
adc
push
mov
jno
ret
out
out
mov
push
inc
mov
push
ljmp
mov
add
inc
mov
mov
fldt
add
stc
and
aaa
mov
push
xchg
dec
faddl
out
mov
in
ljmp
inc
mov
loop
push
xlat
jmp
mov
mov
movsl
es
outsl
adc
cmp
fildl
inc
dec
mov
fs
push
jnp
push
mov
cwtl
inc
mov
mov
cmp
xor
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
add
mov
jle
les
jle
lret
aad
xor
or
add
cmpsl
xlat
rorb
inc
sub
fidivrl
cltd
or
pop
movsb
ss
mov
inc
repnz
jne
lods
or
pop
imul
or
pop
add
xor
sbb
setnp
jo
test
dec
aad
pop
in
sub
outsb
mov
popa
popf
lcall
repz
fsubrs
xchg
add
xor
xor
add
push
in
psllq
arpl
and
pusha
fcmovu
xchg
xchg
xchg
out
fisubs
jle
loopne
repnz
mov
pushf
adc
mov
push
out
negl
jmp
js
sub
imul
mov
lods
add
fstpl
popf
movsb
imul
pop
lahf
movsl
daa
leave
xchg
loop
add
jle
lret
push
or
mov
and
mov
or
imul
pop
adc
fcmovnu
adc
fnstcw
mov
pop
push
mov
xorl
repnz
loopne
jp
mov
imul
cmp
xor
push
cmpsl
push
cwtl
add
in
sub
cmp
test
in
adc
fisttps
mov
push
sbb
pop
push
adc
popa
cwtl
add
and
xor
aam
inc
mov
icebp
xchg
jg
aad
pop
sbb
or
xor
mov
pop
into
lds
lds
iret
js
cli
adc
scas
mov
mov
and
xor
clc
fsubs
cmc
fnstcw
testl
pusha
out
cwtl
jbe
mov
pop
pop
mov
movsl
dec
pop
cltd
mov
push
xor
stos
xor
cs
repz
negb
imul
cld
je
adc
and
or
push
xor
push
xchg
rep
lcall
sahf
adc
js
mov
push
add
clc
inc
inc
jns
iretw
and
clc
js
lods
scas
popf
pop
cmp
out
xor
mov
lahf
test
gs
adcl
movsb
int3
insl
push
repnz
lods
mov
popf
arpl
pop
repnz
pusha
push
frstor
shll
out
jo
insb
in
push
mov
jb
adcb
cmp
ss
add
shl
or
inc
push
cld
mov
in
add
xchg
jle
push
iret
sbbl
mov
jb
dec
xchg
push
xor
push
xlat
mov
mov
in
cltd
inc
jmp
repz
pushf
clc
nop
adc
fldcw
jle
sbb
xchg
enter
or
out
gs
sub
dec
mov
pop
cs
shl
add
test
rcl
movsb
push
cmp
adc
shll
fldenv
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
inc
push
hlt
nop
jae
jle
dec
jns
jle
movsl
add
pop
cmp
jbe
xchg
dec
fwait
sti
mov
push
adc
aad
outsb
flds
cmp
shll
pop
pop
pop
cmpsl
jno
pop
dec
lds
add
push
fisttpl
cmp
jge
movsb
out
les
pop
scas
jo
mov
pop
sub
pop
nop
mov
push
and
test
xchg
mov
cmp
std
or
xchg
xchg
notl
stos
mov
pop
ljmp
inc
dec
xchg
mov
pop
xorb
jmp
fwait
nop
sbb
aaa
inc
stc
pop
mov
mov
cmp
pop
adc
ret
adc
fnstsw
pushf
mov
in
mov
lds
neg
ljmp
jno
adcb
leave
aaa
inc
push
cltd
popf
xor
cld
dec
mov
or
push
in
push
sbb
test
ja
xchg
cmp
sbb
addr16
pop
sbb
mov
leave
hlt
int3
bnd
in
scas
int
out
or
inc
mov
int
push
fwait
aas
cli
in
xor
enter
fildl
scas
daa
pop
jmp
das
xchg
mov
ret
xorl
add
inc
pop
mov
inc
cld
sub
and
pop
jmp
sbb
mov
iret
ds
cmp
xchg
out
sbb
dec
fcoms
fdivrl
pop
push
stc
sub
push
xor
cld
cmp
adc
dec
sub
xorl
shrb
data16
dec
pop
push
add
mov
fcoml
mov
ret
cwtl
fwait
daa
mov
fadds
xor
fs
leave
mov
jle
sbb
jb
mov
stc
xchg
icebp
pop
inc
inc
shlb
pop
cld
mov
int
cltd
pop
sbb
jns
jb
stos
inc
shlb
mov
xchg
xchg
jo
or
clc
int
rcll
sub
add
adc
jle
mov
adc
sub
adc
stos
rclb
mov
cmp
aam
jno
push
sub
nop
sbb
nop
jmp
jp
pushf
fmul
shll
arpl
iret
sub
hlt
fwait
insl
les
jo
lea
test
jle
sbb
dec
shlb
dec
add
mov
add
cltd
lods
inc
xchg
sbb
dec
sbbb
xchg
inc
pop
cmp
add
test
mov
pop
jo
jne
mov
xor
mov
outsb
push
jb
jns
in
fcomip
cltd
daa
xchg
lahf
loopne
outsl
andl
mov
sbb
dec
out
hlt
lods
pop
inc
xchg
hlt
cmp
pop
inc
outsb
mov
shll
movsb
mov
pop
inc
icebp
lds
loope
sub
or
jmp
jae
push
dec
imul
dec
adc
loop
fldenv
cmp
in
xchg
int
repz
jae
leave
mov
or
sbb
mov
out
xor
mov
mov
and
pop
int3
mov
out
cli
sbb
push
lods
cmp
fdivl
lea
in
jne
pop
fimuls
mov
sbb
test
pop
popf
xchg
aam
push
into
xchg
pop
dec
or
cmp
xor
cs
movsl
ja
js
fsubrl
shrl
scas
dec
mov
pop
sbb
movsb
pop
inc
subl
sbb
pop
push
daa
mov
mov
cli
je
mov
jbe
mov
iret
stos
jge
sub
addr16
or
mov
push
or
inc
fmull
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
dec
fdivrl
jle
jns
jle
out
pop
mov
subl
das
adc
xchg
sbb
or
add
enter
ds
aam
jbe
mov
jne
mov
mov
xchg
scas
push
loop
mov
test
aad
in
inc
int
pusha
dec
mov
addr16
out
mov
inc
sbb
les
fstpt
cmpsl
aam
lahf
dec
mov
inc
gs
add
jmp
cmc
lret
out
and
or
fcmovnbe
mov
scas
xchg
ss
pop
cld
mov
into
ret
jo
jp
mov
in
mov
enter
push
imul
lcall
and
pop
xchg
in
cmpl
sahf
dec
jnp
orb
xchg
cmp
mov
nop
jns
mov
fists
inc
aaa
dec
cwtl
shr
iret
jmp
add
mov
inc
outsl
push
cmp
lahf
mov
cmpsb
mov
jbe
mov
dec
mov
popa
jle
cmc
dec
arpl
xor
inc
pop
mov
ja
sti
sub
or
cmpsb
mov
adc
out
popf
fwait
cli
dec
jne
mov
jmp
push
jecxz
or
jmp
js
dec
in
mov
sbbl
popa
push
js
add
aad
add
loop
icebp
adc
mov
sbb
or
loop
nop
mov
jge
inc
cli
xchg
ja
aam
or
add
movsl
lds
out
jg
jns
nop
push
dec
stos
mov
pop
out
sarb
dec
dec
lds
ds
push
imul
push
xor
gs
mov
popf
lea
bound
jg
sbb
and
das
xor
cmp
movsb
mov
xor
repz
imul
shlb
mov
jmp
pop
dec
iret
sbb
lcall
add
pop
inc
repz
dec
cmp
pop
test
clc
dec
mov
in
cltd
cmp
fldenv
mov
iret
xor
scas
leave
mov
andl
stos
rcll
mov
mov
adc
jmp
call
pop
data16
push
pop
jmp
popa
fwait
mov
sbb
nop
repz
in
xchg
jp
add
sub
rol
bound
int3
cld
loopne
cld
jnp
xor
sarb
jns
mov
jbe
mov
dec
inc
rorl
jl
cmpl
enter
fdivrs
cmp
sub
adc
bound
mov
mov
mov
les
lret
rolb
jns
sub
sti
push
fwait
aaa
out
or
call
call
lcall
add
push
lret
push
jnp
aas
push
xchg
jg
nop
bound
and
jbe
dec
je
push
inc
call
aad
test
pop
dec
push
test
and
call
call
jg
test
dec
insl
popf
testb
inc
insb
test
call
jmp
addr16
ja
cmc
rorl
push
xor
scas
jno
push
inc
mov
sbb
sub
and
mov
push
imul
and
mov
mov
xor
js
xchg
push
mov
sub
cmp
out
test
sahf
or
mov
in
pop
fildl
and
leave
cli
mov
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
popf
jle
dec
jns
jle
and
dec
cli
ret
adc
inc
push
add
sub
pop
jb
push
fimull
mov
dec
xor
movsb
xor
fimull
mov
pop
sbb
clc
inc
xor
std
pushf
jl
cltd
out
int
leave
sub
cmp
test
jae
or
sub
add
and
stc
iret
ds
pop
outsb
xor
add
pop
xchg
imul
orl
cmp
bnd
sub
sarb
adc
gs
and
inc
add
aam
in
sub
dec
mov
pop
in
adc
cs
scas
jmp
loop
mov
out
jg
add
test
fists
ficompl
mov
pushl
es
mov
push
aas
popl
mov
scas
insl
cmc
frstor
xchg
std
stc
stos
je
dec
mov
aad
adc
bound
or
pop
mov
lret
jge
mov
jg
mov
pop
xor
cwtl
sbb
enter
cmp
scas
sbb
adc
or
inc
out
cs
pop
adc
cmpsb
leave
js
data16
fldcw
add
dec
aas
pop
inc
insl
mov
gs
dec
popa
jg
add
insb
pop
mov
inc
inc
fstpt
cmp
dec
cltd
and
test
int
push
sub
mov
loop
rcrb
test
and
out
xor
jg
popa
les
ret
lock
pop
jge
push
mov
fisttpl
test
mov
jmp
or
loopne
mov
mov
adc
iret
inc
xor
jecxz
mov
adc
arpl
bnd
xor
ficoms
lahf
lods
and
sub
out
inc
stos
test
sti
in
mov
jmpw
xor
ljmp
pop
push
sbb
hlt
pushf
pop
push
dec
lea
dec
loope
negb
xchg
push
cmp
push
push
jmp
pusha
std
push
sbb
push
cwtl
loop
xchg
out
xorb
lods
in
mov
loope
imul
data16
testb
test
stc
mov
orl
jo
neg
into
iret
jbe
mov
or
jbe
bswap
icebp
fldcw
mov
jl
pop
push
test
ljmp
mov
aaa
stos
hlt
negb
add
iret
in
movsl
or
shrl
stc
or
shl
xchg
inc
mov
pop
jne
in
int3
divl
pop
or
xor
mov
xlat
decb
daa
iret
push
cltd
mov
mov
pop
gs
cltd
lcall
popf
jmp
cmp
xor
aaa
and
xchg
jbe
out
sub
add
or
jno
iret
xchg
lods
shlb
call
adc
adc
insl
roll
or
rorl
xchg
inc
jl
faddl
mov
inc
sbb
xchg
mov
jbe
pop
jge
jnp
mov
mov
bound
icebp
adc
divb
iret
ret
dec
into
xchg
out
xchg
imull
cltd
aaa
push
mov
lock
dec
dec
fwait
jb
and
test
scas
push
scas
cmp
xor
or
addl
cwtl
cmp
mov
dec
insl
popf
inc
and
push
insb
lret
bound
lahf
test
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
add
sub
lret
ljmp
stos
and
push
repnz
inc
out
je
cmc
and
xchg
loopne
mov
ljmp
mov
pop
rorl
je
add
int
push
icebp
xor
cmp
scas
cmc
fidivrs
or
sbb
jo
aas
sub
sub
xchg
or
xor
sahf
mov
jnp
test
push
push
push
dec
sbb
jae
jno
das
jl
jge
pop
dec
sub
data16
jae
and
dec
push
in
add
repz
fsubrl
adc
cmp
mov
rolb
js
movsl
mov
cmp
ret
rcll
sbbb
lock
and
shr
add
mov
fisttpll
xor
cmp
jl
lods
loopne
xlat
push
inc
les
pop
mov
add
jl
inc
push
es
insb
es
push
fisttpll
scas
pushf
sbb
cmp
daa
iret
iret
and
xchg
push
jno
cmp
in
fildl
gs
ret
pop
cmc
cmpsb
repnz
adc
xchg
cmpsl
fdivrs
mov
mov
pop
js
mov
add
push
inc
bound
jl
ljmp
inc
mov
lret
push
or
mov
add
enter
sar
inc
mov
dec
int3
push
jmp
mov
mov
add
pop
lahf
push
push
mov
and
and
jnp
add
ja
mov
pushf
lods
cmc
lock
cmp
scas
iret
imul
xchg
dec
ss
clc
cmp
lods
out
mov
roll
or
dec
dec
push
mov
jae
mov
pop
inc
pop
xchg
mov
js
push
mov
repz
jecxz
shll
inc
aam
loop
sbb
push
fistps
pop
lcall
mov
jnp
inc
mov
mov
pushf
icebp
add
jp
stos
sbb
xchg
into
pusha
leave
dec
and
and
testb
push
in
pop
pop
lcall
idivl
sbb
push
sbb
push
jbe
loopne
add
mov
hlt
xchg
mov
push
lea
push
imul
xor
shl
in
pop
sbb
popf
and
cmp
or
enter
push
dec
mov
cmp
fwait
adc
repz
or
sbb
mov
mov
inc
lret
fisttpll
and
ljmp
jg
adc
jmp
sbb
ljmp
pop
push
inc
loop
jl
daa
add
jbe
lods
call
data16
std
fwait
jno
jp
dec
pop
dec
fadds
pop
jle
ljmp
inc
xchg
and
scas
daa
and
mov
sbb
cmpsl
aad
in
push
lcall
xchg
ds
in
sbb
incb
mov
ja
dec
jge
and
hlt
sub
fwait
hlt
mov
xor
mov
ret
xlat
and
push
cld
dec
sbb
hlt
les
into
pop
xchg
adc
lds
mov
test
jecxz
dec
jbe
xlat
iret
std
mov
ja
sbbb
fstps
jmp
push
aam
sahf
jge
shll
testb
clc
orb
stos
scas
popa
clc
cmp
nop
ds
stos
insl
div
fnsave
mov
clc
adc
push
xor
xchg
imul
shlb
arpl
ljmp
test
insl
int
push
push
inc
jge
fldz
push
sbbb
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
rcr
cmp
dec
jns
jle
clc
pop
xchg
ljmp
mov
aaa
scas
mov
mov
jp
mov
push
and
nop
repz
out
or
repz
vmread
cs
jns
subb
popf
call
push
fnstsw
and
dec
xchg
sub
cmpsl
inc
mov
sub
sahf
aas
ret
dec
loope
push
loopne
inc
insb
sbb
push
add
xor
daa
loope
adc
cwtl
gs
jg
notb
push
add
insb
mov
pop
into
std
lahf
mov
fisttpl
mov
cmp
popf
int
mov
in
cmp
cltd
arpl
incb
sti
test
or
xor
lret
mov
outsl
push
repnz
fwait
cli
std
pop
jbe
sbb
ret
rolb
add
mov
insb
jmp
mov
sub
adc
lods
fstps
sub
inc
xchg
mov
call
mov
lret
cmp
sarb
cmp
jae
jns
xchg
call
imul
fwait
repnz
lahf
movsb
mov
cmpsb
dec
inc
adc
fstps
shlb
pop
cmpsb
cli
or
cld
repz
cmpsl
dec
or
call
imul
andl
push
cli
pop
les
aad
rcrb
into
push
and
aas
sub
int
sub
mov
lds
icebp
dec
std
push
xor
push
xor
mov
les
mov
out
cmp
and
cmp
xchg
or
jo
push
dec
test
jb
loope
sbbb
test
daa
mov
inc
std
xchg
sbb
es
jp
scas
sbb
add
lock
pop
ret
aas
jno
dec
pop
sub
les
ss
mov
push
or
insb
clc
hlt
mov
iret
mov
outsb
repnz
lahf
stc
fnstenv
mov
aam
push
add
dec
shrb
inc
testb
mov
aas
enter
rcl
mov
into
jl
dec
pushf
lahf
mov
xor
inc
int
fwait
mov
cmp
outsb
jmp
lret
cmp
xchg
fildll
push
jg
enter
and
add
cmpsb
sbb
arpl
and
in
mov
cmpsb
jg
push
jne
mov
pop
xor
push
in
lret
xor
or
sub
inc
cmp
fs
cmpsb
out
push
pop
xchg
pop
mov
stos
enter
mov
dec
mov
fwait
pushf
mov
push
xchg
mov
shlb
nop
jbe
adc
in
inc
xor
fwait
or
push
loope
xchg
out
fdivr
fisubrs
xchg
xchg
push
inc
fadds
sbb
jno
mov
add
adc
and
sbb
mov
sbb
shll
ret
mov
enter
cmp
inc
int3
cmp
mov
sbb
push
in
insl
cmpsb
xchg
add
pop
xchg
pop
leave
push
mov
or
xchg
aad
in
cmpsl
xor
movsl
leave
add
push
add
mov
sub
dec
stos
daa
and
add
inc
cli
out
in
scas
dec
cld
fisubl
mov
test
nop
int
mov
es
aaa
push
out
xchg
pop
mov
push
pop
into
cmp
mov
ja
rep
add
mov
iret
js
dec
mov
int3
bound
sub
pop
adcb
jp
pop
clc
sub
hlt
sbb
movsl
lock
add
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
lods
bound
popa
into
xchg
or
ficomps
and
pop
mov
ror
xchg
aam
icebp
cltd
ret
xchg
popa
je
ret
adc
or
sub
iret
pop
repz
push
addr16
lahf
adcl
add
test
movsl
pop
cmp
shld
repnz
push
cwtl
ret
sbb
sbbb
clc
push
cmp
cmpsb
scas
outsl
xor
or
es
push
es
sbb
pop
jl
test
enter
push
lcall
lods
inc
stos
in
sub
sbb
sbb
outsb
inc
push
rclb
add
sub
xorl
pusha
or
iret
cmc
mov
loope
xchg
pop
sbb
cmp
shrb
xor
jl
ficoms
ret
xorb
add
ljmp
pop
and
outsb
pop
loopne
mov
sti
xor
mov
cmc
jmp
cwtd
mov
fdivrp
push
push
roll
pop
imul
stos
daa
loopne
das
aam
out
add
loop
push
mov
mov
mov
mov
in
scas
enter
cltd
jae
inc
test
shl
sub
mov
xchg
xor
jne
cmp
imul
add
adcl
icebp
push
jno
xor
jne
inc
repnz
cwtl
sahf
and
pop
jle
test
jmp
jecxz
or
frstor
or
or
mov
rcll
call
loop
cmp
faddp
jmp
or
cmpsl
xor
cmpsb
icebp
imul
adc
stos
mov
dec
mov
jno
es
lcall
cwtl
pusha
sbb
cmpsb
xor
mov
aas
out
inc
es
test
and
jbe
adc
and
mov
inc
xor
ss
push
cwtl
imul
iret
and
and
enter
mov
mov
xchg
mov
adcb
gs
cld
fists
mov
cmc
sbb
fsubr
daa
mov
mov
xchg
dec
pop
test
nop
mov
sub
fs
lcall
and
push
repnz
xor
or
cld
jp
popa
xchg
adc
std
fs
or
in
mov
loope
ja
mov
sub
sbbb
cli
lret
or
mov
xor
sub
and
mov
gs
lock
xchg
orb
jmp
mov
sub
mov
mov
out
test
mov
js
stos
add
add
scas
das
mov
cmp
or
jb
test
sub
pop
notb
xchg
lcall
cs
xor
inc
add
pop
adc
flds
cltd
es
push
mov
sub
dec
mov
shlb
add
sub
js
fdivrs
mov
adc
add
pop
mov
push
and
mov
mov
mov
mov
mov
out
jnp
outsl
dec
push
pop
call
push
sbb
cli
ret
cmp
lods
fldenv
pushf
int
imul
sub
jg
cmp
lea
inc
pop
std
iret
pop
fldcw
cmpsb
daa
out
insb
popf
out
pop
mov
imul
cli
dec
test
adc
repnz
fsubrl
inc
pop
sbbb
dec
cmc
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
add
insb
inc
pop
jle
dec
jns
jle
out
je
dec
cmpsl
ficompl
rclb
outsb
fistps
fwait
dec
mov
mov
push
adcb
inc
add
stc
js
pop
push
jb
js
or
leave
add
add
mov
nop
std
adc
xor
stc
movsb
pop
call
iret
jbe
into
pop
dec
xor
shll
fdiv
mov
jp
or
xchg
fwait
push
pop
leave
sbb
hlt
out
push
lock
push
cld
xchg
push
dec
push
clc
pop
add
sub
je
inc
stc
aas
addr16
cwtl
sub
push
pop
subl
daa
aam
xchg
notl
out
ss
adc
aaa
xor
adc
push
iret
test
xchg
fs
lods
push
xor
mov
xchg
mov
mov
xorb
add
mov
push
xor
movb
adc
adc
aad
inc
and
sbb
mov
lahf
xor
xchg
test
dec
mov
pop
inc
dec
jb
mov
mov
stos
cmp
push
clc
inc
lds
movsl
lret
or
mov
cmp
jbe
stos
popa
out
flds
ja
push
aam
or
adc
mov
xor
jle
mov
cld
xchg
pop
cltd
sbb
jo
ljmp
sub
rcll
sahf
shrl
cmp
lea
pop
cmpsl
push
data16
adc
jle
xchg
test
frstor
pop
pop
psrad
into
movsb
jno
mull
mov
outsb
mov
mov
popa
outsb
xor
dec
pop
jle
hlt
bound
stos
cmp
out
add
in
stos
pop
pop
jo
cmp
test
or
or
je
cmp
lahf
inc
xchg
int
add
xor
subb
shlb
sbb
pop
xor
lea
and
pop
movsl
sbb
into
lock
aaa
mov
js
pop
xchg
push
mov
icebp
sub
rclb
out
aaa
imul
sbb
into
dec
sbb
enter
ds
dec
dec
inc
test
leave
fnstsw
mov
insl
dec
xor
int
mov
enter
enter
cs
mov
dec
adc
jne
push
clc
mov
pop
xchg
inc
daa
and
jp
mov
adc
test
test
jno
sbb
movsb
xchg
into
in
inc
out
xchg
daa
jns
pop
fdivrl
adc
cmp
pusha
std
es
mov
cld
push
push
je
add
scas
fs
mov
mull
fsubrp
jg
sub
jbe
leave
fsts
and
fnstsw
sbb
pop
inc
adc
imul
popa
int3
push
push
insl
and
and
push
mov
iret
mov
fmul
std
push
mov
pop
cmp
addr16
xchg
jp
pop
mov
js
or
jns
dec
stos
scas
adc
call
xlat
loopne
popf
xchg
outsb
push
jae
push
inc
sbb
add
fiadds
fwait
inc
lret
push
lahf
push
std
adc
push
sbb
popf
movsb
lods
pop
insl
ds
rcrl
xchg
add
push
push
call
add
and
cltd
out
mov
xchg
jnp
cld
and
scas
sbb
sahf
je
imul
mov
mov
ficoms
push
js
mov
sahf
lahf
add
test
scas
xor
ficompl
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
fs
mov
dec
jns
jle
or
aad
aad
pop
push
movsb
dec
iret
push
in
push
fdivrs
xor
sub
mov
int3
es
sub
ret
cmp
cs
push
add
add
inc
xchg
into
add
lahf
jl
push
fs
movsb
ja
push
cli
lret
mov
loopne
adc
and
fs
popa
sbb
adc
cmp
mov
insb
dec
loopne
lods
cld
iret
lahf
outsb
and
jb
lret
int3
mov
push
push
cld
xlat
cli
mov
jae
int
pop
cmp
jo
ja
fwait
lea
fstpt
dec
lea
pop
jl
cmp
insl
cmc
stos
jge
sbb
inc
fsubrs
cwtl
sbb
sbb
or
loop
pusha
mov
andl
repnz
js
fstl
fstpl
cmp
and
xchg
rolb
mov
jmp
stos
fs
outsl
add
mov
push
ret
jb
test
jg
xchg
pop
test
in
and
cmp
cmp
cmp
js
dec
shll
ficoms
mov
and
repnz
dec
cmp
push
lcall
enter
addl
fcmovnbe
fwait
ljmp
fs
sub
adc
jns
dec
fdivrs
mov
sbb
cs
dec
xchg
insl
fstps
cmp
add
adc
adc
sbb
scas
dec
jb
dec
fmulp
stc
sbb
loop
push
jg
icebp
mov
cmp
or
iret
fstps
inc
cmc
push
cs
sarb
jo
movsl
test
rolb
and
sbbl
xchg
in
mov
scas
out
push
xlat
scas
xchg
dec
xor
aas
push
outsl
incl
sbb
fnstsw
adc
ret
xchg
push
adc
jae
inc
notb
aad
aad
and
fistps
sbb
mov
andl
pusha
mov
sub
sti
ds
cs
daa
xor
cltd
js
xchg
insl
in
pop
test
fdivrl
sub
xchg
push
or
fdivr
cltd
sbb
xor
xor
lcall
inc
bsr
adc
int
loope
neg
mov
rorl
les
dec
mov
cltd
mov
fmull
dec
xor
adc
lds
out
xor
call
adc
xchg
dec
sub
sbb
cmpsb
xchg
repz
mov
dec
ljmp
cmp
outsb
out
outsb
add
inc
xor
maxps
adc
shl
ds
rcl
push
test
aas
push
xor
jmp
cwtl
in
mov
ljmp
imul
iret
add
mov
outsb
andb
cwtl
lcall
filds
imul
mov
jb
inc
cmp
add
cmp
movsb
xor
das
ffreep
and
push
sbb
add
cmc
in
in
or
in
mov
in
push
xor
jmp
outsl
inc
mov
aaa
inc
adc
imul
arpl
popf
and
jge
in
out
ror
cmp
mov
repz
mov
mov
cmpb
clc
es
repnz
outsb
sub
dec
dec
hlt
push
ljmp
lock
and
pop
hlt
insl
cmp
data16
repnz
pop
dec
ja
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
call
fidivrs
loope
jle
popa
int
pop
push
xchg
pop
cs
popf
aam
fdivrp
sbb
pusha
adc
cmp
daa
jle
or
push
xor
inc
sub
adc
scas
arpl
cmpsb
or
aad
push
pop
call
mov
hlt
mov
js
jo
cmp
popa
cwtl
sbb
push
popf
and
gs
jmp
pop
rorl
pop
inc
cmp
sub
ret
inc
fbld
adc
fs
fldl2e
fldcw
jbe
bound
push
xchg
insl
inc
adcb
cvtps2pi
dec
mov
hlt
test
xor
pop
push
and
mov
adc
fldenv
xorl
cmc
xor
addl
adc
sbb
into
dec
sub
mov
popf
gs
adcl
cmpsl
loop
push
pop
jge
inc
loope
ret
add
and
lods
push
add
pushl
adc
push
inc
lahf
insl
mov
pop
jbe
cmc
in
rol
mov
sub
mov
roll
in
cltd
fnstsw
fisubrl
pop
pop
mov
push
xchg
andl
aaa
leave
int3
dec
flds
dec
addb
scas
push
sbb
xor
loopne
in
pop
sub
leave
adc
leave
repz
xchg
adc
xor
repnz
rcrl
sbb
or
movsb
jge
inc
pop
sbb
adc
mov
or
jo
imul
sarb
rolb
xor
shrb
mov
jb
dec
ret
das
in
data16
and
cmpsb
int
addr16
push
pop
pop
mov
arpl
xchg
pusha
sbb
andl
jg
sub
add
or
pusha
add
adc
jg
sub
lea
int
adc
divb
repnz
cmpsb
sub
jae
sub
cmp
jp
and
scas
mov
mov
xor
lcall
mov
insb
push
dec
mov
mov
int3
shlb
int
inc
mov
xchg
xchg
jae
lds
iret
ljmp
repnz
std
mov
fldcw
in
adc
es
scas
decl
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
jle
loope
jle
inc
fwait
stos
roll
rcl
call
and
test
leave
shrd
or
dec
push
sub
shlb
xchg
cmp
and
xchg
sysret
mov
xchg
in
inc
cmpsl
push
repnz
add
xchg
pop
das
ljmp
pop
and
jmp
loop
aas
sub
push
rol
nop
xchg
mov
mov
pushf
cmp
push
add
das
cmpsl
mov
insl
cmp
outsl
and
jmp
dec
xchg
inc
add
lock
out
xchg
jl
cmp
movl
test
mov
xchg
xchg
adc
cmpsl
mov
pop
mov
xorb
stos
mov
daa
lret
push
lahf
sub
mov
cmpsb
in
mov
mov
aad
pop
rcr
int
add
cltd
push
pop
stos
jo
mov
iret
movsl
mov
xor
mov
test
in
int
add
gs
or
mov
and
fucom
adc
test
loopne
lds
mov
xor
mov
lods
ljmp
cmp
jo
loopne
jno
xchg
inc
test
sbb
dec
add
pop
sub
jns
in
jns
aad
call
sti
xor
aad
sub
mov
arpl
xor
lahf
cmpsb
sbb
push
sbb
jg
mov
cli
outsl
fnstenv
lods
fiadds
outsb
pusha
mov
and
js
into
insb
jg
xor
jae
movsb
sti
mov
int3
movsl
dec
add
stc
out
xor
popf
fadds
imul
mov
and
cmp
lcall
pop
divl
loop
leave
ja
and
mov
mov
xchg
mov
addr16
adc
fimuls
push
jmp
jbe
xchg
in
jo
mov
or
inc
imul
cmc
mov
mov
int3
pop
and
call
or
jmp
mov
mov
lods
jmp
scas
bound
addl
in
adc
stc
sub
outsb
adc
lret
icebp
cmp
into
cmpsl
sub
lahf
getsec
ljmp
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
mov
fcmovbe
fstpt
loope
jle
mov
xor
ret
and
mov
pop
lret
push
mov
jnp
fcomps
orl
or
rcll
pop
dec
push
mov
fwait
pusha
mov
ds
xchg
jns
in
hlt
inc
sbb
xchg
fs
xchg
test
inc
in
cmp
movsb
insb
inc
pop
out
inc
mov
xchg
xlat
inc
dec
or
rorl
int
sbb
enter
arpl
pop
mov
xchg
jg
je
adc
pop
popl
into
stos
xchg
out
aad
icebp
testl
test
fsubp
outsb
out
daa
xchg
shl
dec
xor
mov
rcll
mov
pop
lods
jns
std
stc
push
scas
mul
inc
or
xchg
add
xor
fstpt
xchg
push
pop
not
adc
lahf
pop
leave
lret
ss
push
cmp
or
mov
jns
fisubl
pop
jg
jae
sbb
ja
loope
pop
insl
add
int
or
into
adc
adc
ret
jb
pop
xchg
cmp
fcmovb
mov
mov
push
dec
jno
int3
sub
leave
sti
cmp
or
pusha
faddl
inc
dec
or
aam
dec
andl
and
push
arpl
and
repnz
or
in
loope
std
dec
jecxz
dec
adc
xchg
pop
shll
mov
push
sub
insl
xor
das
test
lock
sub
inc
sbb
xchg
xlat
insl
pop
add
or
icebp
add
bound
jmp
insl
arpl
shll
add
or
mov
sub
push
mov
rolb
jp
cld
insl
ja
fstpl
lock
mov
inc
inc
fistps
mov
jg
lods
jg
push
fsubs
gs
pop
cwtl
fiadds
add
xchg
xchg
adc
pop
cltd
add
cld
push
add
repz
das
arpl
push
xor
daa
cmp
lea
cmp
mov
in
insl
jge
scas
adc
mov
cs
xchg
sti
addr16
lret
sbb
ss
sbb
inc
sub
pop
xlat
sarb
cwtl
cmp
mov
stc
cwtl
das
fs
icebp
leave
shrl
adc
test
mov
or
sarb
sti
and
cli
jmp
mov
and
cmp
cmc
sarb
add
add
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
xchg
adc
roll
jle
js
jle
lcallw
movsl
cmpsb
jo
xor
icebp
mov
ficoml
in
pop
xor
aas
pop
xchg
icebp
mov
mov
and
add
cmc
pop
and
dec
sub
xchg
and
mov
iret
fcmovnu
xchg
int3
push
mov
pop
jo
repnz
push
pop
jle
mov
inc
ret
sub
lock
frstor
outsl
cmp
enter
fwait
pop
pop
add
popf
adc
hlt
in
xor
xchg
rdtsc
std
sub
ds
mov
addr16
xchg
or
je
cmpsb
mov
pop
mov
mov
in
repnz
lret
ds
loopne
jg
or
ljmp
push
test
add
fiadds
cmp
push
insl
pop
inc
jo
hlt
bound
lcall
clc
movsb
cltd
iret
lahf
xor
pop
iret
bound
lods
or
inc
mov
ja
int3
adc
fdivl
jmp
mov
int
rcr
or
cmpsl
sbb
les
add
sahf
add
jbe,pn
rcr
adc
in
paddsw
mov
test
and
mov
jg
bound
mov
mov
add
add
mov
scas
cs
jns
pop
lods
and
scas
icebp
pop
popa
jno
sti
ljmp
cmc
lods
mov
stos
mov
mov
lds
sub
dec
leave
xor
push
pop
xchg
jbe
mov
lea
stc
push
add
pusha
popa
test
mov
shr
sbb
pop
ss
xchg
or
xor
jle
mov
jno
out
sbb
in
mov
add
push
das
push
icebp
mov
ror
xor
inc
pop
lahf
int3
pop
outsb
mov
ss
test
mov
push
aad
push
outsl
fs
mov
in
test
push
sti
mov
shlb
xchg
dec
mov
mov
pushf
xor
scas
insl
scas
inc
js
push
and
jge
ret
inc
std
mov
jg
inc
or
xlat
or
add
pusha
fisttpl
shrl
aas
mov
rcll
jle
fists
add
ret
inc
inc
add
inc
or
add
add
add
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
pop
jno
scas
add
xlat
ds
sub
aad
out
fisttps
mov
add
leave
mov
pop
inc
jne
adc
jb
mov
cmpl
push
push
or
pop
call
or
imul
dec
cmp
mov
fcomi
mov
add
imul
mov
xchg
xchg
jmp
push
in
jno
das
in
mov
sub
cmp
sub
mov
gs
shlb
popf
dec
xchg
je
mov
vmwrite
sbb
lret
cmp
mov
dec
mov
ret
das
or
push
pop
test
pusha
xchg
and
push
pop
fsub
test
rcl
sbb
jmp
pop
jp
dec
imul
jmp
fucom
jge
or
jae
insb
movsl
out
adc
push
je
dec
or
jmp
fdivr
bound
scas
mov
test
sub
jns
cmc
loopne
lea
iret
mov
or
cld
jb
mov
aam
andb
je
lock
pop
pop
icebp
xchg
and
xor
sahf
ss
add
push
add
dec
mov
xor
in
bound
ds
aas
xorb
pop
mov
stos
mov
mov
mov
pop
add
dec
test
push
std
adc
fcmovne
mov
xchg
decb
dec
cmp
test
pop
mov
inc
jbe
xor
adc
jb
addb
pop
insb
subl
and
inc
out
shl
add
std
js
push
jp
dec
in
aad
fcomp
inc
out
out
push
push
mov
add
push
dec
movzbl
mov
mov
pop
lcall
pusha
jle
push
mov
add
or
nop
iret
mov
cmp
stos
int3
pop
dec
out
fdivrs
imul
xchg
cmpsl
mov
pop
lret
mov
bound
dec
add
gs
out
cmp
clc
fstpt
push
sbb
ret
mov
pop
mov
pop
popa
jo
push
test
jbe
loopne
pop
ljmp
movsb
xchg
sub
jecxz
jmp
iret
xchg
mov
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
mov
loop
jle
jns
jle
das
sub
sub
std
adcl
sub
mov
jl
aaa
pop
push
test
ljmp
xchg
jp
lods
jp
fisubrs
mov
fldcw
adc
cmpsl
add
cmpsl
add
fdivl
mov
sub
jnp
into
jge
movsb
jo
mov
add
mov
push
push
rorb
pusha
mov
fdivrl
out
adc
test
inc
mov
or
lret
ret
ds
lods
fmuls
addr16
sub
xchg
stc
icebp
or
cmp
add
sub
jns
and
iret
in
xchg
adc
inc
cwtl
and
jb
xchg
xchg
push
and
lea
es
and
aaa
out
add
les
ds
clc
cmp
call
xor
mov
lods
cwtl
ret
dec
push
js,pn
jnp
subb
jbe
bound
notb
imul
inc
push
ret
push
lret
mov
push
sti
mov
mov
ja
mov
xchg
dec
dec
cwtl
lret
imul
sub
rcrl
andb
jl
test
imull
jp
lcall
and
arpl
rorb
sbb
pop
fidivl
jns
pop
loope
addr16
pop
scas
add
xchg
mov
les
sub
dec
dec
add
lcall
mov
pop
addr16
or
sbb
pusha
push
lods
arpl
pop
mov
int
add
mov
jg
iret
or
sbb
mov
inc
fidivrl
jo
loope
xchg
popa
in
mov
fcomps
jg
push
xchg
cmp
imul
lds
mov
push
sbb
scas
adc
mov
stc
sub
mov
popf
mov
fcompl
rcrb
pop
fxch
add
push
data16
jo
xlat
ret
sub
test
daa
ja
cltd
mov
popa
aad
ss
xor
lock
mov
xor
lods
adc
and
and
jae
fisttps
jnp
mov
test
sub
push
xor
shlb
push
insl
or
jge
out
inc
ljmp
push
xor
xor
incl
filds
sbb
repnz
jnp
ret
fcoml
mov
fidivs
mov
push
addl
icebp
fwait
repnz
sbbl
scas
ds
hlt
das
and
jae
jge
xchg
mov
ja
imul
inc
xchg
faddp
jg
cmp
je
insl
cmp
scas
aas
sbb
lods
and
inc
into
repnz
in
out
out
inc
cmp
ret
adc
sarl
out
rol
int
hlt
cs
push
mov
jno
dec
lds
fs
in
jnp
cli
push
fucomip
sti
filds
lds
fldl2e
out
cmp
inc
repz
adc
lods
lea
adcl
jmp
adc
cmpsl
xor
clc
dec
mov
mov
cmp
xchg
fisttpl
and
std
mov
pop
les
inc
sti
pmuludq
and
repz
add
jp
xor
lea
jle
or
jmp
hlt
jmp
sub
lea
jbe
mov
pop
enter
sti
xor
cld
push
jb
add
jle
mov
jge
ficoms
scas
cli
jp
push
cmc
lds
mov
and
add
gs
jge
xchg
es
dec
mov
das
mov
test
stos
scas
jae
mov
mov
mov
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
lret
dec
xchg
out
jle
jo
jle
into
imul
lods
xchg
xor
mov
loopne
push
in
mov
call
mov
and
leave
cmp
out
adc
sbb
cmpsb
enter
xchg
aaa
js
cli
fcompl
cmp
cmp
mov
pop
rcll
cmp
imul
in
aaa
movsb
adc
push
jge
idivb
aad
mov
pop
add
loop
and
cmp
xor
jl
jb
mov
addb
mov
js
mov
rcrl
push
orl
bound
fldenv
mov
mov
xorb
inc
loope
xchg
adc
sahf
gs
loop
pop
arpl
push
mov
arpl
nop
scas
mov
adcb
add
leave
dec
fsubrs
js
xor
mov
arpl
insb
dec
stc
adc
lods
add
mov
mov
and
jle
mov
repnz
arpl
je
lcall
xor
stc
mov
dec
lret
jl
jmp
fnstsw
hlt
mov
adc
imul
in
push
gs
imul
mov
add
lret
shlb
arpl
fnstcw
push
adc
cli
je
imul
mov
jne
ds
push
sub
pop
iret
pushf
pop
int
rolb
daa
cmpl
cmp
ds
mov
xor
mov
and
enter
mov
es
adc
sub
dec
aam
pushf
or
or
add
lds
test
rcrb
in
xor
stos
ss
jno
test
mov
push
mov
jmp
inc
dec
and
pop
in
ja
loop
shll
mov
push
outsl
fwait
out
movsb
test
aas
or
fistpl
xchg
stos
repnz
fcoml
stos
dec
flds
lea
add
mov
push
push
push
movsb
rclb
mov
aaa
mov
push
or
jbe
inc
and
mov
daa
sub
lds
je
mov
outsl
rcrl
adc
cmc
outsl
cli
xlat
xor
mov
cmp
imul
into
int3
push
add
push
rcrl
ljmp
cld
ret
mov
push
aam
stc
sbb
jns
stos
and
xor
cmpsb
aaa
lods
pushf
sbb
sbb
add
loope
sti
sub
pusha
cld
lods
fcoms
xchg
fwait
lea
jge
andl
paddsb
dec
andb
push
add
sbb
cwtl
mov
shrl
push
negb
pop
add
fadds
xlat
dec
lock
add
adc
push
mov
icebp
fstpt
pop
dec
pop
pop
test
shll
shlb
dec
pop
xchg
pop
unpckhps
lret
subl
aad
pop
test
loop
dec
mov
imul
pop
sbb
repnz
mov
into
pop
std
shlb
mov
imul
jo
jns
cmpsl
sti
cmp
or
mov
adc
jb
movsl
lods
mov
sub
mov
lret
inc
movaps
shlb
xchg
test
das
mov
stos
out
mov
cmp
xlat
lret
lods
dec
mov
pop
mov
push
mov
jg
frstor
gs
and
xorl
cmpsb
or
sti
inc
xor
and
jae
add
xor
in
inc
shrb
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
pop
xchg
das
fisttpll
jns
jle
or
inc
push
xchg
test
ret
sarw
es
mov
and
or
pop
push
mov
hlt
ja
push
rorl
push
jo
lcall
mov
jns
lret
pop
mov
xlat
mov
jmp
mov
or
mov
cmpsb
dec
dec
popa
mov
int
xchg
rcll
jbe
xor
fcomip
shll
adc
pop
or
jg
dec
lahf
cmp
inc
out
cmp
push
pop
jecxz
js
mov
push
sub
popa
add
mov
push
ljmp
xchg
jo
insb
repz
movsb
add
test
jbe
dec
jno
pop
dec
repz
adc
test
mov
bnd
lods
outsl
push
mov
insb
fdivl
pop
hlt
ja
fcoml
fisttpll
mov
imulb
cmc
fwait
stc
rcrl
pop
push
add
imulb
push
jnp
ja
into
xchg
loopne
int
mov
sbb
mov
xchg
mov
sbb
repz
and
sub
movsb
pushf
test
cmp
ret
push
pop
dec
xor
iret
sbb
inc
sub
mov
repz
iret
mov
or
leave
xlat
pop
pop
repnz
mov
je
leave
call
hlt
jle
lret
enter
cmp
add
push
cmp
mov
mov
mov
pop
or
add
sti
cmp
pop
sbb
or
adc
inc
or
jp
or
lods
ret
sub
mov
add
sub
add
cmp
rcrl
ds
imul
lret
jecxz
push
push
mov
out
dec
adc
mov
inc
push
rcll
sub
mov
add
hlt
add
xchg
ret
inc
mov
leave
sti
inc
hlt
std
xchg
or
mov
push
xor
lods
cs
fwait
and
mov
out
xchg
jecxz
out
pop
sbb
addb
jae
push
sbb
pop
pop
push
jle
adc
mov
jne
fists
mov
ret
sbb
cmp
lcall
sbb
xlat
hlt
fcoms
fwait
pop
loopne
cmpsl
dec
jns
test
lahf
xchg
lret
out
fisubrs
fcomps
sub
ret
xorl
cmpsb
sub
mov
leave
bnd
aaa
adc
shrb
push
mov
lods
adc
in
fxtract
xor
les
lock
xor
adc
and
or
neg
rorl
arpl
xor
xor
jb
and
int
add
imul
or
and
xchg
sub
xlat
prefetcht1
fisttpll
cmp
add
cmp
call
and
jb
xchg
jno
sarl
int
test
dec
les
add
and
sbb
xor
and
inc
adcl
sbb
cmp
sbb
mov
popf
jb
cmp
sbb
mov
dec
adc
inc
jns
movsb
mov
cmp
mov
pop
cmp
inc
fdivl
mov
dec
xchg
cmp
data16
in
dec
repz
in
xchg
in
ja
cltd
out
cltd
testl
inc
mov
mov
fucomip
add
mov
inc
xchg
add
jg
or
mov
xchg
and
in
xchg
xchg
flds
or
cli
xchg
popa
sbb
aaa
ljmp
or
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fstps
add
idivb
jo
jle
mov
cmp
or
dec
mov
or
out
rclb
jo
dec
mov
and
sub
ret
hlt
inc
mov
jno
and
fnsave
sbb
ss
adcl
inc
minps
repnz
xor
fcoml
stos
fnstenv
jne
mov
scas
xchg
push
iret
push
mov
push
mov
push
pushf
add
fsubs
call
cs
std
in
xor
jnp
pusha
rcrl
sbb
sarl
sbb
clc
mov
cld
fisubl
jo
jb
pop
xor
push
data16
mov
aad
push
out
out
mov
inc
and
sub
jle
push
inc
mov
mov
fdivrs
testl
stos
add
repz
lock
dec
je
and
es
xchg
js
xlat
fiaddl
jb
adc
rolb
dec
mov
outsl
mov
scas
leave
into
outsl
push
bound
lods
and
push
cmp
and
int3
fsts
add
pop
testb
xchg
subl
int3
or
dec
inc
add
push
int3
in
pop
and
sub
xchg
or
pop
push
mov
js
jno
adc
mov
xchg
mov
fdivl
pop
arpl
and
imul
sarl
stos
push
testl
into
jg
xchg
clc
add
mov
std
pop
sbb
jp
aam
sub
dec
in
dec
push
incl
inc
or
imul
ljmp
cmp
pop
xchg
loop
fisubl
add
sub
decl
push
xchg
push
xchg
mov
repnz
mov
notl
xor
leave
mov
and
push
ss
jmp
popf
jae
mov
cld
pop
arpl
outsb
dec
mov
lock
mov
and
fstps
cmp
loopne
xchg
mov
mov
mov
aaa
add
iret
insb
cmpsl
jae
or
mov
inc
push
xor
xor
cmpsl
ds
and
push
lcall
jmp
mov
in
mov
in
jle
inc
loope
pusha
fwait
mov
lock
das
and
mov
jg
or
std
xor
push
add
ss
pop
frstor
pushaw
xchg
jle
add
cmp
mov
cmp
fsubrs
mov
cwtl
and
mov
push
es
pop
icebp
in
scas
sbb
fisttpll
not
cli
fmulp
dec
test
xor
and
rcrb
and
into
or
and
xchg
mov
shll
xchg
xor
xchg
mov
or
shll
nop
jl
and
pop
or
addr16
push
mov
movsl
fs
add
and
fiaddl
hlt
js
xchg
mov
outsl
ljmp
sub
lds
or
jecxz
test
cmp
cmpsb
pop
in
inc
lods
movsb
and
jge
mov
aad
aaa
leave
imul
mov
repz
outsb
nop
iret
xor
mov
outsl
movsb
clc
cmp
mov
sub
mov
sahf
mov
pop
clc
xchg
sti
cmp
shl
cld
in
adc
pop
dec
icebp
das
dec
mov
lret
dec
in
jo
cltd
shll
fldenv
mov
lret
pop
adc
nop
sub
adc
mov
xchg
sbb
xor
cmp
addr16
mov
movb
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
divb
jle
jo
jle
dec
sarl
xchg
in
data16
mov
mov
scas
xlat
testb
adc
leave
aas
clc
lds
iret
inc
in
shl
jle
and
jmp
sbb
jmp
sbb
jnp
push
mov
jbe
mov
mov
rcr
pop
adcl
pop
mov
inc
loop
loope
popf
jmp
call
pushf
into
movsl
jmp
dec
dec
leave
scas
movsl
jae
test
les
outsb
mov
dec
aad
mov
mov
mov
xchg
adc
test
mov
lock
mov
subb
dec
add
clc
mov
mov
stos
sbb
adc
sahf
push
in
sbb
push
xor
xchg
push
movsl
add
movsb
jae
ret
xchg
jo
lahf
mov
arpl
sbb
pop
aas
out
push
ficomps
test
push
das
inc
loope
dec
shlb
sbb
xor
movsb
fnsave
sub
push
mov
jo
add
push
jbe
or
mov
push
push
pop
int
jecxz
pop
into
sar
aaa
lret
das
xor
ret
lds
xchg
lcall
popf
xchg
dec
or
pusha
xchg
jmp
orb
push
inc
xchg
xor
repz
rcr
mov
dec
std
in
stos
test
clc
insb
xor
pop
pop
dec
push
test
lea
pop
movsl
mov
sub
in
jns
dec
cmpsl
mov
adc
jmp
sub
jbe
lods
mov
ja
shlb
mov
cs
repz
jge
ljmp
sbb
xchg
into
gs
xchg
test
stos
ljmp
scas
push
pop
push
mov
scas
outsb
sarb
pop
and
sahf
pushf
negb
mov
arpl
mov
dec
arpl
arpl
mov
add
fadds
dec
in
adc
scas
cmpsb
pop
pop
push
test
xor
test
lods
pop
mov
dec
push
movsb
push
dec
pusha
in
daa
and
or
and
jb
pop
ret
repnz
nopl
sub
adc
push
fisttpl
je
add
notl
or
pop
mov
cmp
adc
movsl
sbb
nop
adc
lods
adc
add
jns
shlb
mov
add
pushf
and
out
test
pop
lods
clc
sbb
mov
stc
lahf
sub
test
aas
xor
lock
scas
xchg
dec
arpl
add
mov
rcll
test
mov
mov
dec
mov
or
mov
out
cmp
xor
mov
pop
add
jmp
stos
sub
dec
bound
repnz
int
lods
or
out
out
test
out
and
jb
xlat
xor
aaa
inc
add
js
jo
jge
outsl
xor
insl
jo
and
adc
fiadds
shlb
andl
int
shll
mov
les
loopne
notb
mov
into
in
push
insl
std
pop
cmp
aas
push
loope
lock
mov
lcall
add
fucomip
sub
js
rcrl
cmp
cli
xor
inc
mov
stos
xchg
mov
pop
mov
dec
test
out
loop
out
jnp
xchg
lret
cmpsb
aas
ja
mov
aas
ffree
mov
add
sub
xor
shrl
mov
test
cmpsb
pop
add
ja,pn
shll
jg
push
cmp
pop
sbb
adc
test
push
push
mov
sub
popa
leave
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
lcall
jo
jle
mov
jbe
ficoml
inc
xor
xor
mov
add
insb
mov
and
inc
daa
and
int
mov
mov
les
and
fdiv
sti
stos
sbb
scas
xor
xchg
add
xchg
in
arpl
mov
fdivs
in
mov
ljmp
test
add
and
push
lret
dec
std
mov
mov
sbb
dec
adc
xlat
push
and
push
inc
lods
sub
mov
add
mov
pop
push
cmp
repnz
mov
popa
adc
cmpb
fidivrs
test
sbb
add
out
xor
add
fdivr
jae
push
rcr
lods
mov
inc
imul
shlb
enter
jno
stc
mov
loope
lea
out
mov
test
loope
xchg
repnz
jnp
dec
add
insl
xor
xchg
inc
jle
cld
sbb
jb
mov
stos
je
dec
dec
push
loope
rorb
and
es
xchg
icebp
jbe
andb
ret
mov
dec
or
test
jne
jnp
aaa
lcall
mov
xor
fisttps
jle
mov
mov
outsl
jns
pop
ret
subb
push
xchg
das
fsts
dec
sarb
out
adc
ss
aas
test
sbb
xchg
out
imull
loope
rcrb
or
pop
lret
rorb
dec
adc
or
inc
lahf
nop
jmp
jmp
call
mov
fs
mov
test
fs
xchg
push
ror
sbb
inc
ret
push
insb
add
cld
sub
and
mov
inc
cmp
xchg
into
xchg
stc
fisubrl
push
sub
add
add
cmp
insl
jecxz
pop
pop
call
in
xchg
addr16
fs
add
imul
aaa
add
cld
pop
xchg
xor
push
int
mov
ja
push
adc
fucomip
ret
int3
imul
jbe
ret
push
cmp
pop
ret
stos
cwtl
inc
rcl
push
mov
cmp
movsl
jne
inc
out
adc
cwtl
sahf
add
popa
dec
push
jae
std
negb
and
pop
out
aaa
or
cmpl
into
cs
inc
mov
mov
mov
add
lods
dec
push
test
xor
sub
pop
jno
sbb
je
jle
aaa
lock
push
pop
mov
xchg
jmp
cmp
sub
fidivrl
push
xchg
or
jg
les
sbb
insl
dec
inc
je
fisubs
loopne
mov
push
lods
imul
jo
int
cwtl
addl
adc
inc
mov
or
icebp
popf
insl
push
mov
int3
ret
push
mov
daa
ret
decb
mov
xchg
mov
lahf
cs
loope
push
pusha
jne
fisubs
fxch
mov
xchg
sbb
add
push
or
and
dec
adc
rorb
repnz
pop
gs
inc
daa
pop
int
and
xchg
mov
mov
or
aad
lds
or
jb
aad
pop
cltd
pmulhw
in
sbb
sub
and
imul
addr16
aas
hlt
pop
adc
push
sbb
jl
xor
sub
sti
ds
ffreep
cmp
daa
dec
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
das
xlat
enter
jle
jo
jle
sub
call
lock
mov
push
or
fucomip
or
jp
push
out
jmp
jge
lret
sbb
insl
notb
lea
pop
jge
or
sub
out
pop
test
cli
mov
pop
mov
mov
jbe
add
jge
icebp
jl
pop
js
outsl
cmpsl
daa
xor
push
dec
jle
loope
pusha
or
in
scas
push
pop
shl
out
cmpl
lcall
repz
pop
push
fidivl
cmc
or
xchg
pop
or
divb
jp
xchg
lea
or
jne
add
mov
fldenv
xorl
jns
adc
stos
sub
pop
xor
adc
mov
add
cld
data16
hlt
icebp
mov
xor
mov
jg
lahf
rcll
into
sub
aad
lock
movsl
int3
jbe
xchg
xlat
out
bound
fnstenv
jnp
adc
pop
cmp
add
sub
sub
push
mov
lods
push
popa
dec
push
ret
xchg
mov
fiaddl
lret
lahf
gs
sbb
xchg
and
cltd
cld
loopne
movsw
stos
in
dec
and
inc
jb
pusha
xor
adc
repz
imul
cli
xor
mov
ljmp
in
ret
fucomp
push
jg
addr16
test
push
xchg
ljmp
jl
and
cmp
push
je
loop
and
stc
mov
cmpsb
cmpsl
scas
std
and
scas
lret
xchg
lea
sbb
loope
add
push
mov
popf
push
repnz
mov
add
cmp
sub
pop
dec
xchg
loopne
inc
add
jmp
std
inc
shll
xchg
roll
add
fidivs
inc
jl
push
inc
xchg
mov
push
inc
or
add
add
mov
mov
mov
pushf
lods
mov
movsb
xchg
mov
movsb
mov
scas
dec
shr
iret
jle
inc
pop
and
cmp
jg
mov
mov
ds
mov
out
jb
mov
arpl
ror
bound
repz
outsl
pop
mov
dec
out
jae
dec
stos
mov
dec
and
fildl
stos
orb
cmp
dec
andb
outsl
mov
or
xor
dec
movsl
and
ljmp
add
rcrl
sbb
ja
add
cmp
mov
int
fidivrl
sbb
sbb
adc
mov
and
pop
out
test
push
push
sbb
mov
arpl
test
mov
mov
push
push
pop
lock
pop
frstpm(287
lcall
movsl
xor
inc
sub
push
nop
in
jg
add
cltd
jns
mov
sbb
adc
cmp
adc
imul
push
sbb
call
movl
and
andb
mov
or
inc
loopne
ja
out
fmuls
sub
ret
jp
or
sub
push
loopne
addr16
pcmpeqb
add
jnp
xchg
mov
gs
cmpsb
adc
call
icebp
nop
cmpsl
mulb
icebp
cmpsb
mov
jo
sub
mov
xchg
dec
mov
pop
sub
push
gs
adc
mov
inc
adc
push
xor
xchg
sahf
mov
dec
jle
add
and
pop
andl
jbe
cltd
aaa
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
pop
jle
call
jns
jle
mov
jmp
mov
test
push
pushf
in
cwtl
cmpsb
adc
incl
scas
arpl
aam
je
hlt
mov
mov
lock
aaa
aad
loop
test
imul
insl
adc
mov
mov
setnp
mov
pop
iret
shlb
incl
scas
psubb
aaa
stos
aas
fcmovu
xchg
pop
and
outsb
movsb
or
mov
lret
push
xor
xchg
adc
lret
ds
xor
xor
ljmp
xchg
jl
mov
sub
inc
jno
xor
mov
add
pop
iret
mov
sbbb
cmp
scas
sbb
stos
adc
mov
mov
mov
push
aas
out
and
jg
xchg
or
scas
dec
adc
mul
divb
jl
notb
imul
inc
sbb
pop
adc
popf
mov
leave
dec
movsl
push
leave
xor
icebp
test
adc
xchg
mov
jnp
mov
test
xchg
sub
lret
shrb
add
shr
imulb
mov
push
dec
sbb
xchg
sbb
popa
mov
jle
sub
pusha
xchg
into
sub
inc
push
or
dec
std
and
push
lds
jnp
mov
mov
dec
add
push
lds
cmp
mov
add
fisubl
adc
adc
pop
xor
nop
mov
addr16
mov
xchg
subb
ret
sub
push
pop
insb
fnstsw
cld
in
push
movsl
push
scas
or
fdivrp
fs
es
loopne
pop
sbb
jne
cmpsl
ja
or
inc
mov
sahf
dec
test
xor
sar
icebp
cmp
mov
pushf
lcall
pop
mov
cmp
mov
in
out
lods
inc
dec
lods
jecxz
daa
mov
xor
mul
push
sub
pusha
int
sub
adc
test
fs
lods
dec
pop
xchg
lods
inc
addr16
outsb
out
sub
sbb
jl
lock
dec
iret
fcmovnu
dec
hlt
sbb
pop
sahf
std
out
int
bswap
sub
lahf
and
cli
rcrl
cld
lret
pop
and
or
mov
fdivs
leave
imul
testl
in
aas
dec
adc
xchg
and
aad
enter
mov
call
aam
nop
mov
inc
addr16
shll
aad
clc
clc
imul
mov
ss
scas
les
movsb
or
je
xchg
lods
rorb
mov
sbb
and
add
sub
ret
mov
xchg
cmpsl
dec
xor
push
mov
push
test
push
enter
pop
loope
jp
pop
sbb
pusha
shlb
scas
lods
inc
loope
sti
pop
or
stc
cmp
int3
jp
cmp
gs
mov
inc
cltd
push
into
mov
jnp
adc
jmp
push
cmp
pop
sub
xor
or
push
sbb
jns
test
movsb
mov
test
xchg
pop
adc
loope
aam
fwait
add
push
in
mov
jns
leave
inc
nop
outsl
sub
and
adc
int3
sbbb
jg
push
and
push
adc
xchg
out
jns
divl
jne
ja
inc
outsb
pop
adc
movlps
xor
in
sbb
leave
cmp
adc
mov
pusha
fnstsw
sub
das
jnp
insl
add
push
xor
sbb
ret
pop
mov
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
mov
cmpb
jns
jle
jge
rolb
je
in
cmc
ret
ret
jl
clc
ss
pop
out
mov
idiv
mov
mov
adc
das
pop
add
mov
or
out
lds
popf
repz
mov
push
mov
inc
sbbb
ret
cmp
adc
jl
das
push
cmpsl
jbe
mov
dec
shll
mov
cmpsb
shld
pop
aad
aam
sbb
jne
and
sub
mov
fsubrs
test
sub
hlt
enter
sub
hlt
sti
xchg
xchg
cmp
arpl
imul
jae
mov
mov
jle
ja
sarb
cld
inc
sahf
or
mov
imul
jg
fxch
and
test
ret
sbb
rcl
mov
insb
dec
fldz
push
test
lea
shll
lahf
mov
or
cmpsl
popf
js
and
scas
subb
fndisi(8087
jns
pusha
outsl
nopl
mov
lahf
xor
adc
mov
mov
aad
fmuls
mov
mov
int
push
sbb
or
mov
in
mov
jne
addl
loop
xor
pushf
mov
mov
mov
out
shrl
rcrb
rcr
cwtl
call
sub
cmp
je
sub
stos
xor
sbb
jmp
lods
je
mov
insl
faddp
hlt
xchg
dec
stos
jecxz
enter
fsubs
gs
call
adc
outsl
dec
std
clc
xor
mov
mov
dec
popa
pop
cmp
mov
jnp
mov
sub
jno
add
mov
in
xchg
popf
dec
js
iret
fs
fs
xchg
and
cli
jge
lds
push
add
mov
movsl
cmpsb
cmp
pop
lods
movsl
fidivl
add
mov
int3
jg
mov
xor
insb
jp
in
dec
sub
cli
je
jl
dec
sahf
adc
insb
ror
iret
cmp
add
xor
jae
pusha
fstl
test
jg
lea
fstps
leave
xchg
and
jecxz
imul
sub
gs
aas
jo
dec
xchg
mov
inc
in
or
mov
or
add
and
roll
mov
inc
inc
mov
xor
outsl
ret
not
jnp
or
cmpsl
out
push
outsl
xor
cmp
mov
inc
cs
out
sbb
lret
cs
pushf
hlt
push
jp
nop
test
add
fsub
and
pop
ss
jb
ss
mov
sbb
sbb
iret
call
dec
mov
add
or
sub
icebp
add
sub
xchg
xchg
adc
pop
repz
add
dec
xchg
add
popa
sub
addb
cmp
or
lods
movsl
fidivs
jns
addr16
test
shll
inc
fcmove
sub
pop
ljmp
xchg
xchg
xlat
mov
adc
ret
and
fsubrs
aam
cmp
rorb
stos
jecxz
inc
adc
dec
popl
and
sahf
jbe
pop
sbb
xchg
jle
cwtl
mov
jnp
mov
mov
xchg
push
and
or
lods
pop
imul
pop
mov
movsb
lock
lcall
push
and
and
sub
out
enter
jns
add
rorl
loope
outsl
ficomps
push
mov
mov
ds
mov
jg
sti
ret
pop
jno
sub
addr16
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
fnstcw
jle
jo
jle
mov
adc
fsubr
dec
cmpsb
xchg
movsb
adc
hlt
jns
mov
and
inc
dec
outsb
aam
mov
mov
test
xor
or
dec
jmp
xor
push
movsb
mov
enter
in
scas
sub
enter
in
sub
test
jmp
dec
mov
add
mov
outsb
pop
loopne
cmp
loop
stos
std
dec
xchg
lea
in
ret
fldl
xchg
std
into
sarb
clc
xchg
pusha
in
mov
out
loope
xchg
in
aaa
mov
inc
pushf
sbb
add
ljmp
cmpsl
sub
xor
in
push
aaa
jge
jge
push
scas
sbb
jae
nop
dec
adc
adc
xchg
in
test
js
mov
outsl
xchg
ror
scas
mov
or
xor
ds
sub
iret
rolb
jbe
mov
jbe
scas
inc
jbe
pop
lock
inc
clc
add
mov
cmc
add
mov
mov
pusha
scas
mov
xor
push
sbb
addr16
jle
cmpsl
xchg
in
jno
sub
bound
insl
cmc
add
scas
dec
popa
add
cmp
xchg
xor
xlat
mov
push
std
inc
notb
rcl
add
sbb
mov
inc
and
pop
and
dec
xor
imul
sub
adc
lahf
stos
arpl
jg
inc
cmp
cmp
push
inc
jnp
xor
fsubrs
jl
sbb
xor
sbb
loopne
flds
inc
repz
sti
pop
stc
xchg
add
imul
ret
jo
xchg
in
sub
repz
and
enter
adc
sub
ljmp
aad
pop
cmp
inc
pop
call
xchg
lret
and
repnz
imul
sbb
mov
push
int
fdecstp
js
stos
mov
shrl
mov
leave
push
mov
cmpsb
in
dec
clc
out
in
mov
push
repnz
dec
dec
xchg
dec
inc
ret
add
sbbb
push
xchg
lock
aaa
data16
loopne
in
lea
divb
fwait
push
ljmp
jb
jmp
and
push
lea
imul
mov
mov
cltd
cltd
fnstenv
bnd
mov
shlb
lcall
or
mov
xchg
imul
in
sub
cmp
aam
je
gs
and
push
or
popa
insb
jnp
inc
jp
in
insl
sub
lahf
cwtl
jbe
movsl
lcall
pushf
addr16
xor
mov
cmpsb
lods
or
xchg
push
mov
jbe
jb
push
mov
mov
insl
daa
mov
scas
adc
out
xor
ja
lds
pop
push
push
lock
cli
or
lahf
jle
and
fisubrs
pop
loopne
lock
xor
fwait
jns
jns
jo
sub
adcb
jno
lcall
aaa
cmp
sub
cli
int
inc
test
cmp
loop
inc
lea
ret
inc
in
jns
shll
jno
fs
shll
or
mov
cmp
mov
clc
scas
dec
push
dec
fimull
pushf
imulb
jae
xor
mov
jbe
cmp
push
test
fdivrl
divl
mov
fcoml
fdivrl
jno
dec
add
dec
shll
or
inc
push
mov
cmp
insb
or
mov
mov
inc
push
xchg
add
lret
ficomps
add
jmp
cmp
dec
mov
rolb
fs
fimuls
jle
lds
insl
imul
lds
jnp
xchg
push
xor
sbbb
aad
fsub
push
sahf
imul
stos
leave
cld
mov
repnz
inc
adc
pop
enter
aam
xchg
js
sbb
stc
das
sbb
sbb
leave
pop
stc
xor
push
sarb
and
adc
sbb
inc
sarl
and
mov
mov
repz
jmp
bound
cmp
mov
inc
ss
push
into
cli
popa
popf
cmpsl
cs
dec
push
fndisi(8087
inc
sub
xchg
lea
and
ds
ljmp
sub
cmpl
bnd
jmp
xor
aam
aas
in
mov
repz
outsb
mov
fistl
aas
scas
movsb
stos
pushf
mov
scas
mov
inc
inc
in
or
mov
cmp
js
dec
aad
and
push
cwtl
mov
loopne
in
pop
hlt
sub
in
sti
into
inc
rcl
pop
pop
pop
test
and
call
cs
test
mov
loopne
cld
or
sbb
mov
enter
xlat
or
cwtl
inc
adc
stc
pmaddwd
decb
adc
mov
xchg
sar
inc
inc
into
aad
out
xchg
cld
ret
sub
scas
mov
out
mov
in
mov
jne
xor
dec
sub
js
call
cmp
xlat
loopne
push
sub
popl
les
jmp
rcrb
xor
cmc
cmc
fnstcw
or
and
push
idiv
dec
out
sub
fmull
not
pushf
cmpsl
mov
leave
fs
mov
fstps
cmp
repnz
dec
push
jg
inc
out
inc
xor
iret
cmp
fsubl
xchg
inc
push
lcall
clc
cld
outsl
scas
lret
decl
or
or
xchg
popa
xor
cmp
adc
sub
ja
orl
clc
cwtl
lock
mov
jno
push
fldt
out
cwtl
dec
add
outsl
daa
xor
in
fucomi
roll
repnz
jle
call
mov
or
mov
jae
das
lds
pop
mov
mov
aaa
cli
and
js
divl
push
decl
pop
int3
notl
pop
pop
andb
ffree
in
cmp
cltd
ret
ret
sbb
mov
jns
cmp
addr16
push
mov
cmp
setns
leave
mov
mov
add
jnp
xchg
or
lret
mov
jecxz
mov
psllw
mov
mov
mov
aas
lahf
xchg
jmp
mov
in
adc
mov
js
jo
sbb
push
lods
and
mov
push
or
mov
dec
jae
fwait
popa
mov
pop
xchg
xor
decl
popa
insl
mov
xchg
fisttpll
push
dec
inc
lds
rorb
addr16
pop
pop
repz
shlb
mov
out
inc
mov
dec
fsubrs
dec
fs
xchg
push
sub
out
cli
add
push
mov
loope
inc
push
sub
inc
fstps
imul
xor
fcoml
and
outsb
imul
jns
loope
stos
das
adc
cltd
ss
stos
in
mov
push
mov
clc
pop
fwait
call
fcmovb
fmuls
xchg
mov
pop
mov
mov
mov
mov
mov
mov
icebp
inc
fsubl
xchg
cmp
and
movsb
pop
pop
ror
icebp
push
orps
mov
dec
xchg
pop
les
movsl
sbb
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
cmp
xor
jle
jns
jle
push
mov
push
mov
cmp
aam
pop
scas
test
test
pop
out
jl
arpl
jns
icebp
adcl
and
cmp
pop
mov
lods
insl
inc
mov
xor
fisubrs
repz
loopne
sub
xchg
jb
sbb
rolb
hlt
or
rolb
add
aad
negl
idivb
sub
jne
mov
push
pop
adcb
out
call
cld
ret
scas
clc
lock
test
sbb
gs
sub
and
add
cmp
hlt
enter
add
mov
icebp
sbb
adc
and
rclb
xchg
xor
lock
lods
jl
pusha
mov
and
insb
xor
inc
enter
stc
aam
daa
dec
cmp
shll
out
call
out
fdiv
cmp
shll
push
lret
jb
push
arpl
stos
jb
les
xchg
les
leave
cwtl
add
and
push
ror
adc
fcom
mov
test
jne
pop
adc
fmuls
adc
push
fisttpll
aaa
out
inc
jno
cs
icebp
test
je
xchg
sub
js
aam
cli
sub
or
and
pusha
inc
out
or
les
cmp
cli
fwait
shl
mov
call
andb
stos
mov
iret
mov
movsb
cmp
push
fldl
xchg
and
dec
jne
mov
lock
xlat
ss
adc
shlb
aaa
cltd
je
dec
xor
aaa
xor
mov
pop
cld
sbb
rcll
adc
repz
mov
fcmove
call
dec
xchg
jle
dec
add
pop
mov
and
mov
cmc
imul
jns
mov
lcall
idivb
aas
ffreep
cmp
sbb
mov
push
push
jp
inc
mov
jg
add
xchg
pop
shll
in
pop
in
xchg
cmpsl
iret
mov
imul
sub
mov
stc
outsl
nop
xchg
fdivs
scas
ss
int
mov
stos
cmp
inc
xor
sub
stos
sub
loopne
sbb
xchg
lods
je
stos
stos
xchg
cmpsb
mov
scas
lcall
xchg
xlat
add
dec
icebp
cmc
xor
jbe
inc
mulb
outsl
out
mov
cltd
mov
lret
cmpsl
sub
scas
pop
mov
inc
jns
and
sbb
mov
fstpt
dec
cmpsd
pop
xor
sub
cli
cmp
cld
repnz
data16
aam
sub
add
sub
sbb
mov
jecxz
lcall
js
clc
movsl
xchg
int3
adc
cmpb
or
jno
mov
jne
nop
test
insb
pushf
adc
loope
jb
sub
js
mov
shll
pop
test
dec
mov
xchg
js
addr16
arpl
ds
jecxz
rcrl
pop
mov
mov
shl
jnp
dec
add
fstl
dec
mov
xchg
sarb
inc
int
pop
push
fnstcw
sub
daa
loopne
andl
in
nop
add
jnp
cmp
and
cmp
jo
ja
push
inc
jmp
xlat
sub
dec
sbb
jle
aaa
aam
arpl
add
enter
xchg
pop
movsb
lods
ja
pushf
popf
in
adcl
jns
movsl
rcrl
sti
adc
enter
push
dec
xchg
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
pminsw
orb
jle
jo
jle
lahf
cmp
push
fwait
popa
mov
add
fsubl
pop
or
adc
pop
jae
les
push
loopne
add
test
and
mov
dec
mov
fmuls
push
xchg
pusha
sub
and
insl
xor
cmp
mov
mov
or
add
rcrb
and
sub
jle
mov
and
or
or
pop
pop
and
incl
dec
cmp
insl
and
jo
aas
adc
mov
out
cld
add
iret
icebp
popf
push
sbb
stos
sbb
cmpsb
add
mov
mov
jo
in
xchg
stos
pushf
xchg
ret
cltd
ret
add
mov
sbb
paddusb
imul
inc
and
mov
test
fstl
sub
or
inc
jp
and
mov
call
jg
mov
repz
or
mov
lcall
pcmpeqd
lahf
xchg
mov
push
fsub
test
sub
movsl
xor
inc
jg
cs
push
xchg
aaa
dec
lret
lahf
cmp
mov
or
mov
add
stc
fdiv
xchg
inc
pop
std
jo
mov
repz
nop
lock
xor
icebp
fisubrs
test
ds
ficompl
fisttpll
imul
imul
call
inc
pop
aaa
lahf
rcr
lea
rclb
dec
xchg
out
xor
jmp
js
dec
or
adc
cmpsl
or
mov
jecxz
jno
loope
xor
lea
cmp
inc
les
loopne
or
sub
push
out
xlat
pop
loop
out
dec
cmp
jmp
js
xor
je
scas
mov
imul
dec
mov
mov
mov
lock
sarl
mov
dec
cmpsl
lcall
dec
inc
cmp
or
and
sub
pop
ja
push
popa
add
push
ljmp
push
popa
xchg
inc
jnp
xchg
mov
ja
ret
sbb
jo
and
xor
cmp
mov
enter
adc
sub
adc
xchg
pop
je
lret
iret
fbld
mov
lods
fidivs
mov
mov
inc
test
hlt
push
addl
out
jmp
cli
sub
and
fcomp
sbb
push
mov
pop
jge
rorl
divl
cmp
mov
jp
mov
out
sbb
addr16
lcall
sbb
mov
les
clc
sbb
mov
fmuls
cmp
stos
fildll
std
out
or
mov
je
or
jecxz
icebp
lea
mov
dec
push
pop
mov
mov
xchg
xchg
push
pop
mov
sahf
cwtl
ljmp
iret
lods
mov
cltd
fwait
jb
iret
insl
push
mov
mov
adc
and
ja
xor
jb
out
jge
mov
pop
not
or
test
jmp
imul
jp
rol
and
and
add
ljmp
push
xlat
mov
inc
xchg
xor
sarb
jo
js
lods
ja
pop
cwtl
cmpsb
add
jnp
sbb
or
ss
jnp
pusha
fcoms
push
pop
addr16
outsl
lock
mov
js
xchg
add
loop
fwait
sub
lahf
dec
sub
pushf
test
mov
xor
xor
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
xchg
shlb
int3
sahf
jle
jo
jle
js
sbb
aad
int3
and
or
jbe
stos
push
xorl
cmpsl
adc
fisubl
push
cmpl
adc
out
dec
add
repnz
test
repz
xchg
inc
adcb
data16
xor
fs
dec
pop
int
inc
and
repnz
out
sub
orl
gs
cmp
dec
dec
jmp
loope
pop
mov
xchg
cmp
ss
pusha
pop
push
int
sub
dec
popf
jge
mov
scas
adc
cmp
daa
mov
loopne
mov
in
and
adc
sbb
jmp
jl
or
gs
test
or
fs
push
inc
or
fisubrl
call
xchg
es
scas
xchg
push
outsl
stos
mov
fbstp
push
sub
mov
ss
fistpll
ficoms
aaa
fisubrl
outsl
aas
xor
arpl
fwait
sbb
jmp
pop
adc
push
push
cmpsb
xchg
mov
mov
popa
sub
stc
pop
fidivrl
arpl
aas
int3
fmuls
daa
fstpl
leave
cld
jle
jae
fmuls
loopne
xchg
adc
lea
cli
in
sbb
sub
aad
jae
add
mov
lds
loopne
dec
sbb
push
decb
inc
stos
lret
out
dec
cmp
push
aam
out
in
lea
cwtl
mov
pop
cld
addb
push
sbb
jle
jbe
hlt
push
out
push
shrl
or
fcoml
call
xchg
jp
gs
mov
sarl
and
decl
jle
out
push
das
inc
mov
mov
pop
mov
xor
cmp
xchg
cmp
sub
out
adc
mov
int3
fisttpll
sahf
xchg
ret
mov
cmc
sbb
or
out
mov
outsb
negb
xor
inc
iret
lcall
and
fwait
xor
and
cmp
push
dec
es
negb
sti
aas
insb
loopne
cmp
jecxz
cmp
aad
fidivs
test
lods
mov
imul
aaa
jecxz
push
cltd
jp
popa
sbb
aaa
cltd
push
arpl
shll
xor
pop
push
scas
imul
lahf
pop
push
add
imul
push
fldenv
data16
enter
mov
sbb
ret
lods
xlat
cmp
dec
lahf
fsubl
stos
inc
jecxz
adc
jnp
jp
lea
outsb
stos
cltd
jbe
cmp
cmp
sub
mov
leave
shl
arpl
jle
rolb
aam
pop
in
and
adc
out
insl
inc
sbb
cmpsl
sahf
sub
push
and
jbe
mov
scas
in
dec
xorl
cld
orb
xor
pop
and
or
mov
das
bound
add
sbbb
lea
rol
adc
and
dec
shrb
push
xor
aas
jno
fstpl
xchg
adc
les
int3
es
push
aaa
xlat
imul
test
ja
push
jge
insb
or
les
pushf
add
inc
icebp
in
mov
or
inc
sub
pop
dec
lods
rorb
push
xor
xor
jbe
out
push
dec
cmp
aam
push
daa
lock
and
xchg
xor
jno
lcall
scas
dec
cmpsb
pop
mov
out
jne
enter
and
dec
and
test
das
cld
dec
mov
or
in
lods
lahf
jns
jns
mov
cmp
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
movsb
shl
and
jo
jle
hlt
rclb
mov
jnp
push
xor
fisubs
mov
push
fidivrl
ficomps
das
rorl
hlt
fdivrs
adc
stc
dec
ss
pop
sbb
lret
ret
jno
add
pop
imul
mov
imul
int3
mov
sbb
inc
jno
pushf
lods
cmp
mov
in
push
push
dec
sub
dec
fwait
stos
clc
stos
das
dec
mov
dec
pop
arpl
int3
stos
xchg
loope
mov
repnz
shll
add
sbb
js
cmp
push
mov
cmp
mov
ds
pop
adc
add
icebp
jnp
push
movsb
lcall
adc
cmpsb
mov
pusha
pop
push
xor
pop
in
movsb
and
mov
and
fildl
push
test
jmp
les
das
aas
lods
push
cmp
shrl
and
xchg
adc
jecxz
daa
sub
cli
ss
pop
lock
es
push
cmp
insb
ss
push
xchg
lcall
and
out
mov
jns
ljmp
int3
cmc
daa
mov
data16
jne
jg
out
jg
repz
ljmp
push
xchg
dec
lods
add
mov
dec
int
popa
cld
cltd
std
shr
push
mov
test
mov
fdivrl
subl
pop
mov
in
out
cmp
pop
loop
push
int
xor
daa
mov
push
add
and
cmp
jae
push
inc
lret
and
sub
iret
loop
inc
or
add
insb
or
sti
jne
mov
xor
dec
and
cltd
sbb
jg
xchg
xchg
cmp
sub
hlt
mov
xor
cmp
bswap
sbb
out
mov
mov
cmp
xor
es
pusha
repz
cmp
sti
pushw
jge
mov
outsl
inc
mov
sbb
mov
cwtl
push
dec
repz
xor
xchg
adc
test
out
cmp
mov
scas
out
sub
les
sub
subb
mov
mov
adc
in
fmuls
lahf
aas
out
out
mov
sti
cmpsb
int
test
adc
sahf
aas
jae
pop
push
dec
adc
rcll
ret
js
in
icebp
pop
pop
mov
push
dec
inc
adc
pop
dec
nop
pop
sub
ret
sub
push
sti
jmp
xchg
pop
cwtl
xor
dec
inc
in
pusha
fwait
loope
mov
push
adc
cmp
ss
das
mov
push
or
stc
imul
xchg
int
mov
pop
dec
outsb
lcall
mov
xor
push
jno
cli
in
jno
out
lret
iret
movsl
dec
cmp
push
xor
push
ret
cmp
push
je
mov
push
jmp
into
cld
jne
stos
jns
int3
movsb
inc
push
scas
add
cs
pop
and
pusha
cmp
nop
or
pop
inc
and
stos
fiadds
jg
popa
mov
mov
xor
mov
jecxz
mov
ficoml
call
mov
es
insb
les
pop
lock
mov
daa
mov
add
arpl
adc
dec
add
and
and
or
cmc
mov
cmp
popl
in
pop
push
adc
in
popa
mov
sbb
leave
push
mov
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
add
jo
jle
inc
mov
dec
sub
jl
adc
pop
sti
sub
mov
sarl
pop
addr16
sub
shrl
ljmp
xor
sbb
mov
mov
cmc
pop
push
loopne
add
xchg
cld
sbb
sarl
into
test
cli
cltd
jne
sbb
mov
mov
xchg
arpl
je
movsb
fstp
sbb
and
mov
or
cs
ret
cltd
insl
mov
or
pop
popa
fincstp
imul
stos
std
in
mov
cmp
mov
fwait
mov
push
repnz
pushf
aas
mov
sbb
popf
mull
insl
pop
pop
push
mov
pop
mov
popf
mov
cmp
xchg
fs
out
push
pop
or
clc
jne
xor
cmove
or
dec
out
mov
call
push
clc
sbb
mov
aam
add
fistl
dec
mov
inc
xor
and
call
pop
arpl
xchg
fdivrl
mov
inc
jmp
cmp
setg
ret
xorb
imulb
xchg
sbb
cld
ret
push
inc
pushf
jle
decb
je
mov
je
or
mov
lahf
loope
jne
cs
adc
add
aam
add
rolb
stos
inc
pop
addr16
in
aad
add
xor
cmp
dec
leave
jne
and
dec
and
inc
ret
nop
hlt
rclb
stos
cmpl
adc
sub
lds
fists
lds
adc
mov
mov
jecxz
subl
das
enter
stc
and
mov
xlat
push
pushf
sub
mov
xchg
and
jae
add
dec
pop
jle
sub
sti
ret
sarl
std
jns
xchg
pop
leave
test
iret
popf
repz
lock
dec
cwtl
pusha
or
push
test
jns
pop
in
mov
scas
je
stos
iret
jae
dec
mov
mov
dec
pop
xor
out
adc
test
adc
inc
sub
mov
incb
popf
mov
nop
int3
mov
dec
mov
pop
call
insb
sbb
cmp
repz
ror
jns
jae
aaa
arpl
xor
xor
stos
sbb
pop
cmp
js
jmp
and
jmp
sahf
xor
adcb
sbb
lds
pop
mov
subb
mov
addl
shll
cmp
out
adc
pop
pop
cmc
mov
fisttpl
sub
adc
push
movsl
ja
and
pop
imul
int
push
pop
repnz
push
inc
adc
nop
add
xchg
outsl
cmp
shrb
cmp
lock
popf
popf
inc
pop
adc
push
pop
pop
iret
xor
dec
popf
xchg
adc
test
ss
das
inc
xor
inc
jmp
loopne
or
jg
push
mov
jp
mov
sub
pop
call
pop
cld
xchg
bound
jle
orb
add
push
dec
xchg
fs
hlt
fs
or
push
lret
sbb
cld
test
push
pop
cmp
dec
inc
nop
or
jnp
dec
dec
jnp
cmp
rcll
lret
xor
add
call
add
pop
fs
push
mov
push
mov
cmp
push
les
in
rorb
daa
fwait
mov
repnz
jns
sbb
dec
shr
scas
pop
aas
gs
test
pop
out
add
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
adc
jle
jns
jle
sbb
scas
subb
cltd
lods
out
in
shl
mov
movsb
adc
xchg
inc
cmp
mov
pushf
xor
flds
inc
mov
stc
mov
inc
insl
lods
cmp
pop
mov
jns
stc
dec
mov
jmp
ret
iret
xlat
fst
fs
dec
loop
pop
bound
push
push
out
push
pop
jb
xor
inc
in
push
push
mov
xchg
mull
cmc
int
lahf
out
jmp
mov
push
mov
bound
ljmp
aad
mov
scas
ret
cmpsl
cli
lods
sub
ret
sbb
sub
and
mov
mov
jmp
vcmpunord_ssd
not
lret
xchg
inc
pop
enter
sbb
dec
mov
aaa
scas
cs
sbb
les
dec
xchg
addr16
in
in
mov
pop
mov
daa
loope
pop
out
dec
mov
sbb
pop
xchg
mov
jbe
push
xchg
or
mov
pop
rcrb
mov
and
sbb
jmp
pop
push
rclb
sub
xchg
xchg
pop
out
dec
fists
pop
sbbb
data16
out
ja
idivl
nop
push
imul
adc
push
scas
jnp
jle
mov
lret
aad
shr
mov
ret
adc
dec
icebp
adc
jge
mov
sbb
xor
pusha
sti
sbb
std
dec
out
or
adc
lds
outsb
cmc
and
jnp
or
adc
ja
dec
imul
mov
aaa
pop
jns
adc
addr16
imul
mov
mov
mov
mov
pop
hlt
mov
jmp
es
pop
inc
aaa
lds
aaa
movsl
jns
outsb
fstps
jbe
rcrl
xor
push
mov
adc
cmp
push
pop
mov
mov
xlat
xchg
lods
cmp
jg
jp
inc
pushl
xchg
sub
fcomip
mov
das
xchg
ja
insl
rcrl
pop
mov
fwait
subb
adcl
test
inc
clc
fs
mov
mov
pop
movb
roll
adc
or
dec
xchg
repz
jmp
push
lret
fstps
jae
xchg
mov
push
adc
mov
adc
push
stos
xor
es
add
into
mov
nop
lcall
sbbb
sub
inc
pusha
lret
dec
pop
nop
inc
mov
dec
and
lods
scas
cmp
jl
adc
je
inc
mov
pop
in
notb
mov
add
in
insb
cmp
out
scas
mov
pop
lcall
mov
out
jae
or
push
jmp
inc
sarb
push
cmp
adc
push
jmp
jle
jl
lock
daa
cmp
test
in
scas
xchg
out
imul
push
lock
xor
sbb
push
or
mov
cmp
mov
js
push
aam
or
rcrl
cli
add
shrl
lods
into
push
inc
cmp
pushf
ret
cmpl
cmp
cmc
jne
mov
in
mov
dec
test
or
leave
fstpl
loop
jg
insl
add
sbbl
aam
jae
sbb
pop
fwait
mov
loopne
adc
rcl
fwait
pushf
mov
rcrb
lret
outsb
mov
lods
or
dec
iret
ret
test
scas
mov
jo
imul
jne
fcoms
sub
and
lret
pop
loopne
push
hlt
js
sub
loopne
sarb
jmp
sahf
lcall
adc
and
into
add
scas
jle
jo
jle
rolb
dec
mov
xchg
or
xchg
adcl
test
cmp
jmp
mov
or
out
call
popa
add
pop
jge
cmpsl
mov
loop
mov
adc
imul
mov
inc
ficoml
cmpsl
repnz
popf
mov
xchg
jp
insb
mov
popa
adc
mov
rcrb
ficoms
and
pop
adc
jne
dec
ret
loope
sub
out
adc
scas
jl,pt
std
mov
mov
inc
push
je
out
push
sub
pop
pop
xchg
mov
lods
aad
icebp
stos
mov
push
inc
hlt
dec
cmp
out
hlt
xchg
cmc
dec
lods
add
aas
mov
mov
loopne
jo
mov
xlat
adc
adc
inc
bswap
clc
jecxz
inc
xchg
xor
xor
outsl
lahf
lock
clc
add
cmp
mov
imul
jle
sub
cmp
ret
jecxz
xlat
add
mov
or
sub
enter
icebp
xor
and
push
test
ljmp
je
jne
jg
push
sub
loope
bound
jbe
dec
ret
pop
mov
and
rorb
loopne
aam
pop
ds
ja
jge
xor
dec
inc
sbb
jne
or
or
mov
sub
leave
rcl
dec
addr16
add
and
or
jnp
xor
or
test
into
pop
xchg
sbb
and
movsb
data16
xor
jne
adc
sbb
or
xlat
cmp
andl
cmp
jle
adc
out
pop
int
mov
pop
pop
inc
aam
lock
int3
inc
aas
pop
jg
xchg
jge
pushf
out
cmpl
cmp
fildll
sti
push
xlat
push
mov
into
push
jmp
enter
cmp
test
out
fcomps
jle
inc
and
sbb
out
daa
andb
leave
inc
jne
pop
or
imul
xor
lods
ja
sub
repnz
xchg
subb
cmp
aad
stos
dec
xlat
in
aaa
inc
jmp
cmp
loop
ljmp
test
mov
ds
xor
imul
mov
inc
mov
dec
fcoms
sub
in
daa
pop
jnp
xchg
subb
jle
mov
mov
pushf
stos
cmpsb
ljmp
add
cli
inc
mov
push
dec
or
inc
jae
call
test
push
js
sub
jp
mov
movsl
jbe
mov
or
sbb
outsl
jge
mov
pop
push
pop
stos
jb
jns
push
pop
repnz
ja
sub
test
dec
in
xor
loopne
dec
loope
ljmp
in
and
adc
add
imul
mov
jne
or
or
push
push
jbe
lea
into
ret
stc
xchg
into
sbb
or
gs
loopw
xor
or
into
adc
cmpsb
push
into
xor
push
shl
fisubrl
ljmp
fwait
sub
cltd
loope
push
ficompl
lods
mov
sbb
test
sub
fnstsw
shl
rolb
lock
and
fdiv
clc
bound
mov
std
stos
rcll
out
aas
fidivrs
mov
data16
mov
xlat
xchg
push
test
add
dec
pop
mov
fwait
jbe
fwait
or
add
push
dec
jecxz
fidivl
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
insb
and
cs
jle
jo
jle
cld
lret
sbb
jmp
das
xor
add
adc
loop
lret
cmp
and
inc
stos
dec
sub
in
sub
shll
lods
sub
cmpsl
mov
icebp
js
fstpl
cmc
mov
pop
cmp
mov
sbb
xchg
jo
xlat
stos
stc
fildll
jne
mull
cltd
int
out
mov
mov
fsts
int
cld
shlb
out
cmp
stc
shr
push
fucomip
movsb
push
mov
adc
iret
pop
xchg
sahf
fisubrl
xchg
je
adc
jle
lods
mov
adc
fisttps
xor
inc
jo
jae
aad
dec
call
imul
clc
in
push
int
xchg
pop
int
in
jecxz
leave
fwait
and
movsl
sbb
add
sub
dec
js
in
xor
cmc
mov
popl
cmp
mov
pop
aam
outsl
fldcw
insl
or
jb
and
lods
ret
das
aas
test
adc
xlat
push
loopne
jle
dec
sbb
or
shll
jne
add
lret
cmp
mov
pop
mov
xchg
sub
ficoms
jg
mov
jg
aaa
nop
mov
xor
stc
mov
cmp
les
fs
jecxz
dec
cmp
cmp
out
jecxz
and
nop
jae
xchg
out
and
inc
or
pop
shlb
push
sahf
mov
mov
dec
xchg
xchg
imul
cmpb
jg
or
pop
popa
inc
add
popf
sahf
cwtl
into
call
cmpb
repz
push
cmpsb
mov
xorb
mov
shll
test
daa
clc
push
mov
push
cmpsl
lods
jmp
mov
jmp
push
lret
inc
daa
in
dec
jl
jns
pusha
in
or
pop
or
mov
or
push
insb
or
fwait
jbe
mov
cmp
jl
mov
jns
and
stc
fdivl
xchg
jecxz
jne
sbb
callw
sub
int
cmp
icebp
xor
and
pop
dec
mov
jae
movsb
es
loope
andl
xchg
mov
jns
rorl
mov
loope
add
mov
cs
fmul
ficoml
inc
jno
lea
lods
es
jg
mov
cmpsl
or
je
sub
addr16
test
push
jmp
out
mov
cmp
xorb
les
pop
jg
mov
neg
int
jo
or
test
fldcw
ret
out
fsubl
jmp
loop
arpl
push
dec
insl
push
popf
addr16
fnstenv
lahf
test
shlb
mov
stos
mov
mov
dec
scas
in
sub
fwait
lcall
jle
cld
clc
push
sti
test
mov
arpl
pop
pop
shlb
cmp
repz
xor
push
repz
enter
cs
cltd
add
jg
popa
push
or
sub
push
push
mov
lods
stos
sbb
leave
aas
and
stc
aam
add
fildl
in
cwtl
test
xchg
bnd
smsw
aaa
fnsave
cmp
dec
lock
add
ficoml
jmp
push
aaa
popa
cmp
loopne
lahf
sbb
and
mov
in
inc
mov
fcomps
mov
cmp
pop
adc
xchg
xlat
sbb
jo
aad
pushf
pop
inc
nop
mov
xchg
pop
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
push
pop
dec
and
jle
push
or
mov
inc
test
mov
mov
je
pusha
dec
cmpsb
mov
jne
and
mov
lahf
push
call
and
jmp
jns
cs
fisttpll
arpl
pop
pop
mov
aad
xchg
insl
iret
mov
fs
sahf
mov
add
loope
xor
stos
jmp
repz
cwtl
xor
mov
adc
xchg
not
inc
or
addr16
adc
push
dec
sub
xchg
dec
enter
popl
push
jo
adc
ljmp
jge
inc
xchg
inc
stos
pop
mov
adc
js
lret
and
inc
push
dec
sahf
jmp
cmpsl
int
xor
adc
inc
leave
mov
or
ret
enter
in
pop
repz
test
shll
outsl
in
push
mov
inc
fildl
mov
dec
sub
inc
cmp
or
xchg
lds
sbb
cmc
data16
dec
xor
sbb
fcompl
dec
or
popa
aam
jno
jae
mul
inc
mov
dec
fimuls
inc
fxch
mov
in
adc
jnp
adc
mov
jl
enter
fisttps
cmpb
jecxz
pop
repz
aaa
add
arpl
out
jecxz
mov
sbb
mov
sbb
push
jecxz
dec
outsb
mov
and
jl
jne
pop
dec
rcl
push
sub
stos
mov
lods
pop
xchg
jmp
es
and
xor
mov
cmp
rorb
orb
pop
cmp
arpl
lar
inc
ret
dec
and
xchg
inc
xor
jge
inc
leave
jns
sbb
fisubrl
push
fimull
mov
lahf
mov
mov
adcb
test
inc
clc
add
out
jecxz
out
jp
mov
sbb
hlt
insl
xchg
xchg
mov
leave
loope
xchg
rcll
pusha
mov
inc
cmpsl
lea
sbb
std
add
push
jge
jl
mov
filds
test
jbe
loop
push
subb
sbb
mov
push
xchg
lods
mov
mov
idivb
mov
dec
xor
xchg
ja
mov
int3
xchg
js
test
mov
adc
into
lahf
add
fidivrs
pop
jo
mov
cmp
push
repnz
pop
cmp
jo
in
test
outsb
cmp
push
or
rorl
test
push
out
adc
xlat
and
lret
clc
test
movsb
int3
addr16
adc
bound
daa
push
pop
loope
cmp
mov
cld
cld
test
mov
call
jmp
inc
das
mov
sbb
lods
or
jl
push
aad
add
jbe
fstpl
or
pop
fildll
mov
add
outsb
data16
dec
call
iret
adc
sub
pop
test
jl
push
xlat
cmpsl
push
icebp
lea
adc
mov
daa
es
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
fbstp
ret
sahf
mov
jle
jns
jle
xor
inc
les
int3
mov
addb
out
mov
cmp
adc
fsubrs
mov
arpl
mov
shll
pop
push
ret
mov
xchg
mov
lahf
jb
jae
sbb
mov
lock
insl
cmp
sahf
add
push
imul
aaa
mov
aad
addl
imul
sahf
or
popa
cmc
test
pop
push
mov
popa
es
add
or
mov
shlb
sub
in
fcoms
push
jp
push
sbb
sub
sub
cmp
lret
mov
inc
leave
movsl
mov
mov
mov
and
push
aaa
rolb
lahf
pop
icebp
dec
dec
mov
in
or
js
mov
jne
adc
xlat
mov
adc
clc
pusha
cmp
jmp
cwtl
jp
mov
fsubs
mov
xchg
push
pop
add
or
test
mov
lods
movsl
mov
adc
push
in
add
mov
xchg
mov
mov
stos
mov
push
inc
add
rcrb
xor
addr16
dec
sub
loopne
mov
inc
cmp
mov
shlb
xchg
xchg
xchg
jae
cld
pop
movsb
ja
sub
and
sbb
ss
and
mov
sub
lea
pop
dec
shl
mov
cmp
pop
sbb
push
rorl
cmpsb
pop
jg
and
xchg
xchg
daa
pop
mov
pop
sub
sub
repnz
dec
pop
int
outsl
jecxz
iret
ljmp
mov
mov
xor
arpl
jecxz
sbb
push
lcall
fwait
sbb
out
lds
inc
pushf
imul
out
lock
or
loope
adc
jbe
ret
jae
and
pop
fwait
mov
sti
jns
or
adc
xchg
in
inc
inc
dec
shl
cwtl
mov
and
add
mov
xchg
sbb
insb
pop
outsl
and
je
sub
lock
pop
pop
ss
aam
fcomip
inc
sbb
lret
ret
cld
dec
ror
inc
aas
inc
test
jae
mov
pop
cld
out
scas
xchg
mov
ss
sbb
data16
and
gs
test
push
into
out
and
das
lret
adc
jg
sbb
jmp
rolb
pop
cwtl
sbb
sub
xor
sub
push
sbb
push
out
jge
lods
fsin
lds
or
add
jnp
pop
mov
sbb
cmp
adc
shll
ds
bound
addr16
leave
dec
jmp
ret
pop
dec
rclb
inc
sbb
xchg
imul
mov
cmp
fcompl
dec
idivl
xchg
es
in
xchg
pop
inc
bound
mov
lret
cltd
nop
test
ret
mulb
inc
mov
sbb
ret
push
test
jge
mov
fsubs
mov
pushf
dec
jle
mov
iret
out
shlb
ret
arpl
test
inc
jp
xchg
and
or
xor
iret
inc
inc
add
movl
inc
inc
add
rol
cmovbe
push
add
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
fs
mov
adc
jle
hlt
jns
jle
cmc
and
jmp
lret
mov
mov
cwtl
in
cmp
jbe
pop
iret
jae
add
cs
out
jge
cld
add
ljmp
sbb
jl
loop
mov
pop
addl
adc
in
sbb
cmovns
insl
test
rcr
cmp
ret
or
cmpsb
push
das
gs
or
jg
call
insb
and
les
inc
mov
pop
xor
out
int3
and
cmpsl
jae
add
frstor
repz
mov
out
bound
loopne
push
xor
loopne
jg
stc
lcall
and
and
test
fdivl
hlt
or
jo
loopne,pt
xor
pusha
mov
testb
or
jmp
xchg
in
in
jle
add
data16
sarb
subl
mov
movsl
clc
cmp
jge
pop
pop
decb
xor
lret
les
outsl
jmp
andb
xchg
push
das
lea
popa
sub
imul
dec
adc
jp
mov
mov
call
ret
loopne
mov
mov
mov
shl
jp
mov
jns
pop
mov
or
xchg
adc
fnstenv
iret
pop
or
addr16
out
push
or
stos
and
iret
in
loope
pushf
repnz
inc
pusha
and
dec
pop
mov
mov
push
mov
out
ret
pop
inc
test
pop
push
mov
lret
sbb
lods
cwtl
mov
mov
mov
pop
test
icebp
dec
inc
push
inc
div
sbb
std
rorl
sub
add
cmp
inc
scas
into
and
dec
mov
adc
das
int
lods
test
xchg
adc
dec
cltd
push
daa
call
mov
mov
in
push
cmpsl
inc
sbb
int
push
aas
mov
imul
sub
jno
shrl
out
cmp
rorb
int
mov
inc
push
mov
push
sarb
add
test
sahf
jo
pop
cli
mov
int3
add
cltd
js
pop
pop
mov
rcrl
outsb
std
and
and
cs
movzwl
shll
std
stc
jb
or
pop
sub
sbb
mov
add
sub
or
shr
jp
sbb
cmp
fidivs
movsl
add
adc
pop
repnz
pusha
dec
imul
in
dec
pop
loopne
inc
inc
sbb
mov
repnz
les
jae
les
inc
cmpsl
jge
nop
js
sub
scas
ficoms
jno
imul
and
iret
je
push
int
sbb
mov
subb
jbe
fisttpll
shll
les
pop
push
movb
push
jne
scas
mov
push
xchg
out
xchg
mov
arpl
lret
mov
dec
adc
ljmp
push
pop
add
ds
and
jp
imul
pop
or
in
out
mov
lcall
imul
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
add
lcall
jle
dec
sbb
repnz
xor
inc
pushf
sbb
ljmp
push
shr
mov
paddw
outsb
jns
cmp
dec
xor
lods
test
sub
adc
add
xchg
stos
xchg
incb
pop
push
icebp
dec
int3
sbb
call
ret
mov
leave
cs
shll
lods
sub
ljmp
xchg
push
adc
mov
insb
call
rol
mov
push
xor
mov
pop
push
mov
and
cltd
mov
jge
in
xor
or
icebp
xlat
in
fcom
popa
inc
sub
pusha
icebp
mov
fcompl
mov
mov
insl
mov
insl
je
inc
push
clc
mov
in
cmp
and
pushf
fldcw
jle
sbb
popa
ja
aas
subl
cmpsl
sub
nop
cmp
mov
lea
xor
loop
rol
dec
jmp
arpl
xlat
in
ja
cli
cmp
hlt
inc
pop
imul
out
adc
stos
mov
jg
aas
clc
sbb
adc
enter
movsl
or
js
iret
sub
mov
inc
enter
and
adc
cli
daa
pop
or
sti
cmp
jp
mov
mov
dec
sti
xchg
pop
cmp
mov
mov
cmpb
mov
inc
pop
nop
jmp
lcall
mov
pop
mov
sti
xorb
adc
jge
or
jecxz
cmp
into
insb
mov
pop
inc
pushf
pop
and
mov
sbb
push
in
cmp
dec
jae
andb
aaa
and
loop
lcall
inc
xor
clc
addl
xorl
mov
jg
cmp
and
pop
shlb
iret
and
insb
xchg
lret
push
cs
jmp
cld
cmp
div
cmp
stos
fisubrs
cli
xchg
sub
push
mov
xchg
cmp
mov
xchg
mov
loop
add
sub
lcall
xchg
push
sti
sbb
push
jp
or
repnz
adc
mov
and
cwtl
mov
mov
mov
leave
mov
or
pusha
dec
stc
xor
adc
or
sbb
imul
cmpsl
popa
push
xor
cwtl
jge
scas
mov
lahf
rcl
stos
gs
push
and
fwait
and
mov
jb
jae
rolb
push
lcall
dec
in
stos
arpl
shlb
dec
or
dec
push
das
out
or
push
out
ret
mov
int3
repz
or
popa
lea
test
mov
sbb
xor
insl
call
mov
aad
stos
enter
mov
mov
sarl
subb
ja
das
jb
mov
ljmp
push
mov
add
inc
out
movb
repz
out
or
mov
push
add
sub
cmpsl
sub
cwtl
push
shll
insb
das
scas
nop
lcall
in
jns
imul
jmp
push
clc
clc
mov
test
adc
aas
repnz
js
jle
hlt
jns
jle
iret
cmpsl
or
adc
shll
cmp
adc
or
cmpsb
aad
dec
sbb
jne
sbb
es
mulb
mov
out
pushf
jl
sarb
gs
or
subb
repz
leave
jnp
outsb
mov
and
mov
aas
jg
lock
add
mov
filds
sbb
pushf
sbb
mov
lods
aaa
sti
xor
dec
jp
dec
mov
push
inc
clc
xor
movsl
pop
fisttps
mov
jg
scas
mov
cmc
jg
cmp
jg
loope
fisubrs
and
rcl
out
mov
push
js
add
aam
mov
mull
scas
mov
sti
dec
push
divps
cltd
mov
push
popf
or
out
out
mov
mov
push
push
fstps
inc
lods
filds
push
inc
aaa
je
pop
xchg
fisubrs
or
idivb
pop
sbb
jno
imul
add
push
add
call
push
inc
movsb
data16
cmp
repz
dec
sbb
stos
ljmp
xchg
mov
mov
pop
stc
incb
orl
adc
call
or
mov
ja
andb
adc
sub
hlt
ss
inc
ja
and
cmp
dec
sub
js
add
jb
or
sub
cltd
or
int3
loope
mov
mov
lds
out
mov
outsb
or
add
out
jge
jae
lock
mov
lea
lds
cmpsb
inc
stc
pop
adc
jnp
mov
dec
mov
inc
sub
mov
or
inc
sbb
mov
rolb
jle
pop
test
push
push
out
cltd
rol
lods
sub
fists
xchg
jle
sub
mov
andb
dec
pop
add
lret
hlt
add
stos
lods
or
xchg
ja
out
pop
xchg
sbb
mov
jae
dec
mov
mov
add
jp
push
test
mov
gs
outsl
ja
dec
stos
mov
add
xchg
cltd
jmp
test
push
push
pop
mov
rcrb
xor
dec
xor
out
dec
pop
xor
ds
inc
fdivs
jae
pop
ljmp
mull
xchg
orl
inc
pop
mov
lcall
xlat
push
xlat
repnz
mul
inc
out
sub
daa
dec
adc
and
pop
fisubrs
clc
shrl
dec
or
out
fdivl
xchg
mov
leave
mov
lock
pop
js
in
in
inc
xor
jno
xlat
adc
daa
in
test
push
or
jne
add
cmpb
cld
in
pop
mov
mov
call
shrb
icebp
pop
clc
sub
cmp
pop
cmp
lret
jmp
ret
clc
or
adc
into
inc
mov
xchg
cmp
jne
pop
nop
jb
xchg
fnstsw
lahf
cmp
mov
mov
adc
loop
aam
jl
mov
or
jl
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
punpckhdq
pop
testb
pushf
jg
jle
xor
enter
scas
pop
fcoms
into
mov
repnz
xor
add
fisubs
lea
mov
ja
imul
lret
dec
repnz
adc
jle
pushw
lret
fsincos
jno
sbb
adc
pop
mov
insl
scas
cmpsl
icebp
push
inc
call
inc
rcr
cld
test
aad
imul
sbb
aad
loopne
dec
ret
jb
addr16
jge
stos
cmc
js
dec
int3
sahf
push
pop
shrb
scas
push
std
roll
jp
sub
cmc
lcall
rol
inc
dec
add
pop
imul
xor
inc
sahf
out
mov
or
testb
mov
cmp
jmp
std
jl
stos
lock
sti
aaa
roll
jo
stc
lods
fldenv
addl
push
repnz
sahf
stos
or
mov
stos
cmp
out
jle
repnz
lahf
xchg
loopne
push
les
mov
fcoml
sbb
xchg
cltd
out
push
xchg
popa
dec
aas
in
pop
jmp
inc
notb
or
sub
jns
cld
jecxz
test
lods
or
adc
sahf
or
add
es
out
lret
lods
ljmp
icebp
push
incb
and
movsl
pop
push
inc
lret
cmp
rorl
clc
sub
and
adc
or
neg
pushl
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
xchg
jle
pushf
jg
jle
inc
pop
out
cmp
cmpsb
enter
cmp
push
mov
sub
cmp
cmp
jle
mov
push
sarl
cmp
sbb
andl
mov
in
cmp
rolb
pop
xchg
dec
mull
xor
cmpsl
test
cmp
jge
jb
lods
mov
les
fisubrs
and
mov
sub
push
insb
jnp
pusha
pop
je
xor
pop
rcll
sbb
push
or
lret
cltd
insb
jb
adc
je,pt
ds
daa
dec
or
ljmp
mov
call
and
insb
cmc
test
imul
adc
xor
pop
push
cmp
in
cmpb
mov
sub
mov
lds
mov
or
test
inc
sub
cltd
jg
or
fdivl
xor
shl
outsl
fs
adc
imul
fldt
out
addr16
and
jp
sub
jb
and
pushf
or
addr16
xor
jge
or
or
jne
daa
or
mov
orb
cmpsb
jae
pop
sbb
mov
mov
cld
xchg
ret
xor
call
arpl
psrad
fdivrs
push
jbe
pop
call
lods
jg
add
clc
sbb
cli
imul
loope
adc
xlat
es
pop
mov
pop
gs
jle
dec
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
leave
lods
subb
inc
jle
popf
js
jle
mov
cmp
xchg
mov
or
and
pop
mov
sub
push
insb
or
push
mov
inc
inc
arpl
jae
dec
xchg
sbb
rcl
mov
pop
mov
imulb
mov
pop
mov
imul
scas
je
mov
dec
out
repz
mov
imul
and
cmpsb
push
cmpsb
inc
push
pusha
sub
fldcw
xchg
test
sbb
cli
mov
lahf
mov
xor
or
mov
push
aaa
adc
outsl
out
movsl
pop
ja
repz
xchg
xor
xor
jecxz
rclb
lahf
aas
dec
movsb
ja
sbb
push
cmpsl
dec
std
and
fs
mov
push
shrl
shll
jno
sub
or
setae
sbb
shl
iret
mov
inc
pop
xchg
cmp
dec
lcall
lds
ret
xchg
push
cmc
xchg
stos
js
loop
inc
sbb
notl
jmp
cmp
ficoms
sub
in
cld
or
fs
add
inc
pusha
in
repz
jg
or
inc
dec
or
add
adc
ret
int3
xchg
fists
call
xor
or
mov
roll
sub
pop
scas
mov
out
jle
daa
aam
xchg
les
out
add
lret
adc
add
sti
dec
rclb
pop
loope
xchg
in
mov
jne
mov
dec
pop
xor
jp
shrb
repz
push
cwtl
mov
imul
cmp
std
sar
fsubrs
in
add
int
fimull
aam
lea
and
jno
xor
out
lock
data16
incl
bound
push
dec
mov
and
cmp
mov
mov
cmpsb
subl
js
cmp
mov
xchg
push
jnp
mov
repz
out
or
pop
jl
dec
outsb
in
adc
cmp
mov
cmc
push
movsw
or
jne
in
daa
ja
mull
fwait
movsl
orl
inc
stos
push
lods
andb
jp
test
lods
add
mov
xchg
xchg
sub
mov
add
dec
aam
push
sbb
sarb
in
cld
pop
les
inc
push
pop
sub
mov
lret
mov
xchg
arpl
sub
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
std
push
gs
std
ss
aam
pop
aam
cmp
pushf
mov
femms
insl
loope
xorl
bound
imul
mov
pop
mov
movsl
sbb
sbb
rolb
scas
mov
and
push
sbb
icebp
mov
inc
push
scas
mov
cmp
daa
test
data16
pop
add
adc
xchg
mov
sbbl
dec
fisubrl
fbstp
outsl
paddw
inc
pop
sbb
std
xorb
das
xor
sub
divl
rcrb
rcl
pop
imul
mov
call
je
sbb
cmp
div
fdivr
stos
pop
mov
adc
ret
mov
clc
push
pop
cwtl
jle
movsb
mov
add
idiv
popf
adc
bound
mov
jecxz
dec
mov
ja
jbe
fbld
mov
push
xchg
jns
leave
pop
pop
icebp
aad
fisttpll
dec
mov
mov
sub
loop
lock
and
inc
ja
int3
outsl
pop
jl
iret
and
add
jle
scas
push
das
mov
push
add
sub
mov
pusha
gs
insl
dec
mov
mov
cmc
inc
inc
jle
rol
addr16
gs
das
mov
push
dec
mov
xchg
popa
sysenter
add
inc
std
je
into
pop
dec
cld
pop
lea
add
mov
imul
divb
sbb
add
ret
jne
out
mov
nop
scas
push
push
lcall
lods
xor
add
and
movsb
scas
xchg
xchg
sti
jnp
test
jg
push
fbld
fwait
jge
sbb
and
or
mov
inc
and
int3
jmp
dec
xor
aas
imul
xor
ret
mov
inc
cmp
add
dec
cmp
jge
dec
push
cmc
cmp
js
inc
rcr
sbb
dec
mov
push
pusha
outsb
cmp
incl
in
pop
pop
outsb
js
test
pop
pop
jl
sub
fwait
pop
mov
mov
stos
nop
repnz
mov
adc
xor
ss
sub
xchg
adc
xor
imul
jle
xchg
roll
out
int3
mov
mov
js
icebp
xlat
movsl
jg
test
sub
ds
int
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
cmp
jle
js
jle
pop
mov
jne
adc
stos
movsl
dec
lock
int3
dec
rorl
add
mov
in
aam
pop
adc
imul
dec
mov
out
push
jecxz
pop
popf
push
ret
cwtl
or
mov
cmpsl
jl
xchg
mov
mov
popa
dec
mov
sub
cmpsl
and
inc
sbb
xchg
lcall
push
and
pop
ret
jne
fwait
or
jecxz
and
mov
incb
jmp
sbb
scas
fistps
testl
xchg
sahf
cltd
popa
dec
jne
sar
xor
cmp
pop
loope
fildl
inc
mov
int3
mov
lds
mov
inc
cmp
jno
mov
clc
sti
mov
rolb
fstpl
ds
and
sbb
jno
pop
dec
gs
push
mov
xchg
add
xor
div
pop
inc
leave
out
movsb
adc
lret
int
or
mov
push
or
fistpll
xlat
add
xor
mov
fwait
push
mov
shrl
orb
push
sub
xchg
out
outsl
lret
pusha
scas
shrb
and
jo
lds
fnstsw
mov
sub
shrb
mov
in
inc
push
inc
test
arpl
std
jne
outsb
sbb
mov
adcl
shrb
aam
or
loope
lret
scas
and
pop
and
jmp
ret
sbb
test
ss
mov
mov
xchg
jg
fbstp
imul
sub
test
outsb
or
adc
mov
push
xor
shrb
aaa
fwait
push
pop
scas
sahf
pop
push
xchg
cmp
add
xor
es
push
dec
sub
xor
push
jne
test
push
cmp
movsb
jmp
jmp
pop
jnp
mov
sub
fldt
ret
mov
mov
lds
sbb
shrl
xor
rorb
push
and
pop
or
sbb
cltd
cli
mov
lods
mov
mov
stc
divb
jbe
aaa
es
bound
inc
ficomps
mov
adc
xor
stos
mov
rolb
cmpsb
fwait
xchg
sub
enter
ret
sub
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
aam
adc
jg
jle
xchg
lea
xor
rclb
ret
ja
scas
sar
jno
pop
fldcw
dec
push
addr16
mov
inc
and
ret
movsb
add
cwtl
mov
test
mov
jo
clc
es
add
jge
mov
push
inc
pop
mov
adc
or
cltd
in
add
lods
data16
lret
lahf
xor
bound
dec
ror
jne
xor
das
scas
sbb
jmp
fnstsw
lods
jnp
xchg
inc
loope,pt
jl
iret
dec
lods
xchg
fidivl
mov
fcom
push
and
lods
and
xor
xor
out
push
orb
push
xchg
stc
hlt
pop
imul
sbb
sti
test
or
push
sub
mov
adc
in
je
pop
dec
cmp
imul
push
and
dec
pop
mov
cmp
xorl
sahf
push
in
pop
push
aas
leave
mov
or
imul
jle
test
iret
cs
out
leave
lods
bound
nop
lcall
sub
dec
mov
mov
add
fcmovbe
sarl
fisttpll
sub
mov
lds
inc
je,pt
arpl
jnp
popa
jo
sbb
call
das
jns
cmpsl
addl
nop
mov
lds
arpl
cmp
lret
mov
hlt
daa
mov
jle
js
popf
mov
inc
push
jb
jbe
nop
sbb
repnz
jns
nop
cmp
push
ret
mov
stos
mov
xlat
and
dec
cmpsb
mov
in
call
out
sti
adc
push
sub
les
cmp
cli
cmpsl
dec
mov
out
int3
sti
xchg
push
scas
insb
in
idiv
mov
into
fimuls
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
fnstsw
jle
pop
jg
jle
daa
movsb
iret
cmpsl
inc
movsl
or
int3
std
jp
in
jmp
sarl
sbb
movsb
outsb
in
out
incl
loopne
fyl2x
je
mov
dec
out
stc
jns
outsl
sbb
xor
push
inc
cli
mov
sub
dec
push
push
int3
mov
imul
scas
cmpsb
ja
cmpsl
aam
addr16
or
jb
in
and
es
in
or
xor
pmaxsw
rorb
mov
imul
xchg
jmp
in
cld
adc
aas
jge
cld
fmuls
jle
cld
ljmp
mov
lret
sub
cmp
lahf
mov
nop
sbb
scas
jl
push
fs
xchg
test
dec
xchg
imul
lret
mov
or
insl
cmp
mov
mov
mov
ret
mov
insl
inc
js
daa
push
lock
push
pop
push
iret
inc
loope
movsb
inc
jbe
jno
sub
pop
mov
movsl
jns
xor
push
imul
cmp
loope
add
aas
fs
mov
fimuls
xchg
and
orl
bound
cmp
adc
ljmp
adc
test
sbb
add
outsb
add
imul
pop
sub
test
or
test
int
lret
enter
sbb
outsb
mov
int
mov
push
pop
scas
push
inc
mov
addr16
mov
sub
mov
dec
sbb
mov
and
inc
mov
mov
sub
loope
jbe
mov
fs
push
push
movsb
jg
frstor
inc
aaa
mov
jo
cld
popa
sub
inc
adc
or
xor
or
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
out
pop
clc
aad
jle
pop
jg
jle
addl
push
jo
inc
xchg
scas
and
cmp
dec
lcall
mov
pop
ret
cltd
mov
and
call
xor
mov
mov
xor
mov
out
dec
mov
mov
in
popf
roll
arpl
imul
and
xor
sbb
jb
gs
jns
lods
int3
mov
cmp
or
cmpsb
mov
sarl
ret
mov
sbb
int3
xor
mov
or
mov
idivb
add
xchg
fldt
push
icebp
test
stc
lods
sub
push
jecxz
xor
xchg
lret
fs
adc
push
sbb
jmp
xchg
mov
daa
lcall
popf
insb
cltd
dec
ret
outsl
dec
xor
sahf
sbb
rorb
add
mov
lods
and
ret
loope
xlat
mov
jbe
add
hlt
mov
push
outsb
adc
xor
movsl
lds
xchg
movsb
xor
stos
xchg
jmp
shlb
xchg
jns
or
inc
or
pop
pop
inc
test
push
mov
mov
dec
shll
lods
mov
int3
xchg
mov
sub
mov
pop
into
idivl
or
inc
decl
lods
enter
dec
mov
dec
inc
shrb
add
and
mov
jg
mov
arpl
mov
das
in
rcll
jmp
mov
call
lcall
aas
setne
mov
sub
mov
jns
movb
and
cmp
mov
insl
or
popf
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
xchg
jle
pop
jg
jle
and
imul
cmp
sub
scas
lcall
ror
scas
fisttpll
addr16
in
fidivs
in
pop
sbb
fcoms
mov
cmp
pop
add
mov
cmp
mov
aaa
jnp
add
scas
stos
and
inc
outsl
rcrb
lret
push
roll
test
ss
aaa
dec
pop
push
or
lds
nop
mov
scas
jmp
sahf
mov
aaa
and
insl
fistl
shlb
add
cwtl
in
mov
mov
mov
lods
xchg
fcomps
outsl
jecxz
imul
repnz
mov
xorb
jbe
mov
sbb
scas
jo
outsb
push
loopne
orb
mov
jne
bound
xchg
mov
or
cmpsl
inc
mov
cmp
outsb
ljmp
sbb
fldcw
outsl
out
hlt
insl
sbb
mov
in
push
mov
std
loope
and
aaa
loop
jge
pushl
popa
pop
decb
insb
cs
cli
stos
mov
xor
jb
add
adc
inc
fnstsw
push
jmp
push
inc
pop
fld
out
test
test
in
adc
fnstsw
in
mov
lret
lahf
mov
out
cmp
lock
lahf
dec
add
movsl
push
and
and
ds
xchg
push
shufps
and
push
lds
jbe
mov
mov
push
rcr
xor
push
xchg
orb
ret
xor
movsl
aam
cld
fcomip
xchg
xchg
and
rorb
and
stos
add
jbe
cltd
pushf
jp
pop
sub
mov
ds
mov
jmp
cmp
jne
xchg
mov
mov
push
jle
pop
jg
jle
shufps
ja
ds
icebp
cmp
jae
mov
inc
mov
rcrl
pop
and
xchg
dec
jle
pop
jbe
inc
js
or
sub
fdivr
into
jns
aam
lds
sbb
ds
stos
pusha
xor
sbbb
jno
jp
jbe
das
call
mov
jno
fbstp
push
xor
push
pop
push
pop
mov
leave
notl
fimull
test
xor
enter
daa
inc
imul
xchg
mov
xor
xor
mov
mov
ret
scas
rcr
push
pop
xor
pop
dec
outsl
push
jbe
cmp
push
pop
and
out
add
sub
xor
fs
aas
mov
mov
lahf
in
inc
ret
movsl
jb
cmp
xlat
mov
mov
lcall
mov
lds
out
roll
scas
mov
or
push
or
and
popf
hlt
call
adc
xor
jae
test
or
sbbl
or
scas
or
fstps
hlt
jne
int
add
pop
xlat
mov
adcl
jge
out
pop
int
int
mov
dec
add
add
and
gs
cmp
out
mov
std
mov
xchg
push
sarb
and
movsb
mov
and
cmpsl
jb
xor
jmp
lcall
sub
xor
mov
mov
jae
hlt
xor
add
push
jns
into
or
xchg
sub
mov
fsubs
sbb
cwtl
mov
cmp
rcl
std
cmp
add
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
lret
cmp
jle
pop
jg
jle
inc
mov
fwait
and
adc
cmp
or
bound
pop
jnp
or
and
rcr
sar
push
in
jae,pt
mov
ficomps
lods
push
mov
arpl
aas
out
jno
add
or
mov
add
nop
xor
mov
dec
in
inc
jge
xchg
xor
sub
cmpsb
rcrb
add
cmpsb
mov
cmc
push
adcl
cld
ljmp
int3
push
out
push
jnp
push
cld
mov
jle
dec
jmp
aam
sub
aas
out
pop
mov
xor
jbe
int3
popa
idiv
jecxz
test
sahf
inc
mull
push
lahf
rolb
dec
jl
push
aam
inc
outsb
xchg
xor
xchg
out
mov
add
into
push
push
jno
inc
in
movsl
and
sub
xor
aaa
imul
xchg
sbb
xchg
jmp
test
repnz
aas
xor
ret
push
inc
ret
add
jle
fdivrs
roll
cmpsl
lahf
ss
sub
pusha
adc
gs
adc
sub
dec
in
mov
imul
mov
mov
cwtl
adc
jge
mov
xor
in
inc
pop
xor
inc
dec
or
jl
and
cmp
jno
lcall
mov
mov
sti
cmp
lock
adc
ret
cli
mov
adc
and
fwait
or
cwtl
ljmp
xchg
popf
fnstsw
inc
notb
pushf
js
or
insb
shl
leave
out
fsubrs
cmpsl
push
push
xor
xchg
jg
mov
jae
pop
push
jns
xor
mov
mov
jp
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
inc
push
or
jle
jg
jle
mov
xchg
das
test
ret
push
shll
mov
adc
inc
inc
mov
and
loopnew
hlt
out
call
mov
jb
push
dec
pushf
in
inc
xor
daa
pop
cmp
pop
cmp
lods
and
add
movsl
addr16
adc
nop
mov
in
sbb
or
xlat
sub
dec
push
in
cmp
hlt
push
add
mov
vpackuswb
sub
jmp
lock
xchg
divl
mov
xor
sbb
inc
jns
mov
jp
dec
inc
xchg
repz
in
inc
mul
and
xchg
in
cmp
mov
ficoml
mov
test
inc
aad
sub
in
or
jnp
pop
iret
mov
xchg
sub
or
cmpsl
mov
and
and
loop
mov
push
mov
int3
punpckldq
mov
loopne
ret
lcall
push
arpl
gs
xchg
mov
js
xchg
push
adc
cmpb
push
lret
push
dec
pop
dec
fidivrl
or
ljmp
repz
push
test
in
imul
cmp
data16
mov
pop
flds
cmc
pop
adc
icebp
mov
dec
dec
js
clc
icebp
addl
sbb
mov
adc
adc
cmp
mov
or
test
scas
aam
fstps
or
jae
in
jo
hlt
outsl
or
inc
push
fimuls
cmp
sub
js
fimuls
pushf
sbb
dec
in
lods
jnp
std
pop
imul
pop
sbb
xchg
sbb
mov
cltd
mov
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
add
in
inc
pop
jle
pop
jg
jle
ja
and
xorb
inc
xor
pop
cmpsl
sub
xor
jg
aad
mov
rclb
or
mov
rorb
nop
mov
xchg
pop
addr16
mov
test
rcrb
add
jns
xor
inc
stos
and
pop
inc
jle
inc
jb
divl
cmp
sub
push
outsl
jno
dec
adc
test
cli
insl
push
xchg
jge
int3
inc
test
sub
lret
pop
jae
test
into
loopne
ss
hlt
mov
vmread
lahf
in
adc
push
imul
pop
test
push
aas
andl
sbb
sub
push
jl
sbb
inc
sbb
mov
cmp
sub
add
sbb
subl
jno
xor
xchg
pop
nop
aas
xchg
xchg
add
and
add
fisubrl
xchg
mov
sahf
cld
test
mov
aad
addb
in
mov
cmp
cld
pop
outsl
xor
test
jbe
push
add
xor
in
pop
sbb
decl
pop
in
adc
adc
repz
add
xchg
cmpb
cmp
mov
xor
xorb
pop
pop
mov
xorl
mov
in
lea
loope
stc
lock
cld
add
into
gs
and
and
dec
and
lds
mov
notb
jg
in
mov
inc
roll
cmp
mov
jae
inc
push
pop
fistpll
cmp
and
ljmp
nop
movsl
or
push
inc
test
jmp
cmp
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fdivs
lret
fwait
cmp
jg
jle
pop
pop
sbb
sbb
mov
mov
test
lret
or
mov
adc
jle
daa
sbb
sbb
xchg
pushf
or
and
xor
mov
sti
arpl
into
in
push
sub
push
jb
or
push
mov
pop
dec
insl
clc
or
push
mov
js
addl
arpl
dec
xchg
jno
lret
sub
xor
push
repz
ja
cltd
mov
mov
aas
inc
sarl
jb
pop
mov
sub
aad
dec
mov
sub
aaa
mov
roll
dec
push
xchg
xor
mov
mov
and
jb
ja
sti
xrstor
mov
movsb
pop
aad
pop
xchg
xor
rcr
outsb
sarb
out
mov
roll
cmp
dec
adc
ss
xor
lahf
dec
cwtl
cmp
ds
movsl
sbb
clc
mov
cld
rcrb
imul
jl
dec
and
test
pop
or
xlat
inc
movsb
aam
clc
cwtl
call
call
push
dec
jl
inc
test
push
mov
push
sub
and
lea
daa
mov
mov
dec
int
lret
ror
das
push
sar
jp
inc
inc
aas
pop
aaa
sbb
les
mov
aad
stos
xchg
sub
or
aas
inc
xchg
sub
xchg
xchg
out
sub
test
and
dec
pop
mov
ret
push
iret
lret
sub
lret
sub
pushf
imul
popa
aad
and
lahf
sub
mov
sbb
sbbl
xchg
inc
jns
push
and
insb
add
mov
jmp
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fcomps
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
movsl
jmp
add
add
add
cli
jns
or
lret
leave
icebp
or
testb
ljmp
jns
mov
fisubl
sub
mov
pushf
jle
pop
cmp
iret
pop
insl
mov
arpl
inc
fstpt
popf
pop
leave
mov
pop
add
mov
addr16
push
nop
mov
mov
testb
sbb
mov
loopne
dec
cmc
mov
addb
cmp
xchg
mov
pop
mov
mov
pop
jbe
cmpb
pop
cmpsb
push
adc
pop
push
cli
in
scas
adc
jecxz
push
and
push
inc
movsb
pop
lcall
push
or
aaa
cmp
add
and
mov
notb
or
push
ret
test
sub
mov
movsb
and
mov
inc
ret
push
xchg
xchg
push
orl
add
push
pusha
in
jle
cs
pop
ret
sub
testb
add
sbb
and
js
cmp
es
cmpsb
bound
mov
cmpb
jno
loopne
ja
dec
push
adc
sbb
jno
movsb
push
inc
icebp
add
or
in
mov
movsb
aaa
ljmp
stos
mov
mov
xchg
ss
ds
jnp
mov
jmp
dec
jb
mov
xor
aam
adc
mov
push
xor
out
and
push
push
xchg
jbe
sub
xchg
mulps
inc
sub
iret
int
sbb
add
mov
jo
push
mov
test
lock
or
pop
in
mov
xchg
stc
incl
sbb
sbb
mov
fcmovnb
jecxz
daa
lcall
ds
fisttps
rcrl
push
dec
xchg
and
loop
lret
lds
lds
add
adc
mov
adc
mov
js
add
testb
add
sub
daa
js
clc
aas
adc
sub
sbb
popf
inc
out
dec
in
add
jl
cmp
mov
jns
dec
outsl
leave
movsb
shrl
push
jne
js
aad
in
inc
push
mov
outsl
aam
out
jae
iret
lcall
pop
andl
in
into
push
push
js
inc
outsb
cmpsb
and
xor
mov
in
xor
cmp
pop
mov
jne
mov
xor
add
dec
test
inc
rcll
test
les
xor
cmp
rcll
jne
repnz
fwait
jb
xor
insw
push
pop
or
or
dec
dec
fcoms
inc
cwtl
aam
add
xor
std
sub
add
mov
sbb
ja
cltd
sbb
mov
add
mov
stos
dec
out
mov
call
add
and
test
mov
loopne
clc
push
scas
add
xchg
xor
mov
lods
popa
mov
adc
lcall
mov
inc
pop
in
jecxz
adc
push
mov
xor
nop
mov
pop
cltd
insl
xchg
test
inc
inc
mov
enter
stos
dec
push
xor
mov
push
dec
test
out
call
aam
push
sub
or
sub
or
fucomp
fisttps
jmp
cmp
sub
jb
pop
sbb
sub
pusha
lea
pop
fldt
cmp
sub
arpl
push
adc
hlt
out
xor
dec
sbb
cmp
pop
outsl
fcoml
or
int3
jl
mov
stos
std
fs
mov
mov
es
lahf
xchg
andb
lock
xchg
push
add
pop
jae
or
leave
bnd
mov
jmp
add
sub
xchg
lret
pushl
or
mov
mov
inc
inc
aaa
and
out
push
fistps
sub
mov
scas
sub
push
in
stos
pushf
dec
shll
and
sub
jb
pop
and
jle
xchg
or
mov
clc
ds
rol
xchg
dec
out
xor
repnz
lods
mov
out
ds
lret
sub
fst
push
in
fstpl
xor
push
inc
into
aad
aas
imul
xchg
into
aaa
insl
mov
or
xor
stos
jmp
bswap
pop
ret
xchg
pop
sbb
xchg
rcl
les
mov
cmp
shl
iret
inc
pop
push
mov
mov
cmp
repnz
sub
mov
lret
mov
js
loop
sub
push
add
push
dec
stos
push
jmp
pop
mov
aam
add
jg
cmc
insl
cmc
out
lcall
sub
jae
nop
pop
ljmp
enter
stc
les
xchg
lds
js
movsb
mov
pop
pop
cmp
int3
xor
fstpt
or
jp
lock
test
mov
je
loop
mov
and
add
mov
fdivl
inc
or
pop
xchg
add
sub
pop
cltd
inc
lock
mov
mov
popf
jg
in
mov
push
sub
push
inc
sbb
pop
cs
das
stc
test
mov
test
inc
pop
and
imul
in
test
add
or
mov
xor
scas
fdivrs
test
fs
pop
sub
shlb
scas
cmc
popf
test
adc
lock
adc
mov
cmpsb
jno
xchg
ret
fisubl
add
jle
add
outsl
jle
dec
xchg
call
mov
testb
add
notl
pop
mov
inc
movsl
inc
pavgb
sahf
loopne
sbb
lea
jecxz
pop
shlb
pop
adc
mov
pushf
lret
ficoms
test
lds
icebp
mov
push
shr
insb
dec
xchg
push
adc
fnsave
sbb
jne
mov
adc
lds
pop
in
pop
stos
scas
pop
xchg
cmp
movsl
xor
pop
push
mov
mov
and
or
mov
sub
push
hlt
ljmp
add
inc
repz
fs
mov
and
and
out
mov
jno
push
lea
push
scas
insl
movsb
int3
or
in
xchg
mov
mov
inc
push
mov
imul
jp
mov
orb
insb
lret
pop
push
mov
cltd
cltd
jmp
add
add
jle
and
scas
sti
jle
inc
sbb
cmp
add
testb
add
or
addr16
dec
imul
mov
inc
shlb
and
sbb
pop
enter
jmp
mull
repz
mov
or
xor
add
or
push
push
sahf
adc
xchg
leave
sbb
pop
cwtl
mov
inc
loopne
fidivrl
xchg
cmpsl
out
xchg
in
aas
outsl
add
push
les
icebp
popf
subb
movsl
adc
or
inc
int3
cmp
pusha
es
lock
clc
add
shrb
push
in
hlt
push
call
jl
pop
shl
popf
fists
fwait
data16
inc
dec
sub
jno
jo
or
and
cwtl
shrl
or
mov
adc
loope
addl
push
mov
jecxz
cmp
dec
in
add
loop
mov
sub
dec
dec
sti
pop
mov
js
mov
jmp
inc
and
jecxz
and
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
adc
add
testb
add
jb
sarl
aaa
xor
pop
pop
lods
push
xchg
je
ds
mov
mov
adc
push
test
lcall
and
sbb
inc
sub
push
sbb
loop
pop
ljmp
sbb
push
cwtl
mov
lods
dec
xor
icebp
clc
aam
mov
xor
push
push
mov
cwtl
mov
mov
test
dec
mov
dec
adc
jmp
std
mov
aaa
mov
movsl
lret
cmp
xchg
int3
jae
daa
out
aaa
add
outsl
shlb
and
push
jp
or
sub
shrl
sbb
call
jnp
les
xor
rcl
push
sub
inc
jmp
mov
or
xchg
int
dec
mov
mov
inc
inc
addr16
xchg
inc
add
xor
push
jl
jle
insb
pop
decl
dec
sbb
add
add
add
xor
inc
out
mov
lods
mov
sahf
pop
sub
push
loop
add
pushf
push
mov
or
jne
hlt
xlat
wbinvd
jbe
js
pop
jp
hlt
inc
sbb
push
fstl
add
dec
lods
mov
adc
sti
cmpsl
pop
or
lea
or
pop
jae
dec
shll
and
sahf
enter
ret
ret
push
nop
xchg
dec
pusha
sub
pop
fistl
push
inc
stos
inc
mov
imul
jnp
sbb
jns
insl
jge
xchg
test
addr16
add
fs
ret
adc
ljmp
out
mov
dec
fldt
daa
add
movsb
sbb
aam
inc
xor
sbb
or
addb
xchg
test
xlat
add
lcall
shlw
in
jns
outsb
pop
cmp
pushf
fcoms
mov
icebp
jge
mov
xchg
mov
adc
pop
ljmp
sub
add
testb
add
shll
sub
popf
xchg
or
cmp
sarb
mov
push
dec
mov
push
cmp
inc
cmovno
add
add
movl
repnz
cli
dec
cwtl
jo
inc
pop
add
repnz
sub
pop
mov
fucomip
jecxz
adc
sub
dec
in
mov
adc
shll
inc
ret
or
ficomps
cmpsl
cmp
push
or
leave
or
jo
xchg
inc
inc
push
nop
inc
test
cmp
pop
in
mov
sbb
cmp
sub
pop
mov
push
cld
data16
dec
mov
repnz
stos
push
xchg
mov
cmp
sub
jp
ljmp
clc
pop
mov
mov
lret
mov
cmpsb
xor
mov
add
data16
jne
mov
gs
in
gs
lock
testb
add
lret
or
lea
into
jge
cld
adc
sub
clc
pop
and
divb
push
or
faddl
movsb
je,pn
hlt
xchg
into
xlat
and
enter
nop
gs
daa
xor
mov
je
xchg
push
mov
mov
xchg
cltd
gs
pop
dec
adcb
dec
xchg
inc
mov
push
test
and
daa
sub
pushf
and
lods
inc
adc
int3
pushf
lret
int
addr16
and
mov
rcr
fs
sbb
stos
or
jb
sbb
aas
icebp
sub
lea
sbb
fisttps
icebp
dec
cwtl
ficoml
icebp
dec
and
ret
insl
cmp
lock
xchg
adc
ret
sahf
cmp
leave
mov
shlb
mov
xor
dec
jp
xchg
inc
mov
add
add
add
jnp
sti
xchg
rol
imul
aas
loope
icebp
add
testb
add
mov
dec
sti
sbb
test
xor
js
into
aad
and
mov
paddsw
sbb
inc
jo
sbb
dec
xor
jae
aaa
fildl
aam
cmp
mov
or
out
inc
in
movl
cwtl
xor
adc
inc
adc
in
stos
stc
repnz
pop
stos
dec
xor
xor
add
ja
repz
add
test
mov
arpl
jo
sub
icebp
mov
inc
movsl
sbb
in
lahf
jb
mov
mov
loope
and
xorl
ret
bound
mov
pop
push
stos
out
jp
cmp
or
out
movsb
sub
push
jb
mov
int
lock
push
stos
sub
outsl
lds
sbb
int3
sbbb
cs
jno
sbb
fildl
daa
dec
add
out
add
sub
pop
sarl
test
sub
add
testb
add
adc
mov
xchg
rorl
in
mov
inc
addr16
enter
stos
fisubl
rclb
xchg
das
pushf
mov
adc
xor
mov
add
orl
mov
pushf
cmp
movaps
add
cmp
push
dec
and
stos
mov
outsl
inc
add
add
pushf
mov
xor
push
repz
push
das
lods
cmp
sub
out
cs
test
mov
fwait
dec
into
jg
push
adc
inc
pop
fstpl
ficoml
ljmp
xchg
daa
jb
jle
nop
test
andl
mov
xor
mov
movl
and
or
jge
insl
and
mov
lret
pop
stc
leave
leave
xor
jno
lea
mov
cmp
cld
or
add
add
repz
std
repz
xchg
scas
fisttpll
xchg
enter
add
add
add
scas
mov
xor
mov
adc
scas
sahf
imul
push
lds
sub
fxch
sub
jmp
jge
loop
lock
jb
add
lods
scas
add
add
cmc
and
dec
jmp
cwtl
mov
mov
sbb
mov
addr16
pop
pop
orl
sbb
aam
addr16
pop
pop
mov
xor
imul
cwtl
cmp
insb
cmp
xor
call
adc
mov
pop
or
xchg
inc
cmp
sarb
jl
negl
ret
enter
mov
lock
call
and
mov
dec
jle
mov
stos
mov
xor
dec
push
loope
push
xchg
adc
fadds
sub
or
xchg
mov
es
fldl
cs
fdivr
shll
fidivs
and
leave
jp
loopne
adc
add
add
lock
cmp
or
movsb
xor
psadbw
add
testb
add
lea
repz
scas
pushf
xchg
test
les
dec
jb
daa
insl
or
fwait
sub
sbb
xchg
sahf
dec
loopne
adcb
pop
gs
popa
push
sti
mov
fcomps
mov
clc
sub
jmp
cmp
orl
mov
xlat
into
jp
and
lret
sbb
xchg
lahf
or
or
jb
xchg
notb
or
fs
subl
jmp
les
push
scas
push
mov
lret
or
fsubrl
inc
loope
or
shll
loopne
mov
std
mov
sub
cs
xor
cmp
fidivs
inc
dec
jnp
scas
add
cli
insb
push
pop
adc
insl
dec
outsb
inc
cmp
and
mov
mov
mov
in
pop
push
pushf
jae
add
insl
lcall
lret
sbb
aad
fsub
lret
add
testb
add
xchg
cwtl
pop
adc
ret
in
adc
mov
lahf
jg
jl
mov
addl
mov
insb
lods
mov
mov
or
lock
push
cmpsb
sub
addr16
fdiv
bound
lahf
test
mov
pusha
xchg
subb
scas
test
inc
push
xor
cltd
outsb
xor
xchg
xadd
or
test
clc
lock
ficompl
xchg
or
inc
test
sbb
jbe
sbb
and
cmc
xchg
hlt
fsub
insb
out
cmp
push
fwait
dec
ret
mov
inc
or
mov
pop
cmp
mov
loopne
add
cmc
mov
daa
sarb
roll
jge
and
push
dec
test
or
repnz
adc
ja
pop
stc
or
pusha
xorl
testl
lret
xchg
in
mov
pushl
comiss
inc
xchg
xor
cmc
add
testb
add
pop
sub
fxam
jns
and
push
dec
mov
sbb
inc
or
aaa
jmp
push
outsl
notl
jne
sbb
cmp
jns
rol
lcall
iret
rcrl
mov
cmp
lock
sub
daa
sbb
cmpsb
sub
cmp
pop
sbb
pop
mov
mov
push
mov
subb
mov
xchg
rcll
js
and
cmc
popa
mov
inc
sbb
push
iret
inc
or
pop
adc
dec
sti
je
ret
ret
mov
xchg
data16
push
pusha
inc
sti
fwait
jns
loope
rorl
mov
sahf
stos
arpl
pop
pop
imul
shlb
hlt
mov
into
and
pushf
xchg
loopne
mov
mov
stos
adc
mov
incl
repnz
lret
xchg
out
xor
popl
add
sub
in
negl
push
inc
push
xor
loope
fdiv
add
testb
add
mov
pop
fldcw
mov
and
negl
fnstsw
ss
in
mov
add
inc
fmulp
xchg
xor
stos
cmp
movsb
lea
and
and
outsl
lea
and
or
mov
sbb
imul
out
xchg
ljmp
cmp
jge
pusha
mov
mov
mov
mov
pop
jl
iret
jns
push
cltd
jbe
and
cmp
xor
cmpsl
jnp
add
pop
mov
lret
lcall
fimuls
dec
or
pop
mov
cld
cltd
movsb
ficomps
and
fistl
cld
xor
dec
sbb
add
xlat
insb
out
adc
push
hlt
jb
ja
les
pop
icebp
dec
sar
xchg
mov
dec
insl
add
fistpll
nop
fmull
add
testl
add
mov
out
adc
inc
sub
in
sbb
push
jae
and
xor
les
inc
fistl
pushf
nop
sub
ret
fsubs
pop
pop
clc
data16
shlb
rol
add
mov
jno
lds
sbb
xchg
dec
in
or
sahf
sbb
inc
xlat
jl
lret
mov
hlt
test
pusha
or
cmp
xor
fstp
and
xchg
push
mov
pop
xor
xchg
loope
movsl
dec
cmc
or
sbb
add
jae
movsl
enter
in
sahf
repnz
imul
cmp
mov
inc
mov
movsl
jne
push
inc
js
shlb
lods
sub
and
sbb
lods
and
mov
ljmp
into
fldenv
clc
rcl
sbb
fs
fwait
mov
arpl
lds
mov
pop
add
cmp
mov
push
add
adc
push
or
testb
add
adc
cld
outsl
pop
mov
insb
cld
adc
jbe
and
fldl
xor
loop
mov
pop
jno
and
icebp
das
xor
push
rcrb
bound
jnp
lret
adc
sahf
call
inc
jge
lret
add
push
les
imul
and
or
xchg
mov
sbb
iret
dec
or
push
sti
sbb
mov
outsb
or
sbb
push
xchg
push
aam
ljmp
hlt
in
inc
push
jl
sub
pop
ficomps
cmpsl
push
add
div
mov
lds
aam
lea
push
mov
leave
adc
mov
imul
in
xchg
xchg
inc
mov
adc
mov
cmp
cmpsb
xchg
cmp
ret
out
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
fcmovbe
out
fs
popa
int3
xchg
push
sbb
xchg
popl
in
into
adc
aaa
rorb
add
imul
mov
stc
movsb
push
and
mov
addr16
mov
adc
add
inc
bound
es
fidivrl
mov
faddl
mov
push
push
and
mov
pop
mov
adc
jnp
not
push
bound
shrb
sub
adc
bound
jge
cltd
push
jne
jecxz
lods
xor
dec
mov
and
dec
loope
adc
lret
pop
xchg
cmp
add
dec
pop
in
dec
jg
push
mov
pop
scas
adc
movsb
jns
or
nopl
lret
std
daa
xchg
cld
cmpl
dec
stos
insb
mov
push
mov
and
push
std
in
lock
aam
add
pop
mov
push
decl
call
cli
add
testb
add
dec
jo
iret
jae
ja
pushw
inc
and
rcrb
jbe
dec
jp
lock
int
lea
push
mov
cmpsb
sbb
adc
or
fistpl
lret
jge
sbb
out
fidivs
xchg
xor
push
std
pushf
enter
xchg
jo
mov
or
xor
jo
fucomip
pop
ss
out
outsl
popf
or
inc
inc
out
lods
adc
movsb
and
pop
mov
mov
shrb
mov
push
lds
cmpsb
rcll
sub
xchg
testb
xor
jle
fistpl
or
into
test
es
out
int
lahf
mov
cs
lds
push
pop
and
out
pop
or
jp
out
insl
mov
cmp
dec
sbb
dec
fistps
jb
pop
pushf
mov
xchg
imul
dec
or
pusha
add
push
cmp
mov
add
jmp
in
dec
dec
ret
xor
es
testb
add
popa
psraw
jmp
cmp
pushf
add
push
jl
outsl
push
sub
pop
sbb
adcl
es
mov
outsl
pop
pushf
pop
xchg
sbb
add
push
icebp
mov
sbb
mov
sub
stos
push
jae
addr16
xchg
xchg
pop
mov
stos
inc
xor
adc
test
mov
mov
sti
cmc
test
cs
push
lcall
add
push
inc
add
loope
inc
add
bound
push
mov
add
dec
cmpsl
fisttps
or
jo
lock
jo
cmp
xchg
jg
pop
hlt
mov
or
dec
negl
jecxz
pop
sbb
fstl
fcom
dec
and
mov
jp
popf
push
pop
daa
jo
adc
and
and
or
stos
les
pushf
cld
add
testb
add
cmpsl
mov
cs
push
jo
aas
xchg
ljmp
mov
inc
test
sbbb
popf
enter
adc
out
clc
mov
xor
int
scas
and
ret
adc
dec
and
pop
push
sti
mov
pop
xchg
lahf
xchg
or
ds
insl
ljmp
mov
or
inc
cwtl
imul
jno
call
add
and
movb
aad
je
pop
icebp
stos
out
and
adc
fs
inc
je
sub
ds
dec
and
daa
mov
jns
lahf
mov
xor
out
adc
cmpsb
mov
fmulp
psrlq
mov
in
sbb
std
dec
andb
cmp
mov
loope
sbb
push
xchg
std
pop
xor
sbb
and
insb
cmpsb
adc
jo
dec
fs
int
cmp
sub
mov
inc
data16
ret
mov
add
add
inc
ror
lock
jnp
jmp
sbb
mov
stos
xchg
std
add
testb
add
add
add
shlb
adc
addb
sbb
xor
lcall
inc
das
pop
jbe
icebp
adc
clc
cwtl
loop
cmp
xchg
scas
jl
insl
and
sbb
jl
cmp
sahf
add
js
mov
test
inc
orb
inc
leave
icebp
inc
ret
inc
imul
stos
jo
dec
dec
bnd
jp
or
xchg
inc
or
ret
shr
and
sub
scas
movsl
out
mov
cmpsl
iret
jg
mov
sub
shrb
loopne
sbb
mov
jmp
lret
divl
xor
loopne
xchg
mov
sbb
and
push
jns
mov
cld
leave
mov
sub
lods
fsubrs
mov
sub
shlb
add
loop
sbb
je
orl
lds
js
add
repz
fimuls
mov
aam
mov
add
testb
add
push
jmp
sbb
fwait
xchg
mov
dec
cmpsl
xor
insb
test
data16
mov
cld
inc
push
ret
pop
jne
mov
dec
or
divl
call
lods
sub
int3
mov
repnz
rcl
jmp
or
xlat
rclb
cs
sbb
add
pusha
popa
pop
dec
jle
fstpl
rcl
inc
or
xchg
cs
inc
sbb
mov
out
movsb
leave
mov
lcall
mov
jb
test
pop
mov
cmp
shr
and
enter
loope
scas
imul
adc
cmpsl
out
popa
add
mov
inc
push
and
xchg
pop
icebp
ja
sub
or
push
cmp
xchg
imul
cmp
xchg
lods
stc
bound
fwait
insl
sahf
push
or
add
out
xchg
jns
inc
je
ret
add
testb
add
cmp
or
xchg
outsl
test
sti
in
lahf
out
cwtl
mov
push
idivl
xor
xor
mov
scas
sbb
sub
bound
and
xchg
push
addr16
xor
adc
push
pusha
sub
rolb
jne
insb
mov
jnp
pop
jns
add
pop
imul
aam
xor
andb
in
mov
add
popa
add
cmpsb
sub
icebp
lahf
addr16
pop
adc
shrb
xchg
idivl
clc
inc
lods
xor
popa
inc
sti
jl
fisttps
adc
frstor
mov
cs
daa
xor
inc
adc
addr16
sarl
fsubp
mov
dec
pmulhuw
outsb
je
shrl
cmp
add
mov
sti
dec
fimull
xchg
mov
sub
bound
in
and
cmc
into
mov
add
scas
push
repz
cmc
scas
mov
stos
lea
testb
add
mov
xor
cmp
fdivrl
movsb
test
ja
push
cmp
test
inc
imul
xchg
jne
pop
jmp
push
insb
aam
inc
loopne
andl
outsl
out
fs
negl
out
sub
cmp
add
loope
mov
js
inc
pop
into
jno
cmpsb
mov
movsb
aam
inc
mov
clc
fisttpl
xchg
out
push
sub
mov
sub
jl
add
mov
fcompl
cmpsl
lds
sbb
movsb
je
lret
add
mov
mov
arpl
and
sbb
ficoml
push
mov
jg
inc
mov
arpl
sbb
daa
cli
loope
mov
outsb
sub
jg
cmp
adc
pop
outsl
in
and
cmpl
add
lret
pusha
rorb
lea
xor
push
add
testb
add
inc
insb
out
sbb
inc
jle
ja
inc
xchg
cmpsl
pop
mov
inc
xchg
cmp
mov
cmc
jbe
pop
movsb
shlb
js
inc
icebp
int3
xor
pop
movsl
and
jge
int
addr16
add
pop
lahf
jle
inc
mov
aad
lcall
mov
pop
cmp
fiadds
mov
pop
std
stos
mov
and
inc
sbbl
push
repz
dec
pop
loope
imul
loope
pop
gs
cmc
outsb
out
cmp
lret
mov
and
ss
nop
ss
int
fwait
dec
jnp
les
xor
xor
mov
jae
sahf
or
negl
nop
add
in
shll
sbb
int3
cwtl
xchg
xor
pop
movsl
sti
mov
or
dec
xchg
dec
lods
test
data16
jno
add
gs
testl
jecxz
mov
add
add
add
add
movsl
inc
jns
leave
dec
dec
mov
iret
leave
cmp
into
pop
sub
xchg
mov
test
or
jp
jnp
xlat
shrl
das
cmc
popa
push
push
ret
jmp
adc
push
js
mov
push
adc
mov
stc
xor
sub
cwtl
sti
jns
shlb
xor
es
arpl
pop
push
clc
lahf
movsl
out
adc
mov
lods
inc
fidivl
and
stc
xor
xor
pop
sarl
imul
shll
mov
loope
in
repz
outsb
pop
xor
ja
jl
lcall
cmp
mov
shll
jmp
out
in
pushf
xor
scas
fstps
xor
sarl
xor
dec
mov
jle
clc
lahf
out
mov
dec
jmp
fs
arpl
std
outsb
and
dec
imul
xorb
fnstenv
xor
add
and
daa
lahf
jle
sbb
inc
insb
out
push
add
add
add
add
stos
push
push
dec
into
frstor
or
push
lods
cmp
ret
pop
push
jnp
cmp
mov
stos
jmp
pusha
cmc
pop
xchg
cmp
mov
add
push
mov
add
mov
cmp
xchg
inc
adc
imul
dec
icebp
jg
jae
jmp
into
stc
std
fcmovbe
ficoml
add
sub
fbstp
outsl
or
aas
add
pop
jmp
fs
xor
aam
xor
cmp
orl
sbb
movsb
push
dec
pop
push
iret
fstpl
out
and
imul
out
int
and
fcoml
mov
es
inc
add
dec
fistps
dec
and
dec
dec
adc
push
aaa
push
in
and
test
movsl
js
dec
adc
mov
in
shlb
push
cmpsl
add
mov
xlat
aam
mov
sub
testb
add
in
imul
push
jae
gs
push
aaa
sub
push
mov
inc
sti
adc
movsb
rcl
inc
filds
dec
adc
sub
or
mov
mov
adc
leave
cli
add
sbbb
dec
test
lds
inc
fldl
inc
sbb
mov
inc
mov
aam
leave
into
enter
sub
jne
jne
mov
mov
call
push
adc
idiv
sti
std
jnp
xor
sub
inc
ss
jmp
add
jno,pt
in
dec
jge
bound
dec
add
xlat
lods
andb
mov
xchg
in
or
push
roll
leave
mov
push
loope
inc
jno
jl
aam
sbb
mov
scas
movsb
mov
xchg
pop
addr16
lods
xchg
in
fcompl
jb
out
xchg
adc
mov
sub
jl
add
push
inc
pop
jns
aas
fisttpl
inc
xlat
cmp
mov
testb
add
sbb
mov
es
push
addb
inc
loope
icebp
rclb
fnstcw
fs
mov
jb
ds
popf
idivb
xchg
out
push
test
fstpt
shrl
xchg
add
test
stc
xchg
sahf
inc
push
test
lods
push
mov
cmp
inc
int3
mov
stc
inc
into
cltd
dec
mov
aad
mov
push
push
inc
xor
xor
popa
sbb
popa
mov
lcall
scas
aas
cli
divb
scas
ret
and
dec
scas
loope
out
xor
and
jne
ja
aad
dec
addr16
insl
pop
push
jge
aas
jle
xor
adc
jno
adc
out
arpl
inc
lds
in
pop
cmpsl
fnstenv
mov
or
addl
dec
jnp
push
jbe
movsb
pop
pop
mulb
addr16
xchg
push
stc
mov
not
jle
xor
pop
neg
test
add
cmpsb
sbb
jnp
mov
out
inc
in
cmp
add
testb
add
push
adc
add
test
ljmp
aam
mov
cmp
ret
sbb
pop
daa
inc
push
sub
gs
movsb
mov
nop
and
sub
push
ret
pop
xor
jg
cltd
sbb
enter
popa
mov
xor
fistps
inc
cli
aas
sbb
fsts
xchg
lahf
imul
and
rol
lods
and
xchg
pop
lret
test
fstps
or
movsl
lods
pop
or
jmp
repnz
iret
fnstenv
push
nop
jmp
push
sbb
das
loopne
add
cmc
test
cmp
test
xchg
lret
jg
andb
jg
mov
inc
jne
and
ficompl
movsb
fdivr
jns
mov
enter
stos
pop
add
cld
push
in
cmp
int
and
sbb
fsubl
ss
sub
add
xlat
pop
xlat
jg
mov
cmp
dec
or
pop
add
testb
add
mov
pop
cltd
cld
or
dec
mov
in
and
sub
pushf
mov
or
lcall
mov
aas
dec
xchg
and
push
jp
adc
jle
pop
lock
jge
add
mov
ret
jl
mov
fnstcw
imul
adc
dec
mov
aam
add
outsl
in
in
or
add
adc
pop
dec
sub
pop
jno
je
mov
hlt
lods
push
ret
cmp
fistpl
cld
leave
nop
in
pop
cwtl
mov
out
add
mov
cmp
imull
mov
jno
out
aad
stos
je
aad
mov
push
inc
or
jno
sahf
jl,pn
sbbb
mov
addb
push
jge
out
loopne
push
adc
fucomip
inc
clc
xchg
push
push
jb
addl
add
fdiv
mov
jbe
push
add
add
add
push
mov
and
sbb
mov
decl
out
mov
push
nop
stc
hlt
or
xchg
cltd
enter
mov
jmp
loopne
test
stc
add
and
and
ret
push
inc
imul
add
loopne
ja
cmp
or
push
mov
jge
subl
xor
into
dec
jg
in
popa
mov
cmp
into
add
stos
cs
loope
orb
neg
in
lea
pop
sbb
xor
fidivrl
adc
andl
lods
sbb
mov
jne
pop
rorb
imul
mov
mov
jge
clc
inc
fisubl
das
sbb
inc
add
dec
mov
jl
cmovne
push
push
xor
xchg
or
jle
inc
jp
aas
mov
jp
out
int3
out
add
test
mov
stc
sub
fs
sbb
add
testb
add
or
nop
rcll
mov
adc
sbb
lcall
je
in
out
jp
or
clc
xchg
inc
test
pop
sbb
inc
mov
test
jne
sbb
xor
pop
dec
xchg
ret
lock
enter
jp
test
psubw
lret
or
popa
push
stos
iret
xor
dec
imul
push
lock
insb
lahf
sahf
inc
scas
xchg
mov
test
xchg
pop
push
or
add
cmpsb
in
xchg
push
inc
push
ret
repnz
cmpsl
outsb
pop
pop
std
cli
ret
push
push
jno
cmpsb
cmp
inc
mov
mov
add
add
jp
pop
push
inc
insb
mov
mov
adc
or
cmp
and
adc
xchg
and
sub
and
or
lods
jnp
or
mov
out
sub
cltd
mov
adc
add
push
pop
push
jmp
sub
jge
adc
add
testb
add
in
outsl
into
adc
leave
jno
test
iret
mov
xor
aas
mov
daa
xor
popa
hlt
adc
add
mov
js
outsl
push
mov
call
jb
push
push
adc
pop
lret
scas
and
mov
jecxz
cmp
js
xchg
add
ss
jb
xorb
pop
add
or
mov
popf
loop
test
fildl
test
jbe
xor
xchg
dec
push
jl
sub
sbb
rorl
cmpb
aam
sub
arpl
mov
dec
inc
jecxz
pop
stc
xchg
xor
jmp
pop
int3
fmul
jo
cmp
fs
sahf
push
sbb
mov
test
dec
jb
les
rcrb
fsubr
call
sub
sbb
mov
add
pop
lods
pop
cli
cmc
inc
mov
mov
or
add
add
add
lahf
or
mov
xchg
shrl
jg
sbb
lahf
pop
cmc
sub
xor
mov
inc
nop
and
test
dec
dec
inc
push
aam
loope
xor
les
lahf
fldl
cmc
jb
sbb
mov
add
fcomp
icebp
cltd
xlat
adc
inc
and
call
fincstp
jnp
aad
sbb
mov
inc
dec
xchg
xchg
mov
pusha
pmaxsw
cwtl
mov
cwtl
cmc
xchg
roll
adcb
movsb
iret
es
popa
int
ret
jl
int
jno
jmp
mov
adcb
xor
mov
jecxz
aam
into
cmc
sub
mov
push
test
pop
imul
mov
jno
sarl
sub
cltd
cmpsl
nop
aad
mov
loop
dec
popa
sub
in
sub
xor
stos
mov
inc
xchg
jns
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
or
jb
or
add
add
add
cwtl
dec
cld
pusha
fdivs
pop
xor
xor
or
fs
add
mov
mov
sahf
xlat
loop
pop
inc
dec
scas
dec
and
aaa
hlt
lret
push
out
dec
andl
dec
dec
aad
xchg
dec
mov
add
jbe
or
test
lret
test
loop
out
sub
loop
cmpsb
dec
jecxz
ror
xchg
cmp
insl
enter
mov
js
adc
jp
cwtl
sbb
dec
loope
push
ljmp
hlt
pop
sbb
fimuls
lret
loope
sbb
cmpsl
frstor
call
dec
dec
jne
cmpsb
jno
hlt
push
jne
arpl
mov
rolb
out
ja
cmp
mov
adc
pop
lock
xor
jbe
daa
stos
mov
out
rcll
pop
mov
jge
or
add
add
aam
int
xchg
clc
lea
add
add
add
fadds
or
or
popa
stc
faddp
mov
mov
loope
jg
sbb
fimull
out
xor
je
mov
sbb
jecxz
scas
push
inc
mov
or
adc
bound
test
inc
inc
jecxz
xchg
xchg
sti
jl
jne
mov
sub
xor
pop
pop
cmpsl
add
mov
into
aas
pushf
sbb
dec
cmc
push
xchg
cmp
mov
jl
gs
sub
and
push
int3
pop
insl
push
test
or
mov
xchg
add
lret
popa
push
jl
xor
lea
sahf
aas
add
hlt
jne
or
add
rorb
push
push
mov
sub
push
in
lea
push
dec
push
int
push
sub
and
mov
pop
arpl
addr16
inc
jmp
jg
or
add
jp
xchg
call
lret
je
ljmp
outsl
cmp
je
insb
push
adcl
jle
notl
mov
xor
imul
enter
pushl
mov
scas
sbb
imul
mov
mov
std
push
mov
fcompl
stos
mov
or
in
insl
hlt
push
orl
enter
addb
loopne
std
ja
out
mov
dec
pop
xchg
xchg
cmp
adc
orb
popa
mov
jmp
xlat
adc
push
mov
bound
fidivs
cmp
leave
in
inc
xchg
and
movlps
jb
sub
xchg
xchg
mov
fdivl
je
ret
out
cmp
enter
or
clc
pop
add
clc
cmp
outsb
push
cmp
add
out
out
pushl
jecxz
xchg
cmc
shlb
push
add
testb
add
push
int3
xor
sbb
and
mov
mov
pop
dec
pop
mov
push
xor
rcr
stos
or
jnp
push
lds
sub
fadds
rorb
inc
iret
inc
xchg
test
in
mov
push
lds
mov
lret
and
in
cmpsl
dec
scas
xor
mov
pop
cltd
mov
cltd
test
sti
mov
adc
jno
fistpl
mov
mov
imul
push
sbb
jecxz
push
mov
jmp
adc
adc
and
pusha
push
subl
fisttpll
jg
cltd
pusha
mov
fdivrl
jns
orb
scas
pop
push
sbb
sbb
neg
push
jl
jb
iret
sbb
push
incl
adc
xchg
pop
mov
ljmp
add
test
push
scas
out
mov
shlb
sgdtl
testb
add
or
sahf
arpl
subb
push
repnz
xchg
or
xchg
negl
fwait
in
xchg
lods
and
fsubrs
mov
xor
xor
add
mov
cmp
adc
adc
mov
xchg
in
mov
ljmp
dec
push
sbb
clc
icebp
xchg
js
push
pop
repz
fwait
call
fistpl
jne
jge
arpl
or
mov
fsubl
add
stc
sti
sbb
adc
mov
and
pushf
cwtl
mov
into
push
or
pop
cltd
mov
insb
pushl
loope
aad
outsl
sbb
out
xor
lock
add
lret
xor
lcall
mov
mov
push
sub
addr16
stos
ja
push
pop
mov
iret
xor
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
jnp
addr16
adc
add
add
add
rolb
bound
stos
dec
decl
add
xchg
mov
adc
das
mov
inc
jmp
push
lahf
mov
and
aas
loopne
jmp
stos
and
ljmp
ljmp
pusha
loop
xchg
or
insl
inc
daa
or
jmp
es
jmp
push
jae
xor
test
mov
filds
xchg
dec
sub
push
pop
add
cld
imul
or
inc
push
add
jo
sbb
cmp
cmc
icebp
fimull
mov
add
cmp
add
jmp
insl
push
int
sbb
sub
push
fwait
pop
fldl
lret
push
push
leave
mov
dec
adc
cmp
hlt
in
add
int3
orb
pop
dec
mov
roll
push
and
int3
out
fs
lea
add
fdivl
mov
xor
adc
add
add
add
hlt
jo
pop
cmp
in
sub
sarl
iret
mov
jmp
xchg
subb
lahf
xchg
xchg
jmp
int
shll
in
push
imul
cs
adc
sbb
int
cli
add
scas
mov
pop
scas
lahf
gs
xchg
repnz
sbb
scas
push
fiaddl
cmp
mov
fs
rorb
mov
push
add
mov
jo
adc
or
push
sbb
les
cmp
pop
mov
mov
fldcw
ljmp
insb
fistpll
fadds
mov
rclb
dec
inc
adc
jbe
icebp
sub
sbb
mov
ljmp
je
insb
stc
push
aam
inc
xchg
leave
nop
mov
mov
or
add
mov
mov
fidivrs
popf
enter
adc
add
add
add
mov
pusha
jmp
stc
xor
dec
rorl
arpl
ja
cmpsl
cmp
xor
xor
pusha
paddusb
fwait
pop
jae
and
pop
stos
and
arpl
out
push
jne
mov
das
mov
sahf
pop
sub
out
repnz
cmp
sub
stos
popa
lods
sbb
sbb
stos
add
or
xor
and
and
push
ficomps
pop
push
adc
and
jns
sbb
push
jb
fwait
sub
fisttpll
lret
add
xchg
into
in
stos
mov
outsb
sbb
xchg
loop
in
cs
stc
xor
inc
icebp
and
add
dec
fs
fimuls
add
pop
scas
das
jp
loopne
mov
jmp
cwtl
push
popf
push
out
je
xor
jne
xchg
xlat
jne
int3
mov
mov
je
mov
pop
cmp
add
xchg
sub
scas
jbe
or
lods
adc
add
add
add
mov
dec
sarl
adc
xchg
test
jae
stos
call
iret
test
out
in
data16
scas
push
fcmovnb
lahf
mov
rcrb
leave
ss
sbb
mov
pushf
pushf
cmc
leave
mov
clc
aaa
out
fidivrl
pop
xchg
pop
sub
jp
cmp
fmulp
fwait
jb
sti
sub
arpl
xacquire
or
mov
cs
and
mov
adc
mov
mov
lods
lods
outsb
mov
mov
or
mov
push
insb
movsl
cmp
adc
fldcw
xchg
jecxz
pop
in
je
gs
cmp
lods
jg
sahf
scas
cwtl
ffreep
xchg
mov
push
inc
xchg
inc
and
movsb
shrl
rolb
pop
iretw
add
add
hlt
fists
xor
data16
add
add
test
pop
push
pop
outsl
jmp
xchg
das
lods
aaa
push
insb
lret
or
mov
iret
cmpsb
xchg
inc
mov
jecxz
pop
adc
ret
scas
pusha
flds
mov
stos
inc
test
jl
or
es
xlat
out
add
mov
int3
scas
dec
mov
jl
inc
jb
imul
xor
xchg
jmp
fisttps
in
orl
mov
jmp
inc
std
xchg
popf
outsb
push
push
lds
arpl
orb
repnz
daa
pushf
das
rcrl
cld
insb
mov
mov
push
mov
jae
dec
sbb
mov
adc
aam
fisttpl
push
cmp
mov
cmc
test
fstl
dec
stos
ds
je
lret
call
xor
movsb
push
jg
lock
pop
cli
push
jnp
adc
add
mov
into
fwait
testb
xchg
add
testb
add
out
fistps
sti
aaa
add
mov
movsl
popa
xchg
pushf
fadds
push
jle
cltd
stos
jge
jecxz
lret
dec
and
pop
dec
jbe,pn
test
mov
pmullw
push
fdivrl
or
or
data16
xlat
mov
into
xchg
cs
push
loope
or
mov
and
adc
loope
mov
stos
dec
pop
mov
adc
cli
cmp
cltd
xor
add
pop
bound
fnstcw
hlt
movsb
xchg
cmp
aam
add
in
std
mov
inc
xor
bound
lock
shrl
sub
and
scas
sbb
ss
scas
mov
inc
add
mov
stc
lock
xchg
inc
icebp
fbstp
xchg
test
jecxz
inc
jge
dec
in
cld
mov
jecxz
sarl
jbe
loop
add
xor
mov
pop
mov
loope
pop
mov
add
testb
add
bound
sub
imul
dec
cmpsb
scas
jle
ss
add
mov
stos
dec
xor
sti
jecxz
aam
out
movsb
or
aaa
push
push
lea
imul
lahf
icebp
lahf
mov
sahf
inc
jecxz
imul
mov
add
sbb
cmc
dec
inc
xor
fnstcw
jnp
dec
lahf
jg
movsl
mov
dec
mov
arpl
inc
in
cmpsb
pop
ret
sub
or
dec
cs
or
ja
ss
mov
lahf
mov
add
mov
test
cmp
test
mov
jg
pushf
mov
out
jno
add
xor
inc
mov
ffreep
into
xor
mov
gs
outsb
lods
xchg
test
fdivrl
add
mov
add
add
inc
out
aas
mov
sub
inc
pusha
daa
test
add
testb
add
mov
xchg
jo
xor
inc
mov
push
shl
jbe
xor
cmp
xchg
call
ret
mov
into
push
fs
pop
jns
sarl
or
xlat
inc
jns
daa
cmp
idivl
mov
sahf
popa
out
nop
repnz
iret
mull
jecxz
scas
mov
iret
std
jno
mov
lret
movsl
pop
stc
test
test
dec
jo
add
mov
mov
inc
in
hlt
gs
mov
push
cmc
push
pop
fwait
movsb
jge
jae
mov
pop
dec
hlt
sub
mov
jnp
orl
sbb
fucomp
jle
in
sti
push
push
pop
dec
das
mov
aaa
std
inc
repnz
loop
mov
push
cmc
or
push
lods
lcall
out
fidivrs
lods
lods
sub
inc
pushf
or
push
sub
mov
xlat
icebp
pop
add
push
bnd
jp
xchg
inc
mov
sbb
add
add
add
fisubs
fs
leave
add
iret
addr16
and
aas
push
pushf
dec
outsl
fdivrs
xor
loop
sub
adc
call
shl
pop
inc
subl
mov
movsl
dec
pop
sarb
fwait
mov
inc
mov
arpl
jnp
xchg
mov
imul
testl
gs
les
fwait
mov
cmp
sub
push
pop
cmp
mov
inc
int
xchg
pop
popa
sbb
pop
push
inc
dec
sbbl
jne
xchg
dec
jp
cwtl
push
iret
pop
stc
dec
dec
push
dec
int3
mov
cmc
leave
xchg
jno
js
test
xorb
and
fisubrs
cmpsl
subl
jg
push
push
fstpl
sbb
pop
mov
stc
fucomip
inc
add
or
sub
popa
fsubl
cmp
lods
aas
xor
int
fadd
jbe
or
inc
mov
and
add
sbb
in
out
ja
fbstp
mov
stos
jo
add
testb
add
adc
inc
ja
leave
push
cmp
mov
cmp
mov
inc
pop
rol
and
jnp
sbb
dec
leave
sbb
adc
movsl
dec
jbe
jmp
lahf
aas
rorl
cltd
mov
mov
bnd
xchg
xchg
mov
xchg
jg
push
mov
cmp
xchg
xor
call
adc
and
dec
rorl
ja
hlt
cs
jns
cli
xchg
adc
inc
jb
icebp
sbb
enter
pusha
mov
outsl
sahf
clc
int3
push
je
fimull
mov
pop
mov
and
sbb
sub
inc
jecxz
xchg
xchg
dec
mov
pop
repz
dec
jbe
rcll
popf
out
jne
inc
jg
mov
bound
xchg
mov
insl
or
arpl
add
scas
test
in
xor
sbb
add
add
add
jnp
pop
cmp
insl
sub
shll
movsb
sbb
out
repz
ds
sbb
mov
mov
xchg
add
jmp
sbb
and
cltd
jg
fidivrl
or
pop
cmpsl
xchg
sub
jp
andb
pushf
nop
dec
insb
in
dec
js
stos
out
adc
inc
into
push
ret
dec
in
addr16
pop
adc
mov
xchg
stc
dec
sarl
rclb
dec
inc
and
js
xor
loope
ret
push
cmpsb
and
daa
xor
aas
jl
xchg
dec
loop
mov
pop
pop
dec
or
mov
and
push
jmp
je
dec
cmpsl
push
addr16
xchg
inc
push
loop
inc
mov
decb
sbb
mov
test
cld
adc
mov
stc
je
push
nop
mov
nop
sbb
stos
loopne
dec
addr16
xor
bound
in
cmp
leave
cltd
stos
add
mov
jg
imull
push
imulb
mov
pop
sbb
add
add
add
lds
push
cmp
pop
nop
adc
mov
and
mov
jne
mull
lea
daa
cmp
sti
jecxz
jmp
ljmp
sub
push
xor
xlat
mov
pop
add
jae
orl
lea
aam
inc
lods
leave
jne
pop
unpckhps
mov
aas
out
pop
movsl
test
push
cltd
mov
and
jle
sub
mov
jnp
ficoms
mov
pop
or
cmpsl
cld
loopne
dec
xor
mov
xchg
test
scas
ja
sbb
cmp
out
loopne
aas
mov
push
xor
mov
mov
inc
and
lret
xor
in
je
and
pop
add
sarb
cpuid
pop
movsl
divl
out
add
cmp
sti
jg
and
inc
es
push
sbb
add
add
add
lods
addb
jne
sub
ljmp
outsb
mov
out
mov
pop
shlb
loope
xchg
mov
mov
sub
jp
mov
outsl
test
pop
cmp
sbb
push
mov
fcoms
lods
jae
pop
xlat
pop
rol
sub
or
nop
push
xor
or
dec
lcall
sbb
push
pop
dec
out
int
nop
sbb
pop
mov
sbb
sahf
add
imul
gs
or
jmp
mov
add
and
lock
push
and
mov
dec
pop
stos
lock
or
mov
fs
lret
jno
inc
scas
jp
dec
mov
in
sbb
xchg
cwtl
push
mov
or
dec
fwait
inc
mov
xor
loop
add
scas
aam
jnp
fldl
mov
scas
dec
sbb
add
lods
lds
les
int3
js
push
xchg
adcb
xor
mov
mov
sbb
dec
cwtl
lds
pop
out
andl
xchg
sbb
ret
mov
xor
arpl
mov
jmp
mov
cmp
cmp
jmp
dec
sbb
pop
insl
mov
push
pop
pushf
xchg
add
fwait
enter
xlat
rorb
scas
cmp
xchg
iret
scas
leave
inc
push
sub
jbe
enter
xchg
and
jecxz
out
outsl
lods
pop
sub
cltd
xor
push
stc
cmc
jnp
xchg
xchg
adc
xchg
and
xor
add
or
xor
cmp
mov
inc
push
lahf
xor
push
and
lea
xchg
mov
pop
pop
jb
mov
mov
movsb
insl
movsl
mov
lods
xchg
mov
ss
popa
rol
mov
and
xchg
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
xor
mov
push
add
testb
add
out
les
jne
out
inc
adc
leave
sbb
jno
sub
sub
add
mov
push
popa
shl
test
imul
shlb
jno
jl
in
jmp
sarl
iret
decb
ljmp
sti
nop
and
mov
movsl
inc
mov
dec
sbb
sbb
cmpsl
push
cmc
or
fnstenv
and
dec
addr16
push
pop
mov
mov
mov
sbb
filds
psrlq
mov
sbb
mov
push
and
jnp
push
pop
mov
mov
outsl
mov
pop
jecxz
fcmovu
or
sub
arpl
scas
dec
cli
scas
dec
jne
stos
pop
fwait
xchg
push
out
nop
mov
and
out
and
mov
or
xlat
mov
les
and
lods
jl
push
pusha
mov
pop
push
jge
std
xor
mov
mov
shll
sbbb
loope
jmp
loop
clc
mov
pop
add
testb
add
enter
add
enter
mov
or
out
rolb
sti
notb
sub
cwtl
jmp
hlt
cmp
aaa
add
clc
ljmp
sub
stc
push
pop
cmpsl
fistl
adc
ss
mov
fsincos
aad
das
int3
jge
bound
mov
or
xchg
iret
cmc
dec
sbb
pop
popf
push
add
faddl
mov
insb
pusha
and
jp
push
jp
jne
inc
push
mov
fidivrl
pop
push
mov
or
pop
push
mov
das
out
dec
imul
stc
loop
xor
xor
lea
cs
inc
push
push
idivl
fdivl
adc
dec
ret
loop
lea
push
push
mov
fwait
push
sbbl
sbb
cld
ret
and
repnz
lahf
fnstcw
js
aaa
xchg
out
roll
add
xor
idivl
jl
jp
and
add
add
add
aas
pop
pop
xchg
dec
test
or
mov
popf
loopne
push
xchg
jne
je
in
icebp
jne
loopne
mov
push
sbb
mov
mov
mov
mov
mov
inc
cmove
mov
in
and
insb
sub
inc
stc
and
mov
push
loop
sub
in
mov
and
into
je
insl
stos
mov
or
push
or
pmaxsw
cmp
cmp
mov
sarl
pop
cltd
add
ret
push
or
and
das
cmp
push
push
push
add
in
mov
xchg
cmp
lock
jo
xor
push
pop
nop
xchg
push
mov
call
stos
js
jmp
mov
shll
movsb
mov
sub
push
inc
hlt
out
aam
sti
loop
xchg
aam
or
shlb
scas
push
pop
aad
repnz
out
and
add
cli
inc
jg
int
pop
sbb
push
rolb
and
add
add
add
lds
ficoms
push
sbb
pushw
dec
outsl
aad
mov
dec
jbe
and
xchg
and
push
lret
ljmp
mov
lods
ret
subb
fsubrl
pop
mov
push
sti
pusha
imul
inc
test
mov
pop
data16
stos
mov
sbb
hlt
sarb
or
adc
iret
add
cmpsl
mov
mov
fbstp
jae
push
in
shll
gs
mov
imul
popf
repz
xor
jae
int
pushf
sub
push
aaa
into
sbb
mov
inc
xchg
cmpxchg
sbb
sub
ja
vcmpss
adc
shl
cwtl
add
xchg
into
mov
pop
rorl
jne
cld
xor
fisttpl
std
sub
add
add
xchg
std
cmp
jle
fisttps
cmp
mov
testb
add
outsl
pop
lea
add
stos
add
mov
iret
lock
loope
pop
orl
and
mov
js
jg
stos
les
fisubrl
mov
mov
push
push
xchg
out
es
std
cmpsl
mov
jge
not
popf
or
jle
fcomps
ljmp
cmpb
imul
jmp
inc
jg
cmp
out
ja
ljmp
cmp
mov
mov
mov
es
dec
adc
adc
fcoml
cmp
dec
and
fnstenv
outsl
cmp
sbb
cmp
push
test
adc
adc
pop
mov
jns
mov
adcb
rorl
mov
cmpsb
enter
push
mov
and
add
xchg
pop
lds
xlat
ficoml
cmp
add
testb
add
xor
int
lods
xlat
sbb
ds
testl
xor
pop
cmp
test
in
jmp
and
fisttps
inc
push
stos
imul
fdivl
mov
loopew
fwait
and
mov
cmp
push
outsb
dec
and
popf
or
popf
repnz
lods
mov
fiaddl
rclb
cld
jnp
xchg
inc
sbb
test
lcall
mov
out
and
pop
sbb
jg
and
or
ja
push
dec
lahf
mov
cmp
xchg
ljmp
push
dec
ficompl
movsb
pop
inc
and
insb
ljmp
daa
mov
call
push
test
push
int
pop
nop
out
mov
loope
mov
sbb
adc
add
sub
iret
outsb
jmp
rcll
aam
xor
and
add
add
add
fucomi
ror
adc
stos
mov
in
mov
pop
out
inc
cmp
outsb
sub
enter
sbb
jae
push
test
mov
cmp
mov
sbb
mov
mov
push
ss
out
adc
in
dec
in
mov
sbb
lret
adc
out
dec
out
sahf
stos
rolb
enter
jo
lea
mov
movsl
lahf
sbb
mov
repz
int3
jg
into
jecxz
data16
flds
adc
test
sbb
cwtl
pop
and
sbb
sbb
xchg
push
xor
decl
sub
lods
jne
lcall
es
in
out
movsb
scas
jle
adc
mov
or
mov
sar
test
movsb
xchg
rolb
jb
rcrl
or
add
std
sbb
stc
cld
or
adc
xlat
clc
and
add
add
add
cmpsb
mov
test
sbb
cltd
aaa
test
jg
sbb
aas
outsb
jmp
xchg
pop
rcl
iret
sti
push
lahf
or
and
dec
dec
shll
mov
dec
repz
xchg
cmpl
inc
stos
mov
add
add
jno
cmc
fwait
insb
lods
ljmp
mov
ljmp
and
push
push
fildll
int3
scas
ljmp
jmp
pop
dec
dec
fwait
jb
je
mov
add
add
or
in
and
mov
icebp
pop
cmp
cli
push
jp
lock
mov
xlat
dec
jns
push
out
jp
ja
cmpsl
dec
push
mov
inc
lods
pop
outsl
push
xlat
shrb
jp
push
inc
jmp
popa
dec
xlat
popa
cmc
nop
fcomi
in
jb
jmp
xor
mov
mov
and
push
mov
add
jns
add
pop
test
scas
repz
cld
cmp
jl
fidivrs
out
and
add
mov
lahf
or
push
jmp
inc
jae
sbb
movsl
nop
mov
mov
jl
xor
gs
jne
cmp
xor
pushf
mov
inc
pop
mov
and
ja
inc
and
subb
mov
lock
jle
out
dec
cmpsl
push
in
cmp
mov
cmp
mov
jge
xchg
outsl
adc
out
out
leave
jp
gs
jl
data16
je
inc
inc
sbb
add
loope
ror
sbb
out
stos
push
pop
lock
mov
iret
out
pop
aas
movsb
daa
enter
mov
fistl
sub
or
dec
or
pop
or
jns
cltd
xor
ljmp
in
xor
sub
jp
mov
cmp
add
jae
dec
nop
push
popa
sub
inc
lods
and
mov
dec
pushl
jns
adc
in
add
testb
add
pop
xchg
std
mov
aad
loopne
sub
sbb
arpl
lcall
push
popf
mov
clc
movsb
sub
xchg
xchg
leave
shr
fwait
pop
inc
sbb
dec
and
inc
sub
xchg
ret
pop
stos
cmp
test
bound
and
or
adc
xchg
cmp
mov
rclb
xchg
xor
dec
rcll
inc
sbb
jecxz
stos
xor
bound
cmp
call
daa
cmc
xchg
and
jl
mov
fidivrs
inc
or
enter
and
aaa
jecxz
mov
hlt
testb
sbb
jbe
xor
jmp
aam
jne
and
xlat
call
ja
icebp
pop
imul
dec
mov
mov
punpcklwd
les
sbb
sahf
xchg
cmp
pop
add
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
push
push
add
add
add
imul
xor
mov
gs
push
sbb
aad
inc
mov
jns
scas
fisubl
aaa
or
std
nop
xchg
jp
stos
test
ret
out
lret
push
lods
jg
add
dec
out
mov
inc
sub
push
out
fildl
or
and
js
mov
mov
mov
loop
sbb
fwait
adc
pop
testb
repz
loopne
and
inc
leave
bound
mov
mov
mov
ficoml
std
push
rorl
iret
push
sbb
sub
ret
push
cmp
repz
push
stos
jbe
cwtl
mov
inc
fwait
sub
cli
xchg
sarl
pop
mov
mov
jb
mov
bound
test
outsb
out
dec
jp
inc
hlt
sbb
adc
xor
mov
aas
mov
into
jge
es
mov
xor
dec
add
repz
jae
ja
div
dec
lods
push
mov
sub
add
add
add
clc
repz
sub
aaa
push
pop
jne
xchg
push
mov
pop
jae
call
icebp
or
jmp
jl
mov
push
std
enter
inc
enter
pop
fst
pop
sbb
cmpl
daa
xchg
fdivr
push
inc
sbb
lds
dec
mov
aaa
add
jbe
adc
loop
mov
dec
stc
lret
jecxz
and
jbe
push
xorb
repz
inc
mov
adc
in
aam
pop
push
data16
or
test
sub
add
jecxz
lret
pop
add
sarl
lods
xchg
inc
sub
xchg
inc
xor
jmp
mov
sbb
cmp
faddl
dec
cwtl
inc
mov
int3
xchg
mov
inc
push
lret
push
in
lock
lock
int
mov
sbb
pop
cmpl
inc
add
xor
cli
std
jg
into
jno
ret
shll
sub
add
add
add
dec
and
cmp
jae
push
jmp
lods
imul
gs
sbb
lahf
add
imul
push
cmp
and
cmpl
dec
test
and
jae
xchg
xor
shll
dec
xor
insb
pop
or
jle
or
loope
mov
std
cmpsb
pop
mov
repnz
jecxz
daa
dec
fistpl
sti
and
push
cmp
mov
sbb
out
out
jo
sub
xlat
mov
ds
stc
adc
fsubr
shlb
push
jl
popl
mov
movsb
test
cmpsb
jo
mov
mov
fstp
and
lea
dec
ret
cmp
jmp
cmp
cmpsb
jae
aad
adc
mov
test
mov
jg
pop
adc
add
testl
incl
sub
pop
inc
addb
mov
add
add
sub
mov
testb
icebp
clc
fisubl
dec
push
lret
outsb
les
into
xchg
pop
pushl
mov
arpl
jne
pusha
dec
mov
mov
inc
push
imul
dec
jns
mov
fcmovnb
popa
lods
loope
out
xchg
xchg
dec
data16
jo
outsl
hlt
mov
dec
loope
cwtl
sub
fbld
mov
inc
cmp
xchg
fbld
mov
cli
or
add
iret
mov
xchg
outsb
in
push
mov
arpl
xchg
loope
test
insb
js
adc
shl
testl
xchg
xchg
xchg
sbb
push
cmpsl
xlat
xchg
sub
jp
add
cmp
ror
popa
movsb
push
push
xchg
dec
or
lret
faddl
jnp
js
pop
addr16
mov
push
out
push
adc
test
add
es
jg
pop
xorl
in
stc
mov
testb
add
test
aam
sub
test
mov
je
imul
shrl
adc
sbb
fcoms
xor
mov
fcoml
mov
imul
pop
repz
jnp
mov
push
pop
outsb
inc
and
pop
notb
xor
push
data16
in
push
jb
xchg
jmp
lret
outsb
scas
cwtl
cmpb
cmp
or
xlat
fstps
sarb
cmp
inc
cwtl
enter
mov
fldt
jae
out
gs
adc
mov
adc
xor
or
fdiv
mov
and
ret
xchg
lods
lret
xchg
xchg
aam
out
in
iret
xlat
sti
add
icebp
and
aam
imulb
imul
mov
add
lcall
fists
arpl
outsb
jmp
xor
mov
sti
lahf
getsec
jnp
add
or
cmp
outsl
pop
ret
add
testb
add
jp
or
test
xor
push
lea
jae
dec
mov
sti
cltd
add
mov
inc
inc
inc
leave
in
repz
mov
push
lods
out
sub
xchg
ss
or
inc
and
rep
and
int3
pop
nop
fisttpl
bound
in
je
dec
cmp
aas
stc
jno
push
fildll
pop
enter
fists
fnclex
pop
ljmp
xchg
dec
scas
xor
add
clc
aas
hlt
xlat
inc
jns
jo
mov
repnz
fldcw
mov
lahf
ss
not
jnp
or
movb
cmpsb
lock
in
sub
cmp
test
fldcw
ret
push
add
lahf
dec
xorl
arpl
xchg
test
rcl
cltd
stos
clc
pushf
scas
mov
cmp
xor
ja
syscall
dec
rcrl
testb
add
stos
pop
sub
shl
jp
pushf
call
xor
sbbl
bound
repnz
out
pop
adc
mov
ret
dec
outsb
push
jp
ret
leave
push
adc
dec
pop
in
xchg
out
xchg
test
mov
cmp
mov
adcl
inc
sbb
or
xchg
dec
ss
loopne
icebp
pushf
push
popa
addr16
loop
test
dec
jmp
les
daa
popa
inc
jbe
sbb
xor
xor
inc
ret
xchg
lcall
jnp
aaa
and
mov
mov
out
fists
mov
xor
enter
cwtl
jg
push
fildl
popf
cmp
sahf
cmp
xchg
jl
add
jmp
stos
cmpsl
dec
sarl
cmp
mov
leave
imul
sbb
aaa
xchg
loop
data16
ficoms
stos
sbb
ljmp
inc
mov
add
add
add
clc
stos
cmp
push
cs
pop
jbe
push
shr
fdivrp
jno
xchg
inc
js
adc
cli
mov
aas
mov
scas
pusha
lahf
push
les
xlat
les
sti
mov
iret
in
shll
push
imul
int3
pop
push
fisttpll
add
ret
push
jmp
xor
jbe
loope
sub
cmpsl
mov
repz
inc
pusha
mov
sahf
ljmp
sub
jno
lods
mov
setae
pop
int3
cli
xorb
stos
mov
in
popa
in
lahf
cmp
in
mov
cmp
xchg
inc
out
push
xor
dec
inc
push
pop
mov
dec
hlt
rorb
inc
dec
mov
inc
xchg
imul
adc
push
test
cmpsb
cli
xchg
mov
jae
aad
addr16
xor
call
scas
iret
mov
adc
test
push
sbb
stos
pusha
testl
add
in
out
sbbb
sbb
mov
add
testb
add
pop
jae
mov
push
cmp
or
sbb
jge
mov
cmpsl
inc
pop
lret
adc
sub
stc
jle
mov
push
out
lock
jecxz,pt
and
pop
jge
lods
les
rclb
mov
or
add
movsb
sub
fs
out
sub
dec
loope
inc
mov
jns
movsl
es
fisttps
dec
pop
adc
adc
je
mov
and
ret
mov
mov
xor
jae
popf
rcrl
mov
out
sub
push
sahf
jno
cli
xchg
clc
push
sbb
idiv
ljmp
jns
mov
in
jg
add
leave
mov
adc
or
sub
lret
xchg
les
dec
into
mov
mov
add
sbb
out
aad
jo
add
xor
add
add
add
aam
aas
sbb
cs
jl
push
fwait
das
xchg
push
loope
add
sub
xchg
in
pop
dec
in
lahf
aaa
xchg
loop
sbb
xor
lret
rclb
pop
ret
xor
mov
addl
push
mov
xchg
into
leave
pop
lea
jle
or
leave
clc
int
and
addr16
sahf
lret
jb
rcll
negb
out
insl
cltd
arpl
mov
int3
cwtl
pop
mov
popa
sbb
repz
cmp
or
dec
add
pop
add
lds
testb
flds
fisttps
xchg
mov
inc
cmc
clc
cmpsb
mov
cmpsb
gs
xchg
push
mov
jae
xlat
insl
loope
or
mov
imulb
arpl
mov
pop
xchg
fisubrl
mov
push
pop
sub
data16
aam
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
repz
fistpl
xchg
out
add
dec
push
in
lods
lret
push
insl
jo
push
aaa
jg
stos
aaa
pop
cmp
iret
mov
mov
insl
lahf
aad
cltd
sub
lahf
adc
and
mov
mov
jmp
and
add
jp
mov
pop
pusha
add
test
inc
cwtl
out
sub
xchg
fnstcw
insb
dec
dec
repnz
xchg
adc
out
aas
xor
jl
mov
pop
imul
or
adc
mov
rolb
add
pop
cmp
mov
push
das
cli
mov
in
or
cmp
ja
subb
push
inc
add
mov
outsl
stc
jecxz
cmp
ds
xchg
pop
les
or
mov
lea
daa
cmpsb
xchg
dec
push
mov
inc
sbb
inc
sbb
cmp
mov
out
clc
out
dec
push
add
test
sbb
out
add
lods
into
cmp
xor
add
add
add
and
and
pop
add
add
sbb
and
dec
popf
out
dec
add
dec
pop
push
lcall
sub
sub
sti
lods
movsl
cmp
stos
out
cmp
pop
fs
sub
icebp
push
cli
stos
dec
inc
inc
mov
fistpl
int
in
daa
mov
es
in
jg
lea
push
ret
loopne
jle
jne
cs
aam
mov
jmp
ds
pop
out
or
dec
or
mov
ja
mov
int
dec
in
repz
xchg
or
sbb
sbb
jne
add
repz
sub
xor
mov
leave
sarl
leave
inc
xor
cmp
mov
adc
push
xchg
or
push
outsb
sub
ljmp
push
add
mov
add
mov
dec
idivl
cld
add
adc
push
bound
add
testb
add
mov
push
leave
pop
pop
lcall
int
mov
jae
shl
pop
jbe
xchg
pop
std
daa
mov
mov
das
push
fisubl
cmpsb
jb
sbb
cmp
lahf
push
push
pop
pop
addr16
scas
pop
xchg
cld
clc
xor
mov
pop
cs
adc
mov
out
sahf
mov
adc
xchg
push
arpl
pop
js
cmpsb
mov
fsubrs
bound
shrl
inc
jns
ja
or
cmp
aad
sbb
fs
test
clc
xor
sub
jo
xor
or
repnz
or
sub
mov
fisubs
add
pop
icebp
gs
sub
xchg
push
adcb
out
xchg
out
aaa
add
dec
dec
dec
xchg
dec
mov
add
add
lret
adc
cmp
dec
xor
in
or
inc
lods
roll
add
mov
iret
mov
ja
nop
ljmp
add
dec
clc
dec
and
mov
and
icebp
jle
ja
shll
xchg
pop
jbe
add
pop
jo
xor
outsb
inc
imul
pop
xchg
mov
mov
add
add
xchg
inc
xchg
call
cltd
pop
lods
push
mov
jecxz
jae
das
das
ret
mov
mov
mov
xlat
xchg
mov
xor
ja
mov
and
dec
rcrl
shll
jae
roll
aaa
xchg
jecxz
and
lock
push
mov
jmp
pop
pop
jns
mov
mov
mov
int
dec
ljmp
ficoml
jne
xor
pop
scas
push
clc
inc
mov
cs
test
and
adc
sbb
outsl
xchg
mov
clc
mov
lods
sbb
mov
mov
jge
imul
add
add
mov
sbb
int
xchg
dec
xor
add
mov
icebp
push
or
xchg
data16
mov
inc
mov
pop
mov
sbb
add
inc
xchg
call
fsubr
inc
push
pop
and
stos
mov
jle
push
xchg
lret
shlb
shl
sbb
fdivr
push
jle
push
pop
sub
loope
lds
sub
jmp
arpl
adc
repz
fcoml
sbb
push
jae
pop
mov
daa
imul
jecxz
xor
out
lods
or
movsb
add
or
or
or
je
pop
or
mov
js
or
mov
test
push
ret
mov
jle
adc
ret
add
ret
mov
cs
mov
fisttps
add
aam
insb
mov
mov
xchg
fildll
outsb
gs
jl
jmp
sbb
insl
dec
xor
xor
das
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
xor
add
testb
add
cmpsl
inc
out
mov
xor
punpckhbw
stos
lock
xchg
sub
fsubrl
les
or
in
adc
mov
mov
cmpsb
shr
jmp
mov
xor
xchg
in
imull
stos
adc
loop
icebp
aad
pmaddwd
fisttpl
jo
mov
xor
and
dec
mov
hlt
ss
int
popf
mov
jmp
xchg
inc
js
in
push
add
scas
shll
adc
dec
scas
add
push
sub
insb
lret
jle
lret
out
sub
sar
mov
mov
testl
mov
xor
loop
ror
test
mov
dec
loope
inc
lds
out
dec
adc
mov
xchg
negl
sub
seto
add
hlt
es
xor
dec
icebp
adc
daa
sub
test
imul
push
lcall
cmp
add
testb
add
dec
mov
ja
pop
dec
cmpsb
dec
mov
shlb
sub
gs
scas
pop
xchg
and
mov
fs
adc
push
sub
rolb
std
les
mov
pop
mov
ss
repz
xor
hlt
aam
sbb
cmp
mov
decb
mov
or
mov
inc
lcall
inc
int
lcall
or
adc
jno
je
push
push
or
mov
pop
add
icebp
test
test
push
mov
xor
sti
cmp
cmc
pushf
fistpll
sbb
mov
rorl
sub
push
jmp
xchg
cs
into
mov
cmp
or
dec
pop
inc
ss
lret
popf
jp
mov
sarl
mov
or
test
adc
push
mov
add
es
data16
cmc
jle
dec
or
add
testb
add
pop
test
cmpsl
es
sub
fsubl
andl
lret
sbb
outsl
inc
cmp
jno
push
lods
sbb
pushf
mov
mov
xor
repnz
add
pop
aad
and
loopne
mov
mov
nop
cwtl
std
adc
jp
sbb
jge
jg
setp
mov
lcall
pusha
ds
and
in
ja
and
arpl
or
push
pop
andb
andl
push
shll
sub
ds
xlat
pop
jns
std
xchg
mov
mov
scas
inc
scas
lea
sbb
adc
inc
addb
mov
nop
or
stc
rcr
mov
icebp
mov
fidivrl
lahf
mov
fidivl
lock
lcall
sbb
jmp
cmp
add
clc
mov
fldcw
cwtl
cmpsl
andb
dec
cmp
add
add
add
ljmp
xchg
fistpll
xor
push
push
jecxz
ds
push
xor
test
sub
lods
ret
mov
mov
jo
jmp
lret
shl
cmp
mov
arpl
sbb
and
jno
push
movsl
repnz
gs
jmp
sub
shll
and
dec
sbb
lods
es
lret
popf
int
mov
xchg
les
push
jge
pop
xchg
bound
xor
clc
pop
push
pop
xor
xchg
push
arpl
xchg
xor
in
jg
sub
jmp
dec
mov
lock
mov
adc
in
jo
adc
out
mov
mov
sub
in
xor
scas
andb
push
inc
int
imul
add
repz
push
sti
cmpsl
pop
push
jo
add
sbb
add
testb
add
jl
xchg
inc
dec
dec
xchg
jg
mov
xor
mov
out
pop
outsb
push
sub
sbb
add
pop
outsb
dec
sub
in
ss
jmp
mov
movsb
adc
cmp
lods
pop
movsl
xor
sahf
lret
mov
fistpll
lret
pusha
xchg
imul
ljmp
das
mov
aaa
inc
icebp
int3
icebp
mov
add
sbb
cmpsb
push
or
inc
hlt
roll
addr16
das
les
orb
rorb
stos
cmp
jg
outsl
dec
sbbb
lods
xor
and
out
push
pop
cmp
divb
jbe
xchg
or
test
hlt
jne
jmp
pop
push
cwtl
jns
inc
call
in
pop
aad
pusha
cs
sbb
mov
add
add
mov
std
cmp
dec
jnp
pop
adc
add
testb
add
jo
dec
data16
outsl
cli
mov
ja
cmc
data16
adc
std
inc
stos
das
aas
inc
push
loop
sbb
mov
mov
mov
pop
push
out
in
shll
cmp
bound
push
addr16
insb
inc
add
add
rcrb
aas
sbb
mov
outsb
ds
negl
inc
sbb
sbb
test
adc
mull
aad
dec
inc
mov
das
pop
jnp
icebp
inc
lds
fidivrs
cmp
xchg
pop
push
repz
shlb
jge
pop
pop
hlt
popf
push
aam
xor
jle
inc
lods
pop
mov
les
fdivrl
add
das
jp
leave
jae
dec
bound
jo
cltd
faddl
pop
cmc
int3
ss
mov
or
add
ja
dec
push
scas
inc
cltd
push
nop
gs
lcall
fcomps
add
and
jecxz
or
or
add
add
add
xor
adc
xor
scas
cmp
ljmp
movsl
and
add
outsb
add
cmp
xchg
xchg
lds
and
cmp
andl
cmp
movsb
pop
stos
jae
ret
ds
mov
inc
sarb
xchg
movsb
cld
mov
inc
popa
xor
push
xchg
push
sub
js
inc
mov
xchg
or
inc
stc
xlat
call
add
jmp
push
stos
fsubp
jb
cmp
sbb
xor
fistl
aad
or
ret
jb
out
rorb
imul
xchg
mov
in
dec
sbb
test
std
aad
jnp
movsb
pop
sub
xchg
push
dec
sbb
rol
jp
ss
cs
mov
int
push
std
pushf
fnsave
and
mov
pushf
stos
or
add
add
xchg
ficomps
push
ss
cmp
add
add
add
fcomps
push
out
clc
and
cltd
cmp
daa
ficomps
and
jg
sub
int
xlat
sub
and
push
mov
lcall
cmp
add
or
arpl
sbb
aad
dec
xlat
cmc
fldl
stos
mov
cmpsl
sbb
inc
ljmp
adc
cwtl
mov
out
or
pop
je
cld
push
mov
cmp
xor
js
pop
mov
dec
pop
sbbl
sbb
and
xchg
rol
fwait
cmpl
and
int
subb
add
or
lea
out
dec
enter
fidivrs
popf
mov
jg
push
mov
pop
inc
and
icebp
cli
xor
pop
into
jno
pop
aaa
decb
cmp
jns
les
add
lods
xor
mov
pop
add
cmp
add
push
inc
lods
jne
ja
xchg
inc
bound
jmp
pop
sbb
popa
lret
clc
inc
or
or
lds
arpl
orb
or
push
dec
xchg
or
adc
adc
int3
mov
pop
add
scas
icebp
dec
pusha
lahf
int
sarl
aaa
sti
or
cmp
ret
mov
ljmp
mov
inc
mov
jnp
sub
dec
mov
into
mov
rorl
out
es
sub
aam
jmp
jmp
cmpsb
sub
cvtdq2ps
inc
mov
xchg
dec
sar
jb
out
jl
cmp
pop
sub
ret
push
mov
ds
lods
idivb
sti
fcmove
out
jg
pop
repnz
popf
fisttps
fldl
sub
mov
int
scas
jo
push
inc
fwait
outsl
cwtl
ja
mov
lock
mov
cwtl
sbb
jge
add
testb
add
inc
lahf
push
test
mov
cmp
inc
lock
inc
fadd
jne
push
gs
outsb
in
pop
pop
jb
test
or
sbb
int3
sub
xchg
pop
sti
sbb
cmp
lods
mov
dec
int3
pushf
jno
repz
shll
or
adc
sahf
cmp
clc
push
mov
sti
shr
ret
add
adc
adc
std
push
adc
jo
test
and
add
jb
aas
adc
arpl
and
outsb
xchg
xchg
call
mov
pushf
inc
cmc
std
mov
mov
fstps
adc
cmp
and
popa
dec
cmp
test
ljmp
xor
push
mov
call
pop
pop
pop
daa
push
pop
in
sub
seta
cmc
test
sbb
add
sti
pop
jge
div
cmp
or
add
testb
add
and
adc
sar
mov
addb
xchg
cmpsl
lds
cmpsb
mov
cltd
dec
adc
mov
sbb
push
cmp
data16
push
jecxz
cmp
hlt
push
add
cmp
sbb
xor
iret
rorb
shrb
xchg
xchg
pop
mov
add
jl
xchg
mov
sbb
mov
clc
jb
mov
push
dec
mov
subw
sbb
daa
es
and
daa
std
lock
push
repz
test
xchg
sbb
icebp
add
pop
call
xchg
xor
jmp
rcrl
pop
stos
add
nop
mov
inc
pop
jb
flds
inc
sbb
lret
outsb
pop
jecxz
inc
shrl
sub
lds
jl
addr16
shll
pop
sbb
mov
add
fsub
std
in
popf
jle
es
xchg
jl
inc
add
testb
add
and
outsl
jmp
xchg
xchg
cmc
iret
xor
mov
mov
fwait
mov
push
jb
cwtl
push
add
hlt
aam
inc
mov
icebp
mov
stc
lods
iret
movsl
subb
fistps
enter
dec
ja
pop
outsb
or
cmpsl
adc
or
push
sbbl
sti
out
push
dec
jle
int3
andl
add
xor
cmp
xchg
pop
nop
insl
dec
push
push
adc
xor
fsts
push
and
popa
lret
jo
and
inc
sbb
pop
push
nop
jmp
imul
clc
daa
pop
xchg
aam
push
xor
jae
xor
push
or
fdivrl
nop
cmp
pop
sbbb
stos
bound
mov
lods
int
arpl
loop
xchg
mov
fistpll
add
jp
jnp
sti
xchg
jle
popf
loopne
fstpt
add
testb
add
mov
arpl
add
stos
sahf
push
and
xchg
push
ret
std
js
ljmp
xorl
cwtl
pop
call
frstor
hlt
fdivl
cmp
ret
and
jmp
mov
dec
sub
xlat
mov
cmp
mov
cmp
pop
push
push
das
and
in
stc
imul
push
or
pop
sbb
repnz
cmpsl
push
sti
cmpsb
test
xchg
lcall
xor
or
mov
add
scas
cs
mov
xchg
out
dec
lea
jl
js
cli
pop
pop
xlat
lret
sub
push
lret
cmp
cltd
or
jl
sbb
pop
lret
ficompl
iret
mov
jg
dec
repz
int
mov
cmpsl
int3
out
scas
je
add
add
mov
push
sti
loopne
cmp
sub
inc
ret
add
add
add
xor
rclb
addb
andb
and
vmovmskpd
and
mov
nop
adc
sbb
lret
mov
and
jl
push
pusha
pop
sarl
jo
add
add
loope
std
addl
stos
add
mov
mov
and
jmp
inc
daa
dec
add
lea
jle
out
jbe
insl
fiadds
pop
sbb
add
mov
xor
xchg
leave
adc
cmc
add
movsb
or
aas
jg
push
fucomp
mov
sub
arpl
push
cld
mov
or
push
call
mov
push
pusha
test
jl
popf
sub
outsl
pusha
mov
pop
mov
xchg
push
loop
pop
mov
out
lea
ljmp
sub
idivb
nop
add
push
ret
cmp
and
push
dec
jb
fsts
mov
add
add
add
into
ss
jge
sbb
lds
push
or
scas
sbb
or
xor
xor
les
es
push
in
dec
cld
pop
test
push
js
jns
mov
adc
sbb
or
dec
test
fcompl
jecxz
negb
or
or
jge
mov
mov
and
xor
stos
aad
test
sub
repnz
in
popa
sahf
mov
js
inc
lock
lret
dec
lret
jecxz
mov
fistl
mov
pop
pushf
je
cmp
push
and
dec
mov
xlat
mov
pop
ja
add
lret
sbb
pusha
aam
xchg
cli
cltd
cmpsl
xor
call
scas
imul
jmp
inc
push
pop
sbb
mov
stos
fdivl
popf
movsl
adc
sahf
shlb
jp
shrb
push
movb
jmp
and
push
mov
lock
add
incb
ljmp
bound
add
testb
add
push
sbb
out
int
rclb
sub
rclw
pop
repnz
ds
cmp
pop
cli
cmpsb
mov
xchg
repz
repz
jp
or
adc
cmp
shl
xchg
shlb
sub
lret
fldl
aam
outsb
out
xchg
mov
push
adc
arpl
adc
insb
lock
or
xor
scas
inc
shr
xor
ret
lret
dec
jnp
mov
inc
push
pop
bound
lahf
cmpsl
jmp
outsb
shr
and
pop
std
jns
add
pop
xor
cs
xor
loop
mov
fwait
into
repnz
push
jle
in
xchg
add
je
int
push
test
out
jo
into
stc
into
sbb
and
dec
fisubrl
push
stc
sub
loopne
bswap
rorb
jl
dec
add
divb
rclb
mov
pusha
cmp
add
ficoms
subb
pop
pop
fsubrs
scas
lds
out
xchg
or
arpl
ret
cmp
or
ud1
mov
sbb
scas
int3
mov
xchg
pop
push
sti
rcrl
rolb
mov
pop
mov
push
dec
lods
in
popa
cmpsl
mov
cli
sbb
inc
flds
ss
imul
mov
adc
je
pop
nop
xor
out
jecxz
adc
fsubp
movsl
push
or
aas
aad
rolb
push
mov
sbb
enter
sahf
stc
adc
xor
loopne
sub
inc
jb
fnsave
cli
push
stos
arpl
cmpsl
add
int3
dec
mov
and
roll
xor
push
imul
into
push
xchg
insl
pop
cmp
into
daa
repz
sbb
cli
jno
jo
ds
lcall
add
jbe
idivl
ss
repz
mov
adc
add
add
lock
push
imul
imul
testl
jle
add
out
jecxz
lods
add
jo
jne
add
insb
dec
xor
add
and
pushf
and
and
add
pushf
inc
fcompl
xchg
aaa
mov
adc
inc
fstpt
adc
mov
cmp
insl
sub
jns
lret
or
or
mov
adc
xchg
cmp
cmp
pop
pop
pop
lcall
or
mov
sti
lods
mov
pop
outsl
test
sbb
jo
inc
xchg
loopne
scas
sbb
jmp
outsb
cld
sub
aas
lahf
aaa
mov
mov
inc
rorl
xor
add
and
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
adc
pop
xchg
dec
out
enter
mov
mov
push
xorb
fs
adcl
jnp
lret
clc
xchg
pop
cmp
clc
xchg
out
lods
fwait
jp
cmp
and
add
in
jnp
in
pop
les
aaa
fldenv
inc
add
cli
idivl
or
or
xchg
mov
stos
mov
add
jge
xor
testl
fs
adc
data16
clc
rcll
rcrl
clc
cltd
push
bound
je
scas
pop
movsl
sbb
popa
pop
xchg
mov
mov
pop
lods
add
imul
aam
leavew
push
mov
push
mov
jnp
pushf
mov
sbb
sbb
sbb
jno
notl
xchg
mov
add
insb
pop
pushf
scas
fistpll
loop
push
mov
add
testb
add
xor
outsb
clc
test
or
cmp
dec
les
push
pop
aaa
sub
ja,pn
jne
dec
and
int3
adc
mov
sbbl
ds
nop
sahf
jp
or
movsl
dec
sbb
adc
popa
outsl
pop
subl
sbb
or
es
adc
sahf
lock
mov
cltd
mov
xchg
insb
and
push
fwait
call
or
daa
aas
jo
or
and
lea
inc
in
add
lea
repz
sbb
lods
jg
icebp
mov
dec
fs
repnz
in
sub
iret
iret
xchg
std
mov
cmp
pusha
sbbb
leave
mov
cmp
test
dec
sub
add
shlb
mov
out
pop
xchg
repnz
push
mov
stos
add
sbb
jnp
jnp
cmp
les
frstor
addr16
add
xor
pop
std
xchg
mov
lock
push
mov
mov
cmp
fcmovb
push
xor
and
cld
and
in
push
xchg
dec
add
in
sbb
sbb
cmp
cmp
cmp
pop
mov
xchg
out
adc
adc
mov
mov
jns
repnz
sti
call
inc
shl
push
xor
aam
mov
add
pop
add
out
or
inc
out
lret
add
dec
std
push
adc
cmp
xor
cwtl
cmpsb
push
xor
lds
pusha
gs
add
cmp
int
dec
and
dec
mov
cmp
and
rolb
cli
jg
add
or
into
dec
sub
fwait
xor
mov
sub
stos
cltd
test
sbb
outsl
lret
mov
out
incl
arpl
xor
add
testb
add
fstpl
xchg
pusha
adc
shlb
fidivrl
imul
or
orl
out
and
jecxz
hlt
out
loop
loope
sbb
loop
mov
push
popf
rolb
mov
jle
pop
stos
adc
mov
cmp
xchg
mov
dec
push
jmp
ljmp
push
ror
push
cmpsl
pop
bound
fwait
inc
sbb
mov
scas
cwtl
bound
lret
popf
xor
cs
sbb
pop
sub
push
mov
daa
ljmp
or
test
sbb
dec
mov
pop
pop
jnp
and
stos
xchg
int3
daa
mov
fs
cmp
fisubrl
fs
mov
pop
out
rcll
das
and
lahf
test
pop
cmc
xlat
insl
adc
hlt
shrl
cmp
and
mov
lea
rcrl
add
repz
cmp
lods
repz
in
pusha
out
lods
pop
enter
add
testb
add
fwait
xchg
rcrb
mov
test
mov
dec
daa
push
jae
inc
xchg
inc
pop
xchg
mov
fnstenv
int
addr16
cli
push
xchg
xchg
jae
xchg
inc
and
xor
xchg
push
inc
mov
lods
mov
mov
fwait
sbb
imul
in
popa
aaa
push
lahf
ss
cli
frstor
xchg
dec
incb
dec
xchg
xor
xor
add
aam
mov
push
int3
clc
out
lods
dec
sbb
push
inc
mov
dec
push
add
in
dec
mov
cmp
jle
or
lret
lods
xlat
mov
dec
ret
out
push
pop
dec
jl
fcmovnbe
and
xchg
fwait
pop
adcl
mov
dec
cs
bound
scas
in
adc
stos
shl
sbb
add
aas
daa
push
cld
push
std
jmp
push
jg
push
sub
dec
add
testb
add
pusha
cmp
out
aaa
sbb
jmp
push
jb
cs
push
in
hlt
sbb
ja
mov
jge
stos
add
cmp
jns
fisttpl
aas
jg
pop
dec
pop
cmc
or
je
mov
or
addr16
cmc
push
jae
adc
test
jb
andb
add
jmp
ja
int
in
mov
imul
sti
fwait
testl
add
mov
add
and
fildl
mov
int
inc
rclb
aam
ljmp
mov
sarl
xchg
add
aas
pusha
bound
push
sub
jle
fisubl
shrb
in
adcb
lea
sbb
test
mov
pop
xor
add
dec
push
add
sbb
dec
push
cwtl
adc
cmc
in
push
dec
add
testb
add
aas
pop
mov
cmp
pop
dec
sbb
xchg
scas
daa
adc
add
pop
mov
rolb
push
jle
cld
mov
sub
mov
in
bound
int
shlb
stos
es
pop
mov
sub
jle
mov
pop
xor
movsb
sub
lock
aaa
mov
and
fcmovnu
jbe
mov
fwait
push
lret
sbb
jnp
insl
mov
mov
mov
cltd
fwait
jmp
cmp
outsb
pushf
ficoml
movsl
leave
dec
loopne
icebp
jp
neg
add
dec
sbb
mov
sub
andl
fimull
ret
nop
and
push
sbb
out
popf
int
adc
lret
push
mov
xchg
mov
sbb
jl
pop
push
lret
inc
movsl
dec
push
pop
push
add
idivl
mov
dec
add
testb
add
nop
pop
inc
in
lock
adc
stos
sbb
test
cmp
mov
xchg
subl
mov
cmp
adc
xchg
pusha
insb
xor
inc
push
xchg
ljmp
ret
pop
cmp
xchg
xchg
mov
sbb
outsb
insb
clc
sub
stos
hlt
call
fistpl
je
or
loope
xchg
cmp
ds
std
ss
arpl
inc
js
das
dec
mov
jl
mov
inc
mov
mov
es
nop
lcall
iret
sbb
mov
aad
imul
xor
sbb
lret
negb
jnp
jnp
imul
in
add
jo
fists
adc
mov
mov
cmp
mul
inc
enter
pop
xlat
jge
addr16
add
mov
ja
jg
xchg
lcall
cld
inc
dec
add
testb
add
sbbl
sbb
sbb
aam
sub
subb
daa
adc
insb
xchg
xor
mov
add
xor
scas
sbb
adc
dec
mov
outsl
mov
mov
fisubl
fmulp
stos
sbb
adc
lcall
xor
or
push
push
and
jl
xchg
jl
das
xchg
add
xor
xchg
xchg
popa
mov
fnsave
xlat
cli
xor
mov
dec
sub
mov
ds
fildll
sbb
mov
lahf
mov
pop
test
in
mov
lcall
popf
mov
mov
xchg
xor
insb
add
jp
jg
add
cmp
mov
inc
fbld
add
and
dec
lret
jmp
imul
xchg
aad
push
fwait
ss
add
testb
add
xchg
pop
test
pop
mov
iret
xchg
rcrb
mov
mov
xchg
mov
jle
push
shrl
xchg
dec
lret
pop
cltd
pop
mov
inc
mov
nop
dec
insl
rorb
or
in
lahf
cmp
sbb
pop
mov
out
sub
push
in
or
rcl
pusha
loope
scas
adc
stc
jl
cld
xchg
test
push
movsl
xchg
call
sbb
aam
leave
sub
sub
data16
sbbb
arpl
hlt
mov
in
nop
mov
xor
cmp
or
add
mov
mov
push
pop
loope
inc
insl
inc
add
in
inc
ret
or
aas
repz
jne
icebp
ret
ds
cmc
fists
jp
repz
inc
mov
dec
pop
mov
ljmp
lret
dec
cli
dec
loop
add
lds
cmc
cwtl
and
jecxz
push
sub
add
testb
add
sbb
repz
lahf
add
cmp
mov
sbb
adc
fists
scas
dec
jl
cltd
shl
adc
inc
subb
inc
insl
inc
pop
fistpll
cltd
or
cmp
xchg
xor
cmp
adc
lods
cli
sub
mov
lods
sub
mov
add
mov
xchg
les
inc
icebp
xchg
popa
mov
int3
lret
int
js
and
push
fstp
or
lods
xchg
lret
pop
sbb
mov
pushf
or
pushf
adc
test
cltd
pushl
inc
cvtdq2ps
and
mov
mov
jae
daa
cmpsb
and
pop
into
or
adc
addr16
cmpsb
xchg
dec
xchg
dec
scas
cmp
mov
xor
inc
inc
gs
repnz
mov
dec
inc
mov
sbb
mov
mov
add
sub
jns
clc
mov
lahf
test
jo
push
add
testb
add
push
push
xor
gs
adc
push
fsubrl
xor
jae
push
aaa
push
add
pushf
mov
addr16
pusha
push
add
sbb
jns
sub
mov
rcll
mov
imul
ret
loopne
sub
outsb
in
xchg
sub
lock
leave
dec
push
loope
pop
adc
pop
lods
out
or
mov
xchg
mov
sahf
mov
xor
rorl
lock
jg
loopne
adc
cli
jp
mov
inc
adc
imul
inc
les
gs
test
ja
or
push
loop
scas
mov
push
inc
jl
mov
mov
fstps
rcrl
fs
and
pop
mov
mov
or
xor
rcr
add
inc
or
test
sbb
jge
mov
inc
es
dec
mov
mov
mov
mov
ret
and
add
ret
jg
mov
lds
xchg
sbb
add
add
add
xchg
das
push
xor
repnz
xor
ss
scas
test
pushf
aas
pop
fisubs
adc
xor
loop
mov
int3
lret
cmp
cli
cwtl
or
shlb
jbe
cwtl
or
pop
and
cmpsl
push
mov
push
lcall
in
adc
std
je
call
xchg
mov
aas
push
jno
mov
inc
xor
xor
pop
mov
mov
adcb
sbb
push
adc
lods
adc
es
lods
andb
jp
xchg
aaa
or
pop
sbb
popf
or
test
test
aam
mov
stc
jle
or
aad
dec
loopne
out
sub
stos
lret
xchg
xchg
popl
pop
dec
push
icebp
icebp
repnz
jmp
int
pop
xchg
xor
xlat
jo
addb
adc
mov
cwtl
out
daa
dec
rol
add
push
add
testb
add
icebp
jne
mov
outsb
push
lods
or
or
lock
push
addb
sbb
mov
jg
mov
in
sbb
xor
sub
sbb
pop
inc
lcall
lds
inc
push
mov
lods
loopne
loop
pop
pusha
loopne
pushf
mov
xchg
scas
dec
psubsw
imul
jbe
mov
test
scas
outsb
mov
popf
mov
xchg
stos
cmp
push
sub
mov
xor
outsb
pop
stos
jle
lret
inc
insb
cmp
fistpl
nop
mov
add
push
xor
lahf
jo
lds
push
lea
loop
adc
cmc
lcall
in
aad
adcl
popa
cmpsl
outsl
xor
shrl
push
mov
loopne
lret
mov
cmp
cmp
ja
ja
movups
notb
movsl
or
push
clc
inc
dec
loopne
out
test
add
inc
icebp
hlt
gs
push
sub
rorl
add
add
testb
add
stos
dec
test
bound
push
inc
pop
pop
add
and
push
and
cmpl
cli
or
mov
mov
stc
rcrb
xor
lea
inc
std
cmp
push
inc
adc
dec
or
push
mov
test
inc
jb
mov
test
pop
lods
fwait
popa
push
lock
cmp
pop
jg
lods
rcrb
jae
push
into
outsl
cmpsl
jne
xor
aam
test
pop
ja
push
cmp
jns
stos
loope
hlt
fcoml
sbbb
imul
push
xchg
jb
fnsave
cmc
nop
xor
xchg
andb
stos
cmpsb
xchg
in
cmpsl
and
inc
ficomps
mov
and
fnsave
dec
mov
aam
dec
aam
lret
or
mov
and
cmpsl
xchg
mov
lds
inc
test
adc
mov
dec
push
das
in
add
aas
gs
repnz
and
xchg
orb
push
add
testb
add
add
sbb
inc
das
sbb
cmpsl
mov
dec
cmp
xchg
loope
ja
adc
fisubrs
dec
sbb
push
cmp
xchg
call
in
fisubl
andl
mov
ret
mov
pop
or
pop
mov
xchg
cmpsb
jns
mov
in
jne
and
or
xor
rcl
and
std
mov
push
insl
pop
add
xor
inc
sarl
aad
pop
inc
nop
inc
fst
adc
addr16
pop
sbb
outsb
push
xor
pop
sbb
insl
lret
or
jbe
push
cmp
pop
inc
sbb
sbb
push
dec
js
jae
mov
or
lcall
jae
mov
cwtl
jge
xor
dec
xchg
jne
bound
push
add
mov
out
fisttpll
mov
lock
add
testb
add
fsubrl
mov
adc
outsb
dec
ss
mov
sub
or
or
bound
stos
or
cmc
out
sbb
jp
out
or
inc
popa
pop
add
sub
mov
pop
add
mov
imul
clc
xor
sub
popf
push
insl
aam
xlat
and
shl
stc
sbb
es
cmpsb
ja
xchg
xor
xchg
das
xor
shl
and
pushf
call
repz
and
xchg
ljmp
xchg
push
adc
call
lret
maxps
in
repnz
inc
aam
jecxz
sub
xor
jge
sbb
mov
push
out
mov
bound
mov
sbbl
add
mov
arpl
out
add
testb
add
pop
aas
rcrl
pop
xchg
pop
mov
je
scas
fisubs
icebp
xchg
les
mov
xchg
stos
mov
sahf
bound
outsb
mov
scas
sbb
cmp
int3
mov
and
lahf
sub
out
fcompl
inc
mov
outsb
addl
push
and
outsb
inc
sub
sub
xchg
adc
insl
cmp
aam
lds
jb
xor
jbe
mov
jle
mov
jmp
lea
out
repz
fisubl
and
ja
cmp
sub
push
outsl
xchg
cmc
bound
cmpsb
dec
cmc
push
push
add
xchg
sahf
mov
scas
dec
push
mov
mov
flds
or
icebp
push
sbb
and
mov
out
mov
mov
and
cmc
pop
lods
pop
inc
add
push
sbb
jmpw
fnstcw
mov
lret
pop
add
testb
add
cli
mov
aad
ja
cwtl
arpl
xchg
enter
jns
xchg
sbb
jbe
test
xor
xchg
xor
fadd
xchg
push
push
lahf
fidivrs
in
sar
xlat
mov
mov
out
out
lea
mov
lods
rolb
jp
out
cmp
into
daa
xor
dec
push
in
jp
je
xchg
lahf
lods
mov
stc
lds
lods
ret
push
popf
adc
in
cs
mov
ss
or
repnz
ja
les
shrb
jg
sbb
cld
fldl
dec
int3
and
mul
push
aad
jecxz
lahf
add
jecxz
jp
fsubs
std
sti
lock
enter
in
out
xor
arpl
pushf
mov
fisubs
mov
aam
jle
add
add
imul
out
mov
arpl
stc
rcrb
add
add
add
aam
mov
mov
repnz
mov
cmc
aad
sahf
lods
jns,pn
fmul
orl
sub
test
sbb
cvttps2pi
stc
lock
mov
jne
scas
mov
mov
jae
pusha
fisubrl
and
aad
cmp
add
xchg
pop
xchg
mov
push
cwtl
mov
leave
fimuls
addb
test
aam
mov
mov
sub
xor
test
xor
ljmp
and
mov
lods
jns
mov
inc
xorl
jno
cmpl
xchg
push
rcrb
jns
push
clc
je
and
iret
sbb
adc
mov
jp
lcall
ja
pop
aaa
pop
dec
push
movsb
jno
mov
aas
cwtl
addr16
fadds
add
add
dec
stc
mov
clc
add
addr16
pop
lret
add
testb
add
and
cltd
repz
xchg
pop
out
jp
push
sbb
jge
add
mov
jae
test
loop
lahf
ja
sub
or
pop
in
sub
xchg
scas
cmp
out
pop
js
sub
dec
inc
mov
pushf
test
lods
xor
test
pop
jne
and
inc
sbb
lds
into
dec
and
cmp
sbb
rcrb
enter
mov
inc
mov
xchg
mov
xchg
xor
add
outsl
mov
jp
pop
mov
sar
push
aas
ljmp
lcall
or
fidivs
icebp
icebp
andb
int3
dec
sarl
pop
cmp
xor
lret
int3
icebp
out
outsb
cwtl
mov
and
ficompl
xchg
sbbl
jbe
out
imul
mov
push
jle
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
mov
pop
add
testb
add
repnz
adc
xchg
mov
je
push
add
cmpsb
sbb
pop
rolb
movsb
cmp
test
int
fcoms
dec
jne
out
xchg
cmc
sub
xor
inc
sub
jae
out
xorb
adc
jge
insb
das
sub
in
mov
cmp
dec
aam
xor
enter
loopne
and
movsl
and
cli
fstps
iret
arpl
andl
jmp
mov
aad
jnp
mov
ret
call
and
lcall
pusha
sub
fwait
arpl
shlb
aad
test
nop
scas
adc
or
pop
push
dec
ficoms
nop
jae
test
mov
adc
fildll
xor
pop
sar
mov
or
fistl
js
es
xchg
mov
xchg
mov
mov
orl
testb
add
hlt
sbb
jnp
outsl
movsb
mov
aam
cmp
daa
xchg
mov
bound
cmpsb
dec
push
popa
out
jge
dec
push
jns
sub
push
push
std
jnp
roll
shlb
cmc
cmp
sbb
jne
ljmp
dec
outsb
fmuls
adc
sarb
xlat
mov
fidivl
fists
pop
dec
mov
xor
ficompl
fs
push
sbb
imulb
fcmovbe
ret
cmpsl
adc
push
inc
pop
hlt
inc
jo
adc
pop
pusha
or
sbb
cmpsb
test
rolb
les
cli
repnz
dec
pusha
xor
movsl
pop
xor
icebp
add
aaa
call
mov
sbb
int3
rorb
aam
fadd
adc
sub
in
mov
dec
jl
xchg
push
and
jg
adc
das
mov
add
or
mov
rcrb
dec
stos
pop
add
testb
add
push
jo
and
cmpsb
in
ljmp
int
jl
lods
mov
or
stos
push
in
jno
les
or
pminsw
mov
mov
lret
sub
sbb
data16
mov
sbb
adc
inc
cmc
mov
fistps
inc
jnp
jle
imul
push
popa
cwtl
add
lea
add
test
in
push
mov
push
ret
jge
pop
mov
test
push
pop
std
xor
shll
and
in
or
sub
mov
inc
fistpl
push
hlt
int
lds
sbb
xchg
and
addb
mov
popf
pop
outsl
shlb
pop
lret
inc
dec
fwait
mov
mov
pusha
pop
fidivl
pop
cmp
std
imul
xchg
ffreep
movsl
js
mov
scas
icebp
inc
xchg
cmp
pop
enter
add
sub
cmp
dec
mov
pop
mov
add
add
sbb
or
rorl
inc
jg
or
dec
je
mov
es
mov
aam
sub
dec
inc
mov
cmp
mov
lahf
std
popa
mov
push
in
stc
dec
sbb
pop
ds
loopne
xor
rorl
nop
lret
out
pop
add
mov
push
rcrb
mov
mov
std
mov
hlt
add
cmp
inc
xchg
ss
aam
inc
push
in
jne
xor
jbe
pop
js
into
je
xor
push
ret
sub
inc
xchg
ja
sub
insl
sub
aaa
push
jp
lea
scas
scas
imull
std
xor
and
adc
push
dec
jnp
popf
push
cld
sbb
and
cmpsb
int
int
in
add
mov
pop
xchg
adc
in
sti
xchg
shl
cltd
imul
adc
xor
mov
stos
mov
mov
sbb
adc
and
ds
add
or
push
shll
out
xchg
inc
push
dec
xchg
pop
add
testb
add
pop
jns
test
or
shlb
popl
sub
mov
inc
divl
mov
inc
or
push
shrb
in
push
push
arpl
mov
mov
ds
and
enter
ja
mov
mov
aam
xchg
fisubrl
sub
mov
xchg
jle
mov
jl
out
push
out
cmp
add
in
jb
test
and
adcb
add
adc
daa
stos
cld
stos
addr16
xchg
dec
cmp
mov
sbb
aad
lods
push
adc
dec
out
daa
xchg
js
out
and
xchg
popf
mov
cmp
subl
push
push
leave
push
ret
dec
mov
pop
lahf
sbb
lea
leave
add
inc
and
cmpsl
push
mov
add
out
lcall
inc
and
lds
ja
pusha
add
testb
add
dec
mov
imul
cmp
xchg
mov
inc
imul
push
add
push
mov
jp
lret
cltd
stos
push
add
inc
popf
xchg
out
rcrl
iret
pop
cmpsb
ficompl
aaa
push
sbb
sbb
inc
or
xor
jae
and
cmp
fiaddl
ret
aad
mov
cmp
int3
xchg
sbb
js
xchg
stos
loopne
cmpsl
xchg
jbe
jo
jg
jnp
jge
mov
insl
movsb
jp
inc
cwtl
sub
pop
add
int
scas
ret
adc
test
sub
popf
jecxz
ja
xor
add
pushl
cmp
ret
fwait
cld
jb
sub
sbb
bound
ror
rol
adc
cmp
lahf
xchg
pusha
xor
stos
add
psrld
imul
pusha
xchg
xor
pop
adc
add
bound
imul
jae
push
andb
testb
add
xchg
ds
out
test
jb
ret
pop
fld
inc
mov
outsl
fcmove
mov
push
aad
scas
lahf
xchg
push
lret
aam
rcll
pop
mov
rcrb
jg
imul
scas
cmp
jo
mov
adc
inc
sbb
inc
sub
ss
in
mov
pusha
out
dec
pop
add
fisubl
cltd
push
insb
dec
aas
sti
mov
nopl
dec
jae
fucomi
jg
inc
cld
inc
in
mov
push
mov
dec
enter
lret
jnp
insb
lcall
mov
fidivs
jb
pop
sti
sub
cmp
xor
adc
ljmp
inc
loopne
add
sbb
int
sarl
or
lcall
pop
sbb
jb
inc
sbb
push
mov
xor
jae
fwait
cmp
dec
data16
aaa
adc
js
add
testb
add
jno
mov
cld
test
aas
xchg
push
xor
outsl
or
mov
and
stc
sub
cmc
xchg
cmp
mov
loopne
or
xchg
sub
push
inc
dec
push
pop
sahf
push
hlt
pop
testl
clc
mov
sbb
pop
out
push
sub
sbb
sbb
or
leave
push
cmp
sub
iret
jecxz
ret
loope
dec
shrl
sbb
or
aaa
imul
bound
insl
push
inc
jmp
jl
or
mov
fdivl
lods
ljmp
insb
mov
fidivl
mov
inc
and
jmp
ss
jb
sbb
and
ja
dec
leave
ja
out
push
shl
jo
mov
pop
and
dec
lret
in
adc
faddl
add
clc
mov
or
adc
add
testb
add
leave
push
aam
dec
fcoml
std
and
ljmp
movsb
gs
push
lods
lret
xchg
dec
lret
push
jb
xchg
mov
push
inc
add
andb
pop
sbb
outsl
cltd
push
mov
push
cmpsl
adc
adc
pop
push
int
shll
or
sbb
and
inc
sbb
pop
sub
outsb
in
rclb
or
or
ds
pusha
in
out
jnp
lea
pushf
inc
xor
in
sbb
loope
push
popf
mov
ret
or
or
adc
jle
jnp
dec
jmp
xchg
test
cmp
mov
cmp
mov
sbbb
jl
adc
dec
or
mov
std
inc
fs
outsb
jbe
test
adc
lds
add
sub
outsb
or
add
shr
mov
push
mov
add
testb
add
inc
or
sbb
sbb
push
dec
cmp
xor
push
ret
or
or
out
testb
mov
sub
xor
mov
fsubrl
insl
jo
imul
pop
sbb
dec
sub
add
push
sbb
jge
out
mov
cmp
adc
negb
or
sub
xor
out
das
pop
xor
dec
inc
or
inc
rorl
or
out
into
push
loopne
mov
mov
cmp
sahf
arpl
adc
ljmp
pop
sbb
jecxz
or
roll
sbb
outsl
adc
fwait
and
imul
adc
sbb
mov
jle
xor
ret
stos
cs
lods
iret
in
sbb
pop
mov
int3
jne
push
or
in
push
jo
loopne
sub
push
add
add
mov
int3
rorb
popf
lock
in
add
testb
add
xor
aam
mov
lahf
or
rcrl
mov
inc
es
lock
int
add
repz
jns
push
imul
push
pop
cld
or
adc
in
push
loop
aas
mov
pop
adc
ja
imul
loop
xor
xchg
out
sahf
push
fcmovnb
out
nop
jge
lret
push
mov
push
mov
rcl
ss
pushf
lcall
ljmp
adc
fcmovbe
outsl
ljmp
sub
xlat
bound
sub
cmpsb
push
sbb
mov
fbld
icebp
mov
cmp
add
lahf
push
das
repnz
dec
xor
loopne
mov
fidivl
outsb
daa
pop
push
fmul
push
pop
in
xchg
add
push
xor
add
mov
cmp
add
testb
add
mov
add
fstpt
cmpsb
dec
inc
push
and
andb
mov
cwtl
xchg
dec
out
scas
popw
mov
incl
movsb
bswap
into
jo
and
repnz
push
stc
dec
jb
pop
loop
sbb
ljmp
stc
push
xchg
mov
or
lretw
xchg
fmuls
jl
xchg
sub
sbb
jne
shlb
lcall
xchg
outsl
dec
and
mov
mov
test
push
stc
pop
pop
push
xorl
pop
addr16
lahf
bound
jle
mov
clc
mov
xor
daa
xor
popf
data16
les
xorl
addr16
test
test
fcomp
xor
addr16
mov
subb
fidivrl
and
xor
pop
xor
add
fsubl
mov
lods
push
adc
ljmp
testb
add
js
and
fs
and
outsb
xchg
adc
lods
out
mov
push
jmp
dec
inc
sub
js
push
cmp
fs
push
push
rcll
xor
aam
cmp
into
scas
mov
loopne
je
sbb
lcall
dec
sbb
inc
adc
sbbl
out
pop
lahf
call
cmpsb
mov
mov
add
stc
mov
cmp
pop
or
push
push
leave
mov
push
lcall
in
pop
mov
sub
sub
js
jp
add
andl
cmp
adc
sub
mov
fs
int3
push
stos
jmp
cmp
mov
cwtl
push
dec
pop
jecxz
cmp
loope
sub
test
pop
sahf
out
xor
sub
lret
pop
add
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
aaa
idivb
add
popf
ds
jnp
jecxz
inc
shr
sti
stc
xor
jmp
lds
and
test
mov
std
adc
out
add
lret
dec
outsb
lret
and
jbe
mov
movsl
out
loope
xorb
mov
mov
push
pop
mov
in
mov
cmp
sahf
adc
mov
mov
jae
push
cltd
pop
lahf
js
adc
in
fldt
pop
sub
xor
data16
cld
push
push
loopne
repnz
test
pop
and
adc
jbe
sub
ficoml
nop
arpl
push
movsb
mov
add
fldt
cmpsl
xchg
cmp
or
xor
xor
mov
or
add
mov
mov
sub
imul
add
push
negl
pop
mov
out
jnp
aad
prefetch
jo
cmp
pushf
lds
out
cmp
rclb
inc
adc
mov
push
push
pop
jmp
jle
pop
aas
js
sub
sbb
xchg
push
leave
outsb
nop
les
mov
adc
inc
movzbl
gs
adc
jbe
pop
and
xor
dec
xor
xchg
mov
mov
jae
lods
addl
cmp
mov
add
mov
xchg
mov
fs
jno
jmp
cmp
repz
cmp
clc
clc
adc
mov
inc
lret
clc
lret
clc
dec
daa
lods
pop
aam
xlat
pop
repz
js
mov
aaa
pusha
arpl
xor
mov
dec
jle
stc
or
outsl
shl
leave
push
arpl
scas
ret
fdivrl
jmp
adc
add
out
into
push
cmp
sub
lret
inc
sub
add
add
add
xor
lods
xchg
sbb
dec
and
push
aaa
jno
mov
adc
mov
pop
shrl
dec
pop
dec
fwait
mov
call
add
mov
add
inc
mov
pop
lret
xor
stos
sti
negl
pop
call
adc
pop
call
sub
adc
cmp
sbb
push
fstpl
xchg
jb
jl
push
lret
hlt
leave
lahf
mov
xor
jl
and
pop
cmp
insl
push
jbe
cmpsl
enter
xchg
xor
pop
xlat
rclb
and
fs
xchg
pop
roll
push
inc
and
add
push
xchg
add
aas
js
leave
xor
xlat
mov
mov
aaa
hlt
add
xor
pushl
ret
lock
sti
dec
inc
push
add
xchg
mov
xchg
add
and
mov
fisttps
jo
xlat
mov
add
add
add
xor
repz
mov
leave
mov
lcall
icebp
packssdw
minps
leave
cld
push
dec
pop
inc
sub
in
xchg
or
cmpsl
xchg
push
push
aas
mov
test
data16
lods
fisubrl
shrb
in
or
push
js
imul
and
add
cmp
mov
inc
adc
loopne
push
xor
fisubl
xor
push
ficoml
mov
jle
lods
mov
movsl
push
inc
mov
xor
sbb
out
mov
lea
jae
aas
inc
arpl
xchg
jnp
adc
lcall
incb
adc
sbb
cmc
sub
fcmovbe
sti
xor
stc
xchg
cli
push
mov
jbe
movsl
dec
xchg
hlt
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
popf
outsl
xor
push
xorl
lret
out
and
pop
push
xor
mov
mov
jae
lret
leave
pop
js
mov
dec
aad
pop
movsl
jge
sahf
imul
fsubrl
inc
sub
into
xlat
icebp
mov
sbb
incb
jge
mov
inc
jp
sahf
mov
ret
dec
xor
xor
cmc
jmp
push
pop
ret
stc
popa
add
inc
adcb
xchg
sti
pop
aaa
xchg
test
sub
sub
or
jmp
in
es
dec
insl
fcmovbe
stc
mov
popa
mov
mov
push
loop
cli
jno
sbb
cmp
leave
incb
test
sub
cmp
sub
ficoms
cmp
fwait
pusha
fwait
pop
lcall
mov
mov
sub
sbb
mov
loopne
adc
add
idiv
jg
data16
aad
push
push
hlt
or
add
add
add
int
jnp
and
shll
xchg
in
je
pop
mov
mov
lret
xchg
stos
mov
jo
leave
jae
aad
ljmp
pop
cmp
sbb
popf
mov
lods
pop
pop
cmp
incl
adc
shl
sbb
and
jno
cmp
adc
pop
out
int3
mov
mov
dec
pop
inc
ja
mov
mov
insl
xor
nop
adc
sahf
sub
lods
mov
imul
andl
mov
sub
sti
in
insb
clc
outsb
cmp
in
jno
mov
and
repnz
movsl
out
scas
jno
inc
xor
int
inc
sub
adc
adc
sahf
aad
ja
hlt
mov
sbb
cwtl
fimuls
pushf
addr16
xor
adc
leave
rcll
outsl
xchg
xor
add
inc
pop
mov
movsb
inc
gs
out
dec
mov
add
add
add
cld
jp
out
clc
ljmp
sbb
lahf
inc
clc
mov
jp
das
in
ret
cmc
js
enter
push
sbb
mov
xchg
push
push
sbb
mov
xchg
es
lods
fisubl
add
ss
ss
pop
xor
and
mov
outsl
pop
push
lds
lea
nop
shl
fs
xor
loop
inc
sbb
cli
xorb
xor
stos
fimull
es
loopne
push
inc
shr
js
mov
daa
adc
scas
rcrl
leave
aaa
in
pushf
ja
adc
in
and
repnz
call
sub
lea
jl
rclb
int3
rorb
out
mov
push
popa
xor
or
loop
jp
jo
or
xor
push
movsl
into
add
repnz
movsb
jle
mov
leave
sub
outsb
add
testb
add
lods
jge
stos
and
dec
pop
pusha
cmpsl
insl
xor
and
mov
mov
das
inc
lcall
gs
int
jmp
dec
sbb
rclb
cltd
mov
mov
adc
adc
mov
cmpsb
cmp
arpl
adc
aad
push
lea
pop
clc
in
pop
sbb
sbbl
notb
ret
out
pop
jmp
pop
push
repnz
mov
repz
mov
nop
in
push
out
push
inc
js
stos
and
test
jg
dec
mov
leave
pop
arpl
popa
pushf
or
cmc
xor
push
push
mov
outsl
mov
mov
daa
mov
fcomp
or
sbb
xchg
mov
or
mov
stos
aam
mov
sub
aam
pop
add
mov
add
stos
sub
stos
out
jmp
sub
push
call
add
testb
add
sub
mov
incb
stos
loope
bound
lods
lods
add
push
repnz
mov
imul
les
sub
in
dec
dec
or
loopne
jecxz
ret
mov
sub
stos
stc
test
mov
shrb
mov
pop
cld
in
ljmp
lcall
fcompl
mov
pusha
mov
sbb
sub
fcmovnu
push
mov
rcrb
shlb
mov
mov
lods
outsb
or
mov
insb
push
outsb
leave
sbb
jb
or
fiadds
mov
scas
lock
in
inc
or
sub
add
pusha
jmp
jle
in
popf
mov
mov
sbb
pop
into
jmp
clc
test
mov
inc
and
push
inc
hlt
adc
add
shll
fnstenv
mov
jo
add
add
add
jb
arpl
sbb
aad
out
add
cmp
push
xchg
xchg
inc
pop
lods
jae
arpl
mov
popa
stc
jg,pt
pop
aas
movsl
daa
int
jmp
out
sub
mov
addl
xchg
xchg
outsl
lods
and
insl
sub
es
mov
sbb
pop
lret
hlt
jne
jmp
iret
or
sbb
rcrl
test
inc
scas
pushf
stos
mov
adc
push
mov
scas
sbb
dec
inc
cli
fiadds
out
movsl
cli
cmpsl
pop
outsl
push
test
and
xchg
and
push
jge
cs
hlt
aas
mov
sub
lret
and
sbbl
out
or
iret
mov
and
popa
test
decb
je
adc
mov
mov
mov
leave
ljmp
sbb
cmpb
add
cld
je
jbe
jmp
lea
xchg
mov
jno
add
add
add
bound
cmp
mov
xchg
jne
xchg
fcomps
ljmp
cmp
cmpsl
in
popa
sti
cltd
pop
sub
test
ret
out
push
xor
sbb
sbb
xchg
enter
std
lret
pop
roll
pusha
mov
popf
mov
cmp
cld
rol
mov
fcmovnu
cmpsb
xor
sbb
mov
test
ja
iret
sub
dec
shr
jno
adc
add
clc
fmul
mov
push
shlb
loop
mov
add
sbbb
push
in
aas
sbb
loopne
enter
jle
addl
mov
jns
cs
mov
dec
jg
jne
pop
ljmp
xchg
add
dec
cmp
push
dec
repz
fisttpll
cmpsb
mov
mov
pop
lods
clc
mov
aaa
imul
sbb
add
push
cltd
jmp
fcmovnbe
cld
xor
mov
adc
jb
add
add
add
aas
inc
jbe
xchg
adc
push
ds
jecxz
adc
fsubl
sbbb
push
push
jle
sub
ror
je
adc
js
push
dec
js
repnz
negl
iret
lock
push
fs
fldenv
les
jp
out
xchg
data16
inc
xor
sub
inc
push
mov
sarl
add
sub
add
fnstsw
or
cmp
inc
fxam
imul
ficoms
add
dec
xor
nop
mov
out
popf
and
cmp
cmp
sbbl
push
insl
not
fisubs
pop
mov
push
ret
jns
mov
sbb
dec
mov
mov
cmp
negb
fdivrs
in
das
or
fs
outsb
add
jp
cld
sub
mov
add
mov
mov
push
jg
pop
jne
mov
jae
add
add
add
adc
lret
rcl
loop
push
dec
out
mov
push
inc
data16
adc
stc
pusha
adc
pusha
push
jp
mov
dec
lock
mov
mov
add
in
outsl
out
out
and
les
mov
ret
shrb
lods
inc
pushf
sar
and
push
ret
cmpsb
int3
out
divb
add
jns
repnz
jp
pop
pop
mov
movsb
xor
dec
incb
mov
ss
cltd
push
mov
movsb
and
push
dec
jge
mov
adc
nop
sbbb
out
testl
fwait
mov
leave
fiaddl
dec
fadds
scas
adc
jl
stos
jnp
das
stc
scas
jmp
and
subl
jp
ficompl
jecxz
fwait
mov
movsb
or
dec
roll
out
sbb
lds
outsb
fiadds
add
mov
fucomip
addr16
mov
mov
add
add
inc
inc
sbb
aaa
push
fs
cmp
xor
push
xor
sahf
xor
sahf
mov
neg
xor
and
subl
lea
mov
out
inc
jge
adc
jns
icebp
push
inc
lock
or
adc
xor
adc
xorl
mov
push
pop
push
xor
dec
sub
sbb
das
mov
jecxz
xorl
dec
loope
pusha
cwtl
push
pop
push
adc
daa
lcall
in
mov
jl
cmp
insl
adc
ficompl
sub
lahf
cmp
dec
xchg
dec
jno
jecxz
mov
cmpsb
xor
jb
mov
dec
dec
xor
mov
orl
call
mov
pop
sti
fidivs
xchg
sub
lods
dec
mov
lods
fwait
mov
add
imul
dec
out
iret
jmp
cmpsb
add
mov
add
testb
add
add
sbb
push
cmpsl
adc
insb
movsl
fiadds
adc
lea
out
mov
fisubs
xchg
fcoml
lcall
cmp
push
test
in
mov
inc
insl
cmp
mov
in
lret
call
daa
cmp
push
push
xor
sti
aad
test
loopne
lds
mov
mov
lret
jmp
lock
mov
mov
iret
aaa
sub
stos
loop
fiaddl
daa
or
sahf
mov
mov
scas
dec
add
mov
add
cli
data16
arpl
pusha
pusha
jmp
ds
insb
pop
cmp
faddl
push
test
decl
popf
and
pusha
popa
add
dec
fadds
outsb
movsb
pop
fcompl
js
mov
sbb
inc
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
out
pop
pop
cmpsb
jbe
add
add
add
jmp
pop
lret
dec
lcall
dec
ds
inc
mov
and
stos
or
xchg
jno
inc
jae
jnp
and
cmp
xor
lcall
inc
jb
cmpsl
push
cmp
idiv
repnz
cmp
inc
inc
and
lods
or
xchg
dec
cli
aam
das
jb
idivb
aaa
push
jb
cmp
into
xor
mov
jmp
rcl
sub
data16
loopne
sbb
imul
popf
in
mov
dec
sub
xor
movsl
sub
and
cmp
and
cltd
adc
ret
push
daa
fsubrl
pop
inc
sbb
xchg
enter
mov
std
mov
jge
fiaddl
push
lahf
pushf
push
jbe
scas
pop
aaa
dec
cmc
xor
cmp
ret
mov
arpl
cmc
popf
mov
inc
jbe
inc
sbb
cmp
sbb
add
in
lods
imul
neg
std
stc
idivl
and
add
xlat
lret
out
stos
nop
sbb
mov
dec
xchg
shl
inc
sub
pop
sub
hlt
pushf
pop
pop
hlt
or
xlat
js
mov
xchg
jb
sahf
aas
jmp
mov
ffreep
push
jecxz
cmpsl
loop
pusha
push
xchg
in
push
popf
addr16
pop
fisubrl
sub
pop
mov
imul
push
pusha
or
mov
or
xor
out
cmp
enter
mov
ja
fnstenv
xchg
jnp
mov
xor
or
mov
imul
mov
dec
jb
ja
roll
sub
aaa
sub
adc
stc
mov
or
or
pushf
add
outsb
stos
cmp
xor
pop
adc
cmpsb
and
repz
roll
or
and
mov
cmc
leave
jle
add
cs
mov
out
jl
js
add
add
add
and
gs
int3
out
mov
jnp
fcmovne
jecxz
jo
jns
or
xchg
aam
mov
leave
ret
dec
adc
jne
lds
aaa
fisubs
mov
dec
sub
sub
mov
jecxz
jb
add
dec
imul
test
dec
add
sbb
dec
enter
mov
inc
add
cwtl
add
imul
icebp
push
rorb
std
cmp
jl
and
popa
and
sbb
rcrl
adc
into
xor
xor
inc
out
jns
fiaddl
push
xchg
mov
inc
js
rorl
or
cmp
cld
pop
popf
int3
mov
jp,pt
es
in
dec
scas
dec
aad
and
ficomps
lret
jne
fists
in
push
aas
ja
push
xchg
stos
jmp
negl
clc
xor
shlb
jbe
sbb
cmp
push
add
lcall
out
dec
jg
aad
mov
or
add
add
scas
fadds
or
pop
push
adc
popf
mov
mov
gs
mov
and
out
sub
aam
mov
cld
icebp
sbb
and
ljmp
clc
mov
xor
cmpsl
cli
insb
in
jbe
insb
adc
test
add
xor
in
fs
ljmp
push
xchg
and
inc
ret
inc
cltd
mov
dec
aas
or
cmpsl
inc
int
mov
ja
sbb
bswap
sbb
push
jne
rcrb
sub
lret
push
test
enter
ss
call
je
add
fnstcw
sarl
push
push
mov
push
lock
iret
sub
xchg
lock
mov
imull
mov
sub
dec
insl
imul
movsl
test
adc
int3
and
add
daa
sub
ja
mov
paddq
mov
jle
add
testb
add
inc
adc
xor
out
ror
es
push
out
insl
repnz
movsl
imul
sbb
int3
xor
pusha
mov
iret
roll
pop
nop
adc
dec
je
adc
push
adc
or
cmp
mov
rcll
add
in
out
imulb
xabort
popa
jo
sub
idivl
push
and
push
je
push
mov
pop
es
pop
push
cld
loope
ja
mov
push
mov
inc
outsl
daa
mov
out
repz
mov
cwtl
sub
mov
or
out
inc
fadd
mov
imul
mov
stc
adc
add
aas
jl
aas
adc
shll
inc
cmp
lcall
fwait
stos
outsl
nop
popa
rolb
int
mov
jnp
jge
xchg
sub
inc
je
add
testb
add
cmpsl
lret
sbb
aas
cmp
and
push
and
or
ja
movsl
jg
ret
int
cli
arpl
data16
mov
notl
sarb
loopne
fidivl
mov
mov
aad
fnstsw
mov
or
pop
adc
dec
xchg
cld
mov
mov
xor
jnp
je
insl
xchg
dec
mov
pop
movups
xacquire
mov
mov
or
mov
insb
xor
sub
rcrl
sbb
xor
add
sub
xchg
pop
sbb
adc
aaa
jg
addr16
ret
sbb
stc
push
jne
adc
test
out
sbb
stc
mov
push
addl
dec
inc
dec
push
or
in
jmp
mov
push
add
xchg
push
mov
cli
xchg
jle
mov
mov
jl
add
add
add
pop
xlat
nop
das
add
mov
imul
dec
mov
xlat
insb
jecxz
pushf
or
mov
xchg
cltd
cmp
adc
ret
inc
stos
sti
out
jle
mov
dec
in
jp
scas
cmpsl
mov
je
mov
xchg
pop
sub
cmp
fucomi
int
icebp
cmp
jae
je
pop
mov
and
lock
dec
mov
mov
loopne
push
mov
test
and
mov
sbbb
sahf
jp
or
jbe
and
pushf
leave
push
cmpsb
scas
cmpsl
sahf
push
in
roll
mov
push
dec
jmp
ret
ds
repz
sub
pop
xchg
inc
mov
hlt
adc
sbb
inc
imul
mov
cli
pushf
repz
jle
jne
and
xorl
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
jle
imul
add
add
add
cmc
jle
xchg
mov
push
test
push
les
repz
xor
les
pushf
sbb
pop
sbb
mov
fisttpll
adc
cmp
out
inc
leave
aaa
scas
and
movsb
imul
lcall
xchg
cmc
pop
mov
jg
dec
inc
cmp
inc
cmpsl
daa
push
cmp
lret
lahf
xor
mov
xchg
sub
lcall
pop
imul
pop
lea
mov
dec
or
lret
mov
mov
daa
mov
xchg
push
imul
fisubrs
xor
dec
int
stos
mov
jb
repz
jno
pop
and
movsb
cmpsl
add
push
leave
pop
loope
and
cmp
loopne
shl
lret
or
fcmovb
jmp
repz
cs
jl
stos
mov
cs
push
subb
push
aas
addr16
fmulp
flds
mov
mov
jecxz
insl
xchg
bound
add
mov
std
mov
enter
or
add
testb
add
cmp
outsl
dec
mov
xchg
scas
sub
fsts
fstps
out
es
ljmp
fwait
idiv
outsb
jns
push
inc
push
xor
cltd
mov
add
jg
ja
clc
push
or
in
scas
aam
jb
movsl
popa
cmpsl
in
dec
add
pop
ds
mov
xchg
xor
pop
lret
arpl
mov
std
push
lock
lret
inc
insl
push
loope
std
xchg
jne,pn
inc
xchg
aam
mov
inc
lcall
ficompl
xchg
ficoml
adc
lret
and
orl
pop
addb
and
test
sbb
stos
cltd
test
test
and
adc
xchg
loop
test
mov
pop
mov
add
pop
xchg
push
mov
pop
mov
les
xor
add
add
fstl
out
add
aam
dec
jg
add
add
add
test
mov
cmp
leave
sub
or
mulb
push
push
jmp
lds
or
in
xchg
gs
dec
dec
push
es
inc
mov
jns
scas
dec
adc
stos
inc
mov
inc
addb
dec
adc
jnp
mov
movsl
inc
xchg
rorl
je
repnz
pushf
out
cmp
jecxz
push
imul
repz
fdivrl
out
mov
add
int3
popa
js
gs
ljmp
pop
push
xchg
mov
mov
popa
jg
mov
ret
jecxz
call
mov
mov
xlat
iret
inc
add
sbb
lahf
jle
daa
idivb
and
add
mov
xchg
push
and
dec
sbb
pop
push
not
cmp
mov
dec
mov
and
imull
adc
or
and
stos
xchg
and
out
out
or
lock
add
add
bound
in
pop
test
lahf
out
fadds
add
testb
add
jbe
icebp
push
and
push
push
out
and
and
xor
outsb
outsb
scas
push
andl
xchg
and
rolb
xchg
clc
xchg
pop
push
add
jae
sarb
xchg
cmp
stc
test
mov
inc
ja
jmp
popf
cmpl
xchg
xor
sti
cmp
or
sahf
inc
push
mov
sbb
jle
sbb
mov
mov
cmp
test
inc
call
sarb
pop
sti
pop
xchg
adcl
shl
loope
adc
push
sbb
lds
aas
fisubrl
rorb
push
dec
stos
cmp
addr16
loop
xor
rolb
jecxz
add
inc
xchg
popa
jecxz
cli
lcall
jns
divl
bound
xor
cmp
add
popa
inc
sarl
lock
jecxz
mov
xor
sub
enter
idivb
imull
cmp
add
imul
cltd
fwait
push
xchg
aaa
int3
mov
fbld
sbb
pop
sbb
inc
sub
or
gs
mov
sarl
xchg
loope
enter
add
fistpl
test
aas
popf
pop
cmp
loope
pop
adc
sub
mov
xor
ja
ds
pop
out
pop
outsb
cmp
jge
sbb
popa
shr
movsb
dec
or
mov
cmpsl
xchg
lahf
xchg
in
shll
push
lret
inc
inc
sub
outsl
je
aad
icebp
fdivrs
cmp
adc
xchg
insb
sub
and
ds
adc
mov
mov
xchg
add
les
xchg
cmc
sahf
mov
add
fisubs
mov
push
mov
sub
addb
testb
add
add
dec
inc
loop
popf
or
inc
lahf
pop
insb
fs
loope
popf
pop
jns
cmp
mov
jne
add
and
aaa
loope
ret
loope
fisubs
leave
fbstp
in
mov
adc
dec
jbe
mov
cmpsb
aad
adc
inc
xrelease
push
add
loop
inc
add
rclb
and
jae
push
enter
mov
pusha
cmp
shl
xchg
jp
xor
scas
shll
outsl
into
test
xlat
mov
imulb
add
in
lret
neg
mov
sbb
in
pushf
push
push
imul
push
rclb
adc
loopne
scas
fsubr
mov
outsb
call
mov
stos
add
xor
cli
add
test
cmp
dec
insl
data16
loope
data16
iret
das
int3
cli
mov
jg
add
shlb
mov
and
dec
and
add
testb
add
dec
inc
mov
fnstsw
jge
mov
push
std
ret
xor
xchg
test
xor
mov
addl
pop
cli
pop
mov
mov
push
sahf
push
dec
test
cmp
and
sbb
scas
jmp
sbb
les
mov
sbb
jns
sub
out
xchg
dec
popf
cmp
push
in
xchg
lcall
ret
and
push
int3
cltd
adc
add
imul
mov
rorl
imul
adc
lods
push
outsb
push
cmp
fs
sbb
mov
xor
and
fsubr
push
mov
mov
sbb
and
cltd
out
lahf
fldenv
mov
leave
lock
add
repz
sbb
add
orb
jle
insb
xor
test
add
add
add
xor
push
add
out
mov
mov
iret
fsubrs
mov
inc
xchg
cmp
frstor
sub
mov
ret
push
mov
icebp
inc
push
mov
xchg
dec
xor
hlt
pop
push
scas
dec
les
mov
icebp
inc
ret
push
xor
sbb
fmulp
jo,pt
xchg
pop
jmp
pop
mov
je
cmp
jmp
into
fiadds
rcll
fwait
cmpsl
xor
adc
inc
test
popl
adc
mov
cmp
and
ret
mul
or
int3
cmp
mov
push
or
or
lret
mov
push
lock
test
add
xchg
aas
mov
das
leave
mov
and
jb
ljmp
inc
inc
push
outsb
mov
push
fidivs
cmc
scas
out
mov
je
and
repnz
addr16
cmp
cmp
add
jo
ja
std
stos
lods
and
fucom
ret
arpl
adc
add
push
out
test
and
repz
add
sub
into
mulps
sbb
cmp
fcoml
popf
lret
ret
out
fmulp
xor
shl
out
arpl
loopne
sub
repz
lods
test
cmp
in
add
lret
jns
cmc
les
lahf
ljmp
push
orb
pop
or
sarb
xchg
lods
dec
xchg
mov
cli
push
jno
jmp
fwait
stos
xchg
xlat
mov
nop
insl
sub
adc
cwtl
jge
mov
or
aam
out
dec
push
or
sbbl
or
aad
int3
scas
mov
cmpl
add
xor
and
jno
test
ds
mov
in
dec
or
arpl
rcll
mov
cmpsb
arpl
je
push
cli
inc
push
xchg
add
add
add
es
xor
inc
int3
and
push
push
adc
daa
lret
imul
notl
xchg
mov
fidivrl
inc
mov
xor
mov
push
sub
mov
mov
sbb
or
cmp
cmpsl
jecxz
sbb
iret
xor
dec
inc
mov
mov
out
je
ret
xor
xchg
push
dec
xchg
pop
movsl
rcrb
cmpsl
pop
arpl
jecxz
sub
ss
mulb
lea
out
jmp
or
mov
mov
cmc
xor
leave
mov
pop
mov
jecxz
adc
aas
mov
inc
inc
shll
cmpsb
sti
out
or
int3
rclb
mov
add
mov
cli
adcl
test
dec
bound
cmp
sti
lock
hlt
mov
jmp
cmpsb
es
cmpsb
dec
add
xor
cli
mov
in
pop
imul
add
add
cvttps2pi
fisttpll
xor
and
sarl
mov
cs
test
inc
dec
cmp
fsts
stos
cld
and
lds
leave
mov
enter
push
pop
test
xchg
add
nop
add
mov
lods
mov
push
mov
aad
in
and
mov
jnp
mov
sub
pop
pusha
lds
ret
cli
cwtl
dec
mov
push
pop
insl
xchg
arpl
add
arpl
cmp
xchg
push
sub
mov
add
into
pop
xchg
mov
mov
aad
xor
sub
jnp
lods
rorl
xchg
scas
sbb
das
js
cmp
clc
fwait
jne
inc
out
movswl
cltd
lcall
pop
pusha
loopne
lods
arpl
scas
push
sbb
dec
pop
mov
add
std
test
ljmp
lret
xchg
add
add
add
in
cmc
jp
sbb
out
fbstp
or
scas
into
dec
and
enter
int
lock
fisttpll
ljmp
adc
subb
push
mov
pop
push
addr16
pusha
push
fs
adc
ficompl
push
or
lahf
sbb
in
sub
dec
xlat
sbb
adc
and
push
cmpsb
jecxz,pt
cltd
inc
mov
or
sahf
repz
andb
movsl
ret
imull
lods
push
inc
mov
nop
cmp
stos
aas
mov
adc
lahf
dec
nopl
js
inc
add
jb
push
push
stos
mov
test
test
mov
sbb
mov
insb
add
and
jle
xor
jns
dec
mov
ret
mov
daa
adc
inc
sahf
mov
add
xchg
xchg
jns
incl
xchg
inc
call
add
add
mov
sbbl
popf
cmpsl
lods
and
rcrb
mov
jl,pn
pusha
inc
jge
jecxz
repnz
pop
sti
mov
mov
sahf
idivl
sbb
popa
inc
push
pop
iret
or
or
xchg
mov
dec
lds
mov
mov
push
ret
mov
push
outsb
fwait
jl
rcrl
xor
cmpsb
pop
imul
fwait
jle
jb
pop
inc
out
stc
and
jno
jnp
sub
xor
pop
mov
inc
je
and
shrb
mov
or
pop
aas
adc
push
stos
and
xor
mov
jnp
jmp
xor
add
sbb
aam
push
repz
mov
sub
fdivp
movsl
jg
dec
pop
sub
push
sub
push
mov
add
scas
lcall
xchg
dec
lea
fimuls
add
push
mov
cmp
push
scas
sbb
sub
incl
mov
and
or
jae
push
nop
shr
and
xchg
and
inc
mov
movsl
nop
pop
push
or
sub
je
push
ret
stos
fisttpll
aad
push
test
bound
cmp
xor
popa
cs
andl
cs
push
push
pop
mov
jge
jae
mov
xor
loopne
inc
daa
outsl
add
cmp
and
outsl
or
lods
pop
cmp
xor
les
push
and
mov
add
jo
loope
inc
sbb
aad
or
cmp
inc
jae
out
sbb
in
les
xor
out
sbb
sub
mov
pop
lods
fs
lock
loop
xchg
mov
ljmp
mov
dec
rcll
imul
push
ljmp
add
mov
idiv
fst
inc
sahf
pop
dec
mov
sub
testb
add
xor
add
sti
enter
inc
aas
ficompl
pop
lret
cmc
xor
push
push
mov
pop
add
jb
ss
mov
or
add
jecxz
mov
repz
jb
test
and
mov
xchg
scas
adc
push
lea
mov
mov
mov
cs
jns
lock
mov
xor
or
dec
loop
ret
pop
jmp
mov
inc
jne
push
fidivrs
shll
dec
in
push
enter
ljmp
fldenv
inc
or
pop
mov
movsb
cmp
jne
sbb
fidivl
aaa
dec
xchg
fidivs
pop
callw
mov
loop
pop
sub
outsb
pop
mov
aad
mov
push
aaa
add
xchg
call
and
fwait
movsb
bound
lret
add
add
add
dec
jnp
pop
cltd
jbe
cli
sti
mov
jno
push
dec
lods
vzeroall
xchg
sti
fwait
add
adcb
icebp
clc
sub
jns
outsb
mov
inc
movsl
xor
xchg
lods
mov
jbe
test
iret
mov
pushf
test
fnsave
or
das
mov
test
mov
fisubrl
fimull
mov
add
jmp
jns
xchg
lds
pop
inc
add
imul
loope
les
out
mov
adc
cmp
jo
lock
jmp
cwtl
fstl
adc
and
jo
mov
dec
push
mov
mov
imul
inc
jmp
xor
dec
into
cs
je
outsl
push
xor
cmp
and
mov
lock
cmpsl
rcrl
fimuls
in
add
sti
iret
and
repnz
out
mov
rorb
push
in
xor
jne
shll
jo
iret
lea
cli
repnz
add
into
je
adc
in
jp
out
add
push
pop
lret
ljmp
mov
inc
xlat
mov
pop
xchg
cli
mov
jnp
out
push
mov
lcall
push
dec
outsb
jp
call
aad
jecxz
cmp
cltd
xchg
add
and
or
stc
jle
int
xor
pop
mov
insb
adc
mov
cltd
call
shl
mov
mov
scas
inc
arpl
rcll
mov
mov
repnz
fwait
push
and
sub
es
xchg
pop
int3
jns
or
lcall
sbb
popa
in
dec
loopne
dec
mov
jge
pop
lods
push
or
lret
call
in
xchg
jg
mov
add
xor
shlb
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
icebp
push
ja
mov
add
testb
add
pop
incb
int
and
pop
push
ss
nop
iret
dec
dec
lcall
sub
mov
fiadds
inc
imul
push
pusha
inc
repz
and
stos
dec
ret
or
hlt
mov
jb
insb
dec
dec
imul
filds
mov
stos
shr
inc
shl
jo
add
movsb
inc
inc
pop
mov
push
mov
subb
cmp
jle
ja
les
pop
adc
jmp
loopne
cs
pushfw
xchg
cmp
ja
loope
ds
inc
outsl
sub
jg
ljmp
mov
pop
jge
xchg
jne
xlat
adc
fsubrs
cs
sbb
jno
mov
pop
push
or
cwtl
idivl
sbb
dec
xchg
dec
jne
cld
jnp
in
adc
xchg
sbb
or
mov
mov
add
add
mov
into
xchg
cmp
add
add
add
push
inc
push
sbb
stos
add
xorb
adc
nop
adc
repz
jo
gs
repz
fwait
mov
cmp
popf
inc
or
in
cwtl
push
inc
filds
mov
lret
add
mov
out
outsl
adc
fiadds
gs
dec
push
add
loope
aaa
lret
lea
fdivrl
stos
xchg
das
lea
iret
pop
jnp
movsl
mov
or
in
push
aaa
mull
lds
push
movsl
sub
push
jmp
cmc
mov
cmp
xor
add
sbbl
jbe
mov
je
sbb
out
adc
jns
dec
sub
lods
jp
pop
mov
xchg
ljmp
jb
sub
inc
test
movsb
add
and
out
ljmp
jp
cmp
je
xchg
nop
mov
add
add
xchg
xchg
cmpsb
xor
data16
mov
imul
xor
xchg
pop
inc
mov
sbb
data16
cli
insb
and
scas
out
and
and
arpl
adc
outsl
xchg
lock
bound
daa
scas
jmp
fidivs
sbb
jns
orb
jne
push
repz
cmp
rol
mov
jmp
sbb
ljmp
iret
add
mov
xor
cmpsl
call
inc
sarb
mov
mov
outsb
cmpsl
mov
push
push
sub
pushf
pop
pop
repnz
loope
push
out
mov
and
cmp
rorb
stc
pop
jbe
and
nop
cld
shlb
fcmovnbe
imull
jmp
fidivl
in
fiadds
inc
pop
push
mov
popa
imul
dec
out
js
jl
stos
loop
mov
add
arpl
jnp
sbb
xchg
sub
rcl
or
nop
add
testb
add
or
stc
iret
cmpsb
push
push
sbb
scas
or
mov
imul
into
xchg
fldlg2
fsubrl
aas
xchg
das
sbb
call
mov
adc
xor
jp
add
lods
pushf
add
dec
adc
clc
sbbl
scas
dec
int3
push
call
mov
cmp
rolb
pop
into
xor
loop
call
popf
mov
ret
push
dec
insl
sub
nop
lahf
leave
push
jno
imul
jge
jge
outsb
push
inc
cmpsb
lcall
data16
test
push
call
je
clc
shrl
call
push
adc
mov
push
mov
icebp
mov
fnstsw
xchg
dec
pop
lret
outsb
out
and
jmp
push
shr
xchg
adc
fiadds
punpckldq
les
push
aas
or
mov
jecxz
xchg
dec
mov
add
mov
mov
mov
sub
cld
idiv
xor
sbb
stc
jge
mov
xor
mov
mov
pusha
dec
leave
dec
lods
push
inc
jns
mov
imul
arpl
pop
fistps
into
mov
mov
jae
insl
jne
mov
push
xor
or
xor
xor
shr
sbb
jg
lods
mov
mov
xchg
in
sbb
sbb
cwtl
and
je
ret
add
in
cli
add
outsb
bound
scas
sahf
int3
lods
add
in
inc
ret
pusha
subl
je
fs
rcrl
mov
mov
xor
in
push
jbe
mul
jmp
jge
fldcw
or
fnstcw
outsl
push
cmpb
jo
rcrl
test
add
insb
fidivl
cli
sub
lcall
add
testb
add
cld
mov
and
and
lods
push
daa
xor
mov
dec
or
std
loopne
push
arpl
pop
xchg
dec
jne
jmp
adc
pop
xor
xchg
push
mov
cld
adc
dec
je
sub
push
out
xchg
mov
test
ds
push
jecxz
cmp
lds
mov
jge
es
in
xchg
cmp
jl
xor
inc
repz
cmc
and
add
sub
jge
mov
push
movsl
xor
rorl
add
mov
stos
mov
jb
fs
pop
mov
aaa
jo
cli
ret
arpl
mov
inc
sub
negb
jecxz
mov
cmp
xchg
mov
test
lret
jbe
call
push
gs
mov
cmp
loope
fcoml
sbb
add
cmp
mov
in
into
mov
add
testb
add
jne
mov
push
add
cmc
enter
xor
icebp
cmpsl
outsb
mov
mov
jmp
jbe
test
push
pop
and
mov
xor
aad
mov
jne
mov
mov
jne
inc
fs
jns
lahf
sub
mov
sbb
push
or
jl
and
das
jle
adc
jecxz
dec
movsl
mov
adc
scas
ss
mov
push
faddp
sub
sbb
sub
add
cmpsl
test
pusha
jmp
mov
push
out
pop
mov
xchg
jl
jno
test
jnp
les
fiaddl
inc
repnz
fistpll
and
mov
jle
aas
test
pop
mov
sub
pop
out
cmp
rcrb
call
in
add
int
fstp
iret
push
lock
jmp
mov
jo
add
testb
add
in
push
out
xor
scas
pusha
movl
cmc
f2xm1
out
pop
cs
call
in
loop
or
fimull
or
jp
xor
adc
cmc
das
add
mov
jo
loop
dec
mov
mov
inc
push
mov
pop
lock
inc
push
stos
out
jnp
aas
jb
jnp
cmp
cmpsb
incb
shrl
adc
cmp
xor
xchg
push
sarb
daa
bound
pop
adc
outsb
mov
jns
pop
lret
lcall
lea
mov
mov
lcall
xchg
cmp
mov
ds
dec
sbb
mov
pop
xchg
enter
adc
dec
mov
pop
outsb
push
rcl
jae
cmp
xor
ljmp
mov
xchg
dec
xchg
addr16
mov
jb
inc
dec
mov
ficoml
scas
push
add
ficoms
lahf
and
scas
std
sub
pop
mov
xchg
add
testb
add
dec
ret
pop
push
or
inc
sbb
imul
mov
cmc
cwtl
into
bound
leave
enter
dec
adc
adc
jecxz
lds
sub
int3
outsb
scas
push
dec
and
sbb
and
xchg
cmc
mov
test
push
scas
hlt
ss
gs
scas
fwait
mov
lds
movb
aas
push
jno
push
loope
mov
xchg
sbb
fisubs
pop
ficomps
test
out
push
insl
std
push
scas
jbe
jo
cmc
dec
adc
add
sahf
out
fwait
out
aaa
call
inc
or
daa
ret
mov
push
xchg
lea
mov
and
sbb
mov
ret
ljmp
loope
cmpsl
lret
mov
test
sbb
mov
push
and
pop
imulb
mov
and
mov
adc
ficomps
add
mov
push
xor
pop
xchg
add
testb
add
xchg
fsubs
sbbb
and
push
int
push
test
loopne
lret
mov
scas
and
or
inc
ja
xor
pop
xchg
mov
xor
xchg
inc
push
imul
fisubrs
psraw
mov
mov
in
test
shll
mov
cmp
int3
xchg
cwtl
mov
stos
adc
fsts
mov
std
mov
sahf
push
mov
push
loopne
stc
popa
pop
ss
jo
mov
bsr
popa
mov
aas
xchg
adc
mov
in
leave
in
cmc
xchg
and
test
mov
jmp
test
pop
into
cmp
ds
add
mov
xchg
dec
ds
xchg
xor
mov
decl
push
or
adc
sbb
lds
xchg
pop
xor
push
lcall
fisubl
insb
popa
add
inc
or
test
mov
mov
shll
xchg
add
testb
add
outsl
add
fwait
push
stos
cmp
in
rol
cwtl
dec
mov
sbb
arpl
pop
adc
outsb
pop
lea
fsubrl
fwait
lods
mov
inc
ficoms
push
out
push
ficomps
fidivl
aas
ljmp
mov
xor
inc
cli
mov
add
and
xchg
push
movsb
das
inc
je
dec
in
lea
cmc
jbe
mov
push
icebp
notb
push
mov
sbb
sbb
mov
dec
xchg
das
inc
scas
pop
in
inc
sub
notb
test
pop
loopne
js
lret
je
roll
xor
lock
add
push
cmp
mov
pop
pop
xchg
movb
inc
fistl
xorl
mov
add
ljmp
loop
dec
pop
fs
cmp
add
add
add
into
sbb
xor
add
imul
jl
js
out
or
es
leave
sub
xchg
add
mov
das
ja
jl
in
es
pop
call
imul
xorl
xorl
push
add
mov
sbb
dec
mull
and
movsb
out
mov
pop
lds
push
adc
aaa
or
mov
xchg
js
mov
adc
xchg
cs
testl
cmp
lods
xrelease
adc
sub
movsb
dec
das
lret
pmaddwd
and
cwtl
addr16
jb
cs
pop
jb
loopne
sub
mov
mov
dec
loopne
popa
shrb
pop
stc
mov
dec
les
dec
inc
icebp
add
aaa
shlb
cmc
div
rcl
inc
pop
bound
xor
cltd
add
testb
add
xchg
mov
mov
push
xor
dec
xchg
inc
sti
pop
stc
sbb
in
xor
sbb
jmp
inc
add
cmp
icebp
add
push
adc
mov
in
aad
xor
out
mov
push
inc
sahf
xor
out
in
shrb
test
adc
je
lahf
bound
sub
lock
incb
mov
mov
sbb
fwait
loopne
and
sbb
cmpsb
mov
and
mov
movsl
sub
movsb
jno
fiaddl
pop
mov
fdivrp
and
ss
inc
push
mov
push
rcr
or
mov
jns
sbb
ret
dec
decb
test
mov
adc
enter
jo
mov
call
mov
xor
sub
fwait
popa
push
add
pop
push
nop
push
sahf
rcr
pop
test
pop
xor
add
testb
add
jl
stc
and
mov
adc
push
mov
push
sub
fmulp
out
jbe
lds
push
sbb
fnstenv
xchg
scas
or
repz
out
dec
xchg
push
adc
rcll
dec
das
test
lods
js
push
repnz
jbe
add
sub
rcl
cmc
adc
fwait
jg
repz
inc
sarb
out
std
jo
shll
xchg
jecxz
clc
daa
inc
notl
fadd
out
xor
cmp
jecxz
rcl
cmp
ljmp
xchg
lahf
fisttpll
mov
mov
pop
negb
mov
mov
mov
mov
in
push
sub
aas
and
fistpl
jns
imulb
mov
xlat
sahf
mov
jl
ljmp
arpl
int
jnp
ret
xchg
or
aaa
jo
lcall
add
arpl
cmpsb
jcxz
jne
push
inc
data16
adc
fwait
add
testb
add
cld
mov
les
into
push
popf
repz
add
cmc
push
scas
movsl
das
mov
xor
inc
fistpll
ja
rorl
mov
xchg
xor
push
scas
fs
cwtl
jae
mov
shlb
dec
inc
out
dec
fdivrs
es
adc
or
lahf
sub
push
jmp
shrb
inc
outsb
mov
lea
push
cs
push
mov
ljmp
jo
jl
pusha
inc
pop
rclb
inc
loop
into
sub
and
int
dec
inc
dec
xchg
lock
hlt
inc
sub
push
cmp
mov
sub
jne
cmovs
dec
push
or
dec
push
pop
sub
sarl
mov
lcall
fucomp
cmpsl
aas
jle
sub
xchg
leave
cmp
mov
mov
xchg
xor
adc
adc
add
clc
jnp
jg
in
cli
cwtl
inc
mov
pop
and
add
add
add
push
mov
xor
xchg
xchg
mov
fstps
sub
mov
sub
xchg
cwtl
xor
addr16
fs
iret
cmc
scas
bound
aad
push
sbb
jbe
mov
dec
fwait
bound
xchg
scas
mov
and
or
pop
sub
mov
ss
out
pop
xor
addr16
inc
sub
iret
fiadds
pop
jge
scas
mov
push
inc
sbb
xchg
jl
mov
insl
xor
pop
mov
cld
mov
or
ret
repz
cmpsl
pop
pop
sbb
add
pusha
sub
aas
xchg
mov
aaa
cltd
sbb
iret
xchg
pop
rcll
ljmp
daa
mov
xchg
jmp
xchg
jb,pn
cmp
pop
jg
mov
mov
test
lret
pushf
fs
fwait
ret
cmpsb
jl
xchg
add
lods
faddl
fbstp
cld
inc
push
cltd
das
pop
or
add
add
add
imul
cs
cli
jo
aaa
inc
adc
jmp
mov
push
jb
pop
clc
jb
jp
add
mov
add
int3
inc
sub
jns
and
insl
mov
hlt
out
pop
out
adc
ljmp
push
iret
movsb
dec
sub
outsl
mov
xchg
stos
enter
jae,pt
fs
aam
lea
test
sarb
mov
xor
movsl
aam
in
in
in
lods
sub
lock
shlb
lahf
imul
push
movsl
mov
shl
mov
jnp
jae
push
jo
jle
mov
jno,pn
or
and
inc
cs
fstl
iret
das
mov
sbb
ret
dec
jae
sub
xor
rcrl
ljmp
dec
jmp
lea
sub
add
jl
sar
std
jle
loop
ja
mov
add
add
add
aad
jnp
sbb
inc
xchg
xchg
jb
mov
pop
test
test
add
and
jp
jle
ss
pop
std
icebp
adc
inc
mov
ret
data16
xchg
rolb
cmp
jo
xor
shl
iret
rcrb
call
xchg
in
iret
pop
pop
adc
jns
jg
dec
pop
ja
mov
sub
adc
fiaddl
stos
inc
cmpsl
iret
or
inc
xor
mov
test
jg
enter
jno
dec
sbb
movsl
pop
arpl
mov
xchg
cmc
xchg
mov
fbstp
aam
add
fisubs
and
sbbl
idivb
pop
cmp
nop
nop
icebp
mov
mov
push
lahf
sbb
repz
pop
xchg
test
andl
mov
add
cmp
cmp
pop
aam
mov
testb
add
and
jg
adc
loop
adc
scas
addr16
and
mov
cwtl
cmpsl
and
fdivs
insb
cs
xchg
adc
push
aaa
jp
mov
in
pop
ss
movl
out
xchg
ret
cmp
adc
push
lds
push
mov
push
sahf
lock
sbb
enter
cmp
in
and
cli
sub
test
les
insb
cmpsb
xchg
add
cli
mov
fistps
mov
sub
mov
cmp
dec
push
push
push
fs
cmp
idiv
push
shlb
outsb
fxch
in
negb
jns
xchg
xlat
push
inc
mov
adc
xchg
and
outsl
xor
iret
stos
dec
adc
xor
test
sub
pop
xchg
cmpsl
add
pop
lcall
aad
add
outsl
sti
into
aad
aam
inc
icebp
jp
lahf
add
testb
add
nop
loop
outsb
push
test
xor
ss
fisttps
push
in
lret
mov
or
pop
scas
in
sub
inc
in
cmp
sub
ret
pop
out
push
xor
jp
lock
repnz
mov
lcall
adc
cmp
push
fbld
stc
nop
hlt
scas
rol
jns
push
jns
stc
loope
cmp
push
mov
mov
cwtl
jl
cmp
lahf
pop
adc
and
pop
pop
and
dec
ss
mov
fwait
popf
push
jo
rclb
cwtl
sub
xchg
jp
add
fs
insl
xor
inc
adc
mov
sub
pop
push
mov
add
in
int
scas
pop
lods
jo
adc
xor
hlt
jmp
add
push
and
xlat
aas
jle
ds
out
mov
add
pop
lods
push
loope
mov
push
jecxz
sysenter
rclb
cmp
pop
shrl
and
das
rorl
push
scas
pop
pop
dec
jmp
insb
xlat
or
inc
and
pusha
mov
xchg
stos
xchg
adcb
dec
clc
ds
cmp
or
aaa
sub
jl
mov
dec
shr
mov
ds
jmp
xchg
adc
cmpsb
pushf
call
xchg
push
xchg
mov
mov
fwait
out
addr16
addr16
fwait
push
mov
mov
mov
icebp
loopne
add
cmpsl
lahf
jge
cld
lds
fs
mov
mov
jmp
add
je
pop
test
xchg
mov
addr16
add
mov
pop
mov
jge
lahf
xor
sbb
mov
or
push
bnd
rcrl
add
add
mov
mov
jmp
ljmp
add
testb
add
inc
xor
js
sub
andb
mov
inc
or
sahf
xchg
inc
or
xchg
in
rcr
mov
push
lods
data16
test
xor
sahf
mov
cmp
lods
and
roll
loope
xchg
scas
int
xchg
cmp
or
push
mov
add
pop
xchg
mov
popf
inc
mov
inc
jb
add
inc
out
sbb
xor
hlt
ja
fsubl
push
sub
mov
xchg
leave
imul
adc
mov
inc
jge
ret
inc
mov
dec
cmc
xchg
je
fcmovb
cs
mov
iret
cmp
add
mov
sbb
mov
insl
and
push
enter
pop
cmpl
mov
movsl
sbb
rclb
sub
mov
sbb
xchg
sbb
add
lret
sbbl
mov
sub
add
testb
add
push
add
adcb
cs
mov
sbb
push
mov
add
xorb
push
xlat
stos
cmp
ljmp
shlb
stc
lods
loopne
add
sarb
dec
push
adc
ret
or
inc
fnstsw
ficompl
pop
jne
icebp
or
daa
pop
addr16
mov
push
cmp
dec
pop
sbb
aaa
dec
notl
fisttps
aad
sbb
repnz
inc
mov
shr
gs
cmpsb
stc
sbb
inc
pop
add
mov
mov
out
jge
ret
lea
mov
jge,pn
lock
lret
test
mov
enter
insb
push
dec
push
cmp
movsb
lahf
sbb
mov
shll
jecxz
addr16
bound
push
outsl
adc
mov
add
add
imul
and
or
call
mov
add
outsb
test
mov
mov
sbb
mov
xchg
loopne
adc
mov
outsl
sbb
fsubrl
ret
cs
mov
xor
inc
test
outsl
or
and
gs
push
sub
cltd
mov
jnp
push
or
rcl
mov
pusha
ss
jmp
in
pop
fisttpl
in
jne
cmp
and
stc
outsl
shl
mov
cmp
je
xchg
scas
daa
mov
or
out
sarl
push
out
or
aam
js
rol
push
mov
mov
enter
jne
inc
mov
mov
rol
inc
mov
mov
fisttpl
lret
sub
imul
into
mov
repz
cmp
xorb
and
or
les
sahf
lret
lods
add
mov
jge
jg
decl
xchg
test
movsb
add
testb
add
jae
cmp
sbb
adc
in
andl
push
mov
jecxz
out
ret
inc
mov
pop
enter
mov
in
mov
cmpsb
insl
mov
mov
cmp
mov
imul
dec
mov
sub
shll
pop
mov
mov
shlb
inc
div
aaa
popf
and
lock
daa
les
shrl
test
add
add
add
push
pop
iret
test
jns
lret
sbb
sub
jae
fisttps
or
and
add
repz
dec
mov
or
int
sbb
out
arpl
js
pushl
les
imul
test
or
sar
push
xchg
pop
mov
scas
andb
sqrtps
push
mov
lahf
daa
cmp
dec
and
lds
pop
add
xchg
stc
std
jno
add
ja
out
das
mov
aam
rolb
mov
add
add
es
push
loop
addl
loopne
inc
dec
insl
insb
or
push
bound
xor
inc
fs
popf
and
push
xor
popf
jno
add
sbb
jae
inc
mov
ret
lcall
jnp
xor
int3
pop
aaa
shl
add
lcall
stc
inc
pop
decl
lret
outsb
daa
aad
mov
clc
out
inc
sbb
leave
in
mov
add
mov
aam
xchg
sub
mov
mov
in
mov
shll
mov
outsl
ret
stc
jno
xor
pop
mov
adc
adc
enter
or
dec
enter
shll
push
or
sub
aaa
mov
lock
push
dec
enter
loop
mov
push
ret
mov
in
jmp
xor
adc
mov
dec
mov
add
loop
test
mov
bound
mov
add
testb
add
orb
pushf
jecxz
pop
cld
jmp
pop
sub
push
cwtl
pop
pop
xlat
aas
scas
fcos
push
cmp
std
mov
notb
inc
repz
je
push
mov
cmp
fldcw
lret
je
ss
push
nop
cltd
clc
push
les
inc
jg
vmread
dec
jo
subl
sub
js
jl
test
inc
fwait
mov
xchg
cmc
cmpsb
mov
cmp
imul
adc
popa
and
mov
jmp
sbb
mov
sti
fmuls
mov
sbb
stos
imul
out
movsl
inc
xchg
inc
mov
dec
pop
pop
ret
jb
repz
shll
int
push
shlb
inc
and
push
jg
and
das
into
movl
xor
mov
dec
bound
and
add
or
lcall
fs
shrb
add
add
xor
mov
std
dec
outsl
out
mov
and
xchg
in
ljmp
jno
add
dec
dec
mov
inc
push
mov
shlb
jge
jmp
inc
jns
or
pop
pop
loope
lea
sbb
int3
jl
in
mov
xchg
cmp
shlb
call
fisttpl
add
pop
mov
cld
shrl
test
sub
scas
sahf
dec
cmp
mov
orb
xor
xchg
adc
pop
stos
and
jae
push
mov
push
inc
sbb
xor
jns
mov
sahf
out
pop
fwait
jnp
daa
into
xchg
xchg
mov
xchg
fldcw
or
mov
sbb
xchg
addr16
inc
stos
cmp
pop
imul
push
or
jb
jmp
jmp
sbb
add
mov
mov
cmp
stos
push
popa
ljmp
add
js
jno
cmp
sbb
push
inc
jmp
xchg
mov
cmc
test
pop
xlat
out
mov
inc
or
fld
cs
mov
lahf
sarl
outsl
xlat
mov
dec
lds
sahf
jns
stos
loopne
or
int
in
mov
dec
push
sub
pop
pop
cmp
pop
leave
inc
jb
and
inc
mov
lahf
xchg
sbb
push
mov
aam
cmp
loopne
dec
inc
mov
ljmp
jno
jno
jmp
cmp
call
cmc
sub
ds
and
mov
dec
cmp
inc
adc
push
icebp
cmp
push
in
sbb
add
ss
shrl
mov
push
pop
and
cmpsl
inc
lods
jno
and
stos
cwtl
mov
pop
jne
jg
xor
pop
sub
jns
cmpsb
dec
add
or
sbb
mov
xchg
mov
add
testb
add
arpl
jne
sahf
jo
es
out
jg
push
jns
xchg
pop
daa
imul
movsl
xlat
jbe
loopne
mov
int3
xor
jle
sbb
aam
push
mov
xchg
cli
pop
cmp
inc
cmpsb
mov
fwait
xchg
fs
dec
lea
fidivrs
push
mov
not
cmp
lods
sub
add
mov
icebp
aaa
stc
scas
dec
lret
jecxz
push
adc
push
imul
outsl
xchg
icebp
data16
jg
test
popa
push
pop
xchg
cmc
popf
mov
mov
jmp
ret
sbb
mov
pushw
cltd
pop
cltd
dec
push
aad
gs
mov
rcrb
rcr
out
insl
mov
mov
and
sub
out
inc
mov
mov
jecxz
jle
nop
adc
lods
sbb
mov
xchg
xchg
roll
add
inc
fdivl
stos
push
cmp
add
add
test
pop
sub
fmull
loop
push
into
leave
sbb
cmp
es
fimuls
pop
lods
cli
inc
jp
xor
add
xchg
test
fstpl
ja
mov
inc
mov
pop
popl
sub
adc
mov
fsubs
cmc
push
xchg
mov
sbb
mov
push
fisubl
sub
xlat
mov
or
and
fisttpll
and
xchg
imul
cmpsb
lret
xor
fdivs
fistpl
int
pop
adc
scas
adc
and
pop
arpl
out
addb
jae
and
mov
mov
ret
and
daa
mov
lea
mov
and
push
dec
lret
add
ljmp
ds
push
outsl
sbbb
mov
rol
test
pop
inc
cmp
sarl
mov
add
add
sbb
mov
pusha
cmpsb
sbb
add
testb
add
inc
jecxz
mov
fs
fcomps
rcrb
or
or
je
andb
sub
dec
outsl
les
sti
js
mov
and
repz
push
cmpl
inc
jmp
mov
jmp
push
in
xchg
cmpsl
or
pop
in
repz
stc
mov
sub
aad
loopne
and
sarb
daa
sbb
mov
repz
test
fwait
outsl
adc
jmp
pop
add
push
inc
or
cwtl
shr
cmp
out
mov
push
jne
xchg
cld
adc
out
dec
mov
mov
pop
mov
movsl
xchg
pushf
test
cmp
cmp
inc
cmpsb
sti
cmp
movsb
xor
mov
inc
daa
mov
cmp
inc
xchg
push
xchg
xor
imul
jno
arpl
addl
add
stos
hlt
jmp
ljmp
out
xor
add
testb
add
adcb
ret
aad
inc
pop
arpl
add
loop
adcb
cmp
jg
jnp
inc
cli
xchg
movsl
and
sahf
push
push
mov
vmovd
or
popa
sub
push
scas
movsb
mov
inc
movsb
or
mov
jg
inc
and
cmp
popf
int3
pushf
inc
xchg
jl
dec
xor
sub
ds
sbb
out
test
push
fldl2e
aaa
pop
mov
fsubl
mov
adc
fcompl
xlat
mov
sbb
xor
fimuls
mov
sub
nop
push
addr16
mov
gs
adc
mov
ja
pop
pop
pop
add
lahf
adc
push
sbb
add
frstpm(287
es
pop
jmp
mov
ss
pop
pop
xchg
mov
mov
gs
mov
xlat
mov
lcall
add
out
xlat
out
jg
dec
cmp
daa
sbb
insb
lods
add
testb
add
dec
dec
or
out
js
adc
add
xchg
loop
dec
jl,pn
out
adc
jns
xchg
aad
mov
ljmp
test
adc
xlat
mov
out
outsb
dec
jge
adc
jno
ss
inc
ds
mov
scas
sbb
or
and
shlb
lret
test
nop
aas
leave
lahf
pop
sahf
mov
cmc
fwait
push
xchg
dec
adc
xchg
xor
and
mov
xchg
std
insb
or
lret
push
addr16
hlt
sbb
mov
sub
inc
or
lods
and
sub
faddl
daa
into
ret
dec
dec
mov
dec
mov
movsl
fld
mov
sub
mov
cmp
insl
jmp
sub
adc
add
ret
mov
inc
add
mov
stos
xor
mov
jae
add
sbb
pop
fbstp
mov
arpl
scas
add
testb
add
xor
cmp
sbb
and
ljmp
adc
pop
mov
stos
dec
xchg
mov
or
xchg
mov
cwtl
add
dec
int3
in
dec
fldenv
shl
add
in
mov
ficomps
sbb
cmp
arpl
enter
out
aam
call
mov
sbb
outsb
test
ficoms
cmp
gs
data16
hlt
outsl
cwtl
test
dec
or
out
fs
test
imul
jns
or
xor
sbb
push
mov
das
std
arpl
rol
mov
bound
jo
stos
sub
mov
rcrl
bound
outsb
ret
lds
sub
daa
push
jge
jnp
popf
test
gs
or
and
es
pop
nop
rcrb
cmpsb
ljmp
pop
sub
mov
add
lcall
std
clc
jns
ljmp
add
testb
add
rcr
cmp
xor
jbe
int
outsb
decb
rcrb
jno
pop
jno
fistl
int3
add
pop
cs
push
xor
loop
push
cli
dec
push
xor
or
pop
fldcw
mov
sub
xchg
out
test
jnp
insl
adcb
push
jle
mov
cmp
roll
loope
push
jae
adc
jmp
ret
into
lret
cmpsl
add
pop
iret
imul
sub
jge
cmp
fdivs
xchg
pop
pop
cmp
mov
jmp
mov
sbb
imul
mov
es
or
jmp
mov
out
ret
and
jo
out
push
pop
leave
add
sbb
cmp
push
loop,pt
pushf
test
or
or
mov
das
into
pop
push
add
lret
jnp
sti
jmp
xchg
sub
sarb
mov
add
add
add
fwait
insl
test
pop
mov
pusha
inc
mulb
sub
jb
sub
into
mov
test
gs
cld
push
xchg
and
gs
fs
testl
lods
sbb
push
lret
jb
and
mov
adc
pop
popa
xor
mov
adc
add
notl
jno
sbb
dec
cmp
adc
int
jnp
mov
aaa
loopne
pop
ja
pop
mov
leave
out
bound
cs
and
xchg
pop
pop
rcrb
sbb
fs
mov
push
ds
es
dec
adc
mov
leave
and
sbb
or
dec
pushf
ljmp
or
popa
dec
xchg
or
jmp
mov
add
jecxz
lock
hlt
or
add
add
add
push
sub
pop
adc
lock
cmp
pop
mov
cs
loope
mov
jns
mov
mov
mov
pop
popa
dec
xor
or
mov
jle
cmp
adc
jb
shl
pop
pusha
xor
xor
sub
lret
and
pushw
ljmp
jae
sub
idiv
es
mov
mov
out
push
pusha
pop
or
mov
into
jb
ja
sti
push
insb
ljmp
pop
sbb
roll
sbb
pop
mov
pop
pop
icebp
sub
pop
sbb
out
mov
mov
int
mov
fwait
pop
xlat
xor
jmp
pop
mov
dec
jl
adc
fisttpl
aaa
push
stos
cmp
loop
lret
mov
ja
lods
dec
pop
inc
sub
add
mov
cld
mov
test
cmp
add
mov
dec
popa
cmp
adcl
aas
jbe
inc
outsb
sahf
loopne
mov
outsb
hlt
ss
xor
xor
fst
jge
repz
scas
in
sbb
int3
xor
ja
mov
mov
dec
pushf
aam
sub
idivb
data16
gs
sub
loopne
es
jl,pt
xor
es
add
pop
cmp
aad
lret
add
push
movsl
pushf
out
adc
divb
cmpsb
and
test
nop
cld
or
popl
xchg
sbb
popf
mov
f2xm1
mov
xchg
addr16
cltd
inc
push
jo
sub
mov
ljmp
dec
movsb
dec
das
das
iret
add
lea
into
sti
out
jbe
out
divb
xor
or
pop
and
or
sbb
sbb
dec
insb
iret
std
test
out
aam
adc
popf
add
mov
dec
das
pop
out
cmc
mov
inc
movsl
pop
xor
add
pop
push
test
roll
pop
lock
aam
popf
stos
cmp
push
push
lret
or
stos
push
jp
movsb
fcomp
mov
popa
aam
mov
cmp
push
leave
fldl
xchg
test
mov
mov
or
popa
or
shl
mov
jecxz
fimull
xchg
cmp
cmp
lods
imul
outsb
xchg
push
push
xor
sub
push
fidivs
movsb
sahf
xor
fdivl
int3
in
test
lods
ss
stos
filds
fldt
lods
adc
outsl
push
adc
lock
sub
inc
xor
in
test
pop
dec
ja
adc
lea
orb
or
hlt
mov
js
mov
xchg
fwait
scas
xor
mov
lods
ss
rcrb
add
shrb
dec
iret
and
pop
xor
add
fucomip
std
dec
std
pop
mov
fucom
es
add
add
add
xchg
inc
test
cmp
outsb
xorl
lods
pop
inc
cmp
int
aaa
cmp
lret
sti
push
push
and
gs
pop
jnp
int
inc
int
rcrb
cld
shrl
sbb
mov
pop
xor
push
test
or
and
sub
ret
xor
pushf
int3
mov
cmp
dec
jns
push
push
mov
xor
rcr
pop
dec
sbb
icebp
cs
bound
mov
js
fnsave
js
cmp
jle
push
mov
outsl
and
mov
mov
in
mov
test
ret
pop
jecxz
fwait
xchg
or
xchg
aad
addr16
fstpl
xchg
and
jecxz
mov
and
sbb
mov
mov
xchg
sbb
mov
ror
adc
fwait
sbb
addb
fidivs
loop
ljmp
loope
sbb
sbb
add
testb
add
mov
xor
inc
sub
hlt
xchg
pop
testb
and
xorl
lret
and
pop
fistpll
adc
js
int
mov
ret
and
sub
fisttps
lods
or
out
fcomps
jae
push
cmp
inc
pop
sub
jp
test
jp
adc
mov
push
popa
xchg
push
sbb
mov
push
cmc
iret
cltd
and
mov
popf
das
mov
and
stos
cmp
sahf
insb
pop
add
adcb
mov
jne
cmp
in
mov
and
out
daa
jmp
mov
movl
into
jle
loope
movsl
filds
subl
jp
outsb
or
mov
lahf
jg
add
xchg
jg
jmp
std
jge
in
xchg
lods
dec
adc
add
xlat
imul
push
xor
mov
cmp
insl
mov
xor
pop
dec
inc
daa
sbb
mov
sbb
mov
or
mov
loopne
push
adc
aam
fstpt
jge
push
pop
push
repnz
sbb
mov
insl
ret
and
cmp
dec
in
dec
cltd
ds
shr
adc
sarl
scas
out
jle
lret
repnz
cmp
mov
mov
decb
and
jnp
add
or
ds
test
inc
push
pop
mov
lret
add
mov
in
shl
stos
xor
push
ds
ss
mov
fdivrs
mov
insb
test
xchg
fs
and
pop
dec
int
scas
test
into
push
inc
jo
shr
and
outsb
loopne
into
loopne
repnz
sub
iret
shl
xor
add
xor
std
cmp
dec
cmpsb
or
add
sub
mov
dec
fstl
add
bound
cmp
inc
push
sub
pop
pop
inc
fistl
mov
ret
lcall
pusha
cmpsb
pop
jle
sbb
xchg
lods
subb
or
adc
sub
mov
addl
frstor
in
repnz
adc
mov
xor
jo
popf
andl
outsb
xor
push
jmp
sub
das
xor
rclb
lret
fldt
popf
movsl
jmpw
mov
inc
in
mov
jne
cld
xchg
aas
sub
in
sti
push
lods
jbe
adc
pop
lods
mov
fstl
loope
dec
scas
dec
cmpsl
mov
lcall
pop
movsb
fdivp
lods
icebp
sub
js
jbe
cmp
fcmovnu
ss
pop
sub
negl
daa
jmp
mov
cmp
add
push
pop
xor
cmp
ficoml
xor
cmp
mov
add
add
add
inc
sbbl
xor
cs
out
cmp
dec
sbb
or
cld
sub
test
pop
stos
lea
dec
int3
popa
outsl
data16
pop
push
adc
push
push
push
aas
ficoms
loope
cmp
mov
outsb
popa
and
dec
subb
pop
int3
sbb
xchg
or
adc
cmp
cmp
int
dec
imul
dec
daa
cmpsl
push
stc
mov
sbb
je
mov
xor
movsl
dec
les
aas
and
push
xchg
in
mov
mov
mov
mov
cltd
int
dec
inc
push
in
mov
rcl
fisubrs
mov
daa
pop
pop
test
fucom
pop
and
inc
out
pop
pop
repnz
ret
cmp
sub
clc
dec
sub
push
jbe
int
sub
popf
xor
mov
iret
iret
daa
decl
loopne
add
es
les
mov
push
push
adc
mov
add
cmc
imul
mov
int
add
adc
dec
enter
sbb
xor
sahf
cmp
adc
loop
cmp
aam
in
in
pop
add
fists
or
lret
pushf
dec
fs
in
mov
cli
mov
movsl
fldcw
lods
push
dec
pop
pop
jne
ret
jbe
push
sub
jne
lock
xor
and
fistps
aad
push
cwtl
dec
pop
ljmp
test
fwait
scas
inc
sbb
push
scas
ret
int3
test
sbbl
iret
inc
loope
sarb
movsb
sub
push
les
mov
into
and
push
mov
jnp
rcl
nop
lods
adc
stc
inc
bound
aad
test
aam
mov
pop
sbb
repnz
je
ret
and
fsubl
mov
ja
popa
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
cs
ljmp
add
ror
jae
sub
or
popa
xchg
push
mov
push
aas
fcomi
dec
leave
andb
mov
in
cmp
in
stos
je
jb
or
das
test
pop
andl
inc
mov
xchg
xchg
je,pt
inc
push
scas
or
add
adc
shl
mov
mov
and
in
mov
adc
in
test
shr
enter
enter
and
or
sbb
ljmp
inc
in
lret
sti
adc
jae
fisubrs
pop
jge
xchg
bound
mov
inc
clc
inc
inc
add
mov
lahf
insl
add
xor
adc
sti
lahf
roll
lahf
dec
aam
add
lock
pop
xchg
fs
outsb
xlat
mov
mov
mov
jns
sub
pop
mov
add
push
pop
int3
xchg
aas
push
out
mov
or
lahf
fnstsw
add
add
push
mov
lcall
ret
adc
testb
add
outsl
fdivl
xor
insb
inc
sbb
pop
push
stos
push
sbb
mov
or
movsl
andl
mov
sub
xchg
insl
cmpb
inc
push
jb
outsl
mov
gs
push
mov
add
es
xor
arpl
insb
add
xchg
imul
dec
lock
lcall
movsb
push
scas
dec
xor
je
nop
outsb
jno
add
pop
xor
test
sbb
popa
inc
daa
lahf
mov
adc
inc
push
cld
int
pop
mov
in
xor
testb
cs
xlat
push
fildll
dec
loopne
push
inc
push
xchg
lods
mov
je
or
out
frstor
sub
sub
pop
ds
push
stos
push
mov
pop
sbb
mull
jb
mov
jnp
adcl
add
xorl
insb
scas
pop
test
add
testb
add
xlat
sbbl
ss
data16
std
cld
xor
popa
cld
lahf
add
aaa
ss
leave
inc
mov
mov
insb
imul
out
fcomip
iret
and
gs
pop
add
rorb
insb
sbb
inc
inc
aas
xor
mov
movsl
ret
xor
mov
icebp
cld
sub
pop
mov
testb
movsb
mov
ret
ficomps
xchg
dec
hlt
pop
subb
push
lcall
test
lcall
iret
ss
cmc
push
push
ja
iret
ret
xor
xor
fimuls
movsb
or
push
inc
inc
adc
mov
adc
cmp
push
sbb
dec
xchg
or
mov
adc
popa
shll
pop
mov
xchg
fiadds
mov
rcll
scas
jmp
mov
dec
or
add
pop
sbbl
fstpl
paddsb
mov
add
or
popf
jecxz
std
jmp
outsb
push
mov
jecxz
out
cmp
mov
sbb
clc
popf
jecxz
xchg
dec
add
add
shr
ficoms
mov
arpl
push
aaa
les
inc
mov
leave
mov
and
pop
dec
movsl
scas
imul
xor
std
adc
mov
jl
push
popa
adc
or
pop
popa
fnop
mov
sbb
fs
or
sbb
ret
rorl
adc
mov
mov
push
or
add
jbe
push
dec
mov
cmp
shl
push
aam
mov
gs
push
xor
negb
fsubl
mov
pusha
fnsave
mov
fidivrl
rcll
pusha
xchg
jle
mull
add
stc
xchg
rcr
shrl
cmc
nop
push
add
loope
mov
jecxz
out
sub
outsl
xchg
mov
add
test
sbb
add
jb
ss
push
scas
jg
adcb
ret
sarl
in
shll
add
mov
cmpsb
cmp
dec
out
dec
mov
hlt
call
jecxz
lret
hlt
xchg
xlat
std
mov
mov
xchg
jns
lret
adc
inc
dec
lea
aad
sbb
loope
enter
fldt
pusha
scas
cmpb
sbb
adc
sub
test
into
rcrl
inc
in
push
gs
cmpsl
fildl
test
xchg
icebp
lahf
xchg
sti
ss
lcall
les
sbb
imul
nop
jb
xchg
ss
push
push
out
movb
out
jp
sub
mov
mov
popf
loop
adc
out
mov
jnp
mov
fcomps
inc
jo
pushf
add
pop
scas
aam
aaa
xor
or
aam
jb
test
mov
shl
and
add
push
xchg
test
jg
jbe
movsb
mov
idivb
add
add
arpl
add
xchg
adc
lcall
outsb
mov
mov
test
std
sahf
jns
mov
xor
cwtl
arpl
or
lea
ret
sbb
cs
push
cmpsl
movsb
std
push
stc
mov
inc
sub
lahf
adc
popf
xchg
pop
mov
pop
loop
cmp
jecxz
push
test
mov
hlt
inc
dec
arpl
sbb
mov
dec
fs
mov
cld
lea
imul
push
push
sub
xlat
rol
dec
aad
ss
in
push
mov
adc
in
adc
ja
iret
dec
cmp
add
rcr
or
test
test
fcmove
insb
jne
fcomps
mov
jle
mov
repz
dec
icebp
movsl
std
aam
ds
dec
mov
pop
add
inc
icebp
scas
filds
sub
hlt
lcall
mov
add
adc
in
lcall
xor
outsl
pop
stc
scas
mov
add
sub
ret
repz
inc
cmc
imul
jle
icebp
push
lea
inc
or
call
movsb
scas
shl
frndint
pop
mov
adc
lea
xchg
cmp
add
push
out
hlt
shl
das
push
fcomps
or
lods
jns
mov
push
les
rcll
fimull
out
mov
mov
add
fcoml
push
cmpsb
xchg
cmc
sbb
cmp
jno
mov
cmp
cs
mov
lods
mov
push
fsub
xchg
fwait
std
daa
into
movb
repnz
les
push
adc
in
lahf
shlb
fistpl
mov
repnz
aam
xchg
xlat
pop
repz
mov
clc
loopne
test
xchg
add
ds
aas
cmc
and
push
leave
ret
jae
data16
es
jmp
add
add
sub
jg,pt
stos
dec
push
jo
pop
fnsave
add
testb
add
inc
fstps
sarb
fs
xor
xchg
pop
out
test
xchg
into
test
out
ds
sbb
cwtl
cmp
jae
and
ja
jg
roll
xchg
add
repnz
popf
mov
dec
pop
aas
inc
xorl
xchg
jne
orb
pop
test
mov
outsb
mov
icebp
sub
leave
xor
cmp
ret
cmp
aaa
imul
xor
xchg
lret
cmp
inc
pop
aas
repnz
push
xchg
idivb
adc
dec
leave
jp
fildll
push
or
or
ret
ret
orl
leave
lock
or
jne
fisttps
mov
inc
pop
and
or
adc
or
outsb
or
loop
dec
mov
adc
mov
add
insl
sbb
outsl
mov
insl
or
nop
lcall
add
and
mov
xlat
add
mov
or
inc
push
adc
fwait
inc
mov
popl
add
subb
ljmp
sub
test
mov
imul
cmp
jecxz
jnp
inc
popf
pop
push
dec
fucomip
mov
sbb
push
or
pop
mov
pop
jle
fwait
aaa
into
lret
xchg
push
sub
jg
insb
int
ds
xlat
push
scas
jp
xchg
lea
push
xor
addb
fs
dec
es
pop
mov
mov
or
les
sub
ret
push
pop
sbb
test
mov
fistpll
dec
xchg
sarb
bound
pop
lods
inc
jp
xor
ljmp
jbe
sub
and
pushf
sahf
out
cmp
xor
jle
shrl
xchg
cltd
std
sub
add
inc
fbld
mov
cltd
sbb
aaa
nop
ret
testb
add
pop
fs
sbbb
mov
xor
xorl
int
mov
mov
into
mov
mov
sub
xchg
push
lds
sbb
ucomiss
cmp
mov
pop
pop
ret
fwait
push
inc
call
xchg
add
mov
clc
pop
vmovlps
push
pop
pop
std
cmc
dec
insl
push
data16
jge
fwait
add
pop
int3
movsb
xchg
mov
iret
fwait
jno
sarl
inc
es
aam
mov
jo
mov
adc
cltd
xor
mov
jnp
xor
and
pushf
inc
xchg
pop
je
dec
aaa
push
jmp
mov
inc
push
dec
adc
aam
mov
mov
adc
jae
leave
xchg
sarb
dec
fisubs
push
pop
adc
and
mov
cmp
fisttpl
ja
mov
idivb
stc
jmp
or
add
fistpll
call
mov
ret
add
testb
add
mov
xchg
bswap
and
sbbb
pop
xor
sbb
cmp
jg
icebp
aas
and
fidivrl
xchg
inc
mov
or
lahf
inc
aad
xor
fisubrs
sar
stc
cmpl
and
inc
cld
pop
rcrl
cmp
push
pop
movsb
push
adc
pop
mov
inc
mov
push
mov
sbb
lods
leave
fs
cmpsl
sarl
pop
insb
mov
mov
add
pop
repz
xor
mov
xor
adc
push
dec
mov
mov
xchg
mov
sbb
imul
scas
jl
mov
cmp
xor
mov
sbb
push
adc
jmp
test
in
sarb
int3
inc
cmp
in
es
pop
testl
add
into
std
sti
leave
sti
iret
ljmp
mov
and
testb
add
xchg
dec
pop
jp
sub
mov
das
dec
xchg
inc
ret
into
sub
lods
fs
shlb
dec
mov
das
inc
out
jae
call
mov
xor
push
mov
xchg
add
jno
pop
xchg
sub
mov
jp
insl
and
xor
sub
mov
or
jae
mov
mull
mov
movsl
aad
sbb
jae
ss
out
sub
fidivrs
mov
or
icebp
lods
xchg
mov
iret
into
fcmovb
and
les
and
xor
or
sbb
in
negl
clc
add
jo
cs
mov
insl
or
movl
xor
jmp
push
sbb
jmp
es
push
aad
mov
jb
subl
sub
xchg
adc
rep
push
sbb
push
stos
add
mov
mov
es
mov
lds
add
add
add
sub
in
or
mov
mov
jae
daa
and
ficompl
pop
add
insb
push
jbe
arpl
or
sbb
sbb
addr16
test
xchg
and
arpl
xchg
inc
push
and
dec
out
mov
xor
cmp
sub
mov
pop
mov
xchg
cmp
cmp
popl
adcb
jmp
pop
adc
mov
jmp
cs
sub
lock
scas
clc
jge
out
push
test
pushf
imul
shll
add
cwtl
mov
add
mov
loop
fistps
mov
in
push
xorb
add
lret
dec
mov
adc
jge
je
test
mov
stc
mov
add
loop
push
pusha
jno
inc
mov
dec
or
add
fwait
mov
or
jg
mov
sub
comiss
int3
xchg
add
testb
add
xchg
mov
cmpsb
out
push
call
jp
icebp
stc
fs
mov
leave
sub
or
pop
pop
shll
out
jbe
pop
stc
pushf
pop
fmull
fisubs
cmp
xchg
sbb
mov
iret
fdivrp
or
jp
and
into
repnz
inc
mul
lods
xchg
push
inc
inc
bound
mov
sbb
test
out
dec
or
cmc
xchg
add
add
mov
out
mov
ss
inc
fwait
rorl
mov
mov
insb
push
pop
lock
sbb
adc
add
call
cmp
pop
and
push
dec
and
mov
push
sub
int
add
mov
sub
insl
jecxz
sub
jecxz
xlat
cltd
jecxz
add
vmptrst
inc
mov
frstor
shlb
mov
add
inc
enter
pushl
out
adc
push
lock
dec
pop
movl
add
jnp
fs
inc
jl
call
dec
int
cmp
rcrl
push
mov
push
fldt
xor
lcall
lods
sbb
adc
inc
add
stos
out
mov
push
pop
pop
push
movsb
pop
xchg
xchg
fbld
ret
adc
and
insl
sahf
mov
xor
mov
mov
cmpsb
inc
push
sbb
enter
in
adc
ret
sar
out
fwait
sbb
shlb
jne
pop
or
sub
jmp
orb
or
push
sahf
pop
daa
pop
cmp
xchg
push
mov
xor
jl
int
add
rcll
mov
in
xlat
mov
sbb
mov
stc
les
lea
cmp
test
xor
testl
sub
repnz
mov
outsb
int
sbbl
add
pushf
shrb
jb
ret
mov
push
enter
add
add
and
mov
xchg
rcrl
mov
scas
or
repnz
cmp
cmpsb
xlat
mov
pop
loope
in
fiadds
loopne
out
xchg
push
popa
daa
outsb
push
pop
pop
sbb
rcr
ljmp
lahf
pop
pop
and
mov
cmp
push
pop
push
gs
clc
dec
daa
cmp
push
mov
mov
sbb
js
mov
lods
js
jge
js
fs
sbb
push
jge
popa
mov
pop
leave
cmp
xlat
mov
push
push
popa
mov
clc
das
loopne
movsl
scas
cmp
sbb
cmp
bound
das
sub
inc
cs
dec
add
jmp
pop
lea
out
jo
mov
push
insl
sbb
add
cmp
daa
mov
jge
imul
jmp
out
loop
out
mov
cmc
clc
add
sub
scas
mov
xchg
push
outsl
adc
sahf
cmp
testb
add
mov
adcb
and
out
insl
xchg
pop
mov
adc
xchg
ds
aaa
cmpsl
sub
jbe
nop
xor
push
in
negb
sbb
jno
icebp
movsl
test
push
mov
fldt
fidivs
lods
mov
inc
popa
sti
xor
pop
andb
int3
fstps
cmp
in
scas
outsb
mov
pop
nop
mov
mov
xchg
xchg
leave
pushf
fwait
adc
push
pop
and
cwtl
lea
and
push
test
lret
mov
adc
ja
push
fidivrs
mov
sbb
int
fs
int3
pop
test
inc
xor
cmp
and
mov
popa
ss
pop
aad
mov
mov
movntps
add
cltd
add
decl
cmpsb
pop
add
xor
add
add
jne
jne
jg
out
and
lods
int
inc
lret
testb
add
mov
inc
outsl
test
sbb
inc
nop
into
jae
js
mov
xchg
adc
inc
cmc
fildll
xor
lds
push
cmc
out
mov
rcll
addr16
add
xchg
jle
das
and
xlat
in
test
xor
push
out
fldenv
lock
or
roll
sub
dec
stos
loope
mov
dec
in
dec
pop
pop
xor
adc
mov
das
jae
rorb
jecxz
add
dec
or
loope
mov
pop
ret
or
mov
sub
test
js
push
in
js
rolb
shll
sbb
stc
ss
add
in
je
in
mov
stos
inc
mov
clc
imul
jbe
jmp
enter
xchg
test
cli
imul
add
add
dec
pop
mov
cmpsb
fstpl
std
jae
adc
testb
add
test
bound
jbe
or
jns
je
outsb
cltd
pop
ds
in
push
aam
rcrb
xor
stos
arpl
xchg
outsb
out
sbb
push
rcl
lahf
sti
add
roll
jae
jae
addr16
je
aam
and
and
arpl
cltd
add
and
dec
enter
add
mov
addr16
dec
mov
inc
out
push
cmpsb
cmp
inc
imul
and
push
fwait
xchg
xchg
pop
jmp
and
enter
pop
pop
push
loopne
jmp
xlat
dec
imul
push
sbb
test
mov
stc
fldt
jg
push
pop
repz
ja
divl
cmp
adc
sub
clc
adc
and
jle
xchg
imul
sbb
ja
das
xchg
adc
cmp
add
and
outsb
jle
lods
not
mov
add
xchg
daa
mov
int3
add
testb
add
in
dec
int
pop
mov
push
or
mov
push
pushw
jge
lock
data16
mov
push
mov
scas
or
mov
inc
xor
xlat
xlat
shll
fldl
loope
inc
std
push
sbb
mov
ja
sti
mov
stos
sbb
imul
popa
mov
clc
dec
lret
xor
xor
inc
or
adc
cmp
mov
pusha
mov
shrb
dec
cli
lea
jae
sub
sub
adcl
subl
mov
mov
insl
shlb
movsl
cli
jbe
pop
fstps
cmpl
or
adc
dec
nop
sti
jl
lahf
mov
pop
rcl
fs
cmpsb
lods
imul
and
cmpsl
cwtl
ss
and
xchg
mov
cmp
lds
add
mov
xor
sbb
int
add
add
add
jecxz
pop
mov
jno,pt
jne
inc
shl
divb
outsb
aas
pop
scas
jae
mov
push
cmc
rorb
sti
mov
add
arpl
push
gs
rcll
fnstsw
test
mov
mov
jo
mov
fcoml
imul
test
rolb
adc
sbbl
pop
imul
push
icebp
outsl
jmp
lret
lods
pop
and
xchg
mov
ljmp
nop
push
jl
andb
mov
leave
bound
movsl
dec
or
repz
sub
rcrl
mov
fldl
or
mov
dec
outsl
div
negl
fwait
iret
pop
push
push
orl
out
fiadds
out
nop
xchg
pop
test
lds
int3
fldt
xchg
inc
and
add
test
sbb
xlat
ss
inc
movsb
out
xchg
sbb
add
testb
add
pop
lcall
dec
sub
mov
add
or
mov
lcall
mov
movsb
stc
test
push
pop
rcrb
in
xor
or
cmp
fs
inc
push
mov
adc
out
xor
dec
mov
test
stc
loopne
ja
ret
add
add
and
add
filds
pushf
mov
push
mov
add
ljmp
ret
nop
test
or
and
js
nop
sub
xchg
lfs
pop
sarb
mov
jle
sbb
popa
js
popa
cmp
xchg
inc
jne
jae
rcrl
pop
jge
xchg
dec
out
scas
cmpsl
dec
or
enter
pop
ljmp
xor
mov
ret
rcl
std
push
jne
fidivrl
xor
adc
push
xorl
add
ds
sub
cmp
jg
cmp
into
test
testb
add
sub
mov
andnps
cmp
stos
int3
cmpsl
ret
mov
mov
inc
adc
pusha
xchg
push
je
sbb
inc
sub
cmpsl
push
adc
cwtl
or
mov
repnz
jge
mov
jge
push
fcompl
stc
dec
xchg
mov
cmpsb
cld
js
mov
iret
aad
daa
xchg
push
push
insl
adc
jb
mov
cmp
pop
jl
pop
or
pushf
es
out
int3
pop
xchg
mov
mov
jno
ret
jno
stc
inc
mov
sub
adc
imul
mov
xor
mov
movsl
sub
mov
icebp
fmull
mov
les
pusha
rcll
mov
bound
add
xor
fistpll
out
repz
aam
inc
cld
out
add
add
testb
add
fnstenv
lods
xor
mov
rcrb
mov
test
loope
in
rorl
lods
sub
imul
or
add
push
jl
cmp
xor
xchg
nop
sbb
scas
mov
popa
cltd
pop
or
xchg
aad
daa
cld
icebp
push
es
sub
inc
sbb
mov
cmp
pop
into
rorl
fcompl
imul
aaa
mov
or
mov
push
mov
mov
xchg
mov
fiaddl
in
movsl
sub
hlt
add
xchg
into
xor
decb
push
mov
repnz
fwait
mov
pop
jae
lret
cmp
jno
adc
test
nop
and
repnz
rorl
cmc
imul
add
in
pop
xchg
andb
loope
cmp
les
sbb
add
add
mov
jne
adc
pop
cli
rolb
add
add
add
stos
subb
addr16
lock
cmp
mov
pop
pushf
xchg
cwtl
cltd
loopne
push
dec
idivb
mov
sbb
jns
popf
push
cs
stc
or
pop
or
push
mov
push
shll
out
push
push
mov
hlt
sub
loop
and
cmc
lock
push
loopne
jo
nop
cmpsb
test
pop
adc
test
inc
loope
sub
pop
cmp
add
mov
or
scas
or
mov
dec
es
out
test
pop
jmp
cmp
lds
call
dec
pop
les
pop
pushf
out
fidivl
out
aaa
pop
data16
pop
test
scas
and
call
std
and
jno
sti
xor
mov
sbb
mov
test
loope
and
lahf
xchg
xor
cmp
sahf
lret
rclb
ret
stc
enter
in
out
mov
dec
inc
add
lock
add
add
add
jmp
jl
pop
or
lock
mov
inc
cmpsl
stos
jnp
in
sbb
inc
enter
xor
cli
mov
in
call
and
repz
test
pop
push
push
addr16
mov
loopne
jl
icebp
inc
cmpsb
xchg
dec
sbb
jbe
adc
cli
cmp
xchg
push
or
test
insl
jmp
fimuls
mov
test
push
out
sub
cmp
aaa
ret
mov
mov
xchg
dec
push
jno
movsl
lret
inc
or
push
not
sbb
negl
enter
mov
add
mov
in
lods
xlat
aaa
mov
mov
call
pop
clc
add
and
dec
std
and
mov
das
mov
loopne
rorb
xorl
adc
fadds
jnp
mov
loope
cmp
cmpb
test
jle
add
jne
imul
cmc
call
insb
aaa
insb
out
add
testb
add
adc
pop
dec
inc
outsl
arpl
shrb
movsl
into
mulb
xchg
push
pmaddwd
ret
cmp
jecxz
stos
dec
add
out
ja
loopne
test
adc
or
icebp
data16
loope
nop
rclb
mov
popl
push
push
jae
aas
or
mov
mov
out
addr16
mov
inc
mov
call
and
pop
stos
xchg
loop
je
jle
sub
jae
test
cmc
jbe
and
push
hlt
jl
pop
cmc
dec
test
mov
loopne
addr16
mov
stos
mov
xchg
rorb
push
or
pusha
xchg
call
dec
adc
loopne
sbb
out
insl
xor
adc
sub
or
jmp
aam
in
ja
mov
es
add
movsl
mov
iret
xchg
xor
adc
add
add
add
popa
iret
jne
daa
sbb
lret
sbb
jnp
push
into
shrb
out
insb
xlat
shl
mov
int3
xchg
lea
stos
loopne
adc
int
ja
push
les
les
pop
cmp
inc
stos
cmp
push
and
jb
loopne
scas
stos
fisubl
insb
xchg
push
lods
adc
sar
cmp
pop
rclb
fnstenv
adc
xor
mov
lds
xlat
mov
inc
lret
imul
out
adc
or
faddl
iret
dec
mov
fnstcw
iret
xchg
dec
push
shll
xchg
nop
xchg
ror
fisubrl
jl
jbe
sub
lcall
xchg
cmpsl
repnz
cmp
jle
sub
push
in
push
sub
xor
xor
int
pop
cld
out
lock
add
inc
dec
add
mov
out
out
out
into
gs
fsts
jo
jp
aam
add
add
add
or
pop
lcall
movsb
lea
int
fisttpl
rclb
inc
insl
sbb
sbb
fs
mov
pop
xor
or
sarb
in
push
mov
jb
roll
fisubs
outsl
es
pop
test
repnz
mov
mov
dec
mov
lret
sahf
or
pop
fisubl
filds
outsl
stos
add
mov
je
or
loop
js
ljmp
jbe
daa
insb
icebp
rcrl
adc
xchg
iret
scas
xchg
cmp
xchg
dec
lock
adc
sbb
pop
inc
pop
cmp
xchg
xor
xchg
iret
jae
jnp
sub
add
push
sbb
or
lret
faddl
jge
add
xchg
and
je
out
mov
je
imul
testb
add
aam
enter
movsl
out
subb
lods
insl
adc
push
imul
sub
jg
out
mov
scas
jae
test
inc
into
and
and
adc
popa
jnp
and
push
aas
fldcw
popa
fadd
cmp
loope
mov
cld
adc
cld
rcrb
out
jnp
and
dec
ds
push
mov
inc
mov
gs
lcall
inc
dec
jne
add
lret
ret
sub
xlat
adc
cmp
movsl
bound
mov
iret
adc
mov
push
push
sbb
iret
cmpsb
dec
dec
lock
lods
sub
inc
shll
clc
inc
imul
fldt
pop
push
test
loope
mov
in
pop
dec
test
dec
test
push
xor
push
repnz
add
add
dec
daa
dec
das
outsb
imul
enter
stc
inc
mov
add
add
sahf
mov
lods
add
out
inc
mov
adc
idiv
js
jl
or
add
loope
shrl
mov
jmp
mov
fsubrl
into
pop
and
pop
pusha
clc
sbb
clc
fucom
inc
jbe
sbb
inc
fdivl
cwtl
mov
jg
out
ja
mov
adc
dec
or
jge
inc
lods
xor
iret
jno
or
cmp
out
es
bound
in
pop
or
repz
cmpsb
sbb
dec
dec
leave
lds
stos
sarb
mov
cltd
scas
lods
lods
movsl
xor
test
mov
mov
fdivrl
mov
pop
mov
add
mov
mov
xchg
pop
pop
mov
outsl
dec
and
mov
inc
inc
jecxz
or
movsb
push
jb
xchg
int
hlt
xor
add
call
out
lahf
or
fdivs
mov
add
testb
add
cwtl
mov
add
mov
test
and
push
adc
outsl
int
shl
lods
mov
pop
dec
or
jne
lcall
and
shll
mov
fs
mov
mov
loopne
mov
push
or
inc
inc
out
ror
and
ret
shll
or
push
shl
gs
jge
sub
mov
movsb
lods
and
dec
in
ret
inc
cltd
mov
mov
and
pop
and
dec
or
lret
arpl
or
icebp
jg
inc
aam
dec
or
insb
or
jnp
stos
insl
pop
insb
adc
mov
insl
push
pop
lret
jmp
xchg
xor
test
ja
hlt
jne
imul
call
xor
nop
jb
es
push
ljmp
jns
cltd
add
mov
mov
mov
ficoml
push
gs
fadds
add
add
add
sbb
out
jns
xchg
cmp
loopne
and
rcr
sbb
in
mov
sub
aad
pop
mov
loope
jb
popw
cld
xlat
aas
ja
cmc
shll
addl
lahf
lds
add
repz
loope
and
enter
sti
shrb
push
sub
dec
inc
fs
loopne
cmpsb
pop
mov
mov
and
lcall
inc
jnp
into
scas
push
gs
xchg
jg
cli
lret
adc
push
mov
repnz
int3
mov
imul
or
mov
cmp
notl
cld
dec
jb
int
sbb
lods
mov
fists
lds
dec
xlat
std
cmp
shlb
shrb
push
jb
aad
in
out
lds
sahf
popa
scas
dec
pop
or
add
mov
aad
cmp
add
xor
add
sbb
sbb
xchg
in
mov
add
add
fisubrs
cmpsb
push
xchg
sub
js
push
ret
cmp
stos
mov
insb
repnz
cmp
test
sbb
dec
xor
loope
add
hlt
imul
scas
hlt
fldenv
mov
jl
adc
xchg
mov
out
data16
pushf
mov
cs
js
xor
shll
fdivs
les
lods
xchg
gs
ret
push
jge
xor
mov
and
fcompl
jp
mov
cld
popl
cld
mov
jp
fcoml
jnp
push
nop
mov
or
lods
andb
push
sti
sbb
mov
inc
mov
or
cld
lea
fcmovne
lock
lret
in
inc
jle
jno
mov
dec
in
or
xor
add
or
lea
incl
add
ds
sub
rclb
add
add
xchg
movsl
sub
mov
popa
pop
into
cmp
test
dec
add
sbb
cmp
mov
add
sbb
mov
cmp
ja
jne
pusha
frstor
sub
negb
add
ss
push
push
cwtl
jg
pop
inc
imul
or
push
lods
sbb
cmp
lcall
and
shll
gs
fisttps
xchg
push
das
sub
rcrb
out
or
js
mov
mov
cmpsb
push
hlt
push
jb
jbe
movsb
jmp
push
sub
push
rolb
xchg
sti
inc
jnp
loope
in
stc
jne
loop
out
adc
pop
ds
movsl
jnp
push
pop
push
adc
cmp
outsb
sub
mov
hlt
push
mov
out
add
xchg
and
idiv
lahf
insl
mov
daa
popa
stos
mov
add
testb
add
push
jnp
xor
in
adc
dec
jne
lcall
or
push
insl
push
mov
push
lods
cs
je
in
jmp
cmp
mov
add
mov
and
and
hlt
jne
cmp
fwait
cmp
into
sub
test
mov
mov
jp
sbb
fdivr
es
outsb
pop
jecxz
fptan
fwait
sti
mov
frstor
jne
push
ret
mov
sbb
mov
pop
sbb
outsb
fnstsw
hlt
les
jae
add
xor
sub
and
mov
fdivl
js
or
adc
xorb
imul
push
cltd
movsl
test
dec
lods
mov
repnz
aas
push
test
pop
inc
out
jb
add
out
jp
enter
sahf
fsubl
cwtl
aaa
cmp
add
xchg
ja
push
jg
loope
cs
sub
faddl
add
add
add
cmp
outsb
cltd
xchg
inc
bound
fnstcw
fbstp
call
dec
clc
gs
orl
xchg
rolb
scas
xor
push
mov
adc
mov
orb
out
rorb
ss
cmp
in
popf
out
push
and
sub
in
add
pop
or
push
loopne
sbb
mov
inc
sahf
jne
out
mov
jp
and
int3
adc
and
shr
sbb
out
xchg
mov
dec
xor
push
dec
out
dec
repz
ljmp
jl
cs
mov
cmp
in
sarb
sbb
repnz
movb
dec
xor
jnp
cmp
xor
pop
popf
ret
jo
mov
xor
notb
mov
es
cmp
cmp
pop
inc
dec
in
push
ja
add
int
out
out
imul
cltd
xor
cmpb
add
add
add
inc
push
mov
xchg
movsb
movsl
int3
and
loope,pt
and
fldz
dec
jb
mov
inc
xor
jbe
mov
xor
out
jb
leave
lret
out
mov
and
xor
outsb
lods
rcl
pop
push
loopne
inc
mov
test
push
cli
dec
mov
hlt
sub
scas
inc
mov
sub
jb
add
ljmp
sub
loope
int3
inc
sbb
jno
add
dec
add
iret
xchg
repnz
add
mov
mov
and
push
insb
cmp
bnd
push
jno
imul
negb
jb
inc
aam
jl
loopne
hlt
mov
fmul
mov
jecxz
mov
nop
hlt
popf
lea
xchg
xchg
in
or
jge
loope
fs
fdivl
and
sub
add
add
out
fldcw
push
xchg
fsubrs
ret
loopne
fiadds
add
add
add
mov
jne
inc
xlat
jo
xor
sbb
mov
mov
xchg
sbb
fcomip
enter
insb
dec
push
fsubl
xchg
bound
adc
add
and
pop
ss
dec
out
xor
cs
call
dec
sar
pop
hlt
mov
aad
in
pushf
push
loopne
adc
insl
pop
scas
adc
pop
gs
int
fldt
icebp
pop
in
push
inc
cmpsl
adc
xor
movl
loope
andl
mov
rorl
adc
std
ja
idivl
xor
add
cmp
insl
mov
test
lcall
mov
add
cltd
idiv
out
movsl
popf
sub
loope
test
pop
push
push
mov
je
or
repz
pop
mov
mov
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
xchg
leave
filds
add
add
add
aas
pushf
js
repz
or
in
scas
ja
xchg
das
sbb
adc
insl
hlt
dec
add
and
pushf
fs
neg
lret
push
inc
pop
push
xchg
arpl
jae
push
outsb
dec
lcall
push
dec
or
pushf
sbb
sub
cmc
pushf
cld
rolb
dec
daa
cmp
inc
inc
out
rolb
or
jmp
add
jne
or
scas
in
mov
xchg
mov
inc
out
xor
cli
movsl
cltd
add
or
pop
xchg
lea
mov
adc
inc
loopne
sub
push
ja
lods
push
and
mov
loop
outsl
mov
lcall
or
cmp
sbb
inc
add
xchg
nop
pop
call
cmp
call
and
fbstp
sbb
sbb
mov
mov
add
pop
dec
jle
jg
std
fldt
cmp
sbb
and
add
testb
add
or
shlb
js
cmp
xor
stos
dec
xor
std
pop
je
in
lret
push
fiaddl
inc
push
cmpsb
fsubrs
and
fs
fisubrl
fs
jmp
cmpsl
lret
mov
stc
lods
nop
add
pop
and
pushf
outsb
jecxz
xor
leave
push
mov
rcl
fwait
or
push
bound
stos
repnz
sbb
or
sti
and
ss
jge
and
cmpsb
xor
cltd
ss
stos
mov
add
into
sub
repz
ss
das
mov
pop
xchg
mov
out
xchg
inc
mov
or
decb
mov
lock
out
mov
or
shll
add
pop
sbb
cmpsl
mov
inc
lock
shll
mov
imul
addb
into
mov
inc
jnp
add
mov
sti
idiv
lods
jne
adc
daa
dec
idiv
push
loope
add
add
add
in
movsb
ja
jl
adc
sbb
adc
cmc
ss
xor
mov
cmpsl
arpl
sahf
mov
sbb
jle
arpl
lret
test
pop
repnz
xchg
faddl
fistpl
popa
xor
fstps
je
loop
mov
out
sahf
mov
adc
mov
mov
ret
or
popa
jo
jnp
fsubl
xchg
data16
pop
lret
mov
xchg
daa
in
cld
add
fildll
dec
movsl
popl
xor
loopne
not
insb
pop
cmpl
ds
lcall
test
decb
cmp
andl
cld
stos
jne
mov
notl
sbb
jle
adc
lahf
cmp
adc
mov
mov
je
cmp
mov
xchg
and
mov
ret
and
xchg
fcomi
xchg
fcompl
mov
jbe
sub
add
adc
leave
jmp
mov
lret
sub
testb
add
dec
mov
ja
mov
xchg
add
or
pusha
in
xor
cmp
fdiv
scas
inc
int3
xchg
cmp
xor
pop
lea
ficoms
mov
fsubs
les
rol
pop
iret
lret
rorb
insb
subl
sub
mov
imul
loope
stos
andl
and
idiv
jo
mov
cmp
stc
or
or
cmp
add
ds
inc
loopne
xor
pop
sbb
xor
sbb
and
iret
or
lods
jae
enter
ljmp
clc
gs
dec
cld
pop
sbbl
popl
dec
jp
mov
add
sub
ret
and
push
mov
in
out
int3
hlt
push
mov
push
and
imul
jp
and
add
cmpsl
fimull
jp
dec
popa
in
sub
jecxz
add
add
add
xchg
test
add
mov
xor
fsubrs
sub
push
stos
dec
mov
movsb
leave
cltd
cmp
ja
pusha
or
cld
sbb
lret
mov
stos
out
std
movsl
jb
imull
insb
fistpl
xchg
test
pushf
adc
stc
dec
mov
pop
jns
pushf
add
sbb
jl
push
sbb
mov
dec
and
dec
jl
jns
sub
pop
inc
jb
ljmp
jl
out
cli
das
repnz
out
in
addr16
aad
sar
dec
and
popf
add
and
add
inc
jo
cs
sti
mov
push
sub
pop
jmp
dec
jg
les
jns
repz
shl
ss
stos
mov
stc
cmc
sahf
in
cli
rolb
js
pop
xrelease
scas
cs
pop
push
xchg
in
mov
insl
mov
mov
add
mov
lcall
mov
or
testb
add
pop
imul
jg
imul
mov
push
mov
mov
cmp
movl
and
inc
sbb
insl
sub
push
fcomps
xchg
lret
mov
inc
cmp
sbb
push
lods
adc
aas
rcll
ficomps
rcll
fs
divb
cmp
fbld
jnp
cwtl
mov
push
push
add
and
mov
std
pop
cmpsb
adc
jbe
push
aam
jle
xchg
xchg
ja
arpl
jmp
sub
jno
aaa
data16
cmc
inc
pop
add
inc
adc
xor
testb
mov
add
dec
outsl
cmpsb
fwait
add
mov
sub
imul
addr16
mov
out
aam
xlat
ret
and
or
aas
push
mov
lea
loopne
pop
jge
sub
out
mov
add
add
mov
jns
daa
data16
sub
add
testb
add
or
pop
stos
test
out
dec
pop
cmp
das
pop
sbb
add
shl
dec
test
lock
les
pop
pop
orl
shrb
rorl
adc
or
pop
pop
lods
cltd
sub
mov
ret
int
in
pusha
test
sbb
push
push
mov
in
and
xchg
shll
mov
or
push
ds
stos
movsb
shl
add
loope
dec
adc
repnz
pop
inc
call
js
pop
fstps
jmp
movsl
cltd
imul
cmp
outsl
scas
popf
int
sub
xor
iret
cmp
loope
sbb
aad
jl
pop
mov
in
mov
sbb
xchg
js
pop
out
cmp
mov
stos
fadds
fwait
sbbb
mov
add
add
fadd
fsubp
jnp
push
xor
mov
out
add
add
add
clc
scas
outsb
lock
popf
dec
enter
test
fdiv
inc
jp
aas
std
ret
rcrb
mov
mov
dec
pop
test
push
test
fwait
inc
lahf
dec
pop
jns
icebp
pop
out
add
aaa
stos
mov
out
or
in
sub
jge
fcoml
sub
adc
sub
mov
fsubr
add
rcll
sbb
mov
lds
inc
nop
das
or
aad
mov
push
inc
jne
xor
and
rolb
int3
cmpsl
shll
xchg
xlat
pushf
repz
sbb
sbb
cltd
jmp
fists
arpl
push
push
mov
dec
adc
pop
jns
fs
mov
sbb
aad
jns
sbb
lods
sbb
pop
scas
sarb
test
mov
jo
adc
push
cld
pop
out
addr16
cmp
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
aad
dec
imul
add
test
inc
pop
mov
or
repz
mov
test
cmp
mov
add
add
mov
lods
lods
cmp
rcrl
xchg
out
aas
mov
aas
mov
ret
iret
bound
mov
dec
xchg
repz
dec
xor
mull
fwait
or
xchg
lds
dec
cmc
in
jo
lcall
sti
dec
or
sub
mov
xchg
pushf
inc
and
lcall
ds
xor
mov
and
inc
cltd
push
mov
ds
movsb
std
into
data16
data16
insl
andb
and
mov
cltd
and
and
sbb
jecxz
pop
test
adc
or
mov
movups
adc
add
lea
pop
jbe
ja
sti
dec
push
sbb
loopne
call
add
jl
in
addr16
negb
pop
xchg
std
pop
jo
xchg
push
adc
adc
mov
mov
lds
push
push
cmp
xchg
mov
rorb
fsts
out
aad
lcall
loopne
or
or
popa
js
add
testb
add
sbb
call
jns
sub
cmpsl
aam
rcll
jnp
xchg
jne
mov
ficoml
or
cld
xor
or
dec
cmp
or
dec
mov
add
jp
outsb
sarl
mov
mov
push
lods
or
push
out
cmpsl
add
cmpsb
scas
loope
int
push
xchg
call
lds
pop
cltd
mov
pop
icebp
push
xor
lcall
movsl
test
cmpsl
fs
adc
out
aam
inc
push
test
ss
cli
addr16
mov
add
ror
cltd
outsl
mov
cmc
or
jmp
add
es
int3
mov
push
sub
js
and
mov
pop
mov
leave
shll
xchg
mov
xchg
addb
pop
or
fnstsw
push
cmp
cmp
lcall
push
inc
pop
imul
lock
inc
cmp
stos
iret
pop
xor
cltd
and
addr16
sbb
lds
jmp
cld
dec
jp
add
nop
xchg
cmpsb
sub
aad
sarl
lahf
dec
loop
add
jns
mov
aad
or
or
mulb
cmpsl
mov
sarl
aad
loope
ret
arpl
insb
int3
inc
mov
xor
add
loopne
pop
orps
cmp
jo
dec
sti
dec
std
enter
fldt
mov
adc
test
add
ja
decl
jecxz
mov
imul
add
testb
add
xchg
push
push
pushf
inc
into
mov
stos
dec
decb
popf
ja
imul
adc
xor
mov
pop
js
pop
xchg
sub
ret
and
ds
dec
push
push
sahf
dec
dec
scas
jb
iret
ret
call
dec
jg
int3
jl
mov
cmc
xor
aaa
test
mov
jl
enter
adc
es
sub
and
xor
shrl
pop
and
xchg
pop
mov
xchg
clc
leave
and
xor
into
repnz
or
dec
das
jae
mov
jo
adc
xchg
sbb
mov
in
adc
push
ret
sub
add
push
add
cmpb
popa
jp
dec
stc
out
fmulp
fiaddl
ficoml
lahf
add
cmp
dec
aaa
lods
stc
aam
cli
xchg
add
repz
lock
jg
mov
nop
in
push
insl
in
ljmp
ret
fs
movsl
inc
push
mov
inc
xchg
mov
mov
cmp
mov
es
pop
hlt
adc
movsb
pop
mov
jmp
pop
shlb
add
lret
jmp
and
and
mov
rcl
sbb
out
fs
sbb
call
push
pusha
cmp
push
mov
xor
inc
mov
fnstenv
imul
test
jno
inc
dec
and
jge
lock
testb
stos
jbe
inc
jbe
adc
mov
popf
and
je
cmpsb
xchg
fldenv
inc
push
jecxz
jg
cld
jecxz
xor
and
sar
test
negb
push
repz
push
cmp
mov
adc
rorb
js
mov
cwtl
cld
mov
push
cmp
jno
dec
test
stc
dec
push
testb
dec
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
inc
pop
icebp
loop
add
testb
add
cltd
pop
dec
cmpsb
insl
push
push
ret
jbe
and
aaa
das
insl
das
arpl
ret
mov
shlb
cmp
push
push
test
dec
adc
sbb
in
test
cmp
sub
xchg
mov
or
mov
pop
aas
les
sbbb
jb
sbb
bound
mov
stos
imul
and
loopne
loop
aaa
add
dec
mov
mov
test
sub
cmp
rcr
cli
das
icebp
mov
dec
outsl
xchg
mov
pop
out
mov
add
or
pop
sub
imul
subl
popa
xchg
sub
xchg
mov
inc
jb
mov
jg
dec
dec
pop
ret
mov
aad
or
loopne
fstl
pop
imul
pop
imul
add
mov
dec
js
stc
mov
push
nop
aad
pop
push
jno
in
add
testb
add
jle
mov
andl
mov
or
inc
jg
mov
pop
pop
dec
fldcw
fisttps
outsb
ljmp
push
pop
int
cli
mov
movsl
int
jp
movsl
mov
mov
fcoml
dec
psraw
mov
lock
aas
cld
mov
jge
jmp
pop
dec
mov
adc
mov
ja
ss
repz
push
jmp
outsl
dec
lds
pop
mov
iret
pop
test
xor
pop
mov
jl
in
add
xchg
xor
pop
cmc
xrelease
push
mov
aam
mov
aad
outsb
mov
or
in
leave
dec
mov
mov
sbb
lds
add
push
push
outsl
sbb
ss
loop
xor
cmp
pop
sbb
andb
jg
adc
add
mov
pop
insb
fildll
decb
add
inc
mov
hlt
into
in
add
testb
add
movsl
push
mov
or
sub
fists
shll
mov
cmc
pop
sub
addr16
sti
push
data16
cmpsl
push
and
lcall
or
sarl
or
cmpsb
decb
ljmp
add
or
imul
fildl
mov
cmp
insb
and
jg
and
add
pop
or
lret
push
cmpsl
loop
scas
test
mov
adc
insl
dec
adc
lods
loopne
push
or
lods
je
inc
cmp
dec
ljmp
pop
sub
mov
lahf
es
xchg
test
stos
iret
fs
std
movsb
nop
test
xchg
scas
xchg
cli
sub
arpl
mov
mov
mov
loopne
xchg
jmp
cmp
rcrb
pop
or
push
cmp
cmp
jnp
sbb
aas
out
add
testb
add
inc
mov
jp
jo
xor
xchg
shrb
inc
mov
mov
dec
popa
pop
mov
cmp
mov
add
fbld
test
mov
fnstcw
or
std
inc
mov
in
movsb
mov
pop
nop
cs
sbb
das
sub
fdivp
testb
idivb
inc
movsl
daa
insl
out
push
inc
jl
sti
mov
sub
mov
mov
push
cmp
or
call
xor
leave
fimuls
gs
mov
mov
xchg
pop
popa
or
imul
add
int3
out
mov
ret
inc
stos
pop
pop
sub
sub
sti
movsb
add
rcll
and
xlat
outsb
fisttpl
cmp
xor
es
mov
inc
pop
inc
ror
ja
xlat
pop
and
cmc
mov
add
out
lods
xor
aas
xlat
jmp
popa
test
mov
add
add
jmp
pop
mov
inc
arpl
lods
add
pop
pop
jge
test
bound
cmpsl
shlb
cmp
pop
std
ss
bound
cmp
adc
xor
push
mov
pslld
cmp
fldt
jle
mov
mov
insb
mov
mov
push
addr16
movsl
jecxz,pn
cmpsb
jns
cs
inc
mov
popa
shrb
stc
sub
int3
adc
inc
out
jo
sub
pop
mov
imul
cmpb
mov
dec
adc
sub
pop
cmp
jbe
xor
mov
xchg
test
inc
adc
in
mov
pushl
loope
pop
daa
scas
adc
andl
push
test
sbb
mov
add
add
add
jb
scas
cmp
int3
repnz
aam
or
add
add
popa
cltd
int3
and
clc
xor
mov
jo
xchg
inc
lcall
mov
cmpsb
dec
xchg
test
push
repnz
cmp
xchg
pop
add
and
push
call
and
pop
cld
fsubr
mov
push
test
data16
iret
xor
pop
data16
popa
xor
add
sub
inc
mov
or
or
and
jl
adc
loope
mov
inc
jno
std
insl
sahf
sbbl
js
inc
pop
scas
mov
dec
movsl
sub
in
jp
xchg
sti
jns
stos
cmp
jp
xor
jle
pmaddwd
js
in
jle
adc
sub
arpl
or
addr16
xor
cmp
push
cmp
push
pop
sub
lock
adc
js
gs
push
mov
lods
loopne
jmp
add
xlat
mov
bound
add
testb
add
cmpsb
pushf
xchg
lods
outsl
xchg
push
push
xor
shlb
ss
mov
or
outsl
sbb
xchg
sbb
jge
mov
jmp
fists
lret
pop
roll
fnstenv
mov
add
mov
fsts
jns
inc
fstl
fidivrl
and
gs
add
adc
mov
sub
nop
mov
pushf
test
xlat
testb
jns
fs
loopne
jle
inc
push
adc
fisttpll
adc
mov
fisubl
scas
dec
sahf
add
shll
add
inc
scas
insb
pusha
dec
ds
in
jae
inc
adc
orl
dec
loopne
leave
push
or
push
xchg
inc
fdivs
push
icebp
fstl
imul
out
pop
push
imul
xor
jns
bound
add
xchg
jp
loope
pop
fcomps
push
add
lods
cmp
lods
aas
jp
int3
icebp
testl
add
add
add
imul
loopne
or
push
fsubp
sbb
sub
jl
mov
repz
loope
inc
loop
fdivs
push
test
jne
add
xor
push
sub
xchg
out
push
cmpsb
loop
fnstenv
push
adc
dec
sbb
cmp
mov
aas
mov
notb
out
ljmp
sahf
insl
fnstcw
loop
xor
div
shr
push
and
mov
pop
repnz
sub
push
push
hlt
push
push
or
loop
filds
movsl
jle
dec
out
and
adc
rorb
dec
ss
cmp
xchg
insb
lcall
outsb
jns
lcall
movsl
mov
and
loopne
fcmovnbe
dec
xor
add
cmp
xor
cmp
nop
aas
je
push
add
loop
fadd
sti
mov
sub
add
testb
add
out
push
sbb
inc
cmpsl
inc
dec
adc
out
add
xchg
cltd
xchg
inc
mov
fcoms
lods
decb
sti
dec
pop
shlb
adc
bound
mov
std
mov
out
add
fsts
push
xor
pop
dec
into
fs
inc
rorb
jno
sub
outsl
sub
cmp
cmpsl
xor
push
daa
add
and
push
push
fs
dec
cmp
popf
sbb
les
jg
inc
adc
inc
xchg
push
pushf
dec
pop
push
pop
mov
in
xchg
mov
xchg
cmc
test
fs
gs
in
xchg
pop
pop
mov
or
aam
idivl
movsl
sti
jle
mov
jno
inc
pop
scas
push
ja
mov
repnz
xchg
jb
js
out
fadds
sbbl
add
into
adc
neg
jge
push
xchg
dec
mov
add
add
add
jne
iret
mov
mulb
scas
inc
mov
ds
lds
jb
aas
rcll
repz
mov
push
pop
inc
and
das
inc
addr16
adcb
aas
pop
outsb
ss
sub
test
mov
jne
inc
or
insb
pop
add
popa
adc
les
adcl
xor
mov
movsb
cmc
movb
loop
mov
fwait
push
sub
push
jmp
test
xor
sub
mov
out
xchg
add
push
fwait
mov
popf
repnz
jmp
lds
mov
or
mov
mov
cmpsb
push
jg
int3
push
gs
xor
movsb
adc
sahf
push
fldl
mov
scas
cmp
std
mov
sub
mov
daa
addb
pop
cmp
outsl
jg
jg
mov
xor
cmc
add
testb
add
sbb
repnz
mov
jge
add
mov
mov
dec
push
adc
add
xor
aaa
jo
cmpsl
cmc
or
jp,pn
sti
mov
lcall
xchg
xchg
repnz
iret
or
pop
es
cmp
jl
mov
mov
loop
inc
popf
stos
lret
cmp
xor
inc
lds
les
fs
mov
sub
sub
fstpl
add
sbb
cmp
das
pop
pop
lahf
and
stos
mov
fcoml
inc
xor
ja
add
fistl
push
cltd
xchg
pop
mov
add
je
iret
lods
jb
stos
pushf
jl
scas
imul
test
scas
push
mov
int
inc
and
jbe
push
rcrb
dec
or
cmp
out
jg
gs
and
push
xchg
shr
push
push
mulb
add
ja
and
aaa
negl
mov
loopne
testb
testb
add
cmpsl
jno
adc
dec
das
lods
arpl
dec
lods
bound
movsl
repz
adc
and
xor
stos
jno
decb
fwait
mov
sarb
je
std
jb
addb
sub
add
xor
int
std
enter
ficoml
mov
repnz
das
stos
icebp
nop
mov
and
mov
ljmp
mov
addr16
dec
jge
cmp
mov
shl
add
inc
scas
sbb
es
cmpsl
xchg
lods
jo
movsb
outsl
jbe
ds
dec
lods
or
push
cwtl
mov
xchg
test
push
fiadds
mov
sub
push
mov
hlt
lcall
cli
outsb
js,pn
shlb
scas
repz
enter
fdivrl
xorb
inc
je
push
jnp
aas
std
lea
xchg
loop
dec
add
in
xchg
jecxz
jmp
mov
cmpsb
xchg
jp
testl
add
sbb
pop
jno
hlt
stc
data16
leave
mov
xor
outsl
cmpsl
cmp
inc
push
pop
insl
cli
lret
xchg
cmc
jbe
mov
xchg
lods
mov
clc
les
ss
lods
stos
jecxz
pop
ficoms
sub
imul
aam
jno
mov
out
mov
icebp
stos
xchg
jg
repz
adc
add
xor
or
out
aam
jmp
cmc
jecxz
aaa
pop
mov
insl
xchg
aaa
mov
popf
or
inc
jno
xchg
movsb
xchg
pop
pop
addb
sbb
adc
in
faddl
mov
or
or
and
ret
loope
aaa
xlat
lret
ret
mov
rcrb
pop
lcall
xlat
aaa
xchg
dec
shrb
jmp
sub
mov
push
add
or
adc
gs
sbb
add
jle
jne
cmp
pop
sbb
xchg
add
testb
add
xchg
nop
mov
ds
jge
das
das
mov
lods
cmp
shll
pop
jo
movsl
mov
inc
stos
push
out
jecxz
fnstsw
les
cli
lods
mov
pop
orb
push
fbstp
jg
add
int3
mov
dec
lds
push
inc
sahf
sbb
mov
aaa
push
lret
jo
pop
icebp
jecxz
inc
rorl
fstpl
adc
arpl
or
sbb
xchg
out
pop
lds
xor
std
sub
je
int
pop
fwait
pop
jmp
sub
push
pusha
roll
mov
add
in
or
fs
and
adc
jmp
or
jae
lds
sub
and
nop
mov
pcmpeqb
and
jo
dec
or
outsb
or
ret
arpl
sub
scas
fdivr
fnstcw
cmpl
add
testb
add
xchg
repz
rcl
ja
das
dec
icebp
out
mov
outsb
loope
js
push
test
xchg
sbb
and
setge
enter
push
outsl
lods
pop
mov
sbb
xor
inc
test
xchg
cmp
or
and
jecxz
dec
or
xchg
mov
jno
mov
aad
xlat
aas
inc
add
sub
jecxz
xor
enter
push
loope
bsf
pop
aam
popf
jp
mov
out
int
test
ds
dec
pushf
ljmp
lret
xor
sahf
add
push
addr16
fstps
das
imul
nop
cmp
cltd
cmp
xor
mov
adc
outsb
cmp
movsl
inc
or
inc
adc
out
add
cmp
ficomps
adc
dec
push
or
jl
cwtl
pop
mov
pop
mov
jmp
sti
pop
lahf
out
jae
add
ret
add
xor
xchg
fwait
bound
push
fmull
add
add
add
fstl
xor
rorl
mov
sbb
inc
idivl
ljmp
out
rclb
or
mov
leave
nop
lock
dec
mov
addb
sarb
sub
int3
movsb
out
popa
xchg
jmp
scas
dec
gs
cmp
ljmp
inc
stos
and
push
sbb
jb
add
jle
aaa
or
lret
lea
arpl
cltd
aam
or
fs
push
js
or
hlt
orb
imulb
push
cs
popf
push
ret
call
inc
jbe
ret
cmp
lods
into
lods
pop
rolb
mov
fcmovbe
or
mov
popl
shll
popf
and
clc
dec
repz
cmp
xorl
popa
mov
lcall
mov
inc
dec
imul
stos
lret
nop
arpl
add
add
ds
in
idivl
pushl
enter
sti
add
testb
add
and
dec
adc
push
in
add
scas
out
fidivl
jle
imul
and
pop
inc
mov
dec
mov
je
bound
dec
inc
mov
js
out
lea
andl
sub
decb
add
push
xchg
pop
xor
xchg
push
and
aam
sub
jne
les
mov
or
stos
imul
call
mov
and
mov
xchg
dec
pop
lret
mov
mov
jp
dec
add
out
jp
mov
xorl
mov
inc
and
in
test
cltd
push
fcmovu
sbb
test
xchg
xlat
add
das
cmp
gs
mov
jl
jno
dec
push
clc
jne
lods
pushf
mov
loope
je
add
jecxz
inc
cli
aas
push
ljmp
cmp
add
testb
add
dec
cltd
cld
imul
or
fsubrs
push
dec
outsl
cmp
adc
mov
or
popa
add
xlat
xchg
inc
add
lret
dec
inc
jecxz
jmp
sti
jle
lods
pop
sub
push
adc
dec
jle
mov
imul
xchg
add
mov
xor
jo
jg
lods
add
cmpsb
add
xor
int3
pop
arpl
mov
xor
divb
mov
xor
push
mov
and
pop
pop
in
movsb
pushaw
mov
mov
aas
adc
inc
mov
sbb
jmp
ret
cltd
and
xchg
jb
loop
incb
or
mov
xor
jno
shl
sbb
cwtl
push
rcrl
outsb
adc
in
and
and
push
or
pop
jmp
add
sbb
xchg
xor
add
cmpsl
add
mov
lcall
cmpl
add
add
add
pslld
push
add
shl
mov
in
int
shll
fidivl
pop
jbe
jns
cmp
es
cmp
xchg
lock
push
mov
or
scas
out
int3
push
push
mov
mov
xchg
push
sbb
jae
sbb
xlat
xchg
add
mov
xchg
adc
mov
daa
and
lods
orl
test
ret
outsl
cmp
in
sub
mov
push
stos
push
push
mov
call
xchg
cli
pop
adc
imul
popa
or
rclb
idiv
xorl
xor
das
xor
sbb
ljmp
popa
jae
adc
mov
hlt
fnstenv
iret
cmpb
pop
out
enter
push
add
jae
cltd
dec
mov
fs
add
testb
add
pop
addb
arpl
out
lahf
cmp
dec
pop
stc
adc
jg
pop
or
jbe
into
jmp
dec
insl
stos
dec
notl
inc
xchg
in
lret
xorl
sbb
mov
icebp
sahf
xlat
or
sub
mov
inc
inc
fisubrl
adc
inc
mov
mov
sub
shl
or
in
push
jae
getsec
cs
mov
sub
mov
add
jns
ljmp
les
xchg
out
push
out
dec
push
mov
inc
mov
mov
mov
mov
clc
jns
adc
jno
sbb
cmp
sbb
xchg
outsl
cmp
lods
sub
dec
cmp
mov
lret
lods
and
shrl
cs
adc
cmp
negb
jo
jnp
rcll
jl
enter
pusha
push
insb
xchg
add
ds
into
nop
out
cwtl
jle
xlat
movsb
add
xchg
sbb
add
testb
add
sbbl
jne
movsb
mov
push
push
es
out
or
daa
mov
arpl
add
inc
les
push
daa
pop
lret
lock
sbb
jnp
dec
adc
adc
sub
jb
decb
negb
cmpsb
xor
or
cld
fisttpl
in
jbe
push
outsb
clc
call
add
std
and
cmpsl
xchg
loope
jae
jecxz
je
outsl
mov
outsb
dec
pop
out
sbb
repnz
outsl
inc
aad
xchg
in
push
cli
xchg
outsl
je
clc
jecxz
psubsw
mov
push
repz
mov
mov
push
test
cmp
or
dec
in
cmp
sbb
mov
mov
idivl
xchg
ljmp
add
inc
dec
aas
mov
adc
xor
clc
add
jno
test
jg
xor
or
dec
adc
add
testb
add
test
push
dec
call
les
push
in
decb
adc
mov
push
comiss
push
mov
lds
stos
xchg
decb
leave
dec
inc
faddl
out
jge
stc
gs
aas
and
add
stc
ja
and
out
jmp
loopne
bound
loopne
pop
test
iret
dec
popf
loope
icebp
jae
mov
imulb
popl
push
adc
dec
enter
movsb
sub
inc
hlt
addr16
mov
mov
dec
push
xchg
xchg
lahf
dec
loopne
int
bound
jbe
repnz
adc
pushf
loop
rclb
out
and
push
notb
aaa
int3
fstpl
pop
pusha
test
stc
loope
lret
insl
out
sbb
push
push
jl
dec
test
mov
lods
adc
dec
lcall
adc
add
adc
movsb
push
in
cmc
jne
pop
adc
jns
jecxz
push
add
add
add
add
mov
xor
lock
imul
scas
pop
notb
cli
mov
cld
insl
imul
jno
arpl
xchg
mov
push
push
rcrl
mov
jbe
jnp
mov
add
xchg
sub
arpl
jb
mov
mov
jp
mov
sbb
mov
push
dec
mov
pop
inc
sahf
jle
insl
pop
addb
mov
pop
or
stos
mov
sub
dec
mov
inc
sub
or
insl
lods
sbb
faddl
in
dec
or
xor
lret
ja
outsb
out
mov
push
mov
push
outsb
cmp
xchg
fildl
xor
pop
push
movl
dec
pop
sarl
orb
ficoml
xor
dec
jle
dec
and
out
pop
inc
xor
xor
ret
jp
popa
icebp
mov
and
add
add
out
shlb
aas
out
fwait
aaa
call
add
add
add
add
mov
in
scas
out
dec
fcomps
cld
mov
mov
xchg
pop
adc
jle
hlt
lret
cmp
ret
jg
sbb
mov
mov
pusha
pop
mov
in
xchg
inc
mov
daa
pop
jnp
out
mov
xor
mov
scas
lods
fdivl
subl
add
es
dec
ljmp
loop
fdivl
adc
xchg
mov
sahf
cmp
repnz
loope
rcl
aaa
mov
jp
inc
cltd
sub
sub
mov
nop
adc
fstpt
or
xchg
jmp
aas
mov
lods
mov
imul
sbb
mov
ljmp
jbe
sbb
ljmp
inc
in
out
enter
dec
int3
adc
add
mov
lcall
outsl
xor
add
add
add
add
fimull
fwait
adc
out
sub
fs
je
mov
mov
outsb
mov
adc
pcmpgtw
inc
mov
xchg
or
xchg
sub
call
test
jbe
aam
shrl
mov
xor
cwtl
clc
shr
adc
sbb
jg
lret
enter
pusha
mov
repz
mov
inc
dec
les
dec
mov
pop
call
cli
dec
xchg
scas
imul
or
aas
or
cmp
add
jl
sbb
push
fisubs
pop
jns
cmpsb
and
push
es
cwtl
out
xlat
data16
push
out
or
push
xchg
xchg
shrb
repnz
outsb
fs
mov
mov
push
icebp
sub
mov
push
fiaddl
sbbl
fldl
ret
add
ret
bnd
rorb
cltd
jl
ljmp
testb
add
or
or
addr16
mov
and
push
jno
pushl
mov
push
dec
pop
shlb
lods
xchg
pop
ja
mov
cmpsl
das
int3
test
xchg
mov
data16
push
push
jg
and
decb
ljmp
loopne
adc
jp
pop
pcmpeqw
imul
popf
mov
add
mov
out
adcb
pop
add
js
sub
cmp
bswap
call
push
push
and
cmove
ret
call
dec
adc
je
push
sub
adc
pop
in
scas
out
icebp
mov
lds
push
ret
xlat
fs
push
adc
xor
enter
shlb
pop
fimull
fst
flds
jmp
jmp
jno
or
xchg
fists
notb
cld
in
cmp
add
std
aaa
mov
lret
jne
add
fiadds
add
add
ljmp
jbe
test
jne
jle
das
lds
arpl
aad
mov
cmp
hlt
data16
rcl
mov
xorb
xor
sti
mov
push
cmp
xchg
sahf
dec
rcpps
addr16
xchg
push
xor
roll
jo
pop
add
movsl
cmpsb
outsl
jecxz
jmp
hlt
pop
stos
fidivrs
jns
mov
stos
jecxz
inc
sub
add
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
xor
imulb
xor
scas
dec
lcall
adc
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
