push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
sbb
mov
ja
mov
xchg
les
rol
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
jge
mov
cmc
or
push
mov
test
loope
fsubl
xchg
sub
dec
cmpl
cmp
pop
dec
and
jp
cmp
pop
or
aam
dec
push
or
imul
cmc
int
adc
popa
lcall
mov
mov
jmp
dec
fisttpl
adc
cmp
rorb
mov
fs
pop
shlb
inc
or
sub
push
stos
add
repnz
mov
sub
in
push
jbe
arpl
sub
lret
fimuls
es
sbb
jle
addr16
mov
ja
clc
sub
insl
lods
dec
adc
lret
mov
rcr
subb
das
cmp
cmp
xchg
push
knotb
mov
lcall
jae
arpl
sbb
addr16
mov
cmp
xlat
ficoml
mov
icebp
loopne
iret
int
mov
aad
adc
sbb
dec
dec
mov
mov
inc
cwtl
out
xor
dec
gs
ss
jle
aaa
mov
cmp
sbbl
dec
lods
divps
xchg
or
push
rolb
pop
cmp
push
xorb
stc
add
in
push
adc
and
sbb
shrl
cwtl
mov
fwait
or
mov
or
lds
mov
jne
sbb
lret
pop
jmp
test
in
xor
pop
fldcw
das
dec
mov
inc
push
lahf
push
aad
xchg
add
push
cmpsl
loope
movsb
add
dec
lret
xor
mov
out
pop
xchg
cwtl
add
dec
xchg
sbb
lcall
jo
icebp
lods
jp
call
fisttpll
inc
sub
test
xor
or
fisubs
roll
enter
adc
or
popa
xor
rcrl
scas
leave
jno
aaa
es
add
dec
and
xor
push
ds
movsl
mov
retw
xor
cmc
xor
imul
test
sub
es
imull
orl
jp
inc
inc
js
pop
je
cs
add
loope
xor
pop
lock
pop
and
das
pop
dec
mov
out
pushf
xchg
ret
push
nop
int
movsl
fwait
insl
mov
andl
and
test
lods
test
mov
sti
mov
pop
cmp
mov
sbb
push
mov
cmp
mov
clc
sub
dec
sub
movsl
test
imul
pop
sbb
cmp
sbb
xchg
inc
push
dec
sbb
mov
mov
or
loop
leave
std
xor
mov
ss
sti
inc
adc
mov
and
push
cmp
andl
rclb
lcall
inc
lods
repnz
mov
faddl
xlat
sub
test
cmpsl
gs
cmovno
dec
enter
pop
and
push
movsl
test
dec
sub
push
xor
push
repz
movsb
xorb
sbb
enter
mov
stos
dec
jmp
jne
in
jle
pop
inc
and
dec
inc
outsl
xchg
je
jg
jg
inc
cmp
orb
in
adc
xchg
add
ss
push
pop
xchg
xlat
in
mov
cmp
js
mov
cmpsb
cmpsl
out
lahf
aam
mov
adc
test
out
or
jbe
inc
fdivrs
sbb
stos
jle
pop
sbb
push
jmp
add
mov
popa
jne
movsb
cmpsl
ss
dec
lock
fidivrs
pop
pusha
in
lret
xchg
inc
imul
jle
jecxz
inc
sub
xor
dec
mov
fcompl
inc
aam
stc
mov
mov
pushf
repnz
es
shlb
insb
pop
insl
fimuls
add
mov
pop
xchg
cmp
pop
shrb
xor
pop
cmp
in
out
scas
sahf
pushf
push
stos
push
push
lock
add
xchg
pop
rorb
mov
inc
rclb
jmp
rorb
cmp
and
movsl
aas
push
fldlg2
mov
xchg
insb
icebp
idivl
xchg
ja
test
icebp
ja
xor
inc
sub
or
jae
popf
xchg
mov
dec
call
xor
push
or
push
shrl
dec
mov
push
std
pop
lcall
orl
pusha
mov
inc
cmpsb
leave
loop
push
aas
sub
xor
push
out
sahf
fiaddl
insb
lods
pop
add
or
js
jp
gs
jecxz
icebp
hlt
jno
or
pushf
jno
mov
xchg
pop
ja
lret
les
popf
sub
scas
in
movsl
jae
mov
push
xor
in
mov
or
inc
pop
pop
mov
imul
cld
mov
iret
popa
xor
or
clc
rcrb
pop
call
lea
movsb
imul
lahf
xor
dec
and
xchg
sub
scas
imul
lds
lods
pop
xor
inc
mov
push
jo
dec
and
hlt
in
pop
xor
pop
sbbl
push
js
in
add
fucomi
test
sub
cmp
sbb
rorl
xchg
cltd
les
xchg
xorb
pop
mov
shr
ret
inc
xor
ss
cmp
mov
mov
pop
jb
inc
xchg
xor
pop
pushf
aad
mov
mov
idivl
xchg
dec
fwait
movsl
push
or
sub
sbb
idiv
aad
mov
mov
dec
sub
dec
fs
lret
jmp
aaa
mov
bound
xchg
xor
inc
sub
popa
jg
gs
mov
dec
push
cmp
loopne
push
das
les
push
dec
jge
out
insl
jne
add
xchg
das
ret
loope
mov
cld
dec
outsb
mov
push
ljmp
xor
mov
add
sbb
punpcklwd
xor
sub
fldcw
pop
loop
addr16
imul
pop
pop
arpl
fs
sbb
mov
and
lods
sub
fisubrs
push
test
adc
popf
fwait
mov
push
or
jge
sub
or
sbb
xchg
sahf
call
sbb
pop
sahf
sub
mov
outsl
rorb
pusha
lret
sbb
rcrb
loop
and
or
cmpsb
inc
mov
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
mov
push
xchg
movlps
sbb
jp
cld
and
sub
pushf
jg
jl
add
repnz
das
xor
jge
jbe
sarl
adc
mov
stc
rorb
jae
or
and
shr
enter
loope
and
cmp
pop
xchg
stc
lcall
arpl
sarl
mov
mov
cmp
mov
sub
out
aam
hlt
cwtl
jle
xlat
int
mov
enter
je
jp
adc
lretw
dec
outsl
push
faddl
mov
add
add
adc
ret
lock
aad
gs
mov
cmp
jo
pop
lods
mov
rorb
push
in
inc
jp
mov
dec
xlat
dec
and
mov
xchg
in
jmp
std
imulb
jmp
or
jl
inc
ja
and
orb
adc
jp
lock
lret
hlt
lcall
sub
jb
std
lock
xchg
test
mov
jnp
in
jns
call
or
and
call
icebp
mov
mov
mov
mov
sbb
jo
jb
push
xchg
cmp
inc
cmp
stc
adc
pop
mov
ss
addl
lcall
cmp
jae
push
jp
test
popf
sahf
inc
movsl
mov
js
fwait
iret
mov
sahf
xchg
enter
or
push
xor
cmpsb
mov
add
data16
sbb
ja
pop
lret
int
dec
cwtl
jp
cltd
push
mov
out
sarl
jle
daa
in
inc
fisubl
jnp
mov
orb
dec
jl
push
inc
das
jno
mov
orb
movsb
fdivp
xchg
fsubrl
mov
test
fmuls
adc
adc
xlat
and
sahf
dec
sub
cwtl
insb
divl
imul
test
pop
inc
ror
jns
pop
push
xchg
sub
add
xchg
jge
jb
in
out
mov
stos
das
mov
aaa
sub
fildll
adc
or
jp
jg
mov
push
cld
jge
xor
enter
fcoml
add
ja
ret
fwait
in
jecxz
in
mov
pusha
cmp
scas
adc
je
test
shlb
add
xchg
dec
mov
das
pushw
pop
mov
mov
jmp
mov
out
add
leave
jmp
addl
mov
pop
jmp
ret
mov
in
push
push
data16
inc
adc
jmp
daa
std
mov
inc
sbb
popa
xchg
xchg
and
jl
subl
dec
pop
sti
jb
cmp
jmp
and
in
lret
imul
adc
cmp
mov
and
cmp
jg
out
mov
xchg
pop
int
xor
aam
jae
and
xchg
mov
sbb
jnp
jecxz
pop
jp
lcall
xorl
adc
test
icebp
mov
xchg
daa
rcll
xor
popa
adc
mov
cmpsl
and
and
xchg
rorl
dec
mov
cmp
sti
imull
jge
stos
movsl
sbb
roll
repz
aad
lret
jmp
push
popa
sub
test
outsb
push
ja
inc
in
inc
jmp
sarb
xchg
insl
sub
decb
mov
sbb
cmpl
or
les
pop
sti
stos
and
cmp
loop
in
mov
mov
testl
sti
jmp
mov
shll
mov
sub
inc
les
sbb
iret
mov
mov
jmp
push
addr16
xor
dec
lcall
mov
ss
inc
out
mov
xor
nop
lahf
mull
adc
test
inc
loope
xor
xor
enter
and
sbb
sub
mov
lret
ljmp
stos
cmc
clc
mov
out
outsl
cmp
xlat
sbb
inc
jbe
sub
sbb
mov
dec
loopne
jle
in
lods
push
insl
push
push
sub
sarb
cld
pop
xchg
in
mov
jge
xor
test
test
add
pusha
filds
fs
test
clc
int
pop
xor
inc
test
or
sub
or
sbb
loopne
pop
mov
jecxz
jo
das
pop
push
cld
dec
pop
xor
mov
inc
add
mov
loope
pop
and
aad
sub
pop
rcrb
sub
sbb
or
gs
mov
cmp
pusha
xor
jecxz
pop
clc
jmp
inc
pop
xor
data16
add
lds
lret
adc
or
adc
add
popa
imul
sbb
clc
ja
mov
loope
popl
repz
push
mov
loop
or
push
sub
adc
bound
lods
xchg
decb
jle
jmp
mov
or
subb
push
lds
mov
mov
fstl
shll
loopne
add
cmp
push
mov
xchg
xchg
mov
sbb
push
add
push
xchg
out
ss
dec
cmp
lock
les
iret
sub
into
or
jmp
outsl
inc
cmpl
lds
int3
xchg
jae
xchg
jo
faddl
sbb
push
push
pop
adc
fdivrl
xchg
test
add
nop
test
jl
popa
daa
push
mov
jnp
pop
ljmp
repz
outsb
push
pop
sbb
insb
clc
cmp
fwait
or
ds
xchg
pop
jns
pop
in
xchg
lret
loopne
adc
or
clc
movsb
push
jb
outsl
imul
mov
push
jmp
sbb
xorl
cwtl
mov
mov
cmp
ljmp
xor
pop
sub
push
leave
mov
or
xchg
sub
adcl
adc
mov
add
mov
sahf
and
imul
or
ljmp
xchg
sub
pusha
jle
mov
inc
addl
jnp
and
cmpb
push
add
mov
jg
push
and
sbb
and
mov
cld
dec
jo
xchg
lock
dec
into
cmp
adc
call
sub
call
mov
mov
into
dec
mov
add
stos
dec
add
add
lds
sbbl
rolb
data16
sti
shr
or
pop
imul
push
pop
xchg
xchg
dec
pop
and
shl
je
in
aaa
pop
loop
out
and
push
leave
das
test
incl
and
les
cli
leave
cmpsb
fnstcw
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
dec
fdivrl
ja
cmpsb
dec
popa
or
jmp
sbb
xor
int
fadds
dec
aam
sbb
xor
outsb
cmp
push
inc
inc
int3
nop
adc
insl
jl
jae
mov
inc
movsb
lea
push
inc
fbld
xchg
dec
dec
push
jns
lds
das
out
jge
cmc
sbb
gs
and
hlt
in
pop
mov
push
lret
push
test
jle
mov
mov
jg
mov
fldenv
dec
loop
and
adc
je
psrlw
mov
and
outsl
cmpl
sub
ja
push
ret
push
cmpsl
leave
lock
xor
pushf
icebp
sbb
dec
cmpsb
push
lret
dec
stos
leave
ss
push
outsl
testl
iret
xchg
push
mov
imul
sub
cmp
dec
or
pop
pushf
cmp
lock
mov
dec
and
xchg
testb
xchg
std
inc
outsl
xor
bound
clc
adc
mov
cmp
xor
adc
ljmp
nop
or
int
outsb
adc
loope
arpl
iret
and
sub
xchg
xchg
push
test
clc
decl
int
or
adc
lods
xchg
lret
cli
xchg
movsb
xchg
sub
movsl
sub
push
pop
jno
int3
leave
push
notb
icebp
out
shl
call
add
out
movsl
mov
jp
mov
cld
pop
fstpl
stos
sbb
sub
dec
dec
xchg
sarb
outsl
jge
mov
dec
mov
es
cmp
dec
xchg
je
push
jae
cwtl
cmp
cmp
xchg
push
add
fs
imul
jne
push
inc
mov
and
and
lret
mov
out
in
jg
adc
mov
xchg
xchg
add
stos
dec
adc
adc
mov
mov
add
in
in
inc
inc
xchg
sbb
cld
ret
add
mov
loope
fmul
dec
rorl
xor
adc
xchg
subb
sub
dec
sbb
jecxz
loopne,pn
mov
aaa
subb
sbb
rol
imul
ret
pop
ljmp
ds
adc
and
mov
je
aad
pop
jnp
bound
xchg
pop
lock
sbb
std
mov
js
dec
xchg
clc
dec
pushf
xor
inc
mov
or
pop
mov
xor
jg
clc
sub
mov
inc
pop
aas
jg
fistpll
test
in
push
leave
bound
insb
mov
sti
lea
and
inc
outsb
jmp
jmp
imul
xchg
cmpsl
add
push
and
in
mov
mov
mov
add
xchg
sbb
dec
cld
or
xchg
and
inc
jl
lret
sbb
aam
test
js
divl
dec
push
dec
int3
inc
stos
pop
push
lock
push
push
pop
xchg
jge
test
cmpsb
pop
out
cmp
repnz
pop
push
jl
gs
inc
mov
mov
mov
pop
cmc
pop
out
mov
loopne
lock
aad
int3
fcoms
insb
or
imul
push
dec
lods
inc
xchg
or
sub
iret
cmp
mov
jg
mov
jne
shrl
loopne
in
popa
fs
inc
test
rcrl
inc
fldt
push
dec
and
xchg
sub
xor
shl
mov
mov
je
in
xchg
aam
cli
mov
pushf
jns
mov
incb
sbb
sbb
pushf
lret
jl
mov
push
lock
movsl
adc
add
jecxz,pn
xor
push
shll
int3
rorl
sbb
mov
shl
sbb
mov
xchg
mov
sbb
ljmp
sbb
mov
add
pop
outsl
xor
mov
mov
mov
loope
xchg
jmp
sbb
sbb
scas
or
add
add
jmp
ja
mov
pop
cmc
push
inc
adc
mov
sub
sahf
imul
dec
or
aam
popa
mov
sub
and
cmp
loopne
data16
int
xchg
dec
std
mov
jne
outsl
int3
sub
movsb
xchg
loop
or
sub
jl
in
adc
outsb
push
repnz
inc
adc
dec
adc
adc
fcompl
jmp
xor
hlt
and
add
xor
cmp
ret
pushf
adc
xchg
movsb
popa
mov
loopne
adc
mov
ret
clc
insb
adc
mov
push
pop
repz
and
addl
jno
and
cmp
mov
mov
popa
icebp
out
in
data16
mov
cmpsb
sbb
pop
xor
dec
rcl
ljmp
out
stc
rcrb
cmp
ss
adc
jl
pop
cmp
add
adc
inc
out
enter
insl
xorb
loope
inc
insb
pop
hlt
adc
xchg
push
fidivl
jb
pop
pop
and
lods
fmull
xor
cmpb
aam
xor
or
cmc
inc
or
mov
inc
pusha
push
xor
or
cmpsl
jp
add
xor
das
jno
inc
add
cmp
and
push
test
pusha
mov
std
push
and
push
pop
push
push
xor
cltd
rorb
or
inc
pop
out
roll
cmp
les
mov
mov
mov
xchg
xor
jns
cld
inc
pop
mov
sahf
sahf
cmp
out
pop
push
test
or
mov
add
in
or
icebp
jne
pop
in
js
cld
loop
orl
push
mov
push
call
out
xrelease
cld
jno
lcall
cmc
mov
stc
inc
popf
movsl
cmp
or
hlt
mov
pop
aas
dec
mov
loopne
adc
test
mov
xchg
and
imul
rcl
fsubrl
or
or
ret
mov
sub
pop
mov
pop
mov
push
pop
xchg
jmp
or
mov
inc
cmp
pop
inc
xor
ret
test
mov
fdivrs
mov
lods
mov
ret
jl
xor
js
adc
sbb
in
push
xchg
shll
stos
outsb
ret
int3
scas
loopne
or
push
scas
mov
pushf
push
je
cld
stos
mov
clc
mov
pop
mov
addr16
sub
mov
sbb
cmp
pushf
adc
stos
xchg
fidivrl
cmpsb
daa
test
pop
int
sub
out
jle
jnp
push
out
pop
je
mov
test
push
pop
popf
push
sub
mov
and
lea
dec
xor
ficoml
popa
cs
sbb
dec
out
movsl
test
jmp
push
adc
sub
aad
aad
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
jo
push
mov
xchg
mov
add
lahf
dec
or
loope
shl
xor
shlb
sub
and
scas
mov
int
shr
repz
jns
mov
add
cmp
int3
xchg
dec
lahf
test
cmc
mov
mov
cmp
bound
cmp
pop
incl
cld
test
in
xlat
xor
sub
decl
mov
adc
push
pop
mov
xor
pop
push
pop
jmp
mov
int3
lcall
and
rcr
test
fsts
mov
jne
cmp
jge
pop
loopne
rorb
adc
std
js
aam
add
xchg
sbbb
add
mov
cltd
in
mov
sbb
outsl
lret
sub
mov
xchg
test
sbb
inc
mov
lret
jno
mov
jnp
sub
aas
pop
call
aaa
loopne
push
loopne
fs
or
mov
sti
insb
pop
jge
fcoms
jge
in
movb
sub
testl
pop
data16
xchg
shl
xchg
shrb
je
push
dec
or
mov
inc
test
adc
mov
adc
sub
out
popl
jnp
je
xor
lret
stc
dec
lret
inc
inc
dec
sub
daa
jp
out
ffree
lea
inc
aaa
loopne
or
and
js
jmp
cmpl
lret
push
pop
or
adc
lods
nop
push
insl
dec
dec
push
fwait
xor
adc
int3
mov
pop
xor
xor
rorl
jmp
inc
ja
int
or
fs
sti
jp
xor
or
lock
orw
arpl
popl
loopne
ret
mov
mov
mov
popa
fbstp
loope
divb
insb
in
call
push
or
fldcw
dec
fs
mov
push
pop
lret
push
insl
repz
add
cli
sbbl
and
xor
imul
mov
jle
sahf
jmp
loopne
test
push
xorb
adc
packuswb
or
std
lods
inc
push
adc
or
ror
aas
pop
dec
and
orb
mov
repnz
fistps
mov
cmp
insb
inc
cld
outsb
dec
les
sahf
popf
lock
lock
shrb
dec
jnp
xchg
flds
movsl
scas
mov
out
adc
out
dec
mov
int3
jmp
fldpi
xor
hlt
int3
loope
test
loope
in
dec
movsb
adc
mov
repz
stos
dec
outsb
mov
pop
sub
and
jns
popf
jo
aaa
mov
les
les
sub
dec
imul
imul
insb
mov
jle
mov
push
imul
outsl
pop
xchg
mov
push
in
insb
inc
ret
xchg
dec
xor
inc
test
add
adc
rcrb
inc
xchg
mov
or
testl
push
sti
std
xchg
push
iret
add
out
mov
icebp
xor
jmp
cmp
imul
frstpm(287
test
test
cmp
pop
scas
mov
push
adc
insb
jmp
mov
cli
cmpb
in
popa
push
sub
cmp
xor
or
cmpsb
out
and
push
sahf
push
popa
test
into
mov
mov
inc
lret
xchg
jb
sahf
scas
and
aaa
cmp
xchg
int3
cli
xchg
test
jo
scas
orb
je
add
xor
pushf
ja
jge
add
xor
dec
push
lds
adc
scas
jno
idivl
cld
jo
shlb
lea
and
mov
mov
loopne
dec
mov
add
or
insb
jb
xlat
div
js
imulb
jne
mov
add
and
cmp
push
aam
mov
frstor
adc
jbe
movsb
dec
pop
fstpl
popf
inc
js
xor
arpl
inc
mov
pop
mov
addr16
cmpsb
jle
mov
xor
push
sbb
dec
adc
addr16
jnp
sbb
inc
or
aad
adcl
mov
push
lock
or
pop
je
jb
lret
dec
dec
mov
mov
roll
daa
jp
pop
pop
lods
in
xchg
mov
cli
pushf
inc
mov
in
and
ret
or
call
das
mov
leave
rcrl
mov
mov
cltd
xlat
lcall
xchg
and
xor
xor
adc
outsl
inc
push
mov
les
div
jecxz
sti
or
mov
push
scas
es
sub
js
fsub
xchg
mov
fincstp
aad
nop
inc
xor
sub
dec
mov
xor
dec
dec
dec
or
into
mov
mov
sub
push
xor
fwait
jmp
je
xor
adc
aam
mov
lea
shr
dec
popa
sub
cmp
orb
out
pop
sbb
inc
pusha
movsl
mov
push
fldl
call
cmp
sahf
sbb
iret
out
and
ljmp
test
cmpsl
ret
xchg
xor
sarl
leave
mov
aaa
popa
xchg
aad
scas
mov
jns
sub
loopne
lcall
js
ret
mov
add
jbe
mov
mov
ds
mov
testl
fmull
sbb
jno
std
adc
mov
shrb
movsb
mov
sub
dec
test
insl
clc
sbb
jg
pop
lahf
cmpsb
aas
xor
out
cwtl
jb
xor
adc
xor
mov
les
push
mov
outsl
mov
scas
outsl
pop
mov
test
inc
lea
xor
sbbl
dec
imul
inc
rsqrtps
xchg
sahf
popa
sti
adc
inc
dec
pop
outsl
and
loopne
dec
stos
ja
sti
dec
sub
into
xor
xor
push
push
jae
or
stc
cmpsb
mov
mov
pop
mov
out
aaa
pop
xor
add
push
insl
pop
mov
mov
xchg
int
xchg
js
push
shrl
aaa
xor
inc
jge
aam
pop
push
pop
push
das
push
add
nop
aas
mov
pop
inc
push
mov
pusha
dec
loope
adc
mov
sbb
js
xchg
mov
pop
outsb
std
or
imul
push
inc
in
dec
imul
enter
jecxz
bound
mov
dec
push
mov
imul
mov
mov
pusha
jae
pushf
or
fwait
lahf
pop
jns
pusha
jbe
xor
nop
mov
cmpb
fisubrl
push
cmp
cmpsb
sub
dec
decb
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
inc
adc
das
aam
ja
push
and
into
sub
cmpsb
cmpsl
sub
mov
pop
or
push
arpl
outsl
mov
lock
cmp
incb
adc
mov
dec
jnp
push
xor
outsb
or
call
push
adc
sub
sarb
push
call
jle
inc
dec
and
pop
xchg
jns
xlat
mov
loope
icebp
sbb
cmp
sub
push
out
sahf
lods
loope
xor
push
push
into
test
stc
pop
cltd
mov
fistpl
push
loope
mov
lcall
push
in
cmc
loopne
psubd
pop
cmp
ret
mov
lods
and
mov
mov
inc
or
xchg
dec
xor
dec
mov
mov
pop
stos
mov
pop
jb
sub
push
into
add
jmp
pop
pop
and
sub
ret
stos
pop
sub
out
movsl
test
sbb
movsl
mov
cltd
cmpsb
cmc
gs
scas
pop
jmp
adc
pop
or
pop
stc
movsl
xchg
ret
mov
xor
cmp
pop
add
daa
mov
push
iret
add
adc
jmp
data16
or
jg
insl
adcl
popa
xchg
dec
cmpsl
cli
sub
scas
and
pop
mov
xchg
pop
add
mov
inc
mov
addr16
mov
clc
sarl
adc
xorb
add
dec
out
cmp
mov
push
sbb
ja
and
mov
fwait
sti
bound
cld
cs
sbb
or
and
pop
pushf
mov
and
loopne
and
daa
or
jb
sub
inc
fadds
cmp
arpl
push
scas
cltd
mov
jle
rcl
loopne
cmp
lret
sti
insb
xchg
fsubrl
mov
add
xchg
fdivl
xchg
sbb
pop
and
mov
xor
inc
mov
push
in
dec
and
jp
sahf
fwait
in
inc
jle
andl
inc
loope
cmpsb
fiadds
mov
xchg
rcrb
inc
xchg
xor
pop
mov
fcompl
push
xchg
mov
mov
and
popa
insl
adc
loop
or
in
fldl
pop
data16
in
into
mov
roll
lahf
add
aas
jne
mov
sub
outsb
rcl
xchg
dec
stos
xchg
out
push
push
test
jo
mov
mov
mov
lret
pop
push
mov
test
je
adc
das
ffree
arpl
vprotw
push
pusha
jge
or
push
outsb
sbb
jns
ss
popf
and
adc
sbb
in
dec
dec
sub
push
push
push
popa
mov
je
push
pop
outsl
iret
pop
test
loop
mov
fmull
loope
sub
fisubrl
and
xor
mov
ret
popf
dec
or
push
sub
fimull
fmull
insl
or
daa
and
cmpsl
dec
in
jg
add
dec
hlt
sbb
cwtl
jns
test
orl
jl
or
shl
jne
lods
jmp
mov
rclb
pop
out
sti
pop
dec
ret
lods
mov
insb
jb
cbtw
push
add
fisubs
pop
jle
push
mov
xchg
cmp
and
stos
dec
dec
mov
jle
cmc
adc
dec
cmp
mov
mov
push
dec
stos
iret
test
inc
inc
and
inc
int3
cs
in
out
inc
inc
push
add
js
mov
sbb
sub
add
popa
mov
sti
cmp
push
out
push
in
xchg
dec
jno
subb
mov
idivb
shll
ret
xchg
sub
adc
aam
cmp
dec
icebp
jmp
ficompl
xchg
dec
inc
jae
movsl
pop
loopne
dec
das
mov
mov
sub
in
lea
xchg
push
les
xchg
sub
mov
popa
add
mov
xchg
cmpb
or
das
jne
loop
das
jmp
sbb
pop
je
push
cltd
pop
dec
mov
inc
lcall
jmp
sahf
call
sub
sbb
xchg
lods
leave
add
cltd
gs
xchg
mov
pop
adc
jns
xchg
and
scas
xor
sub
icebp
inc
push
or
lret
lcall
xchg
pop
add
pop
push
cmp
dec
scas
mov
push
cli
les
in
mov
shrb
cmp
lret
int3
xorb
sti
rclb
sbb
das
movsl
std
pop
pop
mov
pop
fnstenv
inc
push
sbb
mov
cmp
xchg
pop
imul
pusha
xchg
mov
out
or
loope
dec
sbb
mov
ret
shll
mov
dec
mov
movsb
loopne
pop
adc
jno
cld
arpl
sbb
mov
and
ret
push
pop
xchg
loop
push
into
cmp
out
push
bound
xchg
fisubrl
cmp
repz
lret
movsl
sub
dec
inc
cmp
cmpsl
dec
jge
mov
inc
arpl
jmp
pushf
sub
sub
int
add
aad
decl
fdivl
push
rol
or
movsb
xchg
mov
lds
xchg
jp
sub
xlat
add
sbb
xchg
lock
scas
xchg
outsb
inc
insb
pop
repnz
int3
sub
pop
shl
mov
cltd
ret
jge
pop
gs
ljmp
push
jmp
or
ss
mov
iret
rcl
inc
cmp
dec
es
cmc
imul
lahf
arpl
insl
mov
icebp
ja
jne
leave
xor
push
dec
push
hlt
test
das
cltd
nop
xchg
xchg
idiv
push
call
jp
dec
cli
cmp
clc
sti
mov
cmp
out
int
imul
in
and
xor
stc
repz
jo
aam
xor
fldl
push
aaa
nop
inc
shl
dec
push
jb
fwait
mov
push
repnz
cmpsb
fwait
leave
fidivrs
mov
mov
mov
dec
nop
ss
xor
and
pop
adc
fld
pop
cmp
das
inc
hlt
mov
aad
xchg
xor
out
fsubrs
ret
mov
or
lahf
pop
mov
and
out
pushf
iret
cmp
xchg
mov
inc
sub
stc
clc
mov
pop
lret
lret
xlat
int3
jle
pop
push
aad
push
jl
shl
in
popf
mov
mov
adc
cmp
jne
lahf
in
test
stos
ds
outsb
and
cmp
fidivrs
loope
pop
shll
call
ret
stos
sbb
stos
pop
push
adc
mov
sti
dec
mov
mov
xchg
out
cmc
mov
iret
fidivs
into
hlt
jns
inc
xor
aad
cmp
or
cmp
sbb
inc
test
movb
cs
fnsave
push
popa
iret
push
je
jno
push
pop
pop
xor
mov
push
cmp
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
clc
pushl
inc
js
and
or
stc
or
shlb
leave
xor
arpl
inc
and
mov
test
jl
pop
or
movsl
or
fnstenv
mov
jl
pop
rol
outsl
shl
and
fs
push
pop
xchg
adc
cs
cmp
sbb
lret
push
jle
dec
int
dec
sub
addr16
sbbl
shl
outsb
into
out
inc
fdiv
xor
sub
mov
push
jnp
jb
add
aad
lahf
inc
push
mov
cmp
pop
daa
cmc
or
faddp
loop
enter
jns
mov
jp
jp
pop
or
and
je
add
add
mov
push
fistpl
jo
cltd
popf
add
pop
movsl
lods
sti
cmp
inc
inc
out
pop
hlt
mov
xchg
cltd
aaa
loopne
andl
clc
inc
and
cmp
iret
sbb
mov
popa
or
stos
lods
sub
stos
mov
cmp
inc
aad
rcr
add
cltd
push
pop
sbb
repz
mov
fiadds
addr16
test
pop
xor
out
stos
inc
mov
push
jae
xlat
mov
mov
aad
cmp
or
and
mov
idivl
ret
add
subl
push
pop
aaa
hlt
rolb
pop
xlat
mov
and
push
jb
jle
mov
sub
sbb
test
xor
repnz
jp
in
pop
adc
dec
mov
lock
dec
cs
mov
scas
repnz
cmp
sub
sbb
mov
outsb
leave
or
stos
mov
fisubrs
movsl
movsl
jnp
lret
movsb
sub
add
lret
xor
cmp
mov
jle
dec
push
loop
xor
gs
dec
pop
dec
pop
enter
jo
rolb
clc
add
dec
pop
stos
xor
lea
je
decl
fisttps
hlt
sbb
jnp
sbbb
test
fwait
mov
push
mov
push
sub
into
fsubr
adc
xchg
loopne
cmp
outsb
les
fadd
cmpsb
call
mov
sub
inc
xor
call
jns
dec
ret
pop
lret
shll
out
stc
xlat
adc
aaa
jecxz
jp
aas
inc
imul
data16
inc
stos
roll
repz
test
rorb
sti
or
cmp
pop
int
pop
call
cmp
fstp
sti
movsb
clc
jne
xchg
jge
mov
fidivl
push
or
icebp
decl
leave
in
xchg
mov
out
nop
out
sbb
mov
scas
jb
dec
test
mov
adc
dec
xchg
sbb
call
sarl
lds
sbb
adc
xchg
and
incl
and
pop
ficoms
daa
pop
inc
jp
mov
mov
cld
sbb
jmp
pop
in
xchg
pop
mov
out
lds
xlat
sub
or
xor
or
push
lmsw
sti
test
lds
xchg
and
adc
in
add
jmp
inc
lods
scas
stos
sbb
test
xlat
movsl
loope
cmc
cld
out
or
lret
and
stos
aas
sbb
pop
andl
inc
rcll
int3
push
mov
or
push
sbb
lods
dec
xchg
in
push
or
pop
sub
lods
mov
aad
movsb
shll
pop
mov
movsl
dec
fistpl
loopne
pop
cmp
aam
shrb
ja
jne
leave
add
fs
or
fcompp
out
and
sub
or
decb
mov
and
push
push
cwtl
and
sbb
xor
xchg
je
dec
lods
and
push
dec
mov
lgs
in
pop
or
je,pn
loopne
loop
dec
test
pop
lock
loopne
mov
and
mov
je
add
mov
shll
das
out
gs
jmp
pop
test
xchg
sub
ret
lods
loope
or
fdivr
inc
jo
push
add
cmpl
pusha
dec
lock
fninit
cmpl
dec
mov
xchg
ss
jae
shl
cli
xchg
jecxz
scas
pop
lcall
movsl
je
shlb
out
clc
xchg
mov
sub
pop
pusha
jl
flds
test
lret
lea
lret
into
out
push
andl
push
sbb
xor
inc
sub
test
adc
call
or
addb
out
into
cmp
fcoml
xchg
sub
adcb
and
dec
adc
loop
ljmp
sbb
adc
cltd
subb
inc
ret
pop
hlt
jle
in
test
sbbl
clc
jnp
sub
cmp
xchg
dec
rolb
pop
adc
negl
les
xor
test
add
loope
inc
dec
inc
cmp
les
movsb
xor
rcr
push
xor
leave
push
mov
test
imul
push
xor
ret
lods
xorb
mov
dec
mov
dec
mov
xchg
in
das
jle
dec
jecxz
in
xor
incb
mov
push
and
and
inc
mov
sbb
cmp
push
mov
push
push
mov
incb
daa
cmpsb
daa
xor
or
push
cmp
jns
addr16
test
shll
fsubl
adc
lods
or
or
movsb
iret
loopne
popa
jge
and
leave
fimuls
dec
jne
int3
lahf
lahf
xchg
scas
pushf
testb
inc
mov
je
cmp
test
popf
xor
jo
out
cmp
daa
jae
mov
cmp
mov
or
ljmp
xlat
nop
mov
add
add
in
roll
jo
test
pop
mov
sbb
fsubr
dec
push
xchg
mov
xor
loop
dec
sbb
sub
outsl
rolb
sbb
or
out
adc
lods
loop
jnp
dec
inc
pop
add
cltd
ds
lcall
test
ret
xchg
add
push
xor
loope
mov
sbb
dec
push
or
movsl
adc
xchg
push
adc
lock
cmpsl
ljmp
xchg
loope
mov
sub
add
repz
rol
lret
or
mov
leave
repz
popl
loop
mov
insb
popf
jge
out
adc
outsl
push
dec
pop
jbe
aas
jnp
fmull
adcl
mov
push
jnp
aas
push
xchg
scas
xchg
or
xlat
mov
mov
xchg
lock
imul
pop
adcl
scas
pop
push
jle
lods
ret
jl
andb
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
xor
inc
mov
ja
inc
fimuls
std
cmp
sub
inc
mov
and
pop
jb
fdivrs
les
stos
push
and
xchg
mov
dec
shlb
mov
pop
stc
jae
outsl
test
sub
iret
push
lretw
adc
cli
imul
pop
popf
lods
lods
iret
aaa
push
shrl
adc
int
aaa
lret
inc
lds
cld
sub
fstpt
call
mov
xor
xchg
and
loopne
jge
push
enter
add
cmpsb
mov
addb
add
xchg
and
add
mov
cmp
dec
cwtl
mov
sub
cmp
dec
sub
or
and
test
jo
dec
add
xlat
dec
pop
fs
stos
push
cmp
hlt
fs
and
pop
inc
jp
pusha
xchg
jp
movsb
call
jae
nop
xor
cmp
popf
in
lahf
arpl
sub
dec
sub
out
icebp
shl
lods
xor
stc
fsubrl
inc
call
sbb
jo
pop
inc
aaa
xor
pop
mov
lods
orl
add
cmpsl
cs
in
xor
add
sub
bound
adc
inc
inc
push
or
pop
outsb
mov
xor
dec
dec
enter
lods
cmp
jle
nop
stos
and
add
inc
jne
or
sbb
popa
add
lea
fcoml
pushf
imul
or
mov
ljmp
sub
xlat
sbb
sub
mov
clc
xor
icebp
xor
push
dec
xchg
out
jmp
pop
cmp
sub
es
push
push
pop
sub
pop
pop
and
or
dec
pop
shrb
das
adc
loop
adc
adc
data16
pop
lock
jl
imul
mov
popf
jnp
ss
cmpsb
int3
jmp
fcompl
mov
cmpsb
filds
push
call
lret
mov
pop
and
push
js
jl
sub
push
daa
in
in
data16
xchg
jbe
and
push
inc
xor
cmpsl
mov
rcr
push
adc
adc
mov
ljmp
das
adc
into
lahf
mov
dec
in
cltd
in
xchg
in
jl
frstor
or
inc
mull
neg
cld
xorb
adc
pop
test
shrb
pop
jns
scas
sbb
push
jp
mov
jmp
mov
adc
sbb
adc
sub
fsub
mov
imulb
in
rolb
sbb
mov
testl
inc
cmp
shlb
add
pop
out
ss
push
fmuls
pop
movsl
mov
push
call
int
lret
aaa
dec
xchg
push
sbb
inc
imul
xor
sti
inc
loopne
and
cmc
adc
movsb
add
or
mov
hlt
nop
cmc
push
push
leave
iret
repz
xor
add
fisttps
mov
mov
fwait
xor
push
sub
jle
jmp
jmp
outsl
lcall
out
stc
or
push
test
or
jp
dec
lds
pop
les
clc
into
jge
and
sbb
lcall
push
or
rorb
rorl
mov
shll
xor
bound
lock
in
jl
stos
mov
sub
mov
push
out
push
out
mov
dec
dec
or
cmp
fimull
addr16
pop
fmuls
leave
loope
push
mov
lea
pusha
int
pop
add
ret
jp
push
dec
lahf
sbb
adc
dec
pop
mov
mov
fs
or
mov
jge
lahf
test
scas
out
jl
mov
std
cwtl
push
test
clc
rcrl
sbb
jns
scas
push
in
cmp
or
sbb
dec
mov
inc
push
and
mov
lahf
fwait
push
sbb
inc
fsubr
loope
jg
add
into
inc
adcl
xchg
ret
out
mov
rclb
notb
mov
dec
hlt
lock
inc
popa
sarb
pop
pop
ror
adc
outsl
jmp
in
call
stos
jne
lret
testb
and
negl
mov
mov
js
mov
add
dec
pushf
sub
adc
sbb
sarl
daa
xor
scas
adc
push
or
test
movsl
fcmovb
xor
movsl
xchg
cmp
xor
xchg
test
mov
xchg
mov
stc
cs
pop
and
sub
and
adc
and
mov
inc
cmpb
xchg
js
outsb
dec
or
mov
into
push
test
mov
cmp
jl
mov
add
mov
outsl
scas
sub
test
loop
xor
into
inc
add
sub
inc
push
and
pandn
or
sbb
arpl
test
adc
mov
pop
jo
inc
insl
rorb
js
pop
mov
xchg
mov
stos
xchg
imul
jae
xchg
cmp
test
int3
cwtl
mov
rsm
or
arpl
xor
inc
lock
dec
jp
clc
and
or
dec
shll
jl
jmp
stos
fiadds
js
mov
test
jmp
stc
movsb
sub
push
cmpsl
pop
adc
repz
xchg
cmp
pop
fs
in
stos
imul
mov
movsb
bnd
fldt
inc
loopne
mov
repz
cmp
out
mov
cwtl
dec
out
dec
cmp
adc
dec
mov
push
lahf
enter
jns
loope
mov
lahf
and
enter
sbb
add
adc
dec
and
sub
dec
adc
jns
xchg
jl
dec
push
enter
add
ljmp
push
dec
push
cmpsl
lcall
in
pop
jae
add
or
mov
jns
bound
iret
adc
sub
aas
imul
test
fdivrp
pop
mov
insl
subps
cmpl
lret
sub
cmpsl
cmpsl
fsubl
pushf
dec
mov
xchg
lock
jecxz
shlb
mov
clc
roll
inc
shlb
dec
adc
ficomps
inc
mov
lcall
pop
dec
and
push
jmp
push
push
jnp
imul
push
repz
lock
insl
js
leave
dec
stos
mov
enter
mov
add
bound
mov
aaa
pop
scas
xchg
sbb
in
xchg
pusha
jbe
inc
les
pop
out
sbb
minps
ja
insl
ja
jo
std
hlt
mov
sub
and
test
jg
xchg
add
sbb
or
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
xchg
imul
ja
cmpb
mov
cmp
mov
mov
into
jae
dec
mov
mov
repz
fidivrs
popa
das
pop
pop
cmc
ret
and
mov
aam
xor
jb
pop
aad
jl
push
and
mov
xor
mov
fwait
sarl
mov
je
sbb
je
inc
mov
cmp
jb
or
jge
jg
cmp
das
je
inc
cmp
es
test
adc
dec
ret
ret
and
repz
js
daa
cmp
sbb
pop
xor
fisttps
fwait
cmp
shll
loopne
clc
test
push
fbstp
mov
dec
mov
test
xor
shll
adc
push
aaa
ds
xchg
sar
sbb
and
add
seta
pop
xchg
xorl
scas
sub
pop
dec
mov
xchg
lea
jg
lods
stc
sub
testl
xchg
lock
lods
addb
popf
test
in
mov
inc
data16
out
dec
cmp
sub
jecxz
xor
jnp
xchg
js
xchg
out
jge
dec
and
adcb
mov
cmp
clc
mov
mov
mov
or
adc
jns
fisubrs
movsb
inc
sbb
sarb
enter
inc
cs
dec
and
sti
cmp
xchg
mov
stos
and
insl
mov
xor
jb
lea
xlat
inc
jp
cs
shr
aas
inc
mov
decb
movb
or
xorl
mov
lret
sbb
add
es
fcomps
gs
ljmp
xchg
sbbb
hlt
sahf
and
push
test
jp
mov
sub
cmp
sub
adc
add
pop
icebp
cmp
mov
out
cmp
add
inc
mov
adc
sbb
loopne
mov
push
xchg
inc
mov
cli
int3
adc
lret
jne
rcrb
jp
lahf
fcoms
pop
adc
mov
sub
or
ss
cmpsb
popf
in
dec
xchg
pop
cli
xor
cmp
sbb
jp
add
push
and
jbe
jne
xor
jno
dec
lds
std
bound
xchg
aam
adc
decb
sbb
sub
push
mov
jne
loope
dec
jecxz
xchg
dec
scas
adc
shrl
repnz
inc
test
lds
jae
mov
stos
cs
xchg
jp
adc
pop
jecxz
fstps
adc
cmp
sbb
jae
pop
je
adc
dec
push
pushf
jns
xchg
xor
out
add
or
dec
ficompl
jle
fisubs
mov
mov
jnp
mov
lock
ficompl
scas
xor
add
or
les
fsubs
cmp
inc
jl
stos
ret
ret
fcomi
pop
and
aam
cmc
test
sub
outsb
ja
imul
iret
hlt
push
xchg
mov
mov
inc
lock
sti
arpl
and
or
aaa
test
cltd
stos
and
adc
sahf
adcb
test
push
fcomi
fimuls
xor
mov
adc
add
push
sub
iret
jecxz
repnz
and
out
mov
jecxz
xlat
stos
mov
mov
sub
lea
cmpl
sub
dec
fdivrl
pop
aaa
pushl
stos
add
idivl
mov
or
mov
sub
xchg
lods
das
jnp
dec
in
in
aad
es
dec
lret
sbb
xchg
test
xor
pop
or
rcll
jmp
jne
inc
and
inc
stc
push
sbb
cmpsb
outsl
popf
xlat
xchg
cmpsl
rclb
stc
roll
mov
hlt
pop
popa
adc
jmp
call
dec
in
outsb
movsb
cmp
cmp
std
xchg
push
sub
addr16
xchg
mov
jns
pop
jae
rol
xchg
in
mov
adc
mov
inc
adc
stos
jnp
arpl
jno
xor
inc
fcomip
ss
movsb
pop
mov
or
sub
test
repz
in
rcr
pop
fldt
and
add
inc
fcmovnbe
fsubrp
and
mov
out
or
add
ret
in
jns
mov
cli
je
push
int3
aam
mov
and
call
jle
sahf
test
sbb
add
inc
xor
cli
mov
lods
mov
mov
insl
jno
inc
fwait
pop
imul
out
cwtl
mov
and
pop
ja
jge
mov
mov
or
subb
xchg
fdivrs
sub
cmc
and
out
mov
mov
repz
sbb
xor
xchg
rcl
inc
xchg
push
add
rorb
add
outsl
sub
fisubl
mov
loopnew
jns
push
pop
mov
out
or
in
cmp
jg
fmulp
pop
jmp
movl
mov
xchg
insb
fwait
imul
sub
outsb
enter
mov
adc
push
icebp
cltd
roll
xor
adc
sbb
xchg
xchg
or
lods
ficompl
or
cmp
shrl
sub
and
aam
popf
inc
out
jne
xchg
lcall
mov
jne
aaa
loopne
xor
imul
subb
scas
xchg
mov
inc
pop
sbb
dec
adc
sub
and
sti
loop
mov
insb
enter
cmpsb
sbb
out
ret
pop
jmp
sar
out
xchg
sub
pusha
stc
sbb
push
mov
xchg
jno
pop
jge
or
jmp
cmp
lret
dec
sbb
mov
jb
sarl
daa
xchg
or
cmc
les
ret
mov
push
movsl
into
mov
out
imul
xor
mov
pusha
xor
sarl
ret
push
and
leave
mov
sar
ret
mov
aad
jb
push
xor
inc
jae
xchg
es
out
popf
incl
or
pop
add
lods
fisttpl
dec
pop
inc
scas
mov
mov
sbbl
adc
and
es
rcll
xchg
mov
test
sbb
sbb
cltd
inc
xchg
mov
pop
inc
push
movsl
cld
sub
lcall
lods
inc
hlt
lods
popf
mov
jecxz
enter
xchg
or
push
mov
ljmp
fsubl
xor
inc
inc
adc
stos
xor
mov
ja
push
adc
and
cmp
int3
sub
inc
mov
xchg
mov
jg
mov
mov
lock
sti
dec
cmp
and
out
jb
popa
pop
xor
inc
push
fcomps
rclb
cmpsl
aaa
dec
dec
int
cs
or
pop
fidivl
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
inc
sahf
xchg
push
dec
mov
ja
mov
pop
mov
pushf
cmp
sub
or
jp
mulb
mov
hlt
dec
and
adc
stos
inc
jnp
mov
subb
inc
and
pop
dec
jmp
push
shl
into
mov
push
in
mov
adc
dec
xchg
int3
leave
cmpsl
sar
inc
clc
xor
add
jle
mov
xor
and
cmp
inc
out
data16
enter
and
movsl
cli
inc
sub
lret
or
movsb
negb
xchg
into
and
andb
nop
sub
pop
loope
jae
imul
incb
push
mov
push
adc
rolb
inc
pop
hlt
out
cmp
es
or
sub
adc
push
gs
cmpsb
call
iret
and
popf
fstl
mov
mov
out
jecxz
out
mov
cmp
jb
sub
jb
push
out
iret
push
xchg
sahf
cmpsb
and
sub
loopne
add
add
stos
xchg
lret
inc
pop
fs
cli
mov
mov
lcall
xchg
pop
fwait
pop
mov
adc
cmp
xchg
mov
test
in
ds
scas
in
jb
xlat
lcall
int
repnz
mov
aad
es
mov
ret
sub
or
ficoms
dec
xor
mov
mov
sub
aad
mov
adc
cld
push
scas
pop
mov
xor
fsubs
jmp
ja
xor
add
add
pushf
mov
fisubrs
fidivrs
loop
adc
push
mov
inc
push
xchg
xor
aam
inc
insb
cmp
fstpt
add
bound
pop
and
aas
lret
inc
out
jecxz
lcall
sub
mov
xor
cld
xchg
jo
and
flds
jbe
fistl
std
repnz
pop
xlat
mov
sbb
pop
pop
xchg
paddw
enter
inc
jle
lahf
sbb
mov
loop
shlb
xchg
mov
push
aam
push
lds
pop
pop
fbstp
sbb
aam
sub
cmp
mov
cmp
adc
or
mov
insl
pop
idivl
add
aas
adc
stos
sub
stos
or
or
aaa
popl
inc
icebp
stc
pop
xorb
mov
mov
pusha
lods
xchg
add
aaa
out
mov
and
cmpsb
jo
pushw
pop
pop
ss
sbb
jae
lret
xor
push
xor
cmp
push
test
sub
cmp
dec
cmp
adc
push
sub
sub
ror
ds
pop
sub
aad
movsb
jbe
lcall
inc
fs
adc
mov
xchg
cmpsl
add
test
movsl
or
cmp
cld
xor
imulb
and
scas
xlat
ret
cwtl
xchg
js
pop
pusha
or
jmp
test
shll
dec
add
nop
lock
aas
les
icebp
jbe
pop
xor
out
mov
shlb
lahf
nop
dec
dec
push
or
lds
and
movsb
std
insb
push
aad
xor
cmpsl
test
adc
cmp
in
out
stos
or
mov
les
mov
adc
jl
lock
ret
imul
xchg
jmp
pop
add
push
sbb
lgs
cli
jl
daa
daa
or
inc
aaa
jle
test
xchg
ficoms
ret
xor
mov
adc
jecxz
not
xor
push
adc
and
call
dec
xchg
sbb
js
outsl
addr16
sbb
cmp
mov
cmp
dec
nop
jge
push
and
enter
mov
pusha
mov
xchg
test
sbb
pop
push
dec
inc
movsb
pop
push
xchg
mov
xchg
push
inc
das
xchg
xchg
adc
and
adc
xor
push
loope
imul
jae
inc
jo
nop
and
mov
cltd
cmc
aam
inc
jae
inc
into
push
dec
inc
jmp
dec
fisttpl
js
hlt
movsb
jne
movsl
ss
add
jae,pn
stc
jbe
je
fldt
mov
inc
cmp
jmp
movsl
jg
sti
and
mov
pusha
movsb
test
shr
or
sbb
scas
mov
sbb
xchg
cmpsl
addr16
adc
insb
scas
jno
inc
shll
mov
sbb
jl
lds
sbb
addl
data16
adc
sbb
mov
shlb
les
hlt
lahf
sbb
or
pop
pop
ficomps
movsl
orb
dec
roll
ss
mov
mov
mov
fwait
dec
pop
popa
xor
mov
and
ret
jmp
add
mov
cmp
jl
stos
mov
push
fmuls
outsb
pop
imul
mov
aam
and
pop
imul
movsb
out
adc
imul
gs
xchg
sub
popa
popf
xor
add
or
loop
xor
push
int3
xchg
std
les
lock
sub
mov
sbb
jne
in
jp
jmp
popf
call
add
mov
push
in
mov
lock
dec
jns
fisttpl
dec
scas
int3
xchg
insb
aad
xchg
mov
fimull
mov
pusha
dec
pop
test
mov
pop
xor
xchg
or
xlat
outsb
inc
mov
aas
cmp
mov
lahf
scas
cmp
xchg
and
push
loopne
js
imull
jmp
cmp
adc
in
scas
mov
mov
clc
clc
aad
or
pop
mov
aad
mov
lea
into
mov
jle
xor
test
in
rcll
fnstenv
mov
movsb
out
test
push
dec
and
call
shrb
pop
test
push
cmpsb
test
and
loope
testb
inc
shlb
mov
pop
xchg
pop
and
mov
in
cmp
fcomps
imul
pop
add
fildll
sub
testb
scas
sub
mov
inc
inc
aad
pusha
mov
sarl
cmp
and
push
push
cmpsb
or
test
int
lcall
enter
dec
add
arpl
int3
add
jge
in
push
js
in
das
cmc
sbb
add
fsubrs
ret
cwtl
sub
idiv
add
ret
lret
jno
mov
testb
mov
mov
loope
movsl
push
lea
shl
mov
stos
aad
push
pop
sahf
ljmp
cmp
jo
cmp
dec
lahf
dec
int3
stos
mov
mov
fadds
std
or
rorb
push
pop
xchg
pop
ret
add
test
add
pop
ljmp
call
testl
and
add
dec
in
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
scas
mov
jp
ja
add
push
mov
push
test
jecxz
cmpsb
movsb
jae
xor
adc
jbe
roll
xlat
divb
dec
dec
add
mov
and
adc
add
bound
addb
fisttpl
sbb
cs
cmp
push
jno
sbb
ror
cltd
cmp
xchg
dec
popf
loop
cs
es
sbb
addr16
test
push
mov
xor
xchg
mov
and
inc
in
sbb
add
movb
xor
xchg
cwtl
enter
lods
push
test
mov
negb
mov
push
lods
sub
leave
lea
or
dec
mov
push
push
mov
push
stc
jg
push
xchg
fdivl
out
xlat
outsl
rol
adc
dec
xor
das
xor
sub
jno
cmpl
pop
push
or
loopne
xchg
ss
loopne
cmp
pop
push
test
cmp
xchg
jg
mov
adc
jle
push
out
jmp
cmpsb
jecxz
mov
clc
mov
fists
mov
insl
leave
insb
lds
fcomps
jmp
aad
ret
dec
sarl
imul
push
sbb
mov
outsl
popa
out
jb
int3
cmp
hlt
push
cld
or
push
push
jg
pop
mov
push
cmp
cmpsl
mov
push
mov
pushf
add
lahf
shlb
add
cli
out
push
dec
pop
mov
aaa
stos
fimull
cli
adc
test
or
push
jb
dec
and
fwait
jmp
or
pop
mov
pop
ficompl
fwait
jge
lahf
pushf
mov
xchg
xchg
pop
xchg
int
sub
lcall
adc
pop
dec
jmp
movsl
rcll
scas
repz
int3
inc
add
test
pop
or
fsts
pop
mov
ret
xchg
push
push
jns
mov
mov
scas
addl
mov
outsl
pop
nop
dec
dec
pop
add
in
sbb
mov
xor
sbb
lods
loop
fisubrs
inc
pop
fwait
and
sbb
adc
cmp
into
clc
pop
pop
or
test
test
aam
loope
xchg
insb
les
aam
push
mov
add
dec
ficomps
in
lds
inc
add
xor
mov
dec
adc
jnp
adc
fidivs
sarb
xchg
movb
hlt
push
adc
gs
hlt
xor
cwtl
in
push
mov
mov
lahf
jg
test
jno
les
cmpsb
test
stos
out
cwtl
jge
sbb
js
stos
dec
sub
pop
xchg
fiadds
pop
mov
inc
lea
jmp
cmp
inc
pop
ss
mov
fs
jo
inc
clc
jo
add
neg
jne
adc
call
std
fists
ss
in
cmpsl
or
mov
test
cmp
or
fistps
dec
loope
mov
xchg
mov
ja
leave
das
xor
adc
shr
cld
mov
push
xor
mov
lret
out
push
popf
jmp
scas
int3
lcall
in
into
add
pop
dec
int
mov
mov
stos
inc
arpl
jb
je
dec
xorb
sbb
nop
insl
fnstenv
stc
xchg
leave
mov
jo
dec
adc
into
inc
mov
lret
shl
push
mov
bnd
mov
mov
out
and
or
cmpsb
add
lret
sub
repnz
jle
ljmp
push
pop
mov
outsb
inc
insb
sahf
test
inc
pop
mov
push
ror
repz
sub
or
inc
jge
jmp
mov
out
test
dec
fimull
lret
test
mov
in
fwait
movsl
ja
sbb
call
shl
and
in
adc
or
add
pop
jecxz
cmp
sub
cltd
xchg
filds
aaa
fbld
bound
or
test
mov
push
ja
comiss
jae
sub
inc
xchg
nop
jb
sbb
add
icebp
and
nop
fidivl
cmpxchg
repz
sub
movsl
ja
data16
add
mov
pop
cmp
nop
and
sub
pop
stc
and
outsb
sahf
outsl
pop
push
mov
aam
cmpsl
mov
aam
inc
dec
jecxz
push
mov
and
hlt
pop
jl
lock
in
cmp
cmpsl
out
and
sub
or
clc
dec
inc
testl
out
bound
outsl
movsl
jbe
adc
jl
jbe
jg
add
pop
into
jne
stc
lcall
fisubl
test
xor
mov
imul
xor
push
fcmovne
testb
shl
add
sub
fcoml
int3
xchg
scas
mov
or
call
cmp
sbb
pop
jmp
cs
add
xchg
int3
dec
iret
dec
xchg
and
inc
xchg
cmp
push
xor
mov
push
scas
xchg
outsl
fwait
dec
pusha
lcall
test
jbe
test
test
cld
icebp
fdivrs
insb
sbbl
pop
xlat
dec
fwait
jmp
test
push
sbb
xor
pop
dec
mov
fmuls
adc
mov
pushf
stos
sub
mov
xor
aad
arpl
pop
cmp
fisttpl
lods
add
inc
cmpsl
push
mov
stos
xlat
cwtl
inc
push
sub
jo
mov
out
or
cmp
outsl
sub
sbbl
fnstcw
out
xchg
push
cmp
fistps
cmp
sub
popa
inc
mov
push
add
cmc
icebp
dec
mov
divl
add
pop
mov
jg
loopne
divl
lahf
pop
das
mov
aad
push
movsb
mov
inc
push
add
push
test
lea
jno
jae
mov
cli
inc
cwtl
popa
jo
jle
loope
cli
pop
mov
pop
js
popa
mov
push
jb
in
stos
lds
cmp
sbb
push
stc
out
jecxz
ret
xchg
movsb
or
mov
add
loopne
test
jg
fs
dec
rolb
lret
xor
mov
ja
test
or
in
ret
mov
addr16
push
rcrb
ljmp
in
or
ds
sbb
ljmp
out
nop
mov
pop
and
subl
or
ret
push
push
repnz
out
rcll
fnstsw
insb
or
xchg
stos
push
popa
aas
or
adc
push
jbe
lods
cmp
cltd
xor
add
inc
seto
push
inc
pushf
sbb
xchg
add
mov
xchg
push
xacquire
scas
jnp
and
jns
jmp
xor
jae
roll
mov
inc
cli
sub
test
sub
push
loope
call
test
cmp
push
sub
orl
xor
rorl
arpl
in
jne
mov
jecxz
add
mov
mov
lods
scas
jmp
cmp
mov
push
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
add
mov
pfrsqit1
mov
jo
les
mov
outsl
push
sbb
add
dec
jg
mov
sbb
mov
cmp
testl
push
pop
cmpb
test
mov
fldenv
mov
sub
aam
scas
add
and
push
pop
in
adc
fsubs
and
push
or
sti
add
insl
cmp
xor
mov
fisubrs
xchg
jl
mov
mov
rorb
pop
test
adc
cmp
xchg
adc
inc
mov
xor
dec
testb
incb
pop
or
dec
out
shrb
orb
jns
add
sbb
std
push
bound
pushf
lock
lret
cmp
out
xor
jbe
pop
mov
dec
sbb
dec
clc
scas
mov
data16
out
xor
stc
cmp
lea
mov
mov
push
fs
push
mov
add
loope
sub
inc
mov
jne
orb
test
subb
shll
fs
xchg
jmp
jbe
or
push
push
mov
dec
pop
mov
jg
aaa
cmp
aam
stos
insl
cmp
add
pushf
das
add
mov
push
mull
pop
sub
push
ss
inc
cmp
add
or
push
pop
sub
insb
dec
lods
or
dec
mov
loope
faddl
add
sub
int
or
mov
fidivrl
pop
daa
ret
nop
add
mulb
xor
lock
ljmp
fsub
or
lods
jns
ljmp
and
pushf
repnz
pop
or
test
mov
nop
lret
mov
inc
ret
call
mov
cmp
fisubrs
test
cmp
fildll
pop
fwait
in
movsb
cmp
iret
pop
add
fwait
ss
stos
addr16
mov
nop
mov
push
add
mov
adc
xlat
sti
mov
jae
adc
push
xor
push
leave
or
dec
cltd
pop
je
cmpsb
mov
pop
pop
inc
out
lods
sysenter
pop
mov
jg
jb
jns
fdivrs
add
notl
add
jl
cmc
sbb
ficomps
cmp
stc
in
bound
fistpll
adc
fidivrs
mov
cmp
ret
jp
lods
lods
pop
cli
or
out
mov
stos
stc
jecxz
nop
cmp
gs
gs
and
scas
adc
jmp
les
jae
adc
gs
xor
inc
ja
cmp
sub
fidivl
in
inc
daa
inc
cmp
nop
jl
sbb
scas
js
mov
and
jl
outsb
sbb
rorl
inc
shlb
sub
sbb
outsl
sub
cli
jnp
mov
in
cmpsb
pop
stc
lcall
js
pop
int3
into
fbld
adc
mov
xchg
jle
pop
ficoms
popl
pop
mov
ret
bound
popa
daa
cmpl
cwtl
cwtl
in
inc
ret
adc
addr16
jnp
dec
repz
fwait
cwtl
es
add
nop
pushf
mov
mov
out
stos
enter
jnp
adc
lahf
xchg
adc
or
sub
outsl
add
popf
out
lret
ss
es
in
adc
xchg
out
add
mov
add
inc
int3
inc
add
imul
sub
dec
inc
fsubs
add
nop
or
lea
jmp
daa
out
roll
dec
jmp
push
xlat
loope
xor
fisttpll
pop
or
sub
xchg
nop
push
dec
pushl
fmull
fwait
or
pop
js
push
aaa
and
adc
xchg
mov
mov
nop
flds
push
and
cmp
mov
rcrb
js
sbb
test
jle
sahf
bound
les
jge
push
adc
dec
fwait
pop
jmp
push
push
sbb
fs
or
sarb
push
mov
or
sahf
cmp
sbb
inc
push
inc
ja
bound
or
adc
pop
pushf
inc
or
out
jns
movsb
push
bound
cmpsb
fs
aad
outsb
bound
fwait
aad
dec
mov
rorb
pop
xchg
ret
sbb
enter
cwtl
or
jnp
fldt
mov
shr
daa
or
pushf
mov
pop
cmp
mov
in
fs
push
in
loope
fs
dec
push
xor
out
ret
adc
jp
cmp
call
adc
aaa
movsl
adc
arpl
cwtl
sbb
mov
imul
xchg
mov
cmpsb
shll
pop
mov
inc
inc
dec
cmpsl
xchg
imul
adc
sbb
pusha
divl
pop
out
xor
mov
xchg
sub
jecxz
cwtl
mov
ljmp
lahf
sub
stos
loop
push
dec
dec
cmpsl
ret
out
rcll
fidivrl
scas
aas
mov
fldl
shlb
popf
in
bound
les
lock
xchg
jge
xlat
fsubs
inc
call
sub
mov
mov
mov
cwtl
lcall
lret
cs
rclb
fsubrp
ret
ds
mov
pop
shrl
jge
addr16
xor
roll
push
std
jmp
insb
fldcw
testb
imul
lret
inc
mov
lea
lea
dec
dec
mov
jp
mov
dec
andb
jno
mov
inc
aaa
xorl
out
inc
cmp
inc
xlat
arpl
mov
and
or
and
mov
fs
mov
jmp
popa
outsl
fwait
aaa
sub
xchg
std
sub
loopne
ja
mov
sbb
mov
jge
ret
sbb
loope
out
cmovb
mov
jnp
jp
inc
inc
or
std
stos
nop
xor
mov
cmp
sbb
sbb
cmp
shrl
ja
push
mov
add
int
les
ret
jmp
sbb
push
mov
mov
loopne
lret
in
pushf
loopne
in
xchg
orl
repnz
push
test
stos
repnz
inc
xchg
test
cld
jns
or
mov
outsb
push
jae
adc
add
loope
es
push
jb
mov
dec
mov
sub
mov
pop
mov
mov
cmpsl
jbe
xchg
adc
stos
mov
popa
frstor
movsb
push
enter
fstpl
cmpsb
mov
lea
adc
push
insl
adcl
mov
cmp
stos
es
add
xor
and
and
aas
outsb
cmp
sbb
mov
mov
in
test
data16
int
lds
mov
insl
in
test
std
sbb
xor
pop
push
xor
mull
adc
repz
fcmove
mov
out
outsl
cmp
and
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
inc
adc
sbb
jo
xchg
adc
insl
cmp
arpl
loop
test
sbb
stc
imul
fldl
mov
mov
push
testb
pop
or
std
es
lcall
test
fwait
jnp
add
lods
jecxz
adc
add
push
and
addr16
out
or
int3
fwait
stos
mov
mov
lcall
ss
loopne
jmp
jno
outsl
ror
jno
xchg
adc
xchg
cmp
adc
rclb
mov
jl
jnp
cmp
loope
xchg
int3
adc
sbb
lret
dec
dec
add
out
lea
sbb
fs
ljmp
or
mov
inc
outsl
lea
xchg
nop
sti
cmc
mov
sti
repz
out
rcrb
aad
mov
mov
or
dec
ds
mov
dec
sbb
mov
sbb
jecxz
outsb
dec
mov
shll
cmp
or
inc
jbe
pop
lea
aas
or
sbb
xchg
lds
std
dec
jo
out
bound
sbb
fcomp
shrl
mov
lock
inc
pop
je
sbb
cwtl
aad
cmc
shlb
push
mov
arpl
cmp
jge
mov
inc
jb
or
loop
fs
xchg
imul
add
mov
imul
add
cmp
xchg
jmp
pop
rcl
lahf
shl
push
sbbl
imul
ss
data16
cmp
outsl
test
push
mov
mov
push
scas
stos
lret
negb
mov
test
dec
cmp
lea
xchg
push
leave
shrb
sub
jno
adc
dec
push
movsb
test
adc
popf
pop
adc
push
push
adc
adc
aad
xor
pop
adcl
mov
sbb
mov
mov
cmp
andl
addr16
inc
add
push
in
data16
js
popf
push
xor
lea
leave
adc
int3
and
and
mov
adc
bound
addl
shlb
cs
xlat
adc
mov
pop
add
pushf
inc
test
icebp
jecxz
cli
aaa
repz
pushf
test
aad
and
test
cmp
adc
rcrl
dec
xor
and
mov
out
push
or
inc
adc
cltd
inc
out
imul
lcall
repz
push
scas
out
mov
in
fimull
pop
out
mov
xor
push
cld
add
div
inc
adc
icebp
xchg
push
rcrb
lahf
movsl
lcall
or
loope
push
iret
dec
mov
cld
movsl
test
cmp
push
repnz
mov
stos
test
or
pop
cmpb
negb
sub
stc
ss
xchg
xchg
es
and
pop
add
mov
fisubl
fistps
xchg
aaa
ss
or
sbb
cmpsb
popfw
fisttps
jmp
movl
jecxz
cmp
jg
push
lods
fistl
adc
ficoms
inc
aad
cltd
jle
cmpsl
testl
mov
xchg
mov
and
push
add
or
cmpl
jmp
arpl
loope
push
outsb
cs
repnz
xchg
or
xor
push
loope
test
dec
adc
adc
das
or
jb
int3
or
gs
insl
cwtl
sub
bound
incl
pop
inc
pop
jle
pop
fisttpll
xor
mov
cli
xor
pusha
cld
mov
in
clc
and
psrad
or
sti
fidivs
pop
mov
aad
adc
inc
shlb
or
jp
sahf
mul
gs
mov
fsubrs
std
test
sti
cmp
icebp
cmp
or
int3
cmp
cltd
push
xor
cmp
fwait
repz
sbb
pusha
movsb
push
or
cmpsl
push
xchg
jb
lods
test
pop
je
xchg
dec
shrb
retw
or
arpl
sti
in
ror
xchg
int3
fists
repz
add
jp
mov
dec
das
xor
daa
rclb
cwtl
or
fwait
jecxz,pt
and
xor
or
aas
xorl
ljmp
outsb
xchg
lock
insl
popf
lcall
jle
jae
mov
stc
mov
push
data16
ja
in
mov
or
jge
in
je
popa
mov
lods
scas
dec
pop
das
cwtl
xchg
aad
clc
mov
and
jnp
mov
sub
mov
sti
dec
mov
dec
bound
sub
gs
dec
aam
pop
adcl
jle
insl
and
mov
out
jae
inc
inc
dec
and
popa
xor
rol
pop
fisubrl
and
jbe
add
int3
rorb
sti
fidivrs
loopne
xchg
enter
dec
lea
js
pusha
in
mov
push
test
xor
xchg
sub
cwtl
mov
jmp
shrb
frstor
pushf
int3
int3
aam
daa
jg
mov
int
dec
in
cmp
xorl
and
mov
aad
int3
xchg
mov
dec
popf
inc
int3
pop
push
mov
in
xor
xor
fisubs
push
and
les
mov
outsl
test
cmp
icebp
and
cs
cmp
mov
cli
sub
push
lret
xor
int3
mov
mov
sbb
xor
add
xchg
aad
jp
xor
rolb
pop
adc
outsl
push
fdivrs
mov
fwait
lret
sbb
dec
and
pop
movsl
ret
daa
inc
push
stos
add
sti
int3
out
pop
popa
sbb
cmp
jb
loope
movsl
dec
aam
std
sub
sub
rclb
fmulp
mov
jg
pop
push
or
sbb
xchg
sbb
jmp
jecxz
push
adc
js
xor
aam
inc
movsl
lret
pop
cmp
sbb
adc
scas
ret
push
cmc
and
test
xlat
mov
mov
pop
mov
imul
pop
mov
out
jecxz
fs
lods
add
out
fists
dec
aam
icebp
aas
fbstp
orl
addr16
rcrb
jae
sbb
inc
jo
orl
push
filds
push
fisubrs
xorl
inc
and
insl
nop
pop
mov
movaps
out
xchg
push
imul
imul
mov
mov
xor
push
roll
stc
sbb
sbb
pop
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
add
outsl
dec
ja
inc
lock
ljmp
roll
and
es
add
xchg
pusha
and
dec
gs
cmp
jb
pusha
sbb
inc
lretw
fcmovne
and
jbe
std
out
jns
jnp
mov
cmpsb
push
ret
aad
rolb
mov
dec
xchg
push
cwtl
mov
sti
or
dec
jb
pusha
jns
adc
mov
rclb
test
xor
or
loope
pop
test
fcomps
jae
jb
xor
push
push
adc
cli
loopne
inc
mov
add
stos
hlt
dec
hlt
sahf
inc
lods
mov
lret
hlt
scas
dec
hlt
in
fs
add
xchg
lods
and
add
sbb
mov
push
xchg
incl
or
addr16
je
ds
mov
push
pop
iret
push
int
sbb
out
sub
nop
sbb
movsb
in
dec
rcrl
jle
inc
and
inc
bound
mov
lods
frstor
mov
cld
shl
jnp
push
adc
popf
adc
push
pop
pusha
xor
repz
xchg
dec
mov
add
stc
or
enter
stos
mov
pcmpgtw
inc
jnp
lret
adc
lods
lcall
jecxz
and
sub
shlb
xchg
xchg
dec
jnp
xchg
mov
dec
inc
push
dec
adc
or
push
cmp
add
cmp
add
pusha
adc
fstps
ja
push
xchg
stos
scas
fdivl
dec
ret
xchg
stc
mov
outsb
and
negl
adc
imul
lods
cltd
dec
cwtl
js
jne
enter
mov
pop
push
insl
cmpsb
dec
add
dec
aad
and
int3
aam
push
sbb
mov
test
cwtl
les
lock
jno
push
push
sub
sub
out
in
sub
loop
orb
dec
push
hlt
cmp
add
jl
outsb
call
sub
jg
push
test
add
mov
xchg
sub
scas
add
push
xor
jae
test
std
jp
js
out
add
test
jmp
dec
dec
ret
pop
jnp
adc
ss
imul
xor
cmpsl
mov
sbb
add
cs
insb
dec
jae
inc
out
jmp
cmp
and
pop
adc
rcll
lea
icebp
lock
inc
aam
push
mov
das
aas
fidivl
xor
and
cmpsb
push
sub
loope
int
add
add
jae
fldcw
lock
insb
in
scas
test
ja
in
adc
lret
jp
faddl
inc
outsl
cli
sub
icebp
jg
rorl
xchg
fidivrs
push
pop
push
cmp
xor
lret
and
fimull
mov
shl
fmul
sbb
xchg
stos
fwait
daa
jne
hlt
dec
ficompl
imul
mov
into
cmp
adc
fistpl
movb
insb
xchg
mov
sub
xchg
mov
pusha
das
loop
repnz
dec
fbld
add
dec
add
repz
adc
xlat
push
lods
mov
xor
sar
xchg
mov
cwtl
mov
insb
pushf
pop
in
pop
cmp
orb
mov
fsubl
jo
out
cmp
fwait
ret
or
push
pop
std
fwait
test
cli
pop
out
fcmovne
inc
mov
cmp
std
xlat
push
xchg
pushw
xchg
push
jmp
orl
xchg
das
orb
in
rcl
out
cmp
push
nop
xchg
sbb
aas
jg
dec
mov
shl
mov
mov
pop
mov
and
loopne
cmp
out
outsb
jae
or
fidivs
or
xor
push
mov
js
cmp
test
aam
push
ror
stc
mov
push
pop
fs
fmul
mov
and
xchg
sub
cmp
mov
fisubs
pop
scas
xchg
dec
addr16
out
cmp
push
mov
lahf
sti
iret
xlat
lcall
pop
mov
push
rcll
sub
sub
loopne
jl
ret
xchg
sub
in
adc
loope
popa
andl
inc
fwait
pop
cmc
loope
out
imul
int3
xchg
stc
xchg
cmc
rcl
jo
mov
mov
inc
and
scas
xor
sbb
xor
xorl
iret
push
mov
inc
push
sub
mov
mov
and
repz
aas
ss
mov
dec
or
dec
add
out
lret
lret
push
dec
stc
xor
xor
inc
xchg
or
fisubrl
addr16
xchg
aad
sbb
stos
sbb
mov
jmp
mov
fchs
xor
shlb
adc
mov
push
adc
out
cmp
cmp
leave
cmp
mov
das
mov
mov
into
cmp
sbb
data16
xor
icebp
mov
mov
clc
push
mov
lahf
jne
enter
rorl
mov
in
cmc
ret
push
insb
stos
or
inc
subb
aas
adc
subb
imul
jmp
rol
jg
or
jmp
push
cmpsl
fidivl
sub
mov
int3
sbb
cmc
nop
push
out
aaa
jmp
xor
and
clc
les
mov
dec
movsb
pop
sahf
inc
icebp
push
fldl2t
fsts
jb
sbb
push
mov
mov
pusha
in
or
scas
shlb
mov
jno
lret
push
incb
ret
je
popf
in
sub
and
mov
movsl
jae
adc
sub
pop
jb
cld
fcmovnbe
popa
enter
data16
jbe
inc
push
mov
inc
xchg
adc
data16
mov
fwait
cmp
push
orl
aas
call
repz
inc
ss
push
fucom
shr
andb
and
pusha
pop
mov
in
xchg
push
jge
imul
xlat
xchg
loopne
rolb
sti
adc
pop
fsubs
adc
push
call
add
ljmp
sub
mov
pop
and
lods
sti
sbb
adc
push
push
outsl
and
insb
mov
or
add
xchg
call
fidivrl
scas
mov
test
jg
push
jne
roll
mov
cs
jae
mov
jne
into
out
mov
popa
push
stos
sti
pop
sub
sbb
mov
pushf
iret
inc
in
lods
fnop
xchg
pop
inc
leave
sbb
and
dec
pop
adc
nop
stc
sub
in
clc
xor
push
adc
mov
mov
mov
mov
pop
xor
mov
push
inc
inc
lea
mov
gs
dec
out
xchg
mov
mov
neg
add
repz
jecxz
fisubl
and
xchg
xchg
lss
fbstp
cmp
push
aam
pop
xchg
dec
cltd
jae
mov
dec
insl
mov
sbb
push
and
fcomps
push
mov
out
addl
fstps
and
push
xchg
fcompl
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
dec
sbb
mov
cmp
ja
test
ficompl
pop
dec
arpl
in
dec
rorb
adc
loop
icebp
mov
mov
into
pop
sahf
lods
ja
dec
pop
nop
clc
and
bound
jp
cltd
idivb
mov
xor
jg
mov
inc
outsb
popf
out
test
jp
push
cli
xor
mov
jb
jecxz
mov
test
icebp
in
jb
loopne
cmpsb
stos
enter
loop
mov
push
lods
in
sub
adc
pop
aas
ss
xor
les
out
sub
inc
cmp
push
fs
dec
jmp
cmp
mov
add
jb
ja
jne
insl
arpl
mov
xchg
inc
gs
addr16
shrl
aam
es
repz
imul
std
xchg
pop
mov
mov
dec
imul
sbb
jmp
and
insb
pusha
xchg
xchg
cmp
or
mov
imul
nop
cltd
xlat
mov
mov
cmpsl
push
xchg
mov
jle
fidivrs
push
popa
pop
add
sub
sub
int3
das
xlat
xchg
ds
into
adc
or
icebp
inc
add
fisubl
and
jo
mov
mov
fmull
inc
dec
in
aas
push
clc
mov
filds
pop
sbb
sahf
pop
in
jnp
push
gs
pop
out
jmp
aaa
lods
mov
mov
imul
push
ljmp
push
movsb
dec
rcr
popf
repnz
stos
cmp
mov
int3
repnz
lahf
addl
add
daa
clc
push
ret
pop
mov
imul
jb
dec
ror
nop
fdiv
js
dec
jmp
insl
daa
lret
mov
or
dec
inc
cmp
mov
test
sbb
jnp
lea
cltd
popf
mov
mov
lods
jns
cmpsl
in
pusha
xor
cs
jno
sbb
and
test
add
cmp
js
jne
cmpl
add
pop
jbe
jge
dec
or
add
sub
mov
movsl
mov
aas
jl
pop
test
lcall
popf
jbe
jb
mov
ret
cli
test
cmp
mov
enter
xchg
pop
ret
fildll
add
xlat
mov
stos
push
or
ss
clc
incb
xchg
inc
fsub
push
mov
pop
mov
jo
inc
mov
dec
nop
sti
fwait
arpl
add
mov
cmp
push
add
outsl
scas
pushf
push
mov
mov
jnp
sahf
mov
cmp
in
cs
fimuls
sbb
lods
imul
pop
loop
or
lcall
ja
lcall
push
sbbb
and
mov
cmp
mov
sbb
cmp
or
repnz
cmp
mov
fsubrl
adc
inc
mov
fsubs
ret
cmpsl
sbb
push
sbb
out
adc
adc
cmpsl
sub
popf
lods
sbbl
cmc
add
mov
out
xlat
cmp
orl
test
or
and
adc
cmp
pusha
push
jecxz
mov
cmc
insl
and
cwtl
jo
loop
xchg
arpl
jbe
aad
mov
cmp
pusha
movsl
ljmp
jl
xchg
push
xor
movsl
dec
es
mov
call
addr16
cli
push
aam
sbbb
out
lret
xchg
lods
pop
pop
iret
fsubrp
dec
push
ljmp
dec
sbb
mov
bt
fsubrs
stos
imul
add
or
dec
sbb
mov
pushf
inc
test
cli
outsb
push
fsub
xor
es
xchg
idiv
add
inc
cmp
test
fmull
adc
add
nop
cs
and
cmp
xchg
xchg
mov
clc
adcl
dec
pop
adc
fimull
pop
sbb
lods
sarl
inc
xor
into
stos
sub
sbb
and
cwtl
rcrl
pop
push
stos
mov
xor
aaa
lcall
xlat
mov
sbb
in
push
notl
dec
mov
cld
mov
fdivl
dec
stc
push
aas
fiadds
jge
fcmovbe
mov
mov
jle
aad
dec
inc
jne
xor
pop
out
and
jg
inc
jb
outsl
push
pop
lods
inc
xchg
mov
push
dec
lahf
out
jecxz
test
inc
lods
and
add
xor
fs
pop
cmp
pop
sub
cmpsb
test
mov
mov
jbe
jle
stos
pop
dec
mov
mov
movsl
jp
lret
daa
mov
adc
xor
mov
lea
gs
fs
lods
outsb
mov
fadd
faddl
imul
fiadds
cwtl
out
mov
dec
or
adc
dec
subb
popf
data16
call
pop
test
test
out
mov
sub
pop
les
pop
ficompl
pop
sarb
daa
xchg
imul
push
jno
pop
lahf
fidivrs
dec
shll
lcall
dec
cmp
dec
pop
push
inc
pop
and
adc
stos
push
repz
cld
out
and
inc
or
scas
loopne
call
dec
repnz
cmp
cmp
pop
add
unpckhps
out
subb
out
mov
shll
push
sarb
xchg
shll
dec
mov
pop
sti
test
mov
mov
dec
jnp
pop
ljmp
adc
stos
out
cmc
jbe
movsb
mov
in
adc
mov
loopne
sti
inc
aad
xchg
pop
lock
inc
jnp
jmp
in
ljmp
mov
je
push
mov
fwait
push
jbe
xchg
push
loopne
fidivrs
fstl
sub
iret
shl
jp
or
call
ds
lock
rorl
ss
pusha
jns
mov
inc
mov
lock
mov
jmp
pop
xchg
pusha
mov
mov
lahf
mov
dec
xchg
enter
pop
das
cmpsl
xor
xor
jge
push
ud2
mov
rorl
sahf
lock
movsl
add
pop
add
cmp
mov
push
mov
cli
imul
jl
dec
testb
jg
outsb
and
pop
push
mov
pop
inc
add
mov
sub
jb
std
pop
ja
std
data16
lds
fnsave
push
fsub
sti
pop
in
cld
test
mov
lds
mov
or
jge
mov
lahf
popf
and
cltd
inc
push
push
lods
int3
lret
loop
cmpb
cld
fs
xor
mov
cwtl
xor
adc
idivl
mov
cmp
dec
std
ret
stc
xor
repnz
lcall
mov
loopne
xchg
pusha
mov
push
push
push
es
fs
fcoml
mov
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
jl
adcb
psubb
das
pusha
sub
in
repnz
jne
dec
inc
push
dec
adc
adc
dec
cmp
sbb
sub
mov
mov
orl
lea
push
mov
jg
clc
mov
mov
call
sbb
out
push
add
cwtl
mov
push
int3
bswap
mov
pop
test
pop
cmp
mov
clc
or
jmp
lcall
stos
jecxz
jns
xchg
insl
xchg
mov
ja
call
fdivr
arpl
xchg
add
jnp
scas
into
xlat
jne
rcrb
loop
mov
mov
mov
sub
xchg
rcll
cmp
mov
insb
pusha
fimuls
inc
jo
lea
int3
addr16
push
inc
sub
sti
mov
jno
jge
test
repz
mov
and
lahf
xor
aaa
adc
jbe
loope
clc
dec
inc
mov
xor
mov
and
sbb
xor
or
rorb
popa
lcall
dec
repnz
fstps
sahf
loop
pop
jle
adc
enter
dec
iret
mov
movsb
out
pop
fs
and
fsubl
popf
jb
jg
dec
das
sub
ja
dec
ds
jg
fbstp
insb
pop
fsin
and
imul
xchg
lcall
or
repz
out
fldl
arpl
shl
pushf
mov
xchg
sbb
mov
add
ret
mov
jno
jae
push
push
aam
adc
mov
and
inc
pop
pop
push
mov
ds
mov
lea
push
mov
xor
pop
xor
xchg
jns
dec
std
mov
fdiv
cld
stc
inc
mov
mov
cmc
sbb
inc
sahf
push
add
inc
sub
pop
cmp
jae
test
sti
test
mov
sub
add
fadds
clc
or
and
decl
pushf
pop
stos
xor
rcrl
adc
xchg
dec
js
fs
push
jne
or
je
rcr
and
test
push
push
cmp
push
add
sub
fdivp
nop
scas
sahf
fadds
sbb
xlat
clc
pop
into
out
adc
or
cltd
movsb
enter
iret
and
pop
loope
mov
push
push
xchg
out
out
mov
movsb
adc
fbld
mov
ret
sub
and
aam
int
div
dec
dec
push
cmp
in
adc
mov
insb
dec
mov
mov
xor
xor
fmul
inc
in
push
movsl
pop
movsb
xor
mov
adc
adc
testb
nop
out
or
sub
rcll
jl
fwait
adc
arpl
jno
pop
xchg
lahf
loope
fsub
hlt
rcll
or
mov
cmpsb
je
pop
icebp
pop
cmpsb
sub
addr16
inc
sahf
sub
jbe
ljmp
mov
lds
mov
xchg
nop
fsubrl
xchg
push
dec
pusha
in
dec
repz
mov
mov
sub
les
ss
push
lcall
ljmp
and
addr16
addr16
mov
inc
inc
popa
pop
aas
test
sbb
sub
pop
inc
xchg
mov
cmpsl
shl
stc
adc
or
ljmp
mov
lcall
mov
push
cltd
stc
in
xor
imul
mov
ds
je
dec
adc
cmpsl
and
aas
test
pop
rorb
mov
cmc
rolb
lods
sbb
xchg
ret
lock
mov
push
push
test
in
and
shll
leave
mov
shrl
or
orb
jae
fwait
bound
jbe
xchg
inc
push
mov
outsb
jle
or
and
mov
xchg
pop
or
fiaddl
push
loopne
dec
std
addr16
adc
pop
loope
es
in
std
push
xchg
and
mov
push
int3
add
cltd
xor
jg
fcom
adc
inc
orb
and
add
es
add
repz
in
lods
dec
dec
or
dec
ljmp
xlat
sbb
and
mov
add
repz
aad
out
mov
dec
stos
adc
pop
mov
xchg
insb
fadds
xchg
adc
sbb
lret
in
mov
add
shrb
dec
pop
fdivs
inc
sbb
repnz
push
out
add
add
xor
aam
cmp
ljmp
push
mov
add
ret
add
mov
xchg
sahf
in
cmp
pop
push
mov
loop
mov
leave
mov
pusha
dec
add
xor
jge
mov
pop
jp
lods
insb
popa
xchg
fisubs
mov
loope
mov
lea
adc
xchg
inc
adc
outsb
or
clc
mov
insb
xchg
in
pop
popa
lret
pop
adc
jl
xor
daa
sub
arpl
and
out
movsb
cmc
inc
sub
sbb
aam
mov
fdivs
pop
mov
cmp
ss
lea
mov
or
in
loope
sbb
shlb
jle
inc
loope
notl
repz
and
gs
cli
movsb
arpl
mov
sub
pop
xor
shrb
jo
jbe
scas
pop
bswap
lret
xlat
stc
out
sub
inc
mov
lea
dec
fadd
out
mov
mov
cmp
sub
inc
or
mov
outsl
pop
out
ds
cmp
xor
clts
daa
lods
push
pop
repz
loopne
popa
xchg
iret
mov
test
movsb
repz
out
in
fdivl
dec
shlb
stos
xchg
imul
cmpsb
std
pop
or
or
inc
stc
imul
jmp
pop
repz
add
gs
daa
mov
mov
ret
push
mov
repnz
pop
mov
dec
mov
arpl
mov
jbe
xor
pop
push
xchg
or
ljmp
femms
js
mov
cwtl
subb
scas
mov
les
mov
jne
out
fcomip
cmp
pop
aam
insl
and
xor
out
in
pop
out
sub
adc
imul
out
push
xchg
xchg
mov
inc
je
fldt
fcomps
stc
call
into
movsb
imul
pop
scas
or
inc
fiaddl
aam
leave
cmc
stos
push
mov
dec
dec
fistpll
cmpsl
stos
pop
add
scas
xchg
add
nop
or
jne
sub
mov
out
clc
leave
add
add
mov
nop
orl
out
into
push
std
sub
loop
fs
and
ret
outsb
pop
inc
jae
cmp
lds
imul
mov
mov
out
or
inc
fabs
or
pop
mov
inc
xchg
dec
stc
cmp
call
xchg
sar
sub
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
movb
ja
xor
mov
inc
jmp
mov
dec
adc
xchg
inc
mov
mov
xlat
test
xchg
mov
mov
sbb
jl
xor
mov
insl
call
aad
inc
cs
movl
ficoml
in
mov
jae
pop
subb
mov
and
inc
lea
sbbb
xchg
mov
mov
movsb
jmp
pop
mov
negb
push
xchg
mov
addr16
popl
loope
repz
repz
xchg
ret
stc
sub
decl
jnp
dec
inc
arpl
push
fldl
sub
jecxz
mov
cmpsl
jle
inc
add
in
std
shr
cld
jle
cmc
sbb
fld
cld
cld
lods
or
ljmp
mov
dec
addr16
je
mov
sbb
aad
jns
and
push
aas
movsb
jns
mov
inc
and
inc
cmpsb
sbb
push
jne
rolb
pop
cmp
or
push
xchg
xor
add
int
mov
xchg
fs
lds
lods
and
pusha
lret
ret
arpl
inc
sbb
std
cmpsl
mov
and
out
clc
in
adc
mov
mov
jns
pop
outsl
pushw
mov
push
pop
fstp
int3
sub
add
sti
cmp
out
jns
jge
sbb
sti
mov
scas
xor
xchg
fpatan
xchg
fnstcw
and
or
push
mov
in
bound
inc
ficompl
clc
pop
sub
mov
in
jge
scas
dec
es
ljmp
idivl
aaa
ljmp
or
xor
cli
mov
clc
loope
dec
jmp
shr
ds
fstpt
pextrw
xchg
mov
add
push
jmp
inc
shlb
jmp
in
push
pop
rol
mov
clc
fs
mov
push
adc
fucomi
mov
shlb
cmpsl
out
pop
mov
jp
incb
rolb
loopne
push
mov
push
mov
push
nop
mov
adc
shlb
cli
xlat
push
insb
aas
ljmp
rorl
mov
ss
les
fcomps
popf
push
insl
xor
cs
ret
cmp
mov
push
lods
lds
xlat
into
cli
popa
jns
and
or
jge
shll
sbb
mov
mov
bound
adc
les
mov
std
ret
mov
push
cmp
test
jbe
push
push
fsubs
dec
cmp
or
out
dec
jecxz
inc
sti
sub
std
push
int
js
icebp
jae
pop
iret
xchg
int3
fistpl
pop
add
xchg
fwait
data16
dec
mov
and
das
add
sub
aam
test
or
mov
xor
cmp
sub
sbb
sahf
lods
mov
cmp
sub
aam
xorb
mov
loopne
push
bound
inc
sub
mov
or
cmpsl
add
pop
add
sub
les
xor
pop
push
mov
std
mov
ja
stos
sub
cmp
adc
cld
sub
repnz
fsubrl
cs
daa
xor
xor
fcoms
ja
inc
inc
xchg
xor
push
mov
push
cmpsl
scas
mov
loope
icebp
and
fldenv
xor
lcall
cltd
movsl
xor
xor
xor
jbe
mov
jo
addr16
add
inc
sbb
loop
repz
cmp
fsubl
cli
push
lods
ret
addr16
pusha
mov
xlat
fsubs
popw
add
xchg
rcrb
jmp
sbb
xchg
cld
jne
popa
push
dec
mov
mov
cmpsl
cltd
fs
adc
pop
inc
ficoms
mov
mov
in
orb
aad
loop
dec
arpl
and
dec
sub
enter
loopne
insl
xor
jge
jl
push
std
movsl
xchg
inc
jp
lahf
scas
aas
movsb
cmc
jl
pop
xor
add
orb
adc
addb
sti
cli
loope
mov
cmp
bound
xchg
add
mov
js
fwait
popf
shr
imul
adc
jns
push
mov
lods
xchg
lahf
dec
outsb
out
mov
inc
fdivr
lret
pop
or
inc
in
pop
inc
sahf
popf
rcll
adcb
pop
xor
ret
aaa
xlat
push
push
mov
or
nop
sub
dec
popa
lar
xchg
orl
mov
cwtl
mov
les
in
pop
jmp
divl
jno
popf
mov
jmp
filds
clc
inc
mov
loope
lds
push
in
or
pop
cmp
movsl
insb
pusha
mov
lods
repnz
pop
xor
xchg
repz
rcll
mov
verw
pop
fwait
sahf
cmc
insb
ret
loope
push
push
jno
testl
mov
push
sub
mov
jno
inc
movsb
mull
fdivrl
fistl
push
xchg
pushf
cmpsb
mov
adc
addr16
jl
sub
pop
in
xor
sti
xchg
outsl
cli
mov
mov
out
and
cmp
decb
pop
fwait
mov
dec
lcall
jns
lahf
push
aam
jmp
and
jmp
cmp
lret
fs
or
testb
sbb
mov
dec
cmp
das
sbb
pop
test
sarl
psllw
lea
in
adc
jae
hlt
mov
fdivs
and
addr16
into
sti
and
loopne
lcall
pop
je
mov
sbb
sbb
sbb
dec
inc
sub
outsl
add
ds
and
mov
inc
mull
ds
push
adc
pop
xchg
popf
loopne
fmul
or
dec
jo
enter
enter
or
icebp
mov
or
out
sub
pop
int
cltd
xor
pop
es
lods
outsl
adc
out
adc
js
leave
outsb
rclb
inc
repnz
aam
rcll
jl
inc
fimuls
clc
scas
dec
mov
mov
inc
push
push
aaa
out
test
pop
xchg
out
xchg
and
fsubrs
lret
dec
jl
sbb
inc
js
jle
imul
pop
movsb
dec
pop
out
push
pop
or
loope
iret
ret
adc
aad
mov
push
adc
push
leave
pop
insb
push
stc
jne
iret
push
pop
std
notb
mov
imul
mov
ljmp
inc
cmp
sub
mov
pusha
clc
dec
add
test
repz
inc
je
hlt
push
insl
out
int
nop
ret
mov
mov
sub
shrl
pusha
adc
jne
insl
scas
stc
xchg
sarb
pop
xlat
fmuls
push
dec
mov
lret
mov
and
nop
mov
orb
loopne
aad
or
dec
insb
pop
adc
sub
rcrb
xchg
and
lods
jle
adc
lcall
repnz
lock
jmp
xchg
cmp
xor
or
addl
shl
imul
jmp
add
or
or
adc
xchg
add
cltd
mov
jne
xor
xchg
pushf
stos
shr
and
add
sub
add
sub
push
fstpt
movsl
mov
loope
out
loop
das
xchg
jmp
jecxz
jnp
or
push
or
cli
push
ds
pop
filds
and
xchg
push
popa
push
or
xor
sbb
imul
sbb
add
xchg
aas
ret
jmp
lock
jmp
push
shr
pop
aam
xor
leave
pop
mov
jl
pop
dec
ss
push
pop
mov
clc
scas
push
mov
cmpsb
ljmp
movsb
mov
xchg
stos
mov
hlt
addb
in
out
scas
insb
xchg
lea
mov
pop
fisttpl
mov
rcr
xchg
xchg
push
dec
call
inc
pcmpeqd
aaa
mov
xor
mov
pop
inc
cltd
ja
cmc
lods
xchg
mov
sbb
inc
or
test
mov
add
mov
popf
jl
jo
int3
mov
cmp
inc
shl
adc
jmp
sub
fistl
sub
pop
lret
sbb
add
arpl
cld
cs
pusha
push
repnz
pop
movsl
daa
ds
in
les
scas
xor
cmpsb
pop
out
cmp
xchg
scas
lds
dec
je
dec
dec
addl
stos
pop
repnz
mov
sub
inc
dec
icebp
pop
xor
cmpsb
cltd
xlat
fmull
jne
ret
fiadds
pop
inc
fmuls
loop
mov
popa
sub
cwtl
xchg
add
enter
and
sub
lret
hlt
ret
adc
xor
or
fcomi
push
int3
hlt
clc
and
roll
dec
aad
pop
sbb
jno
and
in
cmc
xor
scas
xor
sbb
scas
or
xchg
outsb
and
xchg
or
cmp
dec
jge
sub
or
adc
loop
push
xor
sub
loop
mov
sbb
dec
mov
inc
xchg
jne
mov
stos
xchg
xor
jb
into
cmp
push
pop
mov
push
fmul
cmpsb
jne
roll
mov
es
jbe
push
push
mov
imul
inc
inc
push
cmpsl
int
and
cmp
shl
rolb
and
dec
sub
lods
fistps
fwait
cmp
mov
jne
xor
in
sbb
leave
jge
lds
xor
cli
mov
aas
stc
std
sbb
ds
ret
push
ja
lds
pop
dec
stos
mov
lods
push
pop
push
cmpsl
out
pop
or
mov
cltd
add
lahf
movsl
loopne
inc
sub
sbb
pushf
lahf
cs
inc
or
mov
nop
int3
adc
ficoms
sbb
aaa
inc
sbb
lods
sub
sub
andl
jge
out
jmp
mov
and
jecxz
cmp
pusha
cld
xchg
sbb
repz
imul
mov
mov
pop
adc
dec
insb
xor
jg
into
adc
addr16
push
push
cwtl
inc
sbb
cmp
pop
mov
xchg
cmp
xchg
jp
xchg
std
out
sbb
cmc
mov
cli
jl
xor
sub
push
xor
rcl
clc
sti
ret
outsb
push
cmp
cmpsb
xor
mov
popf
mov
mov
movsb
mov
jl
loopne
pop
mov
cmp
or
dec
xchg
ja
call
jecxz
push
outsl
add
dec
imull
xor
stos
icebp
ljmp
sbb
arpl
mov
jg,pt
addr16
inc
add
es
sub
cwtl
add
fsubl
xchg
xor
dec
leave
cmpsb
pop
jno
ljmp
in
or
cli
cmpsl
clc
xor
lahf
test
pushf
adc
lahf
add
jp
out
roll
imul
loope
adc
mov
sbb
loope
sbb
mov
daa
iret
aas
clc
xchg
pop
lcall
clc
outsl
push
jo
inc
jmp
fcompl
jle
dec
adc
and
pop
movsb
cmp
fisubrl
cmp
xlat
jecxz
test
icebp
pop
cmp
inc
test
push
xchg
fcmovnbe
pop
data16
jno
lds
pop
adc
mov
mov
leave
cmpsl
cmp
lods
stos
jge
xor
mov
or
ja
loope
mov
aas
shrl
mov
xchg
lcall
pop
xchg
sub
xor
dec
iret
add
mov
mov
mov
push
xor
sbb
cmc
out
push
negl
dec
sub
cmp
sub
stc
mov
mov
in
inc
adc
cli
jl
test
cmpsl
jns
sahf
outsl
or
fwait
xor
cwtl
out
pop
sahf
and
in
ds
jae
daa
popf
add
mov
and
jmp
fldz
cld
sub
sbbb
pop
arpl
sbb
or
push
mov
gs
fsubr
fbld
push
mov
mov
adc
aad
push
or
ljmp
inc
or
stos
pop
push
in
xchg
jmp
push
movsb
filds
andb
in
ficompl
fcompl
imul
sub
jne
into
int
movsb
loop
pop
movsb
les
test
or
add
cmpb
js
cmp
mov
loope
add
cmp
and
out
dec
test
test
jp
cmp
and
fwait
mov
loop
out
cmp
mov
pop
fnsave
lock
pop
lcall
push
xor
test
rclb
and
or
xor
mov
push
out
roll
cmp
dec
cwtl
and
mov
pusha
xchg
push
sub
call
sub
sti
daa
dec
std
subb
lret
mov
inc
or
inc
sahf
push
vucomiss
ret
sahf
mov
fcompl
sbb
jl
scas
jae
notl
fsubr
push
mov
loope
cmpl
setg
lahf
mov
lcall
cmp
jmp
pushf
sub
add
outsl
cltd
dec
sub
jbe
test
dec
int
fs
adc
lods
cmpsb
lahf
jb
addl
mov
ja
cli
dec
fidivrl
push
mov
mov
sbb
insb
xchg
rorb
mov
rorb
cmpsb
fildl
pop
xchg
or
jmp
adc
adc
test
int3
fwait
adc
in
cmpsl
cmp
shrb
movsl
jb
pusha
out
cmc
xor
jp
jmp
dec
and
pop
in
je
mov
cs
cmp
cltd
cmp
jb
pop
dec
sub
pusha
mov
push
popa
stc
lods
test
xorl
cli
movsl
loopne
dec
das
data16
jg
jns
mov
cld
jo
out
divb
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
pop
cmc
adc
xchg
pop
mov
cld
xchg
pop
inc
xchg
push
arpl
lret
stos
cltd
pop
sub
adc
call
outsb
sbb
sbb
das
xor
je
les
jne
xchg
cmp
xchg
shr
adc
push
int
sub
mov
int
and
iret
xchg
add
pop
and
rcrb
mov
enter
pop
sub
add
clc
adc
ss
into
pop
lret
or
dec
jne
mov
ljmp
out
push
jae
pop
dec
fs
sbb
sub
cmp
mov
movsl
leave
outsl
sub
xor
imul
test
les
dec
xchg
mov
push
xchg
movsb
sbb
jp
stc
sbb
es
or
fsubr
mov
orl
loopne
mov
bound
sbb
jmp
lock
sub
movsl
pop
mov
les
ja
lock
xor
add
pop
iret
jge
xchg
pop
imul
push
loope
pop
xchg
inc
stos
cmp
push
js
ljmp
call
loopne
mov
mov
sub
pop
sbb
sbbb
icebp
cld
inc
pusha
shll
leave
pop
sbb
sbb
xchg
ljmp
sbb
das
add
pop
aam
cmp
sbb
jbe
fdiv
dec
dec
mov
push
jle
mov
push
adcl
jecxz
daa
sbb
xchg
nop
enter
fcomps
inc
push
inc
and
adc
movsb
jl
icebp
mov
cmp
pusha
fcmovnbe
aam
mov
ja
adc
push
adc
pop
sbb
inc
lods
push
mov
stos
pop
jmp
sub
enter
adc
roll
inc
jb
xor
aas
xlat
lahf
push
lcall
mov
and
in
test
cltd
lock
xchg
psubusw
bound
xchg
bound
repnz
and
mov
push
mov
and
mov
sub
cs
loop
test
daa
test
daa
and
xor
sahf
nop
mov
sub
int3
xor
cwtl
xor
lds
mov
or
mov
push
adc
xchg
and
imul
out
stos
sbb
cmp
xor
jmp
arpl
xchg
js
sub
mov
faddp
inc
mov
adc
lock
and
stos
push
xor
cli
lea
outsl
lret
adcl
lahf
pop
adc
flds
repz
mov
push
int3
cmp
mov
in
mov
push
pop
add
repnz
je
pop
lahf
mov
adc
daa
lea
cmp
pop
cld
mov
cmp
frstor
pop
pop
mov
or
xchg
inc
shlb
je
sub
jecxz
adc
xor
clc
adc
jp
mov
sbb
add
jo
pushf
jae
test
repz
repnz
out
cs
fcoms
test
clc
les
lret
fstpt
or
sbb
mov
hlt
ja
xchg
aad
jne
das
inc
lods
and
xchg
cld
sbb
xchg
fcmovbe
rcrl
ja
mov
mov
jg
push
sub
cmp
data16
adc
aad
jmp
mov
scas
mov
xchg
or
mov
rcl
mov
push
push
or
test
addl
cs
orl
dec
fsubs
cmp
dec
mov
repz
cmp
ss
sub
sub
xchg
ret
adc
push
xor
mov
aad
push
lock
jecxz
in
mov
les
xchg
push
popa
mov
cmp
cmp
in
loopne
jnp
out
dec
in
sbb
pop
test
jnp
jno
shlb
js
test
jle
jno
clc
sub
cmpsb
xor
aaa
mov
or
pop
lds
rcrb
sar
sbb
mov
call
sbbl
sub
ret
roll
pop
pop
mov
dec
xlat
cmp
icebp
cmp
dec
pop
stos
inc
cld
inc
mov
dec
pusha
jg
into
cmc
inc
sbb
cmpsb
es
dec
out
call
inc
test
loop
mov
es
stos
jae
push
lea
ljmp
loope
cmp
orl
stos
mov
push
lret
xor
into
ja
sub
dec
sar
cwtl
pusha
movsl
out
jbe
cmpsl
ror
lds
mov
dec
lds
jno
cmp
lea
cmp
imul
mov
in
aaa
adc
cltd
daa
cmp
adc
dec
adc
mov
lods
xor
in
push
fstps
xchg
fs
push
adc
aad
jns
nop
sub
aas
mov
sbb
pop
iret
pop
jbe
dec
push
out
mov
shrl
popa
mov
cmpsl
rorb
leave
sbb
pop
ja
sub
ljmp
cwtl
popf
xchg
sar
cmpsb
mov
push
mov
jno
add
out
ret
mov
pusha
pop
shl
pop
hlt
sbb
mov
ret
jo
mov
inc
cmpl
jp
push
aaa
adc
lods
shl
jg
xchg
pop
pop
add
pop
push
mov
in
mov
stos
xrelease
or
pop
add
loop
scas
jae
inc
jmp
cmc
cld
fisubs
mov
loope
inc
addr16
cmp
and
sbbb
aad
jo
jecxz
pop
jnp
and
xorl
std
repz
inc
ds
loopne
jb
pop
enter
ret
jb
inc
xorb
fisubs
xor
ror
jle
cltd
inc
shll
mov
cmpsl
flds
push
sahf
daa
rcll
mov
jnp
sub
mov
jp
hlt
add
xchg
mov
sbb
cs
out
fldcw
and
pop
aas
ss
push
and
cs
adc
jp
xor
fiadds
xchg
icebp
bnd
ds
sub
pop
push
xchg
xor
mov
dec
cmc
cs
xchg
lahf
push
sub
cmpb
xlat
aaa
mov
rcrb
jno
shlb
test
neg
fisubs
mov
jnp
in
insb
sahf
mov
in
hlt
test
xchg
xlat
fbstp
leave
jb
int
pslld
mov
xchg
push
movsl
in
test
clc
fistl
enter
sbb
fdiv
lcall
and
out
and
mov
pushw
in
sahf
fucomi
cli
add
push
roll
or
dec
lds
pusha
cmp
push
fwait
cld
dec
cwtl
push
jae
fdivrp
stos
loopne
mov
cmp
roll
test
dec
popa
jmp
cmpsb
push
xchg
nop
leave
shll
scas
pop
sbb
lea
and
dec
fisubl
xor
lods
mov
push
mov
dec
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
mov
add
rcrl
jge
xor
loope
mov
jl
or
data16
js
sbb
mov
sub
and
lods
mov
stos
mov
lret
xchg
call
mov
mov
jnp
jae
leave
mov
std
ljmp
scas
and
mov
adc
loope
inc
add
lods
lds
adc
std
fsub
out
jle
sub
mov
rorb
xchg
nop
fstpl
sbb
sub
mov
xchg
mov
cs
sub
mov
sub
mov
sbb
js
int3
cmc
js
imul
lea
xor
sbb
add
jno
push
insl
iret
pop
lds
jl
int
int3
pop
adc
or
or
movsb
adc
outsb
cmp
push
or
cmp
cmp
and
dec
test
push
data16
cli
adc
and
pcmpgtb
mov
js
adc
cmc
xchg
mov
ja
shr
shrb
or
addb
mov
movsl
pop
ja
push
fbstp
bound
xchg
pop
hlt
push
xchg
jno
lret
bound
sbb
lock
hlt
pmaxsw
adc
mov
cltd
bound
xlat
lret
into
rcl
xchg
dec
xchg
adcl
leave
jle
pop
adc
add
push
push
and
and
das
insl
xchg
loopne
cli
ds
lcall
push
repnz
js
mov
stos
lahf
mov
inc
push
fildl
xor
jle
sub
dec
es
dec
mov
mov
daa
push
mov
in
fcom
mov
sub
xchg
add
cmp
mov
cmpsb
or
inc
jp
cs
leave
pop
dec
push
jg
add
xchg
clc
add
loopne
cmp
inc
lea
mov
or
bound
jp
rol
xchg
xchg
xlat
insb
pop
bnd
ret
scas
fisubrl
push
repz
cmp
shrb
stc
xor
stos
fs
xchg
gs
daa
push
lds
jecxz
into
sub
cmp
mov
aas
fwait
xor
or
sub
dec
xor
cld
out
addr16
insb
pushf
jp
scas
sub
dec
les
mov
sahf
sti
decl
or
add
xlat
xor
idivl
xchg
pop
leave
push
lret
leave
sbb
popa
mov
inc
push
mov
fucom
add
push
mov
divl
nop
rcr
or
and
ljmp
shlb
mov
or
sbb
in
xorb
mov
pop
fdiv
push
adc
xchg
loop
mov
mov
frstor
jg
xchg
shrb
and
loopne
inc
jp
push
js
outsb
lods
mov
dec
push
pop
jp
cltd
xor
and
test
in
sahf
leave
scas
imul
pusha
shl
adc
dec
imul
outsb
fstp
sarl
loope
movsl
pop
mov
cmp
fwait
pop
mov
lods
sbb
push
dec
dec
adc
std
and
add
sbb
adc
cmc
xor
inc
push
or
rorl
mov
addb
jbe
and
repz
insb
std
aam
ud1
mov
lret
and
cmpb
lds
dec
xchg
xor
jnp
jnp
call
mov
xchg
mov
xchg
sbb
adc
sbb
sub
jno
pop
dec
cli
stos
subb
incb
in
adc
aam
jnp
jb
jp
in
mov
dec
cli
pop
sub
sahf
int
cmp
cli
test
sti
dec
cmp
add
jbe
add
iret
cmpsb
jns
jg
in
dec
fisttpl
jns
add
das
cmpsl
fldenv
icebp
std
adc
call
int3
stos
dec
cwtl
jnp
dec
int3
pusha
lds
push
xchg
jmp
insb
mov
stc
pop
jecxz
icebp
push
sahf
sbb
xchg
out
dec
pop
mov
test
mov
xchg
cmpsl
mov
outsb
popa
testl
and
mov
sbb
add
je
push
pushl
jbe
mov
cmp
rclb
cmpsl
mov
es
mov
mov
add
divb
sbb
dec
outsl
and
push
sarl
int
cwtl
daa
and
or
bound
repz
das
pop
jl
and
das
adc
loopne
stos
sub
cwtl
mov
mov
adc
mov
lcall
gs
or
xchg
cmp
sub
sub
scas
clc
jb
in
loope
int3
xor
inc
cld
lock
mov
mov
push
sbb
leave
in
xor
mov
test
inc
orl
lcall
sbb
jne
mov
add
sub
mov
add
cmp
mov
jno
aad
pushf
gs
and
imul
lahf
insl
fistpl
push
rclb
icebp
shr
mov
mov
jnp
leave
push
xchg
rorb
int3
mov
sub
mov
loop
push
adc
and
cmp
int
mov
dec
or
arpl
test
add
ss
test
adc
in
xor
mov
sub
fcoms
ret
sub
cwtl
ret
or
adc
mov
sub
jae
lahf
cmpb
test
sbb
mov
int
pop
js
and
inc
scas
jmp
dec
popa
mov
cmp
mov
jns
xchg
sub
mov
xchg
jl
mov
cmc
fcompl
je
and
mov
cld
push
adc
cbtw
fnstcw
pushf
out
sub
inc
std
vmovddup
mov
mov
incb
and
mov
daa
inc
outsb
add
xchg
test
sub
lret
push
ret
outsb
push
xor
push
testl
jp
aas
stc
lods
sbb
dec
enter
nop
cltd
and
sub
pop
ret
xor
out
fstpl
sub
cwtl
push
mov
pop
sbb
in
inc
cmp
or
add
mov
mov
mov
jl
enter
icebp
fimull
sbb
in
es
cmp
inc
sub
cmp
add
adc
and
daa
mov
sub
fistpll
aaa
subl
pop
sar
stos
cmp
push
mov
xor
cmp
mov
lcall
inc
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
out
bound
roll
rol
mov
mov
jl
xchg
xor
in
test
cmp
stc
xor
add
pushf
in
xchg
sbb
mov
stc
push
dec
sbb
pop
nop
mov
fisubrl
or
jo
dec
fwait
fwait
and
mov
cmp
xor
cmc
iret
orb
mov
sub
and
mov
or
push
xor
das
jno
stos
dec
cmp
inc
fstpl
mov
mov
jns
scas
jg
cmpsb
xor
inc
mov
push
and
dec
jne
or
xor
mov
pushl
jle
cmp
add
fistl
adc
imul
test
outsl
lock
push
jb
push
test
push
repz
fimuls
sbb
sti
sbbb
pop
or
sub
jb
mov
popf
fbld
cmp
cmp
and
xchg
dec
inc
jb
or
xor
das
aam
inc
in
adc
movsb
cli
subb
cwtl
push
sbb
orb
cltd
lret
xchg
cmp
outsl
cmp
mov
mov
push
repz
ds
jo
inc
sub
mov
mov
das
adc
test
push
mov
repnz
cmp
gs
fdivs
xchg
imul
adc
jb
xor
xor
shlb
sub
int
push
call
xchg
cs
cmp
inc
mov
insb
mov
fisttpl
out
xchg
arpl
es
addr16
adc
xor
cmp
xchg
fiadds
adc
inc
popf
mov
out
mov
adc
cmp
push
push
jnp
gs
lds
xor
lods
pushf
pop
addr16
std
xchg
dec
jae
dec
sahf
push
andl
sub
push
repz
repz
pop
int
mov
mov
push
dec
inc
rorl
and
or
pop
xchg
sub
ss
daa
rclb
and
pushf
leave
or
jno
lea
inc
loopne
fs
sti
mov
push
test
push
xchg
pop
scas
mov
jb
out
stos
adc
iret
cwtl
push
ljmp
ja
dec
xorb
sbb
jne
sbb
add
pop
inc
ret
mov
aas
or
xor
out
dec
data16
iret
jl
loop
aad
mov
mov
icebp
test
or
sub
in
mov
leave
test
stc
in
cmpb
insb
sub
fcmovb
dec
or
and
sbb
adc
jns
out
mov
or
dec
dec
sub
sbb
jl
jmp
incl
adc
int3
imul
int
in
dec
mov
sahf
dec
push
push
fmul
xchg
sbb
mov
jns
and
cmp
add
js
sbb
push
movsl
dec
sub
push
cld
or
lret
push
sub
and
icebp
sub
dec
stos
out
data16
inc
add
jns
lret
out
adc
or
pop
hlt
outsb
mov
mov
aas
xchg
notb
cmp
loope
scas
push
shl
adc
stos
or
lods
aam
mov
test
sub
rcl
movsb
mov
mov
sub
dec
pusha
cmc
stos
push
mov
stos
mov
jp
bound
out
or
popf
pop
insb
icebp
push
mov
lret
lcall
jmp
xchg
shll
movsb
popf
xchg
mov
test
lods
lods
xchg
fildll
popa
popf
hlt
sub
lods
and
pop
add
jp
iret
jb
test
jns
mov
jle
cltd
sbb
pop
and
out
sub
out
test
in
jno
xchg
bound
iret
lea
lea
pop
out
mov
inc
add
es
inc
pop
and
out
push
mov
pop
mov
jmp
mov
jb
clc
push
fmull
jno
ret
sbbb
and
mov
addr16
pop
movsb
lcall
std
or
clc
jbe
ljmp
jecxz
sub
imul
js
sbb
add
ret
movsl
hlt
sub
sub
lret
lahf
jae
jecxz
in
xor
xchg
sbb
fcompl
add
sbb
sbb
aas
sub
mov
dec
cmp
dec
cmp
out
push
fcoml
mov
idivb
adc
outsb
test
add
test
ds
movsb
cmpsb
push
lret
or
inc
shl
popl
ds
xchg
xor
mov
mov
pminub
cld
jle
loop
mov
cmpl
std
add
addr16
sarl
addb
push
jp
mov
insl
loope
pop
outsb
push
mov
repz
mov
cs
std
inc
stos
pop
out
xchg
jl
popl
xor
push
ja
andl
lahf
lock
bound
iret
shlb
lods
dec
nop
xchg
inc
js
enter
push
stc
adc
push
jle
jo
fidivl
loopne
mov
leave
shrl
inc
mov
test
sub
dec
sub
cmpsl
arpl
lcall
outsl
stc
and
insl
mov
pop
push
pusha
ljmp
mov
adc
dec
cmpsl
lret
adcl
xchg
ret
pop
xchg
outsl
push
inc
orb
dec
and
imul
fsubrs
clc
pop
clc
arpl
aas
mov
les
popa
ja
add
mov
pop
test
rcrb
ljmp
or
cmp
inc
fdivrs
sbb
clc
or
out
lahf
push
jg
push
int3
jge
loop
jns
negb
jnp
popa
mov
xchg
ljmp
xor
mov
mov
mov
xchg
popf
pop
or
mov
loope
cmc
mov
js
xchg
or
push
cmp
mov
jo
loope
sbb
aaa
mov
mov
sahf
adc
lret
pop
mov
sbb
pop
mov
push
jnp
fildll
sub
pop
ss
xchg
push
add
imul
cs
lods
aam
and
jmp
fisubrs
cwtl
add
ljmp
outsl
dec
mov
sti
pop
lock
add
adc
mov
lret
enter
je
cmp
xor
popf
bound
adc
mov
xor
mov
sbbb
ror
test
push
outsl
cmc
jg
ljmp
outsb
cmp
fcoms
ret
adc
xlat
xorl
iret
test
out
jg
jnp
push
outsb
adc
xor
out
jae
mov
jl
rep
data16
adc
call
je
inc
mov
push
adc
ja
mov
sbb
add
cmc
out
divb
int3
sbb
cltd
lea
xchg
daa
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
adc
dec
scas
lret
pi2fw
call
xor
hlt
mov
mov
das
or
or
xchg
jbe
jno
xchg
jecxz
dec
xor
iret
mov
mov
mov
push
pushf
dec
push
int3
mov
aad
outsl
enter
mov
in
adc
shlb
ret
jmp
cmp
sbb
dec
push
dec
mov
pop
sub
lds
jp
scas
out
dec
scas
test
jo
xorl
dec
or
popf
inc
jmp
push
lcall
outsb
xor
dec
gs
dec
jne
xchg
cld
pusha
fldenv
out
dec
aas
repz
jae
ljmp
mov
mov
push
sbbb
cwtl
loope
test
test
xlat
sti
jno
cs
daa
mov
repz
sbb
je
iret
js
pop
repnz
fwait
push
fildll
into
inc
mov
jns
sbb
sbb
mov
in
or
dec
or
shll
mov
cmp
cld
rorb
and
rolb
xor
adc
push
xchg
inc
popa
inc
cmp
add
cmp
sarb
dec
out
testl
loope
in
movsl
incb
push
shl
rcrb
out
out
or
int
jae
dec
hlt
dec
pop
test
xchg
fistl
cmpsb
cmp
ret
js
mov
cmp
mov
lods
push
add
xor
xchg
mov
inc
into
or
push
push
jmp
aaa
xchg
sbb
mov
inc
dec
aam
mov
les
iret
add
mov
xor
and
mov
test
sub
cmp
or
testl
arpl
andl
scas
adc
cltd
add
xor
mov
adc
jp
sti
dec
push
imul
scas
mov
xor
jbe
sub
repnz
arpl
and
sbb
jne
or
jl
lock
or
pop
fwait
sahf
lret
lcall
push
daa
jbe
jnp
and
dec
imul
psllq
insb
mov
sbb
es
in
dec
mov
sub
stc
pushf
stc
and
push
sti
pop
sub
jg
mov
mov
fdivs
hlt
push
outsb
sub
mov
ljmp
push
xchg
jnp
xchg
mov
push
nop
lock
mulb
adcl
jbe
add
fistl
mov
sub
add
mov
cmp
ficoms
or
jp
cmc
mov
outsb
sbb
mov
jne
scas
fadds
jno
dec
push
fnstsw
add
test
nop
call
adc
and
out
pop
test
jnp
mov
stos
pop
adc
push
pop
pop
cli
jno
xlat
cmp
mov
sahf
jbe
outsl
daa
nop
repz
jge
out
pop
adc
jmp
scas
fists
mov
lcall
lcall
cmp
cmpsl
fabs
call
mov
in
xchg
mov
mov
push
mov
pusha
pushl
xor
andb
sbb
addb
subb
insl
dec
add
xchg
clc
push
imul
fnsave
aaa
xor
fwait
out
out
dec
out
mov
lds
int
pop
mov
nop
fcmove
stos
call
enter
sbb
jg
add
mov
mov
ds
std
je
pop
add
stc
add
or
and
repz
pop
xor
dec
nop
cmp
pop
cmpsb
push
bnd
loopne
pop
ds
repnz
xchg
lods
stc
jne
adc
pop
fadds
push
mov
mov
sbb
rcll
xchg
cmpl
cmp
pop
mov
mov
jo
jecxz
jne
addr16
pushf
outsb
inc
mov
mov
inc
test
push
xor
inc
dec
outsb
cs
push
jmp
test
out
and
lods
dec
pop
movl
mov
xlat
ljmp
lcall
cmp
and
push
addr16
adc
lods
scas
sub
lods
jp
xor
call
add
jg
adc
mov
cmpsl
push
pop
inc
out
movb
divb
mov
pop
mov
ds
mov
sbb
ret
xorl
pop
or
xchg
add
jmp
adc
shrl
jns
fidivl
in
and
lock
xchg
mov
push
ret
js
std
les
add
mov
imulb
shll
sbb
and
sahf
iret
aaa
mov
jo
adc
xchg
dec
es
daa
test
jns
mov
out
ficoms
push
xchg
imul
xchg
cmp
je
ror
mov
fiaddl
mov
mov
fistpll
daa
in
imul
mov
sub
adc
adc
pop
and
dec
jmp
jbe
cmp
jmp
xor
into
ret
es
lods
jnp
stos
dec
jb
sub
data16
psubw
iret
out
cmpsl
rorl
push
in
loope
xor
es
jmp
sahf
fisubl
mov
imul
fwait
and
pmaxsw
pop
dec
xchg
enter
mov
pop
sbb
rolb
add
jns
xor
xlat
std
enter
cltd
or
push
add
sbb
mov
sub
scas
and
sbb
aam
repnz
in
rolb
add
int
fadds
shrb
int
xchg
xchg
xor
stc
out
cwtl
push
lock
aas
mov
pop
mov
test
popf
pop
inc
xor
stc
dec
fwait
ss
scas
push
mov
clc
sub
xchg
xor
pop
dec
insl
push
mov
popf
cmp
jmp
arpl
xchg
aas
push
sarb
pop
jge
dec
pop
psubusw
xor
sbb
popa
aam
lods
xor
lahf
mov
mov
cmc
fldt
cwtl
mov
mov
leave
xchg
jmp
xchg
lret
xchg
repz
xchg
ja
sub
xor
addl
das
add
dec
movsb
or
mov
out
jmp
xchg
inc
insb
cwtl
cwtl
sbb
fldenv
mov
pop
mov
or
pushf
jl
cld
push
mov
out
dec
imul
sbb
xchg
jnp
hlt
out
xchg
psrlw
mov
add
enter
adc
lret
xchg
sbb
push
lods
lods
push
xlat
sub
loope
fisttps
dec
pop
sbb
mov
lods
stos
fwait
or
sub
out
mov
hlt
ja
cli
xor
jecxz
jo
add
in
sub
or
aam
pushf
push
dec
stos
xor
out
rcr
dec
push
jecxz
aad
or
rolb
fdivs
xchg
lret
sarb
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
das
stos
js
mov
pminsw
xorl
mov
test
or
lods
sbb
movsb
mov
cltd
sbbb
inc
sbb
and
data16
cmp
out
inc
ljmp
dec
xor
cltd
mov
cmpb
call
popf
add
cmp
cli
mov
or
idivb
and
out
and
lcall
loop
stos
fsubp
and
mov
mov
xor
shlb
jae
mov
dec
daa
pop
jne
imul
mov
mov
push
jge
cmp
add
add
cmpsb
push
enter
mov
xor
mov
lock
gs
push
popa
fsubrl
jno
xor
and
xchg
cmp
sub
lret
fsub
cmp
out
mov
int
dec
cmp
jns
xchg
sti
test
mov
jno
test
and
insb
sbb
xchg
adc
iret
or
sbb
daa
push
rol
and
xchg
jp
es
imul
inc
jg
push
stc
adc
je
inc
pop
call
test
fstps
xor
and
mov
mov
into
daa
clc
lods
int
jns
int3
bswap
dec
and
imul
lea
negb
test
push
push
addl
aas
incl
mov
movsb
push
mov
sub
adc
into
pushl
or
outsl
ljmp
sub
mov
mov
inc
mov
add
push
push
hlt
in
xor
fisubrl
icebp
cli
mov
dec
and
cmp
bound
and
inc
hlt
dec
nop
mov
icebp
cmp
or
dec
xchg
fldenv
mov
jecxz
adc
dec
cmp
cmpsl
sub
or
mov
jns
fsubp
cmp
mov
cli
fnstcw
xchg
adc
std
in
cmp
sbb
mov
mov
mov
add
add
push
sub
dec
jmp
and
add
jne
fiaddl
jmp
adc
mov
pop
jge
pop
push
out
popf
fs
cmp
mov
dec
outsl
andl
ret
mov
out
fcom
psllw
fstpl
cmpsb
stos
cwtl
and
jle
cmp
out
js,pt
mov
test
push
shll
push
cmp
inc
jmp
mov
push
add
inc
popf
mov
loop
cmp
sbb
jl
adc
dec
sarb
pop
mov
and
jb
push
inc
out
xor
lods
iret
xor
xchg
xor
xstore-rng
cmpsl
inc
mov
lcall
out
int3
shrb
insl
mov
mov
pusha
or
pop
xor
bound
div
test
push
mov
xchg
jmp
loop
cld
inc
pop
adc
push
inc
hlt
dec
leave
mov
mov
jae
xchg
mov
add
scas
jle
sub
fmull
stc
inc
rolb
lds
push
and
lahf
insl
fiadds
mov
gs
pop
shrl
xchg
jno
sub
dec
lea
daa
jnp
lea
pop
jo
pop
out
std
jecxz,pt
adc
cli
mulb
pop
xor
inc
js
in
push
inc
loopne
push
mov
mov
cmp
dec
cmpsl
mov
and
cmp
pop
push
jge
stos
cmpsl
inc
jo
cmpb
fsubrp
push
mov
ljmp
arpl
jnp
shl
nop
std
lcall
mov
push
ret
dec
fidivl
data16
out
fwait
or
cmp
push
adc
ljmp
aaa
lret
popa
sub
dec
clc
rcrb
push
insl
sub
shll
fistl
cli
or
aad
mov
push
movl
jnp
sbb
sbb
adc
add
pop
push
xchg
cmp
or
fsts
loope
into
ja
aad
imul
push
inc
push
xchg
lods
jnp
mov
xor
movsb
movsb
push
mov
mov
movsl
sbb
cs
sub
cwtl
test
mov
xchg
pop
gs
test
enter
cmp
call
inc
add
or
mov
pusha
mov
mov
fcmovb
dec
lahf
xchg
mov
stos
cld
or
lods
ficoml
jo
jmp
add
mov
xorl
jb
jne
out
xchg
cmc
adc
add
out
negl
push
sahf
push
adc
sbbl
loopne
daa
adc
sub
cli
add
mov
push
pop
sub
mov
in
ja
or
mov
leave
rcll
adc
dec
popf
scas
mov
push
outsl
xor
cmp
lods
sarl
fistl
or
mov
push
or
dec
jnp
stos
faddl
jne
push
xor
push
stos
push
or
xchg
test
idivb
popa
in
int
cmpsb
aas
adc
or
jne
loop
or
sbb
int3
lea
or
xchg
js
jl
fsub
pushf
adc
cltd
js
jge
and
push
push
inc
test
cmpsb
pop
jecxz
xor
xor
mov
sbb
xchg
adc
mov
xchg
xchg
cs
inc
stc
adc
mov
in
sbb
divb
lds
mov
jns
xchg
or
outsb
xchg
repnz
repz
ret
push
push
push
jne
mov
pop
dec
test
movsl
jb,pn
sbb
cmp
call
push
popf
mov
adc
in
inc
mov
pop
stc
shrb
mov
rcll
pop
popa
sub
cmc
out
ret
mov
inc
sub
test
add
out
cmpsl
push
sbb
or
pop
cmp
mov
and
push
push
hlt
fs
rorl
sbb
mov
dec
and
loop
dec
and
mov
xlat
data16
mov
out
mov
test
push
jle
cmp
test
mul
cmp
pop
jbe
mov
and
ja
mov
xchg
jno
xor
leave
mov
add
xchg
jmp
pop
jl
shrb
xor
adc
add
or
mov
lcall
mov
xor
sub
psrad
test
pop
in
cwtl
rorl
in
fwait
cli
jo
and
neg
scas
popf
insl
and
push
pop
and
xchg
mov
mov
ficomps
shll
jne
mov
adc
gs
pop
pop
sub
jnp
jnp
sarl
or
jns
and
and
jg
mov
out
dec
std
out
pop
dec
mov
mov
sarl
nop
ljmp
cmp
ret
iret
les
shlb
push
jg
lahf
movl
scas
cmpsl
pop
rcrl
mov
cli
or
mov
psadbw
dec
sbb
ds
fsqrt
repnz
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
dec
mov
ja
icebp
cmpsb
popa
repz
test
fistpl
jecxz
xchg
imulb
in
fcomps
jp
or
push
clc
xor
pusha
mov
aaa
pushf
xchg
mov
gs
xchg
cmp
sbb
imul
stc
sbbb
xor
jne
cmpsb
ret
mov
adc
mov
imul
jb,pt
cwtl
mov
push
jno
sbb
fistps
sti
xorb
mov
jl
fcmovnbe
stc
and
inc
lret
mov
push
inc
insl
stos
lods
scas
and
shlb
jb
out
mov
sub
dec
lret
jmp
dec
inc
stos
rcrb
lds
rcr
pushf
fists
pop
jmp
fs
mov
and
push
mov
cmp
loopne
in
fistpll
arpl
mov
cmpsb
mov
push
pop
inc
sbb
jnp
cmp
insb
mov
push
cmp
sub
daa
mov
das
hlt
jmp
sub
je
jo
int
and
test
pop
jg
data16
lock
sbb
inc
cmp
repz
add
xchg
and
jo
sub
mov
leave
mov
push
or
gs
js
bound
mov
mov
ret
mov
rclb
pop
adc
ss
ret
sub
jecxz
loop
hlt
inc
dec
ja
sub
pusha
add
dec
rcll
fidivl
and
sub
enter
arpl
pop
mov
xorl
sub
stc
cmc
outsb
popl
pop
fidivrs
or
sbb
pop
ss
xor
mov
repz
movsb
and
or
cli
rcll
pop
repnz
xor
scas
fs
add
andb
mov
and
sbb
inc
lods
insb
js
sub
or
mov
cld
ds
in
test
popf
cmp
rorl
mov
push
push
mov
cld
sub
mov
pop
push
mov
sbb
test
idivl
jae
aaa
sbb
pop
mov
fdivrl
dec
lret
push
mov
jecxz
mov
aam
rcrb
cli
pop
push
jno
inc
ss
pop
xchg
mov
outsb
cmp
fadds
cmp
jecxz
stos
and
je
push
rcrl
andb
aad
test
mov
cltd
inc
jecxz
scas
adc
sub
fbstp
push
sbb
leave
rcrb
xchg
out
ds
xchg
idiv
jnp
fwait
pop
or
xor
fwait
movsl
mull
scas
incl
rorb
popf
mov
sbb
nop
mov
sbb
fistl
aas
andl
xchg
cs
mov
pusha
push
inc
aas
and
mov
pop
cmp
sti
lods
mov
fsubr
inc
xor
test
xorb
dec
jo
cmp
and
inc
fildll
and
push
loop
push
aas
incb
les
mov
loopne
mov
fists
push
outsb
mov
int
aaa
rcll
les
sub
mov
cmc
ljmp
rcr
jg
cmc
fstpl
outsl
or
inc
push
xor
out
mov
movsl
pop
or
mov
fld
sub
jbe
jbe
sti
cmc
mov
pop
jae
push
decb
sbb
emms
and
and
push
mov
push
inc
sahf
in
loope
ds
adc
setg
mov
push
jp
in
stos
adc
stos
daa
pop
sti
movsl
push
imul
andb
push
cmp
movsb
imul
push
xor
arpl
pop
xchg
inc
dec
lods
pop
dec
arpl
arpl
xor
push
jecxz
dec
movl
ficoms
mov
imul
mov
repz
cmp
jo
fmuls
pop
dec
aas
andl
push
and
mov
repz
test
rclb
xchg
inc
sbb
inc
adc
cmpsl
xor
sahf
int
pusha
cmc
mov
add
fidivl
std
jbe
sti
or
loop
les
jl
leave
dec
imul
pop
jnp
js
xchg
stos
out
adc
add
adc
jmp
js
insb
mov
out
dec
mov
push
in
lret
pushw
mov
dec
ss
fwait
and
mov
pop
pop
push
loope
insl
ja
leave
inc
push
ds
or
jnp
flds
cwtl
es
xlat
hlt
int
cwtl
in
imul
icebp
or
dec
add
orl
addr16
pop
xrelease
out
push
scas
jae
ja
jl
cld
jo
sbb
push
jae
add
ljmp
mov
xor
jae
lds
dec
mov
scas
inc
xchg
or
lret
test
psubd
xor
adc
pop
dec
fs
int
pop
addl
sarb
int3
mov
add
out
rclb
int3
inc
push
fucomip
movsl
xchg
mov
addb
mov
lret
loope
imul
dec
pop
mulb
sbb
push
mov
xchg
adc
or
xchg
push
in
dec
add
mov
mov
call
int3
ss
mov
in
andl
lds
or
mov
push
add
cmp
fldpi
scas
mov
cmc
out
xchg
insb
jle
mov
shr
inc
sbb
stos
xor
repnz
jmp
push
repz
fsin
cmp
jmp
popf
movsl
xchg
mov
mov
pop
std
push
fldt
or
pop
outsb
fadds
mov
push
cli
xlat
xor
xor
aad
xchg
in
in
jge
sub
hlt
jnp
jmp
cli
xor
cmpl
gs
cmp
xlat
push
fadd
jno
test
sbb
add
insl
adc
hlt
test
inc
push
xor
mov
dec
je
sbb
sarl
aas
add
inc
test
btr
push
cmc
scas
pop
xor
test
ret
inc
lea
les
mov
pop
add
ss
dec
dec
push
cmpsl
pop
add
test
mov
sbb
sbbb
mov
cmpsb
mov
pop
inc
pushf
leave
jae
test
mov
mov
stos
in
sbb
shlb
rcrb
pop
les
inc
je
test
rol
je
pushf
data16
xor
cs
mov
int3
xchg
mov
imul
mov
les
sbb
xchg
cmpsb
fcoml
adc
xor
mov
mov
xchg
icebp
push
adc
jnp
inc
ret
or
mov
test
rep
jno
sbb
in
stc
in
sbb
ja
push
lea
movsb
mov
push
push
and
inc
xchg
mov
lock
loopne
out
dec
mov
cltd
mov
loop
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
pop
cmpsb
rclb
ja
mov
dec
bound
dec
inc
imul
ds
jp
cmp
pop
pop
fucomp
xlat
imul
cwtl
insb
add
bound
jg
sub
mov
fwait
pop
fcmovbe
adc
sahf
outsl
ds
test
mov
ret
or
cld
popf
fidivs
push
xchg
loope
das
xchg
jle
std
jae
js
mov
js
dec
xor
imul
or
push
adc
mov
dec
bound
enter
and
fstpt
sti
cmpsb
push
xchg
aas
mov
dec
dec
in
inc
imul
xchg
push
lahf
xor
sub
cmp
mov
mov
mov
adc
push
das
cmp
ja
pop
stc
jle,pt
jo
loopne
movsb
cmp
mov
lret
push
in
loopne
pop
sbb
ljmp
ss
faddl
lcall
add
and
mov
push
inc
add
std
int
sub
lods
jg
das
mov
or
adc
aam
es
pop
aas
pushf
mov
test
fs
mov
pop
inc
insl
mov
les
and
jl
push
pop
mov
enter
ds
mov
add
push
in
fisttpll
cld
pop
inc
mov
test
pop
daa
inc
push
fbld
push
add
dec
inc
stos
push
cli
imul
push
dec
js
jbe
inc
xor
outsl
jnp
adc
sub
adc
aam
push
stc
fs
jo
mov
ja
add
idivb
stos
nop
ficomps
mov
icebp
loope
push
xorb
popl
fsub
cmp
sbb
rcll
movsb
mov
fnsave
adc
mov
sub
xchg
mov
loope
xor
jno
test
rorb
hlt
or
jl
shrb
or
insb
adcl
sahf
sub
popf
lods
out
shr
jp
dec
addr16
ret
pop
xchg
sbb
mov
push
xor
cmp
lods
pop
into
dec
xchg
sti
fstpt
test
sbb
faddl
add
mov
in
pushf
push
mov
mov
iret
pop
addr16
lods
les
int3
fisubrs
sub
jle
xchg
sbb
lahf
fstl
mov
cmpsb
mov
dec
scas
aas
mov
push
sub
push
sbb
inc
mov
mov
cmp
clc
imull
adc
add
mov
push
jmp
xor
mov
aad
enter
mov
mov
push
ja
dec
push
sbb
lods
cmpsb
pop
sbb
mov
jb
bound
das
fistps
and
mov
pslld
movsl
cld
sbb
fs
std
add
addr16
inc
shr
adc
xlat
fidivrl
cli
scas
mov
into
mov
ret
ficoms
clc
movsl
push
sbb
mov
clc
mov
mov
lods
lcall
add
mov
pop
fldl
push
or
setns
push
push
loop
ffree
stos
or
and
cmp
xchg
rolb
mov
dec
jno
xchg
pop
and
sub
xor
addr16
dec
mov
sbb
jecxz
add
push
popfw
mov
xchg
pop
nop
xor
push
inc
xchg
cmpsl
hlt
ret
push
jo
inc
sar
pop
jne
jmp
or
jp
inc
mov
test
movsl
mov
repz
cmp
out
in
je
xchg
incb
fistl
lods
xor
fnstenv
scas
xchg
mov
sbb
call
movsl
mov
mov
mov
add
jge
mov
call
pop
and
mov
jbe
xchg
add
lcall
dec
jmp
xchg
mov
pop
jecxz
xor
in
or
movsl
and
int
sbb
mov
mov
ss
mov
mov
gs
jmp
pop
lods
xlat
add
sarb
dec
push
and
mov
dec
lret
lret
movsb
sub
adc
add
loopne
int
jnp
xchg
enter
rorl
or
add
repnz
and
pop
sbb
dec
jmp
push
and
dec
js
jl
gs
enter
ljmp
imul
cmp
outsb
cmpsl
aas
xchg
inc
xorb
jl
lea
lcall
mov
insb
and
repz
xchg
mov
rcll
fiadds
outsb
repnz
mov
imul
lret
adc
sub
inc
loope
sub
lret
lds
mov
inc
data16
sub
movsl
je
dec
jle
jne
mov
pushf
lret
mov
push
push
mov
mov
outsb
add
xchg
push
push
lret
imul
aas
imul
xchg
das
in
mov
shlb
add
lock
mov
sbb
pop
test
fdivrl
imul
inc
mov
leave
dec
jge
fsub
into
xchg
fstpt
fisubl
insl
in
inc
or
fcmovnbe
lds
sarb
std
out
inc
aaa
push
insl
xchg
ret
pop
mov
xor
pusha
int3
pop
fnsave
call
into
test
ret
hlt
mov
push
scas
sarb
mov
adc
call
jl
stos
fisttps
in
icebp
mov
mov
pop
gs
addr16
mov
adc
mov
ds
jge
test
jecxz
stos
sub
cmpl
xor
pop
ret
cwtl
jne
sti
lret
adc
mov
jl
ret
cmp
or
xchg
mov
push
fistl
inc
imul
push
in
or
lea
scas
leave
loop
loopne
scas
lahf
pop
sub
and
jno
sub
in
sbb
pop
add
mov
ret
mov
sbb
and
jle
shr
or
jb
inc
lcall
adc
std
mov
sub
out
cmp
inc
or
test
popa
sbb
push
shll
mov
mov
or
cli
add
xchg
aad
mov
out
out
sbb
and
or
ja
xchg
dec
pop
fbld
or
jb
or
movsl
mov
adc
cmpsb
pushf
dec
movb
popa
mov
sub
stos
cmpsb
loope
mov
adc
cltd
xchg
leave
xchg
stos
shll
xchg
xor
xchg
sarl
mov
cli
and
notl
push
or
inc
es
jge
push
sub
outsb
and
idivb
cmp
addl
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
mov
inc
mov
mov
invd
push
insb
pop
inc
lret
into
mov
push
jae
jne
sub
nop
pop
outsb
mov
or
sub
testb
xlat
add
jnp
shll
ljmp
inc
xor
push
and
cmpsb
mov
push
outsb
loope
ljmp
cmp
pusha
out
test
pop
subb
cmp
mov
adc
mov
aaa
pop
outsb
xchg
in
decl
xchg
pop
mov
das
push
pop
xlat
aaa
imul
push
pop
in
sub
inc
mov
ja
aad
sbb
cwtl
dec
aam
xchg
push
xor
aad
insb
aam
and
jecxz
and
mov
xchg
enter
pushf
insl
push
aam
jmp
sub
push
xchg
sub
dec
lret
push
mov
mov
xor
lahf
jg
pop
adc
cmp
cs
stos
or
xchg
lock
cmc
std
and
add
lock
pop
mov
mov
fldt
or
ret
jle
cltd
mov
cmp
orb
pop
and
push
fildl
dec
or
ss
sbb
incl
and
adc
mov
fucom
fdiv
or
jb
sbb
fistpll
adc
inc
cli
push
dec
dec
imul
xchg
and
adc
jne
fs
sbb
pop
mov
in
insl
and
add
sub
pop
mov
xor
fbstp
dec
xchg
test
sbb
mov
mov
cmc
xorl
cltd
enter
or
xchg
cmc
andb
rcrb
test
popa
out
jno
pushf
xlat
sti
dec
push
mov
hlt
push
xchg
or
mov
adc
xchg
push
pop
loop
fs
mov
jno
inc
imul
adc
pop
popf
popa
out
cmc
icebp
sti
fimuls
pop
xchg
pop
testl
sbb
sub
nop
fbstp
je
pop
stc
dec
loopne
jno
popf
mov
aas
jecxz
xor
and
mov
xchg
push
push
call
jnp
xor
dec
std
out
xchg
pmaxsw
mov
xchg
pop
dec
add
scas
pop
fdivrs
fwait
xor
stc
push
push
ret
and
add
imul
sbb
lea
jg
iret
jbe
cmpsb
xchg
inc
jge
mov
into
cmpsl
mov
xor
cmp
inc
or
add
fwait
iret
push
inc
mov
xor
cmp
adcb
push
enter
and
int3
adc
xorl
js
push
dec
hlt
enter
sbb
cmp
lea
or
sub
cmp
xor
int3
inc
outsl
jbe
test
xchg
movsb
and
push
iret
lret
jae
in
cmpsl
xor
pushf
rol
icebp
xchg
out
jle
sarl
scas
jge
adc
sub
loopne
iret
push
mov
sarl
mov
inc
lods
sbb
and
shrl
call
aad
xchg
fwait
xchg
push
cmp
inc
fucom
or
int3
push
pop
xor
fisubrl
movsl
jb
xchg
mov
mov
loope
ja
inc
and
add
sbb
cltd
andl
mov
mov
inc
aam
mov
inc
insl
adc
cmp
movsb
sub
test
insl
insl
cli
mov
das
arpl
sbb
dec
push
sarb
mov
popa
test
cmp
ret
scas
and
xor
push
push
and
fimull
fmulp
xor
out
mov
imul
push
jnp
movsl
jns
imul
xchg
jle
jnp
jge
xchg
fnclex
pushf
cld
cmp
clc
je
mov
fs
xlat
mov
dec
jl
sbb
xor
pop
leave
out
sbb
xchg
in
dec
xchg
mov
cld
and
pop
sbb
or
and
mov
mov
arpl
push
fbstp
orl
mov
lods
bound
cmp
push
jo
push
shlb
jg
mov
leave
push
out
xchg
cld
aam
mov
jle
mov
clc
mov
or
clc
xchg
lds
mov
lods
mov
push
pop
frstor
enter
cmp
out
push
inc
clc
push
ss
aas
push
cmp
sub
test
fwait
icebp
insb
xor
adc
add
das
pop
pop
fsubrl
ja
dec
stos
mov
js
fisubs
aaa
ja
xchg
jbe
test
sbb
int3
ret
adc
ljmp
ret
negb
hlt
lret
push
sbbl
dec
arpl
out
inc
mov
cmp
ljmp
or
hlt
in
xchg
sti
iret
adc
jae
cmp
xchg
add
sub
pop
test
xorl
inc
test
je
into
insl
loop
jno
sbb
loopne
das
lods
ljmp
lea
cmpsb
lods
xchg
xorb
lret
rorb
adc
sti
xor
in
mov
cmp
sub
decl
push
std
mov
mov
push
dec
in
leave
popa
movsb
xchg
xchg
rol
scas
push
icebp
xlat
idivl
es
int3
sarl
jae
filds
cmp
add
repnz
jge
lea
enter
add
scas
sub
mov
lock
xor
icebp
sub
jge
addl
xor
movsb
push
pop
pop
xchg
and
or
jo
jae
xchg
or
sbb
cmc
mov
shlb
shrl
dec
inc
mov
and
add
xor
xchg
out
test
or
push
imul
jmp
subb
dec
inc
in
cmp
lea
mov
test
sbb
mov
mov
call
xor
into
mov
int
and
insl
cmpsb
or
test
mov
xchg
sbb
mov
xchg
cmp
sub
mov
adc
ret
imul
xchg
adc
hlt
cmp
mov
and
loop
test
pop
sbb
adc
adc
fisttpll
cli
sbb
mov
or
shll
pop
and
push
sbb
nop
adcb
pusha
inc
push
xorb
sub
les
mov
in
popf
hlt
push
cmp
xchg
addr16
stos
sub
mov
or
push
jno
mov
movsl
sbb
adc
mov
sub
push
cmp
fsubl
fmulp
mov
stos
add
lret
sbb
rolb
flds
dec
inc
ss
mov
sbb
lret
xchg
inc
pop
jmp
stos
xchg
cmp
stos
mov
ja
xor
mov
xchg
sbb
fisttpll
iret
je
call
shlb
mov
out
and
nop
xchg
push
scas
data16
data16
push
xchg
and
imul
lret
js
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
xchg
js
dec
xchg
ja
jns
and
or
sbbl
jge
pop
dec
test
cld
stc
loop
loopne
mov
lock
out
lods
mov
mov
jl
movsl
insl
xor
push
xchg
imul
fcoml
cmp
nop
xchg
or
ret
sahf
or
and
mov
js
mov
test
repz
lds
psubusb
repnz
jnp
scas
cmp
data16
loop
sbb
scas
pop
cmp
pushf
push
xor
ds
xor
mov
sti
jl
or
cmp
out
gs
mov
mov
imul
cli
cld
out
sub
rdtsc
int3
sub
repnz
xor
fmull
xor
mov
push
and
dec
loop
lods
xchg
xchg
mov
fidivl
scas
xor
jb
jae
and
sbb
mov
cmp
xchg
xchg
popf
mov
aaa
jmp
push
adc
ret
adc
shrl
cmc
stos
mov
dec
ds
and
iret
nop
lods
inc
push
mov
das
cmp
or
cli
mov
call
insl
nop
add
jl
inc
mov
or
xchg
cwtl
rcll
stos
and
mov
or
out
fistl
faddl
aam
enter
sbb
ret
or
sahf
xchg
mov
nop
xor
dec
mov
imul
popf
fiadds
nop
popa
fbstp
dec
js
outsl
sub
inc
push
insb
ret
int3
mov
movsb
mov
jo
mov
orl
pop
pop
xor
or
sbb
stos
sbb
rorl
outsl
mov
fstpt
mov
cmp
mov
jo
and
stos
call
push
sbbl
xlat
or
jp
leave
adc
mov
cmp
dec
mov
xchg
dec
hlt
inc
mov
jnp
pop
inc
add
loope
lock
and
jecxz
mov
inc
add
inc
insl
jg
ljmp
cmp
jge
mov
mov
sbb
mov
addb
scas
dec
ficoms
jp
pop
in
push
cmpsl
subl
in
outsb
dec
push
mov
dec
adc
out
ficoml
push
outsl
mov
fistl
cmp
orb
stos
or
sarb
daa
je
dec
lods
push
sub
mov
movsb
push
adc
xchg
sub
jne
inc
xor
hlt
mov
cli
push
push
loopne
faddl
pushf
pop
lea
cs
pusha
or
jo
arpl
adc
aam
sub
ja
stc
sahf
jge,pt
imul
add
sub
popf
jbe
push
nop
push
test
xchg
pop
pop
pop
addr16
in
enter
fimull
sub
mov
rorb
repnz
and
add
cmpsl
sbb
cwtl
call
aad
scas
mov
cwtl
pop
std
jne
mov
bnd
mov
mov
cmpl
cmp
jl
inc
or
aam
mov
repnz
out
lods
jp
and
hlt
cmp
icebp
rcrb
or
mov
pop
mov
push
add
sti
mov
out
nop
sub
adc
mov
push
mov
jb
cmpsl
dec
ss
mov
push
dec
test
or
shll
and
pop
int
lock
mov
leave
lahf
inc
nop
mov
shlb
mov
lret
mov
or
clc
lds
mov
pushf
scas
ljmp
fiadds
pop
hlt
std
lds
xor
adc
cmpsb
insb
and
mov
ficoms
jle
movsb
mov
push
pop
lea
in
mov
outsb
cmp
xchg
insl
xlat
sbb
and
mov
cmp
out
dec
sub
jo
int3
inc
imul
fistl
pushf
iret
sbbl
enter
lret
lods
ds
jp
dec
data16
mov
xchg
push
std
lea
dec
jp
push
add
mov
std
test
les
sbb
fldenv
mov
repz
inc
out
addr16
pop
dec
and
mov
dec
out
sub
subl
add
cmp
loope
xor
or
cltd
pop
jge
jl
movsl
jge
inc
mov
inc
xchg
adc
sub
mov
xchg
jl
and
shlb
dec
aam
fstps
fimuls
adc
xorl
cs
idivb
adc
out
in
cmc
pop
pop
cmp
stos
lods
fsubrp
push
addr16
inc
out
gs
jo
and
test
sub
push
mov
jno
push
lea
cmpsl
pop
add
xchg
and
and
int3
dec
mov
hlt
push
xor
lahf
mov
cmpsb
in
aas
adc
mov
icebp
xlat
aas
dec
std
inc
mov
mov
or
jge
adc
and
lods
stc
mov
in
push
rol
shlb
idivb
into
mov
icebp
inc
in
sub
mov
xchg
jmp
test
jg
leave
popf
ljmp
rcll
mov
ret
repz
push
cwtl
pop
lret
jno
jmp
cmpsl
add
xor
addb
sti
or
xchg
add
mov
mov
shl
dec
pusha
adc
adcb
fisubs
sub
out
mov
jecxz
add
mov
xor
and
mov
or
icebp
push
fwait
cs
mov
rolb
frstor
inc
mov
mov
adc
hlt
lcall
dec
and
ret
add
fs
gs
maxps
sbb
out
sahf
sub
insb
pop
mov
iret
loop
mov
lock
call
insb
pop
pop
mov
cmp
jge
xchg
fisttpl
or
iret
nop
or
out
in
je
xor
pop
out
dec
sbb
add
push
xor
mov
js
movsb
out
xor
out
and
aaa
push
dec
lods
in
mov
pop
popa
jne
test
push
int
push
add
call
stos
lcall
and
sub
in
mov
ret
shr
adc
lcall
cmp
mov
fidivs
mov
out
cmpsb
push
jns
js
mov
fstp
mov
cwtl
mov
mov
out
jns
cli
cld
popf
cmp
dec
rol
shl
enter
sub
xchg
pop
xor
xchg
stos
sub
outsl
and
outsb
xor
ret
add
push
push
push
mov
aad
negb
adc
add
pop
out
jmp
xchg
in
lcall
movsl
rclb
jge
fmul
leave
lret
pop
enter
mov
in
or
mov
xchg
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
dec
add
ja
bound
sub
lcall
es
sub
mov
jge
add
push
push
add
adc
test
js
ret
add
or
lods
or
iret
dec
pop
in
hlt
add
adcb
add
mov
es
mov
std
mov
fdivrl
jns
pop
xchg
or
scas
xor
popf
insl
mov
cwtl
inc
ror
popf
add
or
jns
in
pop
sub
or
or
aam
iret
xor
rcrl
push
addb
movsb
sbb
sbb
mov
inc
cmp
sbb
mov
ret
lahf
mov
mov
pop
mov
in
sub
ss
test
jne
inc
dec
arpl
std
arpl
adc
inc
ja
out
or
xchg
sub
jns
subl
adc
cli
lods
jl
mov
int3
xor
mov
pop
sbb
icebp
rcrb
std
and
neg
cwtl
mov
call
cmp
mov
jle
sbb
dec
adc
leave
insl
sub
das
aad
xchg
and
out
lret
lods
add
jno
add
std
fxam
push
ja
mov
adc
or
add
mov
or
xchg
cmp
mov
adc
mov
jecxz
pop
sbb
aad
aas
sub
fiaddl
mov
sahf
adc
ljmp
sti
xorl
sti
jp
dec
sbb
fwait
and
and
dec
je
xor
aas
jmp
dec
push
arpl
or
outsl
daa
adc
in
xlat
xchg
loop
and
xchg
fists
ja
mov
jge
mov
dec
jg
xchg
pop
push
push
xor
fnstsw
test
rorl
cli
sbb
stos
pop
or
dec
or
xchg
pop
and
leave
or
sub
pop
or
or
dec
jb
shll
js
ficoms
int
mov
lret
jbe
daa
dec
ficoms
xor
inc
mov
hlt
lds
and
cmp
pop
dec
jb
mov
jle
dec
dec
mov
add
jmp
mov
jne
dec
sbb
cmp
push
mov
cltd
addl
shlb
mov
pop
inc
push
std
dec
sti
shlb
inc
aas
pop
outsb
sub
fld
mov
dec
add
or
aaa
ret
scas
aaa
in
lds
jbe
lods
pusha
shll
repnz
add
mov
xor
add
pop
jp
imulb
insb
ss
jp
jnp
mov
into
sbb
fdivr
pop
lods
mov
xor
daa
jns
jno
into
cmp
pop
sub
fists
les
popa
in
dec
dec
adc
and
dec
jmp
mov
sti
mov
dec
shlb
mov
jne
outsb
cmp
cmp
inc
pop
mov
scas
mov
pop
push
ficoms
add
mov
pop
sbb
scas
jecxz
jnp
ds
fwait
jae
rolb
xchg
cwtl
xchg
fmul
add
and
in
xor
std
dec
ror
dec
cmc
pop
mov
cld
adc
cmpsb
pop
jle
ja
xchg
jp
cld
mov
xchg
loope
in
cmp
cwtl
movsb
aaa
jbe
sub
add
jmp
add
adc
push
xchg
mov
fwait
sbb
xlat
imul
aas
add
std
addr16
mov
not
push
pop
sub
in
aas
movl
jns
or
ret
repz
jp
pop
inc
and
addr16
xlat
scas
ret
aas
int3
add
int
int3
or
movsl
es
inc
mov
inc
dec
mov
ds
icebp
xorl
shr
imul
ja
dec
or
add
shl
mov
pop
mov
xchg
aaa
cmpsb
mov
jo
and
and
fnstcw
sbb
les
xor
xchg
xor
sub
fsubl
mov
push
leave
mov
mulb
out
int3
rorl
and
add
sbb
xchg
inc
pop
inc
jecxz
mov
adc
loop
pop
add
stc
xor
andb
cmc
out
xor
inc
mov
insb
addb
aaa
push
push
or
sbb
sbb
jg
aad
push
rorl
hlt
popa
add
xchg
out
sub
mov
cmc
and
pop
testl
mov
push
jo
or
inc
shlb
js
mov
fiadds
add
dec
loopne
enter
inc
insl
inc
shrb
ret
stos
mov
push
push
fwait
jle
xor
pusha
cmp
pop
push
popf
shlb
and
ss
stos
mov
rcl
imul
test
repnz
inc
add
rcrb
out
pop
stos
das
movsb
jmp
push
cltd
repz
add
xor
adc
sbb
in
inc
mov
jae
xor
mov
pop
sbb
jmp
pop
adc
js
lret
xor
call
push
int
and
mov
xchg
mov
addr16
push
dec
cmp
sbb
iret
pop
mov
xchg
in
push
jno
scas
pop
orb
mov
adc
dec
pusha
push
bound
popf
loopne
fucomip
lods
data16
or
out
xchg
push
jns
std
mov
cmp
sarl
lret
add
lcall
push
inc
ficoml
out
notb
push
cli
add
adc
sub
push
shlb
jns,pn
xor
sub
loope
mov
dec
jno
test
push
addl
xchg
pop
shll
fs
sub
loopne
mov
scas
data16
jle
jnp
stos
ss
pusha
mov
cmp
in
jbe
mov
push
shll
mov
mov
nop
loope
shrl
xchg
jbe
fdivs
push
dec
push
hlt
xor
hlt
jo
dec
fwait
aad
pop
add
adc
stos
sbb
loopne
adc
js
mov
xor
stc
jecxz
sub
or
fidivrl
push
add
sbbl
mov
pop
out
fistpll
daa
sbb
arpl
pop
push
and
shll
test
pop
decb
sar
lock
lock
subl
cmp
sbb
aam
jp
loopne
scas
fnop
sub
gs
lcall
pop
int3
insb
ret
in
and
outsb
add
arpl
mov
rcll
bound
iret
cmp
mov
and
mov
mov
sbb
mov
hlt
xchg
adc
and
xor
jl
jne
jp
cmp
cs
jp
cmpsl
aad
xchg
vextracti64x4
nop
or
push
lret
fildll
push
sbb
outsl
adc
add
in
cmc
cmp
lods
pop
mov
add
xor
mov
call
clc
dec
mov
sub
add
pop
clc
or
mov
mov
jmp
aam
inc
test
addr16
add
pop
scas
fs
outsl
ja
jno
scas
push
clc
pop
mov
cwtl
leave
lds
or
pusha
mov
js,pn
hlt
pushl
fcompl
or
xchg
or
push
movl
push
hlt
pop
lret
stc
dec
adc
lahf
sub
leave
sahf
add
unpcklps
mov
mov
fistps
or
mov
pop
insl
out
stos
dec
sbb
rorl
sub
jge
mov
mov
sbb
jecxz
cmpsb
outsb
jno
push
fimull
push
lods
mov
icebp
and
adc
sbb
test
adc
fists
or
icebp
test
dec
and
sub
adc
cmpsl
pop
ret
call
push
lahf
cmp
xor
mov
lret
aas
clc
mov
jecxz
cmp
lcall
test
out
sti
xchg
sub
cwtl
xor
test
jb
xchg
xor
xchg
repnz
cmp
jmp
shlb
into
call
dec
add
mov
lods
and
push
inc
mov
aas
scas
sub
mov
popa
push
imul
xchg
mov
out
jb
mov
cmc
sbb
cld
rcll
ret
and
pop
movsl
dec
sbb
gs
insl
mov
or
stos
adc
fwait
mov
pop
test
mov
arpl
push
mov
mov
jo
test
daa
xchg
int
sbb
cmp
lods
mov
out
lods
ret
or
mov
test
mov
call
push
cli
popf
mov
das
and
fdivrl
cmp
adc
dec
push
pop
dec
lds
jge
xor
pusha
cmp
sub
xor
imul
sahf
xorb
push
scas
shr
xchg
imul
mov
dec
les
sub
addl
xor
xchg
fcmovnbe
push
pop
pop
jle
lock
adc
leave
adc
sbb
mov
or
movsl
scas
mov
in
or
sahf
and
or
or
mov
fcomp
fnstcw
adc
int3
and
enter
paddusw
adc
je
jle
bnd
test
sbb
inc
mov
out
repz
push
dec
push
inc
mov
inc
inc
lock
sub
scas
rolb
out
mov
xchg
or
orl
xchg
ds
cs
push
popa
xchg
sub
imul
cmp
jo
dec
ret
pop
add
int3
inc
repz
xor
hlt
inc
adc
mov
pop
int3
xorl
cs
out
pop
dec
scas
pop
lahf
mov
aad
ret
mov
popa
and
daa
xchg
dec
shll
xchg
push
inc
fwait
lahf
xor
fucomip
rcll
mov
dec
loopne
mov
inc
sub
and
popa
pop
xor
push
popf
popf
out
push
sub
aaa
int3
subb
sub
pop
ja
pop
xor
std
in
cmpsl
bound
insb
inc
mov
jo
stc
push
dec
push
add
outsb
outsl
stos
mov
push
xchg
popf
push
jo
or
pop
inc
lret
mov
fnsave
cld
test
hlt
imul
cwtl
jecxz
adc
sub
inc
sbb
sub
mov
sub
pop
shll
jle
fisubl
sbb
mov
lock
xchg
or
popa
xchg
pop
or
add
lret
sti
ret
ss
sbb
ss
test
xchg
add
inc
je
sub
sub
inc
std
jnp
adc
cld
adc
gs
mov
push
xchg
into
inc
imul
xor
sti
cmp
out
fwait
mov
cld
test
popa
push
or
or
cmp
and
mov
fiaddl
addr16
popf
mov
inc
cwtl
mov
sub
dec
mov
push
mov
xor
mov
jmp
mov
xchg
xor
out
inc
lret
mov
aad
xor
mov
mov
js
cli
icebp
xchg
enter
in
test
int
cld
stos
inc
es
inc
sbb
mov
jns
xor
stc
sub
out
lock
sub
rcrl
fisubrl
cmc
cmp
rcrb
xlat
or
scas
test
hlt
mov
xchg
clc
fisubrs
xor
daa
fs
pushf
ret
adcb
aad
jb
xchg
shll
add
dec
xchg
dec
jbe
pop
mov
pop
adc
jecxz
push
sub
sbb
stos
stos
jno
adc
loopne
add
mov
mov
dec
xchg
and
sti
ja
push
push
loop
shll
cli
push
loopne
sbb
or
sbb
xchg
adc
push
pop
dec
cmpsl
cwtl
or
rorl
fwait
int3
jmp
pop
inc
dec
out
pusha
pop
inc
and
jge
xchg
gs
loope
inc
jp
pop
cwtl
adc
push
push
fwait
vshufps
loope
lret
dec
adc
jge
dec
lret
mov
pop
int3
xchg
cmpsb
call
test
loop
stc
mov
imulb
mov
adc
cmp
fadd
sub
mov
inc
lds
cs
orb
add
fisubrs
mov
loop
sbb
mov
aam
jns
rol
fmul
dec
adcb
subb
jno
scas
sub
insb
cli
orl
lahf
mov
push
aaa
add
xor
in
xchg
sub
std
push
dec
cs
movsb
mov
dec
dec
mov
mov
mov
adc
pop
jmp
mov
inc
imul
sbb
mov
mov
sbb
leave
lock
in
idivb
xchg
movsl
adc
rcll
mov
lds
fwait
sub
inc
jg
in
jge
mov
or
sub
stos
inc
pushl
aad
shrl
scas
in
xchg
ss
adc
fcomps
or
ljmp
int3
mov
push
push
aaa
pushf
cmp
out
gs
push
loopne
dec
mov
scas
pcmpgtw
sub
jge
fs
xor
std
arpl
imul
mov
ud1
popf
shl
xchg
in
out
adc
outsl
jno
inc
stos
lret
repz
push
push
mov
jbe
outsl
addr16
pop
in
push
xor
repz
inc
cltd
cmp
cs
fcmovb
mov
dec
push
sbb
push
fisttps
data16
jecxz
sbb
mov
lea
cmp
addr16
jo
cmpsl
add
aaa
sarl
adc
mov
ss
iret
lahf
fs
sbb
sti
rorb
jo
sub
outsl
aam
fsubrp
xor
jo
mov
sub
xchg
pop
xor
sub
dec
loopne
repz
shrl
mov
daa
cwtl
jnp
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
ja
jecxz
mov
sbb
repz
adc
lahf
sub
popa
adc
push
stos
cmp
aaa
cmpsb
loope
mov
clc
mov
out
cwtl
movsl
mov
jl
jge
xchg
sbb
xchg
jmp
cli
stos
and
add
lods
and
das
scas
push
imul
inc
call
mov
cltd
bound
sub
xchg
stos
mov
std
inc
in
or
jno
fists
cmp
out
jo
push
daa
inc
xchg
test
mov
jo
dec
shlb
std
xchg
and
jg
xchg
out
fists
sbb
push
out
push
roll
sbb
mov
popf
cmp
outsl
mov
mov
mov
cmp
aad
dec
xor
mov
add
dec
lock
pop
cmp
icebp
dec
pop
xor
enter
and
aad
scas
sbb
call
xchg
pop
xchg
push
test
std
mov
popa
ds
lds
sbb
addr16
xchg
and
push
xchg
fs
nop
aad
aaa
out
mov
imul
cmp
dec
jmp
aam
pop
push
lods
addr16
fsubrs
jmp
into
cmpsl
fistpl
ss
cmp
cmp
repz
leave
ds
cmp
js
arpl
xchg
xor
pop
dec
jmp
mov
inc
insb
dec
cwtl
in
enter
imul
addr16
push
aam
leave
adc
inc
fistl
cmp
xlat
push
xchg
rcrl
out
push
cmp
aaa
test
mov
test
push
mov
adc
sbb
cmp
scas
lahf
mov
mov
inc
insl
push
dec
cmp
mov
nop
popa
dec
jecxz
frstor
mov
cmp
cwtl
ffreep
lods
push
push
mov
rclb
pop
call
cmc
inc
aaa
cmpsl
add
enter
sar
adc
les
bound
andl
ficomps
lret
fiaddl
xchg
inc
sbb
xchg
lret
adc
push
outsb
jne
test
push
sti
and
cltd
adc
sbb
jmp
ret
dec
jge,pn
sbb
pop
adc
stos
pop
in
mov
mov
jno
popf
pushw
out
pop
movsl
mov
xchg
xor
sub
das
dec
stc
dec
aas
mov
cmp
insb
jp
and
in
dec
push
mov
mov
xchg
ss
xor
mov
sbb
inc
or
pusha
mov
or
and
inc
out
cmp
andl
hlt
mov
aaa
cli
into
push
subl
hlt
push
dec
loope
fildll
pop
adc
mov
or
cmp
sub
mov
shrl
ror
outsl
orb
leave
imull
dec
arpl
adc
loopne
push
push
adc
rcll
push
fcompl
pop
jmp
pushf
cmpsl
mov
cmpsl
mov
fcomps
cmp
xchg
xchg
sarb
call
cli
sub
mov
stc
filds
pop
dec
push
push
mov
mov
jp
sub
pusha
sarl
fsubl
lock
xorb
push
or
adc
jb
aaa
pushf
cmp
or
fistps
sub
dec
pop
shrb
mov
rol
and
pusha
sbb
sub
cwtl
in
push
stos
push
push
hlt
sti
mov
lret
xchg
pusha
imul
ljmp
pop
mov
test
dec
inc
mov
sbb
ret
imul
aas
loopne
andb
jp
sbb
cmpsb
dec
arpl
divb
imul
adc
push
mov
leave
repz
out
mov
mov
jb
dec
jne
das
or
pop
jb
add
mov
cmpsb
lea
xor
pop
andb
add
stos
push
add
rcrl
test
insb
ss
lcall
cmpl
xchg
xchg
add
dec
adc
push
inc
inc
shrb
add
xor
lods
dec
sbb
es
xchg
out
jl
movl
mov
dec
xchg
mov
shlb
and
adcb
stos
es
xchg
shll
adc
mov
inc
ret
subl
mov
cmp
xchg
mov
cld
xchg
data16
push
lock
and
repnz
xor
std
and
mov
pop
sbb
dec
inc
test
inc
push
test
pop
sub
or
test
push
jnp
cmp
add
cmp
and
push
mov
cmp
cwtl
repz
cli
push
aas
cld
mov
int
hlt
fsubs
add
insl
ret
call
xchg
test
xchg
imul
xchg
ds
jo
pop
sbb
and
fs
add
enter
lcall
repz
xor
mov
and
pop
mov
test
mov
dec
fstl
cmp
lahf
inc
pop
jmp
dec
out
cmpsl
or
or
xchg
mov
mov
mov
hlt
mov
push
fs
out
pop
cli
in
insb
sub
testl
dec
mov
xchg
out
imul
ds
dec
add
push
out
mov
pop
push
jo
push
push
jmp
js
jecxz
pop
inc
pop
cmp
mov
insl
dec
add
ror
and
or
ds
pop
add
push
lret
dec
std
inc
incl
test
scas
repz
inc
rolb
iret
pop
arpl
dec
dec
dec
inc
cmp
leave
push
or
jne
imul
fs
out
push
insb
xchg
aad
push
repnz
sub
mov
cmp
cmp
and
pusha
push
jne
shrb
push
or
in
sbb
xchg
loope
sbb
arpl
and
cs
dec
add
testb
cmc
jbe
aaa
shll
inc
inc
cmc
push
es
sarb
sbb
mov
and
adc
push
push
sbb
jmp
push
test
stc
cmp
lret
and
xchg
push
fwait
jo
cmp
std
jno
rorl
mov
lock
mov
dec
mov
nop
lods
hlt
sahf
add
je
jmp
ret
outsb
cmp
jb
sbb
and
add
andl
lret
jb
out
xor
mov
sbb
movsb
mov
rolb
ficoms
mov
pop
jge
jmp
mov
aas
rcrb
incb
mov
mov
test
stos
outsl
int
out
int3
pusha
jg
popf
add
jae
jg
es
shrl
mov
or
out
inc
and
cs
mov
fcmovnb
fmuls
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
jecxz
push
mov
xchg
lods
mov
inc
scas
and
loop
popf
xchg
leave
mov
js
dec
mov
push
into
xlat
lods
xor
stos
and
lcall
fsubp
push
pop
or
jecxz
repz
add
jb
jno
cmovl
imul
sbb
ficomps
ds
xchg
outsb
cwtl
xor
stc
xchg
sarl
push
or
call
inc
xchg
negb
test
sbb
cwtl
movsb
in
dec
fnstsw
outsb
add
push
jae
sbb
ljmp
xor
bound
imul
xchg
in
push
loop
retw
adc
adc
out
pop
push
push
xchg
leave
push
cmp
xor
sbb
or
xor
jo
imul
inc
inc
divps
adc
loope
push
mov
ror
jb
add
xchg
leave
cltd
sbb
mov
sbb
and
outsb
jo
pop
jbe
jp
and
je
arpl
aad
jb
pop
mov
pop
xchg
stos
test
ss
jle
cmp
cwtl
lahf
push
pop
mov
icebp
mov
and
jne
and
call
xlat
adc
in
jbe
add
jne
jl
popf
adc
and
adc
jno
sbb
ret
int
push
inc
jge
dec
or
adc
test
mov
cmpsl
fcmovne
fstps
pushl
ficoms
and
imul
inc
sub
subb
push
sbb
les
stc
frstor
insb
ret
inc
pop
fwait
xchg
sub
and
jne
out
es
loope
les
mov
xchg
xchg
inc
out
push
rcr
mov
jle
sbb
stos
andb
inc
ja
lods
xor
sbb
inc
xor
stos
mov
cli
cmpsl
or
movsb
int
stc
shrb
adc
nop
cmpsl
adc
insl
fistpll
push
lahf
add
movsb
inc
add
cmp
sub
jno
ljmp
enter
out
push
movsb
cltd
test
cltd
loope
out
enter
cmpsl
cli
fldcw
test
mov
dec
mov
std
xor
adc
lcall
and
add
mov
cmc
fbld
dec
data16
cld
mov
lcall
ljmpw
pop
ret
pop
sub
and
jnp
xchg
in
inc
outsb
xchg
sbb
mov
adc
shlb
test
aaa
jge
mov
ds
loope
pushf
cmp
int3
arpl
cltd
movsl
mov
inc
jl
xchg
and
cmp
notb
into
fucomp
lds
dec
xchg
jo
cmpl
cmp
add
xchg
adc
out
push
ljmp
test
cmpsb
xor
in
test
aaa
rcrb
sahf
rcr
jge
adc
mov
imul
cmc
jne
pushf
sbb
ljmp
int3
sbb
int
adc
mov
mov
push
push
daa
and
pop
lret
cwtl
dec
jmp
test
out
ljmp
xor
xchg
pop
xchg
and
outsl
aas
mov
pop
dec
out
cmpsl
in
push
in
push
cmp
flds
in
outsw
jne
xchg
and
bound
movsl
leave
in
in
xchg
or
or
cmpsb
frstor
cmp
and
cmpsl
or
stc
loopne
ss
xorl
mov
pop
test
push
adc
std
imul
jg
pop
imul
mov
ds
popf
pop
and
out
mov
out
enter
adc
pop
jge
stos
jb
stos
jl
ss
iret
mov
adc
sti
cld
jge
aas
mov
stc
mov
inc
popf
mov
test
out
inc
arpl
add
push
nop
hlt
push
aas
pop
shl
push
mull
inc
adc
dec
ss
outsl
ljmp
xchg
dec
cmp
xchg
and
push
loope
push
adc
lret
or
fdivl
xchg
push
adc
mov
stc
jl
and
pop
movl
and
test
adc
aam
xchg
xlat
push
out
out
dec
gs
into
incl
in
or
and
out
xchg
mov
jnp
cld
hlt
dec
jb
jne
dec
and
xchg
mov
sub
neg
and
sub
inc
sbb
and
xchg
xor
sahf
mov
push
cmp
iret
stos
mov
adc
jecxz
lahf
push
inc
jnp
sub
sbb
rclb
push
outsb
and
and
mov
fidivs
xor
xchg
sub
push
ljmp
mov
lret
mov
push
bound
loop
cmp
pop
pusha
ds
psrad
stc
je
dec
icebp
inc
adc
lock
mov
push
inc
push
lret
mov
add
in
add
ljmp
inc
add
dec
fnstsw
mov
adc
cmc
cmp
inc
xor
inc
xor
ja
ret
gs
fidivrs
adc
sub
lea
cli
sbb
xor
mov
roll
adc
sarl
hlt
mov
xchg
and
cwtl
cltd
push
das
insl
mov
xor
push
loopne
mov
adc
jno
jb
mov
cmp
and
push
mov
shll
mov
mov
jmp
out
imulb
jle
test
int
jmp
movsl
lret
or
cs
mov
pop
ss
icebp
cmp
dec
mov
push
movsl
push
push
das
push
mov
mov
and
mov
es
xchg
sub
xchg
lret
iret
ss
fistpll
js
adc
add
outsb
inc
dec
sbb
clc
xor
dec
pop
test
insb
mov
movsb
add
pop
loop
jmp
fistps
jb
mov
mov
push
pop
out
push
adc
daa
jno
and
popl
adc
movzwl
xchg
pop
inc
mov
pop
jmp
ss
dec
and
in
insl
ja
test
dec
jbe
dec
xchg
ljmp
icebp
sbb
or
hlt
or
or
mov
std
adc
in
shll
enter
xorb
mov
pop
pop
andl
or
test
sti
nop
fldl
fidivs
sbb
call
mov
inc
or
and
adc
xchg
ds
mov
push
rcll
dec
mov
add
enter
xor
push
inc
lea
pop
lret
inc
dec
dec
jmp
mov
popa
sub
or
inc
cmovo
testl
fsubs
mov
xchg
and
inc
pop
stc
cmpsl
pop
pop
cmpsl
or
adc
aam
dec
xor
add
and
jp
xor
call
pop
inc
int3
arpl
add
push
ljmp
sbb
sub
in
sub
sub
test
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
repz
aas
ja
pushf
iret
mov
lock
and
aas
jb
leave
test
ja
sub
xor
stc
inc
mov
dec
stos
cltd
pop
imul
or
out
popf
jo
lds
push
xchg
in
adc
std
imul
sub
lret
ds
cmp
testb
insl
push
fidivs
aam
pop
fwait
mov
mov
cmp
lret
xchg
ljmp
lea
and
add
sti
nop
adc
cmpsb
std
sub
cmp
pop
test
fwait
jl
push
imul
mov
jecxz
into
pusha
xlat
cltd
or
test
pop
dec
aam
mov
push
xchg
std
mov
je
adc
mov
cmp
fcmovnb
mulb
xchg
push
cs
es
test
xchg
dec
mov
cmpsl
lret
or
sub
add
push
sbb
mov
xorl
and
xchg
test
bound
imul
inc
repz
xor
fistpll
insl
dec
insb
push
mov
aam
ljmp
scas
arpl
jnp
xchg
inc
dec
addr16
dec
sub
adc
in
aam
dec
sub
cmp
add
inc
xor
adc
cwtl
hlt
sub
mov
mov
pop
cmp
pop
or
sahf
nop
mov
in
pop
js
aad
fdivl
jle
ds
mov
dec
add
ja
jns
mov
add
ja
fwait
stos
pop
cmp
arpl
icebp
out
push
pusha
xor
jns
adcl
add
jp
fucomip
cmc
imul
adc
sub
cltd
jp
loope
mov
mov
subl
js
shlb
jge
cmp
cwtl
in
sbbb
aad
loop
int3
xchg
popf
pop
mov
enter
fadds
je
and
push
lods
adc
popa
xchg
sbb
cmp
mov
repz
stos
dec
jne,pn
int3
test
sbb
pop
sub
ja
shl
adc
notl
ret
outsb
pusha
stc
imul
pop
xor
push
xor
or
test
lods
and
loop
in
sbb
mov
std
test
sbb
sbb
fidivl
xor
sub
daa
outsl
addb
or
push
movsb
add
stos
push
movsb
lods
out
cld
jl
inc
scas
cli
mov
xor
rcll
add
cmp
into
xor
cmpsl
gs
inc
scas
addr16
jmp
jne
clc
mov
jnp
add
movsb
ds
xlat
call
test
xor
rcrl
sub
movsl
imul
mov
pop
jb
mov
loopne
jp
fwait
ja
pop
mov
jecxz
jnp
ljmp
cld
movl
xor
adc
adc
fs
push
mov
or
hlt
lods
pop
cmp
mov
mov
loop
arpl
ss
loop
fldenv
mov
cmp
push
mov
rcll
and
dec
sarb
cmpsl
out
push
and
mov
mov
adc
clc
pop
cmp
mov
sbbl
pop
dec
push
sarl
mov
popa
jp
push
mov
bound
stos
std
leave
fs
outsl
out
xor
xlat
adc
mov
pushf
add
mov
scas
scas
dec
cli
ret
test
sbb
jl
ljmp
fcmove
dec
sub
mov
xchg
pop
andl
mov
mov
test
cld
loop
ret
adc
das
push
pop
jl
xchg
adc
sti
lock
sahf
mov
sub
adc
cmpsl
cld
loopne
cmp
cmp
jge
dec
mov
mov
or
aam
mov
repz
push
xor
lock
insb
int3
fisttpll
xchg
insb
push
inc
fs
dec
cmpb
stos
mov
xor
and
lock
and
in
sbb
sarl
pop
jb
inc
inc
pop
adc
fadds
stos
and
ja
sbb
cld
shlb
xchg
mov
dec
fwait
repz
das
pop
sbb
dec
repz
cmp
push
rclb
movsb
iret
imul
lret
lea
mov
mov
pop
pop
xchg
xchg
xchg
test
icebp
movsb
negb
jmp
cmp
push
dec
jle
mov
sub
add
xchg
xor
dec
jg
mov
inc
mov
inc
aaa
jnp
lods
pop
ficoml
mov
adc
add
lods
shl
lods
adc
aas
and
push
jmp
pushf
cwtl
mov
fdivr
in
adc
arpl
jp
pop
ret
xorl
inc
imul
push
pop
pop
pop
push
inc
out
pop
adc
fists
int3
push
dec
in
in
insl
cmc
pop
cmpsb
sbb
sti
stc
inc
aam
sub
mov
lods
mov
xchg
mov
lahf
shll
sahf
fisttpl
scas
out
jl
daa
lds
lods
mov
daa
loopne
xor
popl
sub
insl
in
inc
jns
pop
mov
and
jg
inc
fwait
and
jle
adc
rclb
in
sbb
sub
inc
je
int
pushf
cld
dec
mov
shrb
icebp
jl
mov
fadds
or
sbb
push
push
cwtl
int
jge
popa
mov
es
dec
cmc
pop
ja
movl
xchg
jp
sti
xchg
or
xchg
outsb
push
mov
dec
insb
push
add
stos
fistpl
inc
jno
outsb
dec
subl
fwait
jnp
addr16
jle
dec
flds
test
dec
loopne
ljmp
clc
lds
call
inc
fistpl
and
in
sub
mov
xchg
push
pusha
inc
pop
cltd
xlat
xor
out
push
sbbb
cmp
mov
icebp
cltd
aam
cli
and
mov
adc
mov
sub
xchg
out
xchg
inc
fwait
test
or
xor
cmp
int3
dec
and
jnp
jle
int3
out
pop
sti
aaa
jp
lahf
pop
ja
inc
dec
aaa
lahf
and
sahf
imul
frstor
and
inc
jmp
mov
push
jle
enter
mov
xchg
xchg
outsl
das
mov
imul
mov
addr16
fldlg2
jl
inc
mov
or
and
ja
xchg
mov
icebp
push
inc
and
jle
adc
scas
sbb
jne
xchg
pusha
mov
mov
jb
or
and
inc
sbb
jo
mov
add
push
out
in
fdivl
pop
fsubrl
je
mov
cmpsb
add
std
dec
mov
add
mov
insl
jmp
lock
imul
inc
push
repz
in
pop
js
lods
mov
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
ds
ja
pf2id
mov
dec
sub
sub
std
pop
sbb
pop
add
cmpsl
call
rcrb
stos
lea
add
xor
repnz
repz
scas
cld
pop
fwait
mov
mov
sbb
adc
adc
out
jg
and
dec
pop
iret
lahf
pusha
das
mov
jbe
xchg
push
sbb
dec
jle
and
aas
jp
insl
pop
je
popa
jecxz
cmp
shrl
pop
je
xor
pop
pop
xchg
xchg
addr16
subl
add
or
popa
fdivl
jl
insl
lds
bound
adc
stc
aam
movsl
xchg
mov
aad
insb
pop
rcrb
mov
outsb
adc
das
xor
insb
ffreep
cmc
inc
cmp
sbbl
xor
xor
xor
mov
jnp
add
rolb
call
dec
sub
mov
in
loope
shlb
pop
mov
push
decb
push
addr16
cmp
cmpsl
mov
les
push
das
in
pusha
dec
loopne
push
mov
les
bound
sbb
mov
int
xchg
daa
or
aaa
add
push
adc
lds
stos
cmpb
mov
int3
push
cmpsb
test
dec
outsl
stc
inc
fstpt
fidivrs
aad
jmp
sbb
test
mov
imul
inc
sub
jmp
dec
jmp
lea
or
rol
lds
lea
decl
sub
popf
xchg
lcall
mov
cmp
add
clc
xchg
jb
jnp
ret
sbb
cmpsb
stc
rclb
cwtl
adc
ja
pop
xchg
cmp
js
movb
add
enter
cmp
sti
jno
stos
pop
push
std
mov
lock
xchg
add
push
jae
and
add
sub
icebp
add
xor
call
stos
mov
addr16
xchg
iret
ret
shlb
and
test
fimuls
je
int3
out
or
pop
out
inc
sti
jecxz
sahf
lods
fisubl
pop
mov
xor
lods
lds
fisttpll
and
mov
ja
mov
adc
inc
inc
fisubs
jno
insl
int3
mov
outsl
xchg
and
int
push
xchg
mov
sub
jg
push
mov
rolb
pop
xchg
mov
and
in
inc
pop
xlat
pop
push
aad
push
mov
adc
lds
repnz
add
ljmp
adc
cmp
jg
sbb
out
sbb
in
popa
mov
pop
fadds
popf
adc
ret
rcrb
data16
out
and
dec
stc
push
stos
adc
repz
push
aam
mov
js
mov
xchg
or
hlt
cmp
or
data16
scas
mov
jge
sub
mov
and
ss
in
jb
jmp
in
frstor
sarb
jb
int3
xor
popf
jb
test
out
aaa
pop
and
call
mov
aaa
xchg
int
push
sub
loopne
adc
sub
dec
leave
roll
fwait
jmp
sbb
repnz
ss
sub
aas
adc
inc
pop
and
add
pop
in
sbb
test
fnstcw
sub
adc
dec
inc
pushf
imul
xchg
mov
cmc
cmp
daa
outsb
inc
lods
repz
and
aaa
pop
fwait
dec
jmp
sub
xchg
stos
push
adc
aad
jo
cli
cmp
push
das
out
lds
movsb
xchg
imul
aad
mov
rep
cmp
out
xor
add
push
inc
adcl
inc
inc
out
cli
pop
mov
in
clts
adc
adc
repnz
or
adc
dec
inc
out
inc
cmc
les
mov
leave
mov
jmp
das
mov
or
cmp
add
clc
iret
push
pop
adcl
push
loop
test
repnz
sub
popa
aaa
push
test
cmp
xchg
dec
or
cli
inc
in
into
adc
dec
jnp
out
and
in
mov
xor
dec
pop
push
xor
dec
jg
or
xor
lahf
test
je
lret
into
and
jp
mull
div
xor
pop
add
cmp
cmp
pusha
outsb
lcall
fndisi(8087
jle
mov
mov
mov
aam
pop
mov
stc
push
mov
inc
cmc
dec
dec
cmp
test
sbb
sbb
push
in
pop
test
xchg
jecxz
sbb
sub
push
bound
pusha
cltd
mov
xor
sub
enter
cmp
push
pop
stc
clc
mov
pushf
mov
daa
sub
cltd
add
into
pop
packsswb
xor
scas
stos
jns
push
mov
cmp
fstl
cmc
aad
mov
cmp
pop
bswap
push
and
mov
stc
pusha
dec
and
mov
sar
xor
or
daa
js
mov
movsb
xor
lods
out
sub
popa
jle
clc
mov
sub
push
inc
or
and
adc
das
sbb
push
push
mov
fisttps
ja
orl
bound
sbb
mov
inc
and
jo
test
pusha
inc
adc
dec
mull
sbb
pusha
xlat
gs
xchg
mov
mov
leave
jae
xchg
mov
push
pop
mov
and
in
sbb
sub
jl
sub
fcom
push
xchg
add
jg
mov
xor
ss
or
jle
aaa
or
add
pop
cli
push
sbb
sub
mov
mov
xor
add
push
push
loop
add
mov
lods
add
mov
jns
test
mov
dec
mov
xchg
xor
fistpll
in
cmp
xchg
inc
sbb
add
fwait
mov
dec
in
cmp
push
hlt
jns
ljmp
cs
and
add
mov
jno
cmp
clc
inc
push
call
je
iret
inc
rol
popa
sarl
popa
sub
lret
sbb
mov
mov
out
adc
dec
pop
ljmp
hlt
imul
sub
jne
pop
mov
sbb
frstor
ds
xchg
push
jmp
les
rorb
sbb
or
mov
jb
fdivl
mov
fcompl
xchg
lret
pop
les
iret
sbb
add
push
ja
mov
in
arpl
xor
movsb
cmovg
scas
sbb
jl
rolb
cmpsb
test
or
mov
xchg
jns
xor
xor
jo
lahf
aaa
mov
int
mul
test
ja
mov
outsb
mov
add
cs
outsl
outsl
adc
mov
mov
xor
push
ja
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
push
sub
pop
jbe
jg
clc
push
cmpb
xlat
stos
fisttps
popa
sbb
cmpsl
aam
pop
insb
lret
push
inc
addl
jb
mov
in
jecxz
test
dec
lret
or
sub
mov
scas
jne
push
cmp
xchg
inc
daa
outsb
push
mov
aaa
inc
add
cwtl
cmp
mov
or
ret
jg
sub
sub
aaa
in
adc
arpl
fidivs
fldcw
out
fcomi
pusha
sub
add
jne
cltd
lds
pop
adc
jb
leave
cmp
je
jo
pop
dec
ljmp
repnz
in
ljmp
or
fwait
sahf
fimull
dec
xchg
mov
hlt
dec
iret
je
das
lret
scas
aad
or
dec
pop
ja
out
hlt
cld
scas
xchg
jmp
xchg
jge
lds
push
data16
mov
inc
ficomps
or
or
mov
pop
outsb
add
gs
xchg
in
enter
adc
push
jae
lcall
in
or
pop
and
icebp
and
mov
or
xor
mov
shrb
addr16
bound
mov
fwait
shlb
mov
xchg
xor
pop
fs
es
xchg
adc
nop
fiadds
popf
es
fnstsw
inc
xor
bound
or
aaa
push
adc
jae
cmp
cmpsb
outsb
adc
push
lret
test
jp
mov
mov
or
cmpsl
aas
test
lods
or
adc
dec
xor
adc
mov
mov
sar
fimull
mov
gs
enter
mov
sbb
insb
imul
pop
mov
xchg
jb
lret
ljmp
adc
sahf
fldcw
popf
cld
sbb
jae
mov
jmp
stos
fidivrs
imul
cmpsb
out
pop
lcall
lds
out
add
cmp
mov
xchg
lret
scas
rolb
adc
cmpsb
jbe
iret
mov
lock
cmp
mov
dec
lock
jge
and
push
adc
aas
sub
rorb
mov
cli
mov
push
mov
and
lcall
shlb
pop
jg
insb
adc
xlat
lods
mov
mov
cmp
and
push
xchg
sub
or
mov
mov
das
dec
add
mov
ficoms
pop
pop
ja
pop
add
and
test
push
into
test
xchg
cmp
ja
pop
ret
mov
cwtl
adc
mov
ficoml
bound
sti
and
or
into
out
mov
mov
fidivl
cli
pusha
js
mov
out
mov
sbb
jbe
jo
les
push
pusha
mov
jb
test
lcall
dec
aas
fisubrs
xchg
fstps
aas
dec
imul
leave
ja
dec
dec
and
adc
sub
xor
inc
js
cmc
test
dec
inc
out
sub
mov
or
and
rclb
addb
push
mov
popf
mov
in
mov
add
push
out
int
test
jb
into
inc
inc
mov
sbb
mov
jae
sbb
les
add
sbb
mov
in
pop
mov
mov
leave
push
cmp
clc
movsb
mov
mov
ljmp
daa
jb
fisttpll
outsl
push
inc
incl
fidivrs
test
inc
dec
mov
rcrl
sbb
inc
mov
pushf
scas
adc
mov
mov
jbe
pop
cmc
sbb
xor
xor
popa
adc
popf
repz
je
cmc
sub
cs
lods
movsb
inc
push
dec
cmp
mov
xor
cmp
cwtl
add
jmp
lods
sub
add
mov
fsubr
das
and
cmpsb
xchg
divl
and
test
in
inc
arpl
gs
ljmp
fstpl
sub
xchg
push
fstpl
mov
mov
dec
xor
inc
and
test
or
push
or
and
sbb
outsb
inc
shrb
int
pop
mov
sarb
push
cmp
daa
jb
dec
lahf
lahf
xor
imul
rclb
sub
adc
not
mov
sub
cmpsb
add
adc
aad
pop
and
jl
cmp
mov
test
sub
iret
hlt
pop
mov
loope
cmp
inc
adc
xor
dec
sbb
xlat
mul
add
stc
hlt
adc
notb
mov
loop
jbe
sbb
and
ss
inc
cmp
xchg
lods
mov
mov
xchg
add
adc
gs
sets
pop
repnz
push
rclb
mov
pop
aad
leave
lcall
mov
mov
cmp
jne
sbb
rolb
mov
leave
xchg
mov
push
add
jge
jae
out
adc
mov
adc
xchg
mov
into
shrb
xchg
mov
cmp
and
sub
pop
and
hlt
dec
loop
lahf
xchg
addr16
lahf
cld
lods
icebp
pop
jae
dec
out
dec
xorl
sbb
push
mov
pop
add
loope
rcrl
fdivrs
add
pop
lods
sbb
lahf
and
add
test
inc
add
ret
fs
iret
and
in
adc
lret
add
push
push
iret
dec
xchg
xchg
movsl
mov
jmp
fstps
into
leave
sar
adc
xchg
dec
nop
in
test
fwait
inc
sub
or
dec
jl
jge
stos
sahf
fldcw
xchg
mov
dec
jae
popf
cmp
movsl
jmp
adc
ficoml
sbb
xor
jnp
add
mov
rcrb
imul
loop
mov
fwait
enter
inc
dec
xor
rclb
push
pop
lock
ljmp
mov
add
mov
jnp
in
lret
mov
jp
mov
je
adc
je
dec
cmp
cmp
add
mov
sbb
inc
xchg
mov
pusha
mov
mov
push
mov
jl
iret
jp
mov
mov
cmpl
rcll
cmp
stos
dec
adc
cs
cmp
or
xchg
mov
lds
or
stos
test
push
jle
or
cmpsb
adc
in
inc
add
into
add
rcr
xlat
add
jmp
cltd
and
pop
fidivl
mov
pop
stos
jmp
dec
adc
xchg
outsl
loopne
enter
adc
mov
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
jle
pop
js
adc
movlps
scas
cs
xchg
xlat
dec
jmp
mov
xor
cmpsl
aas
pop
iret
inc
outsl
jns
add
and
test
jbe
adc
add
enter
mov
add
push
sbb
xchg
sub
jg
test
inc
js
jge
xchg
cmp
pop
and
jecxz
xchg
sub
add
jns
inc
int
mov
in
daa
movsl
cwtl
mov
ja
jle
mov
and
dec
add
jo
mov
or
pop
in
cmc
in
movsl
add
inc
add
lds
xor
jns
mov
ret
cmp
in
sarb
movl
inc
mov
jns
or
xchg
adc
inc
movl
cmp
rcll
push
faddl
mov
add
repnz
loopne
into
jno
sub
and
stc
test
imul
inc
into
aaa
push
movsb
cli
xchg
xchg
icebp
ficoms
pushf
icebp
movsl
or
mov
mov
ret
mov
cmpsb
rclb
mov
or
das
push
test
sahf
je
and
mov
into
pop
ret
rcrb
clc
out
push
jo
leave
mov
xchg
fucompp
dec
cmp
mov
mov
xlat
sub
mov
loope
inc
aad
lods
jno
inc
mov
hlt
and
jo
xchg
xchg
xor
or
lahf
add
outsb
std
inc
and
loopne
jb
jl
xchg
mov
das
test
dec
ljmp
sbb
push
jnp
xchg
pop
insb
xchg
js
mov
dec
loop
out
es
add
jae
mov
cmp
mov
jae
stc
mov
and
lcall
mov
cmp
jmp
test
loope
push
jne
repz
repz
cwtl
mov
sbb
lods
jecxz
shlb
jnp
and
sub
mov
bound
out
push
dec
inc
inc
pop
popl
ja
mov
cmp
gs
or
or
dec
jmp
lods
cwtl
push
mov
mov
movsl
pop
mov
push
lea
nop
xlat
nop
mov
and
ljmp
jp
addr16
aad
mov
pop
rcr
int3
lock
stos
cmp
cmpsl
jle
dec
cltd
xchg
into
sub
sahf
xor
inc
cld
jne
jg
int3
or
jle
nop
lahf
adc
xchg
in
mov
inc
call
jne
or
add
push
xchg
push
xlat
adc
cmp
xor
stc
out
ds
jge
inc
fmulp
jl
xchg
insl
inc
push
cmpsb
je
sbb
loop
in
cmpsb
pop
call
jno
mov
imul
inc
roll
ljmp
inc
lret
adc
arpl
push
shll
loope
sub
ljmp
xor
stos
push
data16
xchg
pushf
frstor
jb
stos
neg
js
cmpsl
mov
cltd
and
jne
mov
scas
leave
add
bound
push
push
aaa
sub
adc
add
pop
mov
insb
mov
movsl
jnp
int
pusha
jg
dec
adc
sbb
rcr
xchg
popa
in
or
mov
mulb
add
sub
fldl
adc
push
inc
clc
or
sbb
adc
inc
loopne
lock
popa
or
loopne
movsl
or
mov
fidivl
adc
pop
rclb
mov
pop
fnstsw
pop
pop
lcall
out
pushf
xchg
rcrb
xlat
pop
mov
out
insl
ja
pop
and
out
cli
lahf
pop
mov
pop
imul
sbbb
sbbb
loope
mov
mov
lret
pop
cmp
jo
hlt
fisttps
lret
fimull
push
imul
cmp
sahf
push
jg
and
push
add
dec
and
sub
call
pushf
xchg
loop
imul
insb
sti
xchg
xchg
pop
aam
cld
in
mov
int3
pop
cmpsl
into
add
sbb
adc
lcall
jecxz
sub
cmpsb
sahf
or
test
scas
dec
push
xchg
pop
loope
push
push
sub
sub
xchg
lods
inc
je
jbe
cmpsb
scas
xor
or
push
ss
fdivs
daa
int3
push
aam
mov
push
inc
fildl
scas
inc
pusha
fistl
scas
mov
push
popa
push
push
and
call
lea
mov
mov
jno
sar
dec
in
add
dec
xor
int3
cmp
imul
pop
cmp
cli
mov
aam
pusha
in
mov
repz
dec
dec
pop
push
fnstcw
pusha
fs
inc
mov
and
or
popa
jno
add
adc
mov
mov
aas
sub
movsl
ficomps
in
repz
mov
movsb
sub
push
lcall
sbb
je
rorb
test
stos
out
jae
in
lret
sub
nop
and
and
mov
dec
in
xor
add
in
adc
or
imull
mov
lea
sti
pushf
mov
inc
scas
jp
cld
add
scas
push
xor
jle
push
test
bound
pop
js
outsb
sub
mov
mov
lcall
sub
daa
mov
mov
shll
je
push
fisubl
icebp
jl
hlt
mov
adc
sahf
cli
add
jns
xor
pop
mov
pop
dec
test
and
scas
cmp
push
icebp
pushf
dec
cmp
adc
pushl
in
divl
jnp
push
pop
pop
push
das
push
hlt
fs
xchg
cs
repnz
mov
mov
fcoms
push
jge
gs
fistps
fcmovnu
mov
pop
dec
aas
js
sub
ds
mov
sub
xchg
std
inc
sub
dec
sahf
adc
dec
dec
push
mov
imul
cmp
rorl
mov
push
cmp
cmpsl
aam
loope
nop
out
sbb
mov
xchg
lods
pop
lcall
cmp
lods
and
jno
cmp
pop
push
or
push
xchg
adc
inc
leave
mov
pop
int3
orb
subl
or
shrb
test
sbb
test
insl
shrb
adc
sub
fs
fcomi
repz
mov
aas
fsubl
sbb
mov
add
and
sahf
movsl
push
test
addb
cmp
pop
inc
mov
scas
jmp
mov
push
lcall
mov
add
std
xchg
loope
pushf
mov
fstpl
pop
add
cmp
mov
mov
sbbl
stos
sbb
mov
sbb
pop
dec
cli
push
cmc
mov
pop
lock
add
iret
fiaddl
xor
pop
addr16
xor
shrb
add
cmc
add
jmp
adc
and
xchg
paddd
or
push
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
andb
jl
lahf
push
mov
rorl
out
mov
or
xchg
fcompl
imul
imul
jmp
in
loop
int3
mov
in
dec
push
pop
jb
cmp
fsubl
fwait
icebp
adc
sub
fst
mov
and
in
jmp
outsl
popl
pop
sbb
jae
cwtl
pop
enter
ret
xchg
push
jo
in
ja
dec
clc
js
or
pop
fdivrl
sub
test
push
jg
jae
dec
push
cmp
lock
out
mov
je
xchg
sarl
push
mov
pop
mov
xchg
pop
inc
lods
sub
cli
xchg
adcb
out
loopne
movsb
jo
mov
mov
push
mov
aam
sbb
xchg
xchg
shl
xchg
scas
sbb
lcall
sbb
std
inc
daa
popf
push
cs
movsl
mov
aad
sbbb
mov
dec
iret
pop
dec
pushf
repz
pop
nop
pop
js
or
adc
negb
ficomps
cmp
sbb
mov
mov
lods
jb
movsl
out
pop
js
add
mov
popa
and
mov
stos
dec
adc
jp
pop
cmp
jb
push
xchg
adc
cmpsl
xchg
adc
rcrb
cmp
lods
pop
or
ret
cld
lret
mov
cld
pushf
push
iret
xchg
push
lea
stos
dec
xor
xchg
fsubl
cmp
mull
je
and
data16
push
into
bound
shll
imul
stc
test
insb
jne
filds
das
mov
jne
stos
lcall
test
dec
sbb
mov
popa
shrl
in
cmp
dec
cwtl
and
and
jle
dec
mov
sti
mov
xor
inc
push
popw
or
lret
lahf
loop
mov
imul
sub
insl
push
jnp
adc
mov
sbb
fwait
or
mov
pop
leave
mov
adcl
sti
hlt
cmp
lods
lcall
sbb
lret
push
add
imul
push
in
fdivs
jl
dec
gs
cmp
mov
les
push
dec
scas
ror
incl
inc
loop,pt
adc
test
lcall
xchg
push
cld
mov
sub
rcrl
cli
in
inc
dec
stc
add
inc
popa
and
mov
je
add
outsl
aad
imul
or
outsl
add
mov
les
arpl
pop
dec
lock
ficomps
cmp
sub
ljmp
jl
jno
adcb
shrl
xor
ss
ljmp
sbb
addr16
xchg
cmp
mov
mov
inc
mov
addr16
repz
mov
adc
inc
mov
test
pop
sbb
pop
sub
std
adc
cli
push
sub
push
push
mov
nop
hlt
or
nop
jle
jg
push
dec
sahf
je
mov
ss
add
roll
iret
add
adc
push
lcall
pop
repnz
adc
sbb
mov
pop
cmp
imul
call
push
scas
stc
out
shrl
ljmp
or
pop
pop
pop
test
lret
mov
sub
jl
fwait
mov
xchg
imul
dec
mov
mov
shlb
cmpsl
dec
mov
push
push
inc
dec
mov
fldcw
fldl
nop
aas
lahf
test
sbb
dec
sub
fsub
int3
cmc
or
ljmp
push
or
pop
iret
or
jp
pop
adc
push
test
mov
sub
add
push
push
inc
dec
addb
pop
mov
loopne
out
cmp
out
jb
jnp
lods
lcall
and
dec
add
lock
push
jp
jmp
or
dec
or
pop
and
cs
cmp
sub
pop
notb
mov
mov
lea
pop
test
shll
mov
mov
lods
shlb
test
inc
adc
xchg
je
ffreep
mov
mov
out
cmpsl
jb
loop,pn
or
jecxz
mov
add
aam
inc
sahf
push
sbb
clc
test
sbb
lahf
and
out
pop
inc
hlt
clc
sub
loopne
imul
rdpmc
jbe
out
pop
pop
jg
out
mov
add
hlt
imul
sbb
aas
cli
dec
arpl
daa
test
push
xor
sar
xor
rolb
je
cmp
sub
mov
cltd
cli
cld
daa
ret
out
loopne
xor
out
aad
movsl
imulb
mov
scas
inc
mov
sar
sahf
pop
and
inc
outsb
mov
cmp
sub
neg
jbe
inc
adcl
and
test
lret
sub
out
stc
adc
rcll
mov
xor
in
pushf
int
sub
mov
inc
test
inc
into
popf
xchg
enter
dec
jb
xchg
mov
inc
add
or
mov
inc
mov
pop
or
pop
test
sbb
mov
ss
test
xchg
insl
inc
pop
mov
scas
sbb
stos
pop
cld
stc
xor
cmp
mov
aad
shlb
mov
popa
sbb
das
xchg
fwait
mov
stc
push
mov
cs
mov
fs
or
ficoml
insl
je
cwtl
mov
push
and
sbb
enter
pop
jle
pushf
mov
pusha
adc
mov
ja
mov
jmp
pop
cs
adc
pushf
ficoml
adcb
dec
rcr
xor
or
in
jp
sbb
mov
pushf
mov
movsl
xorb
push
test
in
sub
or
or
mov
dec
ss
push
push
adc
pushf
popa
jg
leave
in
dec
add
dec
clc
or
and
jno
or
std
dec
sbbb
push
mov
or
and
in
into
inc
movsl
sub
xor
xor
test
mov
push
xchg
add
adc
out
fpatan
cmp
add
or
aam
rol
cmp
jb
sub
and
pusha
adc
aaa
inc
mov
stos
fistl
shlb
push
cltd
lods
in
jmp
mov
in
shll
sub
das
xor
lea
jl
jo
dec
push
jl
aam
rorl
popf
inc
fnstenv
ret
jl
loopne
mov
rcr
ljmp
test
add
mov
and
fwait
xchg
imul
scas
lret
mov
push
cmp
shrl
xchg
mov
adc
ffreep
and
jecxz
mov
shlb
shr
pop
add
cmp
adc
mov
test
xchg
repz
xchg
adc
xchg
sub
ss
insb
xchg
in
stos
inc
push
lock
div
in
jo
mov
ja
adc
movsb
lret
cwtl
ljmp
mov
xor
xchg
push
xchg
ljmp
mov
dec
mov
filds
int3
call
stos
cmc
shll
lret
xor
or
data16
inc
movsl
das
dec
push
push
mov
sub
out
xor
lret
xlat
add
paddusw
out
mov
jne
idivb
int
ficoml
xor
xor
mov
fiadds
adc
testb
jb
repz
divl
rcll
mov
cmpsb
ljmp
leave
insb
xchg
xchg
test
jne
cs
and
mov
mov
add
dec
in
dec
shlb
cmp
add
mov
not
sbb
out
repz
nop
out
sub
jo
das
mov
into
aad
sbb
inc
and
mov
sub
in
fsubl
stc
pop
mov
mov
ss
mov
xlat
in
jb
sub
popa
dec
sbb
dec
xorl
ja
inc
daa
arpl
fisubrl
inc
fwait
push
pop
clc
popa
or
das
scas
jle
add
data16
or
or
pop
aad
orb
test
cwtl
mov
mov
je
xor
mov
cmp
dec
jecxz
sub
adc
shlb
mov
mov
loopne
and
repnz
ljmp
lods
out
dec
jg
mov
inc
mov
or
push
movb
popf
pop
ljmp
xchg
ret
xorl
es
pop
mov
adc
add
sub
aam
insl
xor
cmpsb
fadd
fcom
adc
fldt
adc
adc
xor
sbb
ds
lods
ljmp
lahf
dec
push
gs
call
mov
push
shlb
insl
jns
sub
sub
push
popa
push
aam
xchg
mov
sbb
mov
jge
je
movsb
sbb
pop
dec
pop
or
lods
sbb
xor
inc
mov
stos
xchg
push
cli
lcall
addl
and
push
popa
pop
sub
ds
mov
sub
rorb
into
inc
mov
push
stc
and
push
dec
push
cmpsl
jo
cli
popf
je
scas
or
mov
clc
pop
cmp
cmc
int3
mov
mov
icebp
repz
and
add
stos
imul
cwtl
cmp
rcrl
mov
bound
and
pusha
jp
add
pop
ret
sbb
jg
xor
and
sbb
sbb
pop
or
pop
push
pop
jnp
or
jmp
ror
push
pop
pop
aam
jmp
sub
push
hlt
mov
gs
dec
push
push
das
jnp
andb
dec
cwtl
out
ja
xchg
out
stos
mov
dec
call
cltd
clc
psllw
in
xor
sub
jo
and
outsb
into
lahf
jnp
jne
add
sbb
sbb
scas
sbb
cmp
add
scas
mov
das
mov
fsubl
or
test
lock
sti
dec
fs
sti
push
inc
mov
pop
sbb
jae
fbld
cmp
int3
loop
sub
aad
es
xchg
jae
sub
cmp
xor
or
fwait
lret
sub
popf
leave
ret
imul
pop
or
cli
test
jne
lret
repnz
js
sub
das
ret
xor
cmp
ss
dec
dec
mov
push
insb
popf
loop
ret
rorl
popl
or
mov
push
shr
jmp
mov
sbb
cmp
mov
add
ret
mov
mov
mov
inc
add
shll
test
dec
out
jo
rcrb
mov
ljmp
or
inc
jne
inc
sub
sbb
in
sbb
fs
or
pop
mov
fldcw
movsl
add
ds
js
mov
lahf
insb
or
sbb
pop
sbb
aad
xchg
inc
outsb
sahf
lea
sub
aam
pinsrw
mov
add
xor
and
in
jge
pop
jns
das
in
js
movsb
cmp
nop
pop
shl
rclb
push
adc
cmc
jle
pop
xor
imul
dec
addr16
fldcw
sbb
aaa
outsl
dec
inc
sbb
dec
add
ss
fcomps
movsl
sbb
rep
in
or
jbe
outsl
lea
insb
out
push
js
pop
scas
xchg
es
add
add
rcl
stc
dec
test
in
hlt
int
xchg
and
cmp
fisttpl
pop
jge
and
xchg
dec
in
xor
movsb
cmp
and
cmp
push
push
sub
call
das
subb
fs
dec
shlb
gs
inc
stos
in
pop
pop
push
mov
addr16
inc
xchg
fimuls
push
aad
xor
dec
jo
xchg
jle
push
cmc
push
out
paddq
std
aaa
shr
push
xor
stos
cmpsb
iret
mov
or
dec
and
xor
gs
pop
std
rcll
and
xchg
enter
and
or
push
lcall
lds
daa
cmp
push
pop
add
scas
cld
jb
dec
in
dec
ror
xor
mov
mov
cmp
cltd
cwtl
jno
push
xor
inc
pop
pop
cltd
pop
out
push
cs
dec
movsl
lret
pop
ret
pop
stos
mov
mov
jns
scas
cmp
testl
shr
in
cli
inc
pop
ficoms
adc
shlb
pop
bound
push
aaa
call
arpl
sub
enter
and
icebp
mov
xchg
push
rclb
xor
and
fwait
jmp
insb
mov
xchg
xchg
xlat
pandn
cmp
adc
cmp
sbb
int
mov
fs
pusha
xchg
ret
rolb
pop
mov
aam
pop
test
or
int
jne
jecxz
push
jno
add
js
test
gs
dec
cmp
push
sub
inc
cs
jp
jae
stos
addr16
sub
aad
ficoms
test
hlt
lret
add
xor
dec
xor
push
sbb
nop
mov
movsl
push
sub
out
and
push
mov
pop
ret
hlt
mov
or
jl
pop
repz
in
orl
mov
lret
pop
sbb
mov
add
imul
xor
xor
shll
dec
mov
mov
lahf
inc
xchg
in
sub
cmp
lret
data16
ficoml
mov
dec
xchg
or
sahf
mov
mov
pushf
xchg
popf
jecxz
add
mov
or
sbb
mov
rcll
popw
shlb
ja
cs
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
dec
xchg
mov
pusha
stos
pop
mov
cmp
xchg
loopne
insb
stos
pop
mov
out
out
stos
xchg
sub
jg
mov
xchg
call
test
and
or
jl
jle
cmp
sub
mov
mov
sbb
imulb
in
xlat
inc
inc
mov
je
arpl
lods
mov
stc
mov
pop
call
mov
sahf
mov
mov
sub
push
mov
lahf
lock
insl
mov
out
adc
dec
mov
xchg
aas
dec
in
lock
inc
bound
mov
push
popf
fists
icebp
clc
mov
jns
scas
xchg
mov
idivl
add
add
rcll
pop
bts
and
movsb
fsubp
fsubl
movsl
mov
or
cwtl
leave
ja
and
jns
ja
xor
sub
adc
and
or
aad
sti
cmp
jmp
or
push
add
ss
adc
sub
jp
jne
ficoms
cmp
adc
sbb
mov
and
in
inc
jae
lcall
dec
int
shr
call
mov
push
xor
scas
xchg
rcll
mov
ret
rclb
fs
addr16
add
rcrl
ja
cld
movsl
mov
cli
dec
add
pop
inc
mov
pop
punpckhbw
xor
test
movsl
mov
mov
js
jg,pt
inc
xor
fidivrs
dec
jnp
mov
xchg
jecxz
out
push
adc
sub
insb
lahf
mov
xchg
pop
jno
sbb
in
sbb
lcall
addr16
divl
lahf
jb
fdivl
xchg
push
xor
cwtl
inc
xchg
cmpsb
scas
dec
or
mov
cmp
fimull
sbbl
mov
leave
scas
jns
lret
jecxz
mov
sub
push
test
jns
icebp
pushf
fstps
sbb
fldl
cmpsl
insl
in
xchg
data16
and
in
push
mov
adc
aaa
dec
pop
inc
test
push
pop
stos
iret
loopne
lahf
dec
inc
test
mov
jmp
mov
xchg
rclb
ds
xor
pop
ja
inc
jb
mov
jl
mov
je
into
xchg
test
lret
nop
sti
pop
cmpsl
in
je
std
fs
or
adc
jge
adc
mov
adc
mov
and
cmp
pop
daa
jno
mov
and
outsw
addl
in
sub
out
add
jle
mov
push
mov
rcll
add
cmpb
pop
loop
xchg
and
pop
cwtl
in
in
cmp
sti
mov
or
cmc
push
cmpsl
lods
sbb
mov
popf
dec
cld
jno
out
xor
cmp
inc
hlt
insb
mov
and
xor
adc
push
test
std
jb
cltd
sub
cmp
jmp
add
adc
xlat
imul
pushf
push
xor
push
loope
inc
jl
repnz
mov
rorb
mov
jae
jnp
push
sub
leave
or
pop
xchg
sbb
call
xor
fbld
or
mov
aam
and
in
sbb
mov
push
or
add
ret
adc
adc
mov
scas
sbb
add
lock
cmpsb
fists
or
loopne
mov
cmp
and
push
pop
cltd
or
sbb
push
test
test
pop
mov
outsl
push
dec
pop
dec
imul
mov
xlat
inc
in
movsl
roll
xor
das
and
pop
inc
stos
call
outsb
jg
sbb
call
lds
repnz
xor
xchg
outsb
jmp
ficoms
hlt
mov
mov
mov
ret
lcall
and
stc
pop
test
test
lea
clc
imul
and
icebp
jmp
aam
jnp
xor
test
mov
jmp
lods
push
mov
xchg
inc
adc
shlb
lahf
push
add
ret
pop
pop
repz
push
sub
test
xchg
xchg
pop
and
cltd
mov
addr16
ret
aaa
jae
mov
mov
mov
ja
add
jg
pop
sbb
dec
xchg
jg
mov
js
adc
pop
xor
xor
pop
dec
sarl
push
mov
push
dec
pusha
pop
cld
jbe
out
sbb
push
shr
or
ret
sub
insl
xor
jb
int
scas
scas
aas
jmp
dec
mov
insb
in
mov
data16
push
xchg
jg
fisttpll
js
mov
pop
pushf
adc
jno
sbb
cmp
push
or
daa
inc
sbb
imul
lret
push
movsl
xor
sub
call
mov
ret
cmp
dec
dec
and
xchg
adc
lock
push
xchg
jne
repz
in
scas
outsb
lahf
xchg
out
push
cmp
int
pop
fs
mov
lcall
enter
jg
cmp
outsl
fwait
push
push
pushf
jb
push
xchg
pop
jl
lret
add
adc
pop
das
inc
sbb
mov
cld
xchg
mov
nop
testl
insl
sbb
pop
push
aam
dec
std
and
in
sbb
std
lret
hlt
xchg
jae
and
bound
push
jns
divb
outsl
out
int
pop
aam
div
mov
das
xchg
mov
pushf
add
cli
xor
mov
repz
sbb
loop
in
rcrl
out
or
sub
mov
lods
out
es
cmp
scas
cltd
rcll
cltd
adc
adc
lret
cmp
js
xchg
fcomps
push
sub
jnp
push
jns
hlt
test
mov
add
mov
movsb
iret
repnz
sbb
lcall
pop
data16
inc
xchg
lret
push
sbbl
jne
jo
dec
arpl
adc
fbstp
inc
xlat
test
ret
je
and
daa
mov
push
mov
push
cmp
jl
scas
enter
xchg
sub
cwtl
and
daa
daa
sub
pop
gs
sti
mov
jbe
in
in
cmpsl
xchg
in
mov
push
sti
pushf
xor
movsl
lahf
bound
movsl
sbb
inc
test
test
xlat
adc
xchg
push
xor
clc
mov
fs
loopne
mov
adc
mov
xor
stos
xchg
add
fcomip
pop
fldln2
or
icebp
shrb
push
daa
lods
push
pop
ja
div
popf
clc
scas
stos
dec
nop
adc
inc
sarb
xchg
cltd
jl
jnp
addr16
xchg
lock
jmp
ljmp
sub
mov
aam
ja
movsb
jl
add
sub
xchg
nop
andl
pop
bound
dec
faddl
rcl
add
sbb
dec
mov
popf
rcrb
fsub
clc
sahf
sub
int3
sub
addr16
pop
pop
testb
out
in
mov
lock
or
jb
test
xchg
pop
sbb
movsl
push
mov
xchg
pop
orb
mov
push
mov
lret
dec
cmp
add
aaa
jnp
outsb
dec
bt
jns
or
out
adc
add
aas
es
add
ret
mov
jae
cmp
stc
test
xchg
fstp
and
dec
mov
sbb
and
mov
movsl
loopne
andl
add
jmp
ret
or
lret
iret
int3
push
stos
inc
int
scas
stc
popa
xlat
les
mov
bnd
ss
fnsave
mov
lods
dec
insl
sbb
mov
or
in
mov
es
push
fdivl
in
xlat
cmp
data16
push
es
ret
dec
jecxz
ret
rcll
fs
mov
mov
aam
jae
lods
push
js
xchg
or
out
into
in
sahf
adc
sub
addr16
int
add
adc
cmpsb
sbb
cmp
ret
sti
mulb
sub
inc
add
push
ljmp
ret
or
mov
aaa
imul
mov
loopne
push
aad
pop
je
mov
int3
xchg
das
test
cmp
push
and
sahf
jge
mov
fldt
fdivl
lock
mov
cltd
sub
and
dec
mov
es
mov
insb
rcr
push
outsl
lahf
loopne
pop
movsb
adc
adc
sbb
push
push
loope
jecxz
push
mov
push
out
mov
aaa
cs
pop
cld
movsb
sub
sub
in
jae
push
repnz
inc
aam
mov
mov
repnz
mov
out
pop
cs
cltd
add
mov
loop
imul
in
leave
addl
stc
jns
adc
es
mov
fcmovnb
lret
outsb
shl
test
lret
aam
sbb
aas
orb
mov
inc
xchg
bound
fnstenv
pop
fsubrp
out
mov
dec
cmc
jge
dec
stos
push
sub
sub
jg
cs
pushf
mov
insb
daa
sbb
push
push
push
lods
xor
xchg
std
shll
aam
adcb
and
pop
cmp
and
imul
mov
jae
sub
push
stos
xchg
push
mov
mov
fldt
out
dec
std
xchg
loopne
fldcw
arpl
sbbl
mov
cwtl
sbb
std
sbb
popf
mov
mov
aas
fisubl
fmull
sub
sbb
int
jbe
int3
aam
dec
add
fnstcw
aad
dec
sbb
push
fstp
sbb
or
scas
pop
rorb
sahf
icebp
mov
push
mov
shrb
imul
mov
nop
and
bound
or
ja
add
rcr
adc
xchg
rcl
dec
popa
inc
je
and
int
pop
adc
pop
int
jae
jae
sub
pop
add
add
pop
out
fbld
xchg
xchg
jne
lahf
rcrb
cld
aaa
sub
push
out
lea
iret
xchg
cmpsl
xchg
mov
shll
and
xor
mov
movsl
push
sbb
xor
sti
add
gs
sub
or
jecxz
xorl
bound
push
xor
cmp
adc
mov
out
mov
xlat
sahf
push
xchg
mov
popf
mov
inc
xchg
out
loopew
imul
sub
cld
xchg
out
xor
in
aam
loop
cmc
fldt
mov
sub
inc
in
sub
aaa
je
cli
cwtl
rcrb
inc
decb
into
enter
push
cmp
and
xor
cld
je
addl
addb
scas
imul
jecxz
jmp
ficomps
repz
push
and
pop
xchg
testb
repnz
outsl
outsl
push
jnp
xchg
mov
stos
aad
pop
mov
pop
std
inc
jl
mov
or
ds
dec
shlb
push
or
or
mov
xchg
mov
push
pop
or
popf
shll
pusha
mov
jmp
sahf
or
psraw
cltd
inc
xchg
jno
xor
push
inc
pop
out
push
mov
push
xor
subl
pop
icebp
iret
in
push
sub
enter
and
xchg
and
insl
inc
hlt
pushf
aaa
add
xchg
sub
cs
fiadds
out
mov
or
cmc
enter
iret
sahf
push
and
push
lret
lds
inc
loope
scas
push
sbb
mov
push
idiv
pushf
add
cmp
mov
fbld
mov
add
cmc
cli
pop
repnz
jmp
sbb
sub
push
sbb
mov
bound
sub
mov
test
imul
or
pop
les
sub
jne
lret
mov
mov
inc
pop
out
and
fwait
test
jne
mov
lret
adc
inc
mov
jbe
sbb
xor
dec
movsb
adc
mov
jae
cmp
or
cmp
or
xor
ret
or
sub
adc
gs
xchg
js
nopl
scas
std
inc
clc
hlt
mov
sti
test
pop
jno
pop
fld
mov
jl
arpl
test
add
sarl
mov
ret
xchg
inc
sahf
sti
popf
popa
sub
sub
iret
test
xor
push
dec
dec
push
inc
fdivl
shlb
cmpsl
adcb
sbb
and
int
stc
fs
or
fwait
pop
ljmp
pop
mov
adc
cld
insl
les
aas
push
cmpsl
inc
jge
gs
into
loopne
enter
add
lods
xorl
xchg
or
pop
stos
add
mov
cltd
cs
cmc
inc
jp
push
mov
dec
lock
addr16
pop
ret
test
mov
inc
sti
xchg
adc
das
sbb
cmpsl
nop
int
stc
scas
sbb
xor
mov
test
movnti
cwtl
call
add
mov
int3
les
push
fimuls
aas
sub
std
leave
imul
daa
add
mov
addr16
lret
mov
push
sub
xchg
cltd
ret
add
rol
stos
adc
clc
clc
addr16
addr16
insl
aas
sti
jg
mov
xchg
mulb
mov
jb
inc
imul
add
popf
xchg
mov
stos
mov
in
or
dec
xor
dec
jns
add
loop
stc
push
pusha
mov
adc
or
fld
dec
push
idivb
add
inc
mov
icebp
sub
inc
and
jb
dec
inc
jmp
adc
call
or
jne
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
dec
pop
inc
aas
mov
cmovg
xor
cmpl
in
cmp
mov
fdivrl
pop
ret
cmc
int3
sub
or
mov
filds
add
shrl
push
push
dec
mov
xor
pop
xor
push
mov
leave
scas
or
call
mov
and
mov
call
in
pop
arpl
fimuls
stos
cltd
push
stc
stos
cmp
mov
test
add
int3
cld
dec
push
mov
aaa
pusha
imul
or
cmp
adc
clc
out
scas
test
xlat
in
add
outsl
mov
push
arpl
jbe
hlt
js
sub
sbb
jp
ja
adc
mov
sub
fildl
push
and
inc
pop
stos
out
jge
sbb
add
push
xchg
cmp
cmp
mov
mov
push
lock
cli
loopne
lret
or
pop
test
mov
dec
mov
and
dec
pop
jnp
aas
and
jae
add
inc
cmc
adc
pop
or
cmc
outsb
and
sti
dec
movsl
add
pop
ds
push
sbb
rcll
test
lea
cwtl
sub
adc
dec
and
dec
iret
add
mov
inc
inc
xor
inc
stos
shll
sub
loop
jge
pop
xchg
xchg
mov
xor
fwait
aam
xchg
mov
pop
pushf
fs
xchg
xchg
out
fsubl
cmpsb
stos
in
sbb
or
inc
das
dec
cmpsl
or
cmpsb
test
push
movsb
ficoml
dec
xchg
inc
inc
jae
loop
adc
jmp
loope
das
int
mov
inc
ror
adc
cmp
in
push
mov
mov
fbld
push
pushf
xchg
cltd
dec
movsb
das
adc
ja
sub
hlt
mov
sub
inc
sub
adc
dec
and
pop
cld
push
int
daa
mov
add
js
push
mov
adc
pop
stos
hlt
sti
insl
sbb
inc
fstps
push
xchg
xchg
clc
inc
aam
xchg
push
jo
shll
jl
sub
and
shll
sbbl
and
jge
and
push
loopne
xchg
cli
inc
enter
int
js
insl
in
scas
add
push
push
sarb
sbb
mov
shlb
cmp
enter
add
add
mov
sbb
test
jbe
mov
and
jmp
aaa
enter
pop
aam
repz
jbe
cmp
xor
fcomip
mov
inc
push
fwait
imul
jo
ss
cwtl
xlat
sti
push
fadds
sahf
loope
pop
out
decl
fmulp
ljmp
jae
clc
xor
outsb
mov
mov
stos
xchg
cmc
bound
and
sub
xlat
test
jecxz
mov
and
push
out
clc
lock
fcomp
dec
in
xchg
lea
push
push
xor
int3
mov
xor
jo
fcmovnbe
dec
jnp
outsb
jmp
stos
pop
rcr
pushf
mov
jge,pn
clc
adcb
mov
scas
lea
fs
or
cmp
sub
ror
cmpsl
jns
pop
addl
sar
out
xor
pop
int
sub
mov
iret
cmpsl
or
cs
shll
cmp
lret
add
shl
data16
inc
xor
cltd
inc
repz
push
fmull
add
cwtl
mov
lret
jle
leave
lods
inc
jecxz
cmp
cli
push
adc
fstp
pusha
bound
std
pusha
sub
sub
mov
sub
and
xor
pop
mov
cld
out
push
ljmp
aas
out
jae
pop
gs
lea
fcoml
cmp
adc
jle
sbb
mov
mov
jo
adc
int3
sub
mov
push
adc
or
xor
cmp
xchg
sub
js,pt
jg
pusha
mov
cmp
movsl
iret
sbb
inc
or
xchg
es
add
in
stos
inc
stc
add
dec
or
stc
dec
inc
push
mov
fsub
je
sub
cmpsb
loopne
mov
hlt
mov
jecxz
mov
mov
sbb
mov
movsb
mov
xorl
je
int3
adc
jmp
int
fnstsw
xor
fdivp
dec
add
fldl
stc
ret
cmp
aaa
movsb
inc
cwtl
nop
clc
mov
or
pop
cmp
push
mov
insb
xchg
mov
mov
popf
leave
adc
lcall
mov
arpl
mov
add
jmp
outsb
insl
enter
cli
dec
adc
hlt
rolb
into
aas
arpl
xchg
mov
mov
mov
insb
inc
mov
notl
aad
push
jnp
idivb
cmp
jge
movsb
popf
in
or
sbb
mov
test
pop
es
adc
les
pop
test
cwtl
out
jnp
test
xor
mov
fmuls
mov
rorb
sti
cmp
imul
mov
mov
cltd
clc
or
adc
mulb
sbb
jo
mov
outsl
add
pop
cli
inc
nop
inc
call
push
jecxz
mov
or
fadds
sbb
inc
pushf
push
adc
sahf
cmp
or
mov
sub
fimull
push
pop
push
mov
pusha
sbb
dec
mov
mov
out
inc
inc
lret
adc
mov
add
push
sbb
mul
pop
std
mov
pop
jb
xlat
mov
xchg
test
pop
adc
pop
add
outsb
inc
inc
ror
mov
inc
jmp
into
and
fsubr
leave
xor
jo
ljmp
testl
jle
inc
aad
inc
cmp
iret
xorb
pop
or
rcl
xor
fldt
int3
xchg
test
lea
sbb
sbb
inc
imul
rcrb
pop
sbb
insl
push
addr16
int3
sbb
loopne
je
pop
shlb
and
pop
xchg
push
mov
sbb
ret
push
jo
pop
mov
pop
mov
or
xchg
xchg
rorb
adc
fistps
stos
pop
xchg
or
push
movb
mov
ss
mov
aad
cld
aaa
adc
ja
inc
pop
xchg
mov
in
xchg
sbb
stos
sbb
daa
xchg
aas
xor
fidivrl
gs
insb
fsubl
xor
mov
jne
test
push
sarw
mov
outsb
xor
mov
dec
pop
sub
jg
subl
es
mov
lea
mov
rolb
dec
lods
dec
push
fbld
nop
daa
inc
push
aas
clc
mov
and
hlt
pop
push
push
shll
add
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
enter
mov
adc
xchg
call
addb
push
xor
in
aad
loop
sahf
mov
jns
sti
in
fdivl
cmp
push
sahf
jns
inc
and
ljmp
mov
insl
loopne
pop
push
dec
jg
cmp
jns
fcoml
popa
ret
mov
cs
jl
lret
dec
das
std
lods
add
popa
dec
addb
test
fsubs
adc
push
bound
loop
sbb
jae
jg
cmpsb
or
inc
cmpsb
push
sahf
sarb
popf
and
ss
inc
and
lods
inc
sti
fstp
lea
add
int
lods
bound
sbb
xor
mov
sub
inc
enter
mul
mov
xor
rcrb
es
mov
cmpsl
add
cld
pop
and
inc
sbb
or
clc
sbb
repz
js
jnp
mov
clc
pop
push
shrd
mov
xor
fwait
inc
out
aad
pop
jnp
dec
shl
test
sub
jp
cmc
icebp
mov
loopne
test
data16
or
adc
repnz
scas
xchg
push
pop
inc
into
inc
xor
inc
into
rcr
jp
movsl
icebp
mov
mov
icebp
mov
stos
ljmp
addr16
mov
cmp
adcl
push
cmc
mov
sti
jmp
sarl
cld
mov
inc
xchg
xchg
rep
clc
push
or
std
xor
std
cmp
sbb
dec
cli
stos
mov
sahf
aad
mov
push
push
fimull
and
clc
push
dec
addr16
adc
imul
shr
ds
sbb
pushf
add
call
mov
pop
cmp
and
xchg
movsb
mov
pushf
sbb
test
ret
fimuls
adc
arpl
imul
call
xor
jne
jns
add
mov
xchg
cmc
ss
sahf
xor
push
push
xor
int
lock
pusha
push
scas
cmp
adc
jge
roll
cmp
out
ret
loop
mov
daa
sti
fbstp
mov
out
sbb
adc
pop
mov
mov
xchg
lea
enter
hlt
mov
inc
cmp
adc
pop
pop
fwait
pushf
cmp
pusha
loopne
adc
xor
into
test
repnz
inc
mov
jmp
rcll
xorl
inc
mov
jge
or
bound
mov
out
lcall
dec
cltd
cmp
xor
roll
mov
mov
icebp
aaa
int
cmp
shll
insb
or
xor
and
je
inc
scas
hlt
les
ficompl
rorb
inc
mov
xchg
inc
sub
lret
daa
jno
cmp
pushf
ret
call
sahf
jns
add
test
push
inc
xchg
hlt
push
mov
les
repnz
mov
add
adc
mov
mov
or
push
or
int3
or
enter
pop
sub
xor
ficoml
mov
lods
or
clc
push
push
or
lret
mov
mov
inc
and
fistl
test
xchg
pushw
push
aam
xor
int
loop
mov
and
push
mov
cwtl
sub
ret
cmpsl
dec
mov
stos
add
dec
mov
movsl
orb
pop
ret
ds
ljmp
fistpll
xchg
xor
jne
gs
out
out
ret
ja
jl
lcall
outsb
mov
bnd
les
leave
stos
jnp
mov
clc
and
push
rorb
lea
lret
cmp
mov
jae
loop
stos
pop
pop
cmpsl
js
adc
imul
fwait
cmpsb
fmul
out
cwtl
pcmpeqd
insl
mov
push
sbb
cltd
ljmp
xor
add
jle
add
mov
shrb
fists
mov
pop
imul
xor
lods
ficoml
dec
xchg
pop
into
add
in
out
add
cmpsl
loop
mov
push
jmp
inc
ret
jle
outsb
lock
js
xchg
stc
popf
pusha
loopne
sbb
inc
mov
aaa
pop
pusha
and
movsl
std
jmp
in
outsb
ret
negl
rcll
pop
sub
clc
pop
test
lds
arpl
test
adc
mov
xor
mov
js
movsl
ret
xchg
out
sbb
or
lods
movsl
fwait
in
sbb
imulb
push
sbb
jp
inc
lods
sbb
add
fdivrs
psubsw
adc
sbb
push
cmc
sbb
cwtl
inc
loop
rclb
imul
jns
test
imul
add
fstpl
sub
mov
pushf
fcmovnb
ds
jle
push
and
icebp
jo
push
dec
mov
mov
mov
ds
jl
pop
or
jnp
aaa
xor
and
rolb
out
push
mov
icebp
mov
xchg
popf
fsubl
adc
fsubr
popa
jge
pop
jae
std
int3
sub
inc
std
or
lea
sub
push
jno
into
mov
negl
push
mov
xchg
mov
icebp
cmc
inc
dec
pop
stos
out
movsl
cwtl
jecxz
loopne
pop
clc
cli
pop
lods
cs
jmp
das
jno
jmp
pop
adc
dec
das
outsb
inc
js
cwtl
push
cmp
pop
jns
movsb
xchg
or
scas
enter
in
fstps
lods
shll
sub
cmc
jnp
push
dec
bound
data16
or
dec
xor
loop
mov
fidivrl
into
scas
addr16
and
or
stc
push
test
mov
adc
or
pop
cmp
and
sub
xchg
scas
in
movsb
sbb
jmp
or
lea
lahf
daa
jnp
cmpb
mov
lret
cmpsl
fists
dec
mov
adc
sub
daa
ja
dec
popa
mov
mov
mov
fldenv
fcomi
xchg
dec
dec
pop
imul
orl
and
pop
and
mov
adc
loope
in
sahf
pop
xor
mov
sbb
incl
cmp
in
fisubrs
add
pop
leave
xchg
test
gs
adc
rcl
push
push
sbb
test
add
xor
push
das
mov
cmpsb
fnstenv
cmp
push
jnp
push
dec
out
ja
sub
scas
sbb
xlat
loope
xchg
outsl
lret
add
iret
mov
fdiv
shl
and
std
pop
shr
loop
xor
jmp
xlat
in
addl
mov
stos
loope
pop
jl
hlt
out
in
das
sti
adc
sbb
sub
jp
or
ja
jge
ret
cmp
push
ret
inc
movsl
in
loopne
and
aam
or
adc
aas
sahf
call
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
enter
push
lcall
or
adc
or
and
inc
jbe
aam
movsl
movsb
scas
or
movsl
mov
inc
xor
pusha
fstpl
cmp
pop
jbe
out
in
mov
pop
out
arpl
push
push
mov
mov
mov
ja
mov
mov
fisubs
lods
push
ja
loope
orl
mov
pop
jb
mov
sub
add
call
or
push
sbb
sti
mov
loope
ds
mov
aas
adc
add
ss
adc
pop
xor
mov
stos
movsl
jl
push
mov
jb
or
jb
push
fcmovbe
mov
push
jno
shll
loope
lahf
pop
mov
cmp
pop
js
inc
aas
data16
ja
mov
out
stos
lock
negl
sbb
xchg
imul
push
pop
cmpsl
cmc
or
ljmp
loop
scas
cmp
scas
test
out
mov
sbb
cli
or
cltd
or
inc
lock
sub
push
je
test
mov
mov
mov
mov
and
lods
cmp
mov
ret
xor
leave
mov
xchg
or
mov
jmp
lock
inc
js
inc
hlt
push
es
in
mov
adc
mov
or
sti
or
xor
pop
popf
and
pop
cmp
test
rcl
inc
in
push
loop
insb
mov
mov
insl
sahf
in
pusha
push
lock
mov
addr16
aaa
pop
into
mov
test
jb
push
push
dec
push
add
insb
xor
mov
adc
ret
sub
dec
push
js
testl
push
push
xlat
testb
sbb
xchg
push
insb
mov
add
dec
mov
mov
fmuls
pop
repnz
pop
in
cmpsl
mov
sub
sbb
outsb
fwait
jno
or
sbbl
jmp
pop
mov
outsb
xchg
add
sub
pop
add
pop
data16
lods
pop
aam
jge
jecxz
insl
mov
dec
inc
xchg
int3
pop
xchg
pop
dec
jb
dec
inc
ljmp
mov
ja
mov
add
push
rcl
loope
or
cs
mov
mov
test
push
rolb
std
loopne
movsl
xchg
cmc
sub
roll
mov
adc
pop
add
and
push
dec
add
pcmpeqb
in
pop
dec
push
jmp
orb
cli
mov
into
mov
pop
pushf
in
dec
lods
pand
mov
mov
mov
fistpl
call
fs
addr16
jno
call
test
bound
push
sbb
scas
push
cmp
jp
sbb
fisubrl
mov
mov
push
bnd
repz
sub
fsts
and
jnp
inc
sbb
fisttpll
add
mov
adc
aaa
aam
popf
sbb
cmp
push
and
jo
mov
movsl
mov
mov
outsb
sbb
xchg
dec
or
sub
sub
xor
push
mov
lods
das
data16
fucomip
rol
je
jecxz
dec
ljmp
movsb
test
cmp
jns
daa
shlb
mov
vdivps
out
push
retw
in
jle
pushl
jae
fwait
fs
lcall
push
insb
push
push
xchg
das
cli
mov
pop
and
xor
aaa
cmc
and
imul
push
test
mov
push
inc
jbe
push
loopne
stc
mov
aas
mov
cltd
insl
mov
je
dec
sbb
ret
popa
cmp
lahf
out
rcrb
dec
outsl
push
dec
insl
push
fstpt
test
push
add
loope
jbe
sbb
adc
insl
dec
jmp
cli
jns
rcrb
or
push
mov
icebp
popf
inc
loope
push
mov
mov
daa
cmp
out
movsb
rcl
sbb
popa
dec
jle
sbb
jl
fdivrs
sub
and
in
xchg
jbe
lds
jle
sbbl
push
stos
aas
push
xchg
push
loop
js
call
cmpsb
bound
orl
xor
or
and
dec
lods
add
xor
mov
cmc
or
mov
push
mov
pusha
add
pop
adc
sub
pop
ljmp
mov
mov
jmp
pop
inc
lahf
cmp
pop
cs
sub
bound
lea
fs
xchg
add
out
push
pop
shlb
fcom
inc
adc
fcmovbe
xchg
xor
cwtl
bound
and
dec
sbb
inc
fnstsw
testl
push
icebp
jae
push
int
or
cmc
bound
and
pop
mov
stc
ret
in
xlat
ret
sbb
fidivl
xchg
sbb
or
roll
stos
test
dec
movsl
pop
lds
pop
push
jbe
fsub
sbb
mov
or
mov
int
jmp
push
stos
sbb
pop
repnz
jne
jae
enter
hlt
pop
jmp
dec
mov
icebp
sbb
xor
mov
inc
les
sahf
or
test
pop
pushf
ret
pop
jp
fwait
scas
adc
in
jmp
adc
jecxz
in
xor
in
cltd
mov
cmp
pop
add
ja
inc
int3
lcall
stos
xchg
dec
arpl
call
and
in
mov
jecxz
movsl
pop
mov
imul
flds
outsb
loopne
push
idivl
sbb
push
inc
add
lahf
cs
pop
dec
nop
pusha
outsl
neg
ret
jo
into
fsubl
nop
clc
jno
imul
push
pop
xor
test
ds
jg
mov
lcall
fiadds
xchg
jl
jl
repz
mov
lahf
rcl
adc
jo
enter
outsl
jnp
sarl
or
shl
sti
mov
xchg
test
xchg
loopne
cld
lds
icebp
stc
icebp
imul
push
jl
cs
ret
out
ss
xchg
test
pop
push
aaa
fadds
call
inc
fidivs
mov
or
sbb
scas
add
fidivrs
mov
test
fadd
add
xor
push
jo
daa
push
imul
daa
cmp
int
pop
sub
cli
dec
push
inc
repnz
lods
scas
cwtl
inc
cmp
sub
mov
mov
push
xor
pop
jmp
nop
icebp
mov
out
mov
mov
jnp
cmp
mull
jecxz
sub
push
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
and
ja
test
mov
jecxz
les
pop
lret
xchg
inc
fisubrl
fwait
hlt
pop
cwtl
int3
and
test
mov
push
xchg
xlat
jg
xorl
mov
mov
and
mov
dec
jae
xor
inc
testl
in
int3
out
hlt
jl
test
in
lret
rclb
mov
ljmp
gs
xor
test
les
push
add
in
cmp
test
or
stc
mov
scas
xor
in
into
fcomip
jl
cmpsb
cmp
scas
repz
test
mov
push
or
xor
xchg
gs
pop
pop
adc
movsb
pushf
xor
shr
ja
adc
xlat
push
inc
pop
mov
test
inc
xchg
fstps
push
sbb
sub
imul
mov
xchg
pop
outsb
xor
pop
int
mov
and
nop
sbb
xchg
pop
repz
or
inc
dec
stos
push
enter
adc
addr16
cmp
sub
test
sub
jne
push
lock
inc
add
addr16
push
in
je
xor
lret
mov
cmp
dec
push
sub
outsl
push
out
and
sub
jae
jl
aad
ja
push
jno
mov
and
mov
lret
bound
pop
nop
testb
mov
outsl
in
pop
lds
icebp
das
out
movsb
fdivrl
insl
lds
add
cmp
stc
xchg
fbld
popf
push
imul
mov
ljmp
inc
pop
adc
sbb
lahf
nop
mov
cli
mov
dec
sahf
ja
cltd
and
test
push
jp
adc
jbe
mov
in
orl
ret
out
jle
loopne
ret
pop
or
pop
scas
xchg
mov
test
sbb
mov
test
pop
jno
out
push
and
mov
jbe
outsb
push
jmp
xchg
in
xor
mov
int3
divl
push
aad
addb
je
and
fidivs
inc
mov
repz
pop
idivl
movsb
jb
sbb
cmpsl
cmp
lcall
jae
xor
loop
ret
fldt
mov
cmp
jl
addr16
out
aad
push
jmp
or
pop
incl
rclb
mov
push
xor
xlat
inc
inc
dec
ja
movsb
lcall
mov
icebp
jns
add
aam
testl
ret
addb
sti
xchg
andl
aaa
jmp
add
int3
push
xor
pusha
shll
dec
icebp
inc
mov
mov
or
es
bound
inc
icebp
jno
mov
mov
call
rcl
inc
mov
enter
inc
out
cmp
mov
inc
lret
in
loopne
xor
dec
gs
cmpsl
outsb
repnz
inc
nop
or
scas
adc
fistpl
and
insb
xchg
lret
fisttpll
push
add
ror
jmp
jecxz
dec
aaa
push
add
jbe
mov
ja
lea
ss
and
mov
rcll
or
or
frstor
int3
shr
leave
dec
out
add
dec
dec
adc
xchg
dec
xchg
sub
sub
js
adc
push
pop
sbb
mov
jl
pusha
cmp
mov
repz
dec
jbe
mov
sbb
js
mov
fimuls
mov
icebp
imul
gs
mov
pop
jp
mov
add
inc
movsb
stos
adc
scas
ficomps
in
mov
scas
scas
pop
pop
cmpsb
push
inc
xlat
pop
int3
inc
mov
cs
or
mov
test
shr
cmp
add
fists
call
icebp
pop
xchg
push
fldl2t
test
cli
jmp
ja
ret
stc
icebp
pushf
inc
sub
or
movsb
test
ffree
loope
xor
syscall
repz
push
fs
lods
aam
xlat
inc
adc
aam
and
scas
call
cmp
sbb
out
dec
push
and
pushf
xchg
loop
orb
jp
sub
fsubs
pop
orb
cli
mov
mov
pop
xchg
xlat
adc
into
aaa
jl
in
jl
faddl
jno
xor
movsb
mov
or
or
cmp
test
add
mov
mov
stos
bound
or
inc
idivl
pop
sub
jns
icebp
sbb
lea
rclb
sub
lods
mov
imul
sub
lock
in
xchg
cld
mov
sub
repnz
pop
aad
sbb
cmp
jmp
sub
sbb
and
jbe
daa
aas
faddl
imul
jne
pop
mov
adc
add
hlt
push
sub
xchg
jbe
sahf
lds
jge
xchg
xor
dec
loope
in
lds
push
lods
cmpb
sbbb
push
sbb
outsb
inc
cmp
or
cmp
out
mov
outsl
shlb
mov
sub
ja
pop
dec
xor
out
imul
or
cld
out
mov
mov
inc
nop
dec
lods
inc
jge
jbe
pop
je
mov
cmc
dec
stos
push
rcrl
and
mov
mov
sahf
jno
sbb
sbbl
les
cltd
sbbb
cmovs
popa
adc
xchg
push
in
adc
fcoml
sbb
lss
int
fistpl
xor
xor
inc
mov
add
jb
mov
stc
sti
aad
cmp
sub
mov
and
cmpl
loop
jno
movsb
xchg
insb
xchg
lods
je
in
push
and
pop
mov
jne
ljmp
les
and
or
adc
loop
jb
lock
mov
pushf
dec
ret
inc
rorl
daa
jnp
ss
push
pop
jbe
cmp
cwtl
inc
jns
sahf
jl
pop
lret
adc
mov
xor
jo
lret
int3
scas
test
mov
cmpl
stos
inc
insb
jle
in
mov
xor
mull
movsl
enter
das
lret
jne
sub
or
push
push
add
lcall
mov
scas
stc
and
lcall
in
xchg
iret
xchg
out
ljmp
loop
aas
pop
sbb
sbb
mov
stc
ret
in
mov
xchg
aad
inc
repnz
clc
imul
mov
pushf
push
sbb
pop
fnstenv
inc
jns
and
xchg
lods
push
leave
sbb
lock
jo
clc
mov
icebp
aaa
push
pusha
cmp
testl
insl
mov
nop
add
sbb
pop
int
lea
dec
cmpsb
jl
dec
jnp
dec
sub
dec
arpl
sub
cwtl
inc
add
mov
rcr
jmp
xchg
ljmp
jmp
push
bound
xchg
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
and
adc
xchg
stc
push
call
mov
das
lahf
cmp
jnp
push
fimuls
dec
sub
lods
fwait
cmp
call
cld
and
jmp
fnstenv
sub
dec
sub
ds
push
xor
sbb
jl
push
fiadds
jae
ljmp
insb
xor
lahf
enter
sbb
dec
lcall
add
ss
in
adc
push
je
lahf
dec
lock
cmp
mov
jecxz
xor
out
outsl
cs
sbb
imul
mov
and
push
cs
je
xchg
adc
lret
inc
sbb
fisttpll
mov
das
adc
fcoms
xchg
cli
push
iret
mov
insl
data16
and
mov
adc
push
ss
mov
int
xor
adc
xchg
lcall
pop
daa
jns
or
adc
imul
dec
sarb
jae
xchg
cmc
jge
mov
stos
adc
pushf
mov
aas
int
loope
nop
outsb
lret
mov
mov
cs
fldenv
stos
insb
dec
xor
and
jns
sbb
jbe
inc
push
stos
mov
jns
rcrb
movsl
les
icebp
test
ja
mov
adc
out
rcl
inc
mov
add
ljmp
inc
add
insb
jae
outsb
mov
jno
sbb
adc
cmp
in
xor
or
fs
inc
nop
sub
mov
mov
mov
rep
sub
sub
repz
mov
mov
jmp
lock
lret
popf
inc
gs
pop
mov
jg
sub
pushf
idivb
jae
enter
nop
fcmovu
fbstp
inc
shlb
or
mov
loopne
movsb
faddp
cmp
xchg
jo
lahf
mov
dec
inc
xor
aad
popf
xor
fstps
sub
xchg
insb
xchg
or
dec
lock
je
ja
xor
outsl
and
sub
cmpsb
mov
jecxz
imul
test
cmp
test
in
pop
stos
jge
bound
in
push
jl
gs
addr16
pop
push
add
push
std
adc
aam
bound
fistpl
lods
sub
mov
sarl
adcb
jle
mov
xchg
mov
fistpll
adc
gs
out
mov
insl
cmp
imul
pop
repnz
in
push
jbe
mov
adc
sub
sbb
lahf
pop
rcrl
or
dec
sbb
movsb
mov
mov
push
gs
addl
mov
mov
ret
cltd
dec
out
inc
cmpsb
add
mov
lea
stos
push
lea
pop
or
or
shlb
mov
repz
mov
jno
and
pop
gs
and
adcb
loope
pop
ret
pop
xor
nop
jp
inc
xchg
xchg
inc
int3
out
inc
jno
push
clc
rcrl
daa
lret
jno
push
int3
mov
psadbw
mov
and
aaa
or
ja
ss
pop
pop
insl
test
aaa
fucomp
mov
push
xor
mov
sti
xchg
in
xor
setnp
pop
xlat
inc
push
adc
push
out
or
cmp
add
stos
mov
pop
xchg
adc
outsb
sbb
movsl
shll
mov
adc
into
lahf
mov
dec
arpl
jmp
cmp
cmp
pop
mov
mov
outsl
mov
bound
add
iret
mov
cmp
pop
mov
inc
fistl
leave
add
mov
fs
out
push
jg
push
hlt
lcall
fsts
push
sti
imul
inc
testb
mov
sbb
mov
ja
scas
mov
je
xchg
sti
out
imul
repz
sbb
repnz
add
push
and
lea
ds
add
int
ret
lock
leave
push
or
cmp
out
xchg
test
enter
cmp
ljmp
xchg
or
sarl
cmp
scas
jb
inc
fs
push
daa
cmpsl
or
enter
dec
cmp
nop
pop
ds
pop
push
dec
mov
rorl
repnz
hlt
shrl
mov
push
pop
or
xchg
push
testl
rcl
pop
mov
adc
movsb
loop
xor
aad
and
adc
mov
pop
jne
jbe
and
mov
and
aad
mov
js
fiaddl
js
insl
int3
jae
mov
outsb
cld
insb
out
les
cmpsb
jecxz
testl
cmp
int3
inc
das
out
or
mov
dec
xor
test
push
mov
jl
fmulp
in
pop
pop
push
mov
icebp
mov
pop
pop
aaa
pop
fnstcw
mov
insl
std
rcl
mov
imul
mov
out
adc
call
xlat
push
adc
or
jle
imul
test
cwtl
push
lock
std
jecxz
rclb
lds
mov
ljmp
cmp
std
lret
pop
icebp
cli
popa
test
sbb
fmulp
js
sub
sub
repnz
sarb
in
jmp
and
xor
ds
mov
dec
jo
std
js
divl
ffreep
dec
inc
mov
pop
jmp
andl
fdiv
mov
das
out
fsubrs
mov
mov
jp
pop
pop
adc
lahf
loope
cmovg
push
inc
mov
or
push
ss
ss
es
clc
or
push
aas
or
push
enter
fcoms
or
inc
mov
imul
dec
test
push
orb
faddl
push
test
inc
aam
push
jns
sub
pop
cmp
fdivrl
push
inc
dec
add
iret
add
pop
ljmp
mov
jbe
mov
cmp
scas
popa
in
adc
cmc
out
xchg
cmp
ja
sarb
cmp
cltd
xchg
ljmp
mov
loop
mov
sbb
dec
in
push
and
xor
popa
mov
ret
or
loopne
and
movsb
mov
ja
cld
lods
cmp
and
inc
imul
pop
inc
fimuls
adc
imul
ss
arpl
int3
adc
cmp
ret
jno
push
mov
xchg
xchg
test
test
jno
pusha
cmp
jecxz
lock
xchg
clc
outsl
sub
adc
sub
cli
out
stos
fwait
and
not
add
lret
or
push
testl
xchg
sub
cmpsb
adcl
xor
test
sub
in
fcompl
je
pop
sbb
ret
jb
mov
std
push
push
inc
dec
addr16
loop
les
rclb
fdivrl
fucomi
lock
pop
imul
in
sub
adc
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
mov
push
cvtps2pd
pop
jge
movsl
pop
stos
loop
push
mov
or
jecxz
sbb
dec
jl
dec
dec
jp
mov
adc
adc
repnz
mov
dec
rcrl
data16
mov
les
addr16
xor
mov
mov
jge
cmp
mov
sahf
data16
stos
push
stc
gs
mov
sbb
or
and
movsb
pop
insl
push
add
sbb
push
lock
outsb
sub
xor
aaa
daa
dec
loopne
fxch
fidivs
adc
mov
mov
daa
add
xor
imul
repz
outsb
dec
test
adc
xor
pop
mov
and
lret
mov
or
std
pop
xor
cmp
out
sbb
std
out
cli
pop
adc
jo
mov
mov
dec
push
fidivrs
push
dec
idivl
data16
repz
xlat
les
sarl
ds
ret
mov
fistpl
xchg
shll
push
incb
decb
enter
test
mov
hlt
lds
inc
mov
cmp
test
xor
mov
in
jg
jne
aad
and
inc
jne
cs
or
test
scas
notb
mov
xchg
inc
or
iret
ds
call
jns
test
pop
shll
mov
lret
jne
or
push
ljmp
inc
pop
je
push
push
mov
jp
mov
pushf
cld
pop
lret
or
dec
mov
mov
arpl
out
mov
mov
jmp
sub
popf
nop
idivb
add
adc
push
test
and
jecxz
sahf
outsb
push
push
das
popa
cmp
mov
movsb
xlat
xchg
cmp
sbb
cltd
jge
adc
int
data16
stos
jno
jb
mov
out
inc
gs
xor
mov
jno
scas
loop
movsb
lods
and
inc
mov
inc
repz
sbbl
mov
jecxz
sbb
sbb
push
add
sbb
jae
scas
pop
sub
jmp
pushf
mov
pop
jnp
cltd
dec
pop
push
lahf
jl
shrb
or
rcl
aas
rcll
inc
xorl
sub
sbb
mov
push
push
sbb
cmp
testb
mov
lret
jle
inc
adc
or
mov
push
cmp
loop
push
cmp
cmpsl
xchg
scas
sub
in
test
lret
stc
pop
fsts
push
dec
dec
fdivrp
mov
mov
enter
mov
jo
cmp
sbb
je
push
arpl
in
ja
in
and
mov
bound
mov
iret
pushf
stos
sbb
jmp
fcompl
mov
lods
adc
dec
test
xor
add
int
push
or
in
fidivrl
mov
popf
mov
push
push
dec
cwtl
inc
xchg
mov
enter
nop
sub
rolb
fsts
dec
or
in
xor
pusha
js
sbb
cmp
bound
mov
popf
push
into
lods
scas
aas
mov
dec
sub
push
enter
or
sbb
scas
loop
rol
jbe
insb
insb
sub
out
ss
test
aas
cmp
gs
or
mov
mov
imul
popa
pop
dec
shl
mov
mov
sbb
test
mov
mov
push
pop
imul
pop
adc
jg
int
in
in
scas
cmc
add
cmp
or
rcll
lock
das
arpl
inc
dec
pop
into
dec
outsl
sub
push
pop
insl
inc
xchg
clc
rcrl
popa
dec
xchg
add
sarb
mov
xchg
enterw
mov
inc
sbb
mov
xor
repnz
je
cmp
jmp
jns
ljmp
js
lahf
xor
cli
aad
orb
jno
cld
fstp
mov
push
sub
outsl
adc
pop
and
cmp
outsl
inc
in
inc
fnsetpm(287
ret
lret
mov
mov
clc
mov
fwait
cltd
push
xor
idivb
movsb
loope
pop
or
adc
push
addr16
jecxz
mov
ror
add
push
add
aaa
pop
and
cmp
and
mov
ficoms
cltd
mov
push
fcomps
dec
and
and
xor
iret
push
fiadds
int
jle
ljmp
and
xchg
jp
lods
inc
pop
leave
popf
popf
stos
in
or
andb
jge
insb
lods
rcrl
push
ljmpw
mov
or
idiv
mov
out
pop
mov
cmp
icebp
mov
sbb
in
shll
orl
sub
sub
hlt
fwait
subl
jge,pt
les
xchg
ret
jns
je
and
jo
jo
rorl
jp
add
fisttps
cs
push
out
push
fsubr
adc
mov
push
fs
addb
pop
pushf
mov
fmuls
sub
xchg
sub
adc
adc
cmp
jne
out
sub
dec
dec
cs
outsb
sti
jmp
cmp
cwtl
addb
or
mov
dec
pop
rcll
xchg
mov
push
loopne
xor
add
into
arpl
xor
outsl
pushf
mov
lods
mov
imul
rorb
int
xchg
pop
dec
dec
pop
fdivr
xchg
adc
xchg
inc
aad
lods
popf
dec
das
leave
mov
sbbl
push
push
xchg
dec
fidivrs
ljmp
faddp
mov
repz
popa
inc
inc
in
mov
outsb
sbb
jb
int
enter
pop
testl
cmp
aam
mov
hlt
ret
inc
cmpsl
roll
mov
xlat
mov
out
cs
xchg
gs
outsb
iret
fimuls
sub
das
and
mov
and
mov
loopne
mov
bound
popa
xor
jnp
pop
test
and
mov
cmp
xchg
mov
inc
sbb
std
push
dec
push
sub
adc
sbb
pusha
pop
icebp
int3
insl
pusha
nop
push
cli
jnp
push
cmp
roll
or
inc
push
and
bound
xchg
mov
jp
mov
fdivrs
xor
jnp
arpl
mov
add
repnz
in
fmull
lods
jae
push
mov
cmp
xor
jecxz
xlat
icebp
push
sbb
out
incl
std
mov
into
lahf
cmpsl
or
testb
jp
sbb
sub
jo
das
lret
mov
jmp
mov
xor
pop
pop
fstp
loope
mov
addr16
outsb
fcomps
out
mov
outsb
adc
cmp
and
loop
cwtl
enter
mov
sbb
fbstp
xor
jmp
or
pop
inc
or
and
jo
adc
xchg
in
repz
fwait
mulb
setns
int
jo
mulb
lahf
xchg
notb
xchg
int
arpl
lods
sbb
xchg
push
bound
lea
xchg
int3
sbb
sbb
lock
jmp
fldenv
popf
pshufw
adc
add
inc
mov
aad
clc
push
adc
add
int
cmp
jb
aam
xchg
push
or
mov
sbb
jl
loop
xchg
in
and
xor
adc
daa
in
adc
inc
sbb
mov
stc
iret
push
adc
ret
jmp
cmpsb
dec
mov
adc
mov
sarb
and
xchg
loopne
inc
push
nop
add
add
pop
sub
pushf
jecxz
ja
fmull
mov
mov
cmp
mov
add
mov
jb
mov
jp
rclb
incb
dec
add
push
add
sub
push
xor
ficompl
mov
hlt
div
jp
adc
adcb
enter
pop
add
enter
cmc
ljmp
mov
stc
jno
or
cmc
fwait
cmp
pop
dec
aad
xchg
or
sbb
fnstcw
dec
iret
ret
data16
call
or
cltd
call
lock
std
jns
std
sub
jl
inc
or
nop
jae
add
cmpsb
dec
lahf
sbb
hlt
dec
dec
dec
pop
ret
push
rcrl
mov
stos
mov
pop
lods
cmp
xchg
outsb
lea
and
xchg
pop
rclb
or
mov
and
lahf
or
and
add
xchg
stos
jbe
loope
adc
push
inc
popa
loope
dec
je
mov
addr16
cli
mov
xchg
adc
div
pop
xchg
xor
jb
stos
dec
cmp
cmp
mov
mov
test
div
les
bound
or
cmp
push
lods
repz
adcb
pop
nop
repz
les
mov
lret
inc
sub
push
fdivrl
sbb
data16
cmp
fildl
push
lcall
inc
or
push
pop
jnp
in
popa
mov
pop
insb
into
push
dec
push
jo
adc
fldcw
sub
and
cmp
stos
xchg
ds
test
sbb
add
aam
dec
ret
adc
shrl
pop
add
fildl
jo
sbb
in
fs
add
int
popa
dec
pop
inc
scas
push
aaa
clc
and
test
repz
dec
dec
daa
xchg
lcall
jle
or
scas
das
inc
push
call
or
test
mov
or
shr
inc
dec
das
and
xor
adc
sbb
icebp
push
mov
out
mov
sub
mov
mov
cmp
xor
cwtl
loope
lock
xor
lea
cwtl
cmp
or
push
loopne
jge
mov
sbb
inc
call
test
mov
bound
pusha
negb
in
cltd
add
insb
insb
adc
bound
xchg
jnp
cld
pop
xchg
jle
xchg
leave
xor
mov
jmp
adc
cmpsb
adc
mov
scas
dec
out
loop
mov
dec
out
scas
lock
mov
jecxz
and
out
cmp
xchg
cmpsl
ret
popf
jl
leave
xor
cmp
sete
jno
jle
movsb
fucomip
ds
jns
int3
lods
push
fs
pop
jae
lods
outsl
dec
inc
les
jp
and
xchg
jns
sbb
mov
or
inc
adc
daa
cltd
xor
push
cmp
std
cmp
or
iret
mov
xor
push
mov
inc
lods
ja
mov
in
jno
in
mov
fistps
repnz
xor
add
int
xchg
bound
dec
xor
cmc
sbb
ljmp
inc
add
lds
sbb
ret
dec
sub
pop
addb
ljmp
add
imul
jmp
xlat
mov
lds
mov
sbb
out
or
mov
mov
push
ret
cmp
rorb
outsl
es
pusha
cs
inc
stos
movsb
dec
repnz
not
xchg
xor
jmp
cmc
sahf
inc
lea
js
stos
and
dec
cmp
cmpsb
arpl
lea
out
addb
and
add
std
or
cs
fadds
lahf
inc
in
rorb
xchg
ljmp
jbe
jle
cmp
push
xchg
sub
sbb
mov
pusha
pop
lret
inc
popa
mov
mov
mov
addr16
in
or
insl
and
lock
mov
dec
xchg
inc
inc
mov
push
mov
in
fwait
in
jbe
add
cwtl
sbb
pop
sub
xchg
cld
idivl
stos
dec
aas
cmp
fstl
xchg
ds
lahf
and
pop
ret
ss
push
and
pop
jmp
stos
cmp
movsb
cld
les
dec
pop
mov
xchg
loop
push
jmp
cmp
in
cwtl
sub
sub
mov
aas
insl
addr16
push
cld
nop
dec
ret
cld
dec
dec
and
movsb
inc
callw
mov
out
es
lea
xor
pop
cmp
sahf
std
adc
push
push
loop
sub
cmpl
mov
arpl
je
aad
and
cmp
arpl
out
mov
xor
xchg
shr
xchg
cmp
inc
js
into
xchg
cmp
clc
cmp
pop
icebp
and
jne
lret
sbb
pushf
iret
or
cmp
ret
mov
adc
xchg
and
jns
push
insl
cli
sub
dec
in
pushf
std
testl
imulb
add
pop
and
lock
imul
fstpl
push
adc
rolb
fs
test
push
pop
xchg
in
xchg
mov
push
movsb
push
pop
shrl
pop
movsl
ret
fbld
in
dec
jbe
xor
or
pop
push
mov
push
test
adc
rcrl
cmp
xchg
popf
mov
mov
pop
pop
cwtl
add
mov
cmp
movsl
dec
movsl
jae
add
out
jae
sbb
push
mov
fcomp
in
inc
sbb
jge
cmp
stc
sub
movsb
int3
or
sbb
fwait
adc
pop
aaa
insb
mov
cld
stos
xchg
movsl
or
pop
punpcklwd
clc
aas
dec
mov
inc
jae
cmovo
add
addr16
fcmovnb
sub
popf
lds
mov
mov
insb
outsb
mov
aad
jnp
outsb
rcrb
popf
sbb
iret
adc
xchg
daa
in
push
daa
sub
movsl
xchg
insb
rcrb
outsb
mov
xchg
fbstp
outsb
cs
cmp
mov
leave
cld
add
repz
scas
mull
sbb
bnd
add
xchg
lea
add
js
negb
pop
daa
mov
mov
pusha
mov
in
gs
movsl
jne
and
in
movsl
cli
mov
pop
add
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
or
or
sti
fisttpll
lock
mov
xchg
ljmp
cmpsb
or
add
push
cltd
mov
mov
mov
sbb
jl
arpl
mov
pop
jle
insb
push
out
jle
push
pop
test
xor
call
jae
inc
fwait
pop
insl
lock
icebp
inc
mov
repz
sarl
cmp
sbb
dec
xchg
stc
daa
push
popl
jg
mov
dec
pop
das
sbb
dec
or
push
cmpsl
cmc
jns
and
test
pop
pop
out
fwait
test
mov
out
and
mov
into
mov
sub
pop
mov
mov
and
pushf
stos
leave
clc
sarl
push
push
mov
mov
adc
mov
dec
mov
out
ljmp
cmpsl
xchg
push
repnz
mov
insl
repnz
std
fisttpl
push
jno
jno
dec
sub
or
sbb
or
sbb
add
adc
xchg
push
xorl
xor
in
jnp
mov
pop
cmp
dec
xorl
jle
and
fimull
clc
jb
test
stos
sub
cld
jl
jae
fiadds
sub
adc
aam
dec
lcall
or
push
mov
scas
rcrl
es
pop
or
xchg
cmp
sbb
mov
dec
sbb
mov
cs
mov
insl
cld
inc
adc
inc
out
pusha
mov
xorb
inc
dec
cs
outsb
shrb
cs
test
test
sti
mov
add
std
jne
je
fdivl
popa
lret
cmp
push
iret
mov
mov
cmp
xchg
add
mov
aaa
or
test
adcb
aas
sub
push
inc
lds
add
push
mov
lds
rcr
sarb
xor
sub
or
loope
in
or
mov
clc
in
out
xchg
sub
cmp
popf
add
out
and
cmp
insb
test
dec
in
hlt
in
out
out
insb
pop
push
test
sub
jge
fisubrl
cmp
in
sbb
out
jg
dec
dec
xchg
insb
imul
cld
bound
push
mov
int
cmp
jae
repnz
xchg
or
ljmp
sbbl
addr16
jge
leave
mov
sub
shrb
addr16
dec
shrb
mov
mov
fs
mov
adc
ja
cli
xor
cmp
mov
jbe
cmp
cmc
lods
sub
fstl
add
in
sarb
repz
dec
push
add
ret
pop
lret
push
ss
fdivrp
gs
mov
ljmp
sub
add
push
xchg
ficoms
iret
pop
les
mov
testl
sub
dec
outsl
and
or
lahf
and
int3
sub
pop
sub
fcmovnbe
lods
dec
adc
jae
lods
xor
dec
pusha
sub
leavew
das
pop
push
mov
js
repz
aas
fsubrs
cmp
aas
je
xchg
and
push
sti
xor
aaa
jno
fld
xchg
pop
inc
adc
test
gs
in
and
pop
xchg
mov
repz
fcmovne
or
push
loop
out
js
sbb
scas
in
fs
inc
icebp
cwtl
out
cmc
and
movsb
cwtl
mov
pop
sahf
xchg
clc
pop
nop
hlt
xchg
outsl
aaa
outsl
jnp
arpl
aaa
movsb
mov
mov
adc
xor
movsb
push
mov
in
outsb
pop
adc
outsb
cmp
lock
jne
cmp
mov
sub
movsb
aam
mov
mull
aaa
jbe
jns
adc
outsl
xchg
adc
jmp
jge
jp
nop
clc
repz
push
or
add
cwtl
jne
mov
hlt
inc
lea
cmp
inc
gs
push
rol
and
jnp
add
jns
sbbl
das
in
mov
dec
xchg
xchg
call
data16
js
outsb
jno
xchg
cmpps
lcall
xor
sub
ss
pop
xchg
sti
add
jp
push
xchg
mov
xor
pop
pop
dec
outsb
lock
push
sti
loop
in
mov
sub
push
xchg
mov
cmp
stos
cmc
adc
sub
repnz
mov
jle
sub
arpl
xor
sbb
out
lds
rcr
mov
dec
push
or
pop
adc
notb
pop
mov
add
cwtl
jns
or
iret
mov
icebp
out
test
pushl
ja
and
and
xchg
sub
mov
scas
subb
lret
mov
pushf
sbb
add
test
or
setne
shlb
pusha
repz
push
sub
repnz
cli
insl
jge
cmc
popf
sub
mov
xchg
divb
push
arpl
mov
push
lcall
add
fucomi
mov
cmpsb
loope
push
xor
fstpl
inc
push
or
push
sbb
test
jno
bound
pop
cmp
add
mov
dec
pusha
lcall
add
mov
in
insb
or
in
mov
push
pop
mov
aad
aam
fwait
and
hlt
push
mov
cltd
add
mov
stos
hlt
outsb
shlb
jecxz
sbb
pop
pusha
cmp
cmp
jae
lahf
push
mov
xor
or
xchg
push
outsl
xor
shlb
repz
pop
jge
shlb
dec
add
cmpsl
add
pop
mov
mov
in
mov
cs
lret
jno
jl
loopne
dec
sti
inc
sub
daa
ss
subl
out
scas
jge
lds
aad
sub
xor
cmp
mov
inc
sbb
sarl
mov
inc
sub
pop
add
xor
push
mov
jmp
iret
push
sahf
pop
cmp
xchg
mov
mov
jae
icebp
leave
adc
mov
cmp
and
in
fcoms
jge
out
adc
xlat
outsl
repz
movsl
js
andb
dec
xchg
out
xor
jp
les
pop
pushf
sub
leave
iret
scas
xorl
adc
jmp
inc
fdivl
ja
jns
stos
pushl
push
stos
pop
hlt
shrb
cld
lods
inc
mov
outsl
xor
add
push
lahf
push
jne
or
es
in
rorl
sbb
lret
or
sti
ret
out
negb
mov
dec
cmc
push
mov
push
pushf
cmp
imulb
dec
cmp
cmp
je
enter
push
cmp
addr16
decb
bound
lods
pop
lret
cmp
mov
mov
and
out
shlb
adc
stos
xor
cwtl
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
adc
xchg
lds
nop
or
rcl
sbb
add
pop
inc
push
xor
add
and
es
fwait
pop
mov
sub
mov
mov
nop
xor
dec
adc
pop
call
fwait
mov
ja
inc
lock
jbe
nop
bound
mov
and
leave
fwait
dec
fisubs
xor
mov
pushf
adc
lds
xlat
lret
mov
inc
scas
add
sbb
pop
pop
loopne
dec
fucomip
sahf
xchg
mov
out
xor
sbb
adc
mov
fwait
xchg
sub
xlat
mov
mov
sbb
adc
jo
push
adc
mov
roll
dec
sbb
das
and
jecxz
mov
sub
out
mov
push
adc
je
push
ljmp
sti
test
call
mov
in
sti
lret
and
and
or
daa
imul
jecxz
cwtl
inc
fstps
fwait
mov
scas
test
mov
lret
pop
test
test
lds
mov
and
pusha
iret
mov
add
imul
xchg
leave
ss
pop
mov
push
dec
mov
les
push
xor
rcrl
es
icebp
add
aas
frstor
or
loop
sub
cs
stos
js
jl
push
aas
ficomps
scas
xchg
bound
jge
cmpsl
push
add
xor
mov
stc
sbb
pop
adc
rcrl
pusha
sbb
fwait
nop
lret
pop
loop
movsl
iret
mov
add
inc
push
pop
sbb
pop
adc
mov
mov
xchg
pop
sbb
imul
xor
and
jmp
mov
addr16
out
cmp
lods
push
mov
fpatan
dec
imul
push
or
out
out
fnsave
out
xchg
mov
jg
repnz
dec
hlt
rolb
jno
and
sti
cs
testl
mov
xchg
sbb
sub
movsb
mov
test
adc
pop
jle
add
inc
or
pop
pop
outsl
out
das
aas
jecxz
loope
loopne
mov
ret
lea
xlat
aam
ds
lods
sbb
sbb
lret
inc
push
test
mov
jp
or
cmpsl
popa
mov
sbbb
int
mov
lahf
pop
mov
fstl
push
push
push
shrl
add
or
mov
push
rorb
mov
pushl
mov
ffreep
fs
mov
sbb
call
xchg
mov
nop
imul
cs
adc
push
jl
out
jmp
mov
insb
pusha
jo
xchg
or
shl
sbb
mov
cld
arpl
subl
ds
xchg
shrb
adc
or
sbb
roll
imul
enter
lds
mov
dec
push
aad
daa
mov
inc
jl
mov
lahf
ja
dec
mov
aas
or
xchg
mov
push
addr16
mov
outsl
inc
adc
mov
or
shlb
pop
aaa
sar
popa
mov
jnp
push
sbb
push
dec
in
ss
jb
dec
out
iret
pop
push
daa
sbb
mov
xchg
sub
enter
test
or
xchg
mov
outsb
jp
dec
sbb
and
lea
rcrl
push
pop
add
mov
sti
inc
mov
mov
pushf
into
stos
jo
pushf
setbe
xchg
hlt
push
mov
xor
add
xor
mov
out
movsl
dec
insl
pop
or
imul
push
lea
repnz
mov
xchg
repz
adc
push
mov
loopne
out
test
test
mov
fnstenv
pop
xor
mov
out
xchg
cmp
dec
mov
les
dec
in
insl
inc
in
pop
sbb
lock
mov
insl
mov
xchg
cmpb
xor
mov
jg
in
insb
push
lds
mov
js
pop
pop
das
dec
jle
daa
jno
cmp
inc
mov
dec
rorl
xor
scas
dec
es
pop
movsb
fsubs
lods
push
lods
xorb
xor
jb
sbb
cs
add
ret
push
mov
jmp
mov
sbb
fbld
push
adcb
ljmp
jo
dec
shlb
outsb
stos
pop
xorb
fsts
mov
mov
or
pop
mov
pusha
pop
push
sub
loopne
jnp
aad
add
mov
jb
xchg
xor
and
add
sub
or
std
dec
pop
jmp
sub
lds
fstl
insb
jle
dec
jb
cmp
loop
bound
xchg
or
lods
enter
jne
cld
mov
cs
fadd
mov
adcl
jae
dec
mov
adc
ret
int
mov
push
nop
pop
sbb
adc
inc
mov
jg
push
xor
notl
dec
cmp
flds
lret
inc
add
hlt
add
roll
aam
inc
cmp
add
jle
mov
fsubrl
jno
mov
add
les
fcmovnb
adc
movsl
mov
jnp
call
push
aaa
jns
adc
addr16
dec
xchg
lcall
mov
imul
xchg
out
loope
loop
lahf
pmaxub
mov
push
push
xor
rorb
mov
inc
lret
xchg
push
mov
iret
je
push
fadds
jns
jns
pop
pop
sub
jmp
xchg
fsubrl
xchg
jae
jp
orl
pop
mov
sarl
xchg
fdivrl
add
dec
xchg
mov
lods
js
stos
movsl
sahf
out
mov
mov
jo
loop
jae
insl
fwait
out
cs
cmc
jl
cld
lcall
push
cmpl
fstpt
loopne
inc
adc
cs
out
fiaddl
sarb
in
gs
xor
adc
mov
sub
or
mov
jno
fldcw
jo
rclb
jae
push
loope
fldcw
scas
in
lahf
pop
je
cmp
cmp
jg
out
sbbl
movsb
ror
push
cwtl
push
mov
or
ss
inc
pop
mov
jno
fldl
jg
or
testb
lods
nop
mov
xor
ja
mov
mov
mov
ljmp
mov
repnz
jae
cmp
mov
pop
cmpsl
pop
stc
ret
dec
imul
jmp
pop
not
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
xor
adc
xchg
dec
pop
sub
jae
xchg
sbb
pop
jg
push
mov
add
add
cmpsb
sar
bnd
jb
push
cmpsb
add
aad
repnz
rcl
js
mov
stos
popa
xor
test
cmc
mov
pop
outsl
and
negb
stos
or
ds
lods
inc
and
cmc
xor
or
out
clc
dec
imul
out
mov
xor
ret
adc
nop
push
ss
es
lahf
jns
int3
jno
repz
jp
mov
das
movsl
dec
xor
xchg
push
xchg
mov
push
lea
cwtl
roll
test
mov
adc
xor
adc
daa
insl
push
std
or
repnz
push
jle
imul
sarb
and
es
rorl
add
inc
dec
and
pop
into
xor
jmp
jbe
jae
ja
or
xchg
mov
mov
sbb
jmp
fstpl
pusha
push
add
push
out
sarl
add
inc
xor
mov
stos
lret
icebp
cmpsb
ret
dec
sti
jns
xchg
aas
sub
call
mov
jbe
in
sub
cmp
sbb
fs
push
pop
jp
sbb
or
inc
imul
jge
lods
xchg
jl
dec
or
cltd
add
mov
arpl
xchg
ds
mov
xchg
xor
jg
loopne
rorb
lret
adc
jb
cmpsb
repz
popf
pop
js
movl
clc
push
add
xlat
daa
fwait
in
cltd
pop
mov
xchg
pop
cld
jmp
inc
dec
imul
cmp
mov
dec
aad
mov
inc
add
push
sbbl
pop
jl
addl
xchg
mov
jno
aaa
insb
jl
xor
sbb
sbb
iret
int3
dec
dec
jmp
test
push
xchg
dec
or
aam
lea
add
jmp
pop
cs
mov
pop
mov
je
mov
js
cld
inc
sbb
in
negb
jns
jns
sub
fmuls
addb
and
imul
addr16
pop
or
sbb
jne
push
push
ss
dec
fidivrs
insb
push
call
jbe
aas
mov
dec
mov
sbb
int
jle
fs
jb
dec
fwait
or
sbb
jbe
pusha
cmpsl
jae
xchg
pop
stc
sbb
pop
lret
pop
sbb
xor
add
mov
fidivrl
push
add
dec
sub
sbb
xchg
out
sbb
in
xor
sbb
adc
js
push
pop
mov
mov
ror
imul
mov
test
idiv
arpl
push
mov
push
out
lds
jle
jne
stos
mov
inc
mov
call
inc
cmpb
sbb
test
jmp
cmp
cmc
int3
into
inc
iret
jmp
lock
dec
lcall
stos
cld
lcall
xchg
adc
ss
mov
cmp
out
stos
fldt
push
decl
sub
sub
dec
xchg
sbb
and
add
cmpsl
test
push
popf
sub
mov
xchg
cmp
pop
xlat
pop
add
sbb
js
sbbl
js
scas
out
lret
loope
jbe
sbb
bound
mov
mov
fs
nop
nop
in
xor
imul
in
sbb
pop
and
adc
pop
fisubs
xchg
sbb
ja
mov
icebp
pop
ljmp
xchg
xor
cmp
popf
sbb
fucomip
out
push
pop
clc
rorb
daa
jo
out
gs
mov
popf
fistps
popa
aam
les
inc
cmpsb
push
inc
movsb
mov
repnz
pop
pop
into
dec
pop
mov
xchg
ficomps
lcall
cmp
sub
test
loop
js
pushf
dec
push
jnp
or
ret
jnp
std
out
sub
cmpsl
add
push
or
out
push
adc
mov
lock
jp
pop
daa
cli
mov
fwait
push
mov
inc
push
pusha
jae
pop
inc
pop
push
lret
movsb
aaa
adc
or
xor
inc
dec
mov
int
mov
fwait
insb
lret
into
pop
sbbb
sub
popa
test
adc
mov
mov
loop
xor
xor
cmp
and
jecxz
fsubl
or
stos
push
aam
insl
cmpsb
sub
or
push
push
xchg
test
repz
mov
inc
and
inc
push
adc
out
les
dec
mov
mov
lret
aam
or
sti
nop
movsb
lods
jae
daa
insb
bound
adc
xorl
jae
xor
mov
lock
fnstsw
sub
je
icebp
inc
xchg
and
shl
lret
addr16
pop
cmp
ror
mov
sahf
outsb
mov
dec
inc
test
jne
imul
mov
pushf
in
outsb
push
push
push
bound
scas
ljmp
push
pop
adc
mov
sbb
jbe
mov
pop
pusha
inc
movsl
mov
dec
cwtl
xor
xchg
mov
add
data16
outsl
les
aad
xor
xchg
pop
pop
cmp
mov
aad
mov
inc
aad
add
jne
rep
cmp
pop
outsl
fstps
push
add
in
or
push
cmp
xchg
sub
test
out
mov
shrb
cmp
xorl
fwait
inc
ds
xchg
test
mov
cmp
add
fwait
scas
push
dec
test
fsubrl
sbb
dec
xchg
mov
or
in
jmp
fdivs
jns
int3
clc
jg
stos
mov
insb
pop
push
mov
loop
rcrl
push
loope,pn
xor
int3
arpl
lret
xor
inc
pusha
xor
xchg
add
adc
adc
mov
pusha
sarb
pop
iret
sbb
dec
dec
pop
dec
jo
mov
lret
es
fcomip
outsw
xchg
pop
xchg
inc
sahf
sahf
jbe
sub
push
outsl
or
shrb
das
adc
lods
es
dec
mov
lret
dec
xchg
aad
scas
push
cmp
push
arpl
fstpl
mov
xchg
jnp
loope
insb
sub
insb
fmuls
rolb
fwait
xchg
fs
popf
sbb
int
add
jno
filds
insl
fsubl
mov
xchg
cld
mov
dec
in
cwtl
mov
cmp
stos
mov
xor
adc
into
je
cmc
lret
sub
int3
std
sub
adc
hlt
sbbl
pop
cmp
xor
lahf
repz
sbb
mov
cmp
enter
pop
mov
out
fdivrl
test
movsb
pop
jae
fldt
adc
in
inc
shlb
or
push
dec
mov
nop
into
loop
lret
xchg
nop
cltd
pop
mov
movaps
dec
or
inc
add
pop
xlat
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
stc
mov
inc
les
adc
jg
rolb
loopne
ja
xchg
inc
fnstsw
negl
xchg
int3
mov
bound
cmpsb
cmp
pop
cmp
push
dec
cmc
enter
mov
je
sub
fnsave
test
test
pusha
adc
mov
dec
ret
mov
push
outsl
repz
or
sti
mov
and
and
in
js
mov
repnz
std
xor
cmp
mov
push
lods
mov
jmp
add
mov
iret
mov
cmpsl
dec
int3
jg
and
cmpsl
test
add
push
push
mov
cmpsl
in
mov
push
push
xchg
lea
mov
test
or
pshufw
push
clc
adc
stc
js
sub
xchg
jnp
dec
int
xor
adc
push
inc
icebp
jle
fstpl
bound
dec
movsb
adc
lods
mov
dec
sub
idivl
jmp
sub
mov
loop
loopnew
cmp
and
pop
and
aad
mov
push
mov
pop
nop
test
xchg
sub
rorb
mov
inc
popf
xchg
mov
aam
ljmp
jo
add
mov
arpl
stos
gs
sbb
cs
loop
jae
insl
pcmpgtd
mov
imul
cmp
mov
pusha
cwtl
dec
movsb
icebp
fsub
cwtl
add
addr16
sarb
ror
bound
xchg
pop
jge
rcrl
rcr
outsl
fcoml
xchg
dec
dec
push
clc
cli
jecxz
mov
jnp
imul
fldl
sbb
jp
fistl
shll
and
fstps
fidivl
xor
daa
fcoms
xchg
sub
int3
sub
jge
rolb
fldt
and
sbb
add
mov
push
cmp
fldl
add
pusha
mov
cmp
in
xchg
daa
aaa
aas
and
mov
jns
and
ficompl
pop
notb
or
shll
loop
popf
fsub
mov
pop
pushf
mov
ret
lret
xchg
sbb
mov
repnz
inc
sahf
imul
es
inc
out
push
xor
jle
jmp
mov
sbb
adc
ret
leave
mov
add
gs
dec
push
inc
andl
mov
lret
repz
adc
xchg
gs
xchg
mov
stc
jbe
les
iret
loop
mov
push
and
cmp
jbe
inc
push
jb
push
in
cltd
insl
out
test
mov
mov
stos
shll
sti
fs
adc
add
cmp
es
gs
ss
int
mov
inc
pop
push
movsb
jae
xor
cs
cli
and
js
mov
sub
insl
add
add
lret
adc
and
cs
pop
dec
bnd
js
insb
movsb
lock
loope
sahf
lock
out
inc
iret
inc
pop
pop
popf
ja
mov
arpl
jne
test
push
jo
jbe
lea
shrl
fwait
add
into
mov
lds
icebp
jp
sbb
pop
mov
jp
fstps
mov
int3
dec
mull
push
ret
cmpsl
aam
mov
and
dec
xchg
test
cmc
push
mov
xchg
jg
and
dec
test
ja
add
movsl
mov
or
ljmp
mov
lods
jle
inc
outsl
ret
sub
cmpsl
sbb
xor
divb
std
subl
cmp
test
jg,pt
aad
push
cmp
mov
sbb
push
les
sub
fwait
push
lods
int3
mov
sahf
imul
fcmovbe
sub
inc
pop
outsl
xchg
push
call
popa
sbb
fcompl
cmc
nop
xchg
cmc
cli
dec
sbb
cld
repnz
push
stos
andl
jl
shl
push
lock
call
loop
fistpll
push
lret
dec
jp
pop
or
dec
xor
js
pop
in
jno
and
push
push
imul
dec
mov
inc
cwtl
mov
adc
ds
add
gs
push
pop
in
ret
inc
ja
cmp
aaa
cmp
test
test
movsl
push
lret
lret
xor
shr
bound
fsub
leave
adc
pusha
movsb
jae
add
int
lds
fs
aam
movsl
int3
push
and
xchg
les
into
sbb
subl
push
or
sub
dec
add
repnz
imul
cld
test
push
hlt
mov
xchg
fmul
xor
rcrl
shlb
xchg
mov
lahf
das
rcrl
xlat
cwtl
mov
ds
cmp
rcl
jg
mov
cmc
fmull
push
jp
cmp
dec
sbb
mov
cmc
ret
xchg
dec
fcmovne
inc
pop
and
fidivrl
data16
pop
popf
aam
ljmp
out
or
cmp
jle
mov
push
and
fs
das
fisubl
mov
popf
mov
aaa
mov
and
and
movsl
lret
push
lock
outsl
sub
in
xchg
sbb
test
cli
repnz
xor
leave
jnp
sub
push
dec
pop
and
shl
inc
int3
lret
int3
sub
mov
xchg
orb
adc
sti
pop
xchg
mov
push
lret
push
fcoms
dec
outsl
push
pop
inc
push
or
mov
sbb
ljmp
js
dec
insb
mov
mov
mov
adc
sub
jnp
cli
mov
fdiv
xor
fwait
sbb
cltd
or
sbb
pop
adc
faddl
and
or
sbb
cwtl
in
cmp
and
aad
aaa
fcoml
inc
xlat
scas
mov
icebp
faddl
lods
bswap
test
pop
std
xchg
aaa
fcomps
push
nop
test
push
mov
mov
out
xchg
sub
in
loopne
jmp
out
mov
and
aad
psraw
push
js
out
jns
scas
xchg
add
fildll
out
mov
stos
push
lea
cmp
jp
sarl
loop
lea
test
rorl
test
iret
push
mov
adcl
jb
pop
lahf
ss
adc
cltd
daa
mov
cld
sbbb
dec
mov
movsl
dec
arpl
loope
xor
mulb
subl
adc
sbb
cmp
ds
jp
or
jae
loopne
push
sub
sub
addr16
pusha
and
lock
mov
and
insb
jmp
pop
cld
fsubr
cmp
out
add
push
mov
shl
shl
mov
mov
jmp
test
fcoms
loopne
insb
xchg
pop
or
ja
adc
cli
sahf
mull
fmuls
or
xor
arpl
or
aas
lahf
mov
jge
xchg
mov
and
out
pop
fwait
repz
aam
lods
pop
jae
test
push
aaa
sbb
in
cmc
mov
iret
xor
insb
push
enter
and
push
or
xchg
cmpsb
or
sub
stos
lods
loop
rolb
icebp
stos
sbb
jle
aad
dec
mov
xor
lea
lock
mov
lea
jl
sbb
movsl
xor
outsl
xchg
dec
push
out
jbe
out
jo
iret
sub
out
arpl
pop
push
call
mov
mov
js
lret
js
jmp
aam
aas
scas
out
js
xor
jmp
shrl
mov
sub
pop
dec
shrb
cmp
outsb
cwtl
pop
sbb
fistpll
mov
adc
inc
in
mov
adc
jl
jmp
wbinvd
int
cld
cli
repz
int
cmp
pusha
data16
repz
add
shlb
and
lret
dec
push
mov
addr16
std
scas
push
adc
xor
mov
ljmp
dec
lods
shlb
faddl
es
push
or
dec
out
push
adc
add
xchg
push
js
jno
insb
pop
adc
js
mov
xor
stos
in
xchg
sub
shr
pop
fisttpl
add
lods
xchg
lcall
lock
addb
mov
insb
notl
loop
mov
enter
andl
cmpsb
pop
or
jae
add
cmpsl
sbb
mov
dec
pushf
clc
lods
and
and
cmp
enter
cli
ficomps
mov
jecxz
cmc
adc
pushf
outsb
stos
mov
mov
notb
lret
scas
inc
pop
aas
ja
xor
jne
and
xlat
test
mov
mov
cmp
icebp
push
inc
lret
push
sarb
cmp
mov
rcl
push
je
sbb
mov
lea
cmp
jge
lea
jmp
sahf
call
push
nop
fildl
lods
nop
mov
dec
jmp
and
add
je
mov
clc
sahf
mov
dec
ljmp
in
mov
jbe
pop
lods
test
test
mov
repz
andl
nop
xchg
rcl
mov
lods
imul
loopne
loopne
shlb
add
outsl
add
or
mov
xchg
andb
les
xchg
test
std
leave
fisttps
out
std
mov
pop
mov
repnz
or
xchg
fidivrs
pushf
mov
push
mov
pop
xor
sahf
js
adc
mov
sub
gs
pop
ret
imul
scas
jne
test
negl
test
sti
xchg
and
pop
xchg
popa
lea
lea
out
push
or
cmp
insl
daa
lahf
std
cld
fisubs
jno
repnz
fcoml
icebp
sbb
dec
cmp
ffreep
pusha
call
cli
or
pop
imul
cmc
pop
addr16
mov
shlb
or
sub
divb
addr16
adc
inc
loopne
addr16
mov
cltd
sub
ja
sbb
lcall
je
dec
mov
jle
push
mov
inc
add
dec
jl
push
xchg
cmp
adc
inc
aas
push
mov
push
mov
out
cmp
mov
jno
xchg
push
not
inc
cwtl
cmp
push
outsb
jno
sub
mov
jnp
adc
sbb
xchg
and
icebp
sbb
jle
sbb
insl
aas
sub
and
dec
add
or
jo
mov
lock
sub
jne
imul
cmp
mov
mov
sbb
iret
xchg
scas
cwtl
and
jb,pn
loop
out
rcrb
nop
out
imul
and
pushf
push
pop
mov
lcall
and
repnz
iret
stc
lret
mov
out
ds
outsl
in
adc
sbb
or
xchg
mov
in
push
test
cs
sub
pop
nop
mov
mov
xor
fimuls
xlat
and
sahf
cmp
mov
and
fs
push
push
lea
mov
xchg
fidivrl
ret
cwtl
rcrl
fistl
mov
pop
cmc
or
pop
pushf
cmpsl
sbb
inc
cmpsb
pushf
ds
and
sub
sub
mov
xlat
cld
jne
and
inc
scas
arpl
fld1
adc
jb
loope
dec
cli
jge
sbb
jns
dec
sbb
add
push
out
xchg
sahf
es
push
xchg
jbe
es
jp
jle
add
jecxz
movsl
or
loopne
cmp
mov
lods
inc
fwait
mov
push
mov
adc
lcall
loop
mov
loopne
dec
aad
cmp
rcrl
nop
pop
fcmovne
sbb
mov
iret
in
sbb
mulb
ficompl
stos
jne
add
frstor
movsl
pop
dec
shlb
popf
fs
sbb
inc
jecxz
mov
adc
cwtl
sub
movsl
push
cmp
pop
adc
sbb
sbb
mov
inc
ret
fs
pushf
shl
gs
movsl
cld
ret
addl
into
shll
imul
sbb
sbb
imul
fsts
mov
jns
cmp
lods
inc
or
add
adc
inc
mov
dec
sbb
iret
lea
je
lds
jp
dec
gs
jl
adc
inc
cmc
icebp
mov
mov
or
and
pop
out
mov
popa
out
mov
loop
mov
add
popa
push
jb
mov
cmp
cltd
jp
cwtl
cs
jbe
cmp
les
push
mov
mov
adc
movsb
or
mov
adc
lret
xor
mov
xchg
mov
fcmovne
sub
jl
in
pop
sub
jae
inc
pop
add
fisubrl
dec
cmp
movsb
in
ds
ja
outsb
adc
add
and
cmpsb
mov
enter
cmpsb
pop
pop
pop
add
mov
out
xchg
je
sub
shr
cmc
push
inc
dec
addr16
out
aas
scas
cmp
rorl
mov
inc
xchg
fisubrl
inc
into
gs
jns
mov
cmp
push
repz
push
clc
jl
insl
mov
int
adc
add
push
xchg
xchg
xor
loopne
adc
add
stos
jg
test
push
cmc
divb
popf
es
mov
cmp
je
push
or
lods
push
dec
push
shlb
push
lcall
cmp
push
ds
push
add
das
int3
andb
cmp
jl
fs
inc
mov
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
test
adc
sub
setg
mov
mov
shlb
xchg
gs
enter
in
fimull
mov
leave
mov
sahf
addr16
js
scas
pop
push
cmc
pop
adc
jl
test
xchg
mov
lock
mov
ficompl
xchg
popa
xchg
and
add
xchg
mov
das
pop
jne
sbb
mov
icebp
into
insl
enter
sti
push
fcoml
scas
nop
lock
fidivrl
mov
sub
mov
loop
test
add
rcl
pop
jbe
xchg
out
sub
jmp
lret
add
ja
lcall
and
repz
inc
or
ret
cmp
or
js
lods
loopne
lcall
std
leave
xorl
xchg
adc
push
add
push
insb
js
lods
jle
in
mov
clc
shlb
call
xor
cld
and
dec
push
xchg
pop
out
xchg
cmc
roll
nop
sub
sub
push
scas
cmpsb
imul
mov
dec
sub
mov
jb
inc
mov
lret
cltd
hlt
mov
xor
cmp
loope
ja
dec
lods
insb
or
nop
mov
xchg
movaps
cmp
pop
adc
push
push
shlb
dec
andl
mov
or
jge
in
sar
lods
cltd
out
aaa
pop
push
lret
xchg
push
jbe
je
cmpsl
fdivrs
push
pop
and
out
jle
sbb
fldenv
cli
call
xchg
push
push
or
jno
mov
adc
push
push
rcll
jle
mov
xchg
ss
jnp
pop
dec
pop
jb
add
fisubrl
in
icebp
inc
imul
mov
push
push
dec
popl
mov
xor
stc
adc
jno
fldcw
push
je
dec
imul
mov
xor
dec
enter
jbe
mov
fxtract
movsb
rcrb
jno
and
pushf
push
bound
add
lods
or
cs
push
jmp
lret
and
push
aad
mov
fildl
mov
cmp
mov
sbb
dec
in
adcb
stc
push
lock
mov
mov
add
add
xorl
aad
out
cmp
add
imul
fiadds
pushl
in
mov
pop
dec
pop
cmp
adcb
test
sti
ret
sbb
jne
icebp
mov
out
stc
and
filds
mov
mov
xor
clc
sbb
pop
cmp
xchg
jns
cwtl
lds
ds
sti
ljmp
pop
add
jmp
dec
stos
negb
jne
lds
roll
sbb
out
lahf
xchg
aam
mov
iret
es
pop
and
xchg
in
stos
ss
dec
sub
out
pop
sti
xor
test
lock
push
fmull
leave
and
test
xor
cld
lods
add
mov
sbb
sbb
sub
lods
push
pop
sbb
mov
inc
filds
enter
mov
mov
mov
iret
pop
sub
or
iret
sub
xor
rcrl
pop
pushf
mov
bound
fs
mov
cmp
pop
ljmp
add
dec
dec
rcrb
lds
bound
push
fcompl
data16
jns
xchg
jp
add
js
xchg
inc
pop
insl
movsl
and
insl
sbbl
inc
adc
pushf
xchg
dec
insb
clc
mov
bound
pop
jo
jle
mov
pop
dec
std
stos
cld
dec
clc
pop
jne
mov
repz
jp
cmpsl
push
movsb
jae
cli
push
pop
dec
nop
dec
mov
arpl
leave
adc
call
mov
mov
rclb
int3
pushf
mov
roll
xor
jns
mov
nop
push
inc
outsl
aaa
add
dec
sahf
in
ror
inc
sti
cs
xchg
pop
add
push
add
ja
mov
pop
outsb
std
stos
je
xor
add
movsb
inc
fnstsw
fldl
adc
dec
stc
shl
cld
into
in
cltd
mov
jns
shl
and
sbb
push
jbe
call
add
xchg
push
fcompl
mov
mov
sbb
scas
mov
lods
jecxz
daa
add
loopne
in
imul
loope
and
mov
or
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
