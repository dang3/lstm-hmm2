push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
xor
adc
adc
movlps
pusha
cmp
dec
mov
stos
cmpsb
insb
mov
lret
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
dec
mov
testl
imul
jp
adcb
add
sbb
cli
cmp
sbb
jo
fwait
mov
test
mov
ja
inc
sbb
push
gs
jbe
or
mov
stos
popf
push
jno
lods
mov
lahf
pop
lret
add
jg
xor
addr16
cmp
sub
xor
test
jmp
cwtl
popf
pop
fisttps
out
or
xor
xor
mov
mov
add
clc
mov
stos
mov
call
sbb
and
std
popf
pusha
adc
sub
or
jmp
xchg
jns
mov
push
dec
add
mov
adc
mov
mov
sbb
cmc
shlb
outsl
lds
dec
push
retw
xchg
add
cwtl
cs
or
mov
loope
pop
rorb
std
inc
adc
pop
daa
mov
nop
push
addr16
movsl
pop
sub
jge
xchg
mov
xchg
cmp
in
mov
adc
mov
inc
inc
jle
insb
mov
mov
push
ret
and
adc
mov
dec
hlt
pop
pop
xor
pop
cmp
incb
push
mov
mov
mov
or
dec
jl
jmp
in
sub
in
repz
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
xlat
call
loop
test
push
stc
lcall
sbb
pop
sub
mov
cmp
inc
xchg
push
mov
loopne
or
idivl
mov
fisubrl
out
ja
adc
mov
sbb
xor
push
mov
mov
test
nop
jbe
xchg
jns
adc
pop
mov
fidivrs
dec
cli
mov
scas
jmp
add
loopne
shlb
push
fpatan
jnp
pusha
repz
addr16
lds
xchg
lods
sahf
inc
out
mov
inc
dec
pusha
movsb
jo
add
cmp
scas
sahf
stos
push
iret
dec
sub
rcll
ljmp
cmp
cwtl
pop
jo
fwait
jle
sbb
or
inc
inc
mov
jns
add
cmp
mov
punpckhbw
inc
sbb
or
mov
repnz
xchg
xor
xlat
jmp
div
add
mov
cmp
add
jp
push
inc
jae
jg
add
mov
sbb
mov
mov
add
jae
push
sbb
pop
dec
fdivrs
cld
sub
imul
and
add
and
cltd
vunpckhpd
movsb
mov
std
imul
std
movsl
xchg
je
out
dec
mov
pop
ret
mov
mov
xor
mov
push
lds
ja
leave
mov
sub
xchg
pop
jle
hlt
pushf
jge
clc
push
sub
xchg
sbb
jb
xor
outsl
scas
inc
mov
movsb
mov
or
push
fsubs
xor
push
fisttps
mov
mov
or
jp
pop
mov
mov
xchg
dec
dec
mov
adc
hlt
push
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
fnstcw
jle
or
adc
movlps
adc
out
mov
add
xchg
test
test
add
xor
int3
adc
adc
daa
movsb
push
std
das
jne
in
dec
push
mov
ret
cmpsl
cwtl
ret
mov
leave
js
pop
push
push
iret
push
popf
xor
mov
dec
mov
cli
fsts
enter
hlt
fucomp
mov
mov
cmc
pop
jmp
adc
inc
mov
mov
xchg
sub
in
test
loop
mov
cltd
std
int
lcall
cmp
jo
lods
imul
jl
iret
sbb
cmp
xchg
pusha
dec
pop
jnp
je
sub
jo
fst
addr16
mov
or
push
pop
inc
lret
mov
or
push
or
or
mov
or
pushf
or
lcall
push
iret
lea
movsl
cs
leave
xor
push
mov
jnp
cmc
or
stos
push
mov
dec
fcmovnbe
inc
ficomps
push
in
lret
mov
fimull
fnstcw
pop
mov
bound
inc
data16
mov
push
fcmovu
add
into
lret
in
cmp
add
lret
dec
fnstenv
xor
adc
mov
adcb
jnp
iret
sbb
mov
lds
cmp
sub
ret
add
cltd
or
and
sti
mov
and
imull
xor
ret
outsl
jb
iret
imul
lcall
imul
xchg
or
mov
mov
cltd
pop
xchg
jb
pop
fdiv
ret
pusha
xchg
lret
test
sahf
cmp
ret
sub
push
mov
pushf
bound
sarb
mov
sub
pop
inc
adc
and
out
std
ss
arpl
sub
jecxz
push
inc
xor
add
xchg
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
push
cmp
pop
adc
movlps
icebp
and
xchg
in
dec
cs
mov
fisubs
int
test
push
mov
test
insl
rcll
sub
mov
loopnew
sbb
dec
fimuls
icebp
ds
sbb
dec
cmp
pop
test
and
daa
jmp
and
sub
sub
das
add
inc
cld
or
jg
add
xchg
pushf
adc
popa
cmc
inc
mov
pop
jae
scas
fwait
leave
aam
out
into
and
ret
pop
mov
pop
imul
fwait
pop
aaa
int
das
push
sbb
add
jmp
das
fdivrs
jmp
repnz
mov
adc
scas
cli
cwtl
cmpb
mov
pop
inc
push
clc
add
fsubs
sub
cmp
js
and
in
loopne
pusha
cmp
out
lods
push
fxtract
jmp
mov
mov
xlat
aam
push
add
stc
push
and
xor
jbe
inc
sarb
inc
out
loopne
lcall
es
add
push
scas
pop
xor
sti
out
sti
mov
enter
pop
out
repnz
fcmovnu
dec
push
inc
sub
xor
out
lods
sbb
enter
push
add
sbb
xchg
sub
into
lock
clc
pusha
dec
int
aad
dec
or
gs
sbb
aas
lock
in
dec
mov
mov
sub
xlat
inc
pop
push
mov
frstor
push
xor
repnz
sbb
jae
sbb
ds
jecxz
movsb
xchg
subb
dec
js
imul
push
pop
ret
iret
sbb
cld
add
pop
fimull
cwtl
gs
ss
data16
adc
stos
add
mov
and
das
cmp
pop
test
idivb
fdivs
mov
hlt
pop
ds
push
mov
add
add
or
add
lods
roll
cmp
add
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
mov
movlps
daa
cmp
nop
dec
xchg
jbe
dec
addr16
jne
ret
fiadds
jno
dec
lret
addr16
pushf
insl
lcall
stc
adc
outsb
aaa
sub
mov
jo
in
jbe
mov
shrb
das
mov
xchg
adc
xor
fnstsw
adcl
inc
inc
ljmp
ljmp
repz
or
dec
adc
mov
bound
xchg
sbbl
mov
lods
call
test
enter
fisttpll
jmp
js
dec
or
fmul
loope
aaa
cmpsl
mov
loop
jecxz
in
mov
push
ret
fs
inc
cmpsb
insb
sub
mov
stos
out
sahf
imul
in
mov
pop
movsl
mov
mov
ret
xlat
lahf
outsl
inc
jo
lcall
sti
stos
outsl
data16
ja
test
lods
pop
jne
jns
push
inc
mov
subl
sbb
mov
and
push
pop
dec
icebp
jle
into
mov
pop
pop
in
push
testb
call
mov
psllq
add
idivb
xchg
shrl
push
xchg
cmp
cmpl
rolb
shlb
pop
movl
xchg
movsl
inc
cmp
xchg
addr16
in
and
add
in
adc
std
sti
jno
cmpsl
inc
mov
push
pusha
jo
push
xor
add
bnd
mov
inc
mov
addb
xlat
inc
andl
jo
sub
fsubrl
mov
mov
andl
mov
sbb
or
fs
es
cmp
test
xor
scas
pop
mov
js
in
jmp
not
or
push
fxtract
xor
pop
sub
cli
and
lcall
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
cld
mov
insl
in
inc
mov
add
jae
lret
fistps
repnz
data16
cs
out
les
push
jbe
jae
push
mov
dec
cmpsl
stc
cmc
rorl
cmpsb
fwait
fwait
inc
or
xchg
lret
push
inc
in
dec
sti
mov
setno
in
aam
sub
lret
jle
dec
inc
sbb
out
push
xchg
insb
out
ja
repnz
insb
push
mov
jno
mov
fwait
mov
sarl
sbb
daa
push
rcrb
sahf
xchg
jecxz
in
test
aas
and
push
or
sbb
call
cmp
adc
test
xor
jo
and
inc
lods
arpl
sbb
inc
test
mov
mov
xchg
nop
pop
movd
fsts
repz
adc
pop
fsts
push
test
loope
xchg
xchg
movnti
mov
add
jl
call
dec
imul
int3
cmpsl
loopne
mov
mov
dec
jg
je
inc
inc
rcl
xchg
push
sbb
jb
mov
adc
adc
xorl
cli
es
dec
add
sahf
jmp
je
and
inc
sbb
sti
cltd
fiadds
sub
xor
jbe
cmc
push
xchg
adc
into
dec
outsl
mov
pop
lock
lcall
mov
inc
cmpsb
add
test
cmc
gs
xchg
add
or
cmp
loopne
cli
imulb
subb
mov
xor
insb
mov
in
dec
mov
pusha
mov
mov
sub
inc
pop
dec
xchg
scas
cmp
or
xchg
mov
lods
rcrb
xchg
in
xchg
sbb
cmp
les
mov
aaa
popa
inc
in
das
cld
cmc
jmp
mov
in
pop
mov
rcr
movsb
ja
adc
xor
mov
fcmovnbe
and
nop
scas
lret
mov
loopne
inc
add
adc
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
push
cwtl
lods
sti
sti
adc
movlps
sbb
stc
xor
push
cmp
jge
scas
rcrl
aaa
loopne
dec
ljmp
mov
jge
xchg
daa
add
pop
mov
das
add
pop
les
inc
pop
mov
mov
xor
rcrb
bound
cmp
iret
rorl
es
lea
xlat
add
stos
and
cmp
cmp
aad
pop
adc
adc
push
dec
mov
outsb
xlat
aad
int3
lock
inc
cmp
or
mov
xor
pop
call
jp
inc
and
cld
in
lcall
sbb
fwait
adc
pop
stos
cs
fcompl
or
pop
addr16
int3
lahf
enter
insl
into
cltd
xlat
je
and
pop
mov
and
mov
and
sub
jl
xchg
push
inc
xchg
pusha
push
or
stc
fprem1
xchg
cmp
addb
jbe
and
add
sub
mov
icebp
adc
fsubr
jns
pop
ss
cmp
insl
std
jmp
test
dec
jmp
aaa
sbb
repz
lcall
adc
or
int
sarb
dec
call
in
das
lahf
lcall
lret
cmc
mov
mov
stc
stos
fwait
xchg
imul
and
xor
mov
fisubrl
and
sub
sub
inc
push
fisubrl
sahf
fisttpll
sub
bnd
clc
xor
fldcw
sub
sub
sbb
out
fistpll
repnz
xor
dec
lods
testb
rcrl
mov
scas
and
sub
loop
cmc
push
hlt
fwait
add
popf
loope
jmp
dec
xor
add
jl
fbld
push
jb
push
sbb
pop
jns
jno
sub
ds
inc
pop
pop
ljmp
ret
mov
push
in
aaa
ret
xor
mov
int3
pop
and
or
add
lret
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
sbb
movlps
inc
inc
stc
call
inc
enter
mov
stos
rcll
or
jge
and
or
sbb
adc
xchg
adc
sub
mov
mov
imul
lods
and
sbb
push
inc
jmp
ficoms
jge
jo
jae
out
rclb
mov
pop
rorl
andl
into
xor
data16
pop
out
pop
dec
rorl
aas
jp
pop
inc
push
enter
out
pushf
mov
push
and
dec
sbb
xchg
addb
fwait
cmpsl
dec
fildll
xchg
aas
repz
mov
jne
clc
xchg
out
sub
xchg
cmp
inc
push
jae
jge
scas
pop
int
sub
es
xor
and
jno
xor
adc
jnp
add
mov
and
fmull
and
push
or
das
mov
repz
add
fs
lea
jmp
mov
pop
es
inc
test
sub
jge
test
cwtl
xorl
pop
fildll
mov
xor
mov
or
out
outsb
push
adc
loope
push
icebp
sub
out
fwait
jae
push
rolb
inc
in
push
mov
mov
movsb
js
dec
les
ret
loope
xlat
sub
xlat
and
mov
pop
notb
lret
add
mov
dec
call
jmp
mov
xchg
sbb
outsb
dec
mov
xchg
jns
mov
lcall
and
sarb
pop
idivb
lods
int3
lds
mov
loope
pop
xchg
in
stos
dec
stos
jmp
mov
sbb
add
scas
scas
and
mov
mov
push
lods
icebp
xchg
pop
jae
push
lock
test
push
pusha
popa
aas
mov
test
pop
mov
mov
jbe
adc
or
add
sub
add
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
mov
adc
movlps
cli
sbb
sbb
mov
push
sub
lods
scas
sub
mov
cmp
mov
push
call
add
jne
add
paddq
cld
adc
ret
js
xor
sub
aam
icebp
es
cmp
fwait
xor
pop
or
enter
xlat
dec
cmpsb
pushf
ljmp
inc
fsubr
das
xor
test
mov
sbb
mov
stos
cmp
inc
mov
mov
subl
inc
stc
mov
mov
test
out
shrb
push
rorl
das
insb
cmp
cmpsb
add
push
leave
fisubs
cmc
dec
push
cld
xorb
xor
cmp
int3
fcomps
test
aas
cs
mov
cwtl
push
repz
or
jo
mov
xchg
jbe
outsl
mov
out
ja
mov
fwait
cmp
mov
xchg
outsb
pop
jne
shll
pushf
pusha
push
xchg
sbb
mov
add
sbbb
and
loop
dec
cli
cmp
add
mov
nop
sub
lcall
cmpsl
adc
jnp
sub
rcr
icebp
mov
test
mov
sub
outsl
xchg
xchg
loop
aaa
add
jmp
pusha
cmc
mov
sahf
rorl
pop
push
sub
mull
verr
aas
pop
scas
jecxz
hlt
dec
mov
lahf
pop
sbb
stc
and
sbb
jbe
movsl
mov
xor
popf
mov
popa
sbb
xchg
aas
mov
pop
sbb
push
fs
movsb
jb
aas
stos
insl
popa
cld
pop
ss
jno
jnp
sbb
xchg
call
out
sub
jl
or
inc
jno
lahf
jecxz
mov
xchg
loopne
xor
cltd
sub
jg
call
mov
and
xchg
inc
mov
pop
mov
pop
into
ja
dec
mov
in
sbbl
dec
sbb
add
inc
add
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
rcll
adc
movlps
out
lods
push
sub
mov
adc
std
aas
sub
divb
push
mov
popf
xchg
dec
cltd
inc
pop
lea
jmp
test
sahf
inc
scas
sti
pop
pop
push
sbbl
std
repz
and
je
sbbb
jnp
jg
sbb
movsb
adc
sbb
mov
bound
sbb
xor
pop
add
sahf
add
push
jp
mov
lret
out
ss
cmp
xor
idivb
pusha
aaa
dec
jle
pusha
arpl
sub
inc
inc
fs
or
ret
test
xchg
mov
cmp
sbb
cmp
push
push
movsb
xor
subb
inc
lret
shll
test
jb
push
adc
loop
cwtl
and
sub
adc
or
bound
loopne
push
adc
and
sti
mov
int3
dec
or
or
sbb
jns
and
enter
cld
sub
dec
add
jae
les
cmp
xchg
xor
xchg
inc
divl
cmpsl
mov
cs
jmp
cld
pop
or
and
or
mov
pop
mov
push
orl
xchg
insl
inc
jns
pop
aaa
pop
mov
mov
mov
fs
or
dec
shr
pop
and
add
aad
fadd
arpl
iret
sub
shl
les
sarl
inc
arpl
xchg
shll
mov
cmp
pusha
cli
adc
repnz
js
sahf
dec
or
jnp
das
dec
and
sahf
pop
imul
daa
subl
jns
pop
jp
add
xchg
inc
je
ret
ficoml
in
push
popf
aam
jle
and
push
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
jns
mov
movlps
dec
shrl
dec
stc
cs
push
mov
sbb
dec
ret
or
jmp
in
ret
inc
jp
mov
stos
data16
adc
mov
xor
mov
xchg
push
jns
sub
fidivrs
inc
cwtl
dec
sub
shrd
andb
inc
push
jp
sub
mov
orb
stos
scas
inc
fsubrs
push
mov
jne
cltd
inc
mov
ja
and
sub
mov
fistl
mov
mov
xorl
movsb
jge
jmp
add
pop
dec
sahf
and
dec
cld
sbb
xor
push
sbb
nop
fcoms
lea
fnstcw
test
dec
mov
pusha
lods
push
mov
mov
lods
stc
subl
sub
lret
mov
xchg
jl
data16
pop
mov
rcl
adc
in
mov
into
adc
sub
fmulp
dec
lods
fisubrs
adc
push
ljmp
mov
jg
ret
push
aas
sub
push
pusha
pop
mov
sar
out
outsb
aas
test
andl
jl
notl
and
adc
pop
sbb
mov
nopl
xchg
mov
or
jnp
push
lds
call
jno
scas
xchg
mov
pop
bound
gs
pop
cltd
mov
mov
inc
and
dec
pop
inc
mov
jg
cld
or
inc
push
outsb
xor
cltd
mov
adc
cmp
push
clc
mov
pushf
lret
aam
cld
push
mov
out
shlb
movsl
xchg
and
xchg
pop
add
das
push
push
in
dec
in
popa
mov
and
mov
xchg
mov
add
jmp
xchg
popa
inc
int3
jb
sbb
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
js
call
adc
mov
movsb
xchg
xchg
and
push
scas
movsl
imul
xor
push
add
pop
push
dec
mov
les
cli
daa
test
or
pop
adc
cmpb
outsb
cmp
loop
sbb
and
mov
es
cmp
sbb
sbb
int3
popf
out
aam
ret
pop
adc
add
dec
cwtl
idiv
sub
test
dec
jg
push
fnstsw
jge
sbb
inc
mov
sub
pop
or
mov
popa
loopne
cltd
push
or
addr16
or
outsb
ret
inc
call
pop
cwtl
xor
mov
add
push
repz
mov
addl
inc
ror
ds
sbb
xchg
loopne
aam
jmp
jmp
push
aam
xchg
outsb
sbb
cmpsl
dec
aam
mov
push
dec
sbb
fs
scas
sbb
mov
inc
pop
in
xor
adc
push
sub
cmp
mov
push
lods
stc
pop
push
or
jge
ja
pop
push
push
dec
js
and
insb
pop
rorl
push
cmc
out
fbstp
dec
xchg
inc
dec
xchg
out
xlat
enter
xchg
xchg
hlt
mov
mov
fwait
in
icebp
push
movsl
jo
out
rorl
std
push
cmp
xor
imul
repz
outsb
xor
cmp
mov
lds
dec
push
popf
or
xchg
enter
xchg
sub
mov
orl
dec
movsb
pop
daa
ret
dec
adc
dec
dec
lret
push
push
stos
mov
mov
push
jl
push
ret
pop
loope
sti
test
push
lret
sbb
xchg
js
xchg
mov
ja
sub
testl
push
inc
cmp
scas
test
jl
test
out
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
nop
ret
in
adc
movlps
out
scas
sbb
sti
rcrl
lahf
xchg
xor
mov
mov
insl
sub
mov
test
mov
pop
dec
xchg
lock
imul
pop
es
sti
test
pop
scas
les
lock
cmp
insl
mov
push
push
mov
jnp
fsubrs
pop
inc
push
and
in
cmp
stos
push
ret
jge
int
dec
mov
sub
or
fcomps
fmuls
enter
outsb
push
ret
shrb
faddl
les
loope
or
or
jmp
push
loopne
divl
hlt
inc
pop
sub
add
and
sub
addr16
sbb
inc
adc
mov
movsl
pop
inc
and
mov
xor
mov
or
cmpsb
push
clc
lret
mov
cs
sbb
je
xor
into
sti
pop
jo
dec
dec
sub
aam
lcall
cwtl
sub
pop
aam
scas
or
mov
shl
loope
xor
pop
and
xor
cmp
mov
mov
and
out
lea
mov
dec
imul
mov
std
xchg
movsb
xchg
popf
cmp
mov
mov
out
in
lea
push
sbb
jmp
in
pop
bound
call
insl
mov
inc
lds
dec
push
stos
cwtl
test
ds
mov
adc
dec
enter
mov
in
int3
sbb
jl
out
call
dec
mov
pop
jo
not
cmp
cmp
rol
sbbl
sbb
mov
fidivrs
mov
push
fisubs
dec
out
adc
jge
aad
mov
sbb
jno
jl
xor
mov
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
xchg
std
jle
loopne
adc
movlps
sub
xchg
jmp
imul
inc
les
outsl
mov
sbb
xchg
xor
and
xchg
sahf
gs
xor
pop
lret
adc
in
push
fwait
pop
pop
lods
inc
push
lods
mov
sbb
test
aam
push
les
sub
cli
idivl
mov
push
outsl
dec
push
out
xor
jnp
jo
xor
or
jp
mov
mov
push
push
pop
mov
cltd
idivl
sbb
push
xchg
sub
pop
cmp
xchg
lock
dec
inc
xor
and
das
sbb
inc
mov
or
stc
sbb
out
roll
sbb
push
loop
jecxz
mov
jae
sub
clc
jnp
jl
add
cli
add
cmc
les
andb
subl
nop
stos
js
sarl
cmp
out
mov
ds
leave
test
lds
xchg
mov
adc
test
addb
movsl
ret
repnz
lret
pop
sar
pop
xchg
or
fsubrs
loopne
sbb
fsub
mull
ds
pop
notl
jl
ret
fwait
mov
mov
add
dec
in
mov
outsl
aaa
cmpsl
xchg
dec
jmp
and
jno
jbe
fs
push
jle
rcr
add
in
mov
arpl
push
sbb
and
fadd
or
pop
loope
jl
xchg
xchg
or
stos
aaa
cld
inc
in
ds
daa
mov
cmp
fdivrl
inc
mov
jo
add
in
mov
fcomp
jb
loopne
mov
or
pop
add
fistpll
test
mov
cmp
xlat
mov
icebp
or
and
mov
sub
ret
pop
mov
and
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
shl
push
fcoml
adc
movlps
lcall
push
or
shl
cli
pop
repz
inc
mov
das
scas
sbb
mov
aaa
mov
or
xlat
popf
data16
fdivrl
scas
cmc
push
jbe
sub
xlat
jne
out
rorb
rcrb
mov
stc
xor
mov
dec
mov
jl
or
fsubrp
fcomip
imul
fidivl
dec
repz
sub
ret
int
mov
or
dec
push
mov
dec
cmp
xchg
push
lahf
int3
dec
imul
nop
pop
add
xchg
inc
out
xchg
out
test
dec
insb
js
inc
in
or
jmp
cltd
gs
loope
ret
cmp
mov
sub
adc
scas
je
daa
fcomp
gs
roll
sti
xor
aaa
push
int3
mov
jns
inc
mov
mov
sti
push
test
in
sbb
xorb
jle
adc
scas
add
sbb
sti
imull
fnstcw
mov
sub
icebp
das
bound
in
mov
popa
mov
mov
imul
iret
arpl
roll
hlt
mov
mov
push
sub
test
cmp
out
jl
fs
nop
out
aas
dec
lcall
xchg
js
stos
iret
push
lret
push
xchg
js
lret
or
shlb
xchg
movsb
scas
rcll
sub
xchg
push
mov
cld
ret
cmp
fwait
insl
addb
ret
ljmp
inc
shll
fmul
pop
sub
adc
jnp
roll
jae
adc
loopne
add
rcrl
mov
pop
mov
pop
mov
ss
mov
pop
jl
sub
sub
cmp
aad
scas
and
clc
popf
sub
adc
pop
test
cmpsb
cmp
fsubr
adc
pop
mov
imul
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
jnp
and
fcoms
adc
movlps
mov
xchg
dec
adc
adc
aad
push
push
test
push
mov
ds
punpcklbw
jb
out
xlat
inc
ljmp
pop
jge
pop
jecxz
xchg
cmp
add
xchg
into
pop
inc
fldcw
in
int3
aas
dec
dec
loope
xchg
jo
stc
popl
clc
cld
mov
xlat
mov
sar
movups
cmpsb
and
mov
inc
push
pop
test
push
movntq
push
imul
shlb
shrb
sbb
sub
mov
pop
jb
xorl
inc
test
jl
jg
data16
addb
or
jg
jne
cmp
cmp
lock
lcall
inc
imul
notb
lcall
fiadds
mov
popf
daa
cli
jg
sbbl
cmp
dec
out
push
xchg
push
jecxz
dec
dec
imul
mov
cmpsb
or
movsl
or
int3
mov
pop
sti
xor
loopne
in
pop
das
lock
test
ss
frstor
outsb
add
fdivl
jo
push
les
decb
cmp
and
fsincos
inc
fildl
add
sub
mov
cltd
ss
add
aas
mov
andb
lcall
movsl
mov
pop
lock
dec
jbe
mov
cmp
mov
imul
and
mov
xor
push
rcl
loopne
sub
cmp
loope
dec
adc
fistps
dec
test
nop
fmulp
pushf
mov
add
dec
cmp
pop
cmp
mov
fstpl
popf
fisubl
jne
pop
xchg
mov
inc
test
pop
pop
cli
movsl
push
fwait
mov
mov
add
add
fstpt
addr16
mov
movlps
fmuls
scas
cwtl
dec
jns
mov
das
movsb
pop
pop
mov
imul
adc
daa
subb
out
fwait
idivl
push
add
add
mov
das
jb
lea
orl
or
repz
stc
loop
xor
jno
out
xor
outsl
mov
mov
lea
ja
jb
pop
cmpsl
adc
cmc
or
push
push
add
xchg
inc
push
push
fdivrs
xchg
imul
daa
rcll
inc
push
jae
and
popf
sub
incl
push
cmp
jmp
or
testl
mov
pushf
adc
push
pop
jo
pop
inc
mov
cmc
orl
inc
cmpsl
aad
aam
test
and
and
jnp
cmp
inc
mov
cmpsb
adc
xor
inc
mov
xor
fnstsw
sub
jns
pop
cwtl
push
xchg
jg
mov
or
xchg
jo
jb
lcall
fisubrl
icebp
mov
jecxz
and
mov
adc
dec
mov
lret
or
shlb
popf
leave
jl
xor
sub
js
push
cs
inc
pop
xor
lahf
adc
cmp
mov
je
stos
mov
jle
fisttpl
xchg
mov
test
std
dec
lock
inc
jae
in
cli
jo
mov
subb
pop
dec
dec
pop
clc
scas
add
inc
mov
mov
mov
sub
js
cmc
cmp
inc
sbb
addr16
mov
fnstsw
sub
icebp
out
dec
fwait
test
fdiv
jge
jnp
xor
outsb
push
cwtl
xchg
dec
pop
pop
inc
cli
jnp
outsb
or
mov
pop
out
jmp
push
push
or
loope
fidivrs
scas
imul
mov
jnp
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
cmc
inc
stos
rcl
adc
movlps
call
movsb
imul
pop
mov
cmp
sbb
mov
dec
jecxz
adc
inc
or
iret
loope
out
icebp
inc
aad
xchg
xlat
adc
or
xchg
jmp
daa
cmp
aam
add
fninit
movsb
cld
add
cmp
cmc
add
sub
imul
and
cmp
fcoml
cmp
add
xchg
call
jbe
jge
fs
push
ret
loope
mov
mov
insb
cmp
cltd
pushf
pop
pop
aaa
daa
or
inc
nop
pop
jns
jmp
shlb
fidivrs
ja
mov
je
cltd
not
into
cmp
sarl
lret
push
add
push
and
sarb
das
rcrb
jp
xchg
ret
outsb
mov
out
and
jmp
mov
icebp
push
or
and
in
cmc
mov
out
add
mov
mov
pop
fisttps
mov
dec
scas
and
mov
or
ja
sub
lods
fstl
lea
test
add
cld
pop
sti
xchg
loopne
sub
es
jg
lea
xor
sub
enter
lods
icebp
adc
cmc
dec
dec
ss
cmpsl
push
jae
out
loopne
mov
fcmovbe
mov
cmp
mov
mov
pop
inc
out
pusha
mov
add
shlb
addr16
fwait
outsl
fdivrl
jg
loopne
add
and
cmpsl
sub
mov
mov
mov
inc
insl
inc
or
mov
loop
push
adc
imul
inc
fldcw
sbb
inc
bound
cmp
xor
popf
js
divb
cmp
mov
mov
fbstp
scas
outsl
sub
cmp
mull
dec
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
mov
adc
movlps
adc
out
loope
push
cwtl
push
adc
rclb
jnp
and
mov
ret
or
xchg
pop
ljmp
add
outsl
mov
jg
sub
adcb
dec
sub
fnsave
mov
out
mov
push
xchg
nop
lods
sbb
imul
daa
xchg
cwtl
xchg
scas
sub
jl
stc
mov
out
add
imul
fidivrl
dec
and
in
cld
jae
push
sub
stc
push
inc
push
add
rcrl
lods
pop
adc
push
push
mov
inc
mov
mov
xchg
lods
dec
sbb
test
jp
daa
jmp
xor
insl
push
out
sbb
xchg
dec
push
pop
or
and
into
mov
mov
subb
and
out
jmp
mov
cltd
sbb
repnz
sbb
dec
fimuls
push
fldenv
pop
rcrl
xor
je
jg
mov
int
xchg
sub
push
push
jp
cmp
imul
stos
hlt
es
mov
jecxz
cwtl
mov
call
sbbb
std
daa
imul
into
insb
sbb
das
push
lock
les
cmp
subl
leave
lds
xor
sub
std
sbb
xor
inc
daa
scas
fucom
jg
mov
sub
jb
mov
add
repz
dec
ds
pop
ret
scas
xchg
dec
cmp
pop
sub
fistl
jle
xchg
push
in
adc
imul
jg
xchg
jge
cmpsl
stos
dec
roll
arpl
inc
in
mov
loopne
int3
arpl
pop
jp
aas
mov
jno
lock
pushf
xchg
inc
ret
and
loopne
add
lock
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
and
adc
movlps
xor
loop
cmp
sbb
sbb
push
dec
push
and
and
mov
and
in
js
adc
mov
cmpsl
or
fmul
cwtl
push
test
adc
pop
stos
lock
pop
pop
imul
js
adc
out
jb
adc
xor
imul
into
mov
jg
aas
stos
lret
sub
push
push
push
iret
xchg
sub
adc
repnz
aad
mov
test
fdivrs
add
and
cmpsl
or
js
mov
outsb
xchg
push
add
mov
shlb
or
push
sbb
fwait
sub
ret
in
sbb
loope
dec
rolb
aad
lcall
jmp
notb
sub
pop
int
cmp
out
dec
mov
adc
in
mov
pop
jmp
mov
dec
pop
pusha
fiadds
decl
add
xchg
leave
mov
mov
xchg
in
aas
test
cmp
dec
jecxz
filds
mov
test
adc
pop
fsubs
jns
and
loope
test
es
ficoms
aas
ds
xchg
sbb
cmp
mov
pop
inc
ret
popf
pop
vrcpps
add
rorb
dec
inc
in
adc
push
out
jmp
push
push
jbe
adc
popa
sub
sub
xchg
out
add
push
xlat
mov
jns
xchg
jns
sbb
das
outsl
dec
pop
fmulp
jae
sti
imulb
cmp
pop
frstor
je
push
inc
push
and
or
xlat
dec
xor
sbb
xlat
lahf
daa
inc
jae
inc
cltd
ror
cwtl
dec
ret
jbe
mov
fistpll
push
clc
mov
mov
xchg
or
lret
and
cmp
or
push
movsb
pop
popf
fcmovbe
js
sub
fistps
mov
loope
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
inc
xchg
js
les
adc
movlps
rorb
xor
loope
jg
movsl
ret
js
and
xchg
mov
rcr
push
jecxz
mov
mov
lds
das
add
scas
outsb
lods
jae
pop
mov
pop
das
sbbb
sbb
cmp
mov
xacquire
push
adc
push
stos
add
push
mov
adc
int
adc
add
jne
add
lret
xchg
jmp
or
dec
or
xor
inc
les
je
adc
test
inc
cmp
xchg
cmp
dec
loope
mov
xchg
movsl
push
pop
iret
push
test
xchg
jecxz
push
shll
je
jle
mov
dec
fbstp
mov
xor
jp
dec
js
jnp
push
jo
dec
mov
popf
test
imul
mov
hlt
inc
pop
imul
sbb
mov
inc
push
jmp
lret
je
and
test
xor
vpmacsdd
call
cmp
arpl
dec
xchg
adcb
push
sbb
jne
sub
loopne
orl
loopne
dec
jns
sahf
add
icebp
mov
addr16
sbb
pop
adc
gs
fmul
jl
jl
int
jno,pt
flds
mov
push
aam
jns
adcl
imul
adc
xchg
pop
xor
add
inc
stos
pushf
fdivl
and
test
mov
aaa
shll
adc
in
loopne
dec
lcall
jle
push
and
sub
es
and
popa
call
xchg
xlat
sub
std
jno
cmp
jl
mov
xor
xor
repnz
mov
mov
xchg
mov
pop
roll
repnz
add
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
adc
rep
rol
adc
movlps
xlat
bts
test
jg
mov
cmpl
scas
adc
mov
mov
xor
outsl
mov
cs
cmp
push
pop
icebp
sub
rolb
lea
cs
push
jnp
and
out
call
sub
xchg
out
mov
mov
dec
adc
scas
popf
xchg
sub
jns
jle
frstor
push
push
fcomip
int
mov
mov
push
mov
movl
xchg
fnstcw
aas
fucomp
les
mov
mov
pop
inc
daa
push
mov
xchg
nop
sub
pop
ret
mov
cmp
cltd
mov
inc
inc
and
push
inc
js
int3
test
mov
ljmp
dec
lock
mov
fldcw
lret
or
mov
rolb
xor
push
inc
out
adc
mov
aad
cmp
mov
push
or
or
sub
sub
scas
cmp
add
bound
cld
mov
mov
out
mov
sub
mov
jb
and
movsb
ret
clc
shrl
push
push
add
adc
xchg
xchg
mov
or
repnz
mov
nop
ud2
into
xchg
pop
inc
add
lahf
lahf
push
xor
fwait
mov
add
add
lahf
push
cmp
xorb
jo
jle
jecxz
out
sti
xor
incl
mov
push
cld
pop
scas
rolb
mov
leave
sarb
adc
cld
pop
stos
cmpsl
jo
cmp
pop
call
add
jb
lock
daa
xchg
mov
cmp
cmp
xor
test
push
pop
and
cmc
jbe
push
popa
outsl
rcr
mov
dec
jle
pop
cmpsb
repz
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
outsl
in
push
mov
adc
imul
popa
in
ficomps
sub
push
ss
int3
fsubrl
lock
int3
les
adc
insl
rcrl
bound
push
jno
rorl
leavew
repz
ficoml
ja
cltd
test
arpl
mov
pop
icebp
jne
or
shll
test
pusha
lea
lcall
mov
pop
xchg
notl
jg
pop
pushf
leave
mov
hlt
movsb
lock
xor
pop
push
jb
xchg
test
mov
in
cli
push
and
in
push
xor
dec
xchg
ficoml
sti
mov
mov
rcll
loop
jb
jb
pop
adc
mov
subl
sbb
cld
mov
sub
ficompl
xor
xorb
mov
mov
jbe
push
in
jge
mov
sub
mov
and
nop
adc
xchg
imul
mov
inc
fnsave
add
xchg
outsb
dec
in
and
xlat
pop
sbb
cmp
push
adc
sti
rorl
jns
push
fdivp
pop
scas
js
sbb
lea
jp
push
push
cltd
xor
jle
cmp
lcallw
xor
push
xor
jb
inc
repz
es
repnz
popf
xchg
out
adc
mov
add
mov
cmp
sub
stos
call
pusha
and
push
adc
cli
xor
addr16
push
leave
ret
xchg
push
adc
mov
mov
jge
jp
outsb
mov
gs
or
movsl
in
fcomps
sti
mov
test
and
in
jae
js
add
push
mov
jle
xor
xchg
test
cmp
jmp
add
je
sbb
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
mov
mov
adc
ret
sbb
or
and
and
adcl
into
leave
push
and
movsl
subl
mov
insb
imul
sbb
out
or
cs
sbb
sub
push
out
punpckhwd
dec
push
out
repz
fsubl
pop
fcomps
add
push
or
dec
rolb
popf
in
xchg
push
jae
mov
mov
cmp
test
ja
mov
orl
iret
sbb
in
adc
test
sbb
dec
lahf
inc
mov
addr16
push
cwtl
xchg
ljmp
loope
adcx
ds
mov
test
jae
jb
mov
shl
mov
jp
aaa
test
test
xchg
mov
iret
scas
inc
pop
nop
sbb
sarb
add
mov
shrl
repnz
or
js
xchg
popa
inc
aam
and
sub
ss
and
fistl
es
test
cmp
call
adc
out
out
push
cli
or
push
xor
adc
or
lret
inc
push
insb
dec
jl
imul
leave
xor
shrb
inc
pop
aad
aam
stos
inc
ret
shlb
fnsetpm(287
jl
outsl
pop
lahf
xchg
push
movl
mov
sbb
sub
jle
stc
das
cmc
sbb
push
xchg
mov
inc
inc
pop
add
or
cmp
jae
sbb
mov
and
out
xchg
jb
dec
jmp
sbb
fldenv
js
mov
xor
or
mov
fbld
cmp
sub
inc
les
ljmp
ss
fwait
xchg
adc
inc
imul
das
aad
mov
or
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
mov
mov
jp
mov
mov
mov
dec
ret
data16
sbb
pop
pushf
sbb
loopnew
adc
in
fnstenv
lock
setno
arpl
cld
mov
xchg
adc
pop
xchg
mov
dec
mov
inc
in
loope
xor
fmul
scas
lock
ficoms
mull
cmpsl
mov
push
mov
sti
dec
daa
addl
into
andb
pop
sub
mov
add
push
andl
push
mul
mov
sbb
adc
jno
and
jl
test
test
je
mull
cmp
fiaddl
icebp
fadds
roll
adc
js
push
pmulhuw
rolb
cwtl
mov
inc
or
jp
sbb
jl
scas
outsb
add
in
inc
adc
mov
pusha
movl
or
mov
stc
push
test
pop
or
lds
adcb
fdiv
dec
das
dec
ds
repz
out
dec
cmp
gs
pop
dec
loope
int
push
cltd
pop
xchg
add
or
push
xchg
mul
pop
mov
cltd
push
inc
pop
pop
sub
dec
sbb
cwtl
bts
fisttpll
mov
data16
nop
xor
and
in
pop
mull
cwtl
sub
neg
int3
pop
add
cmp
pop
push
montmul
cmpsb
inc
in
push
mov
pushf
mov
mov
loopne
iret
push
pop
xchg
iret
mov
push
and
jl
and
fwait
inc
ljmp
xor
pop
mov
jge
cmp
outsl
sub
xor
jo
add
xor
mov
frndint
movsb
inc
pop
push
fs
hlt
inc
loope
jne
scas
repnz
outsl
out
rcl
jnp
mov
mov
lock
xchg
cmp
popa
cmp
and
stc
cmc
jmp
jns
lods
inc
scas
outsb
ret
mov
xchg
hlt
fnstcw
xchg
mov
cld
int3
inc
or
dec
xor
jle
mov
cmp
jp
mov
pop
popf
fistps
sahf
bound
ds
add
pop
xchg
mov
cs
ss
jl
push
adc
outsl
outsl
sbb
dec
xchg
je
das
rclb
daa
pop
or
add
inc
out
in
xor
mov
mov
fmuls
push
sti
push
sbb
adc
scas
xlat
outsl
lcall
call
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
xor
test
aas
mov
adc
mov
dec
aam
loop
sub
add
movsb
cmp
adc
push
fbld
jno
pop
mov
pushf
and
outsl
out
mov
icebp
movsl
jne
xchg
clc
or
pop
cmp
and
mov
sbb
mov
xlat
or
ja
jne
jg
jg
sarl
stos
inc
movsb
cmpl
shl
in
orl
push
sub
jp
xchg
hlt
addr16
or
out
add
inc
pop
aam
push
mov
add
pushf
jo
loopne
pop
ss
add
seto
clc
scas
fwait
ret
inc
gs
scas
cmpsb
add
xlat
push
pop
xchg
pop
mov
push
jns
mov
out
stc
out
test
sub
xchg
fs
call
add
loop
pop
pop
popf
xchg
stos
push
push
inc
subl
mov
in
add
cltd
notb
dec
aam
mov
mov
hlt
jns
std
repnz
jns
nop
clc
fists
dec
daa
xchg
jmp
or
ja
mov
or
inc
fsub
imulb
mov
and
je
lret
aaa
pushf
xor
in
adc
test
enter
sahf
or
lret
sti
mov
cmp
sbb
xchg
lahf
test
push
scas
aas
out
call
addl
xor
iret
add
push
mov
push
ja
test
test
or
inc
cmc
cmc
cmpsl
fisttps
and
xlat
jg
ficoml
dec
shl
sub
stc
dec
push
mov
pop
mov
test
sahf
pop
push
dec
dec
dec
sub
cmp
jle
push
inc
mov
nop
mov
mov
jnp
or
push
xchg
mov
and
nop
push
mov
lods
adc
stos
mulb
test
movsb
jmp
js
jmp
add
mov
pop
ljmp
pop
aad
mov
xchg
fwait
mov
rorl
jb
jge
add
inc
dec
sbb
neg
lcall
pop
inc
test
popf
lock
pop
add
mov
out
mov
loopne
addr16
ja
not
mov
test
or
nop
mov
sbb
mov
es
sarb
adc
scas
lcall
stos
rorb
ss
cmp
ret
xor
orl
cmpsl
mov
cltd
jne
push
pop
hlt
mov
lcall
jp
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
pusha
dec
dec
xor
sbbl
dec
pusha
fiaddl
cmp
pop
test
inc
outsl
outsl
les
add
jns
mov
daa
test
cmp
sbb
cli
sbb
dec
mov
inc
xchg
mov
push
decl
push
push
pop
std
pop
addl
ds
sub
mov
hlt
dec
ja
inc
sbb
push
sub
jge
mov
jl
mov
scas
jl
mov
mov
insb
mov
dec
pop
push
push
push
les
inc
sbb
faddl
lds
leave
sbb
lods
mov
jp
popf
xchg
sbbl
sub
stos
pop
mov
addr16
sub
mov
fwait
insl
mov
push
mov
loopne
loope
push
mov
cwtl
jg
in
jns
int
sub
fidivl
mov
xor
xchg
xchg
bound
fwait
ret
out
es
mov
pop
or
daa
stc
sbb
sub
cmp
or
repnz
cmp
xor
xchg
ja
fdivs
repz
mov
test
add
cs
xchg
or
jne
ljmp
xlat
lcall
insb
fcmovnb
ds
lahf
pop
fidivrs
sti
in
lods
adc
adc
cltd
mov
movsl
fs
and
lea
out
in
stc
xchg
adc
fistps
sti
fdivl
iret
leave
ficoms
push
testl
fdiv
movsl
push
xchg
mov
dec
out
xchg
adc
xor
aas
and
arpl
and
mov
js
xchg
mov
in
mov
in
je
mov
fwait
mov
por
ret
push
mov
sahf
ja
cwtl
aas
icebp
test
inc
add
or
pop
aad
mov
pop
sub
mov
invd
rcll
and
push
ret
imul
aaa
cmc
dec
adc
enter
xor
in
dec
inc
mov
inc
or
stc
aad
dec
jbe
and
stos
mov
test
pop
lds
jno
in
push
iret
push
inc
movsb
in
push
sub
lret
push
bound
dec
fcomp
adc
in
in
mov
fsub
and
movsb
andb
inc
mov
jns
call
ljmp
stos
lea
test
popf
cld
push
adc
jo
xor
mov
xchg
mov
aas
bound
add
test
outsl
in
jae
push
test
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
jge
sahf
lods
pop
movsb
adc
lahf
movlps
mov
xlat
mov
mov
pushf
jnp
in
inc
cld
xor
test
mov
sarb
pop
ret
dec
call
or
loop
mov
jo
rcrb
in
jmp
fcomip
pop
sbb
sbb
adc
inc
cmp
xchg
outsl
insl
pop
cmp
or
mov
push
test
ret
mov
cwtl
test
jp
push
lret
sarb
push
mov
mov
mov
rolb
add
test
cld
dec
cmp
add
mov
xchg
repnz
cmpsl
testb
js
xchg
repnz
iret
dec
cwtl
push
jge
xchg
cmpsl
pop
xchg
ljmp
pushl
or
jae
pop
mov
es
scas
movsb
and
and
fnstenv
lods
icebp
imul
int
gs
adc
movsl
mov
sub
sub
mov
es
dec
mov
adc
xor
adc
fdivrs
leave
test
jecxz
xchg
fsubr
out
loop
iret
ficomps
cli
rcll
sbb
das
je
sbb
cmp
out
outsb
sbb
mov
xchg
xchg
push
fnsave
fwait
addr16
das
inc
dec
mov
movsl
dec
mov
push
mov
fidivs
into
xchg
add
pop
daa
dec
cltd
lret
adc
dec
xor
or
lret
in
pop
fidivrs
jge
mov
sahf
jb
cmpsb
mov
xor
inc
cli
fwait
and
pop
pushf
add
jb
inc
dec
lods
daa
fcomip
jmp
movsb
pop
clc
sahf
inc
cmp
out
lds
bound
fsubs
sbb
imul
pop
lea
pusha
add
mov
push
loop
cltd
movlhps
cmp
cltd
add
scas
fwait
pop
inc
nop
dec
cmp
xchg
lods
mov
mov
sbb
leave
inc
dec
add
jno
jl
and
cmp
add
lock
in
cltd
call
mov
xchg
sub
fildll
in
adcb
jne
aam
xchg
cmpsl
lret
fisttps
cmpsb
test
es
push
pop
push
cmpsl
ljmp
cmp
jl
inc
dec
adc
sarb
mov
ret
vrangess
lods
shrl
lea
jno
xchg
mov
js
addr16
adc
enter
cmp
adc
and
cmc
and
pop
cmp
fucomp
inc
pop
jge
adc
xchg
and
mov
mov
in
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
push
mov
adc
leave
jb
sbb
in
push
aad
xchg
cmp
mov
cmpsb
mov
bound
xorb
outsb
fs
push
push
movsb
imul
mov
lods
stos
xor
mov
xchg
cmp
push
mov
imul
call
push
pop
ss
lret
imul
mov
movsl
dec
jae
in
lock
adc
nop
shll
push
rorl
nop
xor
out
scas
adc
jecxz
mov
mov
shlb
add
mov
dec
cli
xor
in
pop
jne
movsl
push
adc
lret
dec
inc
bound
iret
mov
inc
int
je
out
out
cmpsb
lods
xchg
mov
inc
clc
or
xor
popf
sub
and
sub
jne
scas
adc
rclb
inc
jmp
dec
pusha
jae
mov
inc
call
push
out
mov
mov
or
push
out
xchg
insl
sbb
jbe
and
push
ljmp
je
cmp
stos
and
insl
insl
inc
mov
xlat
test
nop
stos
and
sti
ds
mov
xchg
into
push
sbb
adc
sbb
mov
in
push
sbb
outsb
add
aad
xchg
test
adc
sub
mov
xchg
jno
gs
subl
cmc
inc
jmp
mov
iret
cwtl
adc
fimull
cmpsl
cld
adc
adc
imul
mov
xor
les
mov
pop
js
mov
push
mov
cli
es
pop
cmp
xchg
mov
xorb
shlb
gs
mov
test
mov
notl
out
dec
inc
je
fldl
push
pushl
fnsetpm(287
or
push
daa
mov
aam
add
popf
mov
jae
ja
xor
jns
int3
test
jbe
inc
test
sub
pushf
ret
stos
jmp
jns
sub
ja
negb
inc
mov
lods
xor
gs
out
xchg
leave
inc
xor
pop
cmpsl
mov
sahf
adc
and
es
cld
outsb
jbe
out
mov
int
scas
je
push
jo
sub
lea
cltd
sub
arpl
dec
inc
xchg
pop
push
dec
sbb
mov
jle
movsb
mov
cmc
adc
test
wbinvd
movl
jmp
ja
pop
add
rcll
push
bound
mov
adc
lahf
movlps
mov
or
push
mov
add
gs
jl
rol
rcrb
inc
je
ret
movsl
push
ret
mov
adc
jo
jns
lahf
pop
xchg
les
out
movsb
mov
and
mov
aam
outsl
ds
cmp
push
clc
rcr
ss
ffreep
inc
addr16
push
push
or
imul
dec
inc
popa
dec
and
mov
out
push
cmp
jne
sbb
cmpb
andb
jge
mov
adc
stos
lret
cs
fnstsw
adc
jnp
not
push
dec
jg
je
stos
inc
xchg
mov
int3
shl
cmp
add
inc
jb
inc
mov
and
xchg
mov
mov
push
jg
or
adc
or
lods
test
mov
xor
xor
push
repnz
push
sub
push
std
adc
push
push
test
sbb
mov
popa
xchg
or
mov
jmp
jb
and
cs
test
aas
xchg
xchg
cmp
xchg
jo
stos
dec
add
mov
sbb
out
lods
pop
int3
hlt
mov
pop
pushf
lret
incl
fisttps
pop
mov
xchg
jge
mov
ret
dec
push
pop
nop
leave
inc
mov
inc
iret
orl
fistl
or
mov
mov
sbb
xlat
in
out
rcll
xlat
lea
inc
add
scas
xor
dec
push
lock
dec
jl
leave
rcrl
pop
dec
ljmp
dec
pop
aaa
inc
sub
or
fldl
ljmp
inc
jnp
push
xchg
sub
imul
stc
inc
cs
outsb
imul
repnz
cmpsl
popa
fidivrl
stos
shrl
mov
jmp
sbb
adc
inc
mov
jl
data16
sahf
pop
pushf
mov
popf
mov
push
dec
mov
jae
sbb
popa
cmp
sub
les
sbb
xchg
cltd
cmp
jb
dec
adc
adc
mov
adc
sub
in
adc
hlt
imulb
pslld
stos
push
mov
leave
ret
in
and
leave
clc
lea
mov
inc
jb
adc
sub
jae
scas
in
sub
ljmp
xchg
in
adc
dec
jb
lahf
and
inc
fcompl
cs
or
dec
outsb
sbb
xchg
mov
jl
inc
rcrl
out
in
je
int3
test
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
fdivrl
lahf
movlps
and
ljmp
pop
inc
xchg
jnp
pop
sahf
dec
xor
push
scas
adc
lods
daa
mov
xor
jl
sti
inc
push
filds
aad
push
ljmp
mov
pop
clc
test
cli
mov
shlb
or
imul
movsl
sub
icebp
rcrb
js
in
cltd
pop
rcrb
test
inc
adc
sub
and
ljmpw
xor
call
jb
cmp
and
ljmp
repnz
xchg
lret
mov
pop
rcll
cwtl
lret
adc
dec
ds
repnz
lods
push
lret
add
adc
dec
mov
sub
mov
nop
sti
xchg
mov
mov
push
add
cmp
pop
jnp
insl
mov
daa
mov
lcall
inc
inc
xchg
mov
std
or
in
jne
dec
jp
pop
push
or
in
aas
cmpsb
or
cmpsl
or
xchg
cltd
les
cmp
push
lock
lea
mov
faddl
adc
jne
dec
cmpsl
movsb
aas
mov
inc
lds
fistpl
lret
idivb
or
es
push
mov
add
cmpsb
and
push
fildl
mov
mov
xor
lret
out
loope
dec
shlb
pop
push
xor
test
jle
jnp
push
les
inc
mov
ljmp
jg
fwait
mov
dec
add
es
test
clc
ret
mov
dec
add
fcomps
jbe
cmp
mov
aad
fdivs
std
xor
repz
xor
jecxz
bound
fmuls
pop
rolb
push
aaa
cli
or
rcrl
loop
cmpl
or
xchg
dec
lcall
in
sub
ret
sub
popa
xchg
push
mov
push
lret
inc
int3
pop
icebp
mov
xor
lods
push
out
ss
sub
ffree
mov
lds
insl
cli
pushf
rcrb
inc
fprem1
out
mov
lahf
dec
imul
mov
lea
or
daa
push
data16
jne
mov
in
out
aas
data16
insl
lock
add
add
ss
adc
sbb
xchg
jnp
sbb
lcall
movsl
clc
jb
xchg
push
mov
hlt
pop
sbb
mov
sbb
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
lcall
lahf
movlps
add
xor
dec
push
sub
cmp
dec
or
lds
mov
fucom
shl
out
mov
mov
or
enter
sbb
adcb
frstor
push
stc
push
movsl
ja
rep
ds
movsb
mov
xchg
push
jecxz
xor
in
push
lret
pop
enter
xlat
mov
and
jno
dec
fbld
shlb
pop
jb
mov
lds
jle
gs
mov
dec
cltd
dec
sbb
test
shll
rcr
xor
out
lcall
call
icebp
inc
xchg
scas
je
insl
jecxz
sub
mov
dec
shll
test
int3
bound
pop
fs
clc
loope
sub
xor
test
sbb
add
xlat
mov
fucomi
cmpsl
mov
insl
test
shll
shll
jecxz
rcrl
fwait
xchg
add
shll
cld
out
xchg
icebp
ja
cld
cmp
lcall
sbb
pop
les
cmc
stos
shl
enter
pop
int
std
and
sub
out
or
das
repnz
jnp
sbb
adc
pop
daa
std
ja
lahf
mov
xor
push
push
dec
cld
push
lret
sbb
aam
roll
xchg
adc
cmpsl
aaa
out
sub
test
jnp
push
jne
icebp
push
shll
inc
lea
sbb
cmpsl
push
stos
gs
inc
mov
test
push
mov
pop
cmp
aam
lea
pop
xchg
mov
xchg
sub
jle
test
arpl
sti
insl
stos
aas
sbb
cmp
cmpsl
icebp
inc
inc
lods
mov
lret
mov
cmp
mov
insl
push
outsl
arpl
pop
es
xor
out
lock
push
inc
inc
stos
cmp
xchg
sbb
neg
icebp
sahf
xor
dec
repnz
out
cmp
imul
jg
pop
xor
mov
xchg
push
gs
cmc
pop
js
lret
jns
sbb
sub
loopne
ror
aas
les
sti
dec
call
push
mov
push
jg
pushf
pop
movsl
mov
out
sub
sti
fcomip
movsl
dec
pop
sub
jne
jle
mov
inc
and
pop
iret
cmp
xchg
mov
das
mov
test
fs
subb
movb
das
in
or
test
fisttpl
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
jb
dec
mov
pop
movlps
outsl
fnstcw
call
push
pop
xchg
lahf
ljmp
mov
sbb
sub
add
icebp
pop
fadd
jnp
or
cmp
incl
imul
and
and
mov
fstpt
and
push
mov
xchg
sub
push
mov
test
push
and
push
int3
inc
dec
arpl
mov
stos
sub
push
sti
sbb
push
mov
sbb
xchg
fnstenv
or
das
sti
mov
mov
pop
bound
filds
cmp
lret
popa
andb
and
xchg
and
xchg
sub
fidivs
mov
bound
mov
adc
xchg
or
xchg
add
orl
add
cmp
jbe
dec
adc
sub
sbb
out
shll
mov
data16
maskmovq
mull
inc
xchg
clc
mov
xchg
in
inc
lds
les
aaa
es
lret
push
jb
jns
outsl
sbb
sbb
and
lret
inc
push
sbb
and
test
addr16
std
lea
repnz
outsb
imul
mov
xor
push
and
clc
aaa
int3
adc
xchg
inc
cmp
pusha
push
mov
je
repnz
xchg
pop
or
inc
inc
xchg
or
in
jbe
sbb
daa
out
pop
xchg
ss
jo
lret
inc
jge
lea
cwtl
pop
or
dec
jo
adc
aas
loopne
cs
adc
fwait
icebp
and
push
push
add
mov
and
jns
mov
xchg
mov
dec
int3
lret
movl
movsb
out
dec
ret
into
not
rol
aad
cmp
scas
push
cmp
inc
mov
and
mov
mov
mov
push
and
popa
pop
inc
repnz
loope
and
scas
ret
sbb
dec
stos
bound
mov
dec
adc
or
adc
adc
stos
mov
sahf
xor
int3
ja
pop
add
mov
jbe
shlb
inc
mov
movsb
lods
sbb
mov
pusha
js
pusha
std
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
xlat
inc
stos
pop
test
adc
adc
dec
sbb
mov
icebp
add
push
lret
push
fistpl
sahf
pop
push
dec
push
mov
ret
jmp
icebp
in
vminps
push
mov
shl
imul
lret
cwtl
les
sti
dec
inc
in
jae
mov
adc
into
lret
scas
pusha
cmp
lock
jmp
leave
mov
pop
mov
fcmovne
call
fnstsw
jg
xor
sub
pop
xor
inc
mov
cltd
ss
andl
xchg
popf
xacquire
jno
cmc
outsl
jno
add
sbb
aad
lea
popl
popa
push
inc
inc
sbb
and
dec
lods
popf
mov
roll
aad
inc
xchg
jmp
xchg
jecxz
das
fcmovnu
sub
jge
inc
adcb
out
loope
inc
aaa
jb
dec
jg
adc
clc
fstps
sub
xor
cld
das
fnsave
in
adc
adc
repz
mov
xor
push
mov
fldenv
and
pop
push
and
dec
data16
mov
pop
xor
cmp
sub
dec
sub
cmp
xor
add
ljmp
lea
sub
adc
xchg
leave
movsb
jb
loopne
jno
mov
mov
and
dec
dec
and
imul
hlt
mov
xor
outsb
aad
push
cld
mov
pop
mov
xor
mov
or
mov
ja
cmc
cmp
sub
into
filds
push
add
jmp
jmp
fistpll
cmpsl
aam
gs
insl
push
aaa
jns
add
cwtl
mov
push
mov
xchg
insb
bound
xchg
xor
outsb
jne
test
ljmp
xor
decb
or
shrb
sbb
mov
pop
pop
mov
out
push
call
jg
and
xchg
inc
pop
adc
cmp
mov
mov
loopne
add
mov
test
scas
insl
js
mov
dec
les
repz
lret
push
mov
mov
jmp
fdivl
fnstcw
sbb
push
js
adcb
pop
movlps
inc
aas
xor
cwtl
cmpsl
sbb
sti
out
test
cs
cli
in
mov
into
loope
push
sbb
in
sti
sub
adc
mov
pop
fnstcw
jne
jb
add
cmc
lcall
xchg
xchg
sbb
aaa
mov
rclb
stos
xor
push
push
lret
mov
jnp
je
ja
xchg
cli
adc
cld
jmp
inc
fs
inc
into
push
ret
icebp
push
in
popa
cmp
xchg
loopne
shlb
jp
xor
sti
decb
or
or
stos
jmp
xchg
jg
adc
jbe
dec
int3
add
fcmovnu
leave
cld
jmp
fstpl
push
and
shrb
sub
lods
xchg
fwait
cmp
mov
int3
xor
enter
aaa
mov
subb
addr16
dec
dec
enter
in
nop
rcl
dec
fldt
cmpsl
bound
ds
das
fistpl
addb
shlb
imul
cmp
add
pop
jge
adc
adc
mov
mov
mov
mov
enter
cli
mov
cmp
js
daa
cmp
fwait
sbb
dec
jl
fwait
daa
pop
dec
add
dec
aam
sti
cwtl
jmp
mov
popl
pop
mov
dec
push
in
push
inc
scas
push
sbb
stos
arpl
popf
sub
push
lods
addb
mov
inc
add
and
sbb
sub
addr16
pusha
ja
pop
stos
sub
cltd
iret
lea
cmc
stos
and
jo
mov
daa
sub
lods
aaa
sub
stos
mov
pop
xchg
fistl
jg
int
mov
sbb
mov
imul
aaa
lcall
movsl
push
iret
fistl
xor
ss
sub
dec
out
lods
xchg
and
mov
clc
ja
rorl
into
pusha
loop
xchg
incl
add
mov
adc
jecxz
xchg
bound
js
rolb
jnp
sahf
sbb
das
and
xor
mov
repz
mov
pop
mov
xchg
mov
dec
addb
jne
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
sub
push
jle
adc
adc
mov
xor
ret
pop
stos
lock
jnp
mov
imul
popa
jle
lcall
or
push
int
jb
pop
mov
mov
xchg
mov
adc
movsb
notb
imul
insl
sub
mov
sub
div
dec
xchg
and
mov
jbe
cmp
int3
pop
out
push
mov
lds
cltd
clc
mov
pop
mov
cmpb
pop
add
inc
push
arpl
sbb
arpl
dec
sub
pop
jmp
or
movsl
out
pop
subl
jne
hlt
push
mov
pusha
xor
pop
jle
xchg
cltd
aaa
cmpsb
fwait
gs
mov
inc
cmc
fcom
lcall
int3
mov
cli
call
cmp
fs
pop
roll
pushf
cwtl
jl
mov
dec
jno
pushf
jg
mov
fucomp
xor
pop
jmp
ret
scas
test
out
add
add
push
inc
subl
in
movsl
ret
or
out
ret
out
cmp
adc
cmp
or
insl
dec
mov
jl
mov
mov
sub
push
incb
in
add
fisubrs
dec
xchg
pop
jecxz
mov
shll
imul
cmpsl
pop
loopne
out
js
fsubr
xor
das
xchg
xor
mov
sbbl
lret
xchg
adc
sub
clc
sti
inc
xor
lahf
pop
mov
inc
adc
dec
inc
inc
pop
mov
test
les
outsl
fninit
ficompl
xchg
idivl
mov
sbb
sbb
fwait
adc
into
addl
mov
cmp
stc
rolb
mov
push
pop
mov
push
or
ret
fsubrs
icebp
mov
mov
xchg
mov
mov
out
lahf
inc
popf
das
out
mov
xchg
leave
movsl
roll
dec
lods
and
dec
pop
adc
xchg
adc
mov
fimull
nop
and
test
inc
add
int3
in
hlt
jecxz
aas
jp
cmc
jg
insb
fsubrs
mov
insb
ret
cmpsb
cli
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
pop
ljmp
adc
adc
push
shr
mov
sub
das
jae
and
jb
xor
stos
pop
sub
and
xlat
sbb
lds
iret
jne
xor
sub
inc
xor
testb
je
repnz
je
add
pop
in
jmp
sbbb
fistpll
mov
in
inc
inc
adc
pop
push
fwait
dec
aad
sub
out
aad
cs
movsb
int
shl
in
ficompl
cmc
jb
ret
pop
fidivl
test
jae
sub
inc
aaa
mov
adcb
mov
xchg
sbb
test
cmp
xor
and
ficoms
cli
dec
js
stos
outsl
push
ss
aam
or
sti
jge
dec
ja
shrl
xor
xchg
out
add
mov
les
mov
jnp
mov
fcoml
sub
adc
sbb
iret
ss
adc
push
imul
push
popf
inc
out
jno
push
int
sub
movsb
xchg
inc
push
lea
orl
gs
repz
push
adc
mov
sub
cmpsb
fs
cmpb
xlat
sti
or
popf
jns
cmpsl
xchg
pop
pop
fisubrs
cmp
or
jl
add
movsl
pop
out
xchg
shrl
add
repz
lock
popf
aas
loope
enter
ret
jg
enter
popf
xor
sbb
fstpt
inc
sbb
shll
cmp
pop
addr16
lret
or
pop
jg
movsb
adc
xchg
jl
test
cmp
cwtl
and
sarb
sbb
scas
inc
adc
out
sub
sbb
test
sbb
js
roll
pusha
fstps
or
aam
jo
jge
dec
adc
mov
popa
jp
loop
pop
sti
dec
inc
and
out
cld
sub
in
mov
xor
movsl
sbb
test
xor
mov
sti
pop
mov
jle
cmp
imul
loop
push
jb
pop
adc
decb
test
jo
repnz
mov
jne
cs
push
mov
addr16
decb
mov
push
inc
call
pop
dec
or
jne
subl
sbb
bound
xor
mov
jge
add
xor
dec
and
push
jne
test
sbb
sbb
daa
test
es
mov
andl
addb
aad
push
jecxz
mov
add
fsts
hlt
or
std
cmp
sbbb
and
xchg
dec
pop
jmp
insl
cs
in
pop
js
push
shrb
aas
lods
std
xchg
sub
fcompl
sub
test
xorl
push
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
mov
adc
ficoms
adc
pop
movsb
add
rcll
movsl
and
cs
xor
jp
sbb
pushf
test
jg
ret
and
push
push
sti
mov
test
pop
data16
adc
adc
mov
cmpsb
stc
push
repnz
jo
push
fdivl
adcb
stos
jnp
jb
add
pop
ds
ret
push
dec
int
mov
movsl
sub
dec
stos
out
mov
shrb
add
repnz
or
push
cmp
out
cltd
jb
and
cwtl
jb
dec
jbe
data16
mov
xchg
mov
int
int
scas
mov
sub
jbe
shrl
fstps
testb
outsb
mov
push
std
mov
dec
mov
dec
mov
jns
mul
inc
xchg
pushf
push
sub
xchg
xor
and
inc
out
lcall
test
xor
mov
add
cwtl
mov
xchg
add
lcall
imulb
mov
sub
sbb
movsb
jecxz
jb
sub
push
lock
leave
into
fld
mov
das
cmp
push
pop
dec
aas
ret
jle
cmc
push
sub
mov
or
add
mov
pop
add
push
cmpsl
movsb
and
push
shl
pop
shrl
cmp
fisttpl
dec
and
push
jno
fyl2xp1
and
sbb
pop
stos
jbe
push
arpl
leave
movl
dec
jecxz
imul
inc
clc
mov
xchg
add
mov
add
push
jp
sbb
xchg
inc
dec
fisttpl
scas
jecxz
add
repnz
adc
sti
mov
xchg
lds
xchg
cmp
clc
outsb
nop
out
rcll
stos
fwait
xor
pop
adc
add
sbb
xchg
cmp
dec
int
repnz
xchg
xor
or
shll
pop
adc
xchg
push
push
std
ljmp
and
test
inc
pop
lock
mov
and
push
add
lret
jo
dec
cmp
pushf
or
lret
pushf
aam
int
mov
xor
or
or
fwait
xchg
push
ss
pop
iret
loop
les
fdivrl
pop
xor
mov
pop
xor
push
xor
cld
inc
and
data16
fstpt
cmp
adc
push
cltd
pop
push
xchg
and
test
lock
stos
adc
and
add
shll
mulb
cmp
inc
insb
ret
addr16
xor
jo
push
xchg
push
push
fwait
mov
pop
nop
loope
and
aam
mov
xchg
xchg
xlat
pop
push
fs
sbb
arpl
inc
into
add
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
insb
mov
adc
ficoms
adc
mov
lea
stos
push
insb
lret
shlb
stos
bswap
popf
loope
cwtl
loop
pop
adc
sbb
xchg
dec
pop
xchg
xchg
mov
lods
inc
mov
adc
test
pop
loopne
icebp
popa
cli
shlb
out
out
add
stc
cmp
xchg
pusha
inc
mov
push
in
data16
enter
lods
and
sub
dec
push
aas
dec
test
in
notb
in
mov
sub
gs
add
push
aam
add
xlat
sub
push
stc
or
aaa
imul
andb
mov
inc
dec
mov
cmpsb
cs
aam
int
stos
call
lahf
or
sti
and
cli
inc
xor
mov
sbb
sub
sub
fdivr
mov
ret
enter
mov
pcmpgtw
movsb
mov
mov
cmp
aad
and
das
andb
sahf
push
or
push
out
rcll
rorl
fcoml
lds
xchg
push
out
js
movsb
push
test
pop
push
daa
ljmp
sbb
les
sub
jmp
test
pop
push
aad
mov
ljmp
insl
mov
xchg
lcall
jo
jnp
jae
jge
push
or
lods
pop
fbstp
mov
sbb
inc
in
or
lret
jno
lock
sahf
test
add
mov
mov
sub
add
jmp
and
insl
pushf
inc
mov
sahf
ljmp
jecxz
mov
push
mov
push
adc
inc
add
in
sbb
push
sahf
cmp
sarb
sub
push
xchg
mov
lock
aam
lods
adc
cmp
dec
pop
clc
mov
test
insb
adc
dec
mov
enter
loop
mov
adc
leave
aas
div
imull
popa
sbb
jae
xchg
repz
xor
scas
adc
mov
sbb
push
cmc
in
xchg
fwait
mov
and
lods
cmp
fldt
sbb
dec
mov
adc
xor
fdivs
jnp
push
add
int
or
std
lds
xor
test
mov
cmp
pop
cs
jb
icebp
sub
xlat
xlat
push
cmovg
dec
inc
stos
popf
jmp
imulb
insb
std
inc
xchg
cmp
mov
jle
imul
aad
mov
cmp
cmp
lcall
aaa
fs
imul
pushl
add
and
pop
ja
addl
xchg
sbb
cmc
cwtl
cmp
rcr
xchg
pop
iret
xchg
mov
in
loope
jb
jno
into
pushw
and
xchg
fdivp
sub
ret
js
cmpsl
pop
xchg
icebp
dec
decb
fs
fdivs
mov
jecxz
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
stc
xchg
inc
stos
andl
iret
xlat
outsb
sbb
cltd
or
mov
pushl
mov
sbb
loope
xor
mov
add
mov
or
xor
or
ljmp
bound
fstps
lret
xor
xlat
das
pop
lea
inc
jnp
movsl
push
pushf
ret
les
subb
cli
shlb
fstpl
outsl
mov
sub
mov
inc
or
shl
das
stc
jle
sahf
sub
add
fsubr
outsl
pop
jge
or
addb
pop
push
xchg
adc
or
fstl
imul
push
push
and
arpl
out
mov
mov
mov
cmp
and
sbb
ret
adc
bnd
add
xchg
jbe
rorb
push
gs
cmpsl
cs
sub
jle
pushf
mov
scas
dec
lret
lret
insl
dec
cmp
mov
in
out
or
data16
dec
mov
xor
insb
in
xchg
fldpi
je
lea
and
pop
xor
cmpsl
lods
ja
inc
or
enter
aad
insl
fbld
popf
mov
cmp
mov
mov
dec
cmp
cmp
es
mov
or
movsl
inc
inc
test
push
stc
adc
je
mov
cmp
adc
mov
dec
ljmp
or
add
sti
dec
cli
inc
jecxz
int
mov
ja
leave
fmull
repz
and
jp
aam
add
sub
mov
fbstp
lret
test
test
fisttpll
imul
jecxz
daa
in
xchg
negl
ljmp
and
insl
into
mov
jg
mov
stos
test
xor
popf
js
or
outsl
mov
lcall
jnp
and
clc
mov
das
lcall
ss
lods
popa
push
mov
sbb
rol
ret
mov
test
hlt
mov
dec
cmp
mov
xchg
cmp
sub
cltd
outsb
xor
mov
scas
mov
dec
popa
mov
adcb
inc
pop
sbb
das
iret
jmp
aas
pop
dec
and
aad
jae
stos
jecxz
mov
add
or
cmp
dec
aas
push
loopne
mov
push
dec
xor
popa
push
fmull
cmpsl
or
mov
jmp
pop
daa
dec
cs
out
idivl
push
xlat
xor
popf
dec
ds
push
jnp
arpl
or
push
cmp
stos
xor
lock
jg
das
sbb
sbb
push
sub
pop
mov
jl
clc
inc
pushf
jb
shlb
andb
aad
iret
mov
or
jg
cld
cmp
dec
jp
neg
mov
lcall
push
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
inc
ret
stos
insb
inc
bound
adc
adc
adc
adcl
imul
dec
jg
dec
inc
mov
push
and
pop
das
sub
pop
mov
sbb
jb
enter
pushf
jne
and
pushf
inc
fucomi
aas
shlb
loopne
xor
aaa
stos
sbb
inc
push
add
fldcw
push
push
imul
sbb
pop
cmp
imull
cs
xchg
mov
mov
movsb
jecxz
lock
push
lret
aam
nop
cmp
pop
sbb
inc
test
repz
jg
hlt
mov
sti
movsl
lret
xchg
sbb
xchg
fcmovnbe
movsl
and
stc
arpl
loopne
xchg
mov
icebp
add
dec
inc
cmc
adc
scas
sub
fstpl
iret
pop
jns
add
dec
ljmp
mov
and
mov
push
pop
aam
pop
xchg
xchg
jmp
orl
dec
fstpl
leave
cmp
int
fildll
inc
cld
jnp
jp
icebp
mov
push
cmp
add
and
dec
out
adc
out
loope
es
mov
das
enter
jmp
xchg
or
in
and
jo
clc
in
pop
stc
incl
xchg
mov
push
inc
push
data16
dec
mov
sbb
mov
pop
int3
push
lret
push
xor
or
dec
stos
lds
popa
cs
jno
iret
aas
ret
sub
adc
cld
lods
dec
in
inc
inc
repnz
ds
test
mov
xchg
dec
cwtl
sbb
mov
push
mov
cmp
mov
rcll
nop
dec
inc
sub
js
inc
outsb
aad
stc
or
xchg
ss
mov
aad
cmp
popf
cltd
add
iret
sbb
in
add
mov
in
inc
stos
rcll
mov
std
cmp
push
xchg
call
je
sti
sub
std
dec
pusha
inc
sbb
in
sarl
mov
jbe
rolb
int
sub
jbe
pop
lcall
nop
rcl
mov
push
loope
insb
or
pushf
dec
xor
sbb
popf
xchg
std
sarl
pop
cmp
or
fistpll
out
lcall
daa
pop
adc
fcoml
pop
push
leave
push
loopne
popa
mov
fldcw
lods
xchg
xor
lret
pop
cld
inc
mov
sbb
mov
imul
mov
in
pushf
or
dec
push
adc
cltd
and
fdivl
push
mov
mov
das
movsb
sbb
aam
and
adc
rcrl
jmp
cmp
out
dec
dec
fidivs
add
jne
mov
repnz
dec
cmp
add
loopne
add
popa
movl
sbb
adcl
addr16
scas
sahf
xor
add
shll
push
and
xor
dec
push
pushf
adc
in
inc
enter
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
mov
movlps
lock
and
xchg
ja
ds
fistpll
fsubrs
dec
and
cld
sub
cmp
inc
pop
in
js
push
jl
mov
mov
aad
cmp
xchg
mov
xor
jno
mov
cli
arpl
cmp
movsl
addr16
test
mov
or
test
xor
sti
cli
test
xor
mov
push
add
iret
pop
xor
mov
xor
movsb
loopne
imulb
push
gs
cltd
mov
mov
movsbl
nop
sub
fnstsw
pop
sbb
pop
push
repnz
rcrl
xchg
push
mov
mov
mov
js
add
cmp
insb
jp
fwait
mov
pusha
mov
push
in
cmp
clc
test
lock
mov
dec
mov
jne
stos
push
fstpt
or
imul
aaa
mov
ja
lods
push
shrb
pop
cwtl
push
rcll
dec
jmp
and
fadds
xor
add
sbb
or
loope
movsb
test
mov
xchg
push
mov
mov
ret
shl
cmp
push
insl
pop
fsubl
das
repnz
out
mov
clc
vpcmpgtw
test
push
sbb
jne
lods
cmp
movsl
fcmovnu
or
push
popa
adc
popf
pop
scas
jecxz
push
js
push
clc
mov
add
xchg
add
inc
sahf
sahf
pop
lret
addr16
mov
enter
inc
cmp
incw
cmp
pop
sbb
mov
push
rcll
inc
ds
dec
and
iret
mov
imul
call
sub
jmp
iret
ret
sbb
jo
xchg
xchg
add
jnp
bound
arpl
mov
mov
mov
cmc
xor
sahf
out
rcrl
sbb
cmp
push
jns
jo
xchg
or
sbb
fdivp
mov
jl
adc
jge
mov
pushf
fistl
adc
fldl
xchg
xchg
mov
rep
hlt
add
jg
into
in
pop
call
push
sub
cli
fldl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
jno
mov
xor
adc
push
jae
loopne
push
jp
or
fnstsw
xchg
pop
mov
adc
xor
xchg
or
sarl
and
mov
clc
enter
push
outsl
jb
push
icebp
dec
sbb
subb
mov
fildll
in
pop
jecxz
movntps
xchg
mov
dec
in
fcompl
dec
mov
or
push
movsb
mov
pop
bound
in
push
push
int
pop
in
pop
add
mov
mov
ds
sti
sahf
jne
xchg
adc
fldcw
cld
mov
pop
jae
xchg
fisubrl
mov
jp
jnp
sbb
aam
in
mov
xor
cwtl
mov
and
imul
pop
jl
cmp
decb
out
xchg
int3
jno
mov
sbb
repnz
mov
jne
lahf
les
xor
fildll
push
inc
sahf
hlt
jo
in
mov
push
xchg
in
or
mov
pop
and
jle
or
mov
sbb
sti
adc
lahf
or
xor
int
mov
shll
fsts
test
pop
icebp
in
mov
and
out
es
xchg
xor
fdivrl
or
popfw
xchg
jle
enter
xor
push
push
dec
xchg
mov
lods
leave
dec
adc
push
push
jnp
dec
dec
popa
sub
fistps
shrb
sbb
enter
cmp
pop
adc
sub
dec
cmp
mov
sti
out
mov
lahf
xor
adcl
cli
shll
jo
nop
mov
jnp
mov
add
xor
add
imull
rclb
sub
mov
pop
xor
and
out
mov
jae
fsubl
stc
dec
mov
das
push
pop
aas
dec
dec
aam
ss
xlat
push
or
lea
paddsb
shr
xor
fdivrs
push
clc
mov
mov
pushf
jle
adc
add
inc
xor
iret
bnd
and
mov
mov
xchg
aam
loope
sub
push
addr16
lea
sbb
mov
clc
lahf
lock
iret
sub
cs
mov
sbb
add
mov
mov
pop
xchg
cmp
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
sub
stos
inc
push
adc
push
adc
adc
into
push
push
xchg
inc
mov
fldcw
inc
jno
cmp
sbb
into
insb
mov
lods
movsl
dec
das
xlat
xchg
xor
dec
mov
xor
shrb
adc
jmp
jo
fldt
testl
cmp
std
jecxz
xor
mov
dec
or
imul
adc
cs
jp
ljmp
add
dec
jmp
ror
push
ficomps
je
rorl
xchg
insl
fcomp
mov
or
mov
call
mov
lcall
insb
cmp
mov
aad
adc
sub
sahf
loop
add
add
stos
loope
inc
mov
out
push
pop
pusha
dec
dec
dec
stc
data16
in
iret
adc
pusha
ret
test
and
lds
mov
add
into
dec
test
aaa
out
shlb
mov
and
fwait
imul
es
add
add
xor
adc
push
in
hlt
pop
andb
push
push
push
movsb
jge
cmp
iret
adc
sbbl
mov
jmp
sub
and
ja
mov
inc
rcr
imul
dec
xchg
pushl
xor
or
or
jnp
test
mov
inc
into
enter
lret
pop
es
and
fnstsw
lret
int3
pop
sbb
dec
or
std
pop
jecxz
push
inc
lcall
push
lds
mov
xchg
or
xor
daa
gs
fwait
out
mov
call
movups
insb
adc
mov
andl
cwtl
dec
mov
int
ffree
out
out
enter
pusha
shlb
sbb
aas
cwtl
lea
pop
pop
or
shll
lahf
js
xchg
cmp
fnsave
lods
leave
ljmp
cmp
shlb
popf
push
enter
xchg
push
inc
mov
pop
add
xor
lods
jnp
xlat
cld
data16
stos
add
pop
dec
push
jo
cmc
or
sahf
pop
add
addr16
jo
cli
push
inc
pushf
inc
mov
jmp
jmp
out
mov
adc
lds
lea
push
pop
pusha
sbb
pop
or
sub
mov
int3
ds
orb
int
jg
fnstcw
pusha
mov
and
sub
pop
mov
test
cli
inc
lahf
iret
add
stc
rcll
imul
cmp
sbb
cld
push
mov
sub
jne
test
bound
fcompl
add
in
mov
fcmovne
enter
jnp
sbb
or
ret
inc
es
pop
jge
insl
and
repnz
lahf
xchg
dec
lds
xor
mov
mov
mov
cs
dec
or
arpl
insl
or
cli
outsl
movsb
outsb
push
or
call
ret
xchg
push
jle
ret
fstpt
hlt
enter
out
add
and
and
xor
sbb
ja
push
sbb
ljmp
scas
in
sbb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
and
jle
dec
adc
push
adc
adc
mov
ret
mov
or
mov
in
shl
mov
faddp
or
jp
jae
out
mov
bound
rolb
mov
push
xor
inc
push
in
jmp
mov
cld
cmp
pop
daa
insl
loop
movb
add
and
out
add
jp
sbb
push
imul
int
ja
cs
mov
testl
xor
repnz
pushf
icebp
outsl
xchg
addr16
add
lods
mov
data16
jmp
lcall
dec
popl
shrb
cmp
pop
push
push
in
subl
push
sti
sub
sbb
ret
cld
sub
jb
add
imul
pop
xor
push
mov
int3
int3
pushf
xor
lcall
push
mov
mov
xchg
cmpsl
loope
arpl
add
ss
movsb
aad
inc
cli
push
and
sbb
cmp
js
push
pop
arpl
jge
mov
arpl
cmp
add
cmc
in
xchg
adc
sti
hlt
or
ror
mov
inc
sarb
and
iret
push
int
and
std
jnp
arpl
fwait
xchg
push
dec
lods
shr
int
and
fs
inc
scas
cmp
mov
push
sar
jns
mov
or
pop
orl
ja
mov
popf
jp
cmp
xor
and
gs
jp
pop
out
bound
aas
aas
dec
mov
xchg
and
adc
rclb
mov
insb
fisttps
stc
push
sbb
in
rcrb
or
ss
xchg
lret
ds
mov
lock
push
add
push
pusha
test
adc
add
and
sub
jbe
gs
subb
mov
jo
out
sub
mov
lret
rolb
or
fldl
xor
inc
stos
xor
movb
cmp
std
aaa
xchg
ret
xor
fwait
sub
mov
or
outsb
mov
push
jbe
pop
pushf
stos
dec
push
int
ljmp
pop
test
lods
cmp
sti
xchg
xchg
xchg
fisubrs
push
popa
inc
ds
pop
mov
add
lock
imul
mov
push
or
test
xor
mov
in
push
test
rorl
outsb
mov
fdivrs
jbe
push
xchg
mov
jl
mov
addr16
shrb
les
mov
dec
aam
sub
xorl
cmp
xchg
sbb
lock
sub
jnp
test
dec
lret
jle
stc
sbb
pop
fsubrl
push
into
call
aad
aas
sub
cmp
cltd
jg
sub
mov
xchg
jecxz
xchg
sub
mov
mov
cmpsb
in
cltd
out
or
cmp
cmp
imul
mov
test
pop
cltd
xchg
push
je
and
sbb
shll
pop
xchg
inc
sub
vpaddd
cli
shlb
nop
inc
lcall
dec
loopne
mov
mov
ljmp
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
je
dec
mov
push
adc
adc
dec
call
pop
jmp
addb
cs
maskmovq
imull
mov
and
jno
mov
xchg
adc
mov
mov
adc
sahf
mov
sti
mov
or
xchg
mov
mov
pop
mov
adc
mov
add
repnz
ffreep
sbb
adc
jmp
stos
cltd
test
aaa
jno
cwtl
and
cmp
test
cli
mov
jo
pushl
xchg
aas
cli
pop
mov
or
sbbl
add
shrb
repnz
pushl
xchg
maxps
xchg
sarb
leave
lods
repz
dec
xlat
xchg
stos
dec
xchg
add
and
adc
inc
lods
mov
sub
lcall
ret
imul
out
stos
mov
xor
push
repz
lret
and
loope
rolb
push
out
pop
xor
and
js
mov
jmp
lods
pusha
es
movsl
aad
sbbl
cs
mov
mov
addr16
xor
jge
rcl
mov
pop
loopne
mov
jmp
sbb
jns
mov
pop
xchg
cwtl
popf
dec
rcll
mov
mov
insl
cmpb
imul
lcall
jae
mov
sub
rcl
pusha
movsl
into
mov
sbb
scas
jns
sbb
adcb
xor
dec
repnz
loope
xor
stos
push
mov
and
das
xchg
jp
push
insb
shrl
mov
outsl
dec
lods
or
sbb
sbb
adc
jg
adc
xchg
push
mov
sub
loopne
cwtl
mov
add
scas
pusha
sub
repz
push
shrl
in
clc
xor
pusha
in
and
sub
push
test
movsb
pusha
mov
inc
cmc
dec
subb
mov
jle
mov
jno
dec
lret
push
icebp
jge
or
roll
dec
es
ret
pushf
push
push
hlt
add
pop
mov
mov
inc
xchg
test
mov
sbb
add
inc
dec
scas
mov
insl
mov
sbb
fwait
push
rcll
sbb
jg
dec
out
cltd
push
bound
sbb
jge
hlt
insl
les
js
adc
xchg
adc
insl
out
test
push
les
pop
loop
or
scas
or
inc
repnz
in
cli
icebp
mov
maskmovq
mov
push
movsb
icebp
aad
sub
push
lock
cmpsl
and
insl
clc
add
fcoml
push
cld
stc
mov
rcr
push
jb
mov
push
idivb
aad
dec
jo
negb
je
adc
inc
dec
push
aad
sub
test
xchg
inc
cmc
jnp
pop
test
scas
dec
jne
push
push
cmp
sar
in
inc
daa
adc
sbb
lahf
arpl
jb
jae
imul
and
inc
cmp
test
testb
fbld
lods
cltd
lahf
adc
dec
add
and
stos
or
mov
jno
mov
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
mov
ljmp
push
adc
adc
pop
sbb
cs
js
dec
push
cmp
sbb
movsb
loop
test
call
loop
sbb
jg
inc
out
xchg
lret
movl
inc
sar
push
adc
mov
jl
dec
xchg
sbb
pop
inc
aaa
shlb
mov
arpl
lret
imul
pshufw
pop
stos
push
cwtl
repz
outsl
hlt
cmpl
jp
push
or
fwait
fwait
mov
lahf
dec
lret
inc
pop
and
leave
cmp
addr16
xlat
nop
push
cmp
pop
cmpsl
push
out
out
outsl
fwait
subl
pop
jge
fsubr
and
push
add
adc
in
aaa
mov
jo
loop
loop
mov
jno
or
jo
ror
pop
mov
cmp
cwtl
les
push
mov
daa
add
inc
pusha
cmp
scas
ljmp
xchg
xchg
push
add
jno
je
daa
inc
sub
adc
xchg
addw
repnz
cli
cltd
es
push
jle
jle
jb
cli
inc
mov
xchg
push
add
int3
flds
lret
pop
mov
in
das
out
cmp
inc
mov
out
jl
adc
shll
or
aam
loope
imul
pop
call
repz
jbe
sbb
jg
test
jne
loop
mov
adc
jp
mov
loope
in
shr
sbb
add
imul
jne
or
and
xchg
xor
das
cs
add
popa
add
mov
or
clc
rcr
cmc
and
dec
or
mov
popa
test
incl
les
imul
fsts
popf
push
inc
mov
cmp
call
fcmovbe
pop
push
push
add
xchg
mov
lock
test
mov
movsb
mov
fwait
pop
push
aas
pop
negb
adc
iret
iret
mov
in
bound
stos
add
into
cmc
out
cmp
xchg
loop
cmp
aas
les
add
ss
mov
cmp
xor
std
xchg
rorb
out
xor
dec
pop
jl
fcmovnbe
dec
daa
test
inc
jns
mov
imul
repnz
adc
inc
xor
lcall
sti
sbb
add
xor
jle
push
cmpsb
stos
jne
push
jnp
jg
aas
xor
scas
push
dec
outsl
push
xchg
cmp
dec
scas
fisttpl
stos
push
mov
les
rorl
stc
push
add
push
repz
out
popf
test
std
and
add
lcall
pop
mov
push
inc
ss
addl
push
pop
cs
daa
movsl
pop
mov
push
sbb
adc
js
cmpsl
mov
sub
stos
data16
aaa
dec
add
jbe
nopl
stos
aam
out
add
movsb
bound
or
xor
xchg
mov
sbb
adc
repnz
ret
or
pop
ret
call
and
lahf
pop
sub
push
pop
sbb
push
repz
xchg
push
mov
call
mov
jno
xchg
adc
sub
ljmp
mov
add
jmp
insb
ror
shlb
insb
daa
ret
mov
fwait
pop
test
std
xor
adc
adc
adc
dec
mov
push
mov
cmp
negb
cmp
call
int
dec
push
xlat
movsb
sub
stc
mov
fwait
mov
jle
into
into
pushf
enter
dec
sub
pop
pusha
rclb
xchg
loope
mov
mov
xor
and
xchg
fwait
xlat
xor
mov
cmpsl
enter
xor
rclb
and
jns
in
sub
ljmp
das
shrl
lds
adc
ret
pop
mov
xchg
add
inc
sub
popf
push
in
fldenv
movsb
sbb
aad
ja
aad
dec
xor
and
leave
aad
test
lods
jl
mov
adc
roll
xchg
std
fistps
sahf
push
push
bnd
insl
mov
cmp
push
test
sti
push
ret
add
roll
cwtl
call
pop
pop
lods
sbb
shl
testl
in
lods
fsubs
cmp
test
add
jns
fcoms
pop
jbe
cmp
js
lea
or
rcrb
addb
inc
and
or
mov
cmpsl
repnz
rorl
insb
addr16
or
mov
clc
jp
push
shll
js
cmp
xchg
outsl
push
je
cld
cs
into
push
mull
jge
add
lds
scas
aad
icebp
dec
mov
pop
push
xor
jecxz
push
sbb
pop
ss
leave
test
pop
push
rcll
mov
cli
jecxz
int
fldl
popa
inc
add
pushf
loope
jne
pop
outsb
mov
cmp
ret
dec
loop
add
push
movsb
push
enter
mov
insb
lds
xchg
lds
cmp
icebp
popa
ljmp
push
xlat
lods
dec
jge
push
adc
push
sub
cmp
out
testl
cmp
stos
or
cmp
mov
inc
jo
ret
jb
jae
loopne
fistl
mov
jl
ss
frstor
ds
xlat
test
sub
bound
loop
rcll
and
movsl
pop
adc
cmp
push
xlat
jmp
push
incb
jns
es
cmc
aad
fs
bound
mov
mov
sahf
sub
pop
popa
pop
les
shr
outsl
lahf
cmp
jne
call
bound
aam
shlb
adc
jg
into
xchg
pop
outsb
xor
inc
loopne
mull
push
xor
jmp
add
push
mov
insl
sbb
xchg
outsb
mov
shlb
and
and
stos
push
xchg
int
mov
push
push
lcall
mov
jo
aad
mov
sub
sub
and
cld
movsb
shll
and
pusha
in
shll
iret
jecxz
dec
es
jns
adc
mov
dec
js
lock
aad
hlt
enter
das
ficomps
jg
inc
mov
sub
insb
xlat
pushf
in
mov
lods
cli
mov
pop
hlt
fsubs
das
ja
mov
movsl
adc
arpl
or
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
cmp
gs
test
leave
sub
adc
fisttpll
aam
mov
arpl
or
pop
sbb
lods
cmp
push
mov
xchg
ss
jnp
enter
xor
ss
repz
jmp
add
in
pop
stos
ret
rcl
ret
mov
cmp
aam
or
ja
jns
in
mov
add
rcr
stc
enter
adc
lods
jne
movl
jbe
push
jecxz
mov
cmpsb
sbb
adc
jnp
nop
sub
stos
test
pop
add
mov
dec
ljmp
and
lret
hlt
sub
jne
jp
enter
mov
fstpl
cmpsl
add
mov
sbb
pop
adc
dec
pop
jne
mov
pop
sbb
fistps
sbb
fldcw
mov
cwtl
cmpsb
cwtl
out
fisttps
add
jp
stos
xchg
push
add
pop
pop
fldt
push
mov
or
push
dec
and
repz
jae
cmpsl
sub
inc
cli
jne
sub
mov
loope
lea
nop
mov
mov
adc
or
adc
push
cli
sbb
popf
stos
jmp
jl
js
leave
fnstenv
push
js
fnsave
push
cld
shl
or
inc
stos
shrl
sbb
cwtl
xchg
arpl
inc
arpl
push
xchg
fiadds
hlt
dec
pop
sub
sbb
data16
pop
mov
lret
jmp
inc
push
stc
xor
movsl
xchg
inc
mov
insb
cmp
aaa
aam
roll
clc
inc
dec
cwtl
movsb
xor
lods
sbb
or
jp
or
clc
mov
sub
iret
push
test
dec
loop
mov
adc
repnz
hlt
cmp
in
insb
div
mov
push
mulb
cmp
sub
data16
dec
das
or
jp
lcall
jl
xchg
dec
cmp
movsb
inc
jmp
mov
add
movsl
mov
adc
xchg
popa
mov
enter
cmc
outsl
in
es
icebp
xchg
int3
adc
ljmp
aam
and
sub
scas
and
sbb
pop
mov
into
insl
shll
out
into
lret
test
inc
aas
andl
dec
cmp
jg
insb
xor
repnz
into
cli
inc
jo
in
ss
adc
adc
add
fsubr
nop
outsl
cli
shl
test
lahf
pop
push
mov
je
cmc
sahf
inc
xchg
adc
pop
std
cmpsl
divb
push
xorl
mov
ret
inc
cltd
cld
divb
dec
lcall
dec
aad
fsts
aas
popf
faddl
add
les
or
lock
sub
jp
mov
sbb
cs
and
mov
movsl
add
lea
xchg
pop
jbe
in
mov
stos
pop
mov
dec
xchg
xchg
movsb
aas
shl
test
imul
mov
cmc
rcr
push
mov
pop
pop
inc
int3
aad
test
dec
mov
dec
sbb
cli
adc
push
or
fcmovne
js
mov
push
imul
cwtl
sarb
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
pop
pusha
js
adc
push
adc
adc
inc
fstp
mov
adc
and
and
sub
xchg
test
jmp
cltd
sub
pop
xchg
popa
pushf
and
rcr
pop
xor
insl
pop
add
xchg
fucomp
adc
out
movsl
cmpb
and
bound
jno
mov
lock
es
xsha1
cmpsb
int3
cmpsw
xchg
add
lahf
enter
xchg
iret
mov
sbb
inc
cmp
push
inc
aas
mov
lock
xchg
and
mov
ret
jo
push
je
cmp
or
pop
dec
jb
test
jno
add
xchg
arpl
mov
mov
inc
xchg
popf
daa
cmp
lods
in
addr16
adc
sub
inc
sub
loope
add
sahf
mov
pop
pop
fs
fisubl
test
and
jo
xchg
clc
push
mov
xor
fbld
add
xchg
call
or
mov
xchg
mov
loop
lods
cs
cmp
push
xchg
and
push
aam
cmp
les
shll
cmp
mov
or
ss
jp
mov
adc
or
pop
js
xchg
pop
push
mov
cmp
mov
pop
push
icebp
jl
sahf
mov
imul
cmp
pop
inc
push
adc
and
push
sub
call
cmp
lcall
xchg
fcom
pop
mov
pop
js
adc
ds
idivb
add
jle
jbe
pop
dec
mov
mov
cmp
inc
add
sbb
jns
mov
cwtl
gs
in
test
dec
sbb
test
jo
dec
loopne
outsl
or
sbb
or
mov
push
ljmp
lret
cwtl
js
mov
xchg
cmc
fptan
andl
outsl
loop
push
fdivrs
cmpsl
shrb
xor
pop
and
lock
mov
xor
dec
xor
cmp
insb
add
insb
pop
sbb
test
dec
pop
and
pop
cmp
pop
call
pop
pop
xlat
mov
xchg
add
out
sbb
js
dec
pop
sbb
jg
scas
mov
cmp
insl
ficoms
out
push
jnp
enter
xchg
icebp
call
call
xchg
ss
mov
daa
xchg
jo
mov
sarl
mov
repz
lahf
push
mov
xlat
lahf
dec
mov
add
mov
loop
je
cmpsl
or
dec
dec
or
inc
pop
adc
out
sub
push
into
pop
push
mov
xor
cli
cmp
jbe
pusha
and
inc
xchg
fs
call
or
push
add
shll
outsb
jle
inc
mov
sbb
jbe
mov
cmp
mov
les
std
mov
xchg
sub
pusha
inc
push
mov
cmc
or
adc
cwtl
hlt
loopne
shr
stos
sub
cmpsl
loopne
incl
leave
loop
ss
add
mov
sub
jg
outsl
jb
jmp
scas
xor
push
and
jae
fdivl
xchg
sti
movsl
xchg
ss
sub
shl
xchg
or
ljmp
cmpsl
mov
add
jb
xchg
stos
aam
inc
xchg
mov
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
jle
sbb
adc
movlps
pop
aas
out
aad
add
or
jae
scas
jecxz
decb
loope
sbb
ss
jmp
sbb
xlat
shl
jle
sbb
sti
xchg
scas
frstor
and
js
cmc
or
mov
add
sub
sbb
ret
add
stos
rcr
xchg
mov
iret
sbb
js
das
or
or
cmpl
mov
jmp
xchg
jle
pop
scas
out
arpl
test
sti
jg
or
idivb
sub
aaa
xchg
push
sub
mov
mov
in
add
into
les
rolb
dec
inc
je
testb
jo
pop
in
sbb
aas
add
jmp
pop
int
pusha
xor
adc
mov
inc
imul
dec
push
lods
add
xor
jmp
shl
popa
pop
test
push
mov
xor
sahf
sbb
cld
imul
cs
pop
fistl
aas
lret
push
out
test
mov
cmpsl
mov
mov
and
daa
dec
adc
nop
mov
cs
lods
es
dec
fisttpll
stos
push
inc
fbld
in
pop
xor
mov
cmp
lahf
idivb
inc
fwait
outsb
pusha
sbb
sub
subl
xchg
mov
loope
jne
jae
aam
adc
data16
cmp
lea
xor
lods
stc
stos
dec
mov
cmp
mov
int
mov
fnsave
xlat
push
testl
jbe
sahf
orb
lea
arpl
adc
jbe
fadds
add
aas
scas
sub
in
and
xor
test
rcll
lcall
ljmp
sbb
test
pop
sbb
pop
stos
rorl
int3
xor
test
aas
andl
mov
je
xlat
adc
inc
mov
jp
pop
push
pop
or
popf
pop
pusha
jmp
xor
ret
mov
jb
mov
pop
shrl
cs
mov
lds
repnz
nop
and
lcall
mov
fsubl
sbb
jbe
pop
push
adc
mov
testl
sbb
test
or
lahf
inc
jecxz
xorps
push
inc
xchg
pop
push
daa
ljmp
push
imul
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
push
push
push
sbb
adc
movlps
sub
sub
ficompl
sbb
mov
mov
push
dec
jmp
cmpsl
into
xchg
xchg
mov
stc
xor
pop
push
mov
and
add
lahf
addr16
sbb
pop
xchg
dec
mov
dec
pop
lea
mov
dec
ficompl
push
push
loopne
xlat
cmp
pop
jne
xor
fwait
jl
leave
jns
adc
mov
xor
push
imul
cltd
rcll
test
xor
pop
mov
dec
jg
push
dec
cmp
adc
push
arpl
mov
pop
andl
lds
aaa
pop
je
add
xor
jb
movsl
xchg
subl
ljmp
mov
out
dec
sub
and
call
fnstsw
cmp
pop
not
jns
js
rorl
add
fnstsw
inc
jns
arpl
lret
mov
lret
and
jge
aaa
stos
das
or
push
daa
inc
rol
xchg
out
add
int3
mov
sbb
dec
call
ret
imul
or
lret
sahf
sbb
andb
ficoml
push
loop
clc
enter
sbb
or
jl
adc
arpl
movsl
imulb
jo
into
ret
fwait
scas
enter
out
nop
mov
inc
jns
add
mov
addr16
in
icebp
or
jne
loope
ret
in
call
ja
insb
inc
in
inc
stos
leave
push
test
stos
jle
add
mov
jmp
ret
sbb
jge
xchg
xor
jmp
outsb
mov
push
cmc
push
sub
iret
push
loope
xchg
adc
maskmovq
testl
mov
test
inc
daa
shrb
hlt
mov
jge
subl
in
aaa
xchg
dec
in
dec
in
pop
jno
mov
lods
add
outsb
jecxz
fabs
push
add
imul
pusha
lods
inc
jmp
testb
daa
lret
fnsave
out
test
movsl
inc
inc
pop
fadd
push
push
xchg
push
cmp
daa
filds
shrb
mov
fsubrl
in
imul
push
cmp
dec
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
xchg
scas
insb
push
adc
decb
adc
mov
xor
inc
add
adc
call
into
aad
inc
jb
or
les
jg
js
lret
nop
cmp
daa
cmpsl
clc
sbb
sbb
mov
adc
inc
int3
gs
out
sbb
pop
push
and
lea
sbb
lock
or
mov
cmpl
mov
mov
xor
mov
je
fsubrl
pop
test
repnz
mov
fmul
inc
cmp
ret
xchg
icebp
repnz
or
add
dec
lock
leave
inc
aam
les
int
repnz
mov
pop
sbb
adc
jno
sub
jbe
adcl
xor
js
jne
out
std
mov
sbb
push
rorl
inc
and
dec
daa
data16
fnstcw
pop
mov
mov
dec
test
lret
sub
test
jp
inc
imul
mov
sbb
negl
testl
outsb
pop
hlt
sub
or
mov
push
notb
pop
rcrl
jle
les
call
jecxz
mov
mov
out
mov
cmovo
pop
xor
sub
cmc
push
movsb
dec
xor
add
add
xor
insl
or
pop
mov
and
ficoml
mov
rcl
add
push
std
mov
push
dec
dec
daa
cwtl
std
loop
sbb
mov
mov
shl
cld
and
add
pop
dec
mov
popf
ror
cmc
jmp
loope
movsb
add
cmp
leave
mov
adc
mov
in
outsl
jb
fnstcw
cli
dec
jp
popa
mov
lods
dec
je
push
outsl
fcmovnu
pushl
or
pop
jnp
or
push
sbb
stos
sub
es
fistpll
sub
lret
cs
fs
popf
mov
sub
cs
scas
and
in
jp
push
les
in
adc
ss
xor
mov
push
sti
pop
xchg
xchg
movsl
test
cmp
shll
adcb
push
and
neg
test
mov
xor
cs
xchg
stos
ret
adc
cmc
fldt
popl
add
xchg
bound
test
int3
mov
jno
xchg
inc
fdivrs
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
pop
cld
xor
jp
adc
decb
adc
sub
cmp
pop
mov
jae
jle
xor
mov
aad
sbb
mov
sarl
xor
fdiv
xor
mov
in
xchg
pop
sub
adc
xchg
mov
mov
inc
mov
incb
jae
mov
sti
vpor
mov
into
fstl
test
xchg
mov
aas
xor
incl
push
sbb
pop
aaa
les
je
mov
cmp
or
xchg
xor
adc
mov
mov
cmpsl
insb
popa
dec
js
iret
cwtl
jle
dec
xchg
sbb
inc
or
addb
sbb
test
dec
lods
add
dec
xor
xchg
adc
mov
fs
cmp
mul
mov
out
popl
mov
dec
or
and
mov
sub
rcrl
sbb
imul
xchg
inc
xor
dec
pop
mov
mov
lret
dec
cld
sbb
in
adc
mov
sbb
mov
loope
pusha
test
cmpsl
mov
add
out
sub
pop
lods
pop
adc
push
inc
cmp
adc
imul
add
sarl
or
fldenv
iret
imul
jno
lock
loope
loop
mov
jecxz
inc
repnz
jbe
dec
sub
mov
popa
push
mov
push
sbb
adc
mov
hlt
lret
and
dec
and
popa
mov
xor
mov
mov
push
test
adc
stos
adc
mov
out
cs
sbb
push
in
lods
xchg
xchg
push
fnstenv
pop
mov
adc
popa
loopne
adcl
mov
pop
insl
xor
into
pop
add
sbb
popa
xchg
cmc
cmp
loope
mov
dec
loop
or
dec
push
comiss
jecxz
fidivs
arpl
cwtl
push
sub
xor
test
adc
xchg
sub
test
xchg
jecxz
xchg
popf
jmp
mov
xor
push
cmc
push
jbe
in
bound
std
aam
gs
sbb
inc
out
pop
push
pop
mov
in
gs
push
dec
mov
adc
imul
push
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
scas
push
add
decb
adc
push
pop
ret
pop
mov
mov
and
mov
mov
pop
mov
xor
mov
mov
dec
lods
jmp
repz
lea
pushf
sarl
loope
mov
subl
jle
pop
repz
mov
xor
dec
inc
inc
jno
mov
adc
popf
inc
push
cmp
mov
lcall
mov
xchg
int3
dec
push
cmp
loopne
shll
push
xchg
leave
inc
andb
jmp
fwait
pusha
mov
ljmp
dec
mov
loopne
or
mov
mov
sub
in
cmp
out
cmpl
call
and
push
pop
in
jb
fnstenv
dec
inc
add
incl
cli
inc
lods
mov
pop
xchg
mov
cmp
jb
jne
cmc
pop
es
adc
push
sub
shrb
cmc
add
push
cmp
or
sbb
adc
push
mov
shlb
or
push
addl
fwait
js
or
mov
dec
adc
sbb
repz
jno
data16
mov
sbb
cmp
add
xor
movsl
cmpsl
mov
ds
andb
aad
mov
mov
dec
cmc
jo
lret
fsts
add
sbb
push
rorl
dec
inc
dec
fiaddl
mov
or
add
repz
or
sbb
xlat
push
sbbb
testb
stc
std
xchg
ja
int
call
loopne
and
mov
std
aam
inc
mov
mov
test
cmp
loop
lds
fucomp
inc
jns
dec
or
push
mov
xchg
jae
into
test
or
int3
ss
nop
xor
stc
or
push
pop
test
les
je
sbb
push
fildll
pusha
out
xchg
jecxz
cmp
adc
or
jg
pop
lret
shll
and
icebp
xor
or
mov
repnz
or
sti
mov
sbb
pusha
pop
enter
mov
shlb
xchg
mov
sti
mov
sbb
pop
fsts
es
sbb
shl
sub
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
adc
loopne
jae
sub
stc
add
push
push
and
push
inc
aad
inc
push
jne
dec
clc
stc
or
call
dec
cmp
in
loop
and
ljmp
jae
mov
pop
adc
mov
sub
fimull
icebp
cmp
mov
add
popa
rorl
mov
test
in
mov
jns
add
movsb
mov
jnp
push
mov
xsha1
cmpsb
mov
mov
mov
cltd
cmp
jmp
leave
call
negl
jno
xor
test
mov
insl
or
sub
sub
add
sbb
pop
fiaddl
fwait
in
dec
data16
fmulp
mov
dec
cmp
add
in
xchg
rorl
insb
addl
pop
push
xchg
or
jle
mov
inc
sub
loope
lret
mov
sub
push
mov
lahf
push
insl
fbld
jecxz
lods
loop
jecxz
sub
inc
mov
sub
ljmp
in
iret
pop
fldcw
mov
rcr
push
cmp
repz
mov
hlt
adc
sbb
sub
test
fildll
bound
push
outsl
sbb
fcoml
std
cs
cmp
mov
or
jge
rcl
mov
mov
add
xlat
xor
xor
cmpsl
sbb
into
pop
mov
jl
push
sbb
sbb
xor
aaa
dec
mov
pop
adc
ljmp
adc
sub
cmp
mov
jns
repnz
mov
mov
dec
flds
sub
stc
mov
jo
sub
data16
adc
jb
xor
daa
call
repnz
push
ja
xchg
adc
jecxz
nop
push
mov
shll
xchg
mov
adc
lret
push
mov
mov
sbb
mov
jne
mov
dec
cmp
out
les
aaa
lods
sti
jg
rcll
hlt
jb
inc
lcall
movsl
push
mov
add
data16
aas
xchg
cwtl
push
das
outsl
popf
mov
sbb
xor
mov
fidivl
pop
scas
mov
inc
scas
into
inc
lods
mul
lds
fcmovu
shrb
and
sti
jb
push
mov
das
lret
movsb
dec
cmp
jb
jns
jbe
int
mov
outsl
adc
add
cld
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
sar
insb
add
movlps
stos
iret
mov
je
fdivrl
add
jns
xchg
mov
rdseed
cld
cwtl
test
sub
repz
add
jle
outsb
xchg
mov
mov
in
inc
jmp
in
cld
xchg
in
pop
pop
cmp
mov
sbb
mov
addr16
jg
ljmp
es
inc
pusha
pop
and
icebp
push
sbb
jne
test
out
repnz
aad
push
jl
sbb
xchg
sub
add
sti
mov
or
and
pop
fldenv
mov
pop
les
sbb
incl
fnstcw
or
push
and
leave
loop
jns
repnz
xorl
jns
insl
in
inc
fwait
jne
sub
jb
aam
pop
adc
or
scas
das
add
xchg
in
ds
add
scas
rorl
and
and
gs
imul
sbb
mov
cmpsb
pop
lret
negl
bound
push
out
gs
in
push
or
iret
xchg
mov
fcomps
dec
lods
pop
push
int3
cmp
sub
addr16
push
mov
mov
xchg
add
or
pop
mov
mov
jecxz
fwait
mov
jg
je
xor
dec
jecxz
jbe
cmp
lock
lock
negb
outsl
mov
icebp
in
jecxz
sarb
xorl
ljmp
mov
scas
stos
jns
push
xchg
test
adc
fisubrl
iret
or
xor
adc
lret
or
in
shrb
sarb
fnstsw
xchg
mov
pop
movl
add
iret
or
repz
inc
inc
jp
xchg
mov
lahf
lods
pop
xchg
mov
cs
push
xor
in
pop
mov
add
adc
pop
push
push
aas
ja
sarb
popf
sub
push
adc
sub
xor
mov
test
ljmp
dec
jecxz
adc
loopne
arpl
movl
ret
cmp
sub
jno
lods
mov
mov
rcl
jp
in
xlat
aas
cmp
or
xchg
int3
push
loopne
es
outsb
pushf
jmp
sahf
inc
sbb
inc
cmpsl
push
lods
jnp
pop
jle
push
xor
mov
rclb
jo
ljmp
mov
lods
mov
fisubrl
sub
pop
jmp
xchg
insb
inc
cmp
ljmp
loop
inc
lods
stos
stos
cld
in
shll
bnd
cmp
xor
popf
and
fdiv
stc
dec
xor
test
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
mov
adc
popa
movlps
clc
xchg
pushl
mov
enter
fwait
mov
lods
addr16
pop
inc
insl
inc
les
sub
xchg
cmp
into
cmpsl
outsl
push
push
shl
scas
mov
inc
rcll
pop
push
int
or
mov
add
xchg
sub
mov
and
mov
add
mov
sub
jno
cmc
pop
cmp
dec
mov
scas
dec
xor
jo
test
push
and
cltd
and
pop
xor
xor
jp
adc
test
aaa
sbb
pushf
imul
jecxz
pop
sahf
shl
mov
addr16
xchg
clc
or
mov
xchg
mov
sub
push
inc
fs
cwtl
cmp
std
bound
xchg
es
popf
enter
mov
call
inc
push
cltd
cmpsb
mov
jg
jnp
ret
lds
pop
mov
inc
loopne
jle
repz
stc
jmp
and
jno
mov
jae
jns
orb
mov
addr16
pop
jo
xor
sub
pop
cmpsl
roll
ret
xor
in
sti
arpl
cmpsl
adc
jge
sar
pusha
mov
and
bound
int
xor
mov
in
adc
pop
sbb
inc
sbb
mov
sub
xchg
pop
cmp
out
cmc
push
aas
and
dec
stc
mov
cmp
inc
mov
pop
int
and
add
in
cld
mov
lds
in
mov
xchg
inc
lea
lea
push
mov
sub
rolb
les
cld
push
rorb
push
pop
lcall
pushl
jmp
pop
lea
pop
xchg
cs
pop
or
sbb
shl
js
mov
xlat
mov
pop
push
ret
adc
xchg
out
adc
fistpl
mov
mov
clc
nop
clc
jg
mov
push
inc
pop
ror
mov
inc
pop
jne
jg
loop
test
adc
leave
xchg
xchg
dec
dec
xchg
imul
mov
hlt
cmp
dec
or
mov
push
jl
aam
pop
decb
jecxz
mov
inc
mov
in
xor
push
scas
push
dec
scas
inc
sub
xor
mov
or
rcr
fimull
lock
ds
pop
xchg
dec
pop
xchg
and
sub
sahf
ljmp
sub
fldenv
icebp
or
div
roll
push
out
push
fs
stos
xchg
push
push
xlat
dec
or
pop
adc
ds
sub
out
xchg
int3
pushf
scas
add
movzwl
mov
jnp
sub
sub
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
in
arpl
cltd
notb
adc
adc
ja
xor
xchg
scas
data16
fidivrl
in
push
push
fiadds
pop
jp
mov
pop
mov
or
xor
or
push
jns
xor
int3
and
lahf
lds
gs
icebp
into
inc
in
mov
jmp
ret
mov
loopne
rorb
insl
stc
fs
xlat
bound
adc
inc
sub
jb
mov
repnz
inc
mov
xchg
dec
dec
dec
mov
sti
xchg
pushf
jb
push
mov
mov
inc
jae
outsl
in
out
jae
popa
add
xchg
adc
pop
mov
jns
inc
out
imul
mov
sbb
mov
add
test
pop
ret
mov
push
mov
adc
lds
xor
pop
js
sti
aaa
sub
fsubrs
mov
andl
xor
sti
aad
add
cmpsl
mov
ljmp
and
jne
adc
fwait
xchg
rorl
xchg
mov
out
add
shll
add
push
fnstsw
in
or
xor
sbb
cmp
inc
or
pusha
pop
cmpsb
xor
push
lahf
int
mov
inc
sub
push
cwtl
pop
lods
insl
mov
pop
or
sarb
adc
cmpsl
or
sbb
xor
out
divl
sbb
out
test
mov
stos
pop
mov
cld
rol
and
mov
xchg
jl
jp
xchg
cld
mov
push
in
nop
insl
loop
out
hlt
jb
cltd
dec
sbb
add
xchg
mov
int
add
jmp
lea
test
out
sub
test
sarl
jl
pop
mov
cmpsb
imul
and
push
cwtl
repz
push
jnp
xor
jecxz
xchg
pop
or
add
out
sub
xor
and
ljmp
fisttpll
insl
xor
dec
repnz
sbb
jg
adc
xchg
push
pop
mov
aas
mov
pop
mov
fistl
mov
in
arpl
lods
test
icebp
pop
or
push
pop
lret
pop
les
lcall
andl
fnsave
xchg
adc
xchg
and
xchg
push
jno
bound
aaa
mov
mov
xchg
xchg
fwait
cmp
mov
push
repnz
movsl
mov
push
mov
xchg
sbb
sti
std
loope
push
popl
insl
xchg
mov
mov
push
cld
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
or
adc
popa
movlps
cli
pop
jnp
repz
insl
lcall
adc
dec
dec
xchg
mov
sbb
stos
push
out
pop
cmp
ja
sub
out
repnz
sbb
adc
push
xchg
and
xchg
lcall
loope
xchg
or
cmp
xor
sbb
js
push
inc
adc
sub
pop
dec
mov
jae
in
cltd
test
cs
push
xorb
jmp
cmc
or
ret
stc
nop
test
mov
ljmp
ljmp
movsl
rcrb
dec
stos
dec
cld
mov
std
dec
and
lahf
in
mov
ud0
aas
stos
es
pop
lret
or
and
mov
test
dec
loope
jnp
cmc
mov
cmp
jl
xchg
jno
dec
and
push
mov
pushf
mov
mov
daa
sahf
pop
jecxz
out
pop
adc
fistpl
jg
jne
sbb
test
inc
movsl
faddl
fmull
cmp
movsl
push
push
cmp
pop
add
ja
adc
adc
cmp
push
jne
inc
inc
jae
dec
jne
mov
push
inc
rolb
adc
mov
stc
ficoml
ss
insl
std
mov
jle
xor
imul
dec
xchg
inc
in
stc
inc
sbb
mov
pop
lret
call
insb
dec
and
jmp
imul
insl
cmc
divb
cmp
mov
mov
pop
hlt
arpl
jbe
xchg
outsl
push
inc
jmp
push
pop
out
xor
test
inc
inc
jno
sbbl
loopne
imul
in
cmp
inc
push
arpl
lods
cmp
mov
jp
add
mov
aas
lods
nop
insl
and
push
push
xor
incl
enter
jne
push
les
and
sub
xor
push
aas
popf
call
pop
jg
adc
test
cmpsl
push
push
test
jg
incl
mov
add
fwait
xchg
pop
mov
movsb
pop
into
jge
ss
jns
aam
xchg
repz
arpl
inc
lret
fcmovbe
js
loope
push
test
push
test
dec
sahf
mov
pop
pop
movsl
flds
mov
testl
cmp
ficomps
cmp
pop
mov
jns
aam
sbb
sbb
push
iret
and
daa
into
cltd
lret
push
dec
push
lret
pop
ss
insb
xchg
cwtl
lret
sub
addr16
shl
cmpsl
sub
inc
pop
sub
inc
adc
add
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
mov
cmp
jmp
adc
lret
out
rcll
jbe
call
aas
inc
cmc
data16
dec
mov
sub
sbb
sub
pop
mov
dec
aaa
aaa
inc
add
subl
add
pop
or
stos
scas
lock
gs
jp
dec
femms
jae
sbb
add
dec
add
jbe
leave
dec
adc
xor
jo
lcall
nop
add
sbb
fwait
jge
pop
mov
clc
mov
push
mov
mov
cmp
pop
jmp
add
adc
es
cli
sub
xlat
xchg
aad
mov
cmp
xchg
clc
movsb
sub
rcrb
enter
shl
cmp
and
or
ss
adc
sub
dec
xor
insl
sbbb
cmp
mov
ret
push
fwait
into
xchg
mov
shl
rorb
xchg
outsl
or
ja
mov
dec
or
ror
loopne
xchg
xor
push
sahf
es
jno
bound
cli
or
mov
sbb
add
loope
sub
or
aam
inc
pop
adc
in
dec
jns
popf
push
dec
inc
inc
inc
pusha
and
dec
test
loopne
inc
adc
pop
cmp
xchg
mov
insl
movl
hlt
xchg
les
xor
push
shr
movsb
stc
out
rcr
cs
cmp
icebp
cmc
cmc
scas
repz
cmp
daa
sub
shrl
xchg
push
insl
loope
sbbl
clc
mov
jge
sbb
adc
and
cmp
inc
das
cmp
adc
int3
stc
cwtl
rcrl
xor
leave
xor
popa
mov
fs
std
mov
lods
pop
insb
adc
lahf
adc
enter
mov
gs
jo
push
or
repnz
cli
and
jle
xor
test
inc
mov
pop
scas
test
js
xchg
xchg
xor
lock
jne
mov
sbb
aad
push
js
push
cli
xchg
mov
or
mov
es
xor
mov
mov
inc
jl
xchg
mov
sbb
insl
out
push
push
mov
push
jbe
movsl
scas
and
test
cmpsb
cltd
ljmp
fcmovb
and
incb
out
mov
ljmp
dec
push
ss
popa
ficompl
mov
sbb
gs
idivl
divb
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
push
pusha
js
fists
adc
inc
je
imul
lods
sub
scas
pop
ja
mov
ljmp
dec
dec
hlt
dec
nop
scas
or
cld
add
jecxz
lret
mov
lods
xor
mov
mov
insl
lahf
fcmovnbe
pop
pushf
jnp
mov
lock
xlat
mov
popf
jae
adcl
jg
std
pop
lock
shll
sub
add
add
cmp
repnz
push
stos
lahf
jp
inc
fidivs
repnz
adc
or
sti
cmp
dec
xchg
cmp
out
dec
mov
std
popf
or
dec
mov
adcb
push
dec
or
pop
cmpsl
mov
mov
ljmp
arpl
mov
sbb
pop
repz
and
xchg
shll
fcoml
dec
sbb
paddq
mov
sub
dec
lock
jl
fs
cld
test
and
arpl
cmp
out
mov
scas
and
rcrb
pop
and
mov
push
mov
cmpsl
test
je
fistps
es
inc
pop
cmp
out
xor
stos
xchg
sub
inc
jge
cmp
aaa
mov
adc
aad
mov
outsb
jg
arpl
push
cli
icebp
stos
arpl
push
gs
jae
dec
sarl
lea
sbb
adc
xorb
sti
aas
xor
cmc
or
ret
sub
aas
cmpl
shrl
xor
push
mov
daa
fisubrl
mov
movsl
aaa
outsl
ficoms
jp
mov
sbb
sbb
ss
inc
pop
sub
in
push
je
repnz
mov
push
call
cltd
jmp
std
cld
dec
orl
outsb
leave
mov
sbb
sub
cmp
mulb
add
fs
jne
mull
cltd
push
fmuls
outsb
or
in
idivl
add
ja
mov
dec
xor
imul
les
imul
sbb
mov
xchg
xor
and
or
lock
pop
jge
and
push
fisubrs
aam
cs
out
hlt
or
addb
iret
xor
daa
loope
jne
cli
cmp
mov
imul
subb
mov
shll
jnp
lods
mov
xchg
out
shl
and
stos
test
fcompl
dec
jle
enter
add
scas
and
lock
or
dec
outsl
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
mov
pop
lret
dec
inc
outsb
jle
or
jecxz
xor
inc
mov
inc
out
icebp
pop
fcoml
aam
or
push
in
test
jl
pop
clc
mov
pop
insb
adc
mov
int3
adc
call
hlt
push
gs
out
jno
aam
cmpl
movb
inc
xor
sarl
leave
in
dec
aam
xlat
push
pop
inc
xchg
and
sarl
ja
fists
daa
add
es
lret
mov
rolb
or
cld
mov
mov
cmc
xchg
adc
filds
outsl
xor
cmp
lock
aam
ja
jl
jle
push
fstl
adc
mov
fdivrl
imul
popf
dec
je
in
arpl
cmp
sti
pop
push
jnp
inc
pop
cmc
std
testb
pop
test
scas
std
fs
scas
int3
sub
aad
loopne
jp
jnp
adc
and
leave
cld
test
rorl
pop
cltd
push
nop
scas
cmc
je
filds
out
sbb
mov
mov
movb
ret
push
adc
enter
sub
cmp
mov
push
outsl
mov
add
add
aad
push
lret
dec
and
sbb
add
mov
jne
test
push
push
test
loop
sub
sbb
jnp
cmp
jge
inc
sbb
scas
out
loope
mov
or
into
addb
cmp
sahf
add
lret
into
stc
fdivrl
ljmp
or
pop
stc
cmp
inc
lock
push
jp
fstps
dec
in
mov
call
or
cmp
push
or
adc
sub
cmp
or
push
fdiv
push
hlt
in
out
xor
fmulp
jns
out
subb
push
cmpsl
sahf
cmc
aas
mov
repnz
lret
test
add
and
mov
rclb
aam
bound
mov
sbb
cmpsl
gs
jb
out
mov
sub
loopne
lds
jbe
pushf
jno
stos
mov
cmc
out
in
push
inc
cli
daa
loop
xchg
sbb
mov
mov
jne
test
inc
cmp
mov
mov
push
push
mov
aaa
cmp
int
iret
ds
jne
pop
into
in
push
inc
push
cmp
push
jne
mov
dec
mov
and
lods
clc
daa
push
rclb
push
xchg
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
fadds
stos
mov
movlps
inc
cwtl
outsb
sbb
aas
out
jge
cmc
pop
fucomi
insl
jge
push
jne
sahf
adc
pop
pop
push
jno
aaa
pop
je
mov
mov
mov
push
lcall
push
outsb
mov
popa
lret
outsl
jmp
or
push
add
dec
inc
xchg
jmp
xor
sub
icebp
push
jno
lock
in
les
mov
lea
xlat
int
test
enter
lock
jne
fidivrs
sub
jecxz
aaa
xlat
push
or
imul
and
xor
je
jmp
stos
imul
mov
js
fcmovnb
mov
or
shrb
push
es
sub
cmovge
pop
push
or
movsl
jl
jg
fbstp
or
push
icebp
out
mov
xor
les
sahf
and
cmp
and
sbb
roll
cmp
mov
pop
pop
adc
xor
mov
inc
js
xchg
dec
adc
sub
lret
aas
cmp
sbb
and
mov
lcall
mov
push
xor
adc
in
cli
jbe
outsb
xchg
lds
in
mov
ss
sbb
in
push
jmp
fstps
mov
sub
push
pop
fwait
aad
scas
add
sbb
or
cmp
xlat
nop
rol
xor
xchg
sbb
jp
push
mov
cmp
ljmp
mov
hlt
mov
mov
mov
mov
mov
xchg
pop
lret
dec
scas
xchg
test
repnz
daa
stos
and
mov
adc
int
mov
adc
insb
inc
adc
jne
loope
mov
dec
inc
dec
js
mov
sbbb
in
push
loopne
scas
vcmpss
std
cmp
fdivrl
jnp
or
lods
mulb
jl
mov
and
jnp
jo
movsl
jle
jbe
hlt
jmp
mov
jmp
jle
lret
jle
imul
pop
popa
or
out
jecxz
push
mov
sbb
mov
pushf
xchg
fistps
popf
jle
mov
out
fmul
sar
mov
inc
adc
jg
shl
sbb
jne
cmp
fwait
outsb
popf
test
ljmp
cs
hlt
sbb
shll
push
add
sub
arpl
mov
ds
cltd
mov
pop
and
in
mov
std
lock
orl
and
jae
mov
mov
xlat
mov
xchg
repz
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
lret
xor
and
cltd
jbe
js
inc
push
add
mov
jg
jae
lods
or
push
nop
mov
or
push
movsl
out
xor
cmp
mov
adc
gs
push
jno
repnz
sub
popl
adc
js
test
add
out
jl
or
and
pop
or
mov
mov
fildll
mov
dec
int
sbb
push
sub
mov
dec
movsl
mov
dec
mov
mov
mov
aad
or
xchg
js
scas
pop
lret
sub
stos
add
add
jbe
dec
xor
pop
mov
lret
cmp
lods
inc
jg
aas
or
repz
push
mov
mov
push
dec
faddl
loop
xchg
add
mov
ljmp
daa
xor
mov
ja
inc
push
cli
mov
dec
scas
inc
outsl
pop
jne
call
je
out
xchg
push
call
inc
or
sbb
loopne
lret
mov
out
xchg
dec
jg
mov
test
or
enter
insl
dec
test
or
mov
inc
data16
mov
int3
sbb
das
insb
je
or
jno
cmp
cld
lds
cmp
arpl
rcrb
xchg
popf
ljmp
es
mov
push
bound
shll
lea
cld
shr
inc
xchg
push
cld
shrb
jmp
dec
add
push
push
jle
cmc
cli
imul
push
fistpl
jo
sbb
sti
mov
scas
push
lret
ret
push
push
out
dec
ds
ret
sub
mov
sub
lock
in
js
ret
dec
cli
mov
mov
popf
pushf
addr16
or
arpl
scas
dec
push
jp
stos
bswap
xchg
dec
cltd
js
aam
push
daa
gs
ljmp
sarl
mov
jg
adc
xlat
lea
je
out
stos
mov
add
adc
mov
lods
pop
sbb
inc
int3
ljmp
xchg
lret
mov
std
insl
add
or
jl
sub
mov
xor
rorb
movsl
ja
shll
cmp
push
mov
mov
xchg
jo
addr16
cmp
sbb
faddp
cmp
push
jne
cmpl
jp
push
test
out
push
inc
pop
scas
mov
inc
jne
xor
push
addr16
jl
dec
aad
imul
inc
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
xchg
mov
mov
movlps
pop
dec
movsb
loop
mov
cmp
and
mov
sbb
stc
pusha
sti
lret
cmpsb
in
imull
inc
scas
pop
cld
addr16
lock
cmpsl
stos
xchg
pop
andb
push
stc
jg
dec
cld
nop
or
test
mov
pop
call
jle
mov
xor
scas
xchg
jbe
imul
jne
xlat
or
ss
loope
mov
cmp
lods
mov
je
or
jg
lock
cwtl
add
mov
and
pop
inc
dec
es
xor
jae
sub
push
xor
lret
xor
push
sahf
jae
inc
adc
dec
jo
mov
sub
test
or
mov
jmp
loope
adc
in
icebp
sbb
jp
inc
in
xor
cs
dec
int
mov
sub
lock
jg
cmp
out
sti
mov
dec
lahf
bnd
push
mov
cwtl
dec
fsubrl
xchg
pop
out
lret
decl
add
test
repz
es
cs
inc
ds
popa
inc
mov
push
pop
daa
mov
jp
cs
jns
mov
enter
mov
pop
jb
xorb
pop
push
mov
add
add
mov
sub
lcall
mov
sahf
cld
xchg
and
push
mov
sub
call
bound
push
rol
sub
stc
jge
lret
push
add
pushf
inc
adc
test
mov
inc
cmp
pop
sti
dec
sbb
arpl
rcll
push
icebp
repnz
or
into
in
jg
sarb
aam
xchg
mov
or
int
mov
fistpll
loope
mov
push
mov
int
add
jmp
push
ljmp
mov
push
les
gs
pop
cld
dec
dec
faddp
jge
lcall
ficompl
jle
data16
in
leave
shrl
into
addr16
push
sbb
jp
sbb
pop
shrl
fucomip
in
shll
lret
jecxz
dec
insb
das
xor
mov
inc
sti
loop
push
push
ljmp
fsubrl
jns
repz
jns
mov
mov
ds
inc
test
adc
popa
mov
dec
rorl
push
sbb
aaa
or
aaa
pop
lret
inc
out
cltd
push
mov
stc
mov
addb
in
mov
ja
dec
fwait
clc
mov
jg
aam
push
fildll
roll
push
test
movl
add
lret
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
dec
add
jle
leave
adc
xchg
movlps
ljmp
push
icebp
out
push
outsb
pop
jbe
cwtl
inc
stos
or
out
or
fbld
push
negb
sub
xor
and
std
in
push
inc
xchg
xor
xchg
add
cmp
pop
movsl
inc
pop
jp
xor
cli
imulb
rcr
cltd
bound
sbb
jecxz
mov
jmp
daa
ss
adc
push
adc
cmp
sub
push
mov
dec
aad
cmp
ror
xor
add
cs
xchg
inc
shll
cwtl
xchg
dec
gs
out
lds
insb
fwait
pop
fcompl
not
push
mov
push
in
imul
sub
xchg
inc
ja
mov
ret
lret
jns
in
and
fimuls
sub
xchg
jge
pop
jl
ljmp
sub
call
cmp
cmp
mov
cli
mov
aas
mov
inc
sti
cmp
sbb
sbb
jne
cli
add
sub
pop
lea
fbstp
push
push
sub
popa
add
pop
inc
cmp
sub
rcrl
add
sahf
dec
or
xorb
xchg
xor
stos
repnz
xchg
lcall
fs
add
mov
in
jae
add
outsb
xor
shll
add
mov
aaa
out
jmp
pop
jae
push
and
mov
gs
jl
push
in
cmpsb
gs
aas
sub
adc
or
cmp
outsl
daa
sbb
loopne
pusha
ds
jge
jns
stc
loopne
fidivrs
push
lahf
dec
sub
pop
inc
sbb
sbbb
inc
test
sub
xchg
or
loopne
test
iret
sub
shr
xor
mov
and
roll
lds
jne
sub
incl
sub
adc
sub
sbb
fbstp
push
jnp
xchg
rcll
fs
dec
add
into
ljmp
jb
in
pop
cmp
bndstx
cwtl
fimuls
sarl
jmp
int
xchg
into
daa
jns
out
fisttpll
mov
jnp
scas
push
push
mov
cmc
mov
mov
sub
mov
push
mov
movsl
dec
push
push
fnsave
jb
stc
mov
jno
scas
inc
xorb
popf
inc
jle
and
mov
stos
xor
xchg
out
les
mov
push
maskmovq
testl
filds
rorl
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
xchg
dec
sub
ficoms
aas
insb
or
xor
loope
loope
mov
push
rcrb
das
adc
imul
mov
or
mov
and
sbb
cmp
mov
in
mov
cmp
inc
mov
xlat
inc
into
or
dec
rcrl
sbb
pop
mov
out
clc
push
std
ljmp
sub
out
mov
arpl
loopne
and
push
adc
leave
push
sbb
and
out
inc
add
or
fnsave
dec
sbb
jp
mov
pop
lods
in
pop
xchg
jbe
rcr
mov
mov
cmpl
stos
aas
mov
or
jg
orl
mov
inc
jecxz
das
in
mov
mov
inc
nop
ds
insl
stos
mov
and
iret
mov
int
hlt
into
adc
cmpsb
rcrl
push
xchg
repz
movsl
shl
arpl
inc
or
fstpl
dec
dec
fdivrl
cmp
test
cmp
cltd
ficoml
cltd
cmp
mov
sbb
mov
pop
pop
cmp
jns
or
sub
cs
adc
and
sti
int
cmc
mov
loop
cld
sub
jnp
divl
sahf
mov
dec
int3
push
mov
dec
adc
and
pop
push
adc
popf
xor
stos
stc
mov
fcmovnu
push
adc
int3
subl
bound
int3
pop
out
cltd
testl
inc
mov
push
fninit
test
fdiv
and
jne
jge
dec
xor
les
cmp
cmpb
push
lret
and
fcomi
loope
outsb
sbb
pop
aaa
xchg
mov
jmp
cltd
js
testb
xchg
cltd
aaa
movsl
mov
inc
mov
test
popf
mov
fs
bound
in
cld
push
stos
and
ljmp
test
std
sub
push
push
dec
mov
dec
mov
popa
mov
cwtl
ja
lods
loope
cmp
movsl
cmp
ret
stos
loopne
sub
push
fldt
adc
sti
xchg
inc
add
hlt
stos
mov
popa
pop
xor
mov
subl
xor
cli
lods
mov
xor
sbb
dec
call
lcall
test
xchg
lea
add
xorl
fisttpl
in
aas
push
pushl
shl
call
jmp
imul
cltd
sbb
imul
lcall
movlps
pop
inc
add
ficomps
sarb
pop
pop
and
shlb
leave
mov
jb
mov
jg
outsb
sar
mov
mov
xchg
xor
outsb
lret
sbb
xor
pop
pop
je
sub
ficompl
pop
xor
fdivrl
xor
inc
xchg
popf
jb
std
jbe
mov
xchg
inc
mov
jns
loop
cmp
popa
mov
mov
push
cs
dec
shll
sahf
pop
push
cwtl
inc
mov
dec
dec
push
add
lods
insl
out
ja
adc
das
pushf
outsl
mov
out
daa
xor
dec
or
xor
loope
push
orb
pop
data16
and
lret
push
arpl
sti
jae
mull
sub
inc
xchg
lret
lret
fisubrl
mov
les
addl
sahf
cmp
pop
mov
cmc
lods
push
cmp
xchg
testb
pop
in
xor
insl
sbb
daa
cmp
xchg
and
mov
insl
mov
cs
push
and
pop
inc
js
cmp
dec
mov
push
out
mov
ret
mov
jmp
jbe
int
dec
and
pop
sarb
out
leave
and
cmpsl
aad
push
stc
pop
push
dec
jae
orb
jo
xchg
adc
jg
mov
push
sub
lds
mov
cmp
test
inc
ds
dec
ss
rorb
in
cmp
sbb
cmp
push
data16
daa
mov
out
jp
pop
jo
popf
mov
lock
call
or
dec
aam
test
rcll
scas
cwtl
mov
imul
dec
xor
ljmp
inc
cltd
and
fdivl
js
ret
push
lods
aaa
iret
js
add
add
mov
inc
je
pop
or
cmp
repnz
sbb
pop
ljmp
in
outsl
cltd
push
cmpsl
push
push
das
movsb
lret
jge
push
aad
aas
cmc
enter
daa
jmp
adc
add
aad
addl
out
dec
sbb
das
loope
or
pop
hlt
lret
inc
in
cmp
mov
jne
loopne
cmp
cmpsl
addr16
mov
cmp
mov
jo
sar
add
adc
mov
jno
sub
jle
aam
mov
out
sbb
jb
and
mov
push
jge
es
cld
pushf
cmp
mov
aas
jmp
push
lds
push
inc
dec
and
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
push
sub
mov
adc
loopne
out
in
inc
lods
xor
push
je
and
decl
jl
mov
mov
mov
in
sub
std
jo
les
cmpsl
mov
test
in
call
add
jbe
ja
test
test
mov
movsb
mov
xchg
adcb
adc
data16
divl
test
repz
fistpll
jmp
and
cmp
jbe
pop
jle
inc
enter
xor
ja
rcrl
mov
push
idivb
xchg
lret
jmpw
sub
xor
pop
int
stos
adc
jnp
jae
sbb
push
push
lods
lahf
xchg
aas
es
sti
popf
xchg
xor
daa
ss
jmp
subl
test
lds
hlt
jg
inc
fldcw
shl
dec
xchg
roll
jl
inc
push
bound
mov
xchg
push
xor
cs
add
test
sub
in
xchg
enter
popf
dec
adc
pop
leave
orl
push
jg
loope
fadd
xor
dec
xchg
dec
inc
sbb
sahf
stos
and
enter
xchg
andb
aas
or
cmpsb
test
hlt
add
test
pop
ljmp
adc
testl
mov
xlat
fsubp
cs
and
or
mov
out
jae
pop
sbbb
xor
fcomi
mov
mov
std
or
pop
pop
lds
pop
xor
pop
or
xlat
push
cmp
insb
mov
and
lcall
das
sti
push
add
mov
ret
imul
cs
outsb
fwait
incl
dec
add
imulb
int
pusha
fxch
in
hlt
adc
mov
xor
enter
mov
lret
inc
dec
loopne
sub
ss
xchg
sbb
lret
test
dec
jne
push
adc
cmpsl
dec
cmpl
in
push
jmp
aad
jnp
fcomp
fmuls
or
cmp
add
sbb
mov
or
cmpsb
mov
sbb
jmp
xchg
in
andb
dec
pop
xor
sub
test
xchg
push
jb
cltd
outsb
jne
insl
call
fldenv
xor
cld
repnz
xlat
add
add
xor
popa
xchg
js
add
xchg
outsl
into
out
inc
scas
out
call
xchg
sbb
jg
pop
xor
pop
test
xchg
enter
divb
rorb
ret
clc
insl
inc
add
xor
loope
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
mov
xchg
movlps
sub
pop
loopne
divl
cltd
outsb
cli
and
mov
sub
iret
repz
out
cmp
and
adc
jl
or
jbe
stos
fnsave
dec
cwtl
fs
stos
or
dec
shrb
stc
and
xchg
js
stc
adc
mov
and
xlat
jecxz
call
dec
ret
mov
mov
cmp
dec
leave
dec
mov
and
pushl
jmp
add
loop
sahf
in
loope
stos
lock
mov
jle
lods
push
cld
in
insl
icebp
sti
sbb
jl
jno
push
xchg
sti
ret
in
loop
inc
cli
mov
xchg
les
in
inc
nop
shl
fdivr
fcomps
pop
cli
lods
fstl
add
mov
rcrb
mov
cli
fsubs
mov
mov
sub
pusha
fwait
and
int
fcmovnbe
ja
mov
enter
dec
pop
dec
mov
or
mov
fdivrs
xchg
stc
xchg
in
mov
fisubrl
notrack
mov
lods
ds
jl
cmp
adc
pop
mov
or
data16
ljmp
and
ja
push
in
jne
jo
in
jp
cmp
mov
jp
adc
push
in
mov
test
or
add
xchg
sub
fcomp
push
adc
repnz
ret
insl
shll
mov
xchg
rcrb
push
push
inc
aas
push
mov
inc
movsl
cs
imul
add
xor
pop
xlat
pop
stos
and
push
jbe
mov
sbb
aad
adc
std
jg
fstp
insl
out
stos
inc
cmp
idivb
mov
mov
dec
out
cld
shlb
sbb
ret
adc
jb
mov
scas
imul
outsb
les
or
cld
mov
mov
cmp
sub
push
xor
ret
mov
adc
stos
out
xor
mov
shrl
jmp
fwait
xchg
outsl
subl
adc
popf
and
cmp
xor
mov
inc
leave
outsb
fnstenv
testl
adc
cmp
fiaddl
dec
js
pop
push
in
xchg
stos
sub
pop
mov
insl
in
sub
adc
xchg
jo
inc
sbb
lahf
movsb
push
xchg
rorl
mov
roll
xor
pop
stos
add
pusha
hlt
mov
iret
mov
jge
out
movsl
cmp
lds
cli
cmp
cwtl
int
jg
rcr
cld
add
mov
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
mov
lods
adc
xchg
movlps
xor
inc
aad
shl
daa
gs
mov
cmp
adc
adc
jecxz
sbb
jl
jae
mov
jo
sti
stc
addr16
pusha
pop
mov
xchg
stos
inc
mov
inc
test
xor
ret
pop
loop
lret
sbb
pop
xor
adc
xor
sbb
add
mov
ja
dec
xor
mov
popf
stc
out
test
es
mov
lcall
or
inc
ljmp
sbb
sub
insb
pop
ss
and
pusha
sbb
mov
xchg
push
jmp
push
out
test
imulb
test
test
jmp
andb
inc
xchg
loope
aam
and
les
mov
mov
dec
jb
xchg
js
in
dec
push
and
lret
repz
stos
push
adc
mov
mov
dec
jbe
idivb
stos
pop
les
adc
pop
hlt
scas
sub
sub
pop
add
push
pop
lahf
jb
jmp
mov
and
sbb
scas
push
xchg
jo
xor
xor
jmp
xchg
jbe
sahf
push
mov
jg
push
outsb
cli
jbe
inc
xor
test
xor
mov
lahf
jg
das
xor
dec
adc
mov
and
or
pop
jae
test
or
mov
xchg
pop
sbb
jmp
pop
gs
mov
dec
mov
sub
push
stc
mov
jne
repnz
addr16
roll
fmuls
push
test
outsb
mov
push
fldl
in
xchg
pushf
jp
fcmovne
cwtl
push
fiadds
add
jae
jmp
sti
push
inc
jo
test
nop
xchg
cmpsl
push
ss
sbb
fistpll
and
inc
js
mov
xchg
add
mov
and
js
dec
or
or
sub
out
jae
mov
enter
sub
fistl
pop
fnstcw
imul
sbb
sbb
inc
xlat
insb
inc
stc
loopne
leave
ds
push
jne
cs
mov
and
mov
mov
xchg
add
inc
xchg
mov
xor
pusha
imul
cmpsb
jle
mov
cmp
imul
cmp
ja
push
insb
inc
icebp
movsb
jno
ljmp
mov
or
push
out
aaa
pop
jl
push
xor
jg
xlat
jno
inc
or
fnstenv
xor
xor
adc
add
pop
notl
ret
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
cmpl
mov
adc
and
xlat
call
fdivrs
loopne
add
jne
rolb
repnz
xchg
out
fsubl
jle
in
or
imull
leave
call
and
xchg
orb
xor
jb
dec
lods
jbe
pop
fcmove
cmp
and
jne
mov
jmp
xor
popf
rcrb
sbb
jno
push
dec
ret
sbb
adc
mov
and
push
sub
sub
shrl
or
sahf
insb
incb
push
in
sub
and
in
mov
leave
std
std
fisttpll
sub
and
mov
and
inc
mov
rolb
push
loope
in
jecxz
or
pop
mov
push
and
mov
andl
dec
pop
mov
repz
pop
xor
scas
es
sbb
jbe
nop
je
or
sbb
daa
jbe
mov
dec
push
stos
jl
pushf
aam
pop
sbb
adc
mov
jg
das
push
pop
aaa
cld
test
cmp
loope
push
inc
inc
aam
clc
adcl
mov
add
lea
imul
inc
or
into
jecxz
fdiv
mov
xor
rcl
stos
jmp
push
mov
jecxz
rorl
xchg
mov
mov
cld
js
pop
arpl
jo
sub
in
rcrl
outsl
fildl
adc
insb
cmp
lea
sub
jnp
imul
pop
jmp
test
push
inc
xchg
loope
add
jno
push
add
clc
sbb
ret
lret
add
adc
fisttpl
sub
test
mov
movsl
mov
push
jle
dec
cmp
xchg
mov
popf
mov
outsl
adc
fcmovu
sbb
push
pop
cmpsl
xor
sbb
addr16
and
sahf
sub
adc
lea
repnz
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
dec
add
mov
call
dec
dec
xlat
xchg
call
mov
cmp
pop
scas
push
lcall
mov
lret
dec
das
add
cs
add
bound
sbb
pop
dec
imul
xor
iret
sti
lock
mov
into
mov
jno
mov
sbb
mov
push
call
dec
mov
push
push
lret
lds
jge
push
or
ja
or
mov
shrl
aaa
pop
sbb
adc
sub
sub
fldcw
shrb
into
dec
pop
pusha
pusha
rolb
xor
sub
aam
ljmp
xchg
mov
cmp
mov
leave
dec
inc
lds
mov
loope
xor
pop
sub
imul
ljmp
jbe
cmp
jl
pop
enter
push
sbb
fstl
leave
xchg
loope
mov
mov
inc
sub
sbb
aad
jae
jge
mov
in
jmp
jo
sbb
pop
test
xchg
test
fiadds
cmp
mov
into
mov
pop
pusha
repz
loope
mov
push
and
jecxz
das
std
movsb
rorb
push
faddl
mov
ficompl
scas
xchg
sub
aad
xor
pop
shlb
adc
dec
pop
ja
popa
icebp
xchg
jp
adcb
andl
inc
xchg
cli
out
insl
and
aam
xchg
es
sbb
inc
xchg
mov
push
xchg
xchg
add
repnz
cmpb
adc
ljmp
inc
lods
and
aam
js
inc
pusha
clc
cmp
cmp
dec
mov
cwtl
xor
sbbl
add
and
inc
xchg
hlt
add
jmp
add
jo
lock
scas
dec
adcl
fldt
rcrl
push
fcmovnbe
jg
pop
inc
sub
or
dec
clc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
inc
push
dec
mov
mov
fidivrs
call
and
or
out
cmc
mov
inc
pop
cmp
fsubrl
icebp
sbb
pop
scas
adc
mov
xchg
popa
jmp
popa
mull
adcl
lret
mov
mov
push
jmp
mov
sub
push
jmp
xchg
test
into
adc
rclb
int3
mov
cltd
das
cmp
xor
hlt
pop
adc
mov
pop
scas
mov
fistl
lods
xor
fsubp
out
pop
inc
out
dec
cmpl
dec
aad
popa
xchg
xchg
xchg
push
std
gs
sub
insl
bound
mov
and
fidivrl
pop
lret
sahf
inc
xchg
jecxz
push
movsl
test
pop
push
xchg
inc
jle
test
icebp
out
aam
ljmp
mov
pop
mov
pop
das
pop
sub
cmp
mov
mov
rcll
xorb
arpl
fwait
add
leave
popf
cli
or
push
ds
lock
jmp
adc
dec
pop
and
add
int3
aas
mov
ss
jnp
sub
xor
sub
popa
cmp
and
sub
or
and
iret
push
lds
popf
mov
push
jg
inc
cmp
cld
popf
jmp
mov
int
jl
sbb
xchg
cmp
adc
cmp
int3
pop
stos
jno
lret
mov
ja
cmp
jne
pop
xchg
inc
addr16
pop
and
lock
test
shr
leave
and
ljmp
mov
std
mov
add
and
or
pop
ja
inc
loope
dec
pop
push
inc
sbb
xor
sub
pop
sbb
xchg
in
ds
addr16
dec
lods
mov
shll
lret
mov
sub
in
into
popf
addl
popf
scas
lods
or
mov
inc
sbb
rcll
adc
fs
int
loopne
ss
repz
hlt
sbb
test
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
and
cltd
adc
mov
jmp
cmpsb
or
cmpsb
lret
add
movsl
shr
fisubrl
push
pop
and
mov
int3
sbb
testb
add
sti
rcrl
pop
adc
rorl
dec
mov
mov
int
lcall
mov
pop
cwtl
stos
das
mov
addr16
mov
lret
jns
out
dec
lcall
jnp
in
push
popa
push
xchg
mov
sub
push
cli
push
scas
and
jb
loop
and
sbb
ljmp
push
popf
cltd
mov
or
aaa
fmul
popa
dec
push
or
les
in
cmp
pop
mov
push
addl
dec
lret
xchg
pusha
mov
jle
incl
stos
or
xor
cmp
add
cmp
inc
pop
fsubp
jae
and
inc
ss
mov
in
call
xchg
lods
bound
scas
sub
andb
dec
adc
lret
jno
ss
mov
in
xor
mov
add
sbb
pop
cs
repz
aad
inc
jecxz
cmpsl
push
or
iret
push
jns
sbbb
mov
fnstsw
sahf
je
faddl
loop
and
int3
add
cmp
ss
psllq
mov
rcll
addl
xor
in
mov
out
jl
sub
sub
push
fwait
sub
shr
lock
cmp
bnd
pushf
fcoml
add
movsb
test
pusha
pop
ja
jno
adc
mov
int
jg
fninit
or
aaa
imul
or
clc
fstpl
jmp
scas
cli
dec
repz
scas
xchg
adc
imul
loopne
pop
ror
ss
aaa
mov
sti
ficoml
sbb
pop
mov
popf
xor
repnz
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
arpl
adc
pop
adc
adc
movsl
sub
push
push
divl
sbbb
out
cmp
push
cmp
insl
ret
lret
mov
cmpb
push
in
lods
sbb
into
test
movsl
and
mov
les
push
les
gs
fcoms
cli
jo
xchg
mov
jnp
lcall
dec
adc
sub
insb
jae
or
push
dec
pop
xor
test
jl
insb
cli
xchg
adc
add
subb
sub
in
cli
rol
aaa
ffree
or
add
jp
jne
and
ja
sub
pop
sbb
adc
subb
out
push
test
sbb
pusha
inc
dec
scas
je
int3
popa
xchg
icebp
xchg
sub
data16
dec
aam
sub
aam
add
add
or
movsb
dec
dec
mov
cmc
sub
sub
ret
jne
mov
sbb
jnp
sub
pop
pusha
cmc
push
lods
sbb
enter
mov
aam
lock
pop
mov
jo
decb
push
dec
into
cwtl
cmp
push
je
xor
push
and
dec
leave
fmuls
shl
out
cltd
loop
and
movsl
sbb
push
lret
and
cltd
mov
icebp
ret
pop
mov
pop
icebp
imul
inc
pop
xchg
and
push
mov
jo
scas
push
gs
mov
sbb
jle
imulb
xchg
xor
test
imul
dec
push
fwait
jb
xchg
je
xor
dec
xor
loop
lret
movsb
scas
mov
in
jno
lods
jae
jo
dec
jno
xchg
lods
or
pop
call
pusha
imul
and
adc
cmp
inc
xlat
sbb
sbb
xchg
mov
pop
mov
adc
ds
sahf
pop
push
addr16
xlat
adc
mov
stos
shrb
repnz
shll
orb
lret
jno
xchg
js
je
rclb
mov
dec
add
and
lcall
ljmp
test
fs
mov
fdivs
pop
cmpsl
sahf
mov
jle
or
pop
xorl
xchg
popf
jl
pop
mov
cmp
lret
dec
mov
xlat
cltd
ret
je
adc
xor
popf
pop
dec
out
xlat
insb
sub
lock
out
cmp
sub
push
cmp
mov
imul
push
push
push
stc
mov
sbb
adc
std
pop
add
out
jg
int3
jmp
in
pop
out
inc
je
fildll
xor
cltd
insl
ret
and
cmp
xor
je
inc
das
js
or
shrb
and
push
cmp
ljmp
jns
daa
dec
push
adc
and
jp
xlat
add
add
mov
xchg
jns
cmp
add
in
push
adc
out
lock
outsl
popa
ss
push
fwait
mov
ret
hlt
xor
pop
cmp
fidivrs
dec
push
pop
cmp
push
xor
jmp
aad
fstps
pop
push
mov
mov
mov
and
inc
and
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
lret
in
adc
pop
adc
adc
adc
loopne
fimull
jae
sbb
xchg
push
jle
imul
es
push
mov
cmpb
xorl
fldl
les
inc
stos
idivl
cmp
mov
mov
data16
push
jp
dec
or
fnstsw
pop
sub
mov
scas
sub
mov
and
or
xor
push
inc
imul
jecxz
je
cmpsb
scas
sahf
inc
sub
lret
cmp
lcall
dec
add
or
mov
lret
mov
dec
rorl
cmp
dec
aam
out
sub
add
sbb
xor
cmp
pop
add
fldenv
movsb
xor
dec
out
add
dec
add
jb
xor
xchg
inc
sbb
adc
sub
neg
pop
cld
pop
or
lret
imul
cltd
dec
mov
inc
dec
sbbb
test
inc
iret
sti
out
lea
cwtl
fs
push
data16
fmuls
xor
cmp
loope
loop
rcr
push
lahf
xor
jb
data16
dec
xchg
scas
inc
js
push
xor
lret
lea
push
xchg
out
cmp
movsl
xchg
lods
mov
cltd
out
push
enter
and
jo
loope
xor
test
fildll
jne
pop
and
pop
out
jae
xor
in
ret
pushf
ljmp
mov
cmp
cmpsl
cmpsb
adc
and
in
jl
push
adc
sub
mov
cmp
pusha
repnz
insb
ret
pop
arpl
mov
ret
mov
or
mov
or
xchg
in
push
pop
adc
les
jge
idivb
mov
adc
pop
jge
inc
lock
std
push
add
pusha
repnz
add
mov
cwtl
mov
jle
fdivl
xorb
xabort
call
jnp
mov
push
add
push
movsl
js
or
cmp
push
mov
repz
sbbb
fstpl
call
push
addr16
ljmp
fnstenv
push
movsl
int
or
and
inc
or
imul
stos
xor
aad
push
sti
push
push
mov
ss
mov
and
jp
lea
icebp
jns
test
push
fistps
les
mov
dec
fcmove
and
push
cli
xor
or
loopne
shll
cltd
mov
add
shl
xchg
jp
add
mov
fwait
pop
push
cmpsb
and
je
adc
jbe
and
cmp
xor
shr
and
mov
xchg
movsl
pop
inc
or
popf
and
mov
and
xor
cwtl
xchg
push
incl
push
mov
lret
cli
aas
orb
adc
push
mov
subb
stos
jecxz
jo
xor
aaa
cld
hlt
mov
loopne
jp
sahf
add
scas
aam
pusha
or
fisttps
pop
or
in
sub
cmpsl
cmp
dec
and
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
dec
lcall
adc
adc
add
mov
addb
xchg
mov
out
mov
sbb
push
cmpsb
dec
xchg
shrb
mov
test
shl
adc
dec
push
into
push
add
xchg
dec
mov
popa
mov
cli
push
inc
or
xor
sbb
stos
rcll
sar
mov
rorl
cld
stos
scas
roll
sub
fdivrs
sar
push
push
jne
setns
sbb
rolb
hlt
outsb
scas
jge
daa
ss
mov
pop
sahf
and
jg
test
cmpsb
pop
leave
movsl
push
pop
or
add
gs
jle
dec
xor
js
stos
aaa
add
or
add
popa
add
gs
mov
dec
pop
push
ja
ret
jnp
fisttpll
popf
pop
cwtl
mov
mov
cmp
push
dec
aam
addb
mov
fcmovnb
es
je
movsb
lret
cmp
je
sub
jg
sbb
js
cwtl
sbb
inc
gs
sbb
mov
pushf
pop
lods
pop
xor
add
and
and
xchg
push
pop
loopne
jmp
add
stc
mov
cmp
xchg
cmc
add
pop
sbb
xor
inc
pop
pushf
int
cmc
jp
ret
and
js
cmc
sub
lods
into
or
xlat
xor
sub
jg
xlat
sbb
and
add
pusha
ret
subb
in
add
cmp
and
xor
aaa
inc
sub
scas
mov
sbb
mov
fcomps
rclb
loope
jl
jl
gs
rcll
xchg
daa
add
bound
inc
push
sub
aam
sbb
fadds
mov
sub
movsb
aam
out
add
push
js
in
xchg
inc
mov
rorb
cld
mov
cld
movsb
arpl
movsb
add
subb
scas
call
and
inc
cmp
xchg
mov
add
std
test
adc
mov
or
mov
xchg
jb
ret
pop
leave
adc
pop
or
sarl
mov
push
repnz
mov
jecxz
mov
dec
mov
xor
ja
xor
cmp
mov
in
outsb
das
lea
fsubl
sbbb
fwait
and
or
lods
mov
out
xchg
into
test
xlat
lcall
sub
mov
mov
nop
xor
mov
and
xchg
fwait
sub
cmpsb
mov
das
ja
leave
xlat
bound
cs
insb
les
mov
mov
inc
clc
and
std
cmpsl
test
cmp
and
nop
mov
sub
or
xlat
ret
dec
ds
xchg
sbb
mov
int3
cmp
lcall
push
cmp
add
sbb
push
mov
sub
jg
mov
cmp
and
push
cmp
cmp
lock
cmpsl
adc
je
rcll
mov
js
dec
and
hlt
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
push
std
call
int3
das
mov
mov
sbb
std
cwtl
add
xchg
pop
sub
cmp
push
sub
ss
into
movsb
aad
cmp
push
fldt
inc
xorb
mov
fadd
xor
insb
fwait
into
sbb
inc
aaa
icebp
in
lods
or
xor
xchg
test
jl
aam
ret
rcr
cmp
ficoms
inc
mov
out
dec
inc
and
shl
out
lret
sbb
lcall
outsl
lods
push
mov
test
jp
xchg
mov
jecxz
lea
add
cmp
xchg
cmp
push
push
add
jmp
and
pop
mov
dec
jp
or
jo
shll
fistps
call
les
jo
inc
mov
enter
jle
cmp
jg
pushf
popa
jmp
stc
xorb
outsl
pushf
insl
pop
mov
xchg
addr16
push
cmp
jo
and
cli
loopne
popf
xchg
shll
lock
fildl
adc
mov
jb
aam
popa
test
sub
mov
inc
xor
inc
jp
icebp
mov
pusha
push
sub
scas
push
dec
xchg
and
xor
inc
add
scas
mov
inc
sbb
mov
test
std
dec
int3
push
mov
imulb
rorl
fbstp
push
mov
fsubrs
mov
sbb
sub
cmp
js
adcb
add
loopne
vpunpckhbw
sub
js
mov
imulb
adc
xlat
hlt
imul
xchg
mov
ret
sub
mov
push
sub
push
lds
aam
rorl
inc
scas
push
cmp
pop
jl
js
ficoml
sbb
fsubl
cld
arpl
sbbl
ret
outsb
mov
xor
adc
add
fiadds
stc
into
ret
mov
loopne
xchg
loope
fwait
adc
mov
xor
inc
fsubrs
sub
lahf
and
inc
sub
insb
xchg
xor
mov
scas
pop
mov
inc
or
pop
lret
cld
pop
sub
stos
mov
outsl
xchg
inc
adc
dec
clc
out
pop
sub
icebp
decl
mov
loope
adc
cld
or
insl
loop
sbb
rcr
push
iret
sbb
or
xchg
loop
andb
test
mov
xchg
add
adc
cwtl
jmp
mov
ja
bound
repz
cld
jg
popf
in
and
mov
sarb
mov
and
sbb
jg
inc
push
inc
faddl
jmp
dec
sbb
and
jecxz
dec
cmp
cmp
insl
pop
xchg
les
mov
push
out
cltd
out
pop
push
push
adc
sbb
sbb
sbb
jge
fdivrl
mov
mov
inc
or
mov
fisttpll
out
jmp
cmp
and
rorl
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
mov
mov
adc
adc
lcall
cmpsl
in
fstpt
hlt
dec
movsb
bound
sbb
scas
or
and
dec
lcall
aad
andl
mov
mov
ret
mov
loopne
or
js
mov
or
fcmovnb
fadds
repnz
sarb
sbb
jle
mov
jle
sub
mov
scas
insb
dec
cmp
sbb
maskmovq
idivl
dec
xchg
loope
scas
jae
push
scas
leave
pushf
div
sti
into
test
cwtl
sbb
mov
xor
outsb
pop
push
gs
lea
aam
or
mov
push
aad
mov
jge
daa
cmp
aad
push
shll
mov
lods
iret
jmp
insl
fnstsw
mov
xor
cld
jl
ret
shlb
add
adcb
aas
push
fildll
ja
xchg
mov
and
enter
ljmp
mov
pusha
into
sbb
push
mov
and
int
add
adc
sti
inc
pop
dec
inc
sbb
pop
cmp
imul
test
sbb
xchg
pop
push
les
ljmp
mov
rcrl
arpl
repnz
test
mov
pop
js
andb
add
dec
sub
jp
or
or
je
jo
lahf
aas
test
sahf
push
in
repnz
gs
imul
push
clc
cmp
jl
repz
daa
out
or
mov
push
jno
push
popf
adc
xor
jne
popa
popf
inc
xor
out
mov
or
jbe
add
jno
push
and
js
test
cmp
std
mov
in
or
sub
xor
inc
inc
test
lods
shrb
cmpsb
jg
pushf
out
gs
dec
aas
xor
add
les
xor
pop
mov
and
xchg
nop
jecxz
insb
sub
popf
inc
inc
mov
cmpsb
push
push
pop
push
in
xor
xchg
or
call
ss
cmp
mov
sbb
loop
fildll
jmp
je
lods
mov
jmp
sahf
dec
mov
adc
mov
cld
push
pop
mov
in
sub
ljmp
cmp
cmp
jmp
jbe
jmp
adc
jle
lcall
dec
mov
popf
push
push
inc
mov
cli
mov
scas
rorb
jl
xchg
clc
xor
data16
dec
outsb
mov
xor
icebp
mov
lock
jo
xor
add
aam
in
dec
push
int3
pushf
adc
inc
js
ret
outsl
shlb
push
test
insb
adc
icebp
sub
cmp
stos
nop
pop
mov
xor
push
shl
int
jl
ljmp
lea
into
adc
loope
outsb
lret
mov
cli
mov
insb
pushf
enter
fstp
mov
xor
push
xchg
sti
lods
add
out
push
mov
pop
insb
sti
cmpsb
jmp
insb
arpl
sub
pop
dec
sub
in
push
or
imul
dec
testl
test
and
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
or
or
pop
adc
adc
aaa
aas
ljmp
movsb
xchg
xchg
into
inc
scas
rcl
aam
sub
mov
xchg
sub
aas
add
mov
jmp
mov
aaa
pusha
sub
mov
xor
sub
fists
push
jle
test
lods
mov
ficoml
push
addb
int3
movsb
insl
fbstp
mov
int3
rcll
fstl
xchg
and
xchg
jb
jmp
cmp
sahf
or
pop
sub
out
pop
push
sbb
test
and
sarl
lahf
fldenv
jp
xchg
repz
movsl
sbb
cld
fsubrs
cwtl
cld
rol
and
mov
mov
dec
push
pop
pop
fcmovnb
pop
insb
ret
xor
scas
dec
jnp
sbb
dec
mov
andb
or
cs
mov
lods
loop
push
repnz
inc
insl
fcomps
push
pop
mov
into
pop
xchg
loop
or
aad
dec
push
cmpsb
jnp
pop
bound
add
outsl
or
lods
orb
dec
cld
int3
or
ds
js
xor
xchg
test
cmp
scas
mov
fsub
pop
xor
mov
das
mov
and
sbb
jae
xchg
jo
cmp
rolb
jle
or
push
imul
aam
and
cmp
adc
ja
popa
popa
leave
ret
js
jbe
pop
inc
or
cltd
out
push
xor
xor
aad
cs
mov
outsb
mov
inc
mov
hlt
sub
ret
pop
les
sbbb
stc
in
pop
push
xchg
lret
and
jmp
mov
mov
cmpsl
fsubr
mov
jmp
sbb
sti
cltd
stos
push
insl
jno
imul
out
jns
push
fnstsw
pop
out
xor
loop
sbb
or
int3
lret
imul
mov
mov
stos
jecxz
mov
test
xchg
enter
stos
sbb
pop
test
adc
fxch
fcoml
push
insb
lods
mov
movsb
lods
fcomps
test
xor
or
sbb
inc
mov
push
pop
mov
xor
or
orl
push
sub
jbe
jge
inc
xor
mov
cmp
pop
cltd
pop
jecxz
pop
loop
mov
cmp
inc
loope
sahf
xor
push
xchg
mov
inc
mov
mov
aam
xor
aaa
push
dec
lea
and
shlb
stos
nop
jbe
pop
icebp
fnsave
stc
int3
filds
mov
imul
or
add
jle
and
pop
sahf
or
and
subl
push
movsl
dec
sbb
fwait
xchg
rol
mov
cld
add
push
xchg
das
sahf
adc
stc
adc
aam
dec
sbb
add
mov
test
add
sahf
cmpsb
mov
in
insl
inc
jno
in
xchg
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
loope
and
push
loopne
gs
mov
ss
mov
hlt
mov
mov
pop
xchg
adc
test
fldt
or
add
mov
mov
sbb
lock
pusha
push
or
jecxz
add
mov
ja
jge
cwtl
out
pop
dec
xor
insb
js
xlat
mov
insb
inc
cltd
shlb
xor
clc
sub
jp
mov
lock
fidivrl
xchg
xlat
je
jge
mov
stos
pop
pop
shl
sub
jl
mov
push
xchg
add
dec
cmp
mov
icebp
sub
cmp
jp
mov
xchg
jecxz
pusha
daa
mov
xchg
mov
mov
xchg
into
in
inc
cli
jo
push
test
dec
iret
mov
jp
mov
push
dec
iret
push
insl
mov
push
add
pop
sbb
xor
mov
clc
movsb
jecxz
xchg
xchg
jnp
or
lea
xchg
mov
lcall
sbb
or
bound
push
sbb
rcrb
fmuls
insl
mov
xchg
jbe
mov
mov
clc
push
dec
in
in
mov
xlat
sub
fidivrs
sub
fsubl
iret
nop
scas
pop
fwait
push
ja
sbb
xchg
cmp
out
scas
sbbl
je
push
mov
icebp
xor
inc
popa
cmp
dec
xor
addl
jmp
sub
js
leave
imul
adc
push
mov
push
sub
lds
repz
sub
pop
sub
adc
movsl
xor
sahf
sbb
push
cli
jle
pop
jle
lods
jge
add
push
adc
cltd
adc
xchg
data16
push
ja
stos
shll
negl
mov
flds
xchg
sahf
pop
shlb
pop
ljmp
xor
adc
int3
ds
sarb
inc
jnp
lcall
rcll
xchg
mov
or
dec
push
pop
push
sahf
add
loop
loope
mov
std
xchg
push
daa
mov
pusha
push
jne
and
bound
outsb
iret
pushf
mov
or
insb
outsl
inc
lret
jnp
sub
test
push
and
mov
cmc
and
pop
mov
frstor
rclb
loop
shlb
inc
popf
adc
jno
in
imul
cwtl
jecxz
lock
xchg
mov
daa
test
inc
cmp
cltd
js
mov
pop
adc
xchg
pushf
shr
inc
jg
push
lock
fwait
or
push
and
sub
loop
rolb
in
xor
jno
fwait
bnd
adc
outsl
cwtl
push
and
pop
das
pop
cmc
stc
jmp
xchg
push
ja
sahf
in
xchg
ja
imul
rorl
cmp
cmpsl
sub
or
xor
lcall
movsb
lahf
cli
lods
xlat
orb
in
imulb
pusha
outsb
jmp
sbb
in
in
in
and
cmpl
dec
sbb
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
aaa
pop
lods
xchg
arpl
adc
adc
and
and
std
push
and
aad
dec
arpl
ret
adc
xchg
and
pop
loopne
inc
fsts
popa
pushf
pushf
lret
mov
xchg
push
sbb
dec
dec
iret
call
lds
icebp
das
mov
adc
cli
add
xor
push
push
es
mov
nop
decl
sahf
pusha
je
pop
and
mov
jae
aas
outsl
cmpsl
dec
test
je
subb
std
sbb
jle
sbb
into
insl
repnz
sbb
mov
adc
sbb
and
adc
mov
mov
sbb
es
cmp
in
add
mov
fdivs
sbb
mov
mov
aam
jecxz
mov
or
dec
xchg
dec
test
std
or
sub
pop
into
cmc
adc
jnp
sub
std
sbb
or
shl
shll
lods
xor
das
xchg
xchg
rcll
pop
push
jle
dec
sbb
pop
or
push
fdivrl
test
dec
paddw
pop
sub
cmpsl
inc
rcrb
aaa
xchg
cmpsb
gs
or
xchg
data16
cwtl
jo
or
notl
inc
and
lods
pop
cltd
nop
iret
adc
mov
pop
sub
cmp
lahf
divl
or
pop
adc
and
push
out
mov
or
cmpsl
test
and
fisubrl
lahf
push
insl
mov
xchg
add
and
push
shl
insl
test
cmp
and
fisubl
pop
xor
mov
and
mov
outsl
and
popa
mov
push
je
or
pop
testb
mov
test
push
mov
adc
subb
lea
notl
lock
jnp
aam
or
aas
addl
stc
test
cli
movsb
mov
xor
inc
xor
js
mov
fwait
dec
xor
insl
push
add
out
cmp
pop
push
sub
test
call
jae
test
pop
mov
push
ds
sub
scas
mov
std
xchg
inc
mov
push
add
cld
adc
arpl
movsb
sub
jno
mov
cmc
sub
pop
cmpsb
cmp
inc
mov
jns
leave
mov
mov
in
mov
sti
stos
push
cmpsl
pop
ret
ss
sub
fisttpl
xchg
mov
in
jne
outsb
cs
aas
mov
imul
jns
loop
jo
popa
mov
and
int
out
cs
push
fildl
or
mov
push
rdpmc
aam
adc
stos
mov
push
add
icebp
push
in
pop
pop
jecxz
push
and
cmc
jnp
sarl
fwait
or
mov
cltd
cmp
xor
lret
mov
js
andb
lock
and
pop
dec
xchg
cmpsl
mov
mov
dec
hlt
add
movsb
mov
push
in
stos
inc
and
daa
lods
cli
hlt
mov
out
icebp
lcall
and
sub
fbld
cmp
fisubs
mov
mov
inc
mov
pop
jmp
int
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
je
cmp
ficomps
adc
adc
mov
pusha
pop
sub
jo
rcll
sbb
xchg
adc
int3
stc
or
stos
or
dec
out
mov
test
js
xor
or
pop
push
and
mov
inc
mov
add
popa
xchg
or
mov
insb
repz
mov
cmpsl
pop
xchg
push
out
adc
dec
xchg
sub
mov
shr
test
repnz
jg
std
xor
pop
outsl
mov
jo
mov
arpl
faddl
sbb
rcrl
gs
lret
adc
es
test
insl
add
add
mov
arpl
jp
push
cld
out
faddp
xchg
pushf
mov
pop
xor
pop
push
or
ds
push
stc
and
imul
fcmovb
testl
mov
lcall
add
jg
add
rol
lret
repnz
jmp
push
dec
inc
xorb
push
clc
das
bound
shr
fs
arpl
pop
push
movsl
lcall
cli
loopne
sahf
jbe
adc
pop
xchg
pushf
std
xor
nop
xchg
fstpt
sub
sbb
in
addr16
ret
scas
push
jg
xchg
outsb
aas
jl
nop
pop
cmp
xchg
pushf
insl
xlat
imul
inc
aaa
mov
ret
cmp
lods
mov
push
negb
les
xor
loope
jnp
loope
mov
cmp
sti
xor
jbe
inc
clc
push
dec
fadds
xor
xor
adc
sbb
jae
out
outsl
jae
call
lahf
in
cmc
in
mov
push
lods
out
push
xor
je
or
mov
outsb
jne
mov
sbb
inc
dec
arpl
gs
and
and
adc
lock
cmpsl
faddl
std
xor
test
test
out
sub
insl
lods
jne
mov
inc
iret
insb
movsl
push
inc
pop
cmpsl
movsl
fstp
or
mov
dec
incb
pop
cmp
mov
out
mov
dec
ljmp
pop
fldl
mov
sbb
jo
dec
lcall
je
inc
rclb
xchg
mov
adc
add
ret
jae
arpl
mov
stos
jl
ds
add
inc
mov
cmpsl
adcl
cmp
test
int
arpl
pop
dec
inc
ljmp
mov
mov
clc
lods
cmc
push
pop
sub
adc
loope
inc
mov
lcall
in
aas
cmp
xchg
les
pop
or
stc
jl
or
xlat
cmp
or
fstl
scas
rcll
addb
sub
mov
add
jns
xor
stc
js
inc
mov
adc
push
mov
xor
adc
fstps
pop
fldcw
shlb
sbb
fsubrl
lods
das
dec
adc
jae
xchg
dec
xor
pop
pushf
ret
push
mov
pop
add
jb
mov
adc
insl
adc
xor
cmp
orl
clc
dec
das
cmc
frstor
movsb
mov
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
push
inc
nop
js
pop
adc
pop
adc
adc
mov
js
add
mov
mov
fs
cwtl
dec
cmpsb
xchg
loopne
fs
movsb
cmpsl
inc
jmp
lret
shrl
incb
jae
dec
insl
mov
sbb
sub
nop
xlat
imul
std
movlps
daa
push
jne
aad
lods
push
insb
aas
mov
push
push
fsubr
dec
mov
mov
jbe
mov
mov
int
and
xchg
rcrl
pop
push
sti
mov
xchg
mov
push
or
jae
dec
xor
dec
cmp
hlt
js
add
pop
sbb
cmp
cmp
pop
test
jne
pop
or
sahf
mov
jne
xor
or
in
aad
or
xchg
mov
repz
mov
dec
sub
fisttpll
inc
fiadds
mov
adc
fnstcw
lret
in
cmp
mov
lods
ds
mov
mov
adc
jo
rcrl
sar
add
movsl
into
sbb
mov
add
mov
addb
xchg
in
daa
aaa
out
cmp
rcrb
in
in
lahf
xor
add
in
xchg
mov
fs
xor
mov
add
out
daa
bound
xchg
cmp
leave
ljmp
loop
lods
dec
xlat
mov
pop
das
lahf
imul
pop
ss
imul
es
sub
and
lcall
push
cmp
gs
jmp
sbb
ret
mov
sub
out
cmpsl
jno
dec
mov
loop
out
dec
loopne
and
lock
mov
mov
and
or
in
imul
mov
jle
sahf
mov
loope
std
mov
lods
mov
ficomps
push
pop
aas
in
pushl
add
push
cltd
mov
repnz
and
push
stos
outsl
push
jl
and
push
js
mov
sbbb
imul
mov
sarl
sbb
ljmp
in
cmp
xchg
adc
adc
fnstenv
cmpl
in
cmpxchg
sub
in
hlt
and
imul
aad
inc
jp
add
lret
test
jo
dec
pop
mov
mov
sbb
cmc
outsl
or
adc
mov
mov
mov
test
imul
pop
push
imul
mov
push
loope
hlt
lret
inc
inc
imul
pop
jp
pop
outsl
dec
xchg
sbb
mov
mov
std
inc
shrb
jno
iret
mov
pop
scas
mov
mov
out
icebp
mov
jae
mov
test
lahf
hlt
inc
lods
fs
sbb
das
rolb
sahf
push
pop
test
mov
aas
push
iret
jb
jo
dec
fdivrp
xchg
repz
pop
les
je
out
sbb
mov
mov
push
xchg
jle
jno
daa
xor
int3
or
mov
xchg
outsb
mov
mov
jl
or
lahf
ja
mov
xor
and
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
sarb
adc
adc
rcrb
insb
stos
mov
sub
xor
cmc
std
cltd
scas
mov
push
add
pushf
pop
mov
hlt
cwtl
push
das
rolb
xchg
jle
pusha
sbbb
cmp
xor
pop
mov
and
out
mov
jl
std
inc
aaa
pop
fmulp
popa
cmp
and
pop
mov
cmp
mov
pop
or
inc
jecxz
mov
ficomps
aas
inc
imul
push
popa
in
into
jg
pop
mov
inc
sti
pop
xor
push
mov
lahf
push
in
cmp
add
push
and
dec
dec
leave
fcoms
dec
mov
lods
adc
jnp
sub
push
out
jae
pop
sti
xchg
mov
inc
fdiv
cmp
imul
dec
lahf
xlat
pop
subb
mov
out
outsl
xchg
dec
mov
stc
int3
pop
fcomps
and
fs
cmpb
mov
push
cmp
pop
jo
nop
sti
pop
into
mov
jo
movsb
mov
dec
sti
test
and
cmpsb
pop
cmp
pop
movb
sub
or
pop
cmc
push
test
mov
add
into
stos
adc
lea
loopne
sbb
jns
nop
mov
xchg
adc
sbb
rclb
push
jns
cld
inc
push
sub
dec
rep
dec
pop
push
les
mov
das
fiaddl
pop
sbbb
addr16
mov
adc
xchg
sub
sub
mov
es
push
sub
xchg
imul
cmpsl
push
outsl
cmpsl
push
pushf
pop
repz
enter
in
shrb
or
scas
jecxz
std
fimuls
jl
add
into
fbld
mov
inc
adc
pop
lds
pop
shll
jno
pusha
push
push
std
imul
inc
in
roll
je
fisubs
inc
dec
xor
push
mov
into
jae
dec
and
in
sbb
cmp
clc
jge
xchg
mov
adc
sub
ja
sbb
xor
cmp
mov
gs
rcrb
xchg
add
pop
addb
roll
add
rcrb
xor
jmp
xor
mov
pop
sarb
xor
jnp
daa
adc
push
aaa
pop
xchg
es
das
cmp
push
xor
aad
lds
or
mov
cmp
int
leave
cmp
das
sub
or
mov
dec
cmp
iret
adc
xchg
les
or
jge
adc
fwait
cmp
loopne
dec
lahf
jg
cmp
shl
cmp
outsb
mov
xchg
sub
loop
xchg
pusha
sbb
mov
ss
mov
push
movsl
jbe
dec
add
nop
sub
pop
add
popf
fld
cmp
shlb
cs
out
add
ret
or
js
mov
int3
int
fldln2
lods
aas
inc
sub
and
cmp
dec
paddusw
in
xchg
push
stos
cmp
pop
je
cmc
pop
loop
adc
jae
cltd
test
cmpsl
push
mov
or
in
inc
and
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
outsb
insb
mov
adc
pop
adc
adc
mov
and
roll
and
add
outsb
lock
mov
fsubl
jg
out
notl
xchg
jp
rcrb
sbb
iret
outsb
jne
adc
lret
roll
xchg
push
lret
sti
addr16
cmp
mov
sbb
inc
dec
in
js
sbb
loop
xchg
pushf
divb
mov
adc
subb
mov
xchg
cmp
arpl
rorb
ss
iret
rcrl
pop
sahf
add
pop
and
adc
aas
aaa
out
pop
shll
push
xlat
xchg
int3
subl
sahf
rclb
in
enter
mov
fimull
sub
jmp
mov
daa
and
and
cwtl
sti
mov
aad
movsl
push
psubusb
mov
dec
aas
testl
pop
adc
movsb
sar
xor
out
or
into
push
add
movsb
ror
add
das
mov
sbb
mov
pop
ret
inc
dec
jmp
cwtl
ret
inc
gs
ficoml
es
xchg
push
nop
jbe
std
mov
pusha
lcall
inc
xchg
aam
div
call
cli
cmpsb
xchg
bound
or
pop
jae
cmp
jmp
inc
shlb
loopne
and
pop
movsb
xadd
in
push
mov
cltd
mov
testb
cltd
xchg
sub
scas
and
jb
jb
jg
dec
jbe
fnstsw
jecxz
cs
mov
bound
mov
fucom
hlt
loope
dec
lea
push
xor
or
ds
fdivl
push
inc
or
cmp
add
in
int3
mov
rolb
jae
and
mov
shll
cwtl
icebp
in
sarb
inc
out
pushf
push
jmp
mov
mov
dec
dec
sbb
or
cld
cli
jae
xchg
fnsave
fistl
ret
imul
ja
fwait
loope
mov
mov
out
jg
popa
push
sub
mov
call
pop
or
ss
pop
xchg
push
cltd
jno
dec
gs
jmp
mov
pop
cmp
ficoms
out
sub
mov
out
int
cs
sub
pop
ret
cli
cmc
repz
leave
stos
jmp
cld
in
sbb
xor
pop
adc
mov
inc
cmp
loope
and
rcrb
xchg
aam
xchg
and
jmp
sub
jb
cmp
push
mov
pushf
and
adc
or
into
gs
jl
jmp
aad
mov
sub
mov
push
insb
or
aad
or
xchg
adc
sahf
sub
arpl
xlat
lea
aad
ficoms
je
adc
stc
pop
ret
jg
out
xchg
cld
mov
sub
xchg
das
mov
or
mov
and
mov
xlat
clc
jle
push
mov
hlt
in
flds
fs
sbb
lods
cmp
jmp
mov
ret
jno
and
cmpsb
pop
fs
xor
adc
fsubr
sub
cld
inc
out
jns
iret
ss
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
jle
jp
incb
adc
adc
cmp
mul
repz
jl
or
es
and
fdivs
repz
lock
rorb
test
dec
mov
rorb
cmp
ljmp
add
prefetcht1
jge
fwait
outsl
loope
incl
sti
shr
inc
cmp
jae
fldl
jo
xchg
adc
and
data16
lcall
das
or
stc
mov
xor
inc
cmp
add
mov
roll
pusha
nop
mov
or
aad
push
pop
lea
js
mov
xlat
lret
and
ja
dec
mov
in
dec
sub
pusha
cli
test
xor
sub
popf
das
and
jecxz
mov
pop
lcall
ret
std
sbb
and
aas
loopne
inc
cmpsl
pushf
ss
imul
push
lret
in
or
ds
lret
in
in
aaa
jg
jge
sub
ficompl
test
imul
or
jns
lcall
out
cwtl
dec
mov
mov
mov
inc
mov
and
sbb
dec
mov
out
cmp
mov
testl
xacquire
mov
pop
jmp
inc
jae
shrb
rcl
xchg
sahf
shll
cmp
jmp
addl
in
sbb
icebp
outsb
repz
or
mov
mov
sub
mov
mov
jl
movsl
into
fldenv
mov
or
inc
int3
int
fnstcw
mov
sub
pop
aaa
cld
pop
leave
pop
scas
jg
arpl
pop
lahf
adc
xchg
and
rolb
mov
repnz
fimull
xchg
addr16
in
xchg
cmp
mov
lcall
sti
std
inc
stos
ljmp
sub
push
xor
cwtl
cmp
ret
mov
mov
sbb
mov
shlb
lock
push
arpl
ret
mov
pop
and
xor
outsl
xchg
mov
dec
popa
jns
ja
in
pop
add
sub
ss
sbb
iret
sbb
jg
mov
or
xchg
jecxz
xchg
fistps
adc
and
mov
ljmp
pop
and
mov
jl
cmpsb
or
mov
xor
test
adc
out
push
rdmsr
xchg
pop
and
popf
ret
jp
jge
stos
pextrw
pop
adcb
inc
push
dec
push
fcomi
sarl
sub
pushw
popf
jno
xchg
push
xor
mov
fistpll
sub
and
in
int
lock
lds
scas
loopne
push
fcomi
xchg
mov
pusha
xchg
mov
push
loop
push
pop
add
shll
add
les
test
pop
insb
cltd
iret
imul
int3
and
sub
xor
cltd
mov
fsqrt
mov
cmc
xor
popa
mov
pop
popl
sub
push
mov
mov
and
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
sbbb
out
int3
imul
mov
and
cmpb
cmc
mov
cmp
xchg
jl
pop
push
pop
and
loope
pop
ds
rcrb
repnz
jmp
int3
cwtl
add
shl
jmp
mov
jns
jg
jne
ret
mov
sub
mov
sbb
rcr
cmp
js
insl
stos
xlat
jns
sub
sub
loope
xchg
fsubl
data16
popf
js
lret
mov
xorl
aam
mov
iret
clc
mov
sub
dec
jae
pop
and
dec
fucomi
sub
mov
mov
xor
js
push
jae
test
sub
push
sbb
mov
scas
gs
hlt
xor
or
xchg
icebp
adc
out
add
ljmp
cwtl
mov
mov
dec
and
lock
jmp
and
add
push
mov
and
adc
test
scas
jbe
iret
aam
addr16
sub
pop
mov
xchg
daa
mov
into
inc
fisubs
add
add
xchg
dec
int3
mov
cltd
scas
outsb
pop
sub
je
ret
mov
mov
dec
dec
pop
cmp
jmp
jl
jge
cmp
cltd
jns
fdivp
sbb
rorl
sbb
cmc
mov
je
daa
mov
lahf
lret
and
movsb
iret
adc
sub
cmp
mov
neg
daa
int3
xor
arpl
add
int3
mov
mov
and
cltd
mov
wbinvd
jo
shll
and
push
cmp
fcoms
cld
out
sub
mov
sub
bound
add
cld
cmp
mov
jns
xchg
add
test
jb
sub
je
mov
inc
cltd
aam
mov
data16
je
xor
subl
aaa
mov
fistps
and
js
fimull
mov
dec
cmp
idivl
jne
sbb
into
mov
cmp
xchg
fnstenv
cmp
inc
dec
or
mov
dec
and
inc
push
xor
arpl
sub
js
insb
faddl
rcll
andb
pop
sbb
pop
mov
ds
inc
mov
aaa
fs
cmp
mov
mov
lds
sub
sbbl
mov
and
dec
sbb
or
push
mov
cli
xor
fsubr
fidivs
int
sbb
pop
fwait
mov
fsubrs
sbb
call
dec
jns
mov
mov
dec
xchg
pusha
sti
loop
shl
cld
icebp
rol
xor
int
pop
push
push
dec
mov
mov
pop
inc
outsl
negb
add
das
adc
es
and
or
out
outsb
out
jb
ret
xor
cs
notb
arpl
pop
test
ss
loope
push
ret
mov
xor
or
xlat
sti
or
pop
dec
and
adc
movsl
jecxz
and
push
sets
sub
mov
adc
aam
shrb
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
or
out
pusha
daa
out
out
mov
sbb
lock
ret
mov
movsb
sti
or
mov
cwtl
stc
lret
cmp
rol
jmp
std
addb
cmp
inc
xor
pop
cmpsl
fnstsw
call
cmp
mov
sarl
cmp
xlat
ja
popl
jle
jne
sbb
cwtl
xchg
shlb
outsl
divb
loop
outsl
bound
push
xchg
repnz
outsl
push
lahf
sahf
int3
sbb
sbb
imul
adc
jle
clc
dec
pop
inc
shlb
pop
jmp
xor
or
movb
movb
pusha
xlat
sbb
sahf
mov
loope
scas
xchg
out
mov
inc
or
sub
sbb
add
mov
sbb
rcll
xorb
mov
xchg
sti
test
rcrb
cmp
and
jmp
popw
adc
sub
movsb
pop
cwtl
mov
pop
add
imulb
xor
pop
adc
xor
add
popa
xchg
mov
jmp
imul
xchg
or
pusha
cmp
cld
xchg
bound
movsb
mov
mov
cs
jno
movb
and
cmpb
movsl
bnd
lret
movsl
das
divb
inc
mov
jecxz
mov
out
sbb
xor
outsb
shll
or
xor
xchg
mov
aas
or
rcrb
popa
xor
pusha
pusha
mov
or
or
jp
jns
mov
inc
cmpsl
add
lock
jbe
mov
fwait
std
dec
mov
dec
xchg
and
xchg
loopne
push
stos
adc
hlt
test
ja
adc
or
mov
mov
out
jecxz
sub
mov
cmp
sub
mov
xlat
cmp
in
add
cmpsb
xor
pop
sbb
cltd
mov
test
and
imul
imul
mov
ljmp
addr16
adc
xchg
cltd
jecxz
sbb
and
mov
push
sbb
dec
loopne
lock
sub
push
aam
shl
imul
aas
imul
or
xchg
mov
ror
mov
xchg
in
mov
inc
negl
lods
or
test
jge
sbb
sbbl
cmp
push
xor
jle
movsl
loope
fstp
xor
pop
lock
loope
icebp
xor
bound
ror
mov
hlt
scas
mov
insl
arpl
aaa
cmpsb
push
push
test
lcall
inc
ss
inc
sbb
repz
push
lret
cmpsb
les
or
cli
arpl
push
notb
adc
dec
and
repz
loop
lcall
adc
mov
mov
mov
mov
cmp
scas
pop
fstpt
icebp
pop
sbb
cmp
xor
add
les
pop
stc
xchg
dec
pop
mov
out
and
mov
shrb
les
aaa
or
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
inc
addr16
js
xor
adc
adc
adc
add
movb
ljmp
sub
fnstcw
cli
lret
dec
and
jecxz
jns
sar
pop
pop
mov
mov
call
sub
pusha
adc
jmp
push
jle
sub
xchg
xchg
push
scas
test
mov
pop
out
and
mov
rclw
jecxz
fsubrp
cld
or
leave
push
int
cwtl
cmpsl
arpl
fistl
jbe
mov
sbb
nop
sub
mov
xor
stos
or
adc
push
pop
pushf
dec
jp
mov
pusha
fcom
test
mov
xchg
call
imul
adc
push
repz
or
out
pop
nop
ds
popf
mov
sub
or
or
pop
jns
clc
or
or
push
ljmp
jno
jno
rorl
sub
shrb
mov
push
jmp
cwtl
into
sub
in
dec
lret
xchg
into
sbbb
arpl
lock
and
outsl
dec
daa
imul
dec
jmp
insl
popa
jne
fnstenv
xor
jecxz
pop
repz
mov
dec
bswap
push
imul
sbb
inc
call
mov
lret
push
nop
inc
add
popf
push
scas
imul
cmpl
in
mov
adc
adc
pop
xor
mov
jns
ja
push
or
xor
sub
jne
ret
cmp
ret
push
pop
adc
ja
dec
scas
scas
ffreep
jno
subb
stos
sarb
mov
cmp
mov
lcall
rcl
in
sbb
jne
or
call
push
jl
jae
sub
push
inc
cmpsb
dec
insl
shrl
ja
sub
aaa
xlat
popf
lods
in
cmc
add
or
arpl
rcl
lods
fistps
stc
cmpsl
pop
jmp
cmpsl
subl
or
inc
push
cmp
lret
mov
and
mov
cltd
sub
leave
push
imul
xchg
idivb
adc
into
cltd
inc
cmpsb
test
arpl
testb
jae
iret
cld
icebp
mov
les
push
cmp
xchg
xor
mov
push
dec
mov
sub
or
arpl
dec
aaa
enter
leave
std
jecxz
in
movsl
fnstcw
dec
loopne
pop
orb
out
dec
inc
and
jbe
rorb
xlat
push
adcb
negb
xor
mov
cmpl
mov
lahf
push
out
lods
je
pop
add
ret
jo
loop
aad
cltd
mov
int3
add
xor
jns
add
inc
sub
adc
mov
or
mov
jnp
xor
and
mov
pop
mov
cs
aad
repz
push
cmc
push
out
repnz
test
cmp
cmp
cmp
pop
fcompl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
push
and
daa
adc
int3
movlps
xchg
shl
test
xchg
adc
pop
pop
adc
orl
enter
setbe
not
push
xor
loope
pop
cltd
jo
dec
sub
pushf
insl
shr
push
js
pop
mov
movsb
jle
mov
arpl
test
inc
adc
sbb
sub
xchg
cmp
and
lcall
ja
sbb
aam
mov
iret
inc
out
mov
lds
add
in
sub
loop
jmp
dec
xor
hlt
push
cmp
fwait
call
inc
imul
mov
jne
sbb
xor
mov
cld
or
xchg
shrl
dec
popf
int3
lret
add
mov
icebp
andl
cltd
mov
cmp
push
cmp
xchg
sahf
outsl
jl
iret
xor
testb
push
hlt
pop
inc
stc
fwait
das
test
inc
call
mov
mov
int3
loop
roll
notl
in
inc
stos
das
pop
dec
push
add
and
or
inc
pop
das
ficoms
cmp
shl
imul
adc
pop
aas
ds
int3
mov
bound
stc
lret
mov
and
or
stos
push
mov
or
imul
sbb
mov
sbb
fstps
push
dec
add
pushf
xchg
jmp
mov
push
push
lods
test
rorl
out
icebp
and
xchg
fiaddl
xchg
stc
sbb
pushf
xchg
int
mov
mov
inc
mov
cwtl
dec
stos
inc
daa
jmp
jge
mov
fiadds
ret
cmp
mov
iret
hlt
adc
loopne
les
mov
fildl
outsl
idivl
jbe
push
xorb
add
fucomip
int3
push
xchg
adc
out
mov
iret
mov
lret
call
pop
inc
adc
je
and
jmp
add
lds
mov
mov
out
dec
out
push
adc
jmp
jb
dec
adc
jb
lret
insb
and
adc
adc
jge
xor
jbe
push
add
stos
jl
daa
push
cld
ds
adc
xchg
or
insb
or
jnp
dec
test
or
out
sub
inc
push
jecxz
js
push
inc
sub
sub
test
cmp
push
in
out
arpl
mov
fwait
mov
push
pusha
cmpsl
sar
jb
popf
sub
ja
inc
lret
adc
pop
lret
out
pop
enter
pop
js
pop
faddp
mov
jmp
adc
bt
addr16
je
inc
cld
jmp
pop
jno
lods
aam
xor
imul
cmpsb
jns
dec
fidivl
and
adc
mov
pop
pop
js
dec
lret
jns
dec
cmp
jnp
test
ja
sub
push
jns
push
jmp
sbb
pop
test
int
and
popf
mov
push
push
adc
les
out
ja
and
jecxz
adc
sub
aad
repnz
shl
jg
ror
push
xchg
andb
ljmp
lods
cld
repz
dec
gs
cmpsb
push
addl
enter
int
dec
movsb
inc
jne
std
lahf
in
jae
mov
mov
jae
fcmovnu
sbb
popa
ds
sub
fldenv
or
push
adc
xor
pusha
inc
js
pop
push
sar
cli
dec
imul
or
dec
mov
xchg
adc
js
fsubl
adcl
in
and
daa
je
sti
xchg
std
mov
scas
sub
lahf
lea
jbe
mov
or
inc
std
testb
loopne
fnstcw
sbb
fisttpl
cwtl
adc
sub
add
cltd
sbb
or
mov
push
orb
cmp
nop
dec
xor
stos
xchg
insb
push
aas
loope
rep
cmp
mov
stos
addl
xchg
sbb
mov
push
fs
sti
adc
outsl
or
mov
pop
push
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
jno
fidivrl
int3
movlps
outsl
scas
push
ljmp
int3
adc
sbb
push
repnz
int
adc
int
in
sahf
cmp
jg
js
xchg
and
imul
fs
inc
out
cltd
imul
mov
in
mov
into
inc
dec
fwait
cwtl
ja
pop
xchg
leave
subl
or
loopne
test
outsl
xchg
out
dec
or
sub
jg
sub
lcall
aaa
shlb
adc
lret
and
outsb
aaa
dec
into
jl,pn
leave
jo
add
test
cwtl
xor
mov
sub
mov
mov
cmp
addr16
ds
inc
mov
pop
movsl
outsb
scas
cld
cmpsb
jb
mov
ret
mov
adc
sbb
inc
jp
js
shlb
mov
adc
sahf
fidivl
fsubrs
mov
stc
ret
cmc
fistps
js
pop
mov
lret
or
sbb
sbb
mov
bound
into
sub
int3
cmpsl
mov
cmpsl
dec
es
into
adc
sub
rcrl
stos
and
sub
out
outsb
xor
jne
mov
in
bound
jp
imul
mov
add
lds
sub
jns
sahf
push
dec
inc
xor
mov
ret
push
insb
mov
xchg
push
cmpl
dec
fwait
aaa
jle
clc
inc
push
ds
out
lea
xchg
repz
or
scas
cmc
ja
cmpsb
scas
scas
xor
jp
mov
hlt
xchg
push
push
dec
xchg
cltd
pop
test
in
imul
adc
movsl
int3
fnsave
pop
adc
xchg
setne
push
ret
hlt
inc
sub
inc
movsb
fwait
imul
dec
cs
xchg
cld
xor
mov
testb
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
or
ficoml
add
lods
sub
dec
movsl
lret
push
insl
pop
cmpsb
jl
mov
scas
xchg
dec
stos
iret
es
mov
test
test
aad
gs
imul
inc
mov
xchg
mov
fdivr
ss
ljmp
adc
std
jns
rorl
mov
xchg
push
push
jmp
push
mov
in
push
lret
test
fdivrs
cmp
adc
cmp
lret
pop
mov
mov
xor
cmp
in
add
lods
jmp
ret
xor
jnp
gs
cmp
xchg
mov
add
xchg
jns
inc
cmp
cmp
push
das
scas
sbb
mov
addr16
mov
enter
and
dec
pop
inc
dec
xchg
push
cs
stos
sbb
fs
xor
int
or
add
cmpsl
lock
out
shll
mov
xor
lea
xchg
push
int
push
mov
dec
out
dec
sub
iret
cmp
mov
cmp
add
push
stc
fcoms
clc
lahf
fnsave
xchg
stos
push
jg
andb
and
testl
adc
icebp
mov
xlat
mov
les
inc
jge
mov
dec
insb
push
sbb
mov
je
adcl
out
lret
int3
mov
mov
adc
jecxz
iret
sti
gs
jb
pop
adc
loop
fldl
sub
xchg
jmp
imul
xchg
fists
and
rclb
cmpsl
xchg
push
imul
sub
lcall
cmpsb
mov
fmuls
add
dec
mov
and
jne
aaa
push
jbe
pop
mull
mov
or
insb
aad
jecxz
test
call
insl
dec
dec
xchg
mov
jns
xor
cmpsl
outsl
std
mov
and
pop
movl
movl
addl
jmp
pop
repz
cmp
pop
data16
or
int3
movlps
xchg
in
ljmp
or
into
mov
out
mulb
stos
test
aaa
loopne
cmp
loop
jb
and
ret
xchg
sbbl
lret
and
push
jp
dec
xor
fistl
fsubrl
and
scas
int3
pop
fstpl
jp
mov
push
outsl
xor
push
mov
mov
mov
pop
sbb
call
lock
mov
or
subl
loope
jo
sbb
sbb
pop
ret
push
movsb
rclb
xchg
movsb
aam
fisubrl
aam
sub
stos
xchg
add
popa
xor
push
push
push
xchg
or
cmp
addr16
cmp
pop
loopne
les
not
pop
and
mov
mov
stc
popa
scas
jg
cld
mov
in
and
leave
icebp
jp
fwait
repz
push
push
pusha
adc
lods
outsl
icebp
sub
fdivs
mov
sbb
pop
and
inc
and
rcr
lock
cwtl
xchg
add
addr16
xchg
xchg
push
stos
out
add
decl
fwait
fwait
pop
xor
test
je
sarb
popa
jnp
mov
pusha
push
jge
je
mov
shlb
adc
jns
jle
mov
into
sbb
sub
pusha
ret
pop
cwtl
inc
arpl
lcallw
xchg
jb
or
arpl
test
sbb
roll
push
sub
pop
cld
subl
loop
push
xor
dec
sbb
pushl
dec
mov
stc
mov
test
push
repnz
popa
dec
push
add
adc
movhps
sbb
fs
xor
movsl
push
adc
bound
inc
sahf
xor
pop
dec
jns
cmc
mov
cmc
xor
push
mov
or
jmp
jmp
daa
lock
cmp
pop
rolb
mov
cmc
xchg
lcall
iret
add
or
dec
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
adc
jle
adc
adc
mov
xchg
jmp
xchg
mov
mov
aam
sub
sub
add
push
scas
test
jbe
leave
cltd
shll
cmp
or
sarl
or
ljmp
xor
or
sbb
mov
lds
xlat
jae
dec
aad
js
pop
jmp
adcl
stc
and
jge
data16
jbe
xor
cmpsl
jno
movl
xor
mov
cmp
jecxz
ffree
push
sub
mov
cld
sbb
push
inc
xor
xor
ficomps
test
sti
loope
jmp
or
aaa
push
mov
push
imul
mov
cld
pop
cmp
lods
nop
stos
mov
pop
sub
jns
sub
mov
inc
ret
jp
push
mov
and
xchg
cmp
stos
lds
inc
mov
lea
dec
sbb
xor
mov
sub
xchg
pop
loopne
pop
or
fmuls
inc
cmp
lahf
add
sbb
mov
out
dec
lock
pop
je
es
mov
gs
arpl
mov
jmp
repnz
adc
imul
arpl
dec
ss
xor
js
cld
pop
aaa
xor
jne
es
or
adc
sbb
aaa
repz
push
adc
stos
mov
sbb
call
jnp
dec
cmp
mov
out
pop
repnz
repz
sub
popa
mov
push
dec
out
add
jl
push
movsl
mov
push
aad
jne
mov
faddl
push
mov
hlt
mov
ljmp
addr16
lock
rol
mov
sarb
jge
decl
cltd
daa
push
mov
lods
xor
das
out
call
outsl
int
add
mov
or
mov
push
sub
fs
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
fstl
loopne
insl
adc
adc
fistpl
dec
out
cmp
jo
inc
cli
and
pop
pop
outsb
xor
jl
push
mov
fs
inc
jne
fchs
xchg
pop
aas
aas
adcl
mov
mov
je
jo
push
push
or
aaa
ds
pop
lahf
arpl
and
inc
lahf
cwtl
jge
push
dec
adc
das
fstpl
push
pop
mov
jl
pop
pop
enter
xchg
mov
shlb
jp
xchg
movsb
in
stos
cmp
add
pop
mov
xor
icebp
test
shlb
nop
dec
fidivrl
fadd
adc
add
in
arpl
mov
imulb
sub
pop
mov
inc
lock
fyl2x
mov
fldenv
pop
adc
aas
aas
fisubl
pop
or
mov
mov
cli
xor
mov
aaa
dec
cmc
movsl
jg
push
add
sub
leave
cltd
jge
mov
dec
call
cwtl
sbb
arpl
inc
mov
mov
mov
mov
daa
jge
mov
mov
and
mov
adc
mov
icebp
mov
cld
inc
sub
fidivl
push
adc
sub
enter
rolb
enter
into
insb
and
mov
or
ljmp
cmp
stc
sub
lea
push
mov
daa
inc
mov
ret
sbb
ss
jl
pop
dec
push
xor
pop
push
add
sti
pop
push
inc
xchg
inc
les
and
orl
enter
jmp
mov
cli
or
gs
xchg
int
ss
lcall
movsb
cmpsl
dec
push
and
shrb
pop
fucomip
aas
mov
scas
xor
pop
ficompl
pop
cmp
mov
sbb
sbb
in
aas
and
dec
dec
loopne
stc
push
movsl
fimuls
push
mov
or
and
mov
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
je
and
movlps
mull
jge
std
or
popa
dec
jg
adc
sbb
pop
pop
add
mov
jae
pavgw
dec
cmp
fisttpll
outsb
lds
jmp
or
aaa
pop
lods
push
out
call
fimuls
jnp
not
sub
xor
pop
adc
fs
icebp
or
fs
insl
mov
add
and
nop
sub
leave
test
cmp
lds
pop
bound
jecxz
and
roll
mov
jns
movsb
ljmp
cmpsl
mov
xchg
add
out
lret
mov
sarl
testb
ret
mov
mov
out
inc
add
sub
dec
jnp
inc
insb
inc
add
cld
or
jle
ljmp
mov
inc
jl
iret
cmc
fsubs
jecxz
xchg
mov
mov
sub
dec
mov
movaps
mov
lock
pop
lds
cmp
lock
pop
sbbl
mov
fisubl
jg
in
mov
sub
mov
mov
cmp
xchg
push
int
jg
cltd
and
loopne
jmp
inc
and
arpl
inc
sbb
mov
jg
pop
push
icebp
loop
decb
and
scas
cmp
outsb
fidivrs
add
rorb
xchg
jbe
push
pop
and
mov
adc
push
sahf
fs
push
inc
aam
pop
pop
stc
dec
sub
xor
dec
push
ret
mov
mov
xor
fmulp
adc
and
movsb
and
stos
mov
xorb
pusha
adc
jae
arpl
inc
stos
das
xchg
xor
ljmp
ljmp
sbb
cmp
jge
das
pop
mov
orb
fwait
call
dec
mov
push
mov
out
or
stos
test
pusha
pop
out
movsl
or
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
ret
mov
int3
movlps
mov
movsb
loop
lret
xor
loopne
aas
jg
add
out
out
repz
pop
adc
cli
gs
inc
jbe
bound
repz
add
cmp
dec
jle
pop
mov
loop
lock
sbb
mov
xor
lret
add
outsb
fcoms
call
js
jo
aas
adc
sub
shll
shrb
fs
ja
das
insl
jg
dec
jmp
dec
pop
dec
scas
cwtl
cmc
test
fs
adc
mov
loope
test
xchg
add
data16
pop
mov
sub
jmp
insb
hlt
andl
test
jg
adc
sahf
inc
stos
mov
sub
inc
jecxz
in
and
stos
adc
js
xlat
loopne
je
aaa
add
sahf
pop
es
call
loopne
mov
mov
mov
jb
adc
sub
jle
cmp
sti
idivl
test
jnp
mov
and
or
leave
outsl
mov
int
mov
loopne
test
xor
sub
add
rorb
xchg
pop
ret
fsubl
mov
or
sub
inc
sbb
xchg
divl
cli
adc
repnz
pop
movsb
or
pop
mov
leave
dec
into
ss
es
jp
or
xor
int
stos
leave
int3
xchg
int
movsb
test
daa
scas
mov
nop
adc
adc
inc
fs
and
jle
clc
xchg
lea
xor
fsub
aam
test
cmovl
mov
xchg
sub
popf
pop
xchg
mov
popf
jp
adc
lods
mov
cs
xchg
dec
sbb
mov
sbb
push
call
or
push
fnstcw
mov
inc
add
loopne
dec
test
pop
sub
js
ja
pop
cmc
out
mov
outsb
ret
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
xchg
pop
loop
push
out
aas
in
hlt
stc
sub
ljmp
rcrb
sub
xchg
movsl
je
mov
rcll
cmp
and
fs
daa
insl
cmp
pop
cs
in
add
fsubr
xor
nop
pop
jo
pop
cmp
jo
or
xchg
stos
pop
xor
add
pop
sbb
and
push
cmp
jp
xchg
xchg
fistpll
and
aad
insl
pushf
cmpsb
icebp
imul
pop
sahf
jmp
into
test
fldt
adc
loopne
adc
sub
jg
mov
jbe
inc
add
insl
push
test
and
jle
fsts
imul
loopne
in
jbe
loopne
xorl
lcall
hlt
test
cmp
xchg
inc
aas
xor
xchg
push
jmp
sub
mov
repz
xor
call
clc
push
cld
cmp
sahf
shlb
stos
arpl
mov
clc
sbb
in
lea
stos
leave
push
cmp
jp
out
aas
out
sbb
push
sbb
jb
pop
push
ljmp
and
xlat
mov
je
outsl
xchg
lods
xor
push
jle
ss
repnz
jg
dec
fcoml
les
decb
ljmp
xchg
fsubp
aas
xchg
sub
adc
paddsb
pop
movsb
addr16
xor
popa
fwait
iret
cli
pop
scas
inc
pop
inc
pop
lods
inc
jbe
xchg
pop
fnstenv
dec
shll
test
daa
fistps
jo
add
push
arpl
aad
cmpsl
xor
insl
repz
lods
in
and
adc
dec
int3
cmpl
popf
fadd
mov
adc
aaa
xchg
xor
icebp
and
push
or
insl
outsb
ret
andl
jge
sbb
xchg
fdivp
jmp
jbe
push
pxor
or
mov
testl
out
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
bound
nop
js
sti
adc
adc
pop
sbb
cmpsl
in
mov
rorl
fincstp
sbb
inc
iret
jne
sub
dec
leave
and
lret
inc
xor
pop
pmaxub
scas
jle
sub
scas
mov
push
out
xor
sbb
jmp
cmp
roll
add
lret
icebp
gs
lock
sbb
or
stos
dec
cwtl
xor
int
push
sbb
cmp
push
cmp
data16
sub
add
neg
decb
pop
pop
or
pop
add
out
add
lret
xchg
inc
aas
and
push
mov
xchg
mov
pushf
aaa
cmp
inc
addl
mov
sub
lcall
fcmovb
sbb
ljmp
mov
push
sbb
daa
les
and
fsubs
jb
bound
jo
and
mov
or
dec
xchg
inc
scas
outsl
inc
inc
notb
mov
mov
adc
cmpb
cmpsb
das
push
loopne
sbb
out
jmp
pop
jno
jno
insb
push
test
sub
mov
dec
int
inc
mov
fstpl
cmp
into
insl
call
or
ss
mov
iret
mov
add
or
sahf
mov
adc
or
fiaddl
lret
dec
pusha
and
int3
sub
mov
sbb
xor
sub
mov
jne
cmp
ss
dec
sbb
in
fadds
orl
pushf
sub
mov
pop
rcrl
outsl
push
repz
jb
imul
or
dec
push
rcll
mov
push
lock
insb
nop
inc
andb
fwait
rorb
or
add
fnstenv
push
popa
rolb
test
movb
mov
pop
jle
lods
jle
es
scas
ret
lods
mov
mov
jns
lock
xchg
dec
mov
or
jmp
movsl
or
add
jo
js
push
mov
int3
movlps
scas
xchg
inc
call
adc
push
jb
push
sub
mov
stos
pop
and
push
and
xchg
jns
test
xor
inc
cwtl
inc
popa
or
mov
add
je
cmp
sarl
xor
adc
xor
ficoms
inc
mov
dec
add
xchg
jnp
popa
push
rol
shrl
loopne
push
sbb
scas
pop
inc
movsb
aam
cs
mov
lret
sahf
ljmp
push
adc
inc
mul
test
and
sub
js
xor
xchg
ficomps
test
fs
jno
dec
xchg
pop
test
mov
rol
popa
xchg
hlt
repz
jns
add
jle
jmp
cmc
xchg
popf
mov
push
stos
nop
cmpsl
ret
jecxz
cmc
in
add
pop
dec
scas
int
xlat
outsl
and
ss
aam
or
inc
xor
sbb
les
xchg
out
xchg
push
fstpt
pop
enter
sub
mov
add
out
sub
or
sub
data16
pop
insb
mov
out
shlb
call
shl
and
xor
cmpsb
sbb
lods
xorb
or
std
shl
cld
push
cmp
and
mov
sub
sub
ds
les
leave
and
push
nop
dec
lods
adc
xchg
xchg
push
pop
mov
jno
loop
dec
or
cmp
inc
repz
movsb
cltd
loope
adc
idiv
mov
outsb
dec
add
adc
jge
mov
data16
pop
dec
inc
adc
js
dec
mov
in
jo
lret
adc
mov
shll
push
shr
lret
push
aas
repz
and
mov
push
cmp
add
dec
mov
or
jp
xor
cmp
cld
xchg
inc
cmpsb
fbstp
imul
push
ja
ljmp
dec
push
fwait
xor
stos
adc
jno
sbb
cmp
fisubrs
pop
call
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
inc
pop
shrl
add
add
pop
mov
insb
xor
pop
daa
inc
stc
es
pop
idiv
shll
int3
fdivrl
push
pop
push
sarb
insl
jns
imul
lock
dec
jge
jl
sub
inc
jbe
sub
je
daa
and
xchg
mov
mov
aam
test
aam
xchg
test
pop
sbb
fldcw
and
addr16
xchg
sarl
stos
js
movsl
and
lret
fwait
insb
aad
ss
aam
pop
mov
xchg
pusha
fsubrl
leave
adc
pop
repnz
jb
shrl
insl
stos
jge
es
test
push
jno
mov
sar
or
aaa
mov
mov
out
fdivs
ss
ja
jno
out
loope
jae
arpl
divl
nop
mov
pop
xor
cmp
xchg
mov
das
or
pop
mov
mov
ret
inc
and
sub
jle
xchg
xor
lret
lret
lock
imul
popf
ds
outsb
in
or
in
sub
jo
sbb
push
add
repz
ret
add
gs
dec
mov
add
xchg
sbbb
stos
sbb
out
sbb
stc
fisubl
and
fnstcw
sbb
stos
or
js
mov
jns
xchg
out
mov
fsubl
jno
test
fsubrp
mov
sub
add
cmp
cmpl
popf
pop
sbb
and
mov
xor
out
adc
push
inc
mov
cmp
cmpsl
push
xchg
test
jbe
xchg
mov
outsb
out
xor
repnz
or
inc
test
add
loop
movb
test
scas
sbb
mov
or
pop
lcall
add
dec
mov
cmpsl
out
jmp
sbb
ds
shr
jmp
cmc
pop
sbb
sbb
ss
cmp
js
das
push
jne
adc
adc
in
ds
negb
push
lock
ret
adcl
or
lcall
jl
adc
mov
das
sub
xchg
or
sub
lds
pop
xor
push
mov
sub
test
jae
testb
int3
jp
and
aad
mov
stos
out
sti
xor
pop
cmp
mov
adc
std
adc
add
push
push
cltd
jecxz
cmc
dec
xor
ficomps
outsl
shll
push
sbb
sarb
loop
xchg
les
adc
push
fs
ss
cli
mov
jo
inc
cmp
ss
xchg
lods
fistpl
lahf
js
stos
xor
pop
cmpsl
fcom
test
cli
popf
mov
test
push
fnstsw
sahf
sbb
xlat
push
out
popa
mov
inc
xchg
orb
jne
cmp
ret
leave
ss
push
add
fs
push
arpl
bnd
mov
into
pop
pushl
jg
mov
mov
push
test
mov
cmp
mov
add
cmp
mov
adc
imul
dec
and
sbb
aad
push
pop
push
into
mov
mov
add
cmp
add
xchg
clc
push
je
stc
lds
aad
lcall
xor
rcll
dec
and
jnp
fldt
cmovge
iret
imul
into
cld
notl
pop
pop
mov
outsb
and
int
div
mov
adcl
mov
or
or
stos
std
cltd
mov
in
mov
out
jns
je
and
mov
pop
scas
test
js
repnz
mov
and
std
jne
loopne
dec
lcall
lret
push
test
insb
add
mov
ljmp
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
dec
loopne
sbb
rcl
ja
sbb
into
cli
sbb
pop
cltd
mov
pop
fdiv
adc
xor
stc
add
xchg
or
or
mov
jge
loop
test
mov
xor
dec
rorb
fninit
cmc
xor
add
scas
pop
xchg
mull
cmpsl
push
inc
in
or
int3
xchg
hlt
daa
pop
mov
pop
fstps
push
inc
cld
cmp
lods
stc
inc
jo
cmp
ret
aas
jl
mov
push
std
adc
fwait
aas
aas
xchg
scas
fldt
imul
pop
xchg
sub
mov
sbbl
cmc
ja
pop
xchg
inc
lret
mov
jmp
int3
xor
pop
jo
and
add
aam
mov
mov
fwait
xchg
shll
add
dec
into
mov
test
lea
daa
sbb
pop
inc
rcll
add
popf
sub
pop
push
stos
mov
popa
mov
push
jle
daa
and
xor
lret
xor
xor
inc
sub
lcall
jno
inc
scas
pop
insl
pop
pop
fnstcw
test
push
das
push
or
lret
outsl
adc
ffree
push
jmp
loopne
rcll
and
cmp
xlat
cmp
aam
and
and
xor
xor
imul
xchg
addr16
xor
arpl
lds
in
ret
push
pop
js
xchg
cld
mov
popf
xor
loopne
xchg
pop
mov
sbb
dec
or
add
cs
out
ret
push
lods
cmp
push
xchg
mov
fwait
mov
divb
arpl
jmp
and
xor
ljmp
call
cmpsb
enter
scas
cmp
cmp
clc
repnz
aas
adc
outsb
mov
mov
jmp
xor
fisttpll
and
rcrb
push
ljmp
mov
in
jg
clc
rcrl
call
aam
jle
mov
enter
fidivrs
inc
sti
fnstsw
jge
nop
mov
inc
adc
arpl
movsl
outsl
scas
pop
andb
xor
enter
xor
pusha
jbe
jns
inc
or
xor
fldcw
inc
push
or
fs
stos
sub
and
mov
popf
mov
int
frstor
add
mov
stos
data16
loop
outsl
aam
pop
test
popf
ret
adc
ss
jp
sub
add
mov
push
test
stos
add
std
call
loop
push
imul
sbb
sub
call
dec
dec
mov
add
in
xchg
iret
subl
jnp
or
mov
push
mov
in
dec
sub
mov
adc
mov
mulb
sub
lahf
sbb
cmp
hlt
jo
xchg
loopne
xchg
in
push
ss
adc
mov
inc
inc
pop
out
sub
arpl
pop
shll
jno
imul
push
rcll
scas
cmpsb
inc
cld
mov
sysret
sbb
fbstp
lahf
and
push
push
cmpsb
and
push
or
pop
loope
repz
data16
pop
jp
ret
xchg
pop
int3
movsb
jmp
pop
sahf
sbbb
push
ss
arpl
imull
mov
imul
and
xor
pop
jp
xor
mov
mov
int3
call
jbe
sbb
mov
clc
jae
pop
xchg
xor
jbe
inc
mov
push
push
inc
adc
sbb
sub
mov
dec
push
jne
add
enter
pushf
pop
lods
and
and
out
cli
mov
mov
mov
sub
ja
mov
xor
leave
out
mov
adc
dec
sarb
xchg
xor
daa
mov
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
dec
shl
pop
test
adc
mov
cltd
pop
xor
or
insl
push
call
adc
lods
repz
stos
int3
daa
test
out
cwtl
shlb
mov
into
mov
jl
fsubrl
inc
repz
xchg
pop
ds
xchg
std
adc
flds
scas
xchg
xchg
inc
mov
outsb
sahf
mov
jle
sbb
sub
push
cmp
pop
sbb
dec
mov
lock
add
jg
push
adcb
mov
inc
sti
out
lea
dec
loope
adc
xchg
xor
pop
decb
cld
cmc
nop
inc
sbb
push
testb
leave
push
push
add
imul
pop
mov
sub
xorb
pop
dec
jb
dec
aaa
adc
stos
pusha
sbb
bound
xor
pop
or
enter
insb
xlat
lds
adc
add
xchg
pop
aad
xor
cmp
mov
add
adc
pop
cmpsl
adc
fsub
jl
cli
or
lea
push
mov
frstor
ljmp
out
inc
mov
fcomi
sahf
xchg
xor
or
lcall
sbb
mov
out
pop
filds
dec
aaa
dec
push
mov
jae
inc
mov
add
inc
outsb
xchg
in
std
sub
push
xorb
js
sarl
push
cwtl
lahf
fidivrl
aad
inc
stos
mov
jno
insl
lcall
mov
jae
fidivrs
test
sbb
mov
es
mov
imul
iret
cmc
mov
xchg
out
xchg
repz
mov
hlt
mov
stos
push
jle
insb
lock
adc
lea
jnp
mov
xchg
fwait
outsl
lods
aaa
or
add
movb
sub
and
out
xor
leave
dec
inc
and
push
test
pusha
push
ds
xchg
mov
mov
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
cmpsb
push
add
int3
movlps
and
sbb
dec
imul
clc
add
add
xchg
daa
call
les
lods
dec
stos
xchg
call
mov
fs
andb
popa
pop
inc
push
lahf
mov
push
dec
xchg
rclb
and
push
mulb
sub
test
jmp
dec
pop
and
jp
push
sbb
je
repnz
inc
pop
mov
repnz
shll
inc
dec
jo
sti
adc
cltd
ja
xor
mov
insb
icebp
into
xlat
add
ljmp
jo
push
hlt
dec
add
loop
popa
adc
add
fisttpll
arpl
lods
test
cltd
roll
xor
sub
jl
data16
mov
pushf
xor
adc
imul
inc
divl
cwtl
push
inc
sub
dec
and
gs
sub
push
addr16
orb
sahf
out
bound
ret
mov
adc
imul
and
cmpb
push
jge
shll
mov
pop
sahf
ficoml
mov
xchg
add
mov
sbb
inc
nop
mov
mov
xchg
movsl
add
fisubs
lcall
dec
stos
lret
sahf
push
xchg
or
scas
xor
repz
add
lea
ds
xchg
daa
es
cmp
stc
test
push
xchg
inc
mov
mov
inc
rorl
clc
dec
add
jecxz
fiaddl
rcl
int3
scas
mov
lcall
pusha
ljmp
pop
xor
xor
cltd
shrb
adc
push
inc
test
stc
sahf
test
push
mov
jns
dec
mov
sub
dec
or
mov
inc
cli
adc
adc
fdivrl
cmc
xlat
movsl
pop
pop
mov
jl
lret
and
sub
push
es
lea
sub
mov
or
push
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
push
adc
ficoms
adc
loopne
sbb
dec
lds
push
ds
or
lods
test
xchg
push
aas
cmp
pop
cmpsl
mov
mov
in
insl
mov
and
push
ss
or
fimuls
pop
and
cli
int3
mov
sahf
jnp
push
pop
sbb
repz
lret
cltd
push
push
fsubrl
push
sbb
xchg
adc
mov
pushf
loop
and
inc
mov
xchg
leave
pop
ljmp
and
pop
addr16
jo
jno
ds
cmpsb
jg
js
push
sbb
mov
bound
pop
push
sbbb
or
frstor
inc
mov
push
push
jbe
mov
mov
daa
pop
test
test
cwtl
ficoml
push
leave
mov
leave
rolb
testb
sti
ja
pop
xor
jg
or
inc
iret
pop
inc
je
inc
out
add
into
push
mov
js
pop
leave
ja
imul
mov
sbb
xor
xchg
lea
sub
xor
pop
adc
sbb
sub
aam
into
push
and
out
lea
jbe
adc
sub
arpl
decb
insl
lret
or
scas
pop
mov
cmpsb
inc
dec
or
jp
pusha
lahf
fsubl
jl
mov
icebp
push
and
rcl
dec
pop
clc
loope
data16
mov
sub
mov
cmp
repnz
pop
inc
xor
fisubrl
dec
mov
shll
push
sub
gs
add
push
jb
aam
shll
and
mov
out
fldl
mov
add
movsl
mov
cmp
call
sbb
sub
xor
jg
push
test
loop
cmp
into
into
pop
in
insb
mov
ffree
int3
cltd
or
pop
fwait
cmp
movsb
and
filds
jns
inc
aad
mov
fdivl
repz
and
add
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
scas
ljmp
int3
movlps
inc
insb
pop
sbb
cmp
out
ljmp
xor
call
mov
mov
stc
mov
jle
aam
orl
lahf
lret
inc
jl
into
jecxz
js
in
aad
mov
jge
out
pop
sub
and
fcomps
jne
inc
jb
add
push
stos
jp
pop
xor
mov
insl
insl
mov
jge
or
adc
pop
jne
xor
or
and
test
add
cli
movsb
jnp
or
ss
jmp
stos
pop
lret
mov
mov
ss
sbb
js
sbb
js
gs
sbb
popa
clc
je
mov
mov
mov
cltd
incb
pop
lcall
fisubrs
and
jecxz
mov
fisttps
into
cmc
mov
iret
idivl
hlt
cmpsl
fdivs
lock
lea
cmp
mov
or
add
cmpsl
xchg
adc
in
cld
pop
outsb
lea
jb
repnz
mov
sbb
xchg
dec
add
add
and
or
mov
add
jg
fxrstor
jb
xchg
inc
movsb
lock
scas
lea
jp
xlat
push
testl
lods
push
xchg
add
mov
push
iret
or
movsl
mov
push
xor
mov
out
stos
mov
loop
pmulhuw
xor
dec
xor
mov
stc
aas
std
mov
jg
movsl
lea
das
call
les
mov
incb
lds
xor
rcll
inc
jge
fnop
push
scas
das
push
std
xchg
xor
ret
lods
subb
mov
jae
call
fistpl
mov
rep
jbe
and
xchg
xor
test
fbstp
cmp
aad
adc
out
lret
aad
aam
sarl
out
lods
mov
adc
in
fldl
jb
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
das
pop
lods
jge
adc
adc
push
xor
adc
sub
jmp
cmc
cmp
icebp
dec
testl
jnp
rcrb
pushf
shll
pop
loope
push
in
or
stc
dec
cmp
fwait
mov
popf
fistpll
mov
sarl
scas
dec
add
addl
and
xchg
rcr
scas
cmp
xor
test
fwait
xchg
into
imul
lods
push
xchg
dec
and
cs
sub
jmp
adcl
loop
sbb
pop
mov
sahf
jnp
sahf
mov
inc
shlb
les
dec
sub
sbb
sub
jo
xchg
cs
push
inc
mov
lret
mov
adc
inc
and
repnz
mov
jns
mov
mov
inc
int3
mov
push
in
pop
lret
sub
test
jmp
push
nop
shrb
lahf
and
pop
mov
insl
mov
or
dec
dec
jb
icebp
outsl
ljmp
cli
xorb
fstpt
imulb
shlb
dec
sbb
add
sbb
test
jb
in
out
add
push
scas
or
mov
test
or
cmp
pop
cmp
repnz
jg
jno
and
fdivs
mov
fdivp
cmp
dec
mov
in
outsl
out
or
adc
jle
sub
xchg
mov
inc
iret
cmp
pop
lcall
or
test
cmpsb
cld
push
aad
insb
lcall
and
push
aaa
movsb
jae
andb
jo
cs
dec
lods
push
inc
popf
in
inc
push
sahf
dec
in
cs
aam
out
test
lods
jnp
push
fs
adc
out
icebp
popa
fstpt
pop
aaa
push
sbb
jae
fists
jnp
into
or
out
add
sbb
or
je
pop
push
adc
stc
jbe
mov
cmc
push
int3
loopne
stos
stc
mov
xchg
xlat
inc
ja
xor
fwait
rcr
sub
js
lret
or
fdivr
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
arpl
adc
adc
testb
cmpsl
les
jle
into
sub
stc
je
es
shrl
pop
pop
std
xchg
and
xchg
cmp
lds
ret
pop
out
adc
jb
add
rep
sub
xor
mov
add
dec
cmpsl
into
sbb
aas
sbb
pop
dec
imul
xchg
sbb
fsts
in
push
push
dec
or
nop
jo
pop
sub
jmp
mov
mov
sbb
lods
das
outsb
test
gs
jnp
loop
sarb
adc
aam
hlt
dec
or
jne
cmp
mov
adc
jge
sub
push
pop
fadds
ret
push
imul
test
dec
adc
out
call
adc
ja
sub
lods
stos
adc
insl
mov
or
test
outsb
push
into
mov
xchg
outsl
jl
fwait
mov
das
or
jnp
adc
inc
mov
pop
jge
mov
dec
xchg
mov
cmp
mov
outsb
adc
push
mov
lods
movsl
ja
or
ljmp
xlat
adc
inc
push
dec
imul
push
jbe
mov
xchg
jl
sbb
pop
mov
cmp
mov
js
pop
jno
dec
adc
adc
mov
in
mov
clc
push
daa
jge
sbb
mov
fcomp
jae
push
out
cli
mov
jecxz
cmp
fnsave
jecxz
loopne
push
lret
loop
jns
dec
es
js
cltd
insl
fsubr
inc
cltd
pop
ja
bt
adc
ljmp
mov
mov
fadds
or
pushf
mov
fistpl
mov
xrelease
popa
pop
int3
jnp
punpckhwd
loope
mov
inc
fnstcw
mov
mov
xchg
lds
adc
icebp
jle
or
lods
scas
push
cmpsl
push
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
mov
int3
movlps
out
jb
loop
and
inc
jo
ror
ljmp
fwait
cmp
inc
rcl
pop
insl
xchg
cmp
in
adc
mov
into
fdivrl
sub
outsb
pop
sub
cmp
adc
sub
mov
in
into
iret
sub
loopne
jmp
daa
stos
mov
test
or
or
inc
jl
dec
std
icebp
aad
les
add
jmp
fimuls
push
addl
sbb
mov
in
xchg
fs
adc
mov
out
int3
mov
jae
bswap
les
cmp
popf
mov
stc
repz
test
cmc
mov
lods
push
sti
movsl
daa
xchg
cmp
aam
push
popl
push
inc
push
lods
mul
inc
inc
iret
ljmp
aam
rcl
push
add
icebp
cmp
add
add
mov
shlb
lea
pop
clc
movsb
rcr
xor
xchg
lcall
dec
sbb
cs
popl
pusha
rorb
aam
jl
hlt
in
inc
adc
lods
mov
inc
mov
ud0
scas
mov
push
push
mov
pop
rcll
jge
out
in
mov
call
fcoml
lcall
into
mov
fwait
cld
sarb
pop
dec
sbb
fildl
add
pop
xchg
xlat
int3
xchg
arpl
mov
and
enter
sbb
jle
loopne
jp
xor
pusha
sub
xchg
push
dec
loopne
add
sbb
mov
popf
loope
xchg
jl
loop
rol
sub
xchg
enter
cwtl
adc
adc
sub
jecxz
dec
sub
xor
mov
pusha
scas
sub
mov
scas
mov
jo
or
push
dec
dec
mov
xchg
nop
inc
cltd
test
sub
arpl
adc
iret
movsl
mov
pusha
mov
add
icebp
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
push
ret
cmpsb
les
adc
mov
jmp
cmp
xchg
pop
jne
add
push
arpl
mov
xchg
mov
mov
inc
mov
imul
pop
jle
cmp
in
loopne
adc
pop
clc
stos
outsb
data16
stc
mov
out
in
pop
and
cmpb
jp
mov
arpl
mov
sub
insl
aaa
xorb
xor
fwait
push
lcall
dec
mov
dec
test
in
xorb
sub
dec
mov
xchg
xor
add
xchg
aad
clc
xor
repnz
or
outsb
push
aam
or
andb
iret
adc
out
mov
je
mov
xor
lock
mov
jnp
std
mov
and
jl
es
jbe
xor
sub
jo
mov
enter
loop
aas
or
or
daa
dec
sbb
ficomps
movsb
push
lcall
mov
jge
repz
jno
pop
cmp
adc
ret
dec
adc
mov
es
fbld
xlat
inc
dec
dec
lret
inc
push
jl
jmp
mov
mov
and
adc
or
addr16
lret
push
jp
pop
sbb
and
xchg
jl
addl
aas
sti
inc
cmp
sahf
lea
sbb
xchg
or
cmpsb
sarb
aam
xchg
in
cmpsl
sub
push
repnz
or
xor
pop
push
outsb
pop
std
mov
scas
xor
xor
dec
stc
mov
xchg
mov
lahf
stc
mov
push
sbb
adc
inc
enter
push
sub
call
out
push
and
sub
out
mov
or
mov
dec
mov
cmp
mov
push
xor
cmp
stos
ret
mov
mov
jmp
or
cmc
jg
mov
enter
arpl
addr16
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
std
sbb
pop
rclb
js
pop
call
aad
ljmp
icebp
test
cwtl
fstl
xchg
mov
lds
jg
jne
jmp
cmpsl
pop
sbb
out
inc
add
in
stos
dec
add
cmp
add
lds
je
xchg
dec
pop
push
iret
mov
mov
mov
cmp
cs
into
lods
xchg
xor
leave
cmpsb
std
mov
mov
aaa
add
mov
adc
cmpsl
cmp
movsl
std
mov
loope
cwtl
aas
repnz
fwait
ds
aam
fildll
cmp
inc
jmp
jne
dec
scas
sti
mov
nop
adc
aam
scas
repnz
push
and
out
and
and
or
pop
aas
mov
and
bound
arpl
xchg
sub
rcl
dec
sbb
mov
enter
faddl
scas
int3
push
jnp
scas
cld
lods
outsl
ds
lret
push
test
mov
fidivrl
inc
push
lock
cmp
popf
cmp
cltd
bound
bt
sbb
sub
mov
cmc
xchg
je
repz
fcomps
jmp
push
ret
adc
testl
jbe
add
jo
and
mov
and
adc
imul
jp
inc
fadds
add
lahf
je
and
repnz
repz
out
xchg
cs
in
hlt
fs
jbe
xchg
inc
mov
mov
xchg
and
icebp
xchg
iret
cli
jecxz
aas
fwait
loope
pop
out
ret
mov
mov
pop
jns
and
stos
std
mov
xchg
mov
lods
push
mov
inc
mov
dec
je
arpl
or
pop
sbb
int
aas
mov
inc
rcr
aaa
dec
lock
cld
inc
nop
jge
loop
sbb
adc
mov
in
stos
repz
jno
loope
iret
cmpsb
cmp
shll
xchg
xor
out
mov
insb
sub
pushf
sarl
or
ja
mov
scas
add
or
repnz
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
lcall
int3
movlps
fcoms
xor
lret
mov
aad
mov
ret
fisubrl
sbb
leave
push
das
cmp
fists
fbld
pop
adc
dec
outsb
cli
jmp
dec
outsl
in
fcmovnb
jns,pn
adc
outsl
mov
adc
lock
movhlps
mov
in
push
mov
cmp
adc
out
int3
sub
cwtl
in
add
and
inc
adc
mov
in
and
adc
and
mov
jnp
lock
into
mov
lcall
les
insl
test
sbb
sti
inc
test
push
pop
pop
jo
push
or
or
test
xchg
stc
outsb
aad
dec
pop
cmpsl
in
dec
fadds
je
adc
cmp
mov
bound
adc
inc
shll
adc
push
inc
rorl
sub
mov
out
jno
and
fisttpll
orb
dec
and
mov
lret
ja
dec
outsl
mov
test
jo
add
fst
pop
pushf
mov
push
orb
and
add
sti
xchg
pop
shlb
add
push
popf
pop
enter
enter
lock
mov
xchg
push
in
aas
pop
iret
out
movsb
out
inc
mov
xor
jnp
push
jae
sbb
js
jbe
fsubrs
stc
jne
cmp
cmc
add
dec
test
stos
fistl
addb
or
stos
jge
std
cmp
test
dec
pop
loop
rcr
adc
cli
inc
popf
jne
pop
out
push
int
mov
lods
into
outsl
mov
xchg
shr
nop
mov
lcall
sarb
adc
xchg
out
mov
dec
rcr
fsub
push
jecxz
addr16
fimuls
mov
popf
mov
test
dec
push
pushf
mov
cmpsl
pop
mov
cmpsl
jl
jl
mov
mov
inc
pusha
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
ja
mov
int3
movlps
cwtl
leave
or
add
sub
mov
int3
push
dec
mov
jae
and
add
pop
cwtl
push
mov
cmpl
imulb
leave
adc
inc
in
lock
jno
mov
out
loop
popf
cmpsl
jge
sti
sbb
xchg
and
shrl
out
test
mov
xchg
fdivp
mov
mov
lret
lcall
pusha
lods
test
rorl
out
sbb
jne
push
pusha
jns
mov
mov
sti
ds
jb
stos
inc
mov
repz
jecxz
push
fldln2
pop
js
stos
add
stos
or
repnz
negb
int3
xlat
xor
xchg
cwtl
sbb
adc
push
lahf
lods
das
mov
shrl
xchg
dec
add
bswap
popf
mov
popl
push
push
sbb
sbb
sbb
cmc
jne
fstps
mov
rclb
push
mov
dec
js
sahf
ret
xchg
or
mov
mov
mov
shlb
fiadds
pop
push
mov
push
pop
stos
leave
lret
dec
sbb
jae
and
xchg
jbe
rorl
xor
je
scas
int
mov
pop
xchg
call
rcll
fs
push
jo
scas
das
or
scas
xchg
lcall
fs
lahf
sbb
dec
mov
xorb
out
pushf
nop
jecxz
cmpsl
cmp
xchg
addr16
fistps
and
dec
add
cmp
pusha
xor
pop
add
inc
or
out
fdivr
repz
and
sbb
stc
mov
out
and
xlat
xchg
fwait
loop
mov
and
rolb
sti
mov
adc
shlb
out
cltd
sbb
add
and
ficoms
shlb
mov
sbb
out
testb
das
xchg
inc
pop
ljmp
sbb
fs
xlat
mov
jg
ror
out
fdivl
lret
dec
mov
out
mov
test
lods
lahf
jns
mov
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
lcall
pop
jns
js
clc
push
ror
sti
adcl
xorl
lds
or
sbb
cmp
pop
push
push
xor
sub
inc
sahf
cli
add
adc
orb
xchg
mov
sub
sahf
fstl
and
enter
push
sti
jb
sahf
dec
mov
add
lods
inc
int3
dec
fisttps
jl
inc
push
lods
pop
pop
cmp
stos
fimull
sbb
jecxz
pusha
les
jne
xor
std
push
stc
inc
push
push
cmp
jge
aad
ja
mov
imul
sbb
cmp
lods
mov
loope
sub
popa
arpl
lock
mov
and
shll
sahf
ret
adc
cmp
cli
hlt
into
mov
out
sbb
mov
je
cmp
cld
adc
cwtl
lret
lcall
mov
or
ret
adc
xchg
mov
fucom
aas
cmp
addr16
dec
call
or
and
sbb
dec
mov
icebp
mov
call
mov
adc
push
pusha
add
sub
add
insb
pushf
cmp
jnp
out
arpl
xchg
andl
sti
aad
psubq
rorl
xor
es
imull
aaa
cmp
push
cmc
push
lahf
and
dec
pop
in
cmp
aam
lea
or
jno
cmpsl
mov
ja
lret
not
lcall
jo
outsl
pop
inc
and
xorl
dec
mov
clc
xor
sbb
jne
pop
and
sahf
inc
ficoml
ret
pop
and
mov
lods
sti
mov
pop
aam
lds
pop
rcrb
xchg
fmull
adc
inc
cli
cs
jb
rolb
pop
mov
sqrtps
frstor
mov
push
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
xor
int3
movlps
pop
jne
sbb
cwtl
inc
pop
negl
dec
fsubs
popf
push
data16
fsubrs
push
clc
mov
sbb
xchg
popf
stos
test
inc
mov
mov
in
loope
pop
and
daa
jo
mov
cmp
gs
jnp
xchg
aas
adc
aad
xor
out
dec
dec
cmpsb
ljmp
push
push
add
sbb
dec
sahf
cmp
aas
push
imul
into
cmp
rolb
add
clc
mov
jl
dec
ss
xchg
xchg
inc
and
jae
lret
jno
cmpsl
insl
stc
dec
push
imul
mov
and
je
call
shll
xchg
xor
outsb
mov
je
cmp
push
pop
mov
add
pop
cmp
pushf
imul
in
mov
stos
lea
call
push
das
jl
stc
pop
jno
xlat
jecxz
inc
fildl
cmp
stos
test
add
cmp
inc
int
dec
fucomp
fucomp
inc
ret
idivb
xchg
mov
repz
leave
in
aaa
cwtl
cmp
jp
sahf
js
fdivr
nop
mov
sbb
ljmp
mov
cwtl
xor
inc
jg
adc
and
mov
scas
push
sub
jge
repnz
sbb
add
xchg
xor
sahf
adc
cwtl
loopne
movsb
orb
add
jbe
sbb
push
lret
mov
jae
sti
pop
mov
imul
inc
icebp
cmp
div
mov
loop
pushf
mov
push
sub
sub
inc
adc
addl
and
inc
cmp
xor
cmp
aam
std
pop
hlt
rorl
cmc
push
aas
ficoml
test
cmp
in
dec
cmp
jmp
add
push
mov
leave
adc
adc
sub
mov
and
push
and
stos
imul
jo
cmpsb
jmp
push
jbe
popf
lea
lea
hlt
adc
jecxz
xor
xor
mov
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
cmpb
movlps
xlat
ret
pop
loopne
push
dec
in
add
iret
dec
dec
or
pop
jp
test
scas
movzbl
mov
mov
and
push
out
jle
jb
jo
or
fmulp
cwtl
in
rcrl
dec
mov
and
rorl
or
dec
pop
jo
ret
shrl
sub
ret
push
mov
xchg
inc
call
lahf
shlb
pusha
push
aad
inc
fimull
lds
dec
or
jmp
popa
leave
mov
lea
movsb
aad
inc
outsl
out
leave
imul
leave
adc
jg
in
jb
dec
jle
int3
xchg
sbb
addb
sbb
movsl
insl
loop
inc
jns
push
int3
js
fdivrl
aad
ret
mov
mov
mov
insl
pop
sub
mov
ficoms
or
xchg
imul
cmpsb
popf
shrl
sbb
repnz
push
fnsave
fdivl
add
mov
push
jge
test
pop
xchg
repz
mov
jmp
shll
frstor
fidivl
sub
clc
adc
shll
int3
sahf
xor
pop
xchg
jle
jp
add
or
xchg
ljmp
sahf
cs
shll
pop
out
adc
pop
out
lret
aam
pop
out
mov
push
out
cs
push
in
call
mov
out
adc
enter
jle
int
mov
mov
dec
mov
divb
jg
int3
mov
dec
push
mov
out
rcr
insl
and
lcall
dec
push
jp
sti
mov
sti
add
fdivrp
adc
test
es
jb
cwtl
repnz
std
btc
pop
rorl
mov
xorl
mov
lods
mov
jb
outsl
sbb
xor
in
jle
mov
dec
aad
popa
jle
sub
fldln2
sbb
cli
jg
cld
adc
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
jle
stos
adc
adc
mov
and
xchg
in
push
push
aam
decl
hlt
or
xor
xchg
push
je
cmc
pop
fistpll
adc
cmpsb
daa
fs
in
sub
push
aad
sti
xchg
pop
cmpsl
int3
in
mov
addb
jge
cli
sbb
sbb
lods
jne
xor
xor
jnp
xchg
xchg
mov
cmp
and
insl
mov
es
push
jle
in
jecxz
pop
dec
dec
pop
je
and
cmp
mov
insl
cmp
fsubrs
adc
push
pop
push
xor
mov
jb
roll
jae
test
bound
push
outsb
jae
cmp
out
mov
dec
mov
test
out
inc
jmp
dec
je
push
mov
cwtl
cmpsl
roll
pop
jecxz
test
testl
lea
jne
cli
add
inc
leave
out
dec
imul
into
lock
fidivrl
aaa
add
cmp
popf
enter
rolb
addr16
rol
fbld
jno
popa
adc
icebp
outsl
out
and
ds
inc
fistpl
mov
lret
lret
cli
or
jo
cmpsl
in
xchg
addr16
xlat
nop
out
cmp
push
mov
leave
and
inc
pop
jno
aam
or
add
jns
in
loopne
fsincos
push
enter
ja
fsubl
sti
in
ret
out
leave
stc
sti
int
outsl
into
sbb
add
imul
stos
pop
bound
mov
inc
add
jb
sub
inc
aas
cmc
jno
test
daa
pop
imul
cmp
call
mov
mov
scas
mov
xor
rorb
pop
lea
mov
sarb
aas
call
imul
push
frstor
mov
inc
xchg
test
ljmp
jb
add
xchg
sub
sbb
fistps
xor
jmp
dec
pop
mov
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
es
cmpsb
adc
adc
dec
repz
push
pop
xlat
icebp
loopne,pn
mov
cmp
iret
mov
pop
push
out
aad
pop
cli
sbb
sahf
push
fdivs
js
shll
jecxz
inc
std
out
es
js
jns
jp
pusha
sbb
mov
leave
jl
cmpsl
mov
and
lea
push
mov
outsl
loope
sub
rcrb
cmp
shl
mov
add
outsl
dec
div
pop
inc
and
mov
xchg
and
inc
mov
xor
sbb
mov
mov
js
sbb
dec
jb
xchg
or
mov
mov
push
dec
call
stos
aas
jmp
shll
lcall
mov
ret
inc
pop
lea
mov
mov
out
mov
push
pop
loopne
sub
mov
in
adc
adc
int3
mov
pop
xchg
or
and
outsl
xor
mov
or
push
popf
xchg
rcrb
into
cmpsl
sbb
or
jecxz
push
ljmp
loop
dec
pop
cli
add
mov
lcall
jle
sbb
or
xchg
outsl
or
mov
or
lret
push
sar
cmp
inc
lahf
pop
cli
aam
mov
jo
jmp
jp
jmp
jmp
push
mov
cli
scas
dec
mov
mov
cld
add
mov
shll
ja
cmp
push
inc
mov
ljmp
mov
push
aam
das
testb
sub
popf
push
mov
adc
fldt
enter
mov
negl
push
seto
fsts
lahf
es
lods
gs
popf
aaa
inc
mov
negb
mov
push
leave
mov
inc
nop
dec
adc
push
ds
add
xchg
gs
ds
inc
in
push
mov
cmp
xchg
out
sti
ret
sub
xor
inc
adc
pop
push
or
adc
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
cmp
xchg
js
mov
adc
mov
fstps
in
repnz
ljmp
insb
out
rclb
les
pop
pop
xchg
or
leave
outsb
aam
push
lcall
inc
xchg
mov
mov
test
adc
fadds
sub
mov
jle
jnp
xchg
lret
fnstsw
dec
sub
ja
shrl
rorl
and
int
and
mov
mov
dec
clc
mov
inc
in
aas
rolb
xchg
sbb
in
jno
aaa
mov
sbb
xchg
sub
leave
mov
loope
lods
push
dec
hlt
roll
insl
pop
push
mov
jns
jmp
and
push
cmp
addr16
gs
xor
ss
dec
inc
fdivr
daa
cmp
xor
pop
xchg
fsubrs
and
xor
add
gs
aad
jo
movsl
test
jo
repnz
mov
cmovne
mov
pop
push
cmp
jnp
push
sbb
test
lea
pop
pop
je
jge
sub
fcmovne
add
cmpsb
or
fdivrl
test
xor
add
insb
mov
cmpsl
push
mov
mov
sbb
mov
xchg
and
fdiv
mov
and
imul
pushf
add
pop
enter
dec
lds
inc
rcll
iret
and
push
popa
out
out
and
jno
add
or
mulb
xchg
out
test
push
push
ret
xchg
sbb
pusha
mov
xchg
push
jbe
add
sub
test
add
shll
fdiv
or
cmc
enter
sub
adc
into
or
push
shrb
fiaddl
xchg
fs
pushf
repz
push
insb
shr
stc
shl
imul
add
scas
ds
push
xchg
test
cmp
push
loopne
xchg
xorl
inc
jbe
pop
inc
lret
add
repnz
push
add
inc
and
aaa
pop
add
or
int
je
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
inc
repz
lods
aad
adc
adc
or
adcb
cmpb
xor
jae
fstpt
mov
push
jmp
add
sub
mov
std
aas
aas
push
inc
call
mov
iret
mov
mov
repnz
mov
adc
adc
into
xchg
dec
lahf
les
lods
cmp
push
xchg
subl
dec
icebp
mov
pop
sarl
inc
mov
lock
dec
mov
push
rclb
mov
and
out
sbb
testb
mov
lret
ja
into
push
out
inc
test
dec
int
mov
mov
jge
in
adc
adc
ds
popf
dec
arpl
clc
idivb
xchg
add
aam
jl
out
push
inc
out
int
xor
or
jno
mov
xchg
xlat
push
rclb
shlb
inc
movb
mov
sub
jno
dec
or
jo
in
mov
out
dec
xlat
mov
repnz
dec
out
das
jp
inc
lret
daa
add
inc
dec
mov
or
pop
cmp
leave
add
bound
lods
pop
or
ret
xchg
mov
jae
xor
sbb
in
or
mov
shlb
fcmove
xchg
test
xor
cmpb
jo
adc
cmpl
lods
jns
sbb
jne
push
addr16
shrb
lcall
out
inc
sub
in
lcall
jns
divl
popf
and
xchg
add
popf
pop
mov
fwait
or
into
leave
lea
push
movsb
cmpsl
hlt
adc
xchg
enter
xchg
paddusw
inc
pop
mov
pop
arpl
je
inc
ss
lock
loope
lcall
stc
pop
mov
ja
jns
gs
ret
stos
enter
cwtl
insl
xchg
mov
popfw
aam
loopne
sub
inc
and
inc
jb
pop
mov
or
mov
xor
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
sub
adc
movlps
mov
or
fbld
push
shll
jp
dec
test
cmp
rolb
pop
cs
mov
lods
inc
adc
cwtl
pop
cmc
es
scas
mov
fcoml
out
mov
test
jb
xor
mov
cmpsl
fs
rcl
or
xlat
pop
sub
push
movsl
push
adc
push
out
ss
out
push
aaa
cld
dec
icebp
fisttps
sub
adc
inc
in
cmp
fisubl
fs
scas
data16
pusha
in
cs
adcb
je
cmp
xchg
push
frstor
pop
int3
mov
repz
ret
repz
dec
mov
pop
loope
pop
fcompl
sbb
jge
inc
pusha
or
scas
mov
and
sbb
es
sub
cltd
aam
mov
adc
outsl
js
sti
push
popa
shr
stos
sub
sahf
adc
je
ljmp
inc
sahf
insb
das
loope
add
inc
es
cwtl
push
fsubl
sahf
in
mov
inc
mov
fidivrl
xor
and
lea
es
popa
aaa
mov
incl
push
lods
fnsave
scas
inc
sub
push
out
out
jne
and
cs
pushf
mov
xor
repnz
int3
jg
js
mov
fcoml
jns
fistpll
mov
cmpsl
ljmp
mov
push
add
ds
mov
push
jne
lahf
stc
push
pop
fstp
mov
mov
push
aaa
dec
cmp
xor
stos
sahf
jnp
movsl
or
sub
and
lods
test
inc
out
xor
repnz
inc
into
pop
xchg
cld
push
lret
or
jle
lods
insb
cmp
adc
aam
mul
sbb
out
mov
mov
sbb
dec
mov
cld
or
outsb
pop
mov
out
into
dec
ret
outsb
xchg
push
and
mov
fdivr
scas
jecxz
add
repnz
sbb
insb
pop
pop
or
and
in
add
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
insb
inc
xchg
adc
adc
iret
xchg
xor
pusha
aad
dec
mov
mov
dec
adc
push
imul
lds
jmp
sub
out
inc
inc
xchg
ror
xor
or
stos
sbb
sub
sbb
cvtpi2ps
or
mov
adc
xor
scas
out
sbb
call
xor
cmp
lds
cmp
gs
mov
lcall
mov
mov
lfs
push
mov
int3
mov
lds
insb
push
and
cmpsl
mov
imul
add
mov
adc
cmp
inc
lds
pop
enter
xor
addb
mov
cmp
das
mov
int
cltd
movsb
push
mov
out
mov
add
fcmovbe
adc
push
je
pop
sub
lds
inc
scas
xor
add
xchg
cmp
cwtl
sub
adc
in
js
dec
mov
sbb
mov
nop
aam
int
adc
jne
pop
sub
pop
jge
shlb
mov
ljmp
sub
lods
add
in
cwtl
mov
or
loop
aad
imul
add
mov
mov
sti
mov
sbb
hlt
xchg
fistpll
dec
and
cmc
adc
pop
push
ja
sub
subb
pop
ret
lods
xchg
inc
mov
ja
insb
jp
sub
jae
xchg
int
cmp
jp
nopl
pop
mov
add
nop
cmpsb
mov
test
push
push
add
sbb
int
pop
std
dec
in
sbb
mov
mov
sbb
enter
daa
jbe
push
dec
add
fsubs
imul
push
outsb
outsl
mov
loop
test
ss
fiaddl
popl
sti
je
xchg
xor
shr
test
inc
sub
sub
hlt
aam
mov
jns
cmc
repnz
mov
lock
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
and
mov
int3
movlps
xor
mov
int3
mov
pop
inc
stc
push
sub
push
cmc
cli
ss
ret
jg
jbe
fistpll
mov
push
dec
dec
sbb
jle
scas
idivl
mov
ret
mov
movsl
repz
jge
dec
int3
xor
popa
stc
mov
jns
iret
aas
test
mov
sub
aad
test
ret
cmp
nop
lock
xor
loopne
sub
sbb
mov
jmp
jge
js
jbe
adc
lret
fmul
push
and
mov
adc
add
lods
ret
cmp
or
jp
call
in
call
lods
shlb
sbb
aaa
ljmp
fwait
stos
or
repnz
mov
addr16
jecxz
cmp
sti
add
adc
popa
pop
fs
xchg
test
lods
sub
mov
jnp
jne
leave
jo
dec
mov
dec
aas
jbe
mov
out
sbb
cmp
cmp
mov
out
andl
es
test
scas
outsb
bound
fsts
adc
mov
xchg
mov
cmpsb
sahf
sti
and
and
cmp
sub
mov
dec
add
jnp
or
arpl
lock
fcoms
movsb
lret
adc
out
inc
rolb
das
adc
or
mov
loope
sub
push
mov
mulb
xor
lcall
cs
sub
add
rclb
pop
push
jge
aas
push
mov
fdivs
shrb
subb
jae
push
or
mov
test
adc
les
inc
imul
adc
fisttpl
lods
mov
or
cmp
mov
adc
test
or
cli
pop
pushf
and
in
repz
lods
std
stc
aas
addl
dec
xchg
nop
adc
push
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
push
punpckhdq
movlps
dec
inc
sbb
and
lds
rcll
pop
push
loop
aad
sbb
or
test
pop
dec
pusha
jbe
xchg
xchg
mov
movsl
or
sub
pop
cltd
shll
dec
cs
xchg
mov
stos
or
cli
decb
rorl
mov
push
add
push
mov
es
xchg
sar
mov
sbb
int
popa
lods
add
push
sbb
xor
dec
ret
ja
xchg
cltd
fstp
mov
adc
mov
lods
xchg
jae
lret
inc
ds
adcb
xchg
xchg
jp
orb
movsl
orl
pushf
stos
mov
fldt
rcrb
or
and
push
dec
enter
push
jns
int3
jg
cld
adc
cltd
xor
xchg
ljmp
mov
add
mov
or
cltd
sbb
popf
shl
daa
push
push
mov
push
sbb
adc
adc
or
std
lds
xor
insb
les
int
repnz
cli
mov
pop
fdivrl
mov
mov
push
xor
orl
dec
adc
out
mov
sbb
mov
pop
pop
xlat
movhps
loope
adc
xchg
std
ja
and
sbb
xor
pop
cmpsb
pop
call
sub
xchg
push
push
cltd
pop
jmp
pop
inc
les
loope
adc
arpl
push
xchg
or
inc
leave
aas
jae
andb
sub
fsts
mov
mov
iret
nop
ja
int3
cs
pop
dec
jne
jge
xor
icebp
insl
vpcmpeqd
cmp
ret
iret
inc
ficoms
xchg
sub
cmc
data16
rcr
push
inc
sub
mov
movsl
lods
test
push
in
adc
shrb
adcb
dec
jge
cmp
push
push
mov
adc
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
je
jle
test
adc
xor
ret
mov
jne
mov
mov
and
add
scas
fldl
pop
push
fs
dec
cmp
mov
stos
adc
pop
sub
adc
xor
ss
mov
sbb
adc
xchg
pop
xor
cwtl
pop
mov
or
xor
imul
add
and
push
jbe
push
push
leave
call
xchg
lods
daa
mov
push
cmpsl
adc
sub
gs
mov
cmp
gs
mov
mov
rcl
mov
test
sahf
and
push
jmp
rorb
mov
shlb
pop
std
jne
cmp
insb
int3
adc
call
push
mov
cmp
mov
mov
pop
cwtl
mov
xor
cli
je
xor
push
mov
add
outsb
int
and
rorl
dec
out
jnp
pop
jp
push
xlat
scas
jl
ss
je
sbb
and
pop
push
imul
pop
jmp
je
cmpsb
dec
rcl
mov
jnp
and
pause
test
fiadds
mov
adc
sahf
imul
repz
lahf
adc
or
aas
xchg
mov
push
dec
enter
inc
jns
cmp
dec
lcall
nopl
push
inc
shl
call
movsb
rorl
fisubrl
out
inc
iret
sbb
data16
mov
mov
pop
inc
cmpsl
push
push
ffree
xlat
cld
minps
sub
insl
add
xchg
inc
lret
fs
sti
or
imul
movq
js
jecxz
repz
inc
pop
and
fstl
mov
popa
push
sbb
mov
fs
dec
push
mov
arpl
or
aaa
jo
data16
ss
loop
sbb
aam
adcb
sub
xlat
out
mov
mov
fwait
movsl
pusha
xchg
std
sub
icebp
sub
fcmovu
cmp
pop
pop
mov
push
push
call
icebp
push
scas
or
xchg
sbb
adcl
in
add
sbb
leave
and
adc
and
mov
mov
insl
mov
sti
push
pop
adcl
dec
and
mov
pop
fisttpll
mov
pop
xor
movsl
arpl
mov
stos
mov
mov
mov
and
mov
test
push
pop
or
repnz
mov
pop
imul
pop
sbb
inc
hlt
xorl
jb
sarl
mov
lahf
fsubrl
jne
ret
aas
add
jae
mov
mov
movsl
push
mov
fsubrs
inc
mov
stos
push
aaa
icebp
add
fisubrs
xchg
pop
adc
sub
jl
cmp
inc
fs
sub
xchg
movsb
xchg
xchg
lcall
cmp
add
out
jl
cmp
mov
cmpsl
dec
data16
ss
push
pop
aaa
lret
dec
pop
mov
jmp
inc
popf
ss
cmp
sbb
clc
jae
out
jmp
add
or
sbb
and
lret
push
addb
push
adc
adc
dec
shr
call
sbb
daa
push
es
pop
pop
jg
push
cmp
pop
push
sub
inc
testb
ds
or
jecxz
mov
test
add
pop
cmp
test
push
ret
jmp
stos
outsb
outsl
loope
mov
adc
sub
sbb
repnz
sti
les
sbb
sbb
mov
inc
lods
movsb
adc
cmpsb
stc
or
push
xlat
das
mov
and
cwtl
push
insb
pop
into
sub
cmp
mov
fwait
insl
cmp
jmp
xor
mov
rsqrtps
jb
and
fsubl
cwtl
fcomps
das
cli
xor
sbbl
into
push
pop
mov
cmpsl
mov
cmp
cs
xchg
xchg
and
repnz
dec
adc
lret
pop
pop
shrb
xchg
inc
pop
jl
push
je
packssdw
leave
push
jnp
lea
sub
mov
ficoml
sbb
mov
scas
pop
jp
push
filds
mov
pop
sub
xchg
adc
jecxz
add
push
lcall
lock
nop
ret
stos
mov
fcomi
lods
mov
outsb
dec
shll
jecxz
mov
sbb
cmc
push
lahf
push
jb
jmp
push
add
add
dec
shl
pop
jg
sti
dec
sub
xor
je
aad
adc
sahf
inc
cld
xor
fs
push
daa
pop
outsl
rcl
add
icebp
xchg
clc
fnstcw
mov
dec
jbe
add
in
jecxz
filds
inc
and
jno
movsl
cmp
lods
xlat
inc
andw
insb
mov
repz
mov
mov
shlb
adc
add
inc
sbb
add
fsubs
hlt
rorl
pop
loopne
sub
pusha
stos
cs
hlt
cmp
dec
sub
cltd
in
mov
jb
in
jns
push
mov
scas
cmp
iret
loope
dec
int3
xor
mov
pop
ret
and
pop
into
jg
adc
dec
stos
outsl
ret
daa
or
inc
cwtl
adc
sti
je
rcll
cmpsl
mov
les
lea
jnp
adc
xchg
insb
xor
push
cmp
rcrb
add
xor
mov
faddl
add
clc
in
fcoml
call
xchg
mov
sbb
or
mov
icebp
bound
xor
lcall
cmpsl
mov
xlat
push
and
sbb
xor
test
mov
xchg
test
xchg
cmpsb
mov
add
test
or
in
pop
js
movsb
add
lods
mov
movaps
int3
mov
inc
int
adc
stos
adc
xchg
popf
cmp
mov
pop
xchg
jge
xor
ljmp
sbb
shll
in
mov
jle
gs
shl
fldenv
icebp
or
dec
js
push
pop
inc
push
fsubl
mov
xchg
push
mov
mov
pop
and
jl
xor
sub
or
rcll
shrl
loop
dec
bound
aad
pushf
dec
add
sbb
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
