push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
daa
or
ja
imul
sahf
xor
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
sbb
cmc
xor
ja
notl
mov
push
xchg
adc
jecxz
std
loope
stc
adc
cwtl
ja
cli
insb
sub
repz
jl
dec
mov
inc
add
ret
jo
cltd
cmp
push
jecxz
stos
fnsave
push
lret
aaa
lods
xchg
push
call
mov
sbb
pop
arpl
jns
cmp
fdivrp
xor
mov
dec
lret
in
out
push
inc
cmp
sub
push
xchg
sahf
iret
inc
test
inc
lcall
int
and
jmp
cmc
int
lret
jg
xchg
lock
pop
inc
add
cmc
pop
hlt
imul
pop
dec
mov
shl
loop
shr
cmpsl
icebp
repnz
fistpll
or
int
push
jecxz
dec
dec
ss
cmp
inc
jl
adc
adc
or
in
idivb
cmp
mov
jne
xchg
adc
push
and
lret
sub
iret
jp
cmp
xchg
stos
inc
xchg
aam
mull
sbb
jb
test
cmp
enter
cmpsl
and
jmp
jae
jns
into
loopne
and
push
sbb
stos
out
test
xor
cmp
jbe
mov
lcall
dec
test
cmp
mov
push
rorl
and
movsb
fwait
xor
push
fldl
aas
cld
pop
lds
nop
in
xchg
dec
loope
out
mov
cmpsb
mov
jmp
and
pop
mov
cmp
ja
push
les
sub
ret
sti
mov
les
dec
xor
dec
jnp
in
push
aam
ja
ret
xchg
daa
sahf
aad
stc
out
iret
sbb
pop
push
jns
cmc
mov
repz
sbb
fistps
lds
pop
mov
inc
lahf
into
push
pop
pop
rol
addr16
jle
dec
pop
and
pop
xor
xchg
sub
imul
gs
outsb
push
or
mov
js
dec
jnp
int
push
enter
dec
push
stc
test
pop
ficompl
cmp
inc
fidivl
fcmovnb
addr16
sbb
movsl
add
mov
add
pushf
jg
outsb
cmovp
xchg
jb,pt
das
push
pop
in
jmp
sbb
xor
pop
pushf
sbb
pop
mov
dec
mov
dec
movsl
std
cld
xchg
jg
fs
mov
rorb
mov
ds
inc
jnp
int
xor
inc
jg
xchg
inc
cmp
mov
pop
icebp
cmpsl
out
scas
or
dec
lret
scas
xchg
lret
lret
fwait
cmc
repnz
jg
or
xlat
repnz
push
xlat
dec
int
mov
loop
inc
out
adc
push
and
jge
mov
ljmp
subb
sbbb
mov
das
pop
pop
inc
inc
xor
push
testb
inc
ja
push
aaa
sub
adc
pop
cmp
dec
dec
out
int3
mov
xchg
jns
jmp
and
bound
nop
inc
aad
insl
pop
leave
jnp
xchg
inc
movsl
xchg
adc
repz
lret
test
mov
or
push
pmullw
and
pop
xchg
and
dec
or
cmpsl
jl
add
and
mov
mov
pop
pop
js
test
out
repnz
out
cmp
sub
sbb
mov
mov
pop
bound
add
push
test
lods
xchg
push
cmp
fdivl
insl
in
test
call
xor
lods
pusha
mov
repnz
outsl
xchg
add
fwait
sub
mov
jecxz
shl
addr16
icebp
mov
fs
cmp
dec
iret
mov
mov
hlt
xchg
jge
out
adc
push
cld
adc
loope
pop
push
mov
cmp
mov
sarb
xchg
jge
mov
mov
dec
stos
popa
gs
lock
aaa
incl
sub
mull
sbb
iret
into
adc
jo
movsb
inc
fistpll
sub
jle
rorl
jg
cmpsl
pusha
jo
mov
and
stos
popf
aad
dec
add
adc
pop
pushf
mov
xor
les
add
adc
and
mov
je
xchg
pop
inc
add
xlat
or
fstps
and
jl
lahf
mov
cmpsb
les
call
mov
test
adc
test
cmpsl
fadd
xchg
imul
sub
sahf
jmp
and
leave
inc
pop
dec
fidivl
subl
imul
in
or
add
out
jno
jns
hlt
movsb
cmp
xor
or
lds
cmp
xchg
fists
insl
inc
ja
mov
push
scas
and
in
mov
pop
popa
adc
and
xor
loop
mov
mov
mov
in
ljmp
jle
jg
gs
fcomps
cmp
push
cmpsl
push
hlt
dec
or
frstor
js
cwtl
das
sub
jno
pusha
dec
add
fcoms
nop
xor
jmp
jg
aaa
lods
adc
sbb
pop
mov
mov
ss
mov
insb
jle
lods
adc
inc
inc
add
mov
cltd
xor
inc
mov
sub
ret
sub
or
icebp
xor
dec
sbb
mov
and
stc
shlb
mov
nop
mov
mov
sub
sub
dec
xor
and
xor
inc
ret
es
fisubrl
idiv
mov
inc
das
inc
mov
mov
loop
out
sti
pop
std
sub
xor
pop
inc
jns
outsb
or
dec
cmp
mov
jns
pop
loope
jmp
gs
cmpb
int3
ja
add
sbb
xchg
xor
cmp
dec
xor
aad
or
jle
mov
xor
mov
xchg
sub
mov
cwtl
dec
lock
in
sbb
fdivs
arpl
xchg
cmpsb
inc
or
push
arpl
mov
sahf
enter
add
jns
out
cwtl
sbbl
movntps
push
lret
ffree
add
push
jl
fiadds
sub
data16
decb
insb
test
jle
inc
add
ficompl
fdivl
push
in
fst
sbb
xchg
in
fcomp
mov
inc
jno
xor
pop
or
test
xor
lds
ds
gs
jnp
add
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
push
dec
mov
xchg
mov
stos
and
scas
cmp
test
fwait
rclb
stos
nop
int
and
in
push
sbbb
ljmp
test
or
call
xor
mov
xchg
mov
sub
xor
int
stos
xchg
cmp
sti
cmp
mov
jne
fcomi
js
cs
inc
inc
das
int3
dec
sub
fwait
add
push
std
fisubs
or
xchg
movsl
sub
loop
popa
loopne
or
mov
out
or
push
hlt
push
cmp
int
and
adc
testb
leave
cmp
mov
ret
aas
inc
sub
stc
inc
imul
jb
mul
sarb
imul
flds
daa
int3
adc
sub
add
arpl
push
sbb
mov
dec
cmp
jns
jle
lcall
ds
scas
mov
in
or
test
pushf
push
and
sbb
xchg
stos
sbb
lcall
xor
iret
lahf
adcb
fldt
movsl
aam
mulb
push
outsl
jg
mov
and
or
cmp
test
pop
xchg
add
xchg
push
and
or
xchg
sbb
cmp
lret
sub
dec
jb
cmp
mov
repz
jge
clc
aaa
mov
ficomps
shl
test
arpl
or
mov
inc
add
xchg
xor
xor
repnz
adc
mov
int3
iret
das
inc
dec
mov
mov
lret
outsb
or
insl
das
ss
mov
lret
in
mov
test
pop
arpl
add
testb
pop
clc
cmp
imul
xchg
decb
es
adc
aas
arpl
je
add
mov
out
cli
push
outsl
pop
inc
add
mov
popf
ret
sub
xor
hlt
lret
lret
sbb
lret
cmpsl
xchg
xchg
arpl
sbb
icebp
jnp
in
or
jmp
xchg
dec
or
pop
or
and
xchg
movsb
call
sbb
xor
aaa
cltd
pop
mov
xchg
imul
into
xlat
hlt
scas
es
idiv
gs
cwtl
int3
cli
inc
sub
fimull
je
scas
cmp
jmp
gs
mov
pop
xlat
cmc
xchg
mov
xor
mov
sub
mov
fwait
cmp
call
inc
inc
jbe
adc
cmpsl
ja
cmc
pusha
lret
lcall
mov
mov
jne
xchg
sub
add
mov
ljmp
dec
loopne
in
leave
add
in
adc
xchg
rorb
jmp
or
and
lds
add
roll
fnstenv
scas
movsb
fdivrs
dec
mov
xchg
nop
mov
sbb
mov
lahf
push
mov
mov
iret
mov
daa
jae
loopne
leave
cmp
mov
in
mov
push
xor
loope
aaa
cmc
sbb
sti
cs
addl
jecxz
pop
rorl
addl
xlat
sub
cli
test
int
imul
ljmp
jne
shrl
adc
dec
notb
enter
push
int
lahf
dec
mov
sbb
in
call
push
sub
gs
rcrb
mov
xchg
jns
lret
mov
adc
movsl
xchg
mov
cli
das
orl
push
mov
mov
nop
in
or
xor
xchg
push
in
fidivrl
out
dec
jne
push
rorb
fsubs
dec
fnstcw
and
subb
js
es
scas
mov
sub
orb
scas
aad
mov
in
and
es
jmp
scas
pop
inc
push
jne
inc
inc
fidivrs
pushl
hlt
aas
sbb
mov
lock
sub
mov
imul
test
jnp
subl
adc
pop
push
jb
pop
cmc
rcrb
lcall
shlb
sbbb
lret
or
jmp
cmpsb
jne
jo
inc
add
nop
int3
subl
dec
adc
sub
mov
pop
inc
ret
xchg
dec
adc
jne
mov
cmpsb
enter
icebp
loop
mov
mov
xorb
lods
leave
mov
mov
mov
or
imull
fiadds
pushf
dec
movsl
sbb
out
pop
add
repz
pop
pop
jmp
aaa
mov
out
jmp
sbb
test
loop
or
mov
stos
push
cmp
push
cmp
mov
popf
add
add
lahf
daa
jnp
add
inc
pushf
dec
mov
aaa
lea
and
arpl
mov
popa
jne
mov
dec
mov
and
loope
push
mov
xchg
mov
sub
test
inc
mull
jno
mov
dec
leave
in
popf
and
mov
pop
push
cmp
cmp
sbb
hlt
add
sub
pushf
cmp
add
sub
neg
xlat
or
inc
push
cmp
or
mov
out
push
jne
out
mov
lock
imul
and
and
inc
lods
loope
xor
ret
or
shlb
in
insl
sub
jne
mov
std
and
lret
ss
test
adc
repz
mov
mov
js
and
adc
add
das
imul
mov
ja
cmp
xchg
in
imul
mov
mov
repz
mov
jb
push
cli
mov
xor
stc
fidivrs
outsb
push
lods
inc
clc
pop
andb
sti
lock
push
dec
fisubrs
jno
adc
mov
inc
ja
lods
xchg
jnp
faddl
mov
rol
fsts
mov
aaa
fs
jo
pop
rorl
xor
adc
lods
in
std
repz
lea
arpl
daa
popf
dec
call
les
sahf
xor
mov
jb
nop
lret
add
xor
sub
pushf
loopne
clc
pop
sbb
lea
xor
ljmp
sbb
adc
aaa
add
filds
je
loop
mov
xor
pop
insl
mov
sti
jle
fsubrl
sub
xchg
scas
mov
and
ret
shll
push
and
fwait
iret
ja
jl
int
ror
sbb
push
inc
fdivrp
fldcw
xor
xor
pop
jle
sub
imull
jo
lds
cmp
pop
std
sub
test
sub
test
or
jno
mov
sti
lds
ds
and
insb
lea
mov
mov
mov
xchg
scas
dec
jmp
mov
or
fdivrs
jno
int3
clc
xchg
data16
xchg
mov
inc
fldl
jns
shll
pusha
sbb
mov
jns
mov
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
jecxz
pusha
push
and
ja
sbb
xlat
jmp
cmp
mov
jp
orl
cli
lods
mov
adc
push
adc
pop
call
sarl
pusha
xchg
scas
out
inc
sub
inc
cmc
ret
pop
dec
push
inc
and
fucompp
push
sahf
mov
lods
int
ret
pop
clc
stos
sub
mov
cwtl
xchg
sbb
jo
stos
mov
sbb
jnp
sub
stc
out
cwtl
xchg
add
cmp
mov
icebp
js
push
ret
movsl
cmp
cmp
aas
adc
add
fdivr
push
inc
int3
mov
outsl
lret
fcomip
jmp
cli
mov
das
clc
out
pop
call
aas
push
pusha
inc
and
mov
xchg
lea
cmp
jmp
cmp
stc
cmpsb
fwait
xchg
mov
cmp
mov
negb
jb
jns
fstpl
out
jo
mov
loopne
add
pop
fmul
cmpsl
add
dec
sbb
ret
cs
lret
nop
test
jl
pop
dec
inc
in
dec
int
nop
inc
sahf
pop
rorb
xor
mov
or
cwtl
pop
loope
js
xchg
add
mov
cli
cmp
inc
call
fwait
push
xor
scas
cmp
mov
mov
mov
les
xor
es
lods
addr16
into
fistpl
imul
imul
jne
jns
cmpsb
gs
fdivrs
test
pop
xchg
push
or
lock
mov
lods
inc
or
adcl
mov
pop
xchg
add
add
pop
sub
in
pop
push
jnp
fdivrs
sti
inc
and
or
popa
jns
fbld
xor
pop
jnp
xor
xchg
jns
fbld
cmpsb
stos
dec
mov
pop
es
and
xor
fmull
test
jo
and
les
mov
pop
popa
xchg
ja
mov
rclb
add
call
out
and
sbb
mov
jbe
fisubl
aad
xlat
stos
loop
inc
stc
shrb
adc
lcall
in
sbb
jae
mov
adc
fdivrs
dec
and
in
adc
rclb
or
dec
nop
mov
rol
sti
lods
or
sarl
jae
cmp
mov
leave
mov
cmp
mov
flds
fdivs
movsb
sbb
jno
jne
lods
sti
or
fsubl
mov
leave
or
mov
das
jo
iret
xorl
popf
push
js
ljmp
push
and
xor
pop
je
adc
cmpb
ja
fdiv
fsubs
popa
inc
add
mov
mov
ljmp
sub
fistpll
xor
mov
jge
adc
leave
mov
sub
in
dec
in
xor
negl
push
add
mov
xchg
movsb
movsl
push
insb
cwtl
fcompl
pop
mov
int3
mov
scas
pusha
push
jae
lret
push
add
lods
push
rolb
in
mov
subb
into
pop
inc
dec
or
inc
cmp
daa
pop
pop
lds
pop
sub
test
xchg
jo
add
adc
dec
mov
movl
fdiv
mov
mov
add
add
call
aaa
mov
pushf
adc
nop
sbb
xchg
xchg
fldenv
jne
rcrb
or
add
xchg
adcl
rclb
pop
lea
gs
mov
push
pop
mov
lret
imul
push
cmp
lods
or
cmpsb
xchg
jo
cltd
aad
mov
cwtl
mov
mov
sub
leave
imul
lahf
andb
fcomps
add
dec
in
insb
test
jge
xorl
xlat
dec
cmp
in
adc
xchg
fldcw
push
or
sbb
repz
cmpsl
test
add
hlt
ljmp
daa
jmp
mov
scas
and
sbb
and
cmpsb
push
out
jecxz
insl
jne
sbb
sbb
push
stos
in
push
mov
daa
iret
and
and
mov
das
pushf
rcr
dec
cmpsb
cltd
dec
sbb
shrb
sbb
xchg
pop
mov
xchg
mov
jns
cmp
sub
and
in
mov
inc
repnz
out
test
test
sub
pop
gs
pop
int
inc
inc
jp
push
or
fldl
test
ss
xchg
xor
cmp
jl
into
sbb
scas
jl
inc
leave
sahf
out
cmpsb
testl
sub
jne
lcall
scas
mov
andl
xor
cltd
test
mov
in
lahf
inc
cmp
mov
ret
cmp
lods
sub
aas
add
outsl
stos
sti
out
inc
mov
imul
push
pop
and
test
lahf
pusha
sub
push
mov
xchg
fucomp
jb
addl
ljmp
xchg
mov
dec
xchg
nop
dec
push
pop
or
dec
or
arpl
xchg
jo
sbb
and
push
push
call
aad
xlat
or
popa
pop
jb
fucom
in
ds
fiaddl
in
add
pop
sarl
nop
mov
or
ljmp
std
add
mov
pop
loop
ret
pushf
mov
cs
stos
popa
jnp
dec
add
stos
mov
iret
mov
scas
js
push
inc
inc
fbld
testl
mov
icebp
xor
cmp
iret
out
xor
xor
jge
imul
stos
pusha
repnz
add
dec
mov
xor
jg
call
cli
out
pop
xlat
mov
inc
and
cld
push
arpl
fsub
push
and
adc
je
int3
loopne
push
push
inc
mov
xor
add
cli
dec
push
pop
out
repnz
or
xchg
test
pushf
mov
je
and
outsb
mov
clc
add
mov
cmovb
shl
mov
in
cmp
daa
mov
jge
sub
cmpsb
adc
jnp
mov
scas
in
xor
jbe
decb
mov
pop
les
inc
mov
lds
mov
out
loope
dec
cmp
ret
stos
ds
cltd
dec
xchg
fbstp
cltd
insl
push
insb
testl
cmp
loop
cmp
cmpsl
xor
jae
popa
js
ja
adc
xchg
sub
int3
jg
pop
adc
out
jne
adc
icebp
or
and
lods
dec
xchg
dec
or
daa
arpl
roll
cmp
repz
and
sub
popf
adc
imul
test
pop
in
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
mov
test
cwtl
out
ja
cmp
mov
mov
arpl
cmpsl
stos
iret
mov
scas
enter
ljmp
ret
dec
cld
outsb
mov
mov
aaa
add
cltd
mov
aad
cmp
popa
jbe
aad
test
push
fucomip
data16
mov
in
test
mov
pop
push
xchg
mov
mov
or
mov
fisubrl
dec
push
fstpt
pop
sub
int3
push
bound
loope
xchg
sub
test
sbb
lds
and
ficoms
test
xchg
adc
pop
sbb
sub
add
ret
sbb
test
and
inc
adc
xchg
std
cmpsl
lods
es
and
nop
push
das
lahf
push
in
cltd
loopne
enter
dec
out
das
je
dec
push
adc
sti
rcll
rcrb
push
cli
push
sbb
pop
icebp
pop
dec
xchg
mov
pop
cmp
sub
shrb
rcll
mov
pop
loope
push
pushf
adc
xor
dec
andb
aas
xchg
jecxz
out
xor
int3
push
cwtl
jb
dec
xor
pop
push
shrb
sbb
lret
out
rorb
test
add
mov
repz
sub
imul
pushf
fs
add
push
dec
test
jb
stc
sar
jmp
xchg
jg
repz
movsb
scas
das
repz
aam
mov
enter
and
shll
stos
xchg
in
out
cs
jp
inc
arpl
imul
sub
fs
jb
repz
ljmp
push
pusha
lcall
rcl
sti
stos
cmp
test
or
add
mov
and
jl
sub
mov
rcrb
cs
mov
call
imul
sub
rcl
incb
sub
cmc
cmp
xchg
mov
pushw
es
fdivrs
mov
cld
movsl
lcall
cmc
adc
divb
and
cmp
nop
xchg
rcrb
push
mov
popa
les
mov
out
cmp
in
inc
lock
jno
pop
clc
imul
dec
cmpsb
dec
xchg
andb
ret
push
cmp
fwait
test
ja
xchg
jb
cmp
adc
cmp
ret
push
ss
mov
inc
xor
jo
cmc
mov
imul
test
dec
cmpsl
inc
mov
cmp
out
add
sbb
xchg
rorb
pop
sbb
shl
cmpsl
testb
iret
test
inc
in
lret
cld
xchg
arpl
mov
enter
lods
inc
inc
xor
xchg
jo
cmp
sti
lock
adc
bnd
sbb
push
mov
inc
in
sub
aas
jns
stc
sbb
mov
cwtl
decl
cmp
jno
fldl2t
adc
and
jecxz
dec
jg
stos
mov
xchg
ljmp
js
outsl
insl
inc
sub
mov
mov
in
jecxz
adc
xor
or
mov
dec
or
dec
mov
inc
jb
push
or
mov
xor
dec
push
mov
mov
dec
rol
fisubrl
cmp
dec
cmp
add
fistpl
ja
fildl
xor
pop
mov
adc
popf
push
test
sub
cmpsb
shll
mov
mov
jb
add
cld
add
inc
in
xchg
fildll
mov
and
and
or
lret
mov
ret
test
xor
jae
push
gs
in
push
movsb
daa
lret
jecxz
sahf
sub
jmp
inc
jle
or
dec
jecxz
push
or
add
cmpsl
xor
mov
push
xchg
outsb
loope
leave
dec
jl
push
ljmp
jg
dec
or
test
xor
xor
xchg
int
stos
mov
int3
pop
or
dec
pop
cmp
push
cmpsb
xlat
pop
stos
jg
mov
bound
sbb
jg
push
sub
outsb
or
outsl
mov
div
xchg
nop
lods
pop
mov
out
loop
aam
cmp
mov
call
jo
negb
mov
jl
mov
mov
mov
cmp
inc
push
push
pop
std
mov
hlt
nop
sbb
shl
jg
sbb
or
xor
push
or
mov
xchg
pop
or
sahf
xchg
push
push
in
test
jae
fwait
push
jbe
push
xchg
mov
js
cmp
dec
cmpb
imul
dec
aad
aaa
dec
iret
lods
add
sbb
inc
call
jge
xor
bt
inc
xchg
push
inc
xor
loope
sbb
sub
push
imul
ljmp
xor
sub
dec
stos
mov
stc
mov
test
clc
dec
cld
fsubrl
scas
mov
or
push
data16
outsb
ljmp
imul
sub
out
ss
pop
ret
inc
jmp
notb
lods
mov
lods
ret
xchg
sub
sub
aam
popa
cmc
in
in
insl
mov
cmp
inc
shlb
add
adc
test
ficomps
rcl
mov
iret
lea
add
daa
push
out
add
enter
rclb
inc
pop
scas
dec
jle
fisubrs
out
add
inc
mov
jmp
cmpsl
xor
push
jecxz
cmp
or
lret
mov
cmp
mov
jae
test
das
cmp
mov
ficoml
dec
add
mov
hlt
push
mov
xor
test
dec
sub
sub
adc
js
lods
jecxz
bound
and
ljmp
js
outsl
dec
jb
notl
in
les
or
stos
xor
pushf
out
outsl
notl
adc
ljmp
push
mov
std
xchg
jno
pop
push
pop
outsl
xchg
dec
cli
sub
les
pop
cmpsl
movsl
inc
xchg
fmull
imul
sbb
daa
loop
ljmp
mov
or
lret
insl
cmc
faddp
mov
mov
in
push
shr
xchg
ret
ret
in
mov
dec
mov
xchg
sbb
jb
mov
arpl
test
add
popa
addr16
or
lea
and
mov
adc
test
mov
repz
fcmovnu
les
xor
push
popf
mov
and
pop
mov
jns
xor
sbb
push
xlat
out
xchg
icebp
mov
adc
mov
add
movsb
jecxz
and
dec
mov
bound
imull
xchg
inc
js
mov
orb
jp
xchg
ret
jle
push
jmp
pusha
push
out
test
ds
mov
test
and
aad
sub
imul
add
inc
xchg
add
xor
stos
jg
jge
fidivs
rcl
in
xchg
xchg
stos
rorb
in
or
cmc
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
in
push
ss
das
aam
ja
cmovb
movsb
cmp
popl
scas
mov
mov
fisttpll
je
test
lret
aam
out
xchg
movsl
jnp
add
insb
adc
outsb
or
pusha
out
je
sub
mov
jmp
pop
sub
out
mov
and
sub
mov
xchg
sub
mov
lods
and
fistpl
pop
sub
divb
in
pop
cwtl
cld
into
testb
jae
jmp
leave
test
pop
dec
cmp
popl
lods
lcall
push
js
mov
inc
call
lahf
movsl
divb
hlt
adc
lret
mov
mov
cld
cmp
test
pop
insl
mov
and
leave
adc
stc
dec
xchg
inc
mov
sub
dec
push
decb
lods
fwait
and
icebp
cmpb
jbe
xor
pop
add
xor
sar
push
add
lods
cmc
dec
add
xor
sbb
mov
push
pusha
xchg
push
popa
aad
in
fsts
inc
jg
mov
scas
xorb
jno
fwait
or
dec
mov
out
les
mov
cmp
dec
shlb
das
fiadds
pushf
pop
fcomi
and
jbe
ret
sub
nop
icebp
aad
inc
sbb
push
lret
jne
or
clc
in
or
inc
add
stos
adc
dec
lea
jp
test
lret
sysret
inc
push
out
xor
add
sub
lret
pop
xor
daa
mov
add
mov
ljmp
cmp
xor
pop
in
je
lods
aaa
xchg
mov
inc
xchg
outsl
xchg
in
jl
lret
in
adc
iret
or
sub
aaa
stos
shld
mov
xlat
aam
sub
addb
xchg
sub
xor
add
lods
ret
push
jg
push
jo
std
xchg
sub
adc
stos
mov
and
push
or
xor
mov
ffree
lcall
in
in
xchg
fucomip
adc
cmp
dec
int3
aaa
jg
mov
adc
addr16
sbb
cs
out
sub
mov
std
inc
pop
fwait
ljmp
jg
push
pushl
pop
xchg
mov
in
mov
sbb
push
imul
add
std
loope
and
jnp
jge
pop
push
andl
push
outsb
pop
jp
cmp
adcl
hlt
mov
jmp
fisubl
sbb
jno
mov
pop
or
out
movsb
xchg
and
fldl
cld
inc
push
aam
push
ror
mov
inc
dec
test
ss
xlat
lea
orb
lock
iret
cmp
inc
mov
xor
fsubrp
mov
xor
push
movsb
mov
sti
neg
test
rcll
pop
insl
or
lret
fidivl
dec
daa
loop
dec
xchg
cld
inc
nop
jae
sbb
addb
lds
in
jo
jb
mov
xchg
lods
add
xchg
xor
daa
jb
jb
ficoms
jns
pop
push
cld
sti
mov
or
or
movsl
imul
jmp
int
inc
sti
inc
imul
xlat
mov
sub
or
push
and
xchg
incb
lahf
lahf
jno
int
push
divb
insl
mov
inc
aas
adc
sarb
test
call
fisubrl
inc
push
cwtl
sub
repz
addr16
or
addl
into
mull
mov
push
pop
xchg
xor
cmp
je
rcll
push
jns
cmc
pop
lret
fistpl
adc
mov
stos
add
cs
int
mov
and
lahf
jb
mov
stos
or
adc
jno
push
push
sbbl
lcall
cmp
pop
mov
enter
and
mov
cmpsl
testb
gs
scas
dec
stc
mov
popf
into
inc
mov
fisubs
cmp
cli
xor
or
fs
cmp
int
ljmp
sbb
out
jns
xor
gs
jle
rcr
nop
es
xor
push
das
imul
or
loop
scas
jae
aaa
inc
mov
pop
lods
xchg
repz
cld
mov
fs
sahf
inc
cli
in
test
xor
aas
or
stos
and
fcoml
add
inc
loope
or
mov
out
sbb
mov
aas
arpl
xchg
fisubs
loope
outsl
fldcw
insb
outsb
sbb
adc
jnp
cltd
cmp
push
jb
cmp
xchg
mov
out
fs
outsb
outsb
sub
in
add
shrl
movsb
sbb
idivb
in
lret
mov
jg
sbb
fcmove
lds
dec
bound
mov
pop
rcll
sub
jp
push
push
or
add
jnp
jp
fwait
ss
scas
inc
inc
stos
xchg
mov
lods
aas
clc
movsl
push
ss
xchg
out
adc
enter
or
sbb
rcrb
jp
out
mulb
lahf
xchg
ror
clc
pusha
xor
push
repz
cmc
stc
sbb
imul
sub
adc
lret
add
out
mov
mov
xchg
or
movsl
xor
mov
mov
ds
xchg
mov
jge
sti
or
mov
fsubrs
xor
sti
icebp
push
cwtl
sahf
jmp
xor
imul
shll
push
sbb
je
xchg
es
add
mov
lcall
out
test
fnstenv
push
push
fildl
adc
add
mov
add
insb
insb
hlt
pop
lods
fbld
jns
lods
loop
xchg
ja
cwtl
fcmovnbe
xchg
loop
xchg
roll
scas
andl
add
fdivrl
cwtl
out
jnp
rclb
push
mov
jb
cmpsl
in
add
mov
test
pusha
pop
aas
stos
and
call
in
mov
push
and
sti
push
push
inc
sub
jae
cwtl
sub
jne
leave
mov
stc
and
dec
ret
mov
lods
pop
or
loopne
push
jge
fiaddl
cld
pop
jmp
stc
out
add
adc
or
enter
les
sti
pusha
lock
or
or
dec
test
imul
pop
and
cwtl
jl
mov
adc
iret
ret
jecxz
dec
mov
out
cs
popf
insl
push
loop
inc
loopne
and
xor
out
sub
fnstsw
je
mov
dec
push
fdivs
cmp
and
fnsave
or
aas
sti
dec
mov
xor
lea
dec
shlb
mov
dec
lods
call
inc
pop
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
mov
pop
adc
adc
push
inc
rcl
cmp
mov
push
jl
jae
pop
outsb
and
and
and
mov
int3
scas
pop
inc
mov
xor
dec
fcoml
cld
dec
mov
fwait
ja
test
push
sbb
dec
inc
sub
int3
aad
jo
aas
daa
mov
mov
push
add
push
sbb
or
push
test
fidivs
std
dec
popf
add
sub
in
mov
scas
popf
mov
xor
out
mov
ret
xorl
repz
cli
call
fucom
or
ficoms
xchg
xor
fldenv
loopne
shrb
insl
sbb
adc
inc
bnd
pop
inc
out
sbb
push
dec
out
pop
std
sbb
push
test
xchg
pop
mov
pop
push
adc
push
lock
pop
xchg
mov
notl
push
fcomps
test
mov
inc
pop
dec
xlat
insb
jg
repnz
rcrl
mov
mov
push
clc
int
ret
jb
movsb
adc
fisubs
adc
pop
jae
icebp
add
fneni(8087
test
mov
add
orl
jp
mov
xchg
mov
int3
push
gs
stos
stos
sub
movsl
mov
push
je
fucomip
outsl
out
cwtl
fidivl
xchg
xchg
out
lock
mov
cmp
es
sahf
dec
ss
fistpl
xchg
cli
xor
xor
loope
adc
cld
jo
cwtl
and
or
mov
fldenv
mov
dec
call
mov
cld
mov
stos
mov
mov
sti
inc
dec
mov
sbb
ljmp
push
jge
lea
test
jle
jno
push
mov
jg
mov
jmp
aam
sbbb
lret
or
or
cmp
lock
add
adc
outsb
xchg
cmp
push
and
dec
loopne
dec
cmp
jmp
sub
ret
jae
dec
mov
out
push
divl
jmp
mov
mov
add
mov
inc
mov
push
lock
jp
pushf
push
mov
fldenv
nop
into
movsl
and
jle
shlb
xchg
mov
test
jne
or
cmpsl
ret
xor
mov
mov
js
in
adcb
push
int3
int
push
jl
xchg
dec
adc
cmp
les
popf
push
shll
add
dec
cmpsl
jg
stos
addb
push
movsb
jno
jnp
mov
pop
mov
sbb
and
mov
push
call
inc
sbb
push
and
pop
xchg
gs
cmp
cmp
sub
pusha
jmp
sbb
lods
dec
mov
fwait
shlb
movsl
add
out
sub
stos
aas
or
inc
popf
pop
test
jns
pop
inc
dec
push
lret
inc
inc
popf
adc
sarb
sub
in
fistps
dec
xchg
mov
sbb
outsb
push
cmp
popa
lcall
test
movsl
idivb
xor
push
xchg
mov
pop
pop
sub
sub
pop
xlat
push
stos
mov
mov
push
xchg
xchg
sbb
ret
xchg
out
inc
insl
aad
js
idivb
mov
enter
mov
jp
xchg
xchg
ljmp
mov
sbb
mov
and
sbb
and
mov
add
mov
cmpsb
xor
loop
sarl
pop
jne
leave
cwtl
aam
and
add
gs
fs
popa
test
aam
adc
or
pop
and
aaa
or
mov
cmp
inc
cmp
cmp
int
lcall
mov
lret
dec
out
test
int3
ds
sahf
push
cmpsl
incb
gs
pop
es
shlb
subb
pop
les
fldt
and
ljmpw
jns
enter
mov
push
cld
call
cwtl
xor
cltd
or
fs
pop
push
lcall
pop
xchg
push
inc
out
xchg
add
outsb
inc
push
pop
inc
add
movsb
dec
push
sbb
imul
pop
pop
mov
jns
movsl
bound
imul
test
test
icebp
mov
xchg
repz
daa
mov
aas
inc
pop
cmpsl
or
xchg
push
inc
out
jne
jl
or
scas
mov
cwtl
insl
pop
push
and
dec
jae
stc
sub
in
sti
xchg
push
xlat
fmul
add
mov
lock
sub
pop
insl
mov
or
xchg
rcll
daa
fdiv
jo
mov
or
sbb
pop
out
push
sub
push
push
iret
mov
and
cltd
sahf
rolb
dec
dec
iret
pop
xchg
je
mov
lock
enter
mov
jmp
bound
xchg
fwait
push
ds
inc
in
ja
shll
mov
mov
out
sbb
daa
repz
jo
enter
push
lret
icebp
vcmppd
fwait
ret
jnp
rcrb
push
ss
jmp
xchg
out
lret
cld
add
inc
adc
icebp
add
push
fsubrl
pop
popl
adc
jae
mov
leave
cmp
adc
ficoms
test
cmpsb
loopne
sti
inc
mov
sub
pop
dec
push
rolb
adc
or
mov
mov
add
sub
pop
sbb
jmp
jb
test
push
cmp
or
mov
out
ss
push
mov
lds
pop
rcrb
push
mov
repz
mov
xchg
mov
or
and
out
adc
inc
fisubl
xchg
icebp
fnsave
lahf
cmp
adc
fisttpll
cmp
add
mov
push
leave
es
cmpsb
mov
xor
testl
out
push
pop
test
loop
test
sub
rorl
or
outsl
aad
jns
adc
das
mov
pop
daa
test
je
sbb
cwtl
sub
xchg
unpcklps
push
sbb
push
pop
cmpsl
in
inc
testl
mov
jmp
jmp
xchg
cmp
jbe
aad
jns
das
movsl
jae
mov
sub
sbb
jge
js
popf
xchg
cmp
ss
sub
pop
cmc
popa
mov
movsl
jmp
push
push
add
fstpl
lcall
mov
fsubs
or
add
cmp
fisttpl
fldcw
pusha
lock
jb
subb
jb
jnp
lock
out
push
jnp
sbb
fldcw
push
pusha
loop
pop
xchg
in
sahf
mov
ja
es
adc
adc
pop
test
and
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
cmc
dec
inc
mov
ja
shrl
push
lock
push
xor
push
push
cmpb
pop
sbb
popl
cmpl
loope
push
cmp
cmp
push
out
aaa
sbb
dec
push
inc
pop
lods
popf
rolb
gs
test
lods
scas
loopne
mov
scas
sbb
mov
outsl
aad
daa
pop
inc
add
sub
arpl
mov
xchg
movsb
stos
or
sub
movsb
fildll
aaa
and
cmpsb
outsb
sahf
clc
push
jae
int
or
ja
shrl
imul
xchg
leave
add
shll
push
aad
jmp
aad
adc
push
adcb
inc
fwait
jns
leave
cmpl
push
out
inc
lods
cmc
adc
pop
loope
int3
adc
out
aam
lods
adc
sarb
aas
dec
xchg
xchg
test
dec
fcoml
in
push
xchg
jbe
add
les
adc
mov
lret
test
outsb
add
data16
ficompl
push
sub
mov
int3
jl
and
inc
insl
sbb
mov
std
es
mov
mov
jo
push
sbb
mov
ss
lahf
mov
sub
sbb
xchg
repz
arpl
or
sub
addr16
mov
lods
out
jno
loop
test
data16
ss
mov
das
sbb
xor
cmc
pop
aaa
dec
bound
mov
popf
add
out
out
fdivs
paddq
int3
fistpl
mov
xchg
push
sahf
cltd
fildll
insb
out
hlt
out
inc
outsb
jge
out
sub
iret
jno
and
push
xchg
jae
push
scas
and
jae
add
dec
int3
cmpsb
pop
rol
jp
mov
daa
jmp
xor
test
xchg
and
and
aaa
push
lahf
lcall
add
sub
add
das
or
xchg
fidivrl
stos
test
or
xor
push
and
adc
mov
fldcw
shlb
sbb
push
push
mov
mov
xor
int3
sar
push
mov
hlt
jg
jo
std
insb
xlat
ret
scas
mov
das
jle
pop
enter
push
sbb
xchg
sti
ljmp
cwtl
ss
fimull
adc
iret
cmp
xlat
cwtl
filds
mov
or
jnp
mov
shrb
ficomps
scas
in
repnz
out
xor
jb
sub
inc
out
xchg
cmc
loope
sub
lds
test
shl
fucomip
icebp
mov
jo
jecxz
mov
leave
adc
xchg
and
push
sub
or
push
shl
pop
mov
sarl
push
inc
into
sub
sub
sbb
inc
cmc
fwait
jb
popa
adc
mov
fnstenv
mov
call
jecxz
xchg
loopw
pusha
and
faddp
scas
ljmp
cld
ljmp
xchg
mov
fmull
ret
sub
mov
adc
cwtl
call
rolb
mov
shll
mov
push
adc
ja
add
loope
xchg
mov
xchg
cmp
xchg
pop
mulb
add
pop
or
adc
push
jmp
mov
sbb
lds
jle
pop
fwait
rol
mov
add
fisubs
pop
leave
xchg
or
out
jnp
jno
iret
pop
dec
stc
jnp
and
sub
dec
sbb
sti
jge
test
xor
add
and
xchg
sti
call
fs
loope
inc
adc
shl
cltd
mov
jnp
inc
fdivrs
icebp
aad
scas
lods
push
mov
mov
inc
jns
lods
dec
neg
mov
das
int
into
sub
add
push
rcrl
les
aaa
cmp
test
ret
xchg
mov
pop
adcl
cmpl
les
mov
in
push
xor
fldcw
bound
lret
mov
cmc
add
scas
pop
insl
xchg
lea
inc
movsl
push
pop
xlat
loop
cli
mov
arpl
cmp
pop
imul
fnstcw
in
adc
out
movsb
and
loope
fidivs
dec
mov
mov
insb
call
jle
mov
add
jmp
int3
arpl
bnd
in
sti
push
jb
cld
push
sub
sbb
stos
jp
movsl
stos
mov
arpl
mov
sub
mov
xor
pop
pop
mov
mov
mov
inc
xor
leave
sahf
out
bound
out
mov
js
arpl
and
mov
mov
enter
add
popf
or
pop
mov
jle
inc
pop
push
sbb
out
mov
and
cld
cmp
jle
or
add
inc
iret
lret
icebp
pop
xchg
xor
jmp
cmp
or
push
inc
and
das
ljmp
pop
cmp
mov
fisttpll
mov
mov
jg
fldt
pop
in
jns
dec
pop
pop
in
add
xchg
adc
cmp
ljmp
and
mov
mov
cld
out
sbb
cmpsb
pop
shrb
sbb
lock
dec
icebp
mov
mov
sti
pushl
mov
lea
rcll
call
mov
mov
sbb
test
sbb
mov
std
gs
cltd
push
mov
xor
bound
mov
add
loop
xchg
fiadds
mov
xor
mov
outsl
dec
mov
aad
pop
and
mov
sbb
fisttpl
jecxz
inc
pushl
aam
enter
cmp
je
idivl
push
clc
cmp
aaa
xchg
ja
flds
push
or
pop
movsb
xchg
and
lea
test
into
xchg
cli
out
pusha
xor
cmp
adc
pop
mov
imul
cmp
mov
and
inc
int
inc
imul
add
ds
xor
push
lods
sahf
in
xchg
mov
lock
mov
call
loope
loope
jmp
fstps
mov
dec
jb
pop
sub
cmp
out
dec
and
stc
cwtl
std
cmpsl
jp
lods
jge
xchg
pop
mov
es
aam
push
sub
dec
rolb
push
add
mov
dec
outsb
inc
lahf
mov
pop
dec
shll
sbb
inc
push
jl
add
push
mov
imul
lds
dec
mov
mov
pusha
mov
test
nop
shr
add
fcoms
add
pop
aam
push
fs
clc
test
mov
mov
dec
sbb
dec
lret
push
add
bound
cmp
dec
pop
daa
cmpl
mov
inc
add
add
add
add
decl
aam
leave
add
add
add
lret
int3
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
fisubs
js
movsb
ja
mov
std
pusha
dec
mov
and
xor
adc
pushf
addr16
ret
lea
data16
test
fstpt
loopne
mov
xor
adc
adc
xchg
push
sahf
gs
stc
sti
je
mov
cmpsl
dec
dec
sbb
dec
aas
dec
fisubl
and
pop
and
fmuls
or
loopne
rcl
clc
push
cmp
xchg
out
pop
shr
out
repnz
push
ret
dec
mov
sub
and
sbb
xchg
in
bound
push
cltd
arpl
or
mov
rcll
mov
jg
sub
cmp
daa
cmp
into
pusha
cltd
xchg
cmp
or
fildl
sbb
cld
sub
push
mov
arpl
inc
pop
fwait
call
push
mov
inc
mov
arpl
mov
out
loopne
mov
cmp
jl
dec
xchg
mov
hlt
cmp
dec
jns
cltd
rorl
xor
xchg
lds
adc
mov
and
sbb
mov
jno
mov
fisttpll
dec
add
jecxz
sahf
sub
inc
push
add
mov
mov
jge
roll
in
loope
push
bound
sub
jmp
push
push
movsl
sbb
insl
xchg
mov
jecxz
js
ret
pop
push
ss
sub
add
je
insb
cs
mov
pop
cmp
ljmp
ja
adc
xchg
jge
lret
ja
xchg
packuswb
jcxz
add
out
incb
jle
out
sub
stos
mov
es
pop
sub
mov
cmc
mov
adcl
mov
adcb
sbb
je
subb
xchg
in
jb
sub
shll
imulb
adc
stos
xchg
shlb
insw
and
arpl
mov
xchg
and
cmpsb
jle
in
push
dec
enter
mov
mov
stc
xchg
sahf
dec
push
test
pop
hlt
mov
xchg
pop
mov
jb
adc
inc
sub
lods
sub
leave
or
shlb
shlb
xchg
nop
jbe
in
push
sub
inc
in
mov
aam
xchg
jecxz
xorb
pusha
test
sbb
inc
je
or
jne
add
test
pop
inc
aas
xor
adc
rcll
dec
jno
xor
add
aad
and
jbe
pop
into
sub
and
clc
fisttpl
jg
in
in
xchg
or
shll
imul
lock
call
les
movsb
add
add
pushf
roll
dec
or
test
or
pushf
cltd
xchg
test
sbb
mov
in
or
fnstsw
mov
jp
movsl
popa
jle
lock
xchg
mov
cmp
adc
cmp
rorl
outsl
fsts
ret
jl
movsl
jbe
or
outsl
or
sbb
mov
add
andb
repnz
adc
test
inc
pushf
pop
push
leave
stc
mov
jo
xchg
pop
adc
out
jle
dec
fisubrs
fdivrs
sub
xchg
cmpsb
scas
push
add
shll
fstl
push
int3
insb
fldenv
mov
sti
daa
lret
sbb
daa
jge
add
fcomi
pusha
in
ficoml
in
sub
in
outsb
inc
sbb
ror
aaa
shlb
pushf
jl
push
cmp
mov
adc
gs
mov
leave
mov
rcr
adc
xchg
rcrb
xor
int3
push
cli
dec
sub
inc
pop
sahf
mov
lret
bound
sub
pop
dec
mov
in
cmp
imul
dec
fstp
inc
xchg
insl
adc
jecxz
xorb
mov
fistl
inc
push
arpl
cmpsl
movsb
mov
xor
cs
cmc
adcl
and
rcr
mov
popf
push
test
inc
inc
push
jno
addl
pop
mov
enter
lods
xchg
fdivrl
mov
add
mov
dec
sbb
dec
push
push
mov
or
mov
clc
outsb
xchg
loope
cwtl
push
pop
cmp
pop
jp
lock
push
cmp
and
add
sarl
push
daa
sub
or
stos
adc
cmpsl
pop
je
inc
cmp
stos
pop
push
push
jl
dec
les
mov
hlt
mov
loope
add
push
jnp
cld
cwtl
pusha
cmp
imul
jno
mov
jne
add
mov
lods
pop
xchg
mov
jg
adc
pop
pop
ss
int3
repnz
jno
out
ret
stos
xor
stc
cmp
in
into
aaa
push
test
dec
mov
cltd
pop
jmp
pop
sub
or
and
repnz
je
jecxz
int
add
das
lods
xor
stos
out
pop
lods
mov
xlat
adc
aad
pop
int3
aam
shlb
fisubrl
loope
or
in
test
rcr
fisttpl
xor
stc
mov
sbb
inc
dec
sbb
mov
push
fwait
sbbb
pop
outsb
jle
sbb
shlb
mov
xor
and
push
mov
jno
fmull
xchg
push
jo
jl
push
pop
and
arpl
mov
mov
cmp
js
pop
in
adc
push
push
sub
pop
pusha
lcall
xchg
xchg
push
int3
shll
ljmp
stos
sahf
dec
fs
mov
iret
sbb
add
fwait
mov
xchg
cmpb
fstps
icebp
xlat
pusha
mov
js
aaa
push
xor
icebp
shll
mov
lods
test
fcmovne
js
int
fnstenv
mov
ret
mov
xorb
mov
sub
ja
idivl
ret
inc
or
ror
xor
sbb
xchg
dec
ljmp
pop
repnz
les
jle
adcl
lret
jb
adc
bound
or
aas
jmp
adc
dec
aam
mov
pop
xchg
and
mov
mov
icebp
in
dec
dec
sub
jbe
out
cmpsb
mov
fisubrs
dec
imul
add
sbb
fcomps
sbb
aaa
adc
sub
xchg
mov
and
cmc
mov
les
testl
adcl
push
lds
cmp
cmp
mov
push
cmp
mov
xchg
testl
push
adc
or
out
popf
xor
cld
lret
push
adc
inc
sbb
and
in
inc
xchg
jp
or
pushf
dec
push
and
popa
mov
sti
pusha
inc
popf
stc
in
fisttps
and
inc
mov
and
popf
loopne
inc
lock
xlat
das
jp
inc
bound
xor
repnz
insl
push
inc
lods
shll
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
insb
dec
push
dec
mov
ja
cmc
lahf
pop
shl
mov
pop
jl
jae
inc
scas
sarb
lock
xchg
ret
daa
imul
leave
test
arpl
sbb
push
loop
mov
mov
pop
adc
out
pusha
push
and
xor
xchg
pop
sar
mov
or
ret
xchg
pop
push
sbb
mov
scas
rcll
std
imul
mov
and
push
adc
pop
or
test
mov
xor
daa
cmpsb
fidivrs
pop
sarl
shr
push
inc
aam
inc
jnp
mov
das
shrl
inc
cld
sub
mov
mov
dec
int3
repnz
sbb
xchg
or
pop
popf
dec
mov
jl
mov
scas
push
and
outsb
lret
cli
xor
loope
add
or
out
push
jmp
mov
je
in
cmpsb
mov
cmp
ds
push
push
mov
popa
jge
ljmp
push
or
cmpsl
xor
adc
out
push
pop
xor
fbstp
scas
dec
add
fsubl
dec
rcr
pushf
mov
adc
jl
xor
insl
shrb
dec
pop
iret
lea
adcl
sbb
mov
movsb
xor
icebp
and
xor
fadds
dec
daa
push
mov
fwait
push
pop
push
jle
dec
mov
ss
sti
outsb
adc
fcom
je,pt
pop
dec
and
xchg
or
dec
mov
sub
repz
sub
in
add
clc
fsubrs
sbb
test
test
movsb
shll
add
lods
cmpsl
inc
inc
mov
xor
pop
push
jno
aad
jle
ror
sbb
inc
enter
xor
shrl
lahf
mov
leave
aas
mov
sarl
and
out
mov
loop
insb
movsb
js
addl
pop
stos
call
xchg
mov
and
dec
mov
je
lods
pushl
loopne
xor
mov
or
jg
insb
mov
sahf
add
mov
mov
xchg
adc
addr16
mov
int3
push
sub
jmp
sub
pop
mov
and
pop
jno
push
mov
sbbb
ljmp
and
xchg
xor
push
adc
xchg
ds
shl
inc
repz
mov
jle
dec
pop
mov
shrl
adc
xor
fsts
pop
pusha
dec
jmp
imul
lods
mov
ljmp
pop
out
mov
cli
movsb
pop
insl
loopne
add
cmp
mov
std
cli
aaa
loope
lret
fstpt
test
js
mov
lret
call
out
stc
mov
je
jb
xor
jle
adc
cli
out
sti
pop
xor
ds
push
or
cmp
test
inc
lcall
mov
out
rcl
or
lea
lret
in
mov
adc
cmpb
das
ds
and
dec
aaa
js
or
sbb
sbb
sbb
fsts
ljmp
lahf
ss
xchg
fsubs
xchg
push
xchg
xor
jnp
std
xchg
fs
xchg
testb
lcall
inc
inc
push
aas
mov
in
je
inc
dec
fistpl
pop
sub
adc
pop
lret
xchg
andl
je
fistpl
es
inc
or
jb
das
enter
dec
inc
jl
enter
and
xor
dec
clc
xor
lcall
icebp
mov
cmc
or
inc
std
outsb
or
mov
jge
lds
xlat
mov
inc
and
aas
jle
lret
lea
popf
mov
cltd
and
jns
int
sub
adc
and
pop
push
sbb
jo
icebp
stos
je
ds
xchg
cwtl
cltd
clc
rclb
or
cmpl
stc
add
stos
into
and
bound
cltd
lea
push
js
and
jae
fnsave
arpl
iret
fistpl
push
jbe
es
or
mov
pop
or
cmpsl
mov
dec
sbb
inc
rcrl
sub
outsb
add
aaa
push
int3
push
bound
sbb
adc
mov
and
jp
stos
testl
mov
js
xchg
adc
xchg
adc
in
adc
dec
repnz
lcall
ljmp
lock
cmp
push
outsb
xor
jo
xor
push
sbb
dec
test
pop
loope
pop
rep
jecxz
xor
les
out
in
into
sbb
stc
rcl
sbb
sahf
cmp
pop
push
inc
bound
dec
sub
js
fsubrs
shrb
push
xchg
leave
xor
mov
xacquire
lds
mov
push
stc
mov
push
mov
and
and
mov
lods
sarb
in
dec
cmp
cld
sub
mov
jne
mov
fisttps
lock
cmpsb
jnp
jb
pop
out
aas
or
fs
xor
add
push
sub
mov
lods
dec
out
fldcw
push
adc
mov
jp
dec
test
mov
sbb
inc
xchg
call
arpl
pop
fistl
xor
xor
or
push
jae
dec
or
dec
add
sbb
fnsave
rcrb
movsb
mov
outsb
ficomps
flds
cmp
push
jb
jne
sub
xchg
xchg
les
dec
cwtl
fcoml
cmp
aam
iret
mov
outsb
push
add
and
insl
jb
loop
jnp
xor
xchg
mov
pop
mov
pushf
fnstsw
mov
add
adc
movsb
lcall
into
jl
xor
xchg
roll
call
cld
les
or
pusha
cmp
xor
mov
mov
sbb
into
mov
sarl
popf
pop
aas
cmp
inc
lret
and
outsb
xor
addr16
movsb
jmp
in
jecxz
push
xchg
fldenv
dec
mov
mov
dec
pop
mov
push
cmova
movsb
push
mov
jmp
push
xchg
movsb
jmp
xchg
xor
xor
cmc
mov
loopne
adc
add
lea
leave
call
pushf
cmp
jg
mov
loop
mov
mov
push
cmc
les
inc
xchg
pop
mov
xor
adc
popf
sarl
sarb
jo
mov
out
jno
sbb
mov
push
in
inc
push
sbb
cmp
out
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
sbb
adc
xchg
outsl
mov
popf
enter
jo
xchg
sbb
and
in
jae
imul
jno
pop
fisttpll
sub
dec
xchg
roll
pop
pop
jo
pop
cs
jns
jmp
das
gs
subl
mov
imul
adc
rclb
mov
jbe
pop
jb
insl
cmpsb
ficoml
or
das
jno
push
pop
cli
iret
push
std
sub
movsb
mov
xorb
js
aad
rorl
fsts
cli
arpl
or
outsb
sti
aam
movsl
insl
cmc
or
subl
push
out
movsb
clc
pop
mov
add
out
cwtl
call
ret
xchg
or
sarl
push
adc
jnp
sbb
push
cmp
or
loope
or
cmp
arpl
inc
clc
test
in
ljmp
scas
push
in
repz
xchg
pop
addr16
cmp
outsb
test
adc
xorps
mov
inc
jecxz
pop
out
mov
mov
loopne
mov
jecxz
bound
xor
xchg
jge
xor
pop
sbb
divl
clc
daa
xchg
clc
stos
nop
adc
sti
add
fcomip
pop
out
mov
in
stc
mov
inc
outsb
dec
rolb
jecxz
cmpsl
ja
sbb
and
in
leave
inc
lea
std
adc
push
aas
cmp
test
es
mov
pop
test
cld
sub
pop
jl
out
sbb
mov
arpl
adc
ret
sub
dec
sbb
add
bound
push
dec
fsubrl
sub
cli
add
dec
sti
jmp
mov
aam
dec
insb
adc
sub
sbb
pop
test
jp
push
mov
arpl
mov
out
adc
add
and
in
out
stos
xor
cwtl
push
dec
xor
in
sub
or
stos
xchg
mov
daa
xchg
jg
mov
pushf
sub
loop
out
idivl
or
xlat
mov
ljmp
sub
loop
addl
jo
iret
nop
aas
popf
or
arpl
stc
out
adc
jl
rolb
popa
clc
cmpsb
sub
fsubp
in
cmpsl
inc
adc
cmp
or
inc
dec
inc
xor
je
sub
rolb
sbb
or
int
dec
cld
shlb
pop
cmp
push
aas
cwtl
add
enter
je
lods
mov
mov
popa
push
jno
das
cmpsb
inc
shl
popf
aaa
rorb
push
add
mov
dec
fisubrs
adc
dec
aad
xchg
dec
mov
bound
shrb
inc
mov
inc
xor
negb
jmp
gs
in
adcl
pop
mov
or
test
icebp
out
repz
jae
imul
mov
lods
ret
cmc
cmp
mov
insb
mov
pop
stos
jle
mov
xchg
aad
lock
inc
fwait
pop
push
fildll
pop
out
aam
in
punpckldq
push
icebp
jnp
jae
add
mov
ss
dec
adc
pusha
sub
ljmp
adc
ljmp
xchg
je
and
pop
lods
in
loopne
xor
push
add
popf
ret
and
or
push
and
adc
roll
ret
lods
and
aam
push
out
cwtl
mov
int
mov
stos
inc
sbb
out
or
int3
and
and
sub
jle
jo
lods
xchg
dec
mov
fldln2
cmp
out
repz
push
clc
gs
adc
lock
repnz
and
pop
inc
fsubp
sbb
mov
add
xchg
sbb
das
test
es
icebp
enter
cmp
loopne
xor
test
push
xlat
mov
mov
jp
inc
repnz
ds
dec
dec
push
dec
lcall
adc
jmp
lret
cwtl
xor
es
jecxz
cmpsb
sub
jmp
imul
add
stos
repz
jns
pusha
xor
mov
test
pop
jl
in
loopne
pop
mov
dec
data16
lret
inc
test
fnstenv
rcrl
jae
sahf
adc
push
loope
test
cmp
ss
jp
inc
cltd
mov
shll
xlat
roll
mov
jo
sub
xchg
popa
mov
cmp
dec
lcall
sbb
sub
cli
dec
pause
lea
shlb
enter
in
mov
or
fs
mov
mov
pushf
push
and
aam
cs
adc
pop
jno
xchg
ret
mov
fcoml
es
xor
fidivl
jecxz
insb
dec
xor
test
jecxz
cmc
dec
inc
out
jl
sti
call
cwtl
push
pop
push
jb
and
adcb
push
mov
xchg
adc
jbe
je
mov
sbb
les
push
dec
sbb
addr16
xor
mov
jo
shlb
fsubp
sahf
xor
add
pushf
ret
cmpsl
jae
pop
xlat
push
pop
cmc
add
call
fsubl
movsl
inc
pusha
cmp
movsl
inc
sti
stos
mov
jecxz
orl
je
mov
mov
dec
xor
enter
test
lret
into
xor
push
in
stos
jecxz
sar
mov
mov
ret
add
dec
mov
jns
ds
shl
sbb
jno
into
dec
sahf
lods
mov
insb
pushf
lds
cwtl
out
fsubrl
mov
and
mov
mov
lods
test
movsl
push
loop
clc
pop
mov
shrl
add
aas
addr16
jns
out
inc
push
sbb
into
xchg
mov
testl
imul
fs
clc
add
test
out
pop
pop
pop
dec
mov
je
frstor
pop
pop
insl
scas
jmp
adc
shll
mov
mov
aaa
jl
fildll
pop
cli
lret
push
jecxz
mov
les
cld
stc
and
push
mov
pop
adc
inc
cmp
jae
stos
xor
outsb
iret
hlt
icebp
inc
push
mov
sbb
pop
in
mov
mov
dec
andl
addr16
rclb
inc
inc
pop
arpl
ret
icebp
xor
lahf
push
push
mov
mov
rclb
out
repz
cmc
push
jbe,pn
fcmovbe
inc
outsb
out
inc
mov
sbb
lret
jecxz
adc
pop
lret
mov
ss
push
lds
sub
mov
jns
popf
cli
cmc
mov
xchg
push
cmpsl
jno
pop
scas
mov
and
adc
or
xor
sarb
aas
sti
pop
jg
pop
push
ja
mov
fmuls
loope
or
mov
ljmp
lock
mov
mov
lds
and
loope
test
outsl
jnp
std
adcl
push
and
sbb
cli
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
xor
push
ja
mov
mov
add
inc
push
inc
adc
mov
xchg
mov
lret
test
pop
cltd
sbb
sbb
fcompl
adc
in
popf
add
or
jl
xchg
lea
push
std
xchg
pushl
adc
inc
push
and
inc
out
fisubrl
lret
mov
xlat
aas
jo
ret
jmp
xchg
inc
xchg
mov
decl
and
or
loopne
fprem1
push
inc
sti
aaa
push
mov
ret
inc
add
mov
bound
scas
fsubrl
cli
push
lret
scas
aam
mov
sbb
imul
pop
push
rolb
scas
sbb
sub
cli
insb
mov
mov
push
movsb
movl
lods
jbe
test
adcb
aam
sub
lods
je
xchg
add
clc
inc
iret
push
xchg
dec
mov
fsubs
test
push
pop
adc
mov
inc
aad
cmp
popf
adc
gs
dec
clc
inc
xchg
push
mulb
fidivl
xchg
pop
bound
adc
add
adc
ret
sub
xchg
out
lret
outsb
stc
sub
jns
ret
rcl
push
mov
gs
aaa
sub
sbb
xchg
lret
repz
cmp
and
mov
xchg
dec
dec
jecxz
jge
in
xchg
gs
in
mov
in
mov
inc
enterw
cmpsb
aad
dec
xor
add
jnp
jne
push
mov
lcall
xchg
lods
lock
cld
lods
sbb
pop
rclb
lds
cli
push
nop
iret
es
ljmp
inc
test
push
outsl
adc
jmp
lea
sahf
sub
sub
shll
dec
es
mov
mov
outsl
in
jecxz
mov
mul
mov
jns
lds
sarl
dec
into
movsl
dec
rclb
jmp
dec
loope
inc
lea
jle
mov
or
dec
lcall
ja
std
pop
xchg
jo
adc
or
dec
pushf
mov
push
sti
scas
lret
mov
mov
mov
sub
mov
dec
add
add
push
mov
sbb
xor
mov
and
push
xor
arpl
mov
rorb
push
jbe
dec
shlb
adc
cmp
insl
in
mov
imul
dec
dec
cmp
jne
shlb
insb
outsb
xor
lret
jne
adc
pop
mov
aad
push
add
mov
push
sarl
sarl
push
jnp
sbb
fmul
jbe
or
lcall
scas
push
int3
jb
bound
add
fwait
mov
jns
into
push
cld
inc
dec
mov
mov
mov
mov
xchg
jnp
insb
jp
xchg
ja
pop
jo
js
imul
sbb
and
adc
dec
inc
call
inc
repz
mov
std
imull
mov
cmp
call
dec
xchg
sahf
xchg
jg
stos
jg
imul
lcall
or
adc
imul
int3
in
jo
int
jle
add
xchg
xlat
jl
inc
jns
and
imul
in
jno
adc
and
roll
mov
mov
pop
dec
xlat
aaa
sarb
mov
jecxz
dec
stos
push
inc
pop
add
aad
pop
pop
sub
loopne
inc
aaa
pop
bound
addl
push
out
push
dec
rcr
mov
dec
jnp
sbb
dec
push
shll
addl
pop
les
sti
lret
jecxz
xor
jmp
mov
ljmp
lods
aaa
lea
mov
ds
outsl
cltd
add
insl
mov
mov
scas
sub
jae
push
push
into
jbe
adc
mov
ret
cmp
mov
rcrb
pushf
xchg
ss
imul
jno
shll
mov
sahf
xchg
mov
mov
xor
and
orl
roll
inc
inc
popf
cli
xchg
scas
cmp
and
hlt
xchg
mov
mov
xchg
xchg
jle
mov
mov
adc
xor
push
jno
jl
hlt
and
in
cwtl
insl
push
ret
dec
test
aas
aas
jecxz
lret
mov
add
lcall
jecxz
cmp
push
mov
das
cli
push
mov
scas
fwait
mov
movb
or
adc
mov
stc
stc
jl
repz
inc
pop
mov
sub
movsb
mov
nop
js
lea
cmpsb
push
xor
cli
movsb
int
cmpsb
cmpl
mov
sahf
or
pop
outsl
push
push
push
shlb
jge
inc
pop
sub
sub
adc
fsts
xor
add
or
insl
js
push
sarl
scas
stos
clc
icebp
inc
pop
push
xor
cmpb
sub
ljmp
inc
jle
xor
mov
and
fimuls
subb
lods
enter
inc
nop
mov
add
ja
fistl
repz
sbb
test
mov
lods
jg
adc
mov
sub
xor
push
inc
pop
insb
loope
push
pop
rcrb
sbb
jnp
dec
ljmp
lahf
inc
dec
add
hlt
aaa
pop
mov
mov
paddsb
shrl
inc
and
ror
xchg
stos
aaa
cmp
sbb
mov
cwtl
xor
dec
adc
lcall
or
call
xor
sub
popf
and
stos
inc
inc
sbb
add
jl
jo
int3
adc
cmp
mov
xchg
pushf
fadd
cmpsl
mov
jno
xor
cwtl
insl
std
jl
xor
xchg
mov
lahf
jne
nop
cld
lret
pop
int
xchg
pop
add
xchg
cmp
push
mov
lods
adc
jge
sbb
cmp
xchg
sbb
sbb
inc
rolb
fs
mov
xor
xchg
shrl
mov
pop
test
inc
fidivs
out
jmp
int3
mov
jmp
insb
jg
stc
out
dec
push
lret
movsb
xchg
jecxz
xor
sub
int3
push
xor
lret
jmp
mov
xor
mov
mov
data16
mov
in
out
add
ret
xor
pop
ret
push
dec
and
jbe
push
inc
scas
jae
sub
pop
outsb
dec
aam
push
ret
push
dec
sbb
shr
or
pop
sbb
sbb
leave
sahf
mov
adc
mov
mov
push
das
shrl
xchg
jp
adcb
add
fbstp
icebp
xor
pop
pop
enter
cld
dec
jo
lahf
out
inc
cmp
push
push
xchg
jle
pop
sub
push
cmp
cmp
in
rolb
add
push
in
and
push
cmp
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
ret
jbe
dec
iret
sbb
push
out
mov
call
ret
in
push
sbb
or
inc
rolb
adcb
outsb
lcall
adc
roll
mov
xchg
inc
fdivs
sub
test
shrl
add
xchg
mov
shrl
popa
jp
mov
sahf
adc
dec
xchg
in
inc
mov
fisttpl
int3
sbb
ret
add
aam
in
popa
sub
push
xor
add
adc
imul
jo
inc
iret
out
mov
mov
jo
jnp
sbb
lret
or
sbb
sti
test
loop
cltd
outsl
mov
push
dec
and
push
mov
or
inc
lcall
ja
in
adc
xlat
pop
and
push
inc
adc
or
mov
fcoml
mov
jno
pop
in
shl
or
lret
cld
xor
insl
cmp
daa
mov
aaa
mov
fcomi
push
adc
nop
sub
pxor
out
aad
popf
ss
stc
sub
and
pop
add
sub
push
hlt
mov
xchg
cmpsl
adc
or
int
loope
xor
and
jnp
inc
xor
push
xchg
jmp
fmull
mov
dec
push
adc
jb
int3
into
jae
outsl
mov
cltd
mov
jge
lcall
in
jb
pop
push
jnp
adc
adc
ret
adc
jp
push
popa
shll
cmpsl
lret
fst
std
fisttpll
call
mov
ret
mov
out
inc
lahf
mov
aad
dec
push
and
sbb
jecxz
in
pop
mov
mov
or
mov
imul
mov
jo
push
fwait
inc
cltd
cmp
adcb
sub
arpl
test
sbb
fistpl
push
pushw
mov
pop
pop
jno
repz
scas
dec
rolb
loope
ficoml
sbb
jbe
sub
call
subb
test
insl
and
and
dec
mov
xchg
xchg
test
in
vmovaps
repnz
push
jo
aaa
xlat
add
dec
mov
push
inc
js
scas
sbb
imul
dec
mov
ret
nop
jns
pop
dec
and
mov
sbb
mov
push
lcall
int
mov
xor
push
rcrl
cs
fs
add
pop
int
push
daa
pop
add
mov
xor
imul
rclb
addr16
pushf
outsl
cmp
les
pop
pop
dec
push
add
cltd
xchg
mov
and
rorl
faddl
add
jbe
lcall
imul
fcoms
popf
adc
rorl
xchg
icebp
es
out
sahf
sbb
pop
arpl
xor
inc
xor
cmc
mov
sub
outsl
pop
add
jns
outsb
jnp
int3
scas
jbe
arpl
lret
arpl
push
icebp
sbb
cmc
pop
arpl
mov
adc
rorb
mov
inc
lret
cmp
mov
jae
cmp
mov
push
dec
or
sahf
test
adc
push
jae
bound
out
in
ja
data16
das
mov
mov
push
std
stos
cmp
mov
dec
addr16
jno
lahf
xor
hlt
iret
lcall
aad
insb
loop
in
inc
daa
stos
xor
rol
pop
pop
jno
mov
mov
dec
push
dec
mov
adc
mov
sbb
stc
iret
inc
insl
das
pop
outsb
mov
data16
popl
lds
das
sbb
nop
jl
sub
addl
jl
paddw
orl
mov
push
insl
or
sub
mov
inc
ds
in
dec
fdivrs
out
movsb
inc
inc
push
inc
adc
js
add
pop
push
pop
mov
xor
flds
shlb
xchg
xchg
outsb
fmuls
push
xor
fsubl
orb
test
mov
pop
lea
adc
push
test
xor
fadd
push
lock
mov
iret
pop
mov
movsl
sub
shll
xchg
in
idiv
cwtl
lea
pop
dec
push
mov
mov
movsb
jl
xchg
cmpsb
scas
scas
and
mov
lods
sbb
loop
cwtl
pop
test
in
mov
jbe,pn
and
dec
sti
sub
ljmp
push
in
dec
push
mov
scas
loopne
lcall
lods
cmp
ret
lahf
out
dec
daa
inc
int3
jno
out
xchg
outsb
jge
and
lock
jns
push
es
xchg
xlat
mov
inc
imul
sti
loop
lods
dec
repz
jmp
mov
mov
pop
mov
dec
insb
lahf
jp
in
in
jnp
repz
add
and
pop
dec
jne
cmp
sbb
cmpsl
lret
fistl
xor
lcall
or
jb
ss
xor
sarb
sub
push
loope
sahf
rcrb
sub
push
ret
outsb
loopne
sbb
dec
rorb
int3
jecxz
xchg
mov
pop
lahf
loopne
test
adc
mov
nop
repz
jns
push
js
addr16
imul
stos
ja
mov
fisttpll
or
push
dec
dec
adc
stos
test
lahf
jno
mov
push
daa
push
dec
ret
pop
add
mulb
push
dec
lods
es
fnsave
cmp
hlt
adc
dec
fildl
dec
lea
sarb
das
jmp
jge
jne
or
mov
add
repz
jne,pn
mov
ret
mov
pop
adc
adc
lds
mov
dec
mov
hlt
sub
fcmovnu
mov
sbb
movsl
or
or
repnz
mov
stc
enter
pop
dec
mov
add
jbe
and
sub
push
push
hlt
sub
int
out
jnp
mov
pusha
lock
mov
rcr
or
je
in
inc
pop
ljmp
je
aam
cmp
sbb
icebp
jbe
cmpl
and
loope
sahf
nop
cmp
mov
push
mov
add
inc
xchg
fs
les
ja
mov
scas
inc
xor
insb
adc
mov
push
hlt
mov
jb
mov
adc
mov
ljmp
push
imul
ja
loopne
inc
pop
imul
fimull
add
aad
add
cld
out
nop
sti
pop
pop
mov
fstp
or
inc
push
addb
loop
scas
cmp
in
shl
int
xor
sahf
mov
pushf
ficoms
xor
push
or
xlat
lret
mov
mov
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
call
ja
push
pop
mov
mov
mov
js
mov
int
jo
xlat
xor
sahf
lods
repnz
cs
cld
mov
add
xchg
push
mov
push
outsl
gs
jp
data16
add
mov
adc
aad
jmp
adc
nopl
xlat
add
and
xor
imul
test
test
insb
sbb
sub
gs
and
xchg
dec
lea
daa
mov
push
lret
out
in
loop
push
inc
dec
adc
mov
fidivrl
stc
sub
cmpsb
stos
ds
pusha
add
pop
popa
cmp
iret
idivl
mov
int3
leave
mov
xor
xchg
push
pop
lret
clc
mov
outsl
push
jo
pop
imul
mov
jl
shll
dec
sahf
xor
mov
addr16
or
sub
add
js
dec
cwtl
arpl
lret
cmp
sbb
hlt
mov
lds
mov
mov
movsb
cmp
lock
sti
push
mov
or
jecxz
leave
jmp
gs
pop
imul
add
sub
repz
in
adc
pop
pop
fstl
arpl
mov
ja
cli
ds
xor
dec
repnz
and
cmpsl
xchg
js
inc
push
divl
inc
mov
mov
rclb
aas
fisttps
mov
jl
xchg
stos
jge
adc
pushf
jmp
fldenv
xor
cmp
xor
cmp
fistpl
cli
adc
cmpsb
ds
push
mov
inc
or
in
and
sub
adc
or
flds
inc
addb
les
add
dec
and
movsl
and
lock
mov
lods
adc
rcr
loop
xchg
lds
in
fs
popf
cmp
leave
fidivl
dec
cmpsl
sub
sbb
pop
leave
dec
fmuls
xchg
sub
sbb
pop
push
stos
sbbl
mov
imul
pop
aaa
push
push
jno
xchg
std
push
fcmovnu
or
shrb
xor
adc
mull
rcrl
lods
sub
sbb
sbb
jecxz
add
rcl
mov
mov
lds
das
sbb
and
jl
in
jp
in
push
mov
mov
outsb
jge
xor
inc
adc
push
mov
pushf
out
cmp
xchg
xor
outsb
dec
movzbl
xor
sarb
ljmp
inc
fwait
pop
mov
pop
inc
adc
adc
xchg
cs
mov
mulb
imull
pusha
clc
xlat
cmp
repz
ret
cmpsl
push
mov
jns
inc
xchg
and
pop
mov
pop
popa
push
mov
jg
rcll
push
jl
outsl
loopne
cmc
adc
and
rcll
adc
inc
mov
pusha
sarb
test
js
sbb
lods
fstps
sbb
adc
xor
lret
ret
xor
cmp
shll
lahf
xor
and
mov
in
hlt
rolb
jmp
cltd
mov
push
push
out
in
mov
sbb
ljmp
jg
pop
icebp
loope
and
xor
jp
xor
or
lods
fcmovnbe
add
xor
xchg
mov
push
scas
xor
xchg
mov
push
pop
sbb
sub
xchg
xchg
pop
fsubr
mov
jae
fcomi
add
inc
xchg
jae
inc
jge
push
cmpsb
lods
pop
nop
mov
xchg
daa
bound
aaa
jl
cld
shll
shr
adc
arpl
movzbl
sti
mov
scas
xor
mov
stos
adc
lods
jne
lret
xor
out
sub
pop
in
dec
mov
jo
push
outsb
adc
insb
cltd
push
ss
push
sti
inc
fisttpl
lret
mov
test
js
pop
inc
push
xchg
and
and
int
cwtl
sbb
dec
xchg
cld
and
cwtl
mov
jl
test
insl
push
cmp
stos
shlb
arpl
cld
clc
xchg
mov
mov
loop
sar
mov
fwait
insb
push
push
mov
scas
loope
and
mov
dec
push
jge
adc
dec
mov
jg
push
test
cmc
je
repz
rorb
push
mov
aaa
test
sarl
sbb
mov
or
movq
dec
aam
mov
cmpsb
lret
std
les
das
mov
filds
mov
repz
mov
int
aaa
mov
out
bound
lea
and
adc
into
imulb
enter
mov
and
mov
rol
lea
pop
inc
dec
aam
xchg
jne
and
cmpsl
ljmp
mov
cmp
loope
inc
incb
pop
cmp
insb
xchg
dec
or
dec
loop
gs
mov
pop
into
loop
dec
xchg
sub
xorl
cmc
int3
sub
icebp
pop
stos
xor
mov
popf
pop
inc
loop
cwtl
mov
cmpsb
push
inc
adc
cmp
ds
dec
jae
out
movsl
subb
enter
fcomps
inc
icebp
jbe
inc
sub
scas
pop
push
outsb
jnp
jb
mov
stos
adc
sbb
std
sbb
mov
test
ljmp
lret
mov
jnp
cli
push
sub
outsl
pop
mov
mov
pop
mov
cmp
loope
xchg
shl
adc
sahf
adc
lds
loope
cwtl
test
inc
pop
adc
pop
jns
mov
jbe
mull
adc
iret
cld
cmp
stos
adc
mov
lret
mov
je
cmp
jbe
and
xor
jge
jmp
stos
or
jge
cli
sbb
sbb
aam
aaa
jbe
add
mov
or
fiaddl
mov
and
je
xor
lds
jmp
dec
lret
mov
jbe
in
lret
pop
cmp
or
mov
push
jl
gs
aas
dec
inc
cmp
dec
cltd
adc
pop
push
icebp
sub
push
js
ljmp
sub
clc
fistps
jae
xlat
lcall
gs
adc
sub
incl
hlt
xchg
bound
inc
lahf
and
mull
pop
mov
sub
scas
ds
decb
jle
add
mov
into
repnz
jge
sbb
int3
sub
outsb
inc
xchg
jmp
lret
pop
pushf
hlt
in
mov
and
fsts
inc
inc
xor
enter
pop
xchg
scas
arpl
pushf
outsl
and
xor
pop
sbb
clc
inc
lret
push
leave
dec
sbb
addl
lea
lret
pop
xchg
imul
into
push
xchg
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
pop
repz
mov
cmp
ja
jp
pop
fdivl
or
lds
jae
ret
pop
cmp
shlb
or
jbe
push
dec
sub
mov
les
jecxz
imul
outsl
in
add
das
jle
and
icebp
cmpsl
hlt
js
ret
outsb
or
faddp
add
xchg
push
cmp
cmpsl
adc
cmc
out
pop
cmpsl
inc
push
mov
mov
push
cmpsb
dec
pop
or
adc
imul
pop
xlat
jns
sbb
loope
pusha
jle
fildll
cmp
and
ja
lds
mov
sbb
or
or
sub
adc
ret
xchg
xchg
mov
and
mov
sub
mov
cli
and
mov
stos
test
xlat
jno
inc
xchg
ss
xchg
pop
pop
ja
push
fdivp
je
mov
sub
cmpsl
ljmp
cmp
addr16
popf
jae
push
jb
push
and
lods
dec
add
dec
pop
mov
pop
jl
out
js
pop
insb
gs
cld
in
les
or
xchg
imul
daa
mov
cmpsb
pushf
dec
sbbl
imul
push
pop
xor
in
dec
gs
jne
outsb
or
or
fdivp
pop
ret
jecxz
in
leave
jmp
mov
cmpsb
or
xor
sub
add
cwtl
insl
jns
push
adc
arpl
iret
mov
ds
cmpsl
cltd
cmp
sbb
lock
rcr
imul
cmpsl
xor
xlat
arpl
dec
ds
pusha
mov
cmp
hlt
pop
and
cmc
scas
xchg
pop
mov
dec
insb
xor
dec
lahf
mov
or
inc
and
xor
sti
mov
test
xchg
push
test
push
cmp
inc
xchg
inc
mov
imul
jns
inc
jbe
imul
push
lcall
sub
in
stos
and
ret
jecxz
pop
es
cmp
or
les
test
in
add
jne
xchg
fcmovnb
bound
jno
mov
jmp
out
and
test
xor
mov
shrl
xor
imul
fnstenv
cmp
jne
not
dec
jecxz
mov
push
cltd
push
push
popf
and
cli
loope
cld
lods
es
mov
fsubr
fiadds
or
mov
push
test
fs
push
xor
or
xchg
in
cmp
inc
add
sti
add
leave
push
or
lcall
sub
cli
test
inc
xor
dec
aas
sbbl
insl
sub
shll
inc
push
xchg
addr16
xchg
jnp
mov
movsl
into
rcrl
ret
mov
mov
cmp
add
dec
icebp
sbb
or
lds
inc
fldpi
out
daa
js
add
hlt
imul
or
jae
or
push
stos
push
and
aam
mov
pop
ja
dec
add
test
fstpl
jge
mov
stos
mov
lret
or
jnp
push
mov
jmp
pop
add
inc
insl
or
mulb
outsl
sbb
dec
cmp
add
mov
mov
cld
into
icebp
dec
pop
es
pop
jl
cld
sarl
add
xor
mov
jp
add
cmc
xchg
jne
mov
faddl
pop
popa
decb
in
cmpsl
lods
test
jb,pn
in
jg
pop
mov
fildl
loop
lcall
stos
ret
and
push
jg
imul
les
je
sub
mov
out
jp
sub
fstl
xchg
hlt
cmp
push
std
fs
inc
data16
push
inc
arpl
xor
inc
aad
sbb
inc
jl
aad
inc
or
mov
adc
repnz
fiadds
cmp
leave
addr16
loop
inc
fcomi
xor
mov
or
ja
testb
xchg
lods
in
mov
pop
dec
and
movl
xchg
pop
lret
lea
cmpsb
jmp
je
sbb
cmp
scas
add
sub
mov
lahf
orps
fimuls
cmpsl
cmp
or
and
ret
mov
sarb
movsl
pusha
adc
or
decl
mov
xchg
das
inc
pop
clc
test
ss
gs
xchg
push
adc
test
mov
push
test
push
stc
cld
data16
mov
les
and
test
push
mov
push
rcrb
jno
push
in
mov
popf
inc
push
in
lahf
outsb
loope
add
mov
add
add
out
add
push
pop
mov
add
cmpsb
dec
and
sbb
or
lcall
fists
fwait
xchg
jo
rorl
orb
aas
stos
jp
jb
mov
push
mov
inc
mov
call
in
lods
jne
xchg
shlb
shll
sbb
aam
pop
daa
fnstenv
jle
xor
dec
sahf
fdiv
imul
inc
and
cmp
ficoml
mov
aad
shrb
lock
repz
xchg
lock
loope
ss
cli
jbe
cmp
push
pop
push
aaa
ja
orl
adc
pop
arpl
test
popa
pop
inc
dec
int
lea
fisttpl
mov
push
stc
movsb
pop
mov
shll
xor
xchg
cmpsb
sbb
pop
aas
stc
jle
dec
dec
pop
adc
pop
mov
push
daa
fs
out
cs
dec
xchg
or
and
les
xor
outsb
mov
fwait
ss
out
incl
pop
xchg
dec
addr16
mov
test
mov
into
lock
or
int3
jle
xor
pop
imul
mov
sub
sub
sahf
sarb
adc
in
lock
pop
lock
in
in
dec
jnp
lret
or
jne
addr16
and
daa
xchg
fdivs
mov
test
fidivrs
jmp
cmp
outsl
sahf
test
mov
in
addr16
inc
enter
xor
enter
icebp
in
cld
mov
mov
mov
pushf
or
dec
neg
push
mov
add
add
mov
mov
es
ror
jge
stc
mov
sub
ret
rcr
leave
jl
shrl
jae
cs
mov
loop
cld
dec
addl
mov
pop
fstl
fwait
repz
adc
imul
test
into
movsb
push
gs
ret
icebp
out
dec
mov
push
xor
adc
sahf
mov
testb
pop
out
xlat
xchg
xor
pushf
fdivp
inc
inc
jbe
cmp
cmp
cwtl
mov
arpl
dec
inc
mov
imul
inc
push
addr16
aam
test
cld
out
repnz
jmp
rclb
imul
mov
aas
adc
arpl
cli
lahf
jmp
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
addr16
ja
xorb
insl
fdivl
and
pop
mov
dec
sub
xor
or
lods
mov
cmpb
pop
in
adc
js
scas
push
out
adc
fdivr
sbb
lret
dec
xchg
sub
roll
aam
data16
fnstenv
dec
push
cmp
jle
mov
fsubrp
mov
repz
push
jp
mull
in
in
into
mov
aas
roll
mov
lcall
sub
andb
lret
jp
inc
shr
sar
lds
cmpsl
dec
mov
push
jp
mov
or
cwtl
in
lods
movl
outsl
ret
aas
loope
inc
fstpt
idivl
sbb
aas
mov
filds
cmp
jno
mov
pop
stos
int
lods
aam
push
add
adc
add
mov
adc
das
subb
add
gs
dec
repz
stos
jbe
fidivrs
adc
cmp
cwtl
call
mov
push
ret
pushf
out
inc
loopne,pn
sub
imul
inc
negb
xchg
inc
sarb
addr16
js
ljmp
pusha
xchg
or
adc
or
orb
pop
fdivs
mov
dec
in
fnstcw
cmp
push
mov
and
nop
add
sub
add
xchg
or
lret
xchg
dec
add
dec
fisubrs
ljmp
jbe
lods
mov
xchg
mov
pushf
jp
xchg
fistl
mov
cmpsl
inc
xchg
jecxz
repz
pop
divb
cmpsb
hlt
lret
sti
sub
test
jge
mov
test
cmp
gs
add
into
stos
jle
sbb
jnp
mov
pop
movsb
inc
sar
sarl
mov
pop
out
cltd
dec
sahf
insb
jns
fcompl
mov
fiadds
mov
mov
hlt
popa
cmp
loop
add
sbb
mov
out
fcoms
or
dec
push
rclb
call
xchg
lods
mov
inc
push
push
aam
sbb
mov
and
ljmp
repz
adcl
test
sub
jnp
mov
ja
add
aam
arpl
pop
out
jp
adcb
ret
fidivrs
ss
int3
loopne
aam
jl
xor
push
mov
dec
loope
lock
stc
in
xor
repz
inc
repz
call
imul
int
push
xor
ds
sub
aas
sahf
jae
mov
cmp
push
lods
mov
jecxz
xor
push
pop
jae
dec
cs
push
push
mov
ss
iret
and
aad
cltd
sar
mov
int
mov
jle
fsts
into
and
xchg
movsl
mov
pop
not
lds
jo
leave
lret
rorl
cmp
lock
fmull
pusha
test
ret
mov
sbb
push
and
jae
or
gs
icebp
cmp
rclw
fidivl
stos
mov
subb
cmp
in
xchg
movsb
mov
in
mov
arpl
call
pop
xor
pop
jle
cmp
adcb
jmp
leave
bound
xchg
pop
dec
je
xlat
sub
pop
push
loop
mov
int
sti
mov
jnp
scas
sub
pop
mov
sbb
shll
ds
mov
push
adc
xor
out
fnstenv
daa
cmpsb
and
hlt
adc
mov
ljmp
sub
sub
popf
or
popa
std
jns
dec
sbb
cmp
sub
lret
out
mov
adc
and
mov
or
mov
inc
push
add
or
add
out
and
inc
inc
imul
and
les
adc
xlat
mov
mov
push
insb
xchg
sarl
dec
push
jns
js
iret
int
push
mov
inc
or
jmp
ljmp
mov
inc
dec
jle
inc
imul
jmp
jbe
jnp
push
inc
fisubrs
sub
xchg
test
ljmp
pop
cmp
fidivrl
inc
int3
scas
jnp
mov
add
scas
mov
test
sahf
rclb
les
vunpcklps
xchg
sahf
sbb
adc
addr16
mov
stc
outsl
or
rep
xchg
lock
xchg
imul
mov
pop
cs
movb
out
cld
mov
add
je
pinsrw
mov
clc
hlt
sbb
mov
data16
enter
aad
mov
jb
dec
xchg
jecxz
jecxz
ret
jp
pop
xor
inc
mov
cmp
cmp
test
mov
rolb
clc
addr16
les
jge
add
xchg
push
ja
lcall
inc
pop
dec
jmp
and
xlat
fwait
sbb
imul
mov
rsm
sbb
stos
jbe
shr
bound
daa
inc
xlat
roll
dec
imul
mov
jo
aad
aam
scas
scas
fdivrs
scas
sub
and
inc
mull
rorb
mov
mulb
sahf
sub
and
sub
sub
lea
into
test
insl
into
push
mov
pop
push
add
and
arpl
shrb
ljmp
and
aaa
cwtl
and
inc
movsl
lock
sti
sbb
add
gs
push
jae
xchg
stos
mov
aaa
jne
test
adc
mov
xlat
and
movsl
add
out
test
cli
cmp
inc
fnsave
decb
mov
repz
push
dec
inc
outsl
in
fcoms
enter
rcl
ljmp
sub
jne
shl
mov
dec
xchg
add
call
mov
mov
insb
mov
mov
pop
fwait
mov
adc
xlat
sbb
adc
jmp
les
fs
mov
jae
je
jmp
sbbl
aas
jbe
push
adc
aaa
push
jg
cmp
push
sub
stos
xorb
cmpsb
inc
imul
int
lods
mov
mov
in
cli
dec
fst
orl
addb
push
or
or
pushf
outsl
stos
jecxz
test
push
lods
shll
int3
mov
pop
setg
push
mov
push
movsl
xor
out
shlb
repnz
pop
pop
jp
popf
ss
scas
jl
and
int
jecxz
xchg
sub
or
pop
dec
inc
jecxz
sub
mov
and
ljmp
adc
mov
cltd
aam
fisubs
add
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
cmpsb
cmc
outsb
xchg
negl
ja
jl
pusha
jle
aaa
in
scas
inc
movsl
mov
mov
fisttps
test
inc
xchg
fidivs
push
imul
lret
cmp
mov
mov
or
insl
rcll
inc
xor
fists
arpl
pop
imul
pop
loopne
push
stos
pop
cli
shl
call
test
add
sub
add
ljmp
add
dec
arpl
cmp
mov
pop
add
arpl
cld
jno
add
adc
pop
aaa
jg
pop
inc
cmp
jp
dec
outsb
hlt
aaa
imul
jecxz
jle
inc
jno
push
cmp
imul
ljmp
xorl
sub
sbb
adc
lcall
push
xor
icebp
loopne
mov
std
xchg
cmpsl
cmpsb
mov
sbb
mov
nop
mov
pop
pop
fcoml
xchg
cmp
sbb
adc
testb
inc
cmp
jmp
rolb
xor
sbb
test
mov
push
mov
cmp
and
mov
push
and
rcl
in
scas
test
lahf
adc
aaa
fdivp
stc
mov
push
and
subl
mov
mov
ljmp
inc
repnz
data16
push
fdivrs
lds
sub
pop
push
scas
enter
fs
js
adc
sub
mov
xor
aam
mov
sbb
test
in
mov
arpl
sti
shr
andb
gs
clc
mov
jne
mov
xchg
adc
mov
jge
xchg
pop
sti
adc
push
xchg
cmc
inc
dec
sti
mov
mov
mov
jg
fidivs
xchg
add
fs
xchg
mov
add
jecxz
lret
pop
fcom
xchg
aad
or
pop
lods
ljmp
mov
mov
sbb
xchg
push
shlb
adc
das
xchg
lock
je
rcrb
mov
fwait
sbb
mov
popl
out
int3
inc
jno
sbb
inc
dec
add
insb
mov
ss
sti
cltd
xorb
jno
nop
in
jne
inc
sbb
mov
mov
mov
addr16
clc
fdivr
pop
cmp
inc
adc
je
bound
aaa
add
sbb
dec
arpl
repz
pop
outsl
sbb
add
mov
mov
lds
lods
enter
js
push
mov
mov
lock
xchg
rorl
fbld
jle
aam
lds
jle
mov
push
and
mov
shr
dec
mov
mov
mov
lock
mov
jbe
push
inc
std
mov
lock
movsb
aad
pushf
insl
and
pop
in
int3
pop
sahf
rol
xchg
jns
push
arpl
lret
shrb
mov
inc
lock
in
mov
xor
loop
cmp
jne
xchg
jmp
les
mov
outsb
mov
iret
rcrl
xchg
repnz
lret
movsb
stos
push
inc
lret
add
xor
rcrl
daa
int
push
or
in
dec
mov
cmc
xor
jns
sub
xchg
stc
dec
cmp
lahf
push
sub
xlat
inc
push
dec
enter
mov
pop
mov
add
test
icebp
pop
mov
lcall
sub
outsl
cmpb
movsb
pusha
stos
xor
aad
iret
pop
add
outsl
ja
mov
xchg
mov
in
dec
into
sub
int3
dec
push
xor
scas
inc
frstor
cmp
push
lret
fcoms
add
les
aas
cmpsb
xor
xlat
rcrb
inc
stc
into
bound
jg
jmp
int3
sarl
in
jne
xor
punpckldq
jl
pushf
inc
shrl
sub
imulb
cvtps2pd
cld
sub
jge
pop
pop
inc
fidivl
popa
ja
cmp
jmp
inc
es
dec
cwtl
repnz
sbb
sub
adc
add
push
rorb
jle
jl
sbb
add
cli
and
mov
fwait
xor
cmpsb
cmp
aam
int3
pop
dec
cmp
jmp
push
or
movsb
mov
out
inc
ljmp
dec
push
add
pusha
or
dec
jl
fs
sub
xchg
shl
mov
lahf
cmc
jl
push
push
stc
mov
out
sbb
mov
dec
pop
hlt
lcall
jnp
sub
lea
jo
add
xor
xor
mov
pop
inc
loope
cmp
lret
in
popa
mov
and
or
push
inc
nop
push
cltd
adc
mov
mov
leave
dec
dec
mov
inc
adc
pop
daa
mov
inc
mov
jb
gs
or
pop
and
ret
subl
push
add
cld
push
xchg
pop
pop
rcrl
stos
mov
cmp
rclb
out
mov
mov
cmp
repz
xor
insl
and
or
gs
daa
sub
pop
push
gs
loope
push
pusha
dec
fs
sbb
out
push
xorb
sar
arpl
aam
jno
pop
or
xlat
bound
mov
lahf
xchg
dec
mov
mov
pop
and
fidivrs
nop
fwait
xchg
sahf
dec
mov
out
shlb
cmp
je
inc
push
leave
call
in
sbb
stos
and
stc
and
pusha
sub
in
callw
lods
add
out
pop
xchg
cmp
fsubl
push
in
aam
add
sub
cmp
cmp
mov
mov
jmp
mov
aaa
hlt
lahf
sbb
aad
mov
or
pushf
pop
push
push
xor
mov
out
rorl
add
xor
sub
testb
pop
stos
sbb
add
mov
xchg
fbld
enter
cld
lods
mov
mov
data16
std
mov
in
xor
movsb
mov
cwtl
into
lahf
xor
dec
jnp
jl
adc
js
or
cld
or
sbb
stc
lret
dec
pop
fld
mov
adc
push
ja
cmp
pushf
lods
sub
stos
pusha
lds
xchg
and
jae
adc
loopne
sbb
jbe
lahf
sahf
add
mov
jo
fcompl
cld
add
mov
mov
and
daa
sbb
add
inc
push
bound
rorb
mov
mov
lods
push
xchg
rolb
mov
sti
mov
outsb
das
stc
addr16
aad
outsb
and
add
jmp
nop
loope
std
js
cmp
or
sbbb
cmp
fwait
sub
idivl
popa
inc
and
popf
les
lds
mov
lock
jnp
and
iret
mov
push
insl
rcll
pushf
and
jno
aas
xor
or
addl
shl
imul
jmp
add
or
or
adc
push
ja
in
mov
xchg
xchg
movsb
les
adc
push
repnz
shll
ljmp
lea
pusha
jge
adc
das
addr16
fwait
xlat
mov
xchg
ficoms
jno
test
out
xlat
js
in
xchg
imul
mov
jp
repz
and
sub
dec
arpl
sub
lret
movsl
inc
int
sbb
in
mov
rorb
xchg
cmpsl
mov
nop
lahf
out
or
in
mov
mov
pushf
jnp
aaa
and
stos
ds
xlat
cld
mov
cmp
fidivrs
inc
insb
ficoms
push
insb
jmp
test
das
inc
or
es
jb
jecxz,pt
sub
xchg
outsb
xchg
lea
sahf
pop
in
mov
lret
pushf
dec
popf
cld
ficompl
mul
test
mov
mov
and
es
adc
mov
dec
ds
mov
jl
sbb
mov
xchg
add
cltd
mov
stos
sbbb
call
mov
divb
in
sub
sbb
test
xor
test
testl
lea
loop
xchg
xor
push
inc
call
fwait
cmpsl
add
dec
fbstp
pop
and
sub
or
or
out
cmp
and
fs
cltd
or
lret
pop
and
or
fs
repnz
xchg
mov
dec
mov
aad
sub
dec
sbb
add
in
xchg
or
push
adc
pop
sbb
sub
dec
mov
push
add
pop
mov
mov
sbb
loopne
cld
scas
repz
push
mov
scas
push
push
rcll
mov
xchg
hlt
xchg
out
xlat
shll
insb
addr16
cmp
jnp
faddl
xchg
es
pop
outsb
int
stos
ss
cmp
dec
fs
aam
pop
adc
jmp
mov
xor
cmp
sub
xor
lods
lcall
ret
lea
or
cmp
out
xchg
adcl
and
js
adc
xor
mov
and
xchg
stos
mov
jg
in
cmp
cltd
mov
push
xchg
xor
dec
into
mov
ret
add
js
or
es
ficomps
and
xchg
imul
or
jge
out
jae
jge
dec
movsb
jbe
stc
pop
xor
push
sub
xchg
adc
add
pop
addr16
lret
pop
and
pcmpgtd
icebp
sbb
daa
das
cmova
adc
xchg
aam
in
jg
jns
cmp
jle
sbb
sar
les
lds
xor
daa
ud1
jne
pop
sbb
dec
mov
fbld
jge
push
addr16
stos
imul
je
mov
imul
es
mov
adc
sti
not
mov
lods
mov
jbe
push
adc
call
xor
rcrl
inc
aaa
mov
jecxz
mov
subb
add
push
pop
and
pop
jbe
pop
popa
js
jmp
jmp
xor
mov
jae
pop
sbb
lret
xlat
jp
cmp
aam
pop
jmp
and
push
insb
jmp
fadds
test
loopne
mov
ljmp
std
cs
xchg
mov
xor
int
das
cmc
cmp
outsb
xlat
stc
and
lret
sub
push
aaa
dec
imul
xchg
sub
adc
cmp
xor
mov
fs
insl
adc
fstl
xor
aam
pop
nop
pusha
xchg
xlat
aad
aad
jmp
test
lds
sbbl
call
popa
ljmp
jnp
icebp
xor
or
dec
call
or
movsl
and
sub
sub
ja
daa
lret
loopne
enter
sbbl
ror
fidivrs
das
pop
jle
test
sub
ret
lea
cmp
and
inc
cmp
inc
lds
clc
test
cmp
outsl
or
sbb
dec
push
lcall
into
pop
jb
mov
jge
dec
sbb
aaa
lds
stos
and
cmp
sbb
scas
lods
dec
pop
cmpsb
insb
push
jbe
jne
movsb
push
jno
adc
adc
aam
stc
mov
ss
fadd
pop
sahf
mov
test
cmp
into
add
shrb
cld
ds
xor
or
xchg
out
repnz
xchg
repnz
xorl
pmaxsw
lret
rolb
jecxz
insb
or
shrl
call
arpl
fidivrs
int
sarb
sub
inc
addr16
fistpll
in
sbb
je
inc
jge
inc
mov
data16
in
mov
pushl
pushf
lcall
add
sbb
adc
mov
xlat
loope
call
pop
mov
and
in
cmp
and
adc
xchg
lcall
inc
push
jp
mov
mov
push
jecxz
fildl
aas
loopne
sbbl
add
icebp
sbb
xchg
iret
rorb
inc
pusha
push
cmpb
and
xor
jnp
rcl
lret
jno
cmpsl
add
out
aam
ljmp
pop
cmp
lock
rcrb
cmpl
arpl
idivl
mov
or
jg
push
jae
es
inc
mov
movb
into
repnz
in
pop
xchg
xor
mov
mov
int3
stc
sahf
adc
movsb
add
dec
das
icebp
out
push
xchg
mov
and
mov
jae
and
lret
dec
mov
jb
push
mov
push
mov
or
call
mov
inc
mov
je
sub
mov
and
loop
mov
ds
scas
cld
rcr
cmp
pop
xchg
or
adc
xor
pop
lret
test
xchg
out
and
sbb
inc
pop
popa
mov
in
xchg
adc
pop
pusha
or
fsub
daa
pop
test
repnz
mov
jnp
inc
xchg
sub
in
mov
pushf
mov
dec
mov
out
mov
lods
cmp
xor
jecxz
xchg
test
nop
add
dec
loope
nop
cmpsl
loope
xchg
out
scas
or
fwait
rcrl
pop
dec
hlt
pop
ds
sbb
shrb
adc
mov
rcl
sbb
push
cmpl
sub
sbb
pop
stc
out
mov
fldenv
cmp
push
push
push
mov
lcall
lret
xor
jmp
clc
sub
repz
mov
rclb
pushf
mov
jge
idivl
lcall
add
popf
in
addr16
push
outsb
xor
mov
jns
and
pop
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
or
decb
ja
test
dec
fldl
mov
enter
push
fcompl
sbb
xor
lock
sub
push
mov
cmpsl
cmp
xor
loop
xchg
sub
addr16
pop
pop
pop
int
in
push
cmp
mov
icebp
pop
ret
mov
lahf
cli
and
cmp
pop
cmpsl
orb
int
gs
pop
mov
shlb
outsb
rorb
add
mov
sbb
inc
rcr
loope
jns
jne
stc
sbb
inc
add
imul
inc
aaa
and
mov
mov
repnz
mov
push
xor
dec
jle
jle
into
jp
shll
in
inc
add
aas
stos
mov
push
mov
and
pop
lret
mov
imul
jb
mov
sbb
mov
pushf
cld
rcr
out
sub
and
testl
test
adc
imul
cltd
andl
pop
sub
shl
and
scas
std
adc
jmp
xor
dec
stos
lods
cltd
mov
push
mov
dec
pushf
mov
lods
stc
and
add
add
jg
fs
sub
mov
and
push
into
repz
rolb
pusha
scas
clc
jle
pop
sbb
mov
or
lea
rol
and
mov
out
sbbb
mov
daa
sbb
ret
pop
lods
fnstcw
data16
test
mov
cs
je
cwtl
sbb
ss
jmp
pop
xchg
in
call
outsb
cmp
sbb
mov
test
dec
shll
cmp
cwtl
ljmp
adc
mov
gs
loop
incl
inc
ss
adcb
sarl
lods
dec
pushf
mov
push
xchg
movsl
orb
stos
js
mov
addr16
mov
andl
or
jae
jns
dec
mov
xor
pop
rclb
jnp
cwtl
jmp
mov
repz
incb
lret
mov
in
pop
loope
js
loopne
xor
push
ret
cmp
mov
das
and
adc
pop
and
jp
fisttpl
xor
cmp
stos
mov
jbe
out
cmc
ret
xchg
scas
mov
jmp
mov
lock
cmpsb
add
xchg
loopne
xor
adc
push
sbb
fdivs
and
sbb
pop
and
mov
xchg
dec
cmpsl
test
addl
bound
push
mov
dec
push
in
ficompl
mov
push
rep
subl
dec
push
xlat
imul
mov
mov
mov
scas
js
and
lret
out
das
call
mov
and
mov
xor
sbb
daa
mov
mov
mov
and
dec
mov
outsl
jbe
jmp
mov
sbb
ja
jp
adc
push
mov
loopne
mov
dec
sub
mov
pop
xchg
test
jne
mov
pop
out
adc
clc
fsubs
jge
mov
fldenv
and
int3
hlt
fs
mov
out
popa
nop
test
es
ror
add
sbb
mov
mov
pop
jl
mov
call
ds
insb
rorl
mov
jmp
mov
inc
jle
adc
inc
xlat
lods
pop
in
and
int
jae
mov
mov
dec
clc
icebp
inc
jg
in
cmp
pop
and
imul
inc
mov
ljmp
aam
in
cmp
outsb
lds
dec
push
fcmovne
loop
icebp
in
or
and
bound
lret
jb
inc
mov
xor
arpl
aad
in
decb
mov
push
shl
adc
push
jnp
sbbl
in
lods
out
loope
sbb
pop
jmp
repz
aaa
nop
cmpsl
dec
fcmove
dec
sub
popa
mulb
mov
andl
xchg
inc
cld
stos
das
xchg
notl
pop
or
imul
mov
sbb
pop
cmp
enter
push
loope
movsl
xchg
adc
mov
sub
les
clc
daa
lock
lcall
mov
inc
jnp
outsl
subb
movsl
into
cmp
jmp
in
dec
add
and
andl
cmp
and
xchg
push
jae
push
pop
adc
mov
rclb
or
adc
call
or
sarl
pop
in
mov
mov
in
dec
fcompl
push
ss
push
mov
xor
sbb
pop
push
out
daa
pop
push
mov
gs
or
fnstsw
xlat
ficomps
int
adc
push
test
es
ret
inc
adc
sub
push
add
lds
pop
adc
shrb
mov
sti
jbe
lcall
mov
idivl
in
push
pop
cmpsb
leave
in
cli
in
aam
cli
jecxz
xor
mov
fwait
xor
jp
das
clc
lea
fmul
or
jae
test
push
push
imul
pop
dec
mov
data16
orl
loope
jnp
cmp
xchg
stos
jbe
add
inc
dec
jmp
and
xorl
jbe
mov
cs
cli
repnz
pop
fninit
and
lods
movsl
nop
test
imulb
mov
into
fs
mov
cltd
bound
fwait
test
lods
test
ss
or
push
iret
mov
push
jne
pop
xor
cmp
iret
mov
jmp
stos
ljmp
rcll
jl
out
xor
lcall
push
pop
in
xchg
jp
movsb
stos
or
sbb
shll
adc
xlat
je
xor
xor
xor
pop
lods
rcrl
or
fidivl
adc
hlt
mov
outsb
stos
daa
arpl
iret
jge
lahf
push
xchg
test
das
inc
out
mov
mov
dec
ss
add
pop
lods
lret
shll
mov
dec
lahf
or
ret
push
or
enter
out
add
loope
js
inc
stc
mov
fnstsw
xchg
mov
inc
push
insb
jnp
ret
ja
and
or
sbb
dec
add
mov
ret
leave
cmp
add
frstor
leave
aad
mov
in
add
mov
push
xchg
lods
push
sbb
xlat
xchg
test
movsl
out
lret
fstps
fisubrl
es
fists
xor
mov
insl
inc
inc
cmp
mov
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
mov
add
sbb
loope
pop
ja
out
xor
or
ja
cld
cltd
in
mov
xor
add
pop
mov
cmp
mov
fs
shlb
shll
lahf
sub
jae
mov
cli
nop
sahf
pop
addl
or
clc
test
rorb
add
int
mov
jno
adc
cmp
shr
xchg
inc
dec
xchg
in
lods
lods
ret
insl
jl
pop
and
mov
push
stos
imul
sub
pop
add
mov
pop
adc
hlt
fwait
cmp
loopne
out
cmp
test
xchg
fsubrl
adc
in
or
jae
lods
and
ret
int3
call
mov
push
or
pop
xchg
adcb
mov
sbb
or
add
mov
cmpsb
inc
xchg
subb
and
fcmovnu
imul
mov
shlb
aad
lock
stos
aad
out
lahf
push
pop
mov
mov
xor
mov
loopne
into
mov
stc
lods
and
sbb
idivb
push
push
mov
cmpsl
sub
insl
mov
fisubrs
fcoml
cmp
sahf
test
cwtl
incb
mov
lods
in
lods
mov
adc
push
lahf
enter
imul
mov
jnp
and
stos
inc
sbb
push
cwtl
pushf
mov
xchg
sbb
xchg
test
lea
jmp
xor
sub
jl
nop
scas
ljmp
xchg
movsb
clc
iret
or
mov
imul
scas
fxam
out
xchg
test
ffreep
loop
adc
enter
mov
enter
pop
push
dec
adc
inc
gs
or
mov
sbb
fdivr
xchg
aaa
dec
adc
addl
fbstp
pop
xor
sbb
mov
xorb
pop
jne
lret
stos
sbb
and
fbstp
or
nop
mov
inc
notb
pop
xchg
fldenv
aas
sbb
je
cmp
fcmovb
pop
pushf
adc
mov
or
mov
mov
fdiv
pusha
push
mov
sbb
fisubl
or
adc
add
or
mov
into
out
sahf
dec
aad
daa
sub
and
dec
repz
jns
mov
jmp
cwtl
dec
insl
jo
add
movsb
enter
pop
mov
jle
out
jns
cli
je
into
mov
std
leave
sbb
dec
fldt
inc
nop
out
jo
aaa
push
mov
push
pusha
lcall
out
xchg
call
in
insb
sub
sub
loope
xchg
dec
pop
pop
sbb
cmp
popa
jo
pop
or
rorb
dec
outsb
jne
mov
hlt
mov
imul
cmp
sbb
aad
cmp
aaa
mov
test
lock
xchg
pusha
mov
push
insb
lahf
lds
dec
ljmp
imul
les
jbe
repz
mov
or
dec
rol
out
or
xchg
dec
sub
jo
xlat
push
arpl
mov
inc
lds
loope
sbb
aas
xchg
repz
push
push
mov
mov
cltd
gs
repnz
insb
jp
push
add
movsl
aaa
test
push
sahf
jno
xchg
pop
lock
das
int
xchg
xchg
jecxz
mov
imul
sub
fs
leave
xchg
out
cld
xor
xchg
stc
stos
aaa
addr16
sbb
inc
int
loope
imul
jecxz
sbb
mov
popl
adc
mov
xor
lahf
in
sahf
imul
outsb
dec
in
stos
add
dec
mov
cld
pusha
std
adc
insb
pop
sarb
mov
fnstsw
lcall
hlt
jo
dec
arpl
mov
in
test
pop
fldenv
cmpsl
sbb
stos
mov
xor
add
mov
arpl
popa
xchg
arpl
or
and
and
push
imul
adc
mov
adc
sub
in
pop
inc
add
ret
sub
mov
dec
pop
lods
jg
xorb
pop
push
dec
cmp
shll
loop
dec
mov
lret
loop
imul
adc
sub
sub
xchg
mov
out
xchg
sbb
pop
stc
fdivp
out
mov
test
dec
repnz
pop
cmpsl
xchg
and
ja
xchg
addr16
xchg
or
or
mov
sub
lock
lea
inc
movb
jg
jb
pop
lahf
inc
rcr
push
out
daa
fwait
out
cmc
cmpsb
inc
test
sub
rcr
sbb
pusha
loopne
add
jmp
out
movsb
and
daa
fisubrs
jecxz
loop
test
popf
popf
int3
add
lret
stc
jns
fcmovnu
stc
xchg
dec
pop
daa
mov
es
jno
push
cmp
or
xchg
fdiv
outsl
shll
repz
outsb
and
fxch
enter
mov
in
push
and
gs
mov
dec
pop
je
sti
lcall
loope
outsb
cmc
mov
mov
dec
sub
jmp
in
insb
or
faddl
test
push
push
mov
mov
shrl
xchg
dec
jp
adc
std
dec
pop
mov
push
jg
jae
cmp
test
jo
jbe
daa
cltd
pushf
pop
ficompl
cltd
xchg
cmp
inc
adc
movb
inc
add
dec
lahf
cmc
push
mov
bound
stos
idivb
push
pop
adc
data16
repz
pop
sahf
imul
jne
xlat
mov
divl
adc
mov
and
imul
mov
in
pop
mov
test
in
aad
pop
cmp
psubd
or
dec
mov
stc
shll
jnp
int
mov
jp
adc
add
int
adc
dec
jle
jmp
jno
or
cmp
lss
cmp
mov
shl
mov
sub
and
jle
mov
mov
pop
jns
sub
loopne
jne
lret
aaa
push
ja
imul
xchg
mov
mov
stos
scas
mov
into
mov
dec
mov
in
and
push
shll
mov
jg
rcrl
gs
test
or
pop
xchg
jns
jne
pusha
jp
xchg
pop
mov
stc
fcmovne
imul
push
test
mov
repz
push
push
repz
shl
imul
sub
mov
arpl
sub
in
aad
in
xchg
xor
adc
pusha
sub
test
movsl
or
jge
std
decl
mov
scas
cmp
add
enter
and
inc
bound
xchg
or
xchg
mov
mov
inc
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
ds
mov
inc
cmp
lcall
xchg
mov
pop
mov
jmp
and
repnz
or
pop
sub
sub
push
adc
add
adc
jmp
mov
mov
and
cmp
outsl
pop
xor
pop
int3
ljmp
sbb
inc
inc
add
imull
jmp
aam
testb
js
xchg
pop
inc
push
aaa
aam
lahf
and
jp
pop
ja
paddb
add
aas
or
xchg
and
mov
jae
popf
fisubrs
push
call
inc
sahf
jp
mov
mov
outsl
in
popf
sahf
xchg
aam
or
inc
and
adc
stc
mov
mov
inc
aam
adc
push
popa
aam
xchg
les
add
ficoml
jno
pusha
test
inc
es
jg
cmp
leave
int3
mov
sti
shlb
mov
aaa
int3
dec
xchg
sbb
imul
ret
into
inc
aam
pop
je
sub
dec
inc
mov
mov
mov
rcrb
sbb
in
scas
mov
ss
sbb
lea
into
stc
shll
pop
and
inc
or
mov
movsb
movsl
xchg
sub
sarb
jle
sbb
das
test
loopne
aas
ds
iret
loopne
mov
xor
pop
icebp
cli
dec
sub
stos
add
ja
mov
out
inc
mov
out
xchg
sub
fists
dec
cmp
ss
aad
and
sbb
push
pop
dec
incb
mov
incl
push
dec
arpl
imul
inc
cmpsb
lret
xlat
aas
dec
test
adc
sahf
cmp
lods
lock
test
cmp
adc
xchg
pop
rolb
xchg
xchg
and
xchg
jl
mov
mov
ret
sbb
cli
sbb
in
test
jno
cltd
imul
popa
cs
mov
push
sahf
dec
jb
insl
fdivrl
mov
or
imul
xchg
sbb
fs
enter
ret
fdivrl
cmpsl
mov
jg
push
push
cmp
jno
pop
inc
mull
push
arpl
in
add
sbb
sub
jecxz
and
daa
jns
cs
andl
cmp
pusha
add
xchg
frstor
pop
in
adc
add
mov
sub
push
or
mov
rcrl
mov
ds
adc
adc
xor
push
or
jp
je
jge
mov
stc
fnstsw
push
popf
rolb
pop
xchg
adc
sub
push
jmp
mov
sarb
mov
fwait
push
out
jecxz
insl
fs
lods
fs
bound
rcrl
js
ss
dec
mov
test
pop
iret
mov
shrb
sbb
dec
cmpsb
mov
add
mov
dec
ja
jne
enter
es
insl
mov
loope
or
xchg
fmull
pop
and
pop
ficompl
push
incb
mov
xchg
mov
scas
dec
in
clc
imul
jo
pop
pushf
cld
xor
push
add
jl
push
ds
jne
sbb
add
mov
push
or
cmc
dec
xchg
mov
outsl
mov
push
fnstcw
jecxz
xor
xchg
jns
lahf
cmp
iret
sbb
mov
sub
push
xor
and
clc
mov
das
rcll
enter
sbb
shrl
xor
lock
inc
outsb
test
jg
push
adc
out
cltd
mov
repnz
push
in
jno
mov
sbb
cltd
or
sbb
mov
add
jle
insl
push
ja
push
stos
push
and
or
out
sub
arpl
pop
sbb
jae
and
test
ficoms
sub
sub
sbb
repz
iret
fprem
movsb
in
int
xor
mov
shll
mov
xchg
je
sbb
gs
cmp
in
push
add
or
jmp
and
pop
push
pop
cmpsb
or
and
ret
je
stos
add
push
adcb
and
sbb
dec
addl
mov
push
out
pop
lds
int
lods
jnp
popa
outsb
add
fmuls
test
loope
pop
push
aas
xor
add
adc
inc
pop
jo
faddl
je
and
outsb
sbb
xor
jno
out
push
xlat
pop
jnp
es
pop
and
incb
add
outsl
scas
inc
call
daa
cltd
push
subl
lahf
fmuls
xlat
out
out
or
cmp
sbb
minps
aas
test
mov
add
insl
sbb
pop
sbb
fdivr
xor
repz
out
scas
sub
sbb
shr
sub
sbb
leave
push
pmaxub
sub
push
ja
and
xor
rcll
mov
pop
or
fdivrp
out
stc
clc
and
pop
pop
sbb
loopne
dec
es
sarl
into
jbe
mov
xchg
cmpsl
cmp
pcmpeqd
dec
ja
xchg
fs
hlt
sbb
test
fistpll
sub
lods
jmp
pop
insl
cmpb
mov
cmp
aad
aam
inc
pop
push
test
xchg
loopne
out
je
stos
xchg
mov
pop
addl
jbe
inc
xchg
outsb
xor
sbb
in
nop
dec
push
or
pushf
adc
xor
add
insb
ljmp
ja
fisttpll
push
lods
inc
mov
xchg
mov
xchg
mov
push
xor
daa
mov
xchg
cmp
push
sbb
xor
add
test
and
jbe
or
dec
mov
add
xchg
ljmp
in
push
mov
jo
out
pop
pusha
jnp
movsb
lods
push
scas
jp
jmp
push
mov
cltd
int3
sahf
into
pushf
mov
aad
in
negl
scas
xchg
mov
in
sbb
ss
nop
out
pop
mov
cld
dec
xlat
int
mov
sbb
mov
xchg
hlt
negl
aad
mov
mov
pop
lods
add
mov
test
std
xchg
cwtl
dec
adc
popf
mov
adcl
lcall
mov
enter
pop
iret
xchg
jle
cmp
dec
xchg
push
cmp
and
mov
rcrb
mov
call
sub
adc
jp
jo
mov
jne
adc
loopne
jns
pop
test
or
es
adc
sub
dec
adc
cwtl
add
mov
int
pusha
jns
fwait
dec
inc
pop
mov
lcall
pop
add
out
xchg
inc
push
loopne
loope
or
push
rcrl
or
mov
mov
loope
xor
int3
mul
mov
xor
push
shrl
test
in
popa
in
jge
lods
clc
add
fs
add
inc
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
and
ja
loope
mov
and
push
scas
mov
mov
lods
push
jp
xchg
rcrl
jge
outsb
scas
imul
inc
pop
lock
pop
jp
sub
push
xchg
jb
push
jl
sub
jp
mov
and
jp
jns
pop
fistpl
fidivs
test
lret
add
hlt
pushf
pop
and
frstor
inc
mov
testb
out
xchg
xlat
adc
cmp
mov
andl
pop
ljmp
mov
fiadds
xchg
sub
mov
ret
aam
in
int
out
cld
pop
outsb
repz
cs
inc
das
mov
test
notl
insb
fbstp
mov
xchg
dec
lret
repz
stos
lcall
pop
aas
sbb
bound
clc
loope,pn
insb
lds
movsb
mov
jge
jle
mov
and
imul
xor
les
fdivrl
push
addl
jge
jno
fsubrs
lods
popa
or
loope
push
ret
loopne
sbb
inc
dec
add
ds
aam
xchg
sbb
test
insl
mov
xchg
jmp
lods
push
adc
add
fstl
mov
adc
and
scas
add
popf
push
and
push
xchg
fwait
or
out
lret
in
sbb
cmp
subb
dec
or
sbb
inc
push
mov
scas
les
stos
test
fcompl
or
or
mov
jecxz
test
fnsave
mov
aad
int3
adc
out
lods
dec
xchg
out
mov
mov
out
rorb
ja
push
aam
mov
adc
ds
daa
mov
fiaddl
lds
push
repz
jne
push
stc
sub
xorl
jne
cli
add
cmp
hlt
cmp
adc
lcall
addb
add
mov
adc
shrb
push
cmp
dec
movsl
repnz
imul
and
fxch
movsb
mov
xor
bound
jg
push
sbb
jne
das
mov
or
ja
ret
push
cltd
add
loopne
mov
pop
rorb
rclb
mov
popl
jecxz
mov
mov
stos
mov
cmp
push
xchg
xchg
push
cmp
fsubrs
mov
jl
into
xchg
and
sti
insl
aas
xchg
scas
in
cmp
leave
lret
scas
or
movl
stos
sub
xchg
cmp
add
addb
jbe
pop
cmp
cli
les
mov
jns
leave
inc
lcall
mov
lea
jmp
mov
nop
push
rclb
pop
repnz
mov
stos
cli
jno
jnp
adc
and
add
lret
rorl
xlat
sbb
jmp
aaa
xchg
jl
into
adc
icebp
jle
xor
movsl
cs
int
and
jb
xor
movl
jg
jp
gs
inc
jmp
sti
sub
sti
xor
or
sbbl
mov
clc
ja
push
stos
ljmp
in
push
aas
add
cmp
addr16
fildll
std
jnp
jle
mov
cmpsb
or
out
xchg
jnp
push
popl
adc
mov
sub
test
negb
add
mov
or
mov
imul
mov
or
push
push
repz
lea
test
mov
add
jecxz
sub
pop
or
leave
mov
cmc
pushl
test
andl
dec
sti
xchg
mov
push
mov
dec
jno
cld
rclb
lcall
sub
out
mov
dec
mov
packssdw
aaa
xor
xor
sbb
movsl
push
jl
cltd
sub
popa
and
rorl
mov
shrl
into
scas
sbb
sbb
add
incl
cld
test
rclb
nop
pop
xchg
xor
cmovns
gs
push
gs
xchg
push
ss
rolb
mov
push
xchg
xchg
fdivs
mov
notl
inc
sbb
pop
sub
pushf
inc
out
jmp
adc
rcll
xchg
xchg
loopne
push
scas
lods
pop
cmc
es
lds
sub
mov
inc
xchg
ss
or
mov
and
push
inc
cmp
loop
jmp
call
xor
mov
stos
adcl
mov
or
adc
and
and
push
iret
mov
add
mov
imul
inc
ds
push
jecxz
inc
daa
aaa
clc
push
ja
lds
cmp
adc
sbbb
xchg
repz
sub
and
inc
ds
loope
out
xor
mov
mov
jns
pop
fcomp
fs
repnz
cmp
test
mov
jo
decb
lcall
orb
and
mov
cmp
xchg
mov
jmp
xchg
movsl
lds
ror
lods
and
adc
dec
adc
xchg
xor
popf
jno
fwait
mov
push
cmp
inc
inc
out
sbb
pop
lahf
lret
out
icebp
rcrl
mov
pop
nop
sub
ds
lcall
dec
add
mov
adc
imul
cwtl
xchg
imul
adc
dec
sub
addr16
pop
stos
rcrb
loope
shlb
xchg
insl
mov
enter
aaa
or
push
pop
loope
xchg
cld
jo
and
or
out
test
popf
in
inc
stc
subl
loopne
scas
dec
imul
lcall
push
dec
pop
dec
ficoms
mov
or
mov
inc
int
leave
enter
xchg
xchg
mov
pop
inc
int
push
lea
std
dec
loopne
sahf
sbb
push
fcoms
test
lcall
and
pop
mov
ljmp
int3
clc
adc
scas
ds
fidivl
cmp
or
push
fidivl
mov
sti
divl
call
push
dec
outsl
and
cli
pop
out
int3
cmp
pop
lahf
hlt
insb
jle
jp
mov
les
nop
popf
pop
scas
cmp
cltd
cmp
xchg
xor
insl
or
cmp
loop
decb
pop
jnp
xchg
inc
inc
test
js
loop
mov
gs
pop
fisttps
lret
out
mov
cmpsb
add
cmp
and
push
xchg
lods
mov
xchg
push
cmc
pop
fsubrs
lods
popf
adc
mov
push
ds
jnp
xchg
or
lods
imul
ljmp
pop
mov
add
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
jg
dec
sub
ud1
pop
adc
std
lods
mov
mov
push
pop
mov
mov
cmp
sub
ljmp
jp
fstpt
daa
inc
fsubs
int
sub
cmp
repz
mov
lock
clc
add
push
fisubrs
enter
push
jmp
outsl
inc
fidivrs
mov
cmp
shll
mov
cmp
int3
dec
cmovnp
push
xchg
and
sub
pop
in
scas
jge
push
testl
add
cld
test
addr16
cmp
mov
in
pop
nop
xchg
mov
or
in
in
and
lock
loope
fwait
push
mov
clc
adc
notb
stos
incl
cltd
pop
and
dec
jo
cmpsb
rcrl
and
sahf
add
lcall
enter
mov
cmp
jns
testl
gs
stos
dec
sub
push
lods
xchg
sub
in
xor
dec
sbb
arpl
add
push
pop
adc
and
cld
push
adc
rcrl
pop
jae
mov
test
xchg
or
and
mul
xor
cmp
lock
xchg
add
scas
repz
push
mov
test
shll
sbb
aad
mov
or
std
xchg
jle
enter
pop
sbb
inc
test
mov
sub
dec
push
xchg
in
scas
and
dec
test
fldenv
inc
je
int3
lea
lret
sti
or
and
data16
loope
or
or
cmpsl
adc
lret
movsl
pop
and
dec
push
ret
fisttpll
ret
push
or
cmp
ss
mov
dec
push
imul
mov
cmp
jnp
pop
or
add
addr16
cltd
stos
clc
popa
orb
xchg
push
pop
lock
pop
jg
es
mov
lods
aad
jb,pt
pop
mov
pop
mov
f2xm1
push
and
push
int
push
rcrl
and
mov
fwait
popa
push
mov
decb
rclb
xor
sub
pop
repz
popf
je
add
stos
xchg
mov
fadds
bound
cmp
cmp
add
call
aas
pop
mov
push
dec
mov
xchg
push
mov
inc
jns
pop
movsb
and
jg
out
pop
add
andl
push
adc
mov
xchg
push
adc
cmp
cld
insl
dec
call
adc
push
xchg
stos
loop
into
pop
mov
and
sbb
out
xor
fdivrl
in
inc
sub
push
add
fiaddl
add
cmc
ds
aad
jp
flds
and
mov
test
mov
mov
and
jo
lods
andl
hlt
add
mulb
in
adc
and
scas
push
inc
out
cltd
popa
push
in
dec
iret
movl
mov
sub
cmp
ret
adc
jmp
sub
cwtl
jle
movb
mov
cmc
sub
lea
pop
test
mov
mov
mov
popa
xor
sub
push
in
push
dec
xor
inc
and
cli
scas
xor
and
cmp
mov
or
fs
sub
cmpsb
cmp
movsl
nop
cmp
in
in
das
inc
pushf
clc
and
fistl
add
or
push
ljmp
fimuls
js
jge
imul
bound
mov
push
or
xchg
adc
push
test
ds
aas
add
cmpsb
negb
pop
movsl
and
test
mov
xor
adc
inc
add
das
out
sbb
inc
sbb
cmpsl
rcl
lcall
add
or
pop
pop
test
mov
sub
bound
push
lods
mov
push
repnz
and
lret
fimull
or
sub
mov
mov
xor
push
js
inc
mov
xchg
mov
jge
arpl
lea
mov
lcall
push
sub
mov
lahf
cld
push
xchg
inc
and
mov
pushf
jp
or
mov
add
aam
jno
and
add
add
xor
pop
pop
xchg
popf
inc
pop
jo
or
sub
sti
adc
int3
out
cmp
insl
adc
das
js
out
and
push
xchg
je
push
sbb
out
cmp
loopne
cwtl
sar
and
rcl
jno
push
jae
leave
pop
ss
jnp
lcall
mov
jg
push
sti
js
push
push
pop
lock
and
jecxz
into
fidivs
pusha
pop
movsl
lods
dec
ljmp
push
or
loop
inc
popa
neg
and
and
push
mov
daa
mov
xchg
cli
sub
pop
testb
add
cmp
testb
add
out
stos
popf
xchg
lock
mov
xchg
jnp
sub
rol
test
addb
outsb
call
cmp
or
mov
shrl
loop
xchg
push
ja
enter
dec
pop
inc
out
movsl
dec
inc
inc
jge
mov
jb
cmp
jge
fisubs
xchg
adc
add
in
out
push
pop
jo
mov
xor
jl
ret
repz
push
jle
movsb
xchg
pop
sahf
push
pop
jbe
decl
add
push
in
pushf
pop
movsb
fiaddl
dec
sub
xor
std
clc
addr16
cmpl
mov
fldcw
push
adc
mov
xlat
push
mov
das
lds
sbb
mov
inc
dec
bnd
nop
cmp
xor
nop
dec
leave
jecxz
daa
pop
enter
leave
stos
and
fnstsw
jo
iret
fs
mov
addr16
sbb
and
paddb
js
sbb
xor
cmp
vpshuflw
ret
mov
lea
ret
mov
imul
or
sbb
ja
in
mov
xlat
push
sbb
sbb
in
imul
adc
cmpsl
lods
dec
test
lahf
hlt
or
setg
dec
xchg
mov
lds
mov
aad
jne
cmp
xor
cmp
mov
clc
mov
imul
and
sbb
hlt
scas
mov
jbe
sub
addr16
xor
push
jb
xchg
pop
cmc
jb
cmp
ret
iret
int
push
dec
inc
fcoml
out
dec
std
scas
mov
aas
jge
adc
mov
fimuls
push
pop
or
lret
test
loope
xchg
push
sub
leave
dec
adc
andb
int
jns
andl
pop
scas
xor
scas
add
outsb
xchg
or
loopne
int
ja
pop
sub
rorb
push
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
nop
stc
mov
stos
ja
adc
pop
mov
mov
ret
imul
adc
pop
mov
loopne
pop
repnz
mov
jnp
jne
imul
cld
aaa
and
imul
cmp
mov
inc
iret
push
roll
add
and
push
pop
mov
clc
xor
insb
cmp
insb
call
sbb
push
fisubrl
xchg
outsb
cmp
dec
or
dec
cmp
movsl
jb
mov
pop
xor
pushf
sub
dec
enter
loop
outsb
rorl
bnd
out
adcb
repz
andb
mov
or
inc
int
scas
mov
je
daa
cmp
icebp
arpl
in
xor
repz
sti
mov
cs
fisubl
sbb
pop
pop
mov
in
inc
mov
dec
mov
fwait
stos
jo
mov
je
scas
mov
mov
outsl
data16
icebp
dec
mov
frstor
xchg
jmp
cmpsl
out
rcr
cmp
pop
pusha
jb
inc
jl
pop
pop
sub
insb
fwait
mov
js
ret
xchg
xchg
daa
inc
rol
adcb
popa
sete
mov
xor
and
jecxz
cmp
into
aas
int3
sbb
in
les
leave
outsl
std
jnp
dec
cmp
movsl
test
ret
movsb
adc
xchg
shll
scas
mov
xor
push
sub
imul
dec
loop
inc
or
xchg
or
xchg
xor
in
cmp
andb
cmpsl
mov
pop
dec
out
pop
push
sbb
repz
rolb
cmp
das
pop
fistpl
and
in
mov
xchg
test
aam
aad
ljmp
stos
hlt
xor
jns
jp
lea
mov
test
ss
movsl
sub
add
inc
test
lcall
movsb
jl
repz
xor
jge
sbb
scas
fistpll
leave
or
outsb
mov
push
roll
jns
mov
shrl
dec
and
in
gs
rcl
std
orb
or
push
xlat
popa
mov
jo
data16
pusha
xor
call
pop
jno
dec
push
cmp
rolb
push
cmp
cmpsl
inc
xchg
jle
push
je
xor
add
mov
daa
jge
sub
incb
pop
fldenv
xchg
sbb
dec
push
lcall
xchg
rolb
xchg
das
and
jne
movb
mov
xchg
jmp
scas
pop
test
sub
das
cmp
mov
sbb
push
outsl
shlb
push
pop
nop
orl
lret
lock
sarl
ss
mov
xor
mov
adc
or
in
inc
das
fld
jns
mov
cmp
imul
add
xchg
and
lods
mov
add
mov
ds
xor
ds
mov
pop
cmp
mov
xchg
test
jb
adc
add
ja
cld
xchg
mov
bnd
push
mov
lret
js
roll
imul
mov
shrl
test
loopne
aam
mov
out
jmp
xchg
cmp
mov
in
sbb
es
lahf
jl
xchg
dec
xchg
xlat
and
jbe
pushf
jmp
jmp
sahf
inc
pop
sbb
fwait
sub
pop
cmp
cs
aad
test
lods
push
or
dec
and
popf
pmaddwd
lahf
mov
loopne
mov
jg
popf
adcb
sub
push
mov
pop
dec
sub
push
inc
sbb
pop
push
div
aas
push
jle
loope
push
cld
xchg
insb
mov
test
stos
lret
cmpl
sub
lcall
push
pop
sbb
frstor
call
jl
out
fwait
jg
leave
sbb
fisttps
inc
addr16
pop
cmp
ss
mov
mov
mov
sbb
push
hlt
xchg
pop
and
sub
and
in
xlat
mov
fstps
push
ss
or
pusha
out
xchg
sub
jecxz
sar
jno
dec
cli
sti
icebp
xlat
rorb
daa
into
mov
add
stc
inc
mov
into
adc
mov
cmp
into
es
subl
fcmovne
sub
inc
and
mov
push
roll
arpl
jmp
adc
push
xchg
call
mov
or
mov
lcall
fwait
in
aam
popa
ja
jns
aaa
cmp
xchg
mov
std
aad
ja
addr16
idivb
add
mov
loop
icebp
stos
and
inc
movsl
push
sub
and
sbb
pushf
daa
out
cli
icebp
push
mov
push
mov
dec
cmp
cmp
push
cs
cmp
inc
test
jnp
cmpsl
cmp
push
into
xchg
cmp
fdivs
loopne
push
jno
dec
xorl
push
mov
daa
mov
enter
jl
or
adc
sbb
imul
push
adc
sbb
mov
sahf
adc
jle,pn
imul
ret
and
aas
mov
loopne
mov
aaa
sbb
cmp
xor
mov
and
loop
push
cli
jl
loope
aas
dec
pop
lock
mov
inc
and
push
inc
mov
mov
clc
sbb
inc
jecxz
subb
xor
lcall
sti
pop
lea
scas
or
add
inc
lret
cld
fiaddl
sbb
inc
xchg
xbegin
pop
xchg
sbb
push
cmp
push
out
push
cmp
mov
movsb
cli
ds
outsb
mov
xchg
stos
jle
or
inc
shll
sbb
stos
xchg
pop
std
pop
repz
imul
adc
pop
cwtl
mov
jns
inc
push
addr16
leave
imul
or
cmc
dec
and
adcb
inc
movsb
lods
add
inc
and
mov
and
mov
fmuls
mov
pop
adc
mov
mov
fcomps
rclb
mov
add
inc
sahf
xor
dec
mov
das
lahf
mov
xor
cmpsb
sub
xor
loop
leave
enter
test
sbb
xchg
or
testl
cmp
fsub
test
add
idiv
lahf
testb
std
cmp
or
lods
mov
inc
push
fdivrl
fcomps
data16
mov
cmpsb
dec
arpl
pop
mov
lea
stc
mov
xor
xor
cmp
add
dec
in
outsl
cwtl
pop
and
rcll
sub
jecxz
cltd
aad
test
xlat
jl
fucomp
pop
loop
ret
pusha
add
pop
dec
outsb
push
test
sbb
sbb
jae
add
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
mov
mov
ja
sbb
pop
scas
inc
and
sarb
lfs
xchg
xor
sbb
ret
cmp
repnz
sarb
repnz
out
popa
mov
into
aaa
mov
test
and
in
in
add
subb
push
int3
nop
popf
and
mov
loopne
pop
cmp
insl
jae
mov
sub
std
int3
cli
or
aaa
jl
pop
mov
sarb
pop
mov
mov
and
int3
cmp
pop
dec
popa
add
mov
icebp
xchg
popf
lock
cmp
jge
xor
out
pusha
lcall
add
inc
dec
push
icebp
lea
aaa
aam
orb
mov
inc
jmp
enter
sub
jbe
jb
push
inc
push
pop
test
add
push
sbb
into
mov
sahf
popf
out
push
push
xor
lret
ljmp
add
lock
lds
xchg
dec
test
mov
addr16
mov
inc
pushf
or
rolb
pusha
add
fstpl
or
mov
enter
cwtl
jo
pop
xchg
sbb
xchg
cmp
lods
push
test
fsubl
and
lahf
scas
sbb
inc
lods
imul
sub
or
and
aas
jle
push
std
or
ret
divl
add
outsl
adc
sbb
xor
add
daa
push
mov
adc
cmp
arpl
adc
test
add
ret
and
xchg
mov
enter
push
ljmp
rorb
aas
push
je
add
stc
add
lcall
dec
cmp
mov
and
pushf
out
fs
icebp
sub
xor
test
enter
les
sbb
pushf
push
pop
dec
test
data16
ss
imul
push
fwait
js
cmc
xlat
and
sub
pop
or
dec
cmp
scas
push
test
jg
fadd
mov
nop
xor
aam
cltd
push
sbb
je
mov
loope
jbe
out
addr16
aas
pop
adc
jo
dec
fsubrl
loopne
xchg
mov
adc
int3
mov
inc
iret
push
inc
push
bound
jb
lahf
pop
test
add
ss
jns
cmp
call
test
and
mov
stos
jp
or
imul
inc
jo
xor
loop
sbb
leave
mov
aas
jl
stc
mov
pusha
push
rcl
mov
jns
cwtl
insb
sub
push
cmp
xor
cmpsb
add
test
movsl
pop
aam
mov
dec
inc
adc
mov
jp
je
jg
and
mov
and
push
stos
push
iret
jb
pop
mov
popa
stos
ret
mov
imul
std
xchg
shlb
cmc
ficompl
orb
ficompl
js
rcrl
cmp
or
je
dec
xchg
stc
setl
mov
pop
xor
jge
xor
dec
das
cmp
outsl
hlt
jno
imulb
lcall
jns
inc
xor
cltd
inc
xchg
push
popf
dec
push
or
push
sub
cltd
fwait
mov
pop
mov
jle
jo
fists
xor
xor
stos
push
push
mov
pop
dec
cltd
add
adc
mov
mov
xchg
push
xor
inc
or
mov
xor
je
sub
in
fildl
sbb
aam
jge
push
pop
popf
cltd
push
lret
fwait
mov
push
jge
pop
mov
push
stc
inc
inc
fldt
push
in
adc
cmp
negb
xchg
scas
test
mov
jl
hlt
add
cmp
loope
xor
adc
push
loope
mov
push
pop
loop
cwtl
inc
inc
sahf
ss
or
add
push
inc
cmp
xor
cmp
call
pop
push
pop
cmp
mov
cmp
xlat
or
leave
mov
jae
test
shrl
loope
dec
mov
cld
push
int3
mov
aam
push
or
popf
out
lea
mov
mov
mov
lds
jle
cli
pushf
mov
sub
and
lcall
sub
dec
scas
pop
xchg
dec
mov
push
in
adc
cmp
jo
movsb
aas
leave
dec
sbb
gs
dec
fmul
shlb
mov
fstps
jo
cld
pusha
xor
insb
test
push
jno
dec
lret
and
xchg
push
push
lods
mov
std
fstpl
pop
xchg
loopne
inc
not
jae
scas
mov
imul
addl
xor
pop
push
dec
sbb
testl
cmp
add
aam
test
sub
fisttps
outsb
pop
pop
pusha
mov
jecxz
pop
pop
mov
movsb
dec
xchg
and
mov
adc
ret
imul
jb
adc
jae
xchg
dec
mov
dec
sub
pop
push
cmp
dec
push
dec
sbb
adc
sti
shll
add
dec
mov
push
mov
mov
call
cmp
push
or
jmp
dec
fldcw
pop
out
pop
cmp
outsb
flds
fcmovnbe
hlt
fs
aam
mov
xor
in
cmp
call
or
mov
sbb
xchg
dec
and
out
mov
sub
imull
and
sub
nop
and
cld
aam
ljmp
outsl
xchg
lods
sbb
out
push
cmp
cmp
xchg
shlb
popa
mov
ret
push
out
out
sahf
icebp
jle
lcall
adc
or
mov
inc
sbb
ljmp
sbb
pushf
decb
xchg
adc
xor
movsl
push
repnz
ja
int3
lods
out
xchg
jnp
dec
xchg
dec
dec
push
das
mov
pop
lret
in
ja
mov
imul
or
xlat
lret
bound
push
hlt
lock
inc
sub
std
mov
loop
mov
xchg
test
lahf
fsub
cmp
or
js
shl
out
sub
or
das
nop
mov
push
pop
jnp
aad
adc
mov
jo
jle
aaa
out
mov
and
js
adc
sub
daa
or
lds
shl
sbb
sahf
xchg
push
pusha
dec
fnstsw
outsl
inc
aad
fisubrl
insb
jmp
xchg
mov
push
sahf
aas
bound
ret
popf
or
lods
mov
cltd
add
popf
xorl
lea
sub
xchg
mov
mov
arpl
imul
mov
dec
mov
ja
push
inc
out
jb
outsl
sbb
rorb
cmp
adc
stc
lret
dec
mov
cmpsb
push
stos
inc
cmp
pop
xorps
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
es
xchg
mov
insl
xchg
mov
stos
mov
pop
push
scas
movsb
add
fidivs
or
sbb
mov
push
aam
sbb
inc
push
stos
jne
jb
rcrb
jle
fnstcw
xor
adc
xlat
dec
adc
gs
sub
or
dec
lret
xor
cmp
xchg
dec
out
test
in
sahf
mov
cmp
jg
push
imul
int
mov
lea
jmp
and
mov
mov
ret
xchg
imul
mov
mov
fistpll
test
gs
cmp
sub
mov
adc
mov
pop
aad
cld
add
std
cmp
jbe
and
xchg
movsb
dec
jno
or
xlat
xor
cli
mov
and
add
out
sbb
mov
orb
cs
jmp
xor
push
std
add
xor
inc
add
mov
pop
scas
lods
in
shld
xchg
inc
popf
repz
movsb
lea
jg
aas
pusha
dec
popa
cmc
xchg
jo
cmp
loope
notb
retw
notb
sub
fmul
push
cli
push
lds
mov
jl
xor
pop
xchg
push
outsl
mov
push
cmp
pusha
xchg
les
repnz
push
andl
cwtl
outsl
cltd
das
ss
pop
movsb
aad
ja
cli
pop
sbb
mov
test
sub
mov
mov
adc
push
xchg
pop
notb
jns
cltd
stos
and
jecxz
int
sti
sub
loope
mov
jp
cmp
adc
pop
es
sub
mov
lock
xor
repnz
repnz
mov
or
add
push
in
or
jno
add
xor
push
sbb
andb
mov
test
in
mov
pop
dec
mov
call
cmp
push
es
lods
arpl
xor
fisubs
lret
fstpl
jbe
xor
adc
push
in
mov
dec
std
xlat
dec
insl
rol
hlt
and
js
mov
cmp
movsl
adc
pop
jne
in
test
pop
jg
jns
pop
jnp
test
pop
sbb
jbe
cmp
inc
loope
icebp
popa
inc
sbb
add
mov
inc
cmp
cmpsb
mov
sub
ret
xlat
out
xor
jle
test
fidivs
push
jo
xor
inc
sub
rcll
fsubl
insl
daa
pop
jbe
scas
lods
sahf
cmp
push
cmp
nop
mov
in
imul
jbe
and
ror
push
cmpsl
in
or
jl
inc
mov
pop
pop
cmp
fisttps
shrb
test
push
dec
xor
sbb
jb
aas
mov
sub
pop
cli
daa
scas
outsb
cmp
sarb
pop
les
push
xchg
imul
jae
lret
cmpsb
fsubrs
push
icebp
adc
sahf
cmp
sbb
cmc
adc
loop
mov
dec
mov
pop
sti
movsl
xchg
push
mov
pop
out
dec
xor
test
sbb
dec
fnstsw
xchg
idivl
dec
test
fs
mov
dec
out
sahf
imul
pop
cwtl
sbb
dec
xor
inc
push
adc
pop
test
adc
or
and
and
mov
mov
mov
mov
aaa
test
inc
cmc
ljmp
arpl
test
adc
inc
test
adc
mov
out
pop
addl
addr16
rclb
xorl
push
pop
out
dec
jmp
js
jb
xlat
inc
xchg
xchg
xchg
fstl
xor
adc
pop
jo,pn
repnz
rorb
bound
cmp
dec
repnz
xchg
xor
mov
cmp
dec
inc
jo
adc
inc
mov
mov
shl
push
ret
aas
adc
jnp
xchg
mov
cmpl
ficomps
jp
test
adc
mov
mov
jp
sbb
mov
imul
xchg
mov
repnz
insl
and
xchg
fdivs
pushf
addr16
ljmpw
gs
je
mov
scas
cmp
popl
pusha
add
and
sub
pop
push
jbe
mov
ret
or
sub
gs
daa
jg
jl
xlat
mov
xlat
lcall
xlat
clc
aas
rorb
ja
adc
popf
gs
subb
push
sbb
loopne
iret
and
roll
mov
es
sar
pop
mov
rcr
jmp
xchg
inc
insb
lahf
cli
mov
outsb
inc
in
push
movsb
jae
sub
mov
push
push
out
sub
loope
cmp
or
jo
out
rolb
bound
sbb
and
and
pop
cmc
data16
rorb
cmpsb
repnz
loopne
adc
dec
pop
jmp
pushf
xchg
lcall
xchg
clc
push
clc
cmpsb
mov
test
lahf
push
push
test
sbb
xor
mov
add
xor
fdivl
js
mov
ret
mov
dec
data16
in
ds
cmp
aas
hlt
and
outsb
imul
negl
xchg
add
popf
mov
cmc
jp
cmp
int3
jmp
jl
clc
lock
stos
sbb
add
jno
jo
cmp
jle
stos
mov
mov
insb
es
and
mov
mov
xchg
daa
stos
push
cld
les
repz
outsl
sbbl
hlt
dec
cmpl
stos
jbe
pop
in
adc
call
sbb
or
mov
mov
scas
sbb
pushf
negb
dec
sbb
and
jno
push
outsb
addb
mov
ret
arpl
mov
hlt
fisttps
sti
inc
cmp
test
int
mov
mov
ret
ficompl
push
jg
arpl
pop
mov
pop
scas
adc
mov
pushf
out
add
sbb
add
xor
incl
sub
mov
cltd
fbstp
xor
mov
jmp
cmpl
add
mov
xchg
cmp
pop
ds
test
cmp
repz
pushf
pop
push
dec
xor
inc
test
aam
push
mov
mov
mov
imul
cmp
mov
push
cmpsb
lcall
jmp
mov
dec
sar
call
push
loopne
xor
xlat
scas
lret
inc
xchg
nop
out
xchg
sub
std
int
push
adc
xor
add
jno
mov
repnz
and
imul
stos
mov
out
dec
orl
les
nop
fnstenv
repz
cmp
jg
adc
pop
popa
inc
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
pop
mov
mov
ja
mov
sahf
xor
stc
rcpps
adc
mov
je
mov
out
sbb
xlat
mov
xchg
xchg
out
mov
pop
fs
mov
dec
inc
dec
jmp
mov
xor
push
in
jne
insb
mov
mov
adc
fstp
pop
lds
inc
cli
in
in
or
jecxz
insb
and
dec
push
and
popa
popf
lahf
or
inc
push
out
test
ficoml
scas
test
mov
lock
pop
fst
cmp
mov
and
xlat
imul
mov
call
icebp
pop
xor
push
int3
movsl
aam
cld
rcll
pop
bound
call
jl
mov
or
rcll
cmpb
rorb
aaa
jne
lcall
stc
in
popa
mov
insl
xchg
dec
ret
xchg
mov
outsb
sub
mov
adc
fcoms
call
push
test
pop
sbb
stos
xor
popf
in
test
notb
mov
fdivrs
lock
mov
sub
mov
sti
rol
push
clc
repz
mov
fwait
add
mov
in
cmp
mov
hlt
jl,pt
dec
and
fidivrl
fdivs
push
inc
sub
divl
sub
add
fnstcw
stos
sbb
sbb
in
and
sbb
fcmovbe
dec
mov
in
mov
inc
mov
cmp
xor
pavgw
fiaddl
xor
aad
sub
nop
inc
pop
pop
mov
xchg
and
xor
and
inc
or
mov
adc
mov
sbbl
and
jmp
in
mov
scas
dec
repnz
lret
and
pop
mov
or
iret
mov
frstor
outsl
jns
je
cmp
xchg
stos
jne
lret
int3
xor
mov
sub
inc
add
popa
outsb
xchg
inc
scas
cmp
stos
cmp
fmull
push
mov
lcall
lods
hlt
sbb
sub
cwtl
stos
sub
jmp
bound
insb
sbb
ds
jns
cmpsl
fsubs
lea
ret
adc
lahf
sbb
xor
or
jnp
push
and
js
fbld
jne
jl
mov
repnz
outsl
jno
mov
cmc
cs
xor
fwait
mov
test
mov
add
lret
pop
mov
xchg
pop
xchg
mov
pop
push
aaa
mov
jg
mov
mov
sub
stos
inc
sub
xchg
popf
mov
data16
gs
pop
fsubs
jae
dec
xchg
hlt
xchg
outsb
aam
push
iret
addb
mov
adc
and
pop
and
jb
das
in
xchg
lods
bound
insl
popf
loop
je
fimull
cmpsl
dec
jo
sbb
out
xlat
xchg
mov
test
sbb
arpl
jnp
incl
lret
ror
add
shll
xor
push
int
mov
arpl
mov
add
and
lcall
mov
pop
inc
lea
mov
mov
and
clc
xchg
aam
out
jecxz
fldl
pop
mov
into
ret
push
xor
insb
mov
pop
ret
gs
out
hlt
mov
icebp
movd
js
sub
mov
xlat
pop
lods
outsb
pop
and
mov
inc
std
or
xlat
pushf
xor
cmp
out
add
push
cld
xor
mov
mov
mov
roll
mov
jns
cltd
daa
pop
iret
inc
jecxz
and
nop
push
and
jae
sbb
lock
ds
fs
test
lret
testb
int3
bound
jmp
push
mov
or
sbb
in
mov
pop
inc
mov
inc
roll
mov
cmp
ret
adc
jl
inc
push
out
mov
adc
mov
xor
xchg
sub
dec
rcrb
or
mov
jp
dec
sub
mov
daa
sbb
inc
jno
cmp
insl
cld
cmp
rolb
cltd
ds
notb
popa
inc
addb
divl
mov
push
push
add
xor
mov
cmp
add
nop
pop
out
xchg
inc
dec
or
scas
stos
rcll
addr16
popa
clc
jnp
iret
jl
ds
outsl
adc
aaa
mov
imul
in
ljmp
addl
stos
jne
xor
sub
mov
pop
push
imul
in
movsl
imul
add
mov
cmp
out
mov
cld
add
inc
lds
dec
aam
pop
test
xor
lahf
loope
dec
scas
orl
xchg
icebp
or
inc
push
xchg
outsb
mov
call
sub
inc
lret
movsl
outsb
fwait
pop
out
cmpsl
lret
out
fsts
pop
lods
dec
fwait
xchg
push
sub
rorb
adc
stos
jg
cwtl
inc
add
sub
nop
ss
repz
int3
sbb
imul
xorl
dec
aam
sbb
xlat
or
popf
clc
aad
lods
mov
jmp
cwtl
xchg
stos
inc
jg
jecxz
mov
dec
add
ficoml
test
xor
push
sbb
xlat
loope
mov
scas
mov
popa
sahf
out
xor
sahf
popf
jno
fs
xchg
jmp
pop
aam
adc
arpl
push
sarb
lods
jae
movsl
inc
xor
and
and
mov
xor
je
pushf
push
incl
and
push
lea
xchg
stos
idiv
mov
mov
out
aam
sbb
sub
stc
mov
xchg
and
aad
cmpsl
dec
das
test
dec
xchg
sbb
add
test
xor
mov
pop
in
or
adc
or
mov
sbb
push
pop
repz
mov
jo
cld
cmp
jmp
sbb
push
or
ja
jecxz
sub
in
mov
in
fildl
outsl
fidivrs
ss
sarb
cmpsl
xchg
aaa
test
pop
push
mov
fidivrs
daa
loope
das
fistpl
btc
jne
mov
lock
jmp
and
sub
mov
out
negl
aad
push
push
mov
arpl
cltd
jmp
adc
scas
fists
call
xchg
out
mov
xchg
jno
lcall
pop
push
arpl
fbstp
and
xor
loop
sti
inc
fidivl
push
xchg
pop
ss
lahf
xlat
dec
or
cld
jg
loopne
les
inc
xchg
aaa
bound
std
shr
dec
pop
sub
es
sti
lds
sub
xor
gs
push
sahf
xchg
pusha
not
mov
out
repz
push
adc
in
out
xchg
mov
outsl
ss
pusha
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
jbe
sub
orl
cmpxchg
inc
push
mov
mov
movsb
xchg
in
inc
imul
fwait
lret
dec
and
xchg
stos
in
xchg
mov
cmpsl
lret
xchg
dec
stos
fwait
jo
mov
test
xchg
mov
leave
mov
in
inc
mov
inc
aas
lods
inc
mov
pop
pop
int3
aad
icebp
insb
daa
inc
jp
mov
out
sbb
out
push
into
dec
in
in
sub
pop
les
repnz
pop
loop
inc
sub
xor
clc
lea
jno
loope
push
fimuls
push
test
lahf
lcall
lock
mov
push
cwtl
and
jnp
mov
pop
imul
stc
sbb
sahf
push
leave
dec
mov
popf
xchg
xchg
mov
sbb
imul
sbb
shl
fiadds
mov
mov
and
sub
mov
idivb
dec
mov
scas
sbb
pop
sbb
sahf
mov
xchg
cs
mov
mov
fucompp
dec
es
jnp
stc
pop
cwtl
adc
dec
psubd
inc
cltd
xchg
mov
loope
rol
jae
mov
or
mov
adc
aad
popa
out
sahf
cli
xchg
jae
lds
mov
xor
mov
in
fisttps
stos
mov
and
addb
lahf
jmp
fcomip
adc
push
mov
js
cmp
in
das
push
out
mov
loopne
jg
mov
jno
sbb
xlat
shlb
gs
ret
jo
xchg
or
jle
jg
sub
es
sub
xchg
scas
jl
pop
std
add
xchg
in
test
jmp
push
aaa
sub
xchg
push
shlb
xchg
sbb
push
popf
lock
mov
into
mov
jne
int3
jns
add
jecxz
dec
cmpsl
mov
adc
inc
loopne
aad
mov
sti
fildl
adc
sub
jl
xchg
sub
test
jae
repnz
push
lret
mov
adc
inc
ds
push
movhps
add
test
dec
dec
pop
sbb
pop
mov
push
movsb
xor
inc
push
sub
shll
mov
fidivl
aas
push
movsb
cmp
cld
cmp
pop
cmp
test
or
mov
aas
hlt
ficompl
out
jmp
or
lds
ret
mov
les
or
leave
xor
push
stos
inc
and
jb
in
fs
cmp
stc
mov
inc
mov
push
dec
mov
fldl
mov
pop
lcall
scas
lret
mov
add
xchg
addr16
push
arpl
enter
les
pop
push
lock
or
pop
dec
add
or
mov
sub
xor
pop
fistpll
push
jge
cmp
mov
call
andl
hlt
clc
out
insl
dec
movsl
sbb
popa
jg
loopne
inc
fildll
or
pop
repz
and
or
scas
xchg
sub
lret
xor
subb
sbb
imul
pushf
sbb
push
jno
push
repnz
lret
xor
pop
inc
out
movsl
mov
clc
js
push
and
insb
dec
xchg
dec
mov
test
mov
xor
dec
adc
sbb
inc
les
ss
mov
mov
push
popf
sarl
pop
add
fwait
ror
dec
cmp
and
imul
xor
lret
ss
jae
call
into
jo
fisubrl
popf
rcrb
pop
dec
mov
sahf
inc
inc
and
outsb
pop
lret
call
dec
addl
iret
push
cwtl
sub
add
test
cmp
pop
icebp
leave
add
mov
adc
enter
in
sbb
outsb
mov
xchg
nop
daa
std
inc
sbb
mov
pop
xchg
dec
sbb
dec
pop
cmp
cld
sbb
in
jbe
movl
mov
sbbb
ret
mov
jns
hlt
mov
outsl
clc
in
lods
or
jge
outsb
cmp
xor
push
jno
inc
aas
fs
imul
out
in
lahf
daa
movsw
fdivrs
lods
in
scas
jecxz
pusha
lcall
pop
or
add
mov
sbb
enter
jae
inc
jmp
das
imul
jmp
fimuls
orl
sbbb
insb
inc
sub
jge
mov
pop
sub
enter
pusha
xor
xor
inc
inc
das
push
jmp
out
gs
icebp
mov
iret
add
ret
adc
jns
imul
add
xlat
mov
popa
push
push
jb
cmp
pop
dec
inc
mov
mov
cmp
sarb
push
adc
imul
inc
bound
pop
inc
nop
sbb
in
sub
lahf
sarb
lds
movsl
rorb
mov
data16
mov
mov
movsb
scas
orb
dec
lods
clc
mov
xchg
push
mov
mov
dec
repz
xchg
ds
pop
andb
imul
enter
pushf
xor
xor
hlt
adc
out
mov
jle
sbb
inc
xorl
in
push
cwtl
pushf
fadd
std
scas
das
push
mov
mov
cmp
xor
out
sbb
icebp
push
rcrb
incl
in
cmp
mov
aam
xchg
mov
dec
inc
cltd
or
sbb
and
sub
mov
inc
and
icebp
push
les
jne
and
sahf
cmpsb
psadbw
and
rorb
and
pop
xor
stos
mov
pop
stos
dec
popf
inc
ret
das
pop
bound
popa
scas
xchg
cmpsl
fsubrl
adc
addr16
mov
lds
divb
or
pusha
or
in
mov
push
inc
mov
xchg
jmp
clc
mov
sti
jnp
mov
popf
dec
aad
push
mov
dec
out
lock
xor
nop
cmp
or
lahf
stc
pop
ret
loope
xchg
out
iret
out
pop
je
orb
cmp
add
push
push
ljmp
jne,pn
stos
aam
loop
and
xchg
leave
push
push
mov
test
fmuls
inc
jmp
mov
fnstcw
fsts
lahf
pop
sub
movsb
push
xchg
adc
insb
xor
scas
pusha
ret
scas
inc
push
mov
or
es
jb
xor
mov
or
lret
pop
addr16
out
mov
mov
mov
pop
mov
andl
out
sarb
loopne
test
xor
inc
adc
movsl
gs
mov
and
shr
push
mov
mov
dec
push
std
push
jle
out
ret
mov
pop
inc
imul
clc
daa
je
jge
inc
jo
adc
out
mov
mov
ljmp
push
rolb
jmp
inc
pushl
repnz
mov
pop
sahf
and
hlt
xlat
ret
lea
mov
mov
mov
jmp
aam
inc
test
addr16
add
js
icebp
push
outsl
ja
mov
lahf
cmpsb
scas
arpl
out
cmpsl
repz
ja
dec
jl
dec
out
mov
fcmovb
mov
sub
push
das
or
popf
mov
or
dec
sti
lea
js
hlt
inc
outsb
loopne
mov
sti
mov
insb
or
ret
imul
divl
clc
cli
dec
in
add
int3
cwtl
rolb
test
lods
or
jp
sub
sahf
fsub
out
lcall
or
sub
mov
imul
cmpsl
dec
cmp
xchg
out
lods
pushl
sub
push
mov
imul
or
add
push
or
jmp
les
outsl
fnsave
and
add
adcl
push
out
sbb
mov
test
mov
rcr
lds
pop
inc
icebp
scas
scas
mov
fsubrl
or
xchg
jl
pop
lds
jb
add
inc
jae
cmp
adc
es
pop
cmp
xor
dec
cmpsb
pop
in
adc
pop
mov
mov
xorl
push
outsb
arpl
mov
cvtps2pd
or
mov
cs
cmp
clc
push
into
in
mov
mov
pop
cmp
mov
add
cmpsb
jmp
xchg
test
ret
movsb
aas
dec
dec
cs
inc
pushf
insb
loopne
sahf
gs
jno
xchg
lret
adc
xlat
out
movb
jge
push
xlat
inc
mov
jmp
and
dec
pop
enter
fstps
fidivl
loopne
sbb
int3
inc
xorb
out
xor
mov
mov
sub
sub
jno
mov
cmp
dec
ljmp
xor
notl
jl
addb
mov
push
shrl
insb
sbb
mov
jecxz
rolb
mov
repnz
je
dec
push
jecxz
cmpsb
and
ret
das
or
fwait
push
stos
mov
loopne
fmuls
out
inc
jl
fidivl
rcll
scas
sbb
inc
adc
or
sti
aas
nop
sbb
pop
mov
enter
cmp
addr16
les
repz
js
frstor
rorb
ss
jo
aaa
jbe
out
lods
inc
fldcw
add
scas
pop
pushf
scas
adc
arpl
jmp
or
dec
inc
xchg
push
jae
andb
mov
sbb
or
add
out
add
in
aad
stos
xchg
lds
lods
xchg
add
pop
imul
xchg
enter
mov
push
jecxz
mov
add
mov
aaa
imul
inc
lahf
or
dec
lret
ds
shlb
or
aad
mov
push
std
fidivrs
sbb
or
push
fldenv
push
jo
inc
aaa
xor
jns
mov
into
jnp
pop
mov
js
ljmp
or
ss
outsl
or
cmp
cld
sti
rorb
lods
mov
xchg
adc
inc
push
push
fcompl
mov
adc
push
daa
daa
dec
add
das
push
mov
ds
mov
inc
sbb
addr16
sub
stos
subl
push
inc
das
xor
sub
jne
or
xchg
mov
add
or
xchg
add
inc
adc
pop
cmp
cmp
lahf
sbb
ljmp
sub
pop
or
pop
jmp
shrl
dec
xchg
dec
lcall
mov
inc
jge
int3
lods
push
mov
mov
sbb
fs
in
pop
pop
mov
in
cmpsb
cmp
hlt
lods
adc
xchg
rclb
add
int
imul
sbb
cli
mov
xchg
and
mov
in
sahf
xchg
mov
mov
xor
addb
lods
das
out
fsub
sub
push
push
testb
sub
cld
sti
jle
outsl
and
pop
cltd
sub
lds
test
inc
loopne
push
jbe
hlt
jae
pop
add
or
cmp
mov
int3
pop
and
mov
mov
arpl
dec
cmpsl
into
fstps
movsb
aaa
or
lock
repz
test
sbb
loope
lahf
adc
pop
enter
lret
cmp
and
sub
lahf
xchg
in
sub
adc
jl
test
enter
mov
bound
mov
xchg
mov
sub
cs
out
stc
xlat
push
xchg
adc
jle,pn
das
lds
mov
mov
lods
sbb
in
sub
jno
xor
xlat
sub
mov
scas
push
shll
insl
leave
fdivs
out
push
dec
test
xchg
fistpl
mov
shl
xchg
adc
insb
popa
mov
shll
mov
sahf
roll
xor
cld
pop
cmp
jl
rcpps
sbb
lods
xlat
jl
sbb
loope
xchg
inc
int
sahf
pop
sahf
fwait
mov
push
jecxz
mov
push
in
repnz
adc
repz
mov
js
pop
sub
mov
pop
push
jecxz
loope
jb
fxch
cwtl
pop
adc
outsl
or
jns
pop
mull
int3
push
push
cwtl
loopne
push
rcll
and
repnz
and
and
jnp
test
shll
loop
clc
js
mov
stos
popa
cmp
jecxz
es
mov
dec
test
stc
dec
mov
dec
mov
mov
pop
stc
mov
outsl
inc
lret
test
push
mov
xchg
sbb
jecxz
pop
xor
imul
cmp
aaa
ss
cmpsb
pop
aas
outsb
repz
sub
mov
adc
imul
sar
hlt
nop
jbe
inc
mov
sub
push
mov
movl
popf
adc
pop
inc
inc
push
push
push
stos
fsubrl
or
addb
ss
sub
or
popa
dec
mov
je
mov
jb
push
fs
sub
filds
popf
imul
dec
mov
and
adc
int
or
mov
rorl
into
or
push
push
mov
loope
lock
stos
lods
xchg
jns
fistl
cld
xor
jg
cmp
test
repz
aas
aas
mov
adc
lcall
dec
cli
rcrb
cmpsl
or
pop
mov
popf
sub
xorb
add
imul
adc
sbb
arpl
outsl
shlb
movb
sub
divb
vmulpd
adc
dec
jae
inc
cmp
leave
pop
and
mov
xlat
cmpsl
gs
mov
push
xchg
mov
adc
add
cli
test
or
jmp
aad
negl
push
mov
jecxz
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
xchg
lock
ja
aad
pusha
fcmovnbe
call
inc
cmp
cmp
adc
inc
and
and
mov
scas
lea
nop
xor
fldpi
sbb
and
insl
xlat
hlt
outsl
mov
lret
pusha
jle
sub
sub
or
mov
inc
fwait
test
icebp
and
clc
gs
mov
mov
movsl
pop
pop
jo
cmp
sbb
adc
pop
subl
xchg
pop
push
pop
jb
cmp
leave
aad
jp
xor
lods
add
mov
mov
mov
ds
std
addr16
pop
popf
dec
xchg
mov
stos
or
xor
or
dec
adc
loopne
cmpsb
negb
jb
push
pop
lahf
movsb
jno
pop
roll
fnstcw
cmp
lds
arpl
jmp
cmpsl
jne
push
sub
outsl
arpl
enter
pop
pushf
cmpsb
mov
add
movsb
mov
mov
mov
outsb
push
or
addr16
sbbl
mov
inc
insl
jmp
dec
push
sbb
mov
cwtl
xchg
dec
icebp
sbb
xchg
les
repz
fs
and
jnp
and
push
inc
pop
jnp
inc
xor
push
mov
loop
add
mulb
cmp
inc
add
sub
pop
insl
or
push
xchg
xor
cltd
push
fiadds
dec
sub
sub
adcl
sahf
jg
jnp
shll
loopnew
add
cmc
adc
andb
test
mov
loop
jge
pushf
sbb
mov
aaa
mov
iret
es
sbb
jnp
and
dec
mov
or
std
aad
fnstenv
andl
add
iret
int
loopne
push
loop
in
inc
mov
cmpsb
inc
mov
fnstcw
out
dec
pusha
pusha
push
sahf
fwait
cmp
fwait
pop
inc
stos
arpl
mov
or
imul
xchg
cvtps2pi
lcall
out
pop
sahf
or
int3
inc
clc
jecxz
push
mov
mov
in
sbb
rcrb
sbb
ss
cmc
aas
orb
push
into
add
out
test
mov
dec
mov
scas
pop
lods
lret
jns
mov
repnz
push
xor
lcall
ret
lcall
call
sub
in
adc
push
das
insl
xchg
test
inc
aam
popf
fidivs
call
call
leave
in
jb
test
fidivs
je
and
into
jbe
mov
inc
icebp
sahf
into
stc
and
in
test
sbb
loope
loope
addr16
and
add
dec
pop
jne
push
out
jge
jae
outsb
roll
jecxz
sbb
es
scas
rcrb
dec
insb
cli
or
das
jecxz
std
std
out
repz
and
ret
int
dec
xrelease
sahf
sbb
jb
ljmp
sbb
sahf
shl
cwtl
adc
pop
repnz
inc
ljmp
and
scas
mov
and
scas
mov
mov
inc
mov
lds
or
xor
pop
adc
pop
and
into
push
ret
pop
arpl
pop
xchg
popf
mull
and
daa
pop
ljmp
jb
or
or
mov
push
test
sub
xsha256
cmpsb
xchg
or
inc
mov
sahf
jecxz
mov
xor
or
fnstsw
add
test
roll
sub
cmp
bound
hlt
cli
dec
int3
je
sbb
inc
imul
mov
arpl
aad
testl
add
lods
mov
sbb
mov
repz
and
mov
icebp
mov
push
sub
sub
jne
in
dec
add
leave
orb
adc
test
int
push
sbb
incb
inc
mov
lret
xor
jne
jae
mov
pop
je
add
jmp
movsl
mov
out
into
or
lds
inc
fdiv
fiadds
mov
rcrb
out
and
es
inc
daa
lcall
push
mov
mov
mov
mov
or
dec
sbb
xchg
push
inc
sahf
dec
pop
and
mov
xor
jg
outsl
ss
add
idiv
repz
sbb
cltd
aad
jp
mov
sub
push
push
pop
adc
xor
fisttpll
mov
jmp
not
jne
lret
dec
mov
or
mov
arpl
jmp
mov
aas
das
jge
stc
lret
test
mov
inc
es
test
xor
pushf
fcoml
push
popf
cmp
test
dec
or
and
outsl
repz
add
popa
in
jnp
lahf
adc
loope
add
out
orb
hlt
shr
out
sub
adc
mov
adc
push
cmp
lods
repnz
ljmp
jge
lret
xor
lcall
lret
pop
pop
ds
fimull
negb
xor
in
jmp
sbb
rol
ror
mov
mov
cmp
mov
fsubl
jecxz
or
xchg
lret
dec
adc
ja
xchg
xorb
sbb
out
sbb
imul
push
aad
insl
or
stos
xchg
jno
and
rcrb
lock
add
subb
out
ret
insl
cltd
jo
cli
push
test
dec
stos
shrl
pop
xor
cvttps2pi
pop
stos
push
push
data16
jge
outsb
stos
cmc
test
rcrl
adc
sub
xchg
cmp
dec
call
and
mov
push
mov
xchg
daa
jae
sub
lret
push
fldt
scas
loopne
xchg
ljmp
fidivs
pushf
sbb
nop
sbb
inc
test
mov
push
test
xchg
ljmp
cmpsb
adc
movsl
out
stos
movsb
pop
cmp
xchg
mov
jl
daa
out
xor
movsl
lret
xor
sbb
mov
lret
inc
rcrl
test
sub
push
or
int3
push
cmpsl
dec
jnp
scas
xor
pop
adc
mov
stc
push
push
xor
cwtl
jmp
addb
pop
xchg
out
sarb
jae
popa
fsubrl
cltd
xor
rorl
fsts
incb
push
popf
mov
nop
cmp
stc
outsl
xlat
sbbb
or
pushf
in
fildl
xchg
push
push
cmpl
ja
mov
sub
loop
add
xor
inc
ret
jo
push
imul
mov
repnz
bound
mov
cmc
xor
mov
pop
pop
cmp
mov
add
decb
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
push
sahf
xchg
push
add
loopne
icebp
lds
clc
cmp
ja
lahf
rolb
dec
adc
push
dec
pop
leave
sub
loop
dec
xchg
cld
mov
pop
cmp
mov
cvtdq2ps
push
popf
cmpsl
ftst
stos
sub
cli
inc
les
loopne
test
ficomps
cmp
pop
in
sbb
shl
subb
ljmp
mov
sbb
std
int3
ss
push
xchg
lods
pop
iret
mov
andl
xchg
xlat
jnp
imul
aas
ret
xor
jmp
or
mov
sub
adc
push
pop
push
out
inc
ror
pop
inc
cmp
and
sti
or
and
cltd
out
jmp
ss
and
icebp
sub
pop
xor
and
sub
add
filds
pushf
jne
push
mov
fistps
jecxz
pop
pop
push
mov
inc
data16
roll
mov
lret
or
out
mov
sahf
std
add
fisubrl
aaa
adc
cmc
xor
dec
jge
adc
ljmp
adc
int
cld
mov
imul
addb
or
mov
lret
xchg
cmp
xchg
sbb
popl
xchg
mov
xor
mov
adc
addr16
dec
js
pop
mov
cvtps2pi
outsb
in
xchg
stc
xorb
push
and
aaa
mov
adc
lock
push
and
ds
xlat
in
pop
dec
loopne
jp
iret
test
in
jne
push
sbb
pop
and
jbe
popa
test
jg
out
adc
push
sub
mov
sbbl
cmp
jb
out
testb
mov
out
insb
cs
dec
or
mov
xor
in
rcrb
jne
lock
dec
xor
push
cltd
nop
daa
xchg
inc
dec
push
push
nop
insl
aas
xchg
jno
jle
mov
nop
inc
decl
sbb
fimuls
ret
and
aam
arpl
jg
shr
scas
movsl
or
adc
cli
inc
add
jle
cmp
push
outsb
iret
out
mov
mov
test
mov
data16
rcrl
or
dec
lcall
movsl
mov
cld
dec
loop
pop
andb
into
mov
lods
sbb
mov
jge
mov
xchg
mov
and
push
xor
xchg
shlb
bound
arpl
aam
xchg
addr16
adcb
push
hlt
mov
loope
call
daa
sub
add
addl
out
add
sub
movsb
pop
jnp
sub
xchg
fimuls
pop
jmp
es
lock
jmp
adc
jno
aam
jno
rcl
add
mov
sub
cmp
lcall
inc
ret
jo
out
jb
mov
pop
and
bound
sbb
pop
mov
into
arpl
in
mov
leave
inc
jl
jle
and
mov
pushf
pop
sub
mov
in
fsubr
pop
cmp
dec
movb
cmc
pushf
std
push
lods
stc
shlb
iret
sub
pushf
daa
out
add
shl
test
push
mov
push
and
mov
push
cmp
sbb
lods
pop
jecxz
das
out
lahf
add
ljmp
sbb
loop
pop
xor
out
mov
inc
int
mov
sub
mov
idivl
push
dec
inc
jns
xor
cmp
ror
mov
mov
dec
xor
sub
jle
jge
out
mov
test
pop
stos
repnz
lods
mov
aaa
and
pop
pusha
mov
decb
adc
cmp
mov
ja
enter
iret
mov
lods
lret
lds
pop
dec
loop
lods
andl
mov
jmp
vpmadcswd
aaa
sub
adc
push
aas
ret
daa
loop
mov
jge
in
cmc
or
fucomip
mov
sub
bound
xor
push
jb
arpl
pop
adc
insl
jae
jmp
cltd
and
into
inc
mov
adc
add
dec
fucom
jecxz
movsl
xchg
and
mov
push
stc
out
jecxz
and
sbb
sbbl
hlt
aam
or
mov
test
xchg
add
add
cwtl
push
inc
xchg
jne
dec
in
subl
pop
mov
addr16
mov
test
movsb
inc
pop
outsl
and
jo
add
mov
push
aas
lock
push
jb
lret
mov
lods
sbb
fcomps
mov
jg
pop
adc
aaa
rcrl
push
addl
test
leave
cmp
sub
jecxz
lock
inc
mov
add
cmp
cwtl
testl
ret
push
nop
pop
pop
scas
and
lock
data16
les
xchg
into
pop
mov
movsl
dec
data16
cli
mov
repz
cmp
mov
psllq
push
xor
inc
das
and
call
cli
lret
sti
ret
xor
and
add
cmp
cs
jnp
dec
xor
and
dec
pop
push
sbb
dec
cmp
mov
mov
mov
mov
dec
xchg
repnz
cmp
inc
jbe
jmp
out
sub
shll
imul
popa
xchg
adc
cmpl
sbb
jne
inc
dec
pop
add
test
imul
jge
loop
jmp
inc
mov
sbb
scas
out
mov
add
outsb
lahf
add
addr16
push
push
out
dec
push
or
rcrb
fildll
fxch
daa
int
loopne
push
fs
addr16
cmpsb
data16
lcall
or
cmpsl
jne
inc
mov
mov
ds
pop
adc
adc
in
aaa
lock
pop
mov
sbb
ja
pop
lret
sub
idivb
inc
xchg
pop
pop
inc
or
std
add
or
jbe
pusha
jb
ret
shrl
scas
inc
pusha
push
cmp
mov
xchg
sub
cmp
cltd
adcl
sub
inc
and
insb
data16
pop
rol
push
xlat
arpl
jae
or
sti
pop
mov
arpl
cli
aas
push
xchg
faddl
inc
movsl
mov
mov
xlat
pop
lahf
and
xchg
or
pop
mov
mov
or
fwait
hlt
push
add
inc
flds
daa
xchg
into
cmp
hlt
jae
movsl
js
scas
and
jne
ljmp
fistl
xor
xlat
aam
sbb
nop
fnsave
ja
mov
dec
int3
mov
out
outsb
out
mov
jb
in
data16
and
mov
mov
jecxz
jns
or
cld
insb
aas
aad
mov
push
hlt
rclb
add
rorl
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
push
mov
mov
xchg
je
jmp
jmp
push
sbb
mov
adc
or
insl
pop
inc
out
aad
jno
bound
and
pop
stos
add
aaa
stc
inc
push
sbb
pushf
fnstenv
mov
jb
dec
sub
lret
and
pop
out
jge
mov
lcall
adc
out
mov
xchg
jb
aad
aaa
mov
iret
add
fcomi
mov
clc
xor
pop
pop
test
scas
inc
call
out
negb
mov
xor
sbb
sbb
mov
andl
insl
and
ja
adc
push
jg
cmp
lods
imul
mulb
mov
stc
insl
or
sbb
dec
out
je
loopne
pop
mov
or
fcoml
sub
cmpsl
lret
sbb
fwait
or
push
mov
rorb
outsb
dec
jle
sbb
sahf
pop
gs
addb
das
push
in
lcall
ds
jle
jmp
lock
xchg
jb
clc
in
cmp
out
pop
jb
ljmp
jne
jno
jns
inc
push
fbld
and
inc
cld
cmp
mov
icebp
inc
sbb
gs
add
es
outsl
push
xchg
pushf
popa
aaa
and
ss
sub
inc
popf
rcrl
int
bound
sar
jnp
outsl
orb
pop
xchg
sub
sbb
mov
sbb
lods
sarb
mov
pushf
imul
in
daa
cmc
je
cmp
test
sub
adc
daa
ss
in
or
pop
sarl
test
jp
bound
push
xorb
inc
loope
mov
mov
sbb
cmp
lahf
rcll
mov
call
test
xorb
repz
mov
push
rcll
icebp
repnz
push
mov
dec
pusha
mov
mov
add
ljmp
or
pop
mov
inc
and
or
inc
cmpl
mov
ficompl
aad
xchg
pop
ja
insb
jo
sub
jecxz
fwait
sbb
lods
jecxz
sbb
fildl
inc
in
loop
sub
xor
mov
push
sbb
pop
xchg
xchg
or
dec
aam
cmp
int3
xchg
lahf
scas
xchg
mov
test
fildll
bound
imul
fdivl
cmp
mov
pop
jbe
add
add
icebp
jo
sub
pop
xor
orb
sbb
cltd
in
scas
lret
into
lods
or
adc
cmp
dec
lds
sbb
fisubrl
loopne
xor
adc
ljmp
xchg
mov
jb
pop
xchg
fbstp
dec
and
adc
fisubs
inc
mov
pop
fnsave
and
jmp
icebp
and
sbb
dec
xor
data16
pushf
pop
cwtl
test
js
lea
xor
adc
shld
sub
push
sbb
movsl
imulb
push
or
xor
mov
aad
out
sub
in
cmpsl
add
daa
jg
pop
mov
mov
sub
push
xor
cld
pop
push
fcoml
pop
push
scas
dec
ljmp
mov
cmp
xchg
test
iret
jo
popf
jmp
pop
jmp
gs
arpl
xchg
lret
test
xchg
iret
inc
push
xchg
pop
lcall
insb
xchg
inc
jp
scas
test
sbb
sub
mov
jns
inc
push
stc
pop
and
rcrl
aad
or
sub
mov
scas
and
jp
pop
int3
sbb
jns
xor
js
out
xchg
outsb
repz
mov
push
inc
mov
mov
pop
jecxz
and
outsl
mov
leave
cmc
in
push
nop
sbb
xor
xchg
out
or
outsl
arpl
push
sti
xor
es
push
fnstenv
mov
scas
rolb
pop
add
jns
addl
jecxz
loope
jb
ret
inc
and
adc
push
xchg
adc
pop
int3
mov
push
lcall
push
mov
fsincos
or
mov
subb
fildl
pop
aam
rolb
dec
pop
adc
faddl
shlb
out
xchg
out
and
loop
and
ja
xchg
and
xchg
cltd
jmp
das
inc
mov
xchg
adc
and
inc
out
sbb
mov
sbb
add
in
imul
xchg
fcompl
or
nop
inc
mov
jecxz
mov
pushf
sub
mov
push
jno
add
lods
add
mov
fsubr
int
lahf
into
sub
jbe
arpl
lds
mov
sub
ret
pop
and
jg
mov
imul
mov
xor
ss
push
xor
cmpsb
jbe
jns
stos
mov
cmpsl
rcrl
dec
hlt
xchg
mov
xchg
cwtl
lock
icebp
daa
mov
inc
je
pop
es
out
xor
push
imul
jo
cwtl
movl
pop
lock
je
sbb
cmp
aad
add
cmp
inc
ds
cs
sub
out
leave
jl
and
xor
scas
mov
mov
loop
insl
cmp
fiaddl
fyl2xp1
or
das
fcoms
das
xor
stos
inc
add
insl
add
and
and
cs
lock
sub
ret
and
outsl
out
and
xchg
and
popf
outsl
sbb
cs
sbb
incb
popf
dec
cmp
push
ja
daa
nop
inc
pusha
sbb
idivl
lahf
xor
addr16
test
sub
mov
or
daa
fistpll
mov
jge
xchg
scas
sub
dec
pushw
lds
mov
xchg
or
test
dec
xchg
lret
inc
das
iret
jo
jg
or
jbe
push
jge
imul
rolb
cltd
mov
push
mov
lcall
and
hlt
stos
sub
andl
hlt
test
stc
dec
cmp
loop
test
cli
aaa
ss
popf
add
insl
fcoms
aaa
add
icebp
lahf
dec
lret
push
mov
mov
ret
push
push
mov
xchg
or
fdiv
mov
mov
testl
pop
dec
mov
out
add
and
ja
call
add
xlat
add
dec
std
in
loop
sar
aas
pushf
lods
test
inc
sub
adc
mov
pop
sbb
push
inc
repnz
mov
daa
jo
das
adc
cwtl
jne
out
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
dec
in
ja
ja
add
pop
dec
lds
in
push
ret
fcmovu
cmp
dec
mov
push
xor
bound
hlt
das
mov
repnz
js
out
add
jno
in
mov
sbb
nop
jns
push
add
test
push
push
cli
mov
rcl
xor
jle
jecxz
push
fistpl
jno
cmc
inc
mov
pop
pop
jo
int3
ja
mov
xchg
inc
adc
sbbb
add
sbb
dec
gs
mov
cmp
jbe
cltd
push
adcb
cld
movsl
push
jecxz
insl
xlat
xor
insl
repz
mov
lds
nop
pop
into
pop
ss
scas
cltd
out
or
xchg
pop
loopne
push
out
add
repnz
movsl
je
fwait
cli
mov
dec
sbb
in
cmc
sub
jae
rcll
cli
inc
dec
mov
inc
jbe
mov
pop
sbb
lahf
in
jbe
ret
int3
test
cmpsb
mov
dec
cs
cmp
clc
movsb
xchg
mov
scas
add
jo
push
push
adc
movsl
imul
stos
das
push
and
push
xchg
cli
ljmp
jae
push
fldenv
outsb
repnz
ret
mov
enter
push
mov
ds
add
jns
cs
shrb
xor
movaps
in
jge
pop
add
mov
nop
in
cmpsb
cmc
lcall
mov
add
push
movsb
adc
xor
inc
in
add
add
mov
enterw
lea
sbb
mov
mov
pop
ret
sti
nop
movsl
cmpsb
adc
mov
xchg
fmulp
cmpsb
hlt
jmp
frstor
pusha
push
jl
dec
inc
outsb
jne
push
jle
mov
popa
std
jmp
or
xor
cmp
mov
xor
cmpsb
sub
push
or
mov
pop
push
mov
cs
pop
or
shll
addl
mov
fmull
int3
inc
inc
call
dec
fcoms
inc
sbb
cmp
pop
call
test
pop
jbe
sub
into
sbbl
xchg
sbb
inc
jae
lods
das
rolb
or
mov
inc
bound
dec
aaa
jmp
pop
push
cmpsb
test
fildl
jo,pn
mov
mov
sbb
xchg
pop
stos
add
lcall
add
push
and
scas
test
imul
xor
push
negb
repz
sub
iret
stos
and
mov
pop
ja
cmp
jg
imul
call
mov
orl
ljmp
xchg
rcrb
mov
mov
sbb
mov
xorl
mov
push
xchg
mov
jg
jl
cmp
pop
jno,pt
and
xchg
jge
pop
mov
ss
iret
xchg
sub
addr16
iret
push
mov
jbe
sbb
cli
sbb
pop
and
mov
addr16
lahf
lds
mov
ja
mov
cld
push
mov
push
lock
dec
inc
inc
lret
pop
xchg
add
xchg
shlb
xchg
cmp
pop
dec
sub
rcrb
jnp
arpl
push
insl
inc
and
loope
shlb
dec
jnp
aad
inc
push
mov
cli
ss
sub
scas
mov
lea
js
and
xchg
adc
mov
adc
pshufhw
popf
rcrb
dec
in
hlt
shll
push
jle
sub
test
or
inc
xchg
out
rcrl
dec
int
repz
cwtl
pop
or
mov
mov
addr16
cwtl
ds
call
mov
cltd
movsb
icebp
jg
insl
imul
ss
inc
push
clc
pop
sub
xlat
push
mov
cmp
mov
stc
scas
xchg
and
push
cmp
xor
cld
pop
xchg
push
and
sub
ss
xor
or
sub
stos
xchg
jns
jno
mov
loope
xor
jle
lahf
add
stos
adc
push
cmp
aas
mov
js
xchg
jmp
xchg
sbb
and
int3
mov
mov
push
repz
jo
and
xchg
mov
ficoms
int3
inc
jnp
cmc
jb
push
gs
xchg
mov
or
or
cmp
cmpsb
ficoml
sub
adc
arpl
loop
inc
push
adc
cmp
push
sbbb
or
cs
sub
cmp
or
stos
daa
stos
adc
out
xchg
mov
xchg
xchg
push
gs
add
sub
aaa
in
shl
sub
inc
cmp
xchg
jns
insl
sub
in
cmpsl
mov
mov
into
arpl
mov
mov
pop
dec
adc
mov
inc
pusha
pop
add
mov
sahf
mov
mov
jecxz
adc
jo
push
xor
xchg
pop
ret
and
leave
pop
push
enter
push
dec
jle
orb
sbbb
sahf
scas
ret
stos
push
stc
jl
pop
daa
shl
sbb
push
xchg
inc
push
mov
inc
mov
ret
jg
inc
lods
pop
rorl
mov
mov
popa
cmp
fisubl
cmc
pop
jae
jl
sbb
add
mov
ljmp
out
push
movsl
dec
sub
inc
or
mov
imul
neg
sub
and
mov
loope
dec
cmp
or
les
fsubp
adc
jmp
scas
or
adc
xchg
js
add
in
test
leave
movsl
dec
scas
daa
mov
add
inc
dec
sub
sub
mov
aas
xor
mov
addr16
scas
inc
int
xchg
rcll
xor
mov
sub
lret
jns
in
xchg
and
lods
jle
jecxz
jle
decb
add
cmpsl
outsb
int
insl
pop
jmp
adc
lods
or
lret
ficoml
out
fstpt
gs
jne
fcoml
mov
mov
xchg
aad
test
lret
inc
jg
mov
lods
cmc
inc
lods
es
addl
pop
stos
enter
adc
daa
xchg
dec
jmp
loop
sbb
jne
pop
nop
xchg
lods
mov
jns
or
adc
inc
pop
hlt
mov
enter
mov
cwtl
push
pop
push
adc
mov
loop
popf
sbb
test
lods
je
imul
fists
cmp
add
lret
add
lahf
sbb
mov
jns
cmc
mov
fdivrs
sbb
jno
imul
mov
pop
cltd
fadds
xchg
cmp
es
mov
mov
std
mov
pop
fnsave
jp
mov
in
inc
popa
jl
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
psubd
jae
inc
xlat
mov
orb
xchg
sub
sbb
or
inc
test
daa
daa
xchg
push
xchg
test
out
mov
and
mov
std
daa
xchg
icebp
sub
push
mov
add
push
dec
and
or
subl
add
pop
scas
pusha
or
sbb
sub
ljmp
jp
lock
push
sbb
jg
add
loop
sbb
mov
adc
ret
roll
jb
pop
sbb
ror
xor
dec
loope
xchg
jle
dec
nop
and
icebp
lods
sbb
xchg
pop
dec
ja
push
jnp
das
ja
dec
fwait
iret
push
xor
loopne
mov
push
cmp
ficoms
out
outsb
cwtl
and
ss
mov
mov
cmpsl
testb
inc
pop
addr16
jae
sub
mov
ret
push
lds
fstl
mov
das
xchg
mov
ds
fwait
repz
movl
es
mov
je
push
lcall
or
xchg
ficoms
or
mov
pushl
fadds
int
sbb
ds
je
addb
cmp
and
jo
adc
sti
dec
inc
sbb
mov
ljmp
scas
rsqrtps
fidivrs
sub
fdivl
outsb
repnz
repnz
ja
test
sub
sarb
enter
arpl
js
xor
xor
fisttps
sub
out
enter
lret
xchg
subb
loope
fnstenv
outsb
dec
test
fisttpll
imul
pop
lret
jle
xchg
cltd
inc
mov
pushf
mov
push
inc
outsl
dec
nop
enter
and
dec
mov
push
fldl
xchg
push
sub
mov
cld
push
sbb
or
cmpsb
sarl
mov
adc
ljmp
test
jmp
jae
push
or
add
cmc
es
sub
data16
mov
into
es
mov
fsubs
stc
dec
pop
xor
call
subl
cmp
movsb
sbb
outsb
fwait
insl
gs
rorb
outsb
pop
pop
adcl
and
lds
xor
push
pop
mov
mov
ficomps
movb
out
ret
dec
test
sbb
add
cs
or
pop
adc
mov
sti
lock
xchg
adc
pusha
or
sahf
fstpl
xchg
mov
mov
adc
imul
xchg
popa
add
inc
jns
imul
rcll
xor
imul
push
xchg
sbb
mov
pop
imul
push
mov
clc
push
repz
fcmovu
les
add
ljmp
sti
add
data16
scas
pusha
mov
enter
lret
pop
aas
and
mov
cmpsl
cmc
lds
inc
loopne
push
call
sub
icebp
popw
ss
xchg
jge
insb
cmp
call
imul
sub
xchg
mov
xor
outsl
mov
sub
fwait
int
xchg
out
sub
jno
inc
jp
cmp
inc
fbld
push
out
imul
ret
fsubrl
rcrl
adc
sub
or
and
rorl
ret
pop
movsl
fbld
icebp
adc
loop
jbe
xchg
jnp
fadds
jge
push
leave
adcl
inc
lahf
in
adc
lcall
adc
jns
imul
mov
sub
mov
jl
add
arpl
and
jns
cmp
adc
mov
fimull
xchg
sbb
mov
mov
sub
or
mov
shll
das
loop
jb
daa
sbb
ja
push
mov
lret
insl
scas
sahf
xchg
fucomip
inc
jbe
inc
in
jno
sbb
xchg
test
and
mov
cltd
mov
jmp
pop
jno
lcall
pop
cmp
and
js
lcall
loopew
inc
push
pop
movsb
daa
inc
lret
mov
lods
jne
inc
pop
mov
mov
jmp
ret
mov
scas
inc
xor
je
and
pop
push
lock
cmpsl
pop
es
cmpsl
pop
pop
dec
ficompl
xchg
out
filds
lret
xchg
mov
ljmp
mov
movsl
loope
sbb
inc
out
inc
lods
mov
fcoms
pop
xlat
enter
daa
mov
xchg
fcoml
shrl
jae
mov
push
jmp
ds
sub
outsl
mov
ja
mov
cmp
addr16
and
addr16
jns
lcall
hlt
xor
mov
jecxz
lahf
xor
pop
sbb
or
in
push
pushf
gs
sbb
stc
fidivs
pop
adc
cmp
test
dec
shlb
mov
fldt
dec
call
negb
bound
pop
dec
test
xlat
les
pop
ret
inc
push
fwait
mov
or
in
out
jns
stos
jecxz
mov
or
cltd
daa
fwait
ret
pusha
ljmp
xor
outsb
add
push
fdivs
mov
inc
adc
ja
call
push
jecxz
sbb
cmpsl
dec
out
icebp
mov
es
lods
lock
popf
fs
pop
outsb
js
push
cld
in
mov
jae
imul
in
data16
sub
mov
hlt
cmp
mov
and
push
enter
or
loope
pushf
stos
pop
cwtl
daa
sub
shrl
scas
jp
sahf
push
sub
insb
dec
fstl
cmp
sbb
sbb
fmull
ret
in
push
xlat
sahf
stos
add
bnd
popl
repz
pusha
ds
cmp
mov
clc
data16
lret
mov
add
xor
inc
rcrb
mov
mov
cmp
jecxz
leave
insb
pop
sbb
sbb
clc
fnstcw
cmpsb
shrl
in
add
jne
lods
cmp
xor
fnstenv
or
out
out
orl
xlat
lds
fidivl
mov
pusha
sbb
jp
jne
insl
in
lods
sub
lret
je
in
cmp
mov
jecxz
inc
rcrb
out
inc
fninit
xchg
out
std
pop
fistps
pusha
and
sti
jge
push
add
scas
outsl
lret
push
das
mov
adc
xchg
mov
test
jmp
cltd
push
pusha
das
and
inc
imul
pop
sbb
pop
dec
icebp
xchg
outsl
xchg
addr16
add
sbb
ss
rcrl
rcr
push
iret
movsl
jne
shlb
jbe
cmp
add
mov
push
sub
adc
cltd
pop
pusha
pop
or
or
dec
xchg
test
or
aas
std
jp
cld
insl
cmp
aas
mov
xchg
jg
sub
pop
lret
xorb
ret
inc
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
push
add
adc
comiss
pusha
fisubrs
loop
jbe
jle
mov
sbb
or
outsb
mov
popa
pop
xor
dec
inc
lret
dec
test
mov
push
movsl
setne
in
fstps
stos
jae
jecxz
sbb
dec
cs
out
mov
les
mov
add
in
fadds
sbb
pop
cmc
push
sbb
push
popa
out
test
hlt
mov
rorl
sahf
xchg
jae
nop
adc
mov
inc
loopne
ja
out
repz
test
std
pop
inc
jp
xchg
inc
push
push
popa
outsl
mov
jnp
pop
and
ss
into
pop
bound
fists
movsl
sti
popa
out
mov
lret
daa
test
mov
push
jbe
pop
loopne
add
das
adc
aaa
xlat
iret
loopne
test
inc
test
fiadds
dec
dec
cltd
aam
ret
pop
cmp
pop
lea
push
pop
in
jae
rol
mov
ret
push
add
mov
cmc
fmulp
aaa
jne
mov
or
cmp
add
dec
adc
mov
inc
pop
mov
das
sub
mov
fs
inc
cmp
mov
ror
push
pusha
ss
clc
cmp
pop
mov
xchg
pop
es
add
sbb
push
rcrb
stc
adc
lahf
seto
cli
testb
daa
inc
jle
fcoms
fbstp
mov
mull
mov
and
adc
pop
mov
pop
das
js
mov
in
fisttps
cmp
jns
jns
add
mov
jmp
sbb
js
sbb
fdivs
xorb
sub
fists
mov
and
xchg
aaa
cs
cmc
out
jno
into
movl
or
push
jnp
pop
pushf
scas
in
dec
push
pop
sub
push
cmpsl
fwait
jmp
or
sub
sub
sbb
xor
je
leave
in
pop
pop
xor
inc
xor
push
aas
push
xor
mov
imul
movzbl
lcall
out
sub
clc
jp
shlb
mull
mov
ret
int
and
insl
pop
cltd
lret
scas
and
out
outsl
push
imul
pop
adc
jnp,pt
mov
and
pop
pop
fcoms
sub
inc
test
cmpsb
and
stc
mov
movnti
mov
xchg
and
or
pop
into
sub
mov
lods
fnsave
mov
or
pop
jae
data16
dec
mov
lahf
mov
lods
pmulhuw
fadd
idivb
out
mov
dec
inc
or
ret
in
sub
pop
or
movsl
test
cwtl
inc
push
out
stc
mov
in
adc
xchg
insl
pusha
dec
mov
inc
lea
arpl
cltd
dec
mov
pop
and
pop
loope
and
fwait
inc
push
xlat
std
sub
daa
inc
mov
arpl
push
pop
and
hlt
insb
pop
jno
xorb
bound
xchg
mov
and
xchg
sbb
jne
int3
stos
sbb
test
movsb
dec
gs
stc
jp,pt
dec
std
jecxz
mov
pop
push
pop
cwtl
inc
in
xchg
mov
xor
mov
mov
cmpsl
outsb
hlt
ret
movsl
stos
mov
arpl
xor
in
sbb
loope
test
sbb
stos
or
mov
sti
cmpsb
movb
dec
push
sahf
loope
cmp
imul
divb
ret
mov
or
repz
and
rclb
sahf
movsb
inc
mov
mov
mov
push
adc
fisubl
mov
mov
fsts
pop
jo
subb
scas
pusha
sub
sub
jg
jae
enter
or
dec
repz
dec
loop
or
sub
mov
jmp
adcl
popf
pop
movsl
popf
jb
push
mov
cwtl
lcall
push
loope
inc
loopne
sbb
pop
je
cmp
fstl
shll
sarl
jo
dec
rcrl
mov
scas
xchg
cli
insb
sti
pop
adc
jne
push
xchg
mov
cmc
xor
cwtl
repnz
mov
or
push
push
cli
pop
jp
mov
cmp
lods
out
pop
or
stos
mov
push
enter
sub
das
jnp
iret
add
aas
xchg
cmp
adc
repz
cmp
fsubrs
out
in
sbb
fdivrl
dec
adc
aas
in
adc
test
pop
sbb
pop
leave
pop
shrb
add
adc
jne
in
adc
aaa
mov
and
dec
icebp
add
mov
or
and
jno
and
inc
push
out
flds
adc
xor
adc
pop
lret
mov
mov
dec
insb
jl
arpl
out
xor
jecxz
test
add
popf
pop
add
and
rcrl
daa
inc
rorb
rclb
sub
jmp
push
imul
int
adc
mov
cmp
scas
fsts
push
lock
sub
arpl
xchg
push
bound
or
sub
push
pushf
aas
loop
adc
mov
lahf
adc
sub
mov
mov
lahf
in
mov
std
xor
push
fldenv
cwtl
popa
cmp
lret
int3
push
movsl
stc
arpl
xlat
xor
outsl
fldl
push
xchg
int3
adc
stos
inc
mov
mov
mov
fcoml
mov
cmp
lods
shrb
js
cmp
push
mov
add
fwait
popf
adc
dec
sbb
sbb
add
mov
scas
sub
sbb
popf
fs
or
in
out
xorb
xchg
js
xor
test
test
and
orl
fdivs
inc
les
push
lahf
repz
lods
leave
cmp
add
push
inc
jmp
movsb
in
das
dec
add
push
ficoms
stc
xor
into
jne
mov
mov
mov
mov
sti
lods
xchg
pop
or
loop
xor
fdiv
xchg
stos
inc
mov
push
xor
nop
loopne
loope
adc
mov
insl
fwait
lds
out
pop
test
pop
daa
mov
rcr
inc
mov
jb
sbb
fistps
lret
jno
fwait
cmc
sbb
stc
adc
push
decl
in
jbe
inc
jnp
jne
sub
lret
and
stc
ljmp
iret
fcompl
jns
pop
test
and
js
pop
cmc
sbb
adc
insb
mov
lods
insb
scas
imul
sub
sbb
mov
and
sti
sub
repz
jne
and
xor
repz
inc
test
rol
adc
mov
pop
push
fcmovne
call
sub
test
pop
mov
push
cmp
cmp
inc
jno
outsl
and
inc
add
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
ret
pop
add
ja
dec
cld
pop
cmc
sbb
hlt
lock
cmp
xchg
ret
mov
add
push
xchg
xor
jl
je
xchg
jns
dec
lods
inc
ds
rolb
sub
add
pop
pop
xchg
test
jl
jmp
dec
cmp
push
and
xchg
mov
iret
aad
xor
dec
sbb
fwait
mov
pushf
cmp
add
cmp
test
cmp
ret
pusha
ret
cltd
mov
xor
add
jecxz
and
mov
fucomi
xchg
add
xor
lods
into
lcall
mov
pop
mov
or
popa
shlb
push
lock
andb
dec
xor
mov
sub
push
int3
sub
mov
xor
jle
jb
inc
or
sbb
adc
and
add
push
cmpsl
call
call
cmpsb
movsl
add
bound
add
and
mov
fsubs
outsl
inc
mov
mov
addr16
cld
andb
lret
ss
call
dec
and
test
loopne
dec
jmp
in
lea
imul
data16
sar
outsl
imul
or
jnp
cmc
adc
mov
sti
call
arpl
mov
nop
enter
clc
inc
cld
mov
lret
test
stos
add
add
shrl
mov
dec
sbb
lods
sub
xor
data16
loop
mov
inc
daa
ret
and
cmc
mov
and
sub
xor
and
jnp
and
ja
adc
lock
cmpsl
dec
xchg
xlat
xor
call
iret
jae
jg
rcl
rolb
dec
dec
pop
mov
xchg
out
lret
xchg
mov
out
repnz
sub
inc
cmpsb
and
sub
add
and
cmp
xchg
fwait
or
lods
mov
aad
or
and
xchg
orb
adc
push
cli
dec
jns
andl
rorb
repz
xchg
or
xchg
divl
adc
cli
and
ss
mov
sbb
pop
jne
lods
popf
out
fistpll
aaa
mov
xor
xchg
cli
test
sub
mov
fucomi
pop
insl
sub
sarl
jno
shl
mov
mov
das
inc
dec
adc
lods
cs
push
pushf
push
pop
cmp
adc
rcrb
gs
jb
xchg
in
add
out
cmpsb
mov
pop
cmpsb
aas
jp
push
xchg
and
push
add
xchg
cmp
cmc
push
sub
in
or
ss
jno
fsubrs
pop
fiadds
sarb
shl
add
lods
mov
jbe
ret
or
jmp
dec
daa
xchg
aaa
lahf
stc
adc
cs
les
icebp
mov
test
xor
es
lods
cmp
cwtl
jp
push
adc
aad
add
push
sbb
cmpsb
out
fisttpll
dec
push
mov
jno
frstor
cmc
sbb
jmp
sbb
pop
inc
xor
popf
xor
sarb
mov
sbb
xchg
jae
cmp
in
mov
cld
or
push
or
cwtl
sti
lock
in
or
mov
daa
filds
insb
icebp
out
xchg
mov
xchg
pop
push
push
ljmp
adc
cmc
testb
dec
aam
mov
les
scas
sbb
loopne
push
mov
push
imul
inc
lret
sbb
mov
or
cmpsl
out
sub
dec
cmp
out
xchg
pop
leave
cld
repz
arpl
js
mov
fs
xor
loope
ja
jecxz
outsl
pop
sub
sub
inc
std
cmp
and
jl
sbb
fistpll
sbbb
adc
add
fimull
mov
pop
pop
push
or
sbb
adcb
xchg
sub
imul
mov
in
cmp
jecxz
and
push
xchg
push
cltd
jbe
lods
ljmp
bnd
mov
mov
popa
jg
rclb
out
jbe
ja
push
xchg
stc
inc
adc
hlt
stc
xchg
add
jae
jo
adc
subb
out
les
inc
loopne
test
cmp
inc
sbb
sub
mov
mov
adc
add
jl
and
ret
jbe
lds
dec
in
mov
push
inc
jle
jb
gs
and
mov
sbb
movsl
xor
lock
scas
xlat
filds
xchg
data16
xchg
pop
jl
fs
imul
push
xchg
mov
imul
fmul
cmp
push
and
adc
fcomp
xchg
fmuls
push
dec
popa
out
add
fsubr
in
adcb
and
and
jecxz
cmp
insb
and
outsl
ret
repz
sub
jne
sub
movsb
insb
fisttpl
and
rorb
xchg
idiv
fs
xlat
popf
cmp
in
outsb
addl
dec
sub
leave
xchg
or
xor
test
jl
dec
adc
ja
xlat
dec
ljmp
ror
xor
xchg
or
mov
mov
daa
ficompl
push
cmp
mov
cmp
jmp
mov
xchg
stos
push
sbb
fwait
imul
lods
out
xchg
pusha
scas
daa
and
lfence
aaa
std
lea
pop
push
jbe
mov
lret
ret
out
xchg
loope
mov
or
inc
or
gs
xchg
outsb
inc
test
imul
daa
sahf
and
vmovss
push
les
outsb
sarb
aas
xor
push
xor
pop
fsts
clc
push
sbbb
ret
dec
push
out
inc
es
push
lret
jmp
mov
movsb
pop
loopne
mov
lods
enter
push
jl
into
data16
mov
pop
je
and
mov
hlt
icebp
in
push
pop
cmp
fstps
je
mov
jmp
xor
jae
sub
mov
sub
adcb
mov
and
movsb
xchg
add
xchg
mov
cmp
int3
das
shlb
cmc
fwait
rcl
mov
cmp
mov
sub
push
jmp
and
or
add
push
sbb
mov
lock
nop
call
pop
hlt
mov
int3
cs
inc
jae
xchg
mov
inc
mov
xor
lcall
xor
filds
fldenv
rorb
dec
ret
iret
arpl
aas
jbe
popa
out
movsb
dec
adc
test
pop
sbb
insb
and
sbb
ret
fstps
and
or
mov
subl
sbb
scas
sbb
test
jecxz
dec
cmp
inc
cmp
jmp
movsl
lds
mov
jmp
ja
and
xorl
push
scas
popf
enter
cmp
or
arpl
push
sub
call
inc
cmpsl
leave
dec
push
shr
das
fadds
add
cmp
adc
mov
test
xchg
repz
xchg
jg
pop
mov
mov
sub
les
lods
iret
in
dec
hlt
push
push
sub
sub
lea
jl
mov
jmp
aas
cmp
pop
out
lods
mov
int3
ror
dec
outsl
lea
addr16
lret
aaa
sbb
xor
out
pop
jecxz
jns
add
cmp
movsb
shlb
loop
je
xor
andl
roll
loope
test
mov
les
pushf
mov
and
pop
cmpsl
rolb
jno
xor
rorl
and
pop
int
sbb
gs
xor
stc
inc
push
js
sbb
clc
add
test
cs
out
incb
mov
out
movsb
lahf
sub
shl
rcrb
sub
cmp
xchg
cmp
lds
add
outsb
push
lea
arpl
sahf
jmp
fucomp
adc
push
negl
xor
push
fucom
ljmp
bound
cmp
stos
xchg
add
push
pop
insb
mov
pop
addl
push
xor
imul
fnsave
pop
jb
jbe
rcrb
mov
repz
test
inc
outsb
jp
nop
mov
mov
sahf
inc
repz
xor
divl
pop
xor
cmp
xchg
inc
fucom
push
test
out
div
in
inc
insb
in
scas
cmp
cs
pop
mov
das
dec
imul
or
nop
cmp
stos
adc
rcl
jle
add
pop
dec
add
mov
mov
adc
mov
push
dec
mov
mov
add
pop
loopne
push
push
shlb
popf
int
jecxz
sub
inc
adc
mov
out
es
test
or
adc
push
test
pop
push
add
jne
mov
insb
repz
pop
flds
ds
push
jne
mov
scas
push
pop
movb
repz
sbb
repz
adc
pop
fildl
repnz
xor
rcrb
inc
adc
hlt
mov
dec
jne
cmp
call
imul
cmpb
negl
mov
add
lods
fcmovbe
stos
mov
sub
pop
xchg
ja
pop
lea
adc
sbb
aas
or
mov
fucomi
mov
push
xor
push
add
movsb
pop
das
jp
cmc
addr16
mov
inc
pop
pop
hlt
xor
jae
pop
insb
sbb
sbb
out
bswap
adc
add
jle
sub
pop
test
ret
or
addr16
in
fisubrs
rorb
out
cmpsl
sub
popf
les
fmuls
push
mov
push
fldenv
xlat
test
mov
and
movsb
adc
lahf
ret
jp
and
mov
xchg
inc
push
gs
xchg
mov
or
dec
icebp
testl
in
hlt
add
mov
out
iret
mov
out
stos
or
loop
sbb
mov
in
inc
inc
rorl
fstl
lods
pop
add
inc
pop
add
mov
and
and
sub
test
cld
push
es
ss
movsl
cmp
es
jbe
std
out
in
or
xchg
push
pop
divl
imul
lods
pop
insb
mov
das
jnp
fistps
adc
cli
sbb
mov
mov
rcl
sub
xor
mov
push
mov
mov
dec
xor
pop
fistpl
mov
in
push
adc
bound
or
add
cwtl
jno
xlat
movzbl
dec
adc
in
jae
xor
icebp
mov
push
out
push
adc
mov
cmp
mov
sbb
je
dec
shl
jl
add
jmp
ficoms
ds
cs
push
mov
sbbb
push
dec
cmp
sahf
imul
xorl
push
sub
xchg
mov
ss
sub
xchg
imul
scas
mov
insl
xchg
aam
mov
clc
test
repz
push
icebp
dec
lods
push
fldcw
aam
cli
sbb
je
jb
aad
hlt
pop
adcb
jle
fs
aad
fisubl
ss
test
sub
inc
movsb
bound
mov
test
cmc
adc
add
gs
cli
sub
push
sbb
push
jno
xchg
ret
rolb
aaa
mov
mov
shll
pop
scas
les
sbb
jae
sahf
adc
rcrl
mov
jge
lahf
inc
jecxz
add
dec
inc
mov
stos
sbb
adc
fdivs
dec
shll
jl
imul
imul
aad
push
sbb
lcall
ja
out
and
sub
shrl
stos
repnz
jge
xchg
or
inc
dec
mov
rorl
and
cmp
mov
nop
jp
repz
stos
clc
sub
js
testb
imul
pop
pop
jnp
and
stc
jae
loop
cs
jmp
jns
dec
lret
int
xchg
sbbb
nop
loopne
mov
push
stos
cli
xor
dec
fucomip
outsl
sti
insb
decb
scas
addr16
andb
int3
or
mov
inc
mov
in
repz
das
mov
data16
cmp
clc
dec
inc
jmp
adc
mov
or
cmp
inc
lock
cltd
mov
mov
cmp
mov
ljmp
aad
popw
adc
sub
and
gs
sbb
dec
xlat
mov
rcrb
sbb
push
xor
cld
loope
ds
push
nop
je
sub
in
cmp
xor
into
mov
pop
lahf
mov
mov
ret
xchg
adc
push
push
and
sub
inc
je
mov
dec
fildll
sbb
movsb
in
leave
push
add
jnp
adc
add
ret
sub
mov
das
or
cmpb
mov
inc
jl
out
mov
sub
pop
mov
mov
stos
sarb
ret
pop
adc
xchg
sub
jae
fidivl
in
das
sbb
lret
lret
jp
std
mov
fldl
jno
loopne
xchg
mov
ja
xor
xor
rcrb
mov
xchg
xor
ret
xor
cmp
popf
aad
mov
out
rcrb
cwtl
pop
add
lcall
js
add
cmp
add
lea
stc
into
or
enter
pop
cmp
sbb
loop
push
loope
cwtl
inc
dec
scas
add
sub
and
and
fdivrs
dec
xchg
or
mov
push
xchg
icebp
inc
in
pop
scas
cmp
cmc
std
cmp
cmc
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
fmull
xlat
scas
test
vpmullw
mov
xchg
or
add
fcmovnu
push
pop
lret
mov
jle
sub
jp
or
push
insb
jge
stc
lock
cmpsb
dec
scas
mov
and
imul
sbb
aam
add
fsts
pop
les
inc
adc
pavgw
pop
and
push
pop
rclb
mov
pop
xchg
and
in
or
pop
fwait
push
or
inc
out
imul
cli
pop
ljmp
cmpsw
dec
das
mov
addr16
test
test
es
fcomps
std
cmc
dec
fstl
sub
lods
ds
xor
hlt
push
sbb
mov
mov
mov
dec
out
adc
jp
push
xor
popf
xor
inc
sub
lock
sbb
dec
gs
inc
movsl
enter
and
cs
mov
cmpb
mov
call
and
leave
aad
arpl
rorl
stos
loope
fcomip
int3
mov
aam
mov
jae
fidivl
xsave
movsb
lahf
adc
mov
addb
cmp
ficompl
cld
or
cmp
lret
mov
dec
or
xchg
mov
mov
add
lds
rcrl
clc
jbe
cmp
adc
push
gs
inc
sbb
into
xor
loope
and
lret
and
pop
fisubl
xchg
ljmp
cmpsl
or
aas
lods
cmp
fdivrl
stos
sub
ret
pushf
add
jmp
call
pusha
jmp
pop
test
sub
push
aaa
leave
mov
aaa
shl
icebp
cltd
push
push
mov
pop
mov
dec
or
mov
push
ds
adc
nop
popf
mov
add
adc
or
adc
sbb
sbb
cwtl
xchg
xchg
and
insb
mov
pop
negl
mov
mov
std
cmp
pop
ret
pusha
xchg
adc
rcr
xor
add
adc
push
push
xlat
cmpsl
and
fdivs
mov
push
inc
rcl
cwtl
mov
lea
sub
adc
shl
jo
lea
lret
push
jmp
push
jbe
jp,pt
sbb
arpl
adc
icebp
std
cmp
jmp
adcl
mov
sub
add
cmp
dec
cs
xorw
in
imul
inc
test
sti
cltd
out
adc
mov
js
test
add
cltd
pop
lods
xchg
sbb
out
adc
aas
xor
hlt
sbb
ss
test
cli
mov
insb
push
dec
inc
dec
rcl
movsb
mov
and
pop
dec
les
sub
jbe
pushf
fisttps
dec
outsb
iret
sahf
pop
mov
cmp
push
repz
lods
sub
lods
ljmp
js
inc
in
push
sub
idivb
std
out
fistl
mov
pop
test
push
or
ret
cmpb
std
mov
aam
inc
and
hlt
dec
into
sub
lods
add
cmp
popa
leave
testb
mov
and
sbb
inc
int
fwait
adc
test
and
inc
add
push
mov
fmul
xor
dec
inc
mov
cmp
push
sbb
sub
or
sub
mov
xor
cld
jbe
or
adc
xchg
outsl
jl
mov
imul
popf
aas
sub
lahf
out
shl
repz
je
mov
jne
cmpsl
cmp
stc
or
or
incl
xlat
sub
shll
mov
mov
mov
and
jle
xchg
repnz
cltd
ficoml
adc
or
les
dec
repnz
push
ret
add
loop
sti
cmp
dec
clc
push
push
dec
xchg
stos
scas
add
pop
repnz
or
adc
and
mov
sti
lcall
lods
mov
jmp
lock
xor
outsl
lods
xor
imul
inc
testb
xchg
adc
cmpsb
xor
inc
imull
das
and
cli
push
jnp
mov
jmp
dec
pushf
imul
push
push
adc
jle
cmp
push
in
inc
icebp
cmc
dec
inc
addl
incl
call
lea
gs
jne
nop
ss
adc
loopne
jg
jae
dec
fisubl
jb
mov
addr16
pop
iret
insb
jno
movsl
mov
ffreep
out
mov
outsb
dec
js
leave
iret
and
dec
mov
cmc
call
dec
cli
cli
fsub
divl
xlat
sub
pushl
fdivp
cmp
mov
xor
and
mov
test
aad
pop
sub
sub
ja
push
sbb
stos
mov
insl
mov
push
adc
sahf
aas
push
ja
mov
cltd
add
push
or
repnz
cwtl
lock
addr16
testl
xchg
iret
adc
bound
stc
and
cmp
mov
xor
movsl
je
scas
push
mov
xchg
sbb
sbb
adc
dec
ljmp
rcrb
repnz
cmpsb
pop
sbb
pop
shlb
setne
pop
icebp
cmp
xor
add
xlat
outsl
push
cmc
je
mov
mov
bound
shl
cmp
mov
sti
jbe
pop
push
mov
fcomp
dec
int3
inc
decl
mov
cmp
push
testb
in
pusha
pusha
out
lret
dec
mov
sbb
xchg
test
fisubl
dec
push
xlat
push
ret
lret
mov
addr16
fisubrs
in
mov
xchg
icebp
add
or
psubw
sti
stos
mov
pop
jno
lods
mov
icebp
jne
daa
xchg
jne
dec
mov
xor
popf
lock
lods
lods
and
mov
out
mov
clc
inc
mov
test
mov
sub
mov
int
ret
in
push
jp
and
xorl
push
cmpsb
jae
and
aas
mov
imul
test
jne
adc
jns
jns
and
xor
sbb
pop
xchg
push
mov
fcoml
adc
pop
push
or
int3
jne
in
add
xchg
xorb
sub
shlb
ret
add
lahf
mov
lods
cmp
mov
or
pop
adc
jnp
add
arpl
imul
mov
cs
leave
movsl
shl
leave
imul
and
pop
push
push
mov
pop
or
push
jo
movsb
test
fs
pusha
jns
lret
addr16
mov
fistps
sub
das
xlat
adc
fcoml
in
xchg
and
pop
cmc
mov
test
mov
movsl
je
divb
mov
mov
or
pop
add
ljmp
sub
repnz
js
aam
ja
mov
daa
cmp
pop
ja
fsubs
outsl
mov
pusha
sti
and
or
testl
in
daa
in
xchg
leave
xchg
inc
mov
lea
insb
mov
insb
shll
cmp
ret
into
mov
xor
pop
pop
add
xchg
pop
mov
outsb
out
jae
add
es
pop
mulb
jle
idivl
sub
mov
or
jns
jnp
filds
and
dec
fsts
xchg
loop
jl
aam
sub
push
xchg
or
lods
mov
pop
cmpsl
jns
inc
popf
push
inc
ljmp
sbb
dec
aam
int3
mov
in
and
jp
jecxz
in
cli
rorb
pop
stos
xchg
lds
negb
imul
xlat
push
xor
out
jp
jmp
fdivrl
mov
and
pop
xchg
push
mov
mov
mov
jg
into
in
mov
xchg
or
fcom
test
scas
fcmovne
call
push
fcmovbe
or
xchg
je
inc
push
push
shrl
xchg
push
xor
lods
aam
mov
rorb
fldcw
pop
push
je
mov
shll
xchg
mov
ret
out
push
jbe
loop
mov
mov
jbe
xchg
ja
push
inc
bound
sub
sbb
imul
inc
cmpsl
mov
inc
sbb
rorb
les
and
adc
mov
add
js
sbb
cmp
out
or
push
sbb
add
lds
sbb
sub
das
cld
push
push
inc
pop
cmp
inc
push
dec
lret
divb
push
inc
decl
jmp
add
lods
or
mov
mov
sub
pop
inc
addr16
cmp
push
mov
testl
push
xchg
les
and
jns
pop
shll
das
push
mov
pop
push
push
inc
and
sbb
pusha
fucomi
ret
add
adc
pop
add
dec
iret
add
frstor
and
pop
jb
or
jb
dec
lret
push
push
jne
xchg
jmp
sahf
push
adc
pop
js
inc
addb
lea
sbb
and
inc
outsl
sbb
loopne
pop
adc
and
mov
lret
cmpsb
push
lret
lods
lock
push
xchg
push
jnp
jmp
jae
jb
pop
jnp
lcall
jecxz
mov
popf
mulb
stos
sbb
mov
xor
call
lea
xor
nop
in
cmpsl
sbbl
fucomip
push
pop
mov
enter
push
cwtl
lahf
mov
mov
or
imul
lret
shlb
rcrb
push
sbb
or
mov
fnstsw
arpl
add
imul
stos
loop
push
mov
cmp
loop
mov
lret
int
movsb
into
sbb
stos
mov
dec
jl
mov
xchg
addb
and
bound
fs
or
popl
and
cmc
test
push
mov
movl
mov
sbb
int
jne
jmp
clc
mov
push
sbb
xlat
out
loopne
imul
push
dec
push
and
lock
xchg
inc
mov
icebp
mov
and
push
mov
fnsave
add
scas
add
jns
into
lea
jne
lea
xchg
mov
mov
adcl
add
orb
ss
cwtl
shrl
push
mov
add
dec
pop
repz
stos
outsb
add
xorl
mov
dec
cwtl
mov
movsl
xchg
push
adc
or
mov
xor
cwtl
lea
aad
sub
jmp
lret
xchg
mov
mov
test
adc
cmp
push
cmpsb
sbb
loopne
pop
xlat
outsl
cmp
rcr
lock
fwait
pop
outsl
add
cmp
jle
add
pop
shl
ljmp
adc
dec
std
ss
sbb
push
xchg
dec
or
test
imul
cli
movsb
xchg
push
aas
aam
sbb
std
sarl
xor
dec
ret
dec
fsts
mov
push
lretw
or
pavgb
cmc
inc
loop
cmpsl
bound
lea
pop
xchg
cmp
mov
lea
popa
pop
inc
ret
mov
mov
hlt
cmp
es
and
and
jbe
push
sub
gs
sub
cli
adc
scas
sub
xorl
xlat
loopne
fsts
add
or
xchg
add
inc
and
shrb
and
movl
movsl
jmp
add
adc
inc
sub
stc
cmpsl
mov
icebp
ficoms
aaa
add
int3
inc
or
ljmp
pop
cltd
mov
sbb
jo
xor
xsaveopt
test
pop
jb
test
loopne
ljmp
adc
in
icebp
loop
mov
pushl
popf
mov
out
mov
ljmp
sbb
fsubs
idiv
xor
dec
in
inc
xchg
jae
lret
mov
jg
mov
xchg
out
cmp
or
sti
xchg
cmp
iret
adc
add
adc
cmp
fnstcw
loopne
mov
add
xorl
or
or
inc
push
aaa
mov
jmp
sub
adc
outsl
popa
inc
jmp
mov
mov
pushf
or
mov
push
sbb
sahf
das
push
fmulp
inc
mov
loope
xchg
insl
xor
adc
int
sbb
lcall
lock
mov
push
xchg
enter
iret
push
xor
test
jecxz
sahf
sbb
inc
and
and
or
pop
out
lret
pop
mov
pop
or
add
insb
xchg
repnz
pop
inc
fwait
lcall
mov
and
jp
pop
pop
shl
bound
pop
lods
mov
push
call
out
scas
stc
int3
test
stos
inc
mov
cs
mov
xor
or
inc
push
imul
pop
aaa
enter
lret
test
and
sub
pop
icebp
lock
lods
pop
dec
vpcmpeqd
lods
scas
lcall
sub
rcl
pushf
or
add
notl
xlat
je
adcb
in
cli
nop
cmpsl
fsubrs
mov
nop
fisubrl
add
pop
popa
sub
xor
dec
add
add
pop
mov
xchg
outsl
loopne
jp
nop
mov
push
add
mov
loop
addb
push
rorb
xor
inc
mov
lahf
adc
or
out
or
aas
pop
sub
adcb
inc
pushf
pop
lret
push
test
mov
push
cmp
gs
lea
lods
or
insb
add
cld
push
aad
pop
arpl
pop
inc
ret
imul
or
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
push
or
xchg
mov
cmovns
popa
mov
lret
les
es
aas
inc
xor
aam
out
push
inc
mov
pop
roll
xlat
mov
aas
notl
ret
push
fs
scas
stos
jo
ljmp
xchg
add
loop,pn
in
divb
xor
sbb
stos
movsb
xor
out
fld
loopne
jae
inc
jne
jns
and
out
dec
pop
xor
xor
sarb
int3
add
stos
cmove
fsubrl
mov
stc
or
ret
icebp
sahf
pop
mov
dec
in
loopne
inc
mov
jo
test
outsb
imul
lret
inc
jl
jns
mov
movsb
daa
cmp
mov
sti
aad
adc
mov
std
dec
push
stos
mov
push
jp
das
adc
or
repnz
nop
or
repz
cltd
mov
dec
jmp
pop
and
lahf
add
mov
enter
stc
xor
push
mov
ret
icebp
repz
stos
test
mov
pop
cmpsl
scas
pop
dec
mov
out
fs
cmpsl
idiv
mov
add
jle
rclb
lock
mov
mov
popf
mov
aam
subb
pop
dec
lock
sahf
xchg
clc
and
testb
inc
ret
and
xchg
icebp
inc
jo
mov
sahf
loop
imul
adc
xor
movsl
insl
into
test
xchg
push
or
orl
fiadds
pop
loop
orb
pop
in
mov
stos
sbb
out
js
add
mov
or
cmp
in
add
repz
xchg
inc
pushf
pop
enter
sub
test
adc
or
or
into
add
aas
andb
xchg
add
aad
pop
test
pop
imul
jbe
test
mov
sarl
fisubrl
pop
sub
dec
pop
pop
jp
gs
mov
leave
ljmp
pop
repnz
aam
leave
push
lock
and
scas
pusha
in
ja
mov
mulb
popf
fsubl
sbb
mov
mov
sahf
mov
and
das
push
or
roll
add
imul
shrb
into
xor
push
dec
xchg
or
cltd
mov
dec
outsl
lret
mov
aaa
cmp
or
outsl
pop
cs
les
and
popa
cltd
xor
dec
cmp
scas
in
jo
dec
sub
cmpsl
sahf
jle
mov
lret
daa
stc
repz
call
push
testl
dec
ficompl
jl
jae
and
add
in
push
out
xor
inc
aaa
int3
repz
xchg
je
aam
jbe
repnz
sbb
dec
adc
imul
movsb
dec
fs
add
sub
inc
jo
repnz
fdiv
cmp
adc
pop
mov
jle
mov
cltd
or
popf
repz
mov
faddl
inc
lcall
dec
mov
xchg
cs
xchg
and
push
xchg
mov
cmp
pop
xchg
movsb
xor
push
inc
xor
gs
dec
push
jmp
dec
push
test
push
arpl
inc
and
scas
cmpsl
hlt
add
pop
xchg
xchg
jnp
xchg
outsb
jnp
in
notl
mov
arpl
mov
push
mov
add
outsb
addr16
test
jae
lahf
call
mov
aaa
stc
jne
jno
add
adc
insb
inc
int3
add
movsb
movsl
data16
xchg
loop
sbb
insb
sarb
ja
inc
shl
mov
push
dec
sub
loop
addr16
add
and
fwait
inc
movsl
adc
xchg
popf
mov
add
ss
jbe
sub
mov
and
add
ja
mov
mov
fisubs
daa
cmp
clc
push
or
push
popa
cmp
pushf
xor
xor
sarb
rcrb
or
lea
bound
xchg
push
push
out
inc
xchg
jle
sub
push
xchg
aam
loop
dec
fwait
hlt
mov
sbb
mov
mov
cmp
sub
xchg
clc
outsl
insl
scas
stos
movb
ss
arpl
xor
jp
fisttpl
pop
xchg
jo
imul
scas
jbe
out
mov
aad
addr16
add
adc
mov
popf
mov
cmp
sub
xor
jo
negb
mov
xchg
fcomps
pop
adc
fcoms
test
push
test
sub
xchg
mov
xor
mov
popa
rcrb
inc
xor
data16
cld
jmp
ljmp
lcall
mov
lcall
and
cmp
lcall
pushf
fildll
fdivs
aad
leave
cwtl
jnp
xchg
jae
add
push
ret
pushf
jae
jae
int
dec
push
pop
push
mov
stos
imul
inc
push
lock
sub
adc
cmc
test
rcrl
lods
fsub
sbb
popw
push
into
gs
mov
inc
sub
add
and
scas
or
sub
mov
push
sub
enter
out
subl
cs
sbb
push
sub
int
das
sahf
push
mov
es
inc
imul
lock
clc
js
stc
push
xchg
fcoms
sub
andb
mov
cmp
out
push
sbb
and
mov
pop
push
add
or
or
scas
mov
push
daa
ret
movsl
add
in
add
mov
dec
movsl
lods
xor
and
into
sbb
insl
xor
fstpl
gs
mov
es
pop
sub
mov
mov
adc
mov
dec
loope
repz
notl
dec
sub
lret
lea
cmp
dec
icebp
fsubrl
std
fbld
ds
mov
sbb
int3
int
int3
clc
adc
imul
inc
dec
sub
ds
cmc
pop
xadd
jmp
inc
in
mov
dec
add
aaa
out
into
mov
in
adc
inc
push
das
lahf
adc
and
and
rcr
mov
fsubrp
popf
cltd
int3
inc
imul
push
xor
jae
fdivs
ret
sub
testb
lret
data16
jnp
mov
in
mov
stos
push
jne
lods
outsb
push
jb
cli
loopne
inc
xchg
clc
popa
inc
scas
adc
xchg
cmpsl
dec
pusha
lret
addr16
popf
dec
fs
das
push
lock
lea
sahf
xchg
arpl
xor
verr
rorb
in
sub
movsb
cmp
sbb
adc
sub
push
fcmovne
out
xchg
lret
cmpl
add
mov
or
or
ljmp
cmc
outsb
sub
mov
cmp
jne
fstps
aas
mov
dec
arpl
scas
xor
stc
xchg
xchg
dec
scas
ja
sbb
jo
xchg
leave
pop
out
push
adc
mov
addr16
fucom
dec
jne
mov
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
testl
adc
xchg
push
popa
stos
mov
cmp
dec
xchg
dec
dec
cmpsb
push
cwtl
xchg
cmpl
or
adc
outsb
scas
andb
jg
xor
js
inc
sub
shr
xor
and
outsl
xchg
test
cmp
lahf
mov
data16
les
jbe
pop
lret
fsts
daa
or
aaa
iret
lret
jns
jns
jnp
sbb
or
mov
in
test
xor
jecxz
stc
loopne
aad
rorb
and
gs
pop
or
popa
xor
mov
es
sub
loop
and
out
stos
add
addr16
jae
je
sub
les
jbe
mov
push
je
call
pop
push
sub
push
je
pop
dec
cmc
pop
adc
loop
inc
pop
scas
inc
ljmp
or
xchg
add
mov
sbb
loop
xchg
pop
pslld
out
ja
test
in
xor
add
pop
xchg
mov
cmp
pushl
mov
cmp
lret
test
mov
insl
popf
sar
mov
enter
shlb
xchg
mov
out
out
xor
lahf
jo
cli
pop
lods
pop
das
test
dec
imulb
in
test
and
inc
movsb
cmp
hlt
je
adc
addl
cltd
push
pop
into
inc
mov
js
inc
adc
mov
fstpt
pop
int3
push
je
ljmp
inc
mov
xchg
pop
jnp
repnz
mov
mov
inc
cmp
sub
fistpl
jno
add
lret
sub
fisubs
cmp
adc
cs
imul
mov
cmp
arpl
test
data16
mov
cli
test
mov
shll
mov
mov
fidivrl
mov
sbb
or
lock
out
shrl
imul
lea
mov
leave
fsts
ror
lods
jns
mov
and
sub
cmp
push
in
test
mov
mov
movl
movl
push
stc
sahf
in
sub
dec
ja
pop
pushf
fimull
xchg
mov
shr
push
mov
xchg
add
bound
imul
fcompl
ds
fs
fwait
sub
pop
loop
sub
mov
in
lret
push
lock
jne
call
orl
lods
push
fwait
daa
or
bound
jnp
mov
inc
push
das
faddl
popf
mov
adc
mov
imul
test
adc
lcall
mov
shrl
int
stos
cltd
js
and
jo
stos
rcrb
mov
lock
ret
mov
push
iret
jb
add
les
pop
push
test
out
je
jo
js
test
es
roll
test
dec
leave
cs
mov
or
sub
lods
mov
stos
xorl
xchg
into
adc
xchg
sub
cmpsb
add
jp
loopne
fidivl
push
sarb
dec
dec
imul
sbb
jae
movsb
ret
xchg
stc
pop
sbb
inc
xlat
loope
and
fistpl
push
insl
insl
adc
daa
aad
and
cmp
xchg
inc
adc
mov
jnp
dec
mov
adc
shl
loop
and
addr16
into
cwtl
xor
dec
mov
cmp
popa
icebp
stos
mov
xchg
stos
stos
mov
sti
sahf
inc
mov
adcb
push
mov
mov
mov
roll
scas
nop
push
mov
pop
pop
movzbl
les
xchg
scas
and
jns
pop
xor
mov
jmp
pusha
xor
pop
das
sub
pop
sbb
rolb
arpl
xchg
mov
repz
hlt
and
pop
js
mov
push
and
ret
aas
outsl
cmp
cmpsl
int3
jge
mov
fwait
jge
mov
xor
push
xor
lret
bound
cltd
sub
jle
mov
cmpl
inc
outsl
imul
mov
xor
add
in
inc
clc
sbb
divps
data16
jno
cmp
jo
dec
mov
lcall
adc
in
cmp
ficompl
lds
rcrl
jmp
pop
shlb
push
jl
pop
lock
mov
add
test
mov
repnz
outsl
iret
scas
aaa
fsub
sub
xchg
in
jae
pop
pop
imul
adc
fistpl
in
leave
aad
and
mov
or
mov
pop
push
loopne
movlps
jno
ficoml
pop
xor
mov
mov
hlt
test
arpl
movsl
out
mov
mov
les
or
add
shlb
in
pop
sti
sub
lcall
insb
mov
fcmovnb
daa
scas
icebp
lret
sbb
pop
aaa
push
push
cmp
mov
out
js
sub
cmp
mov
push
mov
lcall
cmpsl
xchg
push
push
aaa
add
rol
leave
cltd
test
bound
scas
or
in
mov
enter
xor
nop
arpl
cld
fnstsw
out
jp
mov
int3
sub
in
mov
jmp
xchg
lret
popf
enter
repz
jbe
adc
ret
push
outsb
data16
dec
mov
add
hlt
shrb
rolb
xor
mov
and
setg
lock
cmp
rol
ds
jle
jle
pop
lret
mov
movsb
push
xchg
mov
xchg
lret
mov
arpl
rolb
fmuls
outsb
enter
inc
loopne
jbe
or
jle
pop
pop
jmp
out
sets
jo
sbb
push
or
xor
out
lret
inc
movsb
in
lret
lea
icebp
pop
inc
jl
push
test
push
fs
leave
movsl
pop
pop
add
cmpsb
lahf
jl
sub
ja
out
cmpsb
sbb
push
imull
fs
sysenter
rcrl
rcr
cmpsb
repnz
test
dec
jg
add
mov
mov
shlb
or
pusha
push
xchg
xor
mov
pop
clc
movzbl
cmp
inc
mov
mov
pop
push
test
or
rorb
std
and
sub
adc
dec
mov
iret
les
sbb
int
add
adc
dec
inc
ud2
sub
mov
lods
cmp
adc
scas
dec
push
cmp
fldl
dec
daa
push
lcall
pop
mov
fisubrl
push
pop
xorl
jb
leave
sarl
int3
and
repnz
inc
es
repnz
in
or
pop
pop
cmp
daa
scas
and
mov
and
pop
fidivs
mov
xor
xchg
out
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
pop
xchg
cmp
xchg
js
movsl
leave
mov
dec
inc
movsl
jo
push
sar
nop
sub
lods
loope
or
push
pop
jae
mov
add
cmp
sbb
test
and
inc
or
mov
sub
pop
add
popf
ljmp
mov
ds
mov
inc
xor
mov
dec
xchg
sbb
das
xchg
xor
push
out
lahf
cmc
leave
in
jne
inc
flds
inc
and
dec
fucom
or
mov
scas
jmp
out
lock
fbstp
lock
mov
movsl
ja
pop
notb
bound
jge
jnp
roll
dec
mov
mov
jp
cmpsl
push
jge
shr
shl
icebp
imul
scas
int
rclb
mov
stos
mov
xlat
or
out
mov
jmp
gs
aad
jg
lock
add
push
stc
mov
pop
insb
pop
aam
sbb
fadds
movsb
dec
cmp
push
int3
mov
ret
ja
shl
mov
pop
stos
xor
fs
shlb
sbb
jo
stos
popf
mov
dec
stc
aam
inc
pop
xchg
aas
lods
mov
push
dec
fisubrs
sub
and
dec
addr16
pop
xor
jg
push
adc
lcall
inc
int
out
ja
test
mov
cmp
shll
lret
mov
iret
inc
fcmovnu
mov
das
sbb
push
cmpsl
orb
cli
scas
cltd
mov
and
xor
aaa
cli
scas
adc
enter
les
mov
mov
or
push
fdivrp
mov
mov
rcrb
jbe
dec
sub
xor
jge
inc
cmp
add
push
rcrb
mov
push
sbb
mov
scas
pop
sti
dec
into
pusha
jo
or
in
mov
ljmp
popf
es
mov
rcrl
dec
ror
sub
jle
xor
mov
inc
push
stos
sbb
das
rorl
push
cmp
dec
outsb
ss
xor
lret
jne
jg
scas
mov
pop
jbe
js
pop
fldl
sar
cmp
inc
push
jmp
sahf
loop
mov
jle
sbb
out
scas
sbb
add
dec
aam
jne
push
inc
lahf
push
jl
int3
loop
sbb
jmp
fmuls
sub
js
scas
lods
addl
add
ds
insb
iret
cmpsl
lret
loopne
jae
xchg
adc
mov
sub
cld
mov
fstps
adc
vmovsd
jae
push
lret
adc
aaa
cmpsl
xor
push
test
jle
and
call
cmpsb
in
add
mov
leave
int3
adc
sbb
pop
rolb
ja
loop
add
js
out
xchg
mov
jne
jmp
ret
mov
cmc
loopne
jge
xchg
mov
les
mov
sbb
sbb
mov
xor
ss
inc
or
fs
clc
xor
mov
int
and
cmpsb
js
add
and
stc
pop
dec
xor
jp
mov
push
movsb
cwtl
cmpsb
lahf
rorl
mov
and
inc
xor
das
sbb
stc
xchg
movsb
mov
jo
pop
dec
lret
sub
adc
xchg
pop
sub
push
pop
cld
scas
and
dec
and
pop
xchg
mov
daa
mov
or
or
cmp
cmpsb
lock
out
xor
ja
out
inc
jge
inc
cmp
sahf
shlb
jmp
pop
lea
xor
cwtl
xchg
xchg
cld
imul
hlt
call
clc
push
in
sbb
in
int
mov
das
add
jns
je
inc
xor
sbb
inc
xor
and
pop
out
movsb
lcall
sub
out
dec
out
into
mov
or
xor
cmc
imul
in
aaa
and
xchg
in
dec
adc
push
loopne
aad
push
cmp
std
and
dec
cmpsb
sbb
fbstp
in
cmc
and
push
iret
fwait
cmp
int3
and
fnstsw
xchg
inc
mov
into
xor
aad
movsb
ds
and
jmp
out
jmp
mov
test
dec
pushf
jp
fcmovne
xchg
inc
xor
mov
icebp
sbb
cmp
and
adc
mov
dec
sbb
nop
and
adc
lods
shlb
jnp
jecxz
je
mov
gs
pop
or
adc
mov
dec
xchg
je
in
stc
or
testb
push
leave
and
pop
xchg
inc
call
das
sbb
mov
mov
and
pop
jmp
aad
insb
sarl
movsb
xchg
dec
add
jne
hlt
xchg
sbb
loop
mull
fdivl
in
mov
inc
fldcw
xlat
add
ss
dec
shrl
popa
dec
inc
push
mov
js
int3
push
std
jp
fldenv
xlat
insl
pop
jecxz
inc
test
rcrl
mov
dec
idivl
sbb
out
dec
sbb
dec
inc
loopne
jno
mov
repnz
fcompl
inc
inc
xchg
sbb
cmp
stc
test
push
into
sbb
mov
push
or
mov
mov
mov
movsl
shrl
sbb
repz
sub
push
or
mov
outsl
cmp
mov
cld
mov
mov
inc
int
and
push
sbb
lock
jno
xchg
mov
push
add
cmp
or
sbb
loopne
and
xor
std
push
adc
cmp
cs
jne
jno
sub
stos
fstps
fldt
lret
push
add
loop
sar
hlt
xchg
lock
shrl
mov
dec
outsb
jmp
les
movsb
or
add
std
in
cli
shrb
jns
popf
loop
jecxz
mov
dec
cmc
clc
das
andb
test
dec
cmp
xchg
std
jns
lret
lods
insb
dec
mov
or
cmp
fs
sub
xor
rcrl
les
inc
mov
andb
enter
or
sbb
cmp
fmuls
lret
or
jg
adc
divb
jo
inc
insb
mov
adc
push
bnd
ljmp
rorb
push
inc
adc
xchg
jmp
and
push
jl
pop
push
push
pushf
xor
dec
dec
or
gs
cmpsl
inc
ret
xor
sbb
in
cmpl
xchg
or
add
mov
sub
pop
ret
xchg
push
lret
testl
int
ljmp
adc
insl
aad
test
cmp
mov
in
xor
sahf
jmp
dec
fisubl
in
xor
repnz
add
leave
sub
cs
push
pop
xor
pop
mov
cmp
xorb
add
mov
jo
pop
mov
pop
in
mov
xlat
pop
rol
and
nop
xchg
mov
cli
pushf
sub
test
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
adc
xchg
adc
push
ds
jg
xor
jnp
lret
arpl
xchg
es
fidivl
mov
push
or
sar
pop
aam
sub
mov
jne
cmpsb
dec
mov
mov
lea
pop
int
or
enter
int3
pop
mov
jb
mov
mov
xor
push
push
pop
sarl
test
jbe
lods
cmp
mov
cmp
push
aaa
jnp
sub
in
mov
or
pop
sub
xlat
js
push
adc
ret
cwtl
in
ret
sbb
loope
into
ds
push
sub
arpl
xor
vmovq
test
adc
jmp
jmp
sub
in
lea
inc
fildll
fnstenv
mov
xor
nop
int3
loop
cmp
clc
enter
lock
dec
in
cmp
jnp
jecxz
and
pop
imul
and
xchg
je
outsb
pop
add
iret
xor
sbb
sbb
mov
pop
out
push
xchg
pop
insl
push
push
popl
fidivrl
fnstsw
push
aaa
add
push
mov
outsl
fcompl
jl
imul
insb
inc
pop
xchg
gs
cmp
mov
shlb
and
aaa
lods
fbld
adc
xor
inc
aas
rorb
jmp
and
dec
sbb
fmul
or
pusha
xor
mov
xor
enter
inc
mov
push
scas
inc
mov
mov
fdivl
movsb
and
and
and
dec
scas
dec
add
xchg
pop
cmp
sbb
cmp
xchg
testl
dec
call
mov
into
insl
mov
scas
cmp
push
cmp
into
lds
xchg
jmp
scas
int3
push
cmc
lods
adc
fwait
lret
dec
pushf
int
out
jns
shll
pushf
insl
cs
iret
les
in
xchg
xchg
xor
adc
rorl
das
out
addr16
xor
xor
mov
push
add
pop
sbb
mov
stc
outsb
outsl
cli
clc
and
xor
jl
or
xchg
cmp
cmp
mov
xchg
mov
push
mov
cmc
and
ljmp
dec
hlt
mov
mov
and
imul
mov
adc
pop
aad
int3
mov
xlat
nop
icebp
movsb
ret
out
sbbb
rorb
test
les
cmpsb
xchg
ret
ffree
inc
sbb
mov
in
sbb
bound
dec
push
mov
xchg
cmc
insl
fs
dec
lahf
push
adc
mov
cli
cmp
pop
cltd
jmp
xor
pop
push
push
fmuls
push
mov
icebp
mov
pop
add
adc
pop
or
adc
dec
xor
push
dec
loop
and
mov
insl
inc
mov
inc
or
andb
add
jnp
sub
dec
pop
pop
dec
dec
arpl
or
adc
scas
mov
xor
xchg
cmp
enter
loope
test
add
add
imul
dec
lock
add
or
push
lods
inc
xchg
mov
jo
jg
xchg
mov
rcrb
hlt
bsr
out
cmp
cwtl
inc
ss
das
xchg
cmp
clc
cmp
call
xchg
mulb
push
ljmp
mov
iret
addl
and
xor
gs
push
xorl
out
rcr
xor
fsubs
in
jb
fisttpll
or
aam
push
sub
pop
int
arpl
shrl
mov
xor
mov
pop
jl
mov
inc
push
jmp
test
cmc
mov
lahf
js
dec
xor
lods
jmp
call
mov
jge
mov
addr16
out
mov
add
out
fcoms
nop
pop
in
xorb
repnz
jno
sbb
push
mov
sbb
and
sub
lds
outsl
mov
pop
xchg
mov
add
and
add
xor
dec
fimuls
imul
mov
enter
ds
popf
xor
add
inc
inc
out
inc
cmpsl
mov
or
lcall
popa
insl
add
js
adc
imul
mov
aas
ja
nop
or
mov
negb
movsl
orl
and
mov
sti
pop
and
packssdw
pop
loop
dec
iret
ffreep
lods
cmp
out
add
or
sti
imul
mov
mov
mov
stos
dec
loopne
pop
sbb
ss
out
mov
mov
outsb
lahf
or
push
or
shrl
xchg
dec
repz
pandn
cli
insl
or
repz
fnstenv
cmpsb
shlb
mov
dec
in
sub
hlt
mov
adc
push
fsubl
adc
stos
les
loopne
aam
add
mov
dec
int
insl
or
mov
jnp
bound
imul
cld
pushl
test
rclb
mov
push
cld
cmc
ret
mov
push
mov
mov
dec
in
push
mov
cli
sbb
fisttps
mov
mov
jb
mov
sar
push
cltd
js
out
test
mov
add
loop
mov
mov
sub
fistps
out
inc
and
pop
push
inc
push
leave
addl
add
push
dec
cmp
adc
fwait
lret
les
pop
ret
mov
xchg
cmp
jb
daa
or
pop
mov
cmp
inc
jge
add
xchg
lea
push
hlt
dec
cmp
fstp
shr
sbb
mov
cmp
fxch
out
movsb
lods
inc
cmc
addl
stc
insl
rorb
aas
inc
int3
ret
inc
jmp
ja
iret
or
add
inc
jbe
cmp
cmp
bound
push
cmp
inc
scas
cmp
and
fwait
lret
aad
jle
out
loopne
mov
lcall
sbb
adc
hlt
inc
or
adc
xlat
mov
and
icebp
pusha
lret
inc
leave
icebp
imul
xchg
icebp
repz
pusha
sub
repnz
mov
sub
or
clc
mov
push
sbb
jp
fwait
jge
sbb
jg
adc
push
pop
xchg
or
xor
and
add
loope
jle
mov
mov
pop
jg
fcoms
rdmsr
mulb
pop
fisttpll
ds
xor
insb
shrb
ret
sahf
pop
int3
and
clc
in
cmp
xchg
push
mov
fcmove
shrd
shr
jmp
and
add
loop
es
pop
js
xlat
lret
js
ja
test
pop
adc
xchg
push
js
fstpt
pmulhw
add
subl
out
mov
dec
clc
inc
add
jbe
pop
inc
test
dec
push
mov
hlt
enter
xchg
inc
sbb
pop
test
push
or
mov
aas
xor
xchg
lock
xchg
decb
iret
rcrl
orl
push
fildl
cmp
ljmp
outsl
inc
xor
mov
mulb
xchg
pop
lret
fisubrl
pop
shr
mov
dec
pop
push
pop
and
mov
cmpb
je
jmp
pop
sub
in
jb
es
dec
or
fisubl
and
push
dec
jno
test
mov
scas
push
jae
std
add
and
cmp
xor
xor
iret
adc
hlt
cli
xchg
sub
dec
punpckhwd
ficompl
jns
mov
pop
jbe
ljmp
out
xchg
mov
mov
mov
jnp
jbe
ss
adc
or
pop
xlat
and
scas
movsl
fcmovb
pop
out
push
and
cmpsl
xor
decl
fildll
or
es
mov
inc
cmp
jge
lahf
aad
mov
mov
jbe
test
ret
pop
fsubl
sbbl
sub
cmpsl
fidivl
or
fincstp
into
inc
mull
mov
xor
add
push
out
xor
js
push
cmp
mov
adc
add
js
int3
and
cld
xor
mov
jge
movsb
xlat
adc
push
jg
push
enter
test
imul
pop
iret
out
mov
mov
xchg
sub
push
add
subl
bnd
push
sub
push
scas
jl
mulb
fisttpl
pusha
lret
aam
stos
lods
xor
movsl
pop
push
rcl
out
cltd
pop
and
sub
mov
jo
pop
scas
inc
imul
les
clc
push
je
pop
push
ret
add
xor
mov
dec
sbb
or
jb
cmp
clc
inc
fdivrl
aad
cmp
xor
pop
and
mov
xor
adc
mov
and
test
lock
test
lret
add
repz
loop
test
cmc
push
adc
int
fs
cmc
cmpsl
imul
jbe
mov
dec
jb
mov
xchg
out
jle
mov
jb,pn
sbb
dec
add
xchg
dec
mov
int
adc
xchg
jne
ds
mov
jne
and
testb
pop
repnz
cmpl
das
add
xchg
jne
test
je
andl
adc
mov
lods
dec
outsb
xor
sbb
mov
and
lds
lret
call
mov
cmp
and
aas
arpl
fstps
cmpsl
mov
mov
iret
cmc
in
leave
sbb
and
mov
dec
adc
cld
or
into
addr16
nop
inc
push
outsl
jns
xchg
pop
pop
fsubrl
pop
mov
insb
lods
in
lods
or
int
sbb
jns
in
mov
and
jb
stos
cmp
push
fnsave
or
xchg
cld
rclb
dec
fs
test
jle
je
pushf
sti
lds
arpl
push
push
sbb
add
stos
dec
rclb
xchg
push
ds
mov
cmp
jge
sbb
imul
repz
mov
dec
sahf
into
mov
mov
jnp
and
or
mov
lret
jg
and
dec
inc
aad
rcl
pop
inc
or
lods
lahf
jne
dec
inc
scas
es
adcl
pop
sub
sbb
lahf
dec
loop
fs
loopne
int
clc
or
push
cwtl
shl
mov
pushf
roll
mov
push
aad
or
dec
mov
scas
es
mov
mov
jl
imul
out
adc
jns
lret
movsl
cltd
pop
cld
in
outsl
fldt
daa
push
pop
insl
xor
mov
ret
adc
jae
lcall
and
and
mov
xchg
leave
inc
out
mov
data16
lea
movsl
sbb
cli
bound
mov
dec
out
adcl
push
sahf
inc
jo
mov
mov
push
stos
je
lret
jl
or
aaa
lds
gs
jo
pushw
xchg
sbb
roll
xchg
xchg
bound
shll
rcl
jmp
subb
cs
lds
repz
es
loope
xor
sub
inc
sub
mov
mov
or
xchg
xor
stos
cmp
pop
lcall
add
std
inc
and
aas
jg
call
lcall
xor
or
inc
push
jle
sbb
inc
test
shrl
js
or
mov
jp
mov
movsb
sub
loop
dec
mov
add
jp
pop
cmpsl
jno
jb
fcmovu
xor
adc
scas
jge
les
mov
pop
push
sub
iret
push
jne
dec
aaa
add
sub
or
loope
jmp
adcb
es
in
jmp
xchg
out
negb
cmc
push
negb
mov
jo
mov
ret
cmp
jo
xchg
inc
jnp
adc
cmp
adc
outsl
sub
cmp
adc
scas
or
loopne
mov
je
sar
scas
ret
add
aas
in
enter
outsl
outsb
in
pop
or
loop
xor
pop
cmpb
push
fsubr
pop
in
leave
xor
hlt
jno
jmp
add
jge
xor
adc
add
popf
or
arpl
adc
cmp
aas
mov
mov
std
loope
out
aad
shrb
mov
or
and
cmpsl
push
fwait
and
pusha
outsl
shl
jmp
pop
lods
push
mov
mov
cmp
xlat
mov
in
mov
out
scas
lods
jns
push
dec
inc
pop
popa
dec
push
loop
lret
lock
out
dec
int3
xor
pushf
fisttps
popf
iret
add
daa
jl
inc
xchg
sbb
mov
or
test
mov
xor
or
cmp
lcall
jns
out
push
add
aad
or
shrl
add
mov
jl
mov
ss
push
das
lods
and
test
stos
subl
dec
dec
jecxz
int3
rorb
pushl
lret
and
arpl
lds
ror
stos
cli
nop
sub
sahf
lret
clc
or
test
mov
and
push
sbb
inc
and
mov
sub
fwait
mulb
or
mov
out
cmpsl
pop
push
popa
out
in
iret
les
rorl
inc
shrl
xor
mov
sub
cmp
aaa
add
sbb
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
add
bound
adc
xchg
popf
pop
mov
and
xchg
adc
mov
add
das
fistpll
cmp
xchg
icebp
adc
fisttpl
cld
lea
jmp
stc
in
sbb
fsubp
ljmp
test
dec
xlat
cmp
push
sub
push
push
and
lcall
les
mov
sub
sbb
cmp
mov
xchg
push
call
cmpsl
fcmovbe
adc
call
pop
push
testl
mov
sub
leave
in
adc
fdivr
loop
ja
add
aad
das
ret
je
dec
add
pop
repnz
out
stos
das
mov
mov
add
lret
les
xor
cmp
xor
dec
adc
repnz
xchg
cmpsb
es
mov
and
gs
xchg
pop
cmpsb
pop
dec
mov
xor
decb
nop
vfnmsub132pd
jae
sbb
rol
repnz
clc
or
ret
int
jge
in
adc
jp
or
mov
dec
jp
mov
sbb
fmul
push
ficompl
cmpsb
adcb
cmp
push
cmpsl
mov
or
jp
test
dec
cmp
bound
sbb
jp
mul
add
jae
mov
xor
dec
sub
and
or
stos
pop
lock
cmp
xchg
xchg
xor
or
enter
cmp
push
xor
pop
outsb
cmp
sub
xchg
data16
cmp
les
inc
sub
out
sti
xor
sbb
inc
cmp
xchg
mov
clc
adc
adc
movsb
push
dec
rolb
push
sbbb
cmc
adc
out
mov
and
mov
xchg
lock
pop
sarb
rclb
sub
jmp
mov
loope
pop
pop
sbb
mov
jae
add
ss
cmpsb
rorl
jbe
fcompl
jns
or
addr16
icebp
imul
jp
xchg
mov
add
and
xchg
inc
cli
clc
je
jae
sbb
rorb
pop
and
add
sbb
jge
test
je
fs
rcr
fcomp
jno
mov
xor
je
mov
ret
dec
mov
in
pop
loopne
push
cmpsb
pushf
jl
movsl
imul
mov
imul
lea
test
mov
dec
mov
adc
testl
xchg
test
xor
lret
push
xchg
adc
cmp
mov
jecxz
adc
mov
adc
cmp
dec
sub
push
lcall
addr16
push
mov
cltd
fcompl
push
inc
js
aas
iret
xchg
xchg
ret
sbb
aad
mov
int3
lock
pushf
loop
dec
mov
arpl
adc
bnd
outsb
lods
js
mov
lods
mov
or
pop
push
stos
xchg
mov
nop
sbb
lahf
into
mov
xor
dec
mov
gs
into
add
movsl
aas
sub
mov
cwtl
stos
pop
in
mov
test
sub
pop
ja
lret
cmp
mov
push
dec
outsl
jbe
cmp
fwait
cmp
xor
push
adc
or
inc
pop
mov
jae
mov
push
lret
mov
xchg
adc
into
and
push
fstpt
or
das
aas
xchg
int3
cmpsb
adc
xor
cmp
popa
in
inc
push
cmp
shl
ja
cltd
add
inc
dec
jge
testl
dec
and
push
sub
pusha
or
aad
aaa
and
shlb
enter
out
ret
push
into
out
or
cmp
addr16
push
repnz
call
popa
mov
in
mov
shll
adc
inc
repnz
movsl
sub
loop
out
loopne
push
xor
mov
in
jecxz
and
test
and
mov
push
in
or
cmp
sub
test
sub
inc
imul
aam
sub
pop
in
push
mov
std
inc
xchg
lock
adc
xchg
test
xchg
pop
mov
sbb
adc
rolb
mov
aas
popf
js
bound
mov
fwait
add
mov
cmp
adc
jg
jae
popf
fisubrl
out
popl
mov
mov
or
in
stc
push
add
int3
add
mov
cmpsb
xchg
push
adc
or
lahf
in
pop
call
mov
into
or
add
or
icebp
or
xchg
sbb
fidivl
pop
out
and
mov
inc
sbb
popl
scas
or
xchg
call
mov
stc
inc
lahf
icebp
dec
xchg
sbb
mov
stos
mov
pop
hlt
and
xchg
mov
js
mov
jmp
into
rcrb
sti
fstps
scas
ljmp
ss
mov
js
and
hlt
cmp
rolb
sbb
or
pusha
mov
adc
mull
inc
jmp
cmp
cmpsl
movsb
xchg
add
jp
shll
repnz
lock
test
xlat
jbe
nop
jl
mov
and
testb
outsb
xchg
movsl
dec
pop
cld
push
imull
clc
ja
ror
dec
xchg
fidivrl
push
pop
xor
push
push
pop
cwtl
in
cs
mov
dec
les
nop
push
jmp
pop
mov
push
push
lods
gs
ljmp
lods
pop
lret
jmp
jl
cmp
add
cmpsl
out
jle
hlt
fstps
jne
outsb
jg
test
mov
xadd
loopne
or
xchg
jle
inc
push
loopne
test
lahf
push
dec
add
lds
loop
cmp
xchg
inc
loop
fsubrp
insb
in
add
ds
xor
mov
loopne
ds
mov
mov
xchg
dec
inc
in
dec
inc
mov
faddl
pop
lock
mov
xchg
add
push
push
lock
into
pop
out
int
les
jns
sbb
fstps
scas
arpl
lret
js
push
and
rol
mov
pop
sub
or
add
arpl
jecxz
out
lahf
mov
in
imulb
cmp
push
cmp
lods
or
mov
add
xchg
les
stos
dec
mov
scas
ds
or
fimull
adc
xchg
repnz
test
xlat
mov
out
push
and
jns
mov
jg
sbb
adc
popa
pop
arpl
add
adc
arpl
pop
pop
fistpll
in
rorb
in
cli
cmp
testl
daa
add
mov
test
fidivl
sti
mov
aam
pop
jp
pop
dec
addr16
pop
pop
mov
dec
push
sti
xor
mov
push
mov
push
jnp
jbe
sub
fs
into
add
imull
loopne
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
ss
xchg
imul
gs
xchg
or
xchg
add
sahf
inc
pop
fdivrl
push
adc
mov
xchg
nop
out
and
popf
popf
sub
dec
mov
add
fwait
dec
lahf
jmp
or
loopne
popa
mov
movsl
aam
cwtl
cmp
cmpb
lds
jg
mul
pop
mov
icebp
stc
mov
or
rol
xchg
mov
sarl
out
out
outsb
dec
pop
out
sbb
cmp
lds
es
xor
jns
xor
jmp
stos
insl
in
into
loope
xchg
push
in
insl
lea
inc
dec
push
mov
jb
cmp
add
mov
aas
cmp
test
sbb
scas
mov
lret
lock
jge
and
clc
and
push
nop
in
inc
jnp
xchg
mov
scas
fcoml
mov
xchg
fdivrs
jnp
outsl
push
dec
outsl
out
mov
adc
mov
pop
sub
xchg
lahf
fsub
cmp
inc
ljmp
or
jmp
icebp
mov
mov
cmp
mov
mov
sbb
jle
lcall
sub
int
jl
add
push
push
fcompl
xchg
int
dec
ret
jae
mov
fisubs
data16
stos
jecxz
shlb
mov
inc
add
cmpb
cld
jg
push
add
pop
rorl
shlb
sarb
inc
test
pop
mov
jb
pop
push
push
sarb
out
stos
scas
lcall
pop
leave
fdivrp
popa
movsl
iret
repnz
out
dec
test
dec
cli
fs
loop
std
shrb
scas
push
xchg
sti
mov
jns
jo
mov
or
movsb
add
jne
cmc
mov
outsb
icebp
mov
xor
icebp
sbbb
repz
inc
pop
mov
mov
or
mov
in
jno
fsub
pop
push
sbb
in
inc
xchg
scas
call
adc
jne
xchg
push
je
cwtl
ds
and
sub
fwait
xor
imul
bound
loopne
aad
daa
scas
popa
cmp
repz
aaa
fildl
jmp
test
repz
div
outsl
inc
out
mov
jns
repnz
ljmp
popa
fdivp
subps
sbb
icebp
lcall
enter
aas
lock
cmp
adc
or
push
mov
test
inc
insl
call
imul
stos
es
insl
fldenv
fdivs
mov
rorb
inc
clc
mov
pop
cmp
testl
btc
movsb
in
popf
addr16
movsb
jns
mov
push
cmp
jae
add
push
mov
adc
or
out
nop
decl
mul
bswap
lcall
mov
pop
divb
into
mov
cld
lea
and
fwait
dec
daa
fs
pop
and
cwtl
mov
and
jne
push
jl
test
dec
mov
pop
and
inc
push
repz
fisubrl
rorb
mov
test
inc
xchg
orl
pop
fstpl
inc
imulb
mov
add
jg
cs
repnz
imul
enter
sbb
jge
mov
into
and
add
not
push
dec
test
loopne
cmpsb
sbb
xchg
stos
mov
mov
mov
mov
xlat
outsl
movl
movsl
cmpsb
pop
divb
fcomps
lcall
daa
mov
jl
js
dec
cmp
pop
push
bound
sbb
mov
jecxz
test
jecxz
xor
outsl
out
fstpl
jo
xlat
jge
incb
mov
lcall
hlt
shl
das
fistpl
bound
mov
cmp
testl
data16
jg
addl
or
cmp
add
inc
movsl
out
call
aaa
mov
add
xor
lods
fs
push
repnz
push
in
subb
mov
test
jae
push
add
push
outsl
cmp
cli
pop
int3
jp
sahf
xchg
bound
cmc
pushf
out
cmpsl
fstpt
dec
fisubrs
jecxz
cld
fiaddl
push
xchg
jo
cvtps2pd
xchg
xchg
out
xor
int3
imul
in
pop
inc
test
fwait
jbe
pusha
dec
mov
pop
pop
gs
movsl
or
push
or
pop
jae
cli
add
mov
mov
jns
shlb
lods
dec
jmp
mov
outsb
fcomps
sub
jl
sub
outsb
ds
movsl
mov
adc
lods
jns
push
sbb
cmp
sbb
mov
nop
xchg
sub
adc
mov
sbb
mov
pop
mov
pop
mov
sub
ss
push
mov
cmpsb
sbb
inc
in
mov
repnz
fcom
dec
or
loop
push
stc
and
ljmp
test
push
cmp
stos
jne
mov
outsb
xor
xor
test
cmpsb
xchg
daa
in
dec
push
sbb
daa
mov
add
xorb
scas
xor
dec
in
xor
daa
shll
stos
mov
jp
lcall
or
loopne
cmp
mov
sbbl
and
lcall
jae
or
and
xor
mov
pop
nop
pop
dec
out
outsb
push
mov
push
mov
dec
inc
add
xlat
dec
mov
ret
pushl
jbe
popa
cmpsb
pop
pop
mov
mov
cmp
pop
nop
test
adc
jp
dec
mov
bound
cmp
pop
fistpll
mov
pop
jbe
add
mov
movq
mov
lock
popf
and
xorps
pop
lcall
addr16
sub
adc
xor
xchg
adc
sub
mov
out
xchg
mov
ret
sbb
xchg
push
xor
sub
dec
lods
xor
or
push
mov
sbb
mov
mov
lea
sbb
je
xor
insl
xchg
dec
lods
inc
mov
outsb
xor
lds
jle
pop
inc
lods
mov
outsl
adc
cli
out
cltd
into
mov
adc
adc
push
jne
jns
shl
shrb
and
nop
xchg
stos
xchg
adc
aad
test
mov
stos
movsl
leave
jmp
jge
out
xor
mov
xorb
or
mov
adc
gs
inc
xchg
push
stc
sbbb
or
mov
mov
sub
lcall
fidivrl
scas
ds
xchg
push
cmp
jg
sbb
stos
into
fisubl
cmp
ja
adc
inc
adc
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
leave
mov
cld
push
pusha
call
loopne
pop
xchg
out
fdivp
xchg
lcall
cwtl
ror
add
negl
mov
adc
jbe
mov
aad
xchg
xor
mov
sbb
and
push
push
sbb
cmp
jp
test
pop
jo
arpl
sub
out
movsl
test
ds
inc
inc
mov
negb
icebp
xor
cmp
push
test
push
or
cmp
add
into
gs
test
xor
shll
mov
out
sub
je
icebp
cltd
int3
fdivr
rcll
aas
rcrl
call
nop
and
mov
fidivl
stos
and
add
cmp
inc
push
movsl
cmp
and
adc
jg
xchg
shll
jno
or
mov
pop
cmp
mov
push
adcl
pusha
pop
sub
in
sarl
lret
daa
and
nop
add
and
cmp
xlat
mov
jb
push
xor
sbb
pop
adc
bound
clc
sbb
xlat
jno
fists
inc
and
mov
cld
mov
cli
stos
pop
jmp
pushf
or
push
shlb
dec
ja
push
not
fstps
mov
and
and
mov
shrb
scas
lock
je
popa
jmp
mov
push
gs
fwait
pop
mov
imul
clc
aad
inc
insb
xchg
fimull
push
mov
inc
dec
test
inc
push
cltd
fsub
jle
out
inc
and
cwtl
mov
sbb
dec
mov
hlt
inc
insb
lret
adc
inc
mov
and
or
fstpl
cmp
call
mov
xchg
sbb
adc
shl
test
or
mov
adc
leave
mov
jmp
add
add
adc
mov
call
push
mov
mov
mov
lea
or
mov
xor
es
test
sbb
fildll
arpl
push
sbb
fs
xor
pushf
sar
daa
pop
ds
enter
inc
mov
pop
xchg
inc
lret
adcb
rcl
bound
sbb
push
xchg
dec
test
pop
lret
lds
repnz
pop
mov
mov
lahf
inc
mov
nop
add
jle
pop
push
xorb
xchg
fs
inc
cmp
fldt
mov
into
pop
jecxz
jge
push
jns
mov
adc
andl
ss
sbb
xchg
fldcw
sub
test
and
rcr
mov
xor
xor
sbbb
jb
rclb
inc
popf
testb
cmp
ret
adcb
iret
stos
dec
repz
pushl
aad
sbb
pop
test
in
or
inc
xchg
push
cmp
into
push
xchg
nop
fisubrl
pop
cld
pushf
dec
fidivrs
fidivrs
xchg
fdivp
ficoml
mov
mov
xchg
sti
xor
mov
cmp
sahf
jne
xorl
and
stc
push
mov
shl
frstor
mov
mov
lret
add
dec
xchg
ljmp
cltd
out
inc
and
cmp
fcmove
push
fistps
jl
sarb
sub
sbb
movsl
push
fimuls
fidivl
pop
mov
flds
push
cmp
push
ret
out
cs
mov
and
pop
stos
pop
push
add
or
lods
sti
inc
inc
xchg
sub
pop
addb
adc
in
jns
mov
push
jbe
lods
imul
sub
dec
dec
xchg
test
mov
xchg
inc
mov
aad
out
jmp
call
icebp
imul
lock
int3
mov
cld
lds
adc
mov
scas
popf
popf
es
mov
ljmp
add
aam
sbb
adc
mov
into
jmp
sub
push
jno
jbe
mov
pop
or
cmp
incl
repnz
sub
pop
push
out
and
push
pusha
js
les
ret
fisubs
push
enter
mov
nop
mov
mov
and
lahf
mov
inc
mull
rcrb
and
sub
push
outsl
ss
pop
das
cmp
mov
shlb
ss
fwait
and
push
out
outsl
mov
outsl
nop
sti
sub
imul
insb
add
inc
xchg
test
lret
fs
sbb
or
mov
push
pop
mov
test
adc
loope
cmp
mov
fadds
mov
aad
cmpsl
into
sbb
and
sbbb
test
cmp
popa
adc
aas
mov
lock
not
insb
jnp
xor
push
and
jb
rsqrtps
mov
jmp
lea
sub
pop
outsb
inc
jne
pop
int
ret
cmp
test
inc
mov
sti
fildll
shr
jne
filds
mov
sub
rcrl
mov
scas
cmp
jmp
insl
movsl
mov
movsb
mov
xor
fstpl
sub
test
test
or
out
push
loop
stos
daa
repnz
cmc
lea
test
hlt
cmc
aad
insb
inc
jge
jmp
scas
push
pop
insl
jae
xor
test
mov
xchg
loop
test
push
or
xchg
das
jmp
cmp
xor
test
jl
daa
test
dec
js
jp
sbb
or
daa
incl
cs
hlt
cld
rcrb
stc
jne,pt
rorb
sub
cli
push
dec
nop
scas
jle
jo
push
fs
mov
xor
iret
mov
ds
je
cld
and
je
shrb
mov
loop
inc
adcb
outsl
outsb
mov
in
fistpl
xor
movsb
flds
out
call
stos
out
test
and
adc
pop
jge
leave
dec
or
ljmp
xorl
scas
sub
sti
sti
sub
stos
xchg
cmp
out
stc
in
into
inc
call
or
dec
ss
inc
rclb
inc
pop
in
repnz
popf
and
xor
insl
xor
lret
lahf
jge
sub
adc
mov
andb
lret
dec
movsb
mov
int
mov
and
pop
enter
push
xchg
int
push
dec
inc
stos
mov
dec
jecxz
aad
ficoml
aad
test
scas
and
xor
fld
rol
pop
int
mov
stos
adc
cmc
cmp
xchg
sahf
pushf
and
shll
sub
or
ljmp
loopne
push
call
inc
add
out
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
xchg
xlat
sub
jg
adc
xchg
or
inc
out
push
sbb
lods
mov
or
push
sub
andl
xlat
jle
mov
adc
mov
add
pusha
aad
or
int
lods
jbe
loopne
fsubrs
mov
jecxz
cmc
js
popf
scas
mov
cld
push
dec
mov
ds
pop
loope
addr16
aaa
dec
sarl
mov
scas
jns
outsl
cli
jg
sbbb
jnp
push
dec
fwait
add
in
imulb
pop
xchg
stc
mov
sub
mov
ljmp
fmuls
sbb
or
out
leave
jg
test
fcompl
test
pop
mov
pop
test
imul
add
test
adc
int3
xor
lds
pop
mov
add
arpl
and
sub
in
call
dec
lods
fs
push
inc
fbld
or
sahf
scas
push
xor
push
sbb
or
or
es
mov
in
insl
xlat
push
cmc
lret
bnd
pop
sub
cmp
inc
cld
dec
fisubrl
popf
inc
div
pop
ret
jb
inc
scas
mov
mov
fists
movsb
sbb
sbb
inc
inc
pop
je
imul
jmp
push
sbb
lret
mov
xor
clc
push
lret
cli
xchg
lods
divl
arpl
stos
popa
mov
adc
pop
xchg
cmpsl
inc
rolb
pop
sbb
mov
std
hlt
outsb
pop
push
push
push
adc
imul
mov
fisubl
imul
inc
dec
addr16
jno
ds
mov
ds
xor
mov
or
out
testl
rorl
xor
loopne
sbb
mov
sbb
mov
xor
mov
mov
sub
push
xor
rcll
sub
fcomps
cltd
call
jecxz
sub
fwait
bswap
fisubl
sub
jb
test
test
mov
shlb
pop
mov
sub
hlt
mov
jb
mov
mov
fsub
xchg
ret
lahf
sbb
dec
daa
pusha
cmpsb
xchg
js
ljmp
mov
cmpb
inc
jbe
add
mov
call
xchg
fnstcw
shlb
stos
cmpsb
test
mov
add
jns
and
and
fbstp
mov
sti
das
mov
imul
inc
lds
mov
mov
jmp
jl
xchg
out
stos
jae
pop
mov
fldt
hlt
pop
xchg
ror
xchg
aaa
pushf
pop
nop
push
std
das
rol
jl
ds
mov
dec
popf
sub
addr16
cmpsl
fwait
movsl
bound
cmp
js
cmp
xor
out
icebp
cmp
and
mov
push
xchg
adc
inc
cmp
ss
repz
popf
and
or
dec
mov
xchg
xor
cld
jp
fcomps
arpl
insl
xor
and
movsb
ret
dec
lea
mov
inc
vmread
cmp
ljmp
push
fisttps
movlps
add
push
inc
add
xchg
fcomps
out
iret
add
iret
or
mov
pop
je
ja
jle
sub
je
lcall
dec
dec
loopne
outsl
push
pop
aaa
addr16
in
mov
and
rolb
ret
testb
std
sbb
inc
mov
out
mov
push
lds
int3
jl
ss
std
inc
rorl
jae
inc
ljmp
lods
mull
mov
icebp
in
jo,pt
les
test
pushf
push
xor
xlat
mov
jae
nop
pushf
clc
test
push
adc
mov
jb
data16
mov
pusha
xor
out
xchg
cld
cli
mov
add
jg
push
mov
adc
movsb
add
sbbb
lea
loop
push
testb
jecxz
lods
cs
mov
lret
jb
scas
xchg
push
jne
cmp
fcompl
or
lea
sbb
aaa
lock
je
xchg
outsl
mov
hlt
jecxz
data16
jle
inc
out
xchg
jno
lret
adc
dec
pop
add
dec
pop
cmp
es
notl
lock
xchg
test
xor
xor
inc
or
repnz
push
mov
xor
pop
les
ljmp
mov
inc
mov
ds
xorb
and
pop
adc
jne
in
mov
add
divl
sbb
movsl
add
xor
aaa
adc
jne
iret
bnd
xor
mov
outsb
repnz
xlat
pop
pop
xchg
dec
fistl
std
and
ljmp
call
xchg
enter
push
fdivrs
insl
push
dec
sbb
sbb
mov
cmpb
jns
inc
fstpl
mov
sub
pop
cld
clc
push
clc
add
icebp
or
inc
push
mov
push
imul
into
sbb
mov
dec
cmpsb
push
lock
mov
stos
arpl
in
mov
sbb
add
add
mov
in
ret
adc
cs
pop
dec
es
orl
mov
aad
push
mov
cmpsl
mov
sub
push
cmpsl
pushf
mov
jmp
sub
adc
hlt
mov
cmp
aad
adc
pop
dec
and
dec
mov
decb
push
jno
cmp
cmp
addl
push
mov
push
cli
xor
push
pop
sahf
pop
fldenv
lret
adc
mov
add
hlt
xlat
daa
xchg
scas
out
pop
sbb
and
outsl
fwait
jmp
sbb
enter
add
iret
cld
decb
pop
dec
stos
or
icebp
xchg
imul
dec
outsb
mov
mov
add
pop
rolb
rcr
ss
push
iret
pop
lahf
inc
sub
xchg
adc
push
sahf
mov
sbb
popa
and
jae
out
and
push
in
dec
mov
inc
into
mov
stos
cmp
sub
sub
cmp
pop
lahf
push
iret
push
ss
imul
cli
lods
adc
sub
jbe
push
es
mov
xor
jmp
inc
cmp
sbb
sbb
rclb
clc
mov
sbb
push
imull
xchg
sbb
iret
adc
add
mov
or
pop
push
sbb
das
mov
jmp
xchg
dec
and
ss
decb
add
imul
enter
push
xor
js
mov
into
insb
shlb
and
in
mov
ficoml
xor
mov
xchg
dec
ficompl
sbb
jp
jne
mov
sbb
in
loop
sub
sahf
call
mov
or
shlb
cmpsl
and
into
xchg
data16
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
cmp
xchg
jl
lea
lods
aas
or
inc
cmp
sub
mov
add
mov
push
push
jno
pushf
dec
cmp
psllw
imull
aam
out
popa
push
push
sub
test
hlt
jle
sti
push
das
push
or
mov
pop
movsl
adc
push
lret
lret
push
cld
mov
ret
ljmp
xchg
mov
push
std
sbb
sahf
imul
mov
fsubrp
xor
lods
and
shl
or
repz
pop
lods
jge
in
mov
inc
nop
jmp
dec
push
outsb
push
sub
fildl
jae
add
xchg
lea
mov
sbb
push
pop
push
jecxz
push
lds
addl
fsubr
mov
bound
xor
cwtl
mov
fs
xchg
cmp
sub
pop
pushf
test
mov
movsl
mov
xor
outsb
cltd
xchg
adc
call
cltd
mov
or
pop
pop
jp
testb
sbb
xchg
faddp
ja
icebp
push
or
pushf
shll
mov
repnz
jb
shl
sub
jne
inc
jae
xchg
and
int
xor
adc
jno
cmp
sub
mov
push
push
and
arpl
push
insb
cmp
popf
das
ret
xchg
loope
sbb
sub
cs
movsb
inc
dec
fmull
ljmp
pop
enter
cmpsl
xchg
xor
mov
shrl
loopne
xchg
push
mov
stos
pop
rcr
pop
add
dec
cmp
cmp
mov
repz
or
push
or
ret
push
leave
shll
sbb
mov
mov
cmc
loop
fs
sti
call
cmpb
inc
sti
add
dec
and
xor
cmpsl
notb
xor
mov
mov
pop
subb
nop
or
je
sub
movsl
call
xchg
in
jge
pop
ljmp
adc
outsl
xchg
mov
push
movsl
orl
mov
jb
sbb
mov
ss
ss
mov
fwait
lock
addr16
in
xor
call
sbb
pop
pop
jmp
lock
imul
cmp
jae
add
pop
sti
loop
adcb
sbb
xchg
fsubrs
xchg
push
pop
adc
lds
sti
cmpsl
sbb
sti
sub
mov
shl
mov
movsb
xor
cli
cmc
les
lods
sbb
movsb
call
hlt
ffree
scas
jnp
xchg
and
inc
insb
cmp
mov
ffreep
into
lock
jae
ljmp
jb
xor
xor
addr16
push
xchg
dec
frstor
pusha
jmp
push
daa
rcl
push
xchg
cmp
sbb
orb
mov
sbb
xchg
or
mov
xchg
mov
popf
popf
out
addl
scas
jb
jno
in
mov
outsl
ret
es
mov
or
push
call
mov
daa
cltd
lret
jecxz
adc
pushf
or
mov
test
sub
mov
dec
sub
mov
inc
and
jo
push
cmpsb
cld
pop
test
jnp
xchg
pushw
mov
cltd
adc
jp
jge
pop
andl
insl
pusha
leave
pop
es
repz
mov
add
xor
mov
push
mov
int3
mov
dec
leave
or
mov
push
push
repz
push
xchg
mov
ret
xchg
jmp
test
movsb
add
inc
and
in
push
sub
inc
dec
jmp
es
das
xor
cmpsl
mov
pop
jbe
mov
cmpsb
mov
and
push
cli
cmp
shrl
push
xchg
pop
nop
push
imul
mov
or
cltd
sbb
dec
in
sbb
in
in
clc
or
repnz
push
popf
outsb
ljmp
shlb
aaa
and
shlb
imul
dec
lock
iret
mov
cs
int
jbe
xor
int
in
add
aad
mov
and
jno
mov
pop
inc
sbb
inc
out
sbb
test
flds
dec
jne
sbb
cmp
outsb
popf
les
lods
test
mov
fucomi
rclb
addr16
call
pop
push
loop
sti
aam
call
insb
sbb
jo
pop
xor
fcomps
xor
cmp
test
sub
add
or
clc
out
cmpsl
arpl
movsb
cmpsl
popa
or
jne
aam
adc
xor
mulb
mov
mov
mov
xlat
lods
mov
pop
ja
insl
lea
or
lea
ss
lods
fdivrs
push
sar
jecxz
enter
emms
cmp
dec
vpsraw
outsb
ja
movsl
sarl
stos
scas
sub
xchg
pop
mov
jg
push
mov
xorb
push
adc
and
xor
test
inc
and
sbb
add
int3
repz
ss
cwtl
jnp
push
mov
enter
cmpsb
inc
mov
fadds
lock
push
jns
pop
lods
cmp
sub
dec
das
sub
inc
add
jo
inc
dec
xchg
xorb
jge
pop
ja
je
enter
sbb
stc
sbb
dec
mov
mov
loop
mov
mov
incl
out
mov
mov
sub
mov
fidivrl
movsb
mov
sub
xlat
in
sub
add
push
outsl
and
sub
test
push
xor
shlb
repnz
scas
insb
popf
icebp
and
xor
mov
pop
fs
scas
jp
dec
mov
push
pop
push
sub
add
mov
cmp
sub
repz
inc
sbb
jne
movsb
sub
dec
cld
in
fisubl
xor
mov
int3
imul
inc
addb
mov
dec
sbb
push
pop
iret
push
pop
mov
out
push
enter
cs
inc
jno
adc
push
lcall
mov
mov
pushf
fwait
sub
jno
mov
sbb
sarl
out
or
shl
inc
cmpsl
sbb
je
repz
mov
imul
push
loopne
push
insb
stc
mov
mov
test
cli
mov
out
xchg
bound
shr
loope
mov
cmp
pop
arpl
mov
mov
enter
decb
cmp
repz
popa
jnp
adc
cli
mov
outsb
in
ljmp
loope
cltd
cwtl
cmp
dec
adc
fldl
jecxz
jge
iret
aas
push
rolb
ret
in
mov
push
pop
mov
arpl
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
push
mov
repnz
cmpsb
xchg
ljmp
adc
xor
call
data16
mov
repz
adc
jbe
pop
push
sbb
in
rol
cs
imul
jmp
mov
mov
push
or
pop
sbb
roll
movsb
inc
sub
pop
jge
mov
hlt
mov
lret
mov
sbb
clc
in
aas
push
pop
pop
jle
add
imulb
fst
sub
adc
inc
push
cmp
xlat
jg
lret
inc
push
insb
pop
pop
dec
data16
push
adc
insb
jl
cmp
push
dec
das
mov
jbe
and
pop
jp
dec
cld
mov
dec
inc
pop
stc
popa
movsl
movsb
fwait
out
jp
push
sub
and
repnz
cli
loopne
pop
inc
or
pop
fmuls
push
lcall
repz
xchg
stos
inc
mov
and
xor
push
call
mov
sbb
pop
clc
mov
pop
mov
cwtl
mov
push
ljmp
movsb
movsb
das
jp
std
popf
xchg
aad
lcall
je
inc
xor
inc
cwtl
mov
loop
sahf
mov
scas
cmp
ljmp
mov
xchg
jp
lods
ja
cmp
adc
insw
ljmp
sarb
xchg
mov
pop
xchg
mov
movaps
inc
int3
mov
cli
mov
insb
loope
shr
das
pop
nop
pop
lock
cld
ret
andb
xchg
sbb
ss
sarb
sub
mov
adcl
ret
lea
out
sarl
int
cmp
mov
inc
out
cltd
xor
stc
dec
int
xchg
mov
icebp
pop
imul
subl
outsl
mov
cmpl
sub
repz
adc
loopne
push
aam
add
loop
movsb
xchg
push
cmpsb
fstps
inc
notl
fs
mov
or
in
insb
xchg
mov
xlat
mulps
cmp
pusha
hlt
inc
mov
mov
push
lret
outsb
je
cld
popa
mull
jge
push
pop
ss
outsl
push
adc
test
shrl
popa
mov
cmpsl
or
pop
mov
repnz
add
xor
cmp
adcb
mov
loope
mov
or
or
into
xchg
in
scas
test
in
lcall
pop
add
adc
xor
lea
loop
lret
rolb
cld
xchg
addr16
ficompl
sbb
imul
inc
pop
lea
lds
je
and
cs
and
inc
adc
setge
mov
fs
lahf
sbb
in
subb
test
mov
fdivl
mov
mov
js
sub
fsub
loop
xlat
stos
gs
mov
outsl
push
je
push
mov
stos
scas
jbe
mov
xor
sub
jmp
xor
testb
or
inc
lods
outsl
pop
cmp
sub
jne
arpl
nop
insl
sarb
aaa
cmp
push
jne
mov
cmp
lret
and
lds
mov
sbb
mov
dec
pop
dec
in
aas
ret
ss
add
inc
jo
clc
inc
push
xchg
out
and
dec
mov
mov
movsl
push
add
leave
cmpsb
idiv
cmp
and
scas
ss
enter
je
pop
cmc
lods
and
enter
and
cmp
cmp
and
rol
mov
or
cmpl
and
fcoms
ret
push
cli
stc
jle
out
jbe
pop
sbb
leave
mov
in
sub
jl
xchg
adc
fidivrs
or
sbb
pop
adc
pusha
ret
dec
test
pop
sub
outsb
push
clc
out
subb
scas
or
nop
testl
or
and
in
mov
dec
add
out
inc
stc
cli
dec
fisubl
cmpsl
lret
cmp
jmp
dec
push
mov
pop
popa
daa
push
enter
mov
xchg
fwait
jb
rorb
push
bound
test
repnz
cmp
loop
xchg
fsubr
leave
aad
cmpsl
insb
cmpsb
les
aaa
jmp
inc
pop
je
cwtl
xchg
pushf
lea
xchg
mov
int3
xchg
mov
iret
into
cmp
popa
pusha
ficoml
cmc
movsl
jmp
mov
push
andl
cltd
cmp
dec
inc
imul
or
in
push
out
mov
adc
les
pop
push
decl
mov
leave
stos
xor
add
add
aaa
icebp
ds
test
stc
movsl
fstps
fisubrs
out
cs
xor
lds
pop
jae
dec
test
adcl
fbstp
aas
xor
push
popa
xchg
mov
fadds
xchg
flds
add
sbb
outsl
dec
push
loopne
adc
mov
clc
les
ret
push
sahf
icebp
jb
dec
sbb
lds
mov
pop
inc
xor
shll
icebp
push
popa
testl
push
imul
sti
dec
mov
sub
lods
adc
shlb
fisttpll
inc
leave
cmc
outsb
and
dec
mov
inc
inc
les
in
stos
xlat
xlat
scas
xor
into
jae
incb
sub
mov
xchg
in
adc
cmp
fisttpl
pop
ds
sub
mov
shlb
jecxz
cmc
call
and
ret
int
or
sub
in
out
add
push
test
clc
das
pop
jbe
sub
or
jp
inc
jl
scas
jp
push
into
pushl
cmp
in
jnp
enter
jmp
lahf
loopne
out
jmp
popa
cmc
push
mov
mov
cwtl
jns
jp
push
lcall
xor
stc
xchg
push
xor
xor
or
decl
push
mov
daa
cmc
push
nop
cwtl
aad
test
xlat
and
push
pop
and
popa
dec
xchg
ret
stos
call
add
cmp
pop
fucom
fcmovnbe
mov
or
dec
cmp
xor
xor
dec
arpl
mov
mov
fistl
mov
insl
out
cltd
push
add
imul
dec
popf
cs
push
cmc
clc
pushf
jg
cmovs
and
push
and
mov
and
jo
clc
hlt
pop
repz
inc
jle
jle
cli
in
xchg
rolb
jmp
out
sahf
call
je
shl
mov
mov
sub
mov
divb
and
lret
addr16
shl
push
mov
mov
sub
out
rorl
and
and
and
aam
jbe
mov
ss
ds
scas
nop
gs
xor
les
test
push
ret
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
mov
pop
or
ja
in
push
pop
xchg
test
inc
int
jle
repz
in
popa
lods
push
adc
ja
std
or
lock
cld
int3
add
call
mov
xchg
cs
mov
addb
or
int
rcl
sbb
mov
cmp
mov
dec
or
js
mov
push
jae
jmp
push
test
xor
sarl
in
mov
cld
or
mov
inc
pop
lods
mov
rcrl
lds
hlt
push
jnp
cmp
fcoml
mov
pop
xchg
test
jge
jle
iret
mov
jle
mov
mov
sub
out
push
ret
out
inc
mov
sub
pop
pusha
adc
pop
or
pop
out
cmp
lcall
iret
or
out
ret
and
xor
xor
out
push
jne
pop
cmp
loope
shl
int3
or
lcall
into
aaa
cmc
loopne
mov
cmp
stc
inc
test
pop
test
and
sbb
popa
jg
jge
out
push
in
divb
in
stc
pop
dec
out
xor
jmp
rcl
mov
jnp
arpl
aas
mov
movsb
outsb
pop
cmp
inc
push
ret
popa
mov
ja
pop
icebp
mov
imul
loope
fcmovbe
ffreep
sub
mov
xchg
leave
sub
jne
jbe
lock
dec
mov
jg
mov
dec
and
xor
mov
mov
das
pusha
shr
pop
das
xor
mov
pop
lods
pop
dec
mov
sbb
xlat
xchg
xchg
shll
cltd
int3
out
ret
cmp
icebp
cld
push
jne
ljmp
ds
fimull
add
adc
jns
add
xor
and
or
or
cmpsb
add
jecxz
and
xchg
xlat
stc
adc
imul
sub
mov
adc
sbb
cmpsl
rorb
cmp
ss
or
mov
mov
dec
push
xor
fwait
sub
inc
or
jmp
mov
push
pop
xor
aaa
cmp
and
test
add
xchg
mov
or
sbb
lcall
mov
cmpsl
sbb
ret
dec
push
repnz
add
arpl
test
movsb
test
mov
jl
mov
push
adc
xor
in
gs
pushl
xchg
jg
and
test
sub
and
mov
push
aad
add
inc
loopne
inc
hlt
push
imul
inc
shll
in
out
in
push
fildll
mov
std
sbbb
jnp
mov
je
push
scas
ja
xchg
dec
dec
add
jbe
mov
mov
rol
inc
sbb
sahf
inc
pop
mov
push
imul
mov
jmp
xor
sbb
push
cmp
xor
je
mov
pop
popf
inc
mov
dec
ret
push
inc
lcall
test
sub
sub
push
lods
je
add
xor
rep
or
cmp
xchg
movsl
lcall
nop
sbb
sub
insb
jecxz
test
leave
pushf
mov
cmp
jb
jae
fs
xor
enter
dec
pop
call
scas
sti
inc
idivb
jecxz
mov
and
pop
inc
jl
and
and
sahf
sub
sbb
cmpsb
mov
ds
popf
add
xchg
stc
pusha
sub
shrl
fdivrs
daa
popa
daa
imul
int3
sub
mov
cs
add
aam
or
cmp
sub
jecxz
int3
int
pop
aas
push
and
dec
shll
testb
sbb
push
dec
enter
mov
pop
jo
pop
pop
or
les
setp
sbb
stos
shll
push
jecxz
push
cmp
lea
ds
sbb
scas
inc
push
mov
add
mov
add
xor
hlt
dec
add
fdivrp
adc
enter
test
mov
je
hlt
jmp
test
fcmovnbe
stc
push
ror
adc
fsubrp
jae
nop
and
pop
cs
clc
ds
jmp
dec
mov
movsl
pop
inc
and
adc
mov
mov
mov
lret
sahf
fwait
or
xchg
ljmp
lods
or
pop
or
loope
loope
sub
insb
xchg
inc
and
int
sub
xor
bound
cmpsb
sbb
sahf
xor
es
and
or
jp
push
jo
dec
add
sub
xchg
lods
out
rcrb
jnp
push
in
hlt
jo
std
mov
jo
sub
add
mov
mov
and
jmp
pushf
testb
inc
subl
fisttps
test
rorl
cmp
jbe
je
jl
imull
inc
in
enter
add
fcoml
repz
adc
mov
adc
pushf
jnp
sbb
sarb
push
cld
push
dec
popa
xchg
mov
repz
jns
clc
xchg
add
sbb
rcrb
lea
call
mov
jmp
adc
inc
js
pop
pop
nop
xchg
fdivs
mov
fs
shlb
movsb
out
arpl
out
lret
push
dec
fsubr
and
roll
push
lock
ret
pop
mov
push
notb
pop
stos
cmp
xor
xchg
int3
inc
sub
xlat
adc
lods
cmc
mov
or
inc
pop
les
repnz
mov
scas
imul
lcall
loope
enter
js
das
mov
add
stos
add
push
lret
es
cltd
xchg
nop
sti
xchg
mov
adc
rcll
fldln2
iret
mov
dec
sahf
lea
push
out
mov
aaa
jmp
mov
out
ljmp
push
sahf
jne
scas
enter
sub
sbb
sti
ja
sub
adc
pushf
and
adc
fs
andb
push
add
inc
jbe
in
cmp
int3
ret
xchg
xor
scas
loope
movsl
loop
cmp
std
imul
cmp
sti
movsb
ss
into
jnp
leave
mov
mov
inc
mov
jle
stos
add
mov
or
add
lock
addr16
inc
jb
xchg
enter
call
out
out
push
in
mov
imul
push
sbb
lea
and
popa
add
xchg
outsl
and
mov
lcall
mov
inc
andl
mov
adc
bnd
jmp
daa
incl
mov
leave
push
mov
ds
popf
imul
mov
fidivrs
adc
lret
ret
repnz
fisubrl
mov
mov
roll
push
jmp
push
jl
mov
or
call
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
movsl
in
lahf
cld
adc
cltd
testl
pop
fiadds
xchg
popf
push
mov
test
and
loop
addr16
movsb
cs
push
lcall
push
xchg
pop
pop
test
ret
jle
dec
test
add
out
add
cmp
ss
pop
pop
cmpsb
dec
and
dec
cmc
jp
hlt
ds
sbb
setbe
mov
mov
push
mov
push
shll
dec
imul
or
mov
fbstp
std
fucom
push
fimull
push
out
xchg
jns
push
cmpl
iret
mov
cmp
mov
and
cltd
pop
imul
stos
xor
jmp
subl
lds
jl
lahf
lret
or
push
lds
dec
lret
add
jp
mov
and
mov
pop
lret
mov
sub
out
dec
push
pusha
insl
adc
notb
and
ds
cmp
pusha
push
pushf
mov
pmulhw
mov
add
outsb
sub
push
sub
ljmp
pop
sti
adc
popa
add
dec
inc
repnz
push
sti
mov
in
call
das
push
mov
shlb
inc
mov
jecxz
bound
mov
adc
inc
add
dec
loope
mov
push
sub
jg
mov
pushf
repnz
cmp
adc
cmp
adc
xchg
nop
inc
int
or
jge
pusha
les
jle
mov
enter
adc
pop
lahf
stos
and
dec
bound
or
and
filds
add
out
xchg
mov
jge
repnz
aaa
jmp
loope
insb
je
cmpsb
jb
ret
lods
orl
outsl
xchg
enter
std
hlt
popa
bound
test
adc
pop
cmpsb
in
inc
andb
cmp
mov
jns
loope
jno
jl
pop
inc
aaa
mov
outsl
adc
sbb
sbb
jg
or
sub
or
sub
lds
xor
mov
xor
lock
les
add
dec
pushf
lea
fucom
lods
lret
sbb
adc
ret
push
jge
pop
jg
nop
jl
mov
xchg
mov
pop
jg
inc
fdiv
xor
sub
jecxz
iret
xchg
sbb
pop
mov
sbb
sbbb
push
xchg
inc
sbb
adc
jge
sbb
cltd
ljmp
lock
push
jp
imul
push
fistpl
adc
scas
sbb
insl
ucomiss
dec
add
mov
test
jnp
xlat
push
and
lcall
mov
adc
jns
ja
aad
shr
shll
dec
inc
or
ja
add
fldcw
loope
out
inc
xor
lods
add
rorl
pop
sti
cmp
push
shll
cs
lahf
xchg
bound
jne
xor
pop
cmpsb
hlt
push
xchg
divb
add
xchg
sbb
sbb
or
out
es
add
fisubrs
pop
xor
jle
test
loopne
pop
aad
mov
sbb
push
les
dec
out
push
mov
icebp
lods
jg
dec
adc
les
push
cwtl
cs
lds
mov
mov
imul
rorb
call
and
pop
imul
mov
or
insl
mov
or
push
imul
call
add
mov
push
jecxz
outsl
push
jo
dec
test
jle
add
add
cld
fiadds
lret
and
popa
push
or
fsubl
mov
jns
add
test
rorb
or
ficomps
fsubrl
jno
xchg
test
xor
nop
je
mov
adc
notl
hlt
loop
out
jmp
into
add
push
xchg
cmp
xor
rorl
cmp
mov
mov
es
add
fistpll
jns
jbe
xlat
test
sahf
adc
cmp
push
sbb
sub
sub
pop
clc
adc
sub
frstor
sub
xchg
add
leave
imul
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
