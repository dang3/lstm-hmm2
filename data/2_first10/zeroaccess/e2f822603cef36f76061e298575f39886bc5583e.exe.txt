push
mov
sub
xor
jmp
into
rcr
aad
mov
lds
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
push
lea
pop
aad
inc
data16
sbb
dec
xchg
cmpsl
mov
xor
mov
sub
insl
jns
jmp
in
jmp
loop
ret
cmp
lock
or
xor
push
xchg
xlat
popf
mov
fistl
mov
inc
xor
scas
inc
out
fmul
repz
out
aaa
inc
xor
mov
pop
icebp
insl
cmpsl
mov
shrb
test
les
cmp
xor
enter
leave
fimull
out
xor
or
jae
sbb
mov
push
lods
lahf
cmpsl
mov
pop
xor
add
mov
push
inc
cmp
sbb
mov
mov
mov
cmp
xchg
jb
cmp
in
rcr
mov
cwtl
cmp
fwait
test
dec
sti
pop
mov
dec
or
push
add
in
mov
mov
repnz
std
pop
inc
outsl
jb
loop
mov
inc
sub
rol
iret
sti
push
dec
pop
pop
arpl
pop
fsubrl
arpl
fidivrl
test
notl
in
les
xchg
sbb
sti
adc
cwtl
arpl
pop
icebp
sbbl
push
cs
leave
mov
mov
mov
push
mov
mov
cmpsb
push
mov
adc
push
outsb
jnp
mov
cmp
lock
pop
jmp
mov
movsb
test
notl
dec
aam
jmp
aaa
push
push
pop
push
and
push
in
sahf
imul
jns
sub
jg
scas
or
pop
test
notl
out
inc
add
adc
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
xchg
repnz
jle
js
jle
js
sbb
loop,pn
cmc
inc
stc
adc
xor
jg
vshufpd
dec
lock
pop
jp
push
cmp
out
fcmovu
das
je
jge
adc
adc
xchg
test
lahf
sbb
loopne
mov
cld
rcpps
mov
into
or
jb
jbe
jl
jp
cmp
push
pop
add
jno
daa
out
aad
add
pop
add
outsb
dec
std
sub
or
cli
fcoml
std
into
mov
lahf
stc
jns
ret
rcr
push
aam
bound
dec
jbe
fcomip
in
dec
leave
mov
scas
jmp
ficoml
inc
loop
or
scas
hlt
paddsw
mov
mov
insl
adc
cmp
mov
add
fwait
jg
addr16
xor
ror
pop
jns
add
ja
cltd
insl
movsl
sbb
mov
dec
inc
insb
pop
fmull
fisubrs
mov
cmpl
stc
test
add
adc
jne
shlb
stc
clc
adc
dec
repz
int
push
lods
sub
and
push
mov
jnp
pop
jo
fnsave
push
pushl
mov
mov
mov
js
dec
jno
push
sub
mov
mov
imul
sahf
pop
cmpsb
in
out
dec
in
sub
in
or
xchg
dec
out
aaa
cmp
sub
pop
cli
divb
icebp
or
ljmp
sbb
repz
sbb
js
negb
adc
scas
mov
insl
cwtl
jge
jo
enter
push
cmpsl
jge
lahf
sub
lret
rclb
dec
popa
push
stos
loopne
shlb
adc
addr16
fistl
shlb
and
dec
out
and
cld
stos
cmpsl
mov
insb
loope
testl
shll
fwait
outsl
cmp
push
sbbl
cmp
ret
mov
in
je
test
pop
jo
insl
push
jp
sub
xchg
jb
test
mov
jo
pop
add
movsb
cmp
cwtl
cld
subb
into
cld
cmp
dec
xor
aas
into
fbstp
int3
push
adc
aaa
and
mov
jae
push
imul
test
add
push
add
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
fistpl
add
jle
js
or
cli
scas
push
nop
test
jo
xchg
or
or
xchg
or
add
dec
stos
aam
in
sbb
into
jne
mov
dec
mov
inc
jecxz
and
aad
into
mov
int
iret
std
inc
and
insl
mov
popa
in
mov
out
enter
lret
lock
add
test
pushf
adcb
adc
in
sub
inc
jp
rclb
jo
fldenv
and
das
lcall
and
pop
mov
out
jecxz
and
cmpsl
movsl
ds
push
in
icebp
popa
dec
push
js
test
jbe
and
adc
pop
lods
jo
fisubrl
push
xor
xor
xchg
ret
jno
out
xor
lcall
es
mov
clc
sbb
insl
leave
pop
js
rcll
movsb
ja
and
adc
inc
fnstenv
push
mov
jo
aam
pop
lcall
popa
mov
lock
cmpsb
sub
aam
mov
les
dec
jg
bound
add
xchg
mov
xchg
cmc
scas
lahf
dec
fcmove
mov
lock
das
mov
push
inc
adc
repz
mov
sub
int3
push
xchg
mov
mov
push
mov
or
lods
push
shl
xor
adc
dec
das
dec
cmp
shlb
push
jmp
ret
call
and
xchg
shrb
sub
dec
sbb
ret
inc
adc
mov
and
jl
xchg
dec
and
add
mov
cmp
xor
push
jg
cmp
push
rcr
push
lahf
and
js
jno
xor
les
aad
ffreep
pop
mov
or
popa
push
pop
xor
lods
loop
cli
mov
popa
cmpl
mov
and
xor
ljmp
popa
jp
rcrl
add
divb
je
loope
dec
mov
dec
cmpsb
cmp
int3
xchg
fucompp
pop
and
pop
sbb
mov
lahf
icebp
or
out
arpl
inc
outsb
mov
addr16
jecxz
or
outsl
das
test
into
xchg
aas
jp
dec
daa
cmp
clc
jmp
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
inc
outsb
fildl
jle
js
ficoms
inc
stos
mov
rcll
cmp
push
lret
cmp
pop
lods
inc
and
mov
iret
add
pop
clc
pop
dec
hlt
lods
pusha
cmp
xchg
outsl
jmp
push
dec
jns
cmp
loop
call
setg
adc
jae
sub
adc
leave
iret
stc
sub
mov
outsb
repnz
xor
mov
loopne
lahf
inc
stc
mov
pop
popa
frstor
push
adc
sbb
psrld
insl
inc
imul
add
loope
je
cmpsb
jb
bound
cmp
ljmp
movsl
sbb
xchg
push
std
js
sarl
push
fstps
test
in
enter
jno
xor
fsubrl
stos
push
adc
jns
popf
movsb
jp
jp
push
stc
fstpl
xor
pop
mov
sbb
stos
dec
adc
mov
pop
les
jae
mov
out
test
mov
leave
popf
std
cld
jne
pop
aaa
push
push
andb
push
mov
dec
sarb
idiv
sbb
orb
out
movsb
pop
roll
jl
mov
test
dec
xlat
ss
jg
mov
jae
clc
fstl
push
pop
xchg
leave
subb
inc
loopne
rcrl
sub
pop
pop
dec
cmp
cmp
sub
xor
pop
mov
rol
fwait
jmp
sbb
mov
hlt
out
pop
mov
mov
cmpsb
shrb
in
dec
cmp
sbb
enter
mov
nop
or
xchg
sub
sbb
inc
sbb
xchg
adc
mov
add
push
mov
add
mov
mov
mov
jbe
out
mov
dec
icebp
rorl
cmpsb
sub
clc
mov
xlat
das
loopne
sti
out
push
push
imul
out
add
adcb
and
aaa
pushf
movsl
sbb
pop
outsb
fwait
push
mov
jbe
pushf
and
cmp
mov
call
push
ss
aad
nop
cmp
das
test
jle
cld
pop
adc
jnp
popa
or
add
rcll
stos
loopne
insb
fldcw
mov
lock
inc
cltd
sub
mov
fbld
inc
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
lahf
mov
js
jle
js
jg
sub
push
push
add
popa
pop
lods
pop
das
addr16
icebp
sbb
sub
xor
loop
es
push
addb
sub
nop
mov
jae
scas
jg
mov
xor
pop
add
sub
addl
in
leave
jo
mov
jns
mov
sub
ds
jecxz
cmpsb
lahf
push
rolb
mov
mov
andl
cmpsb
and
fwait
inc
xor
mov
rclb
push
or
orl
cld
in
fstpt
loop
jge
fidivl
dec
mov
sbb
adc
hlt
dec
mov
jg
in
mov
adc
pop
leave
scas
iret
inc
ficomps
in
imul
push
push
fmull
sbb
nop
clc
mov
in
cltd
xchg
xor
xor
sub
cltd
test
sub
int3
xchg
out
lcall
pusha
loop
mov
pop
incl
ds
dec
jo
pop
xor
cmp
scas
enter
jp
inc
cmp
push
in
pop
mov
jle
sub
das
dec
jae
mov
sub
jnp
sbb
lret
fs
clc
pop
or
xor
insb
or
cs
inc
mov
ja
mov
pop
popf
int3
adc
xor
sbb
dec
es
push
mov
stc
pop
add
cld
aad
pop
popa
into
add
dec
ljmp
or
mull
and
repnz
or
notl
xor
xchg
jno
adc
daa
adc
scas
rolb
aad
push
adc
mov
lea
xlat
jecxz
xchg
enter
scas
ljmp
cmpsl
insb
aam
push
shl
push
mov
xchg
and
pop
lods
pop
sub
dec
inc
push
or
das
jbe
xlat
mov
mov
inc
and
imul
mov
stc
int
into
mov
rep
xchg
popa
dec
xchg
and
dec
cli
aam
lret
mov
clc
pop
xor
fs
pop
inc
sbb
aad
fimuls
rclb
sub
int
jne
inc
push
xchg
mov
mov
aam
push
adc
iret
mov
jmp
push
adc
sar
xor
mov
mov
pop
fstl
cltd
sub
insb
adc
inc
lock
stc
push
arpl
push
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
pop
roll
js
cmp
inc
je
dec
imul
add
push
mov
mov
fisubl
push
xchg
jb
pop
addr16
xor
ljmp
push
js
xor
or
mov
int
push
cmpsb
sub
mov
js
ljmp
cltd
push
mov
or
arpl
xor
insb
pop
push
add
dec
xchg
or
enter
hlt
adc
and
cltd
mov
popa
ret
cmp
sbb
dec
in
cld
mov
nop
dec
mov
adc
imul
pusha
dec
std
movsl
xchg
adc
adc
sub
lret
jecxz
jle
mov
cwtl
mov
mov
iret
cli
cmpsl
loope
and
sub
call
std
ret
adc
pop
nop
or
pop
push
sbb
inc
loopne
popf
sbb
fiaddl
cmpsb
sahf
out
leave
mov
add
arpl
mov
loop
jbe
adc
in
outsl
sub
add
sbb
adc
loope
or
add
scas
loop
iret
mov
mov
adc
jmp
and
cmp
mov
aas
or
cmpsl
je
scas
lahf
daa
je
add
sahf
gs
shll
rorl
fwait
repnz
mulb
pop
lret
xor
lahf
sbb
lock
rolb
sbb
call
fdiv
mov
push
xchg
js
push
add
xor
xchg
aaa
push
aam
push
or
in
mov
cld
and
enter
pushf
repnz
cmp
xchg
xor
adc
mov
add
addb
leave
scas
out
gs
dec
stc
mov
aas
mov
inc
sub
enter
and
fldcw
into
rorb
xchg
or
mov
loopne
xchg
cmp
sbb
or
sbb
xorl
adc
or
pop
out
decl
inc
push
outsl
dec
mov
add
ja
mov
fstp
fidivrs
and
dec
cmp
mov
push
adc
aam
pushf
jle
xchg
mov
mov
add
xchg
pop
mov
mov
sub
sub
cltd
pop
pop
dec
adc
cmc
test
in
adc
dec
in
orl
montmul
cmpsb
ret
adc
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
mov
js
jle
js
jecxz
xchg
and
fnstenv
mov
mov
and
imul
call
lret
xchg
sub
mov
scas
cmp
xor
gs
push
nop
sbb
xlat
push
imul
insl
stc
sbb
xor
stos
ret
xor
int3
xchg
shlb
add
ret
add
pop
movsl
andb
xor
inc
dec
daa
repz
repz
adc
call
mov
fbstp
test
lret
adc
inc
mov
fs
mov
sbb
mov
test
les
pop
push
sti
subb
clc
jbe
cli
mov
out
sbb
xchg
lret
xchg
cmp
adc
add
xor
scas
sbb
jle
and
lods
icebp
bound
lret
test
xlat
mov
out
adc
jmp
stos
inc
rorl
test
test
jnp
test
cmc
cmp
inc
fimull
sbb
aam
shrb
jle
jne
or
jp
mov
cs
ficoml
jbe
cmp
in
call
mov
inc
push
mov
or
daa
push
rcrb
lret
pop
mov
mov
jns
shlb
xchg
cld
jge
out
jnp
add
sbb
filds
test
repz
mov
movsl
outsl
sbb
movsl
test
mov
lods
add
adc
xor
insb
aaa
cmc
pop
cwtl
jno
jecxz
mov
aam
push
lock
repz
ljmp
repz
aam
loope
icebp
xchg
inc
dec
xchg
call
pop
outsb
frstor
fwait
sub
push
sarl
sub
sbb
mov
pusha
mov
outsb
sub
or
hlt
in
jmp
fidivl
jg
int3
pop
add
xchg
jecxz
fucomp
xor
pop
je
dec
push
inc
fnstenv
xlat
or
in
cmpsl
add
xchg
sti
rolb
xchg
lea
leave
out
imul
icebp
cmpsl
int3
ret
push
jp
mov
add
xchg
add
in
pop
xlat
pop
mov
and
fwait
subl
hlt
jo
incb
push
dec
movsb
repnz
outsl
sahf
test
std
out
test
sarb
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
lret
pop
mov
js
jle
js
js
hlt
movsl
sub
loope
cli
mov
test
pushf
shrb
cs
ret
adc
aas
pop
das
jmp
jae
outsb
aad
ret
dec
jge
mov
sar
aad
adc
pop
sbb
push
lea
jno
cld
enter
cltd
fmull
mov
fdivr
testl
xchg
xor
loopne
or
rcrb
xchg
cwtl
xchg
pop
add
fdivl
sub
pop
mov
sbb
ja
jg
mov
jp
fucomip
inc
jb
dec
lret
insl
int3
fdivrl
paddd
ret
cltd
mull
jo
adc
cld
push
or
sbb
mov
mov
pop
and
ret
imul
adc
idivl
adc
xchg
into
das
inc
dec
mov
pushf
dec
add
stos
iret
imul
out
fnstenv
aaa
add
mov
push
push
test
jecxz
inc
addr16
stc
mov
add
mov
xor
inc
pop
xchg
std
mov
fidivs
inc
inc
lret
fdivl
ss
enter
lahf
inc
out
es
mov
and
push
decl
or
jne
daa
lock
jge
jb
sub
jnp
push
loop,pn
fsubs
push
pop
orps
pop
imul
bound
in
xchg
sahf
and
adc
xchg
inc
frstor
mov
and
jmp
fwait
adc
flds
dec
fmull
and
in
test
ss
jne
ds
leave
inc
push
xor
jg
jge
test
negl
sti
lock
cmp
aaa
lcall
and
adc
fsubl
or
mov
inc
hlt
cmp
int3
rorl
dec
push
sub
ja
hlt
inc
pop
pop
and
adc
mov
lcall
jl
shrb
jno
jp
jmp
in
orl
mov
or
push
and
pop
dec
xor
mov
out
xchg
int
repz
loopne
js
mov
dec
into
sbb
dec
mov
out
jmp
shll
faddl
dec
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
sbb
cmp
or
js
jle
js
addr16
mov
push
add
xchg
aam
imul
out
les
idiv
pop
push
or
jnp
cld
movsb
mov
sbb
push
enter
cmp
data16
movsb
mov
sbb
es
xor
lahf
in
mov
jne
cmp
sti
test
add
lea
sub
jmp
lea
sbb
jmp
sub
imul
mov
rcrb
dec
xchg
mov
mov
sahf
insl
faddl
xchg
dec
sti
pusha
mov
xor
dec
pop
jbe
jo
sbbl
mov
mov
sub
dec
iret
sbb
stc
inc
cltd
or
in
icebp
stos
int3
cmp
imul
mov
scas
or
lahf
ss
leave
lahf
xor
or
cli
in
ljmp
mov
push
xor
call
jno
jno
sub
jle
lods
fisttps
mov
dec
pop
or
adc
xor
std
inc
xchg
push
lock
imul
cmp
in
movsl
mov
aad
loope
in
cmp
jbe
jae
popa
das
clc
in
fs
out
push
xor
mov
and
mov
test
push
fs
js
in
cmp
xchg
mov
xchg
sbb
lret
jbe
insl
je
cwtl
push
sub
sub
push
stos
jecxz
sbb
pop
xor
adc
xor
ja
pop
cmpsl
mov
adc
jecxz
mov
fsubrl
movsl
test
dec
loopne
inc
insl
adc
scas
sub
xor
lahf
lahf
nop
fcmovb
sbb
jns
push
cmp
sti
mov
not
push
push
fcompl
add
mov
or
lods
mov
jbe
test
push
and
test
jno
xlat
or
dec
jmp
adc
mulb
stc
mov
in
in
jo
mov
cmpsb
jno
xlat
or
push
popf
inc
and
xor
pop
add
stos
mov
push
and
icebp
jo
inc
and
push
insb
rcr
xor
nop
xchg
sbb
sbb
cli
fisubrs
inc
push
rorl
push
mov
inc
pop
fists
jle
imul
inc
push
xor
repnz
xchg
cwtl
adc
push
mov
jmp
enter
add
ror
int
rcr
aad
bound
and
mov
mov
js
jle
js
jge
fdivl
cltd
adc
xor
or
stos
and
int3
sub
xor
cltd
xchg
fistpll
push
adcb
scas
in
mov
mov
sub
cmp
push
jmp
outsb
pushl
dec
xchg
mov
dec
and
lods
mov
jbe
pop
idiv
fs
aas
sub
repnz
pop
cmpsb
and
test
outsl
mov
es
push
daa
clc
jmp
and
data16
test
ds
mov
cmp
fimull
mov
movsb
adc
sub
imul
push
and
pop
adc
sti
loope
out
and
push
jae
shrb
jae
das
or
xor
mov
or
daa
rclb
out
popa
xchg
loope
lret
xor
negl
jae
jp
push
arpl
cmp
cwtl
imul
dec
xchg
adc
out
adc
out
inc
loop
inc
test
dec
mov
in
movsb
push
xor
icebp
pop
orb
mov
adc
je
jge
mov
mov
pop
add
test
mov
push
push
ss
sti
mov
lret
das
outsb
adc
test
insb
mov
and
cld
cmpsb
aaa
pusha
lods
adc
sti
mov
cli
insb
dec
add
fldt
loopne
nop
mov
fidivl
ret
pop
lret
fcompl
je
sub
lret
xchg
xchg
lret
push
sbb
daa
mov
ljmp
or
xchg
add
mov
out
stc
push
outsb
stos
daa
imul
xor
repz
jg
loope
xor
ljmp
add
sbb
call
adc
int3
out
mov
push
inc
imul
xor
pop
sub
adc
sbb
repnz
jmp
ljmp
or
inc
cld
pop
sub
loop
loopne
ss
add
add
push
sarb
sbb
in
push
adc
hlt
adc
lods
adc
sub
es
lds
pusha
aas
sbb
int3
xchg
mov
stos
pop
es
xchg
loope
in
leave
cmp
dec
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
lahf
and
js
jle
js
cmp
jp
out
mov
lock
movsb
or
push
hlt
int3
jmp
fcoml
push
je
and
mov
scas
jnp
inc
movsl
cli
stos
jmp
mulb
in
cmp
xor
xchg
or
xchg
rcll
push
sbb
dec
adc
pushf
insb
fimuls
lret
and
push
xor
fxch
xchg
push
imul
faddp
jbe
cmp
dec
adc
cmp
sub
cltd
jnp
ret
sbb
wbinvd
sti
pop
out
pop
fisubl
out
pushf
and
xchg
add
push
movsl
mov
pop
pop
and
stos
xchg
es
mov
and
pop
ss
pop
popa
add
sbb
sub
xchg
push
in
cmpsl
test
sbb
fwait
adc
shrl
mov
mov
cmp
mov
cmc
cmpsl
or
xor
pop
jle
dec
pop
adc
add
aas
push
mov
pop
notl
pop
push
enter
xlat
fildl
jns
push
cmp
mov
in
dec
push
in
shr
adc
push
dec
dec
push
sbb
ds
cmp
sub
call
mov
add
fwait
sti
push
or
jns
inc
mov
aas
ja
inc
or
stos
push
jmp
xchg
enter
inc
cwtl
dec
cmpsl
pop
cmp
xchg
aas
shll
sub
lcall
sar
and
out
xorl
fs
jg
and
ljmp
jp
xchg
dec
fcoml
fdivrl
push
mov
pop
mov
jle
ss
int
daa
xor
mov
jle
xchg
mov
add
xchg
movsb
xchg
cmpsb
inc
aad
or
jg
jae
sub
add
mov
or
fwait
lock
cmp
clc
xchg
xchg
jae
add
aam
rol
inc
mov
repz
test
testl
int3
inc
pop
in
push
pusha
mov
test
loop
xchg
mov
repnz
mov
fsts
insb
jmp
stc
pop
into
pop
je
cld
or
cmp
jo
mov
out
adc
mov
mov
jmp
ror
ror
ror
test
xchg
push
mov
xchg
inc
xchg
adc
js
loopne
mov
mov
aad
lock
and
adc
xlat
ds
in
and
scas
repz
decb
insl
insl
divb
lds
mov
sbb
xor
mov
mov
dec
and
pop
les
dec
dec
lret
jmp
jne
cld
mov
mov
push
cmp
sbb
imull
daa
popa
pop
xchg
sbb
mov
ds
xlat
mov
ficoml
into
xchg
inc
or
filds
xchg
xor
out
mov
xchg
cld
in
loopne
mov
cmp
jmp
and
push
iret
daa
push
cmp
sub
pushf
into
pushf
xor
mov
sub
sahf
cltd
cmp
push
popf
outsl
std
add
jno
aad
mov
sbb
fists
stos
adc
or
stos
jmp
incl
mov
cld
dec
and
mov
add
fs
adc
ljmp
or
repz
out
xlat
jns
cmp
pop
mov
mov
add
add
rclb
popf
aaa
in
and
jnp
dec
pop
movsl
dec
and
lds
cmpsb
adc
fisttps
scas
and
xchg
test
xchg
jne
lahf
or
mov
push
aad
ret
pop
adc
push
leave
sbb
jge
push
adc
idivb
mov
clc
mov
xlat
add
mov
xchg
or
sarb
mov
xchg
pop
sbb
or
cmpsl
xchg
push
test
inc
subl
into
addr16
cmpsl
jno
mov
call
loopne
out
jmp
mov
aas
outsl
xchg
xchg
lock
mov
das
inc
mov
leave
sti
mov
imull
mov
cmp
and
push
adcb
lcall
aaa
cmpsb
rcr
and
adc
int3
cmpsl
dec
rorb
pop
inc
pop
outsb
and
jne
sarb
xchg
pop
jb
or
out
jae
jmp
dec
mov
xor
call
adc
xor
cmpsb
mov
or
mov
out
sub
imul
gs
inc
sti
movsb
mov
push
push
lods
xchg
addr16
jmp
loopne
xchg
insb
or
imul
stc
dec
lret
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
cmp
js
jle
js
fidivs
dec
vpmadcsswd
pop
daa
nop
sub
mov
mov
hlt
mov
icebp
sbb
in
cmp
or
shll
mov
inc
jb
sbb
adc
scas
xchg
add
adc
jp
add
jbe
call
sub
jmp
lcall
jp
sbb
mov
dec
or
mov
inc
or
pop
add
pop
adc
aas
mov
gs
inc
jo
ret
mov
iret
cwtl
mov
call
aad
mov
mov
into
lds
std
xor
sti
xor
test
sub
icebp
shrl
outsb
daa
fwait
mov
insb
out
sub
inc
scas
xchg
sub
sbb
pop
pop
and
sbb
mov
jl
scas
fiaddl
xchg
jl
pop
and
aam
inc
test
jb
sbb
dec
cmp
test
push
call
lcall
push
adc
popa
adcl
xchg
xchg
adc
stc
aaa
push
out
pop
dec
sti
fcoms
sub
hlt
push
lods
mov
loop
hlt
inc
pop
or
xchg
cmp
icebp
scas
lds
cmpsb
pop
stos
lods
shll
imul
stos
or
ss
inc
sbb
or
insb
cmp
test
aam
lahf
lock
and
ret
push
push
insb
or
cmpl
leave
xchg
cli
das
repnz
pop
sahf
and
jg
out
pop
pop
mov
loopne
rorl
int3
mov
jo
xor
out
flds
adc
ss
out
cmpsb
ret
rcrl
mov
movsl
cs
mov
add
in
insb
or
and
inc
loop
dec
jl
mov
je
repnz
adc
into
or
mov
xchg
cmp
fld
lods
inc
loopne
dec
mov
sbb
jle
sbb
repz
les
adc
inc
arpl
out
adc
pop
sub
and
or
dec
out
pop
mov
fs
sahf
daa
or
inc
mov
sahf
in
andl
ljmp
retw
aaa
or
inc
pop
fstps
xor
cltd
dec
cltd
shll
lea
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
test
xlat
lods
sbb
repnz
fstcw
dec
insb
mov
fsubr
sbb
inc
int
lcall
sbb
inc
sub
hlt
std
ret
adc
and
push
and
inc
popf
sub
or
ljmp
das
adc
les
les
popa
popf
mov
loop
sbb
jns
jnp
imul
dec
xor
add
jne
xor
hlt
and
xor
rcll
fisttpl
cmp
mov
pop
data16
sub
fnstenv
ds
and
adc
push
int
pop
xor
adc
cmp
cli
stc
cwtl
adc
xchg
mov
jecxz
xor
add
faddl
mov
add
fdivrp
cwtl
idivb
decl
add
shll
jne
das
sti
in
push
mov
iret
scas
imul
cld
pop
fisubrs
mov
aad
mov
xchg
outsb
mov
popa
adc
stos
fists
sbb
sarl
xlat
fisubl
adc
add
add
inc
push
adc
mov
icebp
xchg
shlb
sub
fsubl
mov
mov
mov
mov
pop
icebp
aad
cmpsb
hlt
xchg
jb
lods
xorb
adc
mov
in
lods
lcall
adc
xor
sbb
in
mov
push
loop
in
jle
mov
and
into
jne
dec
xlat
sbb
mov
jns
jg
das
cmp
jae
xchg
shl
mov
push
xchg
jb
popa
loop,pn
adc
xor
pop
push
push
mov
aad
outsl
xor
pop
or
popf
adc
enter
in
mov
shlb
aas
ja
pop
pop
out
and
add
sub
mov
pushl
in
jns
mov
adc
mov
inc
adc
call
shrb
push
xchg
scas
les
and
cmpsb
stos
mov
fs
fadds
loop
jmp
push
mov
out
mov
adc
adc
das
jecxz
loope
mov
subl
mov
filds
cmpsl
out
dec
jae
cli
test
test
mov
jmp
into
rol
ror
mov
cwtl
in
adc
jle
js
adc
mov
dec
or
bound
leave
arpl
into
test
test
shr
insl
mov
bnd
pop
psrlw
shrb
in
jae
jp
in
dec
aas
push
pop
adc
adc
dec
in
jns
mov
aaa
jns
xlat
loope
jg
pop
cmp
cli
cwtl
dec
sbb
lock
xor
maxps
sbb
sti
call
cmpb
lods
adc
shll
push
inc
jne
mov
stc
or
into
into
sbb
pusha
test
data16
js
and
loope
or
pop
push
pusha
mov
rclb
mov
jb
lcall
or
pop
lret
xor
movsl
mov
cs
in
dec
push
fdivl
cmpsl
mov
mov
orb
mov
jbe
inc
mov
add
jbe
dec
mov
leave
sub
inc
negb
jne
fadds
xchg
cli
dec
das
inc
ljmp
push
sub
push
push
pop
stos
and
stc
cmp
mov
loope
mov
pusha
lret
or
mov
mov
orb
or
call
cmpsl
mov
les
pop
cwtl
ja
pop
dec
mov
gs
loopne
jmp
jl
add
popa
shlb
mov
inc
dec
dec
add
fcompl
cltd
call
imul
xchg
push
adc
icebp
pushf
lods
lcall
imul
data16
in
clc
lods
add
rcrb
mov
imul
inc
sbb
sbb
cli
cli
mov
xchg
cmc
das
fistps
cmp
xor
or
shrb
mov
decl
movsb
std
testl
cmp
pop
mov
fmul
pop
lock
mul
outsl
imul
fisttps
cmp
or
xor
mov
out
dec
mov
push
xchg
jns
pop
js
mov
dec
mov
or
stos
xchg
mov
jnp
push
add
xchg
stos
stos
dec
into
jmp
sbb
test
out
in
or
add
outsb
imul
lods
xchg
push
jne
mov
out
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
mov
js
jle
js
sub
sub
dec
push
rclb
push
adc
xor
pop
repnz
adc
jbe
insl
mov
xchg
push
loop
nop
out
and
cmp
cmp
cmp
imul
lds
adc
pop
ss
mov
mov
adc
mov
jge
xchg
mov
fbstp
cmp
out
movsb
jns
or
adc
xor
pushf
mov
fwait
loope
cmp
nop
sbbl
pushl
jmp
pusha
mov
popf
and
pop
push
fnstcw
outsl
and
push
cmp
bound
loopne
push
lret
leave
lret
cmp
stos
pusha
push
fucompp
pop
loope
inc
data16
mov
pop
repz
jno
mov
out
add
fnstcw
fstpl
push
jns
aam
xchg
add
mov
xchg
pop
xor
jno
stos
iret
push
xchg
loopne
inc
lock
mov
xor
xchg
push
lahf
push
stc
rcrl
pop
stos
sahf
mov
xlat
mov
in
sub
movsl
call
add
test
outsl
shlb
xor
pop
push
repz
jge
mov
outsl
cmpsb
sahf
dec
ljmp
insb
clc
sub
or
rolb
aad
adcb
push
jmp
jmp
jo
add
mov
jmp
ds
mov
cwtl
jns
ror
fisubl
je
sbb
push
adc
iret
int3
scas
aaa
sbb
test
ss
sbbl
pop
fadds
mov
jmp
dec
aad
adc
cli
adc
fsubrs
lret
pushl
xor
mov
ret
stos
mov
dec
mov
lods
dec
sub
jbe
jmp
push
push
lret
lahf
scas
pop
jne
sbb
iret
dec
dec
pop
pop
pop
add
or
jle
jae
jmp
jmp
call
bound
xlat
xchg
ja
fnsave
int
loop
add
imul
add
mov
xor
ret
xor
xor
mov
xchg
repz
add
rcr
fisttps
and
or
movsl
cmpb
fnstenv
dec
shrb
push
fs
out
cmp
mov
xchg
xorb
lret
jp
es
xor
out
mov
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
jno
xlat
sbb
js
jle
js
dec
cld
mov
in
and
in
mov
addb
and
idivb
das
sbb
or
orl
pop
sbb
bound
outsl
and
or
mov
in
inc
pop
or
cltd
add
ret
mov
std
or
or
xor
pop
scas
cmp
sbb
aaa
push
mov
lea
sub
cmp
pusha
into
fistl
adc
fwait
push
pop
enter
outsb
xchg
mov
pop
pop
jb
subb
and
fsubrs
lods
ljmp
jnp
ja
rcr
std
rorl
cmpsb
in
fnop
push
scas
subps
pop
xor
in
jae
cwtl
bound
adc
push
test
mov
scas
lea
arpl
popa
shll
jnp
pop
int
cmpsb
mov
xchg
fbstp
mov
jmp
add
dec
xor
mov
dec
jae
push
push
push
imul
addb
cmp
jmp
xchg
push
adc
cltd
pop
enter
fistps
test
in
cmp
mov
stos
dec
ficoml
imul
xor
repnz
ja
mov
lods
mov
mov
scas
xor
call
xchg
jae
dec
jno
adc
mov
fsubrl
inc
hlt
pop
je
jecxz
mov
mov
scas
adc
push
inc
lcall
shlb
mov
inc
das
add
les
cmp
mov
push
cmp
nopl
adc
sahf
inc
int3
pushf
pop
add
fstps
in
loop
dec
ss
pop
or
les
push
js
cmpsl
iret
push
adc
cld
inc
add
mov
add
test
repz
pop
and
cs
xchg
mov
cld
xchg
push
pop
push
inc
dec
pushw
popa
xchg
clc
dec
jecxz
lea
sub
or
loop
mov
out
jno
out
push
test
pop
pop
ja
ja
rcrl
fnstcw
pop
enter
jae
enter
in
sub
mov
cld
mov
dec
cltd
rolb
aad
or
push
les
pushf
sti
pop
mov
mov
jle
fstps
int3
scas
mov
jmp
xchg
sbb
dec
xchg
fs
scas
movsb
and
cmpsl
rol
push
lcall
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
insb
add
es
jle
js
sub
mov
mov
jb
push
lcall
jbe
mov
xor
jb
cmp
movsl
xchg
or
xor
rolb
jecxz
sub
aas
scas
cmpsl
mov
repz
aam
rcrl
stos
mov
push
dec
sbbl
dec
jmp
push
lea
in
mov
cmp
in
in
test
add
outsb
insl
mov
test
jge
rcrb
cmp
lret
mov
push
push
cmp
popa
mov
lret
push
or
xor
mov
rorl
addb
push
add
fisttpl
mov
push
inc
sub
pop
cs
lcall
rorl
dec
dec
test
fisttps
cli
aaa
push
push
xchg
lret
pusha
les
mov
stc
popf
mov
inc
jle
cmpsl
and
mov
mov
sub
cwtl
or
and
repnz
dec
imul
or
repz
sbb
dec
pop
fisttpll
pop
cltd
inc
andb
lods
mov
scas
ret
bound
adc
fwait
cmp
xlat
or
inc
mov
xchg
cmpsl
cmpsl
cmp
pop
adc
push
xlat
aaa
pop
dec
lret
pop
fmuls
int3
stc
call
adc
lahf
mov
jmp
dec
or
mov
adc
rolb
xchg
inc
scas
inc
mov
sbb
dec
test
push
out
sti
and
test
jmp
sahf
xor
mov
and
mov
pop
inc
jne
mov
mov
mulb
jl
lods
jecxz
stc
sbb
popa
xor
jp
mov
lods
andb
jae
pop
dec
jns
leave
adc
in
arpl
repz
or
lahf
push
mov
push
gs
ficoml
fwait
cmp
sbb
fidivl
int
inc
add
jae
stos
cmpsb
mov
or
sbb
std
cmp
pop
repnz
sbb
out
xchg
lret
gs
fidivrs
std
or
xor
mov
inc
mov
xor
cmpsb
adc
aad
popa
sbb
daa
pusha
xor
rorb
xchg
sbb
add
sbb
cld
iret
test
pushf
out
lret
xchg
int
mov
rorl
outsl
jo
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
ret
fistpl
js
dec
jle
js
mov
mov
adc
xchg
push
aam
scas
movsb
shlb
jge
xchg
sbb
jp
adc
in
sub
je
icebp
xor
stc
xchg
popl
loopne
arpl
jnp
fcmove
adc
sub
std
idivb
xchg
leave
ret
mov
cmp
or
jno
fst
add
xor
in
das
or
pop
test
fidivrl
cmp
bound
xchg
movsl
into
xlat
cwtl
fistl
gs
and
sbb
mov
imul
push
js
ds
inc
sub
push
scas
cmp
mov
sbb
mov
jp
cltd
or
in
out
and
xor
lods
ret
nop
fldcw
cmpb
pop
xlat
push
inc
cli
jg
insl
pop
lea
or
dec
and
push
jae
fucomp
andl
jbe
xlat
arpl
call
inc
inc
jl
mov
and
cmc
rorb
mov
adc
adc
cmpb
pop
ja
add
dec
std
pop
enter
or
sbb
dec
popf
sbb
sahf
mov
push
scas
pusha
lcall
sbb
pop
xor
fstpt
ret
sub
aad
cmp
xchg
push
dec
rcrb
test
inc
jp
adc
movsb
andl
lret
pop
or
pop
mov
outsl
xchg
out
stc
fldl
cmp
add
cmpsb
sti
dec
mov
jecxz,pn
xor
adc
xchg
mov
das
mov
push
mov
cmpsb
bound
mov
stos
pushf
arpl
ss
and
pushf
adc
pop
in
xchg
repnz
sti
mov
push
add
decb
mov
pop
mov
test
in
subb
push
test
and
int3
jb
add
mov
push
loope
stos
repnz
ljmp
and
jecxz
adc
hlt
test
mov
fsubrl
fisubrl
mov
js
lods
sbb
pop
mov
and
push
jmp
and
dec
pushf
or
scas
stc
mov
ljmp
push
out
cmp
incb
mov
dec
ja
mov
fldenv
scas
xchg
ja
xor
xchg
cltd
fisttpl
shrl
or
ret
orl
push
mov
call
adc
cmp
aaa
xlat
bound
idiv
stos
mov
jnp
jl
ljmp
cmp
dec
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
addr16
jno
js
dec
jle
js
mov
movb
sbb
xorb
cmp
bound
mov
mov
loopne
mov
loop
cld
push
mov
dec
dec
pop
mov
sub
scas
ficoml
or
or
push
pop
dec
dec
cmpb
mov
and
add
mov
das
jp
test
sbb
scas
bound
mov
mov
iret
jp
sub
inc
mov
pop
pusha
fcomps
dec
add
mov
push
cmc
out
ret
or
out
sub
lcall
push
rolb
loop
stos
rol
and
loopne
rolb
je
fisubs
jl
cltd
cli
xchg
push
mov
ljmp
sbb
adc
mov
or
gs
ds
shlb
bound
sbb
add
or
call
sub
mov
pop
or
pusha
leave
adc
int
adc
sbb
daa
sbb
fisubrl
loopne
adc
xchg
push
push
imul
push
stos
mov
sbb
mov
or
and
push
xchg
gs
in
mov
push
testb
clc
pop
call
xlat
xor
push
daa
test
jp
stos
mov
in
mov
adc
nop
dec
xor
pop
test
insb
in
push
inc
inc
lods
repz
inc
jle
subl
mov
stos
adc
or
ljmp
push
out
fsts
mov
xchg
mov
pmuludq
enter
lods
cltd
mov
push
test
js
pop
insl
mov
jbe
adc
sbb
jae
nop
fcomip
pusha
shr
bound
outsb
mov
gs
jo
test
dec
mov
mov
add
adc
pop
lods
dec
pop
aas
cmp
adc
cmp
fwait
dec
pop
sub
lds
dec
xlat
mov
cs
push
cmp
fs
daa
ror
sub
mov
icebp
into
sbb
out
int3
mov
cli
out
imul
aaa
and
imul
cmp
push
in
icebp
das
adc
enter
outsb
dec
popf
or
call
mov
mov
mov
sbb
mov
xor
scas
dec
sub
jecxz
xor
std
divb
mov
jge
in
push
lret
inc
inc
jo
outsl
mov
addr16
cld
mov
data16
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
out
inc
into
mov
js
dec
jle
js
or
mov
out
les
adc
jo
xor
fsubrl
shrb
scas
xabort
cmp
ret
mov
or
jbe
fs
jmp
inc
inc
push
xchg
push
xchg
sbb
and
cmp
inc
cmp
jo
inc
mov
pop
int3
jle
add
add
sbb
pop
pop
jg
sub
jns
push
mov
mov
lods
sbb
bound
mov
cmp
aas
jb
icebp
mov
jl
fsubl
in
or
test
std
push
adc
or
add
shll
aaa
xchg
les
fwait
or
sbbl
popf
dec
roll
jbe
mov
mov
inc
sub
sarl
adc
pop
adc
xchg
add
sbb
popa
xchg
je
adc
addps
call
mov
mov
cwtl
or
jno
xchg
xchg
jle
jne
xor
jg
ds
das
sbb
xor
aad
push
pop
mov
push
or
int3
nop
xor
mov
lret
movsl
shlb
xchg
xchg
loope
sarb
pushf
popa
loop
sbb
out
jno
mov
push
popf
inc
hlt
jb
cmp
scas
leave
xor
cld
add
pop
push
cmp
push
xchg
ret
mov
adcl
in
sbb
push
sbb
adcb
je
jne
jno
or
xchg
pushf
adc
jl
bound
pop
jnp
stc
jmp
movsb
push
inc
xchg
out
cmp
rcl
adcb
mov
lods
sub
pushf
or
enter
lea
mov
ljmp
push
push
lock
into
aas
xlat
rcl
push
xorl
pop
xchg
sbb
sub
es
adc
stc
sbb
clc
pop
pop
rcll
jg
leave
mov
pop
sar
leave
push
iret
dec
pop
dec
cmpsb
je
sub
or
lret
push
sbb
stos
push
or
test
xchg
rorb
jns
sub
popf
xchg
test
and
iret
jmp
xor
lds
aaa
out
and
adc
test
mov
testb
je
hlt
and
push
add
xchg
xor
inc
scas
xchg
jnp
xor
add
and
test
pop
dec
pop
cmp
flds
outsb
sbb
divl
dec
inc
sbb
xor
jbe
outsl
or
cli
daa
shll
sbb
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
mov
leave
fwait
xor
dec
jle
js
stc
xchg
xor
mov
pusha
inc
add
jno
push
data16
xchg
in
jbe
inc
jp
clc
icebp
data16
fsubrs
push
sbb
mov
cmp
mov
mov
scas
vmread
push
push
xchg
inc
xor
dec
push
push
xchg
push
pop
aad
stos
pop
ljmp
lea
push
jp
or
stos
jno,pn
icebp
dec
adc
inc
xor
mov
cwtl
xor
sbb
sbb
je
aas
xor
and
fwait
sbb
or
or
cltd
add
ss
jp
movb
mov
lods
popa
pop
insb
rclb
popf
rcl
sbb
sarl
sbb
test
inc
nop
xchg
push
pop
and
fsubrl
push
mov
out
mov
into
test
mov
mov
imulb
pop
ss
movsb
add
mov
lret
fidivrs
xor
dec
push
or
dec
addl
xchg
or
ret
outsl
and
inc
jns
jg
push
sub
outsb
icebp
sub
leave
mov
pop
pusha
ljmp
clc
and
jns
xor
lock
test
mov
adcb
mov
inc
mov
jnp
ljmp
lds
jl
pop
jg
fwait
pop
inc
or
sub
out
movsb
bound
and
push
aaa
lock
push
ja
mov
xchg
adc
xor
andb
mov
das
arpl
outsb
ja
mov
and
inc
out
repnz
cmp
xor
cmp
scas
pop
xlat
push
shll
outsb
test
mov
fwait
int3
jnp,pt
orb
xchg
push
notb
je
test
leave
sarl
bound
fstps
or
sbb
mov
add
mov
ret
or
repnz
inc
aad
push
jg
insb
pop
das
dec
inc
sub
shrb
cs
fbld
fsubr
add
subl
jno
or
dec
cmp
cmp
dec
int
ljmp
and
xor
mov
dec
movsl
pop
mov
ret
pop
pop
arpl
jmp
and
mov
call
mov
jmp
incl
cmp
daa
jns
dec
inc
cmpsb
mov
shlb
mov
push
or
jb
xchg
mov
vmovlhps
popa
add
test
mov
jo
xchg
jbe
shll
cmp
invd
pop
inc
std
pop
addr16
rclb
add
test
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
psubsb
js
dec
jle
js
mov
cs
mov
pop
dec
push
ljmp
cld
and
push
vpaddq
fdivrs
popa
lret
test
aas
dec
pop
cmp
xchg
sub
idivl
pop
xorl
bound
mov
xor
mov
sub
pop
jno
pop
cmp
cltd
xor
pop
ror
inc
fnstsw
addr16
call
mov
cmp
lds
je
push
clc
div
adc
xchg
sub
jp
inc
imul
cmp
lock
loopne
mov
mov
shll
orl
popa
test
jns
aas
fwait
sub
mov
js
in
fdivr
inc
lret
mov
outsb
lods
aas
push
pop
or
ret
fcomp
dec
lods
jnp
cmp
stos
insb
and
pusha
inc
testl
mov
test
adc
push
and
sbb
inc
and
adc
push
dec
inc
icebp
fwait
pop
mov
pop
pop
faddp
mov
paddusb
pop
jae
and
data16
cmpsb
iret
imul
xchg
jnp
push
pop
outsl
lret
fistpl
fiadds
cmp
xchg
sbb
dec
sub
jne
xor
or
in
clc
imul
push
and
pop
pushf
dec
inc
mov
jmp
je
xchg
mov
in
jno
xor
jnp
sub
pop
add
xor
jge
xlat
out
lret
xor
cmp
sbb
faddl
call
pushf
inc
lcall
jns
xlat
jnp
add
adc
adc
mull
sbb
pushf
out
in
sahf
fistps
test
jp
lea
stos
incb
and
pusha
pop
xor
add
cmp
mov
rclb
jmp
iret
insb
loopne
xchg
jae
push
xchg
popl
push
mov
fstl
pop
scas
xor
into
mov
cmp
lret
sbb
stos
fs
add
jge
popf
out
clc
arpl
jno
pop
or
loopne
leave
adc
sub
add
ljmp
push
pop
mov
or
push
movb
sarl
xchg
test
mov
pop
test
fs
adc
insb
jl
xlat
pop
dec
cltd
push
mov
xchg
popa
lret
jmp
loopne
xor
outsl
sub
call
ret
in
notb
sub
sub
out
push
mov
inc
clc
jmp
int
rol
ror
aad
inc
jecxz
fsubrl
mov
push
cmp
jle
js
mov
sbb
jge
stc
or
sarb
cmc
ret
jne
push
call
aas
fldl
loop
call
sarl
pop
stc
sub
xor
rcl
scas
movsl
sahf
mov
cmc
pop
hlt
fisubrs
cmp
or
mov
add
push
ret
push
dec
sbb
dec
or
add
pop
adc
cmc
cli
idivb
xchg
jno
and
jge
push
cs
push
sbb
cmovs
aad
push
push
hlt
mov
cmpsl
sbb
fwait
adc
insb
fwait
lcall
mov
mov
xchg
enter
and
enter
push
jmp
mov
cli
jbe
inc
push
out
xchg
es
and
inc
out
cmp
jb
add
ret
lcall
pushf
inc
adc
sub
imul
dec
push
sbb
cmp
fcoms
pop
arpl
mov
mov
icebp
sbb
std
dec
pop
test
cmp
inc
mov
jbe
mov
or
cmp
push
ss
out
and
jmp
adc
jne
mov
mov
int
shrb
fldenv
mov
mov
inc
cmp
loope
cmpsb
pushf
or
push
aaa
adc
pop
dec
insl
inc
stos
sbb
cmpsb
lock
std
ja
fisubl
loopne
jge
jmp
sbb
cmp
xchg
sbb
push
inc
stos
cmpl
adc
xlat
scas
mov
lret
push
xorb
xchg
imul
xchg
mov
pop
mov
fs
add
sbb
push
fs
add
iret
ss
and
cmp
sbb
loop
sub
sub
mov
jecxz
rclb
xchg
jne
test
xor
xchg
mov
push
push
and
sbb
insl
dec
mov
inc
lods
fwait
mov
cmpl
out
mov
or
mov
pop
std
repnz
mov
lods
shrb
mov
adc
les
pop
je
popf
pop
mov
push
mov
jle
inc
or
ret
adc
inc
cmp
jmp
and
stos
jle
mov
lahf
js
imul
and
dec
imul
lds
sub
lcall
inc
insl
gs
and
lods
popf
shlb
adc
cld
and
rorb
sti
leave
inc
inc
add
test
test
lret
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
pusha
jmp
fsts
cmp
dec
jle
js
or
and
mov
cwtl
inc
mov
lahf
in
dec
add
out
cmp
pop
jno
pop
push
adc
xor
dec
push
es
mov
sub
call
bound
fwait
adc
and
call
loopne
cwtl
cld
add
dec
aas
xor
lock
int3
jbe
insb
data16
jecxz
cmp
xchg
cmp
dec
fisttps
test
iret
ret
push
cmp
scas
mov
dec
add
dec
ss
xor
test
mov
ret
adc
movb
addps
lods
ret
call
fcompl
aaa
adc
pop
dec
inc
loope
mov
or
adc
ds
shll
insl
into
std
add
adc
push
lcall
cmpsb
jg
pop
stos
adc
mov
addr16
cld
sbb
or
lock
inc
xor
pushf
xor
dec
and
cwtl
out
inc
add
cmpsb
int
fisubs
mov
mov
mov
xor
xchg
pop
pop
out
les
xlat
pop
bnd
mov
xor
and
in
ja
inc
ds
cmp
xor
mov
je
jge
mov
add
xor
stc
mov
das
sub
imul
jg
cli
push
fcompl
aas
mov
iret
ds
xor
js
and
pusha
push
aaa
andb
jbe
stc
adc
lods
dec
lret
mov
mov
lea
cmp
fwait
cli
xchg
leave
sub
or
inc
hlt
repz
push
mov
xor
jbe
xchg
cmp
outsl
lods
mov
test
push
sub
xchg
or
mov
add
imul
lahf
xchg
inc
push
lret
sarb
ss
and
dec
mov
aas
xor
sub
mov
ds
bound
cmpsb
pop
push
dec
push
test
mov
ljmp
out
cmp
cld
or
sbb
push
inc
loop
loopne
sti
dec
push
sbb
jl
xor
and
in
mov
or
push
mov
sbb
dec
dec
int
pop
ret
insl
sbbb
aas
push
mov
pop
xchg
in
rolb
add
subb
push
sbb
and
jno
out
pop
jne
add
mov
in
test
dec
or
and
xor
pop
pusha
repz
inc
xchg
xchg
xlat
icebp
cmc
shr
ret
imulb
mov
repz
jnp
jbe
dec
mov
push
aam
bswap
outsl
loop
loopne
cli
aad
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
mov
js
dec
jle
js
xchg
sarl
aas
mov
test
mov
mov
xchg
push
enter
xchg
icebp
xchg
and
lcall
fbstp
mov
mov
ds
shlb
jo
iret
sti
or
int
lahf
stos
in
sti
pusha
and
cmp
testl
dec
ds
adc
mov
jp
or
push
or
mov
bound
icebp
pop
aaa
adc
mov
in
add
jg
ficomps
and
sti
cmpsl
mov
insl
sub
push
push
pushf
cltd
xchg
add
sbb
push
lods
imul
sete
jge
out
or
ret
xor
fs
aam
mov
in
mov
pop
xchg
push
rcrl
in
adc
push
jbe
push
jge
sbb
jae
daa
push
int
push
out
mov
lock
imul
call
popa
sub
cld
cld
push
or
adc
andb
pop
inc
fwait
lcall
test
xchg
jg
adc
jp
out
and
inc
clc
xor
push
cmc
dec
movl
mov
or
mov
pop
xchg
insl
clc
loope
mov
push
push
mov
insl
ljmp
jg
xchg
dec
cmp
inc
xchg
sbb
push
movsb
xchg
jl
push
stc
test
mov
lods
jmp
and
xchg
pop
mov
lock
stos
idivb
dec
in
mov
leave
fists
mov
add
fidivl
xor
hlt
cld
add
sub
mov
fs
daa
push
push
mov
and
ljmp
ficoml
mov
cmovns
movsb
xlat
adc
imul
jecxz
sub
loopne
push
filds
or
clc
xor
adc
dec
mov
mov
outsl
inc
call
int3
pop
pop
xchg
loop
iret
lahf
fwait
repnz
shrb
lcall
cltd
test
cmp
push
pop
faddl
or
xor
mov
stc
or
push
jno
imul
aaa
cltd
inc
movsb
mov
test
in
jnp
and
popf
ja
fwait
mov
pop
add
ret
mov
shlb
pop
daa
mov
adc
jle
pop
outsb
push
shrb
scas
lret
in
popa
push
add
hlt
pop
sub
push
push
mov
and
cmp
popa
nop
adc
mov
fcomps
movsl
mov
jbe
mov
xchg
andl
fmulp
das
call
xor
jmp
rol
ror
leave
rcr
aaa
mov
mov
js
jle
js
cmpsb
pop
lret
inc
xchg
push
cmc
mov
jae
std
add
sub
mov
mov
xor
lret
cmp
shrl
mov
shlb
xchg
jno
xchg
notb
dec
dec
and
jge
add
jmp
xchg
hlt
cli
jp
test
fs
inc
sti
out
or
mov
push
int
call
cmp
jbe
add
pop
cmp
jns
rolb
arpl
dec
sbb
fldcw
ds
call
mov
push
insl
ljmp
les
loop
jp
adc
pop
add
jo
mov
movsb
in
aas
sti
das
mov
inc
repz
mov
mov
out
mov
jge
xchg
popa
bound
pop
inc
jbe
lods
push
adc
sbb
cmp
ja
pusha
cwtl
mov
mov
cltd
push
lea
fistpll
lret
repnz
insb
sub
mov
dec
sbb
push
andl
pop
jmp
imul
in
pusha
ret
ret
ss
rcr
insb
add
sbb
or
lahf
int3
pop
mov
scas
aaa
xor
int3
aam
mov
adc
sbb
mov
cmp
or
popa
ljmp
bnd
mov
push
xchg
jne
ljmp
cmp
mov
lods
std
sbb
push
mov
cmc
ficompl
inc
jno
gs
bound
test
ss
test
insl
mov
dec
fucomip
lahf
scas
nop
mov
imul
pop
jnp
push
test
ffree
mov
jg
pop
add
push
cmpsl
pop
mov
shll
pushf
dec
mov
pop
jmp
gs
inc
bound
lret
lahf
push
imul
outsb
sub
lock
and
dec
xor
or
mov
dec
sub
adc
inc
insl
jg
loope
sbb
insb
stos
mov
inc
push
stc
mov
test
insl
dec
push
cmc
in
cmp
ret
out
das
push
cmc
pop
mov
xchg
or
jl
orb
xchg
mov
add
push
mov
cwtl
mov
cmpsb
stc
rclb
sub
jbe
mov
stos
dec
leave
pop
out
ss
push
mov
pop
sub
stc
mov
test
inc
notl
add
and
dec
aas
cs
cmpsb
inc
or
or
out
fcmovu
jmp
in
adc
sbb
sbb
push
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
push
fisubrs
js
jle
js
mov
int3
mov
and
icebp
pop
insb
and
dec
xchg
xchg
nop
and
shl
push
fidivrs
test
add
push
and
imul
andl
roll
pusha
int3
bound
out
jg
inc
jmp
dec
inc
push
mov
int
pop
adc
cli
xchg
push
imul
adc
lcall
sahf
jecxz
aam
ret
push
out
ficoms
loopne
cwtl
les
mov
ficoms
nop
or
lahf
sbb
sbb
jb
out
out
cmp
bswap
or
mov
jnp
xchg
subb
adc
jno
sub
in
repnz
in
mov
sub
sti
adc
jne
mov
imul
imul
dec
loop
popa
sbb
mov
sbb
cmp
icebp
mov
push
pop
inc
xchg
in
jp
mov
xor
cmp
aad
mov
jg
xor
xor
fidivl
stos
xchg
add
sbb
es
fldenv
sbb
in
mov
add
pop
mov
test
nop
sbb
das
mov
movb
ret
leave
jb
ja
and
or
subl
hlt
inc
inc
adc
in
or
xor
jae
imul
clc
inc
mov
or
and
mov
lods
xor
call
sbb
call
pushf
cmp
add
incb
mov
subl
test
cmpsl
lea
out
out
in
loope
pushf
in
add
cmp
xor
push
or
dec
in
jnp
mov
notb
sbb
jp
jecxz
lods
fsubrs
sub
icebp
adc
fildl
xor
cmpsl
add
mov
rcrl
mov
and
ds
or
cmp
icebp
vminss
fnstsw
add
mov
push
sub
aam
xchg
insl
and
and
loopne
and
into
hlt
fiaddl
jmp
int
popa
push
xor
jl
mov
jmp
ds
jle
jge
cmp
and
out
mov
mull
jl
xchg
xchg
in
pop
iret
jg
xor
xor
mov
mov
hlt
test
outsl
aas
cwtl
jnp
insl
adc
jmp
mov
dec
jg
leave
movsl
add
mov
xor
loop
cmpsb
pop
jo
nop
mov
cwtl
and
xchg
ficoms
mov
jmp
aas
ret
rol
sbbl
and
dec
jle
js
mov
insb
rol
push
or
je
jnp
scas
js
outsl
nop
stc
ljmp
add
jl
pop
test
lods
sub
push
loopne
arpl
push
sti
cmp
xor
ljmp
sbb
mov
push
add
cmpsb
or
pop
in
dec
dec
arpl
sarb
xchg
jb
cltd
dec
mov
adc
les
cwtl
nop
mov
jmp
sbb
inc
cld
pop
push
inc
iret
sbb
mov
inc
movsl
cli
inc
adc
jbe
sub
cld
stc
jns
jmp
stos
call
sti
loop
std
loop
xchg
rclb
addr16
loope
lcall
outsb
inc
jo
ficompl
mov
xchg
cwtl
add
or
mov
jg
fcomi
outsl
pop
cld
add
shr
pop
cmpsl
cld
scas
mov
jbe
jns
and
out
or
movsl
add
mov
loop
push
pop
xchg
out
das
loop
ss
mov
sub
fstpt
sub
mov
push
inc
out
or
test
cld
mov
enter
in
xchg
std
push
or
xchg
jnp
pop
cmp
mov
lds
cltd
stos
fsub
rclb
sub
mov
das
sbb
je
loopne
add
pop
pop
in
or
xor
shlb
in
fldt
sub
or
mov
xchg
aas
shll
out
fs
jns
es
push
ss
mov
dec
sbb
and
das
mov
aaa
testb
sub
mov
sbb
sti
mov
sbb
imul
mov
inc
enter
stos
imul
lods
es
pop
add
movsl
inc
or
pop
lock
fcmovne
mov
or
addr16
dec
cmpsl
pop
jle
dec
daa
and
cli
jo
bound
pop
xchg
shl
pop
pushf
jnp
scas
fistpll
sub
push
fs
sti
push
mov
loope,pt
pop
xchg
xchg
pop
pop
mov
lret
test
adc
push
aaa
cmp
sub
mov
addr16
insl
out
add
outsb
lea
jo
xchg
and
add
es
int3
je
mov
adcb
into
sub
das
stc
icebp
test
pop
mov
push
repz
cmp
xchg
pusha
pushf
lds
stc
mov
dec
lea
and
jp
mov
cmp
rorb
out
lods
jb
push
sarl
or
push
lahf
subl
scas
psubsw
jnp
cmp
adc
sub
xchg
jbe
mov
loopne
enter
sbb
jmp
ds
cmp
mov
xchg
push
push
pop
xor
js
dec
jle
js
pop
imulb
test
and
add
test
bound
lahf
mov
cmp
fistl
cwtl
test
loopne
jge
xor
fwait
sub
push
jg
mov
mov
xor
inc
mov
lret
fucomi
or
mov
mov
or
lcall
xchg
aad
and
pop
cwtl
insl
repnz
xor
push
mov
icebp
shr
out
fbld
loopne
cld
pop
pop
bound
and
jne
mov
loope
adc
idiv
pop
movsb
mov
lods
jae
rcrl
sbb
or
mov
cli
addr16
xchg
dec
or
rorb
lea
pop
cltd
mov
add
sub
adc
sbb
fistpl
sbb
pop
jecxz
mov
sub
xchg
cmp
cwtl
cli
mov
mov
xchg
xchg
mov
ljmp
push
pop
sub
popf
pop
ds
pop
bnd
rol
testb
jmp
test
xchg
adc
push
clc
popf
mov
jne
xor
push
sbb
jl,pt
nop
add
std
jno
mov
cmp
sub
sub
lods
arpl
mov
pop
call
jno
mov
int
shlb
push
xor
insl
sub
mov
cmpl
xor
add
stos
add
loopne
data16
and
pop
jae
cmp
test
arpl
std
adc
fwait
cmp
or
dec
fimull
add
mov
jbe
xchg
fsubl
je
push
mov
and
inc
imul
shlb
xchg
jno
movb
xchg
mov
and
dec
lods
or
or
inc
jns,pn
sbb
sahf
stos
test
xchg
cmpsl
pop
mov
insb
cmc
hlt
jge
ds
pop
hlt
xchg
loop
mov
daa
push
je
dec
fisubl
xchg
imul
iret
mov
adc
xor
mov
mov
sub
mov
testb
js
cld
sub
pop
aaa
data16
into
fsubrp
add
jl
outsl
loope
pop
mov
clc
rorb
pop
push
add
push
pop
loop
sbb
mov
jno
mov
xchg
bound
dec
cmc
aas
xor
push
mov
mov
sbb
jno
cmpsb
rcl
and
add
in
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
stos
das
pop
mov
fs
js
or
insl
std
dec
xchg
xchg
lods
xchg
push
mov
jns
mov
popa
add
in
sub
push
cmc
push
cmp
pop
fidivrs
push
pop
adc
mov
and
cmp
add
or
pop
cwtl
mov
imul
adc
es
mov
and
xchg
xchg
fcmovbe
mov
or
mov
jecxz
add
pop
fsubl
cmc
pop
or
arpl
scas
sti
jno
lods
sahf
cvtps2pi
hlt
jg
test
xchg
psubusb
mov
jbe
ljmp
mov
lods
negb
pop
ficomps
fucomip
std
stos
xchg
xchg
stc
ficoms
fnstsw
dec
jge
std
loope
fstl
pop
hlt
adc
jg
mov
loop
stos
mov
scas
ds
in
imul
outsb
scas
jae
push
lret
xrelease
xchg
jno
jo
add
in
int
cmovle
fwait
or
push
adc
dec
sbb
dec
mov
jge
sahf
sub
push
mov
xorl
or
sub
mov
loop
cmp
cli
aaa
mov
cmp
dec
sub
andl
cmp
test
push
fucom
and
mov
clc
adc
add
and
and
xchg
cs
jp
xchg
js
or
xchg
shlb
sbb
or
mov
cwtl
hlt
jmp
out
pop
add
xlat
jp
test
xchg
jp
pop
out
call
and
dec
outsl
test
imul
ja
cmpsl
fnstenv
orb
pop
inc
inc
xor
or
daa
mov
scas
fistpll
add
inc
movsl
dec
nop
push
fs
call
ljmp
pop
dec
adc
mov
push
inc
sbb
cmc
lcall
mov
cmpl
sub
push
jno
dec
push
jns
mov
mov
sub
push
fildll
ja
or
les
xchg
xchg
pop
or
shrl
in
and
scas
mov
add
repnz
lret
mov
in
dec
jmp
pusha
insl
call
movl
dec
push
push
decl
and
dec
test
mov
cltd
mov
aas
loop
lds
dec
xchg
push
lock
jae
mov
inc
out
sahf
lret
dec
pop
mov
dec
fbstp
enter
push
cmc
sbb
jo
test
mov
sub
dec
pusha
add
cmp
in
pop
in
lds
outsl
fstps
daa
mov
mov
add
test
popf
aad
fimuls
mov
jnp
ss
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
rorl
insb
iret
js
fs
js
xor
sub
mov
int3
sub
push
ja
push
fimuls
sarl
mov
popf
fstl
dec
repz
jmp
pop
jnp
out
sbb
sbb
lret
jmp
in
cmp
jl
sti
adc
aas
jae
mov
mov
xchg
rorb
js
lea
push
and
pushf
lret
mov
scas
sbb
jle
push
call
mov
mov
mov
imul
jnp
push
mov
cwtl
pop
sub
sbb
test
inc
repz
push
xchg
in
inc
rorl
pusha
mov
jmp
imul
aaa
gs
jne
fsubl
xchg
xor
fiaddl
xor
mov
jge
rcll
test
lret
in
xlat
sbb
gs
pushf
dec
push
hlt
pop
add
jge
jnp
in
mov
or
leave
lret
adc
mov
fcomip
push
popa
mov
or
xor
lods
dec
cs
out
jl
pusha
dec
dec
sbb
xchg
and
mov
jle
arpl
fldenv
pop
push
mov
xchg
jmp
lods
dec
je
movsl
jb
add
push
stc
jb
mov
pop
call
jg
out
push
jmp
cmp
jg
outsl
int3
popf
push
dec
mov
cmp
cld
call
or
xor
mov
push
mov
faddp
ds
sub
imul
add
lea
cltd
into
xor
fcomip
dec
mov
mov
mov
cmp
out
mov
mov
and
cmp
aaa
or
pop
push
imull
pop
jae
scas
inc
outsb
bound
jg
cltd
pop
test
jbe
jge
sbb
rorl
test
iret
sub
repz
cmc
ja
ss
and
in
sti
cmp
rcrb
mov
sbb
adc
jecxz
scas
xor
and
push
mov
imul
xor
outsb
inc
xchg
push
js
sahf
es
dec
into
mov
inc
bound
sbb
shl
push
mov
cmp
aaa
push
cmp
inc
inc
add
jge
push
mov
lret
jnp
push
mov
or
adc
negl
sbb
call
xchg
add
lock
mov
jmp
jne
bound
push
push
pop
mov
sub
pop
xchg
dec
movsl
push
ljmp
sbb
int3
xchg
inc
subb
enter
cli
imul
lods
xchg
push
popf
insl
inc
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
subb
fs
js
jg
sarl
popa
xchg
cmp
repz
hlt
mov
mov
pop
mov
and
scas
fstpt
pop
sbb
repnz
lods
pop
leave
fs
cmc
adc
xchg
outsl
test
scas
push
dec
stos
pop
imul
ljmp
or
js
loope
jg
call
mov
sbb
lret
inc
push
sub
cld
call
es
push
mov
adc
lret
push
rorb
mov
rclb
stos
jle
cs
xchg
loopne
xchg
sbb
dec
pusha
fdivl
dec
lret
ljmp
out
inc
imul
clc
movsb
aad
ret
xor
cmp
jnp
adc
jo
add
arpl
mov
js
jl
add
and
into
jb
pushf
mov
mov
xchg
pop
add
mov
and
in
fs
mov
shlb
andl
leave
xchg
mov
sub
push
nop
not
xchg
mov
shrl
xchg
pop
in
das
movsl
push
cltd
lea
xor
ds
in
lods
unpckhps
mov
sbb
arpl
xchg
out
dec
pop
push
or
mov
mov
dec
in
xor
pushf
rol
pop
adcl
test
pop
test
fisubs
mov
arpl
jne
xor
mov
in
mov
pop
jbe
lea
adc
lcall
xor
xchg
scas
out
cltd
in
daa
mov
sbb
outsb
pusha
jmp
xchg
push
inc
sbb
aam
xor
inc
in
push
pop
dec
lods
pop
xchg
ja
and
fwait
in
inc
mov
in
xchg
push
xchg
push
pop
sarl
and
stos
les
shl
in
outsb
outsb
testb
push
imul
sarb
or
sbb
rcl
rcrl
test
fmuls
aaa
dec
jmp
out
push
fcmovnbe
les
rcll
lret
fmul
call
add
dec
pop
lret
sbb
xchg
jns
lcall
xchg
jne
pop
outsb
pop
push
scas
adcl
es
sub
pop
ds
or
adc
test
fstl
icebp
jns
in
push
pop
adc
xchg
cmp
mov
idivl
addb
loop
dec
orb
cltd
add
xor
and
inc
or
movsl
mov
mov
inc
cmpsl
fs
bsr
orb
cltd
lods
and
mov
cld
jno
fistps
pop
jnp
or
mov
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
xor
inc
inc
mov
inc
jmp
addr16
fs
mov
ret
cli
push
mov
loop
aas
notl
fs
pop
add
cmp
push
outsl
mov
jl
cmp
lock
inc
pop
xchg
adc
loope
pop
push
and
push
iret
popf
cmpl
xor
mov
adc
ficompl
daa
inc
pop
jp
cmp
add
lods
rcr
fldl
fldl
movsb
int
mov
fdiv
lcall
int3
mov
or
mov
and
xchg
mov
and
adc
xor
sub
push
sub
pusha
add
dec
in
iret
lea
popf
mov
mov
pop
mov
inc
dec
push
hlt
daa
cmp
in
aaa
cmp
adc
fsubrl
outsb
lcall
xchg
mov
int
cmp
sub
add
jge
rol
sti
js
cli
data16
stc
jne
outsb
xor
add
add
outsl
cmp
int3
mov
std
pop
orb
pop
cmp
fadds
jbe
jb
int3
xlat
sbb
or
sub
jnp
outsb
dec
sarl
adc
mov
lret
inc
mov
mov
stos
ss
pop
scas
mov
ret
icebp
mov
rcrb
jmp
ficoml
lret
in
cmpsl
dec
in
repz
add
inc
ret
push
into
xlat
and
adc
cld
fidivrs
xchg
loopne
scas
pushf
push
adc
mov
fcmovb
mov
xor
loopne
in
xchg
mov
jg
arpl
in
sub
push
rcll
test
aas
dec
and
int
es
push
sub
cmp
jns
push
subl
add
mov
push
loopne
inc
idivb
and
les
sbb
or
outsb
jbe
imul
shrl
sbb
repz
mov
mov
in
add
jbe
rcr
addl
cmc
mov
out
mov
adc
loope
push
inc
sub
popa
lock
mov
adc
lret
sub
pop
xor
dec
sahf
pop
je
addr16
cmp
inc
jno
or
rcl
sub
fsubl
xor
push
jne
andl
outsl
push
xchg
jns
and
adc
ret
push
push
or
testl
xor
mov
pusha
test
xchg
out
inc
loopne
sub
lds
xchg
scas
leave
fsub
sbb
into
lods
pop
aaa
sub
jb
aaa
inc
bound
out
dec
rorl
clc
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
mov
js
fs
js
pushf
pop
notb
xor
je
xchg
sub
dec
jnp
and
xchg
jge
mov
cmp
mov
test
mov
outsb
jno
dec
lahf
pop
and
inc
mov
jecxz
in
push
imull
out
hlt
lods
fucomi
xor
push
mov
iret
int3
mov
and
pop
les
aaa
clc
int
ljmp
pop
out
sbb
add
sbb
pushf
inc
inc
mov
test
int
dec
test
lahf
adc
out
or
sub
xor
cmp
sbb
les
test
dec
push
lret
lods
inc
sbb
jle
sbb
fcmovne
lcall
xor
stc
mov
mov
insl
adcb
into
ret
les
scas
je
jb
arpl
or
outsb
cmp
dec
int
cs
inc
adc
jecxz
add
ret
mov
cmp
pop
xchg
movsb
or
test
in
mov
clc
loope
iret
pushf
cmp
inc
pop
jne
or
xor
out
push
aaa
clc
scas
dec
adc
loopne
cli
pop
fwait
inc
aas
aam
mov
js
push
and
xchg
fistpll
push
ja
nop
icebp
dec
cwtl
insl
mov
mov
xchg
loope
pop
fbld
cmp
sub
cld
mov
mov
adc
ja
xchg
pop
test
sbb
int
repnz
scas
xorl
add
dec
fisubl
mov
mov
out
xor
std
mov
sbb
jle
in
mov
aam
push
cwtl
mov
mov
mov
loopne
xchg
cmp
fstpl
jl
cmp
aas
pop
inc
into
xor
inc
cmpsb
mov
shll
xchg
andb
and
loope
test
lds
jnp
in
lock
sub
jne
scas
outsb
mov
sbb
imul
push
in
xchg
lcall
cmpsl
mov
push
dec
push
cmpsl
fists
and
mov
addr16
jecxz
jmp
and
insb
mov
xor
xor
cwtl
iret
jno
lcall
fisubrl
inc
xchg
dec
repz
dec
cmp
es
sbb
cld
push
in
fsubrl
xchg
pop
push
outsb
ret
ret
or
lret
popa
dec
imulb
mov
and
mov
xor
movsb
outsl
dec
pop
push
push
sahf
lock
and
adc
inc
mov
cmc
push
mov
mov
loop
fldt
ret
rolb
jbe
mov
sbb
jae
inc
inc
pop
jmp
lahf
and
addr16
insb
in
mov
pop
adc
sbb
repnz
mov
out
fists
jns
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
mov
mov
js
jle
js
inc
in
inc
insb
imul
iret
xchg
clc
aas
jle
test
jle
subl
lcall
sub
jg
fwait
push
imul
add
sarl
jo
and
bound
insl
dec
sbb
cld
xchg
xchg
icebp
test
cmp
lret
sbb
scas
mov
add
fs
or
jl
and
push
stos
out
pop
scas
sbb
mov
frstor
add
pop
inc
push
fdivl
adc
test
in
pop
stos
clc
ret
push
incl
std
pop
out
push
es
in
sub
xlat
adc
sub
cld
test
mov
xor
jle
dec
enterw
popa
in
xor
jmp
fs
adc
inc
shll
mov
mov
fbld
or
in
cmpsl
inc
daa
xchg
std
mov
les
fs
push
lahf
mov
pop
jmp
test
fwait
lods
fimuls
pop
xlat
stos
add
stos
jns
arpl
push
clc
in
mov
push
mov
inc
push
jno
loop
mov
jbe
lods
mov
fnstenv
hlt
lods
dec
and
inc
daa
xor
fwait
adc
inc
xchg
fwait
push
mov
out
add
fwait
lds
xchg
pop
mov
inc
movsb
pop
mov
gs
inc
lret
mov
aas
pop
lds
sahf
in
mov
imul
je
repnz
jl
sbb
inc
es
cmc
cs
cltd
jmp
cmp
pushf
push
xchg
lods
out
cmp
movsb
mov
pop
shll
sub
sub
mov
mov
scas
mov
xor
sbb
rcrl
arpl
iret
push
push
mov
ret
push
sub
sub
inc
ficomps
sti
mov
jmp
sti
int3
push
or
sbb
ret
xchg
and
or
ljmp
mov
push
movsb
dec
fisttpll
add
rcr
lods
call
jno
xor
xor
mov
xchg
stc
repz
ja
data16
and
lcall
out
lret
and
jle
insb
lret
fwait
jnp
nop
mov
sahf
lret
and
ror
pushf
mov
lock
add
shll
mov
rorl
lods
out
xor
out
push
xchg
mov
xor
lea
adc
in
lods
not
mov
mov
push
sub
hlt
push
pop
scas
cmpsb
mov
mov
int
in
test
js
lods
arpl
mov
iret
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fmuls
fdivrs
fs
js
cltd
test
push
shlb
mov
inc
xor
jb
sahf
pusha
inc
lods
xor
je
mov
movl
and
scas
cmp
jl
les
clc
dec
out
pop
cs
jl
add
mov
mov
inc
daa
popf
popa
test
ret
cwtl
inc
mov
stc
cmc
push
and
shl
addb
idivl
push
mov
test
push
sbb
nop
adc
jb
js
xchg
jp
lods
cmpl
inc
jp
data16
sub
mov
sbb
push
push
xchg
xchg
inc
mov
scas
jecxz
inc
sbb
mov
sbb
popf
jecxz
call
push
mov
movl
add
shll
pop
ret
xor
adc
add
shlb
loop
rorl
add
cltd
movsb
rcll
in
lret
xor
cmp
ficomps
adc
test
push
inc
pop
dec
sub
sbb
xchg
outsl
cli
fnstcw
inc
das
xorl
and
sti
pop
int3
popf
shrb
mov
pop
flds
mov
cmp
push
test
mov
dec
sub
rcrl
lock
call
or
cltd
pop
les
push
xchg
daa
out
mov
pop
iret
dec
popf
jmp
xor
das
lods
jne
cmc
jb
jge
mov
xor
jno
and
aas
out
mov
fs
cmc
pop
jg
cld
cmp
sbb
inc
sbb
dec
repz
out
add
fcoms
and
enter
fimuls
cmp
inc
jne
scas
jmp
lds
ljmp
js
mov
mov
adc
push
jmp
scas
jbe
and
adc
sub
mov
in
arpl
movsb
pop
or
cmc
mov
mov
mov
jmp
push
dec
push
test
insb
sbb
inc
orb
mov
xchg
push
sub
dec
jnp
mov
jo
ret
rorb
push
and
lods
sbb
pop
int
sub
dec
add
push
hlt
mov
sbb
test
and
push
shrl
iret
jmp
jp
dec
ror
sub
in
movsl
jg
popf
add
jne
imul
jo
mov
lock
mov
pop
jg
fdivrs
test
aaa
rorb
fs
jne
testb
xor
mov
pop
lret
ds
loop
dec
jne
adc
cmp
std
test
subl
and
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
inc
hlt
fnstsw
fs
js
hlt
mov
jne
shlb
sahf
stos
notl
add
inc
sub
xchg
mov
inc
test
sub
mov
pop
push
sbb
clc
jo
adc
scas
mov
or
jmp
mov
leave
mov
mov
mov
lods
test
test
pop
adc
ficoml
fsubr
xchg
xor
cmp
loope
test
es
sarb
div
jecxz
out
pop
call
imul
push
jnp
push
mov
xor
and
lods
and
gs
lods
popf
ds
stos
mov
insb
repz
lcall
mov
orb
cmp
xlat
jmp
xchg
mov
push
push
in
cmpb
ret
mov
inc
mov
mov
mov
jne
push
in
jge
mov
mov
test
and
dec
or
lock
iret
andl
jbe
movaps
pusha
pop
push
in
loop
cmp
scas
fs
dec
js
jnp
ja
and
jno,pn
sbb
cs
aas
add
xor
sub
aad
or
mov
adc
jge
ret
push
outsl
add
movsb
mov
xchg
ret
xor
pusha
adc
inc
cmp
fisttpll
sbb
jmp
xor
push
inc
cmp
sub
gs
sub
xchg
cwtl
xchg
adc
ror
dec
pop
insl
outsb
cmc
hlt
jp
jne
mov
test
popf
pop
pop
pop
jge
mov
pop
inc
ss
sub
enter
pop
in
repnz
or
pop
sbb
das
mov
cmp
imul
daa
lahf
adc
sub
inc
ret
test
sbb
ror
xor
call
cwtl
sub
int
stc
pop
pop
or
movsb
mov
es
clc
into
inc
xor
flds
sub
dec
in
icebp
add
or
fwait
adc
xrelease
mov
ss
xor
add
pusha
popf
add
xchg
lds
icebp
mov
xchg
clc
adc
push
in
loope
xchg
add
xchg
adc
cmp
loop
or
mov
mov
loopne
mov
dec
mov
ja
pusha
jp
dec
sbb
gs
mov
nop
push
into
cwtl
cmp
mov
xchg
and
jle
pop
mov
cli
pop
and
adc
cmpsb
mov
andb
push
fwait
jle
loop
ret
xlat
ret
addr16
movsb
xchg
outsb
int3
sub
mov
pop
dec
daa
and
cmp
add
adc
xor
and
mov
pop
jno
push
mov
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
and
or
sahf
stc
and
div
add
xlat
std
pushf
rcrb
ror
rcll
xor
jmp
js
cmpsb
rorb
xchg
mov
stc
xor
and
dec
xchg
call
ljmp
ja
sahf
mov
test
adc
sarl
int
mov
repz
mov
adc
and
inc
xchg
sub
adc
out
out
jle
jae
rorb
lock
stos
or
sbb
sub
aam
add
arpl
push
subb
insl
push
dec
jbe
jmp
add
sahf
aas
pop
das
push
sbb
jg
jmp
adc
and
nop
inc
rclb
push
add
rorl
out
cmp
pop
pushw
xchg
stos
das
pop
or
xchg
ljmp
push
xchg
mov
push
icebp
in
fimuls
repz
mull
aam
lods
xchg
push
sub
mov
mov
pop
adc
ss
adc
jbe
mov
imul
or
pop
pushf
ja
pop
jle
cmp
arpl
into
and
fimull
jne
mov
xlat
mov
xor
pop
xchg
lret
pop
jl
scas
or
cs
sbb
rcrl
push
icebp
lret
shll
loope
jne
jecxz
add
cmp
popa
fidivs
pop
lret
mov
jno
fsts
sub
bts
ja
shrl
imul
mov
std
test
or
adc
pop
aam
fwait
test
pop
mov
mov
push
mov
ret
inc
mov
add
movd
fdivs
mov
call
jecxz
xchg
jne
mov
jno
cmpsl
mov
je
mov
in
dec
pushf
cld
js
xchg
pop
and
adc
dec
lock
adc
xor
gs
loop
mov
xor
inc
dec
out
xor
push
fidivrl
jmp
adc
in
in
jp
jnp
jnp
repz
sub
test
das
int
xchg
adc
cwtl
test
dec
mov
aas
arpl
push
mov
cmpsl
outsl
lcall
pop
mov
test
imulb
push
mov
cwtl
jbe
mov
xchg
ss
cltd
lea
and
pop
lds
jno
jg
xor
scas
mov
cmp
cmp
fwait
push
xor
in
or
pop
in
mov
fistps
ljmp
sub
sbb
lcall
inc
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
cmc
das
add
out
js
jle
js
lods
push
push
cltd
jmp
call
outsl
inc
adc
out
fidivrl
jnp
test
cli
xor
daa
add
adc
fistl
add
xor
daa
pop
xor
cwtl
fdivs
xchg
pop
inc
fcompl
jbe
rcl
bnd
jge
cmpsb
jo
sbb
scas
xchg
cmc
cmpl
fwait
into
int
mov
cmc
insb
enter
shl
jo
xor
lahf
adc
scas
cltd
sti
push
aad
sbb
imul
sbb
movsl
push
lock
in
shr
jle
adc
out
test
sti
jl
mov
cmpsl
scas
jbe
push
xorl
push
mov
in
pop
das
cwtl
mov
repnz
int3
xchg
ja
lods
xlat
add
popf
ud1
paddb
test
shr
repz
and
jno
push
jbe
cmpsl
adc
xchg
inc
xor
push
mov
and
sbb
sbb
and
mov
cmp
jecxz
ret
mov
jg
adcb
push
xor
add
xchg
mov
jnp
jp
adc
inc
outsb
xchg
pusha
mov
adc
adc
mov
fiaddl
rorl
mov
add
jae
inc
fstps
fwait
cli
adc
fdivrl
inc
subl
push
push
push
adc
mov
xor
push
sarl
push
jns
jno
inc
in
sbb
leave
xor
cmp
fstl
cli
push
cs
imul
push
inc
call
dec
pop
popf
xchg
insl
les
in
adc
pop
insb
jmp
dec
data16
pop
xor
fwait
and
test
clc
adc
imul
xor
imul
ja
jne
les
in
dec
inc
mov
mov
sbb
lods
je
or
lea
mov
mov
je
mov
or
iret
jmp
pusha
mov
fsubrl
rorl
add
or
push
wrmsr
sbb
fcoml
aas
xchg
jmp
xor
dec
xor
add
pop
imul
scas
and
out
pop
xor
dec
scas
daa
out
sbbl
mov
fmul
push
sbbb
jmp
scas
shrl
pushf
out
jle
bound
neg
and
push
out
ljmp
test
dec
xor
inc
adc
xchg
inc
aam
pop
pop
and
add
sti
xor
pop
cmp
cmp
xor
dec
clc
xor
push
fwait
push
insb
mov
pop
inc
or
icebp
jmp
xor
js
push
dec
jb
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
xor
cmp
js
cmpsl
jle
js
and
out
and
insl
xor
std
int
mov
mov
pop
scas
xlat
stos
push
shlb
cltd
mov
repz
ret
enter
xor
pop
ja
aas
pop
mov
push
mov
adc
xchg
stos
ja
in
mov
push
lods
xor
xor
dec
mov
movd
add
mov
adc
fadds
mov
pop
mov
jg
outsl
stc
scas
cli
fwait
pop
pushf
in
jle
cld
pop
mov
cmp
std
jns,pt
push
rcll
loop
out
loope
mov
cltd
out
in
scas
push
push
and
in
test
jne
int3
dec
out
sub
popa
pushf
sub
mov
xlat
push
imul
scas
out
subl
mov
andl
push
sub
xchg
adc
call
outsb
outsl
or
pop
mov
push
cli
pop
mov
mov
sbb
pushf
mov
popa
adc
lods
fsubp
jns
cmpsl
push
xor
sub
jb
adc
movsl
jno
dec
dec
scas
mov
add
outsb
xor
fstl
int
ficomps
push
out
out
addl
cwtl
cmp
into
mov
cwtl
inc
movsl
cmp
cld
in
or
scas
in
ja
sarl
add
sar
iret
jae
fdivrs
mul
pop
in
mov
test
sub
push
cmp
pushf
aad
push
insl
cmpsb
dec
and
sbb
cmp
xlat
sub
adc
push
push
test
ja
ja
xchg
mov
gs
or
adc
les
orl
or
gs
inc
mov
out
jge
xor
or
sbb
sub
mov
cwtl
push
jns
push
dec
and
repz
lds
sub
xor
mov
xchg
dec
or
adc
jle
daa
cltd
icebp
mov
cmp
sub
sub
add
jle
and
ret
pop
mov
sbbb
jns
fsts
and
movl
mov
in
cwtl
jo
ljmp
mov
xchg
xchg
adc
xlat
lock
pushf
or
xor
lea
xchg
sub
stos
out
inc
out
jnp
sbb
stc
dec
cmpsb
mov
mov
xor
or
mov
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
cmp
ljmp
push
pop
ret
loopne
sbb
in
arpl
or
sub
pop
jecxz
ja
fmull
ds
jae
dec
aad
rorb
jns
sbb
adc
lcall
aaa
lds
mov
rcl
fst
lds
mov
flds
paddq
popf
pop
scas
fmull
pop
mov
insb
test
test
fucom
cmp
lret
aaa
xor
shrb
lcall
dec
mov
cmp
loopne
fisttps
add
lret
leave
shll
pop
mov
out
sub
jb
lahf
test
aas
sub
jns
mov
cwtl
xor
cld
sarb
inc
movsb
xor
jae
dec
in
inc
pop
loopne
and
inc
iret
leave
out
cltd
imul
hlt
shlb
mov
adc
dec
out
pop
out
push
rcl
sub
jecxz
jno
push
bound
daa
enter
loop
xchg
adc
xor
icebp
add
jecxz
adc
test
sbb
xchg
dec
scas
xor
and
push
cmpsl
jge
cli
jge
inc
daa
xchg
daa
clc
xor
xor
cmp
push
in
push
and
pop
adc
ljmp
negl
bound
ljmp
pop
nop
call
mov
lds
test
pop
inc
inc
loop,pn
xchg
rorl
and
lock
fmull
sbb
xor
xchg
daa
loopne
mov
jb
ds
jle,pt
mov
cltd
or
ficompl
lods
mov
add
adc
mov
sub
jmp
inc
rcrl
pop
adc
or
push
sub
js
jns
and
outsl
imul
or
cmp
mov
pusha
rol
testl
loopne
xchg
cmc
push
mov
add
out
pop
xchg
lods
testl
mov
xchg
fldt
loopne
mov
adc
inc
mov
loope
clc
into
jnp
xlat
sub
popa
repz
jle
cltd
aas
enter
mov
shrb
jmp
ds
sbb
cli
add
mov
gs
add
jbe
sub
jl
idivb
out
das
movsb
xor
test
and
stc
lahf
xchg
cmpsb
fucomi
inc
cmp
xchg
mov
aam
lock
jne
jmp
lret
cmp
mov
sbb
add
jle
js
bound
or
cmp
xchg
icebp
nop
popf
nop
add
icebp
pop
jle
lods
shll
cli
sbb
cmp
jae
pusha
add
mov
fadd
inc
inc
push
lods
mov
pop
or
daa
into
push
orb
fisubl
or
mov
cmp
mov
fxch
adc
dec
pusha
out
mov
ficomps
mov
xor
mov
mov
sub
fwait
push
dec
pop
in
xchg
inc
mov
aad
or
daa
fdivrl
sbb
mov
and
adc
jle
loop
jecxz
jns
insb
fiadds
aas
jp
dec
xchg
jne
leave
xor
mov
std
xor
cmp
adc
cli
inc
add
in
mov
out
jns
sub
scas
jecxz
xor
inc
nop
mov
xor
sbb
sub
lcall
pop
push
or
push
lea
cmp
push
sbb
icebp
or
pop
lcall
inc
adc
inc
add
fisttpll
mov
adc
jmp
inc
push
shr
jmp
push
data16
lret
mov
std
pop
mov
push
lahf
shll
mov
cmp
into
cmp
clc
inc
scas
push
mov
fmull
adc
call
add
pusha
loopne
aas
dec
icebp
mov
add
sub
jne
xlat
sub
add
dec
subl
pop
jbe
jg
bound
and
jno
mov
iret
xlat
xor
aad
mov
or
insl
sbb
push
cltd
push
jbe
push
push
test
jb
sbb
inc
jle
fisttpll
xorb
add
sub
sbb
ss
dec
sbb
lcall
jo
dec
jns
push
call
in
sbb
test
shlb
add
xchg
cmp
mov
das
dec
les
jo
xlat
pop
sarb
sbb
insl
pop
xchg
pushf
xchg
dec
bound
rorl
enter
movsb
push
sub
es
fs
push
ljmp
adc
out
call
test
fadds
repnz
jle
pop
hlt
scas
pop
sti
lods
loop
scas
mov
insb
xor
js
push
ds
ljmp
cld
cmc
push
cmp
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
shll
cmpsl
jle
js
fs
add
xor
pop
jmp
in
sub
mov
int
mov
fs
jmp
pop
sub
insb
and
inc
arpl
push
cld
mov
out
mov
into
sbb
rcll
pop
test
inc
lds
out
inc
xor
popl
push
cwtl
xchg
fcomp
inc
test
pusha
jmp
pop
jge
out
out
test
push
xor
lea
pop
mov
cld
cld
jno
inc
daa
sarb
call
jg
daa
sbb
inc
jns
cmp
cld
call
jns
outsb
mov
xor
xor
lea
out
je
lods
movsb
lods
popf
fidivrl
mov
ds
test
test
jl
cmp
dec
jb
fists
shrl
mov
jo
xchg
mov
adc
mov
pop
dec
add
std
popf
fimuls
sub
inc
fistpll
xchg
aad
loopne
sbb
adc
mov
mov
dec
and
jle
pop
popf
xchg
mov
add
mov
jle
inc
out
xchg
adc
cmp
out
cwtl
sbb
dec
lcall
inc
cwtl
inc
mov
jno
pop
ret
sub
dec
in
es
cmp
popa
push
sbb
inc
iret
sub
cmp
inc
push
dec
fadds
jle
pop
xchg
jnp
idiv
cli
pushf
and
test
dec
negl
mov
and
into
das
mov
push
jle
or
mov
jge
dec
je
jno
xor
int3
insl
add
sbb
repz
mov
adc
mov
pushl
int3
sbb
sbb
xor
cld
mov
aas
or
push
jno
add
sbb
push
and
in
jo
int3
and
sub
mov
fwait
push
mov
jg
leave
xor
sub
cwtl
icebp
pop
push
mov
mov
and
mov
lahf
cmp
inc
cmpsb
popa
jb
xchg
sbb
dec
adc
ret
jecxz
aas
mov
cmp
in
mov
xchg
and
or
sub
cmp
jle
jmp
test
aaa
data16
std
or
jle
out
dec
sti
mov
cld
lock
xor
sbb
test
mov
stos
arpl
insl
and
shl
cs
orb
cmp
add
mov
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
in
sbbl
push
jle
js
addr16
js
cmp
nop
jle
pop
cltd
add
sub
xchg
jp
pop
push
pop
arpl
adcb
xchg
cmp
fiadds
les
dec
shrl
mov
jne
lock
mov
orb
testl
pop
dec
stos
and
push
call
shlb
ss
insl
enter
mov
mov
movsb
ljmp
jae
add
jecxz
fildl
pusha
add
mov
movsb
insb
leave
dec
mov
pop
xor
jns
andl
sbb
xchg
sub
adc
and
lods
sub
inc
or
cs
dec
jge
mov
pop
xchg
cmp
and
xchg
lret
adc
shl
cmpsb
test
cmpsl
mov
gs
sbb
sahf
call
sub
xchg
call
cld
bound
dec
push
mov
inc
adc
pop
jno
mov
dec
mov
mov
push
push
outsb
xor
pop
cmpsb
xchg
xor
sti
jno
hlt
jb
rcr
lret
mov
xchg
inc
popl
xchg
inc
push
sub
iret
dec
jb
notl
cmp
xor
fucomi
xor
sub
pushf
das
mov
add
or
hlt
lahf
mov
and
sahf
jecxz
cmp
push
lret
mov
in
jb
mov
dec
out
jle
push
in
push
loopne
stc
ficompl
in
mov
adc
ret
fisubrl
nop
push
inc
aas
xchg
rolb
xchg
mov
ds
out
hlt
cmp
dec
jle
insl
sub
mov
cmp
into
outsb
ss
pusha
outsl
sbb
ja
xor
push
jecxz
je
dec
mov
or
add
cmp
pop
cli
jns
sbb
mov
sub
sub
ss
xchg
shlb
mov
fstl
insl
sub
fwait
inc
loope
mov
test
xor
out
testl
mov
leave
pop
pusha
out
fidivs
adc
sti
aam
push
out
and
out
cmp
stos
jp
and
insl
scas
loopne
pop
frstor
arpl
and
test
dec
and
rorl
cwtl
out
dec
cmp
jo
cmp
lahf
pop
adc
not
sti
dec
dec
cmpsb
xor
adc
fistl
or
cmp
int
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
xor
mov
js
push
jle
js
adc
or
and
icebp
idivb
pushf
mov
mov
push
pop
and
fisubrl
int3
loopne
inc
iret
adcl
repnz
xor
or
out
pusha
or
dec
lahf
jmp
sahf
push
stos
mov
inc
xor
adc
jae
or
jne
add
movsb
out
dec
cmpsl
inc
cmp
jmp
xchg
aaa
dec
push
xchg
push
pop
sub
push
sub
pop
xchg
sub
and
xlat
fisttpll
imul
insl
or
movsl
cs
add
cmc
cmp
movsl
repnz
lret
lods
test
in
mov
mov
outsb
lods
das
pop
inc
mov
mov
ret
mov
jae
pop
lcall
into
test
push
sarl
filds
sub
xor
loope
pop
add
in
add
sbb
pop
in
test
pushf
jno
js
add
cli
ss
xor
push
aad
out
xlat
int
je
jnp
cmpsl
sbb
leave
addr16
dec
pushf
cmpl
nop
or
lea
xchg
mov
addr16
call
lds
push
in
add
out
cs
mov
std
aaa
test
in
xchg
imul
out
push
mov
imul
mov
fistpl
js
and
sbb
fiaddl
std
outsl
rorl
lea
sub
decb
push
xchg
cmp
outsb
mov
adc
dec
sub
xor
push
repz
xchg
push
repz
adc
stos
dec
cld
mov
into
cmpsb
jnp
sarb
pop
adc
mov
cmp
das
cmpsl
cwtl
popa
loopne
out
ja
sbb
push
jb
es
scas
mov
incb
in
popa
enter
inc
add
mov
push
push
js
mov
lahf
jl
stos
cmp
cmp
push
out
cmp
repnz
inc
cltd
dec
lret
push
mov
lds
cltd
mov
jl
in
mov
shlb
ret
cli
insl
in
adc
cld
lret
fs
cmp
mul
add
lcall
inc
add
stos
loop
dec
sub
push
jg
dec
inc
int3
inc
fisttpl
or
mov
test
cmpl
scas
cmpsl
push
loopne
rclb
idivb
adc
movsb
inc
add
icebp
lahf
stc
hlt
jbe
jle
jnp
std
pop
cmp
dec
movsb
aaa
pop
lods
mov
cmpsl
mov
std
inc
and
scas
sbb
jno
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
sar
adcb
pop
outsb
sbb
push
das
rcll
mov
test
cmpsb
xchg
sahf
fdivrp
enter
scas
clzero
rorl
pushf
sarb
fisubl
out
or
shl
gs
mov
jo
dec
mov
sarb
jg
jo
insl
pop
mov
test
gs
jl
addr16
jg
ds
add
mov
or
lea
mov
mov
subl
jno
lods
test
out
inc
in
addr16
pop
sub
sub
call
int
mov
cmp
xor
push
xchg
xor
push
bound
jns
push
add
pusha
in
sti
clc
pop
imul
jbe
and
sbb
jns
das
jb
loope
pop
iret
adc
pop
xor
movsl
out
orb
sub
mov
push
dec
mov
enter
call
inc
ljmp
pop
add
mov
testl
xchg
cvtps2pd
fmul
lds
add
inc
xchg
inc
push
outsb
outsl
call
shlb
or
xlat
cmp
pop
sub
cmpsl
dec
mov
rcl
sbb
les
sub
xlat
out
inc
or
or
loopne
pusha
push
mov
mov
adc
mov
inc
pop
xor
cli
xor
push
aas
pushf
mov
aam
es
ds
mov
dec
add
mov
or
outsl
das
arpl
mov
stos
mov
push
loopne
test
test
pop
test
movsb
lods
sbb
bound
dec
jns
pop
sbb
in
stos
jbe
or
sbb
insb
imul
push
lds
sub
inc
xor
dec
pop
xchg
insl
push
dec
lahf
jb
imul
addb
fdiv
movsl
mov
stc
fdivl
mov
dec
mov
push
movsb
mov
xchg
out
xlat
dec
ret
add
ror
adc
daa
shr
push
hlt
push
push
sub
push
lret
push
inc
scas
loope
insl
stos
add
cmp
adc
pusha
scas
ffreep
pusha
xor
pop
or
jecxz
cltd
push
leave
xorps
stc
int3
inc
in
sub
or
ret
clc
or
icebp
adc
inc
cli
std
xchg
inc
jae
lea
mov
jne
aam
mov
hlt
ret
sbb
xor
adc
and
sbb
aam
test
mov
test
fwait
lds
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
jmp
je
js
pop
pop
inc
mov
xchg
shrl
icebp
ss
mov
ficompl
xor
push
test
nop
ja
pop
iret
adc
stos
into
inc
cmp
arpl
xlat
or
xor
aam
idiv
sbb
mov
jne
outsb
inc
cmp
js
mov
sbb
xlat
sub
pop
movsl
adc
or
js
lods
es
popa
xor
inc
scas
mov
stc
pusha
popf
shrb
pop
push
adc
stc
shlb
inc
pop
mov
test
insb
in
xor
out
leave
sbb
push
sbb
dec
push
fdivs
jmp
push
adc
add
sub
mov
xchg
inc
lds
sub
mov
xchg
mov
mov
jne
fs
stos
mov
daa
loope
and
dec
js
dec
pop
leave
movsb
push
imulb
insl
sbb
insb
stos
pop
sub
or
and
adc
in
cwtl
mov
sub
js
cmp
push
sbb
mov
jge
mov
cmpsb
pop
je
out
rcll
mov
fs
aad
inc
lods
sub
mov
mov
dec
mov
imul
inc
xchg
pop
lret
mov
adc
jnp
aas
cmp
loopne
fimull
in
mov
inc
and
pmulhw
and
cmp
popf
jl
xchg
cs
scas
sbb
fstpl
mov
shr
lods
frstor
pop
scas
vorps
sbb
pop
and
jmp
inc
pushf
adc
pop
call
addr16
rcrb
dec
adc
mov
adc
addr16
jmp
sbb
jge
dec
sbb
ljmp
test
in
sub
inc
xor
push
mov
jg
pushf
std
inc
xchg
cmp
ret
jne
mov
pop
rorb
test
jge
cmpsl
mov
arpl
dec
jge
xchg
iret
xchg
loope
leave
int
mov
jne
push
repnz
lret
int3
outsl
divl
xchg
inc
ss
imulb
cmp
movsb
mov
adc
lods
mov
mov
pop
call
dec
pop
ret
sub
mov
imul
loop
pop
adc
adc
jne
mov
in
out
fdivrl
jb
pusha
jcxz
pushf
cltd
mov
pop
and
push
add
inc
aad
sub
cmp
lret
test
dec
cmp
inc
lea
lcall
out
sub
mov
mov
pop
mov
shlb
or
iret
fnsave
imul
push
and
fscale
cmp
pop
fmuls
int
inc
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
sbbb
je
js
jl
or
scas
fildl
mov
cli
cmp
dec
inc
std
jmp
sub
cmp
adc
adc
aam
cli
dec
loope
jp
fwait
in
frstor
and
add
decb
sub
fimull
push
xor
dec
test
lret
outsb
rcrl
mov
bound
push
jmp
aad
xchg
ss
into
movsl
inc
jecxz
pop
call
mov
addr16
jmp
pop
push
cmp
subb
sub
cmp
push
mov
lods
cmp
in
fs
xchg
sub
push
int3
int
stos
aam
pusha
fnstenv
xchg
fists
mov
out
jbe
in
lock
sarl
imul
add
or
adc
mov
imul
pop
cmp
lds
push
cs
fistpll
in
adc
icebp
outsl
sbb
out
add
cmp
cmpsl
test
neg
arpl
mov
js
mov
loop
jp
jbe
cmp
cmpb
ret
xlat
xor
push
bound
dec
movsb
inc
sub
or
sahf
push
push
or
stos
inc
or
xchg
aas
repz
js
fisubl
sahf
push
inc
jae
daa
inc
nop
pop
add
lret
pop
xchg
lods
fldenv
adc
sbb
mov
mov
mov
dec
or
dec
enter
loop
xor
pop
in
rclb
cli
loopne
cld
pop
push
repz
mov
roll
pop
in
imul
andb
add
or
repz
leave
jnp
shrb
xor
pop
nop
mov
xchg
mov
mov
stos
test
fstp
orl
icebp
pop
or
cld
adc
mov
xorb
iret
movsl
pop
push
mov
cmc
sahf
mov
xchg
cs
pushf
mulb
fwait
aaa
mov
sbb
xor
xchg
inc
ficomps
popf
push
mov
xchg
mov
push
jae
sarl
jmp
cmp
mov
add
cmp
xchg
pop
and
dec
sti
sub
xor
dec
je
daa
sub
dec
int
mov
pop
ss
mov
cltd
cld
or
sub
xchg
sub
test
or
jno
mov
sbb
mov
subl
jp
and
jnp
cld
ss
ds
or
or
push
jge
xchg
out
mov
mov
cmc
repnz
in
out
add
ret
push
sub
cwtl
jbe
call
sahf
jb
push
cmp
scas
cmp
mov
inc
lods
push
movsl
andb
cmp
into
out
and
out
xor
stos
loope
add
inc
addr16
mov
in
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
icebp
lret
js
je
js
leave
insl
addr16
xor
pop
std
je
stos
out
xor
push
and
push
jl
add
xchg
cltd
fnsave
fidivs
xchg
pushf
jb
outsl
loope
shll
mov
in
cmp
add
pusha
and
or
pop
and
insb
pop
push
movsb
out
inc
cs
inc
pop
lahf
mov
pop
cld
pop
sub
fsub
std
aad
sbb
std
arpl
mov
lea
adcb
push
je
arpl
mulb
cmpsl
ds
pop
test
fcmovb
pop
jle
mov
mov
mov
sbbl
outsl
cmp
mov
push
jecxz
pushf
or
ret
adc
outsb
push
lcall
inc
mov
push
in
xchg
xchg
lods
arpl
xor
mov
xchg
ret
js
mov
data16
lcall
test
mov
adcl
or
addr16
faddl
dec
xchg
clc
pop
dec
push
insb
fs
lahf
notl
lock
fs
xchg
fwait
mov
cmp
push
stos
daa
sbb
push
daa
sbb
push
aad
push
pop
test
dec
lret
out
cmp
or
pop
inc
add
xchg
dec
mov
xor
mov
pop
sub
cmpsl
adc
rcll
mov
sub
and
mov
and
jle
dec
repz
push
or
je
dec
xchg
jp
xor
popf
sbb
lea
stos
or
dec
loopne
inc
mov
cmp
pop
lret
js
mov
pinsrw
pop
pop
pop
imul
jmp
cli
inc
push
inc
push
and
daa
xor
inc
out
pop
rcrl
movsb
popa
inc
lods
arpl
add
popf
sbb
decb
mov
dec
mov
sbb
xor
cmc
addr16
lods
xchg
xchg
repnz
jmp
pop
mov
movsb
xchg
repz
mov
add
jbe
add
sbb
ret
movsb
loope
xor
mov
addr16
push
fistpl
lods
insl
lods
mov
inc
push
sub
pop
ja
iret
or
or
xor
call
ret
outsl
dec
ja
cmp
mov
xor
add
loope
jg
stos
inc
aaa
insl
test
mov
scas
mov
push
ffree
xchg
mov
jbe
outsl
xor
push
imul
loopne
sbb
gs
and
lock
cmpsb
lds
test
jmp
insb
xchg
or
xor
jmp
sub
stos
pop
mov
inc
pop
dec
gs
arpl
inc
or
gs
call
mov
stos
mov
dec
fwait
insb
ficomps
adc
or
jmp
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
sysexit
pop
nop
push
cmpb
jle
js
cs
and
push
cmp
adc
xchg
dec
inc
or
cli
inc
in
fsubr
xor
fwait
xorb
sub
jmp
sub
fbld
inc
out
xchg
arpl
inc
cltd
sarb
lret
or
or
pushf
mov
cmp
mov
enter
push
cmovnp
jg
xchg
or
ret
lcall
mov
push
sub
int3
mov
rorb
fdivrl
pop
ss
dec
mov
mov
inc
push
jb
cmc
jl
loop
lea
add
xor
or
or
stos
inc
div
jecxz
mov
das
aas
jmp
mov
push
jb
scas
mov
jle
adc
aad
mulb
inc
dec
in
rolb
mov
mov
and
stc
divl
or
mov
jbe
hlt
aam
test
mov
mov
cmp
mov
xor
jge
rclb
mov
hlt
xor
fists
or
xchg
xor
pop
leave
sbb
jg
cmpb
bound
xor
mov
mov
dec
jbe
fcmove
cmp
sbb
fstl
mov
mov
popf
mov
mov
popf
in
pop
xchg
or
fnstsw
jae
jmp
test
mov
daa
xchg
pusha
shlb
pop
xchg
cmp
jae
push
pop
pop
mov
mov
int3
in
xchg
inc
loope
jmp
sahf
and
cs
pop
or
iret
mov
xor
pop
inc
sub
cld
fstl
sub
mov
add
xchg
ss
mov
cmp
dec
xor
cmc
jae
mov
aas
pushf
mov
xchg
lcall
pushl
adc
or
mov
ret
push
xor
jne
pop
add
xchg
mov
popf
pop
dec
cmp
mov
jb
in
dec
outsl
inc
sbbl
cmpsl
aad
inc
leave
sbbl
out
pop
and
mov
lret
push
call
test
aam
in
adc
in
in
xor
lret
push
dec
xchg
adcl
hlt
pop
lahf
icebp
pop
mov
stc
lods
or
sbb
mov
clc
inc
mov
fimuls
aaa
jmp
clc
out
ss
clc
adc
pop
imul
adc
mov
mov
fcmovb
inc
sub
sub
popf
call
mov
xchg
mov
popa
aam
outsb
int3
mov
aaa
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
dec
add
rcl
test
je
js
mov
test
jae
imul
fstps
aad
out
mov
daa
pop
add
stc
shll
imul
in
jae
jmp
mov
jg
in
pusha
mov
loope
adc
sub
lds
and
mov
xchg
mov
xlat
cmpsl
icebp
sub
pushf
push
cli
adc
and
dec
insl
dec
sub
mov
insb
pop
mov
subl
jl
clc
pusha
fwait
ss
jg
push
xchg
call
xor
mov
lret
mov
sbb
insb
fnstsw
push
or
loope
xor
mov
nop
fnstcw
push
dec
mov
jmp
gs
inc
jno
mov
sbb
mov
ret
or
jo
push
push
decb
icebp
mov
cwtl
aam
add
rclb
dec
test
sub
jl
daa
idivl
or
out
insb
inc
add
jecxz
inc
lods
dec
cmp
pop
popf
add
push
push
and
sub
mov
push
adc
cmp
clc
out
xchg
int3
pop
inc
outsb
sub
mov
mov
cmp
test
sub
lahf
push
neg
nop
repz
dec
mov
aad
pop
fs
mov
jge
mov
mov
or
fidivl
addr16
jbe
mov
add
mov
add
shlb
or
push
pop
cmp
or
movsl
mov
xor
or
ds
aaa
loope
fistps
xchg
sub
subl
or
jmp
sbb
std
mov
pop
ret
pop
mov
test
fdiv
pop
daa
or
dec
into
data16
sub
imul
push
popa
mov
popf
mov
dec
xor
stos
cmpsb
and
jle
popf
pop
adc
les
in
mov
test
pop
cmc
and
xchg
lods
out
stos
fs
jbe
dec
cltd
jp
jo
inc
ret
hlt
mov
xchg
xchg
xchg
enter
dec
iret
into
sahf
adc
add
add
and
es
cld
push
loop
insb
push
xchg
sbb
and
inc
jg
add
push
xor
scas
add
or
out
mov
imul
dec
mov
pusha
xor
lea
sub
pop
test
xchg
sbb
mov
sti
or
mov
or
movsb
sbb
mov
jb
cmc
js
fwait
mov
cs
jecxz
mov
jno
loop
into
push
xchg
sub
loope
repz
sahf
rorl
xrelease
cmp
jmp
rol
leave
fcmove
rcl
pop
mov
shll
mov
je
js
push
add
push
popf
and
sbb
in
sbb
adc
push
mov
pop
cmp
xor
pop
lods
clc
jnp
mov
in
push
mov
rclb
xchg
mov
sub
sti
daa
mov
sub
cltd
mov
aas
sarb
inc
jle
adcl
ds
in
push
xor
dec
dec
scas
inc
xor
fcomps
out
or
iret
xor
bound
adc
inc
mov
inc
das
jp
imul
into
dec
fbstp
test
fdivrs
movsl
ret
pop
jl
mov
mov
gs
and
mov
mov
push
pop
sti
rcl
pop
push
icebp
push
shr
shlb
pop
and
stc
and
jl
or
pop
cmp
push
sub
dec
out
pop
push
xchg
mov
pop
mov
lcall
inc
xchg
das
add
xorb
out
xor
or
cld
adc
mov
outsb
es
fadds
cmpsl
mov
stos
nop
mov
js
mov
cwtl
insl
mulb
mov
pop
out
jae
cmp
pop
imul
call
int3
fimuls
jne
mov
jge
mov
jo
xor
xchg
add
fnstcw
notb
stos
mov
test
fadds
negb
jle
cmpsl
sahf
push
jmp
loopne
sub
addr16
dec
lods
lret
mov
push
movsl
daa
out
aam
sahf
pop
mov
add
addr16
jns
sti
out
push
ret
or
fiadds
pushf
lods
inc
fisttps
xchg
sub
sbb
mov
jmp
mov
fisttpl
push
jge
jmp
ror
cmp
mov
mov
cwtl
aam
cmpsl
xor
pop
leave
push
arpl
and
mov
testl
mov
xlat
repz
push
ss
sbb
mov
push
inc
notb
mov
stos
fildll
neg
mov
jg
or
jno
rorb
push
cmpsb
sbb
sbb
in
add
shlb
scas
jne
fcmovnu
lahf
or
mov
subb
pop
jmp
dec
push
pop
jae
sbb
jp,pn
adc
test
insl
sbb
xchg
int3
add
or
not
fwait
or
fistpl
push
lahf
repz
mov
fdivl
mov
jno
ja
insb
cmp
movsl
mov
add
ja
arpl
lret
xchg
not
xchg
in
and
mov
push
sbb
mov
mov
dec
shr
cld
sbb
pop
mov
xlat
jo
cld
stc
les
mov
rol
andl
test
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
fwait
lret
lret
js
jle
js
pop
xor
and
mov
mov
mov
ret
cmpb
pop
cwtl
aaa
sub
cmp
xchg
into
imul
out
rcrb
nop
cmp
mov
xlat
popf
into
ficoms
dec
jg
ljmp
inc
jmp
push
inc
loopne
test
shrl
adc
inc
push
nop
lret
in
jnp
mov
dec
addr16
shrb
popf
stc
push
rolb
jmp
test
mov
out
xorl
ljmp
jecxz
push
out
lods
inc
leave
jno
adc
sahf
dec
aad
mov
mov
xchg
and
pop
cmpsl
dec
and
adc
sti
mov
jb
shll
pop
rolb
stos
jge
sub
inc
jmp
push
popf
sbb
inc
dec
in
adc
jb
lock
pop
cmp
pop
sub
lcall
fldenv
mov
xor
pop
xchg
mov
or
in
stc
mov
repnz
leave
repz
cmp
popf
in
mov
out
and
pop
push
fidivrl
rcpps
repz
jbe
xor
fs
cmp
cwtl
pop
pop
mov
addl
push
pop
aam
dec
cltd
push
insb
and
cmp
pushf
ss
mov
xchg
xchg
xor
ja
push
lods
mov
add
push
and
mov
fbstp
out
sub
fistl
inc
pusha
les
sbb
mov
dec
movsb
cmp
shlb
in
dec
mov
int
jns
dec
dec
jo
inc
mov
mov
shrl
gs
roll
fiadds
push
cwtl
stos
dec
push
add
fistpl
ljmp
scas
shl
cld
mov
hlt
mov
push
fs
sub
ds
into
stc
das
lea
add
mov
rcrb
push
lahf
add
les
push
jmp
imul
sub
lret
lea
jecxz
fwait
lret
adc
addl
and
int3
pushf
lret
jns
cwtl
add
adc
add
mov
sub
movsb
out
add
mov
insb
mov
in
jp
cmp
bound
dec
xchg
or
lcall
adc
sbb
push
in
mov
sahf
and
iret
out
inc
pop
jb
ja
dec
test
bound
pop
in
mov
outsb
in
xchg
aad
sub
push
clc
push
push
int3
add
jl
nop
mov
cmp
push
jo
jmp
test
incb
jns,pt
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
shrl
outsb
xor
je
js
iret
jo,pt
mov
jbe
jns
jne
imul
dec
enter
or
mov
add
outsl
fwait
adc
mov
std
mov
jg
lods
jo
xchg
push
sub
shl
outsl
movsl
jge
add
ja
rorb
shl
jnp
cwtl
xchg
popa
les
lcall
add
sbb
cmpsb
and
and
push
xor
mov
cmp
mov
sbb
mov
jbe
xchg
adc
nop
ds
jmp
inc
enter
lret
mov
imul
out
nop
push
imull
jge
lods
and
cmp
and
daa
jo
lock
xchg
loop
mov
adc
push
lods
xchg
mov
imul
pop
sbb
test
push
cmp
xor
xchg
mov
lods
jb
int3
loope
pop
xor
or
dec
int
stc
lds
xchg
les
cmc
mov
popf
push
in
jns
xor
orl
lods
fldl
out
mov
notl
xor
jle
mov
ret
bnd
negl
int3
or
sub
orl
and
imulb
push
out
test
jb
sub
push
pop
cmpsb
pop
js
movsl
xchg
xchg
push
lret
fdivs
icebp
incl
mov
lods
push
xchg
stc
js
adc
jmp
dec
and
jb
or
cmp
push
mov
jmp
xchg
dec
push
sub
or
fistpll
shlb
loopne
dec
and
jae
insb
push
lret
cmp
mov
hlt
js
push
add
repz
repnz
jl
and
inc
stc
mov
pop
sub
xor
int
repnz
inc
inc
in
negl
fcoml
jmp
std
jp
or
adc
outsl
cmp
sahf
xor
addr16
mov
test
xor
fstpl
mov
xor
xor
mov
mov
stc
xchg
push
stos
fidivs
scas
mov
adc
sub
fistl
xchg
inc
fwait
sub
push
repnz
pop
outsl
sub
inc
sbb
dec
pop
out
cmp
mov
popl
dec
pop
enter
xchg
push
pop
xchg
sbb
aas
popa
ss
rcl
lcall
jb
add
mov
inc
ficoms
aaa
sub
pop
or
mov
fmuls
andl
push
jl
in
sahf
push
lret
push
int
nop
inc
sub
fsubl
mov
cwtl
xchg
sarl
push
xchg
pop
std
pusha
ss
pop
xor
push
aaa
mov
adc
outsb
pop
addr16
mov
in
iret
xchg
cli
mov
fcmovb
lcall
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
push
aaa
ret
js
jle
js
mov
cmp
xchg
addr16
test
testb
or
stos
lods
sub
push
adc
idivb
in
lock
push
into
jns
mov
data16
mov
cmpsb
mov
loope
mov
mov
repnz
jge
push
dec
rorl
push
push
add
scas
lock
push
iret
jns
nop
push
rcrl
pop
xor
push
or
jns
repz
jmp
inc
sbb
jno
daa
dec
data16
fs
mov
or
leave
mov
fsts
shrb
loopne
icebp
mov
cmc
cs
jno
xchg
mov
mov
enter
sarl
fisubs
out
ret
fbstp
sbb
into
aad
fnstcw
jge
sub
cli
mov
loopne
loop
data16
ds
push
rolb
pop
sti
scas
or
sub
inc
mov
in
test
int3
xlat
or
andb
inc
jns
outsl
mov
dec
xchg
add
out
mov
pop
sbb
sbb
adc
and
adc
mov
fwait
mov
xor
lahf
out
pop
dec
ret
dec
inc
lret
sub
leave
mov
dec
call
ret
mov
xchg
mov
dec
pop
push
jp
push
or
lret
mov
data16
fidivl
dec
es
mov
fldcw
mov
inc
mov
xchg
mov
cmp
mov
imul
stos
stos
iret
cmp
xchg
outsl
ffreep
ds
mov
mov
xchg
jmp
add
stos
fsubr
mov
sbb
mov
repnz
dec
loope
sub
sub
gs
mov
dec
jp
test
fnsave
xchg
xchg
cmp
mov
or
adc
lock
jp
or
or
lret
mov
pop
outsb
arpl
push
test
inc
inc
arpl
fcoms
push
cld
jno
mov
mov
insl
fstps
xor
pop
ret
aad
in
jb
lods
dec
iret
add
sbb
sbb
pop
out
mov
jp
mov
cmp
pop
daa
mov
in
fbld
sub
packsswb
sub
iret
fucom
xchg
jmp
ret
addb
aad
outsl
fistpll
mov
push
jle
lock
call
mov
enter
sar
push
jl
loope
sub
aaa
jnp
loop
cli
sub
sti
adc
add
mov
inc
add
mov
mov
aas
and
cmp
lret
xchg
mov
xchg
lea
dec
das
pop
mov
pop
into
push
mov
sti
fs
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
push
ret
add
xchg
js
je
js
sahf
imul
iret
add
ret
lcall
mov
sahf
sub
andb
adcb
rcrb
and
outsl
movsl
stos
push
xor
into
fcompl
mov
lahf
push
loope
push
das
gs
dec
pop
sbb
scas
int
push
ja
cmp
xchg
xorl
loop
test
push
jmp
cmp
lret
jb
inc
lds
xor
and
pop
push
clc
mov
mov
sub
imul
lods
stc
testl
scas
sbb
xor
sbb
add
push
sbb
mov
push
movsb
fsts
add
jge
loope
adc
dec
push
cltd
std
jae
scas
mov
icebp
push
cmp
and
sbbl
sub
or
pop
lret
mov
pop
jmp
mov
fiaddl
pop
pop
push
sbb
test
clc
or
lret
jb
xchg
lcall
leave
mov
jmp
lret
xlat
iret
jg
out
inc
fbstp
shrb
pusha
pop
stos
fiaddl
imul
dec
push
and
clc
sbbl
stos
test
mov
jp
mov
mov
push
or
in
mov
cmp
mov
sbb
testb
add
mov
fcoms
pop
mov
jge
fisubrs
lret
pop
or
push
xor
jo
cmpsl
gs
repz
sub
ss
cmp
addb
fdivs
mov
mov
andb
adc
cwtl
arpl
sti
push
rcrl
add
lods
xchg
or
add
enter
ret
jmp
fldt
xor
inc
dec
faddl
sbb
inc
xchg
stos
lea
xchg
jb
div
jmp
xlat
and
fs
inc
xchg
jge
repz
sti
jbe
inc
popa
sbb
dec
add
sarl
xlat
test
sub
icebp
sti
push
cmp
pop
jnp
int
pop
js
sbb
popf
add
stc
and
orb
xchg
cs
test
shl
mov
daa
sbb
gs
jp
jecxz
rclb
into
pop
pop
loope
cmp
inc
cld
stos
pop
mov
mov
mov
fwait
jbe
jbe
mov
jle
scas
cmp
jl
jmp
mov
sub
xor
sub
aad
dec
sbb
mov
pop
and
shl
xor
out
pop
sbb
inc
push
xchg
loopne
inc
cmp
fmuls
mov
mov
mov
push
mov
out
insb
in
xchg
leave
cmp
imul
pop
repz
aad
add
mov
mov
jmp
xlat
cmp
ds
js
adc
xor
js
je
js
xlat
cltd
es
xchg
add
addr16
rcl
call
int3
rol
sub
mov
xchg
bound
jb
into
insl
pop
dec
in
in
neg
pusha
xor
mov
movsl
ret
repnz
ja
mov
cs
shrb
hlt
cli
icebp
and
pusha
and
daa
scas
repnz
and
mov
adc
xchg
lods
fcoms
push
push
push
test
data16
aas
insl
iret
pop
daa
std
xlat
int3
loop
pusha
cwtl
xor
lods
test
repnz
stos
iret
adc
sub
push
cmp
push
adc
stc
pop
mov
decl
sub
adc
pushf
and
out
out
ds
test
xor
jmp
mov
pop
xchg
xor
imul
into
sub
mov
mov
imul
add
enter
mov
xor
loop
mov
add
clc
cmpsl
adc
jnp
xchg
push
xchg
movsb
ret
xchg
inc
dec
ja
adc
lock
cld
test
sub
lahf
dec
cli
pop
push
mov
fbld
jmp
and
pop
push
loop
mov
jle
push
xor
inc
sub
cmpsb
into
std
push
fwait
push
imul
push
shlb
js
cmp
push
pop
sub
arpl
jno
gs
sub
jg
add
adc
and
outsb
xor
mov
psrlq
les
mov
icebp
in
xchg
cmp
int3
dec
imul
cmp
pop
jg
imul
inc
lock
ds
es
popa
and
cmc
cmp
xchg
ja
nop
mov
scas
sub
inc
sbb
outsb
xor
xchg
jg
adc
pop
out
lods
push
add
leave
fs
mov
pushf
xor
add
arpl
pusha
jnp
into
lods
iret
lcall
adc
in
mov
jno
adc
push
cmpl
adcl
aas
cltd
dec
fwait
add
jp
add
mov
cld
jae
es
test
stos
popa
dec
xchg
xor
jne
or
sbb
addps
movsb
mov
mov
cli
mov
sarl
dec
jne
ds
stc
int
sar
pop
adc
pop
adc
or
mov
xor
mov
sbbb
push
adc
loop
sub
cmp
imul
cli
sub
sub
jne
cmc
push
cld
push
movsl
movsb
inc
sarb
inc
imul
pop
jb
mov
jg
pop
hlt
or
jne
lahf
cmp
add
fbstp
push
mov
rcrl
pop
sub
out
nop
jmp
push
sub
cs
push
out
xchg
mov
xor
push
and
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
cwtl
out
cmp
je
js
mov
add
popa
cmp
mov
pop
push
test
jb
cmovbe
adc
or
lret
iret
aam
in
aad
xor
sbb
out
nop
shlb
fbstp
xor
dec
push
aad
inc
adc
inc
push
subl
jmp
mov
cld
loop
cmp
lods
push
popf
jae
mov
test
mov
push
and
xor
xchg
stos
enter
pop
pop
mov
je
sub
mov
scas
mov
jae
adc
cmp
mov
adc
pop
pop
mov
cmc
jb
cli
repz
addb
pushl
movsb
inc
jp
or
iret
cmpsl
mov
pop
dec
sahf
je
jp
lods
push
in
popf
fbld
int
ds
xorl
xor
and
or
lahf
mov
inc
cwtl
cmpl
push
int
cmpsb
push
fldcw
cmc
leave
je
fimuls
push
fdivrl
mov
xor
xor
int3
icebp
and
push
xor
push
jmp
out
mov
adc
pop
jbe
inc
jp
pop
adc
jb
mov
scas
pop
mov
ret
out
aam
add
cmp
fisttpl
pop
filds
and
mov
jle
insl
or
inc
inc
xor
subl
ret
pop
inc
mov
imul
jmp
sbb
add
cwtl
pop
mov
pop
cmp
lahf
cmp
mov
in
mov
roll
adc
mov
popa
mov
movsb
and
fwait
xchg
repnz
mov
and
inc
dec
cltd
cmpsl
inc
jno
and
pop
add
ffree
ds
mov
je
jg
inc
xchg
adc
inc
adc
rclb
cmp
je
loope
out
ss
jo
enter
leave
pop
add
ljmp
cmp
call
outsb
scas
sub
or
loope
or
mov
sbb
cltd
pop
inc
cwtl
icebp
jo
addb
sub
aam
nop
lret
and
mov
out
in
cmp
jg
fsubrp
pushf
or
jg
mov
pop
xor
test
cmp
cmp
inc
mov
sbb
mov
jne
add
imul
inc
pop
cmp
xchg
ret
pop
cmp
adc
dec
les
xchg
sub
mov
inc
pop
jmp
pop
push
enter
sbb
pop
sbbl
xor
pop
mov
xchg
add
or
pushf
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
lahf
cltd
aaa
xor
js
rorl
inc
movsl
cltd
jmp
leave
movsl
sbb
cmpl
pop
icebp
and
mov
fcmovnb
adc
mov
into
jle
add
mov
outsb
or
inc
xorb
inc
dec
sub
frstor
shlb
inc
je
sub
arpl
stos
cs
fnsave
je
and
mov
xchg
sub
sub
jns
fnstcw
imul
movsb
clc
jl
jecxz
dec
testl
movsb
scas
pop
xor
add
mov
lods
psrad
and
or
iret
push
cli
shl
and
cld
lock
lret
popa
mov
and
lret
xchg
fidivs
xchg
cs
js
stos
dec
mov
mov
jnp
das
outsl
xor
dec
push
idiv
adc
mov
jge
ror
push
add
rorl
test
dec
dec
rcrb
xchg
xchg
pop
rcr
loopne
or
in
xor
mov
aad
pop
mov
leave
push
and
fdivr
daa
push
bswap
pushl
xor
jne
cs
jp
and
mov
pop
pop
push
out
addr16
xchg
inc
aas
das
cmpsl
adc
leave
lea
movsb
cmpsb
push
adc
imulb
repz
push
notl
nop
ds
pop
dec
in
add
xchg
mov
sub
lods
dec
out
adc
xchg
cmp
push
into
dec
adc
push
sbb
mov
xor
xchg
jb
dec
xchg
pop
pop
pop
jbe
or
dec
add
das
add
or
lods
mov
xor
push
xor
sbb
push
stos
sbb
jb
inc
gs
leave
bound
lock
jp
adc
pop
xchg
lcall
jbe
and
in
mov
jns
fmull
and
ret
arpl
movl
loope
lods
jno
in
aas
loopne
sahf
cmc
imul
jbe
jns
lret
jmp
mov
outsb
data16
insb
mov
or
xchg
mov
dec
rcrl
xchg
scas
int
lcall
xchg
movsl
push
ficompl
je
sub
dec
cmp
add
inc
xor
mul
cmpsb
cmp
lahf
and
xorb
push
xor
fwait
test
shrb
lods
ja
inc
and
cmp
push
fisubs
adc
js
pop
int
sub
mov
lahf
stc
mov
fmul
enter
leave
mov
mov
add
inc
mov
inc
lret
outsb
out
mov
imul
push
push
cli
jmp
lods
inc
aad
mov
cmpsb
nop
mov
outsl
clc
sbb
push
xchg
mov
mov
xor
stos
fs
or
mov
mov
cmp
adc
add
rol
ror
aad
xchg
mov
aad
cmp
dec
mov
js
push
loopne
jno
cmp
mov
jl
push
dec
out
dec
sbb
mov
or
adcb
sub
pop
jb
mov
add
mov
cmp
mov
leave
adc
imul
or
dec
mov
push
lea
xchg
sub
ja
or
dec
fldl
mov
pop
inc
sbb
shll
sub
sbb
cmpsl
cmpsb
or
pop
fsub
xchg
mov
dec
cs
dec
aam
repz
push
xor
mov
bnd
pop
cmp
xlat
imul
inc
jb
subb
dec
push
dec
sbb
or
xorb
es
lock
jg
shl
cmpsl
orl
imul
jbe
xchg
mov
xor
cmp
xchg
pop
add
jo
cmp
sub
test
movsb
cmp
loopne
insb
sub
das
sub
mov
jb,pn
cmp
flds
or
or
iret
inc
pop
cmp
mov
lret
je
cli
fistpll
aad
fsubrl
fsubs
test
mov
push
ffreep
repnz
cmc
mov
pop
push
shll
cmp
rcrl
dec
xorb
mov
mov
push
xchg
push
data16
lret
scas
out
repz
mov
popa
pop
mov
mov
orb
sub
fadd
dec
pop
mov
push
pop
sti
aas
xchg
xchg
stos
repz
xchg
xlat
divb
xor
adcb
aas
test
cmp
out
hlt
sahf
ss
lar
test
push
pop
test
sahf
pop
xor
test
or
clc
insl
mov
xchg
fmuls
xchg
pop
adc
enter
fidivrs
mov
inc
mov
mov
jecxz
push
std
shlb
xorl
xchg
out
or
sarl
and
idivb
outsb
aad
cli
jle
cmp
lods
imul
mov
xor
shrb
or
pop
test
ret
sbb
jle
dec
insl
pop
jno
sub
or
fistpl
in
pop
xchg
test
outsl
popa
ret
push
xor
mov
dec
mov
scas
jb
cmp
ljmp
dec
adc
fsubr
xchg
add
lret
insl
mov
dec
shll
int
push
jp
jo
out
in
and
pop
cli
in
cmp
sbb
sub
xchg
inc
and
xchg
xor
pop
inc
stc
lret
test
xchg
xor
repnz
stos
lahf
jae
xor
outsl
ret
add
or
xor
cmp
inc
sub
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
cmpsl
and
pop
sub
js
and
shlb
sub
dec
adc
or
jne
jecxz
roll
sti
mov
add
push
pop
mov
sahf
sahf
adc
dec
aam
jge
adc
jbe
lock
loope
mov
das
adc
push
cmp
js
jnp
xor
mov
jnp
mov
jae
imul
es
sub
stos
out
cmpsl
rolb
fstps
cmp
xchg
jno
or
imul
push
loopne
das
out
mov
sbb
lahf
push
xchg
push
pusha
js
stos
loop
sub
test
inc
lea
xor
xlat
and
pop
sub
stos
sub
mov
adc
stos
xchg
mov
xchg
or
mov
cmp
pushf
or
pop
inc
sub
jno
push
cmpsb
ljmp
cwtl
cli
cmp
cltd
jns
popa
repnz
fisubl
leave
hlt
xchg
adc
jp
jne
xor
cmc
roll
pop
jne
mov
ds
and
push
stc
test
push
jae
mov
jecxz
mov
mov
jmp
xor
xchg
stos
das
mov
cwtl
ss
fdivl
mov
pop
jl
inc
fidivs
loope
arpl
popf
mov
bound
inc
xchg
aam
cmc
add
cmp
push
jnp
pop
test
dec
jbe
push
mov
mov
iret
push
rorl
inc
xchg
add
out
call
repz
jbe
xchg
or
bnd
or
push
mov
or
data16
xor
scas
mov
adcl
or
push
pop
inc
ret
lcall
push
pop
es
adc
pusha
mov
arpl
lahf
movsl
fcoml
test
xchg
rep
pushl
aas
mov
call
in
jne
loope
xchg
push
clc
sbb
adc
push
mov
sub
cmp
mov
ss
jb
mov
and
sarl
push
mov
fcoml
sbb
insb
jne
pushf
aam
jmp
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
js
dec
aas
out
js
xor
and
pop
daa
dec
int3
xor
aad
mov
fstpt
mov
jge
fcompp
mov
jo
out
imul
jl
lahf
mov
ret
insl
dec
and
call
mov
cli
mov
adc
das
sbb
repnz
xor
aaa
mov
js
jbe
push
xchg
dec
sti
loope
mov
and
xchg
sub
lds
fdivrl
mov
outsb
das
out
addb
dec
jl
mov
hlt
call
xor
fistl
stos
mov
and
or
xchg
lcall
mov
faddl
cmp
pop
and
loopne
testb
xor
call
dec
push
add
pop
or
sbb
movsb
xchg
test
fs
sub
pop
push
out
jb
jge
shl
xchg
or
sub
aad
lock
aas
xchg
pop
aad
sub
dec
jae
sbbl
fistpll
or
es
mov
mov
sbb
out
push
push
icebp
xor
xor
adc
dec
pop
cmp
insb
movsb
push
pusha
orl
rcr
movsl
out
outsb
gs
fcmovbe
and
sub
mov
loop
xchg
pop
icebp
popa
enter
stc
sbb
jl
out
cmpsl
scas
jl
sti
dec
pop
pop
jnp
mov
xor
outsl
fcoms
cmpsb
or
pop
adc
adc
push
dec
lahf
and
ljmp
ret
lods
jne
insb
cmp
mov
or
pop
js
aas
bound
pusha
or
test
sahf
aaa
mov
jmp
mov
sub
jp
stos
arpl
dec
push
cmp
inc
xchg
mov
inc
out
sbb
cld
imul
cmp
ljmp
adc
push
out
mov
lcall
xchg
sarl
lods
push
aad
shl
and
ret
jmp
in
sub
popa
push
int3
mov
cmp
sbb
mov
imul
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
xchg
jecxz
mov
stos
js
xor
mov
add
repnz
out
inc
sub
cli
and
mov
mov
iret
aas
stos
pop
inc
nop
add
filds
mov
pop
mov
mov
jle
aam
add
in
stc
sbb
jp
xor
cld
jmp
jmp
add
mov
mov
lods
scas
out
repnz
inc
lret
stos
sbbb
sbb
mov
rcl
jle
xchg
addr16
repz
inc
bound
fs
scas
add
mov
xchg
sub
xor
mov
stos
pop
es
enter
aaa
mulb
sub
inc
sbb
out
mov
arpl
inc
clc
fwait
mov
pusha
mov
mov
les
sbb
add
in
xor
ds
mov
aam
push
pop
xchg
adc
enter
lods
gs
repnz
lods
dec
clc
dec
mov
fnstenv
test
dec
aaa
cli
xchg
jbe
cwtl
mov
mov
bnd
adc
mov
fdiv
cmpsl
into
jge
das
iret
inc
jnp
mov
out
mov
das
fcmove
jb
es
dec
jb
and
pop
cs
in
insb
lds
or
ja
out
sahf
or
xchg
rcll
insb
jp
cltd
and
adc
inc
or
sub
shr
pusha
push
jnp
jecxz
testl
out
out
adc
ljmp
lret
ret
dec
xchg
add
aad
ret
adc
xor
lea
stos
cs
push
ret
pop
shrl
add
mov
inc
ljmp
add
int3
call
add
pop
adc
popa
sti
xor
leave
test
pop
push
int
or
idiv
fistps
frstor
idiv
loopne
mov
movsl
pop
pop
pop
dec
adc
outsb
adc
daa
mov
das
aam
fisubrs
mov
add
jb
mov
adc
mov
push
in
in
jbe
sbb
sub
jge
negl
jecxz
adc
cmp
add
movl
jne
and
jmp
int
into
aad
lea
repz
pop
test
js
fcoml
pop
push
push
xchg
dec
in
out
adc
xlat
add
xchg
shll
jle
test
jne
sub
outsl
sarb
je
call
repnz
rorl
into
andl
push
inc
hlt
popa
adc
inc
mov
sbb
outsl
insb
jmp
sub
hlt
ds
mov
add
in
mov
push
cwtl
fcmovnbe
xchg
mov
fwait
arpl
imul
insb
std
mov
cmp
jno
mov
push
shr
sbb
es
push
mov
cmpsb
repz
mov
push
mov
push
insl
out
xor
mov
enter
and
adc
lods
jb
sub
jp,pt
mov
lea
test
xor
es
std
test
xchg
loope
or
dec
cmp
pop
aam
loopne
lea
lock
adcb
mov
jp
fbld
dec
bound
xchg
test
cltd
cmp
lods
sbb
and
mov
gs
std
and
mov
jle
cmp
jl
das
or
call
lods
test
cli
stos
sbb
out
lods
out
mov
repz
and
outsb
mov
test
cmp
jnp
iret
div
gs
aad
cmp
notl
push
push
jge
imul
add
cmovl
inc
xor
jnp
push
loopne
ss
ljmp
jg
inc
or
sub
stos
xchg
xchg
xor
jg
rcl
sub
mov
stc
imul
int3
jne
ds
mov
and
cmp
ss
jl
cs
cmc
sbb
xchg
mov
scas
test
dec
pop
or
jmp
jg
es
add
inc
dec
push
mov
adc
cmp
daa
rcrb
aaa
addr16
add
xchg
jp
mov
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
xor
fstpl
xor
and
ficoml
mov
push
mov
sbb
mov
sti
mov
fisttpll
outsl
aam
mov
jecxz
jp
lret
lods
movsl
and
in
pushf
push
or
or
arpl
into
inc
jns
xchg
in
popf
fnsave
push
push
sub
fidivs
ja
js
xchg
mov
mov
call
fistps
bound
push
or
add
jnp
dec
add
push
stos
aad
shr
mov
pop
inc
or
cli
mov
fadds
xor
loopne
int3
lock
loope
jg
xchg
std
jne
sbb
cmp
mov
scas
unpcklps
jmp
insb
lahf
nop
dec
jb
pop
pop
jge
loope
shrl
repz
xchg
jg
das
sbb
cmc
adc
add
mov
cwtl
mov
sahf
or
popf
adc
aas
sbb
inc
div
aam
and
cmpsb
adc
lret
add
stos
aas
mov
dec
xor
pushf
aad
add
xchg
pop
mov
dec
add
inc
jle
mov
pop
pop
sub
push
pushf
imul
iret
xor
mov
inc
fbstp
push
sbb
push
in
add
jg
cmp
dec
loop
test
mov
or
mov
xor
xor
cmp
adc
les
pushl
add
daa
xchg
call
adc
repz
cmpsl
dec
sub
movsl
push
jl
inc
int
cwtl
or
stos
dec
cltd
xchg
jnp
sub
lret
xchg
adc
xor
xchg
push
loop
clc
pop
mov
cwtl
inc
inc
loopne
incb
dec
incb
dec
sahf
pop
cmpsl
fdivrs
xchg
in
xchg
and
inc
adc
sub
inc
dec
jne
out
data16
jmp
pop
push
push
fsubp
push
pop
insl
xchg
loope
pop
sahf
mov
adc
repnz
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
stos
nop
mov
shrl
js
mov
es
addl
mov
pop
jmp
int3
pop
dec
push
cltd
loopne
pop
daa
mov
data16
lret
inc
clc
lret
pop
add
std
jmp
fwait
cwtl
mov
pop
lahf
jmp
or
jne
dec
lahf
cwtl
stos
pop
dec
dec
sub
jmp
xlat
imul
inc
or
dec
shr
leave
pop
add
inc
call
shll
adc
push
mov
dec
mov
push
in
aam
arpl
xchg
fcmovnb
xor
in
mov
iret
test
ret
leave
pop
adc
movsb
xor
enter
leave
bound
cmc
jb
mov
sub
ss
or
in
dec
ds
mov
inc
adc
aaa
idiv
add
out
push
out
xchg
inc
jg
lock
ljmp
cwtl
inc
pop
icebp
push
out
push
out
jle
xor
sub
sub
aam
jp
imul
cmp
xlat
pop
or
scas
mov
insb
repz
hlt
and
dec
cmpsl
jae
sbb
test
shrb
mov
scas
mov
aam
cld
dec
mov
in
xor
dec
je
gs
adc
popa
jb
mov
mov
cltd
out
and
xor
xchg
sub
inc
sub
xorl
es
clc
adc
outsl
add
sub
cmp
pusha
add
scas
jns
add
xchg
cmp
jb
iret
cmp
push
xchg
xor
and
dec
pop
jl
movsb
fdivl
pop
scas
adc
out
or
in
and
mov
dec
fnstcw
popf
movsb
mov
outsl
xchg
xor
jb
paddq
cmp
cmc
xchg
lahf
sbb
mov
xchg
xor
lods
push
adc
popl
in
es
sarb
pop
add
imul
decb
pop
lock
pop
test
popf
test
mov
addb
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
mov
push
mov
js
xchg
lods
fsubs
xchg
pusha
sub
ffreep
mov
js
adc
mov
adc
dec
stos
lret
and
test
shrl
add
das
lret
pop
inc
cmp
test
sbb
sbb
pop
xchg
gs
sbb
xor
ror
or
popa
test
sahf
in
ds
aaa
in
mov
enter
aaa
out
jp
jne
addl
inc
out
js
stos
cmpsl
jp
stc
ffree
push
or
mov
idivb
mov
rcrl
inc
pop
add
xchg
cmp
ficomps
push
or
out
adc
jge
popf
adc
jp
fcompl
dec
mov
dec
inc
mov
imul
ja
mov
mov
roll
ljmp
dec
jecxz
and
clc
pop
popf
add
ret
sti
pushf
add
pop
xchg
or
fstpl
lds
jmp
add
push
vcomisd
xchg
bound
mov
xor
das
rorb
sti
data16
inc
sub
or
jl
mov
inc
sub
movsl
lods
cmpsb
mov
mov
iret
add
in
lcall
loopne
les
or
cmpxchg
test
outsl
sub
aaa
push
test
xlat
push
sub
cmp
adc
pop
es
shl
mov
pop
xor
shll
imul
cmc
nop
xor
and
in
pop
pushf
orl
mov
addl
sub
inc
fdivl
push
jmp
cmp
push
xchg
sti
lds
add
or
sbb
nop
mov
out
pop
cmp
xchg
stos
lods
inc
ds
cld
inc
clc
outsb
mov
bound
in
sahf
dec
inc
testb
lret
add
xchg
pop
jecxz
aam
movsl
movsb
mov
mov
or
ret
lret
sub
jnp
inc
cmp
pop
push
nop
xchg
sub
movb
push
jmp
xlat
lret
fcmovu
aas
cmp
push
inc
adc
mov
js
xor
cli
adc
add
loop
sub
add
pop
iret
lock
call
push
cwtl
sub
dec
inc
and
loop
xchg
jmp
xchg
scas
xor
xor
aad
mov
dec
out
aaa
inc
mull
daa
mov
add
je
cli
addl
lret
ss
jmp
push
jns
aam
sub
nop
pop
jge
sbb
mov
test
lahf
sti
fsubl
mov
adc
mov
pop
mov
inc
stos
popf
push
cmp
inc
hlt
dec
mov
mov
dec
adc
cli
xor
and
adc
inc
outsl
adc
addr16
movsb
mov
dec
cmp
pushf
insl
ret
imul
lds
xor
movsl
movsl
rclb
inc
loope
cli
jae
jge
pop
mov
jle
jmp
dec
fldt
jmp
xor
mov
repnz
cltd
xchg
push
pop
push
or
cs
icebp
movsl
mov
pop
in
testl
mov
dec
cmp
pop
andb
jle
sbb
sub
subl
adc
std
test
sub
and
mov
mov
aas
push
jb
mov
imul
xchg
push
jne
outsb
data16
cmp
or
inc
pop
mov
jle
lods
inc
dec
pop
ret
xor
fists
rol
sbb
shll
pop
mov
aaa
pushf
jg
mov
sti
sbb
push
xor
jl
push
lret
lods
cmpsl
lods
mov
test
int
jp
inc
or
sub
sbb
dec
xchg
add
xchg
mov
cltd
dec
jae
repz
dec
xlat
dec
fsubl
fcoml
add
push
mov
or
xchg
shld
push
es
xor
popa
xchg
push
or
cmpsb
cmpsl
lock
push
inc
in
push
inc
lret
pop
or
in
xchg
in
push
mov
mov
cmp
mov
imul
cs
gs
or
sbb
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
xor
jb
xor
push
pop
push
pop
in
push
mov
outsb
gs
ficomps
push
cwtl
cmp
jnp
cltd
subb
imulb
and
outsl
add
popa
cld
loopne
andl
xchg
in
sbbl
push
mov
mov
cmp
jle
mov
gs
hlt
mov
and
lds
xchg
lea
jo
insl
mov
mov
cmp
jo
push
les
mov
mov
pop
ficoml
les
pop
sbb
ret
xlat
shl
cmc
mov
sbb
push
dec
inc
lahf
cli
pop
fidivrs
pop
sub
mov
rorl
loopne
sbb
out
es
ljmp
cmp
dec
pop
outsb
addr16
fisubs
arpl
ljmp
lock
divl
xor
sbb
xor
mov
xchg
push
fstps
movw
iret
jnp
add
mov
lods
imull
into
mov
aas
fisubs
nop
mov
insl
insl
mov
push
cmp
lods
cmp
mov
sbb
xor
jns
xor
push
lock
or
push
notl
push
push
shr
into
xlat
into
push
aas
movsb
xchg
mov
je
out
jbe
movsl
ja
jmp
xor
or
mov
add
lret
cmp
cmpsl
inc
xor
mull
fnstenv
test
mov
fstpt
pushf
mov
ss
jle
ds
pusha
and
adc
dec
jns
jae
sub
lret
mov
ret
hlt
sub
fs
add
mov
test
or
movsl
mov
mov
jge
fbld
and
imul
or
popa
loop
ss
mov
orl
xchg
mov
fisubl
stos
out
lahf
in
decb
int
fdivrs
adc
imul
jns
scas
mov
out
pop
sarb
test
in
enter
fs
div
dec
lahf
cmp
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
and
mov
js
push
das
or
xchg
inc
lea
scas
jae
pop
sub
jbe
push
mov
out
xchg
dec
lock
or
push
xor
cmp
loope
mov
cmpsb
icebp
rclb
ds
or
in
and
xchg
cmp
in
into
and
in
scas
add
inc
stos
push
inc
jbe
cmp
cs
mov
cmp
dec
fldcw
cmp
gs
mov
pop
int3
imul
push
in
int
test
scas
pop
es
stc
roll
cmpsb
push
stos
lods
lods
and
dec
lods
adc
roll
mov
call
jnp
int3
jge
dec
push
add
jo
rclb
mov
push
insb
and
fsubrs
adc
shll
push
cmc
repnz
sub
xchg
pushf
loop
add
ljmp
or
lret
lret
cmp
push
add
push
aad
sbb
cmp
je
mov
inc
and
pop
jnp
push
xor
xchg
adc
mov
cli
xor
dec
jb
and
sub
stc
or
dec
mov
popa
jg
mov
xor
pop
out
fcomi
dec
jns,pn
inc
cmp
mov
jno
in
sub
and
xchg
mov
push
sub
push
cs
pop
psubw
jmp
xchg
mov
clc
and
jne
rol
add
imul
es
add
gs
adc
inc
inc
mov
sub
adc
sub
lahf
flds
movsb
outsl
pop
loop
sarl
push
lods
test
push
mov
into
fldcw
das
je
or
cld
jg
decl
and
fbld
mov
test
bound
inc
loopne
mov
push
call
notl
insl
ror
test
xor
movsl
mov
js
dec
adc
orb
pop
fcmovu
push
ds
mov
mov
xor
push
mov
lcall
into
loop
adc
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
xchg
lods
push
sub
mov
js
mov
dec
sub
shrl
cmp
adc
sub
jnp
sub
push
int3
xchg
jb
jg
cli
in
std
lcall
ret
in
leave
cmp
in
fwait
cmp
mov
jne
movsl
mov
mov
pop
in
fistpl
mov
cmc
push
test
jg
scas
xlat
mov
xchg
dec
add
rorl
ss
incb
lock
and
inc
pop
mov
mov
push
imul
push
mov
jne
inc
sarl
outsb
adc
or
jbe
lea
cld
scas
sub
outsl
mov
pushf
mov
cmc
sbb
clc
jne
xor
aad
roll
lods
add
dec
sub
xchg
pushf
adc
imul
add
fwait
imull
insb
test
aas
dec
cmc
or
stos
lret
push
in
add
or
and
sbb
popf
sbb
jnp
sub
orb
fnstenv
and
or
lahf
lcall
push
das
push
inc
jmp
sub
inc
inc
fcomps
gs
sbb
xchg
pushl
jbe
orb
mov
mov
or
xlat
jbe
xor
add
es
inc
call
fwait
popf
or
xor
loope
popf
pop
sbb
popa
divb
inc
mov
icebp
ss
lock
pop
jbe
jno
xchg
imul
sub
or
loopne
pop
lods
leave
push
mov
call
pop
xchg
sbb
jne
pop
sbb
and
sbb
mov
adc
sbb
fsubr
imul
mov
push
and
sub
fwait
dec
ret
cld
and
enter
das
ja
sbb
sub
jmp
and
xor
cmc
cltd
je
xchg
test
pusha
fnsave
inc
push
dec
jmp
test
mov
mov
cwtl
adc
in
data16
sub
shll
pop
hlt
cmpsl
fs
cmp
setnp
faddl
mov
or
int3
jecxz
idivb
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
test
int
popa
mov
js
movsb
sbb
sub
adcl
sbbb
dec
fwait
int3
and
mov
adc
jo
nop
push
fisubl
jnp
in
lcall
mov
addr16
lret
jb
das
imul
xchg
cmp
add
ss
dec
pop
jns
in
pop
and
xor
xchg
inc
dec
shr
insb
lcall
inc
jl
mov
xchg
mov
or
aaa
pop
in
in
cmpb
in
test
inc
jp
and
inc
adc
push
xor
popa
sub
dec
mov
cmp
shlb
pop
inc
ficoml
push
mov
sub
mov
fdivr
add
mov
jg
and
lcall
std
mov
mov
mov
fcmovne
jns
sbb
dec
shlb
test
js
pop
jae,pt
xor
shrb
mov
ficoml
repnz
inc
push
sub
roll
mov
inc
stos
lea
iret
jnp
xchg
mov
jg
fcomps
fldt
mov
roll
push
mov
or
mov
mov
rolb
inc
das
sub
cmpsb
test
adc
test
ret
xchg
xchg
mov
outsl
int
sahf
or
aaa
adc
mov
jo
lret
shll
mov
arpl
ret
add
and
outsb
jo
mov
rclb
rorb
pop
xchg
push
xchg
and
inc
dec
notb
repz
mov
and
cmpsl
xchg
les
mov
inc
xor
sub
mov
fmull
or
imul
pop
cltd
iret
xlat
mov
sbb
mov
inc
xchg
push
rcrl
in
fdivp
push
out
scas
cmc
mov
xchg
rcr
pop
and
js
inc
pop
cmp
imul
jp
push
lahf
and
aad
and
mov
in
fst
ljmp
sub
test
adc
mov
enter
sub
xor
leave
call
jno
pop
cmp
mov
dec
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
hlt
call
js
jle
js
sti
or
and
lods
inc
and
sbb
cld
mov
arpl
ss
shll
gs
adc
clc
cmp
dec
push
dec
dec
push
push
sbb
xorl
ret
or
pop
cs
fwait
cmp
popa
scas
cmp
bound
jle
cmpsb
pushf
xor
fwait
mov
es
mov
cwtl
in
imul
xor
mov
xchg
pop
xchg
dec
es
adc
or
add
movsl
push
xorl
xchg
insb
mov
dec
cltd
mov
cltd
push
fnstsw
mov
inc
fistps
stc
pusha
fstps
cwtl
add
push
into
adc
lods
xlat
out
add
movsl
std
sub
sub
fldl
pop
or
push
dec
sub
sahf
or
sbb
incb
push
rorl
or
insl
dec
mov
addb
aaa
out
sbb
fisubs
jae
cmpsl
add
pop
cmp
movsb
hlt
cli
loopne
leave
xchg
jge
addl
out
add
sbb
sbb
sbb
out
xchg
in
pop
stc
cmc
lret
mov
pop
inc
and
mov
out
call
lods
outsb
and
xchg
into
stos
sbb
into
movsl
sbb
push
push
xlat
faddl
arpl
mov
mov
push
fmuls
andb
aam
push
lahf
test
xchg
lods
in
dec
cmp
jecxz
xchg
mov
loope
lcall
jl
das
fsubl
dec
xchg
cmpsl
push
js
test
xchg
mov
xlat
call
push
popl
dec
enter
aaa
mov
js
and
cs
and
mov
xchg
insb
shl
testl
push
movsl
pminub
and
sbb
in
dec
int3
inc
mov
adc
out
addl
mov
dec
mov
mov
cld
xor
out
jmp
inc
ja
sub
popf
stc
mov
jecxz
inc
mov
jnp
aad
sbb
call
mov
out
pusha
jns
inc
dec
mov
mov
test
and
pop
aad
cli
push
lock
stos
fildl
shlb
dec
roll
rol
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shll
mov
jle
js
adc
movsl
pop
dec
lret
sub
inc
in
dec
mov
push
call
push
ljmp
jecxz
movswl
cmp
sub
shlb
and
push
int3
mov
mov
inc
dec
inc
add
lods
xchg
fidivl
lods
sbb
mov
scas
inc
scas
icebp
das
arpl
push
pushf
pop
push
jo
mov
cmpsb
xor
cmp
push
jp
push
and
in
xchg
sub
xor
pop
xchg
jg
pop
inc
sbb
push
cmp
xor
jmp
in
into
repnz
popa
cmp
cmp
sub
gs
out
out
sbb
adc
or
mov
in
sbb
sbb
mov
mov
mov
lahf
jns
push
mov
sbbl
dec
xor
adc
push
mov
add
xor
inc
movsb
jge
ret
jle
mov
mov
xchg
xchg
dec
mov
xlat
ss
sbbb
cli
sub
jp
sub
cli
push
cs
and
rclb
iret
loopne
shl
mov
lods
popf
mov
jl
out
movl
and
jnp
jge
inc
inc
push
sti
out
das
jb
cmp
and
popa
popa
lods
aam
xchg
jae
push
jns
into
adc
mov
sub
hlt
push
xchg
xlat
in
fiaddl
cmpsl
or
fdivrs
fldcw
xchg
lahf
xchg
es
or
hlt
add
mov
adc
test
inc
xchg
cmp
mov
inc
push
daa
lret
add
xor
and
imul
faddl
add
pop
xchg
adc
data16
sub
out
inc
fnsave
xchg
adcb
xchg
add
imul
hlt
loopne
lods
shr
leave
sub
mov
adc
inc
popa
sbb
pop
cmp
sarb
je
inc
stc
inc
xchg
add
fsubl
lahf
ja
fnstsw
js
mov
xchg
and
loopne
loopne
or
rcl
xchg
dec
add
fs
jge
add
cmp
movl
jmp
ret
ret
lret
test
insl
and
js
jle
js
rcl
ss
out
mov
imul
inc
lds
dec
int
pop
movsl
mov
hlt
bound
inc
pop
movsl
jne
mov
mov
fsubr
and
push
jne
in
mov
sub
xchg
hlt
mov
subl
dec
test
jecxz
out
gs
scas
aaa
test
add
cmp
mov
int3
push
adc
cld
mov
and
or
dec
push
pop
ret
push
mov
jg
cmp
or
sbb
ljmp
jle
cmpsl
mov
loop
add
push
jne
aam
push
inc
or
sbb
and
cmpsb
cmp
ret
repnz
insl
or
pop
jo
out
cmp
cli
push
mov
add
mov
stos
hlt
sbb
inc
push
or
sbb
or
mov
pop
xchg
movsb
xor
jl
mov
push
ds
cmpl
or
stos
lea
arpl
dec
arpl
push
loop
xlat
push
mov
es
mov
out
test
sub
jbe
pusha
mov
in
jmp
stos
cmp
ljmp
mov
fcomip
cs
sbb
pop
rorb
dec
leave
mov
jae
pop
repnz
or
fisttpl
jb
push
ds
pop
in
test
add
enter
jns
add
push
orl
cwtl
inc
jbe
lahf
test
mov
repnz
rolb
pop
pop
in
fsubp
cmpsb
mov
inc
lds
call
insl
sarb
xchg
cmp
or
jo
repnz
adc
std
lcall
jo
sbb
cltd
add
scas
lods
repz
or
inc
test
ds
jg
ljmp
sub
xchg
mov
sti
jo,pt
pop
jns
test
adc
outsb
mov
xor
mov
add
xor
es
push
into
mov
je
jns
icebp
lcall
insb
jae
std
cmp
or
adc
imul
dec
add
and
pop
sarl
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
sbb
js
jle
js
or
stos
adc
ss
lock
xchg
aaa
xlat
jno
repnz
xlat
lods
jo
testb
mov
xor
jmp
push
add
movsb
in
push
lret
add
or
xchg
mov
mov
xlat
or
outsl
ja
jae
enter
mov
pop
mov
out
pusha
adc
call
outsb
or
js
movsl
cmpsl
popf
push
xor
push
sbb
pusha
adc
les
int
mov
mov
push
xor
xor
cmp
cmpsb
pop
jno
test
iret
mov
testl
jg,pt
xor
dec
inc
popa
or
mov
leave
loop
push
iret
pop
and
or
bound
mov
mov
or
xor
mov
icebp
fists
fisttpl
pop
add
mov
push
cld
fldl
adc
sbb
sbb
or
inc
xchg
push
lcall
aas
pop
and
clc
sbb
mov
int
xor
xchg
mov
jp
mov
add
ljmp
in
notl
xorb
jl
cli
clc
leave
lea
leave
insb
xchg
hlt
sbb
mov
clc
mov
add
nop
aaa
sbb
inc
jnp
adc
push
bound
push
pop
mov
leave
arpl
aam
sbb
rep
andl
ss
popf
pop
and
dec
popa
pop
dec
mov
ljmp
loop
out
mov
loop
mov
pop
cmpsb
xchg
push
out
movsb
mov
loopne
cmp
data16
rcll
shll
pop
inc
xchg
fsts
test
lock
fucomip
inc
lds
ret
repnz
je
sbbl
imul
sub
aad
add
mov
pop
repz
cmp
lock
hlt
xorl
xchg
les
pop
pop
pop
bound
outsb
mov
loope
dec
push
lock
insb
cmp
xchg
mov
insb
cld
mov
jae
sbb
sub
sub
mov
jo
ljmp
cli
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
int3
test
stc
jp
js
in
js
fldcw
sbbl
fldcw
sbb
je
dec
xchg
mov
mov
mov
mov
push
out
mov
mov
lret
and
aaa
rcl
ret
aam
pop
sbb
add
inc
xchg
push
jae
mov
in
gs
inc
pop
xlat
decb
dec
xchg
add
decb
push
insb
fisubl
in
out
movsb
mov
mov
xor
adc
or
rcr
xchg
push
mov
xlat
stos
loop
and
dec
std
negl
sub
mov
sbb
test
sub
push
and
adc
jmp
pusha
jb
mov
push
dec
cli
mov
mov
dec
xor
out
push
ret
mov
aam
dec
and
lea
mov
xlat
and
dec
jge
sahf
sub
aad
lcall
adc
push
mov
mov
xor
inc
cld
ja
divb
push
dec
paddw
sbb
jp
icebp
std
dec
and
insb
xchg
push
test
xchg
mov
adc
fsubrl
jg
cmpsl
call
pop
push
ljmp
cmp
setbe
jo
and
cwtl
adc
cmp
push
in
pop
outsb
lock
imul
loope
into
fstl
cmp
and
push
enter
dec
outsl
fcoms
stos
xor
les
scas
outsl
mov
dec
sub
icebp
push
cmp
lds
pop
pop
and
fcoms
fsubrl
adc
jne
mov
aaa
mov
pop
fs
outsb
scas
dec
clc
aam
pop
loope
or
cltd
push
push
sub
fistpl
mov
hlt
sub
xorl
loop
dec
stos
and
sbb
in
addr16
push
bound
jecxz
pop
pop
sbb
mov
std
jnp
cmp
xor
push
mov
push
or
add
jb
hlt
stos
adc
inc
or
aaa
ja
insb
popf
in
push
fildl
push
adc
scas
dec
cmpsl
push
cmp
cmp
aam
pop
push
jp
hlt
pop
xchg
stos
add
aam
mov
jno
fildll
lock
sti
add
fwait
lcall
outsl
and
adc
inc
rorl
push
decb
sbb
faddl
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
loopne
lea
jle
js
imul
sub
or
popa
and
mov
and
jmp
or
int
jnp
dec
adc
sub
inc
gs
add
out
inc
ret
pop
inc
out
stos
pushl
push
or
sub
and
lret
sahf
xchg
lods
sub
add
xchg
inc
mov
push
dec
xchg
or
push
jnp
mulb
inc
adc
sahf
fmuls
icebp
add
call
mov
add
clc
lret
mov
xchg
sbb
mov
cmp
pusha
and
add
and
inc
inc
daa
push
sbb
sbb
inc
mul
das
mov
jmp
loop
scas
das
and
xchg
jns
repz
bound
test
and
ret
jns
push
xchg
sbb
mov
fucomp
jno
sbb
ss
mov
xchg
sbb
cmpsb
test
mov
jb
mov
test
pop
fisttpl
cmp
cmpsl
pushf
int3
call
cltd
loope
stos
cmp
outsb
nop
rol
sbb
ret
mov
push
sbb
dec
sub
xchg
pop
add
pushf
mov
dec
xorl
xor
mov
dec
idivl
call
aaa
ficompl
jle
jecxz
jo
mov
or
or
ror
mov
aaa
outsl
pushw
es
or
mov
push
xlat
adc
xor
push
test
xchg
loop
repz
and
pusha
cwtl
and
stos
jmp
lock
rcrl
popf
inc
push
sub
and
loop
push
push
stos
in
ret
movsl
mov
or
cwtl
int3
pop
loope
data16
push
push
in
ss
sub
and
out
inc
sub
inc
mov
ja
and
imul
mov
mov
jb
cmp
ss
sub
jge
xor
or
repz
out
xchg
mov
jmp
xor
lahf
jb
sbb
mov
jnp
loope
imul
enter
outsl
cmp
fisubrs
sub
xchg
int3
or
sub
jl
mov
rorb
add
aas
and
push
nop
push
sub
add
jmp
ret
int
into
xchg
jle
xchg
xor
jp
dec
js
in
js
mov
xchg
movsl
jns
xchg
shrb
fcomp
lods
cld
inc
pop
sti
fcoml
pop
sub
mov
inc
xor
jns
mov
jb
or
in
icebp
mov
and
xchg
inc
notb
filds
cmp
sti
iret
in
lock
jae
ret
ja
mov
adc
insl
iret
jns
lods
lret
pop
shll
or
aas
loope
pushf
out
push
cmp
pop
xor
jmp
adc
push
fsub
xor
call
call
adc
mov
popf
sub
xlat
mov
data16
cmc
push
fistpl
ret
sti
mulb
sub
subb
cmp
mov
aas
daa
cltd
in
pop
mov
stos
cs
incb
pusha
push
mov
mov
jno
popa
or
fsubl
outsl
jb
rorb
popa
test
cmpsb
mov
mov
adc
mov
inc
dec
mov
cmp
or
cli
or
outsl
retw
js
pop
popa
pop
jb
jmp
adc
mov
and
scas
inc
jnp
pop
ret
fisubl
es
xlat
dec
xchg
es
fwait
cmp
push
inc
xchg
cmp
mov
push
lahf
sarl
stos
cs
cltd
xchg
and
push
insb
cs
rorb
call
add
in
in
mov
stc
ret
scas
je
xchg
fidivrl
and
pop
and
add
pop
lock
mov
das
sbbl
pop
cmpsl
mov
mov
int3
mov
or
outsl
je
push
mov
sbbb
push
shll
icebp
inc
and
cld
xor
dec
aaa
mov
leave
lret
xchg
test
lods
jbe
add
rclb
nop
cmpsb
jno
fs
arpl
cmpsb
pushf
pop
lock
sub
pop
clc
mov
insl
lret
stos
out
inc
or
aaa
sub
movsl
imul
push
mov
into
cmp
sbbl
pop
or
popa
imul
push
or
sub
adc
xor
jns
fistpl
bound
cmp
or
out
dec
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
pop
push
in
cmp
js
jle
js
arpl
adc
mov
push
std
pop
enter
adc
repz
fdivl
mov
or
sbb
mov
loopne
repz
bound
mov
sub
jns
mov
je
and
xchg
pop
ficompl
jb
rclb
lret
sub
push
rclb
repnz
addr16
push
sahf
pop
xor
mov
sarb
sbb
pop
xchg
aad
cmpsb
int3
jo
jle
inc
ret
pop
cs
mov
adc
cmp
and
adc
ret
mov
pop
int
mov
rorl
int
fbstp
enter
dec
pushf
sarl
js
mov
push
mov
lcall
dec
and
loopne
hlt
test
adc
mov
adc
pop
fs
inc
outsb
mov
out
in
mov
int3
push
pop
jae
xor
cli
cld
mov
jle
sbb
dec
dec
mov
pop
js
sub
lret
push
cmpsl
pop
xchg
icebp
mov
test
mov
sbb
iret
cltd
popa
sub
cmp
jmp
add
fbld
pop
fisttpl
jle
std
or
jp
shl
mov
xchg
mov
pop
sbb
ljmp
jge
jns
mov
inc
pop
mov
or
ret
sbb
jnp
out
pushf
push
mov
dec
cmp
cmp
fbstp
or
fdivl
adcb
sarb
clc
lods
sti
fmulp
jge
leave
jg
mov
int
and
sbb
add
xchg
sub
notl
sbb
lock
sub
orb
fwait
lcall
outsb
inc
gs
dec
je
push
in
push
xor
cmc
repz
xchg
pop
push
lret
and
jmp
repnz
adc
and
cmpsl
push
jmp
cli
inc
pop
ds
das
push
scas
push
lea
stos
daa
xor
cld
jno
scas
mov
dec
inc
sub
loop
fucomi
lahf
push
mov
cmp
cli
int
jb
ss
pop
pop
add
stos
jbe
mov
and
out
push
push
in
in
in
sbbl
and
sbb
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
fdivs
cmpsb
push
js
in
js
cwtl
lods
fstl
and
xchg
out
iret
jge
cli
cltd
out
add
repnz
dec
ret
pop
ficompl
cli
in
adc
fsubl
push
or
in
xchg
or
gs
xor
je
xchg
lock
adc
cli
adc
shlb
cld
outsb
cld
aam
mov
divb
sbb
pop
pop
repnz
jle
push
je
les
pop
pusha
psubw
scas
dec
mov
test
xchg
loope
add
jb
mov
inc
std
fs
call
das
dec
dec
push
daa
cmpsl
and
frstor
test
inc
or
lds
lret
fcmovnbe
das
mov
xor
fisttpl
pusha
out
or
push
dec
jae
xchg
aam
icebp
inc
lds
sar
int
enterw
jp
xchg
xchg
adc
insb
mov
mov
pop
fcoms
xor
push
out
out
aaa
dec
and
and
mov
sub
push
popf
rclb
push
pop
pop
icebp
sti
scas
sub
xchg
fnstenv
jno
pop
mov
sbb
mov
push
aad
icebp
pop
ljmp
cmp
in
out
scas
call
mov
inc
add
xchg
pop
or
push
sti
in
lock
xchg
addr16
sub
push
stc
sti
jae
pop
dec
push
repz
sub
dec
mov
cli
push
popf
gs
push
sub
mov
inc
mov
xor
loope
pop
sbb
xchg
xchg
out
pop
xor
in
xchg
sbb
mov
inc
outsl
mov
data16
pop
jecxz
test
jp
jb
cwtl
sahf
dec
in
mov
jmp
push
pop
movsl
lock
add
push
push
xchg
or
or
daa
rcl
or
es
pop
fwait
pop
add
cs
ret
mov
inc
and
mov
inc
push
test
lods
mov
mov
mov
addl
aam
mov
cmp
imul
test
shr
shlb
cmp
xchg
jg
bound
fidivs
mov
lret
adc
jmp
outsl
or
gs
xchg
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
imull
int
adc
js
jle
js
xchg
mov
xlat
and
stc
in
adc
test
mov
cmp
sahf
add
mov
xchg
iret
in
jmp
clc
adc
adc
fidivs
lret
imul
cltd
push
data16
mov
inc
ds
or
test
cmpsb
mov
jge
je
mov
add
xor
xchg
or
jno
inc
jg
push
pushf
pop
roll
pop
mov
dec
fsubs
pop
or
pop
adc
push
jnp
mov
leave
push
adc
inc
clc
lods
test
xchg
jno
movsl
lahf
scas
pop
in
scas
xorl
mov
lret
push
clc
test
adc
cmp
cmp
mov
pop
lret
scas
test
sbb
dec
popf
mov
testb
jle
adcl
and
mov
std
negb
sbb
cmp
fdivrl
dec
mov
or
mov
dec
xor
js
sub
rolb
scas
sub
movsb
push
ret
pop
xchg
xlat
js
sbb
das
loopne
jns
lds
and
dec
mov
or
daa
pushf
sti
inc
inc
cmp
push
int
cmc
mov
dec
fs
inc
ljmpw
int3
mov
jno
frstpm(287
ds
xorb
pop
testb
pop
fdivl
jo
fwait
mov
outsb
loopne
push
insb
sbb
inc
lock
out
jo
popa
jl
popf
bound
pop
lcall
and
cltd
dec
mov
je
pop
mov
cli
adc
mov
pop
stc
lcall
lea
shrl
lea
lods
xchg
andb
int3
stos
jbe
leave
clc
jno
push
insb
sub
add
push
fdivrl
push
insl
mov
mov
movl
add
inc
fcomp
pop
inc
pop
mov
mov
rorb
mov
push
scas
pop
aaa
mov
and
popa
fnstenv
adc
xlat
jecxz
imul
in
jmp
jg
push
push
andl
mov
cmpsl
outsl
sub
dec
mov
mov
pop
push
dec
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
adc
js
in
js
jg
sub
ret
arpl
outsb
fisttpl
ja
movsb
pop
jl
shrb
repnz
clc
stos
lods
mov
and
inc
jge
xor
insb
xchg
cmp
or
sbb
shll
icebp
out
or
out
add
xor
inc
icebp
mov
out
out
daa
std
push
jge
sbb
js
inc
cmp
dec
sub
and
or
lods
test
cmc
jb
test
outsb
mov
fcmovnbe
call
dec
jbe
dec
mov
mov
fnstcw
pop
loope
jbe
daa
jmp
sub
testl
jbe
lret
or
loopne
mov
dec
jp
iret
sbb
lods
pop
sub
push
das
fstl
ret
inc
inc
push
test
cmc
pop
cmp
lods
outsl
inc
icebp
sahf
in
push
push
mov
test
jo
push
mov
inc
les
popa
outsb
xchg
and
stc
inc
leave
test
mov
into
fbld
scas
xchg
dec
jmp
mov
leave
cmpsl
sub
pop
stc
mov
lods
je
push
loop
pushf
jge
icebp
fwait
cmp
adc
ror
cmp
inc
or
add
sub
aas
lret
mov
cld
test
mov
xchg
fimull
cmpsl
mov
mov
add
fidivl
adc
inc
arpl
jne
dec
dec
out
mull
inc
mov
leave
lods
sub
cmp
and
cmp
hlt
jg
mov
ret
mov
mov
adc
sbb
add
mov
movsb
pop
fdivl
or
dec
mov
push
icebp
pop
data16
sbb
xchg
dec
pop
sbb
repz
jb
fidivrl
stos
lahf
cwtl
lock
scas
decb
adc
inc
std
cmp
fadd
add
aam
inc
mov
or
dec
mov
pop
cltd
pusha
mov
push
inc
bound
xor
dec
pop
dec
jecxz
xor
dec
jae
addb
sub
mov
xor
popa
xor
push
clc
fsubrs
mov
mov
outsl
jne
popa
enter
fildll
mov
cmp
lret
jge
subl
add
add
add
into
ror
rcl
into
jbe
inc
xor
inc
stc
gs
js
in
js
cmp
fisubl
mov
call
xchg
test
cli
inc
subl
in
or
iret
mov
fmuls
addr16
fisttps
or
mov
stos
add
mov
xor
xor
or
mul
cld
or
ja
movsl
pop
call
add
pop
aam
or
sbb
xchg
ficoms
adc
sub
in
sbb
leave
push
into
jns
popf
repz
adc
imul
out
sub
and
pop
jp
sbbb
ret
ss
add
movsl
sbb
int3
inc
xor
jae
jge
xchg
mov
pop
cmp
add
push
pop
add
arpl
stos
lahf
push
test
test
aam
insb
push
xchg
shll
inc
pop
fsubrl
test
push
or
outsb
leave
enter
jg
rorb
mov
mov
dec
loop
dec
xchg
into
test
jne
adc
cmpsb
repnz
les
scas
mov
mov
cmp
jb
js
dec
push
push
sbb
add
aad
arpl
dec
rcr
incb
sbb
mov
outsb
cs
test
xor
std
pop
mov
test
mov
test
push
int
aad
in
test
out
or
cld
adc
js
idivb
repnz
cmp
mov
rolb
cmp
mov
adc
int
or
cmpsb
sub
mov
inc
cwtl
stos
ror
std
rcrl
inc
insb
in
aad
arpl
inc
fs
pop
inc
mov
xorb
cltd
out
data16
xor
ja
lret
std
push
fwait
stc
lods
cmpsb
out
in
imul
and
cmp
mov
sub
xchg
mov
push
popa
ret
pop
ds
lcall
test
scas
push
lret
xor
nop
aam
les
out
mov
dec
int3
jg
xchg
mov
in
shll
push
cmp
adc
in
jle
mov
and
clc
push
pusha
cmp
jnp
test
push
jp
popa
add
xchg
mov
int3
jecxz
pop
ficoml
inc
add
lret
jmp
mov
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
shlb
rcrb
js
jle
js
mov
inc
inc
or
stc
aad
cmp
inc
int
cld
dec
ja
roll
xchg
mov
ljmp
push
mov
xchg
das
mov
arpl
pop
notb
pop
pop
xorb
push
cmp
jno
mov
add
mov
jnp
hlt
enter
jp
jp
insl
loop
adc
mov
gs
lds
imul
sub
and
ja
push
mov
inc
jb
cmpsl
les
pop
mov
mov
int3
or
or
inc
xchg
insb
push
lods
sub
ljmp
cmpsb
push
mov
cld
add
add
pusha
xchg
fsubrs
adc
inc
lcall
dec
mov
xchg
shl
cs
pop
xchg
imul
xlat
je
mov
or
iret
ljmp
lcall
lock
mov
out
clc
fstpl
mov
roll
mov
jp
pop
mov
pusha
pop
cmpsl
fs
add
adc
dec
xchg
cltd
jbe
jecxz
add
nop
mov
fdiv
out
inc
and
jecxz
fdivrl
and
inc
push
mull
stc
xchg
push
addr16
shrb
xor
sub
inc
lahf
mov
pop
aaa
nop
pop
adc
fcmovu
mov
adc
popa
xor
jmp
xchg
or
xchg
stc
and
ja
rsqrtps
add
push
mov
mov
mov
loope
xchg
mov
cmp
ret
mov
pop
popf
lret
xchg
pop
imul
pop
lret
mov
fneni(8087
cmp
hlt
inc
sbb
lods
sbb
aas
adc
pop
outsb
push
stos
dec
lcall
inc
inc
mov
sub
inc
cs
cwtl
in
call
sub
mov
stos
mov
mov
imul
mov
pop
mov
hlt
in
daa
ja
popa
inc
movsl
jg
lock
test
add
cmp
sarb
dec
sbb
lcall
out
mov
fwait
test
cmp
inc
xor
adcb
test
push
and
adc
test
push
nop
mov
int
and
jge
mov
sub
cmp
ja
jmp
rol
xor
adc
call
js
jle
js
mov
mov
daa
lret
rcrb
mov
mov
inc
clc
cmpsb
test
sti
imul
cmp
daa
add
push
aas
add
andb
or
test
jp
rolb
les
push
nop
adc
push
mov
mov
push
ss
pop
jbe
mov
ss
add
jnp
arpl
aas
scas
add
test
iret
cmp
pushf
xchg
mov
pop
sub
out
add
sub
sbb
jne
push
or
sub
or
fistpll
lahf
adc
lret
add
jae
fcmove
es
repz
imul
bound
rclb
sarl
repz
into
add
sbb
scas
out
imul
push
js
insl
jne
out
lods
adc
dec
daa
pop
xor
ds
test
xor
cmp
inc
push
andl
cmp
stos
cmp
in
ret
pop
sbb
decl
js
stc
ror
aad
clc
and
inc
popf
das
adc
inc
scas
not
aam
loope
negb
stos
lret
mov
bsf
xchg
fdiv
bound
mov
cmp
mov
and
fidivl
addr16
mov
mov
lock
mov
pop
or
mov
mov
bound
and
not
xchg
lcall
out
cltd
enter
mov
fisttps
mov
adc
rorb
cmp
cmpsb
mov
mov
inc
dec
mov
sti
fistpll
cmpsl
hlt
fnstcw
jge
sub
loope
lahf
test
mov
push
xchg
bound
mov
int3
test
cmp
xchg
sti
xor
insb
fwait
jnp
leave
cmpsb
xor
mov
je
xchg
and
out
mov
xchg
pusha
das
cmp
mov
sub
inc
push
repnz
jbe
jle
pop
and
imul
pop
shrb
lcall
pop
lret
nop
stos
loopne
sti
sbb
ret
mov
push
push
popa
out
mov
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
lret
mov
js
in
js
mov
gs
mov
ficoml
nop
mov
xchg
cld
mov
das
aaa
adc
sbb
roll
mov
jo
push
add
shr
in
or
mov
jno
inc
cmc
stos
jbe
fldcw
lods
mov
testl
cmp
sub
ret
pop
daa
push
stc
or
and
mov
push
mov
xor
sbb
ret
lret
imul
push
and
fsin
popf
bound
cmpsl
pop
adcb
ss
mov
and
sti
js
sub
jns
jb
mov
jmp
test
add
cmp
pushl
inc
fldpi
mov
sti
or
ja
ss
nopl
xchg
fnstsw
adc
mov
mov
xchg
xchg
cmp
imul
sub
fs
xchg
jno
cs
aam
pop
xchg
rcrl
scas
or
sub
cmp
jnp
repz
mov
pusha
and
out
jmp
je
push
jle
sub
popa
aam
push
jg
bound
sbb
enter
adc
popf
aas
jmp
fistpl
pop
inc
bound
les
aaa
enter
sbb
stos
lcall
xchg
scas
aam
xor
xchg
out
push
repnz
pusha
fcomp
cwtl
xor
xchg
outsb
sbb
inc
pop
pushf
jno
xchg
in
push
mov
arpl
inc
cmpsl
fwait
push
popf
or
fbld
mov
in
daa
aam
jae
gs
iret
cmp
adc
stc
test
fwait
jno
ret
pushf
rcrl
add
out
divb
in
sub
push
pop
pop
insl
mov
cmpl
inc
jmp
mov
cmpl
push
mov
xchg
es
or
sti
ljmp
insb
mov
insb
mov
mov
and
add
out
popa
xor
adc
inc
test
cmp
rcll
inc
mov
pop
loope
andl
out
xor
and
insl
icebp
inc
enter
cmp
jbe
push
iret
xchg
xor
and
arpl
in
and
testb
mov
enter
xlat
pop
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
cmp
rclb
js
xor
inc
jecxz
push
xchg
dec
adc
ds
sahf
xchg
add
and
lret
sbb
sub
inc
pop
adc
sub
es
adc
mov
or
ret
jp
cmp
pop
inc
call
mov
jge
stos
push
push
fisubrs
mov
cmc
outsb
add
jae
ljmp
shll
fldcw
ja
clc
mov
sti
xor
rorb
and
xchg
gs
pusha
pop
mov
push
adc
stc
cltd
out
pop
mov
sti
daa
repnz
mov
xor
cmp
or
lea
lret
push
test
fmuls
xlat
and
inc
jge
xchg
push
cmp
and
sbb
lret
aam
pop
mov
mov
shll
mov
fwait
movsl
clc
xchg
roll
jno
and
jg
xchg
fiadds
pop
sub
outsl
adc
aaa
data16
fcmovb
ja
ret
add
sbb
push
cmp
dec
es
xchg
dec
aad
or
push
insl
jle
jmp
movsl
sbbl
outsl
test
push
mulb
pop
stos
add
stos
icebp
stos
fcmovne
push
push
add
inc
sbb
and
stc
into
lock
mov
jmp
xor
test
je
hlt
mov
mov
or
arpl
fsubl
popa
inc
sub
test
dec
aas
ja
add
lock
cli
cmp
pop
fisubl
outsl
pop
sub
insb
dec
mov
mov
fmuls
cwtl
shlb
or
shrl
jbe
or
pop
clc
add
adc
and
and
add
fisttps
xchg
psubd
xor
shlb
daa
push
test
jge
jp
shl
loopne
cmp
xchg
mov
lcall
and
adc
sub
xchg
orl
fsubrs
push
addl
and
retw
lret
imul
jo
lcall
mov
xor
add
and
sbb
sub
lahf
or
sarb
inc
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
mov
fwait
jle
js
in
js
movsb
mov
add
std
stos
jno
ret
push
fcmove
aad
iret
out
inc
flds
mov
data16
cmp
imul
xor
lahf
pop
add
pop
enter
jnp
jg
shl
add
xchg
fdivl
mov
cs
pop
jb
shrb
cs
sti
xchg
lock
rcrb
scas
xor
cmp
cmp
jno
repz
adc
sti
movl
mov
popf
xor
out
inc
mov
sbb
mull
sub
mov
mov
cmpl
jle
aam
xor
movsl
outsl
pushf
fimuls
gs
stc
sbb
int3
mov
mov
testb
stos
pop
or
ljmp
dec
mulb
add
mov
mov
loope
pop
push
xchg
mov
clc
iret
cmp
lds
icebp
mov
mov
sub
pop
jne
and
jne
mov
mov
test
mov
mov
jmp
inc
mov
sbb
scas
aas
push
subl
push
popa
adc
push
mov
loopne
aam
aaa
adc
mov
lds
inc
mov
sahf
stos
cmp
xchg
cmp
sbb
test
sub
stos
outsl
xchg
cmc
jne
sbb
xchg
xor
mov
lret
lods
push
lret
ffreep
bound
int3
in
leave
and
xor
inc
and
popf
in
inc
daa
push
test
inc
xchg
jge
pop
ret
inc
mov
push
test
cmp
pop
shlb
nop
or
fiadds
clc
cwtl
mov
pushf
nop
pop
dec
dec
and
jp
mov
int
sbb
push
cmp
jne
repnz
inc
or
jb
and
add
push
lret
adc
stc
rolb
sahf
into
into
pop
in
inc
mov
leave
icebp
repnz
ficomps
stc
int3
test
loop
fs
jnp
xor
scas
daa
and
iret
leave
or
in
ret
std
xchg
idivl
pop
sti
pop
mov
or
inc
icebp
addl
pop
gs
mov
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
mov
imul
jle
js
or
test
fbstp
shll
push
lods
mov
jmp
mov
pop
mov
lock
cld
add
cmpsb
sub
xchg
inc
xchg
cwtl
jge
in
sub
jb
pop
dec
cmp
fmuls
addr16
push
lock
mov
das
ror
lcall
test
cs
fcomps
or
xchg
fs
dec
ljmp
xchg
mov
mov
pop
pop
add
rol
xor
inc
ret
call
mov
and
jns
inc
mov
les
test
cmp
add
sbb
inc
ljmp
adc
sbb
jnp
fwait
movsl
clc
mov
stos
adc
lock
add
pop
lock
mov
mov
or
or
movsb
mov
push
or
sub
cmp
ljmp
lret
dec
inc
sbb
lret
adc
pop
xchg
sub
mov
mov
test
inc
xchg
lods
mov
pusha
jbe
test
bound
hlt
jo
xchg
lods
mov
test
mov
inc
mov
fists
fwait
dec
pop
ds
adcb
outsb
jbe
je
sbb
pusha
fucomi
aam
jnp
cmc
adc
dec
sbb
sbb
or
mov
mov
mov
cmpsl
and
iret
mov
pop
or
and
movsl
mov
arpl
lcall
mov
daa
fidivl
popf
pop
mov
cs
outsl
bound
test
test
aas
mov
testl
and
leave
dec
pop
mov
push
les
push
pop
shlb
and
adc
scas
push
imulb
ror
ja
xchg
adc
pop
jo
dec
nop
dec
fistpll
sub
pop
push
ljmp
push
aam
aad
std
pop
mov
push
and
mov
push
lcall
sbb
fs
and
inc
xchg
jge
mov
in
mov
cmp
mov
in
dec
je
addb
jno
mov
push
jbe
mov
mov
or
add
dec
decb
aam
push
jmp
ljmp
dec
inc
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
add
add
push
imul
jo
cwtl
mov
fucomi
mov
push
sbb
sbb
gs
inc
sbb
pop
addl
in
stos
lret
ja
sbb
xor
sub
jmp
daa
aam
call
ja
mov
xchg
fiaddl
sbb
test
mov
stos
push
sti
insb
shl
sub
pop
mov
cmp
push
jne
movaps
aam
adc
outsb
mov
incb
bound
insb
lds
pop
popf
jp
fcoms
sbb
cltd
dec
sahf
icebp
das
fsubr
insl
adc
sbb
clc
push
mov
fbstp
fcomi
lods
jl
pop
sbb
dec
out
divl
or
jns
je
js
push
fcmovnb
lret
int3
adc
jno
adc
lods
xchg
push
mov
ret
das
xchg
fs
cld
in
or
ljmp
into
pop
insb
cmpsl
push
xchg
imul
push
add
data16
gs
push
sbb
jne
push
adc
push
in
outsl
arpl
jb
pop
mov
les
inc
xchg
cwtl
and
cs
mov
jb
xchg
shl
sar
push
inc
jae
xor
ror
test
test
addr16
fidivrl
xchg
loope
popa
jb
test
fucom
dec
roll
ds
push
mov
sbb
xlat
mov
out
cwtl
nop
pop
pushf
int
mov
jge
std
lods
scas
add
movsb
lods
sub
outsl
out
inc
and
out
push
and
call
push
add
cmp
inc
into
pushf
daa
and
mov
insl
jnp
cwtl
cli
dec
mov
shrl
test
pop
pop
fiadds
inc
leave
fs
cmp
and
fistl
xorl
pop
fs
into
ret
stos
mov
sbb
test
jne
lahf
daa
jge
adc
jno
fucomi
dec
test
hlt
mov
adc
fcomps
jp
ljmp
std
pop
pop
mov
jne
and
xor
in
fstps
cmpsb
push
cmp
jb
fs
sub
cmp
pop
mov
and
fs
or
and
in
jbe
mov
push
sti
mov
pop
inc
mov
mov
in
addl
add
ret
rol
fcmovnu
mov
clc
cmp
jle
js
loope
mov
cmc
push
xor
push
test
ret
int
dec
mov
inc
cmpl
xlat
ja
pop
jmp
sarb
mov
xchg
notl
aad
jg
pop
dec
adc
popf
ffreep
test
sbb
pop
mov
outsb
or
inc
cmp
mov
mov
es
rcrb
insl
mov
xchg
inc
push
aas
outsl
ss
dec
jnp
adc
repnz
cwtl
jmp
adc
in
shl
es
add
mov
sahf
mov
adc
sarb
mov
icebp
add
icebp
sbb
cmpsb
adc
xor
mov
mov
addr16
push
in
je
jno
dec
cmpb
mov
rclb
dec
nop
mov
xor
jmp
stos
sbb
mov
sub
xchg
cmp
cmp
add
out
mov
xor
dec
call
ja
mov
cmpsb
and
inc
imul
pop
loope
sbb
push
mov
mov
cmp
jo
xchg
hlt
xor
and
movsl
ret
xlat
clc
mov
popf
rorl
xchg
mov
mov
rcll
out
mov
mov
mov
mov
jo
movsb
outsl
cmpl
adc
mov
push
adc
in
arpl
lret
mov
adc
data16
xchg
sahf
push
imul
mov
dec
push
dec
mov
lret
mov
mov
loop
leave
outsl
and
xor
lahf
pop
cli
sub
mov
insb
bound
sub
fldenv
dec
js
pop
mov
sbb
fisttps
and
f2xm1
into
push
cmp
lahf
jne
test
adc
test
js
cmpb
cmp
mov
outsl
rclb
xchg
incl
xlat
push
xor
xchg
std
repz
mov
aas
mov
sti
cltd
lods
es
jle
pop
lret
xchg
xchg
or
test
pusha
and
lock
push
mov
mov
and
mov
mov
dec
setnp
jmp
pushf
lret
movl
movl
jmp
int
ror
fcmove
leave
sub
in
mov
js
jle
js
je
xor
jle
xor
mov
call
add
and
mov
dec
inc
xchg
mov
and
outsb
sbb
push
js
push
push
xor
aas
arpl
lret
testb
mov
aas
and
rclb
inc
mov
xlat
sbb
sub
aad
xchg
orl
mov
jmp
adc
fisttpll
mov
adc
push
mov
xchg
andl
sbb
lods
in
adcb
in
outsl
or
push
sbb
push
fwait
clc
jb
imul
jae
jg
jmp
jbe
mov
cmpsb
lea
or
in
mov
sub
and
dec
and
bound
scas
xor
jecxz
cmc
shlb
movsl
and
push
xor
mov
shll
pop
push
push
mov
sub
jnp
data16
hlt
dec
sbb
insl
testb
ljmp
add
adc
stos
adc
mov
xor
sbb
ja
test
cmp
pop
or
je
aad
dec
push
jbe
popf
sbb
xlat
fadds
sbbl
arpl
popf
addr16
mov
mov
cmc
stos
dec
and
lahf
imul
sbb
and
mov
out
mov
mov
mov
incb
insl
inc
jg
jecxz
sbb
daa
test
inc
call
mov
cmp
in
lds
or
jge
inc
mov
lahf
fucom
inc
test
adc
lds
imull
cmp
dec
lahf
mov
jb
adc
in
pop
lahf
subb
btc
outsl
in
repz
sub
sahf
movsl
out
fnsave
and
into
into
push
stos
subb
add
sbb
cmp
mov
mov
inc
lock
xchg
dec
hlt
ss
jne
ds
bound
mov
jl,pt
pop
mov
mov
cmc
cltd
lds
in
dec
inc
loopne
cmp
test
int3
dec
pop
mov
adc
call
xlat
and
inc
lds
mov
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
dec
push
test
jno
js
jle
js
fnstsw
cmc
into
adc
arpl
push
xchg
adc
sub
iret
ficompl
pushfw
insl
dec
sub
push
sub
and
dec
mov
dec
pop
and
in
rcrl
dec
lods
clc
and
cmp
xor
push
jecxz
jmp
xchg
popf
mov
jl
jecxz
push
and
repz
push
lods
aam
addl
sub
add
and
sbb
lods
das
test
pop
or
cmpsb
mov
push
mov
sbb
aas
sti
mov
push
aam
dec
scas
loopne
out
neg
js
mov
out
jae
inc
cmpsl
ja
mov
or
mov
mov
xchg
pop
cmp
test
rcl
mov
lock
mov
dec
out
pop
lods
in
or
imul
push
dec
push
sbb
sbb
dec
enter
loope
mov
mov
fistpl
in
inc
or
adc
outsb
push
fwait
inc
adc
in
scas
es
jp
bound
pop
dec
push
and
movl
ret
and
clc
outsb
push
dec
es
dec
adc
ret
mov
movl
rolb
mov
popa
das
shl
int
lds
movsl
xor
cld
push
das
fsubrp
sti
lahf
sbb
add
test
out
popf
cs
lret
inc
xchg
jp
es
dec
xchg
add
movsl
mov
sub
push
add
xlat
nop
jbe
mov
mov
inc
pop
lods
cs
outsl
mov
add
mov
mov
loope
adc
sub
mov
push
outsb
or
mov
and
push
js
stc
lock
loopne
or
push
sub
or
cmp
xchg
popf
pop
enter
incb
mov
xchg
test
jo
add
std
mov
cld
mov
lret
lods
addr16
push
fstpl
jle
ja
mov
pop
call
and
cmp
xchg
mov
pop
cmp
xchg
pop
and
and
mov
sbb
dec
mov
faddl
inc
sti
add
pop
push
bnd
xchg
and
in
lcall
xor
push
mov
mov
jmp
int
xlat
enter
shll
std
xchg
dec
sub
ja
js
jle
js
js
ficoms
sarl
jecxz
pop
fcmovnbe
movsb
lea
cli
stos
sbb
enter
mov
jmp
ret
mov
and
and
cmpsb
or
sub
pop
xchg
cwtl
xchg
dec
sarb
bound
mov
repz
mov
call
shlb
sub
dec
loop
xchg
cmpsl
divb
aas
stos
addr16
push
push
jb
notl
sub
loope
and
out
hlt
out
out
mov
dec
jne
xchg
roll
icebp
push
je
push
mov
dec
insb
push
inc
cmp
outsl
mov
jno
scas
test
pop
push
out
movsb
in
add
test
in
dec
int
adc
cmp
ja
cltd
imul
and
dec
pop
int3
mov
roll
cmpsb
sbb
outsl
pop
or
dec
cmp
add
and
cmp
or
xchg
pop
jl
out
sub
dec
cmp
add
push
mov
xor
sarb
shlb
gs
lock
xlat
cmp
push
fsubp
repnz
bound
or
aam
test
or
add
lods
outsl
or
pop
lahf
packssdw
hlt
sub
xor
jle
imul
adc
cli
jne
dec
sti
mov
adc
jbe
mov
mov
popa
and
js
out
pusha
inc
nop
insl
and
fs
ja
push
jmp
push
cld
addl
dec
shll
push
add
lods
mov
add
fmull
fwait
xor
pcmpgtd
stc
orl
mov
ja
test
les
pop
cmp
inc
sub
or
ret
pop
lret
ret
dec
clc
push
sub
lcall
sahf
loope
mov
jge
mov
add
leave
shl
and
es
cmp
push
push
sub
popf
xor
js
inc
and
xor
outsl
stos
or
inc
pop
popf
or
push
sbb
sbb
push
xchg
push
mov
lea
stos
jmp
and
push
jnp
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
cmp
js
jle
js
mov
pusha
cmp
pop
or
out
push
arpl
or
stc
mov
push
dec
js
shrb
out
xchg
clc
push
sbb
mov
sbb
or
mov
aas
cmpsl
add
clc
aad
loop
mov
es
je
inc
idiv
pop
mov
sub
pop
cmp
jecxz
jne
cwtl
xchg
test
mov
push
add
or
xchg
xor
incb
xor
cmpsl
mov
or
inc
andb
outsl
inc
add
jbe
int3
outsb
aas
push
adc
mov
mov
cs
mov
clc
cmp
arpl
aaa
jnp
pop
add
xor
push
adc
or
xor
test
iret
sub
adc
sar
jne
rorb
sbb
dec
inc
iret
cmpsl
sbb
jo
xor
int
test
insb
xchg
loope
sbb
push
punpckldq
jl
pop
rcl
imul
rorb
fsubrs
inc
adc
pop
repz
inc
mov
pop
sub
rolb
stc
jecxz
shl
xchg
in
mov
sarb
and
or
sub
pop
pop
cltd
js
fcmovbe
and
scas
add
add
jae
in
push
lods
dec
cwtl
sub
lods
pop
sbb
fidivrl
loopne
push
and
stos
in
jnp
sub
jo
into
xor
mov
xorl
xchg
fadds
dec
mov
loop
mov
mov
xchg
popf
adc
in
push
addr16
jb
and
add
leave
sbbl
add
and
imul
fiadds
sub
test
int
mov
arpl
dec
loopne
sbb
dec
push
sti
mov
lea
xor
xchg
std
mov
inc
jl
xor
ja
xlat
and
pushf
dec
push
arpl
cmpsb
ljmp
mov
xor
cs
inc
add
roll
das
xchg
pop
lret
repnz
into
sub
jp
push
xorb
mov
leave
sbb
cmp
fs
xchg
or
cld
mov
aam
jle
xor
add
int3
xchg
mov
ret
adc
sbb
mov
add
clc
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
xchg
mov
jp
js
jle
js
ret
data16
jle
add
les
push
inc
push
bnd
pop
inc
add
xor
jg
lods
test
fildl
ret
cmp
arpl
mov
mov
arpl
xlat
pop
out
outsl
test
fwait
in
add
push
mov
aad
out
push
push
push
notl
movsb
testb
jge
daa
jbe
sbb
cmpsb
cld
or
cmp
arpl
mov
ret
xchg
cwtl
loopne
std
jl
popf
inc
xor
and
sbb
je
cmp
lret
call
arpl
xor
xchg
mov
imul
insl
cmp
mov
cwtl
lock
imul
scas
sub
movb
dec
cltd
pusha
xchg
xchg
push
adc
adc
enter
in
dec
repz
sbb
imul
adc
adc
outsl
rcll
ficomps
add
mov
add
push
and
popa
fcompl
or
ret
in
cld
and
sbb
movsl
jp
lea
dec
data16
loope
pop
das
cmpb
not
popf
dec
lods
fisubl
sbb
inc
xchg
pushf
stc
add
push
dec
ss
push
mov
inc
outsb
cmp
or
decl
push
scas
loopne
loopne
cmp
cmp
loope
dec
push
into
enter
xchg
xor
add
js
ss
aas
nop
lcall
adc
mov
add
push
jecxz
push
enter
xlat
ljmp
jne
popl
andl
sub
mov
xor
repnz
test
in
jg
popf
lock
push
sbb
mov
dec
lcall
jmp
outsl
arpl
fs
fisubrs
cld
sahf
add
les
push
sahf
mov
loope
jbe
loope
out
or
je
jo
daa
in
lds
sub
jl
je
mov
loopne
mov
loopne
insl
sbb
add
test
push
icebp
test
lahf
xchg
pop
pop
pop
ljmp
shll
and
jmp
mov
sbb
push
dec
add
mov
mov
jmp
enter
cld
imul
enter
js
jle
js
out
dec
cmc
sar
mov
adc
loop
aad
dec
pop
xor
mov
mov
fisubl
add
fadd
js
sti
cmp
mov
and
inc
mov
fildll
rclb
pop
cmpsb
mov
ffreep
mov
jnp
cld
inc
inc
lret
sbb
pop
outsl
push
push
mov
in
in
vmovaps
and
incb
pop
adc
pop
ljmp
test
pusha
adc
jge
and
xor
loopne
xor
sub
and
jecxz
sbb
jmp
jle
fisubl
add
xchg
aaa
xor
fimull
mov
movsl
pop
add
mov
and
ja
add
mov
stos
ljmp
adcl
mov
xchg
in
inc
push
fcoms
mov
imul
pop
fcomps
add
xchg
sbb
push
or
cmc
or
fadd
clc
test
sub
dec
and
jp
sub
pop
call
fxam
jecxz
popf
cmp
mov
xchg
jg
sbb
push
jl
clc
decl
mov
mov
fwait
mov
xchg
adc
xchg
lret
daa
push
clc
and
das
rcl
outsb
mov
fsubl
sbb
pop
dec
xchg
sti
jl
subl
cmp
jecxz
inc
xchg
icebp
mov
jg
call
push
sub
jecxz
xor
out
out
mov
and
mov
sbb
add
mov
mov
jb
cmpsb
les
jo
push
add
mov
push
or
std
add
mov
ret
cmp
xchg
fbstp
and
push
and
test
pop
insl
imul
movsb
lods
insl
cli
cwtl
out
adc
mov
lds
test
out
lods
int3
aad
or
jne
imul
sub
adc
cmp
cmpsb
push
xchg
ret
inc
mov
add
cs
dec
in
idivl
call
lret
das
dec
push
and
cmpl
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
loop
sub
js
jle
js
pop
out
ret
incl
cld
push
jmp
sub
fisttpll
mov
pop
sahf
je
in
sub
addb
ret
in
pusha
testb
cmpsl
and
and
mov
jmp
xor
xchg
push
pop
iret
mov
fstpl
push
adc
stc
inc
imul
lcall
mov
add
ss
add
cmp
jg
xchg
mov
cs
repnz
scas
mov
faddp
out
sahf
or
insl
int
lea
mov
inc
pusha
jb
dec
push
popa
pop
or
pop
dec
mov
jns
inc
ficoms
dec
mov
pusha
ljmp
mov
out
sub
imul
push
push
lods
adc
dec
sbb
lea
xchg
int
shll
test
add
outsl
push
aad
mov
mov
in
xchg
lds
insb
jg
sbbl
cmp
clc
mov
mov
imull
shll
add
mov
pop
leave
and
fisubrs
dec
jecxz
jmp
add
cmp
fcmovnbe
cmp
fwait
sbbb
mov
scas
repz
stos
gs
sub
cmpb
push
jae
adc
mov
imul
adcb
inc
push
sub
test
or
out
pop
cli
ja
jmp
test
lock
add
or
xchg
jge
or
sub
inc
in
push
mov
mov
repnz
xchg
mov
dec
pusha
pop
mov
in
rcr
insb
mov
xchg
mov
xchg
jp
daa
xor
mov
std
fsubp
aas
xor
nop
loopne
ret
rorl
pop
pushf
mov
data16
sarl
movsb
bound
je
mov
stos
mov
mov
mov
test
icebp
pop
lds
lcall
lea
jge
inc
dec
mov
mov
pop
xchg
adc
stc
outsb
mov
lcall
shll
cmpl
mov
cmpsb
lds
mov
jns
xchg
lahf
std
lcall
push
jnp
out
sbb
lea
mov
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
pop
stos
notl
jle
js
mov
jle
into
push
or
pop
stos
xchg
sbb
and
inc
adc
ljmp
jecxz
mov
jl
and
or
mov
bswap
or
mov
icebp
and
xchg
rcll
sbb
push
jg
in
dec
inc
adcl
jne
add
inc
imul
cmp
inc
lret
mov
sbb
mov
movsb
divb
push
arpl
movsb
int3
in
sbb
sahf
insb
fldcw
xor
repnz
dec
in
and
fsub
leave
cmc
jl
cmp
ljmp
dec
icebp
sbb
lret
les
xlat
inc
dec
sub
jl
insb
icebp
adc
pop
jp
gs
pop
sub
test
sub
inc
push
test
loop
ret
or
push
and
jl
mov
adc
fisttps
dec
and
xor
data16
cwtl
xor
jmp
mov
mov
testb
pop
adc
mov
adc
js
adc
xchg
jmp
sub
pop
mov
or
lods
sub
sbb
jmp
cmp
shll
pop
mov
or
pop
xorl
and
lahf
jmp
sbb
mov
and
out
data16
outsb
fstpt
fs
sbb
jl
repnz
lret
lahf
pusha
out
jle
add
dec
mov
sub
push
xchg
push
lea
xlat
fwait
scas
ja
lods
shlb
sub
cltd
out
out
mov
adc
lds
stc
jge
and
or
call
xchg
lret
test
cltd
jmp
pop
repnz
push
inc
mov
sbb
push
clc
mov
jno
je
mov
dec
in
xor
iret
pop
sarb
add
or
scas
push
mov
push
icebp
adc
lds
dec
xchg
push
int
and
push
aad
fildll
mov
sbb
popa
xchg
mov
pop
out
adc
sahf
mov
xchg
adc
adc
jb
rcll
sbbb
pop
cs
mov
jg
inc
orl
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
ljmp
stos
addb
jg
in
js
aad
mov
mov
lcall
inc
adc
mov
enter
enter
pop
call
dec
data16
mulb
seta
cmovp
push
and
mov
xlat
fsub
std
arpl
stc
into
pop
ret
aaa
insb
mov
push
cmc
push
test
arpl
lcall
and
xor
int3
or
pop
dec
dec
out
dec
sbb
inc
cld
push
add
jg
aas
scas
and
jmp
fucomp
push
dec
jb
dec
loopne
pushf
outsl
xchg
outsb
sbb
icebp
jo
dec
inc
test
mov
xchg
cmc
xchg
jp
and
cs
cmc
push
add
xchg
icebp
out
inc
ret
into
stos
add
cli
icebp
out
cs
add
jmp
jge
sbb
mov
mov
mov
or
or
pop
jb
es
adc
std
adc
stos
inc
sbb
das
enter
scas
cmp
idivb
out
xor
scas
xchg
repnz
es
dec
out
xchg
lret
inc
adc
out
in
jl
push
nop
adc
lahf
lock
mov
jl
mov
enter
lea
popf
out
dec
cs
test
cwtl
xchg
mov
insb
jg
ret
insb
stc
lahf
and
std
lds
cltd
ljmp
cmpsl
add
addr16
mov
cmp
iret
xor
scas
add
icebp
data16
and
jno
fcmovu
mov
idivb
push
xor
jmpw
cwtl
jno
sbbl
loopne
mov
cmpsl
test
mov
sbb
cmp
cwtl
ds
int3
or
xchg
cmpb
pop
inc
idivl
lcall
insb
adc
cwtl
pusha
jb
adc
dec
enter
lods
mov
fbstp
movsb
jo
outsl
in
cli
cmp
push
pop
lcall
mov
sbb
bound
rclb
push
pop
xor
sub
pop
imul
gs
ljmp
rep
xchg
fldt
and
repnz
inc
and
mov
fs
popf
enter
adc
iret
cld
sub
imul
mov
jmp
rol
leave
rcr
rcr
enter
aad
dec
adc
push
jg
in
js
test
out
sbb
out
push
jae
pop
out
inc
pop
icebp
imul
fldenv
pop
nop
xchg
in
xor
mov
inc
or
out
sbb
dec
fs
mov
add
mov
mov
lea
shlb
dec
idiv
dec
cmp
mov
loope
xlat
ficoms
ficomps
pop
push
outsb
cmpsl
leave
cmp
mov
cmp
jle
sbb
icebp
cmp
inc
pop
mov
hlt
cmp
xchg
bound
cmpsb
outsl
xor
addb
rolb
inc
adc
nop
mov
jg
add
mov
or
popa
orb
mov
or
jbe
and
jl
scas
je
scas
mov
ds
mov
adc
pop
pop
aas
push
sahf
ss
lret
enter
stos
cmp
fidivrs
dec
mov
dec
les
daa
dec
in
aaa
push
push
loop
div
mov
inc
adc
push
stos
das
inc
xchg
dec
test
sub
lods
shlb
inc
xor
sahf
mov
sbb
pop
dec
mov
iret
fisubrl
lahf
ss
xor
aas
loop
loop
pushf
dec
sub
je
dec
mov
arpl
push
fs
mov
mov
ficompl
sbb
xor
out
es
or
push
pop
mov
mov
pop
mov
xchg
push
imul
jb
in
push
sub
push
jp
stc
push
or
or
das
cmp
ss
push
or
sar
adc
iret
mov
jp
xchg
rorl
cli
or
adc
repnz
sub
inc
fwait
cmp
je
adc
adc
aad
jmp
lret
jnp
cwtl
xchg
cld
nop
ficoml
sub
pop
insb
jp
jg
adc
and
data16
push
mov
outsl
loopne
outsl
inc
pushf
pop
rcll
mov
rorl
ficoml
fiadds
adc
mov
cmp
movsb
movsl
imul
mov
cmp
adc
jmp
sahf
ds
xor
jmp
les
int
aam
mov
fs
fcoml
js
jle
js
ficoms
mov
xor
ljmp
das
lods
pop
rol
sbb
xor
mov
add
or
or
jae
sub
insl
arpl
pop
dec
lea
and
jbe
pop
jl
and
and
pop
stos
test
push
adc
hlt
dec
lds
adc
mov
aad
idivl
jmp
mov
inc
mov
cmp
mov
xor
inc
sub
and
add
add
popf
shl
jmp
fistl
adc
mov
inc
or
mov
lret
fcomps
js
out
and
ljmp
lea
mov
int3
jne
cmp
lea
and
adc
or
xlat
or
mov
adc
shll
scas
sbb
cwtl
mov
cltd
lods
test
out
push
ret
inc
pop
fwait
sbb
cmpsb
jne
xor
stos
rorl
adc
dec
or
push
mov
push
pop
cmpsl
jnp
arpl
int
mov
rcll
and
cmp
test
mov
xor
leave
pop
je
mov
jo
mull
ds
daa
addr16
insl
add
fstpl
adc
stos
das
popf
inc
pop
aaa
inc
push
xor
cmp
dec
fidivl
xor
es
fcomp
pop
xor
imul
add
jb
fistpll
add
pushf
sub
out
dec
cmc
push
xchg
pop
f2xm1
aam
xor
notl
pop
sbbl
xchg
daa
mov
push
push
mov
loope
out
and
inc
inc
push
cli
inc
cmp
ss
inc
pop
outsb
fbstp
lea
cmp
mulb
into
add
push
dec
insb
cmc
andl
je
fs
sahf
nop
loop
lock
jmp
sbb
xor
cmpsb
xor
sub
pop
mov
cli
xor
add
push
inc
sub
xchg
or
clc
je
cmpsb
cmp
jns
addl
ret
mov
imul
mov
or
add
les
push
adc
shlb
out
leave
loop
inc
popa
pop
fwait
dec
lret
adc
lds
and
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
xchg
rorl
js
jle
js
or
sub
sub
hlt
call
push
xor
or
jno
ret
mov
pop
xor
in
xchg
xchg
insb
mov
std
or
adc
xchg
xor
rorl
sbb
jge
fisttpl
adc
inc
jg
push
and
rorb
mov
jns
xchg
adc
lret
je
or
or
push
imul
lcall
add
aas
fcmovnbe
icebp
xchg
fcmovnu
repnz
mov
mov
push
flds
dec
cmp
aas
js
sub
inc
aad
inc
fs
mov
por
divb
mov
pop
je
mov
sti
pushf
adc
mov
xchg
out
push
inc
cmpsl
faddl
inc
or
cmp
push
icebp
push
mov
add
ficoms
insl
inc
arpl
push
idivl
jecxz
adc
jp
sbb
cli
cmc
and
shl
roll
mov
cs
in
xchg
sub
hlt
dec
push
loop
mov
repnz
sbb
loope
adc
mov
xor
inc
pusha
xchg
jl
inc
fs
adc
rcr
mov
sub
dec
test
or
cmp
inc
mov
and
add
and
sbb
inc
test
xchg
insb
adc
push
dec
loop
fincstp
sub
pop
inc
sbb
cltd
mov
negl
aas
mov
mov
movsb
lea
mov
lods
fsubp
in
mov
mov
jecxz
jne
sbb
mov
loopne
xor
mov
mov
mov
xlat
les
mov
xor
mov
stos
loop
xor
fcmovnu
arpl
dec
cmp
ret
addb
sub
add
repz
mulb
dec
sbb
dec
jb
out
and
xor
lret
ficoms
pop
ret
fadd
jmp
sbb
into
mov
mov
sub
mov
push
and
and
sti
loopne
mov
jmp
int3
pop
mov
lret
movb
lahf
lret
inc
pop
jge
lods
in
sahf
imul
mov
jmp
lret
ret
vpand
ret
xorb
js
jle
js
sbb
and
test
xchg
jecxz
push
hlt
hlt
nop
jp
mov
adc
sbb
in
push
cmp
sahf
cltd
enter
stos
fnstcw
adc
aad
nop
mov
push
or
cld
push
mov
or
lods
incb
mov
bound
shlb
imul
mov
fimuls
imul
or
nop
arpl
dec
xlat
cmp
mov
jg
mov
jbe
loop
fwait
arpl
mov
and
jno
mov
pop
jle
mov
jns
mov
mov
add
cmp
pop
hlt
mov
std
and
cmp
fmull
out
pop
inc
inc
stos
rcrl
sub
shlb
mov
ficoml
out
jno
das
movhps
xchg
jle
adc
cmp
shrb
movsl
popa
data16
insl
jp
sub
out
rclb
enter
inc
pop
hlt
lret
mov
nop
push
cwtl
ds
push
mov
jne
mov
cmpsb
adc
xchg
aas
pop
lret
leave
xlat
adc
mov
dec
sbb
aaa
push
sbb
dec
adc
xor
adc
jnp
push
or
add
cmpsb
push
lods
mov
rcrw
mov
gs
into
inc
and
dec
fs
ror
sub
cmpsl
jo
rol
jecxz
test
pop
shll
pop
pop
sub
cmp
add
test
mov
call
cs
mov
in
and
xorb
notl
icebp
in
push
imull
je
xlat
xchg
sub
mov
insb
cmp
fdivrl
fnstsw
je
jbe
arpl
fwait
out
in
inc
incb
push
fsts
pop
cmc
into
adc
cmc
aas
sbb
in
cwtl
int3
jns
iret
ss
xchg
mov
mov
xchg
and
jb
pop
dec
dec
fisubrl
and
xchg
cmp
xor
in
jp
mov
pop
adc
movsl
mov
xor
rcrl
scas
insb
pop
adc
pop
pop
adc
shl
repz
jnp
jle
cmpb
push
dec
cltd
xchg
outsl
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
loop
cmp
or
js
jle
js
aam
mov
mov
and
push
test
push
or
add
and
or
cld
cmp
and
cli
mov
psubsb
lret
xorl
lret
adc
mov
jo
aad
jmp
out
push
aaa
or
adc
arpl
and
push
outsl
mov
jae
cmp
add
xor
aam
pop
out
mov
rorb
ljmp
pop
jns
push
das
adc
push
shll
shll
sbb
push
xchg
in
xchg
mul
ret
dec
inc
mov
stc
aad
sahf
shlb
ljmp
mulb
loope
cmpsl
cmp
test
bound
in
test
lds
imul
loopne
xor
gs
adc
cmc
ret
lods
cmp
inc
pop
pop
outsl
cltd
inc
jo
sbb
sbb
cs
sbb
push
push
mov
push
adc
outsl
mov
jmp
xor
ret
and
jbe
pop
cmp
imul
and
and
ss
push
adc
flds
mov
mov
mov
jl
pop
lcall
jmp
inc
xchg
jp
fildll
mov
jge
hlt
mov
xorb
sti
push
xor
cld
mov
mov
out
pop
cmp
xor
rcrb
xor
jle
addr16
push
xor
jge
mov
mov
je
jecxz
stos
xor
add
pop
fcomp
sub
movsl
dec
rcr
loop
int3
inc
push
pop
test
cmp
or
and
aaa
add
jle
outsl
mov
xchg
fsubrs
das
mov
cmpl
test
sbb
cltd
call
mov
gs
push
inc
sub
insb
stos
outsb
xorb
imul
lods
pop
lret
inc
and
loope
pop
aad
mov
xor
adc
mov
inc
inc
stos
jle
mov
pop
mov
xchg
jg
xchg
mov
test
add
cmpsl
lret
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
xchg
cwtl
inc
xor
jle
js
xchg
sub
in
add
mov
jmp
jne
test
mov
lock
jmp
popa
in
push
repnz
hlt
dec
leave
adc
insl
pop
loopne
in
add
mov
loop
mov
test
mov
lret
xchg
inc
xor
insl
jg
pop
dec
jo
sbb
iret
fdivs
cltd
mov
into
cwtl
lods
subb
cmp
mov
mov
and
push
adc
mov
fucomip
xor
and
jle
iret
mov
mov
orl
ja
nop
push
out
push
inc
insl
adc
sahf
mov
mov
xor
dec
jns
pop
pop
sbb
jge
and
cmp
jns
lods
inc
cld
or
and
mov
dec
xchg
mov
cltd
mov
push
adc
rolb
mov
cli
out
pop
mov
addr16
pop
mov
cwtl
mov
jmp
sub
insb
jno
adc
cmp
fdivr
in
mov
cli
mov
stc
adc
adc
repz
mov
sub
mov
ret
cmc
pop
mov
out
mov
out
push
cmp
movsb
xchg
mov
insl
xchg
xor
mov
int
push
sbb
fldl
push
pop
mov
test
jmp
loopne
pop
push
or
out
cmpsl
aad
xor
dec
mov
insl
jae
xchg
add
or
jmp
adc
subl
dec
xchg
notb
inc
mov
pop
ljmp
mov
js
cltd
js
sbb
sbb
mov
rcll
cli
add
imul
lods
sub
add
out
xchg
adc
pop
add
movsb
pop
dec
bound
pop
mov
flds
adcb
adc
mov
ja
test
jmp
fsubrs
pop
mov
mov
mov
fsubs
std
aam
mov
test
ds
outsb
or
inc
xorb
shrl
call
repz
pop
sub
pop
orl
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
cmp
adc
xchg
jle
js
jle
int3
stc
stos
and
out
mov
add
inc
mov
imul
push
xchg
dec
adc
stos
scas
int
outsl
cmp
test
outsl
mov
xchg
jge
mov
filds
push
push
mov
fimuls
ror
inc
or
mov
cmp
adc
inc
leave
fimuls
mov
int3
sbb
xchg
idiv
bswap
jo
repnz
push
xchg
inc
lods
pop
adc
fistps
pushf
dec
fstl
cmpsl
in
imul
jbe
jge
jae
jns
jmp
sbb
out
inc
repnz
dec
adc
inc
fldenv
pusha
dec
or
jle
mov
outsb
xchg
push
inc
xchg
or
sbb
ljmp
cmp
clc
sub
aas
pushf
test
rolb
lahf
mov
mov
jp
scas
xor
mov
popf
jle
outsl
and
rol
hlt
dec
or
addr16
push
sbb
xor
outsl
mov
lds
aad
and
cmp
outsb
jno
imul
pushf
push
mov
pop
xlat
xor
mov
cltd
push
repz
pop
mov
pop
mov
in
sub
insb
jl
sub
inc
fs
and
cmc
aam
mov
mov
stc
push
or
rcll
mov
ljmp
mov
int3
ret
cli
xchg
mov
cmp
sbb
shl
jne
mov
in
lea
test
cwtl
mov
bnd
add
and
sti
and
mov
jg
adc
in
mov
fwait
int3
jb
imul
popf
push
sbb
push
loop
pop
in
pop
aad
aaa
icebp
pushf
bts
mov
lods
out
ficoml
in
push
pop
lods
stc
xchg
stc
sahf
fbstp
xchg
add
inc
jnp
push
lock
mov
push
mov
test
lahf
test
mov
sub
push
lds
sbb
adc
les
dec
mov
lret
push
mov
stos
es
ss
xorb
cmp
push
inc
negl
dec
cmp
pop
pop
into
xor
xchg
clc
adc
inc
and
test
sub
xor
data16
test
stc
pop
out
out
adc
sti
cltd
add
xlat
push
jae
jnp
sbb
rolb
adcl
addb
subb
mov
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
iret
mov
js
jle
js
into
push
int
movsl
pop
insb
jo
and
sbb
and
punpckldq
jecxz
push
lds
cmp
fs
iret
mov
ljmp
pop
cmp
insl
inc
xlat
mov
aam
lock
push
mov
fwait
or
push
mov
push
out
cli
int
loop
addl
movsb
jmp
call
or
scas
aas
jmp
push
adc
push
aas
andb
adc
push
push
mov
outsb
sub
fcmovne
xchg
inc
scas
lods
mov
jmp
push
or
iret
xor
loop
mov
sbb
sub
xor
imul
data16
push
jle
push
sbb
arpl
test
out
bound
jp
out
ljmp
in
andb
add
mov
sub
xor
pop
inc
push
icebp
stos
mov
push
sub
aad
andnps
outsl
sti
sub
push
jle
outsl
in
dec
mov
sub
roll
jns
push
dec
jae
lret
mov
in
sbb
push
and
pop
cmpsb
stos
orl
xchg
xchg
movsb
adc
loop
jp
xor
xor
add
addl
xchg
adc
out
test
mov
jb
pop
scas
push
js
mull
in
dec
aam
inc
pop
cld
jno
and
add
popa
dec
lock
inc
sub
push
mull
push
pop
fidivrs
lods
imul
scas
repnz
lods
xor
enter
jge
fnstenv
cs
aam
stos
out
in
sti
mov
stos
push
or
lahf
pop
loop
ja
js
mov
cwtl
pop
pop
and
out
jle
pmaxsw
arpl
cmpsl
loop
cmp
dec
ds
xchg
inc
mov
inc
jb
jbe
pop
push
push
lret
dec
jecxz
jb
sbb
mov
aaa
fst
jg
lods
fiaddl
sub
jl
mov
outsb
movsl
mov
sbb
movsl
sbb
nop
and
xchg
sbb
mov
rolb
or
inc
stc
ja
dec
adc
adc
jge
pop
mov
sbb
ds
fcomip
dec
call
add
sbb
mov
pop
pop
inc
pop
mov
mov
push
leave
dec
dec
mov
clc
pop
lret
repz
add
mov
leave
push
mov
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
ljmp
jg
xchg
jle
js
pop
xlat
and
aaa
loopne
xor
pop
push
xchg
test
sub
pop
cmp
xor
push
cmp
xor
test
into
shll
jns
push
mov
cmp
loopne
add
pop
fnsave
insb
out
add
das
gs
pop
cmp
inc
pop
push
leave
popa
ss
mov
imul
jo
adc
into
enter
fstpt
adc
mov
or
inc
jp
out
jecxz
out
test
jge
out
mov
lret
or
mov
inc
cli
pop
sbb
pop
les
jae
mov
mov
jns
xlat
aam
inc
or
sahf
cmp
xchg
scas
flds
xchg
int
imul
pop
aad
fcmovb
bound
jnp
roll
add
mov
aam
sbbb
cmpsl
dec
mov
outsb
out
mov
pop
push
jae
push
xchg
popa
push
sbb
pop
mov
dec
cmp
inc
fcom
add
std
xchg
add
aad
add
es
les
rcl
in
xorb
pop
jge
shll
insl
pop
xchg
ja
pop
add
pop
cltd
lods
mov
lods
ljmp
das
leave
dec
jp
imull
popa
sbb
mov
sbb
jg
fld
fcmovnb
dec
inc
nop
in
dec
sbb
das
arpl
xor
out
lods
subb
in
mov
addr16
dec
int
ja
stos
mov
outsl
cmp
sbb
testl
mov
aaa
insl
mov
test
or
fwait
inc
or
cmpsl
bnd
scas
in
jb
push
iret
mov
call
lret
cmc
int
fwait
adc
dec
test
or
setae
mov
pop
adc
mov
jmp
cmp
pop
jmp
push
inc
repnz
fwait
pop
pop
sbb
mov
and
es
in
mov
in
daa
int
push
pop
sbb
scas
dec
xor
addl
ja
scas
stos
push
and
lock
sub
clc
inc
in
out
sbb
cwtl
xor
mov
stc
cmp
ljmp
hlt
xchg
pop
jg
test
addr16
ds
jmp
lcall
fisttpl
push
rorl
mov
in
leave
and
aam
xchg
mov
lret
pop
stos
push
jo
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
fnstsw
js
insb
ret
mov
nop
mov
cmp
jmp
mov
inc
int
aaa
adc
pop
xchg
aas
push
push
sub
jmp
sub
scas
cmpl
int
clc
sub
dec
xor
adc
sub
mov
mov
mov
xchg
mov
fiaddl
int3
lds
pop
ret
sbb
dec
xor
mov
scas
cmp
stos
xchg
jle
test
ja
arpl
pusha
dec
test
nop
cmpsl
push
jmp
push
stos
les
push
sub
jns
movsb
mov
dec
push
mov
mov
sub
mov
or
dec
mov
aam
out
lret
pushf
andb
mov
fxch
jbe
lock
out
sub
loope
fstpl
sub
sbb
out
dec
sti
cli
and
test
fdivl
dec
stos
xchg
ret
lret
pop
aad
leave
stc
in
dec
add
pop
push
push
add
mov
int
icebp
inc
sub
test
xor
int3
fwait
push
loopne
mov
pop
push
andb
sub
xor
sbb
lahf
jns
cmp
repz
test
xchg
in
mov
add
stc
dec
jo
mov
push
sub
pop
mov
ljmp
mov
stc
in
jne
add
dec
sbb
push
ret
addl
mov
push
cs
jae
fists
inc
mov
addb
mov
mov
pop
in
cmp
cwtl
mov
inc
sbb
stos
and
inc
jbe
xlat
outsb
pop
pop
mov
aas
jmp
cmp
mov
ret
aam
xor
ljmp
mov
push
pop
mov
mov
jecxz
xor
mov
mov
mov
inc
jge
or
ficompl
cs
pusha
test
pop
clc
mov
stos
cmp
cmp
ret
or
and
push
jg
xor
mov
xor
lahf
mov
lds
inc
pop
jno,pn
lea
jne
push
push
add
dec
mov
adcb
leave
clc
repnz
das
fmul
inc
ss
mov
loope
scas
call
cmpl
jb
push
sar
adc
jmp
adc
or
push
or
xchg
cltd
insb
in
test
ud0
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
xchg
sbb
xchg
jle
js
adc
std
jecxz
notl
rorb
and
cmp
pop
push
cmpsl
sub
lret
push
arpl
pop
lods
sub
pop
or
ret
sub
jne,pn
pop
mov
mov
idivl
mov
cwtl
and
jge
je
mov
or
mov
loope
gs
enter
sbb
inc
mov
fsts
xor
jg
data16
shl
mov
pop
or
mov
jbe
mov
stos
push
pushf
dec
push
and
insl
in
adc
shll
sti
es
push
sub
jmp
js
pusha
in
iret
cmp
lock
add
dec
cmc
cs
in
test
push
cmp
or
pop
dec
cmp
jo
lds
inc
or
push
fwait
mov
adc
sbbb
sarl
cmc
fmulp
sbb
dec
inc
imul
inc
jl
ficoml
jge
jo
loop
pusha
adc
pop
imull
cmp
stos
mov
es
push
mov
fnsave
outsb
lret
add
push
push
ljmp
push
leave
or
sub
add
call
xchg
jns
inc
cmp
jno
insb
insl
icebp
cwtl
imul
scas
sbb
jns
subl
mov
or
mov
notb
or
mov
push
sbb
das
dec
xor
fidivrs
into
aad
shrb
mov
add
out
ja
ror
xchg
sbb
fmull
push
xchg
mov
aam
test
aad
sbb
xbegin
daa
ret
lods
pop
or
lretw
sub
inc
mov
xor
pop
inc
cmpsb
clc
push
or
fs
mov
in
arpl
jne
dec
adc
ljmp
mov
repz
stos
int3
mov
out
push
xchg
clc
das
adc
sbb
add
push
push
iret
aam
in
dec
lods
movsl
pop
loop
push
sbb
dec
or
lods
xchg
dec
mov
les
mov
inc
bound
or
add
repnz
xchg
in
std
inc
aas
rclb
sub
add
cmpb
adc
not
add
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
andl
js
mov
stos
push
andl
or
aaa
cmp
dec
btr
inc
rorb
jnp
imul
pop
icebp
std
cltd
test
push
nop
enter
cld
test
jmp
popa
sub
int
jb
aad
insl
xor
jns
pop
fwait
xor
push
sbb
jb
in
rcrl
push
in
jle
lret
inc
sbb
or
std
jmp
pop
insb
adc
setg
dec
push
scas
dec
and
pop
ja
xchg
mov
dec
lea
push
push
fisttpl
push
lret
cmpsl
mov
push
cs
daa
fwait
xchg
stc
xor
and
xor
or
mov
add
lea
push
les
sbb
adc
cmp
mov
cs
or
fcmovnb
loope
ljmp
cmp
inc
pop
add
sub
scas
xchg
push
push
pop
out
cwtl
out
adc
push
stos
xchg
dec
and
lret
jne
or
xchg
lds
dec
jb
clc
ja
mov
pushf
ficompl
and
stos
jnp
pop
bound
inc
jmp
scas
mov
cmp
push
in
dec
lock
repnz
test
mov
xchg
inc
push
mov
fsubrs
scas
lcall
insl
pop
pop
data16
scas
or
fisttps
sub
xor
mov
xor
add
mulb
jbe
xchg
aaa
lea
ret
xchg
es
rorl
or
stos
stos
mov
addr16
mov
mov
pop
or
jp
sbb
sbb
rcrl
faddl
jnp
in
jp
int3
fists
sbb
xchg
rcr
fwait
mov
les
ljmp
push
iret
mov
mov
lds
cltd
jnp
cmp
dec
push
xchg
or
xchg
jl
mov
jne
sbb
mov
add
popl
add
int3
or
ret
pop
pop
push
sbb
xchg
sub
add
jp
std
in
push
aaa
jae
stos
sub
daa
notb
sbb
add
addr16
mov
aam
xchg
xchg
cmp
and
test
aam
add
ljmp
ja
xchg
push
pop
cld
rclb
pop
dec
mov
fiadds
cld
inc
call
out
and
inc
mov
cwtl
int3
xor
mov
jg
mov
inc
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
daa
decl
xchg
and
xchg
jle
js
push
shr
insb
in
rcll
add
mov
outsl
test
outsl
js
adc
and
sbb
outsl
aam
jae
js
stos
xlat
fs
adc
push
mov
stos
incb
xor
mov
sarl
lcall
outsb
adc
push
mov
scas
loope
rcll
dec
pop
xchg
cmp
jl
lods
jmp
cmpsb
fdivrs
mov
pop
push
pop
out
lods
shlb
cmc
aaa
mov
test
insl
jnp
jge
push
add
add
xchg
sbb
jo
das
adc
sahf
push
xor
jne
mov
dec
testl
cli
arpl
aaa
mov
push
test
mov
shll
or
xlat
sbb
stc
push
dec
jo
es
pop
push
and
mull
test
push
fiaddl
pop
cmc
lods
roll
jl
inc
mulps
cld
pop
aam
rolb
rorl
std
mov
push
xor
dec
ret
out
add
sbb
mov
inc
adc
inc
imul
mov
jg
addr16
nop
adc
in
popf
xor
arpl
pop
adc
sahf
push
aaa
cld
repz
and
iret
cli
add
lock
cmc
lds
mov
leave
pop
inc
mov
inc
lods
lods
add
lods
ficoms
push
lret
xchg
sub
cmc
scas
jle
sub
inc
sbbl
movsb
pop
or
or
cmp
cmp
mov
add
jge
add
scas
rorl
cmc
stos
sub
lcall
mov
sub
cld
dec
push
in
cmpsb
aas
outsl
js
adc
xchg
leave
push
jmp
mov
inc
in
push
cltd
mov
andl
jno
cmp
repz
mov
sub
mov
test
adc
push
mov
push
mov
js
jp
xchg
sub
scas
icebp
inc
fwait
inc
in
lods
push
inc
cmp
das
lds
jnp
xor
insl
repz
into
sbb
push
add
pop
test
inc
je
aas
push
and
je
mov
in
out
jnp
xchg
cmp
popa
stc
out
jmp
mov
test
add
pop
jno
jno
mov
inc
ljmp
nop
ret
daa
cwtl
jl,pt
ja
les
and
test
popf
into
push
or
or
jecxz
xor
sub
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
jl
cmp
dec
gs
leave
pop
negl
inc
dec
das
add
cs
add
and
and
xchg
cs
mov
int
xor
mov
add
or
jg
inc
rcll
adc
shrl
test
inc
je
in
xchg
outsb
in
popa
les
iret
push
and
loope
inc
adc
jmp
xchg
xchg
adc
movsl
or
lahf
adc
psubsb
decl
clc
test
aas
push
iret
clc
cs
push
mov
jnp
idivl
enter
push
pop
test
leave
xor
and
lret
mov
cmpsb
jmp
push
popl
nop
ljmp
xchg
fimull
mov
adc
pop
adc
xchg
pop
push
hlt
decb
outsl
ljmp
lcall
mov
xor
or
cmp
cmc
inc
iret
iret
aam
repnz
outsl
cmp
testb
cmp
sahf
adc
into
or
xor
cld
testb
mov
pop
and
fbld
add
imulb
imul
sar
leave
lods
jae
mov
movsb
xchg
jecxz
dec
rorb
inc
cmc
xchg
out
dec
jne
xchg
sbb
jo
dec
scas
or
cwtl
fsubrp
es
push
scas
mov
shll
and
cmp
bound
pop
jp
fwait
gs
and
stc
xor
pop
sub
sbb
test
pop
xchg
les
scas
inc
pop
cli
push
icebp
push
xchg
jmp
fldenv
pop
int3
push
sbb
lods
adc
cld
lret
mov
xchg
popf
xchg
fimuls
call
add
mov
inc
mov
xor
addr16
adc
mov
dec
xor
leave
aam
inc
arpl
rcll
hlt
enter
sbb
lods
je
xchg
fmull
adc
adc
jb
les
jb
outsl
shr
pop
popf
or
adc
lret
adc
lret
leave
dec
add
pop
lret
mov
mov
mov
scas
pushf
nop
mov
lods
ds
out
aaa
mov
call
in
mov
loopne
and
cli
ljmp
xchg
jo
cmp
cmpb
mov
jb
mov
push
or
jge
js
repz
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
loop
sub
xchg
jle
js
adc
mov
xlat
fxch
stos
aam
pop
in
sub
dec
xor
js
hlt
stc
pop
sbb
fsts
cmp
fidivl
pop
popf
mov
adc
pusha
push
lds
push
mov
lahf
xchg
push
push
adc
scas
cmp
inc
xor
or
pop
add
push
xor
stos
test
pop
clc
imul
and
ljmp
jae
and
rorb
cmp
push
jns
dec
fidivs
mov
sbb
int
int
mov
xor
addr16
adc
add
jg
popf
stc
aad
mov
imul
push
mov
cmpsl
push
cmpsl
rol
cs
in
fwait
mov
cmp
adc
clc
mov
ds
scas
pop
fldenv
fidivs
sub
mov
cltd
push
xlat
mov
inc
mov
imul
mov
test
repz
mov
pop
sar
mov
outsl
sbb
jnp
push
stc
aas
mov
leave
cmpl
mov
filds
pop
fadd
sbb
lds
adc
repnz
popl
shr
xor
inc
imul
jne
mov
and
test
int
mov
push
sub
inc
cmp
ret
ret
movsl
xor
cmp
loopne
leave
orl
sub
push
cmp
lds
mov
daa
jnp
ljmp
xor
lcall
push
lds
insl
bound
ror
ds
aas
inc
mov
jae
rclb
faddl
add
sar
lcall
cld
pop
dec
fisubrs
xchg
rorl
push
inc
pop
pop
fidivs
testb
jecxz
outsl
loopne
dec
ret
loopne
push
lods
cli
mov
pop
sbb
or
jecxz
lea
cmp
mov
pop
and
jg
add
cmpsb
movsb
lea
inc
pop
outsl
es
sbb
pop
mov
mov
jecxz
push
mov
test
outsb
in
mov
jmp
pop
js
pop
in
arpl
pushf
push
rorl
popl
mov
es
fsubr
or
outsb
adc
orb
sub
or
xchg
cmp
mov
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shlb
sub
xchg
jle
js
shll
dec
fwait
sub
jne
add
repz
adc
mov
inc
sub
ret
ss
dec
jb
iret
push
ret
pop
pop
mov
jge
pop
pop
pop
cmp
or
js
je
cmpsb
mov
mov
scas
and
aas
les
std
xor
imul
das
inc
dec
daa
or
jl
ficoms
leave
sub
add
das
dec
xor
mov
push
cmpb
add
inc
popa
fistps
out
adc
lret
cld
pop
clc
inc
dec
sub
ss
sarl
js
jp
mov
push
out
inc
stos
aaa
popf
hlt
inc
cltd
mov
in
sub
mov
fcomi
xor
clc
in
in
mov
cmp
sbb
lret
fdivrl
xor
jo
adc
or
jbe
out
aaa
mov
loop
sub
cmp
mov
xchg
mov
test
sbb
sub
jae
xor
jb
repnz
push
ret
add
enter
jne
push
les
pop
add
out
sbb
ja
dec
jg
cld
xor
lock
fwait
cwtl
jae
test
fisttps
out
or
mov
leave
pop
mov
jbe
sub
mov
dec
popa
test
negl
test
stos
adc
jae
xor
mov
outsl
mov
scas
insb
sti
ljmp
inc
pop
js
pop
xor
stc
push
mov
pop
dec
and
mov
xor
dec
aaa
sbb
mov
cmp
clc
int
push
loope
sub
lret
xor
mov
xlat
push
into
mov
fcompl
push
pop
xor
jae
outsb
mov
into
out
mov
mov
pop
mov
mov
mov
leave
sbb
push
fwait
mov
pop
movsb
or
jns
jnp
outsl
jne
je
jno
mov
sub
sub
fdivrl
xor
pop
xchg
mov
test
test
outsb
roll
scas
adc
pop
mov
cli
mov
mov
scas
cmp
lods
mov
cmpsb
shlb
iret
and
insl
fidivrs
sbb
cmpsl
imulb
adc
insl
push
fbstp
es
cmp
push
add
outsb
jg
xlat
clc
shll
scas
xchg
cwtl
sub
movsb
push
inc
add
test
inc
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
call
sub
js
mov
movsl
xor
add
and
xchg
je
out
add
enter
adc
xchg
cltd
push
lret
push
mov
jnp
rcrb
hlt
repz
into
scas
out
jb
lret
loop
and
lret
fcmovu
mov
daa
pop
jb
sbb
or
mov
inc
icebp
pop
inc
xlat
mov
mov
inc
pop
jmp
into
xchg
pop
xor
pop
leave
fwait
enter
rclb
xchg
push
mov
lret
insb
outsb
push
sub
into
rcrl
lret
cmp
in
lret
popf
pop
repz
sbb
jmp
icebp
mov
out
adc
mov
dec
dec
fidivrl
std
clc
fists
mov
pop
adc
inc
inc
scas
testl
fisttpll
xchg
pop
clc
push
xlat
and
sahf
sub
sbb
insl
jnp
adc
cmp
shll
xchg
mov
adc
test
sti
lcall
roll
inc
aaa
mov
xchg
bnd
jno
push
outsl
mov
xor
pop
clc
and
sbbb
push
inc
sbb
xchg
mov
push
sahf
je
xlat
pushf
repz
fldcw
sub
frstor
cmp
sub
aad
ljmp
adc
shrl
pop
and
sbb
pop
test
inc
inc
out
adc
jl
leave
xor
jnp
push
movsb
pop
loope
rcrl
jp
xchg
cltd
xchg
insb
mov
mov
xor
jge
jae
dec
insl
enter
insl
insb
icebp
and
inc
lods
sbb
mov
out
adc
ljmp
add
in
and
mov
xor
push
lods
dec
js
pop
aaa
mov
mov
inc
jmp
xchg
hlt
lret
pop
shll
cmp
mov
imul
jbe
sub
mov
repz
lods
mov
ss
imul
iret
xchg
movsb
and
dec
cmp
and
add
cmp
aad
aad
popa
adc
fs
out
add
jg
add
xchg
out
loop
rcr
mov
scas
mov
int
int
mov
add
cmp
push
fwait
jo,pt
pop
stos
cmpsb
mov
xchg
jnp
push
mov
cmp
lea
jae
mov
or
movl
add
std
lock
cwtl
shlb
inc
in
and
mov
jb
push
mov
pop
fiaddl
sub
insb
and
loope
add
int3
jecxz
clc
outsl
sbb
inc
xchg
sbb
fildll
jns
inc
mov
xor
mov
dec
fwait
ret
push
jnp
jp
jo
jnp
jbe
push
push
int3
mov
test
xor
sub
cmpsb
js
add
pop
jmp
cli
or
icebp
out
mov
pop
add
xchg
xlat
stos
fcompl
loop
int
lahf
ds
or
sbb
out
fstps
xchg
test
insb
xchg
inc
pusha
jno
or
daa
inc
ss
in
insb
xor
sbb
push
movsl
jmp
mov
sti
fnsetpm(287
xchg
jmp
cmpsl
mov
cmp
mov
and
cmp
loop
sub
mov
ds
popa
push
std
push
loop
mov
shll
pushf
sbb
push
adc
lods
rcr
ja
mov
fbstp
push
dec
cmp
adcb
mov
out
fwait
inc
mov
mov
pop
in
sti
jbe
shrb
xlat
out
dec
mov
push
nop
mov
inc
mov
mov
xor
dec
mov
or
jle
sub
lret
add
jmp
adc
dec
inc
repz
mov
add
cmp
ret
adc
std
into
mov
add
mov
lret
xlat
fiadds
jg
hlt
xor
mov
or
loop
jne
dec
out
mov
mov
ret
aam
les
sub
daa
dec
daa
push
in
mov
jb
insl
and
adc
add
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
mov
add
jmp
mov
in
adc
jecxz
fwait
sub
pusha
mov
testl
int
pop
pop
dec
fcompl
cwtl
rcrb
inc
add
mov
mov
jge
dec
imul
sbb
lea
sbb
xor
rorb
shrl
stc
jmp
pop
lock
mov
pusha
pop
cli
fstl
leave
out
pop
adc
jno
xorl
mov
sbb
scas
and
loop
add
shll
inc
movsb
or
je
scas
es
sub
icebp
sub
je
and
xchg
adc
test
into
cmc
dec
stc
dec
xchg
adc
int3
sbb
sbb
ja
clc
and
shrb
fbld
inc
jge
and
shlb
and
lods
ret
cmp
es
sub
ds
lahf
cmpsb
mov
rclb
lock
out
ficoml
jecxz
scas
push
ret
dec
outsb
xlat
lret
insb
adc
ds
je
mov
mov
cmp
test
push
pop
add
mov
mov
xchg
icebp
daa
adc
sbb
inc
jg
cmpsl
repz
and
insb
lret
aas
outsl
popf
cmp
xchg
inc
loope,pt
addr16
mov
addr16
mov
push
jp,pt
or
pop
xchg
cmp
cmpsb
mov
das
mov
dec
nop
or
rcll
gs
jno
jl
outsb
sub
cltd
inc
rclb
repz
in
xchg
push
and
xchg
clc
pop
or
cmp
fsubl
out
outsb
fisttpll
rcrb
inc
out
adc
jne
xchg
pop
xchg
lds
mov
mov
lret
gs
push
mov
shll
mov
lods
sub
ret
test
and
cli
sub
mov
imul
pop
and
addl
jb
mov
frstor
mov
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
dec
into
inc
mov
jnp
js
aad
test
sub
in
cmp
fists
xor
test
pop
insl
bound
nop
xchg
xchg
das
pop
stc
xchg
adc
adc
flds
inc
dec
pop
push
fwait
pop
test
ds
fsubs
repnz
stc
mov
pop
inc
push
jecxz
repz
notl
and
out
push
aad
cld
pop
or
cmp
stos
xor
shrb
push
cmp
aas
adcl
cmp
or
das
sbb
lods
hlt
dec
movsl
push
int
dec
mov
mov
out
mov
add
mov
popf
loop
pop
mov
push
mov
jle
push
cwtl
mov
mov
fs
inc
fisttps
xchg
faddl
rorb
inc
mov
lahf
jns
dec
cmc
pop
shlb
sub
pusha
inc
dec
fucomip
mov
mov
jno
lret
dec
cmpsb
int
sarb
fs
inc
imul
cmp
mov
out
mov
and
xchg
cmpsb
test
jo
mov
adc
xchg
inc
clc
mov
lahf
mov
mov
lret
js
sbb
mov
pusha
pop
inc
sbb
xchg
in
rcrl
inc
pop
stos
inc
scas
dec
movd
cmp
xchg
sub
stos
push
andl
pusha
gs
inc
call
mov
incb
xor
mov
jae
dec
mov
push
rcll
fwait
subb
xchg
imul
mov
popf
bnd
mov
clc
pop
stos
aam
fucomip
mov
sbbl
out
jo
test
nop
jl
jns
jae
dec
inc
stos
jns
dec
sarb
mov
rol
punpckhdq
das
int3
push
jle
stos
rcrb
insl
xor
jb
out
aas
cwtl
mov
lods
enter
inc
inc
lret
pushf
fdivl
dec
aaa
test
ldmxcsr
sbb
cmpsb
in
sbb
gs
jns
cmc
dec
test
sti
mov
lods
inc
sar
pop
into
iret
sbb
dec
addr16
sbb
neg
lds
insl
sbb
addr16
mov
scas
je
pop
push
inc
mov
jne
or
dec
mov
push
and
js
xchg
and
push
out
mov
lods
push
sub
mov
inc
pop
xor
lcall
jge
add
ret
sbb
sar
sti
inc
sub
sarl
sbb
gs
mov
out
inc
out
pusha
pop
jp
pushf
xchg
push
pop
add
sbb
add
jo
cmp
andb
inc
or
clc
nop
pop
daa
out
pop
mov
mov
nop
sub
sub
stos
fwait
les
inc
cmp
jg
aam
jne
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
push
ja
xor
js
jle
js
and
mov
dec
xor
shlb
out
idivl
xchg
test
dec
loop
xchg
dec
sbb
ds
stc
push
cmpsb
fisttpll
adc
inc
sub
mov
push
sarb
xor
hlt
mov
cmpsb
inc
adc
jg
jge
mulb
sahf
push
mov
mov
gs
inc
aam
or
mov
push
push
jo
das
addr16
jbe
les
inc
mov
fsubs
dec
pop
add
jne
inc
mov
mov
imul
inc
sbb
mov
xor
frstor
test
sub
adc
insb
call
in
xchg
cmpsb
and
inc
mov
jne
cmpsb
inc
jl
push
jge
bound
insl
or
movl
add
xchg
cmpsb
mov
in
pop
mov
inc
mov
andb
mov
mov
sub
paddsb
stc
fstps
in
xor
sub
xchg
push
fistpl
cmp
pusha
cli
cmpsb
stc
push
cli
int3
outsb
je
arpl
inc
stos
sbb
push
jge
loopne
aas
mov
mov
aam
cmp
pop
inc
cli
aam
cwtl
ja
int3
outsl
mov
dec
inc
mov
shll
subl
jge
sbb
push
mov
faddl
and
fsts
mov
int3
push
cmp
sbbl
ds
lods
aaa
addb
dec
daa
in
xchg
xor
mov
pop
pop
mov
hlt
jo
in
mov
sub
stc
hlt
bound
jecxz
cmp
cmpb
iret
mov
andl
fdivs
sub
arpl
jecxz
add
adc
negl
cmp
xor
pop
imul
jge
jb
gs
ret
xor
sarb
sub
xchg
adc
into
iret
cmp
add
push
out
mov
hlt
cmp
mov
pop
decl
fcomps
call
fdivs
xor
pop
outsb
sub
lods
pop
inc
cmp
imul
adc
mov
lods
imul
pop
mov
insl
ficompl
jge
shll
pop
cmp
add
push
roll
imul
cmp
hlt
inc
mov
fcomps
dec
adc
ja
aas
lret
push
xor
andb
arpl
aaa
jo
sub
xor
es
out
cmpsb
or
sub
fildll
xchg
cs
std
negl
insl
add
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
jl
pop
adc
jg
jnp
js
popa
adc
push
lods
sbb
jae
adc
mov
loopne
cmp
popa
dec
mov
mov
mov
incb
daa
pop
push
popf
jge
inc
out
ret
fs
sub
push
test
lea
out
lock
enter
fsubl
jecxz
mov
stos
cs
mov
stos
call
pop
adc
sbb
cli
scas
jno
xor
fstl
out
pop
pop
inc
lods
leave
pop
xor
stos
sub
call
lods
or
jns
mov
jae
xor
lret
stos
fsts
je
outsl
sub
leave
xchg
add
test
scas
cmpsl
inc
mov
cld
stos
dec
mov
rolb
imul
loope
gs
addr16
and
dec
pop
xchg
xor
jg
out
icebp
loope
xchg
int
int
xchg
cmp
lock
mov
mov
std
das
negb
push
mov
xlat
insl
mov
pusha
jg
div
mov
sbb
mov
xchg
sub
jns
out
add
imul
cltd
lea
adc
adc
jb
push
fstpt
pop
pop
adc
mov
pop
pop
push
scas
aas
mov
mov
sbb
sub
sub
into
add
aad
xchg
je
or
jecxz
out
aad
pop
cmp
xor
cmp
arpl
es
mov
dec
shrb
dec
mov
into
adc
out
pop
mov
mov
out
xchg
movsl
ret
jg
mov
push
negb
push
test
shrl
or
xor
pop
int
dec
add
out
push
cltd
inc
sbb
sub
jmp
test
or
and
leave
inc
xorps
inc
mov
ss
sub
and
cmpsb
mov
xchg
mov
ds
sbbb
subl
pop
nop
test
rolb
mov
out
mov
sbb
sbb
inc
cmp
dec
mov
sub
pop
fnstsw
mov
dec
ret
adc
cs
inc
popf
cld
jl
adc
mov
inc
scas
ljmp
pop
mov
mov
orb
xchg
jp
in
repnz
cli
add
mov
or
pop
xor
enter
ds
mov
inc
lods
add
or
inc
mov
cmpsb
push
dec
mov
push
cmp
sarl
mov
cmc
aad
or
or
inc
dec
xor
loope
inc
aam
loope
xor
xchg
in
ja
cmp
xchg
subb
jecxz
jbe
leave
dec
adc
jno
adc
int3
sbb
xchg
and
xor
divb
or
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
pop
cld
pop
jg,pt
jnp
js
sbb
test
movsb
das
jno,pn
xchg
xchg
mov
inc
lahf
lea
mov
mov
dec
dec
inc
icebp
int
mov
sbb
sub
adc
js
and
adc
and
push
int
inc
bound
loope
insb
inc
arpl
movsl
insb
xlat
pop
cmp
pop
xchg
xchg
inc
movb
mov
in
jecxz
cli
pop
adc
cwtl
scas
cltd
adc
push
xor
test
in
and
bound
push
js
jg
test
ja
xor
mov
mov
decl
mov
test
sbb
mov
out
inc
dec
pop
mov
push
cmp
mov
jno
push
outsb
repz
stc
das
jno
cmpb
xchg
iret
add
xchg
jmp
adc
dec
ljmp
or
shlb
imul
xchg
popa
sbb
int3
push
pop
stos
enter
fstps
mov
dec
cld
js
ds
call
ljmp
ret
ret
ja
xchg
dec
push
inc
fdivrl
xor
dec
mov
ja
les
sbb
cs
xor
aas
push
dec
test
pop
or
pop
loope
loopne
gs
pop
fisubrs
xchg
lods
daa
movsb
or
cld
mov
fwait
inc
sbb
lret
cmp
mov
sbb
ror
sbb
inc
andb
xchg
cmp
mov
or
shrb
jnp
fldcw
adc
cmpsb
push
jmp
testb
or
push
jge
sbb
cmp
aaa
push
mov
and
fisubrl
mov
ret
ret
push
test
aam
int3
jmp
mov
mov
jno
mov
cld
cmp
pushf
loopne
das
sbb
mov
mov
les
imull
jp
adc
adc
ss
jg
adc
xor
lods
mov
jno
lods
pop
xchg
push
add
adc
inc
jns
das
mov
loop
mov
inc
xchg
xor
shr
cli
leave
data16
popf
popa
jns
pop
int
mov
mov
bound
add
popf
mov
pusha
fstps
push
add
rolb
pop
test
push
das
test
mov
jle
cli
dec
loope
rolb
cmp
sub
stos
dec
jo
dec
adcb
shlb
mov
ret
sub
nop
mov
jns
inc
in
and
xchg
cmp
or
xor
dec
outsb
ja
xorb
dec
cmp
aad
fadds
sub
mov
pusha
ss
mov
in
mov
in
movl
into
pop
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
or
popa
adc
jg
jnp
js
inc
dec
xchg
mov
jge
pop
cmp
ljmp
pop
shlb
stc
pop
or
and
or
mov
sahf
in
inc
add
movsl
jb
shll
imul
movsl
out
dec
jecxz
fisttpl
pop
mov
testb
popf
and
fs
hlt
sbb
jecxz
xor
jnp
mov
adc
mov
ljmp
stos
jae
push
ret
cld
dec
pop
lret
test
das
nop
xchg
add
cld
mov
inc
jno
icebp
repnz
int3
or
adc
mov
dec
fdivl
clc
pop
xor
inc
mov
sbb
mov
rcr
pop
mov
daa
das
fs
cwtl
out
adc
lods
mov
adc
lods
mov
jbe
and
pusha
xchg
jae
xchg
in
in
pushf
test
push
mov
mov
sbb
mov
xchg
rcll
xchg
and
add
sub
dec
or
jmp
fldl
or
jns
push
pop
push
montmul
cmpsb
ret
push
inc
mov
fisubrs
inc
mov
adc
sbb
sbb
cmp
cmp
fsts
pop
mov
xchg
xchg
push
xor
loop
fbstp
je
inc
pop
mov
ret
push
pop
daa
test
sbb
cmp
nop
shl
out
mov
ret
add
enter
pop
adcl
jp
mov
dec
xor
and
adc
sub
in
popa
add
arpl
add
and
xadd
dec
inc
push
sub
dec
pop
rolb
mov
jns
popf
out
cmc
loopne
cmp
ret
aam
loop
dec
inc
or
or
std
popf
sub
stc
inc
roll
ja
nop
mov
cmp
xchg
int
mov
mov
dec
lret
call
inc
jmp
and
pop
mov
pop
or
sbb
insb
mov
sbb
xchg
mov
mov
dec
je
dec
addr16
inc
sahf
sub
insl
xor
jecxz
jbe
repnz
addb
adc
adc
mov
dec
insb
and
jo
sbb
jl
mov
mov
roll
sub
icebp
pop
sub
imulb
and
lret
xchg
mov
pop
clc
stos
cs
rcrb
push
jmp
mov
inc
rcl
push
adc
mov
leave
lds
subl
add
lahf
pop
cmpsb
out
cmpb
jno
arpl
aas
loopne
popf
mov
jp
pop
xlat
jmp
jnp
push
fidivs
lds
cmc
inc
lods
xlat
xor
xor
cmp
lods
sub
xor
pushl
mov
jmp
lret
rol
leave
shll
or
cmp
sarb
jle
js
dec
gs
ficoms
sub
cmp
jae
aad
shll
daa
cmp
push
les
sbb
fcmovnbe
dec
hlt
xor
mov
xor
loopne
sub
push
ret
add
mov
xor
lret
dec
add
mov
in
fisubs
dec
cmp
out
add
cmp
xchg
cmp
jb
ljmp
in
sbb
adc
or
test
xchg
dec
push
adc
repnz
jmp
das
or
push
cmpb
mov
or
jge
add
dec
mov
or
and
outsl
jg
mov
mov
leave
jl
popf
out
dec
xchg
cmp
std
aam
jp
mov
pop
test
stos
insl
cmc
stos
pushf
adc
mov
dec
sub
mov
popa
mov
push
dec
addl
jno
sbb
fildl
mov
push
mov
mov
fstpl
outsl
sbb
or
gs
inc
mov
loop
push
mov
cmp
and
fsts
out
ljmp
adc
sbb
jmp
mov
pop
imul
jnp
add
cltd
insl
hlt
int3
les
cwtl
jle
test
and
das
into
gs
dec
je
jne
pusha
ret
mov
adc
int
pushf
mov
loope
mov
pop
rcrl
daa
mov
les
xchg
cmp
mov
mov
cwtl
fiadds
lock
fwait
add
frstor
cmp
dec
jmp
adc
cmpsl
sub
xchg
imul
cmp
push
bound
push
pushf
pop
adc
xor
jae
add
xlat
mov
xlat
adc
adc
or
xchg
sbb
stc
push
cmpsb
push
in
nop
mull
fstps
repnz
xor
cmp
mov
xor
sbb
pushf
aad
inc
aad
cli
cld
jbe
icebp
push
jg
mov
lret
inc
xchg
test
inc
sbb
pop
inc
mov
inc
hlt
loop
push
cmpsl
lods
cmc
mov
pusha
into
fstpt
adc
sub
mov
sbb
mov
outsl
push
adc
push
inc
sti
testl
insl
test
push
inc
int
dec
add
cltd
sbb
lds
inc
cs
inc
and
int
sbb
ffreep
popf
iret
aam
lcall
mov
or
mov
mov
iret
jmp
loopne
adc
repz
out
aas
stos
dec
add
pop
push
faddp
mov
pop
or
test
adc
lods
inc
sub
int
cwtl
xchg
ficoms
sbbl
jbe
jmp
mov
ret
scas
cmp
shr
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
sbb
and
sbb
jnp
sti
or
adc
icebp
test
pop
or
and
stos
push
and
sbb
sub
rolb
inc
fidivrl
dec
sbb
pop
pop
adcl
push
inc
fisttps
mov
cmc
call
clc
stos
fcomp
adc
push
pop
pop
arpl
jbe
push
and
rorl
xor
in
orl
xor
shrl
mov
sbb
pop
mov
sub
push
test
mov
or
shlb
add
pop
add
sbb
sbb
xchg
stc
ss
test
ljmp
mov
test
pusha
xchg
scas
push
pop
add
jno
outsb
dec
pop
inc
jnp
das
pop
repnz
call
sub
push
or
sub
adc
mov
xchg
push
icebp
pop
inc
cmp
add
adc
or
jg
xchg
testb
loope
sbb
in
sbb
repz
push
stc
jmp
lea
pop
adc
push
sbb
aam
hlt
or
adc
lock
xchg
lret
cwtl
push
cmp
or
lret
test
lds
cmpsb
rcl
adc
dec
enter
outsl
and
flds
leave
inc
roll
jno
jnp
xchg
mov
je
cld
bound
inc
xchg
cmpsl
sbb
fwait
xlat
gs
je
int3
mov
push
adc
add
mov
mov
mov
or
enter
or
call
out
int
repz
pop
rcll
daa
xor
add
scas
sbb
pop
pop
dec
or
xchg
xor
loop
shlb
clc
mov
lods
push
scas
xchg
push
push
pop
decb
lods
cmp
jmp
enter
pop
jle
in
pop
xchg
mov
adc
mov
push
jmp
adcb
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
cwtl
and
jg
adc
js
imul
lock
mov
cmp
out
push
inc
sbb
test
lcall
mov
lods
xor
shlb
jle
jnp
in
push
mov
int3
stos
or
sahf
scas
cmp
pop
je
and
mov
adc
sbb
inc
enter
cmc
pop
pop
push
xchg
push
pop
sbb
mov
adc
mov
mov
and
fs
pop
inc
or
dec
in
ret
mov
add
jle
mov
bound
jecxz
lock
adc
xor
dec
push
adc
cmp
notb
lea
lcall
pop
outsl
and
add
pop
cmpsl
repz
pop
imul
adc
js
orb
aam
adc
jnp
icebp
mov
jb
jo
es
sbb
dec
xchg
loop
lock
or
add
divl
sub
cmpb
enter
cmpsl
push
inc
gs
call
aas
js
lea
repz
mov
int3
xor
jmp
jbe
pusha
sub
push
mov
add
data16
pop
pop
in
inc
pop
sbb
push
mov
sti
ljmp
cmp
test
mov
jnp
push
add
stos
insl
and
insb
scas
xchg
mov
cltd
into
imul
mov
roll
mov
jne
lock
les
push
gs
mov
aaa
mov
mov
sub
sub
cmp
cmpsl
adc
or
stc
jmp
xor
mov
mov
int
cmp
insl
in
push
sub
mov
pop
popf
add
lret
push
sbb
push
icebp
loopne
nop
sbb
xchg
inc
inc
cmp
outsb
ficoml
push
jns
or
fdivrs
jle
jnp
lret
xor
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
push
test
leave
jg
adc
js
jmp
mov
popa
ja
fiaddl
es
pop
iret
jo
movsl
pushf
out
pop
roll
pop
push
hlt
fwait
lcall
push
push
pop
mov
pusha
aas
stos
cmc
sarl
loop
gs
fstpl
mov
divl
test
pushf
xchg
loopne
jne
adc
dec
xchg
notb
jecxz
mov
dec
pop
fisttps
fldt
addr16
pushf
out
push
mov
mov
adcb
cmpsb
sub
aam
mov
mov
add
mov
out
ret
loopne
push
mov
sub
ja
js
addl
mov
and
stos
or
les
jecxz
xchg
add
push
bsf
ljmp
push
int
leave
mov
hlt
inc
inc
jae
fmull
sub
cwtl
push
test
add
mov
and
sbb
or
inc
push
cmpl
cmpsl
cmp
test
pop
xchg
jo
jbe
ret
lret
mov
aad
lods
adc
loope
xchg
insl
xchg
inc
cmp
push
jmp
inc
push
ljmp
mov
test
jo
adc
pop
movsl
add
call
rolb
mov
shl
enter
sub
push
mov
enter
dec
push
hlt
rclb
push
inc
int
mov
aaa
mov
push
es
mov
jg
add
pop
lock
and
dec
lds
and
dec
xor
mov
in
lock
pop
push
xlat
jmp
xor
dec
inc
addr16
mov
or
ficoms
xor
das
icebp
rclb
adc
mulb
add
push
sub
pop
mov
test
das
mov
dec
leave
int
into
sub
dec
dec
inc
add
int3
stos
sub
fs
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
fistpl
ror
jg
adc
js
test
icebp
lret
mov
pop
pop
dec
lret
push
stc
xchg
cli
adc
sarb
xor
mov
fdivr
fistpll
mov
pop
std
lock
adc
push
daa
fstl
dec
mov
or
cmp
loop
in
cld
mov
or
insl
int
mov
add
jb
sti
sbb
lcall
lret
cs
fiaddl
loop
cmpsb
das
and
xchg
mov
jb
jns
movsl
je
loope
movsb
addr16
lds
xchg
ja
add
sbb
jle
push
fwait
xchg
pop
shll
hlt
test
mov
cmpb
jmp
ja
pop
inc
push
pushf
in
aad
push
loopne
test
lcall
cmpl
push
cmp
mov
sub
xchg
in
xchg
test
subb
sbb
or
and
and
cmp
mov
inc
mov
pop
inc
dec
addr16
ret
pop
push
mov
call
jle
loope
sahf
mov
rcrb
mov
and
push
lret
ljmp
xor
fs
pop
sub
xor
mov
and
enter
dec
xor
xor
inc
andb
call
das
das
and
in
mov
xorb
mov
push
or
pop
xlat
jg
sub
or
aam
mov
jns
adc
aam
mov
fmull
dec
sti
adc
jmp
cmpl
popa
and
cmc
jge
or
mov
xchg
lea
mov
test
inc
add
adc
test
jae
push
jnp
repnz
xchg
inc
add
xchg
xchg
int3
cmc
scas
sbb
adc
and
sti
ljmp
loop
movsl
outsl
sub
mov
or
pop
jp
cmp
mov
add
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
xor
inc
shr
jg
adc
js
pop
cmpsl
mov
pop
out
in
cmpsl
scas
sbb
hlt
stos
push
xlat
mov
rorb
loop
or
xchg
cmp
lods
cld
jp
movsl
mov
sarl
fadd
sbb
and
lret
mov
in
add
aas
mov
inc
imulb
stc
pop
outsl
addl
mov
out
subb
push
testl
ss
incl
and
jnp
idivl
dec
push
sahf
ja
jl
inc
jg
rolb
adc
adc
iret
adc
dec
jbe
gs
mov
sahf
mov
ror
mov
jp
add
clc
jno
call
or
int
mov
mov
mov
cmpsb
sub
and
in
pop
push
repz
insl
cld
mov
enter
push
inc
in
pop
jb
push
mov
xchg
cwtl
pushf
mov
cmp
fwait
sbb
fwait
lcall
in
in
xlat
loope
ja
dec
aaa
daa
xor
add
mov
sub
xor
mov
aaa
push
std
dec
adc
push
das
out
push
xchg
fnstsw
movsb
int3
nop
stos
xchg
bound
jb
xchg
repnz
add
mov
mov
and
push
mov
in
repz
mov
rcl
jbe
jl
sbb
xchg
repz
inc
call
dec
mov
push
testb
mov
shl
adc
lods
xchg
mov
pushf
cmp
fistl
xchg
mov
jne
xchg
icebp
cwtl
push
mov
scas
fs
inc
sub
sbb
xchg
mov
or
sub
shl
pop
and
cmpsb
push
out
dec
loop
cmp
fsubrs
mov
lods
jne
rorb
add
filds
xlat
lea
cmpsb
or
cmp
pop
movsl
add
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
lds
adc
js
jle
js
push
sub
mov
xchg
pop
int
cltd
rcrb
and
aas
sbb
insb
test
scas
fildl
xor
test
adc
roll
mov
xchg
daa
mov
popf
sarl
mulb
mov
cld
ret
add
xchg
dec
push
jbe
cmpsl
aaa
stc
sbb
adc
rolb
aas
loop
xlat
mov
or
or
mov
pop
sub
push
jno
popa
test
dec
aad
inc
jno
adc
lret
inc
inc
insb
jae
dec
popa
insl
mov
test
add
push
cmpsl
inc
pushf
cmp
scas
outsb
push
push
xchg
pop
mov
mov
and
or
js
loope
lret
cmp
mov
data16
pop
test
gs
sbb
pop
push
jb
jno
dec
rcll
je
xor
inc
push
adc
cltd
loop
nop
pop
jecxz
in
enter
popa
push
sub
int
pop
je
loop
mov
sub
mov
sti
jg
pop
scas
jle
xchg
fistpll
mov
xchg
sub
cli
inc
dec
faddl
ds
xchg
xchg
inc
outsl
out
sbb
adc
cltd
and
jae
mov
ja
dec
and
mov
aas
test
pop
xor
sub
adc
jb
add
jns
mov
fs
push
fiaddl
pop
mov
enter
popf
jl
push
pop
mov
xchg
jecxz
inc
or
add
dec
sub
sahf
stos
sub
mov
addr16
jne
lret
push
into
or
cmpsb
jo
jae
sbb
imul
lds
ror
fmuls
mov
lods
adc
or
stos
sbb
or
cwtl
cmp
data16
mov
mov
dec
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
scas
daa
dec
cwtl
sarl
adc
js
cmpsb
fs
inc
pop
stos
test
loop
mov
push
lea
dec
repnz
es
les
loop
push
jno
movsl
jnp
sti
shrb
or
or
jmp
jno
loopne
cld
mov
dec
xor
adc
push
mov
mov
clc
and
add
sbb
or
mov
or
fidivs
mov
enter
inc
insb
pop
add
jo
outsl
enter
repnz
sub
sub
jbe
into
mov
mov
cwtl
push
and
out
jae
insl
jmp
pop
adc
out
pmullw
inc
rclb
pop
in
addr16
notl
mov
rolb
xchg
adc
sbb
adc
call
mov
mov
out
test
cmp
insl
ret
and
adc
testl
and
add
xor
inc
jl
fildll
cmp
fwait
push
mov
and
mov
fwait
push
ret
neg
adc
cmp
test
inc
bound
test
cwtl
stos
out
xchg
dec
mov
inc
mov
xor
jg
cmpsl
repnz
pop
mov
sub
movsl
rcrb
test
add
jnp
stos
xlat
cmp
mov
mov
inc
insl
cli
or
xchg
aad
test
mov
sbb
sahf
and
add
xchg
ja
or
xchg
cwtl
add
xchg
jae
jne
icebp
sub
xor
xor
hlt
ret
or
fdiv
sub
xchg
insl
addr16
jp
mov
sub
dec
push
dec
add
insb
mov
adc
outsl
inc
dec
and
inc
and
cmpsb
or
sti
xor
fsubl
sbb
mov
insl
int3
or
loopne
push
movsb
aad
call
or
sub
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
ret
movsb
mov
jg
adc
js
out
sbb
push
dec
jge
setns
rcrb
adc
add
jle
push
ja
shll
xlat
aaa
push
aad
out
loop
dec
add
nop
cwtl
xor
lret
in
add
xor
stc
imul
xchg
xchg
fdivl
push
push
mov
jmp
rcl
stc
arpl
test
mov
std
iret
mov
gs
dec
nop
dec
jns
pusha
mov
gs
xlat
pop
sub
out
aaa
push
repz
std
sbb
push
sub
fidivs
in
in
nop
add
push
movsl
lahf
pusha
outsb
adc
cli
pop
lcall
gs
dec
enter
jge
jno
adc
loopne,pt
and
into
jbe
jb
dec
sbbb
pop
rorl
pop
add
pop
inc
in
out
sub
imulb
and
sub
repz
ficompl
push
leave
xchg
adc
cmpsl
in
mov
sub
stc
lret
ret
or
ljmp
sbb
inc
sub
jl
mov
shlb
out
nop
adc
jne
dec
pop
nop
pop
inc
mov
or
or
push
push
iret
hlt
sub
hlt
ret
imul
mov
and
push
mov
lods
sub
push
xchg
jecxz
sub
iretw
pusha
aad
pop
movsb
andb
xor
shr
jno
adc
xor
cld
ret
adc
inc
pusha
cli
jns
test
xchg
sub
fistpll
dec
sbb
add
aam
push
cmp
test
fcom
inc
jns
push
xor
push
shl
mov
out
mov
in
insl
mov
sbb
mov
lea
mov
out
add
stos
mov
lcall
daa
adc
ficoml
iret
aad
lfs
fmulp
xorb
push
sbb
and
jne
adc
jg
in
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
sbbl
mov
js
jle
js
push
cld
lret
xor
push
xchg
push
mov
pusha
js
adc
cmp
xchg
int
push
std
push
mov
in
adc
stos
mov
mov
xor
mov
int3
addr16
add
pop
pop
scas
or
mov
rolb
push
push
imul
pop
pop
dec
divl
push
dec
xor
mov
xchg
adc
dec
fcmovbe
mov
pop
jle
cmc
pop
les
cmp
add
sarb
add
or
push
xchg
jg
negb
and
mov
pop
dec
popa
in
mov
jns
lahf
and
cmpsl
add
mov
aaa
jp
insb
inc
mov
mov
push
xor
stos
out
add
adc
iret
sub
std
fwait
int3
icebp
cmp
sahf
push
xchg
in
cmc
cmp
mov
fbld
insl
push
es
mov
lock
add
fldt
std
cmpsb
mov
jle
imul
pop
cmpsb
push
ret
loop
shlb
lds
out
test
outsl
mov
pop
fldt
dec
pusha
adc
push
mov
out
aas
ljmp
mov
jg
and
push
outsl
push
jle
xor
andb
loopne
mov
push
mov
scas
adc
lods
aad
cmp
vrcpps
lcall
push
sbb
shl
pop
scas
pop
mov
enter
add
out
push
loope
dec
ret
mov
addr16
orl
adc
sub
loope
fdivrs
stc
rcl
shlb
push
test
pushf
es
cmp
mov
ficoml
jmp
rcl
aas
leave
cmp
pushf
mov
mov
adc
js
fsubrs
mov
sbb
int
cmp
sub
imul
add
push
pop
test
cmpsb
jno
mov
stos
lds
fs
pop
mov
adc
test
lahf
das
push
fimull
inc
shlb
jb
bound
fnstsw
xor
bound
jecxz
lock
mov
loop
sub
addb
shll
dec
or
test
xchg
addr16
add
movsb
pop
sub
sub
sub
inc
or
hlt
orb
mov
and
cmpsl
lret
in
in
and
pop
out
pop
ss
repnz
pop
shlb
xor
ss
lods
xor
cmp
fdivr
mov
mov
inc
mov
and
scas
movsl
xor
adc
arpl
push
and
orl
insl
popa
dec
mov
scas
fisubs
js
sbb
insl
mov
fwait
lods
adc
adc
loope
data16
add
imul
ja
ret
stc
pusha
mov
pusha
imul
test
pusha
addr16
inc
sbbb
inc
cmp
xchg
mov
push
dec
push
add
pop
gs
popf
jne
lahf
xor
or
inc
enter
sub
or
push
lahf
mov
mov
push
icebp
mov
mov
dec
jge
sub
mov
stos
in
or
fs
inc
icebp
mov
cmp
push
je
lods
dec
mov
dec
adc
pop
sbb
lods
or
jb
cmpsl
mov
sub
call
test
cmp
mov
or
repnz
xor
sarb
mov
push
sarb
adc
cli
mov
mov
out
inc
sbb
xor
loopne
imul
mov
dec
fwait
xor
xor
aas
popa
icebp
mov
lret
fdivrl
fldl2t
xor
add
ret
aas
fxch
rcr
mov
push
pop
js
jg
adc
js
daa
xlat
xor
inc
addb
fsubrl
lds
inc
imull
xchg
hlt
push
mov
cli
inc
jle
in
insl
fbld
enter
jp
jnp
mov
xchg
nop
fwait
aaa
mov
jmp
ja
add
lds
leave
xor
or
sahf
mov
scas
and
jg
je
cmpsb
sti
xor
push
jae
xchg
add
cmp
push
dec
or
mov
xchg
and
maxps
lea
sahf
insb
mov
in
dec
pop
push
faddp
aam
push
test
imul
xor
push
mov
xor
out
jle
jnp
out
sub
adc
mov
sub
insl
or
jns
andl
add
andps
mov
add
repz
and
xchg
cwtl
adc
mov
jl
cmp
mov
bound
mov
xor
test
mov
les
sbb
jecxz
dec
mov
test
jns
dec
arpl
loop
mov
and
stos
shl
das
sub
cmp
inc
jne
add
and
dec
mov
xor
sbb
andl
std
xchg
aam
cld
mov
jns
xchg
cmp
or
xchg
and
jecxz
push
inc
push
outsb
mov
push
insl
lods
jl
sbb
and
pushf
in
or
add
cmpsl
cmp
fistpll
push
cwtl
xchg
imul
sub
lds
dec
sub
sbb
addl
lock
sahf
ja
or
pop
mov
xchg
or
push
jns
je
push
dec
lock
dec
out
mov
sub
mov
aad
and
test
lea
cmp
jmp
popf
mov
addps
and
mov
inc
fildl
mov
sbb
lods
adc
lret
jmp
int
int
fnstcw
out
mov
fidivrs
adc
js
inc
pop
xor
jne
mov
outsl
mov
sbb
add
data16
xor
sbb
enter
lock
addb
jb
push
sub
icebp
push
cmpsl
dec
mov
pop
mov
cwtl
xchg
repz
xchg
ficomps
mov
adc
sub
jl
add
mov
ret
push
dec
sub
rcrb
inc
add
mov
inc
push
outsl
dec
pop
sub
and
jecxz
adc
mov
rorl
pop
adc
add
push
call
sahf
out
inc
jns
fldt
icebp
cltd
jnp
pop
cmpsl
xchg
adc
es
adc
adc
stc
iret
pop
and
sbb
sub
sub
addr16
pushf
out
sarl
sbbb
pop
cwtl
xchg
rcrb
dec
popa
push
pop
dec
rcl
cmp
add
fcmovne
outsl
fwait
insl
xor
and
neg
mov
adc
jbe
mov
adc
lcall
stc
xorl
jp
xchg
xor
and
add
in
xchg
sbbb
push
sbbl
xor
push
mov
fisubrl
sub
dec
subb
dec
pop
test
sbb
gs
and
add
push
pop
repz
inc
inc
dec
pop
jg
pop
jo
mov
mov
lea
cs
jns
xchg
js
mov
outsl
xchg
mov
pop
push
jae
mov
adc
dec
test
add
or
sti
inc
aas
add
pop
mov
testl
call
mov
cmp
rol
mov
sbbl
insb
pop
lahf
pop
and
inc
sbb
fdivrs
insb
adc
jp
outsl
pop
imul
test
shrl
icebp
ljmp
jle
inc
jae
rcll
jo
jle
orl
push
xor
aam
fimull
inc
in
xor
add
iret
enter
fcmovnu
xlat
push
rolb
lea
adc
js
or
adc
test
add
push
adc
lret
fwait
jns
fnsave
or
and
lods
arpl
push
jp
lea
in
mov
jb
dec
or
pop
and
iret
aam
sbb
loopne
or
inc
lods
insl
xchg
push
sub
sti
add
in
test
xchg
stc
lock
or
int
xor
add
int3
push
xlat
loop
sarb
shll
push
and
mov
adc
pop
jmp
mov
es
cmp
adc
fnstenv
xchg
add
cmc
jae
adc
loop
xchg
sbb
js
jp
push
popa
insl
cmp
cmp
push
insl
roll
xor
fstpl
jge
out
stos
scas
lret
xchg
lods
adc
outsb
sahf
or
push
sti
xor
sahf
adc
rcr
shll
pop
xor
mov
neg
fwait
jbe
mov
jnp
xor
xchg
lahf
push
out
fstpt
cmp
inc
mov
cmp
lahf
iret
mov
in
loopne
iret
sahf
mov
movsb
scas
mov
pop
outsl
lock
pop
das
inc
xchg
insb
mov
lods
es
sub
sub
xor
xor
loop
insl
and
sarl
aad
mov
notl
mov
xchg
inc
mov
add
sahf
sub
mov
cmp
hlt
xor
jne
sbb
dec
add
push
cli
shrb
lods
pop
movsl
shlb
xchg
mov
adc
dec
cmpsb
enter
ds
mov
loopne
in
xor
out
xor
push
and
dec
push
aas
pop
adc
test
mov
iret
or
mov
pop
nop
jno
test
jl
out
mov
or
sub
stos
orb
hlt
mov
pop
mov
aad
cld
push
insl
push
iret
xor
popf
icebp
rcrb
pushl
movsb
mov
dec
sbb
or
call
sahf
push
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
xlat
sub
jg
adc
js
sub
push
mov
lds
cmp
popf
inc
cmc
or
inc
sbb
inc
aaa
fstp
cltd
cltd
loope
divl
jae
cmp
cmp
scas
fisttpl
xchg
sbb
and
movsb
insl
ss
ret
dec
mov
push
xchg
out
enter
lods
add
xchg
inc
std
jecxz
addr16
mov
shrl
xor
iret
dec
daa
iret
cli
push
icebp
inc
or
lea
push
pop
rclb
pop
pop
push
cltd
xor
cmp
add
xchg
dec
push
jns
arpl
xchg
repz
pop
pop
cmpsl
lahf
xor
pop
push
and
test
sub
fisubs
imul
add
or
cs
les
int3
add
punpcklbw
inc
jp
push
xchg
loope
xor
test
add
hlt
stos
pop
and
mov
xchg
ficomps
ds
jns
es
mov
xchg
repnz
cmpsl
mov
jle
push
pop
push
ja
icebp
sbb
push
mov
mov
pusha
test
outsb
push
pushf
inc
push
aad
test
shll
mov
mov
in
movsb
popa
xchg
orb
push
ds
lea
loope
loopne
cmp
mov
leave
mov
xchg
cltd
jnp
fwait
mov
jo
lods
cmpsl
xlat
in
stc
imul
in
adc
repnz
pop
add
in
inc
insl
mov
pop
pop
jns
cld
inc
outsl
cli
sub
mov
enter
cmpsl
pop
das
mov
sub
ficompl
sub
xor
and
stos
lahf
call
dec
bsf
dec
inc
aam
cmp
sti
sbbb
ljmp
jae
and
pop
rcrb
adcb
arpl
in
aaa
lret
inc
xlat
sbb
sarb
icebp
mov
pop
rolb
es
jmp
in
fisubl
aam
std
mov
ja
jne
roll
jmp
int
int
rcl
int
cmp
xchg
jb
loopne
js
jle
js
jns
pop
bound
xchg
inc
adc
lahf
lea
push
push
and
xchg
mov
inc
push
and
mov
scas
loop
pop
sbb
dec
xchg
inc
jno
shrl
jg
or
loop
fs
xor
cwtl
scas
cmp
xchg
adc
test
adc
mov
dec
addr16
dec
pusha
xlat
jo
jle
std
inc
test
xlat
int
pusha
sub
jle
mov
outsl
dec
adc
xor
jne
les
xor
fldl
and
mov
and
mov
push
mov
leave
adc
jge
jmp
fs
in
popa
cmc
dec
mov
daa
test
inc
inc
lret
add
and
sub
adc
or
ss
jge
rorb
mov
das
pop
sbb
das
aad
mov
ss
popa
adc
pop
sub
jmp
jo
mov
mov
cwtl
xchg
arpl
test
and
sti
adc
and
cmpsb
and
jecxz
add
mov
inc
in
mov
jle
loopne
mov
loop
or
dec
and
in
dec
in
movsl
repz
cmp
add
xchg
jb
xor
enter
loop
sti
pop
lea
jnp
or
mov
mov
insb
jne
xchg
repz
jno
leave
aaa
xchg
adc
mov
pop
cmp
xchg
fisttpll
sub
cmp
xor
or
add
inc
lock
xor
and
fidivl
sbb
mov
xchg
icebp
lea
fdivp
adc
je
in
scas
popf
mov
push
and
shl
inc
inc
dec
dec
fildl
jnp
and
inc
lahf
push
pop
mov
jo
push
fmull
mov
mov
das
popf
movsb
lock
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
push
lock
js
jle
js
and
pop
ss
aas
mov
lods
dec
pop
mov
lods
loopne
xor
insl
cmp
nop
jle
fisubs
mov
test
xor
or
decl
mov
jge
hlt
adc
mov
jbe
ret
cli
aaa
or
xorb
jp
jg
ljmp
or
je
cmp
jno
ss
rcl
cmc
jl
movsb
pusha
sbb
sbb
aaa
popa
mov
jmp
sub
out
pop
dec
popa
jae
and
shlb
adc
daa
les
sbb
push
inc
out
mov
in
dec
and
sahf
cmpsb
mov
jne
fnsave
lret
and
mov
push
mov
cmp
jne
fildll
or
cli
mov
ljmp
and
mov
je
inc
gs
push
js
out
dec
adc
cmpsl
jge
imul
xor
shlb
adc
jmp
xchg
lods
adc
pop
xchg
cmp
mov
insb
xlat
out
jmp
lods
push
loop
sub
mov
insb
sbb
jno
push
out
rcl
mov
out
cmp
or
dec
mov
imul
inc
and
or
call
mov
sbbb
cld
mov
mov
xchg
and
js
mov
xchg
xor
dec
enter
mov
inc
dec
test
sub
push
mov
xor
std
cmpl
je
xlat
or
dec
and
jp
shl
mov
enter
in
or
inc
stc
insl
mov
inc
adc
push
lahf
add
sub
mov
insb
mov
icebp
xlat
pop
sarb
pop
push
inc
push
pop
add
ja
jecxz,pn
mov
mov
lds
mov
fstps
mov
jae
sub
mov
scas
sbb
sbb
inc
add
sti
fwait
rolb
xor
jmp
enter
iret
rcl
mov
sbb
jg
adc
js
jl
ja
mov
adc
dec
jge
cmp
cmp
dec
pop
xor
fdivrl
mov
pop
gs
dec
or
xchg
lret
mov
mov
popf
jmp
ljmp
jmp
inc
and
sub
add
pop
andl
rcrl
out
pop
iret
mov
ret
xorb
xor
clc
repnz
scas
xor
mov
dec
xor
sbb
notb
and
xor
xlat
jnp
call
sti
or
sbb
dec
in
xchg
mov
jae
dec
ds
sbb
jg
out
lods
mov
inc
adc
fstl
pop
xchg
push
sub
out
or
lret
icebp
nop
test
adc
jne
sub
testl
aam
cmp
push
mov
in
rcrl
sbb
mov
pop
jmp
fcmovnu
out
jb
repnz
pop
out
mov
push
jecxz
cmp
sarl
aaa
jge,pt
xchg
js
jmp
inc
push
xor
pop
add
mov
mov
or
xor
cmovb
mov
jecxz
mov
push
sub
and
pop
cs
aam
and
lds
movsl
hlt
jno
clc
sbb
jns
cmp
aam
push
jle
mov
fwait
inc
mov
adc
sub
push
sub
orb
outsl
mov
repz
aam
jne
jb
aad
mov
xchg
ficoml
sbb
cmp
lahf
xchg
fucomp
push
mov
jp
jnp
ret
fdivrs
inc
push
inc
loop
scas
test
mov
aad
rep
adc
cmp
sub
ret
push
aas
int
and
pop
leave
mov
sub
mull
sub
outsl
xchg
mov
jnp
lcall
dec
or
xor
add
into
leave
leave
rcr
fldcw
stc
push
xor
jg
adc
js
aaa
inc
cmp
cld
les
cmpsl
shl
xchg
sub
cmpsl
das
shll
clc
mov
outsl
mov
xchg
xchg
lcall
insb
mov
nop
jae
xstore-rng
cmpsl
xchg
outsb
ldmxcsr
sbb
add
repz
bound
std
ss
js
lods
rorb
lahf
dec
cltd
sub
jne
jmp
addb
inc
push
inc
fisttpll
push
inc
dec
cmp
sub
repnz
sbb
ja
cmp
lods
dec
sbb
call
ds
lret
mov
pop
mov
lds
xlat
pop
pop
out
rcll
xchg
cltd
outsl
dec
jge
pop
sbb
imul
popa
jb
mov
and
adc
fs
push
jge
rorl
xchg
sub
mov
push
mov
adc
mov
or
pop
pushw
add
pop
insl
loope
push
and
xor
insl
int
pop
mov
jo
jp
mov
data16
aaa
addb
xor
xchg
inc
jno
mov
fwait
adcb
mov
rcr
or
int
pop
inc
lret
loopne
pop
cmp
pop
xchg
xchg
je
out
adc
ja
mov
pop
lcall
insb
lds
sub
xchg
inc
xchg
xor
movsb
xchg
test
addr16
sbb
cmp
inc
les
ds
rcll
out
lcall
dec
jb
popf
out
push
scas
jg
and
leave
aad
xchg
lcall
xchg
jmp
fbstp
repz
sbb
xor
jecxz
lret
nop
push
sbb
call
xchg
dec
inc
cwtl
daa
jl
int
or
cmc
mov
cs
add
aad
lret
es
mov
loopne
ret
in
jae
out
fsubs
cmp
cmp
andl
idivl
inc
mov
mov
cwtl
jb
add
enter
hlt
decl
add
mov
mov
jmp
mov
xlat
movsb
inc
test
js
jle
js
mov
cmp
int
dec
xor
jg
cs
dec
mov
sbbb
iret
fidivrs
js
sbb
sbb
xor
jl
mov
mov
or
loope
mov
push
cmp
idivb
jg
xchg
test
lahf
dec
sbbl
movsb
push
sbb
imul
je
mov
adc
sarb
push
dec
or
dec
push
subl
icebp
mov
dec
cltd
lahf
cltd
les
fcmovnbe
sub
test
push
pop
inc
cltd
notb
movsl
cmc
iret
scas
jne
mov
popf
mov
xchg
cmpb
mov
mov
roll
add
in
sti
sbb
cmp
cmp
psllw
pop
pop
sub
fldt
dec
fstpl
xchg
icebp
imul
and
jns
mov
jg
aad
add
mov
sbb
mov
jae
bound
outsl
ss
or
outsl
push
data16
pop
loop
push
add
mov
and
mov
nop
mov
xor
test
out
std
pop
push
fbld
pop
xlat
cmp
testb
mov
out
aad
xchg
jle
sbb
pop
mov
mov
jno
insb
fsubl
hlt
cwtl
dec
loope
xchg
aad
out
cmpb
lret
mov
jmp
sbb
test
jecxz
sbb
mov
out
fcom
sub
nop
cmp
pop
cmpsb
mov
js
mov
cld
and
das
push
pop
daa
xchg
fwait
cwtl
pop
lock
popa
fwait
xchg
scas
scas
xor
scas
test
mov
fwait
jg
adc
hlt
xor
adc
mov
out
jmp
adc
or
ret
mov
pop
movsl
add
mov
shl
ret
adc
mov
out
cmc
sbb
jge
out
divb
push
or
add
jmp
cmp
rol
jb
dec
pop
push
push
gs
out
jg
adc
js
sub
jnp
cmp
out
sbb
popa
adc
rcl
fndisi(8087
rcrb
push
and
or
add
in
sbb
bound
dec
ficoms
in
mov
mov
sub
sarb
in
xor
jae
jbe
repnz
mov
std
stc
mov
mov
adc
aaa
fiaddl
mov
mov
pop
xor
pushf
fsubl
fists
lahf
inc
data16
leave
fstps
inc
test
cmp
xchg
fbld
hlt
das
out
xlat
sbb
loop
adc
enter
pop
jno
and
xchg
es
adc
sbb
mov
loopne
add
mov
dec
pushf
outsb
adc
std
jmp
xchg
or
pushf
sbb
sbb
lahf
pop
dec
imul
ljmp
xchg
xor
mov
out
mov
cwtl
fildl
aaa
test
out
scas
mov
pop
mov
test
add
mov
mov
pop
cli
mov
ds
in
pop
jle
clc
shr
int3
or
sub
mov
filds
mov
iret
out
sub
fisubs
adc
xor
testl
push
cmp
sbb
pop
arpl
lock
movsl
bound
cmp
into
into
mov
arpl
sahf
aaa
sbb
loope
imul
mov
lods
push
xorl
push
xor
fistpll
in
pop
jns
repz
cmp
add
jecxz
add
arpl
arpl
stos
bound
mov
pop
cmpsl
divb
jge
dec
int3
and
repnz
fwait
inc
push
outsb
ljmp
outsl
stos
xor
push
aam
out
cltd
sub
fsubl
sub
std
sbb
sub
or
xor
add
rol
enter
lret
pop
jp
aas
or
adc
js
mov
mov
pusha
mov
ja
mov
sub
pop
jae
sbb
sti
xor
mov
mov
sbb
fbstp
push
mov
add
push
push
into
cld
mov
outsb
shlb
xchg
push
mov
inc
mov
lds
xchg
aas
lcall
repz
js
sub
out
jp
xchg
rorb
mov
scas
jge
outsb
iret
jb
sbb
clc
push
nop
cmp
add
frstor
mov
adc
shl
cmpsl
loopne
push
or
push
dec
aad
enter
fs
add
jg
xchg
ret
add
clc
inc
mov
daa
inc
nop
leave
add
sbb
jb
rcl
mov
sbb
movsl
scas
int3
mov
push
pop
jbe
enter
aam
fs
sti
xchg
xor
cmp
add
jg
stos
jmp
cwtl
out
repnz
sar
jae
rcrl
mov
sbb
cld
add
mov
out
xor
clc
cmpb
jp
cld
sbb
enter
add
mov
mov
xor
dec
jbe
sbb
mov
push
popf
jl
pop
inc
push
in
xor
lahf
in
std
hlt
cld
data16
movsb
dec
xchg
pop
inc
xchg
cmp
cmp
shll
repz
or
and
and
jb
aam
sahf
mov
and
aas
cltd
jns
sbb
out
out
xchg
xchg
push
cwtl
in
ret
inc
pop
sbb
test
mov
sbb
dec
sbb
nop
mov
add
pusha
pop
leave
clc
sahf
movsb
nop
in
push
les
inc
mov
test
orb
jle
mov
add
loopne
cmpsl
mov
fsubs
das
mov
imul
testb
test
mov
xor
mov
lcall
jp
lahf
mov
inc
or
pop
xchg
inc
sti
push
add
dec
add
jmp
repnz
inc
lock
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
adc
icebp
jg
adc
js
xor
test
cmp
push
push
fisttpll
adc
jl
xchg
pop
and
ret
adc
mov
xor
sub
lahf
call
dec
movsb
loope
mov
pand
jns
inc
mov
jo
ret
mov
call
xlat
test
jle
dec
fmul
push
mov
push
in
cmpsb
lods
sbb
cli
sbb
fisubrl
mov
int3
dec
stos
add
loope
in
push
scas
xchg
popa
mov
adc
push
adc
iret
cmpb
jle
cmp
pop
stc
mov
add
in
rol
dec
test
sbb
sbb
clc
mov
jg
cmc
sahf
push
jnp
xor
pandn
lds
inc
dec
jle
loop
shrl
mov
mov
mov
push
xchg
push
sub
arpl
jge
shrb
push
mov
xchg
cmpsb
sbb
mov
mov
pop
sub
inc
loop
gs
jg
xchg
icebp
or
adc
test
mov
or
and
andl
adcl
adc
shrb
sbb
pop
mov
xchg
lahf
ljmp
cmp
cmpb
push
repz
sbb
mov
inc
or
in
test
push
fsubr
das
xchg
xchg
sub
jns
lcall
out
inc
jb
jmp
popl
pop
lcall
jge
in
xchg
adc
xchg
fpatan
inc
pop
inc
inc
xchg
les
pop
jp
ja
jne
adc
out
xor
call
gs
xor
loopne
pop
inc
sahf
aaa
and
mov
stc
imulb
sub
add
xor
push
mov
push
nop
and
mov
sbb
xor
fucom
mov
mov
or
dec
test
call
add
xor
sbb
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
jle
in
sbb
jg
adc
js
jne
xchg
inc
dec
mov
push
dec
cwtl
cmovbe
push
ret
nop
add
xor
adc
xchg
mov
jmp
xchg
rcl
dec
data16
stc
mov
rolb
enter
lock
pop
and
int3
jo
dec
sahf
and
push
add
test
push
insb
mov
cmpsb
shrl
fiadds
loop
push
fldt
push
ljmp
mov
sti
jnp
cmp
orb
xsha256
cmpsb
push
inc
jge
sahf
jb
and
jns
jg
mov
jmp
or
popa
pop
xlat
cmp
sbb
insb
xorb
shll
inc
lock
in
je
mov
out
test
add
test
or
cmp
mov
push
dec
push
popa
push
sub
jg
inc
mov
add
fs
lcall
inc
dec
int3
jb
inc
je
stos
cmp
xor
xchg
cmp
mov
dec
fwait
pop
aaa
jo
jbe
push
int
jae
test
inc
fcmovnu
xor
mov
mov
pop
arpl
imull
pop
adc
adc
push
inc
push
aam
mov
ljmp
lret
aad
sub
push
jg
lahf
dec
inc
mov
addr16
sbb
insb
push
jne
push
daa
lret
sub
pinsrw
lds
daa
mov
lock
jecxz
mov
inc
ror
fisttps
inc
dec
icebp
ficompl
les
xor
rcl
lret
sub
or
movsl
scas
cld
inc
sbb
push
pushf
or
les
popa
movsl
aam
iret
std
loope
scas
lea
sub
cli
adc
and
cltd
and
mov
jg
push
mov
and
xchg
aam
jle
mov
xor
add
into
iret
into
ror
aad
aad
mov
int3
wrmsr
cmc
jg
adc
js
std
lret
jns
or
divb
mov
ss
test
push
pop
subl
and
leave
or
rclb
rcr
arpl
and
sahf
mov
aas
and
ja
lock
andl
adc
mov
pop
in
adc
cld
xor
sbb
mov
sub
adc
leave
movsb
dec
add
imull
lea
xchg
fwait
adc
lcall
repnz
mov
xchg
in
mov
test
ret
nop
cli
xchg
dec
mov
fisttpll
lret
jecxz
xor
push
pop
ds
mov
ret
cmp
jnp
ret
jo
sub
test
ret
jl
jmp
outsb
lods
arpl
inc
movsb
and
repnz
adc
cmp
mov
pop
xchg
inc
popf
fimull
sbb
das
leave
dec
pop
enter
scas
lcall
jg
jp
inc
cltd
adc
mov
mov
pop
push
cmp
addl
test
lret
lods
fdivrp
mov
ret
mov
sub
inc
mov
into
lods
in
inc
stos
pop
mov
adc
cmpsl
dec
sub
lret
push
test
mov
bound
mov
bound
jb
daa
push
mov
ret
lea
popa
dec
outsl
sbb
inc
lret
sub
xchg
push
in
cltd
jmp
lret
jmp
jno
bound
js
lods
mov
cmp
push
stos
outsl
add
adc
jnp
and
lea
int
scas
test
cmc
sbb
adc
adc
jne
aaa
cmp
mov
cmp
test
stos
sahf
mov
icebp
xchg
mov
inc
xor
xchg
xor
xlat
aad
loop
push
adc
jmp
push
test
sbb
jecxz
xor
xchg
add
scas
or
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
add
mov
jg
stos
pop
loop
js
repz
jb
inc
je
sub
or
xchg
pop
fcompl
sub
jmp
rcrl
jo
fdivrl
adc
fstpt
popa
pop
xchg
pop
ljmp
pop
or
out
mov
scas
out
lds
fldenv
jecxz
jecxz
testb
sbb
pusha
aaa
inc
jp
fisubs
outsl
xorb
sbb
data16
out
xchg
pop
dec
or
bound
sub
outsl
lcall
scas
roll
enter
daa
mov
test
in
adcl
mov
in
mov
inc
jb
loop
lock
psraw
sub
adc
mov
mov
sahf
lds
sahf
sbb
daa
dec
push
adc
shlb
mov
mov
cwtl
dec
xchg
lahf
push
ret
xor
pop
push
fsub
rcrl
stos
jb
imul
mov
xchg
in
cmp
mov
push
or
pop
daa
test
adc
push
leave
test
xorb
and
or
rcl
cmc
int
push
roll
add
fidivrl
enter
cmp
adc
sahf
hlt
mov
mov
mov
fucomi
cmpsl
std
push
inc
xlat
jno
loope
out
ret
jle
xor
ss
loopne
mov
push
xor
inc
shl
ret
fists
adc
jmp
sub
or
adc
push
add
repnz
sbb
xchg
mov
in
push
fs
sahf
cmpsb
je
add
cld
dec
je
ljmp
std
mov
ffreep
push
xorl
movsl
nop
cmp
mov
push
pop
lock
sbb
in
xor
pop
pop
sbb
mov
icebp
mov
out
jb
cs
sbb
pop
jne
or
push
add
jl
sub
or
lods
mov
jno
mov
inc
or
jg
lret
nop
js
cwtl
sbb
in
nop
or
adc
pop
jge
test
xor
rclb
jb
adc
test
sub
insl
popf
lret
cltd
fisubrl
mov
inc
imul
lds
outsb
xchg
ljmp
mov
js
sbb
add
fcoml
jnp
rolb
sbb
jg
inc
cmp
in
int
loopne
mov
xor
dec
hlt
scas
add
cltd
movsl
xor
mov
adc
and
pop
movsl
sbb
and
out
pop
inc
adc
das
outsl
pop
mov
xor
jae
jbe
and
cli
and
out
sub
mov
xchg
inc
mov
bound
decl
sub
dec
dec
pushf
mov
bound
iret
ret
sbb
movsb
daa
push
insl
mov
jns
pop
adc
cs
fcoml
push
mov
mov
push
dec
imul
inc
push
leave
pop
jbe
push
push
or
je
cmc
mov
cmpsl
loopne
js
or
sub
out
xchg
mov
sub
das
jp
popl
lea
movsb
sbb
bound
xchg
push
and
fnstsw
cs
mov
lret
std
xlat
std
stc
jecxz
mov
lods
push
negl
mov
or
push
test
bswap
xchg
dec
push
punpckhwd
dec
inc
clc
cli
cwtl
xor
xchg
pop
daa
lret
push
sub
js
lods
lcall
or
pop
mov
jecxz
test
lahf
popf
bound
jmpw
imul
daa
mov
cld
sar
and
jns
pop
mov
xor
mov
xlat
ljmp
inc
inc
jne
add
xchg
lcall
mov
and
xchg
jo
lcall
pop
inc
test
and
fisubs
lret
out
in
lret
movsb
lahf
cmpsb
mov
roll
add
pop
filds
cmpsb
push
lods
xor
test
outsb
lods
mov
xchg
cli
rcrb
cli
out
push
xorb
and
jno
aas
pop
mov
pop
push
inc
mov
aaa
lcall
adc
jp
adc
mov
add
push
dec
shlb
insb
sub
adc
mov
out
add
mov
jo
jo
insl
add
mov
inc
sbb
nop
jbe
inc
mov
lret
pop
push
cmp
dec
pop
int3
aam
push
dec
add
leave
mov
fldpi
jcxz
add
lret
pop
mov
loope
jg
stos
and
or
push
push
mov
insb
rorl
inc
pushf
mov
out
mov
or
mov
pop
mov
mov
mov
jp
mov
jle
jne
call
add
sbb
movsl
call
pop
jl
xlat
xchg
push
imul
sbb
jbe
xor
leave
repz
rorl
xor
mov
rorl
lcall
cmpsl
icebp
push
jns
scas
cmp
lret
cmpsb
insl
and
and
daa
out
sbb
jecxz
mov
push
sub
fs
adc
movsb
inc
cs
mov
les
inc
jb
nop
cmp
xchg
sub
pop
aam
xor
or
outsb
add
xchg
jb
cmp
xor
outsb
je
ret
push
in
ficoms
add
inc
daa
jbe
cs
pushf
xchg
cltd
cmp
pop
mov
mov
sahf
jne
rolb
andl
lahf
or
repz
xchg
stos
inc
into
cmp
xchg
add
lcall
data16
test
or
dec
push
xchg
jbe
xor
in
stos
ficoml
adc
dec
repz
mov
mov
aaa
sbb
ljmp
scas
cmp
and
push
lcall
pop
fwait
pop
lret
xchg
outsb
test
int3
dec
jp
push
dec
dec
inc
pop
inc
pop
pop
shrb
xchg
stos
xor
iret
addl
jg
add
imul
xor
sbb
not
daa
stos
mov
mov
stc
pop
out
lret
adc
mov
add
lds
js
adc
cmc
test
enter
insb
outsw
cmp
jne,pn
leave
add
mov
adc
dec
mov
push
sar
nop
xor
fidivs
hlt
xchg
pop
fldenv
xlat
lods
jne
push
and
sub
sub
fisttpl
addr16
dec
pop
addr16
jg
push
xor
adc
roll
shll
fildll
out
jae
mov
into
out
or
dec
addr16
push
aas
in
pop
jne
xchg
pushf
mov
lock
xchg
mov
push
or
jno
sbb
pop
mov
adc
fnstcw
shrb
pop
xchg
mov
das
sub
inc
clc
mov
lods
movzbl
cmpl
sbb
inc
mov
notb
pop
and
outsb
sbb
jo
sti
jo
out
int
jb
or
jecxz
adc
gs
push
movsb
outsl
rclb
std
insb
out
mov
test
into
dec
and
lahf
jl
xchg
inc
ret
xor
cmp
sbb
add
pop
jbe
push
popf
cmp
sbb
sbb
out
mov
dec
test
mov
nop
cwtl
or
push
jnp
roll
nop
push
arpl
fmulp
push
ds
test
out
std
cmc
adc
data16
outsb
fs
clc
xor
ja
popa
jle
fstpl
mov
in
inc
addr16
int3
pop
xor
push
dec
pop
xchg
xchg
add
insl
push
cli
mov
pop
or
jbe
xchg
push
mov
xchg
xchg
xor
popf
test
mov
sbb
sub
lret
leave
mov
mov
insl
push
dec
fstpt
loope
dec
int3
xlat
popa
data16
gs
pushf
scas
or
dec
loopne
aad
inc
fimuls
pop
inc
movsbl
mov
je
jnp
mov
js
out
and
push
hlt
lret
and
xchg
jo
inc
shl
jns
stc
inc
mov
jns
arpl
mov
insl
sti
cli
mulb
jge
mov
mov
xchg
xchg
or
test
aad
or
push
jmp
nop
mov
ljmp
fildll
cli
aam
xchg
test
cmpb
ret
add
add
fcompl
gs
adc
leave
pop
les
adc
xchg
shll
dec
or
sbb
outsl
repz
adc
orb
mov
add
xchg
adc
mov
jb
adc
aaa
dec
mov
sub
jnp
je
test
push
cmp
jb
push
push
inc
sbb
or
shll
pop
pop
loope
push
dec
xor
imul
andl
cmp
sub
mov
in
xchg
sbbl
mov
rep
lret
sahf
add
les
inc
jns
xchg
adcl
and
aaa
call
and
insb
sbb
add
pop
adc
adc
pop
sub
lods
or
sahf
in
test
dec
imulb
mov
sbb
jae
cwtl
fs
nop
shll
adc
jno
mov
push
sbb
fsubs
call
loope
cwtl
jge
fwait
mov
xchg
xor
xor
or
insb
push
sub
xor
inc
into
pushf
cmp
lds
mov
mov
scas
test
cmp
sbb
rclb
jp
mov
iret
or
sarl
jmp
pop
sub
sar
cwtl
jle
jbe
cmp
repz
push
fs
insb
mov
mov
roll
cwtl
add
lods
loop
sahf
or
das
test
repz
mov
mov
lret
mov
out
fdivrl
mov
ret
xor
pusha
shll
push
sbb
popf
mov
loopne
repz
mov
clc
and
sbb
repnz
insl
jne
bound
repnz
cmc
mov
leave
dec
cmpsb
pop
sar
lcall
sub
test
ja
testb
push
test
sub
inc
xlat
mov
fwait
outsb
clc
lea
xchg
xchg
mov
and
js
cli
dec
loope
push
mov
or
mull
lea
sub
push
fwait
jns
pop
fstpl
add
lret
mov
ret
mov
jae
aam
fidivrl
stc
dec
outsb
jg
pop
imulb
scas
mov
rclb
aad
in
cs
sub
cmpsl
insb
push
xchg
add
fsubl
popa
push
test
out
pop
push
jp
push
aaa
pop
iret
cltd
int
push
add
cmp
aas
into
inc
jno
mov
pinsrw
in
fldt
fs
pop
inc
push
mov
mov
je
dec
or
ret
xlat
pop
int
and
mov
pop
push
and
popa
mov
jge
jae
or
inc
mov
jl
sbb
push
jb
push
xchg
mov
dec
cmp
out
mull
cmp
mov
xor
lods
and
mov
int
imul
dec
xchg
mov
pop
mov
ret
dec
jno
lcall
in
dec
in
movsb
insb
movsb
dec
mov
adc
inc
mov
sti
inc
sub
imul
out
mov
cltd
sbb
sti
and
inc
mov
sbb
or
icebp
cmp
dec
jbe
jbe
push
hlt
pop
rclb
lahf
jns
mov
cltd
xor
sub
lock
popf
inc
mov
push
fwait
inc
fldcw
cmpsl
cld
push
inc
xor
cmc
mov
aas
pop
stc
jp
adc
in
scas
jecxz
das
arpl
scas
cmp
mov
xorl
adc
mov
repnz
add
add
add
dec
push
pop
push
pop
dec
mov
dec
push
lods
cmp
dec
mov
add
add
inc
repnz
insb
daa
pop
jg
add
insb
or
adc
test
andl
adc
aaa
bound
nop
sub
sbb
xor
cmp
jle,pn
stc
les
ja
xchg
jge
jns
std
addl
out
js
jecxz
icebp
mov
dec
outsl
xchg
dec
jb
rorb
jbe
jmp
outsl
cmc
test
js
push
cmp
add
jmp
sbb
sub
and
mov
mov
jp
xchg
es
test
adc
push
jl
mov
insb
cmpl
add
cmp
mov
inc
jle
xor
loopne
in
call
mov
pop
nop
jae
test
out
out
mov
adc
jl
adc
ret
loope
sub
jmp
mov
std
into
in
adc
and
sti
lret
mov
mov
inc
and
out
test
dec
sbb
rorb
jmp
lock
in
inc
and
or
arpl
jae
cmp
xchg
xchg
stos
addl
adc
lret
sbb
scas
and
not
push
movsl
fwait
inc
xor
sub
mov
jne
cli
loop
jae
clc
dec
cmp
mov
arpl
mov
xlat
xchg
ss
xchg
jbe
dec
mov
sub
cmpsb
cs
and
add
icebp
fdivrl
loopne
int3
cmpsl
movsb
add
jp
cmpsl
fisubl
mov
ret
xchg
jno
stos
pop
sub
stos
push
xor
and
add
stc
adc
inc
push
mov
sbb
sub
mov
out
dec
cmp
adc
nop
sbb
loop
jp
popa
cmp
sbb
sub
mov
loope
ficomps
stos
sub
je
js
insb
cmc
fisubrs
jmp
mov
aam
adc
int3
inc
shlb
xor
jge
cmp
lods
arpl
gs
pop
or
loopne
jne
jp
mov
push
cmc
inc
xor
sub
pop
clc
jp
inc
pop
insl
xchg
movsb
xor
mov
mov
and
adc
loopne
ficomps
fwait
repz
sub
mov
stc
cs
push
aam
ret
mov
aas
xor
nop
cmp
push
mov
sub
or
inc
lret
xchg
add
movsb
dec
imul
cmp
xchg
jbe
movsb
cmc
xor
sub
int3
pop
cs
pop
inc
daa
add
ror
adc
insb
mov
lret
daa
push
lods
pop
dec
ret
mov
sub
add
mov
xor
cmp
and
fwait
movsl
test
pop
push
fs
rolb
and
push
adc
mov
inc
dec
xchg
cmp
lock
aaa
jnp
lock
pop
lods
cmp
dec
ds
mov
or
jg
scas
xlat
lahf
imul
and
mov
in
movsl
jo
mov
inc
mov
mov
arpl
xor
lock
or
inc
dec
jno
jg
pusha
ficoms
adc
push
mov
int3
cmpl
adc
jmp
nop
or
nop
adc
inc
or
sbb
lcall
lods
add
sahf
movl
dec
jecxz
mov
mov
cld
outsl
push
idivb
add
lock
mov
in
icebp
jns
pop
insb
push
mov
sti
gs
aad
movsl
mov
sub
inc
les
pop
int
orl
pop
lock
or
mov
mov
ja
xchg
in
lret
leave
sub
ja
fwait
and
fwait
push
dec
test
mov
fistps
sar
mov
dec
rcrl
xlat
mov
push
sub
subb
mov
inc
and
inc
es
cmp
aad
in
fwait
repnz
inc
insb
jmp
push
push
mov
mov
leave
inc
and
mov
pop
test
test
lods
clc
mov
sbb
pop
jo
popf
mov
dec
sub
push
lea
push
lods
jne
pop
mov
or
int
dec
nop
aad
mov
ja
or
sub
mov
out
adc
push
mov
jo
aam
sbb
andl
sti
xchg
shl
loopne
push
add
or
push
fnstenv
std
sbb
fimull
dec
fcmovnu
shlb
jne
and
push
and
bound
insb
adc
popa
sbb
setnp
in
xchg
cmp
iret
jb
repz
adc
push
test
push
cmc
cmpsb
les
xorl
call
add
mov
into
or
clc
sbb
pop
cmp
xlat
sbb
mov
imul
rcll
es
popa
popa
sub
rep
bound
ret
in
movsl
push
cld
test
sbb
inc
mov
leave
mov
fnstcw
insb
fdivl
xchg
mov
movsl
lret
mov
adc
scas
ljmp
setns
pusha
inc
dec
inc
push
je
cs
mov
lods
in
popf
mov
insl
shll
push
lret
movsb
or
jne
aam
incl
jmp
fstl
call
in
jno
sbb
sar
daa
shrb
sub
aas
add
ds
add
loope
or
orb
repz
adc
and
je
push
xor
into
mov
mov
gs
lods
stos
fs
jecxz
lret
push
jno
pop
cmpsb
jns
int3
add
scas
lret
mov
cmp
add
mov
sbb
fmuls
mov
and
jecxz
fs
ds
sub
adc
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
cld
nop
add
jg
add
nop
inc
in
enter
shlb
shrb
mov
or
cmp
push
mov
ss
int3
dec
lods
bound
mov
add
ret
fcompp
bound
push
sbb
into
iret
cmc
adc
int
call
iret
stc
fwait
sarb
jmp
ret
ljmp
mov
xchg
inc
cmpsl
into
or
mov
rcl
bound
mov
sbb
test
xchg
mov
repz
popf
mov
jo
mov
lods
movsb
cmc
jmp
testl
mov
fs
adcb
es
lret
out
pop
jae
dec
cmp
push
push
xchg
lods
orl
add
and
or
xor
fnstsw
lcall
out
add
cmp
xchg
clc
xor
imul
mov
nop
into
loop
jg
lods
js
insl
lcall
fisttpl
fmull
mov
and
mov
cmp
push
cmp
addb
lds
das
inc
jns
arpl
xor
clc
sbbl
xor
jno
sti
ret
imul
dec
call
xlat
inc
xor
mov
fucomip
adc
add
adc
aas
fldenv
lods
push
lds
xchg
and
sbb
mov
ficoms
xchg
adc
dec
mov
sub
inc
cmp
loope
loope
das
mov
xlat
and
ret
insb
in
inc
xor
inc
sbb
jbe
add
aad
inc
in
cwtl
dec
xor
cmp
loope
dec
adc
dec
out
lahf
in
fdivrs
xor
inc
sub
ret
xor
mov
pop
lds
aas
lock
rcll
sub
cmpsl
loope
add
pcmpgtd
pushf
out
adc
nop
cmpb
rol
cmpsl
dec
dec
xchg
or
fwait
push
ja
stos
sub
mov
mov
xchg
push
jl
xchg
lods
inc
and
cmp
or
fcmovu
les
lods
sub
cmp
and
out
cmpsb
mov
cmpsb
jl
sbb
mov
dec
addr16
in
mov
fs
push
push
xor
jbe
jne
jo
inc
xor
fldt
test
add
push
inc
xor
jnp
fs
incl
mov
push
sbb
xor
lds
cld
push
test
fbld
jbe
cltd
insb
addl
movsl
lret
inc
testl
xor
sub
adc
movsb
adc
add
pop
cmp
dec
mov
jmp
nop
fs
ds
and
imul
subb
std
sub
inc
js
sub
pop
cmp
les
mov
loope
sub
or
inc
sub
inc
in
movb
int
mov
xchg
out
xchg
imul
loopne
aam
jnp
mov
ret
int3
mov
dec
pushf
loopne
mov
in
rorl
cltd
lret
popf
ret
or
adc
mov
mov
fwait
sbb
imul
lahf
xchg
inc
inc
push
mov
dec
repz
outsb
jne
jle
es
mov
imul
lods
int3
jnp
lea
or
sbb
cltd
add
arpl
insb
jb
jmp
lahf
xlat
and
je
lea
xchg
popa
aad
imul
pop
lahf
stc
mov
xor
insl
sarl
mov
cwtl
inc
enter
mov
cli
je
movsb
ret
or
mov
popf
pop
jp
cwtl
or
clc
dec
inc
shlb
or
jmp
jmp
and
dec
jl
push
jle
xor
fstpl
mov
pop
pop
and
aam
rcl
xchg
pop
mov
adc
ja
jecxz
loope
push
mov
pusha
add
insb
leave
inc
xchg
es
loope
js
test
push
pop
arpl
mov
dec
lahf
mov
mov
cmpsb
adc
xor
jp
test
in
fisubs
add
sub
ret
or
and
fwait
mov
cmp
fbld
sub
jge
cmpsb
ds
incl
loopne
je
jg
xchg
xchg
cmpsb
jmp
xchg
jge
add
sar
jg
jl
sbb
ds
leave
aaa
jp
xor
daa
imul
jecxz
lcall
push
jo
fwait
pop
dec
fsubrp
in
inc
sbb
push
dec
inc
inc
and
sbb
xchg
gs
lds
dec
add
sahf
inc
sbb
xor
sub
ss
fcompp
popa
sbb
inc
mov
sub
cmp
sub
movl
ror
xor
shrl
adc
inc
adc
xlat
notb
mov
mov
add
jbe
int3
mov
add
dec
xor
std
hlt
pop
dec
xor
adc
sti
sub
sub
ret
fdivrp
xchg
cmpsb
jo
sub
stos
das
or
xchg
xchg
dec
xlat
pop
call
test
xchg
jle
aad
ja
dec
stc
ja
ja
pop
or
lret
cmp
loopne
ljmp
pop
cs
imul
dec
xor
or
int3
je
ss
ret
xchg
pop
mov
jo
or
sahf
shlb
xchg
cmp
jg
sti
test
mov
sub
mov
push
pushf
cwtl
fdivr
push
test
pusha
pushf
imull
jge
scas
jbe
mov
fldl
or
sbb
push
out
inc
dec
filds
test
xchg
insl
cmp
mov
pop
cmp
xchg
je
xchg
loopne
sub
mov
mov
leave
ljmp
call
loop
mov
jmp
add
add
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
add
add
add
out
popf
aaa
cli
shll
sarb
cmp
mov
test
or
rol
hlt
ds
stos
sbb
xorl
mov
inc
add
ret
outsl
hlt
mov
cli
inc
dec
ss
mov
xchg
xchg
dec
push
imul
sarb
pop
cmp
xor
les
insl
sbb
xchg
push
fldt
push
mov
push
rcrb
test
add
in
cmp
adc
add
xchg
hlt
sub
add
stos
push
in
jle
pushf
out
sub
scas
dec
pushf
xor
pop
shrl
in
xchg
jge
sarl
mov
and
fwait
scas
out
fiaddl
sbb
cld
jb
jnp
subl
mov
in
shrl
cmc
test
cmp
outsl
or
cmp
call
inc
push
jne
adc
aaa
shrb
pop
iret
xchg
dec
inc
cwtl
pop
pop
loope
dec
shll
mov
ret
scas
pop
mov
imul
pop
js
jns
daa
cltd
adc
adc
push
inc
mov
inc
xchg
or
xor
mov
inc
jnp
fildll
sbb
arpl
outsl
mov
mov
sub
inc
jne
insl
fadds
xlat
inc
push
add
fcompl
pop
imul
imul
jns
icebp
test
ljmp
jp
sub
push
bound
and
in
add
test
adc
sbb
pushf
cs
push
push
lods
in
stos
sub
xchg
mov
xor
add
inc
add
fs
les
add
pop
mov
out
insl
cld
inc
xchg
xchg
out
mov
imul
cmp
jbe
jmp
fadds
dec
and
push
cwtl
inc
jg
dec
xchg
push
fs
data16
mov
push
ja
ret
into
incb
xor
push
lock
cs
icebp
stos
mov
mov
mov
pop
stos
scas
aad
cltd
sub
and
xchg
scas
fldenv
xor
pop
cmp
dec
adc
inc
icebp
andb
add
aas
mov
mov
inc
cmpsl
shll
sub
dec
stc
out
mov
or
movsl
inc
divl
xor
aaa
repz
mov
mov
jge
test
fpatan
sar
push
leave
mov
outsb
push
adc
xor
pop
rcr
loopne
and
mov
pop
add
fdivl
cli
add
mov
mov
ljmp
pop
push
es
add
pop
hlt
fldl
or
fsubrl
ss
lds
fwait
xchg
cmp
clc
pop
pop
lods
lea
jg
imul
mov
jno
mov
nop
xor
xchg
inc
add
push
fcmovbe
mov
lret
cwtl
repnz
mov
add
xor
xchg
fprem
aam
push
mov
fsubrs
pusha
stos
mov
lods
outsl
lahf
repnz
test
dec
adc
mov
dec
cmp
xor
fs
daa
int3
and
jns
roll
and
lret
mov
pop
pop
pop
and
mov
xchg
lods
sbbb
jns
xor
pusha
dec
call
movsl
dec
mov
mov
cs
jae
popa
adc
loopne
push
shlb
push
hlt
mov
push
push
inc
mov
cs
loopne
aas
xchg
adc
adc
and
fidivrs
mov
push
jne,pn
popf
mov
fld
adc
sub
cmp
sub
and
rol
pop
fucomip
ljmp
rclb
or
and
mov
nop
pushf
stos
cli
and
lahf
sbb
repnz
ret
push
xor
adc
mov
leave
push
pusha
xor
mov
adc
enter
mov
in
mov
outsl
sbb
sbb
daa
insb
gs
xor
cmp
cmp
sub
inc
imul
jp
mov
fsubrl
inc
jecxz
shlb
mov
adc
push
inc
mov
xchg
lcall
in
mov
fmuls
sahf
mov
les
jp
or
push
jno
xchg
jnp
iret
adc
lock
scas
xchg
ds
sbb
mov
mov
push
or
and
mov
test
hlt
enter
mov
and
rorl
push
dec
arpl
scas
into
inc
xchg
shr
sahf
fidivrs
jne
adc
pop
fistpll
test
sub
or
int3
enter
fldenv
stos
pop
js
push
mov
cmp
in
out
outsl
in
sub
jno
aaa
adc
mov
in
scas
xor
das
push
icebp
int3
das
mov
and
push
mov
jle
out
dec
lods
pop
js
fnstcw
mov
mov
jp
add
sub
scas
aam
loope
mov
push
inc
orl
adc
add
add
cmc
or
adc
sub
dec
ja
pop
inc
fwait
je
ret
add
int
mov
lahf
stc
mulb
adc
add
inc
sbb
dec
adc
lds
sbb
adc
cmp
scas
xor
outsl
jno
jle
loop
add
inc
fs
test
add
in
mov
cmp
push
push
jl
push
cmp
dec
and
and
mov
pop
cmp
add
inc
mov
leave
in
cwtl
jb
cld
popf
arpl
aas
mov
push
cmp
cmpsl
xchg
jp
pop
daa
add
mov
jle
pop
lcall
bound
sub
fistpl
repnz
sub
dec
repz
jp
test
stc
pop
sub
add
inc
push
pop
pop
push
dec
cmp
or
ficoms
popf
add
jg
add
das
aas
lcall
xchg
lahf
mov
pop
pop
mov
sbb
cmp
shll
or
or
sub
stos
mov
cmp
lock
popa
push
cli
arpl
xchg
mov
stos
mov
je
inc
ljmp
mov
test
or
aas
lea
movsb
repnz
popf
cmpsb
shll
scas
and
adc
sbb
mov
les
pop
adc
xor
fwait
jmp
pop
sub
adcl
mov
xchg
and
inc
jp
mov
mov
mov
nop
mov
stc
movsb
and
icebp
fisubrs
mov
adc
xchg
in
adc
andb
fwait
dec
les
and
in
sbb
pop
cmpsl
pushf
lea
xchg
pushf
cmp
mov
loop
fwait
and
icebp
pop
push
xor
std
andb
and
cmpsb
jo
icebp
pushf
jbe
inc
inc
jge
bound
cmp
mov
loope
bound
mov
xchg
mov
stos
lock
out
cmpsl
adc
dec
lret
aaa
mov
mov
mov
sub
mov
push
outsb
push
fmull
push
dec
jnp
pushf
and
in
sti
aad
add
outsl
rorb
daa
mov
in
and
mov
dec
inc
fadds
cld
pop
test
cld
mov
cmpxchg
in
in
sub
dec
mov
mov
int3
insb
sbbl
inc
jp
jns
xor
js
dec
mov
and
cmpsl
mov
cmpsb
push
xchg
in
xor
add
fwait
mov
fstpt
in
or
arpl
jns
xchg
imul
add
jb
xchg
add
xchg
push
mov
mov
mov
push
imul
cwtl
out
js
addr16
inc
scas
repz
mov
sbbb
pop
jb
test
ja
sub
xchg
or
push
jbe
pushf
ret
sub
jl
jb
gs
mov
imul
mov
mov
or
ljmp
cmp
es
aaa
pop
dec
subl
movsb
mov
fidivrl
leave
add
ds
or
bnd
mov
outsl
jmp
and
push
push
sahf
movsl
ss
or
inc
enter
push
pop
or
insl
in
aas
ret
push
push
fildl
pusha
xchg
xchg
fbstp
or
outsl
xor
inc
es
subl
jl
pop
test
sub
movsb
call
push
dec
ret
and
test
sub
mov
movl
dec
cmpsl
movsl
adc
mov
inc
jge
ljmp
adc
negl
dec
rcrl
test
imul
mov
xchg
repz
jmp
push
mov
or
cmpsb
aam
xchg
cmp
dec
rorl
mov
andl
adc
pop
mov
pop
xlat
adc
mov
in
sub
loope
out
jecxz
pop
call
fsubrl
test
pop
mov
lret
or
sti
fs
adc
mov
dec
adc
mov
xchg
mov
sti
cmp
lods
mov
out
xchg
xchg
cmp
mov
sahf
sbb
jb
jg
add
lods
stc
pop
in
cmc
orb
sub
mov
lods
sub
les
xchg
iret
rclb
inc
lcall
les
divl
pop
cmpsb
dec
stc
testl
sub
mov
push
negl
in
lea
push
dec
ror
ja
mov
fdivr
push
mov
lahf
aam
leave
sub
sbbl
or
insl
add
mov
sti
or
cmp
mov
xchg
lds
aam
add
addr16
ljmp
mov
sahf
lea
push
inc
dec
arpl
jne
jo
out
pop
jmp
popw
enter
outsl
adc
insb
or
mov
xchg
in
mov
sbb
pop
out
pushf
aad
mov
sub
mov
xlat
fdivl
push
mov
cmp
mov
insb
jnp
pop
mov
cs
movsb
dec
xor
pop
mov
xchg
mov
ret
adc
mov
rcrb
test
dec
aas
notl
mov
push
mov
push
cld
lods
jae
ja
dec
mov
push
js
inc
outsb
movsl
shrb
hlt
mov
in
dec
cmpsl
lods
fildl
mov
jp
aaa
pop
out
xchg
inc
shl
sbb
dec
sub
int
adc
es
sub
push
lea
scas
xor
fsub
push
adc
push
sbb
and
fistpl
mov
xchg
sub
sub
fsubrl
push
sahf
hlt
call
popa
ljmp
enter
mov
movsl
pushf
lods
outsl
hlt
cmpsl
adc
lds
popf
ja
or
pop
popf
push
shlb
lods
mov
sub
push
pushf
in
adcb
push
stos
in
icebp
popa
js
inc
adc
add
dec
mov
ja
jp
add
inc
and
sti
xchg
mov
adc
in
enter
mov
orl
mov
test
jl
and
adc
inc
ljmp
xchg
in
sbb
adc
fmuls
les
dec
pushl
mov
jmp
push
sbb
loope
fmull
sbb
jnp
push
das
idivb
clc
fucomi
pop
roll
arpl
xor
inc
xchg
mov
push
enter
mov
add
jno
popf
adc
jns
jo
mov
mov
mov
test
mov
dec
jns
call
fsubr
xchg
adcb
in
pop
ljmp
add
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
jne
movsb
add
jg
add
mov
movsl
mov
cmp
rcrl
mov
loop
leave
fdivrp
cmc
push
sbb
ficoml
shll
stos
push
add
int
les
int3
fucomip
addr16
scas
icebp
jae
cmp
xchg
mov
adcb
dec
mov
dec
insl
and
xchg
movsl
popa
sbb
mov
xchg
pop
add
sbb
push
ds
xchg
adc
stos
xor
in
sbb
ret
pop
idivl
adc
mov
cltd
jns
dec
xchg
je
pop
popf
stos
push
dec
ds
ja
lret
jp
out
cmp
js
and
loopne
int3
subb
mov
out
mov
movsb
cmp
ret
cltd
push
mov
jg
outsb
out
xor
push
and
dec
hlt
push
stos
add
mov
mov
pop
jae
lds
adcl
cmpsl
lret
daa
cmp
pop
sub
jnp
sub
cltd
lcall
fdivs
ljmp
lahf
sub
icebp
scas
ret
ljmp
icebp
fwait
es
std
aam
pop
mov
cmp
rcll
imul
pop
mov
mov
sti
lds
push
cmc
out
test
jnp
rclb
cwtl
lret
aad
dec
jmp
cmp
test
push
scas
aas
push
push
or
mov
dec
scas
sub
inc
lods
mov
in
pop
test
fdivs
inc
ficompl
sub
stc
fs
sbb
aas
add
rep
or
add
daa
jne
js
cmp
lods
adc
int
cltd
jle
loope
ds
cmp
pop
repnz
cmp
shll
push
and
mov
dec
lds
orb
mov
test
jp
inc
xchg
push
lods
in
in
mov
xchg
mov
pop
push
or
sbb
lcall
mov
outsl
cmp
fdiv
addr16
xor
mov
lret
call
jmp
test
sub
xor
and
xchg
jmp
xchg
xchg
jae
inc
stos
mov
adc
mov
mov
loop
pop
mov
jecxz
outsl
mov
in
fldl
jmp
mov
push
add
rcrl
inc
dec
fistps
jno
mov
or
es
adc
or
mov
orl
lret
icebp
cli
mov
push
dec
add
push
push
mov
les
and
js
out
mov
pop
adc
or
push
dec
cmp
or
in
notl
lcall
lock
cs
and
in
pop
dec
daa
push
in
dec
pop
cltd
jnp
mov
cmpsl
sti
inc
pop
insb
sbb
and
inc
sub
xchg
jb
xchg
rcl
inc
ljmp
ret
push
inc
xchg
ja
stmxcsr
mov
ret
or
or
lret
push
adc
lret
jb
lods
loopne
xor
dec
xchg
xchg
sbb
adc
jle
incb
mov
or
jno
inc
push
dec
mov
jb
mov
mov
mov
inc
ljmp
pop
repnz
and
jecxz
jge
mov
cmp
push
les
in
repnz
cli
xor
pop
out
test
jmp
sahf
adc
pop
mov
in
mov
sub
leave
push
mov
enter
enter
lahf
push
pop
clc
cmp
pop
leave
dec
push
int3
xor
and
leave
call
or
push
inc
enter
shr
aam
jp
in
xor
ds
aas
cs
call
orb
fucomi
sbb
add
push
add
sub
loope
pop
add
pop
jmp
out
push
jp
dec
xchg
mov
cs
lcall
jge
icebp
xor
cmp
outsb
sahf
mov
xchg
addr16
adc
das
sbb
cs
xor
arpl
jmp
and
and
nop
mov
enter
xor
jo
adc
sbb
or
or
adc
fisttps
lret
or
mov
aas
cmpsb
adc
cmc
in
cld
stc
shrl
or
in
push
movsb
dec
sub
push
fs
xchg
inc
or
and
fstl
cmpb
in
in
jl
dec
mov
mov
jp
sbb
xor
in
cmpsb
pusha
push
inc
addl
scas
js
xorl
cwtl
sbb
ret
adc
mov
or
sti
xchg
mov
sub
into
ja
test
jg
xchg
jg
and
ret
jmp
xor
mov
subl
sbb
clc
inc
lea
pop
inc
lock
adc
dec
std
lea
ds
jmp
iret
sbb
xor
xor
inc
sbb
sahf
xchg
ljmp
or
dec
sub
push
xchg
leave
inc
in
loope
or
scas
jge
push
sbb
jno
jae
cli
jno
sub
jmp
sub
mov
pop
dec
cmp
inc
xchg
shrb
pop
leave
push
xchg
test
popf
xor
jl
insb
adc
data16
lret
popf
push
add
jno
cmp
xchg
cli
push
mov
popa
mov
jne
inc
ds
jl
push
pop
scas
xchg
je
jo
mov
mov
or
adc
adc
jnp
mov
rorb
cmpsl
push
out
mov
cld
push
push
mov
bound
mov
push
loope
call
daa
mov
fwait
push
cmp
sub
andb
or
pop
adc
mov
or
sbb
subb
add
add
add
pop
pop
pop
pop
push
dec
mov
xchg
cmp
jg
add
fstenv
push
test
daa
xor
mov
mov
jecxz
mov
adc
pop
adc
cld
ja
cltd
pop
xchg
jae
mov
inc
cmpb
mov
and
fistps
lods
pop
outsl
pop
jno
xchg
out
test
push
add
fldl
or
lea
pusha
mov
cltd
push
ss
and
sahf
nop
rcl
out
pushf
jge
mov
lods
and
gs
int3
dec
xchg
sub
mov
push
jno
mov
out
mov
xchg
int
mov
stos
sahf
pop
out
mov
jmp
add
dec
jnp
adc
ljmp
pop
jb
outsl
rcrl
push
dec
mov
jns
pop
pop
sarb
mov
std
and
cmpsb
xor
mov
das
add
sub
mov
mov
push
xchg
pushf
cmp
aad
jp
jb
mov
jo
imul
dec
imul
or
clc
or
fldt
inc
mov
cmp
fisubrl
mov
inc
cmc
pop
shlb
adc
sub
sub
adc
movsb
dec
out
das
mov
mov
test
cld
xchg
and
lret
push
push
xchg
cmp
pushf
and
dec
dec
push
add
imul
movq
inc
xchg
es
jle
fs
outsl
ljmp
xor
add
cmp
jmp
inc
icebp
fsubl
push
mov
or
mov
jns
lds
test
std
je
jnp
cli
or
mov
clc
cmc
xor
jno
sub
mov
mov
jnp
cltd
ret
dec
jle
mov
stos
and
xor
cli
out
cli
dec
ljmp
xchg
xor
xor
sbb
js
in
test
xchg
push
mov
or
or
stos
mov
xchg
loopne
js
add
add
push
adc
jge
fdivrl
in
jg
push
cmpsb
jecxz
data16
xor
loope
fidivrs
popa
stos
hlt
inc
add
inc
test
adc
popa
mov
inc
lcall
sub
stc
cmpsb
scas
inc
mov
mov
cld
pop
add
repnz
xchg
or
and
and
movsb
sub
mov
xchg
add
dec
int
sub
nop
add
scas
push
mov
jb
push
out
outsl
adc
add
imul
cli
cli
and
push
jge
movsl
lret
sbb
add
lea
cli
cmp
and
mov
jg
clc
ret
pop
xor
dec
adcl
in
aad
push
lea
pop
and
mov
cmc
inc
leave
in
and
pop
jne
repz
in
mov
addl
rcrb
inc
mov
hlt
cwtl
push
mov
nop
mov
loop
ror
sbb
adc
adc
icebp
hlt
nop
insl
push
out
sti
movsl
ja
dec
mov
sbb
jl
push
cmp
stc
sbb
mov
pop
aad
mov
jne
in
ficompl
sahf
in
lcall
pop
mov
enter
stc
push
cmp
mov
mov
inc
push
jno
xor
out
ljmp
add
cmpsl
roll
add
and
out
jae
in
mov
sub
or
jl
pop
sbb
popa
loope
add
das
stc
cltd
sbb
adc
fcmovb
nop
xor
jbe
or
cmp
pop
or
idiv
lods
mov
jl
je
mov
hlt
pop
dec
add
mov
shrl
add
imul
mov
push
mov
xlat
pop
and
or
movsb
jmp
jns
mov
xor
jne
and
movsl
call
or
xchg
into
jmp
inc
sbb
out
sarb
lahf
ljmp
enter
lea
aad
push
mov
lea
cmp
les
sub
sub
imul
js
sti
xlat
cli
xchg
xor
mov
sbb
jge
das
push
inc
bswap
cmp
dec
iret
push
daa
addl
dec
test
or
cld
clc
jns
push
mov
jecxz
adc
pop
and
xchg
xchg
testb
and
mov
mov
or
xchg
adc
jae
add
mov
jge
sbb
mov
mov
pop
std
jne
inc
scas
jno
xlat
int
icebp
cmp
fcmovne
xor
xchg
aaa
jbe
xchg
lret
out
test
sti
push
and
in
adc
adc
orl
jns
outsl
lea
add
je
incb
faddp
ss
jne
out
xor
pop
sti
fs
imul
pushf
mov
test
es
inc
in
or
andb
mov
and
push
jbe
out
push
ljmp
dec
add
ret
ds
add
push
sub
and
xchg
adc
mov
dec
xor
push
adc
in
dec
loop
pop
inc
outsl
ficoms
sbbb
sar
xchg
cltd
popf
add
jp
test
pop
mov
sbb
inc
cmp
inc
scas
out
fistpll
lods
jmp
cltd
push
test
sbb
pushl
out
inc
cmc
call
lock
mov
ljmp
inc
clc
and
mov
stos
jnp
clc
or
pop
inc
setns
xchg
push
fs
imulb
nop
popa
and
cwtl
sub
sub
pop
sarl
pushf
jbe
sbb
and
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
add
add
jg
add
jmp
sbb
ljmp
shl
sub
and
push
mov
xchg
mov
sub
jecxz
movsl
jns
sbbl
pushf
jecxz
mov
pusha
ja
in
int
out
mov
ret
les
push
loope
jecxz
lahf
mov
std
jg
pusha
mov
adc
jmp
mov
rcrl
jnp
xor
add
mov
call
aad
sbb
xor
jmp
mov
adc
incl
jp
mov
cmp
or
fistpl
mov
dec
mov
push
fsubr
jge
ljmp
cmp
jg
bound
or
daa
in
aam
mov
iret
add
adc
mov
pop
push
repz
mov
mov
fcmovb
leave
out
pop
mov
nop
lret
xchg
jb
scas
in
inc
fidivl
push
popa
out
add
xchg
mov
sbb
mov
add
ds
cli
xor
loopne
push
iret
and
jnp
jecxz
jbe
xor
cmp
mov
inc
addl
leave
dec
test
fimull
xchg
hlt
sub
push
rorb
fs
in
xchg
ds
jle
or
popa
shl
loop
out
pop
jmp
mov
ljmp
movb
cmc
divl
dec
push
add
jle
test
mov
nop
clc
int
pop
sub
cli
mov
daa
icebp
sbb
push
cmp
xchg
ja
lods
jbe
test
testl
jo
repnz
mov
icebp
inc
mov
outsl
pop
loopne
repnz
psrlw
popa
lcall
daa
pop
sub
mov
arpl
adc
xchg
cmpsl
lret
in
mov
adc
or
push
fsts
fldt
aam
and
ret
loop
movsb
out
pop
out
addr16
mov
jmp
push
movsl
loope
or
xor
cmc
ret
sbb
in
xor
movsb
addr16
popa
mov
sbb
and
ds
test
adc
clc
mov
sbb
mov
fwait
sbb
inc
push
repnz
sti
in
push
cmp
dec
mov
push
js
aam
out
jb
adc
scas
xchg
in
das
jbe
repz
daa
dec
sub
filds
pop
scas
mov
into
cwtl
push
out
xor
adc
outsb
sbb
cli
addr16
inc
clc
fidivl
jle
mov
xchg
sbb
sbb
test
lahf
mov
popf
adc
sbbl
or
bnd
lret
xor
in
cmc
lret
push
negl
pop
cmp
inc
cltd
pop
into
or
dec
addr16
sarb
cmp
cmp
clc
add
xlat
mov
add
mov
fistps
adc
sub
ss
or
aas
es
xchg
mov
jecxz
scas
and
mov
jnp
aas
and
lahf
call
dec
sub
mov
stos
movsb
sbb
movsb
in
dec
outsl
imul
jg
push
in
arpl
aaa
xchg
mov
mov
dec
push
push
mov
in
xlat
mov
xor
xor
inc
mov
shll
loopne
sub
jmp
push
xor
out
sahf
out
in
into
mov
pop
push
or
insb
and
mov
sbb
call
xor
iret
outsl
mov
xchg
add
jae
mov
mov
xor
adc
push
dec
mov
adc
sub
mov
les
jo
sbb
cmp
inc
insb
ja
hlt
lea
adc
stos
cmpsl
xchg
xchg
aas
gs
lds
jo
adcl
pop
arpl
xchg
push
ja
into
out
call
add
sub
inc
mov
xchg
add
push
cmp
je
push
mov
mov
aas
or
jo
cmc
sbb
xchg
push
int
std
cmpsl
mov
mov
cs
pop
pop
dec
test
out
jb
mov
jp
pusha
std
pop
loopne
push
lret
jns
add
inc
adc
repz
add
aad
stos
lea
repz
cmc
fucompp
icebp
mov
and
les
pusha
or
xor
stc
add
sub
mov
mov
mov
mov
ret
iret
or
arpl
popf
xchg
popa
lret
bnd
imul
call
jp
cmp
or
mov
loop
lret
adc
popf
inc
ret
call
push
mov
insl
push
dec
insl
in
xchg
lods
rorb
test
mov
imul
fmulp
mov
adc
outsb
lret
pop
push
test
push
bnd
sub
push
mov
rcll
jo
add
in
cmp
pushf
cld
or
std
xor
pop
push
sarb
lea
das
sbb
in
adc
jge
push
popa
ja
test
insl
popa
ja
aad
dec
and
push
shl
sarb
inc
xchg
inc
cmp
dec
movsb
rcrl
je
push
jnp
sub
add
sub
mov
movsb
jno
and
sahf
xor
dec
inc
mov
int
dec
sbb
pop
int
pop
addb
and
cmc
imul
inc
push
jne
xchg
dec
fmuls
mov
ret
mov
jbe
aas
pop
cld
fists
sbb
mov
jne
das
xchg
int
mov
dec
mov
cmp
test
jbe
sahf
push
xchg
es
cmp
fdivrs
ljmp
pop
inc
es
pop
push
fdivrs
sbb
or
cmpsb
imulb
sbb
cmp
adc
outsl
pusha
or
inc
in
mov
push
push
xor
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
sbb
cmp
mov
add
add
cli
insl
test
stos
mov
mov
orb
fwait
dec
outsl
sar
sbb
data16
inc
jp
aad
or
sbb
pop
xchg
js
sbb
jns
mov
jbe
mov
mov
imul
sub
pusha
push
popf
or
test
adc
movsb
test
xor
out
test
scas
mov
imul
cmc
sbbl
mov
jp
pop
mov
popf
pop
fwait
cmpsl
in
arpl
add
sub
fimull
test
sbb
adc
adc
scas
mov
adc
sub
mov
sub
out
aas
mov
pop
dec
jg
repz
xchg
jb
xchg
push
or
mov
and
ss
daa
cmpsb
out
push
push
in
cmp
cmp
push
cli
push
in
shll
es
mov
test
in
jge
out
adc
nop
cld
test
std
jns
or
mov
and
pop
jne
jge
sbb
xor
mov
ja
and
adc
jp
mov
mov
adcb
cmc
orb
lock
leave
xor
idivl
xchg
in
popf
cmp
jb
lcall
adc
mov
pushf
and
mov
lahf
stos
movsb
orb
movsl
cs
lea
and
loope
je
pop
xor
and
nop
lret
jnp
mov
mov
lock
mov
add
mov
sbb
leave
inc
xchg
das
int3
mov
sbb
add
in
fdivl
mov
dec
mov
sub
cmc
sti
sbbb
xchg
xchg
adc
jnp
mov
in
push
scas
xchg
gs
jnp
cmp
sbb
or
push
xchg
sbb
orl
scas
cmpsb
cmp
out
rol
test
js
sbb
jle
push
fdivp
adc
fwait
xchg
sti
mov
sbb
insl
int
mul
mov
cltd
add
aam
mov
push
xor
ja
or
mov
mov
inc
dec
dec
jbe
cmpb
mov
sbb
shrb
out
mov
and
out
inc
sbb
or
mov
into
ret
push
fildll
adc
testb
outsl
sarl
std
push
xchg
jnp
loop
sub
ret
in
scas
add
jno
lods
jecxz
dec
fwait
movsl
mov
sub
mov
cmpsb
pop
imul
sub
fwait
jg
loope
xchg
push
xor
xchg
aad
scas
mov
test
outsb
cltd
aad
jp
add
jmp
ljmp
push
cmp
into
xor
shlb
add
inc
nop
cmp
jg
nop
xlat
pushf
sub
xor
jp
xchg
fstl
mov
in
or
inc
jmp
leave
lret
scas
or
sbbl
mov
push
jbe
cmpsl
sub
cmpsb
push
pop
xadd
mov
das
push
movsl
add
loop
les
xchg
pop
jmp
mov
ficoms
mov
push
imul
dec
insb
xchg
mov
fs
and
jbe
lds
cmp
insb
lods
xchg
out
mov
inc
sbb
mov
sub
aaa
jae
ficoml
fs
mov
in
aam
out
fmul
jmp
nop
adc
pop
scas
in
shll
xchg
iret
inc
fidivrs
mov
adc
insb
orb
mov
or
inc
js
out
std
iret
loopne
mov
enter
adc
sahf
test
push
jp
and
scas
je
loop
insl
lds
insb
das
stos
mov
pushf
add
loopne
cmp
and
fsts
loopne
sub
sbb
into
xchg
pop
mov
popf
into
add
xor
stos
popf
cltd
mov
mov
addb
pop
add
pusha
ss
sbb
add
ret
pop
js
loope
xchg
test
in
lods
cmpsl
and
leave
xchg
rep
insl
cmpsl
subl
stc
push
xchg
int3
mov
mov
nop
and
add
ss
sub
ret
in
xor
mov
push
stos
jp
fcoml
jge
daa
pop
jg
and
sub
add
mov
and
imul
addr16
stc
xchg
in
lret
jg
sbb
mov
push
xchg
xchg
pushf
dec
sbb
inc
lret
jmp
cmp
icebp
lods
je
or
push
pop
adc
pop
jge
xor
pushf
mov
push
sub
aam
push
mov
pop
sub
xchg
std
pusha
sbb
fisttpl
dec
adc
stc
jnp
scas
in
push
pop
outsb
das
mov
push
je
das
negb
mov
cmp
pop
bnd
addr16
popa
loop
fdivr
pop
inc
shl
jge
mov
push
pop
push
clc
arpl
pop
cli
test
adc
xor
mov
mov
pop
push
hlt
sbb
ljmp
xor
adc
sub
mov
dec
cmp
cmc
popf
mov
sbb
adc
push
cli
es
gs
es
mov
jne
cmpsl
jae
cmpsl
or
push
sti
sub
mov
bound
adc
pop
mov
gs
rep
push
push
lret
leave
movsl
roll
pop
sbbb
dec
ret
jmp
inc
push
std
out
or
xchg
dec
stc
or
test
add
sub
mov
cmp
add
adc
out
jo
bound
mov
leave
icebp
jnp
mov
or
mov
sahf
dec
xor
and
jl
or
test
cmp
in
addl
ror
xchg
in
push
dec
dec
push
pop
push
pop
dec
idivb
jns
push
and
add
jg
add
sub
jmp
mov
fbld
sub
xor
xchg
sub
xchg
lea
jecxz
or
dec
pop
cmp
dec
mov
jnp
and
adc
cmp
mov
js
jnp
inc
mov
lock
lcall
sbb
dec
nop
push
js
xchg
inc
movsb
adc
cmpsl
fdivrs
mov
loop
aam
mov
adc
repz
pop
inc
sbb
inc
rol
shl
sub
mov
bound
cmp
jle
push
pop
cli
insb
jecxz
clc
orb
push
daa
pop
dec
fcoml
std
jbe
add
push
mov
sbb
jmp
xchg
dec
xchg
or
mov
lcall
push
outsb
sub
and
or
dec
xlat
mov
pusha
cmc
ret
sub
mov
jle
movsb
lret
dec
rolb
xchg
dec
push
fstl
dec
outsb
or
enter
cld
xchg
pop
movsl
sbb
or
mov
sub
inc
aam
repz
icebp
lods
push
scas
xchg
gs
dec
jle
imul
mov
push
cmp
popa
cmp
cmpsb
adc
test
xlat
mov
cmp
fs
orl
loopne
iret
mov
pop
jo
lret
ret
fisubs
push
adc
call
loope
loope
adc
bound
mov
sub
negb
add
insb
xchg
add
cld
add
cld
jmp
in
shll
ret
xlat
icebp
push
lods
sub
xor
imul
icebp
shlb
ret
push
mov
adc
inc
mov
bound
iret
dec
mov
cmp
add
push
or
xor
or
es
and
ret
xchg
adc
jg
pusha
ss
or
and
mov
push
xor
test
clc
xchg
xchg
ss
popa
ret
rcll
inc
inc
in
lea
ss
cmc
sbb
xchg
mov
adc
pop
stos
rcl
lret
ss
bound
insl
lret
lods
sbb
xor
jae
rcrl
fcmove
pop
notl
jb
data16
mov
aad
mov
sti
xchg
jmp
inc
xchg
ret
hlt
push
mov
sbb
enter
push
aam
push
dec
nop
inc
xchg
jge
pop
arpl
push
push
mov
adc
jnp
dec
call
add
test
sahf
aam
adc
shrb
test
fstps
adc
push
sbb
jp
cwtl
push
jmp
push
repz
inc
push
mov
popf
roll
add
jmp
fucomip
popa
xlat
or
movsl
mov
fcmovnu
jo
outsl
dec
popa
sub
out
std
imul
mov
in
loop
call
cmp
pop
push
pop
mov
adc
out
xlat
or
or
rep
adc
sarl
out
or
insl
jecxz
mov
lret
fstl
mov
mov
push
mov
pop
dec
push
sbb
addl
fs
movsb
jne
mov
cmp
pop
fidivrl
jno
fld
xchg
mov
hlt
inc
mov
push
mov
sti
rcl
mov
push
testl
insb
xorl
lea
out
ret
xchg
cmp
jecxz
insl
mov
and
xchg
or
push
push
repnz
inc
mov
add
xor
cmp
mov
loop
aad
cmp
pop
fiaddl
in
pop
lret
pop
sub
sub
push
das
add
lret
setb
jge
xor
data16
adc
dec
dec
mov
jg
loop
cmp
fistpll
pop
mov
sbb
lret
pop
iret
push
test
icebp
out
pop
andb
inc
in
ljmp
sbb
iret
lcall
jns
sub
mov
addl
push
test
gs
arpl
stc
arpl
cmp
stc
dec
pop
or
mov
push
mov
mov
mov
adc
mov
arpl
cmp
movsb
lret
xchg
into
pop
ss
shll
into
rcrb
aad
cmpsl
push
aas
cltd
lcall
or
int3
push
mov
les
movsb
test
push
cmp
sti
mov
jl
ss
inc
cld
xchg
ja
adc
sarl
inc
push
mov
and
test
lock
call
adc
mov
cmpsb
and
lcall
xlat
sub
or
nop
lahf
and
movsl
data16
fistpll
test
pop
scas
pop
add
add
dec
mov
clc
push
movsl
cltd
sbbb
notl
mov
ficomps
icebp
arpl
outsl
inc
imul
jmp
stos
pop
mov
out
push
mov
bound
movsl
jno
mov
mov
and
in
nop
or
adc
and
cmp
sahf
stc
rclb
sti
sbb
test
nop
lock
roll
ficompl
lods
fadds
outsb
sti
fsubs
enter
or
lcall
mov
sti
mov
push
into
cld
push
addr16
jb
mov
fs
es
call
fmul
call
cli
fists
inc
cltd
add
aas
or
adc
fs
ret
icebp
jbe
out
jno
in
fstpl
insb
mov
cld
sub
dec
mov
addb
cld
dec
fiadds
out
sbb
adc
inc
test
mov
jo
pop
inc
mov
pop
push
or
inc
into
xor
outsl
pop
xchg
fdivl
insb
arpl
dec
negb
mov
adc
mov
cmp
jns
rolb
fsubrs
add
add
add
pop
pop
dec
push
dec
push
pop
pop
mov
xlat
nop
or
les
add
add
sbb
sbb
jecxz
dec
mov
or
mov
std
sbbb
mov
mov
stos
mov
mov
fcoms
dec
mov
mov
pop
dec
xor
enter
popa
lods
shlb
loopne
cld
add
pop
test
loope
mov
mov
jbe
fldenv
mov
jno
lahf
sub
adc
into
ja
enter
iret
ret
lahf
out
jb
cld
jbe
mov
xchg
lcall
xchg
imul
loopne
adc
arpl
fucomi
mov
jecxz
jge
mov
adc
mov
sub
pop
bound
cmpsl
arpl
into
mov
movsl
test
incb
jnp
cmp
adc
cmp
mov
negb
jns
mov
bound
sarl
push
lcall
call
sbb
rcll
mov
inc
scas
inc
mov
lret
out
int3
dec
les
mov
fists
xor
sbb
inc
add
mov
sbb
jmp
insl
test
lods
orb
or
fwait
push
xchg
lods
cmp
ret
out
repnz
je
shrl
lret
aam
out
sbb
adc
fstpt
push
cmpsl
pop
and
popa
mov
movsl
jne
sti
lock
adcl
movsl
adc
nop
sub
imul
lcall
lcall
testb
push
mov
dec
cs
jle
mov
std
push
sub
outsl
andl
fisubrs
lahf
es
cmp
cmpsl
rcll
idivb
push
pop
mov
mov
mov
add
push
mov
insl
fbld
cmc
mov
xchg
xor
dec
icebp
sbb
icebp
inc
adc
adc
int
sub
jmp
inc
lret
loope
adc
push
out
pusha
sahf
and
icebp
and
dec
add
cmp
fstps
xor
dec
xor
imul
movsl
outsl
loope
adcl
jmp
sub
pop
dec
jno
dec
lret
mov
add
mov
xor
ret
fs
clc
sbb
dec
cmp
mov
aam
and
mov
iret
inc
imul
arpl
dec
rclb
rcrl
aaa
call
call
jmp
cmpl
ljmp
lock
clc
pop
jge
cmp
and
scas
push
into
iret
mov
sub
push
std
cmp
jmp
into
lods
mov
pop
adc
mov
push
jb
cmp
and
sub
test
fs
repnz
hlt
cli
rcll
sbb
fs
aad
popf
dec
push
mov
ffreep
and
push
mov
pop
and
push
scas
push
lcall
ja
cmpsb
push
inc
arpl
sbb
and
fwait
push
lds
mov
test
cld
and
cmp
or
aam
aad
mov
jb
jae
in
mov
or
adc
jno
sub
inc
mov
cmpsb
sbb
cmp
xchg
idiv
outsb
lea
scas
jne
inc
sub
pusha
and
inc
js
cmp
test
in
dec
jp
cmc
imul
arpl
lock
mov
jg
lock
sub
in
dec
pop
lods
arpl
shr
mov
mov
lcall
addb
scas
cli
hlt
pop
notl
push
mov
pusha
orb
ja
jns
repz
adc
cmpsl
xor
decb
xor
cmp
and
ficomps
imul
mov
xchg
aaa
stos
push
fnstcw
fwait
jb
jb
insb
lds
xchg
xorl
cmp
fstps
cmp
mov
in
mov
outsl
mov
and
push
in
repz
xor
pop
push
jg
lds
mov
ljmp
sub
push
into
fisttpll
mov
in
insl
jbe
adcb
xchg
xor
out
jo
in
cmpsl
sbb
sbbl
aas
cwtl
enter
and
aaa
repnz
loop
faddl
test
rcr
imul
int
cli
push
lock
mov
ret
xchg
dec
pop
int
aaa
inc
dec
push
fdivp
iret
clc
rcll
in
dec
std
push
and
cmp
pop
pop
jno
sub
enter
bound
inc
ret
push
fsts
subb
out
stc
jo
or
push
xor
sahf
pop
fwait
and
xchg
daa
fmull
enter
mov
mov
aas
pop
add
or
sbb
inc
adcl
mov
sub
aad
add
int3
mov
scas
and
inc
arpl
idivb
mov
mov
out
test
push
jle,pt
fwait
dec
mov
dec
jno
mov
xchg
add
movb
lret
mov
dec
call
in
cwtl
sbb
mov
popa
sub
stos
pop
push
mov
iret
dec
test
inc
cmp
arpl
jbe
inc
lea
sub
xchg
icebp
cmp
dec
insb
test
icebp
nop
movsl
popa
xchg
and
jno
out
inc
cmp
mov
sub
imul
scas
mov
shlb
dec
adc
sub
fbld
cmp
das
mov
into
xchg
int
dec
xor
icebp
in
lcall
pop
or
in
leave
jl
out
jbe
fcomps
test
inc
iret
adc
mov
pop
push
hlt
and
shll
inc
xchg
mov
push
or
outsb
mov
inc
xchg
shrl
cld
push
inc
fsubs
mov
cmpsb
call
in
dec
mov
js
out
jns
fsin
inc
add
push
push
push
inc
push
test
cmp
inc
lret
add
jg
add
and
inc
sbb
adc
sbb
das
push
jae
and
addl
push
call
fisubs
push
add
push
enter
add
mov
lods
sti
adc
mov
adc
xchg
mov
cmp
or
stos
fildll
loopne
addr16
inc
scas
push
and
sete
add
mov
shll
xor
jp
adc
pop
or
std
aaa
xor
sub
js
cmc
dec
cmp
test
ja
pop
sub
jmp
dec
mov
fmulp
jne
mov
pop
sbb
repz
cmp
inc
popf
shlb
fists
in
je
add
loop
jb
lahf
fnstsw
jbe
and
pusha
mov
imul
and
xor
scas
loop
sti
ss
sbb
lret
outsl
mov
stos
add
std
dec
hlt
movsl
movsl
outsb
cli
sub
faddl
add
lcall
imul
xchg
push
mov
sbb
push
or
mov
push
sbb
insb
fbstp
gs
dec
sub
mov
or
in
jg
mov
enter
fnsave
cmpsl
pushf
cmpsb
je
gs
sub
and
inc
lret
sub
xor
test
cmpl
data16
add
jnp
pop
mov
fistps
mov
jae
fdivrl
inc
or
push
jecxz
xchg
jnp
scas
sbb
xchg
aas
jo
daa
mov
leave
or
xor
lock
shll
clc
or
outsl
xchg
loope
adcl
jge
mov
insl
je
jbe
popl
lds
xor
dec
and
out
cltd
mov
push
push
les
call
push
cmp
fwait
add
cmp
insl
pop
lods
sub
imul
xlat
pop
aam
cli
inc
cmp
xor
popa
aam
mov
jne
dec
movsb
andb
stc
xor
xor
scas
clc
sahf
sub
jnp
hlt
xchg
dec
outsb
rcrb
rcll
cmpsl
or
lahf
jge
lods
data16
out
push
or
lahf
mov
xor
xchg
loopne
or
in
cmp
dec
movsb
and
inc
jb
rclb
add
movsb
outsb
gs
dec
cmp
shrb
test
and
xchg
insl
xchg
adc
lods
sarb
jl
push
jp
sahf
divb
xlat
out
push
sub
popa
pop
in
ljmp
std
sub
lahf
orb
push
aad
subb
adc
imul
pop
cld
sub
cmpsb
cmpsl
xchg
or
pop
jge
fisttpl
mov
mov
ret
inc
jno
add
jmp
mull
dec
bound
fwait
adc
add
jp
and
cltd
pushf
int
iret
mov
mov
ja
xlat
andb
mov
imul
add
jecxz
dec
xor
repz
sub
sbb
mov
in
ret
sub
dec
cmp
push
loope
cmp
cs
mov
jb
mov
push
mov
popf
push
rcrb
test
aad
jbe
sbb
loopne
xchg
mov
aas
jl
xor
leave
out
enter
cli
lret
xorb
mov
or
adc
popf
add
fs
pusha
subb
iret
sbb
sbb
loope
test
jne
fstpt
shr
fiadds
or
push
fidivs
sub
in
xor
xlat
mov
xchg
adcl
and
and
pop
pop
mov
mov
cmovg
pop
andl
or
rcrb
test
dec
push
push
aas
cmpsb
mov
into
xchg
lods
mov
js
xor
mov
inc
xchg
int3
arpl
sbb
mov
je
and
xchg
outsb
loope
cmp
mov
xorb
js
sub
rorb
nop
jo
mov
push
mov
popf
insl
xchg
xor
add
hlt
andb
out
add
push
inc
es
jns
adc
jne
and
mov
aad
and
xor
inc
cmp
mov
or
popa
js
mov
jle
pop
jne
and
out
das
sub
jns
push
adc
ret
adcb
lea
jmp
aam
ljmp
cmc
lret
pushf
imul
sub
mov
dec
imul
fidivrl
fldenv
into
adcl
jecxz
aam
outsb
mov
dec
jmp
lods
fiaddl
mov
push
adc
mov
inc
stc
subb
mov
aas
xchg
mov
jb
push
and
call
mov
loop
ficoml
ds
push
mov
sub
jne
inc
pop
inc
cmp
xchg
stc
insb
movsb
dec
sub
cmpsb
xchg
rorb
mov
cmp
pop
je
or
das
js
cmp
into
mov
mov
stc
loope
or
dec
sub
sbb
out
sbb
mov
jns
icebp
call
fdivr
popw
adc
sub
lret
in
das
sub
jmp
push
push
mov
arpl
mov
sbb
xor
push
xor
cwtl
outsl
jno
pop
push
cmp
mov
mov
nop
xlat
pop
call
jl
mov
in
std
dec
push
rclb
or
out
sbb
xor
sbb
fmuls
aam
arpl
sbb
sbbb
add
sbb
scas
clc
sti
rorl
pop
adc
insl
scas
mov
add
cli
outsl
dec
in
mov
movsl
jb
adc
les
xchg
push
cmp
xor
add
add
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
cmp
ret
roll
add
add
adc
out
ja
mov
ds
rcl
dec
iret
cld
outsb
fstps
pop
scas
fidivrl
xchg
cmpsb
fprem
movsl
add
inc
xchg
xor
iret
jno
xchg
mov
dec
push
out
xor
pop
pushf
pop
sbb
xor
das
shll
jns
dec
leave
std
jno
or
sbb
and
sub
push
sti
adc
loopne
xor
flds
or
enter
xchg
inc
inc
aas
int
pop
push
pop
xor
jmp
or
xchg
insl
mov
ret
adc
fcmovb
jne
popf
in
repnz
xchg
adc
mov
mov
mov
pop
mov
cmpsb
mov
movsl
addr16
and
inc
dec
mov
adc
mov
andl
repnz
push
imul
pop
out
mov
movsb
jg
fcompl
aaa
cmc
cmp
mov
mov
sub
fsts
mov
and
lock
mov
inc
aas
pop
sub
sahf
in
cmc
sub
enter
scas
inc
add
xchg
adc
xchg
xor
adc
in
jo
test
jnp
jecxz
aaa
pop
adc
lock
inc
push
in
adc
cmp
ret
outsl
cmc
hlt
jp
shl
rorl
jl
scas
sbb
and
pop
pushf
and
cld
pop
out
js
div
xor
inc
adc
or
insb
mov
push
pop
sar
aaa
in
sbb
add
push
inc
lods
or
inc
push
loop
cs
in
sahf
lds
mov
int
decl
jno
inc
int3
mov
mov
xor
out
and
mov
loop
jl
sbb
xorl
mov
pop
mov
movsl
xor
adc
ret
mov
push
rcr
mov
xlat
mov
pop
aas
xor
dec
mov
jecxz
scas
aad
jnp
dec
mov
nop
sbb
mov
lcall
jne
or
ret
ret
test
add
fiaddl
xchg
fstl
jo
insb
ret
jnp
sub
pushl
xor
inc
dec
fwait
mov
inc
shll
mov
mov
int
ficompl
sbb
lods
push
sub
xchg
cmc
dec
and
adc
jbe
and
fwait
loop
pop
ficoms
cmpsl
dec
jb
lock
or
clc
push
push
out
adc
cmc
repz
xor
js
or
aaa
jl
out
and
sub
loopne
shlb
aas
mov
jno
out
adc
out
or
push
sbbl
xchg
mov
out
adc
in
outsl
xchg
fistpl
sub
adc
jge
or
pop
mov
mov
lahf
push
nop
or
and
inc
push
scas
outsb
scas
sbb
xchg
cwtl
jecxz
or
xor
add
das
sbb
test
scas
scas
mov
xor
popf
in
dec
push
fimull
adc
into
test
fstl
repz
jnp
jnp
shl
repz
imulb
loopne
jne
xlat
sub
cs
lods
mov
or
das
pop
mov
xchg
shrb
ljmp
retw
cmp
mov
stc
aad
mov
xchg
fisttps
pushl
es
sti
pop
xor
inc
and
stc
mov
add
sbb
jmp
add
repnz
and
shlb
sti
inc
jae
mov
sub
iret
cmpsl
cmc
aam
xorb
xor
xor
bound
mov
jnp
inc
pop
mov
jl
insl
cmpsl
mov
testl
lods
dec
enter
pop
xor
or
lea
sub
xor
mov
ljmp
inc
insb
xor
clc
lods
dec
mov
mov
jae
in
je
jae
fwait
stc
or
adc
and
push
daa
mov
sbb
scas
in
mov
xchg
cmp
aam
mov
fcoml
repnz
mov
lret
sbb
push
sahf
sahf
jl
sub
ss
adc
push
sub
add
inc
inc
pop
rorl
cli
fadds
int
push
xchg
loope
in
out
jbe
cmpl
mov
imul
out
and
fmul
xor
loop
inc
inc
push
xchg
divl
or
cmp
push
lret
sbb
inc
jae
and
fiadds
push
pop
outsl
pop
cmp
push
mov
mov
push
stos
xor
add
das
mov
push
or
popf
int3
mov
push
pusha
mov
daa
inc
bound
adc
in
and
inc
inc
das
xchg
out
xchg
mov
movsb
adc
jnp
add
sbb
mov
es
out
pop
cli
ret
out
pop
pop
pop
sub
xor
jg
push
cmp
mov
call
mull
add
cmpsl
pop
roll
repz
mov
dec
clc
pop
aaa
lahf
aad
imul
xor
int
xor
cmp
ss
mov
sub
aas
push
addb
cmpsl
clc
fists
cmp
and
imul
mov
je
aam
outsb
mov
mov
bound
jecxz
xchg
test
loope
sti
add
mov
notl
call
pop
xchg
out
rorb
mov
add
sub
push
das
mov
stc
fisttpll
testb
pop
or
loop
int3
push
lods
pusha
dec
ret
cmp
into
inc
call
test
das
cmp
sbb
mov
scas
stc
lods
fstp
add
pop
clc
fsubl
mov
jno
inc
cmp
jl
cltd
xchg
out
push
or
mov
adc
sbb
clc
jp
clc
inc
fsubs
ret
cld
push
fadds
push
inc
push
push
push
push
push
inc
rorl
popf
mov
fadds
add
add
int3
or
mov
xchg
pop
fdiv
movsb
scas
mov
out
into
jno
sarl
sub
xchg
jae
jb
out
stos
lcall
ljmp
adc
mov
addb
sar
faddl
xor
push
mov
sub
shrb
push
scas
ljmp
pop
mov
sar
inc
idiv
lret
or
or
nop
dec
imul
sti
xchg
adc
mov
aas
and
sub
int3
push
mov
cmp
inc
lcall
jns
movsb
add
inc
lea
xor
cmp
sub
insl
adc
popf
adc
push
movsl
test
sbb
mov
push
aas
mov
xchg
push
push
cmpsl
dec
ret
sub
pop
jnp
in
fistl
mov
push
or
mov
rcll
pop
xchg
inc
rcll
xchg
pop
repz
insb
push
xchg
sbb
pop
int3
aam
popa
and
sub
sbb
mov
push
inc
push
adc
lock
loop
fwait
scas
movb
pop
and
jb
out
xchg
enter
loopne
cmp
loope
lret
xchg
aas
mov
push
int
add
clc
sub
inc
xor
aaa
dec
rol
and
jno
push
xor
push
adc
push
xor
xor
jne
xchg
dec
jle
mov
loop
cmpb
xchg
or
cmp
sbb
sbb
xchg
sbbl
mov
cmp
test
inc
add
or
push
jecxz
push
sub
add
push
lods
xchg
ds
sbb
push
mov
andl
pop
lret
cmp
lea
jl
push
xchg
fidivrs
mov
adc
gs
mov
inc
cmp
inc
add
fstpl
sub
jecxz
shll
ljmp
bound
lods
cmp
es
les
sbb
loope
push
rcll
mov
mov
and
aas
sbb
adc
sbb
push
js
sahf
das
int
fisttps
movsb
ret
or
ljmp
scas
jo
lods
sbb
insb
icebp
pop
fwait
adc
movsl
mov
loop
cmpsb
decl
and
xor
lds
cmp
mov
rclb
lahf
adc
mov
jno
mov
xchg
les
es
and
xchg
out
lahf
pusha
addr16
mov
sahf
je
push
sub
cmp
ret
aam
arpl
fsubs
stos
pop
in
or
movsl
xchg
xchg
cltd
out
idivb
sub
mov
imul
mov
xorb
pop
and
cld
or
lcall
jb
mov
jl
testl
or
test
nop
fldl
lea
inc
sbb
pop
std
int
stos
jo
outsb
iret
je
dec
sbb
push
fldl
jae
xchg
sar
movsl
and
add
stc
or
mov
pop
xchg
or
imul
or
loope
mov
or
in
pusha
shl
sbb
pop
dec
fstpl
inc
jno
movsl
dec
cld
movsl
jb
adc
push
sahf
cli
dec
add
js
bound
dec
fwait
mov
call
push
dec
push
pop
dec
nop
xor
insl
out
test
jbe
into
push
pop
xor
iret
add
mov
fwait
inc
mov
inc
pop
iret
mov
std
ja
bound
out
aaa
cmpsl
movsb
test
sbb
in
sub
ds
cltd
inc
xlat
out
mov
or
and
push
xchg
push
jge
daa
stc
fwait
push
sbb
or
stos
aad
sub
mov
sub
cltd
clc
add
rol
imul
jge
cltd
fistpl
xchg
pop
jns
push
jae
mov
jecxz
lret
pop
sub
push
push
mov
fs
add
xchg
in
jg
movsb
stos
sbb
dec
dec
mov
add
pop
hlt
lret
or
xlat
inc
gs
push
xchg
pop
loop
cmp
mov
jle
xorl
lret
js
jno
cli
or
testb
loop
inc
sti
fcmovne
push
cmpsl
lcall
movsw
sub
div
dec
xchg
jae
fwait
xchg
lcall
mov
mov
sub
loopne
pop
mov
insl
fiadds
sahf
ret
int3
mov
push
ss
aaa
lret
jo
data16
nop
adc
js
cli
inc
mov
stos
imul
xor
xchg
ret
cmp
push
daa
xor
insb
std
push
mov
push
test
insb
popa
roll
ss
mov
sti
pop
mov
mov
adc
cli
xor
jb
sub
imull
dec
jmp
movsb
or
jb
jge
fdivs
mov
sub
cmpsl
loopne
fsts
cmc
sbb
lcall
mov
out
cmp
iret
pop
jb
fidivrs
add
dec
int
jno
pop
dec
aaa
andb
mov
push
mov
fimull
pushf
out
stos
gs
pop
or
xchg
xchg
sbb
popf
leave
mov
sub
ja
imul
pop
xor
sar
je
cli
cmovns
adc
or
mov
add
mov
mov
cwtl
popa
inc
inc
add
sbb
add
xchg
iret
mov
xlat
in
shl
sbb
fiadds
sbb
dec
shrl
in
inc
add
jns
mov
scas
sahf
push
cwtl
mov
mov
pop
or
cmp
inc
mov
fldcw
pop
dec
pop
cmp
stos
sub
jle
jmp
stos
into
repnz
in
rcrb
aas
stos
fdivrl
outsb
pop
and
push
sahf
icebp
lock
insb
dec
add
hlt
xor
adcb
sbb
int
das
cwtl
fists
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
aas
rcr
add
add
add
sub
loopne
mov
jmp
or
sub
test
push
adc
test
insl
push
mov
jle
in
iret
lods
or
fucom
sub
test
adc
lea
in
add
jne
loopne
arpl
rcll
xchg
inc
jnp
add
repnz
mov
mov
cmpsb
cmp
imul
add
jge
dec
mov
and
mov
pop
mov
lea
clc
push
inc
xchg
mov
mov
dec
push
xor
jp
add
add
sbb
mov
scas
mov
sbb
bound
sahf
jmp
xor
sbb
das
icebp
push
xor
or
ljmp
popa
cmp
insb
sub
in
js
lock
movsb
out
jmp
or
lahf
cmp
shrl
cmpsl
pop
popa
fists
cmp
gs
imul
jbe
insl
cmp
subb
sqrtps
das
orl
leave
dec
inc
push
rcrb
test
loop
mov
jg
xchg
mov
in
pop
orb
in
mov
xor
xor
cwtl
sub
mov
pop
sub
add
adcb
jne
ja
adc
and
dec
pop
or
dec
nop
imul
push
std
cmc
jo
ret
cmp
lcall
das
loop
fxtract
in
mov
dec
mov
je
or
das
add
aam
mov
or
sbb
mov
mov
push
adc
outsb
popa
adc
cli
add
je
xchg
insb
daa
pop
cld
cld
cwtl
nop
pop
mov
mov
out
pop
cmpsb
or
jg
xchg
and
jmp
xor
dec
or
or
adc
dec
fdivr
inc
aas
inc
sub
pop
push
cs
push
sub
pop
call
cmpsb
dec
sbb
and
loopne
inc
xor
add
add
loopne
stos
out
xchg
xchg
sub
pop
push
adc
inc
mov
jo
arpl
adc
jle
insb
xchg
test
fisttpll
cmp
xchg
pusha
test
pop
testl
xchg
pop
pop
fmul
fprem
sbb
dec
jg
mov
frstor
jne
jne
cmp
add
and
sti
outsl
and
mov
out
fcomip
xorb
mov
js
ret
fisttpll
popa
sbb
pusha
dec
lcall
sbb
je
mov
es
outsl
sub
and
jmp
push
dec
sti
test
shlb
mov
aas
in
sahf
aam
scas
fdivrs
lcall
jl
imul
data16
shll
inc
idivl
inc
xor
mov
jb
jp
xor
shlb
bound
adc
jb
push
add
test
and
jne
sub
xchg
fwait
jae
add
aad
pop
sahf
xlat
repz
test
cmc
dec
add
stos
sub
sub
mov
jnp
loope
cld
sub
mov
push
ja
shll
xchg
stos
ljmp
and
sub
fldz
ss
add
inc
in
sbb
dec
mov
loopne
jb
gs
push
bound
ss
mov
outsb
scas
cltd
cwtl
movsl
fsubl
loop
pop
inc
xchg
stc
call
dec
xchg
and
mov
push
mov
jp
inc
les
jns
xchg
add
adc
inc
scas
in
inc
mov
shll
mov
rorl
or
aam
stc
push
mov
ljmp
xchg
popf
mov
jne
pop
ror
mov
nop
xor
ljmp
arpl
pop
cmpsb
mov
cmp
outsb
clc
sub
fs
sub
sar
loop
push
aas
cmp
es
loopne
repz
mov
scas
hlt
repnz
imul
mov
mov
out
cmp
mov
pop
fiadds
mov
dec
cmp
mov
test
ret
fidivl
jbe
push
stos
jns
fs
xlat
lcall
and
sub
sub
mov
ret
xor
cld
ss
add
addb
jns
popf
loopne
sub
jb
hlt
mov
lock
or
and
mov
imul
jno
push
roll
xchg
je
sub
aas
imul
js
aas
mov
lret
aas
pop
or
stc
sbb
clc
mov
pop
push
in
mov
xchg
aas
push
out
stc
rorl
push
sub
dec
pop
daa
loope
xor
movsb
scas
fildl
testb
sbb
or
test
mov
adc
inc
mov
dec
mov
xchg
jmp
lcall
sbb
jae
mov
jo
sti
push
in
sbb
lods
mov
adc
scas
lahf
cld
add
rcl
loop
shll
push
int
out
in
scas
hlt
inc
jnp
lahf
or
adcl
leave
das
sub
lods
sub
dec
cmc
and
xor
push
call
dec
jge
xor
mov
jle
adc
push
loope
cmpsb
lret
add
inc
sbb
dec
xchg
mov
mov
sar
in
testb
pusha
clc
inc
ficompl
aad
imull
sbb
int
cmp
out
mov
pop
xor
ss
push
mov
push
jne
pushf
push
sbb
bound
or
jecxz
aam
lahf
cli
push
mov
adc
add
inc
mov
xor
adc
cli
mov
adc
pop
cmp
cmp
xchg
add
push
nop
arpl
jb
cmp
dec
pop
add
out
cmpsb
add
push
push
pop
push
dec
pop
idiv
slwpcb
push
inc
in
add
add
in
xor
and
inc
lods
pop
dec
mov
add
jne
inc
adc
insl
xor
dec
fistpll
cltd
add
cmpl
cmp
imul
ds
fadds
or
xor
push
rorl
std
int
add
lods
dec
sub
and
cmp
mov
bound
push
sbb
aad
mov
gs
jnp
mov
std
int
add
jne
jge
cli
push
adc
sub
mov
xchg
pop
jnp
adcb
scas
add
jge
fisttps
mov
repz
sti
ret
pop
push
stc
cmpsb
dec
test
cmp
jmp
adc
hlt
pop
sbb
lret
cmp
in
ss
cmpsb
in
mov
adc
mov
sti
pop
leave
jmp
fdivrl
sub
dec
mov
pop
stos
sbb
das
fs
movsl
mov
in
rcrb
outsl
aas
push
mov
imull
pop
inc
mov
dec
pop
in
mov
push
subb
cmpsl
loopne
and
inc
xchg
gs
and
shl
mov
mov
ds
je
fnstsw
pop
daa
std
lahf
mov
dec
lret
fdivrs
sti
inc
dec
push
repz
outsl
cmp
or
xchg
lods
mov
or
dec
iret
arpl
aas
popf
in
xchg
lea
sub
test
sub
mov
sbb
sahf
cld
cwtl
jno
int3
xor
push
repnz
faddp
shlb
pop
adc
leave
icebp
fnsave
in
add
out
sti
xor
sub
pop
aam
inc
lock
mov
or
cmc
adc
out
pop
push
lret
hlt
bound
mov
jns
nop
fldl
cltd
xchg
mov
cmp
push
dec
dec
or
jl
jp
insl
les
adc
fnsave
cmc
enter
decb
aad
cmp
inc
fnstcw
xchg
aad
push
pop
xor
or
stos
test
dec
cmp
lods
xchg
sbb
mov
loope
pushf
cmp
js
pop
cmpsl
push
mov
cmpsb
xchg
dec
push
xchg
sub
pop
or
mov
rorb
jle
mov
xor
pop
les
xlat
jno
mov
cltd
lret
pop
add
fistl
xor
adc
or
jmp
fidivl
js
dec
mov
lds
shl
add
pop
arpl
jo
in
push
pushf
dec
jo
push
cmpsl
mov
push
mov
lods
js
mov
mov
outsl
sbb
push
cmp
call
aaa
cmp
fistps
inc
stc
scas
xor
and
or
adc
pop
ret
jne
cmp
pop
imul
test
pop
out
dec
push
pop
out
lods
mov
add
repz
daa
notb
adc
sub
lret
sti
sahf
push
shr
nop
inc
aad
xchg
push
movsl
inc
or
jmp
add
das
jge
sub
enter
dec
cmc
sbb
out
push
jnp
pop
cmp
and
push
gs
enter
aad
xchg
fwait
sub
outsb
dec
scas
addr16
jns
cltd
subl
sub
pop
lock
ljmp
mov
ljmp
add
aaa
cmc
lcall
cli
out
push
jae
bound
push
xor
pop
sbb
in
subl
nop
xchg
dec
sub
int3
repz
out
dec
test
mov
mov
pushf
xor
enter
icebp
cmp
cmp
dec
pop
mov
pop
mov
fwait
out
pop
call
add
mov
or
mov
push
fldl
and
xchg
in
xor
adc
lock
jge
les
clc
and
sub
hlt
das
loopne
insb
mov
dec
pmullw
mov
xor
aad
and
push
bnd
push
ds
inc
fsubr
xor
out
imul
stos
cmpsb
sbb
push
sub
testb
adc
loope
jl
call
xchg
push
xchg
mov
lret
aaa
jge
sbb
mov
xchg
xchg
and
stc
stos
loopne
cmpsl
xchg
pushf
popa
in
fs
stc
push
cmp
iret
add
repnz
dec
inc
and
hlt
lcall
insl
fsubs
lret
push
sbb
cmp
and
cmpsb
iret
aaa
out
icebp
pop
mov
inc
insl
xchg
popa
mov
cltd
clc
xchg
mov
es
ret
ret
loope
inc
push
lods
push
mov
xchg
das
push
xchg
enter
les
lds
scas
int3
sbb
out
sbb
popf
in
scas
or
or
pusha
incl
into
jl
or
sub
cmp
mov
push
cmp
push
push
or
pushl
xchg
or
mov
inc
dec
adc
out
mov
lods
mov
gs
xchg
jnp
clc
fdivrl
insl
ja
std
xor
mov
lret
jbe
inc
call
clc
sub
pop
ja
iret
aas
dec
jge
push
bound
in
sahf
push
aam
adc
add
daa
aas
sbbl
aas
jnp
sahf
data16
inc
cmp
stos
mov
test
jl
or
pusha
cmp
mov
addr16
fsts
in
xchg
jno
xor
pand
enter
ds
aam
and
add
xor
daa
clc
pop
cltd
movsl
mov
cld
push
xchg
iret
inc
cmp
pop
dec
pop
cmp
int3
bnd
test
jg
fcompl
lcall
mov
sbb
mov
add
inc
pop
inc
pop
pop
pop
mov
push
mov
adc
add
jg
add
lock
scas
mulb
fisubs
jg
adc
pop
cmp
jl
jge
notl
orl
scas
ds
into
dec
loop
mov
imul
jge
lret
gs
mov
push
mov
push
cltd
xor
pop
repz
adc
js
mov
mov
es
jns
and
dec
imul
dec
push
dec
adcb
data16
mov
lret
inc
mov
mov
jae
dec
sub
clc
daa
fdivr
jne
push
fbld
sbb
imul
imul
popf
jo
push
mov
xchg
sbb
sub
and
pop
jg
sub
mov
push
push
inc
ljmp
out
jl
cmp
mov
mov
movsl
out
outsl
loopne
jnp
sbb
jno
arpl
call
mov
jne
inc
testl
in
push
mov
pop
mov
adc
push
and
test
fidivs
aas
or
adc
mov
cmpb
gs
mov
in
jl
dec
pusha
xorl
xor
das
inc
xchg
sbbb
std
repz
lds
push
into
movsl
xchg
in
and
sti
ss
sub
push
dec
jae
arpl
in
clc
jp
sub
lock
cmp
sbb
and
cld
mov
sub
add
mov
xor
adc
jo
dec
pop
cltd
rcll
inc
push
mov
xchg
mov
inc
cmp
mov
std
ss
xor
loop
mov
xor
hlt
outsb
adc
gs
mov
jno
and
xor
mov
std
leave
stc
cmp
add
add
notb
dec
add
sub
in
pop
sbb
push
xor
bound
add
fcompl
fstpl
adc
aam
cli
test
sbb
xor
lcall
loop
add
mov
mov
out
cmc
xchg
inc
js
fs
dec
sbb
push
dec
es
xor
or
dec
imull
in
adc
lods
xor
jns
pop
insl
push
xorl
cmp
xor
adc
dec
mov
cmp
shrl
or
push
test
push
fwait
ss
popa
mov
scas
pushf
aas
sahf
adc
hlt
jb
jbe
mov
push
mov
loopne
add
push
out
jecxz
and
sub
movsb
and
xchg
or
cld
push
out
jb
fisubrs
mov
dec
jno
mov
mov
add
pusha
in
and
cmp
cld
jl
sub
mov
jge
pop
js
movb
add
cmp
bound
push
rcrb
popf
fdivr
sbb
xor
pop
rol
nop
push
orb
movsl
add
sbb
hlt
sti
rcrl
mov
cmp
test
cmpsb
call
push
stos
lds
adc
out
xor
out
inc
mov
ljmp
dec
mov
icebp
sbb
jecxz
ss
fistpl
sub
lods
inc
mov
cmp
push
mov
lea
inc
scas
inc
pop
sbb
mov
xor
lds
sbb
or
mov
mov
loop
xchg
shll
or
rclb
jge
in
sahf
jbe
ret
mov
and
cmc
rcl
ret
icebp
inc
sbb
data16
movsb
cmc
cmp
push
or
push
adc
jo
cmp
sbb
inc
stos
icebp
inc
add
stc
inc
fsubrl
mov
jge
cmc
mov
scas
inc
jo
es
lock
scas
aam
mov
mov
lret
inc
inc
cmovge
ss
std
mov
icebp
mov
sbb
mov
mov
scas
imul
xor
inc
xor
js
adc
iret
cmp
ss
es
out
sbb
lret
icebp
push
pop
push
push
push
es
sbb
push
xor
mov
push
pop
loop
adc
mov
dec
arpl
scas
int
xor
test
cmp
into
and
movsl
mov
dec
cmp
sub
ja
sahf
sbb
push
xchg
lcall
mov
fcomps
scas
inc
inc
mov
sub
mov
int3
xchg
out
out
out
ret
push
sbb
sub
cli
iret
jnp
pop
sbb
or
outsl
outsb
pusha
jnp
xchg
and
scas
sbb
in
pop
insb
dec
push
push
test
imul
adc
je
jns
cmp
adc
jbe
sbb
out
out
mov
aas
inc
mov
mov
dec
dec
movsl
push
or
cmpsb
incl
je
jge
xchg
call
jmp
imul
mov
adc
cmp
lret
xchg
push
cmp
leave
xchg
insb
pop
cmp
lcall
push
xor
les
fcomps
fdivrl
in
or
and
sbb
inc
adc
and
cli
adc
cld
dec
lahf
mov
dec
mov
inc
adc
mov
sub
cmp
es
xchg
fidivl
and
adc
jb
pop
jne
and
mov
std
adc
add
mov
jnp
mov
xor
pop
xchg
jmp
adc
mov
cwtl
adc
add
or
xchg
jge
sub
andb
jg
outsl
shrl
mov
inc
aas
mov
cli
movsb
jb
jae
lock
jmp
mov
out
or
jbe
dec
xchg
sbbb
test
stos
lds
push
shl
flds
pop
gs
daa
xor
push
mov
sbb
dec
push
inc
push
pop
push
pop
pop
ss
imulb
jno
test
repnz
jg
add
and
int
jns
stc
adc
pop
addl
push
movsb
aas
mov
clc
jae
jle
xchg
add
xor
xchg
cmp
xor
shrl
lea
call
xchg
add
push
mov
jg
xlat
imul
or
mov
in
mov
fstpl
fwait
push
and
and
test
add
mov
mov
sbb
movsb
xchg
divb
or
sbb
mov
sbb
add
and
divl
pop
inc
int
shr
sbb
xchg
mov
popf
mov
sahf
add
fildl
arpl
fisubl
decb
mov
or
test
lahf
aad
lret
mov
insl
lret
cmovae
mov
out
je
lods
jp
sbb
or
xchg
pause
scas
jmp
ficoms
inc
jmp
and
int
cmpsb
push
lret
mov
mov
push
into
rcr
xor
adcb
and
and
sub
and
cwtl
mov
pop
in
ucomiss
xor
pop
or
loope
lods
cmc
mov
std
cld
xchg
mov
insb
test
dec
ret
xchg
jg
xor
mov
dec
mov
xor
call
adc
xor
decb
mov
das
mov
sub
std
xlat
or
jmp
inc
fcmove
clc
mov
test
jge
fwait
adc
mov
pop
xor
rclb
xor
and
push
push
inc
sub
push
mov
lods
leave
dec
out
rorl
xor
xlat
lret
pop
sub
insb
test
ja
movups
or
into
mov
pop
inc
aaa
and
mov
inc
js
push
adc
push
adc
pop
cmp
scas
mov
mov
mov
enter
mov
outsl
mov
repz
or
xchg
fidivrl
ficompl
stos
js
adc
or
push
leave
repz
or
sbb
rcll
mov
push
inc
xchg
mov
imul
data16
in
xor
mov
rcrb
in
jb
lds
lea
jp
addb
push
jl
lea
les
sbb
add
or
inc
incb
mov
inc
ja
test
ret
inc
mov
jmp
int3
stc
mov
scas
push
mov
test
rcrl
add
fucom
mov
and
arpl
pop
push
sub
iret
daa
xor
sbb
pushf
or
push
jbe
test
cwtl
lock
add
bnd
fmul
stc
or
shll
xchg
leave
ret
fidivrs
dec
jbe
cmp
jmp
orb
add
jecxz
xor
cmp
ljmp
lods
or
sub
mov
pop
push
adc
cs
je
sub
jnp
ljmp
xor
pop
aad
hlt
andl
repnz
pop
jb
push
loopne
xor
mov
or
cmp
mov
adc
in
lcall
or
jp
sub
arpl
lea
orl
in
and
ljmp
sbb
loopne
cmc
shll
mov
ret
cld
dec
cli
jnp
push
or
adc
dec
dec
mov
push
push
mov
xchg
adc
rolb
xor
xchg
test
push
xchg
pop
dec
jns
lret
xchg
lds
dec
ret
xchg
movsl
xchg
int
jle
xor
push
rcll
inc
dec
and
adc
nopl
mov
dec
outsb
xchg
mov
pop
decb
or
test
cvttps2pi
and
lret
repz
lret
xlat
fdivl
adc
push
les
dec
fwait
mov
mov
negl
mov
lods
sub
push
cmp
push
jl
inc
ret
ficompl
in
imul
xchg
idivb
sbb
outsb
push
add
inc
sbb
push
call
jno
lods
aad
pusha
lods
cmc
call
cmp
inc
lcall
lods
repnz
push
jl
adc
sahf
xchg
sti
sub
adcb
sbb
loop
test
add
mov
repnz
xor
mov
stc
inc
adc
into
ss
add
and
lock
sti
mov
mov
mov
dec
xor
stos
xor
jmp
loop
icebp
mov
test
lret
fists
mov
push
stos
test
mov
mov
jnp
in
pushf
jns
incl
xlat
inc
inc
les
push
mov
cmp
and
mov
std
testb
sbb
stos
mov
iret
inc
and
xor
popa
ret
loop
dec
mov
inc
fbld
inc
insb
xor
jbe
movsl
scas
inc
cmp
loope
fidivs
dec
test
scas
adc
adc
xor
sub
fistps
enter
cwtl
mov
mov
and
fdiv
add
stos
insl
cmpsl
sbb
jle
cltd
xchg
pop
sbb
iret
xor
push
jg
cltd
sbb
push
or
add
pop
pop
dec
or
mov
std
push
push
jno
add
adc
cmp
push
repnz
push
dec
push
cmp
subb
lods
popa
xchg
ja
sbbb
ds
data16
sub
lret
push
sbb
sub
mov
mov
cmpsl
xor
in
and
add
dec
inc
pop
pop
dec
push
dec
push
enter
mov
mov
push
add
mov
out
pop
es
int3
mov
pop
insl
adc
rcll
pop
leave
cmp
and
cs
cmp
insb
ret
cmc
pushf
jns
add
negb
sub
dec
cmp
rolb
or
push
push
xor
cmp
sti
pop
mov
scas
push
outsb
xchg
cmp
pop
cmp
pusha
aaa
out
inc
mov
jne
mov
test
stos
ds
repz
add
popa
sbb
pop
add
mov
ret
xchg
lock
outsl
clc
cmpl
mov
andl
shll
outsb
shrb
fwait
or
sbb
sbb
xchg
and
out
push
and
push
rolb
emms
scas
push
popa
push
push
arpl
pop
add
jle
pop
repz
and
cs
imul
mov
cwtl
movsl
jb
shr
adc
iret
sbb
push
push
adc
mov
cltd
out
pop
sub
push
cmpsl
rorb
or
push
ds
xchg
fmuls
imul
adc
push
jo
jo
xor
pop
mov
push
cs
xchg
pushf
jl
lret
jno
pop
xor
and
dec
addr16
jl
sbb
divl
sbb
xchg
mov
lret
pushf
xor
cmp
insb
dec
adc
inc
shrb
clc
inc
inc
pop
fwait
pop
outsb
mov
jb
mov
test
mov
push
imul
es
jne
mov
and
rorb
mov
cmpsb
jbe
pop
inc
daa
push
mov
scas
addr16
cmp
mov
cs
aam
push
fdivs
decl
mov
lods
test
sub
xchg
std
pop
mov
test
mov
mov
lods
mov
xchg
add
push
sub
xchg
cmpsb
pusha
mov
or
xchg
lods
aad
out
cwtl
in
fidivs
in
inc
loop
sub
mov
mov
mov
js
pop
jno
cmp
sub
test
not
jmp
jle
adc
clc
psubsb
std
mov
push
sarl
movsb
push
mov
arpl
xchg
xchg
mov
insl
sahf
iret
adc
jnp
cmpsb
loopne
cmpsb
mov
mov
idivb
popf
push
in
loop
mov
daa
xlat
btcl
sbbb
dec
dec
sbb
cmp
push
and
adc
jge
inc
xchg
mov
sbb
fdiv
mov
sub
mov
sahf
add
mov
fnstsw
adc
out
into
paddusw
stos
pop
lock
ljmp
xchg
stc
push
data16
push
sub
fldcw
call
movsl
inc
dec
inc
dec
fstpt
dec
jns
mov
xchg
pushf
pop
sub
push
incl
fisttpll
pop
xor
pop
dec
cwtl
in
clc
scas
sbb
mov
cmp
mov
lods
xor
mov
arpl
aas
sbb
lds
out
dec
sub
add
push
stos
push
or
inc
cmc
repnz
stos
add
icebp
push
mov
lock
jle
jg
pusha
lret
fisubs
sbb
and
adc
adc
adc
mov
lcall
dec
test
aas
mov
sub
bt
lahf
pop
xchg
fisubrl
sahf
cmp
xchg
mov
dec
and
mov
mov
iret
inc
cltd
stos
xchg
sbb
sbb
aam
push
sub
inc
xlat
outsl
sbb
movsl
fisubs
lock
lcall
flds
mov
pop
into
mov
jno
inc
ret
mov
adc
push
shrl
popf
cld
lahf
shrb
ret
cwtl
outsb
lods
dec
sub
dec
jl
movsl
fimull
test
or
lahf
inc
push
adc
jle
jnp
xor
mov
and
add
xor
cld
jbe
lcall
sbb
jae
shlb
dec
in
aaa
xchg
pop
or
rcrl
ljmp
pusha
fcomi
jge
xchg
jo
stos
jne
and
js
mov
cwtl
subl
mov
adc
ljmp
fsub
inc
test
jbe
jp
mov
insl
pop
mov
sbbl
popa
pop
jl
sub
mov
cli
inc
arpl
sahf
mov
push
aad
and
fsubr
lret
xchg
pop
jne
sub
out
add
cmp
popa
xchg
mov
repz
decl
adc
imul
mov
push
add
imul
and
test
xchg
jge
repz
jns
out
dec
das
and
or
xchg
aad
es
mov
sub
int
rclb
mov
push
jg
ret
daa
lahf
cmpb
pop
and
les
sahf
rorb
adcb
adc
sub
sub
stos
or
xor
adc
repz
fstpt
je
ss
push
shlb
sub
cmp
adc
dec
outsb
imul
jmp
testl
xchg
push
inc
cmp
mov
push
adc
mov
sbb
out
fcomps
lret
xchg
test
out
jg
repnz
stos
sub
and
fcoml
loopne
ss
addb
stc
aaa
scas
dec
mov
mov
xchg
cltd
cltd
mov
cmpb
add
add
bound
cmp
movsl
aad
inc
adc
inc
lret
and
dec
or
xor
and
aam
add
push
scas
pop
jnp
adc
xor
mov
jns
or
mov
bnd
loope
ja
lahf
popa
jae
and
dec
fistpl
mov
retw
mov
push
in
imul
sbb
cwtl
and
lock
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
lods
cli
mov
aad
in
mov
xchg
jmp
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
