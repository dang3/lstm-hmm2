push
mov
sub
mov
jmp
incl
shlb
fs
ja
jle
jle
jg
jle
xlat
cmp
rol
pop
add
push
nop
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
test
imul
add
push
pop
daa
dec
xor
add
ljmp
sub
loop
jmp
push
push
and
push
iret
aas
out
xchg
mov
sarb
movsb
scas
test
loopne
cld
cli
pusha
in
daa
leave
xor
inc
jno
or
into
xor
jns
negl
mov
and
imul
pop
lret
xchg
mov
scas
in
add
xor
adc
addb
pop
cmp
sub
dec
jae
pop
aas
cld
xor
add
push
adc
inc
mov
adc
mov
inc
add
outsb
cmc
je
inc
inc
aas
jg
jp
add
push
imul
pop
inc
push
push
cli
stc
or
aam
jl
sub
les
inc
popa
ss
jb
sbb
jmp
add
cmpsb
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
pop
and
xchg
xor
subb
fs
push
pop
sub
loopne
pushf
inc
fwait
stc
mov
sbb
nop
in
xchg
fwait
dec
mov
insl
inc
jb
arpl
sub
test
pusha
mov
test
arpl
jb
and
out
fcoml
mov
jecxz
incl
movsl
lcall
jne
xlat
lahf
mov
xchg
xlat
cld
rol
ret
sti
cmp
pop
sbb
push
xchg
mov
icebp
cmpsl
shlb
aad
addl
or
mov
jle
das
push
mov
inc
pop
sub
mov
out
sub
mov
jns
jb
mov
xor
out
rorb
mov
sub
mov
test
push
mov
ds
cwtl
adc
jge
or
xlat
ret
popa
or
adc
jl
insb
aaa
enter
add
lahf
dec
scas
pop
out
lock
insl
pop
fisubl
sbb
adc
outsb
mov
or
scas
inc
je
sbb
jno
repnz
jp
cwtl
push
and
stos
std
out
xchg
push
ret
mov
xchg
pop
inc
daa
jmp
or
inc
test
xor
push
ja
or
rorb
popf
into
rorb
leave
into
test
sbb
fs
int
adc
shll
outsb
cmpsb
xor
roll
idiv
jmp
cmp
lds
mov
push
push
mov
xchg
imul
aas
aas
cmp
cmp
add
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
outsb
inc
ret
jle
jg
jle
out
test
dec
lret
leave
dec
push
fidivrl
rolb
dec
adc
lcall
xor
paddsw
aad
push
clc
jb
push
cmp
xchg
std
pop
xchg
push
fwait
xor
adc
sarl
adc
mov
add
lret
rcll
xchg
mov
jns
pop
inc
jne
cltd
pop
or
jmp
test
lock
and
fstpt
or
insb
addr16
out
lahf
movsb
jb
push
add
mov
jmp
repz
cwtl
or
cmp
pop
jp
xlat
rcrl
outsl
add
jno
mov
dec
mov
je
xor
aaa
mov
jo
jmp
outsl
cmpsb
imul
test
sub
sub
in
ja
ficompl
mov
xor
xchg
cmp
and
fwait
std
or
sub
mov
aaa
ror
push
dec
adc
jmp
mov
inc
cltd
pop
add
out
adc
add
fwait
pusha
lcall
xchg
dec
push
addr16
sbb
rclb
mov
movlps
push
xchg
fidivrl
sub
and
fcomi
jb
dec
sub
popf
inc
data16
xchg
pop
jne
xchg
mov
mov
jmp
in
xchg
push
adc
into
popa
cmp
std
push
sub
cld
lock
sub
and
sub
sbb
xchg
pop
divl
imul
sbb
sbbl
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
out
lahf
jmp
jp
jle
jg
jle
pop
ljmp
xor
and
xor
lcall
cwtl
xchg
mov
cltd
enter
je
js
mov
aaa
shl
stos
pop
mov
mov
adc
je
xchg
imul
adc
xor
jg
lea
adc
outsl
pop
jno
inc
adc
mov
out
xchg
pop
lods
frstor
movsb
xchg
out
xor
add
into
repz
leave
clc
adc
mov
xor
push
mov
add
mov
sbbb
jg
cmp
adcl
in
scas
cmp
push
pop
jl
adc
mov
mov
lock
loope
add
mov
rcll
inc
cmpsl
in
shrb
inc
jb
imul
lret
fnstenv
sbbb
push
jbe
pop
and
addr16
xchg
dec
add
shrl
sbb
clc
add
xchg
decl
jecxz
out
ljmp
dec
cli
fidivl
out
push
xchg
xor
popa
movsb
push
sbb
xor
mov
add
test
js
or
and
sbb
fisttpl
cs
push
jmp
inc
xchg
xchg
inc
test
lock
arpl
push
out
or
scas
pop
pop
push
into
inc
stos
shll
inc
dec
mov
push
sbb
test
jae
out
fsubl
out
test
xchg
add
push
roll
dec
stc
xchg
data16
and
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
jb
and
xchg
jmp
mov
cs
push
ret
lcall
fwait
dec
pop
mov
pop
js
sahf
pop
mov
outsb
and
stc
int3
call
or
ret
pop
shrb
sub
insl
daa
je
test
shl
rolb
cmc
xchg
sub
test
fs
cmp
loope
je
push
push
ljmp
mov
sbb
or
xchg
push
lcall
push
jns
fsts
mov
dec
rcll
insb
inc
xchg
in
sub
in
jnp
jmp
into
test
divl
fnstcw
enter
clc
test
or
ret
loopne
pop
rolb
inc
jno
mov
sbb
and
mov
ret
push
shlb
stos
jmp
push
mov
daa
inc
mov
cld
movsl
or
push
jae
xchg
push
cmp
sub
pushf
je
shl
jb
mov
push
hlt
mov
ret
cmp
data16
add
inc
lahf
mov
and
mov
sub
out
inc
push
or
sub
outsb
push
xchg
mov
lods
pop
cmp
fistpl
mov
mov
and
shl
into
test
pop
inc
push
out
das
jecxz
shlb
adc
fstps
mov
or
mov
mov
pop
cltd
stos
lds
call
imul
cmp
dec
pcmpeqd
push
cli
adc
rcrl
adc
movsl
xchg
push
push
xchg
loope
xor
xchg
ret
mov
comiss
out
sub
lock
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
addr16
sbb
xor
jle
cwtl
jg
jle
movsl
sbbl
clc
inc
neg
jl
mov
mov
cmc
pusha
xor
cwtl
test
lea
add
sbb
sub
test
mov
repz
pop
das
notl
loop
push
inc
insb
jae
mov
fdivrs
mov
adc
inc
repnz
push
repz
inc
sub
inc
out
bound
cmp
fidivrs
leave
jns
pop
push
add
jg
out
popf
or
icebp
ljmp
push
or
lret
mov
xor
mov
sbb
fistpll
cmc
out
repz
cmp
fsubrl
push
cmc
stos
dec
in
mov
mov
int3
dec
cmp
popa
sbb
fimull
daa
fcompl
imul
lcall
inc
mov
int
push
mov
pop
or
cmp
mov
out
and
pmullw
dec
and
xor
das
fbld
test
shlb
xor
hlt
sub
mov
mov
cs
lods
push
sbb
shll
outsb
xlat
jg
xchg
les
xchg
scas
pop
add
mov
mov
out
mov
fsubrl
cwtl
xor
ja
cli
adc
lods
sbb
js
or
xor
les
stos
clc
lods
add
stos
scas
scas
adc
in
mov
lahf
arpl
or
cmpsl
inc
jp
repz
in
icebp
mov
sbb
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
test
cvtps2pd
jle
cwtl
jg
jle
adc
push
js
icebp
ljmp
mov
xchg
rcrb
dec
testb
fcoms
insl
insl
jmp
lods
xorl
jnp
daa
stc
push
cmpsl
fistpl
repnz
cmpl
outsb
xchg
cmpsb
call
enter
insb
mov
mov
mov
aas
cli
push
cmp
aaa
aad
lods
daa
jp
cmp
mov
cmpsb
cwtl
rcrl
ljmp
imul
cmp
mov
adc
or
xchg
add
aam
adc
push
jmp
lea
push
lcall
pushf
adc
test
out
inc
mov
sarl
jl
xor
and
xor
add
cld
movsl
jmp
mov
loopne
idivl
movsb
sub
cmp
xchg
arpl
sub
xor
jnp
mov
popa
fwait
ret
adc
push
pop
lock
loopne
sub
adcb
xor
push
imul
icebp
mov
dec
xor
pop
push
scas
mov
xorl
inc
xor
mov
inc
jo
imul
in
out
and
ret
daa
push
jg
mov
dec
push
push
push
cmp
push
add
jne
cmp
sub
std
test
cwtl
movsl
mov
mov
shr
sbb
rcrb
cmp
mov
adc
push
cmpsb
xchg
jno
pop
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
loope
push
mov
add
jle
lds
cs
call
cmpsb
adc
cmp
xor
jne
mov
pop
repnz
xchg
xor
int
xor
sbb
clc
jnp
gs
sub
push
xchg
push
pop
push
add
rorb
dec
jne
jae
dec
jbe
iret
mov
orl
neg
dec
inc
push
sahf
mov
dec
lds
aad
mov
pop
push
sbb
xor
imul
push
xor
das
hlt
shrb
mov
addl
outsb
nop
xchg
aam
xchg
mov
jle
and
pand
daa
jmp
inc
loope
pop
arpl
testb
push
pop
mov
loop
mov
cli
stos
daa
mov
xor
pusha
jo
imul
mov
out
sub
push
push
ret
inc
mov
ret
jne
loop
fsubrs
or
idivb
jmp
aas
mov
xor
das
mov
mov
mov
fisubl
jne
push
fwait
xchg
insb
inc
dec
cmp
out
pop
jo
push
pusha
cmp
mov
stos
loope
fstps
daa
push
bound
push
repz
ja
sub
xchg
inc
push
sbb
mov
push
push
mov
shrb
xchg
jb
cli
push
inc
nop
test
dec
mov
addr16
push
push
mov
xor
jnp
and
daa
je
and
jge
cmp
jge
mov
fidivrl
ret
mov
xor
cli
adc
and
aad
xchg
outsb
jmp
in
xchg
cltd
es
mov
iret
push
add
les
pop
inc
or
sbb
pop
lcall
clc
sti
ds
push
in
inc
add
add
add
add
adc
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
repz
jg
add
push
jg
jle
cltd
or
ljmp
mov
jge
out
test
loopne
popf
mov
xchg
jb
jnp
xchg
movsl
sub
int
mov
push
adc
xchg
and
outsb
and
test
test
push
vpavgb
adc
cmc
cmpsl
cld
cmp
xorb
lock
sbb
lods
jp
push
ret
pushw
jmp
loop
mov
push
test
cmp
dec
out
cvttps2pi
push
je
xchg
xchg
xchg
inc
cli
sub
push
push
repz
xchg
aad
movhps
mov
out
xchg
or
pop
fistps
loopne
pop
fdivr
pop
repz
sahf
sbb
cmp
jge
mov
iret
aam
ror
dec
jae
mov
cmp
bound
mov
pushf
or
mov
inc
pop
cmp
shll
test
jmp
jp
push
hlt
mov
test
in
dec
loope
mov
sub
fisubrl
sub
mov
fmull
xchg
pop
xchg
in
fiadds
das
data16
movsb
imul
cld
iret
sub
stc
mov
pop
ret
stos
dec
into
add
negb
daa
enter
jp
xor
fistpll
pusha
mov
ret
mov
cld
sub
imul
xchg
pop
xor
sbb
push
add
xor
fstp
add
mov
xchg
xlat
popa
call
mov
push
nop
test
mov
pop
adc
and
imul
stos
cmpsl
fstpt
push
std
adc
jl
lcall
mov
sbb
cs
or
movsb
inc
fs
rcrl
cwtl
imul
add
shlb
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
pop
sbb
add
push
jg
jle
shll
jae
adc
jle
test
push
das
inc
mov
jle
std
or
add
sub
xchg
pmaddwd
push
test
xchg
rorb
and
mov
sub
ss
lds
adc
xchg
push
cmp
clc
xchg
andb
pop
daa
or
push
inc
xor
and
xor
enter
xor
xor
mov
stos
mov
mov
inc
test
imul
insl
adc
subb
loopne,pt
icebp
dec
int
xchg
mov
test
and
adc
dec
pop
out
sbb
pop
xchg
rorl
clc
enter
mov
cmpsl
int
in
rcll
leave
add
or
ss
xchg
js
ret
add
and
mov
jnp
push
push
rorb
jle
mov
gs
jno
add
or
or
dec
sahf
mov
test
dec
mov
xor
movsb
pushf
push
lods
imul
leave
jne
adc
xor
xchg
mov
rolb
mov
push
adc
pop
adc
xor
gs
or
movsl
cltd
adc
or
stos
mov
pushf
mov
les
or
pop
and
and
in
xor
mov
pop
adc
cmpsl
jg
in
mov
jns
adc
xchg
lods
movsb
imul
push
lods
inc
icebp
nop
xchg
xchg
je
outsl
dec
add
insb
jl
scas
outsl
popl
jo
and
sub
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
sti
adc
push
jg
jle
mov
pusha
lods
inc
push
cmpsb
daa
int
mov
jle
mov
daa
xor
pop
lea
jmp
je
push
cmp
repz
repz
rcr
incl
mov
addr16
lret
push
pop
sub
lret
insb
stos
arpl
mov
les
sub
and
adc
popl
pop
adc
test
dec
lahf
test
sbb
jmp
negb
adc
jb
cltd
ljmp
or
data16
and
sub
xchg
jmp
sub
in
dec
add
add
sbb
xchg
push
and
add
shr
mov
mov
push
adc
add
sti
inc
cmpsl
push
pusha
inc
sbb
dec
movsl
jl
clc
push
ficoml
xchg
push
loop
mov
mov
rcll
push
push
rcl
jmp
jecxz
popa
dec
nop
mov
into
mov
mov
xor
sub
pop
sbb
sbb
add
js
inc
je
adc
mov
js
jmp
orb
mov
adc
cmp
inc
sub
add
inc
adc
lock
mov
inc
jbe
xchg
daa
in
jmp
dec
out
sbb
fmuls
rol
pop
fbstp
cld
ret
pop
xlat
in
cs
mov
addr16
aas
cmp
js
aaa
sbb
xor
iret
pusha
inc
push
push
lods
or
cmp
mov
cs
arpl
jbe
add
dec
jb
test
pop
cmc
mov
mov
fildll
adc
sbb
and
call
push
iret
mov
bnd
hlt
loope
xchg
testb
sbb
les
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
fisubrl
jle
push
jg
jle
popl
adc
cmp
push
xchg
jb
jmp
into
or
push
cmp
sarl
ret
jns
sub
into
mov
icebp
dec
or
leave
sahf
jle
lock
mov
pusha
icebp
out
arpl
out
inc
cli
int
jne
cmc
inc
bound
stos
daa
mov
clc
mov
push
cmp
push
mov
aaa
lea
iret
cmpb
xchg
xor
mov
clc
ret
lock
and
push
popa
sbb
movsl
lret
mov
outsb
test
test
cmp
mov
pop
subl
pop
pushf
add
push
add
jle
mov
sbb
lock
mov
mov
mov
xchg
aad
mov
bound
or
ja
es
cltd
add
ficoml
sub
popa
popf
dec
jb
jg
cmp
push
stc
dec
dec
leave
fidivrs
sbb
add
push
daa
xchg
outsl
mov
in
out
pop
icebp
xchg
add
lods
jo
mov
xchg
imul
daa
dec
jp
fadd
pop
cmp
stos
outsl
subb
pop
arpl
mov
inc
dec
mov
adc
mov
jp
arpl
cltd
mov
psadbw
pop
dec
pop
pop
xchg
push
lock
ret
mov
mov
mov
mov
xor
rclb
fs
iret
cmp
lret
mov
xor
and
pop
rcll
insb
and
and
mov
mov
pop
cs
push
push
ret
sub
fisubl
sbbl
cs
xchg
add
jns
lahf
ljmp
or
fld
fldenv
bound
push
nop
or
cmpsl
jmp
out
std
push
lret
pop
adc
pandn
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
icebp
std
jb
or
push
jg
jle
cmpsl
fs
and
fists
out
sub
inc
or
or
inc
cwtl
or
ja
ret
cmp
and
inc
add
int
int
rcrl
imul
push
xorl
daa
push
xchg
dec
xchg
or
mov
popf
int3
mul
dec
popf
jle
jg
adc
mov
gs
sub
rcl
inc
pop
fnstcw
movsb
jge
pop
mov
sarl
lret
mulb
sbb
ss
sets
jns
cmp
call
push
iret
pop
sbb
ja
jg
scas
xchg
fwait
lods
decb
sub
push
push
mov
daa
in
ret
cltd
pop
mov
push
xchg
cld
mov
inc
jg
sub
insb
dec
pushf
pop
xchg
mov
mov
jmp
cmp
push
test
xor
nop
xchg
pop
inc
out
call
lds
dec
sti
cmp
int
xor
sub
cmp
sbb
mov
pop
mov
ljmp
sbb
pop
xchg
cmp
rcrb
popa
pop
test
adc
aaa
icebp
loopne
es
mov
jb
add
cmpsl
jo
hlt
jnp
out
stos
xchg
movsb
sti
push
out
je
push
push
push
or
psadbw
jp
and
dec
mov
in
or
mov
xor
xchg
cwtl
clc
fmuls
fxch
inc
jp
adc
inc
cbtw
cmc
sahf
shll
test
mov
xor
push
stos
repz
aad
jno
push
dec
je
xchg
cmpsl
test
pop
adc
ror
sub
adc
ret
jmp
add
push
mov
add
scas
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
fnstcw
lret
mov
jg
jle
je
rclb
sub
es
jno
mov
loopne
or
mov
mov
insl
push
mov
loope
lret
movsl
in
dec
xchg
cmp
adc
das
aad
movsb
push
jecxz
not
pop
imul
icebp
aaa
sbb
xchg
or
sub
lods
or
xor
arpl
jbe
loop
push
dec
shll
incl
dec
inc
jge
iret
jno
and
pavgb
mov
shrl
int3
push
std
icebp
cmp
cmp
sahf
sbb
cmp
sub
lea
fcomps
in
aaa
xor
clc
jge
xor
cmpsb
clc
pop
clc
push
push
and
jne
mov
xchg
cmpsl
push
fs
xchg
cmp
xorb
lcall
mov
mov
orb
dec
pushf
aaa
mov
popa
inc
mov
bound
lret
jne
sbb
and
lcall
enter
inc
jb
sbb
loop
in
jecxz
ds
mov
or
lcall
push
sub
bound
int3
pop
andb
scas
xchg
sub
ret
or
sbbb
adc
lcall
sub
sti
gs
mov
gs
add
stos
lods
pop
adc
adc
loop
insl
xor
sbb
stc
inc
xor
imul
arpl
add
aaa
outsb
daa
rol
pop
in
ljmp
xor
hlt
das
xchg
fistpll
mov
xor
jno
std
push
js
out
es
sub
movl
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
clc
bound
rclb
jle
scas
jg
jle
dec
je
mov
scas
rcr
and
pop
std
pop
lods
popa
pushf
xchg
sbbl
addr16
bound
inc
jge
adc
outsb
insb
fcomps
mov
and
test
jg
or
mov
sbb
mov
or
cmp
jmp
mov
add
add
push
fdivrl
add
ret
mov
push
mov
mov
dec
mov
mov
sub
gs
mov
inc
xchg
ljmp
js
shll
or
pop
repnz
stc
lock
dec
cmpsb
dec
inc
subb
stos
cmp
test
mov
push
jge
clc
mov
cld
xchg
adc
shlb
mov
cmpsl
mov
xchg
test
sahf
jo
sub
out
enter
xlat
rcl
mov
mov
aad
cmc
data16
push
adc
mov
jnp
jg
mov
mov
mov
mov
test
xchg
and
add
ljmp
lahf
jae
jmp
int
sub
sub
test
cmpsl
push
mov
lock
fildll
lcall
fsts
pop
push
sti
cli
pop
dec
inc
sub
fidivrs
jo
sarb
ljmp
in
pushf
inc
ljmp
jne
and
in
mov
xor
add
lret
es
push
jnp
push
stos
out
mov
xchg
or
push
xchg
call
orl
nop
sub
shll
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
imul
add
adc
jle
jg
jle
mov
jmp
aas
inc
sub
pop
pop
js
jns
cmpsb
mov
aas
std
mov
ficoms
xchg
cli
ret
xor
je
mov
call
xorl
dec
mov
and
clc
mov
test
inc
out
jb
ss
inc
pop
and
push
ja
mov
dec
call
popf
stc
mov
aam
mov
push
jg
sbb
inc
je
sub
lcall
pop
push
inc
adc
add
call
inc
jge
inc
les
mov
ret
rep
and
and
add
pop
jecxz
repz
int3
cmp
sub
cmp
push
aad
adc
xchg
pop
in
mov
mov
xchg
mov
insl
xlat
ficoms
jle
dec
jno
rorl
mov
out
and
dec
cmpl
xlat
bound
fisttps
out
dec
cli
cpuid
sbb
mov
sbb
ret
add
cli
adc
push
cmp
jo
xor
mov
icebp
and
mov
dec
mov
rol
and
jmp
add
cmp
fcmovnbe
outsb
jno
add
inc
je
hlt
lret
mov
dec
cwtl
push
adc
add
adcl
lcall
sub
sbbb
in
cmc
xlat
mov
add
sub
cmp
roll
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
sbb
mov
jle
scas
jg
jle
adcl
adc
add
cmp
pop
pop
push
imulb
pop
push
dec
icebp
lret
mov
loope
push
std
xlat
push
gs
lcall
add
push
push
dec
inc
mov
pop
xor
push
sbb
sbb
xchg
xchg
inc
subl
jg
mov
imul
sahf
outsl
sbb
cmp
sbb
test
data16
sahf
mov
popa
or
jp
xchg
loope
mov
cmc
or
loop
or
xchg
xchg
push
adcl
cmp
cmc
and
add
ja
daa
sbb
lcall
mov
mov
daa
pop
fldt
lret
sarl
and
int3
push
mov
movl
clc
mov
loop
sbb
aaa
xchg
and
mov
daa
adc
jo
insl
aas
fldt
mov
comiss
jp
insl
adc
pusha
cmp
mov
mov
mov
jbe
and
lcall
cmp
fcomps
test
fildll
scas
orb
and
mov
push
hlt
daa
loopne
icebp
xchg
sub
and
push
pop
rolb
stc
jmp
aaa
arpl
aaa
cmp
lock
divl
inc
sbb
push
xor
ret
in
pop
or
jns
movsl
push
cld
push
dec
and
mov
ljmp
mov
mov
add
and
mov
ret
cmpsl
sbb
lods
push
mov
inc
and
mov
adc
roll
jmp
jl
mov
mov
jge
fldl
call
add
adc
scas
jg
jle
sbb
sti
xchg
jns
in
fidivrs
xor
sbb
adc
dec
xor
jae
jg
inc
lods
push
decl
jmp
mov
repz
or
clc
imulb
cltd
cmpl
xor
outsl
or
sub
xchg
pop
xor
xor
or
sbb
mov
adc
scas
adc
jns
iret
adc
mov
out
mov
mov
rcrl
sbb
int3
mov
fucomi
mov
loopne
fmuls
lcall
shll
gs
cmpsl
push
loop
cs
das
stos
hlt
je
push
ds
push
jnp
add
das
out
xor
std
jle
pop
test
and
xchg
jb
je
push
jg
clc
lret
shrl
dec
leave
iret
sar
jge
adc
jne
inc
sbb
movsl
add
add
dec
popa
lret
stc
adc
test
fwait
xchg
insb
addr16
xor
in
jle
fwait
xchg
or
fmuls
enter
inc
mov
pop
pop
rep
lock
pop
push
stc
aad
adc
cmpsb
fwait
sub
pop
jg
sub
inc
pop
icebp
jge
adc
pop
jge
lea
popa
lock
popf
adc
pop
xor
es
or
inc
scas
ret
or
enter
jecxz,pt
shr
out
jp
dec
movsl
loope
mov
pop
lods
cmp
dec
push
les
push
xchg
jno
cmpsb
lahf
xchg
lods
inc
cld
sbbl
sbb
cmp
inc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
inc
inc
ja
sub
mov
pop
test
jo
repz
cwtl
sub
movsb
cmp
insb
je
lods
movsb
inc
sub
arpl
push
aas
out
pop
sahf
jnp
cltd
loop
pop
lods
push
mov
add
fbstp
das
jle
fwait
pop
jl
lods
mov
scas
dec
push
and
mov
jno
mov
sub
xlat
rorb
fstpt
pop
xchg
andl
movsb
mov
pop
sub
sti
cmp
and
ja
sub
cmp
repnz
push
fwait
add
sarb
xor
les
inc
je
jecxz
adc
aas
jbe
mov
gs
dec
dec
pop
inc
or
addr16
pushf
push
icebp
cmc
adc
mov
mov
popf
dec
mov
and
mov
enter
cli
adc
add
test
aad
fsts
imul
std
inc
lcall
or
inc
std
xchg
pop
mov
or
negb
mov
xchg
jg
cltd
negb
stc
fs
push
mov
repz
pop
add
jnp
jb
mov
hlt
mov
xor
fistl
jno
and
daa
outsl
lret
add
xchg
mov
outsb
outsl
add
cmp
insl
lret
pop
pop
sbb
push
in
pop
xor
mov
insl
mov
pusha
inc
cltd
inc
mov
adc
icebp
loope
popa
imul
push
je
movl
jmp
scas
or
xor
mov
sarl
push
jle
scas
jg
jle
aam
adc
mov
xorl
mov
push
and
aad
sbb
cli
hlt
pop
mov
fisubs
icebp
xchg
adc
lock
push
jp
sbb
cwtl
in
mov
popw
mov
dec
xor
xchg
test
insb
dec
repnz
sbb
sarb
mov
pop
movb
pop
cmc
push
loop
pop
cmp
add
nop
je
dec
jo
mov
into
les
iret
arpl
in
push
xor
cmc
lea
add
aaa
xchg
decl
lcall
ret
or
adc
rcr
dec
push
mov
mov
add
jmp
mov
stos
mov
mov
scas
in
outsb
push
push
jle
aas
nop
and
cmpsb
cli
xchg
inc
add
push
push
jns
shl
cmc
cli
fidivrl
movsl
enter
scas
lock
loopne
sub
push
out
sbb
popa
jno
cli
pushf
repz
sbb
cmp
in
cmp
sub
inc
push
fisubs
sub
xor
inc
adc
incb
sub
cli
dec
sub
or
int
sti
insb
jo
push
jge
inc
cli
cmp
jl
rcl
mov
loopne
or
ja
ljmp
and
add
sti
or
clc
pop
push
xor
data16
pop
lods
cmpb
aam
pop
ret
std
push
inc
dec
and
sbb
mov
mov
sbb
xchg
inc
fcmovu
in
lahf
adc
pusha
mov
push
push
dec
je
mov
orl
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
xorl
imul
xor
add
jp
pushf
lahf
pop
mov
bound
sahf
test
packuswb
dec
adc
or
test
data16
add
sbb
sub
loope
mov
insl
pop
pop
xor
xchg
test
mov
shl
rorb
rolb
imul
fwait
cld
nop
loope
add
add
pop
std
negb
adc
or
clc
sbb
push
and
jg
fldt
in
mov
jmp
xchg
movsl
hlt
jmp
cltd
fnstenv
movsb
sarb
jo
xchg
enter
rcll
sub
out
dec
ljmp
mov
rclb
arpl
dec
ja
sahf
scas
nop
add
test
sbb
mov
in
aas
mov
mov
push
insl
xchg
mov
cmpsb
movsb
test
les
push
addr16
leave
iret
insb
clc
push
or
dec
in
fwait
in
add
mov
adc
inc
adc
inc
push
stos
adc
test
fldenv
ret
out
cmp
pop
inc
xchg
jle
fidivrs
add
std
lea
pusha
mov
test
ficoms
xchg
es
dec
les
or
into
sub
pop
mov
adc
xor
testl
scas
xor
mov
pusha
pop
jle
push
mov
in
stc
fildll
decl
int3
js
cld
jns
js
ja
dec
push
sbb
es
pop
rorb
adc
movsb
jle
repnz
and
mov
ja
dec
aas
lret
daa
mov
lock
xor
jmp
pop
sub
dec
insl
dec
imul
and
es
js
and
jle
scas
jg
jle
mov
cmc
scas
jne
push
and
sbb
fwait
test
insb
mov
les
iret
add
sub
mov
dec
test
lcall
add
dec
sub
or
push
jg
addl
add
dec
mov
push
lcall
arpl
pop
dec
icebp
jnp
mov
jo
xchg
shrb
in
out
repz
in
inc
rcr
neg
ljmp
add
enter
pop
inc
negl
sub
push
lea
ja
push
test
ret
mov
mov
lods
enter
xchg
cmpsl
jae
mov
sbb
mov
mov
jmp
test
cmovbe
lock
popa
test
xchg
cld
push
and
fdivs
cmp
mov
xchg
cld
sti
jns
or
add
test
jne
scas
fdivrl
shll
jmp
mov
xchg
cmp
stos
mov
xchg
mov
nop
punpckhwd
xor
insb
pusha
aam
mov
sub
ret
xor
pushf
jecxz
lret
inc
fnsave
pop
clc
popa
or
mov
mov
xchg
xchg
inc
bnd
fprem1
repz
enter
and
popa
popf
dec
test
xor
push
or
imulb
test
adc
pop
mov
dec
test
and
sti
cs
andl
and
cmpsb
and
cmpsb
clc
arpl
ret
mov
pop
dec
divb
test
fwait
jb
add
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
mov
sbb
cltd
jg
jle
mov
sti
shll
js
call
cltd
sub
xchg
pop
mov
push
shll
xchg
mov
mov
jmp
adc
aam
mov
aas
mov
mov
mov
sarb
mov
push
push
aam
scas
mov
pop
dec
sub
mov
sbb
or
pusha
add
arpl
gs
or
xchg
xchg
loop
xchg
add
jno
in
dec
cs
mov
dec
push
in
mov
pop
pop
xlat
push
and
rclb
hlt
cmp
sbb
ss
pop
jno
dec
repnz
mov
xchg
dec
data16
push
fs
push
lahf
pop
cltd
jbe
pop
mov
xchg
js
movsl
push
iret
addr16
orb
dec
xchg
in
test
aas
jo
sarb
imull
cmp
xchg
cmc
jle
xchg
xor
jge
out
add
mov
or
push
dec
mov
push
inc
cs
fidivrs
jbe
sub
lds
mov
arpl
movsl
int
imul
lcall
xor
cmpsb
adc
inc
push
pop
cmpsl
in
out
test
into
hlt
sub
dec
jns
mov
fidivrs
jae
popf
cmp
xor
mov
add
test
mov
mov
pop
sbb
adc
adc
icebp
pop
sub
repnz
shll
xor
sti
in
jp
inc
pop
cmp
lret
sbb
sub
in
dec
adc
aas
incb
fcmovnb
adc
stos
aam
sub
jb
mov
mov
aas
inc
jne
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
cli
popf
mov
jle
jg
jle
int
sub
push
outsb
mov
push
mov
xlat
gs
pusha
into
jbe
pop
pop
sbb
popf
je
andb
cli
cmp
sbb
xorb
inc
fistpll
out
cmp
push
pop
fsubs
mov
inc
sub
shrb
or
sub
ljmp
fcmovbe
leave
cmp
cmp
lock
into
rclb
fwait
test
cltd
movsb
in
je
rorb
adc
or
inc
icebp
repnz
inc
jae
lods
jp
or
vfrczsd
std
test
and
dec
movsb
xchg
xorl
lea
imul
imul
inc
pop
inc
into
pop
lahf
jl
mov
ret
test
enter
dec
les
adc
nop
das
xor
in
insl
adc
dec
inc
andb
cmp
jbe
leave
push
jbe
inc
daa
lds
xchg
push
mov
test
sbb
imul
fwait
mov
pop
fsts
inc
xchg
mov
cmp
lods
jo
imul
pop
clc
fcoml
repnz
roll
and
sbb
cwtl
outsl
scas
jae
fxch
xchg
and
xor
fsub
aad
aaa
dec
clc
sbb
add
or
mov
or
jmp
shl
add
sbb
out
xchg
cmp
dec
mov
scas
jo
or
push
push
inc
js
mov
or
addr16
xor
jmp
es
push
push
lds
add
jno
pop
mov
add
push
enter
or
adc
roll
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
xchg
and
jle
xchg
jl
jle
push
cmc
sub
sbb
fisttpl
and
mov
stos
xchg
inc
or
cmp
dec
call
inc
mov
push
sbb
xor
in
dec
mov
imul
sbb
mov
cmpsb
lock
mov
enter
add
in
stc
dec
sub
loop
pcmpeqb
aad
fbld
insl
data16
ret
loopne
repnz
fldpi
insl
pop
test
negl
es
ja
lahf
mov
test
or
xor
sub
rcrl
lds
and
leave
jns
mov
sub
mov
and
ss
mov
rolb
ret
pop
sbbb
xorb
sbbl
insl
sarb
out
or
addr16
mov
xchg
sbb
in
add
lods
xor
jge
and
fiadds
rclb
jno
adc
and
arpl
or
mov
out
cmpb
leave
jp
fwait
mov
jp
jae
hlt
dec
mov
rorl
dec
loop
test
add
lock
andl
sarl
xchg
or
dec
in
mov
or
inc
aad
pusha
mov
rorb
daa
fistps
es
or
andb
pop
cmp
dec
rorb
inc
fisttpll
jno
xchg
scas
sbb
idiv
sbb
ret
data16
mov
push
dec
sub
xor
fmull
pusha
push
fstpl
ficompl
mov
cmp
jle
jmp
test
out
push
scas
cmp
stos
enter
daa
dec
sbb
xchg
jns
iret
xchg
and
stc
mov
pop
jle
and
jp
cld
cmp
subl
mov
sbb
pop
arpl
aas
scas
jecxz
adc
outsl
nop
rorl
xor
ror
xor
fdivrp
hlt
dec
pusha
das
aaa
mov
cmpl
inc
idiv
pop
mov
pop
loop
mov
push
in
aaa
push
hlt
mov
xrelease
adc
repnz
mov
shlb
jb
and
insb
iret
vmread
mov
pop
inc
push
and
xchg
mov
in
add
cmp
gs
in
mov
jmp
fsubs
je
loope
outsl
fcompl
incl
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
lock
and
jle
in
sub
mov
xorl
jl
lods
jno
popf
push
loope
ficoml
and
cmc
add
fs
sbb
xchg
stos
int3
pusha
adc
and
es
dec
shrb
aam
add
push
xchg
mov
int3
inc
inc
push
icebp
testb
out
inc
pop
xor
push
cmp
lods
xchg
popf
inc
shlb
leave
gs
test
push
arpl
jmp
cmpsl
inc
jge
jo
inc
roll
daa
fists
in
pmaxub
cmp
aam
lods
test
out
xlat
sub
inc
lock
rclb
jg
fs
nop
rep
lods
ret
aaa
pop
outsl
and
out
xchg
sub
push
fcomps
imul
cmp
push
ss
test
leave
pop
xchg
ret
testl
dec
jo
bound
inc
jb
stos
or
enter
inc
jno
movsl
aam
or
pushf
xor
jmp
cltd
and
mov
and
out
mov
xor
js
dec
fsubs
fdiv
xorb
jg
daa
xor
lret
ud2
sub
fstps
push
xor
imul
into
lods
orb
idivb
mov
ds
pop
mov
dec
stos
bound
pop
mov
pop
test
push
cmp
dec
dec
rcrb
sti
dec
inc
push
mov
add
fwait
and
jge
xchg
jl
inc
jp
faddp
xstore-rng
cmpsl
inc
sbb
aas
adc
jne
pop
lds
or
adc
sub
xchg
and
imul
xor
mov
out
adc
dec
pop
xchg
pop
lock
movsl
fwait
movsb
cmp
loopne
push
cwtl
jbe
test
push
mov
push
inc
mov
addr16
in
adc
jl
outsb
jle
outsl
jnp
outsb
insl
mov
push
mov
jp
dec
rclb
shrl
shll
sbb
out
test
cmpsl
push
push
jg
mov
sub
test
push
inc
popa
fs
stos
rcrb
sti
loopne
pop
movsb
call
xchg
lock
mov
sbb
and
cmpsb
aas
jge
ljmp
cli
mov
ficoml
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
add
pop
outsb
jg
add
popl
mov
pop
cmp
gs
push
roll
outsl
sbb
hlt
sti
imul
mov
shrb
jns
cmp
fstps
xchg
sbb
stos
xchg
enter
adc
outsb
pop
sti
enter
cmp
cld
add
aaa
nop
and
js
xchg
scas
cmpsb
lds
cwtl
outsl
jmp
jmp
mov
hlt
lahf
or
hlt
mov
cmpsb
xor
imul
cmpb
cmp
mov
jb
inc
xor
pop
jl
mov
add
fldl
test
rol
mov
adc
scas
pop
loope
clc
daa
lds
mov
leave
adc
sbb
dec
in
and
xor
repnz
jnp
iret
xor
jmp
arpl
push
add
iret
aad
enter
imul
adc
and
les
lret
cmpb
out
test
mov
fisubl
xor
hlt
bound
or
lret
mov
mov
mov
lahf
xor
aaa
sbb
pop
loop
push
fsubrs
pop
repnz
loope
cmp
xchg
loopne
push
cwtl
in
mov
push
lods
mov
js
mov
daa
cltd
mov
int3
mov
rcll
pusha
ds
into
sub
jecxz,pt
dec
and
idivb
cli
push
lret
add
test
sbbb
aas
pop
inc
nop
lret
dec
das
lock
outsb
fistpll
xchg
pop
dec
xchg
pop
js
in
sbb
sub
hlt
data16
fcompl
out
stc
push
jmp
sahf
or
inc
mov
jns
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
je
bswap
jle,pn
outsb
jg
jle
aas
xor
clc
ljmp
das
push
lock
add
int3
scas
fs
add
stc
sbb
outsl
sti
or
popf
jbe
fmull
mov
shlb
mov
pop
mov
ss
push
mov
jne
cli
lds
mov
jbe
mov
adc
push
adc
cmp
push
mov
enter
xchg
push
lret
xor
mov
pop
xchg
es
movsb
push
in
test
fistpl
fdivs
in
jg
scas
dec
pop
ds
test
jge
out
loope
ss
mov
mov
mov
fbstp
fsts
out
popf
std
xchg
adc
stc
scas
mov
dec
int
test
cli
dec
sub
pop
lods
rcrb
and
add
mov
inc
dec
repz
repnz
int
adc
adc
out
lods
dec
xchg
mov
stos
neg
sbb
pop
inc
sbb
pop
mov
mov
sbb
cmp
aas
orb
pop
xorl
es
ljmp
lods
in
sbb
iret
loope
inc
popa
enter
jno
pop
or
cli
jmp
cmp
setg
icebp
push
fldenv
daa
pop
sub
ja
das
and
jmp
cmpb
repnz
jns
imul
jo
test
mov
adc
imul
mov
stos
push
mov
mov
ss
js
push
xchg
push
inc
sahf
rcll
inc
in
push
stos
and
sbb
insb
loopne
mov
add
mov
xchg
fsqrt
ljmp
lods
test
or
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
lds
jle
outsb
jg
jle
les
mov
arpl
jge
xor
push
lods
and
mov
fcoms
add
push
sub
mov
cmpsb
jg,pt
jle
mov
jle
inc
xchg
jnp
sahf
push
jbe
aas
mov
inc
inc
pop
shrb
mov
dec
dec
cmpsb
pop
in
pop
mov
mov
jp
dec
outsl
dec
loopne
mov
jne
jbe
cs
bound
popa
pop
test
repz
xchg
iret
xor
cli
in
hlt
scas
push
sahf
fwait
cltd
or
lock
std
mov
test
fs
lock
fiaddl
jle
xchg
jae
xor
jp
int3
cmp
subb
scas
pop
shll
mov
and
and
jp
dec
lahf
ss
call
dec
negb
mov
data16
adc
scas
pop
outsl
test
and
cmp
and
rorb
lods
xchg
imul
scas
stos
jmp
jns
mov
clc
jnp
xchg
lret
incb
lcall
or
gs
rcl
xchg
mov
sbb
or
mov
outsl
mov
dec
push
mov
mov
les
pop
rclb
or
dec
push
notb
decl
movsb
cmc
inc
or
pop
cmpsb
sbb
mov
jle
je
and
rclb
out
pop
rorb
sub
pop
jl
in
test
in
pop
repz
lea
in
out
fcoms
sbb
bound
inc
clc
push
xchg
mov
rclb
adc
cmp
sub
push
xlat
sbb
dec
jns
clc
cmpsb
fwait
mov
pop
cmc
orl
push
or
sbb
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
mov
pop
sub
push
jg
jle
cmp
das
push
add
inc
les
adc
jg
mov
and
xchg
movsb
xchg
cmpsb
dec
xchg
fdivrl
movsb
out
out
pop
add
hlt
mov
scas
pop
cwtl
in
mov
jns
icebp
inc
arpl
imul
in
lcall
push
out
rcrb
roll
jecxz
mov
testl
and
or
les
ds
dec
xchg
cmp
jmp
xor
jmp
lret
je
jnp
mov
cmp
arpl
ret
pop
int3
ret
ljmp
sbb
shrb
shlb
dec
push
sahf
repz
xchg
fimuls
xchg
xchg
xchg
push
mov
adc
or
cmp
mov
inc
lea
mov
cmpsl
lret
add
into
negb
mov
daa
mov
cmp
lds
mov
repnz
push
ljmp
mov
ljmp
stc
cmpsb
and
xchg
xor
in
loop
dec
sbb
xlat
push
mov
mov
aaa
cmpsl
dec
adc
xchg
fsubrl
jge
insb
mov
std
jp
xor
push
repnz
test
stc
inc
shl
shl
jo,pn
arpl
push
bound
or
lret
xor
and
repz
test
fsubrl
fisttps
mov
sahf
jnp
mov
mov
jno
mov
repnz
iret
pop
sub
mov
xchg
sbb
inc
inc
dec
push
leave
iret
dec
mov
scas
scas
jbe
xchg
xor
pop
adc
or
dec
ret
into
xchg
xchg
icebp
test
shl
inc
int3
xor
fucomi
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
cwtl
sub
or
jg
jle
stc
fildll
mov
mov
pop
roll
pusha
cld
dec
lds
xchg
fnstsw
jbe
mov
ja
adc
in
or
add
pop
adc
sub
push
pop
pusha
stos
out
ret
outsb
data16
int
dec
movsb
imul
das
xor
leave
loope
out
pop
out
std
xchg
movsb
or
cmpsl
xchg
cli
sbb
sbb
cmpsl
cli
test
into
mov
shll
pop
sub
sahf
cltd
add
push
xchg
pop
jmp
lods
dec
sub
arpl
in
hlt
in
in
push
mov
cmp
push
dec
mov
inc
rcrb
mov
inc
sbb
xor
in
fists
pusha
fsubrl
jnp
mov
xchg
mov
jmp
xchg
sbb
adc
pop
js
nop
repz
dec
jp
scas
xchg
jmp
push
jo
add
imulb
int3
sub
dec
dec
cmp
pop
icebp
call
ffree
inc
cld
std
test
test
idiv
cmpsl
inc
popa
loopne
outsl
adc
xor
mov
ret
mov
push
int3
imul
jns
pusha
and
inc
aas
mov
stc
push
cmpsl
or
mov
adc
data16
push
pop
cltd
outsl
unpckhps
fiaddl
aam
lahf
cld
outsb
sub
jp
xchg
adc
sti
nop
and
pop
and
aad
int3
or
insl
mov
push
js
mov
or
mov
dec
sub
and
sarl
sahf
js
add
imull
mov
pop
arpl
lds
mov
push
jecxz
inc
cmp
int
push
lea
cli
mov
and
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
shrb
jle
push
jg
jle
jns
pop
adc
stos
out
fwait
inc
pusha
popf
sbbb
add
enter
dec
adc
jnp
pusha
push
inc
push
cs
jmp
adc
loopne
sahf
out
inc
fldt
push
add
fcompl
js
cs
push
ret
jmp
pop
jge
sbb
mov
sub
fcomip
int3
inc
and
iret
or
add
mov
cmp
adc
repz
sub
adc
jns
or
sbb
ficoms
pop
orl
je
sub
subb
jne
in
mov
push
iret
js
in
jns
xor
xchg
fcomp
div
lea
aam
cmpsl
scas
or
xchg
xor
and
fwait
outsb
xchg
pop
pop
into
loop
inc
sub
xchg
gs
adc
ds
dec
outsb
sarb
mov
mov
sbb
fsubr
shl
or
lret
cld
addl
scas
pop
ds
lods
fldenv
lcall
out
add
dec
sahf
push
ja
loope
or
mov
test
ss
in
adcl
xor
sub
cmp
add
xchg
mov
cmpl
aam
sarl
add
or
or
stos
push
out
jo
mov
jle
pusha
sub
insb
jns
push
cmpsl
and
call
jnp
int
addr16
popf
jno
push
fistpl
mov
and
in
xchg
test
icebp
push
jno
fnsave
xchg
add
cmpsl
cmp
mov
lret
bswap
stc
je
call
addb
in
cmp
cmp
lret
out
aad
scas
and
cltd
sub
cwtl
add
add
xor
and
add
clc
add
add
add
xchg
push
shll
pop
popa
cmp
jle
push
jg
jle
sbb
in
or
mov
into
fstps
pusha
lds
jno
and
loop
pop
pop
mov
push
aam
sbb
cmp
popl
popf
push
sub
into
push
vcvtdq2ps
unpckhps
cmp
cwtl
loopne
jo
push
add
inc
call
loop
notl
mov
mov
enter
or
adc
std
pop
mov
jl
insl
xor
das
dec
xor
mov
rorl
aam
xchg
lahf
xor
add
or
cld
nop
scas
pop
sbb
out
insl
pop
inc
xchg
test
stc
cmp
pop
mov
dec
negb
adc
das
add
pop
popf
jl
cli
mov
mov
xor
sub
dec
lods
addl
insl
movsb
sbb
sub
stos
inc
scas
xor
add
test
repz
test
leave
std
inc
scas
or
xchg
push
pop
inc
add
inc
cmpsb
mov
lahf
dec
mulb
adc
sarl
cmc
mov
cmp
int
add
sbb
mov
cwtl
sub
mov
push
adc
inc
add
inc
mov
mov
into
shlb
xor
loope
mov
cmp
or
jb
js
pusha
outsb
mov
adc
test
mov
cmp
push
jmp
push
mov
push
mov
dec
das
pop
pop
jge
sub
cmp
mov
sub
subl
cli
push
mov
gs
loopne
sub
nop
ss
mov
adc
xor
jge
inc
sub
jne
loope
cmp
or
out
fmull
xchg
or
add
repz
add
hlt
pushf
dec
mov
inc
and
lods
pop
dec
lcall
jle
jmp
inc
sti
mov
out
aaa
inc
fisubs
sbb
mov
and
sub
jns
inc
sbb
xor
cmp
mov
push
dec
mov
jg
fsts
in
inc
je
add
sahf
cmpw
pusha
inc
adc
sbb
add
adc
out
add
fisubrs
cmc
cli
sub
mov
push
test
mov
sub
nop
add
xchg
jg
test
inc
out
testb
neg
or
inc
fimuls
jne
inc
inc
out
kunpckbw
stc
lea
and
sbb
adc
repz
aaa
lret
jl
xorb
pop
pusha
jnp
adc
adc
mov
and
cmp
js
ljmp
and
push
jle
imul
xchg
sbb
popa
adc
out
mov
pop
inc
jne
int3
pop
jb
or
movsb
cmp
pop
jbe
fwait
les
les
pop
sti
inc
fs
push
and
gs
fsubr
cs
mov
ret
or
xor
push
ficomps
jmp
loope
jb
addl
call
sub
inc
and
ss
jae
pop
xchg
pop
fldcw
insb
push
pop
push
pushw
dec
mov
pusha
sti
xchg
fbld
lods
repz
adc
mov
jne
dec
push
pop
outsl
mov
pop
aam
or
fidivs
adc
mov
mov
inc
add
mov
mov
sub
mov
xor
cmp
inc
in
and
or
hlt
fldl2e
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
or
jle
push
jg
jle
into
gs
xor
repz
cmc
pop
mov
ss
jl
lock
xorl
daa
sbb
stc
jb
add
mov
pop
xchg
and
mov
inc
cwtl
and
inc
pusha
pop
stos
mov
mov
mov
sub
xor
movsl
jp
aam
jg
rclb
jg
jmp
mov
pop
testb
es
lods
cmpsb
movsb
mov
xchg
jnp
push
xor
xchg
mov
and
xlat
pop
insl
pop
inc
dec
and
cmp
mov
out
stc
xchg
dec
loope
mov
lcall
pop
mov
std
cmp
or
adc
sub
imul
pop
push
pop
fwait
daa
xchg
dec
dec
dec
jecxz
or
icebp
mov
out
mov
inc
push
mov
dec
cmp
or
mov
jno
sahf
sbb
mov
cmpsl
xchg
int3
sbb
dec
pusha
bound
and
mov
mov
test
cmc
sbb
inc
xor
adc
push
cmp
adc
pusha
push
pop
imul
pop
jp
mov
cmpsb
int
jp
dec
rcll
xchg
sub
fwait
movsl
pop
jae
sub
lret
je
enter
cmp
jmp
sub
jp
inc
hlt
mov
andl
cltd
cmp
sbbl
xor
sbb
mov
outsb
cmp
pop
fsubr
pop
dec
and
mov
push
adc
sub
inc
imul
mov
ror
inc
pop
mov
jne
mov
push
dec
dec
iret
inc
test
hlt
pushl
jmp
push
mov
dec
sub
enter
fmul
aam
jle
push
jg
jle
cmpsl
ss
mov
stos
mov
pop
jp
arpl
test
inc
xchg
xor
sub
cmc
daa
jecxz
stc
inc
jb
add
or
xor
inc
lock
jno
mov
test
mov
sahf
adc
jno
jecxz
dec
mov
xchg
jmp
pop
push
xchg
jle
mov
stc
inc
sbb
insl
outsb
fwait
push
lods
mov
shl
adc
iret
sbb
mov
ret
push
test
mov
cmp
cltd
xchg
aad
or
fwait
insb
ror
push
xchg
test
cmc
test
mov
mov
ja
or
pusha
jecxz
jo
lahf
push
pop
stos
cmp
and
add
insl
xchg
pop
mov
pop
fidivrl
ret
adc
mov
cmp
test
insb
dec
mov
mov
adc
into
sbb
arpl
shrb
push
jp
add
cli
orb
jmp
cmpl
push
push
jle
leave
sub
push
sarb
and
ss
mov
lods
xor
add
inc
dec
lret
jecxz
or
ficoml
jae
pop
sbb
push
or
ja
jg
pop
adc
push
sbb
mov
in
int3
call
add
and
out
movsl
aam
xchg
je
mov
push
jmp
sub
push
pop
cmc
test
jge
lds
dec
mov
inc
lret
dec
mov
rcll
ret
into
cld
test
add
pop
out
dec
movsb
push
mov
aas
sub
sub
add
ja
aam
imul
cmc
push
fwait
out
add
test
xlat
div
les
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
call
pop
xchg
jns
fsub
mov
cld
pop
in
pop
iret
adcb
push
loopne
or
xchg
sarb
bswap
out
push
aad
jle
adc
pop
adc
in
xchg
ja
cmp
mov
shlb
loop
mov
insl
ja
xchg
mov
or
insb
lahf
call
mov
fbstp
mov
xor
xor
mov
xor
and
movsl
rcr
pop
xor
or
adc
inc
jge
adcl
sub
loop
add
cmp
jmp
bound
out
cwtl
hlt
and
rcrb
iret
cltd
dec
loopne
inc
pop
and
ret
mov
out
insb
jle
inc
movsl
jle
loop
jecxz
stos
js
xlat
iret
leave
pop
jmp
xchg
sbbb
mov
int3
data16
push
add
mov
test
cmp
sub
pop
pop
inc
in
mov
out
add
push
mov
jbe
dec
xchg
and
hlt
mov
addr16
addr16
adc
inc
scas
jae
movsb
ja
lret
ret
xor
push
pop
and
xor
gs
xchg
mov
and
ds
cmp
jp
lds
push
jge
add
xor
xchg
mov
xchg
mov
insl
xchg
test
ffreep
mov
dec
sub
pop
jmp
dec
dec
int
mov
sbbl
sub
into
cmp
imul
add
je
test
dec
testl
movsb
cmp
les
js
sbb
inc
push
pop
jge
push
lret
in
xchg
ficomps
std
fdivrp
inc
into
aas
dec
std
and
ljmp
cli
aam
rorb
pop
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
mov
je
shl
and
add
nop
cltd
mov
cmp
aaa
es
js
mov
rolb
jbe
add
sbb
pop
sub
push
popa
mov
mov
jp
lock
les
mov
xor
enter
xlat
push
arpl
jp
adc
adc
stc
xchg
jne
push
pop
sahf
pop
aad
sbb
mov
fs
addb
arpl
jnp
sbb
inc
jecxz
push
pop
cmp
out
xor
push
xor
dec
ja
loopne
in
cmc
push
cwtl
das
jecxz
and
subl
in
daa
cmp
and
jmp
out
icebp
pop
jp
mov
pop
daa
loop
sbb
dec
stos
loop
mov
inc
ret
aaa
dec
mov
xor
lahf
rcr
stos
test
aam
and
int3
adc
mov
push
mov
and
and
rcl
call
push
fidivs
pop
jl
dec
xchg
sbb
sub
cmpsb
add
mov
imul
sub
aas
mov
jmp
adc
ss
rcrl
mulb
push
dec
mov
pop
mov
movsl
pop
mov
and
jno
fcompp
loopne
or
fldcw
cmp
out
sbbl
and
xor
loopne
mov
out
test
jl
mov
mov
jecxz
imul
push
sarb
push
mov
and
mov
jae
and
adc
and
pop
scas
xlat
leave
push
ds
popf
lds
inc
je
and
dec
dec
cmp
pop
out
repnz
push
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
mov
cmp
mov
jle
jmp
mov
mov
cmp
xchg
and
cmpsl
xor
mov
outsb
imul
push
out
pop
mov
test
pusha
xor
jb
in
fstps
push
addr16
pop
adcb
cs
sbb
ja
jns
xchg
std
xor
mov
testb
mov
out
jmp
sbb
dec
dec
pushf
or
mov
pop
lcall
mov
dec
out
inc
sub
mov
jae
push
xchg
ret
int
push
dec
in
cmc
sbb
add
movsl
aam
scas
lret
or
push
sbb
push
stos
clc
pop
shll
ljmp
rcll
jno
adc
es
xor
mov
rclb
std
xchg
lods
leave
cmp
fsubrp
das
fimuls
hlt
imul
adc
mov
add
pop
and
sahf
clc
lock
jb
jo
lods
lods
xor
mov
movsb
pop
out
inc
in
adc
je
mov
test
ljmp
je
nop
into
pop
test
lret
xchg
and
push
js
js
or
lret
iret
inc
sub
push
fisttpll
jg
cwtl
adc
loope
pop
or
pop
sub
out
out
out
jecxz
mov
push
test
inc
sbb
push
jecxz
movsl
jl
adc
push
imul
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
xor
stc
icebp
cmp
mov
jle
cltd
cmc
dec
testb
jmp
test
in
mov
jg
les
mov
insl
inc
mov
xor
pop
sbb
add
loopne
shr
stos
mov
mov
xor
dec
push
add
mov
sub
pop
mov
int
dec
in
sbb
repnz
sub
jae
push
loopne
test
mov
mov
or
ss
mov
cli
or
pop
and
decb
ret
inc
ret
aam
stc
repnz
or
push
fsubl
out
and
sub
aaa
cltd
sub
out
idiv
lock
jp
cmp
mov
aam
xorl
ficoms
outsb
int3
outsb
js
jge
and
lcall
add
fnstsw
in
mov
stos
inc
lock
aaa
cmc
push
cmp
cmp
push
sub
inc
dec
jg
rcll
ljmp
test
jecxz
cmp
iret
and
mov
inc
sub
in
hlt
out
mov
pop
adc
pop
sbbb
pushf
or
add
mov
push
sarl
decb
push
pop
aas
sub
js
inc
cmp
fcomi
and
je
das
test
or
adc
adc
push
mov
xchg
sbb
push
dec
hlt
lea
iret
jnp
dec
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
lock
or
jg
jle
pop
notl
inc
pop
cmp
lods
fwait
das
sti
in
xchg
lret
int3
popa
push
shrl
sub
fldl
ret
pusha
pop
mov
scas
loopne
minps
fldt
or
push
sbb
test
pop
jns
mov
in
dec
negl
cmc
push
jmp
mov
xchg
aaa
mov
xchg
or
arpl
sub
js
inc
lret
enter
add
test
ja
or
mov
xchg
fdivrp
jg
cmp
jo
jge
mov
add
in
xor
jns
adc
repnz
lea
jnp
push
xor
insb
mov
xor
into
inc
add
cmc
xchg
xor
repnz
fcomps
out
jg
daa
cs
les
mov
ja
mov
inc
mov
idivl
xchg
decb
ss
fcmovnbe
adc
jae
pop
imul
mov
inc
nop
cmc
fimuls
push
add
cmp
mov
dec
insb
outsb
mov
mov
push
in
push
loope
movsb
pop
sub
adc
jp
cwtl
push
and
lahf
sub
xor
mov
dec
out
xchg
adc
or
int3
lods
lods
xchg
xor
and
lahf
sbb
inc
sbb
lret
lcall
push
mov
ljmp
adc
scas
loope
lods
loop
xchg
add
orl
js
mov
addr16
push
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
aam
cltd
jle
mov
jle
insb
push
dec
mov
or
fstl
jnp
leave
xor
int
loop
adcb
jmp
aaa
jnp
in
push
and
sub
call
mov
repnz
aaa
movsb
push
add
repnz
jae
idivb
imul
addr16
xlat
bnd
test
fcmovbe
lret
mov
add
stos
lods
inc
pop
in
lret
adc
xchg
in
mov
mov
inc
test
in
insl
adc
push
dec
ja
ds
sub
dec
or
mov
push
push
inc
sbb
test
push
scas
insb
in
outsb
mov
adc
xor
jle
inc
rolb
push
sub
and
fstps
mov
dec
adc
lret
mov
add
pusha
cmpsb
and
jno
push
mov
xchg
sub
mov
shll
cmpsl
js
incb
push
loope
mov
xor
jecxz
xchg
lea
push
mov
call
loop
call
mov
or
imul
mov
add
push
das
cmp
call
test
adc
mov
fildl
mov
xchg
pushf
adc
stc
sbb
cli
cld
out
lahf
mov
jnp
jae
testl
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
ljmp
mov
jle
mov
ds
repnz
mul
mulb
and
cli
sub
mov
jne
divb
dec
lret
xchg
nop
fsubrl
adc
or
sbb
pop
lock
jne
xchg
test
inc
pop
push
adc
inc
jl
int
js
dec
fidivrs
cmp
ljmp
ret
call
aam
mov
std
imul
jno
cwtl
mov
popl
aad
icebp
fldenv
mov
faddl
inc
mov
nop
push
movsb
mov
inc
add
sti
dec
fldl
imul
sub
xchg
test
lock
xchg
testb
xor
sub
and
mov
jg
hlt
push
dec
push
les
out
sbb
dec
dec
inc
sbb
push
pusha
sti
popf
loop
nop
clc
js
mov
das
xor
lret
jne
movsl
repnz
mov
sti
loop
rclb
mov
dec
push
inc
xchg
jp
add
in
mov
cmpsl
jae
xchg
mov
ret
lock
sub
add
xchg
loopne
fwait
pop
fwait
clc
push
mov
lods
mov
shrl
push
mov
clc
hlt
xchg
inc
cltd
mov
arpl
sbb
mov
push
fisttpll
adc
mov
in
pusha
pop
mov
addb
jge
mov
aad
out
pop
sbb
aaa
mov
inc
cmp
or
je
add
pop
jmp
je
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
pop
popf
mov
jle
jg
jle
aam
and
lahf
and
xchg
inc
dec
mov
rcll
lea
dec
out
aad
out
aad
jmp
loop
cltd
dec
cli
mov
inc
jle
mov
enter
mov
mov
xchg
or
sub
repz
ret
std
test
sub
mov
cli
and
sti
mov
cmpl
cmp
mov
es
rol
ret
inc
cmp
out
hlt
mov
jns
xor
sbb
mov
or
fcoms
adc
shrb
and
sti
sbb
xorl
mov
dec
dec
divl
pop
jg
xor
inc
sub
test
jle
push
fimull
enter
sbb
mov
inc
jb
mov
mov
cmp
shrb
jns
cmpsb
aad
adc
cwtl
lods
push
mov
push
lret
int3
mov
lods
inc
js
xor
pop
test
lds
sar
xchg
sbb
mov
pop
decb
add
testb
sbb
enter
imul
aad
jno
mov
add
stos
mov
xchg
imul
out
inc
sbb
and
cmpsb
inc
repnz
testb
dec
push
mov
dec
cwtl
aaa
xor
ret
or
lea
ret
mov
gs
clc
sub
ja
hlt
mov
push
push
cld
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
incl
jle
mov
jle
cmpsb
jno
xor
mov
mov
ret
out
sub
loopne
stos
mov
aas
push
insl
sbb
rol
loopne
imul
les
xchg
inc
sbb
rorl
faddl
and
sbb
dec
pop
jne
dec
cmp
sub
jo
lcall
call
add
orl
mov
jl
scas
mov
loop
inc
rcr
mov
add
xor
or
fmuls
add
sub
lcall
xchg
repnz
lods
fiaddl
call
mov
cs
scas
inc
jle
mov
cltd
xor
hlt
lods
lret
jg
dec
addr16
movsb
or
call
orl
pop
mov
cwtl
mov
out
push
shlb
loop
pop
jae
insl
xor
adc
mov
xor
xchg
or
fdivrl
cmp
xchg
shr
fld
push
insl
repnz
sahf
lds
xchg
xor
mov
bound
repz
lds
popa
inc
mov
mov
jg
fimull
mov
aaa
adcb
inc
add
xchg
sub
scas
sbb
push
jp
inc
aam
jg
sbb
jl
mov
sbb
xor
aaa
cmpsb
sahf
rorb
outsl
mov
mov
pop
push
lds
jae
xchg
add
push
test
insl
xchg
aaa
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
push
imul
jle
push
loopne
inc
sub
test
sub
repz
add
add
xor
mov
mov
cmp
jle
filds
jmp
pop
inc
lret
fisubl
cmc
lea
add
ret
pop
dec
stc
xchg
into
popa
add
inc
jmp
sbb
xchg
sahf
cld
jno
imul
push
mov
adc
push
mov
aam
and
outsl
xchg
scas
enter
jg
xor
enter
psrld
mov
pop
insb
pop
mov
int3
aam
dec
movsb
and
ljmp
daa
sbb
xchg
push
es
lock
pop
and
pop
lcall
xchg
mov
int
stc
scas
push
lret
into
jnp
inc
lcall
jl
scas
lods
push
xlat
sbb
clc
sbb
dec
jae
mov
ss
cld
adc
and
dec
cwtl
popa
je
insb
mov
mull
jle
or
lea
faddl
push
mov
fwait
and
mov
adc
testb
cs
xor
xchg
jl
jmp
popa
sbb
aaa
das
pop
mov
sbb
ja
xor
adc
push
scas
in
test
int
insl
or
out
xchg
insb
cmp
sbb
pop
push
xchg
inc
mov
call
adc
les
inc
push
popa
push
pushf
mov
loope
cmp
test
dec
mul
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
pusha
das
mov
lret
leave
enter
sbb
dec
or
cltd
and
adc
test
push
aaa
pop
sub
sub
leave
aas
sub
test
std
push
imul
pop
xchg
js
stos
ror
popf
sub
jl
in
sbb
push
andb
lea
jns
ja
cmc
in
les
xor
loope
jb
sbb
loopne
sbb
adcb
pop
sub
sbb
insb
inc
inc
inc
and
ljmp
jg
loope
fwait
and
push
pushf
decl
stos
dec
leave
jno
or
mov
ret
dec
in
sbb
popf
in
mov
and
sbb
push
jg
enter
lcall
mov
inc
scas
adc
fnstcw
aaa
in
mov
test
pusha
loop
mov
aad
gs
push
or
xor
rorl
aam
loop
xor
fs
mov
xor
gs
push
inc
shlb
mov
ss
jmp
test
mov
push
dec
mov
dec
dec
dec
push
pop
sahf
sbb
or
stos
sbb
mov
inc
daa
and
cmp
jnp
sub
dec
aaa
mov
in
dec
sub
ficompl
inc
insl
xchg
inc
aam
into
jl
sbb
mov
int
inc
data16
push
fstps
outsl
inc
int
sbb
das
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
mov
imul
jg
jle
xor
mov
inc
in
loop
push
adc
sub
decl
push
scas
in
jbe
mov
faddp
cmpsb
mov
cmp
idiv
ljmp
xor
lock
cmp
imul
jmp
lock
mov
ss
lock
shrb
xchg
scas
mov
push
sahf
ja
mov
loope
pop
stos
push
xchg
std
aad
addr16
in
nop
fcoml
sbb
sbb
les
mov
sub
mov
push
inc
pop
mov
dec
push
dec
sahf
scas
jae
mov
sub
xorl
fdivrs
inc
dec
movsl
aas
jmp
pop
cs
lahf
xchg
scas
mov
imul
cmp
xchg
mov
xchg
sbb
push
add
jne
sar
xchg
lcall
mov
mov
clc
push
cmp
and
imul
pop
arpl
ss
pop
xchg
xchg
mov
jle
mov
adc
fucomi
xchg
test
mov
sbb
push
inc
or
jo
lret
dec
sbb
fldt
inc
push
jne
jg
sti
mov
repnz
bound
jo
xor
sti
dec
push
clc
push
loope
stos
or
mov
mov
add
and
addr16
inc
addr16
jp
or
inc
mov
or
dec
std
cmp
or
out
or
adcb
cs
leave
popf
in
inc
lret
and
xlat
mov
in
je
sbb
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
mov
lret
mov
jle
addr16
lea
lahf
cmp
mov
stc
add
les
sub
and
mov
jnp
hlt
call
arpl
movsb
scas
jne
fnstsw
iret
mov
icebp
mov
xchg
in
xchg
sub
cld
in
repz
or
test
jmp
jle
outsl
or
sub
test
add
dec
mov
mov
sbb
and
aas
jecxz
das
lahf
mov
sbb
pusha
mov
ret
or
dec
popa
lods
movsb
js
xchg
ror
jle
xchg
xor
add
pop
ret
pop
fsubrs
push
cmp
mov
stc
mov
enter
test
call
mov
xor
sbb
add
fdivrs
or
mov
dec
ss
sub
sub
lds
xchg
cmp
daa
call
sbb
rcrb
inc
or
cli
repnz
mov
inc
xchg
iret
xchg
adc
pop
mov
fisubs
adc
sahf
aam
pop
add
lea
std
xor
fldt
ret
sub
es
xor
ficoml
fs
inc
es
in
stc
repnz
dec
and
test
out
xchg
fidivs
and
xor
or
jns
in
cmp
sub
sbb
pusha
das
data16
fimull
in
xor
dec
mov
lds
add
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
xchg
pop
rclb
gs
or
cmc
int3
add
divl
aad
nop
cmp
stc
sahf
or
jae
adc
pushf
aad
sbb
mov
pop
push
push
jge
xor
or
lret
cmp
cmpsb
cmc
rclb
xor
adc
xor
stc
inc
in
push
out
add
cmp
mov
cmp
repnz
xchg
imul
push
scas
or
lcall
xlat
out
pop
jnp
and
sbb
stos
fwait
bound
mov
pop
shlb
and
lret
mov
and
icebp
cli
or
cmp
int
cmp
mov
out
adc
frstor
stos
push
push
stc
or
mov
sub
and
in
out
pop
dec
xor
pop
sub
dec
loop
or
aam
std
and
xor
gs
inc
js
ror
decl
sbb
in
xchg
movl
insl
xchg
divb
push
pop
addl
sub
jmp
imul
and
mov
adc
and
leave
mov
cmpsb
xor
push
or
pop
leave
scas
xchg
pop
vmovntpd
or
mov
mov
call
jge
inc
push
mov
jb
fs
mov
mov
sub
jmp
and
xor
in
decb
push
leave
jle
mov
jle
dec
adc
je
test
test
mov
in
jne
lds
pop
ja
pusha
mov
mov
cmp
insl
test
scas
mov
rcrb
jbe
ror
inc
push
test
fs
mov
push
mov
adc
mov
das
mov
add
in
mov
pop
movsl
mov
out
xlat
cmp
jl
and
cmc
das
aam
mov
xchg
mov
orb
das
loopne
mov
sbb
mov
ror
daa
cli
lahf
mov
jge
imul
popf
imul
cmp
fdivl
and
or
and
in
sbb
dec
ret
push
les
enter
arpl
ja
movsl
ljmp
add
push
push
mov
leave
xor
leave
mov
sti
xor
adc
push
mov
scas
js
push
mov
inc
inc
bound
shl
scas
out
shrb
sti
adc
lret
cmp
xorb
test
jecxz
pop
sbb
sar
idivl
in
cmpsb
push
test
xchg
xchg
scas
fwait
mov
inc
xor
rcll
sub
jb
popf
cmp
inc
arpl
cmc
jno
out
call
cmpsb
mov
negl
and
and
mov
orl
mov
loopne
add
and
inc
sbb
and
out
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
mov
jle
jg
jle
sub
imul
mov
test
cmp
sarl
clc
cwtl
adcb
lret
xchg
popa
add
xor
in
icebp
jmp
mov
jp
lcall
xor
daa
test
mov
add
cltd
push
fldenv
mov
cmp
sub
inc
sub
dec
push
pop
adc
mov
daa
push
fwait
pop
xor
lock
ja
insb
pop
aam
outsb
les
mov
jbe
sti
mov
push
push
test
mov
daa
jbe
xor
dec
lds
imul
xchg
out
cltd
call
divl
xor
fcoml
push
push
jns
mov
ljmp
hlt
into
mov
mov
ljmp
jb
loop
add
aas
nop
cmp
aam
ficoml
inc
bound
scas
inc
in
lods
add
mov
ret
iret
out
mov
xchg
mov
push
push
lods
jecxz
nop
mov
imul
cmp
sbb
jb
xchg
leave
notb
jnp
js
shlb
sub
mov
pushf
scas
cmp
in
mov
inc
je
ds
xchg
jb
in
mov
aaa
push
negb
ds
dec
inc
cld
test
pop
pop
jbe
and
mov
test
add
cmp
mov
push
or
jp
add
ss
cld
test
pusha
xor
sbb
xchg
xchg
sub
pop
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
push
nop
mov
jle
jg
jle
sub
nop
xor
xchg
ljmp
lds
in
jnp
loope
in
xor
cmp
lea
inc
jnp
inc
mov
dec
int3
test
or
dec
jns
jecxz
das
mov
cltd
shlb
std
aaa
out
aaa
int3
insb
push
mov
lcall
xor
mov
fisttpl
cmovnp
lret
into
aad
lock
fs
push
ljmp
push
fwait
xor
into
pop
jg
push
cs
mov
mov
sub
insl
inc
jecxz
push
aaa
cwtl
sbb
mov
cli
lahf
sti
daa
imul
test
aam
lahf
sarb
push
loopne
adc
call
fcompl
lds
inc
out
add
sbb
pop
mov
jae
xor
test
lds
jge
mov
sbb
das
mov
and
mov
lods
and
lock
pop
or
xlat
push
push
lahf
arpl
imul
out
fcmovnb
pop
pop
fs
ret
in
add
repz
adc
cmpsb
mov
out
enter
mov
mov
leave
dec
mov
pop
dec
test
arpl
cmc
sbb
cld
popa
add
arpl
sbb
js
push
ds
mov
enter
fistl
push
inc
aam
test
lock
inc
push
push
push
jnp
mov
shll
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
aam
push
cld
mov
jle
mov
jle
aam
jecxz
iret
and
jae
or
adcb
mov
pop
sbb
out
shlb
shll
fsub
lret
shlb
xchg
mov
insb
and
imul
outsl
nop
pop
and
jle
std
jns
sbb
addr16
inc
jne
shl
lods
pop
xchg
cmp
add
inc
xlat
psllq
je
adc
adcb
cmp
or
add
mov
mov
jmp
mov
jge
mov
ret
es
outsl
les
adc
inc
inc
jmp
mov
jbe
mov
and
ja
inc
mov
int3
lods
fistpl
das
mov
sbb
cmp
andl
fs
cmp
stos
fs
mov
sub
cltd
inc
and
pop
enter
mov
add
sbb
cmp
mov
mov
out
cmpsl
test
sbbl
sahf
call
mull
xchg
xchg
orb
loopne
push
cmp
hlt
jle
and
xor
lret
les
jbe
xor
xor
jle
adc
nop
fmuls
add
jp
adc
push
inc
mov
daa
push
stc
adc
xchg
int3
or
lock
jle
outsl
pushf
xor
adc
push
xchg
sub
arpl
xlat
clc
jle
pop
and
mov
fsubl
sbbb
mov
push
mov
sahf
popa
das
mov
les
jle
daa
inc
hlt
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
rolb
dec
and
jg
jle
push
adc
insb
mov
repnz
pop
inc
test
xor
js
sub
dec
fwait
in
adc
xchg
push
or
push
jl
push
pop
shrb
mov
dec
jmp
push
daa
pop
test
mov
pop
and
xor
call
stos
add
mov
cmpsb
xchg
je
fstpl
inc
decb
mov
fsubr
fucomip
xor
leave
cmc
movsb
roll
cltd
out
movsb
xchg
cmovo
inc
iret
out
push
lret
scas
pop
cmp
andl
mov
mov
push
cli
xlat
or
aaa
lods
mov
jae
jle
arpl
dec
push
addb
fldenv
dec
stos
xlat
mov
push
in
daa
pushf
imul
jb
mov
inc
or
lods
pop
std
and
loope
sbb
sub
jmp
or
cmpsl
and
mov
in
ja
sbbl
jae
jns
int3
mov
push
push
push
and
mov
inc
leave
ret
in
cmpsl
or
or
adc
dec
clc
decl
das
dec
lahf
push
cltd
je
and
cmp
stos
xor
insb
add
pop
push
inc
call
out
test
data16
ljmp
push
in
in
aas
ret
jo
sbb
mov
push
scas
into
mov
out
out
pushf
sub
icebp
sub
xchg
out
and
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
dec
xor
jns
sarl
mov
jle
pop
adc
and
sub
mov
stos
sub
mov
popf
cli
lahf
jae
out
or
xor
in
dec
pop
push
hlt
aam
ja,pt
pop
aas
xorl
test
dec
push
xchg
pop
or
mov
xlat
inc
jbe
cwtl
shr
dec
pushf
fadd
subl
out
adc
out
adc
ds
or
ret
sbb
xor
in
jno
and
shl
test
push
sbb
aaa
mov
and
xchg
fwait
and
lods
testb
xchg
push
jmp
lods
aad
stos
mov
and
jne
scas
mov
or
mov
dec
xor
xchg
cld
jbe
lds
or
dec
bound
shr
fcoms
jg
jge
cld
in
sbb
icebp
cmc
or
xor
jecxz
jp
call
pop
sbb
sti
cltd
sbb
and
fdivr
xchg
js
jne
cltd
das
and
es
jp
inc
fistpll
fs
fbld
sbb
lock
xchg
sbbl
kmovb
leave
sub
cli
pop
push
mov
test
test
std
ret
shll
fisttps
pop
mov
mov
nop
jnp
js
mov
jns
lret
mov
hlt
fstl
lcall
shlb
mov
adc
sbb
cmp
cmp
pop
clc
xor
jmp
or
addr16
jne
mov
mov
add
and
mov
jle
adc
push
sbb
xor
sbb
insb
add
inc
inc
cmpsl
hlt
mov
divl
ds
pop
push
js
mov
lods
cs
addl
cmpl
xor
mov
jp
es
fstps
outsb
mov
or
loopne
fstl
bound
inc
push
int
dec
ss
sti
mov
cmp
inc
lods
imul
pop
mov
xor
insb
into
shll
lea
pusha
xor
ds
jg
push
dec
xor
cmpsb
shll
jg
or
sti
push
rorb
dec
insb
add
pushf
lea
icebp
cmp
inc
push
sub
add
lea
push
dec
push
daa
and
jg
sub
xchg
sahf
lret
ss
bndldx
fstpl
test
mov
pop
rol
js
and
mov
ret
orl
iret
or
daa
fists
fwait
pop
sbb
adc
inc
lods
mov
mov
movsl
nop
fmuls
bound
push
xchg
xchg
mov
push
repnz
push
mov
bound
xchg
sub
test
bound
jmp
imul
mov
jp
clc
sahf
into
movsl
or
dec
insb
xor
imul
addr16
mov
scas
test
jle
jnp
inc
cmp
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
scas
add
pop
fdivrl
jge,pn
jle
lods
daa
popa
rcrl
sbb
je
stc
ja
stos
cwtl
repnz
mov
je
adc
pop
push
push
ds
cld
sbb
mov
stc
sahf
in
lahf
outsb
push
aad
je
jmp
cmovne
shrb
sbbl
adc
leave
mov
popa
pop
jb
lret
xor
ljmp
mov
sub
enter
push
aaa
inc
rorb
outsb
mov
mov
popa
lods
and
adc
mov
addr16
mov
aas
mov
call
pop
xchg
out
negl
push
jno
in
lock
ret
es
xor
loopne
leave
or
mov
cmp
xchg
sbb
dec
dec
push
out
out
xor
jp
mov
test
cwtl
sti
and
or
test
jle
div
sbb
imul
dec
inc
aaa
adc
sub
fidivs
jecxz
outsl
sbb
mov
mov
push
rcr
fdivrs
dec
adc
xchg
ja
mov
rcrl
repnz
int3
dec
mov
mov
ja
sub
or
decl
or
inc
lock
dec
pop
fwait
sub
out
sub
mov
ds
mov
dec
xchg
aaa
outsb
mov
cmpsl
cli
out
loopne
cmpsl
in
sbb
xlat
xor
add
mov
out
mov
lcall
pop
lods
sar
loopne
push
scas
jae
stc
loope
cli
ds
mov
push
cmp
cmp
jle
push
shlb
push
in
adc
decb
mov
jmp
rcrl
inc
jl
cmpsl
in
xchg
jne
insl
pop
cli
out
jns
cli
into
nop
jno
lods
lahf
insl
xchg
inc
fadd
sbb
jne
mov
es
out
imul
scas
out
adc
mov
jmp
andb
add
or
movsl
or
les
dec
call
ss
push
mov
and
aam
and
pop
sbb
jno
dec
mov
ljmp
mov
cmp
pop
enter
arpl
fmull
mov
mov
pushf
ret
push
lret
jp
pushf
into
adc
insb
xchg
fnsave
into
mov
jp
pop
mov
ret
add
inc
aam
popf
xchg
hlt
push
mov
dec
push
fsub
divb
sub
sub
inc
push
mov
cld
or
fwait
sbb
pop
ja
fwait
cmpsl
inc
add
sub
mov
add
subl
daa
mov
mov
loopne
fildl
lcall
mov
test
scas
sub
dec
push
jge
std
push
test
sti
add
jae
mov
push
xlat
cmp
mov
push
mov
psllq
movl
lock
cwtl
mov
cmc
mov
mov
inc
sahf
adc
pop
cmp
cltd
movsb
imul
sbb
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
cmc
fbstp
fdivrs
jge,pn
jle
sbb
mov
xchg
mov
jae
push
lea
xor
sbb
in
inc
pop
xchg
repnz
cmpb
popf
pop
roll
xchg
adc
in
adc
stos
clc
setl
add
lret
in
xlat
sub
shlb
jnp
jp
or
xchg
cld
pop
jbe
rclb
add
les
cmpsb
mov
mov
scas
jp
stos
lahf
int
fwait
sbb
xchg
out
out
aaa
add
xor
adc
aaa
lret
dec
fs
adc
fsts
mov
fildll
test
mov
pop
xlat
js
cmp
jb
xchg
xchg
les
jmp
dec
negl
cmc
cld
sbb
fs
std
ljmp
dec
pop
adc
mov
inc
data16
je
jp
mov
out
mov
inc
sbb
dec
adc
cs
push
sub
das
inc
inc
mov
cmp
push
mov
js
xlat
xor
icebp
fsubl
jl
and
mov
gs
lea
sub
mov
insl
mov
xchg
mov
pop
sub
push
call
popf
rcrl
adc
mov
jp
mov
mov
xor
xchg
adc
mov
push
mov
mov
scas
out
xchg
insl
or
sbb
rorb
xchg
mov
fwait
jecxz
cld
cmp
pop
jns
push
mov
imul
jge
push
loop
out
nop
ljmp
cltd
data16
movb
sub
cmp
repz
push
popa
and
push
mov
out
sahf
jg
arpl
in
inc
or
xchg
mov
aad
mov
ljmp
sbb
lret
pop
stos
lcall
repnz
pop
push
fdivs
ljmp
inc
jnp
daa
scas
lahf
pop
and
mov
mov
push
into
int
add
filds
jnp
roll
xor
out
mov
adc
ds
mov
and
xchg
insb
mov
dec
cld
inc
push
sub
mov
cmpsb
push
pop
or
adc
iret
movsb
jbe
dec
lds
cmp
pop
adc
imul
push
shll
pop
clc
push
xlat
or
push
xchg
pop
xor
jne
bound
pop
scas
loope
push
je
push
aam
add
or
mov
in
hlt
mov
mov
push
out
push
in
ret
adc
insl
xchg
add
orl
rcl
sub
scas
push
and
pop
jp
mov
stos
sub
in
or
insl
imul
data16
add
mov
adc
testb
sbb
les
add
mov
push
pop
cs
jb
in
mov
int
lds
fimuls
push
xorl
add
push
or
int3
popa
hlt
jno
jae
and
rcrl
into
cmp
jle
jge,pn
jle
popf
jae
xchg
mov
dec
or
addr16
pushf
push
lods
cmp
lods
push
into
jmp
pop
pop
push
or
push
icebp
jns
pop
sti
enter
mov
push
popf
or
aam
push
or
nop
stos
xchg
mov
icebp
mov
pop
out
adc
in
sbb
ja
mov
in
xchg
pop
xchg
pop
rcrl
stos
pushf
cmpsl
dec
adc
pop
stos
clc
mov
lds
sub
and
pop
cs
mov
push
jmp
pop
xchg
loop
push
pop
daa
clc
ja
adc
je,pn
icebp
and
or
and
cmpsb
pop
stos
popl
ret
shrl
ss
inc
fisttps
mov
fdivrl
sbb
and
mov
ljmp
icebp
imul
repz
in
mov
sub
ds
xchg
aam
push
dec
mul
xchg
mov
jge
sarb
xchg
sub
push
mov
imul
xor
subl
mov
dec
test
push
cmc
sarl
stos
insl
pop
jl
xlat
xor
rol
movsb
push
xchg
mov
sub
xor
sub
inc
sbb
mov
sub
mov
in
aaa
inc
mov
in
loope
xchg
add
lret
test
mov
push
loop
sub
adc
ret
in
aam
repz
mov
sbb
jge
cmc
jle
sub
dec
test
dec
inc
mov
add
dec
dec
enter
mov
daa
nop
decb
out
pushf
lcall
rcr
fdivrl
sub
outsb
shld
mul
mov
sbb
mov
mov
pushf
mov
sbb
or
and
adc
mov
jl
xchg
in
adc
xlat
cmp
fidivrs
mov
fsubs
out
loope
mov
cmp
pop
jg
ret
adc
cmp
cltd
pop
xchg
adc
in
jmp
add
aam
push
pop
mov
dec
cmpsl
add
jmp
mov
les
imul
xchg
outsl
push
ljmp
inc
fwait
and
lret
test
push
ljmp
aad
stos
sbb
decl
xchg
cld
jo
fildl
xor
xor
rcr
fnsave
imul
movsl
repz
repz
test
adc
arpl
mov
orb
in
sub
fdivrl
pop
jae
adc
push
cmp
es
sbb
mov
xchg
pop
test
popa
push
out
test
dec
sbb
xchg
test
insl
pushl
loope
xor
dec
inc
jne
in
mov
aaa
cmp
pusha
mov
sbb
and
sbb
mov
sbb
insl
sub
popa
xchg
pusha
push
fldcw
jmp
or
shll
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
cmc
sahf
jmp
jge
jle
cltd
shll
dec
push
cmp
mov
and
pop
pop
testl
pop
clc
fwait
mov
mov
dec
sbb
fstl
decb
inc
and
mov
adc
scas
rcr
nop
mov
pusha
and
icebp
rcll
lret
ret
mov
sbb
test
push
gs
hlt
jbe
popf
mov
inc
add
or
xchg
push
pop
cmp
popf
scas
adc
add
hlt
mov
stos
xchg
ds
bound
inc
jb
jb
cmc
jl
push
insb
xchg
mov
xchg
push
sub
adc
movsl
mov
adc
roll
cmovl
mov
xchg
and
lds
ficoms
lret
adc
popf
lahf
jb
test
sub
inc
lods
push
enter
mov
mov
cmp
mov
pop
dec
jne
mov
and
lock
mov
sub
ss
cmp
je
stos
sbb
leave
sbb
mov
cmp
mov
std
notb
mov
mov
and
push
cmp
testb
push
outsb
mov
mov
test
stc
xor
cmp
inc
add
jns
sub
cld
or
outsb
mov
loope
hlt
mov
pop
mov
cmp
inc
mov
int3
in
fsubs
or
mov
xchg
test
pop
adc
imul
lret
test
sbb
call
add
xorb
test
ret
add
push
sub
mov
sbb
jnp
lret
sbb
pop
pop
push
inc
xchg
popa
xor
pusha
and
es
das
add
mov
push
jb
dec
mov
int3
mov
mov
stc
mov
lods
mov
scas
popf
dec
test
imul
mov
dec
stos
std
out
pop
loopne
push
int
movsl
and
mov
aas
and
cmc
or
in
xchg
mov
mov
push
and
mov
jns
jnp
mov
loopne
lods
adc
das
lcall
cmp
dec
push
mov
test
mov
test
sahf
add
pop
fsubp
fs
pop
push
xchg
inc
cmp
mov
fmull
icebp
push
pop
jecxz
pop
cmp
xchg
push
divb
inc
cmp
add
mov
icebp
jb
leave
into
xchg
clc
scas
sbb
stc
mov
ljmp
and
dec
pop
sub
out
or
mov
sahf
aad
lcall
mov
divl
mov
fucom
and
pop
in
movsl
pop
mov
xorl
cmpsl
add
add
push
sub
mov
cltd
mov
outsb
mov
data16
jl
xchg
fwait
inc
and
inc
lcall
fwait
adc
mov
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
add
jge
jle
test
mov
fildl
jle
rorl
sahf
xorl
std
push
dec
subb
sti
inc
dec
adc
jb
pop
out
pop
add
scas
dec
lods
shrb
outsb
fldcw
loopne
aam
mov
push
movsl
movsl
pop
xor
mov
out
hlt
or
mov
jns
loope
mov
push
mov
dec
data16
add
mov
mov
ss
cmc
push
or
jo
cli
and
out
hlt
jmp
sbb
push
out
iret
scas
fidivs
out
cmp
icebp
xchg
or
fisubs
xor
pop
mov
mov
in
mov
in
push
nop
test
fincstp
pop
adc
lock
push
pushf
sbb
mov
xor
fldcw
movsb
in
jle
out
push
sub
push
mov
leave
add
jno
mov
or
add
ljmp
cmp
xchg
fucomp
les
sbb
dec
loop
cmp
xor
or
js
or
leave
enter
pop
jmp
inc
jne
sahf
js
test
out
adc
adc
sbb
jbe
movsl
rolb
pop
mov
adc
xor
ja
jns
mov
push
push
pop
mov
lret
repnz
cmc
in
mov
mov
in
push
rcrl
adc
push
adc
les
xchg
fcoms
lock
jl
inc
dec
dec
popa
fcom
xor
fisubl
arpl
addb
or
imul
les
sahf
add
cmp
out
push
icebp
shl
adc
push
insb
arpl
addr16
pop
lret
ja
xor
insb
sub
shr
add
cwtl
mov
stc
ss
mov
jge
mov
iret
iret
cmp
cmp
sbb
sub
mov
jns
bound
add
kmovw
data16
mov
adc
lock
cmp
inc
gs
out
xorb
pop
daa
jge
aaa
in
gs
add
daa
gs
xlat
jp
arpl
sub
frstor
push
hlt
mov
rcl
lret
mov
pop
pop
insl
push
xchg
sbbb
jmp
andl
pop
push
je
mov
imul
jecxz
imul
mov
mov
ja
pop
jae
ret
je
xchg
es
mov
sub
xor
mov
push
or
add
in
jno
sti
fidivl
stos
inc
jne
pop
ficomps
and
in
mov
mov
xor
inc
neg
pop
adc
psubd
lahf
pusha
rclb
xlat
dec
push
ret
lret
mov
rolb
inc
stos
add
push
jnp
inc
lock
mov
mov
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
into
pop
jnp
dec
in
jle
jge,pn
jle
nop
push
adc
adc
jbe
and
fcmovne
and
mov
inc
cmpsb
push
daa
adc
inc
xor
outsb
or
dec
fsubr
sti
xchg
jb
ret
push
lahf
cmpsl
fmul
out
cmp
shlb
inc
enter
incl
dec
pop
lahf
sub
out
mov
popf
ja
mov
imul
ret
ret
test
xchg
xor
hlt
es
je
and
add
dec
jb
cmpsb
insl
and
push
inc
add
cmp
repnz
or
cmp
xor
lret
popa
movsb
xchg
call
sbb
mov
pop
loopne
incb
js
lcall
shll
jno
lret
sub
shlb
lret
jge
out
adc
pop
jb
jae
enter
mov
mov
push
jmp
or
lret
lea
mov
adc
push
in
fdivs
rorb
int3
mov
sub
or
jg
idiv
nop
dec
or
or
cmp
mov
inc
faddp
mov
faddl
or
mov
nop
icebp
out
out
sub
repz
dec
out
in
imul
or
mov
jmp
mov
xor
cmp
js
in
inc
or
sbb
jae
mov
leave
cmp
mov
mov
jge
sbb
insb
ficoms
dec
mov
enter
call
jne
pop
dec
cmp
cltd
push
and
ret
jbe
jns
mov
mov
mov
les
inc
pop
stc
cs
xor
push
popfw
add
dec
lods
iret
out
loop
cmc
xchg
mov
sub
dec
xchg
ja
add
scas
mov
stc
sbb
sub
xlat
xchg
jnp
inc
add
call
xlat
xor
cmp
xchg
cmp
popf
add
xchg
dec
dec
pop
aas
hlt
pop
dec
mov
ds
mov
mov
mov
movsb
bound
push
repz
sbb
in
jle
jno
inc
cmpsb
cmovbe
cmc
clc
inc
mov
mov
out
xchg
sbb
movsb
mov
into
inc
inc
and
cld
pusha
mov
cli
jo
dec
rclb
scas
pop
flds
mov
cli
scas
mov
mov
xchg
lret
and
dec
imul
mov
xor
dec
mov
insl
jbe
jbe
inc
add
pop
mov
ret
pop
insl
xlat
cmp
mov
sahf
sub
fstpt
push
or
mov
mov
aad
out
std
aas
inc
add
notl
out
xchg
lahf
leave
lods
pop
inc
cmpsl
xchg
aaa
mov
cmp
sbb
repz
mov
pop
inc
and
pop
adc
dec
addr16
xchg
push
fwait
loop
pop
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
call
jle
movsb
inc
iret
sahf
pop
lea
shll
jns
push
lock
ds
arpl
or
or
xor
pop
pop
inc
pop
mov
mov
fistps
subl
push
inc
and
jp
lret
sub
add
mov
cld
jg
mov
mov
mov
mov
sub
insb
add
dec
xor
jno
bnd
sub
pop
dec
add
add
loop
std
sub
in
scas
xchg
mov
push
rol
sub
or
cltd
mov
in
jae
push
mov
mov
jge
cli
out
mov
pop
sti
pushf
lret
leave
mov
arpl
mov
stos
int3
sbb
and
gs
in
arpl
pop
scas
cmc
int3
shl
out
imul
rcll
lock
mov
sarl
mov
loop
mov
rcrl
fiaddl
decb
xchg
sub
mov
add
jecxz
push
mov
mov
sti
sbb
mov
pmulhw
insb
movl
arpl
into
cmpl
mov
pop
gs
dec
dec
rcrl
sbb
ds
pushf
sbb
aad
jbe
mov
add
and
mov
lret
aaa
cwtl
jno
jmp
aad
outsl
cmp
cmp
xor
xchg
jecxz
popf
push
fnstcw
stos
mov
push
sub
ljmp
jmp
xchg
mov
mov
add
lea
loopne
cmp
add
rcrl
ja
insb
jns
mov
mov
adc
sbb
lods
iret
dec
insl
faddl
mov
into
push
fsubrl
adc
dec
jbe
ss
add
sbb
mov
xor
sub
scas
ret
add
dec
cli
in
xlat
scas
test
pop
mov
add
cmc
or
fs
sub
jp
arpl
mov
pop
xchg
jo
mov
mov
stos
fmul
cmp
adc
js
inc
stos
adc
popf
pop
xchg
add
rcl
add
sbb
into
jg
mov
pushf
sbb
imull
jle
adc
jae
cmp
push
in
pop
addr16
bound
push
outsb
into
loope
xor
repnz
inc
jae
mov
aaa
imul
lods
xlat
jp
adc
jbe
inc
cmp
sub
stos
add
hlt
mov
jo
xlat
nop
dec
cltd
in
popf
sub
int3
aam
and
sub
add
loopne
cmp
mov
mov
punpckhbw
and
sub
sbb
lcall
push
adc
push
pop
rolb
xchg
xchg
cmpsl
sub
sahf
rcll
lea
imul
jge
dec
lret
inc
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
xchg
ret
idivl
jge,pn
jle
mov
imul
adc
inc
icebp
and
fmull
adc
dec
sub
fs
push
js
push
mov
ljmp
and
cltd
cmpsb
xor
inc
int
push
push
sub
int
sub
cmp
jnp
into
ror
mov
and
xor
xchg
inc
aam
jmp
mov
insb
dec
jo
dec
xchg
dec
fwait
inc
dec
lods
mov
repz
shll
add
sbb
popa
cmp
cld
or
insb
call
sbb
loopne
ljmp
cmp
xor
pusha
jecxz
dec
push
ret
push
popf
lods
pop
pop
adc
in
inc
push
icebp
aad
push
ja
rorb
in
lds
mov
mov
lea
push
pop
pop
incb
aas
add
in
les
pop
pop
ds
jnp
sub
cmpsb
fcoml
shl
mov
sub
ja
dec
or
mov
clc
jmp
lods
and
les
popf
bound
test
jne
repnz
pop
insb
cmc
push
lahf
pop
jb
sub
in
fldcw
pop
imull
jb
out
movsb
xor
jns
cmp
pushf
into
jmp
xchg
sahf
les
lret
arpl
ljmp
test
mov
mov
call
mov
inc
cmp
cmp
inc
xlat
cmpsb
adc
inc
stos
add
mov
mov
adc
dec
js
cmp
mov
push
pop
adc
inc
adc
jl
xor
and
push
daa
mov
jp
adc
fs
push
int
adc
imul
sbbb
jl
jg
fs
jb
push
sbb
jg
rcr
clc
test
push
sbb
mov
jno
mov
mov
nop
mov
pop
pop
fsts
mov
movsb
scas
mov
adc
adc
shrl
test
ror
fwait
inc
lds
jbe
stc
imul
pop
fisttps
fistps
jns
popf
push
sub
jle
insb
pop
mov
cltd
cmc
xchg
mov
outsb
mov
xor
movsl
jae
push
fwait
cltd
sub
adc
jnp
clc
sbb
or
decb
data16
mov
push
push
movsl
pop
mov
repz
sbb
xchg
add
adcb
and
cmp
xor
pop
popa
stos
insb
pop
inc
push
outsb
push
push
call
int
xor
stos
cmp
jge
aad
lret
cmpl
xchg
dec
fimuls
insl
aam
inc
outsb
fidivrs
push
mov
in
mov
aaa
int
pushf
pop
cmp
dec
mov
mov
push
jle
ret
sub
inc
mov
lret
push
jnp
iret
sarl
aam
fisubrs
loop
inc
cmp
repz
cltd
aad
mov
push
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
daa
mov
jle
jge
jle
push
and
sbb
jecxz
idivl
jge
push
test
outsb
lahf
pushf
jo
loope
in
test
lods
inc
daa
andb
aam
das
mov
mov
xchg
add
ljmp
xlat
push
xchg
data16
pop
push
jle
mov
mov
push
cmpsb
push
and
mov
das
add
out
iret
jle
in
lea
orl
push
xor
fistpll
mov
incb
iret
aad
cmp
xor
mov
push
pop
cld
lods
sub
movsw
dec
in
or
dec
cmp
popa
hlt
adc
jg
int3
cmp
pop
mov
rorl
mov
jle
aam
xor
inc
cmovnp
xor
mov
jo
pop
mov
sub
popf
or
sbb
int3
jge
aad
dec
adc
sbb
push
sahf
addb
cwtl
pop
mov
in
adc
mov
cwtl
sbb
and
mov
sub
orb
and
rclb
pop
repnz
call
fcmove
jle
scas
pop
mov
pop
add
inc
mov
and
mov
lahf
stos
test
sbbb
mov
cmpl
fucomp
stos
lcall
push
inc
dec
xchg
cmp
repz
mov
js
cli
repnz
add
mov
cmp
xor
dec
ret
cmp
xchg
gs
add
div
jo
out
test
cmp
adc
xor
xchg
sbbb
mov
cwtl
rcrl
inc
rorb
cltd
mov
mov
dec
add
mov
loop
aaa
adc
mov
cwtl
test
jo
jnp
sarl
test
pop
mov
shrl
ror
xor
enter
push
mov
mov
inc
pushf
jae
fs
out
mov
bound
xchg
cmpsb
outsb
dec
mov
testl
xor
xor
xchg
mov
jno
mov
pop
leave
ss
jae
xchg
bound
cmp
pushf
cmp
push
xor
mov
lret
xchg
mov
xchg
or
imul
jge
push
or
xor
pusha
pop
pop
scas
or
data16
popa
mov
pop
push
mov
fxtract
scas
mov
iret
in
in
pushf
add
fistpll
mov
lds
cmp
arpl
out
fbld
xchg
out
push
ss
inc
in
push
jp
xor
gs
imul
inc
mov
fisubl
jge
rcrb
lods
loopne
xchg
xor
shl
loope
roll
sub
xchg
push
mov
test
leave
cwtl
stc
inc
sub
or
je
push
insb
xchg
pop
shll
push
mov
adc
sti
inc
lock
out
pop
imul
mov
xor
or
mov
sub
jecxz
sbb
xchg
dec
inc
popf
test
dec
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
dec
adc
icebp
mov
jle
jge,pn
jle
mov
xchg
adc
test
mov
push
and
mov
pop
fdivrl
pop
xchg
int3
pop
shl
lret
inc
js
outsb
pop
pop
cmc
push
mov
idivb
fidivl
ret
int
cmpsl
or
pushf
push
mov
loope
stos
adcl
and
or
adc
outsl
lods
xchg
shr
lea
xchg
and
movsb
push
repnz
sbb
nop
xchg
or
aad
add
push
aas
mov
imul
sbb
push
cmp
shl
push
inc
movsl
fdiv
push
mov
mov
push
loope
sbb
xchg
and
lods
and
cmp
add
adc
shlb
add
addr16
inc
inc
xor
adcl
int3
js
fmull
jmp
in
les
test
inc
mov
mov
push
enter
ljmp
pop
jb
lcall
fidivrl
repnz
dec
mov
popf
cmc
out
sub
mov
cmp
mov
adc
lods
fcoml
mov
dec
cmovge
movsl
clc
in
stos
mov
shrb
aas
dec
rcrb
fmuls
dec
xlat
insl
inc
or
imul
fs
popl
push
or
lods
push
jo,pt
lahf
dec
push
lahf
rcll
add
push
mov
adc
add
roll
shlb
scas
push
data16
push
dec
jns
out
xchg
fdivl
inc
int
popf
lahf
js
mov
add
push
mov
sub
shll
sti
enter
push
out
mov
jl
mov
lds
mov
repnz
mov
ficomps
fwait
adc
pop
cltd
test
popf
xor
fiaddl
icebp
add
xchg
sub
and
mov
sub
loope
cmp
adc
mov
push
popa
movsbl
push
int
cld
add
and
pop
out
jo
mov
stos
js
xor
daa
or
and
add
dec
jg
lahf
xchg
push
inc
push
in
cli
je
jmp
inc
clc
les
not
xchg
sub
mov
sbb
push
pop
nop
fcoms
add
or
sub
and
sub
push
inc
mov
rcrl
sbb
stos
xchg
mov
rcrb
loope
sbb
sbbl
inc
fwait
lods
das
fidivs
dec
sbb
fsubrs
lods
loopne
int
hlt
pop
aad
xchg
add
stos
pusha
cmpsl
xchg
cmpsl
add
xor
stc
mov
loopne
fs
scas
inc
or
mov
sbb
xor
add
dec
xchg
jle
and
out
and
cmc
cmpsl
jb
je
adc
sub
xchg
cltd
adc
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
mov
cld
jle
jge,pn
jle
dec
outsl
jmp
jbe
lea
repnz
xchg
mov
jno
adc
inc
add
sub
xchg
or
push
orl
pop
out
push
test
idivl
mov
int
jmp
mov
pop
ret
dec
popa
push
cmp
and
imul
add
xorb
xlat
cmp
mov
movsb
sbb
fisttpl
add
js
jle
subl
mov
inc
fdivs
cltd
loope
mov
scas
movsl
mov
add
scas
and
add
pop
gs
dec
stos
bound
int
call
sbb
mov
jnp
sub
out
pop
or
mov
jle
fnstsw
dec
jns
xchg
mov
stc
mov
dec
flds
add
jnp
daa
jo
ljmp
mov
popf
inc
movsb
cmpsb
add
mov
add
movsb
inc
cli
outsb
push
mov
inc
js
pop
push
pushf
arpl
push
and
cs
mov
clc
int3
ret
push
mov
ret
sub
js
xchg
ficomps
adc
bound
add
ljmp
pop
leave
mov
rcll
int3
mov
pop
mov
into
out
bound
lret
movsb
mov
mov
das
orl
pop
push
popf
cmp
bound
cmp
ljmp
mov
xchg
inc
nop
jne
sbb
ret
mov
xchg
jmp
clc
push
fsts
int3
je
jnp
xchg
jl
adc
or
movl
cmp
cmc
pop
inc
and
pop
cld
scas
jae
pop
test
pop
adcl
mov
xlat
cmp
fcompp
add
sbb
or
sahf
xchg
mov
int3
sub
mov
xor
arpl
arpl
inc
jo
mov
popa
dec
dec
inc
icebp
sub
and
testb
mov
test
mov
sbb
shll
xor
push
dec
xchg
xchg
push
in
cmpsl
testl
cmp
pop
mov
cltd
xor
push
pop
lods
mov
inc
lahf
dec
pop
add
cs
outsb
mov
sbb
mov
sarb
sub
push
sub
push
dec
movsb
push
ss
lods
adc
pop
push
sahf
clc
jg
and
pop
mov
push
sub
push
xchg
lret
lds
cmp
xchg
sbb
inc
jne
xor
xchg
dec
roll
mov
sbb
lret
popa
sbb
xchg
lock
push
test
inc
mov
jle
clc
mov
cmpsb
test
in
push
daa
repnz
xchg
jecxz
dec
push
push
rcrl
xchg
stos
jp
adc
sbb
out
dec
jae
out
popa
cld
jae
dec
and
dec
xor
fisubrl
aaa
xor
cmp
dec
mov
mov
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
mov
sti
jle
jge,pn
jle
shll
test
outsl
enter
push
loopne
xor
pushf
ss
jae
dec
leave
movsb
mov
sub
sahf
dec
shr
lods
fidivrs
fs
or
jne
negb
into
gs
addr16
sub
and
je
arpl
out
rcrl
fs
cmp
adc
jmp
inc
jb
iret
lods
push
lcall
mov
mov
movsl
mov
nop
test
dec
and
js
insb
add
arpl
enter
or
push
push
add
popf
mov
and
sub
rcrb
lahf
std
imul
imul
iret
push
pop
cmp
push
inc
pop
lods
pop
push
xor
loope
sahf
inc
out
pushl
mov
popf
sbb
arpl
push
dec
mov
rcl
inc
addl
dec
mov
add
setle
adc
sub
inc
mov
push
cmpsb
inc
fidivrs
inc
push
jne
mov
lahf
cwtl
xchg
sahf
sbb
or
mov
adc
mov
in
or
mov
fnstcw
pop
int
mov
push
loopne
enter
das
ret
lds
push
fsubp
inc
mov
xor
lcall
inc
clc
add
pop
dec
mov
ds
mov
jne
mov
aad
and
popf
dec
lret
xchg
mov
je
pop
xlat
mov
xchg
add
test
sbb
xchg
mov
xor
fdiv
clc
add
and
pop
out
dec
imul
add
test
inc
add
cwtd
mov
ret
in
cld
adc
dec
adc
cmp
sub
sub
es
stos
jg
xlat
sub
and
and
inc
stc
pop
mov
add
push
cld
fisttps
cmc
jle
sbb
xchg
fwait
inc
inc
test
jp
into
ret
cmp
fnstenv
dec
pop
xchg
ror
push
std
xchg
sub
int
cmp
aad
in
add
jmp
adc
out
mov
js
or
and
adc
sbb
clc
stos
jno
loopne
iret
mov
add
fcomp
pop
filds
repz
mov
sbb
xlat
les
jl
shrb
orl
inc
sbb
pop
int3
nop
xor
dec
lock
je
aaa
sti
cmp
mov
std
movsl
sqrtps
std
fnstsw
adc
in
dec
cs
je
push
sub
arpl
xor
lret
jae
sub
popf
jo
cs
test
popa
stos
mov
add
pop
into
push
mov
pop
jecxz
shl
dec
xor
cmp
fs
cmpsl
jne
fmulp
pop
cwtl
inc
adc
jl
stos
daa
arpl
dec
lods
repz
scas
loope
inc
pop
xor
inc
neg
pop
xchg
std
popf
es
adc
sbb
xor
pop
in
lahf
inc
dec
enter
lds
jge
xor
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
jns
xor
xchg
jge,pn
jle
add
inc
xor
push
cmpb
fucompp
xor
pop
pop
roll
pop
cmpsl
xor
rcrl
pusha
dec
loopne
and
mov
loop
add
movsl
push
jmp
cmpsl
jmp
fcmove
inc
sar
xor
loopne
fwait
iret
test
pop
inc
dec
mov
pusha
movsb
mov
cli
insb
test
pop
addr16
cmp
push
pop
adc
adc
pop
jb
push
hlt
mov
and
jg
xor
stos
ja
pop
out
xchg
ds
daa
mov
and
xchg
cs
lahf
cmp
js
sbb
push
pop
imul
push
xchg
sahf
adc
jge
sub
ret
outsb
or
imul
add
scas
lcall
movsl
xor
jle
test
lret
mul
std
repz
popa
loopne
fisubl
and
es
cmc
sub
dec
mov
pushf
cmp
jae
ffreep
push
das
dec
jnp
enter
cltd
mov
lods
push
fnstenv
jp
sub
js
imul
aas
dec
cmpsl
aas
es
das
mov
jo
ror
int
xor
cmp
bound
sub
leave
arpl
cmp
shl
inc
add
icebp
cmp
mov
nop
jl
pop
test
popf
pop
icebp
bound
jnp
push
sub
adc
or
xchg
neg
out
adc
int
xchg
mov
daa
and
mov
insl
lods
mov
mov
push
mov
bound
pushf
repnz
inc
xchg
add
sub
push
test
jno
inc
sub
cltd
in
mov
cld
insb
lock
pop
orl
push
pop
jno
fxch
insb
sarb
ret
sub
push
mov
fwait
cmp
and
pop
sub
or
and
jbe
addb
sbb
scas
sti
insl
into
aam
mov
andb
imul
scas
push
xchg
fsqrt
pop
sub
rcll
or
mov
ljmp
xor
fwait
add
scas
imul
out
rolb
mov
into
lods
sub
pop
test
lea
cmpsl
pop
mov
leave
data16
lods
dec
push
dec
sahf
test
dec
call
push
pop
sub
popf
mov
test
outsb
leave
sub
mov
in
xor
adcl
test
jmp
mov
rclb
aam
inc
hlt
mov
cmp
mov
nop
add
insl
dec
add
xchg
and
xor
sub
jl
inc
mov
mov
sti
sbb
mov
jmp
shlb
int
jnp
mov
jmp
mov
loope
jnp
sbb
xor
std
push
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
in
push
hlt
leave
cmpb
jge
jle
nop
and
orl
test
or
pushl
mov
sub
out
out
xor
pop
lret
je
imul
insb
ret
hlt
icebp
rcr
jl
loopne
push
dec
orl
jb
sbb
xor
stc
and
insb
loop
jg
and
cmp
fcomps
pop
divb
jnp
stos
lret
test
out
xor
mov
mov
lcall
push
push
sub
outsb
in
mov
insl
ffree
jg
jb
mov
pop
icebp
repnz
test
sub
mov
sti
mov
mov
inc
ss
loopne
or
cmp
out
xchg
in
fldenv
dec
fidivs
pushf
push
and
xchg
dec
add
repz
and
xor
jne
pop
dec
into
adc
imul
dec
or
fwait
stos
mov
lcallw
popa
rcr
xchg
aas
clc
iret
inc
sbb
push
arpl
aaa
lea
stc
adc
dec
int3
adc
orb
pop
or
iret
cmp
xchg
adc
insl
fcomp
outsl
mov
call
int
sbb
pop
lret
mov
in
mov
xor
cmp
stos
rcll
sahf
dec
arpl
pop
cpuid
mov
jne
out
and
out
fistps
sbb
in
inc
jbe
hlt
outsl
mov
adc
cmp
pop
cmp
xor
push
sub
xchg
imul
lock
jne
or
lea
mov
in
dec
ss
aam
test
imul
andb
and
imul
cmp
mov
cltd
dec
js
cmp
push
daa
jmp
pop
inc
cmpsl
mov
sbb
xchg
shlb
cmc
xchg
or
fsubr
mov
ror
mov
pop
pop
mov
repnz
pusha
gs
gs
loopne
gs
cwtl
or
jp
xchg
inc
xor
add
movsl
int
jbe
imul
imul
or
fsubrl
roll
lahf
pop
xor
add
jle
xor
negl
dec
arpl
push
push
fisttps
dec
dec
adc
in
decb
dec
adc
cmp
shr
jmp
pop
rcll
mov
lods
stos
adc
lahf
xchg
mov
in
scas
add
lds
ficoms
add
mov
into
in
shr
lods
in
sbb
or
add
pop
push
rolb
inc
xor
cs
pop
add
scas
jg
push
cmpsl
test
aam
shl
pop
icebp
push
pusha
adc
out
mov
cld
aas
into
leave
or
xchg
dec
mov
sbb
mov
xchg
mov
mov
out
push
pop
cltd
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
outsl
stc
cmpl
int
push
lods
fisubrs
mov
ds
xchg
push
dec
mov
shll
cmp
ss
pop
hlt
push
sahf
cmp
cmp
fstps
in
dec
cs
mov
std
fcomip
xor
outsl
or
dec
and
ja
xor
jmp
imul
sub
das
pop
inc
mov
in
sbb
inc
repz
lcall
aad
movsb
lahf
adc
dec
pop
mov
cs
aas
add
ret
testb
aam
ficoml
iret
mov
aam
fistpl
orb
sbb
jae
int3
addl
call
stos
xor
mov
jnp
rcr
loopne
repz
das
sbb
cmp
stos
into
addr16
sbb
insb
test
mov
pusha
push
pop
ret
cs
pop
xchg
mov
jge
add
mov
gs
stos
push
dec
gs
mov
mov
mov
pop
mov
push
xchg
pushf
dec
pop
adc
aas
mov
rolb
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
mov
jle
and
jle
mov
lock
clc
pushl
or
nop
out
std
mov
or
mov
rolb
cltd
mov
jnp
popf
xor
outsl
mov
aam
mov
or
test
test
loop
push
adc
or
sbb
leave
sbb
cmp
rcr
std
stc
pop
aaa
push
sub
or
add
andl
jo
lret
stos
sbb
daa
fbld
xor
xor
mov
or
or
jnp
lret
sub
xor
pop
sub
sbb
int
jo
addb
daa
inc
ja
push
leave
pop
mov
pop
push
mov
mov
and
push
hlt
mov
or
adc
popa
int
mov
orl
movl
fwait
sbb
mov
sub
insb
fdivrl
xor
sbb
cmp
mov
xor
cli
iret
ret
xchg
push
leave
mov
mov
push
sbb
roll
mov
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
in
pop
push
push
jle
and
jle
mov
ss
dec
je
xchg
aad
pop
sub
orb
mov
mov
inc
dec
cld
xchg
pop
enter
inc
mov
jmp
out
stc
push
icebp
add
push
pop
pop
dec
and
cmpsb
jp
or
repz
icebp
jnp
or
fs
enter
and
iret
mov
add
iret
adc
jmp
mov
adc
pop
iret
mov
jne
hlt
mov
xor
loopne
dec
push
addr16
out
mov
xlat
dec
std
mov
loopne
das
push
jno
xor
test
cmp
xchg
pop
adc
dec
push
xor
into
push
adc
and
fcmovbe
movsl
push
fnsave
repz
cmpb
int3
andl
cwtl
and
js
ja
add
into
cmp
insl
es
pop
pop
orb
pop
hlt
sarb
inc
sbb
orb
repnz
out
xlat
cmpsl
mov
lcall
push
mov
daa
fimull
push
dec
push
jnp
divl
sbb
inc
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
and
add
jg
jle
fldl
fildl
aam
adc
stc
sbb
add
pop
daa
cmp
movsl
mov
mov
ficoml
lret
je
sub
xor
cwtl
dec
fbld
mov
push
lret
fldt
xlat
rorb
data16
jge
enter
jno
test
vorpd
push
ret
mov
sarb
push
jno
rcll
add
push
cmp
leave
jle
jle
push
push
jp
lock
mov
test
xor
das
cs
sub
cmp
ret
ret
shll
sbb
jmp
inc
push
fwait
rolb
pop
and
shlb
mov
test
call
imul
jb
xor
xchg
mov
cmpsb
mov
xlat
jo
nop
sti
dec
fwait
and
in
add
fstps
bound
test
mov
sti
xchg
je
js
xchg
dec
or
add
xor
stos
in
inc
aas
or
jb
pop
fstpt
cltd
sub
mov
hlt
fcompl
dec
and
push
pop
add
xchg
push
stos
lea
test
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
out
push
nop
mov
mov
and
jle
dec
lret
sub
outsb
dec
lock
jbe
fidivs
mov
aad
in
dec
aad
cmp
test
or
cwtl
inc
fcmovne
ss
loopne
cltd
int3
rclb
add
cld
push
sub
sbb
adc
push
pop
popf
stos
inc
jecxz
call
cmp
adc
mov
out
or
sti
push
pop
insb
or
ja
and
mov
push
aad
movsl
pop
jge
enter
xchg
jbe
push
out
mov
xlat
pop
std
dec
mov
and
sbbb
or
xchg
popf
test
test
ret
push
js
je
mov
ja
aas
addr16
xchg
ljmp
push
icebp
and
xchg
push
inc
jns
cmp
xor
shlb
xor
push
iret
or
add
movsl
in
fstpt
icebp
in
icebp
sub
cli
hlt
dec
pop
mov
xchg
pop
cmp
pop
cwtl
xchg
push
cwtl
lret
pop
mov
cwtl
in
inc
mov
push
pop
int3
fbstp
sub
std
push
pop
jecxz
sub
dec
pushf
xchg
cli
enter
jae
push
mov
lret
jmp
mov
jo
mov
pop
mov
jle
and
jle
hlt
iret
in
add
xchg
pop
ror
add
jecxz,pn
shll
xchg
bound
lods
xor
or
cmp
data16
out
push
xchg
imul
xor
shlb
xchg
fidivrl
sbb
add
xchg
push
xchg
push
adc
popa
xchg
jge
test
repz
xchg
mov
push
lcall
jo
hlt
orb
add
xor
scas
insl
out
sub
fstpt
add
or
mov
loope
inc
xor
sbb
dec
jnp
adc
add
sahf
mov
int3
stos
sti
sub
dec
fs
push
inc
xchg
mov
dec
jge
mov
in
jo
imul
sbb
dec
sbb
sysenter
ljmp
nop
andb
ficomps
std
mov
aad
push
and
movsb
cli
sub
into
loop
int
add
sbbl
xchg
in
test
mov
sbb
add
cmp
lods
ds
fidivs
aam
sub
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
cltd
cmp
and
jle
push
jns
sub
mov
ljmp
sti
add
in
call
adc
push
cmc
jge
cmp
movsb
push
jo
into
xchg
jmp
xor
cmpsl
xchg
mov
fisttpl
and
orb
add
in
pop
inc
sub
hlt
sub
andl
in
push
lret
mov
xor
fimull
mov
sub
pusha
bound
lret
insl
xchg
rcrl
inc
mov
mov
jmp
inc
lahf
scas
into
jmp
add
adc
push
adc
pop
std
push
xor
mov
movsl
adc
cld
aam
fnsave
mov
ret
test
add
out
cltd
xlat
jg
ret
push
cmp
adc
add
ret
lret
mov
outsl
ss
mov
lds
lods
or
fidivrs
pop
mov
inc
cmp
cmc
pop
fwait
test
mov
xor
jnp
shrl
fadd
jb
jecxz
outsl
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
sbb
jle
jg
jle
insl
je
push
jne
jne
in
ja
shl
push
aaa
cwtl
xlat
mov
cmp
mov
js
loope
mov
out
or
lret
pushf
hlt
loope
push
int3
inc
mov
mov
pop
arpl
outsl
mov
jl
inc
imul
xor
pop
add
pop
fistpll
mov
stos
test
xchg
pop
pop
nop
and
gs
loope
jmp
xlat
adc
cs
adc
mov
mov
jg
push
jbe
sbb
cmp
popf
push
mov
jbe
cmp
sub
popa
mov
clc
ficompl
jnp
test
sub
data16
sub
std
sbb
jl
bound
dec
mov
repz
je
lock
cs
add
fistpll
dec
sbb
jg
pusha
pop
stc
jg
call
out
push
jo
or
sbb
and
daa
cld
or
mov
test
jle
aad
leave
sub
jl
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
jge
cwtl
inc
movl
ss
lahf
mov
sub
fidivrs
pop
and
scas
outsb
das
sub
xchg
jb
cmp
add
cmpsl
js
test
push
fwait
loopne
mov
xor
cmp
xlat
into
out
inc
ss
cmp
ja
imul
xchg
cmpsl
and
sbb
outsl
push
mov
dec
imul
or
jmp
clc
lcall
xchg
fstpl
icebp
jbe
shll
lods
sarb
dec
aam
cld
popf
insb
fisubl
xor
or
mov
ljmp
rcrb
lods
pop
push
inc
push
mov
mov
popf
adc
mov
add
jo
xor
and
call
into
jle
sti
cmpsl
out
ds
adc
cmp
movsl
addr16
xorb
add
stos
imul
pop
mov
movsl
adc
mov
repz
sub
movsw
xor
daa
iret
pop
stos
loop
cs
hlt
xchg
mulb
lods
adc
aam
dec
nop
lods
lcall
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
