push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
xchg
push
cld
repnz
subl
es
cmp
js,pn
je
jl
jo
jo
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
xchg
inc
mov
scas
ljmp
mulb
mov
ds
pop
test
stos
lock
push
pop
faddl
out
imul
mov
gs
mov
loop
and
lock
sarb
and
and
stos
mov
xchg
inc
subl
ret
pop
push
test
and
in
adc
rorb
pop
inc
push
loop
call
mov
call
ret
fcoml
in
int3
or
outsl
push
into
inc
and
in
ret
pusha
popf
dec
fildl
inc
cmp
and
pop
rcll
jo
addr16
mov
stos
or
or
sbb
aas
mov
test
or
inc
sub
cwtl
scas
cwtl
fadds
and
mov
adc
jge
inc
mov
sbb
add
mov
shrl
call
orb
dec
mov
xchg
or
xchg
dec
cltd
mov
adc
jmp
sub
imul
pusha
mov
in
add
and
movsb
test
xlat
dec
popa
mov
aas
or
adc
push
lds
sahf
lret
mov
pop
mov
mov
push
pop
fisubrs
xor
cli
scas
jmp
enterw
jp
jae
pop
fimull
arpl
xor
pop
jo
repz
push
out
push
fsubrs
test
dec
pop
sbb
sbb
lea
out
xchg
sub
loopew
dec
lret
pop
rclb
les
test
mov
lds
das
adc
pop
test
adc
push
movb
push
fwait
push
in
stc
mov
repz
dec
mov
loope
jge
mov
stos
xchg
inc
mov
mov
xchg
sbb
shlb
push
mov
jns
jnp
cli
rorb
push
je
fcomps
movsb
in
inc
pop
mov
xchg
mov
ret
sbb
pop
pop
push
out
clc
shlb
inc
mov
sbb
inc
mov
and
das
aaa
cltd
rclb
push
in
push
jno
mov
scas
hlt
repnz
mov
inc
push
xor
jge
or
mov
jmp
xlat
sbb
movsl
xchg
sub
cmpsb
pop
fcomi
cmc
jno
pop
das
int
jb
mov
cli
mov
push
mov
inc
mov
repnz
test
stc
sarb
or
cmp
push
mov
dec
out
pusha
nop
shl
sub
mov
and
xor
orb
push
mov
pusha
dec
sbbb
sub
mov
xchg
sbb
int
out
xchg
cmp
or
push
and
stos
xor
xor
ss
cmp
lret
jne
inc
mov
in
jb
lahf
or
fisubrl
pop
lahf
add
mov
icebp
mov
adc
sbb
xchg
and
iret
dec
cmp
and
test
xchg
cmp
mov
cld
inc
repnz
ret
test
mov
and
or
cmp
jge
xchg
pushf
pop
add
pop
cld
adc
xchg
jbe
mov
in
jge
xor
mov
inc
add
int
jle
mov
adc
mov
push
lds
xchg
mov
popa
xor
xor
and
in
out
cltd
jno
shrb
pop
das
xor
cmp
fwait
jmp
in
insl
xchg
jmp
add
lret
lret
mov
jae
adc
into
dec
sbb
mov
lods
out
out
rolb
ror
mov
hlt
aad
pop
andl
sbb
push
lock
push
lock
xchg
repnz
bound
jae
mov
xlat
aad
fs
inc
rolb
xchg
inc
stos
mov
xchg
vcvtdq2pd
lea
fs
adc
enter
jns
jp
stos
loop
mov
jl
pop
dec
clc
stc
imul
fcoml
mov
dec
ja
push
das
lahf
jp
adc
fdiv
mov
lcall
pop
sbb
push
icebp
xchg
jnp
ljmp
fstps
cmp
stos
cmc
pop
fs
roll
cmp
popl
mov
out
arpl
mov
popa
sub
mov
add
jnp
xor
pushl
sub
arpl
or
xchg
pop
rcll
dec
dec
pushf
cmp
mov
fsave
dec
jmp
jge
push
jae
imul
in
xchg
ret
xchg
repnz
aad
incb
jns
xchg
jo
arpl
mov
movsb
inc
jg
fistl
fs
data16
add
jmp
ret
ret
and
push
inc
pop
mov
ret
sbb
ret
stc
cmc
outsl
jl
insb
or
cmpsl
jl
lods
loop
cmpsl
or
test
fisttps
push
daa
popa
mov
mov
mov
cmc
dec
scas
jge
scas
mov
hlt
sub
cwtl
sbb
sub
push
xlat
jb
jecxz
add
and
je
jbe
pop
add
test
mov
jb
inc
insb
insl
jmp
cmp
mov
mov
ret
std
shlb
push
mov
add
inc
inc
cld
test
mov
leave
adc
push
inc
incb
nop
cmp
inc
call
out
ss
pop
mov
les
mov
pop
push
movsl
dec
call
push
insl
xor
cmc
pop
lods
sub
outsl
push
mov
sbb
mov
faddl
adc
pop
mov
stos
or
cmp
ret
gs
scas
pushf
push
test
in
fwait
dec
test
outsb
jge
int
sub
pop
popa
mov
sub
insl
data16
and
fwait
dec
fidivrs
pusha
dec
jae
sbb
stos
pop
inc
jnp
push
inc
or
into
adc
jl
lret
fs
mov
mov
cmp
mov
stos
mov
mov
push
leave
cmp
out
in
mov
cltd
mov
out
inc
fwait
or
jl
ret
mov
idivb
fcoms
dec
sbb
or
mov
ja
testl
lock
daa
adcl
das
cmp
cwtl
inc
mov
dec
in
hlt
ret
lea
inc
mov
lods
fiadds
in
push
mov
fldl
jmp
xchg
adc
push
fcmovnb
xor
aad
insl
lret
xchg
xor
dec
mov
xchg
outsb
int3
out
cmp
test
add
xchg
aaa
push
cmp
inc
sub
mov
fisubs
xor
push
ret
cld
inc
popa
cli
cmpsl
inc
or
test
enter
negl
cs
clc
jg
stos
pop
in
fstl
in
orb
sbb
push
ret
pusha
lcall
adc
dec
int3
sbb
jp
push
and
and
mov
insl
xchg
push
popa
insl
lods
cmpsb
xor
outsl
gs
mulb
sbb
mov
lea
mov
out
xchg
mov
int3
popa
jbe
pushf
out
jne
add
lods
std
inc
cld
js
stos
ljmp
shrb
mov
js
push
das
in
push
cmc
pop
popa
into
pop
popa
out
xchg
ret
sbb
lret
pusha
repz
jecxz
mov
hlt
cmp
gs
stos
and
push
jl
or
and
ss
push
jp
cmc
push
fwait
and
xor
mov
or
jne
xchg
lea
cmp
insb
movsb
addr16
pop
testl
pusha
das
out
fnstcw
jnp
popf
not
mov
inc
mov
jns
pushl
lds
jno
cmp
jne
push
dec
mov
jp
mov
pop
sub
es
xchg
mov
push
mov
mov
loop
mov
repz
adc
or
jmp
mov
add
sub
sahf
ss
jns
add
sti
out
sub
adc
xlat
push
jge
jns
and
out
pop
xacquire
lea
outsb
pop
dec
fs
rorl
je
test
jno
sub
add
sbb
pop
scas
cmp
lret
cmp
cld
mov
push
mov
test
mov
movsb
lret
push
sub
shlb
add
aas
aad
test
jns
dec
push
cmc
loope
movsb
xchg
mov
or
pop
insl
push
mov
ja
rcrb
outsl
dec
mov
xchg
push
xor
xchg
leave
push
daa
out
shl
add
jne
mov
xor
sbb
popf
int
add
lds
jnp
xor
and
inc
sbb
nop
pop
or
movsl
xlat
dec
xchg
mov
icebp
xchg
pushf
xchg
mov
inc
mov
out
mov
sub
in
inc
jecxz
scas
in
xor
sub
xor
pop
xor
sbb
scas
mov
inc
dec
sub
scas
ljmp
xor
cs
jg
addr16
das
fsubr
iret
dec
xor
xor
cltd
xchg
test
stos
in
or
rcll
jnp
xor
xchg
mov
xchg
lock
add
add
incb
adc
and
mov
push
inc
ss
jbe
rol
mov
outsl
or
or
mov
sub
das
pusha
mov
jg
loop
scas
inc
clc
sbb
jecxz
mov
fwait
push
sbb
cmp
popf
jne
or
aaa
and
inc
arpl
push
mov
jnp
jg
push
inc
popf
push
cmp
mov
stos
scas
mov
aad
mov
test
sarl
dec
push
pop
out
mov
loop
add
sar
mov
fwait
js
lock
fildll
mov
imul
or
mulb
push
in
mov
imul
pop
sbb
push
pop
lea
pushf
inc
jecxz
jns
xchg
sub
sbb
pusha
mov
loop
fldcw
ljmp
shlb
test
sbb
or
fdivs
and
add
add
mov
pushl
mov
sub
add
push
or
push
test
cmp
cmp
dec
adc
loope
cld
or
jecxz
mov
xor
pop
in
xlat
sub
data16
enter
mov
cwtl
inc
enter
jg
push
fnstcw
test
mov
and
and
xchg
dec
xchg
sub
sahf
sbb
js
jl
sbb
aad
fcomps
or
jns
mov
xchg
adc
js
insb
mov
inc
jl
cmp
mov
push
int
stos
out
fidivl
loopne
gs
inc
xor
push
mov
lock
hlt
pop
or
mov
lret
jne
stos
fwait
daa
dec
out
int3
lcall
push
inc
xchg
dec
out
push
rolb
adc
bound
adc
outsl
xlat
cmp
shl
push
fistps
orl
inc
lahf
jne
xchg
sbb
cltd
cmp
insl
and
mov
fnstcw
push
jmp
in
and
dec
out
clc
and
sbb
push
loop
out
jne
movsl
fs
out
out
push
sarl
nop
adc
push
fbld
int
push
push
lea
sti
and
adcb
stc
leave
clc
dec
imul
out
fimuls
jo
in
mov
mov
jae
jbe
mov
pop
sbb
and
dec
dec
cli
pop
mov
es
loope
test
add
mov
mov
and
repz
pushf
xchg
lods
jbe
sti
xchg
cs
stc
out
push
mov
and
mov
sbb
clc
rcrl
fptan
iret
mov
mov
pop
or
jb
dec
xchg
add
js
outsl
addr16
fstl
cli
mov
test
mov
pop
cmpsb
pop
jp
jmp
or
dec
mov
sub
xchg
jbe
dec
andl
push
pop
sbb
mov
in
icebp
in
mov
xor
out
les
push
lods
hlt
arpl
insl
push
lock
mov
rcr
mov
or
addr16
pop
loope
shrb
xchg
jae
jge
mov
daa
push
enter
xlat
je
sub
pop
out
test
arpl
adc
stos
mov
mov
add
pusha
das
xchg
push
les
out
dec
xchg
mov
xor
pop
pop
add
je
ret
mov
dec
mov
data16
pop
push
dec
fstl
push
div
cmpsl
sbb
je
ds
mov
aam
push
and
cltd
hlt
pop
xlat
pop
pop
daa
dec
dec
addr16
lcall
imul
sbb
add
pop
out
sub
inc
outsb
pop
in
mov
test
test
xchg
xor
xchg
mov
sete
xchg
movsb
xchg
out
cmpsb
xor
xchg
arpl
pop
cmp
imul
jne
divps
and
dec
adc
imul
rcr
fldl
mov
int3
or
inc
push
cmp
repnz
mov
push
cmc
push
flds
cmp
addb
push
loope
cltd
xchg
clc
stos
pushf
insb
dec
addb
sbb
jns
inc
notl
xchg
imul
testb
pop
test
fwait
loopne
pop
les
sbb
adc
mov
sahf
arpl
inc
sbb
dec
subl
lds
push
fstpl
pop
pop
jmp
mov
and
add
pop
push
ss
stos
lods
loop
mov
push
stos
adc
jo
aam
pop
shlb
push
jmp
sub
adc
cwtl
movsb
fwait
cld
addr16
arpl
popf
in
jno
movsb
cmpsb
loopne
xlat
loope
sub
sbb
inc
ljmp
cmp
inc
sbb
push
xchg
lods
and
rcll
add
jle
fsub
loope
inc
adc
inc
ja
jne
sub
push
xchg
xchg
leave
stos
mov
fs
mov
add
sbb
push
xor
inc
fcoms
popa
jg
pop
dec
sub
mov
sarb
loopne
mov
sbb
sbbb
pusha
mov
dec
add
ret
or
adc
cmp
inc
xchg
fisubrl
push
jno
decb
sub
dec
jecxz
sti
inc
mov
push
mov
fildll
dec
jmp
mov
mov
xchg
incl
mov
dec
call
fsubl
cmp
std
cltd
loopne
mov
out
and
cmp
out
push
dec
mov
sti
push
mov
jp
push
push
inc
add
int3
inc
mov
sbb
stc
pop
fs
mov
repz
mov
pop
adc
sub
mov
jl
sbb
xchg
iret
cltd
xchg
jle
jecxz
and
pop
push
inc
or
cmp
js
sub
shl
adc
mov
mov
fimull
test
pop
xchg
lds
xchg
sbb
cmc
jl
cmp
out
out
cmp
jo
idivb
orb
dec
cs
xor
pushf
xchg
pop
xor
ja
mov
mov
mov
fwait
mov
gs
xor
xchg
cmp
dec
adc
xchg
ds
jo
das
pushf
dec
ficoms
mov
pop
cmc
nop
mov
inc
repz
cld
movsl
mov
outsl
dec
jecxz
add
and
in
ja
and
add
dec
cmpsl
movsb
jns
fisttps
insl
jno
sbb
repnz
flds
data16
adc
stc
xor
xchg
out
mov
push
jg
pop
lods
push
popf
mov
mov
cmpl
lds
bound
xchg
icebp
jecxz
clc
lock
push
int
cwtl
mov
mov
in
shlb
movsl
jno
das
lcall
lret
dec
or
jne
mov
pop
push
inc
mov
lds
xor
and
push
sub
cmp
inc
out
mov
std
pop
js
cmpsb
mov
je
sbb
dec
ds
mov
pop
imul
jae
pop
popf
xchg
jns
pop
aas
decb
nop
in
pop
adcb
popa
scas
adc
addr16
scas
aas
out
mov
adc
push
mov
in
jo
loope,pn
jg
sbb
xor
mov
test
pop
fwait
jg
xchg
jb
or
ljmp
push
push
add
loopne
and
lret
mov
das
adc
pop
jmp
or
hlt
sarb
ss
jle
das
aad
in
mov
test
int
fisubrl
add
mov
push
mov
mov
in
jbe
icebp
and
push
xchg
in
mov
add
cmp
push
cmovb
mov
clc
mov
mov
dec
add
xchg
imul
data16
sub
insl
inc
jecxz
adcb
loope
roll
pop
aas
sbb
mov
jne
in
daa
mov
xlat
in
sub
scas
mov
hlt
test
movsb
mov
and
adc
clc
xchg
arpl
inc
je
jbe
fsubs
in
insl
push
lods
xlat
jecxz
int3
push
or
xchg
repnz
or
push
cmpsl
fdivrl
adc
or
lret
adc
loop
cli
sarl
jnp
adc
aam
push
mov
add
jge
int
das
lods
adc
enter
lret
cmp
outsl
adcl
mov
pop
popa
pushf
adc
pop
inc
inc
jno
adc
sahf
roll
pop
push
js
adc
sbb
imul
les
int3
int
arpl
pop
pop
in
pop
cs
add
or
inc
fmuls
pop
mov
sub
cs
cmp
xchg
mov
xchg
adc
int3
cli
push
mov
sbb
xor
shr
loope
pop
cmpsl
sbb
test
pop
pop
bound
mov
jne
mov
push
adc
mov
jmp
inc
jg
and
adc
fildl
push
push
cmp
inc
cli
movsl
test
loope
repnz
or
mov
sub
popl
lock
or
not
cmp
stc
movsb
xorl
icebp
xor
test
stc
xchg
stos
push
pusha
sahf
lods
std
cmc
adc
repz
pop
mov
dec
adc
add
sub
outsb
dec
in
adc
adc
faddp
mov
decb
daa
icebp
std
inc
adc
pop
push
pop
aas
cld
or
sub
adcb
arpl
pop
adc
xchg
and
lahf
fisttpl
xchg
push
add
jb
sub
mov
push
xlat
inc
jge
incl
or
lret
jmp
hlt
add
push
cltd
pop
cli
push
rcrl
sub
in
xor
or
add
ret
iret
scas
test
icebp
aaa
into
jb
shll
repz
mov
shlb
ja
xchg
mov
das
or
and
jb
xchg
jmp
ss
or
and
mov
andb
pusha
push
repz
ljmp
pop
xor
stc
inc
and
mov
sub
sub
testb
or
aas
push
repnz
lds
and
cs
mov
scas
xchg
jae
add
pop
lahf
xchg
repz
hlt
lods
popf
xchg
and
filds
int3
mov
jmp
xor
jecxz
bound
sahf
aam
lret
test
jo
push
push
ds
shll
repz
dec
icebp
cmc
mov
loopne
enter
sti
add
xchg
sbb
enter
mov
mov
shr
mov
or
lret
sarb
es
int
fwait
lret
icebp
inc
jmp
test
rorb
xchg
push
clc
mov
sub
js
and
hlt
int3
out
mov
xchg
mov
sbb
decl
xor
sarl
mov
mov
lahf
arpl
out
mov
stc
rorl
hlt
sub
xchg
andb
push
imul
aaa
sub
lea
cs
icebp
jbe
push
adc
cmpsl
cld
pop
add
insb
jae
ss
std
dec
dec
pushf
mov
inc
xchg
ljmp
cmp
mov
xchg
icebp
lcall
xchg
mov
test
mov
sbb
push
xchg
add
xor
push
mov
or
push
cli
sbb
lahf
pop
aad
cs
jo
inc
sbb
xchg
jge
mov
js
or
xor
xor
ds
int
out
arpl
push
test
call
cli
push
lods
xor
insl
push
push
stos
dec
push
idivb
mov
scas
cmpsb
in
lcall
cmp
mov
lods
sub
mov
xor
repnz
das
inc
inc
mov
outsl
leave
sbb
add
arpl
push
mov
pop
cmp
mov
sbb
cmp
ret
jae
push
ja
mov
mov
push
arpl
loopne
pop
movsb
stos
mov
jecxz
pop
mov
test
in
jae
test
mov
data16
mov
mov
ds
sarl
mov
notb
and
mov
scas
dec
xchg
inc
mov
cmp
xor
lret
dec
sbb
push
popa
ds
arpl
sub
jns
mov
fcmovnb
test
jno
dec
push
cmp
pop
cmp
movsl
mov
mov
xor
cmp
fwait
jb
aas
ds
sub
jecxz
and
sti
xor
cmp
sub
mov
sarb
test
cmpsl
push
cmp
jle
cmp
mov
mov
xor
fmuls
fstpt
dec
std
push
push
mov
or
cmpsl
xor
pop
addb
aad
stc
mov
in
mov
mov
enter
and
push
fcmovne
stos
and
or
and
and
sahf
adc
out
jno
outsl
mov
push
imul
cmpsb
in
jmp
jae
std
mov
adc
push
cwtl
andb
mov
jge
out
xchg
xchg
loope
cmp
and
or
in
in
jbe
popa
loopne
lods
lret
adc
pop
cwtl
sbb
xorl
add
lcall
jbe
rorb
dec
xlat
pop
xchg
mov
mov
test
and
hlt
xor
xchg
cwtl
dec
popa
xor
jg
push
js
xchg
out
fdivr
pop
cmpsl
das
call
inc
idiv
push
jo
hlt
pop
fcmovne
mov
push
aas
push
and
xchg
dec
jle
push
cmp
xlat
out
inc
push
enter
in
xor
in
fsubr
sub
shll
scas
inc
jno
xchg
pop
add
test
outsl
jno
test
fs
and
cmpsl
xor
out
imul
ja
fdivr
add
stos
dec
pusha
fcomip
mov
cmpsl
insb
inc
pop
stos
add
adcl
mov
sti
sbb
push
ret
mov
cmp
xor
push
adcb
cli
nop
out
aad
je
add
insb
testb
outsb
pop
xchg
add
cmp
dec
hlt
bound
xchg
mov
xor
cld
stos
mov
in
lds
sbb
enter
mov
or
mov
sti
mov
fidivrs
lock
int
cmp
mov
movsb
outsb
fs
in
jne
xchg
iret
sahf
in
loopne
xor
adc
int3
das
push
mov
cltd
xchg
push
add
pop
ret
mov
cmpsb
hlt
pop
gs
xchg
cmp
leave
mov
sub
push
clc
cmpb
aam
mov
sub
lea
inc
push
shlb
in
in
test
xorb
popf
int3
mov
xor
ret
add
dec
fucomip
xchg
mov
fs
jb,pn
lds
mov
xor
lock
inc
and
mov
popf
dec
mov
xor
cmp
iret
inc
aaa
cs
in
push
jmp
orl
ret
adc
lea
orb
inc
sbb
cli
inc
mov
pop
push
lret
fidivs
mov
js
sub
xor
cmpsb
push
sub
and
mov
xor
mov
sbb
or
inc
xchg
jo
ret
scas
cmp
sub
and
mov
movsb
sbb
add
push
push
jge
and
sbbb
pop
pop
add
jo
subl
lds
out
lahf
test
mov
pop
int3
lret
mov
cli
in
je
leave
in
adc
jbe
int3
pop
xchg
sub
ret
mov
jo
and
jle
js
scas
iret
fs
sub
inc
fmull
mov
push
sbb
cmpsl
mov
es
xchg
xchg
mov
push
jle
notl
data16
cld
daa
cli
pop
sbb
mov
lret
sub
ficomps
in
mov
insb
or
loop
inc
mov
cwtl
xchg
cmpsl
int3
sub
daa
adc
inc
bound
mov
or
jmp
daa
insl
daa
repnz
adc
jno
idiv
jae
add
dec
ljmp
push
outsb
jmp
test
mov
mov
jae
sub
inc
mov
loope
mov
sub
push
mov
push
xchg
shlb
pop
hlt
add
das
arpl
dec
faddl
jl
leave
lahf
xchg
dec
rorb
ja
or
jnp
mov
inc
arpl
adc
sub
mov
gs
dec
ss
or
in
adc
push
seto
and
ficoms
les
cmc
int
das
jg
mov
jb
pop
pop
and
xchg
mov
rclb
shl
push
cmp
jbe
stos
dec
sbb
stos
xor
popa
lds
mov
roll
shl
icebp
lret
pushf
push
lea
or
in
movsb
jne
test
ss
lds
ret
mov
lret
inc
cmc
push
jp
pusha
cmp
adc
push
sahf
jge
mov
and
mov
fdivl
mov
scas
cwtl
cmp
mov
sub
xchg
jno
mov
clc
push
push
stos
cld
and
popf
inc
dec
stos
jnp
inc
imul
fidivs
das
push
fsts
roll
data16
sub
dec
adc
sahf
call
push
cmpl
sub
stos
cmp
or
lcall
mov
cmpsb
pushf
insl
sub
jbe
jne
sbb
andb
lock
pop
dec
stos
loopne
pop
mov
stc
jae
sbb
pop
add
aad
add
sbb
mov
push
loopne
leave
pop
ja
fstps
mov
pop
fsubrl
and
or
sbb
jo
push
aaa
mov
nop
xchg
mov
in
test
cwtl
js
mov
aas
dec
int3
nop
push
jge
in
xor
lods
add
jmp
mov
xor
push
movsl
push
fcom
adc
out
and
test
xor
xor
inc
and
setg
ret
jns
pop
mov
das
icebp
test
sub
popf
sub
insl
shll
movsb
in
out
mov
dec
xor
imul
bound
xchg
mov
jae
inc
mov
aaa
rol
mov
adc
xchg
lods
jnp
cmp
pop
enter
out
mov
push
jle
xchg
in
and
ljmp
or
fwait
js
shr
jmp
mov
xor
lea
pop
pop
aas
xchg
sbb
xchg
and
jmp
pop
js
dec
push
lock
call
mov
sbb
outsb
rorl
dec
mov
test
push
hlt
scas
adc
and
jo
scas
push
sub
negb
loop
or
mov
xchg
popl
jno
add
mov
pop
sahf
adc
and
out
xchg
fnsave
cmp
mov
cmp
roll
push
dec
out
or
push
and
js
aad
and
mov
xorb
sbb
ret
outsl
xchg
adc
jmp
in
in
pop
push
push
aaa
sub
imul
daa
add
mov
xchg
xchg
add
add
loopne
repz
mov
enter
mov
dec
dec
xchg
xor
movsl
jne
int3
repz
pop
les
mov
sbbl
mov
adc
pop
lret
imul
pop
sbb
mov
dec
aas
mov
xchg
call
daa
xlat
dec
fnsave
or
dec
roll
adc
xchg
xor
mov
loop
pop
in
sbb
pop
rclb
fisubl
iret
in
hlt
or
outsl
xchg
into
jmp
das
leave
into
test
in
jae
dec
mov
movsl
cmp
in
std
mov
cmp
jecxz
cs
dec
iret
adc
add
leave
sbb
shll
push
and
cwtl
fidivrl
adc
mov
mov
andl
push
sbb
sub
sarl
xor
ljmp
pop
ret
repz
jo
jb
mov
out
dec
sub
cmp
sahf
adc
xchg
mov
in
adc
pop
pop
insl
test
mov
inc
or
push
add
jg
test
in
fucomi
pop
push
orl
js
arpl
cmp
repz
add
mov
addr16
loopne
test
xor
mov
lret
outsl
sub
mov
xchg
out
cmp
adc
dec
xchg
out
sarl
ficoml
cmp
or
inc
dec
in
and
dec
scas
mov
stos
xchg
imul
mov
repnz
fldenv
inc
cwtl
pop
test
add
pop
jecxz
dec
fidivrl
jbe
or
std
movl
dec
mov
dec
inc
sbb
lock
adc
mov
ret
push
out
out
jno
arpl
sbb
mov
mov
jns
push
insl
in
jle
arpl
jmp
ds
adcl
cwtl
xlat
push
int
inc
insl
sub
mov
mov
or
pop
mov
stos
pop
and
adc
mov
mov
jmp
jg
int3
fcmovnb
jle
rorl
js
cmc
in
in
push
xor
cmp
in
enter
or
cld
decl
xchg
ja
push
int3
pop
mov
es
popf
xchg
xchg
ret
sub
insl
dec
and
adc
add
test
push
in
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
xchg
fcoml
pop
addl
je
xor
mov
sbb
clc
imul
xchg
test
mov
repnz
jo
loopne
scas
mov
rcrb
ret
dec
js
mov
lods
cmpsl
jae
daa
rep
popa
jmp
clc
sub
daa
xchg
aam
ret
jnp
adc
cli
mov
lods
sub
outsb
insl
dec
pop
aas
stos
subb
out
push
ljmp
fcoms
jl
ret
add
mov
test
inc
mov
shll
pop
xchg
dec
add
mov
inc
mov
jbe
aam
pop
and
into
cmc
aad
leave
sbb
xor
push
sub
add
xchg
mov
fsts
mov
inc
dec
enter
fwait
decl
push
and
jb
sub
sub
fidivl
mov
xchg
aaa
add
adcl
scas
dec
shrb
sub
adc
sbb
dec
and
outsl
sub
les
push
loop
lcall
mov
lcall
pop
stos
mov
push
cmpsl
pop
mov
xor
lds
inc
inc
inc
mov
inc
rorl
cmp
cmp
push
fxch
aaa
and
test
mov
mov
insb
aas
pusha
cvtpi2ps
push
xchg
stos
ss
ret
push
pop
imul
xor
pop
out
cmp
mov
outsl
cmp
les
mov
dec
pop
mov
pop
pop
push
add
leave
inc
sahf
mov
loop
push
aad
fidivrs
rol
jns
test
xor
or
and
lea
mov
mov
add
pop
cwtl
mov
stc
xor
sbbl
mov
cmpsb
jg
push
or
les
out
hlt
rol
pop
or
or
es
pop
cmp
repz
test
add
adc
lahf
pop
stos
in
push
hlt
push
dec
insl
sub
inc
lods
xchg
insb
arpl
xor
mov
in
int3
out
cli
mov
jle
dec
mov
aam
lock
int
inc
cli
cmpsb
mov
cld
movsb
xor
insb
fidivrs
cmp
loopne
ret
mov
cli
fcmovb
mov
push
or
jle
rcrl
jnp
cli
in
stc
or
fdivl
sar
in
insl
inc
mov
mov
or
aam
jmp
mov
subb
jbe
mov
adc
fidivrs
in
movsb
int
xor
mov
mov
xchg
bound
mov
sub
jb
lods
sub
rcrb
mov
sbb
mov
in
and
and
sarb
jbe
inc
imul
or
pusha
xor
lods
xlat
push
aam
in
jno
out
lock
xor
int
jne
pop
pop
clc
outsl
pop
repnz
push
xor
mov
fwait
repnz
pop
add
inc
popf
cmp
outsb
mov
loop
gs
dec
mov
enter
lds
enter
aam
xchg
not
jmp
lcall
pop
test
fucomi
mov
lret
sub
jg
jmp
jb
ss
xchg
xchg
divl
stos
or
or
jp
xchg
push
dec
jnp
jg
test
cmpsl
mov
xor
leave
jg
call
sub
fucomi
jle
mov
outsb
insl
cmp
out
xor
pushf
leave
mov
mov
adc
js
popf
std
lock
dec
mov
mov
push
cmp
nop
adc
enter
cmp
outsb
pusha
push
cmp
jo
aad
ljmp
fwait
push
loope
cmpsl
xor
arpl
push
in
xchg
out
add
ja
cmp
jb
mov
aad
lds
push
stc
imul
mov
push
lret
shl
addl
aas
mov
mov
es
fdivl
in
test
fnstcw
jmp
push
scas
dec
movsb
xor
ljmp
xchg
mov
xlat
add
stos
mov
out
mov
in
pusha
jne
push
test
popf
mov
pop
sbb
add
ja
in
cltd
sub
es
cmp
cmp
pop
push
xor
outsb
xorb
mov
inc
lea
in
xor
adc
sahf
or
fmull
insl
sahf
pop
sub
inc
mov
mov
sahf
ljmp
xor
mov
pop
mov
cltd
out
pop
dec
adc
or
xchg
imul
inc
test
inc
divl
sbb
or
stos
nop
push
dec
mov
push
std
aas
nop
sub
iret
jle
mov
xchg
daa
stos
xchg
in
xchg
sbb
mov
or
mov
sbb
das
lahf
inc
lcall
and
test
enter
push
dec
dec
mov
or
aas
sub
imul
dec
in
insl
fisubrs
jno
inc
outsb
push
mov
imul
pop
adc
and
jno
xchg
lea
pop
into
push
xchg
outsl
add
jecxz
mov
mov
out
addr16
push
dec
add
mov
jecxz
xor
sub
lds
or
repnz
shlb
push
lret
ja
add
pop
ret
or
adc
mov
lret
fldt
push
sbb
and
shr
imul
push
stos
cmp
inc
jg
clc
mov
add
std
nop
jmp
mov
adc
lock
mov
adc
sahf
pusha
jp
jno
int3
pop
mov
sbb
call
jns
dec
push
in
jae
sbb
or
sbb
shl
sub
dec
lods
sbb
or
push
lahf
mov
mov
dec
xchg
lock
mov
adc
rcl
mov
scas
jle
and
inc
leave
mov
in
cmp
je
iret
sbb
xor
add
cltd
inc
filds
rorl
mov
dec
mov
lcall
mov
inc
inc
cmpsb
jl
lock
inc
inc
daa
or
xchg
sub
cmp
jle
int
mov
push
pop
lcall
lret
mov
cmpsb
push
xchg
cmp
cmp
add
mov
dec
rcll
fsubrs
adc
sub
les
out
mov
cmp
mov
xorb
push
mov
addr16
jl
cmp
int
loopne
xchg
shlb
xor
adc
jae
fcmovnb
test
jge
outsb
and
jle
testb
jae
mov
sbb
jp
jl
cmpsl
inc
pushf
adc
fs
inc
bound
jo
jp
stc
cmp
add
fwait
lods
out
rcrb
push
jns
sub
adc
mov
sub
add
popa
jecxz
das
inc
icebp
xlat
sarl
fistpll
in
iret
scas
ss
nop
sbb
xchg
lds
cld
inc
sbb
dec
bound
lret
call
testb
pop
jmp
xor
ds
jge
or
icebp
test
dec
sub
xor
int
hlt
in
faddl
sbb
repz
mov
or
in
mulb
ret
fs
repz
bound
aas
repnz
das
stc
jecxz
jp
ljmp
mov
data16
test
mov
test
add
fldcw
sub
inc
movsl
push
lahf
xchg
in
and
pop
enter
add
pop
loop
jns
push
aaa
popa
int3
dec
adc
outsl
lahf
mov
push
ror
pop
std
push
inc
dec
fldl
and
mov
in
jl
movsl
jle
sub
mov
jo
and
lcall
xlat
mov
cltd
aam
push
add
loopne
mov
lret
xor
dec
mov
push
sahf
rcrl
or
lods
xchg
icebp
and
sub
xor
stos
loop
mov
movsl
js
mov
jns
repnz
adc
pop
loope
xor
cmpsl
sub
loop
or
xchg
or
pusha
cld
cltd
cmpsl
rolb
repz
arpl
shr
or
xor
push
insl
or
push
insl
mov
inc
sti
arpl
dec
cli
add
sti
sub
ret
dec
loope
call
xor
cmp
fwait
cltd
jmp
xchg
lds
pop
negb
out
mov
stc
xor
inc
insb
addb
imul
xor
sti
xchg
or
sub
lret
bound
mov
xor
push
pop
hlt
subl
xchg
inc
sbb
repnz
or
out
inc
fisubrl
adc
fistps
in
ds
inc
mov
xor
cld
adc
sahf
fcompl
fdiv
dec
std
mov
xchg
jecxz
add
ffreep
or
adc
mov
fdivrl
and
add
inc
sub
mov
fs
cmpsb
and
insl
and
jp
mov
lret
scas
or
cmp
popf
imul
std
pop
xchg
nop
push
push
mov
jne
jns
mov
jnp
xor
mov
inc
adc
sbb
add
insl
add
xchg
mov
push
lods
push
xlat
xor
add
push
xchg
adc
adc
shlb
pop
pop
sub
sub
shll
enter
jmp
mov
pop
roll
popf
mov
pop
pop
add
ds
push
das
ljmp
mov
dec
in
dec
sbb
rorb
or
cmp
dec
inc
fldenv
xor
bound
cmc
lret
mov
test
or
out
mov
push
or
test
cmp
sbb
dec
or
cmp
in
adc
adc
jo
leave
dec
scas
sbb
add
fucomi
pop
mov
inc
mov
inc
inc
ret
std
cli
test
fsubr
mov
in
dec
push
dec
pusha
das
fxam
sti
and
sbb
pusha
jbe
ret
xchg
dec
adc
sub
mov
jp
sbb
les
mov
sbb
adc
xchg
gs
cmc
scas
out
aam
pop
add
or
arpl
inc
lods
fs
sbb
int
add
and
jae
dec
mov
sbb
push
rep
popa
mov
loope
ret
fs
pop
es
push
mov
aam
pop
test
push
dec
out
test
inc
push
icebp
jo
decl
jg
fcompl
adc
es
roll
pop
pop
mov
sbb
xchg
sbb
or
fnstenv
jo
xor
mov
pcmpgtb
push
sbb
cmpsl
rorl
jle
xor
daa
adcb
xchg
sbb
cwtl
dec
sbb
test
jge
mov
sbbl
dec
mov
popl
aas
lds
inc
xlat
add
lock
adc
jo
repz
xor
push
loope
xchg
fdivrp
or
cmp
xchg
je
insb
test
jo
dec
sbb
repnz
xor
inc
aaa
mov
bound
pop
push
sti
enter
mov
sarb
push
inc
clc
outsl
aam
dec
cmp
cmc
mov
lcall
sbb
pushf
data16
fucom
insl
shlb
jmp
adc
psrlw
cmpsb
lea
inc
mov
call
jle
inc
mov
neg
inc
or
jge
loop
repnz
enter
add
jno
lea
int
enter
lods
add
mov
sti
push
inc
inc
hlt
cwtl
cmp
fsubs
xor
jecxz
lea
aas
mov
cmpsl
inc
mov
es
push
mov
xchg
sbb
cmp
out
fcomps
push
xorl
mov
sbb
cmp
roll
jecxz
or
fiaddl
iret
pop
ss
or
sub
and
or
xchg
pop
xor
jg
negl
jnp
xlat
stos
xchg
add
sub
sub
cmp
inc
pop
ret
or
das
stc
jo
loope
and
add
jns
mov
add
rcr
popa
xchg
incb
imul
insb
out
push
mov
lcall
mov
scas
es
in
adc
out
and
dec
push
adc
mov
adc
xchg
dec
dec
daa
and
out
sub
in
data16
ror
ffreep
bound
add
movsb
movb
inc
fnstenv
pop
mov
mov
mov
mov
out
sbb
fstpl
addr16
shl
jmp
lods
mov
jl
fidivs
sbb
add
ja
or
inc
ja
fsubrl
push
inc
xchg
cmpsl
jnp
nop
mov
mov
pop
and
imul
enter
inc
enter
cmpsl
sub
adc
lahf
mov
out
popf
mov
movsl
adc
xor
loop
push
jl
lcall
cs
nop
and
repnz
push
jle
gs
xor
add
mov
incl
dec
in
enter
movsl
and
test
pop
pop
pop
out
or
sbb
jns
push
jp
jnp
andl
xchg
sub
insl
dec
inc
fs
inc
push
inc
xchg
dec
daa
cmpsb
mov
sub
repz
imul
lds
and
pushf
push
xor
xchg
mov
push
push
ja
xor
std
push
sbb
ljmp
sti
xor
shl
loope
test
stc
push
in
out
jecxz
cmp
jne
lds
sbb
rcll
jl
lods
pop
bsr
and
jne
inc
mov
jl
lods
movsb
shlb
dec
xor
add
addb
shlb
xor
adc
xchg
mov
xlat
push
or
jnp
jle
lea
andl
mov
stc
pop
and
mov
mov
or
jne
inc
sub
shrb
xor
mov
clc
jmp
mov
xchg
push
jmp
pop
out
fwait
shrl
and
adc
shrl
inc
and
mov
cmp
in
cmpsb
inc
addr16
and
xchg
repz
jecxz
gs
mov
mulb
bound
jp
inc
cwtl
mov
inc
or
in
aad
out
push
mov
gs
cld
in
clc
sbb
dec
xchg
mov
ret
popa
cmpsl
xchg
xor
inc
xchg
into
das
in
fwait
add
xor
test
mov
insl
sbb
dec
fldcw
mov
mov
pop
jae
push
add
out
test
xor
xchg
insb
sti
fwait
mov
ss
pop
loope
fmulp
xor
mov
das
bound
std
cmpsb
inc
inc
jo
mov
and
cmc
mov
xchg
imul
pop
xor
in
mov
sbb
and
cwtl
subb
dec
mov
sub
xor
pop
popa
imul
leave
mov
sbb
add
negl
mov
inc
fwait
inc
jl
shr
mov
add
lea
stc
loop
dec
adc
ficompl
lret
addr16
mov
mov
lret
xchg
push
mov
jne
outsl
in
and
lock
stos
popa
negb
xor
adc
jb
sub
mov
fistps
stos
testl
enter
fs
add
lret
push
add
xor
inc
jo
pusha
cli
popf
aam
pop
pusha
jae
or
push
inc
or
enter
outsl
jb
repz
jno
or
mov
mov
add
sub
addr16
jae
jmp
into
leave
loopne
adc
test
mov
fwait
jae
push
push
fwait
dec
pop
mov
mov
divl
fldl
ds
call
lret
sbb
cs
mov
pop
repnz
inc
nop
push
int
push
xchg
and
add
dec
in
lret
dec
pop
and
cmp
jne
mov
push
mov
lods
or
mov
xor
imul
insb
mov
repz
push
add
pop
adc
xorl
add
dec
leave
mov
mov
fs
adc
sbb
pop
ficompl
outsb
arpl
mov
fbld
aaa
imul
adc
push
fisubl
flds
rcrl
or
lcall
inc
and
rolb
arpl
popa
hlt
push
imul
nop
jb
fmull
clc
shrb
sub
push
enter
out
lcall
nop
ret
loopne
popa
mov
adc
jl
inc
push
decl
test
mov
mov
mov
gs
rcll
cmp
clc
cwtl
or
psubd
dec
xchg
mov
and
jmp
jns
rclb
out
pop
js
adc
sbb
sbb
xchg
iret
js
enter
test
mov
mov
loop
add
and
movsb
mov
cltd
hlt
cmp
sub
enter
sbb
js
inc
add
ja
ficoms
mov
push
or
cwtl
fdivr
out
jae
outsl
cmc
test
add
pop
pushf
and
aad
out
ss
add
xchg
and
mov
sahf
sub
in
cli
stc
cmp
fldcw
rclb
mov
and
xchg
xor
es
jns
pushf
or
dec
mov
sub
jmp
lea
push
test
xor
out
push
ss
pop
or
mov
cli
adc
adc
test
add
push
movsl
pusha
mov
jbe
mov
pusha
inc
xchg
jp
and
fstps
popa
add
cmp
cmc
dec
mov
cmp
mov
and
mov
adc
clc
sub
mov
cmp
leave
rcrl
popf
ja
repnz
ja
add
xlat
aam
cmp
inc
popf
cmp
dec
scas
mov
test
test
sbb
push
mov
adc
sub
push
or
lea
cmc
shlb
lcall
fimuls
movsl
pop
and
ficompl
js
push
sbb
lret
jp
aad
xor
sub
pusha
pop
dec
jle
dec
aad
jle
loopne
stos
dec
push
push
mov
lock
roll
adc
int
cwtl
les
scas
sub
pusha
rcr
sub
nop
jne
pop
les
in
mov
jo
xchg
xor
jo
stc
stos
lea
fld
neg
ret
scas
dec
lds
xor
pop
or
iret
add
cwtl
sub
inc
nop
dec
aaa
or
mov
addr16
daa
push
outsl
pop
mov
repz
xchg
loope
or
cltd
mov
cmpb
div
sarb
pop
add
fildll
mov
call
cmpb
sub
push
push
dec
jbe
dec
iret
push
arpl
mov
repz
scas
test
pop
ds
mov
loopne
repz
iret
add
scas
jmp
call
cmp
or
into
lods
sahf
imul
add
test
inc
cwtl
sbb
inc
pop
xor
enter
rcrl
sahf
inc
rorl
cmp
mov
cmp
ds
jo
sti
fwait
or
xchg
xor
lock
lea
push
in
call
aas
sbb
daa
or
aam
mov
cmc
jle
push
inc
lret
push
icebp
sub
adc
inc
lcall
cmp
mov
dec
dec
fsubs
sub
mov
ficoml
mov
inc
popa
or
sbb
scas
cmp
stc
orb
xchg
mov
nop
mov
pusha
adc
loope
mov
or
psrld
xchg
add
sbbb
outsb
push
push
adc
nop
jge
pop
dec
mov
or
into
mov
and
lods
aad
xor
sbb
xchg
test
ljmp
ret
add
pop
jmp
popf
add
sub
dec
dec
or
outsl
test
addl
dec
mov
sbb
lea
pop
xor
pop
mov
rorl
jno
cmpsl
mov
sarl
sub
sti
jmp
shrb
pop
mov
lcall
jecxz
mov
testb
or
mov
xor
inc
mov
or
shll
mov
hlt
mov
in
loop
aas
loope
movsb
rep
add
daa
xchg
movzbl
nop
shrb
push
lods
fists
jns
clc
add
add
das
push
mov
scas
repnz
and
addr16
jmp
mov
mov
cmp
adc
mov
mov
push
or
pop
cs
out
mov
insb
mov
lock
jne
lret
fcoml
out
xchg
mov
mov
mov
pusha
stc
mov
mov
fldl
movsl
in
jne
push
outsb
aam
ds
ljmp
arpl
jno
xchg
mov
out
sub
adc
push
mov
sub
repnz
test
pop
outsl
jecxz
repz
into
add
lods
ret
std
push
int3
jl
mov
lcall
sub
mov
daa
insb
and
cmpsb
aas
das
or
in
sbb
inc
es
into
cmp
aaa
mov
ret
pop
and
and
push
into
cs
push
out
cli
add
roll
mov
loope
and
inc
or
add
add
push
gs
mov
lret
jl
cs
cmp
sbb
stos
jmp
enter
mov
push
test
or
mov
mov
push
push
push
inc
sti
repz
adc
cmpsb
ds
aas
mov
cmp
pop
sub
loopne
or
adc
lds
adc
pop
rcll
inc
les
ljmp
fcompl
mov
or
xchg
or
js
lret
shl
mulb
push
xor
push
test
sbb
or
int
orb
out
lea
cmp
and
test
stc
inc
les
cmc
mov
in
xchg
jge
dec
lods
inc
mov
mov
cmp
fiadds
out
xchg
mov
xchg
in
and
pop
scas
jbe
cwtl
inc
stc
sbb
xor
mov
jg
leave
cmp
test
sub
cli
clc
add
dec
mov
in
pop
daa
test
sbb
lods
repnz
dec
inc
jbe
imul
rorl
pop
ret
or
jg
cmpsb
xchg
sub
dec
adc
loop
push
cmp
push
sbb
ss
mov
insl
loop
cmp
cmp
xchg
aad
rcll
imul
cli
pop
outsb
xchg
movsb
scas
movsl
cmpsb
bound
das
in
test
push
cmp
decb
jnp
ds
mov
movsl
sbb
sbb
or
es
pop
je
mov
mov
and
pop
dec
mov
adc
ds
leave
inc
or
imul
outsb
aad
fidivrl
dec
jns
dec
in
and
xor
ffreep
jmp
jns
jno
out
pop
add
loope
mov
aaa
gs
cmpsl
sarl
lods
or
loop
or
xor
test
out
mov
test
call
aas
leave
fstl
out
insl
sub
aad
hlt
dec
imul
loope
dec
sbb
out
push
shlb
mov
xor
xchg
push
mov
scas
sbb
inc
imul
dec
mov
and
sahf
fdivs
pop
fstpl
mov
popl
and
jp
dec
jo
mov
add
ja
lcall
sub
xchg
pop
mov
add
mov
sti
pop
loope
push
ds
inc
fcompl
addl
sti
aad
push
xchg
shr
xchg
pop
dec
cmp
jno
mov
push
sub
inc
jp
imul
icebp
pop
push
mov
imul
test
scas
pusha
inc
mov
out
shll
add
std
sub
pusha
mov
scas
or
fsubr
call
sub
ret
shlb
fsubl
xchg
pop
in
mov
fdivr
sbb
movsl
sarb
push
mov
je
cmpsb
jno
pop
jo
push
mov
jnp
hlt
pusha
gs
cmpsl
jg
fstpt
arpl
jmp
out
dec
aas
stos
or
fs
stc
pop
and
sbb
sbb
sbb
mov
mov
pop
or
js
and
jl
and
cld
iret
jg
cld
dec
inc
in
mov
push
xchg
mov
and
mov
repz
sbb
cltd
mov
and
fsubrl
jge,pn
leave
and
pop
jae
popa
into
sub
or
sub
jecxz
push
dec
dec
sub
jno
xor
sti
cmpsl
mov
add
and
test
outsb
imul
scas
add
fisubs
dec
ds
inc
cwtl
cmp
pop
and
faddl
xchg
inc
adc
inc
and
pop
xor
or
mov
mov
adc
xchg
ret
cmc
and
decl
push
bound
sub
js
dec
stos
dec
add
pop
out
mov
rcll
lea
mov
outsb
mulb
movsb
inc
fbld
aam
xor
lods
pop
fs
repnz
repz
shrb
out
jo
xor
bound
sbb
mov
sub
scas
dec
movsb
pop
pop
jns
xchg
mov
jl
shr
pop
and
pop
imul
jge
mov
scas
mov
call
push
and
mov
into
jae
sahf
inc
mov
pop
or
jnp
ja
lea
std
inc
out
cmpsl
scas
pop
fmuls
int3
fisttps
sar
lods
ja
sub
aaa
movb
negl
mov
fbstp
mov
adc
xor
enter
out
loop
ss
iret
fcompl
jo
add
pop
dec
mov
push
hlt
mov
cltd
adc
movsb
ret
inc
push
loopne
in
mov
push
test
insl
aam
sub
sbb
insl
inc
jp
in
ss
insl
jp
out
or
push
adc
mov
shlb
and
popa
sub
cltd
adc
pushl
daa
inc
mov
jb
jns
mov
divb
jg
fisttpl
jb
xchg
sub
and
shll
mov
lock
push
ja
into
jnp
cs
cmp
jbe
les
fisubl
and
add
mov
lds
pop
mov
out
sahf
pusha
out
into
aam
dec
lea
mov
mov
jno
in
sbb
xchg
jns
sub
sub
mov
mov
fld
loop
mov
inc
inc
jne
xchg
cwtl
pop
jae
fstpt
mov
jle
mov
fcmovnu
divl
sbb
sbb
xor
rcr
sahf
mov
mov
stos
cmp
xchg
fldl
mov
cwtl
mov
and
outsb
inc
push
mov
int
xchg
es
dec
pop
push
shll
pop
pop
outsl
gs
inc
mov
enter
je
andb
mov
test
dec
ljmp
sbb
push
imul
nop
dec
xchg
cmpb
ds
jl
sahf
sub
dec
nop
ret
lret
les
daa
inc
push
jb
mov
test
lds
leave
xchg
dec
movsl
cwtl
repnz
je
mov
das
inc
cmp
xchg
mov
call
mov
adc
mov
push
divl
sbb
push
insb
inc
xchg
call
cmp
push
push
mov
cmp
iret
add
pop
test
in
test
fwait
incl
or
out
outsl
and
outsb
sub
pop
mov
xchg
pusha
cmpsb
push
jne
in
inc
mov
nop
out
lds
add
dec
imul
adc
sbb
in
sbb
leave
xchg
or
sarb
in
insb
jmp
decb
push
mov
imul
sbb
imul
xor
dec
out
cmc
jg
enter
xor
pusha
xor
pop
inc
mov
mov
push
xchg
mov
outsl
mov
jns
das
arpl
inc
add
test
test
mov
aaa
incl
inc
lahf
fnsave
xor
cmp
add
xchg
cmp
mov
pop
cwtl
inc
pop
jne
jne
cmc
out
pusha
mov
in
adc
lods
into
cwtl
data16
sahf
xor
or
mov
ds
imul
or
jmp
push
inc
and
lret
int
int
loopne
cmp
push
int3
andb
mov
mov
cmp
pop
add
push
mov
fs
sub
movsl
mov
testl
not
nop
lret
xlat
outsl
mov
or
cmp
or
or
cltd
out
mov
xchg
bound
lds
adc
scas
fidivrl
adc
xchg
lret
cltd
into
int3
mov
mov
xor
mov
push
pop
rcll
out
enter
adc
sub
roll
pushf
pusha
movsl
xchg
in
pop
jo
ja
lahf
pop
push
orl
outsl
shr
cmpsb
xchg
or
mov
arpl
sbb
mov
push
mov
and
sbb
push
mov
lret
xchg
xchg
xor
xchg
arpl
lds
cmp
fsubrp
cmp
adc
dec
jmp
pop
icebp
fistpl
fidivs
push
mov
xor
cld
aaa
cmp
negb
repnz
fdiv
xchg
and
xor
aaa
xchg
insb
cld
sub
sub
inc
add
cmp
pop
inc
sarl
mov
and
inc
and
inc
rclb
mov
pop
or
xchg
in
xchg
inc
or
fisttpl
xor
int
in
ds
mov
sub
test
mov
cmpsb
clc
prefetcht2
and
xchg
add
or
pop
enter
fmul
push
or
push
pushf
mov
movsb
imul
loope
movb
xor
or
add
push
mov
mov
mov
dec
movsb
outsl
add
fdivs
push
out
xor
add
subl
jne
adc
ret
and
cmc
cmpsl
mov
or
hlt
adc
nop
add
jecxz
dec
mov
pop
in
xor
rclb
inc
cltd
jle
enter
test
les
stc
push
push
cwtl
xor
scas
daa
jp
inc
lret
and
out
push
cmp
adc
insl
cmp
rcll
xchg
pusha
int3
out
xchg
pop
rcl
mov
cltd
push
incb
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
andl
jl
cmp
addl
fnstsw
int3
push
inc
lods
daa
push
push
jnp
roll
lods
outsl
push
or
fsubs
mov
ja
in
mov
sub
cmp
scas
fnstcw
sarl
sub
test
fidivs
lods
fsts
sub
into
dec
and
add
mov
aas
js
lahf
ficoml
pop
scas
adc
rclb
or
pushf
mov
out
repz
cmp
mov
jne
inc
push
and
xchg
jp
mov
stos
test
mov
inc
sub
adc
sarb
bound
push
mov
pop
int
xchg
add
add
and
sbb
sub
insl
mov
adc
pop
mov
mov
js
shll
xor
cmp
insl
push
or
stos
cltd
int
add
stos
mov
cmp
push
fmull
sahf
arpl
mov
popa
and
push
jno
dec
pop
xlat
icebp
adc
mov
xchg
mov
clc
shr
mov
add
rcrb
repnz
flds
popf
adc
mov
repz
mov
inc
int
xor
lcall
js
outsl
mov
sub
sub
adcb
xor
stos
sahf
jmp
cwtl
es
into
enter
cmp
pop
pmaxub
mov
mov
out
cli
and
dec
lret
cmc
xlat
in
dec
jmp
xchg
scas
xchg
jmp
xor
or
lcall
lds
and
stos
out
jae
popa
dec
cltd
pop
pop
in
and
or
sub
mov
inc
ja
xchg
cmp
mov
cmp
pmulhw
aad
mov
pop
and
insl
jno
lcall
inc
loopne
lahf
inc
or
jmp
les
mov
loop
pop
sub
in
lock
jbe
push
outsb
xor
aam
lret
in
inc
cltd
mov
faddl
cltd
xchg
or
int3
or
es
sbb
jp
add
mov
mov
scas
cmp
pop
pop
aad
jmp
jns
push
mov
xor
adc
or
repz
adc
mov
in
int
mov
mov
xor
in
ss
enter
xchg
mov
popf
jbe
test
add
push
dec
in
in
cltd
pop
mov
adc
insb
movb
call
test
cmpsl
adc
sbb
les
stc
inc
add
int3
sbb
clc
das
mov
jne
das
scas
out
jl
fs
push
dec
adc
rorb
fucomi
rcl
lret
pop
xor
mov
mov
test
jmp
mov
fdivrl
xchg
mov
shlb
pop
sbb
or
out
push
push
imulb
addb
mov
sub
xor
rolb
push
sub
lea
mov
fisttps
idivl
xor
mov
add
jno
dec
fcmovb
sbb
insb
in
xchg
mov
ret
jl
bswap
lea
dec
cmp
sarl
rolb
lcall
iret
inc
jae
add
fimuls
inc
shll
pop
mov
xchg
mov
repnz
movsl
decb
and
mov
mull
xor
mov
lcall
pop
xor
scas
or
jp
lods
xchg
das
and
lahf
int3
jle
and
ds
rclb
adc
push
pop
pop
dec
cs
pop
cmp
xchg
ret
dec
adc
jl
sbbl
lcall
jo
bound
inc
lret
xchg
or
shrb
pop
movsl
dec
xchg
iret
xchg
and
adc
gs
out
nop
and
jmp
sub
lea
pop
movsb
push
jle
jecxz
dec
daa
jbe
jae
lods
mov
push
call
outsl
je
add
rcrb
mov
push
mov
lods
and
pop
repz
fmulp
cmp
mov
and
and
jecxz
mov
fsubs
jbe
outsb
and
mov
movsb
push
push
lret
out
sub
lret
and
data16
cltd
sbb
dec
xor
or
aaa
es
pusha
fisubl
mov
xchg
mov
out
rcrb
daa
iret
xor
je
arpl
xor
jg
xor
dec
lea
xor
cwtl
mov
mov
pushf
dec
loopne
xor
notb
pop
dec
aas
xchg
sbb
ret
lcall
inc
xor
out
sbb
ret
sbb
pop
sahf
pop
fstpt
test
mov
sub
sbb
adc
inc
mov
outsb
outsl
imul
mov
cltd
inc
popa
cs
push
mov
test
imul
pop
out
inc
xchg
mov
bnd
sub
ljmp
add
jl
out
mov
adc
ret
into
inc
and
xchg
out
neg
sbb
das
dec
inc
repz
jmp
arpl
arpl
hlt
mov
xor
jg
xor
dec
mov
outsb
rorb
inc
pop
lea
aad
push
xor
lcall
xchg
jecxz
xchg
popa
adc
and
pop
and
lcall
shll
push
xor
ret
jnp
test
sarb
push
sbb
pop
adc
xor
popf
mov
cmp
pop
inc
adc
stos
cld
addr16
inc
bound
aad
add
mov
mov
testb
xlat
mov
rcrb
inc
dec
sar
adc
add
ret
je
ret
mov
clc
mov
inc
stos
loop
cli
adc
fidivs
ds
je
into
lods
imul
pop
pop
pop
call
adc
jo
test
xchg
sbb
push
popf
pop
push
xor
outsb
lods
fsub
test
lret
jo
dec
mov
mov
imul
outsl
jecxz
sarl
pop
push
sub
shlb
inc
test
fsts
cmp
lret
push
xlat
dec
loop
addl
ljmp
adc
test
outsl
jle
cmpsb
jb
popa
icebp
insb
in
int
out
pop
jns
dec
ficoms
dec
dec
adc
mov
add
lds
movsl
inc
cmp
aad
repnz
xor
jg
mov
sub
hlt
and
outsb
gs
adc
lret
xchg
sub
popa
sbb
mov
pop
jbe
xor
out
inc
aam
inc
in
mov
adc
fistpl
idivl
insb
xor
push
pop
inc
jl
adc
repnz
outsl
out
movsb
faddl
jge
lahf
stos
fdiv
out
mov
in
and
add
jo
stc
out
pop
push
cmp
adc
dec
daa
jb
inc
fisubrs
pop
int3
cmc
testl
push
pop
xor
aam
fwait
inc
fwait
mov
movsl
mov
sbb
adc
test
jb
dec
ss
leave
inc
or
push
mov
idiv
les
ss
in
push
cmpsb
xor
lret
pop
xchg
sub
push
dec
push
lock
cmp
pushl
jmp
daa
inc
dec
popl
xlat
inc
dec
arpl
jne
dec
jle
push
imull
sti
loop
sub
inc
mov
rcl
inc
cwtl
test
jmp
dec
ljmp
mov
and
and
mov
test
nop
ret
repnz
push
out
aam
mov
push
ror
jnp
add
mov
and
aad
inc
movsl
shlb
jmp
jl
sbb
jp
mov
and
xchg
sub
mov
aas
popf
xor
jmp
adcb
cmp
pop
and
xchg
adc
loope
rcl
mov
push
nop
inc
in
pop
push
loopne
dec
jae
add
pop
mov
adc
jo
cmp
mov
shll
shlb
and
sub
push
imul
sub
neg
sti
jmp
sub
enter
not
jo
mov
or
pop
jp
lret
xchg
sbb
mov
mov
icebp
xchg
pop
add
dec
fidivl
inc
lret
pop
add
int3
imul
arpl
in
inc
ds
xor
lds
enter
jb
and
push
fcoms
mov
push
xor
push
add
xchg
push
js
sub
dec
and
cli
jno
or
data16
mov
mov
testl
xlat
sub
mov
mov
xchg
rcrb
sub
mov
push
add
les
xchg
stos
inc
adc
sbb
push
xor
outsb
push
cmpsb
out
mov
sbb
inc
sbb
mov
or
inc
xchg
test
int3
into
sbb
push
or
rcll
cwtl
dec
shlb
hlt
stos
or
xchg
mov
aas
clc
icebp
add
or
rorl
inc
aas
inc
movl
in
sub
call
outsl
lcall
inc
cmp
jne
call
adc
jne
sbb
mov
mov
jo
cli
adc
repz
add
mov
jne
mov
cmp
mov
in
or
test
mov
pop
and
jnp
dec
mov
pusha
jo
leave
cmpl
and
mov
ret
sub
enter
fadds
xor
pop
adc
cs
sub
mull
bound
out
mov
pushf
sbb
mov
scas
sub
in
dec
fistl
add
lret
stos
in
xchg
fnstenv
in
dec
jge
mov
xor
dec
pop
mov
cmpsb
sarl
cmpsl
inc
jnp
push
jp
bound
lahf
adc
dec
xor
out
bound
jno
push
mov
and
addr16
lahf
test
push
test
add
repnz
push
cld
mov
hlt
lahf
test
lret
xchg
sub
incb
inc
mov
jo
adcl
movsb
push
mov
cmp
lock
add
xor
decb
fsts
loopne
and
aas
pop
and
or
cltd
les
cld
mov
pop
or
adc
testl
ja
mov
dec
popa
xchg
push
xchg
add
adc
push
test
mov
jmpw
stc
lahf
outsb
shll
cmp
lret
hlt
xchg
add
mov
fadd
sub
inc
mov
test
les
push
xor
push
fnstsw
cmp
inc
mov
out
and
inc
data16
adc
stos
hlt
into
int
int3
cltd
inc
ror
shlb
popf
mov
hlt
jmp
sub
jns
ja
and
aas
xchg
jae
movsb
mov
mov
popf
movsb
xor
cltd
stc
push
stos
orl
orb
mov
lret
insb
movsb
sub
push
xchg
loop
shlb
addr16
inc
adc
test
push
daa
addr16
imul
inc
xor
and
jmp
sub
xchg
inc
test
vcvtsd2ss
aad
cmpsb
in
sbb
sub
sbb
push
das
pop
jne
mov
mov
mov
leave
sbb
jo
adc
sub
lahf
sbbl
lods
cmp
insl
push
mov
sbb
jns,pt
repz
sub
lcall
xor
xchg
push
pop
ret
sahf
pop
adc
ror
fsub
in
stos
cmc
faddp
fisubl
dec
sub
fcoms
jecxz
xchg
shlb
mov
sbb
loop
push
outsl
mov
repz
loop
repz
dec
loop
pop
in
xor
imul
inc
and
adc
mov
lret
xchg
cs
iret
xor
pop
jno
mov
sbb
inc
add
push
jbe
test
xor
cmp
cmp
cmpsb
cltd
stc
add
icebp
sbb
dec
orl
js
std
aaa
lods
pop
rcrb
xor
insb
jne
rcll
lcall
push
pop
cli
in
sahf
push
clc
cs
sub
add
cmp
mov
daa
push
sti
xor
std
jbe
dec
leave
cmp
and
pop
or
out
out
mov
cmpsb
jne
sahf
insl
mov
jo
pop
push
dec
lahf
and
jmp
and
movsb
nopl
inc
or
pop
jl
aas
xchg
add
and
mov
xor
add
std
fsubl
insb
in
cmpsl
inc
adc
cltd
movsl
push
std
mov
cmp
push
push
pop
dec
je
mov
mov
in
pushf
rol
inc
dec
aam
fistl
shrb
mov
decb
mov
push
in
sub
push
pop
jl
jns
sbb
dec
ljmp
mov
dec
std
push
pop
jne
bswap
jp
into
jns
inc
mov
jmp
add
test
add
dec
fsubrp
mov
and
mov
mov
stos
sub
dec
push
movsb
mov
arpl
addl
sti
cmp
mov
cli
push
test
shlb
adc
outsb
mov
or
xlat
jb
aas
xorb
jne
sub
jo
mov
loop
sbb
mov
arpl
iret
or
sbb
dec
mov
jmp
xor
movsl
or
jge
test
in
inc
sbb
jle
stc
cmpsb
add
jno
loopne
xchg
and
cmp
fadds
xchg
adc
pop
vmwrite
lret
sbb
jg
mov
push
mov
pop
sbb
mov
xchg
pop
adc
pop
push
jno
sub
ret
push
in
push
jae
push
sahf
leave
loop
dec
xchg
std
aaa
les
add
jp
bound
dec
sahf
imul
nopl
mov
adc
aas
aaa
js
cwtl
adc
mov
cmpb
push
aam
popa
adc
mov
cltd
imul
std
into
mov
mulb
adc
rorl
aam
fisubrl
mov
mov
shlb
pop
push
jo
push
mov
inc
add
xchg
xchg
sub
inc
pop
cmp
push
insb
sub
xchg
jge
or
and
xor
into
push
xchg
insl
ds
cmpsl
pop
in
pop
mov
push
fcmove
mov
scas
mov
mov
call
in
pop
xor
iret
cmp
jo
les
and
in
jo
mov
pop
popf
leave
pop
mov
es
cltd
lds
lret
hlt
cwtl
shlb
sahf
mov
lahf
pop
stos
lcall
lea
xchg
popl
lods
mov
ret
or
loopne
cwtl
inc
push
cmpsl
cmc
insl
ljmp
std
lds
call
les
lock
add
insb
xor
out
mov
cwtl
enter
mov
ljmp
lahf
data16
stc
mov
jbe
movsb
cltd
dec
aaa
xor
sub
movsl
lds
or
push
nop
jge
stos
pushf
movsb
adc
lods
popa
subl
and
jp
and
jle
pushf
inc
push
enter
test
pop
sbb
push
test
ds
dec
fidivs
cmpsl
loope
xchg
or
shll
inc
cmp
or
out
lods
add
loopne
jbe
sub
ret
add
sbbl
orb
push
dec
pushf
sahf
push
mov
cmp
ret
out
addr16
pop
pop
xchg
pop
or
jge
loope
popf
faddp
fwait
js
or
inc
in
loopne
dec
or
jg
fucomi
sub
xor
push
loop
scas
repnz
dec
loop
aam
cmp
ja
dec
repnz
pop
mov
jl
mov
je
sub
mov
scas
shlb
pop
lahf
pop
pop
mov
cltd
mov
clc
sarl
mov
inc
negb
ret
mov
outsb
fsqrt
out
mov
es
pushf
dec
jns
jno
test
mov
adc
mov
add
mov
mov
dec
jae
xchg
push
adc
dec
xchg
xchg
mov
mov
push
add
push
es
and
sub
add
mov
popf
in
jl
pusha
dec
outsb
mov
inc
fmuls
mov
rep
mov
pop
lods
push
pop
addr16
loope
enter
push
mov
out
push
rclb
ret
adc
xchg
adc
push
and
andl
push
lea
ss
inc
sahf
mov
mov
jmp
xor
lods
gs
cmp
push
xlat
das
das
xchg
adc
and
fidivl
inc
fs
push
jo
and
cmp
push
mov
fmull
aas
pop
je
mov
add
fidivrl
dec
jl
add
ss
cltd
mov
mov
add
mov
mov
ljmp
push
dec
sbb
pop
xchg
cmpsb
fldcw
push
cmp
mov
jo
sbb
arpl
and
pop
adc
xor
aam
push
imul
sbb
lret
adcl
xor
cmp
loopne
dec
aas
jno
and
lods
adc
and
mov
xor
aaa
cmp
aas
or
loopne
andb
inc
add
xor
decb
btc
cmp
jb
fwait
lahf
imul
in
add
jp
push
or
xchg
cld
lock
aas
bound
mov
outsb
loop
imul
cmp
inc
sub
mov
lea
sub
xchg
in
sub
mov
daa
push
adc
sub
decl
scas
add
ret
stos
mov
push
pop
leave
cmc
je
aad
icebp
xchg
pop
mov
data16
pop
cmpsl
fistpl
push
sti
push
push
popf
lds
dec
fs
aad
mov
pop
pop
fisubs
dec
mov
neg
js
jb
pop
xlat
sbb
jne
pop
add
sbb
sub
jb
lret
add
lods
mov
sti
xchg
shll
jg
pop
sahf
hlt
push
test
inc
insl
inc
and
cs
cmp
es
inc
cmp
dec
in
jp
or
loopne
dec
int
adc
outsb
popf
pop
leave
mov
shll
mov
mov
adc
mov
out
pop
xor
sbb
add
out
inc
jl
or
mov
xor
in
test
adc
mulb
ljmp
dec
pushf
cmp
cmp
add
pop
xor
pop
mov
and
pop
jne
fisttpll
push
fldt
hlt
cli
sbb
mov
aaa
xchg
ljmp
outsb
scas
inc
pop
mov
mov
test
jg
ss
inc
push
outsb
and
jl
push
sub
mov
or
stc
sbb
lret
sbb
adc
mov
sub
pop
dec
bound
in
inc
pop
imul
int3
repz
aam
mov
popa
fs
push
cli
pushf
push
add
xchg
mov
iret
rclb
mov
cli
mov
xlat
pop
mov
out
push
jmp
add
stc
lock
dec
ss
adc
shrb
daa
out
lods
scas
push
imul
cmpsb
mov
loop
pop
jge
nop
in
sbb
inc
mov
sbb
sbb
adc
scas
cmp
bound
sub
add
loopne
lcall
imul
repnz
pop
ja
xchg
xor
jecxz
adc
in
or
xor
mov
sub
sbb
rclb
out
nop
xorb
push
mov
movsl
sub
pop
arpl
int3
jns
nop
jne
inc
or
loopne
repnz
mov
xchg
scas
push
js
xchg
mov
call
sub
fcomps
jae
xchg
jg
and
pop
lahf
repnz
push
orl
inc
sar
push
ljmp
mov
lahf
inc
mov
imul
mov
jns
les
xchg
ss
in
leave
stc
or
test
push
outsl
test
cs
in
movsb
xchg
imul
mov
mov
in
push
mov
inc
shrl
xchg
rorb
sbb
inc
push
jmp
cmc
je
arpl
ss
inc
push
inc
adc
imul
lcall
adc
mov
aaa
push
cmp
or
jbe
jl
push
enter
testl
pusha
inc
out
pushf
pusha
repnz
and
ds
cmp
cmp
jnp
sbb
call
fldenv
mov
iret
pop
lea
fists
aad
add
mov
mov
jp
add
insb
push
rclb
mov
sub
stos
test
jb
lret
loopne
inc
mov
daa
sarl
leave
or
xor
sarb
pushl
mov
jl
test
push
scas
dec
inc
cmp
add
movsb
fidivl
stos
pop
pusha
arpl
js
sahf
jle
xor
call
stos
jmp
jg
jecxz
cmc
orb
sub
jno
xlat
lods
inc
xor
ret
in
mul
in
cmp
outsl
bound
sbb
pop
movsl
pushfw
fistl
adc
test
mov
pushw
sar
popf
jge
mov
shr
test
xor
ret
mov
orl
imull
out
jmp
add
test
rcl
dec
cmp
xor
lds
mov
push
clc
xchg
inc
lret
je
jns
fdivl
mov
hlt
push
outsl
xor
dec
or
insb
or
sbb
xchg
mov
cwtl
out
imul
insl
xchg
ret
dec
jae
scas
jmp
fs
int
jns
add
add
stos
sbb
pop
cmc
cld
sub
pop
in
fwait
and
loopne
push
pop
mov
fnstsw
jae
cmp
or
out
lock
sbb
pop
stos
pop
jecxz
mov
jne
aaa
or
les
je
mov
shlb
test
repnz
test
pop
repz
repz
hlt
sub
aas
pop
addl
xchg
dec
int
push
aad
dec
cmp
sbb
ja
mov
or
scas
mov
and
mov
lods
cmp
and
nop
mov
in
xchg
aam
shl
mov
mov
popa
aad
mov
jg
dec
dec
or
loopew
cwtl
mov
das
stos
dec
aaa
xor
jle
xor
orl
mov
dec
dec
xchg
sbb
stos
dec
fcomp
mov
cwtl
jecxz
push
push
or
leave
or
mov
pop
mov
adc
cwtl
sahf
cmp
adc
out
mov
mov
inc
nop
je
aaa
inc
sahf
leave
cmp
fstpl
push
adcl
pusha
jecxz
das
cmpsl
int3
pop
pusha
adc
mov
cmp
sbb
mov
jns
out
andb
mov
pop
inc
clc
add
call
push
shr
xlat
mov
or
mov
mov
pushf
int
ds
daa
test
outsb
xlat
arpl
mov
test
add
dec
cmp
xchg
xchg
mov
pop
test
and
sahf
sub
dec
push
dec
xor
in
push
mov
xchg
mov
jg
mov
pop
jecxz
jmp
mov
ljmp
iret
sub
mov
andl
push
pushw
insl
filds
mov
cld
incb
loope
pop
jg
add
sahf
outsb
jae
cmc
cltd
cmp
scas
lods
dec
push
push
push
test
out
cwtl
adc
daa
std
xor
and
xor
adc
or
sub
lahf
daa
clc
mov
cmp
pop
or
cmp
daa
cmc
pop
push
js
cmpsb
inc
out
bound
hlt
insb
popf
inc
push
je
sahf
aaa
insb
mov
leave
loope
cmp
push
mov
lods
mov
jne
dec
jbe
mov
aad
ss
int
rorl
mov
add
adc
sbb
inc
pop
lds
testl
inc
fisubl
ret
sbb
sub
dec
or
push
es
fisubrl
mov
std
fcomps
ja
cld
mov
cwtl
cli
xchg
leave
ds
or
stc
mov
lahf
ds
mov
inc
stos
hlt
pushf
hlt
mov
mov
mov
shrl
pushf
add
inc
and
jl
inc
inc
dec
adc
in
mov
mov
test
mov
test
xor
les
mov
pop
mov
adc
pop
mov
in
mov
das
mov
dec
outsb
xor
add
and
enter
xchg
jb
clc
call
loopne
mov
out
add
stos
js
sbb
test
push
daa
xor
mov
xchg
enter
jge
cmp
sbb
int3
sub
arpl
cmp
mov
jecxz
leave
inc
shlb
lahf
test
shlb
pop
aam
fcoms
xor
data16
pop
and
les
xchg
pushf
mov
rclb
fsubl
or
dec
arpl
jg
sub
push
inc
popf
sahf
dec
lods
push
cmpsl
dec
inc
pop
imul
popf
dec
mov
adc
mov
outsl
iret
es
add
scas
sbb
fcomip
dec
cltd
sbb
jns
scas
add
jg
add
pop
dec
outsl
jp
mov
inc
imul
movb
jecxz
or
dec
adc
loopne
sub
adc
call
inc
or
pop
pop
xor
cmpsb
xor
cmp
jnp
lods
ja
fs
cmp
sub
scas
test
out
cld
push
dec
ss
mov
or
pop
sub
or
mov
in
jmp
outsl
xchg
and
mov
lods
jbe
xchg
aas
aas
loope
daa
out
xor
push
sahf
push
out
adc
test
inc
das
mov
pushf
out
inc
addb
xchg
lcall
scas
cmp
les
popa
daa
dec
call
mov
in
inc
mov
clc
mov
in
pop
add
clc
fadd
xor
int
ror
shlb
mov
popa
adc
xor
sub
fwait
pop
dec
in
xor
test
ss
jo
int
shlb
pop
sbb
daa
lods
nop
sub
jecxz
xor
pop
in
cmpsl
dec
movsl
call
nop
sahf
push
lods
cmpsb
dec
jle
lods
lock
mov
pop
sbb
inc
sub
lcall
mov
mov
mov
in
sbb
sbb
jmp
push
or
pop
adc
rol
jmp
into
xchg
xchg
rcrb
das
fst
or
testl
jg
dec
inc
jmp
repz
sti
neg
ficoml
cld
sbb
push
fdivp
movsl
loopne
je
rcrb
out
pushf
mov
mov
or
test
mov
sub
add
enter
adc
adc
sahf
pop
frstor
imul
nop
fisubs
mov
mov
insl
cmc
sub
sbb
adcl
mov
adc
sahf
xor
inc
test
or
lret
es
insl
xor
hlt
scas
add
dec
xchg
shr
fcmovnu
adc
pop
xor
popa
pop
jmp
pop
push
xor
sbb
xor
sbb
into
clc
mov
xchg
adc
ds
xchg
xor
xchg
fld
jg
aaa
jno
and
cld
aas
xchg
cmp
shrb
stos
push
fdivrs
add
sub
iret
adc
stos
jbe
add
jge
dec
mov
stos
adc
scas
fcoms
insb
in
into
push
mov
mov
pandn
jp
cmp
fcomi
adc
and
xchg
jae
and
lahf
loopne
cmp
jmp
pop
cli
ljmp
pushf
sahf
add
jo
sar
sbb
xchg
popa
leave
xchg
test
jbe
and
xor
jl
mov
lods
pop
mov
aam
loope
mov
lods
enter
rcrb
shr
push
and
jb
imul
out
sar
ja
mov
out
mov
in
rcrl
mov
or
sbb
jo
jns
cmp
sti
or
push
or
push
sti
cmp
addr16
inc
leave
test
in
lret
xchg
std
jmp
pop
xchg
icebp
loope
xchg
sub
jnp
into
js
sub
sub
lods
xor
pop
int3
insl
outsb
in
cmpsl
repz
psubw
rcrb
inc
mov
daa
cmp
xchg
shlb
mov
popa
mov
jae
mov
outsb
and
mov
lahf
sub
sbb
cltd
and
push
dec
es
lock
mov
add
popf
cmp
pop
xchg
jne
add
ret
jb
mov
jno
push
pop
pop
or
js
sub
jge
mov
cmp
xlat
ret
fmuls
aad
mov
pop
and
push
bnd
fidivrl
pushf
shrb
fidivl
adc
lcall
mov
fidivrs
mov
fldt
insl
call
jle
nop
mov
pop
repz
loop
mov
and
inc
xchg
and
cmp
dec
mov
xchg
lods
adc
jno
sbb
cwtl
addl
popa
es
ja
scas
push
sbb
aad
sbb
cli
cmpsb
sbb
cs
loope
iret
mov
and
sbb
pusha
xor
sub
jbe
ljmp
inc
push
mov
insb
mov
lcall
xchg
scas
fidivl
aad
or
cmp
nop
shll
push
leave
and
push
jno
cmc
add
movsl
dec
outsl
ss
imul
call
push
inc
stos
adc
jnp
pop
pusha
aam
cmp
insb
loope
xor
cmp
or
stos
xchg
shll
push
cmpsl
cmp
out
leave
mov
cld
cli
ret
aad
shl
cmp
fildll
pop
loope
ss
pop
leave
test
les
es
push
sub
je
mov
scas
add
sahf
pop
add
dec
mov
in
test
insb
lret
mov
daa
jne
jecxz
aaa
stos
sahf
cmp
xchg
lock
sbb
xchg
das
fs
xchg
jecxz
fimuls
xor
push
jo
jo
pop
aad
outsb
mov
pop
mov
push
sbb
inc
lods
jmp
cmc
inc
shlb
mov
fdivs
subl
xor
dec
aas
adc
adc
add
xor
les
mov
loope
mov
popf
mov
xchg
dec
mov
add
mov
bound
jg
adc
test
add
mov
sub
cs
adc
test
aas
call
hlt
popl
add
pushf
push
push
mov
dec
push
xchg
xchg
aam
inc
mov
mov
pop
and
adc
fisubrs
mov
stos
mov
xchg
sbb
jmp
ss
fadds
out
inc
xor
je
mov
push
dec
jge
or
neg
pop
add
dec
ffree
mov
mov
das
inc
xor
out
jns
bound
popf
xchg
mov
push
sub
mov
sbb
out
cltd
ret
push
or
adc
in
movsl
daa
xor
sub
imul
daa
pop
mov
cmp
adc
push
dec
xorl
fnstsw
mov
mov
pop
inc
or
cli
fisubrl
icebp
dec
or
jl
roll
and
arpl
mov
push
jns
ret
dec
scas
lahf
fisttps
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
add
addl
jo
cltd
sbb
sub
xor
sbb
addb
jo
push
mov
mov
cmp
xchg
mov
ret
dec
fwait
dec
ret
sbb
adc
xchg
sarl
les
test
and
lcall
mov
pusha
push
inc
sub
cmp
mov
dec
sbb
fcmovu
rcrb
xor
sbb
mov
test
pop
fldt
mov
fadd
add
jp
adc
mov
mov
pop
sbb
sbb
mov
fistps
cmp
add
cmp
push
aam
pop
fwait
mov
out
cmp
jne
into
mov
push
lods
jo
jmp
mov
iret
xchg
fcompl
mov
and
pop
inc
lods
add
mov
adc
xchg
mov
pop
nop
sbb
je
insb
lcall
jb
orl
mov
daa
and
mov
and
push
cmpsl
hlt
cmp
ret
sbb
dec
xor
mov
push
cmpsb
mov
test
mov
pushf
shrb
scas
iret
scas
shrb
jmp
shll
cmp
jnp
adc
cmpsl
mov
mov
in
fadd
xor
das
xor
jg
out
jmp
mov
sbb
repz
mov
testb
pop
jbe
pop
adc
jbe
cmp
dec
sbb
jg
sbb
jbe
pop
add
arpl
das
lock
hlt
outsl
sub
push
sub
sbb
lock
aad
scas
xchg
insb
ljmp
inc
sbb
insl
enter
cmp
jne
xor
aaa
outsl
xor
rorl
mov
jp
mov
mov
outsb
fistl
iret
dec
addb
xor
stos
shll
push
add
mov
push
rcrl
pop
pusha
jae
xchg
jp
xor
aad
movb
mov
hlt
dec
mov
sub
and
std
push
cmp
cmpsl
pusha
cmp
mov
aam
movsb
lret
push
addr16
ret
jbe
jnp
gs
test
shrl
sbb
daa
inc
cmc
xor
inc
sbb
jns
test
push
iret
call
lahf
or
dec
popa
xchg
ja
fsubp
mov
push
mov
mov
mov
push
test
xor
push
cmpsl
pop
pop
aas
scas
lods
test
repz
push
xor
xchg
add
xchg
ljmp
pusha
push
cmp
add
mov
fwait
cmpsl
int
cmpsl
inc
mov
jle
or
lods
bnd
dec
or
cmp
dec
inc
and
sbb
fld
ret
xchg
js
pop
pop
jmp
and
mov
dec
lret
pusha
imul
dec
mov
pushf
jno
cmp
adc
scas
push
fcmovnbe
int
and
repnz
jae
mov
lea
cmpsb
add
cmc
repnz
xor
mov
jp
xor
xor
insl
mov
xor
push
lret
add
xorb
dec
out
push
in
and
js
dec
adc
push
push
out
xchg
mov
fsubrs
pop
shlb
vcvttps2dq
mov
cs
push
sbb
scas
inc
sbb
mov
cmp
mov
and
iret
dec
into
sar
daa
cmpsb
stos
into
lock
aad
add
pop
outsl
inc
shlb
mov
pop
and
dec
stc
add
xchg
and
iret
test
mov
push
push
xor
pop
sbb
lods
fs
popa
push
test
scas
sti
cmp
sbb
jnp
mov
push
sbbl
repz
sub
dec
push
push
cmp
into
add
lea
addl
ljmp
mov
sbb
add
outsb
sub
ljmp
gs
adc
test
aam
sub
ret
lods
cwtl
adc
add
scas
jle
xchg
sub
lock
test
mov
xlat
jle
mov
fstps
mov
leave
pop
xor
xor
cmc
js
adc
dec
ret
in
jbe
fildl
push
push
pop
fbstp
testb
add
jno
push
arpl
push
xchg
dec
push
cmc
bound
mov
test
xor
ret
test
clc
add
cmp
jns
push
sbb
out
cmp
int
ja
sbb
cmp
xchg
shlb
xchg
icebp
popf
xchg
cmp
push
andb
pushf
xchg
mov
mov
mov
cmpsl
jle
cmp
sub
push
sub
adc
xchg
push
or
sbb
adc
jae
mov
divl
cmp
jle
insl
mov
aam
stc
dec
xchg
in
test
pop
in
enter
in
call
dec
rolb
insb
add
or
mov
lock
mov
or
mov
fisttpll
xchg
inc
and
xchg
popf
outsl
int3
rcr
in
adc
jmp
jno
add
bound
push
mov
cld
mov
xchg
cmp
pop
or
sub
mov
lret
adc
loope
xchg
lds
aas
dec
scas
add
jl
out
mov
cs
daa
mov
pushf
jbe
les
mov
push
mov
inc
mov
xchg
xor
pushf
jmp
mov
lahf
inc
jno
lret
out
sub
pop
popa
push
daa
bound
aas
push
dec
ds
sbb
mov
mov
addr16
xor
sub
mov
sahf
cmp
jne
jb
sub
inc
ja
pop
lods
imul
pop
flds
adc
cs
cli
mov
iret
rcll
fwait
jecxz
sbb
std
pop
subl
xrelease
shl
pop
mov
cs
dec
aas
cli
dec
jne
sbb
insl
mov
push
add
mov
mov
sub
in
mov
adc
mov
dec
outsb
ljmp
inc
lcall
inc
bound
stos
pop
pop
test
lock
push
fcomip
inc
inc
js
aad
jo
or
pop
cmp
pop
and
or
mov
inc
je
sub
mov
das
mov
and
ds
test
lahf
push
aad
lret
cli
adc
movsl
sarl
ret
mov
inc
test
dec
js
fstpl
sub
adc
or
cmp
mov
dec
mov
popf
fs
xchg
push
enter
mov
cmp
adc
out
jbe
mov
mov
ret
dec
fisubrs
stos
add
xchg
sub
mov
imul
push
sbb
hlt
repnz
stos
mov
aas
in
inc
dec
pop
inc
loope
mov
insb
js
fldcw
lock
lea
pop
test
add
jbe
push
hlt
dec
and
sarl
mov
subl
aas
and
jno
cmp
fildl
jl
mov
popa
outsb
and
inc
scas
lds
push
scas
push
cmp
rcrl
test
les
fstl
aam
jge
sbb
cwtl
in
cmp
call
xchg
insb
je
mov
add
dec
insl
clc
xchg
mov
and
sbb
push
dec
cmpsl
fs
add
popf
lds
jmp
cmp
popa
loopne
sar
xor
xchg
sub
rolb
repz
scas
out
insb
in
dec
push
stos
jae
push
lds
sub
xchg
fdivr
fcomi
movsb
in
fdivp
xor
les
mov
push
mov
aaa
scas
popa
jno
push
nop
scas
push
sti
aad
arpl
inc
sbb
idivb
add
loopne
jg
fsubl
loope
loop
mov
mov
outsl
inc
add
test
jecxz
jo
push
jb
lods
outsl
fistpl
add
sub
and
jg,pn
inc
dec
fildll
sub
dec
add
sub
add
mov
cld
pop
fwait
sub
jnp
xchg
mov
mov
incl
mov
flds
sub
inc
loope
mov
mov
mov
test
cmp
pop
adc
mov
icebp
fld
ljmp
sbbl
pop
repnz
lea
jbe
std
pop
out
push
lcall
pop
xor
ficoml
xchg
inc
loop
mov
movb
aaa
push
mov
movsb
jnp
mov
mov
pop
mov
and
mov
mov
sbb
and
inc
sub
mov
pop
icebp
enter
cmp
mov
and
and
push
out
mov
pop
aam
jnp
cwtl
jp
test
push
ffreep
cmpsl
in
movsb
dec
popf
xor
xor
out
xlat
ds
int3
inc
and
sub
or
xor
aad
or
in
push
insb
xor
lret
mov
sbb
xchg
pop
mov
jecxz
mov
mov
inc
mov
ja
pop
aam
cmp
adc
lret
cmp
jecxz
and
insl
in
or
pop
mov
adc
leave
mov
icebp
jle
mov
sbb
push
mov
mov
ret
pusha
mov
jnp
jns
call
sub
fwait
pop
test
inc
dec
lcall
notb
loop
add
in
popf
pop
or
push
add
jp
dec
sub
jmp
pop
rolb
push
es
movsl
adc
pop
adc
cmp
fisubrs
les
inc
js
adc
sbb
les
inc
inc
dec
es
test
jg
push
inc
inc
imul
nop
jle
imul
out
cmp
xor
push
sbb
outsl
fucomp
push
mov
push
out
inc
int
aas
xchg
sub
xchg
push
jne
adc
ss
add
es
dec
scas
fcomps
ret
mov
push
and
ljmp
icebp
push
cmp
mov
push
fwait
jl
outsb
sti
push
iret
and
adc
stc
inc
mov
out
pop
push
clc
dec
sbb
sub
dec
xor
sub
lcall
jmp
adc
aad
nop
nop
pop
sahf
fnstsw
je
sub
mov
fcmovb
mov
cmc
cltd
je
scas
push
mov
aaa
enter
stc
push
lret
scas
test
pop
mov
mov
and
inc
cld
push
mov
mov
xor
repnz
call
sbb
push
notl
scas
imul
xor
pusha
pop
fdivl
scas
out
int3
jle,pt
imulb
mov
sub
shlb
pusha
data16
in
pop
dec
push
andps
inc
pusha
outsb
sbb
or
fistpll
xor
call
fwait
movhlps
rcr
lods
sbb
cmpsb
test
hlt
or
dec
cmpsl
cmc
aas
lret
das
stos
fisubs
sbb
xchg
hlt
mov
jb
repz
push
inc
push
out
lods
and
subl
and
and
mov
mov
scas
dec
fs
clc
or
mov
shrl
fistpll
ss
cli
pop
cmp
lock
push
xchg
cld
sbb
jmp
pop
out
inc
xchg
inc
shl
sti
sub
hlt
push
cltd
cmp
stos
in
push
sbb
cmpsb
jmp
pop
sahf
cmpl
adc
call
mov
std
xchg
sub
leave
rcrl
sbb
adc
sti
ret
pop
mov
test
push
out
sbb
call
idivl
inc
enter
sub
xor
inc
dec
cwtl
dec
mov
add
dec
sub
mov
dec
lods
xchg
adc
fiaddl
xorl
mov
mov
test
nop
rcrl
push
xchg
push
inc
mov
cmp
popa
dec
int
cltd
outsb
cmp
rcr
dec
aaa
jp
icebp
lret
pop
flds
dec
mov
push
leave
dec
fcmovu
dec
sbb
xchg
lcall
pop
gs
mov
loop
adc
adc
lds
sbb
scas
stos
mov
mov
mov
int
xchg
sub
dec
xchg
filds
pop
add
hlt
addr16
cmovb
pshufw
jno
mov
data16
sub
sbb
subb
mov
xchg
push
sbb
dec
xor
icebp
inc
xchg
mov
mov
pop
es
add
and
mov
mov
jge
jecxz
clc
add
scas
inc
and
jl
in
jnp
cmpsb
les
mov
mov
pop
mov
xor
out
adc
popf
cmp
cmp
or
xor
in
stos
jmp
jae
sub
sub
mov
dec
aaa
push
jp
iret
stos
ror
sbb
xchg
sbb
xchg
clc
add
pop
lret
daa
lods
xlat
movsb
push
fildl
dec
adc
movsb
outsl
inc
push
popf
fpatan
mov
xorl
insl
mov
push
movsb
push
lods
jnp
mov
icebp
cmp
sub
sahf
cmpsl
mov
jne
mov
and
xchg
js
mov
fildll
pop
roll
pop
mov
fcoms
in
xchg
push
inc
mov
ja
out
xlat
push
popf
out
cld
fstpl
mov
xor
ret
pop
xchg
push
sbb
cmp
adc
incl
lods
sbb
dec
mov
out
lods
sti
hlt
xor
in
cmp
sub
push
sti
fisubl
sub
outsl
aam
cmp
inc
xchg
xor
xor
pushf
xor
mov
cmp
mov
adc
js
cmpsl
dec
popa
sti
cmpl
jno,pt
cmpsb
jmp
jmp
arpl
adc
les
shrl
and
aam
mov
xor
pop
push
and
mov
cmpsb
outsb
enter
sub
sbb
aam
ds
cld
lret
xchg
mov
mov
movsb
add
cmp
aas
add
push
add
and
cltd
dec
cli
pop
or
cwtl
jecxz
xor
mov
adc
fnstsw
adc
sbb
xchg
icebp
jp
adc
xorb
pcmpeqd
inc
out
fdivl
and
and
jmp
imul
in
adcb
inc
out
mov
or
lods
fisubs
fcompl
fisubrs
xor
outsl
adc
pusha
xchg
xor
jne
gs
mov
push
lock
js
out
jo
cmp
pop
xlat
push
and
loopne
stc
clc
emms
test
jecxz
push
movsl
pop
adc
ret
cmp
dec
repz
gs
jo
sbb
push
xchg
cmpsb
xchg
push
repz
pop
mov
jnp
ficompl
loopne
push
push
and
shll
popf
mov
or
push
xor
std
dec
pop
pushl
das
pop
cmp
push
mov
fs
int3
inc
sbb
and
sbb
adc
add
inc
push
or
fadds
cmp
push
loope
in
jno
xchg
add
not
aas
aaa
jae
scas
out
sbb
push
int3
xor
scas
mov
addl
xchg
adc
sbbb
pop
fldt
sbb
lahf
mov
push
out
shrb
dec
xor
jge
lods
add
popa
and
mov
rcl
push
and
mov
cmp
add
mov
fldt
ficompl
xor
cmc
mov
xchg
adc
divb
mov
dec
mov
mov
enter
in
je
paddsb
movsl
arpl
mov
push
dec
xchg
movsl
repz
xchg
fadd
or
imul
test
inc
push
mov
mov
insl
sbb
cmpsl
adc
movsl
mov
fisubs
sub
jge
mov
ret
inc
cmp
bswap
nop
lcall
cli
aas
ficoml
cmp
mov
js
movsb
xor
xchg
andl
sbb
pop
stos
aaa
or
and
ret
mov
sbb
rcl
lds
fbstp
xor
dec
jbe
movsb
test
and
std
movsb
nop
pop
jp
shrb
sbb
jge
adc
test
loope
sub
ror
repz
dec
clc
popf
clc
push
pushfw
sub
push
mov
aas
push
lret
sbb
mov
adc
outsb
cmpsb
add
movsb
or
sbb
push
fists
cmp
mov
and
adc
stos
push
push
and
cmp
xchg
scas
add
sub
push
mov
adc
rcrl
pop
xor
push
mov
sub
add
jne
xlat
pop
add
jle,pn
icebp
repnz
in
nop
inc
mov
js
rcr
repz
outsl
cmp
loope
es
inc
xchg
jnp
and
mov
lods
pop
jbe
and
push
inc
or
data16
fisubs
xchg
cmpsl
stc
add
xchg
imul
enter
xor
mov
or
imul
daa
jnp
ucomiss
dec
cs
stc
xchg
rol
sub
inc
fldenv
dec
mov
scas
test
xchg
xchg
roll
cld
mov
or
dec
data16
mov
jp
das
pushf
lock
popa
iret
inc
outsl
std
rcrl
pushf
xor
dec
adc
xchg
cmp
dec
test
mov
inc
xchg
pop
xchg
cmovno
sub
mov
push
data16
or
call
jne
and
stos
mov
xor
imul
or
push
sbb
xchg
out
stos
push
or
ljmp
orl
lods
mov
test
xchg
and
push
cmp
ds
add
dec
adc
aad
push
push
test
out
lcall
pop
xor
lahf
push
dec
sbb
stc
addb
clc
mov
add
mov
or
push
push
xor
test
push
in
nop
add
or
jmp
xchg
cli
adc
scas
es
sarb
rclb
cmpsb
push
shl
in
inc
out
jecxz
pop
cltd
pop
push
lock
add
lret
sbb
xlat
xor
fldt
hlt
testl
fwait
or
mov
out
test
add
xchg
int
fwait
push
dec
loopne
jb
out
gs
cmp
jbe
jnp
nop
mov
inc
enter
adc
push
fwait
sub
inc
and
das
test
fcompp
std
xchg
xchg
ljmp
test
adc
stos
ffreep
push
xor
inc
sbb
adc
jb
sbbb
test
sbb
mov
pop
mov
pushf
dec
mov
pop
leave
arpl
outsl
xchg
pop
ficompl
jbe
call
cwtl
pushf
mov
addr16
push
movb
and
inc
dec
mov
lcall
jns
jl
jmp
and
inc
imul
push
push
mov
jno
sub
mov
fsubs
enter
jb
mov
dec
xor
pop
jge
inc
cmp
loope
clc
sbb
in
andb
xor
out
jb
js
mov
in
jae
leave
xchg
test
cmp
cmp
test
loopne
outsb
fisttpl
sti
jecxz
insl
rcrl
mov
sbb
xchg
mov
testb
xchg
mov
pop
mov
std
sub
stos
test
out
add
jge
leave
in
lret
lret
outsb
sub
fwait
movsl
je
lcall
add
pop
insb
ss
incb
jo
ss
mov
mov
in
rorb
jg
sbb
sub
les
cmc
cwtl
xchg
sbb
mov
add
or
push
loopne
xor
in
int3
mov
fs
dec
jp
leave
mov
pop
mov
push
mov
sbb
mov
fbstp
mov
dec
mov
fwait
xchg
lcall
adcb
jmp
dec
incl
stos
pop
mov
sub
inc
sbb
push
push
xchg
or
mov
mov
orb
push
push
lods
inc
scas
shlb
ja
or
xor
push
pop
xchg
pop
jae
aaa
lcall
push
roll
lock
fildll
mov
or
dec
or
jp
fdivl
push
xlat
in
or
add
into
out
fsubl
das
mov
sub
fisubrs
and
daa
fidivs
inc
daa
cwtl
js
cli
inc
push
sub
sar
sub
mov
je
cmp
mov
mov
sti
add
adcl
xor
cli
dec
adc
pop
inc
sub
out
mov
loope
sbb
pop
inc
add
xchg
push
fimuls
sti
cmp
and
ljmp
pop
adc
outsl
inc
sbb
adc
ljmp
test
ficomps
enter
leave
testb
int3
in
loopne
pop
jne
inc
sub
pop
test
rcrb
call
and
push
dec
ds
shlb
jle
test
pop
cld
ss
mov
arpl
outsb
fsub
mov
sti
jne
out
test
test
rcr
and
push
mov
cmpb
lock
cli
ja
sahf
lods
adc
sub
inc
push
pop
jb
scas
dec
js
outsl
pushf
pop
push
add
pusha
movl
clc
add
enter
sbb
sub
inc
rol
xor
ret
mov
add
pop
fdiv
jg
pop
or
test
cwtl
clc
xchg
or
icebp
aas
mov
in
push
scas
out
jae
adc
in
test
xchg
test
mov
outsb
mov
sbb
sub
push
ret
or
cmp
and
in
leave
jle
fsts
xor
leave
arpl
sbb
pushf
out
dec
ficomps
sub
xor
mov
sbb
repnz
inc
add
xor
jne
jb
je
push
sahf
or
add
xchg
sub
xchg
insb
jnp
mov
jne
lock
lock
sub
mov
cmpl
ss
sbb
iret
outsb
lods
push
xor
dec
push
mov
push
cwtl
push
addr16
daa
pop
pop
cmc
push
and
adc
sub
push
stos
inc
out
mov
ja
mov
or
push
push
stos
add
sub
out
fsubrs
clc
pop
test
in
xchg
in
mov
mov
sbb
frstor
mov
fs
leave
xor
xchg
mov
jnp
sbb
and
adc
mov
dec
nop
inc
sub
sar
pusha
mov
cmpb
xchg
jne
cmp
je
or
push
dec
pop
pop
inc
jbe
push
pushf
sub
pushf
sbb
fwait
push
mov
mov
push
loop
xchg
push
sahf
adc
mov
sub
xchg
push
mov
sub
pop
je
cmp
cmp
jae
push
cmc
jecxz
xor
in
cmp
repz
xor
out
sbb
mov
dec
pop
fwait
int3
mov
add
mov
adcb
lahf
fwait
pop
fists
xchg
push
sbb
lret
sbbb
pop
aaa
daa
mov
pop
pop
lds
cmp
out
add
add
sub
mov
mov
or
xor
push
cmp
ret
inc
sahf
ret
shlb
adc
mov
pop
mov
jmp
mov
add
dec
gs
out
adc
mov
push
sub
xchg
fidivrl
pop
in
das
aam
ret
jmp
mov
xchg
fs
cmc
aas
in
add
push
push
lods
rolb
dec
jo
mov
push
dec
jge
or
pop
push
mov
insb
jl
mov
add
aam
mov
push
or
mov
outsw
in
pusha
lcall
mov
push
in
cld
or
ss
pop
pusha
rolb
enter
sub
xor
out
rcll
push
jno
cmp
sub
sub
loopne
int3
hlt
adc
jp
xchg
stc
in
nop
sbb
je
lea
jnp
sbb
and
push
jnp
inc
inc
gs
sahf
sbb
push
mov
jae
stc
mov
add
aaa
cmp
mov
es
inc
xor
or
inc
mov
mov
cwtl
sub
aad
xchg
test
mov
insl
mov
jp
div
jnp
into
dec
test
mov
jno
push
gs
jmp
mov
mov
leave
pop
push
xchg
pop
xchg
rcrl
cld
jge
push
xor
sub
lea
sub
int
dec
cmp
sbb
xor
inc
inc
js
mov
mov
push
scas
dec
pop
dec
aaa
xlat
addr16
mov
popf
add
call
mov
xor
clc
aad
jl
and
mov
sarb
mov
sub
xor
ret
add
loope
jge
fsts
jnp
mov
rcr
jb
sarl
mov
cltd
cmp
adc
into
adc
std
hlt
pop
xchg
pushf
and
cwtl
aad
dec
or
imul
icebp
add
dec
push
adc
xor
jl
inc
popa
adc
sbb
mov
lcall
pop
xor
mov
popf
sbbl
std
cltd
sbb
lods
fisttps
aam
sub
out
mov
ret
addl
das
cmpsb
xchg
mov
push
pop
sub
adc
pop
or
jmp
ror
js
mov
sbb
sar
or
les
inc
xchg
inc
mov
movb
test
or
lahf
repz
xor
cli
rorb
cmp
xor
add
pusha
out
sbb
call
push
mov
xorl
movsb
fucompp
pop
imul
out
mov
xlat
pop
jmp
adc
scas
repz
aad
popf
adc
push
pop
mov
mov
scas
stos
into
or
push
enter
fwait
adc
add
inc
dec
test
ljmp
imul
push
test
sbb
and
inc
jecxz
lea
lahf
mov
es
inc
pop
push
pop
cwtl
xchg
or
push
dec
mov
or
mov
stos
pop
mov
test
in
shlb
mov
not
sbb
ss
or
lcall
jp
jl
repnz
jnp
or
bound
imul
xchg
push
cmpsl
jns
ret
mov
xchg
dec
in
sbb
pop
mov
sbb
xor
pushl
je
jne
pop
or
or
mov
pop
xchg
mov
add
test
jnp
dec
les
aam
jo
sub
or
xor
cmp
and
rcrb
inc
sbb
test
cmp
out
imul
int3
pushf
and
jne
mov
inc
add
mov
xchg
jp
or
xor
std
push
ficoml
movsl
or
xchg
xlat
sub
dec
add
inc
scas
add
mov
in
jge
scas
repz
lret
xchg
inc
mov
pop
cmp
mov
and
xchg
and
inc
in
ds
ret
cmp
movsb
jl
je
mov
movsl
in
sbb
push
jo
neg
and
popa
fcomps
insb
mov
xchg
dec
popf
pop
rcrl
das
dec
bound
jae
push
cmp
outsl
mov
add
outsb
icebp
je
outsb
and
test
xchg
and
mov
ljmp
sbb
repz
xor
adcl
mov
fwait
add
xchg
mov
pop
rorl
bound
arpl
fists
in
mov
sbb
insb
push
or
sbb
call
sar
stos
push
ss
punpckhdq
aam
push
int3
idivb
push
pop
push
cmp
mov
ja
out
lcall
xchg
xchg
lods
insb
pusha
push
jge
int3
ss
inc
sbb
inc
outsb
inc
or
inc
push
pop
aas
mov
pop
jne
xchg
repnz
and
ljmp
dec
addr16
mov
shll
cltd
add
sbb
xchg
in
mov
xchg
mov
lods
mov
mov
int
jp
jne
and
sub
and
jle
cld
inc
lds
pop
insl
sti
lcall
je
jbe
adc
shld
scas
loope
rcll
aam
std
push
inc
xor
inc
and
leave
ds
jae
outsl
sahf
scas
loope
push
clc
loope
cmpsb
mov
jae
daa
add
adc
popa
and
inc
mov
std
aas
insl
dec
fidivl
inc
jbe
pop
repz
sbb
and
test
xchg
mov
or
lea
rcrb
dec
xor
mov
push
fstps
fisttpll
mov
dec
sbb
xor
sub
ljmp
pushf
and
xor
pop
mov
mov
xor
std
js
ljmp
mov
cmp
dec
addr16
mov
nop
cmc
dec
loopne
push
mov
mov
cld
lods
call
call
push
mov
popf
aam
inc
push
aam
jle
jne
cmp
inc
mov
sbb
lods
test
outsb
mov
ret
mov
pusha
dec
add
inc
and
out
fldcw
adc
adc
mov
push
imul
test
mov
jne
sbb
sbb
ret
subb
push
or
aad
sarl
mov
in
fmuls
push
push
or
into
push
jecxz
popf
adc
xchg
sub
inc
into
int
loopne
dec
push
scas
push
dec
ret
sub
fimuls
or
arpl
ficomps
popa
test
sub
xchg
enter
test
cmp
mov
pop
push
mov
leave
imul
pop
enter
cmpsb
bnd
lods
jno
aam
in
inc
cmp
dec
sbb
iret
add
aaa
icebp
jb
roll
cwtl
xor
divl
inc
loopne
and
fucomip
test
aam
outsl
out
xchg
cs
xor
pop
int3
mov
movsl
sti
mov
inc
es
inc
imul
mov
pop
lds
sbb
push
mov
mov
and
pop
push
lds
sub
jnp
and
pop
xor
inc
loop
fistpl
lock
incl
xlat
sub
and
xor
cmpsb
mov
int3
pop
and
sbb
rolb
int3
mov
dec
cwtl
adc
pop
addr16
scas
pop
pop
mov
mov
orl
sahf
inc
sub
push
fisttpl
adc
xchg
shll
xchg
ss
test
jnp
adc
or
subl
jecxz
sbb
pop
rol
jb
shlb
jecxz
in
dec
sahf
jecxz
ds
xchg
inc
cmp
mov
das
cmc
adc
jl
jp
xchg
mov
xchg
popa
movsb
dec
inc
pop
pop
je
mov
jge
fisubl
jmp
nop
stos
adc
in
in
aam
stos
dec
mov
pop
sbb
sti
es
subl
xor
sub
push
outsl
push
movsl
fwait
cmpsb
sub
pop
js
icebp
cwtl
sbb
sbb
pop
push
lea
and
cwtl
sub
mov
adc
lret
lds
xor
lods
sarl
aam
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
dec
adc
hlt
addl
in
lods
add
insl
les
inc
leave
xchg
push
lds
or
ds
xchg
into
dec
dec
mov
andl
mov
xchg
popf
or
pop
lret
xlat
sbb
dec
push
and
aaa
test
xor
mov
push
aas
cmp
add
outsl
adc
sti
add
mov
sub
and
add
int
cld
and
pop
pop
push
adc
addr16
lods
push
mov
dec
jne
adc
and
or
fsts
mov
mov
out
inc
inc
bound
add
cmp
loope
pop
fists
push
push
jp
in
ss
sahf
fucomi
divb
sti
fadds
in
sbb
fs
fnsave
mov
ret
push
test
nop
jnp
test
and
andb
psubw
stos
mov
loope
aas
jne
xor
add
scas
lahf
mov
jns
aaa
push
dec
fwait
into
adc
inc
gs
std
mov
sti
or
mov
lahf
cld
push
xchg
pop
xor
cmovnp
xorb
shl
test
push
sub
fstl
xchg
in
mov
subl
mov
es
aam
shl
imul
stos
std
mov
insl
or
addr16
xchg
adc
lret
or
jo
or
iret
orl
test
cmp
into
cmp
push
add
jne
push
cmp
xchg
dec
inc
enter
xchg
dec
aad
and
add
pushf
or
test
je
loop
push
cmp
push
fidivrl
fldenv
xor
pop
shrl
push
push
inc
cmp
enter
dec
dec
xor
adc
sub
pop
inc
inc
xor
loopne
aam
pusha
add
aad
push
std
mov
xchg
lock
push
mov
addr16
pop
mov
jns
test
jbe
adc
push
fs
jecxz
jns
pop
rcr
test
hlt
add
sub
ror
push
jae
pop
dec
shl
mov
dec
mov
jp
sub
lahf
sub
cld
imulb
mov
fcomi
dec
xlat
mov
mov
stos
cmp
imul
jb
test
sbb
mov
sub
mov
arpl
aad
mov
jge
cs
outsb
test
cltd
repnz
cld
cmpsl
lahf
push
and
and
ds
pop
push
xor
ja
pushf
ljmp
push
pop
jmp
inc
push
mov
fbld
mov
iret
subb
inc
cmp
jle
jmp
rcr
icebp
repnz
mov
dec
sbbb
push
fistps
je
pop
insb
pop
mov
inc
dec
pop
in
jg
stos
adc
xor
cmp
mov
push
sbb
cmpsb
jle
mov
mov
leave
sub
in
xchg
data16
jns
lods
xor
scas
mov
es
jmp
push
jl
mov
and
or
cld
shlb
lods
mov
jne
iret
call
jge
xchg
fld
lcall
cmp
push
jnp
mov
adc
cmc
pop
sub
jle
cmp
aad
add
cmp
cmp
pop
lret
dec
outsl
stos
lcall
and
loopne
mov
mov
outsl
pop
mov
jge
jecxz
pop
mov
or
out
arpl
xchg
mov
shlb
mov
movsb
int
rcrb
mov
inc
inc
pop
cltd
shll
fsub
xor
mov
fstpt
xor
loopne
stc
xor
cmpsl
adc
hlt
pop
mov
pop
or
mov
testl
aad
adc
je
pop
adc
adc
sbbl
std
repz
outsl
jp
nop
xorl
and
mov
lds
add
nop
xor
lahf
ds
pop
add
push
out
fdivs
call
fmul
dec
lock
fistps
mov
mov
sbb
pop
adc
das
pop
xchg
xchg
or
ss
add
rorl
add
fcoms
fs
push
lea
repz
fisubrl
cmp
sbbl
mull
jp
cmp
das
pop
sbbb
sub
mov
mov
and
shll
movsl
outsl
aaa
or
int3
xor
xor
cmpsl
mov
jo
iret
rcrb
sub
aas
imulb
xor
and
xchg
and
data16
int3
loope
das
xor
dec
sub
pop
movsl
cmp
jne
dec
aaa
mov
or
jo
pop
mov
pop
or
xchg
xor
frstor
cmpsb
inc
cmp
dec
mov
test
mov
xchg
adc
mov
adc
add
mov
xor
scas
sbb
subb
test
cltd
push
mov
or
repz
sub
lret
test
add
xor
out
mov
pusha
jge
fs
push
or
adc
fcmovb
andb
cmp
int3
movsl
sub
push
ret
mov
push
mov
aas
inc
inc
call
add
in
xchg
data16
stos
shld
std
out
xlat
add
dec
iret
lahf
cmp
bound
mov
insl
loop
std
sbb
pop
addr16
icebp
les
lahf
js
xchg
lds
stc
mov
dec
dec
iret
arpl
jge
fsubl
mov
xlat
or
xor
movsb
push
std
clc
in
xchg
sahf
jl
push
jns
push
lret
adc
adc
inc
pop
in
fldt
mov
cmp
lea
jne
inc
daa
xchg
mov
mov
add
jmp
adc
repz
mov
loope
push
cmpsb
stc
insb
addb
pop
fiadds
pop
cs
cmp
ja
pushf
jne
repnz
and
dec
dec
sbb
imul
or
jle
aas
dec
fsubl
xor
cmpsl
outsb
mov
xor
shl
aas
shrl
fnstsw
or
sbb
adc
jl
out
jecxz
insl
fisubrl
ror
jmp
daa
rclb
jecxz
insb
cs
pop
lcall
cwtl
pop
jnp
cmp
sbb
arpl
incb
in
insl
and
mov
or
push
jae
cwtl
jge
cmp
adc
jmp
scas
add
sub
pop
aas
aas
mov
and
paddd
fnsetpm(287
ss
jp
adc
aas
loopne
add
xchg
in
lds
xor
enter
and
icebp
push
call
in
iret
or
inc
jnp
add
out
add
shrl
cmc
sti
into
push
arpl
aas
aas
inc
sub
ja
and
in
inc
mov
cmp
int3
pop
scas
xchg
push
cmp
sbb
add
sbb
mov
sbb
mov
rcll
or
out
mov
mov
movsl
sahf
pop
stc
xor
fcmovnbe
lods
dec
xchg
mov
or
xchg
and
loop
ds
insl
or
cmp
scas
movb
xor
out
addb
fbstp
dec
cmpsb
and
lods
and
jo
aaa
aaa
rolb
arpl
ret
js
je
mov
jp
sbb
xchg
pop
stc
arpl
cmp
cmp
fs
sbb
dec
js
add
xor
in
jmp
nop
xor
out
xor
and
xor
icebp
xchg
xchg
sbb
sahf
std
mov
out
mov
add
jns
sub
scas
popa
mov
addr16
sub
pushf
mov
mov
push
les
fdivl
and
cmp
push
ret
add
outsb
jle
fidivrl
adc
ja
enter
dec
sbb
pusha
jno
adcl
cli
popa
mov
lds
mov
out
inc
pop
and
test
sbb
mov
fcoml
inc
pop
push
ret
mov
rcrl
pop
or
xchg
js
xchg
add
pop
cmpsl
aas
rol
inc
lods
jae
leave
fistl
mov
arpl
and
and
ret
cmp
ja
aam
dec
loope
sub
pause
sahf
notl
fs
rcll
fmull
inc
addr16
inc
call
xor
dec
ljmp
insl
test
aad
in
nop
xor
push
pop
xor
jbe
pop
test
push
and
or
outsl
ret
js
push
addr16
lret
fwait
ja
pop
imul
popf
scas
xchg
cmp
xchg
fucomp
lea
mov
sbb
sbb
dec
lahf
push
out
sbb
cmp
imul
out
jb
push
fcmovu
lock
push
gs
jecxz
cmc
fwait
pop
inc
sti
mov
mov
cmp
push
scas
nop
pop
lock
xor
xchg
adc
inc
mov
or
xor
in
jns
lret
movsb
imul
adc
popf
jmp
add
sub
fst
cli
cld
out
cmc
jnp
jp
lret
push
mov
in
xchg
jno
or
pushf
out
and
push
jb
fisubl
insb
std
fsts
sbb
dec
fwait
push
dec
iret
pop
and
into
imul
inc
aad
in
xchg
out
xchg
jg
cmpsl
lea
imulb
loopne
cmp
ret
sbb
lds
jecxz
sarl
out
jb
jno
jb
adc
mov
cmc
jecxz
mov
jl
cmp
loopne
loop
inc
std
arpl
ljmp
push
xchg
std
lds
sub
enter
cld
push
stc
inc
push
lods
cmp
or
insl
in
pcmpgtb
sbb
int
pop
into
lods
adc
inc
neg
jl
lods
out
int3
xchg
mulb
int3
shll
dec
pop
rcrl
and
lds
xchg
and
jae
inc
int3
in
stc
nop
shl
sahf
aad
fadd
fmull
xchg
xchg
and
mov
out
mov
inc
pushf
pop
fs
cmpsb
adc
das
cs
cwtl
adc
test
enter
jp
test
lret
xchg
roll
add
sub
ds
into
ljmp
sub
fnstsw
or
dec
pusha
stos
test
xchg
xor
cltd
loopne
mov
scas
enter
jnp
cmp
xor
test
inc
mov
push
ret
mov
divl
mov
jb
dec
jbe
push
div
xchg
shl
cmpsb
loop
cld
das
aam
stos
roll
loopne
inc
leave
jnp
inc
or
mov
dec
push
xor
fcoms
inc
lret
push
inc
insl
rorb
dec
adc
ret
sbb
test
push
imul
add
lock
fdivrp
cmp
sbb
roll
movl
sub
pop
insl
rcr
dec
loop
and
xchg
inc
stos
inc
xchg
pop
sbb
cmp
rcrl
repnz
mov
inc
lock
adc
dec
fwait
mov
movsl
inc
stc
add
stos
fidivl
adc
cmpsl
fs
ss
pop
jle
and
adc
sahf
push
sub
xor
adc
pop
outsb
sarl
lcall
arpl
shlb
popf
cmp
mov
dec
popa
lods
sbb
out
aam
sbb
mov
nop
mov
push
mov
daa
cwtl
ffree
jb
imul
pop
es
dec
sub
dec
into
and
ret
cli
popf
mov
push
popa
arpl
sarl
jns
test
pop
inc
ja
xchg
push
and
mov
call
or
mov
inc
lock
cmp
aam
or
jl
sbb
cmp
leave
push
fdivrl
loop
rcll
js
dec
adc
add
cld
iret
fcompl
ds
leave
jp
ret
mov
jmp
push
and
repnz
fildl
xor
mov
cmp
testb
icebp
test
lds
fstl
scas
sahf
adc
adc
add
loop
lods
add
jnp
stos
ss
test
insl
and
lahf
jno
cmpsb
xchg
sbb
and
pop
pop
mov
sbb
arpl
xchg
xor
or
xor
lods
lds
into
movsl
out
lods
push
mov
cmp
push
call
sbb
inc
loope
xchg
pop
fs
mov
stos
pop
xor
fsubr
inc
xchg
imul
repnz
mov
in
cld
cli
mov
cmp
leave
push
sbb
mov
xor
or
das
jae
stos
decl
ficoml
mov
arpl
mov
mov
cwtl
nop
jg
je
xchg
push
push
jmp
pop
pop
cltd
adc
rcrb
inc
movsb
les
in
enter
push
movsl
into
dec
mulb
mov
mov
dec
xchg
sbb
xchg
out
mov
fadd
cmc
in
push
cmp
mov
xchg
mov
and
mov
dec
lahf
jle
stos
push
testl
incl
lods
outsb
ljmp
pop
or
add
pop
fisubl
pop
dec
xlat
jae
ss
jno
sbb
out
in
jmp
jge
or
mov
aaa
xchg
xor
sbb
inc
lock
mov
xchg
sti
xchg
jne
mov
cltd
mov
sti
jo
fucomip
or
stos
or
mov
mov
jl
dec
out
movsb
xchg
das
in
add
jmp
cmp
fbstp
outsl
xchg
dec
dec
or
insb
sbb
loopne
ss
scas
sbb
sbb
dec
or
mov
daa
mov
leave
adc
stc
stos
adc
aam
or
in
fdivs
push
or
add
push
sti
sti
lret
mov
js
lods
aaa
pop
push
mov
js
jo
xor
js
sbb
inc
enter
out
ljmp
insb
or
out
into
mov
cmp
and
cmp
xchg
sub
push
sub
stos
call
mov
dec
lds
push
mov
push
xor
rol
sub
es
dec
inc
popf
leave
sub
iret
dec
or
pop
mov
xchg
sub
shl
mov
mov
pusha
xchg
sti
scas
adc
sub
inc
les
cmp
imul
and
mov
out
or
xchg
xchg
xor
cmp
bound
cwtl
es
sbb
mov
movsb
subb
mov
iret
out
inc
sbb
out
rcl
ret
xchg
adc
mov
shlb
inc
popl
or
xchg
pop
and
push
movsb
test
push
sub
das
push
mov
cmp
mov
pushf
add
cmp
mov
addl
adc
insl
inc
data16
aaa
aaa
fbld
mov
dec
es
xlat
dec
call
jb
jno
jp
push
int3
sub
inc
ficomps
div
fs
mov
jns
sbb
push
outsl
adc
cmp
push
arpl
mov
jle
les
dec
xchg
out
sub
aam
push
push
popf
mov
pop
pop
push
adc
xor
xchg
repz
dec
arpl
push
fmul
sbb
sbb
adcb
daa
mov
pop
xchg
ss
ret
lock
ds
ret
xor
repz
or
adc
loop
cs
ret
sub
cmc
jbe
add
push
cmp
pop
out
sbb
dec
fldl
int
sub
cmp
mov
rorl
jmp
into
mov
scas
or
xchg
mov
repnz
shr
mov
xchg
insl
fcomps
lock
gs
xchg
mov
lods
cltd
push
fs
loopne
push
lods
icebp
push
pop
ret
std
sub
xchg
push
lock
fs
jb
gs
popf
sti
jne
subb
xchg
fs
jmp
push
push
mov
aam
jae
imul
mov
jnp
test
pop
int
dec
lds
pop
lds
or
dec
pop
add
orb
stos
fdivrs
mov
ret
cmp
stos
fcoml
dec
faddp
cwtl
and
sbb
hlt
int3
int
stos
jmp
or
add
pop
inc
rclb
repnz
dec
mov
push
mov
or
ret
jne
or
push
aas
cmc
movsl
and
xchg
in
push
sbb
vpmuludq
lds
mov
and
lcall
pushf
xchg
mov
add
mov
lods
mov
mov
subl
ret
xor
fcoms
cmc
ljmp
loopne
in
clc
pop
dec
pop
scas
cmpl
leave
movl
or
lock
sbb
jg
adc
xor
push
sti
push
data16
std
sbb
pop
ljmp
movsb
pop
jmp
cmp
pop
cmp
cmpl
mov
int3
push
cmp
ja
add
sub
loopne
mov
xor
sbb
ret
loop
ja
inc
jecxz
dec
push
mov
loop
aad
pushf
mov
lret
sahf
lret
mov
cmp
mov
xchg
pusha
adc
aaa
into
cmp
xor
jp
mull
aaa
ret
int
mov
sarb
loopne
in
push
pop
lret
testb
out
adc
ds
fpatan
rcll
out
test
xchg
loopne
rolb
xchg
and
loope
in
lods
dec
or
push
fs
ret
pop
xchg
arpl
call
rorl
xor
cmp
mull
enter
mov
and
push
or
cmp
add
imul
loop
dec
xor
les
in
cwtl
imul
sub
jp
and
je
insl
imul
and
jnp
pop
je
dec
jae
sahf
nop
jne
pop
insb
dec
jecxz
sarb
xor
adc
mov
add
sbb
arpl
xchg
push
pop
mov
in
nop
aas
or
cmpsb
gs
mov
hlt
out
sbb
adc
ret
clc
outsl
push
ljmp
in
jb
dec
ficomps
cmc
sbb
lea
mov
mov
dec
pop
out
add
fwait
out
cmp
sahf
mov
js
fmuls
leave
jmp
rorb
mov
andl
ja
mov
out
lea
enter
sbb
clc
or
xchg
pop
fmull
lcall
les
push
jl
loop
lahf
add
sub
sarb
xorl
imul
fisubs
ja
push
nop
into
dec
loopne
movsl
aam
mov
sahf
xor
decb
sbb
nop
add
loopne
leave
cmpsl
dec
and
lcall
fcmovnu
aad
aas
mov
fprem
int
mov
inc
jmp
inc
lock
into
test
mov
jo
push
jo
push
pop
out
scas
jecxz
ljmp
inc
xchg
lret
dec
pop
imul
cmpsb
shrb
arpl
lock
scas
stos
jo
testb
out
daa
cli
imul
xchg
mov
mov
xor
pusha
and
jbe
pop
jb
sbbb
inc
pop
popf
aaa
sbb
das
cmp
enter
cmp
imul
sub
repnz
push
jl
dec
xchg
inc
pushf
xorl
cmp
out
inc
divl
pop
pop
jge
mov
fs
push
fdivl
rcrl
subb
mov
jno
hlt
mov
js
mov
xor
roll
or
cld
in
mov
inc
dec
add
das
ds
mov
push
dec
or
ret
dec
add
mov
and
shr
lret
out
outsl
lds
movl
mov
pushf
or
iret
lret
jmp
clc
mov
popa
test
mov
cmc
subb
or
mov
and
or
mov
sahf
icebp
mov
orl
or
sub
inc
fisttpl
dec
cs
pop
adc
gs
lret
movsb
int3
and
pop
mov
scas
jae
enter
es
mov
scas
outsl
jne
lahf
adc
xchg
adc
mov
mov
in
and
adcb
mov
repz
data16
and
in
rolb
adc
cmpsb
cmp
popa
mov
outsb
cmpsl
pop
imul
cli
dec
xchg
pushf
adc
add
or
cs
mov
mov
jo
sub
aam
and
mov
out
sbb
cwtl
sbb
or
scas
dec
sbbb
cmp
or
xor
add
fsubrp
inc
jbe
roll
mov
gs
dec
fdivl
mov
jecxz
push
lahf
les
decb
stos
rcll
popf
adc
push
flds
clc
es
bound
outsb
sub
mov
pop
cli
frstor
inc
les
dec
jno
mov
inc
sub
imul
add
jmp
dec
lret
pop
addr16
popf
outsl
outsb
and
test
inc
mov
mov
push
and
mov
or
test
inc
jnp
xor
scas
and
cmpsl
pop
or
xchg
imul
movsl
cwtl
push
fisubs
dec
into
cli
imul
xchg
in
mov
or
leave
fimull
xchg
adc
jl
mov
ljmp
mov
rcr
push
sbb
scas
sbb
mov
inc
ficomps
inc
inc
inc
jg
nop
jle
inc
sbb
mov
ret
lret
push
lret
scas
out
add
cmp
fimuls
cmp
xchg
mov
lock
jno
outsl
adc
inc
push
in
imul
and
cmp
mov
shl
xorb
stos
fistl
cmpsl
cwtl
sbbl
mov
mov
jae
fisubs
lods
lea
fadds
cmp
push
mov
pop
mov
dec
jp
inc
mov
loop
or
inc
in
movb
ja
out
gs
xchg
ret
gs
push
sbb
pop
xchg
cltd
inc
imul
test
jmp
aaa
sbb
jno
jle
fisttpll
push
add
pop
jg
or
inc
dec
jno
daa
rcll
inc
sahf
icebp
lock
das
add
insb
repz
add
xchg
adc
jmp
gs
out
js
adc
dec
lea
pop
mov
jp
lahf
fs
xor
shll
stc
call
aam
ret
sti
sbb
out
inc
out
imul
mov
push
movsb
cltd
dec
arpl
xchg
mov
cmp
push
out
nop
cmp
sbb
jge
aam
pop
or
add
or
fnstenv
adc
mov
hlt
mov
sub
push
sbb
decb
xchg
arpl
pop
arpl
adc
dec
cmpsl
add
pop
ds
mov
mov
hlt
insb
mov
and
mov
jne
sti
aaa
fwait
xchg
xor
xchg
stc
sbb
push
mov
in
lcall
sub
mov
add
mov
std
mov
and
leave
inc
loop
mov
mov
icebp
cmc
xchg
mov
cs
fwait
mov
jo
icebp
movsl
push
jo
mov
dec
addr16
jecxz
shll
push
scas
or
repnz
xor
in
inc
clc
dec
mov
cmp
call
lret
mov
mov
jbe
cmp
cmp
jbe,pt
sahf
mov
or
sub
cltd
inc
xor
repz
pop
xchg
pop
call
pop
mov
xor
int3
and
dec
cmp
dec
out
and
lods
xchg
test
fcomps
fidivl
dec
xor
icebp
mov
scas
popf
jp
push
mov
cmp
add
cmp
cmpsl
sub
sbb
lods
jns
dec
push
pop
xor
adc
inc
mov
add
xor
stos
sbb
mov
jl
and
mov
mov
cwtl
inc
adc
std
xchg
outsb
dec
orb
mov
sbb
cmp
pusha
sbb
test
dec
mov
and
sbb
inc
imul
loopne
aad
xchg
int
mov
call
and
pushf
outsl
iret
sbb
cmpsl
push
sti
mov
sub
jle
popa
or
notl
mov
adc
cmp
in
jo
in
ret
mov
int3
xchg
ds
frstor
out
adc
sbb
sbbb
enter
mov
add
or
daa
test
dec
sbb
or
push
inc
in
insl
outsl
adc
xor
adc
loope
lock
xchg
jno
or
push
loope
enter
stos
jo
rcl
mov
es
dec
scas
mov
xor
push
out
mov
dec
fstp
mov
imul
xor
divb
and
and
fcomps
rcl
lret
adc
xchg
pop
sub
jl
cmp
cli
add
sub
gs
pop
mov
and
fsubrl
add
push
je
mov
arpl
push
sahf
or
lret
loop
push
dec
push
inc
rcr
clc
movsl
pop
repnz
push
jecxz
insl
xchg
fmull
icebp
fildl
pop
cli
scas
sti
vpermilpd
pop
jae
leave
xchg
int
and
lahf
fcmovnu
repnz
test
mov
int3
roll
dec
sbb
mov
add
xchg
push
cmp
and
aam
aad
test
enter
xor
xor
inc
cmp
testl
xor
je
loop
stos
rcrl
xchg
push
enter
lods
jo
cmpsl
jecxz
ljmp
inc
je
push
mov
fcoms
mov
scas
in
dec
stos
mov
jbe
and
cmp
loopne
adc
cli
insl
movsl
test
add
and
xchg
dec
inc
stos
pop
es
gs
insb
sbb
movsl
sub
scas
jge
inc
dec
adc
iret
or
jbe
mov
pop
repz
xchg
das
sub
mov
pop
mov
jl
stc
fwait
mov
add
mov
mov
out
push
push
or
test
test
cld
push
push
aaa
iret
xchg
adc
movsl
fdivr
inc
shll
jp
and
outsl
lea
int
icebp
aas
xchg
popf
inc
mov
gs
add
clc
adc
xchg
mov
bound
out
leave
or
leave
dec
jo
pop
mov
adc
add
jmp
xor
jo
push
mov
jns
xor
pop
cltd
jo
lds
shll
lcall
std
xchg
fdivrs
dec
mov
push
push
in
js
push
je
lea
xchg
push
push
in
jecxz
scas
mov
lret
mov
jb
and
and
pop
xchg
or
push
dec
lods
mov
es
push
rcl
into
cwtl
int
iret
in
push
adc
nop
out
imul
dec
push
mov
lcall
scas
aad
xor
cltd
push
sub
sbb
and
adc
mov
inc
xchg
or
movsb
outsb
push
sahf
call
test
mov
repnz
mov
fstpl
loop
iret
lret
jecxz
cs
mov
jns
dec
out
sbbl
movl
inc
arpl
outsb
cmp
push
push
mov
pop
pop
andl
test
xchg
rorb
mov
mov
sar
sbb
dec
dec
divl
mov
dec
adc
xchg
cli
xchg
sahf
imul
mov
jne
push
out
dec
xchg
xor
and
mov
sub
add
xlat
fsubl
sahf
xor
adc
rorb
stc
dec
loopne
add
sbb
jecxz
into
cmp
xor
jg
rorl
adc
ss
out
lret
dec
sbb
aad
std
es
pusha
sub
pop
std
gs
inc
xor
xchg
mov
mov
push
pop
mov
test
ret
push
mov
cmpsb
test
stos
sti
jns
add
loop
ljmp
xchg
mov
pusha
outsb
addr16
mov
insl
pop
pusha
fimull
and
xor
icebp
lahf
dec
scas
js
addl
cmp
xchg
push
jmp
lock
adc
out
add
testl
adc
cmpsb
iret
push
ffreep
mov
cmp
mov
punpckhdq
test
adc
cmp
popf
fildl
pop
dec
sahf
inc
pusha
imul
and
leave
fs
sub
test
pop
sub
outsl
not
das
pop
dec
and
data16
stos
pop
mov
cmp
xor
xchg
mov
cs
xor
leave
xchg
pop
test
in
fcom
jb
insb
aaa
leave
nop
sbb
and
rorb
cwtl
pusha
jp
or
mov
out
sub
icebp
es
shlb
fcompl
dec
xor
js
js
xchg
dec
adc
in
and
push
mov
dec
cmp
sub
clc
jae
fiadds
mov
jecxz
pop
jno
add
jns
xchg
movsb
xor
cmp
lret
push
inc
sub
cmp
push
inc
and
cmp
lods
test
cwtl
mov
xor
orl
or
pop
out
adc
mov
ljmp
lods
add
jno
filds
xchg
andl
add
cld
das
inc
pop
mov
mov
daa
inc
cmp
enter
sub
cmp
in
push
out
ret
push
adc
iret
data16
jl
scas
out
jg
int3
addr16
mov
xchg
sub
outsb
testl
scas
xorb
sub
dec
js
add
mov
sub
mov
loop
ror
psubw
jg
xchg
xchg
imul
mov
cmpsl
inc
ret
rolb
shll
insl
xlat
dec
xor
cld
adcl
mov
lcall
xor
inc
xchg
bound
xchg
lret
xchg
fmuls
insb
xorb
inc
daa
xlat
rcrl
cmp
mov
loop
mov
outsb
lret
loope
fstpl
push
out
push
out
ljmp
sbb
cmc
jmp
mov
shll
push
stos
movsl
iret
or
rol
dec
or
inc
mov
out
sbb
cmp
dec
and
shl
jae
xchg
or
add
cmpsb
inc
sbb
xchg
push
and
scas
out
inc
cmp
mov
xlat
sbb
sub
mov
stos
pop
sub
xor
and
jle
dec
jae
pop
push
fnsave
je
dec
into
xlat
bound
sbb
mov
push
and
das
andb
pop
fisubl
test
dec
imul
mov
mov
scas
adc
xlat
xchg
adc
pop
add
aas
pop
pop
dec
scas
mov
pop
je
dec
jecxz
xor
xor
inc
insl
add
xchg
out
daa
subl
imul
inc
xchg
mov
dec
daa
scas
xlat
movsbl
pop
jge
addr16
xor
lds
inc
leave
mov
and
repz
inc
fs
pop
pop
push
clc
sbb
ss
pop
add
cmp
ficompl
sahf
call
stc
stos
stos
mov
pop
lods
dec
xchg
shl
jns
clc
loop
mov
lock
jbe
iret
outsl
mov
pop
mov
arpl
leave
fistpll
in
xchg
mov
jmp
push
push
pop
es
and
add
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
dec
jle
and
pop
addl
insl
in
sub
insl
mov
imul
shlb
lcall
pop
pop
add
xor
lods
aad
cmpsl
push
mov
in
ljmp
push
movsb
je
fs
lea
icebp
jnp
add
mov
jo
xlat
in
sub
insb
pop
cmpsb
movsl
adc
xor
sbb
lds
xchg
jne
test
jp
cmp
ret
jo
and
into
push
fidivs
jle
ja
mov
push
pop
jecxz
xchg
call
sbb
xchg
and
mov
mul
stos
sbb
mov
mov
jo
sti
adcl
int
xor
jecxz
imul
and
stos
inc
lret
aam
dec
jns
push
and
push
pop
push
outsl
outsb
shl
aam
inc
xchg
pop
xlat
pop
rolb
xchg
mov
repz
jp
pop
sbb
and
loop
popa
jmp
mov
add
adc
push
pushf
adc
test
cmp
dec
aaa
mov
aam
sbb
aam
fsubrl
mov
loopne
fisubrs
test
out
inc
in
lods
xor
mov
cwtl
dec
xor
int3
xchg
push
mov
call
add
adc
fsubrs
jg
movsb
out
adc
sbb
outsb
out
mov
adc
push
add
jns
inc
fisttpll
jbe
movd
xchg
icebp
inc
add
fs
pop
jnp
movb
test
sbb
sti
jo
or
cmc
lret
rol
mov
fucomi
xchg
add
lods
jo
lret
popa
fs
repz
imul
inc
xor
xlat
push
mov
fstpl
imulb
sub
mov
cmp
cmp
bound
fadd
cmpsb
pop
ljmp
fistpll
xchg
xchg
mov
sbb
stos
push
inc
inc
xor
lcall
push
jp
fisubrl
clc
ljmp
lods
fistpl
mov
addb
sub
ss
in
cmp
sbbb
mov
ja
dec
jecxz
popf
sbb
jle
imul
ss
fimull
push
imul
jge
sahf
pop
aad
mov
add
lret
cmpsl
mov
loope
daa
push
popf
rcr
out
mov
xor
movsl
loope
xor
lock
sahf
mov
mov
inc
sub
xor
outsb
lret
or
rolb
shll
mov
jmp
sbb
rclb
adc
test
and
pop
inc
jnp
int
dec
sbb
jl
cmpsl
push
out
sbb
sti
fmul
jbe
aaa
pop
mov
adc
xor
ror
shrl
pop
mov
add
sahf
rol
int
arpl
pop
jnp
popf
mov
nop
ljmp
sbb
cmp
xor
jg
ljmp
mov
lds
mov
mov
mov
sbb
and
mov
std
je
mov
lret
mov
and
ss
iret
dec
mov
es
and
push
xchg
andl
dec
mov
andl
mov
inc
jecxz
mov
and
inc
sarb
xchg
push
and
outsl
xor
lcall
inc
stos
sub
imul
arpl
roll
test
lret
sbb
xchg
push
ficoml
dec
cmpsb
sahf
pop
sti
sti
and
sub
lret
repz
add
call
inc
mov
lret
pop
icebp
lcall
xor
dec
ret
call
mov
mov
hlt
push
xlat
adc
sub
pop
pushf
lods
mov
push
je
sbb
lret
jmp
inc
mov
sbb
cld
xchg
insb
test
cltd
lock
or
cmp
fs
fsubrs
movsl
cltd
aaa
jmp
mov
xchg
repnz
les
ss
mov
mov
mov
or
out
inc
xchg
sti
out
outsb
aaa
mov
fnsave
cmpb
xchg
loopne
fisubrs
sbbb
push
into
add
mov
sahf
sarl
push
test
std
pop
ds
pop
insb
lods
out
adc
jl
je
or
cmpsb
ds
fdivs
adc
lcall
xchg
scas
add
mov
mov
dec
xchg
stos
cmp
js
movsl
mov
insl
adc
mov
push
mov
test
fsubrl
andb
mov
cltd
insb
pop
pop
icebp
je
xor
rorl
push
and
cmp
lds
notl
cmp
fcomps
rcrb
das
sbb
cwtl
lcall
loopne
push
xorb
cmp
dec
xor
mov
repnz
xchg
inc
push
daa
sub
in
push
or
push
inc
mov
adc
dec
pop
int
ret
lret
mov
dec
test
or
jno
out
in
xchg
stos
nop
or
cltd
mov
outsl
mov
lods
push
dec
xchg
dec
in
pop
jp
cli
aas
mov
arpl
sub
in
sub
adc
xorb
loop
rclb
fidivrs
push
push
push
jg
xor
mov
stos
inc
pop
pop
mov
jnp
lods
cld
cwtl
out
jns
jb
jne
stos
out
pop
mov
aam
int3
cmp
mull
sahf
ds
pop
or
fldt
mov
leave
add
addr16
jnp
inc
std
mov
mov
fcomps
push
daa
and
xchg
imul
ss
movb
dec
mov
scas
pop
push
xchg
out
push
adc
add
scas
cmpsb
pop
nop
jg
xchg
jo
outsb
stos
mov
cmc
add
stos
into
push
lods
lcall
pop
fimuls
pop
pop
xchg
out
jns
cmp
shll
jp
mov
inc
imul
cmp
je
jge
pop
scas
mov
dec
mov
dec
test
gs
je
sti
popa
jmp
mov
imul
sub
jp
in
arpl
fcmovnu
daa
inc
push
mov
nop
push
mov
pop
or
pop
push
dec
sahf
fwait
das
lahf
inc
pop
test
and
shrl
mov
jae
ret
jne
into
aam
inc
add
ljmp
ret
cli
add
jecxz
rcl
xchg
lea
cmp
push
and
call
push
popa
jbe
sbb
and
sbb
push
ficoml
push
add
mov
push
mov
xor
add
sbb
jo
mov
mov
inc
in
int3
jl
sbb
mov
enter
into
xlat
fimuls
push
mov
lret
mov
clc
cli
les
jae
lcall
jne
add
in
in
xor
pop
push
mov
jg
dec
sbb
gs
or
ja
jge
movl
dec
and
nop
dec
sbb
fisttpll
cltd
cli
loope
outsl
popf
mov
mov
push
fcomps
lcall
data16
iret
imul
loope
sub
dec
movsl
xchg
stos
shrb
adc
cld
mov
sub
mov
push
es
mov
and
sbb
inc
popf
or
stos
sub
insl
jp
cli
lret
add
mov
xchg
and
lea
sbb
arpl
icebp
push
sbb
cltd
mov
mov
in
sub
loope
sbb
mov
pop
les
cmp
inc
vmwrite
shl
mov
fisttpl
outsl
xor
addb
ja
out
addr16
repnz
pop
xor
mov
lods
jle
ret
imul
add
xchg
rcl
mov
es
adc
movsb
fmul
cmp
les
lds
rclb
mov
movsl
subb
pop
into
xchg
inc
sbb
inc
push
add
fsubs
in
adc
cmpb
push
repnz
ja
dec
pop
cmp
mov
fisubl
mov
inc
xor
idiv
lret
iret
imul
add
in
cmpl
cld
add
add
xlat
test
inc
mov
dec
jp
mov
and
das
loop
sub
jno
gs
xchg
mov
aas
ds
pop
int3
inc
push
out
pop
out
in
push
test
mov
lret
jno,pn
shrl
enter
cmp
inc
push
lahf
xor
xchg
fwait
mov
pop
xor
or
outsl
sbb
mov
mov
lahf
and
mov
mov
les
es
push
nop
and
lcall
and
iret
push
roll
jbe
testb
and
popf
iret
mov
mul
dec
sbb
adc
arpl
fs
stc
and
push
jo
xor
jmp
lods
jp
jmp
and
lret
cld
iret
mov
test
pop
cmp
nop
aaa
push
push
pushf
rorl
popf
movsl
lret
test
mov
mov
sbb
fwait
pop
cmp
or
sbb
inc
xlat
call
pop
mov
sub
jne
test
inc
mov
push
mov
popf
dec
dec
sbb
rcll
add
xor
bound
mov
fs
cmpsb
jl
xlat
ss
cmp
xchg
and
push
imul
dec
stos
inc
and
imul
imul
mov
pop
out
int
test
mov
xchg
sarb
inc
sub
addr16
bound
inc
mov
cmp
lret
xchg
sbb
insb
sub
cmpb
mov
xchg
xor
add
test
aaa
mov
lock
subb
mov
mov
gs
je
fcomip
nop
dec
dec
inc
lds
sbb
dec
sahf
sub
in
inc
mov
insb
mov
cmp
xchg
stos
pop
jl
adc
leave
cmp
push
lahf
lcall
iret
jae
shlb
jns
jg
xchg
popf
pop
fistpl
inc
mov
mov
ljmp
stos
idivl
xchg
imul
movsb
or
out
xlat
inc
and
out
and
jp
cmpl
xor
mov
pop
pushf
jo
out
popa
aaa
mov
sbb
pop
ret
add
push
lret
dec
frstor
mov
or
xor
ficoml
mov
dec
push
sub
push
xchg
in
inc
out
subl
jo
ret
data16
jmp
mov
mov
add
pop
stc
cmp
pop
cmp
gs
jns
cs
mov
insb
je
cli
cmp
fs
cmp
mov
mov
int3
or
movsl
pop
mov
mov
pop
mov
mov
in
dec
shrb
and
jp
push
loopne
into
push
push
sbb
ja
cmp
mov
fisubs
cmp
lea
bound
and
dec
xlat
xor
ja
add
mov
out
jge
pushf
pop
mov
jno
adc
inc
xchg
dec
dec
pop
aaa
push
jo
cmp
pop
push
dec
sar
test
jb
aaa
loope
stos
mov
jbe
xchg
and
pop
mov
repz
lock
jmp
push
mov
add
mov
mov
pop
mov
lret
repnz
mov
out
mov
lahf
leave
icebp
cld
mov
cltd
rolb
fstpl
into
clc
push
stos
and
pop
push
sub
cmp
ja
pop
addr16
dec
or
or
jnp
aam
out
jae
xchg
int3
jmp
sub
daa
inc
test
pop
or
add
inc
mov
push
mov
fdivl
icebp
into
inc
mov
mov
pop
movsb
sbbb
inc
and
mov
jecxz
ficoml
sub
into
jne
inc
imul
xchg
cmp
ret
jl
andb
addr16
push
mov
imul
aad
inc
adc
repnz
jno
inc
gs
xchg
js
push
adc
int
pop
add
push
inc
or
js
inc
adc
mov
and
out
jmp
xchg
inc
push
addr16
push
iret
jmp
ret
insl
aad
or
mov
sti
out
pop
out
mov
mov
out
add
and
repz
imul
jnp
push
dec
xor
fst
push
xor
test
ja
in
push
mov
mov
add
in
cmp
inc
pop
cmp
bound
add
fdivrs
mov
scas
xlat
push
pop
jg
jne
adc
and
mov
mov
arpl
jns
test
test
mov
out
jge
cmp
sahf
jp
sahf
imul
add
mov
and
pop
ret
sti
xchg
pop
pop
stc
mov
clc
js
mov
mov
out
pop
div
mov
xlat
dec
imul
mov
inc
stos
inc
inc
jo
mov
hlt
add
push
sub
xchg
rclb
fucom
cwtl
xorb
add
call
mov
test
jbe
or
inc
ss
out
jb
fcoms
movsb
jmp
frstor
mov
dec
out
mov
ret
and
cltd
jg
mov
cmp
je
adc
mov
cmp
aas
push
jno
sbbl
mov
mov
push
lcall
fsubrs
or
inc
daa
dec
ficompl
jl
pop
push
movsl
arpl
push
or
lret
push
call
cmp
scas
outsb
ror
jns
inc
pop
inc
ja
inc
pushf
fadds
sahf
cmp
mov
scas
push
add
mov
dec
mov
lahf
lods
xor
mov
out
inc
pop
jl
ret
mov
movsl
das
test
aam
cwtl
pop
movsl
movsl
movsl
stc
inc
mov
jbe
push
jb
movsl
mov
clc
xchg
cmp
mov
xchg
jne
fwait
sub
sub
out
pushf
cld
cmp
lea
cmp
push
rcrl
xchg
icebp
lahf
xchg
adc
add
inc
inc
jb
add
pop
sahf
jne
inc
xor
lret
push
jae
pop
rol
repnz
ret
mov
sbb
adc
imul
ret
lea
add
insl
or
cmpsl
add
pop
ja
int
pop
and
inc
xchg
lods
out
loopne
or
cmp
int3
xor
pop
and
arpl
mov
fistl
lds
xor
movsb
aaa
mov
add
add
xchg
pop
lds
ficoms
test
lea
and
ja
lea
mov
push
in
mov
inc
loope
fisttpll
inc
insl
fsubs
push
mov
das
jns
sbb
repz
out
cmp
and
arpl
ret
sbb
xchg
out
popf
aaa
es
jg
push
inc
fistpll
push
imul
leave
push
jbe
in
addr16
fwait
cmpsl
lret
jo
mov
jle
add
xchg
outsl
lret
inc
and
std
or
rcrl
pop
insl
sahf
adc
mov
xor
cmp
es
subl
imul
pop
pop
gs
jae
adcl
hlt
push
lods
jne
lock
sar
xor
in
iret
lcall
pop
sbb
adc
ds
notl
repz
xchg
sub
pop
mov
ret
icebp
xlat
dec
cld
and
push
or
push
fcompl
subb
inc
xlat
inc
mov
or
inc
adc
push
mov
cmp
inc
add
adc
push
inc
sahf
mov
je
jle
dec
call
je
and
xor
imul
shrl
aam
iret
xchg
inc
adc
cld
ja
into
pop
sarl
je
and
pop
test
add
cmp
cmp
ds
dec
test
or
test
xchg
aad
es
add
fmull
sub
cwtl
andb
insb
stc
fbld
inc
mov
jg
scas
in
subl
jbe
cli
es
cld
pop
xor
lret
lods
adc
lahf
dec
push
push
dec
nop
in
and
push
pop
ret
leave
inc
xor
out
mov
and
xchg
in
and
xor
adc
and
dec
int3
lock
adc
outsb
test
lret
cmp
sub
rcrl
mov
push
or
adc
add
inc
movups
loop
cmc
shlb
rcrl
cltd
and
or
cmp
aas
xor
mov
add
jg
loopne
daa
addr16
mov
iret
pop
aad
js
xorb
subl
mov
jno,pt
add
push
lea
mov
iret
subl
popf
test
es
pop
test
pop
sti
sbb
out
xchg
jae,pn
bound
ljmp
or
pop
iret
or
add
jge
and
div
lcall
pop
cld
arpl
lds
lock
inc
pop
ret
arpl
sub
jbe
insb
cmp
push
push
pop
imul
pop
mov
add
das
sbb
jae
ja
into
ljmp
jge
xor
sbb
cmp
add
jmp
and
jbe
repz
pop
test
in
pop
xor
pop
xor
lds
sub
add
mov
add
orb
sub
cmp
dec
jmp
push
push
cmp
xchg
mov
ret
in
pop
mov
jno
imul
fiaddl
ss
test
ret
push
and
cs
xor
add
testl
xchg
xor
fidivs
inc
mov
mov
sahf
enter
cmp
or
cld
stc
data16
cmp
sub
roll
std
mov
add
fstpt
cmpsb
repnz
imul
ret
loop
add
adc
out
imul
pop
inc
sbb
push
imul
xor
lock
lock
in
out
sbb
dec
repz
fwait
inc
lcall
mov
shrl
sub
push
inc
sbb
pop
xchg
lahf
inc
das
mov
jne
mov
adc
repnz
xchg
sbb
xor
and
jge
dec
mov
call
and
mov
cltd
and
test
or
fucom
les
push
push
xchg
push
push
inc
das
rcrl
sub
jno
inc
push
enter
cmp
sbb
fdivrl
popa
shlb
ret
push
lods
push
rcr
pop
insl
mov
das
xor
push
in
inc
jbe
mov
mov
imul
ds
jl
fdivrs
xlat
cld
adc
xchg
das
or
mov
inc
pop
xor
flds
test
mov
jns
push
out
fwait
pop
pushf
cltd
rorb
fldenv
or
mov
daa
inc
leave
xchg
adc
test
jl
fiaddl
push
stos
xor
test
xchg
jnp
cs
aaa
pop
adc
rorb
xor
mov
pop
stos
jmp
xlat
int
or
sbb
out
xchg
cltd
int
push
sub
je
in
pop
pushf
xor
cmpsl
scas
loop
sub
ret
pop
mov
inc
cli
cwtl
or
pop
adc
pushf
flds
jl
mov
push
dec
pop
jb
xchg
mov
jecxz
sbb
les
mov
dec
addr16
aad
jp
pop
dec
or
push
repz
cmpsb
fwait
pop
push
ja
adc
sbb
imul
inc
jp
test
outsl
imul
cmpsb
fisttpl
push
pop
inc
xor
arpl
and
lea
aad
gs
cmc
ljmp
fst
mul
xor
cmp
push
call
inc
fsubs
xor
cmp
in
or
inc
add
add
push
or
inc
inc
dec
and
aaa
imul
outsb
fmuls
out
inc
ja
ret
pop
ljmp
pop
push
pop
jle
popf
adc
cmp
rclb
sbb
out
stc
les
ds
push
fidivrl
cs
iret
subb
mov
jg
mov
or
xchg
dec
mov
arpl
call
pop
push
or
sbb
call
sbb
cmpsl
aam
test
fs
fs
insb
sbb
mov
cltd
push
pusha
cld
aad
mov
lds
xchg
mov
mov
mov
pop
mov
mov
fcompl
movsl
xchg
mov
hlt
nop
mov
clc
insb
andl
and
shr
gs
fcmovne
aam
xchg
data16
pop
jmp
pop
movsl
or
popa
adc
loope
aas
mov
adc
xor
or
mov
adc
dec
fs
xor
repnz
sub
decl
arpl
ret
mov
jecxz
pushf
pop
adc
lret
sub
sahf
mov
push
test
xchg
mov
cld
pop
pop
adc
mov
xchg
arpl
sub
cmp
and
icebp
cli
mov
mov
repz
ret
jge
jl
cmp
sbb
jmp
push
pop
adc
icebp
sbb
inc
aam
lods
outsb
test
in
xchg
shrb
push
lea
sarl
push
jno
aad
cmp
xchg
xor
xor
repz
jle
bound
ret
addr16
sbb
inc
loopne
loopne
adc
fisttpl
mov
imul
test
dec
aam
and
dec
push
push
xchg
pop
unpcklps
cwtl
orb
insl
rorb
cmc
fwait
adc
dec
je
inc
andl
mov
inc
cmp
push
cltd
mov
and
mov
pop
xor
mov
pop
cmpsb
cmp
aam
loope
aad
xchg
clc
mov
adc
movsb
cli
enter
inc
mov
or
loop
out
mov
pushf
repz
jae
xchg
push
cwtl
add
sub
fstpl
rcl
jg
add
test
xlat
cmpb
mov
and
and
popf
adc
xchg
or
xor
push
cmp
xchg
je
adc
xchg
iret
mov
add
mov
jle
xchg
mov
repnz
inc
sbbb
pop
mov
dec
rolb
incb
lahf
out
mov
imul
inc
in
cmp
sahf
jno
or
lret
cmp
pop
xorb
push
or
scas
mov
adc
xchg
and
bound
sbb
dec
jl
es
pushf
xor
ss
movsb
negl
xchg
xor
pushf
mov
sub
nop
xorb
xor
sub
inc
mov
adcl
xchg
cwtl
movsl
into
out
xor
cmc
test
dec
push
addr16
push
push
adc
ret
es
shl
sub
pop
jg
xchg
add
mov
and
and
cli
inc
jmp
cwtl
push
adc
add
cld
adc
ret
push
popf
outsb
push
jp,pn
and
data16
inc
gs
inc
push
and
pop
sarl
mov
inc
pusha
xchg
sti
sahf
sahf
xlat
add
leave
out
push
mov
pop
cmp
inc
fildll
adc
sti
mov
mov
sub
aam
test
add
cli
outsl
shll
fstpt
push
jmp
sub
or
mov
out
mov
test
xor
movsl
popa
adc
mov
fldl
std
rolb
mov
jecxz
xchg
pop
dec
mov
call
inc
dec
or
pusha
cmp
sub
cli
jbe
fwait
lock
mov
ret
mov
sbb
jp
popf
fstpt
jne
jne
pop
xor
cmp
jns
add
xchg
adc
gs
clc
jne
xor
lods
scas
mov
shlb
adc
xor
mov
stc
sbb
not
inc
std
mov
out
adc
cli
sbb
loopne
packssdw
sbb
inc
inc
push
imul
ja
add
inc
aaa
loopne
popa
std
scas
test
or
enter
pop
jno
xchg
addr16
out
and
fwait
jno
pop
xchg
in
jge
data16
adc
sbb
xlat
pop
jmp
fnstenv
mov
loop
adc
aas
pusha
in
mov
jecxz
adc
data16
cmp
js
lea
dec
ds
mov
ss
insb
out
xchg
ret
mov
popf
imul
xlat
push
fcmovnb
pop
push
add
test
out
aaa
dec
pusha
cmp
cli
adc
adc
mov
mov
pop
outsl
push
or
add
mov
dec
mov
pop
cwtl
mov
mov
in
lods
pop
inc
add
bound
jae
mov
call
xor
pop
push
jnp
mov
lock
adc
pop
or
mov
cli
test
iret
mov
push
add
lods
push
pop
lahf
and
in
mov
add
incb
add
pop
jge
fidivrs
pop
icebp
or
mov
dec
insl
mov
xchg
loop
in
mov
js
pop
xor
divb
loop
iret
enter
in
icebp
jns
addr16
scas
mov
or
ljmp
jmp
ja
push
pop
jae
cld
test
stos
lret
push
xchg
push
gs
mov
inc
jbe
xor
loopne
mov
mov
push
mov
insl
push
mov
mov
add
enter
push
popl
mov
fiaddl
ds
ljmp
ljmp
stos
jecxz
incl
dec
jle
lds
and
add
iret
dec
add
cmp
jo
imul
adc
and
adc
sub
into
insb
push
jg
jle
mov
adc
shrb
push
lds
mov
pop
lret
adc
mov
push
mov
dec
pop
shlb
mov
mov
aas
lods
lds
push
or
lahf
push
xor
xchg
inc
dec
xor
push
jl
lock
sbb
clc
imul
push
fcmovbe
insl
and
cmp
ffree
xor
xor
pop
aaa
stos
fisubs
bound
mov
sub
outsl
jae
push
mov
xchg
mov
hlt
clc
je
and
sbb
cmpsb
imul
add
sbb
or
add
xchg
scas
lahf
les
jg
xor
lds
je
add
pcmpgtw
inc
mov
in
lods
mov
push
add
lods
dec
je
ja
push
cmp
cmp
mov
pushf
movsl
inc
cmpsb
sbb
loope
out
or
inc
xchg
das
dec
mov
ss
cmp
rclb
xor
dec
fdivrl
jecxz
cmp
add
push
ss
mov
idivb
mov
sbb
js
push
xchg
negb
ret
lea
rcl
lods
add
inc
leave
andl
sbb
xchg
mov
and
aad
xchg
jp
adc
cmp
movsb
std
and
ret
sbb
ret
mov
out
xchg
mov
jg
jno
adc
mov
out
add
pop
sbb
lods
popa
imulb
notl
repnz
sbb
jnp
dec
ds
icebp
divl
icebp
repnz
push
and
mov
test
dec
scas
mov
out
push
stos
xchg
ljmp
lea
mov
sbbb
data16
cmpsb
shlb
rorb
cltd
out
xchg
fwait
insl
mov
dec
adc
sub
test
shll
dec
push
adc
mov
fbld
lret
cmc
jle
bound
loopw
or
inc
pop
jl
cmpsl
mov
dec
addr16
cmp
push
cli
xchg
fistpll
pop
adc
or
movsl
jp
lods
sbb
bound
cmp
lock
mov
in
sahf
xchg
stc
inc
sub
jnp
rorl
push
mov
pop
pop
inc
call
push
leave
mov
jne
and
call
push
push
push
cmp
js
jbe
push
scas
outsb
sub
fdiv
fstl
lcall
lret
inc
pextrw
test
push
adc
push
adc
outsb
mulb
or
into
lret
lcall
nop
and
xor
cmpsl
mov
jne
mov
mov
lret
mov
imul
in
insl
inc
inc
bound
pop
cmp
jo
sub
leave
or
iret
push
nop
push
mov
iret
test
lods
add
test
xchg
xchg
xor
push
add
cmp
aad
xchg
aas
or
clc
loop
in
loope
rsqrtps
cmpsl
aad
cmpsl
xor
movsl
xchg
ljmp
inc
in
scas
icebp
mov
or
push
js
inc
xor
mov
and
je
xchg
fs
pop
out
add
xchg
fbstp
dec
out
or
xchg
stc
xchg
mov
sbb
rcrl
pop
add
adc
scas
out
shl
rorb
loope
add
adc
lcall
data16
addr16
ret
mov
stos
pop
mov
not
dec
popf
push
add
ljmp
mov
mov
aad
int
sarl
push
or
ficoml
mov
dec
dec
enter
inc
pop
ljmp
mov
in
or
testl
jge
js
leave
mov
pop
pop
outsl
jae
repnz
loop
insl
add
mov
mov
pop
lahf
jmp
adc
andl
dec
je
inc
adc
data16
or
call
pop
mov
pop
fmull
dec
les
or
mov
bound
jle
dec
repz
jne
jl
and
dec
push
dec
sub
or
push
jno
cmp
jnp
xor
insl
adc
xchg
mov
xor
push
out
cs
push
add
int
leave
insb
adc
push
lcall
out
push
xchg
shrl
push
push
cmc
stc
nop
xchg
fsts
inc
add
sahf
popf
outsl
cmpsl
cmpsb
lret
and
pop
mov
push
mov
and
xchg
dec
mov
loopne
push
mov
lock
push
into
push
cwtl
jp
shlb
sbb
fmuls
cmpsl
lret
dec
pop
ja
inc
in
mov
shrb
cmpsb
movsl
fwait
scas
push
lret
mov
lea
mov
push
add
in
mov
inc
mov
push
lcall
jecxz
cwtl
mov
jo
sub
scas
aas
stos
jns
or
lds
out
pop
shlb
pop
xlat
das
lock
stos
shl
pop
add
mov
fmul
imul
xchg
cmc
mov
stc
and
pop
xchg
mov
sbb
mov
insb
jbe
les
lock
sbb
dec
or
pop
sbb
testb
cmpsl
fmuls
test
fs
leave
in
outsl
lahf
ja
dec
or
dec
jg
nop
xor
cmc
mov
test
add
popf
xchg
xor
cmp
inc
push
add
stos
or
jne
mov
mov
jg
mov
xchg
fwait
mov
cwtl
jbe
scas
lds
adc
cmp
xchg
pop
stos
sarb
or
fwait
cltd
in
outsb
cmp
fistpll
push
aaa
or
or
cmpsb
mov
mov
sbb
push
bound
test
in
loopne
mov
fnstenv
inc
inc
add
inc
mov
pop
sub
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
sbb
aas
scas
addl
jo
mov
mov
sub
movsb
dec
sbb
jl
sti
sub
mov
pop
xor
jbe
or
lahf
adc
scas
sbb
fs
rcll
scas
daa
icebp
cmp
pop
sub
add
and
pop
call
scas
and
out
sub
add
mov
ret
icebp
cmc
adc
xchg
stos
ret
outsb
and
and
dec
jno
addb
xchg
dec
xchg
jmp
add
jnp
ss
xchg
push
subl
add
sbb
outsl
dec
insl
cli
xchg
push
inc
mov
js
jnp
fcomps
mov
add
dec
pop
sarb
mov
out
loope
inc
mov
add
jbe
and
loopne
sub
sbb
dec
shrl
mov
inc
sub
imul
inc
fwait
mov
mov
fsts
push
scas
push
or
pop
mov
loopne
in
sub
mov
loopne
out
inc
iret
loop
pop
movsl
incb
jo
pop
repz
xor
mov
push
xor
jmp
cwtl
imul
or
lret
loope
cmp
mov
pop
jge
push
mov
mov
ds
int
push
arpl
leave
shrl
sub
jl
fidivs
lcall
ljmp
inc
pop
jns,pn
jb
dec
inc
pop
xor
sub
imul
sub
gs
or
or
jmp
or
sarb
pop
fsubs
in
lret
addb
push
sub
pop
and
cltd
xchg
mov
dec
mov
mov
xchg
inc
mov
or
sbb
sub
cmp
addl
mov
jmp
jno
sub
sub
shll
pusha
pop
outsl
loopne
xor
call
mov
xlat
outsl
loopne
cs
pop
ljmp
or
or
mov
or
rcl
xlat
or
pop
xchg
xor
mov
mov
xor
out
push
lds
jp
add
xor
xor
lcall
rorb
fstl
push
jo
sbb
jl
adc
push
into
dec
sbb
lock
addr16
jbe
or
push
cmp
jbe
inc
sbb
mov
or
sub
cmpsl
lods
push
add
or
pop
aas
adc
movsb
popa
aaa
insb
sbb
cmp
out
aad
xchg
and
lret
cmp
outsb
int
pop
or
arpl
arpl
mov
dec
adc
jno
pop
ss
sbb
xor
fcompl
cltd
addb
aam
or
sbb
cmp
and
fs
mov
cltd
not
xor
in
imul
add
sub
sub
dec
push
fiadds
out
push
loop
loopne
mov
call
inc
ret
arpl
sub
xchg
pop
cwtl
adc
cmp
xor
inc
dec
loopne
sub
push
cmpsl
or
inc
rorl
and
cmp
add
subb
je
mov
ficoms
cmp
mov
mov
mov
movsl
or
in
fnstsw
loop
add
push
jne
outsl
inc
ficomps
mov
lret
mov
adc
mov
mov
jmp
inc
movsb
imul
xor
int3
sbb
jecxz
adc
add
lret
aam
push
mov
in
out
int
add
xor
rolb
fs
test
mov
mov
decb
cmpsb
mov
ret
jb
and
or
push
and
mov
movsb
repz
stos
sti
movsl
imul
cmc
js
pop
cmc
lods
lret
push
imul
hlt
jnp
adc
roll
mov
lret
scas
ret
jecxz
add
pushf
adc
unpcklps
loope
fcmovne
add
adc
cmp
xor
fdivrl
jecxz
dec
and
xchg
cmc
out
jo
daa
add
inc
push
imul
shlb
int3
xchg
cmp
nop
repz
aad
adc
xchg
mov
mov
outsb
mov
fwait
out
sti
pop
lcall
sub
mov
mov
jl
nop
sbb
scas
testb
in
stos
and
xchg
repnz
mov
mov
or
out
das
sbb
and
popf
test
bound
lods
jnp
cmp
xchg
pushf
jb
cs
mov
ds
lret
iret
aas
mov
jo
xchg
sbb
fdivl
bound
xor
add
popa
add
jns
bound
testl
lret
sahf
fwait
mov
cwtl
bound
jmp
out
push
out
fsubrs
aad
pop
xchg
xchg
mov
xor
sbb
popa
daa
stos
mov
cltd
fcmovnb
push
cmp
andl
and
mov
cli
icebp
imul
adc
mov
xlat
push
pop
add
outsl
fistpll
out
lret
pusha
es
pop
lods
mov
xor
pop
test
mov
mov
aaa
sbb
rcll
sbbb
mov
ret
xchg
push
push
nop
push
push
lods
cs
pusha
sbb
cmp
icebp
and
dec
add
mov
ja
mov
mov
lcall
fcmovb
fmull
insl
not
push
adc
jecxz
jl
inc
fistl
cmpsl
pop
pushf
push
xor
pop
jmp
push
mov
and
push
lret
fwait
jo
cld
inc
out
mov
std
adc
js
push
pop
or
sahf
add
push
jmp
call
lret
mov
loope
inc
sahf
dec
out
and
xchg
lret
outsb
sbb
cltd
lret
pop
mov
rcrl
leave
sub
int
roll
jecxz
ds
mov
xor
xor
inc
addr16
inc
cmp
sub
inc
cli
mov
into
call
rcr
xchg
loop
dec
cmp
imul
pusha
arpl
mov
sbb
mov
push
clc
adc
and
add
hlt
stos
stos
mov
lcall
sti
stos
testb
fwait
mov
test
dec
mov
or
push
rcrl
cmpsl
xchg
push
cltd
scas
mov
jae
jne
icebp
lods
push
sub
mov
out
loope
out
clc
jge
lret
xchg
jl
mov
fcompl
cltd
and
mov
adc
xchg
xchg
jae
pop
pop
jge
rclb
insl
xor
jge
fidivl
jb
es
xor
sahf
fists
repnz
lahf
push
daa
and
jg
pushf
cmp
inc
mov
filds
inc
fidivs
push
add
sub
call
lock
icebp
sub
je
stc
cli
popf
insb
mov
xchg
sar
cmp
pop
dec
in
test
aad
xchg
mov
add
pop
js
xor
jge
int3
fbstp
lret
pop
pushf
sarb
sbb
out
aad
xchg
js
iret
cli
dec
push
sub
dec
in
push
loope
sbb
in
jae
cmp
in
ret
sub
sahf
test
bound
sbb
mov
mov
mov
mov
push
xchg
adc
xchg
sbb
mov
jecxz
dec
dec
adc
inc
in
xor
sbb
sbb
subb
xchg
mov
ds
aas
fwait
ds
enter
test
cmp
ret
mov
xor
sub
js
sub
das
dec
mull
lea
hlt
and
sub
scas
lods
xor
dec
dec
cwtl
jne
jmp
loope
mov
xchg
cmp
or
push
xchg
pop
rcll
mov
test
fs
fsubrs
jbe
jecxz
mul
nop
cmpsl
test
mov
adc
daa
repz
jno
or
xor
outsl
test
cli
in
sub
jp
push
mov
or
lods
shrb
pusha
lret
shr
pop
jae
test
inc
sub
or
xchg
dec
movsl
jo
add
in
cli
fwait
or
jl
out
mov
mov
xor
nop
add
negb
add
outsl
jbe
or
xchg
xor
popf
cmp
add
mov
mov
or
scas
mov
ljmp
sti
in
les
fwait
stos
vmovdqa
les
pop
adc
nop
out
mov
sar
cld
fmuls
cmp
mov
sub
stos
cmp
xchg
pop
inc
jo
das
add
jae
jmp
andb
pop
jecxz
adc
inc
push
in
pop
lcall
aaa
andb
add
xlat
push
cmp
adc
das
div
stos
cmp
xor
fsave
xchg
cmp
lods
push
loopne
lcall
sbb
jecxz
sub
je
loop
add
lret
cwtl
scas
out
lahf
es
lahf
xchg
add
imul
lods
jb
mov
push
lock
pop
xchg
lret
out
mov
mov
loop
loop
adcb
arpl
inc
ja
out
lret
cmp
loope
xchg
and
scas
ja
out
test
arpl
dec
inc
cltd
shl
int
xchg
add
mov
push
pop
lea
cmp
fs
clc
xlat
lret
and
dec
mov
push
push
jo
imul
iret
adc
fwait
sub
ret
fwait
cmp
hlt
subl
ss
hlt
bound
jnp
add
movsb
xchg
push
inc
sub
in
jbe
hlt
push
cld
mov
cmp
add
pop
clc
ret
mov
cmp
mov
fmuls
inc
dec
fwait
imul
in
xchg
add
jmpw
pop
push
mov
movsb
jnp
mov
xchg
mov
jno
lock
sbb
in
in
ret
xor
xchg
repz
cmpsl
push
mov
mov
pop
xchg
push
mov
sarb
xor
in
into
dec
or
dec
lods
fsts
das
pushf
jne
mov
and
inc
xor
pop
movsl
icebp
xor
out
jne
mov
imul
and
push
inc
popf
or
jmp
sub
pop
daa
nop
cmp
mov
adc
push
adc
dec
sbb
sbb
nop
xor
in
pop
jnp
repnz
cmpsl
test
push
mov
pop
pop
iret
jg
and
xor
sub
add
pop
mov
lods
les
push
inc
sarb
repz
pop
outsl
cs
sti
imul
dec
xchg
mov
lea
clc
pusha
adc
mov
add
jecxz
inc
pop
scas
insb
roll
xor
das
and
push
xchg
mov
add
ss
test
notl
pop
add
xchg
fldlg2
cmpsb
mov
insl
and
cmp
fcmovnb
or
mov
sbb
inc
inc
repnz
test
cli
lret
xor
and
addr16
stc
lods
imul
lods
popa
and
dec
pop
sub
mov
adc
push
pop
stos
inc
jle
inc
std
movzwl
xor
mov
stos
in
test
sbb
aad
mov
xchg
je
movsb
insb
movsb
jmp
xchg
dec
in
jge
into
mov
ljmp
push
cmpsb
push
cli
movsb
repnz
lds
lea
fdivp
xlat
push
dec
sub
or
arpl
xchg
xchg
sbb
or
or
data16
adc
or
dec
xchg
push
mov
popa
decl
pop
stos
adc
pop
adc
sbb
movsb
mov
sub
sbb
outsb
lahf
cltd
sti
insl
pop
jbe
js
repz
ret
stos
outsb
in
insb
movsb
jle
lcall
ljmp
inc
aam
pop
xlat
mov
mov
mov
sbb
lret
inc
jmp
mov
xchg
pop
push
pop
lahf
js
mov
hlt
or
dec
rcll
je
mov
mov
into
and
pop
jg
push
push
mov
inc
inc
push
cmpsb
jmp
sub
adc
lahf
fs
jmp
lret
inc
lahf
rcrb
rcrl
jns
xchg
sub
or
aas
jmp
inc
jmp
dec
inc
hlt
cmc
int
insl
pop
sub
and
lds
jmp
out
je
out
movl
sbb
mov
push
dec
cmp
rcrb
inc
pop
inc
jns
sbb
loope
or
fisubs
inc
mov
or
sbb
dec
int3
shrl
movl
addr16
pop
xorb
in
test
aas
outsl
mov
loope
mov
cmpsb
inc
adc
cmpsb
push
mov
es
cmp
rcl
out
pop
bound
jmp
xchg
inc
cmpsl
mov
leave
shlb
enter
push
call
lcall
fidivrs
cmp
cld
fsts
js
int3
dec
lcall
aas
xor
dec
mov
out
in
out
lea
jl
xlat
enter
xor
das
xchg
into
push
or
lods
repnz
mov
decb
jge
rclb
iret
inc
fstl
ja
xor
jg
mov
cwtl
int3
mov
mov
add
lret
pop
xchg
mov
mov
shl
test
nop
mov
jnp
dec
pop
cmp
lahf
push
mov
mov
mov
mov
mov
out
ss
dec
sbb
fisttps
xor
je
add
stos
mov
jge
sub
mov
sbb
mov
sub
jne
repnz
pushf
add
or
add
sbb
mov
cmpsl
int3
sbb
adc
arpl
cs
mov
mov
lcall
int
push
lahf
mov
mov
sub
pop
xor
mov
icebp
flds
xchg
mov
lds
leave
push
add
vrcpps
cmc
xchg
dec
push
mov
lcall
mov
xor
xor
mov
add
ror
cmp
mov
jmp
cmp
lods
jg
adc
imul
scas
popa
pop
test
bound
mov
mov
ss
cltd
xor
push
or
mov
addr16
jecxz
xorl
mov
fmuls
jno
xor
xchg
jge
fmul
xchg
jp,pn
jae
enter
push
or
mov
sbb
mov
pop
inc
mov
jne
mov
adc
in
dec
fsub
int3
cld
add
xchg
movl
jnp
dec
xor
daa
ds
sbb
push
pop
sbb
xor
sahf
aad
cli
pusha
mov
mov
mov
add
push
dec
scas
or
cmpsb
push
inc
dec
adc
or
daa
ret
outsb
mov
add
idivl
sahf
push
adc
mov
test
test
adc
pop
dec
aam
sub
inc
mull
sti
flds
or
xor
adc
cmp
mov
cmpsl
fs
sbb
lcall
push
test
js
dec
lret
xchg
xchg
das
mov
insb
inc
js
lret
addr16
inc
das
rol
mov
mov
mov
xor
xchg
call
les
clc
jge
jbe
testb
dec
add
adc
mov
lock
es
xchg
negl
push
pop
mov
sub
mov
dec
loopne
add
or
ss
stos
gs
jno
outsl
shlb
inc
bound
xchg
or
cmpsl
or
pop
ljmp
cli
les
jp
lock
sbb
test
push
pop
xchg
ss
test
hlt
mov
jnp
ficoms
js
lcall
jns
add
or
mov
xor
ja
xchg
inc
inc
nop
mov
adc
add
push
or
xor
test
push
fdivrl
mov
push
arpl
in
mov
jg
adc
fbstp
stos
les
mov
call
call
cmp
shrb
call
out
sub
test
or
or
hlt
add
adcb
jb
pop
js
xchg
lods
jo
js
fs
xor
mov
aas
rclb
fistps
mov
push
icebp
jbe
push
std
jmp
sti
shrb
mov
cmpsl
pop
lods
inc
mov
inc
xor
rcll
push
test
js
insb
xchg
mov
cmp
xchg
das
test
popa
je
fldenv
fnstsw
push
je
ret
cli
ret
sub
push
push
imull
fidivrs
inc
cmc
push
mov
mov
push
test
shlb
sarl
sbb
loopne
jnp
jmp
adc
xchg
add
bswap
aam
add
sub
add
fisubl
xlat
inc
sbb
adc
or
lret
fistpl
jl
loopne
jecxz
mov
outsb
jl
idiv
pop
inc
mov
pop
jae
in
dec
pop
movl
jge
mov
sbb
aad
rorb
hlt
ficompl
jl
sub
and
mov
loope
sbb
popf
les
stc
adc
xchg
loop
shr
std
mov
xor
jbe
cmc
cmp
jnp
sbb
repz
ds
out
movsl
daa
add
mull
sub
ret
aam
mov
push
mov
repz
cmp
scas
ljmp
inc
or
jae
sub
fidivs
bnd
push
pop
mov
or
dec
mov
cmp
jb
or
pop
fmull
sbb
movsb
pop
dec
xor
adc
das
sti
stos
add
clc
cwtl
cld
shll
pusha
loope
leave
inc
push
jmp
ja
inc
cwtl
cmp
inc
pop
aam
push
xchg
sub
push
mov
add
jg
pusha
xor
testl
fistpll
outsb
out
adc
mov
mov
cli
int
mov
cmp
add
or
pop
jecxz
mov
scas
sbb
sbb
mov
mov
mov
repnz
cmp
mov
dec
or
push
push
mov
js
out
repnz
pop
cs
in
test
lahf
test
out
stos
jo
inc
sub
popf
push
xchg
out
aad
cmp
inc
mov
fnstsw
shl
aam
es
and
loopne
ret
adc
aam
in
imul
punpckhdq
aad
mov
dec
cvtpi2ps
adc
outsb
xor
andl
mov
lret
jnp
std
out
fwait
rcrl
pusha
and
mov
mov
xchg
cs
sub
pop
movsl
push
repnz
add
pop
or
in
adc
out
xchg
mov
int3
or
push
mov
clc
sub
scas
push
sub
loop
mov
andl
jecxz
adc
inc
jae
pop
xchg
lea
loop
lock
fstpt
jl
pop
adc
fistl
and
shrl
dec
jp
and
mov
pop
push
roll
into
aaa
fcoml
lret
sub
pop
pop
jns
outsb
cmpsl
fildl
inc
or
rclb
inc
in
in
aas
mov
out
add
imul
jmp
int3
outsb
xchg
iret
xor
lds
clc
mov
mov
add
insl
fwait
push
sub
cwtl
mov
push
inc
mov
xchg
jae
ret
imul
adc
data16
push
notl
pop
sub
mov
jge
add
pop
mov
jno
mov
or
fwait
sub
mov
lock
dec
rcl
stos
pop
mov
subb
inc
int
cmp
mov
pushf
push
pop
inc
sub
sub
adc
in
adc
scas
insl
addr16
and
xchg
inc
addl
outsb
fs
int3
aas
mov
xor
xchg
adcb
jae
adcb
lock
lods
addb
fld
movsl
dec
xor
cmp
xchg
adc
sbbl
and
les
mov
cmpsl
mov
jl
loope
push
mov
scas
imul
out
xor
inc
mov
and
cmp
sub
xchg
fwait
mov
int
or
stos
sub
mov
test
in
lcall
fs
xchg
sub
push
in
loope
mov
shrb
aas
fldl2e
sbb
pusha
xlat
clc
int3
sti
xchg
je
dec
mov
clc
jmp
daa
pop
mov
cmp
clc
js
movsl
mov
repnz
inc
into
ja
mov
sbb
ficoml
dec
lock
push
push
xor
cmp
cmp
mov
jle
cmp
jb
lods
sub
push
cmp
jb
mov
rol
lods
cmpsb
mov
sbb
inc
jge
add
and
test
dec
in
les
push
jp
fisubl
aam
popa
and
fcmovb
int3
mov
loope
movsb
cltd
stc
pusha
add
mov
imul
jg
push
icebp
in
jbe
sahf
mov
sbb
mov
inc
out
add
mov
addr16
aas
in
xlat
push
std
sahf
data16
lret
cmovl
xchg
xchg
mov
ds
dec
setg
bound
sbb
pop
xchg
stos
cmpsl
sahf
sbb
loop
xchg
adc
dec
out
mov
and
xor
mov
dec
adc
shrb
imul
add
popa
adc
jl
xlat
popf
pop
fnclex
in
cld
es
xchg
fmull
add
pop
mov
pop
adc
dec
aad
inc
fdivrl
iret
aad
stos
lock
pop
push
lcall
std
pushf
inc
loope
js
cli
sbbb
cltd
and
sahf
and
or
jne
mov
mov
into
test
sub
sub
data16
xlat
or
xabort
je,pn
mov
adc
jns
pushf
sub
icebp
mov
push
jge
xor
ja
popf
cli
data16
add
xchg
jecxz
in
nop
pop
stos
and
mull
or
scas
jle
xchg
sti
push
out
sub
lds
pop
ss
es
add
mov
ja
add
jno
lock
cltd
jl
mov
and
fidivl
cmp
push
or
out
cmp
in
repz
fnsave
mov
xor
fcoml
aad
xchg
mov
ss
pop
xchg
fdivrp
and
std
sub
scas
clc
pop
mov
and
push
insb
cmp
in
insl
ficoml
aas
jge
lds
mov
sbb
dec
call
loope
sub
das
mov
arpl
mov
lea
pop
push
int3
lret
add
jbe
adc
mov
out
fwait
rolb
push
movsl
mov
add
outsl
inc
out
lretw
or
shlb
xor
rclb
push
push
shll
int3
jmp
icebp
sbb
fimull
repnz
mov
push
mov
data16
add
mov
sub
shlb
mov
push
notb
jp
popf
push
sbb
sub
or
nop
mov
fwait
jo
or
sub
sbb
sub
mov
mov
iret
sub
gs
lods
ja
xor
jl
add
loope
mov
aas
clc
ljmp
scas
and
add
sub
mov
dec
jmp
jnp
and
repz
jno
or
arpl
sbb
pop
pop
movsl
inc
and
xor
push
cmp
cld
xchg
inc
mov
loopne
call
divl
jns
ret
push
mov
mov
rcrb
aas
xchg
lret
call
xor
jle
cmc
or
int
xchg
xchg
or
mov
adc
aaa
pop
mov
and
shlb
aas
xchg
inc
xchg
cmpsb
dec
xor
mov
mov
or
dec
es
sbb
xor
inc
loop
pop
rcrl
cwtl
and
out
pop
adc
mov
mov
pop
lods
shll
sbb
mov
mov
cmpsl
icebp
inc
lock
sbb
jae
mov
pop
xchg
add
int
inc
in
sub
stos
mov
adc
jnp
shll
in
or
sbb
lahf
je
shr
cmp
mov
xor
dec
int3
add
jecxz
out
inc
xchg
dec
dec
adc
test
jmp
push
popf
jbe
out
mov
mov
imul
xchg
mov
scas
push
inc
or
repz
stos
out
cmpsb
shl
imul
cmp
gs
nop
in
pushf
fisubrl
jbe
in
mov
or
mov
xchg
mov
xchg
out
xor
stos
test
clc
push
sub
push
mov
lahf
loopne
adc
loopne
lret
xchg
out
cmpl
test
roll
jns
push
sbb
nop
jge
cwtl
mov
out
int
and
out
out
jmp
sbb
icebp
arpl
iret
xchg
mov
out
and
mov
int
push
xlat
roll
in
inc
xchg
xchg
mov
loope
aad
fs
jg
jns
xchg
data16
jecxz
stos
ss
jle
testb
sub
push
aas
and
neg
arpl
testl
pop
push
repnz
lods
leave
sarb
mov
inc
out
fs
stos
enter
add
mov
xor
inc
shrl
stc
ja
push
test
add
sbb
scas
ss
cmp
jl
in
or
stc
subl
pop
clc
in
lds
push
inc
adcb
mov
sub
cmp
mov
fwait
icebp
sub
mov
and
loopne
cmp
jle
xchg
pop
and
inc
icebp
or
mov
sub
xor
aad
mov
std
add
scas
xor
sbb
mov
fs
imul
shll
loop
xor
loop
sahf
call
sbb
lret
dec
out
jge
movsl
ljmp
jmp
mov
pop
daa
sahf
sti
jae
mov
or
test
or
loope
in
add
setne
jne
pop
push
leave
imul
and
shll
xlat
inc
pop
and
daa
adc
push
and
cmp
je
inc
xor
mov
in
inc
xor
orl
gs
adc
negl
out
js
jbe
or
jmp
pop
jae
add
mov
outsl
fwait
scas
iret
fsub
movsl
inc
cli
sbb
xchg
push
jnp
xor
sarb
movb
into
in
add
mov
mov
xchg
popf
sbb
mov
icebp
and
mov
sbb
pop
int
in
sub
adc
adc
dec
xchg
mov
dec
ja,pt
mov
insb
cld
mov
xorl
fadds
lea
js
addl
mov
push
pop
ret
push
pop
cmpsl
push
ss
arpl
and
enter
or
sub
lock
sarl
gs
stos
or
mov
jp
xor
add
mov
inc
jg
jnp
jno
mov
mov
or
jl
dec
fs
les
mov
mov
frstor
mov
sarb
ret
dec
int3
cmp
dec
aaa
in
test
out
dec
arpl
movsb
inc
popf
inc
pop
adc
cmp
jp
rorl
push
xchg
push
push
pop
mov
mov
cmp
lods
das
push
imul
pop
add
and
fucom
rolb
mov
and
jp
fwait
mov
inc
rcrl
addr16
in
insb
cmc
jb
test
dec
push
jae
ficoms
push
sbb
mov
inc
imul
adc
add
dec
sub
mov
add
mov
cmc
rsqrtps
das
sbb
lods
sub
jecxz
out
dec
add
ss
lea
repz
insb
insb
ffree
push
sbb
add
mov
sti
push
dec
cmp
jbe
pop
push
or
jg
cwtl
push
stos
pop
mov
int
fs
push
ret
jne
cltd
pop
push
fstl
outsl
and
jae
pop
insl
jecxz
jbe
xorb
xorb
sub
xchg
notl
jae
fstpt
cltd
jl
cmp
cltd
inc
arpl
mov
sbb
mov
push
add
adc
clc
lods
mov
mov
cmp
sbb
cmp
rolb
xchg
push
dec
jbe
push
adcl
ja
into
mov
add
outsb
loopne
loopne
pop
or
addr16
mov
dec
arpl
sub
rclb
xor
pop
mov
sarb
mov
mov
dec
fimuls
mov
out
xchg
cmp
cli
inc
in
pop
pop
fwait
push
push
sahf
mov
jnp
sub
pusha
mov
push
pop
into
cld
into
xor
decl
xor
lret
daa
in
mov
pop
push
and
add
test
push
pushf
sbb
xchg
adc
ret
jmp
xor
popf
pop
xchg
enter
pop
adc
xchg
movsb
rcll
jns
xorl
loope
jne
pop
test
mov
mov
test
je
repz
xchg
xchg
push
mov
pusha
pop
mov
adc
cmp
dec
mov
cld
lock
xchg
jo
outsl
mov
rorb
sbb
cmpsb
xchg
ficomps
test
dec
outsb
and
aam
ss
negb
out
mov
push
nop
sub
ret
inc
mov
xchg
les
push
lret
sti
cmp
push
test
inc
jle
add
inc
ljmp
in
jb
sub
arpl
shl
pushf
pushf
gs
cmp
lret
les
rep
xchg
pop
inc
mov
or
dec
mov
xlat
and
inc
cmpsl
mov
and
movsb
lods
or
inc
repnz
bound
pop
cmp
mov
jnp
int
add
cmpl
out
test
popa
xlat
jp
aaa
fdivrl
jp
add
aam
sbb
or
xchg
cmpb
sbb
sub
push
and
ficoml
xchg
mov
jns
xor
sbb
es
pop
jmp
mov
ja
pop
into
sbb
repz
ljmp
adcb
aam
in
mov
out
inc
inc
jno
arpl
jecxz
ljmp
sbb
add
push
mov
xor
lods
es
lcall
cmpsb
sbb
rcll
or
xchg
xor
mov
mov
mov
sbb
or
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
testb
and
ds
addl
rcrl
sub
test
add
test
shlb
cmp
or
test
and
and
insb
iret
push
pop
xor
xor
repnz
or
scas
rcll
idivb
mov
fsubr
or
and
lret
inc
cmp
or
in
mov
mov
mov
jecxz
cmp
gs
les
pop
dec
idivb
ja
jle
aaa
pop
mov
xchg
jnp
jns
pop
ja
ja
sbb
mov
sub
mov
neg
cmpsl
lds
sbb
sbbl
ret
pop
pop
xchg
loope
sahf
enter
imul
imul
xchg
cmp
ljmp
cmp
lcall
insl
adc
add
adc
mov
fnsave
and
xchg
mov
cmp
dec
jb
adc
dec
add
dec
repz
loope,pt
fildll
xchg
pop
jbe
test
lret
data16
dec
je
add
mov
lret
push
xor
sbb
push
fldl
lea
cmpsl
js
cmp
cmp
loopne
sub
jl
je
cmp
pop
jns
inc
add
sti
pop
push
jle
dec
push
mov
icebp
cltd
popa
cmp
xor
pusha
sbb
loopne
ret
ja
stos
sub
jecxz
xchg
es
mov
stc
loope
xor
js
lea
dec
lods
gs
and
dec
mov
shlb
scas
ja
stc
mov
push
mov
mov
cld
sbb
sarb
lods
inc
mov
shlb
mov
shl
cltd
insb
mov
jns
mov
sbb
jb
jge
cmc
movsl
loop
sub
or
fistpl
mov
test
cmp
sub
and
inc
adc
sarb
es
lods
pop
into
ljmp
and
das
and
xchg
mov
and
cmp
call
js
ljmp
inc
jns
ss
mov
xchg
lret
popf
call
ret
mov
push
lahf
mov
test
stos
push
adc
ds
pushf
dec
add
fisubl
mov
fsubl
xchg
loope
je
xchg
pop
jno
jne
loope
scas
or
xchg
jnp
xchg
cmpl
popa
sbb
sub
in
mov
and
pop
leave
jno
add
subl
cmpsl
stos
add
nop
sub
sub
or
xchg
movsb
dec
push
outsl
xchg
adc
inc
inc
scas
adc
and
mov
outsb
stos
mov
or
repz
out
sub
scas
cmp
arpl
stos
std
inc
cmp
pop
pop
push
ss
add
cmpsl
lret
insb
lods
jbe
fwait
ja
pusha
mov
pop
pop
mov
add
test
push
mov
xchg
cmpsb
mov
sbb
push
adc
enter
xor
movsb
out
and
dec
scas
adc
out
rorb
pop
stos
sbb
nop
clc
mov
or
or
subl
mov
mov
push
out
ret
mov
mov
push
fwait
stos
adc
lods
cmp
out
lods
mov
sbb
jmp
sahf
js
add
fs
int
data16
fsubs
jmp
outsb
jg
ret
fs
dec
fwait
loope
es
aam
rclb
jns
outsl
les
stos
cmp
mov
mov
add
inc
jle
ja
addr16
inc
inc
es
cs
mov
jo
sub
sub
call
scas
jbe
jecxz
out
insb
lahf
ret
jg
jecxz
xor
pusha
mov
add
sbb
js
call
lods
adc
data16
fdivr
pop
jle
aaa
imul
lcall
xchg
std
pop
add
daa
dec
sbb
ss
stos
ljmp
mov
push
add
call
push
jmp
adc
movsl
or
cmc
jbe
xchg
imul
lcall
cmc
insl
push
mov
dec
pop
fcom
pop
addb
xchg
or
inc
pop
jg
sub
cmp
test
ret
dec
dec
es
xchg
xor
xchg
std
fsts
aas
inc
insb
xchg
pusha
fdivrs
sbbl
loope
sbb
in
xchg
dec
add
ret
insb
inc
bound
push
stos
hlt
rcll
inc
pop
inc
dec
xor
sbbb
xchg
out
lcall
push
sub
out
fs
out
in
lcall
popa
repnz
xor
aam
and
xchg
pusha
lret
mov
xchg
mov
xor
jnp
mov
or
into
cmp
dec
sarb
xor
push
stos
cmp
fcomps
xchg
int3
xchg
mov
cltd
sbb
xchg
push
xor
ds
sti
adc
test
and
xchg
rclb
and
dec
repz
pushf
sbb
inc
cli
sub
inc
dec
out
jae
lods
out
dec
push
and
pop
je
scas
push
xor
sarl
fwait
push
mov
pop
pop
bound
lret
sub
outsl
sub
xrelease
xor
add
icebp
push
xchg
call
rcr
movl
cmp
test
push
icebp
inc
adcl
es
cld
pop
cmp
mov
insl
enter
and
or
jle
xchg
pop
test
scas
js
mov
insb
mov
sub
mov
gs
ret
push
or
add
cmp
xor
pop
inc
and
xchg
push
or
ja
mov
add
xor
lcall
icebp
and
pop
mov
and
jg
dec
mov
ds
lods
pop
cmp
cmp
or
insl
and
repnz
dec
pop
fadds
movsl
jbe
sahf
push
mov
je
lea
mov
pop
fldl
popf
sbbl
and
aad
les
or
adc
insb
sbbl
inc
fisubrl
dec
lock
ljmp
sub
jp
mov
sub
test
fnsave
xchg
xor
xor
lret
cmp
and
mov
stos
xchg
jmp
pop
lds
add
adc
push
push
push
mov
pop
nop
negl
loopne
cli
mov
adc
jle
in
xchg
or
dec
mov
jmp
dec
xchg
fcompl
fwait
call
xor
fisttps
cltd
enter
imul
pop
pop
jmp
cmp
dec
mov
enter
mov
add
cmp
pushf
dec
pop
inc
pop
add
div
sub
sbb
cld
mov
and
sbb
bound
repz
mov
js
into
out
or
call
ljmp
sub
gs
xchg
xlat
xor
push
aam
cwtl
aas
xor
lods
aaa
je
jno
adc
xor
data16
xchg
enter
enter
lock
pop
mov
and
push
and
cmp
cmp
scas
mov
stc
lret
fldenv
and
stos
repz
inc
out
inc
test
and
adc
test
addr16
push
insl
stc
sub
pop
fisttpll
pop
leave
ror
xchg
pop
in
aad
push
repnz
mov
cltd
sbb
jle
cwtl
adc
inc
sub
jns
sbb
inc
test
shrl
adc
or
or
adc
jmp
movsb
mov
jae
cmp
add
jmp
mov
je
push
mov
jecxz
ja
xor
push
insl
movsl
add
inc
jge
mov
rcrl
popa
es
loop
test
jns
sbb
icebp
shrb
and
jo
mov
jnp
cltd
out
cmp
xor
pop
outsl
mov
cli
pop
movsb
lret
fcmovb
test
movsb
add
jge
lcall
push
jns
xchg
fimull
mov
or
fisttps
into
pop
mov
out
mov
dec
adc
adc
mov
push
adc
insb
jae
dec
lahf
das
mov
xchg
fsts
out
stc
inc
fisubl
popf
dec
pop
in
jmp
add
cmp
cmc
popf
inc
outsb
repz
dec
movsl
inc
mov
push
aad
mov
dec
scas
outsb
cmp
sub
mov
addr16
xchg
pushf
pop
insb
mov
or
fidivl
xor
test
cmp
mov
rdtsc
int3
adc
cmc
jg
mov
jbe
inc
mov
inc
adc
lock
or
dec
stos
lret
pop
mov
ds
rorb
ja
push
mov
mov
jb
fildl
push
addb
sar
mov
aam
and
jecxz
pushf
shll
scas
or
repnz
mov
test
add
shll
cmp
inc
xchg
xor
jo
ja
add
cli
push
lcall
sbb
lret
into
loope
call
adc
xchg
fsubrl
ljmp
and
lss
pop
gs
xchg
xchg
push
mov
xor
sub
stos
adc
sarb
mov
adc
sbb
cmpsb
sarl
insl
push
rdmsr
repnz
ror
fcoml
and
mov
adc
pop
push
out
pop
lret
and
cmp
adc
fld
mov
sahf
mov
adc
jp
sub
cltd
andb
loopne
or
add
adc
lods
xchg
pop
pushf
jge
mov
mov
mov
adc
cmc
cmpsl
jle
jl
movsl
lods
rcrl
sbb
insl
ss
sub
dec
leave
cmp
jne
nop
mov
std
cmpsb
arpl
push
sahf
xor
sub
add
shl
jb
and
cmc
adc
fwait
cmp
xor
fsts
out
ret
pop
ficoms
cltd
stos
repz
xchg
pop
cmp
push
lods
bound
imul
push
loop
jmp
ret
cmpsl
sbb
lret
out
stos
jge
decb
pop
and
sbb
xchg
lea
stos
daa
lods
jl
mov
repnz
dec
popa
data16
jnp
fyl2xp1
daa
std
add
pushf
dec
xchg
xor
cmpb
add
shlb
inc
data16
lock
ljmp
test
fstl
scas
or
mulb
pop
jl
and
pop
int
and
push
add
ja
das
mov
inc
ret
lret
imul
arpl
push
ret
inc
imul
idivl
bound
ret
dec
or
flds
cmp
add
mov
iret
into
add
pop
mov
dec
lods
sub
iret
fisubrl
xchg
pop
fistpl
xorl
daa
aad
mov
js
pop
js
fwait
xor
sbb
sbb
or
pop
push
sti
inc
xchg
xchg
fstl
or
loopne
mov
sahf
das
cmp
mov
data16
movsb
loop
mov
clc
sub
mov
dec
lds
daa
xchg
xor
cltd
cld
dec
sbb
roll
push
dec
add
lock
addr16
xor
sub
and
push
add
pop
cld
shlb
xchg
lcall
xor
not
jge
pop
sbbb
adc
mov
ljmp
dec
adc
inc
and
and
fwait
push
sbb
xor
adc
cmp
push
adc
fstps
into
mov
jae
inc
imul
inc
adc
notl
cmp
jo
ret
cmp
movsb
or
test
jno
arpl
mov
jae
rorl
pop
adc
pop
dec
xchg
mov
int3
sub
sbb
jne
fwait
jae
pop
ret
mov
adc
jl
orl
fucomp
daa
ret
cmp
lahf
sbb
lahf
jne
xchg
arpl
push
pop
in
popf
xor
mov
mov
repnz
nop
insl
arpl
rolb
movsb
mov
repz
xor
or
cld
test
pushf
dec
add
add
cmp
inc
push
into
mov
sub
cltd
insl
mov
in
jge
ljmp
mov
out
jecxz
push
jno
imul
add
aam
mov
dec
pop
into
leave
repnz
push
fdivrl
inc
xlat
add
mov
jecxz
andl
js
jge
scas
ds
xor
push
and
fs
push
push
cltd
inc
bound
pop
adc
jae
scas
int
add
and
nop
mov
inc
lds
rolb
les
outsb
add
fldenv
jae
add
aad
js
popf
movsb
sub
sti
addb
push
shrb
into
sub
and
cmp
mov
call
lds
out
lret
sbb
pop
and
enter
push
cmp
sub
dec
push
add
jge
jge
popf
in
addr16
in
add
loop
lret
and
data16
mov
nop
add
jmp
push
mov
mov
aam
adc
pop
and
incl
cwtl
aaa
and
aas
imul
nop
mov
pop
pop
and
xchg
mov
int
xchg
xchg
xchg
xchg
cltd
into
mov
sub
mov
jmp
mov
cmp
fistps
and
cmp
add
xchg
xor
sbb
iret
xor
jle
fwait
lret
and
fdivrs
mov
push
ljmp
sub
popf
inc
roll
ret
sbb
stc
repz
out
das
dec
dec
inc
scas
push
pop
imul
add
iret
xor
pop
xor
std
loopne
mov
cmp
mov
int3
lret
sub
outsl
push
sahf
test
dec
xor
xchg
fmull
stos
xchg
lret
push
jb
jge
lds
cmpsl
push
sbb
mov
xchg
and
push
inc
fistl
mov
and
xchg
adc
enter
mov
adc
adc
aas
data16
in
mov
dec
inc
xor
push
mov
mov
movsb
mov
sahf
sbbb
inc
add
ss
pop
lods
subl
xchg
or
and
fisubrl
jecxz
je
rcll
inc
xor
rcll
stos
xchg
xchg
jae
lcall
fucomi
or
pop
stos
sbb
xchg
push
sbb
lret
aas
xor
inc
repz
clc
es
outsb
xlat
std
enter
movsl
xor
test
mov
daa
pop
inc
addr16
or
cmp
add
jnp
and
subb
daa
pop
pusha
xor
out
fmull
cmp
add
dec
push
data16
add
icebp
xchg
cmpb
and
cmp
sub
shrl
pop
dec
inc
mov
pop
lret
loop
call
push
xlat
xchg
lods
insb
pop
loopne
sbb
pop
push
pop
cmpsb
mov
ja
xlat
rclb
dec
fs
jge
adc
stos
test
scas
shl
pop
pop
stc
movsl
pusha
add
ret
stos
nop
jo
inc
cmc
cli
and
outsb
inc
in
jg
lret
dec
mov
dec
pop
scas
ljmp
sarb
add
pop
or
push
dec
fs
ds
mov
out
mov
xchg
or
inc
dec
cmc
insl
pop
push
jecxz
xchg
cld
xchg
cmp
add
fbstp
cmpsl
addb
mov
hlt
mov
mov
and
mov
cmp
xor
ret
jb
ja
xor
je
test
jnp
sti
dec
outsb
push
pushf
and
sub
test
jnp
leave
inc
test
cld
adc
lock
sbb
mov
faddl
idivl
cmp
inc
xchg
and
cwtl
outsl
pop
in
cmc
sbb
jnp
into
sbb
int3
out
inc
fstl
jl
pop
test
stos
aad
stos
or
in
push
push
pusha
sbbb
inc
lcall
add
mov
cmp
hlt
lcall
dec
xchg
iret
pop
dec
mov
fidivrs
fiadds
scas
testl
xchg
xchg
push
dec
mov
mov
xchg
js
in
cs
xor
shlb
sub
mov
cwtl
push
fnstcw
les
dec
or
stos
aad
lea
dec
mov
icebp
mov
or
sbb
sub
push
mov
mov
ja
pop
rcr
sub
jb
cli
cli
mov
mov
negb
sahf
mov
int3
cmpsl
call
lock
enter
shlb
lret
sbb
xor
fldenv
fcompl
and
in
bound
movsl
or
jae
fwait
leave
pushf
cmp
loop
dec
jbe
and
sub
lods
mov
pop
xchg
popa
dec
jmp
cltd
scas
daa
adc
hlt
scas
in
push
mov
cwtl
dec
jecxz
adc
jl
gs
xlat
out
lds
insl
pop
es
sbb
dec
xchg
pushf
movlps
mov
or
addl
inc
ret
rorb
pop
or
out
imul
sbb
xchg
and
mov
ret
sbb
and
rclb
iret
adc
test
xor
mov
jmp
das
ss
pop
or
mov
jne
je
pop
xor
pop
test
mov
mov
push
add
roll
mov
pop
imul
fdivl
aam
sbb
xor
and
sbb
dec
push
xchg
cmc
push
divb
push
and
stos
xor
mov
cmp
sub
loopne
sub
jb
jle
mov
std
jg
pop
dec
or
mov
sbbl
int3
scas
adc
cli
inc
or
push
pop
jno
loopne
inc
test
pop
mov
pusha
rcl
xchg
int
enter
scas
aaa
jae
cli
xchg
sbb
outsl
jno
int3
fmul
sbb
frstor
sbb
loope
loope
jns
add
enter
icebp
ss
not
mov
mov
mov
jno
mov
shrl
xchg
dec
into
cmp
aaa
ss
repz
nop
imul
lods
cwtl
shlb
addr16
dec
jae
cmp
push
jb
push
aam
mov
adc
lods
js
loopne
push
add
push
cmp
cmpsl
sbb
mov
dec
jbe
out
fldl
shlb
xor
xchg
inc
cmp
pop
push
fimuls
push
add
mov
jecxz
adc
push
inc
cwtl
lea
jae
leave
and
lahf
xor
fiaddl
push
fnstsw
test
lods
xchg
lods
sbb
cmp
clc
stos
adc
mov
ret
roll
bound
inc
loopne
mov
mov
push
push
cmp
add
jle
js
pop
data16
jp
subl
lret
lea
repnz
mov
pop
jb
mov
lods
add
mov
adc
sbb
push
or
imul
adc
xor
xchg
rclb
insl
in
addr16
mov
inc
xchg
xchg
test
mov
inc
jge
fsubrs
sub
int3
sbb
mov
std
sub
xchg
sbb
pushf
cmp
in
mov
repnz
lock
in
repz
dec
lahf
sub
jl
pop
adc
xchg
xor
addr16
mov
hlt
jmp
lcall
cwtl
inc
sub
lea
mov
popf
out
dec
scas
push
lcall
incb
pop
insb
outsl
xor
and
outsb
in
imul
ds
mov
push
orl
pop
hlt
sbb
or
mov
hlt
testl
ficoms
or
stc
sar
add
add
mov
daa
imul
adc
add
mov
cwtl
lock
outsb
jbe
mov
jae
ss
mov
hlt
in
fimull
mov
loopne
arpl
sbb
stc
inc
mov
mov
ss
dec
lock
add
push
push
iret
leave
leave
cmp
cwtl
shl
jo
movsb
pextrw
mov
dec
in
aam
lcall
scas
sub
int3
or
xor
jbe
and
inc
scas
mov
pop
das
cmpb
fyl2x
xchg
lret
xchg
std
sub
je
add
push
add
jg
rorb
xchg
push
pop
js
xor
mov
adc
fld1
jae
push
aaa
outsl
out
addb
leave
sbb
jg
sub
sti
mov
push
movsl
push
mov
mov
out
aam
pop
dec
jnp
popf
nop
and
iret
lock
mov
imul
sbb
pop
shlb
pop
mov
push
fsubrs
pusha
test
pop
ja
nop
jno
fwait
xor
imul
mov
lea
ds
push
pop
xor
shll
jno
sub
imull
mov
aaa
lock
aaa
xchg
mov
or
ret
mov
push
adc
mov
fisttpl
mov
jo
rolb
or
mov
rcrb
jb
xchg
push
movl
fstl
fistpll
mov
sub
xchg
sbb
jae
ror
sub
fisttpl
inc
stc
mov
sahf
cltd
jge
jg
outsl
movsl
jecxz
xchg
dec
xor
xchg
xchg
mov
push
test
inc
pop
test
inc
data16
xlat
mov
push
jb
sub
clc
xor
push
ja
movsb
lock
pop
xchg
int3
jne
inc
js
fwait
push
jle
repnz
imulb
scas
dec
jmp
imul
call
aad
ljmp
shl
push
lret
cwtl
inc
sub
dec
les
add
xchg
fcmovu
and
xchg
xchg
xchg
xor
loope
fldcw
pop
rol
pop
inc
shll
mov
imul
inc
and
xor
sahf
std
fcmovnu
es
dec
inc
jmp
mov
repz
xor
pop
into
cmpsl
pusha
lcallw
jl
dec
dec
cwtl
inc
imul
or
jge
jg
ret
ja
cmp
xchg
stc
cmpsb
pop
jo
mov
jns
adc
sarl
xchg
scas
repz
push
dec
in
xor
fidivl
pop
pop
cmpb
aad
inc
xchg
push
ljmp
push
out
inc
icebp
inc
mov
dec
jae
jge
push
test
mov
dec
sbb
ljmp
jbe
aas
test
fs
add
ljmp
outsb
lds
or
das
iret
mov
rcll
push
addl
xchg
jnp
sub
xor
into
pop
push
ljmp
jns
fdivrs
sbb
arpl
popf
aaa
jns
loopne
fstpt
push
xor
xorb
cmp
cmc
mov
jnp
push
lret
inc
lods
inc
in
jmp
sub
push
imul
sbb
or
push
pop
push
incb
pop
xor
mov
and
ret
fs
sub
mov
fadds
mov
sbb
mulb
add
test
fnsetpm(287
ret
lods
mov
les
loop
dec
out
pop
call
push
xor
pop
and
cltd
mov
stc
cli
adc
inc
mov
sti
push
mov
adc
jecxz
iret
into
mov
mov
aas
cmpsb
adc
aas
stos
std
pop
adc
add
lret
scas
shrl
sub
jbe
sub
cmp
and
lret
mov
das
inc
mov
push
gs
clc
pop
scas
xchg
xor
jns
std
in
pop
sub
adc
in
and
in
inc
lods
into
push
mov
scas
mov
ds
xor
sbb
movsl
push
xchg
add
cld
fmul
bnd
and
mov
loope
add
sti
clc
fsubrl
inc
es
insb
fstpl
imul
sbb
movsl
jecxz
adc
add
subb
jmp
dec
jle
sub
xlat
mov
enter
movsb
lods
lret
pushf
mov
jbe
and
cltd
addr16
insl
sbb
xchg
jmp
cli
movsb
rolb
sbb
pop
push
xchg
mov
mov
push
aas
push
popa
imul
out
js
sahf
out
push
push
popf
jnp
add
sar
lods
mov
pop
and
dec
inc
ja
ljmp
inc
mov
rcrb
add
sub
inc
sbb
xchg
cld
add
jl
lahf
ret
loope
inc
ret
popf
popa
jecxz
bound
and
mov
mov
adc
xlat
pop
xchg
xor
movsb
popf
gs
out
out
xlat
ficomps
sbb
sbb
jecxz
imul
jae
jl
js
std
add
sahf
popf
nop
imul
fsubl
adc
out
push
sub
add
mov
cmc
push
xor
and
pop
fcomps
lahf
cmp
mov
xchg
popf
lret
cmpl
lea
int
aam
mov
xor
js
rcrl
adc
cmpsb
and
jo
lcall
push
mov
push
in
fcom
mov
xbegin
inc
mov
das
gs
dec
int3
add
jae
shl
jmp
jnp
jnp
lock
shlb
mov
inc
sbb
cmp
leave
js
test
push
mov
mov
add
ss
sub
sub
mov
lock
push
fstpl
inc
or
cmpsb
fmul
xchg
mov
dec
fs
idivl
push
and
or
mov
das
aaa
cltd
mov
stos
sub
lock
ja
ret
jge
xchg
jo
std
xchg
xor
pop
scas
mov
xchg
cmovl
sbbb
outsl
jo
cmp
jl
pop
sub
fimull
into
xor
add
aad
add
lock
inc
sub
jecxz
jmp
cs
cltd
pop
popf
sarb
out
and
cmp
dec
jle
dec
push
adc
xorb
leave
test
testl
mov
lret
std
xorl
daa
pushf
mov
push
mov
jns
adc
arpl
xor
push
xor
in
insl
jmp
daa
negb
mov
outsl
pop
lds
push
in
out
out
mov
push
lods
fadd
push
jmp
test
jne
sbb
test
xor
sub
test
mov
xchg
push
inc
mov
and
movsl
push
hlt
sbb
popf
scas
out
jmp
jae
adc
mov
xchg
ret
cmpsb
ret
aas
jmp
lahf
test
mov
adc
mov
shll
dec
xchg
int
icebp
adc
mov
and
jbe
call
repz
psubusb
rcrl
pop
or
dec
pusha
andl
lds
adc
gs
jl
movsb
aad
orb
lret
in
xor
dec
adc
mov
push
and
int3
into
push
imul
or
test
andl
jcxz,pt
das
pop
push
mov
mov
andb
mov
dec
jbe
sti
xchg
scas
lock
push
mov
aas
ret
adc
pop
lea
xchg
lcall
cmp
ret
mov
and
lods
jl
dec
dec
test
xchg
xchg
out
rcl
mov
subb
or
sub
cmp
movsl
cli
ja
test
and
es
rol
cmp
negl
mov
loopne
out
mov
fsubp
sub
aam
xor
jb
mov
mov
sub
push
add
es
cmc
xchg
or
cmp
mov
cmp
jge
pop
dec
jns
ret
and
mov
sarl
lock
inc
das
ds
daa
push
mov
ficoms
sbb
rclb
mov
mov
pushf
pop
cs
mov
nop
scas
decb
sahf
out
lahf
xchg
movsb
inc
push
ljmp
sbb
fldcw
loopne
dec
fwait
pop
mov
jp
stc
icebp
in
dec
cmp
in
xchg
xor
inc
pop
pop
adc
mov
jnp
aam
int3
icebp
test
ret
in
sar
pop
testb
dec
leave
test
out
mov
fs
fs
jmp
rcll
xor
jle
push
push
jnp
sbb
push
dec
in
mov
std
outsl
or
mov
mov
sarl
imul
and
push
adc
je
les
dec
inc
or
pop
lahf
pop
pop
sbbl
push
out
ret
inc
jp
lret
lahf
lea
std
out
adc
sub
jns
into
xchg
xchg
insb
xchg
rol
jle
mov
mov
pop
mov
adc
adcl
mov
mov
cltd
mov
push
or
out
inc
sbb
rclb
gs
inc
add
jo
xchg
mov
mov
jne
in
xchg
push
cld
push
inc
out
imul
cmc
sbb
pop
insl
out
daa
incb
dec
adc
lock
scas
jle
jbe
sar
mov
lahf
addr16
and
xchg
out
cmp
or
popa
sbb
cli
das
sub
mov
xor
ret
pop
sti
jge
inc
outsl
jb
shlb
jecxz
data16
cs
pop
inc
mov
add
pop
push
sbb
aas
fidivrl
cmp
cmp
xor
out
dec
ret
imul
inc
iret
das
popf
lcall
jne
inc
pop
clc
pop
test
cltd
push
mov
fs
punpcklbw
inc
xchg
jbe
push
jb
xchg
jns
repnz
inc
fdivr
addr16
pop
push
mov
addl
imulb
lahf
jle
xor
mov
js
cmp
or
lods
cmp
clts
sub
and
lods
push
jg
push
cwtl
or
fsubrs
mov
scas
pusha
adc
mov
fstl
pop
adc
mov
sub
mov
repnz
incl
push
push
add
cmpsb
inc
int
push
out
imul
xchg
std
push
xchg
pop
xchg
pop
pop
jl
inc
mov
mov
inc
sbb
aam
mov
rorb
cmp
push
inc
xchg
mov
pop
daa
pop
scas
push
jns
adc
adcl
std
jbe
shl
mov
jg
xchg
push
inc
add
pop
addb
lods
ret
cmp
loopne
cmp
add
test
jl
das
inc
or
inc
into
outsb
push
mov
or
inc
fmul
arpl
mov
shll
push
outsl
shl
icebp
shlb
xchg
or
mov
imul
loop
pop
in
xchg
call
cmp
mov
xchg
movsb
mov
push
dec
mov
stos
inc
inc
shrl
rolb
dec
outsl
sti
fmuls
enter
nop
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
xlat
xor
or
push
jl
push
jge
inc
inc
mov
pop
and
sub
add
adc
lds
aad
mov
push
icebp
cmc
xor
out
je
xchg
adcb
and
xchg
adc
movsb
aaa
add
nop
sbb
mov
adc
pop
fmul
mov
jg
cld
int
div
pusha
mov
leave
adc
dec
pop
jne
and
ds
cmp
pop
jns
loopne
xor
sbb
sub
lock
jl
or
xor
cmp
mov
cmpsb
shl
sbb
push
sbb
dec
cs
aaa
mov
popa
imul
imul
or
cmp
push
mov
in
and
mov
fstpl
push
dec
inc
lods
les
in
mov
shlb
and
hlt
dec
bound
cltd
or
xchg
pop
mov
mov
dec
fwait
enter
mov
insb
fisubrs
daa
sub
aam
icebp
lock
test
pop
lret
popa
pop
outsl
insb
sbb
cli
outsl
rcrb
sbb
jnp
xorb
test
mov
sbb
std
lret
sbb
pop
fstpl
aam
popf
loop
lds
inc
jb
adc
cmp
test
adc
sub
mov
inc
popl
pop
push
inc
or
mov
leave
aad
pop
jp
jmp
sub
jne
and
sbb
dec
mov
addr16
mov
xchg
push
and
bswap
in
sbb
shll
jb
cltd
inc
jae
mov
lods
imul
or
or
pop
stos
shll
cmp
xlat
mov
jecxz
cmp
jno
fdivrl
jbe
je
idiv
mov
mov
mov
arpl
mov
jae
stc
or
or
int3
call
test
or
dec
adc
test
mov
lret
aam
xor
rcrl
cli
adc
lods
mov
rclb
cmp
outsb
icebp
bound
cmp
adc
pop
popa
xlat
insb
cld
repnz
pushf
mov
adc
iret
aam
pop
push
mov
mov
jne
adc
scas
cmp
mov
adc
add
dec
sub
dec
test
pop
aaa
and
aam
outsl
lcall
jl
sub
adc
scas
test
dec
pop
roll
cmp
stos
or
cmp
out
lds
pop
inc
daa
pop
inc
mov
mov
mov
pop
mov
inc
and
scas
nop
ljmp
mov
ljmp
pop
mov
cmpl
cwtl
fsin
add
jb
sbb
mov
xchg
dec
fadds
lret
fimull
out
sub
sahf
hlt
movntps
jg
mov
lret
push
jg
hlt
push
adc
dec
and
test
outsb
fisubrs
pop
cld
leave
jecxz
or
cld
jmp
sub
add
out
leave
xor
pop
push
pop
jns
push
ljmp
cmpb
xor
cmp
cmp
outsl
sbb
cmp
sub
pushf
aam
xchg
and
stos
test
insb
mov
scas
dec
sbb
adc
clc
test
xor
push
and
lret
jl
inc
rcrb
sub
movsb
test
leave
xor
movl
xchg
ja
cmp
xor
leave
lahf
sti
les
mov
rolb
js
adc
std
pop
cmp
ljmp
pop
push
idiv
out
fidivrs
aam
or
fiaddl
add
clc
gs
fiadds
movsl
mov
sbb
mov
enter
mov
sub
iret
out
addb
mov
xchg
mov
cltd
ret
std
hlt
pop
sub
fxch
dec
add
js
xchg
dec
test
fs
mov
xor
filds
xor
cmp
push
std
push
xchg
test
cmpxchg
or
mov
push
leave
jo
std
cmp
lock
mov
push
pop
push
jle
jge
mov
arpl
aaa
imul
stos
dec
jbe
xchg
mov
push
mov
inc
jo
in
inc
sub
mov
fmul
ret
sbb
xchg
jne
push
test
mov
insb
repz
cmp
ret
fninit
mov
cmpsb
aas
adc
adc
dec
popa
sbb
test
das
dec
sbb
inc
jno
fdivrp
insl
loop
jge
mov
sbb
cmp
mov
subb
pop
ja
loope
inc
std
push
dec
imul
imul
mov
pop
lret
out
int3
addl
push
dec
test
dec
andps
or
inc
lret
mov
cli
mov
adc
add
or
xchg
dec
aaa
sbb
push
add
jbe
neg
mov
mov
push
and
pop
mov
or
fcompl
cmp
jno
or
inc
sbb
sbb
and
icebp
pusha
inc
sbbb
mov
mov
xchg
cwtl
mov
test
popa
pop
popa
rcll
jae
in
out
sbb
jo
loope
clc
jb
clc
test
insl
adc
ds
in
inc
pop
out
outsl
sub
jb
in
rcrl
cmp
js
xchg
push
mov
mov
inc
sbb
mov
out
out
dec
repnz
mov
or
jle
pop
push
jns
jg
jns
loop
fcmovne
lock
in
pop
mov
arpl
fdivrl
push
mov
or
popa
mov
ljmp
mov
sbb
ja
inc
cmp
je
jns
push
adc
js
aam
sbb
shl
mov
lret
adc
outsl
sub
push
sub
leave
add
insl
mov
scas
jno
jle
jb
xlat
push
iret
and
xor
dec
out
test
enter
lret
setge
pop
and
cmp
add
out
cmc
incl
sub
insb
xchg
jb
or
xchg
jne
add
cld
cli
subl
pop
and
adc
mov
jmp
daa
aaa
loop
sahf
xchg
fbstp
mov
push
cmpl
cmp
dec
loopne
fs
imul
sbb
jge
push
cwtl
jp
dec
xchg
adc
xchg
lock
and
mov
jge
cld
imul
xchg
shll
ljmp
in
sub
xor
ljmp
js
xchg
out
inc
loop
aam
lock
popf
lret
mov
adc
aas
or
push
int3
out
jne
push
jmp
js
leave
mov
pop
sub
add
mov
out
in
dec
cmpsl
jp
out
into
or
das
xor
xchg
orl
or
jae
adc
mov
jbe
and
enter
mov
cmp
push
test
mov
popf
mov
adc
bound
push
loopne
dec
insb
or
and
cmpsl
dec
mov
and
mov
add
aaa
cmpsb
push
xchg
imul
add
in
inc
inc
or
stos
js
mov
jns
leave
and
jb
dec
ds
cmp
jp
xchg
or
sahf
mov
popl
fsubrs
inc
call
jno
inc
stos
mov
jns
nop
inc
mov
dec
xchg
mov
int3
mov
mov
jl
sbb
jmp
in
loope
fidivs
jl
ljmp
xor
pushf
mov
int
xor
sub
sub
cmp
bound
adc
lods
mov
pop
mov
dec
fists
test
out
cld
inc
lea
sub
add
or
pop
fidivrs
loopne
sub
movsb
adc
mov
or
fwait
jb
jae
sbb
inc
jbe
xor
mov
inc
and
push
push
sub
jmp
dec
xor
push
pop
push
pop
test
cmp
xchg
outsb
rep
inc
xlat
mov
pop
xchg
stc
test
fdivl
hlt
jae
mov
in
rorl
xor
out
outsb
or
push
les
dec
shlb
mov
mov
mov
pop
sbb
adc
ficoms
and
push
cmp
push
sub
mov
ljmp
out
xchg
loop
xor
scas
ljmp
rcrl
pushf
pop
out
js
adc
fisttps
rcrl
ret
jb
xchg
mov
push
or
movsb
xchg
and
and
xchg
cmp
xor
cmpb
mov
fwait
lds
loope
arpl
xchg
dec
daa
adc
xchg
mov
mov
mov
push
or
mov
mov
lds
cld
mov
out
insl
adc
outsb
mov
push
aam
cli
popa
cmpsb
mov
jb
shll
xlat
fdivrp
adc
sub
jge
add
hlt
xorl
outsl
out
mov
iret
popa
iret
jbe
mov
sar
sub
inc
adc
fisubrl
ficoms
and
jp
lcall
pop
jo
loopne
add
sti
push
clc
mov
test
push
mov
and
sub
mov
mov
outsb
das
adc
shrb
fmull
mov
test
mov
fmuls
fidivrl
add
icebp
lds
mov
rolb
sbb
mov
mov
adc
push
addr16
inc
test
adc
lods
stos
out
ret
fxam
scas
sbb
loope
xchg
adc
repnz
xlat
push
jmp
bound
adc
jl
xchg
cmp
mov
mov
inc
mov
icebp
sti
daa
sti
cmpsl
ffree
sub
fxam
xlat
mov
shlb
and
jnp
mov
cmpsl
ret
mov
xchg
stos
sbb
mov
call
roll
jne
sub
shl
js
std
add
mov
xor
gs
add
aaa
xchg
xchg
and
call
mov
fisttpll
loopne
mov
pop
push
lods
dec
mov
cs
push
sti
int3
scas
cmpsb
hlt
dec
xchg
and
push
dec
mov
push
gs
outsb
cmpsb
stos
out
xor
imul
mov
sbb
fsubrs
inc
sub
xorl
ret
push
insl
push
stos
sub
jmp
push
xchg
sub
loope
fadd
xchg
sbb
lret
jl
out
push
lret
sbb
jmp
and
les
mov
or
fwait
imul
mov
test
adc
sub
or
leave
data16
jmp
neg
outsb
imulb
gs
out
es
mov
fimull
icebp
outsb
fs
and
sbb
push
bound
mov
sub
addl
xchg
jno
sbb
hlt
adc
lods
jecxz
cmp
jo
and
lret
jbe
mov
outsl
xchg
xchg
mov
pop
leave
dec
or
fists
pusha
cmp
sahf
imul
xchg
and
insb
mov
mov
cmpsb
cmp
lds
fwait
lea
xor
cmp
cmp
repnz
adc
add
lahf
fistps
sub
lahf
mov
or
push
xchg
adcl
cs
dec
mov
mov
jne
lret
mov
pop
cmp
sti
sub
leave
mov
notb
inc
movsl
inc
les
leave
insb
mov
movsb
bndldx
pop
inc
stos
pop
subb
outsb
pop
adc
pop
cld
adc
decb
jg
xor
cli
ficompl
xchg
mov
push
sub
xor
call
stos
sahf
cltd
je
dec
push
addr16
imul
int3
inc
pop
push
dec
mov
leave
popf
sub
jecxz
inc
xor
jb
push
les
cltd
sbb
push
fmul
sub
clc
lahf
sarl
out
repnz
mov
arpl
adc
mov
mov
icebp
lcall
testb
mov
pop
data16
sbb
and
out
or
fmull
inc
test
cmpsb
out
push
inc
int
test
fbld
inc
out
pop
pop
scas
std
or
push
or
xchg
add
loope
mov
jne
lcall
scas
and
cs
or
jo
jge
aaa
fsub
push
mov
sar
adc
fbld
rcr
out
in
bnd
sub
mov
mov
cwtl
xchg
inc
pop
les
dec
or
mov
cmpb
or
mov
jnp
bound
shlb
or
xchg
mov
or
mov
mov
test
out
dec
jbe
sub
xchg
xchg
xchg
ja
lods
dec
mov
mov
arpl
xchg
movb
sbb
add
inc
xor
lcall
cld
iret
cwtl
push
out
add
mov
adc
mov
dec
xor
pop
daa
test
out
push
pop
inc
jo
imul
jmp
movsb
jo
repnz
mov
push
test
cmp
and
inc
pop
and
pop
dec
cmc
jo
lret
mov
inc
ret
lcall
mov
data16
inc
mov
mov
xor
and
push
mov
lods
es
out
sbb
jecxz
imul
jb
test
fwait
es
xchg
sub
js
jns
sbb
xchg
push
mov
hlt
sub
mov
sub
outsb
les
dec
mov
lock
les
inc
and
jmp
add
sub
mov
mov
stos
or
add
cmpsb
adc
icebp
fmul
cld
jmp
shr
mov
mov
test
movsl
leave
out
mov
je
xchg
cmp
out
inc
dec
pop
popa
xchg
dec
nop
fsubs
jecxz
inc
repz
inc
insb
ficoml
jle
in
dec
pop
sub
dec
mov
pusha
aas
stc
xchg
shll
cmc
pop
mov
lds
test
int3
sub
xor
inc
aaa
jp
das
fbld
aad
mov
scas
repz
lret
fwait
pop
iret
xchg
push
aas
adc
test
xlat
clc
jge
adc
inc
enter
mov
insb
loope
adc
mov
aad
imul
fdivl
lods
or
pop
mov
xchg
jp
stos
shlb
stos
mov
fimull
or
nop
adc
fdivs
dec
jnp
fcmovnb
push
inc
das
js
sub
adc
cmp
pop
mov
inc
imul
das
mov
inc
and
in
test
into
ficomps
addr16
pop
ror
sbb
daa
xlat
in
pop
or
adc
icebp
fsts
lock
fildll
xchg
push
inc
ficoms
inc
jae
xchg
adc
lods
mov
cmp
xlat
xor
in
inc
lahf
fs
lds
sbb
outsl
add
jno
mov
stc
pushf
gs
sti
or
cmp
idivl
mov
sar
push
jb
mov
call
jo
insl
cmp
js
sub
mov
push
sbb
mov
mov
cltd
sub
dec
out
push
jmp
add
int3
sub
loope
neg
call
adc
xchg
stos
and
pop
negb
pop
daa
xchg
jno
add
add
mov
push
frstor
movsb
mov
jg
dec
ret
pop
mov
popa
sbb
xlat
xchg
cmpsb
pop
imul
fsubs
outsb
in
fldcw
clc
xor
xchg
jg
mov
inc
in
cltd
lock
sbb
sqrtps
adc
pop
inc
idivb
xchg
out
cmp
pop
fists
test
add
and
sbb
jg
outsl
lea
pop
mov
cmp
enter
add
loop
in
loope
inc
mov
sbb
and
jmp
ja
mov
sub
jge
clc
mov
mov
stos
pushf
fs
test
cmp
jbe
xor
clc
stos
pushf
mov
add
pop
pushf
dec
pop
mov
cmpsl
ret
pop
test
or
mov
call
arpl
xor
jle
cli
cmc
test
aaa
sub
cmp
iret
sbb
aad
ret
adc
push
xchg
add
repnz
leave
scas
std
mov
inc
fbld
andl
ljmp
stos
fldenv
gs
int
out
sub
pop
mov
xor
or
hlt
sub
jne
dec
cld
xor
rolb
outsb
in
js
pop
ret
push
jo
jns
fstps
in
ret
and
jno
bound
lods
in
dec
mov
inc
sub
pop
xchg
dec
pop
mov
inc
int
jp
jp
popf
mov
pop
repnz
push
add
repz
ds
mov
lcall
hlt
test
sbb
push
mov
mov
dec
mov
mov
movsb
sub
sub
cmp
in
imul
mov
bound
lcall
lods
cmpsb
aad
lcall
push
test
pusha
aad
cmp
std
jbe
pop
popa
call
xchg
cltd
mov
mov
lret
adc
in
xchg
jns
pop
int
in
mov
andb
icebp
daa
data16
xchg
sti
cmpsl
fists
cmp
sub
aas
push
pop
cmpsb
add
adc
lea
sbb
add
cwtl
inc
aam
jne
jnp
inc
fidivs
inc
test
in
divl
or
inc
lds
call
xor
xor
test
lahf
xor
mov
mov
insl
je
sbb
pop
cmpb
outsl
stc
and
jnp
jg
pop
es
pop
les
sub
ret
ret
jg
sub
dec
push
aam
dec
js
jp
jbe
call
je
jp
inc
enter
aaa
lock
xchg
pop
jnp
push
popf
or
xor
sbb
mov
xchg
pop
jmp
mov
stos
aad
andl
decb
mov
movb
iret
mov
clc
in
outsb
push
pop
stos
dec
sbb
inc
push
mov
cmp
lcall
adc
jg
push
pop
lods
subl
push
in
xchg
or
xor
rcrb
fidivs
sub
cld
lods
mov
inc
insb
inc
movsb
ficompl
mov
arpl
add
xchg
adc
call
cs
inc
pop
mov
or
mov
mov
and
in
int3
ret
test
inc
fadds
push
inc
dec
rorb
sub
ljmp
jns
je
and
in
mov
cmc
pop
insl
push
mov
mov
add
and
pop
inc
add
mov
mov
jae
adcl
test
arpl
ja
pop
pop
sbb
or
sub
aaa
pop
jb
pop
pop
stos
push
test
pop
and
inc
xchg
or
rolb
shl
inc
in
adc
fincstp
cmp
inc
mulb
mov
inc
nop
push
adc
sbb
imul
nop
lods
inc
imul
add
mov
xlat
sahf
test
nop
sub
rcr
lds
mov
cwtl
mov
pusha
cmp
jp
mov
clc
std
dec
jo
aam
push
mov
mov
or
xchg
add
mov
mov
mov
mov
pop
loopne
jbe
enter
aam
mov
roll
mov
test
inc
repnz
xor
mov
in
and
dec
mov
mov
add
loop
jp
mov
jo
pop
cmpsb
pop
lods
pop
enter
negb
gs
lods
xor
in
mov
negb
es
push
pop
test
test
lcall
xor
or
sti
rcll
dec
mov
sub
and
fdivl
fnstcw
xchg
and
pop
popa
cwtl
add
aas
movsl
cld
add
lods
add
ljmp
mov
sahf
in
mov
lret
pop
xchg
mov
mov
out
mov
sub
mov
dec
or
aam
cmp
xchg
fldl
adc
xchg
jb
sub
scas
sbb
repz
or
call
shl
popf
cltd
add
jne
mov
mov
push
jns
lret
call
scas
sub
inc
popl
shlb
mov
lret
out
mov
jno
loope
push
loope
loope
out
ret
pushf
cld
out
jp
push
jg
data16
das
fcomp
data16
call
loope,pt
stos
adcl
xchg
cmp
sbb
in
mov
mov
popf
inc
inc
mov
aam
cmp
in
cmpsl
inc
cmp
xchg
pop
ret
outsb
testl
push
out
push
xor
fstpt
sub
mov
or
dec
adc
sarl
xor
test
test
imul
repnz
scas
sbb
shl
or
sbb
hlt
mov
jnp
add
in
inc
inc
iret
jl
mov
js
data16
test
mov
and
insl
stos
cmp
lea
sti
sub
ret
mov
mov
in
push
fs
jno
and
shll
fstps
mov
fld
fmull
push
stos
outsl
cmpsl
push
push
aam
jno
add
cmpb
icebp
in
or
cmp
bound
addr16
in
pusha
inc
add
jp
mov
or
outsl
enter
push
jg
add
and
sub
mov
mov
mov
repz
rcrb
inc
dec
or
or
jo
dec
cmp
leave
pop
ljmp
loopne
pop
es
add
insb
jnp
mov
mov
fadds
out
hlt
arpl
inc
fmull
and
sub
dec
sub
lods
mov
das
pop
int
nop
repz
mov
mov
in
aad
mov
add
es
pop
mov
test
dec
jns
pusha
cltd
push
jne
mov
daa
stc
loopne
xor
add
add
loope
scas
aad
movsb
sbb
loope
ljmp
sbb
leave
cs
test
ret
mov
out
mov
push
mov
push
aas
enter
push
stos
aas
sbb
mov
ds
mov
mov
enter
mov
outsl
bound
into
adc
stos
call
sbb
add
mov
and
pop
shl
inc
mov
addr16
mov
add
jb
js
mov
add
sti
dec
cwtl
fwait
iret
test
xor
xor
aas
loope
cltd
inc
pop
out
jns
imul
mov
scas
ret
addr16
pop
mov
add
icebp
or
ds
int
mov
out
mov
scas
leave
sbbb
ja
sub
push
mov
out
mov
sbb
xchg
lcall
pop
push
stos
xchg
cmp
jp
stos
cmpsl
sub
daa
fsubrs
in
or
imul
into
mov
pop
lret
inc
or
push
leave
push
ljmp
adc
dec
sbb
stc
mov
imul
push
mov
adc
xchg
stc
scas
lock
pop
adc
cmp
jo
pop
leave
mov
jle
jmp
xor
inc
adc
inc
or
nop
inc
pop
out
cmp
mov
or
lods
mov
mov
cmc
push
inc
movsl
cltd
dec
out
int
pop
test
loopne
loop
sti
dec
imul
rcl
and
xchg
xchg
imulb
inc
add
fs
dec
xchg
cmc
xchg
lods
xchg
mov
scas
xor
out
lock
push
stos
divl
fldenv
dec
xchg
mov
daa
push
out
pop
or
push
xlat
xchg
xchg
fcomps
sub
pop
mov
adc
jbe
jnp
jnp
ds
frstor
inc
add
xchg
scas
xchg
inc
inc
pop
out
pop
in
data16
lret
movsb
loop
aad
jne
neg
mov
dec
in
dec
or
mov
dec
or
sbb
and
dec
in
xchg
xchg
jns,pn
icebp
xchg
insb
jmp
stos
xor
or
jnp
lret
icebp
cmp
xchg
addr16
mov
nop
or
data16
dec
shlb
rclb
or
ret
xor
dec
ss
test
jbe
fcmovnb
imul
or
into
pusha
inc
ret
jbe
shll
jae
lea
add
fdiv
push
jmp
push
xchg
and
pusha
adc
sbb
cltd
dec
mov
sbb
daa
out
mov
sarl
jg
and
stc
sub
jmp
movsl
in
repnz
test
mov
daa
pop
aam
push
push
repz
rorb
outsb
sbb
movsb
movb
push
lds
adc
pop
in
pushf
aam
mov
adc
insb
adc
xor
xchg
xchg
loopne
dec
aas
mov
dec
xchg
pop
lods
push
jo
shrb
mov
cmp
pusha
xchg
mov
fmull
stos
jecxz
fistl
xor
fwait
inc
ror
or
outsl
lock
rolb
mov
scas
push
sbb
test
jle
or
xchg
sub
mov
or
inc
jb
stc
and
xchg
and
adc
add
push
test
sbb
jle
sahf
xchg
arpl
imul
dec
in
lods
and
loope
add
xor
sarl
test
fwait
subl
xor
lea
dec
adc
mov
push
mov
addl
adc
into
sbb
mov
cmp
jae
xor
pop
lret
mov
std
and
pop
clc
push
mov
jb
popa
in
lea
jno
lods
fsubrs
insb
xor
lea
out
sub
das
jo
inc
sub
sub
cmpsb
jo
cmp
push
and
inc
pushf
xchg
xchg
sbb
jne
inc
xchg
insb
dec
gs
jne
lea
imul
xor
mov
icebp
jp
jecxz
mov
movsl
dec
jo
xchg
daa
pop
insl
inc
psubb
inc
and
insb
inc
cmc
loop
lods
clc
jnp
pop
rcrb
nop
sub
in
fisubs
mov
xchg
sub
fadd
test
data16
mov
pop
lds
arpl
cli
cmp
aaa
cli
in
add
in
xchg
push
mov
sarb
sbb
sbb
mov
cwtl
in
add
dec
ret
aaa
mov
cmpl
mov
pop
xor
outsb
lahf
ret
push
mov
mov
push
jmp
sbb
fwait
bnd
mov
sbb
mov
clc
fs
xorl
dec
mov
ja
or
sub
push
dec
and
mov
mov
mov
lahf
cs
imul
in
jecxz
pop
sub
lds
push
ja
xchg
cmp
and
ret
fnsave
mov
xor
sub
sbbl
add
test
jns
lods
cmpsb
jmp
mov
or
js
add
in
pop
jmp
push
xchg
incb
movsb
mov
dec
xor
inc
dec
rcrl
cld
mov
movsb
ds
pop
jg
pop
push
sbb
or
and
into
in
dec
pop
xchg
adc
fs
dec
rep
adc
mov
cmc
jb
mov
mov
jae
test
sahf
fistl
into
fstps
ficompl
push
andb
jo
add
and
xor
jl
cmpsb
mov
xchg
pop
movsl
mov
and
and
mov
xchg
popa
pop
and
shll
aam
push
sahf
mov
out
inc
add
cmpl
into
push
mov
pop
mov
push
dec
mov
enter
mov
stc
sarb
cmp
mov
outsb
fdivs
sahf
mov
push
fsubs
fsubl
jne
jmp
jl
mov
adcl
mov
pop
pop
int3
sub
mov
outsb
adc
xor
das
popa
jne
mov
cld
pop
iret
dec
push
cmpsb
fs
mov
lcall
jo
xlat
ss
cmpsb
mov
dec
mov
vmovaps
sub
les
lock
mov
fistpll
or
pop
push
or
push
jmp
sbb
sti
push
mov
pop
sbb
dec
loope
in
dec
insb
jl
cmc
xor
jl
adc
subb
ljmp
das
xchg
push
or
mov
xchg
adc
pop
jb
popa
flds
xchg
in
and
daa
xchg
pop
and
cmp
negl
sbb
mov
cmp
mov
add
out
enter
dec
int3
adc
pop
mov
sub
cld
aaa
mov
dec
test
push
sbbl
nop
ja
mov
mov
mov
in
clc
les
loop
cmpsb
repz
or
shl
and
push
jg
pop
or
push
in
idivb
jb
wbinvd
out
push
cwtl
inc
cmp
sub
lea
xorb
aad
inc
push
loopne
adc
add
jg
cltd
mov
adc
dec
add
and
adc
cmp
mov
scas
jne
std
xor
push
inc
dec
inc
iret
or
data16
dec
jmp
out
rol
fs
jmp
out
ja
or
dec
jle
add
sbb
cmp
push
xchg
inc
outsb
jo
ja
sub
xchg
mov
xor
push
mov
jo
fs
cmpsb
je
xchg
aas
rcrb
mov
faddl
data16
loope
xchg
cmpsb
scas
sub
sub
clc
cs
jp
adc
outsl
xor
in
pusha
xor
fwait
stos
dec
leave
sbb
ret
aad
fsubs
les
outsb
hlt
or
sub
jne
mov
mov
mov
xchg
pop
clc
lods
sub
push
int3
sub
fnstcw
dec
popa
in
pop
bound
xchg
insb
sub
dec
and
push
int
mov
scas
call
iret
cs
adc
loop
cmpsl
hlt
jo
dec
mov
dec
and
mov
dec
xchg
mulps
std
cmpsb
iret
xchg
mov
int3
dec
cwtl
or
and
scas
fs
and
ss
daa
mov
lcall
push
das
mov
sbb
lret
xchg
adc
movsl
inc
and
adcl
fildll
xchg
lods
ljmp
pop
dec
ret
lahf
mov
jmp
shrb
or
test
or
jae
cmpsl
adc
push
lahf
in
gs
xchg
popa
ret
jns
ss
jmp
push
stos
mov
out
mov
and
jns
js
dec
jmp
ret
push
push
int3
xlat
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
fcmovu
sbb
cmpl
addl
das
int3
in
jne
sub
cwtl
pop
inc
cmp
mov
push
mov
insl
or
inc
ja
cs
out
ja
arpl
push
fcomps
es
add
outsl
lods
push
and
fnstcw
cltd
mov
xor
std
scas
movsl
out
inc
jo
push
push
test
mov
out
xchg
cmp
mov
jno
jp
or
xchg
idivb
in
mov
icebp
sarl
cmpsl
inc
cmc
xchg
fucomi
popf
dec
and
cmpsb
lea
test
jae
stos
fs
mov
sahf
ljmp
sti
rol
push
sbb
pop
cmp
fwait
pop
add
fld
pop
mov
int
cmp
pushf
frstor
jg
sbb
pop
cmpl
mov
and
cmp
jl
loope
out
or
pop
mov
pushf
bound
xchg
push
leave
insl
cmpsb
inc
es
xchg
mov
popa
xchg
dec
xchg
aaa
loopne
repz
aad
mov
adc
into
xor
lret
je
sub
xchg
cltd
xchg
xor
aad
rclb
mov
dec
push
cmp
mov
cmp
out
jns
ret
mov
cmp
adc
cmp
inc
mov
push
iret
insb
lcall
mov
xor
mov
sysexit
push
or
rcr
in
pop
xor
and
stos
divl
into
daa
mov
add
shll
lods
mov
cs
test
sub
pop
rorl
into
sbb
xor
loopne
mov
test
xor
push
mov
add
test
fcoml
inc
cmp
add
repnz
pop
data16
push
lods
push
inc
mov
pop
jp
pop
int3
jl
in
lret
add
loopne
jns
push
fwait
mov
mov
testl
mov
jmp
cmpsl
notl
cmp
jae
mov
sbbb
aaa
jne
dec
in
test
xor
jae
in
lahf
std
jno
lret
cltd
pop
sbb
push
dec
je
jg
lahf
ror
mov
mov
clc
aas
inc
adc
sets
fisubl
mov
loopne
arpl
mov
rcl
dec
pop
cmp
imul
sub
outsl
sub
ja
adc
push
pop
jne
push
pop
nop
scas
aas
or
xor
test
rclb
pop
movsb
mov
lods
fdivrs
jb
mov
repnz
and
sbb
adc
popa
inc
ss
dec
pop
jp
dec
mov
inc
xor
imulb
push
cltd
shl
xor
and
jb
add
adc
pop
ss
or
ds
sbb
mov
ret
mov
sti
inc
rolb
das
sub
jae
mov
xor
adc
imull
mov
xchg
xchg
jmp
adc
hlt
inc
fsubrl
mov
pop
insl
cmpsb
xchg
fldl
stos
inc
nop
movsl
mov
pop
mov
neg
sub
pop
mov
push
subl
ljmp
and
jae
and
js
jecxz
sbb
add
enter
mov
ljmp
mov
outsb
shl
push
movsl
jo
mov
sbbl
push
jnp
push
popf
xchg
jb
push
mov
xor
mov
jno
aaa
dec
pop
xchg
addr16
daa
add
leave
test
data16
lahf
clc
mov
fwait
adc
cmp
leave
push
sbb
mov
sbb
mov
sub
or
mov
outsb
cli
aam
or
jmp
mov
xchg
vmread
and
lahf
fisttpl
xchg
cmp
xchg
outsl
xor
mov
aam
outsb
imul
fistps
sub
rcrl
ja
sbb
ja
xchg
push
ja
push
outsb
or
jl
test
pushf
testb
mov
mov
ret
insb
imul
lods
xchg
add
pop
fldcw
cmp
stc
dec
fadds
cmc
loope
repz
dec
jae
mov
in
ss
sbb
push
xchg
and
fcoms
out
ss
adc
call
jb
cmp
cmp
jns
mov
jg
inc
mov
in
push
lea
and
pop
call
sub
adc
int
icebp
pop
jmp
fsubp
xchg
cmp
inc
mov
and
pop
mov
loope
stos
dec
test
insb
test
subl
add
pop
bound
loopne
push
mov
cmpb
jo
sub
jo
or
out
les
je
dec
loope
xor
pusha
daa
das
adc
push
pop
sub
push
mov
dec
daa
mov
add
xor
insl
dec
and
cmc
jge
jmp
leave
push
xchg
lcall
rolb
lods
daa
add
add
decl
js
int
xor
push
ret
push
push
inc
pop
sbb
out
jbe
call
pushf
jb
in
xchg
xchg
arpl
scas
mov
outsl
imul
out
inc
adc
pop
movsl
mov
in
xor
cmp
stc
in
fstpl
fisttps
and
sti
jno
xchg
in
hlt
stos
mov
stos
loope
pop
mov
mov
sbb
lods
and
cmpsb
cmp
or
jo
adc
sub
sub
jne
push
je
cmp
jae
mov
std
or
test
movsb
adc
jnp
or
mov
push
dec
lods
pop
mov
clc
sub
and
sub
loopne
or
fldcw
ljmp
xchg
aas
mov
or
mov
xor
inc
or
aad
lcall
mov
sbb
in
adc
and
stc
fs
dec
mov
xchg
inc
sbb
push
pop
mov
ljmp
ret
dec
fistpll
jmp
add
or
dec
cwtl
lret
and
loop
scas
inc
push
iret
mov
fcmovnb
or
ficompl
enter
xchg
xor
and
mov
and
ja
dec
mov
loop
std
shrb
push
or
cs
and
dec
push
add
movb
mov
outsl
shrb
stc
sub
sbb
jl
push
stc
iret
and
push
ljmp
into
stos
scas
lock
pusha
xchg
ret
xor
mov
mov
inc
xor
loopew
mov
iret
xchg
cwtl
pop
inc
imul
jmp
movsl
push
cmp
int3
pop
fdivs
jp
mov
sbb
sti
inc
dec
cli
add
mov
pop
movsl
mov
in
mov
stos
test
add
xor
mov
cmp
ljmp
and
xchg
mov
jmp
jns
mov
jle
push
lcall
push
sub
hlt
and
test
cltd
and
leave
push
xor
and
ret
and
push
sub
nop
cld
shrb
sub
imul
mov
inc
outsb
loopne
jbe
cmpsl
cltd
mov
jnp
outsl
lods
inc
lods
data16
scas
dec
push
idivl
push
mov
push
in
jmp
mov
in
fwait
sub
and
addr16
shl
cmp
adc
adc
fnstcw
popf
or
shlb
xorl
xchg
jo
push
dec
out
arpl
sbb
xor
xor
pop
fimuls
xchg
dec
or
daa
movsb
repz
push
std
cmpsb
and
je
cltd
mov
lcall
mov
mov
jno
ljmp
stos
pushf
add
adc
mov
shlb
mul
cli
cmp
lods
add
test
sbb
sbb
mov
test
test
xchg
lods
in
jo
fldt
stos
fcmovb
adc
mov
hlt
out
pop
lods
cmp
imul
push
cld
fcomps
jns
mov
mov
jno
js
jmp
adc
sbb
cmpsb
xchg
neg
pop
stos
fs
idivb
gs
jg
sub
jns
mov
and
test
xor
lods
mov
mov
add
arpl
xchg
or
scas
push
mov
bound
mov
sub
insb
jl
adc
addr16
sub
mov
mov
fs
push
xchg
ds
rclb
add
xchg
jb
movsl
sbb
xchg
call
jo
es
and
aaa
push
xor
pushf
out
ljmp
cmpsb
imul
repz
xchg
dec
dec
gs
dec
sahf
lret
sahf
sbb
mov
stos
gs
jle
push
push
mov
jmp
adc
mov
adc
or
mov
loope
mov
aam
or
test
outsb
cwtl
pop
add
push
ficompl
jo
stc
mov
insl
popa
cltd
fnstsw
fisttpll
hlt
outsb
jmp
insl
aaa
mov
ss
xor
xchg
cmp
sub
cmp
pop
xor
loope
cmp
and
xchg
jmp
test
jmp
mov
adc
mov
cwtl
xchg
push
inc
loop
out
popf
ds
mov
jg
enter
xlat
mov
popa
add
push
in
hlt
jecxz
fs
aad
mov
fdivs
push
mov
call
ja
adcl
cmpb
imul
mov
add
shrl
xor
add
hlt
jno
mov
stos
pop
inc
inc
or
xchg
inc
push
movsb
xor
outsl
add
rorl
sub
enter
pop
cmp
add
loop
fistps
and
pop
js
and
movsl
scas
mov
int3
out
orb
sbb
pushf
push
decl
loope
shl
adc
hlt
pop
mov
inc
in
mov
xor
xor
xor
mov
lret
in
ret
jne
in
fisubrs
inc
pop
rdpmc
push
vmread
jp
movsb
xor
divl
sbbb
lea
sbb
into
push
jg
nop
jmp
dec
sub
or
scas
jbe
inc
jmp
in
ja
fstpl
adc
lret
and
adc
xlat
fidivrl
inc
push
pop
mov
pop
or
push
dec
pop
fwait
lds
jp
jno
mov
dec
mov
rolb
aad
leave
pop
xor
or
popf
cmp
and
xor
xor
jg
outsb
and
inc
mov
lahf
test
out
les
pushf
pushf
rcll
xchg
inc
sub
fwait
addr16
jecxz
pop
sbb
decl
mov
js
shll
mov
sbb
shr
push
fs
push
outsb
and
xor
loopne
dec
mov
lods
rcr
cs
jno
push
roll
mov
rcl
xlat
and
add
and
cltd
or
push
mov
popf
jecxz
fisttps
ds
mov
idivb
out
xor
mov
fmuls
cmp
lret
or
adc
and
inc
cmp
sub
adcl
je
std
shlb
cmp
popf
ds
test
testl
push
mov
lds
out
mov
aas
jg
mov
std
xor
test
xchg
insl
loop
jno
pop
push
push
jge
test
cmp
popf
loope
and
sub
xchg
pop
mov
or
scas
add
shr
movsb
pop
mov
in
jae
jb
or
mov
jnp
mulb
ficomps
add
shl
inc
cmc
cmpsb
int3
idivb
or
xchg
lret
add
jp
sbb
test
jnp
aaa
pop
or
cltd
dec
test
mov
push
fwait
jg
cmpb
xor
pop
fidivl
dec
insl
mov
sbb
fisubs
and
insb
jp,pn
pop
push
pop
inc
mov
out
xlat
mov
inc
pop
xor
push
pop
cmp
icebp
jno
aaa
stos
fdivl
dec
hlt
inc
cmp
loopne
shlb
mov
mov
int
iret
shr
jns
jns
mov
arpl
enter
add
test
movsb
mov
xchg
ljmp
in
int3
or
cmp
mov
pop
lahf
aaa
mov
decl
jae
sub
repnz
mov
fcomps
imul
push
dec
ja
das
pop
loop
xor
mov
mov
jo
push
hlt
gs
clc
das
pop
aaa
insb
loope
lret
push
fucomi
rorl
sbb
push
into
fwait
pop
shlb
movsb
stc
adc
dec
aas
icebp
adc
mov
test
shll
stos
or
imul
xor
stos
mov
pop
rcll
out
dec
cmp
test
inc
aad
mov
jnp,pn
xchg
add
mov
lods
add
bound
lods
inc
push
pop
aas
jle
pushf
cld
sbb
outsl
adc
add
adc
jno
push
add
mov
rcrl
repnz
jecxz
cmpsb
in
imul
fists
add
pop
testb
outsb
sti
mov
add
jg
push
xchg
sub
repnz
jbe
leave
inc
out
ficomps
push
xchg
stc
lahf
or
xchg
fdivrp
ja
xor
mov
test
mov
int
add
lahf
xchg
xchg
jns
fisttps
stos
inc
add
sbb
scas
sbb
add
ror
jmp
popl
dec
dec
xor
jge
inc
or
in
jecxz
or
jbe
lea
bound
inc
lcall
dec
xchg
mov
sub
xor
xchg
pop
and
mov
jle
push
sbb
shlb
xchg
bound
mov
imul
cmp
nop
or
mov
arpl
xlat
into
andps
sahf
fdivrs
andl
mov
pop
pop
testb
and
leave
call
insl
pop
lods
or
cld
leave
cs
cmp
hlt
mov
adcb
push
xor
mov
inc
sub
push
repnz
rcll
pusha
sbb
fildll
sub
push
inc
cmp
mov
mov
pop
xor
rcr
adcl
sahf
clc
rcll
and
cmp
sti
addb
aam
je
mov
mov
push
adc
adc
xor
es
push
fisubrl
shll
sub
push
ljmp
xchg
jg
insb
cli
xor
stos
push
sbb
mov
popa
testl
adc
xor
push
cmp
les
cli
cmp
dec
inc
xchg
int3
out
mov
mov
adc
arpl
incb
add
inc
cmc
lret
mov
lcall
sub
push
in
xor
hlt
push
push
or
mov
push
xchg
mov
inc
rolb
pop
test
mov
mov
in
jle
sti
add
icebp
adc
jp
mov
aaa
outsl
lea
insl
in
int3
in
mov
das
test
cld
inc
xor
outsl
int
jge
xchg
xchg
mov
xor
cmp
imul
fdivrl
adc
cwtl
push
jnp
mov
cmp
mov
mov
mov
xchg
nop
or
and
mulb
fistpll
cmp
test
jns
inc
test
repz
rcl
leave
jne
out
ljmp
out
xor
inc
cmp
addr16
xor
or
shr
loopne
bound
mov
xor
sahf
and
mov
dec
ds
bound
sbb
push
cmp
push
push
mov
dec
fistpll
pusha
mov
dec
addr16
sub
mov
js
adc
push
dec
aaa
cmp
xchg
dec
sbb
fwait
out
cli
ss
mov
mov
and
std
scas
ret
mov
jle
scas
lcall
xchg
pop
sbb
fsubp
jge
mov
scas
loopne
sbb
shll
pushf
aam
mov
loope
repz
jmp
jp
pop
mov
jne
in
dec
push
mov
lret
jno
add
mov
ret
cmp
fdivp
ficoml
mov
cltd
mov
stc
sub
test
cmp
mov
outsl
fcoms
stos
pushf
cwtl
mov
ss
or
cs
pop
mov
shrl
mov
int
jle
fidivl
stos
add
xor
xchg
pop
test
cs
mov
push
sub
cmc
or
cmp
jecxz
lahf
adc
or
jnp
mov
push
std
sub
and
cmpsl
arpl
xchg
mov
pop
hlt
cli
and
sub
gs
sbb
and
pop
cmpsb
sub
sbb
out
dec
shl
mov
lock
mov
mov
xchg
rol
subl
fstpl
icebp
rorl
pusha
pop
mov
aaa
jns
push
std
cmp
push
mov
call
aas
scas
push
or
fnstcw
mov
push
call
ficomps
mov
mov
test
icebp
cltd
jno
mov
sarb
xchg
call
fsubrl
lret
or
iret
cwtl
pop
sbb
push
je
cld
mov
or
xchg
cmp
adc
mov
int3
and
inc
inc
jb
xchg
popf
mov
inc
orl
rol
push
xchg
dec
xchg
push
cld
mov
aaa
mov
or
hlt
fsubrs
pop
fdivr
sub
fists
push
xchg
mov
shrb
gs
sub
aad
movsl
out
andl
sub
sub
pop
mov
cmp
dec
loope
xorl
fisttpl
shll
int
mov
lods
mov
rolb
jle
scas
lcall
jl
enter
les
pop
jmp
cwtl
imul
shl
test
ret
out
or
fstps
dec
or
gs
mov
pop
inc
xorl
stos
cmp
sbb
mov
cmpsl
fildl
rcll
push
std
dec
fwait
inc
test
xchg
mov
cmp
in
push
adc
pop
loope
mov
fimuls
xchg
bnd
mov
jbe
add
stc
pop
lods
jg
push
mov
das
xor
lret
cwtl
pop
fisttps
pop
lea
mov
lock
into
shl
adc
bnd
ja
pop
out
xchg
in
loop
fnsave
and
rorl
push
js
mov
mov
mov
xchg
ret
cmp
add
loop
pop
mov
xchg
push
jae
and
dec
mov
add
push
jnp
pop
mov
fs
dec
xor
mov
pop
fadds
repz
ljmp
cmc
lods
ss
loopne
pop
not
push
popa
aas
out
add
push
jmp
jae
sub
outsb
test
pop
scas
mov
popf
or
popf
icebp
or
jp
xchg
xor
or
fs
mov
cmc
mov
jo
mov
fwait
push
mov
cltd
pop
scas
addr16
xor
js
lahf
adc
mov
dec
in
push
mov
or
dec
outsb
stos
fildll
int3
sbb
push
dec
fcmovnb
pop
xor
xchg
xchg
jnp
dec
dec
mov
dec
jle
or
mov
dec
add
pop
insb
inc
inc
fstps
testb
movsl
pop
jnp
pusha
push
adc
data16
clc
or
test
cmp
repnz
movl
test
cmp
cmpsl
pop
int
lock
adc
in
or
and
xor
test
and
adcb
mov
inc
xchg
sub
test
sub
push
sub
pop
inc
mov
or
mov
call
jbe
or
stos
cmp
push
out
mov
cmp
add
mov
xor
fistps
movsl
and
xor
mov
lret
sub
cwtl
sbb
mov
cmc
pop
jg
arpl
icebp
cmp
pop
inc
mov
mov
mov
lods
and
ret
rorb
outsl
or
xor
lret
fiadds
sti
xchg
adc
xor
andb
adc
cld
test
shll
push
xchg
lock
int3
lods
push
mov
iret
repnz
cmpsl
xchg
add
arpl
xchg
inc
mov
andb
mov
jecxz
cs
pop
stc
push
cwtl
popa
fildll
rep
xchg
cmp
or
imul
nop
adc
enter
test
stos
xchg
dec
fdivrs
scas
xchg
insb
xlat
jb
lret
lds
or
push
and
sarl
adc
add
adc
fists
insb
push
popl
and
sbb
pop
daa
fwait
test
sub
lcall
add
dec
in
test
cs
std
pop
and
push
jecxz
or
lret
imul
adc
or
jne
idivl
xchg
inc
data16
fbstp
mov
sub
ss
jp
push
sbb
xor
push
addr16
or
mov
xor
shl
xor
aam
xchg
leave
daa
enter
lret
sub
pop
and
push
sub
icebp
sbb
mov
push
inc
sub
pop
cmp
cmp
ja
int
pop
outsl
mov
dec
or
gs
or
jo
xchg
sar
lock
dec
clc
stc
divl
push
cli
push
sbb
fmull
mov
insl
mov
mov
sbb
mov
repnz
hlt
push
ss
push
pushw
add
rorb
xor
and
mov
mov
mov
dec
jo
mov
or
dec
insb
push
rcr
sub
xchg
int3
dec
xor
fmull
jmp
mov
pop
jl
mov
repnz
imul
iret
ficoms
xchg
xchg
sub
cmp
lmsw
xchg
mov
adc
stos
add
dec
je
mov
adc
dec
sub
dec
push
sub
or
mov
insb
inc
cmp
test
sbb
jb
xchg
push
iret
or
cltd
cmc
cmp
mov
andb
jmp
lods
aas
nop
adc
shrl
mov
pop
xchg
push
lods
and
int
pop
lds
mov
add
jb
arpl
in
sub
daa
pop
jne
and
hlt
cmp
mov
and
push
cmpsl
ret
adc
pop
in
sbb
iret
and
push
shr
adc
rcrl
push
mov
and
enter
clc
dec
xor
adc
mov
cwtl
xchg
out
add
xor
ljmp
rcr
jge
push
push
push
fwait
or
cmpsl
stc
cmp
aas
divb
sub
xchg
jb
loop
xor
or
fcompl
adc
push
mov
and
add
xchg
pushf
stos
ds
popf
push
adc
cmpsb
mov
imul
mov
push
mov
or
xor
push
loope
xchg
das
sbb
std
dec
xor
movsl
andl
pop
cwtl
and
push
jmp
insl
mov
and
xchg
movsl
mov
cs
pusha
dec
xchg
mov
das
psubsb
aad
jbe
addb
cmovbe
add
jg
push
pushf
or
test
cs
mov
pop
fwait
shlb
loopne
push
inc
inc
outsb
out
incl
roll
aam
push
jbe
jo
jb
sbb
or
jl
lahf
sahf
mov
jno
push
adcb
cmp
movsl
xchg
fsts
xchg
bound
or
pop
fisttpll
xchg
out
pop
lcall
sbb
lods
nop
lds
cmpb
xchg
mov
fcoms
or
rorb
mov
mov
rcrb
lcall
ret
enter
icebp
pop
jmp
stos
adc
inc
maxps
sbb
cmpl
fdivl
xchg
out
or
xchg
cld
fwait
js
push
cmp
daa
loop
or
dec
fdivs
je
daa
loope
add
pop
adcb
loope
scas
mov
pop
gs
jp
clc
std
mov
push
jmp
out
aas
aad
stc
push
imul
push
rorl
dec
insb
fwait
dec
fisttpl
stos
imul
sbb
test
fsubrp
fwait
and
dec
jl
and
jo
push
dec
mov
bound
cld
insb
xchg
jnp
aad
rorb
dec
inc
fisubs
sbb
dec
add
push
fwait
adc
sub
mov
test
scas
shlb
mov
ret
daa
scas
mov
gs
or
ret
mov
sub
popa
shrl
mov
mov
fcomi
dec
clc
and
add
scas
call
push
inc
or
out
pop
fcmovnu
or
add
lret
sub
jns
xchg
cmpsb
or
fwait
lcall
xor
repnz
jmp
adc
adc
push
test
inc
sahf
push
push
subl
mov
sub
lcall
push
int
add
int
sbb
mov
xor
ja
xchg
sbb
sbb
gs
stos
bswap
pushw
push
xchg
jo
repz
mov
mov
pop
movsl
inc
mov
lret
mov
sub
or
ret
repnz
out
adc
fwait
pop
sub
negb
cmp
popa
movsb
idivb
push
inc
push
ror
jae
mov
push
lds
outsl
pop
jo
xchg
dec
js
fistl
inc
into
or
cli
inc
adc
out
or
rcrl
jl
xchg
push
incb
sti
cmc
jb
and
pop
xor
xor
jbe
dec
add
inc
std
outsl
dec
add
cld
inc
jl
push
insl
inc
fcomp
xchg
ljmp
loopne
sahf
or
adc
enter
jns
cmp
sbb
loop
dec
sbb
jl
ja
mov
ss
icebp
xor
adc
popa
add
push
cld
dec
and
sub
rorb
sbb
mov
sarb
mov
mov
out
push
sar
cmp
dec
xchg
je
mov
sbb
sub
cli
jle
daa
or
lahf
in
in
sbb
cmp
inc
xchg
mov
outsb
addr16
inc
jmp
cmp
rorb
mov
or
out
jo
aaa
outsl
xor
fdivrs
and
rorl
cmpsb
cmpsl
jnp
popa
test
sbb
or
rorl
std
inc
outsb
xor
imul
sti
mov
fsubr
adc
push
fisubrl
lock
mov
out
int3
test
push
push
lock
aad
je
xor
inc
mov
xchg
pushf
xor
in
jo
xor
movsb
push
incl
pop
daa
push
jno
fldcw
popf
cmpsb
cs
inc
adc
nop
or
lds
jno
pop
mov
xchg
sbb
jnp
xchg
push
sub
in
add
xor
fistpll
lds
push
push
int
lds
inc
adc
and
xchg
xchg
ljmp
xchg
rcll
mov
adc
xor
and
ret
jmp
add
pop
push
inc
xbegin
jno
mov
or
repnz
sbb
out
jno
adc
in
sub
mov
dec
adc
out
inc
add
mov
mov
jl
clc
xor
pop
and
ljmp
push
dec
cmp
out
test
mov
pusha
inc
into
dec
mov
jns
xchg
add
clc
repnz
cmpsl
shlb
sbb
sbb
insl
call
pop
test
movb
inc
pop
test
imul
pushf
fisubs
sub
or
lea
ljmp
jp
and
or
push
push
hlt
jle
icebp
pop
in
sbb
lock
cmpsb
jnp
pop
leave
jae
das
jecxz
arpl
clc
hlt
adc
pop
lret
push
cli
and
out
push
loopne
lret
push
loop
rcrl
jo
dec
sbb
inc
bound
jns
add
jno
push
jnp
add
cmpsl
xchg
xlat
je
mov
and
cmpsl
mov
loopne
xchg
xor
inc
out
ljmp
stos
pop
lods
das
push
test
pushf
push
sub
shr
dec
jmp
insb
adc
jne
mov
jmp
cmp
push
and
mov
aam
mov
aaa
and
sub
dec
faddl
push
fs
lret
mov
test
add
cs
sub
ljmp
sbb
inc
lods
adc
push
popa
jne
testb
mov
cltd
fistl
cmpsb
mov
jno
jg
mov
mov
decb
popa
ss
or
sbb
mov
sub
pop
cmpsl
xor
sub
dec
test
cltd
adc
or
jmp
cmpsb
imul
lcall
faddp
cmpl
mov
or
out
sbb
fnsave
pop
ret
out
dec
pop
jmp
jns
lods
rcrb
jb
ret
sbb
sbb
filds
push
fsubl
mov
int
iret
mov
call
mov
outsb
pushf
jbe
cmpsl
lea
movsl
dec
inc
movsb
push
lcall
inc
pop
cs
push
jge
push
shll
test
cmpb
and
mov
add
inc
xchg
xchg
imul
test
and
jp
xlat
imul
add
out
scas
xchg
push
int
clc
push
imul
stos
insl
adc
cwtl
cmp
mov
aas
cmp
dec
xlat
pop
movsl
dec
in
push
mov
andb
inc
inc
mov
push
xlat
out
or
adc
idivb
std
movsb
std
js
mov
mov
cmpsl
cmp
jbe
or
subb
mov
pop
cmp
sub
orb
popf
cmp
mov
sub
jmp
xchg
sti
clc
sti
inc
arpl
sbb
lods
fsubrs
sub
xchg
outsb
addr16
dec
inc
je
outsb
dec
mov
pop
sahf
jbe
cmpsl
bound
sbb
sbb
stc
or
testb
jecxz
inc
adc
jnp
sbb
jmp
sbb
push
mov
and
inc
xor
test
xchg
rcrl
xchg
jp
loope
push
sahf
pusha
push
movsb
push
lret
sti
add
dec
bound
inc
iret
dec
mov
cmp
clc
sbb
push
dec
jge
int3
cmp
mov
mov
mov
jge
push
fsubs
mov
into
sar
repz
leave
lods
xor
push
add
sub
cmp
and
iret
repnz
pop
mov
cmp
cld
push
dec
dec
sub
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
or
nop
xor
addb
or
add
cli
adc
aam
push
into
inc
adc
sarb
mov
movsb
pop
mov
or
push
inc
adc
add
sub
cmp
or
xchg
pop
mov
int
add
cmpsl
lcall
and
outsl
shll
or
xchg
xor
pop
imul
sub
sti
mov
adc
out
mov
and
int
stos
jae
xchg
xlat
mov
cmp
ret
repnz
inc
fsubrl
je
mov
xchg
aad
imul
lret
std
or
sub
lret
mov
rolb
xchg
push
push
lods
ljmp
sub
or
jb
cmp
xor
mov
sti
pop
pop
rcr
mov
adc
test
sub
jl
add
jle
mov
and
xor
test
xchg
int
fstpt
cwtl
repnz
bound
arpl
pop
out
out
imull
out
and
inc
stos
pop
lahf
xor
addb
pop
jo
xchg
enter
cli
pushl
inc
cmp
cmp
bnd
mov
jl
insl
fwait
push
fs
cli
xchg
mov
pop
and
dec
jae
fiaddl
or
lea
push
ret
jbe
loopne
xchg
cwtl
xor
popa
or
xchg
pop
mov
xchg
lds
icebp
shrl
pop
mov
adc
lahf
xor
pop
pushf
mov
cwtl
adc
sub
pop
fdivs
dec
mov
adc
aas
inc
insl
xor
out
mov
fbld
push
mov
in
xorb
mov
lods
aad
push
or
push
push
dec
cmp
sti
cli
sbb
sbb
sub
xor
push
ret
inc
cmc
mov
cmp
sbb
mov
arpl
sub
dec
sbb
cmp
jecxz
dec
push
mov
lds
iret
adcb
mov
xlat
add
loope
sbb
negl
repz
lods
or
xor
in
adc
into
sahf
push
adc
xor
in
and
sub
lods
clc
mov
imul
pop
fldl
push
adc
scas
push
sbbb
cmp
push
sub
xchg
fcoms
out
lods
and
lods
inc
adc
xchg
sbb
or
sbb
mov
scas
inc
cs
clc
lods
comiss
cmp
pop
or
lock
pop
ret
fdiv
aaa
mov
add
icebp
ja
dec
jae
dec
out
cmpsl
stc
xchg
jb
fdiv
mov
adc
or
push
jmp
mov
lock
inc
inc
mov
das
xor
pusha
addr16
cwtl
inc
lods
push
jo
inc
xchg
xor
jle
adc
jo
jns
push
test
inc
loope
loop
sahf
mov
rcr
dec
aaa
push
insl
sub
add
int
and
push
xor
in
popf
in
fsts
pop
sub
mov
shll
test
jmp
fwait
popf
lahf
scas
dec
fldl
cmc
loop
ljmp
rorb
ds
lods
test
popa
xor
movsl
scas
mov
enter
xor
xchg
push
dec
mov
and
pop
dec
mov
test
fbstp
xchg
jmp
das
sbb
xchg
repnz
xchg
mov
push
iret
jbe
sub
cmp
jno
subl
les
jecxz
mov
movsl
or
sub
les
sahf
orb
mov
repz
jne
dec
cmp
pop
mov
cmpl
in
aaa
add
cmpsl
sti
adc
lret
push
jl
pop
sbb
shll
mov
jp
xlat
xor
mov
ss
cmpb
cld
fists
pop
into
adc
dec
xlat
call
fsub
out
sub
fcoms
and
mov
sarl
dec
cmpb
mov
sahf
pcmpeqb
jmp
popa
mov
cmp
jno
jbe
push
mov
and
cltd
lret
insl
push
les
aam
xchg
and
mov
pop
movsb
cs
cli
jl
or
leave
cmp
mov
mul
mov
xchg
fwait
imul
test
jg
push
lods
pop
stc
push
stos
jle
jg
mov
mov
addps
int3
xor
sbb
adc
scas
xor
jle
adc
dec
mov
insl
cmp
icebp
push
add
icebp
mov
dec
es
mov
jecxz
cmp
dec
addb
rolb
sbb
xchg
inc
insl
mov
test
jp
aam
les
add
and
xor
lret
int3
add
add
pusha
ficoms
pop
xor
push
movsl
jo
add
loope
lahf
arpl
xchg
gs
dec
mov
mov
mov
push
les
cmp
mov
xchg
test
inc
cs
fisubl
test
inc
mov
adc
push
xchg
aad
sub
repnz
pop
fmul
xor
or
xchg
push
mov
xchg
inc
dec
and
out
cmp
test
jb
jno
jmp
fimull
mov
stc
or
popa
stos
test
sbb
mov
cmp
aas
fisubl
cmp
and
and
or
loop
adc
push
mov
cmpsb
cmp
xchg
dec
in
cltd
cs
test
shr
and
xchg
jo
mov
xor
cs
add
sbb
cmpsl
clc
push
inc
xchg
push
gs
aam
jae
cmp
mov
jmp
lret
cmp
out
sub
lcall
inc
ds
pop
and
nopl
lret
testb
cmp
cmp
and
or
out
pop
lret
scas
xor
cmp
arpl
push
adc
xchg
jmp
fistpll
sbb
popf
add
outsb
add
daa
pusha
push
push
and
loop
push
xor
fxch
out
sbb
sub
stos
into
push
dec
and
pop
sbb
push
sbb
aam
imul
xchg
out
adc
mov
adc
mov
das
call
shll
cmp
aam
adc
sbb
mov
inc
sbb
cmpl
loop
ja
out
or
fcomi
in
repnz
out
test
sbb
dec
pop
negb
jecxz
out
push
iret
lcall
mov
mov
scas
out
hlt
adc
pop
mov
push
pop
dec
jl
dec
xchg
jl
test
pop
mov
adc
loope
jl
jb
rcll
icebp
shll
jecxz
push
mov
rolb
ja
cwtl
xor
mov
aad
jg
sub
sahf
pop
ljmp
ds
jg
pop
jle
scas
imul
cli
add
mov
inc
hlt
cmpsl
xorb
xor
mov
shlb
popf
mov
rorb
aam
mov
test
ret
and
cmp
ja
sub
jae
xchg
mov
ja
add
loope
in
pusha
adc
jg
xlat
jge
imul
push
test
imul
pusha
add
and
xor
push
je
push
arpl
shrl
push
je
pusha
out
pop
mov
rorb
pushf
and
mov
popf
mov
and
xor
jl
jmp
sbb
xorl
loope
lahf
cltd
adc
push
nop
loopne
sub
pop
dec
rcrl
loopne
dec
pop
cli
adc
add
xor
sub
je
fwait
push
xor
cmp
mov
dec
inc
negb
imul
into
sub
cmp
sti
cmpl
rorb
stos
in
out
popf
cli
test
push
sub
test
insb
mov
movsl
pop
or
jle
inc
shlb
mov
xchg
outsl
inc
dec
inc
into
in
hlt
jns
xlat
aad
pop
shlb
cld
adc
daa
pusha
test
xchg
int
mov
cmpsl
jecxz
popf
jb
enter
shl
fwait
mov
test
and
cmp
mov
or
bound
push
sub
cmc
xlat
or
fnsave
sbb
call
ja
inc
loopne
into
aaa
mov
jg
cmp
outsl
adc
mov
xchg
enter
jb
stos
mov
hlt
out
gs
pop
test
cmpsl
cmpsb
jno
xlat
push
sbb
push
push
rclb
sub
dec
push
sbb
mov
pusha
inc
fs
cmpsl
lods
loope
ret
jns
xchg
sahf
dec
popa
mov
jmp
iret
in
testl
aas
popa
dec
jecxz
arpl
inc
cmp
fs
push
mov
jp
ror
addr16
scas
mov
lahf
mov
lcall
dec
stos
scas
ds
movsl
push
push
add
pinsrw
push
adcb
sub
jbe
out
sarb
push
js
push
pop
dec
and
or
hlt
or
adc
push
add
inc
dec
lock
hlt
and
push
sub
inc
int
aas
je
xchg
or
jb
mov
scas
push
inc
mov
push
mov
push
adc
lret
cmp
lahf
mov
cmp
ret
add
mov
jb
fistpll
dec
cmp
jp
popf
pop
stos
sub
cmp
pop
loop
jmp
nop
sub
add
je
shl
adc
test
adc
inc
mov
insl
aad
shlb
repnz
adc
lods
xrelease
pop
hlt
divl
stos
or
fildl
adc
movb
mov
daa
mov
cmp
add
call
ret
push
rcl
inc
dec
jnp
push
outsl
sbb
cld
lods
mov
sbb
sbb
pop
cmp
test
pop
aaa
cmpsb
push
call
pop
xor
xlat
filds
pop
out
scas
out
or
lods
pop
mov
sub
xchg
inc
xor
xchg
dec
mov
xlat
jecxz
ret
sub
dec
gs
into
cmp
mov
das
insb
cmp
fistpl
jl
push
sub
aad
cld
fst
jmp
popf
popa
ljmp
stc
js
xchg
bound
jl
adc
ja
pop
jnp
adc
or
mov
shll
push
divb
test
xchg
repnz
sbb
mov
adc
mov
and
popa
lock
mov
call
or
jno
test
xchg
loope
sub
rol
push
xor
and
loop
sti
hlt
lock
je
pop
mov
divl
scas
add
jbe
sbb
push
out
mov
out
adc
and
push
cmp
jecxz
addb
xlat
repnz
movsb
push
pop
mov
adc
pop
stos
aaa
insl
mov
xor
cli
jge
nop
add
push
subb
mov
fcoml
xchg
cmpsb
stc
cltd
xchg
dec
idiv
mov
mov
jl
imul
xchg
rcll
sti
iret
jmp
ds
jge
jno
insl
cmpsb
movsl
xor
jbe
push
inc
imul
or
in
imul
enter
mov
imul
lea
cmp
jno
inc
and
bound
loop
arpl
add
bsr
das
mov
sbb
lahf
in
lea
sahf
or
nop
xchg
loop
adc
mov
and
scas
xchg
dec
mov
xchg
fmull
cmpsb
fists
test
lahf
js
fisttps
rorb
lods
push
sbb
add
push
jbe
lret
dec
inc
mov
gs
jo
push
add
movsb
stc
jae
inc
dec
mov
arpl
mov
mov
cmpl
rclb
adc
out
and
mov
outsl
fwait
lea
repnz
fnstenv
push
enter
clc
aas
and
push
nop
pop
inc
imul
test
pop
mov
repz
in
scas
sbb
iret
mov
mov
cmp
mov
jae
in
push
sub
fsubs
stos
sti
mov
cmp
adc
adc
mov
push
ja
imul
and
xchg
scas
inc
test
pop
stos
aad
loop
sbb
out
mull
repz
mov
dec
imul
lods
mov
inc
insl
and
mov
mov
les
addr16
fisubl
cmp
mov
sbb
fs
xchg
xor
nop
or
in
hlt
adc
push
js
pop
pop
mov
push
sub
xor
xlat
test
leave
je
or
or
and
mov
adc
mov
test
enter
jle
imul
mov
out
addr16
and
rcrl
call
push
xchg
cmp
xchg
xchg
flds
jecxz
pop
roll
sti
sub
and
orb
pop
inc
sub
ret
insb
jle
aad
ljmp
adc
movsl
push
dec
popf
cmpsl
add
and
mov
xor
mov
pop
jmp
pop
test
or
push
add
or
push
sbb
in
mov
shrl
push
fs
mov
xchg
sbb
push
in
xor
xchg
nop
fdivrl
or
jbe
imul
or
data16
pusha
lcall
xlat
imul
arpl
xchg
lret
inc
pop
cmpsl
lcall
leave
xor
lret
jns
stc
clc
mov
int3
and
or
and
outsb
cltd
xor
gs
cmp
sbb
ficompl
fnstcw
js
scas
pop
test
jp
mov
fistpll
xor
inc
rclb
cmp
leave
jg
mov
add
mov
cmp
in
dec
jmp
fwait
sarl
xchg
cmpsl
insl
dec
sbb
stos
pop
ja
mov
push
scas
jge
cmpsb
mov
jp
cltd
jne
ficoml
out
xchg
out
orb
mov
jb
cmp
sbb
lods
cmp
cmpb
lods
mov
lods
jns
or
das
inc
out
add
lea
fisubrs
pop
cmp
icebp
fcmovne
bswap
push
xchg
test
insl
int3
sub
orl
sub
loop
push
mov
jno
push
inc
jmp
and
lret
jp
push
xchg
out
in
or
movsb
fbstp
daa
cmpsl
gs
inc
adc
jecxz
stos
dec
mov
mov
add
pop
shrl
pop
jl
jnp
das
imul
pop
push
add
fisubrl
imul
repnz
nop
push
in
xchg
andl
dec
pop
push
aad
mov
imul
fbld
imul
adc
cli
cmp
add
cmp
adc
push
clc
lret
fnstcw
or
mov
in
sbbl
cmpsb
cmpsl
and
in
pop
or
or
pop
or
and
pushf
add
xchg
daa
mov
mov
fs
xor
xchg
scas
add
cmp
ja
push
gs
adc
mov
mov
lret
adc
xchg
int
mov
mov
push
call
mov
or
adc
sub
xchg
mov
jnp
adc
inc
iret
push
int3
dec
loop
cmpsb
lahf
xchg
mov
shlb
or
test
addr16
pop
push
sahf
dec
adc
dec
xor
push
mov
out
mov
push
sub
jge
pop
mov
mov
jg
out
pop
movsl
dec
xor
sub
mov
jmp
lods
jmp
leave
xor
mov
test
or
rcrb
out
push
mov
cmp
hlt
enter
push
cmpsl
test
mov
ljmp
gs
movl
sti
out
xor
sub
mov
into
jmp
cmp
sarb
aam
push
push
sub
sbb
mov
insb
pop
stc
xor
loopne
ret
cld
imul
xchg
and
push
inc
jo
jns
pop
xchg
mov
ret
gs
repz
arpl
in
add
dec
and
cmp
ja
shl
lahf
inc
lods
xchg
aas
sub
or
enter
daa
sub
fwait
cwtl
mov
jae
int
push
xchg
mov
aad
xchg
cmpsl
dec
jle
jmp
add
std
jl
or
in
das
push
mov
loop
scas
push
inc
pop
int3
les
hlt
shll
jmp
jnp
mov
arpl
push
bound
sub
call
sarl
pusha
pop
ss
dec
xchg
jp
and
leave
scas
rcrl
call
in
cmp
push
xor
xor
rcrl
fstpt
jp
ficomps
push
push
repz
xchg
or
cltd
push
cmp
loope
jb
test
push
mov
adc
pusha
and
dec
or
mov
lock
test
out
push
adc
xlat
aas
sbb
cltd
call
lds
ja
pop
sbb
lahf
mov
pop
inc
and
xchg
or
jo
xchg
rclb
sbb
jns
shlb
loop
movsb
cmp
and
leave
xchg
imul
loop
cmp
xchg
hlt
xchg
mov
imul
cmp
das
lcall
jo
inc
test
test
in
data16
push
jae,pt
insb
inc
dec
xchg
rorb
stos
movsb
cltd
mov
test
int3
in
int3
mov
add
add
xor
jbe
sbb
mov
mov
mov
mov
mov
dec
jno
xchg
inc
cli
mov
sarl
cltd
jl
push
jecxz
shrb
data16
xor
or
adc
inc
std
mulb
popa
or
cmp
fstps
or
xchg
jecxz
sti
testb
repnz
orl
test
push
inc
movsl
lods
adc
mov
mov
sbb
lret
pop
scas
jmp
inc
jle
dec
cmp
movsb
daa
jmp
test
push
dec
lret
push
mov
xchg
mov
mov
adc
imul
stos
or
and
fisttpl
lahf
cmp
cmp
outsl
or
dec
add
pushf
andl
scas
sti
adc
xor
fidivl
andb
xor
rcrl
cmp
xor
xorl
shlb
outsl
jg
xlat
std
add
bt
xchg
mov
bound
jbe
jmp
dec
cmp
loopne
mov
cmpl
fnsave
adc
aam
jno
enter
xchg
addr16
sarl
adc
in
sti
jge
push
xchg
inc
repnz
xchg
sbb
es
imul
sub
mov
mov
movsb
mov
xchg
push
repnz
in
out
lret
out
and
and
xchg
or
mov
jnp
push
dec
sub
clc
push
ja
sbb
xchg
cmp
add
jecxz
mov
mov
fstpl
roll
push
jae
cmpsl
inc
mov
ret
push
test
lods
push
inc
imul
in
or
inc
sbb
mov
mov
das
pop
fcompl
push
pop
scas
stc
lret
scas
insl
inc
mov
inc
dec
scas
hlt
mov
xor
das
movsl
fs
pop
loope
hlt
movsb
or
insl
adc
mov
adc
push
mov
inc
xor
cmp
cli
cwtl
lcall
loopne
push
lahf
push
xchg
jmp
xchg
cmp
mov
out
sahf
iret
popa
xchg
sbb
pop
mov
mov
push
add
fbld
cmpsl
jl
jp
notb
push
adc
out
mov
fdivrl
push
adc
clc
shrb
inc
adc
mov
pop
js
jne
mov
adc
cmpsb
clc
mov
fidivrs
push
xchg
loopne
add
ljmp
xchg
and
hlt
sti
inc
gs
sub
mov
es
aaa
sarl
adc
mov
cmp
cmp
in
mov
inc
push
cmp
sahf
mov
push
sar
pop
sahf
mov
add
jae
int
mov
mov
adc
dec
push
lods
pushf
cmpsl
push
add
jo
push
loope
js
and
scas
fidivs
subb
bound
xchg
and
adc
mov
fisubs
add
jg
push
inc
movsb
popf
ja
or
sarl
dec
and
out
mov
insl
hlt
xor
inc
imul
inc
ljmp
aaa
add
mov
outsb
sahf
adc
roll
sbb
xchg
add
cmpsb
inc
lods
in
pop
dec
xor
lds
fcomps
cmp
shlb
sarb
lds
js
xchg
ficomps
in
add
aad
pusha
dec
mov
gs
je
mov
test
mulb
xor
jmp
pop
mov
push
ljmp
fcomi
push
and
add
cmp
test
mov
cmp
or
push
mov
es
sub
in
cmp
add
mov
addr16
mov
dec
and
imul
aaa
inc
fprem1
insb
inc
in
lods
ret
jl
pusha
and
jl
das
sahf
inc
sub
in
and
cld
sub
and
mov
push
push
xchg
sub
xor
xchg
iret
int3
cmpsb
jnp
sub
jbe
add
dec
inc
pop
popf
mov
shll
xchg
inc
fdiv
jle
imul
mov
add
jp
cmp
adc
add
iret
data16
aas
jg
fscale
enter
jg
test
scas
dec
xchg
shrb
adc
aad
fst
or
mov
aaa
aad
aaa
sahf
arpl
adc
mov
repz
movsb
std
mov
mov
cmpsb
fnstsw
sbb
cwtl
pop
pop
ror
mov
jp
pop
stos
js
add
inc
pop
pop
fwait
cmpsl
mov
and
cli
stc
in
pushf
inc
mov
add
imul
cmp
sub
js
fs
jo
mov
add
adc
jnp
ljmp
jl
add
adc
rcrb
mov
pop
ret
sahf
lods
aaa
sbbb
dec
push
imul
fs
cld
mov
dec
fsubs
mov
fisttpll
insl
xor
jl
fs
xchg
xchg
jmp
mov
push
push
and
push
das
mov
sbb
adc
repnz
adc
push
sbb
and
cmp
fimuls
or
addr16
xchg
dec
idivb
pop
adc
test
add
inc
pop
aas
cld
jo
pop
cld
sub
xchg
jbe
int3
xor
jae
inc
scas
cld
and
shrl
sbb
mull
in
imul
mov
iret
cltd
lock
iret
and
xor
mov
jbe
stos
insb
ret
dec
xor
sbb
outsl
mov
imul
xchg
push
pop
push
pop
jecxz
loopne
pop
jmp
adc
movsb
mov
imul
xchg
pop
mov
stos
or
enter
popl
out
or
xlat
or
xor
out
leave
data16
popf
dec
clc
std
lcall
scas
andb
push
loope
or
xor
jecxz
mov
into
cltd
daa
mov
aaa
cmpsb
and
cmp
clc
push
push
scas
jg
cwtl
add
push
push
add
cmp
inc
push
xor
testl
test
in
push
mov
movsl
or
in
xchg
lret
dec
dec
pop
xchg
mov
inc
sub
push
jae
lds
pop
leave
cmp
push
inc
push
lea
xchg
in
push
jl
xchg
lea
push
mov
dec
sbb
mov
sarb
mov
inc
pop
jp
pop
int
pop
loop
mov
or
lods
xchg
and
scas
cwtl
insl
lods
push
jno
dec
pop
xor
push
cmpsb
aaa
xor
xor
adc
lods
cmc
mov
push
repnz
sbb
lds
push
idivl
lret
es
sub
out
xchg
push
jle
or
lods
xor
arpl
mov
cs
ljmp
mov
stos
andl
ljmp
in
xor
enter
cmc
decb
push
vmread
in
pop
xor
enter
xor
fdivrl
shlb
sbb
test
xchg
dec
dec
mov
dec
mov
daa
adc
nop
xchg
mov
mov
insb
inc
and
cmove
push
pop
cmpsb
sbbl
loopne
or
scas
mov
mov
push
enter
out
mov
mov
sbb
add
daa
xor
gs
mov
jle
outsl
hlt
enter
push
scas
xchg
pop
inc
clc
addr16
mov
xchg
adc
add
dec
push
shll
jp
test
or
je
hlt
add
adc
and
fucom
cmp
outsl
scas
loope
pop
dec
pop
cmp
mov
aam
mov
fs
mov
imul
in
jmp
push
scas
xor
scas
add
icebp
xor
sbb
popa
int3
push
ffreep
loopne
mov
repz
mov
push
mov
and
je
mov
cli
cwtl
popa
bnd
mov
xchg
cmpsb
scas
jecxz
and
sbb
mov
pop
hlt
jae
mov
push
mov
xor
outsb
mov
test
gs
int3
mov
xchg
mov
and
insb
in
dec
ljmp
or
xchg
mov
fsts
mov
mov
fisttps
popf
lea
fisttpl
jae
or
jne
test
pushf
mov
test
or
lock
mov
jmp
lahf
sbb
outsb
ss
cmpsb
mov
sbb
jbe
or
xchg
nop
mov
add
insl
pop
insb
fsubr
adc
in
add
insl
out
jmp
repnz
inc
and
ret
pop
testl
pop
aas
cmp
dec
adc
sbb
nop
sub
mov
xchg
jo
stc
mov
mov
mov
test
stc
inc
mov
xor
or
clc
sub
in
dec
popa
sub
mov
das
aam
push
dec
mov
lahf
in
mov
test
std
pop
rorb
lock
mov
xor
stos
stos
cmp
sub
pop
les
cld
insl
jae
mov
cld
inc
lds
push
lods
jae
cmp
roll
repnz
ja
push
cmpsl
and
std
mov
test
insl
xchg
dec
mov
push
mov
cmp
inc
dec
add
stos
mov
jmp
or
sbb
sub
adc
pop
xchg
mov
stc
push
test
dec
rcl
or
sbb
pop
and
jge
xchg
xchg
ljmp
fcoml
fcompl
dec
adc
add
cmpsl
cmpsl
aaa
cwtl
push
xor
jle
dec
inc
shl
and
cld
xor
pop
ja
jecxz
and
repnz
inc
pop
push
cmp
dec
jp
fdivrl
dec
cli
loope
std
cmp
icebp
ljmp
jl
lods
jb
xor
test
mov
adc
jne
stos
push
outsb
mov
out
cmp
repz
sarb
lcall
lods
or
cmp
and
cmp
sub
sbb
es
push
es
dec
xor
dec
jl
in
icebp
into
push
mov
stc
subl
cld
scas
add
push
jns
or
mov
mov
inc
ret
in
or
xchg
jg
mov
add
popf
je
sarl
ss
jb
ret
aad
int
out
imul
xor
mov
mov
jo
mov
mov
shrb
inc
ds
outsl
data16
cs
test
ret
call
scas
fiaddl
ljmp
mov
test
dec
outsb
jo
push
roll
pop
in
rcrl
jb
clc
cmp
lods
mov
mov
andl
or
and
and
mov
mov
xchg
xor
out
js
mov
fstpl
sbb
pop
inc
xorl
xchg
pop
insb
in
into
cltd
pop
and
pusha
and
push
jmp
or
jl
das
inc
adc
adc
jno
cmp
ds
cmp
inc
bound
jecxz
icebp
xlat
push
je
inc
nop
lret
in
imul
ds
mov
repnz
cs
pop
lcall
jge
and
xchg
add
jno
fldl
push
jp
inc
or
bnd
add
insl
int3
sbb
add
imul
jae
and
fwait
ss
rorb
js
mov
popf
dec
or
std
mov
pop
cmp
loop
sbb
push
scas
cmp
xchg
mov
pop
nop
adc
pop
aas
aad
std
xchg
sub
add
lret
or
hlt
out
test
std
jbe
cmp
jbe
dec
and
cs
pop
sbb
pop
mov
push
push
movsl
adc
pop
je
inc
inc
mov
pop
xlat
movsb
cwtl
adc
or
inc
inc
mov
push
push
xlat
sub
dec
pop
in
xor
imul
push
loop
adc
lock
or
vmovq
xchg
add
scas
or
sub
inc
pop
cmp
push
jp
mov
movsl
cld
and
movsb
xchg
fsts
pop
mov
adc
xor
test
jle
cmp
pop
stos
aas
mov
pushf
scas
sbb
ljmp
pop
jmp
cmp
out
inc
jge
inc
pop
pop
loope
and
mov
dec
lahf
insb
dec
add
cmp
shrl
xor
lcall
call
insb
sbb
inc
fldl
dec
cmpl
pop
mov
addr16
push
jmp
or
pop
insl
sbb
inc
mov
jle
sahf
fdivl
popf
cmc
xchg
push
jns
rclb
mov
pop
sti
pop
daa
sarb
out
fstpt
mov
sbb
sub
loop
nop
jb
or
cwtl
inc
xchg
cs
inc
cmp
mov
cmc
rclb
push
jae
mov
mov
fs
daa
cmp
std
mov
cltd
xor
icebp
add
lret
mov
inc
jae
adcb
loope
jno
xlat
shrl
mov
mov
pushf
and
addl
mov
cli
xchg
cmpsb
pop
push
loopne
cmp
sub
cltd
clc
cmp
ficoml
push
sti
or
ss
call
in
mov
push
sbb
mov
jns
stc
mov
hlt
fcomps
xchg
xchg
idivb
add
mov
dec
inc
jns
out
ljmp
fwait
dec
jb
lds
push
repnz
xchg
add
mov
iret
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
jmp
adc
incl
adcl
popf
inc
and
add
sbb
push
insl
dec
inc
mov
sti
jo
push
xor
push
pop
push
mov
sub
jge
push
subl
jne
pop
nopl
mov
mov
aas
ja
mov
adc
mov
and
dec
pop
cs
stc
bound
pusha
mov
shlb
mov
sub
insb
mov
jecxz
mov
aaa
int3
add
mov
mov
adc
pop
pop
jne
rol
cmp
iret
out
aas
mov
or
inc
pop
imul
xchg
andb
mov
jae,pt
out
dec
push
aas
add
ret
lea
pop
pop
and
mov
dec
mov
cmp
sti
pop
cli
test
jnp
stc
push
in
adc
sub
pop
cmc
ja
sub
shll
add
jecxz
cmp
xor
iret
scas
mov
lahf
aaa
pop
sarb
pop
aam
int
in
addb
rcr
push
andb
lret
push
movsl
aad
mov
xchg
xchg
stos
out
andl
xor
push
shrl
imul
or
outsb
dec
jmp
test
das
push
ss
cmp
fwait
jmp
lahf
dec
sub
cmp
call
xlat
int3
fimuls
ljmp
jl
xchg
mov
sub
push
mov
clc
jp
ds
clc
orl
or
out
push
out
sub
jo
icebp
xor
or
addr16
shrb
add
push
repnz
mov
adc
pop
mov
outsb
pop
jl
push
shll
or
sub
adc
call
push
cmpsl
adc
jle
jp
outsl
movsl
cmp
xchg
cmp
addb
mov
aad
icebp
push
sbb
inc
or
jge
push
mov
stos
cld
jmp
testb
loop
push
cmp
cmpsb
xchg
in
arpl
jmp
mov
cwtl
call
xchg
push
pop
cmpb
test
jo
or
inc
mov
loop
or
add
jl
pop
cmp
xchg
mov
push
jmp
mov
and
inc
lea
jns
aad
xchg
sahf
cmp
mov
sbb
cli
lahf
jle
pop
lret
rcll
repz
aad
or
xchg
mov
mov
mov
jae
dec
ja
ds
pushf
lock
jne
scas
xchg
pop
inc
cmpsl
cli
mov
fcompl
pop
and
inc
xchg
sub
cmp
and
jl
inc
rcr
lods
repz
clc
lret
and
lea
iret
ja
fwait
xor
les
adc
mov
test
dec
ror
jg
xor
cltd
adc
pop
add
pop
xorl
js
in
mov
sbb
jns
ret
mov
adc
nop
xor
and
push
and
iret
cwtl
sti
cwtl
mov
adc
dec
sbb
xorl
adc
in
clc
push
shll
lods
lds
imulb
xlat
jecxz
fbld
mov
fldt
adc
out
xchg
loop
mov
sbb
sub
dec
cmp
iret
iret
push
mov
ss
les
push
sbb
jbe
shr
sbb
call
in
dec
mov
addr16
mov
mov
adc
mov
ja
loopne
jne
inc
pop
mov
xchg
jbe
imul
aam
sbb
inc
shl
mov
rol
test
or
insb
adc
pop
dec
insl
mov
les
insl
into
sub
sti
ror
cmp
enter
mov
cmp
xor
sti
jg
cld
cmp
jne
clc
jecxz
fimull
adc
scas
out
mov
mov
cmp
push
adc
cmp
or
or
and
xor
andl
fdivrs
xchg
sbb
cli
lods
mov
jns
cld
push
scas
jle
mov
aam
outsl
add
je
sub
into
test
mov
ja
adc
les
dec
inc
emms
std
jne
mov
add
jns
mov
add
adc
les
sbb
orps
fisttps
mov
xchg
leave
in
int3
pop
popa
mov
stos
pop
sub
cltd
mov
jnp
rcl
cmp
insb
xor
fisubs
dec
cmc
lock
loopne
lds
adcl
cmp
test
ljmp
mov
pop
fnstcw
push
add
xchg
jae
mov
loopne
aam
xlat
inc
xchg
cmp
xchg
or
jmp
cmp
insl
jmp
insb
sub
daa
das
xor
fistl
mov
inc
les
scas
cmp
into
lret
pop
push
imul
shr
mov
xchg
sbb
test
cmp
xchg
or
nop
adc
push
lds
fsubs
jge
sarb
or
or
aaa
shrb
in
lahf
pusha
mov
xor
mov
xchg
in
mov
mov
cmp
imul
jmp
imull
xchg
in
dec
mov
scas
clc
xchg
sbb
inc
jp
xor
fdivp
jle
adc
pop
insb
outsb
mov
insl
loopne
shll
mov
outsb
xor
pop
lods
ss
clc
push
and
fisttpll
aam
sub
sahf
incb
sbb
and
xchg
jbe
and
popf
cmp
xor
nop
or
jecxz
pop
sbb
xor
mov
cwtl
mov
fstl
in
fs
ss
jb
mov
mov
cmp
cmp
ja
cmp
fimuls
add
mov
pop
mov
jl
push
push
sub
and
fbstp
dec
div
lahf
mov
mov
add
imul
cmp
sarl
cmp
repz
int3
out
inc
adc
in
adc
inc
int
xchg
mov
push
lock
push
sbb
cltd
jge
or
jg
enter
pop
mov
jp
sbb
xchg
pop
lahf
cmp
fmuls
dec
gs
out
rorl
popa
and
pushf
daa
push
pop
cld
push
frstor
andl
xor
sbb
in
out
adc
lock
iret
clc
sbb
add
lret
fs
loop
or
add
stos
adc
insb
rorl
xor
xor
in
fmulp
shlb
and
fs
testl
cmp
mov
js
cld
sub
mov
imul
int3
adc
data16
in
push
sbb
cmpsb
or
insl
test
les
add
pop
pop
mov
fwait
dec
ja
cld
mov
insb
in
flds
movsb
cld
fdivrs
ss
jg
cmpsb
or
push
xchg
mov
cwtl
cmpl
push
push
pop
lock
mov
xchg
stos
daa
push
sbb
push
xor
dec
adc
imul
int
sbb
scas
shl
gs
cmpl
dec
cmp
push
adc
aaa
rcl
xchg
sub
cs
jne
out
mull
xchg
call
mov
mov
repnz
dec
inc
dec
pusha
add
cmp
fistps
loopne
mov
scas
out
imul
push
gs
or
sub
loope
mov
ret
inc
or
inc
test
fidivl
inc
ret
test
int
jns
inc
insb
sub
daa
xor
jmp
inc
nop
jne
lods
fcoms
fnstenv
cmp
jbe
mulb
and
fstpt
sub
or
scas
pop
rol
push
push
sub
in
jbe
pop
push
mov
xchg
fwait
mov
mov
push
in
cmp
int3
sub
pop
cld
pop
aas
adc
mov
pop
stos
inc
lea
sbb
or
imul
or
repz
mov
stc
push
pushf
inc
cmp
das
cmp
inc
lods
pushf
pop
push
xor
lcall
or
rorl
pop
pop
popa
xor
adc
jnp
out
inc
inc
int
add
xacquire
int3
push
jg
icebp
cmp
dec
pop
lahf
add
dec
mov
dec
das
dec
repnz
adc
lahf
mov
inc
ret
push
sub
je
mov
push
add
xor
push
mov
addr16
adc
outsl
adc
in
bound
cs
inc
js
ss
je
mov
cmovo
or
inc
mov
aaa
adc
pop
mov
jmp
in
sbb
push
sub
std
shrb
es
sbb
mov
ss
or
iret
mov
sbb
test
push
or
sbb
sub
add
push
pop
push
xchg
out
push
jo
je
rclb
dec
add
sahf
lahf
pop
inc
pusha
pop
aad
or
lds
arpl
faddp
xchg
pop
add
aad
cmp
add
int
out
fwait
mov
adcl
stos
jmp
sub
stc
stos
out
inc
push
popf
and
aam
and
test
xchg
sbb
out
pop
pop
mov
loop
test
das
aas
call
scas
rclb
js
hlt
xabort
xor
test
mov
dec
pop
dec
sub
into
push
mov
adc
cmpsl
adcb
sub
addr16
inc
loop
icebp
adc
jl
or
lret
or
pop
mov
or
enter
pop
jmp
out
out
xor
or
dec
repz
imul
imul
lds
shr
adc
mov
test
push
and
lods
loopne
mov
shrb
ss
sbb
cmp
sarb
jl
inc
test
ret
mov
shrl
add
mov
jo,pt
fnstenv
cmp
outsl
mov
mov
in
decl
test
loopne
movsl
je
pop
arpl
xor
repz
das
sbb
push
in
pop
and
ss
or
cmp
push
cmp
sub
xor
mov
inc
xor
add
xchg
lahf
nop
lock
add
leave
pusha
fld
cwtl
jge
daa
pop
mov
loope
enter
xchg
inc
jl
dec
scas
cmp
stc
in
stos
loop
rorl
and
fwait
mov
lock
cmp
jle
mov
jmp
or
mov
push
ljmp
mov
test
loop
mov
mov
or
out
in
daa
lcall
mov
out
push
pop
imul
aaa
mov
xor
shlb
lds
jg
dec
add
addl
adc
stc
mov
lcall
xor
out
push
push
popa
jg
xchg
shl
ss
xor
push
pop
or
cmp
stc
cmp
aas
jbe
dec
pop
push
pop
shll
cmp
fldcw
lods
rolb
das
pop
sbbl
mov
rorl
lcall
dec
addb
int
mul
jp
inc
mov
cmp
lcall
add
cmc
clc
lods
adc
enter
inc
add
add
ret
mov
sbb
je
ljmp
push
dec
call
shrl
addb
iret
xchg
scas
dec
int3
in
dec
inc
and
out
dec
mov
pop
leave
data16
adc
enter
mov
sub
clc
mov
inc
dec
aam
fsubr
dec
imul
inc
jns
pusha
pop
lods
fstps
xchg
cmp
mov
xor
out
mov
pop
icebp
lcall
scas
stc
lret
xchg
mov
sub
and
cmpsl
mov
sbb
push
pop
in
mov
mov
fadd
push
movsb
sbb
xchg
dec
aaa
push
xsavec
jmp
aas
rcrl
in
mov
ret
sbb
mov
mull
inc
add
aad
xor
push
mov
xor
in
mov
xchg
xchg
int3
aas
mov
pop
mov
insl
mov
push
int
scas
inc
pop
and
push
push
iret
jmp
ljmp
sbb
popa
dec
push
adc
lahf
mov
rcr
jne
aam
inc
ss
inc
cwtl
adc
add
mov
xchg
test
ret
mov
rolb
lods
scas
mov
sub
ret
or
inc
push
mov
push
xorl
mov
mov
pop
xor
cmpsb
insl
xor
fucomip
sbb
loop
stc
in
mov
repnz
sbb
daa
and
sarl
cmp
pusha
sbb
push
lea
andl
out
cs
xor
call
or
mov
mov
in
adc
fnstcw
daa
cmp
stc
jge
in
lret
push
mov
ret
mov
xchg
insb
jl
add
mov
in
movsl
enter
insl
push
imul
in
pushf
jae
lods
daa
ja
mov
andl
out
xchg
push
xor
fptan
ds
jns
ret
sbb
adc
push
add
jle
or
cmp
ds
sbb
cmpb
sub
or
fnstcw
addr16
js
push
mov
jg
sub
sbb
dec
jne
push
or
sbbl
mov
pop
mov
in
pop
xor
sub
test
dec
adc
mov
jno
add
lods
hlt
sbb
or
test
notl
imul
fdivs
mov
lea
popf
mov
mov
jne
inc
xchg
xchg
jns
pusha
ljmp
jne
xchg
dec
jle
pop
pop
lds
icebp
testb
into
mov
mov
adc
xorl
cmp
add
jb
mov
popa
frstor
sbb
push
xchg
stos
pop
in
sub
fs
push
mov
mov
mov
xchg
dec
xchg
dec
shll
cvtpi2ps
sub
sbb
loopne
rolb
adc
cmpsb
xchg
xchg
pop
and
cmpsb
aam
or
testl
pop
or
stos
stc
leave
mov
mov
ljmp
sub
mov
mov
scas
int
cmpsb
xor
mov
ljmp
and
scas
mov
xor
xchg
nop
cmp
icebp
nop
cmp
dec
mov
loop
mov
stos
pop
std
movsb
cltd
sub
xor
adc
jne
int
daa
ljmp
and
sbb
fsubs
and
std
adcl
inc
mov
pop
jne
dec
fcoms
dec
mov
pop
ss
mov
sub
push
iret
packssdw
xchg
enter
test
jmp
out
or
sub
push
jp
cmpb
stos
stc
aaa
jne
pop
adc
mov
push
mov
jl
sbb
lods
mov
cmp
jnp,pt
and
xchg
stos
not
popa
push
jnp
xlat
outsb
in
jg
in
xchg
dec
xor
mov
push
fstpl
iret
inc
fdivs
jp
xchg
cmp
mov
rcll
sbb
xchg
add
jns
jns
out
test
lods
cli
es
jns
mov
pusha
ljmp
mov
mov
in
mov
scas
mov
fcmovu
aas
or
xor
sbb
addr16
popf
jge
cmc
shl
cmp
je
jmp
push
dec
add
das
cmp
pop
sar
push
adc
fcomps
adc
xor
in
cs
mov
aas
lcall
out
lock
enter
out
jl
call
dec
repz
mov
push
adc
daa
cmp
cmpsl
cs
shrl
push
mov
stos
mov
pusha
jmp
pushf
rol
out
inc
xor
and
add
xor
dec
adc
test
mov
push
jb
outsl
xor
push
push
mov
iret
pop
repz
pop
adc
icebp
and
sbb
rcpps
or
dec
sti
and
cmp
orb
jnp
mov
nop
outsl
xor
mov
dec
cli
jns
xchg
test
cmpsb
pop
shl
mov
fsubrl
push
ficomps
sub
xor
popf
pop
inc
out
repz
test
outsb
fisubl
dec
movsb
push
cmp
in
xor
out
xchg
jle,pn
dec
test
and
jmp
mov
jmp
xchg
aam
out
in
push
and
js
je
scas
mov
xchg
add
mov
loopne
sti
divl
outsl
mov
shlb
aam
jb
movq
divl
int
aad
lahf
aaa
pop
fstps
dec
sub
dec
mov
sub
cmpsl
mov
jp
push
insb
push
fisttps
repnz
dec
lock
add
and
frstor
sub
or
nop
dec
adcb
jecxz
pop
in
aam
pushf
add
fcoml
push
push
push
sub
sbb
lret
hlt
jbe
xor
test
pop
lahf
pop
xchg
push
push
imul
insb
out
cmp
xchg
mov
das
jge
push
ss
jne
movsb
fsubs
xchg
adcb
popa
dec
mov
lcall
push
es
xlat
int3
dec
mov
outsl
dec
lds
mov
stc
mov
ja
outsb
mov
push
or
std
adc
mov
ss
outsl
ja
adc
andl
into
popf
cmp
shl
xchg
sub
sub
jmp
into
sbb
movsb
xor
jmp
mov
outsb
xchg
jne
push
or
rcrb
std
adcl
adcb
testl
mov
add
inc
inc
sub
or
mov
std
xlat
sbb
cmp
jmp
fdivr
ret
imul
stc
iret
lret
pop
out
aas
sbb
jnp
sbb
cmc
int3
adc
insl
sti
out
push
xchg
int
push
shl
and
mov
pop
orl
xor
inc
push
cmp
daa
sub
stos
inc
das
and
xor
sub
inc
mov
and
xchg
lock
vmovhps
stc
jbe
dec
sub
sti
insl
add
aas
or
ds
imul
add
dec
ret
fsubrl
addr16
xlat
sbb
dec
xchg
nop
pop
out
cwtl
sbbb
popf
ja
pop
movsb
arpl
scas
sub
mov
jp
jl
push
mov
sbb
insl
mov
or
or
push
gs
sahf
pop
lods
lahf
aas
in
lret
scas
pop
lahf
jns
and
xchg
out
pop
gs
jno
loop
test
jecxz
movsb
cli
out
mov
cld
stos
sbb
pop
cs
cmc
xchg
rcll
insl
mov
xchg
lahf
jno
sub
outsb
fnstcw
cmpsb
push
dec
shrb
xchg
clc
cld
push
cmp
adc
aam
mov
aam
int3
add
fs
rorl
cmp
test
cmpsl
xor
xor
or
push
mov
in
lods
gs
dec
inc
mov
jecxz
mov
pop
add
xor
in
mov
sbb
mov
cmp
rcll
jle
mov
mov
stos
mov
mov
sbb
xchg
dec
adc
pop
push
lcall
cmp
aaa
cld
loopne
fidivrl
push
int3
lret
mov
test
cli
rorl
test
lahf
mov
dec
pop
daa
inc
pop
jmp
fistps
cmp
mov
mov
or
mov
lea
mov
ja
cmp
pop
fsts
imul
jnp
xchg
mov
cmpsl
jmp
nop
mov
cmpsl
jo
pusha
or
aaa
fidivrs
mov
jecxz
jmp
and
test
test
ja
test
data16
lahf
cmpsl
adc
sub
jmp
movl
imul
adcl
in
add
inc
pop
inc
mov
jns
lock
out
cwtl
rolb
sbb
mov
ret
mov
lcall
in
cltd
cmpsl
fimuls
aas
mov
enter
xor
lahf
scas
xor
aam
addr16
cmc
test
or
xchg
sbb
out
xchg
lods
or
jp
xchg
xlat
inc
or
adc
pop
mov
jmp
out
pop
outsb
mov
stos
cli
cmpl
shll
sub
xchg
gs
xchg
test
fdivl
daa
out
call
test
add
mov
sahf
sbb
lock
leave
movsb
jp
jge
loopne
mov
lcall
sarl
fsubl
in
cmp
ds
or
sbb
sbb
sarb
sbbl
std
out
pop
dec
mov
subl
mov
popa
das
nop
adc
adcb
icebp
ja
scas
jb
out
adc
ret
outsl
test
faddl
lret
add
test
or
out
adc
subb
xchg
cmp
fwait
xchg
repnz
sub
pop
orb
fmull
pop
add
pop
test
push
lret
sub
mov
cmp
fs
mov
xor
popf
inc
mov
pop
popf
test
sbb
and
cmpsl
jmp
xchg
int3
mov
dec
in
cli
lock
fld
adc
pushf
push
into
mov
ds
jae
mov
sub
hlt
sbb
mov
inc
sub
ficoms
sbb
xchg
hlt
mov
push
add
hlt
out
adc
aaa
adc
inc
iret
daa
mov
xor
add
out
imul
in
cmp
jecxz
xchg
pop
xchg
shlb
sbb
jae
ss
inc
lods
fists
mov
sbb
dec
loopne
adc
andl
sub
xchg
insl
and
lret
cmp
jbe
push
and
out
out
pushf
pushf
sbb
in
push
jecxz
into
movsl
inc
xor
fdivr
fists
cmp
repnz
add
repnz
inc
dec
pop
mov
lea
mov
lods
adc
xchg
dec
scas
adc
adc
jg
dec
dec
pusha
xchg
jle
stc
mov
or
sar
sti
mov
mov
jnp
leave
out
mov
or
add
mov
sbb
sahf
out
pushf
xor
xor
add
mov
imull
inc
push
mov
test
movsb
stc
leave
jle
sahf
push
cmc
xor
in
cmc
pusha
test
jns
shlb
pop
cmp
test
adc
pushf
pop
push
stc
out
inc
cltd
scas
in
mul
xchg
into
mov
cld
or
lock
out
cli
mov
inc
out
xchg
insb
adc
cltd
inc
pop
and
or
lods
inc
push
xchg
jle
mov
sahf
insb
daa
xor
or
lods
fisubs
push
add
pop
int
bound
cwtl
enter
movsb
add
dec
sbbb
inc
jl
test
and
sti
in
shrb
mov
xorb
cmpsb
add
mov
and
adc
push
pop
push
sbb
jge
aas
push
icebp
loop
std
mov
shlb
jmp
mov
sarb
rolb
repz
sbb
in
mov
loope
outsb
sbb
out
divb
sub
mov
jle
fisubl
divb
test
out
fidivs
je
add
test
push
jnp
incl
add
daa
loope
ret
add
ret
sub
mulb
push
or
cwtl
sub
adc
call
pop
xchg
add
sbb
call
mov
mov
inc
ret
ds
xor
mov
jae
ja
add
adc
xchg
or
adc
cmp
std
andb
cmp
ljmp
jle
mov
mov
pop
xchg
add
cmp
cmpl
mov
lods
xchg
clc
push
addb
push
out
push
scas
aaa
mov
cmpsb
lock
add
out
add
push
jp
and
cld
aaa
sbb
xchg
add
call
outsb
int
imul
insl
in
or
xor
movsb
repz
js
lods
mov
add
call
sbb
mov
pop
cmp
ss
ret
and
mov
inc
pop
xchg
fldcw
pop
dec
leave
nop
xchg
ds
insl
and
add
inc
mov
adc
loop
jmp
repnz
jne
push
add
mov
les
xor
mov
mov
sub
outsl
mov
push
push
fcmovnbe
and
sbb
imul
sub
lahf
lods
adc
dec
mov
jmp
ss
cmp
sub
ljmp
jle
and
gs
mov
mov
leave
aaa
mov
ds
and
push
mov
int3
clc
cli
sahf
sbb
jg
mov
sub
mov
mov
xchg
iret
mov
sub
xor
scas
mov
mov
inc
pop
push
lret
clc
pop
test
mov
push
xlat
std
andl
mov
fimull
push
lahf
aad
and
lds
inc
jns
adc
cltd
clc
lods
mov
cli
or
dec
add
enter
add
xchg
jl
mov
enter
jae
dec
mov
dec
or
les
sbb
orb
lods
jno
pushf
ljmp
insb
mov
pop
and
in
pop
xor
rcl
ljmp
cmpsb
hlt
mov
sbb
es
cmpsl
sbb
xchg
mov
mov
jae
repnz
nop
pop
test
or
stc
fpatan
pop
sub
repnz
testl
inc
xor
in
fisttpl
xchg
fs
xchg
fidivrs
and
gs
sbb
xor
adc
lret
and
repz
pop
cmp
fmul
xchg
and
mov
pop
pop
das
sbb
add
subl
aam
fisttpl
dec
je
sbb
xor
pop
cmp
insl
push
jmp
xchg
ret
pop
xchg
mov
aas
xor
and
push
js
out
xchg
or
mov
test
in
sub
clc
sub
jae
test
rcrl
shlb
xor
adc
xlat
pop
fcmovnb
sbb
add
ss
das
cmp
lock
movsb
push
adc
or
in
mov
std
and
mov
test
jecxz
inc
add
dec
pop
mov
mov
and
bound
sbb
lea
mov
or
jnp
aam
lods
cmpsb
push
and
fdivs
fst
dec
sub
push
out
out
jo
xor
mov
mov
sub
ds
mov
ret
fidivrl
or
push
fdivrs
daa
dec
dec
jp
mov
enter
or
and
xchg
dec
stos
scas
lahf
cmp
cld
aam
in
jns
mov
cmp
test
js
aaa
je
dec
scas
adc
push
xchg
pop
aas
jne
xchg
pusha
jg
inc
push
mov
pop
jbe
stos
pop
clc
push
test
lea
xchg
in
cmp
iret
dec
add
rcrb
cltd
sbb
adc
notb
popa
cs
jnp
push
cmpsl
adc
cmp
pop
lods
push
ret
mov
pop
jle
adc
mov
outsl
inc
sbb
add
mov
push
dec
adc
ret
mov
rolb
repnz
es
push
sub
sbb
mov
in
cmp
add
loopne
outsl
inc
add
iret
fsub
out
push
jb
pause
cmp
dec
xchg
inc
sub
dec
add
add
mov
mov
aaa
repnz
mov
mov
xchg
add
pop
push
lods
mov
in
cmp
loope
and
inc
rcrb
inc
mov
pop
hlt
pop
arpl
sub
push
cltd
sbb
mov
mov
call
fstps
fwait
lea
in
and
scas
pushf
xchg
fisubrs
jns
movsl
loop
mov
fisubrs
add
shrb
ljmp
mov
movsb
jle
push
out
stos
adc
adc
cmp
imul
lea
pop
xlat
lods
xor
cmp
das
cmp
add
mov
sub
push
jo
mov
testb
les
inc
int3
ds
in
sbb
pop
ret
clc
aaa
lret
cwtl
out
aam
cmp
and
lret
mov
out
mov
xor
or
mov
inc
fdivs
rolb
or
add
pop
dec
push
int3
jle
jo
mov
and
and
sbb
inc
in
fidivrs
push
out
xchg
movsb
lock
out
cli
xor
mov
pushf
mov
inc
or
pop
cmc
xchg
add
jmp
jecxz
and
mov
push
shll
fnstenv
jmp
je
mov
lods
xorb
lds
push
jg
mov
loop
and
pop
pop
or
xchg
mov
adc
and
and
and
insb
push
dec
xadd
repz
xor
pop
add
jbe
fs
adc
insl
mov
or
insb
or
gs
sbb
in
dec
mov
test
mov
aaa
lret
mov
xchg
cmovge
pusha
in
lods
cs
jge
in
scas
mov
cwtl
xor
test
dec
imul
jne
insb
stos
jmp
stos
jnp
add
jbe
pop
mov
in
inc
dec
pop
iret
xlat
inc
aaa
push
dec
hlt
insl
add
xchg
les
lret
ljmp
jo
xor
and
sbb
or
sub
jl
popa
sahf
dec
xchg
jo
clc
push
filds
sahf
or
jne
adc
ja
jl
into
lret
dec
add
xor
int
ds
loop
lea
dec
push
fisttpl
arpl
insb
flds
call
lds
lahf
sbb
sub
popf
hlt
lcall
sub
adc
lcall
movsl
or
and
aam
sub
addr16
push
lods
pop
mov
mov
jo
call
out
pusha
xchg
pusha
pop
in
test
ja
sub
lret
fsts
jmp
mov
add
xor
adc
les
xchg
sbb
or
mov
rcr
jns
jb
xlat
or
fcmovnbe
fcoml
out
fs
sbb
xorl
and
out
and
adc
test
or
fsts
sarl
add
in
push
repnz
in
loop
adc
cld
sbb
dec
movsb
sub
mov
std
mov
mov
outsl
scas
rcrl
and
nop
or
inc
hlt
mov
push
xchg
sbb
sub
in
xchg
dec
or
inc
dec
out
mov
jg
inc
dec
cmp
mov
push
fldz
inc
pusha
movsl
int3
aaa
decb
fidivs
adc
lock
mov
clc
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
imul
shlb
and
dec
xchg
movsb
mov
dec
sahf
mov
adc
cld
add
mov
cmp
movsb
or
loop
les
or
daa
dec
test
sub
in
or
out
dec
mov
repz
and
ds
jb
shlb
push
jp
dec
in
movsl
cld
xchg
mov
in
cwtl
mov
sarl
dec
jne
cmp
popa
std
cmp
not
in
test
out
sahf
cmp
or
inc
sbb
shll
out
mov
pop
pop
enter
out
rorb
cld
pop
dec
bt
mov
rdmsr
jecxz
inc
push
mov
xchg
push
in
js
cld
test
or
mov
fstps
add
dec
jle
imul
and
dec
cmp
test
lret
mov
jge
fmull
adc
xchg
mov
push
out
or
pop
add
xchg
mov
jns
repz
mov
xor
sar
jbe
out
pop
clc
mov
or
mov
add
les
aaa
addr16
cmc
aad
bound
jno
jl
out
xor
mov
mov
and
mov
sub
xor
fwait
cli
xor
jecxz
int
xor
aad
test
mov
loope
in
dec
xchg
mov
xchg
fsubp
pop
inc
xor
mov
test
fcmovnb
rcll
push
test
push
adcl
shlb
cltd
js
shll
iret
fidivl
ljmp
push
repz
rorb
dec
mov
je
jne
test
data16
ss
movsb
inc
stos
cwtl
inc
outsl
dec
fldenv
dec
pop
mov
shr
mov
jge
repnz
lods
lahf
orl
pop
mov
aam
pop
push
fisttps
mov
push
aam
sbb
inc
mov
mov
movl
push
lea
nop
inc
iret
rorl
out
in
mov
xchg
add
repz
jp
out
jno
mov
xor
sub
xchg
sub
xchg
mov
push
gs
xlat
dec
and
push
jecxz
icebp
add
inc
or
jo
addl
sbb
or
lcall
and
xchg
test
sub
push
pop
cmpsl
popa
rolb
sbb
xlat
stc
repnz
fisttpl
movsb
push
mov
push
lcall
lret
pop
sub
pop
in
jmp
push
test
xchg
mov
add
aam
rclb
sbbl
iret
popf
add
and
into
outsl
jl
repnz
mov
movsb
inc
icebp
push
xchg
pop
into
mov
cmp
xor
lock
fldenv
imul
xor
dec
subl
idivl
pop
imul
test
lock
jg
push
or
in
dec
mov
dec
add
push
sbb
ja
pop
fsubr
das
test
jbe
push
or
xor
mov
mov
push
push
push
xchg
mov
in
loopne
cmp
mov
push
sbb
leave
popa
inc
push
xchg
and
jnp
mov
xor
out
pop
cld
lds
pop
roll
mov
lock
not
ljmp
add
stos
xchg
mov
test
stos
clc
aas
adc
dec
sub
mov
outsb
test
out
sbb
std
pop
sahf
cmp
lods
cmp
push
frstor
push
jns
out
insl
and
sub
jo
aad
xor
mov
bound
and
adc
mov
adc
into
mov
rolb
out
sbb
mov
jecxz
sub
sub
mul
push
fst
jmp
adc
dec
popa
push
inc
lahf
dec
leave
dec
stos
inc
push
xor
dec
outsl
push
add
add
pop
dec
pop
into
or
and
xor
cmp
push
mov
xchg
leave
xor
das
mov
and
push
push
aam
lock
data16
nop
fs
negl
mov
xchg
push
push
call
insb
push
adc
ljmp
add
lods
sbb
inc
lds
clc
add
sbb
push
clc
push
adc
pop
jae
cmp
jne
fimull
lock
dec
sbb
push
inc
leave
mov
pop
inc
xor
and
insb
add
add
mov
xchg
ljmp
push
fdiv
xchg
dec
fstpt
rorb
and
pop
cmpsl
and
dec
jnp
je
pop
stc
push
std
and
dec
sub
icebp
sarl
jge
into
in
jle
js
cmp
push
data16
cmp
popf
cmp
insb
outsb
aam
in
jne
inc
imul
sub
jb
push
test
inc
lock
ds
mov
pushf
pop
jecxz
push
push
hlt
test
ja
inc
notl
inc
sub
sbb
push
leave
jl
mov
cmp
jo
lods
sbb
cs
cmpsb
out
cwtl
pop
add
nop
and
fisubl
inc
jmp
in
in
fs
fcomp
fildl
lods
mov
cli
mov
jb
push
xor
call
orl
sbb
push
xchg
sub
jge
in
imul
movsb
sbb
dec
push
bound
dec
push
int
xor
push
cld
mov
fldenv
cmp
daa
repz
das
mov
cwtl
push
jnp
add
jl
mov
xor
xor
add
aam
mov
hlt
xchg
or
jno
mov
xchg
mov
xchg
pushf
lret
cltd
divl
insb
lds
adc
ds
mov
mov
andl
ss
fdivl
mov
mov
scas
mov
inc
inc
mov
sub
stos
fdiv
fisttpl
mov
xchg
lods
mov
sbb
imul
sbb
ficompl
into
lds
dec
js
ljmp
mov
adc
sahf
mov
stos
insb
jl
xor
mov
and
pop
aaa
push
addr16
arpl
adc
jecxz
xchg
xchg
scas
lret
jge
pushf
out
out
test
imul
lds
fmuls
sbb
fimull
clc
int3
mov
adc
outsl
nop
aaa
inc
cmpsl
dec
lcall
hlt
cld
dec
adc
jmp
pop
sbb
ret
nop
push
popf
loope
leave
cmp
fstpl
ljmp
xchg
fs
jo
xchg
enter
sbb
adc
outsb
adc
lods
fisttpl
sbb
fs
cmp
loop
push
inc
lea
lea
mov
popf
or
cs
sub
jmp
sub
add
and
cmp
xchg
pop
sar
fucomp
into
ficoml
mov
and
cli
imul
dec
aad
mov
or
into
cmp
mov
lcall
pop
les
lods
in
lret
mov
sbb
sbbb
jmp
pop
and
dec
mov
mov
mov
push
cmc
pop
sub
dec
ds
jge
lret
dec
jb
sbb
push
inc
out
mov
mov
loop
jo
push
dec
jbe
popf
cmp
movsl
cmpsl
jle
loope
pop
add
imulb
loop
adc
jo
subl
cltd
pushf
repz
push
sub
push
mov
insb
jns
stc
jmp
int
loope
syscall
bnd
or
add
xor
test
clts
mov
add
sbb
fidivl
push
loopne
cld
mov
add
or
pushl
push
add
incl
hlt
flds
loop
jb
inc
mov
sbb
lret
test
sbb
jp
pop
loope
cltd
nop
sbb
ljmp
leave
out
and
mov
out
fs
scas
incl
jle
push
div
add
and
mov
jmp
fstps
ljmp
cmpsl
icebp
dec
inc
addb
nop
stc
bound
test
arpl
push
nop
lods
sbb
sbb
cli
shrb
test
test
mov
or
fidivrs
cmc
dec
push
jnp
test
out
mov
ror
jmp
sbb
cmpsl
jne
jno
and
adc
sub
clc
inc
aad
adc
arpl
fcmovbe
lods
lcall
test
loop
jp
xchg
inc
jle
rsqrtss
fcompl
in
xchg
sarb
je
negl
imul
and
mov
or
jp
les
inc
gs
or
icebp
xor
mov
das
cmp
sub
aaa
cmp
xor
mov
and
jo
push
xchg
addr16
push
xor
fisubrl
mov
add
mov
test
inc
nop
int3
sub
jle
in
es
ljmp
and
inc
ror
dec
push
out
sbb
lods
nop
ret
loopne
leave
lahf
mov
mov
add
test
inc
inc
rcll
mov
xchg
sub
mov
add
mov
js
add
jl
add
addb
push
jecxz
fstl
push
sub
leave
mov
popf
pop
pop
out
aas
movsb
mov
pop
data16
lock
pop
cld
imul
jae
or
fisubrs
fadds
add
scas
adc
adc
push
aaa
int3
add
and
cmp
icebp
mov
mov
ds
xchg
negb
sbb
xchg
xchg
xchg
dec
pop
testb
dec
daa
sub
add
inc
clc
insb
shll
mov
xchg
int3
jns
mov
rcrb
lea
adc
out
js
repz
jmp
mov
js
imul
add
or
cmp
repz
xchg
in
ljmp
sbb
shll
out
push
int3
jmp
out
pop
pop
pop
dec
das
push
xor
dec
mov
or
orb
inc
pop
sbb
dec
ficoms
sbbb
cs
dec
push
sahf
xor
mov
dec
xchg
hlt
js
and
mov
notl
inc
pop
jg
mov
pop
iret
inc
lds
ss
push
mov
sbb
dec
pop
in
add
imul
and
fwait
mov
sub
addl
cmp
int3
out
cmp
dec
push
push
scas
pop
push
or
sti
jbe
xor
adc
stc
inc
call
je
movsl
pop
and
in
push
inc
lahf
mov
xor
nop
imulb
pop
dec
xor
sub
xchg
push
sbb
fwait
out
aad
movsb
adcb
cmp
and
repnz
fmull
repnz
and
notl
repz
scas
sbb
pop
push
cmp
fmul
out
sarl
scas
cmp
subl
imul
in
sub
sbb
sub
in
andb
jae
fcoms
push
sarb
ljmp
inc
push
subl
adc
in
fwait
add
sti
bound
sub
fwait
daa
scas
repz
mov
pop
add
fistl
lds
xchg
hlt
and
dec
xchg
and
repnz
mov
stos
pop
ljmp
jecxz
jo
aam
cmp
adc
int3
pop
fnstenv
mov
lds
das
adc
das
mov
daa
popa
sbb
repz
cmpsl
push
xchg
push
push
popf
inc
lret
mov
outsl
aas
test
lret
cmp
push
sub
cwtl
aad
aas
jecxz
cmp
lret
rdtsc
out
out
fldt
xor
adc
out
mov
mov
push
stc
push
xor
in
je
pop
cmp
int3
jbe
push
jl
shlb
std
jge
iret
xor
addr16
ret
add
mov
out
or
add
rclb
fsubs
add
inc
jne
lret
outsl
out
das
mov
xor
lcall
sub
clc
push
mov
xchg
and
sub
xchg
xor
js
imull
sbbl
mov
nop
push
sub
mov
inc
push
xor
push
nop
fcmove
cmc
rcrl
out
mov
jmp
mov
push
out
adc
pop
je
test
mov
jge
inc
or
cmp
xor
jne
or
mov
and
stos
subl
mov
sbb
int3
lret
xchg
dec
movsl
jmp
mov
cwtl
inc
rorb
aaa
vpshufhw
stos
sub
hlt
add
pop
cmp
and
inc
push
rorb
and
mov
pop
jp
lcall
mov
stc
add
jb
in
fwait
sub
add
leave
scas
iret
jge
adc
aaa
cmpsl
push
rclb
push
adc
push
adc
adc
or
in
sbb
into
xor
scas
sahf
inc
pop
in
rcrl
or
hlt
mov
mov
call
testb
aad
orl
fcompl
pop
mov
pop
xor
xchg
sbb
cltd
fadds
push
mov
stos
mov
adc
jl
jge
pop
dec
jno
out
arpl
je
mov
fldt
mov
cs
pop
jmp
setae
adc
scas
int
das
push
cmpsl
nop
and
mov
jge
mov
pop
arpl
adc
aad
out
rorl
jle
mov
pop
push
or
stos
test
cmpsl
xchg
mov
or
mov
fists
mov
xor
pushf
aam
out
mov
sub
cmp
adc
jle
and
mov
leave
in
and
cli
aam
insb
jae
push
xchg
insb
mov
pop
fdivr
xlat
inc
stc
test
cwtl
and
sbb
gs
fistps
xlat
dec
daa
sbb
push
mov
cmp
movsl
fdivrp
lods
jp
enter
outsb
inc
dec
les
ss
fxch
je
cmp
xchg
ret
mov
mov
pushf
popf
sbb
xchg
insb
sub
mov
lods
leave
iret
adc
mov
fadd
addr16
pushf
push
outsb
mov
sbb
cld
sbb
inc
ret
xchg
add
test
lret
jbe
xchg
ret
push
pop
daa
daa
nopl
int
mov
mov
mov
stos
lret
pushf
bound
bound
pop
aaa
adc
adc
mov
cmp
pop
mov
jecxz
cmp
repz
testb
lock
in
bound
jle
push
mov
pop
jnp
xchg
push
mov
cmp
jbe
inc
mov
loope
insb
pop
sarb
dec
test
lock
mov
repz
movsb
ret
es
pushf
dec
dec
ss
sbb
mov
pop
dec
mov
inc
and
rolb
mov
push
xchg
jmp
jl
iret
cmp
pop
xchg
push
fwait
out
pop
push
push
jle
mov
ret
movsl
daa
popf
adc
dec
lret
mov
imul
sbb
mov
jbe
icebp
mov
adc
and
mov
mov
add
pop
and
dec
ror
pop
add
jo
mov
aam
mov
mov
xchg
push
cmp
cmp
inc
rol
mov
test
scas
mov
dec
add
fsubl
movsl
dec
out
dec
push
les
pop
cmp
add
addr16
js
mov
inc
jg
sti
lock
push
lret
sbb
scas
movsb
mov
pop
mov
jg
jne
mov
dec
add
adc
lahf
mov
jecxz
xor
add
daa
jp
cwtl
fwait
jg
cltd
jns
xchg
mov
iret
mov
adc
or
jmp
mov
sub
lock
test
into
mov
aam
test
inc
stos
mov
adcl
push
scas
xchg
sub
push
lds
test
mov
jo
insb
jp
inc
pop
cmp
dec
js
ljmp
leave
add
jbe
outsl
jecxz
xlat
mov
xchg
or
jecxz
lcall
lret
inc
mov
out
inc
lret
cmpsl
mov
add
dec
std
xor
cld
and
fsubrs
fwait
jge
test
push
jp
mov
pop
hlt
into
mov
adc
notl
inc
inc
cmp
test
rclb
test
mov
jno,pt
dec
into
cmp
cli
pop
add
cmpsl
or
pop
iret
dec
aad
pushf
out
push
movb
cld
cmpsl
adc
xchg
cmp
sub
fisubrl
incb
cmpsb
jecxz
push
insb
push
mov
sub
push
es
fisttpl
jl
les
mov
scas
pop
inc
xchg
sub
lcall
inc
dec
add
fstp
cld
push
cmc
xor
jmp
outsb
mov
cltd
and
or
nop
loop
iret
jnp
sbb
mov
mov
mov
ljmp
in
repz
mov
int3
or
dec
mov
cmp
inc
push
xlat
loop
mov
push
test
inc
das
inc
loope
mov
push
push
xor
mov
and
cli
and
rcrb
sbb
pop
mov
pop
inc
les
dec
mov
outsl
push
xor
movsl
push
jp
fstpl
push
pop
lret
pushf
mov
sbbl
movsl
jae
and
pop
adc
mov
xor
xorb
sbb
and
sbb
std
fnstenv
lods
push
xorl
jne
shll
loopne
inc
push
jne
push
icebp
js
out
mov
clc
mov
movsb
insl
fcmovu
imul
data16
aad
pop
int3
adc
or
clc
fdivl
pop
xchg
sbb
mov
mov
orb
adcl
lock
out
xor
scas
mov
fstl
dec
notl
shlb
push
push
pushf
inc
dec
pop
add
shl
orl
pusha
jno
outsb
mov
mov
push
cmpsl
cmpsb
xchg
std
mov
xor
nop
xchg
insl
cmc
jno
fmuls
pop
xchg
movsl
jne
mov
inc
adc
mov
aad
xchg
xchg
push
mov
ret
mov
pop
addr16
stc
pop
lcall
out
adc
dec
mov
mov
cmp
pop
fstpl
sbb
mov
and
mov
stc
fucomp
in
hlt
lods
pop
movsl
imul
addr16
pushf
mov
out
lcall
sub
pop
les
mov
cltd
bound
ljmp
aas
xchg
sbb
repz
xchg
push
std
pop
cmp
dec
or
jmp
pushf
pop
addl
adc
outsb
cmp
cwtl
dec
xchg
fwait
cltd
jnp
rclb
cltd
mov
int3
dec
rcrb
push
stos
cmpsl
pop
or
xor
and
xchg
repnz
aam
inc
inc
fdivp
popa
add
ljmp
mov
scas
inc
push
lea
adc
outsl
cpuid
cmp
fmull
jbe
add
jle
loopne
sti
or
xchg
ds
push
mov
dec
pop
adc
icebp
jl
dec
mov
into
or
mov
sbb
in
xor
pushf
mov
aaa
hlt
in
adc
cmpsb
pop
std
adc
dec
add
std
cmp
jno
outsl
or
cmpsb
pushf
push
jp
cmpb
xor
scas
outsb
fcomi
loop
mov
xchg
ror
add
jge
add
xor
mov
orb
inc
fiaddl
fstp
mov
push
ljmp
or
inc
rcpps
sub
out
push
addr16
add
in
clc
add
cmc
xcrypt-ctr
cmpsl
fwait
add
pop
push
push
inc
loopne
inc
pop
test
lret
rcr
mov
inc
sub
in
or
mov
inc
mov
xchg
add
add
jo
movsl
push
incl
lds
inc
add
out
scas
and
in
ljmp
jae
std
lods
ds
mov
cs
sbb
cs
punpckhdq
jge
cmp
lahf
mov
hlt
xor
or
jno
push
and
js
bound
daa
jge
repz
add
scas
add
rcr
pop
lcall
sahf
std
mov
mov
pop
jge
xchg
repz
lods
mov
icebp
out
mov
xor
cmp
sbb
and
divb
adc
mov
ficomps
cmpsl
cmp
int
popf
pop
mov
loop
xor
lret
pop
dec
xchg
rclb
dec
mov
mov
or
pop
add
dec
xchg
sti
fcoml
in
es
jae
lock
push
or
lods
xor
mov
enter
aad
pushf
jp
and
and
sbb
or
jmp
dec
inc
add
loop
lock
mov
fisttpll
cmc
jl
jno
out
testl
loop
adc
ret
add
mov
mov
cmp
repnz
xor
mov
dec
sbb
push
insb
jno
push
mov
test
inc
mov
mov
pop
xchg
inc
push
lahf
push
scas
ret
fs
ret
or
inc
push
mov
mov
stos
test
sbb
adc
bound
in
lahf
jae
lods
push
ret
iret
stos
cmp
arpl
lcall
fdivrs
shll
lret
or
inc
push
in
test
sub
cld
hlt
mov
fisttps
xchg
mov
adc
mov
xor
add
jg
cmp
idiv
mov
or
ret
jb
imulb
mov
out
mov
out
inc
std
sbb
decb
lret
xor
jne
scas
mov
fmuls
pop
dec
adc
out
fwait
pusha
js
jmp
mov
jge
pop
mov
repnz
aaa
jb,pn
rorb
pop
cmp
rorl
xchg
xor
in
sub
mov
jg
inc
in
pop
ja
loop
add
sahf
sub
ja
sti
and
mov
ja
dec
loopne
fcoml
seto
mov
repz
push
dec
dec
adc
adc
in
cmp
testb
dec
nop
push
repnz
mov
push
add
mov
fidivrs
ror
xor
inc
movsl
inc
push
lock
and
mov
sbb
or
aad
arpl
pop
ja
imul
mov
loopne
push
js
inc
ficoml
stc
xor
pop
cmpsb
xchg
adc
orb
pop
pusha
add
lods
mov
push
push
stos
jno
xchg
sub
outsb
mov
cmpsl
js
adc
jmp
fildl
lret
clc
shlb
pop
loope
pop
push
jg
shlb
inc
cli
xor
pop
cld
ret
dec
jmp
in
dec
xor
jl
in
sub
ja
dec
mov
loope
ret
jecxz
inc
add
mov
push
scas
sub
or
jle
sbb
ss
cmp
cli
mov
rcr
cmp
nop
out
add
or
aaa
fisubrl
loopne
xor
add
push
shrb
out
mov
shrb
add
xchg
push
roll
lods
movsb
push
aas
dec
popa
mov
adc
mov
adc
dec
push
fcoml
sbb
pop
test
repz
aas
inc
fists
dec
scas
push
mov
adc
enter
xchg
out
pusha
repnz
fdivrl
ja
sub
sub
cmp
pop
enter
orb
das
lds
sti
jecxz
out
ss
push
shll
adc
imul
outsb
pop
ret
or
icebp
outsb
and
imul
sub
xchg
clc
jne
test
aam
cmpsb
add
pop
dec
jnp
sub
push
jmp
loope
lods
lods
mov
rorb
xlat
adc
xlat
into
mov
push
jb
ficomps
xlat
orl
movsb
or
mov
imul
leave
cmpsb
and
mov
leave
jecxz
add
gs
arpl
mov
dec
pop
in
dec
mov
fcmovne
dec
xchg
mov
in
aaa
jmp
mov
fnstsw
adc
aas
popf
jns
push
out
nop
xor
arpl
or
inc
xor
xcrypt-ctr
cmpsl
pop
inc
xor
sbb
xchg
pop
or
rcrl
int
loop
and
pop
test
pusha
adc
cmc
aas
pop
jp
cmp
out
je
dec
popa
hlt
test
xor
sbb
repz
decb
ljmp
arpl
push
xchg
xor
mov
pop
daa
cmc
lods
cwtl
xchg
push
sub
and
daa
cmc
mov
mov
jle
fwait
into
dec
stc
mov
enter
sbb
and
rorl
imul
ja
mov
pop
fisttpll
fs
into
dec
mov
jmp
adc
popa
mov
sub
jg
pushl
cld
enter
xlat
xchg
inc
pop
xchg
mov
mov
cmp
cmp
inc
push
inc
pop
stc
test
ss
pop
test
push
sub
or
icebp
xchg
adc
cli
mov
adc
add
ss
popa
test
add
push
std
push
pop
add
mov
lods
mov
js
repnz
sub
ljmp
pop
shll
js
lcall
cmp
int
mov
shrb
test
icebp
dec
iret
push
jb
mov
mov
jo
sub
es
int
or
jle
subb
mov
aam
mov
stc
add
outsb
or
pop
sub
jbe
mov
decb
repnz
out
push
dec
jecxz
iret
add
mov
inc
and
loope
cmp
in
xchg
ds
in
mov
andb
jmp
sti
loop
sahf
mov
xor
cld
xchg
cmpsb
shlb
cmp
sub
add
jno
mov
and
enter
notl
je
neg
jb
repnz
fwait
cmp
push
je
mov
bound
sub
daa
mov
mov
fwait
ss
pop
aad
fdivrs
mov
cs
mov
xchg
or
adc
imul
pop
push
mov
push
pop
sub
data16
adc
xchg
cmp
or
loopne
icebp
xchg
stc
out
inc
les
pop
mov
mov
aam
cmp
in
aam
pusha
dec
leave
leave
out
jne
and
xchg
fsubrl
bound
loope
sahf
fsubrl
or
or
ds
leave
push
push
adc
sub
sbbl
ds
mov
out
orb
loop
aad
sub
push
xor
lret
stos
adc
jnp
nop
mov
cmp
push
test
xchg
push
sbb
jnp
sarb
and
jge
push
mov
cmp
into
xor
repnz
pop
mov
and
mov
xchg
stos
jmp
stc
inc
adc
insb
sbb
cli
xchg
outsb
ja
inc
repnz
xor
inc
mov
inc
sub
jl
lahf
pop
adc
cmp
add
out
sub
mov
dec
mov
ja
fsubs
sub
clc
xchg
add
and
cmp
mov
repnz
subb
cltd
mov
cld
jne
je
jnp
jb
mov
jle
sub
ret
push
gs
test
nop
sub
adcb
and
mov
insl
or
and
mov
pop
mov
addl
jp
nop
xchg
push
adc
scas
and
jle
xchg
push
cld
xor
lret
in
pushf
andb
adc
sbb
mov
jo
jp
and
js
push
mov
in
lret
out
ret
jns
lret
add
inc
jb
xchg
leave
aam
test
dec
xchg
add
add
loope
outsl
pop
dec
jle
bound
sbb
mov
jecxz
lret
dec
lahf
test
stc
sahf
push
xor
sbb
sbb
push
in
dec
cmp
sarl
mov
dec
inc
call
mov
xchg
test
cmc
int
mov
push
repnz
inc
les
ds
fisttpl
and
mov
scas
jecxz
xchg
jbe
in
sub
jmp
xchg
adcl
loope
rcll
mov
jnp
dec
mov
mov
cmp
xlat
out
es
jae
mov
je
pop
shrb
xchg
mov
cmpsl
fldl
mov
shl
add
leave
sbb
inc
scas
pop
dec
cmp
nopl
mov
mov
ljmp
mov
icebp
xchg
sbb
rcrl
or
scas
or
dec
cwtl
insl
lcall
imul
pushf
int
out
cmp
mov
lahf
stos
xlat
fpatan
movb
xchg
xchg
mov
mov
cli
cmp
repz
cltd
jae
adc
adc
add
mov
out
pop
orl
or
in
add
cmpsl
push
inc
mov
cld
int3
push
xor
sub
nop
mov
jecxz
mov
test
enter
cmp
imul
cmp
push
cwtl
and
shll
in
shll
imul
out
call
test
popf
xlat
or
cli
or
adc
stos
scas
push
mov
lods
push
push
test
dec
dec
cltd
negb
rcl
aad
inc
mov
cmp
sbb
pop
pop
repnz
mov
adc
into
insb
lods
cmp
into
scas
inc
daa
xchg
loop
mov
adc
ss
push
adc
les
inc
xchg
loopne
les
push
push
daa
dec
enter
aam
pushf
lret
cld
mov
insb
out
in
imul
test
les
push
xchg
dec
scas
push
add
hlt
cmc
out
dec
mov
stos
cmp
add
stc
fidivrs
jg
inc
pop
jb
stc
xchg
lds
pop
adc
pop
mov
stc
adc
or
adc
ja
fsubl
add
mov
sbb
fcoml
xor
push
jle
loop
or
movsl
push
mov
push
xor
pushf
and
dec
xor
xchg
lea
jmp
xorl
adc
arpl
mov
cmp
icebp
shrl
inc
movsb
movsl
sbb
and
call
fisubs
mov
add
and
mov
stos
jno
loope
inc
pop
sti
rcrl
inc
jb
fildll
cmp
xor
lods
jmp
sbb
mov
and
fisttpl
adc
iret
shll
fiaddl
and
dec
mov
xor
push
pop
dec
es
xchg
xchg
dec
xlat
inc
xchg
xor
mov
add
mov
loopne
int
loope
inc
rcrb
aas
sub
arpl
std
int
push
pop
cmovge
inc
pop
mov
fsubrl
adcl
jne
sub
ffreep
mov
adcl
mov
cwtl
sbb
mov
jbe
dec
xchg
push
int3
into
jnp
shlb
movsb
pop
test
push
out
cmp
int
lock
sub
xor
in
push
cmc
lret
js
inc
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
cmp
mov
orl
addl
and
testb
pusha
int3
pop
repz
inc
inc
aas
pop
shll
leave
into
sub
fisubrs
push
imul
mov
pushf
or
or
out
dec
adc
adc
dec
cltd
ret
mov
std
rorb
sub
notl
pop
jae
and
rolb
bound
pusha
iret
ja
and
sar
add
je
jecxz
movlps
aaa
shrb
outsb
mov
push
movsl
out
mov
lods
cs
idivl
and
adc
movsb
out
loope
and
cmpsl
int
xchg
cmp
call
ret
test
jns
mov
jbe
inc
insl
cmp
pop
xor
xor
inc
push
sbb
out
movsbl
xor
xor
and
or
or
or
jecxz
xor
xchg
mov
ss
out
leave
cmpsb
insb
or
loop
bound
cmc
out
hlt
lret
xchg
test
shlb
xchg
mov
xor
and
lret
pushf
imul
repnz
sbb
lret
fucom
jnp
stos
add
push
push
and
jnp
sub
repz
lock
adc
dec
mov
repnz
jno
gs
fs
and
ljmp
or
fs
sub
sbb
add
ds
cmp
inc
mov
sbb
pop
jo
cs
dec
adc
jmp
pop
imul
dec
addl
mov
mov
pushf
mov
mov
mov
cmp
dec
lret
test
xor
add
test
pop
jp
lea
mov
pop
push
shlb
pop
les
inc
push
dec
jns
notl
add
lods
fsubl
scas
in
cltd
sarb
lods
loopne
in
shrl
jno
sub
push
sub
dec
insb
mov
sub
movsb
mov
add
or
mov
or
fsin
mov
nop
test
xchg
mov
imul
test
mov
movsl
xchg
xor
lods
push
fldenv
inc
mov
xchg
sub
sbb
jo
xor
test
pushf
sbb
push
mov
push
push
sbb
stos
lret
in
pop
sbb
mov
mov
shll
sahf
fsubl
mov
gs
scas
sub
adc
dec
push
mov
dec
std
and
push
addr16
popa
adc
call
popa
sub
cmpsl
and
jnp
pop
je
stos
adc
mov
cmpsl
xchg
icebp
int3
sbb
iret
rcrb
popa
dec
shrb
cmp
mov
fnstsw
push
xchg
ret
push
cmp
inc
push
pop
bound
xchg
sbb
xor
outsb
outsl
jns
cmp
js
ficompl
xchg
in
pop
subl
imul
cmp
aas
push
fidivrs
mov
pop
and
das
or
mov
push
and
cmp
rcrb
gs
pop
idivl
incl
mov
jo
lret
shll
inc
adc
ja
sub
lcall
outsb
jbe
jge
sbbb
test
adc
ds
fimull
sbb
mov
adc
test
sbb
sbb
popl
and
iret
pop
cs
orl
ficoms
add
aas
cmp
and
cltd
mov
mov
arpl
ljmp
jg
mov
xor
push
aas
sub
dec
adc
push
js
fcoml
dec
cmp
fbstp
pop
sbb
add
loop
cmpsb
fildll
push
xchg
push
mov
xchg
faddl
addr16
fisttpl
pop
mul
mov
lret
xchg
sbb
sarb
mov
sbb
jae
orl
mov
push
insl
or
aas
pop
arpl
jo
or
xchg
pop
ljmp
adc
sbb
idivb
out
xchg
fmulp
mov
cmp
shrb
sub
mov
push
rolb
or
int3
pop
repz
movsl
pop
stc
or
push
pop
xor
fldcw
loopne
sub
popa
pop
cltd
adc
mov
mov
sub
jns
adc
push
fidivrl
xlat
xchg
and
movsb
addr16
xchg
jo
dec
and
out
std
inc
adc
add
add
xchg
pop
lds
and
idivb
mov
test
fimuls
mov
mov
cld
in
cwtl
mov
scas
mov
insl
fwait
jmp
mov
cltd
xor
leave
popf
adc
insb
jle
sahf
cmp
sbb
mull
rcl
adc
cld
lods
xor
or
mov
push
outsb
bswap
test
jp
sbb
divb
sub
dec
pop
dec
lcall
mov
push
adc
jle
mov
popa
or
lret
xchg
mov
mov
pop
mov
testb
pop
dec
and
flds
jb
notb
cmp
sbb
inc
fildl
insb
std
xlat
ss
jmp
jle
sub
scas
jl
jb
mov
xor
push
jp
sbb
sbb
imul
inc
divb
addb
fnstcw
lock
push
inc
sbb
ret
cmpsl
fildll
adc
xchg
xchg
inc
pop
inc
xor
mov
fidivrs
outsl
nop
lods
and
clc
cmc
pop
or
xchg
negb
dec
popf
out
repnz
push
dec
sbb
mov
fwait
jbe
jno
out
lock
mov
aad
mov
outsl
cli
pop
jmp
lret
ret
lret
ficompl
push
cld
mov
xchg
mov
mov
mov
fldt
test
jns
inc
push
xlat
inc
fdivr
add
dec
cli
in
cmp
cld
imul
lods
pop
or
and
cmp
into
push
mov
or
jne
stos
ret
jmp
sub
add
or
and
mov
pushw
jnp
adc
mov
adc
lcall
ljmp
sbb
movsl
or
pop
xchg
dec
les
aaa
or
out
dec
decb
shll
dec
loop
int
notl
outsb
and
or
jge
push
pop
in
dec
lds
jnp
sti
and
insl
inc
mov
sub
jo
xor
out
ds
cmp
mov
outsl
pop
ret
inc
clc
inc
add
xor
cmpsl
fnsave
push
divb
sbb
xchg
fsubrs
sahf
mov
movsb
pop
cwtl
sub
and
mov
rol
fiaddl
or
mov
jb
xchg
mov
fbld
test
jmp
out
in
push
arpl
jmp
roll
xor
js
ja
rolb
push
pushf
mov
or
clc
xchg
dec
inc
and
xchg
in
fs
xor
pusha
popl
push
je
dec
jge
cmp
adc
repz
sbb
test
cwtl
hlt
push
and
nop
push
das
aaa
ret
sbb
xchg
aam
push
std
mov
dec
sub
adc
mov
dec
and
test
xchg
pop
fisubl
std
mov
xchg
mov
and
js
inc
bound
xor
stc
fs
sbb
mov
dec
push
mov
jne
sbb
jno
pop
push
cs
mov
adc
lods
push
mov
scas
lcall
pusha
dec
mov
and
lods
xor
out
and
shll
dec
insb
in
and
and
clc
outsl
stos
out
and
or
adc
fmul
mov
inc
out
lret
shl
pop
push
roll
lods
pop
inc
push
popf
mov
xchg
outsl
mov
pop
stc
lahf
addr16
push
sti
xchg
test
jmp
js
into
fmul
in
xchg
or
add
inc
enter
hlt
lret
sub
fcoms
adc
dec
mov
inc
fisttps
xchg
xor
and
xchg
mov
pop
jecxz
scas
je
mov
out
je
mov
nop
icebp
fstpt
push
jae
mov
sbb
outsl
lret
mov
or
mov
dec
je
mov
scas
ja
sbb
ljmp
nop
fnstenv
and
leave
xchg
push
fistpl
mov
dec
fs
aam
xchg
cmp
ja
or
sahf
hlt
sub
popf
push
and
push
xlat
mov
jle
or
lret
sti
jne
xchg
in
add
mov
sbb
jno
mov
xor
pop
sub
jmp
or
aad
loope
add
outsb
dec
mov
cld
mov
pmaxub
push
in
icebp
sti
push
sbb
pop
mov
jecxz
cmp
xor
lcall
dec
subl
cs
cmp
inc
sub
out
imul
repnz
movsb
scas
in
cmpb
cmp
mov
repz
inc
sbb
imul
stos
scas
gs
pop
inc
pop
add
inc
insb
mov
inc
repz
dec
fdivs
inc
mov
mov
jecxz
add
ljmp
jp
mov
clc
lea
decb
test
pusha
enter
test
out
push
push
inc
aad
adc
mov
xchg
lods
out
in
add
loope
test
add
inc
sarl
mov
cmpb
add
cmp
dec
daa
cld
movb
mov
push
sbb
aad
cltd
aaa
int3
mov
push
jecxz
mov
sarb
pop
arpl
pop
clc
push
clc
fstpt
dec
xchg
cmp
into
mov
cltd
sbb
dec
xor
fnstsw
scas
mov
in
pop
inc
call
lcall
sbb
inc
jp
mov
and
sub
cmpsb
push
dec
push
cmc
mov
sahf
les
insl
jp
inc
xchg
sbbb
mov
fidivrs
pusha
outsb
cmc
dec
add
add
add
jo
les
mov
ret
out
dec
ljmp
push
sbb
lret
outsl
jno
xor
insl
sbb
lret
push
xor
push
dec
int
repnz
adc
ss
xor
and
xlat
push
lods
mov
icebp
fidivs
sahf
call
dec
lahf
inc
sub
das
sub
lahf
sub
hlt
mov
jge
cmpl
xor
pop
xchg
mov
add
or
cmc
jp
fs
mov
js
pop
insl
loope
cmp
pop
mov
shrb
je
insl
rorb
lods
dec
jg
or
insb
ret
pushf
inc
lahf
xor
lahf
testl
sub
jno
cmpb
ror
or
pop
xchg
push
imul
icebp
pop
frstor
andb
cmpsl
cmpsb
xor
stos
lds
jmp
dec
mov
or
adc
call
or
outsb
jnp
pop
int
lcall
in
outsb
xor
imul
icebp
cld
and
idivb
js
test
mov
jg
in
xor
mov
xchg
jbe
mov
jge
sbb
sub
aad
sbb
pushfw
mov
push
ja
sub
add
pop
xor
sbb
dec
sahf
or
popf
fistpl
jecxz
mov
push
dec
insb
push
push
xlat
cltd
std
fbstp
rcll
cmp
add
mov
outsl
gs
pop
lret
jne
inc
xor
dec
addl
fcmovnb
push
mov
mov
das
sbb
push
sbbl
cltd
mov
mov
loopne
adc
jmp
cmp
pop
out
adc
xchg
lds
jp
mov
adc
inc
sti
inc
and
fsts
pop
sbbl
cltd
inc
cltd
les
imul
mov
lds
stc
rorl
sbb
push
xchg
std
and
fistl
arpl
call
test
jae
sub
inc
mov
mov
pushf
stos
out
arpl
cmpsl
cli
repnz
in
fistpll
faddp
inc
out
mov
adc
add
mov
lods
inc
imul
jb
das
jmp
out
mov
stc
repz
scas
cmpsl
cld
lahf
test
push
ret
sub
inc
cmpsb
and
cltd
out
cmp
cli
pushf
or
in
jb
adcl
xor
ss
xchg
pushf
and
outsl
mov
add
daa
nop
pop
push
arpl
ss
xchg
scas
gs
shl
add
loopne
pop
sti
add
dec
mov
fsubl
enterw
cmp
xor
add
rorl
lea
push
jl
push
mov
rcrb
loope
sti
es
jmp
xchg
sbbl
pop
mov
enter
xchg
push
and
sbb
mov
xor
add
aas
push
mov
imul
dec
mov
fisubs
mov
pop
inc
lahf
push
mov
adc
mov
dec
mov
adc
and
out
or
cwtl
jmp
ficoms
out
jne
xor
xor
pop
cmp
pop
enter
and
jmp
fcmovb
sbb
mov
cmpsb
lods
push
or
mov
aad
mov
xlat
lahf
add
nop
aaa
and
testl
xchg
xorb
mov
shll
xor
inc
xchg
xchg
sub
adc
cs
sub
jae
jae
nop
cs
jge
dec
pop
jmp
cmpsl
sbb
cld
sbb
hlt
jl
in
out
or
stc
outsb
ljmp
lock
cmpsb
jns
jno
mov
in
sti
push
imul
sbb
arpl
scas
sub
mov
push
xchg
shl
notl
arpl
push
or
sbb
pushf
dec
cmp
sahf
jl
testl
mov
insl
lea
pop
lds
dec
inc
fnstsw
mov
xchg
mov
xor
out
sbb
leave
lds
sub
add
sub
lock
ret
test
ret
stos
push
pop
js
lcall
lds
lret
sub
stc
xchg
out
xor
test
test
movsl
xor
pop
xchg
or
les
add
hlt
hlt
cmc
addr16
cmc
movsl
fldl
sub
dec
sbb
out
xor
jecxz
xchg
fiaddl
cmc
fcmovb
leave
movsb
idiv
fnstcw
movsb
cmc
int3
cmp
lods
push
repnz
sbb
adc
jmp
bound
cmpsl
inc
mov
or
clc
sbb
mov
imul
and
lods
mov
mov
ret
and
dec
gs
cmpsb
xlat
fistpl
jae
sbb
lcall
sbb
loop
or
test
sub
mov
sub
punpckhdq
icebp
rcrb
xchg
pop
in
ss
and
add
fwait
xor
jmp
sti
mov
cld
dec
push
aad
ja
cmc
and
or
sahf
mov
pusha
lods
out
pop
jmp
fidivs
xor
adc
inc
mov
lock
addb
sbb
cld
push
data16
lahf
imul
xor
cmp
lret
popa
sub
mov
call
jns
cltd
clc
inc
push
adc
loope
leave
jne
test
xor
dec
add
pop
decl
and
ljmp
adc
mov
cmpsb
stos
adc
fadd
pushf
sub
not
fs
clc
cmp
mov
aam
fsin
sar
jbe
sbbl
push
enter
add
push
sbb
pushf
xchg
test
insb
and
cmp
mov
test
push
cmc
cmc
outsl
stos
and
rcr
cmp
aas
or
dec
cli
pop
cmpl
mov
fimuls
jmp
and
mov
xchg
sti
inc
xchg
movsb
push
adc
dec
pop
inc
adc
and
jecxz
cmp
add
xor
sbb
push
imul
into
mov
push
mov
lods
fadds
mov
mov
jp
add
addr16
push
or
fsubp
fs
dec
jge
cmp
cmpl
add
fidivrl
sti
lods
push
test
push
mov
mov
icebp
imul
jg
jl
rcrb
adc
jo
jnp
rclb
in
and
js
shll
xor
sub
in
xor
dec
ljmp
cmp
insb
sub
cltd
sub
adcl
mov
rcrb
adc
pop
adc
jmp
nop
and
hlt
fadds
ja
mov
cmpsl
jo
out
test
lret
and
test
shlb
fadd
lea
sub
roll
call
imull
push
imul
loop
bound
push
xlat
aad
lret
call
shlb
insb
test
cmc
cmc
movups
aam
lds
sbb
fcomps
aaa
or
or
mov
add
sbb
ds
jo
push
lret
lret
push
int3
jmp
fdecstp
shrb
add
push
imul
inc
xor
cmp
jg
lcall
adc
pop
mov
scas
and
mov
and
into
test
jnp
ret
mov
push
negl
and
mov
jecxz
fisttpll
lahf
jmp
and
jge
icebp
out
ljmp
rcr
shr
jp
sbb
xchg
mov
mov
ja
loop
aam
icebp
add
pop
push
and
leave
sub
xor
fstps
mov
mov
ficoml
sub
cli
pop
xchg
lar
jle
popf
dec
and
or
sar
push
ja
xchg
pop
rcrl
jmp
mov
mov
loopne
xor
sub
test
outsb
or
pop
aam
add
dec
mov
je
inc
ss
xchg
mov
aaa
mov
xor
adc
sub
inc
roll
ja
sub
cmp
mov
or
pop
or
mov
mov
je
lret
xor
cmc
test
sarb
imul
addr16
inc
das
aaa
leave
jae
push
xchg
xchg
push
dec
rcrb
xchg
jo
cmp
pusha
add
iret
daa
ret
inc
fildll
inc
es
mov
jns
divl
sbb
mov
and
adc
fdivr
loope
mov
js
cmp
sub
push
jb
fucomp
xchg
mov
mov
nop
fcompl
xchg
pushf
loope
aas
mov
vcvttpd2dq
jno
int3
lds
mov
fs
ja
mov
iret
or
fs
and
sub
in
aas
andb
aad
jecxz
loopne
sbb
pop
das
jb
das
movsl
cmc
sub
dec
leave
add
inc
cli
filds
icebp
xchg
xchg
in
sub
inc
fs
aad
int
sbb
mov
dec
in
jle
rcl
stc
jne
push
jle
adc
js
xor
and
jmp
test
loopne
sub
cmp
and
lock
dec
mov
inc
fucom
and
add
dec
mov
cwtl
cmp
aaa
ret
pop
jne
imul
push
cmpsb
adc
jbe
mov
sbb
push
pop
inc
arpl
ljmp
fists
inc
add
fidivrl
xor
shlb
faddl
sub
sub
pop
mov
push
cmp
dec
jno
xchg
or
add
adc
mov
repz
mov
or
sub
or
xchg
outsb
ja
ret
lds
rcl
xchg
fbstp
adc
sbb
sub
adc
imul
fisubrl
mov
sub
int
pop
xor
inc
fistpll
data16
test
ret
pop
hlt
jmp
loope
adc
or
scas
and
lods
inc
jge
add
sbb
push
sbb
lret
fnstenv
xor
pop
aas
jno
dec
xchg
mov
and
pop
and
inc
sbb
insl
ret
popf
in
pop
and
sub
dec
pushf
push
repnz
adc
mov
rcrb
movsl
pusha
mov
gs
outsb
push
push
mov
hlt
dec
jle
or
mov
mov
ljmp
xor
add
iret
pop
insl
sub
test
movsl
lret
push
sahf
inc
push
xchg
inc
pop
mov
pop
dec
sti
and
int3
mov
mov
pusha
loop
in
xchg
rcll
jp
cli
jl
shl
mov
pop
xchg
mov
mov
jb
sbb
repz
sbb
pusha
sqrtps
pop
mov
movsb
insl
scas
es
inc
mov
mov
std
jl
icebp
out
mov
mov
pop
sbb
dec
mov
xor
aas
cmp
add
sbb
ja
outsl
jmp
sub
and
bound
ret
popa
loop
adc
jmp
and
lret
fwait
clc
ret
sub
lea
sbb
rcr
nop
je
xor
or
int3
inc
mov
mov
xor
mov
xor
sbb
jb
in
push
inc
out
cmpsl
loopne
add
mov
sti
pop
pop
xorl
mov
je
xchg
adc
movsl
lods
dec
or
jnp
test
adc
adc
jg
jmp
pop
out
push
aas
sub
dec
lea
mov
bswap
and
bound
faddl
scas
loopne
push
sarb
xchg
cmp
and
fldt
andb
xchg
jns
sbb
in
cmp
xchg
jmp
ret
ss
into
repnz
sbb
ja
insl
icebp
pop
call
mov
pop
cmp
adc
mov
adc
jmp
fldt
imul
mov
je
out
das
out
in
xor
loop
lret
stos
mov
lret
cmpsb
dec
pop
add
and
xor
rorb
rclb
sub
enter
mov
out
mov
jnp
inc
dec
mov
pop
pop
or
xor
jl
or
add
jmp
dec
xor
or
jg
push
cmp
mov
cmc
inc
cmp
and
stos
adc
mov
pop
jecxz
stos
mov
sti
xchg
es
ds
jmp
rcll
scas
adc
mov
push
ja
out
or
adcb
fnstsw
mov
cwtl
sahf
or
imul
lret
pop
adcl
icebp
or
push
xor
mov
test
ljmp
add
popa
xchg
jno
mov
mov
dec
jmp
push
cmp
mov
xor
adc
int3
lret
mov
pop
inc
and
xchg
imul
mov
andps
sub
xorb
add
in
mov
lock
repnz
negb
mov
lcall
rolb
imul
aaa
xor
pop
icebp
repz
imul
cmp
xchg
mov
faddl
test
aad
sbb
out
adc
gs
leave
sbb
adc
mov
mov
cld
shll
shlb
push
je
scas
mov
popf
lock
sub
jb
pop
pop
add
hlt
push
fwait
pop
jae
sti
dec
mov
fdivrp
jae
inc
cld
sbb
push
mov
cmc
cmp
xor
lret
or
cmc
cmp
shrl
fdivr
push
push
inc
push
xor
test
adc
das
inc
leave
roll
je
nop
jne
aam
or
pop
pop
shrb
mov
dec
mov
ret
inc
ret
or
cmp
lods
clc
pop
out
mov
mov
xchg
inc
lcall
jg
scas
rorl
in
insl
orb
cmp
and
push
movsb
mov
stos
aas
loopne
in
sbb
push
scas
or
test
jg
les
xor
call
rcrb
mov
movsb
inc
mov
scas
jmp
sub
out
adc
add
std
cmc
dec
jg
mov
xchg
push
out
movsl
out
rcrl
mov
inc
cs
sbb
add
pushf
mov
inc
in
push
cli
inc
xchg
cmc
xchg
mov
fbld
xchg
lock
lret
loop
jmp
aaa
pop
push
scas
pop
divb
movsb
jle
mov
fsubl
mov
adc
stos
xor
addl
inc
fsubs
add
xchg
add
cs
push
lcall
in
mov
int
jbe
sahf
xorl
pop
shl
icebp
push
arpl
mov
cmp
push
dec
bound
push
repnz
xor
dec
aam
mov
mov
mov
cli
xchg
push
push
pop
fcoml
push
mov
rcll
jo
in
push
mov
mov
les
shrb
mull
xchg
and
add
jecxz
pop
sub
test
push
je
out
push
cltd
in
jg
int
mov
sar
pop
cmp
mov
jae
ret
fsubs
lret
imull
out
stos
mov
repz
mov
and
mov
subb
add
nop
mov
sub
and
call
iret
mov
pop
fldcw
stos
aaa
adc
push
jno
sbb
ret
in
fbld
mov
int3
pop
mov
add
dec
jmp
add
fistl
pop
out
jno
loope
and
int3
jmp
mov
xchg
inc
and
pushf
scas
test
jecxz
mov
inc
out
inc
mov
lret
in
sbb
out
dec
scas
in
or
pop
inc
xor
jb
je
lahf
gs
inc
test
lock
and
lret
or
fdivr
ffree
and
call
cmp
out
push
iret
xchg
bound
lods
gs
movb
push
jg
scas
jns
stc
dec
add
lret
fdivrp
data16
jge
lea
test
xlat
mov
clc
inc
mov
or
subl
pushf
cmp
cmp
aam
fldcw
out
repnz
out
or
pop
outsb
push
inc
aad
lock
sbb
nop
out
lock
out
fists
icebp
scas
and
aam
dec
ljmp
js
or
popf
inc
mov
lea
in
outsl
xchg
ds
movsl
paddw
shrb
jbe
rclb
sahf
or
mov
mov
jnp
cmp
inc
data16
ret
push
in
push
mov
movb
dec
jae
jmp
in
fsubs
dec
shrb
js
jae
pop
loope
mov
cmp
dec
loop
outsl
je
mov
push
call
lcall
push
loope
xor
push
sti
xor
lret
jle
popf
push
mov
pop
ljmp
jne
mov
stos
movsb
gs
push
je
push
mov
or
jo
mov
inc
mov
mov
or
sbb
icebp
lret
jno
and
add
mov
adc
andb
dec
push
sub
loope
dec
xchg
es
push
mov
xor
fstp
movsb
mov
sbb
into
dec
add
sub
adc
mov
inc
or
push
mov
dec
out
mov
inc
gs
test
jecxz
adc
loopne
mov
out
lods
adc
test
inc
fidivrs
test
pop
and
xchg
push
mov
test
and
jae
cs
clc
scas
adc
clc
into
pop
push
push
mov
enter
mov
or
pop
pop
jno
mov
mov
sarb
lahf
mov
call
fcompl
pop
fwait
inc
xor
fdivrp
cmp
pop
sub
shrl
xchg
sub
mov
rcrb
and
inc
add
push
push
std
dec
test
test
pushf
lahf
cld
mov
or
or
jbe
mov
rcl
inc
dec
aam
sub
xlat
push
mov
iret
lcall
cmovb
push
xchg
out
cmp
push
pop
mov
gs
add
sub
jo
jb
pusha
rclb
mov
js
lds
clc
rcrb
fs
xchg
negb
pushf
jmp
aaa
mov
and
sahf
or
mov
loope
mov
cmp
outsb
je
pop
in
adc
adc
inc
in
fucomi
sub
adc
hlt
sub
push
mov
cmp
js
ja
aad
mov
das
jb
pop
fnsave
testb
xchg
stos
lods
fdivrs
jnp
adc
leave
ljmp
xchg
ja
lahf
push
adc
mov
mov
or
loopne
mov
ret
stc
lods
jnp
insb
leave
hlt
stos
sbbl
outsb
inc
je
repz
xchg
pop
inc
mov
cmp
outsb
fcomps
mov
adc
xor
add
xlat
adc
adc
ss
in
imul
pop
mov
cmp
pop
stos
les
xchg
sub
leave
sbb
or
dec
or
sub
arpl
push
push
test
xor
sub
push
xor
push
dec
jge
fists
cmp
arpl
cli
or
mov
cmpsl
loope
mov
cmp
movsl
lods
pop
mov
lret
cwtl
pusha
inc
addr16
xchg
int3
push
push
push
outsb
adc
push
and
jecxz
mov
test
fdivl
mov
ljmp
mov
pop
test
or
aam
push
data16
mov
cli
mov
jns
fstps
enter
sbb
lea
sub
aaa
dec
mov
scas
mov
dec
fistpl
adc
xchg
nop
lods
push
jne
xor
gs
xchg
push
pop
loopne
enter
sbb
pop
lock
imul
mov
xchg
cmp
test
mov
pop
cmpsb
push
add
scas
lods
out
xor
sbb
jmp
mov
sbb
cmp
hlt
jecxz
xor
je
sarl
rcrb
fdivrs
pop
mov
sbb
into
and
and
inc
jmp
jbe
std
inc
test
mov
jne
and
pop
rorl
ljmp
xchg
inc
mov
lea
and
sbb
dec
jae
cmc
inc
inc
cs
dec
mov
jle
scas
popa
icebp
leave
loop
xchg
pop
jne
cli
and
ficoms
pop
pop
repz
push
fidivs
iret
jmp
fistpl
sti
dec
into
hlt
pop
icebp
push
mov
cmp
scas
daa
mov
mov
loope
or
mov
clc
inc
or
fmull
and
and
jmp
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
sub
xchg
xchg
addb
enter
dec
mov
and
pop
test
fimuls
and
dec
into
pop
dec
popf
movsb
bound
roll
es
lret
pop
addr16
and
xor
mov
in
jg
and
popf
dec
in
xchg
sub
or
int3
sub
divb
pop
mov
add
mov
mov
jbe
jae
sub
repz
inc
adc
into
mov
add
mov
sbb
fsub
mov
add
and
mov
aaa
mov
mov
enter
das
faddl
repnz
pop
repz
sub
fidivs
shrl
mov
pop
sbb
test
inc
ja
mov
dec
xchg
movsl
dec
sahf
sti
cltd
shlb
xchg
aad
xchg
or
fcmove
jns
addr16
cmc
jg
ret
xor
ret
xadd
cmp
pusha
sbb
or
insl
add
or
lods
test
mov
pop
jmp
xchg
mov
les
xlat
sbb
push
add
mov
dec
lds
cld
push
ja
testb
and
test
adc
sub
int3
push
lahf
pop
pop
stc
es
pushf
loope
pusha
add
sbbl
add
lret
jbe
and
push
mov
fcompl
dec
lret
pop
inc
push
in
dec
pop
mov
popf
sub
dec
mov
mov
lods
je
icebp
or
and
xchg
dec
into
js
outsl
pop
das
test
jmp
xchg
mov
stos
dec
push
push
ret
xor
imull
cmp
push
jae
pop
lret
ret
ficomps
orb
adc
repnz
pop
je
push
aad
or
in
leave
nop
test
and
sub
jbe
lret
fsubl
xchg
cmp
mov
xor
lock
ret
sbb
movsl
fnstsw
push
cli
xor
jb
jmp
jmp
mov
jns
or
push
cli
mov
test
aaa
fsubrl
inc
cs
cwtl
insb
lods
call
bound
aam
adc
mov
rcrb
adc
cmp
andb
mov
push
inc
aaa
push
ret
fidivrl
sub
xchg
std
jmp
test
les
jno
cmp
sbbl
dec
mov
mov
std
rolb
xor
imul
in
sbb
lret
add
filds
xor
movsb
pop
jo
sub
pop
and
jp
push
or
mov
int
cld
xor
mov
xor
adc
pop
sbb
xchg
jae
int
mov
cmp
and
mov
movsb
imul
cmc
xchg
dec
mov
jecxz
imul
add
xor
movsb
mov
lea
xor
pusha
inc
inc
sub
add
cmp
in
ljmp
or
cmp
aas
push
hlt
jns
es
iret
adc
dec
pushfw
clc
pop
lea
push
imul
sbb
xchg
paddsb
inc
bound
jnp
jge
jbe
push
mov
inc
lret
jo
leave
enter
jl
aaa
jne
inc
mov
sub
inc
push
mov
cltd
test
mov
fs
gs
xchg
insl
in
xchg
pushf
or
inc
test
mov
iret
mov
and
xchg
dec
push
pop
sti
pop
cld
enter
pushf
cmp
jne
mov
mov
into
mov
adcb
imul
test
mov
sbb
loopne
jno
jl
sbb
sub
data16
mov
enter
jmp
sub
int
das
xchg
inc
push
ss
mov
lcall
decb
jo
icebp
adc
ret
out
div
movsl
out
and
dec
mov
sub
cmc
mov
adcb
in
dec
jne
icebp
jmp
mov
cmp
ret
and
xchg
xchg
leave
aam
addr16
std
mov
sub
and
inc
test
lods
jle
add
scas
js
insl
or
jp
push
call
sub
in
dec
adcb
xlat
int3
shlb
jns
inc
cmp
addr16
ds
sub
repz
xor
insb
xchg
add
cs
pop
repz
ret
pop
icebp
into
mov
std
pop
jge
pop
cmp
outsl
sbbb
lock
add
mov
push
push
mov
cmp
mov
ficomps
out
rcrl
jno
add
aaa
addl
in
repnz
and
add
add
scas
popa
rorb
xchg
or
ret
pop
mov
and
inc
fldl
daa
or
mov
jecxz
inc
cld
into
nop
mov
or
addl
pop
mov
dec
fdivrs
mov
jp
cmp
push
xor
or
out
lods
push
and
test
dec
mov
mov
jg
or
push
inc
xorl
jns
or
mov
fnstcw
jmp
shlb
jb
jo
adc
xchg
call
mov
aad
jne
js
adc
jbe
fidivrs
insb
or
mov
cmpsb
jns
dec
clc
sti
or
fldenv
cmpsb
inc
ror
outsl
pop
inc
shlb
call
cmpsb
pusha
lods
jle
lea
cmp
lcall
add
xor
mov
es
std
out
arpl
pusha
xchg
setb
jge
fisubs
or
push
dec
daa
jo
inc
lock
js
and
dec
push
aaa
pop
clc
cmpsl
mov
loopne
push
leave
test
jge
sub
enter
fcmove
add
cmpsb
mov
dec
or
pop
subb
and
sub
mov
push
xchg
push
into
loope
leave
jp
test
lret
in
movsl
nop
aas
sub
inc
adc
cmp
sub
scas
adc
and
out
mov
pop
dec
cmp
xchg
push
jge
int
pushf
push
movsb
shrb
leave
cli
bound
imulb
pop
out
jns
jl
shlb
lods
movsb
and
iret
pushf
jg
test
lods
push
mov
xchg
ljmp
jo
sti
test
out
jp
dec
pushf
push
cs
adc
sub
jno
aas
jle
fistpll
lea
in
cltd
daa
xchg
fcompl
lods
push
faddl
int
cmp
fsubs
pop
ljmp
mov
dec
repz
xor
rolb
xchg
mov
ljmp
jg
hlt
dec
gs
inc
int3
cmpsl
push
fcmovnu
outsb
loop
sahf
pop
jle
int
in
xorb
mov
jl
mov
in
mov
inc
pop
and
jecxz
clc
pop
fcomps
jle
movb
cmpb
in
stos
insb
jns
and
push
rorl
rol
mov
int
out
jmp
in
mov
pop
or
xchg
adcl
adc
adc
ss
cmp
mov
inc
mov
mov
sbb
aas
add
jle
push
cmp
push
add
lods
adc
jnp
lcall
xchg
test
lock
aam
push
icebp
mov
xchg
insb
adc
xchg
cmpsb
lahf
mov
xor
pop
and
jns
test
jb
int3
aad
shll
xor
dec
cmp
repz
mov
or
aaa
sbb
cmp
xor
cs
cmp
fs
repz
sbb
push
xchg
iret
sub
scas
add
popa
scas
aam
sbb
or
insb
aas
pslld
add
movsl
aaa
dec
shl
and
sub
lea
dec
sbb
lea
jne
add
and
in
mov
repnz
rdmsr
call
jno
ljmp
add
inc
jns
pop
sbb
aaa
daa
sub
test
repnz
jmp
xor
imul
mov
cmp
push
fidivrs
enter
daa
mov
ficomps
pop
fiaddl
adc
xchg
sub
icebp
pop
lods
sbb
into
push
scas
jge
iret
mov
fldcw
adc
and
mov
aam
xchg
pop
imul
inc
xor
cwtl
inc
addb
leave
shr
js
push
test
cmp
push
cwtl
fiaddl
fwait
lock
and
lods
out
inc
scas
xchg
jecxz
repnz
add
jns
add
mov
pop
hlt
repnz
lock
into
mov
insb
or
mov
test
out
sbbb
pop
pop
add
cmp
inc
jmp
hlt
shlb
out
jno
lock
mov
sub
bound
jge
jb
mull
sbb
cmpps
lods
insl
cli
add
cmp
and
test
sbb
aam
xchg
and
sbb
aas
popa
scas
jge
mov
xor
or
popf
ret
lahf
imul
not
xlat
jg
sub
enter
sbb
jmp
mov
xlat
rorb
push
cmp
stc
cltd
loop
ret
imul
mov
lret
stos
sub
call
sub
inc
mov
sub
popf
jecxz
fcmovb
and
mov
jl
fs
add
inc
mov
adc
popf
push
lcall
and
xchg
jp
fstl
adc
jne
push
dec
std
adc
pop
sbb
fwait
mov
xchg
push
add
mov
and
imull
scas
push
cwtl
mov
andb
dec
enter
cmc
mov
test
mov
mov
dec
enter
mov
hlt
mov
add
pop
or
out
cmp
adc
push
mov
mov
mov
mov
sub
cmp
repz
movsb
push
xchg
cmpsb
sbb
xchg
mov
enter
push
filds
in
jnp
loope
dec
sbb
push
add
out
dec
adc
fdivs
jl
adc
pop
inc
aad
ds
sbb
fdivp
push
jne
xor
or
xchg
pop
push
pop
lea
sub
add
pop
lock
nop
jg
gs
xchg
hlt
cmp
push
shrb
jbe
jle
daa
in
psraw
mov
lcall
jecxz
mov
xor
push
daa
xlat
mov
xchg
mov
stos
mull
dec
aaa
out
adc
mov
orl
mov
adc
ds
out
pop
push
add
fs
fdivr
roll
fadds
gs
je
mov
mov
inc
outsl
or
jno
xchg
outsb
fdivl
loop
xor
inc
out
inc
xchg
add
mov
and
scas
xchg
xchg
test
sbb
push
or
inc
push
pusha
mov
mov
or
inc
push
jl
sub
hlt
into
bound
mov
xchg
push
fbstp
and
insb
orb
fcmovb
jl
movsl
sarl
and
jp
jmp
jnp
dec
push
or
rcll
pop
cmp
in
in
pop
add
sbb
xchg
or
dec
cmp
insb
push
cli
out
pop
pop
add
or
int
test
out
daa
in
test
test
loopne
xor
fwait
lret
jb
pop
mov
jo
jmp
and
fsubrs
repz
sub
jl
test
mov
iret
and
and
push
std
mov
cs
out
mov
mov
mov
std
mov
nop
push
or
and
adc
orb
mov
xor
frstors
das
test
pop
movsl
cmp
ret
xor
pop
xchg
imul
jbe
lcall
out
mov
pop
cmp
fcmovnb
xchg
adc
cmp
or
pusha
inc
push
inc
jo
jg
in
cmpl
xchg
add
push
rorl
call
in
insb
jl
mov
sub
lcall
and
push
pop
mov
pusha
es
fstps
into
lock
jge
sub
js
push
xchg
rcrl
inc
scas
fsub
movsb
cmp
push
fsubrs
test
sub
insl
mov
pop
es
cmp
push
aaa
pop
cli
jle
and
shl
sar
xor
mov
mov
into
sbb
mov
jbe
push
add
inc
and
sti
adc
or
push
lret
dec
sbb
jnp
pop
pop
inc
inc
addr16
popa
clc
mov
add
push
cltd
test
lds
movsb
and
adc
ss
dec
test
shl
xor
mov
mov
sub
xchg
sbbl
xor
leave
into
pop
adc
or
lods
andb
lds
lcall
push
jnp
xchg
push
mov
movsb
int
ds
mov
mov
lds
inc
adc
inc
jmp
movsl
stos
xlat
inc
pop
pop
mov
cmpsl
jg
clc
pop
ljmp
mov
into
test
inc
loope
ljmp
dec
popf
movb
jp
mov
jmp
push
call
test
fs
adc
pushf
cmpsl
or
mov
jl
int3
mov
xor
cld
insb
or
mov
out
sbb
sahf
je
rcrl
iret
shlb
loopne
jo
jmp
xchg
push
sahf
fdivs
mov
inc
inc
sarb
sub
xor
bound
inc
dec
mov
out
adc
out
lock
add
call
add
push
cmpsb
loopne
roll
call
int3
sbb
xchg
jbe
ret
inc
pop
stc
shlb
movsl
dec
into
out
add
push
jo
fbld
int3
add
inc
leave
mov
jp
into
mov
jl
les
int
movsl
dec
sub
xchg
rclw
pop
es
or
int
xchg
leave
mov
pop
lret
mov
mov
decb
mov
inc
mov
and
mov
pop
push
popf
iret
mov
mov
mov
in
fcmove
dec
xchg
ss
push
rolb
mov
clc
mov
sti
xor
andl
scas
or
push
sub
add
mov
pop
and
xchg
test
int3
insl
movsl
push
lock
sbb
out
mov
dec
adc
sub
daa
inc
fwait
mov
mov
jmp
ljmp
jo
jge
scas
movsb
dec
shl
popa
pop
lret
xchg
jbe
test
jb
lds
scas
lret
push
cld
mov
imul
inc
or
das
repnz
xlat
in
mov
mov
xchg
jbe
push
leave
dec
lea
inc
aad
xor
sbb
push
push
sub
push
jcxz
push
or
mov
fdivrs
jle
call
pop
fcom
leave
sub
ffreep
adc
popa
push
movsl
add
int3
jecxz
icebp
scas
push
mov
icebp
in
pop
dec
loopne
sub
or
test
sbb
cld
dec
sbb
jb
jo
push
sbb
insb
cld
out
sbb
fisttps
mov
enter
cmc
fwait
out
xor
inc
xchg
loope
sbb
xor
loope
stc
lahf
inc
repz
push
cmp
in
push
mov
push
fadds
dec
shll
insb
dec
or
fisttpl
mov
mov
pop
nop
mov
pushf
iret
leave
andb
mov
jg
data16
sahf
mov
mov
and
int3
pop
xchg
stc
pop
loope,pn
scas
push
push
push
mov
cmp
mov
push
out
loope
int3
cmpsl
adc
into
fcoml
hlt
mov
sbb
mov
rcrl
cmp
shr
pop
fdivl
pop
mov
pop
cmp
jl
pop
fs
xchg
lret
inc
xchg
jns
popl
mov
dec
jb
or
cld
cmp
sub
mov
sbb
xchg
ljmp
mov
enter
stos
xor
hlt
lahf
aaa
fdivrp
jae
mov
adc
int
ja
mov
out
cmp
adc
fimuls
fistpll
xchg
dec
stos
add
mov
out
add
sub
cmp
aam
xchg
mov
jecxz
pop
or
push
fs
jns
or
cmpsb
inc
push
mov
jge
lret
pop
cmp
sbb
push
cld
mov
mov
adc
ljmp
or
pusha
sbb
fildll
lock
mov
adc
daa
mov
enter
adc
nop
outsb
mov
mov
push
push
push
movsl
push
dec
sbb
dec
mov
pop
mov
imul
cmc
push
cmp
aam
dec
mov
fs
and
jb
mov
or
dec
les
mov
bnd
fmuls
add
insl
push
push
loope
sbb
adc
out
and
stc
jo
dec
scas
push
cwtl
in
pop
push
xchg
sbb
add
xchg
mov
idivl
lret
pop
pop
mov
and
mov
pop
adc
stc
xor
xchg
mov
inc
add
push
ret
inc
sub
icebp
data16
xor
test
mov
movsl
or
push
dec
stos
sbb
jmp
ljmp
lods
push
data16
jp
mov
dec
add
loop
cli
inc
cmp
les
jo
imul
mov
or
add
incb
mov
pop
push
gs
xorl
pop
hlt
cmpsl
cmp
add
xor
dec
jg,pn
sub
xchg
imul
in
xchg
jb
xor
sbb
arpl
pop
es
mov
push
enter
pop
and
pop
pop
inc
imul
stos
mov
pop
and
add
pop
ss
sbb
aaa
add
and
and
xchg
fninit
cmp
mov
outsl
pop
out
test
push
xor
insb
adc
xor
fmuls
or
fcoms
enter
test
fldl
and
adc
icebp
push
mov
inc
fidivs
dec
fisubrs
mov
push
mov
xor
or
cmpsb
push
add
imul
das
xchg
mov
fdivrp
movsl
scas
mov
mov
inc
fistps
pop
idivb
and
sbb
mov
mov
out
mov
test
out
dec
mov
loopne
loope
pop
and
jae
sahf
or
fwait
insb
push
mov
or
fistl
push
pop
xor
movsb
repnz
mov
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
cmp
dec
add
add
add
add
add
add
dec
add
add
add
push
push
inc
push
les
and
dec
mov
xchg
inc
flds
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
