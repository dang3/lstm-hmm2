push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
sti
sub
jle
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
sbb
call
adc
lods
mov
push
mov
xlat
iret
jg
xchg
movsb
add
cwtl
mov
gs
xor
adc
adc
aad
negl
cs
mov
dec
fstpt
lcall
cmp
ja
mov
xor
inc
mov
je
jp
and
call
test
dec
or
mov
push
out
push
mov
mov
and
lea
outsl
sti
mov
shll
sub
adc
mov
movsl
dec
sbb
popa
jnp
test
das
mov
or
mov
mov
xor
mov
pushf
mov
jo
dec
xchg
test
mov
mov
dec
cmp
or
stos
pop
cld
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
pop
aam
mov
jg
jle
jg
jle
push
fbld
mov
in
adc
aas
mov
fcoms
call
jns
fisttps
cmp
ljmp
icebp
into
dec
in
dec
pop
sub
cmp
das
arpl
dec
inc
jge
rcl
push
popa
lds
jns
jmp
mov
xchg
dec
xchg
je
sarb
in
or
push
daa
mov
xchg
pop
mov
fwait
roll
mov
and
jmp
cltd
arpl
pop
mov
icebp
sub
adcl
mov
adcl
xchg
int3
push
mov
cs
mov
roll
and
and
mov
or
jp,pt
stos
adc
fs
bound
aam
addl
jmp
lret
test
decb
out
aad
lods
pop
aas
mov
adc
push
xchg
jl
shlb
jl
dec
mov
mov
cmp
rcll
dec
iret
pop
fiadds
and
cmp
sbb
dec
jnp
repz
scas
imul
leave
leave
sahf
loop
mov
pop
loop
adc
enter
lds
adc
vpcmpgtw
std
adc
nop
sub
outsb
lahf
fwait
push
inc
js
cltd
cmp
mov
jecxz
xlat
mov
push
data16
loop
jg
mov
jbe
arpl
push
dec
pop
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
cwtl
push
jge
jle
jg
jle
xor
dec
lea
sarl
bound
or
aad
fildll
xchg
xlat
nop
cs
outsl
pop
mov
outsl
push
inc
jne
pushf
mov
cmp
push
dec
outsl
pop
pop
mov
icebp
sbbl
test
cmp
inc
into
clc
mov
jle
pushf
pop
addr16
cwtl
sbb
mov
adc
xchg
push
cmp
or
push
cmpsb
sbb
fmull
in
stc
out
mov
ds
adc
fnstsw
dec
cmpsl
nop
mov
repz
ljmp
sub
test
sub
push
push
push
xchg
push
movsb
push
stos
cmp
loope
xor
xchg
push
sub
xor
push
nop
ljmp
int
arpl
and
add
sbb
mov
loopne
sub
in
cli
cmp
hlt
out
xchg
daa
pop
jmp
std
mov
jecxz
loop
or
in
or
xchg
fnstsw
push
pop
bound
fildll
xchg
mov
fdiv
ljmp
popf
rolb
arpl
into
dec
cmp
jo
aas
push
lea
je
fistps
mov
out
cmp
loopne
jnp
mov
push
or
lea
push
sub
idivl
sbb
push
sbb
cli
jo
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
xchg
sti
cmpb
cli
jg
jle
dec
push
fmul
les
mov
adc
lock
mov
sarb
int
push
dec
fstps
mov
and
nop
lret
rcr
add
add
int
or
imul
test
mov
xor
int
lds
pop
addr16
outsb
add
mov
sbb
rorl
ja
mov
pop
xchg
sub
cmp
mov
out
jae
test
loop
mov
in
sub
xlat
push
pop
cltd
sub
xchg
ds
mov
mov
and
test
mov
push
ja
xor
test
sub
dec
adc
fldl
in
mov
mov
stos
and
cmp
pop
daa
jmp
push
outsb
fidivs
or
cmpl
cmpsb
ficompl
rcll
mov
mov
sbb
xor
filds
int
shlb
aaa
call
shll
lock
dec
shrb
sbb
inc
out
sub
adc
xor
mov
mov
mov
call
sub
fcmovu
dec
leave
fcmovnu
mov
cli
insb
mov
and
and
cld
cmpsl
xchg
in
cmc
sbb
push
test
cmp
mov
cmp
mov
jmp
xchg
mov
push
jo
adc
dec
imul
cli
jg
jle
lahf
mov
push
movsl
pop
mov
add
divl
es
psllq
outsb
aam
mov
fists
jae
enter
arpl
inc
pop
xor
in
pop
or
or
push
stc
cmp
pushl
addr16
pop
jmp
pop
cli
adc
out
xchg
std
xor
xchg
cmp
std
push
and
mov
push
mov
mov
fwait
insb
scas
sbb
test
fnstsw
push
inc
out
stos
rcr
push
shlb
inc
cmp
lret
or
cmp
pop
pop
out
rorl
jmp
cmpsl
shll
mov
loop
jbe
push
pop
aad
inc
pop
xor
xchg
xchg
or
sub
xor
sub
mov
stc
out
adc
fdivp
rcrl
mov
aam
shlb
push
add
fistl
sarb
stos
mov
lods
inc
adc
ficoml
xchg
push
mov
rcl
js
push
mov
sbb
xchg
jne
out
sub
loope
jmp
xchg
xchg
add
and
and
push
xor
les
sbb
sbb
mov
dec
dec
inc
es
xor
inc
inc
xchg
dec
jmp
xor
lret
inc
mov
sbb
pop
xchg
cld
adc
push
cmc
es
add
lea
inc
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
pop
imul
mov
jle
jg
jle
jae
fcmovbe
push
pop
aam
mov
and
in
mov
outsl
add
or
test
push
push
outsl
mov
or
mov
and
leave
and
fistps
sahf
aam
or
divb
gs
cwtl
shrl
sbb
mov
cld
adc
out
push
scas
jmp
pop
ficompl
pushf
jo
mov
push
cmp
xor
push
xchg
pop
daa
push
add
ljmp
les
jle
repnz
pop
pusha
test
std
sub
dec
std
inc
jnp
ss
repnz
xor
fsubrl
test
pop
ss
stos
push
add
or
sub
pop
ja
pop
or
mov
mov
orl
push
push
cmp
inc
dec
ffreep
mov
enter
jle
loopne
movsb
inc
xchg
notl
adc
popf
and
push
and
fsubrl
aas
sub
shl
jb
je
add
cmpsb
push
fistps
xchg
cmp
dec
lds
xchg
adc
cmp
cmpsl
push
shll
iret
mov
xchg
ljmp
in
push
sbb
in
mov
popf
sbb
mov
dec
test
arpl
scas
mov
insb
dec
sub
mov
mov
jecxz
mov
mov
xchg
fsubrs
cmpsb
sbb
movsb
scas
in
pop
loope
pop
cmp
insb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
movsb
push
pop
jle
cli
jg
jle
testb
sbb
jns
or
xchg
ret
xchg
inc
push
not
out
push
vmwrite
jno
imul
ss
mov
jb
dec
add
in
dec
or
mov
sub
lret
xchg
fldenv
adc
xchg
fcos
outsb
cs
push
mov
shll
pop
dec
fsub
adc
loopne
into
push
xor
sbb
adcl
scas
aam
push
dec
push
push
jae
jp
stos
cwtl
outsb
xlat
xchg
push
dec
push
out
inc
rorb
movb
mov
and
mov
inc
jle
xor
sbb
jns
sbb
cmp
divl
or
inc
cmp
mov
adc
bound
xor
cmpl
xchg
aad
lods
sub
xchg
cmp
loopne
clc
xlat
mov
sbb
sub
cli
shlb
and
std
fwait
xor
dec
or
sbbb
icebp
dec
ds
adc
in
push
dec
mov
ss
sbb
mov
mov
js
rolb
cltd
sub
adc
sbb
sbb
popf
xor
jne
in
fidivrs
xchg
fdivrl
mov
pop
xor
xchg
repz
inc
mov
inc
cmp
pop
sti
sbb
or
sahf
pop
in
das
pop
jecxz
dec
adc
dec
lret
sbb
inc
mov
pushf
xor
push
dec
xor
or
xor
cwtl
sbb
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
jmp
pop
iret
fldl
loope
pop
les
lret
mov
and
mov
scas
mov
sahf
stc
dec
addr16
xor
pop
data16
lret
push
fbld
popa
adc
dec
xchg
sbb
shl
mov
in
pop
xchg
fwait
add
pop
sbbl
xor
arpl
into
jmp
lods
loop
hlt
lods
pop
or
sti
cltd
push
jne
cmp
lock
mov
cmpsl
mov
sbb
iret
mov
or
fistps
add
addl
clc
adc
sti
dec
aam
int
out
jg
xor
stos
arpl
or
ret
orb
bswap
sub
cmp
xchg
pusha
jo
fwait
sbb
mov
mov
xchg
mov
jge
cmp
xor
inc
fs
xor
pop
jbe
dec
fisttpl
cwtl
jnp
clc
mov
rol
mov
sbb
mov
xor
xchg
jg
shrb
push
nop
push
push
dec
fisubrl
fdivrs
jb
pop
dec
test
or
ret
movsl
fwait
mov
sbb
add
jl
rcr
jl
loopne
jns,pt
and
push
mov
pop
testl
jb
pop
ret
and
movsl
dec
ret
jae
or
pop
jno
push
xchg
sub
add
jmp
cmc
dec
and
jno
push
mov
push
pop
and
jg
jle
adc
dec
outsl
out
mov
nop
xor
cmovns
inc
sar
out
dec
shrl
xchg
or
icebp
inc
or
and
int
or
loop
test
push
out
outsb
jmp
xorb
cmovle
je
sbb
shll
stos
repz
cltd
push
fstl
xor
fidivs
cld
imul
sbb
test
sti
outsl
mov
mov
in
test
push
adc
insl
in
jmp
jbe
cmp
in
movsb
jmp
stos
fnsave
sbb
jge
and
shl
hlt
int
adc
dec
and
out
xor
pop
daa
dec
aas
fwait
hlt
orb
in
pop
addl
das
cmp
std
movl
xor
insl
sub
pop
inc
lret
ffreep
dec
ss
repnz
push
inc
pop
sub
fwait
mul
mov
fcomps
xor
push
pop
fldcw
xchg
subl
into
test
pop
pop
jns
add
add
clc
lret
mov
aad
xchg
push
lods
sarl
or
dec
push
pop
push
mov
insb
or
pushf
aad
xchg
loop
cmpsw
mov
and
pop
nop
pop
cmp
pop
push
hlt
sub
cmp
pop
inc
testl
sbb
mov
xchg
cmp
xchg
popa
push
or
xor
pop
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
into
into
jne
lcall
jle
pop
push
pusha
fsubl
and
lret
xchg
lret
jmp
xor
test
add
dec
adc
bound
popf
shll
push
and
outsl
and
lret
push
xchg
out
out
fs
sub
sbbb
jle
xchg
fstpl
jae
pop
shr
sbb
sti
verw
mov
out
jb
cmpl
inc
and
jns
subl
fwait
xor
sete
mov
loope
dec
mov
mov
stos
ss
cmc
lds
sub
add
je
cmp
cs
fldenv
mov
and
fisttps
bound
fcmove
or
xchg
mov
aam
push
fcomps
cmp
shlb
sub
add
aaa
xor
shll
imul
stos
out
mov
out
sbb
and
fildll
lock
rcrl
jl
sub
stos
decb
adc
rolb
lret
jp
stc
and
popf
test
gs
inc
inc
lret
cmp
push
mov
lea
cmp
pop
xchg
scas
sub
mov
adcl
lea
mov
and
jmp
mov
fdivrs
daa
addl
or
fwait
shl
push
sbb
sbb
outsl
adc
add
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
ja
cmp
cli
jg
jle
jb
roll
fdivrl
lahf
push
inc
roll
sbb
xchg
sbb
sub
bswap
scas
std
mov
adc
xchg
pusha
mov
mov
dec
addb
and
pop
lods
jne
or
or
int3
roll
jo
dec
hlt
mov
popf
dec
mov
push
jl
sbbl
or
sub
scas
pop
popf
dec
aam
adc
enter
imul
insl
cmc
in
xor
xchg
arpl
adc
pop
pop
jbe
out
mov
ficompl
xchg
adc
std
aad
jmp
dec
add
std
or
hlt
pop
add
inc
int3
es
data16
and
stc
lea
xor
pmulhuw
xor
mov
mov
stc
inc
sub
divb
push
mov
lahf
dec
loope
addr16
push
in
dec
jne
xor
loop
loop
inc
nop
push
ret
dec
xchg
mov
jl
out
mov
xlat
jns
dec
push
add
lret
xchg
and
fistpll
adc
jge
and
sbb
cmc
sub
js
mov
mov
pop
adc
cld
pop
ffreep
lods
mov
dec
or
sub
lret
movsb
sbb
out
sbb
addr16
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
insb
dec
cmc
dec
mov
jg
jle
or
ds
mov
fbld
push
push
mov
cld
cli
mov
shl
mov
inc
add
dec
mov
pop
in
inc
sar
pop
or
ret
mov
mov
mov
clc
loop
mov
pop
and
push
enter
stc
test
ror
movsl
mov
shlb
mov
mov
inc
mov
adc
call
enter
add
mov
mov
sahf
dec
fisttpl
jb
sub
fbstp
mov
mov
data16
lcall
in
std
mov
push
xabort
xor
push
sub
and
enter
inc
stos
fdivrs
add
testl
out
lahf
aaa
xor
test
insl
inc
inc
adc
xchg
ret
mov
ljmp
mov
fdivr
push
and
cmp
sbb
fbstp
jg
mov
xchg
sahf
xor
scas
sbb
shll
arpl
repz
push
push
mov
dec
negb
dec
dec
pop
insl
and
jl
sub
cmpsl
xchg
adcb
mov
cmp
and
out
into
add
mov
jg
and
push
lock
dec
sahf
sub
pcmpeqw
lret
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
mov
iret
cs
jle
jg
jle
es
shlb
lret
push
repnz
enter
pop
mov
into
pop
adc
imul
ret
pop
mov
jbe
hlt
jns
adc
rcrb
cmp
or
call
push
adc
jge
outsb
jecxz
xor
mov
jge
shl
fs
je
aas
pop
std
mov
mov
lods
cmp
sub
hlt
add
call
jo
cwtl
push
xchg
les
and
icebp
test
ljmp
xchg
shl
xlat
cmp
popf
rclb
mov
icebp
inc
in
mov
je
in
push
push
pop
inc
sti
inc
jmp
lahf
popa
mov
push
sbb
enter
jne
js
mov
ret
fcoml
mov
add
jne
dec
fs
sub
aaa
pop
push
ja
xor
in
ss
mov
fldt
in
adc
loop
jl
add
fadds
xchg
flds
test
mov
addr16
jle
jo
cmpl
test
xor
in
jbe
andb
sbb
daa
push
mov
cmp
das
push
add
out
iret
jae
es
lods
frstor
test
hlt
imul
jle
xchg
das
xor
cmpsb
dec
xor
popf
je
lahf
rorb
iret
mov
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
insl
adc
jle
jg
jle
iret
cltd
aam
and
lret
lahf
xchg
cltd
push
dec
xor
gs
push
xchg
rcl
in
enter
in
hlt
push
repz
nop
cmp
rcr
ret
pop
mov
inc
inc
popf
int3
sbb
subl
scas
js
dec
dec
xor
test
outsl
repnz
dec
sti
and
stos
out
push
mov
data16
insl
ficomps
sbb
lock
daa
jle
out
and
or
sahf
mov
stos
adc
lret
std
mov
mov
popf
out
orl
sbb
pop
aas
scas
incl
stos
lea
lods
jno
fldl
hlt
add
mov
pop
push
dec
in
in
push
test
aaa
mov
bound
rcl
and
xchg
sti
mov
in
rolb
xchg
jle
jno
mov
in
popf
push
jl
in
xlat
pop
lea
sti
push
push
adc
loope
int
xchg
xlat
sub
adc
xchg
arpl
out
int
ucomiss
sbb
and
fldcw
mov
out
xchg
or
mov
jmp
sti
fsubp
pop
mov
movsb
icebp
fnstcw
rorb
enter
outsb
xchg
mov
push
pminsw
into
subb
in
adc
movsb
cwtl
daa
mov
xchg
adc
adc
lea
xchg
lds
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
out
sub
or
cli
jg
jle
push
inc
loopne
mov
mov
je
push
sti
addb
mov
subb
adc
xchg
mov
xlat
in
push
lods
pop
sbb
adc
cmpb
and
movsl
xchg
sub
inc
out
jae
and
imul
sub
shll
dec
out
fisttps
into
outsb
pop
jae
pushf
adc
xor
dec
cwtl
mov
andb
inc
mov
mov
repnz
mov
dec
add
stc
add
insl
popa
lcall
xchg
jg
ds
in
popa
push
add
xor
inc
mov
mov
cmp
sbb
iret
jmp
movsl
call
adc
ret
mov
mov
dec
or
mov
lret
out
pop
loope
test
and
iret
into
mov
outsb
bound
add
test
int3
fmull
mov
fmuls
insb
loop
loop
jno
ss
xor
je
xor
push
out
mov
ss
adc
cmp
fidivl
int
pop
pushf
repz
je
mov
lahf
ss
mov
mov
xor
xchg
js
jns
outsb
pop
andl
out
outsb
mov
jg
jecxz
daa
test
pop
outsw
dec
popf
push
push
insb
push
out
out
dec
popa
xchg
mov
xor
mov
sbb
jo
mov
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
inc
dec
mov
jle
cli
jg
jle
pop
mov
and
jle
aam
bound
xor
ret
cmp
inc
jns,pt
sub
inc
loopne
sub
mov
mov
cmp
inc
clc
test
fldt
push
sbb
bound
xor
pop
mov
test
scas
ss
mov
ds
mov
add
les
pop
jae
ret
shrb
and
es
jno
and
sbb
jge
push
pusha
fistpl
fiaddl
pop
dec
shlb
mov
mov
cmpsb
popa
stos
icebp
gs
xor
insl
dec
gs
iret
cmp
jmp
inc
pop
inc
out
cmc
out
repz
into
cli
popf
xchg
sbb
ficoms
pop
orl
push
push
movsb
cmp
enter
mov
adc
sbb
cmc
lods
leave
out
push
fstl
add
orb
jno
push
jb
push
dec
in
data16
jo
xor
in
xor
out
mov
inc
xor
dec
add
or
and
sarl
push
popa
daa
dec
jbe
aas
mov
rcll
lds
lds
xor
mov
dec
cmpb
jbe
mov
sbb
mov
or
mov
cmpsb
sahf
adc
jno
fidivrl
cmp
call
dec
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
mov
jle
jg
jle
mov
sarl
mov
das
or
mov
setne
sbb
scas
int
mov
mov
fidivl
xchg
push
mov
es
and
ss
adcb
inc
add
cmpsb
shlb
test
data16
outsl
pop
std
rcll
or
cmp
mov
pop
enter
outsl
nop
ja
in
out
mov
movsl
xchg
fimuls
mov
pop
push
push
divb
inc
enter
fst
bound
xor
js
jecxz
and
mov
in
cmpsb
xchg
in
push
push
loope
push
test
mov
adc
xor
adc
sbb
sbb
xor
fidivrl
push
xor
sbb
push
outsl
jnp
popf
xor
xor
push
pop
add
cmc
xchg
out
add
add
divl
mov
xchg
dec
loope
sbb
call
daa
ja
mov
push
or
jmp
jns
inc
pop
rcl
xor
sbb
sbbb
or
imul
call
cmpsl
cltd
in
add
pusha
xor
inc
xchg
iret
cmp
cli
pop
mov
repz
xchg
dec
or
cltd
fcompl
notl
arpl
popa
mov
inc
enter
cmp
add
pop
jmp
add
mov
adcb
hlt
mov
jg
jle
and
cmp
jg
jecxz
test
sahf
add
pop
or
adc
sub
inc
pop
cltd
sti
popa
fildl
movsl
mov
test
cmc
or
sbb
subb
mov
cs
cmpsb
lock
inc
lret
orb
mov
addr16
daa
mov
std
jns
mov
scas
pop
xchg
sub
sub
ljmp
js
repnz
lods
mov
cld
sahf
andl
addb
nop
add
daa
cmp
cmp
daa
inc
arpl
lds
ljmp
jecxz
nop
mov
jns
ja
push
aaa
xlat
sbb
fsubp
and
stc
lret
push
popf
outsl
xor
dec
dec
jnp
push
sbb
pusha
das
sub
repz
and
loope
fcmovnb
repz
cmpsl
andl
xor
adc
mov
xchg
ffreep
icebp
cmc
or
mov
or
into
lods
xchg
test
lock
add
sbb
push
ret
dec
push
mov
ss
inc
mov
pop
jge
mov
or
push
insb
adc
push
cmp
pop
imul
pop
dec
pop
push
lahf
mov
outsb
imul
cmpsb
imul
sub
mov
test
xchg
jns
movsb
xchg
pop
adc
push
lret
sarl
sbb
dec
jl
lcall
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
shrb
pop
jl
jle
stos
adc
sub
lcall
jo
jl
sbb
xchg
mov
dec
push
mov
iret
and
jecxz
sti
xor
cmc
xchg
int
mov
movsb
lods
jg
add
out
aam
cmp
sbb
leave
test
pop
in
cmc
xchg
inc
roll
addr16
xchg
add
lret
outsb
inc
insb
add
inc
and
xlat
into
sahf
ds
xor
or
xchg
leave
sbb
movntq
je
outsb
fildll
popa
push
sbbb
cmp
cmpl
pop
push
pop
test
sub
push
dec
pushf
pop
mov
nop
mov
push
push
mov
dec
mov
test
ret
xchg
daa
cs
xorb
mov
sub
inc
int3
repz
mov
add
mov
lahf
cmpsl
int3
stos
fcompl
enter
pop
in
sub
push
xor
jae
mov
cmp
enter
push
test
sub
test
and
and
loopne
sub
aas
stc
test
xor
popa
jo
push
sub
cmp
loope
add
xor
inc
mov
inc
out
sub
push
jecxz
jmp
or
or
cmc
mov
loope
hlt
test
and
nop
jb
inc
into
mulb
push
das
adc
cli
mov
fimull
and
add
jle
insb
out
mov
lods
pop
aas
cmp
mov
xor
and
adc
xorb
mov
mov
xor
jge
vcomisd
xor
jge
mov
pusha
jo
insb
lret
jns
lods
mov
jp
mov
xor
scas
aad
cmp
popa
es
and
mov
mov
mov
jecxz
jnp
xchg
aas
cmc
add
cli
sbb
jnp
pop
sbbl
cltd
mov
xor
push
cmp
call
mov
scas
cmpsl
cmc
ja
xchg
jl
paddq
or
jle
aad
pushl
leave
mov
iret
shll
data16
sub
sub
jbe
add
add
pop
sub
cmp
flds
rclb
fs
mull
add
jns
jb
cmp
sbb
mov
or
dec
stos
test
lahf
notl
fwait
es
aad
and
mov
inc
jns
divl
icebp
mov
std
push
dec
push
mov
cmp
cmp
sti
xor
or
cmp
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
push
sbb
pop
jl
jle
push
in
cli
repnz
mov
xor
jge
xchg
sarb
lret
outsb
dec
flds
push
xchg
xchg
xchg
daa
pop
xchg
aad
sub
jne
add
mov
mov
ss
and
xchg
out
insl
jbe
mov
test
out
sbb
inc
ds
push
lret
or
jno
or
mov
or
adc
in
mov
mov
add
mov
pop
jnp
sbb
and
cmp
fwait
or
xchg
in
add
ja
mov
or
enter
mov
inc
sbb
add
sbb
or
push
sub
pop
sbb
inc
adc
xlat
lret
aas
test
jae
dec
repnz
iret
inc
cwtl
dec
mov
ret
mov
add
add
fsubl
dec
mov
pop
inc
mov
cltd
add
cmp
in
scas
or
aam
push
push
lods
xadd
rcrb
or
sub
mov
int
mov
sti
lahf
out
hlt
inc
jmp
clc
push
xor
jb
jle
lret
ss
pop
jmp
xlat
pop
insl
popf
xchg
mov
cmp
or
sti
jg
test
and
mov
xor
pushf
adc
mov
cwtl
xchg
push
mov
movsb
out
stos
cmp
add
stos
mov
add
dec
pusha
lret
in
lock
shrl
cmp
cmpb
and
or
cltd
add
sub
adcb
inc
push
popf
xor
dec
in
pop
pop
fwait
jns
pushf
std
scas
shl
pushf
xchg
fs
pop
divb
mov
mov
data16
stc
data16
xlat
movsl
out
xchg
lods
test
out
xor
mov
jp
repnz
cwtl
push
add
ret
stos
orl
jne
cmp
cmp
jno
mov
push
jnp
pop
push
or
jae
mov
cmp
incl
and
outsb
push
movsl
jmp
and
pusha
pop
out
shlb
andb
mov
dec
bound
push
xor
fnstenv
or
lsl
daa
int
test
mov
pop
adc
popf
xlat
xor
inc
std
jo
rcll
cmp
repnz
lahf
pushf
xchg
fwait
inc
sbb
and
int
das
mov
movb
outsl
push
rcr
jge
fucomi
rol
cltd
add
pop
xlat
stc
dec
leave
in
xor
movsb
jmp
xchg
jecxz
mov
out
sti
lahf
sbb
xor
mov
in
out
mov
js
dec
push
sahf
inc
aam
mulb
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
paddusw
pop
jl
jle
scas
jmp
dec
mov
pop
insl
sarb
or
cmc
mov
push
insb
mov
xchg
push
into
fisttpll
and
pop
jecxz
sub
pop
xchg
mov
lods
rclb
aad
pop
in
mov
push
dec
andb
popf
in
cmp
iret
arpl
das
sbb
add
test
fmull
sub
push
push
mov
sbb
test
push
inc
stos
test
or
sbb
out
add
and
ret
cmp
mov
rclb
mov
cmp
test
inc
cmp
xchg
or
xor
lahf
mov
xorl
mov
addb
cltd
leave
test
mov
xchg
test
inc
xor
xor
jno
adc
mov
sub
sub
mov
pop
xchg
pop
cli
xlat
jo
rorb
and
fwait
clc
push
push
xor
jle
push
lods
mov
mov
jbe
bnd
jnp
enter
mov
in
xor
pop
rcrb
cmc
adc
adc
cmp
mov
and
std
dec
inc
pop
jne
fisubs
add
scas
sbb
push
mov
aaa
mov
divl
cmc
mov
cmpb
lcall
ja
ja
les
into
je
idivl
cmp
xor
xchg
cmp
xor
mov
add
imul
data16
into
and
testb
lahf
sbb
inc
ja
mov
int
outsb
sti
addl
jo
into
mov
stos
push
out
fcomps
mov
fs
dec
cwtl
pusha
add
scas
hlt
cmc
inc
clc
sbb
out
xchg
movsb
daa
inc
push
and
adc
lret
jno
aam
mov
and
or
sub
jg
lock
pop
into
cmp
push
xchg
imul
movsb
out
repz
out
add
push
fsubs
fld
adc
jnp
fisubl
jecxz
cmp
es
outsb
jns
dec
push
push
enter
loopne
jnp
cmp
fldenv
fdivrl
call
sar
and
adc
and
fisubs
sbb
ss
lock
jmp
sub
shr
sbb
mov
add
push
dec
gs
jle
dec
add
lds
mov
jo
mov
fnsave
je
inc
mov
int
sti
std
ret
in
xchg
sub
mov
xor
mov
adc
push
les
and
addr16
in
pop
sub
xchg
push
test
push
jg
push
sub
ficoms
inc
std
pop
daa
addb
xchg
or
jo
rcrb
leave
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
jp
jns
ljmp
jae
dec
fwait
dec
test
das
das
out
scas
loope
into
stos
add
enter
xor
jmp
fidivl
inc
popf
aam
dec
mov
dec
flds
jle
scas
push
insb
push
jne
xor
enter
sub
sub
orl
push
rcrb
into
lock
popf
pop
push
pop
inc
fdiv
add
cld
sub
cmp
sti
adc
xor
int3
jb
fucomip
cmp
jo
hlt
dec
mov
add
cmp
mov
fistpll
lret
in
push
and
cmp
out
cmp
push
push
xor
sbb
in
mov
or
pop
cmp
in
mov
and
push
pop
scas
cli
and
xor
in
dec
sub
or
cmp
fmull
aaa
push
or
xchg
sbb
stos
sub
xchg
inc
cmc
jle
pop
es
in
out
xchg
xchg
mov
mov
mov
cmp
movzbl
push
dec
and
adc
insb
cmpsb
ljmp
mov
std
inc
mov
dec
adc
in
movsl
dec
mov
outsb
enter
lcall
insl
outsl
mov
cmp
mov
ret
inc
shl
fmull
add
test
mov
idiv
repnz
or
int3
cmpsl
das
stos
data16
inc
jg
sub
fldl
mov
pop
pop
pop
lock
sbb
js
in
out
cmc
lea
je
insb
rcll
or
lcall
adc
push
add
dec
das
mov
lds
sub
stos
xchg
lods
cmpsb
gs
sub
insb
jecxz
in
les
jp
xchg
push
xchg
adc
imul
inc
cld
jns
sbb
into
les
out
pushf
bound
pop
mov
adc
pop
outsl
pop
jg
shlb
mov
or
and
mov
movsl
aaa
sbb
shrb
inc
sub
push
and
add
lcall
and
cmp
xor
push
shl
sub
icebp
mov
mov
mov
cmp
clc
shlb
aaa
dec
pop
pop
loopne
ja
pop
sbb
add
popa
adc
cmp
or
mov
outsl
xchg
test
rorl
and
inc
xor
adc
cmp
cmpsb
xor
and
add
out
dec
stos
aas
dec
fldl
ss
cmp
mov
test
adc
mov
mov
or
iret
sub
aas
dec
cli
das
repnz
clc
jmp
add
dec
popa
jno
jne
xor
jle
pop
xchg
or
jle
pop
jl
jle
ds
fsub
xchg
faddl
stos
clc
aad
push
xchg
movsl
dec
pop
jg
gs
pop
into
sbb
jl
or
or
jecxz
stos
sti
jno
xor
out
aaa
xor
push
and
bound
call
pop
je
lock
and
cmc
push
lods
roll
int3
cmpb
or
jp
das
push
call
lret
jb
sub
aad
xchg
cmp
push
sar
xchg
dec
push
jmp
daa
lahf
mov
loopne
inc
inc
jno
pop
pop
pop
dec
ja
lock
adc
test
or
sub
push
jge
xor
in
aaa
pop
mov
push
mov
or
jb
fucomi
inc
out
push
bound
ret
mov
push
inc
outsl
cmp
sti
sub
xor
mov
mov
dec
das
xchg
or
add
stos
clc
sti
pusha
int
decl
movsl
mov
sbb
leave
fldenv
jnp
push
fadds
pop
in
xor
div
pop
inc
rcll
jnp
mov
xchg
or
jo
adc
xchg
mov
mov
pop
jbe
xchg
leave
xchg
mov
mov
imul
push
add
mov
mov
adc
push
pop
aad
mov
mov
jmp
popf
inc
mov
inc
adc
jmp
ljmp
xor
mov
stc
jecxz
or
pop
in
dec
push
fisttpl
mov
scas
pop
xchg
iret
push
out
or
fisubl
in
add
and
sti
jecxz
xchg
imul
cltd
hlt
movsb
jge
ss
fisttps
sbb
and
xchg
mov
fwait
cmpsl
adc
divb
xchg
xchg
outsb
jnp
dec
lock
orl
js
jl
fdivr
pop
push
rcrl
push
xchg
inc
mov
add
xchg
stos
lock
cli
outsb
jmp
pop
mov
lahf
nop
mov
xchg
mov
sub
or
loop
faddl
mov
les
pop
sub
xor
out
mov
inc
inc
mov
xor
mov
xchg
push
notb
std
test
pop
xor
sbb
movsl
inc
rorb
inc
arpl
imul
fcoms
pop
jge
jg
call
into
dec
and
jns
cmp
leave
mov
sbb
xchg
bswap
sub
in
push
mov
mov
repnz
pushl
aas
push
cld
mov
repnz
dec
add
mov
movsb
stc
cmp
lahf
jns
int
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
mov
adc
jle
jl
jle
popl
mov
xor
mov
popf
ret
test
mov
add
aam
jecxz
or
pop
and
js
out
pop
es
mov
jge
mov
or
sub
pop
cmpsl
push
inc
aad
dec
iret
leave
in
sub
leave
fwait
ret
cltd
xor
inc
xchg
pop
lods
sbb
iret
in
enter
jl
add
jns
xchg
push
insl
scas
dec
mov
gs
pusha
mull
jecxz
jnp
dec
push
and
sbb
jo
xchg
pop
pop
addr16
adcb
cmp
fsubr
iret
mov
fdivrl
leave
push
div
adc
push
leave
orl
add
xor
fcomps
insl
sbb
cmp
mov
data16
cmp
cld
fwait
sbb
sub
mov
add
jge
push
mov
inc
and
or
movsb
or
imul
lea
fsubl
pusha
iret
lahf
lock
mov
and
push
or
jp
outsl
push
addl
pop
scas
mov
stos
sti
mov
outsb
push
cmp
pop
sbb
ljmp
and
mov
hlt
imull
cmc
push
push
pop
push
data16
dec
imul
xor
leave
jmp
mov
jecxz
ljmp
jo
scas
das
xor
rorl
test
xchg
bnd
or
lea
mov
xchg
test
or
pop
lea
ljmp
and
jmp
xchg
and
pop
dec
or
pusha
lret
jnp
add
popa
push
lret
rorb
gs
lock
mov
push
pop
sub
push
div
cli
sub
fwait
in
mov
cwtl
add
mov
jge
or
pop
jge
in
add
ds
mov
rclb
cmp
dec
dec
cmpsb
push
or
out
int
or
scas
addr16
jmp
sbb
push
test
rcll
call
outsb
pop
mov
test
xchg
jbe
sbb
mov
mov
mov
push
fs
jge
pop
pop
shl
xchg
sub
xchg
lods
or
xchg
xor
jmp
in
inc
jg
xchg
dec
div
loopne
add
pop
cltd
sbb
in
mov
rorb
pusha
or
lock
insl
mov
inc
mov
pop
in
and
jne
pusha
adc
rcrl
cmp
jb
int
data16
push
pushl
sub
stos
add
pushf
clc
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
inc
adc
mov
jl
jle
cmp
fld
lret
test
add
mov
movsb
lock
cld
outsl
sub
push
int
outsb
fisttpl
jnp
js
push
jnp
popa
and
outsl
mov
pop
push
je
xchg
out
xor
dec
push
movsl
push
imul
or
insb
lods
lds
int
rolb
mov
sub
std
fsubr
mov
je
ret
xchg
shrl
cmp
push
mov
movsb
jbe
repnz
repnz
cmc
pop
mov
jae
xor
lahf
xchg
mov
pushf
vorpd
jo
insb
into
adc
fisubrl
mov
adc
pusha
das
push
inc
mov
mov
cld
jecxz
mov
fwait
inc
mov
addr16
mov
es
push
adc
sbb
gs
sbb
pushf
repnz
dec
lds
fdivs
in
sbb
or
xchg
jp
xchg
sbb
lock
adc
jl
repnz
inc
notl
pusha
ja
sahf
jae
pop
add
je
int3
pop
mov
out
mov
cltd
dec
into
sbb
das
jp
or
or
aad
subb
push
mov
dec
pop
mov
push
fildl
sbb
adc
xchg
adc
stos
push
push
bound
andps
cmp
push
xchg
jbe
dec
mov
idiv
and
aam
sti
inc
sub
pop
push
adc
icebp
pop
out
iret
shrb
test
pushl
seto
mov
rorl
adc
repz
cltd
and
test
stos
add
aas
dec
ljmp
lock
xor
inc
adc
fdivrl
or
cmp
mov
sub
mov
push
out
shlb
adc
movsb
in
movsl
mov
jle
cld
cli
loope
and
nop
test
ss
or
bound
sbb
ljmp
stos
js
les
les
pop
dec
div
addr16
mov
cmp
jb
lods
pop
push
xchg
sbb
sbb
iret
test
fucomp
pop
sbb
sbb
and
jae
daa
cmpsb
flds
and
push
sub
les
sub
inc
int3
mov
jmp
pop
xlat
jno
jno
call
cld
fadds
pop
jae
sahf
sub
inc
and
stos
sub
mov
cwtl
ret
psrad
and
faddl
and
ja
push
or
sub
cmp
mov
xchg
jne
mov
sub
subb
movsb
mov
jle
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
outsb
lret
jle
pop
jl
jle
sbb
xor
outsb
mov
jp
dec
push
aam
pop
xchg
or
icebp
lds
int3
imul
in
or
dec
jns
test
inc
cmp
pop
lret
adcb
test
lgs
pop
or
xorps
stos
mov
inc
pop
loopne
mov
sub
adc
stos
dec
jge
jle
outsl
insb
inc
and
in
scas
scas
sbb
cmp
mov
lret
push
lods
xor
test
std
xchg
addr16
pop
std
insb
out
push
pop
pop
xchg
shl
rclb
pusha
sbb
test
in
xchg
pextrw
pop
push
mov
push
inc
sub
nop
mov
pop
jecxz
int3
dec
xchg
jmp
push
inc
lcall
sub
lock
and
xchg
mov
int3
gs
xor
imul
inc
xchg
push
inc
pusha
addl
mov
in
jmp
add
mov
mov
hlt
loop
inc
lahf
daa
out
xor
cmp
sub
in
push
fwait
int
and
lcall
into
nop
lret
les
adc
adc
mov
mov
dec
in
aas
inc
mov
cmp
mov
sub
sbb
push
cmp
pop
sbb
scas
in
jbe
sti
out
mov
sbb
pop
or
xchg
orl
sub
arpl
enter
out
ja
dec
hlt
frstor
xchg
sbb
pop
mov
cltd
enter
lock
or
inc
dec
mov
mov
sbb
sbb
popa
daa
add
pusha
cs
sti
popf
mov
and
insl
pop
inc
ss
cmc
adc
cli
in
mov
fldl
mov
dec
nop
invd
mov
aaa
insb
mov
jne
movsl
imul
mov
inc
xor
xchg
mov
cmpsb
xchg
into
sbb
aam
xchg
sbb
pop
das
mov
std
push
ljmp
dec
enter
shll
into
addr16
arpl
rol
dec
fimuls
add
mov
cmc
leave
stc
add
inc
push
cmp
sub
or
stos
outsb
sub
mov
xor
mov
push
push
push
ljmp
inc
andb
dec
lahf
dec
and
add
cmc
xchg
or
aad
pusha
jge
scas
dec
xchg
shrl
jg
loopne
and
out
push
addr16
xor
or
cmp
mov
out
xchg
ss
mov
xor
lods
and
lcall
dec
jecxz
aam
repnz
mov
jbe
sti
loopne
mov
inc
sbb
movsb
gs
add
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
inc
mov
sahf
imulb
jle
jl
jle
test
sub
shl
jnp
out
out
insb
pop
sub
ret
ljmp
icebp
negl
xor
add
in
enter
popa
stos
es
lods
inc
cmovne
sub
xchg
jecxz
mov
dec
outsb
jno
inc
shrl
cld
pushf
inc
outsb
jmp
cmp
xchg
inc
dec
cmc
sbb
mov
dec
scas
mov
repnz
jnp
loop
lods
sbb
mov
add
lret
sub
dec
clc
inc
hlt
and
imul
idivb
insb
cmp
imul
fs
dec
rcll
rcrl
mov
out
sahf
lds
pop
fidivrs
xchg
push
push
mov
sahf
mov
test
or
jnp
js
sub
or
or
mov
mov
cwtl
lods
dec
xchg
inc
in
je
int
loop
push
mov
lret
push
test
stc
popl
out
add
jmp
sub
fnsave
mov
rcrl
xor
xchg
fldenv
shr
mov
int3
out
sub
lock
das
aam
stos
jmp
int
pop
push
fwait
cmc
fsubs
cmc
mov
std
pop
dec
add
movsl
pop
xor
lods
cld
xchg
daa
repz
or
into
pop
dec
push
cmc
jbe
dec
and
cltd
ljmp
sub
push
out
test
pop
mov
stc
popl
fldt
pop
sub
mov
pop
les
pop
add
rcl
mov
sbb
jmp
pop
sbb
cmp
mov
subl
jle
pop
jns
xchg
push
jno
inc
mov
rcrl
xchg
mov
mov
addb
orl
mov
icebp
es
and
push
fucomip
icebp
insl
pop
outsb
scas
repnz
mov
push
jmp
fidivrl
jns
dec
ljmp
jle
popf
test
ds
loope
sbb
aad
lods
pop
cs
sbb
add
xchg
cmp
sbb
gs
pop
in
fsubrs
pop
xchg
test
nop
adc
stc
scas
sub
cmp
pop
pop
imul
mov
cli
xor
test
mov
xrelease
and
add
mov
add
lds
cmpsl
pop
in
fiaddl
adc
test
inc
out
add
int3
push
xchg
push
cmp
mov
mov
shlb
mov
dec
popa
jmp
test
jecxz
mov
xchg
test
xchg
jmp
cmp
add
movsl
iret
lahf
dec
dec
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
dec
insl
shrb
jle
pop
jl
jle
xchg
add
mov
movsb
mov
outsl
push
decl
mov
sub
fsts
jl
insb
cltd
dec
cwtl
dec
cs
add
push
idiv
push
cmpsl
push
sub
add
inc
inc
xor
sub
cltd
jge
mov
pop
mov
mov
pop
icebp
shl
in
repz
addr16
mov
xlat
cld
xor
adc
cwtl
out
popa
lea
inc
inc
add
xchg
lret
and
xorl
and
or
scas
out
addl
js
aas
inc
jge
fimull
stos
in
scas
pop
dec
xor
dec
mov
xlat
fwait
xchg
cmpsl
dec
stc
jno
sbb
mov
rsm
and
call
sbb
ljmp
in
or
pop
add
push
pop
sub
push
push
jno
insl
sub
xor
dec
mov
dec
mov
mov
add
adc
sub
adc
mov
sbb
jmp
out
or
xchg
mov
jle
fcmovb
sbbl
inc
mov
andl
sbb
jbe
push
cmc
jmp
and
xchg
xchg
pop
fsts
pop
cmp
cmpsl
push
out
cltd
ds
sbb
xor
movsl
cltd
in
jno
rol
es
fisttpl
pop
sbb
or
ret
xor
ljmp
leave
cmp
jns
jp
xor
sti
and
jecxz
jno
lods
fisubrl
and
mov
mov
jle
test
push
dec
mov
xchg
aaa
jg
pop
ljmp
mov
mov
push
add
inc
cmp
push
inc
sbb
fnstsw
adcl
adc
addr16
cmp
ret
xchg
cmpsl
sub
fidivrs
jno
in
popf
scas
xchg
push
cmp
sahf
cmp
sbb
lcall
outsb
add
out
xlat
in
lock
cmp
imul
leave
stos
push
outsb
xchg
lcall
xor
jmp
or
repz
in
inc
fmuls
push
dec
xchg
js
mov
add
adc
mov
sahf
inc
mov
cmp
sbb
roll
mov
loope
rcl
inc
cmc
cmp
and
or
das
bsf
repnz
jno
jge
jo
and
jno
scas
pop
leave
sbb
nopl
repz
loop
stos
pop
cltd
data16
sbb
adc
xor
loopne
inc
mov
daa
ljmp
and
ljmp
gs
imul
xor
int3
aam
mov
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
arpl
jle
jge
jle
mov
or
jno
pop
xor
cltd
repz
fbstp
inc
addr16
mov
fdivrs
iret
cmp
repz
mov
js
sub
hlt
or
adc
cmpsl
loope
xchg
mov
cld
xchg
jno
xchg
or
pop
andl
insl
push
aad
js
incb
cltd
insl
ds
jmp
int
mov
int
out
jnp
int3
iret
sub
lds
cld
adc
scas
lods
dec
out
inc
pop
mov
sbb
dec
sbb
rcl
dec
pop
xchg
incl
fsubp
or
fidivs
testl
xor
aas
adc
mov
inc
push
sub
sbb
lds
mov
xor
xchg
ljmp
mov
and
or
lret
mov
daa
ret
xlat
jg
cs
and
push
repz
std
mov
dec
into
xor
or
fnstsw
push
loop
jge
push
test
sbb
lahf
add
dec
lock
sub
stos
stos
cld
imul
dec
outsb
pushf
aad
or
adc
and
pop
leave
mov
xlat
rorl
inc
jmp
cli
orl
cmp
repz
or
std
je
sbb
mov
jmp
iret
mov
shrl
lcall
xchg
dec
xchg
aad
rcrb
jb
mov
mov
sarb
popa
test
sahf
dec
rolb
rcrb
aas
movsb
mov
jns
mov
add
daa
aad
sarl
fmul
in
je
popa
test
scas
jbe
orb
mov
add
sub
xor
jecxz
xlat
jb
mov
imul
fnstenv
lahf
cmp
in
out
mov
cwtl
shr
adcb
jae
lock
aaa
repz
dec
loopne
sbb
arpl
sbb
insl
test
jne
lock
fabs
push
mov
or
jge
testl
pop
mov
jns
js
and
popf
push
cmc
pop
lcall
push
nop
mov
cmpsb
les
xor
sbb
lods
lods
ja
lahf
inc
cltd
mov
imul
jp
sub
cwtl
push
pop
ds
pushf
negb
jecxz
notl
ret
imul
or
popa
cs
ds
daa
push
mov
movsb
sti
sahf
int3
aaa
fistps
mov
sbb
xor
fwait
jno
adc
mov
ss
clc
pop
jb
stos
mov
pusha
adc
scas
test
pop
xchg
test
mov
out
sbb
cs
push
lock
popa
or
lods
add
push
mov
rcr
aad
lret
xchg
and
repz
and
movsl
stc
into
out
mov
sahf
imul
ds
and
xor
hlt
lds
jmp
lock
mov
cmp
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
cmp
sbbb
sarb
mov
add
cs
outsl
test
popa
sbb
jg
or
sbb
not
xorl
lds
cmp
js
ret
testb
test
xorb
inc
data16
bound
clc
rcrl
ds
mov
xorb
loopne
jbe
add
mov
adc
push
movzwl
lret
cli
in
div
xor
outsl
pusha
jb,pt
mov
movsl
xor
or
imul
jl
out
xor
or
push
dec
dec
rorl
mov
sbb
cmpsl
movsb
call
sub
scas
hlt
pop
call
int
stc
adc
mov
jb
lcall
fisubrl
daa
pop
scas
jne
loop
add
test
xchg
cmpsb
cmpsb
outsl
leave
pop
push
jle
jl
jnp
jmp
lock
lret
data16
lea
xor
shr
fsubrs
inc
xchg
js
or
cli
xor
or
scas
jae
loopne
mov
or
iret
and
aad
outsb
push
leave
cltd
ret
push
pop
push
jmp
add
sbb
sarb
sbb
mov
sub
and
fistpll
push
mov
cli
stc
push
daa
fildll
in
jmp
mov
xchg
inc
sub
or
in
sub
xor
or
in
loopne
mov
cmp
jo
inc
sbb
push
sbb
sub
inc
repz
xchg
incb
mov
movsl
dec
lods
leave
adc
les
jmp
mov
pop
pop
das
insl
loop
ficomps
lret
inc
pop
bound
pop
adc
outsl
and
lahf
or
lret
xlat
xchg
inc
lods
jo
insb
cwtl
and
lret
out
loopne
jnp
sub
pushf
xor
push
pusha
iret
les
sub
loope
leave
stos
enter
stos
fildl
push
xor
pop
mov
sub
and
ror
sub
popf
adc
cmp
rcll
int
insl
mov
inc
insl
sub
xchg
ljmp
daa
mov
and
cld
cwtl
pop
adc
fdivs
jno
or
or
into
pop
xchg
stos
push
fs
push
popf
pop
rcrl
adc
xor
std
rclb
pop
mov
mov
dec
scas
cmp
out
jb
cwtl
scas
adc
xor
clc
stos
roll
mov
push
fmuls
jae
xor
xchg
subb
cmp
xlat
cmpsl
jg
popf
ljmp
lahf
addr16
cmp
push
xor
repnz
aas
jbe
inc
mov
mov
movsb
mov
lcall
lods
mov
adc
sbbb
xchg
jb
ret
lods
outsb
push
push
cmc
or
cmpsb
insb
add
icebp
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
adc
mov
mov
sbb
and
dec
idivb
sub
sbb
stos
ret
inc
cmp
or
push
dec
mov
and
mov
sbb
stos
mov
repnz
mov
mov
xor
xchg
gs
mov
addr16
imul
push
shlb
sub
fisubrs
cmp
add
mov
mov
jge
sbb
cmp
mov
pop
jbe
push
cmovbe
lcall
lcall
dec
aaa
mov
out
jnp
mov
add
ss
cs
test
jno
jmp
and
mov
xorl
xor
pop
daa
out
sarb
add
or
cmc
sbb
mov
popf
into
aam
and
iret
pop
push
and
jns
inc
repnz
popa
stc
sub
mov
lods
push
jno
jns
sahf
or
xchg
xchg
add
mov
sbb
cmpsl
outsb
mov
idivb
push
loopne
pop
dec
ret
js
stos
fwait
pop
mov
out
inc
cmp
pop
rcrl
dec
jno
jle
xchg
nop
mov
test
or
jg
test
test
ljmp
or
adc
imul
mov
mov
aaa
pop
inc
push
rorb
and
jno
xlat
dec
sti
sub
aas
push
or
rcll
push
xchg
push
mov
mov
pop
mov
adc
stos
movsl
enter
inc
outsb
mov
xchg
lods
lods
mov
adc
mov
cmp
addr16
cltd
outsb
scas
jg
sti
test
adc
fists
mov
xchg
xlat
cmpsb
push
in
jg
lds
xor
xor
pop
dec
into
jb
mov
mov
les
mov
addr16
pop
stos
sahf
mov
push
adc
cltd
adc
sti
cmc
ss
dec
ret
xor
push
adc
out
xchg
testl
mov
adc
add
sahf
sbb
out
inc
mov
mov
push
dec
mov
or
cmpsb
jb
push
push
push
pop
mov
subl
mov
add
push
mov
sub
or
mov
pop
scas
int3
adc
imul
inc
mov
or
inc
jmp
fwait
mov
imul
mov
dec
xchg
sbb
inc
pop
or
and
jl
xchg
xor
sub
lahf
mov
add
dec
std
cmp
aaa
imul
xorb
sbb
popa
pop
movsb
jmp
loop
add
ljmp
gs
jne
fwait
or
push
or
in
xlat
in
ja
pop
mulb
lahf
movsl
cli
adc
iret
out
adc
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
mov
and
push
aas
jle
sub
jle
mov
icebp
frstor
push
jecxz
push
fcom
mov
into
pop
pop
call
cmc
loop
pop
cs
les
xor
shlb
fidivrs
pop
dec
sub
dec
aad
sbb
xchg
and
imul
mov
adc
jle
jns
iret
inc
mov
jbe
mov
rclb
pop
dec
jae
lahf
jbe
mov
mov
rcll
out
clc
cld
repz
xchg
jmp
xor
lea
scas
jo
out
add
jae
xor
lret
xor
sub
jb
dec
popl
xlat
or
xchg
orb
lret
sub
jb
push
cmp
and
enter
push
fwait
das
lcall
aaa
movsl
out
cmp
sub
xchg
fldcw
xchg
add
lock
cld
les
mov
push
mov
mov
in
icebp
dec
pop
pop
testl
hlt
addr16
repz
mov
lods
imul
aam
push
mov
add
call
sbb
int3
fisttpll
inc
jecxz
aad
pop
inc
ret
dec
and
mov
xor
std
test
scas
movsl
pop
inc
les
lret
ret
xlat
enter
inc
aaa
or
pop
cld
push
push
jp
fwait
lods
aad
dec
lahf
dec
mov
jnp
mov
lcall
jge
push
fcmovne
data16
lret
fdivrp
sti
and
std
sub
jge
and
push
je
lcall
imul
lahf
aam
push
inc
mov
xor
and
sub
cmpsl
lods
je
sub
shrb
pop
inc
xchg
dec
int3
mov
fisubrl
cmp
inc
loope
mov
in
stos
in
into
lret
jmp
sbb
add
xor
add
jns
jb
xchg
jb
inc
sbbl
popf
jl
or
adc
or
aaa
lret
insl
mov
inc
neg
fs
js
and
aas
movsb
addr16
shrl
int3
inc
mov
and
sbb
lret
scas
adc
jne
mov
push
add
cmp
addl
pop
add
stc
test
enter
xchg
mov
hlt
fcmovnu
aaa
push
mull
mov
jge
insl
andb
push
mov
sbb
add
sbb
ror
inc
rcl
mov
pop
out
insb
fwait
popf
add
leave
mov
add
inc
jmp
std
dec
jns
pop
pop
mov
enter
sub
loopne
mov
loopne
add
xchg
xchg
dec
sbb
mov
xchg
outsl
xchg
popf
sub
push
shrl
sub
push
inc
add
cmpsb
dec
inc
sbbl
inc
add
out
add
sbb
or
jb
popf
fldcw
cld
jmp
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
aam
cmp
mov
xchg
and
push
inc
sub
or
inc
pop
pushf
jmp
int
rcrl
imul
mov
jae
push
cwtl
push
sbb
cmp
les
leave
arpl
xchg
cltd
dec
push
mov
inc
inc
pop
add
dec
adc
stc
cmp
imull
xor
rcrb
mov
xchg
dec
or
and
mov
lret
xor
leave
leave
test
incb
mov
pop
test
xor
dec
xchg
pop
insl
fsubrl
daa
jle
mov
jb
mov
stc
cmpb
psubusw
cld
mov
ficomps
scas
ret
xor
mov
stos
rorb
mov
jnp
or
bound
push
aad
jbe
int3
xchg
insl
into
xchg
ret
cli
jno
loopne
or
in
adc
pop
out
imul
lcall
xor
push
clc
fs
jmp
gs
push
sub
adc
ss
dec
push
inc
sbb
xor
das
xor
cmc
mov
scas
mov
mov
mov
bound
jbe
out
pop
jno
pop
daa
dec
les
push
and
sti
xchg
xchg
test
ja
sub
rolb
rorl
andnps
clc
sub
inc
inc
cmc
inc
sub
insl
leave
pusha
aas
push
mov
repnz
lret
jle
out
pop
fadds
mov
or
jmp
cmp
pop
xchg
into
dec
adc
jmp
cmp
fwait
xor
cmpsb
mov
iret
imul
mov
mov
data16
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
adc
test
mov
dec
leave
aad
cwtl
das
int3
and
xor
mov
add
arpl
push
nop
xor
out
sub
cmp
xchg
pop
fdivl
sub
das
sbb
pop
dec
lods
jmp
lahf
dec
xor
lahf
jp
jl
mov
pop
mov
jle
inc
arpl
lock
ret
ret
jl
je
adc
xchg
sbb
xor
movsb
data16
xchg
and
pop
in
mov
fiaddl
sbb
dec
pop
popa
mov
push
cmp
fadds
mov
xchg
mov
pop
xor
mov
sub
jge
fsubr
mov
xlat
xchg
lret
shrb
jl
test
leave
mov
cs
and
es
out
cs
sahf
sub
sbb
add
mov
sub
pop
xchg
xchg
jg
pop
push
fsts
xchg
cltd
sub
fisubrl
lahf
jno
pcmpeqd
pop
dec
lods
sbb
sahf
inc
sub
mov
popf
mov
jo
out
xchg
std
jns
sbb
xlat
scas
mov
mov
xlat
cwtl
dec
add
out
dec
dec
xchg
cmc
push
iret
sub
or
cmpsl
and
stos
and
fcoms
pop
mov
lods
dec
rorb
stos
inc
scas
pop
mov
hlt
movsb
aaa
xor
scas
inc
mov
sub
push
fwait
sbb
fsubs
or
jns
inc
and
adc
outsl
fdivrp
pmaxsw
push
mov
xchg
xchg
enter
inc
jle
xchg
outsl
dec
maskmovq
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
push
mov
test
sbb
std
pop
ss
pmullw
nop
repnz
adc
fsubrl
movsb
dec
stos
sub
or
insb
roll
cmp
mov
push
push
rclb
lods
lds
pop
js
or
adc
int
repnz
mov
fs
loope
popf
lret
xor
and
jge
dec
loop
loope
imulb
inc
inc
das
imulb
pushl
repz
loope
mov
pop
enter
mov
push
movsl
add
jne
iret
call
loop
mov
sub
jp
fcomi
add
mov
out
mov
sub
ficompl
push
int3
mov
fdecstp
insb
xchg
lahf
out
ds
dec
dec
insl
xchg
mov
xchg
mov
xlat
xchg
jmp
push
test
xchg
xor
sbb
cltd
add
leave
add
sub
add
pop
mov
es
or
or
cli
mov
test
leave
orl
daa
fisttps
mov
stc
out
pop
dec
adcb
negb
out
call
mov
mov
xor
xor
fxrstor
popa
cmpb
fs
imul
jmp
inc
jb
mov
lea
lods
adc
xchg
inc
mov
add
add
adc
add
cmc
leave
xchg
pop
ret
loope
sbb
push
inc
jl
das
in
push
and
mov
in
push
test
dec
ljmp
xchg
jb
push
mov
shll
add
jne
call
test
jmp
and
in
popa
push
lret
xchg
out
jle
int3
les
mov
pop
push
jmp
mov
xchg
xor
xor
mov
test
cmp
in
add
rorb
xchg
neg
nop
push
sub
mov
inc
movsl
xor
pushf
jno
add
arpl
pop
lods
das
pop
push
dec
push
push
ret
xchg
lds
jne
lcall
inc
dec
mov
inc
lret
lahf
pop
adc
mov
or
fsubs
mov
std
popf
sbb
mov
mov
or
mov
lods
rorl
dec
pop
sub
faddp
aas
push
ret
int3
cmp
jno
inc
cwtl
negb
dec
jo
sub
xor
cmpl
fidivs
xchg
pop
mov
xor
push
push
lret
or
fmuls
mov
cmp
mov
mov
cmp
pop
cmp
mov
push
inc
and
iret
loope
lcall
repz
cltd
jno
aad
push
mov
out
sbb
int3
in
sbb
jmp
scas
xchg
test
flds
movsl
pop
dec
or
stc
loope
pop
lods
add
fcomip
jnp
sub
rcrl
cmp
das
mov
sbb
mov
sti
test
stos
std
adcl
scas
push
jnp
std
cli
ret
cmc
inc
mov
jb
stos
test
add
divb
ss
mov
data16
cwtl
jmp
jg
repnz
push
stc
adcl
dec
sub
pop
xchg
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
movsb
cltd
aaa
or
jle
add
and
pop
lods
sbb
fucom
add
repnz
in
out
test
push
push
addr16
ret
negb
out
imul
jb
adc
xlat
push
mov
cmp
ss
push
iret
pop
add
push
xor
inc
cs
xchg
ljmp
sub
cli
or
mov
mov
fsubrl
pop
dec
out
pop
mov
cmpsl
pop
mov
xchg
add
inc
pushf
fwait
mov
dec
dec
xchg
mov
push
mov
push
incb
push
sbb
jl
dec
das
mov
jne
push
test
std
pop
pop
sbb
lea
shll
cwtl
adc
add
or
cmp
ljmp
icebp
push
push
mov
sub
mov
movsl
xchg
or
cmp
and
mov
inc
lcall
mov
cmp
arpl
cli
sub
mov
adc
pop
jl
adc
inc
mov
js
dec
hlt
jae
adc
add
or
cmp
and
leave
stos
jno
jmp
add
gs
inc
je
fsubs
dec
add
les
adc
cmc
add
out
sub
rclb
pop
cltd
and
xor
mov
cmpsb
and
mov
stc
fs
mov
lcall
push
or
or
arpl
aam
or
sti
testl
hlt
pop
mov
lret
mov
mov
shrl
cmp
ficomps
jno
les
mov
sarl
clc
inc
out
xchg
cs
inc
mov
push
pop
imul
sbb
test
ja
xor
pop
or
mov
fdivs
cld
pop
inc
movsb
xlat
loope
ljmp
mov
stos
mov
negb
lret
pop
or
cmp
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
xchg
jmp
and
sarb
jl
jle
repz
clc
arpl
push
dec
jns
jecxz
sbb
rcrb
rcl
repnz
int
and
xor
jae
roll
imul
daa
sub
mov
mov
or
test
cmc
inc
in
daa
fs
add
mov
mov
stos
mov
imul
xor
sbb
jno
je
mov
lods
xchg
ret
or
testb
sub
icebp
or
je
js
div
pop
add
mov
pop
lods
filds
adc
push
sbb
outsl
mov
mov
je
cli
inc
js
mov
mov
add
or
adc
or
dec
jns
push
es
and
mov
add
clc
lcall
sub
cld
sub
xchg
sub
push
or
mov
xor
push
push
int
in
subb
xor
lods
push
loope
sbb
in
lret
dec
fmulp
jno
and
les
jb
or
dec
jne
jle
loop
mov
imul
add
xchg
xor
daa
dec
pop
les
push
pop
imul
addb
jecxz
sbb
mov
xor
dec
xchg
jns
ret
rorl
xor
mov
pop
cmp
mov
test
jp
icebp
jnp
icebp
add
subl
fadd
clc
mov
loop
cmc
cmp
or
dec
es
xor
jae
mov
sbb
pop
leave
sbbb
ss
sti
jl
jno
outsl
fmull
pop
out
adc
jecxz
push
jge
pusha
cwtl
mov
xchg
dec
lahf
icebp
imul
push
shll
pop
pop
fbld
call
popf
inc
and
rorl
pop
and
add
lahf
iret
pop
pusha
es
jmp
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
push
mov
jle
jl
jle
jge
adc
adc
scas
lods
arpl
cmp
ret
aaa
je
xor
or
into
scas
inc
je
inc
pushf
repnz
rcrb
push
sub
push
cmp
xlat
outsb
inc
pop
dec
inc
lea
test
mov
in
and
sub
scas
das
xchg
je
stos
adc
movsl
idivl
ljmp
aam
sub
test
dec
cltd
mov
push
aaa
movsb
scas
mov
inc
jge
movb
bnd
iret
push
int
iret
cmpsb
and
pop
mov
push
ljmp
mov
and
stc
dec
mov
jle
loop
xor
push
pushl
cmp
sub
push
shrl
rol
pop
push
test
out
dec
jae
mov
jge
and
cmp
mov
lods
mov
lods
mov
sbb
icebp
push
push
xor
mov
clc
xchg
mov
ror
cmp
repnz
pop
xchg
ljmp
push
xor
adc
jmp
pop
cmp
shll
add
mov
adc
dec
leave
rclb
dec
and
pop
push
mov
addb
push
dec
mov
notb
cmpsl
movsb
shr
adcb
mov
jmpw
sbb
jmp
in
xchg
ficoms
insb
and
sub
push
ficomps
cmpsb
mov
ds
rorb
das
sub
pop
lret
lret
testb
xchg
push
jae
mov
jno
outsb
cmp
stos
push
pop
jbe
and
enter
pop
lahf
jp
xor
xor
xchg
jb
dec
sbb
push
add
enter
aas
dec
cmc
push
test
mov
xchg
and
xchg
mov
xchg
repnz
inc
test
push
mov
pop
jo
cmp
add
mov
outsl
xor
adc
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
loopne
add
sub
jle
add
int3
imul
mov
mov
lahf
xchg
mov
out
in
loop
fs
scas
repnz
mov
cmp
sbb
fwait
mov
aam
in
test
arpl
pusha
iret
mov
pcmpeqb
lret
fstp
cmp
mov
inc
xchg
inc
inc
cmpsl
xchg
cmp
jno
xor
push
aam
sbb
fbld
mov
jp
xor
into
jae
sarb
mull
test
dec
jecxz
in
and
mov
xchg
cmp
mov
ds
and
pop
inc
rolb
mov
mov
xor
push
fnsave
mov
inc
ficoml
and
ja
or
scas
out
push
movsl
faddl
push
addr16
jns
jns
mov
fwait
jl
pop
sbb
enter
pop
jne
iret
inc
mov
je
ja
xor
js
push
dec
mov
xor
gs
fcomp
mov
sbbb
daa
movsb
dec
and
jmp
mov
jecxz
pushf
movsb
das
out
test
lcall
sbb
inc
aas
fnstenv
mov
dec
xchg
je
adc
and
shlb
dec
fwait
loope
mov
out
and
xor
sahf
cmpsb
out
fildl
movsb
stos
inc
jns
inc
mov
xchg
mov
loope
inc
sbb
test
cltd
cmc
pop
bnd
mov
and
cmpsb
push
ret
jnp
scas
inc
stc
and
jmp
push
inc
dec
ss
mov
rorb
inc
cmp
shll
sub
push
mov
repnz
mov
nop
jecxz
push
mov
std
xor
inc
dec
movsl
popa
fsubrs
or
imul
dec
rcl
xchg
add
sbb
loopne
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
jle
lret
and
jle
ds
aam
pop
jmp
mov
pop
dec
pusha
cwtl
addr16
ret
sbbl
mov
rolb
xchg
in
test
pop
stos
popf
addr16
fwait
arpl
pop
arpl
jbe
and
mov
aas
mov
push
pop
imul
mov
lods
push
sbb
ss
lahf
dec
in
jmp
push
dec
adc
xchg
sbb
dec
adc
dec
dec
push
sbb
sub
cmp
ds
mov
sub
mov
out
push
xor
out
js
cmpsl
add
add
add
jmp
in
pop
adc
or
mov
push
or
mov
cmp
stos
dec
add
xchg
int
mov
push
jns
lds
and
lods
add
push
mov
jne
pop
lods
inc
ret
xchg
scas
pop
sub
xor
stos
sub
repnz
fistl
dec
divl
mov
out
add
insl
push
es
das
rcrb
cwtl
mov
inc
push
sub
adc
cmpsb
fcompl
sub
test
jg
imul
push
dec
push
sti
ljmp
shlb
in
mov
mov
jb
shl
cmp
dec
mov
pushf
daa
push
cmp
mov
outsl
sbb
popa
mov
dec
scas
xchg
cmp
push
hlt
out
and
cmp
filds
fucomp
mov
hlt
rorl
ljmp
mov
pop
dec
xchg
jmp
jb
dec
dec
scas
dec
out
ljmp
int
iret
hlt
jl
popf
sub
lods
xchg
inc
add
jnp
and
sub
xorps
roll
dec
jp
and
arpl
fmull
or
dec
cld
mov
pop
mov
lods
sbb
sub
cmp
xchg
xchg
out
insb
xchg
push
test
cmc
rcr
call
and
int
pop
jns
and
push
mov
inc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
test
add
and
jle
xchg
and
push
rorb
fnclex
inc
cmp
clc
and
and
cmp
dec
das
testl
cs
arpl
iret
inc
pop
and
jmp
in
mov
bound
imul
fs
mov
insb
fldenv
lea
rcl
pop
in
xchg
out
ljmp
mov
lods
push
jmp
mov
mov
mov
xorl
adc
int
out
jb
lods
scas
or
sbb
ds
and
push
push
and
mov
xor
popa
mov
and
sbb
icebp
jmp
and
in
fiaddl
cmp
mov
aaa
push
and
mov
loopne
lret
ficoml
pop
pop
push
gs
add
flds
pop
fidivl
sub
jecxz,pn
cs
mov
repz
lret
insl
or
mov
or
xchg
lea
xlat
cmpsb
lods
imul
js
jl
int
cli
scas
test
cmp
mov
push
mov
std
xchg
adc
sbb
loop
mov
cmpsb
shll
mov
pusha
adc
jmp
mov
add
xchg
pop
rorl
test
loop
jns
lahf
adcb
test
dec
bound
sub
addb
xchg
push
stos
aas
cmp
add
cmpsb
iret
test
push
jns
scas
insl
xor
xchg
inc
sub
arpl
mov
jmp
loope
lahf
out
insb
jp
sub
shll
xor
roll
mov
mov
std
in
mov
and
test
add
mov
sahf
mov
test
jle
imul
out
shl
js
pop
out
fwait
cs
add
adc
and
nop
push
ljmp
lret
lock
cltd
and
jne
dec
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
test
jle
and
jle
xchg
mov
sub
or
ss
add
aam
push
testb
mov
out
mov
jg
outsb
in
icebp
data16
dec
daa
mov
xor
std
ljmp
sbb
dec
and
test
xchg
insb
jne
push
aaa
rclb
in
out
decl
jp
daa
mov
and
jne
rcrb
mov
push
insl
enter
inc
mov
scas
cmp
jle
push
adc
xor
inc
mov
mov
mov
adc
testb
fisttpll
or
jp
js
aad
mov
imul
cmp
push
ret
das
sub
outsb
test
sub
mov
mov
jl
push
pop
pop
loop
jmp
cmp
mov
aas
add
repz
jg
jge
or
ja
sbb
xchg
adc
dec
inc
pop
xchg
sub
lea
sub
out
and
into
pop
pop
jecxz
movl
xor
jne
mov
scas
int3
mov
mov
jns
or
push
pushf
jns
lods
fiadds
insb
mov
gs
jnp
mov
out
sahf
and
xor
mov
bound
loopne
aam
add
cmpsl
jg
dec
popf
out
notb
adc
aam
pop
lcall
push
mov
shrb
push
jge
ss
push
jae
clc
outsb
outsl
mov
inc
or
int
dec
fdivr
clc
inc
cwtl
lahf
mov
or
xor
dec
outsl
sbb
rorb
xor
xchg
xchg
sub
xchg
insl
or
aaa
and
sub
ret
or
lea
movsb
test
lea
inc
dec
ret
or
in
jne
add
fldl
dec
xorb
push
jecxz
push
jge
jge
add
jns
ja
rolb
mov
adc
loop
add
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
mov
jle
and
jle
repnz
mov
add
or
xchg
mov
add
out
xchg
mov
shrl
imulb
push
sarl
jmp
nop
mov
aam
leave
int
test
or
mov
xor
and
pop
add
ficompl
lret
rclb
mov
je
notl
and
test
icebp
je
scas
jns
hlt
callw
sahf
pop
inc
loopne
pop
pcmpgtw
sbb
mov
out
cmpsl
loopne
mov
mov
enter
and
ja
push
xor
mov
fwait
jmp
push
jmp
sub
movb
stos
xchg
cwtl
mov
xchg
add
jbe
inc
pop
mov
adc
and
mov
mov
clc
push
test
fwait
test
fidivrl
scas
dec
movsb
outsl
push
les
fcompl
inc
cmp
cmc
sbb
int
xchg
pop
out
jl
repnz
stc
add
push
inc
or
call
outsb
sbb
add
add
dec
sbb
xor
mov
jp
sub
inc
rorb
sbb
inc
js
fs
in
jmp
fnstcw
scas
cmp
xorl
xor
and
jbe
in
mov
insb
inc
pop
stc
ds
lds
mov
mov
cmp
test
lcall
mov
sbbb
adc
loope
test
imul
jne
sub
sub
or
mov
xor
movsl
rcl
push
fwait
ror
test
sarl
and
pop
jbe
divb
or
dec
dec
cmp
inc
mov
mov
sbb
data16
dec
xchg
mov
pop
fnstenv
in
xchg
xchg
fwait
stos
cld
mov
push
lea
repnz
xchg
idivl
lahf
call
and
push
movsb
sub
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
pop
pusha
cmp
sarb
and
jle
add
jo
mov
dec
int
pop
sbb
enter
inc
pop
mov
jl
loopne
test
xor
out
mov
jnp
mov
jno
push
xchg
dec
jp
fstl
idivb
inc
sbb
test
mov
jno
imul
jmp
out
repz
mov
mov
call
in
ret
sbb
sbb
xchg
mov
repz
scas
mov
add
sbb
daa
adc
push
lea
xchg
fcoml
aas
adc
xlat
das
daa
sub
lods
cmp
sub
cmp
push
push
dec
mov
jns
in
adc
push
dec
pop
xchg
loope
sbb
hlt
fbstp
inc
insl
adc
ja
add
mov
and
lret
shl
mov
loop
sti
fildll
imul
call
cmp
adcb
iret
push
aas
stc
imul
cmp
aad
push
fnstsw
cmp
mov
call
dec
adc
push
popf
fsubrl
jno
test
jle
into
fidivrl
add
test
mov
jno
or
and
push
mov
dec
js
test
or
hlt
jo
imul
jne
push
dec
orps
sbb
push
outsl
and
rorb
sbb
add
xor
es
cmc
mov
add
cmc
shlb
or
loop
inc
or
outsb
mov
pusha
loope
jb
or
xchg
adc
adc
xor
sub
sub
mov
sbb
aam
dec
pop
dec
jb
adc
sahf
es
dec
xchg
sti
dec
mov
les
cwtl
sarb
and
push
xchg
xchg
mov
fwait
pop
loop
xchg
and
cmp
insl
or
mov
fsub
pop
loopne
or
shll
xor
dec
mov
mov
in
or
insl
xchg
sahf
in
push
mov
sub
inc
stos
dec
sub
cs
shll
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
insb
xor
add
dec
or
leave
jnp
lock
xchg
mov
lret
cmp
mov
cmp
push
je
xchg
data16
and
dec
sub
in
push
cwtl
push
fisttps
push
inc
fbstp
cmp
rol
xor
jno
cmc
lret
ljmp
cwtl
js
ds
xor
jge
and
call
test
fs
mov
push
sbb
pop
mov
pop
out
jbe
cmp
insb
test
lret
mov
inc
shlb
mov
or
bound
pusha
mov
blcs
aad
inc
add
and
pop
pop
cmp
pop
sahf
push
jle
daa
jmp
cmp
jl
mov
xchg
mov
mov
pop
pop
aas
jns
stos
ficoml
int
cltd
jno
mov
dec
insl
lea
jmp
or
lds
test
mov
mov
push
lret
adc
fbld
xchg
cli
jb
test
and
in
inc
jl
and
xchg
xor
fnstenv
popf
insl
rcrl
imul
icebp
dec
pop
add
movsl
mov
xchg
fidivs
mov
fists
mov
es
inc
xchg
aad
ljmp
and
cli
adc
or
test
rclb
rclb
dec
jl
repz
push
hlt
in
mov
fistl
imul
jp
or
dec
insb
in
cmpsl
in
sbb
and
std
pop
out
scas
jmp
pop
adc
cld
mov
xor
ffreep
jo
cmpsl
std
filds
dec
arpl
mov
mov
pusha
add
imul
imul
cmp
mov
push
and
xor
cwtl
and
fldcw
dec
xchg
notb
dec
repnz
cmpsb
data16
jb
hlt
dec
xchg
fsubl
fwait
ret
fsts
push
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
lds
jle
jl
jle
jb
push
mov
pop
xchg
in
stos
iret
mov
jo
or
shl
ficoml
jp
inc
psubsw
jp
popa
or
into
fdivs
in
xor
out
cmpsb
add
mov
clc
out
adc
dec
movsl
inc
mov
mov
lods
sti
jb
pop
dec
stos
out
push
sbb
lds
data16
push
pop
jle
pop
xlat
cwtl
stos
outsb
int
lcall
shlb
xchg
sbb
pop
movb
sbbb
sub
ja
mov
pop
or
adc
xor
inc
push
cmc
sarl
sbb
dec
outsb
pushf
int3
mov
mov
pop
sbb
out
pop
sbb
int
push
cmp
jbe
jnp
mov
fsubs
jno
cld
mov
outsb
inc
push
mov
inc
aad
xor
push
cmp
mov
xchg
xlat
sbb
loopne
fistl
dec
sub
int
xchg
rclb
dec
aaa
dec
pop
push
or
std
das
mov
push
cmpsl
popf
hlt
push
in
roll
push
inc
fdiv
xchg
dec
add
comiss
lds
jle
inc
pop
lds
push
pop
xor
popl
jnp
adc
loope
pop
inc
int3
mov
adc
jmp
sub
add
fldt
pusha
adc
fs
je
stc
ljmp
add
mov
aad
sbb
jmp
movsb
cmp
icebp
mov
jecxz
int
add
cmpsb
push
lods
inc
shlb
and
or
add
inc
fidivs
insb
popa
js
imulb
or
repz
das
cli
xchg
or
jne
pop
movl
xor
aaa
cmc
pushf
sbb
push
ss
pusha
scas
jg
jmp
stos
rcl
mov
fisubs
fistpll
lock
and
stos
rcl
or
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
rol
cltd
stos
fcomp
jle
and
jle
inc
ja
lret
pushf
in
cmpsl
hlt
sub
adc
mov
sub
lea
mov
cmp
dec
pusha
outsl
dec
fsubrl
mov
sub
aad
roll
cmp
lods
mov
adc
outsb
xor
cmp
adc
mov
xchg
addr16
pop
dec
jbe
imul
stos
fisubs
sub
ficomps
push
inc
add
bound
mov
imul
cmc
push
sbb
mov
xchg
xchg
mov
xchg
jl
sbb
das
jae
pop
jbe
flds
and
sbb
jg
mov
je
sbb
iret
lcall
in
mov
hlt
cmp
mov
or
jnp
cmp
or
arpl
cs
or
mov
fcoml
and
mov
std
pop
sub
cmp
aaa
lahf
fwait
out
mov
mov
cmpsb
sbb
dec
int3
pushf
sub
mov
std
cs
enter
mov
add
call
shlb
xor
aaa
inc
adc
jne
cwtl
nop
dec
addr16
out
sti
push
adc
lods
mov
call
sub
adc
rclb
fwait
jb
xchg
dec
out
or
dec
daa
in
sahf
adc
test
test
js
mov
cld
scas
lahf
dec
pop
imul
cs
inc
sub
imul
movsl
xchg
xlat
pop
mov
inc
inc
fcmovu
mov
mov
ds
mov
sub
not
add
nop
stos
mov
inc
fdivrl
in
jnp
mov
pop
data16
ud0
aaa
in
sub
mov
mov
jb
inc
lret
mov
jo
sbb
jge
mov
and
rolb
repz
cmc
mov
xor
lret
shrb
add
fcmovu
lods
jo
xor
sub
fwait
addr16
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
inc
iret
dec
dec
xorl
jle
mov
push
pushf
stos
in
or
lea
loop
mov
movnti
call
adc
push
dec
or
or
icebp
test
adc
outsb
pushf
adc
xchg
mov
pop
xor
out
stos
in
lret
addr16
xor
jnp
adcb
lea
push
stos
stc
push
mov
adcl
adc
popf
pop
push
and
mov
push
sub
outsb
das
pop
xchg
stos
push
popf
hlt
mov
push
pop
and
and
nop
lret
lahf
or
cmp
mov
leave
fiadds
xor
dec
dec
pop
in
ja
cmpsl
mov
imul
jo
xor
stc
pop
imul
out
push
lcall
into
clc
jo
in
jnp
mov
inc
pusha
xor
add
cs
je
adc
mov
or
inc
inc
inc
sub
imul
sub
xchg
icebp
jb
cmovbe
iret
add
jnp
xor
xlat
jne
lahf
imul
push
call
push
imul
call
loope
mov
adc
mov
fwait
mov
sbb
xchg
jge
imul
enter
stos
lahf
pop
cmp
repz
push
pushf
xlat
imul
loopne
ljmp
push
lahf
fs
xor
pusha
pop
icebp
sti
and
nop
fisubrs
or
xor
decl
sbbl
mov
dec
jp
fs
add
xchg
pop
fdivp
fsubl
xor
aam
test
xor
mov
std
enter
jp
cld
bound
pop
mov
std
or
xor
popf
dec
and
call
pop
mov
push
jmp
cltd
rolb
hlt
cmp
mov
popf
adc
out
pop
mov
outsb
mov
pop
inc
pop
xchg
lahf
push
mov
sbb
std
add
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
test
mov
jle
cmp
xchg
loopne
adc
inc
adc
xchg
jbe
xchg
sti
movl
push
fsubrs
and
les
dec
mov
dec
mov
lss
jbe
arpl
es
adc
jmp
divl
xor
dec
cmp
jg
data16
inc
cmpsl
out
sti
cmp
testb
data16
addr16
jl
aad
cli
mov
out
aas
add
or
in
adc
mov
sahf
add
lods
xor
and
push
cld
jg
mov
push
movl
push
cs
orl
mov
add
xlat
and
shl
sbb
add
scas
xor
in
in
add
outsb
lcall
in
push
fldcw
movsb
ficoms
fwait
jns
cmp
test
or
sub
add
or
fldt
psubsw
mov
leave
insb
test
shll
xchg
std
hlt
scas
shr
mov
or
movsl
pushf
or
int3
mov
incb
out
mov
js
test
lea
outsb
sbb
into
scas
jp
push
sti
sbb
bound
cwtl
or
mov
imul
aam
or
inc
rolb
cmp
jecxz
stos
fwait
loope
lods
add
mov
jg
mov
mov
fisubl
add
es
xlat
xor
fcomps
jg
cmpsl
cmpb
xor
out
jns
mov
adc
out
mov
mov
jle
pop
jae
fsubl
xchg
mulb
and
pop
push
dec
sbb
add
dec
dec
push
cmp
mov
and
mov
sub
jg
or
loopne
ja
push
jle
pop
jnp
jp
inc
call
dec
loopne
das
outsl
int3
sbb
scas
jmp
test
out
into
cmpl
adc
das
cmp
xchg
add
inc
mov
mov
sbb
jg
mov
popf
es
mov
in
xchg
xor
je
popa
dec
mulb
stc
and
xchg
fimuls
cld
inc
and
sbb
push
push
sbbl
jmp
lds
popa
mov
fisttpll
pushf
jle
jle
cmp
push
cmp
mov
stc
scas
imul
aaa
sbb
inc
jle
das
lret
cld
bound
ja
cmpsb
or
icebp
pop
pop
and
xor
daa
imul
outsl
lcall
loop
sub
fcomps
cmp
xchg
xchg
lea
mov
idiv
arpl
adc
call
adc
jns
stc
pop
popf
cltd
push
std
mov
push
test
into
lds
mov
and
leave
fs
enter
loopne
push
ret
movsl
mov
xchg
and
inc
or
xor
cmp
jns
mov
stos
xor
pop
mov
dec
addr16
test
pop
adc
hlt
in
js
lret
xchg
scas
xor
xor
inc
sub
arpl
aam
or
outsl
xor
unpcklps
add
and
xlat
add
sub
jne
iret
sbb
cmp
mov
andb
popa
dec
sti
and
mov
add
mov
mov
push
sbb
dec
fiadds
pop
pop
ret
dec
add
xor
cmpsb
pop
sub
sub
dec
and
or
pop
mov
xchg
sbb
sbb
dec
xor
mov
scas
dec
dec
cmpl
loope
inc
imul
clc
mov
and
push
lret
rclb
pop
lds
cmp
xor
loope
xchg
mov
sub
dec
ret
adc
mov
xor
mov
lcall
jo
pushf
cmp
cmp
lds
aad
imul
es
shlb
mov
jp
aam
xchg
popl
outsl
test
or
mov
mov
jle,pt
ss
orl
sub
inc
stc
mov
add
mov
cmc
jno
dec
cltd
mov
xor
jbe
imul
xchg
adc
xchg
push
pusha
or
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
ret
das
mov
jle
jl
jle
jge
pop
ja
adc
js
enter
fdivs
push
sub
cmp
push
jg
in
push
dec
xchg
pushf
jp
add
mov
jmp
scas
jo
js
pop
dec
test
fldcw
rcl
fsts
push
je
mov
cmpl
fisubrl
and
xlat
lcall
jnp
icebp
fimuls
fbstp
out
sub
inc
setg
or
mov
mov
loopne
cmpl
and
std
cmc
xchg
push
shrb
aam
or
inc
xchg
aaa
mov
sbb
mov
nop
je
dec
jb
je
cmpsl
mov
pop
jae
aam
test
push
sub
test
into
cmp
push
mov
aas
popf
xor
dec
insl
adc
lock
mov
mov
mov
xchg
push
xor
dec
call
cld
cmc
and
xor
mov
jmp
int
mov
repz
pop
sahf
inc
into
cmp
mov
fiaddl
test
mov
mov
fdivrl
xchg
leave
push
pusha
mov
sbb
jae
shll
inc
dec
inc
mov
movsl
adc
cs
sub
inc
mov
insb
inc
or
ja
cs
or
cli
sub
push
out
or
add
sbb
jmp
xchg
loop
push
es
add
inc
mov
mov
negl
ds
xchg
jo
sub
fsubrl
and
jge
lods
pop
cld
push
into
stos
bswap
pop
aad
scas
mov
push
cmp
orl
lahf
mov
xchg
call
and
lds
or
sti
pop
dec
scas
out
or
xor
inc
lds
addr16
sbb
fldcw
mov
or
cltd
mov
jl
mov
scas
dec
push
xchg
xor
scas
mov
daa
syscall
dec
out
mov
cmp
inc
outsl
sub
jns
inc
cld
push
or
push
lret
xlat
dec
fnsave
sub
xchg
mov
mov
pop
cmp
dec
ss
inc
inc
rorl
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
xchg
push
mov
jl
jle
fs
loope
sbb
arpl
lds
mov
mov
in
push
mov
lock
incb
aas
or
pop
subl
fs
pop
jae
dec
fs
adc
sub
sbb
inc
adc
std
sub
dec
inc
rol
ljmp
jbe
push
aas
mov
lds
adc
sbb
and
adcb
test
stc
sub
add
add
pop
pop
cmp
imul
and
pop
push
ss
xor
push
mov
popf
into
jg
popa
and
jecxz
sbb
mov
notb
js
stc
dec
std
aas
jmp
sub
or
or
outsb
adcl
jae
jnp
idivb
mov
xor
aam
xor
inc
in
dec
mov
into
cmp
gs
pop
cmpsb
sub
iret
dec
pop
in
push
xchg
subl
inc
lahf
roll
popa
sub
ljmp
and
or
pop
cmc
enter
push
jne
xor
es
hlt
inc
sbb
jmp
push
jns
repnz
jg
inc
inc
mov
jecxz
test
jne
mov
jne
inc
xchg
sbb
jae
movsb
insb
push
xor
add
negl
outsb
lret
ja
mov
sub
fbld
mov
sbb
and
inc
out
mulb
or
or
add
jbe
iret
xor
cmp
mov
jmp
out
xchg
les
mov
addr16
xchg
loopew
mov
lods
negl
and
jg
cmpsl
fdivl
movsl
inc
out
scas
adc
enter
stc
mov
jecxz
mov
cmp
outsl
out
dec
mov
outsl
bnd
dec
cmp
ds
inc
int
xor
insl
outsl
icebp
repnz
xchg
dec
inc
lret
add
outsb
pop
cmp
mov
xchg
pop
clc
call
mov
les
or
frstor
mov
call
sti
xor
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
icebp
clc
adc
out
jle
cmp
movsb
ss
rcrb
rolb
addr16
sub
fildl
dec
clc
enter
in
xor
sbbb
cltd
clc
cmpsl
jb
mov
cmp
orl
fldenv
inc
sbb
push
iret
outsl
push
cmpsb
add
sbb
outsb
sbb
inc
popa
inc
cmp
ds
jb
stos
and
lcall
and
jae
jne
inc
insl
push
ljmp
insl
mov
inc
pop
jl
aaa
lods
lret
xchg
cltd
in
gs
mov
lahf
int3
stos
cs
aas
cmc
es
mov
aaa
popf
cli
addr16
mov
popf
push
lods
or
mov
inc
lcall
sbbl
popf
jmp
jae
and
fs
xchg
mov
loop
push
dec
iret
es
idivb
jo
sub
fwait
jecxz
bound
cltd
dec
xor
orb
mov
or
and
cld
rcr
in
lds
xor
mov
sahf
clc
pop
push
push
jg
ljmp
push
je
aam
mov
jecxz
mov
xor
adc
and
lret
jo
test
lods
sbb
sub
xor
xchg
cltd
cmp
pop
xor
add
aas
ja
cwtl
push
add
mov
pop
jp
fnsave
pop
pushf
gs
sbb
or
pop
dec
das
or
sbb
mov
ret
inc
dec
and
and
push
lea
pop
sarb
sub
and
xchg
and
and
inc
in
xchg
popa
push
xchg
mov
addr16
sti
lahf
sub
ror
xor
add
cli
mov
pusha
aam
pop
fbld
dec
add
fisubrl
imul
popf
or
push
jmp
lret
cmp
cmp
lods
mov
jle
les
add
sub
mov
out
inc
pop
wbinvd
addl
loopne
inc
in
jbe
xchg
stos
inc
dec
pop
xor
cld
add
sbbl
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
fs
cmp
mov
pop
inc
mov
test
imul
sub
stos
sahf
pop
mov
adcl
adc
mov
sbb
mov
sbb
inc
lahf
subb
jmp
cmp
mov
cwtl
mov
std
xor
mov
xchg
dec
adc
push
icebp
push
pusha
pop
clc
push
insb
in
aaa
cmp
ret
or
adc
mov
jb
jns
popa
lcall
inc
nop
jb
add
adcl
mov
xor
imul
pop
xlat
out
sub
sbb
inc
mov
pop
out
or
js
pop
nop
in
mov
add
sub
xchg
in
aad
imul
stc
gs
dec
lods
ja
xchg
das
loope
xchg
jb
dec
pushf
mov
mov
aaa
or
addr16
or
leave
lret
jle
repnz
mov
mov
xchg
mov
pop
push
mov
pop
jo
push
xchg
cmp
adc
mov
mov
sub
and
lret
icebp
and
pop
lcall
sbb
lret
icebp
insb
repz
sbb
dec
icebp
cmp
stos
xchg
sbb
mov
addl
push
mov
movsl
dec
outsb
sarl
shll
mov
cmpsl
sti
xchg
std
dec
incb
push
jecxz
stc
cmp
mov
clc
les
inc
adc
sbb
test
adc
ja
add
mov
dec
jnp
xchg
test
lds
or
sub
dec
mov
lods
adc
sahf
add
push
scas
mov
andl
jns
push
iret
popa
int
mov
lret
cli
lods
mov
adcl
mov
ss
xchg
loop
adc
stc
stc
mov
rcpps
jb
cmp
jb
sbb
dec
shll
dec
pusha
sub
cmp
inc
jns
in
jl
aam
mov
mov
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
sbb
jmp
jle
jl
jle
or
mov
sbb
inc
or
pop
sub
sbb
out
testl
fidivs
jne
push
mov
sbb
pop
cltd
dec
jns
inc
inc
out
mov
xchg
jbe
mov
ja
jb
mov
daa
xor
lock
test
mov
aaa
fimuls
stos
pop
lgdtl
cmpsl
xchg
mov
rcll
and
int3
inc
inc
inc
xchg
mov
pmulhuw
cld
and
enter
cmp
rcll
nop
dec
aam
sar
push
jmp
lea
in
mov
enter
ljmp
xchg
xor
xor
pop
test
sahf
adc
and
mov
shrl
addr16
cmp
movsb
nop
movsl
cmp
lret
dec
xor
aaa
les
mov
outsb
mov
jns
mov
sub
cmp
mov
jmp
pop
sub
mov
test
insl
jg
test
push
mov
dec
cmpsb
fs
shll
pop
jle
jns
fstps
repnz
sub
shl
js
cmpsl
shl
ljmp
jge
into
adc
xchg
sahf
pop
subl
lea
mov
xor
push
pop
mov
mov
cmpsl
subl
pop
sub
enter
lea
push
dec
cmpsb
scas
loope
mov
ret
or
pop
mov
inc
lcall
je
adc
imul
xlat
pop
dec
dec
push
imul
mov
push
cmp
rcr
cmp
int3
in
xor
aam
lds
rclb
push
out
mov
mov
inc
or
jg
mov
insl
adcb
nop
xor
inc
ret
sub
pop
popa
aas
shll
rolb
pop
in
mov
or
cwtl
and
into
aad
fisubs
aad
pop
out
loopne
shll
pop
jbe
aad
jne
mov
xchg
pop
or
xlat
je
fistpl
sti
pop
add
nop
repnz
cmp
stos
pop
pop
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
out
mov
push
pop
ljmp
cmpsl
xchg
es
pop
frstor
add
loopne
push
out
and
and
cmpsl
pop
push
clc
hlt
mov
loopne
aad
xor
cmpsl
sub
and
pop
jle
stos
mov
gs
xchg
jg
sbb
pop
dec
mov
jo
jmp
xchg
cmp
push
decb
stc
lret
inc
push
in
sub
popf
sbb
mull
icebp
sub
jmp
dec
pop
adc
vpshufhw
gs
imul
adc
js
mov
xchg
jae
aas
sub
sbb
add
mov
mov
in
lret
insb
loopne
cmp
jae
and
inc
int
shlb
dec
mov
xor
je
sub
data16
pop
push
mov
lret
decl
fildl
imul
inc
mov
pop
xchg
pop
dec
test
pop
fsubrs
push
insb
xchg
sbb
enter
jbe
xchg
ja
xchg
loopne
daa
cltd
imul
test
sub
jl
icebp
fdivr
mov
push
inc
data16
push
cld
adc
aaa
adc
push
xor
mov
and
pop
out
xchg
dec
xor
jae
jmp
adc
scas
inc
lret
outsl
or
cwtl
in
clc
cmp
add
jp
sub
xlat
into
icebp
das
dec
mulb
sbb
sarb
mov
rclb
pop
fisubs
insl
dec
pusha
jp
xchg
sub
out
ds
pop
aad
aad
pop
push
mov
xchg
cltd
insb
jno
jge
jb
mov
adc
stc
jl
ja
mov
cmc
in
out
fldenv
loope
dec
loope
dec
pop
adc
jmp
es
test
mov
scas
bound
adc
push
fisubrs
cwtl
movsb
sbb
mov
aaa
jge
and
aaa
aas
sub
push
ja
and
movq
in
stc
cmp
imul
dec
fwait
repz
insb
cmpsb
stc
adc
or
pusha
sahf
jmp
push
sbb
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
mov
idivl
cmp
lret
arpl
jge
lods
movb
cld
inc
fistps
push
mov
sbb
gs
adc
pop
js
and
sub
fadds
lods
push
xor
mov
xchg
ss
sti
orl
xlat
dec
aam
in
mov
jae
adc
cmc
xchg
hlt
enter
cmp
add
mov
rcrb
jns
fucomp
dec
scas
ds
rcrb
test
add
xchg
or
dec
cld
sub
mov
add
imul
cmp
lds
xchg
mov
fwait
mov
std
xor
dec
mov
mov
or
mov
adc
mov
shlb
loopne
adc
divb
push
sbb
lret
jb
das
or
in
mov
out
iret
cmp
jmp
mov
mov
and
pushf
cmp
insb
jae
imul
fwait
pop
mov
jl
out
jge
test
sub
es
stc
adc
mov
enter
fiaddl
jle
insl
repnz
popa
rcrb
test
popa
mov
out
xor
dec
mov
push
cwtl
enter
xor
popa
pusha
jecxz
sub
push
jl
jmp
outsb
add
push
jecxz
mov
enter
movsb
mov
cmp
shrb
add
into
aad
and
data16
fmul
jge
cmp
in
es
out
fwait
cltd
xchg
stos
add
xchg
out
mov
in
shll
or
aas
hlt
rorl
div
test
cmp
lods
jg
cmp
cmp
dec
fistpll
or
int
aas
mov
mov
ret
push
mov
dec
cltd
fistpll
adc
jb
adc
sbb
leave
and
inc
dec
in
and
cmc
mov
dec
popa
inc
sahf
xchg
ret
jae,pt
inc
in
xor
push
or
repz
push
fwait
out
aaa
pop
pop
sub
xchg
hlt
ljmp
mov
aad
inc
or
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
int
xchg
out
bnd
cmp
cmpsb
pop
dec
or
or
call
xor
sub
jle
jo
xchg
fwait
lahf
pop
xor
pop
roll
adc
lods
adc
cmp
cmp
push
jge
fwait
and
and
outsl
mov
call
xor
push
fnsave
lret
sub
in
cmp
out
fs
pop
mov
sbb
hlt
jne
mov
pop
add
mov
mov
xorb
sbb
adc
pop
dec
jmp
or
mov
pop
out
sub
add
orl
cmpsb
out
mov
lods
mov
stos
adc
sbb
leave
icebp
sbb
shrl
pop
or
jne
xor
stc
sahf
jecxz
cmpsl
stos
out
sbb
test
idivl
in
stc
and
or
std
sahf
jns
movsl
test
aas
mov
jno
aaa
cmp
dec
sbb
push
gs
inc
in
push
jmp
sbb
pop
insb
cs
and
add
jg
mov
clc
sti
into
aad
test
jno
outsl
scas
outsl
add
dec
and
cmp
xchg
movsb
inc
and
pop
dec
jb
pop
fstpl
fcompl
pop
push
mov
jbe
mov
je
leave
sti
sarb
inc
sbb
js
repnz
outsl
icebp
ret
in
sub
popa
xchg
fs
jl
fisubs
pop
insb
push
int3
je
and
in
movsb
sbb
bound
mov
adc
push
andl
das
cmp
sub
test
and
pop
shlb
rorb
sub
in
out
xor
rcrb
fs
insl
cmp
mov
xor
sti
cmp
mov
shrb
cmp
scas
arpl
jmp
xor
push
ss
sub
sbb
aad
iret
sbb
in
rcr
pushf
pushf
inc
add
aad
cmp
daa
scas
ficoms
movsl
in
fld
negl
outsb
mov
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
jnp
outsl
call
jl
jle
lods
cmp
shll
pop
adc
fiadds
and
xchg
xchg
mov
or
ss
movsl
shrb
test
or
dec
andb
les
addr16
sub
orl
es
stos
popf
mov
mov
cwtl
and
mov
inc
or
aaa
sub
lret
xor
imul
sbb
popa
outsl
or
dec
xchg
sbb
repnz
and
push
mov
or
mov
sub
jae
into
icebp
xchg
lret
xor
adc
inc
xchg
roll
mov
das
mov
dec
mov
pop
out
in
xchg
lahf
jge
lret
scas
imul
dec
sti
jnp
push
push
add
aam
jns
jecxz
and
stos
mov
push
xchg
in
addr16
fsubrs
repz
pop
popf
popa
fcompl
push
loope
dec
and
stos
and
or
cmp
adc
xor
cmpsb
sub
mov
sti
xor
push
jne
or
dec
adc
sbb
idivl
jb
dec
test
imul
ret
gs
xchg
cmp
lcall
xor
pop
cld
ljmp
mov
aad
repnz
mov
xchg
cmp
es
xchg
aas
repnz
jecxz
pop
sub
lahf
neg
repz
mov
pop
adc
inc
push
pop
sarl
pop
outsl
xlat
and
addr16
test
cmc
sti
iret
jp,pn
cmp
shrl
ja
es
or
cli
sbb
or
mov
jbe
cmp
punpckldq
hlt
dec
adc
aad
jnp
out
aam
add
push
cs
jp
sarl
mov
mov
xchg
arpl
fcompl
clc
or
cmp
out
fidivrs
xchg
add
xor
popa
std
faddl
adcb
js
mull
cmp
mov
dec
mov
dec
sahf
mov
lods
push
adc
add
mov
dec
xor
ret
push
lcall
inc
pop
sbb
mov
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
fs
mov
jle
cmp
loope
push
xchg
cmpsl
dec
es
jns
xchg
mov
sbb
rol
loopne
ret
mov
imul
rsm
or
inc
mov
sahf
jae
rcl
fcomip
dec
cmp
cli
icebp
fs
sbb
lea
data16
mov
dec
push
imul
cmc
push
gs
dec
ret
xchg
fwait
rorl
ret
or
inc
sbb
push
shlb
xchg
rcr
imul
jp
adc
andl
cs
sbb
adc
jae
pop
sbb
pop
pop
xor
cmp
stos
testl
push
dec
xchg
adc
sbbb
jno
and
std
dec
lret
int3
int
xor
stos
inc
mov
daa
cmc
icebp
insl
dec
fyl2xp1
dec
sub
mov
insl
sub
adc
fwait
adc
push
inc
mov
cmp
dec
mov
push
pushf
push
in
sahf
mov
pop
sar
aam
pop
adc
push
lcall
add
adc
clc
lret
rcll
lds
in
aad
repz
imul
ss
or
mov
scas
mov
movsb
fs
outsl
sub
out
loopne
int3
push
lcall
popf
ret
roll
mov
mov
mov
pusha
aam
stos
in
lahf
int
dec
ret
sbb
sub
ds
movsb
sbb
arpl
rorl
les
loop
fwait
ds
xor
push
pop
cmp
mov
sarb
daa
jp
xchg
inc
adc
daa
in
pop
cmp
inc
cmp
adc
es
and
mov
pop
add
in
cmp
and
mov
shll
daa
mov
xor
inc
das
or
mov
movsb
pop
mov
repz
jnp
and
leave
addr16
adc
pop
icebp
xlat
scas
mov
movsl
js
lods
iret
mov
es
outsl
fucomip
jg
gs
lret
in
popf
fisubs
push
lret
xor
outsb
in
dec
insb
push
adcb
sbb
jns
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
ljmp
jl
jle
mov
rcrl
popf
mov
jnp
mov
mov
and
push
pop
lods
push
pop
adc
lret
insb
aas
or
pop
mov
in
insl
subb
fwait
mov
sub
sti
add
ret
shrl
mov
dec
pusha
push
cmpsb
mov
cmpsl
icebp
lret
jae
pop
jmp
sub
insl
inc
dec
dec
stos
push
test
and
xchg
test
lock
mov
shl
pop
mov
or
loop
lock
shrl
mov
inc
ja
cmp
mov
in
jg
xor
adc
and
jp
into
cld
sahf
pop
mov
lock
je
push
aad
call
jb
daa
mov
in
je
sub
and
fwait
scas
push
lds
frstor
cld
dec
jmp
daa
orl
ret
jno
mov
pop
or
or
cmovo
lcall
cwtl
ficomps
enter
push
aas
rcrb
inc
les
dec
repz
mov
fsubrl
imul
xor
cmp
int
outsb
pop
sub
shr
mov
sub
test
push
mov
or
scas
dec
mov
dec
mov
movsl
pop
or
imul
imul
mov
out
add
lea
pop
insw
das
cmp
mov
in
mov
cmc
fucomi
mov
mov
pop
fwait
cmp
clc
xchg
filds
repnz
call
dec
and
cmpl
data16
xlat
daa
cli
repnz
aas
mov
and
jle
icebp
ljmp
std
sub
or
push
sub
xor
adc
xor
mov
push
sbb
lea
cmp
push
leave
cmp
sub
loop
adc
testb
mov
je
inc
mov
je
and
fld
jmp
sbb
hlt
orb
lods
mov
ds
cld
test
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
cmp
sti
jle
cmp
sub
add
jmp
repz
jle
mov
push
stc
ret
loop
mov
sbb
int3
xchg
lods
mov
scas
aas
lahf
pop
inc
pusha
lret
into
inc
and
fidivrl
jecxz,pn
jmp
sbbl
pop
adc
or
mov
add
js
rcr
ja
cmpsl
loope
std
sub
repnz
mov
ja
out
ja
shl
addr16
jmp
mov
push
outsb
jecxz
imul
jge
cltd
js
sbb
les
lahf
test
sbb
xor
fsubl
test
push
mov
loopne
cli
leave
sar
xorb
sbb
fstl
movsb
sub
and
mov
and
inc
mov
movl
mov
in
fldt
dec
jle
imulb
fldt
call
fidivrl
mov
repnz
aas
fisttps
cmpsb
dec
cmp
lret
mov
or
and
inc
sbb
jno
mov
jae
add
push
imul
out
xchg
lret
inc
movsl
xor
shrl
pop
int
fwait
jg
insb
pop
sbb
icebp
or
ds
cmp
scas
out
inc
and
cmpsb
mov
lods
aas
mov
popa
mov
cli
das
sub
outsl
adc
jecxz
sub
mov
enter
sbb
xor
dec
outsb
mov
mov
pop
mov
mov
aad
pop
test
popa
loope
mov
pushf
pop
call
sub
insl
test
lods
xchg
inc
mov
xor
mov
jo
ljmp
std
mov
jmp
sbbb
das
cmp
inc
outsb
jmp
mov
cld
jg
and
cli
stos
sbb
fcoms
enter
mov
or
push
movsb
jbe
aam
repz
adc
lcall
and
call
cmp
mov
cmp
jne
stos
pop
pop
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
or
jl
jle
sub
xlat
ja
xchg
out
mov
dec
adc
shlb
rorl
pop
sahf
leave
push
sub
popa
loopne
pop
outsl
ret
imul
fwait
mov
es
xor
test
dec
xor
rcrl
or
shlb
adc
mov
sbb
adc
es
mov
lods
dec
repnz
cs
mov
mov
adc
fdivrs
fadds
testl
mov
mov
cmp
sbb
sbb
inc
xchg
adc
scas
out
ret
sti
inc
inc
loop
or
aaa
mov
xchg
outsl
cld
test
mov
sbb
add
shrl
inc
test
out
jge
adc
test
lret
mov
scas
xor
fistps
inc
sub
rol
out
shlb
dec
mov
sbb
pop
clc
dec
cmpsb
sbb
lds
in
dec
inc
push
adc
fmull
adc
call
sub
test
fisubs
xchg
lds
sub
xchg
mov
ja
aam
mov
bound
mull
dec
mov
cmp
jnp
push
orb
jecxz
cwtl
add
rcrl
outsl
sub
repz
stc
ret
dec
mov
adc
pop
in
mov
jo
data16
pushf
dec
mov
sahf
je
jl
add
imulb
jg
sub
mov
insl
mov
sub
es
sbb
sbb
and
mov
cmp
bnd
sub
sub
leave
jmp
sub
pop
sar
push
sub
cli
jg
mov
movsl
adc
xchg
sbb
mov
insl
mov
ret
bound
pop
shlb
or
js
push
in
stos
ret
inc
inc
test
xchg
jge
insb
pop
jl
dec
cltd
ret
call
dec
addr16
adc
sbb
sub
pop
ds
or
push
dec
movsb
adc
push
push
pop
cmpsb
arpl
jecxz
lret
xchg
mov
lods
xlat
sub
cmc
lods
lahf
mov
fldl
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
fadds
xchg
cmp
in
ds
add
adc
pushf
cwtl
mov
pop
js
ror
pop
jbe
mov
mov
mov
imul
addr16
mov
xchg
push
and
mov
movsl
add
xor
sbb
fldt
in
out
sbb
ds
ljmp
pusha
inc
movsl
or
pop
in
data16
nop
sub
rclb
call
ds
xorl
pop
jp
push
mulb
pop
jmp
into
pop
xchg
push
lret
jmp
outsl
cli
lods
lcall
outsb
les
rolb
mov
movsb
testb
mov
dec
push
sub
xlat
or
insb
inc
jno
in
movsb
sub
jo
pop
cli
mov
test
pop
xor
sub
rclb
scas
dec
pop
enter
call
imul
jbe
in
fwait
jno
repnz
cwtl
xor
dec
push
push
cmp
lret
arpl
nop
adc
sub
lret
jp
sbb
pop
fimuls
jnp
stc
xor
fs
xor
pop
add
and
fcomps
aas
push
js
lock
push
xor
xchg
stc
cmp
cmp
xchg
lret
jbe
imul
orb
mov
or
xchg
and
cmp
mov
adc
pop
cli
lahf
popa
lods
jne
push
mov
jb
xchg
enter
push
jge
hlt
mov
pop
cmpsb
js
cmp
jnp
movsb
add
push
imul
push
in
flds
hlt
out
xor
stos
in
cmpsl
add
fs
xchg
add
push
inc
mov
int3
mov
das
inc
nop
pop
and
rcll
mov
test
inc
push
aad
push
mov
subl
enter
orb
push
jne
xor
int
or
sbb
pop
push
sbb
xor
notl
push
mov
scas
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcrl
cmpb
jl
jle
unpckhps
xchg
inc
mov
add
xchg
int3
out
dec
jne
out
jae
cmp
stc
sbb
mov
stc
cwtl
jo
sub
in
add
xchg
pop
jle
jecxz
mov
mov
clc
push
mov
inc
push
hlt
cmp
js
dec
leave
lods
cmp
jge
pop
xchg
inc
jle
xchg
mov
mov
jns
lods
rcl
cmp
incb
out
jmp
loop
mov
scas
mov
aam
push
test
mov
jp
jmp
ret
js
cmp
cmp
stos
popa
or
mov
cmp
popf
aas
loope
mov
add
dec
sahf
cmp
cmp
scas
pop
ss
int3
xchg
aad
inc
inc
outsb
xor
dec
push
dec
orb
jb
sub
arpl
dec
push
stos
push
decl
fcmovnbe
dec
push
scas
inc
jp
imul
cbtw
outsl
cmp
outsb
push
xor
dec
loope
inc
mov
sub
imul
push
cmp
dec
in
sahf
jno
xor
and
fsubs
gs
sub
inc
xor
in
lahf
mov
add
shrl
cld
aam
icebp
lcall
ds
xchg
inc
popa
cld
jbe
xorb
xor
lret
in
push
movsl
leave
pop
insl
cmp
insl
lcall
cmp
leave
xor
ss
ja
sub
out
sub
test
mov
in
pop
jb
xlat
jbe
pop
sbb
aad
fidivrl
test
ret
or
repnz
loope
lock
scas
push
in
fs
jl
jg
add
addr16
sub
jnp
out
inc
add
push
fists
cltd
adc
out
pop
add
and
repz
lea
xor
push
das
daa
xor
stos
movsb
mov
xchg
pop
call
popa
inc
mov
or
mov
inc
pop
loop
popf
add
xor
hlt
cmp
dec
mov
cli
lret
es
call
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
sbbb
jle
cmp
sbb
sub
sbb
mov
jno
add
loope
aas
add
or
pop
gs
sub
dec
mov
stos
push
adc
mov
fisttpl
inc
ljmp
shlb
outsb
push
insb
pop
mov
adc
dec
cli
push
jno
cli
add
mov
aaa
int
and
mov
adc
and
es
punpckhwd
rol
out
lods
inc
add
cmp
pop
or
sbb
stos
pop
hlt
dec
xor
lcall
lods
push
mov
cmpl
push
sbb
jmp
nop
rcrb
inc
adc
movsb
inc
and
push
in
jo
fdivr
mov
mov
stos
in
enter
mov
aas
leave
fiaddl
movsl
push
mov
scas
fidivrl
sbb
pop
or
jg
add
repz
lret
mov
sbb
jp
mov
mov
mov
adc
mov
push
insb
jne
stos
dec
imul
int3
lret
add
pop
pop
int
add
loop
jp
xor
insl
fmull
jle
cmp
je
mov
xchg
fxch
inc
cmc
mov
jb
adc
sbb
fs
xor
sbb
pop
xchg
sub
ljmp
inc
dec
in
mov
test
cmpsb
push
or
mov
ret
call
je
push
shl
cli
test
inc
push
scas
xor
scas
push
stc
or
push
dec
mov
lock
push
pusha
in
or
arpl
inc
pop
dec
sahf
push
push
pop
jo
jnp
sbb
jae
mov
pop
mov
aaa
xor
jmp
ja
pop
mov
push
mov
dec
jmp
xchg
loope
popa
xor
test
dec
add
ret
mov
cmc
icebp
mov
lahf
dec
cmp
lea
rorb
ds
push
ret
push
pushl
mov
cmp
add
and
movsl
xor
mov
std
mov
ss
std
repnz
sub
xchg
adcl
mov
hlt
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
mov
movsb
add
out
stc
imul
ret
and
xor
jle
cmpsl
mov
mov
jecxz
ret
shll
mov
sbb
add
rep
lahf
js
sbb
lods
xor
js
dec
fisubs
lea
and
notb
and
add
sub
lock
push
xor
outsb
cltd
adcl
and
sub
out
insl
ret
jle
icebp
xor
scas
dec
xchg
fldt
cmpsl
sti
subps
fdivl
mov
pop
push
inc
jbe
jnp
push
and
pushf
leave
fadds
add
ret
sahf
sub
filds
mov
add
push
inc
andb
jns
out
adc
cmp
sub
in
addr16
push
lods
sahf
in
fnstsw
addr16
mov
jnp
aam
into
jge
shll
lahf
into
js
addr16
out
aaa
test
inc
xlat
jl
loope
push
push
sub
dec
mov
out
imul
push
inc
fsubrs
pop
rcl
xchg
inc
cmpsb
repz
xor
add
add
push
test
test
test
fs
sbb
sub
cmpsb
aam
repz
sbb
mov
ljmp
push
inc
sbb
outsb
popf
mov
jle
mov
sub
pop
mov
dec
pop
sar
iret
ficompl
sub
in
lea
pop
jl
outsb
add
dec
xor
mov
call
faddl
mov
fisubrl
int
xchg
mov
inc
add
dec
addl
mov
fists
or
xor
aaa
dec
inc
cli
mov
push
mov
and
mov
jnp
ficoml
ljmp
mov
iret
sub
sbb
jnp
into
xchg
sub
push
push
lret
inc
je
adc
icebp
add
xor
mov
xchg
fs
arpl
mov
pop
add
add
pushf
inc
jmp
je
sub
jp
fldl
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
jae
add
mov
cmp
and
rclb
adc
pop
notl
subb
jmp
pop
lock
xor
dec
mov
lods
fdivrs
enter
mov
sti
clc
xchg
aaa
in
rcr
inc
or
adc
insb
and
pop
repz
adc
push
mov
xchg
ja
sti
sarl
add
mov
cwtl
dec
xchg
test
or
pop
jmp
cld
out
mov
dec
fsubs
les
out
stos
inc
mov
lret
xchg
sbb
aas
pop
jne
hlt
jbe
pop
add
jno
repz
jno
cld
cli
xor
mov
and
fidivs
sahf
ss
jge
ds
sbb
xchg
push
jnp
mov
loop
icebp
aad
cmovle
adc
push
rcrl
push
sub
out
mov
pop
shlb
dec
inc
add
arpl
psrad
push
icebp
iret
stc
arpl
imul
aas
xchg
ret
push
sbbb
dec
and
lds
fcompl
xchg
pop
rorb
push
push
adc
aam
lret
pop
testb
adc
xchg
in
jge
cs
clc
ljmp
fisubs
stos
mov
and
mov
jnp
lret
xchg
icebp
mov
mov
int3
cwtl
pop
pushf
xor
aam
cmp
fxch
and
rcll
cmp
imul
add
mov
enter
fists
and
test
inc
iret
lods
aaa
or
es
mov
add
xor
in
and
sub
adc
xchg
cmp
add
daa
test
dec
sub
ja
out
cmp
sub
sbb
jns
jl
pop
pop
mov
sub
lret
mov
and
mov
jnp
cmpsb
lock
jo
jno
jo
scas
mov
xchg
fwait
pushf
rcr
pushl
out
outsb
popa
cs
add
sub
arpl
mov
movsb
mov
repz
divl
mov
lea
repz
xchg
jmp
push
std
dec
sahf
push
push
add
mov
mov
cmp
push
outsb
xor
mov
pusha
adc
sub
arpl
aam
in
add
sbb
add
dec
push
popf
pushf
push
add
iret
xchg
push
addl
fnsetpm(287
das
pusha
sbb
lret
lods
sti
js
lds
adc
sub
pop
pusha
push
mov
ljmp
cmp
sub
test
push
cltd
dec
repnz
sub
jecxz
mov
mov
adcb
mov
hlt
cmp
dec
pop
fdivrl
out
or
jne
push
es
lods
or
in
insl
mov
or
pop
cs
test
cltd
negb
lods
loope
sub
insl
sbb
mov
jl
iret
scas
mov
mov
mov
out
arpl
test
nop
adc
push
icebp
pop
sbb
mov
lods
hlt
insb
jne
ret
jns
loop
adcb
pushl
cmpsb
ret
mov
ja
sub
sub
xor
jge
test
bound
cmp
mov
jl
cmpb
xor
inc
sbb
add
dec
inc
adc
lds
lahf
add
xor
aaa
les
in
push
ds
mov
sbb
dec
push
xchg
ret
mov
fildll
aas
ret
and
jae
sbb
push
jmp
loope
pop
and
fnsave
aad
and
sub
out
xchg
cmc
mov
cld
lods
lods
cmp
mov
pop
stc
rep
test
jl
insb
stos
daa
popa
dec
scas
loope
add
pop
jnp
sub
jecxz
out
lcall
lods
inc
lds
sti
inc
mov
pop
mov
inc
and
inc
pop
xchg
or
mov
aaa
pop
lret
mov
pop
or
or
cltd
sbb
adc
inc
pop
jp
jbe
xchg
xor
mov
icebp
loope
cltd
lret
push
mov
cmp
arpl
or
les
and
dec
jl
sub
pop
ljmp
mov
sbb
or
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
mov
testb
jle
hlt
rcr
mov
ja
insb
in
push
jb
int
nop
imul
inc
scas
mov
jno
inc
sub
fnsave
mov
aas
add
inc
scas
test
mov
xor
inc
sub
popa
sbb
adc
cmpsb
shlb
testb
mov
test
push
lds
inc
gs
add
xorl
sub
pop
js
pop
mov
test
and
jp
repnz
mov
xchg
add
sbb
adc
mov
insl
jns
in
inc
cmpsl
lcall
jae
insl
cmovs
mov
lret
pushf
loope
mov
mov
and
jne
dec
or
xchg
imul
cld
leave
mov
xor
mov
adc
jmp
fcmove
mov
push
mov
pop
popa
out
ss
add
outsl
jb
mov
je
test
arpl
jae
adc
test
xchg
dec
jmp
mov
xor
dec
hlt
xor
sahf
adc
int3
xor
outsl
insl
test
rcrb
lea
lret
stos
jl
or
inc
sub
fmul
or
or
inc
and
cmp
adc
or
xchg
aad
fcom
fdiv
ja
lret
nop
xor
aaa
lret
lds
pop
jb
mov
lock
in
movb
and
inc
cwtl
mov
int
test
xlat
dec
or
cmp
or
pop
add
pop
hlt
jecxz
loop
push
mov
iret
cmp
adcb
xchg
bound
in
pop
dec
mov
mov
stos
fisttpl
stos
pusha
xor
repnz
pop
adc
mull
lds
push
jb
lret
sti
adc
mov
lret
dec
push
popf
mov
int
add
lret
mov
xor
test
test
sbb
mov
out
jno
iret
and
jle
shl
pushf
addr16
pop
cs
mov
jp
add
cmp
fs
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
fsts
jle
cmp
dec
mov
loop
imul
push
adc
jmp
and
test
repz
cmpsl
cmp
dec
lahf
je
in
lods
cmp
or
fdiv
nop
inc
add
scas
xchg
in
lods
pop
clc
adc
aam
test
dec
pop
mov
dec
cmp
pushf
jbe
lcall
ja
outsb
test
and
add
dec
aad
jmp
xor
jbe
xor
dec
addr16
dec
test
ljmp
jno
dec
aaa
icebp
outsl
sub
dec
pushf
sub
adc
xchg
test
sub
hlt
push
icebp
pop
lret
int3
inc
jmp
sahf
and
pop
adc
lods
or
pop
add
imul
aaa
push
cmp
scas
imull
mov
into
dec
or
add
mov
dec
fcmovnu
push
push
ljmp
outsb
pshufw
adc
es
dec
mov
mov
jp
into
decl
sbb
aas
push
sub
insb
sub
add
sub
mov
js
jo
jg
xchg
sub
jno
movsb
jne
pop
loope
ljmp
incl
xor
rcll
std
xchg
xor
mov
cltd
sbb
mov
or
cmp
sub
repz
push
sub
mov
rclb
jle
pop
outsb
push
adc
xor
xor
inc
jl
and
shlb
es
push
aad
lcall
fcomip
stos
ljmp
mov
adc
inc
xchg
xchg
pmaddwd
movsl
sahf
fidivrs
and
xchg
cmpsl
mov
mov
int
les
arpl
outsb
fisubrl
and
jl
shlb
jnp
data16
pushf
lods
and
pop
loope
pop
daa
test
jno
xchg
mov
test
daa
add
iret
push
cmp
mov
pop
iret
mov
mov
lods
int
inc
push
shll
test
add
adc
jl
pop
mov
pop
scas
popl
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
lahf
jl
jp
jle
jl,pt
jle
cmpsb
jbe
inc
sub
sar
test
mov
int3
mov
pop
sub
loope
sti
xchg
and
dec
xchg
fs
pop
pop
test
dec
mov
daa
mov
xor
push
hlt
arpl
mov
inc
push
xor
gs
pop
idivb
sub
jnp
cld
jno
dec
jg
aas
or
mov
arpl
arpl
mov
push
call
jmp
add
imul
fistps
add
lods
jg
fidivs
pop
inc
cld
mov
je
sbbl
arpl
lret
in
stc
ret
mov
pusha
imul
pop
rcll
paddd
clc
jmp
loope
mov
cmp
xchg
insb
mov
mov
aad
je
mov
adc
fld
jb
mov
and
xchg
mov
dec
jle
lods
insb
adc
roll
arpl
pop
orl
loop
repz
aam
fisubs
call
bound
sbb
xor
pop
out
cmp
call
cli
inc
into
pusha
mov
pop
int
rclb
mov
gs
cmc
test
aaa
ja
mov
push
ds
ss
sub
shl
test
dec
cmp
lret
rcrl
pop
and
inc
push
jg
pop
insl
and
pop
lods
movsb
outsl
pop
mov
push
repz
movsb
out
pop
pop
mov
pop
pop
inc
xor
or
scas
mov
mov
xchg
movb
sbb
inc
mov
push
daa
and
jp
inc
jb
je
aad
roll
push
insb
div
push
inc
pop
out
pop
mov
xor
fmulp
push
in
mov
adc
mov
xchg
mov
scas
ret
ror
inc
das
pop
jmp
packuswb
dec
clc
cmp
lock
dec
enter
xchg
in
push
fisttpll
idivl
xchg
ja
add
icebp
call
fwait
jb
add
fists
mov
lods
jae
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
jnp
inc
cmp
jle
jnp
ficompl
test
cmp
fwait
push
ficoml
sbb
jg
loope
mov
pop
iret
push
cmp
jge
repz
adcb
push
mov
test
mov
lods
mov
lea
inc
aad
out
into
mov
xor
adc
pop
mov
ret
or
in
xchg
fsubl
jl
ret
test
sbb
cmp
addr16
push
rorl
insb
mov
cmc
outsb
cli
xchg
pop
xchg
pushf
pop
mov
fdivs
dec
bound
je
dec
jmp
inc
pusha
faddl
mov
sbbb
mov
ret
or
sti
xor
sub
pop
nop
int
aad
int
mov
addb
push
std
and
mov
push
jmp
xor
inc
push
mov
jl
mov
inc
negb
push
daa
push
movsl
mov
scas
xor
mov
push
jb
ret
cmpb
sarb
sbb
ret
mov
in
data16
pop
mov
xor
jno
xchg
sub
fmul
outsl
fsts
lcall
xor
sub
xchg
push
fwait
stos
xor
jno
push
mov
xchg
loopne
leave
sbb
inc
inc
mov
xchg
cs
mov
and
stc
add
sti
sbb
cmp
add
pusha
sub
js
lods
outsl
and
dec
ret
jne
mov
scas
pop
lahf
mov
mov
sahf
sti
pop
ds
sub
fisubl
sar
push
push
dec
inc
inc
sub
sti
jle
fdivrl
or
sub
ret
add
xor
cmp
jne
inc
mov
mov
pop
ror
outsb
arpl
pop
in
js
cld
fwait
mov
xor
or
cmp
out
mov
xchg
cmp
inc
cmc
pushl
addb
xor
mov
or
icebp
jb
ficompl
fidivrs
scas
insb
add
pop
popf
and
and
mov
push
dec
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
jnp
repnz
cmp
and
popf
xchg
xor
jle
test
add
ret
cmpsl
fisubrl
cmpsb
mov
bound
fidivrl
cmp
xor
mov
lea
pushf
fisttpl
adc
and
xchg
cmc
bound
out
inc
test
or
stos
scas
jg
lods
pop
loope
cmpb
dec
cmc
outsb
xchg
test
sub
stos
inc
pop
adc
dec
push
pop
inc
cld
repnz
push
xor
nop
or
cmc
mov
pusha
add
sbb
xchg
sti
leave
push
into
addr16
into
push
scas
xchg
icebp
dec
add
push
or
or
mov
lods
dec
insb
shll
lods
sbb
cmp
push
mov
cmpsl
or
push
sbb
mov
push
sbb
aad
push
mov
lcall
stc
test
adc
adc
lahf
pop
clc
mov
clc
filds
sub
enter
mov
mov
sub
fldl
je
adc
add
lods
lahf
dec
lds
mov
jbe,pn
and
ret
dec
repz
cs
mov
adc
stos
ret
jl
jp
jbe
pop
aad
mov
and
mov
push
cltd
and
lods
and
and
lock
jecxz
push
in
pusha
gs
int3
add
xor
pop
jl
in
sbb
enter
fadd
dec
mov
es
jp
inc
cwtl
mov
cmpsl
gs
enter
sbb
popa
or
out
jge
pop
jns
fsubrl
cwtl
and
dec
xor
jno
jl
mov
data16
leave
jnp
je
mov
fisubrs
inc
je
push
xchg
in
or
cmp
inc
inc
mov
xchg
or
push
cmp
icebp
xchg
cmp
scas
sub
shlb
gs
jb
add
mov
or
or
imul
jns
hlt
in
loope
data16
mov
dec
xchg
nop
cmp
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
testl
jg
jle
test
sub
push
jge
mov
mov
jns
cmpsl
mov
push
dec
cmp
mov
sub
push
fst
jl
clc
dec
mov
cmp
adc
outsb
arpl
insb
xchg
rclb
mov
xchg
cld
outsl
add
jbe
adc
push
aas
fsub
jle
inc
testl
loope
cwtl
push
add
mov
out
dec
adc
push
pop
add
lcall
push
jbe
enter
mov
pop
cltd
enter
imul
adc
aam
cwtl
movsb
or
lret
or
jb
push
pop
es
jg
pop
jl
mov
out
aas
icebp
sahf
adc
jl
jae
jb
push
data16
dec
leave
or
inc
cmp
ds
js
lret
test
push
sti
push
mov
xchg
push
cmpsl
mov
dec
out
push
andb
and
pop
xlat
fnstcw
scas
pop
in
pushf
mov
vucomisd
adc
push
bound
fdivr
add
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
push
rcrl
popf
jle
adc
jle
movsl
push
add
mov
movsb
pushl
sbb
stos
pcmpeqb
and
adcb
lea
mov
in
fidivl
rcrb
lret
cmpl
std
inc
test
dec
adc
jae
call
and
icebp
sbb
inc
les
mov
cmc
insl
shlb
sub
loop
imull
mov
ljmp
arpl
imul
inc
push
and
es
ja
and
lahf
daa
xchg
pop
popw
iret
fwait
imul
xchg
in
push
jno
call
insb
aam
xchg
arpl
data16
cmp
out
sar
fcompl
outsl
cli
cli
lea
push
push
jae
mov
xor
push
ret
loopne
push
faddp
mov
orl
lock
mov
imul
mov
sbb
xchg
leave
jg
and
ds
inc
nop
fdivrl
xchg
int
jnp
pop
dec
xor
aas
loop
movsb
add
call
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
jno
in
sahf
jb
jle
adc
jle
icebp
mov
rcr
icebp
les
lret
mov
lds
pop
jg
cli
test
std
xchg
lahf
sub
dec
loope
inc
and
xlat
sub
in
stos
test
in
mov
jbe
sahf
insb
push
in
jge
jns
sbb
sbbb
fs
sbb
jnp
push
or
add
ds
lret
cmp
push
jecxz
push
pop
mov
cmp
sahf
xchg
cmp
addr16
insb
loopne
and
rorb
arpl
stos
inc
or
cwtl
mov
jns
jne
aas
inc
rorl
pop
xchg
in
fxch
hlt
xchg
xlat
cmp
or
cli
sub
cmpsb
or
push
mov
cs
bound
pop
cmc
push
js
adc
mov
call
pop
mov
push
xchg
xchg
and
xor
test
jmp
cmp
mov
popf
sub
cmp
inc
inc
ljmp
pop
adc
xchg
icebp
or
das
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
ljmp
jle
jg
jle
lret
divl
adc
xchg
outsl
pop
out
movsb
xor
lods
test
lods
cmp
fldcw
in
xor
andl
imul
add
in
test
mov
mov
hlt
div
addr16
pusha
out
insl
insb
and
fildl
jl
mov
leave
sarl
pop
mov
loop
mov
imul
inc
cli
scas
pop
ret
test
hlt
sbb
inc
xor
popf
mov
fcomp
xchg
int
enter
inc
call
inc
cltd
xchg
push
xorb
jl
mov
xlat
shlb
icebp
test
mov
fdivl
or
jb
out
mov
stos
jae
pop
and
xchg
insl
inc
cmp
add
cmpl
jns
repz
cld
mov
dec
sti
adc
add
repnz
pusha
pop
jae
fcoms
jmp
and
push
mov
jae
xchg
shl
mov
cmp
mul
subl
lds
xlat
dec
lret
std
cmc
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
xor
cltd
jle
adc
jle
jge
cmc
stc
mov
pop
mov
jne
xor
call
lea
mov
or
cmp
jae
scas
imul
sub
sbb
ljmp
sub
and
and
dec
nop
xchg
jne
lea
nop
pop
das
dec
xchg
bound
sahf
out
sub
lret
inc
pop
push
lods
mov
shlb
es
pushf
lods
push
xchg
sub
arpl
push
ljmp
xchg
hlt
mov
fldcw
dec
fmull
test
xchg
add
cmp
push
movsb
sbb
push
push
mov
jecxz
inc
sbb
mov
cmpsl
dec
icebp
xor
push
pop
or
jle
imul
outsb
add
lea
mov
mov
testb
fcmovnu
add
repnz
jne
mov
adc
jmp
push
aad
ljmp
scas
in
enter
push
movsb
push
sti
pop
jg
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
ret
cmp
loope
pushf
mov
dec
fnsave
inc
or
push
xchg
cmp
stc
adc
iret
fnstcw
mov
stos
xor
inc
je
sbb
lock
push
mov
outsl
mov
out
xor
xchg
shlb
inc
ret
dec
bound
je
add
push
adc
dec
test
inc
cmp
enter
xchg
mov
pushf
cltd
cmp
aas
loopne
test
test
jb
xor
and
pop
add
pop
jecxz
stos
lds
push
loope
lcall
pop
notb
and
repnz
out
push
dec
jns
outsb
dec
cmp
pop
notb
lds
lret
leave
push
lea
in
pop
dec
enter
int3
cmc
xchg
dec
or
sbb
fldenv
pop
and
stos
push
cli
xchg
pop
int
fdivl
push
lret
mov
aas
pop
cmp
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
lcall
adc
jle
iret
adc
stos
daa
mov
adc
and
push
jbe
xlat
call
test
mov
push
in
push
repz
icebp
xchg
mov
shrl
mov
popa
and
imul
xchg
mov
pop
aas
or
icebp
xor
or
leave
jmp
sti
and
dec
lods
imul
stc
xchg
or
cmp
fadds
pop
pop
mov
and
adc
lods
stos
loop
xor
pop
push
cmpsb
popa
adc
mov
jl
xlat
cmp
outsl
inc
sbb
push
xchg
sbb
lret
loope
lea
or
pop
mov
cmp
and
sub
jb
jb
mov
cmp
sbb
fidivs
rorb
fisubl
mov
lods
test
imul
out
dec
pop
roll
and
jae
outsl
insl
xor
aam
pop
stos
or
jne
ja
mov
xor
leave
sbb
lret
mov
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
jle
movsb
jle
adc
jle
imul
jne
push
sub
das
popa
sbb
aam
cwtl
inc
pushf
adc
repnz
cmc
jmp
add
add
pop
ficomps
mov
mov
stos
popa
or
and
scas
dec
pop
inc
sahf
insb
aad
shll
in
mov
dec
imul
and
hlt
dec
fsubrl
sub
out
cmpsb
int3
pop
dec
lods
push
adc
xor
push
add
pop
rclb
adc
xchg
clc
pop
int
adcl
iret
jo
pop
dec
ja
mov
call
jmp
mov
adc
add
push
aad
cli
jg
dec
sbb
testb
gs
cmp
adc
cmc
test
cmpsl
and
icebp
xor
fwait
mov
mov
fdivl
mov
pop
in
popf
jb
fisttpl
add
mov
int
xor
adc
popl
test
sbb
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
push
mov
jle
jg
jle
out
mov
and
pop
std
mov
adc
dec
sbb
cmp
mov
aad
mov
insl
pop
mov
into
scas
rcrb
push
push
sbb
fsin
js
sub
in
xchg
lea
mov
and
xchg
loopne
xor
adc
jl
mov
xchg
jne
adc
mov
punpckhwd
lcall
lea
sub
fs
inc
dec
jb
jbe
jnp
mov
pop
pop
cltd
add
shll
movsb
or
add
add
roll
inc
int3
add
dec
mov
sbb
data16
inc
pop
popf
xor
cltd
adc
int3
loop
fcomp
dec
es
and
aaa
mov
pop
sbb
je
movsl
icebp
mov
rorl
daa
xchg
stc
aam
mov
pusha
pmulhuw
pop
xor
lea
ret
xchg
push
test
fsubl
jo
mov
cmc
jg
lods
fdivrp
mov
lahf
or
rorb
xchg
mov
cmp
pop
jmp
inc
push
push
mov
jno
mov
jne
loop
int
iret
mov
or
ret
out
adc
adc
icebp
stc
mov
mov
mov
pop
rcll
and
push
jl
nop
xchg
data16
jp
lret
fstpt
rorl
cmc
add
adc
bound
popa
dec
sub
lock
jg
inc
xor
mov
das
int3
data16
lcall
cmp
cli
call
jle
push
and
sub
or
mov
cli
into
add
push
lahf
sbb
push
loope
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
dec
fists
pop
push
pushf
stc
inc
icebp
idivb
cmp
xchg
sub
cmp
scas
mov
inc
push
push
cwtl
and
jns
and
std
fdivrl
loopne
mov
dec
mov
cli
jb
outsb
xchg
in
adc
bound
mov
xchg
int
dec
mov
movsb
cmp
and
jmp
pop
or
arpl
repnz
fwait
mov
out
outsl
inc
scas
aam
add
mov
lret
lahf
xor
mov
fwait
sti
add
sarl
pop
pop
cmpsl
int
insl
js
cmp
mov
pop
inc
sbb
and
pop
cli
call
push
addr16
aad
sarb
insb
movsl
mov
sbb
pop
lds
cmp
addr16
jnp
mov
jmp
stc
arpl
stos
adc
mov
cli
adc
push
sbb
cmp
pusha
shrl
sbb
mov
icebp
cwtl
imul
mov
dec
aaa
js
test
loope,pt
cmp
cli
sub
andb
add
or
sub
dec
movsb
in
push
ljmp
inc
call
stos
xor
mov
lret
movsb
pop
rcll
xchg
rclb
lods
movsl
jecxz
and
or
and
clc
mov
idivb
imul
and
in
sahf
inc
iret
in
xor
pop
push
mov
cmpsb
test
cmp
jne
xor
cmp
out
sub
pand
xchg
into
mov
sbb
xchg
orb
popf
dec
enter
cmp
mov
sub
mov
es
cmpsl
out
hlt
mov
out
push
push
dec
scas
sbb
mov
push
or
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
push
xchg
mov
jle
sub
mov
arpl
jnp
mov
add
dec
xor
ss
ja
int3
or
cmp
out
pop
adc
jbe
and
jb
pushf
push
add
aam
lcall
fwait
es
jg
pop
into
and
push
pop
iret
jge
das
not
das
push
jbe
loop
ljmp
negl
xor
outsl
xchg
pop
in
push
xor
in
lea
dec
in
mov
sub
dec
add
add
mov
lea
push
jae
inc
leave
push
outsl
mov
jns
xchg
out
ret
fwait
push
shlb
in
jnp
mov
insb
or
lock
outsl
sahf
pop
push
fwait
jbe
adc
xor
nop
in
fidivrl
mov
mov
js
cmp
cltd
movsl
notb
push
popa
test
add
xor
ss
fcoms
add
out
mov
push
cmp
cmp
mov
adc
std
mov
pusha
or
push
in
xor
and
dec
into
stc
or
cs
cli
push
cltd
idivl
nop
aad
nop
mov
dec
bound
outsb
mov
sub
xchg
push
inc
jge
push
mov
or
jg
ret
sub
arpl
xor
gs
cmp
mov
sub
test
xchg
inc
lods
sbbl
bextr
sub
adc
push
add
rorl
stos
test
jmpw
mov
and
push
mov
mov
stos
sti
popf
shl
jle
stc
mov
and
neg
push
in
insb
mov
mov
inc
sbb
push
inc
add
into
adc
rcrl
push
mov
xlat
push
mov
icebp
loop
cmp
shlb
lods
js
fwait
xchg
lahf
pop
jge
cmpsb
adc
sub
popa
popf
mov
sahf
xchg
imul
dec
icebp
scas
pusha
jecxz
sbb
pop
cmpsb
out
or
add
adcb
jmp
push
xor
mov
adc
push
movsb
xchg
pop
sahf
fldenv
scas
sub
popa
lcall
popf
dec
jbe
xchg
jge
push
std
cmp
sub
sbb
ret
lds
pop
pop
lret
pop
xor
adc
inc
ret
cmp
jg
lea
jge
inc
cmp
and
shrl
add
arpl
test
sbbb
test
lods
std
pop
or
xchg
lret
dec
xchg
lock
addr16
loopne
inc
xor
mov
out
in
inc
lret
into
or
aaa
mov
dec
mov
dec
stos
imul
addr16
ljmp
xchg
mov
jne
rorl
dec
add
push
sti
add
fsubl
ja
repz
outsl
loop
and
dec
fstpl
mov
ss
xor
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
push
jl
jle
mov
dec
popf
xor
shrl
add
pop
pop
shlb
repz
cmp
sbb
loop
mov
pushw
fwait
test
pop
cmp
int
push
xorl
push
pop
mov
xor
call
sub
sarb
popf
cs
movsl
inc
jmp
jmp
sarl
int3
xchg
bound
ret
adc
mov
xchg
cmc
cmp
pop
ja
dec
pop
adc
je
int
scas
iret
push
adc
mov
les
ja
push
hlt
mov
cmc
pop
lods
xor
mov
xchg
mov
fwait
int3
jl
or
insl
dec
mov
mov
push
in
jp
leave
notl
dec
xor
in
mov
or
testb
ret
jg
dec
popa
mov
scas
mov
int
or
xchg
pop
dec
dec
jnp
adcb
pop
dec
adc
and
fidivrl
inc
xchg
in
hlt
pop
pop
adc
jno
sti
sbb
jno
pop
les
sbb
mul
xor
jge
mov
movsb
mov
dec
and
test
push
aam
mov
dec
sub
jecxz
jg
jl
lret
lea
mov
cmp
iret
and
jp
lahf
or
bound
and
add
test
push
leave
inc
and
xchg
adc
add
dec
lret
cld
daa
out
sub
mov
stc
push
rcll
jo
sbb
daa
int3
mov
mov
lcall
mov
sti
js
test
daa
sub
lahf
or
dec
xor
imul
fidivrl
shl
and
sub
negb
add
push
int
or
scas
repz
cld
inc
jle
xor
xor
aam
jnp
xchg
decb
xchg
cmpsl
mov
add
fwait
push
scas
rorb
cmp
pop
adc
fwait
pop
mov
je
jp
push
es
in
sbb
mov
call
js
inc
pop
cld
fdivrp
mov
push
andl
test
xchg
jg
and
jmp
cmp
xchg
int3
mov
dec
xchg
mov
ss
mov
gs
dec
fisttpll
int3
loope
dec
arpl
mov
out
lret
mov
nop
xchg
sbbb
divl
inc
and
in
mov
sub
ljmp
lock
scas
pop
mov
jns
inc
and
lret
xorb
es
mulb
pop
xchg
mov
movsb
xchg
leave
mov
push
lods
push
mov
mov
cmpsb
orb
movsl
add
and
pop
test
daa
fdivs
mov
sti
xor
fcmovb
addr16
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
fwait
shrb
jle
push
mov
ljmp
push
xor
rcr
scas
cmp
stos
fmuls
popa
mov
aam
xor
mov
mov
aad
jecxz
mov
out
jns
into
adc
test
js
push
ss
mov
fucom
jecxz
jae
cwtl
test
lds
pop
xor
cli
xchg
aad
sub
ret
mov
cmp
jmp
pop
test
cmp
push
paddsw
popf
push
and
out
orb
movsb
or
lahf
cs
enter
sub
dec
xor
shrl
stc
jnp
ret
rcrl
ret
inc
adc
fnstenv
push
leave
inc
inc
sub
sbb
and
adc
fwait
subl
mov
sub
or
add
popf
das
lds
lock
xchg
rcrb
push
inc
jecxz
int
cmp
imull
push
pinsrw
xor
subb
test
jge
push
addr16
jmp
clc
lcall
fcmovb
xor
ja
rcl
rolb
shrb
adc
std
hlt
push
enter
jbe
and
xor
and
dec
fstl
cmpsb
das
je
dec
dec
in
push
repz
cmp
xchg
dec
sbb
ja
in
fidivl
les
loop
test
and
jmp
pop
dec
in
test
fiadds
mov
ds
jno
add
cmp
inc
test
sbb
jnp
fcomi
ret
cmc
inc
daa
pop
lods
mov
aaa
inc
sub
adc
in
hlt
jmp
lcall
push
cmc
sub
andb
ds
rolb
jg
repnz
stos
inc
leave
push
push
rclb
pop
fcmovnu
pop
call
sbb
mov
mov
movsl
ds
pop
mov
mov
les
shr
bound
in
test
outsl
loopne
out
dec
cltd
or
repz
in
mov
les
mov
and
xor
cmp
adc
adcb
stc
fcomi
ficompl
inc
arpl
adc
jp
pop
push
out
push
imul
or
and
not
aas
push
pusha
mov
mov
mov
sbb
xor
outsl
pushf
scas
arpl
inc
rcr
in
sub
xchg
cltd
sahf
jge,pt
mov
test
cmp
scas
push
pop
popf
popa
test
sbb
xor
jno
pop
stos
loop
insb
jne
mov
xlat
mov
add
outsl
js
add
and
xor
adc
dec
rcr
lahf
push
mov
dec
inc
mov
jns
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
jecxz
xor
mov
jle
jge
jle
and
xchg
idivl
repnz
mov
mull
in
sbb
test
mov
push
loop
jnp
cmp
jnp
ds
cmp
jne
xlat
lcall
mov
dec
mov
adc
push
or
addr16
das
sbb
sbb
jne
hlt
int3
xchg
pop
hlt
cld
mov
int3
or
push
pop
jmp
lods
fsubrl
mov
testl
and
std
push
sahf
cmp
sahf
lret
pop
iret
clc
fistpl
sbb
in
push
adc
fbld
mov
mov
call
jmp
mov
sti
add
cmp
test
cwtl
or
movsl
push
loope
jbe
rorb
sahf
mov
pop
into
gs
fldt
xchg
out
das
stos
xchg
notb
cmp
mov
fisubrs
popf
fadds
jg
sub
cmc
push
mov
lret
mov
inc
sub
push
jb
ss
or
sbb
jno
stos
icebp
lahf
push
push
addl
cmp
xchg
call
insl
les
or
pop
out
xor
in
mov
jnp
sub
sahf
jo
jb
sub
stc
test
stos
dec
add
pop
inc
fistps
fistpl
stos
or
xchg
pop
mov
test
jg
roll
jmp
mov
xchg
or
mov
jp
and
xchg
pushf
or
or
xlat
mov
cmpsb
push
jb
sbb
xor
mov
inc
pop
cmp
sbb
nop
jno
lds
shrb
pop
sahf
xadd
jl
je
insl
iret
out
xorb
xchg
sbb
sahf
mov
xchg
or
dec
movsb
xchg
rolb
jecxz
push
scas
std
cld
push
pop
jp
cmp
cmp
cs
push
stos
xchg
cltd
mull
xor
addr16
fcompl
lret
out
addr16
sub
sahf
mov
loopne
or
sub
mov
aad
adc
pop
mov
mov
loopne
push
jno
mov
int
dec
fcoml
add
cltd
sbb
pop
mov
adc
sbb
imul
ret
jmp
rcrl
ret
inc
push
mov
inc
fwait
stos
and
ljmp
pop
mov
add
mov
lea
out
inc
cmc
pop
xor
adc
inc
scas
xchg
and
jo
test
xor
xor
xor
sti
sub
mov
arpl
mov
pop
lcall
inc
or
sarb
jmp
or
pop
jno
xchg
add
dec
add
mov
jle
jge
jle
ret
push
pop
or
fs
jb
sub
divl
leave
cli
fs
call
out
xor
lret
lea
push
sub
mov
lea
sbb
inc
dec
inc
dec
inc
lahf
mov
ljmp
in
cmpsb
mov
dec
mov
in
movsl
stos
ja
adc
mov
mov
cmp
jge
clc
mov
ja
adc
fsts
loop
jmp
mov
xchg
mov
push
fs
pop
jg
jg
stos
push
mov
add
adc
jb
outsl
dec
pop
push
jno
sub
or
mov
cmp
outsb
sub
data16
pushf
jae
stos
sahf
popa
pushf
sbb
inc
xchg
std
jmp
cmp
push
add
inc
outsl
mov
ret
leave
shrb
aam
js
mov
mov
inc
fwait
dec
test
test
lahf
lds
push
scas
push
jge
int
jmp
mov
or
mov
pop
out
sbb
xchg
insb
sahf
faddl
aam
cmp
into
jae
push
inc
and
out
pop
dec
cmc
mov
sbb
je
int
add
mov
in
mov
jmp
push
xchg
data16
stos
aaa
fwait
push
stc
arpl
into
sbb
add
shlb
cld
adc
dec
xchg
std
xor
inc
adc
cmpsb
es
pop
push
aam
jne
add
adc
roll
es
or
movsl
in
mov
and
js
mov
adc
jno
aam
add
aad
sahf
pop
outsb
sbb
lock
stos
fimull
lret
cmp
xchg
dec
dec
aad
add
push
add
dec
xor
add
mov
jo
push
shll
sbbl
xorl
pop
mov
enter
repz
and
lea
mov
cmp
in
mov
push
jo
add
add
mov
dec
xor
cmc
cmp
cmp
lahf
mov
dec
mov
sub
loop
mov
fisttps
pop
imull
inc
or
je
xchg
dec
mov
cmp
add
jae
cmpb
mov
sar
scas
dec
rorb
add
sbb
psrad
aam
ds
fidivrs
imul
cmp
aaa
insl
shrl
jg
inc
push
mov
jmp
lock
call
cmp
inc
out
inc
test
fwait
mov
js
insl
and
lahf
jns
dec
jl
repnz
jnp
sub
adcb
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
fdivr
dec
fdivl
jle
sbb
subl
pop
dec
fbstp
mov
and
dec
jae
imulb
inc
mov
pop
xchg
dec
and
cli
jo
xor
in
pop
in
or
sbb
dec
jno
and
sub
sbb
mov
or
inc
in
pop
daa
sbb
cmp
jb
dec
stos
push
lock
pop
loopne
xor
sar
cmpsl
fisubl
pop
imul
das
xor
and
or
out
sbb
cmp
inc
jle
mov
mov
mov
in
jge
jo
adc
dec
incb
fldenv
aad
ficompl
xchg
mov
sarl
shrl
cmc
enter
aas
jle
loopne
adc
dec
cmp
je
push
inc
imul
mov
js
add
jns
into
push
lahf
lea
pop
inc
inc
aaa
push
pop
popf
lock
fimuls
aam
xchg
add
xchg
aas
rclb
push
inc
add
ficomps
pop
inc
pusha
mov
andl
add
xchg
in
pop
mov
fs
outsb
cmp
cmpb
or
pop
popw
dec
outsl
and
jge
xchg
es
clc
push
das
imul
xor
mov
int
mov
mov
mov
or
mov
repz
int
lods
jecxz
xor
inc
loope
dec
push
daa
mov
cmpsb
jp
dec
and
sub
mov
mov
xor
mov
mov
pop
xchg
xor
cmp
mov
jp
cmp
test
pop
imul
insl
pop
mov
pop
pop
inc
push
push
lret
sub
cmc
mov
mov
mov
out
enter
push
sarl
xor
sub
arpl
mov
push
popf
jnp
jle
xchg
jbe
sbb
pop
cmp
outsb
add
iret
fsubs
daa
inc
mov
rclb
pop
mov
mov
insl
rcr
pop
or
daa
inc
xchg
addr16
and
imul
lret
das
sub
lods
cmp
dec
stos
lods
das
xor
push
insb
sahf
push
shll
jmp
pop
lods
add
sti
push
out
in
adc
mov
xor
or
jmp
loopne
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
popa
or
testl
mov
push
pushf
adc
repz
data16
out
xor
sub
nop
mov
test
and
xchg
lock
mov
xchg
incb
add
or
sub
adc
loop
in
sbb
iret
js
imul
aad
mov
adc
ret
das
mov
les
nop
mov
sub
cmp
xchg
xor
jecxz
insl
fisubrl
cs
or
sbb
push
pop
add
pop
adc
jo
add
sarl
in
xchg
mov
jge
lock
mov
shrb
in
std
dec
jb
add
or
adc
sarl
andl
pop
cmp
mov
ljmp
push
xchg
cmc
test
fimuls
es
insb
int3
repz
sbb
mov
adc
lods
pusha
and
imul
fbld
pop
push
sbb
adc
fwait
movnti
mov
cmp
dec
lret
mov
xchg
mov
test
mov
pop
pop
movsb
aad
push
and
sbb
xor
iret
cmpsl
push
lret
orl
dec
enter
jle
xor
or
mov
pop
lret
cmp
or
sbb
xchg
mov
loop
push
xchg
dec
xchg
data16
rorb
dec
add
inc
andl
dec
les
rorb
out
dec
sub
cmpsb
data16
pop
loop
sbb
fstl
cmp
push
jae
and
addl
pop
dec
fsts
xor
adc
pop
xor
push
cli
imul
xor
sbb
dec
xchg
cmp
repz
jmp
popa
xor
ja,pn
mov
outsl
lock
or
inc
sub
or
call
notl
and
mov
jbe
ss
lods
jns
ljmp
xor
into
mov
mov
jo
adc
push
xor
push
stos
out
xlat
in
scas
jb
ret
sub
pop
and
into
addr16
imul
and
into
xchg
mov
aaa
xrelease
mov
mov
cmp
cmpsl
jnp
pop
gs
cmp
jno
push
jle
popa
mov
add
add
jmp
add
fdivl
lock
xchg
pop
inc
or
cmp
jl
jle
pop
xchg
fsubs
pop
adc
testb
notb
or
pop
negb
mov
dec
lcall
mov
jl
nop
jbe
add
push
add
dec
and
shll
pop
scas
jl
adc
int
rclb
fstpt
arpl
inc
daa
in
pop
hlt
ds
jae
jg
and
sbb
jae
jecxz
mov
ret
stc
call
fldenv
xchg
fildl
nop
rep
pop
scas
and
pop
jmp
push
lret
fstpl
pop
test
pop
add
icebp
cltd
cmp
push
cwtl
mov
les
cmp
adc
jg
pushf
mov
and
popf
mov
jno
sub
int3
sbb
movb
iret
fdivp
xchg
sbb
push
clc
fst
dec
les
leave
xchg
je
pushf
sub
frstor
jecxz
xchg
je
sbb
and
popf
jmp
mov
adc
xor
aas
and
daa
jmp
lahf
sbb
cld
mov
pushf
imul
lahf
sub
or
popf
outsl
dec
xor
or
fwait
jecxz
jecxz
aaa
es
or
jg
cmp
movsl
inc
dec
shrl
gs
sbb
mov
sub
neg
mov
int3
shr
loopne
nop
dec
push
jp
out
scas
mov
xchg
jmp
test
cmpsl
ja
std
add
pop
jbe
sub
mov
lret
xchg
les
push
lods
subps
or
jg
jecxz
es
lahf
jbe
or
sahf
jbe
cltd
dec
repz
lds
in
call
xchg
int
push
mov
mov
int
cmp
push
pop
test
xchg
movsl
push
mov
lods
fdivr
jb
xor
pop
dec
inc
or
or
mov
sbb
dec
mov
add
push
pop
ljmp
mov
add
xlat
stos
xchg
jns
fsubs
je
and
repz
xor
sbb
pop
jg
ds
ss
jp
push
inc
shrb
imul
call
push
jmp
test
jbe
icebp
or
cltd
xchg
cwtl
mov
dec
push
out
andb
orb
lds
pushf
fisttpl
mov
out
dec
mov
jmp
je
push
push
lock
outsb
dec
mov
push
jmp
jle
scas
jl
jle
sub
ljmp
xchg
rorb
loope
ljmp
pop
jl
sbb
aam
lock
dec
ja
mov
out
js
push
rclb
push
mov
push
xor
sahf
mov
sbb
sub
push
cmpb
les
call
mov
je
notb
int
repnz
mov
add
jno
leave
adc
push
jno
push
outsl
jo
adc
mov
pop
adc
cmp
inc
pop
add
fwait
in
cmp
into
dec
lea
inc
enter
popa
or
inc
pusha
jne
movsb
or
cmp
jnp
add
xchg
dec
adc
ror
in
in
lcall
jo
dec
mov
sub
push
clc
lock
lods
fists
push
mov
dec
mov
jo
add
sbb
sbb
imul
adc
insb
mov
push
inc
mov
mov
sbb
mov
cltd
sti
push
loopne
rcl
leave
scas
insb
mov
and
sti
sahf
lahf
dec
in
adc
xchg
ficomps
bound
dec
sbb
loope
ror
aas
and
cmpsl
pop
or
ds
test
lods
jb
cmp
scas
jl
ja
mov
or
push
ljmp
jo
xor
shl
das
test
sbb
popf
pop
sub
mov
fcmovbe
or
push
adc
dec
sub
pop
push
je
pop
data16
cltd
mov
in
rep
xor
je
ljmp
sarl
dec
insb
sub
adc
in
xchg
fwait
push
pop
pop
aam
lds
repnz
sub
mov
cli
sub
pusha
pop
pushf
lea
and
pop
adc
mov
mov
outsb
jae
cltd
movsl
cmpsb
fisttps
sbb
lds
xchg
stc
jecxz
push
loope
test
inc
push
pop
cmp
mov
fcoml
mov
ret
mov
mov
xor
jb
push
push
je
add
bound
lods
or
dec
popf
jge
lock
movhps
stc
jp
gs
mov
mov
add
sbb
xor
mov
sbb
dec
lods
adc
stos
nop
addr16
orl
mov
lods
dec
std
inc
aas
cmpb
cmpsb
cmp
aaa
test
aam
sbb
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
bound
jle
jl
jle
in
sub
pop
in
test
push
xchg
sbbl
cli
fs
sub
int3
cltd
jmp
dec
or
add
push
mov
xchg
jle
imul
aam
loop
mov
test
xchg
cmp
pop
mov
mov
pop
mov
dec
test
xor
repz
ja
push
add
sub
repz
sti
movsb
shl
enter
sub
cmpb
ja
dec
fisttpll
sub
insl
gs
mov
add
or
push
push
pusha
dec
aad
mov
stos
xorl
or
out
pop
mov
push
out
loop
and
addr16
pop
inc
mov
add
out
jecxz
js
push
jge
mov
mov
aas
aas
xchg
cld
aas
or
dec
scas
test
xchg
dec
push
lahf
ljmp
mov
add
sub
cmpb
sbb
pop
call
cmp
es
addr16
jp
int3
xor
int3
stos
lea
mov
mov
lret
or
xor
jl
xchg
cmc
mul
movsl
hlt
loopne
cs
std
push
ds
hlt
imul
es
sub
inc
xchg
ret
inc
lahf
iret
push
and
or
lret
aam
shll
in
and
add
inc
push
imul
add
pop
mov
jge
aam
jno
shr
dec
sub
add
lret
cli
xor
pusha
aas
sbb
and
mov
arpl
je
negl
and
xor
rorl
stc
ret
popl
imul
out
cmp
imul
jecxz
rolb
js
cmc
dec
imul
and
inc
lahf
imul
dec
cld
cmp
arpl
push
cmp
movsb
rcl
cmp
lret
xchg
mov
jmp
shlb
sahf
aad
movsl
lcall
in
insb
mov
push
stos
and
inc
es
fildl
enter
clc
mov
cmpl
push
in
loop
push
cmpsb
cmp
call
lea
and
ret
mov
push
jp
add
or
jle
les
rcll
add
inc
loope
rolb
pop
and
dec
push
fwait
and
pusha
pop
cmp
lds
sbb
pop
cmp
bound
aas
xchg
notb
subb
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
jae
mov
scas
jl
jle
add
lock
rcrb
rcl
and
push
shll
fwait
xchg
icebp
loope
test
and
push
jecxz
xchg
popf
sahf
sub
adc
incb
and
in
outsl
adc
jns
cmp
in
jecxz
dec
cmp
sbb
cmp
stos
adc
inc
cli
call
rorl
pop
idivl
jnp
js
push
push
jns
or
sbb
sahf
in
and
sub
inc
pop
xchg
nop
jns
lcall
in
sahf
pop
mov
out
push
sub
inc
push
pop
jns
pop
cmp
in
nop
arpl
int
cs
into
out
sarl
lds
mov
jl,pn
add
adc
sahf
or
cmp
mov
cmc
or
in
pop
incb
int3
fidivrs
or
pop
loopne
mov
lea
in
mov
cmc
out
xchg
dec
cltd
dec
fdivrs
loop
sbb
out
fadds
int3
cli
or
jmp
jg
cwtl
leave
pop
xchg
insl
jne
add
sbb
ss
mov
adc
xlat
xchg
inc
popa
lods
xchg
mov
mov
pusha
xor
int
pop
jge
and
mov
in
ss
repnz
xor
fistl
xchg
out
push
nop
xchg
shl
inc
lcall
sbb
stos
or
pusha
fadds
jl
mov
sahf
push
test
cs
jl
pop
int3
jnp
out
or
sub
sahf
xchg
aas
push
pop
xor
lock
scas
outsl
and
cmc
xchg
mov
jbe
icebp
fs
mov
mov
dec
jae
lahf
pop
xor
out
mov
push
dec
mov
xor
aaa
pop
mov
gs
aas
aas
mov
add
enter
enter
xchg
mov
cltd
outsl
or
mov
test
iret
loope
testb
lahf
jecxz
dec
pop
jns
ds
fildll
sbb
jl
xchg
movsl
adc
jbe
pop
mov
ljmp
ja
pop
mov
jmp
mov
enter
cmpb
test
out
imull
dec
cmp
ds
imul
dec
enter
cmp
cmc
sub
loope
sbb
xchg
ret
aam
das
icebp
mull
dec
pop
mov
int3
test
sti
adc
or
sarl
fcoms
pop
push
and
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
mov
inc
jle
movsb
jg
jle
fwait
mov
mov
fcmovnu
inc
mov
push
std
xor
xor
je
push
sbb
inc
sub
aam
clc
sbb
mov
cmpsl
dec
cmp
xorb
add
andb
inc
lods
repnz
negl
shrl
stos
jno
and
sbb
sbb
rcll
xlat
push
dec
mov
pop
xchg
dec
mov
das
or
movsb
sub
mov
fcom
or
dec
sub
enter
aaa
ljmp
sbb
das
inc
sar
push
leave
inc
loope
mov
jmp
xor
mov
icebp
jmp
aas
mov
jmp
sbb
and
enter
sub
cmc
popa
in
push
ss
ret
fists
das
aas
in
das
lahf
mov
xlat
and
cmpb
lahf
icebp
push
push
pop
or
shlb
add
xor
mov
pop
push
mov
divb
jae
fwait
pop
xchg
std
push
jnp
sahf
sub
mov
jge
mov
divl
lcall
fisttps
in
pushf
xchg
push
sub
bound
mov
and
pop
aad
dec
int
repz
jge
cmpb
in
xor
dec
sub
add
adc
and
pcmpeqb
sbb
aad
mov
inc
loop
sub
ja
or
pushf
mov
jmp
std
rcrb
cmc
lods
iret
mov
xchg
sub
jno
pop
cli
enter
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
lods
sub
sub
jle
movsb
jg
jle
cs
jmp
inc
sbb
mov
push
jmp
push
push
and
icebp
sub
mov
aam
add
add
fisubrs
call
xlat
mov
aam
mov
pop
ret
mov
or
and
dec
xchg
mov
arpl
shlb
dec
fisubrl
arpl
sub
imulb
je
inc
add
jge
mov
or
or
stos
lods
adc
xor
inc
inc
xor
popf
pushf
mov
jmp
mov
fdivrl
mov
out
test
cmp
mov
cmp
ret
into
adc
adc
mov
and
test
movsl
mov
rcrl
shrl
test
jbe
jmp
xchg
pop
adcb
into
mov
or
pop
fsubr
or
ficompl
xchg
jne
sub
bound
cmp
lods
sub
leave
popf
daa
or
jo
jecxz
js
and
movsb
xchg
adcb
mov
int
or
mov
push
stc
mov
cmp
pop
cmpsl
xor
repnz
xor
scas
xchg
jge
mov
xchg
aam
sbb
fwait
jb
test
mov
pop
mov
rcr
lock
popa
sbb
les
inc
push
mov
insl
cmc
lea
int3
sbb
popf
loopne
mov
clc
mov
pop
fisttpll
das
pop
mov
or
push
outsl
mov
or
or
inc
cld
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
fidivs
add
add
filds
mov
xchg
icebp
sub
hlt
rclb
imul
mov
aaa
jo
add
sub
jmp
icebp
jns
mov
in
int3
aad
es
movsl
push
fisubs
lods
lret
aaa
rolb
pushf
adc
scas
sti
shlb
icebp
mov
mov
jge
dec
jg
mov
in
sub
sbb
adc
push
call
mov
sbb
loope
lds
adc
push
mov
mov
cmp
mov
fisttps
and
cltd
xor
loopne
push
repnz
fisubl
mov
mov
mov
jl
push
adc
cs
in
out
cwtl
pop
cmp
cmc
je
or
mov
xor
add
stos
sub
lcall
xchg
xor
xor
jecxz
enter
ret
pop
stos
hlt
es
shr
test
add
add
push
pusha
in
jle
lcall
das
loope
add
add
pop
lock
clc
push
out
mov
jmp
fistpl
cmc
ret
jne
inc
jge
sub
sub
jmp
shr
mov
jg
js
and
loop
xchg
sbb
mov
stos
or
push
adc
cmp
incl
into
lds
out
or
or
or
push
mov
dec
push
addr16
gs
loopne
out
movsb
mov
adc
mov
lds
dec
dec
inc
pop
imul
lods
aaa
test
mov
mov
data16
repz
ljmp
adc
add
mov
inc
in
mov
je
cltd
sub
or
adc
arpl
cmc
add
ss
fsubrs
jb
mov
xor
sahf
fs
pop
jb
push
leave
gs
jae
push
add
add
push
notb
or
jge
xchg
js
sbb
push
pop
fcomps
jnp
dec
mov
add
add
add
mov
push
add
add
add
rolb
xor
xchg
icebp
fs
or
mov
push
push
imul
fldl
push
pushf
in
pusha
sub
or
sti
mov
sbb
mov
mov
mov
sti
mov
pop
repz
clc
mov
push
mov
sbb
aad
jns
scas
scas
mov
dec
mov
outsb
subb
addl
aaa
fcomps
jmp
jmp
xchg
xor
addr16
mov
das
jge
lret
fcoml
insb
leave
fidivrl
and
loop
scas
and
je
shrb
hlt
sbb
xlat
mov
mov
push
mov
pusha
int3
cmp
scas
adc
je
add
mov
inc
push
fldl
jb
jmp
test
jnp
out
mov
dec
fsubrp
jns
adcb
adcl
inc
mov
push
rcrb
push
mov
add
inc
cld
aam
pop
add
add
subl
roll
popa
gs
jmp
add
add
movsl
adc
mov
sub
cmp
cmc
sub
dec
mov
adc
lea
adc
pop
pop
push
daa
push
cld
jmp
sub
pop
stos
test
rcll
adc
outsl
jmp
ds
mov
popf
stc
aaa
ret
jnp
xchg
scas
pop
fstp
rorl
lock
shll
jl
add
stos
insb
xchg
and
and
out
push
mov
das
pop
sti
push
out
dec
pusha
add
jecxz
xor
test
aaa
lds
sub
mov
mov
or
inc
arpl
push
xchg
pop
pop
jb
push
jle
xor
sub
xlat
insb
into
xchg
push
pusha
in
mov
movsl
dec
outsl
jo
repz
mov
add
mov
pop
fs
cmp
or
xor
pop
aas
in
pop
fisubs
sub
orl
ret
add
add
inc
or
pop
dec
or
out
aam
aad
add
mov
test
scas
call
movsl
call
xor
xor
sahf
or
mov
xchg
pop
aad
mov
add
in
mov
mov
cmc
ret
dec
in
out
nop
pop
insl
iret
fadds
xchg
cld
jp
adc
jbe
mov
mov
push
xor
test
jmp
in
xor
jbe
and
stc
das
je
xchg
mov
xor
xchg
lcall
xor
fs
in
mov
mov
popa
and
loope
in
mov
shrl
fisttpl
loopne
sti
mov
adc
dec
xor
ss
aas
jne
out
rcrb
ds
cmc
cs
pusha
sbb
cmpsl
arpl
push
insb
push
dec
xlat
xchg
or
jecxz
inc
jnp
dec
and
pop
mov
fwait
push
fcmovnbe
sub
ficoml
imul
cmp
push
pop
in
insl
pushf
inc
insl
in
jl
mov
dec
dec
je
rcrb
mov
add
jg
cmc
insl
cmc
out
lcall
enter
stc
inc
test
add
add
jno
loope
mov
mov
mov
inc
jbe
pop
push
aad
lcall
aam
or
add
push
inc
xorb
mov
shl
or
lcall
and
repz
push
pop
adc
push
rol
lea
add
test
push
sub
add
mov
adc
nop
rorl
xchg
iret
xor
xorb
outsb
ss
jae
jo
jecxz
pop
adc
mov
arpl
in
test
mov
mov
jne
jne
mov
fwait
insb
lock
mov
xchg
cmp
sti
jnp
ss
ds
xchg
and
insb
mov
inc
es
pop
xchg
jae
cli
mov
test
ja
sti
lret
sbb
jnp
rorb
sahf
cmp
adc
cwtl
push
dec
add
in
add
rcr
imul
pop
addr16
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
mov
lahf
push
lret
adcb
cmpsl
out
jmp
mov
icebp
mov
lock
sbb
dec
or
ja
mov
cmpsb
pop
mov
mov
mov
call
out
mov
jg
mov
in
xchg
mov
jae
inc
xchg
xchg
mov
ljmp
xchg
cli
insb
jmp
shll
mov
movsb
push
fidivrl
add
or
bound
loope
push
loope
into
fdivrs
aaa
sbb
inc
mov
clc
push
cld
sub
lea
ss
out
dec
stos
adc
mov
faddl
jl
fiaddl
loop
out
in
jl
add
jnp
leave
pop
test
sbb
inc
clc
mov
cmc
xchg
xchg
jge
es
in
aam
mov
js
dec
xor
sub
ficompl
jb
mov
shl
hlt
and
jp
mov
add
or
and
scas
sti
jle
pop
push
pop
cwtl
push
fadds
add
in
adc
shlb
xchg
in
adc
movsl
push
and
xchg
adc
sbb
shlb
and
mov
sub
pusha
pop
and
add
dec
inc
aaa
mov
inc
mov
xor
addr16
xchg
adc
cmp
out
invd
xchg
push
iret
lea
jbe
or
je
ss
imul
push
lahf
mov
cmp
ja
cmp
sbb
stos
or
jl
adc
push
add
call
push
jae
mov
jnp
add
popf
cmp
fcoms
movsl
fsubs
insl
js
or
push
mov
cmp
in
jne
pop
add
lcall
pushl
dec
and
push
nop
xor
loope
inc
jge
pop
pop
xchg
loope
add
mov
mov
push
add
arpl
push
pop
pop
rolb
cmc
fisttpl
scas
cmp
add
negl
arpl
push
sbbl
add
add
lahf
out
xor
mov
lahf
pop
gs
data16
xchg
inc
sub
adc
pop
cltd
mov
aad
ja
test
shl
mov
lea
fisttpll
insb
mov
push
cmpsl
cs
aas
ret
stc
fmuls
fwait
adc
and
pop
push
es
testl
pop
cmpl
add
imul
adc
fsubl
xchg
cmp
int
test
push
loopne
xchg
insl
push
shl
mov
dec
push
pop
cmp
push
jmp
repnz
pop
loope
jg
xchg
xor
shl
cwtl
and
jge
imul
or
or
add
mov
mov
iret
repnz
loopne
mov
cli
rorl
enter
sub
shl
nop
es
jnp
sub
cmp
js
rorb
add
xor
push
jl
jle
insb
out
cs
mov
add
add
pushf
or
add
add
addr16
arpl
hlt
dec
notb
pusha
popa
cli
in
mov
es
sub
cld
jae
sub
jp
out
ss
clc
sbbb
fstpt
es
or
call
jne
test
mov
push
imul
std
je
rolb
mov
add
jecxz
in
fildl
fwait
add
imul
sub
push
in
in
jo
mov
std
inc
pop
lods
pop
dec
inc
call
popf
sar
lret
and
stos
add
shrl
sub
jnp
lcall
scas
lcall
fwait
lcall
mov
shlb
or
mov
lea
pop
mov
movsb
stos
rorb
jmp
dec
mov
xor
dec
outsl
mov
pop
stos
jle
and
shr
mov
shlb
add
xchg
xchg
insb
ret
add
add
fwait
mov
in
xor
adc
push
faddl
add
call
cmp
repnz
adc
pop
lock
and
stos
adc
jbe
lcall
les
jne
dec
xor
punpckhbw
mov
lcall
inc
jmp
leave
xchg
pop
pop
nop
adc
movsb
popf
mov
mov
in
lds
pushf
xchg
xor
sbb
dec
xlat
jb
ljmp
jl
sbbl
cmpsl
cmpsl
push
divb
adc
pop
aas
mov
push
daa
cmpb
movl
dec
fs
xor
jmp
pop
adc
scas
sbb
fidivrs
push
mov
dec
xchg
int
cmp
fmul
push
push
pushl
inc
or
cld
xlat
pop
pop
mov
jle
push
and
ss
add
imul
ret
add
xchg
cmp
hlt
shrb
jae
lock
int
mov
cli
pusha
or
jbe
fimuls
adc
in
add
add
data16
jne
mov
lcall
add
add
mov
clc
inc
ret
xchg
mov
icebp
cltd
test
dec
xor
mov
cltd
adc
lahf
cmpsb
mov
cmp
ret
fnstcw
hlt
mov
dec
addb
cmp
xlat
sub
outsl
enter
lods
repz
test
push
data16
cli
pop
popa
xchg
mov
fdivs
sbb
stc
cwtl
in
xor
inc
mov
lea
xchg
add
or
push
jo
cmpsb
mov
dec
and
cld
in
mov
mov
xor
stos
lret
lret
sub
adc
lea
mov
fmul
jmp
sbb
jmp
adc
push
xor
jae
lahf
roll
mov
test
adc
add
pop
sbb
push
shl
fists
xchg
mov
push
aad
mov
cli
outsl
fsubrs
and
test
inc
mov
inc
or
cli
xchg
lret
test
xchg
xor
add
pop
hlt
dec
sub
or
test
add
add
jnp
sti
xchg
lahf
mov
mov
sbb
add
add
cmp
push
hlt
pop
fdivrs
fnstsw
daa
inc
stos
inc
rcr
out
sub
jecxz
jo
ret
pusha
adc
shrl
shlb
inc
push
pop
mov
xchg
sbb
or
std
xchg
mov
imul
iret
inc
jbe
push
or
loopne
cs
push
ret
pop
int
inc
ret
test
mov
push
push
data16
cmp
push
jge
sub
insb
sub
adc
movb
push
xchg
lret
xor
sarb
xchg
mov
pop
or
addr16
inc
cmc
adc
sti
enter
or
push
movl
movsl
test
sbb
mov
scas
or
xchg
sbb
or
sbbb
adc
mov
mov
inc
dec
push
in
and
or
dec
into
fisubs
cmpsl
mov
xchg
jno
test
xor
ds
lods
jge
add
add
pop
sarl
mov
pop
sbb
add
add
adc
lds
mov
out
aas
cld
nop
imul
cmp
idivb
loop
jno
insb
adc
hlt
movsb
sub
sub
adc
in
jge
jae
xor
mov
inc
stos
pop
cmp
push
ror
jno
push
cmp
mov
ljmp
mov
jne
loopne
clc
gs
cld
fmuls
sbb
cmpsb
pushf
xchg
mov
sub
insl
in
cmp
cmpsb
add
lahf
mov
or
pop
cld
je
int3
jg
pop
and
sbb
jge
push
mov
pop
hlt
mov
cmp
in
push
push
mov
add
adc
dec
xchg
cmpsl
and
dec
mov
in
inc
testl
filds
imul
pop
popf
push
insb
sub
push
int
pusha
adc
fidivl
pop
call
insl
lock
std
repz
sti
je
and
add
add
rcr
mov
mov
cld
pop
lcall
test
jp
dec
adc
lock
sbb
hlt
jge
gs
fiaddl
and
xlat
adc
pop
shlb
lea
mov
xchg
sti
jne
ljmp
add
mov
jns
mov
das
pop
push
inc
int
jo
mov
pop
and
in
push
mov
dec
mov
ss
repz
fsubp
into
dec
pop
sub
fistps
rolb
cmp
fcmovnb
lock
bswap
jnp
arpl
xchg
inc
insb
jne
sbb
mov
bound
into
out
pop
stc
aaa
sub
mov
fwait
inc
push
add
inc
mov
dec
push
push
in
cmp
js
gs
xchg
mov
cld
or
cmp
movsl
cltd
lods
pusha
lretw
xchg
or
loopne
lock
mov
mov
push
add
add
lock
cmp
arpl
je
inc
dec
in
loope
add
push
xor
stc
sub
arpl
sahf
xlat
pop
fidivs
loopne
adc
add
out
mov
inc
sahf
filds
mov
mov
lods
pusha
mov
xchg
pop
push
cli
call
pusha
mov
sbb
insb
mov
cmp
cwtl
mov
int3
rcll
or
cmpsl
cs
rcl
cmp
sub
in
sbb
sbb
push
push
js
jnp
pop
pop
mov
sahf
shlb
iret
cmp
leave
iret
scas
or
bnd
ret
dec
jl
dec
jmp
and
push
adc
xor
push
test
cmp
pusha
outsb
enter
mov
or
pop
mov
scas
cmc
loop
nop
pop
mov
mov
jae
inc
ljmp
sbb
decl
fsubp
mov
je
cmp
aas
lds
lret
inc
add
add
mov
mov
scas
hlt
mov
add
or
repz
mov
adc
push
mov
push
push
pusha
sub
xor
and
inc
sub
cld
push
cmp
add
lea
shr
mov
test
mov
gs
orb
lret
leave
ja
xchg
mov
mov
jne
push
and
popf
inc
cld
mov
mov
sbb
mov
or
ret
aaa
sub
or
je
fisttpl
mov
dec
adc
mov
jg
push
dec
scas
int
mov
lret
jmp
sbb
sbb
jp
cmpsb
and
test
or
sbb
mov
ljmp
mov
pop
in
xor
rcrb
xor
jno
pop
mov
int3
insl
inc
fstl
xchg
popa
cmc
lock
into
hlt
sub
xor
or
jns
xor
pop
add
xchg
rolb
add
lret
xchg
in
mov
incl
roll
jecxz
add
outsl
jge
add
mov
loopne
lret
mov
xor
sti
ret
pop
mov
cmpsb
insb
jb
mov
mov
repz
and
jne
les
sbb
add
dec
or
loope
and
mov
repz
js
pop
mov
dec
or
cmc
push
push
loop
in
fs
jae
xorl
test
add
std
mov
jbe
stc
jno
adc
ret
and
sub
testl
out
ud2
cmp
dec
gs
sar
nop
mov
mov
inc
sbb
mov
and
or
adc
jno
push
fnstcw
push
cmpsl
mov
pop
and
arpl
cmp
mov
inc
fcmovnbe
paddsb
add
js
jo
mov
aad
xlat
cmp
outsl
xchg
hlt
adc
mulb
out
push
and
add
add
sub
in
negl
sub
movsb
cli
pop
mov
add
out
fstl
sti
stos
inc
gs
inc
es
ljmp
sbb
push
push
mov
jg
inc
in
sub
xchg
cwtl
mov
in
sahf
mov
add
cmp
sub
sub
ja
xchg
divl
repz
push
je
aad
adc
mov
sbb
xchg
cmpsb
sub
fs
fisttpll
imul
adc
adc
mov
fisttps
add
dec
jae
jge
pop
and
aad
in
sti
idivl
mov
xor
mov
rcl
lods
aad
mov
aad
mov
fldenv
pop
orb
aam
rcrl
inc
xchg
cmp
mov
xchg
pop
pop
shlb
stos
lds
je
stos
ret
mov
ret
jno
int
lock
and
icebp
inc
loop
mov
xchg
stc
leave
out
add
add
mov
stc
dec
push
fsubl
out
cmp
add
add
aas
outsb
jp
sub
movsb
pop
inc
pop
adc
test
imul
xchg
bound
sbb
sti
es
jne
cmpsl
shrb
cmpsl
fs
loope
jnp
xchg
daa
xchg
dec
push
xor
in
xor
inc
xor
stos
xlat
shrb
cmpl
addl
aad
add
mov
and
jmp
div
mov
and
add
xor
push
pushf
pop
pop
cmp
mov
jo
xor
inc
loop
loopne
xchg
xchg
push
aam
fldenv
das
dec
push
ds
sbb
gs
push
loope
and
icebp
out
inc
xchg
fstpt
not
out
or
std
jo
mov
incb
inc
or
scas
ret
jo
xlat
sub
outsl
mov
repz
pop
fs
xor
int3
and
xorb
pushf
sbb
pusha
cmp
sbbl
jg
sbb
fs
push
xorb
data16
add
adc
push
push
push
mov
stos
inc
out
add
clc
sbb
dec
and
out
push
mov
jb
sub
dec
xchg
adc
imull
sub
sbb
push
xchg
xor
shll
jno
sbb
nop
test
adc
shll
jae
mov
enter
sbbl
in
jp
notl
outsb
add
inc
mov
sbb
scas
ja
mov
int3
lret
mov
pandn
push
xor
adc
or
add
xchg
mov
jno
popa
fistps
and
mov
into
lcall
dec
cmp
push
rol
mov
mov
mov
cmp
pop
mov
out
int3
insb
mov
shlb
shll
sbbb
shll
dec
jl
push
xor
mov
cmp
mov
in
shlb
in
mov
add
out
repnz
add
pop
lcall
les
cmp
roll
add
add
dec
xor
mov
fildl
add
or
movsb
and
les
ret
mulb
xor
out
mov
jbe
inc
idiv
ljmp
in
inc
popl
pop
adcb
outsb
stos
sbb
fimuls
test
sub
into
out
pop
ljmp
push
dec
cmpsb
shrb
test
cli
test
add
dec
int3
dec
dec
sub
cmp
repnz
fsubrp
inc
das
lds
xor
xor
call
or
inc
and
and
bnd
pop
mov
jae
xor
push
push
js
loopne
sahf
xor
dec
dec
cmp
pop
or
les
and
push
add
imul
bound
fdivrp
pop
xor
sbb
add
shrb
lret
xchg
repnz
adc
in
push
das
lret
hlt
xor
add
add
mov
push
decl
sub
imul
add
xchg
movsb
ret
xchg
or
sbb
fsts
adc
cmp
sti
jg
mov
pop
outsl
shrb
fistl
lods
xchg
dec
mov
popf
jns
push
sbb
adc
std
sbb
dec
push
jnp
inc
xor
aaa
pop
enter
or
push
mov
stos
and
iret
pop
addr16
xlat
adc
dec
pusha
xlat
mov
sub
dec
lret
shrl
sbb
push
ja
incb
dec
mov
pop
pushf
int3
sbb
xchg
out
pop
mov
pop
iret
test
mov
jmp
lea
cmp
and
rep
push
sbb
sbb
mov
das
push
data16
or
inc
movsb
arpl
jns
or
pop
jae
jle
pop
das
mov
lods
mov
aad
and
mov
out
ficoml
mov
or
test
add
and
cmp
sti
fsubp
inc
push
sub
rorb
add
add
or
mov
aad
mov
mov
call
mov
sub
in
fidivs
mov
xchg
xor
addr16
pop
mov
cmp
mov
and
bound
mov
xor
xor
jle
add
pop
jbe
shlb
or
les
int3
ljmp
xchg
push
popf
sarl
pop
mov
or
pushf
sbb
adc
cmpsb
in
mov
shrl
pop
loope
jbe
sub
js
xchg
xorl
pop
mov
adc
ss
push
cltd
mov
imul
bound
adc
xchg
or
and
aaa
xchg
xchg
add
inc
xor
and
fwait
sti
cmp
lret
jne
out
xor
lret
addr16
mov
test
add
and
and
mov
lcall
ljmp
fwait
push
dec
push
mov
rcr
mov
pusha
aam
cmp
js
pop
or
iret
jl
mov
loop
dec
iret
lea
and
add
popa
cltd
pop
cmp
push
mov
mov
sub
xor
out
dec
je
and
add
push
sub
mov
nop
jno
mov
mov
test
sbb
and
mov
inc
out
enter
insl
mov
jne
out
mov
jl
sub
or
enter
xchg
out
les
pusha
out
jecxz
addr16
js
or
push
icebp
adc
out
pop
sarb
test
orb
fsubrl
pop
push
push
mov
adc
lret
mov
insl
mov
movsb
add
imul
dec
jmp
cs
cmp
add
mov
andb
add
repz
ror
lock
jnp
xor
xchg
sub
add
pop
jmp
add
pop
mov
test
test
push
in
inc
add
dec
pop
and
adc
push
mov
adc
inc
std
xchg
ror
out
lret
int3
xchg
xchg
sahf
out
or
jo
jno
xor
int
cld
cmpb
add
sub
cmp
push
pmullw
outsl
sub
pop
into
js
leave
leave
insb
leave
sub
repz
loope
jno
jge
pusha
xor
loop
dec
sub
lea
ret
sahf
test
dec
dec
outsl
jb
lcall
fs
jecxz
subl
and
cltd
lret
xchg
xchg
insb
xchg
fidivs
ret
mov
out
push
push
nop
outsl
inc
pop
syscall
insl
push
imul
mov
insl
xor
inc
shrl
cwtl
adc
mov
jae
dec
pop
nop
push
adc
ss
pop
adc
je
testb
add
and
repz
fisubs
mov
loope
in
add
add
push
sub
mov
cmp
pop
push
je
call
jne
gs
adc
xor
pop
xlat
xchg
je
xchg
ficomps
push
xor
and
xchg
xchg
insl
xor
out
bnd
int3
push
shlb
in
ja
jmp
dec
sbb
shlb
xchg
mov
aam
xchg
rolb
cmp
lea
xor
sbb
or
das
sub
mov
mov
jmp
out
pushf
fildll
cmp
pop
add
push
aas
ljmp
cli
imul
cmpsl
inc
cltd
dec
lret
test
scas
add
cmp
and
cmp
mov
xor
push
outsl
inc
sbb
mov
fiaddl
xchg
inc
repz
sub
push
in
jmp
insb
dec
scas
jb
adc
mov
sahf
jle
xchg
dec
sar
fucom
add
add
out
sbb
mov
in
add
add
mov
sbb
adc
jne
ja
mov
mov
sbb
pushf
test
jecxz
arpl
and
pop
ljmp
pop
test
mov
sbb
mov
xor
vsqrtss
pop
xchg
cmp
dec
aas
pop
inc
cmc
pop
mov
sub
push
lret
adc
jp
cli
add
or
adc
jbe
stos
xlat
lret
mov
cmp
and
decb
movsb
mov
test
dec
inc
xchg
add
imul
cmc
out
jb
lods
jns
js
testl
lahf
push
lods
xor
pop
mov
mov
sbb
or
popf
jns
lock
bound
pop
adc
mov
fnstsw
xor
aad
int3
xor
push
add
inc
aaa
mov
mov
jae
lahf
sub
jp
cmp
popa
mov
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
cwtl
lcall
dec
inc
push
add
scas
hlt
mov
pop
pop
and
roll
cwtl
push
or
and
int
scas
aas
xchg
cs
stos
jl
nop
cld
pop
ret
jg
popf
fisttpl
das
fiaddl
fistpll
cmp
xlat
fisttpl
clc
shl
in
jae
push
aad
rcll
sbb
outsb
sub
iret
cmpsl
mov
or
xchg
daa
lahf
push
xor
push
mov
and
dec
xor
jmp
mov
lea
xor
adc
inc
test
fisubrl
imul
push
jp
cli
xchg
inc
repnz
ror
decb
js
call
pop
jmp
cmp
pop
cmp
jbe
in
jnp
test
gs
repnz
aaa
xor
inc
pop
negl
mov
cmp
notb
icebp
outsl
mov
in
and
push
test
out
sub
add
add
lret
pusha
rorb
cmpsb
mov
cmp
insl
out
add
add
incl
adc
test
xor
or
jns
xor
push
cmpsl
out
insb
sbb
outsb
test
std
shl
add
pop
je
and
inc
inc
insl
out
add
or
or
add
xchg
jae
hlt
lret
mov
xchg
rorb
in
cmp
inc
jl
jg
movsl
xor
nop
adc
shlb
adc
lea
mov
mov
cs
add
pop
jmp
inc
rolb
push
inc
imul
inc
stos
push
xlat
add
and
sti
sahf
lret
test
pop
sub
adc
add
rol
mov
mov
popa
mov
cmpb
push
mov
jecxz
mov
imul
xor
insl
mov
fdivl
mov
push
and
dec
push
cwtl
loopne
inc
jmp
add
add
gs
testl
mov
add
add
cmp
pop
mov
mov
icebp
push
inc
mov
les
sbb
scas
pop
insb
adc
aam
sub
js
dec
out
jp
scas
fwait
neg
sbbb
lods
xchg
cmp
xor
or
stos
inc
mov
in
mov
push
mov
insb
push
jecxz
in
pop
push
cmp
pop
inc
lds
jmp
fs
ret
daa
push
ret
movsl
movsl
popf
int
xor
mov
mov
add
sbb
test
inc
mov
mov
mov
test
mov
xchg
jmp
mov
sbb
scas
aas
push
mov
inc
xchg
sub
dec
cmpsl
pop
pop
aam
jge
mov
loope
scas
popf
mov
es
fbstp
jle
mov
stos
dec
pop
mov
data16
pop
adc
jno
movsl
sbb
call
cli
add
add
xchg
mov
mov
pop
das
nop
and
aad
icebp
add
add
sahf
dec
adc
lea
mov
lcall
insb
mov
aam
pop
adc
fs
les
xlat
cmpsl
adcb
jge
loope
shl
pop
lods
xchg
lahf
ja
aam
shll
int
xor
das
ja
fldenv
and
rcr
ret
jge
pop
in
mov
dec
nop
das
sub
mov
adc
jae
mov
inc
sub
out
adc
adc
nop
rcrb
xchg
cmp
push
lcall
mov
mov
jb
fbstp
fisubrs
aad
outsl
popf
sub
jo
outsb
push
sbb
repz
dec
inc
in
push
or
loop
das
xchg
and
imul
or
xor
sbb
scas
push
jo
gs
cltd
push
mov
mov
dec
add
dec
lock
std
sbb
add
mov
fucomi
xor
inc
mov
add
ja
sbb
inc
jl
mov
and
push
aad
push
inc
jp
lahf
dec
push
and
int
mov
xchg
cmp
frstor
mov
xor
dec
add
xlat
sub
sbb
mov
jnp
dec
mov
mov
mov
adc
mov
xchg
mov
xchg
sbb
je
xchg
mov
dec
inc
cmp
dec
mov
test
in
jb
mov
sub
and
push
inc
cld
fwait
jecxz
stos
sahf
mov
or
cmp
ret
roll
fwait
pusha
mov
adc
out
nop
sbb
popa
ret
pop
xor
cmpsl
or
inc
pop
or
and
cs
adc
fbld
sahf
addr16
jb
pop
fisttpll
outsl
push
outsb
lcall
mov
add
jb
sbb
mov
mov
cmp
jg
divl
dec
icebp
add
fwait
add
add
push
inc
pop
jns
aas
loopne
sub
nop
pusha
add
add
add
aas
inc
sbb
and
jge
movsl
mov
into
sbb
imul
jo
loope
jne
int
outsb
imul
jbe
pop
inc
pop
das
mov
fildll
mov
push
imul
les
pop
jecxz
lods
shll
pop
das
sub
dec
add
push
ja
fidivrl
sti
mov
jmp
inc
mov
lock
mull
je
ljmp
dec
test
mov
rorb
fisttpll
fstpl
shl
fs
fldcw
cmp
jmp
pop
jmp
or
std
imul
stos
repnz
cmp
mov
xchg
fwait
rolb
jmp
mov
fcom
mov
xor
inc
mov
xchg
loope
in
sarb
and
aaa
cmc
mov
cmpl
pop
jno
or
not
sbb
es
and
dec
dec
and
jae
mov
add
add
jnp
mov
mov
hlt
add
add
pop
xor
pop
xchg
xlat
jp
jne
cld
mov
jne
lahf
pop
out
fwait
jbe
jge
cmpsb
cwtl
arpl
pop
jle
das
sahf
mov
mov
insb
popa
add
repz
repnz
in
mov
mov
mov
sarl
jbe
shl
pop
and
inc
push
inc
stos
and
push
push
pop
cwtl
hlt
loop
jl
push
adc
and
cmp
mov
pop
add
loop
adc
lahf
in
mov
fwait
sbb
aaa
adc
jp
rclb
cmp
push
pop
int
cmp
inc
cmp
mov
arpl
xchg
push
and
mov
inc
sub
adc
fildll
std
and
addps
fldt
push
jl
jmp
enter
leave
xchg
insl
xchg
mov
aad
add
imul
or
add
add
ret
push
mov
lcall
inc
notl
push
mov
mov
imul
sbb
es
mov
stos
push
and
scas
incl
jno
mov
in
movsl
mov
adcb
dec
in
mov
mov
das
mov
jae
lret
mov
enter
test
out
arpl
adc
mov
inc
fs
sub
lcall
adc
out
sahf
mov
xchg
icebp
or
jl
push
xchg
jecxz
hlt
cmp
mov
cmpl
pusha
lahf
push
je
xor
in
pop
and
cmc
repnz
dec
xchg
mov
xchg
adc
mov
test
xchg
loop
lods
es
xor
xchg
push
xor
push
test
pop
rcll
cmp
lcall
lds
dec
pop
inc
jb
pushf
jae
adc
mov
add
fdiv
mov
pop
xor
add
add
dec
or
jb
aas
out
movsb
dec
aaa
inc
mov
fsubl
insb
ret
or
dec
scas
fwait
movsb
mulb
or
inc
imul
sbb
sub
mov
jmp
push
cld
in
stos
call
sbb
xor
cmpsb
adc
test
cmp
stc
mov
jne
rcrl
call
sub
sbb
push
fucomip
ret
mov
mov
fisubl
scas
jae
inc
stc
movsl
pop
jmp
stos
insb
adc
cwtl
pop
rep
stos
jl
mov
sub
push
iret
sub
sbb
ljmp
xor
jg
inc
pop
imul
rorb
inc
sbbl
xchg
jmp
stc
aam
repz
inc
and
mov
fsubr
mov
mov
lret
rcll
in
mov
into
and
movsb
lds
jno
cs
out
mov
add
mov
fidivl
testl
add
in
lods
outsl
cmpsb
xor
cmp
push
push
xchg
xor
repz
in
into
add
aas
sbb
push
add
das
mov
daa
data16
popa
adc
dec
test
sti
lahf
ret
repz
je
cld
fwait
sub
mov
aas
pop
sub
sbb
mov
enter
mov
push
cmp
je
dec
sahf
ljmp
jbe
dec
xlat
lret
jle
dec
aad
notl
bound
pop
jno
call
xchg
add
sbb
sub
mov
loopne
add
pop
mov
test
mov
xchg
int3
test
xchg
notl
stos
int3
mov
jl
movsl
xchg
mov
sti
or
pop
into
js
fs
push
mov
dec
mov
pop
pop
into
inc
bound
pushf
mov
push
inc
pop
add
ret
cltd
das
push
add
leave
lret
daa
jl
add
add
push
pop
push
jmp
rolb
add
clc
add
add
pusha
cmp
inc
movsl
ljmp
push
jecxz
inc
rcll
sbbb
sbb
enter
rcrb
sbb
rcrl
inc
xorl
fnstenv
cld
add
mov
ret
push
xchg
mov
push
int
insb
push
xor
ljmp
pop
and
push
scas
ss
pop
jae
xor
dec
dec
xchg
mov
inc
sbb
xor
push
dec
lds
push
icebp
mov
nop
inc
mov
pushf
bswap
jmp
outsl
adc
inc
js
sub
mov
inc
pop
mov
lret
jecxz
ret
loope
sub
jae
jnp
inc
fisubl
sbb
gs
xor
icebp
mov
jle
loop
push
jno
jbe
shrb
mov
pop
lret
mov
popa
fiadds
shlb
mov
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
add
loopne
stc
add
add
insb
adc
dec
inc
inc
test
in
mov
cmp
mov
adc
testb
scas
dec
out
popl
xor
adc
jne
push
aas
fiadds
push
sarb
fsubl
insl
icebp
jb
mov
mov
popa
push
ss
or
cmpsl
or
sub
adc
and
push
adc
sbb
scas
sub
test
stos
push
fistpl
icebp
std
inc
imul
fwait
dec
out
mov
lock
lcall
dec
mov
je
inc
pusha
mov
bswap
mov
sbb
int3
adc
sti
sbb
jmp
xor
out
scas
rolb
pop
jbe
ret
cmp
insl
imul
adc
fisttps
je
cmpsb
adc
cmc
or
lret
mov
adc
shrl
stc
mov
cmpsb
daa
or
dec
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
mov
rorb
ret
pop
lea
dec
imul
push
push
rol
fists
mov
xor
jae
testl
push
xor
inc
push
mov
xchg
out
jns
int
jnp
mov
in
loopne
or
dec
ljmp
mov
sub
xchg
or
test
pop
out
bound
imul
pop
lret
jge
dec
xchg
mov
int3
std
ss
cmp
pop
xchg
sbb
insb
sahf
mov
push
lahf
in
xchg
mov
mov
subl
lock
cmp
jmp
lcall
pand
cld
cmp
mov
xchg
lahf
inc
mov
sub
call
inc
cmp
add
sbb
insl
in
mov
jp
xchg
cs
idivl
jg
add
add
aam
int
aaa
das
aam
inc
stc
outsl
test
add
add
mov
ret
sub
lods
jns
cmp
cmp
std
clc
aad
enter
sbb
jg
cmp
sub
sahf
mov
repnz
ss
outsl
push
mov
mov
or
rclb
fucomp
dec
movsbl
xchg
bound
sbb
cmpsl
pop
hlt
pop
mov
ja
fmull
scas
les
pop
push
ret
subl
mov
das
sahf
cmp
cld
movsb
sbb
ds
or
out
push
mov
mov
and
mov
jno
add
dec
mov
das
adc
dec
adc
fwait
push
jbe,pn
sub
jp
mov
fwait
mov
xor
icebp
out
jns
enter
inc
mov
xor
fstp
test
ret
cmpsb
inc
cwtl
es
lret
jmp
add
add
arpl
addr16
sub
xchg
cmp
cld
add
add
jmp
rorb
test
jl
push
leave
pop
rcr
mov
dec
pop
push
aam
jmp
stos
and
xchg
dec
icebp
outsb
jb
inc
pop
insl
add
cmpsl
imul
pop
pop
iret
rcl
pop
push
xchg
xchg
out
imul
pop
out
fistpl
push
inc
repnz
jge
insb
shlb
sub
cmp
lret
scas
sub
cmp
or
pop
jns,pt
mul
movsb
rcrl
fdivrl
sub
ja
int
cmp
inc
notl
push
ret
fcmovne
jl
push
testb
mov
daa
adc
addr16
fcoml
mov
mov
jo
adc
popf
rorb
or
rcrl
cwtl
push
data16
and
adc
mov
add
das
scas
les
sub
jae
not
psraw
inc
fs
data16
add
out
cmp
cmp
pushl
xchg
xor
cld
xor
add
add
push
lods
shrb
inc
inc
lea
test
lods
mov
cmp
aam
inc
rolw
fs
enter
out
mov
xchg
enter
jnp
fiadds
cmp
mov
push
pop
push
fmull
mov
sbb
mov
movsb
bound
push
int
mov
testl
inc
dec
push
ja
aad
sbb
out
sarb
leave
or
or
sub
mov
shr
leave
mov
inc
cmp
inc
sub
or
jge
test
jecxz
lods
aad
pop
das
mov
bound
and
aaa
js
mov
std
add
stc
shlb
mov
mov
push
fldenv
rcr
out
in
in
imul
sbb
lahf
push
inc
jp
push
mov
cmpsl
sub
cmp
mov
daa
xor
dec
xorl
add
push
scas
mov
adc
mov
add
add
ss
jno
xchg
xor
mov
inc
mov
or
jne
push
jbe
push
test
arpl
pushl
adc
jno
pop
dec
xor
cmp
andl
add
jne,pt
fisttpl
xchg
outsl
xor
dec
sbb
nop
pusha
mov
fldl
push
xchg
push
cmp
daa
jge
and
test
std
jns
out
fs
push
push
aam
mov
loope
sarb
repz
aad
adc
rorb
cmp
xchg
loop
test
inc
xchg
iret
stos
dec
ret
mov
in
ljmp
mov
pop
lock
in
repnz
mov
movsb
call
xchg
fiaddl
arpl
clc
dec
fsts
sub
nop
sahf
sub
jge
clc
and
pop
push
dec
dec
sub
cmp
jns
mov
jl
pop
push
pushf
out
ret
pop
imul
add
aaa
xchg
and
movsl
mov
mov
mov
lret
incl
add
or
mov
popf
test
movsb
fcmovnbe
cs
outsl
imul
add
test
pop
mov
push
add
mov
enter
dec
scas
ja
and
push
xor
ja
adc
int3
fmull
fsts
imul
mov
aaa
jg
push
mov
dec
pop
and
jecxz
imul
mov
fisubrl
cmpsb
fcmovnbe
inc
popf
and
fadds
push
mov
dec
push
push
loopne
insb
xor
sub
jg
inc
leave
out
jnp
push
or
lods
mov
mov
divb
push
out
mov
jbe
addl
jg
outsl
out
sahf
adc
sbb
cli
jl
and
das
pop
adc
push
mov
cmp
mov
mov
aas
lcall
jl
add
add
mov
push
jg
mov
adc
add
add
aas
mov
cmp
in
sbb
or
cmp
xchg
add
jmp
push
xor
pushf
daa
sub
int
add
sbb
adc
lcall
loopne
or
std
xchg
sarl
pop
into
xor
inc
dec
add
dec
dec
divb
lods
jg
ja
int
inc
movsb
out
push
sub
sub
ss
in
enter
jbe
iret
pop
push
mov
cmp
cwtl
and
popf
lods
mov
mov
xchg
mov
sub
mov
mov
xor
pushf
or
push
ret
mov
xor
jmp
cwtl
bound
xor
insb
adc
imul
in
scas
stos
outsl
lcall
ror
dec
movsb
and
cmp
cltd
mov
mov
add
add
mov
mov
lods
imul
inc
lahf
mov
movl
add
scas
sbb
xor
dec
push
push
outsl
fs
or
cmp
or
add
add
ret
mov
adc
daa
xchg
dec
cmpxchg
ss
jb
xchg
scas
subl
mov
jge
insb
cmc
push
pop
fistpll
lahf
sbb
pusha
stos
popa
push
cmp
pop
fiaddl
sbb
and
pop
cmp
sub
mov
jb
fsubs
repz
pop
push
jle
or
push
push
jp
mov
jmp
lcall
lea
ret
hlt
cmpb
fst
mov
rcrl
adc
mov
shl
inc
push
adc
rcll
xchg
and
stc
fdivl
pop
test
ljmp
inc
ja
push
mov
arpl
xor
mov
subl
push
fiadds
add
xchg
sub
scas
or
cmp
push
add
add
push
sbb
std
gs
add
fs
mov
fidivl
imul
out
dec
fisttps
shlb
movsb
adc
jle
xchg
je
cmp
xchg
sub
lret
xchg
fildl
jns
mov
fs
rcrb
cmp
xchg
xor
mov
leave
push
push
and
push
cld
adc
test
adc
and
fimull
iret
bsf
push
idivl
out
insb
cmpb
dec
icebp
adc
mov
call
xchg
shrb
add
mov
addb
jb
dec
adc
inc
sub
mov
pop
and
dec
imul
lret
popf
add
mov
scas
inc
or
mov
sti
cmp
mov
or
mov
push
dec
cmp
mov
pop
push
mov
push
add
add
hlt
fbld
popa
repz
add
add
mov
or
enter
inc
xor
jmp
cmc
je
dec
dec
ret
pop
mov
shrb
insb
mov
add
xor
repz
mov
fs
cmp
gs
push
ljmp
cmpsl
or
xchg
lahf
mov
ja
xor
push
mov
std
into
add
shlb
adc
cmp
xchg
xor
adc
jecxz
ja
out
scas
mov
jecxz
das
cltd
push
rcrb
push
mov
sub
lcall
pop
stc
mov
mov
aas
scas
mov
arpl
repz
clc
push
inc
sub
and
mov
ret
in
cld
js
adc
jae
mull
data16
sub
pop
scas
mov
cmpsl
inc
mov
aaa
imul
insb
jp
fcompl
faddl
add
mov
into
fwait
add
mov
stos
add
add
or
push
mov
push
mov
pop
stos
jl
jae
pop
aaa
sbb
cwtl
paddusw
pop
fsubl
sub
mov
pop
das
ret
and
fbld
dec
mov
and
frstor
fisubs
inc
cs
inc
sub
pop
inc
jp
inc
push
ljmp
cmp
xchg
push
jmp
mov
and
pop
and
out
mov
mov
scas
outsl
stos
push
jp
pushf
mov
jae
xchg
cmp
sub
dec
pop
leave
xorl
ret
lods
add
fistps
mov
push
nop
int3
and
mov
pop
push
les
loope
loopne
fldl
in
pop
fdivl
jecxz
rorb
ret
cmp
inc
movsb
jp
xor
gs
inc
xchg
cmpsb
in
add
mov
cmp
icebp
xchg
ljmp
push
or
sbb
je,pt
or
jg
add
jl
test
out
mov
pop
sarb
in
mov
add
add
inc
sub
fwait
ds
cmp
in
fimull
and
sti
gs
test
decl
dec
bound
jl
adc
cld
push
mov
xor
jns
cmp
ljmp
sti
mov
and
testl
pop
mov
aam
lret
scas
and
test
or
je
arpl
mov
pop
cmpsl
push
popf
aaa
test
dec
dec
push
dec
imul
nop
pop
pop
out
mov
mov
loop
mov
ret
mov
mov
js
aaa
push
jecxz
jb
pop
popf
pop
mov
insl
jl
cltd
push
ss
gs
xlat
pop
mov
nop
cmp
and
pop
cld
jg
pop
nop
je
cli
negb
mov
pushf
push
mov
popa
fidivl
add
idivl
or
pop
mov
mov
jg
cmp
xorb
add
imull
add
sti
inc
out
aas
mov
shl
inc
loop
loopne
add
add
jbe
je
xchg
rclb
add
lret
xchg
js
pop
pop
jae
cli
std
dec
push
cs
pushf
lock
push
cmpsl
or
sti
and
pop
sub
popa
imul
xchg
inc
push
ret
jnp
sbb
mov
mov
jl
fisubl
inc
out
cltd
sub
push
roll
xchg
mov
add
testb
in
pusha
jo
fisubrl
pop
scas
outsb
data16
lret
inc
mov
push
push
push
out
scas
or
pusha
sbb
cmp
stos
adc
js
movsb
das
movsl
into
sbb
cmp
or
jg
xchg
dec
movsb
aad
or
leave
adc
movsl
insb
js
xchg
fisubrs
das
scas
xor
push
cld
ljmp
xor
stos
cli
mov
insb
adc
lahf
lret
sbb
cli
jnp
icebp
xchg
icebp
xchg
pop
divl
adc
jge
enter
fstpl
fisttpll
inc
mov
add
add
bnd
dec
leave
and
ja
imul
add
add
cmp
hlt
je
jle
mov
pop
stos
ljmp
addr16
stos
jbe
mov
mov
push
stc
pop
push
pushf
xchg
mov
les
stos
imull
xchg
inc
or
mov
enter
mov
dec
mov
cltd
das
push
adc
popa
test
mov
adc
xchg
push
lret
xor
mov
out
push
sub
addr16
addr16
fisubs
lret
cmp
outsb
insb
in
loop
popf
cmp
jns
pop
jge
fnstcw
loop
cmp
test
push
dec
mov
mov
or
dec
aad
mov
cmpsb
sti
add
insl
dec
pushf
mov
hlt
test
push
sub
les
cld
call
aam
xor
jp
xlat
idivl
sub
adc
pop
pop
std
subb
iret
add
add
in
out
ja
filds
in
ljmpw
add
add
cmp
arpl
inc
jge
pop
xchg
jae
fisubrl
pop
cmp
test
xchg
or
pop
push
cmp
dec
lods
or
push
lods
mov
mov
pop
xor
inc
and
push
mov
call
or
dec
xlat
pusha
push
test
jmp
test
jb
decb
sub
aaa
test
cmp
xchg
jne
xchg
mov
stc
int3
aad
les
xchg
mov
enter
pop
insb
mov
out
lcall
jno
sbb
xchg
pop
cmp
xchg
mov
movsb
adc
clc
in
daa
mov
adc
cmp
and
into
enter
das
inc
cmp
push
ss
mov
out
and
xchg
loop
popa
imul
pop
inc
lcall
adc
ds
push
xor
xchg
inc
sahf
sub
pop
sbb
outsl
xchg
out
add
add
pop
in
inc
push
or
or
add
ss
mov
out
inc
ret
outsb
sub
scas
dec
jg
inc
xchg
popf
cwtl
jecxz
xchg
clc
movb
std
inc
ret
out
push
adc
daa
lcall
das
lods
aaa
leave
js
cmp
mov
add
orl
mov
mov
xor
icebp
dec
dec
jo
cmp
cmp
es
sbb
sub
repz
adc
jo
lock
gs
push
push
lea
add
jp
arpl
mov
fucom
pushf
pop
in
jne
mov
jns
lcall
mov
sarl
inc
xor
xor
adc
mov
gs
std
adc
mov
bound
sbb
rorb
neg
sub
int
aam
inc
mov
push
push
pop
push
aaa
lods
dec
shr
adc
xor
cwtl
push
leave
mov
cmp
pop
sbb
cmp
add
jg
neg
pop
daa
inc
jmp
or
add
movsl
sub
call
mov
sbb
mov
loopne
in
inc
and
mov
lcall
inc
and
mov
inc
mov
popf
out
lcall
pop
mov
stc
inc
jnp
inc
out
pusha
mov
jge
ljmp
das
mov
jge
mov
out
xor
imul
jb
xchg
sub
cmc
pop
faddl
fimuls
je
adc
xchg
adc
mov
xchg
icebp
fidivl
inc
lahf
js
lock
out
das
in
jns
pop
test
dec
xor
sub
inc
jle
cmp
push
in
cmc
loopne
pop
xchg
rorl
sub
pop
sbb
jle
mov
sub
inc
fdivp
stos
mov
ret
and
bound
sub
push
mov
and
cld
icebp
sbb
pushf
adc
notb
pop
or
cmp
sti
jg
cmp
je
test
jo
stc
or
add
pop
lds
push
fldenv
jno
sbb
mov
ja
xchg
mov
rcr
dec
into
int
and
and
cmpsb
adc
xchg
push
rorb
les
rorb
scas
data16
sub
fwait
rcrl
lods
xor
shll
jmp
cld
inc
and
pop
xchg
inc
out
adc
aas
cmpsb
or
clc
cltd
repnz
jnp
xlat
xor
mov
mov
or
push
dec
xor
clc
ja
lock
add
shrb
loopne
inc
jle
sbb
in
incb
add
arpl
pop
stos
push
fs
mov
stos
dec
subb
and
dec
dec
stc
pop
xor
adc
push
imul
jp
fisttpl
lret
dec
push
and
sbb
add
xchg
insb
mov
mov
mov
pop
jns
out
pushl
cmpsb
pop
cmp
push
rsm
xor
lcall
popf
call
inc
mov
add
add
jnp
fstp
fcompl
je,pn
push
decb
add
push
in
jg
stos
movsb
inc
out
sub
repnz
mov
xlat
bound
sbb
sub
mov
movsl
hlt
fincstp
sbb
fwait
xchg
das
out
sbb
push
inc
xchg
add
push
push
sbb
stc
adc
jb
ret
pop
loopne
fwait
xor
mov
das
mov
add
mov
gs
popa
add
pop
dec
hlt
stos
xchg
and
dec
adc
int
inc
outsb
xchg
aam
or
pop
inc
test
xor
or
cwtl
pop
jb
es
scas
subb
pop
push
out
faddl
mov
lock
xor
ds
cmc
mov
cli
mov
jns
dec
xchg
mov
movsb
mov
repnz
decl
fcomps
pop
enter
push
out
js
les
xchg
cmpsb
popa
repz
or
insl
imul
pop
mov
es
divb
notl
jg
dec
cmpsl
mov
add
add
outsl
mov
add
sbb
add
add
xlat
cwtl
lcall
out
xchg
rclb
push
addr16
stos
repnz
push
outsb
outsl
js
repnz
nop
pushf
push
push
lcall
rcrl
andb
aad
xchg
pop
sar
stc
mov
push
in
loope
mov
and
mov
into
mov
into
inc
sbb
pop
adc
jge
lahf
xor
push
andl
xchg
xor
xorb
js
xor
popa
cmpsl
shrl
adc
jne
dec
hlt
sbb
cmp
call
shlb
leave
cmp
test
jmp
loope
ret
das
nop
xor
in
enter
inc
xchg
scas
push
push
add
inc
adc
popa
mov
fildl
add
jmp
int3
jmp
pop
xor
sahf
adc
xor
sar
fs
xchg
fnstcw
pminub
pop
test
imul
xor
and
je
std
add
add
jmp
frstor
ds
sgdtl
add
inc
add
lret
mov
pop
dec
fwait
jbe
adc
movl
stos
repnz
into
fcmovu
cmpsl
cmp
inc
xchg
addr16
lret
sbb
mov
cs
icebp
inc
xor
sub
pop
inc
xor
xchg
mov
sbb
clc
aam
rcl
test
sbb
sbb
outsl
cmc
mov
inc
lret
push
dec
mov
cmp
sbb
cld
cli
dec
ja
mov
or
jge
das
incl
clc
push
adc
data16
mov
jle
and
repnz
cltd
test
jecxz
out
dec
psubsw
out
out
push
shll
pop
mov
aaa
mov
xchg
add
aaa
pop
dec
pop
pop
adc
gs
or
pop
fwait
scas
adc
loopne
mov
push
and
outsb
cmp
add
aaa
cltd
nop
dec
pop
xlat
adc
add
xor
xchg
lds
rcll
prefetchwt1
add
add
nop
xor
jle
enter
pop
mov
gs
xor
aaa
xchg
sbb
jae
or
xor
xor
add
insb
mov
faddp
pop
fnstenv
jno
cwtl
mov
add
cmp
push
lods
cs
pop
push
in
cmpsl
mov
bound
mov
push
movsl
pop
stos
or
jb
jecxz
and
and
hlt
in
jae
sahf
cmp
jmp
xchg
lahf
repz
sub
xor
test
adc
test
sbb
sbb
les
mov
dec
mov
in
push
imul
fwait
sbb
ret
pop
mov
aad
add
jb
xor
add
adc
cli
add
outsb
mov
or
addr16
inc
or
dec
imul
mov
jle
pushf
xor
jg
fisttpll
mov
cmpsl
cmpsb
adc
sahf
add
add
cli
inc
jg
int
xchg
lods
or
lret
and
add
mov
sbb
test
and
jl
lds
into
cli
xor
inc
mov
call
cmc
cmp
sub
ds
inc
out
pop
test
cwtl
push
lds
daa
xor
imul
mov
xlat
test
daa
arpl
sub
daa
popa
pop
push
dec
xchg
mov
xchg
orb
pop
mov
in
adc
lahf
push
cmp
sti
into
xchg
enter
mov
popf
inc
lods
jo
xor
into
pusha
push
pop
fwait
int
fbld
add
inc
in
and
ljmp
test
or
inc
cs
fcomp
data16
aas
cs
sub
xchg
dec
or
aad
cmp
movsb
xor
mov
jno
dec
jmp
lods
jb
dec
iret
cmp
fldcw
add
arpl
cli
jmp
dec
jne
sbb
lods
addr16
stos
outsl
js
mov
in
cmc
in
add
add
xchg
std
cmp
jle
fistpll
fisubrl
ret
adc
add
or
jg
in
or
mov
and
push
adc
lods
cltd
jmp
cmpsb
mov
stos
mov
fadds
push
cmp
pop
subb
adc
push
push
rclb
cld
into
ret
xor
ficompl
loop
fdivl
sub
mov
mov
sbbl
mov
xchg
in
mov
in
nop
scas
add
cmp
mov
wbinvd
stc
mov
pop
xchg
clc
cmp
out
imul
sbbl
and
mov
call
mov
cmpsb
jecxz
mov
aaa
cmpb
cmpsb
push
sbbb
push
popf
xorl
in
xlat
sahf
es
cmpl
add
loop
xchg
push
push
jb
fwait
add
jb
xchg
cli
dec
les
adc
popa
mov
ja
mov
outsb
popa
gs
push
mov
lds
pop
add
add
iret
xlat
ficompl
inc
and
mov
add
or
aad
mov
and
rcrb
jne
ret
insb
mov
dec
movsl
icebp
jecxz
scas
nop
int3
cwtl
pop
xchg
loopne
add
nop
repnz
sbb
mov
and
mov
inc
add
mov
lahf
jns
insl
inc
push
sbb
mov
cmc
shr
movsb
dec
lea
pop
insl
clc
mov
pop
fcom
cmp
add
in
movsb
push
mov
lods
pushf
cli
iret
or
popa
xchg
push
pop
sub
inc
ret
lret
jb
pop
popa
push
loopne
mov
mov
daa
xchg
ja
incb
xchg
popa
and
lahf
mov
jne
loope
xchg
mov
adc
subl
xchg
lods
or
or
out
xchg
rolb
fsub
hlt
leave
jecxz
andl
pushl
mov
das
jbe
popa
fdivp
fimuls
loopne
nop
or
xor
mov
jnp
and
pushf
add
add
sub
iret
outsb
jmp
push
test
roll
mov
adc
add
push
es
pop
inc
xchg
sub
jns
in
jg
inc
iret
ss
jge
adc
sub
pop
cmpsl
jp
in
or
dec
cmp
xchg
out
push
fcmovbe
mov
mov
lods
pop
mov
xor
out
test
jne
jnp
shll
frstor
cmpsb
cmp
inc
xor
pusha
sbb
xor
arpl
inc
mov
movsb
sub
jb
in
pop
xlat
xchg
pop
cmpsl
outsb
jbe
cmp
xchg
or
sub
pop
jbe
jmp
addr16
loope
mov
into
bound
jp
pop
xor
cs
fsubl
repz
test
xchg
mov
xor
loop
hlt
xchg
sbb
fdivrl
loop
pop
xor
sbb
mov
pop
pop
frstor
xchg
fadds
aam
int3
int3
lea
lods
dec
jp
scas
lahf
or
add
std
sbb
stc
cld
or
adcb
add
std
aad
dec
jecxz
icebp
cmp
dec
stos
xor
mov
cmpsb
mov
je
test
movsb
lret
adc
cmp
mov
add
push
xor
and
jge
leave
icebp
pop
push
mov
jne
xor
arpl
jg
pop
shrb
jmp
sub
pushw
push
xchg
jns
test
int3
dec
push
push
mov
out
mov
mov
lods
pop
push
mov
jle
push
movsl
pop
rcl
popa
fsubrl
sti
lahf
psubq
addr16
mov
mov
sbb
lret
cmp
cmp
test
sub
xchg
or
sti
mov
mov
push
out
jl
rorb
lods
out
sbb
inc
imul
cli
xchg
out
loopne
imul
and
sub
pop
cs
push
outsw
cmc
icebp
loope,pn
gs
sbbb
cmpsb
pop
mov
negl
adc
pop
xchg
cmpsb
sub
sub
add
add
std
cmpsl
movsb
adc
iret
arpl
xchg
push
mov
cld
in
mov
xchg
sub
out
jle
clc
iret
and
fists
imul
or
lods
push
adc
inc
pop
jmp
cmpsl
in
mov
sarb
and
leave
cmp
cld
fisttps
mov
subb
cld
leave
stos
push
shl
mov
jbe
icebp
push
imul
lds
cmc
test
arpl
repz
fiadds
dec
inc
jge
push
push
mov
push
test
or
push
test
mov
push
pop
add
mov
in
ret
cs
adc
iret
push
out
rclb
cmp
add
ds
in
and
lea
push
ja
lcall
test
jbe
fbld
pop
cmp
pop
jmp
mov
and
cmc
sbb
sbb
add
mov
dec
pushl
push
dec
stc
repz
add
add
jae
cmpsb
pop
push
rolb
aaa
add
ficoms
scas
mov
mov
adc
daa
pusha
or
mov
jns
xchg
push
sub
iret
mov
pop
fimull
rorl
adc
xchg
or
aad
mov
outsl
test
daa
scas
mov
pop
adc
inc
test
push
or
or
cmp
jo
lea
jo
inc
or
jne
imul
ljmp
sbb
lods
mov
test
mov
pop
lret
fadds
lret
or
push
fidivrs
jb
push
bound
mov
sub
xchg
mov
outsl
andl
sbb
inc
adc
inc
jle
and
mov
add
lret
push
lods
bound
jp
mov
sub
mov
gs
aam
xor
pop
add
add
inc
ja
pop
aas
dec
push
out
jmp
add
test
icebp
dec
pop
xor
pop
test
mov
out
cmc
pop
xchg
cmc
iret
lret
push
outsl
addr16
cmc
cmp
jp
sarb
je
pop
repz
test
fs
sub
xor
repz
test
int3
xchg
and
int
sub
cmp
int3
nop
data16
xchg
add
mov
sbb
sbb
mov
fdivl
stc
xchg
xor
jmp
aas
xor
jbe
test
repz
mov
dec
or
push
inc
lea
fidivrs
imull
xor
repnz
test
and
or
jmp
jno
xor
dec
mov
dec
jno
inc
fwait
xchg
sbb
cld
xchg
rolb
mov
clc
repnz
gs
or
inc
mov
push
imul
pop
inc
shll
push
loopne
cld
enter
xchg
xchg
cmpl
xchg
inc
pop
repz
mov
jbe
out
mov
mov
dec
add
add
xchg
jae
ja
div
mov
push
pop
stos
cmp
add
add
push
sbb
inc
mov
int3
sbb
popa
popf
test
or
xchg
push
call
jbe
adc
mov
add
pop
mov
outsl
jecxz
bound
mov
gs
scas
jnp
mov
shlb
push
pop
mov
icebp
jg
dec
inc
je
cmpb
nop
add
cli
mov
jne
mov
inc
popa
scas
mov
cltd
movsl
dec
and
out
sbb
mov
es
popa
movsl
ljmp
inc
in
pop
mov
cs
or
add
inc
hlt
xor
sbb
ja
sti
jecxz
cmp
cmpsl
mov
and
sub
mov
sbb
jbe
mov
mov
inc
sarl
popf
or
push
movsb
fstpl
icebp
cmc
fistps
nop
loop
xor
cwtl
insl
mov
sbb
sub
sub
gs
push
rol
xchg
in
lods
imul
xchg
mov
xchg
push
add
add
cli
std
jg
push
pushf
dec
inc
nop
call
add
scas
push
mov
mov
in
push
cwtl
cld
inc
or
push
cmp
daa
stc
mov
add
push
inc
push
push
jecxz
pop
sti
daa
jns
ss
dec
push
jns
rorb
ds
ja,pn
xchg
dec
or
mov
std
movsb
xlat
xchg
mov
dec
pop
adc
lcall
dec
pop
outsb
fisttpll
mov
mov
xor
push
add
insl
fistl
imul
sbb
inc
test
sub
inc
rclb
incl
dec
push
mov
cmp
ret
imul
pushf
mov
out
outsl
scas
dec
add
fadds
mov
out
lcall
or
in
sub
in
pop
pop
add
enter
bswap
xor
or
cli
outsb
lret
push
loopne
fnstsw
adc
adc
fsubr
imul
inc
stos
pop
xorb
xorb
lret
jbe
jo
mov
add
jmp
testl
incl
sbb
inc
das
mov
add
pop
mov
sub
adc
aaa
aam
or
inc
cmp
mov
imul
xor
pop
xor
jb
movsl
add
popa
fcoms
and
daa
clc
divl
leave
jle
pop
scas
lock
mov
pop
sbb
scas
jbe
shlb
push
pop
mov
inc
lcall
jns
pusha
xlat
push
inc
icebp
ficoml
mov
cmpsb
sub
fdiv
xchg
sbb
jb
cmpsl
je
js
jae
and
shll
xor
rcl
mov
shll
dec
mov
cmpsb
iret
push
push
test
idiv
pusha
push
and
movsl
pushf
mov
xchg
and
push
mov
lcall
sbb
inc
mov
push
cltd
xor
addr16
sub
ja
mov
add
xor
mov
adc
rcll
dec
test
cs
add
add
es
jg
pop
or
xor
js
dec
sbb
add
xor
das
scas
cmp
adc
ret
es
in
fs
sub
inc
test
jmp
sbb
xor
call
js
jp
sub
push
sbb
push
pop
pop
je
mov
out
jno
jnp
jno
pop
push
mov
jo
mov
rolb
pop
jb
sbb
lret
mov
xor
xchg
jl
scas
pusha
pushf
test
sbbl
add
sbb
jmp
and
rclb
mov
dec
pop
adc
cwtl
sbb
xor
ret
xchg
sub
xor
int3
cli
sahf
and
loop
stc
lods
xchg
push
dec
lods
ss
lahf
and
mov
mov
jo
inc
stos
fwait
cwtl
xor
xsavec
or
out
add
out
adc
pop
mov
add
push
clc
or
dec
push
cmp
sbb
add
int3
ja
dec
daa
cmp
jb
push
inc
and
ficoml
stos
lret
ror
sbb
cltd
xchg
lea
jno
insb
fs
cmpb
mov
imul
loope
movsl
leave
add
cmp
ret
dec
jnp
mov
decl
bnd
mov
push
cmp
add
cmova
push
cmp
adc
inc
outsb
add
gs
lods
push
dec
mov
xor
pusha
push
inc
pop
adc
imul
jo,pt
sub
pop
cmc
mov
fadd
and
call
jecxz
ja
adc
mov
test
stos
decb
mov
decl
stos
mov
icebp
je
push
out
dec
rcrl
pop
dec
xlat
jne
push
stc
sub
fwait
rcll
jbe
test
or
dec
sub
dec
mov
imul
or
je
sub
gs
mov
add
add
stc
lods
xor
mov
dec
repz
push
add
add
movsb
pop
inc
jg
nop
test
add
push
repz
jmp
push
adc
mov
mov
iret
out
mov
hlt
pop
scas
incb
push
test
mov
jb
push
lret
out
popa
enter
jae
dec
aam
dec
add
fiadds
xor
hlt
hlt
repnz
sti
pop
ret
outsb
data16
repnz
push
push
xor
jo
lret
test
cmp
out
shr
cmc
push
mov
dec
in
pop
sub
stc
lcall
mov
fs
repz
test
imul
ja
cld
mov
pop
lock
mov
fs
sbb
in
mov
sub
jb
adc
out
jae
ret
adc
sub
out
jg
push
jg
hlt
cmovae
pop
sarl
mov
loop
sub
sub
leave
das
dec
dec
cwtl
movsl
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
adc
in
pusha
pop
gs
cs
lret
cmp
or
push
adc
nop
pop
jge
sub
and
ret
mov
adc
mov
hlt
or
mov
push
je
lea
push
out
cmp
cmpsl
fnsave
sbb
lahf
rcrb
jno
adc
mov
lcall
icebp
hlt
xor
lret
push
dec
out
push
mov
bound
mov
dec
ljmp
outsl
mov
clc
mov
sub
push
dec
mov
das
mov
mov
subb
aas
inc
jle
fsubrs
jnp
sub
cmp
repz
scas
out
stos
mov
cmp
mov
add
lds
sbb
cmp
data16
icebp
add
inc
sub
stos
test
add
in
out
stos
jge
or
sub
mov
and
add
aam
scas
mov
inc
add
mov
mov
xor
ror
mov
cltd
mov
adc
ficoms
xchg
outsl
and
sbb
dec
int
fistpl
lret
mov
mov
mov
loopne
call
mov
xor
xor
fstpl
sub
js
test
sahf
jnp
inc
jl
xlat
lods
test
adc
or
add
xchg
pop
popf
ss
cmp
lods
xor
adc
arpl
or
inc
pop
call
dec
or
push
enter
call
pop
enter
int
sub
and
and
inc
xorb
sbb
jp
rcl
test
inc
xchg
push
test
push
enter
jne
ja
push
mov
adc
rcll
inc
cld
sbb
and
in
xchg
adc
loopne
fisubl
push
cld
and
test
out
add
add
sbb
out
xchg
iret
push
aas
lret
punpckldq
add
add
jle
mov
inc
sub
mov
daa
pop
in
out
movsl
data16
ds
inc
push
mov
arpl
cmp
pop
dec
cmpsl
ljmp
out
inc
push
cmpb
in
mov
mov
pop
nop
push
insl
mov
xchg
cmpsb
jno
xchg
inc
xor
clc
pusha
mov
pop
lods
mov
pop
sub
addb
and
scas
dec
pop
jns
adc
andb
fidivrl
dec
mov
pop
inc
adc
dec
push
dec
shl
sbb
adc
inc
in
add
adc
pushf
jecxz
cmp
mov
xchg
adcl
add
inc
sub
push
inc
loop
add
call
pop
iret
jecxz
js
adcb
jecxz
or
push
aam
mov
mov
addr16
pop
jne
cmc
mov
lret
pop
push
inc
test
or
lret
cld
loopne
cmp
xchg
cs
je
add
add
in
add
cmp
out
loope
jns
sub
add
add
ret
lret
lret
fsubl
in
das
stos
jae
es
lcall
arpl
ret
sahf
pop
pop
mov
lret
cmp
xor
iret
mov
mov
pop
cmp
daa
rcl
loopne
fistpl
cmp
iret
mov
stos
xchg
cwtl
mov
jmp
push
xchg
jo
int
cmp
out
das
and
stos
jg
or
lret
fbld
jge
int3
fwait
es
fidivrs
mov
dec
movsb
mov
fdivl
enter
sbb
and
addb
ficoms
ja
or
cmp
test
insl
mov
xor
clc
mov
loope
mov
sbb
mov
out
sti
dec
inc
xchg
pop
test
push
inc
add
cli
adc
mov
xchg
mov
pop
and
lahf
aad
ja
pop
push
mov
popa
jne
cltd
mov
jae
push
out
mov
ds
fidivrl
mov
add
lea
add
test
sbb
sti
push
mov
pop
repz
insb
and
add
sub
in
xchg
mov
ljmp
notb
xor
and
push
cmp
mov
sub
das
sub
jb
jb
arpl
stc
mov
dec
insl
xchg
test
pop
and
divl
repz
pushf
fs
mov
jbe
push
mov
push
or
mov
pop
movsb
lret
inc
sti
scas
and
jl
lods
jnp
mov
outsl
pop
movsb
mov
popf
pop
or
inc
sub
mov
dec
fcoms
dec
jb
inc
xchg
mov
jbe
shrl
dec
rorb
push
mov
cmpsl
cmpsl
dec
lea
test
push
lods
sub
mov
xor
push
mov
sbb
cmc
push
jns
push
xorb
clc
adc
lahf
nop
test
or
stos
jne
test
outsb
out
and
add
test
aas
int
aaa
addl
add
jg
cld
ret
add
and
add
xchg
out
ja
push
icebp
sub
inc
ds
lret
inc
and
sub
dec
shrb
add
in
scas
insb
cmpsb
popa
lock
out
int3
push
xor
add
dec
jo
loope
repnz
cmp
mov
jmp
push
pop
js
pop
mov
jbe,pn
inc
loopne
mov
mov
cmp
in
xchg
sti
rorb
lret
push
or
dec
lea
cmp
aas
lods
orl
or
cmp
fbstp
stos
out
jbe
xchg
out
pusha
stc
into
popl
push
gs
cmp
inc
ds
push
and
imul
sub
lret
cmpsl
int
dec
cli
add
gs
jecxz
imul
mov
pop
mov
sub
xlat
sub
jge
mov
fidivl
pop
add
add
ret
mov
iret
mov
or
jg
and
add
sub
xor
ret
ret
xor
icebp
mov
jne
out
pop
mov
mov
scas
adc
pop
sysenter
in
adc
clc
movsb
fcoml
insb
ljmp
int
pop
jbe
pop
mov
push
aas
lret
xchg
insl
jg
mov
cmpsl
hlt
jb
fidivs
subb
es
push
sub
jg
or
pop
popf
mov
daa
call
inc
push
out
mov
aad
mov
inc
testb
ret
out
pop
push
xchg
jge
daa
pop
incb
or
cs
xor
faddl
inc
or
inc
aad
add
fwait
mov
dec
mov
xchg
sub
adc
mov
lret
cmpb
insb
xchg
arpl
xlat
and
clc
fiaddl
clc
push
mov
test
loope
cmp
cmp
ret
dec
call
pop
inc
leave
xor
sbb
arpl
add
or
jg
arpl
fcompl
cmp
add
add
cmc
dec
pop
ds
repnz
mov
mov
push
adc
add
mov
cmp
push
mov
imul
loop
jns
push
clc
and
push
pop
add
jmp
adc
jnp
mov
mov
ror
mov
clc
jno
mov
push
xlat
cmovl
movsb
push
aaa
push
mov
aas
aam
in
mov
in
cmp
stc
cwtl
add
or
icebp
and
and
add
lods
enter
sbb
jmp
inc
jp
iret
sbb
call
in
lods
inc
sub
pop
cmp
movsb
sti
jo
sbb
fnsave
popa
inc
repz
outsb
adc
shrl
and
nop
es
outsl
mov
movsb
cli
jg
jbe
sub
pop
and
stc
push
pop
iret
scas
test
aad
in
popf
add
mov
push
out
cmc
sbb
mov
shrb
add
shlb
cli
clc
cli
clc
sarb
sti
mov
or
add
mov
pshufw
arpl
fwait
dec
fs
popa
fisttpl
addl
mov
cwtl
push
pusha
add
pushf
mov
push
in
sti
mov
in
cmpsl
aas
lock
arpl
jl
xchg
mov
out
pop
or
pushf
aam
jae
inc
sub
int
pushf
cmp
and
out
iret
pop
pop
mov
adc
int3
fsubrs
pop
pop
add
adc
jb
out
pop
js
push
add
mov
adc
jb
ljmp
fdivrs
roll
pop
push
cwtl
pushf
inc
xlat
ljmp
inc
out
or
pop
int
jl
xor
cmp
sti
pop
mov
push
dec
outsb
and
xchg
jbe
mov
mov
jmp
das
sub
xor
jmp
into
dec
clc
jo
pop
mov
push
inc
dec
sbb
jnp
dec
aaa
mov
sub
repnz
jp
shrb
in
movsb
mull
add
add
jnp
out
mov
mov
add
in
xchg
repnz
fstl
lods
add
push
xlat
xlat
outsl
mov
mov
inc
mov
adc
aaa
mov
ds
jae
pusha
push
inc
sub
es
ja
push
sbb
dec
or
sub
stos
ret
inc
fmul
xchg
adc
test
push
cmp
fwait
pop
popa
add
stc
int3
lcall
pop
adc
imul
mov
in
dec
mov
out
dec
adc
sub
push
mov
mov
sub
gs
mov
dec
out
adc
lahf
ljmp
out
aam
pop
popa
sbb
iret
and
icebp
push
enter
enter
adc
mov
jns
mov
add
mov
pop
add
sbb
dec
sub
out
adc
pop
jge
inc
or
inc
aad
jo
in
pop
dec
mov
inc
jecxz
dec
in
aad
out
fcompl
aas
data16
add
fs
es
data16
insb
daa
mov
fcmovnbe
call
add
sbb
loope
jp
jo
rolb
mov
pushf
cmp
push
sahf
movsl
test
push
daa
aam
cmp
mov
data16
xchg
mov
test
into
pop
cmc
mov
mov
mov
mov
mov
add
lea
stos
movsl
sahf
daa
jo
std
into
xchg
mov
hlt
adc
ljmp
xchg
mov
in
and
sbbb
dec
jae
out
sub
sbb
mov
cmc
mov
jo
aad
stc
leavew
sbb
mov
insb
and
les
or
rorl
or
ret
lods
clc
lock
loop
mov
out
xchg
push
out
pop
cmpsl
pop
sahf
clc
icebp
pusha
repnz
insl
and
mov
sbb
jp
dec
roll
pop
cld
aam
inc
xor
push
pop
xlat
jno
outsl
loopne
mov
cli
bound
repnz
loop
call
add
push
int3
sub
call
clc
mov
fldcw
add
xchg
add
sbb
mov
imul
loopne
add
pop
pop
lea
icebp
sub
adc
pop
add
xor
push
imul
ret
cmpsb
sub
add
test
stc
shlb
dec
outsb
jge
xor
jge
xor
mov
mov
adc
sti
int
insl
mov
mov
cmp
push
pop
lock
mov
mov
cmp
mov
mov
xchg
xor
roll
loope
mov
sbbl
cmpsb
js
sti
dec
mov
out
jl
sbb
inc
out
scas
sub
push
mov
xchg
mov
ret
test
test
mov
jno
cmp
int
aad
adc
pusha
jmp
lret
fadd
adc
out
inc
and
inc
and
shl
adc
mov
stos
xor
push
hlt
add
testb
add
and
push
sti
cmpsl
enter
fstp
jns
xchg
sub
add
dec
xchg
lods
jge
mov
or
sar
dec
or
and
aam
cli
and
test
jmp
adc
loopne
repz
js
jmp
lret
negl
cmc
or
inc
lods
fs
lcall
inc
dec
inc
mov
dec
test
sub
repz
sbb
dec
xchg
mov
dec
and
fiaddl
sbb
mov
imul
in
repnz
cmc
ljmp
xor
adc
or
insb
or
int3
popl
sub
shlb
arpl
mov
sahf
popa
push
ud1
filds
sbbl
mov
dec
outsb
jmp
cmp
mov
cmp
pop
sub
sbb
sub
loope
call
cs
jp
movsl
add
pop
aas
inc
loope
push
ljmp
add
add
mov
std
mov
dec
push
repnz
mov
sub
add
or
xchg
xchg
xchg
adc
adc
xchg
pushf
loope
inc
scas
int3
cli
mov
test
cmp
out
cld
sar
imul
xchg
out
push
xchg
les
je
int
push
cmp
out
shlb
sti
jl
sbb
rorl
fdivp
mov
pop
mov
in
lahf
dec
aam
xor
xor
mov
jl
fisubrs
cld
cmc
insl
out
pop
cmp
imul
mov
test
call
xchg
pop
xor
cld
ljmp
repnz
popf
mov
lods
out
jge
int3
jle
mov
fldcw
call
cmc
in
mov
out
es
daa
and
into
push
sub
and
adc
cld
pop
sbb
stos
xchg
xor
push
mov
shll
mov
add
leave
or
or
or
cltd
sbb
andb
pop
push
mov
add
lds
xchg
and
inc
and
lcall
add
add
mov
stc
dec
cmpl
fisttpl
sub
hlt
inc
xchg
mov
jns
sub
xor
lret
mov
mov
pop
fbstp
mov
jge
sub
mov
cmc
sbb
cli
pop
xlat
cltd
les
dec
mov
and
jl
das
es
lret
bnd
outsb
lahf
push
sub
mov
ficoms
scas
inc
into
xchg
ja
repz
fptan
loop
hlt
jb
mov
fwait
mov
and
lea
adc
notb
fs
daa
xchg
test
xor
mov
xlat
xor
insl
or
xorb
push
xor
dec
dec
add
mov
lret
shlb
fcomp
or
or
mov
jns
inc
adc
adc
lock
add
insl
enter
add
add
add
xchg
ficomps
cmp
lahf
gs
pop
push
mov
add
add
adcb
cmovge
cltd
inc
sbb
cltd
aam
enter
sahf
push
jmp
xlat
das
aad
out
and
and
scas
push
cmpsl
out
adc
xchg
pop
inc
stos
lret
mov
lds
roll
push
push
mov
mov
pop
sbb
adcb
mov
outsl
std
fstpt
outsb
andl
dec
test
adc
jb
xchg
imul
mov
push
fwait
push
repz
mov
sar
cmp
negb
sbb
sbb
mov
lods
loopne
xchg
push
popf
stos
and
mov
imul
xchg
push
shrl
add
ficomps
dec
sub
pop
sub
jbe
adc
hlt
cmp
or
pop
mov
mov
add
arpl
ja
sub
add
das
add
add
dec
subb
inc
push
gs
in
or
mov
cmp
scas
jmp
sub
push
mov
push
outsb
fisttpll
pop
movsl
or
mov
icebp
sbb
and
sbb
pop
jmp
cwtl
dec
add
inc
cmc
rclb
pop
xchg
mov
xor
push
test
leave
addr16
nop
es
aaa
outsb
add
adc
cmp
add
sbb
out
fcmovbe
arpl
inc
push
xchg
cmp
dec
test
and
mov
aad
or
lret
es
mov
and
pop
sbb
insb
negl
xchg
lret
in
cld
cmp
push
jae
jo
and
jmp
xchg
jno
iret
test
xchg
outsl
fwait
iret
adc
outsb
shrl
sbbl
addr16
inc
push
jle
test
mov
in
aam
jbe
loop
popf
and
mov
mov
xchg
add
add
lret
mov
or
xor
add
add
cmp
aam
pusha
into
sbb
xor
sub
fbld
daa
ret
and
rcr
push
jb
mov
das
mov
mov
fwait
jecxz
repz
movsb
lods
lods
mov
js
mov
add
scas
ljmp
mov
xor
insl
test
mov
std
or
push
in
fbld
jae
mov
aad
out
mov
adc
jbe
sbb
or
xor
or
pop
and
lds
lea
fcmove
cltd
jmp
jo
pop
add
dec
loope
push
and
and
adc
shlb
icebp
int
sbb
cltd
push
jg,pt
loope
xchg
inc
aas
xchg
insl
in
pushf
cmc
adc
and
insb
or
test
lret
stos
push
or
add
or
lds
fcmove
inc
mov
add
add
sti
pop
jge
neg
hlt
add
or
add
add
jge
icebp
mulb
pop
xchg
inc
dec
xor
dec
popa
sub
cmp
adc
mov
push
pop
addr16
cmp
and
daa
sbb
sub
sbb
int3
mov
test
ss
jl
lea
imul
xchg
mov
out
mov
mov
xchg
dec
bound
aam
jbe
cwtl
xor
in
jno
pop
popa
jg
test
sub
and
add
jle
dec
jnp
lret
mov
push
pop
jbe
mov
das
sub
icebp
aad
call
mov
mov
jne
push
mov
sbb
add
mov
test
push
push
xchg
jbe
mov
jns
cld
sarb
cs
xchg
in
iret
xchg
push
aas
mov
and
push
in
mov
and
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
jp
cmp
mov
add
add
jge
add
xchg
mov
in
push
cmp
leave
je
jmp
pop
mov
pop
inc
int
testb
jle
push
scas
lea
lret
das
add
push
adc
dec
mov
fdivrl
rolb
and
data16
sub
jmp
push
push
stc
sarl
jle
sbb
push
push
push
test
js
lahf
iret
mov
ret
jo
push
pop
insl
cld
out
repz
out
ljmp
sbb
pop
out
mov
add
mov
mov
push
adc
scas
inc
pop
sbb
lds
xchg
mov
inc
stc
test
inc
imul
inc
out
loopne
cmp
xchg
lret
cmp
adc
dec
jp
jae
sub
test
pusha
jne
iret
add
adc
add
jp
jnp
sti
xchg
jle
jp
lods
xor
out
cld
mov
add
add
jo
sub
xor
xor
xor
mov
fwait
sub
jno
cli
xchg
push
jmp
push
push
repz
sbbl
pop
es
sbb
lods
dec
sub
dec
in
sub
pop
shrb
arpl
xchg
ds
loope
ds
sub
jle
sbb
mov
jnp
jp
loopne
hlt
mov
pop
es
sarl
and
std
add
ret
fwait
dec
into
lret
push
xchg
pop
lahf
mov
pusha
js
lds
adc
popa
call
push
imul
and
cwtl
lods
mov
pop
js
stc
arpl
inc
nop
and
xchg
inc
pop
out
cmpsl
sbb
xchg
sbb
in
ret
popa
aas
pop
jno
push
fwait
lahf
es
popf
fwait
adc
sub
add
push
shlb
inc
and
adc
in
cmp
add
mov
push
sti
decb
mov
movsb
shll
add
mov
mov
test
nop
loop
or
jecxz
divl
idivb
push
pop
mov
lcall
stc
dec
xchg
enter
jl
popf
push
fcmovne
mov
aad
pop
pusha
push
add
or
out
cmpsl
jmp
fiaddl
out
rol
inc
fdivl
into
lods
pop
fbstp
loope
sub
xchg
mov
movaps
mov
loope
jle
icebp
dec
jne
nop
fnsave
imul
daa
aad
push
movsb
or
xchg
popf
movsb
in
enter
stos
sub
mov
sbb
dec
mov
bound
mov
xor
fisttps
shl
jae
jbe
xchg
data16
ds
inc
push
pop
cmp
shrl
ds
mov
dec
sub
fucompp
mov
pop
lods
je
or
xchg
mov
cmp
add
push
ret
cmp
xor
hlt
and
add
add
stc
testb
test
idivb
test
dec
mov
aad
push
push
xchg
popa
mov
push
ljmp
jne
mov
jnp
ja
scas
and
xor
pusha
cmp
mov
xchg
jno
inc
fsubr
lcall
xor
into
stos
jbe
xchg
pop
mulb
mov
sbb
dec
pop
in
test
insl
cmc
add
or
xor
ret
or
imul
cmp
cmp
into
mov
xchg
jne
arpl
jl
out
adc
clc
dec
sub
push
jmp
scas
or
shr
sub
xlat
imulb
andl
shl
and
mov
fwait
in
push
xor
ret
mov
data16
inc
movsl
pop
fiadds
sub
jbe
and
cld
loop
dec
xchg
push
sub
pusha
jno
bound
xlat
adc
clc
cmp
adc
movsb
in
in
add
add
cmp
jge
stos
lea
shrb
jno
lret
add
add
sub
daa
and
insb
push
ja
mov
lcall
xor
jg
lock
mov
mov
push
outsl
sti
mov
sbb
ret
dec
ss
add
pop
xor
pop
sahf
int3
movsl
push
popf
xchg
adc
ret
dec
xchg
pop
mov
push
enter
clc
pop
ret
int
jne
mov
xlat
push
push
and
nop
xor
rcrl
mov
sbb
andl
inc
jecxz
stos
xchg
add
test
imul
xor
fwait
push
adc
push
or
out
and
pop
ret
cmp
int3
ds
popa
mov
add
mov
cwtl
sub
orb
jns
loope
or
lods
xor
or
addr16
jecxz
imul
jle
neg
add
popf
repnz
bound
lret
dec
aad
xchg
adc
out
add
add
rclb
nop
lcall
aaa
add
add
fistps
mov
outsb
inc
push
icebp
dec
imul
mov
xchg
cltd
jle
hlt
or
jns
inc
fsts
lahf
sub
sub
inc
lods
xor
arpl
xchg
pop
mov
mov
sbb
jmp
lds
inc
dec
pop
into
or
adc
jno
xor
mov
fisttpll
dec
cld
dec
scas
jb
adc
scas
pop
xchg
out
or
enter
xorb
in
ss
daa
into
add
aas
mov
call
mov
fs
xlat
inc
mov
xor
jge
repz
cmp
je
xor
ficompl
int
les
xchg
jae
mov
xchg
ljmp
sbb
xchg
lock
add
cli
imul
shrb
inc
scas
push
xorb
stos
aad
in
dec
fs
add
add
jl
dec
jbe
idivl
or
jo
mov
cmp
add
sahf
mov
cwtl
lods
mov
loopne
loop
mov
scas
pop
out
lret
fucom
ret
jae
sub
test
stos
pop
movsl
mov
sub
shll
imul
jecxz
xchg
fsubrl
pop
sbb
cmp
mov
hlt
mov
inc
sbb
incl
leave
and
jle
mov
into
iret
scas
pop
in
rol
lods
xchg
add
ret
jl
shll
mov
lret
mov
pusha
mov
int
movsl
dec
scas
icebp
stos
leave
jb
cwtl
inc
jle
mov
jl
jns
dec
std
fmull
mov
ja
mov
sub
add
dec
leave
mov
xor
lret
int3
cli
fildl
cmpsb
sarl
cwtl
mov
adc
jns
add
sahf
xchg
xor
inc
xor
sarl
mov
add
and
outsb
sub
stos
fs
jmp
leave
aas
jl
jne
fidivrl
add
add
jge
test
movsl
adc
cltd
ficompl
mov
xchg
jmp
inc
scas
fcomps
add
mov
mov
test
lret
push
jno
mov
mov
xor
fsubrs
pop
adc
incb
popf
aas
adc
sub
or
adc
movsb
lahf
ja
jmp
sarl
aas
and
xor
xchg
xchg
and
repnz
push
scas
pop
add
mov
jae
popf
nop
es
cli
add
and
cwtl
inc
aad
xchg
inc
sub
sub
add
xorl
out
enter
and
fnstenv
pop
dec
lods
sub
ljmp
mov
mov
xchg
out
xor
ret
mov
adc
xchg
std
cmp
pop
inc
push
push
je
jae
mov
dec
mov
lahf
lret
dec
mov
pop
push
test
mov
lea
add
insb
pop
pushf
scas
fistpll
outsl
gs
stos
mov
cmp
add
sarl
dec
mul
mov
mov
mov
test
fistl
bound
pop
outsb
fs
cli
jmp
add
ljmp
push
dec
and
jae
divb
cs
mov
push
add
mov
ret
push
jg
movb
push
pop
mov
mov
fistpll
insb
cmp
subl
jae
push
std
out
mov
rcrl
into
mov
xchg
jl
push
xor
icebp
sbb
stos
cmp
mov
cwtl
sub
fs
enter
inc
imul
cmp
push
mov
mov
sbb
icebp
jp
movb
push
subl
add
or
sbb
mov
pusha
rcrl
pop
xchg
adc
cmpl
xor
sub
lock
cmp
inc
add
xchg
and
cmp
or
add
cmp
movsb
push
sbb
es
js
cmp
add
daa
and
subb
adc
xchg
loope
cmp
movsb
subb
sub
clc
or
jg
xor
or
jp
lret
mov
or
xchg
mov
mov
sbb
popa
sar
cmp
mov
mov
rcl
xor
cmpsb
mov
and
scas
pop
xchg
pusha
inc
in
clc
xchg
push
jnp
movsl
xchg
sub
shrl
insb
xor
xor
aad
dec
cmp
xlat
fcmovbe
mov
imul
sbb
insl
ja
lods
xchg
into
pop
sbb
mov
push
xor
push
fnstenv
arpl
faddl
fisttpll
pop
push
sbbl
fcomps
aad
jecxz
sbb
ret
aad
inc
test
ss
sbb
add
cmp
loopne
inc
js
mov
mov
int
inc
cltd
xor
test
lock
jge
xor
push
andb
xor
add
add
adc
jmp
jle
fucomip
cmp
add
or
mov
sti
mov
cltd
aam
mov
or
lea
and
jg
jae
mov
push
je
popa
lret
cs
adc
sbb
lret
imul
lret
sub
cmp
mov
popf
mov
or
fadd
aas
push
ficoml
mov
pusha
pop
mov
leave
in
pop
or
or
das
jp
adc
xchg
add
data16
dec
adc
arpl
ret
loop
jp
add
xchg
xchg
jg
fstpl
shrl
stos
ror
movsl
sbbb
mov
insl
jg
and
stos
jo
pop
movsl
bound
push
inc
adc
test
or
adc
dec
bound
lods
xorb
int
ffreep
imul
adc
mov
xorb
xchg
inc
or
mov
jmp
dec
xchg
faddl
add
and
das
cmp
lods
repz
mov
in
lret
out
cmp
add
or
clc
dec
xor
lret
scas
lds
sarb
xchg
jns
sbb
mov
inc
bound
hlt
int
inc
push
mov
aaa
dec
cmc
adc
mov
mov
xor
jmp
dec
cmpl
push
xchg
cltd
mov
rdtsc
lcall
xchg
lea
or
test
imul
lahf
mov
pop
mov
xor
add
jno
dec
cmp
cmp
repnz
lcall
xor
jbe
mov
adc
inc
aam
pushf
sub
pop
mov
jb
cmp
int
scas
std
mov
mov
dec
test
add
cwtl
inc
jbe
xor
jg
aaa
insb
push
cmp
jo
inc
cmp
ds
adc
add
add
mull
adc
outsb
imul
sub
shll
orb
jnp
roll
add
aas
daa
push
cld
push
std
jmp
dec
push
loopne
repz
add
push
movsb
aad
pop
jg
cmp
xor
pop
pop
xchg
cmp
pop
or
sub
repnz
orl
dec
jmp
xchg
fisttpl
and
push
ja
in
roll
js
inc
xchg
dec
stc
out
mov
xchg
lret
fcmovne
mov
mov
scas
dec
aaa
mov
dec
adc
cwtl
fmuls
sahf
daa
and
rcr
push
leave
sbb
inc
mov
pop
cmp
adc
mov
fisttpl
je
aad
cwtl
adc
xor
mov
dec
push
jp
fwait
cmp
divl
jb
out
call
mov
aam
pop
jp
push
out
rorb
mov
and
pop
mov
stos
aam
and
cmp
es
xor
jle
sbb
nop
icebp
fnstenv
addr16
push
adc
xchg
in
faddl
sub
rorl
mov
shrl
cltd
or
add
add
add
sbb
dec
push
out
aad
test
das
clc
aas
add
add
xor
ja
xor
out
out
hlt
add
xor
or
repz
sbb
xchg
leave
es
xor
dec
adc
shlb
addr16
sbb
add
sub
xchg
xlat
push
ficompl
dec
imul
popf
xchg
jl
push
hlt
scas
pusha
mov
mov
fidivl
in
icebp
in
movsb
jo
xchg
push
hlt
in
add
jb
dec
dec
jae
xor
jg
mov
fistpll
mov
mov
mov
pop
outsl
and
aas
xchg
add
inc
repz
jp
mov
inc
xchg
jl
xor
or
rolb
test
jl
lahf
aam
cmpsb
scas
mov
jmp
cmp
or
jg
xor
frstor
int
mov
test
push
dec
or
gs
push
enter
int3
and
testl
mov
dec
and
add
idivl
or
pop
pushf
std
inc
add
add
imul
das
pop
aas
dec
outsb
push
inc
lret
mull
leavew
mov
add
cli
imul
shlb
add
test
lds
xor
mov
push
cmp
out
add
mov
icebp
lods
inc
cmpsb
and
bound
cmp
js
clc
lret
in
dec
push
test
jno
inc
xchg
xchg
std
aas
aad
out
and
mov
and
lcall
push
insl
out
lcall
pushw
push
mov
push
pusha
cmpsl
push
fsubp
cmp
jnp
dec
out
negb
mov
xchg
sbb
dec
rep
jbe
sti
dec
icebp
loop
sti
sbb
inc
out
insl
in
loope
mov
leave
cmp
and
notb
aad
xchg
into
mov
jo
sbb
aas
ret
dec
mov
testl
fimull
mov
cmp
mov
js
and
xor
negl
adc
jnp
lea
add
mov
ja
jg
xchg
orl
xchg
add
add
pusha
add
mov
call
loopne
mov
leave
lods
sub
cld
movsl
adc
dec
add
cli
addr16
out
xchg
push
std
cmp
dec
ja
sub
pop
mov
cltd
dec
add
push
imul
and
sub
mov
jl
in
ja
inc
fwait
mov
add
xor
dec
sub
and
in
xchg
and
test
jle
sub
bound
aas
into
dec
xlat
out
mov
jae
fcomps
shrl
in
mov
jo
fstl
mov
mov
mov
mov
xor
repz
ret
mov
call
xchg
insb
push
lret
shlb
sti
adc
das
sub
push
jae
adc
cmc
xlat
lret
mov
movsb
sti
pop
cmp
insb
jl
jle
mov
loope
mov
rcrl
xchg
sahf
mov
add
add
push
dec
lret
jmp
imul
aaa
je
push
aaa
ret
add
add
mov
fildll
ja
punpcklwd
fstl
inc
imul
inc
pop
pop
mov
xor
jns
xchg
sub
outsl
dec
add
pop
imul
outsl
mov
adc
sbb
ja
dec
loopne
mov
inc
xor
xchg
gs
add
push
stos
or
jbe
out
add
inc
sahf
push
dec
outsb
mov
cld
xchg
xlat
iret
and
jmp
sbb
fidivs
cmp
cmp
mov
sbb
mov
lret
stos
sti
out
mov
in
dec
mov
pop
outsl
arpl
ficoml
iret
out
pop
jnp,pt
xor
mov
add
sbb
je
xchg
nop
fldt
inc
cwtl
or
add
pop
cmc
shlb
sahf
jno
jo
and
cli
inc
xor
outsl
les
xchg
inc
lahf
int
inc
add
pop
cwtl
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
stos
iret
or
inc
add
add
push
and
sub
mov
mov
add
push
hlt
ret
shll
js
mov
cltd
inc
inc
sar
dec
imull
pop
pop
loop
cmpsl
jmp
cmp
mov
or
jle
mov
mov
fs
inc
cmpsb
test
inc
inc
leave
lret
xchg
loopne
mov
push
xchg
dec
push
xchg
mov
ja
scas
xor
sbb
adc
popa
or
out
cmp
pop
pop
rcrl
int
sub
push
movsb
stos
sbb
jne
cmp
or
movsb
stc
xor
push
xchg
lahf
dec
push
push
out
xor
xchg
in
aam
sbb
loope
mov
and
lock
cmp
pop
and
loop
pop
sub
rolb
shll
fs
dec
popa
adc
out
mov
xor
cli
ret
or
fstpt
adc
ret
mov
add
jns
xor
jg
sub
or
inc
add
add
ficoml
sub
lea
lds
fwait
and
movsb
int3
jns
pop
add
aaa
jae
sbb
and
sbb
imul
cmp
inc
push
repnz
sub
xchg
test
stc
aad
cmpsl
and
xor
lea
clc
insl
or
fcom
sbb
push
lock
xor
dec
mov
pop
loopne
push
mov
insl
sub
sbb
adc
dec
add
je
push
xor
add
out
lret
movsl
ficoml
out
lods
pop
int3
cmc
loopne
dec
pop
adc
cmpsl
add
push
and
push
and
imul
cmp
sbb
enter
lods
scas
in
jge
enter
xchg
in
inc
pop
jge
test
push
fxch
mov
and
scas
ds
test
mov
shrl
data16
jne
sbb
inc
mov
sub
jno
ficompl
inc
lret
jge
aas
sbb
loope
pop
leave
dec
add
add
js
ret
jg
decl
rol
push
push
mov
add
cltd
or
bound
mov
or
ds
push
in
ljmp
scas
dec
nop
jo
ds
xchg
jno
stc
inc
dec
stc
add
xor
scas
ljmp
mov
jge
ficoml
and
mov
or
xor
fcoms
call
rsm
cld
lods
fldcw
bound
xchg
and
loope
xchg
data16
lock
sub
jl
inc
imul
or
fwait
les
pushf
sbb
lods
bound
arpl
adc
test
lods
jae
js
ss
ljmp
out
int3
and
shl
xchg
in
mov
mov
pop
xchg
xchg
sbb
jb
js
cmpsl
add
loope
pop
std
push
lret
repnz
cmp
stos
fiaddl
cs
xchg
xchg
jle
sbb
stos
cmp
xlat
cmp
ljmp
push
add
add
das
mov
out
aad
lret
repz
sbb
add
cmc
mov
mov
adc
fistpl
xchg
jmp
add
pop
cwtl
ds
push
cmp
std
rcrl
fcomp
add
adc
sbb
push
jno
inc
nop
int
call
cwtl
call
cmpl
push
lods
lcall
repnz
fnsave
and
mulb
and
scas
shl
lcall
je
cmp
sub
loope
fldl
fmuls
jbe
jge
jne
cmp
pop
insb
sbb
rorl
and
adc
and
xchg
into
lret
xchg
and
scas
addb
loop
push
rcrl
mov
mov
adc
and
cli
cmpsb
mov
popa
test
adc
add
stos
shll
cmp
mov
push
inc
inc
pop
mov
mov
jno
push
or
lock
add
inc
icebp
hlt
gs
dec
adc
sub
and
add
stos
sbb
leave
xlat
jnp
repnz
int3
aad
sbb
ss
adc
ljmp
mov
xchg
adc
ret
add
jbe
mov
mov
movsl
lea
fdivs
cmp
mov
rcrb
aad
lods
sbb
data16
xor
testb
loope
adcb
test
in
fbstp
ss
sub
mov
or
popa
mov
mov
push
movsl
xor
cwtl
out
enter
into
scas
das
mov
stc
loop
jo
inc
and
and
insl
cmc
mov
imul
es
iret
cmp
testb
cmp
cld
or
adc
xor
sti
mov
xchg
mov
into
mov
push
xchg
lret
js
mov
outsl
pop
add
add
aas
gs
pop
repnz
dec
add
add
mov
orl
lds
mov
mov
xchg
aaa
xchg
jne
or
fnstenv
dec
jbe
repz
mov
pop
cwtl
jbe
lock
movsl
pop
lcall
xor
dec
push
fisubrs
push
movsb
negb
cmp
add
leave
sub
bound
daa
xor
in
mov
outsl
inc
loopne
faddl
push
ja
mov
pop
mov
add
jns
push
inc
or
or
aad
pop
call
cmpsl
mov
lahf
add
mov
push
sarl
hlt
out
cmp
je
les
adc
ja
xor
loope
or
sbb
data16
and
mov
ret
fstpt
out
jle
mov
fistpl
mov
adc
pushf
ss
call
fbld
push
in
enter
add
add
out
fisttpll
lock
add
add
fsubl
clc
push
cld
inc
repz
dec
arpl
sub
jae
iret
push
push
loope
cmp
daa
orl
inc
dec
push
cmpsb
pop
stos
mov
loope
sub
loop
mov
cli
int
add
push
pop
or
cmp
cmp
mov
loope
sub
adc
dec
and
xor
adc
dec
lock
scas
push
xchg
mov
mov
jge
mov
xchg
shl
jg
out
lret
push
imul
push
fldt
push
cmpsl
ljmp
cmp
xchg
and
sbb
mov
and
and
sbb
jno
flds
mov
loopne
mov
push
into
or
lods
or
and
fsubrl
adc
mov
xor
jle
ja
icebp
push
xchg
mov
icebp
inc
jno
jecxz
setg
out
jns
je
nop
add
add
mov
ljmp
add
add
sahf
out
pop
mov
sti
sbb
jge
lods
xchg
cmpb
cmpsb
sti
and
jo
ffreep
repz
cmpsl
fmul
stos
pop
push
xlat
pusha
cmpsl
into
inc
adc
jg
adc
stc
movsl
flds
adc
jae
and
jne
inc
lock
add
push
sub
nop
lret
mov
xlat
push
leave
out
clc
xchg
movsb
stc
sbb
icebp
lret
insb
sbb
pop
xor
push
data16
push
out
sub
addr16
sub
cmc
mov
inc
mov
jmp
scas
xchg
jecxz
ret
fdivr
cltd
cs
lahf
cmc
or
inc
lret
push
daa
dec
inc
jle
jbe
in
loop
mov
pop
pop
scas
jnp
cmp
test
pop
pusha
sti
jp
into
pop
cmp
icebp
jbe
xor
lret
int3
imul
push
mov
push
and
mov
sbb
pop
daa
sub
add
add
jmp
out
aas
jo
sahf
jb
xchg
dec
and
dec
add
add
hlt
testl
fisubrs
xor
pop
mov
clc
sub
add
xchg
shrl
fcoml
cmp
xchg
jno
popa
sub
and
icebp
sbb
and
sbb
pop
and
inc
mov
dec
adc
sbb
stc
and
in
or
mov
jmp
cmp
add
insb
xlat
das
dec
pop
fbld
pop
inc
mov
lods
pop
xor
ficompl
mov
pop
or
cwtl
lds
loope
push
cltd
inc
es
hlt
inc
mov
jbe
ja
movaps
addb
je
cmp
add
movsb
xor
xchg
pop
aas
cld
jb
sbb
add
test
adc
jl
inc
leave
and
out
pushf
imul
pop
mov
nop
cmpsl
xlat
pop
lods
stos
add
mov
cmp
imul
out
mov
mov
or
pusha
cmp
add
cmpsl
add
roll
lret
inc
je
sbb
adc
ret
pop
ret
mov
lret
mov
xor
sbb
gs
sub
and
adcb
lcall
pushf
xor
loop
mov
jmp
movsb
adc
and
sti
loope
push
jle
jo
xlat
stc
xor
out
push
mov
jno
movsl
xchg
dec
loope
sbb
lods
jmp
cmpb
sbb
mov
mov
cmp
mov
out
cli
dec
mov
loopne
sub
testl
add
pushf
jns
lea
jae
xor
ja
pop
clc
ficomps
add
out
cli
test
adc
xchg
add
mov
xchg
idiv
sub
mov
in
xchg
push
add
add
add
add
dec
stc
mov
ljmp
ds
add
add
xchg
subb
sub
jge
repz
bound
pop
iret
rcr
add
adc
jns
int3
or
nop
mov
sub
add
icebp
and
or
popa
fbld
sti
mov
aas
jle
adc
pushl
in
mov
push
in
test
push
pop
scas
and
push
and
inc
fsubp
xchg
xchg
mov
mov
mov
mov
dec
push
out
dec
mov
jno
arpl
mov
dec
lcall
pop
shl
pop
xchg
pop
push
push
mov
or
and
mov
and
inc
mov
xor
aas
sti
test
sub
aad
sarb
outsl
mov
push
sub
dec
push
xchg
add
jg
cld
lcall
cmp
add
add
int
push
push
pop
push
loop
jo
adc
adc
scas
and
push
clc
push
cmp
inc
inc
push
push
xor
rcrb
enter
std
adc
cmp
mov
push
mov
out
ja
pusha
and
mov
pop
sub
cmp
mov
lret
jne
xor
or
in
sbb
call
das
scas
sub
xchg
imul
jge
aam
adc
into
mov
sub
decb
add
push
rol
mov
pushf
dec
jmp
pop
xchg
insl
popf
push
rcl
and
jb
rclb
mov
enter
inc
cmp
aam
fmuls
test
jmp
sub
andb
rorl
arpl
test
test
jle
hlt
bound
mov
xchg
in
fwait
adc
or
pop
dec
or
repz
lods
cmp
add
add
xchg
mov
pop
add
add
out
imul
inc
jbe
test
repz
pop
jle
stc
rol
nop
movsb
lret
bswap
ljmp
push
addb
sub
loop
pop
stc
pop
or
sub
xorl
enter
or
insl
mov
clc
pop
repz
mov
xlat
mov
push
repnz
dec
sbbl
sub
shlb
cmp
out
popf
inc
dec
fdivrl
cld
lret
ja
jbe
inc
mov
in
out
pop
in
push
shr
clc
mov
jb
pop
cmp
rcrb
adc
cld
mov
and
cmp
test
mov
adc
das
rol
loop
neg
ficoml
add
cmp
pop
clc
inc
add
cmpsl
lods
xchg
pop
aam
mov
sbb
add
and
and
jb
out
sub
ret
dec
loope
sub
adc
or
mov
and
adc
dec
push
add
add
fsubs
inc
adc
mov
iret
jne
push
sub
or
push
fimull
loope
mov
lock
enter
aam
xor
xchg
mov
test
movl
jge
outsb
jae
dec
push
jne
and
scas
fdivrl
sub
call
xchg
cmc
cmp
cmpsb
push
das
push
pop
xor
xchg
loop
sub
nop
mov
fsts
daa
xchg
sarb
dec
mov
ja
pop
daa
divb
imul
clc
aam
jns
jmp
pop
pop
jno
cmp
mov
jge
jl
popa
push
scas
movsb
in
dec
mov
mov
mov
aas
iret
sbb
jecxz
mov
leave
add
or
test
jp
in
stos
add
repnz
rorb
icebp
sub
bound
pop
adc
mov
sahf
fmul
push
in
pop
lea
add
fsubrl
mov
out
cmp
ret
or
or
loop
push
push
add
add
sub
scas
daa
into
or
fisttpll
outsb
sbb
mov
addl
nop
push
inc
lods
cmp
push
sub
push
movsb
mov
scas
cli
dec
and
icebp
add
outsl
and
adc
mov
push
sbb
andb
dec
dec
jl
in
popa
iret
pop
cwtl
dec
inc
dec
shlb
imul
or
or
inc
adc
pop
jne
ret
leave
or
cmp
sti
adc
lret
int
mov
inc
or
mov
ret
shrb
xor
sbb
xchg
outsl
mov
lods
filds
cmp
push
adc
cmp
jle
pop
push
add
sub
and
iret
xor
pop
jge
ret
in
xchg
mov
outsb
fsubs
push
mov
mov
rcrb
mov
shlb
cmpsl
push
fdivl
rorl
mov
test
xor
sbb
xor
jnp
push
inc
lods
ja
ljmp
or
push
shll
out
pop
pop
pushf
push
sub
push
add
add
das
dec
les
test
aam
add
filds
add
cmp
in
xchg
cmp
jne
bound
xor
sbb
or
icebp
add
pop
or
ret
popa
hlt
mov
test
popf
dec
lahf
in
ja
pop
pop
dec
xor
push
adc
jmp
adc
in
mov
lcall
cmp
decl
scas
adc
stos
stos
mov
aad
imul
out
xchg
or
sbb
cmp
pop
es
mov
dec
dec
loope
rclb
mov
adcl
xchg
int3
mov
aam
scas
pop
lret
jb
cltd
mov
fsin
test
jle
leave
xor
adc
cmpsb
cs
cli
cmp
in
push
outsl
push
arpl
inc
cmc
test
aaa
je
insl
and
push
mov
cmc
popf
mov
lret
mov
mov
dec
clc
dec
fcomip
data16
mov
cltd
sbb
imul
add
out
lcall
hlt
mov
pop
cmp
add
xor
push
aam
ss
dec
adc
push
test
inc
push
cmpb
in
cwtl
scas
fsubr
jo
push
dec
and
cld
sbb
repnz
mov
lods
loop
mov
mov
fwait
cwtl
in
das
jmp
xchg
push
aad
cli
jo
mov
lds
push
push
dec
loopne
jnp
push
out
pop
push
fwait
and
dec
push
add
cmp
movsb
add
das
lcall
and
jg
mov
xor
sub
mov
jl
dec
shrl
jne
xor
addl
testl
fists
ja
shrb
movsl
fsubs
sub
stos
inc
cli
cmp
je
repnz
repnz
push
ret
gs
sub
mov
xchg
pop
sysret
fld
cltd
scas
adc
or
ljmp
xchg
add
sub
xchg
insl
mov
mov
loop
xor
lods
push
sub
or
add
bound
imul
hlt
icebp
pop
popa
push
add
add
jecxz
xchg
and
mov
or
ret
mov
push
jnp
push
rorl
rolb
mov
mov
push
or
iret
add
dec
sarb
fs
mov
inc
add
xor
adcb
inc
sub
cmc
test
cmp
cmp
in
roll
cmp
xchg
gs
pusha
insl
dec
mov
mov
out
std
jb
aas
cmp
dec
push
imul
dec
ljmp
loop
cmpb
cmp
scas
popf
ljmp
mov
xchg
mov
testl
mov
pop
pop
xor
cmpsl
fwait
push
cmp
shll
mov
lahf
sub
sbb
jp
cwtl
mov
stos
aaa
and
sbb
imul
xlat
lds
rorb
stc
xchg
dec
clc
add
dec
dec
add
add
fwait
cmp
stos
sarb
push
add
add
aam
mov
xor
fidivl
and
nop
int
mov
xor
dec
push
fimull
or
mov
test
andb
cmp
outsl
add
ljmp
mov
xchg
jmp
out
xor
push
cld
lret
cmp
push
push
mov
sub
jno
fnstsw
out
jmp
stc
and
xchg
je
scas
cld
mov
out
push
ljmp
jge
push
mov
stos
adc
add
dec
aaa
fs
out
pop
sub
fcompl
jle
push
loop
and
lods
lods
mov
and
int
jle
mov
sub
int
stos
mov
std
stc
ljmp
addl
dec
sub
adc
popl
jl
cmp
jae
push
icebp
inc
rorb
lret
push
fs
xor
ja
push
outsb
pop
push
cmpb
jecxz
inc
ja
add
inc
push
clc
mov
and
hlt
xchg
movsb
or
imul
add
mov
jl
sbb
cmp
adc
xchg
jne
fcoml
mov
mov
mov
dec
rorl
inc
sub
pop
mov
in
sti
push
add
decb
jg
mov
test
add
sub
int3
jo
lea
divb
leave
sbbb
out
je
stc
sbb
inc
icebp
push
sub
pop
mov
add
push
shr
pusha
or
imul
or
pop
jo
cwtl
mov
xorl
sahf
jmp
mov
hlt
shll
sbb
mov
inc
in
lret
jo
fbld
sub
xor
xchg
cltd
clc
data16
add
pop
scas
fildl
inc
mov
stos
movsb
test
outsl
sbb
aas
fs
pop
or
or
push
and
add
scas
xchg
push
adc
out
mov
enter
jo
add
add
xor
xchg
push
ss
pop
jmp
jb
in
xchg
out
push
test
sbb
jo
mov
pushf
and
mov
shlb
mov
push
jb
mov
sub
addb
pop
push
mov
mov
xorb
jno
ret
sbb
mov
jmp
aas
int
pop
fsubl
les
mov
in
inc
sbb
inc
jno
cmc
test
ss
scas
lret
je
or
lods
cmp
orl
mov
and
inc
or
outsl
push
lcall
imul
test
mov
jo
dec
daa
jg
xor
les
cmpsl
push
idiv
jbe
xchg
add
mov
xchg
cmp
ficomps
sub
pop
push
inc
jnp
or
dec
bound
int3
sub
inc
loopne
les
xor
test
or
fdivs
push
add
add
or
lcall
mov
adc
xchg
hlt
dec
loope
loop
pusha
imul
inc
or
mov
jg
inc
js
sahf
or
movsl
scas
or
pop
dec
pop
jbe
sarb
jmp
mov
das
lcall
mov
mov
notl
dec
fwait
push
cmp
inc
xlat
ret
inc
adc
mov
call
mov
data16
call
imul
xchg
xchg
lds
dec
out
pop
push
xor
xlat
or
cmp
push
lcall
popf
mov
or
subb
xchg
mov
fwait
dec
fwait
adc
es
out
xor
popa
in
es
cltd
pop
inc
push
mov
mov
adc
pop
jecxz
scas
adc
mov
rcll
scas
jo
inc
xchg
ja
pop
lret
jb
sbb
adc
rorl
loopne
push
sbb
inc
rcl
ret
int3
icebp
pushf
out
dec
rep
add
add
mov
pusha
cmp
jp
add
add
and
shlb
sub
inc
xor
stc
jbe
in
sbb
in
dec
lea
lret
lret
imul
mov
lcall
pushl
lret
xor
mov
mov
jno
leave
in
icebp
xchg
mov
out
mov
or
pop
sub
je
dec
add
mov
fisubs
lret
add
loope
mov
int
inc
inc
adc
aaa
js
dec
xor
enter
cmp
ljmp
inc
cwtl
xchg
push
jmp
lds
imul
jmp
xchg
mov
push
jae
mov
lea
adc
jl
or
in
mov
lahf
xchg
fucomp
fsubl
jae
je
dec
iret
xlat
insb
jmp
loop
notb
and
jnp
mov
mov
add
fsubl
mov
ja
mov
jmp
xor
add
add
fadd
fstpt
pushf
clc
dec
jge
mov
mov
mov
mov
idiv
jo
aam
cmp
arpl
sub
popf
ljmp
push
push
insb
lea
mov
push
or
fldenv
jae
mov
xor
sahf
mov
mov
push
mov
xchg
icebp
xchg
icebp
mov
outsl
faddl
push
sub
add
int3
insl
cmpsl
pop
mov
rclb
sarl
mov
jbe
xor
testl
dec
xchg
sbb
dec
popa
fidivl
xchg
xor
push
dec
lcall
daa
mov
xlat
cmp
jne,pt
jb
add
cmpb
pop
push
dec
out
es
leave
outsl
ficompl
ror
ds
and
insb
push
stc
jne
hlt
pusha
mov
jno
lock
xchg
bound
test
xchg
int3
add
xor
cmp
add
add
xor
xlat
out
cld
ret
data16
or
add
movsl
rcll
xor
or
mov
sub
cmpsl
cs
stc
adc
jne
push
push
stc
or
inc
xchg
aad
and
fsubrs
cs
xchg
mov
push
xor
adc
dec
cltd
mov
add
mov
es
mov
in
xchg
es
sbb
lds
fcomps
jae
cmp
xchg
xor
pop
pop
psubb
mov
imul
push
ds
and
insb
add
sti
icebp
mov
fucomip
jnp
mov
fstps
jp
mov
test
cmpsb
cmp
push
mov
add
pop
push
dec
push
inc
repz
jns
adc
ret
jp
inc
fsubl
stos
jb
js
jl
or
xchg
mov
cli
xchg
ss
pop
mov
lret
sbb
jp
push
mov
push
mov
shr
mov
out
cmpsb
cmp
cmpsb
cld
xlat
sub
pop
mov
or
fsubrs
add
mov
mov
in
xor
mov
add
pop
pop
jecxz
lds
xchg
sub
repnz
leave
add
outsl
fisubrs
je
cmp
xchg
sti
jmp
imul
mov
imul
shrb
pop
xchg
leave
pop
pop
movsb
cmp
mov
outsb
xor
push
aam
jle
add
std
sbb
pop
push
es
xchg
and
hlt
cld
jmp
mov
push
mov
xchg
ljmp
popa
icebp
cmpsb
clc
xor
cmp
jecxz
adc
sbb
in
mov
notb
das
mov
sbb
pop
and
std
add
mulb
jae
pusha
jp
cmp
frstor
jns
shll
add
fildll
jns
mov
jb
and
mov
adc
jnp
fsub
pop
icebp
mov
lods
push
and
push
rclb
hlt
insb
push
xor
mov
dec
xlat
push
push
push
jp
sub
mov
cmp
add
push
into
push
push
inc
lahf
mov
mov
add
xchg
xchg
fs
adc
mov
sahf
add
pop
sub
mov
in
inc
test
fcompl
push
mov
sub
mov
and
aam
cmp
adc
sbb
rcr
adc
ja
dec
iret
out
sub
dec
repz
or
aam
xchg
popa
xlat
mov
imul
jne
cmp
xchg
and
loope,pn
mov
sub
push
adc
or
xchg
neg
mov
push
inc
mov
test
add
scas
ja
vpackuswb
or
sub
sti
cmc
rcrb
dec
inc
jmp
xchg
mov
pop
aam
test
sbbl
push
pop
popa
icebp
in
mov
xchg
jle
mov
adc
push
es
jns
mov
rorb
sbb
mov
cli
dec
adc
fcmovu
add
xor
repz
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
xchg
mov
in
jmp
pop
pop
or
pop
inc
sub
jp
insb
cmp
out
xchg
dec
mov
testl
mov
pop
loopne
pop
and
sbb
jp
xchg
cmpsl
cmpsb
mov
call
jmp
pop
push
shr
fcomps
and
add
sbb
mov
jne
and
xor
jmp
dec
je
out
inc
sbb
sbb
mov
cmc
jno
jle
sahf
sbb
je
xlat
fs
lahf
iret
sub
mov
cmp
xor
mov
sub
and
dec
inc
inc
push
add
dec
icebp
push
out
fcmovnu
rcl
popf
jnp
xchg
shlb
iret
xchg
test
jp
int
and
lahf
cmc
dec
into
shll
xlat
jo
jbe
pusha
mov
cld
sbb
pop
sub
add
add
lahf
pop
cmpsl
jne
mov
cmpsb
fmull
cwtl
pusha
add
add
pop
mov
loope
lods
jno
das
call
leave
outsl
mov
and
add
ljmp
mov
jb
mov
xchg
int
sti
mov
dec
lock
pop
xchg
hlt
add
pextrw
mov
mov
push
jbe
lds
bound
push
ficoms
mov
pop
inc
ror
pusha
dec
cmp
and
inc
call
mov
mov
outsb
and
aas
mov
sbb
filds
dec
dec
adc
fldt
sub
push
cmpb
sahf
rcrl
jmp
and
add
cmc
sbb
cmp
and
pop
inc
or
popa
fisttpll
mov
add
push
rorl
sbb
push
mov
in
scas
pusha
inc
gs
and
cmp
add
adc
adc
add
sahf
pop
testl
test
add
add
jg
jae
in
push
push
xlat
jecxz
pop
das
xor
imul
lods
test
fdivl
je
dec
hlt
mov
cmp
push
dec
jl
jno
or
in
and
pop
ror
pop
and
add
test
pop
sub
loop
jb
subl
adc
and
add
call
jp
push
dec
jb
mov
push
aad
xchg
frstor
jns
pop
shr
pop
mov
adc
cmp
cwtl
or
cmpsl
in
cmp
push
pop
push
push
or
xchg
and
xchg
arpl
push
and
adc
test
popf
test
nop
jg
insl
jp
ror
cli
in
or
xchg
je
pop
mov
mov
push
into
insb
mov
cmp
punpckhwd
mov
mov
imul
xor
mov
ret
rcl
fistpll
push
pop
inc
and
add
add
pop
mov
fstps
mov
add
sub
inc
lcall
xchg
jmp
or
cli
jns
jmp
js
or
push
and
sbb
nop
cli
es
xor
xor
jecxz
ja
xor
js
in
cs
fnsave
xchg
stos
mov
xor
add
adc
sbb
inc
out
mov
jns
xchg
les
inc
fs
ja
cmp
aas
sub
movsb
jns
mov
fs
dec
lds
dec
mov
push
dec
xchg
daa
push
pop
je
xor
nop
pop
xrelease
mov
dec
cmp
xor
inc
pushf
icebp
mov
jp
push
in
jbe,pt
inc
fdivrs
push
cmp
or
mov
mov
xchg
and
js
aas
in
fwait
lret
inc
mov
aad
jnp
jl
xchg
sub
jmp
ljmp
xor
xlat
daa
jbe
pop
inc
inc
xor
adc
push
add
add
repnz
movsb
jle
arpl
daa
xchg
add
add
push
jnp
je
bound
insb
repz
add
mov
call
arpl
sbb
shrl
jg
mov
mov
push
sbb
test
adc
lods
jge
ds
xor
js
push
push
fadds
pushf
lret
add
xchg
and
add
outsl
cld
or
dec
ds
dec
mov
rcr
mov
ds
test
cld
cltd
inc
fwait
push
sbb
jmp
inc
shl
cmc
jmp
iret
popa
out
lock
lcall
jmp
mov
mov
cmp
inc
movsl
push
rcl
add
inc
fstl
add
das
inc
xor
pop
add
movsb
push
sub
push
mov
mov
dec
arpl
push
xchg
cli
aam
sbb
sub
out
mov
loopnew
neg
push
in
bound
inc
cs
adc
int
add
rolb
xchg
jmp
in
add
add
jmp
sub
push
repz
lods
add
add
xchg
sub
xchg
inc
cmp
lea
insl
or
scas
sub
dec
inc
adc
and
dec
mov
push
inc
mov
cmp
aas
mov
sub
push
mov
mov
xchg
mov
mov
jo
mov
jne
loop
roll
and
or
pop
fnstenv
imul
xor
sub
push
pop
in
jnp
mov
and
cwtl
push
dec
cltd
es
adc
into
nop
mov
and
aam
lods
or
inc
sub
cmp
movups
mov
cmp
fistpll
mov
js
in
fldt
mov
cmc
imul
inc
inc
mov
pop
pop
jns
sar
ret
movsb
push
out
adc
mov
mov
testb
sbb
jne,pn
sub
xchg
add
shll
fnstenv
pop
dec
push
cmp
add
add
test
fisttps
enter
jnp
popa
daa
loop
sub
sarl
pop
mov
cmp
adc
or
aas
adc
sarl
out
inc
xlat
or
cli
push
es
incb
das
leave
sub
cmp
test
stc
shll
insl
mov
xchg
lods
push
mov
sbb
enter
sbb
push
loopne
popf
pop
adc
mov
mov
xor
or
bnd
adc
shrb
fisubs
xor
test
cltd
pop
add
insb
std
cltd
fcmovnbe
cmpl
sub
cmp
sbb
test
outsl
outsb
fcos
fiadds
jnp
mov
xor
cld
inc
aaa
dec
push
mov
dec
inc
je
add
js
push
inc
fidivrs
and
mov
or
dec
add
add
cld
je
jbe
jns
sbb
add
jno
mov
add
add
push
stos
addr16
shlb
sbb
mov
dec
bound
jo
loop
mov
jmp
cmpsb
movsl
pop
mov
test
push
dec
aad
sbb
ret
pushf
xchg
mov
pop
pop
xchg
push
sub
std
dec
push
mov
mov
adc
mov
push
es
je
cltd
sbb
cmpsb
ja
push
pop
pusha
ret
sbb
jmp
leave
mov
sub
stos
cmp
movsb
scas
pop
mov
outsb
xchg
or
cmpb
and
fsubl
pushf
add
mov
push
mov
push
mov
stos
ss
mov
sbb
cmpb
mov
sub
les
or
sahf
pop
cmp
fbstp
jns
push
cmc
dec
mov
mov
fwait
lret
xor
daa
aad
push
bound
stos
sub
das
xor
rclb
stos
stos
jp
sti
or
fistpl
fiaddl
add
push
cltd
jmp
fildl
or
add
add
enter
cmpb
les
lret
xor
or
sarl
mov
fldl
stos
mov
push
push
dec
push
jb
sub
and
out
inc
push
into
js
sbb
inc
jmp
xlat
je
sbb
inc
shll
popa
cmp
stos
cs
pushf
test
jp
in
inc
daa
cmpsl
push
pop
mov
movsb
and
jle
pop
mov
push
push
shl
daa
sub
int
adc
rolb
push
jno
lcall
cmpl
and
lcall
mov
lahf
sub
cltd
mov
adc
xchg
sub
fwait
xchg
out
shr
repz
push
cli
sahf
pop
dec
repnz
int
int3
mov
scas
fiaddl
add
daa
int
in
jns
jge
mov
sbb
or
repz
xchg
add
add
push
jg
dec
xchg
dec
push
jbe
xor
add
mov
test
out
data16
pop
jno
mov
pop
jb
repz
cld
fdivrl
repnz
das
cmc
mov
jo
and
mov
ds
stos
mov
cmp
in
addr16
movsb
iret
arpl
xchg
mov
jno
repz
push
cmp
push
addr16
test
js
pop
decl
int3
sti
fs
int
leave
fsts
add
loopne
stos
clc
sbb
sub
mov
mov
pop
gs
jbe
mov
mov
push
bound
iret
cmc
sbb
ljmp
push
xlat
mov
pop
push
loop
inc
xchg
inc
mov
lock
dec
xchg
dec
mov
cmp
daa
std
mov
inc
cmp
push
and
sub
xchg
jb
sbb
ficoms
jae
addr16
repz
jecxz
popf
leave
int3
std
mov
push
out
push
mov
leave
mov
test
jg
loope
outsb
cmp
iret
mov
fucomip
push
insb
xor
push
aas
sbb
lds
add
cs
lds
jb
inc
jl
std
jmp
xchg
loopne
jecxz
jp
nop
dec
inc
push
stos
pushf
ds
and
cli
mov
inc
jae
mov
xchg
sbb
mov
jne
mov
cli
pop
pop
aas
insl
aam
xlat
inc
arpl
lret
enter
mov
cli
int3
pop
fsts
push
lret
movsl
mov
lcall
fstpl
adc
sub
push
jae
dec
or
jne
pusha
test
dec
ret
xorps
xor
insl
or
dec
gs
lock
jne
arpl
cli
xchg
into
mov
out
pop
cmc
push
in
shlb
movsb
xchg
dec
mov
mov
popf
sub
push
rcll
add
movsl
mov
mov
out
mov
inc
mov
inc
adc
lds
adc
bound
in
movsl
push
push
out
mov
sar
int3
jnp
add
add
dec
out
iret
jmp
aas
in
push
data16
add
add
frstor
fnstcw
ss
jnp
cli
xchg
mov
call
jbe
mov
sub
xchg
xchg
inc
bound
shrb
fisubs
push
mov
push
lret
out
and
adc
aaa
insl
orb
push
add
imul
inc
add
inc
add
pop
sbb
aas
mov
mov
sbb
cli
sarb
aad
cli
lds
lock
scas
dec
test
testb
fisubrs
loop
in
pushf
cmpsl
sbb
dec
aam
sub
add
dec
inc
mov
and
add
or
xor
lods
adc
loop
and
mov
mov
pushf
add
ret
mov
scas
sbbb
pop
inc
mov
add
adc
sarb
push
mov
lea
mulb
sbbl
xor
pushf
lahf
add
add
std
cmpsb
pop
dec
sub
sub
imul
add
push
aad
mov
mov
ja
push
idiv
mov
and
insb
push
jge
shlb
std
push
shlb
cli
das
addr16
inc
or
xchg
stos
in
stos
imul
pop
aaa
mov
push
repz
mov
cmp
scas
js
insl
sbb
mov
subb
imul
push
test
fsubrs
popl
in
mov
jns
jge
fstpl
std
dec
lcall
xor
daa
pop
pushf
pop
cmp
mov
xor
mov
push
mov
mov
dec
sbb
test
cmp
ret
dec
repz
inc
insb
ret
arpl
push
mov
push
cmp
pop
jo
dec
pop
sub
pop
pop
lea
dec
or
push
dec
push
cmpsl
imul
mov
call
mov
xchg
add
and
dec
clc
mov
in
pop
into
adc
sti
adc
in
xchg
int3
prefetch
add
add
neg
std
sub
dec
xchg
push
sub
add
dec
sub
adc
loopne
add
daa
add
pop
pop
mov
movb
test
sub
sbb
ja
and
cld
arpl
add
stos
lods
shlb
mov
test
pop
adc
xlat
mov
xchg
jl
out
lahf
or
mov
sbbl
sbb
inc
mov
rol
mov
cmp
fwait
mov
arpl
push
or
pop
test
mov
sub
lret
clc
cmp
jnp
fidivrs
xchg
outsl
addb
pop
mov
inc
xchg
jg
push
repnz
pop
sbb
inc
cmp
test
or
sarl
pop
jns
pop
mov
imul
push
imul
inc
lahf
clc
mov
and
jno
les
push
ljmp
stos
mov
sbb
adcl
push
subb
in
push
mov
sub
mov
add
fs
cmp
and
push
xchg
mov
pop
mov
pop
fbld
std
mov
and
pop
xchg
cli
iret
in
loopne
cmp
mov
lea
fldt
pop
lods
inc
sbb
rcrl
popa
cmp
dec
repnz
outsl
testb
dec
sbb
or
push
add
lods
inc
arpl
jp
insl
xchg
mov
push
add
or
push
in
sub
ja
inc
incb
stos
shll
in
popa
inc
pop
jge
das
dec
sahf
ds
dec
sub
jae
xlat
jbe
repz
mov
aam
mov
cmp
pop
inc
movsb
mov
adc
jo
hlt
adc
repnz
popf
lds
pop
gs
cmp
mov
ret
stos
lock
xchg
cmp
cwtl
sub
inc
insl
nop
fists
jae
or
jg,pt
add
jbe
cs
fwait
ret
cld
jbe
mov
and
js
imul
add
lcall
out
sbb
and
add
popf
bound
imul
jne
jle
lret
xlat
movsl
pop
mov
mov
add
mov
push
pop
mov
xor
adc
pusha
xor
aad
xchg
inc
dec
inc
out
enter
lods
pop
push
inc
cmp
les
sbb
mov
lods
out
ret
mov
cmp
pop
fs
fs
iret
dec
test
jnp
dec
xchg
or
cmp
adc
push
and
scas
push
or
pop
lock
and
jecxz
loope
dec
insb
mov
pop
cmp
dec
lret
sahf
mov
lcall
sub
dec
pop
mov
adc
arpl
sbbl
add
enter
cli
lahf
mov
jle
dec
adc
lods
jl
or
daa
dec
ficoms
orb
jmp
clc
je
lock
in
jnp
popa
insw
xchg
mov
notb
sbb
int
mov
pop
popf
pop
in
add
add
sub
ja
mov
les
dec
jecxz
add
add
fsubrl
xchg
addb
pop
cmp
insb
mov
aam
add
jbe
test
fscale
jbe
mov
fldcw
in
push
mov
push
jge
iret
ja
cltd
xchg
mov
push
and
aas
push
scas
mov
mov
inc
and
jae
ja
cwtl
inc
mov
lahf
jp
jne
mov
mov
dec
add
sarl
fsubl
cwtl
cmpsb
push
sbb
xor
lods
std
xchg
xor
mov
mov
ljmp
mov
pop
mov
test
aas
xchg
sbb
pandn
push
mov
sbb
pop
out
fs
sti
test
dec
or
and
les
sub
xor
in
in
adc
push
addl
enter
sti
sbb
dec
push
fiadds
mov
mov
xor
in
add
and
add
int
mov
jnp
outsl
cmpsb
loopne
test
add
ljmp
jecxz
cmpsb
outsb
cmc
cmp
test
push
out
sub
mov
inc
xchg
fmull
out
sahf
sub
dec
mov
imul
cld
dec
ret
outsb
dec
xor
mov
ljmp
adc
btc
mov
ficomps
int
cmpsb
sahf
sub
and
mov
mov
das
js
inc
cmp
rsqrtps
xor
sub
arpl
jp
push
stos
xchg
jb
jmp
iret
pop
dec
sbb
iret
sti
xor
imul
decb
dec
mov
mov
lahf
xor
sub
test
add
outsb
mov
cwtl
adc
ret
into
sbb
cmp
mov
jmp
addb
outsb
stc
xchg
stos
pusha
popf
into
fldl
or
sub
sarb
jb
int
pop
sbbl
push
inc
adc
stos
pushf
jbe
xor
xor
xchg
push
mov
cli
xchg
jle
push
je
rcl
push
test
add
addr16
jle
dec
add
lcall
ret
mov
idivl
decb
mov
into
das
iret
sbb
dec
sub
jno
adc
lock
aad
mov
or
shll
dec
cmc
popf
cmp
aam
or
mov
fxch
je
and
out
mov
ret
imul
js
mov
pop
cmp
out
jle
in
push
and
jl
hlt
test
fsub
lock
add
ljmp
dec
pop
pushf
insl
add
cmp
sets
push
pmulhw
pop
jg
or
iret
inc
out
mov
fdivp
sbb
xchg
stc
ret
loope
xchg
jae
mov
cmp
bound
mov
inc
jns
imul
mov
and
clc
mov
fsub
dec
data16
or
ljmp
push
popf
pop
or
sub
push
pusha
mulb
xchg
into
add
inc
leave
add
add
fwait
jnp
aad
sbb
xchg
mov
add
or
fsubl
inc
mov
jl
jbe
int3
rcrl
mov
arpl
jecxz
mov
data16
leave
data16
pop
push
es
mov
lahf
stc
in
ja
or
data16
jb
jno
mov
dec
adc
scas
dec
sbbb
in
push
cltd
and
jns
sbb
jg
clc
push
dec
data16
lock
leave
addl
in
pop
adc
sub
push
jb
xor
dec
mov
pop
leave
mov
ret
cmc
sub
fnstsw
shrb
popa
ds
push
xchg
or
incb
dec
repz
pop
dec
aaa
pop
xchg
xchg
add
pop
mov
cmp
push
jge
fiaddl
faddl
and
push
xor
loop
movsl
enter
push
mov
jl
add
jmp
xor
dec
add
add
std
mov
sub
jae
add
push
dec
cld
fcompl
subb
push
cmp
ret
adcl
stos
cld
scas
std
lea
lods
fs
dec
jbe
jns
cmc
clc
sahf
ret
lret
lcall
jb
fldpi
cmc
push
inc
loope
mov
mov
sub
fnstenv
pop
mov
pop
mov
cmp
mov
jge
xchg
add
movsl
push
sbb
inc
inc
lods
int3
sarb
ljmp
mov
jns
add
aas
sbb
mov
mov
xlat
rcl
shlb
pop
test
sbbb
add
jg
imulb
pushf
testl
and
cmp
mov
push
mov
xor
dec
mov
pushf
xor
dec
cld
rep
les
into
mov
decl
sub
outsl
adc
cmp
add
adcl
xchg
fisttps
mov
jns
cld
je
add
andb
push
cltd
xor
push
mov
mov
mov
pop
cmp
popf
pop
ljmp
pushf
inc
push
leave
inc
sub
push
xchg
mov
push
rcll
sub
push
or
sbb
xchg
aad
jmp
mov
pop
push
aas
inc
xchg
push
imul
cmp
mov
gs
push
mov
out
mov
lock
jbe
push
mov
cmpsl
sub
pop
mov
xlat
stc
xor
arpl
daa
imul
arpl
xchg
mov
je
notl
bound
and
ret
shr
mov
call
jbe
out
inc
nop
stc
in
inc
add
or
lock
mov
inc
shlb
outsl
and
cld
imul
imul
inc
jl
sub
pop
aas
sbb
inc
mov
negl
add
add
bound
sub
sbb
jbe
add
jbe
lods
scas
ds
jmp
jp
and
add
mov
notb
xor
xor
fwait
adc
scas
sub
xlat
in
cli
inc
or
dec
addr16
jp
adc
jmp
pop
data16
jmp
jne
inc
mov
sub
stc
pop
adc
xor
jb
cs
cwtl
xor
ss
sbb
adc
dec
xchg
xlat
scas
xchg
jecxz
xchg
test
mov
rol
repz
cwtl
dec
add
rorb
add
aad
sti
xlat
ret
xchg
jae
fildll
xchg
sub
fdivs
xor
dec
mov
cmp
loop
mov
in
shr
outsl
xlat
ss
push
into
nop
dec
loope
mov
pop
push
add
test
test
nop
icebp
in
scas
lahf
add
cmp
mov
mov
out
sub
add
jns
divl
in
sub
push
ja
add
mov
mov
test
repnz
fnstsw
jno
push
push
sarl
jnp,pt
fisttps
inc
or
call
and
je
mov
mov
xor
xor
or
jae
inc
test
aaa
test
sbb
or
push
inc
out
xchg
jnp
daa
push
push
or
jp
in
sti
es
xor
adc
icebp
sub
fmul
dec
xor
aad
cld
iret
pop
push
mov
xchg
shl
jo
pop
mov
icebp
jne
fdivs
mov
jnp
sub
xchg
repz
repz
inc
cld
mov
pop
pushf
movsl
or
adc
jecxz
xchg
mov
sbb
mov
cmpsb
jmp
inc
jno
mov
sbb
xchg
fsubs
dec
mov
cmpl
xchg
or
and
xor
dec
imul
cmp
jmp
dec
hlt
ret
add
scas
clc
test
daa
lds
jecxz
fdivl
jl
add
add
fisubs
mov
mov
jle
or
add
dec
sbb
std
push
mov
aaa
arpl
shlb
test
or
xor
xorl
push
sti
lods
jge
xor
mov
adc
jmp
jb
xchg
fdivr
cmp
xorps
cmpsb
xor
mov
movsl
xor
push
or
test
in
ret
sbb
mov
pop
sub
in
add
add
sbbl
cmp
in
mov
mov
lret
ret
mov
in
jmp
pop
fistl
insb
jl
add
xor
loop
sti
sbb
mov
mov
xchg
cmp
arpl
add
lret
insb
test
test
lcall
pop
xor
int3
fistps
pop
push
push
mov
int3
mov
inc
xchg
inc
aaa
mov
lea
movswl
add
add
mov
outsl
jne
ljmp
cmpsl
rclb
adc
add
adc
adc
and
lahf
or
leave
jg
sub
insl
adc
ret
out
shlb
lea
mov
mov
pushf
jbe
cmpsb
movsb
add
mov
loopne
or
outsb
iret
stc
lret
clc
fcompl
inc
int3
out
inc
dec
jp
test
dec
push
pop
cli
sub
loopne
mov
mov
mov
bound
jg
push
mov
jp
or
push
mov
dec
test
test
arpl
std
int3
jg
ds
mov
hlt
ja
mov
adc
stos
outsb
sahf
jecxz
loopne
dec
jno
call
enter
pushf
in
cmpsl
adc
or
data16
scas
test
hlt
out
adc
xchg
inc
jnp
push
pop
adc
fistpl
pop
cmpsl
mov
push
push
sub
je
addr16
xchg
in
cs
mov
into
pop
xor
push
movsl
pop
mov
add
testl
sub
jp
add
ficoml
out
xlat
les
mov
inc
aad
xchg
or
and
xchg
popa
and
sbb
mov
dec
push
divb
ljmp
pop
sub
xor
jmp
rclb
andb
ret
mov
pop
jecxz
adc
mov
stos
lea
xor
popf
jne
sub
mov
mov
and
das
leave
xor
pop
aas
je
sti
imul
sbb
out
inc
hlt
bswap
and
adc
sub
test
pop
and
or
pop
xor
mov
in
pushf
fnstcw
xor
sete
add
push
push
or
adc
lds
clc
mov
sub
pop
ja
push
stos
mov
pop
sub
loope
xor
repnz
pop
or
insl
xchg
faddl
incl
push
jb
mov
mov
bound
out
pop
and
add
add
jo
ja
std
stos
sbb
ljmp
add
add
adc
jle
mov
movsb
mov
scas
add
jo
mov
xlat
out
mov
jl
imul
xchg
out
cwtl
xchg
loopne
arpl
dec
add
push
sahf
xchg
sub
push
enter
and
mov
jge
and
lret
adc
mov
fidivl
jmp
push
push
xor
adc
push
cld
clc
ret
pop
stos
mov
scas
sbb
aad
loop
inc
addr16
fbld
mov
mov
repnz
iret
mov
in
and
mov
inc
mov
inc
lock
push
outsb
outsl
outsl
push
and
jae
fldl
es
cmp
addl
iret
mov
rclb
xchg
push
sbb
adc
adc
mov
jmp
lea
push
pop
es
std
call
cmc
sbb
push
adc
add
cmpsb
push
sbb
and
jl
add
loop
and
mov
adc
jl
aad
push
adc
xchg
push
inc
xor
push
fdiv
movl
shlb
xchg
jae
das
imul
cmp
cmc
cli
stos
xor
mov
std
fildll
pop
xchg
outsb
pop
sbb
in
hlt
arpl
lods
fisttps
pop
pop
rcrl
rclb
sbb
push
stos
xchg
sarb
lret
addr16
hlt
xchg
cwtl
hlt
loop
insb
xchg
pop
lcall
jl
rcll
shll
incb
inc
jo
cmpsl
sbb
mov
push
mov
and
out
mov
sarl
sbb
add
push
push
lds
mov
jl
push
sbb
repz
pop
mov
repz
ljmp
push
jo
adc
mul
push
mov
ss
sbb
icebp
in
in
or
ss
jle
movl
add
cmp
cli
mov
arpl
and
add
add
scas
push
mov
or
pop
sbb
mov
push
xor
ffreep
xchg
aas
push
pop
cltd
pop
sbb
fadd
lret
sbb
std
pop
shlb
dec
mov
int
pop
xchg
inc
xor
fisttps
and
jg
xor
cmp
testb
mov
je
jg
dec
mov
inc
sub
lds
movsb
inc
pop
nop
cmp
jp
loopne
mov
scas
test
or
push
fs
outsl
ret
push
mov
xor
mov
adc
sub
push
fidivrl
cmp
mov
lahf
lea
mov
xchg
imul
scas
xor
jno
pop
mov
mov
add
push
xor
jnp
cltd
xchg
in
scas
cmpsb
rolb
lcall
lods
adc
cmpsb
mov
dec
loop
jbe
mov
lret
and
add
test
lcall
testb
jle
add
xor
into
bound
pop
in
pop
mov
cld
adc
cmp
sbb
mov
sbb
sub
push
subb
daa
push
hlt
data16
cld
mov
pop
inc
or
mov
or
imul
sub
int3
jp
enter
lea
fildl
and
push
pop
dec
push
adc
xor
sbb
dec
cs
shlb
mov
xor
push
xchg
adc
popf
cmp
mov
call
mov
mov
cmpsb
jnp
hlt
daa
jl
inc
bound
hlt
shll
ljmp
dec
dec
cmp
mov
and
pushf
add
add
mov
jg
mov
inc
repz
out
cmp
lahf
pop
in
mov
aaa
lret
cs
mov
repz
aaa
inc
es
into
push
xchg
jl
dec
jp
in
add
testb
daa
mov
jae
jg
add
mov
mov
pop
pop
data16
and
add
bound
inc
or
push
adc
lods
test
ss
push
or
sarl
push
scas
mov
mov
imul
out
xlat
xchg
or
jge
push
dec
test
les
dec
inc
mov
lds
cmp
jne
and
leave
add
adc
out
cli
lds
int3
sub
insl
dec
or
arpl
ss
insb
ror
bound
mov
adc
orl
adc
rcll
fcompl
cli
insb
xor
loope
lock
aam
test
jo
ljmp
lock
rorl
ret
sub
cmp
xchg
push
jp
sahf
pusha
dec
sbb
dec
and
mov
or
cmp
sti
icebp
add
add
lcall
mov
addb
add
adc
jl
inc
js
rdtsc
mov
jle
mov
je
sahf
ret
sbb
sbbb
lods
es
lahf
sbb
adc
inc
mov
sub
sti
test
and
inc
in
aam
mov
mov
popa
adc
ret
jecxz
popa
pop
shll
mov
enter
pop
into
fadds
sub
sbb
jle
icebp
mov
loopne
movsb
or
cwtl
shrb
mov
pop
pop
stc
popa
ret
add
xor
pop
pushf
rcrb
pusha
xor
mov
adc
push
lds
sarl
lods
lcall
popa
xchg
jne
dec
push
sarl
and
mov
mov
inc
adc
inc
adc
mov
mov
mov
push
fucomip
push
cmp
fimull
jo
dec
cwtl
test
jl
cs
idiv
jne
iret
pusha
cld
jbe
cmp
add
push
adc
inc
test
sbb
fldenv
dec
mov
xor
jl
pushf
mov
push
push
ficoml
push
jno
push
sub
std
paddusb
pop
cmp
xor
xchg
std
xor
lret
or
cmc
pop
imull
fbld
jne
shl
xchg
addr16
in
lret
enter
in
mov
cmpsl
xchg
repnz
sbb
inc
add
and
rol
cmpsl
pushf
pop
popf
cltd
sbb
push
dec
jbe
aad
xor
shrl
mov
push
adc
jg
and
sti
lret
clc
and
cmpsl
std
xlat
lea
sbb
sahf
ret
push
daa
mov
insb
jbe
stos
dec
sub
mov
xchg
mov
or
mov
lahf
xorb
hlt
mov
daa
bnd
loope
xor
scas
mov
es
mov
add
mov
in
test
xchg
scas
int
rcr
add
add
pushl
sub
jg
daa
lret
add
add
mov
or
pop
pushf
xorb
cmp
add
pop
in
sarb
sub
mov
xchg
cwtl
dec
sahf
jne
movsb
add
mov
adc
icebp
sub
insb
popf
add
fcomps
cmc
aam
add
pop
cld
xlat
push
mov
movsl
les
pushf
lcall
mov
xchg
push
int3
insl
in
ficompl
imul
pop
lret
inc
adc
jbe
push
or
pushf
in
fstpt
popa
dec
jae
xor
js
dec
cltd
pop
repz
mov
xlat
mov
push
mov
push
gs
pop
mov
bound
ljmp
adc
bound
fcoms
lret
mov
mov
sbb
mov
in
sub
cwtl
popa
mov
pop
mov
mov
cs
inc
aaa
mov
repz
inc
push
mov
add
add
sti
iret
ss
push
jno
sar
or
add
add
roll
add
inc
xchg
and
imul
pop
and
xchg
lret
stc
push
test
xchg
mov
add
jmp
jo
hlt
fs
leave
nop
sbb
es
sti
ljmp
xchg
cli
cli
push
negl
push
lods
dec
pop
sub
in
cmpsl
cmp
dec
sbb
cld
or
gs
xlat
pop
fsts
xchg
xor
js
cmc
cmpsl
sbb
xchg
sub
addr16
ss
sbb
fsubl
lret
push
jbe
mov
adc
sub
in
loope
sub
mov
sbb
aas
cmp
xchg
cmp
hlt
mov
out
dec
cmp
pop
jbe
sbb
mov
push
inc
jno
arpl
adc
inc
mov
stc
mov
cs
push
cltd
aas
int3
jmp
pusha
adc
mov
int3
lods
lahf
push
jo
mov
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
sahf
inc
add
add
add
cmp
test
sub
mov
leave
xchg
or
pop
push
push
push
lds
shrl
mov
lock
fwait
inc
in
pusha
scas
jmp
insb
mov
inc
js
test
insb
add
pop
pusha
jmp
adc
insb
mov
push
mov
add
and
sarb
jne
sub
mov
sbb
adc
push
mov
and
jns
cmp
notb
dec
xor
adc
or
cmp
in
lcall
pop
inc
mov
inc
pusha
popa
sub
jno
ja
sbb
bound
mov
xchg
movsl
out
lahf
pop
pop
add
push
push
sub
pop
xlat
cmc
aad
sbb
pop
imul
mov
or
sub
xchg
shrb
ret
sub
addr16
push
lea
movsl
mov
cmp
mov
add
mov
mov
test
add
call
mov
jp
pop
or
pop
test
jp
sbb
mov
mov
sub
lods
bound
ljmp
xchg
cs
insb
testl
or
fwait
sbb
xlat
jae
inc
and
push
xchg
roll
pop
or
cmp
dec
and
in
subb
inc
mulb
adc
cs
pop
fs
cs
adc
or
lcall
adc
cmc
lock
insb
shll
dec
sti
movdqu
fcompl
out
lock
mov
jbe
mov
sbb
dec
sahf
cmp
push
ds
cmc
cmp
andb
jnp,pn
in
adc
add
xchg
pushf
mov
jp
pushf
adc
and
jg
sbb
add
leave
sti
orl
test
adc
add
and
out
ljmp
lock
xchg
cmp
add
add
scas
idiv
or
sbb
das
inc
fs
or
imul
jns
data16
pop
gs
mov
outsl
outsb
into
cmpsl
sub
ljmp
sub
or
or
jp
add
inc
cmp
and
adc
rorb
insl
nop
std
cmpsl
jo
cld
sbb
int3
lods
mov
xchg
add
call
dec
andl
sbb
outsb
mov
jns
sbb
test
cmp
xchg
xchg
dec
addb
test
xor
loop
push
daa
or
jge
xor
sbbb
mov
gs
stos
fstps
mov
clc
sub
push
pop
jo
scas
stc
das
cld
test
xchg
test
mov
test
outsl
mov
xor
xchg
cmpsl
lahf
mov
lcall
inc
sub
jbe
fisubs
stos
subl
je
outsb
cmp
jo
push
add
fs
mov
push
add
add
arpl
jnp
sbb
push
xor
fs
outsb
push
xchg
add
pop
sub
loop
ror
xor
mov
ds
test
in
daa
jo
push
je
add
ja
stc
or
or
ret
cmpsl
repz
ja
push
sub
inc
test
jb
jno
enter
in
mov
add
or
and
mov
dec
es
addr16
mov
jg
push
jb
jnp
push
inc
lods
int3
sbb
add
adc
inc
mov
jl
rol
popf
lea
ds
dec
pop
fsubrl
mov
push
xor
adcb
sub
mov
xchg
gs
stos
es
lods
cmpsb
push
scas
push
mov
mov
dec
test
jo
out
ret
gs
or
pop
out
pop
ret
xor
test
or
jecxz
icebp
mov
shlb
enter
jmp
shlb
aam
or
arpl
dec
adc
stos
icebp
sbb
test
adc
add
add
aas
or
mov
adc
add
add
loop
push
std
push
push
lds
cmp
clc
and
imul
loope
adc
and
notl
iret
cld
dec
sbbb
popa
stos
adc
inc
push
pushf
sti
hlt
jg
push
push
cltd
push
bound
js
movsb
rcr
lea
push
mov
cmp
aaa
add
ja
and
cli
dec
nop
jle
adc
sbb
nop
or
mov
shl
and
pop
ret
mov
test
or
push
xorb
out
cmp
lods
inc
dec
adc
bound
mov
sbb
add
movsl
sub
fdivrs
cmp
movsb
push
cmp
xchg
cwtl
xchg
outsl
hlt
test
mov
btr
cmpsb
mov
fistl
mov
jle
sahf
mov
jno
adc
push
ss
jmp
in
cli
add
add
push
outsb
fisubs
test
inc
test
add
add
xchg
push
mov
stos
lret
jae
push
sub
inc
pop
jno
push
lock
mov
cmp
xchg
gs
out
fildl
aas
mov
cli
shrb
pushf
jmp
mov
sahf
je
dec
mov
cmp
adc
adc
je
and
push
lret
and
jae
push
jecxz
enter
nop
lret
sbb
testl
sbb
std
pusha
xchg
addb
notl
sub
mov
pop
fcmovne
and
dec
repz
sub
rcrl
das
lcall
enter
push
js
xor
dec
pop
pop
pop
scas
pop
jg
and
loopne
xor
cmc
mov
arpl
incb
movsb
adc
inc
dec
inc
adcb
inc
dec
xchg
dec
xchg
pop
lahf
mov
mov
jg
mov
mov
xchg
cmp
mov
jns
stos
xor
mov
add
inc
and
xchg
push
loopne
hlt
cli
je
mov
sbb
mov
or
mov
sbb
inc
jo
test
cld
inc
sti
leave
mov
add
mov
movsb
aad
jne
pop
mov
mov
test
push
repz
xchg
aas
dec
sbb
push
mov
mov
add
pop
mov
push
mov
and
sub
test
pop
mov
scas
push
dec
fwait
jnp
mov
mov
in
adc
bound
sub
icebp
sti
je
out
shlb
sub
loopne
pop
jbe
lods
inc
dec
jbe
mov
cmc
loop
push
push
int3
aas
xor
jg
movsl
popf
cld
jle
pop
pop
dec
add
cmp
daa
and
cld
pop
lret
xchg
shll
mov
ja
shl
ss
push
insb
into
cs
insb
inc
adc
call
int
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
push
mov
add
xchg
testb
lock
sbb
mov
in
idivl
insb
cmp
jo
loope
add
add
imul
sbb
and
lret
ds
pop
clc
xchg
dec
into
push
push
cmpsb
pop
cmpsb
ror
pop
push
inc
add
dec
and
lock
test
sbb
insl
test
pop
shrl
ja
jbe
repnz
cmp
jp
adc
xor
push
mov
dec
xor
aas
adc
or
int3
inc
mov
js
push
push
pop
jg
pop
adc
mov
insb
mov
je
add
add
xchg
add
xchg
adc
das
je
lds
popf
xor
adc
repnz
jb
sub
jecxz
pop
mov
xor
out
cmp
sbb
ret
aas
dec
cmpsl
or
mov
adc
aad
fistpll
in
jmp
int3
test
outsl
lods
sub
std
or
add
add
adc
std
out
ljmp
outsl
mov
add
popf
rcrl
or
sub
in
add
xlat
pop
inc
mov
fisubs
pop
inc
iret
bound
cmp
xchg
imul
in
scas
push
sahf
scas
fldenv
in
or
adc
aas
mov
jne
shll
cmp
pop
inc
int3
and
push
gs
adc
aam
push
adc
iret
lds
pushf
jge
mov
add
scas
mov
in
mov
dec
fadds
adc
jns
stos
adc
mov
xor
pop
fisubl
gs
idivl
ficoms
push
push
push
dec
mov
sarl
lods
pusha
mov
sbb
add
mov
aas
mov
lods
mov
jecxz
push
test
push
insb
sar
mov
mov
mov
inc
jl
mov
popa
ja
pop
scas
mov
scas
push
add
add
mov
icebp
sti
daa
stc
je
add
add
out
cmp
or
pop
mov
adc
mov
cltd
jmp
out
daa
out
or
and
mov
cmp
fistpll
lret
lea
fs
rcrb
into
icebp
aaa
xor
and
lock
sarl
xlat
in
stc
push
jge
mov
stos
imul
insb
pop
lahf
sub
dec
cmp
xchg
ss
xchg
dec
pop
inc
stos
ror
out
loopne
and
push
mov
ror
push
and
jl
sahf
fwait
sub
xlat
imul
or
fidivl
test
mov
and
lds
shl
mov
add
out
arpl
jp
pslld
mov
mov
cwtl
xchg
ljmp
idivl
sbb
dec
and
sti
cmpsb
cmp
out
push
insb
pop
cmp
fnstcw
xor
mov
add
push
push
add
add
les
fcomps
add
std
shrl
add
add
jle
xchg
lret
ret
repnz
adc
adc
dec
cmp
cmpsl
popf
lods
push
ret
mov
push
shll
push
adc
dec
inc
in
sub
mov
fistl
push
jle
jb
pop
addl
jo
sbb
sub
jge
test
test
cmp
rolb
xor
xor
jnp
sub
pinsrw
or
icebp
mov
jae
push
je
mov
lock
push
jle
jmp
repz
push
fdivrs
sbb
pop
mov
in
xchg
adc
and
scas
test
mov
mov
loop
push
cmp
pop
int
ss
jg
inc
adc
jl
inc
in
pop
jmp
jp
enter
shrb
add
out
shrl
cmp
mov
xchg
xchg
movsl
ss
iret
pop
je
rorb
mov
xor
add
add
ljmp
dec
mov
or
add
inc
daa
out
pop
cmc
pop
push
fimull
in
lods
pop
pop
fnstsw
adc
bsr
fiaddl
and
xchg
sbb
das
jae
mov
push
push
data16
ret
loop
xchg
push
mov
mov
das
xchg
mov
mov
dec
pop
sbb
lcall
push
or
call
jl
outsb
sti
loop
cmp
add
jae
dec
ret
xorl
jp
lods
inc
dec
cld
pop
or
xor
mov
loop
xchg
jl
insb
cltd
repz
mov
push
ja
xor
dec
je
cwtl
call
mov
rolb
jecxz
into
dec
mov
inc
jp
mov
jmp
xor
shrb
out
jae
cmp
xor
ss
outsb
xchg
push
std
mov
out
mov
leave
shlb
sbb
in
outsb
jmp
adc
add
aaa
shlb
cmc
div
testl
adcl
add
jp
push
fidivl
insb
or
test
cli
push
mov
add
dec
push
js
mov
repnz
xchg
popf
and
dec
mov
rorb
je
lret
out
dec
stos
or
es
inc
inc
dec
inc
push
sbb
jnp
fdivrl
adc
rcrl
xchg
lods
inc
and
rol
arpl
loop
xchg
sarl
push
cmpsl
les
daa
mov
mov
inc
flds
ljmp
push
inc
hlt
cmp
cmpsb
cwtl
cmp
shrl
mull
sarb
sbb
xchg
pop
sub
xor
movsb
pmullw
int
fs
fidivl
mov
mov
jge
inc
addr16
subl
push
pop
dec
mov
das
add
xor
sbb
insl
mov
xor
mov
cwtl
mov
add
push
sahf
rcr
pop
adcb
insl
imull
add
aaa
sub
fisttpl
fsin
call
pop
stc
or
inc
repz
test
push
xchg
sar
and
icebp
cmpsb
out
shlb
inc
mov
nop
cld
pushf
mov
pop
pop
ljmp
xchg
sbb
sbb
cli
nop
stos
jbe
pushf
mov
sarl
popf
test
mov
mov
int3
sbb
xchg
xchg
data16
cmp
push
adc
mov
pop
ljmp
test
cltd
dec
pop
cmp
cmp
inc
push
mov
or
movlps
lds
das
pop
mov
int
dec
jle
xor
inc
icebp
or
mov
test
in
call
imul
enter
nop
insl
mov
inc
daa
imul
jmp
shl
pop
pop
in
push
mov
dec
xchg
and
pop
add
leave
movl
mov
ds
xor
shll
add
arpl
cmpsb
jcxz
fimull
lea
add
mov
jle
push
mov
lock
or
xchg
jle
arpl
pop
sti
cltd
push
repnz
ret
test
fistps
xor
push
les
inc
xor
inc
mov
lcall
loop
test
frstor
leave
jbe
cmp
rcr
ja
inc
push
sub
mov
adc
loope
notb
in
mov
and
repz
xor
pushf
add
xchg
push
lahf
lds
push
jge
xchg
popf
test
rcrb
aad
enter
rorl
popa
jmp
in
push
fwait
test
jno
stos
mov
movsb
movsl
dec
ljmp
lahf
rcrl
and
stos
sti
cmp
lea
sahf
loope
icebp
icebp
cmpsl
cmp
push
or
sub
jge
aam
push
sub
and
loope
outsl
mov
xor
pop
fstpt
add
clc
jnp
jg
in
cli
enter
in
mov
lcall
add
xor
and
cmp
lret
fidivl
xchg
mov
sub
fwait
fwait
sar
add
cmp
subb
jg
xchg
call
in
fdiv
and
push
fwait
cmp
cmpsb
cmp
and
mov
idivl
mov
jnp
xchg
add
fwait
sub
insb
cmp
mov
xlat
xchg
mull
cmp
mov
adc
lcall
shll
fs
repnz
mov
sbb
test
cmpsb
jo
dec
sbb
inc
sbb
movsl
xchg
push
cmc
inc
xchg
loopne
pop
jbe
cmovle
iret
in
mov
test
stos
out
push
adc
mov
jb
push
fnstsw
sahf
sbb
clc
xchg
mov
jns
mov
filds
rcl
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
fcmovbe
pop
das
lods
imul
arpl
popl
adc
mov
loop
mov
jae,pn
mov
cmp
int
pop
cmp
sub
ljmp
cmp
inc
adc
push
push
clc
push
rol
lods
adc
out
inc
xchg
insl
frstor
or
flds
gs
dec
arpl
lret
popf
inc
pop
pop
fld1
adc
ljmp
or
jmp
loop
mov
mov
cmp
pop
cmp
mov
out
mov
data16
and
insl
xor
mov
mov
ljmp
lahf
mov
sbb
xor
mov
mov
in
and
pop
push
repnz
inc
inc
mov
aaa
ljmp
imul
xor
ljmp
daa
and
aas
sbb
cltd
mov
out
xlat
std
cmp
dec
dec
enter
adc
add
jl
sar
std
jle
pop
popf
scas
test
pushf
xchg
add
add
cli
mov
lret
cmp
lods
mov
push
pop
dec
iret
cmp
pushf
loope
cmp
push
dec
roll
bound
dec
jmp
mov
cli
inc
insl
ja
out
jle
loope
adcl
push
inc
popl
push
out
dec
mov
add
mov
push
je
sbb
jne
data16
adc
stos
and
jle
outsb
mov
lcall
adc
push
inc
jle
cmp
add
subb
push
rcl
sub
in
lahf
test
shrb
cmp
pop
push
into
push
push
repz
mov
fcmovbe
repz
sbb
sbb
outsl
inc
imul
fimuls
and
dec
ficomps
inc
dec
loopne
jbe
fisttpll
int
fistps
adc
divl
out
call
add
cmp
cmp
in
ret
dec
hlt
sub
xchg
add
add
xor
outsb
mov
and
mov
loop
iret
add
in
mov
sbb
loopne
or
push
mov
hlt
mov
shrl
cmp
cmp
repnz
dec
inc
lret
push
mov
ficomps
es
in
shll
jns
ret
jmp
inc
hlt
xchg
xor
add
sub
jmp
ret
lods
jl
jecxz
sbb
mov
sarb
xchg
lods
hlt
mov
aad
punpckhbw
inc
push
fmuls
mov
out
insb
sbb
sahf
push
fnstenv
enter
imul
pop
into
xchg
in
leave
daa
jmp
cmp
repnz
stos
arpl
lock
mov
adc
out
inc
sbb
mov
inc
inc
cmp
pop
aad
and
jge
int3
pop
shrb
pop
cwtl
testb
dec
icebp
mov
stos
mov
outsb
add
add
outsl
sti
mov
mov
ss
push
adc
add
add
cltd
pusha
shlb
enter
inc
sbb
and
jmp
stos
xor
aaa
and
pop
dec
adc
das
idivb
call
dec
xchg
sub
pop
and
js
xor
pop
cmp
inc
pop
mov
push
out
and
hlt
add
xor
xor
lea
jmp
jne,pn
ja
sub
pop
push
push
xor
int
and
or
test
outsl
sbb
aam
mov
push
mov
shl
push
js
mov
out
shll
xor
sub
stos
fimuls
dec
xor
les
mov
data16
fisttpll
fstps
pop
cwtl
pop
xchg
inc
push
xchg
xor
jae
call
push
sub
jbe
adc
jnp
xchg
inc
ffree
int3
push
push
ljmp
rcrl
push
mov
shll
xor
mov
mov
push
mov
les
sbb
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
out
negl
sbb
das
inc
or
sub
movsb
lds
in
scas
inc
xchg
jae
dec
or
push
push
inc
into
pushf
mov
outsl
stos
movsb
sbb
stos
mov
ja
out
pop
sub
xchg
fistl
les
pop
mov
cmpsb
dec
sub
mov
das
mov
xchg
or
aas
sub
mov
mov
je
xchg
jo
adc
inc
inc
xor
fdivr
push
jae
icebp
loope
push
mov
adc
adc
and
es
clc
jl
fstl
mov
xor
int
add
testl
sbb
inc
jae
xchg
xor
int
xor
rol
dec
adc
mov
jno
xchg
push
mov
inc
jmp
inc
test
std
lock
fldl
sbb
loopne
data16
add
imul
outsl
vmwrite
xorb
add
cmp
lret
bound
clc
fwait
pop
sbb
ficomps
pop
lods
popa
jl
imul
stos
or
das
push
lock
dec
add
mov
repz
or
and
fidivrl
xchg
out
pop
adc
call
dec
pop
out
adc
movsb
sub
mov
xchg
lods
xor
push
ret
aaa
lds
xor
lods
dec
adc
sbb
mov
mov
adc
push
rcrl
cmovs
ss
repz
or
xchg
pop
push
loopne
lods
jle
add
mov
mov
sbb
jns
fadd
push
push
sub
dec
pop
outsl
out
mov
subb
sub
and
ja
subb
mov
ja
and
stos
insb
popf
add
push
xchg
sti
adc
rorl
pop
out
es
repz
in
inc
mov
jmp
lods
add
fwait
push
roll
add
lret
sbbl
popl
jle
mov
add
add
mov
xchg
lods
mov
push
scas
cmp
shlb
mov
xlat
ljmp
adc
push
loope
insb
sub
inc
loopne
mov
inc
jmp
or
lods
mov
mov
sti
push
hlt
pop
push
cwtl
das
insl
lods
push
es
movsb
pop
lock
fstpt
int
in
je
out
es
xchg
movsl
dec
mov
jo
sahf
pop
or
cwtl
in
add
jmp
cmpsl
add
ds
addr16
mov
sar
aaa
mov
repnz
inc
or
or
clc
imul
mov
addr16
pop
add
lcall
dec
movsl
lods
fbstp
loope
ds
fisubs
pop
pop
testb
cmp
sbb
jle
shlb
fnstsw
mov
jo
call
stos
push
mov
loopne
push
rcrb
insb
mov
add
jecxz
add
add
imul
movsb
and
sub
pop
mov
add
add
inc
mov
insb
out
lahf
add
daa
mov
mov
ret
hlt
mov
jns
bound
sub
mov
mov
je
mov
ret
test
cmpsb
shrl
ja
add
pop
jecxz
jle
cld
xor
mul
out
insl
pusha
mov
mov
inc
enter
pop
lcall
cmc
dec
adc
in
imul
leave
and
sub
adc
cmp
inc
dec
cmp
dec
pusha
mov
cli
sti
push
mov
jb
aaa
dec
or
outsb
and
mov
lods
xor
mov
lahf
dec
icebp
ja
jle
clc
pop
mov
data16
popf
mov
mov
xchg
mov
inc
jo,pt
fwait
xchg
dec
loopne
fstl
rorl
imul
jle
push
jmp
xlat
adc
or
xor
inc
out
popa
inc
out
sub
mov
jge
jg
ljmp
in
lahf
mov
idivb
mov
add
add
fwait
xchg
pop
divb
mov
push
sbb
jge
fs
fistpll
sub
sbb
stos
cs
adc
and
insb
xchg
mov
mov
cltd
cmp
cld
outsb
cli
cltd
vmovaps
repnz
in
gs
les
loop
sub
nop
sbb
call
in
mov
push
nop
loope
xchg
or
jae
testl
mov
dec
sub
push
insb
lret
outsb
adc
jb
xor
loopne
sbb
cli
std
sub
ss
repnz
sbb
mov
lcall
iret
jmp
stc
sub
enter
pop
jnp
les
jecxz
jno
xchg
pop
push
and
jbe
push
or
loopne
lods
pop
add
mov
and
addr16
mov
jbe
sbb
jle
ror
imulb
cmpsb
inc
push
add
cltd
sub
out
inc
sub
or
and
sub
popf
add
add
mov
adc
pop
sahf
push
xor
in
cmpsb
push
aad
lahf
mov
jl
mov
pop
fbld
int
sbb
cld
out
enter
dec
jmp
ljmp
dec
int
push
adc
in
popa
addb
ret
jae
pop
and
jnp
sub
movsl
or
movsb
xchg
sbb
xor
lock
push
aam
testb
and
xor
scas
movsb
or
ret
mov
cmp
or
in
ret
jae
test
gs
icebp
sbb
xor
pop
cld
mov
jmp
lock
es
push
sbbb
dec
fsubr
es
out
outsl
mov
sub
add
cmp
jo
jbe
call
outsl
stos
mov
jb
and
clc
mov
ret
jbe
mov
daa
nop
jmp
xchg
mov
addl
outsb
cltd
mov
clc
mov
jo
pop
data16
add
loop
test
mov
cld
mov
leave
sahf
add
add
les
jne
into
clc
jbe
movsb
jmp
mov
xor
xor
sub
push
lock
add
cwtl
push
push
inc
inc
sbb
int
adc
jns
and
cmp
adc
xor
jecxz
cmp
cmp
hlt
ljmp
into
dec
mov
or
and
dec
aas
xchg
aaa
ja
or
push
mov
sbb
inc
mov
cmpsb
or
daa
pop
fimuls
fsubl
xor
jmp
scas
pop
test
push
pop
mov
add
das
pop
xchg
test
dec
and
fmulp
cmp
mov
add
ret
clc
pop
or
cld
cmp
dec
out
jno
lret
icebp
jnp
dec
xor
es
js
xchg
ret
in
or
decb
mov
imul
and
popf
push
sub
daa
inc
stos
sahf
into
mov
popa
push
outsb
popa
adc
add
or
lcall
sub
or
lahf
add
add
adc
mov
jle
or
std
inc
mov
cli
push
xor
xlat
das
jmp
add
mov
daa
bound
outsl
cwtl
int
add
in
push
adc
rcrb
mov
add
je
dec
call
or
mov
inc
xchg
xchg
mov
idivl
or
lret
ss
dec
cmp
cmp
imull
or
push
cmp
jne
or
fisubl
xchg
pop
and
pop
pushf
pop
inc
sbbl
xor
pop
imul
xor
jbe
sub
in
lea
sbbl
cli
mov
rcl
inc
pop
jae
pop
mov
xchg
imull
fbstp
lock
lcall
jecxz
hlt
mov
mov
jmp
ja
sbb
inc
xchg
xchg
lock
sbb
pop
pop
add
add
mov
inc
inc
add
mov
add
jmp
push
or
jo
addr16
xor
adc
ret
fiadds
comiss
daa
call
lods
cmp
mov
icebp
ficompl
push
sarb
dec
mov
mov
fdivrp
sub
stos
or
inc
xchg
mov
in
jecxz
clc
sub
pusha
sarl
das
xchg
cmpsb
arpl
fs
aam
xor
push
cmp
mov
sub
mov
iret
fwait
sbb
pushf
push
adc
inc
data16
xor
pop
mov
adc
adc
mov
xor
lods
add
xor
ja
movsl
movsl
jmp
pop
rorl
out
insl
mov
mov
or
cltd
cmpb
fadds
and
ja
and
scas
add
pusha
mov
push
js
jo
fucomp
mov
xchg
inc
xchg
mov
push
in
mov
inc
in
test
lods
push
fnsave
adc
xchg
add
add
std
inc
mov
push
jns
mov
add
scas
inc
movsl
or
sarl
sbb
sub
divl
inc
sti
xchg
fistps
pop
add
mov
add
xchg
push
fsubrl
fbstp
add
mov
das
jge
rclb
add
shlb
std
stos
dec
fucom
jl
or
dec
rorl
push
push
jo
pop
xchg
leave
cmp
sarb
jo
pushf
popa
fstpt
pop
ret
push
pop
jl
ds
sbb
aam
divb
out
lock
out
lods
sub
stc
ret
loop
xchg
sbb
mov
push
aas
notl
lcall
loope
mov
or
jno
push
xchg
xchg
mov
mov
xor
and
jle
arpl
sbbb
stos
popf
fsubs
mov
and
pop
ror
lea
cmpsb
cmp
push
mov
in
mov
aad
sti
push
xor
add
mov
or
lret
cwtl
or
add
add
inc
fdivl
push
dec
mov
frstor
add
insb
xor
scas
out
push
mov
cmp
mov
sbb
daa
mov
nop
push
mov
push
int
jb
fldenv
mov
repz
add
js
mov
xlat
bound
mov
mov
mov
pop
mov
into
and
and
xchg
adc
xchg
jle
mov
jo
and
dec
rclb
stos
out
jecxz
out
mov
mov
pop
hlt
call
daa
in
inc
lea
sub
add
push
adc
loope
out
lods
faddl
je
js
daa
xchg
scas
lods
ret
or
ficoml
fnstsw
sbb
mov
bound
fs
push
xchg
and
bound
jecxz
adc
mov
sbb
ja
loop
adc
sbb
add
aas
mov
ret
sub
notb
pop
loopne
sbb
add
add
sbb
mov
sbb
and
mov
add
mov
in
mov
popa
and
test
cld
je
mov
cmpsl
jae
push
pop
jo
cmpsl
cli
or
hlt
adc
cmp
or
loope
and
pushf
pusha
cmp
cld
mov
fldcw
xchg
and
xor
inc
int
mov
ja,pn
pop
jge
inc
mul
lret
and
pop
arpl
mov
inc
jl
ss
push
jg
mov
aaa
es
mov
ljmp
inc
sub
sbb
xorl
jbe
cmp
lret
insl
aas
ret
or
fisttpll
sub
mov
xor
cli
jae
nop
scas
popa
sbbb
and
nop
and
cld
lock
xor
ret
cmp
sbb
sarl
les
js
shlb
xchg
cwtl
shrl
mov
movsb
cmpb
es
push
and
dec
xor
xor
xchg
cmp
sbb
add
add
stos
hlt
jmp
cmp
jbe
pop
xor
dec
out
add
add
sbb
lock
and
xchg
push
test
stos
xor
shlb
dec
cmp
shrb
cmp
sbb
xchg
cwtl
jne
icebp
es
roll
adc
jl
in
cs
shr
push
sub
dec
filds
cwtl
fcmovne
jne
xchg
push
jp
shll
cmp
xchg
mov
jo
mov
outsb
or
out
mov
js
cmp
test
hlt
inc
add
xor
addb
inc
dec
jecxz
dec
cmpsb
add
mov
out
mull
loop
xchg
insl
jb
stos
inc
out
repnz
ret
jne
incl
lea
stos
ljmp
mov
pop
nop
lds
jb
sbb
xchg
out
pop
sub
mov
subb
sbb
vdivps
in
icebp
adcb
dec
sub
cmpl
loop
lds
test
addr16
or
add
add
out
xlat
out
jg
in
xor
movsl
add
add
sub
jae
imul
cmp
sbb
push
mov
xor
xchg
andb
xchg
pop
add
xlat
xlat
sub
pop
xchg
aam
pop
cmp
pop
pop
loop
ror
insl
lcall
jbe
idivl
mov
movsl
pop
mov
mov
int
push
mov
lods
repnz
mov
mov
mov
shrb
test
add
cmpl
mov
pop
lds
mov
insb
xchg
xlat
mov
leave
xchg
std
and
aam
fildll
dec
mov
hlt
dec
add
lods
push
ret
das
pop
mov
mov
push
push
adc
jne
cmp
push
mov
or
lret
cmpsb
loope
adc
jnp
ret
mov
scas
jae
pop
mov
fistpl
sarb
xor
jnp
lea
jb
testl
add
mov
inc
fwait
lds
jo
fldl2e
scas
fwait
xor
icebp
cmpsb
add
add
hlt
out
adc
dec
or
fidivrs
sbb
sti
ret
insl
rclb
jecxz
jg
xor
cmp
mov
adc
jecxz
inc
inc
jle
dec
mov
movsl
push
fidivrl
jne
mov
and
rorb
cmp
mov
cli
dec
adc
stos
pop
mov
sbb
xorl
sahf
mov
mov
xchg
xchg
sti
popa
out
cmp
test
mov
gs
cmp
push
xchg
pop
add
dec
inc
push
lcall
mov
and
and
mov
sbb
add
pop
jnp
dec
jae
add
sbb
out
dec
lock
xchg
pop
iret
daa
dec
jle
inc
shlb
in
in
ljmp
lods
pop
mov
fdivrl
lret
jae
push
add
das
jmp
cmpsb
mov
adc
jbe
lock
rcr
sbb
or
mov
add
add
mov
fadds
mulb
add
push
jne
sahf
outsb
fdiv
and
xchg
adc
cltd
inc
mov
sbb
sub
into
push
out
stos
dec
xchg
in
cmpsl
addr16
pop
pop
outsl
mov
mov
sbb
pop
scas
or
cmp
jmp
and
xor
sbb
repz
je
jp
push
adc
fnsave
lahf
dec
lcall
and
clc
scas
and
sahf
pop
ret
into
shrb
shlb
xchg
enter
push
stos
cmp
mov
and
inc
ret
jb
sub
inc
xor
in
sbbb
sub
push
mov
in
es
sbb
mov
xchg
sti
mov
lds
jns
out
test
and
outsl
test
mov
push
push
dec
adcb
pop
mov
hlt
pop
jne
movsb
add
add
mov
push
sti
jmp
push
mov
notb
push
lds
test
add
cld
cs
sub
sub
call
inc
dec
adc
sbb
dec
push
stc
mov
push
stos
lds
sti
jae
lds
movsl
and
les
add
stc
outsb
sub
sbb
imulb
mov
dec
test
shll
pop
cltd
fwait
mov
sahf
adc
fs
dec
cmc
imul
or
jo
pop
mov
testl
gs
xchg
sub
outsl
movsb
lock
out
mov
ljmp
mov
fs
shll
inc
sbbb
dec
out
xor
push
ss
pop
xchg
dec
sti
jo
popa
in
mov
mov
xchg
add
jnp
mov
fnstsw
pop
mov
mov
adc
in
dec
ljmp
dec
mov
insl
aaa
js
dec
movsl
subl
inc
or
jb
lods
loopne
inc
jl
fdivrl
arpl
add
mov
jecxz
lock
dec
mov
add
mov
nop
out
int3
dec
mov
pop
mov
rcl
push
pop
lret
fldenv
sub
dec
jl
mov
adc
repz
push
push
adc
lcall
cld
jns
xor
pop
into
add
cmp
jmp
dec
mov
add
or
and
fidivl
xchg
adc
in
xor
mov
iret
outsl
sbb
enter
push
jne
fdivrl
jns
jp
cmp
push
inc
push
cmp
shlb
xchg
imul
jb
add
lds
les
mov
mov
sbb
jne
pop
pop
and
dec
movsl
cld
inc
add
pop
icebp
pop
mov
cli
xorb
call
xorb
pop
sahf
xchg
loopne
xchg
clc
and
push
xchg
popf
out
push
roll
cmp
fcompl
cmpsb
mov
cld
lds
xlat
dec
inc
sbb
inc
in
jne
iret
push
popf
aas
cmp
call
xor
popf
imul
add
cld
mov
leave
test
sub
add
int3
mov
repnz
inc
jbe
in
sub
inc
xor
adc
adc
in
dec
cld
pop
pop
jecxz
sti
inc
dec
jle
cmp
out
pop
jnp
inc
pop
jl
ljmp
out
addr16
cwtl
sbb
sbb
lods
and
sub
pop
hlt
scas
push
inc
pop
xchg
aas
add
add
mov
test
sub
xor
jnp
push
imul
add
cmp
jmp
lcall
daa
into
xchg
outsl
push
fdivl
mov
xchg
stc
loopw
mov
andl
jb
jno
xor
add
adcb
or
arpl
or
lea
lret
jmp
in
sbb
cmp
js
sti
xlat
add
iret
aaa
out
mov
mov
sbbb
shl
ss
mov
pushf
lret
add
int3
inc
fwait
incl
mov
add
mov
dec
das
pop
out
cmc
mov
in
sub
add
lods
imul
stos
fiaddl
adc
pop
cmp
subb
sub
pop
dec
leave
push
xor
pop
xchg
nop
pop
je
xchg
aaa
jmp
push
cwtl
es
jno
dec
cmp
in
push
test
fistpll
fs
pop
lods
jg
jmp
dec
adc
dec
test
int
push
xorb
xchg
dec
sub
sarl
mov
scas
push
mov
shll
mov
fwait
dec
pusha
add
and
add
stos
repz
adc
jne
push
lret
pop
adc
stos
jge
enter
pop
sub
lret
lcall
cmp
pop
adc
sarl
or
mov
in
pop
sub
mul
mov
or
out
fidivrl
jo
push
test
clc
ja
and
fbld
js
sbb
add
cmpb
nop
inc
add
sbb
pop
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
adcb
shrd
add
xor
ja
add
cwtl
adc
jmp
inc
das
xchg
mov
test
mov
out
pop
pushw
cmp
inc
lret
mov
mov
leave
in
clc
inc
push
lock
idivb
mov
jecxz
fcoml
push
mov
inc
push
pop
mov
shlb
jns
das
sub
inc
call
sbb
xlat
mov
loopne
push
faddl
cmp
push
es
ds
pop
arpl
scas
gs
and
mov
jb
xchg
cmp
xchg
mov
sbb
sar
adcl
cwtl
push
jmp
pop
mov
push
push
cltd
sub
cli
cmp
jge
mov
xchg
movsb
inc
push
mov
push
xor
mov
cmovp
fimuls
out
outsl
les
subl
in
pop
dec
adc
pop
int3
adc
shrb
xor
mov
stos
dec
dec
or
add
add
fidivs
loop
ljmp
ficomps
jle
adc
add
add
cmp
fiaddl
fcmovbe
jne
cmp
push
mov
cmp
por
mov
mov
outsl
xor
cmp
mov
stos
inc
inc
es
push
sbb
jno
rorl
mov
pusha
cmpsb
pop
cmp
arpl
jl
divb
andl
fldl
push
sbb
mov
leave
cmp
mov
pushf
pop
pop
test
adc
and
daa
sub
stc
pop
rcrb
push
dec
sub
sbb
inc
mov
pop
les
loope
loop
dec
mov
test
sarl
pop
popf
add
pop
sub
aas
sub
xor
es
mov
xor
xor
cmc
dec
test
insl
js
add
sarb
iret
ror
notl
sbb
lcall
fidivs
fldz
pop
dec
push
fdivs
xchg
fyl2xp1
cli
jmp
add
add
xchg
jg
jmp
std
mov
in
xchg
scas
add
add
mov
xor
int
bound
cmp
imul
or
aaa
cld
sub
push
adc
arpl
mov
xchg
jecxz
pop
pop
mov
ret
and
cmp
cmp
lea
lret
into
xchg
adc
push
repz
and
adc
ret
lock
loop
test
lods
in
test
adc
mov
xor
outsl
xor
ss
fs
xlat
mov
fsts
inc
pop
lret
xchg
xor
jge
xor
dec
stos
cmp
add
push
push
xchg
enter
adc
pushf
out
pop
loopne
mov
xor
pushf
jecxz
and
sub
cs
cmpb
xor
mov
ret
inc
pushf
das
les
mov
flds
in
and
lods
mov
mov
add
xor
inc
mov
aad
push
mov
add
and
mov
mov
jnp
movsb
cmpsb
add
mov
mov
bound
xor
mov
jo
pop
sub
stos
and
test
in
mulb
xlat
int
notb
fiadds
cmp
mov
sub
jge
aas
ret
daa
adc
or
inc
dec
lret
dec
loopne
pop
pop
inc
mov
jmp
clc
cmp
pop
add
or
js
popf
jo
push
dec
inc
leave
dec
in
sti
pushf
mov
pop
aam
push
and
adc
cmova
inc
jno
orl
pop
repz
icebp
push
push
lods
sub
cmp
sahf
loope
inc
jo
int3
and
je
sahf
jns
sbb
or
cld
dec
lret
pop
test
inc
push
inc
push
in
in
cs
push
int3
lods
ljmp
test
inc
jno
xor
pmaxsw
xchg
ret
out
push
and
add
por
add
add
xor
cmp
inc
call
jl
mov
add
push
in
in
adcb
mov
and
jns
or
repz
sldt
lods
xor
fists
inc
pushf
or
cmp
cltd
fdivrs
sub
xchg
cmc
mov
add
ret
sbb
jg
arpl
cmpsl
cs
mov
cwtl
adc
repz
adc
daa
cwtl
or
pop
call
stos
add
stos
mov
add
dec
pop
pop
andl
xor
adc
dec
popf
addb
add
xchg
jbe
sarl
into
jge
rol
js
out
and
adc
add
std
test
xchg
mov
adc
adc
sti
in
or
sti
daa
icebp
mov
dec
es
icebp
xor
add
js
cmp
cmpsb
push
fisubl
es
fcmovne
pop
pop
cmc
dec
mov
jnp
movsb
pushf
loop
push
dec
std
daa
jo
xchg
test
add
mov
sub
jno
cmp
js
fisubs
add
add
jp
les
mov
arpl
mov
add
jbe
hlt
cs
or
sub
pop
cltd
lea
dec
add
and
push
mov
push
sbb
movsl
cli
push
jno
cmp
mov
dec
ja
repnz
les
lret
out
nop
xor
std
jge,pn
push
popf
in
mov
js
ret
add
fwait
adc
icebp
xchg
mov
pop
mov
loop
mov
jmp
cmp
ds
out
push
movsb
xchg
outsb
lods
push
cmp
lret
lret
repz
sbbb
add
or
jae
jecxz
lret
aas
xor
jp
adc
fisttpll
enter
dec
push
push
push
jecxz
fsubrl
dec
add
ljmp
test
jae
addr16
fimull
xchg
or
or
inc
mov
insb
dec
dec
dec
sbb
push
out
fwait
jp
xor
inc
inc
sbb
mov
add
dec
or
pop
stc
out
push
pop
bound
gs
add
add
or
push
xor
aas
mov
xor
outsl
mov
dec
arpl
out
inc
ja
and
push
out
and
pop
jne
insl
test
mov
stc
repnz
daa
rcll
pop
dec
out
jae
xchg
mov
imul
repz
mov
les
aam
or
ljmp
hlt
dec
cmc
mov
cmpsb
out
aas
or
add
pop
sahf
in
rcrl
jnp
sbb
xor
mov
xor
repz
jns
sti
fiadds
jge
xchg
push
ja
push
inc
xchg
jb
subl
mov
aad
ja
sbb
outsl
mov
add
aam
add
ja
inc
ficoms
shrb
lock
dec
sti
repz
mov
add
pop
push
jmp
aas
stc
or
inc
add
aad
lret
add
push
adcl
loopne
add
lds
cli
lcall
push
xor
add
sbb
addr16
push
and
cmp
cli
add
loopne
fs
adc
xor
dec
and
adc
ss
add
dec
clc
xor
adc
sbbb
cmpsl
mov
repz
cs
pushf
jg
jp
adc
or
jmp
je
shlb
loop
pop
adc
stos
mov
sbb
jmp
jge
inc
pop
imul
mov
data16
daa
add
sub
lcall
sti
sahf
mov
outsb
movsb
cmp
xchg
push
cs
fadds
inc
in
inc
cltd
or
push
mov
push
sub
in
std
loope
xchg
mov
call
xchg
subps
sbb
js
mov
scas
xchg
inc
inc
add
mov
pop
mov
sbb
mov
cld
jo
mov
into
cmp
sub
cmp
dec
xor
add
xorl
insb
lret
pop
aad
mov
add
pop
pop
pop
add
call
lods
jmp
subb
or
enter
add
data16
inc
push
popa
mov
sub
pop
shlb
push
mov
jmp
cmc
out
imul
jnp
cmp
mov
test
add
lcall
sbb
push
pop
pusha
add
sub
dec
ds
push
sub
arpl
fcmove
mov
rorb
dec
mov
mov
adc
xchg
xor
jecxz
sarl
ja
or
push
push
jb
sub
dec
mov
or
mov
dec
repz
insb
mov
mov
mov
push
jbe
adc
mov
inc
js
mov
into
jbe
xchg
dec
jge
jg
cwtl
js
jecxz
and
loopne
fcompl
dec
add
push
pop
cmp
popa
jae
mov
jmp
xchg
flds
add
dec
pop
pop
sbbl
fstp
rorl
popa
and
mov
add
loop
or
mov
frstor
in
dec
cmp
jne
test
xor
test
cmp
daa
arpl
movsb
xchg
mov
lods
loope
movsb
ja
mov
mov
mov
mov
addl
dec
addl
ljmp
and
enter
dec
jecxz
das
jnp
mov
inc
or
inc
pop
icebp
push
jbe
add
pop
inc
stos
sbb
addb
loope
out
push
sbb
pushf
sbb
jb
xchg
bound
and
adc
insb
push
sti
ffree
push
popf
sbb
sbb
and
adc
or
mov
inc
or
inc
out
in
neg
dec
enter
mov
stc
aas
mov
sub
inc
popa
jb
roll
lods
mov
inc
adc
jmp
cmp
xor
loope
mov
jecxz
out
mov
mov
add
add
jg
pusha
mov
inc
out
pop
adc
lahf
nop
mov
cs
in
aas
jmp
push
movb
lods
ss
loopne
sti
adc
scas
sbb
dec
jnp
add
movsb
xchg
xor
fmulp
insb
repz
subb
movaps
sbb
jg
adc
inc
mov
lock
mov
and
cmpsb
call
add
and
adc
pop
fldenv
ficomps
dec
sub
cmc
add
cmpsl
jne
arpl
leave
rorb
xlat
push
loop
push
mov
scas
ja
push
jge
cmp
jbe
push
repz
gs
adc
mov
mov
push
dec
imul
jl
cli
movsb
out
andb
ret
mov
push
imull
pop
das
imul
pop
mov
mov
sub
scas
mov
mov
xor
fwait
test
inc
gs
adc
sarl
push
andb
add
std
test
jg
into
lret
orl
add
add
out
testb
mov
pop
jmp
add
aam
add
dec
adcl
cmpsb
or
fs
and
push
mov
cmp
sbb
std
lea
or
sahf
flds
aaa
dec
dec
lea
fmull
xor
jb
std
ja
jp
push
test
repnz
les
test
or
adc
sbb
rorl
insb
out
jns
fwait
mov
aas
add
mov
repnz
xor
loopne
jns
add
pop
push
or
jo
lea
aas
add
xor
aaa
bound
lahf
mov
mov
test
fstpt
fdivrs
xchg
mov
stos
jp
and
dec
out
loop
dec
push
out
into
dec
outsb
cs
icebp
imul
push
or
pop
lds
jecxz
cmp
sbb
repnz
adc
sub
add
add
add
adc
in
lcall
jae
dec
mov
add
add
add
xchg
jmp
cwtl
push
xchg
pop
nop
jns
cmp
push
mov
push
cmpsb
imul
xor
add
dec
movsb
and
lret
sbb
insb
cmp
or
cmp
mov
es
jns
cmp
lcall
sti
call
push
lock
dec
pop
dec
mov
adc
faddl
cmp
mov
mov
sbb
addr16
cmp
xchg
cmp
pop
sbb
outsl
insl
in
insb
xchg
mov
mov
mov
test
sbb
mov
mov
dec
add
int
or
out
adc
sub
popa
lea
pop
stc
ds
add
es
subb
cmp
fistl
lds
jle
dec
xchg
and
sub
ljmp
add
dec
or
jg
dec
arpl
jb
mov
add
mov
movsl
sub
cwtl
jmp
pop
pop
jnp
adc
ret
mov
push
mov
dec
xchg
xor
ror
cmp
or
fidivl
xchg
inc
clc
adc
inc
inc
sahf
inc
jg
xor
mov
lock
or
mov
inc
push
lods
mov
imul
aas
sarb
psubusw
inc
idiv
push
push
add
lods
roll
cmpsl
mov
and
lock
lods
movsb
add
mov
push
out
iret
mov
add
xchg
in
sbb
je
mov
sbb
aam
mov
dec
sbb
fsts
xchg
pop
dec
call
bound
aam
data16
jmp
xchg
lock
push
or
cmp
xor
daa
or
inc
sub
les
call
inc
test
xchg
sub
mov
cmp
cmp
pop
stos
dec
mov
insl
sbb
outsl
mov
push
mov
add
add
and
add
leave
jae
dec
inc
pop
mov
shrb
pop
mov
sbb
mov
dec
push
mov
sahf
push
xchg
cmpsl
cmp
mov
fsubl
ds
mov
insb
out
or
js
rorl
jnp
repz
fistl
push
pop
adc
jge
mov
iret
cli
and
lds
inc
jnp
addb
adc
shrl
mov
push
push
xchg
pop
std
jp
pop
sbb
js
loop
into
cs
fs
mov
mov
scas
xor
cmp
mov
out
xor
arpl
sarl
cmpsl
or
daa
mov
dec
pop
adc
dec
and
xchg
insl
cmpsl
in
loop
daa
ret
aam
ja
lret
push
adc
xchg
in
push
jb
jg
adc
je
mov
inc
xchg
movsl
inc
mov
insl
and
and
add
xor
mov
pop
xchg
lret
inc
cwtl
pop
mov
add
cwtl
xchg
push
scas
lods
loop
scas
sub
dec
inc
dec
fmull
push
cmovb
cmpsl
push
jo
movsl
mov
sub
in
popa
cmp
sbb
sbb
or
popf
add
inc
int
mov
lock
nop
addr16
pushf
mov
iret
sti
push
in
imul
xlat
in
sbb
ljmp
push
cwtl
scas
adc
adc
scas
movsb
shr
fnstcw
pop
cmp
lods
cmc
mov
inc
js
sti
sbb
rolb
out
dec
mov
xchg
movsb
movsb
or
clc
cmpsb
mov
xchg
dec
push
and
movb
addr16
dec
pop
int
call
sbbb
inc
xadd
push
and
adc
adc
cs
mov
and
jmp
cmpsb
dec
add
xor
sub
jle
mov
jle
movsb
sarb
pop
inc
insb
add
mov
mov
sub
add
add
fistpll
call
add
mov
add
imul
mov
adc
lds
loop
flds
sub
fnstenv
jnp
adc
fimuls
add
jle
call
mov
jnp
sub
xchg
add
out
cmp
cmp
mov
or
inc
aas
and
bound
inc
imul
add
cmp
push
rorb
cltd
jbe
cs
hlt
inc
rcll
les
adc
jnp
and
cmpsb
mov
mov
jg
daa
lds
lahf
fsts
cwtl
enter
test
adc
dec
fistl
jb
sub
cmp
test
xchg
inc
dec
and
insb
aas
into
push
out
xchg
mov
je
mov
popf
cmp
pop
imul
cli
jmp
pandn
sarb
adc
aas
cmp
push
push
push
or
mov
jbe
inc
scas
std
inc
dec
add
add
std
sti
leave
sti
iret
jmp
mov
sbb
add
test
push
sub
and
sbb
fstps
push
test
popa
fwait
mov
inc
lds
shll
aad
jnp
test
stos
gs
xchg
xor
ljmp
mov
cmp
cmp
andb
stos
mov
ret
loop
test
int
shl
pop
loop
aas
icebp
hlt
inc
sub
pushl
rclb
out
cmp
loopne
mulb
movl
orl
adc
sbb
xor
add
xchg
insl
lds
lcall
cmpb
sbb
es
popa
inc
cmp
jb
fbld
scas
iret
xchg
pop
mov
sub
xchg
pushf
fwait
imul
jg
stc
sub
fdivrl
sahf
cs
jae
xchg
data16
push
sub
and
int
sub
clc
xchg
sti
cmc
cmp
sbb
mov
add
mov
xor
push
mov
add
mov
add
inc
xchg
jge
sub
lea
sti
mov
roll
gs
sbb
dec
push
mov
fildl
nop
das
jle
punpckldq
dec
das
mov
pop
adc
out
mov
sahf
cmpsb
fistpl
adc
inc
and
cmp
push
cmpsl
or
jmp
xor
jecxz
push
xchg
loop
xor
leave
mov
pushf
mov
pop
adc
sub
je
repnz
enter
sbb
sub
mov
pop
stos
hlt
int3
das
sahf
mov
arpl
cs
dec
jecxz
in
mov
popf
mov
sti
lret
test
pushf
adc
js
into
xor
pusha
pop
pop
push
cmp
push
xchg
cmpsb
jne
dec
jp
sbb
or
jae
ret
insb
mov
loop
inc
sbb
jbe
pop
mov
cmpsb
faddl
add
fwait
mov
or
jg
mov
sahf
loop
xor
add
add
and
lds
cli
shll
xor
clc
pusha
arpl
lret
and
sub
scas
sub
hlt
push
add
pop
out
inc
cltd
andl
loopne
mov
pop
dec
testb
inc
lcall
outsl
hlt
and
adc
repz
sub
ss
cmp
dec
or
aam
hlt
push
cli
addr16
dec
jb
sahf
jb
int
and
lds
aaa
mov
into
ja
mov
push
jecxz
xchg
mov
jno
lret
popf
sub
leave
and
loopne
mov
mov
add
jle
mov
sub
mov
pop
push
shrb
xor
mov
adc
in
shrb
xchg
pop
lds
mov
adc
sbb
negl
adc
pop
fwait
aam
mov
sbb
fists
mov
xchg
xor
and
jg
jne
int3
ss
xor
push
cld
pushl
cld
sbb
jae
add
add
test
add
outsl
xchg
pushf
leave
xlat
and
movsl
repnz
pop
push
xor
mov
or
fisubrs
dec
sbb
mov
xchg
xchg
std
clc
js
fwait
mov
jp
mov
push
ret
and
cmpsb
es
aaa
push
les
je
mov
nop
mov
std
std
ret
and
cmp
fisubs
add
notb
dec
and
jge
stos
dec
mov
cmp
pop
in
cwtl
or
pusha
sti
hlt
aas
ja
call
insb
adc
dec
enter
xchg
jns
cs
mov
ffreep
cltd
xchg
dec
outsl
stos
imul
mov
dec
inc
sbb
sbb
mov
sarl
jno
mov
cli
out
fists
dec
mov
pop
or
fs
xchg
lahf
lea
xchg
les
lcall
in
add
add
pushf
shrb
lcall
xor
add
add
fldl
fnstsw
in
or
cmp
pop
loopne
ss
sub
dec
les
push
stos
mov
jo
pushf
inc
jge
gs
in
loop
aaa
popf
xor
sahf
jmp
mov
or
pop
fucomp
push
mov
xchg
ret
jge
inc
sbb
jge
adc
test
nop
inc
cmpsb
movsb
test
and
ror
adc
dec
cmc
pop
popa
in
shll
out
xlat
lock
xchg
cli
int3
cld
incl
push
icebp
cmp
outsl
xchg
sbb
faddp
stc
jo
or
dec
push
into
xchg
sub
decb
pop
lods
dec
add
jle
outsb
dec
sti
rolb
sbb
stos
mov
imul
aad
xor
cld
push
fld
mov
push
jg
shrb
mov
add
repz
and
add
sub
scas
mov
aas
scas
repz
jge
add
add
jmp
push
or
aaa
sarb
fsubrs
fiaddl
pop
jg
incb
outsb
jmp
fwait
adcb
test
jae
repz
xor
xchg
popf
and
fdivrp
dec
cmp
adc
inc
lods
lret
out
mov
pop
xor
fwait
adc
push
push
dec
sbb
cmp
mov
mov
fdiv
imul
sbb
scas
push
nop
and
out
and
addr16
mov
test
ret
jbe
lock
imul
or
in
in
jmp
cmpsl
ss
mov
fcomps
push
mov
loopne
ljmp
int3
sub
scas
iret
push
xchg
loope
arpl
aas
xlat
jae
lret
test
jae
repnz
jne
dec
cwtl
decl
fidivs
pop
out
xlat
test
and
inc
data16
shll
xor
mov
mov
add
and
add
jne
int
ss
pop
or
jno
xchg
cmp
sar
cmp
add
add
jne
jne
jg
loop
mov
sbb
add
add
push
lahf
push
cld
out
lock
popf
cmp
dec
pop
ret
std
loope
imul
mov
xor
mov
int3
fsubs
dec
or
lahf
mov
push
push
push
jbe
bound
arpl
pusha
inc
stos
push
jb
xchg
lret
out
adc
sbb
and
or
mov
sub
xor
and
cld
and
ret
dec
out
scas
insb
xor
jecxz
call
pop
jne
movsb
negl
cmpsl
cli
div
andb
ffree
add
push
cwtl
aas
sbb
repnz
dec
lods
xchg
out
and
test
lea
inc
gs
pop
add
jno
mov
mov
mov
in
xchg
rcr
cmp
mov
test
mov
mov
mov
fisttpll
fs
dec
or
mov
jnp
xchg
lcall
pushf
ficomps
sub
mov
ss
and
ret
scas
in
ret
dec
add
add
dec
pop
mov
cmc
mov
mov
add
adc
and
loopne
mov
inc
sar
fbld
push
stos
lds
jns
test
cwtl
mov
ret
cmp
add
aas
jle
js
lds
add
adc
jp
mov
push
das
mov
repz
push
mov
cmc
pusha
movsl
test
cmpsb
or
repnz
dec
movsl
out
cs
lock
mov
jl
cs
mull
pop
stc
mov
punpckhbw
mov
push
ficoml
in
sbb
add
sbb
mov
xchg
cli
mov
sbb
sub
std
mov
scas
mov
jle
dec
adc
adc
sub
nop
pop
imul
or
test
aaa
subw
or
jle
mov
or
filds
cld
inc
rcl
mov
aas
sub
movsl
popa
xchg
ljmp
add
add
outsb
jle
lods
testl
movb
add
aaa
sbb
shlb
mov
dec
loopne
jbe
jg
cmpsl
loopne
fistpl
push
xlat
xchg
test
adc
clc
and
lods
pop
push
pop
mov
clc
fistl
int3
xor
mov
jmp
pop
hlt
adc
leave
setno
ds
or
shlb
shl
sbb
inc
add
sahf
test
insb
jl
call
jg
jns
ljmp
insb
lcall
adc
mov
jbe
aas
sbb
mov
xchg
orl
aas
nop
loopne
add
adc
jno
in
push
pop
and
dec
add
dec
add
inc
bound
gs
push
mov
cld
stc
fisubs
cmp
loope
mov
movsl
movsb
sub
push
push
xor
aas
loopne
cmpsb
testb
push
dec
pop
jge
pop
aad
mov
addr16
pop
je
cmp
mov
repz
sbb
add
add
mov
xchg
insb
and
icebp
imul
add
xor
mov
cltd
and
andl
dec
in
push
dec
xor
popa
arpl
push
loope
dec
outsl
cmp
outsl
mov
movsl
std
cld
out
aam
xchg
or
ficoms
stos
das
push
lcall
imul
and
lahf
clc
std
mov
lret
sub
pop
cli
fadd
mov
cmp
mov
outsl
or
jo
sbb
sub
in
add
mov
mov
jmp
mov
ss
and
daa
cmp
mov
orb
ret
cltd
ljmpw
cmp
mov
lea
repz
xchg
mov
jl
and
pop
and
lods
shl
lcall
repnz
aad
out
push
jle
and
out
add
fidivl
cmovae
aas
and
popf
mov
cli
imul
add
test
sbb
xlat
in
aad
mov
enter
add
add
xchg
lea
sub
or
repz
subb
sbb
jl
mov
orl
push
inc
and
xchg
and
push
adc
mov
aad
or
ljmp
test
mov
mov
adc
scas
jp
imul
dec
lods
popa
lock
or
clc
push
mov
xor
sahf
pop
push
adc
and
sarb
bound
fmull
insb
test
aad
mov
mov
push
test
outsb
xchg
repz
jp
add
outsl
jmp
mov
jns
sahf
lods
fisubs
int3
out
xchg
and
push
inc
pusha
xchg
ljmp
movsb
add
hlt
fnstsw
or
sarl
adc
pusha
jmp
js
jmp
cmpsl
jl
cmp
and
ja,pn
mov
mov
xor
add
add
push
sub
cmp
jg
and
mov
cmpsl
or
pop
fwait
leave
add
add
sub
inc
or
fisttpl
movb
push
adc
scas
aam
push
push
xchg
jbe
test
repz
xlat
into
xchg
xchg
es
mov
adc
bound
pop
movsb
pop
pop
cld
xchg
rcll
add
or
inc
add
or
mov
adc
ret
das
stos
push
xorb
fsubrp
mov
in
or
popa
lret
inc
int3
into
iret
loop
xor
xchg
repnz
pushf
lret
push
out
mov
push
or
out
cmp
mov
adc
jnp
sti
stos
mulb
push
mov
test
adc
decl
data16
imul
out
negl
xor
test
dec
out
test
add
xor
jno
and
fildl
lcall
fidivs
in
pop
add
popa
jge
std
lea
jne
add
jmp
ds
repz
fcoms
xlat
xor
add
add
je
dec
lret
stos
cli
mov
mov
mov
fcmovne
cmp
lret
scas
cltd
je
dec
dec
cmp
clc
dec
icebp
mov
popa
push
xchg
rcrl
push
mov
loope
rcrb
andl
jne
neg
cmp
in
mov
add
xor
cld
subb
push
inc
push
xchg
or
inc
fimuls
and
mov
cli
pop
cs
pushf
mov
dec
inc
test
or
xlat
xlat
fisubrl
inc
out
inc
sbb
mov
repnz
mov
sbb
addr16
test
ss
push
and
repnz
nop
cld
sub
mov
jnp
ljmp
dec
xor
mov
nop
out
test
xor
mov
adc
daa
lods
cltd
daa
fcoml
jg
fists
popf
shll
jae
lret
add
mov
mov
add
add
add
lea
lret
mov
fwait
mov
or
mov
mov
jmp
dec
ret
addr16
push
mov
ljmp
and
mov
in
fadds
push
rolb
jbe
inc
out
jns
adcl
cmp
jg
imul
dec
lcall
imul
fistpll
lds
push
jnp
js
mov
cwtl
xchg
ds
jbe
lea
daa
pop
and
out
adc
out
sbb
dec
fisttps
add
jnp
inc
dec
imul
sub
sbb
mov
xchg
out
cmpsb
out
in
sub
dec
push
repnz
int
movsb
in
sbb
test
pop
mov
jae
xor
inc
xchg
repz
out
sub
mov
dec
inc
mov
push
xor
add
add
enter
in
sbb
push
inc
hlt
out
dec
stos
int3
add
add
mov
bound
out
and
pop
call
xor
cmpsb
push
pop
sub
inc
dec
adc
push
lods
pop
gs
cltd
or
faddl
adc
fmul
hlt
xor
sub
sbbb
sub
stos
addr16
pop
cwtl
dec
sub
cld
jbe
adc
or
dec
pop
mov
paddusw
cmpb
mov
and
hlt
dec
mov
ss
test
inc
dec
add
ret
sub
ret
pop
je
and
stos
cmpsl
arpl
cs
mov
add
sbbl
jmp
imul
adc
addr16
xchg
add
push
ds
imul
xchg
insl
sub
or
addr16
and
mov
cwtl
or
clc
lcall
fwait
roll
nop
push
mov
lea
divb
sub
add
imul
cmc
call
inc
push
popa
cmpsb
out
jno
int
add
jne
mov
lahf
test
mov
add
stos
bound
repz
and
fs
push
pop
push
dec
and
lcall
adc
test
hlt
adc
sbb
cmp
jmp
sub
mov
hlt
cmp
repnz
pop
outsl
or
adc
lcall
and
and
sub
mov
subb
inc
sbb
int
dec
les
int3
mull
data16
push
mov
fwait
inc
or
sarl
scas
push
and
jbe
fwait
shlb
int3
out
dec
xchg
pop
cmp
xor
cmp
in
andb
std
mov
int3
out
xchg
popf
out
pop
inc
inc
aad
jne
dec
xchg
sub
cmp
adcb
mov
insb
out
insb
jnp
fisttps
push
test
and
andb
adc
jl
sbb
adc
pop
fdivr
adc
sbb
add
add
ja
iret
sub
aaa
mov
add
xor
pop
push
add
movsb
mov
hlt
xchg
in
rcr
arpl
push
fwait
xchg
mov
push
aad
aaa
loopne
lock
cmovbe
rcr
mov
mov
cmp
insb
movsb
or
cmp
inc
flds
push
sarb
rcr
mov
mov
aaa
mov
mov
in
dec
inc
push
fisubs
cs
inc
je
arpl
or
daa
shrb
in
stos
mov
lahf
iret
fxtract
jns
aas
lahf
xchg
push
xor
and
enter
fstl
aad
xor
inc
lds
and
xlat
mov
sbb
add
ja
or
push
out
in
xor
inc
and
jae
dec
fldt
inc
pop
sub
push
mov
pop
popa
call
rorb
addr16
leave
lret
mov
mov
out
out
out
into
gs
cld
test
jae
fistpll
add
add
jg
mov
in
mov
in
insb
cmpsb
add
sbb
pop
hlt
adc
test
jge
test
xchg
xchg
and
nop
aam
mov
outsl
mov
aaa
les
data16
cmp
adc
fistpl
jne
in
add
call
in
adc
push
jb
mov
fs
dec
mov
dec
in
std
adc
fstps
push
add
imul
js
adc
mov
dec
outsb
movlps
loope
aas
jle
rolb
mov
sarb
lcall
xchg
pop
gs
sbb
popf
sub
adc
mov
fdivrp
mov
push
subl
lea
and
je
inc
cmp
pop
or
inc
xor
inc
lret
js
lahf
xor
adc
mov
pushf
cli
jmp
fsubs
sbb
inc
dec
xchg
push
jmp
loopne
and
je
out
mov
mov
rolb
add
xor
aaa
xchg
jo
push
jae
rcr
pop
jge
add
push
push
loopne
mov
mov
jp
rorl
icebp
out
cmp
or
inc
pop
jo
add
icebp
push
cld
cmp
jb
dec
add
aad
cli
xchg
sbb
mov
ljmp
jmp
or
in
mov
sub
or
push
add
cmc
outsl
sub
add
xchg
test
cltd
adc
dec
xchg
gs
movsl
lock
icebp
out
in
and
push
in
mov
cs
cmp
xlat
xor
push
fwait
push
mov
jae
inc
leave
mov
ss
cmp
shl
enter
or
movsl
jno
pusha
xchg
mov
xor
ss
cmp
push
das
aad
push
push
or
or
lcall
jne
add
call
xor
add
add
dec
daa
dec
das
outsb
imul
push
xchg
xor
add
add
mov
pop
arpl
out
adc
pop
pushf
ret
xchg
out
jbe
outsb
cmc
jmp
push
xor
sbbl
or
in
in
and
or
test
cltd
lcall
mov
jmp
mov
stos
adc
inc
mov
or
mov
stc
aam
pop
mov
push
lcall
push
leave
pusha
mov
hlt
stc
out
jle
ret
cmp
bound
mov
addb
add
orb
mov
stc
psllq
call
addr16
test
mov
clc
aad
pop
xchg
lods
inc
and
add
xchg
dec
int
jae
subb
mov
jg
cmp
cltd
nop
mov
sti
sbb
or
imul
jge
sbb
and
call
mov
add
inc
out
test
xor
cli
inc
lds
pop
add
add
popf
mov
lahf
ret
or
mov
add
movsl
inc
andl
inc
jbe
icebp
ss
add
add
pop
std
out
bnd
jl
push
in
sbb
in
xlat
int3
mov
xor
repz
xor
pop
push
out
or
cld
adcb
mov
aad
cmpb
popa
clc
add
stc
popa
icebp
xchg
sbb
mov
adc
test
mov
arpl
popf
sar
in
adcb
lcall
mov
fwait
sar
stc
loopne
test
jg
ds
jne
pop
mov
xor
cmp
std
xlat
push
icebp
dec
sub
adc
popf
dec
mov
inc
and
mov
push
clc
ja
pop
jmp
mov
dec
lldt
xor
add
and
enter
xlat
inc
dec
dec
cmp
xor
push
add
insl
push
aaa
xor
bnd
in
mov
dec
fwait
mov
xchg
mov
add
mov
mov
mov
pop
xchg
or
in
das
jg
roll
add
popa
addb
mov
sahf
mov
lods
or
inc
and
dec
mov
push
jge
leave
mov
cmp
or
aaa
dec
movsl
inc
mov
test
in
cmpsb
jge
int
aaa
push
sarl
jl
scas
or
dec
and
or
cmp
or
xor
data16
jb
jno
and
inc
out
fiaddl
pop
xor
xor
sbb
outsl
lcall
stc
loope
loope
push
test
mov
adc
hlt
lock
cmp
pop
cmpl
pop
inc
mov
lock
inc
loope
push
mov
dec
push
jae
fimuls
lahf
jle
fstpt
mov
int
pop
xchg
xor
xorl
dec
jg
add
xchg
pop
out
xor
inc
lcall
scas
cmpsb
imul
and
call
xor
add
sbb
sub
dec
int3
and
rcl
add
add
mov
pop
cmp
imul
push
jno
cmp
pop
mov
xor
inc
cltd
jl
ljmp
lods
cmp
sub
gs
cmp
pop
push
icebp
pop
sbb
push
adc
mov
orl
test
push
add
jo
cmc
sbb
rcrb
stc
out
and
in
dec
int3
jo
int
xchg
jo
addl
sbb
mov
cmp
or
push
mov
fs
and
mov
push
and
pop
adc
dec
int
xchg
pop
rcrb
pop
js
nop
jne
mov
js
mov
movsb
int
inc
cwtl
dec
jmp
and
sbb
jb
loope
insl
fsub
push
popf
movsl
out
cmp
imull
push
das
and
dec
lds
xlat
xchg
rolb
cmpsl
inc
sbb
inc
and
faddl
into
add
add
ds
jae
lahf
sub
add
in
lods
dec
jmp
and
push
hlt
jecxz
mov
bound
jmp
bndstx
sub
aaa
lahf
pop
add
pop
jmp
xchg
bound
pop
and
jne
xor
dec
xchg
or
loope
sbb
xchg
sub
out
scas
fs
cltd
or
jns
loop
shlb
lods
jns
pop
and
push
cmp
imul
sub
repz
mov
mov
insl
or
and
cmp
mov
sarl
dec
mov
mov
push
das
arpl
sti
in
popf
jl
inc
movsl
mov
push
loopne
aaa
mov
jg
mov
stc
loop
sbb
jg
insl
and
cltd
mov
or
inc
xlat
dec
jg
addps
sub
inc
and
and
xor
cmpsb
out
popa
pushf
in
jno
cmp
xchg
movsl
int
call
add
add
lcall
jnp
loopne
neg
add
add
daa
push
aad
dec
mov
mov
push
mov
movsb
add
cmp
movsb
sbb
out
pop
in
xor
jbe
inc
pop
push
dec
js
mov
or
fiaddl
jnp
movsl
sub
leave
xchg
inc
in
pop
sbb
inc
and
mov
xchg
cmp
and
shl
adc
mov
jl
orl
and
adc
mov
popf
in
andl
xorl
jns
fs
pop
nop
ficoml
pop
sub
push
gs
loope
add
push
inc
sarb
out
lods
subb
sbb
movsl
imul
mov
push
mov
mov
jbe
shrb
sbb
or
inc
vshufps
data16
lea
sbb
pop
lea
jae
xor
mov
scas
add
add
xchg
ja
push
jg
leave
or
mov
outsb
clc
loope
add
add
mov
out
mov
mov
fisttpll
nop
sahf
aaa
mov
aad
fsubrp
repz
cmp
iret
push
jecxz
fisubrs
test
push
mov
jne
sbb
jge
fucompp
lahf
iret
mov
mov
ljmp
push
ret
or
daa
adc
sub
ja
test
scas
rcr
adc
xchg
add
cmpsb
rcrb
lret
mov
cmp
ds
pusha
hlt
add
aam
lods
das
fabs
fs
pop
sub
das
add
dec
mov
push
fsubp
dec
stc
lret
xchg
push
jne
aaa
filds
mov
adc
adc
and
fmull
loope
adc
sub
test
fistpll
inc
pop
ljmp
pop
std
and
out
loopne
push
inc
inc
insl
xor
xchg
shlb
insb
test
sub
add
add
int
out
out
imul
nop
xchg
movsb
sub
fucom
fadds
add
push
iret
or
pop
push
inc
sti
sub
loop
dec
fs
mov
xor
int3
lds
mov
icebp
mov
cmp
pushl
and
and
adc
sahf
rorb
push
rol
push
icebp
fs
adc
outsb
adcl
js
loope
add
out
xor
mov
xor
shlb
jp
mov
test
add
clc
cmp
pop
push
inc
inc
xchg
inc
nop
pop
jbe
xorl
push
pop
lret
testl
cmc
adc
addb
cltd
fwait
adc
xchg
in
inc
cwtl
sbb
mov
xor
pop
push
add
enter
in
xor
movl
mov
mov
mov
adc
mov
jge
dec
negb
out
stos
test
icebp
and
dec
mov
jl
dec
push
shrb
and
nop
ja
xchg
add
psubusw
push
in
sub
fsubr
flds
add
scas
stos
jg
mov
adc
or
iret
mov
push
mov
lds
jno
rep
ja
gs
dec
push
or
add
pop
mov
and
inc
insb
ficompl
shld
mov
mov
test
xchg
repz
es
stc
mov
int
mov
add
cmc
lods
mov
in
rcll
imul
cmp
rcrl
mov
out
outsb
sbb
les
das
lahf
push
jecxz
add
rclb
in
jae
push
mov
jp
xchg
pop
fidivs
or
xchg
xchg
mov
insb
sub
xor
xchg
push
xor
aaa
sarb
popa
pop
xchg
pop
and
jo
sarl
pusha
lcall
mov
mov
cmp
sti
ljmp
sbb
jle
je
jmp
mov
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
lock
add
or
outsl
sub
dec
test
pop
fnstsw
sub
lret
and
shlb
cli
cmp
cmc
out
xor
sub
stc
into
pcmpeqd
in
ficompl
idivb
aaa
imul
pushf
pusha
and
xchg
adc
jecxz
add
pop
dec
and
mov
je
fmul
or
in
cmp
pandn
jo
in
shrb
and
sbb
jp
or
xchg
xor
inc
int3
cmp
mov
xor
test
data16
pop
leave
lock
xchg
lahf
mov
idiv
xor
push
sti
in
fildl
fnsave
popw
inc
or
imul
add
lret
sbb
pusha
jbe
fs
xor
fmull
jl
movsl
and
mov
xchg
jge
sar
aaa
adc
dec
sqrtps
pop
dec
add
popa
sub
jns
inc
sub
mov
ja
cmp
pop
dec
jle
jg
std
fstpt
bound
cmc
fildl
add
sub
add
xor
adc
dec
fwait
pop
jae
mov
sbb
cmp
ljmp
xor
dec
lock
movsl
or
mov
insb
mov
mov
fmuls
rclb
sub
addr16
mov
rcll
int
push
jae
add
pop
push
push
out
sbb
fistps
ret
mov
scas
lock
mov
ss
insb
enter
xor
pop
jnp
fsub
mov
inc
out
mov
scas
xor
xor
push
sbb
sbb
sub
dec
aas
pop
mov
hlt
adc
shl
mov
add
pop
loopne
adc
call
push
call
and
mov
gs
pop
push
ss
std
push
jge
cmp
in
jnp
hlt
sub
xor
mov
scas
pop
push
jb
mov
xchg
iret
sbb
mov
add
add
mov
sti
idiv
lods
pop
sbb
fists
faddl
add
mov
push
or
imulb
sub
psubusw
and
adc
fwait
mov
call
dec
pop
nop
out
pop
jl
out
loop
mov
shlb
fdivl
lret
cli
js
or
shlb
repz
iret
dec
jnp
repz
cs
pop
testl
cmp
xor
xchg
xchg
pop
mov
push
out
or
inc
cwtl
lret
cmp
lods
pushf
imul
loope
xchg
pushf
ret
and
int
bound
les
and
and
in
mov
aam
add
jle
daa
mov
inc
fistl
scas
mov
mov
mov
clc
int
mov
cmpsb
fldcw
sub
testl
aam
xor
jp
test
jno
xlat
lcall
xchg
rorl
xor
imul
lods
cmpsb
push
inc
shlb
add
add
sbb
jmp
scas
inc
call
fldl
add
inc
aad
xor
xor
mov
jnp
mov
add
and
aas
add
lock
ljmp
or
pop
mov
lcall
adc
es
push
sub
xor
mov
nop
stos
imul
out
idivb
mov
fbld
jbe
or
leave
xor
std
and
or
xchg
bound
ja
inc
mov
repz
in
dec
jle
cld
andl
inc
xor
or
addr16
dec
sbb
mov
adc
xor
test
ss
lahf
cmc
xor
cs
inc
xchg
stos
mov
pop
add
xchg
cmp
and
cmpxchg
lret
cld
push
mov
mov
add
sahf
es
cwtl
adc
lods
andps
ret
fsts
xchg
sbb
inc
inc
popa
test
cmpsl
mov
jp
roll
add
cmpsl
fimull
faddl
rolb
add
add
sub
js
mov
lods
and
in
xor
in
scas
push
jp
inc
icebp
ds
pop
shr
pusha
mov
leave
int
scas
sbb
jbe
test
mov
pop
xchg
ficompl
loop
xlat
sbb
push
pusha
inc
sub
push
mov
loope
xchg
mov
aam
pop
mov
pop
insl
fstp
inc
add
mov
mov
and
xchg
mov
andl
mull
in
xchg
jecxz
push
mov
aam
std
xchg
incl
pop
or
mov
aad
dec
mov
add
pop
int
popf
push
test
inc
and
push
cwtl
loop
adc
mov
loope
lahf
pop
fidivrs
dec
mov
dec
xchg
jo
dec
pop
sub
mov
sbb
mov
push
outsb
mov
adc
push
xchg
dec
scas
mov
mov
mov
sbb
xor
add
add
mov
lcall
fisttps
or
or
add
add
loope
mov
xor
dec
inc
xchg
pop
fisubrl
cwtl
stc
fsubrl
loopne
clc
leave
sbb
push
pop
pop
cli
jle
mov
push
cmp
cmpsl
loopne
mov
std
imul
cwtl
push
insl
iret
sbb
iret
jle
rcll
movsl
stos
fs
dec
and
add
jo
xchg
mov
scas
push
mov
sahf
sub
jno
jle
out
cmpsl
fs
loopne
sbb
arpl
or
ss
in
in
sbb
jb
lods
pop
hlt
xchg
mov
sub
je
fbstp
inc
cmp
cmc
popa
fdivp
test
cwtl
pop
add
add
scas
pop
in
rorl
into
sbbl
mov
push
cmc
pop
cmc
arpl
mov
sahf
pop
pop
cmp
pop
push
mov
daa
push
pop
movsl
cli
or
std
jmp
mov
out
jecxz
in
cld
push
inc
mov
adc
jne
push
mov
sub
jp
add
sbb
jns
xchg
xchg
mov
adc
mov
loope
add
or
popf
fisubrl
in
out
dec
push
lcall
sbb
out
mov
addb
clc
ss
icebp
sete
xor
subl
mov
add
mov
adc
fisubrs
pop
xchg
jle
adc
arpl
mov
test
dec
sahf
or
js
add
push
loope
push
int
mov
pop
test
or
aam
xor
ret
and
cli
aaa
mov
cmpl
mov
fnstenv
add
jns
sub
imul
std
fcoml
xchg
or
clc
pop
or
sarl
fimuls
flds
add
jle
es
add
je
js
test
movsl
fwait
or
rep
in
adc
dec
jae
mov
xor
in
scas
mov
add
add
fadd
fsubp
jnp
or
cld
sarl
dec
jno
loop
add
test
dec
popf
into
notl
cmp
fidivs
loope
repz
xchg
sub
arpl
lcall
inc
out
inc
or
push
inc
and
pushl
sbb
pop
inc
push
adc
in
fwait
aas
insl
jl
scas
push
cmp
mov
popf
pop
stos
and
pop
mov
adc
inc
mov
and
pushf
cmovle
rorl
icebp
fwait
in
add
nop
push
push
shlb
out
push
push
jno
cmp
cs
fisubrs
mov
xchg
push
das
out
cmp
aam
pop
inc
aam
cmp
dec
cmp
daa
sub
aas
xchg
push
imul
adc
lcall
xor
fs
repz
aaa
mov
xor
cmp
cmpsl
cmovne
hlt
adc
mov
repz
mov
push
pop
scas
xor
pop
loope
pushf
inc
mov
popf
inc
lcall
pushf
pop
sub
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
jne
sbb
add
add
ret
popf
xchg
and
push
cmp
sbb
cs
push
out
std
mov
in
sbbl
mov
divl
leave
or
add
inc
jle
jecxz
int
add
scas
cmp
cli
dec
and
lcall
incb
add
xchg
inc
xor
push
xchg
mov
pop
pusha
xor
mov
mov
cmp
stc
loopne
ds
stc
pop
aad
pop
rcrb
dec
out
enter
je
inc
push
aas
ret
out
rcll
pop
adc
mov
js
mov
sbb
mov
dec
dec
dec
dec
jmp
mov
lcall
dec
pop
into
lods
out
test
fnstsw
dec
mov
sbb
aad
test
jbe
mov
adc
pop
rorb
ret
inc
mov
inc
dec
inc
inc
add
fdivl
xlat
mov
and
ret
push
test
add
lea
pop
jbe
ja
sti
aaa
out
ja
cmpsb
insl
pop
sbb
add
add
sarl
push
imull
stos
jecxz
out
jmp
test
push
mov
sub
sbb
aas
inc
int3
fldl
fsubrs
cmp
sub
push
adc
mov
add
fistpl
ss
call
xor
or
lods
mov
xor
fsubrs
xor
fidivl
fwait
les
push
fnstenv
cmc
jecxz
aas
mov
lret
sub
jge
adc
inc
mulb
aad
aas
jecxz
mov
lahf
adc
mov
jne
push
dec
jmp
push
imul
mov
aaa
js
pop
inc
hlt
jo
loopne
in
xchg
imul
mov
xchg
fists
lds
sbb
mov
sbb
or
mov
xor
paddq
lea
dec
mov
add
sbb
into
mov
add
add
ror
cltd
outsl
mov
aaa
pushf
jns
push
mov
add
icebp
aaa
xor
mov
cmpl
inc
and
dec
sbbb
int3
div
insb
lret
sub
or
pop
imul
sub
and
clc
mov
cmpsb
mulb
mov
jmp
or
fidivl
out
nop
pop
mov
cmpb
xchg
popf
jns
add
mov
loop
pop
mov
loope
jae
push
pop
test
xchg
movsb
jmp
xor
test
fimuls
insb
mov
stos
jns
mov
push
mov
cld
ds
sahf
sub
rcrl
mov
mov
push
lcall
aad
in
jno
jg
push
fisttpl
mov
pusha
rorb
xchg
inc
dec
pusha
cmp
or
xor
jno
mov
dec
cmp
stos
les
rcrb
sub
sub
pop
add
int3
adc
cmp
add
add
ja
lcall
mov
gs
out
add
fmul
xor
xor
jmp
loope
xor
dec
add
lret
push
repz
xor
ljmp
ss
test
pushf
mov
jecxz
enter
imul
or
or
push
vmovhpd
test
hlt
gs
mov
jp
xlat
cmp
fiaddl
jae
repz
shlb
cli
fs
xchg
xchg
jnp
add
inc
dec
pop
cmp
das
add
pop
lea
xchg
push
mov
popf
shll
inc
pop
fcmovne
dec
or
dec
add
inc
sbb
lret
std
cmp
lock
jne
pushf
sbb
mov
hlt
insl
rcrb
loopne
stos
dec
pop
mov
push
xchg
inc
jnp
push
lcall
and
arpl
inc
xor
insl
dec
das
fs
mov
push
or
add
add
mov
push
sub
xchg
xor
xchg
outsb
lret
jp
out
sbb
add
repz
lock
jg
in
and
push
or
add
ss
ret
lcall
pop
cmpsb
adc
mov
or
int
jecxz
xchg
xchg
mov
fwait
mov
outsl
fildll
ret
pop
mov
ror
in
dec
int3
cmpsb
add
xchg
mov
xchg
mov
jns
movsb
fdivp
and
cltd
push
push
or
dec
std
and
jns
fadds
loopne
push
pop
jle
adc
lea
jnp,pt
or
out
xlat
pop
sahf
int
or
insl
xor
arpl
mov
mov
hlt
filds
dec
adc
mov
movsl
xlat
cltd
pop
mov
inc
les
xlat
and
cld
out
arpl
and
add
xchg
cs
mov
jnp
xor
sbb
test
pop
call
push
js
in
dec
jbe
test
ds
mov
dec
lods
dec
repz
xor
outsl
dec
and
loope
loope
decb
mov
add
pop
xlat
fistpl
push
rcll
call
add
add
bts
outsb
stos
lcall
ja
add
mov
and
repz
nop
scas
dec
inc
add
xchg
pop
jg
jg
je
icebp
mov
sarb
pop
jb
insb
inc
mov
inc
fbld
push
push
jnp
adc
cmp
out
in
js
shll
xchg
pop
sti
or
scas
or
sbb
push
js
push
stos
mov
dec
int
jg
jp
loopne
jmp
movsb
xor
outsb
mov
xor
push
mov
into
dec
xor
mov
sub
rorl
mov
outsb
push
inc
jne
add
and
in
dec
xor
inc
in
inc
push
shrb
pop
idivb
and
insb
mov
xor
mov
daa
int3
inc
daa
aad
rclb
mov
mov
fisubl
aam
loop
loope
and
mov
cmpb
lcall
mov
add
add
mov
dec
js
stc
mov
dec
int
mov
jmp
add
jle
jge
clc
ja
adc
xchg
pop
mov
jmp
ljmp
xor
pushf
call
inc
movsb
xchg
repnz
scas
inc
pop
or
cmp
xor
sub
mov
xchg
fwait
or
and
cmc
or
pop
mov
push
xlat
aaa
or
aam
mov
inc
sti
jge
push
fnsetpm(287
cmpsl
jge
inc
clc
das
lcall
ret
popl
mov
fcompl
mov
movsl
inc
aad
adcb
and
out
cmp
sub
xchg
sbb
add
adc
dec
jmp
imul
lods
mov
sbb
arpl
xchg
adc
insb
mov
mov
mov
ret
js
sub
jb
out
inc
mov
inc
stos
pop
pushf
lret
daa
or
addb
cli
scas
push
sub
xor
pop
in
sbb
fwait
ss
add
mov
pop
insb
fildll
fwait
jns
jns
adc
cmp
add
add
adc
inc
outsl
stos
sbb
ret
mov
mov
xor
mov
push
xor
nop
inc
dec
pushf
cmp
popf
in
cwtl
add
jmp
push
icebp
mov
push
dec
cmpsl
jno
je
jmp
ret
sti
or
daa
mov
aaa
xor
inc
cli
inc
and
inc
shl
outsl
xor
dec
push
nop
je
loopne
inc
mov
xor
lods
sbb
and
mov
in
pusha
int3
fs
xorl
out
pusha
mov
mov
add
fstpt
ror
inc
je
push
fisubl
fidivs
cmp
movsl
sub
mov
sbb
or
dec
push
sete
fs
mov
mov
lret
imul
addr16
cmpsb
jp
mov
cli
mov
or
pop
dec
sbb
inc
add
add
mov
pxor
jnp
adc
jne
and
push
lea
add
add
or
fildll
rcr
mov
jp
cmp
sbb
call
xorb
pop
imul
mov
fisubs
fnstcw
pop
mov
add
outsb
ds
pop
mov
push
aam
add
out
jg
inc
xor
and
bound
data16
mov
std
fs
shrb
lock
add
xor
cmp
or
xor
or
repz
push
pop
out
inc
fcoms
out
cmp
inc
shll
push
jp
addr16
ffreep
xorl
ror
add
fs
movsb
add
aas
push
sub
fnstsw
sbbb
xchg
out
add
aaa
sub
mov
movsl
cli
roll
incb
daa
add
jae
push
jg
std
insb
mov
inc
pop
mov
in
xchg
mov
mov
or
mov
push
add
add
subb
fistl
das
xor
inc
pop
inc
in
add
add
push
push
xchg
mov
mov
sti
aaa
leave
fidivl
test
pop
push
adc
andl
repnz
cmp
addr16
pop
push
mov
mov
sbb
inc
push
xor
xor
cmc
jge
mov
hlt
pop
pop
dec
xchg
xchg
jns
lahf
jecxz
sbb
ja
movsl
clc
bound
push
push
shll
sbb
mov
inc
cmp
cmpb
hlt
push
cmp
jne
aas
dec
enter
sub
sub
inc
cmpsb
mov
sar
mov
loopne
jns
fstpt
ret
test
or
shlb
int
loop
ds
in
push
popl
mov
inc
in
xor
lahf
cmp
mov
pop
push
stos
push
or
rorb
mov
ficoms
lods
mov
adc
adc
push
ficoml
jl
scas
nop
and
jnp
loope
cmp
hlt
mov
mov
push
add
add
add
jb
scas
decb
fisttps
or
add
inc
push
decb
aaa
idiv
push
aas
mov
cld
fwait
lds
jle
pushf
add
jp
lret
mov
mov
sbb
test
loope
mov
lods
daa
adc
stc
pop
int3
fiadds
sbb
push
inc
mov
add
and
sbb
add
iret
stos
roll
cld
jne
jecxz
gs
mov
pop
aam
sti
cmpsb
imul
or
pop
js
sub
pushf
pop
add
mov
fisubs
fs
pop
mov
int
popf
fsubp
mov
jg
xchg
fnstsw
dec
mov
das
fwait
add
sahf
dec
add
rorl
mov
sbb
ret
negl
ss
sbbb
dec
jl
sbb
movb
lock
test
sub
push
jmp
incl
xchg
cmp
pop
stc
sahf
push
filds
add
mov
xlat
mov
xchg
testl
add
add
lret
jne
cmpb
mov
fidivs
adc
sbb
dec
arpl
js
orb
enter
aam
pop
jnp
xor
das
jecxz
lret
mov
aad
imul
push
adc
pop
daa
xor
jmp
sub
mov
sbb
shrl
popa
out
ret
jnp
ret
push
std
cs
daa
xchg
in
aaa
jno
jae
lret
jbe
repz
sbb
adc
inc
lods
jg
insl
mov
jnp
mov
shr
outsl
mov
jb
dec
xor
and
and
adc
inc
pop
sbb
sahf
adc
mov
jecxz
mov
pusha
dec
mov
data16
xchg
mov
stos
inc
cs
push
loopne
call
in
fcoml
out
sbb
xchg
sahf
mov
addr16
ljmp
call
addr16
lods
xlat
cs
adc
add
mov
aas
mov
lods
scas
notb
add
cmp
je
sarl
xlat
iret
jae
mov
testb
and
mov
sbb
data16
cmp
ds
and
xchg
push
xor
push
fsts
repz
fdiv
les
idivb
push
xor
mov
jmp
push
ffree
jnp
insb
fisubl
mov
lds
dec
js
lcall
sub
lock
add
mov
xor
inc
das
xchg
jae
add
out
divl
pop
xor
mov
mov
add
xor
cmpsl
xor
inc
call
iret
int
sbb
push
or
test
pop
cmp
aam
mov
ljmp
mov
mov
jl
mov
xor
pusha
sti
sbb
in
shll
adc
xchg
add
incb
add
loop
fadd
sti
mov
sbb
ljmp
add
mov
in
push
dec
test
cmp
inc
push
push
push
push
ds
jmp
aas
pushf
mov
xchg
pop
enter
rorb
mov
jns
cld
outsl
andl
mov
adc
sub
and
iret
les
pop
leave
xchg
cltd
cltd
shl
in
fs
les
add
shlb
jb
jns
loop
shll
lods
jnp
lock
lds
mov
dec
sbbl
or
es
mov
xchg
jne
popa
xor
mov
dec
or
sbb
out
in
xchg
jg
adc
or
xchg
dec
mov
ja
loopne
out
incl
out
and
inc
push
fimuls
lods
adc
and
sub
inc
fs
pop
cmp
mov
push
imul
push
pop
adc
pop
cmp
nop
inc
adc
adc
push
into
add
add
into
adc
neg
jge
xchg
jns
ror
pop
icebp
add
add
push
cmp
out
movsb
ret
xchg
lds
imul
inc
loope
xlat
xlat
sbb
jnp
push
fsubrs
icebp
loopne
mov
xchg
out
mov
or
test
adc
mov
out
sbb
dec
inc
loop
pop
jb
xchg
addb
leave
cmp
call
popf
xchg
testl
sbb
cmpsl
push
out
gs
push
into
lods
pop
outsl
mov
fldcw
clc
scas
lahf
sahf
xchg
repnz
mov
gs
cs
insw
pop
cs
push
aad
sub
inc
into
cli
cmpsb
aam
xchg
lock
gs
inc
data16
dec
or
push
mov
sbb
std
popa
clc
fdivl
fdiv
or
rol
sti
xor
jae
push
sti
sbb
push
imul
data16
test
jmp
adc
in
jns
cmp
bound
pop
vpslld
add
dec
sub
sub
fisubl
sbb
add
add
cmpsl
loope
arpl
stos
pop
das
mov
repnz
in
test
std
enter
xor
fdivs
xor
out
sub
js
std
mov
sarb
adcl
inc
out
das
push
ret
in
xor
cwtl
and
or
inc
cs
pop
stos
out
test
sub
push
sarb
ljmp
out
add
cmp
jnp
aas
jbe
dec
inc
and
and
cmc
dec
fwait
xchg
fiaddl
jo
in
call
xor
outsl
pop
outsl
and
pop
adc
aas
add
int3
ret
sbb
repnz
lods
inc
bound
outsl
pop
add
cmpsb
pop
fadds
jp
add
adc
cmp
push
mov
adc
scas
pop
int3
leave
push
xor
int
repnz
mov
jae
imul
ret
ja
and
aaa
divl
lret
cmp
add
add
in
lods
frstor
repz
mov
ret
rcrb
xchg
pop
push
cld
and
pop
mov
mov
je
jle
mov
or
fwait
out
lds
cmp
repnz
jl
dec
imul
je
gs
aad
pop
call
mov
mov
mov
push
arpl
lock
popf
sbbl
clc
adc
mov
inc
or
clc
and
push
inc
dec
mov
aaa
pop
pusha
test
addb
dec
std
rolb
out
xor
lock
test
fimull
es
ret
mov
hlt
dec
mov
cmp
push
pop
push
lods
cmp
mov
sub
or
test
sbb
jmp
lcall
data16
bound
repnz
add
xchg
adc
add
mov
cmc
mov
fstpl
mov
add
pop
adc
aad
push
cmpl
addr16
pop
inc
insl
out
mov
test
lahf
adc
bound
cltd
inc
jbe
daa
xchg
lret
cwtl
loope
pop
dec
outsb
mov
mov
test
aad
movsl
mov
in
inc
dec
out
aas
fwait
in
inc
push
lock
mov
scas
cmp
loope
or
aad
ljmp
rorb
dec
decl
push
push
inc
push
adc
jno
pop
movsl
jne
into
or
loopne
sbb
cmpsb
out
push
and
push
pusha
das
inc
fnstcw
push
sub
jg
testb
mov
in
mov
das
imul
leave
push
addr16
ljmp
xchg
js
add
aas
jg
add
pop
mov
adc
and
sbb
cmc
call
inc
jmp
shlb
push
jbe
shrl
xchg
lds
mov
add
jle
jne
pusha
popf
pop
cmpl
add
add
cmp
sti
add
subl
aas
loopne
call
adcb
scas
movsb
sahf
icebp
outsb
nop
imul
push
std
outsl
mov
mov
mov
adc
int3
rclb
cltd
gs
dec
and
insl
pusha
rclb
jge
aaa
pop
cltd
xchg
and
in
gs
jnp
sbb
sbb
sbb
popa
mov
push
stos
cmp
dec
dec
lods
push
sbb
in
xchg
jecxz
ret
and
push
je
adc
fcmovnbe
aas
addl
adc
ljmp
mov
add
add
shlb
mov
cmp
daa
pop
fidivl
call
mov
or
mov
jl
aam
and
dec
js
or
pop
fidivrs
cmp
shl
imul
cld
mov
das
dec
mov
inc
cmp
sarl
add
add
imulb
mul
xor
shlb
add
add
add
shlb
and
add
fs
cmp
imul
jmp
insb
cmpsb
mov
push
jae
das
bound
clc
gs
pop
ret
repz
or
cmp
fldt
pushw
cmpb
ret
leave
lock
pop
sarb
call
jo
inc
movsl
loop
imul
mov
rcrb
push
lods
int
testb
jne
cmp
inc
and
push
enter
add
lret
imul
inc
out
test
ficomps
scas
inc
mov
in
dec
mov
arpl
xchg
sbb
movsl
adc
add
and
push
adc
jae
mov
call
push
mov
jns
test
push
lods
push
push
adc
cmc
hlt
jg
xor
jns
jecxz
dec
shl
xorl
adc
jle
jns
call
popl
imul
pop
int
jae
daa
scas
add
add
add
xor
jb
jae
aaa
ret
jl
add
add
mov
cmp
rcll
jae
pop
jle
imul
rolb
mov
mov
push
push
pop
jae
es
push
ja
pop
shlb
adc
jp
lahf
imul
fnstenv
push
sub
push
mov
xor
nop
push
sub
stos
cmpsb
mov
cs
stos
fneni(8087
call
xchg
sahf
lret
cltd
test
jnp
pop
cltd
pop
stc
leave
or
mov
jle
mov
xchg
ret
addr16
mov
jo
add
sub
cmc
insb
aaa
enter
xor
jp
sub
push
jno
sbb
xor
iret
mov
mov
pop
adc
push
ret
scas
rcrb
ret
imul
cmp
jle
repz
pop
mov
mov
push
sub
mov
xchg
sub
jmp
mov
or
mov
and
mov
movsl
cmp
lret
fsubs
add
add
ds
in
idivl
js
mov
in
sub
cmp
add
cmp
lret
stos
sbb
fiaddl
push
sbb
mov
popa
out
inc
mov
pop
lret
pop
dec
push
sbb
fcompl
ljmp
xchg
xor
imul
gs
fsts
xor
mov
jbe
and
test
jns
cmp
popa
pop
ffreep
roll
jb
mov
and
ja
scas
dec
cli
jns
cltd
fisubrs
xor
sbbb
xchg
dec
push
sub
add
or
xor
adc
movsl
inc
stos
movsl
andb
pop
fwait
pop
roll
jnp
inc
jg
sub
jmp
enter
leave
mov
push
cmp
outsb
and
adcb
dec
fistpll
xor
lret
sub
cld
mov
mov
aad
icebp
dec
mov
add
sub
imul
push
out
mov
pop
and
ret
loope
lret
push
xchg
xchg
lds
repz
out
pop
shrl
add
add
jecxz
inc
cli
aas
into
lret
movsl
nop
pop
out
stc
add
add
imul
test
aas
mov
mov
stos
push
lods
cld
subb
sub
add
les
or
and
add
xor
ja
imul
fdiv
int
std
push
or
ljmp
jb
and
fwait
xchg
ss
push
rolb
aas
ficoms
inc
inc
inc
sbb
jnp
in
or
cmpsb
mov
cs
mov
adc
jp
xor
aam
cmp
iret
ret
push
imul
scas
and
pop
or
out
pop
out
popa
out
mov
xchg
mov
bound
lahf
sti
push
cmp
sbb
mov
jbe
push
cwtl
sbb
xor
loope
mov
jmp
cltd
pop
stc
lods
ljmp
out
add
popa
push
add
pop
fwait
imul
mov
jmp
mov
int
jo
add
add
lcall
cmp
dec
mov
add
add
push
stos
add
je
adc
testl
repz
fstl
push
data16
inc
mov
mov
push
popa
adc
mov
out
xchg
sub
mov
aam
add
xor
bound
shl
into
lea
fcomps
int3
das
dec
arpl
roll
jne
jecxz
push
jle
jo
mov
xchg
jns
dec
add
pop
fdivs
loope
fcoml
sarl
loope
xchg
sbb
les
and
or
scas
cltd
js
std
and
inc
cmp
addr16
pop
and
add
aam
add
out
push
dec
xchg
cmpsl
clc
mov
iret
mov
loopne
addr16
pop
push
xor
lahf
stos
pop
jecxz
push
int3
sbb
lds
sbb
pop
out
jnp
push
jno
add
aaa
jae
cltd
dec
mov
jno
sahf
lods
dec
ja
sti
add
add
sti
fisttps
lea
into
fwait
popf
xchg
repz
xor
fdivs
mov
add
cmp
shl
xchg
mov
shll
and
fmull
sub
ljmp
lret
sub
cmc
ret
loope
and
mov
mov
lret
repnz
dec
mov
xorl
lret
movsl
mov
jg
pop
ss
outsl
ud2
das
mov
add
mov
addr16
xchg
mov
sbb
stos
adc
in
call
jo
cmp
lret
in
jmp
lahf
push
fs
notl
in
sub
dec
jge
adc
outsl
mov
das
jo
jecxz
pop
jns
scas
xchg
push
pop
pop
and
jae
mov
ret
adc
fisttpl
mov
imul
jae
mov
adc
lret
mov
les
jbe
add
ds
into
nop
out
cwtl
jle
push
sub
dec
in
cmpsl
inc
xchg
cld
add
add
inc
outsl
jnp
adc
xchg
add
das
adc
and
dec
jl
xchg
inc
insl
in
dec
sub
add
orb
cwtl
inc
stc
fldl
icebp
loopne
and
cwtl
xchg
lods
cld
orl
and
test
loop
addl
out
pop
mov
push
movsb
push
mov
jo
jg
add
roll
incl
leave
cs
mov
mov
popa
inc
in
xor
int
js
sub
adc
xchg
xor
sahf
cwtl
sub
inc
xchg
jne
mov
into
insl
outsl
push
scas
out
push
out
mov
pop
repnz
cmp
inc
adc
push
addr16
popa
sbb
repnz
push
leave
sar
xchg
adc
stos
rcll
out
add
add
test
jg
push
pop
push
mov
lcall
add
sbb
cmp
jmp
jnp
and
insl
mov
jl
test
and
fistl
fldcw
dec
pusha
adc
dec
mov
jns
mov
fnstenv
jl
sbb
test
dec
pop
roll
mov
in
fwait
inc
push
mov
lcall
xchg
xchg
sti
xor
pop
stos
shl
sarb
bound
rcl
pop
xor
shrl
prefetchnta
push
fwait
orl
xor
daa
sbb
sbb
cmp
loopne
push
xor
pop
xchg
in
ds
pop
mov
jmp
fs
cmc
ljmp
and
push
pop
dec
or
bound
pop
je
cmp
and
add
xor
xchg
loope
stc
bound
rorb
jecxz
lods
outsl
or
aas
pop
mov
adc
das
xor
enter
call
cwtl
inc
push
sbb
mov
and
pop
add
add
movsb
push
in
cmc
jne
sbb
js
mov
pop
lahf
incb
add
inc
adc
iret
movsl
push
call
adc
cmp
and
mov
scas
ljmp
cmp
stc
sbb
pop
pop
sbb
adc
aas
cmpsb
popf
pop
cmp
mov
jo
in
inc
cmp
std
xchg
jno
push
or
cltd
inc
xlat
inc
insl
jecxz
movsl
mov
out
ljmp
outsl
mov
pop
mov
lock
bound
xchg
imul
imul
std
push
mov
xchg
sub
and
sub
sahf
jbe
repnz
push
add
jno
and
or
xor
mov
test
dec
bound
fnsave
shl
pop
xor
call
inc
aad
jno
mov
pusha
in
shl
sub
jle
jle
lea
cli
ljmp
add
out
shlb
aas
out
int3
mov
xchg
add
add
mov
cld
out
fstps
dec
mov
lods
stc
push
inc
inc
outsl
push
mov
and
xor
movsb
or
mov
fs
ss
dec
lret
in
daa
fstpt
adc
in
push
repz
jp
lods
insb
dec
dec
fcmovne
sbb
ficoml
int
push
push
bound
imul
stc
orl
sub
movsl
xlat
imul
pop
outsb
mov
jmp
in
xchg
sbb
cli
jge
faddl
jns
xchg
insb
call
fists
inc
jae
pop
and
inc
adc
jb
cmpsl
mov
push
cmp
jo
cmp
dec
xor
scas
jnp
test
sbb
outsl
loope,pt
mov
xchg
lods
cltd
stos
test
jbe
pop
push
fmuls
or
add
push
shlb
leave
push
fadds
add
or
mov
and
sbb
test
add
add
lahf
pop
mov
lea
lds
jmp
xchg
push
inc
arpl
addr16
insb
push
mov
notl
sahf
xchg
insb
push
popf
xchg
movsl
icebp
push
pop
sub
loope
jae
xchg
mov
lods
into
or
adc
lcall
sbb
repz
xor
adc
pop
cmp
add
stos
mov
xchg
sub
mov
scas
sbb
or
dec
push
rcrl
sbb
xchg
idivb
jo
and
add
negl
lock
addr16
in
imul
lcall
jae
adcb
hlt
mov
cmpsb
cld
jge
pop
xchg
sbb
dec
lds
xchg
arpl
mov
pop
inc
outsb
popf
fwait
push
aaa
sub
stos
fs
fwait
hlt
fs
insl
pop
pop
arpl
pop
repnz
add
cltd
imul
add
ret
bnd
cmc
inc
stos
repz
ret
lods
scas
add
add
xchg
push
std
rcrl
testl
pop
jp
xor
andl
lock
test
inc
and
iret
outsl
jecxz
and
js
push
lret
test
xchg
mov
dec
inc
fsub
and
add
mov
insb
jbe
xchg
int
ret
lret
push
insb
add
out
out
or
inc
xchg
and
adc
outsl
sti
shr
cmp
in
outsl
xchg
mov
int3
pop
cltd
add
negb
ret
or
dec
mov
mov
scas
jnp
dec
leave
cmp
sbb
mov
inc
inc
and
cs
xor
mov
mov
rolb
ficomps
shll
jbe,pn
out
adc
mov
mov
mov
pushf
rclb
lret
mov
mov
iret
test
rolb
arpl
fld
or
pop
xchg
flds
add
add
std
aaa
mov
shll
or
add
add
push
ss
out
push
shll
loope
add
into
ret
loope
lds
adc
fs
dec
in
fwait
fs
imul
sbb
mov
into
pop
xor
or
sahf
push
cmp
ficoml
out
adc
scas
mov
inc
fisubrs
dec
cmpsl
pop
pop
loope
stc
mov
rep
sub
call
jo
or
jb
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
movsb
in
out
mov
ss
xchg
jno
and
test
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
