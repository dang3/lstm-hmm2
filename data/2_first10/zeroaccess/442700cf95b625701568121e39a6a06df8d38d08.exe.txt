push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
loopne
add
pop
addl
xor
je,pn
jo
nop
jo
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
cmpsb
and
dec
cmpsb
mov
mov
adc
xchg
or
ss
les
xchg
push
xchg
pop
mov
xchg
cmp
outsl
push
mov
push
in
bound
stos
xor
test
xor
cmp
inc
add
cs
cli
sahf
cmc
lods
iret
xchg
test
mov
mov
scas
int3
les
adc
add
jle
shll
dec
sbb
pop
xorb
dec
jo
xlat
pop
mov
hlt
sub
pop
arpl
aaa
dec
push
mov
gs
pop
stos
ret
mov
jbe
stos
fiadds
fnstenv
xchg
xchg
mov
add
xor
push
sub
xor
ja
or
pcmpeqd
inc
ret
cmp
and
in
jnp
xor
pop
ret
lds
mov
arpl
mov
xor
je
mov
adc
incb
cmpsb
movb
xor
call
or
ds
ljmp
icebp
mov
test
pusha
mov
fidivl
mov
pop
inc
popa
mov
out
in
or
inc
lds
int
xchg
jbe
jae
jmp
sahf
clc
in
cltd
out
fdivrs
or
int
inc
stc
and
push
sbb
cmp
add
jge
fdivrs
inc
out
flds
pop
iret
dec
in
sahf
iret
adc
xor
push
cmp
xor
sbbb
cmp
arpl
sub
pushl
dec
aad
mov
jp
movsl
stos
mov
lcall
pusha
fcmovu
stc
add
cmp
rclb
sub
int3
stos
mov
sti
jmp
sbb
pushf
aad
jne
pop
icebp
fnstenv
pop
fsubp
lea
fs
leave
lret
cmpsb
insb
push
xchg
in
call
imul
cmpsb
fst
lcall
ret
xor
mov
mov
dec
aaa
les
jbe
push
das
rolb
dec
leave
or
push
arpl
adc
add
pop
icebp
movsb
xchg
mov
xchg
stos
push
xchg
clc
adc
fisubrl
push
movsb
in
inc
dec
pop
mov
das
pop
je
test
jae
jo
pop
rorl
jnp
pop
push
jae
in
les
mov
mov
mov
xchg
jo
xchg
push
scas
aas
jns
cmp
popf
jns
jae
sbb
and
or
iret
lods
push
dec
stos
les
xchg
cld
pop
sahf
divb
dec
add
jbe
ljmp
jae
add
sub
sbb
jne
sbb
mov
add
ja
jmp
jns
adc
or
jnp
test
lods
movsl
ret
adc
scas
lahf
jbe
mov
into
push
sbb
jl
dec
sbb
xchg
fsubrs
mov
loopne
or
and
cmp
cmp
outsl
loopne
fstpt
sysexit
adc
movb
add
outsl
notb
push
pop
pop
loope
push
das
jge
divl
pushf
je
hlt
lock
mov
cmovge
popa
mov
ror
add
inc
dec
cltd
cmc
cmpsb
in
out
dec
pop
mull
imulb
ret
out
and
mov
stos
sbb
movsb
cwtl
jo
mov
lret
dec
or
ds
mov
inc
inc
and
jp
mov
jg
xor
adc
scas
cld
mov
sahf
fidivl
test
sub
sbb
mov
stos
out
aaa
ds
cmp
xchg
repnz
xor
fsts
loopne
cld
mov
push
sti
xchg
add
push
pusha
fwait
push
mov
cmp
dec
pop
fdivrs
leave
sarb
mov
insb
push
cmp
test
cmp
fnstsw
and
scas
mov
outsb
fisubl
test
or
mov
cmp
pop
ficoms
push
imul
rcll
sub
and
ja
shlb
hlt
in
in
pop
dec
mov
stos
fbld
xchg
sbb
gs
outsl
bound
add
fisubrs
loopne
fcmovu
or
lea
push
rorl
les
mov
outsl
movsb
dec
cmp
jbe
sbb
stos
cmp
sbb
arpl
sub
fs
cwtl
and
push
dec
into
mov
mov
jb
in
testl
jns
fwait
rcr
push
cwtl
loope
popf
and
jae
pusha
cwtl
imul
jge
and
mov
mov
push
pop
cmp
mov
push
mov
and
bound
dec
mov
xchg
hlt
xchg
cmp
and
jle
and
pushaw
adc
mov
jo
enter
push
cmpsb
jecxz
jecxz
cs
pusha
aas
sub
inc
sbb
pop
xchg
push
mov
pop
leave
pushf
lds
inc
mov
lret
movl
xchg
insl
dec
mov
mov
lar
lret
leave
xchg
adc
pop
and
adcl
loope
push
mov
andl
and
aad
andl
jmp
add
shll
lea
lcall
sti
jge
xchg
push
inc
je
aad
ljmp
test
xor
xchg
fwait
dec
mov
fisubl
cmpl
push
mov
movsb
repz
push
cmp
inc
inc
shl
push
out
arpl
dec
orl
testb
inc
out
stos
hlt
stos
dec
jmp
inc
jecxz
andb
out
int
pop
xor
or
xor
dec
fstp
xor
loop
pop
fs
jnp
scas
ds
xor
push
fcomps
and
shlb
jmp
or
andl
clc
add
sbb
out
pop
jmp
xorb
and
popa
dec
and
ss
ss
scas
and
lods
sub
push
sahf
cmpsl
cmpsl
repnz
cmp
cmp
push
lret
mov
adc
in
cmpsl
jmp
ja
adc
push
add
fs
mov
cltd
cmpl
and
fidivs
pop
adc
add
xor
jmp
call
mov
add
jb
jno
inc
sti
xor
sub
cmp
jp
daa
aad
shlb
mov
dec
cli
dec
push
and
mov
andl
arpl
lret
out
push
jae
pop
hlt
mov
shr
aaa
cmp
inc
or
ficomps
push
das
pusha
lea
dec
jl
add
and
push
mov
or
pop
sbb
xlat
dec
icebp
rclb
repz
xor
jmp
fsubrl
push
push
loope
lret
xchg
aad
pop
xor
jno
or
push
rcll
xlat
and
dec
scas
pop
xor
imul
jmp
add
and
lcall
ss
fnstcw
sbb
add
jae
mov
dec
mov
jge
aas
lret
xchg
repnz
js
and
clc
cltd
je
sub
jle
in
test
mov
adc
dec
jb
pop
xor
in
xchg
jmp
xchg
loopne
xchg
mov
out
sub
orl
in
and
cmp
mov
shlb
and
add
cli
sbb
pop
cmc
ja
std
mov
mov
addb
fisttpll
jmp
sti
test
cs
jbe
fwait
out
cmp
push
cs
xor
xchg
imul
jmp
push
lea
mov
call
xchg
imul
mov
xor
movsl
filds
insl
ljmp
xchg
outsl
mov
test
fsubl
jae
mov
xchg
test
xlat
xchg
pushl
push
ficompl
clc
push
cli
dec
loope
pop
imul
ret
scas
jle
pop
js
imul
and
mov
test
cld
jecxz
jae
xchg
xor
push
test
mov
push
enter
jae
pop
xor
xor
dec
pop
rolb
in
push
les
dec
xchg
mov
dec
and
cmc
mov
pop
je
push
mov
dec
jl
rcrl
mov
or
ret
mov
pushf
mov
lahf
jno
or
jne,pt
mov
insl
fldcw
rolb
lahf
rol
scas
scas
adc
mov
xor
fstps
add
insl
sub
sbb
inc
mov
test
nop
cmp
xor
and
pop
fst
lods
pushf
fisubl
je
enter
cli
test
fstpt
and
cmpsb
mov
cmp
repz
mov
dec
fwait
mov
mov
mov
mov
sbb
push
cltd
push
scas
ret
sub
repz
cwtl
shl
pop
shll
dec
xchg
jecxz
fcomip
imul
jp
sbbb
or
xchg
pop
mov
mov
cld
push
sub
sub
adcb
lods
and
pop
movsl
cmpsb
or
mov
push
mov
test
mov
cmc
mov
dec
cmpsl
dec
mov
fs
xlat
lret
pop
push
in
fisttps
jne
jge
mov
inc
ficoml
aaa
cltd
loop
stc
icebp
push
lods
xchg
xchg
mov
push
leave
rcrl
cmp
cmp
cli
mov
cmp
sub
subb
outsb
cwtl
inc
sbb
push
mov
aaa
or
out
les
mov
fisubs
and
int
int
outsb
sarb
bnd
mov
and
in
xchg
ljmp
or
je
sub
pop
or
ret
rclb
ret
and
sub
iret
enter
lds
cmpsl
push
int
add
cmp
jb
xchg
jns
xchg
push
inc
outsb
aaa
add
xchg
test
pop
xor
xchg
adc
shrl
dec
pop
stos
in
mov
pop
movsl
sub
pop
cmpsb
mov
sarb
inc
aas
shrb
fcmovnbe
mov
xlat
es
mov
mov
test
inc
lods
orb
and
inc
cmp
mov
jle
xchg
inc
inc
pop
leave
dec
test
pop
cwtl
cmp
adc
inc
or
popa
ljmp
inc
xor
dec
xchg
in
leave
dec
push
scas
icebp
xor
lods
lods
fsubrl
scas
mov
inc
sbb
in
adc
sahf
and
stos
inc
andb
adcl
js
jmp
and
sbb
test
jge
jns
dec
aad
mov
dec
ret
scas
and
pushf
and
aaa
fisubrs
stc
cmp
rcrl
and
push
in
dec
cwtl
add
popf
in
popa
sahf
loopne
jno
stos
inc
insb
mov
ljmp
sarl
sti
loopne
jge
push
mov
into
and
in
push
insb
sub
lds
mov
pop
lock
xor
scas
sbb
sbb
add
xchg
mov
and
loopne
adc
pop
xchg
fdivl
in
into
mov
dec
fiadds
int
mov
adc
mov
jge
scas
mov
and
mov
pop
dec
and
push
pop
fisubrl
out
into
stc
adc
mov
stos
ja
fs
xorl
push
stos
loopne
scas
aas
fsubl
enter
mov
mov
shlb
sbb
jne
movl
dec
xchg
jp
xlat
xchg
stc
fidivrl
test
rol
jmp
dec
imul
rolb
aam
pop
pop
mov
sbb
clc
ss
jge
outsb
or
hlt
inc
jne
stc
sarb
xor
adc
push
cmp
mov
in
cld
mov
xchg
icebp
addb
pop
push
jno
fwait
push
mov
mov
dec
sti
and
dec
xchg
cmpsl
gs
xor
add
add
pop
cmpsl
adc
aad
aad
dec
cmp
dec
and
sbb
push
mov
outsl
inc
nop
inc
in
out
sub
daa
scas
in
pop
jecxz
test
mov
jns
loopne
adc
mov
leave
dec
inc
loopne
dec
fstl
addb
mov
jbe
sahf
iret
pop
rclb
fwait
jo
jecxz
or
pop
push
out
jo
mov
movsb
jmp
sub
sbb
es
dec
subl
stc
push
das
inc
sarl
sub
add
aam
pop
rclb
daa
mov
ja
int
and
or
stos
add
lahf
mov
das
dec
lods
or
in
pushf
ljmp
in
push
loopne
out
lds
std
mov
pop
lods
xchg
sbb
stos
pop
outsb
mov
pop
jae
xor
xchg
push
push
ljmp
adc
lret
dec
stos
lea
inc
mov
pop
mov
jb
cs
mov
arpl
outsl
mov
mov
leave
and
cli
pop
inc
push
jmp
cmpb
dec
inc
dec
enter
push
push
or
imul
pop
jo
mov
adcl
adc
xor
xor
in
lahf
rorl
cmp
pushf
hlt
mov
dec
lods
leave
sbb
add
and
sbb
lahf
adc
cmpsb
xor
xchg
scas
sbb
or
push
lods
add
out
jecxz
xchg
pop
add
cmp
inc
mov
dec
ds
dec
js
xor
cs
cwtl
inc
and
mov
lahf
mov
movd
adc
leave
push
insl
shr
out
shrl
and
push
sbbb
mov
inc
xchg
or
and
pushf
jo
and
int
jb
mov
out
fwait
andl
or
je
xor
dec
movsl
enter
sbb
xor
add
stos
xor
mov
mov
mov
les
icebp
in
add
xchg
cmp
insb
cli
jne
ror
jne
or
fistps
inc
mov
cmp
into
movsb
inc
addr16
mov
or
jae
mov
cmp
shr
cmp
xchg
addr16
popl
cmpsb
mov
rcll
out
addr16
and
repnz
imul
push
jge
jno
jnp
cltd
insl
mov
enter
scas
enter
jecxz
lods
mov
lcall
xchg
cmc
test
jp
lods
adc
jg
rolb
into
fistl
arpl
xchg
push
je
aad
pop
dec
stos
sub
sbb
mov
add
test
inc
add
int3
lock
jae
std
fidivrl
lret
push
pop
out
imul
fldcw
int
pop
cmpsl
incl
ja
pushf
lds
mov
aas
cmp
inc
sbb
loopne
add
lods
pusha
fsubrl
jle
loopne
cmp
test
cli
jecxz
dec
rorl
pushf
xchg
add
xor
push
andl
jno
lret
scas
arpl
rcr
or
dec
mov
jmp
xchg
movsb
insb
xor
cmp
cmp
add
inc
xchg
mov
fisttpl
mov
xlat
enter
pop
xchg
int3
xchg
mov
pop
jo
add
push
adc
mov
push
or
fisubl
leave
cmp
jle
into
xlat
sahf
sahf
cs
dec
cli
cmpsb
jo
add
xchg
sbb
lock
pop
int3
ss
in
or
nop
scas
push
decb
setnp
bound
cwtl
add
xor
cmp
or
cwtl
ss
shlb
in
jg
xchg
ja
sbb
add
sahf
clc
inc
repz
fadd
das
jle
jg
bound
jg
xchg
out
aas
inc
inc
pop
pop
pop
out
pop
or
and
addr16
push
mov
repz
sbb
lret
sarl
and
jno
je
pop
out
dec
nop
add
rolb
insb
test
nop
cld
mov
in
rorb
inc
push
xchg
push
or
xchg
mov
insb
iret
mov
mov
mov
aam
push
stos
push
jo
mov
les
movsl
xchg
cli
insb
shll
fwait
lods
mov
adc
adc
mov
insl
lods
out
into
and
testl
and
or
inc
je
stc
push
sub
adc
sahf
cmc
imul
sbbb
not
mov
pop
inc
mov
and
pop
and
sbb
negb
mov
lds
cld
lods
push
cld
out
dec
xchg
scas
adc
or
jne
arpl
insb
es
popf
sbb
orb
and
cli
divb
xchg
shl
aaa
mov
jne
add
mull
movsl
repz
movsb
aad
xlat
icebp
xlat
ljmp
pop
push
ja
cld
add
dec
popf
mov
pushf
mov
div
inc
dec
dec
mov
fisubl
out
iret
movsb
push
jge
mov
mov
outsl
mov
or
mov
and
ret
call
jno
cmp
in
sbb
cmp
adc
cmpsb
push
push
and
jg
push
out
mov
in
cmpsl
call
mov
lret
insl
xor
iret
repnz
lret
popa
xchg
in
sarl
push
lods
inc
not
sub
cmpsb
cmpsl
cli
cmp
es
ret
xlat
clc
dec
add
shlb
jl
pop
inc
sahf
and
add
add
mov
dec
jae
or
pop
or
lods
lods
add
pop
pop
xchg
sarl
loop
hlt
sbb
js
sarb
sahf
dec
cmp
cmp
dec
mov
fadd
and
cmp
xchg
scas
outsb
mov
pusha
sub
leave
enter
push
pop
sub
rorl
adc
cmp
xchg
cli
pop
into
ss
pop
bnd
cltd
nop
aas
das
and
in
stos
inc
mov
arpl
xor
das
mov
mov
cmpsb
aad
mov
pop
pop
xor
insb
cmpsb
sub
stos
jae
outsb
int3
or
xchg
jg
cltd
fisttps
xor
aaa
rcll
or
cmp
into
js
cmc
sbb
cmp
daa
inc
mov
mov
jmp
jae
test
in
cli
lods
cmc
dec
cli
add
push
popf
sahf
xchg
sbb
sbb
pusha
daa
cmp
std
sbb
hlt
aad
xchg
fsubrl
adc
xchg
jbe
sub
filds
mov
shl
sub
lret
inc
cmpl
mov
push
mov
xor
adc
xorl
movsl
sahf
cmp
mov
out
rcrb
or
ret
xchg
in
cmpl
lcall
push
jae
inc
xor
in
addb
scas
pusha
add
ud2
fsubrs
les
dec
xchg
or
sarl
popf
xor
test
les
sbb
roll
int
aas
lock
out
ficompl
jno
sti
sti
sahf
out
sub
jb,pt
sub
mov
lcall
lock
dec
xor
push
mov
mov
add
bound
es
aaa
pop
sub
xor
lods
push
mov
inc
lahf
ficomps
dec
cmp
cld
sub
pop
fisubs
jmp
jg
and
int
pop
out
mov
and
dec
inc
aam
ja
sbb
shlb
xor
sarb
fsubs
pushf
jle
inc
shlb
xchg
sti
add
pop
adc
xchg
xchg
add
lcall
adc
mov
sbb
bound
sti
js
adc
or
jne
xor
and
leave
pop
xchg
outsb
sbb
xor
jae
rcr
dec
xchg
mov
imul
mov
dec
decl
add
xchg
inc
push
dec
inc
xor
fcoml
leave
sub
scas
inc
cld
and
daa
or
aam
add
pusha
in
popf
dec
or
mov
je
jge
mov
adcb
jle
lods
xor
out
sahf
xchg
les
test
sarl
mov
dec
push
inc
inc
test
push
cli
push
sub
out
pushf
fcoml
arpl
xchg
mov
ret
sbb
mov
inc
movsl
popa
ja
mov
push
or
rcrl
jae
mov
sbb
xor
cmp
and
dec
mov
popa
xor
xchg
das
loop
cmp
jl
out
adc
inc
xchg
pop
nop
push
mov
dec
mov
mov
test
add
xchg
test
xchg
pop
hlt
sbb
mov
mov
mov
adc
dec
adc
push
roll
mov
addl
stos
lcall
xchg
orl
push
adc
cmp
stos
mov
inc
pop
mov
dec
loope
cmp
popf
cmpsl
xchg
addr16
xor
cli
xchg
cltd
cmp
mov
push
jb
aam
data16
scas
adc
mov
dec
faddl
dec
mov
dec
mov
push
fwait
pop
iret
repz
xor
aam
scas
xor
fisubs
inc
sarl
outsl
jp
push
cmp
adc
repz
mov
dec
push
aaa
mov
pop
add
jl
jmp
jge
mov
aam
sbb
div
and
jbe
cld
inc
inc
leave
cmc
movsl
add
data16
xchg
jmp
dec
leave
inc
fsts
out
shll
fmull
sbb
incl
arpl
mov
test
jg
jg
add
fs
jo
clc
insl
fstpt
push
mov
pop
in
in
imull
es
int3
dec
movsb
sbb
push
cs
mov
xchg
and
mov
ret
lcall
bound
add
jg
cmp
ss
scas
js
cwtl
and
or
and
sbb
adc
inc
out
cwtl
inc
xor
mov
inc
std
pop
adc
pop
fildll
jnp
rcr
pop
fwait
icebp
movsl
imulb
arpl
adc
lcall
scas
inc
add
dec
subb
lcall
and
test
sbbb
sub
sti
dec
jne
add
jg
add
and
loop
cmc
dec
mov
pop
sub
outsb
les
arpl
das
mov
sbb
je
pop
xchg
jmp
push
insb
test
stos
sub
push
push
lcall
dec
jg
inc
fsubrs
mov
sub
or
outsb
pushf
cmp
lahf
xlat
pop
xor
jge
pop
mov
and
repz
cmc
and
ret
adc
xchg
pop
push
push
sub
sbb
dec
out
fnsave
lock
push
mov
xchg
mov
cmpsb
add
aaa
xchg
lahf
hlt
cmp
dec
inc
idivl
test
adc
hlt
out
jbe
pop
test
lret
ja
fisubs
cmp
mov
movsb
imul
and
xor
imul
in
pushf
out
js
lds
xor
stc
and
popa
pop
aad
or
out
lret
mov
mov
fldcw
shl
lret
mov
push
orb
or
push
ret
mov
pusha
cwtl
andb
adcb
xorb
sub
lds
xorb
scas
daa
test
repnz
lock
inc
jp
mov
adc
mov
adc
sub
mov
sahf
jl
push
and
cltd
mov
mov
fimull
sbb
push
stc
sub
ja
mov
out
pushf
push
enter
sub
fwait
gs
outsl
iret
sub
sti
ljmp
lahf
les
sbb
jae
pop
add
xchg
mov
fbstp
aam
add
xchg
mov
mov
in
outsl
xor
cmp
das
cmc
jle
movsl
mov
ss
pop
add
sub
xchg
mov
mov
loope
movsl
fst
xor
mov
popf
into
sti
scas
pop
sbb
fsub
mov
mov
jg
add
pop
sbb
pop
add
jl
pop
inc
sub
int3
ror
fcmovnb
jp
into
xchg
jp
jecxz
je
daa
xchg
add
sahf
mov
fdivs
fisubl
or
mov
push
stos
out
inc
sub
xchg
int
andb
pop
int
ror
rorb
ja
xchg
pop
push
ret
insl
push
add
out
sbb
adc
repnz
mov
rorb
push
orb
movsb
aaa
lahf
aaa
into
enter
fs
xor
sarb
in
int3
xor
xchg
jmp
js
xlat
xlat
mov
lret
or
xchg
dec
aaa
repz
cmpsb
lret
xchg
int
mov
rolb
test
xchg
icebp
mov
popa
jo
inc
push
test
sub
xorb
fscale
das
jmp
pop
pop
popl
in
ljmp
sub
pop
mov
pop
or
add
inc
lods
or
jle
xchg
fwait
sahf
add
or
inc
sub
add
push
mov
outsl
into
lret
lret
adc
xchg
lea
pop
gs
jnp
xchg
adc
std
adc
in
xchg
push
fbld
push
xchg
in
pop
jne
push
push
and
jbe
mov
insb
out
push
adcl
sub
lret
xchg
loope
jl
pop
sub
pop
push
and
mov
sahf
add
fcoms
jnp
cmp
cmp
add
adc
mov
out
pushf
xlat
jl
ds
xchg
mov
loopne
cmp
fdivp
mov
mov
mov
inc
pop
ljmp
push
sbb
pop
jno
es
test
fs
or
in
andb
mov
das
xor
jnp
pop
loop
jb
ret
jle
mov
fidivs
inc
inc
imul
push
movsb
mov
cmp
add
cs
fimull
sub
xchg
ljmp
in
std
insb
and
icebp
mov
out
lcall
adc
or
pop
enter
aaa
inc
dec
insl
jmp
jo
add
movsb
lret
mov
popa
in
repz
push
xchg
xchg
cmp
fiadds
int3
xor
scas
dec
leave
mov
ljmp
or
aad
add
shll
mov
push
rorb
loope
mov
ds
dec
jecxz
aad
sub
bound
call
add
mov
aad
lret
imul
leave
lret
jp
sbb
int
es
scas
mov
je
sub
sub
add
pop
jecxz
add
sub
jnp
jne
push
icebp
pusha
fstps
stos
and
outsb
sbb
xchg
push
push
lahf
das
into
push
sbb
insl
fisttps
cwtl
ret
addr16
xor
insb
scas
iret
push
mov
sbb
subl
jb
mov
aad
cmc
fadds
mov
test
test
lods
sbb
ret
subl
cmp
push
xchg
out
adc
lcall
imul
xor
int3
xor
in
jbe
cmpl
imul
iret
pushf
cmp
inc
xchg
sub
add
dec
fiaddl
jno
cmpsb
xor
outsb
cltd
shll
xor
mov
fdiv
jecxz
loop
scas
loopne
add
cmp
cli
adc
mov
aas
stc
lds
mov
repz
jl
jge
dec
cmp
decl
xchg
rcrb
xor
loopne
pop
cltd
jg
mov
xchg
jns
or
and
mov
cli
adc
jg
dec
pusha
sbb
inc
or
out
movsb
mov
cli
pop
dec
inc
fstpl
hlt
jp
or
xor
push
mov
xor
jns
mov
fldenv
dec
push
test
gs
testb
sub
cmp
xchg
out
ror
cmp
std
pop
and
and
jg
aam
push
jae
int
push
rorb
mov
ret
and
push
lods
pop
or
dec
sub
rcl
mov
inc
lahf
push
movsl
or
and
out
shld
inc
dec
jo
jle
rcll
outsl
scas
mov
pop
fldt
hlt
fidivrs
mov
shll
insb
xorl
addr16
orl
in
pop
aas
pop
jo
mov
jns
jmp
ret
push
sub
jmp
iret
out
pop
jmp
es
adc
fdivl
xchg
out
dec
jge
psraw
jge
enter
sub
sub
int3
ret
das
or
and
cs
out
sbb
mov
mov
cwtl
ss
iret
mov
cli
lcall
jl
push
inc
out
nop
ss
in
xchg
rol
pop
push
pop
cmp
or
rcll
aas
adc
mov
std
out
into
xchg
mov
pop
mov
cwtl
mov
pop
movsb
xchg
daa
bound
pop
mov
neg
mov
fnstcw
and
lcall
cmc
sub
aam
cmp
roll
iret
movsl
insb
mov
mov
mov
int
and
inc
daa
jae
and
lcall
je
fs
cld
movsl
sbb
lock
xchg
inc
div
dec
gs
mov
pop
sti
jge
push
xor
outsl
push
dec
fcmovnu
and
adc
loop
mov
push
test
adc
or
inc
std
sbb
mov
inc
not
mov
loope
std
pop
xlat
sub
adc
sbb
lods
and
data16
imul
mov
and
cmp
pop
stos
cmp
xchg
sub
add
xchg
dec
dec
dec
mov
jbe
jp
les
sub
adc
aaa
es
std
dec
fldl
cwtl
push
lods
or
push
push
jne
push
mov
jno
cmc
cmp
fistl
mov
dec
cmp
test
roll
out
in
loopne
fstpl
loopne
jne
dec
mov
jg
fwait
clc
movsb
scas
mov
repnz
jle
adc
lcall
lret
fcomps
mov
cmc
lea
push
jmp
jle
lret
in
scas
out
sub
incb
cs
mov
je
jge
mov
in
pop
adc
jmp
pushf
jle
xor
ja
adc
xchg
add
mov
cmp
pop
cmp
pop
in
out
jno
clc
cmp
imul
sahf
sbb
les
sbb
sub
adc
and
clc
pop
and
fsubrl
mov
mov
mov
icebp
mov
push
rolb
fimuls
loopne
ret
loop
stos
jns
je
test
jge
out
in
stos
add
hlt
dec
mov
push
xor
and
pop
int3
ffree
test
mov
jle
inc
add
add
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
cmp
pusha
lock
mov
stos
shlb
pop
insb
mov
push
mov
call
jne
or
movsb
test
test
orl
jle
sbb
test
push
inc
or
lret
pop
jae
and
and
fisttps
bound
adc
cmp
sbb
jae
xor
cld
hlt
inc
cmp
lcall
cmpsl
mov
sbb
pop
loopne
in
int3
fldcw
lcall
and
fninit
aaa
or
fistl
cmp
loope
int
sub
xor
jge
jae
and
shlb
sbb
push
adc
loopne
inc
jns
or
arpl
dec
sbb
movsl
ds
sbb
into
push
xor
insb
and
add
fisubs
sbb
cltd
insl
xchg
sbb
scas
sbb
sbb
orb
fisubl
dec
pusha
xor
adc
lods
int3
and
test
jle
inc
sub
loopne
sbb
push
sub
pop
xor
out
mov
sbb
pop
inc
add
push
xchg
jno
sbb
sahf
int3
ss
add
sub
adc
cmpsb
ret
xchg
add
pop
sbbl
inc
lds
mov
push
test
xchg
fs
sbb
popa
out
xchg
divb
dec
jge
insb
stos
jp
sarb
push
inc
cwtl
jp
enter
dec
jbe
les
in
lret
xchg
dec
sub
xor
data16
dec
lods
mov
pop
fwait
fs
lret
mov
movsl
pop
mov
push
inc
sbb
add
push
mov
ljmp
outsl
stos
inc
cmpsb
add
mov
xor
imul
pop
notl
mov
mov
jnp
mov
jne
mov
jo
mov
mov
push
xchg
adc
call
or
popf
push
jg
sub
and
je
pop
lds
pop
outsb
arpl
and
pusha
jg
fdivrs
icebp
mov
pop
pop
pop
negb
std
lcall
ret
dec
or
insl
test
mov
cmc
imul
cmpsl
in
rclb
ja
push
cli
xlat
ret
jo
xor
stos
push
and
and
fs
xchg
je
pushf
sbb
pusha
dec
mov
mov
and
push
call
mov
int3
sbb
je
dec
mov
cmp
lods
sub
jns
out
lret
pop
cmpsl
fimull
and
test
outsb
out
xchg
pop
pop
orw
cmc
outsl
add
and
jle
jmp
add
lret
push
addr16
add
lea
std
dec
ljmp
jns
xlat
pop
and
inc
push
lods
aaa
push
pusha
pop
cmp
ss
sti
test
dec
dec
imul
cmp
jno
xlat
scas
mov
andl
outsl
mov
jnp
popa
jne
pop
pop
xchg
or
or
inc
mov
les
mov
jmp
sbb
mov
pop
add
bound
into
pop
fcoms
test
imul
lret
test
push
dec
imul
cwtl
push
aad
in
inc
and
lret
lcall
cmpsl
jmp
and
cmp
mov
jnp
adc
arpl
lds
ret
je
out
out
scas
rorb
iret
scas
test
cmc
stos
mov
and
fnstcw
ljmp
addr16
adc
mov
push
cmp
sub
out
arpl
test
fcomps
rorl
xchg
repnz
lods
mov
jg
adc
imul
push
jae
std
push
mov
mov
das
mov
std
dec
rorl
es
cwtl
and
jl
mov
int3
andl
xchg
cmp
std
push
ret
sub
popf
lods
fistpll
mov
xor
and
mov
sahf
lcall
stos
jnp
leave
mov
or
mov
inc
lahf
mov
pushf
cmc
mov
call
je
insl
js
in
in
or
push
mov
loop
lahf
add
aad
push
sub
sub
pop
mov
cmova
jae
bound
mov
jp
add
in
pop
mov
sbb
scas
ds
lcall
dec
xchg
sub
jo
mov
test
inc
push
cmp
pop
lret
jno
pop
jecxz
xchg
mov
or
sub
push
mov
fisttpl
push
rcl
imul
lcall
movsl
movsl
shl
mov
cmp
jb
cmpsb
mov
xchg
cmp
sub
rorl
mov
mov
inc
imul
lahf
xlat
int3
jp
pusha
inc
inc
adc
push
jle
ds
ret
xor
and
jo
dec
xor
shll
mov
loope,pn
lea
movsb
lock
rcl
jae
arpl
add
cmp
rclb
insl
mov
outsb
aaa
mov
dec
popa
cld
mov
rorl
pop
xchg
add
sub
inc
and
sub
add
adcl
sti
and
sbb
or
mov
xchg
mov
or
mov
in
sub
rol
lods
or
fucomip
mov
shll
lret
ss
pop
push
int3
sub
pushf
fs
push
mov
xchg
in
add
cmp
jne
cmp
lods
lea
sbb
inc
mov
dec
out
cld
in
pop
fs
das
icebp
pop
fidivl
dec
xchg
std
dec
rorl
jbe
js
idivl
add
or
cmp
dec
test
insl
dec
xchg
or
ret
mov
and
sbb
into
sbb
pushf
imul
shll
add
pop
int
cmp
ljmp
arpl
cld
cwtl
push
in
imul
mov
xor
adc
call
sbbb
inc
repz
and
inc
mov
and
adcl
jge
xchg
push
cmp
adc
rcll
fs
or
pop
cmpsb
sahf
jp
add
mov
test
mov
mov
out
jl
xchg
xchg
addr16
aaa
xchg
in
mov
sarb
add
mov
add
dec
punpckldq
jge
aas
add
loope
mov
and
gs
fwait
sbb
sub
mov
lahf
add
call
jmp
ret
jnp
ljmp
adc
xchg
push
cld
js
in
lcall
daa
adc
add
int
fwait
movsl
jp
jnp
mov
xchg
bound
xchg
xor
dec
insl
dec
sub
mov
mov
mov
xlat
pushf
jae
push
or
pusha
testb
mov
xlat
testb
test
dec
insb
mov
mov
dec
rcrb
or
push
data16
or
xchg
fdivrs
mov
daa
sub
lret
cli
or
add
das
sub
repz
mov
or
push
pop
call
jp
jnp
dec
mov
mov
loop
mov
xchg
les
sbb
mov
sbb
dec
pusha
loopne
or
icebp
pop
inc
mov
jmp
pusha
adc
jnp
lds
adc
nop
lods
insb
mov
and
es
pop
daa
daa
adc
adc
imul
mov
cwtl
filds
jp
test
jge
xchg
xor
shll
add
or
lret
push
das
xchg
or
sarl
fsub
lods
out
neg
out
shll
adc
fiadds
sub
add
in
add
mov
inc
add
xlat
mov
add
xchg
pop
sbb
xchg
xchg
repz
xchg
rolb
repnz
ja
mov
mov
cmp
bound
loop
out
in
cmp
and
adc
mov
sub
cwtl
push
bound
push
pusha
jecxz
dec
or
test
in
enter
negb
dec
mov
mov
mov
out
outsl
pusha
cmc
aad
jo
pop
push
in
and
adc
adcb
gs
xor
scas
ss
pop
notl
jmp
add
out
shrl
jb
out
dec
out
stos
pop
loopne
sub
jecxz
cltd
hlt
adc
push
mov
inc
call
sub
mov
pop
lahf
jo
fs
mov
aaa
push
cmpsb
fwait
je
inc
dec
inc
push
cli
addl
bound
popa
gs
stc
inc
insb
jle
bound
mov
movntq
jg
and
cltd
jb
ss
xchg
jp
enter
push
or
inc
into
or
clc
shr
lcall
packssdw
push
fistps
aam
mov
mov
or
mov
jle
rorl
and
fwait
test
je
push
mov
mov
xchg
cmp
test
shl
test
aas
hlt
sub
mov
inc
jle
cli
sub
andl
mov
dec
popf
shl
push
shl
subb
jecxz
imul
lcall
adc
test
mov
jno
add
push
and
sti
addr16
stos
je
dec
pop
jp
or
cld
mov
adc
outsl
lods
mov
lahf
push
jb
fwait
jns
jecxz
xor
popf
inc
and
mov
inc
sbb
je
inc
cli
xchg
dec
mov
pop
add
pop
sbb
dec
adc
cld
fstps
push
lret
stc
mov
cmp
pusha
das
pop
cld
mov
inc
push
enter
and
cmpsb
enter
push
sbb
addr16
lret
and
ds
fidivl
dec
sub
addr16
and
outsb
int
stc
cwtl
mov
mov
fwait
stc
cli
mov
loopne
mov
push
pop
xchg
xor
adc
pop
jmp
fimuls
rorl
int3
lock
inc
cmp
lret
sahf
inc
shlb
push
sbb
xchg
lcall
cmpsb
aad
addr16
jb
cmp
jno
fidivrl
sbb
xchg
jge
addl
negl
mov
outsl
jl
call
mov
add
nop
jo
jo
imul
pop
mov
js
sbb
inc
inc
mov
roll
lahf
arpl
pop
pop
fcoms
loopne
pop
xchg
and
xchg
das
sbbl
cs
je
leave
inc
sub
mov
and
inc
pop
ret
fcomps
mov
sbbb
popa
rol
inc
xchg
div
ja
xchg
push
scas
aad
push
stos
addl
icebp
mov
jnp
pusha
adc
xor
xlat
aaa
lret
inc
sbb
pop
mov
loop
pop
pop
movups
enter
mov
cmpsl
movsb
xchg
mov
sbbl
scas
das
outsl
insl
or
fwait
test
inc
mov
cld
neg
adc
mov
pop
mov
dec
cmp
fwait
pusha
mov
testb
int3
repz
nop
movsb
iret
loop
ds
xchg
jns
add
es
repnz
adc
nop
imul
mov
mov
jo
or
jl
mov
add
sti
aad
lock
sub
enter
lds
mulb
cs
cld
sub
sbb
das
xchg
xchg
imul
add
sahf
hlt
push
lods
in
hlt
leave
out
notl
rorb
inc
je
js
or
add
fcoml
cmp
repnz
addr16
shll
add
and
rcl
jae
push
and
sub
lods
je
aam
scas
adc
sub
push
pop
in
pop
dec
fdivrs
xlat
pop
inc
scas
jecxz
stos
insl
jmp
dec
inc
outsl
and
cmp
out
faddl
mov
jle
xor
iret
fstl
lret
ret
and
roll
pushf
or
shrb
dec
imul
mov
xchg
movsb
lahf
adc
mov
cld
dec
sub
xchg
divl
sub
mov
aam
std
dec
hlt
mov
push
in
pop
inc
ret
in
lods
and
adc
frndint
jbe
mov
add
mov
hlt
mov
shl
add
jns
in
add
add
adc
inc
or
dec
stos
sti
or
inc
iret
aaa
std
xchg
mov
aam
ret
jnp
push
loop
sub
mov
pop
pop
adc
xor
in
xor
movsl
dec
and
scas
xlat
pop
lods
inc
sub
push
ds
xchg
lahf
in
adc
and
add
std
ja
jb
loope
imul
ret
or
fmull
push
pop
sub
jmp
mov
inc
mov
ljmp
dec
lahf
dec
sbbb
push
jno
repz
jle
test
sub
push
lcall
pop
push
mov
ljmp
scas
cmpsb
add
inc
clc
xor
push
jbe
loop
xchg
mov
jmp
mov
or
pop
xor
adc
inc
pushf
fdiv
jle
mov
call
es
mov
or
cmp
sub
in
pop
xchg
push
daa
and
pop
jns
xchg
inc
lret
cmp
daa
movsl
mov
adc
mov
push
fmul
sbb
jne
mov
lret
jp
xor
sbb
scas
lods
lods
sti
xchg
and
push
push
mov
inc
fwait
or
loopne
or
jnp
mov
xor
pop
mov
ret
clc
mov
mov
icebp
jmp
idiv
mov
inc
js
adc
mov
imul
mov
xchg
insl
into
fwait
dec
jg
jmp
shlb
fsubr
js
lock
fbstp
dec
pop
pop
in
push
aaa
paddusb
push
nop
add
jb
testb
xchg
rcl
stc
ljmp
cltd
aas
addl
dec
inc
xor
mov
mov
jo
or
add
popa
sarb
aad
fmuls
or
in
icebp
ret
pop
add
aaa
mov
hlt
adc
mov
decb
mov
push
pop
outsb
fistpll
sbb
int3
adc
lds
out
adc
dec
lock
stc
stos
out
sbb
dec
and
xor
mov
pop
jnp,pt
sti
xchg
sbb
pop
jp
and
xchg
jnp
stos
inc
aam
fwait
aaa
push
imull
and
cmpsb
cld
or
ret
fldcw
cld
or
sbb
iret
or
cld
scas
add
dec
test
sub
lods
test
mov
mov
add
mov
pop
push
adc
call
add
mov
adc
dec
cli
fisubrs
out
xchg
dec
inc
and
sbb
test
inc
pop
hlt
adc
out
in
sbb
sar
sub
test
aad
lahf
mov
popa
cs
inc
sbb
pop
ret
push
inc
fnsave
and
jge
incl
or
or
jbe
retw
aam
rorb
mov
xchg
mov
dec
dec
xchg
jmp
sbbb
xchg
dec
push
jbe
out
std
sbbb
in
popf
or
lds
dec
adc
cs
test
js
test
mov
pop
out
in
mov
pop
pop
or
stos
int3
or
out
fmull
data16
mov
into
lods
push
sub
or
in
xor
push
out
adc
clc
mov
fnstcw
aam
cmp
dec
loopne
xchg
ret
incl
cmpsb
and
push
push
fdivr
loope
cmpsl
dec
mov
addr16
mov
adc
dec
ret
and
idivl
xchg
out
jb
popa
sti
push
cmp
mov
or
int
or
sbb
jb
adc
mov
ljmp
aam
jge
add
cmp
push
or
nop
sti
jmp
add
jmp
or
scas
xchg
das
out
fcmove
and
dec
mov
sbb
adc
out
ja
imul
fsts
xlat
jmp
repz
dec
loopne
xor
stos
cmp
mov
pusha
adc
jae
and
loopne
fcompl
jns
jo
in
stc
mov
fcmovb
pop
pop
lods
cwtl
jge
inc
xor
in
cmc
push
aaa
loope
sti
imul
arpl
dec
push
inc
cltd
mov
insb
push
ret
pop
clc
adc
add
sbb
mov
push
adc
push
adc
xchg
adc
adc
out
mov
in
ret
ljmp
add
push
in
gs
mov
fistpll
adc
stc
push
xor
sbb
mov
add
data16
xchg
lret
je
pop
pop
das
cmpsb
or
or
fsubl
fnstsw
adc
mov
cmp
mov
insb
sbb
mov
mov
xchg
fstl
pushf
dec
int3
cmpsb
mov
xchg
xor
fcoms
jp
cmp
in
xchg
add
pop
push
mov
sub
lock
push
movsl
push
outsb
add
or
lds
dec
call
shrl
inc
jae
inc
pop
insb
sub
xchg
lock
xchg
imul
les
jmp
jb
cmpsb
inc
out
or
int
or
mov
sbb
jmp
icebp
inc
sti
inc
or
inc
jecxz
leave
push
mov
mov
mov
lea
fsts
add
push
loopne
sbb
fdivl
loopne
scas
pop
les
shl
imul
pusha
pop
and
push
packssdw
lret
jne
mov
inc
pop
testb
mull
rcl
enter
xchg
inc
or
jne
inc
mov
or
test
inc
rorb
adc
sahf
mov
stc
and
outsb
js
rcrl
push
scas
shrb
jae
clc
jp
mov
jle
decl
push
fimuls
lds
jg
and
dec
loopne
push
shlb
cld
mov
fimull
add
jle
stc
cmp
push
dec
add
mov
sbb
xor
ret
xor
out
pusha
sbb
test
enter
das
dec
sbb
inc
bound
dec
cwtl
xchg
jle
or
xor
xor
mov
test
sub
inc
out
rcrb
ret
ss
mov
or
cmp
test
inc
sub
sbb
loopne
pop
js
fimull
inc
mov
adc
mov
stos
xchg
or
xchg
inc
cmpsl
mov
fcmovb
push
pop
push
out
mov
and
dec
std
imul
mov
gs
mov
pop
data16
add
mov
inc
repnz
and
xchg
jmp
jne
outsl
ss
cmp
mov
or
fucomip
ja
jne
mov
cmp
mov
bound
data16
rcll
inc
adc
sub
or
inc
add
lock
cmp
pop
mov
mov
push
mov
lock
aas
or
scas
and
nop
dec
aad
rol
cmp
push
add
cmp
out
daa
dec
pop
and
jns
and
xchg
lcall
cmp
mov
fwait
lods
loopne
mov
dec
and
fcmovbe
mov
xchg
popa
or
mov
xchg
mov
mov
in
sbb
lods
jle
fs
rcll
jo
test
outsl
add
loop
or
loopne
push
mov
scas
lcall
dec
fs
ss
sti
mov
inc
fcomps
jbe
popf
xchg
lods
adc
out
pop
ss
push
inc
push
push
scas
cmp
add
add
mov
lcall
test
cmp
push
cmp
iret
jmp
clc
xchg
sbb
and
cmc
push
mov
jne
dec
xor
or
mov
scas
test
adc
mov
mov
adc
call
sub
xchg
repnz
cwtl
or
add
pop
sub
sti
int3
or
push
gs
stc
mov
dec
incb
lret
cmpsb
movsb
push
dec
lea
and
and
cwtl
pusha
dec
repz
cmp
jmp
dec
pop
insb
mov
das
sub
or
jae
cmpsl
push
scas
lahf
jg
stos
lds
fildl
cmp
shll
pop
int
aas
icebp
adc
cltd
fiaddl
ss
in
test
mov
adc
imull
cmp
loope
mov
in
jns
jp
out
push
jo
cmp
adc
xchg
jmp
xchg
sar
std
call
imul
and
lods
dec
andb
inc
mov
bound
shl
and
cli
cmp
adcl
out
lret
fisubs
in
jbe
mov
cs
xor
cmc
inc
js
mov
or
push
ljmp
in
sub
mov
cmp
cmp
jbe
push
sti
in
xchg
inc
imul
das
repnz
sub
pop
fwait
stc
mov
cltd
xchg
dec
nop
clc
dec
lods
clc
xchg
jb
notl
adc
dec
xor
jecxz
movsl
mov
cmp
sub
push
push
jg
jnp
scas
pop
and
add
push
cmp
push
sbb
pop
or
inc
psrad
inc
mov
lahf
inc
or
xor
arpl
fs
xchg
lret
adc
paddb
adc
xchg
or
push
inc
popf
pop
mov
nop
mov
or
sbb
and
xchg
cmpxchg
inc
loope
jno
sahf
mov
loop
jno
xor
jecxz
es
rcl
xor
or
mov
mov
scas
ljmp
js
mov
inc
std
push
out
pop
roll
repz
jp
xchg
enter
xchg
inc
sub
inc
sub
fiaddl
ds
mov
into
jl
pop
add
jnp
cwtl
and
iret
les
ret
lds
std
cmp
xchg
jle
and
or
test
pop
popa
inc
dec
mov
jnp
out
int
push
cwtl
or
jae
popf
ficomps
and
addr16
pop
hlt
jge
inc
mov
sub
cld
mov
push
imul
filds
std
xor
sahf
pusha
mov
ljmp
enter
icebp
inc
scas
arpl
pusha
dec
sbb
movsl
shlb
data16
cmp
enter
dec
push
leave
jmp
jo
sbb
insb
icebp
mov
adc
int
lods
dec
mov
xchg
or
xchg
pop
xchg
fldenv
scas
in
push
dec
mov
xchg
fwait
loopne
add
popf
repnz
xor
inc
enter
xchg
xor
sti
insb
xor
xor
movsb
jno
imul
pop
mov
cmp
ret
sub
rcrl
stc
stc
mov
xor
pop
loopne
aam
cld
and
push
sbb
jge
test
adc
mov
jne
xor
iret
insl
pop
fistl
lock
pop
stc
icebp
or
dec
xor
scas
daa
or
and
mov
loope
data16
das
out
shll
add
pop
sub
mov
pop
gs
int3
jmp
mov
inc
rcrb
mov
push
stc
push
gs
or
xor
idiv
dec
sbb
mov
sarl
jge
or
jns
jge
jne
jmp
cli
popf
dec
add
dec
dec
cld
xchg
inc
pop
shl
movsl
js
jge
daa
fs
int
bound
jae
test
adc
pop
arpl
jo
mov
out
sub
jns
stos
hlt
mov
pop
add
pop
mov
ljmp
aam
push
mov
je
clc
sbb
pop
adc
pop
repnz
jle
xor
jo
push
out
iret
cmpsb
mov
jbe
popf
and
iret
xchg
ljmp
jns
repnz
shl
cmp
xor
mov
insb
in
sbb
xor
pop
mov
xchg
cmp
ljmp
or
xchg
scas
sbb
dec
out
adc
mov
dec
cld
jle
or
aas
fcomps
xchg
ret
dec
in
pushf
add
pop
dec
aas
xor
lock
lahf
arpl
add
lds
pop
std
cmp
jne
shrb
scas
lods
mov
xchg
mov
adc
push
push
mov
lcall
adc
sub
addl
std
sub
mov
mov
fcmovb
psubsb
iret
imul
xlat
lret
jge
mov
stos
movsl
fisubl
sbb
fmul
sbb
inc
fmulp
negb
adc
int3
xchg
mov
int
cwtl
scas
mov
xchg
and
sbb
jno
xlat
sbb
scas
mov
cmpb
mov
xor
push
inc
icebp
mov
xor
mov
in
call
jbe
fcom
pop
sbb
mov
gs
into
or
inc
adc
outsb
insl
jae
xchg
mov
adc
dec
xchg
enter
cli
push
and
das
push
ljmp
mov
pushf
xor
mov
cmpsb
xor
mov
movsl
pushf
aaa
mov
stc
ja
jmp
mov
popf
stos
push
dec
enter
mov
enter
adcl
fdivs
jns
xlat
mov
ficoms
dec
imul
mov
dec
test
cmp
push
add
data16
fstpl
xor
jbe
mov
jp
xchg
insb
mov
push
cmp
push
add
test
mov
cmpsb
xor
jp
mov
pmulhw
cltd
mov
in
dec
mov
jbe
sbb
mov
cli
sti
push
repz
cmp
outsb
int3
sahf
pop
or
stc
cmc
fnstenv
pop
fsubrp
push
aam
push
xchg
mov
and
das
lret
mov
or
loope
or
cwtl
sub
lock
test
push
or
aas
xbegin
leave
push
sbb
les
fldt
cmp
cmp
insb
dec
xchg
push
jo
je
xchg
dec
inc
jb
inc
ljmp
fdivr
pushf
imul
inc
fisubl
ja
out
inc
rcll
popa
jbe
cmp
repnz
daa
mov
pop
fwait
pop
out
xor
push
int3
in
test
mov
mov
add
push
int
mov
or
lea
sar
mov
sbb
bound
mov
hlt
pop
out
xor
leave
add
xchg
or
add
xchg
xchg
or
add
call
test
jb
fwait
repz
data16
popa
iret
and
sbb
mov
pop
sbb
or
xor
les
out
repz
movsb
pusha
aas
lret
imul
fs
pop
mov
aaa
sub
adc
aam
add
sbb
jb
data16
lea
or
mov
les
cmp
mov
fsubrs
cmp
jno
cmpsl
test
pop
push
idivl
cmpsl
shll
or
jle
cmp
movsb
adc
rcll
mov
mull
sub
cmpsl
popa
cmp
push
pop
sbb
shll
mov
lahf
fcmovnb
cmp
push
fcmove
jl
leave
or
xor
pop
mov
or
es
push
pop
adc
test
add
rorb
jg
sub
jbe
jne
mov
xchg
and
xchg
mov
ljmp
test
inc
jne
inc
stc
jge
les
lret
pop
and
adc
das
outsl
imul
imul
scas
pop
aas
fdivs
mov
int3
shll
inc
pop
scas
mov
leave
xor
stos
push
enter
inc
orb
push
shr
iret
mov
xor
mov
mov
scas
jl
shll
loope
adcb
or
xlat
inc
sti
or
sub
pop
jno
insb
out
clc
adc
lea
lret
add
pop
out
jg
ds
in
mov
sub
mov
pop
sub
sti
sub
cmpl
mov
xchg
popa
pusha
inc
mov
fsubrl
push
pop
mov
push
popa
or
xchg
adc
xchg
cmc
dec
js
subb
jge
cld
popf
dec
aad
pmaxsw
add
jmp
fwait
mov
mov
mov
fdivs
and
into
inc
or
movsb
sbb
nop
lcall
add
sub
pusha
cmp
mov
out
cmp
sbb
inc
sbb
xor
adc
shr
xor
out
mov
adc
adc
enter
call
inc
or
inc
sub
xchg
insl
and
sub
shlb
shr
mov
push
adc
aad
outsl
adc
cmpsb
or
mov
add
je
repnz
mov
and
push
sub
aaa
std
dec
divl
adc
call
js
aad
sub
inc
std
add
jo
std
push
or
subb
adc
xor
repnz
movsb
sahf
nop
xchg
xchg
mov
and
inc
iret
mov
ljmp
aam
sbb
cmp
subl
arpl
add
jg
fucom
imul
shr
ficoms
mov
pusha
mov
scas
adc
inc
inc
out
jb
jg
fcompl
jb
xor
into
pop
in
dec
filds
cmp
xor
in
and
mov
cmp
pop
jno
std
clc
subb
push
pop
mov
fidivs
mov
mov
mov
push
sarb
xchg
loopne
scas
mov
inc
sarl
fistl
test
pop
pand
pop
mov
add
in
push
mov
insb
cmp
int3
fdivrl
jg
jns
test
lods
outsl
aam
stos
mov
movsl
pop
mov
sub
dec
and
loop
filds
paddsb
jp
shll
dec
mov
jbe
ret
sarb
push
push
mov
sub
notl
adc
dec
sbb
jnp
movsb
ss
jp
sbb
shll
out
jbe
dec
insb
lock
jo
frstor
ficoms
mov
sti
test
out
into
int
or
push
cmc
push
in
and
pop
mov
jle
or
das
cld
or
mov
cmp
cmp
xchg
pop
xchg
into
out
ror
packssdw
add
jo
test
push
mov
inc
jno
jle
xor
ss
fcomi
jnp
and
and
jmp
inc
xor
sbb
mov
int
push
mov
adc
mov
mov
inc
leave
push
add
push
adc
adc
push
mov
inc
and
sbb
push
cmp
mov
hlt
or
inc
and
adc
lods
mov
sub
dec
adc
loop
int3
add
jl
and
or
int
mov
cmpsb
sub
lock
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
es
xor
std
or
addl
or
sub
hlt
sbb
inc
mov
stos
sbb
and
fwait
inc
pop
mov
mov
push
int
pusha
xor
je
xchg
lahf
jg
outsl
xchg
mov
scas
pop
sahf
xor
adc
movl
sti
dec
pop
push
mov
dec
loopne
pop
loop
jae
mov
mov
shlb
or
mov
dec
xor
jo
xor
xchg
mov
fildll
jae
jns
dec
cmpsl
add
xor
outsb
pop
mov
inc
imul
insl
mov
aas
sbbl
movsl
jl
dec
mov
data16
aaa
jo
mov
cld
repz
leave
sub
in
into
shll
std
loopne
cmp
sbb
ss
xchg
loopne
sub
fdivl
movsl
xchg
imul
sub
shll
das
fidivs
loope
mov
lret
sbb
cli
push
fmull
je
xchg
call
xchg
jo
lods
rol
and
sbb
push
insl
out
lahf
scas
into
shrb
dec
in
mov
mov
sub
mov
ja
mov
addr16
push
divb
out
negb
test
mov
pop
repnz
or
imul
sbb
shlb
insb
inc
sbb
jb
push
dec
cmp
jge
fstpt
and
or
or
mov
sti
dec
pop
adc
add
add
outsb
inc
movsb
jb
sbbl
sub
sbb
mov
stc
std
insl
jns
imul
aas
push
test
ret
aam
imul
cmp
mov
in
int3
pop
out
inc
sub
loope
xchg
sahf
int
sub
pop
pop
cli
pop
ficoms
push
icebp
mov
cld
testl
push
pop
push
das
mov
jge
lret
std
aad
mov
sbb
outsb
mov
jbe
dec
insl
outsl
ja
lcall
shlb
dec
addb
scas
mov
fists
in
adc
js
movsl
sub
test
sbbb
cmp
push
fdivl
mov
popa
mov
cmp
dec
iret
subb
pop
rorl
icebp
push
xor
sub
cmpsb
dec
and
addb
xchg
adc
inc
jne
lea
sbb
rorl
sbb
mov
mov
mov
push
jno
lret
inc
jmp
pop
and
je
out
lret
and
jno
and
in
popa
and
add
sbb
subl
xor
jb
std
xchg
jbe
in
sti
dec
out
jle
clc
ja
adc
mov
jmp
cld
sbb
sub
xchg
sti
icebp
xchg
and
test
jp
call
stos
jg
xchg
add
sub
push
add
pusha
dec
in
cmp
xor
lret
push
mov
test
jne
inc
xor
repz
aas
jnp
test
fistpl
imul
cmpsl
or
and
iret
jns
sbb
mov
jb
in
inc
inc
scas
cmc
insb
xchg
clc
mov
push
iret
pxor
dec
push
je
test
mov
enter
pop
lods
lret
mov
popa
enter
lock
mov
or
xchg
stos
cwtl
ss
lret
mov
mov
das
mov
out
stos
or
xchg
out
inc
mov
pop
xlat
mov
stos
cmpsb
pushf
adc
divb
in
rcrb
inc
cmp
mov
push
cld
xchg
sbb
ss
push
jl
or
test
adc
call
imul
leave
inc
xchg
jle
jb
out
or
mov
lock
sbbb
pop
pop
mov
mov
push
daa
fs
mov
bound
ljmp
mov
cmp
out
in
push
and
jle
jbe
loop
xor
cwtl
lods
jle
in
mov
in
mov
out
pop
mov
call
push
mov
jl
out
sub
add
subb
ret
sbb
mov
xor
inc
clc
stc
sar
mov
xchg
shll
jae
andl
daa
dec
mov
mov
push
mov
movsl
idivl
jp
pop
add
les
imul
mov
gs
add
aad
jmp
mov
jg
sti
mov
and
sbb
pop
lock
mov
ds
jl
arpl
sbb
or
movsb
cmp
xor
icebp
mov
pop
push
push
cmp
enter
xchg
jge
lahf
idivb
add
repnz
fmuls
push
mov
aaa
arpl
xchg
enter
or
sti
fistps
sbb
add
dec
ret
dec
aas
gs
jbe
xor
pop
mov
pop
js
mov
xchg
nop
push
xrelease
repnz
aam
in
xor
out
outsb
sbb
cwtl
loop
call
mov
addl
leave
in
lock
fwait
scas
and
adc
and
mov
lds
or
leave
mov
repz
stos
popf
subl
les
pop
aam
bound
loop
jle
jecxz
rcrb
les
cld
call
lods
dec
and
or
dec
insb
fs
add
inc
mov
cmp
mov
jae
sub
repz
inc
jp
sbb
mov
pop
adc
insl
lret
push
jg
subb
pushw
push
movsb
shlb
fsubs
mov
mov
mov
push
icebp
mov
test
mov
jnp
mov
inc
in
mov
cmp
push
sub
int3
sbb
fiaddl
sub
or
aam
mov
ds
loop
icebp
mov
xor
cs
loope
cmp
and
fs
add
arpl
enter
pop
stos
sbb
lods
cmp
add
and
enter
adc
dec
icebp
dec
add
add
xchg
push
sbb
inc
mov
jae
sub
inc
jnp
dec
adc
and
lahf
jnp
mov
sub
out
add
adc
and
xchg
je
jmp
addr16
sti
insb
shl
std
sub
xchg
mov
or
out
aam
jecxz
ror
inc
fidivrl
jle
fdivl
clc
pop
mov
lods
fldenv
and
xor
jl
mov
push
daa
jae
cld
sbb
jecxz
mov
sub
or
push
or
into
pushf
mov
out
fld
xor
loopne
repnz
push
or
sbb
mov
pop
gs
or
cwtl
dec
insb
loopne
mov
or
xchg
mov
pop
dec
mulb
cmpb
cmp
cmp
cld
jp
insl
push
lret
outsb
stos
test
sarb
cmc
pop
pop
hlt
daa
mov
xchg
sub
insl
jge
lcall
jbe
xor
pop
ds
mov
xorb
push
cs
sbb
daa
dec
aas
js
lds
imul
sbb
jb
sbb
mov
add
and
bound
fisubrs
movlhps
push
imul
or
mov
pop
lods
jp
sub
sbb
jae
aam
stos
adc
es
negb
popf
mov
push
stc
or
inc
push
shll
add
rorb
dec
mov
fiaddl
jp
mov
adc
add
mov
aas
push
mov
mov
add
mov
mov
rcrl
lea
fnstcw
lcall
lds
inc
jmp
adc
gs
adc
loope
loopne
gs
fs
inc
mov
ret
mov
push
scas
xor
stos
mov
pushf
mov
mov
mov
mov
in
aam
inc
or
lods
add
in
push
aaa
sub
ja
pop
adc
add
imul
fwait
adc
iret
jmp
mov
mov
mov
mov
push
std
mov
lcall
mov
out
je
popf
cmp
dec
stc
adc
jle
adc
movsb
xchg
mov
shrb
test
fistpll
or
inc
int
xchg
mov
lcall
aam
mov
shrl
repnz
xor
mov
adc
mov
gs
icebp
push
inc
mov
mov
lahf
out
jbe
loopne
xlat
imul
xor
lods
mov
inc
les
loop
push
jae
push
dec
cmpsb
add
scas
and
addr16
mov
xor
test
sbb
cmp
stos
jnp
or
add
clc
popl
jp
les
stos
and
ficoms
repz
hlt
adc
push
jge
std
jb
inc
jb
sbb
mov
mov
jl
mov
mov
or
cmp
and
gs
lds
nop
cwtl
sub
bound
mov
bnd
orb
sub
mov
lods
mov
mov
out
inc
push
push
cmp
sbb
dec
sub
shrb
test
fstps
sti
dec
mov
or
mov
test
shll
xchg
adc
outsb
xchg
js
hlt
es
loop
ret
test
pop
sbb
pop
adc
adc
and
fdivl
sub
mov
lea
aas
fnstenv
dec
cld
idiv
fs
dec
jecxz
add
jp
lret
loop
enter
cmp
jbe
jnp
add
pop
pop
scas
dec
dec
xor
xchg
loop
shlb
ret
arpl
jle
sbb
sub
out
rorb
cmp
cmpl
adc
insl
sub
insb
fs
stos
mov
popa
sti
add
arpl
jmp
xchg
mov
lods
or
lret
int3
lds
jmp
lret
clc
xor
int3
lret
popa
cli
rorb
loop
mov
movsl
mov
test
jnp
orb
mov
sub
loop
add
test
or
pop
call
test
jnp
shrl
inc
pop
sti
pop
fisubrs
ja
sub
and
push
in
test
xor
leave
fsin
cmp
pop
shrb
pop
xchg
sub
sub
test
mov
jns
xlat
sbb
pop
addl
sbb
pmaxsw
mov
movsl
hlt
push
or
mov
movsl
dec
inc
push
je
daa
cwtl
add
push
loopne
or
or
mov
enter
lods
or
stos
sahf
pop
call
mov
aam
hlt
sub
cmp
add
mov
js
je
mov
js
dec
bound
insl
cmp
xchg
stos
movsb
ljmp
imul
adc
call
sbb
jp
dec
xchg
test
add
sub
sti
loop
push
icebp
jbe
jecxz
cmp
cmp
cmp
and
leave
dec
jne
cltd
dec
and
inc
stc
nop
or
sbb
fwait
cmp
xchg
and
clc
pop
ret
or
jns
movsl
out
xchg
xlat
repnz
xor
test
loop
sub
repnz
arpl
inc
mov
test
inc
jo
jbe
sbb
stc
mov
call
clc
jmp
out
xor
bound
loope
dec
sbb
inc
xor
aad
pop
and
in
push
push
xchg
loop
lds
mov
jl
int3
push
in
xor
jl
mov
pop
jnp
sbb
xor
enter
xor
jae
outsl
cmc
jg
popf
filds
rorb
icebp
jmp
lods
lret
adc
fldt
gs
and
xchg
jmp
adc
imul
roll
imul
aad
test
adc
shl
fcoms
lods
popa
lods
sbb
andl
scas
xchg
pop
shll
pop
adc
loope
sub
scas
jmp
mov
xor
outsl
cltd
cmp
gs
fsubrl
mov
sub
es
cmp
enter
pop
rorl
add
rcll
sub
loopne
aas
jl
jb
pop
enter
es
and
add
sarb
rclb
mov
cmp
sub
in
data16
shll
lock
pop
daa
adc
add
sbb
ds
add
push
push
or
mov
inc
js
mov
or
jnp
in
or
jo
xorl
adc
daa
push
int
mov
movsl
add
jnp
es
xchg
frstor
mov
xor
out
lea
xchg
ret
mov
push
fnstenv
daa
mov
inc
lret
mulps
sub
jmp
mov
outsl
push
daa
mov
pop
or
push
adc
or
mov
in
pop
notl
mov
sbb
movzbl
mov
cmpsl
inc
dec
mov
sbb
cmp
div
adc
mov
mov
cmp
jl
movsl
mov
test
mov
cmpsl
pop
mov
inc
out
xchg
jns
mov
dec
and
inc
or
xchg
ret
inc
scas
idivl
adcb
pop
xchg
in
out
pop
shlb
daa
dec
jae
pop
sbb
adc
pop
dec
ljmp
addr16
or
je
int3
je
jnp
arpl
sub
mov
dec
jo
sbb
sbb
mov
jae
mov
xlat
add
testb
mov
into
sbb
sti
pusha
imul
iret
aad
xor
push
test
sub
ss
fmul
or
push
aad
ljmp
cmp
jge
pop
xchg
mov
enter
push
rorb
cmpsb
add
bound
or
inc
pop
loope,pt
stos
repnz
daa
xor
mov
test
sub
fs
sub
adc
sti
dec
les
aam
sub
mov
jmp
push
ret
pop
push
fisubrs
cmp
xor
mov
jmp
in
sub
jns
in
lcall
in
pop
ss
mov
lret
add
rcr
call
sub
fcom
clc
cmp
sub
ja
xchg
inc
popf
pushf
mov
and
push
gs
dec
jae
mov
push
aam
jnp
sub
popf
sti
inc
clc
lods
add
pop
xlat
imul
inc
popf
pop
sbbl
xchg
or
jno
std
mov
mov
xchg
test
push
daa
dec
negb
sbb
xchg
mov
test
cmp
mov
ret
push
stos
xor
stos
in
mov
sbb
xchg
data16
push
inc
mov
pop
or
in
sbb
sbb
xchg
cli
popf
les
insb
jns
icebp
cmp
out
jmp
lods
mov
xor
and
push
movl
insb
sbb
ret
hlt
push
sub
rolb
insb
pop
int
dec
ret
cs
or
mov
outsb
jge
add
and
out
xor
mov
lods
test
ss
movsb
adc
jmp
inc
cld
add
push
outsl
jl
cmpsb
mov
add
shll
mov
sub
add
jle
push
iret
jnp
test
and
sbb
mov
push
outsb
pop
jae
push
push
push
pop
loope
jo
jecxz
test
push
das
rcll
or
jg
xor
mov
inc
aas
add
xor
sub
or
cmpsl
cli
fcom
dec
mov
jg
dec
jae
adc
push
inc
stos
in
popa
or
sbb
sahf
aas
arpl
pusha
rcll
addr16
xchg
test
dec
inc
test
mov
add
push
fadds
xchg
inc
in
or
mov
lea
pcmpgtw
mov
add
mov
loop
mov
mov
iret
xor
jge
add
jmp
mov
sarb
rcll
out
xor
push
lods
inc
mov
orb
lahf
dec
jg
mov
mov
dec
jnp
adc
lea
cmp
sar
dec
ret
push
mov
enter
push
xor
aad
lock
xor
mov
andl
test
iret
mov
push
call
pop
jl
jecxz
repnz
leave
or
inc
js
lock
cli
int
sub
mov
and
pusha
inc
xchg
lods
insl
jmp
ja
dec
or
xor
movsl
mov
out
loopne
aaa
scas
aas
mov
mov
lcall
aam
mov
jle
outsl
xlat
lcall
pop
add
ret
push
sbb
pop
fsubs
xchg
aad
jecxz
and
or
out
jno
sub
mov
fsts
pop
popa
inc
outsl
test
lret
enter
push
push
data16
xchg
fidivs
scas
add
repnz
outsb
xchg
leave
push
imul
xchg
inc
pop
pushf
repz
scas
enter
sub
mov
cmc
and
and
mov
mov
sahf
test
xchg
push
bound
sbb
lret
dec
lret
loope
mov
pop
lahf
sbb
mov
lock
aaa
icebp
mov
je
icebp
insb
int3
loop
xchg
xlat
decb
insb
ret
mov
mov
inc
scas
mov
in
inc
repz
mov
mov
xor
pop
add
aad
inc
imul
pushf
mov
pusha
rcrl
push
cmp
es
clc
sbb
aad
mov
dec
add
mov
lods
pop
shlb
rclb
push
cmp
test
or
popa
or
push
jb
sbb
pminsw
int
sub
iret
dec
scas
repnz
pop
test
push
jnp
stc
sub
clc
pop
sbb
jno
sbb
push
jo
sbb
and
add
xorl
sbb
inc
je
push
lahf
movsl
imul
gs
add
mov
mov
stos
adc
mov
divw
mov
pop
movsl
adc
mul
pop
iret
xor
sub
push
ds
insl
stos
add
popf
cmpsb
cmpsl
cmp
test
sub
stos
lea
es
sub
jle
xchg
mov
cltd
xlat
and
lods
jae
daa
test
jecxz
jecxz
dec
fstps
xorb
popf
fwait
outsb
cmp
add
xor
scas
pop
sahf
dec
mov
sub
xor
push
add
pop
dec
fidivrs
rcrb
sbb
mov
mov
sbb
inc
jg
icebp
jmp
fstp
pop
aaa
jo
sbb
ja
gs
ja
sbb
and
cmp
fnstenv
inc
xchg
mov
imul
xchg
mov
rcr
shl
xchg
out
jbe
sub
cmp
xchg
idiv
and
mov
push
push
pop
test
sub
or
test
call
fcmovnbe
stos
pop
iret
in
movsb
nop
pop
iret
mov
mov
out
mov
sbb
mov
hlt
mov
aas
fucomp
aas
int3
loop
add
cld
leave
push
jae
mov
inc
dec
adc
mov
ss
movl
sar
pop
loopne
xor
push
pushf
into
cmpb
pusha
popf
movb
out
cmp
mov
movsb
or
test
sahf
adc
cmp
xchg
ja
pop
or
inc
lods
rcrl
cmp
or
stos
push
push
fisubs
fs
and
aad
inc
popf
in
test
or
sub
arpl
jle
movsb
pop
xlat
pop
cmc
mov
int
and
sbb
xchg
mov
inc
sbb
insl
xchg
cltd
pop
mov
pop
mov
pop
mov
nop
and
test
mov
or
sbb
mov
adc
dec
aad
mov
in
fstpl
push
in
daa
mov
mov
xchg
mov
xor
inc
jb
scas
inc
rolb
aad
lret
sbb
push
inc
shrb
and
sbb
xor
mov
outsl
xchg
or
or
lea
mov
lahf
cmp
inc
imul
ret
mov
outsb
sub
ds
inc
inc
sti
enter
rcrl
dec
pop
mov
dec
sahf
sub
addr16
jb
jle
jecxz
ja
mov
test
int
call
jno
fs
aam
ret
int3
and
cld
add
add
out
add
push
adc
ljmp
sbb
mov
push
repnz
pop
inc
inc
jge
lcall
pop
mov
nop
sbb
mov
sub
inc
mov
pop
js
sbb
repnz
mov
fs
lahf
inc
adc
or
aas
jmp
xor
in
push
popf
xchg
into
in
addb
stc
sbbb
and
ja
or
ret
inc
sub
sbb
scas
idivl
pop
jae
outsb
mov
mov
inc
repz
sbb
adc
jns
cmp
cmpsl
in
shll
gs
aas
adc
in
movsb
cwtl
ret
pop
daa
add
pop
push
and
mov
mov
imul
ljmp
xor
sbb
icebp
outsl
pop
push
cmp
shl
add
je
das
call
push
ret
in
mov
pop
lret
bound
jno
test
xchg
test
fs
xchg
jmp
cli
insl
outsb
das
lods
mov
cbtw
in
pop
inc
imul
cs
iret
movsb
fisttpll
mov
or
sub
dec
stos
push
lret
dec
les
adc
imul
xlat
int3
xchg
jne
push
clc
je
pusha
and
lods
adc
sbb
mov
inc
sbb
push
or
pop
sub
jmp
or
adc
fsubs
aas
shll
sbb
lods
push
mov
sub
roll
in
int
pop
jp
ret
and
lcall
inc
arpl
and
cmp
sbb
pop
sbb
xor
xor
xchg
sub
loopne
das
out
mov
out
mov
mov
inc
sbb
scas
cld
mov
pop
nop
out
mov
mov
mov
ret
cmp
daa
sbb
jae
lret
rclb
add
inc
mov
in
incb
out
pop
fstpl
inc
aaa
jno
fnsave
pop
mov
adc
sbb
ss
mov
mov
mov
sbb
shll
loopne
xorl
adc
and
inc
nop
xchg
shl
jo
loope
cmpl
hlt
icebp
subb
icebp
sahf
orb
in
cmc
aaa
xchg
test
in
add
pop
dec
fmull
aaa
jnp
cmp
xor
and
ja
mov
xor
pop
and
push
insl
push
cmc
js
lea
aad
adc
hlt
inc
leave
sbb
andl
gs
in
stc
in
mov
cmp
test
rcr
stos
stos
or
dec
cltd
pop
test
xchg
inc
mov
lock
mov
bswap
inc
mov
push
adc
xlat
test
pop
in
lret
shll
test
sarb
and
and
fmuls
stos
test
out
inc
xchg
mov
rcrl
aam
xchg
xlat
jne
dec
outsb
xchg
jmp
and
iret
jmp
xor
mov
repz
or
jne
mov
js
movsl
ficoml
mov
add
xchg
out
pop
ja
mov
stos
dec
jb,pt
xchg
loopne
imul
cmp
pop
jecxz
pop
in
popa
pop
mov
cmp
aam
mov
pop
mov
dec
fcmovnu
lret
mov
inc
inc
test
jg
gs
lret
movsl
jl
jbe
fnstcw
mov
push
test
xor
insb
mov
inc
dec
aam
sti
cmpsl
add
ds
push
sub
adc
mov
and
xchg
add
scas
sbb
xchg
mov
mov
ss
jmp
xchg
rcrb
loop
insl
sbb
jo
inc
je
push
push
repz
popa
adc
es
mov
pushf
jne
sub
or
push
jg
dec
adc
jne
push
lds
ss
insb
xor
dec
cwtl
push
or
add
xor
and
adc
roll
aad
jnp
push
or
and
mov
inc
fs
xchg
inc
int
xchg
lret
hlt
ds
and
repnz
iret
and
inc
in
mov
cmp
shlb
stos
xchg
loope
in
pop
push
out
in
stos
std
mov
aad
gs
dec
ror
inc
mov
inc
dec
xor
mov
mov
add
sahf
int
outsb
ficomps
adc
sbb
into
or
hlt
mov
sub
mov
inc
adc
cli
sbb
enter
inc
pop
loop
sbb
pop
push
shlb
mov
lods
ret
inc
jae
jbe
jae
lock
add
flds
lret
cltd
movsl
icebp
cmp
movsl
adc
pop
xor
stc
xchg
sub
imul
loop
outsb
sahf
fstl
fimuls
pop
aaa
in
push
add
jns
add
or
imul
sbb
jo
in
iret
enter
rolb
std
scas
pop
outsb
fiadds
lea
jg
sahf
clc
sahf
out
mov
ret
mov
fiaddl
cmp
rolb
imull
xor
sub
xor
or
pusha
addr16
icebp
cmpsb
add
pop
iret
adc
insb
cmp
mov
xchg
das
jne
imul
mov
cmp
in
out
mov
cmp
push
push
mov
and
in
imul
das
je
cmpsl
mov
imul
aad
in
aam
ja
aaa
stc
or
mov
clc
xor
and
mov
loop
inc
cwtl
cmp
test
dec
sbb
xchg
or
repz
jle
fildl
cld
ret
push
inc
adc
inc
sti
repnz
cmp
mov
cmp
lret
fisttpl
xchg
xchg
pop
int
jmp
mov
mov
jg
in
add
clc
lock
xchg
insl
mov
das
sbb
lods
test
add
fidivs
jns
movsb
push
sbb
rclb
es
push
jmp
cmp
xchg
pop
xchg
push
int
in
shl
pop
scas
dec
jae
sub
push
pushf
mov
dec
push
int3
inc
dec
sarb
aam
pop
push
aaa
imul
fs
jmp
popa
testl
add
sti
dec
in
in
pop
push
mov
insb
xor
sub
popa
fdivrl
rcrb
sbb
mov
mov
out
pop
sbb
int
dec
cld
test
in
lcall
mov
lock
arpl
iret
xchg
inc
insl
cwtl
addr16
jb
add
movb
pop
jp
imul
loop
lahf
sbb
aad
adc
and
lahf
lret
and
xorl
mov
jmp
lods
push
pusha
jnp
test
push
stc
lret
mov
jb
nop
test
int
sub
nop
and
push
mov
scas
test
jnp
jbe
or
ss
mov
or
xchg
sahf
cmpsl
cmp
aad
int3
mov
mov
in
ds
or
fs
scas
cmp
xchg
hlt
ss
push
mov
sub
xlat
add
pop
aaa
jae
pop
test
inc
ror
jle
out
sbb
dec
jne
sub
and
ret
pop
scas
imul
jno
in
push
mov
jno
test
dec
inc
adc
filds
bound
mov
hlt
ss
or
pop
pop
insb
inc
mov
out
clc
add
or
push
mov
scas
sub
push
pop
sub
xor
push
xchg
dec
adc
ficoms
push
insb
pop
nop
push
add
sbb
pop
jg
jno
dec
xchg
cmp
adc
imul
roll
mov
jp
imul
dec
mov
cmp
push
lods
mov
jne
test
mov
imul
jmp
add
je
movsl
mov
aaa
or
sub
fnstsw
fs
lret
jg
shll
xchg
mov
int
cld
and
pop
jns
std
cmp
mov
lds
test
jnp
adc
dec
imull
dec
mov
enter
adc
adc
inc
inc
xor
cmp
mov
xchg
rcrl
sbb
add
mov
test
jg
mov
mov
sub
in
dec
popf
out
fs
pop
sti
push
roll
mov
cltd
add
xor
cmp
dec
cmpl
gs
xor
pop
fdiv
cmp
mov
enter
xor
mov
cmc
mull
pop
int3
mov
pop
push
pop
lret
rcl
loopne
pop
es
mov
mov
xor
rcr
sbbb
lds
lret
adc
in
mov
aaa
pop
int3
test
mov
popa
les
insb
mov
std
sti
ret
movsl
test
xor
lds
mov
popa
out
das
std
sbb
adc
mov
shl
push
shrl
sbb
dec
dec
dec
out
out
bound
mov
jbe
and
mov
lea
scas
sbb
insb
and
mov
fcoms
and
push
xor
or
cmpsb
and
pop
push
out
xchg
jae
icebp
dec
lds
mov
outsb
cmpsl
jb
pop
aas
sub
insl
adc
repz
fnsave
sub
movsb
outsl
mov
push
fidivl
xchg
add
sub
in
nop
sub
movsl
xchg
mov
sub
push
push
ss
push
cmpsb
test
mov
mov
push
jae
pop
xor
in
xchg
mov
cmp
ret
nop
cli
in
inc
mov
add
or
push
ljmp
cwtl
lret
push
xchg
mov
mov
je
jle
push
rcrb
cmp
fwait
xor
pop
loopne
xor
sub
mov
xchg
mov
subb
xchg
and
dec
loope
fwait
ljmp
in
lock
bound
push
fmull
mov
insl
push
cmp
out
decl
jg
mov
dec
push
push
dec
data16
inc
jp
xchg
inc
pop
lods
and
cmpsl
ficomps
xchg
pop
ficoms
sbb
imul
mov
jnp
inc
ret
cmp
lock
cmpsb
and
inc
xor
add
jne
or
frstor
in
add
xor
jl
gs
mov
sbbb
shll
sub
cs
xorl
fnstcw
hlt
jl
xchg
inc
out
pop
mov
das
int
fucomp
lea
outsb
cmp
pop
repnz
jno
lahf
jae
dec
jo
and
fildl
sub
sbb
les
jne
pop
xchg
push
inc
xlat
jbe
pop
add
lods
jns
pop
jae
std
pop
int
test
inc
hlt
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
inc
push
mov
or
addl
or
fisubrl
test
jecxz
stos
adcb
cmp
pusha
imul
xlat
pop
push
sbb
push
mov
jp
vpackssdw
mov
inc
push
and
add
insl
mov
repz
sub
shll
mov
xchg
dec
mov
fnstsw
or
mov
add
iretw
mov
test
es
push
mov
push
mov
push
sahf
int
lcall
cmc
movsl
imul
sub
in
movsl
in
sbb
push
xchg
insb
mov
cmp
fwait
mov
fcoms
sti
imul
insb
insl
jns
sbb
mov
xor
cmp
cmp
and
or
fcomip
adc
movsl
and
xor
and
cmp
cmp
dec
sbb
sbb
xor
divl
insl
shll
loop
or
push
pop
jge
inc
mov
xchg
jnp
push
pop
test
cs
outsl
addr16
mov
repnz
and
xchg
mov
dec
xor
in
push
dec
cmpl
sbb
fldl
adc
roll
jg
loope
xor
xchg
aam
scas
movsb
sub
js
and
js
pop
jmp
sub
in
xor
pusha
push
or
fcmovb
push
and
adc
loopne
pop
push
pop
hlt
mov
adc
dec
je
mov
cli
xchg
pop
rol
cld
fwait
mov
imul
mov
push
mov
sub
mov
push
sub
or
mov
mov
cltd
cmp
lea
test
int
daa
mov
mov
jmp
jae
icebp
divl
cmp
jno
or
testb
mov
and
pop
lcall
jecxz
dec
mov
movsl
push
dec
test
fucomip
ss
add
lods
mov
daa
add
outsl
jnp
and
clc
rcrl
in
xor
cmp
bound
sub
add
xor
or
xor
lds
pop
in
icebp
inc
and
cmp
jle
add
pop
inc
cli
out
aam
cmp
jmp
loopne
add
jl
mov
mov
imul
movsb
push
mov
cmp
out
std
daa
xor
adc
push
pcmpeqb
jg
and
xchg
xor
divb
push
hlt
cmp
lcall
daa
sahf
bnd
cmp
loopne
cld
xor
mov
pop
sub
add
or
insl
sbb
push
mov
loope
or
ds
repnz
vfnmsub213ss
pop
fbld
sbb
lock
lret
or
xor
sbb
lods
mov
insl
add
add
addr16
insb
add
gs
pop
jg
jbe
mov
test
sub
repz
pop
shll
fsts
inc
mov
pop
iret
es
add
pushf
jae
cltd
clc
cmc
ja
rcrl
dec
cmp
mov
mov
mov
xor
imul
or
lods
push
sub
stos
adc
mov
scas
or
mov
push
int3
push
pop
fidivl
mov
pusha
fdivl
add
xor
sbb
std
mov
mov
nop
inc
fnstenv
cmp
ja
mov
push
xchg
inc
subb
inc
cmc
xchg
add
jns
push
and
or
mov
jmp
jno
mov
and
adc
push
push
jp
xor
xorb
out
into
sub
push
mov
je
dec
mov
cmp
cmpsl
sbb
pop
cmc
insb
pop
icebp
int3
cwtl
ret
push
int
mov
call
int
subb
outsl
and
repz
aad
je
loopne
stos
mov
mov
add
mov
pop
sbb
mov
inc
jmp
decb
enter
mov
mov
dec
inc
inc
or
adc
into
push
iret
add
push
es
leave
cmp
mov
push
mov
jmp
jl
inc
pop
cmpb
bound
ss
bound
push
inc
mov
inc
pop
stos
mov
cmp
mov
mov
pop
addl
or
sub
mov
loope
mov
jmp
pushf
rep
xchg
adc
js
daa
in
pop
sub
pop
sarl
sub
mov
pop
fiadds
das
insb
xlat
and
mov
or
int3
sbb
mov
sub
inc
cltd
sub
inc
imull
pop
adc
nop
mov
adc
int3
mov
adc
fildll
test
or
inc
add
rcr
mov
mov
cmpsb
lods
not
scas
xor
cmp
push
ret
aaa
mov
xor
inc
sbb
mov
mov
jmp
and
aam
adc
icebp
inc
rclb
and
stos
mov
call
in
cmp
mov
xorl
xchg
aad
xor
mov
pop
mov
mov
cmpsl
xchg
mov
push
adc
in
stc
lock
xchg
negl
std
lods
jne
mov
mov
cld
sahf
inc
sbb
cld
test
movsb
mov
hlt
mov
js
inc
sub
std
jl
mov
pop
sbb
fldcw
cmpsb
adc
mul
sbb
push
jp
push
cltd
dec
mov
inc
add
in
je
jae
sbb
pop
pop
mov
jl
or
push
ss
push
lock
cmp
pop
stc
sub
fndisi(8087
dec
int3
push
loope
mov
adc
std
sbb
ds
cmp
mov
mov
inc
push
and
inc
aam
aad
adc
and
outsb
add
pop
xor
pop
dec
inc
test
nop
movsl
aam
ss
scas
sbb
pushf
sub
sub
jmp
sbb
loopne
mov
movsl
pop
xchg
in
decl
sti
sti
cmp
inc
mov
push
testb
jle
or
roll
push
jns
andb
jae
jns
jns
idivl
divb
xlat
out
mov
nop
pop
adc
and
outsb
mov
dec
jle
cwtl
mov
in
fs
in
aas
or
or
adc
jb
sub
iret
cmc
pop
test
push
xor
push
sahf
std
and
dec
cmp
mov
push
test
and
mov
mov
loope
adc
inc
into
outsb
or
inc
movsb
mov
cmpsl
sub
cmpsl
aaa
shrb
sbb
mov
mov
jp
and
and
les
mov
xor
rcrl
inc
sti
sbb
sbb
adcl
adc
xor
in
aad
pop
push
test
mov
cs
cmpsl
hlt
mov
or
and
add
call
sub
mov
lock
xchg
cwtl
mov
enter
ficomps
pop
stos
inc
sbb
clc
and
mov
je
xchg
aam
and
mov
pop
jnp
das
stos
add
in
dec
push
cmp
cmp
int
inc
sti
push
das
sbb
cmp
daa
mov
test
les
or
mov
hlt
cs
jl
mov
lret
xchg
pop
and
mov
mov
mov
cli
pop
push
loop
or
sub
leave
mov
test
mov
fsubs
or
arpl
rol
repnz
mov
pusha
inc
repz
pop
mov
fcompl
adc
sub
cmp
adc
outsb
arpl
loop
ror
in
and
dec
mov
loop
push
mov
sub
cmc
inc
int3
je
in
cs
add
aaa
scas
and
cmpsb
push
and
faddl
mov
repz
icebp
jle
mov
add
fisubrl
mov
mov
ss
and
jmp
lds
xor
add
cmp
cmp
sbb
mov
and
aas
inc
out
test
push
ja
adc
ds
ret
stos
inc
loope
xchg
cmp
mov
jecxz
mov
pop
les
sbb
in
jl
roll
insb
in
xor
pop
hlt
ss
pop
push
jmp
jae
jno
sbb
lock
loope
stos
pop
int
sbb
jg
pop
gs
pop
lcall
push
adc
je
out
mov
or
lret
nop
lret
xor
test
or
psadbw
mov
nop
jg
test
lahf
into
in
nop
push
push
out
std
imul
add
addb
push
xchg
push
mov
push
in
loopne
pop
test
jb
aad
enter
mov
mov
sub
or
jecxz
xchg
cld
pop
ljmp
jb
sub
mov
jb
insb
add
fsubl
or
add
add
ljmp
xlat
loopne
dec
repz
lret
dec
std
sbb
jbe
test
jne
jl
pop
popa
push
fildl
sbb
jmp
out
cmp
cmp
jecxz
scas
mov
xor
rclb
jp
xor
imul
and
insl
outsb
jnp
jnp
xor
rcl
cmc
cld
xchg
fnsave
stc
jb
jle
adc
inc
mov
mov
in
arpl
stos
pusha
stc
push
pop
es
sbb
mov
add
pop
ss
mov
sub
insl
xchg
and
das
or
lds
pop
stos
dec
fisttps
test
out
pushf
hlt
imul
popa
mov
incb
lret
add
gs
pusha
push
adc
fs
cmp
insl
lcall
pop
jbe
jg
lret
popf
loop
subl
sub
dec
out
mov
bound
repz
cli
inc
js
pop
sbb
dec
imul
ret
nop
insl
adc
lods
sti
loop
test
movsw
and
in
and
ss
leave
iret
test
stc
pop
adc
repz
or
aaa
jge
cld
daa
test
inc
les
js
mov
cli
hlt
adc
sbb
stos
xchg
mov
inc
orl
pop
and
sbb
mov
lea
aam
sub
jmp
jl
dec
mov
xor
sub
addb
lahf
and
rcrl
jge
test
test
jns
prefetchwt1
mov
pop
xor
cld
aaa
into
mov
pop
cwtl
mov
leave
mov
push
and
les
pop
dec
psadbw
mov
in
sarb
xchg
add
cli
sub
xlat
mov
jmp
out
lret
xchg
dec
add
imul
test
scas
cmp
inc
pop
xchg
aaa
mov
outsl
jne
xor
pop
mov
xor
mov
sahf
pop
cmp
es
jnp
mov
inc
inc
cmp
test
jnp
and
dec
cmp
cmp
fstl
test
shll
sbb
and
push
mov
inc
popa
sub
fnstcw
lds
mov
jmp
imul
mov
jg
mov
push
push
inc
les
sbb
imul
sub
movsl
lea
mov
sti
clc
xor
lea
add
mov
lods
dec
adc
aad
ss
push
call
inc
mov
cld
fbld
ja
push
addr16
out
add
mov
mov
fwait
cmp
pop
std
cmp
mov
sti
fdivrl
cmpl
add
jnp
cmp
jb
sub
dec
add
cld
in
outsl
adc
add
fidivrs
xor
out
and
icebp
imul
and
jle
cs
loope
mov
mov
fnstcw
mov
cwtl
call
stc
inc
rcr
pop
mov
lock
dec
xor
repnz
mov
rcr
xchg
fnstsw
mov
xchg
mov
imul
cmp
push
jge
ret
movsb
xchg
adc
dec
sbb
imull
lods
adc
sub
adc
jo
xchg
jg
xor
dec
jp
mov
sub
jmp
mov
rcrb
jmp
ror
jge
sahf
js
mov
nop
sub
cs
dec
push
mov
cmpsl
jge
insb
movsb
push
fsubrp
les
aaa
iret
xor
xlat
lret
cld
popf
insl
pop
movb
frstor
xor
push
dec
lods
imull
mov
xor
enter
mov
xchg
xorl
mov
mov
mov
dec
and
fs
ja
mov
pop
inc
fs
clc
or
scas
pop
push
outsl
xchg
cli
js
sub
lods
out
shll
popf
adc
outsl
xchg
xchg
or
cmp
ds
dec
scas
xor
popa
mov
xchg
jg
jns
inc
daa
cmc
frstor
add
mov
pop
decb
insb
xchg
push
xor
movsl
lods
xchg
or
mov
in
repnz
dec
pop
inc
jno
aad
cmp
aas
jg
lods
mov
mov
mov
add
stos
jne
sub
aam
imul
or
loopne
icebp
xchg
int3
jne
cwtl
inc
lods
std
divl
int
inc
jp
hlt
scas
add
test
in
sbb
mov
jle
in
dec
jno
push
insl
jns
jbe
inc
imulb
das
mov
jnp
pop
push
mov
mov
fistpl
cltd
or
test
enter
daa
xor
scas
xor
fnstenv
xorl
cs
push
add
inc
mov
cmc
xor
loop
sarb
mov
mov
insl
int3
adc
pushl
and
mov
mov
jmp
nop
test
les
mov
mov
loopne
xchg
mov
pop
pop
ret
test
mov
inc
pop
fsubl
test
push
cmp
in
mov
les
xchg
je
xorb
jo
sub
or
shll
enter
dec
jne
and
insb
sbb
mov
jno
push
sub
mov
call
add
jnp
lods
ds
mov
mov
sub
xchg
icebp
mov
sahf
xor
nop
xor
stos
iret
adc
xchg
int
xlat
fwait
push
inc
fwait
repz
sti
push
dec
dec
add
and
rorb
in
dec
mov
imul
add
xchg
jo
sti
push
cmp
inc
sbb
lock
jmp
fisttpll
inc
clc
push
pop
inc
lret
mov
xor
mov
pop
cmpsb
mov
sub
mov
sbb
add
and
fs
jo
inc
das
sbb
aam
and
jmp
inc
and
clc
icebp
nop
iret
stos
insl
clc
or
xchg
sub
mov
inc
neg
clc
dec
dec
out
mov
push
mov
mov
pop
test
mov
enter
pop
je
call
and
popf
jg,pn
pop
cmp
xorl
sub
cmp
jne
xor
push
enter
shrb
in
inc
mov
mov
stos
aam
hlt
outsb
out
stos
into
and
push
push
sahf
adc
daa
test
leave
mov
cli
mov
sbb
mov
in
icebp
int
pop
rcll
ds
sub
xchg
xor
mov
cld
out
push
mov
xor
jns
lock
aam
mov
mov
jb
pop
aam
xor
inc
cld
cmp
mov
cltd
jns
jge
and
movsl
push
inc
mov
testb
repz
hlt
fisttps
popf
xchg
inc
inc
dec
xor
cmp
xchg
std
cld
mov
fnsave
dec
aaa
inc
lret
dec
jae
popa
lods
scas
pop
xchg
aas
or
jno
xor
mov
out
sub
aas
pop
sub
dec
adc
jmp
mov
in
fsubl
adc
mov
sbb
fidivrl
popf
mov
sarb
stc
push
fbstp
and
cmc
scas
xchg
cli
nop
inc
dec
mov
sub
cmp
sbb
jge
pop
test
std
pop
xchg
int
fdivl
jns
mov
inc
pop
fs
idivb
jle
in
jge
lret
xchg
mov
mov
cmp
dec
lret
push
jo
xor
fistpll
push
shrb
popa
js
push
addr16
hlt
cmpsl
loopne
mov
daa
cmp
fsubrs
pop
push
mov
mov
xor
rolb
stos
push
les
scas
in
xchg
add
test
loope
and
inc
cltd
dec
lea
shrb
dec
arpl
sbb
jecxz
pop
pop
into
pop
repnz
repz
mov
adc
sub
inc
into
inc
dec
inc
cmp
fdivrs
mov
lcall
mov
pushw
push
push
adc
mov
ret
and
mov
inc
sbb
mov
jae
xlat
dec
xchg
xchg
not
addr16
mov
dec
xor
and
pop
inc
fisubs
dec
or
andb
push
outsb
add
stos
fcomps
cli
mov
jle
pop
lods
notl
mov
jl
ror
jns
dec
pop
jg
pop
cmovns
xchg
mov
loopne
bound
clc
pop
and
or
bound
sub
jp
push
sbb
adc
repnz
mov
and
andb
jnp
mov
out
xchg
data16
xor
imull
pop
mov
sub
gs
in
add
cli
xorb
fldt
add
mov
iret
pushf
sub
inc
mov
add
test
push
jg
js
sahf
sbb
jmp
lods
mov
or
outsl
call
data16
dec
add
ds
jmp
sbb
scas
lock
aaa
loope
cmp
rcr
cmp
mov
or
inc
fistpll
lahf
sahf
mov
fstpl
pop
mov
mov
lods
cli
fs
in
rcr
xchg
ret
roll
mov
sbbl
hlt
dec
das
call
movl
cs
sbb
jne
or
outsl
mov
stc
mov
jns
mov
dec
sbb
mov
and
jg
lds
lock
clc
loop
popa
cmp
stos
shlb
mov
shll
mov
scas
ret
out
push
div
push
inc
cld
std
filds
fildl
pushf
ss
nop
loopne
adc
shlb
iret
into
clc
int3
xchg
je
in
insl
lea
sub
mov
and
xchg
cmp
xor
xor
stos
movsb
in
shrl
int
cmp
mov
out
mov
inc
push
sub
mov
and
popf
sbb
loope
pusha
adc
mov
push
stos
jb
sbb
and
mov
adc
rclb
sub
jns
arpl
frstor
rcrb
jecxz
clc
cwtl
enter
xchg
sub
repnz
cmp
in
pop
imul
jg
shll
fwait
test
xlat
jbe
out
mov
pop
movsl
lahf
loop
daa
or
sub
or
shlb
jle
es
sbb
hlt
xor
jg
movsb
clc
mov
ret
cs
mov
cmp
stos
inc
sub
decl
scas
ret
sub
icebp
test
push
jne
mov
jge
sti
ret
add
movl
sbb
movsl
or
repnz
nop
jns
and
popl
insl
jge
fsubp
ljmp
repnz
mov
mov
inc
es
add
mov
out
testb
mov
outsl
loopne
imul
addr16
mov
shl
stos
inc
jae
stos
or
movl
cmp
dec
push
mov
mov
movsb
adc
daa
pop
in
cltd
mov
popaw
mov
xchg
add
add
xor
test
jbe
adc
and
sbb
jge
xor
mov
xor
loope
sub
aas
add
inc
dec
and
jne
test
dec
xchg
fiadds
test
movsb
lret
sub
mov
fldl
leave
out
lods
leave
sbb
xchg
cmp
in
add
fs
enter
inc
mov
das
jb
push
xor
lods
dec
adc
outsl
lret
cmpsb
data16
push
jmp
adc
dec
or
loop
adc
push
int
fs
cli
cmp
sub
inc
js
xor
jns
push
xchg
mov
adc
inc
inc
fildl
add
std
lea
enter
inc
inc
dec
cmpsl
lahf
inc
inc
ljmpw
jg
xlat
pop
sbb
xchg
xor
in
dec
je
push
push
push
es
jae
mov
cli
es
cld
hlt
stos
fisubs
lods
xchg
cltd
lret
pop
les
cmpl
leave
xchg
in
in
jnp
test
cmp
jno
sbbl
add
cli
jno
xchg
fimull
and
ljmp
sub
jle
jl
jb
xchg
mov
outsl
ret
lcall
scas
bound
adcl
stc
mov
lock
es
mov
rcrl
int3
add
ja
inc
leave
jmp
daa
mov
adc
add
scas
mov
mov
jmp
mov
les
roll
push
push
and
jns
out
jp
cmp
and
roll
sti
sahf
rcrl
mov
jg
jnp
jle
cwtl
andb
in
es
pushf
mov
cmpsl
or
test
mov
jbe
mov
and
inc
dec
lods
adc
mov
popa
push
add
loope
mov
ds
data16
and
call
in
mov
in
or
lea
jp
xchg
lcall
sub
xor
pop
jg
xchg
jns
aam
mov
and
and
jo
inc
inc
aam
push
cmp
int
iret
movsl
jp
dec
cmp
nop
mov
rorb
icebp
adc
movsb
inc
aas
mov
cmp
rol
daa
jecxz
out
leave
shlb
pop
mov
popf
jle
jge
popf
xor
sbb
pmulhuw
add
jle
jbe
adc
das
mov
scas
xchg
mov
mov
test
imul
inc
mov
add
push
es
daa
sub
jne
xlat
mov
xchg
ficompl
jnp
scas
jae
fwait
jmp
xchg
add
or
push
push
jno
fildl
es
in
imul
jecxz
out
xchg
call
add
fmull
push
inc
xor
jo
loope
out
mov
mov
jb
push
daa
dec
ret
in
cmp
lret
pop
stos
mov
push
inc
test
adc
cli
or
adcl
mov
inc
mov
push
mov
push
pop
orl
pop
out
sbb
sub
inc
mov
or
jne
pop
lods
jmp
xchg
in
pop
sbb
dec
nop
xchg
inc
orl
or
sub
push
lcall
loopne
fcmovb
add
lods
insl
test
arpl
leave
xor
loopne
jns
daa
cmp
xor
in
rclb
ret
mov
mov
jecxz
pop
ljmp
repz
pop
push
mov
add
sub
and
nop
mov
sub
xor
pop
mov
xor
hlt
outsl
pushf
cmp
add
shll
mov
mov
dec
push
movsl
mov
mov
mov
or
sbb
sti
inc
js
xchg
sub
mov
fcompl
es
jmp
in
sbb
xor
les
imul
mov
mov
mov
fidivrs
xchg
mov
bswap
aam
cmp
aam
inc
cwtl
or
insb
mov
arpl
test
add
mov
cmpsl
loopne
push
and
lea
cli
iret
call
popf
jbe
xor
mov
jne
cmpsl
ret
mov
outsl
into
insb
inc
push
add
sub
aas
iret
xor
popf
lahf
mov
gs
js
inc
cwtl
mov
lahf
stc
pop
push
xlat
mov
lret
jbe
dec
sti
cmp
or
pushf
mov
fs
shlb
and
pop
in
mov
mov
and
imul
dec
push
pusha
scas
add
sbb
ljmp
jmp
xchg
inc
dec
sbb
pop
pushl
and
mov
pcmpgtd
fstpl
fisubs
enter
cmp
movsb
lock
bound
adc
enter
mov
sub
fs
sarl
imul
mov
xchg
lret
push
mov
inc
pop
dec
rolb
loopne
xchg
cmpsl
mov
adc
lahf
xor
and
xchg
mov
setbe
inc
insl
and
push
push
lods
addb
test
jns
xor
aas
pop
add
mov
jno
addr16
or
xchg
ja
rol
lds
mov
mov
rclb
mov
and
mov
js
inc
lods
cld
movsb
fsubrl
jo
jmp
pop
mov
add
aad
lret
sbb
in
lods
inc
xor
xchg
pop
mov
cmp
jns
jb
jbe
bound
inc
mov
inc
push
sti
ja
push
in
mov
mov
rorb
pop
mov
or
mov
imul
adc
incl
adc
jmp
lahf
mov
gs
xor
daa
imulb
dec
dec
add
js
loope
outsl
add
sbb
mov
in
adc
loop
cli
outsl
mulb
inc
mov
sti
pop
mov
adc
bound
xchg
inc
and
adc
lock
pushf
rorb
and
xor
lahf
xor
and
movb
or
ds
stos
xchg
push
pop
and
lds
push
jb
fildll
and
in
into
stos
hlt
dec
inc
push
push
push
cmp
enter
lret
leave
mov
jecxz
cmp
cltd
mov
xlat
dec
add
sbb
imulb
ljmp
cltd
aad
lret
leave
test
cwtl
mov
sbb
aas
leave
adc
cli
mov
push
lods
scas
out
sub
cmpsl
mov
dec
inc
or
mov
xlat
dec
add
jne
jecxz
push
lods
sbb
adc
pop
insl
cmpsl
add
mov
xchg
aam
insb
and
push
jns
frstor
jle
mov
dec
lahf
mov
jl
stos
cmp
cltd
jae
pop
adc
in
and
movsl
sarl
sub
clc
and
xor
clc
xor
jae
sub
repnz
mov
iret
pusha
test
in
cmp
sbb
add
mov
lds
sub
xor
mov
push
sbb
push
shrl
inc
mov
aas
outsb
jns
test
icebp
int
or
xor
test
or
call
mov
addr16
inc
out
sahf
movsb
sbb
inc
xchg
jge
pop
sbb
push
mov
scas
mov
and
jbe
lds
adc
mov
pop
mov
pop
push
out
out
xor
loope
push
ret
test
sbb
add
jle
lea
cmp
and
insb
mov
dec
add
or
jne
pop
fisubrl
dec
lea
fwait
test
xor
movsb
and
mov
popa
fmuls
ss
outsl
push
xchg
push
insl
out
pop
xchg
js
bound
push
sub
loop
push
adc
adc
dec
dec
add
rorl
bound
mov
loope
negb
or
mov
lods
shrl
sub
xchg
aas
mov
mov
mov
rclb
in
cli
adc
and
mov
in
push
cmpsb
push
cmp
lret
inc
movsl
inc
cmp
idivb
ret
jnp
xchg
jp
popf
mov
cmp
es
pop
jae
sarb
enter
hlt
and
add
add
fabs
fisubs
mov
dec
lock
pop
loopne
add
mov
push
sbbl
shll
test
or
inc
jo
pop
outsl
psubw
cmp
dec
jmp
add
adc
add
mov
dec
out
xchg
jo
jnp
and
adc
lock
pushf
outsl
add
cmp
jns
outsb
loop
add
jl
xor
fadds
jo
or
iret
sub
push
dec
push
enter
insl
outsb
punpckhdq
enter
enter
push
push
mov
test
sbb
push
movsl
pop
and
enter
mov
popaw
adc
sbb
inc
mov
lods
mov
jns
loopne
or
push
sub
xor
cli
mov
mov
lea
xchg
lahf
fcoms
push
mov
lods
mov
lret
add
or
mov
into
sbb
pushf
add
jle
xchg
jge
cmp
fmuls
mov
cmp
dec
scas
sbb
cmp
iret
xor
dec
add
lcall
sbb
sbb
xor
inc
out
xchg
fdivs
xchg
or
and
xchg
sub
mov
push
inc
popa
sub
cltd
cmpsb
jns
pop
and
adc
pop
xchg
and
cmp
dec
std
aaa
lods
add
xor
hlt
idivb
or
das
shl
pop
mov
in
pushf
sar
test
pop
hlt
mov
pop
int
push
push
mov
mov
cltd
adc
std
int3
ss
xlat
aam
frstor
sbb
add
fsubl
sbb
xchg
jo
pop
push
shll
out
fs
sbb
push
fisttpl
push
and
dec
cmp
pop
imul
sub
test
das
shrb
cmp
mov
pop
push
dec
mov
sahf
mov
fwait
aaa
dec
jae
filds
push
adc
cli
jp
nop
leave
mov
push
rorl
inc
or
xacquire
enter
add
mov
cmc
adc
pop
jmp
jge
mov
mov
jne
pop
loop
rclb
int
mov
and
mov
dec
and
mov
lods
jp
ja
sub
call
jns
movsl
pop
into
xchg
mov
data16
fcmove
mov
fs
dec
mov
std
jge
scas
cmpb
or
adc
cmc
add
jp
pop
pushf
mov
outsb
fs
out
bound
xchg
xchg
sbb
fwait
roll
insb
shl
add
sarl
popa
repz
mov
adc
rcll
lods
rcll
rorb
mov
inc
insb
mov
imul
mov
popl
je
push
in
inc
cmpb
ret
movsl
cmp
mov
sub
lds
stc
bound
mov
ss
add
adc
in
jae
xchg
pop
lcall
inc
add
add
enter
and
cld
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
cmp
insl
rcrl
orl
andl
push
cmp
das
jg
add
fiadds
add
popa
xchg
loopne
cmp
sbb
adc
sahf
addl
movsb
lret
xchg
pop
adc
syscall
dec
mov
divl
xchg
cld
xor
dec
rorl
es
js
add
loop
xchg
adc
mov
xor
adc
cs
out
out
les
sarl
popf
add
or
or
add
in
xor
repz
fdivrs
push
pop
mov
pop
sub
push
les
and
stc
lahf
inc
adcb
movsb
call
ds
lds
xor
xor
ljmp
mov
shlb
pop
push
addr16
ret
pusha
jg
mov
stos
mov
jae
aas
jno
xor
test
cmp
repz
mov
cmp
mov
add
cmpsl
ds
pushf
jmp
and
ficomps
cltd
or
ja
xchg
stos
imul
mov
inc
mov
mov
repz
in
outsb
pop
mov
adc
les
mov
and
notrack
xchg
mov
imulb
cmpsb
lods
cmp
arpl
lods
icebp
pushf
pop
xchg
fcoms
push
imul
dec
loopne
fninit
in
js
jnp
mov
shlb
shll
sarl
inc
ss
outsb
pop
cli
push
xor
cmp
push
scas
dec
mov
mov
ret
lret
push
mov
pop
clc
adc
and
das
jns
aaa
mov
cmpsl
repnz
jg
insb
out
jp
pop
dec
lcall
sub
cs
xchg
cmp
mov
and
loop
adc
aaa
xorb
add
cmp
jecxz
out
jb
jmp
xor
imul
popa
in
inc
cmc
xor
mov
xchg
sub
mov
add
pop
ret
xlat
push
add
pop
dec
hlt
mov
adc
jp
mov
xor
sarb
dec
popa
inc
add
mov
es
pushf
or
dec
std
or
xchg
sarb
shl
and
iret
lods
add
jecxz
call
into
dec
or
xor
stc
sub
rcrb
push
out
mov
fnsave
push
into
pop
or
mov
sbb
xchg
sbb
pop
lret
push
sbb
data16
shll
push
mov
rclb
adc
mov
fwait
mov
jne
mov
and
and
pop
add
cwtl
mov
pusha
stc
int3
inc
addl
fidivrs
jecxz
add
mov
test
paddusb
fs
out
mov
cmp
not
sub
cli
pushl
arpl
jg
push
fwait
mov
push
mov
mov
or
jp
cli
push
xor
push
mov
inc
adc
bound
ljmp
in
xchg
mov
insl
inc
outsl
push
mov
mov
mov
xchg
lcall
pop
dec
dec
lea
xor
ljmp
cmp
lds
push
adc
add
dec
mov
mov
das
test
inc
cmpsl
cmp
leave
cmp
mov
push
jno
scas
imul
jmp
rcrb
jge
mov
pop
dec
fiaddl
pop
push
mov
dec
outsl
cmc
sbb
and
std
jnp
rcr
ds
or
ds
push
jno
jbe
mov
sub
push
xor
ror
adc
pop
push
jp
enter
push
mov
loopne
push
push
xor
mov
sub
mov
int3
xchg
pushf
xchg
lock
scas
je
jb
cmpsb
sub
lret
jnp
nop
and
xorb
dec
pop
xlat
push
movsl
cmp
out
dec
daa
dec
les
imul
push
cltd
shl
out
mov
xorb
jmp
movsb
adc
xchg
ret
mov
hlt
push
pop
xor
pop
jecxz
lds
xor
pop
jle
mov
mov
insb
lahf
test
orl
pop
or
aad
addl
int
cmpsb
hlt
pop
and
loopne
bound
lahf
or
push
jo
iret
jae
movsl
int3
mov
sbb
mov
xchg
jbe
or
pop
sbb
clc
stos
jecxz
adc
pop
ret
push
mov
loop
push
jle
aaa
cmc
out
fisubs
gs
push
out
mov
jecxz
mov
push
outsb
fcomip
jl
push
stc
imul
push
mov
add
cs
aam
pusha
pop
das
ljmp
lods
adc
mov
mov
notl
jecxz
push
out
or
test
rcrl
icebp
outsl
inc
cmpsl
push
xlat
or
or
xchg
pop
sahf
jae
orb
pop
jbe
or
movsl
mov
imul
push
repnz
cmp
or
movl
or
xchg
xor
mov
aas
jecxz
or
repz
mov
leave
dec
jecxz
pop
int3
mov
push
mov
xor
cmp
fildll
loop
cmp
mov
sub
mov
mov
into
jge
loopne
stos
xchg
mov
stos
clc
mov
fildl
push
xor
mov
dec
inc
sub
mov
xchg
ja
dec
dec
cld
cmc
popa
or
lahf
outsb
mov
pop
mov
pop
call
push
jecxz
out
dec
xchg
out
iret
stos
and
jg
ud2
and
push
cwtl
mov
mov
out
jo
sbb
jnp
mov
pop
ss
enter
cmp
roll
out
mov
sub
cmp
add
js
push
lods
xchg
jmp
push
mov
sbb
loop
subl
out
jl
nop
rcr
push
push
imul
test
dec
popf
in
push
je
aas
mov
cmp
adc
push
sub
das
xor
jns
shrl
add
out
ror
sarb
jbe
mov
xor
es
ret
dec
xchg
lods
inc
pop
dec
xlat
xchg
mov
arpl
dec
int
sub
sbb
mov
sub
mov
leave
es
das
stos
mov
sti
jl
das
aas
cli
jp
jno
fsubs
dec
pop
fwait
dec
xlat
mov
mov
inc
js
xchg
sti
insb
push
or
pop
dec
mov
cmp
inc
cmp
add
sti
cmp
jl
jge
lahf
jbe
mov
fadd
stos
scas
lret
aam
jg
add
push
sarl
jns
out
iret
adc
aad
dec
popf
addr16
inc
int
jl
mov
stos
cmpsb
add
mov
outsl
test
ret
mov
cmp
mov
xorl
mov
cli
adcb
or
insl
mov
pop
pop
xor
arpl
out
xor
xchg
xor
jg
adc
and
fstpt
mov
sbb
out
rol
cld
cmpsl
push
popf
sbb
jo
ja
cltd
out
dec
fcoms
insl
push
sbb
xlat
andl
push
out
pop
pusha
inc
popf
orl
jle
stc
aaa
jo
pop
gs
xor
xchg
mov
icebp
andb
xchg
call
in
lds
dec
add
lods
sub
push
shl
mov
adc
js,pn
push
cmp
out
cmp
insl
stos
js
push
and
lock
xor
pusha
ja
xlat
jns
testb
dec
in
aaa
xchg
stos
pop
iret
sbb
xor
mov
repnz
jne
inc
lret
adc
push
jp
loop
and
adc
mov
test
std
in
cmpl
les
ret
sbb
lock
push
xchg
ret
popa
or
push
pushf
jo
clc
push
cmp
mov
cld
mov
mov
sub
or
cmp
shlb
dec
movsl
xchg
call
stos
mov
scas
cmp
inc
jne
mov
mov
adc
sbb
stc
testb
lds
fildl
leave
mov
insb
xor
xor
dec
xor
loopne
ljmp
seta
sub
xchg
push
xchg
push
in
jne
popa
add
sbb
sbb
push
mov
sub
insl
xlat
testl
add
push
dec
cmp
mov
ret
or
xor
inc
aaa
pop
insb
inc
push
inc
in
mov
jg
push
dec
test
xor
out
enter
mov
mov
sbb
adc
dec
js
pop
fisttpl
add
dec
scas
add
cmp
jg
mov
xor
sub
mov
jg
xchg
adc
lret
mov
push
test
dec
and
je
pop
pop
dec
daa
stos
aaa
jne
pop
mov
sbb
in
movsl
dec
sarb
ficompl
ljmp
lods
mov
dec
add
mov
dec
mov
shlb
mov
xor
rcll
inc
and
jecxz
sub
add
or
jns
imul
ss
out
imul
leave
push
rcr
cltd
pop
cmp
mov
addr16
dec
pusha
xor
xlat
adc
and
test
mov
mov
jb
add
scas
test
xor
cltd
mov
mov
inc
call
lret
and
gs
sahf
sub
fdivr
std
pusha
and
enter
and
cmp
arpl
stos
pop
pushf
mov
push
and
sub
fwait
dec
add
cltd
xor
out
mov
loop
xor
sbb
pop
push
mov
insb
xor
scas
add
push
movsl
lock
push
repz
jnp
dec
push
push
jp
loopne
mov
iret
sbb
mov
daa
in
inc
jmp
nop
cli
dec
sbb
adc
jns
cli
inc
pop
popa
rolb
add
jb
fstps
dec
test
or
aaa
adc
sbb
inc
mov
and
ret
jnp
inc
repnz
in
sub
xor
jmp
test
pop
and
xor
adc
cmpsl
inc
test
js
stos
je
out
jns
push
adc
or
pop
icebp
repnz
push
sbb
pushl
cmp
mov
pop
adc
and
cmpsw
cld
pop
daa
sbb
in
ss
inc
cmpsb
mov
sub
push
es
cli
pop
shlb
xchg
sbb
enter
cmp
pushf
stos
jb
cltd
mov
popf
jo
out
mov
dec
sub
mov
imul
loope
jmp
lock
xchg
icebp
cmp
insb
xchg
popa
xor
sub
clc
es
inc
jbe
xor
xlat
and
enter
jmp
sub
lods
xor
aas
sbb
cmp
fwait
popa
cli
pop
leave
movsb
push
out
push
jecxz
test
push
adc
test
mov
out
mov
mov
test
ja
loopne
mov
push
sub
mov
imull
add
jne
cmp
lcall
pop
jmp
jnp
insl
bound
clc
xor
imul
imul
lcall
data16
cld
dec
imul
shrb
or
mov
outsb
mov
cld
mov
outsb
dec
imul
mov
sbb
aas
push
add
add
push
rcll
mov
aad
mov
outsl
mul
ja
cld
out
mov
push
pop
insl
lods
fisubs
jmp
sub
mov
sub
cwtl
xchg
cmpsl
pop
fwait
aaa
repnz
cmp
cmp
lods
pop
push
and
cltd
xchg
and
mov
mov
dec
cld
lret
fldenv
cmp
lds
das
bound
movsb
sbb
adc
push
cld
jecxz
jae
lret
mov
or
jmp
pop
ja
mov
repz
or
dec
pop
dec
pop
imul
andb
pop
add
nop
ret
and
jo
mov
xchg
push
outsl
adc
aas
xchg
inc
xor
inc
xor
shlb
lret
test
je
xorl
inc
pop
push
popf
rclb
outsb
pop
fstpt
iret
xchg
bound
xchg
dec
push
xor
xchg
mov
in
in
cld
and
hlt
jb
inc
filds
iret
cmp
xchg
cmp
add
icebp
push
mov
lcall
cmpsl
fnstenv
nop
mov
mov
push
outsb
ss
hlt
out
xor
mov
xchg
xor
xchg
clc
mov
push
cmpsb
sub
outsl
jp
lods
cmpsl
inc
test
push
mov
dec
dec
mov
xor
push
dec
xchg
frstor
jg
pop
call
addr16
fs
es
sbb
inc
push
ss
add
cmp
add
xor
sbbl
fwait
and
lcall
jae
or
cmc
mov
dec
xchg
or
test
les
addl
cltd
adc
cmp
inc
loopne
hlt
cmp
cmp
es
loop
stos
arpl
dec
xchg
and
push
dec
lret
lret
sbb
xchg
lods
rolb
and
dec
jno
cmpsb
das
mov
cld
xor
stos
jecxz
lss
arpl
ficoms
add
push
inc
notb
mov
test
pushf
popf
popa
cmpl
stos
outsb
and
xor
and
and
jb
lret
push
pop
cltd
mov
jno
xor
insb
dec
stc
sar
or
cmp
pusha
popf
xor
mov
push
sti
xor
push
jae
leave
stos
cmp
dec
dec
add
enter
sbb
xor
dec
or
push
mov
es
dec
fidivs
das
cs
bound
or
cwtl
pop
jo
xchg
les
mov
push
push
rolb
cwtl
lods
ror
dec
int
adc
mov
pop
pop
es
lods
xor
xchg
pop
add
push
int3
ret
sub
add
add
jbe
cmc
jo
sub
daa
rcll
or
sbb
mov
mov
mov
test
movsl
pop
pushf
ss
adc
sbb
scas
ja
push
mov
cwtl
call
lea
test
cmp
sbb
lock
in
mov
addr16
lahf
cmc
cs
pop
xor
lea
cs
and
inc
push
repnz
cltd
fisubs
mov
sarl
mov
shlb
jle
clc
inc
add
xchg
adc
stc
mov
lock
cmp
and
push
pop
pop
and
sbb
mov
call
shld
lds
add
loop
sub
sub
mov
adc
outsl
xchg
pop
or
and
add
pop
inc
lea
sub
je
dec
loop
daa
fdivs
add
mov
dec
pop
mov
cmp
push
adc
loope
inc
fdivl
push
in
test
outsl
gs
sub
mov
mov
xor
sbb
inc
shll
xor
nop
sahf
pop
rcr
gs
inc
loopne
or
movsl
shll
jne
and
add
mov
mov
jl
fbld
mov
mov
jg
loop
push
cmpsb
movsb
mov
lea
in
and
out
jne
sbb
cld
inc
pushf
mov
or
into
dec
fcomi
rol
mov
cmp
lds
std
shll
inc
xlat
inc
decl
lea
or
arpl
scas
push
mov
adc
push
cmpsl
es
or
rcl
jns
stos
inc
rolb
xchg
cli
rcr
ret
lds
jle
cld
in
dec
mov
mulb
into
xchg
sbb
leave
shrl
fwait
inc
jne
xchg
inc
jbe
push
pop
mov
fnstenv
sbb
sti
sub
in
leave
sub
and
adc
je
xor
lahf
mov
lret
fdivrs
and
pushf
lcall
out
js
jo
cmp
mov
sub
fstps
jge
add
cvtdq2ps
lret
cmp
out
dec
lahf
inc
lret
and
adc
loopne
and
jbe
mov
mov
add
inc
mov
lock
gs
cmc
sbb
insl
aaa
aas
dec
sub
xchg
push
jae
inc
scas
cmc
push
inc
imul
cmp
mov
sub
outsl
xchg
lret
cmp
scas
rcrb
ljmp
out
mov
mov
sbb
cmp
pop
push
data16
outsl
repnz
cmp
stos
lret
fimuls
ret
mov
sbb
mov
dec
loope
shrl
ret
loop
sbb
mov
cwtl
call
pop
mov
ja
insb
dec
cmpsl
pop
push
mov
inc
outsb
mov
and
jne
subl
test
dec
inc
mov
jnp
sbb
mov
mov
pop
lods
mov
test
in
ficomps
or
push
jbe
test
test
pop
add
in
iret
push
cmp
test
mov
mov
fsubl
and
sub
pop
lea
call
or
mov
scas
into
mov
pop
sub
ljmp
cli
cmpsl
insl
inc
leave
pop
lock
inc
jno
in
adc
cli
sti
lods
pop
mov
and
shl
hlt
out
shlb
xchg
ficomps
pause
xchg
fcoms
mov
ret
sarb
or
mov
dec
in
push
nop
pop
push
cmpsb
jle
ja
movaps
mov
insl
jp
jns
stos
aad
xor
jae
in
cmc
jo
rolb
mov
lds
fsubr
cmpb
jne
int3
adc
mov
and
cmp
sbb
movsb
scas
sub
rolb
mov
out
daa
pop
jnp
xchg
add
bndldx
cmpsl
cmpsb
pop
stos
sti
cmp
call
push
bound
jne
xchg
add
jecxz
scas
xchg
push
pop
jmp
push
add
mov
decb
mov
or
mov
mov
addr16
sub
nop
inc
clc
cltd
ja
in
inc
xchg
mov
stc
jbe
mov
or
add
mov
mov
test
in
pop
sbb
dec
aaa
mov
pop
xchg
shrb
sub
cli
push
addr16
hlt
fstps
fadds
cltd
jo
jno
cltd
mov
cli
stos
dec
pop
cld
xchg
or
and
icebp
mov
sbb
xchg
xor
or
daa
stos
fisubrs
xchg
xchg
inc
leave
sub
push
sub
sub
jae
icebp
sbb
jge
jbe
jne
push
mov
cs
iret
or
or
pop
cmp
subl
push
sub
mov
sub
inc
in
je
add
cmp
or
sub
sbb
sub
lret
xchg
sbb
xchg
out
sub
mov
mov
lahf
push
sbb
leave
scas
sub
or
xchg
and
push
ljmp
jmp
adc
cmc
pop
add
lods
mov
std
jns
push
xchg
xor
xchg
dec
lahf
imul
scas
sbbb
cmp
jg
adcl
or
sbb
mov
out
lahf
mov
jbe
pushl
sub
fs
pop
out
xchg
xchg
test
dec
push
mov
fcomp
dec
stc
mov
rcrb
aas
out
lahf
push
adc
mov
cmp
mov
dec
xchg
fwait
in
dec
sbb
shr
int3
js
ret
push
xchg
push
in
xchg
xchg
loope
push
arpl
and
lds
or
lret
imul
mov
inc
dec
xlat
sarb
lret
xchg
and
popa
in
ret
push
xchg
movsb
xchg
loopne
sub
shrb
fildll
pop
jle
pop
in
cmp
mov
lret
inc
rcrl
mov
xor
fisubrs
pop
imul
pop
pop
pop
loopne
inc
add
test
cmp
inc
add
nop
rorl
xchg
mov
cmpsl
imul
stos
jnp
arpl
add
jecxz
shrl
jns
popf
mov
idivl
mov
xchg
mov
mov
dec
pop
outsb
insb
cltd
call
inc
imul
mov
fistpl
decb
mov
je
ljmp
mov
cld
movsl
mov
or
std
pop
or
xor
or
ja
insb
dec
lcall
pmaxub
addr16
loope
add
inc
push
dec
mov
jnp
add
mov
push
xchg
fucomp
outsb
adc
out
in
stos
mov
aad
out
jae
cmpsb
push
sub
popf
shrl
movsl
inc
movsb
aaa
pop
mov
mov
aas
adc
xchg
pop
sbb
mov
in
mov
add
mov
jg
jg
mov
xchg
repz
insb
mov
jg
push
and
pop
addr16
xor
ljmp
push
or
pushf
sub
mov
xchg
pop
mov
adc
push
inc
nop
dec
int
dec
js
fldenv
mov
pop
mov
scas
mov
xorb
in
mov
popa
cmp
jmp
cmp
sub
xor
fs
inc
mov
or
fstpl
jb
icebp
pushf
sbb
movsl
push
idivb
popa
leave
xor
pop
repnz
lret
xchg
cmp
in
and
fstl
pop
popa
xlat
jge
int
daa
pop
es
cmp
add
fistl
pop
add
fwait
out
mov
lret
in
outsb
shrl
jnp
pop
daa
loop
or
dec
cli
mov
or
mov
cld
push
subl
cmc
les
lea
cmp
stc
adc
pop
pop
add
push
sub
es
xor
push
lahf
mov
int3
mov
sbb
in
add
mov
sbb
cmc
sub
fsubr
mov
mov
sbb
dec
aad
stc
mov
je
mov
aas
add
and
jne
out
les
fildl
sbb
pop
mov
xchg
inc
cmp
and
stc
loop
dec
into
jne
mov
push
pop
out
out
std
fdiv
dec
jl
xor
inc
push
xor
call
std
mov
enter
imul
mov
jmp
add
xor
in
mov
mov
mov
sbb
mov
ret
mov
ret
shll
aas
fxch
in
mov
mov
movsl
aam
cli
sbb
add
pop
pop
add
test
pushf
mov
push
jns
push
add
rcrl
or
popl
mov
fimull
or
jecxz
mov
jnp
xor
mov
paddusb
or
xchg
mov
jp
jnp
imul
mov
repz
push
inc
btsl
sub
sbb
movsl
cmp
push
pusha
jle
cmpl
filds
insl
int
mov
es
int
xchg
mov
imul
push
into
mov
xchg
sbb
or
cmp
xchg
lods
enter
popf
push
test
insb
push
jnp
sub
mov
jg
out
cmp
ret
mov
insb
mov
fwait
int3
and
inc
icebp
sbb
dec
stc
lahf
jge
and
dec
jge
cwtl
cwtl
test
mov
push
sbb
ret
test
pushf
push
jo
or
movsl
cli
xor
cmp
mov
xchg
fbld
mov
stc
push
fists
or
jne
xchg
jb
sbb
sar
cmpsl
jmp
into
dec
gs
dec
mov
fcoms
std
dec
fnstsw
push
and
rorl
mov
pusha
leave
xor
pop
add
fdivr
iret
pusha
outsl
mov
fwait
rcrl
cmp
and
imul
ret
mov
mov
mov
out
mov
cltd
jae
add
aaa
outsl
into
mov
push
inc
sahf
mov
or
cmp
cmpsb
add
push
jle
pop
mov
out
or
or
dec
pop
jle,pt
rolb
das
int
jno
out
aaa
aaa
lods
adc
xor
lock
xor
pop
std
fadd
xor
push
and
sar
sbb
inc
sbb
sub
fdiv
stos
pop
sbb
shll
add
push
or
das
and
mov
rclb
bound
std
xchg
mov
dec
test
shll
cmpsl
cmp
jge
sub
hlt
test
dec
dec
cmp
leave
js
nop
jmp
enter
xchg
adc
movsl
inc
add
push
sti
pop
adc
mov
adcl
fiaddl
mov
xor
jo
out
push
leave
cmp
or
mov
and
xchg
int
cmpsl
test
test
jmp
push
ja
out
lahf
aam
xchg
or
mov
sub
rorb
arpl
fstl
imul
jmp
call
sahf
xchg
xor
mov
nop
cmp
rcll
cmp
jecxz
lret
push
push
sub
xor
hlt
rcrb
mov
adc
repnz
test
or
push
dec
in
test
fstps
movsl
mov
shr
cmp
cwtl
and
mov
lret
ficoml
lds
cli
push
mov
movsb
mov
push
sbb
pop
fcmovnbe
sbb
jge
shrb
mov
xor
push
movsl
mov
sub
xchg
les
cld
push
cmpsb
pop
push
into
es
add
out
xor
jo
mov
pop
dec
xchg
popf
xchg
dec
test
adc
ljmp
jecxz
stos
fdivl
sub
test
sahf
and
shll
js
dec
mov
push
movsl
push
sbbb
stc
ret
test
xchg
jecxz
in
xchg
das
loope
or
mov
jnp
das
es
sub
lahf
sahf
lret
fadds
cli
push
inc
and
sbb
mov
repz
es
push
stos
cmc
hlt
inc
mov
push
jmp
add
pop
test
mov
inc
and
jbe
shl
lahf
pop
aad
adc
hlt
lcall
mov
stos
inc
push
and
cmp
and
sub
or
mov
adc
pop
inc
push
sub
test
enter
pusha
xchg
or
jecxz
cmpsl
sbb
add
fistl
push
push
lds
inc
pop
call
cmp
adc
lds
inc
int
movsl
mov
or
push
aad
sub
cmp
test
adc
adc
dec
lods
in
add
lret
mov
sahf
repnz
iret
cltd
xor
out
fs
je
jo
addr16
loop
pop
cmp
sub
std
cmp
inc
out
ss
loope
popa
shlb
pop
jns
adc
rorl
add
adc
cmpsb
mov
jns
jbe
jnp
insb
mov
scas
test
add
mov
aas
pop
mov
inc
dec
cld
das
mov
test
mov
sbb
icebp
mov
loope
movsl
mov
push
or
in
xchg
add
ret
fistpll
or
fcom
int
addb
xorb
mov
idivb
fistpl
push
test
mov
out
test
sahf
push
or
adc
sarb
sub
outsb
in
pop
push
jle
arpl
xchg
or
or
mov
push
addr16
sbbl
lods
mov
push
inc
mov
sub
cmp
push
inc
lock
adc
cmp
repnz
and
js
icebp
out
mov
add
add
popa
jecxz
and
xchg
es
xchg
stos
out
and
and
pop
stc
jb
cltd
inc
push
mov
sub
mov
insl
fwait
inc
dec
adc
mov
xorb
xchg
je
lods
stos
and
das
ljmp
pop
push
sti
cmp
sbb
mov
xchg
ss
adc
cmpsl
push
push
and
pusha
outsb
int
pop
mov
popa
int
xlat
and
insb
outsl
cmp
loopne
mov
test
imull
pop
lods
or
inc
mov
inc
int
addl
in
imul
cmpsl
imulb
pop
sub
outsl
orb
cmp
xor
sti
or
mov
xor
push
pop
insl
push
jo
pop
pop
in
mov
mov
dec
or
adc
rcrl
bound
or
sti
lahf
dec
dec
jb
movsb
or
dec
mov
mov
sbb
dec
jl
call
not
mov
repnz
pop
cmpsb
sub
shlb
and
flds
xor
outsb
orl
mov
in
and
jno
jb
dec
imul
cmp
int
fstl
fsubp
in
sub
ja
jb
test
xor
or
test
sub
xchg
and
xchg
mov
push
sbb
jns
out
lahf
mov
dec
mov
aad
push
iret
mov
inc
pusha
rcrl
cli
mov
push
out
sti
or
jns
shll
pop
mov
rcrl
das
les
or
mov
out
sti
xor
fwait
fwait
add
xor
adc
mov
push
or
insl
dec
and
jge
insb
add
push
je
inc
icebp
loopne
xchg
shrl
dec
popf
je
rclb
out
cmc
jbe
loope
mov
cmp
xchg
dec
imul
mov
jns
shr
jl
adc
push
adc
es
add
push
cltd
daa
push
repnz
scas
lcall
int
shlb
push
sub
dec
call
jno
rcrb
xor
mov
add
pop
daa
pop
ret
fisubrl
rorb
xchg
mov
inc
lea
cmp
adc
push
ret
jmp
dec
daa
lret
cli
mov
into
lret
jg
or
out
inc
xor
xchg
cmpsb
outsl
stos
loopne
mov
lds
movsl
fisttpll
xor
mov
aas
insl
push
push
sub
jge
or
ret
cmp
jge
insb
movsl
and
in
push
test
push
ror
gs
cmp
popf
inc
mov
xchg
lods
clc
add
mov
mov
fcmove
mov
subb
pop
jbe
out
jb
or
push
je
jecxz
add
call
and
in
mov
or
rcrb
mov
push
mov
and
dec
xor
xchg
mov
outsb
sub
lods
dec
fs
aam
mov
cmp
jb
or
mov
xor
cmpsl
loopne
sub
ficoml
push
loop
out
imulb
popa
or
es
adc
add
out
jo
je
dec
or
in
xor
fwait
mov
adc
inc
cs
xchg
or
sbbl
add
andl
mov
mov
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
sbb
cmp
roll
subl
stos
pop
int
andb
jae
or
sub
jae
into
insb
movsl
das
stc
test
xchg
xor
rolb
shl
nop
mov
sub
xor
jnp
xor
lret
dec
inc
or
dec
push
or
inc
xchg
adc
das
loopne
cwtl
mov
dec
je
add
std
cli
cmc
mov
or
iret
dec
add
ja
cmpl
push
test
cmp
clc
mov
add
pop
jbe
jbe
jecxz,pt
cmpsl
or
cmp
and
sub
mov
inc
mov
adc
ret
hlt
inc
lds
sub
push
in
and
inc
jmp
inc
mov
stos
sub
and
jge
stos
in
shrl
pop
mov
ds
add
fldl
iret
sahf
hlt
and
or
add
fwait
out
fdivrs
sti
mov
and
sbb
loopne
inc
movsb
push
sti
pop
and
cmc
lret
int
xor
pop
push
jns
call
or
adc
or
sbb
out
js
xor
lods
mov
mov
unpcklps
daa
jl
stos
cmpsb
sbb
sbb
xor
out
jns
push
ret
fldl
mov
or
aad
xchg
in
cmp
fistpl
mov
shll
jbe
pop
sbb
push
pop
test
ficoms
sbb
cltd
scas
push
in
std
lret
mov
jecxz
push
outsl
add
shl
roll
fs
xor
mov
adc
lea
movb
test
sbb
push
stos
aas
aas
push
inc
les
pushf
dec
adc
pop
stos
fistpll
xchg
andb
jbe
adc
dec
mov
jg
add
xchg
xor
out
pop
mov
and
insb
lds
xor
out
and
pop
pop
mov
in
pop
ror
jle
repnz
jle
ljmp
sbb
xchg
dec
jge
lcall
inc
cmp
xorb
ja
shlb
mov
inc
add
int3
out
xor
out
clc
mov
xorl
pop
stos
xor
cwtl
and
cmpsl
enter
popa
add
cmpsl
std
inc
jne
js
test
das
jl
loop
inc
mov
lock
call
push
popf
iret
adc
pop
mov
ficomps
cmp
in
cld
imul
adc
and
icebp
inc
jne
imul
sbb
mov
and
das
xchg
adc
dec
xchg
jecxz
pusha
popa
test
push
add
imul
sub
mov
fnstcw
out
aad
and
addl
jp
xor
cltd
sub
xchg
push
jl,pt
mov
mov
rclb
mov
adc
push
stc
dec
stos
jne
ror
xor
stos
insb
pop
pop
xor
out
jl
outsb
sbb
lahf
mov
push
cwtl
mov
mov
xchg
sub
or
xor
pop
and
gs
shrb
scas
aas
popa
popf
in
inc
loop
adc
xlat
pop
pop
lods
add
stos
sbb
jmp
std
push
aam
jne
test
into
xlat
pop
stos
push
iret
in
jae
pop
call
sti
clc
push
xor
fwait
dec
push
jne
push
jecxz
into
icebp
push
inc
mov
or
jb
movsl
pop
pusha
xorl
js
insb
inc
sbb
and
mov
test
pop
notl
dec
mov
dec
shl
test
adc
sti
fwait
test
sub
and
in
xor
and
pop
dec
jg
dec
lock
jnp
jl
mov
cmp
jbe
cld
xor
sbb
pop
pop
jl
out
faddp
ret
cmpl
jo
and
jns
sub
mov
in
push
cwtl
xor
adc
cmp
cltd
xchg
icebp
jmp
adc
mov
xor
rcr
jmp
add
idivl
or
jb
jp
jae
pop
arpl
pop
sti
or
sub
aam
loope
mov
loop
les
mov
mov
jno
dec
imul
scas
dec
pop
nop
fs
rcl
mov
test
fidivs
inc
cmp
test
sub
test
jns
notb
dec
mov
jo
mov
int
xor
jg
aad
and
pusha
pop
hlt
jp
mov
dec
ds
add
pop
lahf
outsl
mov
je
dec
dec
xchg
movsl
pop
dec
cmp
in
mov
xchg
movsb
loop
sub
lods
cmp
mov
pushf
loope
fimuls
ffree
daa
push
dec
call
xchg
mov
sub
adc
add
jbe
xlat
push
mov
add
and
and
jmp
repz
xor
mov
js
ret
xchg
cmovb
push
xlat
mov
push
test
jecxz
cmpsl
es
push
jb
xor
mov
cwtl
fs
aaa
mov
insl
inc
xor
clc
and
push
je
imul
mov
sbb
mov
jae
incl
daa
xor
inc
frndint
fmull
addr16
cs
pop
inc
inc
push
imul
nop
push
push
mov
icebp
insb
mov
fs
push
push
or
mov
fsubr
add
dec
enter
jl
ret
adc
inc
and
cld
and
cmp
outsb
push
add
adc
cwtl
mov
xchg
in
inc
clc
loope
sbb
mov
popa
sub
push
push
subb
aaa
xchg
adc
push
std
je
mov
ficoml
mov
pop
in
push
inc
lods
cmp
inc
dec
int
push
mov
stos
lret
or
jbe
adc
xchg
xchg
mov
jo
push
mov
scas
fstl
mov
cli
sbb
into
add
repz
mov
sarb
add
sub
lret
loop
outsl
out
popa
mull
addb
pushf
aad
insl
call
lcall
dec
xchg
aas
lods
pop
outsb
popf
xor
dec
fcmovbe
out
loop
sub
orb
sbb
mov
packsswb
loope
clc
mov
jb
mov
or
insb
fdivl
negl
or
cmp
mov
push
sbb
inc
jbe
cmp
leave
negl
in
cli
mov
sub
push
push
push
daa
fwait
aam
scas
ss
jecxz
lea
push
mov
mov
xor
inc
je
imul
push
xor
cmp
xchg
cwtl
ljmp
sub
hlt
cmp
mov
popa
cmp
push
aaa
push
imul
xor
div
jl
add
testl
pop
xchg
fs
into
aam
dec
sbb
jl
cmpsl
rorl
cmp
inc
or
cs
out
into
addl
mov
or
cwtl
mov
dec
lods
xchg
jl
jne
es
sbb
stos
mov
adc
jge
mov
andb
insl
jnp
inc
mov
scas
in
jbe
mov
mov
jmp
sbb
inc
cmpl
mov
fidivrl
sbb
mov
rcrb
mov
xchg
fldt
scas
imul
xor
ret
cmp
cwtl
jb
xchg
ja
sbb
push
mov
dec
int3
sub
inc
fucomp
adc
imul
mov
dec
push
push
outsl
mov
mov
xlat
pushf
inc
or
dec
cltd
je
push
into
dec
xchg
lcall
out
insb
adcl
push
inc
aas
push
lods
enter
push
imul
or
out
jne
xchg
dec
popa
add
pop
push
push
insb
push
jno
cmp
into
mov
add
inc
les
cmp
repnz
pop
dec
pop
les
testb
lods
mov
outsb
mov
pop
filds
jno
sub
out
cs
arpl
ss
mov
lahf
jae
testl
fs
cmp
add
lcall
daa
push
idiv
cli
leave
sbb
in
ret
adc
orb
pop
stos
repnz
mov
jl
call
cmc
xor
sub
jae
pop
mov
daa
loopne
mov
lock
decb
push
fbld
push
cmp
repnz
test
sbb
push
sbb
arpl
inc
cmpsl
je
arpl
roll
icebp
or
sub
repnz
cmpsl
mov
jne
test
ds
ret
mov
sbb
fnsave
pop
mov
notl
cltd
push
pushf
in
lock
pop
fiaddl
cmp
dec
mov
xor
pop
hlt
adc
je
pop
imul
xchg
push
out
dec
jb
xchg
pop
pop
pop
or
mov
push
jbe
push
pop
loop
jnp
mov
push
pop
sbb
sti
imull
mov
les
jo
xchg
cmp
mov
popl
cmp
movsl
jne
test
mov
lods
dec
shlb
push
out
add
adc
xor
or
aam
sub
xor
or
push
sbb
mov
mov
inc
into
mov
imul
or
pop
dec
inc
xchg
retw
or
div
add
jbe
fnclex
mov
or
lds
cwtl
push
xchg
lds
mov
loopne
xor
out
cmc
lds
cmpsl
inc
ret
dec
cwtl
popf
nop
or
and
test
cmp
fldcw
pop
lahf
test
push
mov
inc
subb
cli
inc
dec
fisttps
dec
imul
cs
sub
inc
negb
shll
push
add
mov
adc
jp
pop
in
pusha
jb
gs
ja
cmp
xchg
das
outsl
mov
pop
mov
or
sbbl
sti
push
ljmp
stos
lcall
test
xchg
hlt
adc
mov
add
sbb
cmp
cmpsb
add
cld
cmp
fsubp
inc
and
ror
out
mov
and
sbb
out
sbb
fs
pushl
or
sub
jle
movsb
cmp
lock
cmp
or
add
int3
daa
in
pop
pop
cltd
dec
jno
mov
mov
mov
xor
pop
sbb
push
push
and
and
lret
sahf
sub
int
cltd
dec
xor
insb
das
std
push
xor
sub
pusha
fdivl
xchg
jmp
jmp
sbb
mov
inc
in
cmp
lds
xchg
pop
mov
mov
jecxz
jbe
mov
inc
and
adc
xchg
add
js
jmp
xor
jno
movsb
sti
xchg
inc
xor
mov
ss
and
mov
sahf
insb
pop
add
das
std
popf
gs
es
add
inc
fistpll
mov
cld
aaa
lahf
icebp
popa
faddp
js
negl
jle,pn
clc
in
vmovss
scas
or
ljmp
mov
loop
mov
out
ficoml
adc
jmp
xlat
scas
enter
addr16
sub
sub
mov
rorl
stos
add
mov
addr16
add
mov
fisttpll
sbb
bound
cmpsb
or
cmp
jmp
rcrb
or
xchg
mov
or
cli
pop
dec
mov
push
popa
dec
adc
repnz
add
or
inc
cmc
mov
out
cmp
out
call
add
lock
hlt
sub
ds
push
mov
fwait
or
mov
dec
add
fldenv
xor
ja
mov
lret
mov
push
and
sahf
into
repnz
rcl
fs
push
jg
push
les
mov
and
cmp
inc
sbb
lock
adc
scas
xorb
daa
push
imul
out
std
repz
aaa
mul
lock
jo
adc
jge
xor
adc
dec
aas
aas
jno
and
repz
leave
jae
adc
jno
lcall
enter
push
pop
jmp
mov
test
push
ror
mov
cs
mov
xchg
dec
es
out
xor
mov
in
int3
std
cmpsl
outsl
cmp
sub
sbb
rolb
imul
mov
cmp
mov
mov
sub
adc
dec
pop
lods
stos
push
popa
mov
jmp
mov
mov
arpl
sbb
ret
pop
lahf
and
fbstp
ret
cmc
mov
mov
push
add
scas
test
or
or
xor
ljmp
xchg
pusha
push
pop
mov
xchg
sub
in
fstl
push
push
gs
adc
stc
sub
std
mov
mov
rcrb
out
ret
stos
inc
es
mov
push
jno
test
push
ds
push
sti
in
lret
push
fsubs
sbb
mov
mov
xor
adc
jg
outsb
dec
js
pop
adc
sarb
sbb
cltd
fisubrl
loope
xor
icebp
das
or
addr16
mov
xchg
sbb
inc
insl
jmp
inc
movsl
clc
insl
loopne
aaa
jae
add
mov
and
jns
mov
iret
xor
iret
pop
xchg
add
leave
sbb
sub
movd
not
jne
xchg
scas
stc
sub
sub
mov
inc
fsubr
in
insb
out
or
jge
and
push
jmp
mov
mov
pop
cmp
popa
subl
outsl
mov
stos
in
ds
jecxz
and
in
test
mov
and
lods
popf
aas
or
jecxz
ss
inc
push
or
mov
pop
xchg
and
push
mov
arpl
pop
imul
dec
cmpl
add
daa
sub
sahf
xlat
pop
jecxz
sbb
push
xlat
rcrl
push
push
mov
xchg
pop
or
stos
insb
push
mov
push
movsl
mov
aam
dec
call
xor
pop
xchg
or
cmc
adc
rcll
mov
int
js
ret
xchg
lret
dec
xor
test
stos
adc
aas
mov
je
xlat
mov
push
or
add
gs
push
and
ljmp
xchg
xor
pop
push
jmp
test
xor
sub
repnz
push
sbb
clc
int3
inc
sbb
ljmp
add
ret
push
jno
or
mov
lea
cmp
sti
iret
movsb
mov
mov
outsb
mov
sarb
mov
xor
and
xorl
push
dec
leave
addl
lods
add
lods
fadds
daa
xchg
or
in
mov
dec
gs
pop
imul
testl
fisubrs
jb
subl
cli
jecxz
jge
fsubs
pop
push
test
xor
insl
dec
rcr
sbb
inc
outsb
mov
or
cmp
rcll
iret
pushf
mov
push
or
mov
add
testb
loop
pushw
aam
es
xchg
jne
dec
lret
xchg
into
fcmove
ds
mov
dec
in
mulb
push
fimull
mov
stos
subb
inc
sbb
test
int3
mov
test
xor
pop
jmp
mov
lods
loopne
jmp
mov
cmp
sub
mov
testb
lods
inc
push
bound
sbbl
and
iret
push
mov
mov
movl
and
shrb
outsb
xor
rcll
cltd
sub
mulb
andb
and
fistps
xor
inc
jb
xor
and
pop
aad
stos
or
xorb
in
fwait
push
cvtps2pi
lods
outsl
bound
daa
idivl
stos
rep
aaa
adc
adc
mov
mov
ret
fmull
fwait
or
enter
add
push
jno
in
cltd
lock
arpl
pop
dec
mov
xor
ficoms
frstor
mov
scas
jno
fdivrs
jns
push
enter
sbbl
sbb
sbb
mov
setg
mov
fwait
adc
cld
cmp
jl
mov
ds
push
loop
je
xchg
dec
insb
adc
negl
insb
dec
push
mov
out
push
iret
cmc
mov
push
push
loopne
or
push
inc
icebp
popfw
sbb
stos
orl
aaa
or
push
pop
sbb
add
aas
jl
movsl
cli
mov
in
dec
inc
ja
xchg
fmull
push
fnstenv
adc
int3
in
push
mov
jo
mov
xchg
and
fsubrl
stos
inc
push
aad
and
frstor
jae
xchg
test
jl
xchg
sub
mov
jae
inc
push
outsb
incl
cmpsb
ret
push
in
cmp
mov
ss
xchg
ja
mov
jge
and
mov
sti
sub
stos
lret
ss
or
or
inc
mov
push
and
sub
adc
data16
push
repz
inc
xor
scas
dec
sbb
nop
sbb
int
lds
rorl
or
mov
es
out
cmpsb
xchg
and
mov
sub
test
rcll
push
adc
dec
fcmovnu
lcall
xchg
bound
es
fiadds
sbb
jmp
jb
xor
xor
push
pop
inc
xchg
mov
test
xor
jmp
inc
lods
push
mov
repz
mov
cmpsb
add
sbb
test
push
movsb
lahf
iret
push
push
sub
out
nopl
push
iret
push
popf
mov
movsb
mov
inc
pop
movd
mov
imul
popa
xchg
push
iret
movsb
lock
mov
adc
push
repz
mov
out
loope
bound
loop
mov
sti
and
mov
movsl
inc
ljmp
push
inc
jmp
mov
xlat
mov
hlt
hlt
mov
addr16
push
test
cld
mov
nop
pop
roll
cmc
std
push
shrb
cmp
push
fstpt
lods
loopne
stos
mov
lretw
and
ss
sub
xchg
out
pop
fdivp
shll
mov
sti
dec
sbb
imul
mov
mov
sub
or
inc
fcoms
adc
jo
sti
pop
mov
cld
add
xor
out
jmp
fsub
jl
jne
and
mov
xor
adc
std
or
scas
and
icebp
mov
dec
lea
or
mov
cld
scas
adc
add
loopne
xchg
daa
xchg
lcall
lock
fsincos
or
xor
pushf
adc
je
stc
or
or
insb
mov
bound
xorb
xor
pop
pop
daa
or
sbb
mov
in
and
cmp
ret
mov
and
pop
pop
out
cmc
repz
es
enter
mov
or
fildl
xchg
shrb
or
cmpsl
lea
ja
int3
push
aad
js
fbld
add
pop
cmp
popa
daa
std
mov
mov
movsb
mov
pop
jmp
arpl
into
mov
cmpsl
pop
mov
shlb
push
xor
mov
mull
out
fists
jp
cli
jecxz
sbb
fwait
outsl
mov
ss
imul
es
push
xchg
cmp
imull
xchg
addr16
test
adcl
fucomip
les
push
adc
push
sub
scas
dec
pop
subb
test
mov
fwait
cmp
test
lcall
dec
add
bound
dec
js
jmp
and
setno
cmpsb
jmp
pop
pop
into
loop
aaa
jnp
xor
sub
mov
lret
loopne
fadd
xor
pop
mov
ss
or
test
bound
mov
xchg
sbb
mov
imul
xchg
insl
inc
ds
dec
cmp
test
sti
dec
jmp
lds
xchg
iret
adc
stos
and
imul
ret
hlt
lds
add
es
mov
adc
sub
loope
lret
cld
pop
aam
js
cmp
add
adc
xchg
movsl
push
mov
lock
dec
sub
cltd
lds
mov
xor
add
popf
push
fs
add
aas
sub
xor
pop
sbb
and
shll
lret
inc
and
add
add
adc
das
fwait
das
and
in
les
nop
out
fdivrs
imul
aam
adc
sbb
out
sarl
pop
fdivs
push
test
aam
jne
std
lods
dec
decl
cs
int3
rcl
jb
xor
loop
mov
adc
cmpsb
dec
dec
test
xor
xor
and
out
jo
or
xor
pop
pushl
sahf
push
jg
xrelease
movsb
sbb
shlb
inc
inc
subl
out
mov
inc
ret
ss
jp
orl
dec
cmpl
dec
push
icebp
nop
adc
inc
arpl
sub
adc
aam
sub
in
inc
mov
mov
push
pextrw
cmp
or
movsl
je
push
leave
mov
repnz
mov
lods
popa
adc
outsb
xor
and
adc
mov
pop
adc
cmp
lcall
mov
es
sbb
inc
pop
loopne
mov
fnstenv
icebp
jecxz
jp
cwtl
jne
jg
fwait
mov
es
es
movd
out
insl
scas
in
out
pushf
out
bound
jmp
pusha
je
inc
repnz
es
movsb
stos
aas
leave
add
mov
roll
cli
jge
sub
pop
xchg
je
icebp
clc
mov
xor
jb
jg
dec
out
adc
lods
outsl
mov
cmp
je
add
inc
inc
xchg
cltd
or
inc
pop
inc
loopne
test
insb
xor
shlb
imul
xchg
gs
rclb
jge
dec
mov
sbb
add
mov
mov
rorb
jmp
inc
cmpsb
push
in
mov
out
cmpsb
mov
xor
inc
xchg
xchg
sub
repz
daa
stos
push
sub
loope
inc
pop
push
mov
inc
in
enter
fildll
arpl
and
cmp
mov
ljmp
lcall
push
sarb
mov
out
mov
out
scas
mov
or
hlt
orl
int
xor
jno
test
mov
adc
popf
jbe
cmpsb
inc
fcompl
mov
loop
xchg
dec
xchg
popf
mov
inc
cltd
xchg
sbb
addr16
sbb
or
cmp
sub
cmpsl
mov
sub
popa
repz
adc
push
cmp
sarl
iret
and
stos
adc
push
fcomps
push
mov
push
push
jmp
pusha
push
mov
sbb
pop
xlat
scas
mov
xchg
movsb
push
or
sbb
xchg
adc
dec
fwait
lock
inc
rcrb
mov
dec
lods
aas
xchg
das
fwait
sub
data16
lcall
ficoml
test
dec
dec
stc
rorl
addr16
sbb
outsl
divl
testl
sub
cli
scas
ret
mov
lahf
mov
xchg
cmp
jno
mov
mov
xchg
lret
in
repnz
orl
mov
daa
daa
fwait
imul
mov
es
pop
aam
and
mov
mov
and
jo
mov
cmp
jo
sbb
add
push
pop
xchg
inc
out
jbe
test
cmpsl
fucomi
xlat
loop
ljmpw
add
rcl
sbb
sbbb
cwtl
dec
push
xor
popf
fst
rcll
fsubrl
aas
outsb
and
jmp
jbe
mov
ror
test
loope
ljmp
jo
test
sub
lods
ret
push
add
dec
cmp
jne
sbb
cmpb
dec
xchg
xchg
imul
test
lcall
dec
xor
jne
mov
cmp
fwait
lret
std
mov
cmp
repnz
xor
in
fimull
fstp
sub
push
push
sahf
lea
js
scas
adc
clc
lods
sub
push
mov
int
adc
int3
jg
jecxz
test
jl
not
push
std
scas
dec
add
pop
cmp
push
adc
pop
test
and
push
sti
push
jecxz
cmpxchg
dec
aam
in
inc
hlt
jae
popa
mov
xchg
mov
mov
dec
cmp
in
arpl
jne
outsb
mov
mov
pop
sahf
jle
push
pop
insb
or
add
xor
scas
and
enter
mov
sbb
insl
lods
jmp
xor
mov
pusha
in
jle
enter
stos
dec
xor
icebp
push
adc
or
mov
in
test
cmp
jns
mov
insl
dec
and
xchg
add
inc
int
adc
ss
out
xchg
arpl
jae
and
push
mov
imul
in
dec
add
cli
fists
sbb
and
cmpsl
push
sarl
scas
cmp
loope
aaa
nop
dec
repnz
sbb
lcall
sbb
sbb
aas
hlt
cmp
das
fdivs
shll
push
cmp
mov
rorb
ljmp
fdiv
xor
gs
lcall
mov
push
mov
ficoms
sub
jge
pop
test
jmp
insl
mov
fucom
imul
cmp
xchg
test
adc
mov
stc
jmp
xor
movsl
push
stos
or
mov
xchg
xor
imul
xchg
and
scas
cmpsl
test
daa
pushw
fistl
je
jle
sbb
imul
lds
jecxz
sbb
add
rclb
xor
lds
cmp
and
cmp
cltd
mov
inc
pop
adc
push
mov
pop
mov
fdivp
in
jp
shlb
mov
fsubl
cltd
jl
imul
sbb
ljmp
mov
mov
xlat
jp
icebp
mov
icebp
loopne
ljmp
bound
outsb
sbb
add
lret
cli
xor
js
out
push
sub
inc
mov
adc
inc
and
fld
pop
add
pop
mov
out
mov
subb
pop
inc
pop
mov
mov
and
or
ret
sub
cs
nop
rolb
or
mov
push
lahf
clc
in
xchg
test
inc
in
jge
pop
js
inc
mov
clc
lahf
xchg
adc
xor
lahf
cmp
in
out
test
jbe
add
xor
inc
pushf
add
lahf
jmp
nop
imul
in
mov
xchg
rorl
push
loopne
xchg
push
push
into
loopne
fcomp
adc
loope
lea
sahf
inc
push
xchg
cmp
mov
das
sbb
adc
adc
mov
sub
push
clc
or
sti
pop
int
fstl
mov
xor
ljmp
dec
push
scas
pop
in
movsl
cli
in
lea
addl
push
iret
insb
mov
xor
mov
jp
cmp
daa
jb
subl
in
xchg
xor
ds
fnstsw
jecxz
push
out
data16
and
jl
adc
mov
jg
shrb
sbb
test
sub
xchg
add
mov
mov
add
mov
sti
inc
cmpsb
mov
or
std
sbb
xorb
and
leave
aaa
out
and
jp
adc
andb
push
push
sub
fdivs
stos
push
add
hlt
pop
lea
and
mov
pop
mov
ret
mov
sbb
jecxz
int3
shrl
mov
sbb
mov
dec
repnz
mov
fs
inc
cmc
xor
pushf
mov
and
lods
int
dec
mov
ljmp
dec
mov
pop
jo
rol
in
stos
pop
inc
insl
add
mov
sub
sbb
fadds
aaa
fdivs
sub
cltd
cmp
jg
sbb
shrl
adc
add
repz
jae
test
xchg
pop
mov
lods
and
clc
into
in
es
gs
pop
jno
cmpsb
xchg
cmpsb
pop
sti
sarl
gs
mov
cmp
cmp
lcall
hlt
insb
loope,pn
sbb
scas
mov
adc
push
sbb
xorb
mov
int3
or
xor
and
std
mov
lods
push
xor
lret
repz
popf
out
fidivl
lfs
jb
scas
idivl
int
mov
les
xor
inc
imul
popa
loopne
or
mov
lds
push
jmp
mov
adc
cld
pop
xchg
mov
inc
fsubrl
jecxz
test
test
outsb
test
movsb
push
sub
in
ss
inc
fcomps
cmp
fidivrl
fbld
cmp
les
mov
add
loope
ficoms
add
shl
xor
inc
jns
int
sub
xchg
and
adcl
icebp
mov
xchg
jecxz
out
adcb
xchg
insb
iret
pop
mov
loope
loopne
shl
cmpsb
dec
xchg
or
and
xchg
mov
cmpsb
fcmovnb
pop
scas
cmp
arpl
popf
adc
mov
xor
xchg
push
adc
loopne
lods
rorb
dec
adc
test
mov
mov
cmp
nop
adc
ss
mov
shl
loop
inc
sbb
xchg
cli
subb
cmpsb
test
nop
jne
iret
dec
xor
xlat
xor
loopne
push
add
lahf
or
bnd
mov
xlat
movsl
sbb
inc
outsl
mov
ret
mov
sbb
dec
outsb
mov
mov
adc
xor
adc
inc
mov
loop
mov
and
in
fnstsw
jl
lods
movsl
sub
cmp
hlt
mov
mov
lods
xchg
sbb
lret
test
les
lock
pop
xchg
xlat
xlat
push
xor
mov
and
inc
sub
adc
mov
pop
bound
mov
into
sbb
stc
ret
out
aad
inc
outsl
push
sub
cmp
imul
dec
xlat
jbe
jae
push
adc
cmpsb
xor
mov
popf
push
lret
andl
cmp
push
push
xchg
sbb
adc
push
jns
jo
mov
add
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
mov
dec
jp
addl
dec
gs
repz
sbbb
pushf
mov
sub
push
lea
pop
xor
mov
sarb
movb
insb
or
pop
lcall
adc
les
fcompl
cmp
cmp
lds
or
decb
or
pop
jecxz
adc
popa
mov
gs
leave
lods
or
sbb
sbb
mov
decb
in
imul
pushf
sub
jae
push
lds
inc
xchg
cmc
dec
mov
pop
dec
clc
addr16
lcall
dec
xchg
add
repnz
cmpsl
pop
in
inc
jnp
push
push
sub
ja
mov
push
dec
pop
mov
fsubrl
test
xchg
frstor
scas
jmp
in
repz
xor
push
cmp
adcl
outsl
xor
cmp
lock
aam
cmp
sub
shrl
mov
adc
fwait
lret
mov
cmp
or
pop
lahf
jne
push
ror
jbe
add
xchg
cmc
sub
xchg
mov
pop
adc
sahf
add
xchg
push
outsb
adc
imul
sub
cmp
addr16
repz
loop
and
inc
mov
cmp
lret
pop
push
xchg
mov
in
dec
pop
mov
cmp
outsb
in
mov
sub
push
rcll
pop
fstp
mov
mov
sbb
push
cmp
dec
or
mov
scas
aad
inc
mov
out
clc
popa
jbe
clc
xchg
call
cmp
imul
and
jg
in
pop
out
add
movsl
mov
call
jmp
loop
fs
call
jnp
outsb
orb
out
out
clc
outsb
mov
test
iret
leave
mov
movsb
adc
add
subb
daa
jge
xor
push
xor
je
jge
subb
ljmp
inc
iret
cmp
shlb
fsubrl
push
jns
ret
loop
out
push
int3
insl
sub
je
shlb
fwait
dec
fists
dec
xchg
mov
dec
test
dec
iret
mov
shll
mov
jecxz
lock
icebp
shrb
hlt
test
lcall
aam
mov
xchg
jecxz
popa
sahf
inc
push
mov
xor
xor
push
cmpl
adc
xorb
cmp
cli
nop
push
iret
hlt
mov
push
outsb
lds
movsl
jno,pt
pop
test
outsb
mov
pop
push
push
inc
shlb
pusha
xchg
sub
call
mov
cmp
lds
pusha
mov
xchg
adc
dec
lds
mov
repnz
leave
aas
jnp
xor
xlat
sub
or
xor
outsb
fsub
jns
lret
jmp
lret
ss
sub
or
inc
push
int
outsb
out
lahf
mov
or
mov
adc
loop
jae
inc
lds
mov
xchg
lea
ss
je
fistl
cld
push
jno
jge
xchg
movsb
cs
sbb
push
ss
mov
hlt
xchg
jle
mov
jae
push
cmp
and
fs
cli
shrb
bound
jle
dec
fistl
sbb
enter
push
sbb
mov
xchg
xor
out
lret
adc
fucomi
or
push
mov
data16
mov
cli
jne
sbb
mov
loopne
mov
xorl
xchg
loope
out
push
push
push
cmp
shrl
pop
mov
incl
and
icebp
mov
cld
dec
lret
ss
jno
dec
fmull
in
in
mov
mov
inc
cld
xchg
out
sti
dec
lret
pop
push
imul
push
push
xchg
movsb
add
push
pop
je
mov
add
xor
ret
dec
xchg
dec
inc
mov
mov
jmp
clc
pop
push
fwait
notb
adc
ja
adc
xchg
ja
stos
fldcw
test
and
pop
inc
test
mov
imul
lcall
icebp
clc
mov
cmpsl
sbb
push
jecxz
sbb
and
aam
imul
into
std
and
ljmp
xchg
ret
mov
rorl
xchg
in
fwait
shll
and
data16
push
cmp
dec
mull
pop
inc
pop
fiaddl
mov
jl
and
gs
insl
cli
or
mov
roll
mov
test
mov
pop
int3
inc
in
jmp
dec
or
aam
fsub
ds
push
xchg
cmp
or
lahf
pop
lock
jecxz
repnz
gs
add
cmpb
cmp
pop
popf
bound
mov
cmpsb
mov
stos
mov
lahf
lcall
jl
inc
lods
mov
stos
jne
cmp
adc
stc
cmpsl
iret
mov
jae
sbb
bound
decl
shll
push
sub
add
inc
xor
cmpsl
push
dec
int
popcnt
add
pop
in
inc
cmp
inc
lea
sub
and
daa
jl,pn
inc
stc
xor
push
pop
xor
leave
add
jl
addb
nop
pop
pop
push
push
sub
jecxz
imull
repnz
inc
imulb
les
mov
jb
push
mov
push
fbld
and
fmull
outsb
movsb
fcomps
pop
fcompl
scas
mov
scas
cmp
and
out
js
mov
or
outsb
push
sti
jmp
jne
idivb
push
pop
jp
sbb
pop
testb
pusha
sbb
out
inc
dec
adc
mov
int3
arpl
push
adc
icebp
xchg
dec
sbb
pusha
les
mov
loopne
push
mov
rcr
inc
popf
cli
mov
pop
mov
daa
sub
lahf
mov
test
movsl
int3
adc
repnz
jmp
inc
fucom
enter
fcmove
ret
sbb
add
sbb
in
dec
push
fldpi
and
data16
add
cwtl
xchg
ret
jmp
addl
and
icebp
and
mov
outsb
jmp
lret
add
mov
mov
jns
cwtl
mov
jp
nop
subb
pop
addr16
fidivrs
cmpl
fistpll
pop
mov
scas
das
mov
out
cmc
lcall
xor
and
arpl
push
inc
dec
cmpps
adc
xchg
stos
popa
adc
aad
in
bound
xor
andl
notl
jp
mov
lret
dec
repnz
fs
and
push
cltd
push
fcomp
fidivrs
pavgb
inc
in
and
shll
xor
enter
popl
into
aam
loop
dec
out
shl
adc
dec
pop
or
fucomi
sar
insl
sbb
popa
rep
cmp
movsb
popf
xchg
std
xor
mov
dec
add
jbe
ds
out
cmp
lock
mov
mov
icebp
js
xchg
inc
test
dec
adc
jl
into
ret
inc
int3
hlt
sbb
pop
lahf
xchg
les
fbstp
mov
vmulsd
jmp
ljmp
ficoml
stc
jnp
nop
inc
cmp
out
pop
push
adc
xchg
push
lock
add
jle
jg
mov
mov
xor
mov
leave
js
sbb
imul
mov
add
add
icebp
pop
mov
mov
cmp
stc
inc
pushf
mov
xor
div
push
in
pop
dec
lea
decb
or
sub
es
leave
push
jmp
inc
cs
push
out
push
out
cmp
and
sar
cmp
pop
fimuls
jnp
fwait
push
push
inc
mov
std
add
jne
shl
aad
sub
push
push
movsb
mov
cmp
mov
cwtl
iret
leave
repnz
dec
sbb
lock
bt
pusha
sbbl
xchg
sub
pop
movsb
dec
movsl
and
jb
inc
imul
jp
sub
fmull
sbb
iret
jns
adc
or
mov
fadds
test
enter
lock
ljmp
lds
pusha
dec
push
pop
or
daa
mov
or
sbb
nop
in
xor
loope
jmp
fcompl
mov
dec
mov
push
ja
addr16
lock
mov
or
mov
dec
adc
sbb
pushf
sbb
jle
iret
sbb
ja
jb
das
push
mov
push
add
addr16
andb
loop
imul
jno
into
add
dec
adc
fstps
lods
dec
jge
shrl
sbb
jmp
mov
das
hlt
das
out
fmul
clc
aad
jbe
jmp
sub
ja
cli
popa
mov
lds
sub
mov
cmp
mov
adc
ds
aam
mov
sub
aam
xor
movsl
add
ret
jb
add
mov
out
mov
dec
popa
xchg
sarl
jmp
push
lock
add
sbb
out
daa
jb
inc
jnp
stc
push
add
mov
popf
xchg
cmp
cmp
push
pushf
jecxz
or
add
and
ja
jnp
sub
outsb
cmp
mov
pushl
push
cmpsl
push
in
lcall
jmp
and
sub
popa
call
ret
ss
push
xchg
sbb
shrl
stos
movsl
cmp
dec
adc
pop
je
jp
push
cld
push
add
or
dec
add
testl
lea
jle
dec
cmp
xor
dec
sti
enter
fbld
sarl
les
mov
call
jl
sub
mov
cmp
cs
call
bound
je
inc
cli
pusha
xchg
orb
icebp
int
sbb
in
cmc
sub
ret
adc
lock
ja
and
lods
push
push
mov
inc
mov
push
sbb
mov
jo
xchg
movsbl
stos
mov
inc
cmp
cmpsl
inc
cs
hlt
push
and
repnz
mov
scas
test
lret
and
add
push
xor
mov
rcrl
lahf
jnp
xchg
out
and
out
ja
xchg
mov
je
inc
test
data16
daa
lods
xchg
dec
or
xor
in
cmp
pop
in
rol
adc
mov
aad
arpl
push
adc
pop
jbe
sub
cmp
inc
dec
fidivs
cs
ljmp
xor
lret
and
ror
enter
addl
das
or
movsl
lret
bnd
ja
les
fsubrs
adc
mov
adc
xchg
out
inc
fiadds
test
mov
dec
jle
sbb
nop
out
pushl
std
mov
xor
and
movsl
sub
jl
mov
enter
sub
mov
jno
fchs
stos
mov
xor
mov
imul
leave
push
neg
cmp
cmpl
cltd
leave
mov
dec
mov
push
jmp
fstpt
scas
mov
shl
sti
rol
dec
push
lods
mov
cs
inc
outsl
adc
cmp
sub
or
movsb
mov
xchg
fistpll
mov
ljmp
cmp
push
xchg
insl
popf
lods
data16
jnp
hlt
cld
jns
cmp
sub
mov
out
or
rclb
sbb
ds
mov
jns
dec
scas
jno
mov
dec
stc
push
dec
mov
sbbb
cs
lret
nop
xchg
pop
les
xchg
lods
mov
addr16
ds
sbb
xchg
push
shl
mov
jno
pushf
xor
push
shrb
dec
cmp
sbb
xchg
sub
orl
ret
das
or
bound
imul
lcall
mov
mov
test
jns
jb
xchg
or
mov
jg
in
stos
enter
jecxz
mov
hlt
and
rolb
and
divb
maxps
mov
or
call
cmp
test
jmp
repz
icebp
mov
fcomip
dec
scas
push
or
and
loop
in
xchg
cs
jo
push
ror
bound
mov
ss
aam
das
aaa
imul
mov
pushf
addr16
mov
xchg
loopne
dec
int3
lcall
lahf
mov
fisubrl
cmp
push
xchg
pop
les
repz
cmp
xchg
and
push
lock
fnstsw
lahf
arpl
pop
add
dec
bound
jbe
xchg
push
xchg
add
cwtl
add
push
sub
nop
daa
divl
cltd
cmp
bnd
stos
repnz
aaa
inc
pop
xchg
jl,pn
mov
es
es
jbe
fidivrs
fadds
jmp
mov
xor
push
cld
mov
iret
lea
xchg
pop
shl
in
mov
xor
insl
and
or
aas
pop
mov
je
sub
or
sub
popf
jnp
push
sti
shrl
orl
push
sti
pop
repnz
mov
inc
and
notb
mov
inc
dec
jne
daa
push
jge
es
push
pop
fwait
inc
shl
subb
jge
dec
pop
subl
pop
outsl
dec
fstpl
cmp
or
inc
out
pop
xor
pop
push
test
xor
sti
lods
pop
sub
aas
inc
add
push
sysenter
pop
mov
mov
push
lock
lock
inc
add
push
fists
pop
outsl
jb
lret
pop
fstpl
jbe
shlb
add
dec
aas
sbb
lds
xchg
cmp
stc
fwait
mov
sbb
scas
push
pushf
nop
insl
jecxz
add
pop
aaa
lea
test
sbb
pop
dec
lock
into
insl
call
iret
xor
aam
andb
or
sahf
and
inc
mul
adc
notl
loopne
mov
cs
mov
dec
cmpsb
outsb
cmp
push
xchg
fiadds
push
sub
cld
fcmovb
push
stos
incb
dec
mov
hlt
mov
mov
push
mov
loope
or
or
repnz
push
mov
mov
cli
or
push
and
pusha
ljmp
ja
daa
mov
sbb
inc
lret
mov
and
push
repz
jbe
aad
dec
push
je
popf
jae,pt
fdivs
mov
popa
cwtl
test
or
push
inc
pop
mov
or
cmp
mov
es
add
outsb
js
xor
mov
sbb
loope
sub
in
nop
sar
arpl
adc
sub
cmp
icebp
popa
js
loopne
sub
mov
aas
test
insl
push
and
push
and
add
mov
test
push
movsl
and
scas
int3
jg
lret
pop
scas
hlt
pusha
and
scas
pop
mov
popa
in
orl
roll
clc
jl
mov
stos
loop
mov
imul
loopne
pop
cmp
mov
mov
int3
mov
jecxz
jbe
mov
lea
pshufw
adc
xchg
pop
inc
fbstp
jne
lret
sbb
bnd
insl
loope
add
sbb
ret
pop
add
stos
add
inc
add
dec
popl
sub
addr16
sub
sbb
clc
or
inc
dec
push
inc
or
jg
jl
je
fs
push
andl
insl
outsl
cmp
lods
sub
les
daa
andl
daa
fwait
stc
aas
mov
sbb
loopne
xor
add
ljmp
lret
clc
shl
ret
or
push
and
bound
js
push
rcrl
push
shll
sbb
jecxz
std
lret
and
pop
adc
jecxz
in
scas
add
fmull
and
test
adc
push
inc
dec
addb
lock
mov
sarl
dec
jno
dec
pop
sti
mov
stos
sbb
fdiv
fcomp
add
and
xor
mov
or
and
jmp
jle
sarb
cmc
in
neg
lods
flds
mov
icebp
dec
jge
pusha
mov
nop
inc
loop
pop
lock
stos
cmp
lods
bound
add
in
mov
ficoms
stos
push
cmpsl
add
imul
push
pop
roll
mov
push
pop
sbb
das
imul
or
jo
add
shlb
out
or
stos
enter
sub
cmc
bound
ja
or
inc
mov
push
xchg
pop
ret
fcmove
out
sbb
push
psubsw
sub
jne
in
xchg
inc
jne
out
into
clc
movsl
mov
mov
sub
xor
dec
out
mov
pusha
repz
mov
cltd
jae
jmp
cmpsl
and
adc
cli
dec
xchg
fidivs
mov
sub
xlat
and
mov
mov
or
icebp
and
aaa
sbb
xchg
mov
sbb
test
jno
and
out
dec
sbb
jle
jge
mov
pop
hlt
xchg
cmp
pop
jmp
inc
es
jge
jbe
inc
stos
insl
fidivl
jb
jecxz
orb
push
xlat
arpl
sub
je
cld
enter
outsl
xor
arpl
cs
mov
mov
lds
sub
xchg
ret
inc
in
pop
cmp
push
xor
pusha
in
jle
out
js
pop
pushf
outsl
fiaddl
ljmp
push
mov
push
mov
jno
das
jl
push
mov
jle
je
clc
xchg
push
mov
jb
pop
icebp
fadds
sub
gs
cmc
jecxz
inc
mov
cli
jg
popf
outsb
lea
inc
inc
jmp
mov
and
inc
push
push
xlat
mov
adc
ja
lahf
arpl
dec
cmp
rep
sub
rclb
fisubl
out
pushf
lret
insb
mov
sahf
xor
aaa
addr16
lahf
ljmp
aam
test
jnp
shl
mov
rcl
fiadds
cltd
inc
addl
adc
aad
mov
mov
cmc
add
sub
jl
jae
mov
push
pop
clc
and
xchg
mov
pushf
test
aam
hlt
mov
mov
fsubs
icebp
scas
push
sahf
imul
inc
cmp
pop
cwtl
adc
mov
mov
loop
int3
push
gs
mov
xchg
or
push
or
and
out
or
xor
leave
jno
in
mov
sbb
dec
cmp
repnz
ret
xor
out
fbstp
std
pop
into
xlat
mov
aas
lcall
xlat
ror
push
jge
cmp
push
xorl
sbb
fwait
punpckhdq
adc
inc
mov
stos
rcrb
cs
inc
cmp
gs
mov
add
pop
push
cmpsb
std
inc
in
pop
jle
les
jns
out
and
xchg
pop
push
insl
sub
sbb
add
jns
cmp
aad
sub
mov
sub
lahf
push
adc
sbb
dec
data16
cmp
loop
int3
daa
xlat
cmp
add
cmpsb
dec
and
repz
xor
fidivrs
dec
rcrl
popa
sbb
insl
xchg
adc
insb
inc
nop
cmp
arpl
pop
jnp
cld
addr16
add
cmp
and
xor
pop
sbb
inc
xor
push
stc
sub
sarb
xor
hlt
test
pushf
dec
pop
mov
sub
jnp
push
mov
add
add
out
push
popf
ds
sbb
inc
in
stc
sbb
divl
push
mov
cmpsl
push
mov
sub
repnz
icebp
xchg
ja
xchg
push
jle
xchg
into
scas
lods
out
adc
mov
push
outsb
mov
mov
mov
mov
sub
mov
add
xchg
xor
sbb
inc
lods
xor
add
cmp
adc
out
adc
sbb
xorl
nop
or
stos
pop
insb
imul
mov
dec
cmp
imul
adc
push
mov
ja
jb
sub
je
lock
xor
iret
push
xchg
stos
insb
xor
sbb
inc
jnp
sbb
pop
inc
mov
iret
dec
xor
inc
or
sbb
push
xor
push
fiaddl
cmp
in
rolb
hlt
rcrl
ficoms
sub
fisubs
je
aaa
leave
sahf
add
imul
jmp
or
and
repz
fstps
push
hlt
mov
cs
enter
js
out
insl
insl
decl
mov
xchg
mov
mov
std
push
mov
jns
adc
push
jecxz
lods
leave
insl
inc
cmp
add
cmpl
xchg
addr16
fisubrs
rorl
pop
imul
sbb
test
bound
shrb
cmpsl
lods
lcall
fs
xchg
xchg
cmp
sub
xchg
push
pusha
pop
cmp
into
push
pop
int3
xor
scas
mov
sub
pop
pop
in
rolb
sbb
sub
xlat
outsb
std
mov
sub
in
xchg
aas
xor
inc
mov
jo
dec
mov
daa
inc
or
push
lock
je
push
pop
rcrl
sub
dec
jge
mov
sarl
jp
mov
cmpsl
in
adc
and
push
ret
dec
xor
add
mov
mov
insb
cltd
inc
adc
cmc
dec
xor
mov
add
lahf
adc
test
ds
gs
shlb
add
outsl
sbb
pop
cli
loop
xchg
clc
add
push
xchg
sahf
ljmp
cmpsl
sbb
add
fldcw
sbbb
outsb
lds
scas
push
push
fbld
sub
pop
test
fld
push
mov
mov
hlt
adc
paddq
lcall
adc
pusha
add
pop
push
xchg
popa
sti
push
bound
mov
mov
mov
orl
leave
push
cltd
int3
movsb
mov
out
popf
cmc
lea
xchg
cmpsb
stos
pop
or
insl
mov
stos
shl
cmpsb
cmp
xchg
lahf
add
cmp
out
xor
sti
dec
sub
in
test
lock
scas
repz
jnp
xchg
leave
xchg
mov
dec
adc
imul
hlt
jecxz
pop
leave
scas
pop
insb
xchg
in
jb
sub
and
xchg
outsl
call
popa
xor
pushf
into
jnp
mov
stos
add
out
bound
insb
int3
outsb
fists
lods
pop
add
out
orl
mov
lods
stc
jecxz
sub
movsl
nop
inc
jbe
lret
pop
ds
fnsave
ja
popa
cmp
and
mov
pop
mov
dec
mulb
jnp
jl
push
cmp
add
fsub
cmp
cmp
sub
pop
cmp
sub
mov
shl
out
test
mov
insb
add
fcompp
cld
outsl
cmc
hlt
je
test
insl
mov
test
bound
inc
xlat
and
xlat
mov
es
cli
fldt
leave
jmp
pop
push
mov
jno
dec
mov
jns
fs
fadd
lods
insb
lret
rcrl
gs
pop
push
stc
imul
out
push
lods
repnz
sti
push
xchg
scas
stos
mov
adc
fs
outsl
scas
loopne
sub
cmp
pop
sahf
jbe
dec
mov
lock
or
add
data16
cmp
test
and
mov
mov
mov
push
xchg
pop
ret
adc
popa
push
data16
icebp
imul
mov
in
and
fdivrs
aas
mov
fstl
push
dec
cmp
lock
xchg
pop
test
jae
jo
sub
cmp
cli
imul
add
mov
push
cmpsb
push
addb
sbb
mov
jmp
dec
je
loopne
pop
inc
add
mov
add
xor
mov
mov
imul
es
arpl
sub
jmp
lea
insl
jp
dec
outsb
aam
imul
mov
fisttpll
or
inc
inc
mov
xor
push
stc
jo
jge
pop
mov
lods
std
add
hlt
fistl
outsl
ret
mov
repz
push
xchg
adc
movsl
inc
test
mov
add
and
xchg
aaa
jae
jno
cmpsb
jecxz
xorb
mov
jns
jne
lds
dec
dec
call
jo
pop
and
push
cmpsl
xlat
jae
and
sub
jle
cmp
adc
jg
stc
test
test
dec
pop
hlt
push
pop
aam
xchg
in
pusha
push
mov
in
cmp
fwait
enter
xchg
mov
adc
in
cmc
xor
mov
shll
jno
push
cmpsb
cmc
lret
ja
or
dec
cmpb
arpl
push
inc
fadds
or
xor
xor
mov
and
adc
inc
cwtl
test
jl
js
push
int
jle
mov
gs
cmp
ret
mov
push
fistl
mov
stc
pusha
std
outsb
icebp
lret
fnsetpm(287
xor
mov
out
lods
and
inc
push
mov
inc
sahf
stc
sbb
call
roll
jle
inc
cwtl
xor
inc
mov
lret
xchg
aaa
mov
mov
or
adc
mov
mov
inc
mov
or
push
imul
stos
sbb
adc
jb
pusha
sub
sbb
xchg
push
aaa
push
dec
sar
movsl
fldt
add
inc
mov
repz
test
xor
or
ss
mov
test
push
repnz
adc
cltd
lret
pop
pop
cs
in
mov
xor
aam
addr16
cmp
lock
rorb
popf
fisttpll
push
ljmp
aad
and
or
cltd
movsb
dec
arpl
xchg
adc
in
or
adc
push
lods
or
icebp
mov
in
loopne
rclb
sbb
lods
pushf
pop
xor
fs
push
scas
jg
adc
xor
jns
test
xchg
and
icebp
lcall
jns
test
mov
cli
cmp
xchg
xchg
cli
and
std
inc
push
or
mov
ds
push
mov
xchg
dec
test
mov
xchg
fstpl
call
rorl
dec
push
testb
or
xor
push
ror
add
lcall
xor
mov
xchg
mov
lea
push
jo
lahf
mov
push
xchg
xchg
lret
ljmp
andb
gs
add
mov
daa
mov
sub
dec
imul
push
dec
stc
test
sbb
inc
jmp
cmp
shlb
pusha
and
rclb
lcall
aad
psubq
mov
mov
repnz
movsb
mov
es
mov
jae
or
push
xchg
push
fcmove
add
js
dec
pop
stc
pop
xchg
mov
jg
push
push
cmpsb
jns
cwtl
add
jge
shr
lret
cwtl
stc
sbb
fisttpll
pop
sahf
js
add
sbb
shlb
aam
fsubs
mov
es
sbb
xchg
pop
xor
pop
inc
push
aas
fmuls
lcall
mov
or
push
push
push
add
add
add
jns
pop
addr16
xchg
fstpt
sbb
repz
addl
pop
in
fnstenv
scas
pop
scas
mov
jl
pcmpeqb
mov
cs
repz
lock
jnp
loope
sbb
sbb
aad
and
sti
pop
je
jae
jle
ds
rcrl
sti
jno
loop
cmp
inc
imul
dec
or
pushf
cmp
repnz
pop
jmp
jecxz
fbstp
mov
lret
adc
ret
mov
mov
out
adc
subb
pop
add
out
inc
push
outsb
cmpsb
jnp
lock
mov
clc
mov
pop
cmc
movsl
xchg
jae
lds
in
jno
movsb
fsubl
loopne
mov
jge
mov
insb
cld
fists
xchg
int
lahf
fistpl
js
sarl
cltd
sbb
iret
clc
jbe
iret
push
repz
pop
je
adc
pop
insl
rol
orb
iret
sub
xchg
cmp
mov
pop
mov
xchg
pop
push
out
xchg
pop
mov
and
pop
imul
adc
cmp
and
sub
imull
sbb
lcall
js
ljmp
push
in
fisubrs
cmp
sbb
xchg
jb
add
jno
mov
xchg
das
sub
xchg
stos
pop
mov
or
pop
add
popf
mov
dec
subb
push
and
xchg
add
xchg
sub
loop
hlt
pmaddwd
pusha
repz
and
popf
dec
push
push
popf
shr
ljmp
das
aad
add
dec
sub
jno
sub
pop
xor
fwait
inc
and
sub
and
and
fnstcw
popf
adc
mov
loop
jnp
popf
stos
dec
pop
adc
jmp
data16
xor
jge
pop
neg
inc
les
insb
inc
shlb
mov
xchg
out
das
dec
push
ja
nop
add
das
add
lds
jb
and
mov
mov
mov
pop
mov
sahf
in
mov
inc
jge
xchg
mov
out
mov
inc
and
es
cmp
cmc
mov
sub
subb
add
jmp
cli
cmp
outsl
inc
or
aad
std
shll
mov
mov
mov
clc
out
lea
adcl
inc
rorl
dec
imul
jge
sbb
cwtl
fs
jle
test
es
jl
sbb
rep
push
int
xchg
push
mov
inc
pop
jl
mov
sub
fisubrs
and
ljmp
adc
ja
add
xor
decb
into
scas
inc
or
vcvtdq2pd
adc
push
cmp
fidivrl
inc
outsb
outsl
aaa
cmpsb
push
ret
repz
stos
jns
jnp
adcl
fidivl
xchg
popf
adc
ja
xor
mov
jmp
movsb
test
es
enter
sbb
xor
repnz
or
dec
pop
add
jbe
or
lods
inc
adc
cmpsb
xchg
adc
mov
stos
and
repnz
sbb
ds
ljmp
cmp
adc
xchg
imul
mov
cltd
out
stc
dec
mov
fnstsw
lret
or
cmpsl
es
adc
inc
test
stc
cmp
es
pop
xlat
adc
inc
in
icebp
out
jecxz
shrb
ret
and
lret
stos
mov
mov
dec
outsl
aas
and
xor
push
mov
stos
or
push
dec
mov
addr16
jb
inc
mov
mov
int3
lods
test
lahf
jle
loope
pop
mulb
fidivrl
out
das
aad
sbb
icebp
ficompl
mov
hlt
cmp
mov
push
add
sbb
fadd
js
sbb
pusha
hlt
jo
sub
and
sbb
mov
and
adc
push
in
rol
clc
adc
cmpsb
dec
in
xor
mov
test
cmovnp
push
pop
inc
xchg
jmp
popf
add
xchg
adc
pop
in
lret
mov
add
mov
sbbl
add
clc
cld
cltd
pop
insl
mov
xor
ror
xchg
and
xchg
and
aaa
mov
xchg
or
jl
ds
xchg
mov
jnp
int
mov
fistl
mov
mov
cs
idivb
lret
push
movsb
xchg
push
sbb
inc
xlat
inc
xlat
jns
xchg
xor
inc
mov
inc
mov
dec
stc
addr16
out
stos
push
push
sub
adcb
xor
loopne
jb
jno
rorl
and
insb
mov
pusha
add
or
xor
in
xor
pusha
sub
cmp
cmpsb
sbb
pushf
xor
test
push
int3
and
mov
xor
mov
fistpll
je
dec
test
add
addr16
mov
or
out
fldenv
out
or
mov
jae
lods
xchg
fisubs
std
mov
test
lea
fwait
sbb
adc
lret
mov
cmp
lahf
push
lahf
ljmp
cmc
dec
mov
pop
add
cltd
in
arpl
mov
sti
pop
xchg
mov
cmc
arpl
xchg
in
push
sbb
test
pop
adc
jo
xchg
push
jns
xlat
jne
out
daa
mov
insb
and
jp
les
xor
shlb
pop
mov
push
gs
sbb
push
mov
pop
pop
push
jle
jae
data16
bound
int3
das
icebp
adc
mov
fs
xchg
or
fadd
pop
push
lds
enter
insl
test
bound
incl
sbb
xor
adcb
leave
mov
imul
pop
cmp
sbb
fnstenv
mov
sbb
test
sub
daa
dec
xchg
xlat
pop
sbb
insl
sub
adc
test
shll
push
pop
add
cli
das
add
popf
hlt
fs
iret
push
xor
jo
sti
popa
sbb
pop
test
or
sarb
and
out
mov
inc
xchg
cwtl
clc
dec
or
mov
in
mov
mov
in
or
cltd
mov
scas
leave
mov
mov
cld
fsubrl
push
push
out
ds
rcrl
aam
inc
dec
inc
ljmp
rolb
sbb
ret
scas
aam
arpl
std
xor
imull
cli
fs
adc
ret
ret
out
insl
popa
es
insb
iret
sub
addb
imul
add
lcall
outsb
int
icebp
jmp
xlat
lods
lret
stc
rcrb
test
sahf
shrb
sarb
daa
add
lahf
in
add
mov
mov
lods
mov
pop
mov
add
cmp
pop
xorl
pop
jo
rorl
ljmp
push
outsl
xor
adc
iret
dec
xchg
adc
or
sbb
xchg
cmp
pop
out
jne
push
jmp
adcb
sub
pop
js
mov
inc
mov
cmp
icebp
test
push
rclb
mov
sti
ret
push
mov
subb
xlat
inc
jmp
fucomi
cmc
cmp
cmpsb
testl
int
xor
mov
jmp
sbb
push
mov
sahf
or
inc
inc
cmpsl
mov
mov
in
in
adc
shl
xchg
add
mov
bswap
pop
jo
xor
lods
test
inc
mov
shll
aam
fwait
xlat
js
jno
adc
aam
cmp
adc
inc
xor
insl
int3
frstor
sbb
fisttpl
outsl
inc
sbb
gs
inc
cmp
fdivrl
je
je
lock
insl
jae
jl
mov
movb
ret
aad
jne
jbe
testl
sbb
bswap
fmull
jecxz
ss
jb
iret
jo
pop
mov
sbbb
out
and
add
shlb
loope
inc
je
or
lods
addl
cmc
cmp
cltd
mov
mov
push
out
test
and
dec
or
sbb
icebp
fwait
and
lock
mov
and
sbb
push
ficoml
jle
js
and
sti
jns
or
les
scas
sbb
sub
es
sub
and
mov
xlat
push
add
ds
popf
lods
or
aad
cmc
fsts
loop
mov
and
sub
hlt
out
sbb
lock
pop
into
push
out
push
jnp
int3
jge
fisttpll
mov
and
and
pop
dec
cwtl
or
lds
scas
inc
cmp
mov
gs
out
mov
roll
test
pop
jecxz
inc
and
adc
xor
roll
movsl
pushf
stos
jbe
pop
jbe
loop
out
insb
iret
je
mov
mov
fistps
xchg
in
gs
inc
shlb
ffree
sub
imul
cmp
push
xchg
add
mov
sbbl
push
movsl
push
fmulp
jmp
cmp
push
xchg
loopne
loopne,pn
xchg
out
dec
sti
inc
xor
sub
int
cmp
jecxz
popa
dec
hlt
mov
fneni(8087
cmp
jle
out
aam
sub
sub
mov
xchg
cmpsl
cmp
mov
jbe
mov
xchg
fcmovne
js
pop
insl
and
stos
repnz
or
sub
xor
sub
lahf
push
pop
jl
cwtl
ds
sbb
or
jne
bound
ret
pop
jae
fwait
dec
in
and
shrb
and
mov
dec
and
mov
fs
fidivl
sbb
into
xchg
push
mov
ja
jl
mov
lea
and
icebp
dec
push
dec
mov
pushf
add
cmp
mov
inc
xchg
in
dec
xor
mov
ret
nop
pop
in
leave
adcb
cmp
sti
repz
popa
les
dec
nop
adc
xchg
push
and
push
sahf
xor
cs
dec
aam
popf
stc
sti
into
add
sbb
or
stos
pop
mov
mov
xlat
ja
hlt
pop
mov
xchg
xor
in
adc
pop
mov
add
into
sahf
jmp
xchg
xor
adc
push
add
xor
mov
inc
movsb
es
and
sub
cmp
push
ja
jge
enter
cli
push
sarl
pop
lods
xor
xchg
iret
roll
out
inc
cmc
lea
cmp
jecxz
jp
movsl
cltd
push
mov
inc
test
data16
iret
mov
cli
and
iret
xlat
pusha
pop
cmp
mov
stos
jae
xor
pop
add
mov
decl
inc
out
aas
into
je
mov
dec
pop
jle
shrb
fwait
ret
cmp
and
scas
mov
aad
std
mov
dec
inc
or
add
xchg
dec
cmp
sub
dec
xlat
push
mov
imul
in
xor
cmp
rclb
aas
push
nop
jmp
insb
mov
dec
add
pop
roll
dec
mov
rorb
movsb
rcrb
dec
dec
add
mov
inc
inc
cmp
rcrl
xor
xlat
push
fidivrs
or
dec
and
mov
adc
aas
mov
mov
cmp
push
movaps
xchg
int3
arpl
xchg
cmp
test
fidivrl
rolb
orl
adc
in
andb
enter
stos
in
cmpsb
xor
sti
inc
dec
sbb
push
cmp
push
fidivrs
sbb
imul
shl
sti
dec
icebp
imul
repz
sub
push
sub
adc
out
ret
fbstp
call
fldt
out
adc
lahf
nop
cltd
xor
orl
lods
out
mov
dec
int
jns
lea
stos
cwtl
mov
pop
nop
pop
out
xchg
stos
xor
cltd
jbe
xchg
jmp
pusha
push
jne
sbb
out
cmovns
stos
in
das
mov
frstor
nop
bnd
das
adc
xor
adc
xchg
dec
ljmp
xchg
test
mov
jle
dec
jne
or
push
outsb
ss
mov
dec
shll
jno
xchg
inc
mov
daa
aam
and
mov
inc
jne
xor
movlps
adc
popf
mov
dec
and
mov
mov
sbb
jmp
adc
push
mov
xor
cli
cmp
and
mov
sbb
cmp
lock
das
test
lret
cmp
cli
pop
les
jns
cmpl
mov
mov
ss
cmpb
push
pop
xor
addr16
mov
dec
enter
xchg
leave
cld
mov
mov
cmp
xlat
xor
lret
incb
call
fsub
cmpl
mov
xchg
push
pop
aam
sub
xorps
lea
or
out
dec
inc
jg
inc
aam
pop
ret
xor
and
fidivrl
sbbl
mov
push
sbbb
test
mov
cmp
movsb
and
test
fcoml
das
fmull
xrelease
or
cmp
push
pop
cmp
adc
mov
push
mov
jg
xchg
dec
inc
and
insl
shr
pop
push
fwait
mov
mov
ss
sbb
mov
int
sar
cmpsb
mov
xor
mov
mov
inc
cmp
jecxz
lods
dec
xlat
mov
sbb
idiv
lock
test
sub
dec
cmp
inc
stos
dec
imul
mov
outsb
fs
adc
mov
sub
mov
fmul
add
imul
adc
imul
lds
repz
mov
ss
outsb
sti
cltd
fdivl
in
ds
dec
inc
call
mov
cwtl
inc
xchg
stos
push
clc
out
add
adc
lea
icebp
or
movsl
mov
sarl
sbb
pop
repz
fs
pop
ficoml
adc
sbbb
push
mov
notl
add
cwtl
rcrl
ffreep
pop
data16
icebp
pop
into
sar
cmp
mov
hlt
pop
daa
inc
cli
aam
movb
dec
pop
xlat
mov
cld
or
mov
push
sub
out
aas
pop
mov
add
sub
std
xor
in
lahf
adc
cmp
mov
sub
xor
ret
lea
mov
and
add
xchg
dec
sbb
stos
push
arpl
mov
lock
xchg
sub
mov
sar
fs
out
test
sbb
ficompl
ljmp
pop
fdivs
cmpsb
jp,pn
mov
dec
stc
call
stc
addr16
movsb
stos
xlat
rorb
stc
pop
xchg
mov
mov
movsb
je
fcom
lret
lock
outsl
mov
add
cwtl
and
in
cmp
sbb
dec
jg
scas
adc
xchg
mov
and
loopne
xchg
pop
push
pushf
sbb
pop
dec
test
mov
mov
aad
jle
scas
insb
sti
insl
call
push
rcll
or
bound
xchg
xchg
cwtl
movsb
sub
and
daa
std
pushf
adcl
add
mov
mov
sahf
jg
push
popf
shlb
xchg
cli
leave
rcll
stos
xorl
insl
iret
scas
stos
std
sub
in
cld
or
or
or
scas
fnstcw
dec
jp
sti
or
and
in
or
iret
jg
mov
xchg
lcall
xor
jg
or
mov
cs
mov
scas
lret
mov
ret
int3
fldcw
add
mov
popf
dec
call
out
pop
adc
push
add
xchg
mov
sarb
adc
dec
ss
out
mov
xor
and
lcall
mov
out
rcll
inc
lret
push
pop
iret
xchg
fdivrp
sbb
sbb
rclb
rcrl
in
test
mov
cld
hlt
push
pop
adc
add
ds
pop
adc
cmp
loop
xchg
cmp
adc
dec
pop
jnp
hlt
adc
into
fwait
or
int3
push
stos
push
sub
rorl
clc
push
insb
or
hlt
push
mov
mov
sti
cltd
dec
pminsw
xlat
std
stos
sbb
jno
mov
stc
push
ljmp
push
xchg
add
or
leave
sub
sbb
jg
mov
icebp
pop
rcll
inc
mov
subps
sbb
mov
sub
adc
scas
push
stos
push
inc
int3
shlb
adc
loopne
adc
rcrl
and
dec
ds
xor
cmp
mov
push
pop
decl
test
mov
sbb
cmp
xadd
push
std
push
dec
pop
and
movsl
ljmp
adc
inc
xor
insl
xor
jns
daa
adc
cmc
lret
mov
dec
rolb
dec
ja
scas
mov
rcrl
out
inc
test
and
outsl
icebp
push
call
mov
adc
xchg
cld
pop
adc
out
movsb
test
fidivl
fsubr
cmc
gs
mov
in
sub
dec
movsb
jge
bswap
pusha
jne
cmp
jp
sbb
mov
mov
mov
fstp
xchg
mov
testl
pop
jge
outsl
pop
adc
mov
test
loopne
mov
sahf
out
inc
pop
mov
fldenv
mov
or
jl
imul
pushf
mov
mov
loop
mov
jle
jne
int3
jmp
cli
pusha
dec
cmp
sahf
out
push
lret
test
out
push
sbb
loop
sbb
add
mov
sub
call
mov
shrb
jle
int
js
popf
pop
or
pop
adc
mov
pop
lods
fildll
pop
push
imul
or
sbb
dec
fwait
fwait
movl
inc
fcmovnbe
ffree
ret
test
mov
notl
cmp
sbbl
jo
scas
inc
add
cmp
add
fs
pop
inc
leave
add
add
sbb
fistpl
push
iret
addr16
or
fstl
and
xor
xchg
xlat
push
in
push
or
add
dec
leave
popa
mov
popf
orl
dec
shl
push
fldt
xchg
xchg
mov
out
push
mov
jo
and
sbb
mov
inc
out
mov
arpl
xchg
dec
test
insb
adc
repz
push
xor
mov
xlat
jge
mov
sub
cli
pop
shr
pop
mov
sub
stc
mov
insl
aad
or
mov
push
jno
popf
mov
in
cltd
dec
xor
xchg
jne
adc
call
adc
gs
test
mov
mov
int3
cld
mov
sub
push
inc
pop
ss
cmp
mov
sbb
cmp
dec
in
rcrb
lahf
mov
lods
push
cltd
xchg
fiaddl
sub
int3
mov
fldt
dec
inc
cmpsb
xchg
pop
mov
ror
mov
je
push
jne
xchg
sahf
xchg
lods
xor
sbb
push
lret
dec
das
das
movsl
push
xchg
fisubs
imul
dec
hlt
cmp
xor
xlat
addr16
dec
cmc
data16
gs
rorl
cmp
stos
or
ret
inc
fnstenv
iret
cmpsl
mov
inc
int3
out
push
sbb
cmp
in
nop
fwait
mov
cwtl
out
bound
or
xlat
push
inc
adc
scas
mov
and
mov
fistl
aaa
jnp
mov
stc
test
mov
cs
push
cs
ljmp
out
ret
lods
pop
pushf
test
ds
popf
fstpt
enter
mov
xchg
push
rorb
adc
dec
xor
pop
cmp
adc
sahf
jns
fs
jge
xchg
push
mov
sbb
movsb
push
into
push
add
cltd
movsl
xor
cmc
out
mov
fsubs
in
popa
insl
mov
xor
and
stc
scas
outsb
leave
xor
mov
rcll
subl
xchg
sub
pop
sub
cli
jmp
pop
or
int3
ret
repnz
xor
mov
mov
adc
clts
add
xlat
jg
insb
jnp
pop
jle
mov
loopne
mov
inc
je
mov
inc
jecxz
shl
loop
fsub
sub
aad
sub
jg
cmp
out
add
popf
outsb
mov
cmc
pop
adc
outsl
adc
and
jge
in
mov
xchg
push
nop
mov
mov
mov
xlat
movsl
in
mov
dec
pop
cmc
mov
fwait
cmp
inc
or
pop
mov
test
mov
add
inc
mov
adc
jge
rolb
cli
sub
push
pop
mov
sbb
inc
xor
imul
inc
and
es
enter
dec
dec
xlat
sarl
lahf
cmpl
cmc
loop
sub
fisttps
arpl
xor
fadds
movsb
call
leave
xor
adc
outsb
mov
fs
adc
xor
mov
sbb
mov
sti
sub
dec
cmp
fcompl
insl
test
xchg
fdivs
inc
cmc
ds
jge
adc
jl
mov
mov
cmpsl
movsl
ret
sbbb
ljmp
or
push
add
cmp
in
or
shlb
arpl
test
sti
push
sub
and
cmp
sbb
xchg
jp
daa
ja
mov
or
jmp
xorb
pushf
inc
out
out
and
fisubrl
add
clc
add
sub
xchg
adc
pop
bound
mov
and
sub
sbb
hlt
inc
xor
mov
orb
outsl
adc
or
jns
adc
fidivrl
inc
es
mov
lods
push
ret
addl
cmp
decl
adc
jne
xchg
jg
nop
mov
outsl
push
imulb
jbe
xchg
inc
inc
pop
dec
push
pop
add
mov
pop
data16
cmp
or
jnp
int3
push
sahf
enter
dec
push
mov
lret
push
test
addl
aas
dec
test
mov
pop
insl
dec
ss
or
pop
addr16
ret
ret
popf
mov
sahf
test
sbb
scas
nop
mov
divl
xchg
das
add
xor
adc
mov
enter
subl
or
xchg
mov
out
sbb
ret
jb
sahf
cli
ss
sti
mov
mov
mov
scas
daa
mov
xchg
cmp
cmpl
movd
loope
jo
fsts
lods
dec
or
pop
insb
ret
or
test
push
pop
mov
fsubr
outsl
js
pop
and
mov
or
pop
aad
sbb
jg
xchg
rcrl
outsl
repnz
outsb
pop
faddp
popa
ret
jns
mov
push
dec
ret
pop
mov
dec
neg
xchg
and
sub
insb
adc
popf
fdivrl
xor
in
mov
ja
xlat
adc
mov
dec
jo
inc
xchg
and
cld
inc
in
leave
lods
addr16
pop
and
mov
insb
rcrb
sbb
push
xchg
int3
je
and
mov
fisttpl
cmp
jle
push
fsubs
fcompl
sbb
popa
xchg
rclb
aam
pushf
mov
and
mov
aaa
pusha
mov
xchg
xchg
xchg
aad
pop
in
imul
mov
xchg
push
pop
xchg
in
nop
ret
xchg
xchg
ja
cmpsl
dec
add
pop
xor
mov
negl
mov
push
scas
addl
dec
lds
xchg
mov
cmp
hlt
jl
mov
rcll
jp
mov
xchg
fldenv
lods
xor
xchg
push
mov
and
int
test
dec
fldz
loopne
lahf
ud0
mov
mov
add
std
mov
imul
mov
movsl
shlb
xor
cld
pop
popf
fs
sbb
adc
lea
mov
push
es
ja
iret
nop
adc
mov
call
arpl
push
arpl
inc
ss
jmp
xlat
or
inc
xchg
push
ret
pop
cli
dec
js
adc
push
cli
in
loopne
call
or
inc
pop
scas
lds
les
enter
insb
cmp
cmp
sub
adc
jo
in
or
mov
lods
mov
in
add
push
mov
add
add
and
mov
adc
testb
dec
cmp
aad
dec
add
scas
es
mov
jmp
mov
ljmp
sbb
popa
stos
push
dec
push
das
and
cmp
gs
lret
xor
fdivs
lods
outsb
jo
dec
in
rcrl
es
push
or
fisubrs
ss
push
hlt
xorb
sbb
xchg
call
add
xchg
inc
add
cs
dec
push
imul
add
repz
xchg
daa
cmp
loop,pt
fstpl
mov
add
cli
pop
pop
xchg
out
sahf
in
cmp
loop
push
xchg
mov
inc
cs
faddl
daa
and
push
cmpsb
sbb
inc
push
jae
repnz
xchg
xchg
push
loope
jmp
pop
inc
outsl
repz
sub
xchg
insl
xor
imul
xchg
gs
insb
andl
in
xchg
mov
mov
fcomp
pop
mov
push
into
jle
and
inc
sub
jo
scas
jne
leave
sbb
fisubrl
jle
dec
lahf
outsb
xor
mov
ror
addr16
dec
xor
insl
inc
dec
and
xor
or
push
add
inc
insb
mov
inc
imul
repz
icebp
xor
addr16
jle
lcall
push
push
push
popa
xor
sub
test
iret
dec
hlt
jle
movsb
cli
adcl
push
insl
push
mov
int
sub
stos
push
in
stc
outsb
xchg
stos
loope
mov
shll
jne
push
dec
sbb
shlb
int3
mov
cmp
push
iret
push
call
popf
jno
jbe
mov
dec
push
fcoml
pusha
dec
dec
out
mov
push
mov
push
stos
dec
mov
stc
sbb
add
pop
adc
in
in
ja
xchg
xor
stos
xchg
adc
mov
cs
pop
xchg
ss
fwait
jecxz
popf
jne
jg
sub
iret
and
or
setne
adc
push
es
mov
pop
mov
in
xchg
es
movsb
dec
push
test
pushf
in
out
fsubrl
xorl
dec
lock
cmp
cmp
ljmp
stc
hlt
pop
mov
dec
mov
cmp
sub
xor
push
xor
shll
pop
insb
lock
xchg
movb
in
dec
ss
xor
jecxz
push
adc
cmc
jnp
xchg
dec
fs
mov
mov
test
dec
mov
add
add
mov
jae
popa
test
pop
shrl
mov
mov
pop
in
hlt
fimuls
mov
popf
cmp
mov
divps
xchg
mov
sahf
push
mov
adc
sbb
sbb
aam
mov
es
mov
leave
fwait
inc
xor
mov
aam
outsb
test
idivb
stos
nop
addr16
add
scas
test
clc
bound
scas
push
or
cmc
cwtl
stos
and
mov
jmp
call
inc
loopne
push
lahf
mov
sub
loope
repz
mov
loope
or
test
shlb
sbb
aas
cmpsl
or
jg
movsl
ror
mov
cld
mov
cs
cmp
or
hlt
xchg
pop
pop
mov
dec
jne
jle
sub
pushf
loope
test
loopne
in
mulb
into
pop
fisubl
xchg
lahf
jo
gs
adc
inc
dec
addr16
aas
jo
jl
mov
popa
aad
into
jne
cmp
jge
dec
xchg
stos
scas
rcll
loopne
nop
jmp
or
decl
inc
cmc
orl
movsb
pop
int
sub
and
cs
add
xchg
fidivs
pusha
mov
aaa
xchg
cli
and
in
call
mov
pop
lds
mov
ljmp
and
xchg
pop
aaa
cmp
cli
gs
pop
sti
add
aaa
mov
add
or
clc
imul
cltd
int3
into
mov
xor
mov
scas
push
xchg
push
or
pop
adc
je
out
shll
xchg
and
xor
mov
cmp
je
in
mov
in
pop
mov
bound
or
aaa
lret
jo
jne
and
xchg
sub
jecxz
gs
inc
inc
mov
mov
xor
jmp
nop
fists
stc
std
test
sbb
pop
mov
xchg
bound
mov
xor
or
xor
out
xchg
call
notl
and
adc
push
cmp
cmp
ljmp
cltd
sub
filds
enter
dec
jno
mov
jnp
cwtl
cwtl
cmp
xor
mov
xor
push
stos
lea
call
push
push
adc
sbb
test
fildl
add
pop
lods
mov
inc
mov
stc
xchg
pop
daa
adc
cld
jo
ss
gs
xchg
or
add
push
testb
dec
push
xchg
aas
test
xchg
not
cli
push
mov
shl
outsb
rcrl
icebp
dec
sbb
je
mov
inc
stc
insl
mov
push
imul
rcrb
push
dec
lods
pop
xlat
das
test
out
push
loope
xor
out
rorl
mov
es
and
out
mov
idivl
addr16
ficomps
in
insb
push
imulb
mov
jmp
fldenv
daa
jl
ja
add
dec
in
or
xor
aas
jbe
xor
mov
xchg
inc
sbb
sbbl
lret
xchg
in
out
ret
mov
push
and
xchg
int
scas
sub
cmp
sbb
fnstsw
aam
mov
or
jp
movl
frstor
cwtl
jl
pop
push
mov
push
inc
cmpsb
push
repz
cmp
mov
mov
cmpb
mov
mov
fs
pop
mov
pop
or
xchg
mov
pop
sub
inc
jo
divl
sahf
inc
xor
rol
push
cld
ds
xchg
pop
popa
mov
jle
sahf
fs
xor
pop
push
add
pop
lret
lret
mov
adc
adc
leave
ljmp
push
cli
insb
xchg
push
es
dec
jne
or
hlt
xchg
push
fiaddl
mov
hlt
and
out
sub
stc
outsb
push
sbb
lea
jmp
dec
sbb
cs
sub
jo
aad
scas
test
outsl
test
mov
lds
out
fidivrl
push
outsl
adc
leave
sbb
cmp
ss
negb
loope
and
mov
int
ret
movsb
or
pop
insb
cld
sbb
mov
jle
mov
cmp
hlt
fsubl
arpl
ja
je
nop
add
mov
sahf
lds
xchg
and
mov
sti
icebp
mov
mov
js
push
push
ret
push
hlt
loop
ret
aad
mov
je
scas
jle
push
xor
dec
jbe
jo
mov
pusha
cmp
sub
jae
rcrb
leave
mov
jg
adc
dec
dec
bound
cwtl
cmp
sbb
loop
aas
and
push
shll
lods
jmp
jbe
andl
popf
loop
or
mov
pop
sbb
jne
mov
and
mov
jge
cmpsl
into
sahf
test
out
lcall
mov
sbb
idivb
push
call
cwtl
xchg
fbstp
inc
lods
jo
jne
and
dec
ret
imul
leave
mov
mov
or
cmp
call
shll
aam
inc
dec
jb
loope
ss
xchg
aam
push
cmpb
inc
movsb
mov
mov
inc
mov
jge
and
push
scas
mov
and
sarb
xchg
es
pop
pop
mov
in
and
test
mov
xor
cli
cltd
inc
test
stc
data16
jge
jl
jne
mov
adc
ss
lods
das
mov
into
repz
inc
cmp
icebp
fimull
adc
lea
jle
jle
into
jp
jmp
das
sarb
cmp
or
inc
scas
les
push
cs
fs
daa
fisubrs
pop
or
lcall
inc
das
jmp
lcall
add
cmp
push
inc
cs
fwait
outsl
push
dec
push
adc
enter
jb
pop
clc
mov
push
out
mov
out
aas
cmpsb
xchg
inc
movsb
pop
mov
fldcw
das
xchg
fcomps
fbld
cmp
jnp
pop
std
clc
js
push
loopne
pop
dec
or
scas
aaa
dec
data16
pop
dec
inc
lods
shrl
lods
fdivrl
pop
adc
fs
xor
and
lahf
dec
icebp
inc
lret
clc
and
push
mov
negl
icebp
ret
pop
dec
adc
enter
pop
repnz
outsl
mov
cmp
test
sub
iret
stc
cmp
jecxz
dec
inc
or
imul
mov
cmp
cltd
test
push
cli
xchg
imul
push
sbb
shll
js
lods
nop
std
jmp
loopne
dec
sbb
dec
xchg
sbb
dec
sub
pop
mov
lock
cmp
rcrb
divb
mov
imul
inc
lods
adc
sub
daa
loope
push
mov
xor
scas
js
ret
rorb
mov
nop
jecxz
test
pop
lcall
test
mov
xchg
aad
stos
pop
cmc
mov
ljmp
pusha
std
jo
daa
lret
pop
or
add
jnp
and
mov
add
scas
adc
xor
lret
mov
js
mov
sbb
ss
add
nop
xchg
push
inc
movsl
push
add
icebp
sbb
push
lock
xchg
clc
testl
sub
mov
in
sbbb
push
adc
cmp
test
or
fiaddl
lods
adc
push
xor
hlt
fiaddl
idivl
stc
mov
notb
mov
ja
cmpsb
aaa
jbe
pop
sbb
or
test
lock
fldt
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
jne
jecxz
xchg
gs
jmp
addl
push
dec
adcl
fcomps
hlt
test
out
jnp
sub
dec
adc
je
mov
mov
mov
fwait
cmp
mov
mov
or
loopne
imul
flds
call
add
sub
imul
mov
loope
jg
outsl
jmp
test
mov
pop
out
mov
mov
jge
ja
into
sbb
daa
punpcklbw
or
call
xchg
jbe
pop
imul
lods
mov
jl
scas
lcall
cmpsl
cmp
sub
and
sbb
dec
adc
scas
mov
cltd
sbb
call
in
sbb
xor
adc
sti
pop
mov
lea
cli
sub
dec
ret
mov
popl
iret
aas
pop
test
repz
add
test
xor
sbb
ret
add
inc
cs
pushf
xchg
aad
push
ret
inc
imul
adc
dec
jnp
fldt
add
mov
push
call
xor
scas
jle
mov
das
push
lahf
mov
sub
xchg
pop
xchg
rorb
iret
adc
push
lahf
mov
pop
call
jg
adc
lods
mov
pop
arpl
cli
sti
mov
hlt
jno
cs
sahf
inc
and
rolb
in
movsl
movlps
inc
jns
scas
sub
aaa
pop
movsb
inc
pop
into
mov
xchg
cmp
cwtl
inc
imul
stc
push
sbb
outsl
and
insl
sbb
pop
push
jae
push
cmp
es
mov
jmp
push
mov
and
sub
xor
cmpsb
cld
add
cmc
adc
mov
mov
fadds
cwtl
xchg
fmull
fnstsw
cld
mov
sbb
fnstcw
dec
sub
lea
call
cmpsl
aas
leave
fwait
mov
pushf
stos
ljmp
jecxz
xchg
add
or
cld
in
fisubrl
outsl
add
add
test
cltd
iret
cltd
lcall
add
adc
jne
rcrb
xchg
sub
dec
and
out
cli
rorb
in
and
lahf
inc
push
pushf
jl
jne
rorb
sub
fcmovnb
lods
fdivrp
imul
into
pop
push
nop
adc
adc
pop
sahf
xlat
adc
test
xor
mov
mov
orb
xor
add
orl
hlt
out
mov
pop
pop
xchg
gs
xlat
fwait
mov
mov
mov
inc
mul
bound
add
ret
mov
mov
ljmp
xchg
int3
pop
sbb
lcall
xchg
repz
hlt
scas
int
mov
sub
jecxz
aam
out
sbb
jae
inc
sub
cmp
and
mov
cltd
pushf
sbb
mov
cmp
aas
gs
cmp
jbe
jb
in
loope
or
dec
out
daa
and
dec
adc
mov
cld
xor
in
mov
mov
sbb
movl
xor
sbb
add
adc
fildl
jnp
nop
cld
inc
ljmp
fst
fcompl
jp
fldcw
outsb
ljmp
lahf
ljmp
mov
out
cmp
test
stos
mov
jb
jo
sbb
sbb
mov
cmp
mov
pop
jnp
movsb
cmpsb
push
sar
cmc
adc
sub
test
cltd
push
xor
and
out
movsb
dec
addr16
sar
arpl
push
xchg
xchg
and
orb
cmc
xor
jecxz
adc
xor
push
xor
xchg
xor
je
mov
push
je
test
dec
add
testl
inc
nop
ja
mov
stos
inc
pop
sbb
dec
jge
ljmp
and
test
dec
insl
inc
sub
lret
mov
jnp
jmp
jbe
daa
add
mov
out
dec
popf
pmaxub
mov
pop
lock
negl
loop
pop
xchg
popf
xchg
or
mov
leave
xor
loope
ds
lock
sub
push
lahf
and
cmp
xchg
rorl
jl
mov
xchg
inc
nop
pop
loop
aam
out
xlat
xor
pop
cltd
jl
xchg
mov
xchg
pop
dec
adc
mov
cmc
jo
jbe
mov
push
push
or
fxch
or
cmp
icebp
cmc
and
mov
rcrl
inc
jno
imul
fisttpl
scas
fwait
cli
outsl
das
in
arpl
xchg
imul
stc
fs
push
jg
shl
outsb
dec
cmc
fdivr
xor
bound
pop
push
jne
push
dec
add
pop
subl
loop
aam
push
orb
push
loope
mov
and
test
sbb
scas
push
sub
fistps
fadd
jbe
xchg
xor
fisttps
jnp
lea
mov
or
xchg
dec
addr16
out
scas
fs
jge
cltd
mov
mov
movsb
stos
jmp
ljmp
pop
lea
xchg
push
mov
loop
push
orb
sbb
into
add
outsb
lods
mov
adc
hlt
pop
mov
shl
mov
inc
push
xor
rolb
mov
mov
cmp
jae
call
mov
or
pop
dec
cmp
clc
int3
repz
ss
pushf
gs
dec
and
xor
inc
jb
sbb
in
xor
cmp
es
push
sub
fucomi
addr16
mov
push
test
inc
clc
mov
inc
lock
test
cmc
mov
fnsave
lds
fwait
mov
inc
subl
jns
mov
jnp
sub
pop
jae
js
push
mov
sub
stos
cmpsl
sub
inc
rolb
jb
jl
sarb
jae
push
stos
ljmp
mov
jecxz
sub
cwtl
dec
fisubrl
cltd
mov
mov
fwait
add
pop
sub
repnz
push
jnp
lods
mov
pop
into
cmp
jl
cmp
loop
sub
xchg
inc
mov
je
movsb
cmp
insb
movsl
sbb
inc
int
in
daa
or
xor
adc
fsubs
outsl
jns
mov
inc
xchg
in
xor
adc
pop
mov
xchg
xchg
mov
dec
inc
xchg
das
mov
insb
inc
jecxz
lcall
int
mov
jnp
daa
adc
adc
and
jmp
push
inc
insb
cmc
xor
pop
mov
mov
loope
pop
pop
lahf
sti
or
mov
sbb
in
mov
jns
xor
out
dec
jg
push
sbb
fnsave
sub
shlb
dec
push
and
scas
sbb
cld
lock
loop
imul
fstpt
push
and
imul
inc
pop
movsb
test
jg
mov
pop
aas
jo
idivb
fcomps
or
sahf
jp
stos
mov
outsl
mov
inc
xor
jge
int
pop
stos
les
into
das
push
out
mov
jns
mov
subb
push
fbstp
pop
pop
mov
add
bound
cmp
xchg
and
add
jmp
movsl
mov
jl
insl
fldl
das
jb
popa
cmc
call
jmp
aaa
mov
push
sbb
addb
in
ljmp
mov
or
lods
add
add
shll
repnz
rclb
std
and
sub
or
xchg
pusha
jmp
xor
aad
xor
add
cltd
iret
pop
pushf
sub
negl
add
push
adc
mov
ljmp
push
jno
pop
xor
jp,pn
das
sbb
test
popf
aas
jmp
push
jle
ret
push
dec
jb
jg
mov
jb
or
mov
jb
in
pop
jge
push
in
or
rorl
scas
add
rep
push
dec
test
sbb
push
imul
mov
inc
mov
pop
cmc
hlt
and
pop
int3
shlb
test
idivl
aad
mov
sub
ja
popf
push
fcmovu
out
outsb
mov
dec
shl
into
in
and
push
jl
sti
stos
mov
arpl
xor
lds
xchg
fcomi
mov
xchg
jnp
sub
and
xchg
pop
jns
fldl
xor
adc
or
jns
dec
sub
jl
sub
inc
pop
inc
cmp
pop
inc
scas
pushf
or
mov
lcall
adc
fistpll
add
fimuls
insb
mov
repz
mov
repz
jns
mov
test
outsb
push
pop
lret
loope
shr
fwait
out
nop
aas
pop
das
push
push
pusha
loopne
sbb
xchg
xlat
ljmp
test
ss
push
inc
mov
repnz
mov
out
cmp
xor
pusha
out
cwtl
and
imul
push
mov
mov
repnz
cld
das
flds
push
lods
xor
push
cmp
roll
rol
inc
call
add
mov
inc
push
dec
push
inc
aam
hlt
mov
jnp
inc
jg,pt
call
xor
je
jae
shl
movsb
ret
pop
or
and
push
daa
dec
sarb
subl
or
pop
mov
mov
cmpl
out
loope
cmp
fwait
mov
orb
or
inc
movb
pop
daa
push
sub
push
add
add
pop
dec
insl
in
jne
ret
dec
in
cwtl
fldt
out
insl
or
int3
xchg
pop
pop
inc
pop
sti
jnp
sub
jle
lahf
div
aas
test
mov
shr
dec
sbb
test
xchg
pop
les
mov
shrb
inc
xor
sbb
in
daa
add
into
pop
sub
mov
push
int
es
ljmp
daa
mov
test
jp
movsb
enter
add
lahf
mov
ss
ljmp
cmp
mov
add
jecxz
lock
jno
stc
aam
cmpsl
dec
xchg
xor
ret
push
js
cmpl
ficompl
jne
lahf
into
or
mov
push
pushw
insl
fimuls
mov
in
mov
jle
sarb
in
in
mov
outsl
in
jle
mov
mov
xor
cld
fistpl
sub
jns
add
inc
outsb
movsb
push
push
mov
add
out
cs
add
add
mov
pop
jo
xor
or
es
enter
out
mov
andb
dec
inc
dec
icebp
lea
xor
loopne
and
in
mov
jmp
push
push
cwtl
dec
push
push
scas
bound
int3
imul
push
mov
xchg
pop
xor
jne
push
jnp
or
int3
inc
scas
nop
mov
mov
xchg
aad
sbb
insl
ficomps
dec
mov
push
xor
outsl
sbb
sbb
pop
mov
out
out
lods
jl,pt
mov
into
pop
mov
or
lret
push
ss
mov
jl
jnp
stos
xchg
pop
js
jl
scas
dec
pop
lock
adc
push
xchg
sub
jp
sub
mov
ret
add
and
xchg
pushf
mov
fucomip
aad
xchg
and
pop
push
sub
sbb
fistl
cmp
ss
push
pop
or
and
and
bound
add
dec
cmc
xchg
fstps
cmc
add
inc
xor
cld
cmp
mov
xor
sbb
mov
int
leave
dec
and
aas
mov
pop
cmp
xchg
mov
gs
out
xchg
cmp
jmp
pusha
std
jnp
out
pop
inc
fisttpll
mov
jns
sbb
pop
dec
out
in
data16
xchg
std
xorb
jg
xchg
js,pt
test
ret
xorl
test
dec
imul
int3
jns
inc
xchg
int
fmuls
out
sub
not
sub
dec
sbb
or
loop
mov
std
fmuls
fbld
je
decb
repnz
push
pop
mov
jmp
filds
movsb
mov
push
enter
rcrb
dec
mov
ss
mov
inc
pop
jl
push
jbe
pop
rcl
pop
adc
rclb
pusha
or
movsb
mov
in
or
or
pop
leave
xchg
popf
sarl
js
lret
mov
pop
mov
adc
and
frstor
jle
mov
ds
xor
out
aad
rol
jne
mov
cmpsl
lret
cmp
fs
in
cmp
mov
aad
outsl
imul
mov
mov
test
mov
test
lds
cmp
mov
subb
and
sahf
xorb
cmp
cltd
ja
fmull
mov
mov
setp
jecxz
roll
cmpsl
pop
xchg
jmp
jns
arpl
or
lds
pop
cmp
test
mov
push
orb
jns
sbb
sbb
jnp
sbb
fistl
mov
cmc
pushw
in
xchg
out
mov
jno
and
imul
mov
dec
push
mov
xor
mov
xor
frstor
sbb
sti
cmpsl
pop
into
ljmp
movsl
adc
xchg
or
add
push
shll
rep
shll
pop
sahf
pop
or
xchg
sbb
xor
push
out
test
xchg
ss
cmpsb
sbb
sub
cmp
mov
in
js
sub
xor
nop
push
mov
xor
jo
mov
int
push
adc
scas
leave
cmc
popa
jns
sbb
jb
pop
sti
pop
adc
testl
les
lcall
mov
pop
xor
js
push
aad
cmpsl
push
mov
insl
sub
pop
mov
or
cli
lahf
push
repnz
push
fimuls
mov
xchg
cmp
jge
xchg
add
push
inc
lods
fnsave
xchg
push
mov
push
mov
out
imul
sahf
mov
lock
dec
pusha
cmp
dec
jge
jnp
jb
pop
xorl
sti
ljmp
nop
imul
shlb
leave
iret
cmp
pop
jge
mov
cmpb
xchg
aaa
enter
dec
in
dec
lock
pushw
push
and
stos
xchg
cmp
mov
aam
cmp
leave
shll
lock
into
push
add
test
rolb
sub
mov
out
lahf
xchg
or
test
stc
mov
adc
sbb
mov
popa
add
jmp
movsb
cltd
inc
add
cltd
sub
cli
lea
outsb
out
sbb
pushf
ja
mov
into
jp
jae
sub
repz
sub
in
inc
adc
pop
dec
fdivrs
repnz
nop
fdivs
js
jg
mov
lock
mov
lds
adc
or
test
push
stos
push
mov
inc
dec
in
pop
lds
mul
pop
adc
mov
popf
stos
testb
pop
std
mov
mov
push
jge
mov
push
mov
jg
adc
adc
cmpsl
insl
xlat
insl
inc
jo
fwait
out
jecxz
inc
bt
pushf
mov
divl
xchg
pop
inc
imul
add
fwait
leave
jno
mov
dec
jl
shl
dec
sub
ja
int
or
adc
popf
fdivl
jp
mov
mov
jb
mov
or
add
cwtl
fwait
mov
pushf
xchg
mov
data16
push
lods
add
divb
in
into
cld
test
sbb
in
je
movb
sub
in
push
mov
lea
adc
and
xchg
pop
sbb
push
or
mov
daa
lds
mov
arpl
addr16
xor
mov
test
or
popa
dec
push
push
and
iret
mov
es
shlb
icebp
test
jns,pt
aaa
cmp
packsswb
sub
stos
pop
ljmp
repz
mov
fsubrs
movsb
icebp
call
rorb
push
loope
shlb
jmp
add
ret
sub
cmc
jle
adc
arpl
ret
das
jae
xor
hlt
fnstcw
lret
xor
cmpsl
inc
mov
lret
dec
xchg
dec
mov
cwtl
in
std
divl
cmp
push
test
push
dec
fbstp
mov
insl
jb
inc
ja
cld
mov
mov
outsl
cwtl
sub
pop
push
or
or
stos
bound
xchg
loop
jnp
push
shl
xchg
mov
jnp
in
mov
or
mov
xor
or
jl
inc
sbb
jp
sbb
xor
lock
jne
inc
pop
push
adc
xchg
outsl
pop
inc
cmp
outsb
lock
xor
imul
cmpsb
or
in
imulb
cmp
pop
loopne
data16
ss
adc
cmp
test
insb
sahf
and
aaa
pushf
enter
lods
popf
inc
jae
sbb
iret
mov
fwait
imul
jp
call
sub
arpl
inc
mov
dec
inc
les
xchg
xor
cmp
mov
js
cmp
imul
xchg
das
or
mov
lods
pop
push
popf
nop
enter
repnz
test
icebp
bound
gs
jmp
push
arpl
ret
and
shll
das
sub
ss
enter
jo
mov
xlat
icebp
cli
ret
and
jle
add
out
push
popf
into
pop
push
push
sahf
mov
loop
push
xor
data16
out
sub
insb
cmpsl
loop
lods
aad
mov
loopne
int3
imul
jae
xor
adc
cmp
xchg
mov
and
jg
sbb
aad
repnz
add
cmp
mov
decl
into
cld
xchg
in
jp
dec
jp
mov
sbb
jnp
inc
adc
inc
in
xor
sbb
sti
cmp
cli
inc
xchg
test
sub
pop
mov
mov
in
std
inc
aad
cmp
xchg
xlat
jo
pushf
fcomps
lods
lahf
xchg
movsb
sub
out
in
and
mov
sbb
cwtl
and
mov
adc
ret
das
xchg
inc
and
lds
rolb
ljmp
outsb
stos
inc
arpl
inc
mov
xchg
scas
mov
adc
mov
insb
mov
mov
push
push
in
aaa
push
icebp
bnd
inc
xchg
test
or
inc
jae
addr16
ljmp
fistl
or
add
jns
enter
push
pop
xchg
imul
add
mov
sbb
ljmp
in
mov
sahf
sub
mov
lods
int
xor
rolb
push
imulb
jp
out
out
int3
jo
push
xchg
mov
popa
mov
push
out
mov
pop
addl
sub
adc
fcmovb
jns
mov
bnd
push
and
adc
jl
dec
ret
dec
in
in
pop
add
pop
sub
or
cmpsl
fiaddl
fildl
int
lret
cmpsl
lods
ljmp
jp
inc
sbb
sub
repnz
pop
int3
pop
mov
mov
jge
popa
xchg
mov
icebp
dec
sub
push
adc
xchg
or
cmp
mov
add
push
into
add
and
int3
test
out
bound
adc
movsl
fs
pop
popa
inc
out
test
or
push
and
xlat
outsl
push
inc
je
cld
pop
fildll
push
or
nop
mov
xlat
mov
vunpckhps
mov
repz
cmp
nop
adc
jo
fsub
or
pusha
add
bound
dec
push
scas
cmc
xchg
ljmp
clc
sahf
xlat
aas
sub
fs
aaa
push
mov
daa
adc
les
sub
aad
mov
cmp
incl
jl
loopne
xchg
xorl
into
loopne
sti
cmpsl
mov
sbb
nop
cmp
inc
cmp
in
fwait
mov
xchg
call
jno
jg
jno
dec
dec
sbb
jnp
jl
cmp
mov
mov
fadd
adc
jle
nop
out
xchg
scas
repz
pop
aaa
xor
arpl
ficoml
mov
mov
cmp
cmp
shlb
ret
addr16
jo
movsl
adc
ret
dec
mov
jbe
je
mov
aad
add
enter
push
fildll
into
and
addr16
jge
add
cmp
mov
stos
jl
jge
js
out
or
addb
adc
xchg
xor
xor
out
xchg
cltd
jl
outsb
jle
loopne
repz
xchg
dec
dec
mov
fsubl
lds
dec
xor
or
insb
push
cmpsb
push
lock
inc
cmpsl
push
je
popa
sbb
xchg
cmp
ret
daa
mov
xchg
xchg
dec
sub
mov
cmpsb
or
inc
inc
dec
and
jmp
dec
mov
inc
adc
xchg
repnz
jno
sti
lret
jp
push
dec
mov
call
mov
aaa
leave
divl
inc
insl
sbbl
icebp
pop
stos
clc
add
or
movsl
fisubl
adc
dec
addl
push
lret
pop
add
shrl
lahf
push
data16
out
sbb
in
cmpsb
and
cmp
cmc
inc
insb
fsubp
cli
or
push
dec
lods
mov
outsl
xchg
push
jp
jmp
cli
push
int3
xor
jnp
mov
add
sbb
and
inc
fidivrs
xchg
fwait
popa
fildl
jb
push
adc
pushf
xchg
movsl
roll
bound
and
lcall
and
call
mov
sbb
test
testb
jg
mov
and
fildll
sbb
ljmp
add
cmp
jge
ret
movsb
subb
sbb
ret
aas
push
hlt
xchg
test
adc
mov
jns
out
mov
pop
or
push
in
cmp
stc
push
mov
add
xor
arpl
push
sub
clc
stos
add
fbstp
mov
push
roll
and
push
pushf
cmpsl
sub
jecxz
cmpxchg
test
or
call
cmpsb
enter
add
dec
pop
out
cmpsl
orb
mov
dec
roll
mov
or
ficoml
imul
jns
adcb
std
jmp
add
movsb
imul
adc
push
push
popa
mov
pop
jno
sbb
sbb
mov
sbb
mov
jne
loop
sbb
lcall
jo
pop
or
test
xchg
lcall
fstps
pop
xchg
push
cmp
push
sbb
ds
mov
lcall
mov
mov
pop
xchg
test
pop
pop
dec
jae
jp
mov
adc
call
in
xor
inc
jge
sahf
les
insb
lea
jbe
and
add
or
fmull
sub
inc
xchg
sub
iret
mov
lea
mov
cmp
add
test
lods
adc
stos
mov
cmp
jnp
mov
inc
stos
daa
mov
mov
lock
nop
outsb
imulb
cmp
cmpsl
or
push
sub
inc
jne
or
dec
sbb
aas
and
addr16
fcomip
cmp
punpckldq
shrl
lods
sub
jl
popa
jl
int3
popa
cmp
ljmp
mov
fisttps
push
jbe
pop
loopne
xlat
sbb
test
jl
js
sbb
cmp
adc
out
xchg
mov
adc
addr16
push
xor
rcll
pusha
mov
cwtl
add
pop
adc
fcmovbe
mov
mov
add
int
jnp
rcrl
dec
sbb
mov
xor
xchg
insl
xchg
filds
and
mov
xchg
fstpl
insb
stos
or
in
in
pop
aas
test
mov
pop
mov
mov
xor
and
jge
divb
lahf
lcall
mov
inc
loope
adc
fimull
nop
xor
adc
fwait
xchg
ljmp
pop
roll
cmp
out
dec
adc
scas
aad
int
push
loope
rcrl
in
jmp
ret
dec
loop
icebp
sub
ds
les
pusha
dec
mov
mov
nop
out
std
cli
adc
clc
pusha
sub
xor
js
sahf
cmc
insl
in
movsl
mov
decb
jno
jl
mov
jns
cmpsb
std
push
int
or
xor
arpl
jmp
sub
xchg
pop
xchg
mov
push
cmp
cmpsl
int
sahf
repnz
loope
add
sub
mov
pop
cmp
out
push
hlt
sub
mov
loope
jp
cmpsb
cmpl
push
add
lock
aas
inc
fistpl
push
cld
ja
and
inc
cmp
mov
pusha
pop
push
rcrl
nop
es
jle
jnp
add
dec
repnz
call
jns
pop
sbb
push
rolb
inc
dec
lods
rol
int3
mov
jp
ja
or
or
popa
sbb
mov
das
imul
test
das
mov
pop
xor
loope
in
in
xor
incl
and
aaa
clc
jne
sahf
and
and
test
jp
or
pop
out
xor
dec
cmpb
lret
jo
imul
scas
mov
dec
mov
mov
dec
cmp
lret
movsl
test
inc
add
movsb
fdivl
lock
adc
in
mov
jno
fisubl
sub
cltd
sbb
or
lock
mov
pop
dec
xor
and
inc
mov
inc
xlat
outsl
ret
ret
mov
adc
push
aad
subl
imul
pop
jno
repz
test
imul
imul
dec
repnz
adc
std
scas
cmp
inc
das
mov
test
jle
sti
sub
push
lahf
mov
stos
sbb
add
rol
mov
gs
fmull
push
mov
xchg
or
sbb
cmc
sbb
and
ret
xor
pop
xor
jl
push
jnp
mov
xlat
dec
jno
dec
xchg
in
push
es
cmp
pushl
push
test
xor
sbb
lods
xlat
or
aam
dec
stos
jg
adc
out
xor
in
sub
jns
pop
push
push
dec
test
mov
mov
adc
mov
fisttpl
fistpll
call
and
or
pusha
or
inc
xchg
sub
jle
or
and
mov
movsb
fists
mov
cwtl
push
dec
cmpsb
xor
movups
fists
xchg
fimull
mov
and
std
lahf
addr16
insb
rol
mov
enter
rorb
fimuls
fists
pop
cwtl
xchg
mov
jb
aam
daa
je,pt
ja
fildll
dec
pusha
lods
inc
iret
sub
aas
mov
sbb
push
js
mov
lahf
dec
leave
push
daa
lds
mov
out
test
cmp
and
out
sub
in
jle
cmpsb
adc
jg
cmp
push
cmp
imul
mov
cwtl
inc
lret
popf
aas
mov
or
mov
mov
mov
dec
repz
loopne
lock
popa
add
or
repnz
fs
shll
mov
pop
inc
rcrl
mov
xor
mov
ja
and
arpl
xchg
push
repz
sub
mov
ss
lea
ja
push
popa
mov
jmp
inc
loope
lahf
inc
inc
mov
je
or
es
mov
out
mov
pop
adcb
xor
lock
adc
jns
xlat
add
sbb
test
adc
mov
nop
cli
mov
adc
xor
aas
icebp
scas
jbe
dec
and
jp
mov
cmc
ss
lock
push
fidivl
push
aas
inc
sub
xchg
lods
jbe
aad
icebp
pop
shll
jge
pop
adc
mov
sub
push
push
jo
xor
icebp
movl
sub
dec
rorb
lret
in
xchg
out
arpl
cs
sbbl
or
adc
cmp
insl
xchg
push
pop
scas
imul
xor
mov
icebp
das
cmp
push
addr16
jecxz
insb
pop
inc
rorb
cmp
cwtl
xor
mov
push
sbb
mov
jg
cmp
test
dec
push
or
lods
rep
outsb
ret
mov
add
scas
jmp
pop
clc
xor
out
pop
cmp
test
jns
cltd
or
xchg
and
sarb
outsl
les
popa
aaa
jp
cmp
scas
sar
xchg
leave
stc
mov
lahf
jne
cmc
daa
je
push
popf
lods
sub
fstpt
cld
lea
loopne
mov
idivb
lret
pop
cmpsl
int
jno
repnz
xorl
pop
sbb
repnz
ret
addr16
jnp
in
in
mov
fistps
dec
add
mov
lcall
cmp
leave
mov
pop
cmc
and
pusha
icebp
fisttps
repnz
aam
je
add
sub
rorb
sub
push
out
movsl
push
or
fcoms
jb
inc
sbb
push
nop
loopne
cld
ret
neg
les
adc
jae
xor
or
loopne
mov
mov
js
push
fisttpll
mov
cmp
push
add
mov
insl
add
jae
ds
sbb
hlt
add
xchg
mov
cmpsb
test
fstpt
stc
pusha
xlat
enter
xchg
out
icebp
push
popf
fdivp
mov
pusha
iret
mov
push
sub
sbb
pop
mov
sub
xchg
sbb
out
outsb
mov
shll
das
or
ds
push
jno
add
mov
mov
jno
imul
test
mov
icebp
cmp
sbb
test
dec
ret
sub
jmp
popf
addl
es
pop
jp
test
jl
mov
adc
lds
adc
movsl
adc
or
xchg
test
cs
or
outsl
mov
xchg
mov
stos
into
out
cmp
mov
sub
jp
divl
xchg
mov
sbb
lods
jnp
jl
sbb
sub
jae
int3
daa
or
bound
adc
adc
mov
mov
pop
pop
dec
jns
mov
sub
push
sub
hlt
popa
push
fisubl
jnp
and
pop
imul
imul
outsb
sti
mov
test
je
enter
sahf
sahf
sbb
push
popf
int
mov
aam
push
mov
add
test
movsl
fdivl
mov
sbb
jnp
mov
push
aas
rolb
inc
add
dec
inc
shl
ficomps
sub
xor
ret
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
jle
leave
frndint
inc
jl
inc
pop
addl
jl
sahf
clc
inc
jno
inc
jnp
pusha
je
add
jle
popa
in
flds
mov
cltd
fstps
out
pop
cmpsb
xchg
mov
cmpsl
into
jns
mov
mov
pop
or
cs
pop
xchg
outsl
xchg
cmp
mov
loop
pushf
sarl
sti
sub
jcxz
aaa
sarb
aad
push
jnp
dec
xorb
movsl
dec
cmc
int
mov
ja
mov
fimull
out
out
mov
lods
mov
pop
shll
jmp
fisttpl
mov
and
std
cmp
mov
imul
inc
jbe
add
xor
bound
fwait
dec
dec
mov
pop
js
lret
fwait
repnz
popa
ljmp
lret
xchg
lock
sub
mov
cmp
cmp
faddl
push
loop
shll
sti
fists
outsl
arpl
in
loope
cmc
add
ret
dec
andl
add
pop
pop
push
cltd
inc
sbb
mov
jle
dec
cld
mov
sub
cltd
pop
inc
jge
ret
cli
inc
in
jl
jle
leave
mov
xchg
sub
cmp
cmp
pop
inc
js
mov
pop
xchg
mov
pop
xchg
test
cmpsb
mov
lock
jns
test
or
in
and
in
mov
mov
pop
in
adc
mov
in
and
adc
xlat
cmpsl
cmp
mov
popf
and
je
and
sbb
sub
dec
jle
push
jp
fwait
js
sub
sub
daa
dec
aad
in
jg,pt
fisubrl
jns
test
push
mov
xor
sti
sub
adc
sbb
xchg
loope
out
bound
sbb
xor
add
adc
mov
push
mov
movsl
jo
pop
out
outsb
pusha
jnp
jae
es
fwait
or
scas
adc
dec
adc
mov
ljmp
pop
inc
mov
or
sbb
stc
test
adc
jle
stos
jle
scas
push
sbb
mov
adc
bound
push
or
or
addl
or
sbb
fidivl
lret
cmpl
inc
testl
sbbb
out
daa
insb
outsl
jne
out
sub
cs
dec
int3
pop
push
cmp
push
adc
iret
sub
imulb
jns
jnp
pop
int
pop
or
jne
inc
aam
mov
cmp
pop
fcmovne
inc
inc
gs
imul
and
push
insl
pop
pop
add
cmp
mov
ja
ficompl
int
adc
shll
movsl
xchg
loop
test
xor
add
outsb
hlt
and
mov
outsb
stc
call
jne
push
push
and
cmpsl
xlat
iret
mov
dec
ret
dec
lcall
ja
int3
xor
ss
xor
xchg
jmp
push
dec
jns
ret
lret
jp
or
pop
xchg
pop
aaa
int
add
ja
insb
cmpsb
imul
add
pushl
out
inc
xchg
cmp
mov
movsl
dec
test
pop
push
loop
repz
jp
pop
mov
data16
sub
sub
sahf
rcrb
ret
scas
scas
cmp
jne
add
jns
and
pop
mov
stc
jbe
cld
xchg
mov
lds
fmull
push
in
dec
ret
movsw
pop
jnp
in
xchg
movl
dec
fldenv
push
mov
lret
sbb
mov
fmull
cmp
mov
jns
xlat
jle
fildl
dec
mov
shrl
fstpl
ds
xor
sbb
fucom
xor
jb
outsl
sbb
loopne
mov
dec
divb
add
cmp
dec
jecxz
adc
stos
jp
loop
aam
or
pop
das
xor
test
sub
xchg
push
inc
nop
ret
jg
lcall
xor
in
aas
loopne
mov
pop
sahf
mov
add
or
shrb
outsb
push
scas
or
or
pop
shlb
adc
mov
pushf
mov
das
xor
adc
test
inc
and
or
xchg
mov
movsl
push
leave
adc
stc
pop
ljmp
add
push
movsl
test
push
orl
jmp
mov
idivl
jg
xlat
push
bound
test
xchg
and
pop
aam
pop
icebp
mov
xchg
jl
fstps
cld
and
imul
dec
mov
les
inc
mov
pop
aad
push
test
adcb
mov
jmp
add
int3
iret
lahf
mov
sub
testl
daa
insb
imul
mov
fwait
outsb
pop
inc
cmc
movsl
or
adc
sub
mov
mov
jne
nop
xchg
movsl
inc
out
outsb
popa
mov
inc
js
dec
add
loop
cmp
lea
and
pop
insl
pop
adc
ljmp
xor
imul
lods
inc
cmc
or
sbb
cmp
enter
in
push
out
ds
loopne
mov
or
xor
inc
imul
add
lods
push
stos
fs
in
es
pushf
push
popl
inc
je
lock
stc
jbe
pop
mov
mov
popa
dec
stos
test
add
and
fs
mov
scas
mov
jg
addb
jae
xchg
sbb
inc
add
cltd
ljmp
adc
int3
sbb
fdivl
inc
es
out
call
push
or
and
jmp
loop
cmp
jmp
enter
in
jp
sub
clc
mov
jno
das
cmp
fwait
adcl
mov
push
flds
and
xchg
mov
cmpsb
in
out
in
jecxz
mov
push
fdivrs
xchg
jnp
sub
and
mov
sbb
out
and
enter
pop
mov
test
xor
rcr
cld
push
aad
inc
cmpsl
mov
test
xor
adc
shlb
adc
xchg
js
push
jne
sub
mov
faddl
lcall
mov
mov
fs
scas
pop
mov
push
fbld
sbb
dec
outsb
cmp
out
lret
icebp
pop
divl
inc
loopne
mov
mov
in
std
imul
mov
add
in
mov
ret
mov
inc
je
mov
xchg
push
dec
mov
ljmp
in
push
stos
xchg
repz
mov
hlt
shrl
cwtl
inc
pop
iret
mov
add
int
xchg
es
inc
cmpsl
ja
repz
dec
or
ja
xchg
insl
daa
je
push
xor
movsb
lods
lods
mov
cmp
mov
cld
push
inc
sbb
add
mov
mov
sahf
push
scas
mov
pop
xlat
mov
icebp
or
cld
cmp
jb
jns
stos
std
xor
aam
adc
sub
int
xchg
pop
scas
jno
or
pop
xlat
jno
adc
mov
jle
jbe
cltd
in
mov
add
rolb
movsb
mov
les
out
mov
fnsave
loope
adc
stos
cmp
roll
pop
cli
in
lods
push
imul
jl
in
push
idivb
sar
jne
repz
in
mov
scas
das
icebp
popa
mov
jb
xor
adc
xorb
cmpsb
js
stos
pop
dec
clc
push
cwtl
mov
xchg
push
pop
fs
mov
jo
jecxz
push
loopne
inc
in
fcompl
lea
in
sbb
xchg
loopne
push
jne
dec
aas
stos
add
mov
jns
shl
scas
sub
sbb
sbb
pushl
scas
push
add
out
and
addr16
pop
fbld
cmpsl
stos
or
jns
mov
dec
jns
repz
dec
mov
loopne
mov
and
mov
or
push
xorb
push
cwtl
lds
popl
cmp
jo
shl
inc
aaa
sbb
push
imul
push
test
int3
push
hlt
mov
leave
xchg
sbb
sbb
mov
push
cmp
mov
nop
adc
inc
or
out
rorl
push
pop
mov
enter
inc
pop
movups
mov
push
stos
xor
cmpb
int3
data16
sub
mov
mov
insl
adc
movsl
cmpsl
pop
and
int3
jge
negb
pop
cwtl
pop
pop
pusha
enter
hlt
mov
outsb
xchg
test
pop
xchg
sbb
in
icebp
xchg
pop
adc
lods
dec
data16
dec
cmpsb
xor
in
cmpsb
cmp
dec
jne
and
jb
xchg
hlt
cmp
push
adc
fstl
pushf
push
movsl
leave
jae
inc
inc
xor
sti
push
fsubs
pop
fidivrs
lret
mov
aam
outsb
dec
lea
outsl
fidivrs
sbb
inc
add
test
inc
popf
sub
mov
popa
cmp
stos
xchg
and
je
negl
mov
and
in
cmp
test
aas
fcomip
pop
xlat
es
adc
xor
aaa
xor
add
sahf
std
cmp
xor
sub
lahf
stc
iret
sarb
or
xchg
inc
cmp
mov
cmp
and
push
lea
or
jmp
inc
inc
repnz
pop
xchg
jecxz
xchg
stos
lods
jle
mov
inc
inc
mov
and
std
scas
repz
in
dec
inc
inc
push
mov
andb
je
push
cmp
daa
pop
outsb
cs
sub
and
pop
aad
sub
in
xorb
pop
ret
inc
pushf
cld
fxch
lret
cwtl
mov
pop
or
sub
std
jg
and
nop
jmp
xchg
mov
fndisi(8087
xchg
pushf
adc
xor
imul
jmp
sbb
cmpsl
insl
rorl
pop
sub
sarb
test
mov
lds
es
pop
inc
jge
sahf
je
and
mov
mov
ret
movsb
push
stos
loopne
xor
sub
cld
adc
iret
popf
nop
addr16
or
fwait
jnp
adc
gs
xchg
add
dec
je
hlt
add
clc
xchg
outsl
leave
cmp
push
int
pop
push
push
out
ret
mov
or
mov
enter
xchg
aad
dec
and
jge
scas
rolb
dec
mov
hlt
mov
filds
push
popf
add
or
add
idivb
add
dec
mov
fcompl
test
jmp
inc
call
pop
and
cmp
push
std
scas
dec
adc
mov
pop
push
mov
ficoms
mov
mov
aam
push
dec
mov
int3
cmp
pop
frstor
out
in
jb
xchg
das
xchg
xchg
pop
hlt
dec
inc
mov
sahf
sbb
dec
or
clc
incb
jne
pop
mov
push
pop
inc
aam
fists
stos
lods
ljmp
ds
jae
jae
wbinvd
stos
divl
push
add
cmp
lahf
adc
xchg
mov
or
pushf
mov
ljmp
cmp
push
pop
lret
jle
shrl
mov
or
or
mov
aaa
jbe
cmp
xchg
adc
cmp
add
sub
jb
daa
jnp
mov
addr16
xor
sub
test
jle
into
adcl
sbb
mov
rolb
add
test
sub
mov
insb
or
stc
push
dec
mov
cmpsb
xchg
fisttps
push
popa
fnstenv
sub
add
pusha
or
pop
test
test
cwtl
imul
pop
cld
xchg
xor
cmc
jmp
jns
push
push
inc
lea
mov
fldcw
lcall
sub
adcl
subb
add
ret
cmp
push
ret
add
int
shr
dec
jp,pt
shll
dec
in
stc
jnp
lret
data16
dec
or
das
in
adc
bound
addb
add
scas
push
iret
dec
cmp
pop
shl
xor
aaa
aad
int
sub
pusha
and
sub
scas
xchg
fcompl
in
rolb
nop
jo
and
imul
xchg
or
daa
pop
cmc
lcall
scas
mov
adcb
lds
push
mov
sbb
mov
or
lods
jbe
gs
test
js
pop
jmp
in
dec
imul
sub
ss
push
int
adc
inc
add
sub
jne
add
jnp
add
jae
data16
mov
mov
pop
sbb
fst
enter
jnp
xorb
ds
cmp
js
je
pusha
and
xchg
inc
js
stos
stc
sbb
mov
repz
inc
dec
jo
movsb
adc
es
push
adc
fwait
pop
ja
pop
xchg
xchg
les
or
or
and
insb
scas
jle
jmp
cli
jmp
mov
sub
jp
push
pop
push
xchg
dec
sbb
mov
mov
adc
push
gs
ret
std
jmp
les
aam
out
dec
enter
cmp
fs
fdivs
push
cmp
call
imul
clc
sub
mov
ret
fnstcw
loopne
push
stos
push
outsb
pop
mov
xchg
out
or
cmp
xchg
xchg
mov
inc
mov
in
psubb
rcr
dec
cld
xchg
outsb
insb
xor
in
and
jns
push
jmp
pop
inc
call
mov
mov
out
jnp
incl
jl
mov
icebp
stos
test
jnp
int
xchg
add
cltd
lock
pop
in
mov
and
in
and
fnstsw
or
rclb
fdivl
mov
pop
js
mov
sub
adc
mov
adc
mov
adc
sahf
dec
adc
pop
fisubl
mov
popa
les
stos
lret
fidivs
and
xchg
mov
adc
mov
or
in
sub
je
or
in
adc
ss
xchg
sahf
shl
sub
shrd
or
cli
and
inc
xor
sub
out
imul
sbb
or
push
hlt
mov
adc
mov
sbb
cmp
rorb
push
push
inc
outsl
stc
into
cmp
push
or
and
shlb
jle
scas
das
xchg
dec
fstpl
sbb
lods
nop
cmc
xchg
pop
sbb
int3
inc
sbb
xchg
imul
or
pop
adc
mov
pop
jmp
push
leave
repnz
sti
cwtl
sahf
in
adc
popa
imul
inc
icebp
icebp
les
fiadds
cltd
mov
adc
push
cmpsb
push
or
or
lods
jl
cmpl
cwtl
lret
filds
sub
lock
mov
sub
aas
loop
ret
out
sbb
pop
dec
adc
xlat
mov
pop
mov
xchg
fwait
sbb
cwtl
fwait
xor
sbb
stos
ret
das
das
xchg
pop
cmc
and
insb
lds
movsl
cmp
inc
test
mov
subb
insb
mov
cltd
dec
push
jo
mov
adc
iret
jl
scas
cmp
xchg
push
jbe
xchg
andl
lock
dec
push
ljmp
jno
xlat
sbb
or
addl
cmp
or
cmpsl
mov
or
int
lock
lret
xor
fadds
ficoms
jle
push
sti
ds
sbb
outsl
cmpsb
lods
rorl
aaa
mov
pop
jnp
call
fstps
loope
inc
inc
test
dec
or
dec
cmovge
push
jle
mov
mov
pop
jmp
jns
push
cmp
repnz
cmp
adc
leave
inc
enter
pop
sbb
loop
mov
iret
into
popf
data16
jmp
cltd
lods
mov
jbe
cmpb
out
aam
dec
push
cmp
mov
mov
push
adc
jne
dec
mov
xor
adc
pop
addl
xchg
pop
cmp
add
xchg
mov
pop
in
sbb
dec
pop
scas
into
cwtl
mov
inc
lods
cltd
repz
rcrb
sbb
or
cwtl
shlb
aad
sarl
and
dec
sti
push
mov
mov
outsl
lret
loopne
aaa
sahf
stos
dec
xchg
movsl
jle
in
movsl
cmp
test
int3
or
mov
in
pop
push
add
mov
cwtl
add
adc
in
xchg
test
mov
ficoml
xor
outsb
test
adc
in
jle
pop
inc
mov
dec
jnp
ficomps
mov
hlt
in
jae
mov
std
out
inc
mov
outsl
jecxz
mov
outsb
add
mov
dec
in
and
sarb
mov
movsl
pop
lcall
mov
imul
push
scas
in
decb
adc
push
add
xchg
pop
or
fildl
adc
add
in
adc
xlat
pop
gs
loope
jmp
fs
add
ficomps
mov
xlat
int3
dec
mov
mov
pop
incl
in
fwait
cmc
popa
js
xchg
lahf
jge
outsb
dec
jne
rcl
shr
repz
mov
mov
mov
pop
fisubrs
pause
push
xlat
data16
mov
into
mov
xor
in
inc
pop
sub
aaa
out
cmp
pop
jae
or
cmp
in
jp
rcrl
pop
mov
mov
jno
aas
cld
xchg
int3
dec
pop
mov
cmpsl
iret
outsl
pop
lcall
sbb
pop
sub
add
sbb
icebp
push
mov
cmpsb
xlat
xchg
cmpsb
xchg
and
push
jno
jle
xchg
mov
xchg
sbb
cmpb
xor
jne
add
mov
push
cs
cmp
adc
sarl
cmp
inc
aas
enter
vhaddps
mov
es
clc
rol
cwtl
jge
mov
pop
mull
mov
cmp
mov
xchg
sahf
adc
js
jns
popa
add
stc
xchg
fnstsw
xchg
mov
inc
and
mov
out
xor
cmpb
inc
loop
or
rol
inc
xor
pop
or
xor
jb
aaa
je
scas
lock
cmp
in
out
fcoml
cwtl
hlt
push
and
lods
fs
xchg
mov
subb
or
jge
pop
gs
int3
pop
mov
pop
repnz
adc
inc
jecxz
int3
or
imulb
call
sbb
sub
jle
push
pop
in
loopne
enter
lret
mov
pop
sub
cmp
inc
int
daa
mov
popf
das
sahf
scas
inc
daa
movsb
lea
mov
jl
jmp
cmp
jl
icebp
decb
adc
mov
jno
adc
repnz
adc
lds
pop
jbe
ret
mov
mov
imul
adc
cmp
push
add
aas
fwait
insl
mov
enter
push
fldenv
fadds
pop
iret
dec
adc
xlat
test
fistl
jae
pop
test
jnp
jmp
inc
int3
cmpsl
testl
adc
sub
push
sbb
jle
inc
call
jnp
enter
hlt
jns
iret
lahf
lret
rcl
fcoml
pop
inc
iret
and
cld
inc
jg
pusha
shrb
adc
cmp
out
test
dec
pop
cmp
cmp
ret
lds
loopne
mov
popf
sub
movsl
cltd
outsb
sub
push
sub
and
and
xlat
orb
adc
fdivl
addr16
fcmovu
stc
lods
loopne
mov
xor
insl
sahf
dec
int3
iret
jb
adc
pop
adc
dec
enter
aas
sub
jns
and
in
in
hlt
frstpm(287
pop
dec
bound
sbb
fsubp
inc
and
in
es
lret
andl
add
cmp
cmc
ss
jno
gs
hlt
xor
dec
push
xchg
jmp
in
cmovae
das
mov
push
jnp
mov
div
mov
insl
jp
push
mov
icebp
mov
repnz
inc
inc
sub
push
cmp
js
insl
push
dec
jne
mov
stos
cmc
mov
adc
ds
pop
sub
enter
adc
mov
push
xor
inc
xor
out
into
inc
dec
movsl
icebp
mov
xor
dec
xor
sarl
jbe
lock
push
xor
ret
cmp
jnp
sub
xor
cmpb
jmp
scas
subb
sub
pop
enter
sub
sbb
pop
xor
mov
sbbb
das
clc
mov
lcall
fwait
ja
mov
jmp
data16
rorb
add
mov
loope
and
or
ja
pop
imul
nop
lcall
dec
iret
jle
dec
add
mov
sbb
cld
cmpb
hlt
xchg
cwtl
sahf
mov
push
fwait
pop
aaa
dec
sub
fbstp
mov
test
jp
dec
outsb
or
pushl
push
lods
loop
stc
jle
cs
and
push
add
mov
lods
pop
or
mov
add
push
pop
dec
fidivrs
std
adc
jmp
pop
inc
daa
sets
je
ss
jno
movsl
cmpsl
adc
cmc
push
shlb
xchg
or
sbb
out
hlt
fisubrs
fiaddl
mov
mov
movsb
sahf
add
xchg
ds
cwtl
push
and
xor
outsb
sub
xor
in
inc
insb
mov
into
enter
push
or
js
popl
xchg
jnp
scas
mov
insb
mov
push
lods
xchg
enter
test
test
imul
push
sub
push
loopne
dec
push
and
loope
adcb
mov
in
add
cmp
xor
cmpb
stos
data16
jle
testl
adc
mov
pop
test
jns
das
pop
jmp
jb
adc
fdivs
pushf
mov
dec
rclb
into
mov
mov
dec
xor
mov
loopne
xor
lds
imul
out
mov
lods
repnz
add
std
in
adc
xor
mov
sub
sub
jg
pop
ret
and
xlat
ss
and
xchg
mov
dec
lods
push
gs
pusha
lock
nop
jge
sahf
in
add
scas
int
fiaddl
jmp
sarb
lar
testl
cmp
ds
shlb
stos
sbb
xchg
inc
mov
jb
ss
out
testl
cli
cmp
mov
lea
and
mov
daa
je
cltd
sbb
mov
mov
mov
mov
xor
xchg
loopne
scas
repz
mov
stc
xchg
shrb
out
or
jne
test
mov
xchg
sub
inc
shrl
popf
sub
movsl
jmp
push
pop
push
test
xchg
mov
xlat
adc
xchg
pop
sub
sub
fwait
sbb
mov
pop
cltd
jp
adcb
scas
je
mov
cltd
loope
cwtl
inc
js
cs
xchg
inc
inc
cs
imul
fcompl
mov
mov
enter
jl
xor
adc
pop
inc
jbe
test
pop
add
mov
and
in
inc
and
test
popf
sub
and
cmpsb
sub
std
fmul
pop
jno
rcrb
out
icebp
aaa
pop
xor
or
ja
test
in
push
sub
mov
jno
sti
jg
xchg
push
cmp
testb
stos
mov
jno
push
fmull
roll
scas
or
pushf
movsl
std
xor
push
fldenv
mov
and
jbe
cmpl
jg
cmp
xor
pop
xor
insb
xlat
loop
insl
push
lahf
sub
pop
mov
icebp
sub
xchg
out
pop
insb
or
and
scas
sti
xor
testb
jbe
outsl
mov
sub
hlt
add
mov
lret
jb
mov
push
dec
mov
mov
sub
adc
mov
push
dec
clc
loope
loope
test
mov
mov
or
add
imul
lods
sub
stos
push
push
in
cld
addr16
call
mov
pop
int3
mov
mov
or
mov
mov
cmp
rolb
nop
ret
icebp
cs
mov
dec
fstpt
fbld
orb
sub
mov
push
ja
or
adc
cmp
nop
and
xor
iret
sub
add
add
call
xchg
add
mov
pop
inc
mov
pusha
inc
fwait
push
shlb
inc
popa
dec
jg
scas
dec
outsb
jg
ret
fcoml
mov
insb
jae
imul
sub
sbb
jecxz
es
add
jae
push
into
rcl
test
jae
or
insb
inc
mov
mov
leave
xchg
aaa
push
jae
cmpsb
stc
mov
pop
rcrb
aad
hlt
lret
inc
shrl
loop
jno
jno
lahf
sub
in
std
sub
pop
add
in
fnstcw
rclb
out
add
xor
pusha
cmp
fisubs
push
inc
sar
scas
push
pop
jl
adc
fsub
fbld
data16
das
jmp
cmp
xchg
inc
fldt
out
jo
mov
movsb
and
mov
in
xchg
outsl
and
and
sub
je
es
cs
mov
mov
orl
push
fiaddl
imul
push
mov
push
adcb
xor
jecxz
add
pop
xlat
cli
cld
sbb
repz
dec
cwtl
rcll
cs
cmpsl
sar
xchg
add
jbe
movsb
movsb
inc
xor
flds
cmpb
aas
pop
mov
lmsw
mov
cwtl
mov
xor
sub
insb
sbb
inc
pop
dec
sub
pop
testb
clc
inc
push
dec
xchg
cmpsl
pop
mov
out
or
sbb
push
or
cs
test
pop
mov
data16
js
cs
stos
inc
lods
int3
dec
das
popa
leave
in
pop
xchg
mov
cmpsb
ljmp
adc
enter
push
enter
adc
mov
xchg
sahf
ss
ror
retw
call
ror
xlat
mov
sbb
js
sbb
hlt
std
int3
out
adc
call
sahf
bound
pop
mov
shlb
ret
cmp
mov
jp
test
cmp
hlt
std
xchg
cmpsb
es
fwait
bound
fstl
cli
sub
test
push
subb
mov
test
mov
or
dec
lock
in
aaa
repz
iret
andb
xchg
or
lods
nop
add
cmp
int3
aam
hlt
iret
add
cmp
add
repz
or
or
lods
mov
adc
inc
xor
outsb
cld
test
mov
dec
dec
push
xchg
xor
inc
mov
std
movl
and
loop
clc
sub
iret
push
test
popa
mov
insb
lods
inc
dec
testl
cltd
imul
inc
adc
imul
nop
mov
and
insl
loop
jae
pop
int3
jb,pt
mov
mov
push
sbb
jnp
sti
dec
push
insl
fisttpl
arpl
int
mov
data16
dec
test
clc
xchg
cltd
lret
dec
incl
pop
mov
adc
add
out
in
sub
in
in
movsl
cli
sbb
pop
push
loopne
out
shlb
test
cld
repnz
rol
pop
arpl
sbb
jne
jg
inc
icebp
loopne
imul
add
adc
sub
das
sbb
cmp
icebp
icebp
and
hlt
mov
pusha
arpl
loope
sbb
push
sbb
mov
rcl
xchg
into
in
rorl
mov
sbb
push
push
or
push
popa
in
das
gs
js
stos
add
xchg
leave
add
shr
cmp
pop
lcall
inc
sqrtps
sarb
jmp
xchg
pop
add
sahf
pop
test
imul
repnz
dec
sub
shlb
sbb
popa
iret
shrb
jnp
mov
fisubl
ret
outsl
push
xchg
notb
test
jle
dec
mov
iret
fdivl
sbb
push
mov
push
cltd
push
mov
ficoms
out
adc
inc
sbb
mov
lds
inc
enter
gs
ret
call
mov
addr16
les
cmpsb
dec
inc
int
inc
xor
jg
sub
jo
in
out
xchg
push
fimuls
mov
rcrb
pop
sbbb
sub
jmp
pop
imul
dec
mov
sbbl
xchg
jp
aas
or
lret
mov
mov
mov
outsl
xor
push
jmp
push
out
jecxz
xchg
mov
fstl
hlt
les
insl
ds
call
xor
out
pushf
rcr
push
xlat
aad
xchg
enter
sbb
jne
jae
sub
shll
test
loopne,pn
mov
mov
adc
inc
adc
xchg
push
pop
xor
out
mov
lds
cld
das
xchg
cwtl
jns
dec
ficomps
insb
fwait
rep
jp
jle
out
mov
jle
push
jae
lahf
testb
es
jg
dec
repnz
mov
repz
and
and
stos
lds
in
jo
fwait
aas
aaa
fs
mov
mov
mov
call
test
sbb
add
in
add
fwait
xor
adc
mov
imul
dec
mov
fimull
xor
cmovl
cmp
loope
xchg
imul
mov
adc
fcompl
insl
xor
test
js
imul
dec
push
sbb
scas
lds
push
add
adc
nop
adc
pop
dec
lea
inc
xor
sahf
clc
ret
ss
es
mov
or
cmpsb
imul
add
bound
mov
sti
sbb
rcrb
hlt
lods
pop
js
outsb
loopne
cs
mov
jl
repnz
sub
adc
cmp
fwait
cmpb
adc
fdivrs
or
and
push
add
ss
daa
sub
adc
mov
pop
aam
sub
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
cmp
sbb
addl
sbbl
fsubs
jno
dec
sbb
loop
jo
fmulp
inc
testl
lret
and
xchg
push
push
insl
jb
cmp
shll
cmp
fcmovbe
imul
pop
and
xchg
sub
jge
iretw
cmp
mov
adc
mov
mov
stos
push
in
shll
dec
or
test
mov
jne
push
enter
jns
sub
cmp
adc
ja
mov
fcomp
cmc
in
push
xor
out
stos
cmp
mov
and
pop
jl
test
jne
push
lcall
or
jno
xchg
sub
cmp
mov
pushf
inc
aas
jno
dec
or
icebp
push
xchg
inc
or
sarb
lock
jbe
dec
popf
aam
dec
in
sti
xchg
xor
icebp
stmxcsr
and
or
std
jl
pop
push
ja
adc
imul
pop
ljmp
sbbb
sbb
jle
and
stos
testb
adc
jne
push
sub
js
mov
aaa
cmp
push
push
lock
jno
cltd
fldenv
pop
mov
out
xor
push
shlb
insl
push
push
cmp
mov
push
sub
testb
jg
cld
mov
jo
sub
push
pop
hlt
pop
gs
inc
lods
aas
sub
enter
in
ss
test
push
push
imull
add
cs
and
and
addb
test
mov
xchg
ljmp
sbb
xor
lea
xor
stos
test
cwtl
idiv
xor
cmp
rol
sub
jb
push
sbb
jmp
dec
fstpt
sbb
xchg
xchg
xchg
fstl
lock
adc
clc
xchg
cwtl
rcrl
es
test
dec
adc
mov
popf
loop
icebp
or
mov
mov
jl
sbb
adcb
cmpsb
xchg
stos
xchg
jns
inc
mov
test
mov
out
and
insl
push
cs
push
ret
jo
fwait
lret
mov
std
pop
sbb
xchg
add
in
loope
sub
lcall
push
xchg
pop
add
inc
ds
in
xchg
adc
mov
les
inc
mov
mov
pop
mov
jp
repz
inc
jae
jge
lods
jp
lods
ret
pop
ljmp
dec
adc
testb
int3
sub
jne
and
jne
add
ja
adc
xor
mov
push
adc
imul
loopne
sub
jbe
cmc
lods
addb
sbb
jp
cmp
sar
inc
scas
call
and
movsl
sub
fcmovnb
xchg
and
ret
pop
hlt
testb
mov
sbb
popf
mov
sbb
pop
imull
xchg
sahf
aam
out
out
or
icebp
fs
jecxz
lcall
in
lfs
cli
lds
insb
enter
sahf
xchg
add
call
or
filds
les
sbbl
pop
test
push
faddl
mov
test
jb
xor
movsb
push
mov
leave
xchg
jno
jmp
repnz
cmp
loope
pop
push
icebp
int3
xchg
scas
sahf
cmp
dec
notb
xor
xor
pop
fistps
dec
ret
push
cmc
cmc
stc
gs
xor
sub
shlb
inc
jb
pop
int3
add
push
out
shlb
push
push
jge
dec
outsl
jp
or
lods
xchg
stos
push
sub
lds
scas
mov
adc
cltd
lcall
scas
jns
movsl
mov
imul
addr16
jb
jge
movsb
out
and
test
lods
stc
cmpsb
mov
mov
push
fstl
js
lds
push
in
rcll
add
adc
push
fnstcw
adc
xchg
es
inc
push
lcall
leave
mov
cmpsl
add
fisubl
mov
inc
mov
fmull
roll
mov
lret
ret
out
cld
mov
mov
xor
sahf
insl
lcall
pusha
std
push
mov
and
cmp
pop
testb
sbb
jecxz
and
lds
fdivrs
bound
cli
push
mov
mov
mov
push
lea
lret
stos
adc
daa
sbb
jnp
or
rep
sbb
pop
jnp
mov
pop
adc
add
add
ja
les
push
push
and
xchg
clc
mov
jp,pt
ja
pop
insb
push
test
fildl
jbe
icebp
cmp
mov
std
dec
jno
pop
sbb
cwtl
inc
mov
gs
pop
dec
imul
mov
mov
stos
push
jo
fldcw
imul
ss
and
int
mov
clc
and
pop
jle
dec
fdivr
loopne
dec
movsb
bt
rcll
and
into
test
jmp
cmp
inc
mov
mov
dec
bound
xor
cwtl
cmc
add
inc
dec
mov
aam
jno
adc
or
int
or
mov
hlt
incb
push
lcall
cmp
dec
lea
sahf
pop
popf
mov
dec
out
and
stos
jnp
or
push
mov
out
push
push
pop
dec
mov
rcr
dec
pusha
xchg
and
stc
jmp
xchg
xchg
out
loop
jge
call
pop
or
mov
mov
es
pop
loop
jge
in
rorl
dec
or
out
mov
pop
add
xchg
imul
or
call
xor
out
lds
add
jl
ret
orl
scas
cmc
lds
test
pop
hlt
ret
mov
das
sub
outsl
testl
leave
fwait
aad
xlat
push
push
pop
xchg
rolb
lods
xor
adc
js
pushf
dec
fistpl
mov
daa
addr16
jb
das
movsl
jl
dec
sub
cltd
mov
lea
lods
xchg
mov
stc
test
cld
dec
cs
bswap
testl
push
fidivs
xchg
jae
jmp
loope
repz
push
xlat
fdivp
loopne
int
adc
pop
jg
lret
mov
jmp
ret
stc
repz
xchg
in
int3
sbb
rcrb
mov
ljmp
aad
dec
scas
xor
cmp
push
mov
jge
das
and
out
xor
xchg
xchg
jle
int
or
push
push
decl
mov
popa
push
push
ljmp
lahf
sbb
and
xor
add
fimuls
jecxz
pop
bound
lods
jae
jmp
cltd
pop
and
sbb
pusha
jl
sbb
inc
leave
pop
enter
rcr
mov
or
mov
cmpsl
int
movsl
mov
adc
pushf
in
lods
iret
pop
cli
in
test
mov
sub
popa
add
aaa
jno
outsl
popf
lea
or
push
mov
push
dec
mov
fcompl
add
push
cmp
aas
popa
fistpll
jmp
jns
jno
lret
sub
movsl
nop
xchg
mov
rcrl
lret
lret
sub
daa
pusha
loope
dec
push
xorl
mov
sarb
dec
mov
adc
ljmp
mov
das
lea
cmp
pop
dec
or
imul
cmp
fnstenv
cmc
loop
add
mov
es
jecxz
mov
dec
push
mov
mov
mov
iret
dec
fisubl
loope
cmp
jmp
mov
ds
jns
xor
xor
lods
mov
ret
push
adc
mov
pop
xchg
push
lods
xchg
and
cwtl
mov
cwtl
and
fstps
insl
lods
xor
scas
dec
xchg
leave
imul
daa
sbb
mov
cli
ret
repz
push
das
sbb
mov
mov
insb
stos
enter
repz
jns
insb
add
mov
push
jp
add
stos
lret
jle
repnz
sbb
cmp
test
decb
push
pop
mov
dec
repz
add
xor
push
sub
mov
ds
jns
adc
jnp
jno
unpcklps
repz
mov
add
mov
popf
test
push
insb
pop
xchg
inc
lret
cwtl
data16
stc
adc
and
or
aad
es
dec
loopne
jge
outsl
adc
sbb
cmc
cmp
jmp
pop
shll
mov
push
cld
push
dec
dec
mov
mov
jecxz
mov
sbb
push
mov
sbb
push
bound
jo
scas
lahf
jl
iret
std
test
pop
or
mov
adc
mov
add
mov
hlt
loopne
push
lret
popa
decl
add
pushf
test
movsl
in
shlb
cmp
or
mov
mov
jl
lcall
les
inc
fdiv
jmp
add
jne
fstl
jbe
xchg
fiadds
push
xor
jo
mov
mov
outsb
lods
lock
xor
outsb
pop
fdiv
cmp
negb
arpl
test
movsl
cmpsb
test
mov
bts
xor
repnz
add
mov
cmc
xchg
mov
push
repnz
std
insl
test
cmp
jecxz
cmpsb
xor
insb
loop
or
pop
mov
mov
jl,pt
xor
test
fwait
jg
and
xchg
shrl
mov
xor
es
aam
movsb
or
push
bound
std
test
push
add
xlat
xchg
sbb
inc
push
cmc
mov
and
sbb
cmc
addr16
jne
push
or
fsubr
push
and
jecxz
fwait
dec
jecxz
fs
xchg
arpl
sbb
dec
mov
inc
xor
dec
jp
inc
mov
push
mov
mov
gs
xchg
push
push
mov
jo
pop
xchg
jmp
shrl
jmp
pop
and
rclb
iret
leave
mov
mov
jns
push
loopne
xchg
dec
movhps
push
into
sbb
pop
lods
stc
mov
pop
add
dec
cmp
shl
add
and
out
movsl
cld
sar
clc
mov
lahf
pop
cltd
cwtl
call
mov
pop
jle
and
ds
inc
add
cmpsb
adc
add
lcall
sbb
pop
pop
dec
jge
push
xchg
mov
lcall
pop
or
jns
iret
xor
test
stos
pop
test
xchg
mov
sub
xchg
shrb
call
jb
dec
pop
xchg
jecxz
jb
pop
xor
jb
aaa
cmp
fiaddl
out
fisttpl
xchg
rclb
lret
inc
xchg
out
jp
call
adc
lea
push
dec
xchg
ljmp
add
out
push
je
or
cpuid
mov
push
lock
sub
dec
cmp
mov
and
dec
insb
or
outsl
movsl
rcr
lods
pop
jecxz
sub
test
mov
fldt
mov
andb
cmp
lcall
sbb
idivl
dec
test
stc
lds
es
push
jle
xchg
mov
mov
mov
roll
add
jbe
xor
rorl
and
mov
pusha
mov
or
pushf
mov
inc
repnz
or
jg
sbb
mov
mov
imull
std
xor
pop
lret
mov
outsb
out
inc
repz
ret
shll
xchg
dec
andw
adc
inc
das
pusha
mov
pop
je
sub
pop
subl
lret
ret
push
mov
sbb
mov
nop
sbb
xor
cld
sarb
call
or
lcall
push
jns
lock
xchg
dec
jp
mov
cmpsb
xor
jae
subb
and
js,pn
mov
std
mov
sub
xlat
hlt
mov
sub
xchg
into
fisubrl
cmp
jle
or
push
test
sub
inc
push
pop
sub
inc
cmp
xchg
sbb
popf
mov
fwait
sbbl
bound
or
mov
cmp
movsl
fwait
or
ret
cmp
sarl
hlt
pop
pop
xchg
dec
pop
sbb
add
pusha
pop
movsl
test
or
stc
mov
jecxz
loop
fnstcw
pusha
mov
sbb
fildl
icebp
xor
cs
push
or
shrb
jno
outsl
pop
pop
aam
pop
data16
add
and
shlb
cmp
lods
jno
and
and
jbe
lret
jo
pop
push
stos
iret
es
in
loop
ficomps
shrl
jb
mov
xor
push
lret
imulb
insb
or
insb
cmp
testb
lret
and
adc
push
and
cmp
pushf
repz
out
sbb
or
out
mov
popa
dec
mov
mov
xchg
testl
scas
xorl
mov
jp
sub
xor
sbb
repz
dec
cmc
or
out
loope
and
mov
gs
push
pop
std
push
sub
loop
add
imulb
mov
movsb
call
dec
sbb
mov
stos
pushl
sub
mov
inc
mov
mov
inc
jmp
jae
shlb
sbbl
add
popa
pop
inc
imul
sub
mov
mov
in
insl
pop
jecxz
sbbb
and
dec
sub
movsl
jae
inc
cmp
push
scas
cmc
addr16
stos
dec
cli
add
or
test
push
ja
ds
lahf
icebp
push
ljmp
jge
cmpsb
xchg
imul
add
es
aad
dec
pushf
je
push
sub
sub
mov
fmulp
mov
add
fbstp
imul
daa
dec
int3
jmp
test
xlat
and
lahf
daa
xor
adc
das
mov
xchg
out
pop
xchg
add
in
cmp
add
cltd
repz
or
push
inc
addb
sbb
ja
cmp
mov
andb
mov
std
sub
lret
gs
pop
inc
dec
aad
or
jae
adc
adcb
xchg
push
mov
dec
repnz
mov
xchg
js
lahf
lret
xlat
sub
movsl
fmull
jne
push
int3
fldcw
mov
movsb
outsl
pop
test
xor
enter
icebp
cs
imul
js
lahf
jp
xchg
in
fdivrl
pusha
daa
leave
in
loopne
add
jp
pop
out
jecxz
scas
cltd
dec
inc
pop
repnz
mov
jo
in
jb
cltd
lock
fisubs
jecxz
push
ret
jl
jmp
or
fs
in
enter
or
inc
pop
fldl
inc
rcll
in
popf
pop
mov
enter
les
sub
and
ret
add
mov
js
mov
dec
sbb
xor
je
cmp
xor
pop
pusha
sub
mov
push
stc
inc
andl
dec
push
jbe
stos
mull
cwtl
daa
idivb
xor
push
loop
xchg
movsl
ljmp
data16
mov
outsl
das
std
pushf
daa
loopne
adc
in
les
adc
filds
enter
into
mov
sub
das
lods
not
pop
call
int
fistps
call
int3
xchg
ds
divb
and
jbe
jbe
jmp
aam
lds
cmpsl
and
rcrl
and
punpckhdq
mov
mov
dec
aas
jb
xor
mov
scas
adc
sub
ret
mov
cwtl
dec
push
push
es
addl
lcall
into
adc
and
mov
mov
push
dec
sahf
sbb
call
fcom
fadds
mov
mov
mov
outsl
imul
sub
pop
or
push
sti
or
xor
add
dec
jge
sub
mov
xchg
pushf
inc
mov
jne
out
lods
out
ret
aas
in
lods
pushf
mov
push
sbb
aam
cmp
daa
pop
mov
stos
mov
dec
xchg
mov
dec
cmp
cltd
sti
fdivrp
xor
mov
aam
dec
dec
out
xor
mov
inc
incb
xor
gs
icebp
and
lods
in
les
bound
pushf
xor
jecxz
inc
imul
jae
mov
rorl
push
fs
push
add
scas
xchg
sarl
cwtl
mov
je
ficomps
sbb
adc
cmp
add
in
ss
out
push
imul
add
sbb
lret
dec
cmp
cmp
or
pop
lret
out
enter
sub
cmp
outsb
xor
or
mov
jge
push
jne
fwait
shl
jo
push
and
or
pop
mov
iret
add
adc
std
enter
lods
jnp
das
hlt
jmp
jns
aam
mov
test
imul
lahf
mov
inc
mov
movsb
stos
and
mov
jg
popa
and
sbbl
pop
xor
inc
insl
or
inc
mov
shr
add
xorb
bound
dec
cmp
cmp
shll
fists
in
sahf
cmp
out
loopne
in
lods
ljmp
cmp
jae
subb
in
push
fistl
jmp
xchg
pusha
movsl
imul
dec
mov
popf
mov
aad
into
icebp
dec
ret
inc
adc
bound
xchg
add
scas
outsb
arpl
adcb
jle
arpl
mov
arpl
shlb
movsl
or
in
pop
jno
lods
sbb
ret
iret
lahf
stc
inc
sub
adcl
adc
mov
stc
dec
xor
mov
movsl
mov
in
jb
outsb
mov
aaa
stos
adc
int3
sbb
mov
push
sti
int3
xor
mov
adc
xor
cmpsb
std
sbbl
xlat
arpl
stos
adc
mov
lods
pushf
or
aaa
iret
movsl
xorl
int
pop
mov
dec
loope
subb
movsb
loopne
icebp
cmp
rorb
dec
ljmp
clc
arpl
xor
out
lods
fcomps
in
sbbl
add
rclb
mov
push
mov
jecxz
push
test
cmp
jnp
in
xor
sahf
aad
cmp
int3
jb
nop
loop
stos
js
mov
jae
dec
xor
sahf
mov
sub
jns
cwtl
jle
jbe
fsubs
repnz
fstpt
adc
and
push
outsb
jnp
jno
mov
mov
pop
into
sahf
cld
jl
fcmove
out
or
shll
cli
orl
jb
outsb
mov
push
add
popa
in
ljmp
lahf
push
jmp
jp
pop
daa
push
mov
lods
inc
int3
in
and
cmpl
adc
imul
cli
cmpsb
fucom
xor
inc
call
pop
test
mov
push
bound
jp
rorb
sti
add
inc
sahf
mov
dec
push
imul
xchg
dec
je
in
jecxz
sarb
mov
mov
imul
cmp
movsb
sbb
sbb
ja
jae
pop
pop
xchg
pop
loopne
or
mov
test
or
imull
test
dec
movsl
sbb
pushf
jnp
fnstcw
and
jp
fists
mov
into
cmc
push
aaa
fwait
jae
adc
lea
add
pop
call
cmpsl
out
dec
pop
imul
push
in
adc
fwait
insb
cmp
mov
data16
xchg
jl
jb
cmp
and
nop
push
icebp
testb
int3
push
stc
nop
gs
pop
stc
ss
pop
clc
gs
movsb
push
fnsave
call
pop
hlt
inc
ljmp
out
mov
mov
pop
jnp
and
sub
add
jb
mov
jne
sub
es
sub
daa
insb
mov
xchg
pop
cmovae
pop
jns
pop
int3
sbb
dec
jbe
xlat
inc
pop
mov
ljmp
scas
xor
sub
test
pop
subl
or
dec
pop
dec
cmpsl
sub
and
loop
outsl
or
mov
adc
and
aad
push
or
insb
lea
into
in
rol
lods
data16
lock
mov
push
out
xlat
mov
dec
les
dec
xchg
sbb
movb
test
inc
adc
aaa
cmc
hlt
push
fistpl
sub
jp
dec
inc
mov
shlb
push
push
je
outsb
fdivrp
mov
shll
mov
cltd
jnp
mov
andb
jbe
sar
add
mov
or
jle
stos
int3
stc
lds
xchg
xor
push
test
cmp
stos
sbb
sub
pop
xchg
dec
mull
stc
bound
mov
cmp
or
adc
or
dec
cmp
sbbb
test
lds
fwait
dec
push
aam
bound
bound
scas
add
cli
lds
fs
jg
add
push
xor
sbb
cmp
add
pop
mov
xor
xor
dec
in
cmp
pusha
dec
es
shrb
xchg
insl
sbb
lock
out
pusha
push
and
aad
pop
leave
mov
sub
out
lret
hlt
jns
fdivl
jnp
pop
repnz
xor
xor
imul
pop
cmp
rolb
lret
and
dec
std
push
pop
les
ret
inc
std
bound
sbb
out
push
test
std
jae
add
mov
pop
stos
push
adc
and
popf
or
dec
adc
xchg
sub
sbb
pop
nop
cmp
lret
data16
sub
cmp
scas
xchg
das
mov
pop
insb
pop
adc
int
ljmp
lods
ds
orb
mov
push
stos
mov
incl
pop
daa
pushf
fcoml
sbb
xchg
shll
add
dec
push
test
rorb
dec
testl
fs
dec
add
pop
leave
cmp
stc
jns
pop
lcall
adc
mov
scas
call
mov
iret
mov
sub
inc
pop
out
shll
lea
push
jecxz
cmpsl
fucomip
pop
xchg
in
or
xchg
pop
outsb
inc
xchg
cmc
out
test
xchg
stc
out
fimuls
enter
cmp
dec
cmp
xchg
sub
lds
pop
and
call
sahf
rorb
hlt
shll
in
and
insl
push
xor
push
mov
inc
xor
mov
xchg
ljmp
adc
jmp
repz
mov
and
pop
pop
sbb
and
xchg
into
imul
add
scas
pop
xchg
mov
mov
ret
fcomps
or
clc
icebp
cmp
mov
jne
xor
sbb
dec
iret
pop
lock
stc
pop
outsl
ss
jno
in
or
outsl
jg
pop
add
fldcw
adc
sbb
dec
sub
jecxz
push
stos
stos
or
sti
nop
lea
in
jb
xor
pushl
or
ss
call
inc
xchg
fildll
mov
mov
jg
mull
push
mov
mov
push
in
stos
arpl
cwtl
dec
mov
scas
inc
jne
fimull
adc
scas
stos
mov
sbb
js
in
cmp
push
into
loopne
jns
aaa
les
add
or
jg
pushf
jb
aam
adc
out
push
fstps
sub
inc
add
mov
stc
popa
fs
mov
sarl
inc
out
cltd
sarb
adc
insl
mov
insb
fnstcw
dec
pop
fwait
xchg
popf
cld
add
rcr
fidivrl
cmp
lds
mov
jne
cmp
inc
xor
lea
or
inc
adc
div
js
mov
imul
sub
fcomi
xor
mov
push
and
jmp
es
xchg
arpl
jne
dec
mov
xor
push
aad
in
filds
cmc
and
lret
xchg
or
xchg
pop
dec
insb
or
or
cmp
pop
sub
enter
dec
pop
add
lcall
orb
sub
jge
iret
mov
or
fistps
cmp
mov
dec
outsl
lds
adc
fidivs
jmp
pop
push
adc
dec
xchg
out
fwait
xor
add
stos
cmp
ja
xchg
test
test
arpl
xchg
add
mov
das
push
idivl
push
sub
rorb
cmp
or
and
icebp
push
data16
adc
lods
hlt
adc
outsb
add
jl
das
test
cmpsl
fwait
mov
sbb
dec
xor
dec
mov
jmp
jns
inc
push
sub
mov
nop
lods
daa
lahf
mov
aaa
cmp
push
add
aaa
int3
iret
jge
in
push
out
xor
hlt
push
sbb
repz
or
jle
out
lret
xchg
cli
xor
sbb
dec
adc
or
push
mov
int3
scas
jl
test
lcall
jno
sbb
xchg
sub
push
mov
jns
imulb
out
cmp
loop
imul
push
pop
test
jnp
das
icebp
daa
add
xor
cmp
adc
add
rcrl
aas
and
lods
push
repz
cmp
pop
dec
daa
popf
vpaddb
sarb
popa
mov
cmp
mov
push
cmc
fstpl
or
mov
cmp
push
adc
mov
push
xor
lods
std
outsb
adc
and
sub
jno
add
sbb
insl
xchg
arpl
ja
push
scas
pop
out
sub
clc
xor
scas
out
mov
xchg
pop
xchg
lods
imul
mov
dec
cmpl
insb
andb
adc
sub
add
movsl
jmp
repnz
adc
mov
cs
dec
inc
xor
inc
loope
rol
push
push
test
dec
push
xchg
repnz
imul
lods
push
sub
cli
push
faddl
lret
dec
lods
clc
cli
sub
arpl
cmp
sub
cmp
inc
cmpsb
push
aam
sub
pop
push
cmp
mov
adc
inc
inc
sub
push
xor
or
cmp
sbb
mov
and
and
stos
fwait
cmc
insl
xor
dec
je
enter
lds
cmpsb
jl
int3
inc
stos
je
push
push
xor
mov
pop
mov
ret
push
sub
jecxz
movsl
jnp
add
loop
aam
and
gs
push
mov
test
sub
test
movsl
pop
push
gs
pop
andb
pop
enter
cmp
cmp
out
inc
add
and
mov
adc
mov
add
call
pop
int3
sti
inc
les
scas
rcrl
jo
jecxz
adc
lcall
add
fwait
cmp
and
js
sbb
mov
cmp
pop
inc
lret
aam
jb
test
jnp
or
ss
cmpsb
mov
xor
xadd
dec
out
and
sub
mov
rorb
stc
and
cmp
push
push
push
shlb
rcl
push
add
mov
lret
mov
enter
pusha
mov
cltd
popf
lea
or
cmp
repz
adc
add
dec
xor
insb
call
leave
jb
lret
aas
fldenv
jge
add
xor
mov
je
les
push
push
popa
sub
leave
loopne
xchg
pop
psllw
mov
jne
out
add
jns
fiaddl
add
lds
dec
shl
ljmp
out
mov
inc
push
scas
es
pushf
push
clc
mov
adc
or
push
jnp
mov
mov
ds
fldcw
pop
std
cmp
loop
sub
ds
pop
mov
test
pop
repnz
into
gs
inc
cltd
sbb
gs
movb
nop
jno
sub
cmpsl
pusha
out
cmpsb
mov
dec
mov
pop
ret
inc
push
jecxz
push
popa
mov
mov
fsubs
xor
mov
into
mov
sub
stos
icebp
cld
mov
daa
mov
pop
jecxz
jb
mov
pop
add
loopne
stc
or
scas
das
test
push
loope
sarb
in
inc
dec
into
xlat
ds
xchg
cmp
jg
jp
jae
insl
adc
loope
int
or
add
xchg
ljmp
xor
adc
jb
mov
sbb
pop
popa
cmpsb
imul
cmp
rorl
lea
ds
pop
scas
mov
int
push
out
mov
xor
nop
lea
push
popa
orb
sti
test
hlt
and
stos
jo
cmova
lock
add
jae
ss
addr16
es
push
or
sbb
int3
shlb
mov
push
je
fwait
cmp
cmpsb
sbb
jp
fadds
popl
cmpsb
xabort
mov
fsubrs
inc
inc
jo
test
and
jo
xchg
add
jbe
jb
std
mov
ret
call
sub
imul
cli
iret
movsl
add
mov
dec
cmpsb
pusha
and
push
xchg
mov
mov
fs
seta
loope
push
int3
seto
dec
inc
dec
lret
out
push
or
out
xor
mov
fsubr
test
jmp
and
mov
fsubrp
lods
out
dec
xor
add
push
jnp
aam
pop
fs
std
push
scas
push
dec
pushf
push
cmp
sub
cs
xchg
pop
sbb
loopne
popw
push
jp
addr16
ljmp
sbb
imul
fwait
ja
cmc
mov
push
das
adc
jecxz
fs
jg
dec
inc
mov
inc
xlat
lods
push
stc
add
negl
outsl
add
jb
or
lahf
insl
mov
les
aad
ss
bound
cmc
bound
sbb
mov
pop
push
or
push
iret
or
push
mov
mov
mov
adc
insb
in
scas
lods
mov
imul
pop
into
hlt
popa
dec
addr16
out
jnp
dec
dec
addb
xor
js
mov
inc
cmp
cmpsl
xor
push
or
adc
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
mov
movsb
dec
pop
or
jb
pop
outsb
sahf
sar
inc
or
das
xor
push
cmpsb
popa
mov
sbb
enter
lahf
mov
lahf
adc
inc
fstpl
jne
aas
and
ss
pop
jne
jo
xchg
mov
cmpsl
jnp
mov
mov
push
push
push
scas
fs
mov
sub
aaa
scas
and
lea
notb
rcl
lock
inc
mov
xchg
addr16
adc
repnz
sub
cmpsl
xchg
in
xchg
xor
mov
in
or
bound
wrmsr
pop
jne
and
push
aad
int3
nop
and
cld
jmp
and
push
mov
inc
and
mov
and
jo
fcompl
sub
dec
pusha
xorb
pop
sbb
mov
adc
or
jmp
xor
ljmp
xchg
ja
cmp
dec
pushw
push
mulps
fs
fnstsw
cmc
iret
dec
mov
cmpsl
and
push
divl
sub
cmp
xchg
sbb
xor
inc
pushf
jp
negb
ror
mov
sar
xor
sub
fsts
scas
cmpsl
jle
mov
aaa
call
sbb
jo
sti
stc
imul
jbe
pop
xchg
jne
adc
je
xor
push
loopew
xchg
outsl
push
mov
push
cmp
pop
xchg
sbb
cli
add
jge
pop
add
cltd
mov
cmp
scas
aam
pop
cld
scas
in
jmp
push
xor
pushf
dec
cmp
push
push
jnp
arpl
out
ret
mov
or
sub
sahf
xchg
cmpsb
cmpsl
inc
jns
gs
lds
push
mov
sar
pusha
push
push
popf
mov
loope
jecxz
mulb
adc
andl
shl
gs
sub
cmpl
push
adc
jnp
pushf
jmp
rcl
out
jmp
testl
aas
testb
jns
or
dec
test
add
and
xchg
lahf
sarl
sbb
sbb
lahf
add
push
hlt
jmp
enter
cwtl
sub
frndint
hlt
cwtl
repz
scas
lods
adc
cmp
inc
in
and
test
in
pop
pop
sahf
repnz
sbb
push
js
adc
stc
mov
test
pop
mov
jge
int3
pop
mov
in
or
push
fsts
filds
mov
or
fildll
shl
mov
outsb
aad
mov
jg
outsb
in
pop
mov
mov
and
mov
sub
out
loop
inc
mov
ret
xchg
ss
add
cmpb
mov
add
jmp
nop
mov
cmp
jnp,pt
lds
fs
lock
leave
jecxz
rcrl
cli
xor
out
push
jbe
repz
dec
je
dec
fwait
xchg
jg
loope
fidivrl
xchg
mov
rcrb
js
sbb
push
sub
and
ljmp
inc
mov
jmp
sarb
xchg
jae
std
arpl
fstps
adc
mov
xlat
sbb
dec
icebp
lods
lods
cmpsl
in
daa
outsb
mov
pop
out
mov
outsl
lods
fildl
je
add
out
inc
lret
outsl
mov
and
movsl
outsl
aad
aad
mov
inc
rcll
mov
mov
mov
inc
shl
stc
pop
arpl
pop
cmpsb
js
dec
repnz
xchg
adc
jg
insb
ja
push
jb
xchg
cvtpi2ps
cld
pop
cmpb
int
push
xor
xchg
scas
xchg
cmp
cltd
ds
mov
push
aam
mov
xlat
outsb
or
xchg
xchg
ret
outsl
lds
mov
hlt
dec
mov
popf
in
shll
fwait
pusha
vcmppd
push
imul
cmpsl
add
test
mov
iret
shll
jecxz
cmc
jae
jg
mov
xor
xor
dec
mov
or
imul
cli
adc
add
sub
test
dec
xchg
popa
xor
and
push
fstpl
stc
sbb
call
dec
xchg
jne
imul
mov
mov
sub
test
pop
xor
sarl
xor
sbb
negb
xor
shll
xchg
cmp
insl
call
inc
repz
or
sub
jae
push
movsb
data16
sahf
cmp
xchg
enter
or
cmpsb
mov
sub
and
jecxz
popa
dec
shll
in
cmp
xor
lret
mov
mov
aas
fdivrp
jecxz
test
loopne
sbb
push
pause
cmp
sub
jne
shr
cltd
js
gs
leave
cmpsl
xchg
nop
lahf
lret
cmpb
ja
dec
rcrb
iret
pusha
cmp
add
push
test
jle
inc
mov
xchg
cmpsl
pop
push
lock
aas
pushf
jbe
jg
mov
or
mov
sbb
xchg
pop
lahf
jl
push
xchg
lea
insl
test
insl
fmuls
lcall
test
inc
or
or
cwtl
icebp
lret
dec
rcr
fnsave
test
xor
dec
mov
mov
or
and
mov
sbb
mov
ja
rolb
or
mov
xchg
cmp
mov
jmp
fiadds
xlat
inc
or
xchg
in
ret
test
mov
inc
cmpsl
mov
das
pop
setb
leave
jp
dec
repnz
mov
sbbl
mov
aad
push
roll
out
dec
cmp
enter
pop
mov
adc
arpl
push
stc
sub
sbb
int
mov
mov
dec
add
popf
cmp
jne
pushf
scas
cli
pop
mov
cmpsb
ret
jne
mov
outsl
fmul
jns
lock
nop
or
jle
cs
ss
adc
adc
adcl
push
fstpt
mov
jbe
cld
mov
and
jl
push
mov
cmp
out
sti
jecxz
popf
push
mov
push
and
mov
mov
mov
gs
lret
push
xchg
fcompl
push
test
repz
popa
pop
rcrl
std
in
ss
inc
mov
add
inc
adc
std
bound
fnstcw
mov
lea
mov
mov
mov
daa
pop
test
lds
into
xor
push
div
push
cmp
mov
dec
inc
sub
xchg
ljmp
or
dec
iret
xchg
jmp
xor
ret
jmp
movsb
cmp
adc
testb
insl
dec
inc
es
sahf
cmp
adc
mov
xchg
pop
push
cmpsb
out
mov
jp
sub
jo
std
push
cld
in
cmpl
lds
inc
fwait
pop
mov
movsl
jo
sarl
aad
sbb
or
fsubrl
gs
arpl
xchg
fcoms
lock
jb
scas
sub
es
xchg
lds
jno
fxtract
jbe
add
jle
inc
mov
lret
outsb
xlat
out
sub
shr
cmp
rcl
cwtl
inc
leave
jns
mov
je
push
dec
nop
sub
push
ja
cld
addr16
sub
jne
jne
test
shlb
or
popf
outsb
sbb
inc
and
jae
adc
jo
lret
lds
in
jne
jns
gs
enter
jo
scas
xor
fnstsw
pop
or
adc
or
fs
in
mov
add
jae
adc
subb
add
xchg
push
bound
sub
push
cmp
sbb
stos
push
mov
aas
adc
adcl
pop
pop
pop
rcrl
out
and
sbb
lret
lahf
xor
mov
bswap
ja
hlt
shlb
leave
les
scas
and
in
rolb
shll
adc
call
sub
mov
data16
test
cmpsb
aad
repnz
aad
iret
mov
or
insb
outsl
push
jne
fstps
sub
or
mov
sbb
movsb
lods
cwtl
addr16
mov
mov
shll
pushf
icebp
in
cmp
fucomp
sbb
or
fwait
out
jns
ljmp
jge
test
and
sub
ss
aas
dec
out
xchg
pop
shlb
pop
mov
jecxz
inc
dec
xlat
add
pop
cmc
imul
xchg
sbb
mov
mov
cltd
lock
jl
popf
cmp
lcall
cmp
mov
pop
fisubrl
pop
jge
push
imul
out
cld
dec
sub
mov
daa
pop
testb
and
pop
adc
jb
fsubrl
lret
addr16
xor
leave
mov
das
mov
popa
bound
lret
rcr
jge
arpl
cmp
popf
out
pop
mov
bound
sbb
inc
adc
add
imul
movsl
in
mov
mov
mov
xor
pop
and
das
sub
jecxz
dec
or
jo
sub
in
leave
arpl
push
push
dec
adc
add
in
lods
xor
sub
jle
nop
test
mov
mov
pusha
dec
popf
lcall
mov
icebp
enter
xchg
dec
rcrb
aam
add
scas
xchg
shl
mov
add
jecxz
das
fldcw
lahf
shrl
arpl
lea
leave
jl
sub
xchg
daa
inc
cmpsl
fstps
gs
call
inc
leave
and
or
mov
sub
aaa
jae
pushf
inc
addr16
lods
cli
daa
les
ffreep
movsb
fcom
les
nop
lret
mov
cmp
and
sub
fiaddl
shll
mov
movsb
aad
loop
push
pop
aam
inc
pop
lret
jp
jb
sub
cld
mov
lret
xor
into
jecxz
mov
scas
outsl
es
inc
dec
loope
jnp
jae
test
mov
scas
loop
jecxz
mov
or
pushf
dec
movsb
cmpsb
insb
push
xor
loopne
dec
mov
or
mov
mov
js
push
xchg
insl
popa
inc
fldenv
mov
movsl
mov
loope
sub
enter
in
inc
mov
data16
stos
addl
and
mov
pop
jmp
dec
shl
cmp
adc
js
jg
shlb
xorb
xchg
add
inc
xchg
clc
icebp
popf
test
std
popa
jbe
cs
mov
pop
mov
lea
inc
nop
nop
lods
lods
out
lock
sub
pop
ja
dec
xor
pop
cmp
inc
jecxz
addr16
sahf
xor
popa
and
nop
testb
jecxz
push
jl
fwait
mov
mov
das
push
sub
std
dec
rorb
mov
cwtl
nop
xlat
dec
inc
and
pop
imul
mov
fsubrs
jbe
enter
xor
repz
cmc
mov
dec
dec
xchg
add
dec
popa
fs
idivb
push
lahf
xchg
ss
mov
popf
out
cltd
adc
mov
jl
adc
pop
pop
pusha
xor
sbb
cld
inc
push
dec
mov
gs
out
dec
push
test
xor
fcmovb
sarl
test
insl
out
std
mov
mov
inc
adc
jnp
imul
push
push
or
popa
out
loope
outsb
or
xchg
fmuls
sbb
xchg
in
jp
xor
mulb
mov
mov
decb
or
add
testl
pop
cmpsl
daa
adc
and
test
stos
scas
arpl
jns
dec
cmc
aaa
shlb
xor
cmpsl
jmp
test
sbb
xchg
cmp
aam
hlt
out
xor
aam
inc
dec
les
das
and
jno
sub
lock
push
call
int3
xchg
fidivs
jb
fstl
lds
call
cli
ret
jmp
fsubrs
mov
jne
int3
bound
jo
sbb
add
mov
roll
adc
push
mov
xchg
inc
roll
stos
jne
data16
xchg
mov
das
mov
fisubrs
inc
filds
sbb
and
sbb
mov
push
xchg
cltd
test
sbb
mov
je
lahf
fwait
cli
out
out
jae
and
clc
adc
cs
cmp
outsb
sbb
sbb
jbe
repz
mov
adc
mov
xchg
jno
cwtl
iret
jp
mov
jl
dec
and
lods
inc
mov
cmp
sub
jnp
mov
dec
lds
rcrl
lsl
in
sahf
jmp
mov
lret
arpl
add
adc
decl
mov
sub
mov
cmp
outsl
mov
dec
or
pop
push
push
jo
mov
les
iret
cmpsb
sbb
and
cmp
enter
sbb
inc
push
call
mov
mov
inc
shl
sahf
sub
cmp
pushf
ret
and
jb
fisubs
xor
jp
in
and
sub
stc
jp
or
mov
roll
fdivrl
mov
aas
adc
inc
cmp
push
sub
loop
xor
jo
add
insb
fs
mov
cwtl
inc
leave
add
cmp
jne
out
insb
loop
aad
push
scas
pop
xchg
fistpll
daa
mov
mov
in
sub
shlb
sub
adcl
lahf
xlat
nop
lret
stos
movsl
cmp
jle
mov
mov
insb
sub
lods
loop
fwait
insb
mov
adc
lock
add
std
pusha
out
pop
enter
je
and
mov
pop
out
or
insb
mov
and
repz
jo
cs
push
pop
je
adc
cmpsb
mov
sub
or
int
push
imul
mov
test
mov
pop
repnz
test
sub
xor
dec
fsubrs
vmread
add
push
cmp
jns
push
js
and
out
inc
cli
aas
dec
orb
pop
loope
sub
lcall
inc
jo
push
das
and
dec
mov
jb
and
dec
dec
pop
cli
sar
xchg
sbb
add
loope
jle
jnp
aaa
addb
pop
stos
push
mov
mov
cmp
push
xchg
dec
in
mov
pop
movsl
mov
movsl
scas
lds
cmp
dec
xchg
out
loop
inc
jb
imul
mov
add
dec
push
sub
leave
adc
out
xor
jg
mov
dec
cmp
pop
loopne
dec
lret
jnp
adc
mov
adc
xchg
add
into
xlat
rcrl
mov
test
loopne
mulb
arpl
fidivrl
leave
fsub
mov
outsb
int3
or
pop
adc
and
je
lret
jne
push
adc
xor
dec
pusha
adc
dec
sti
xor
or
pop
test
pusha
ss
or
mov
mov
inc
and
loop
lret
pop
mov
jmp
ss
loop
xor
xor
push
pop
adc
pop
insl
push
cmp
imul
mov
adc
push
adc
les
inc
shl
and
mov
scas
mov
push
shlb
xlat
or
add
lock
fs
cltd
sbb
mov
ja
cld
mov
scas
bound
add
jo
popa
stc
daa
xor
push
popa
xor
or
mov
popa
aam
inc
inc
adc
and
jno
hlt
adc
in
lahf
addr16
dec
jmp
pushf
ret
jl
inc
cmpsb
mov
push
out
or
pop
adc
addr16
add
sbb
xchg
pop
adc
lods
aam
dec
xchg
cmpl
or
dec
mov
fistps
push
dec
vmovq
inc
push
adc
aaa
mov
add
in
push
push
pop
add
and
xchg
das
ljmp
ret
push
mov
call
jne
xchg
stc
int3
aaa
ss
cmp
inc
jp
xor
sub
mov
or
push
and
jl
das
lea
xchg
push
sub
movsb
pop
cld
call
cmp
mov
nop
clc
xor
and
adc
lock
cmpsl
enter
lods
or
fucom
mov
repnz
sub
popl
ss
sti
sub
xor
jp
adc
or
xor
mov
daa
push
push
rcl
and
sbb
lock
pop
push
adc
xor
frstor
or
inc
mov
dec
jno
jae
out
mov
std
mov
jl
test
movsl
xlat
ja
pop
mov
aam
mov
imul
rorb
fldenv
bound
sub
test
and
xchg
or
pop
dec
lret
loope
repz
and
shl
popa
aad
scas
popa
sub
lock
rcl
lret
in
pop
lret
push
stos
cmp
mov
add
loope
shll
or
gs
test
jbe
or
dec
jecxz
sbbl
out
scas
pushf
mov
in
pop
mov
sbbl
mov
cmp
cmpb
adc
sub
push
scas
or
lcall
pusha
mov
mov
inc
adc
cmpb
test
int3
sbb
leave
inc
sbb
fcomp
inc
rcll
and
sbb
add
cmc
mov
push
jo
inc
sub
jmp
addr16
mov
cmp
cltd
outsl
mov
loopne
mov
and
cld
imul
std
push
push
xchg
sbb
push
sub
pop
mov
int
jae
xchg
icebp
ficomps
mov
jns
lret
push
enter
lods
mov
int
aad
cmp
xor
lods
xchg
push
into
push
pushf
inc
or
pop
pop
mov
ljmp
mov
out
out
pop
inc
xchg
fucomi
jl
jmp
rolb
inc
aaa
dec
aad
clc
cwtl
js
sbb
push
leave
in
adc
push
cmp
sub
xor
push
or
lea
ret
push
rol
cmc
push
test
test
gs
jmp
add
push
mov
jno
mov
cmp
aaa
push
mov
pop
cmp
mov
icebp
push
stos
popa
pop
ret
mov
ss
mov
insl
jbe
sbb
loop
fisubrl
mov
lods
cmp
mov
lahf
lcall
push
outsl
shll
ss
in
scas
or
push
mov
sarl
sbb
icebp
aam
aaa
mov
dec
jns
aad
and
add
fisttpl
xor
hlt
ja
cmp
or
lss
dec
test
dec
roll
insl
aas
jg
push
add
rcl
mov
aas
ret
adc
xor
fiadds
jb
shrb
adc
push
push
loop
out
dec
push
mov
or
into
outsb
push
and
and
adc
mov
and
fstpt
push
adc
xchg
ret
scas
mov
es
jg
stc
stc
lret
or
pop
dec
mov
ret
cs
subb
mov
lcall
add
addb
outsl
push
out
dec
fmuls
ds
cli
sahf
aam
inc
fwait
xorb
sti
insl
inc
mov
inc
xchg
popf
pusha
pop
or
pop
or
pop
mov
or
stos
les
cmc
fwait
insl
jecxz
and
sbb
je
loopne
pushf
js
lea
sarl
stos
in
lods
mov
pushf
popf
hlt
cmp
push
jl
out
xchg
scas
mov
xchg
jg
inc
std
jmp
cmp
jp
xor
jecxz
dec
adc
pusha
mov
xor
xchg
xor
popa
jecxz
shll
sub
pop
mov
daa
shll
sub
xchg
mov
loopne
in
scas
push
repz
inc
pop
sub
mov
loope
sub
fwait
mov
sub
rcll
insb
mov
negb
int3
and
mov
dec
cmpsl
ret
cmp
push
test
sbb
jge
stos
lods
mov
insb
gs
outsb
jmp
dec
mul
roll
in
popf
pop
je
mov
in
inc
aas
mov
lods
lods
pushf
je
in
dec
daa
fmul
repz
addr16
cmp
mov
cmp
unpckhps
add
xchg
cwtl
pop
gs
and
stc
insb
xchg
xor
push
adc
shlb
loop
cmpxchg
mov
fstpl
int
inc
fidivrs
daa
ds
scas
popf
sbb
fwait
cltd
ljmp
or
int3
out
push
inc
dec
loopne
pop
inc
push
mov
inc
lcall
insl
in
push
adcl
enter
mov
ficoms
data16
mov
cltd
mov
and
mov
dec
ds
shl
jne
cld
int
dec
and
ficoms
dec
daa
arpl
jp
jge
pop
inc
arpl
rolb
cmp
sbb
rcr
push
mov
cmp
cli
cltd
push
int
push
cmpsl
xchg
mov
jp
test
ret
mov
les
push
xchg
popa
shll
jmp
push
cmp
xchg
fwait
mov
rcl
inc
cmp
mov
ljmp
cs
sub
clc
popa
out
pop
xor
dec
mov
mov
lahf
sub
sub
or
stos
mov
lods
mov
clc
lret
es
fmulp
lahf
xchg
xor
shrb
jle
mov
popa
lret
xchg
cwtl
or
insb
and
repnz
xchg
fstpl
pop
mov
lea
testb
stos
rol
mov
inc
push
cmc
arpl
jmp
mul
out
add
cs
scas
xchg
outsb
mov
sub
shr
cld
fwait
mov
and
mov
xchg
repnz
loopne
mov
es
pop
and
fidivrs
jb
push
sub
cltd
divb
dec
dec
stc
leave
into
dec
cltd
pop
pop
or
add
xchg
push
lahf
inc
movsl
icebp
pop
sub
loopne
add
bound
lock
sarl
and
test
push
jne
inc
stc
enter
insl
shll
pop
cmp
mov
adc
mov
adc
or
xor
sarb
jns
lds
or
jae
adc
dec
les
inc
mov
ljmp
dec
sbb
inc
mov
mul
inc
jae
inc
mov
mov
shll
push
lock
jbe
pusha
xor
scas
lret
xor
lds
loope
pop
xchg
or
jnp
dec
push
rcll
inc
dec
stos
xor
dec
aaa
push
in
push
std
mov
cwtl
push
orl
xorl
loope
loopne
fldt
add
mov
jge
mov
cmp
sub
mov
loopne
adc
adc
add
mov
scas
xchg
stos
push
and
lret
mov
outsb
out
or
cmc
push
enter
lcall
push
pushf
cmp
pop
or
push
xchg
lods
je
pop
icebp
or
std
sub
or
mov
cwtl
aaa
and
mov
push
mov
inc
adc
mov
das
hlt
ds
aam
lods
imul
and
sub
lods
fbld
mov
xchg
cmpl
gs
cmp
and
das
scas
mov
test
xchg
mov
mov
dec
sub
xchg
sub
push
pop
outsl
movl
jbe
rolb
ret
push
das
out
rclb
adc
lret
std
sub
ss
dec
subl
pop
push
xchg
fidivl
mov
jle
cmpsl
stos
pop
dec
push
jns
inc
mov
or
aad
rolb
sbb
cmp
sub
in
mov
sarb
pop
in
pop
jecxz
inc
fimull
adc
xchg
xchg
xchg
mov
adc
xchg
lcall
das
shrb
icebp
fmull
stc
cmpsb
jecxz
xor
call
loopne
push
add
test
sar
les
mov
adc
loop
cmp
es
ja
int3
xor
popa
push
push
fmull
test
cmp
leave
mov
js
or
test
rcrl
pop
test
pop
scas
orb
pusha
enter
jp
sub
cmp
mov
jb
adc
aam
cmp
or
jg
iret
and
or
pop
arpl
cmp
push
sahf
ljmp
sub
mov
test
ret
pop
sti
repz
add
mov
pop
mov
pop
add
inc
cltd
fiaddl
jl
push
in
ja
inc
fdivrp
rcll
pop
hlt
outsb
xor
cmp
mov
shrb
std
xorl
push
dec
xchg
sbb
push
push
icebp
sbb
dec
cmp
mov
and
sub
mov
pop
jp
jle
or
stc
mov
jl
leave
adc
repz
in
stos
jmp
lcall
push
push
mov
fiaddl
mov
outsb
aam
divl
rcr
call
jo
cmc
adc
imul
negl
cmp
sub
fadds
movsl
cmpsl
mov
cltd
std
inc
gs
std
in
pop
outsl
inc
or
es
outsl
lret
gs
rcrl
imul
lds
dec
mov
ret
pop
cmp
mov
rorb
sti
insb
adc
int
repz
and
pop
cwtl
push
mov
cld
sbb
cmp
aam
and
xorb
xor
pop
dec
sbb
in
adc
lahf
pop
enter
leave
xor
jnp
inc
sub
add
loope
jbe
lock
repz
cmp
in
jbe
adcb
sub
mov
inc
jmp
mov
cmc
outsl
add
std
jl
or
js
leave
jp
mov
movsl
xor
jno
sub
jge
push
jmp
pop
repz
jp
sub
mov
popl
addr16
rorb
ficoms
arpl
push
loop
andb
xchg
sbb
dec
ljmp
pop
lds
insl
jno
in
imul
negl
in
cwtl
sbb
out
dec
sahf
mov
outsb
les
cmp
ss
cs
push
and
xchg
mov
js
jl
stos
loope
loope
dec
int
sub
out
je
adc
and
jl
push
loope
jno
push
xchg
sbbl
add
inc
data16
bts
adc
shl
negb
inc
das
sarb
gs
dec
adc
mov
mov
ret
or
enter
lock
push
rcll
jp
rep
xchg
out
movsb
dec
stos
pop
mov
ljmp
cltd
mov
adc
xchg
add
or
mov
pop
jns
ficoml
into
sbb
leave
jg
arpl
inc
add
xor
movsb
or
pop
clc
pop
in
mov
mov
xor
in
mov
cmpsl
pop
fs
xchg
testl
stc
or
fisubs
insl
sub
ret
mov
or
and
dec
or
mov
into
sarl
pop
pop
pop
dec
add
jmp
mov
dec
jne
pusha
mov
data16
in
sbb
ss
mov
addr16
jp
xor
rcll
jecxz
push
js
rorl
mulb
dec
repz
mov
negb
add
mov
subl
cmpsb
pop
add
adc
mov
jne
out
pushf
and
pop
mov
mov
mov
call
insl
sbb
dec
add
add
daa
push
std
pop
jnp
jo
ret
jg
xchg
adc
movsb
je
mov
clc
stos
dec
and
dec
xchg
test
daa
shll
add
cmp
das
out
push
ds
movsl
lcall
push
adc
popl
data16
in
sti
push
dec
pop
scas
stos
arpl
cmp
lock
ds
push
mov
rorb
out
imul
push
ud0
cmpsl
sbb
jmp
in
adc
es
pop
fidivs
aam
ja
cmp
fimull
in
mov
xchg
cmc
repz
and
mov
sub
mov
mov
sbb
or
das
sbb
jp
or
ljmp
push
adc
cmpsl
sub
adcb
pusha
outsb
sahf
jnp
jle
jbe
sub
push
mov
mov
insl
decb
cmc
dec
test
jne
and
inc
repz
mov
pop
adc
pop
xchg
pop
or
mov
jae
rcrb
or
xor
lock
sub
and
call
adc
fldenv
mov
sbb
jl
call
mov
mov
cltd
and
jns
in
repnz
add
xchg
out
int
jbe
sti
ds
popf
xor
icebp
xchg
fnstcw
cmpl
popf
pop
add
cmc
bound
adc
push
repz
adc
hlt
xchg
xor
pop
cmp
je
sahf
cmpsl
inc
sub
pop
add
inc
iret
mov
cmc
in
addr16
daa
mov
in
fisttpl
rol
xor
les
adc
dec
adc
xchg
mov
int
jae
sbb
outsl
jnp
call
push
pop
cmpsb
dec
xorl
fisubrs
mov
mov
js
adc
mov
fadds
in
jo,pt
test
xor
push
adc
add
cwtl
sub
jns
jns
sbb
pusha
fimuls
cmp
jns
shll
pop
add
fmuls
sub
jne
lods
push
aam
repnz
insb
pop
or
loop
pop
mov
subb
dec
test
ror
incb
mov
dec
icebp
out
xchg
imul
fwait
mov
arpl
mov
push
scas
push
movsb
cmp
push
js
test
lods
or
cwtl
cmp
inc
mov
test
insb
xor
imul
sbb
out
testl
sub
mov
repnz
jg
out
jl
add
imul
adcb
xor
fnstsw
fdivrl
mov
cwtl
xchg
mov
stc
xor
sub
sub
and
jbe
gs
aad
pop
data16
lock
adc
mov
sbb
sbb
mov
inc
cmpsl
daa
fisubl
ret
push
add
out
xchg
out
mov
sub
test
hlt
and
dec
out
int3
imul
pop
and
cmp
and
test
push
sbb
cmp
sub
jmp
xor
iret
addr16
call
sbb
xchg
aad
mov
xlat
mov
rcrb
push
scas
pushf
jo
xlat
and
mov
xorl
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
cmc
xchg
dec
fstpt
pop
addl
cmp
jg
out
mov
add
sahf
int
mov
mov
enter
mov
lcall
pop
repnz
jecxz
cmc
lea
jnp
cs
cmp
addl
mov
dec
jno
pop
fwait
mov
xchg
loope
xchg
cmpb
jle
xchg
pop
and
cs
int
pop
in
adc
mov
cmpsb
add
stc
sbb
sbb
mov
testb
dec
jae
pushf
inc
int3
repz
outsl
sbb
xor
out
mov
xchg
adc
dec
idivl
xor
sub
xchg
push
movsb
xchg
arpl
mov
dec
call
cmp
add
rcrb
stc
jno
rcl
jns
adc
out
mov
mov
xlat
mov
outsl
sbb
cmpsb
ljmp
sbb
sub
subl
arpl
fcoms
mov
push
fcmovu
iret
xor
mov
es
pop
adc
sub
pop
mov
fdivs
mov
mov
jae
test
adc
scas
insl
sub
sbb
pop
leave
pop
repnz
cmpsl
in
repz
aaa
sub
movsl
and
lahf
dec
dec
out
mov
out
adc
mov
xchg
sahf
das
push
xchg
adc
mov
add
fisttpl
aas
mov
in
jb
xchg
aas
xor
lods
fwait
and
loope
lret
out
mov
data16
mov
mov
xchg
and
cmp
pushf
subl
or
mov
jg
mov
dec
inc
xor
jge
sbb
mov
sub
and
dec
shlb
sub
cmp
push
mov
or
push
dec
mov
lahf
or
push
adc
fucomi
aas
mov
mov
push
idivb
mov
cltd
mov
jmp
lock
fwait
test
lcall
bound
cmpsb
fninit
mov
fcoml
repz
xlat
ss
inc
sbb
sti
fsubs
push
cld
xchg
fs
jmp
xor
sub
jbe
add
xor
repnz
sti
movsl
jns
shr
inc
lret
jae
sub
arpl
mov
dec
testl
sarb
mov
inc
mov
dec
aad
sti
dec
into
arpl
mov
push
mov
mov
xchg
lcall
and
ljmp
cmpsb
daa
cmpsb
jbe
hlt
lock
mov
fistpll
leave
xchg
aas
mov
pop
dec
stos
sbb
pop
mov
fsubl
sub
push
inc
fistl
and
rorl
adc
outsl
mov
xchg
hlt
out
mov
xor
aas
popl
sti
lds
les
pop
push
mov
mov
push
sbb
bound
push
mov
cltd
lret
mov
xlat
negb
cltd
jmp
push
sbb
xchg
test
in
or
xor
out
dec
mov
mov
mov
jge
enter
test
push
in
scas
cwtl
push
ja
ja
int3
or
pop
arpl
sbb
cmp
dec
fistpl
test
bound
mov
addr16
insl
mov
fsubs
psrld
movsb
test
or
mov
jge
stc
fcomi
test
jne
cli
mov
jae
xor
push
jge
in
imul
add
inc
xchg
shlb
repnz
jb
fdivrl
in
mov
xor
cmp
pop
lea
jmp
sub
pop
lds
pop
xchg
orl
imul
cmpsl
popf
add
sarl
je
outsb
jle
jmp
popf
push
cmp
ljmp
xor
orb
cmpsl
jl
int
mov
mov
xchg
jmp
or
mov
std
pop
jle
ljmp
xor
cmp
jo
inc
fs
mov
jecxz
adc
test
imulb
jae
fdivrs
xor
mov
data16
cld
xchg
arpl
sbb
jae
out
jg
push
int
and
push
xor
sub
pusha
pusha
je
movsb
xor
int
out
xchg
aad
test
lock
sbb
lds
pop
or
or
loop
stos
cmp
fdivrl
out
xor
loope
bnd
in
icebp
cmovbe
sbb
pop
movsl
push
popf
call
push
es
jmp
decb
inc
enter
ret
test
cmc
aad
lods
push
dec
js
xadd
mov
fnstcw
sub
ljmp
push
jae
push
insb
xchg
aad
insb
test
cmp
dec
xchg
hlt
shll
adc
push
dec
testb
inc
ja
lret
push
mov
call
test
loope
jno
in
repz
das
or
ret
pop
xchg
sbb
mov
xor
mov
xor
inc
lds
xchg
inc
xchg
push
xchg
xor
loop
add
pop
je
cmpsl
mov
in
lods
sbbb
enter
cmp
jb
movsb
xchg
scas
test
mov
sti
inc
mov
test
jmp
xchg
shl
xchg
pop
mov
ds
psraw
adc
cmpsb
mov
mov
outsl
call
ret
push
ret
cmp
mov
xor
xlat
mov
stos
xchg
loope
xchg
adc
fcoms
int3
cli
xor
es
iret
into
fldcw
and
cmpsb
and
jns
mov
adc
outsb
mov
pushf
cmpb
aam
mov
adc
js
jno
xor
arpl
idivl
addr16
rorb
and
jmp
insb
cli
pop
fdivs
arpl
pop
out
into
mov
clc
in
jmp
les
xor
sbb
ds
mul
mov
data16
adc
pop
andb
and
pop
in
jecxz
dec
clc
adc
test
xor
or
clc
add
add
in
push
mov
shl
cwtl
sbb
ss
xchg
iret
jns
sub
arpl
or
jg
jo
movsb
fimull
inc
in
out
pop
outsb
jecxz
mov
xor
sbbb
js
inc
pop
mov
fdivs
das
xchg
out
into
pop
dec
pop
mov
and
sbb
sti
xor
leave
or
xor
loope
pop
es
mov
lea
out
add
adc
sbb
jmp
dec
mov
push
dec
pop
setp
aad
insl
lds
addl
lds
ss
outsb
fildl
rcrl
cmpsl
fistps
mov
push
add
test
lods
or
scas
adc
and
lahf
add
xlat
mov
lahf
fmuls
dec
mov
ljmp
add
xor
inc
jmp
inc
push
movsb
leave
das
add
push
ds
push
xor
aad
push
fwait
jae
iret
jo
jecxz
xchg
or
aad
mov
rcll
rcrb
mov
fsubl
fiaddl
mov
out
ja
pusha
pop
psubw
ljmp
icebp
das
pop
xchg
jnp
nop
jns
xor
or
jb
enter
mov
pushf
stos
cmpsb
imul
pop
pop
sub
loope
adc
adc
imul
repnz
lea
adc
aas
and
mov
inc
je
pop
js
js
out
mov
push
xchg
xchg
int3
gs
fnsave
dec
in
mov
pop
xchg
pop
sub
push
and
stos
xchg
lea
xorb
test
mov
xor
repz
pushf
mov
pop
ja
cmp
inc
xchg
mov
rcl
mov
fcomp
xor
scas
mov
pusha
lret
std
popa
bound
push
cmp
int
ret
fisubrl
sbb
test
sahf
add
sbb
xchg
shrl
xchg
dec
or
sub
daa
jbe
add
and
insl
and
lods
sub
dec
clc
push
jmp
pushf
adcl
xor
pop
jle
dec
in
add
js
sbbb
or
movsb
mov
ret
xchg
lret
fwait
xchg
push
shl
mov
scas
dec
mov
movsb
jo
mov
pop
test
mov
aas
lahf
lret
int3
clc
es
xchg
cmpsl
hlt
test
inc
or
and
call
or
ds
call
cmp
mov
mov
jno
imul
insb
xchg
movsl
cs
loop
into
or
roll
or
push
sub
dec
xchg
jne
and
adc
mov
xlat
aas
mov
out
cmp
xor
sub
arpl
pop
cmp
push
mov
movsl
cmpsb
ljmp
mov
mov
aaa
cltd
dec
lock
popf
sahf
xor
aad
sub
out
cvtps2pd
sahf
in
cmpsb
adc
jns
push
push
addr16
sbb
jl
push
xchg
and
outsl
jnp
pop
test
fistps
xor
and
mov
scas
stc
xchg
cmp
xchg
pop
loope
shr
or
arpl
arpl
pop
xchg
xchg
nop
xchg
or
cmp
in
adc
call
mov
or
push
jb
insb
and
mov
rcll
and
mov
lahf
stos
sbb
lret
sbb
dec
and
ficoms
stos
lds
mov
scas
popa
xchg
or
dec
mov
lods
fdivp
cmpb
test
push
cmc
sub
pop
dec
testl
xchg
loopne
ficompl
pop
mov
adc
dec
ds
and
ljmp
stc
mov
mov
dec
pand
xor
add
xor
iret
ss
mov
shl
jle
xchg
fisttps
in
adc
stc
jbe
lcall
ret
cli
and
in
xchg
dec
gs
movsl
int3
push
leave
or
push
jnp
data16
mov
push
jecxz
adc
cmp
mov
push
aad
inc
xor
ds
mov
movsl
push
mov
cmpsl
push
js
pop
jae
xchg
cmp
dec
das
es
scas
jl
xor
mov
mov
ss
sti
int3
cmp
jno
repnz
xlat
imul
inc
mov
push
mov
dec
or
sahf
jge
push
pop
pop
pop
sbb
xor
iret
out
out
test
adc
repnz
fldt
outsb
rcrl
pusha
mov
pop
ss
rorb
arpl
dec
rcrl
incb
pop
mov
mov
cs
pop
cmp
mov
push
in
mov
push
movsl
add
jbe
inc
sub
xlat
cwtl
lock
mov
imul
xchg
fs
sub
and
and
addr16
es
dec
inc
dec
and
in
out
adc
insb
sub
xor
add
pusha
jg
cmp
mov
sbb
push
hlt
mov
cmp
cwtl
xor
jno
mov
or
dec
fdivs
jg
shl
pop
cmc
jbe
lret
dec
sub
stos
xor
sbb
sti
inc
cmp
inc
outsb
out
test
pop
shrb
mov
cmp
jecxz
xchg
xchg
cwtl
jb
cli
mov
dec
out
xchg
cmp
popf
lret
jl
inc
and
lret
xorb
es
cwtl
sub
pop
jmp
push
outsl
outsb
outsl
pop
fwait
pop
mov
xorb
and
in
xchg
arpl
sub
mov
cmc
divb
mov
add
scas
inc
mov
mov
and
push
mov
pop
inc
adc
add
jns
inc
scas
jbe
cmc
jbe
and
daa
and
push
mov
cmp
adc
lcall
xchg
mov
stos
xchg
inc
not
dec
test
popf
and
popa
mov
jl
xlat
shl
mov
outsl
aad
leave
and
inc
fdiv
shlb
test
jbe
push
adc
inc
repz
pop
jae
inc
scas
popf
mov
or
cli
es
push
push
mov
fisttpll
mov
dec
jnp
mov
pop
popf
pop
mov
dec
aam
rcl
sbb
out
arpl
dec
pop
nop
dec
jno
adc
push
lds
inc
dec
sub
out
ret
mov
xchg
cmp
or
or
int3
xchg
icebp
pop
xchg
sub
mov
mov
xchg
faddl
std
and
dec
push
add
std
or
jbe
ret
cwtl
data16
xchg
dec
adc
pop
push
mov
xchg
adc
insl
xor
sbb
and
repz
cli
lea
mov
leave
js
mov
mov
in
ss
and
call
cltd
adc
mov
xor
xor
std
int
inc
jae
mov
outsl
out
mov
mov
outsl
jnp
or
cmc
or
fisttpl
lahf
mov
ljmp
push
popf
dec
in
data16
out
xor
jp
add
push
aad
out
rep
jbe
or
sub
in
inc
les
xor
rol
pop
hlt
jo
int3
adc
mov
push
or
stos
andl
sahf
mov
mov
pop
cs
jg
xor
adc
outsb
mov
pop
les
cmp
jnp
jns
jae
stos
add
sbb
mov
ss
add
xchg
es
aaa
dec
ljmp
pop
ja
xor
xchg
inc
fsub
sub
pop
mov
jae
leave
pop
imul
lds
sub
mov
or
add
popa
icebp
jns
imul
inc
test
ret
mov
pop
mov
xchg
xor
push
jo
push
add
jp
and
or
and
and
iret
add
push
push
out
jno
mov
shll
cmpl
ds
push
in
xor
xor
add
push
cld
pop
xor
mov
mov
sub
xchg
fisttpll
sti
add
ret
pop
lgdtl
jae
sub
jle
lret
lods
cs
sub
daa
sahf
inc
addb
in
jge
out
push
sti
bound
xor
dec
mov
push
push
lods
rclb
push
loopne
dec
loop
insl
ljmp
mov
push
add
mov
xor
ficompl
insl
stos
jecxz
fs
dec
and
pop
push
push
mov
inc
mov
mov
stos
mov
sbb
dec
and
js
pop
sub
sub
jb
fidivrl
stc
mov
insl
addb
sub
subl
repz
mov
cmpsl
sahf
jns
pop
sub
lcall
sahf
dec
adc
cltd
sbb
sbb
and
cmp
cmp
xor
jg
mov
das
mov
addr16
cmp
jae
xchg
or
data16
jecxz
adc
sbb
popf
imul
mov
in
xor
ss
call
inc
or
mov
mov
add
inc
int
stos
fidivs
cmp
mov
add
cli
xchg
or
inc
and
push
mov
icebp
lods
add
push
repz
cmp
aaa
cmp
jb
dec
jp
mov
adc
clc
icebp
sbb
stc
cmp
adc
sub
shrl
xor
je
push
daa
jle
and
pop
rclb
xor
leave
mov
and
paddusw
jmp
push
ret
les
cltd
inc
jo
test
repnz
mov
fsubs
mov
movsb
jmp
enter
adc
mov
fidivl
cmp
lods
mov
fstl
jg
outsb
scas
push
xrelease
push
sub
addr16
int3
fsts
lock
orl
jne
je
cmp
mov
popf
and
rol
jbe
cmp
mov
fsubp
loop
cmp
insb
adcb
sub
sti
xor
and
cmp
pop
jmp
adc
outsl
aad
add
dec
push
sub
cmp
ja
jl
mov
xchg
xchg
stos
push
adc
mov
mov
adc
lahf
push
dec
dec
inc
dec
into
fwait
sub
add
int3
mov
inc
pop
dec
mov
outsb
stc
and
mov
jmp
decb
push
xchg
ds
out
les
shlb
add
negl
insl
xchg
cmpsb
gs
jl
fimuls
test
push
sahf
int
jae
mov
lcall
pop
sub
rcl
sbbb
data16
testl
pop
shll
fwait
push
pop
addr16
xor
test
mov
fldcw
and
scas
scas
addb
adc
fwait
sub
in
jae
insb
insl
adc
cli
cmp
xchg
xor
push
and
in
pusha
test
hlt
xchg
shll
jge
xchg
adc
xchg
inc
fistpll
scas
mov
fs
fdivrl
sbb
stos
int
lahf
pop
add
xchg
lret
lahf
lods
mov
imul
mov
mov
adc
fdivrs
inc
sub
loope
mov
xor
xor
flds
das
mov
in
movsl
lret
leave
pop
ljmp
shlb
scas
jp
dec
cwtl
fdivs
enter
mov
push
sbb
movsb
into
leave
imul
xchg
lods
cmc
inc
jo
jne
sbb
lods
push
out
pop
fwait
ja
data16
ss
jo
and
and
fadd
xor
xchg
push
cmpsl
popf
push
loopnew
xchg
mov
jo
movsl
lods
pop
icebp
fstpt
xchg
xor
mov
push
jne
fstps
push
xchg
movb
mov
or
mov
dec
in
add
je
mull
out
test
lea
fwait
adc
xor
mov
and
jmp
fwait
clc
mov
mov
jmp
out
mov
and
daa
frstor
lods
in
test
pushf
jge
cmp
aad
jbe
cmp
fdivrs
idivl
mulb
mov
lret
or
pusha
push
push
pop
xor
mov
ret
sbb
mov
je
and
sub
xor
jp
cmp
out
jnp
lret
mov
shrb
cs
add
push
or
jo
cs
xchg
push
lds
shl
mov
std
push
shrb
lcall
fcoml
mov
push
xor
xchg
push
or
push
cwtl
into
stos
aaa
addb
jle
dec
iret
sub
orl
aas
pushf
jne
mov
pop
xor
cmp
gs
leave
sbb
push
push
sbb
jle
adc
or
jbe
jnp
test
or
pop
out
jp
mov
fdivs
addb
jp
test
cwtl
push
pop
mov
sub
sub
push
sti
mov
sti
mov
out
dec
pusha
daa
stos
fcmovne
adc
dec
adc
xchg
cmp
loop
int3
xchg
jnp
xchg
rcr
test
loopne
ret
popf
pop
cmc
int
and
sbb
xor
idiv
and
icebp
jge
lret
jmp
cmp
popf
mov
jmp
push
xchg
mov
sub
ret
pop
mov
inc
icebp
xchg
arpl
pop
mov
testb
fsubrl
in
jns
dec
repz
pop
and
inc
flds
mov
mov
leave
lea
mov
loop
mov
sbb
push
int3
sbb
xchg
sbb
push
sbb
rolb
or
jbe
int
jno
stc
and
mov
and
sbbl
sub
insl
into
push
jo
outsb
add
mov
cmpsl
scas
pop
jns
cmp
je
jns
into
sub
mov
pop
fcoms
pop
push
push
add
lcall
loopne
sar
enter
movsl
pop
push
sti
mov
dec
sub
pushf
fisttps
cli
adc
fnstsw
test
das
pop
add
xchg
cmp
xor
das
cmp
ret
inc
cwtl
pop
std
cmp
lea
test
jne
or
xchg
add
sbb
loop
aaa
add
or
inc
cmp
shrl
and
mov
xchg
adc
mov
movsl
cli
sub
out
mov
or
daa
inc
outsl
adc
xor
cmp
mov
mov
xor
call
fisubs
jno
mov
sub
fdivp
ss
out
xchg
dec
and
xor
popf
les
sbb
lock
rorb
pop
pop
sbb
imul
xchg
fs
and
pop
sbb
xor
outsb
pop
cltd
negb
aam
fcoms
mov
jge
mov
and
sbb
mov
push
pusha
push
repnz
outsl
js
ret
adc
mov
or
xchg
es
jbe
push
cs
cmp
imul
inc
dec
fsubs
pop
loope
jmp
adc
scas
into
cmpsb
sub
add
adc
fisubrs
xchg
in
mov
cltd
shl
xor
adc
push
sbb
mov
and
cwtl
xchg
mov
stc
push
mov
aaa
pop
cmp
sbb
pop
fldt
sub
add
xchg
mov
imul
mov
inc
cmp
fldcw
stos
sahf
fmull
loope
inc
fdivl
inc
jle
fadds
pop
sbb
adc
imul
fldcw
icebp
je
and
out
pop
xor
xchg
cmp
mov
std
jecxz
push
dec
repnz
sbb
in
cmp
aam
jnp
sbb
pop
fstpt
pop
mull
lret
inc
dec
shl
add
inc
xchg
nop
sbb
stc
cmp
mov
arpl
pusha
cmp
insb
or
shll
jmp
int
xor
mov
push
loopne
jae
or
mov
sub
data16
adc
xchg
mov
mov
sub
xlat
pop
popa
fs
into
sarl
sub
sbb
ret
rcl
rcr
repz
push
arpl
enter
jle
lods
sbb
repnz
jno
xor
jb
mov
dec
adc
movsl
xor
cmc
call
pop
test
fidivl
ret
dec
arpl
cmp
add
pop
fsubr
in
xor
mov
or
and
dec
js
sub
inc
adc
mov
jle
push
shr
jl
sub
push
mov
xor
mov
adc
icebp
stc
cmp
fadds
popf
mov
int3
fistpll
je
int
ficomps
insl
in
sub
int3
inc
jnp
into
cmp
pop
mov
pop
sti
popf
lahf
dec
call
jge
lret
lods
cmp
cmovo
add
jmp
add
in
rorb
insl
lock
xorb
xor
ficoml
add
aaa
dec
insl
add
sti
loop
add
mov
dec
sub
insb
imulb
movsl
mov
sbb
xchg
sbb
pop
cmpsl
xor
loopne
ret
je
adc
sbb
test
push
mov
xchg
inc
test
lret
fst
fs
xchg
int
mov
push
pop
adc
iret
xchg
mov
and
lock
rol
add
xchg
cmpsl
hlt
cmc
lock
sbb
andb
repz
into
xchg
in
add
imul
jmp
aad
xchg
pop
repz
mov
mov
and
pop
push
fstpt
addb
cmp
pusha
loopne
test
push
cmp
push
jbe
out
push
push
mov
xor
dec
data16
mov
pusha
jb
cmpsl
cs
mov
lock
cmp
lock
jo
jne
pop
mov
repz
out
rol
stos
push
leave
call
cmp
inc
fwait
xorb
daa
lods
aaa
pop
test
add
fsubrl
stos
in
jecxz
les
pop
push
mov
pop
mov
aam
int
addr16
scas
rorb
dec
dec
dec
pushf
rcrb
push
pop
dec
adcl
rclb
jecxz
les
or
push
push
dec
lahf
loop
pop
mov
jne
je
jg
mov
and
sub
lods
mov
fs
mov
outsb
inc
lods
ss
daa
adc
sbb
movsl
jb
mov
push
in
xchg
xchg
push
andl
pushf
add
xor
cvtpi2ps
mov
cs
pop
xor
sbb
sub
insl
inc
test
add
xlat
pop
inc
or
dec
nop
jo
enter
into
mov
mov
es
pop
fidivs
ja
mov
rcll
pushf
mov
sbb
add
or
mov
adc
incl
repz
daa
inc
push
jnp
pop
fistpl
or
scas
xchg
dec
jle
pop
mov
fldenv
jnp
loope
orb
inc
stos
push
xchg
stos
xor
aas
cli
loopne
xchg
sbb
sarb
sbb
repz
pushf
push
clc
cmp
popa
loopne
std
sbb
js
addr16
fisttpl
mov
loope
jne
jecxz
sbb
fisttpll
scas
clc
xor
inc
addl
lods
mov
shll
sbb
cwtl
xlat
loopne
je
fdivl
cmpsb
fcoms
dec
mov
xor
and
nop
dec
xor
lods
adc
sub
dec
jo
push
in
sub
shrl
sub
in
lock
cmp
jo
and
dec
lcall
sbb
pop
jne
push
cltd
sub
arpl
ret
jl
xchg
jns
jae
jle
cld
push
mov
lds
ret
out
fbstp
mov
mov
roll
in
and
mov
scas
dec
stos
pop
mov
cltd
inc
xlat
dec
idivb
std
jns
sub
lcall
popf
in
adc
push
jg
xchg
mov
dec
push
pop
dec
es
dec
movsl
outsb
rcll
out
or
pusha
or
fs
inc
repnz
add
add
sbb
adc
mov
mov
push
or
push
jnp
mov
adcb
fadd
mov
cmc
push
lahf
push
add
in
mov
fs
and
pop
sub
mov
in
dec
fprem1
and
dec
mov
add
fwait
cmpsl
dec
jb
push
in
cs
adc
push
frstor
add
imul
cmpsl
ss
bound
adc
fisubrl
cmp
outsb
gs
clc
jle
inc
push
dec
xor
inc
sub
cmc
int3
daa
cmc
outsl
dec
mov
lods
into
pop
jecxz
inc
aad
jmp
xor
jl
test
sub
lds
jecxz
xor
es
jne
cmc
lcall
rep
cli
lock
test
lods
out
jno
cmc
xchg
push
sbb
rclb
xor
js
add
adc
fcoms
cmp
or
sub
call
dec
mov
sbb
sub
jb
sbb
dec
stos
cmpl
test
xchg
adc
mov
jnp
push
lods
sbb
in
cmpps
test
jbe
push
lea
jns
mov
int3
sub
aad
addb
pop
cmc
das
scas
popf
push
xchg
test
ss
xchg
cltd
mov
inc
cmp
rol
shll
push
xchg
mov
movl
lds
nop
data16
imul
repnz
addr16
jae
mov
or
xchg
lods
push
ds
stc
insl
jmp
adc
das
jge,pt
lea
cmp
sbb
push
and
shll
mov
jnp
inc
inc
sub
jnp
inc
cmp
cwtl
sti
mulb
jecxz
cmp
cmp
xchg
jnp
notb
inc
and
mov
cltd
scas
adc
imul
adc
fs
mov
adc
filds
or
add
insl
mov
cmp
pop
cld
popf
movsb
sub
ljmpw
lock
mov
movb
shrb
repz
aad
jno
pop
int3
push
outsb
jmp
push
movsb
call
or
lods
pop
cmp
mov
fnstenv
in
lahf
pushf
dec
xor
mov
test
into
inc
pushf
sub
mov
sub
cmp
and
jge
mov
das
fsubrl
jae
lock
jae
mov
shl
pop
cmp
or
cs
inc
test
lds
insb
jecxz
jmp
sub
scas
ljmp
push
or
fdivrs
and
imul
dec
shll
sub
xchg
ds
aam
scas
out
subl
pop
mov
arpl
mov
xchg
xor
ret
dec
in
xor
push
rolb
jl
push
pop
insl
rcpps
mov
mov
push
mov
jge
xor
adc
arpl
insb
sbbb
jp
rorl
mov
jne
sbb
aad
pop
lahf
fstpl
mov
inc
shlb
inc
jecxz
jl
mov
xor
mov
frstor
xchg
adc
je
jno
lock
in
cld
lcall
shl
loopne
hlt
iret
cltd
popf
xchg
jl
adc
cmpsl
lahf
pop
jg
pop
int3
jg
ja
das
xchg
inc
fdivl
in
fstps
push
cmp
ret
inc
fisttpll
or
insb
jg
add
lret
fsubl
push
fcoms
stos
jge
fs
ficompl
ss
sbb
adc
push
mov
sbbl
fdivp
mov
bound
test
lahf
pop
mov
and
cmc
xor
cmp
mov
scas
mov
push
scas
jg
jb
out
faddl
sub
imul
xchg
decb
or
mov
jnp
bound
mov
pop
mov
les
push
test
dec
insl
test
xchg
inc
rolb
in
jbe
xchg
fisttps
sub
cmp
cmp
ljmp
sbb
je
popa
xchg
pop
sub
mov
mov
loop
mov
mov
inc
cmp
in
push
cli
jle
mov
aas
loopne
jns
mov
fidivrs
xchg
jp
int
mov
mov
nop
leave
pop
outsb
adc
ljmp
xchg
sbb
and
mov
call
iret
pop
fstpt
push
cmp
int
jg
or
pop
mov
xor
lret
test
cmp
aam
adc
out
push
push
jp
jge
xor
mov
sub
loop
push
cmpsl
mov
mov
xchg
in
das
imul
lea
mov
xchg
bound
pop
out
les
push
idivl
leave
xchg
dec
xchg
jno
incb
adc
cmp
mov
add
dec
xor
pop
sbb
inc
leave
test
aaa
pop
sub
and
pushf
nop
inc
sub
out
loop
jnp
ss
mov
push
sbb
fldenv
mov
test
push
addl
jno
xor
es
or
mov
popa
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
push
mov
mov
pop
rclb
mov
addb
and
adc
imul
sub
xor
or
iret
rorb
movsb
cmp
push
adcb
add
mov
and
mov
inc
jo
xor
xchg
rorb
insb
js
inc
int3
test
shrb
mov
leave
push
sub
insl
repz
int
pop
int
fdivrp
xchg
push
jb
fs
sbb
orb
jne
cmp
aas
jo
in
sub
pop
hlt
lcall
sub
xchg
add
xor
das
dec
dec
outsl
nop
fidivrs
imul
inc
imul
fs
fbstp
xor
es
fldcw
iret
pop
insb
xchg
adc
inc
cmpsb
jg
or
and
lahf
movsb
pop
outsl
adc
daa
rcl
inc
push
pop
pop
out
pop
mov
jmp
mov
or
mov
insl
xchg
out
frstor
mov
pop
ds
xchg
mov
mov
mov
pop
rcrb
or
inc
sti
xchg
ret
mov
sub
mov
out
mov
inc
addr16
daa
pop
sahf
push
idivb
dec
pushf
mov
pop
aas
pop
repnz
stos
dec
adc
shl
mov
popf
mov
arpl
popf
je
inc
rorb
pop
inc
push
mov
arpl
lds
arpl
dec
das
daa
sbb
repnz
lcall
mov
iret
cmp
push
adcb
xchg
pop
push
notl
mov
xlat
aad
push
jnp
mov
inc
mov
repz
addr16
pop
ja
ja
movsb
mov
out
pop
cli
lret
inc
push
les
fnsave
and
inc
mov
hlt
cmp
jns
jnp
pop
lods
pushf
sarl
loope
mov
and
fcmovnu
adc
fisttps
idivl
clc
mov
insb
movsl
jbe
xchg
imul
stc
cmpsl
inc
inc
adc
in
sbb
fimull
test
inc
and
xorl
pop
add
sbbb
std
imul
pop
les
xor
dec
push
scas
push
xchg
mov
dec
and
pusha
xlat
xor
mov
fisubrl
test
jbe
mov
push
lret
dec
cs
iret
mov
das
sub
repz
orb
push
sub
and
fwait
dec
push
cli
or
mov
pop
sub
or
sbb
and
sbb
lods
pop
ljmpw
mov
ds
xorl
negl
pushf
popf
jmp
fnstenv
jns
or
pushf
mov
push
imul
jp
cmp
inc
leave
sub
mov
repnz
in
pushf
jno
popf
xchg
adc
ret
cld
add
mov
les
pop
repnz
aam
popf
fsts
pusha
jge
push
fs
cmp
clc
sub
cmp
xchg
aas
xchg
rol
and
push
lods
cmpsb
adc
dec
inc
and
mov
mov
sub
xchg
leave
test
mov
xor
insl
std
adc
jno
xorl
jl
inc
xchg
loope
mov
adc
jge
ret
sub
pop
sbb
into
mov
aaa
mov
and
scas
pop
mov
xchg
inc
mov
push
and
mov
ficomps
das
dec
cmp
data16
xchg
test
mov
mov
outsb
add
mov
sarl
cmpb
icebp
enter
dec
aad
pushl
or
scas
jb
xor
ss
mov
mov
dec
and
das
pop
xor
dec
movsb
test
roll
icebp
aas
call
movsb
addr16
cli
and
stos
push
std
mov
xor
and
aam
jnp
into
dec
inc
sub
sti
xchg
xor
sbb
pop
pop
cmp
andb
arpl
daa
fisubrs
push
arpl
stos
ja
dec
xchg
add
clc
mov
cmpsl
fisttpll
stos
xchg
push
or
cld
or
cmpsb
pop
sbb
cs
imul
into
aas
movsl
pop
mov
fwait
dec
push
sbb
pop
push
jecxz
gs
pop
je
ficomps
mov
nop
jmp
jp
mov
mov
push
and
pop
xchg
xlat
popf
xchg
aas
sub
inc
inc
pop
cs
shlb
out
fdivs
mov
mov
clc
push
fstp
cmpsb
xor
ret
inc
lret
aas
push
dec
leave
mov
sub
imul
xor
add
mov
outsl
mov
test
aaa
inc
push
popf
push
mov
or
xchg
or
sbb
mov
fsts
sub
testl
sub
sub
movsb
sbb
ja
mov
sbb
gs
out
cli
pop
push
ret
mov
push
mov
cmp
loope
adc
sti
movsb
mov
int
add
mov
push
dec
add
xchg
jecxz
stos
fdivr
push
push
jno
push
out
insb
inc
out
push
iret
cld
mov
adc
in
lahf
test
ds
mov
dec
lods
push
jg
call
fmulp
popw
mov
scas
inc
sbb
int3
lea
loope
push
jae
dec
xchg
data16
cwtl
iret
sti
push
test
into
mov
mov
rorl
stos
inc
xchg
inc
push
fisubrs
push
inc
shl
mov
inc
cmc
int3
jbe
loope
sti
or
pushl
jg
xchg
mov
shlb
pop
dec
das
mov
pop
push
mov
push
shlb
push
inc
loope
jns
mov
xchg
pop
fsubs
jnp
pushf
bound
inc
cmpsb
loop
jle
fldt
mov
jnp
lods
inc
sarb
mov
dec
push
dec
stc
lcall
cmp
test
ja
das
andb
xchg
mov
pop
clc
mov
out
cmp
pop
fs
cmp
sub
movsb
pop
add
lods
pop
adc
movsb
push
mov
push
cmp
push
or
xchg
into
repnz
jg
in
xor
add
lock
mov
ljmp
add
inc
mov
fidivrl
jns
mov
xchg
hlt
mov
fistl
inc
push
fidivrs
test
push
popf
xlat
pop
aaa
mov
and
dec
add
lret
cli
inc
fadds
sarl
loop
bound
mov
int3
jmp
into
loopne
lret
call
test
xchg
dec
stc
sahf
dec
imul
jnp
pop
jg
clc
xchg
cld
xchg
cmp
popf
or
in
repz
cld
push
jp
xchg
ret
arpl
movsb
mov
mov
xchg
push
imul
data16
loopne
mov
mov
cmp
mov
imul
add
aaa
sahf
dec
push
js
mov
roll
pop
out
stos
jno
adc
and
pop
loope
repz
pusha
mov
push
jns
sbb
push
push
adc
hlt
xor
pop
bnd
inc
rcll
mov
repnz
call
call
mov
mov
stos
sub
xor
cld
inc
inc
sbbl
fstpl
push
leave
fdivl
xor
loopne
cwtl
xchg
xchg
mov
add
sub
or
sti
das
cmpsb
cmp
pop
inc
cmp
add
xchg
adc
add
pushf
dec
and
mov
adc
sbb
outsb
lret
push
out
adc
lea
xor
loop
test
push
adc
cmc
jns
cmp
dec
and
and
mov
jnp
mov
xchg
enter
adc
scas
adc
mov
sbb
pop
pop
aas
sbbb
lods
jp
cld
mov
push
xor
jge
fidivrl
sub
iret
xor
repz
pop
icebp
push
cmp
xor
cmp
outsb
and
fisubs
and
and
cmp
lods
icebp
andl
mov
pmaxub
imul
mov
add
and
aam
fiaddl
fdivs
pop
je
fistl
mov
loope,pn
movsb
push
mov
jp
mov
pop
testb
lods
repz
push
fdivs
xchg
wbinvd
xchg
repz
push
mov
mov
mov
leave
jge
out
sub
aas
inc
or
lret
ret
mov
fst
cmp
loope
into
cmp
mov
push
add
jl
fucom
repz
lock
in
pop
movsl
ret
add
aas
inc
shll
fnstsw
cli
xor
outsl
add
nop
pushf
pop
xlat
jno
xor
imul
loope
pop
push
sbb
fimull
push
pop
mov
xor
or
and
testb
mov
sbb
leave
push
push
pop
in
mov
orb
cwtl
fcompl
dec
pop
cltd
pop
mov
lret
insb
in
pop
jle
imul
rorl
push
pusha
icebp
fs
cmpsl
or
rep
mov
cld
scas
push
int3
cwtl
sub
pop
loop
ljmp
ror
push
jecxz
pusha
add
imul
add
xchg
mov
push
faddp
aas
pop
stc
jp
jns
enter
sub
daa
mov
int3
fadds
sub
sbb
jecxz
or
aad
pop
jmp
mov
clc
ret
xor
outsl
pop
jbe
cmp
mov
sbb
push
xor
popf
in
jae
push
sbb
lea
add
scas
cld
stos
lods
xor
xlat
imul
push
in
mov
gs
mov
and
push
mov
fildl
lds
push
jns
inc
xor
loope
addr16
lods
pop
imul
vmulss
mov
repnz
add
gs
int
cli
or
popf
jl
pop
out
or
pop
xchg
les
dec
sub
or
pop
add
inc
std
mov
in
rcl
fildl
mov
cmc
mov
sbb
xchg
cmc
adc
loop
lret
pop
mov
xlat
iret
mov
jg
les
nop
dec
push
fwait
jmp
mov
dec
or
int3
dec
mov
push
or
sub
or
add
sub
js
xchg
pusha
push
adc
jmp
jp
shll
aad
frstor
or
scas
adc
xor
cmp
sub
pop
dec
pop
xor
test
lret
in
daa
lcall
imul
and
mov
arpl
sarl
mov
lcall
lcall
repz
popf
mov
out
sub
mov
dec
aam
push
subl
int
ss
sti
shrl
mov
add
pushf
push
add
xchg
xor
pop
jle
mov
and
sbb
out
icebp
and
hlt
or
inc
movsb
fwait
sub
mov
mov
fwait
call
inc
dec
mov
mov
xorb
cld
popf
data16
push
daa
push
lcall
les
sahf
cmpb
add
xchg
mov
pusha
cmp
roll
sbb
pushf
es
pusha
xor
push
stc
adc
inc
xlat
lock
and
ficompl
add
addb
sti
insb
lds
add
ljmp
loopne
test
xor
lods
cmpsl
call
das
add
adc
or
mov
sbb
addr16
inc
pop
jbe
jmp
dec
mov
mov
daa
andl
xor
scas
cmp
aas
mov
in
jmp
ret
xchg
lret
inc
mov
out
mov
or
push
lahf
xchg
cmp
xchg
or
mov
jg
out
jge
cmp
jle
or
int3
push
call
fadds
dec
or
cmp
incl
lods
repnz
push
inc
fsubrl
stc
ss
vpmuludq
stos
cmp
jecxz
cs
push
mov
sub
inc
loop
sub
shll
push
cmp
shlb
pop
or
stos
xchg
xchg
push
sbb
testl
mov
jae
insb
mov
and
push
add
cmc
icebp
adc
lea
cmpsb
ffree
aam
jno
xchg
je
pop
xor
jle
xor
jbe
stos
jl
in
int3
inc
lock
jp
mov
sub
lret
stos
dec
lret
xor
jp
add
xchg
sti
jns
mov
mov
clc
jo
pop
mov
xchg
xlat
stos
inc
mov
jmp
faddl
out
sbb
xchg
call
inc
push
mov
push
xor
hlt
cli
ret
mov
cmpb
mov
lods
lds
add
push
push
fnstcw
mov
fwait
imul
dec
stc
sub
aam
fdivr
mov
xchg
test
sub
repz
mov
mov
enter
test
clc
je
push
cmp
daa
xchg
xor
imull
rcll
and
or
out
sti
cmp
je
jno
rcr
movb
mov
stos
cmp
inc
inc
rsqrtps
pop
pop
shrl
mov
mov
push
ficoml
rolb
or
shll
ja
cmp
loopne
in
add
aam
adc
bound
pop
enter
scas
inc
adc
mov
loopne
pushf
imull
fdivs
test
dec
xchg
mov
xchg
jl
addr16
popf
xchg
jp
div
lret
push
lcall
scas
repz
dec
or
out
mov
cltd
pop
mov
gs
inc
push
dec
ja
in
xchg
adc
and
aaa
inc
pop
mov
outsb
dec
cmpl
inc
adc
xor
scas
ljmp
aaa
insb
ljmp
push
fcoml
xchg
cmp
inc
inc
sub
in
sti
fst
sub
adc
sbb
stos
pop
mov
and
inc
fnstsw
aam
clc
xchg
or
imul
pusha
das
fs
cmp
pushf
add
adc
jmp
loop
mov
repz
mull
sbb
fisttpl
dec
mov
add
pop
dec
je
push
js
rcrb
fs
mov
cmp
xchg
rcrb
push
jmp
shr
push
test
mov
repnz
cld
mov
or
cmp
push
gs
and
ja
popf
pop
mov
mov
test
rorb
shlb
in
sub
int3
daa
ss
sub
adc
aaa
fdivrs
sub
cmc
repnz
shr
add
add
adc
jb
adc
xor
adc
out
jge
xchg
xchg
fld
in
xchg
xchg
cmp
sub
cmp
push
outsl
sub
js
pop
jge
sbb
and
xchg
movsb
fisubrl
mov
clc
dec
cmp
cmp
mov
out
or
push
inc
popf
mov
imul
enter
out
imul
cmc
dec
jle
mov
or
movsb
sub
daa
or
sbb
adc
jo
arpl
fwait
or
ficoms
mov
jns
cwtl
shrl
icebp
mov
jmp
sbb
xor
xchg
xchg
inc
rol
and
jbe
push
cmc
push
addr16
aaa
ds
mov
or
sub
jnp
js
xor
adc
xchg
loop
stc
mov
pop
dec
mov
inc
dec
dec
or
das
imul
jbe
or
pusha
mov
pop
sub
subl
clc
mov
lods
es
ljmp
add
addb
dec
hlt
loop
fcoms
mov
inc
mov
lods
xchg
jle
out
or
inc
lds
sti
popa
rolb
mov
nop
pop
ficomps
xrelease
and
movsb
push
xor
outsb
jnp
popa
std
out
aad
shrl
dec
add
pop
sub
add
dec
das
in
je
mov
sbb
xor
xor
dec
shlb
sub
div
cmpsb
add
or
cltd
mov
inc
inc
lds
movsl
cmp
inc
dec
out
or
sub
mov
jl
xchg
nop
repnz
outsb
ret
mov
xor
js
cli
jns
fidivl
repz
cmp
sub
lock
jne
dec
add
fisubrs
xchg
aam
mov
adc
imul
mov
mov
sbb
data16
lods
and
shll
adc
sbb
jne
mov
lds
stos
ljmp
fisubs
rcrl
mov
and
sbb
pop
mov
xchg
and
jns
scas
hlt
ljmp
fsubr
lret
or
push
xlat
or
push
xor
movsl
sbb
out
lcall
pop
mov
pop
sub
dec
test
inc
js
pop
dec
addb
and
mov
push
jns
and
mov
repz
mov
xor
mov
gs
in
cmp
xchg
sahf
mov
mov
mov
lahf
test
or
xor
xchg
call
rorb
xchg
mov
push
bound
push
cmp
hlt
push
jae
push
cmp
in
and
imul
mov
movsb
int3
push
mov
lcall
cmp
test
jo
and
movsl
push
adc
dec
mov
ret
sub
xchg
dec
fs
mov
fldenv
jo
inc
cli
clc
mov
gs
push
push
fidivl
xchg
rorb
xor
addr16
jg
dec
cs
ret
jmp
add
addr16
mov
decb
js
cmp
cmpsl
pusha
or
inc
add
outsb
out
sti
loope
cmpb
setg
loop
mov
gs
lret
add
pop
jmp
push
std
xlat
sbb
inc
adc
sbb
ffreep
mov
and
aad
lea
add
inc
fldenv
inc
adc
addb
je
dec
xchg
xchg
call
into
fdivrl
in
mov
in
cld
sbb
adc
xchg
fmul
outsb
and
pushf
xchg
xchg
popa
adc
inc
sub
outsl
add
mov
mov
pop
scas
pop
adc
sub
mov
lds
das
pop
mov
lret
and
add
mov
into
dec
adc
xchg
pop
in
js
dec
mov
subl
xlat
sbb
adc
movsl
in
and
stc
jl
aas
fdivrl
inc
mov
mov
nop
add
mov
lret
jae
xor
jecxz
mov
cs
ja
push
jecxz
unpckhps
xchg
mov
mov
shlb
mov
adc
sbb
test
sbb
dec
mov
inc
add
lds
mov
pop
and
cmp
jecxz
negb
dec
jo
cltd
out
or
or
test
adc
jae
adc
dec
negb
pop
xor
inc
cmp
mulb
mov
cli
out
das
in
les
popl
add
xchg
push
push
push
leave
lock
loope
or
dec
xor
sub
mov
lods
andb
test
jle
cmp
adc
xchg
jns
or
lret
in
shll
aad
add
cwtl
clc
jge
cmp
pop
xchg
push
fstp
les
xor
repz
sbb
fwait
sub
dec
dec
dec
hlt
lahf
incb
outsl
push
icebp
xchg
cmp
jno
out
push
mov
lret
out
insb
lahf
pop
jge
fbld
sbbb
movb
cs
into
mov
pop
fstps
cld
cmp
add
add
pushf
mov
dec
mov
lret
dec
test
ds
xchg
std
es
rcr
mov
mov
xor
mov
jno
pushf
test
in
stc
dec
and
pop
mov
lods
lea
fs
cmp
mov
sbb
cmc
xor
das
add
outsb
mov
pop
lock
cmpsl
and
fwait
sbb
loopne
mov
lea
mov
hlt
test
sub
adc
push
fwait
mov
or
mov
dec
push
mov
push
int
decl
ret
mov
imul
sahf
roll
pop
in
shlb
jae
popa
lock
loope
add
mov
lods
xchg
jmp
jp
inc
orl
rol
cmp
idiv
shll
cs
or
int3
movsb
pusha
mov
dec
pop
push
push
pop
or
ljmp
repz
pop
cmpb
cs
andl
shll
inc
cmp
push
adc
cvtpi2ps
jge
imul
filds
es
mov
cmp
sub
cmp
popa
loop
shr
mov
jecxz
cmpsl
jle
push
movsb
imul
subb
sti
es
out
test
in
int3
adc
adc
mov
sbb
cs
inc
xchg
push
pop
lods
shlb
cmp
jmp
or
push
loop
in
jge
test
jnp
xor
sahf
jb
push
mov
xchg
clc
aad
mov
loop
stc
adc
imulb
ds
cmpsl
hlt
or
aas
and
ds
cld
loope
aad
adc
out
jp
shlb
and
shrl
or
ds
pop
push
mov
xchg
cld
mov
push
and
imul
insb
fucomi
inc
les
clc
cld
dec
fbld
fisttpll
mov
outsl
inc
and
mov
dec
ja
aam
loopne
jl
inc
push
divb
std
and
sbb
push
xchg
pop
mov
orb
sbb
xor
pop
loop
pop
stos
cmpsb
test
insb
mov
cmpsb
outsb
push
adc
xchg
imul
dec
xchg
sub
push
cmp
imul
xchg
or
cmp
ss
outsl
pop
sub
and
adc
cmpsl
xchg
test
loopne
add
sbb
sbb
push
inc
mov
lcall
or
jb
in
filds
int3
mov
lea
cltd
jle
xchg
aas
sub
sub
jnp
adc
sbb
jnp
mov
pop
lret
pusha
jne
pop
cmc
sub
sbb
push
in
jle
lret
push
jnp
in
cmp
mov
cmp
lret
out
mull
xor
shll
insb
xchg
mov
jg
inc
push
in
and
in
adc
iret
add
adc
movsl
add
test
sarb
mov
int3
push
stos
mov
popf
daa
sbb
jg
fwait
loopne
lea
ds
mov
sub
aas
mov
dec
jl
mov
xchg
mov
xchg
filds
sti
dec
pop
pop
or
aad
sub
xchg
shlb
popa
sti
push
cltd
inc
mov
jmp
add
loop
pop
movsl
aas
pop
iret
test
cmpsb
adc
movsl
push
sbb
push
fsubrl
shrl
cmc
xchg
stos
sub
popf
gs
jo
insb
or
scas
jno
iret
pop
stc
push
sbb
push
stos
in
sti
mov
movsl
ss
inc
inc
mov
rorl
out
push
sub
push
imul
sub
in
cs
fnsave
or
pop
push
fisttps
sub
jb
lret
mov
testl
mov
cmpb
jp
mov
movl
outsl
jge
aas
sub
pop
inc
das
repnz
in
insb
cmovnp
hlt
or
sub
jp
sub
neg
lret
pop
mov
xchg
sahf
mov
xchg
xchg
movsl
rcrl
faddp
jle
mov
push
leave
and
mov
sbb
incb
stos
sub
js
xor
dec
xor
mov
cmp
cmp
sbb
gs
adcb
xor
pop
fdiv
mov
sub
pop
pop
lret
xor
sub
jbe
pop
cmp
pushf
mov
cmp
cmpsb
push
pop
jp
dec
push
cmp
push
or
loop
and
and
or
lock
outsl
sbb
test
or
xor
cwtl
inc
sub
or
repnz
add
lods
aaa
adc
mov
fldt
xchg
sbb
imul
lods
pop
movsl
fsubl
test
loopne
mov
inc
dec
inc
push
sbb
insl
mov
push
sbb
adc
das
inc
cli
xchg
inc
xchg
adc
jne
push
outsb
scas
inc
loop
stos
pop
push
sub
fcmove
inc
ds
push
outsl
fxch
cli
mov
xchg
push
inc
and
lods
adc
pop
js
adc
fsubr
das
mov
insl
aas
sbb
push
jae
js
fbld
cltd
jno
jl
dec
jne
sbb
imulb
add
xor
prefetch
or
add
mov
sbb
sbb
in
pop
push
lea
jbe
sbb
mov
cmpsl
repnz
sbbb
and
sar
pop
push
xorl
xchg
pop
and
out
xchg
mov
sbb
add
adc
ja
rorl
dec
rorl
mov
push
fiadds
push
fildl
pop
jnp
sbb
dec
cmpsb
cmpsb
movsl
rcrl
xchg
test
mov
pop
bound
adc
lahf
add
xchg
and
cmp
pop
mov
add
lds
iret
mov
and
loope
dec
jmp
cmp
insb
push
stos
add
lret
cmp
jne
mov
shlb
ds
adc
or
shll
ja
lea
dec
icebp
das
jo
arpl
roll
aas
call
sarb
fidivl
xchg
xor
xor
cmpsb
cmp
xchg
xchg
sti
fmull
mov
pop
jmp
push
cmc
dec
repnz
mov
sub
ja
sub
ret
sbb
mov
in
stc
icebp
ljmp
mov
fnstsw
enter
xor
push
jecxz
outsl
xchg
adc
pop
mov
or
lock
sub
jno
leave
das
and
push
rcl
xor
inc
imul
sti
into
pop
sbb
lahf
add
lahf
std
subb
jg
push
sub
and
lods
xor
pop
pop
jl
jno
fisttpl
jbe
dec
fistps
pushf
aad
mov
push
mov
scas
imull
imul
mov
in
adc
pop
pop
andb
jle
icebp
sub
adc
fwait
clc
and
arpl
cmpsb
inc
adc
in
mov
jbe
cli
mov
inc
cmp
cld
pop
idivb
ret
push
mov
mov
ds
sarl
mov
dec
loope
cmp
adc
xchg
xchg
sub
ljmp
dec
or
in
mov
pop
cli
xor
pop
scas
ds
int
lods
neg
add
lahf
xor
sub
xor
cmp
call
xchg
cmp
jmp
sub
mov
xchg
in
xchg
and
outsl
cs
outsl
and
jbe
cmp
in
out
adc
movsb
jno
pop
push
sub
jae
addr16
xchg
xor
scas
ds
mov
cld
lea
rorb
push
aaa
dec
mov
add
notl
aas
add
enter
in
inc
int3
or
and
cmp
or
mov
jnp
cltd
rcl
leave
insb
es
sahf
mov
stc
add
mov
in
mov
lds
rcl
jg
xor
jns
jns
push
daa
test
std
fnsave
fwait
mov
or
nop
xor
mov
enter
xorb
movsl
pop
and
xor
push
push
mov
int3
shll
test
flds
mov
aaa
popf
xor
jge
arpl
in
fcoml
push
or
std
adc
fmuls
outsl
or
push
pop
or
popf
pop
and
jae
lcall
out
shrb
xchg
jl
ja
jl
outsb
mov
ss
leave
dec
inc
in
push
dec
inc
xchg
popf
je
and
add
dec
cmp
in
loope
stos
scas
fiaddl
shlb
je
mov
xor
in
or
add
xor
negb
mov
das
sbb
add
cmp
adc
mov
fcomip
pop
inc
push
test
pop
inc
pop
cs
cltd
mov
stos
pusha
pushf
jmp
xchg
lock
jo
das
or
pop
mov
loopne
add
sub
adc
lods
std
call
out
fdivl
enter
dec
cmp
cwtl
dec
jae
imul
jbe
andl
pushf
pop
lret
out
mov
cmp
imul
or
lret
push
xor
std
sub
adc
inc
out
xor
pusha
shlb
out
jne
int
cmp
jns
jb
mov
andb
or
hlt
mov
stos
adcl
mov
sahf
insb
idivb
enter
inc
push
shrl
scas
enter
pop
hlt
jecxz
inc
loop
movsl
sub
sub
out
aad
rorb
iret
and
lahf
cmp
leave
aas
icebp
xchg
xchg
pusha
and
xor
push
inc
div
dec
add
cmp
adc
mov
dec
testl
dec
lcall
sub
cmp
addr16
inc
leave
shrb
mov
mov
test
dec
and
sbb
addr16
inc
aam
xchg
enter
lea
loopne
test
mov
mov
mov
inc
fstl
das
push
lds
cmp
out
push
xor
lahf
ds
xlat
xchg
rcll
icebp
sub
and
sub
orps
lea
inc
inc
lods
inc
cmpsb
dec
fadds
xchg
sbb
fwait
rcrb
mov
xchg
push
popa
shlb
arpl
insl
test
and
rorl
popf
mov
or
outsl
dec
js
or
push
pop
mov
aas
out
cli
sahf
je
add
or
fisubrs
pop
add
push
movsl
jne
inc
dec
inc
data16
jnp
into
and
jmp
sbb
pushl
arpl
dec
mov
out
popf
ret
test
mov
lahf
popa
daa
aam
pop
xorl
orl
bound
xor
cmp
pop
cmpsb
jnp
xchg
shrl
mov
cmc
and
jae
mov
repz
mov
push
jle
mov
leave
mov
add
jae
adc
sbb
or
push
mov
jns
jle
sti
aaa
das
out
push
nop
xchg
hlt
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
pop
sahf
push
fistl
addl
mov
push
xchg
int
mov
pop
enter
outsl
add
xor
rcrl
sbb
mov
insb
ficoms
add
add
jmp
mov
loope
jle
fisubrl
push
dec
cmp
push
dec
mov
pop
arpl
pop
jl
jg
test
js
ja
loope
in
cmp
mov
xchg
lock
cwtl
mov
and
xor
test
popf
orb
pop
pop
enter
sub
sbbb
int3
scas
sbb
scas
xlat
add
std
sub
sub
xlat
xorl
aaa
jg
daa
or
dec
es
push
incb
insl
push
mov
ss
leave
cmp
lock
inc
call
mov
rcll
in
nop
sarb
mov
sti
xchg
decl
xchg
aad
loopne
sbb
jne
dec
aam
lret
adc
sub
adc
cmpsl
mov
enter
jnp
cmpsb
lock
sub
xchg
cli
fsubp
test
repz
fsubr
mov
popa
pusha
jle
cmpsl
jg
jg
push
inc
addb
in
out
push
aad
inc
outsb
lock
mov
and
cmc
jbe,pt
dec
xchg
push
aas
lret
or
cld
stos
inc
scas
inc
ror
fidivrs
xlat
mov
outsl
dec
insb
ret
mov
mov
lea
aas
addr16
int
les
imul
cmp
popf
cmpsb
xor
cmp
pop
pop
fcmovb
jmp
xchg
dec
xor
add
ficoml
test
loopne
andl
xor
xchg
test
sub
fs
rcl
sub
pop
aad
ljmp
int3
dec
dec
outsb
push
mov
mov
inc
inc
hlt
or
sub
push
fxch
test
or
adc
cld
xchg
adc
pop
mov
das
mov
jbe
pop
xlat
cmp
push
adc
testb
mov
sbb
xlat
std
outsb
lret
fwait
cmp
jae
push
out
push
push
hlt
jge,pn
dec
ss
cwtl
imul
and
mov
imul
jb
push
or
add
sbb
jbe
jecxz
jle
popa
push
mov
mov
cltd
adc
sbb
data16
lea
push
inc
out
cltd
incl
adc
call
add
xchg
aas
les
inc
cmp
sarl
orb
pop
in
movzbl
mov
mov
test
test
cmpsb
and
push
notl
jg
push
mov
push
and
into
sbb
jo
rorl
ss
stos
mov
push
cltd
subb
js
xchg
fld
dec
mov
mov
and
mov
je
insb
nop
icebp
fcomps
adc
icebp
or
ss
jne
xchg
and
arpl
xor
pop
ret
sbb
or
push
popf
fdivl
sub
cmpsl
mov
xchg
fimuls
call
mov
inc
cmc
jl
das
inc
or
aam
adc
dec
adc
or
xorl
mov
aam
rcl
mov
cmp
iret
xlat
rclb
sbb
faddl
daa
jp
mov
pop
add
inc
or
mov
xor
mov
int3
cmp
sarl
add
sti
aad
jne
adc
test
sbb
push
pusha
testb
cmp
loop
loope
stos
lods
xchg
cmc
xchg
jae
or
cmp
dec
movsb
sub
push
js
or
cmp
ss
lret
and
pushf
xor
scas
outsb
cmpsb
inc
xchg
pop
push
xchg
mov
popa
or
pop
xor
adc
stos
jmp
insb
adc
sub
lahf
sarb
xchg
adc
in
mov
pusha
dec
pop
and
sub
stos
in
push
mov
xchg
or
pop
rolb
sub
cmpsb
mov
jne
shll
xchg
inc
leave
cmp
dec
cmp
jl
adcb
fnstsw
lret
icebp
push
ss
cmp
pop
add
and
adc
bound
jge
fidivs
cli
ds
inc
ds
adc
cmpsl
sti
mov
jns
mov
push
xchg
fcompl
adc
mov
pushf
shrl
aad
imul
dec
jecxz
mov
xchg
mov
ficoms
int
mov
fistps
ds
or
daa
sub
sbb
pop
adc
mov
test
mov
lds
dec
icebp
sub
pusha
outsb
mov
int3
sarb
pop
pop
add
fisubrs
je
ds
sbb
mov
sbb
loopne
push
fcmovb
test
add
add
mov
in
and
test
fs
add
or
push
adc
aaa
inc
cli
xor
or
mov
je
or
xchg
mov
cwtl
gs
and
add
and
lods
gs
out
shlb
mov
mov
enter
outsb
xor
push
es
aaa
adc
cs
mov
xchg
fisttpll
jb
sti
dec
jecxz
icebp
je
fdivr
xchg
mov
dec
std
out
xchg
icebp
cmp
out
mov
mov
cs
mov
dec
mov
push
leave
loopne
jle
fists
aad
adc
or
ljmp
out
xchg
sub
or
sbb
lret
bswap
xchg
mov
mov
xor
mov
add
pop
jp
sti
rcrb
dec
lcall
ljmp
push
mov
mov
mov
xchg
mov
inc
mov
jmp
xchg
xchg
dec
xor
jmp
out
or
jg
ljmp
pop
add
add
adc
adc
and
int3
sub
mov
add
cmp
jl
fbstp
jecxz
dec
lret
xlat
and
pop
adc
mov
or
inc
cmpsl
std
in
daa
sarl
rsqrtps
lock
mov
out
lret
fwait
popf
test
jo
or
and
roll
icebp
push
int3
cmpsb
cmp
or
or
stc
lods
dec
pusha
xor
cli
sti
aas
aam
insb
pop
dec
lret
push
mov
les
and
mov
popf
cmp
inc
in
jl
pop
into
popf
dec
push
movsb
dec
sbb
popl
mov
shrb
je
jae
mov
jo
cmp
hlt
sub
add
pop
jmp
aam
movsb
into
pushf
cwtl
mov
rol
and
mov
add
nop
pop
icebp
decb
fbld
add
mov
nop
bound
pop
out
jl
jge
out
push
fsubrl
loop
jp
cmpsb
pop
sbb
jnp
inc
pop
push
icebp
cmp
lret
sti
sarb
mov
add
fcmovnu
sbb
sar
push
arpl
push
pop
or
das
daa
aaa
loopne
aas
dec
or
out
and
push
jmp
xchg
fs
push
aaa
add
cmpsl
leave
mov
lret
adc
lea
pop
shlb
popa
fsub
pop
push
mov
jecxz
or
std
mov
lock
xchg
insb
aam
xlat
mov
in
data16
and
addr16
push
push
mov
outsl
sub
andl
jae
sbbb
mov
and
jp
sub
data16
sbb
mov
xor
add
andb
xor
in
cmc
sub
insl
ds
jnp
popf
testb
jle
subb
addr16
mov
in
out
in
out
jns
inc
sbb
out
pop
repnz
lret
sub
sub
mov
in
inc
push
mov
adc
xchg
negb
sbb
mov
shll
add
daa
xor
cltd
jbe
adc
aaa
xchg
mov
shll
fldl
data16
sbb
call
sbb
int
adc
sub
xchg
inc
pop
xchg
pusha
testl
aam
nop
jnp
rorl
mov
mov
xchg
stc
lock
push
lret
or
or
outsl
jno
test
addr16
fistps
xchg
insb
jo
pop
test
es
std
inc
fs
insl
jge
push
xchg
daa
mov
hlt
inc
lods
mov
jecxz
push
in
adcb
pop
mov
aad
jae
or
mov
jne
mov
sbb
add
inc
stc
sbb
sahf
out
mov
stos
fdivrl
fadd
inc
pop
mov
adc
xor
fistl
and
rcrb
adc
test
mov
pop
repnz
mov
jge
fisubrs
mov
or
xor
ja
and
add
xchg
push
inc
mov
lret
jne
cld
test
jo
addr16
into
dec
pop
arpl
sbb
shr
sbb
mov
push
pop
das
mov
xor
sbb
rolb
test
xor
sub
cmp
jl
mov
hlt
pop
or
inc
xchg
lcall
mov
xor
cmc
push
xor
imul
add
pusha
mov
push
xchg
test
push
mov
fcmovnu
inc
mov
and
sahf
cmp
inc
data16
enter
shlb
mov
out
push
rcrb
pop
sub
frstor
ret
jne,pn
mov
add
and
sub
mov
mov
push
dec
mov
inc
shlb
rcrl
js
out
add
pop
data16
push
xchg
int
mov
sbb
rcl
lahf
shll
cmc
or
jge
push
repnz
sahf
imul
es
add
pop
stc
rcr
jae
std
pop
sbb
insb
ret
scas
push
xor
pop
arpl
cmpsb
xchg
das
loope
in
jmp
push
sbb
mov
shlb
push
fadd
or
jo
insl
insb
fnstsw
aaa
jmp
dec
cmp
pop
lcall
push
es
pop
mov
mov
dec
mov
in
sub
jg
or
or
and
jb
sbbl
lds
xor
mov
sti
jl
stos
pop
rcrl
cwtl
arpl
mov
pop
push
push
mov
in
movsb
js
jb
rcr
std
rclb
clc
inc
insl
pushf
int
mov
xchg
pop
in
nop
or
or
lret
stos
mov
dec
xorb
jb
or
jo
lret
and
push
xchg
cmp
jg
sti
sbb
cld
hlt
jno
call
or
push
mov
and
mov
pop
bound
mov
fldenv
mov
popf
nop
jl
outsl
stos
and
test
xchg
push
adc
mov
push
insb
popf
jp
jo
xor
pop
add
repnz
pop
jns
xor
scas
insl
inc
iret
push
je
sbb
add
xchg
les
sub
adc
insb
push
in
repz
cmpsl
inc
sub
daa
cmp
sbb
cmp
out
lcall
dec
je
mov
jge
mov
mov
arpl
shl
int
mov
mov
push
mov
push
test
lock
incb
stos
cltd
rcrb
mov
cmp
dec
or
gs
and
jl
cmc
mov
cmp
jecxz
fwait
cltd
jb
int3
icebp
dec
dec
sti
xor
inc
mov
xor
imul
shrb
scas
adc
test
push
test
mov
out
cwtl
out
iret
les
and
les
push
push
mov
sub
fcmovne
ljmp
or
in
sbb
popa
ficompl
rorl
xchg
or
test
dec
imul
add
and
dec
clc
mov
sbb
aaa
dec
cmp
sbb
adc
fsubrs
jns
adc
mov
adc
push
or
mov
cmp
imul
iret
test
cmpl
aaa
pop
cltd
mov
mov
mov
adcb
cmp
stos
lods
cmpsb
mov
sarl
mov
jae
and
adc
int3
jecxz
ror
dec
xchg
ljmp
js
push
fstps
pop
and
add
pop
mov
clc
ret
mov
pop
enter
xchg
dec
and
jecxz
jg
jbe
mov
lods
sbb
adc
dec
xor
cmp
or
jp
or
shll
pop
jmp
test
into
imul
pop
dec
in
je
cmp
xor
cmp
inc
sub
jp
or
fidivrl
outsb
mov
nop
mov
xor
std
int3
rorb
cmp
enter
inc
and
rorb
das
ja
cmpb
mov
and
add
maxps
pusha
jbe
mov
jo
or
into
xor
ds
inc
cmp
mov
scas
mov
and
rorl
inc
idivl
add
add
clc
nop
mov
out
mov
push
jp
lahf
jl
int3
scas
xchg
loopne
jae
pushf
cmpl
xor
dec
mov
or
cs
aad
in
inc
scas
rcrl
pop
cmp
xor
xor
inc
es
xchg
dec
cld
push
fdivrp
or
jle
xchg
lcall
inc
and
out
rorl
adc
gs
clc
or
insb
lahf
push
jo
inc
popa
imul
mov
push
pop
ja
dec
mov
rorb
sub
in
orl
scas
jo
mov
push
addl
mov
icebp
inc
push
fnstenv
dec
rcll
mov
xlat
pop
pop
adc
mov
arpl
out
push
jmp
faddl
push
inc
out
adc
dec
in
pop
pop
fwait
subl
adcl
fisubrs
sarl
and
repnz
sbb
arpl
cmp
out
pop
shll
push
shrl
js
xchg
stos
sbb
ljmp
pop
sub
dec
movsl
add
cld
xor
mov
das
inc
pusha
leave
mov
xlat
dec
stos
adc
xor
adc
orb
inc
jbe
xchg
pop
pop
jmp
adc
cmp
cld
loop
mov
mov
imul
out
cmp
insl
pop
data16
sub
movsl
push
test
out
imul
hlt
adc
lahf
imul
aad
mov
aad
adc
sub
aam
push
adcb
adc
sbb
jecxz
fstpt
ss
repnz
and
fstpt
or
cwtl
jne
cli
adc
xchg
rcl
adc
cld
in
push
ds
dec
mov
or
hlt
out
pusha
push
aaa
xchg
push
rcrl
pusha
sub
out
xchg
sub
cltd
adc
subl
fldcw
add
loop
add
push
xchg
out
lock
pop
ljmp
pop
scas
pop
xchg
sbb
cmc
pop
or
mov
jb
jb
mov
xchg
rcrb
adc
in
out
ret
imul
hlt
repz
mov
call
cmp
mov
lcall
test
push
inc
push
insb
bound
mov
fwait
insl
fwait
xor
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
mov
out
add
add
add
add
xor
add
rclb
rolb
add
add
push
push
inc
push
mov
lret
mov
or
push
loope
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
