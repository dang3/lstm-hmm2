push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
sub
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
repz
mov
jle
cmp
pusha
push
and
mov
push
out
mov
mov
imul
lret
in
outsb
xchg
cmp
sub
and
inc
sbb
sti
divb
push
out
cs
das
jnp
out
or
cmc
scas
add
mov
cmp
pop
xor
xor
scas
jl
adc
sub
sahf
lahf
cmc
ret
test
sub
jmp
sbb
pop
cmpsl
xchg
icebp
lods
push
pop
stos
and
icebp
sbbb
aas
aad
cltd
fnstcw
inc
dec
or
cmp
xlat
enter
mov
repz
lret
cwtl
inc
pop
fwait
and
push
shrl
xchg
in
loopne
mov
pop
add
das
mov
movsl
inc
shrb
jne
inc
fcompl
ficoml
std
popa
push
cmp
lahf
pushf
mov
push
je
loopne
add
jnp
loope
pop
mov
jge
cmp
xchg
les
inc
xchg
jmp
fiaddl
nop
xor
adc
sub
sub
rolb
lret
ficoml
dec
push
mov
xor
jb
loopne
sub
mov
mov
push
mull
in
out
add
pop
and
cmp
bound
cmp
addl
arpl
and
xchg
sbb
orb
sbbb
gs
movsb
cmpsb
xor
or
jg
add
xor
mov
ret
cmpl
addr16
push
pop
or
jo
aad
xor
enter
xor
lods
cmp
cld
xchg
push
outsl
fsubrs
les
iret
insb
out
fstl
sti
mov
pusha
ret
mov
insb
insl
test
popf
fsubrl
pop
pop
mov
adc
lcall
add
cmp
in
lret
cmp
or
cld
xor
icebp
fcmove
je
jg
ds
cmp
cmp
movb
in
leave
je
fs
xchg
repz
pop
push
add
fsubrl
rorl
and
enter
bound
aad
lds
mov
xchg
movsl
notb
xchg
pop
xchg
shr
insl
imul
jo
arpl
fcmove
add
addl
and
adc
dec
mov
add
xchg
fdivrl
ror
jb
mov
pop
in
inc
cwtl
jo
nop
cmp
inc
dec
mov
cwtl
push
cmp
xor
pop
sbb
pop
outsb
mov
xchg
push
out
push
out
dec
dec
add
pop
fs
push
cli
xor
out
or
mov
and
repnz
addl
enter
or
or
xorb
cmp
jno
imul
das
mov
mov
inc
mov
dec
lret
ljmp
ljmp
jecxz
icebp
incl
dec
add
sub
xchg
mov
or
insl
xor
pushf
dec
or
mov
jmp
stc
xlat
aad
or
pop
push
sub
movsb
xor
loope
dec
adc
cmp
loopne
enter
pop
popf
lahf
enter
dec
icebp
mov
test
and
xlat
loopne
adc
add
xchg
adc
cltd
or
mov
loope
mov
cmc
pop
popa
jne
mov
arpl
in
mov
jle
xlat
sbb
adc
std
rcrb
in
out
sbb
fldcw
bound
fsubrs
sti
mov
cmp
shll
push
out
data16
mov
sahf
push
lods
mov
in
and
rorl
hlt
aad
shlb
mov
rcrb
testl
xchg
jecxz
push
fwait
push
xchg
push
push
icebp
cmp
out
adc
fst
dec
xlat
cmpl
mov
bound
and
sti
loop
mov
xor
fldl
push
out
and
xor
sbb
and
jo
and
mov
add
cmp
ds
sbb
mov
stos
fs
inc
aam
xor
scas
lahf
stos
push
xchg
push
mov
inc
adc
dec
push
xchg
mov
inc
dec
roll
sarl
cmpb
inc
jne
popa
in
lcall
sbb
andnps
xchg
xchg
call
sub
test
and
aam
and
and
sbb
outsl
sbb
scas
test
lret
sbb
jae
fs
xchg
gs
xchg
out
adc
jmp
mov
pop
adc
pop
lods
test
cmp
or
cld
sbb
mov
mov
cmp
subl
and
rcll
shr
addr16
stos
and
inc
xchg
mov
leave
gs
addr16
mov
cltd
loop
mov
inc
movsb
push
ret
add
cmpsl
scas
add
mov
data16
mov
dec
and
jmp
lcall
aad
out
rclb
sbbl
fildll
inc
hlt
push
es
push
mov
cld
cmp
shrb
push
jae
sub
int3
mov
xchg
inc
pop
or
jns
std
add
xchg
clc
mov
mov
iret
mov
mov
jo
mov
pusha
test
or
and
andl
icebp
loopne
xor
in
mov
lock
divps
daa
pop
push
or
add
lahf
mov
scas
mov
mov
jbe
out
in
sbb
in
leave
mov
pushf
mov
or
lret
rcrl
mov
out
adc
daa
imul
lret
push
call
mov
orl
outsb
sub
lods
and
xor
mov
lret
scas
add
out
lret
int3
sub
jne
testl
push
inc
mov
pop
test
rol
mov
movsl
lea
mov
in
ret
scas
ret
nop
loop
sub
repnz
cwtl
iret
mov
and
push
adcl
sahf
lret
xor
jmp
test
pop
loopne
xchg
mov
inc
scas
and
sub
shll
mov
mov
cmc
cmc
or
shrb
jl
js
sbb
fdivp
imul
mov
push
jo
in
pop
mov
xor
sub
cld
adc
rclb
cmp
scas
sub
jg
xorb
inc
or
out
adc
xchg
outsl
dec
pop
inc
cmp
rorl
jno
loopne
and
mov
into
push
lret
and
fsub
fucompp
dec
xcrypt-cbc
cmpsl
push
subb
xchg
jnp
insb
sub
or
outsb
adc
xor
cltd
cmpsb
mov
std
cmp
out
jecxz
jo
fwait
in
add
mov
stos
rcll
pop
cmp
push
ja
pop
adc
jl
ljmp
mov
push
cmpsb
cltd
jmp
imul
adc
lcall
aad
inc
jnp
jmp
xchg
ljmp
cmp
jnp
shll
rorl
pop
adc
xor
ja
mov
push
or
div
lahf
inc
xchg
insb
arpl
outsl
mov
push
sbb
add
and
sarl
or
mov
imul
fmull
mov
cmp
mov
cltd
adc
push
hlt
sub
xchg
cmp
xor
insl
pop
add
push
add
and
enter
gs
push
mov
mov
fcompl
xchg
xor
insb
fwait
gs
cmp
mov
jmp
mov
cmp
cwtl
pushf
stos
mov
insl
adc
arpl
mov
push
out
mov
adc
jmp
jns
ja
std
cmp
inc
sbb
mov
jne
lcall
repnz
iret
push
add
lret
pop
shr
jp
cs
pop
dec
push
movsl
xchg
sarb
mov
inc
pop
call
push
sti
rorl
push
cmpsl
cmp
xchg
gs
addl
inc
push
jo
adc
or
mov
xor
add
inc
push
mov
and
out
push
mov
stc
dec
dec
in
mov
stc
and
mov
mul
adc
pmaxub
add
pop
pop
scas
test
xchg
mov
mov
push
sbb
mov
fwait
aam
js
push
mov
push
xchg
test
mov
clc
call
test
xor
inc
loop
pop
ret
push
stc
adc
imul
push
mov
int
inc
testb
pop
push
pop
ljmp
idivb
add
lods
mov
sbb
out
gs
jne
add
mov
pop
mov
xchg
loope
inc
out
xchg
lret
je
ja
jns
nop
mov
mov
inc
sbb
xchg
push
inc
in
xchg
push
lock
incb
aam
arpl
fs
or
xchg
std
xchg
in
dec
jo
loopne
dec
sub
lock
pusha
cld
mov
sahf
pop
leave
psrld
mov
sbb
xor
mov
mov
andb
cwtl
push
idivb
fcoml
inc
jbe
jbe
jno
add
sbb
movsb
or
les
iret
pop
pop
add
mov
mov
out
ficoml
jmp
jmp
pusha
push
arpl
dec
add
xor
fidivrs
cmp
and
loopne
movsb
mov
es
aam
push
outsb
loop
push
pusha
dec
int
xlat
xor
xor
or
repz
mov
push
dec
add
jnp
aaa
dec
add
push
lods
mov
mov
mov
xor
mov
sbb
arpl
mov
mov
jle
push
push
inc
outsl
or
test
hlt
test
mov
xor
push
rcll
and
mov
sti
inc
jp
repnz
cmp
and
jl
lods
movsb
stc
jge
and
mov
outsb
lcall
scas
pop
popf
scas
jg
imul
pop
repnz
pusha
lock
pop
cmp
jb
mov
jg
or
jl
roll
fnsave
mov
in
int3
cwtl
cmp
xchg
arpl
pop
jbe
mov
outsb
in
divb
sbb
sbbb
or
mov
fisttps
fistps
cld
sbb
cmp
dec
repz
test
jo
pop
dec
cmc
push
int
mov
push
mov
xchg
pop
add
push
pop
sub
ss
adc
mov
dec
addr16
or
xchg
in
clc
data16
lods
jae
lods
and
pop
stos
out
add
enter
cld
lret
lock
jnp
sub
adc
jae
xchg
adc
pop
cmp
cli
subl
out
mov
nop
push
xor
outsl
mov
jae
ja
dec
das
and
xchg
ljmp
sbb
pop
aam
shrl
int3
movsb
mov
fs
add
mov
cmp
push
sub
sub
std
mov
outsb
mov
xchg
pop
outsb
sub
push
out
inc
iret
lea
push
or
or
push
inc
jns
or
adc
cmpsl
iret
clc
neg
je
sbb
test
testb
pop
mov
inc
mov
negb
mov
add
cwtl
daa
inc
aam
dec
xchg
jb
loopne
cmp
stc
mov
xchg
adc
pushl
xor
or
lahf
stos
shl
enter
sbb
ljmp
out
or
repz
push
jae
dec
lret
sbb
sbb
push
pop
lock
dec
std
jecxz
ljmp
add
pop
in
mov
cmp
sub
xor
or
ljmp
imul
xor
add
sub
pop
mov
cwtl
pusha
and
enter
mov
in
in
sbb
push
add
adc
push
data16
pop
ret
cld
adc
inc
or
inc
jb
pop
xchg
and
loope
mov
rorl
and
adc
dec
ja
push
call
push
mov
adc
adc
pop
inc
xlat
inc
out
aas
mov
dec
push
dec
xor
in
or
and
movsb
sbb
mov
dec
test
fidivrs
fisubrs
xor
scas
adc
and
into
movsb
stos
xchg
ret
mov
push
test
add
jp
xor
push
mov
mov
pushf
movsb
push
adc
jl
imul
aaa
or
ja
add
lret
inc
imull
dec
clc
jecxz
or
cli
ljmp
jecxz
add
xchg
jp
jae
push
xchg
scas
mov
mov
push
popa
rcrl
xchg
jmp
mov
enter
xor
adc
sub
jle
sub
aad
sub
out
xlat
or
scas
pop
add
jmp
xor
and
sarl
ljmp
sbb
ret
add
cwtl
orl
sbb
pop
imul
and
add
rol
loopne
cwtl
sbbb
popa
daa
dec
std
jo
test
mov
fldl
mov
fs
test
add
mov
test
sti
sbb
stc
fnstcw
pop
daa
jg
pop
xor
adc
adc
jecxz
jb
jl
and
out
push
mov
rcrb
xchg
xlat
sub
clc
sbb
scas
fstps
xor
push
mov
pop
sbb
out
in
push
cmp
jo
dec
outsb
mov
pop
fucom
iret
mov
mov
adc
and
daa
pop
daa
xor
fidivrl
inc
mov
jne
sbb
aaa
outsb
sbb
mov
fildll
jne
jo
insb
scas
cmp
sbb
inc
fdivrl
push
stc
inc
jae
adc
cmc
mov
in
add
sbb
add
scas
ret
clc
incl
cltd
lcall
dec
sti
pop
in
cmp
and
out
sahf
mov
lods
clc
repnz
push
pop
adc
loope
add
data16
roll
xchg
imul
popa
rolb
inc
rorb
das
xchg
sbb
mov
lods
xchg
imul
in
imulb
pop
js
push
mov
dec
mov
lds
ljmp
sbb
cmp
dec
jl
movsb
inc
mov
mov
jg
mov
dec
daa
xor
bound
jg
cs
xchg
out
test
sub
xchg
mov
jmp
xorb
jl
cmpsb
mov
fisubrs
cmp
and
stos
sbb
sbb
cmp
stos
mov
lret
lahf
shlb
sbb
mov
push
cmp
mov
mov
add
fnstenv
inc
or
xor
movsb
out
les
outsl
loope
pop
popf
dec
cmc
or
push
lahf
into
dec
aaa
inc
clc
xor
ds
loopne
xchg
test
cmp
mov
addr16
push
sahf
dec
pop
out
ljmp
sbbl
xlat
dec
popa
sub
mov
push
cmpsb
dec
inc
mov
inc
pop
inc
cltd
mov
cmpsl
push
sbb
loop
add
pop
dec
pop
imull
lods
lock
adc
mov
jmp
scas
xor
or
dec
mov
cmc
sub
jg
inc
shrb
aam
movsb
cmp
popa
rclb
add
sbb
ljmp
xchg
mov
aaa
lret
push
and
pop
mov
test
or
addl
pop
rcll
jge
sbb
lret
jne
and
lds
int3
mov
call
cmp
pop
jo
fcoml
xchg
testb
inc
addr16
flds
jecxz,pt
or
adc
imul
cmpsl
fidivrl
adc
push
mov
call
jnp
icebp
xchg
in
sbb
jbe
aas
cmc
mov
outsl
aam
dec
cmp
adc
scas
scas
dec
scas
int3
inc
mov
fwait
lea
scas
inc
push
pop
mov
xchg
scas
mov
call
pusha
dec
aas
cmpsl
and
cmp
sbb
or
out
jo
push
cmp
roll
push
ss
push
addl
outsb
push
xchg
cmpsb
lcall
dec
add
add
adc
daa
jl
movb
ret
mov
lcall
enter
repz
dec
imul
jnp
lods
mov
call
in
lahf
inc
lods
dec
mov
cmp
jmp
jle
mov
adc
dec
stc
movups
fildl
test
movsl
sbb
cmp
shll
aam
cmpsl
inc
std
mov
or
mov
fst
add
in
inc
xlat
hlt
dec
addb
pop
sbb
adc
and
das
pop
dec
adc
mov
js
jo
sub
sbb
and
and
movsl
inc
push
mov
lods
jbe
leave
push
inc
rorb
mov
xchg
dec
jb
dec
jg
stos
mov
sbb
pushf
in
pop
lods
pushf
adc
cli
xor
ss
dec
inc
adc
mov
and
stos
popf
jmp
loop
lahf
sbb
xor
dec
cli
sahf
ljmpw
xrelease
repnz
cmp
stos
cmpsl
mov
sarl
mov
out
add
roll
push
test
aas
pop
adc
inc
push
lods
xchg
xchg
push
add
jno
dec
outsb
inc
mov
stc
mov
mov
outsl
adc
cmpsl
loope
pop
ucomiss
mov
popf
dec
inc
fs
test
test
and
mov
imul
lahf
sar
int
xchg
fsubrs
push
icebp
xor
cmp
push
sbb
int3
ret
xchg
ficomps
stos
stos
ficoms
push
xchg
mov
aas
enter
xchg
and
fdivrl
ret
cmp
adc
mov
adc
adc
stos
das
cmp
jmp
adc
dec
movsb
sbb
das
rclb
das
xchg
and
push
in
push
daa
mov
imul
sbbl
out
dec
and
mov
mov
movsl
sub
xor
sbb
imul
push
fwait
lret
repz
bound
push
loop
arpl
mov
mov
dec
adc
or
push
sub
xlat
mov
lds
cltd
xor
lods
pop
js
sbb
pop
inc
arpl
mov
add
shrb
xor
rcrl
jnp
lret
in
jne
in
and
ljmp
out
shll
adc
iret
cmp
push
shll
pop
icebp
mov
mov
push
loop
inc
add
arpl
shrb
jns
incl
popl
inc
dec
sbb
xor
and
and
jns
xlat
xchg
scas
adc
pop
je
cmpb
hlt
rorl
sub
add
inc
mov
sbb
dec
jb
inc
or
fisubs
inc
mov
push
lea
imul
ja
and
cltd
mov
mov
cmp
ss
cmp
mov
cmpsl
je
sub
sub
rcrb
ds
or
insb
stos
and
or
aad
push
inc
test
mov
in
inc
mov
ja
lods
out
stc
xchg
enter
xchg
mov
clc
pop
and
jns
pop
jo
inc
inc
lcall
xchg
pop
mov
or
inc
jo
mov
push
and
lcall
das
hlt
aad
xchg
clc
lret
subb
bound
fisubl
out
incb
cmp
gs
arpl
test
insb
jp
inc
push
test
mov
add
mov
bnd
aaa
shlb
repnz
sub
inc
pop
stos
lahf
mov
insb
and
aad
loopne
xchg
pop
xlat
jmp
push
adc
push
or
adc
stos
fsubs
mov
sub
cmc
es
hlt
mov
enter
inc
adc
sbb
arpl
sub
arpl
gs
subl
fcmove
test
out
loop
ja
mul
and
cmpsl
inc
popa
or
dec
imul
pop
push
mov
imul
add
cld
pop
lea
rcll
and
fabs
es
test
mov
ret
test
repnz
cmp
dec
sbb
dec
and
adc
iret
inc
push
pop
xlat
inc
mov
dec
jmp
divb
sbb
mov
cmc
sub
mov
in
xor
and
seta
xchg
repnz
xor
cmp
ret
and
popa
jle
cwtl
push
pop
pop
fcoml
lret
out
and
add
adc
cli
push
mov
mov
and
test
in
add
cmp
mov
jno
lahf
popf
cs
bound
xor
xor
xchg
imul
push
xor
enter
nop
aad
inc
fadd
jns
sahf
into
adc
push
pop
push
mov
push
push
dec
mov
stos
pop
inc
movsl
lret
aaa
xor
fldcw
fucomi
insl
inc
adc
inc
cltd
bswap
aam
xchg
jnp
inc
inc
jle
stos
adc
insb
cmp
cmp
and
mov
insl
sub
rolb
ret
cld
mov
lret
or
mov
push
mov
imul
sti
fstps
mov
test
mov
jne
ss
ja
je
cmp
xchg
sbb
pusha
out
mov
imul
sbb
daa
inc
imul
sbb
mov
fadds
cltd
stos
cs
decl
ret
inc
jbe
aam
cmp
dec
pop
into
mov
inc
stos
cmp
punpckldq
je
std
test
in
jbe
xchg
or
xor
xor
loope
sub
dec
mov
in
popa
mov
rolb
fstl
pop
pop
es
pop
les
sahf
lahf
cmpsl
mov
sahf
loop
or
mov
mov
bound
sbb
jns
mov
xor
int
test
sub
test
lods
pop
out
mov
pop
jmp
repz
aad
push
scas
and
pop
jmp
mov
insb
inc
sub
adc
push
jae
insl
and
cs
repz
cmp
sbb
inc
lahf
xor
addr16
clc
and
imul
addr16
test
inc
jnp
cmp
pop
aam
xor
pusha
fcom
cmp
mov
mov
clc
jle
ret
lods
add
mov
testl
fdivl
mov
xchg
rcr
sti
loope
imul
pop
jae
mov
cmp
pop
repz
scas
cmpsb
stc
scas
aad
inc
gs
repnz
xor
add
enter
mov
mov
adc
or
aaa
out
jge
and
xchg
pop
pop
arpl
xor
dec
icebp
movsl
cmp
sti
test
push
popf
test
and
ds
sarb
scas
pop
xor
iret
addr16
pop
int3
jmp
pop
mov
mov
xchg
add
divb
mov
outsl
popf
mov
jmp
mov
push
les
out
push
shlb
inc
xorb
inc
pop
mov
icebp
lock
pop
xor
leave
imul
jae
dec
jmp
ds
dec
pop
jmp
bound
mov
add
aaa
popf
push
movsl
or
inc
mov
or
jbe
mov
neg
push
push
mov
popf
sbb
shl
rorl
inc
jl
pop
add
fdivs
pop
lret
jns
movsl
xor
adc
loopne
sbb
add
pusha
pop
mov
push
mov
and
insb
stos
adc
jecxz
loopne
test
xor
out
xchg
imul
and
mov
popa
arpl
inc
lret
adcb
fidivs
cmp
inc
aam
inc
sahf
loope
aam
sti
mov
pop
testl
sbb
stc
fildll
xor
xchg
sub
rcr
aaa
test
mov
lcall
fwait
inc
pop
nop
ss
add
leave
jae
pop
xorb
mov
jns
mov
shll
mov
out
test
fistpl
mov
loopne
outsb
sbb
subb
lock
pop
out
adc
sub
mov
in
pop
ficomps
dec
aam
lds
pop
call
xor
in
lds
lcall
xchg
push
mov
mov
push
lea
test
mov
xchg
adc
mov
dec
popa
adc
jae
mov
test
mov
imul
mov
or
std
and
scas
adc
jnp,pn
adc
cld
or
mov
jmp
sub
sub
cmp
adc
mov
cmp
test
in
es
movsl
test
movsb
andnps
inc
shlb
cmp
sahf
pop
fiadds
out
jl
push
pop
jge
jge
cwtl
gs
lahf
negl
mov
nop
mov
lea
dec
sbb
shrb
fistl
cmpsl
cmp
or
pop
dec
lea
les
icebp
pop
arpl
aam
std
xchg
pusha
cmp
cmp
outsb
adcb
cli
push
mov
inc
cmpsl
jmp
test
mov
hlt
repnz
pop
adc
mov
sti
mov
dec
jne
xchg
or
xchg
cli
and
cmpsb
into
mov
jmp
arpl
cmp
das
fistpl
dec
jle
push
push
inc
push
sub
xlat
enter
jbe
cmp
loope
aaa
mov
or
jne
loopne
mov
notl
sahf
mov
in
xchg
sub
aas
popa
dec
fs
mov
cmp
push
dec
sbb
pop
hlt
fstpl
sahf
sub
imul
lret
int
push
out
loop
les
clc
sub
popf
fsts
add
cs
mov
fimull
xor
push
outsl
mov
es
sub
jns
inc
jne
outsl
andl
subl
mov
push
iret
sbb
shll
jp
sahf
clc
jp
imulb
hlt
jge
rorl
push
pop
sub
inc
repz
fwait
cmp
or
mov
imul
leave
stos
fldl
sbb
mov
in
addb
and
pop
xchg
dec
dec
and
pop
filds
out
push
or
add
mov
test
push
pop
adcl
sub
or
mov
cmpsb
pushf
dec
xor
inc
outsb
fsts
cltd
pop
clc
ret
jne
in
nop
sarb
cmpsb
adc
arpl
jnp
push
adc
gs
adc
push
pop
les
xchg
in
xorb
out
mov
lods
inc
mov
pop
push
stos
inc
fildl
lret
stos
loope
inc
xor
scas
add
test
imul
out
fstl
stos
mov
add
in
add
or
in
inc
and
out
fsubl
cmp
jl
out
mov
jb
dec
or
test
mov
leave
and
push
mov
or
jns
push
adc
gs
mov
rcll
xchg
aam
mov
scas
scas
out
stos
mov
lret
cld
push
add
sbb
fdivr
lock
loopne
mov
mov
or
inc
sbb
inc
mov
movsl
dec
pop
enter
shll
rorb
mov
jg
fcompl
imul
push
pop
push
fisubrs
shlb
sub
inc
loop
lcall
dec
xor
push
stos
pop
cmp
mov
push
pop
dec
adc
cmp
lea
and
and
xchg
xchg
cld
xchg
scas
or
mov
lock
xor
inc
jmp
scas
out
ret
ret
adc
fbstp
jecxz
ror
and
cmp
push
inc
mov
bound
stos
push
xor
jl
mov
jl
pop
push
shlb
sahf
hlt
add
cli
push
mov
mov
nop
lret
cmp
imul
xchg
fwait
rcrb
jno
sbb
add
fisttps
ljmp
rclb
fistpll
pop
outsl
ss
cmp
sbb
dec
ss
pop
sbb
or
lea
mov
and
insb
pop
add
mov
mov
ljmp
dec
mov
lds
cltd
pusha
jl
push
stos
push
stc
cmp
cmpsl
rorb
mov
decl
fdivs
jns
mov
cmpsl
inc
pop
jno
adc
ret
push
dec
xor
fucom
mov
lret
jae
pop
dec
inc
mov
sbb
in
push
sub
les
push
mov
mov
mov
popf
xor
mov
xchg
push
jmp
call
fs
rclb
inc
push
mov
movl
cmp
fstl
addr16
aaa
dec
aaa
mov
popf
xchg
fmull
jl
rcrb
push
dec
movsl
mov
ja
dec
daa
dec
xor
pop
mov
mov
std
push
mov
dec
les
repnz
aad
xorl
cmpsl
jo
push
push
cmp
sub
and
and
sbb
add
jle
jo
stc
jecxz
sub
cmp
jae
jmp
push
jb
mov
add
adc
sub
dec
push
dec
shlb
test
inc
jle
rclb
fdivrp
sbb
repnz
dec
jne
insb
scas
movsl
in
lret
fadd
sbb
pop
out
lea
orb
aad
out
inc
jle
sbb
pop
sbb
cmp
sar
push
fildll
movsb
idivb
test
sahf
scas
mov
pop
push
nop
loope
lahf
xchg
into
sbb
mov
repz
sbb
test
sbb
out
insl
add
pop
cmpsb
inc
sbb
adc
out
add
outsl
pop
add
les
mov
mov
pop
xor
mov
insb
das
cmpsl
jno
call
dec
jge
add
pusha
out
gs
push
jl
lcall
push
into
push
roll
into
aam
pop
mov
jmp
out
lahf
jp
insb
enter
xor
icebp
pop
jb
lds
int3
cmpsl
sarl
movsl
fs
insl
or
hlt
not
push
popa
popf
inc
sub
sbb
and
int
lret
rclb
repz
pop
out
mov
dec
call
nop
adc
jb
xor
adc
cli
je
and
sti
mull
les
ss
shll
xchg
push
push
test
jecxz
outsl
lcall
xchg
out
sbb
adc
pop
mov
jno
xchg
rorb
scas
mov
pop
rcrb
loop
xchg
mov
xchg
pop
cmp
pushf
push
cmpsb
das
inc
mov
jne
xor
add
and
out
out
bound
inc
mov
ljmp
pusha
fwait
scas
mov
arpl
mov
jb
ret
pop
cmpsl
mov
pop
jno
push
sub
xchg
mov
outsb
inc
add
movb
add
into
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
push
jae
hlt
pushf
jnp
hlt
pushf
jnp
ljmp
push
push
repnz
push
shl
mov
rorl
sub
jg
jo
cmp
pop
xor
imul
jecxz
ja
sub
adc
in
and
lods
loop
or
jecxz
dec
jecxz
mov
mov
icebp
repnz
lcall
ss
icebp
out
mov
mov
rcr
or
loope
mov
mov
jle
ljmp
out
push
mov
jne
and
add
insb
jp
adcl
push
sbbb
loope
sub
sub
dec
mov
dec
fcomi
adcl
xorb
rcll
cmc
in
fwait
xor
ss
cli
mov
push
cltd
sub
push
mov
iret
sti
mov
loop
insl
call
push
sbb
int
and
lcall
into
aam
sub
xor
add
gs
hlt
mov
xor
sbb
in
inc
mov
test
and
stc
rorl
pop
imul
lock
lods
cmp
adc
loopne
loopne
mov
push
or
roll
popa
mov
push
adc
and
int3
sbb
lods
testl
idivl
in
loop
sbb
std
dec
outsl
into
push
notb
in
lahf
or
adc
cltd
lret
mov
rclb
cmpsl
jb
cmc
aam
sub
sti
sbb
xor
mov
cs
sbb
cli
jno
adc
mov
mov
sbbl
dec
xchg
pop
orl
mov
mov
orb
fdivr
out
ret
mov
xor
out
xlat
cmp
pushf
xor
sti
inc
and
sub
inc
xchg
aad
sahf
stc
mov
sti
jne
xchg
mov
test
push
or
test
popa
lock
sbb
mov
cmpsb
push
xchg
add
pop
push
into
mov
sti
xchg
negl
xlat
repz
xchg
mov
sub
xor
hlt
lret
outsb
jne
ja
push
jnp
xor
pop
jo
ja
mov
rorb
adc
ss
dec
inc
cli
out
imul
and
addr16
jg
fisubrl
jecxz
scas
call
adc
out
mov
push
jmp
mov
les
pop
mov
xchg
les
jne
sub
sbb
or
dec
ds
and
cmp
mov
push
mov
test
xchg
ja
push
adc
loop
mov
pop
jae
push
and
push
push
inc
popf
xchg
test
out
add
sbb
dec
test
mov
mov
incl
and
ds
jmp
sub
xchg
mov
sub
mov
in
xor
cltd
sbb
fs
aad
mov
cli
icebp
sub
jns
jae
in
out
mov
or
dec
mov
flds
lock
mov
mov
mov
lods
stc
lcall
cmc
das
xor
rcl
jns
adc
ret
sbb
sbb
das
or
push
push
sbb
pop
mov
adc
sbb
mov
in
mov
dec
xor
stc
sub
add
js
sbb
xchg
ret
add
dec
clc
cmp
fisubrs
mov
fst
sbb
stc
jp
add
pop
testl
popf
stos
outsb
jmp
repnz
lcall
push
and
push
or
cmp
int
sbb
sub
adc
loop
repz
or
pushf
xchg
sbb
jae
mov
jp
jo
jb
mov
sbbb
shl
in
sub
cmpsb
adc
enter
pop
std
stos
bound
dec
sub
or
stos
out
mov
daa
fst
pop
lock
push
xorb
fstpt
popa
adc
pop
out
xchg
fs
jle
mov
pop
mov
aas
je
push
and
lcall
jmp
mov
mov
aam
sbb
stos
jl
ret
scas
fildll
testb
or
adc
hlt
sub
push
mov
test
in
adc
in
sbb
rolb
xlat
daa
scas
insb
pop
pop
add
in
inc
mov
sarb
mov
jge
dec
dec
in
fstpl
out
adcl
jp
adc
mov
cmpb
inc
push
iret
sbb
pop
addr16
ffree
adc
and
test
and
push
pop
jg
fnstcw
arpl
fwait
stc
bound
or
shlb
pop
insb
jno
adc
dec
jbe
xchg
push
dec
xchg
or
and
xchg
pop
sub
pop
mov
loopne
xchg
lahf
lds
push
mov
loope
push
js
lahf
jne
sahf
sub
testb
fwait
adc
daa
nop
pop
addr16
xor
sbb
dec
sub
insl
lahf
sbb
shrl
clc
jg
sub
or
push
insb
test
or
adc
push
aam
sub
ja
pop
outsb
imul
int
fs
cmp
sbb
shl
sbb
dec
loop
jns
sbb
lret
add
pop
std
adc
mov
pop
clc
loopne
cltd
cmpsl
mov
cmp
jb
jns
cmpsb
movsl
out
scas
mov
mov
stos
popf
sub
push
xor
lcall
sbb
or
adc
jb
add
sbb
cmp
pop
lods
inc
push
cmp
ret
ret
jae
xchg
lret
jnp
adc
sbb
nop
filds
iret
push
pop
mov
push
jg
pop
icebp
loop
cmpsb
pop
cmp
pop
cwtl
jmp
push
inc
imul
rorb
sbb
iret
jno
push
jg
mov
sub
add
mov
js
adc
mov
sti
popa
push
pop
sbb
lea
rorl
mov
xchg
push
outsb
sub
stos
js
mov
jb
pop
das
lods
cmpsl
xor
xchg
mov
add
mov
fmull
push
pushf
ret
gs
and
aas
cmp
mov
movsb
or
inc
lea
push
lahf
push
ja
arpl
xchg
repz
xchg
dec
lock
loope
jne
mov
fcompl
and
fidivrs
hlt
lret
movsl
jg
lcall
xor
xchg
bswap
out
inc
or
jbe
jp
call
repnz
roll
fldcw
outsb
repz
add
mov
cltd
fstpt
aam
daa
inc
mov
xor
js
xchg
dec
mov
jecxz
inc
jmp
push
repz
xor
rcr
jo
fwait
jae
popa
loopne
fiaddl
cld
sub
pop
mov
scas
xor
insb
movsl
mov
xchg
cmp
js
repz
ret
pop
jno
jne
nop
imul
push
sbb
xchg
sbb
xchg
incl
mov
mov
lret
jmp
mov
dec
jl
push
push
fs
repnz
jmp
push
loope
shrl
jne
out
cld
sub
dec
cmp
test
ja
pop
out
movsl
pop
jnp
mov
pop
dec
movsb
in
xchg
iret
push
cwtl
cwtl
vfmsubps
scas
cltd
out
pop
movsb
mov
insb
enter
mov
ret
das
sti
jo
xlat
fisubl
or
jp
ret
std
jns
jno
adcl
scas
sti
ret
push
idivb
cltd
mov
into
cs
movl
lcall
movsl
jl
xor
push
fwait
aaa
aaa
les
sub
mov
aaa
lahf
test
inc
loop
in
add
cmp
cwtl
pop
add
ja
fistpl
lods
enter
jmp
test
sbb
pusha
cmpsl
add
add
cmp
out
mov
add
mov
xchg
jmp
lret
mov
dec
cltd
pop
int
fcoms
cmp
cmc
sub
lds
fs
into
push
push
popf
aaa
movsb
bound
mov
mov
fcoms
xor
aas
inc
lret
xchg
mov
scas
shrb
cmp
fs
adc
adc
cmp
daa
mov
in
pusha
sub
scas
pushf
jecxz
sbb
bound
stc
cmp
flds
in
fsubrs
push
leave
adc
ret
add
adc
pop
adc
clc
test
jae
or
stc
adc
ss
mov
test
add
jae
bound
shll
mov
ffreep
out
ds
movsb
frstor
mov
xlat
mov
mov
into
mov
lock
xchg
inc
ds
dec
mov
aaa
inc
and
sbb
mov
dec
je
jne
test
jmp
jmp
push
int3
jmp
repnz
xchg
mov
sbb
cmp
jp
ret
xor
add
push
jnp
xorb
mov
mov
and
add
mov
or
or
iret
imul
inc
push
pop
aam
inc
sarl
push
add
jno
mov
sbb
pop
cmc
popa
cltd
dec
jo
pop
mov
and
pop
jnp
cmp
out
mov
mov
mov
push
cli
push
pop
xchg
call
jno
mov
movsb
pop
mov
sub
data16
test
push
pop
and
loop
pop
shlb
jne
js
nop
cmp
dec
int
push
js
inc
sub
xchg
repnz
bound
ja
lock
repz
push
adc
fstpl
pop
push
test
jp
pop
or
scas
ret
xchg
scas
test
mov
sbb
enter
cmpsb
mov
dec
lds
lods
aaa
jbe
lcall
mov
adc
shl
pop
jb
pop
outsl
mov
xchg
push
push
mov
pop
ljmp
lods
das
xchg
sbbl
xchg
shrl
pusha
sbb
idivl
dec
adc
mov
outsl
mov
mov
cmpsb
aam
out
mov
mov
sub
fs
mov
mov
cmpsl
iret
cltd
xchg
in
sbb
rorl
xchg
or
push
test
cmp
adc
and
inc
pushf
mov
push
lock
outsl
mov
jmp
xchg
adc
pop
test
inc
fnsave
nop
jbe
sub
mov
stc
lea
mov
mov
mov
sti
aam
push
mov
test
popl
stc
or
push
or
loop
jns
adc
xchg
lret
fidivrl
add
jp
add
or
movl
jmp
pop
outsb
pop
push
xchg
int
clc
rcl
pop
repnz
data16
bound
lcall
mul
sbbl
shr
mov
sbb
ret
ljmp
cs
popf
push
popa
push
inc
and
inc
pop
outsl
roll
test
in
frstor
mov
cli
push
js
or
dec
stos
pop
rcl
scas
jle
rcll
mov
xorb
xor
imul
lret
popa
notb
fwait
dec
and
lret
dec
pop
outsl
fimull
mov
lods
cmova
cld
out
inc
imulb
sub
xchg
loope
xchg
in
sub
pusha
insl
or
imul
mov
mov
ret
lret
pop
rcl
cmpsl
or
pop
repnz
pop
in
and
push
icebp
cmp
lret
xor
popa
ljmp
mov
push
push
sbb
rorl
pop
mov
lea
cli
dec
in
fcmovbe
lret
scas
add
inc
stos
iret
mov
cwtl
sub
and
sar
cmp
sub
and
push
jmp
xchg
ljmp
dec
inc
inc
push
cmp
mov
adc
add
adc
sub
adc
mov
out
andl
inc
out
jmp
or
dec
jl
mov
sbb
xchg
test
jl
test
repz
adc
jp
roll
pop
in
adc
bound
outsb
iret
clc
xchg
rcrb
mov
inc
fistl
cld
shl
mov
cmp
pop
scas
pop
into
out
mov
dec
test
shrb
push
cli
movb
fiadds
lcallw
lods
dec
mov
rcrb
push
mov
daa
inc
xor
outsb
lcall
mov
push
push
lahf
notl
adc
or
aad
pop
scas
inc
stos
inc
dec
jne
pop
clc
pop
cmp
cli
mov
lods
cwtl
lods
movsl
sarl
push
or
jle
mov
jecxz
aam
xchg
test
cmpsb
push
xor
insl
inc
xor
in
pop
push
adc
dec
repnz
out
cmp
push
imul
jnp
shrb
aad
in
adc
testb
xorl
push
stc
or
imul
jge
mov
ret
adc
stos
cmp
xchg
mov
or
ja
inc
inc
icebp
imul
in
outsl
stc
mov
stos
sub
mov
inc
pusha
pop
inc
rcll
hlt
inc
les
in
xchg
ficompl
test
and
xor
adc
imul
test
loop
je,pn
mov
mov
sahf
bound
xchg
xchg
dec
push
adc
xchg
icebp
jg
scas
mov
inc
inc
aas
imul
sbb
push
fwait
sub
jne
mov
shrl
sbb
xor
add
cmc
scas
sub
xor
mov
push
sbb
lock
cmp
mov
out
mov
dec
mov
ss
pop
shlb
pop
test
sub
add
dec
mov
fdivrl
or
xlat
dec
mov
add
mov
lods
dec
xor
xchg
iret
sarl
pushf
sahf
and
cmp
xchg
push
sbb
mov
sub
jb
jmp
cmp
mov
dec
test
jecxz
or
lods
mov
ret
xchg
mov
popa
test
mov
lcall
mov
pop
int
sub
lcall
cmp
loopne
test
push
outsb
sub
dec
add
imul
je
jp
mov
jns
pop
sahf
fisttpll
shrb
repnz
push
arpl
pop
into
cwtl
sub
jmp
in
test
ss
insl
sbb
mov
fimull
inc
and
push
adc
and
mov
lods
lock
jmp
sub
sbb
add
je
push
insb
imul
shrb
pushf
movsb
outsb
test
bound
insb
and
jp
or
movsl
push
pop
mov
das
inc
xor
shlb
sub
aas
mov
xor
xchg
mov
je
test
fwait
push
lock
jns
out
hlt
fldenv
nop
loope
add
fwait
cmp
xchg
scas
mov
loop
cmpsl
stos
mov
dec
dec
xor
mov
xlat
mov
pop
adc
out
dec
inc
inc
jmp
aam
rorb
in
dec
sub
stc
movsb
fidivl
into
shrb
outsb
add
sub
rcrl
inc
int3
cmpsb
test
add
or
ret
xchg
lock
and
arpl
daa
shrl
mov
call
adc
and
inc
inc
nop
mov
adc
imul
adc
popf
int3
lcall
subl
jp
loop
mov
mov
push
pop
cmp
mov
adc
aad
gs
jle
aam
stos
movsl
and
pop
ret
sub
xor
sub
aad
fildll
out
enter
insl
mov
adc
fimull
aas
adc
and
aaa
dec
sbb
ja
mov
xchg
test
sbb
inc
in
fnstsw
mov
push
sub
and
mov
lds
adc
xor
mov
fisttps
push
scas
popf
xchg
push
lret
mov
adc
testl
aam
ret
enter
clc
pop
cmp
ja
pusha
lock
or
shl
cmc
js
clc
mov
xchg
ss
mov
aad
mov
shld
xchg
repz
cwtl
push
sub
push
mov
nop
repz
mov
jbe
push
in
repz
faddl
pop
jg
enter
sbb
xchg
jl
sub
lahf
into
mov
jl
pop
inc
aad
add
xchg
mov
mov
mov
adc
mov
lret
fs
jne
xor
push
xlat
jbe
fiaddl
mov
sbb
std
testb
faddl
sub
imul
mov
jg
in
es
dec
pop
imul
push
insl
mov
add
popf
jge
add
test
adc
xchg
outsl
lret
jmp
ja
jo
inc
orb
and
fisttps
jnp
xchg
ss
out
ret
out
pushf
lods
fisttpll
lret
call
inc
mov
outsl
pop
mov
pop
mov
cmp
cmp
lods
scas
or
sub
daa
cmp
sub
sti
push
leave
or
pop
mov
movsb
repnz
xchg
cmpl
fildl
lret
addb
xchg
jb
inc
loop
adcb
sti
push
insl
pop
dec
sub
add
sahf
adc
and
mov
jle
fnstenv
gs
mov
mov
push
sub
fnstcw
jb
cmp
jno
dec
mov
pop
add
xchg
cmp
sbb
jns
sub
in
ret
xchg
lea
fadds
mov
xchg
addr16
mov
sbb
sbb
jo
pop
cwtl
outsb
lret
pop
xchg
xorb
out
out
loop
cmp
scas
cli
andb
add
push
mov
jne
ret
xor
xchg
mov
xchg
lret
clc
arpl
mov
int3
daa
xchg
aaa
push
jae
addr16
sbb
xor
cmp
sub
push
xlat
xor
pop
mov
sub
xor
jbe
push
fidivrs
sub
pop
out
sub
fmuls
inc
xchg
mov
push
xchg
test
mov
aam
loope
aas
push
xchg
cmpsl
push
stc
push
int3
cmp
icebp
cmp
mov
cmpsb
sub
xchg
pop
jge
xchg
xchg
xor
sahf
push
adc
cmp
sti
jns
ret
es
test
daa
jge
pop
push
xchg
or
sbb
push
push
mull
inc
nop
nop
clc
iret
xchg
imul
loopne
aad
pop
ja
jne
adcl
mov
mov
aas
cmp
test
cmp
jns
jne
xchg
dec
sbb
sub
mov
addr16
push
inc
insb
xchg
xchg
fsts
pop
add
push
lret
push
push
rclb
add
mov
pop
push
push
xlat
mov
pop
imul
cmpsb
cli
fists
inc
loope
or
cld
mov
adc
fisttps
mov
mov
xor
dec
sbb
adcb
sub
push
inc
movsb
mov
xlat
pop
mov
les
jg
cmp
shl
mov
out
xor
jl
int
ss
push
icebp
movsb
add
outsl
jle
pushf
jnp
roll
pop
sub
enter
pop
dec
jo,pt
sbb
push
adc
or
mov
jl,pn
fcomps
mov
ss
sbb
sub
push
xchg
add
aam
inc
jno
ret
pop
cmpsb
xchg
add
cmp
cltd
ret
inc
adc
fwait
test
inc
dec
push
xchg
test
out
fsubl
shll
in
push
mov
pop
mov
scas
pop
scas
inc
mov
xchg
int
fwait
aas
dec
xchg
mov
mov
add
insb
push
inc
packssdw
lods
aaa
mov
leave
outsl
dec
cli
repz
iret
clc
sub
xchg
xchg
insl
mov
cmp
mov
dec
dec
jecxz
pop
jo
outsl
dec
fdivs
dec
out
inc
xchg
or
icebp
or
outsb
cltd
mov
xchg
or
faddp
arpl
test
pop
popa
stos
popa
jmp
pop
lahf
mov
sarb
add
pop
add
ja
test
adc
xchg
loop
frstor
push
gs
xchg
ljmp
vminps
add
mov
test
test
data16
or
jno
cmp
push
mov
cltd
inc
push
outsl
mov
mov
or
pushf
mov
popf
popa
fcmove
pop
insl
loopne
aas
andl
xchg
sbb
mov
xchg
popa
mov
adc
aas
cmp
pop
insl
rolb
mov
cmp
sahf
xchg
xchg
mov
push
add
ss
jne
push
mov
xchg
mov
fsts
jnp
lods
pop
xchg
das
int
or
test
repz
gs
ret
adc
test
arpl
push
push
push
lret
imul
xor
xor
xchg
popf
notl
xor
lods
add
cmpsb
jecxz
pop
pop
pop
add
in
sbb
repz
push
mov
push
mov
cmpsl
stos
ret
pop
add
loope
test
cmpsb
ljmp
push
bound
aaa
pusha
std
jp
jle
icebp
call
push
mov
push
add
bound
lcall
in
dec
repnz
xor
test
xchg
jnp
add
fcomp
and
sbb
fdivs
lds
inc
decb
lods
jnp
rclb
test
iret
sub
mov
push
cmpsb
sbb
sbb
scas
pop
xlat
psubb
gs
sub
sbb
mov
mov
xchg
loope
xor
adc
adc
pop
loope
flds
stos
sbb
pop
dec
push
cwtl
ss
jg
inc
xchg
int
sub
sbb
and
pop
push
movsl
sbb
push
mov
mov
ljmp
sbb
push
push
ret
dec
ficoms
pusha
cmp
jns
mov
inc
xchg
push
push
adc
sbb
or
dec
xor
xorl
xchg
sub
movsb
scas
imul
sti
push
rcrl
xchg
inc
clc
mov
sbb
in
inc
pop
push
das
aad
xchg
sbb
dec
je
pop
lcall
push
scas
shrb
pushf
enter
xchg
and
test
jmp
xor
ret
adc
pop
inc
dec
rol
popf
frstor
sub
cmp
xchg
pop
out
jle
jne
addr16
xor
sub
test
add
pushl
push
lcall
imul
push
xchg
sar
int3
and
fisttpll
and
fs
sbb
mov
sbb
stc
dec
mov
jno
jae
jbe
mov
std
andb
inc
push
stos
cmpsl
lret
mov
add
sub
dec
sahf
cmpsb
sbb
es
pop
cmp
jecxz
push
iret
mov
in
jne
inc
aaa
in
fildl
sbbl
cs
insl
mov
mov
mov
add
insl
push
scas
xchg
lea
push
adc
aaa
ret
adc
int
sub
xor
gs
xchg
je
sbb
and
fnstenv
xchg
hlt
xlat
testb
push
xor
imul
add
add
xor
inc
sti
mov
mov
lods
or
cmpsl
sbb
bnd
shlb
clc
in
push
daa
outsl
xchg
jmp
push
jnp
lret
sbb
sub
nop
and
or
fdivl
mov
adc
mov
mov
push
xchg
test
mov
out
sub
aaa
outsl
inc
shlb
jno
inc
add
cmpsb
data16
sbb
xor
imul
dec
sti
inc
jb
adcl
cmpsl
pop
daa
fldl
push
cmc
inc
cmpb
mov
cmpb
sbb
lea
dec
mov
loopne
lock
scas
or
cli
cmp
adc
mov
test
fwait
insb
fcmovne
push
push
pop
mov
testl
lret
les
jbe
mov
adc
sub
out
pop
stos
push
add
imul
call
sub
add
aaa
dec
jle
xor
mov
out
movb
std
in
xor
or
into
iret
orl
and
jo
mov
sbb
and
pop
cmp
jl
mov
movsb
fistl
mov
out
mov
push
imul
mov
int
adc
cmp
dec
in
jmp
and
jo
stos
mov
adc
xor
inc
jnp
call
xchg
sbb
mov
sbb
pop
inc
js
adcl
sbb
mov
movsl
xchg
lahf
ret
movsl
fisubs
pop
or
ja
xor
sub
leave
cmc
xchg
jle
inc
dec
in
sbb
or
xchg
fcmovbe
cmp
sub
add
mov
and
xchg
jp
xor
xor
jecxz
lods
rolb
movsb
in
fcomi
aad
xor
rorl
inc
ljmp
cmc
nop
addr16
test
ds
jg
jp
mov
popa
ljmp
inc
in
and
add
test
sub
repnz
xchg
pop
cwtl
jns
gs
push
push
ret
dec
in
nop
xor
push
mov
add
mov
pop
mov
sub
ss
sti
ljmp
adc
mov
ljmp
xchg
xchg
js
inc
imul
xor
push
xchg
and
cmp
in
fisubrl
add
je
add
jbe
mov
test
mov
push
int3
popa
mov
lcall
icebp
mov
push
dec
push
clc
fldl
push
jo
call
cwtl
xchg
in
ret
or
ja
mov
xchg
mov
mov
push
imul
into
jecxz
out
xchg
je
dec
clc
pop
inc
push
dec
sub
xor
je
xor
inc
fwait
push
ljmp
xchg
push
gs
jecxz
mov
ljmp
test
fwait
loop
pop
lahf
jecxz
iret
lock
test
xlat
out
stos
ret
sti
push
sbb
mov
in
hlt
loope
test
fwait
lret
lret
out
inc
xchg
mov
es
aas
sbb
es
and
fadds
jge
bound
xchg
jg
call
ja
pop
mov
add
push
dec
mov
or
imul
dec
in
mov
cmp
adc
popa
xchg
fbstp
push
xor
xchg
push
jle
xor
jp
pop
dec
insb
mov
outsb
inc
idiv
inc
insl
repnz
fnstsw
nop
arpl
jmp
inc
pop
adc
es
sbb
jo
daa
push
rep
cmp
in
dec
sar
jmp
movsb
mov
mov
stc
fsubs
repnz
jno
ror
or
jnp
sbb
lret
pop
cmp
mov
xchg
sub
jmp
cld
sub
dec
lods
incb
das
xchg
fucomip
pop
fucomi
jo
pusha
lock
data16
and
lods
insl
adc
in
add
xchg
addr16
push
out
dec
test
xchg
int3
stos
jae
mov
add
out
adc
popa
push
pop
popa
repz
push
pop
gs
arpl
push
lods
mov
xlat
xor
fidivs
add
out
test
pop
adc
mov
mov
scas
lea
div
repnz
push
push
mov
nop
xor
mov
rol
pushf
or
out
cli
xlat
mov
fs
gs
repnz
xchg
fsubl
mov
insb
mov
stos
lea
adc
inc
pusha
xchg
shll
or
mov
adc
inc
faddl
hlt
mov
jge
lcall
push
filds
fstpl
sbb
out
sub
xchg
xor
or
aam
dec
and
push
loop
push
adc
and
outsl
push
dec
out
mov
mov
mov
into
push
xchg
repz
mov
loop
or
lcall
psubw
dec
cmc
outsb
mov
inc
xor
mov
adc
and
push
fwait
stos
add
loop
fistl
mov
les
mov
xchg
cmpsb
push
push
xchg
pop
pop
xor
dec
pop
jae
filds
lock
sarb
or
mov
dec
xchg
pop
pop
pop
pop
xchg
cmp
repz
lds
jns
int
adc
sbb
test
lcall
dec
sub
fs
xchg
scas
outsb
adc
mov
mov
int
mov
cmp
cmp
sbbl
fidivs
daa
and
push
xor
ljmp
inc
mov
ljmp
lods
pop
std
cmp
cli
fsubr
xchg
mov
and
add
mov
ret
dec
inc
iret
push
push
sbb
pushf
jno
push
mov
addl
fiaddl
cmpsb
xor
test
and
push
or
add
pop
inc
enter
push
sub
in
mov
jno
push
jno
outsl
sbb
xchg
add
fdiv
mov
mov
out
xchg
xchg
outsl
jmp
repz
xor
mov
fimull
fbld
mov
inc
push
bound
cmp
xchg
out
adc
aam
jns
rcrb
mov
add
mov
scas
fwait
ss
popf
out
stc
xchg
lods
aas
cs
shlb
push
cmpsb
xchg
out
idivl
jo
jp
stc
sti
xchg
mov
and
jbe
mov
jbe
add
out
insl
je
push
jg
es
push
leave
add
push
mov
cmovs
pop
pop
fs
dec
push
cmc
cmc
and
mov
outsb
cmp
fmul
xor
add
cmpl
adc
push
cs
popa
inc
cmp
mov
stos
jbe
imulb
lds
mov
cmpl
add
aas
addr16
rorb
cwtl
adc
adc
rcl
mov
popa
les
lock
sbb
je
int3
jmp
lock
and
add
out
pop
mov
fsubrl
push
loopne
cli
cmp
fsubs
xchg
or
test
dec
sub
jno
sub
add
pushl
jno
mov
adc
cmp
call
lcall
adc
imul
aaa
mov
out
cmpsb
cmp
and
ds
das
or
push
imul
inc
adc
pushf
lcall
pop
jmp
stc
les
test
mov
jmp
mov
mov
mov
rol
inc
mov
notl
divl
in
test
fs
rcrb
pushf
inc
xor
icebp
aad
cmp
popf
lret
jle
and
fadd
inc
mov
mov
adc
push
jns
icebp
xchg
xchg
and
push
ja
or
stc
add
xor
gs
xchg
addl
mov
test
push
sbb
dec
jnp
jmp
dec
mov
movsl
lcall
sti
cmp
cmp
addr16
leave
sti
xor
movsb
mov
cmp
dec
insb
scas
mov
inc
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
sarb
jnp
pushf
jnp
nop
fidivrs
clc
sti
test
shlb
ds
imul
mov
in
cmp
iret
rclb
dec
mov
pop
inc
mov
ret
stos
loope
adc
test
sbb
xchg
shrb
dec
xchg
leave
leave
and
lret
mov
xlat
aam
inc
cmpsl
insl
fsubrl
aam
pop
imul
adc
pop
repnz
test
xor
rcr
insl
addr16
daa
mov
cli
and
stc
fxch
cmp
mov
data16
adcb
or
fs
pushf
stc
or
in
lds
lahf
sbb
add
call
adc
enter
movsl
dec
pop
mov
push
adc
std
mov
repnz
and
jmp
cmc
xchg
xor
das
inc
cmp
push
xor
dec
xor
lret
ss
pop
cmp
adc
push
and
incb
test
insb
enter
cmp
cmp
movsl
or
js
pusha
cld
and
insl
jmp
outsb
or
bound
icebp
xor
fabs
mov
cld
mov
jmp
jecxz
xchg
mov
add
ret
adc
popa
add
ja
or
push
inc
stc
mov
jmp
jb
dec
push
je
test
divl
xchg
and
inc
into
and
imul
movsb
pop
pusha
rol
ss
out
sub
or
mov
into
popa
xor
dec
lea
pop
shrb
mov
cmp
pop
cs
inc
mov
aam
rol
jb
inc
cmpsl
sub
mov
jo
int3
add
lock
pop
mov
cs
js
imul
mov
jno
jecxz
push
cmp
daa
sbb
enter
cmp
adc
xchg
lret
insl
cmp
jle
sbb
aam
pop
or
jb
or
mov
ffree
ret
mov
xlat
std
mov
push
movsb
and
pop
leave
mov
in
aas
imul
jmp
pop
sbb
mov
ret
cmp
jnp
push
push
inc
sbb
or
mov
add
mov
imul
add
out
in
cltd
ss
test
xor
pop
mov
test
pop
stos
push
xchg
xchg
inc
lcall
out
pusha
push
lcall
movsb
dec
sub
pop
fimuls
adc
test
lds
jecxz
in
dec
mov
xor
mov
jbe
mov
cmpsb
jge
cmp
jg
dec
or
andb
rcrl
xchg
lds
sub
cmpxchg
add
xchg
jb
addr16
push
in
dec
invd
ja
mov
sbb
lods
pop
push
adc
lret
scas
ljmp
call
les
insb
push
repnz
insl
pop
in
aam
mov
in
arpl
aam
sbb
scas
and
jnp
and
sbb
mov
push
das
xchg
fcoms
sbb
das
inc
push
in
lahf
inc
addr16
std
data16
fimull
dec
jmp
cmc
push
imul
insb
out
call
xlat
adc
jne
lcall
push
out
cmp
in
mov
lock
jo
jle
xchg
jle
movl
jns
lahf
sub
inc
subl
push
add
lods
movsl
inc
scas
gs
mov
push
int
mov
aad
push
mov
jecxz
lock
dec
stc
aas
xchg
aas
arpl
imul
push
mov
fbld
pop
cmp
jmp
orl
add
push
xor
pop
lds
mov
xlat
push
inc
push
mov
repz
clc
push
imul
ss
adc
movsl
and
mov
in
rclb
cld
sbb
xchg
nop
pushl
adc
mov
test
pop
out
mov
pop
push
jbe
mov
inc
or
or
mov
sub
xchg
testl
sbb
push
and
fcoms
push
hlt
dec
mov
mov
jmp
inc
inc
mov
pop
add
in
out
xchg
pop
aas
cmpsl
mov
pop
nop
xor
in
xchg
and
dec
push
and
or
inc
in
mov
push
lock
test
push
sahf
int
mov
repz
xor
mov
push
lea
mov
in
inc
mov
shll
cltd
push
fcoms
mov
cmp
cmpsb
dec
mulb
sar
mov
xor
dec
fwait
mov
add
jae
insl
or
add
adc
mov
test
inc
fbld
xor
sbb
add
test
push
sbb
mov
dec
hlt
imulb
push
jns
pusha
rclb
stos
mov
out
xor
sub
jmp
adc
lcall
xchg
bound
loopne
das
add
cld
inc
out
push
lahf
clc
frstor
popf
int
outsb
leave
fdivrl
pop
mull
sbb
jmp
lcall
xchg
lahf
jo
adc
add
lahf
cmp
lods
jmp
sbb
xor
popl
outsl
add
lahf
sbb
pusha
cmpb
add
push
imul
cmc
xor
and
xchg
xchg
scas
dec
mov
lcall
loop
pusha
mov
inc
xchg
sub
xchg
mov
loopne
cmp
lds
and
pop
xor
outsl
cli
mov
xchg
dec
pop
pusha
test
daa
xchg
je
pop
mov
and
mov
adc
loop
push
scas
xchg
lock
push
fdivrl
sbb
adc
pop
stos
jns
mov
mov
bound
inc
mov
js
test
jmp
mov
mov
add
lods
ss
sub
push
and
iret
push
pop
jle
jle
ss
xor
dec
adc
mov
jge,pn
fbstp
mov
mov
das
jb
lcall
sub
jecxz
imul
pop
jecxz
lret
mov
in
jp
or
mov
frstor
mov
jmp
push
fsts
cld
mov
scas
cli
hlt
sbb
push
mov
jmp
mov
outsl
xchg
fstpt
mov
or
jecxz
mov
push
clc
push
add
loopne
push
mov
aad
in
inc
mov
mov
push
or
hlt
sub
fmuls
clc
nop
add
push
addb
and
mov
cmp
lahf
sub
push
mov
and
int
dec
fisubrs
push
add
clc
mov
jl
cmpb
jb
sbb
xlat
std
lods
js
mov
adc
adc
std
push
aaa
inc
ret
clc
sbb
mov
or
inc
loop
add
loopne
shll
nop
xchg
mov
movsl
pop
cli
fildl
iret
scas
mov
out
jg
xchg
out
daa
ja
lock
repnz
push
jl
mov
decb
xchg
lock
nop
dec
lret
xor
pop
xchg
xchg
jbe
xchg
pop
pop
test
lea
pop
push
mov
dec
push
movsl
ret
cmp
ljmp
add
je
push
imul
rorb
mov
xlat
daa
sahf
mov
mov
stc
lret
jnp
popa
pusha
stos
mov
or
lret
into
xor
lods
mov
xchg
cld
rcrl
fistpll
sti
call
lret
xchg
stos
fs
jno
add
shll
push
data16
mov
cs
mov
inc
inc
outsl
iret
mov
pop
inc
and
in
outsl
jo
loope
cmp
lret
mov
push
sub
test
sbb
sbb
or
mov
jae
clc
push
daa
mov
int
fdivrs
std
sub
xlat
jle
mov
aaa
es
call
into
cmp
sub
cmp
xchg
shrl
jbe
sarb
and
xchg
xchg
push
fwait
aas
mov
or
mov
mov
sbb
lahf
int3
jle
xchg
mov
das
xchg
mov
push
and
or
ljmp
push
sbb
insl
ret
dec
iret
jmp
add
cmpsb
lahf
rolb
enter
and
pushf
mov
pop
cmp
sbb
stos
ss
pop
mov
or
pop
xchg
pushf
and
mov
sbb
cmp
sub
aas
fs
jne
mov
lds
addb
call
je
in
loopne
pop
mov
icebp
mov
outsb
mov
cmc
cmpsb
ror
xchg
jno
lea
sarl
movl
std
mov
jns
push
iret
test
ror
icebp
lret
mov
push
insl
mov
dec
xor
cmp
jno
cs
imul
jmp
add
call
das
sti
lret
lods
out
or
mov
cmp
mov
test
dec
loope
mov
add
leave
dec
fistpll
out
in
and
cmp
ja
cmpl
into
mov
loop
push
pop
dec
bound
pushf
out
jae
call
pop
test
xor
rorb
mov
pop
pop
lea
mov
push
repnz
mov
pop
sbbl
jae
jp
jnp
jae
ficoms
ds
inc
mov
sti
add
adc
negb
and
sbb
arpl
mov
insl
in
xor
xlat
aam
sbb
sbb
leave
xchg
add
aad
into
pop
int
lods
mov
mov
ret
cmp
outsl
push
mov
cmp
push
pushf
into
call
cmc
adc
mov
int
mov
dec
adcl
cmpsl
mov
gs
mov
mov
dec
sub
adc
cs
insl
dec
mov
or
call
fsubl
jge
faddp
inc
xchg
sub
sarb
movsb
xor
call
lret
cmpsl
mov
xor
add
xor
jae
xchg
rclb
orl
xchg
scas
jmp
jecxz
data16
pop
push
dec
adc
mov
inc
pushf
push
xchg
jb
mov
popa
out
add
xor
nop
mov
sbb
xchg
repnz
cmp
out
dec
mov
inc
js
pop
xchg
popf
les
lods
stc
jns
imul
cmpsl
mov
cwtl
int
dec
inc
adc
lock
or
mov
int
std
sbb
mov
mov
mov
push
adc
sub
or
xchg
shl
and
add
fdivrl
cs
in
xor
andb
push
cmp
ds
sbb
jp
fiadds
sub
je
push
je
ljmp
xor
lahf
jns
and
pop
or
loopne
fnstcw
add
sbb
dec
pusha
sbb
xchg
jne
sbb
inc
xchg
dec
cwtl
lahf
das
adc
sti
insb
inc
movsb
add
push
int3
aaa
jmp
sbb
subb
negb
and
clc
imul
aaa
ficoms
les
jge
and
test
hlt
xor
lret
or
shll
fists
mov
add
xor
adc
gs
push
in
das
push
dec
and
dec
xor
in
ss
inc
in
and
dec
dec
add
test
jecxz
and
out
lock
dec
stc
fcmovnbe
fwait
push
in
jecxz
or
outsl
mov
jne
into
loop
stc
inc
jns
push
cmpb
insb
aas
mov
add
cmp
dec
add
and
mov
idivb
pop
addr16
flds
cmpsb
enter
jle
loopne
sarb
js,pt
cmp
scas
push
inc
aad
and
shll
inc
pop
push
lcall
add
je
ja
sti
xor
or
arpl
adc
push
dec
cmp
ret
xor
lahf
shlb
stc
and
shll
call
test
lds
scas
ret
rcll
adc
push
cwtl
mov
ja
xchg
mov
test
pop
rcrb
filds
add
xor
out
push
jmp
cmpsb
fimuls
out
xor
cmp
and
lcall
pinsrw
push
in
loopne
aas
std
mov
push
adc
pop
fs
aas
or
jne
xchg
adc
push
dec
pop
loop
repz
cmp
and
cs
enter
dec
mov
sarl
shlb
mov
daa
lcall
ret
inc
push
dec
mov
lahf
mov
movsb
and
in
movb
dec
and
lahf
adc
jmp
sub
add
mov
or
cmpsl
repnz
fcoml
scas
sbb
inc
clc
jle
jno
outsl
xor
outsl
pop
inc
jg
inc
cs
shll
mov
push
pop
mov
sbb
push
fs
ss
loop
push
push
push
lds
inc
shlb
push
negl
divb
popf
jmp
and
cmp
jl
aad
xlat
xchg
insl
repnz
imul
xchg
or
pop
and
mov
das
push
mov
fdivrl
dec
lahf
sbb
xchg
cmp
pop
out
mulb
adc
lock
xchg
sbb
ljmp
int
insl
jbe
or
jmp
xchg
xchg
jo
sahf
stc
or
jge
sub
pop
jne
fiaddl
mov
sbb
cwtl
pop
imull
xor
mov
imul
das
mov
lahf
and
mov
int
out
mov
popf
cmp
cld
adc
or
mov
mov
push
orl
popa
push
push
call
insb
adc
popa
ret
mov
imul
out
push
mov
mov
mov
or
sar
dec
mov
daa
test
mov
mov
ror
jne
cld
pop
lret
cmp
sbb
test
fistpll
sub
insl
xchg
xor
push
dec
push
dec
fsubrs
outsb
mov
leave
adc
or
adc
pop
pop
mov
xor
mov
iret
cmp
inc
stc
mov
pop
sub
jo
mov
int
xor
jno
lods
cs
std
xor
lret
sub
test
cmpsb
out
fists
pushf
jl
mov
mov
jecxz
adc
adcb
insb
jle
or
ret
jo
daa
xor
mov
es
xchg
jmp
fdivs
nop
mov
push
xchg
add
mov
and
je
outsb
movl
mov
lcall
cwtl
mov
jbe
ficoml
and
push
xor
dec
jle
push
pop
cmp
jmp
adc
dec
aas
inc
mov
repnz
cltd
out
cmc
cmp
sahf
xchg
scas
pop
lock
cld
push
out
ljmp
adc
sbb
adc
lock
sub
sbb
fs
xorl
xor
jne
loop
pop
inc
test
push
pushf
dec
les
insb
dec
fwait
popf
fdivrl
lods
xchg
shlb
and
leave
rclb
hlt
or
inc
lcall
or
scas
jno
xor
add
into
les
das
aam
cs
ljmp
fstpl
aad
lahf
mov
add
push
das
xor
out
mov
xchg
mov
xor
cmp
mov
rclb
fst
insb
out
and
mov
addr16
hlt
lock
xchg
xchg
push
movsl
cmp
mov
mov
mov
sti
js
frstor
outsl
cmp
in
das
fwait
add
pop
cwtl
or
mov
sbb
and
or
mov
shlb
je
icebp
mov
mov
nop
push
andl
sti
xchg
xor
xor
sbb
cltd
push
ret
cmp
inc
loope
pop
pop
test
pop
in
test
stos
pop
lret
clc
jae
inc
test
dec
stos
pop
in
mov
xchg
andl
pop
jmp
push
push
cmp
fld
stc
add
js
sbb
cmp
loop
xchg
mov
pusha
ffreep
in
mov
stos
mov
mov
dec
jg
xor
mov
pop
mov
jbe
xor
rcll
mov
std
icebp
push
mov
jmp
and
rcll
xchg
cmp
repz
push
cmp
fsubl
int3
mov
outsb
fnstcw
push
fldenv
bound
xor
sti
push
aas
mov
enter
movsl
das
xchg
sti
cmp
scas
sbb
mov
pop
dec
adc
sub
sub
scas
sti
mov
into
push
xor
adc
std
pushl
mov
jg
std
mov
push
fdivr
out
and
js
ja
loopne
int
pop
pop
in
aaa
jge
dec
scas
xchg
push
sbb
pop
cs
add
dec
sti
movsl
mov
mov
out
or
cwtl
pop
inc
inc
test
pop
je
hlt
je
repz
dec
fisubrs
and
iret
xchg
addr16
int3
add
inc
push
insl
in
cmp
call
scas
fidivs
jns
cmp
pushl
icebp
mov
mov
dec
inc
andl
aam
cmp
imul
push
mov
cmp
addl
lret
pop
hlt
pop
lcall
sti
stos
dec
das
add
mov
jmp
mov
rorb
enter
adc
mov
pop
mov
jno
pushf
stos
pusha
or
or
icebp
repnz
jl
push
mov
das
push
rcrl
dec
cmpsl
jo
repz
iret
and
pushf
xor
gs
cmp
movsb
out
ficoml
pop
dec
cmp
pop
adc
jmp
inc
inc
ret
push
sbb
fs
cs
lret
iret
or
mov
repz
notl
pop
or
adc
mov
sub
mov
mov
lret
adc
decl
loop
pop
jg
or
fcmovnu
test
je
push
or
stos
mov
cmp
popf
sbb
sbb
nop
sbb
js
pop
aad
jge
lds
sbb
loope
pushf
xor
sbb
ret
mov
mov
lods
pusha
in
push
cmp
insl
xorl
movsl
mov
sahf
pop
xlat
je
xor
daa
xor
aad
or
xor
sahf
fwait
inc
stos
adc
mov
or
sbb
mov
push
lret
cmp
pop
mov
std
ss
dec
pop
xor
mov
push
fldl
daa
test
jle
scas
ficoml
insb
pop
popa
or
es
adc
cmp
cmp
pusha
jae
ja,pn
leave
fsubr
mov
loop
in
lods
jne
fbld
loopne
jp
mov
mov
jl
pop
cmp
jecxz
movsl
mov
test
jle
or
dec
push
jg
mov
dec
lds
insl
add
add
xor
nop
cmpsl
sahf
and
imul
outsl
and
cltd
sti
sub
shlb
sbb
push
lds
and
and
std
loopne
mov
adcl
xor
pop
pop
add
cmp
dec
xchg
xchg
mov
cmpsl
push
bound
lcall
lret
cmpsb
imul
pusha
inc
cmpl
dec
push
push
ds
or
cmp
popf
fs
push
sti
or
push
jae
or
pop
cmp
mov
fldln2
nop
xor
call
xorb
leave
fistl
loop
and
add
fcoms
xor
dec
dec
into
dec
sub
pop
lcall
sub
jmp
popf
adc
mov
insl
fcmovnbe
aad
daa
dec
pusha
loope
mov
hlt
push
and
mov
iret
pushf
lea
push
and
pop
push
adc
ljmp
mov
mov
lcall
sarl
or
popf
jle
pop
sbb
xor
cmp
iret
arpl
popf
enter
clc
out
pop
in
js
out
lret
push
mov
ret
mov
sarl
dec
mov
xor
cmpsb
sbb
cmp
roll
inc
cld
add
push
int
mov
or
inc
fcmove
cwtl
and
ficoml
xchg
dec
cmpsl
shr
fidivrl
pop
test
aam
jo
leave
orl
pop
pop
add
ret
mov
jnp
and
scas
in
rorl
add
mov
ret
cmp
pop
xor
pop
mov
xchg
cltd
in
fwait
push
lea
or
aas
ds
dec
dec
movsb
pusha
xchg
xor
and
lock
pop
aaa
mov
cwtl
outsl
xchg
cld
jnp
mov
xor
sub
jb
mov
dec
xchg
leave
push
sbb
sbb
mov
fs
dec
xchg
dec
xchg
mov
and
sahf
mov
and
mov
adc
push
imul
pop
in
push
iret
xor
test
or
inc
jne
fnstenv
sbb
sahf
out
test
jae
jmp
fnstenv
and
xlat
xchg
mov
cmp
jle
stos
push
jae
add
rorb
sarb
je
sbb
xchg
adc
pop
mov
inc
lds
push
or
xchg
mov
or
out
lret
xchg
xchg
pop
jl
jns
or
gs
nop
fs
mov
sub
mov
inc
incl
adc
add
stc
leave
xor
call
into
in
orb
stos
push
call
inc
iret
jne
scas
cmp
mov
sbb
std
psrld
or
xor
adcb
pop
cmp
mov
mov
daa
lods
mov
fimuls
fcompl
into
test
fimuls
xor
in
adc
mov
jb
cld
outsl
out
imul
jbe
jmp
aam
adc
or
dec
mov
jnp
test
addr16
cltd
rol
movsl
xor
das
popf
pmaddwd
scas
call
and
mov
jnp
into
dec
push
bound
enter
push
into
cli
aad
jp
nop
sub
shr
xchg
xor
int
sub
xor
frstor
or
dec
cmp
push
cli
jge
cld
divl
pop
add
sub
inc
lds
lahf
sub
sub
sbb
das
pop
cmp
aad
and
sbb
fisttpll
xchg
push
pusha
lret
out
inc
mov
in
stc
inc
jmp
mov
jnp
lds
and
rcll
int
or
inc
jno
adc
add
pop
mov
xor
cmp
sbb
in
dec
and
pop
das
out
mov
addr16
cmp
hlt
bound
inc
loope
mov
or
mov
shrb
fld1
pop
lock
movsb
adc
negl
stos
movsl
sub
pop
repnz
movsl
cmc
push
xor
sub
jp
jl
mov
pop
aad
sub
mov
gs
test
fnstcw
push
adc
lds
sub
std
sbb
mov
data16
ret
lods
into
push
add
mov
sahf
cmp
push
movsl
rorl
mov
nop
popf
add
mov
mov
scas
in
push
aad
pop
ret
pop
mov
gs
lods
pop
rclb
repz
outsl
adc
mov
adc
jg
ljmp
sbb
test
jg
or
int
xor
adc
push
sbb
in
pop
jnp
imul
mov
pusha
clc
stos
pushfw
inc
xor
pop
orl
cltd
dec
push
cwtl
sub
outsl
xor
arpl
pusha
lret
ret
loop
cs
xlat
jno
gs
or
mov
push
out
ror
jbe
cmp
mov
jg
repz
enter
jnp
movsb
mov
dec
enter
push
push
push
stc
jg
cmp
adc
pop
pop
pop
sbbl
xchg
xchg
add
dec
mov
int3
lods
xor
cmp
aaa
or
adc
lods
jae
clc
push
sbb
fwait
lods
add
stos
test
add
repnz
outsb
jns
jo
and
adc
push
fstpt
into
test
adc
pop
fwait
aaa
ss
push
leave
xor
loop
sbb
scas
xor
push
mov
andb
lret
cmpsb
paddq
push
je
jmp
adc
punpckldq
out
in
lea
enter
imul
add
and
pop
sub
cs
sbb
dec
stos
cmp
sbb
xchg
mov
xchg
cmpsb
xchg
sub
push
dec
and
mov
xlat
jl
insb
outsb
mov
pop
jecxz
jno
add
sbb
popl
push
dec
movsl
mov
mov
imul
scas
insb
lcall
cmp
fucom
push
push
mov
je
add
jo
sbb
int
mov
mov
mov
or
loope
and
das
ret
gs
sbb
xchg
dec
xchg
das
xor
lock
gs
inc
leave
xchg
stc
fsubl
mov
ret
insl
lcall
push
xor
mov
or
pop
stmxcsr
lret
imul
push
jno
inc
lahf
mov
dec
mov
scas
fisttpll
push
lret
push
aas
jmp
sbb
mov
xchg
mov
jp
dec
pop
lods
pop
xor
loope
xchg
jne
fs
xchg
rcrl
xchg
push
xor
xchg
clc
sbb
divb
dec
pushf
outsl
sbb
daa
adc
cli
iret
std
sbb
adc
cwtl
call
pop
mov
dec
cmp
jo
xchg
lods
jbe
scas
arpl
out
mov
pop
aam
push
inc
xchg
aam
push
iret
fidivrs
inc
addr16
test
aaa
jp
movsl
add
ror
fs
cltd
jle
xchg
idivl
test
mov
xlat
cld
mov
add
adc
sub
imulb
push
bound
cmp
aad
push
dec
jo
movsl
int3
rcll
xchg
push
cwtl
mov
cmpsl
xlat
jg
lds
sub
push
ret
and
xorb
mov
jns
sbb
nop
call
mov
xchg
xchg
arpl
jbe
inc
rclb
iret
push
enter
inc
leave
xor
and
int
pop
pop
sti
sbb
rorl
and
cwtl
dec
cld
push
adc
mov
enter
enter
test
adc
aas
xchg
sbb
les
in
std
mov
lds
sbb
leave
or
fdivr
pop
mov
fidivrs
inc
adc
int3
fsubrs
sub
adc
or
or
mov
test
xor
xor
mov
inc
cld
aas
mov
adc
mov
int3
inc
sbb
popf
push
mul
push
mov
xor
in
mov
data16
dec
pop
mov
scas
out
cmp
inc
outsb
arpl
mov
pop
stc
adc
lret
mov
out
daa
xor
repz
adc
mov
leave
fsub
xchg
xchg
filds
dec
sub
data16
cmpsl
loope
xchg
dec
out
aad
test
xor
xchg
sub
fwait
xchg
imul
fldcw
and
dec
lods
scas
fnstsw
cmpsb
repz
and
aad
cs
out
dec
mov
dec
pop
lock
fisttps
push
pusha
mov
stos
xor
lret
rorl
cmp
jle
rcrl
cld
xchg
fbld
mov
mov
repz
cmp
clc
adc
jge
dec
sub
push
mov
pop
pop
sbb
pop
bound
xchg
jmp
das
pop
fsubr
push
inc
mov
dec
mov
scas
and
push
cmp
test
pop
jae
mov
sub
xchg
aaa
out
fucom
lods
xchg
repnz
xor
jae
push
mov
dec
inc
aad
push
aam
imul
xor
cmp
jg
mov
movsl
cwtl
mov
adc
lret
ljmp
out
repz
outsb
pop
and
inc
dec
out
in
stos
mov
cmp
and
das
fldcw
mulb
mov
pop
cli
inc
scas
cld
out
int
sbbb
daa
xor
and
and
mov
mov
fidivrs
aam
push
sbb
fstl
pop
cli
xor
daa
and
fisttpll
jnp
xor
xchg
icebp
lock
xor
fmuls
lock
inc
sahf
out
outsb
mov
cld
insb
iret
jno
jnp
mov
daa
xchg
jmp
cmp
cs
inc
mov
adc
and
xchg
mov
push
push
mov
inc
and
mov
frstor
aam
mov
gs
and
push
clc
sti
mov
or
cmpsb
or
jbe
int3
mov
loopne
xor
dec
jbe
pusha
push
shrb
push
push
cmpsb
sub
jbe
adc
cmc
cli
loop
enter
test
add
aad
fwait
xor
frstor
or
mov
xlat
sbb
add
cltd
repnz
pop
test
js
and
imul
cli
cmp
or
xor
test
dec
cmc
mov
jmp
and
jge
arpl
faddl
push
ret
std
aam
dec
scas
push
and
ja
and
fstp
inc
and
cli
or
leave
out
inc
or
xor
nop
jl
xor
or
cwtl
test
scas
cli
add
inc
iret
fs
lahf
lods
ds
or
or
cli
mov
pop
aaa
ja
int3
pop
in
fmuls
pop
push
gs
xor
cld
js
mov
das
pushl
mov
les
sub
mov
pop
sbb
inc
jl
gs
fucomip
insl
test
test
cmc
clc
stos
add
fbstp
jo
dec
xchg
jbe
xchg
in
jae
xor
jl
outsl
cld
mov
addr16
repnz
pop
mov
pop
fwait
sar
insl
mov
iret
mov
ss
js
adc
ljmp
push
push
sbb
mov
insl
hlt
pop
add
dec
inc
inc
in
pop
xchg
sub
add
std
std
cmpsb
int3
xchg
cld
push
xchg
jb
push
jno
mov
adc
xchg
lock
insb
mov
ror
sti
bound
ss
dec
inc
pusha
fldt
popf
ja
inc
xor
movb
int3
loope
sbb
sbb
jnp
mov
add
popf
xor
outsb
icebp
mov
orb
mov
not
xor
hlt
mov
das
aas
decl
or
fs
jg
inc
fists
popa
adc
arpl
out
arpl
sti
ds
and
mov
xchg
fmuls
lds
push
push
adc
jno
sbb
in
mov
fnstcw
outsb
dec
icebp
and
loopne
fsubs
xor
shl
movsb
arpl
jnp
sahf
and
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
out
imul
pushf
jnp
int3
cmp
adc
mov
cmc
jl
or
inc
pop
out
push
movsb
xor
inc
push
dec
pop
cmp
push
lret
clc
cmp
testb
sbb
adc
ficomps
lds
cmp
shrl
push
pop
add
jnp
and
not
rcl
xchg
sub
cbtw
adc
mov
loope
es
outsb
mov
push
dec
xchg
rolb
inc
sar
add
in
out
xchg
lahf
pop
mov
mov
mov
or
cld
mov
inc
adcb
in
and
daa
push
aam
mov
faddl
sbb
jmp
mov
pop
jnp
mov
xchg
dec
in
imul
add
jb
add
ror
adc
sub
sub
loop
int3
push
inc
insb
pop
mov
add
pop
in
cmp
insl
and
int3
dec
jnp
orl
cmp
or
mov
cs
dec
and
fsubrs
pop
mov
mov
adc
test
jp
sub
jg
idiv
cmp
fstps
dec
mov
pop
adc
mov
aaa
enter
les
or
clc
push
adc
mov
shlb
jne
cmp
aam
and
and
mov
daa
test
pop
sbb
out
xchg
pop
dec
or
mov
jmp
xor
cmp
dec
lret
push
mov
mov
cmp
ljmp
lret
sar
hlt
insb
loop
xchg
icebp
sub
ss
mov
iret
int
jg
inc
pop
test
add
mov
das
jo
je
xchg
push
mov
cmovb
in
test
pushaw
mov
arpl
or
push
xor
pop
mov
std
hlt
mov
pop
cmp
aad
mov
fsub
andb
insl
mov
and
loop
sub
mov
call
dec
add
repz
aam
cmp
lods
dec
and
lods
addb
rcr
push
mov
mov
dec
jae
mov
les
mov
addr16
movsb
andl
in
xor
push
add
iret
sub
sub
mov
mov
les
call
pop
vmovups
and
mov
je
dec
out
xchg
and
inc
lret
push
jl
popa
mov
in
jbe
mov
mov
lret
adc
sti
jg
ficoml
movsb
es
stos
test
andl
cmp
cmp
xchg
andb
sbb
xor
add
addr16
pop
loop
sub
add
jle
add
xchg
int3
push
adcl
andl
mov
dec
ror
fistpl
push
out
mov
cmc
xchg
xchg
push
stos
rcrb
xchg
arpl
sti
xchg
xchg
xor
loopne
scas
fcomps
leave
inc
jnp
int
push
adc
je
or
popa
incb
lcall
ds
scas
cmp
inc
addb
lret
fs
stc
push
add
shll
std
mov
mov
sbb
fsubs
and
cvtpi2ps
cwtl
arpl
xor
scas
pop
test
push
rorl
or
cvtps2pi
mov
dec
dec
inc
lahf
or
adc
filds
or
pop
sti
mov
mov
mov
inc
arpl
jb
cmp
fisttps
jle
sbb
jg
imul
imul
adcb
or
int
orl
inc
mov
cltd
xor
lcall
jmp
mov
fmull
clc
adc
adc
xlat
add
call
pop
xchg
aad
pop
lds
gs
lret
mulb
int3
scas
cmp
fsubrl
daa
lea
push
in
xor
cli
into
arpl
aas
in
xor
mov
stc
enter
out
cmpsb
incl
out
scas
out
mov
adc
push
inc
stos
sbb
repz
adcl
sahf
lds
test
jae
test
lods
xchg
jnp
xor
or
jmp
inc
movsb
cli
push
xor
pop
lret
stos
es
movsb
xor
lods
pop
jp
mov
mov
cmp
xor
push
rorb
fwait
mov
shll
lods
mov
sahf
push
sbb
sbb
rorb
addr16
sbb
loopne
test
sbb
dec
mov
out
inc
cmp
pop
call
mov
out
es
pop
or
jmp
ss
sub
repnz
mov
lds
xchg
adc
cmp
daa
pop
shrb
pop
aaa
jp
adc
repz
es
lods
aas
pop
ja
mov
and
pop
shrb
test
xchg
xchg
icebp
addb
jns
mov
push
jg
mov
cmp
sarl
push
xlat
push
jo
add
jae
inc
js
pop
mov
sti
subb
outsl
jmp
jne
pop
fisubl
stos
push
xchg
dec
jnp
jge
cmp
stos
and
test
cmp
stos
or
add
pop
outsl
mov
jge
enter
mov
rcrl
es
pop
jns
jge
xchg
mov
sbb
stc
or
pop
lods
scas
xor
push
jnp
mov
movsb
cmp
das
pushf
mov
mov
test
inc
pusha
out
add
das
inc
cs
cmp
jne
dec
cmp
adc
add
inc
pusha
loopne
cwtl
add
mov
rol
pushf
xor
pop
cwtl
xchg
mov
xchg
xor
jns
pusha
and
adc
aaa
and
loopne
mov
std
sbb
mov
movsl
in
fld
pop
insb
jno
fwait
pusha
inc
mov
shrb
add
sahf
mov
test
xor
fs
sub
icebp
cmp
sub
inc
jge
adc
aam
aam
xor
inc
cwtl
mov
mov
xor
stos
insl
add
inc
or
dec
or
or
iret
xchg
pop
mov
ds
test
ds
stc
repnz
sbb
mov
insl
mov
or
repnz
mov
int3
push
pop
mov
mov
aaa
inc
shlb
mov
cmp
sahf
aaa
jecxz
shlb
xchg
scas
fnstenv
and
lret
inc
cmc
stos
out
iret
mov
popa
fwait
xchg
in
out
dec
jne
out
push
scas
cmp
lods
pop
adc
les
mov
and
aad
jg
mov
sar
cltd
xchg
cs
nop
ss
ret
xor
negb
popa
popf
jbe
jne
imull
mov
dec
sbb
stc
push
aam
push
faddl
movsb
mov
or
mov
fs
ja
xchg
lahf
into
sbb
mov
ret
popa
dec
sbb
pushf
jp
movsb
sbb
and
or
ffreep
and
ljmp
and
jb
add
insl
out
sbb
mov
sub
adc
cwtl
push
cmp
rol
mov
outsb
subb
xor
cltd
lahf
push
movsl
call
cmp
mov
inc
cmc
pop
jle
push
jb
adc
in
pop
and
int
mov
cmp
pop
cmp
xor
js
jns
into
jge
xchg
sahf
cltd
loopne
jnp
mov
arpl
xor
inc
hlt
shlb
xor
xor
ret
in
int
mov
mov
sbb
xchg
mov
imul
loopne
push
inc
dec
pop
and
add
jno
pushf
push
cmp
mov
dec
imul
out
ret
scas
ret
mov
call
mov
pop
sub
lods
xchg
sub
mov
maxps
and
stc
mov
pop
push
into
fwait
xchg
enter
sub
imul
shrb
fiaddl
push
mov
andb
mov
push
dec
jge
jp
jae
lahf
xlat
inc
mov
mov
cmpsl
jbe
mov
inc
mov
cs
aaa
xchg
pop
xor
mov
cmpsb
ljmp
mov
sub
je
jno
sub
pop
xchg
stc
push
jp
cmp
mov
mov
popl
push
jns
pusha
fiadds
aas
ss
test
push
or
xor
sub
sbb
mov
std
adc
push
sbb
and
mov
mov
notl
jns
scas
cmpsl
rorl
mov
stos
mov
mov
je
pusha
loopne
dec
push
xchg
xchg
ljmp
pusha
push
sbb
pop
ds
shlb
test
and
mov
ss
mov
cld
xorb
jl
push
outsb
enter
rclb
mov
mov
push
sbb
mov
jb
ret
push
mov
fisttps
sbb
jo
arpl
inc
adc
mov
int3
push
ss
push
or
cwtl
repz
arpl
cmpsb
or
mov
ja
dec
aas
jmp
xor
or
fs
rolb
cmp
test
inc
add
es
mov
lods
out
data16
shlb
rorb
pop
and
push
dec
pop
cli
repnz
popf
dec
add
xchg
ss
xor
movsb
sti
insl
add
pop
adc
mov
dec
lcall
jns
mov
ficoml
insl
add
gs
subps
inc
out
cmpsb
clc
adc
add
mov
xor
ret
out
mov
push
aam
cmpsl
orl
shll
xchg
mov
mov
out
xchg
repnz
or
dec
lret
ret
mov
cmpsl
jge
addl
in
leave
or
xchg
and
or
sbb
into
iretw
jns
inc
dec
fwait
or
mov
cli
jnp
jl
hlt
int3
inc
inc
jmp
bound
lret
je
lahf
adc
mov
in
add
and
les
aam
pop
subb
lea
jo
jle
stos
out
adc
cmp
push
cwtl
push
rcrl
add
xor
nop
sub
les
lock
std
mov
aaa
or
sub
sub
mov
movsl
popf
adc
mov
mov
xchg
or
in
xchg
outsl
xchg
inc
int3
jbe
pop
imul
jnp
data16
sbb
and
testl
lret
mov
push
push
pop
and
pop
and
xor
or
fstpl
test
cmp
out
mov
cwtl
icebp
cld
xchg
mov
pop
sub
sub
orb
pop
gs
sbb
in
sar
or
fisubl
xchg
fsubs
dec
cmp
mov
out
jo
aas
cmp
das
push
sub
xor
shrl
loop
cmpsl
add
addr16
mov
jnp
cmp
mov
jns
in
jno
pop
mov
orb
jl
mov
loop
add
mov
ret
rorl
sbb
int
fwait
repz
or
inc
push
sub
mov
stc
sub
jnp
ss
sti
mov
mov
sbb
push
push
iret
mov
pop
sub
gs
pop
adc
lods
mov
xor
rep
cmc
mov
cld
lahf
cmp
dec
loopne
dec
fidivl
mov
and
nop
ret
das
adc
or
cmp
adc
js
adc
or
lock
aad
push
adc
lahf
icebp
add
dec
or
imulb
scas
js
int
adc
jno
negb
xchg
iret
cmpsb
inc
or
arpl
push
and
addr16
push
mov
je
cmp
pop
insl
xchg
iret
adc
push
mov
movsl
lea
sbb
mov
lret
stos
pop
cld
mov
cmp
into
mov
movsb
sbb
or
insl
loope
scas
and
dec
jmp
test
lahf
stc
and
push
or
pop
jmp
sarb
call
xchg
jns
push
loop
push
clc
xchg
sub
and
aas
mov
mov
aas
or
mov
mov
jo
fstpl
loope
mov
push
je
xchg
inc
add
and
xor
push
lahf
out
scas
in
sti
test
mov
test
popl
xchg
xchg
push
sti
or
stos
clc
testl
je
std
imul
sub
rcll
or
sbb
dec
push
cmpsb
sub
imul
lds
hlt
iret
imul
mov
xchg
add
outsl
push
jb
xor
mov
into
cld
sbb
xchg
jmp
loopne
movsb
sbb
inc
shlb
scas
jp
xor
test
shl
das
mov
add
sti
sbb
sti
pop
jl
lock
mov
lds
push
cltd
add
into
lret
ja
jle
push
test
add
stos
popa
lahf
mov
adc
clc
cli
adc
pop
sub
pop
adcb
cmp
iret
xchg
fnstcw
sub
jp
pop
push
aas
out
mov
test
mov
push
outsb
ja
stos
lods
bound
enter
cmp
add
negl
sbb
mov
inc
pop
cmpsl
iret
int3
lods
pop
inc
push
js
imul
pop
std
popf
out
fdivs
icebp
hlt
stos
mov
pop
push
rcrb
xchg
pop
lcall
xchg
out
push
lret
loop
mov
mov
lret
mov
das
aas
add
pop
jge
sub
pop
and
pop
ret
cmp
lea
sahf
mov
dec
shlb
rol
shlb
jno
daa
adc
inc
sub
mov
mov
pop
shlb
mov
pop
push
jge
and
sahf
outsl
dec
lods
fcomps
mov
test
ud0
call
loopne
xor
inc
ror
xchg
popf
mov
int
or
push
les
repnz
imul
fs
rorl
push
and
fcoml
inc
fidivrl
clc
or
inc
mov
jge
mov
test
cli
ss
sbb
aam
hlt
adc
mov
push
cmp
fildl
mov
js
pushf
imul
lea
int3
inc
adc
pop
outsb
popa
xchg
andb
lock
outsl
xchg
lods
popf
push
mov
inc
je
test
stos
pop
cmpsb
sbb
mov
mov
or
jle
pop
adc
sbb
add
cmp
in
cs
cmp
sbb
ss
cmp
mov
scas
lcall
dec
sbb
and
popf
dec
scas
les
adcb
movsl
repz
pop
jns
cmpsl
insb
xchg
pop
ds
aad
addr16
sbb
jl
cmp
aam
xor
int
icebp
mov
inc
bound
push
push
cmp
out
mov
dec
add
xchg
iret
das
or
outsl
adc
subb
sti
mov
inc
sub
mov
jno
xor
pop
push
lcall
inc
xchg
aam
scas
xorl
sbbl
jg
sbb
pop
mov
fwait
cmc
addr16
popa
sti
jnp
call
in
loope
pushf
frstor
jnp
insb
and
popf
xchg
stc
dec
lds
or
mov
inc
push
out
insb
mov
push
sbb
addr16
inc
imul
lods
adc
sar
mov
or
mov
testl
clc
pushf
jg
popf
nop
rcll
and
clc
mov
adc
add
insb
pop
out
jg
xlat
dec
loop
ret
in
cltd
adc
fcoms
in
cmpl
xor
inc
aaa
or
cmpsb
testb
out
fidivrs
jbe
aam
stc
stc
rol
push
inc
mov
jge
cmpsl
movsl
pop
aas
mov
test
leave
add
push
push
sbb
sbb
cwtl
mov
push
lea
push
jg
and
sahf
pop
inc
js
pop
and
loopne
in
add
popf
jnp
imul
jmp
aaa
jo
add
ds
sub
mov
addr16
cmp
push
rolb
add
jne
aad
and
push
and
or
mov
cs
or
inc
xor
cmp
mov
pop
xor
andl
lods
cld
xchg
js
out
sub
xchg
mov
ret
pop
jmp
hlt
cwtl
popa
je
sahf
and
js
mov
xchg
mov
inc
jo
gs
sbb
rcrl
ficoms
andb
rorb
lcall
in
sub
lock
out
cmpsb
aas
lahf
sub
jb
jle
aam
shr
mov
sub
jp
dec
jne
cmp
and
xchg
clc
scas
or
enter
cmp
push
fisubl
mov
mov
std
scas
lret
or
es
mov
pop
stc
lret
gs
mov
gs
test
jbe,pn
cmpsb
shrb
lds
loope
movsl
daa
fdiv
leave
and
ss
adc
and
mov
repnz
pusha
adc
inc
hlt
adcl
pop
adc
popf
jae
push
pop
icebp
inc
insl
aad
xchg
fstpt
repnz
ja
cld
lea
mov
dec
sahf
aad
xor
mov
popl
out
inc
cmp
inc
leave
out
test
test
xchg
push
jmp
fnstcw
fidivs
mov
add
pop
jmp
loope
or
jg
mov
icebp
arpl
rorb
jl
xor
and
adc
inc
sub
push
cmpsb
mov
inc
cli
fildll
mov
rcrl
xchg
sub
ds
aaa
inc
mov
dec
push
adc
jbe
push
and
arpl
dec
nop
jo
mov
and
lds
add
movsl
sub
sbb
mov
das
mov
jo
int3
dec
lahf
outsb
or
adc
pop
jns
out
or
adc
cmp
xchg
inc
add
sub
inc
and
clc
icebp
cld
cli
cwtl
adc
sbb
into
push
stos
cwtl
mov
out
popa
mov
shl
scas
idivb
jecxz
jl
dec
sahf
jmp
jo
or
jns
inc
adc
repnz
roll
sub
popf
popf
cli
jnp
pop
xchg
iret
jno
dec
push
loopne
and
add
cli
cmp
std
jo
xchg
sbb
repnz
or
pop
xchg
loope
sahf
xchg
xchg
dec
and
stos
sahf
fsubl
clc
insb
hlt
pop
inc
hlt
out
sub
mov
push
hlt
sti
rcll
test
ret
pop
test
das
aaa
lcall
sub
das
push
push
in
mov
cmpsl
xor
push
stos
xchg
loop
jb
adc
inc
dec
xchg
sub
enter
mov
pop
fdivl
in
mov
xchg
sub
ffreep
call
mov
loope
inc
popa
dec
xchg
dec
sbb
cltd
out
std
sub
jnp
mov
les
into
add
xchg
sbb
stos
cmpsl
mov
push
cmp
push
ret
sbb
loopne
mov
fildl
incl
inc
fs
adcl
ror
push
inc
pop
bound
pop
sbb
dec
dec
aad
ljmp
fwait
jns
jns
push
mov
pusha
cmpsb
ss
inc
fcmovnu
cs
jnp
and
fbld
mov
ret
movsb
or
add
jae
inc
pop
js
add
les
sbb
adc
push
decb
mov
ret
cmpsb
cmp
scas
test
jns
jmp
add
xchg
xchg
pop
add
pop
mov
jp
jae
mov
lods
push
flds
cmpsl
pop
jle
jne
aaa
into
xchg
inc
mov
test
pop
jmp
pop
movsb
mov
inc
xchg
add
sub
push
xchg
fmull
push
cmc
jno
stos
les
pop
popf
insb
jne
es
jp
mov
into
inc
push
push
push
les
adc
cli
mov
cmpxchg
xlat
mov
mov
pop
mov
or
xchg
adc
mov
jp
leave
fildll
fwait
xor
jo
inc
dec
push
js
inc
sbb
add
mov
mov
mov
and
or
lds
cmc
push
cmp
filds
fidivrl
enter
int
mov
and
mov
adc
les
sbb
jmp
cmpsb
push
xchg
cmp
jge
cmpsl
xchg
insl
arpl
fildll
add
mov
fcomp
mov
aaa
popf
cmp
mov
ljmp
mov
dec
push
mov
stos
dec
sub
dec
bound
mov
cmp
sub
xchg
call
sbb
add
popf
js
adcb
into
subl
sbb
add
xor
out
sub
aaa
mov
sti
cs
imul
pop
je
rorb
sub
ret
arpl
out
cmp
cmp
testb
fistl
or
and
push
inc
in
aam
pop
ds
out
clc
lods
icebp
add
jp
mov
loope
push
mov
xchg
psubb
push
adc
out
stos
pop
fnstenv
loop
pop
xchg
cmp
dec
dec
sub
outsb
in
cld
pop
mov
add
xchg
mov
pusha
inc
enter
and
jno
sub
lea
loopne
out
mov
mov
popf
xchg
mov
mov
push
pop
and
std
cmp
jl
sbb
lea
inc
aad
sub
push
and
jbe
adc
add
test
loope
repz
pushw
ficoms
sub
in
ret
push
mov
sub
ss
enter
xchg
pop
xchg
jge
popa
loope
in
out
push
push
adcl
sub
ljmp
sub
cmovg
pushf
in
pop
jns
mov
aam
loop
xchg
out
aaa
push
inc
sbb
or
and
int3
pop
pusha
in
in
xchg
aad
subl
and
loopne
xor
lds
mov
push
push
mov
jb
jle
popf
out
sar
or
mov
dec
cmp
mov
lcall
push
push
push
ja
and
sbbl
pop
fidivrl
push
or
adc
into
or
filds
outsb
loopne
cmc
sbb
imul
aas
inc
add
jge
push
mov
push
xchg
sub
in
data16
xchg
lods
xchg
lahf
movl
cli
iret
ss
mov
push
inc
pop
ss
pop
jnp
xorb
insb
sub
mov
test
push
sahf
dec
push
pop
leave
lea
int
cmp
add
std
in
cmpsl
cli
daa
fimuls
jae
mov
fisttpll
jmp
test
mov
inc
add
vpsrlq
sahf
mov
lea
das
sub
test
mov
jg
into
addl
and
xchg
sbb
rorl
xor
push
xchg
out
mov
pushf
lock
popf
lock
js
sub
pushf
mov
ret
lcall
lahf
push
adc
sub
cmpsb
mov
stc
fistl
ret
push
or
repnz
fadds
jmp
cmp
mov
aaa
xchg
push
mov
push
pop
je
out
or
pop
scas
push
lret
stos
jno
aam
in
fldcw
jne
jle
cld
sbb
push
ret
mov
pop
lock
mov
adc
enter
push
push
adc
fsubs
push
pop
mov
add
test
and
xlat
mov
leave
xchg
sub
dec
sub
push
lcall
mov
or
ficomps
add
pop
mov
adc
data16
sub
gs
xor
ljmp
icebp
mov
cmpsb
cli
adc
inc
add
cmc
and
xor
shlb
dec
sub
xor
mov
rorb
mov
and
out
ror
aad
or
cld
add
and
out
in
inc
enter
mov
cltd
add
xchg
mov
or
out
jo
sbb
pushl
or
leave
add
shl
fisttps
push
inc
mov
mov
loope
movsl
loope
jge
hlt
hlt
xlat
inc
inc
dec
into
in
inc
or
push
pusha
and
in
mov
mov
mov
lock
pop
push
add
xchg
sub
pop
sahf
pop
cltd
leave
in
cmp
mov
jae
orb
xor
call
fsts
push
push
sub
iret
scas
lret
or
test
adc
incb
pop
pop
cmp
shrb
sti
mov
cmp
and
xor
nop
jbe
xchg
adc
fwait
sar
pop
xchg
or
das
mov
inc
mov
jnp,pn
mov
leave
or
inc
cmp
or
lea
push
or
pop
test
jmp
nop
mov
js
out
mov
out
ja
pop
jecxz
mov
cmpsb
mov
mov
push
xor
push
fs
repnz
test
jp
aad
cmpsb
andl
clc
int
in
or
popa
out
sub
or
inc
outsl
add
out
outsl
clc
stc
lea
int3
hlt
shl
in
in
stc
xor
dec
xchg
pop
cli
and
xchg
mov
add
mov
int3
int3
daa
inc
push
xchg
stos
add
cmc
fidivs
jne
and
jne
cmc
aas
pushf
incb
hlt
mov
cmp
push
scas
ficompl
push
add
bound
ja
dec
rcll
fwait
push
sti
lahf
dec
test
outsb
out
adc
or
mov
lods
lock
add
mov
cmp
frstor
cmp
fs
stc
decb
and
sub
push
pop
adcb
and
das
mov
pop
pop
loopne
ret
movsb
sbb
adc
lods
xor
shlb
or
in
cmp
xchg
sub
xor
jo
repz
xlat
mov
adc
testl
cmpsb
ret
push
aad
mov
hlt
add
loope
sub
and
add
lret
enter
mov
icebp
push
mov
push
in
lock
cwtl
popa
out
mov
int3
clc
mov
jbe
pop
sbb
incb
cltd
es
cld
mov
mov
push
cli
jle
outsb
pop
cwtl
lret
jg
xchg
in
push
addr16
stc
push
mov
cmp
std
frstor
push
loopne
jbe
or
orb
js
inc
lock
and
outsl
push
sbb
aad
pop
jb
shrl
bnd
sbb
sub
outsb
stos
clc
fildll
sbb
aaa
aam
add
inc
popf
xchg
std
in
inc
cmp
mov
les
xchg
jbe
mov
add
mov
push
iret
add
ja
sub
out
sbb
mov
sub
out
fcomps
ret
pushf
mov
ljmp
xor
mov
fwait
leave
jb
adc
adcb
and
xchg
sbb
bswap
shll
sbb
jle
aad
and
in
stc
xor
dec
adc
add
adcl
xchg
mov
cmp
mov
xchg
in
mov
fs
add
das
ret
cmc
dec
ret
add
sbb
jge
icebp
jne
rolb
mov
adc
and
gs
push
jmp
adcb
nop
pop
xchg
nop
out
stos
push
call
ss
arpl
sub
dec
mov
sbb
arpl
mov
mov
sbb
jb
sbb
movsl
or
xchg
xchg
mov
in
adc
imul
mov
pop
pop
mov
insb
or
into
repnz
fsubl
sarl
mov
dec
fldlg2
in
ds
jb
adc
rcl
xorl
das
cmpl
inc
fidivs
mov
mov
aas
mov
jnp
mov
lods
jmp
mov
mov
lods
arpl
cltd
mov
push
pop
popf
push
dec
mov
dec
fldcw
lods
and
movsl
in
shll
insl
pop
nop
mov
jg
xchg
mov
push
scas
jb
cld
aam
out
mov
jmp
sbb
outsl
ljmp
shrl
test
test
lret
jg
push
mov
and
int
xchg
inc
ljmp
cli
hlt
push
sub
sti
fnsave
jbe
lret
mov
outsb
inc
movsb
dec
cmp
test
pop
out
cmp
cmp
addr16
mov
jns
aad
cmpsl
adc
mov
inc
imul
mov
out
push
adc
dec
jo
fistpl
dec
sarb
pop
dec
hlt
insb
outsb
sqrtps
mov
stc
rcrl
ljmp
ss
ret
pop
gs
rclb
arpl
xor
aad
mov
fisubrl
stc
inc
cltd
push
movsb
imul
jmp
cltd
dec
rorl
mov
mov
adcl
je
cmpsl
jp
pop
push
inc
hlt
cld
clc
ljmp
lret
inc
dec
dec
mov
shrl
ffree
mov
outsb
mov
scas
lds
mov
push
shll
ss
push
fwait
cmp
in
test
insl
in
or
inc
cs
and
inc
lret
inc
lahf
pop
xchg
jge
stos
idiv
xor
cwtl
repz
ret
icebp
jns
xchg
adc
mov
inc
sbb
cs
dec
jo
sub
pushf
fiaddl
pop
repz
lahf
sti
cmp
pop
lods
mov
cwtl
cmp
dec
jnp
das
xchg
shl
push
jmp
adc
outsb
fcomps
add
and
jo
sahf
dec
mov
inc
rorb
or
xchg
ret
repnz
ss
or
inc
cmp
cmp
sub
popf
push
rclb
lret
inc
adc
lcall
dec
jb
inc
push
mov
xor
je
inc
outsl
fwait
into
mov
aam
adc
out
mov
jmp
inc
ficomps
xchg
aaa
das
lods
pop
cmpsb
cmp
fwait
push
popa
mov
adc
clc
xchg
push
add
xchg
cwtl
or
aaa
je
jecxz
adc
in
lret
sbb
mov
inc
jecxz
movl
jmp
rcrb
pop
xchg
fwait
int3
jl
inc
mov
fldcw
and
mov
push
mov
int
push
aad
jle
jle
sti
ret
add
mov
mov
jb
lods
das
xchg
mov
fs
ss
push
xor
out
cli
jae
in
pop
sbb
mov
cmpsl
les
imul
lods
lds
mov
dec
mov
cmpb
or
mov
fs
out
adc
push
mov
xchg
es
adc
cmp
lahf
pop
mov
pop
pop
ss
ja
aas
or
jg
pop
rcll
cmp
stos
sub
mov
aam
in
cmp
cmp
xlat
pop
jg
stos
sub
icebp
xchg
mov
cltd
pop
cmp
aaa
addb
call
sbb
pop
sub
and
loop
mov
mov
out
mov
repz
push
rolb
jge
mov
ljmp
dec
dec
addb
jp
jge
sbb
movsb
add
mov
sub
inc
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
orb
jnp
pushf
jnp
pop
movsb
dec
jp
movsb
mov
test
xchg
inc
mov
mov
and
push
call
cmp
outsb
or
inc
out
mov
cmp
sub
leave
in
out
sub
mov
lock
push
xor
stos
or
popf
jne
jb
dec
xchg
jp
inc
lods
sti
rclb
cli
in
mov
push
sarb
icebp
fucomi
aad
lods
inc
jle
inc
int
ljmp
mov
aaa
test
xchg
sub
pop
push
sbb
push
arpl
mov
pop
pop
sbb
sahf
addr16
jmp
xor
add
adc
cmp
dec
mov
sub
mov
or
ds
in
mov
pushf
jg
insl
mov
int
sub
cmp
mov
sbb
pop
push
pop
push
mov
mov
push
mov
das
cmp
xchg
clc
inc
int3
xchg
lods
adc
in
lret
pushf
in
data16
dec
add
push
gs
xchg
sbb
push
jmp
inc
mov
pop
dec
aam
mov
jl
mov
xor
sbb
outsl
loope
loopne
add
add
dec
cmp
mov
cmp
and
dec
xor
xchg
pop
mov
mov
lahf
sub
mov
push
pusha
aad
inc
pop
movsb
rcrb
lods
jmp
lea
test
cmp
jb
jle
outsb
leave
mov
mov
andl
mov
adc
xchg
std
add
mov
dec
cmpsl
mov
xor
scas
test
pop
mov
ss
enter
data16
or
mov
pushf
incb
cwtl
std
ljmp
pop
inc
sub
cmp
imul
mov
mov
cmp
fldt
cmpsb
xchg
movsl
jbe
sub
rclb
dec
mov
pop
les
dec
sub
lcall
push
orb
repz
insl
pop
add
pusha
das
xchg
xlat
in
data16
sarb
pop
sub
fbstp
sahf
jg
lea
iret
jp
push
sub
dec
dec
and
and
fidivl
aam
jo
lods
sbb
or
fdivs
pop
cwtl
dec
addl
mov
addr16
jle
lods
inc
xchg
inc
mov
sbb
push
push
jns
xlat
cmpsl
movsb
test
add
nop
jg
xor
jno
popf
scas
icebp
arpl
ds
stos
pop
loop
jnp
orb
test
ficoml
repnz
mov
lcall
ret
and
adc
lret
sub
xchg
sti
xchg
push
lahf
inc
dec
sub
aas
mov
cmp
xor
sub
ljmp
mov
mov
or
cmpl
nopl
out
stos
jmp
push
xchg
cmp
in
stos
push
or
adc
dec
cmp
ds
cmp
loope
clc
aam
jmp
sub
rol
push
aad
mov
sar
test
in
je
roll
in
test
add
inc
ja
lods
mov
data16
ljmp
xchg
and
mov
cwtl
or
push
test
or
or
shll
pop
in
mov
pop
push
aaa
out
cwtl
ja
and
test
xor
pushf
sti
into
sub
mov
xor
push
sub
lret
movsl
dec
idivl
xchg
inc
aad
in
dec
std
dec
adc
jne
int
mov
fldt
lods
add
xlat
xchg
int3
popw
pop
xor
or
mov
push
add
pop
pop
into
pushf
add
mov
mov
and
push
cmpsl
adc
std
mov
pop
sbb
mov
cmp
xchg
stc
jmp
and
inc
sub
push
push
sub
stos
cli
sti
adc
int
sahf
cltd
enter
fwait
jecxz
adc
or
in
bound
sarb
fstpl
ja
cwtl
sub
jl
scas
adcl
lcall
mov
fwait
fs
xchg
scas
xchg
pop
mov
mov
and
mov
xchg
jge
jmp
pop
fisubrs
jbe
loop
mov
ds
push
jae
bnd
scas
mov
std
pusha
hlt
sub
rcll
sbb
cmp
mov
lods
sub
adc
loopne
add
pop
shr
sbb
repnz
mov
sbb
dec
addb
and
xchg
cmp
cs
cmpb
daa
dec
sbb
out
clc
pop
sub
cli
xchg
xchg
ficoml
cmp
mov
cmp
lret
mov
add
mov
mov
mov
or
or
mov
ret
out
mov
outsb
lock
cli
loop
cmp
rolb
jo
fwait
xor
das
adc
add
adc
sbb
movsl
lret
pushf
outsb
jmp
mov
pop
cmpsl
mov
mov
andb
push
in
inc
icebp
out
movsl
push
mov
rorl
mov
aam
mov
jne
or
repnz
lods
jl
out
addl
in
xchg
jge
in
lods
sub
pop
xchg
xor
push
pop
shr
mov
sbb
mov
mov
inc
dec
push
cmpsl
jbe
pop
add
xchg
enter
into
not
rol
scas
cmp
sbb
push
mov
and
sub
mov
jle
xchg
stos
pushf
jge
xchg
mov
mov
sub
scas
mov
mov
add
in
call
flds
pop
scas
pop
imul
jmp
xchg
das
mov
sub
xor
fisubs
mov
je
rcrb
stc
and
cmp
leave
in
mov
add
mov
add
lea
pop
out
dec
fdivrs
jo
inc
lret
icebp
mov
jecxz
shll
xor
sahf
xorl
adc
inc
cmpsl
inc
mov
fcompl
cs
fincstp
enter
test
mov
data16
data16
cwtl
mov
scas
clc
mov
push
incl
jnp
push
adc
fcomip
in
push
adc
hlt
push
das
jo
push
fidivrs
or
shl
in
shl
imul
dec
lret
subl
mov
mov
je
add
inc
mov
testb
ss
cmp
ljmp
cs
cld
andb
pop
adc
enter
je
call
sub
cmp
jnp
fs
dec
and
test
out
cmp
icebp
pop
dec
pop
lods
sbb
pop
sbb
pop
jns
into
cmp
sbb
stc
cmpsl
xor
jp
jno
popf
pop
push
scas
movl
mov
in
push
xchg
mov
dec
and
data16
cmp
imul
fcmovnu
adc
shrl
dec
pop
sbb
rcrl
push
call
push
sub
roll
mov
mov
sbb
insl
or
outsb
mov
pop
mov
mov
push
cmp
enter
sahf
lcall
mov
xchg
in
orl
clc
cltd
sarb
pop
push
daa
cli
pusha
xor
mov
ljmp
jmp
mov
out
xor
cmp
add
daa
adc
mov
adc
scas
data16
lea
pop
cltd
lock
adc
rorb
pop
loopne
or
mov
mov
loopne
jb
or
xchg
sub
ljmp
lret
cli
cs
jmp
insl
pop
popa
ja
jne
into
or
loop
adc
mov
std
push
xchg
and
cmp
aam
arpl
data16
sub
test
mull
fistpl
int3
mov
mov
sub
shrb
arpl
daa
sbb
not
vunpckhps
leave
notb
pop
fisttpl
scas
roll
std
xchg
and
inc
inc
jo
push
dec
in
or
lahf
js
imul
test
adc
sub
jo
leave
pop
and
jnp
push
bound
nop
rclb
dec
loop
insb
cmc
into
iret
fcmovbe
ret
vucomiss
inc
in
rcrl
xchg
dec
fwait
jae
lods
outsb
xchg
dec
push
jo
pop
and
ret
sub
jo
dec
shll
xchg
push
add
push
je
fdivrl
inc
pop
mov
movsb
fdivp
push
xchg
mov
mov
ds
mov
arpl
pop
test
iret
xchg
je
mov
lods
or
mov
adc
outsb
or
mov
push
jmp
or
add
dec
or
aas
mov
pop
push
mov
cltd
cmpsl
jp
movsb
shr
xor
jl
mov
arpl
push
sbb
mov
mov
sub
add
inc
push
push
sbb
cmpsb
cld
dec
es
adc
dec
mov
jo
sarl
in
jne
lret
fistpl
cwtl
lods
outsl
xor
push
mov
jne
mov
outsb
mov
sbb
icebp
push
stc
movsl
movsb
sub
add
or
icebp
xor
insl
adc
ret
shlb
scas
ljmp
push
and
mov
sbb
cmpsb
mov
xor
movsl
xchg
mov
lds
jo
sbb
movsb
xor
pop
cmp
stc
insb
ja
add
push
mov
inc
pop
cmpsl
das
lods
std
jle
and
xchg
ficomps
mov
lock
jp
bt
mov
outsb
pusha
jge
mov
push
jge
push
mov
or
notl
and
pop
jecxz
dec
add
ja
test
adc
push
push
pushf
adc
cmc
pop
mov
addr16
xor
fs
mov
mov
gs
mov
enter
pop
aaa
fbld
fs
movsb
add
pusha
test
xchg
dec
jae
mov
xor
ss
cmc
aaa
cmc
inc
pop
test
fisubs
xchg
lods
jb
insb
lahf
jnp
sbb
loope
into
adc
insl
ret
jmp
scas
xchg
aaa
dec
mov
push
repz
push
lods
iret
xchg
stc
das
jae
inc
lea
ja
or
dec
int
nop
test
xchg
xchg
mov
and
mov
jbe
lock
int
mov
nop
stos
ljmp
jge
jno
fiadds
sub
push
and
imul
mov
xchg
pop
mov
mov
mov
dec
lret
neg
insl
push
cmpsl
push
mov
push
inc
test
sbb
pop
cmp
outsl
mov
enter
dec
leave
std
arpl
xchg
bound
sbb
pop
pop
je
shl
cmp
and
enter
sub
fisubl
mov
les
roll
mov
filds
or
xor
mov
add
addr16
scas
scas
push
cmpb
adc
test
push
cmp
test
jl
inc
and
ja
sub
jmp
dec
dec
push
js
pop
inc
in
push
mov
cmpsb
mov
lods
push
push
shlb
sbb
popa
pusha
xor
cwtl
repz
and
xchg
ds
mov
and
int3
mov
mov
add
aad
and
mov
ret
jns
pmaddwd
push
jnp
dec
mov
pop
jmp
inc
mov
stos
mov
bound
or
xadd
or
push
aam
lret
test
sub
inc
dec
push
inc
notb
pop
sub
sub
mov
clc
adc
fstpl
jmp
enter
mov
aam
mov
popa
cmp
push
iret
mov
andl
or
push
pop
adc
or
jg
or
rorb
or
add
adc
adc
push
sbb
lods
dec
xchg
repnz
in
fs
leave
cli
imul
inc
lods
stos
pop
es
loop
add
cmpsl
jno
mov
sbb
lods
push
movsb
sbb
daa
sahf
cmp
mov
cmpsb
int3
jge
fdivrl
cmp
mov
jb
mov
cmc
push
xchg
jmp
mov
mov
push
stc
pop
xchg
bound
lcall
bound
iret
and
cmpl
xchg
leave
mull
or
data16
dec
fsubs
subl
mov
dec
mov
addl
adc
and
push
lock
xchg
cmpsl
test
div
mov
inc
push
in
test
push
add
rorb
adc
in
pop
addl
xor
cmc
int
loopne
shll
loopne
push
dec
lcall
inc
push
jne
xor
int
or
adc
idivb
sbb
dec
mov
fcomi
cmp
xchg
add
mov
and
cmp
sahf
xchg
sub
es
sbb
icebp
in
notb
mov
xor
mov
push
mov
subl
ljmp
xchg
xor
sahf
ret
inc
push
xchg
sbb
fwait
popa
dec
mov
cld
dec
ret
push
inc
cmpsl
sahf
ret
repz
fs
mov
imul
sar
fistps
aad
and
dec
icebp
shr
xorb
jp
hlt
aam
add
pop
push
jg
mov
push
popa
mov
out
xchg
adc
mov
jle
dec
fstpl
xchg
aas
mov
jl
pusha
jp
cmp
call
xor
sbb
mov
rorl
aad
aaa
sub
cmc
test
inc
iret
outsl
inc
pushf
cmp
dec
shld
cmp
call
dec
mov
in
sbb
ret
mov
arpl
xchg
or
push
mov
sub
fcomps
pushf
cmp
lds
cmp
test
jecxz
push
cli
inc
or
fbstp
jg
cmovb
lahf
test
xchg
dec
int
ror
in
sbb
aas
dec
add
inc
int
and
idivb
dec
xchg
push
shll
dec
xor
xchg
dec
faddl
faddl
xchg
sbb
out
sbb
jnp
jns
arpl
gs
sti
out
sub
pop
sahf
fdivrp
divl
in
loopne
push
lods
mov
push
loopne
icebp
sbbl
xor
pop
mov
jle
dec
insl
adc
fsubr
pushf
inc
outsb
sub
cmpsb
push
jecxz
movsb
test
or
test
lahf
adc
sub
mov
mov
mov
mov
sti
and
popa
inc
cmpsb
sbb
stos
or
fnstsw
nop
int
outsb
xlat
mov
loopne
sbb
xlat
xchg
cmp
outsb
jp
and
ret
out
std
fdivr
pop
pop
push
sti
add
out
jecxz
cmpsb
leave
loopne
in
xchg
mov
neg
ds
xchg
xchg
push
cmp
pop
push
stc
pop
fs
adc
add
data16
inc
fcmove
dec
mov
sub
arpl
sarb
in
jle
push
inc
push
or
pushl
sub
out
fisubs
scas
cmpsl
xor
inc
cwtl
mov
mov
cli
xor
ds
mov
call
mov
adc
ds
je
int3
jg
sbb
push
out
jl
sti
mov
scas
xlat
imul
jae
push
pop
push
cwtl
in
xchg
and
insb
test
iret
pop
mov
sbb
in
xchg
xchg
jp
pop
dec
cmp
icebp
xchg
lods
inc
test
scas
ret
pop
dec
loop
sub
sbb
adc
cltd
dec
pop
roll
scas
in
mov
add
jp
and
mov
frstor
repnz
jp
dec
mov
cs
fwait
mov
pusha
jne
outsb
mov
mov
xchg
movsl
sti
stos
negb
clc
cmpsl
mov
push
or
sbbl
stos
adc
xchg
insb
clc
fs
dec
sub
sub
jns
aad
lcall
cld
iret
out
push
inc
cltd
sub
shll
fcomp
test
xchg
xor
push
gs
nop
test
or
shrb
ljmp
dec
popa
adc
movsl
and
dec
fbld
fwait
push
push
push
jb
push
mov
or
mov
push
jle
pop
aam
fcomps
mov
xor
mov
inc
add
fcmovbe
xchg
jle
shrl
dec
ficoml
push
inc
out
das
adc
push
sub
test
mov
test
insb
push
in
cmp
sub
cs
cmp
jno
sub
adc
xchg
push
xchg
xor
xor
cltd
mov
in
jnp
and
inc
xchg
jo
imul
add
arpl
popa
mov
into
sbb
mov
jb
xor
jle
inc
mov
idivl
push
repnz
je
or
cmp
rclb
mov
test
push
adc
pop
dec
popf
cmc
fisttpll
out
mov
push
mov
mov
hlt
std
int3
cmc
mov
pop
cmp
dec
bound
sbb
movsb
loope
push
jge
xorb
mov
ret
les
mov
push
sbb
loop
xor
jp
push
insb
leave
mov
filds
aad
mov
mov
jle
push
xor
mov
fsubrs
inc
sbb
out
or
pop
fdivr
xchg
cmp
addr16
pop
fbstp
mov
sar
add
push
lock
movsb
and
pop
pop
mov
dec
mov
lcall
adc
adc
ds
xchg
loopne
mov
adc
mov
mov
push
dec
imul
mov
cld
ficoms
mov
jecxz
cmp
sbb
repnz
insl
xchg
outsl
fists
xchg
dec
mov
clc
pop
rolb
jmp
inc
lods
mov
test
fmul
sti
in
jl
jl
fsubr
stos
pop
insl
lods
sub
bound
and
andb
push
scas
add
mov
icebp
add
cmp
aaa
shl
inc
cmp
jg,pn
mov
lret
faddl
jl
fstps
leave
pop
cmp
adc
stos
aas
cs
jecxz
mov
dec
leave
sbb
imull
add
push
cmp
push
xor
and
pop
dec
loope
add
add
cmp
lods
push
shlb
das
add
adc
in
loope
ss
and
adc
adc
pop
xchg
cwtl
mov
imul
cmp
pop
inc
test
push
push
lcall
or
jb
sub
add
loope
pop
rcr
imull
mov
aas
sahf
lods
mov
cmp
mov
sub
aaa
insl
into
aad
jne
xor
xor
dec
dec
adc
mov
cmc
ja
jnp
mov
jge
dec
push
inc
push
pop
push
add
das
and
bnd
sub
fiadds
out
dec
dec
test
jno
jns
ja
in
jecxz
mov
jo
imul
push
scas
pop
pop
ljmp
stos
insb
xchg
enter
out
sbb
out
xchg
ds
mov
jo
mov
fcoml
jo
shl
hlt
add
lods
mov
push
inc
and
sub
cltd
add
inc
mov
shl
js
ja
bound
push
mov
push
lock
sahf
adc
xchg
sbb
sbb
outsb
jae
dec
mov
mov
xor
fwait
push
iret
sar
outsl
sti
lea
sub
clc
jmp
add
inc
sub
mov
and
aam
or
les
aas
mov
dec
imul
adc
add
imul
scas
jnp
sbb
sbb
jae
cld
mov
sub
loopne
cltd
les
in
mov
popf
mov
sbb
lock
mov
loop
adcl
pushf
mov
add
fistpll
cwtl
jmp
fidivl
jmp
xchg
cmp
mov
or
jmp
out
stos
lcall
dec
mov
jecxz
repnz
or
push
dec
sbb
jne
outsl
pop
mov
jns
hlt
sub
mov
mov
in
xchg
int
jb
push
das
jne
rolb
imul
pop
mov
mov
shlb
or
add
in
push
or
fwait
pop
xor
stc
and
and
mov
mov
dec
ds
and
sbbl
mov
xchg
nop
adc
movsb
in
mov
cs
mov
fdivrl
jmp
bnd
daa
add
aad
cld
jg
jg
shll
rcrl
mov
stc
jge
mov
sahf
lcall
hlt
sbb
xchg
pushf
pop
insb
popl
and
jl
adc
jo
push
insl
leave
inc
nop
scas
and
cmp
insl
xlat
sarb
adc
daa
cmp
hlt
push
loopne
loopne
mov
test
adc
inc
cmpb
test
mov
icebp
inc
fwait
or
xor
xchg
insl
shr
xchg
cld
push
mov
sub
ljmp
cmc
cmpsl
in
xor
xor
mov
mov
out
push
sti
inc
lahf
into
jae
and
cmpsb
pop
fistps
fldl
rcll
add
imul
lea
stos
fwait
inc
add
test
add
jbe
cmp
les
or
mov
push
push
push
fildll
mov
mov
sarl
dec
pop
dec
adc
inc
add
int3
xchg
mov
das
lods
clc
or
ficompl
push
push
fs
or
pop
ljmp
jg
pop
decl
lock
jbe
movsb
faddp
push
out
leave
sbb
pop
push
mov
add
adc
testl
fistpll
and
and
neg
leave
sub
adc
notb
add
inc
mov
adc
inc
mov
mov
mov
cmpsl
lods
xor
xor
dec
push
pop
xor
cs
je
or
adc
fadds
mov
movb
mov
lods
mov
xabort
cmp
sti
xor
addb
stos
inc
rclb
lds
icebp
pop
lods
cmp
bound
sbb
aaa
lret
sbb
imul
pop
inc
or
push
cmp
push
push
adc
fs
and
add
aam
fisubs
jnp
js
push
popa
cmpsb
nop
jae
pop
push
push
lret
lea
frstor
rolb
fidivrs
dec
inc
push
lock
add
repz
push
adc
and
inc
push
xor
inc
sbb
mov
insb
jbe
shr
cld
xor
fwait
push
sub
int
pop
xchg
rclb
xor
xor
in
lret
rcrl
stc
mov
dec
xchg
shrb
push
dec
pop
cwtl
testb
test
jns
add
pop
lcall
aas
ja
and
popw
stos
insl
push
inc
arpl
pop
dec
xchg
push
jmp
xor
jb
jle
jnp
insl
lahf
scas
push
sarl
lds
lea
push
push
sarb
imul
lea
sbb
jb
lret
call
pop
scas
jle
cli
sbb
rcrb
orb
add
data16
int3
cmp
mov
push
addr16
repnz
hlt
rorl
gs
adc
mov
dec
mov
and
movsl
lea
push
add
js
leave
lds
je
mov
sahf
add
mov
jno
pop
adc
cmp
imul
mov
jb
lahf
adc
in
inc
push
push
xchg
roll
jmp
push
fbstp
adc
jecxz
testb
dec
clc
fldcw
pop
cmp
mov
push
xor
and
test
fdivrs
mov
pusha
lods
fstpl
adc
in
std
and
hlt
roll
das
test
mov
push
daa
add
and
or
icebp
andl
fwait
sub
lahf
sbb
jnp
mov
stos
ret
not
push
insb
imul
add
loope
mov
ret
dec
mov
xlat
test
pop
jg
mov
popa
sub
mov
cmp
in
sbb
shrb
js
es
stc
clc
add
cmp
add
mov
test
test
data16
fwait
mov
xor
xchg
push
xor
mov
loop
loope
lahf
jnp
andl
lds
std
jp
mov
or
sahf
outsb
dec
cli
cmpsl
sbb
mov
or
enter
jmp
jns
or
lods
or
das
insl
adc
daa
fucomi
pusha
push
sti
inc
int
push
addb
cltd
mov
lds
xchg
mov
pop
xchg
add
xchg
push
jp
leave
das
mov
repz
loop
call
shufps
and
aaa
adc
sbb
int3
fimull
push
inc
push
jnp
lods
sub
push
xchg
jns
mov
cmp
or
sbb
mov
xchg
adc
jge
push
fistps
inc
cmp
add
in
rolb
sub
cld
push
and
mov
stc
jecxz
inc
psrld
jnp
xor
push
or
push
sbb
arpl
loop
pop
daa
sbb
jp
movsl
cmp
rorb
ja
scas
sub
icebp
mov
out
jo
fneni(8087
push
mov
push
icebp
add
mov
lcall
pop
sahf
xchg
subl
mov
sbb
sbb
jnp
loope
ljmp
rcl
mov
xchg
inc
lcall
pushf
mov
dec
aaa
xchg
push
pop
push
je
test
dec
ja
test
xor
fsub
mov
out
mov
test
add
dec
rorb
sub
outsb
mov
jno
cwtl
and
nop
dec
mov
xchg
mov
cmpsb
dec
xchg
stos
add
mov
fists
xor
pop
popl
std
push
imul
jne
cmovg
jle
xor
pop
adc
movsl
pop
loop
lahf
sbb
pop
dec
jge
mov
push
lret
gs
ret
dec
rorl
loope
jmp
fcmovnu
mov
jmp
addr16
mov
cmp
cli
stc
xchg
data16
inc
adc
sarb
pop
inc
jecxz
icebp
mov
push
push
rclb
in
addr16
xlat
jmp
or
or
scas
lods
movsl
mov
cmc
test
js
aam
mov
mov
xlat
and
sub
dec
or
popf
mov
or
jne
js
mov
cmp
lods
mov
jb
jnp
mov
cmp
dec
jae
mov
pusha
and
out
cmp
lods
lret
jle
mov
sbb
movsb
xchg
cltd
movsl
adc
mov
in
sub
mov
out
lods
mov
or
pushf
aam
scas
jp
fisttpl
push
scas
push
push
mov
xchg
mov
int
sub
outsl
sub
nop
loopne
jns
loop
jno
cmp
add
jbe
push
gs
jl
mov
xor
insb
dec
sti
in
insb
mov
test
jl
shlb
push
xor
mov
mov
xchg
push
in
lahf
icebp
fwait
push
in
imul
xchg
dec
je
cmpsb
inc
push
adc
pushf
add
sbb
cmp
leave
sub
mov
mov
push
push
scas
int3
lods
jno
pop
pop
sarl
inc
ffreep
inc
xor
outsl
fs
notb
and
fidivrl
jo
ja
xchg
add
add
dec
sahf
mov
mov
mov
cwtl
dec
cmp
pop
rcr
mov
mov
xlat
add
outsb
addr16
aas
or
inc
push
icebp
outsl
movsb
sbb
scas
fisubrl
arpl
das
sbb
lods
test
add
pop
jb
cmp
int
push
adc
repnz
stos
lods
jge
movsb
mov
iret
and
in
fcmovb
mov
mov
jp
mov
pop
stos
xor
adc
dec
leave
inc
pop
push
and
stos
mov
lds
cmp
push
pop
jecxz
xchg
pop
out
dec
mov
jmp
add
xchg
sub
shrb
sbb
pop
cmp
cwtl
insl
mov
and
dec
push
ret
loop
dec
push
gs
stos
push
mov
mov
inc
lret
ret
add
jecxz
ficompl
add
cmp
in
mov
cs
xchg
imul
inc
add
test
and
data16
mov
sbb
lret
and
cmp
decl
scas
adc
add
stos
push
and
pushf
pop
popa
daa
xor
mov
das
sbb
fsubrs
cmp
sbb
adc
iret
jbe
orb
pop
xchg
imul
cmp
push
in
imul
cld
loope
shlb
fdivrl
jmp
iret
sub
xchg
sub
sub
jns
dec
mov
dec
cmp
or
dec
mov
cmp
push
loopne
int
fsts
in
or
repnz
push
dec
mov
shlb
push
cltd
test
or
xchg
jp
cltd
adc
inc
movsl
ffreep
sarl
mov
or
insl
jno
push
mov
xorl
lods
out
fwait
test
jb
sub
pushf
mov
js
adc
sub
jae
push
mov
out
and
add
das
out
popf
adc
arpl
aam
pop
jb
cltd
sub
fistps
inc
mov
out
ss
inc
ret
dec
xchg
std
jp
insl
stos
mov
stos
jge
iret
push
popa
lock
push
repz
sub
pop
sbb
or
test
add
repnz
adc
dec
stos
aad
push
and
sub
jmp
add
gs
aaa
cmp
insl
dec
add
icebp
add
ljmp
jmp
add
and
or
pop
mov
cmp
rol
in
or
outsl
adc
push
cmc
ss
leave
mov
inc
imul
mov
cmp
jae
dec
xor
insl
push
push
std
sub
sub
hlt
jg
sbb
leave
fsts
lret
jle
push
ja
ret
inc
jecxz
outsb
cli
cli
es
pop
mov
fbstp
je
or
xor
daa
push
jne
fldl
in
push
mov
filds
daa
ljmp
dec
jmp
arpl
xchg
mov
cwtl
adc
nop
mov
inc
cwtl
rclb
push
imul
fxch
xor
scas
mov
cmp
push
cs
roll
sbb
psrlq
mov
pop
adc
sahf
mov
lock
lcall
mov
scas
jns
sub
xchg
inc
gs
sbb
es
cmpsl
into
xchg
mov
xlat
roll
aam
pop
mov
xchg
in
jbe
and
lea
mov
jg
xchg
jmp
lods
adc
sbb
out
addr16
loop
add
dec
mov
fnstsw
xchg
or
mov
ja
pop
push
std
dec
xor
cld
xor
xchg
sub
fwait
pop
mov
stos
insb
adc
sub
push
xor
movb
and
out
push
fcmovu
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
mov
jmp
sub
clc
pushf
jnp
ret
push
orl
and
mov
mov
push
push
and
push
std
sbb
out
mov
dec
bound
xchg
call
or
ljmp
pop
jbe
add
test
pop
ljmp
inc
idivb
mov
call
outsb
in
into
push
rorl
add
out
and
aas
rclb
push
testb
jl
push
movl
or
and
or
push
jb
sub
cmp
jno
mov
xor
jno
data16
mov
xor
xchg
add
scas
imul
mov
fnstcw
sti
xor
mov
mov
fdivs
jg
and
push
les
jnp
adc
jmp
cmp
cmpsb
rorl
pop
shll
adc
enter
repnz
popf
jg
push
in
lretw
cmp
sub
scas
cmp
push
cmpsl
btsl
mov
aam
mov
data16
mov
jne
clc
pop
nop
mov
and
lds
xor
ljmp
aaa
mov
cmp
jb
mov
sbb
std
loop
in
push
js
push
lea
sub
outsl
out
sbb
mov
xchg
pop
aas
inc
pop
out
out
push
xchg
adc
pop
int
fnstcw
push
addb
arpl
cmp
pop
popa
add
or
out
jecxz
movsb
imul
xchg
mov
and
sub
mov
adc
in
cmc
shrb
xchg
jae
lods
mov
out
push
pop
das
mov
fisttpll
loope
jle
in
mov
pushf
popf
or
dec
fsubr
xor
jb
les
add
xor
mov
fmull
cmp
and
push
mov
xchg
cmpl
xchg
data16
add
bound
test
fmul
mov
insb
mov
aam
add
jnp
sbb
dec
daa
cltd
or
out
inc
mov
add
in
xorb
into
or
xlat
test
or
and
jnp
add
nop
jp
pushf
lods
into
sub
ds
fsubrs
rolb
sbb
xchg
ret
dec
lahf
movsb
loop
xchg
lods
dec
xchg
cmpsl
sub
jmp
pop
and
xor
aas
call
test
xor
or
dec
jmp
mov
inc
jb
jno
mov
push
cs
fs
cmc
sub
stc
mov
jno
stos
sbb
sahf
cwtl
mov
push
sub
in
mov
cmc
lock
mov
mov
push
int
cmpsl
dec
stos
mov
cmp
jg
push
sbb
adc
aad
pushf
mov
sub
inc
pop
ror
jb
push
and
add
dec
adc
filds
or
nop
mov
das
xchg
pushf
icebp
mov
lds
add
stc
add
mov
test
jle
stc
out
add
ret
adc
rclb
mov
mov
xchg
leave
xorl
je
int
sahf
or
push
ljmp
mov
jmp
sbb
ficoml
dec
aam
enter
cmp
push
into
inc
add
mov
ficomps
push
mov
mov
and
mov
sahf
int3
xor
jecxz
xor
xor
inc
xchg
cld
push
jno
aas
hlt
dec
mov
jmp
scas
shll
je
jnp
out
les
and
or
repnz
fisttpl
mov
jnp
mov
daa
mov
xchg
hlt
jno
int
scas
mov
dec
test
dec
test
xchg
mov
jbe
pop
fstl
sbb
dec
jp
je
cli
xchg
mov
inc
push
dec
pop
cmp
sbb
leave
int3
push
lea
aas
outsb
rcrb
lcall
or
xchg
mov
pusha
dec
add
divb
pop
addr16
rcrb
sub
addr16
into
xlat
ja
das
out
lahf
out
adc
pushl
cld
push
sub
rcrl
and
faddl
std
das
mov
in
sbb
mov
pop
mov
inc
pop
pop
or
mov
hlt
mov
mov
xor
lea
addps
pop
std
stc
and
mov
sbb
aam
cltd
ja
in
cmpsb
call
mov
pop
mov
leave
dec
es
inc
cmp
out
push
sbb
push
dec
mov
popa
pop
in
mov
or
xchg
outsl
inc
cmc
mov
pop
mov
cmp
mov
iret
test
mov
shrb
nop
xchg
cmc
sub
xchg
or
andl
pop
ret
cmp
insl
repnz
repz
ljmp
outsb
inc
stos
sti
or
jge
or
push
xchg
jle
xchg
fnsave
pop
xchg
cwtl
xor
pop
push
and
push
xlat
sbb
jo
imul
das
lret
addr16
xor
pop
sub
lock
jmp
lcall
mov
das
jge
adc
jae
jl
enter
push
xor
sub
jle
adc
sbb
jb
cmp
and
cltd
ficoms
pop
sub
inc
mov
xlat
add
dec
cmpsb
xchg
rcr
outsl
inc
and
dec
test
fdivrs
in
imul
mov
test
inc
cmp
out
leave
inc
pop
xchg
test
sbb
inc
arpl
sbb
sub
push
sbb
test
fdiv
or
jg
jecxz
mov
dec
imul
push
je
push
push
fisttpll
push
mov
in
nop
ljmp
mov
xchg
push
xor
xor
cmp
jp
or
and
mov
jg
pushf
mov
push
xor
int
std
roll
call
lret
cmpsl
push
and
imul
sub
pop
mov
xchg
sub
jge
test
ljmp
ret
jbe
pop
jg
xor
push
fdivl
pop
out
fidivs
xchg
outsb
pushf
cmp
inc
cltd
stos
stos
call
xchg
jmp
xor
or
ret
sbb
outsl
push
clc
int
or
jp
pop
xor
das
outsl
pop
lcall
movsb
and
mov
cs
sbb
addr16
mov
dec
sbb
cmp
call
cs
adc
jne
mov
out
sub
call
ret
scas
or
stc
test
adc
cmpsb
mov
inc
rcr
push
sti
xor
push
pusha
add
pop
mov
imul
lds
je
test
popa
fwait
pop
xor
imul
add
xchg
subb
lock
adc
shlb
sub
ja
enter
mov
xchg
imul
shll
bound
dec
dec
insb
iret
pop
out
add
cmp
adc
jns
xchg
sbb
mov
lea
push
lcall
or
or
sub
or
gs
adc
arpl
enter
loop
push
mov
cmpsl
bnd
mov
push
inc
insl
fst
sti
out
insl
or
mov
cmc
rcr
adc
or
lods
adc
mov
icebp
int
dec
loopne
out
push
cmp
in
push
xor
iret
sbb
aaa
pop
add
movsl
cmc
cli
mov
add
xchg
das
clc
decl
loopne
aam
out
ret
push
pop
adc
add
mov
adc
cmpsb
add
xor
xchg
mov
inc
jmp
push
and
cmp
inc
push
mov
hlt
js
push
stos
int
stos
jp
nop
cwtl
cmpsb
les
cld
imul
mov
sub
adc
lods
pop
je
push
and
call
dec
loope
mov
inc
push
jnp
popa
bnd
fsubrp
pop
stos
xchg
xor
push
loopne
stc
test
into
adc
jecxz
out
jno
mov
jne
mov
out
jg
push
es
or
lds
fisubrl
mov
ja
lds
pop
mov
mov
push
fcoms
fcoml
jae
lahf
fnstcw
pusha
shll
sbb
xor
dec
push
dec
or
sti
xlat
inc
mov
push
push
cmp
and
cmp
ljmp
mov
adc
push
mov
inc
arpl
xchg
fistps
cs
ja
ret
pop
and
adc
mov
stos
shll
ret
imul
push
lret
popa
pop
in
movsb
xor
or
add
lret
lock
pop
out
ficoml
and
dec
cs
and
in
or
sbb
das
imul
lods
std
es
mov
rorb
addr16
movsb
add
daa
pop
das
vmovlps
xor
addr16
mov
loopne
cs
loope
std
push
data16
loopne
scas
shll
push
aad
shll
pop
and
xchg
pushf
testl
pop
mov
sahf
adc
arpl
lods
mov
xchg
inc
xchg
int
dec
lock
sub
cmp
imul
aad
dec
xchg
and
test
xchg
lahf
adc
icebp
sub
lock
add
sbb
inc
cmp
mov
lcall
sub
mov
mull
or
pop
dec
enter
imul
test
jp
xchg
inc
lret
fsubrl
gs
xor
add
sbb
js
stos
sub
push
jmp
xor
and
ss
push
and
dec
cwtl
mov
adc
inc
icebp
rcr
jecxz
inc
xchg
cwtl
push
cmc
and
test
je
aad
pop
repnz
pushf
dec
push
rcrw
add
sub
sub
xlat
push
ret
dec
scas
movsl
rcr
mov
xchg
fcomps
jp
shlb
mov
out
mov
pop
xchg
push
aad
mov
addb
ja
insb
pop
sub
mov
xchg
push
out
jge
rol
cwtl
je
cmp
jl
cli
stos
imul
and
inc
outsb
mov
mov
pop
aam
in
sub
add
stos
mov
pop
push
fildll
mov
and
into
fsubrs
add
add
pop
movsb
sahf
aaa
cmpsb
xor
push
jle
push
jb
mov
push
xor
inc
movsl
pushf
push
cwtl
inc
aad
out
or
add
hlt
cli
cmp
jb
out
jbe
sahf
cs
sahf
decb
js
mov
add
add
inc
jb
ret
fs
fsubl
xor
cmp
testb
repz
popf
test
push
inc
ss
nop
pop
sub
icebp
inc
bound
les
sbb
fstl
push
vmovntpd
push
push
mov
lcall
mov
adc
in
stos
out
ds
mov
rcrb
mov
sub
clc
pop
ljmp
and
inc
jg
repz
enter
dec
dec
loopne
inc
out
lods
dec
fldenv
lock
pop
add
adc
xchg
sbb
mul
and
fwait
inc
xchg
stos
inc
aaa
xlat
outsb
sbb
xlat
dec
and
inc
add
xchg
scas
xchg
adc
dec
mov
xor
sarl
ret
cmp
xlat
mov
sbb
xchg
test
test
or
cmp
cmp
adc
sub
xchg
sbbb
xchg
ljmp
in
pushf
data16
lods
aaa
pop
mov
sbb
das
insb
push
xor
loope
pop
daa
lret
mov
lock
adc
mov
pop
es
daa
les
mov
shrl
out
pop
int
leave
or
fdivl
cmpsb
loope
cli
push
in
xor
sbb
mov
inc
inc
fs
mov
inc
xchg
xor
call
out
push
insb
inc
imul
jo
arpl
mov
movsl
pop
sub
pop
sbb
fdivl
sub
int
pop
jno
jns
dec
out
push
sbb
fistl
mov
xor
sbb
add
jg
push
jno
push
mov
ljmp
int
mov
xor
xor
test
push
jmp
cmp
idiv
mov
imul
or
jbe
xchg
lea
aas
push
movsb
pop
mov
jnp
mov
xchg
and
scas
mov
lcall
data16
dec
xorb
xor
add
pusha
lods
cmp
test
sub
popf
and
xchg
inc
aam
adc
push
mov
and
mov
or
add
sbb
mov
and
js
xchg
movsb
aam
aaa
push
push
int3
sub
adc
mov
dec
push
pop
sti
xchg
dec
lret
fwait
pop
jne
int
bound
inc
xor
sub
jns
rorb
je
push
outsb
xor
cmpl
es
sbb
add
lret
mov
movsl
int3
inc
aas
xchg
std
pop
jg
sub
dec
jns
adc
pusha
inc
test
addb
aad
lds
aas
lret
cltd
pop
xchg
cld
cmp
je
or
out
inc
pop
cmp
mov
popf
xor
cmpl
push
jg
adc
inc
jae
loopne
jns
fistps
addb
insb
test
mov
sub
xchg
mov
sti
outsl
test
lcall
cmc
jmp
out
adc
mov
mov
push
jl
stos
xchg
aad
rolb
icebp
daa
add
or
and
orb
out
jmp
shrl
push
xlat
jecxz
xor
and
and
cltd
aaa
adc
push
push
adc
lcall
push
sub
int
fwait
je
dec
mov
mov
fs
in
sbb
fdivrl
inc
sbb
xchg
popf
xor
dec
sahf
imul
dec
lea
adc
jne
mov
aam
cli
or
cmp
or
gs
scas
adc
jmp
in
popa
ret
setle
ficoms
lcall
arpl
dec
dec
je
out
loope
jl
movhps
outsl
scas
psubd
sbb
adc
dec
dec
les
jl
or
lods
jbe
xchg
inc
xor
hlt
sub
lcall
movsb
jge
jbe
pop
pop
popa
popf
mov
in
xchg
lcall
pushf
sub
movsb
sahf
jl
pop
pop
sub
scas
insl
add
nop
mov
jp
outsl
loope
fistl
pop
xor
sti
lea
jno
jns
test
lea
dec
sahf
mov
popf
das
sub
aad
aam
mov
xlat
adc
in
xor
aaa
cmc
out
pop
push
push
fcomps
orl
aaa
mov
sub
bound
xchg
adc
mov
push
inc
sub
cs
dec
test
sub
divl
add
gs
scas
dec
jecxz
sti
outsl
push
lret
das
xlat
jmp
add
adc
mov
mov
mov
pop
sbb
jbe
push
mov
xchg
sbb
lock
mov
arpl
cmp
mul
mov
out
jle
cmp
sub
ja
jo
cltd
pop
mov
mov
pop
test
stc
lret
lcall
mov
mov
pushf
outsb
dec
xlat
mov
sub
movl
sub
lret
out
testb
pop
and
testb
xlat
inc
pop
cmp
pop
loope
jp
and
xor
cli
or
adc
std
notl
flds
adc
cmpsl
ret
xchg
xchg
fwait
cs
punpckhbw
dec
inc
loope
scas
and
jns
in
aas
and
iret
andl
gs
xor
pop
mov
mov
stc
rorl
and
add
push
ja
fildll
inc
xchg
adc
mov
sub
inc
mov
dec
pop
movsb
cmp
int
imul
mov
sbb
arpl
hlt
xlat
mov
add
inc
insl
lahf
xchg
pop
sub
out
lret
in
cmp
adc
pusha
inc
pop
daa
push
push
mov
test
fbld
lock
and
jae
fcompl
enter
sarb
out
loop
xor
fidivrs
pop
pushf
std
mov
popa
rcrl
adc
dec
dec
push
clc
addb
test
inc
sub
or
cmpsb
inc
mov
sbb
fxch
gs
data16
idivb
cmp
loop
test
lret
jle
push
insb
or
xchg
pop
shl
insl
xchg
inc
xor
repnz
outsl
adc
dec
push
ret
ss
sub
mov
pop
ljmp
mov
push
addb
mov
jb
out
or
outsl
test
loop
mov
and
sub
xchg
leave
js
cli
xor
push
mov
jb
add
adc
add
incb
out
stc
ljmp
jno
insl
test
or
rcl
pop
aam
dec
imulb
loope
pop
mov
lea
jge
cpuid
cltd
lods
pop
pushw
loopne
and
adc
aam
testb
int3
es
testb
aas
push
out
dec
sub
adc
and
scas
mov
mov
int3
lods
dec
sbb
xchg
adc
in
ja
jbe
push
pushf
mov
movsl
xchg
jle
fs
stos
mov
adc
cmc
mov
add
push
ds
mov
cmc
push
mov
xor
sbb
mov
dec
inc
mov
mov
pop
mov
rclb
fstl
mov
fucomip
nop
cmp
cmc
lea
mov
imul
aas
arpl
sbb
mov
xchg
js
push
xor
loop
jnp
mov
mov
mov
les
lock
inc
adc
loope
and
int
xor
dec
push
inc
fimull
stc
push
jp
push
leave
add
mov
pop
std
push
jno
jg
adc
cwtl
xchg
mov
jne
adc
and
bound
mov
cli
fdivrl
inc
jne
lret
fcmovnu
std
lret
loopne
fimuls
outsb
pop
xor
ss
ja
jae
outsb
scas
pop
add
cmp
imul
lods
jle
inc
cwtl
mov
mov
incb
adc
into
stc
add
mov
push
adc
adc
sbb
cmp
and
scas
xchg
ret
mov
cmp
nop
clc
ss
cmpsl
ljmp
mov
and
fwait
movsb
jg
and
mov
shll
or
aad
mov
cmp
push
cwtl
leave
xchg
nop
fists
push
inc
mov
xchg
setbe
jnp
ror
rcr
shlb
push
push
fs
mov
mov
rol
or
imul
test
pop
adc
out
jnp
loop
or
stos
fiadds
pop
xor
aaa
adc
std
push
sbb
cmp
adc
push
inc
xchg
add
loopne
push
in
cmp
dec
mull
xchg
inc
jae
mov
xor
mov
sbb
in
xlat
xchg
idivb
repz
std
mov
cs
jbe
mov
or
dec
in
rcr
imul
xorb
movsb
fsubl
aam
push
mov
adc
dec
mov
push
or
repnz
xchg
cmp
push
or
add
or
push
pop
mov
push
sarl
push
int3
mov
xorl
fisubrs
and
push
sbb
jb
mov
ret
int3
sti
movsl
icebp
pop
mov
scas
inc
or
cmovne
xor
inc
int
int
add
bound
mov
ja
rol
inc
mov
ficoms
shrb
mov
neg
mov
and
loop
cmp
in
jge
pop
push
mov
rcrb
testb
das
mov
fs
xchg
std
loop
add
fidivs
fwait
mov
lods
push
mov
shll
mov
das
arpl
or
std
lds
out
js,pn
aad
loop
dec
sub
roll
push
adc
bnd
xchg
and
xor
sbb
fisttpl
mov
inc
or
test
pop
int
scas
push
in
push
adc
mov
mov
mov
inc
dec
enter
push
cld
jnp
cmpsb
cmpsb
inc
and
ret
push
xchg
sub
std
popf
or
jb
loopne
inc
test
jb
mov
sub
mov
push
xchg
dec
mulb
inc
jge
push
inc
adc
dec
cwtl
pop
mov
in
cmp
sahf
incl
and
inc
adc
jne
out
add
inc
es
popa
dec
cmp
loop
xchg
not
mov
in
xchg
popf
sbb
dec
inc
pop
scas
sbb
inc
mov
push
fistpl
pop
mov
test
push
push
adc
stc
mov
pop
or
lcall
mov
cwtl
pop
sub
in
call
xchg
jmp
incb
sahf
jb
sti
je
rclb
xor
lret
mov
negb
xor
pushf
or
mov
inc
jno
fsub
jp
dec
int
push
cmp
push
add
push
pop
js
cmpsb
and
mov
pop
cld
cmp
fstl
inc
add
es
mov
dec
int
push
mov
pop
sbb
fcmovbe
fstl
mov
mov
mov
cmp
bsf
jne
cld
xchg
cmpsb
pop
mov
imul
fmuls
int
cwtl
cmp
and
in
arpl
mov
cmp
daa
enter
int
out
cmpsl
mov
shr
lods
push
out
cwtl
sub
pand
outsl
das
mov
jb
sbb
mov
fsub
daa
adc
pushf
mov
outsl
cwtl
rorl
jl
andb
jne
mov
sbb
rclb
subb
cmp
xchg
mov
add
nop
inc
add
fwait
cmp
stos
inc
out
mov
xor
cmpl
aad
repnz
mov
sbb
leave
ret
push
push
cmpsl
push
push
jp
push
xlat
out
adc
adc
push
mov
psrlq
pop
jae
jge
cli
rolb
inc
mov
daa
and
inc
int3
push
mov
and
dec
jecxz
xlat
pop
stos
inc
cmpsl
mov
push
arpl
pusha
dec
sub
add
and
fidivl
sub
dec
cld
push
outsb
mov
scas
aad
and
jb
outsb
loopne
in
jle
push
add
popf
iret
lahf
mul
xor
sub
daa
inc
icebp
pop
add
mov
dec
in
inc
inc
fists
inc
shrl
cmp
add
cmc
cmc
mov
sti
push
ljmp
jp
push
xor
cltd
in
and
outsb
sbb
into
hlt
and
loopne
pusha
xchg
outsb
inc
xchg
into
jg
mov
shrl
push
push
aam
xor
jmp
hlt
jae
shrb
xor
xchg
adc
xchg
jmp
addl
cmpb
ljmp
or
jmp
ds
cmp
into
adc
std
dec
sarl
adc
sahf
sub
sbb
daa
dec
imul
or
add
xlat
add
fcmovu
sbb
or
fcoms
xor
je
stc
push
in
mov
leave
rcrb
push
jnp
adc
pop
jne
test
jae
inc
mov
bound
cmpsb
or
sub
pop
adc
mov
and
dec
dec
jb
clc
jl
sub
xor
sub
in
orl
mov
and
cmovo
or
fs
push
imul
inc
inc
dec
push
ss
push
testl
mov
mov
das
or
mov
lods
mov
mov
mov
ds
mov
shrl
and
test
aas
addr16
jl
sbb
fs
lcall
cmp
cwtl
cmpsl
add
inc
ret
jne
rcl
lret
mov
mov
cmp
xor
jecxz
pop
xchg
mov
add
adc
cmpb
dec
pop
sbb
cmp
pushf
adc
dec
test
les
js
bound
push
mov
xchg
mov
mov
push
xchg
pop
pop
xor
jg
sub
inc
sub
push
sub
jo
fdivl
or
lods
sbb
mov
ljmp
and
mov
adc
pop
sbb
jmp
push
lret
sbb
dec
pop
inc
xchg
mov
repz
mov
repnz
lds
jns
push
sub
cli
shrl
pop
scas
mov
arpl
cmp
pop
pop
mov
xor
lcall
repz
icebp
lods
inc
repz
in
jge
aad
push
ss
arpl
mov
jbe
test
pusha
stos
push
fdivrl
sbb
pop
dec
inc
lret
sub
ret
in
inc
leave
sub
jge
mov
xor
dec
es
inc
sar
outsb
xlat
jne
idiv
add
sub
testl
cli
mov
inc
pop
shr
or
rcrb
test
or
or
aaa
jns
sbb
or
rcll
cmc
jg
dec
pop
adc
int
cmp
lea
inc
call
mov
and
in
mov
jecxz
into
xchg
adc
cmp
pop
arpl
jg
aas
leave
jg
xor
inc
pop
pop
lds
push
jno
sbbl
mov
sub
sub
rcl
ljmp
jmp
scas
pop
aaa
scas
pop
jl
rcrl
xchg
aad
push
scas
mov
add
ret
or
sub
pop
fsub
mov
push
fwait
pop
or
mov
test
fildll
xchg
adc
dec
or
jae
rorl
jae
add
pop
fsubl
xor
cwtl
imul
call
pop
mov
push
shrb
outsl
cmp
dec
mov
aaa
mov
lock
fistpl
inc
in
cmp
popa
pop
test
ficoml
adc
pop
movsb
push
sub
cmp
push
les
in
pusha
rolb
sahf
lret
mov
loope
inc
inc
inc
inc
cwtl
cmc
shll
jbe
mov
xchg
sbb
dec
lock
cmp
subb
mov
clc
adc
ljmp
mov
test
pushf
test
lcall
xchg
ja
or
out
lds
test
push
inc
sbb
cmp
sti
fyl2x
mov
outsb
jmp
xchg
aaa
pop
lcall
aam
pop
lds
test
sub
icebp
xchg
xchg
lock
xchg
insb
or
jecxz
xchg
les
jmp
jle
insb
insl
stos
rcll
pop
xchg
cwtl
loope
sub
ficoms
jmp
xor
push
repz
rcl
cmp
pushf
into
adcl
das
lar
ljmp
gs
insb
inc
cmp
xor
gs
imul
or
enter
jmp
lock
imul
jo
mov
inc
je
incb
loop,pt
cmpsl
sbbb
mov
dec
mov
inc
jae
cmp
adc
sub
pop
cmp
test
sub
mov
inc
sub
mov
nop
inc
jno,pt
leave
ret
icebp
mov
and
xor
iret
aaa
fldenv
sub
imul
dec
xor
jo
mov
pop
jmp
mov
inc
adc
jl
mov
lods
hlt
daa
leave
add
mov
es
cmp
imul
sub
push
pop
fldt
push
xor
insb
sub
fisttps
push
ja
sar
popa
ljmp
push
jbe
and
sahf
and
push
daa
out
adc
bound
mov
orb
jg
sbb
pop
xor
hlt
test
dec
lock
fnstcw
ss
cwtl
cltd
ret
pop
mov
xor
mov
pushf
ja
push
mov
jmp
cmp
xchg
fnstsw
movsb
mov
and
lock
popf
jmp
or
cmp
cmc
adc
sbb
cmp
lret
sub
loop
and
aas
push
addr16
ret
push
daa
outsl
sahf
stos
out
ja
fldl2e
orl
enter
push
mov
lcall
jmp
inc
adcl
push
fdivl
xchg
into
mov
je
mov
rolb
mov
sti
sbb
mov
xchg
sarb
gs
filds
rep
dec
ret
xor
enter
pusha
lcall
dec
jg
inc
inc
bound
mov
es
pop
mov
and
bnd
ljmp
loop
inc
cmp
adc
icebp
lcall
lret
mov
ss
or
cli
or
mov
jae
pop
xchg
test
scas
jnp
dec
push
ds
shll
adc
mov
lret
sbb
pop
mov
push
mov
arpl
mov
dec
dec
imulb
inc
dec
or
push
mov
xor
mov
xchg
dec
inc
imul
push
pop
xchg
aaa
dec
xchg
push
jecxz
xor
adc
ret
in
das
dec
scas
mov
pop
enter
insl
filds
enter
sub
and
shl
pop
mov
out
mov
jbe
jno
es
push
inc
xor
lret
mov
clc
scas
push
pop
xlat
adc
dec
sbb
or
mov
lahf
push
popa
lret
or
xchg
pop
pop
js
xchg
and
repz
cmpsl
in
es
fbstp
cmpsb
jge
lret
jo
sbbl
push
fsubl
outsb
ffreep
mov
jle
xchg
cmpb
aaa
insl
movsb
xor
outsl
mov
jno
lods
mov
xchg
pushf
sbb
cmpsb
add
ja
outsb
xor
mov
pushf
add
cli
push
mov
ficoms
push
sti
dec
fldenv
sbbl
popf
and
push
xor
cld
insb
outsb
imul
pop
jmp
shrb
push
nop
insb
pop
aam
into
xchg
push
xor
jb
and
or
into
jns
adc
lds
push
insl
sbb
xor
arpl
in
ljmp
mov
gs
loopne
pop
mov
jns
mov
pop
cmp
mov
push
adc
cmp
inc
sarl
ljmp
push
std
mov
inc
hlt
iret
rorl
repz
and
jo
sub
mov
cli
dec
jge
fisttps
mov
mov
xor
je
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
mov
cmp
cmpsl
data16
pop
lahf
or
mov
push
fisubrs
in
aad
out
int
fstps
sbbl
testl
dec
les
jo
aad
test
mov
in
and
xlat
dec
cli
aas
leave
in
jmp
mov
div
iret
pop
mov
pop
lds
ss
in
adc
divl
out
add
btc
adc
addr16
mov
sbb
pop
mov
aaa
lds
lret
pop
shrl
jecxz
fprem1
mov
adc
sbb
stc
lret
push
aam
mov
pop
push
xor
push
and
jb
dec
arpl
xchg
lods
xchg
cmpsl
cmp
and
in
in
mov
les
sub
mov
fxch
cmpb
mov
cwtl
add
mov
pop
cmp
mov
out
mov
shlb
call
lods
dec
push
add
iret
mov
or
mov
jg
fs
imul
and
mov
in
fwait
cwtl
fisubrs
sbb
cltd
sub
mov
push
adc
push
adc
into
sahf
push
add
vunpckhps
repz
push
std
pusha
insl
xchg
hlt
mov
add
adc
les
and
sbb
push
rcr
fiaddl
pop
or
das
xchg
mov
dec
nop
idivl
jno
lds
push
xchg
movsb
push
pop
sub
push
dec
and
push
inc
lret
out
scas
jnp
and
cmpsl
and
popa
lahf
je
jns
xchg
xlat
daa
rcll
cmp
aas
loopne
xchg
clc
or
push
push
rclb
and
push
int3
test
out
cli
std
in
sbbl
xchg
cwtl
mov
mov
mov
xor
fdivl
and
mov
push
fistps
cmp
mov
cli
pushf
cmpl
push
fcmovnb
mov
sbb
pop
jo,pn
push
mov
lock
pop
movsb
inc
scas
aaa
fimull
and
push
jno
pop
ss
int
xchg
jns
imul
xchg
icebp
loopne
mov
xchg
jb
xchg
xor
icebp
sti
movsb
mov
mov
sub
jmp
stc
pop
call
jbe
call
mov
ljmp
and
enter
mov
or
cltd
or
xor
iret
hlt
adcl
jg
leave
je
call
aam
lcall
push
sub
pushf
cld
negl
add
movsb
pop
xchg
sub
jbe
fsubl
sub
mov
popa
adc
out
jb
push
jg
in
std
sub
push
jae
shrb
movsb
in
dec
jae
pop
mov
and
loop
sbb
inc
xor
testb
pop
cmpsl
jne
jo
xlat
ja
call
test
cmpsl
fs
sbb
movsl
mov
lcall
pop
out
pop
add
subl
adc
outsl
pop
xchg
jb
sub
mov
repnz
inc
jbe
inc
adc
lret
cmp
mov
mov
jmp
test
outsl
repz
mov
popf
or
test
cmp
icebp
add
subb
leave
loop
out
loop
cwtl
imul
jecxz
mov
mov
in
cwtl
inc
rcrb
dec
popf
jle
mov
jle
out
xchg
mov
dec
xchg
mov
fs
cmp
loopne
mov
notl
cmp
cmp
pop
jbe
repnz
gs
mov
mov
stc
out
mov
sbb
stos
pop
daa
push
addb
ss
lods
cmp
lcall
pop
pop
adc
push
repnz
or
xor
imul
jb
pshufw
mov
jle
adc
popa
and
insb
inc
insb
xrstor
jae
aam
or
push
push
push
or
add
mov
xor
xchg
outsb
testb
jb
scas
jg
mov
jg
pushf
inc
es
in
dec
test
stos
in
cmpsl
rcr
sti
pop
mov
mov
stos
and
test
fadds
inc
add
cltd
sub
sbb
cs
xorb
mov
dec
xor
dec
or
adc
out
test
or
outsl
push
push
xor
leave
sub
test
js
shll
adc
inc
xchg
push
subb
subb
fldcw
sub
push
jo
or
test
dec
and
adc
sub
mov
mov
fst
mov
in
iret
or
cmc
rorb
mul
sub
inc
push
loopne
scas
dec
jg
test
inc
rorb
jbe
jp
in
add
adc
in
inc
mov
xrelease
jecxz
bound
xlat
jl
dec
int
jno
xor
movsl
adc
rol
jecxz
adc
or
jb
push
popf
xor
and
aas
aas
cmp
insb
testb
adc
mov
cmpb
shlb
fistps
xchg
dec
int
and
in
mov
stos
pop
pop
or
aaa
lods
out
mov
sbb
movsb
and
xchg
dec
out
hlt
or
imul
test
mov
add
mov
push
jb
call
aam
bound
sbb
or
cmpsb
mov
jge
mov
daa
xchg
xchg
cmpsb
xchg
or
adc
test
add
ljmp
rorl
sbb
xchg
ljmp
cmpsl
mov
sar
push
rclb
fdivrl
outsb
adc
shlb
mov
push
dec
xlat
xchg
ss
mov
push
and
lahf
adcl
inc
mov
cmp
movsl
int3
ret
aad
in
scas
cmp
and
adc
es
push
mov
fwait
jge
loop
das
push
sahf
jl
loope
adc
or
add
jl
mov
xor
mov
mov
stos
jae
xchg
shrb
out
add
pop
pop
sti
jo
or
std
dec
incb
ds
inc
pusha
jnp
dec
and
add
ret
sti
jne
adc
out
adc
mov
mov
stos
or
xor
xlat
inc
fstl
mov
sub
mov
test
or
insb
in
lea
movsl
xchg
mov
xor
pop
dec
out
ja
mov
inc
sub
mov
aad
enter
outsb
pop
lret
inc
push
xchg
pop
pop
fidivrs
inc
aad
push
cmp
pop
or
fidivrl
adc
jns
fiaddl
out
push
mov
adc
outsb
inc
lret
and
aad
inc
data16
push
mov
mov
cmpsl
outsl
cmp
out
fcoms
repnz
mov
insb
mov
jl
shll
inc
pop
adc
fstpl
or
pop
adc
mov
addl
nop
in
in
mov
cmp
insb
xchg
fidivrl
lock
test
inc
call
jns
adc
mov
add
inc
outsb
dec
push
dec
insb
sahf
push
fwait
jmp
out
pushf
sti
sbb
insb
mov
lock
into
outsl
and
cltd
bound
outsl
push
mov
pop
push
inc
push
test
into
xchg
scas
hlt
lcall
xlat
stos
xor
adc
sub
in
xchg
lahf
lock
test
andl
or
or
and
ds
nop
pop
mov
mov
leave
mov
xor
pop
test
push
and
cmpsb
sub
dec
imul
xchg
clc
add
and
loope
scas
pop
xchg
stc
adc
mov
stos
xlat
jge
cs
inc
mov
pusha
inc
je
jb
das
jle
movsl
test
jnp
shl
inc
sbb
sbb
and
sub
out
or
int
mov
loopne
lods
or
test
mov
fnsave
jns
push
mov
in
jle
movl
sub
sbb
lods
lods
sbb
lret
nop
test
movsb
push
xor
scas
arpl
add
or
out
sub
mov
dec
orb
aaa
in
add
cwtl
inc
call
lock
mov
fildl
sbb
icebp
call
dec
pop
and
fistps
fsts
lock
adc
mov
adc
pushf
push
pop
mov
out
xlat
and
push
xor
cld
sbb
dec
mov
lahf
movsb
out
pop
mov
or
test
inc
lea
mov
inc
xchg
jecxz
push
or
cld
and
jmp
xchg
push
rcll
rorb
aad
ljmp
mov
in
cmp
mov
or
adc
push
pop
bnd
pop
out
imul
xor
sbb
ds
jp
pop
aas
inc
std
xor
pop
shrb
push
cs
lret
pushfw
and
push
stc
mov
leave
jbe
cmp
popf
lock
mov
dec
push
or
pop
inc
shrl
insl
cmp
mov
mov
lods
jle
test
movsb
pop
ds
jle
fmulp
push
push
cmp
movsb
adc
mov
push
inc
mov
mov
dec
cmp
cwtl
inc
test
push
in
dec
jns
icebp
push
das
int3
test
icebp
mov
stos
lods
or
fwait
notl
fbstp
stos
lods
imul
ficoml
push
pop
add
jle
dec
xchg
cmp
sub
and
jp
ret
rcrb
pop
mov
shrl
jo
xlat
clc
sub
subl
xchg
aam
fisttpl
jae
clc
arpl
add
cli
mov
rorb
pop
aad
pop
fstp
lods
adc
mov
sub
mov
jl
in
pop
inc
mov
jecxz
pop
adc
jb
dec
xchg
test
xor
cwtl
and
pop
dec
xor
pop
popa
loop
sub
mov
or
cld
aas
cli
xchg
adc
jbe
insl
hlt
sbb
pop
lods
inc
inc
femms
mov
dec
sbb
movsl
and
add
or
repz
lcall
xor
jo
test
int
adc
fwait
stos
enter
cwtl
xor
mov
out
add
and
xor
push
enter
out
mov
orl
pop
inc
mov
sbb
xchg
xchg
pop
adc
pop
fdivp
xor
icebp
fildll
push
lcall
lret
pop
inc
add
out
out
addl
add
lcall
out
fcomps
loop
xchg
jns
aas
inc
pop
mov
in
loope
mov
shlb
adc
testb
mov
stos
lock
mov
scas
negb
jp
xchg
loopne
je
mov
mov
repz
and
mov
push
fwait
fidivl
xor
dec
sarl
roll
mov
or
cli
push
aas
cmp
adc
repnz
out
lock
sarb
shrb
lods
sbb
cwtl
sbb
xchg
sbb
push
shl
js
scas
in
lock
sbb
aaa
cmp
jno
pusha
add
xorl
dec
cmpsl
cld
mov
rorl
adc
or
mov
mov
mov
add
dec
push
sub
mov
push
dec
sub
push
in
push
mov
into
jl
cmp
xchg
pop
cmpsb
test
sbb
jl
lret
mov
aam
push
test
jl
xchg
in
jnp
in
jle
mov
jnp
mov
aad
imul
data16
hlt
inc
pop
sbb
mov
mov
clc
mov
inc
pop
test
push
inc
std
fwait
outsl
sti
aad
ret
jbe
add
inc
cmp
clc
lods
dec
xlat
les
out
outsb
fstpl
sbb
and
or
push
aas
inc
inc
jmp
cmc
inc
adc
int3
xchg
xchg
repz
dec
adc
or
and
fstpl
enter
dec
sub
pop
iret
push
cmp
sbb
xchg
scas
sbb
dec
dec
mov
sub
mov
jo
sub
mov
sub
outsb
in
sarb
mov
mov
cmpsl
xchg
adc
mov
mov
xchg
stc
insl
pusha
push
leave
imul
out
cld
ss
xchg
js
test
lret
shr
adc
jne
cmpsl
xchg
test
jecxz
ret
sub
pop
cltd
imul
inc
xchg
pop
fs
push
sub
push
mov
bound
adc
push
inc
out
cli
dec
pop
sbb
vmwrite
jns
cs
das
andnps
aam
movsl
mov
adc
lods
pop
push
xchg
enter
in
push
inc
push
jmp
jmp
jmp
mov
mov
xor
lods
out
ffreep
mov
sub
mov
aam
in
jmp
push
call
adc
ret
scas
std
fdivl
daa
insl
push
sub
inc
mov
fdivrl
clc
out
mov
test
movl
repz
xor
sbb
dec
cltd
rolb
dec
popa
or
in
pop
movsl
das
divl
adc
cmp
xor
stc
xor
rorb
pushf
dec
mov
push
cmp
in
add
mov
xor
daa
popl
or
push
xorb
cmp
aaa
xor
push
addb
xchg
test
dec
push
cli
into
int3
sbb
add
pop
pop
pop
dec
scas
mov
or
jg
mov
mov
in
ficompl
pushf
cmp
dec
inc
jmp
sbb
mov
mov
mov
push
rcrb
mov
nop
sbb
decl
dec
test
add
repz
cmp
cmpsb
xchg
pop
pop
fstl
loope
sbb
enter
in
cmpb
fldt
in
das
mov
lret
mov
shlb
fldt
out
xchg
mov
lret
mov
icebp
rcrl
fidivrl
cmp
mov
cmp
jns
hlt
rorl
mov
and
aad
std
sub
repz
jle
ljmp
aaa
mov
mov
lods
movb
pop
jnp
pop
push
loope
dec
sahf
iret
inc
out
xchg
iret
xchg
dec
loopne
sar
xchg
sbb
sti
cmp
lret
push
push
mov
xor
sbb
orl
shll
mov
mov
cmp
or
mov
pop
inc
cmp
lds
cmpsb
cmp
fidivs
sub
mov
inc
je
xchg
inc
jp
mov
push
add
inc
insb
testl
rcrl
pop
push
lret
ds
out
mov
sahf
call
ret
hlt
inc
push
stc
mov
jno
jecxz
push
test
jns
dec
loope
jle
mov
lcall
fcmovnu
int3
adc
inc
adc
subb
imul
lcall
nop
mov
or
cmp
push
push
lahf
mov
push
cmp
sti
mov
mov
pop
cmp
mov
dec
mov
gs
pop
std
inc
movsl
xor
daa
daa
sub
inc
and
xlat
push
inc
rolb
jnp
and
loop
or
jb
pop
rorl
mov
sbb
pop
fs
xchg
pop
in
les
arpl
loop
enter
push
test
mov
int3
loopne
fcoml
mov
push
xor
je
jns
adc
gs
mov
adc
popa
jmp
push
sar
pop
xchg
adc
adc
xchg
push
arpl
add
and
mov
push
int
push
movsl
cmpb
incb
stos
daa
jmpw
lods
adc
sbb
clc
in
loop
fildl
fmuls
mov
es
xor
jnp
leave
cld
xor
jle
popa
fsub
adc
lret
or
jmp
fisttpl
sbb
push
fbstp
in
gs
js
sbb
jl
repz
lods
fadd
mov
mov
or
rcr
fidivrl
push
inc
mov
loopne
xchg
pop
clc
xchg
sub
mov
mov
mov
mov
popa
cmpsb
xor
stos
ret
std
and
jnp
xor
pop
repnz
sub
xor
push
popa
xor
xchg
data16
xchg
pop
mov
subb
dec
xor
push
adc
into
loope
xchg
xor
lahf
pop
dec
mov
or
push
scas
push
push
pop
sbb
test
mov
daa
int
jmp
orl
mov
cs
scas
daa
add
subb
or
out
popf
in
fsubrs
inc
jp
ja
cli
lcall
push
fs
fcomp
call
lcall
addr16
xor
lds
repnz
lret
mov
jae
shl
addr16
mov
das
js
jg
int
cltd
testb
movb
arpl
int3
mov
cmpsb
pop
jno
adc
sbb
es
inc
xlat
lock
pop
xor
lods
inc
inc
and
xchg
fistps
fxch
mov
pmulhuw
out
jo
xorb
imul
push
or
cmp
dec
stc
push
xlat
insl
rcl
outsl
es
sbb
mov
test
mov
mov
mov
leave
xor
pop
imul
add
fwait
mov
mov
push
outsl
fcmovu
inc
pop
xlat
mov
rcr
pop
jmp
ja
rol
push
mov
and
cli
pop
lock
push
sbb
sbb
lcall
jmp
dec
pop
xlat
sub
or
sbb
mov
push
in
stos
popa
shlb
mov
sbbl
add
mov
movsb
cwtl
leave
aaa
stc
adcl
jmp
out
out
clc
cltd
aam
rcr
insb
mov
xor
inc
sbb
dec
movsl
ss
andb
int
cmp
lret
cmp
scas
sbb
cmp
mov
ja
aad
sub
mov
mov
sarb
sbb
addr16
and
mov
mov
xor
and
shlb
aad
mov
fdiv
jmp
push
test
mov
aad
jecxz
push
shll
aam
dec
dec
dec
dec
lret
clc
xchg
adc
inc
insl
inc
pop
dec
cs
jl
pop
add
dec
add
lret
cmc
jnp
xor
mov
loopne
and
dec
mov
sbb
or
jns
popf
cmp
push
cli
xchg
imul
xchg
jnp
loope
sti
sbb
pushw
test
xor
adc
or
adc
pop
dec
cld
aaa
sbb
and
mov
in
pop
inc
add
pop
shrl
faddl
sbb
or
xchg
into
adc
and
test
push
int
mov
or
cmp
loopne
out
mov
popa
in
add
push
fists
loope
mov
stc
inc
and
pop
bound
mov
je
movsl
ljmp
sbb
push
bound
xor
movsl
cmp
xor
repnz
mov
stc
pop
add
inc
xlat
lock
pop
inc
xchg
xchg
inc
dec
jbe
cltd
cld
xor
dec
cmp
test
into
imul
add
clc
mov
or
in
xor
movsb
push
or
pop
std
frstor
xor
cmc
js
in
mov
push
pusha
push
and
nop
push
mov
push
jmp
sbb
das
dec
out
mov
ja
and
scas
pushf
fs
cld
pop
imul
push
shlb
jne
cltd
inc
scas
cmpb
or
js
jnp
stc
ljmp
lcall
push
pop
sbbb
cmp
lea
sbb
dec
mulb
out
jl
mov
pop
push
sbb
and
lret
push
insb
bound
or
and
loopne
sbb
sbb
rorl
jnp
dec
mov
inc
mov
js
addr16
cltd
pop
int
lret
bound
jg
cmpb
pop
inc
add
jns
and
lret
mov
ret
aam
data16
out
popf
and
ror
mulb
sub
inc
and
jecxz
cmp
jae
popa
ljmp
jne
mov
cmp
pop
ret
inc
mov
clc
out
leave
push
out
inc
popf
icebp
outsb
mov
dec
je
cmp
mov
movsl
jb
aaa
jecxz
mov
inc
repz
in
dec
dec
jmp
js
cmc
inc
test
stos
pop
inc
loope
jb
and
repnz
stc
inc
mov
loope
cltd
out
stos
push
jp
or
ja
or
adc
dec
mov
lahf
add
jg
pop
pushf
lea
push
dec
outsb
pop
out
xor
test
mov
mov
aas
mov
sub
adc
push
scas
xorb
dec
and
push
pop
pop
push
shlb
ficoms
jg
incb
sub
negb
mov
inc
stos
pop
mov
test
xchg
stos
cwtl
xchg
int
in
lcall
inc
cmpsb
adc
jns
inc
jno
ret
mov
jb
cmpsb
sbb
cmp
mov
push
push
mov
les
rorl
adc
aaa
and
lods
ret
jae
leave
aas
jg
xor
outsb
ficomps
fisubl
orb
or
bound
mov
int3
test
sub
data16
and
push
add
cmp
jbe
cltd
dec
loopne
cmp
mov
adc
mov
or
pop
sbb
adc
mov
adc
adc
mov
push
add
push
xchg
inc
pop
mov
hlt
ljmp
cli
sub
ja
mov
test
push
dec
outsl
mov
adc
lea
inc
dec
or
xor
idivb
into
cltd
sahf
xchg
mov
and
lcall
mov
mov
xchg
jnp
hlt
cld
lds
adc
and
cld
push
arpl
loope
xchg
adc
pop
ljmp
scas
test
in
push
test
or
lahf
mov
jge
aaa
out
cltd
fstpt
addb
pop
sub
lahf
ds
mov
gs
mov
push
xchg
xlat
xchg
call
dec
cmp
idivl
mov
adc
xor
mov
mov
inc
std
lret
out
loopne
scas
loope
adcb
mov
push
in
movsb
sbb
rclb
xlat
xor
push
cmpsb
or
mov
mov
push
or
repz
mov
inc
xchg
mov
push
cmp
cwtl
scas
fwait
jl
ja
in
xchg
lcall
push
and
push
adc
and
ret
xchg
dec
in
jmp
or
stc
cmp
mov
iret
imul
stos
sbb
adc
test
sahf
in
or
lret
push
mov
cmp
cmp
adc
xchg
js
push
pop
addl
jl
mov
fisubrl
mov
ret
mov
testl
cli
dec
add
xor
enter
nop
mov
sub
nop
aaa
pop
out
sbb
jl
mov
adc
mov
jp,pn
movsl
ljmp
fidivl
outsl
mov
mov
aad
push
ret
ret
pop
daa
or
xchg
mov
ljmp
pop
inc
and
mov
jb
std
inc
pop
and
cmp
add
ljmp
sbb
inc
sbb
mov
mov
fstpl
test
ljmp
sub
mov
push
inc
mov
dec
shl
mov
mov
movsl
pop
mov
ja
and
mov
lret
xchg
cmovg
mov
or
xor
jnp
divl
movsl
jmp
icebp
mov
xlat
jb
jae
or
nop
test
dec
aad
das
pop
lcall
push
jb
scas
adc
bnd
mov
sbb
aam
or
iret
loopne
push
outsl
cmp
nop
mov
jbe
int3
pop
add
mov
pop
push
cmpsl
dec
inc
fsubs
mov
clc
jnp
mov
imul
inc
hlt
push
mulb
ret
pop
cmpl
cmp
ret
fidivrs
push
xor
lret
pusha
push
and
and
pop
out
add
or
dec
pop
add
xor
add
add
add
jp
rolb
inc
pop
das
out
adc
bound
adcl
mov
cmp
xor
in
mov
sbb
cmpsb
insl
pushf
addl
aas
js
testb
xchg
bound
repnz
and
int3
mov
xchg
add
test
push
or
inc
inc
xchg
rclb
sahf
add
mov
sarl
test
cmpsb
ljmp
dec
out
orb
lret
adc
insb
pop
cltd
mul
jns
ds
sbb
and
push
out
cmp
cmp
test
movl
dec
in
sub
pop
mov
add
lods
sahf
or
xchg
aam
subl
sti
pusha
sbb
test
sub
push
fsubp
cli
adc
in
pop
sbb
call
inc
inc
das
push
mov
xor
in
icebp
jns
pusha
jae
rorl
pushf
jns
jae
imul
nop
stos
repnz
sbb
add
sub
xchg
cmp
idiv
repz
in
push
clc
adc
test
mov
aas
icebp
std
popf
adc
pop
movsl
add
pusha
test
mov
ds
cmp
pop
inc
negl
pop
jo
outsb
sub
push
add
in
add
jmp
test
ret
lcall
inc
and
insb
inc
and
jae
mov
out
mov
fxch
inc
push
adc
xor
mov
cmpsl
cmp
hlt
push
dec
stos
xchg
jecxz
lea
sbb
mov
ret
gs
jecxz
daa
lods
and
lock
movsb
fnstsw
xchg
fwait
sbb
pop
popf
jge
cld
out
pop
and
test
xor
cmp
call
inc
sub
jg
lahf
sub
cmpsl
mov
arpl
cmp
cmp
jg
cmp
test
push
insl
sbb
int
xor
frstor
add
outsb
movsl
lret
dec
lret
hlt
push
cmp
call
mov
xchg
push
mov
jmp
aaa
sub
sbb
mov
rol
xchg
pop
movsl
cmp
test
movsl
int3
cli
popa
aad
roll
or
mov
out
adc
mov
or
jno
cld
cmpsb
push
notl
ret
sbb
in
hlt
mov
xor
add
mov
repz
mov
sar
sub
rclb
bound
mov
out
bound
notb
push
jge
pop
and
push
mov
sub
movsb
es
mov
pop
xlat
xchg
test
mov
xchg
and
in
aaa
adc
adc
mov
push
lods
mov
xchg
mov
lea
pop
and
leave
das
push
shll
cld
adc
push
popa
das
inc
jmp
stos
add
push
test
fidivs
stos
std
sti
mov
in
xor
jae
cltd
lcall
push
arpl
inc
cltd
jg
js
aas
jb
repz
test
ficomps
iret
jnp
cwtl
lret
aad
js
mov
lods
lret
or
mov
pop
or
nop
jecxz
jno
in
shl
adc
in
sub
jl
imul
inc
pop
icebp
loope
push
sahf
add
stc
push
out
imull
xchg
cwtl
mov
lret
pop
sbb
daa
imul
lds
fisubs
or
mov
aas
out
sbb
pop
loopne
pop
push
xchg
inc
inc
cli
aam
jns
out
cmp
jb
mov
movsb
xchg
pop
sub
sub
pop
cmp
mov
popa
mov
sub
pushf
lea
mov
add
pop
mov
nop
filds
fildl
push
movsb
sbbl
dec
xor
mov
mov
lahf
cwtl
jnp
or
push
add
in
gs
arpl
stos
sbb
sub
enter
dec
test
data16
je
leave
out
inc
ljmp
pop
mov
sub
pop
jge
call
aaa
loop
hlt
jbe
rcrl
adc
xchg
cmp
ret
outsb
sbb
sub
and
mov
movsb
sbb
movsb
add
jo
mov
mov
push
loop
push
cmp
sti
aas
xor
cli
pop
mov
mov
jne
test
int3
and
mov
outsl
in
push
mov
iret
jno
xchg
scas
adc
and
sbb
inc
sub
popf
sbb
adc
xor
push
push
lods
cmpsl
inc
arpl
xor
mov
push
out
subb
sub
sbb
cld
mov
xor
jne
mov
ret
out
ret
mov
mov
xchg
push
cltd
popa
pop
in
movsl
xor
repz
cmp
insb
and
and
cwtl
popl
out
stc
enter
xor
imul
cmp
rclb
movsb
shlb
jb
and
cmp
out
mov
mov
in
xchg
xor
xor
leave
jg
fsts
push
lods
xor
xor
mov
mov
fnstcw
aad
adc
mov
dec
mov
push
fldl
sub
mov
cmp
mov
pop
std
mov
pop
push
ljmp
fcompp
add
das
mov
adc
es
jg
int
mov
mov
rcrl
mov
je
sub
push
fwait
push
cmp
fcoms
mov
xor
imul
mov
cs
out
stos
dec
ss
and
out
shrb
add
and
mov
dec
jg
add
xchg
insl
cs
jo
out
imul
call
add
adc
xchg
fisubrs
fnclex
xchg
ret
inc
jo
jns
push
stc
sbb
stc
pop
clc
and
xor
fcomip
sbb
mov
test
inc
and
mov
popa
jecxz
call
ljmp
cwtl
xchg
cmp
lcall
dec
and
addl
xor
insl
insl
sbb
stos
cmp
mov
cmc
or
mov
mov
fnstenv
mov
dec
mov
test
inc
or
sbb
jno
fnclex
inc
mul
scas
xchg
rclb
jg
pop
dec
stos
or
dec
dec
cld
mov
push
pop
pop
xchg
ds
das
cmp
popf
or
inc
adc
cmp
stos
sub
fwait
mov
dec
mov
incl
xchg
inc
mov
push
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
imull
mov
jnp
movsb
aad
mov
or
push
and
mov
push
in
xchg
lods
jne
in
add
adc
fs
lods
cmp
pop
push
test
sbb
sub
mov
mov
clc
jae
jno
mov
sub
cld
out
pop
shll
ds
movsl
jecxz
arpl
cmp
pop
jnp
xor
gs
outsl
je
lods
push
mov
and
xchg
fwait
push
mov
icebp
mov
xor
jmp
xor
out
movsl
mov
decl
cmpl
add
js
repnz
das
cmpl
cmpsb
sbb
pop
add
pop
ficomps
jg
cmp
pop
mov
inc
imul
mov
gs
dec
xor
mov
jns
fwait
out
aad
push
xchg
cld
jb
inc
xorl
dec
aad
sbb
mov
ret
lods
push
add
xchg
ret
cli
mov
daa
mov
cmpsl
ret
into
or
mov
jno
andl
scas
lret
cltd
and
mov
mov
in
imul
lahf
aam
call
or
mov
adc
test
mov
pop
pusha
push
incb
add
outsb
cmp
push
stos
cwtl
mov
sbb
aas
pop
dec
dec
jb
repnz
dec
mov
andl
add
xlat
pop
and
adc
jnp
cmp
jno
push
mov
stc
adc
cmp
jne
repz
lods
movsl
fisttps
fmull
xlat
pop
cmpb
out
push
daa
inc
daa
xchg
pop
les
adc
cmp
shl
lods
pop
inc
lods
rcrl
and
push
hlt
out
rorl
mov
lahf
std
jno
shrl
jnp
popf
enter
mov
jae
mov
test
mov
mov
xchg
mov
lea
stc
fstp
imul
push
and
sub
mov
shl
das
push
jnp
jae
fucomip
sbb
insb
lods
cld
inc
and
sub
iret
add
xor
xchg
cmp
ss
pop
xchg
xor
xchg
pop
rcr
je
add
xchg
inc
dec
mov
pop
out
mov
sbb
ficomps
nop
ret
imulb
mov
sbb
outsb
call
mov
sbb
mov
dec
mov
cltd
enter
cs
popf
rorb
add
sbb
mov
push
fs
cmpsb
inc
dec
lods
and
adc
mov
mov
jmp
lret
popa
mov
jmp
push
jnp
jg
or
loop
mov
mov
loopne
loop
fisttpll
ss
lret
push
sub
mov
jb
mov
inc
pushf
rcr
cmp
bound
jmp
ds
mov
cmp
out
push
fisubrs
hlt
loopne
adc
lods
mov
ljmp
sbb
ss
jo
xchg
int3
inc
cmp
int3
pushf
int
xchg
xchg
jle
inc
pop
je
adc
imul
addr16
aam
mov
xchg
dec
push
incb
pop
or
in
inc
popf
and
test
sti
push
push
mov
js
push
iret
push
nop
gs
add
ret
idivb
repnz
fdivl
test
cmp
mov
xchg
inc
shrb
aas
and
mov
movsl
scas
pop
lods
pop
icebp
loope
jmp
fs
push
call
dec
sbb
hlt
mov
test
xor
cld
lret
inc
mov
mov
scas
sbb
loopne
lret
mov
dec
inc
mov
jg
sub
adc
or
sarl
pop
and
mov
jbe
and
pop
subl
fmull
mull
xchg
outsl
cmp
rolb
ljmp
xor
adc
inc
es
push
sub
push
sbb
jmp
jbe
inc
xchg
or
jne
gs
mov
out
cltd
lahf
jo
mov
js
pop
lock
mov
ljmp
mov
lret
fs
lods
into
xchg
xchg
orb
call
push
mov
jae
inc
js
push
and
ror
je
pop
adc
jecxz
pushf
std
iret
xchg
mov
jne
dec
arpl
movb
sub
lcall
dec
add
mull
stos
cmpsl
xor
hlt
mov
js
mov
aad
pop
cmp
cmp
fdivl
add
into
mov
inc
mov
add
lahf
lret
arpl
mov
shrl
add
shlb
add
hlt
mov
xchg
sbb
cmp
std
int3
and
lahf
mov
fwait
movsl
pop
jne
decl
pop
cltd
xchg
mov
andb
lcall
outsl
sub
push
sbb
inc
sub
test
clc
push
cmpsl
fldenv
aaa
and
rcrl
xchg
cmpsb
sub
jo
push
rclb
ds
movl
scas
out
sti
bound
aad
lds
lcall
aad
mov
aad
pop
jnp
and
or
sbb
push
sahf
mov
xor
push
mov
stc
pushf
mov
mov
inc
and
sbb
inc
xorl
aaa
cmpsb
lret
push
xor
and
xor
jg
fmulp
icebp
andl
xor
or
xorb
into
lret
sub
pause
imul
imul
adc
ljmp
repz
ds
shlb
imul
je
mov
dec
shll
inc
lahf
cwtl
adc
and
and
rolb
sub
fnstcw
pusha
xchg
dec
mov
jecxz
stos
mov
negb
ror
adc
hlt
inc
lret
dec
shrl
ljmp
cmp
jecxz
es
daa
leave
cmc
cs
out
ret
xor
push
js
sub
jns
pop
in
lret
iret
ljmp
pusha
push
or
fcmovbe
xchg
ljmp
cltd
xor
or
xor
clc
cltd
aas
test
inc
pop
fwait
inc
push
filds
pop
fmul
mov
bound
inc
dec
add
or
mov
pop
cmovnp
lea
mov
add
xlat
mov
mov
inc
stos
push
jmp
insb
sbb
xchg
add
jmp
push
lahf
sbb
out
pop
aam
or
mov
stc
push
fs
out
pop
cltd
pop
insl
jb
jge
repnz
out
outsl
testb
negl
pop
lds
pop
sub
dec
xor
push
pop
mov
inc
push
ja
xor
pop
inc
add
xchg
jp
addr16
dec
cmp
pop
pop
pop
mov
mov
lcall
add
je
mov
push
mov
pushf
push
mov
xor
ret
mov
pop
push
lods
imull
or
and
imul
mov
cmpb
xchg
test
fwait
int3
outsb
adc
push
mov
incl
cmc
sbb
insl
repz
add
pop
dec
mov
mov
std
gs
arpl
inc
dec
pop
fsubl
jnp
add
adc
push
shrb
fwait
daa
inc
adc
mov
pop
sbb
enter
hlt
mov
xchg
popa
add
ljmp
xor
inc
enter
dec
stos
fcoml
clc
ja
push
out
and
mov
test
adc
movsb
es
xlat
aas
sbb
dec
mov
int
je
push
enter
hlt
add
adc
lret
push
push
sbb
inc
mov
inc
xor
cltd
pop
push
ljmp
cmp
clc
add
adc
stc
mov
dec
mov
jmp
mov
xor
push
fildl
inc
dec
jb
ficomps
dec
mov
std
cmpsb
dec
or
sub
in
rolb
push
mov
and
popa
aas
adc
pop
adc
pop
call
adc
rcl
add
and
mov
add
mov
in
subb
gs
loopne
out
fisttpl
les
inc
pop
inc
adc
cmp
adc
cmpsb
mov
mov
into
or
in
mov
mov
outsl
mov
in
mov
hlt
ss
jae
shrb
shl
pop
fwait
pop
enter
dec
je
add
inc
das
loope
inc
lods
ljmp
cmp
xchg
fstl
jno
shll
sbb
mov
cmpsb
aam
fld
xor
xor
hlt
lds
das
add
dec
gs
nop
xor
jno
fstps
xchg
inc
mov
push
test
jecxz
jecxz
cs
cmp
jae
fbstp
popw
mull
jmp
mov
int3
mov
enter
pop
jle
mov
adc
or
in
mov
inc
sub
push
cltd
xchg
cli
clc
aaa
aad
jge
loop
repz
mov
fildll
jmp
scas
and
cmp
arpl
xchg
add
rcrb
or
sti
int
cmpsl
xor
hlt
int
or
or
and
jns
scas
into
shr
aaa
xchg
popf
jb
and
lds
jmp
xor
pusha
pop
sbb
pushf
xlat
test
loope
insb
mov
daa
sbb
sbb
aad
dec
inc
adc
ret
add
mov
leave
call
pop
fsts
movsl
and
mov
inc
cmc
rorb
sbb
xchg
xchg
fs
xor
ret
and
repnz
imul
shrl
sbb
inc
jne
imul
adc
std
cmpsl
jbe
xchg
loope
jmp
xchg
cmp
ret
pop
mov
iret
mov
sbb
adc
jbe
ret
scas
add
and
cmpsl
js
jbe
test
popf
fdivs
jge
pop
sbb
xor
loopne
fdivs
jg
sbbb
or
mov
and
mov
mov
sub
ret
lods
insl
jmp
mov
jae
sbb
lods
dec
sub
fcmovnu
fnsave
mov
sub
inc
push
cmpsl
cmp
jbe
std
add
aas
dec
lahf
dec
ds
arpl
sti
orb
inc
loope
lea
xchg
adc
sbb
int3
inc
sbb
insl
int
add
ljmp
add
iret
repz
call
ja
pusha
ficoml
out
popf
cmpb
das
aam
ss
mov
push
lahf
fcmovb
loopne
imul
dec
and
gs
out
stos
pop
jno
hlt
push
in
pop
cmpsl
push
and
in
adcl
dec
mov
shrb
les
jmp
leave
out
dec
insl
or
push
cli
xchg
andl
xchg
add
aaa
and
xchg
test
sub
out
hlt
sub
mov
into
xchg
pusha
push
push
push
push
sbb
sbb
pop
or
ret
mov
shr
push
test
loop
sbb
jg
shl
sbb
mov
add
xor
stc
mov
and
cmc
mov
cmc
psllw
arpl
mov
mov
lret
sub
xor
iret
mov
pop
ja
negb
cmp
insb
mov
push
lret
xchg
ja
es
mov
js
add
iret
pop
test
push
inc
push
sbb
mov
inc
ljmp
cli
sub
mov
mov
in
cmp
jbe
nop
pusha
lods
out
xchg
sub
mov
pop
fs
add
dec
iret
mov
cmp
mov
and
mov
enter
mov
mov
fdivl
jae
insl
adcl
arpl
jl
outsl
call
es
rcrl
dec
sub
sub
sbb
inc
je
sbb
clc
sbb
inc
add
imull
push
push
xchg
das
ss
lods
popa
js
fmuls
loopne
xchg
mull
adc
cmp
enter
mov
ja
lcall
jb
repnz
jp
jns
cwtl
es
mov
insb
lahf
sbb
loope
pushf
out
adc
test
pop
or
and
adc
and
sbb
nop
testl
or
ds
mov
xchg
imul
pop
aas
adc
mov
sub
pop
stos
jp
sub
cmp
mov
jp
lret
or
jg
push
mov
mov
xor
push
jns
cmp
aad
mov
inc
add
cmp
out
out
movsl
and
fstpt
mov
lds
sub
mov
jmp
rol
out
sahf
jno
jl
pusha
stc
sub
shrb
or
jne
mov
out
pushf
lcall
insb
out
cmpsw
mov
das
hlt
mov
xchg
jmp
pop
sub
and
in
scas
imul
stc
xor
dec
push
mov
jo
inc
scas
aad
lock
add
add
adc
aaa
mov
in
out
mov
xor
es
add
and
cs
shl
fisubs
adc
jl
and
inc
addl
xor
stc
aaa
insl
inc
push
popa
mov
jle
cwtl
nop
sbb
dec
or
cld
dec
xchg
out
fldcw
arpl
dec
inc
ja
mov
pop
je
fldcw
lock
inc
inc
inc
pop
push
loop
in
pushf
push
dec
ss
pop
xchg
divb
pop
test
fstpt
jae
adc
cmpsl
imul
shlb
popa
out
xchg
xorb
lahf
inc
cmpsb
cld
inc
mov
mov
aaa
push
inc
bound
push
dec
jo
popf
xchg
or
addr16
jp
cmp
xchg
dec
or
push
insl
mov
push
movups
data16
in
or
shrb
das
add
mov
repz
fisttpl
shrb
sub
pop
xchg
xchg
sbb
mov
adc
mov
or
sahf
pop
and
mov
push
es
mov
adc
sbb
mov
fisttpl
push
add
js
ja
pop
adc
popf
popf
bound
aam
aad
stc
jecxz,pt
dec
xchg
cwtl
jmp
cmp
cld
mov
mov
and
add
in
jle
jle
mov
imul
je
aaa
adc
mov
mov
jle
add
sub
mov
cmc
jmp
in
xchg
jmp
int3
dec
es
pop
int3
sbbb
mov
mov
mov
loop
xor
mov
pop
enter
or
enter
xchg
mov
pusha
rclb
lds
xchg
dec
pop
ret
ficoms
call
lahf
mov
push
test
push
test
fisubs
xchg
push
cmp
cmp
cmpsl
jne
jno
stos
mov
cltd
loopne
hlt
push
mov
aas
and
call
xor
adc
inc
push
aas
call
mov
mov
std
inc
pop
sub
pop
data16
shll
sbb
stos
xchg
aad
cwtd
js
mov
cmpsl
mov
enter
pop
jae
mov
sbb
fsts
leave
icebp
test
call
fldt
aaa
and
ss
pop
and
adc
and
into
int
and
stos
cmp
xchg
jbe
mov
sub
mov
jp
mov
push
xor
test
nop
imul
adc
fistpll
lds
daa
int3
adcb
mov
sub
sbb
roll
ret
stc
adc
mov
jb
movsl
lods
mov
jbe
cmp
jnp
dec
jb
xchg
popf
adc
cmpsl
cli
ss
adc
stos
mov
imul
jmp
mov
movsb
fstps
sbb
cmp
jo
xor
imul
nop
mov
cmc
idivb
push
mov
add
xor
pop
insl
js
mov
fisttps
jmp
or
out
pop
sbb
sub
int
das
mov
in
mov
adcl
int3
add
jno
pushf
xchg
pushf
pop
push
lret
lods
call
and
jns
lea
mov
mov
jno
das
int3
outsl
aaa
aam
push
inc
cmp
mov
test
fbld
push
dec
les
push
outsl
mov
add
das
iret
in
es
dec
mov
xor
dec
or
pop
cmc
xchg
lds
in
cmp
leave
adc
xor
cmp
andb
adc
mov
lret
add
xchg
arpl
add
xor
sahf
adc
cmc
pushf
nop
pop
pop
in
int3
ret
imul
es
sbb
jb
and
xchg
negb
inc
cmpsb
enter
add
in
sti
test
test
out
inc
insb
jg
aas
loopne
add
notl
aad
inc
or
mov
hlt
gs
mov
dec
dec
enter
sbb
in
inc
imul
sub
fmuls
in
in
mov
xlat
arpl
pop
movsb
jg
mov
aaa
loope
add
cmp
hlt
mov
in
push
in
mov
stc
adc
jg
rolb
mov
stos
dec
repnz
negl
mov
scas
nop
popf
into
mov
ja
int
mov
jl
mov
out
mov
negl
adc
in
hlt
sbb
les
xchg
test
mov
adc
fwait
int3
mov
lods
andb
fwait
sahf
and
and
jl
and
sub
into
pop
sub
cmp
push
mov
xchg
mov
pusha
pop
scas
push
adc
lcall
mov
push
cmpsb
sbb
cmpsl
popa
out
push
lret
outsb
push
es
jmp
aaa
xchg
sbb
cmp
icebp
push
inc
mov
push
inc
push
cmc
push
leave
sub
subl
stos
and
cltd
sub
jmp
lods
repz
pop
notb
cmc
popf
out
pop
add
insb
jecxz
and
das
xor
ficompl
enter
pop
inc
sahf
ss
xor
mov
test
aas
sbb
mov
dec
stos
adc
mov
aaa
in
stos
sbb
adc
xor
outsb
out
inc
add
lret
or
jmp
aaa
test
sbb
jno
or
je
jno
icebp
sub
fcompl
in
in
sub
mov
gs
xor
inc
xchg
cwtl
sub
jl
mov
lds
sbb
adc
xlat
ret
stos
fst
jle
pusha
loop
les
or
nop
pusha
int
std
dec
jecxz
je
xor
dec
mov
jnp
movsb
push
out
dec
and
pusha
and
xor
lock
mov
mov
popa
nop/reserved
xchg
mov
dec
iret
fimull
fsub
xchg
adc
rorb
xor
stos
cmp
outsb
adc
pop
insb
popf
lcall
xor
fwait
push
inc
push
pop
or
lea
ror
je
cwtl
pop
push
inc
and
xor
or
add
cld
jbe
add
scas
pusha
mov
inc
out
push
mull
fsubrs
mov
aaa
divl
push
iret
ljmp
sbb
andl
lret
in
push
pop
sub
jmp
cld
inc
cltd
mov
mov
insl
out
dec
pop
adc
scas
leave
sarb
xlat
clc
push
jge
insb
mov
mov
xchg
fistpl
xlat
rcrb
cs
sub
pop
xchg
addr16
and
pusha
je
js
es
mov
lahf
mov
cmc
cmc
bound
adc
adc
pop
push
jmp
addb
pop
or
data16
sbb
mull
mov
and
mov
sub
sbb
pop
test
sub
xchg
shlb
xlat
mov
not
ret
imul
cmpsl
lret
add
sbb
inc
testb
pop
xchg
mov
les
mov
pushf
xchg
push
pushf
in
fistps
adc
push
lret
fidivrl
xor
and
and
fldt
aas
push
cmpl
xchg
std
xor
xchg
pop
lcall
movsb
pop
lahf
mov
add
call
je
addb
push
mov
push
mov
mov
lsl
sub
shlb
fwait
adc
and
mov
in
notl
push
jb
lods
aad
scas
rcrb
loope
jmp
push
mov
mov
sub
std
outsl
aam
inc
sub
mov
push
pop
push
mov
repnz
lods
std
ret
xor
movsl
bound
xchg
add
sbb
push
push
negb
push
hlt
lret
jmp
lods
jmp
jnp
cltd
and
sbb
mov
gs
mov
in
jecxz
pop
jg
mov
std
mov
mov
cmp
or
pinsrw
jle
and
and
jmp
les
pop
das
das
jno
loopne
stc
stc
mov
rcrl
lret
addl
scas
inc
jecxz
push
ja
xlat
and
mov
lods
adc
push
popl
ljmp
inc
arpl
inc
add
mov
enter
xchg
jbe
push
mov
pop
mov
cmpsb
mov
in
push
xchg
add
ret
call
fwait
lea
cld
shr
cld
dec
xchg
outsl
loope
mov
push
cmp
movl
hlt
negb
ja
repz
out
test
xchg
ja
les
mov
out
jl
pusha
rolb
jl
adc
and
mov
pop
or
and
or
out
mov
mov
xchg
xchg
fwait
jp
inc
out
jns
sub
adc
xor
test
insb
repz
jmp
and
lock
decb
mov
clc
test
pop
jecxz
sub
xor
xchg
dec
push
mov
pop
dec
hlt
out
sbb
jecxz
outsb
mov
aas
push
iret
repz
call
mov
mov
mov
adc
popa
or
dec
out
and
sbb
subl
leave
jno
mov
addr16
outsb
pushf
int
adc
inc
jo
lcall
mov
std
and
cmpb
dec
dec
filds
sub
xor
inc
movsb
xor
jae
leave
push
aaa
cmp
inc
aam
xchg
jmp
ss
mov
push
jns
cmc
and
imul
shrl
pusha
mov
lock
rcr
jle
mov
mov
std
flds
cmp
or
out
cmc
aad
clc
pop
mov
jp
mov
outsb
les
pop
xorl
jo
pusha
jbe
jb
repnz
adc
aam
sbb
ljmp
insb
loope
jmp
repz
iret
mov
je
and
sub
jmp
dec
pop
stc
sti
fsubs
pop
out
dec
push
mov
adc
fmuls
aaa
or
jns
scas
pop
adc
jcxz
icebp
repz
fisttpl
jnp
add
fsubs
dec
dec
mov
test
idivb
push
cmpsl
imul
mov
inc
dec
jns
or
push
enter
cwtl
movsl
nop
mov
mov
add
and
xor
dec
inc
cmc
cld
negb
ss
loop
ficoml
in
arpl
cmp
xchg
mov
in
out
dec
or
add
cmp
shrl
mov
mov
jp
xor
push
adc
mov
and
loopne
jno
xchg
push
mov
inc
lahf
test
xor
jb
repnz
jg
xchg
lahf
adc
sbbl
cmp
pop
scas
mov
xor
lods
push
out
and
pop
mov
out
inc
std
in
and
lods
dec
dec
in
xchg
ljmp
popf
hlt
leave
cmp
xor
pop
xchg
cmp
vsubss
mov
inc
cmc
jp
mov
push
xchg
out
in
fildl
scas
adc
pop
dec
cmp
insl
int
lret
xor
das
mov
lods
jbe
jl
mov
inc
arpl
jp
addr16
popa
addl
mov
sbb
inc
das
imul
cmc
ljmp
push
loope
out
inc
test
daa
out
loopne
loope
fdivrl
scas
xchg
ja
aam
scas
or
xchg
cmpsl
aad
in
inc
mov
popf
push
dec
cmp
xor
ret
fmull
inc
cli
add
xchg
sbb
rclb
aaa
mov
jns
aaa
out
aas
rcrb
mov
xchg
rorl
cli
xchg
sbb
or
cmc
xor
or
cmpsl
and
cmpsl
std
sub
stos
jne
in
fwait
dec
data16
xor
push
mov
into
cmp
dec
and
cmpsl
subl
cmp
add
repz
loop
rcll
mov
and
mov
in
imul
ja
or
fisubrs
shl
filds
dec
lahf
and
xor
jb
cmpsb
int
call
cld
adc
inc
adc
pop
pop
in
sbb
shlb
inc
cmp
out
push
into
add
call
out
shl
rcrb
ds
in
adc
repz
jo
inc
sbb
or
mov
cwtl
in
rcr
and
dec
call
dec
xlat
xor
inc
imul
push
or
dec
lods
jmp
mov
mov
sbb
imul
or
xchg
mov
or
pushf
mov
cmp
rorl
mov
push
xor
push
imul
fnstcw
push
cltd
test
push
sbb
in
push
jmp
inc
push
dec
add
in
shlb
add
scas
mov
push
mov
mov
fidivrs
mov
jnp
and
xchg
rcl
jecxz
sbb
add
cld
xchg
push
bound
aam
test
xchg
mov
std
pusha
xor
jl
add
mov
scas
js
xchg
mov
das
dec
sub
stos
adc
cmp
in
sbb
xor
lret
jno
cld
lcall
push
pop
push
inc
aad
sub
daa
add
js
adc
sbb
inc
jecxz
test
jbe
adc
jmp
fnstcw
outsb
mov
cmp
bound
pushf
sbb
dec
in
jns
in
mov
fnstcw
xor
inc
cld
add
scas
mov
out
pop
inc
out
andb
push
cld
xchg
fstpt
inc
cmp
les
aad
add
aam
dec
pusha
nop
inc
shll
add
add
mov
xlat
out
pop
stos
add
jge
mov
mov
repz
stos
jl
cmp
pop
mov
cli
adcl
les
mov
lret
dec
inc
pop
sbb
mov
push
mov
mov
inc
or
decb
aaa
ficoms
cmp
mov
aad
mov
xor
push
sbb
ret
mov
ror
lods
adcl
lahf
fsts
jno
sbb
xchg
mov
add
insl
xor
push
adc
aam
sub
repz
mov
dec
sti
leave
push
loopne
mov
jge
lods
xor
aaa
loope
fstl
lods
jecxz
sbb
imul
jmp
lds
pop
inc
imul
xchg
inc
sub
int3
cmp
js
sub
enter
jnp
int
sub
push
inc
in
lods
jno
js
rcr
sbb
mov
xchg
jbe
sub
push
lret
xor
dec
shl
stos
xor
xchg
xor
mov
sbb
dec
dec
je
inc
jns
out
jmp
mov
std
inc
cli
enter
outsb
and
test
cmpsl
mov
sub
mov
dec
push
cltd
xor
mov
pop
mov
inc
iret
cmpsl
dec
mov
cmp
jno,pn
and
pop
xchg
pop
pushf
mov
fsts
daa
enter
add
or
xchg
inc
jle
std
cmp
cs
incb
jg
mov
add
and
cmp
adc
xchg
sahf
xchg
outsl
sub
cmp
xor
adc
xchg
stos
push
ja
cwtl
js
fdivrs
mov
cs
imul
sub
sbb
in
inc
lods
pop
daa
js
mov
out
inc
cltd
pop
hlt
cmp
shr
jg
push
adc
dec
dec
sub
push
pop
pop
divb
cmp
push
nop
cli
mov
jo
je
or
or
es
pusha
xor
out
jae
cmp
insb
or
fs
movsl
mov
ja
adc
xchg
push
insl
cmp
adc
bound
lods
jge
cmp
stos
fisubs
loope
dec
dec
inc
sti
pop
xchg
mov
sub
add
mov
push
out
outsb
mov
or
jnp
mov
fucom
in
lods
ss
push
test
fdivl
push
dec
movsl
sub
sub
push
outsb
sub
iret
xchg
lea
jne
mov
sub
xor
ret
inc
imul
movsb
aam
sub
neg
sub
jmp
int3
sub
mov
pop
inc
pusha
inc
cmc
enter
add
movsl
mov
sub
sbb
inc
mov
jae
repnz
and
adc
icebp
cmpsl
ret
shrb
lods
mov
in
jns
and
push
pop
mov
aaa
or
or
cmp
cld
push
xor
filds
sbb
js
outsb
jnp
adc
addb
xchg
jb
jne
movsl
clc
test
popa
test
repz
lods
dec
call
dec
lods
aaa
dec
jae
enter
orb
lcall
mov
and
push
out
leave
add
and
lret
xchg
stos
iret
movsl
popa
stc
mov
inc
repnz
xor
mov
xor
std
jo
jnp
mov
xchg
mov
dec
mov
stos
insb
jo
or
cli
mov
xor
push
dec
xchg
adc
xor
mov
inc
leave
leave
mov
push
cmp
insl
repz
adc
jnp
lcall
and
sub
mov
or
cltd
mov
dec
add
cwtl
jecxz
scas
jnp
push
popf
sbb
movsb
sbb
jg
mov
push
and
jnp
and
rcrl
mov
sbb
mov
std
adc
xchg
out
mov
add
push
mov
flds
jnp
out
adc
cmpsb
dec
mov
sarb
and
xchg
std
mov
movsb
icebp
iret
aad
cmp
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
xlat
xlat
lahf
dec
xchg
jp
mov
jnp
aaa
flds
cmp
std
or
sahf
ja
nop
in
and
sbb
ds
and
dec
push
fsubl
lcall
fistl
or
loope
daa
inc
fs
jmp
adc
push
mov
fildll
xor
jl
mov
sub
dec
add
inc
push
push
pop
cwtl
addr16
pushf
das
cs
mov
xor
rorl
pop
fs
mov
fidivs
dec
cmpsl
popf
jne
sub
push
xorb
test
xor
inc
xor
fistps
movq
jae
in
add
pop
mov
fcompl
les
sub
lahf
xchg
aas
arpl
or
cwtl
insb
pop
add
cmpsl
adc
clc
cltd
cmp
sub
cs
sbb
in
fstpt
orb
jns
out
movsl
pop
xor
addr16
mov
and
or
fsubl
int3
notl
xor
es
push
and
inc
push
sbb
jnp
or
ret
jb
data16
leave
and
shl
xor
in
mov
shll
imul
add
mov
xchg
xchg
jae
rcrb
inc
negb
fnstsw
xor
clc
aaa
sub
xchg
sbb
mov
sbb
imul
pop
add
insb
es
jmp
push
mov
and
mov
pusha
lods
cltd
jl
mov
sarb
js
adc
xor
sub
or
ja
cmp
stos
lds
lahf
mov
shl
cmp
pop
xchg
jge
shr
outsl
jmp
scas
xchg
xchg
xor
loop
iret
push
dec
sbb
dec
push
mov
aad
mov
es
sub
cltd
push
leave
jns
inc
cmpsl
sub
pusha
add
cli
es
fsubl
cmp
cmpsb
cmp
xchg
pop
jmp
cmp
cwtl
cmp
dec
dec
lock
es
test
sbb
jne
test
stos
fldcw
ljmp
aam
fstpl
mov
mov
lret
jne
stc
cmpsb
bound
idiv
cmp
jp
ret
leave
xor
mov
sbb
scas
int3
ss
lret
jo
lods
sbb
fisubl
adc
pop
imul
xchg
pop
imull
cmp
cmc
xchg
mov
lds
ror
sbb
in
arpl
sbb
and
mov
or
enter
xchg
imul
sub
cwtd
and
push
and
lock
adc
addr16
jbe,pt
inc
cmpsb
enter
cmpsb
iret
std
bound
sahf
leave
push
mov
jns
jecxz
out
xlat
mov
cmp
ljmp
popa
inc
xorb
in
std
cld
inc
cld
sbb
and
ret
fcoms
mov
or
enter
ret
push
sbb
pop
mov
ret
dec
call
push
push
xor
inc
xchg
lea
imul
das
mov
cltd
mov
inc
add
inc
in
sub
lahf
dec
fcoml
ljmp
sub
into
mov
add
mov
cmp
fdivrs
test
out
fistpl
push
shlb
push
fdivl
jmp
iret
and
in
push
xchg
pop
int
leave
fadds
das
imul
xchg
push
stc
xchg
mov
mov
enter
lcall
pop
jle
pop
pop
inc
test
sbb
pop
pop
pop
lods
leave
xchg
movntps
enter
dec
sbb
int3
jecxz
sub
shlb
cmp
cmp
adc
mov
sbb
aas
jae
pop
xchg
imul
add
jle
movsb
and
movsl
jno
push
andl
xchg
hlt
std
push
adc
and
mov
hlt
adc
enter
xor
jns
pop
jge
dec
flds
inc
loope
jmp
bnd
imul
gs
scas
sahf
dec
and
push
data16
push
lods
fnsave
mov
and
xor
fwait
bound
stos
jecxz
jecxz
scas
flds
lea
dec
mov
loopne
scas
inc
xor
sar
inc
xchg
addr16
or
cmpsl
icebp
fcmovnb
mov
popf
mov
les
xor
push
int
and
push
es
or
push
cmp
in
jg
sbb
lret
dec
pop
xchg
inc
outsl
push
mov
fwait
jnp
rclb
pop
addb
das
dec
pop
ret
pop
pop
cmp
xorb
and
js
inc
inc
jle
sbbb
lea
stos
jg
stos
adc
push
lcall
xchg
inc
bound
pop
or
shll
adc
aad
mov
cltd
scas
mov
mov
ja
xchg
in
mov
and
push
ljmp
push
add
push
clc
adc
push
jl
jo
mov
fldenv
test
mov
loop
inc
mov
insl
jbe
lahf
push
pop
adc
cmp
jmp
dec
insl
imul
jb
in
fprem1
repnz
inc
out
push
ret
mov
lret
pop
push
and
inc
fucomp
push
jecxz
mov
in
xor
pop
mov
dec
or
lock
flds
clc
notl
mov
cmp
repnz
je
lds
sbb
cmp
rcll
mov
mov
jecxz
mov
incl
int
les
shlb
ljmp
adc
inc
cmp
pop
cmp
mov
dec
mov
sti
jb
lods
dec
punpckldq
es
enter
xlat
xchg
pusha
pop
dec
rcrl
mov
dec
movsl
xor
sbb
or
sbb
push
mov
fstl
push
xchg
lahf
popf
dec
mov
cmp
pop
mov
push
arpl
arpl
mov
lea
hlt
inc
adc
inc
in
push
sbb
dec
loope
dec
fildl
jae
lods
adc
sbb
cmc
faddl
cmp
je
or
aad
xchg
add
jns
sub
or
push
jecxz
jns
jg
xor
xchg
outsb
loope
and
mov
xor
sahf
inc
push
or
mov
outsl
mov
sahf
test
icebp
cwtl
fistl
mov
push
je
in
addr16
fidivrl
adc
push
lods
mov
mov
or
jo
repz
adc
ret
jl
dec
stc
xchg
adc
jge
push
mov
out
inc
jmp
jo
jg
xchg
mov
jns
pop
sub
jo
dec
jg
pop
mov
sbb
in
out
pop
sub
mov
stos
mov
pop
minps
popa
mov
scas
xchg
nop
outsl
sub
pop
adc
arpl
lahf
sbb
enter
mov
into
push
mov
es
sbb
shrb
pop
push
fwait
lahf
xor
cs
movntps
insl
sub
fstps
mov
sahf
outsl
or
dec
mov
adc
jmp
push
pusha
mov
push
mov
xchg
int
rcrl
push
jmp
pop
bound
loope
test
or
sbb
fwait
movsl
or
pop
addr16
cwtl
fs
cld
outsb
ret
xor
inc
mov
cmp
mov
fists
fildll
jnp
out
mov
jle
popf
hlt
adc
xor
mov
sbb
pop
jmp
adc
out
add
fcoml
aad
stc
push
fmull
sahf
mov
or
sbb
mov
jb
cmp
es
ret
movsl
aad
nop
xchg
cwtl
aad
repz
stos
jle
cltd
adc
and
aam
fiadds
std
jb
adc
lock
ds
mov
shl
aaa
inc
cwtl
std
sub
test
fmuls
push
in
pop
or
inc
cmpsl
inc
leave
add
rorl
out
inc
mov
sbb
outsb
adc
mov
movsl
or
stos
pop
loopne
in
xor
test
out
xchg
rcrb
popa
fstpl
adc
loop
add
imul
dec
testb
xor
es
jb
mov
cld
add
fildll
into
push
add
xchg
push
mov
pop
mov
cmp
int3
out
repnz
mov
movsl
cmp
lods
sub
fstp
pop
mov
push
jo
out
adc
cmp
xchg
sub
stc
ficoml
jle
ret
or
lahf
jge
and
fnstenv
and
ja
into
jae
xchg
in
loopne
jns
mov
add
cmp
mov
dec
inc
js
fisttpl
aam
outsl
cwtl
aaa
iret
pop
shl
fdivrl
scas
insb
lods
inc
push
mov
into
mov
test
aaa
sub
xchg
xchg
outsl
jns
inc
inc
push
int3
imul
mov
test
sub
mov
inc
mov
add
and
jmp
jns
adc
mov
dec
daa
xchg
adc
cs
mov
aas
jl
dec
in
stos
je
mov
inc
fwait
imul
cwtl
ljmp
xchg
adc
call
dec
sub
jg
adc
jmp
ficoms
inc
mov
inc
mov
cmpl
nop
int
inc
jbe
js
sahf
jb,pt
dec
mov
inc
pop
cmp
movsb
into
xchg
ljmp
mov
rcll
cmpl
fdivs
push
jecxz
pop
sub
negl
arpl
dec
loope
scas
daa
push
xchg
push
cld
or
push
scas
cs
push
shlb
jle
scas
loope
iret
cmp
negb
outsb
loopne
jbe
cmpsb
notl
sbb
in
xor
loop
add
ret
insb
sti
mov
notl
push
cli
ja
mov
out
and
aam
orb
das
jnp
push
outsb
cmp
cltd
test
sbbl
jae
pop
jmp
jmp
rclb
mov
and
sarb
adc
xor
xchg
mov
jns
aad
adc
xor
shl
and
jp
sbb
or
dec
stos
cld
pop
push
les
out
das
pop
mov
iret
stos
dec
pop
jae
adc
or
xor
in
in
sub
and
or
cs
add
and
xor
xchg
shll
mov
cmp
jae
push
lock
xchg
jp
scas
ror
cmp
movsl
jg
add
and
xor
cmc
in
inc
add
cmc
das
jne
ret
push
push
cmp
mov
xchg
sbb
adc
mov
movsl
sub
lea
push
cwtl
cmpsb
je
cli
lret
out
xor
ljmp
xor
mov
imul
mov
arpl
in
in
mov
push
or
push
jo
mov
stos
adc
repnz
mov
mov
rcll
shlb
push
fnsave
out
adc
add
push
imull
and
mov
xchg
or
sbb
test
adc
sub
pop
fildll
adc
das
frstor
lods
fistl
aad
cmp
pushf
int3
xor
out
test
and
int3
jbe
dec
pop
pushf
mov
push
aad
repz
rolb
and
cmpsl
dec
in
mov
test
testb
xor
fs
lds
mov
xchg
pop
or
push
mov
sub
mov
mov
popl
xchg
out
fsubs
dec
sbb
fcoms
out
jecxz
dec
cwtl
cltd
sub
or
mov
jge
in
push
popa
movl
bound
lea
lea
int3
dec
lret
addl
dec
outsb
lahf
rsqrtps
push
jb
in
or
inc
jbe
int
rol
loope
sub
ret
push
xor
ror
cmpl
clc
sbb
lcall
sbb
bound
add
dec
xchg
inc
xchg
aaa
inc
popf
mov
dec
rol
inc
and
sbb
jl
sub
or
add
or
stos
xchg
lahf
mov
add
cmc
subl
and
add
test
inc
in
adc
or
rcrl
and
add
test
dec
sub
jae
lret
adc
sub
mov
out
jbe
and
imul
cmpsb
mov
mov
mov
shrl
cli
cwtl
subl
xor
push
lock
push
sub
outsl
insb
mov
bound
repnz
dec
mov
mov
leave
lahf
sub
xchg
mov
call
dec
je
into
aad
xor
push
movl
add
std
mov
inc
ss
aas
mov
test
xor
es
aaa
pop
popf
cmp
leave
inc
in
push
hlt
shll
fdivs
mov
or
sti
test
mov
es
in
cmpsl
and
add
and
testl
cmp
insb
test
ss
iret
mov
add
xchg
dec
fimull
mov
cmp
mov
out
jle
or
jnp
and
add
inc
mov
jb
pop
xor
xchg
loope
mov
sub
inc
fildl
enter
je
mov
pop
jno
sub
shlb
repz
xchg
xchg
nop
inc
scas
pop
es
mov
fcmovnu
test
xchg
call
dec
jl
cmp
in
sbb
mov
sbb
sub
mov
xchg
mov
daa
xor
sbb
int3
inc
repnz
insl
out
fisubl
push
mov
push
mov
rclb
sahf
add
sub
mov
and
lods
lock
lcall
sbb
in
nop
lods
mov
xchg
xchg
lock
adc
pop
xchg
call
adc
inc
xchg
jb
je
lods
adc
scas
xchg
insl
or
mov
xor
dec
and
ret
nop
subb
lods
push
mov
fmuls
scas
mov
dec
ljmp
les
push
popa
inc
repnz
clc
mov
dec
aas
lea
roll
push
les
pop
cmp
jp
lahf
roll
out
std
mov
sbb
int3
sub
repz
out
shrb
cmpsb
sahf
dec
sbb
test
scas
push
and
shll
cltd
mov
pop
int
add
fidivl
sbb
pop
cmpsb
sbb
idivb
push
inc
dec
fdivr
mov
aad
in
or
xorl
xchg
mov
movsl
dec
dec
mov
rcl
popa
popf
xchg
fisubrl
and
stos
cmp
mov
mov
and
mov
mov
cmp
mov
xchg
test
xor
dec
mov
mov
fdivrs
xor
push
sbb
xor
aaa
mov
cmp
xor
push
scas
jo
mov
stos
cmp
add
movsl
jp
repz
mov
std
aam
bound
sbb
adcb
jmp
xchg
pop
inc
clc
xchg
out
stos
dec
mov
aam
mov
scas
lock
out
pop
repnz
dec
pop
xchg
cld
sub
shl
push
jle
mov
shlb
add
lret
into
cltd
add
cmpsl
popf
aas
fstpt
add
mov
adc
add
and
cmp
in
out
shll
adc
mov
add
dec
lods
sub
aaa
cli
aas
lahf
cmc
dec
or
pop
mov
cli
cmpsb
cmpsb
xlat
jg
dec
ror
dec
nop
enter
jnp
andl
jbe
out
add
mov
out
es
popa
mov
xor
rorl
lret
mov
je
mov
push
int3
push
and
adc
mov
ds
lret
orl
pop
dec
sub
pop
dec
insl
aad
pop
mov
decl
and
or
imul
aam
jle
aaa
mov
push
scas
sbb
mov
fmuls
loopne
jge
push
stos
sarl
repz
push
dec
adc
test
xor
inc
outsl
fnsave
int
jnp
pusha
xor
push
popa
xchg
xor
cmp
aad
mov
scas
cld
fs
mov
movb
adc
or
aam
loopne
sahf
or
mov
outsl
xchg
adc
pop
and
mov
movb
pop
dec
xchg
inc
cmp
sub
int
shll
mov
sahf
in
fucomp
leave
pop
sub
outsl
scas
data16
sbb
mov
jg
lods
mov
add
popf
popa
insl
scas
add
out
arpl
dec
stos
adc
add
mov
ss
dec
sub
dec
fldl
dec
lods
test
bound
cmpsl
push
add
out
daa
adc
sbbb
jne
std
mov
xchg
aad
cld
ja
push
icebp
push
jl
inc
sub
sbb
popa
aaa
jnp
add
pusha
mov
push
xchg
mov
ficomps
imul
aas
fwait
out
ds
lds
ss
mov
adc
imul
mov
dec
jne
bound
pop
test
push
pop
sub
mov
jle
xchg
mov
addr16
mov
fsubl
imul
cmpsb
insb
sbb
aad
push
decb
test
mov
pop
mov
push
enter
ljmp
inc
mov
adc
jns
pop
stos
pop
xor
xchg
inc
mov
lea
ret
cltd
roll
lret
mov
sbb
aaa
je
adc
lds
inc
js
imul
cwtl
mov
inc
lods
dec
cmp
xor
int3
adc
or
lods
in
mov
jne
cmp
rolb
sub
jo
add
xchg
fdivl
jl
mov
cmpsl
fsubrs
jl
jb
xchg
pop
mov
xchg
decl
std
loopne
lahf
mov
mov
push
popa
sahf
dec
leave
pushf
jmp
cmc
xlat
dec
sub
mov
xor
arpl
pop
cmp
pop
push
rcr
bts
ja
gs
inc
dec
xchg
repnz
inc
or
inc
cmp
insb
imul
xor
mov
jl
fdivs
inc
mov
stos
shrl
loope
lahf
xlat
clc
fdivl
dec
pop
in
mov
add
sbb
jecxz
shll
cmp
mov
popa
sub
fldl
pop
sbb
sbb
cwtl
mov
adc
aad
inc
pusha
lods
bound
mov
add
mov
pop
loope
xor
pop
imul
lock
or
jns
jae
sub
pop
push
test
sbb
mov
pop
xor
shl
adc
mov
outsb
dec
or
mov
imul
jl
inc
pop
and
jbe
push
arpl
cld
inc
cmc
jno
rorb
iret
push
psadbw
adc
push
sti
lods
mov
or
push
idivb
cmp
push
outsl
xchg
mov
loopne
mov
inc
xchg
ljmp
adc
mov
mov
cmp
dec
xor
add
push
inc
out
js
je
cmp
add
sti
in
mov
mov
loop
push
sub
ljmp
jae
fisubrl
lret
stos
xor
xchg
movsl
rol
push
in
add
mov
fidivrl
or
jns
fmull
push
pop
cmpsb
js
cmpsb
xchg
add
je
ss
xor
cmpsb
enter
push
xchg
int
fldl
imulb
ret
push
sbb
daa
push
jne
jnp
in
mov
cli
je
push
mov
xor
jl
push
std
mov
out
add
cmc
fiaddl
jo
out
pop
add
addr16
add
xchg
inc
aam
xchg
ret
lret
cltd
pop
int
sbbb
xor
inc
xchg
subl
inc
cmp
xor
clc
mov
pop
inc
dec
add
adc
ljmp
arpl
dec
std
mov
mov
inc
inc
pop
push
jb
scas
xor
adc
aas
jp
mov
jno
popl
js
arpl
pop
and
mov
push
push
jbe
rclb
inc
jp
shrl
push
cmp
xor
xor
aaa
or
arpl
movl
push
popf
jl
ljmp
notl
fwait
push
lcall
andb
pop
dec
fwait
inc
push
mov
fnsave
sub
and
out
xchg
mov
cmp
stos
fldcw
cld
in
sub
lods
mov
sub
je
push
ret
push
pop
outsl
jo
out
iret
incl
inc
adc
shlb
xor
fld
lods
cltd
sbb
aam
popl
in
ret
mov
jno
fisubrs
pop
sbbb
arpl
sbb
mov
or
push
rcrb
insb
inc
lods
inc
mov
icebp
mov
or
test
mov
cmp
push
pop
nop
scas
lcall
inc
ret
lret
gs
add
push
jg
sbb
pop
sub
dec
adc
clc
push
or
lods
or
xchg
fdivs
pop
clc
lea
in
mov
test
movsb
sbb
aas
xchg
je
fldl
jbe
fsubs
and
adc
jbe
xchg
stos
and
nop
cld
mov
adc
in
jo
mov
pop
sub
cwtl
aam
pop
cmp
push
das
jns
out
push
imul
sub
lea
push
inc
mov
jo
jno
fwait
adcb
loope
imul
fdivrl
out
fldt
ja
leave
fs
push
sub
pop
lcall
pushf
test
mov
push
pop
pop
push
push
or
sub
mov
lds
in
mov
pop
mov
ret
pusha
sub
test
dec
test
repz
jge
lods
mov
leave
mov
sub
sbb
push
pop
scas
sarb
mov
in
pop
inc
jmp
inc
cmp
cld
test
jmp
mov
sti
dec
xlat
mov
sbb
es
jne
add
pop
mov
sbb
dec
dec
pusha
or
test
push
mov
mov
or
cmp
clc
das
daa
loopne
adc
pop
cli
or
xchg
jbe
sbb
loop
push
in
pop
filds
into
inc
or
mov
outsl
iret
ss
movsb
jne
bound
addr16
and
mov
lcall
xchg
mov
jle
pop
leave
mov
inc
inc
push
cmp
fisttps
aam
rcrl
out
pop
dec
daa
xor
lret
pushf
dec
in
xchg
rcrl
pop
addr16
dec
and
fwait
inc
dec
js
dec
sti
jo
inc
mov
insl
xchg
sahf
sub
dec
mov
imul
ljmp
outsl
lods
sbbl
dec
fstl
ja
push
inc
sbb
roll
pop
psubsb
stos
divl
push
mov
mov
pop
outsb
xchg
cmpl
push
pop
pusha
aas
js
in
pop
pop
inc
and
pop
dec
icebp
aad
dec
jle
rcr
movsl
mov
jns
out
cmpsb
scas
or
mov
push
cltd
sub
lcall
xor
pop
test
mov
inc
mov
movsl
jo
iret
jno
aaa
sbb
sub
scas
dec
jecxz
call
xchg
movsb
inc
or
je
cltd
mov
pop
ss
shrl
lret
jbe
nop
int
nop
dec
outsb
lret
jno
ret
cmp
ss
push
fwait
jmp
fs
sbb
fld1
out
ja
adc
and
or
mov
ss
mov
rcrl
clc
test
jecxz
in
push
sub
dec
add
out
pushf
mov
push
mov
or
and
idivl
cmp
adc
cs
shlb
out
lds
leave
xchg
sub
sub
into
insl
imul
test
inc
mov
mov
push
outsl
ja
add
popa
xchg
and
mov
outsl
xchg
popa
xchg
mov
push
and
add
js
ret
pop
cmpsb
lahf
pop
iret
cltd
insl
jmp
dec
push
notb
stc
ja
dec
dec
hlt
enter
mov
cmpsl
dec
rcrl
les
cmp
ljmp
scas
lcall
adc
inc
cmp
jne
cmp
or
popa
jne
sub
in
aad
ljmp
xchg
mov
daa
cld
xchg
mov
rcrl
mov
push
shlb
xorl
inc
jns
shll
push
aad
iret
push
push
dec
rorl
adc
ds
jmp
cli
out
in
push
aad
jge
cmp
push
mov
in
flds
jg
mov
test
dec
sub
inc
fmull
xchg
jp
jmp
ret
cmp
rcrl
scas
push
das
xlat
and
scas
or
cs
push
and
ds
shlb
std
callw
mov
std
inc
and
fsubp
xchg
jmp
pusha
dec
inc
pop
cld
mov
movsb
shlb
cs
cmp
loopne
sbb
test
push
cmp
push
add
sub
std
jno
addb
insl
ret
mov
in
sub
sub
or
cmp
cmp
lea
subb
push
out
ret
mov
mov
nop
push
fdivrl
jae
cmpsl
push
pop
cmp
leave
outsb
pusha
rcl
test
xlat
adc
xor
fxch
mov
adc
pusha
data16
cld
pop
leave
pop
fidivrl
out
dec
add
loope
out
imul
push
stos
je
popa
std
cli
in
mov
call
adc
imul
fistl
and
insl
jmp
hlt
iret
repnz
push
fdivs
ss
pop
dec
inc
cmpsb
lods
nop
fsubl
push
insb
loopne
xlat
int
sti
pushf
mov
xchg
into
jg
jnp
push
dec
mov
cs
lock
push
mov
inc
test
cmp
or
xor
push
loope
sbbb
nop
mov
mov
ja
daa
popa
or
cld
fmull
out
test
or
jecxz
movsl
outsb
fimull
or
add
test
pop
cmp
jmp
inc
cmpsl
jae
xor
or
xchg
xor
jb
movsl
push
mov
lds
fs
mov
in
mov
fldenv
jmp
cmp
xor
xor
add
and
jp
mov
outsl
test
in
test
shr
lds
icebp
mov
adc
or
ds
sbb
pop
mov
cmp
add
and
outsl
dec
or
sub
lcall
mov
sbb
xchg
adcb
lret
adc
icebp
imul
mov
add
int
adc
mov
imul
sar
stc
mov
in
mov
filds
pop
sti
out
dec
test
add
mov
mov
ljmp
jbe
je
pop
pop
loop
inc
mov
in
pop
cmp
imul
shlb
rcr
test
cmc
mov
push
sbb
sub
stc
cmp
sub
stos
push
fcmovu
lock
mov
in
and
adc
push
add
jmp
sub
gs
or
bts
daa
mov
repz
cmp
pop
cld
and
cwtl
adc
add
jmp
std
sub
shr
push
and
lcall
xor
cmc
cs
out
push
call
shlb
ret
sti
pop
lahf
push
add
mov
jmp
jbe
lret
push
in
scas
push
cld
ja
adc
pop
xchg
xchg
jl
into
pop
es
bound
arpl
mov
shlb
xchg
dec
mov
pop
lods
cmpb
daa
lret
int
fidivrl
mov
movsb
cmpsl
push
jne
js
xlat
and
mov
int3
jb
xor
xchg
and
sbb
xlat
out
rcrb
into
jb
dec
add
mov
popf
xchg
adc
dec
stos
hlt
jge
lret
out
vmread
mov
sbb
mov
mov
mov
push
rolb
mov
insb
mov
cmp
or
cld
and
jge
out
loopne
push
lods
push
loopne
cld
test
jle
enter
xchg
jmp
test
hlt
jne
xchg
inc
pop
jo
fsubrs
jnp
inc
aaa
or
sbb
fcmovne
jecxz
add
sar
xlat
jnp
and
stos
jb
jmp
ljmp
push
mov
pusha
pop
pop
xor
cs
adc
movsl
push
xor
push
cs
sbb
and
lahf
jp
mulb
mov
mov
insb
jbe
test
xchg
lret
es
jae
iret
idiv
rol
xchg
push
stos
push
call
test
cmp
jecxz
push
push
pop
push
mov
xor
lcall
loop
lea
cmp
shrl
and
cmp
dec
cwtl
dec
sub
into
adc
dec
cmp
ss
pop
xchg
and
pop
test
pop
pop
or
xchg
or
sbb
mov
movsb
lods
jecxz
fisubs
ljmp
jno
dec
inc
std
mov
mov
inc
jns
sub
out
adc
pop
and
sbb
pop
mov
jecxz
test
xor
mov
mov
cmp
test
scas
les
jp
fs
mov
icebp
pop
xor
xchg
sahf
out
mov
mov
jmp
dec
jne
sbb
fucomi
or
lock
fnstenv
dec
lahf
mov
iret
jns
es
jb
pushf
fmul
daa
leave
jns
sti
cmpsl
push
negl
pop
mov
push
jno
push
leave
add
cltd
sub
enter
ss
jp
mov
push
xchg
push
jns
je
push
xor
test
jns
lds
xlat
fnstenv
xchg
mov
fwait
xchg
mov
cmp
adc
loope
test
dec
test
mov
subl
outsl
inc
rolb
mov
and
scas
out
dec
xchg
loopne
inc
fisubs
mov
mov
mulb
sti
inc
inc
shrb
sbb
arpl
or
add
or
jae
jecxz
and
inc
inc
mov
inc
jnp
push
mov
pop
push
adc
test
inc
or
or
ljmp
push
repnz
movsl
push
sbb
mov
inc
adc
dec
testb
fstpt
mov
shl
outsl
jbe
dec
inc
xor
dec
call
test
pop
shll
inc
lods
scas
mov
push
test
cmc
dec
lcall
ret
mov
iret
rolb
xor
dec
out
dec
ret
hlt
cmp
pop
xor
adc
push
mov
lds
and
scas
and
push
shl
pusha
dec
je,pt
pop
stos
push
xchg
cs
sub
bound
rcr
mov
inc
push
leave
daa
les
xchg
popa
mov
das
jbe
ret
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
inc
sbbb
jnp
arpl
adc
clc
std
test
clc
repz
mov
fisubs
cmp
fcmovnu
push
add
inc
add
scas
inc
or
aas
add
dec
mov
aaa
scas
mov
mov
cmp
mov
test
mov
aam
push
sbb
outsb
out
loope
jg
icebp
pop
int
jne
xor
popa
sbb
xor
xbegin
lods
adc
es
push
mov
jge
mov
test
shrl
mov
sbb
shll
xor
cmp
mov
ljmp
adc
jmp
pusha
push
jle
cld
and
xchg
scas
lahf
mov
sti
adc
aam
pop
cmp
test
mov
fwait
sbb
and
mov
mov
adc
outsl
mov
push
mov
jg
ss
jg
adc
push
cmp
fnstenv
gs
jnp
mov
in
stc
mov
shrb
sbb
loop
dec
sub
lret
bound
imul
aas
inc
inc
inc
pop
mov
add
in
jmp
mov
inc
outsl
xorl
adc
jne
xor
subl
arpl
jnp
fnsave
xchg
movsl
xchg
sub
mov
out
aad
dec
in
rorl
xchg
mov
movsb
xor
xchg
push
xchg
cltd
aaa
repz
xlat
lock
adc
arpl
jo
lea
fwait
cwtl
dec
lahf
mov
outsl
adc
inc
add
inc
aas
loop
test
cmc
mov
inc
add
inc
or
out
enter
movsl
clc
xchg
adc
enter
xchg
out
in
mov
cwtl
add
and
adc
outsb
sub
add
rclb
mov
cmp
out
imul
test
shll
mov
mov
mov
jp
and
mov
out
out
shll
inc
lret
inc
lods
lcall
pop
cmpsl
shrb
mov
sbb
xor
in
dec
adc
fistpll
in
clc
cmc
jl
inc
shl
add
inc
in
jno
mov
test
add
jge
push
test
xbegin
fldenv
outsl
ret
aam
xchg
pop
into
or
jno
xor
inc
xchg
inc
sbb
jbe
sbb
mov
sbbl
cmpsl
mov
in
push
mov
mov
add
into
jae
xchg
cmp
add
add
jno
insl
xchg
scas
cmpsl
out
dec
mov
pop
pop
cmc
iret
adc
mov
loop
push
cmc
xchg
gs
imul
jbe
sahf
sub
mov
popa
fwait
call
adc
push
inc
and
sub
outsl
decb
enter
lret
outsl
inc
mov
xchg
iret
or
mov
mov
pop
pop
subps
add
or
inc
ficoms
nop
andnps
jge
stc
xchg
add
sbb
icebp
inc
dec
ret
or
push
pop
insb
add
sarb
and
mov
cmp
xor
adc
pop
sti
ret
subl
mov
out
lcall
int
mov
lock
popf
sar
scas
arpl
aam
mov
sahf
mov
add
jge
add
hlt
and
or
outsb
andb
aas
cmp
add
subb
jbe
mov
inc
inc
jle
pop
jl
pop
push
std
and
fwait
adc
or
pop
adc
cmp
push
je
sbb
std
mov
das
fcmovnbe
jns
mov
push
stos
jge
and
cmpsl
push
xor
lods
test
scas
or
xchg
rcrb
xchg
add
insl
in
jbe
push
inc
ljmp
adc
aas
xchg
enter
mov
pop
es
or
push
loopne
adc
test
rorb
jle
mov
sub
shlb
aaa
andb
ret
rorb
sbb
push
pop
daa
add
xor
dec
sbb
and
or
inc
add
dec
repnz
and
popl
rcrb
pusha
imul
push
mov
mov
pop
popa
xorl
jecxz
ret
adc
sub
dec
push
sbb
movsl
jg
sbb
mov
test
addl
jmp
les
dec
jo
jp
adc
jge
mov
inc
fcompl
or
stos
mov
cld
out
pop
scas
adc
push
lods
ljmp
dec
loope
add
ficompl
pextrw
nop
or
fs
in
out
mov
lock
ja
popaw
mov
daa
push
adc
insb
xorl
add
cmp
xor
lock
insl
rcrl
pop
push
lea
sub
add
es
inc
adc
iret
mov
lock
stc
lret
xor
ficompl
iret
std
dec
pop
push
decl
aaa
xchg
xchg
loop
add
pop
xchg
hlt
jo
rcll
dec
ret
hlt
das
xchg
icebp
and
call
leave
and
pop
cmp
jbe
mov
arpl
je
lods
pop
or
or
test
out
cmc
fidivrs
inc
add
out
add
cltd
in
add
adcb
shl
rorb
imul
sbb
push
insb
sbbl
fwait
ret
movl
pop
ljmp
xor
dec
pop
hlt
xor
mov
lret
push
jb
shl
sbbl
pop
xchg
sbb
push
mov
add
xchg
out
and
xor
les
mov
cmp
dec
lods
add
jg
adc
fwait
cwtl
mov
inc
test
mov
subl
mov
repz
dec
jmp
cmc
pop
test
ror
pop
cwtl
pop
int3
sbb
jae
cmp
fsubrl
test
das
rcrl
dec
mov
js
jp
or
cmpsl
xchg
in
out
mov
mov
sbb
mov
shl
and
fmull
and
pop
push
push
mov
faddl
and
fsub
std
push
adc
loop
popa
adc
test
shll
pop
js
popa
movsl
inc
jmp
mov
roll
mov
ret
mov
cmp
shll
rcrb
mov
add
into
cmp
out
cmpsl
mov
jl
sbb
pop
xor
mull
dec
fstpl
dec
push
std
mov
pop
hlt
sub
mov
call
sbbb
and
js
mov
nop
xor
jl
scas
cmpsb
push
js
loopne
les
cltd
pop
fidivs
popa
mov
sarb
ja
push
dec
pushf
and
rcll
aam
movsb
sub
mov
insl
or
jecxz
scas
and
jge
outsb
add
xlat
in
sbb
xor
stos
movsb
sbb
rorl
mov
jae
push
shlb
data16
cmpsb
sti
hlt
pop
mov
and
sbb
jg
push
jo
lcall
in
jg
xor
and
mov
xchg
xor
insl
lea
xor
repz
aaa
sti
mov
sub
or
pop
cmc
inc
or
cmp
xor
xor
fdivrs
rcrb
inc
lahf
or
mov
ss
mov
mov
pushf
and
and
push
push
and
dec
jno
jp
mov
sub
push
jae
dec
mov
ficoms
mov
je
ret
jp
or
sub
sbb
gs
inc
pop
fisubrs
fidivs
iret
scas
data16
xor
dec
leave
pop
sbb
lds
movsb
repz
mov
mov
shll
sub
sub
aam
test
pop
sub
adc
sbb
jns
iret
mov
in
mov
adc
lock
mov
sub
mov
outsb
aad
mov
inc
cmp
scas
repnz
scas
les
add
mov
mov
cmp
push
push
lret
or
jecxz
aas
push
dec
fldcw
push
das
out
test
les
pop
in
cmpb
mov
inc
and
invd
loopne
test
mov
icebp
sub
cmpsb
shrb
aas
cmp
mov
outsl
rolb
mov
inc
xchg
mov
cld
cmp
stos
hlt
xchg
sti
in
jle,pt
xorl
das
stc
leave
inc
push
out
or
je
or
mov
or
test
outsb
xchg
jbe
loope
sub
movsb
jb
jg
bound
xor
pop
adc
mov
jmp
or
and
dec
inc
jo
and
into
int
daa
paddsb
leave
call
scas
push
xor
arpl
cmp
inc
scas
cmp
repz
lock
xchg
std
jl
jb
sbb
ss
out
xchg
jl
cmp
jbe
inc
ficompl
in
cmp
repnz
push
or
xor
jae
testl
pushf
bound
xchg
ja
outsl
or
sbb
or
mov
and
shl
stc
rcrl
out
iret
cmp
push
jmp
mov
mov
pop
outsb
lea
testb
je
mov
pusha
xchg
mov
xor
push
repnz
dec
mov
or
pop
lds
sbb
stos
pop
pushf
or
ret
jns
or
mov
repnz
xor
in
mov
out
sub
jae
adc
out
add
aaa
lret
sbb
add
addr16
and
call
inc
mov
enter
sbb
leave
lahf
int
push
push
adc
push
nopl
and
lret
sbb
push
std
cld
mov
sub
scas
pusha
dec
das
jmp
nop
test
movsb
adc
cmp
das
xchg
pop
lea
or
lahf
pop
mov
int3
inc
cmpsl
sbb
add
dec
pop
es
lret
pop
sub
lock
sbb
or
push
enter
xlat
sub
sahf
mov
or
xor
mov
sub
outsl
fwait
test
xchg
popf
adcb
sub
xor
jmp
out
lock
jmp
scas
jo
jb
push
pop
fisttpl
lahf
call
dec
add
sahf
sbb
iret
xchg
jnp
adc
adc
adc
adc
cmpsb
push
mov
adc
cmp
mov
add
les
loop
fnstenv
xor
sub
dec
jmp
mov
add
test
cltd
xchg
movsl
push
clc
dec
push
pop
sub
lods
push
xorl
xor
or
mov
jae
mov
xchg
sarl
mov
shl
xchg
test
pop
rclb
xor
insl
ljmp
inc
out
pop
mov
iret
fldl
gs
adc
xchg
daa
jne
dec
iret
mov
shll
add
sub
sbb
push
test
mov
out
mov
insl
push
xor
mov
ror
or
mov
jg
mov
adc
dec
out
mov
sub
push
pop
mov
lods
push
test
jae
sub
test
clc
iret
cmp
lret
mov
out
pop
gs
sti
sahf
mov
pop
dec
out
jnp
pop
or
mov
sti
rclb
inc
gs
out
mov
sbb
mov
arpl
ffreep
mov
imul
inc
push
daa
lahf
cmp
pop
or
xor
leave
sbb
jmp
outsl
in
push
cmc
dec
adc
xor
xchg
movsl
repz
rclb
xor
arpl
sbb
stos
int
sbb
push
dec
dec
dec
add
sbb
cmc
push
pop
and
mov
pop
stos
cmp
mov
ja
inc
jbe
shl
in
int3
das
push
mov
jp
push
ljmp
sar
mov
cmp
mov
paddb
xor
loope
inc
fs
mov
lcall
xlat
fisttpll
mov
add
jno
int3
fcomi
into
push
push
into
xor
sarl
outsb
mov
jb
jb
or
jle
mov
cmp
jno
mov
call
bound
push
xor
in
sub
xor
xchg
or
jne
cmp
xchg
push
out
jb
jle
sub
or
xchg
cli
pop
cmp
in
repz
inc
aaa
ficompl
inc
dec
cli
push
and
sti
je
test
stos
sbb
mov
xchg
lock
scas
in
and
addl
mov
add
addr16
or
pop
push
cmp
jo
hlt
loope
mov
xor
lahf
cmp
dec
cld
jne
rclb
inc
in
or
mov
fcomps
lret
ss
aaa
daa
sbb
mov
or
mov
sub
inc
jae
xchg
cltd
test
adcb
std
fcomps
fldcw
jl
icebp
lock
enter
sbb
es
mov
jmp
inc
xor
mov
or
clc
lret
arpl
dec
xor
gs
mov
or
adc
call
loop
in
mov
aad
loop
aas
daa
and
adc
pop
jbe
cmp
int
addl
stos
mov
fistps
call
cs
xchg
mov
pop
bound
or
jecxz,pt
adc
pop
mov
mov
xchg
std
movsb
mov
rclb
sub
mov
cld
pusha
push
call
jl
popf
shrl
push
sbb
xor
push
fdiv
mov
cld
fwait
out
outsb
adc
cmpb
fwait
in
testb
push
sbb
test
daa
loope
sbb
inc
jg
jbe
add
repz
adc
aaa
and
stc
or
inc
pusha
int
repnz
hlt
inc
aaa
les
jno
fstps
pop
daa
in
imul
fistpl
cmc
shlb
rcl
mov
popa
mov
int
mov
bound
xchg
cmp
or
ret
add
sti
push
dec
mov
in
orb
mov
ror
cli
inc
out
loopne
push
les
dec
mov
andl
xchg
mov
shl
xor
push
inc
add
or
bound
or
dec
push
loope
in
pop
aam
xchg
xor
jae
push
push
mov
xchg
adc
lret
data16
sahf
test
std
das
out
pop
cltd
jecxz
jbe
adc
cli
jb
sbb
lret
mov
js
inc
and
lods
fcmovne
repz
je
sarl
xchg
push
or
pushf
cltd
je
outsl
arpl
insl
push
jne
fmuls
dec
and
and
push
push
jl
sub
fucom
bound
jg
push
test
lcall
jae
sbb
and
dec
jno
sbb
adc
xchg
mov
rolb
jbe
loopne
mov
hlt
dec
add
pushf
movsl
xorl
xor
pop
stos
mov
mov
loope
mov
lods
jno
daa
in
pop
lds
push
movsb
scas
push
in
jp
inc
pop
xchg
cmc
mov
push
cld
lods
mull
mov
int3
lods
in
jge
es
mov
mov
xchg
shrb
xchg
stos
fldenv
or
cmp
sub
or
jns
mov
ds
push
push
xlat
pop
push
icebp
imul
std
sbb
dec
fcmovbe
jbe
dec
pop
lods
lret
aad
ds
cltd
cltd
fcom
insl
lret
mov
sub
dec
push
and
and
addr16
push
lods
cmp
sub
mov
fdivl
dec
xor
or
cmp
jmp
sti
das
inc
lods
repz
bswap
pop
lea
hlt
cmp
mov
fstpt
jge
sbb
add
stos
loop
add
pop
or
push
or
or
repz
lcall
cmc
iret
mov
pushf
shlb
sbb
mov
fwait
dec
ficomps
push
jl
ljmp
xor
or
fcoms
lods
push
and
mov
out
cs
fiaddl
imul
sub
push
imul
xchg
sbb
sub
enter
adc
sbb
xor
push
rorb
cmpsb
stos
in
das
pop
out
xchg
or
movsl
lds
jbe
push
adc
adc
sbb
popa
aaa
adc
push
int3
sbb
mov
xchg
xchg
lret
xchg
arpl
mov
lcall
jp
and
inc
leave
xor
aam
daa
stos
or
lods
scas
mov
hlt
out
ss
les
testl
mov
gs
push
pop
fcmovnb
mov
adc
pop
mov
outsl
pop
mov
into
jo
xor
testl
mov
mov
ljmp
adc
ret
xchg
inc
push
cmp
into
test
mov
xchg
pop
jno
sub
arpl
jge
sbb
ljmp
mov
jne
push
dec
add
add
ret
jo
out
stos
imul
enter
lods
shl
sub
sbb
iret
nop
xor
data16
into
in
mov
call
sub
cwtl
lret
test
xchg
jecxz
dec
cltd
jnp
dec
adc
pop
mov
adc
pop
mov
xchg
inc
or
mov
pop
dec
movsb
xchg
cld
aam
or
andl
sbb
jge
add
fisubl
mov
dec
adc
or
dec
cmpsl
repnz
loope
test
stos
xor
xchg
enter
or
push
sahf
mov
shl
test
repz
lcall
mov
add
sbbl
mov
in
test
outsl
cmp
shrl
fstpl
or
push
icebp
mov
jnp
out
add
inc
xchg
mov
repnz
imul
dec
shl
movsl
add
jo
adc
out
insb
inc
jl
daa
cmp
mov
or
or
push
aas
cmpsl
jb
adc
pushf
fdivr
loope
pop
xchg
push
inc
fbstp
stos
sbb
cmpl
int3
div
notb
pop
or
mov
pop
jbe
pop
push
xchg
cld
iret
enter
in
cld
cmp
pusha
movsl
cmpsl
repnz
fwait
and
insl
cmc
fidivrs
psllw
stc
cld
ret
jbe
sub
cld
or
notb
push
pop
jl
icebp
outsb
out
push
sbb
mov
cmp
or
stos
add
mov
dec
adc
sbb
mov
fnstcw
inc
push
cmp
mov
les
int
popa
xchg
hlt
popa
outsl
in
testb
pop
jb
xchg
sti
sub
cmpsl
arpl
push
pusha
shlb
adc
cld
xchg
ds
gs
cmpsb
jae
pop
rcrb
and
mov
aad
ljmp
mov
les
mov
out
jne
xor
sbb
fisubs
test
adc
mov
fiadds
rcr
add
data16
stos
loopne
sti
mov
dec
jmp
shr
das
adc
mov
push
ds
fnstsw
out
in
push
dec
mov
sub
outsl
jo
dec
push
lea
add
mov
dec
popf
ja
jne
mov
hlt
scas
and
push
or
jmp
xchg
in
push
loope
test
jbe
ret
in
les
popf
pop
mov
iret
inc
dec
aad
test
data16
mov
ja
jo
cmp
adcl
pop
jle
mov
scas
xor
shrl
imul
or
jle
sbb
cmp
cli
add
sbb
adc
idiv
xlat
push
shll
or
cmp
lret
movb
cmpb
or
popf
cmp
fstp
outsl
ret
xchg
sarl
pushf
lret
repnz
hlt
mov
mov
sub
loope
in
sub
pop
das
or
imul
jle
je
in
nop
mov
fstl
adc
and
pop
and
shlb
je
shrb
cmp
jno
scas
add
mov
jmp
jne
jno
fmull
push
or
xchg
pop
gs
and
popa
cwtl
inc
jb
pop
push
sbb
or
in
ljmp
in
pushf
push
dec
adc
cld
and
jnp
and
leave
dec
loope
jno
sub
popa
jg
into
pop
fiaddl
jae
cmpsb
cmpb
push
sbb
mov
pop
cmpsb
add
inc
mov
jb
jb
lret
fwait
cmp
in
cmp
jns
pop
push
jne
mov
fistl
jo
test
and
lcall
jle
dec
clc
cmp
out
dec
test
sbb
pop
mov
cli
mov
out
inc
mov
jno
out
adc
sbb
mov
jecxz
xchg
in
pop
aad
mov
push
xorl
sub
mov
cwtl
aam
cld
dec
add
mov
add
sbb
repnz
js
fstpl
stos
and
pop
mov
cltd
roll
dec
out
fnstcw
mov
push
aas
adc
adc
and
ss
jle
fmul
btc
pop
xchg
cmp
and
es
mov
bound
cli
adc
inc
insb
lcall
xor
call
jns
ljmp
mov
pop
xchg
fwait
push
loop
mov
jecxz
adc
pop
loope
sub
std
lea
in
pusha
sub
cmp
out
push
mov
je,pt
std
mov
lcall
inc
mov
lods
stc
add
adc
sbb
or
jne
lea
jle
push
jae
inc
out
daa
xor
addr16
fldenv
pop
out
dec
mov
shl
mov
pushw
jge
aaa
addr16
mov
xchg
icebp
loop
xchg
dec
nop
fnsave
cmp
inc
mov
push
mov
adc
pop
mov
mov
jb
popa
imul
ja
xor
mov
mov
push
in
sub
or
je
and
pop
push
sbb
stos
pop
adc
pushf
dec
cmp
movsl
lock
sub
xor
test
ficoml
loop
mov
rcll
sbb
arpl
fwait
cmp
push
ss
stc
movsb
imul
mov
leave
jns
fninit
or
cmp
push
lahf
ljmp
lds
enter
dec
xchg
daa
push
outsl
fldt
inc
pop
movsl
fwait
lock
add
cmp
cmpsb
test
ljmp
cli
clc
icebp
or
lock
jno
into
and
jmp
pop
dec
jl
mov
mov
inc
xor
push
inc
jbe
sbb
push
cmpsb
fcoms
dec
pop
mov
cld
popa
add
or
and
pop
fdivs
xchg
mov
daa
jne
lods
outsl
adc
dec
or
pop
mov
mov
jae
cmp
lea
mov
aas
cltd
and
insb
xlat
pop
stos
xlat
out
xchg
cmp
inc
mov
rcr
pop
movb
jnp
in
hlt
out
loopne
sub
inc
push
sti
into
push
push
jg
pop
add
push
ss
cltd
fmull
mov
js
jmp
mov
and
ss
pop
jae
pop
popa
cmp
cmc
in
movsl
lods
out
cmp
shrl
and
clc
add
iret
cmp
aad
ds
arpl
jb
xchg
aaa
das
out
iret
sti
fs
cwtl
jbe
test
dec
jno
and
xor
lret
test
loop
cmp
les
sbb
cmc
add
icebp
pop
push
add
ds
stos
popf
push
lock
pusha
lods
sar
fcmovne
cld
roll
xor
jl
push
jle
and
ja
pop
test
data16
mov
mov
mov
aad
jmp
negl
xchg
xchg
es
movsl
dec
adc
adc
mov
jp
push
or
out
or
cld
xchg
cli
lods
sub
fstps
cmp
repnz
call
decl
in
mov
lcall
mov
outsl
out
adcb
or
aam
sbb
jns
cmp
adc
pop
test
jo
lret
ds
push
sub
jo
pop
insb
xor
sarl
jne
push
sub
adc
pop
xchg
add
loope
outsb
insl
bound
adc
loop
cmc
cli
xor
add
incl
xchg
div
test
dec
mov
fisubl
or
mov
fistps
sti
addr16
in
pop
mov
scas
dec
xor
pop
add
xor
add
inc
push
or
lahf
lods
inc
fmull
xor
xor
add
aaa
dec
fs
cmp
int3
mov
mov
xchg
jmp
push
cmc
lret
dec
pop
scas
and
mov
pop
dec
and
fmuls
cltd
mov
std
popf
ficomps
cmp
cmp
lahf
into
push
mov
cld
fwait
ljmp
je
push
push
push
sub
inc
fcmove
lock
xchg
icebp
notb
fsub
and
pop
adc
testl
dec
insl
into
insb
jle
fiaddl
in
mov
cmp
stos
les
rolb
movsw
roll
xchg
xor
adc
or
arpl
shll
pop
push
shl
or
cmp
push
jne
aam
addr16
mov
ret
gs
mov
scas
mov
xchg
loopne
mov
xchg
mov
fistps
or
outsb
xor
mov
sub
mov
push
fldcw
xchg
mov
fwait
rep
push
xor
mov
mov
inc
ss
imul
sbb
cmp
stos
xor
xchg
xor
stos
xor
out
adc
and
mov
mov
dec
cmpsl
cmpsb
push
mov
scas
mov
push
sub
repz
adc
ja
push
mov
sub
jb
cwtl
adc
scas
jnp
mov
and
cmpsl
mov
in
aad
or
ja
jbe,pn
cmpsl
pop
jmp
subb
insb
js
add
hlt
push
bound
push
push
xchg
aaa
shlb
loopne
sbbl
lods
cmp
fstpt
adc
test
push
test
lret
sbb
pop
in
pop
mov
sub
icebp
and
pop
mov
adc
push
call
mov
mov
rcrl
jmp
clc
xchg
mov
lea
lock
sbb
arpl
push
in
daa
sbb
xor
push
pop
add
pop
xchg
jo
out
test
mov
lret
adc
push
fnstenv
rorb
scas
ret
xor
cmp
dec
push
rcrb
les
test
mov
dec
push
shlb
mov
cmp
jns
and
loope
cmpsb
jmp
xor
mov
inc
push
cmpl
or
inc
in
adc
sub
es
data16
mov
pop
into
out
lret
jmp
aad
mov
xor
in
jns
test
adc
lds
adc
sarb
push
xchg
lods
cmpsl
mov
dec
xor
add
cwtl
jns
clc
in
arpl
test
test
mov
and
mov
stos
cld
inc
out
push
stc
sbb
sub
push
lods
lret
leave
pop
lea
out
lcall
or
ret
ret
push
outsb
roll
repnz
inc
adc
xor
incl
mov
sahf
xor
xor
xchg
lea
shll
xchg
cmc
adc
imul
fwait
mov
xchg
push
daa
cmp
and
cmp
add
inc
jb
aaa
lcall
aaa
js
xchg
cmp
lea
leave
mov
mov
cmp
movb
daa
sbb
or
enter
dec
or
loope
dec
lods
sbbl
push
xor
out
dec
cmp
dec
sub
jnp
sbb
enter
push
mov
or
pusha
adc
xorl
aam
or
movsl
ljmp
sbb
sahf
or
aam
add
push
pop
mov
cmc
pop
or
mov
xchg
push
sbb
imull
in
arpl
cmp
fdivl
in
cmc
int
mov
push
mov
add
ret
inc
in
cld
adc
mov
cmp
imul
sahf
mov
adc
cmpsb
iret
push
adc
pop
outsb
adc
add
into
inc
inc
imulb
pop
and
filds
push
mov
js
xchg
rcrb
xchg
mov
or
fcmovb
and
test
sub
bound
stos
sbb
cmc
loope
xchg
aas
xchg
add
loope
ret
adc
pop
cmpsl
insl
nop
int
or
out
inc
into
jecxz
pop
stc
sbb
loop
mov
mov
bound
or
lock
jmp
pop
loope
mov
cmp
sti
mov
addr16
idiv
into
mov
dec
sub
pushf
cmpsl
mov
and
xchg
cmpsb
dec
pop
test
xor
cmp
and
pop
xor
pop
sub
xchg
mov
or
adc
pop
pop
lcall
adc
xor
lods
mov
in
mov
je
loop
cmp
in
stos
mov
inc
jbe
mov
rclb
arpl
push
dec
dec
popf
inc
iret
insb
rcll
stos
aam
aaa
and
push
push
xchg
test
stc
cmp
cmp
subb
fsub
push
mov
push
jp
fistps
or
inc
ljmp
scas
imul
push
imul
mov
je
stc
xchg
out
sbbb
adc
out
mov
push
mov
notl
jo
pusha
ja
cld
cli
adcb
xchg
lret
or
jle
jle
sbb
insl
daa
pop
lahf
sahf
fsubl
andb
aas
or
nop
dec
aaa
ds
sti
test
lds
call
ljmp
add
hlt
xor
dec
sub
out
add
add
shl
jno
adcb
adc
pop
mov
movntps
imul
jns
mov
or
lret
sbb
sbb
fs
inc
mov
push
int3
push
call
sbb
scas
fnstenv
aam
lods
inc
das
addr16
sub
aad
add
insl
or
js,pt
inc
outsb
push
enter
and
inc
jbe
mov
test
mov
cmp
pop
jae
mov
hlt
xchg
loope
mov
imul
sbb
shlb
add
add
pop
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
es
cmc
fnstsw
call
mov
mov
mov
lods
cmp
jmp
or
mov
push
jb
dec
aam
outsl
fs
jb
sbb
testb
add
stc
hlt
scas
loopne
cmp
push
rcrl
repz
cmpsl
mov
pop
aad
xchg
adc
popa
aaa
jle
adc
jle
mov
stos
loop
dec
push
aaa
inc
xor
xor
pop
test
hlt
jecxz
sub
fbld
push
and
scas
daa
rcl
fisttpl
sub
in
subl
mov
mov
das
xor
mov
xchg
test
mov
aaa
gs
cmpsb
adc
mov
shr
mov
mov
dec
aad
xchg
rclb
mov
sub
fs
test
push
add
push
inc
inc
pop
test
dec
inc
or
sub
push
test
xor
pushf
pop
mov
mov
add
push
push
add
scas
and
fcom
lahf
insb
add
mov
cmpsb
mov
sbbb
into
xchg
mov
pop
loop
pop
mov
mov
add
aam
popf
fistpll
es
aam
cmp
mov
mov
cmp
mov
cs
sbb
mov
out
or
scas
sbb
push
pop
out
js
lahf
cmp
mov
mov
or
int3
or
sbb
shrl
and
push
mov
or
adc
mov
imul
push
loope
clc
xor
cmp
dec
dec
rclb
outsb
inc
sub
mov
in
pop
loop
cmp
mov
cltd
std
sbb
or
mov
pop
test
lods
enter
jg
or
pop
mov
mov
lcall
shrl
and
add
leave
jae
mov
mov
sbb
xchg
inc
mov
out
mov
cli
xchg
jge
mov
stos
pop
rcrb
add
dec
lods
dec
mov
mov
and
sub
cmpsl
aas
out
adc
test
mov
lret
add
fwait
in
push
jp
pop
inc
test
test
jb
arpl
das
adc
push
fistps
mov
fisubl
adcl
iret
dec
shlb
aaa
stc
xor
arpl
or
mov
pop
clc
xchg
xor
pop
or
push
xchg
mov
imul
out
sbb
or
rol
mov
xchg
jae
clc
rcll
push
insl
mov
insl
and
andw
outsl
test
xor
jne
cli
pop
pop
loopne
fildll
cmpsb
mov
nop
cmp
push
adc
cs
xchg
sahf
ss
jne
cmpsl
mov
leave
mov
in
daa
dec
xchg
adc
push
adc
into
push
shl
mov
pop
ret
test
scas
nop
pop
mov
xchg
cmp
push
push
mov
lods
xchg
push
mov
cmp
xchg
fs
js
jae
enter
in
sub
adc
sub
es
xlat
fstpt
cli
mov
mov
xchg
mov
subb
push
sub
mov
adc
shrb
addl
dec
xchg
adc
imul
push
dec
inc
sub
push
jo
push
pop
arpl
iret
sbb
sub
inc
adc
fistl
sub
or
mov
prefetcht0
xchg
popa
and
aam
jae
in
adc
jno
sbb
lret
sbb
cltd
jae
leave
adc
movsl
lods
or
mov
xor
sub
aaa
outsl
loope
mov
dec
in
push
aaa
mov
pusha
or
sti
add
ds
and
cmpsb
jg
cmp
mul
fisttps
ja
enter
das
fdivs
inc
dec
inc
test
add
sub
jo
cld
mov
push
shlb
pop
cmp
push
pop
pop
jle
xor
jo
lods
movsl
or
jmp
pusha
jns
add
jp
rcl
dec
aad
pop
mov
lds
and
or
cwtl
in
add
pop
mov
cmp
mov
mov
mov
pop
and
movsl
addb
daa
movb
dec
sub
pop
xchg
xchg
sbb
out
fisubs
pop
lahf
das
jmp
in
push
sbb
std
sub
jge
dec
enter
inc
inc
mov
mov
mov
outsl
sti
cwtl
mov
or
adc
cmpsb
jns
lods
cmpsb
and
mov
cld
test
cmc
shll
ss
mov
and
lods
pusha
mov
fisubrs
mov
enter
jae
int3
or
mov
fistps
mov
xor
mov
cmp
js
aam
jle
jg
fs
sti
out
jne
adcl
or
dec
mov
cmc
cmpsb
loope
mov
enter
sub
jo
stc
rorb
sahf
aad
xchg
mov
jne
fldcw
leave
or
in
mov
and
fwait
mov
xchg
fwait
cwtl
jl
in
xchg
movsl
and
mov
mov
and
hlt
mov
adc
xor
add
mov
dec
add
mov
xlat
pop
pop
mov
sub
mov
aad
idivl
in
popf
xchg
negb
cld
ja
gs
paddusb
and
jge
dec
das
inc
hlt
std
pusha
or
cmpsb
aam
mov
test
adc
push
xlat
jbe
icebp
xchg
sub
std
mov
jecxz
mov
lahf
scas
aas
dec
jg
add
mov
and
ror
mov
mov
fstpl
inc
add
dec
inc
pop
mov
xor
sub
add
push
xlat
mov
mov
dec
pop
push
imul
pop
push
sub
or
mov
adc
mov
jl
jle
jmp
mov
inc
addb
add
add
mov
sub
test
stos
sbbl
jbe
lret
das
or
data16
addr16
mov
jp
xchg
rorl
and
clc
mov
rorb
mov
stos
scas
xor
daa
dec
mov
add
add
cmpsb
sub
mov
add
cs
ror
lahf
xor
in
mov
pop
pushf
lret
in
fistl
sbb
imul
jp
or
imul
push
pop
xchg
xor
mov
fmul
leave
dec
cmp
lock
pop
loopne
pop
xor
in
stos
push
push
rcrl
pop
loop
aam
stos
int3
mov
mov
inc
daa
push
jns
xchg
pop
fcmovnb
cmp
mov
divb
aam
adc
dec
cmp
mov
in
jg
xchg
pop
daa
jne
outsb
icebp
dec
mov
lret
adc
xchg
xchg
dec
pop
subb
out
inc
dec
std
jg
cmp
mov
jae
xchg
mov
sbb
xchg
mov
cmp
lahf
xchg
or
add
rcll
je
mov
jecxz
sbb
sub
pop
out
fstl
or
mov
dec
pusha
push
mov
jle
vshufi32x4
push
mov
and
pushl
fadds
filds
jns
je
enter
fstp
loope
repz
cmpsl
and
dec
in
out
mov
fbld
inc
jmp
push
push
jp
dec
insl
sub
mov
xor
mov
adc
rclb
and
imul
add
movl
jno
mov
test
fs
mov
fnsave
fidivs
lcall
mov
inc
daa
cmp
arpl
mov
mov
ss
pop
push
push
stos
test
pop
gs
test
sbb
push
jbe
pop
push
jmp
ret
sbb
jne
rcll
add
outsl
jbe
push
xchg
dec
icebp
sti
fsubrl
push
sbb
dec
rcrl
mov
pop
aad
pop
sub
in
cmp
push
fadd
and
outsl
outsb
sbb
mov
xchg
xchg
incl
cmp
shlb
movsb
divb
mov
adc
bound
push
adc
shlb
idivl
iret
or
rcrb
mov
mov
ss
cmp
lods
mov
mov
call
setbe
repz
into
sar
js
mov
cmc
jo
push
jne
fsub
jg
lcall
in
push
loope
cmp
sub
xchg
sub
clc
sbb
mov
dec
pusha
lods
popa
mov
fwait
sbb
loopne
mov
jne
cli
mov
lahf
mov
pop
test
into
test
xchg
mov
inc
adc
notb
call
cmp
rolb
lds
or
adc
jl
outsb
push
pop
cmpsb
sbb
xchg
jle
imul
mov
lea
inc
jne
xorl
sbb
sahf
xchg
inc
lds
adc
mov
jmp
and
fstl
xchg
popa
mov
data16
inc
xchg
jbe
xor
cmp
sbb
stc
cli
sbb
fidivrs
add
add
cmp
jl
lods
pushf
lcall
xchg
scas
loop
fwait
push
sbbb
cltd
scas
cmpsl
lds
push
jg
and
lret
lock
sbb
add
pop
dec
int
xor
fdivr
pop
aam
xchg
nop/reserved
or
cmp
ds
sbb
mov
leave
push
jns,pt
jecxz
sahf
jns
aaa
subl
jmp
cmpsb
popa
xchg
lods
inc
xchg
adc
sbb
mov
mov
push
sbb
mov
xor
dec
lea
call
pusha
push
arpl
mov
sbb
lods
nop
insb
bound
and
mov
jp
jl
in
push
mov
loopne
mov
aas
mov
mov
mov
popa
addb
cmc
lock
mov
in
inc
cld
or
loop
lock
sarb
push
fsts
fwait
or
jns
inc
xor
lea
inc
arpl
push
push
rorl
repz
das
bound
leave
or
mov
das
jns,pn
mov
outsb
mov
in
adc
in
pushf
loopne
das
shll
inc
inc
mov
sbb
sub
jle
int3
cmpsb
sti
ja
or
cmp
add
xchg
call
clc
add
jle
mov
mov
mov
les
sbb
lock
cmp
mov
jo
push
ficoml
dec
fsubp
dec
int
pop
xchg
fdivrp
mov
addb
movsb
jmp
cmp
mov
out
dec
pop
inc
dec
movsl
mov
loop
fs
dec
adc
clc
popa
iret
jmp
lret
cli
xor
out
gs
lds
adc
adc
xor
pop
or
jmp
mov
jmp
jne
enter
or
adc
jl
and
mov
popa
cmp
cltd
inc
add
arpl
push
sbb
data16
scas
jle
or
inc
pop
pop
or
mov
movsl
lea
das
pop
cmp
lcall
pop
out
imul
cltd
mov
push
ljmp
mov
inc
mov
mov
adc
incb
inc
jmp
cmp
pop
cltd
pop
loopne
ret
jp
lods
and
cmpsl
lds
daa
repnz
icebp
and
jns
jmp
sub
mov
je
or
cmp
in
mov
lret
lea
add
idiv
jno
in
bound
push
mov
xchg
fdivl
dec
nop
ds
sarl
fsub
nop
cltd
lock
mov
lret
fstpt
inc
xor
inc
mov
in
icebp
or
sub
adc
outsl
mov
es
sbb
xchg
popa
out
ljmp
jecxz
dec
xchg
cmpsl
xor
negl
jbe
lods
mov
cltd
dec
push
xchg
lret
add
pop
mov
jmp
outsb
jae
mov
ljmp
cmpsl
in
jle
inc
push
or
gs
xchg
cmpsb
clc
mov
bound
add
mov
pop
mov
scas
loope
xchg
mov
and
xor
dec
xorb
lret
je
sbb
add
dec
pop
mov
cmpl
ja
or
sbb
stos
loop
jns
dec
fsubp
ret
sub
int
loope
scas
pop
xor
movzwl
inc
mov
and
scas
mov
clc
lods
adc
and
xor
scas
aam
in
das
dec
fisttps
xchg
ret
jns
mov
jo
ret
push
sub
sbbl
bound
repnz
inc
ret
ja
mov
jbe
mov
repz
shll
mov
dec
pushf
into
jae
loop
jle
xchg
sete
scas
mov
pop
aas
enter
push
mov
cmp
sbb
movsl
imulb
cmpsl
out
jmp
mov
lods
push
cmp
adc
sbb
adc
sub
sti
cmp
add
mov
in
pop
and
jl
and
pop
push
mov
fsubrs
orb
mov
mov
xchg
cli
std
cmp
aam
xchg
in
imul
cli
sbb
pop
in
mov
in
add
cmp
or
pop
or
jns
pop
dec
push
sbb
mov
inc
inc
dec
push
cmp
rcll
cld
bound
mov
ss
in
lcall
das
jo
mov
icebp
loope
stc
mov
int
sbb
rolb
jno
mov
cmp
add
add
cmp
out
push
jp
call
sub
pop
movsl
fcoms
pusha
or
lcall
sti
popf
mov
pop
fsubrs
mov
or
and
xchg
iret
push
and
jge
ss
pop
jg
mov
xchg
add
xor
ret
dec
lahf
repz
inc
mov
sbb
cmp
sbb
fidivs
push
adc
ss
mov
aad
xchg
mov
mov
mov
dec
push
jl
sti
mov
dec
xchg
movb
xchg
sbbl
mov
mov
xchg
push
mov
cmpsl
ljmp
call
shll
dec
pop
sti
mov
or
xorl
in
popa
test
push
int
insl
inc
mov
bnd
xchg
jmp
xchg
push
fbstp
xlat
sub
push
xchg
adc
adc
xchg
repnz
popa
scas
cwtl
aaa
rcll
and
cltd
inc
add
ret
jge
push
outsb
xchg
pop
insb
rcrb
fucomip
cmp
das
sub
xor
movsb
inc
mov
add
je
fidivrs
and
pusha
lret
jne
or
add
adc
es
in
pop
push
jae
and
pusha
jp
icebp
xor
jecxz
sub
lahf
add
hlt
mov
test
push
sub
inc
aaa
in
and
xchg
jp
lods
xor
hlt
jbe
in
rol
clc
push
ljmp
sti
pusha
enter
adc
lock
fsubrs
cmp
xlat
daa
jno
push
rclb
mov
ja
mov
imul
insl
adc
arpl
lea
sbbb
push
push
mov
sbb
adc
mov
lahf
mov
add
cmp
das
mov
movsl
inc
std
idivl
mov
mov
mov
inc
push
mov
sub
insb
mov
out
cmp
push
sub
fmull
jmp
mov
das
in
loope
std
xchg
and
mov
push
xor
mov
add
loop
pop
ja
xorb
cmp
cmp
or
push
test
call
enter
lahf
sub
add
stos
cmpsl
ja
test
add
or
int
pop
int
cmp
out
cmp
xchg
pop
lods
jno
dec
xchg
test
or
das
or
sub
scas
cmp
bound
aam
adc
loopne
inc
movsl
dec
fisubrl
sbb
imul
dec
jb
stos
and
mov
and
out
pop
stos
imul
dec
jl
dec
data16
xchg
jp
repnz
dec
movsl
mov
mov
xor
inc
test
push
sbb
inc
cltd
fs
ljmp
sub
sahf
hlt
sbb
jmp
shl
xchg
stos
push
inc
in
push
mov
push
cltd
push
xor
ret
lods
arpl
push
loopne
xchg
dec
push
mov
mov
jo
push
mov
and
adc
mov
fldt
fists
repz
jne
lret
clc
stos
mov
xor
or
cmp
rcl
dec
movsb
in
ljmp
mov
ficompl
mov
mov
int
mov
stos
adc
mov
in
aaa
cmp
add
dec
sarl
mov
loope
ds
nop
or
mov
lds
jg
cmp
adc
loop
mov
leave
mov
sarl
mov
lret
imul
dec
andl
stos
stc
test
xor
jns
lret
sbb
or
movsl
enter
sub
jl
sub
jae
ss
dec
iret
jae
mov
mov
lea
sahf
test
arpl
lret
adc
and
mov
push
xchg
xor
push
cli
sub
pop
mov
aaa
jp
mov
arpl
mov
dec
mov
int3
sub
mov
sub
mov
test
roll
stos
cli
mov
mov
or
inc
jae
or
imul
shld
outsl
sub
ds
adc
jae
jp
pushf
shl
cmp
push
cmp
jae
enter
sbb
sub
hlt
push
sarb
jmp
fcom
cmp
insl
ds
or
jbe
cwtl
test
cwtl
cmp
popa
imul
in
adc
xor
mov
xor
push
fstl
cmp
jge
scas
sbb
inc
js
out
dec
mov
add
mov
pop
push
ljmp
aad
pop
lds
add
imul
sub
stos
dec
or
mov
mov
push
shl
lea
xchg
loope
in
mov
push
mov
xchg
and
jp
pop
mov
cmc
fwait
cmp
dec
jne
mov
inc
dec
inc
mov
cwtl
sbb
cmpl
mov
sub
adc
lock
outsb
sbb
inc
xchg
cmp
into
das
hlt
jb
aaa
dec
addr16
sub
adc
inc
push
je
popf
pusha
imul
pop
clc
cwtl
add
cmpsl
and
out
mov
sbb
xchg
lret
scas
xor
sub
push
adc
mov
push
outsl
outsb
add
pop
fwait
insb
rcrb
dec
mov
je
adc
insb
xor
insl
dec
inc
js
push
in
adc
aas
js
leave
aas
lea
add
movb
mov
pop
mov
jo
es
movsb
mov
inc
ljmp
mov
loope
and
push
sub
dec
arpl
repz
insb
push
out
push
sub
lock
lahf
push
sub
daa
pop
mov
fidivl
loope
cld
js
lret
in
mov
jbe
and
call
imul
popf
ljmp
cld
repnz
sub
lds
mov
inc
test
daa
repnz
clc
into
gs
insl
pop
push
or
es
push
jnp
mov
dec
jge
rcll
jne
lods
or
inc
test
mov
test
inc
push
cmpl
xchg
jecxz
cmpsb
fmulp
clc
sub
ds
xchg
sbb
sbb
clc
or
scas
fbstp
add
in
popa
mov
mov
inc
xchg
jg
sahf
out
lods
xchg
cwtl
jecxz
xor
arpl
dec
dec
loopne
ljmp
es
int
push
js
dec
mov
inc
movsb
out
jp
sub
data16
mov
insb
cwtl
dec
jno
push
lods
lret
ljmp
lahf
mov
jp
inc
cmpsb
dec
mull
inc
and
mov
xchg
stos
subl
fsubrs
negb
dec
dec
mov
ss
add
scas
pop
dec
sbb
xlat
dec
push
jns
mov
pushf
clc
adc
aam
mov
inc
test
add
jno
and
js
mov
mov
push
mov
arpl
xchg
addr16
pop
mov
pop
sub
mov
dec
out
divl
xor
push
popa
dec
sbb
lods
loopne
shll
popa
fidivrl
adc
divb
xorb
xchg
mov
into
imul
out
xchg
lahf
inc
mov
movl
xor
mov
in
push
sbb
jecxz
andl
lock
sbb
aam
inc
xor
ss
movb
pop
and
adc
mov
xchg
das
arpl
xchg
or
sub
outsb
cmpsl
mov
and
add
cmp
push
ss
or
lcall
scas
test
pop
loope
movsb
in
lea
sti
xor
fcmovb
pop
sub
cmp
inc
cmc
or
mov
in
mov
jb
shrl
fldt
or
ret
jbe
or
adc
mov
xchg
push
packssdw
xor
ret
clc
mov
xchg
popa
push
mov
cltd
sahf
dec
inc
addr16
fiaddl
cmp
fisubrl
and
jle
int
pop
jg
xchg
xchg
jmp
inc
add
adc
frstor
inc
ficompl
push
nop
mov
fmuls
ret
pop
and
sbb
cmp
mov
cmp
cli
in
cwtl
cmp
mov
fistps
negb
adc
jle
fstps
insb
nop
mov
inc
xor
mov
and
stos
in
ds
fistpll
movsb
cmpsl
test
adc
cmp
fidivl
js
add
lods
mov
jbe
dec
fcomip
sub
xchg
rcrb
into
scas
hlt
or
jno
jns
lcall
mov
xacquire
fistl
fistpl
push
jne
mov
fcoms
std
cltd
adc
xchg
gs
adc
clc
lcall
xchg
cmp
data16
les
call
mul
inc
stos
addl
push
pop
pop
sub
lret
mov
add
xor
shl
test
push
xor
rolb
adc
inc
int
stos
dec
xor
mov
loop
xchg
sbb
cmp
iret
fs
cli
lcall
cmp
insl
movsl
idivb
bswap
lds
test
iret
cmp
aam
dec
cli
filds
push
sbb
sub
adc
or
iret
inc
add
jg
mov
pop
and
mov
test
movsl
mov
sub
adc
popf
jle
mov
mov
or
push
mulb
xor
lcall
dec
jb
lret
inc
sbb
ret
pop
inc
fcomp
aaa
xor
jne
fnsave
xchg
ljmp
leave
and
pop
sbb
jg
test
mov
in
or
lods
pop
sbb
cltd
nop
jmp
loopnew
sbbl
cmp
mov
jl
aas
daa
xchg
mov
or
ljmp
test
jg
sahf
add
adc
fidivl
mov
ret
pushl
pop
fldpi
repnz
xchg
ret
popf
mov
addr16
and
add
or
popa
mov
cs
pusha
es
sahf
call
sub
loopne
xchg
mov
js
jecxz
mov
cli
and
leave
cli
icebp
mov
add
dec
jno
rorl
mov
rorb
fiadds
daa
or
je
pop
out
push
dec
xlat
push
popf
cmp
xor
dec
mov
mov
shl
mov
jl
addr16
jmp
cltd
clc
cmpsl
mov
pop
cwtl
push
xchg
cmpsb
rcrl
fs
dec
jno
sbb
cmp
jns
push
xchg
pop
or
lds
loop
movsb
lret
outsb
frstpm(287
iret
pushl
sub
in
mov
add
mov
aam
push
mov
xor
movsb
lods
add
outsl
mov
adc
das
inc
and
movsl
shrl
dec
jle
inc
popf
mov
pop
in
sub
ss
lods
inc
ja
aam
and
push
and
out
lcall
jbe
push
mov
jge
sbb
lea
cld
int3
ja
xchg
push
ret
or
jne
stos
inc
push
push
js
xchg
push
rorl
dec
jmp
and
xorb
loope
in
lea
lret
iret
mov
test
xor
iret
aad
jns
xchg
sbb
inc
inc
out
sub
push
mov
mov
rorb
ds
nop
out
test
stc
cmpsl
test
add
add
and
mov
xor
xor
imul
pop
dec
lretw
leave
mov
pushf
imul
mov
leave
dec
adcl
jne
ja
in
sbb
inc
popa
leave
adc
hlt
in
jno
sub
jns
in
or
out
push
scas
hlt
mov
mov
adc
jnp
cmp
sahf
in
mov
dec
mov
push
push
fldcw
int
mov
mov
fdiv
stos
rclb
ficompl
xchg
jmp
lods
call
inc
and
shrl
sbb
jp
pop
inc
pop
pop
mov
stc
icebp
ja
andb
xchg
push
scas
mov
add
push
xchg
aaa
cmp
cltd
cmp
pop
stos
jne
sbb
or
aad
adc
jmp
xor
cmp
mov
fldl
lret
js
fs
rcll
loope
stos
sbb
or
lahf
jmp
mov
adc
les
fimull
mov
pcmpeqw
push
pop
pop
test
test
push
cmpsb
pusha
sbb
cmpsl
nop
loop
sbb
mov
cwtl
bound
cwtl
sbb
ljmp
add
addb
gs
or
shlb
imul
mov
adc
sbb
pop
mov
rol
adc
xor
rcrb
shl
xabort
push
mov
int
xor
push
cmp
inc
mov
mov
lock
add
push
popf
das
mov
xor
add
xchg
xchg
lock
mov
imulb
xor
sub
nop
sub
cmp
xchg
adc
ret
std
mov
sbb
aas
push
sub
jecxz
push
aad
insl
std
mov
pop
inc
mov
jmp
sbb
mov
mov
jmp
je
inc
decl
test
push
sub
pop
or
or
lret
hlt
add
test
mulb
movsb
dec
dec
push
jbe
nop
pop
in
out
scas
xor
cmp
and
jecxz
stc
mov
pop
mov
or
xchg
cld
cltd
lret
pop
add
mov
jecxz
jae
or
mov
mov
stos
jne
push
jp
jmp
mov
ja
ret
push
repnz
iret
and
mov
aas
insb
dec
dec
aam
int3
pop
in
mov
push
jmp
mov
dec
lea
xchg
outsl
jge
lret
mov
jecxz
inc
imul
mov
mov
push
cmp
jno
loop
mov
push
lcall
lea
aad
jle
mov
sbb
and
mov
pop
xor
imul
push
sub
pop
cli
mov
ja
dec
mov
xchg
jnp
cld
jle
ret
add
sahf
fsubrl
pop
mov
cmpb
aam
iret
fwait
mov
movsb
or
lods
inc
jge
pop
and
insb
mov
cmp
cmp
out
cmc
push
aam
push
inc
xor
sysenter
xor
ljmp
pushf
mov
inc
push
mov
je
pop
adc
lret
std
movsb
mov
xchg
jnp
mov
jle
out
sub
loopne
inc
adc
dec
out
outsl
out
inc
or
popf
cmp
adc
pop
les
xchg
mov
or
push
mov
ja
xlat
or
jg
les
push
push
leave
imul
mov
or
push
fmuls
or
or
xlat
dec
in
lds
test
jo
cmp
pop
jae
dec
push
out
xorb
ja
ficoml
adc
xor
loope
and
jmp
cli
jp
mov
mov
mov
push
test
repnz
xchg
ficoml
jge
lcall
das
mov
lods
jne
lea
movsb
adc
nop
push
sti
lods
mov
fwait
into
ret
xor
lea
xor
mov
nop
aas
mov
jge
inc
cld
mov
xchg
push
jmp
fstl
xchg
mov
push
idivb
mov
ud1
cmp
push
shr
push
xchg
ss
pop
push
add
dec
push
jecxz
adc
leave
out
jnp
fidivl
and
or
pop
lcall
and
mov
repnz
jmp
call
jb
xor
and
and
into
or
in
mov
jbe
sbb
xchg
js
in
mov
jae
mov
mov
add
push
cltd
or
in
mov
xchg
popa
orb
inc
add
loopne
mov
adc
lahf
fwait
mov
xchg
jl
sub
je
jae
pop
sub
in
xlat
add
lds
std
sbb
add
repz
lret
movsl
xchg
mov
pop
mov
xchg
cmp
dec
in
arpl
ss
int
lods
shll
sub
loop
push
adc
and
jle
dec
mov
cld
je
jle
sbb
mov
cmpb
add
xchg
cmpsl
xchg
or
rorb
sub
push
ja
xchg
mov
inc
mov
xor
scas
dec
dec
in
jb
sar
insb
test
jmp
loop
jo
inc
xcrypt-ecb
cmpsl
dec
or
mov
es
int3
mov
push
test
outsb
cmpsl
lcall
jl
and
pop
nop
scas
ror
and
movsb
cwtl
pop
xor
jge
adc
lods
inc
sub
dec
popf
push
fistpll
cwtl
shrl
add
xchg
pop
inc
inc
inc
pop
adc
fdivs
mov
test
push
xor
sbbl
pop
les
test
push
js
sahf
adc
inc
add
not
dec
inc
add
loop
shlb
imul
and
es
or
popa
rolb
mov
jge
ret
popf
and
mov
cmp
lods
outsb
decl
push
cs
faddp
xchg
sti
mov
scas
cwtl
jmp
sbb
stos
ret
sub
clc
repz
sbbb
cmpsb
jmp
clc
fisttps
cmc
roll
lds
icebp
pop
pop
pop
mull
in
jne
dec
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
adc
jp
rcrl
and
lret
and
movsb
or
adc
mov
mov
mov
sub
scas
cmp
inc
lea
dec
pop
pop
and
mov
xchg
daa
jmp
cmp
testb
cmp
insb
jp
inc
inc
cmp
cmc
sbb
mov
jbe
sbb
xchg
sbb
lret
sti
jnp
add
cmpsb
xchg
sbb
push
fimuls
add
push
fs
cli
lret
dec
add
daa
mov
fimull
pop
add
mov
insl
ja
pushf
pop
enter
push
sub
jg
mov
ds
sbb
icebp
mov
arpl
pop
cld
das
cmp
sub
int3
jnp
fnstcw
jge
mov
subl
adc
jns
fistpl
adc
iret
insb
cmp
mov
jbe
pusha
ja
push
xchg
mov
sarl
push
outsb
sti
lahf
arpl
mov
adc
js
pop
in
ja
movb
mov
sbb
insl
jg
inc
sbb
xor
mov
cmpsl
jne
mov
fwait
jns
rolb
popf
movsl
push
lock
lcall
mov
and
icebp
mov
cmp
les
scas
mov
lods
and
cld
leave
daa
pop
popf
incl
push
dec
xor
nop
xchg
mov
leave
nop
mov
add
inc
lret
jne
sub
shll
aas
ret
in
roll
imul
je
sub
aad
push
add
jmp
icebp
pop
inc
test
jg
jl
addr16
jb
adc
out
jg
and
pop
cmc
test
stos
sbb
inc
xchg
push
mov
negb
movb
mov
push
lcall
out
mov
repnz
leave
dec
dec
sub
jae
push
xor
sahf
fwait
repnz
fisubrl
push
mov
inc
shlb
in
adcl
sbb
pop
bound
ret
mov
in
loope
stc
mov
adc
jno
sbb
stc
test
repnz
stos
mov
mov
ljmp
pop
repnz
adcl
outsl
int3
lods
jb
inc
das
lret
scas
xor
inc
cli
cmp
xchg
test
test
pushf
sub
pop
insl
in
loope
loopne
cmpl
movsl
ret
inc
sub
jns
xor
push
fildl
mov
jl
inc
push
adc
adc
sub
test
into
scas
pop
xlat
adc
repnz
sbb
pop
mov
call
mov
clc
rcrb
les
push
imul
aad
cmp
mov
sbb
fimull
not
cld
cmpsb
xchg
inc
mov
aam
xchg
dec
jne
sub
inc
push
dec
icebp
in
lods
cwtl
add
adc
add
xor
gs
aas
and
pop
mov
pop
lcall
fwait
scas
and
cmp
and
add
mov
adcl
mov
fstpl
jge
mov
mov
lret
stc
add
mov
cld
cwtl
add
sbb
ja
sbb
enter
jbe
enter
push
iret
sbb
mov
add
insl
cmp
xor
jecxz
ljmp
dec
xchg
mov
into
push
repz
jg
dec
mov
repz
cmp
lahf
sbb
cmpsb
cmp
das
out
xchg
dec
jns
jae
or
or
dec
and
xlat
adc
gs
decb
dec
inc
dec
test
stos
adc
loop
pop
pop
or
sbb
add
shlb
je
lahf
insl
add
cmp
pushl
bound
imulb
idivl
arpl
jne
xchg
in
xchg
dec
jo
xor
add
mov
xor
test
or
aaa
cmc
jmp
rolb
cmpsl
test
inc
jno
clc
data16
jae
xchg
push
loopne
cli
mul
test
lret
push
add
dec
jp
daa
pop
fnstcw
iret
or
dec
loope
cmpsb
sbb
lret
es
mov
dec
mov
xchg
xchg
jp
js
mov
pop
mov
test
movsb
cmc
inc
out
dec
addr16
adc
lds
test
int3
push
cltd
pop
and
adc
aam
add
jmp
loope
dec
or
pusha
mov
pop
and
and
inc
shll
cmp
jne
pop
xchg
inc
adc
add
inc
adc
inc
dec
xor
inc
xor
jecxz
fwait
push
push
pop
fwait
jecxz
mov
sub
xchg
fists
dec
xor
dec
jbe
mov
add
fiadds
dec
sub
mov
adc
mov
mov
rcrl
aad
sub
xchg
push
loope
mov
add
popa
mulb
iret
xor
setp
das
inc
cmc
div
adc
jbe
mov
pop
add
popa
fisttps
sbb
add
out
mov
adc
aam
adc
xchg
jmp
add
xor
shll
jge
aaa
mov
je
lcall
jnp
iret
ljmp
aaa
and
xchg
lcall
sub
mov
push
cltd
lret
in
roll
std
add
fmull
cli
jge
xchg
inc
cmp
outsl
faddl
sub
push
adc
fcmovnbe
mov
push
addr16
test
pushf
xor
fsubs
inc
dec
push
icebp
dec
adc
pop
sbb
jns
mov
outsb
js
arpl
outsl
sbb
mov
outsb
std
stos
out
sbb
xor
jns
call
insl
in
rolb
fisubrs
lock
xor
sahf
and
fs
mov
cmp
xchg
imul
repnz
mov
dec
aas
in
add
push
aad
jmp
fisubl
push
push
lea
sbb
notb
xchg
aas
test
adc
xlat
stos
cmp
sti
inc
mov
push
inc
jmp
adc
inc
sbb
inc
mov
popa
or
in
add
or
or
fwait
mov
scas
inc
fcmovnb
jp
mov
shll
push
ds
lods
ror
inc
xor
out
xchg
in
xchg
cmpsl
pop
js
cmp
test
cmp
mov
xchg
pop
sub
add
dec
xchg
ljmpw
je
and
dec
ret
xor
push
test
andb
mov
xchg
sub
popf
testl
push
push
mov
out
rcrl
shl
sti
dec
leave
ret
fcomps
mov
and
in
inc
out
daa
or
nop
mov
push
pop
aas
fs
pop
mov
cwtl
movsb
jge
xchg
and
xchg
or
shrb
jns
es
sbb
pop
sbb
xchg
xchg
outsl
psadbw
push
dec
mov
repz
xor
jno
aad
jge
enter
fnstcw
rolb
aam
adc
sbb
push
pop
mov
xchg
dec
mov
jno
repnz
shrl
pop
pushf
setl
inc
bound
pop
pop
fldcw
std
pop
cwtl
xlat
cmp
addr16
jne
or
push
mov
xor
in
and
pop
mov
sahf
lods
xchg
push
adc
leave
shr
mov
xchg
fcom
scas
test
repnz
std
in
push
ljmp
mov
iret
lret
sar
ja
lods
sbb
shlb
mov
mov
cmpb
adcb
mov
xor
mov
fstpl
icebp
cli
pop
lods
push
jnp
jg
add
fmul
icebp
rcrl
andb
inc
es
and
popf
dec
arpl
sub
fbld
arpl
sbbl
cmp
adc
stos
xchg
in
sub
mov
cld
sub
xor
dec
sbb
or
sbb
fucomip
jp
out
inc
or
fmuls
sub
loop
sub
dec
loope
shlb
xor
sarl
inc
dec
lret
adc
xor
mov
adc
mov
or
or
pop
lds
push
sub
dec
scas
xor
loopne
jp
test
push
movsl
pushl
add
adc
out
ret
jl
pushf
psllq
or
aaa
xchg
dec
adc
repnz
fdivl
shr
and
pushf
sahf
fcoms
scas
dec
in
adc
testl
xchg
lcall
or
test
xchg
sbb
insb
xchg
pusha
push
mov
xchg
adc
mov
and
aas
or
je
push
inc
sub
xchg
aas
cs
aad
xchg
xchg
je
or
jno
inc
lock
stos
stos
andb
push
lock
lock
push
adc
jmp
bound
mov
imul
cs
test
sbb
int3
enter
adc
data16
jg
dec
mov
loop
stc
jnp
incl
sub
xchg
aas
xorb
jg
adc
or
jecxz
inc
push
mov
sbb
push
insl
push
std
arpl
mov
lret
cmpsb
mov
dec
rcll
push
shll
jl
lods
jae
test
sub
inc
sub
in
add
sbb
push
mov
lahf
xchg
sbb
push
hlt
adc
movsl
subb
sub
cmp
xchg
psubd
inc
xchg
lds
mov
cld
sub
xchg
push
aaa
jmp
xchg
cmc
xchg
and
iret
test
daa
and
jmp
push
sar
xchg
cmp
sbb
push
flds
in
push
ret
fnsave
xchg
xchg
cmc
test
in
dec
stos
rorl
inc
sbb
int3
insb
push
jp
add
adc
les
sbb
mov
pushw
out
int
mov
sti
popf
mov
mov
fistl
inc
addr16
stos
mov
mov
sub
jnp
pop
mov
jl
out
push
insb
nop
fildll
arpl
iret
loopne
outsl
and
cmp
push
sbb
fldcw
inc
mov
decl
js
jp
daa
test
call
add
xchg
pop
add
daa
ss
es
push
jnp
sub
data16
aas
cmp
popf
sbb
lock
xor
mov
clc
pop
push
mov
sub
pop
stos
lea
jnp
jmp
test
out
push
jg
mov
dec
mov
in
test
mov
movsb
stc
push
fwait
cmpsb
jmp
adc
outsl
jb
pop
insb
jo
lock
pop
gs
mov
popf
mov
mov
lret
pinsrw
jns
mov
pop
mov
std
jbe
xor
pop
push
mov
outsb
pmuludq
jnp
aad
mov
xor
out
or
nop
sahf
movsb
jl
fs
pushf
stc
xchg
or
in
lods
cmp
jbe
data16
sub
mov
test
adc
jnp
dec
add
cltd
int3
in
fnstenv
rolb
dec
lock
adc
inc
jg
enter
int
jmp
hlt
notl
std
inc
hlt
mov
loope
jb
shrl
inc
mov
ja
cld
dec
loop
in
mov
push
dec
mov
out
cmpsb
inc
adcl
fwait
jae
jl
sub
pop
es
rolb
xor
mov
lahf
pusha
pop
scas
fldt
push
das
pop
jmp
les
fdivs
xchg
push
psrlw
push
subb
inc
insl
jp
adc
movb
shll
jo
insl
jne
and
loope
dec
fnstsw
and
dec
in
push
je
lods
pop
mov
mov
mov
lods
xor
or
pushf
jl
push
fmul
jnp
jo
das
mov
repz
fnstsw
ret
stos
cld
add
fadds
sti
mov
mov
scas
lea
aaa
inc
popf
dec
push
xor
jb
pop
cmc
divl
sbb
adc
xchg
stos
and
lock
scas
inc
mov
sub
xchg
sub
bound
mov
lahf
add
mov
pop
pop
or
cmp
lock
mov
add
mov
add
sarb
xchg
repnz
das
out
xchg
mov
sbb
lret
popa
jne
jl
jle
or
sahf
aad
adc
pop
in
fldcw
dec
lret
push
cs
add
inc
leave
or
inc
and
mov
inc
aad
fldl
pop
das
mov
sub
mov
push
sbb
xchg
loope
adc
lods
add
and
lahf
stos
inc
imul
fstpl
ret
sub
add
in
inc
mov
nop
pop
aaa
pusha
icebp
pop
cs
icebp
pop
dec
inc
fldl
pop
nop
inc
add
pop
mov
cwtl
jmp
push
ficoms
pop
lret
lret
xchg
fldt
cmp
pop
cwtl
jo
xor
fildll
repz
outsl
popa
psrld
xchg
leave
jmp
leave
cmpsb
hlt
xorb
ror
add
cmp
stos
ds
in
and
dec
insl
sbb
cli
or
add
dec
cmp
or
lcall
lret
stc
fs
lods
inc
stos
jmp
cmp
push
xchg
ret
pop
ret
push
lods
sbb
adc
pop
gs
fldz
js
in
rcl
push
cs
test
push
sub
and
push
push
imulb
inc
andb
mov
cwtl
jmp
xor
jmp
xor
jno
stos
movsb
xchg
subl
mov
sahf
sub
xchg
push
movsl
repnz
dec
push
xchg
repz
movsb
into
inc
sub
xchg
xchg
popa
xchg
out
movsl
adc
sub
popf
mov
mov
sbb
cmp
scas
loope
das
cltd
dec
pop
xor
adc
add
aad
pushf
xchg
mov
scas
decl
lods
mov
lahf
cmpsl
xor
stos
pop
xor
cmp
int3
outsb
fiadds
sub
mov
inc
int
inc
push
rcll
or
mov
sbb
and
pop
les
gs
movsl
cli
das
ss
add
add
mov
cmp
neg
enter
add
int3
sub
add
cli
out
mov
sbb
inc
dec
xchg
pushl
xchg
sbb
add
call
jecxz
inc
test
pop
in
adc
push
push
inc
sub
inc
lahf
lods
fidivs
and
or
add
pop
in
mov
call
lods
push
sbb
xchg
seta
mov
dec
je
cld
cwtl
aas
or
jnp
clc
dec
push
push
mov
subl
and
pusha
sahf
mov
add
mov
mov
sbb
mov
and
incb
dec
and
in
push
add
stos
or
ljmp
lods
inc
xchg
jne
fbld
mov
sbb
lock
pop
es
sbb
dec
dec
jno
xchg
push
iret
fcoml
ds
iret
push
push
out
pop
shlb
push
and
rcr
fcoms
outsb
outsb
mov
and
sbb
aad
cmpsb
push
sbb
mov
insb
adc
repz
dec
popf
mov
pop
jno
stos
mov
lods
ret
and
repz
sub
iret
jbe
pop
ja
cmpsb
dec
xchg
outsl
mov
test
mov
out
fstpt
pop
cmp
ret
mov
cmpsb
daa
dec
loopne
test
test
cmp
xchg
add
jne
mov
add
call
inc
inc
lahf
mov
test
pop
out
xor
pop
hlt
or
int3
fnstcw
daa
push
and
push
or
mov
cld
sti
rclb
push
push
jbe
clc
dec
inc
pop
jnp
fstpt
sbb
outsl
pop
data16
pop
xor
pop
scas
cmp
outsb
decb
or
xor
pop
and
femms
ficompl
scas
push
adc
xchg
mov
imul
repnz
xor
mov
adc
jg
bound
inc
push
fdivs
es
sbb
ja
mulb
sub
and
mov
mov
jo
cmc
das
decb
add
dec
lods
jl
dec
cmpsb
sub
aas
sbb
mov
pop
xor
mov
dec
mov
lods
mov
ljmp
loopne
sbb
test
push
in
cltd
les
cmp
aas
push
fadds
loop
insb
loope
out
cmp
jecxz
push
xor
push
mov
out
pop
or
aaa
movsl
or
dec
clc
xchg
adc
aad
sub
into
mov
loop
loope
mov
pop
pop
xor
pop
xchg
or
ljmp
push
sbb
sbbb
loope
loop
xor
jbe
ljmp
js
push
fnsave
fcoms
aaa
into
enter
sub
cltd
jl
out
lock
rorl
jne
and
mov
fmull
jo
adc
test
dec
dec
mov
fiaddl
test
adc
jb
pop
push
fstps
aam
stos
iret
sub
dec
inc
jne
pop
in
dec
cmp
pop
add
jne
adc
lcall
cmc
adc
xchg
pusha
insb
or
lock
and
sti
addb
aas
cmp
xchg
xlat
faddp
idivb
ss
arpl
mov
jmp
outsb
sarb
cmc
loop
scas
sub
pop
dec
inc
fisubl
test
imul
jno
adcb
pop
je
lcall
sbb
es
orl
sbb
dec
xchg
add
dec
jle
fiadds
push
push
sbb
popf
test
pusha
es
jne
mov
xor
inc
sahf
js
add
lods
daa
xchg
icebp
xchg
xor
lods
push
bound
inc
fwait
vpinsrw
testb
push
mov
in
push
cld
mov
dec
rcrl
nop
sbb
data16
jbe
push
mov
mov
sti
adcb
ds
mov
shll
daa
loope
outsb
inc
repz
adc
stc
push
mov
or
mov
or
add
inc
or
mov
cs
and
jae
xor
test
cmp
mov
or
fdivs
pop
xlat
mov
xchg
jne
and
mov
mov
xor
bound
jns
loopne
mov
inc
imul
data16
cs
subl
adc
ljmp
lcall
jl
push
mov
into
mov
or
mov
addb
adc
aam
dec
mov
pop
inc
loopne
pop
int3
outsb
fwait
aas
fs
cmpsb
clc
out
mov
dec
lcall
dec
sti
jmp
and
cli
loope
shufps
push
dec
cs
xor
fiadds
or
popa
mov
push
sbb
xchg
enter
mov
dec
sub
pushf
sbb
xor
dec
pop
cli
mov
das
inc
dec
xor
cmpsb
xchg
pop
pop
sub
lods
mov
and
xchg
push
jge
into
cld
mov
stos
pop
add
cmp
fimull
out
mov
pop
add
push
ffree
jl
adc
sbb
sti
push
add
lret
je
lret
jmp
jl
xchg
and
leave
stos
mov
lret
in
subl
lret
outsl
add
imul
ja
les
add
pop
adc
test
push
mov
sarb
add
rorb
movsb
mov
sub
out
int
jp
cmp
loop
int3
mov
daa
fwait
mov
dec
lahf
rol
mov
jne
adc
or
and
ret
pop
rolb
iret
sbb
push
movsb
push
setne
pusha
jae
inc
fldenv
popl
adc
cld
stc
add
fcoml
lahf
sub
or
xchg
xchg
adc
inc
xchg
mov
cmc
mov
mov
and
sarl
addr16
sub
mov
test
sti
xchg
loope
cmc
mov
aaa
pusha
inc
int3
addb
push
lds
or
ss
aas
xchg
xchg
lahf
aad
pop
popf
xchg
dec
jl
jmp
push
mov
xchg
fstl
nop
fists
inc
sahf
aaa
fidivs
bnd
pop
call
add
scas
add
mov
fdivrs
ljmp
xchg
cmp
inc
mov
adc
push
sahf
xor
and
and
jo
mov
in
push
sbb
xchg
xor
fwait
sub
jmp
ds
lahf
cmc
lret
push
xor
shlb
push
push
pusha
push
stos
inc
test
int3
imul
daa
enter
mov
fnstcw
mov
fidivrl
dec
lcall
jb
scas
cmpsb
push
inc
sub
std
adc
xchg
scas
sbb
stc
push
in
push
mov
mov
outsb
or
icebp
mov
and
cmc
test
int3
inc
arpl
test
pop
mov
cli
lods
xchg
out
mov
cltd
xor
pop
xchg
addb
lods
push
ja
cs
insl
cltd
mov
jno
test
add
push
popf
sahf
inc
aad
dec
sbb
push
jmp
inc
and
nop
pop
cld
jns
les
and
add
push
push
dec
mov
add
jb
xor
or
sub
adc
leave
lds
mov
pop
addl
pop
add
pop
mov
je
ror
cmp
into
dec
lea
sbb
xchg
sbb
push
loopne
push
sbb
fsubs
nop
pop
xchg
pushf
scas
cmp
imul
shlb
sarb
or
cmp
loop
je
and
sbb
push
ret
mov
mov
cmp
sub
lea
neg
movsb
inc
mov
mov
imul
pop
xchg
dec
cmpsb
jecxz
test
cmp
popa
push
rorl
cmpsl
sbb
push
cld
insl
pushf
mov
vrcpps
xchg
mov
mov
push
loopne
pop
mov
lds
sub
shll
mov
add
push
insb
pop
mov
xchg
inc
lret
adc
into
add
push
subb
cltd
cs
icebp
cmpsb
cmpsl
std
xor
loopne
in
addr16
mov
or
popa
outsb
xor
push
addr16
movd
and
pop
stc
adc
ljmp
je
inc
jge
hlt
les
in
and
adcl
or
sbb
push
xchg
xor
clc
gs
and
aaa
js
cmpsb
dec
sub
mov
in
sub
inc
sahf
xchg
jne
aaa
add
ret
popf
mov
inc
pop
daa
mov
jne
jb
xchg
scas
mov
movsl
xor
arpl
pop
imul
jge
cmc
inc
dec
push
xchg
pushf
jo
loope
jge
xchg
cmp
inc
mov
xchg
add
leave
dec
or
std
inc
repnz
xor
dec
mov
jg
mov
lret
lcall
cmp
push
dec
insl
lret
inc
fs
sahf
or
les
pop
ljmp
stos
jnp
mov
mov
enter
insl
popf
dec
push
clc
sahf
inc
inc
pop
out
mov
mov
xchg
jmp
js
xchg
in
cmp
stos
dec
iret
aad
cwtl
out
or
cmp
xchg
movsl
and
or
cld
pop
mov
cmp
lret
pop
add
push
and
mov
xchg
inc
inc
xchg
push
fisttpl
sbb
push
mov
lret
jb
notb
add
in
xor
out
int3
sbb
sbb
cmp
jp
mov
leave
cmp
cmpsl
inc
cmpsb
cmc
add
aad
imul
jle
pop
xchg
mov
das
jmp
dec
mov
pushf
sbb
xchg
fstpl
and
push
adc
jno
sbb
sti
and
sbb
cmpl
sbbb
push
and
jns
jno
push
sti
fidivrl
and
pop
mov
enter
mov
es
add
dec
push
cmp
ret
fistl
xor
ds
dec
jno
xchg
pusha
xchg
push
mov
loope
lods
inc
scas
lods
mov
push
fwait
stos
cwtl
push
pop
roll
push
in
cwtl
jl
dec
jp
xchg
mov
sub
push
loopne
loopne
inc
push
push
xchg
push
cmp
inc
cmpsb
jle
jp
shlb
icebp
jns
test
loop
cli
mov
xor
lds
fisubrl
repnz
pop
push
fcomps
push
fiaddl
sub
pop
popa
sbb
pop
adc
pop
cmc
jne
arpl
insb
inc
lret
mov
lock
mov
addr16
mov
cltd
fadds
cltd
lahf
cmpsl
sub
or
pop
xor
mov
dec
sub
dec
dec
fwait
pop
cli
jge
adc
cmp
mov
xchg
lods
pushf
repz
ficoms
repnz
pusha
xor
adcl
ljmp
adc
xor
xor
pop
pop
sti
xchg
outsl
fisttps
pushf
mov
mov
or
sbb
adc
cmp
iret
inc
sbb
iret
int
decl
ror
test
ret
or
in
maskmovq
idivl
cmp
aas
mov
in
dec
ret
cmp
xor
addl
pop
jmp
dec
fwait
dec
aas
std
mov
pop
push
addr16
fs
loope
clc
out
mov
or
inc
push
xor
repnz
popf
adc
inc
mov
push
enter
inc
and
test
lret
mov
out
xchg
fwait
sahf
jno
xor
xor
data16
jae
xlat
pop
jbe
cmpb
hlt
pop
dec
jecxz
mov
push
inc
shll
push
out
jnp
xor
dec
add
xchg
xor
mov
les
les
or
lcall
pextrw
test
aas
lods
push
insb
into
dec
dec
mov
jae
cld
jle
pop
fisubrs
vmovupd
lahf
out
adc
mov
fdivs
iret
cli
aad
fs
dec
add
dec
push
pop
test
jae
and
adc
fsubl
inc
or
bound
and
mov
inc
mov
mov
or
lea
xchg
aad
stos
fwait
sub
jo
fistps
mov
roll
insb
mov
roll
xchg
and
inc
popf
adcl
mov
pop
and
adc
push
jns
push
fisubrs
daa
xchg
out
js
jb
out
or
push
pushf
sbb
cmp
je
movsl
cmp
movsb
mov
push
sbbl
ja
add
dec
aam
fbstp
imul
jne
and
sub
insl
rcr
and
mov
stos
in
addr16
push
and
repz
test
sub
insl
cmpsb
rclb
les
jge
lcall
popf
pop
xor
cmc
loop
in
jp
clc
pop
mov
pop
push
adc
pushf
pushf
lcall
orb
ficoml
ja
dec
imul
fnstenv
call
cmpl
mov
addr16
jno
pushf
push
pop
cmp
das
decb
stc
fiaddl
add
rolb
push
shll
sbb
push
popa
mov
mov
cmp
ss
adc
push
inc
xchg
daa
out
xchg
jnp
ss
jl
mov
mov
hlt
lods
dec
lock
loopne
add
fcomi
bound
shll
mov
sbb
mov
xorb
mov
fsubp
test
or
cwtl
pop
addb
sbbb
pop
mov
sub
cmpsb
aad
and
sub
mov
inc
sub
or
popf
pop
out
clc
rorb
xchg
lcall
sti
lea
outsb
inc
pusha
test
test
sbbl
mov
inc
ljmp
int3
inc
popa
xchg
movswl
cmp
mov
push
cmpsb
pop
jmp
rcl
lock
xlat
cmp
stos
bound
test
push
or
cltd
sub
lret
bound
mov
repz
pop
outsl
in
pushf
jecxz
mov
lret
pop
pop
pop
mov
aaa
sbb
insl
push
mov
push
gs
int
mul
inc
movsb
xchg
mov
out
sarl
lods
lods
les
cs
in
sbb
sbb
jecxz
mov
mov
inc
ss
lock
fcoml
nop
jo
mov
lcall
mov
mov
pushf
daa
pushf
test
ljmp
cmp
in
and
cmp
sbb
shlb
xor
sub
mov
lock
jb
inc
sub
sbb
ljmp
mov
pcmpeqb
adc
inc
cmp
add
pop
idivb
add
adc
lods
push
or
dec
rorl
push
mov
add
push
ljmp
inc
addr16
xchg
push
and
inc
cmp
push
or
cs
adc
push
cmp
add
ret
push
xor
sub
dec
fildl
lahf
sar
sbb
cmp
xor
ffree
out
and
sbb
jno
iret
inc
test
jno
insl
in
push
cmp
jge
inc
pop
test
push
cmpl
adc
jb
push
and
sbb
out
xor
or
popa
lods
inc
cmp
xchg
sub
insl
imul
dec
dec
add
jle
rolb
jnp
and
xor
add
xchg
in
repnz
lods
adc
pushw
mov
add
idivb
test
mov
dec
sbb
outsb
xchg
jo
push
adc
out
out
out
xchg
cmc
ljmp
push
jecxz
mov
ret
xchg
cmp
sub
pop
jl
inc
loope
int3
dec
out
jle
pop
xor
fs
into
mov
push
movsl
dec
movsl
popfw
pop
add
jbe
shlb
pop
repnz
or
and
les
cs
test
nop
mov
aas
inc
mov
xchg
mov
aas
lcall
out
push
xor
push
int3
int
cld
into
fcmovb
addb
push
fyl2xp1
xor
test
pop
aas
push
stc
inc
cwtl
sti
test
add
aas
xor
xchg
fidivrs
sub
xchg
mov
adc
adc
int3
or
sub
icebp
shrl
cmp
jge
into
daa
insl
sub
add
pop
imul
outsl
fs
pushf
jle
push
cltd
outsb
add
jo
xor
pop
pop
adc
loop
ljmp
shrb
fistl
mov
xor
into
jb
mov
cmp
in
imull
add
int
arpl
shl
cmpsb
pop
faddp
pop
sbb
and
add
imul
push
lods
xchg
arpl
jno
mov
fnsave
jmp
les
iret
test
sub
push
xchg
mov
xchg
push
xor
dec
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
icebp
or
dec
mov
xor
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
