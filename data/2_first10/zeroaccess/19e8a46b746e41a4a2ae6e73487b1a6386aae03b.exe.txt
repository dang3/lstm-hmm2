push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
pop
lods
add
jl
jl
xor
jl
adc
and
popa
pusha
lcall
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
addr16
outsb
je
inc
stc
dec
out
cmp
mov
pop
pop
lock
push
out
pop
rcll
imul
sub
adc
ret
movsl
clc
sub
ret
push
cmpsb
push
xor
iret
imul
mov
imul
push
pop
insl
inc
ds
or
cmovg
rcrb
xchg
lods
adc
arpl
out
add
addr16
stc
mov
lret
sti
lahf
and
sbb
sbb
jp
push
data16
ret
movsb
sbb
ret
mov
jge
in
pop
pop
les
pop
lock
xchg
jns
xor
sub
inc
cmp
xchg
inc
fsubs
in
lret
or
or
fwait
imul
jecxz
cmp
push
lea
pop
or
or
pop
cmc
cltd
filds
dec
dec
popf
adc
push
aam
dec
jae
pop
mov
pop
out
idivl
inc
popa
or
mov
pushf
fldcw
push
enter
ret
push
and
cwtl
dec
add
sbb
in
sti
mov
in
mov
and
ljmp
repnz
clc
cmc
adc
add
stos
js
insb
subl
fildl
das
in
hlt
sub
lcall
mov
sub
lods
jle
xor
ja
dec
mov
dec
mov
popf
pop
mov
and
inc
lods
out
loope
add
and
or
and
or
dec
mov
cmp
ss
dec
imul
push
fs
aas
pop
ljmp
and
imul
fmuls
or
fiaddl
loope
add
ss
cmp
pusha
mov
decl
cmp
je
loope
jne
outsl
inc
mov
push
imul
push
sbb
lahf
mov
mov
arpl
fs
add
out
jae
adc
lock
pop
roll
shr
aaa
push
mov
mov
addr16
cmp
pop
loopne
addr16
xor
jmp
mov
mov
icebp
adc
mov
mov
and
jne
es
push
movsl
mov
popf
pop
les
or
inc
cmpsl
sub
mov
mov
cld
and
and
mov
cli
insl
sbb
add
dec
and
arpl
mov
and
leave
fdivrp
cmp
mov
mov
pop
mov
dec
movsl
pushf
or
stos
or
lcall
es
cli
div
nop
fildl
jb
insl
jb
rcl
dec
repnz
fildl
add
int3
jo
sub
ss
or
scas
lea
pop
fldcw
mov
inc
test
add
ret
sub
in
test
out
jmp
jne
ret
and
sahf
pop
dec
cmpsl
xchg
adc
mov
pop
xchg
mov
pop
rcrb
push
push
push
adc
pop
mov
js
sub
mov
inc
loop
pop
int3
and
ss
dec
xor
and
insl
mov
jae
out
mov
xchg
fucomp
lock
xor
not
push
or
add
inc
lds
stos
or
fisubl
or
ss
loop
rcrl
adc
inc
or
jecxz
push
inc
pop
xor
mov
inc
ret
sub
aas
pop
mov
sarb
loopne
leave
sub
cltd
out
xor
push
pop
xor
xchg
mov
mov
lock
cmp
bound
and
and
clc
fdivs
cmp
repz
adc
cmpsb
cli
cmp
mov
or
and
adc
or
fisubs
xor
out
xchg
dec
pop
enter
imul
jb
shl
push
push
loopne
ret
imul
push
and
cmp
jle
pushf
rcr
mov
mov
push
rcrb
stos
mov
lds
pop
dec
dec
jmp
dec
sarl
femms
xchg
mov
arpl
dec
adc
nop
and
sub
loopne
push
xor
inc
in
xor
repnz
xchg
sbb
pop
push
xchg
push
popa
cmp
out
or
and
fcmovnb
leave
mov
or
mov
roll
fldt
dec
repnz
mov
in
push
cmp
cmp
dec
xchg
ljmp
ret
adcb
popf
inc
pop
test
jnp,pn
push
test
push
and
sub
enter
sub
or
out
shll
call
mov
cmp
xchg
xor
push
enter
mov
ret
aam
in
sub
push
repnz
add
inc
pop
leavew
popf
dec
insl
xor
je
in
mov
je
mov
scas
dec
ja
icebp
xor
mov
push
scas
push
mov
adc
sub
push
out
cltd
inc
dec
jb
pop
pop
mov
push
lds
cwtl
and
fisttpll
push
mov
repnz
push
aad
and
xor
jecxz
insb
fwait
pop
push
mov
cmp
std
hlt
std
cs
outsl
test
divb
mov
push
iret
pop
xlat
repz
fwait
mov
insl
outsb
inc
jb
push
or
cmp
sahf
mov
je
enter
ds
ret
jnp
pop
shl
rolb
sbb
sbb
movsl
mov
cltd
stos
and
addr16
aaa
or
jo
lahf
ja
scas
dec
cs
sbb
in
and
push
out
imul
mov
or
aad
insl
or
filds
mov
mov
movsl
les
pop
jne
in
or
and
mov
cmp
add
lods
adc
jbe
std
outsb
insb
aas
int3
jno
fstl
xor
lahf
add
sub
and
mov
mov
xchg
push
fldcw
imul
xlat
xor
push
out
xchg
xchg
shlb
or
bsr
fisubrs
pop
push
mov
push
adc
testl
subb
imul
lock
adc
xchg
scas
fcoml
inc
mov
sti
aaa
cmp
mov
imul
adc
std
jmp
sbb
pop
je
sbb
jo
mov
cmp
sbb
sar
popf
lods
loopne
cmp
lret
shl
sti
mov
out
add
jp
sbb
lahf
pusha
add
xlat
addr16
push
push
iret
xor
iret
out
fildll
testb
push
cmp
and
xchg
outsl
lahf
ret
into
das
loopne
daa
adc
pop
mov
in
sar
rclb
sub
jl
mov
inc
dec
xchg
loopne
pop
into
jbe
daa
jmp
jns
iret
sbb
xchg
inc
clc
and
mov
mov
xor
imul
xor
mov
jns
jae
adc
or
js
mov
std
dec
xchg
push
sbb
loop
into
mov
mov
es
adc
les
jae
jne
xchg
mov
add
mov
mov
ja
cmp
icebp
cmp
jno
xchg
lahf
mov
pop
pusha
xchg
mov
mov
add
xchg
cli
push
pop
pop
in
loopne
sub
aas
xchg
mov
sti
and
cs
sahf
std
xchg
jecxz
jno
xor
dec
test
test
xchg
out
fsts
mov
mov
dec
jne
cmp
out
mov
ss
lret
cmp
cmpsl
and
jno
popf
scas
dec
pop
mov
icebp
mov
pushf
scas
mov
xchg
insb
lret
movb
mov
repnz
imul
or
ss
mov
mov
jecxz
dec
out
icebp
stc
dec
test
push
and
fs
pop
adc
popf
dec
int3
mov
xorl
scas
and
xchg
stos
pop
outsb
xchg
jg
dec
fstpt
pop
and
aad
or
mov
dec
gs
adc
or
subl
inc
rcl
in
cmp
test
cli
call
scas
add
jecxz
das
sub
jne
pushf
fidivs
jb
imul
push
push
jl
pop
fldln2
xor
sahf
lret
lret
arpl
into
lret
out
mov
pop
inc
add
clc
cli
nop
push
jg
push
ret
dec
testl
jl
cmp
sbb
pop
inc
cmp
pop
mov
sarl
jnp,pt
jae
loopne
mov
mov
jmp
testb
or
and
aam
pop
xor
imul
fwait
sub
movlps
add
aad
test
fwait
stc
xchg
loope
push
imul
mov
enter
hlt
and
aas
lods
dec
inc
adc
and
jb
addr16
out
imul
daa
inc
scas
scas
ss
pop
mov
test
add
aas
cmp
ss
cmp
jge
inc
fisttpll
jg
les
subl
inc
add
call
icebp
ret
push
xchg
xor
mul
add
clc
xchg
bound
or
in
jl
mov
push
paddsw
xlat
dec
jne
add
out
xchg
mov
adc
icebp
fldl2e
pop
imul
fs
cmp
dec
dec
adc
inc
and
fsubrs
or
inc
js
test
cwtl
jne
push
pop
ret
addl
les
push
or
push
xchg
daa
xlat
in
out
push
mov
in
js
sbb
je
lods
rol
pop
push
faddl
in
mov
scas
sub
aad
mov
adc
daa
nop
test
mov
mov
imul
and
into
push
xabort
shrl
jae
pop
stos
icebp
cmp
or
push
mov
in
add
add
cs
cmc
ficompl
cli
mov
call
cld
nop
sub
in
out
lret
cmp
aas
mov
push
loop
pop
stos
movsl
add
jmp
mov
loop
xchg
shll
cmp
lcall
jge
rep
inc
jmp
mov
mov
lret
sbb
cmp
dec
inc
fs
leave
cmp
xlat
push
pop
add
icebp
call
sbb
adc
lret
lods
imulb
sbb
sbb
pusha
adc
into
pop
cmpl
jl
loopne
and
pop
loop
outsb
jge
cmpsl
clc
movsl
outsb
fisubrl
sub
mov
pop
pop
mov
add
addl
pop
iret
jmp
loopne
and
inc
jp
call
mov
push
add
aad
in
bound
and
push
cwtl
jg
push
pop
cld
xchg
leave
jge
push
jmp
cmc
outsb
clc
test
and
dec
and
les
pop
adcl
inc
xor
popf
xlat
ror
jno
dec
scas
jae
std
dec
outsl
into
push
mov
push
push
fisubs
inc
add
or
loop
mov
push
push
dec
popa
add
jne
jg
in
fsts
cmp
out
fldpi
jne
xor
adcl
xor
lods
int
dec
lods
adc
mov
dec
dec
cmp
int3
add
and
cmp
push
mov
dec
les
add
hlt
cmp
stos
dec
jl
popa
jbe
mov
jmp
dec
mov
nop
lods
fsts
mov
push
mov
xchg
mov
pop
xor
into
daa
jge
lock
cld
lock
xor
sub
imul
or
mov
mov
add
push
stos
or
imul
cld
ret
xor
shlb
and
data16
data16
ret
xor
cmp
and
adc
aaa
xchg
cmc
sub
mov
ds
add
fcomp
xor
mov
xchg
out
loopne
jb
push
pop
jecxz
add
out
loope
and
imul
sbb
in
pop
nop
dec
jae
rep
icebp
jb
sub
dec
inc
bound
cltd
push
out
test
daa
mov
std
cli
in
sbb
mov
es
test
xchg
test
pop
ds
out
or
daa
test
ret
popl
xor
sub
lods
test
mov
push
fwait
inc
movsl
loopne
xor
sbb
mov
cmp
insb
adc
cmp
jns
push
jmp
dec
jp
popl
dec
jle
out
outsl
mov
lret
xchg
insb
mov
jae
int3
sub
push
xorb
les
adc
lahf
add
data16
mov
and
andl
cli
mov
inc
test
xchg
push
imul
pop
mov
cmp
cmp
dec
stos
adc
in
cmp
rclb
jmp
dec
mov
pop
xchg
pushf
hlt
dec
fdiv
cmp
decl
test
cs
adc
repz
mov
jb
jnp
xchg
adc
cltd
outsl
mov
inc
cltd
insb
xchg
push
dec
test
lock
add
fwait
jmp
pusha
sbb
push
imul
adc
cmp
and
call
pop
add
sti
notl
lods
sbb
pushf
imul
ljmp
sbb
in
mov
mov
in
sbb
and
fidivrl
jle
sub
sub
pop
xor
jb
repz
adc
inc
xor
hlt
ljmp
mov
cmpsb
and
test
xchg
inc
cmp
sub
rorb
push
xacquire
dec
out
xor
call
pop
mov
xor
sbb
shr
btc
aam
and
push
mov
sbb
xor
inc
hlt
adc
loopne
xchg
dec
in
shlb
mov
and
out
xor
out
jle
jb
mov
hlt
stc
sub
cmc
jge
stos
popf
inc
mov
adc
enter
in
jecxz
push
imulb
pop
loopne
push
je
sbb
xor
loop
mov
test
mov
dec
lea
out
inc
jns
sub
test
int
aaa
incl
dec
mov
cmpsl
mov
jg
out
es
sbb
xlat
ljmp
pop
cmp
fisubl
rcl
jmp
adc
push
repz
or
inc
mov
hlt
mov
fwait
in
aam
fistpl
sbb
cltd
add
mov
std
or
pop
loope
sbb
fsubrl
xchg
arpl
or
sbb
sub
imul
jns
cmpb
xor
ja
imul
jp,pn
mov
push
fisubrl
stc
mov
pop
out
iret
pop
ja
lcall
or
pop
leave
push
mov
or
ret
dec
or
push
fmuls
pushf
pop
fmull
adc
cli
loopne
inc
xchg
cmp
aad
cmp
fisubl
mov
jmp
cmp
rclb
sbb
inc
aas
xchg
and
inc
push
ret
and
xor
jecxz
imul
jecxz
rcll
int3
shrb
adc
mov
aad
loope
in
and
mov
loopne
pop
xor
mov
out
mov
sti
scas
push
cmpsl
xchg
imul
dec
sub
xor
mov
or
icebp
ljmp
jmp
jae
xlat
cltd
mov
add
lock
cmp
movsl
adc
pushl
dec
fcmovne
out
inc
mov
mov
sub
jg
lret
adc
stos
lock
int3
ja
imulb
jnp
dec
mov
cmp
pop
std
enter
mov
or
lcall
insb
pop
ss
xor
shrb
mov
jne
jnp
sarl
pop
and
jl
push
mov
es
sub
lcall
movzwl
pop
jmp
jle
test
mov
inc
xor
lahf
mov
pop
xchg
sub
inc
and
push
dec
pop
lret
jmp
add
push
imul
mov
cmc
popl
push
fisubrl
ret
push
stc
adc
repz
loop
movsb
jno
hlt
mul
outsl
aad
sbb
stos
cmp
add
shll
test
xchg
std
sbb
push
test
ja
jns
push
lret
sub
adc
jno
mov
lds
int
xor
cmp
cwtl
dec
mov
xchg
sbb
notl
sbb
cmp
lret
lds
jnp
stos
arpl
xor
movsb
test
sub
pop
fdivp
jl
jbe
int3
adc
or
fdivrl
shrl
lret
xor
xchg
jg
mov
jmp
dec
pushf
inc
js
jno
jae
jl
xor
jl
adc
xor
rolb
aaa
adc
fwait
xchg
pop
xor
icebp
mov
mov
sar
push
out
outsb
mov
lret
repz
cmpb
xlat
pop
jl
test
sbb
or
test
cmp
lret
daa
cmp
rcll
sub
lahf
sbb
int
shl
push
mov
mov
or
loop
das
movsb
fmuls
pop
ficomps
pop
jecxz
add
pop
in
gs
cmc
lret
xor
pop
pop
sub
sub
sbb
rcl
pop
jno
xchg
push
adc
incl
xor
orl
shll
jg
bound
fwait
cmpsl
cmpsb
mov
push
les
and
xchg
addr16
sub
and
je
xchg
mov
jp
fadds
inc
lret
push
cmp
fdivl
add
aas
aaa
faddl
push
mov
push
ljmp
lock
adc
jbe
cmpsl
sbb
pop
mov
mov
push
test
outsb
xor
repnz
andl
pop
jae
mov
fldt
fstl
xchg
insl
pop
jo
pop
add
cmp
lds
lret
xor
loop
mov
imul
insl
push
repnz
cmpb
lock
ret
dec
pop
subl
sub
sub
lods
cmp
xor
sbb
mov
mov
add
icebp
jae
pop
mov
push
stos
enter
and
rorl
jge
sub
mov
rcll
xchg
sub
inc
repnz
fstpl
repnz
add
pop
ljmp
mov
les
lock
add
push
mov
ffreep
push
xlat
or
dec
push
pop
sbb
sub
cmp
lahf
mov
pop
lods
aaa
mov
jo
mov
xor
mov
ret
mov
movsl
test
testb
out
mov
pop
mov
out
xor
rorb
jo
and
or
or
inc
push
cmpsb
adc
sbb
bound
add
xchg
and
mov
add
add
jecxz
shlb
add
jnp
or
mov
pop
test
sbb
dec
sarb
mov
sub
arpl
sbb
pop
sub
xchg
jne
jno
sub
stos
out
cli
int3
fiaddl
push
or
ljmp
daa
dec
xor
xchg
rorb
nop
adc
adc
fisubs
les
sbb
scas
push
adc
insb
inc
addl
js
andl
cmp
add
mov
scas
mov
cmc
rol
push
mov
mov
data16
lea
or
inc
dec
push
xor
adc
mulb
add
rcrb
dec
xlat
testl
add
in
into
inc
and
shll
enter
mov
arpl
ds
lods
lret
shlb
lock
dec
or
dec
mov
out
sbb
cmp
push
and
lss
and
inc
inc
push
sarb
popf
or
jl
int3
mov
xor
and
sbb
dec
push
sub
jp
mov
in
lock
cmp
in
push
movsb
out
cmp
lret
call
sbb
in
test
fisubl
inc
pop
mov
sub
xchg
lret
cld
ljmp
sbbb
adc
sahf
dec
pop
mov
push
mov
rclb
cmp
jae
leave
mov
adc
stos
cs
psubq
icebp
mov
lods
push
es
scas
int3
js
mov
mov
push
std
aam
xor
sub
test
test
adcb
loop
mov
lds
mov
pusha
add
push
pop
jo
inc
mov
das
ret
xchg
xor
arpl
shl
rcll
clc
lret
dec
sahf
adcl
cmpsb
lds
and
outsb
xor
or
dec
pop
and
pop
jae
ds
pop
or
xor
sub
and
pop
and
jle
fstl
ret
test
inc
push
bound
icebp
or
sbb
mov
cmpsl
ljmp
push
bound
inc
lret
stc
and
jae
cwtl
jno
shll
fldl
and
testb
ret
enter
or
loope
push
shlb
std
bound
pop
jmp
in
gs
pop
push
sub
and
in
xchg
icebp
pusha
adc
mov
pop
cld
and
loope
adc
inc
stos
fbld
insb
in
notb
push
mov
arpl
dec
outsl
cld
fcmovne
lret
movsb
dec
mov
cmp
dec
sbb
push
cmp
popa
inc
lods
les
std
dec
shlb
jb
push
addr16
sahf
cmp
stos
xor
xor
push
add
inc
mov
sbb
andb
jp
mov
cld
rep
mov
xor
popf
jle,pt
test
cmp
cwtl
pop
in
jb
sbb
jp
stc
fcomi
in
mov
pop
inc
jns
rcrl
adc
pushf
cmp
movsl
push
and
xchg
cmpsl
sarb
mov
leave
inc
out
pop
mov
loopne
xchg
inc
loop
fidivl
pop
inc
aam
imul
cli
jbe
inc
mov
outsl
xor
jl
adc
mov
jne
rorb
nop
sbb
or
dec
and
mov
jmp
loope
adc
push
mov
loopne
sub
aas
dec
adc
lahf
ljmp
stos
push
ljmp
mov
mov
sbb
xchg
mov
cmp
aad
xchg
add
dec
pop
fs
nop
jno
xchg
ss
fsubl
and
xlat
cmpsl
pop
xchg
js
std
sub
repnz
hlt
push
pop
xchg
into
cmp
stos
xor
cwtl
stos
mov
xchg
or
mov
cmp
cltd
adc
stos
sbb
int3
adc
add
push
shrl
sub
sti
pop
xchg
cmp
enter
fbstp
mov
pinsrw
push
mov
mov
jg
leave
mov
jno
add
xchg
inc
pop
mov
mov
hlt
or
inc
xchg
sub
pop
push
mov
decb
jge
and
sub
leave
dec
sbb
setl
movsb
push
xchg
adc
cltd
icebp
imul
dec
cld
addps
cwtl
jne
mov
jnp
sub
insl
pop
ljmp
or
dec
pop
mov
push
fs
lods
rolb
xchg
loop
shrb
scas
test
fmull
lcall
pop
gs
and
mov
xchg
inc
mov
outsb
lcall
fcoms
test
leave
adc
xor
jae
adc
xor
xchg
push
arpl
xchg
scas
jne
or
gs
cmp
push
fisubs
adc
mov
jg
jnp
repnz
cmc
fucomi
pop
cmp
cmp
fidivl
mov
lret
notl
in
jg
mov
cwtl
fdivs
rclb
adc
push
iret
nop
or
lods
test
mov
dec
pop
testb
adc
lcall
aaa
sti
adc
xchg
imul
insb
sub
mov
xor
ret
cli
add
pop
popf
lock
ret
jmp
jno
xlat
imul
cmp
mov
lahf
shl
aam
mov
je
cmp
enter
mov
sub
pop
mov
jbe
lcall
dec
aas
hlt
cmpsw
and
imul
fdivl
push
xchg
movsl
mov
test
mov
xchg
clc
cmp
outsb
jle
in
jge
idiv
scas
pop
xor
repnz
push
adc
ss
popa
mov
xor
fwait
les
xchg
repnz
jns
sbb
stos
stos
push
sub
push
inc
mov
mov
repnz
or
pop
mov
fbld
insl
lds
xchg
repnz
mov
push
and
push
sbb
pop
jnp
shll
test
jno
cmp
cmp
push
outsl
data16
sbb
push
inc
pop
lea
das
sahf
or
inc
dec
lret
andl
les
sub
lcall
add
div
imul
push
daa
sbb
mov
xchg
hlt
addr16
xor
bound
sbb
push
pop
push
pop
dec
ja
cld
jns
push
mov
or
fisubs
jbe
pop
lcall
mov
adc
shlb
push
shll
pop
xchg
pop
cmp
es
int3
lret
das
fcoms
mov
cs
adc
jae
xor
roll
popf
pop
sti
jne
test
dec
orb
andl
fwait
mov
loop
aas
out
add
lods
imul
leave
cmp
inc
or
xchg
popa
aam
stos
imul
mov
sub
cmp
and
mov
xchg
push
dec
sub
jne
pop
mov
push
sti
add
and
rolb
gs
mov
jg
call
data16
jno
cvtps2pi
hlt
iret
pushl
and
hlt
or
cwtl
enter
push
mov
nop
mov
stc
push
test
xchg
mov
or
andl
sub
mov
outsl
popf
or
shlb
xchg
inc
jmp
scas
sahf
inc
mov
adc
ret
pop
xor
xor
push
mov
jmp
inc
fistpl
sti
sti
jbe
in
mov
insb
dec
push
dec
mov
lods
push
and
jo
popf
in
mov
stos
out
push
movsb
dec
in
cmp
fisttpll
nop
outsb
jo
or
dec
ss
es
cmpsb
pushf
sbb
push
clc
nop
pusha
mov
les
mov
pop
mov
stc
or
xchg
xchg
rclb
notb
xor
cmp
push
sbb
fcmovbe
mov
mov
cwtl
lret
mov
rcrl
ja
bound
lds
sub
pop
mov
ja
mov
jo
insb
xchg
cmc
mov
mov
jno
outsb
or
mov
stc
stos
mov
adc
mov
sarb
mov
lea
xchg
mov
sbb
stos
dec
adc
or
mov
inc
mov
imul
cmp
pop
xchg
mov
cmpsb
mov
xchg
jl
cmpsl
sahf
lods
stos
mov
sbb
inc
aaa
push
inc
xchg
mov
lcall
mov
mov
sarl
push
cmpsl
sub
jecxz
fdivs
add
mov
cmp
pop
test
xor
shrl
or
and
mov
leave
jle
fcomp
sub
ljmp
jno
push
sbb
aas
mov
mov
js
sub
out
mov
sub
sbb
jg
in
cmpsl
into
fsubrl
xlat
add
fcoml
mov
pop
sbb
mov
jae
out
loopne
sar
jmp
jp
into
fldcw
push
in
lea
aad
xchg
and
ss
arpl
iret
mov
aaa
scas
enter
and
shlb
in
hlt
cmpl
js
mov
scas
add
rol
dec
jbe
out
and
out
mov
mov
out
sub
cmp
mov
or
movd
cmpsl
xchg
leave
dec
dec
dec
sub
mov
stos
outsl
adc
outsl
mov
test
push
and
arpl
sbb
out
sub
sahf
icebp
enter
call
inc
jge
in
ror
push
cs
adc
ret
jns
test
cmp
out
mov
mov
jno
pop
push
mov
movsb
xchg
sbb
fs
inc
test
fiadds
ss
sahf
xchg
push
popa
adc
jl
clc
aaa
mov
jmp
or
testb
aam
lahf
mov
nop
loope
inc
movsl
stc
daa
xlat
jne
divl
lock
inc
sub
push
testl
sub
mov
rcll
jge
stc
push
dec
hlt
mov
mov
dec
mov
mov
pop
add
or
jl
mov
mov
sub
ss
push
out
push
push
cli
fstl
dec
mov
lahf
cld
xor
stc
pop
shlb
pusha
mov
adc
lods
orb
fsubs
leave
dec
pop
xor
leave
cmc
dec
or
adc
adc
outsl
repnz
rolb
insb
imul
mov
lcall
fsubp
push
pop
pop
fsubrs
fstps
hlt
ss
daa
xor
les
xchg
ss
jbe
call
fistpll
cli
sbb
mov
insb
in
or
imul
mov
clc
hlt
test
add
pop
ja
ljmp
jl
rcr
mov
inc
lock
cs
mov
mov
sbb
test
mov
out
adc
sub
dec
aam
je
cmp
push
sub
leave
xlat
xor
mov
mov
jg
out
outsl
dec
jno
in
lods
andb
jp
mov
and
sti
sti
mov
fyl2xp1
push
hlt
push
lea
aam
sub
int3
xor
nop
div
icebp
jno
lods
loop
and
or
xchg
aaa
ret
mov
push
in
les
xlat
push
mov
add
jle
filds
imul
shlb
loope
cmp
testl
inc
leave
arpl
fs
stc
cmc
es
inc
jecxz
mov
push
and
xchg
iret
aaa
jne
xchg
scas
and
pop
and
jb
push
and
pushf
adc
iret
or
je
cmc
inc
orb
cmpsl
cmp
cmp
pushw
rcrb
iret
je
es
flds
mov
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
out
xor
jl
dec
pop
jl
nop
rorl
ret
jo
leave
shll
in
adc
repnz
popf
pushf
idivb
mov
pushf
clc
or
imul
repnz
movsl
mov
inc
xchg
and
sub
push
jne
push
push
aam
jge
fistl
inc
or
aad
outsb
xor
data16
cli
mov
scas
das
adc
fwait
xlat
mov
rcll
or
dec
push
pop
sti
adc
jg
xor
pop
or
jae
add
pushl
xchg
in
lods
inc
call
cmp
sub
lock
int3
or
pop
xchg
cld
dec
testb
shrb
ja
es
pop
in
mov
cmp
mov
sbb
inc
lahf
and
mov
mov
fstl
loop
adc
inc
popf
in
push
inc
cmp
xlat
mov
out
les
mov
push
pop
push
js
out
std
int
push
adc
push
subl
add
aad
mov
inc
leave
push
pop
adc
dec
jne
stc
std
xor
pop
lcall
adc
cmpsb
popf
or
mov
cmp
pop
repz
imul
shlb
jo
pop
push
xchg
int3
xchg
cmp
mov
cmpsb
shll
fadd
jae
cmc
mov
scas
sbb
pop
dec
push
movsb
xor
mov
and
sti
inc
out
xchg
pop
out
and
xor
imul
sbb
dec
loopne
mov
xchg
push
jl
push
ja
push
setae
inc
sub
xor
ds
xchg
adc
popl
mov
mov
cmp
sbb
add
cmp
test
hlt
test
stos
dec
in
and
pop
mov
adc
clc
and
sub
mov
or
xchg
clc
mov
or
cld
cmp
bnd
mov
lret
dec
push
scas
inc
add
adc
cltd
adc
inc
or
fsubr
adc
sbb
mov
adc
jbe
xchg
and
les
adc
pusha
push
mov
jne
fsubrl
lods
add
test
ret
sub
aas
xor
xlat
xor
lahf
cmc
sub
add
gs
mov
push
cmp
fisttpll
and
in
shlb
cmp
mov
push
out
fs
adc
shll
xchg
sub
clc
lret
mov
lds
lahf
testl
stos
cmp
enter
sti
adc
cmp
xchg
cmpsb
cltd
ret
jg
mov
push
mov
lods
out
outsb
xchg
hlt
arpl
cli
xchg
cmp
jns
in
mov
adc
cltd
movsl
scas
jge
or
iret
lods
test
xchg
xchg
sarl
lds
mov
xlat
outsl
in
test
mov
mov
dec
daa
xchg
cmp
lock
sbb
jbe
scas
es
icebp
popf
or
mulb
push
lods
lods
sub
ror
rol
mov
cs
or
pop
sub
xorb
stc
xor
insl
sarb
xchg
repnz
in
mov
cmc
mov
loopne,pt
sub
sar
int3
jb
mov
cltd
cld
jnp
jae
jl
lret
adc
cmpsl
pop
gs
jle
ja
mov
cmp
fwait
xchg
and
pop
fnstsw
fbstp
neg
shr
int
sbb
dec
loop
push
add
lahf
sub
hlt
pop
adc
push
jmp
aas
mov
gs
mov
and
cmp
add
stc
outsl
dec
popf
lds
arpl
outsb
mov
jmp
lods
nop
xchg
mov
inc
pop
mov
pop
mov
sub
test
insb
leave
outsl
sarl
mov
or
jl
in
je
inc
adcl
ja
pop
aad
push
cmpsb
ret
inc
jne
cmp
lods
loopne
popf
loop
mov
sbb
mov
outsl
cmp
push
imul
out
mov
jns
mov
push
inc
xor
add
mov
mov
jo
arpl
add
mov
jle
and
cmpsb
mov
shrl
sbb
cltd
pop
cmp
jge
push
and
iret
xchg
adc
mov
jecxz
lods
inc
dec
jb
jecxz
jne
rcl
push
or
dec
mov
test
aam
loope
inc
mov
cmp
mov
lret
test
pop
addr16
arpl
pushf
dec
sbb
cwtl
aaa
lods
mov
stc
mov
jmp
inc
out
pop
mov
lret
jecxz
xor
lods
push
mov
pushf
into
aam
sbb
adc
or
and
cmc
xchg
and
rclb
jmp
and
xchg
mov
add
jb
cmp
aas
out
pusha
inc
inc
mov
fstpt
mov
add
mov
loope
sti
xor
sbb
scas
pop
pop
test
out
into
jecxz
and
rorb
loope
in
hlt
dec
inc
pop
andl
push
and
outsl
lock
jo
or
sarl
shrl
mov
gs
orl
bound
leave
adc
mov
inc
dec
sbb
inc
insb
outsb
xor
in
sbb
mov
fists
mov
in
outsl
fistps
mov
sbb
stc
sbb
add
jge
in
fisttpl
mov
std
mov
pushf
ljmp
xchg
jb
sahf
je
nop
dec
adc
jl
cld
push
iret
cltd
push
in
lret
mov
xchg
mov
movsl
test
mov
fwait
mov
jnp
pop
ljmp
cmp
gs
mov
test
nop
dec
outsb
add
pop
mov
sbb
sbb
cmpsl
int
scas
dec
sti
test
xchg
call
dec
cmc
cmp
cmp
mov
imul
outsl
lcall
adc
xor
adcl
pop
cmp
mov
fcmovnb
insb
fs
pushl
jmp
fsts
test
sbb
cs
in
test
pushf
sbb
lcall
xchg
add
popa
loopne
lea
xchg
push
add
test
sbb
add
mov
mov
lret
sbb
pop
orl
mov
ret
cs
hlt
call
pop
xchg
xor
pop
jno
imulb
es
inc
data16
daa
cmp
test
inc
lock
nop
lcall
ljmp
inc
call
add
pop
pop
iret
xchg
xor
push
mov
lods
push
gs
fcoms
fdivrl
jmp
scas
xchg
mov
inc
es
fistps
cmp
sbb
jb
mov
addr16
scas
outsl
dec
pop
leave
ljmp
dec
pop
fstl
cmpsl
call
addr16
rorb
sarb
negb
pop
repnz
in
add
xor
sub
lcall
test
or
xor
fwait
dec
adc
shlb
jecxz
aas
cmova
into
out
sar
xor
pop
lret
loopne
push
or
push
test
fistpll
push
jle
xor
shl
inc
out
mov
into
adc
sub
or
add
inc
sbb
jnp
pop
mov
mov
pop
jbe
sbb
call
mov
dec
and
cmp
aas
subl
push
fsts
cli
push
xchg
add
scas
jns
hlt
arpl
inc
in
xchg
das
pop
mov
adc
sub
pusha
dec
nop
xor
pop
into
or
add
lods
push
xchg
adc
adc
mov
add
sahf
shrl
jmp
xor
into
ja
out
xchg
dec
jmp
dec
mov
push
inc
and
lods
cld
mov
iret
pop
repz
pop
inc
loopne
push
inc
jecxz
lods
jbe
xchg
fwait
mov
insl
movsb
ret
sub
push
or
dec
idivb
cmp
add
or
and
and
leave
sbb
int
lods
lock
xor
lds
movsl
movsl
mov
fs
lds
jns
shl
shrb
test
dec
into
lods
sbbl
imul
scas
and
rcll
jmp
xchg
jns
iret
popf
mov
stc
shll
aas
cmc
pop
jle
cmp
mov
fstp
cmp
repnz
inc
add
mov
les
rclb
sbb
out
dec
std
shl
aad
hlt
incl
call
int3
cli
mov
sub
in
or
push
xchg
mov
jb
loop
movsb
imul
lock
jmp
fld
adc
jno
fists
or
dec
xchg
jmp
inc
mov
dec
sub
shlb
mov
lods
pop
dec
pop
mov
ret
mov
dec
jne
jae
lahf
pop
imul
adc
insl
xchg
sbb
add
xchg
fwait
adc
adc
mulb
lret
cmp
fistpl
fwait
sub
aas
xchg
dec
pop
pop
adc
dec
fcomip
cltd
xor
sbbb
outsb
jbe
bound
scas
fs
xor
lahf
and
ret
inc
shrl
stos
xor
mov
pop
push
fdivr
xchg
fsubrl
scas
test
stos
repnz
outsb
push
inc
loope
cs
inc
les
out
ret
or
cwtl
cmc
inc
mov
mov
lods
fs
imul
pop
test
inc
test
inc
bound
movsl
cltd
rcrl
sub
insl
push
adc
cmp
iret
inc
adc
sub
icebp
sbb
fcompl
push
mov
sbb
out
shl
add
push
jo
dec
hlt
cld
add
lds
add
sbb
or
insl
or
sub
mov
loop
add
xchg
hlt
dec
jle
push
mov
fstps
outsl
mov
xor
and
jecxz
inc
xchg
data16
fsubrl
pop
pushf
and
jg
xchg
daa
push
std
jg
xlat
pushf
dec
sti
dec
mov
push
fimuls
sub
test
dec
cwtl
jg
icebp
es
sub
test
xchg
xchg
adc
mov
inc
push
popa
mov
popf
lcall
mov
sub
leave
popa
test
test
fcomps
push
jmp
mov
jbe
out
enter
jp
inc
push
rorl
xchg
dec
xchg
push
repz
fcomps
dec
inc
sbb
int3
leave
arpl
jmp
daa
adc
in
frstor
fisttpl
sahf
dec
add
dec
outsb
insb
in
jo
adc
mov
mov
xor
daa
je
outsl
jo
arpl
scas
pop
test
mov
sahf
jbe
adc
or
sbb
movsb
loope
xchg
or
arpl
sbb
lea
mov
adc
pop
sub
jbe
jge
jb
pop
cmp
loop
vcvtsi2sdl
in
mov
mov
dec
sbb
sub
jl
mov
sarb
inc
out
pop
movsb
add
outsb
or
cmpsl
outsb
xor
sbb
shrb
push
repnz
cli
in
iret
pop
jge
lock
xchg
sub
jns,pt
jp
jne
test
inc
mov
ljmpw
faddl
pop
pop
shrl
push
into
add
add
pop
cmc
popf
mov
int
dec
sub
push
xchg
dec
mov
lret
mov
pusha
mov
xchg
in
mov
dec
jnp
sbb
push
push
lods
mov
outsl
repnz
push
repnz
movsb
inc
mov
jg
xor
arpl
mov
dec
push
add
or
add
adc
inc
inc
cmp
push
ret
sbb
lea
cmc
pop
fnstcw
mov
fs
int
insb
jae
gs
fidivrl
cld
jno
jno
aas
lcall
pop
mov
push
aam
leave
cmp
add
xlat
cmp
or
popf
ror
mov
lret
out
and
outsb
daa
xlat
aas
lret
aaa
sbb
lods
insb
push
and
rcrl
dec
mov
jmp
and
sub
rcl
in
int
mov
inc
hlt
aad
adc
jge
fsub
inc
xchg
out
fcmovnbe
lcall
sti
mov
icebp
hlt
lods
jne
pop
push
insl
adc
jmp
and
pop
xor
mov
lds
push
xchg
scas
not
jmp
in
mov
cmp
loopne
aaa
repnz
fists
jecxz
test
and
pop
enter
scas
sbb
mov
dec
sub
cmpsl
aad
imul
stc
fisubs
sub
shrl
inc
int
stos
aad
inc
idivl
jmp
push
pop
cltd
pop
mov
dec
sub
mov
mov
jnp
shll
sbb
add
add
mov
je
ja
in
ja
and
cmp
dec
scas
icebp
data16
mov
dec
adc
das
dec
push
faddp
mov
dec
test
mov
jno
and
adc
movl
gs
inc
jo
or
jl
push
mov
jge
inc
cmpsb
rcrl
or
xchg
add
dec
cltd
mov
mov
pop
imul
mov
add
movsl
and
add
add
sub
int
jne
xchg
or
lock
ljmp
mov
je
ficoml
adc
imul
adc
sub
shll
mov
aad
outsb
push
and
fnstcw
and
addr16
out
pandn
test
jnp
testl
fldl
and
enter
fs
in
int3
js
mov
adc
jb
icebp
pushf
fcmovnu
mov
inc
mov
jecxz
push
sbb
addr16
jbe
fcomp
sbb
pop
pusha
addb
pop
aaa
adc
sub
sbb
inc
les
cld
adc
fldenv
adc
dec
out
ret
enter
in
jnp
jmp
sbbl
sarl
mov
mov
and
out
xchg
mov
push
cmp
out
fistps
idivb
dec
call
movsl
add
lret
push
addr16
loopne
fistpl
cmp
cli
clc
jbe
sbb
mov
lcall
sbb
cmp
mov
icebp
dec
cltd
jmp
pushf
fldenv
pop
test
jmp
rcr
push
inc
pushf
mull
inc
cli
cmp
lret
adc
hlt
arpl
jae
xchg
ja
jb
or
cmp
je
pusha
jmp
xor
out
or
or
pop
sbb
insl
scas
mov
sbb
xor
inc
or
and
sarb
pushf
loop
aaa
fistpll
fnstcw
adc
jbe
int3
out
cmp
bound
xchg
xlat
xchg
gs
push
inc
popa
push
out
pop
add
lret
dec
jmp
repz
clc
sub
aad
pushf
jne
call
pop
cmp
shll
dec
mov
je
das
ret
xchg
jl
loopne
test
xchg
orb
sbb
push
mov
stos
xchg
push
jb
push
mov
adc
and
dec
adcl
mov
mov
rcll
pop
xor
jecxz
and
sbb
insb
loope
out
mov
pop
aad
sub
add
dec
inc
mov
hlt
and
sbb
xchg
fistl
sbb
push
dec
aam
xor
jb
neg
xor
cmp
scas
xchg
pop
or
rsm
inc
mov
mov
or
ljmp
aaa
test
or
adc
mov
push
dec
insl
and
outsl
push
mov
xchg
mov
jnp
mov
push
andl
mov
cmc
mov
movsl
scas
outsl
xchg
mov
jns
mov
orl
dec
pop
lds
shlb
and
not
jbe
loop
aam
outsb
xchg
int3
jecxz
add
jne
lret
xchg
cmp
lods
jp
mov
pushf
cltd
push
out
adc
push
adc
dec
jle
in
lcall
xchg
or
lcall
std
pop
popa
jge
imul
mov
sbb
inc
push
iret
fisubrs
mov
ljmp
inc
scas
ficoml
mov
jno
rorl
mov
pop
das
cmp
push
push
dec
std
mov
adc
mov
test
sahf
jl
xchg
movsl
add
repnz
lret
cmp
mov
pop
inc
jge
notb
push
ja
dec
insl
mov
push
push
cmpsb
push
jbe
clc
mov
cmp
inc
shlb
inc
sub
lcall
sbb
sub
push
xor
stos
ret
out
roll
rolb
push
lea
xlat
fs
lods
push
out
jge
inc
aas
out
call
push
pop
mov
xor
push
jmp
call
sbb
dec
dec
ret
popf
aaa
lods
iret
imull
je
jmp
in
adc
dec
push
inc
ret
sbb
sbb
in
add
jns
leave
movsl
in
inc
sbb
add
aad
je
sti
jecxz
push
dec
cwtl
sbb
xchg
cli
aas
pop
fdivl
dec
lods
sbb
gs
mov
pop
mov
or
push
jle
mov
fwait
add
dec
mov
popf
xor
or
cmp
out
mov
fcmovnu
js
dec
imul
adc
push
rorl
cmpsb
xor
ja
imul
mov
or
jnp
pop
inc
xchg
sarb
into
pop
push
push
push
inc
xchg
cmpb
daa
das
rcrb
leave
mov
js
add
or
mov
arpl
adc
adc
sbb
mov
pop
pop
add
out
sub
lock
in
adc
aam
mov
arpl
xor
xor
into
scas
lcall
cmp
cmpl
dec
push
mov
mov
repz
xchg
call
test
lahf
fldcw
aam
dec
cwtl
xchg
mov
pop
mov
fcomip
adc
sub
cltd
jb
pusha
in
sbb
cmc
adc
test
inc
jp
dec
pusha
mov
pop
inc
and
outsb
inc
aas
gs
adc
stc
mov
mov
mov
fwait
pop
pop
movsl
dec
cld
pop
or
jmp
cmp
push
push
pop
test
ret
mov
mov
cmp
int
sbb
out
and
stc
movsb
nop
inc
and
pop
shll
xchg
sub
push
aas
mov
push
push
adc
das
fsubl
outsb
adc
sahf
mov
test
xchg
mov
push
gs
lret
inc
push
sub
sub
or
cltd
loop
inc
hlt
adcl
jle
aas
mov
jg,pt
mov
fcomip
popa
sbb
mov
int3
mov
jo
outsl
aaa
xchg
and
ljmp
jne
sarb
fwait
mov
sbb
loopne
mov
das
arpl
sub
insl
test
and
or
jecxz
sbb
je
cmp
loop
xchg
push
mov
insb
add
pop
stc
jecxz
dec
int3
pop
jmp
loop
sbbb
xchg
fimuls
dec
mov
or
pusha
xchg
xchg
add
js
push
fsubs
sbbb
sub
jge
ficoms
mov
pop
sarb
add
stc
push
sbb
ss
jecxz
mov
into
je
in
mov
mov
in
xor
test
dec
push
call
int
mul
test
addl
aaa
jae
nop
push
add
fistps
rorb
shll
inc
mov
lahf
dec
test
sub
aad
push
or
mov
movsb
sub
int3
adc
sub
dec
xchg
jo
lret
xchg
lret
loopne
xor
dec
mov
push
mov
jno
das
ljmp
imul
leave
daa
jnp
fidivrl
sbb
adc
push
xlat
pop
pop
lret
andl
mov
cld
aaa
scas
in
hlt
pop
mov
jmp
mov
lahf
mov
inc
into
jg
jmp
pop
and
sub
adc
dec
aaa
and
roll
stos
add
test
cmp
mov
std
data16
jnp
or
xchg
ss
sbb
rorb
cmp
cmpsl
cli
xor
mov
xor
lock
dec
popf
ja
fs
sub
divl
pop
test
dec
mov
cld
or
or
xor
mov
jns
repz
dec
fsubrl
dec
iret
mov
jns
dec
mov
dec
mov
fisttpl
in
nop
or
cmp
outsb
dec
push
pushf
mov
push
push
les
arpl
movsl
cmp
ds
pop
dec
into
lods
sbb
nop
mov
pop
jmp
jns
scas
hlt
sbb
fidivrs
mov
stos
cmpsb
mov
cmp
inc
into
fnsave
outsb
xorl
cmp
imul
mov
sarb
xor
fidivrs
das
cs
movsb
add
push
fsubrp
fsubl
call
xor
into
cmp
fs
push
add
inc
fildl
movq
or
nop
rcl
cmp
lahf
imul
fisttpl
ljmp
shrb
icebp
xchg
ret
out
jg
jno
dec
and
add
frstor
mov
pop
fildl
mov
cmp
pusha
cld
daa
cmp
sahf
or
inc
mov
add
aas
shll
cmc
pop
sbb
cli
xchg
stos
jne
in
fwait
aam
and
jbe
pop
cmp
or
push
push
xchg
in
mov
adc
pop
jns
sbb
jo
sti
in
shlb
in
mov
pop
ja
fxch
std
in
xchg
sbb
movsb
lret
daa
nop
sbb
lods
int
fsubrl
outsl
xor
and
lods
xchg
inc
pop
pop
and
or
xchg
xor
and
xchg
pop
in
push
test
push
fistpl
das
mov
pop
jg
les
fnstcw
iret
loopne
mov
movsb
dec
mov
mov
jno
dec
jae
cmp
in
pop
nopl
inc
inc
imul
sbb
adc
dec
mov
popa
adc
ja
cmpsb
mov
hlt
cmc
fs
jb
jmp
stos
sahf
or
xor
inc
cmp
inc
aas
popf
push
mov
popl
mov
jb
jo
insl
inc
sub
add
add
mov
inc
nop
lcall
jae
and
ds
jns
mov
push
aad
rcr
or
sub
cmp
sub
add
xor
loopne
jge
mov
push
inc
aam
push
enter
mov
aad
push
in
push
or
jns
fcoml
nop
hlt
mov
fldcw
xor
cltd
xorl
call
sbb
pop
or
mov
lahf
push
int3
push
dec
loop
cld
idivb
mov
jecxz
dec
mov
pop
fdivs
mov
dec
ret
scas
mov
scas
add
divb
jo
in
sub
jge
stc
aaa
mov
jb
mov
dec
xchg
lret
lret
inc
stos
push
jl
in
jnp
es
jnp
cmp
or
inc
popf
es
iret
cmp
enter
lock
sbb
mov
ret
lahf
outsb
leave
mov
push
or
cmp
fdivrs
pop
jno
xchg
adc
pop
dec
arpl
inc
mov
xchg
inc
pop
pusha
pop
mov
pusha
in
and
mulb
sub
jle
lods
in
aaa
xchg
xchg
dec
add
inc
sbb
xor
pop
mov
outsl
repnz
jno
or
inc
sbb
call
popa
bound
cmpsl
push
push
jne
mov
push
gs
push
push
jp
cmpsb
dec
sbb
mov
mulb
orl
mov
push
stos
push
fldcw
pop
mov
dec
jg
inc
test
and
in
sub
sub
xchg
outsl
fnstsw
xor
in
jg
push
dec
dec
and
ret
xlat
jae
adc
mov
inc
inc
add
loope
adc
xor
and
sub
outsb
test
or
shll
or
pop
loope
int
sub
jnp
dec
mov
popa
or
dec
cmp
add
std
lret
movsl
js
xor
sub
int
lret
clc
adc
sahf
rclb
insl
xchg
out
add
and
xchg
ror
imulb
xor
jbe
xchg
cmp
add
inc
xchg
add
in
mov
outsb
in
sti
adc
ret
xorl
cltd
flds
test
loop
jbe
dec
add
sub
mov
ret
shll
ljmp
sub
hlt
pop
adc
jbe
xchg
cmp
sarb
pop
add
add
call
cmp
jnp
and
cmp
mov
jo
adc
xchg
rcrl
mov
sub
stc
clc
xchg
in
ficoml
rcll
pusha
mov
stos
mov
mov
or
daa
mov
jne
jecxz
push
adc
sahf
orl
ss
jg
jno
hlt
andb
dec
call
ljmp
ss
push
arpl
add
loopne
ret
insb
mov
or
movb
xchg
aad
sbb
push
mov
jns
cmp
or
jmp
sbb
lock
cmpsl
add
mov
cld
dec
out
fadd
lods
mov
jmp
les
shll
dec
xchg
bound
in
outsl
out
test
decl
ljmp
inc
inc
and
jp
test
xchg
rolb
pop
sub
pop
inc
mov
ret
mov
jg
insl
and
rol
mov
imul
test
push
dec
mov
nop
arpl
inc
push
mov
sub
stc
cmp
mov
out
fidivs
add
and
jle
fnstsw
push
mov
imul
inc
xchg
xchg
testb
add
dec
rclb
outsb
push
push
adc
xor
repnz
mov
mov
jmp
mov
aaa
stos
sub
jno
mov
js
lea
xor
xor
inc
hlt
jg
int3
cmp
mov
or
ret
outsb
add
cmc
xor
and
arpl
mov
fildll
out
cmp
mov
dec
call
adc
enter
cmp
dec
add
xchg
decl
inc
mov
mov
fcomi
loopne
movsl
repz
sbb
mov
das
jnp
ljmp
xchg
mov
mov
xchg
cli
mov
mov
push
cwtl
mov
dec
arpl
inc
pop
or
cmc
pop
sub
imul
add
cmp
add
dec
rcr
cmp
inc
stos
sti
hlt
incb
movsb
in
aaa
pop
cwtl
xor
jns
dec
loopne
adcb
insb
sbb
pop
ret
jbe
lret
cmpsl
xor
outsl
pop
pop
cmp
jl
xlat
test
push
nop
mov
in
je
jnp
jmp
aad
pop
xor
dec
adc
test
cmp
jo
jmp
lds
or
cli
repz
daa
mov
ja
cwtl
xor
cltd
popf
sbb
ret
xor
jmp
out
mov
xchg
push
in
insl
aaa
gs
mov
sub
add
aas
les
jge
data16
mov
jae
enter
add
mov
stc
dec
jg
aad
sub
push
lock
inc
dec
pop
mov
push
jle
sbb
bswap
pop
sahf
fsubp
iret
js,pt
outsb
cmp
icebp
insb
sub
pcmpeqb
mov
lcall
inc
jmp
in
xor
push
cs
mov
scas
push
pop
fwait
aas
das
jmp
repz
fnstenv
xchg
mov
cld
push
mov
pop
push
mov
adc
jmp
imul
pop
mov
mov
jnp
cmp
sub
jmp
mov
jecxz
or
mov
subb
mov
or
imul
loopne
lcall
inc
into
mov
mov
dec
dec
outsl
push
movsb
daa
ror
nop
cmc
ficoml
push
xor
dec
int3
cwtl
sarb
xchg
cld
int3
adc
adc
sbb
sub
imul
shl
add
jge
lock
loopne
movsl
and
xchg
out
mov
sbb
pop
fs
in
repnz
xchg
lods
idivl
xchg
lret
je
mov
scas
mov
add
dec
aam
xchg
lret
jb
movsl
fwait
inc
sti
xor
adc
dec
add
sbb
cmp
loope
inc
nop
jmp
xchg
sbb
call
ljmp
not
enter
xorl
je
arpl
push
test
test
cmp
jmp
cs
cmp
out
jne
test
push
or
sbb
adc
imul
and
push
mov
imul
pop
pop
mov
or
icebp
xor
cmp
cwtl
sbb
lret
dec
pop
das
dec
call
push
fcmovbe
leave
or
das
mov
xchg
ret
repnz
cld
and
inc
inc
inc
fstpl
hlt
sub
xchg
cmp
mov
dec
nop
inc
jp
inc
std
push
lods
or
lcall
icebp
dec
jmp
sub
jmp
push
xor
inc
lods
and
cmp
in
or
push
loope
cmp
int3
inc
dec
sbb
xor
shrb
jns
std
jns
test
xor
fwait
test
stos
mov
xchg
in
aam
imul
cmp
and
scas
ss
sub
pop
lret
adc
push
outsb
daa
xchg
imul
xor
rorl
js
inc
iret
mov
lcall
mov
mov
cmp
aam
pushf
dec
mov
cld
clc
insl
sbb
fcos
jle
and
cmc
cmp
adc
inc
mov
sub
push
mov
jle
pusha
out
sbb
movsl
and
jmp
std
inc
out
inc
iret
and
cmp
rorl
inc
hlt
sub
lds
pop
ja
mov
adc
mov
out
jl
sub
sbbb
adc
xchg
lret
mov
sbb
fwait
xlat
xor
and
lea
mov
mov
cmp
mov
fwait
mov
xlat
leave
loopne
push
inc
test
jg
sahf
subl
mov
pop
loop
push
add
mov
push
and
xchg
dec
push
mov
xchg
jge
in
jb
and
pop
push
shl
sbb
push
push
lahf
mov
test
sti
cmp
fcoml
inc
adcb
adc
ret
sbb
movsb
fisubs
add
enter
xor
lock
andl
xchg
ljmp
movsl
cmc
mov
or
lcall
loope
repz
pop
mov
fcoml
lret
fldl
imul
pop
cmc
or
test
mov
fucomip
pop
repnz
sbb
mov
dec
jmp
mov
cmp
mov
sbb
xchg
push
cmp
pop
jl
repz
rclb
ficoms
mov
push
sub
dec
dec
mov
and
cmc
xchg
sahf
push
negb
aaa
test
mov
push
xchg
idivb
mov
les
cmpsb
bsr
js
ljmp
cmp
adc
mov
or
pop
add
scas
xchg
lret
jg
lahf
outsl
push
dec
and
popa
call
add
xor
or
jbe
call
ret
js
aaa
pop
sbbb
and
push
jl
xor
xor
aaa
fwait
jg
test
sub
fldcw
push
xchg
sbb
hlt
imul
dec
push
add
mov
pop
aaa
xchg
xor
sbb
inc
sub
ds
mov
lahf
in
gs
cmpsl
movsb
clc
fnsave
xlat
jg
dec
sbb
repz
sbbb
cmc
mov
call
push
movsl
ds
push
dec
outsb
pop
dec
fwait
inc
inc
out
pop
pop
pushw
cwtl
push
mov
mov
cmp
xchg
push
jb
xor
lock
notl
pop
sbb
adc
mov
insb
push
and
mov
mov
jp
dec
inc
adc
push
push
cmpsb
dec
aam
cltd
mov
jmp
imul
sub
sbb
add
mov
repz
hlt
adc
shlb
jnp
loop
xchg
and
mov
ja
mov
dec
sub
scas
loope
scas
scas
pop
popf
jne
add
sbb
or
lcall
test
or
sbb
mov
rclb
lods
or
inc
movsl
pop
xor
lds
shl
mov
xchg
in
xor
hlt
inc
mov
jmp
int
icebp
push
pusha
movsb
adc
daa
dec
hlt
cmp
cmp
mov
push
sbb
pushf
cmpsl
jae
add
dec
fidivrl
fs
inc
mov
cwtl
aad
xlat
dec
cmc
pop
ret
ret
lds
add
stos
pusha
int
cmc
adc
mov
xchg
stos
cmpsb
push
dec
loop
and
pop
ds
add
negb
fdivs
or
cs
ss
dec
dec
arpl
outsb
push
push
faddp
movsb
add
jle
jbe
mov
pushf
and
out
xor
test
pop
shrl
and
sbb
shll
outsb
cs
out
lods
ja
jl
cmp
sarl
xchg
push
fnstenv
insb
sti
push
mov
je
negb
loop
or
xchg
push
cld
out
mov
push
aad
pop
dec
fsts
fsubr
call
or
arpl
leave
adcb
xchg
xor
or
jno
sbb
jp
repz
sahf
pop
out
fists
fiaddl
inc
xchg
lret
inc
int3
mov
adcl
xchg
sbb
clc
sbb
push
pop
sub
movl
push
test
pop
dec
sbb
sbb
les
int3
or
imul
inc
ds
mov
imul
sarl
push
adc
mov
arpl
shrl
pop
xor
flds
es
jns
mov
ficompl
sub
dec
lahf
cli
mov
add
dec
xor
out
mov
fcmovbe
and
dec
mov
repz
add
loopne
mov
ficoms
and
push
lods
pop
and
in
mov
add
sbb
mov
fwait
push
adc
lods
push
outsb
inc
icebp
pop
xchg
mov
mov
jp
dec
fstps
sarl
js
jnp
inc
in
or
jnp
iret
cmp
test
sar
addr16
mov
and
push
orb
insl
frstor
jle
stos
stc
push
sub
add
pop
jle
iret
add
jo
decb
or
int3
or
out
divl
stos
push
je
call
inc
pusha
sbb
aad
inc
mov
cmp
int
repz
test
lods
ja
sti
adc
dec
cli
push
loope
sub
pop
out
lcall
jno
cltd
adc
xchg
fdivl
pop
aas
or
filds
sub
out
mov
adc
rorb
in
movsl
mov
lret
jbe
outsl
pop
hlt
pop
cmpsb
int
ja
mov
add
lods
loope
test
loop
add
xor
rcrl
aaa
jne
fldl
mov
pop
cmc
push
xchg
in
dec
cs
in
add
lahf
or
imul
test
daa
popf
cmp
in
pop
ja
xor
xchg
push
aad
js
inc
out
push
nop
add
pop
sar
outsb
sbb
push
push
fbstp
lea
ja
push
add
in
mov
lds
jg
push
mov
int3
punpckhwd
call
inc
rcr
jmp
fidivrl
mov
call
push
out
aad
lcall
rcrb
jp
outsb
popa
xor
icebp
fsubl
xchg
cmp
ds
fsubl
pop
js
push
xchg
lods
mov
mov
mov
pop
add
inc
test
lcall
mov
pop
xchg
cli
mov
push
xchg
cli
fists
sbb
outsb
sub
pop
pop
jl
pop
pop
test
add
das
push
sbb
adc
jo
mov
movsb
mov
leave
and
adc
or
nop
repz
mov
out
imul
and
scas
cmp
adc
jl
stos
jle
inc
sub
adc
fnstenv
jbe
pop
xor
scas
repz
cmpsl
cwtl
inc
xchg
rclb
into
in
rorb
sbb
insl
loope
ss
scas
jae
cld
pushf
aas
inc
shlb
xchg
pop
mov
xor
or
pop
in
pop
adc
sub
lret
leave
lret
push
xor
ja
insb
bound
mov
addr16
sbb
testl
sub
xor
inc
and
dec
popa
mov
fld
shlb
xorb
insb
inc
mov
in
adc
jmp
and
loop
push
push
sub
call
in
or
push
push
lret
mov
jo
mov
imul
or
stc
sbb
sbb
sti
inc
dec
into
test
test
mov
jno
dec
mov
xchg
sub
xchg
sub
aas
xor
sub
mov
loopne
cmp
cmp
cwtl
testb
fildll
xchg
push
mov
jnp
pop
in
and
enter
xchg
xor
test
stos
cmpsl
cmp
jnp
jmp
mov
and
dec
out
test
sub
cmpsb
dec
or
dec
fbld
insl
stos
hlt
cmp
add
cs
scas
test
mov
push
mov
loope
outsb
mov
jne
jg
lahf
or
sub
lcall
psubusb
mov
ret
push
dec
mov
inc
sbb
xchg
ja
xor
add
jg
lock
dec
ss
push
ret
mov
cmp
rolb
push
hlt
sub
test
insl
mov
adc
hlt
repz
sub
jno
adc
out
stos
inc
sbb
cli
pop
imul
test
fldt
notb
or
fimull
jg
and
pushf
and
paddsb
bound
fnstcw
mulb
sbb
mov
adc
negb
ljmp
fnstcw
fiaddl
test
cmp
imul
stos
hlt
loop
push
aaa
test
shll
dec
jg
pop
mov
bound
mov
idivl
pop
sbb
add
aam
mov
movsl
xor
jbe
mov
xchg
cmpsl
nop
mov
mov
sub
inc
subl
lcall
inc
ret
cwtl
int
outsl
cld
decl
js
xor
in
push
int
out
outsb
mov
push
pop
cltd
rclb
scas
xchg
pop
adc
cmpsb
sub
sub
lock
aas
dec
lahf
fwait
sbb
mov
sub
adc
in
push
or
fcomp
iret
xor
pop
mov
adc
cmp
vpcmpgtw
pop
pop
jb
xchg
xor
inc
inc
cmp
cmp
mov
mov
sbb
push
jmp
repz
cld
adc
push
mov
bound
mov
sub
pop
mov
fsubrs
mov
and
dec
xlat
pop
stos
push
fwait
ret
ret
jne
push
xor
into
mov
inc
lcall
cwtl
mov
sub
fidivl
ds
test
jo
mov
daa
xchg
fdivr
or
add
xchg
push
cmpsb
push
out
or
xchg
loop
fstl
and
aas
fcomps
mov
sub
cwtl
es
aam
mov
or
jb
test
out
or
int3
or
out
and
incl
stos
mov
iret
and
xor
xchg
add
insl
roll
push
pop
xchg
ja
pusha
pop
outsb
xchg
jecxz
pop
sub
mov
push
sbb
push
adc
js
and
and
jecxz
add
pop
outsl
stos
dec
adc
adc
and
testl
push
loopne
nop
bound
mov
xor
cmpsb
in
notb
xchg
roll
and
daa
push
sbb
xor
pop
mov
pop
cld
sbb
shl
in
repz
inc
shrl
fnstcw
cmp
pusha
outsl
sahf
mov
cwtl
jnp
pop
mov
into
mov
mov
push
insb
clc
cmpsl
jnp
insl
scas
neg
cmp
setge
dec
and
iret
or
pop
sti
jle
rorl
mov
addb
int3
out
sbb
sti
pop
xchg
outsb
pop
mov
addr16
push
adc
push
jne
sub
xchg
sbb
hlt
or
into
lods
mov
test
add
out
cmp
loop
xchg
add
xchg
call
push
out
loope
pop
mov
adc
dec
lret
gs
aam
adc
cmp
pop
movsb
inc
sub
cs
mov
pop
dec
fmull
xor
mov
lock
shl
mov
scas
mov
pop
or
sbb
movsl
push
lock
inc
push
lcall
cmp
xchg
aas
add
inc
notb
and
xchg
jnp
inc
cmp
popf
xor
inc
es
mov
test
nop
inc
cmp
jnp
sub
divb
pop
xchg
inc
xor
fdivrs
add
mov
sbbl
push
jg
movsl
mov
lcall
pop
lods
cltd
in
jmp
fdivrl
gs
and
mov
mov
mov
adc
add
sub
inc
sbb
push
sub
inc
out
sub
push
sbb
and
jnp
cli
mov
sub
je
lret
sbbl
pop
and
out
pop
adc
mov
jns
xor
push
std
pop
jge
int
adc
xchg
or
sub
js
les
test
pop
sarb
cmpsb
cmp
push
aas
jle
sahf
fadds
pop
mov
inc
jnp
adc
cmp
ret
lret
ret
adc
stos
cmp
xor
push
sub
divps
repz
fnsave
pop
les
add
adc
add
xchg
inc
push
jns
iret
pop
fcompl
fstpt
inc
mov
pop
lods
loopne
fcmovnu
insl
xchg
add
jge
imul
cmp
test
je
setl
lds
xchg
into
xor
int3
jno
shrb
xchg
inc
mov
inc
adc
mov
das
lahf
nop
xor
sbb
ret
int
jmp
mov
xor
frstor
das
mov
fucomi
repnz
jl
add
into
pop
or
mov
loopne
inc
mov
push
pop
sub
lock
movsb
scas
sbb
cld
lods
imul
enter
add
or
mov
shlb
repnz
pop
cwtl
push
add
and
test
sub
inc
mov
ljmp
dec
lods
in
gs
mov
enter
lds
stos
dec
inc
pop
hlt
add
mov
addl
divb
hlt
dec
nop
xor
mov
cmp
test
cmp
outsl
inc
push
or
adc
xchg
or
mov
xchg
jg
clc
cmc
negl
sub
stos
xor
out
fbstp
notl
sbb
movsb
jecxz
sbb
mov
mov
pop
add
out
pop
popf
mov
bound
vandnps
sarl
shlb
xchg
daa
jecxz
fbld
ficoms
cld
and
or
dec
sub
pushf
aam
mov
push
cmp
dec
outsb
mov
or
push
fwait
cmp
inc
pop
sub
bound
xchg
dec
aam
das
mov
add
xchg
enter
adc
xchg
out
sahf
ss
fildl
cwtl
mov
mov
cld
xchg
jmp
aam
push
sub
or
inc
dec
ror
jno
call
mov
testl
int3
add
int
push
int
out
sub
xlat
xchg
scas
orl
dec
movsb
scas
nop
es
dec
inc
pushf
rorb
repz
shl
add
push
int3
mov
ds
ss
and
xor
test
leave
or
sub
add
adc
xchg
loopne
lea
nop
pop
fldl
cmp
dec
mov
lods
mov
iret
pop
aad
push
add
pop
dec
in
adc
addr16
arpl
shlb
push
fcoms
std
cmp
add
xchg
or
sbb
std
aaa
test
xchg
sbb
in
out
inc
push
js
iret
cmp
aaa
sbbb
hlt
repnz
leave
int3
sub
adc
pop
popf
lds
fs
pop
sbbb
sub
lahf
data16
cltd
std
and
pop
andps
inc
fildll
hlt
xchg
add
nop
adc
aam
jp
repnz
push
push
push
mov
and
call
jb
lds
jbe
out
popf
imul
mov
inc
xor
sahf
xchg
ljmp
dec
dec
divl
es
int3
pop
js
es
adc
push
les
ss
int3
mov
int
and
mov
mov
ljmp
mov
or
push
repnz
add
adcl
sub
cmc
pop
and
jl
dec
pop
sbb
aas
push
fistl
jno
out
cwtl
xlat
outsl
lahf
scas
stos
or
jecxz
icebp
mov
xor
xchg
fucomi
leave
leave
mov
sub
mov
rclb
sbb
mov
jbe
shl
js
push
mov
push
sub
adc
rclb
cmpsl
jno
fdivs
fimull
add
xor
mov
and
mov
in
ss
sbb
lahf
rcll
sub
mov
adc
add
aam
rorb
mov
stos
mov
sahf
cmp
mov
mov
inc
dec
mov
scas
xor
ds
mov
jp
mov
inc
and
jmp
jecxz,pn
mov
dec
sbb
xor
sbbl
imul
xor
jp
sub
or
fidivs
fwait
jg
imul
or
xchg
cltd
mov
xchg
stos
add
inc
popf
mov
dec
sub
popa
and
les
jbe
push
cmp
mov
test
mov
or
jp
xchg
push
movsl
dec
mov
or
jle
jge
push
inc
scas
std
inc
mov
mov
jbe
sti
aas
insb
aam
sbb
push
push
sbbb
mov
push
sti
mov
int
outsb
sub
mov
fwait
rcrb
scas
or
enter
gs
xor
lds
xchg
repz
add
jb
es
push
sub
or
sbb
adc
fs
out
mov
mov
loopne
lret
mov
mov
mov
sbb
cwtl
fwait
insl
and
push
enter
xor
lods
roll
pop
sbb
in
or
ljmp
push
in
mov
test
push
jg
cmp
movsl
in
adc
mov
cmp
outsb
cmc
pop
sub
sti
lret
adc
or
lcall
jle
inc
and
inc
cmc
push
scas
sub
repz
outsb
mov
in
out
cltd
jle
sub
jbe
dec
roll
iret
jmp
addr16
xor
repnz
sub
clc
and
mov
add
loope
fwait
jbe
hlt
scas
jge
pop
jbe
xor
cmp
add
sbb
push
add
ret
push
and
mov
aam
lds
xlat
dec
lods
mov
sub
push
mov
ja
fdivl
clc
fimull
inc
lahf
pop
fldenv
dec
inc
shrb
push
push
rcll
cmp
and
and
sahf
push
mov
ljmp
push
mov
cmp
cmpsb
push
and
clc
pop
ds
test
mov
sahf
hlt
into
pop
add
sbb
popa
lahf
jmp
mov
sub
pushf
mov
xchg
imul
xor
xbegin
jne,pn
lcall
incb
icebp
sub
lret
clc
loopne
movsb
nop
mov
aad
dec
cmpsl
test
movsl
ljmp
push
les
xor
in
xchg
cli
clc
and
mov
mov
imul
push
pop
testl
sahf
shrb
cld
scas
xor
jg
inc
mov
xlat
repnz
inc
cmovae
hlt
dec
ljmp
or
je
mov
xchg
mov
xor
sbb
sti
cmpsl
adc
mov
push
mov
fisttpl
pop
fcomps
xchg
add
std
mov
in
and
push
fdivrp
jb
lock
rorl
popf
push
mov
out
pop
popa
int
popf
sub
loope
enter
icebp
fists
mov
outsb
jmp
icebp
and
incb
insb
or
sahf
mov
mov
call
into
or
imul
sahf
inc
mov
jmp
int
cmpsl
jge
mull
iret
jmp
sbb
mov
push
inc
subl
cwtl
and
shr
stos
mov
out
sub
xor
hlt
and
insl
rclb
sbb
out
imull
test
fs
pop
cmpl
sahf
push
arpl
mov
cmp
ret
xchg
mov
and
cmp
and
outsb
out
mov
jmp
mov
call
shlb
push
jae
xor
sub
xchg
outsl
jge
dec
mov
popa
mov
shrl
not
int
test
in
call
js
roll
or
aam
mov
xor
xchg
gs
popa
adc
cmpsl
fsub
les
rcrb
xchg
cmp
push
dec
jnp
push
int
xchg
scas
int3
inc
pop
xchg
lock
mov
dec
push
aaa
mov
int
adc
add
es
and
scas
pop
aad
nop
add
pop
dec
ret
mov
xor
adc
aaa
push
jmp
sub
aam
lods
in
xor
xor
maxps
xlat
out
mov
sbbl
aad
popa
aaa
mov
insl
clc
jg
scas
and
push
insb
inc
icebp
loope
mov
and
jnp
out
mov
or
aad
xchg
jb
xchg
in
aad
mov
rolb
xchg
push
push
or
jp
push
sbb
andw
or
cwtl
xor
jp
outsb
out
fildl
fdivs
or
mov
orl
ds
insb
dec
mov
ja
and
inc
mov
jno
push
sbb
jnp
dec
xor
sub
das
ret
push
imul
or
xchg
lods
ja
ljmp
add
jl
pushf
idivb
xchg
movsb
aas
lret
pop
jp
xor
nop
mov
in
xchg
add
bound
or
adc
pop
sti
jne
mov
cltd
mov
repz
and
jecxz
pop
xor
adc
jo
xor
adc
mov
inc
jecxz
pop
andl
push
mov
ds
lods
push
inc
inc
dec
inc
and
pop
mov
mov
adc
sahf
daa
out
jno
or
add
lret
dec
aam
mov
in
das
imul
mov
addr16
out
or
aas
push
shl
ret
outsl
ret
inc
je
inc
xor
ds
add
data16
adc
rclb
stos
leave
adc
xchg
mov
repz
cwtl
call
add
jg
popa
jge
xchg
popa
push
fcompl
hlt
cmpsb
sahf
jbe
pop
pop
or
fisubl
xor
inc
fiadds
inc
and
jmp
mov
lahf
jns
xchg
or
lret
push
inc
xorl
mov
mov
push
je
pop
gs
inc
aaa
pop
sbb
jne
ja
adc
mov
sbb
imull
out
push
push
scas
sbb
repnz
stc
fdivrs
dec
push
xchg
andl
mov
mov
push
mov
jp
rorl
jo
push
sbb
testl
mov
cld
in
out
push
lods
dec
inc
adc
add
imul
mov
jp
jo
mov
push
incl
scas
or
xor
lahf
sbb
cmp
mov
or
mov
mov
cmp
mov
sahf
repnz
jle
sbb
daa
je
pop
push
and
xor
pusha
loopne
test
xlat
mov
lret
push
insl
add
xor
js
roll
stos
mov
mov
sub
jb
cltd
mov
ret
mov
sbb
and
pop
hlt
xchg
jne
add
aam
repz
jmp
stos
jmp
cs
cltd
sahf
mov
movsl
mov
imul
and
push
stos
dec
add
test
std
cmpsl
and
push
std
fsubrl
aaa
lret
mov
aas
repnz
xchg
add
pop
sub
push
cmp
ret
daa
test
or
add
or
cltd
pop
aam
adc
and
rorl
push
adc
loop
shll
aam
sub
pushf
pop
in
sbb
jno
inc
add
shlb
loop
rolb
cwtl
inc
loope
xchg
xchg
mov
push
aad
mov
jnp
pop
xor
jns
pop
lret
cmp
je
push
and
fwait
mov
or
repnz
mov
dec
jp
pushf
cmc
fisttpll
mov
push
jecxz
cmp
dec
mov
adc
repnz
xor
sbb
mov
push
rolb
mov
mov
in
ss
rolb
mov
clc
xlat
xchg
mov
scas
bound
xchg
pop
sbb
pop
out
jnp
pop
dec
or
rolb
addr16
dec
pop
dec
rolb
xor
outsb
xor
jle
movsl
in
mov
stos
in
ret
jne
mul
negl
cmpsl
or
cmpsb
add
cmp
ds
inc
dec
add
pop
aaa
fwait
cltd
rorl
mov
lret
or
inc
jb
dec
dec
mov
mov
push
push
push
lret
push
arpl
cwtl
stos
pop
lahf
rcl
rep
addr16
sub
std
sub
cwtl
icebp
jle
dec
jecxz
aaa
test
add
pusha
pop
ret
out
jge
lods
xchg
inc
jmp
std
outsb
mov
jae
mov
mov
mov
cmpsb
pop
push
es
aaa
dec
jne
int3
sbb
aaa
call
aas
xor
dec
adc
mov
fcompl
adc
add
sub
dec
bound
inc
aam
dec
push
icebp
sub
xchg
add
xchg
inc
repnz
jp
roll
data16
or
test
jg
pusha
popf
popa
push
mov
adc
or
add
test
mov
jmp
sbb
jp
rclb
dec
push
cli
arpl
inc
pop
dec
in
pop
popf
mov
xorb
out
ficoml
js
add
sub
mov
ftst
inc
arpl
pop
push
popf
repz
ret
cltd
xor
xchg
or
mov
jl
loope
jb
sarl
notb
lret
divl
push
movsb
in
mov
cld
push
arpl
lock
inc
push
sti
xchg
test
jg
mov
mov
insl
pop
in
sbb
cmp
mov
jp
xchg
shrb
lret
hlt
clc
outsb
das
push
inc
cmp
xchg
mov
or
mov
loop
jmp
xchg
lahf
jmp
int3
add
pop
jmp
scas
mov
nop
repz
faddl
lcall
jnp
lods
cli
jb
inc
or
mov
mov
js
ja
mov
das
loopne
fwait
aam
push
sbb
lock
xor
dec
dec
rcr
mov
rcll
jg
pop
sbb
sahf
inc
mov
xchg
pusha
pop
mov
bound
and
push
lods
cmp
pop
xorl
pmaxsw
inc
mov
pop
push
cmpl
outsb
in
push
pop
outsl
int
mov
std
xor
out
in
out
or
jmp
add
ja
fdivr
xchg
in
xchg
filds
mov
inc
filds
pop
fdivrs
mov
or
jno
in
sbb
test
test
repz
sub
inc
outsl
pop
jns
inc
out
pop
out
push
lahf
xchg
cmp
mov
enter
dec
xchg
test
sbb
push
test
sbb
or
jge
cltd
cs
xor
movnti
push
mov
lds
popa
nop
lahf
icebp
jl
mov
test
subl
out
adc
out
ja
imul
loope
mov
and
dec
enter
adc
add
and
sbb
stos
mov
jno
mov
out
in
inc
leave
mov
dec
pop
rorl
or
repz
mov
or
mov
mov
out
mull
mov
je
es
outsb
scas
adc
pushf
mov
cmp
inc
jl
daa
movsb
add
mov
adc
cmp
inc
xor
and
cmpsl
xor
inc
dec
das
inc
jp
dec
aaa
mov
sarb
subl
arpl
es
jp
lock
jae
imul
mov
enter
push
inc
mov
or
sbb
fidivrl
fcom
cmp
inc
mov
fnsave
dec
nop
dec
call
out
or
bound
cmp
cmp
cmp
addb
xchg
or
jno
sub
mov
cltd
stos
push
dec
xchg
sbb
add
arpl
jecxz
addb
xlat
and
pop
jo
cli
push
mov
pop
shll
xchg
scas
cmp
ret
data16
lods
call
daa
xchg
int
mov
cmp
sbb
nop
xchg
and
jbe
pushf
hlt
lods
push
negl
mov
mov
sub
outsb
mov
sti
arpl
jae
inc
lahf
cli
push
pop
les
pop
cmp
int
adc
push
bound
add
fs
outsl
add
fdivs
xor
test
jo
push
and
nop
out
and
andb
add
lods
add
dec
and
bound
or
imul
mov
jno
sbb
lret
jle
fs
xchg
scas
cmp
jo
and
das
cmc
sti
mov
inc
ret
sahf
cmp
mov
lret
je
je
and
fbld
xchg
f2xm1
stc
bound
xchg
sub
push
sub
mov
push
lods
and
sbb
bound
sbb
daa
cltd
fbstp
add
in
mov
cld
adc
and
sbb
xor
in
mov
sub
lahf
shrb
adc
ret
bound
sti
out
stc
inc
mov
inc
fsub
data16
mov
cmpsl
xor
arpl
lea
aas
push
sbb
adc
xor
in
enter
cmp
sahf
ss
cmp
ds
sbb
sub
pushf
out
fistpl
int
imul
in
push
sub
movsl
leave
jge
push
in
xchg
add
mov
test
jae
push
cmp
cs
fisttpll
add
fwait
jnp
pop
add
iret
push
push
sub
cmc
cmp
mov
inc
scas
idivl
fldenv
mov
shrb
dec
xor
scas
in
loope
jp
movsl
sarl
xchg
sub
cli
pop
sub
xchg
sahf
dec
mov
dec
stos
sbb
movsb
lods
data16
cmp
das
shll
sbb
inc
xor
fwait
fisttpl
fists
inc
xlat
mov
dec
xchg
imul
cld
data16
roll
loop
cwtl
mov
and
int
mov
arpl
lods
sub
cmp
jp
popa
data16
lahf
test
or
mov
nop
jle
xchg
jb
jp
cmpb
cmpsl
jl
mov
cmp
sbb
cwtl
and
insb
enter
mov
fsts
mov
out
push
jg
lea
mov
insb
imul
xor
push
ss
xchg
or
sub
jmp
pop
fistl
stos
sbb
add
mov
sub
adc
test
cmp
dec
pop
dec
out
fimull
jmp
jp
push
jns
push
popf
mov
dec
daa
lcall
lds
xchg
shll
hlt
cltd
mov
stos
sub
jo
or
sti
sbb
pop
repnz
adc
fisttpll
dec
sub
lds
push
cltd
aas
mov
xlat
push
sub
sub
out
imul
add
addl
shll
cwtl
adc
adc
enter
imul
test
aas
je
rcrb
or
sub
dec
push
pop
leave
ja
pop
cmp
mov
xor
pop
mov
jbe
xchg
pop
and
lea
xor
and
push
in
xor
cmc
cs
popa
repnz
pop
aad
jl
dec
adc
mov
pop
cltd
addl
mov
xor
mov
out
in
fnstenv
sbbl
repz
cwtl
dec
int
xchg
dec
sub
lock
push
stc
icebp
outsb
fstpl
and
addr16
jp
bound
fs
imul
aaa
and
or
dec
clc
jb
and
sbb
xor
xchg
cld
jae
in
ror
aam
in
out
dec
push
mov
jmp
sbb
jmp
ret
pop
mov
les
ret
pop
sbb
xchg
and
inc
test
add
pop
or
sbb
sti
leave
daa
mov
loopne
bound
lods
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
fdivr
or
add
jl
cmp
stos
out
scas
test
hlt
mov
sub
dec
fcmovnbe
in
cmp
cmp
in
cmp
fs
pop
jg
pop
ja
lds
jg
jb
cmp
cmpsl
cmp
scas
out
mov
arpl
xor
and
cli
mov
dec
inc
clc
repnz
cmpsb
dec
adcl
into
mov
test
icebp
dec
sub
lock
popf
rorl
pushf
dec
pusha
or
or
loopne
imul
cmp
sub
sub
insb
sahf
add
es
sbb
stos
mov
pop
inc
test
call
popf
and
orl
sbb
push
sbbb
es
gs
xchg
mov
push
dec
add
rclb
pop
call
test
xchg
cmp
and
pop
sub
imul
ret
jns
outsl
ss
test
mov
push
pop
mov
aam
and
or
sbb
push
xchg
scas
or
js
jo
leave
cli
fisttps
cli
dec
jp
sbb
mov
pop
push
sbb
mov
cmpsl
and
and
scas
mov
mov
inc
sbb
sahf
test
mov
inc
jbe,pt
and
or
jne
hlt
xchg
push
add
fsubr
mov
adc
lds
out
jbe
sar
cmc
in
es
pop
or
push
es
test
cmp
je
mov
mov
and
xor
cbtw
js
dec
inc
xor
pop
cld
adc
inc
adc
les
js
pop
mov
mov
scas
stos
in
sbb
mov
nop
sub
push
xlat
add
sub
fwait
jbe
pushf
mov
mov
pusha
jo
ja
sub
mov
sbb
loope
inc
and
push
cs
mov
pop
loopne
adc
fstpt
rclb
add
addb
enter
and
and
les
ret
sub
inc
in
jle,pn
push
stos
out
sub
mov
in
js
add
movsl
push
outsl
pop
sbb
cmpsb
lods
mov
inc
jl
xor
cmp
lret
iret
xor
mov
clc
in
mov
or
pop
and
fwait
xor
xor
aas
fiaddl
adc
xlat
ljmp
bound
nop
les
push
movsb
push
stos
jnp
scas
cmp
mov
add
inc
sub
pop
dec
js
sub
mov
lods
pop
dec
cmc
sbb
pop
jns
or
movsl
shll
rcrb
pop
fdivrl
in
inc
rorl
out
sbbl
xchg
cmp
mov
jns
mov
loope
or
cs
and
scas
inc
rcrb
fcmovne
int3
mov
scas
or
arpl
push
pop
and
insl
sti
ss
xor
inc
gs
jmp
je
mov
stos
sub
mov
movsl
and
lret
inc
mov
mov
xchg
mov
aam
cs
out
mov
repz
xor
inc
push
sub
out
in
cmp
pop
pop
jmp
sub
and
sub
mov
loop
bound
cmpsb
adc
mov
mov
gs
cmp
fsubrs
in
test
jmp
xor
sbb
imul
gs
dec
mov
mov
xchg
xchg
sahf
or
movsb
scas
pusha
or
aad
xchg
xchg
add
icebp
in
xlat
add
outsb
ja
call
mov
mov
or
gs
rcll
mov
sbb
hlt
add
in
shrb
mov
into
jle
push
fwait
jbe
mov
inc
sbb
ret
sub
pushf
push
lods
xor
pusha
sbb
test
mov
cli
xor
cli
push
inc
popf
add
sbb
cmp
inc
mov
xchg
cmp
jne
and
jge
cmp
mov
add
dec
pop
xchg
pop
mov
enter
insl
or
dec
lret
rolb
and
cs
add
call
mov
mov
sarb
mov
mov
adc
mov
or
adc
mov
movsb
jge
mov
mov
clc
push
cmp
dec
jle
pop
ds
mov
dec
add
js
movl
push
popf
lret
push
push
and
sub
pushf
mov
and
scas
es
add
ret
and
mov
pop
mov
lds
mov
jg
sahf
cmpl
jg
scas
outsb
and
ljmp
mov
imul
mov
pop
ret
jne
outsb
ret
test
add
mov
xor
mov
rcl
inc
jl
mov
inc
gs
fmulp
or
cltd
push
mov
icebp
lea
das
xchg
cmp
mov
arpl
repnz
dec
ds
stos
or
shl
xor
sbb
popa
pop
dec
cli
dec
mov
sub
mov
ret
jbe
ss
lea
es
test
cs
ret
adc
adc
pop
jmp
dec
and
xlat
mov
mov
mov
cmp
cmp
cwtl
lock
fdivrp
xchg
mov
inc
fistps
cld
push
int
paddusw
les
imul
mov
jp
lahf
ja
outsb
jnp
fcmovnbe
inc
ljmp
add
xchg
adc
mov
mov
and
xchg
push
insb
or
test
enter
pop
jno
push
push
mov
or
out
outsl
lret
imul
xchg
into
adc
cs
mov
add
insb
aas
jg
divb
sarb
rcll
repz
sbb
in
int3
sbb
sbb
xchg
jae
sbb
jnp
push
lds
jg
iret
es
jp
jne
call
psllq
test
inc
pop
jle
cltd
clc
icebp
mov
add
stos
ja
ret
mov
cltd
daa
jmp
ljmp
adc
dec
popa
inc
adc
pop
jne
jge
jnp
jecxz
sahf
clc
cvtpi2ps
push
arpl
mov
cmc
fwait
repnz
xchg
nop
aaa
push
rorl
popa
repz
and
lcall
out
sub
fdivl
fsubrs
xchg
popf
iret
test
out
in
in
fs
aam
sbb
cli
sub
int3
adc
sti
insb
pop
daa
mov
cmp
pop
adcb
sbb
js
push
push
add
cmp
insl
imul
mov
cwtl
mov
sbb
lock
pop
scas
pop
mov
cmp
jge
jno
sbb
jmp
pushw
aad
xor
push
loop
jecxz
inc
add
ficoms
sbb
loop
filds
mov
es
add
push
testb
lret
or
pop
pop
jno
rorl
or
dec
xchg
mov
imul
in
aas
ja
mov
fs
ficomps
adc
loope
subb
xchg
adc
mov
cmc
mov
stos
adc
out
and
daa
jle
inc
loope
cmp
mov
icebp
lods
mov
stc
ret
inc
sti
jbe
mov
xchg
mov
jg
mov
jo
lcall
or
mov
in
test
insb
sbb
shrl
lahf
xor
or
dec
sub
popa
mov
mov
inc
dec
jb
out
mov
fwait
dec
xlat
push
mov
bound
data16
and
and
and
in
cmp
into
scas
outsb
pmaxub
add
adc
jge
mov
cmp
loopew
inc
or
push
or
jmp
sti
xor
mov
aas
rcr
push
jg
inc
and
fildll
aaa
mov
shll
aaa
orl
lods
pushf
pushf
ljmp
mov
pop
inc
mov
xor
pop
inc
stos
test
fbld
dec
mov
xor
cmp
mov
xchg
mov
imul
mov
mov
ret
mov
dec
pushf
cltd
mov
insl
into
scas
test
jnp
ror
sbb
adc
les
scas
mov
mov
enter
mov
cmpsb
cmp
ja
cmpsl
adc
mov
adc
sbb
test
jne
mov
add
dec
insb
ficomps
lcall
fs
das
fldcw
ja
sbbb
xlat
ss
or
pop
mov
mov
add
arpl
push
dec
lret
xor
mov
adc
pop
xchg
inc
add
fidivrs
cmp
popa
popf
cmp
fnstenv
js
inc
jne
shll
inc
add
mov
mov
das
inc
and
icebp
cmp
and
popl
mov
lea
xor
fwait
jl,pn
outsb
nop
sub
lds
jns
jmp
in
adc
imulb
int3
mov
pop
lds
inc
mov
lock
or
insl
lds
add
sarl
or
push
rolb
fninit
push
pop
in
inc
mov
dec
adc
adc
minps
mov
mov
sub
icebp
mov
test
mov
push
push
scas
mov
dec
or
pop
subl
cmp
test
in
addr16
pushf
pop
add
mov
aam
push
loopne
mov
inc
dec
and
int3
scas
bound
and
lea
inc
add
loope
jb
sub
out
sbb
inc
jl
in
adc
and
imul
das
fs
js
shrb
iret
daa
pop
inc
dec
add
xchg
inc
rcll
cmp
cmp
sub
pop
lods
in
add
jo
int
stc
ficomps
sub
movsb
cs
and
mov
aad
pop
adc
js
fwait
leave
lret
enter
sub
movsl
test
pop
mov
xchg
fmull
loop
pop
fs
lods
jge
popf
inc
cmp
scas
lcall
sub
lock
add
iret
dec
out
dec
test
jb
sub
clc
cmpsl
mov
test
mov
jns
fcompp
loop
mov
aad
mov
or
hlt
mov
add
push
insl
push
xor
int3
andb
imul
mov
mov
fidivl
cltd
into
sub
adc
aam
pop
mov
ja
daa
dec
sub
and
loopne
cld
adc
inc
dec
lcall
or
push
mov
cmp
lods
mov
testb
out
cmp
lret
add
mov
clc
nop
pop
ror
bound
imul
xor
in
outsl
fnstsw
arpl
push
adc
and
mov
sahf
mov
lods
mov
adc
xchg
std
sub
sbb
dec
arpl
xor
in
cmc
jecxz
sbb
mov
jns
test
sub
outsb
sub
fcompl
xor
xlat
pop
fnstsw
dec
xor
push
lods
out
repnz
loop
xchg
jae
push
test
cli
mov
dec
int3
xchg
notb
push
cs
lahf
js
add
cmp
ds
insb
mov
adc
cmpsb
add
into
rcrb
shll
fcoml
imul
jg
stos
sbb
push
push
je
pop
push
sbb
ds
pop
call
je
sub
sbb
cmp
mov
fnstcw
xchg
mov
in
xchg
and
pop
and
mov
xor
inc
fsts
test
in
filds
or
dec
je
ja
jmp
cmp
push
insl
push
adc
test
nop
sbb
or
fbstp
xor
ss
add
test
ss
or
or
sbb
ljmp
insl
bound
mov
subl
fiadds
clc
loope
xchg
daa
xchg
and
loope
xchg
std
xor
jp
sbb
arpl
jecxz
jmp
addr16
inc
jae
cmp
xchg
daa
cmp
sub
call
add
mov
cmp
das
or
dec
inc
test
movsb
mov
push
loop
add
adc
lret
int
jecxz
jp
sub
dec
dec
fcompl
fildll
push
adc
jp
mov
or
mov
sbb
mov
pop
outsl
into
je
addl
push
adc
cmp
cmpsb
mov
cmp
fs
or
lea
xor
leave
ret
or
or
pop
divl
mov
mov
dec
sbb
jne
mov
inc
mov
in
insl
sub
aad
arpl
push
adc
dec
and
cs
ret
pop
cmp
insb
nop
adc
jle
int3
pop
mov
or
daa
cmpsl
fsubl
push
rcll
inc
sti
shl
shll
lcall
sahf
data16
nop
inc
inc
in
jle
sbb
popa
test
sub
or
mov
movsl
cmp
loopne
roll
out
push
mov
jae
adc
sub
lds
mov
loopne
xchg
jl
add
idiv
xchg
or
mov
adcl
inc
aas
add
enter
fisttpl
stos
adc
inc
test
add
pushf
xlat
ret
inc
xchg
out
xor
cmp
bound
inc
insl
fists
sub
adc
aad
cmp
bnd
icebp
pop
mov
in
adc
je
popa
or
mov
xor
sub
and
jo
out
jmp
mov
arpl
sbb
cmovb
repz
mov
push
adc
push
add
mov
lea
sub
incb
and
out
mov
pop
jno
insb
lods
push
pop
jae
push
sahf
jb
repz
iret
push
jmp
scas
sbb
xor
lods
add
gs
sti
sbb
inc
out
rcrb
mov
ret
leave
sub
mov
pop
test
cmp
sbb
movsl
mov
fldenv
sbb
and
and
push
mov
lret
jl
rorb
sbb
mov
outsb
movsl
cmp
dec
adc
pop
js
cmp
and
inc
lcall
and
jecxz
push
and
push
sub
jmp
jnp
mov
mov
imul
sarb
cs
insl
push
xchg
jmp
mov
jns
adc
mov
sbb
pop
add
por
ficoms
xchg
fdivrl
mov
pop
adc
mov
jbe
daa
addr16
jnp
push
lahf
rorl
or
aam
dec
push
add
adc
movsl
mov
enter
pop
inc
or
jbe
ds
icebp
xor
ljmp
sub
shlb
pop
lahf
cmpsl
int
cmp
lods
xor
or
push
movsl
jmp
mov
fildl
mov
and
sbb
aas
inc
repz
jmp
add
orb
je
jle
testb
cmpsl
scas
mov
mov
iret
xchg
cwtl
scas
movb
add
popa
jne
nop
or
decl
add
xchg
dec
mov
popf
pop
push
add
outsl
daa
ja
mov
dec
fisubs
fcomps
iret
jae
sarl
xor
aad
sbb
push
leave
pop
pop
enter
cmp
jge
dec
iret
arpl
outsl
push
vmaxpd
push
add
fdivp
sbb
jl
hlt
xchg
enter
pop
rcll
push
sub
out
mov
adc
push
xchg
sub
mov
sbb
insb
mov
add
pop
imul
xor
test
add
or
cld
push
xchg
mov
dec
lret
sub
pop
or
mov
lcall
jg
dec
and
jp
inc
xlat
and
ljmp
jno
sub
mov
aas
jne
add
movsl
mov
push
pop
insl
and
test
in
mov
cmpsb
lea
add
push
dec
das
xchg
sbb
shl
mov
and
fisubl
mov
test
call
pushfw
gs
adc
xor
jae
sbb
aaa
add
add
jg
ficomps
int3
pop
imul
jmp
imul
adc
je
push
fucomi
shr
jecxz
inc
call
pop
sbb
ret
cmp
add
add
ret
jns
call
adc
popa
insb
add
testl
dec
dec
inc
dec
inc
push
fcoml
out
pop
pop
or
notl
nop
fldenv
dec
loop
mov
push
hlt
mov
out
push
pop
jnp
arpl
mov
xchg
imul
rcrl
sarl
cmc
daa
push
mov
aas
pop
xor
pushf
sub
sbb
out
inc
fs
add
mov
fmuls
fmuls
xchg
in
lods
nop
sub
add
notb
adc
cmp
pop
jge
fadds
dec
insl
pusha
cmp
jg
je
mov
lods
or
mov
movsl
dec
xchg
adc
adc
inc
push
adc
adc
pop
xchg
mov
jae
xchg
daa
jo
sbb
sahf
repz
ljmp
inc
dec
popf
xor
push
jmp
shl
call
imulb
in
sub
xchg
scas
aaa
push
loop
xchg
adc
push
inc
movsl
add
repnz
mov
aas
or
pop
fsts
fidivrs
pushf
fs
or
sub
xor
push
jne
dec
adc
xor
pop
fsubl
adc
adcl
push
jbe
nop
cwtl
pop
jno
int3
jbe
pop
add
xor
addr16
lret
cld
into
rcr
cmp
aam
scas
and
call
xor
in
aas
and
add
jp
leave
cmp
cmp
shlb
mov
and
repz
dec
fidivl
and
and
mov
ds
nop
cmpsl
test
cs
lret
inc
ficoms
adc
cld
pop
push
and
push
hlt
push
jne
mov
push
stc
stos
ljmp
clc
std
fidivs
es
jp
gs
inc
cmp
in
arpl
push
mov
cmp
in
cltd
imul
mov
imul
adc
xor
jo
les
sbb
push
push
sbb
sbb
je
sub
cld
mov
loope
inc
cs
pop
je
mov
cltd
or
cmp
xor
adc
cmp
das
orb
xchg
or
mov
sbb
mov
adc
mov
lcall
add
dec
push
test
cs
shll
shll
mov
inc
popa
and
aam
dec
sub
inc
scas
loopne
sub
movsl
inc
mov
pop
aas
jmp
dec
fsubrs
stc
jle
lret
jb
push
xlat
sahf
xorl
jo
push
pop
dec
pop
mov
pop
dec
push
cwtl
pop
nop
movsl
addr16
adc
jnp
jae
sbb
loop
insb
fimuls
insb
sbb
cmp
xor
and
cli
xor
cmp
mov
and
and
sti
pop
mov
popa
dec
clc
xor
lds
push
int
sbb
iret
aas
sti
lret
pop
cmc
sbb
popf
lods
or
push
hlt
mov
xchg
add
mov
dec
cwtl
push
test
addr16
cmp
add
decb
jo
in
adc
insb
adc
jge
or
repnz
mov
ficompl
js
push
popa
rclb
mov
cmp
push
je
mov
xchg
in
cld
cli
pop
scas
xchg
mov
sahf
fisubrl
add
adc
push
es
mov
ss
and
pop
mov
jge
es
cs
cmp
fcmovbe
insl
rcrb
adc
negl
sub
hlt
xchg
and
mov
mov
or
ja
mov
outsl
loop
fsubl
jle
lret
push
jp
inc
orl
push
ss
lret
bound
hlt
test
sbb
or
jle
push
arpl
jnp
xchg
adc
repnz
push
or
sub
sbb
dec
lcall
sbb
mov
stos
sbb
pop
loop,pt
ljmp
cld
pop
outsl
mov
call
cmc
sub
mov
dec
jecxz
add
pop
shrl
rclb
arpl
movsl
sbb
js
cmp
icebp
sub
icebp
inc
jnp
js
fsubs
outsl
sbb
aaa
xchg
jle
in
ljmp
inc
out
push
cli
cmp
bound
xchg
adc
loopne
sbb
jno
jle
push
fists
jo
pop
jns
mov
push
scas
sbb
dec
ror
lret
scas
ficoml
pop
xor
in
mov
cltd
repnz
shll
sub
fsts
pop
dec
pop
daa
xchg
int3
inc
xor
sahf
loopne
loopne
xchg
sbb
loop
cltd
xor
je
mov
popfw
icebp
sub
mov
mov
call
shlb
xchg
jge
cmpsl
push
pop
cmp
mov
addl
rcr
ljmp
int
sahf
cmp
sub
aas
sbb
pusha
pop
out
es
mov
add
adc
mov
insl
dec
and
lds
subl
inc
mov
adc
sub
sbbb
loope
inc
sub
xor
mov
fsubrl
xchg
push
adc
push
add
idiv
mov
in
shl
outsl
scas
mov
push
ret
lods
pop
cmp
sub
cmpsb
rcl
loop
aam
cmp
aad
das
dec
jl
jbe
jmp
inc
aas
shll
punpcklwd
js
pushf
mov
fs
inc
push
hlt
fs
add
pop
aad
lock
scas
fucomi
jmp
xchg
mov
cltd
mov
dec
adc
push
adc
lret
mov
pop
push
popf
jns
lods
popa
sbb
sub
pop
outsb
cltd
mov
stc
sub
jmp
test
mov
mov
mov
in
sti
and
pop
jns
test
xchg
jp
mov
pop
mov
xchg
xor
mov
notb
lret
adc
lret
stos
push
mulb
mov
sbbl
sub
mov
jns
adc
ljmp
cmp
inc
mov
stos
pop
sub
cwtl
movsb
stc
dec
pop
dec
jne
xchg
loop
orb
xchg
subl
jle
xor
js
mov
mov
adc
mov
push
mov
in
imul
jle
jp
jbe
fwait
xor
js
sti
dec
in
jb
in
inc
jbe
jp
mov
dec
jne
sbb
jle
fwait
in
pop
pop
xchg
xchg
jb
or
xorb
pop
iret
js
repz
sub
xor
push
cs
les
push
mov
xor
and
add
sti
add
pop
jle
test
test
xor
xor
in
icebp
push
repnz
into
add
lods
insb
xor
push
stc
cwtl
dec
mov
stos
or
mov
lods
sbb
call
inc
stc
add
push
xor
xchg
flds
push
pop
shlb
mov
mov
mov
xchg
mov
pop
jne
jb
insl
mov
in
fstpt
mov
mov
dec
dec
xchg
pushf
leave
daa
mov
cmc
imul
xor
mov
pop
roll
fnstenv
cmpsl
or
adc
dec
jnp
mov
movsl
jmp
push
mov
fs
lds
sbb
aaa
popa
loope
lret
xchg
ffree
leave
sbb
shl
add
movsl
or
lahf
insl
cmpsl
icebp
jno
std
push
jnp
cmp
push
cli
and
adc
inc
mov
mov
mov
sahf
mov
jo
push
pusha
pop
aam
inc
xor
fs
mov
imul
xchg
enter
push
les
mov
aas
imulb
repnz
dec
sti
cmp
lret
mov
loope
and
data16
sbb
orl
dec
popf
nop
cmpsb
fnsave
jbe
jne
mov
insl
insb
push
out
jg
adc
and
mov
jo
es
mov
stos
in
add
pop
push
mov
ret
jge
xchg
adc
cli
mov
pop
add
ss
test
or
shl
mov
out
pusha
std
and
subb
pop
cmp
es
xchg
scas
in
arpl
cwtl
leave
sbb
test
adc
jbe
jae
idiv
sub
mov
add
push
pop
data16
in
jl
adc
add
add
add
sbb
filds
outsl
sahf
sub
stos
cmp
mov
aaa
or
jg
push
iret
adc
sub
push
ret
sbb
mull
jmp
ret
subl
push
lods
mov
in
or
popa
popa
je
mov
in
clc
mov
pushf
inc
xor
xor
inc
mov
xchg
push
push
mov
and
test
sub
dec
rcll
inc
cmp
jge
xor
addb
test
not
outsl
ret
movsl
iret
mov
fsubrl
push
addl
push
inc
imull
xor
xchg
xor
adc
mov
inc
mov
aam
dec
subl
xchg
xlat
movsl
jb
into
lahf
stos
inc
jp
dec
aas
sti
inc
cmp
pop
push
cmp
mov
ds
adc
call
pop
je
imul
jecxz
nop
pop
push
mov
ret
mov
mov
outsl
mov
jnp
aam
dec
cmc
xor
loop
mov
add
sub
xchg
push
inc
aad
push
cmp
fdivl
push
pop
jp
mov
xchg
clc
loop
arpl
cmp
ret
fnstenv
outsb
mov
push
jns
xor
shll
adc
xlat
push
mov
mov
adc
or
hlt
add
aas
test
lahf
daa
movsl
sahf
or
sbb
sub
lea
jbe
mov
pushf
inc
sbb
icebp
adc
xchg
ljmp
outsl
adc
or
pop
xchg
jno
adc
imul
cmp
and
and
add
jnp
dec
mov
mov
xor
xchg
push
mov
push
adc
push
inc
push
pop
aaa
jp
jge
fisubs
cmp
adc
arpl
xchg
enter
pop
mov
lea
xchg
in
fists
test
xorb
fwait
or
jno
mov
fsubrp
mov
mov
leave
xchg
xlat
in
jl
inc
jecxz
or
pop
mulb
xchg
fucomi
inc
outsl
adc
xchg
ss
xchg
jae
imul
repz
xlat
mov
movsl
aad
sti
les
outsl
pop
push
mov
js
sbb
mov
inc
in
sbb
out
test
mov
push
sbb
xlat
sub
pop
hlt
gs
rolb
adc
ret
call
cmp
cmpsl
ljmp
sbb
inc
es
dec
loop
cmp
lods
popl
jg
into
xchg
repnz
ror
mov
push
mov
sbb
pop
lods
mov
cmp
dec
fs
xchg
insl
inc
loop
pop
mov
data16
imul
cld
inc
rclb
in
std
dec
adc
cli
movsb
xchg
fisubrl
cltd
fwait
adc
fs
sarb
rol
xchg
pop
scas
xchg
shrl
mov
je
iret
cs
psrlq
icebp
push
pop
rcrb
mov
adcl
enter
data16
sahf
int3
push
pop
in
es
xchg
jecxz
lds
xor
in
jne
jo
in
aaa
inc
or
mov
test
push
cmpsl
mov
in
mov
add
gs
lds
push
adc
and
push
sahf
adc
ret
fwait
add
adc
mov
idiv
sub
cwtl
and
aam
imul
cltd
aad
sbb
repnz
mov
movsl
sbb
popa
scas
push
sub
pop
test
std
xlat
mov
pop
dec
adc
xchg
sub
ja
or
les
mov
outsb
popf
cmpl
xor
lahf
lret
and
xor
daa
sbb
cmpb
adc
adc
add
outsb
sahf
jecxz
mov
loop
push
add
xor
lods
out
clc
incb
dec
jl
out
rcll
xor
inc
adc
sub
repz
jecxz
or
lahf
jp
sub
loopne
push
lret
pop
jge
inc
adc
fisubs
fldenv
shrb
pushf
fldl2e
dec
cwtl
pop
test
mov
arpl
add
call
sbb
leave
adc
fisubrs
or
add
ljmp
adc
loop
out
mov
fcom
cld
leave
das
popf
mov
adcl
rcrb
movl
pop
cmc
sti
or
mov
andb
fadd
addr16
mov
out
aas
lret
jl
jecxz
jno
adc
cmpsb
jno
xchg
sub
mov
aam
aaa
inc
ja
ja
adc
aaa
xor
inc
popa
repz
jae
pop
popf
add
fisttps
loop
stc
xchg
addr16
hlt
mov
ret
push
nop
inc
jge
inc
js
insb
enter
mov
sbbb
inc
faddp
push
scas
mov
dec
ds
stc
xor
stos
xchg
shrb
je
sbb
int3
lea
push
jb
mov
outsl
jbe
shrl
push
pop
in
mov
fsub
mov
addl
fildll
lcall
mov
cld
in
jp
ret
push
mov
mov
mull
or
and
fdivs
jae
mov
or
mov
add
mov
mov
sub
scas
clc
sub
test
jb
insb
out
mov
dec
push
cwtl
divb
xchg
jae
test
sbb
repz
addb
mov
enter
push
imul
es
jmp
sbb
popf
imul
dec
in
addb
int
mov
mov
pop
stos
pop
pmullw
xchg
jb
xlat
daa
shrl
loope
and
and
in
fucomp
in
mov
or
xor
ficoml
ja
mov
in
ss
daa
pop
jmp
out
push
mov
or
adc
pushf
addr16
sub
and
shll
push
pop
pop
out
gs
sti
imul
jo
dec
push
fs
lock
jae
das
xor
test
loop
cmpsl
loopne
or
iret
ret
xor
fidivrl
gs
adc
cmp
or
mov
popa
out
subb
aas
xor
cmc
ror
adc
int
dec
add
sahf
rcll
xor
cld
sbb
xor
std
push
sub
xchg
clc
mov
out
jg
or
mov
lcall
bound
adc
push
imul
or
cmpsb
rcl
push
outsb
mov
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
leave
lahf
xchg
mov
pop
jl
adc
push
scas
shrl
imul
lock
addl
xchg
adc
and
jmp
enter
jmp
psubq
sbb
mov
out
add
jo
mov
mov
mov
insl
in
and
lods
iret
rorb
adc
sahf
aaa
pop
xor
mov
das
lret
es
scas
outsl
adcl
jmp
pop
adc
dec
or
mov
ljmp
mov
popa
loopne
pop
lcall
adc
jmp
push
repnz
repnz
mov
sbb
nop
dec
mov
stos
mov
sub
int3
sarb
js
int3
cwtl
ds
sbb
adc
in
jp
dec
mov
mov
jmp
push
nop
outsl
inc
jg
dec
mov
mov
icebp
pusha
and
aam
out
jp
cmp
jns
jmp
push
sbb
push
into
pop
test
cmp
push
mov
nop
cmp
cmp
pop
es
mov
push
lret
std
inc
dec
das
mov
aas
pushf
out
mov
test
sub
rcrl
cmp
dec
insb
out
bound
pop
ret
sbb
out
faddp
in
lock
mov
push
push
ss
cmp
popa
jp
and
ja
push
push
xchg
mov
mov
push
jno
loopne
pop
dec
xor
add
xchg
push
pop
scas
cmp
mov
adc
or
ds
into
sbb
xlat
ljmp
push
lods
add
dec
lock
jg
pop
div
repnz
mov
scas
leave
dec
cld
fstpt
jbe
sub
fidivs
mov
inc
xchg
out
data16
pop
add
shl
mov
add
dec
mov
in
gs
mov
mov
push
sub
and
xchg
cwtl
adc
mov
fld
les
jmp
leave
ret
pop
ljmp
pop
adc
aam
fisubrl
adc
mov
add
xchg
ret
jne
daa
pop
stos
stc
sbb
cmc
cmp
mov
out
call
or
es
rclb
jns
xor
pushf
sub
push
xor
mov
push
jmp
push
jp
sbb
sarl
pusha
push
ja
repz
bound
mov
rcll
cmp
mov
in
and
cmp
out
repnz
daa
pop
loop
sbb
push
fcomps
mov
and
mov
into
sbb
and
jnp
inc
xchg
adc
or
sub
les
push
inc
adc
xadd
xchg
lods
bnd
test
push
mov
mulb
das
push
fistpll
jae
sbb
lea
lahf
hlt
nop
aas
sarb
sub
cmc
scas
dec
loope
dec
dec
test
cmp
incb
pop
inc
pop
data16
or
jmp
or
sahf
imul
ds
cld
stc
jle
shlb
lcall
cmp
leave
rorb
ljmp
out
in
add
daa
loope
popf
sub
js
push
pushf
ja
jp
decb
iret
ss
sbbb
in
gs
and
xor
lcall
les
test
pop
jecxz
mov
dec
stos
sub
or
push
and
add
push
test
dec
fcmovbe
xchg
jnp
sub
or
cmp
test
push
mov
je
cli
inc
push
insb
fdivr
popa
pop
sar
icebp
and
outsl
sub
das
lods
imul
xchg
xor
movsb
mov
dec
dec
jnp
loopne
je
in
dec
test
sbb
enter
dec
cli
pop
repz
mov
fidivs
jge
insl
addb
push
xor
pop
xor
fld
cltd
js
sbbb
pop
jg
test
push
xchg
fucomp
xor
dec
cmp
scas
mov
insl
stos
dec
pop
cmp
sbb
cmp
mov
pop
fadds
xlat
nop
sbb
dec
rcrb
mov
jmp
or
ror
sub
dec
lods
repz
sahf
jns
scas
out
shll
stos
sbb
jnp
cld
cmp
pop
aad
mov
push
in
pop
mov
sbb
int3
xorb
mov
and
std
xor
in
ret
or
rolb
add
fcmovu
rol
xchg
arpl
repnz
jb
sbb
mov
xchg
shrb
push
call
or
push
pop
jg
stos
pop
loope
rcrb
mov
pop
pushf
cwtl
xor
outsl
lea
fmull
call
jmp
out
mov
push
xor
xor
icebp
and
pop
add
and
push
lods
int
sahf
ret
pop
loop
lcall
enter
xchg
pusha
xlat
lods
pop
adc
fwait
pop
push
jne
xchg
pop
inc
inc
jle
jns
ret
enter
jge
mov
adc
dec
mov
add
adc
pop
mov
movsb
pop
cs
jne
out
imul
inc
or
ret
scas
sub
mov
lret
das
inc
xchg
mov
es
dec
lret
pop
push
cmp
inc
lock
out
insb
hlt
add
or
pusha
into
xchg
dec
movsb
ljmp
sbb
mov
les
lret
cmc
inc
dec
lret
push
bound
lea
cmp
in
lret
mov
push
fsin
outsl
or
add
shlb
pop
sub
xor
inc
outsl
js
ret
addb
into
xor
cld
add
xchg
outsb
call
fcomip
in
cld
add
mov
push
leave
ret
les
xchg
xchg
sbb
mov
jo
mul
xor
mov
sbb
adc
inc
shll
fs
in
inc
mov
jnp
repz
rcl
inc
push
xchg
call
aad
pushf
pop
adc
mov
sbb
outsb
movsl
sub
push
sbb
jg
dec
mov
mov
movsb
mov
push
mov
xor
stos
adc
sbb
insl
dec
rcrl
je
clc
pop
mov
push
push
jg
xchg
mov
push
mov
inc
jns
js
iret
btr
mov
adc
sbb
scas
jl
icebp
add
mov
jecxz
lret
push
lahf
cli
nop
push
sub
pop
xchg
cs
and
mov
lods
cmp
mov
aad
ret
push
out
in
aad
icebp
testb
insb
push
popl
loope
dec
shll
stos
cmp
int3
stc
cmp
mov
test
icebp
push
pop
jns
mov
xor
dec
pushf
pop
stc
xchg
sub
aam
loopne
insb
lock
mov
shrl
js
das
subl
add
stc
mov
lcall
mov
cmp
inc
xchg
rcll
dec
popa
jae
adc
xchg
push
jne
fidivrl
cmpsl
icebp
adc
pop
mov
rcll
xchg
cmp
inc
icebp
mov
testb
add
mov
insl
push
sbb
clc
mov
in
jmp
jp
js
fmuls
repnz
les
adc
cmp
sub
add
nop
sbb
mov
inc
dec
push
dec
jb
jg
popf
push
xor
xor
dec
add
outsl
pop
in
aam
add
push
aas
jecxz
je
popf
mov
xlat
ret
imul
xchg
add
jmp
cmpsb
mull
stos
xchg
mov
cli
cltd
cmp
clc
xlat
enter
or
aas
mov
and
aad
push
movsl
shrl
push
cli
mov
sahf
adc
sbb
adc
jb
test
mov
cwtl
and
cmp
in
ficoml
scas
jno
sbb
cmp
xor
jnp
adc
and
mov
push
or
mov
stos
cld
jp
repz
adcl
xchg
sub
adc
mov
sahf
pop
fidivl
and
or
push
mov
fldcw
fisubrs
dec
sub
xor
fdivp
mov
movsw
or
bound
dec
jo
sub
cmp
jb
test
cmpsl
call
mov
push
iret
je
ljmp
jl
nop
sub
js
xlat
xchg
mov
mull
jmp
rolb
jl
jns
mov
inc
inc
push
adc
repnz
lcall
loope
sbb
int3
cmpl
inc
das
or
aam
imul
mov
into
or
xor
jbe
adc
push
pop
jne
in
ss
pop
sub
or
mov
mov
cmpsl
push
jne
ss
pop
in
mov
lret
fsts
or
jb
pop
dec
out
lock
xchg
and
cmp
mov
iret
aad
test
out
mov
es
aad
and
es
inc
sub
lcall
add
xchg
and
into
xor
mov
adc
push
gs
incb
xchg
xor
popf
pop
adc
mov
orb
cs
aam
imul
push
fucomi
lcall
xor
sbb
jg
mov
frstor
pop
lods
setno
add
in
outsb
test
pop
pop
lret
mov
in
cli
pop
push
iret
fsub
ret
jl
lcall
movsb
push
iret
xchg
xlat
das
and
push
shrl
push
repz
shll
sub
sbb
or
mov
sbb
dec
les
xchg
in
mov
xlat
arpl
imul
jne
call
in
popf
pop
cwtl
push
cmpsl
stos
fwait
inc
mov
sub
divb
cmp
sbb
jne
and
fistps
clc
mov
mov
or
int3
push
insl
cmc
in
mov
mov
mov
sbb
leave
aad
add
cmc
or
xchg
cmp
mov
fs
xor
js
jle
in
or
sub
dec
jle
in
and
pop
rorb
add
dec
sub
mov
sbbb
xchg
xchg
sbb
pop
fstl
in
xchg
ret
ret
ss
dec
lret
pop
lret
push
fbld
add
jge
mov
rorb
rcrb
mov
add
fwait
inc
or
cs
or
or
adc
push
sbb
mov
negl
pop
in
jge
addr16
out
test
push
or
sbb
jg
gs
mov
subb
lock
sub
dec
jle
pop
xor
shrl
dec
or
push
iret
push
pop
loop
out
std
sub
out
jae
mov
loopne
mov
lahf
pop
stos
outsb
dec
dec
mov
and
push
mov
cmp
xor
pop
hlt
push
stos
xor
fists
mov
das
sub
movsb
stos
stos
in
aas
and
rclb
ret
dec
leave
mov
inc
dec
imul
incl
mov
lret
sbb
stos
inc
jmp
dec
jmp
adc
adc
out
clc
idivl
pushl
bound
add
pushf
jecxz
push
pop
and
fsubs
mov
fildll
cmp
std
iret
xchg
into
movsb
pop
out
sub
out
adc
sbb
adc
cli
lahf
repz
pusha
das
aas
cmp
cmp
rcrl
cmp
scas
jnp
mov
fldcw
aaa
mov
or
loopne
inc
in
and
inc
bound
mov
xlat
mov
in
pop
out
sbb
or
ret
xchg
xor
sub
fwait
xchg
xor
add
ret
loop
sbb
lods
push
loopne
mov
shlb
aad
stos
mov
xchg
insb
pop
jnp
call
add
jl
mov
xchg
sbb
arpl
cmp
enter
sub
sub
enter
xor
xchg
das
inc
cli
sti
adc
adc
in
jle
jnp
scas
dec
cmp
cmp
dec
xor
and
jo
mov
insb
inc
push
mov
pop
mov
icebp
pop
mov
push
pushf
and
push
test
or
or
imulb
shlb
mov
lds
clc
sbb
repz
add
push
xor
cmpsl
mov
mov
lods
dec
mov
xorb
mov
cmp
imul
pop
movb
jge
or
movsl
sub
subb
fildl
lahf
popf
std
mov
lcall
test
mov
ffree
call
loopne
aas
mov
push
mov
mov
sub
xchg
jno
mov
mov
push
sub
cmp
andb
hlt
pop
dec
cmp
lods
shlb
jle
add
mov
dec
scas
mov
lods
push
loop
jne
ds
dec
sbb
dec
xchg
push
jo
movsb
cmp
xchg
int
in
fwait
push
cmpsb
outsl
sbb
jae
testl
and
push
cmp
in
cmp
adc
int3
sbb
icebp
inc
out
leave
mov
push
jno
cmpb
push
rorb
bound
lret
jno
push
pop
adc
test
inc
mov
ret
call
xchg
cld
lret
das
mov
xor
inc
call
shll
mov
insb
mov
pop
mov
cld
std
or
je
out
les
aas
xor
jle
push
push
cmp
pop
je
push
cwtl
xchg
sbbl
loopne
cmp
in
aaa
in
lea
mov
adc
mov
shll
add
sbb
xchg
sbb
repz
xchg
loope
loope
adc
and
push
push
jmp
or
arpl
pop
mov
dec
xor
sbb
jno
stc
fstps
pop
in
xorb
xor
mov
popf
clc
inc
dec
fcmovnb
test
inc
cli
lods
subl
dec
push
fisubs
out
xor
xchg
cmp
pop
dec
icebp
jb
xor
loop
mov
dec
xor
xor
ja
outsb
stos
negl
arpl
sub
pop
sarl
jle
idivb
add
pusha
push
imul
jg
movsl
cld
dec
rcrl
mov
fwait
cli
lret
push
push
into
inc
push
sbb
dec
imul
mov
fisttpl
dec
xor
insl
mov
daa
addr16
xchg
dec
movsb
fs
cmp
cmp
ret
out
cmp
lods
fucom
push
dec
add
popf
mov
lcall
lret
sarb
insb
jne
mov
xorb
imul
aad
mov
jmp
sub
mov
lock
cmp
lahf
dec
in
mov
mov
and
xor
rcr
test
inc
mov
std
mov
ja
sub
push
mov
sbb
sarb
jns
and
dec
push
push
sub
xor
fbstp
mov
fldenv
neg
outsl
push
pusha
lods
adc
xorl
inc
xor
test
jno
or
addr16
xchg
push
lahf
roll
mov
lcall
and
push
and
sarb
daa
adc
mov
mov
repz
push
pop
cs
cmp
shll
mov
ss
sbbb
jb
adc
test
xor
adc
addb
fwait
add
iret
xlat
shrb
adc
jmp
outsb
add
in
mov
xchg
iret
mov
test
dec
inc
and
cltd
insl
loope
dec
cmpl
jp
adc
push
movsl
fmull
pop
push
mov
rolb
cmpsl
outsl
dec
or
loopne
clc
xchg
adc
or
xor
cvtpi2ps
adc
inc
adc
lea
cli
mov
xlat
ja
and
push
add
repnz
push
ss
or
add
out
testl
aam
pushf
sbb
in
cmp
imul
icebp
jecxz
sub
xor
aas
mov
sub
mov
jbe
pop
pop
comiss
pushf
xchg
loope
xchg
in
icebp
push
xchg
fistpll
out
xchg
outsl
cmp
adc
push
or
movl
shlb
ficoml
cmp
sbb
cmp
aam
inc
jae
add
lcall
jns
sbb
adc
xchg
in
cli
pop
stos
loopne
out
or
out
push
cmc
mov
cmovo
add
push
test
ret
insl
inc
aaa
hlt
jg
ror
sub
test
xor
mov
loopne
pop
push
add
js
adc
cmp
inc
roll
add
sub
adc
pop
cli
imul
movsb
sub
xor
mov
and
dec
lcall
pusha
xchg
mov
or
pop
fdivrl
aas
inc
pop
add
mov
fldcw
jmp
addr16
pop
mov
out
jb
xor
mov
repz
adc
repnz
mov
jne
rcl
loope
dec
push
test
and
fisttpl
jg
test
xchg
cmc
cmp
lock
cltd
jg
mov
sub
int3
loopne
aad
cltd
xchg
mov
movsl
loopne
dec
mov
ljmp
loop
inc
push
inc
sbb
cmp
mov
cmpsl
sti
dec
lea
cwtl
lcall
mov
mov
jl,pt
mov
inc
pop
aam
insl
popf
out
popa
roll
pop
ret
jnp
jp
and
gs
popf
test
fbstp
or
add
cmpsl
iret
pop
orb
fistl
jg
adc
jo
pop
pop
pop
enter
jo
push
aad
mov
dec
jmp
pop
mov
subl
push
mov
ret
push
ja
add
scas
imul
add
mov
loopne
xchg
adcl
cld
in
mov
inc
in
sub
scas
xor
std
popf
psubd
popf
and
cltd
cmpsb
fisubrl
out
jmp
lcall
leave
mov
icebp
adc
mov
test
shll
stos
gs
not
es
inc
cmpsl
and
jno
in
das
addr16
loopne
adc
mov
iret
fstpt
sbb
jmp
sbbb
push
fnsave
push
jge
push
fstl
jmp
pusha
and
sbb
xchg
out
nop
push
jl
gs
insb
inc
jae
and
popa
push
sahf
aaa
bound
xchg
jmp
ret
mov
dec
inc
and
xor
or
ror
jno
cltd
sub
or
adc
xchg
dec
dec
or
lds
lds
or
into
cltd
popf
pop
in
adc
mov
xlat
int3
sti
and
xchg
addr16
dec
push
imul
add
enter
xor
push
lock
imul
mov
jle
cmp
add
test
xor
shl
repz
sahf
pop
jecxz
adc
mov
test
jbe
pop
mov
or
les
xlat
cmpsl
or
test
mov
xchg
scas
push
pop
mov
push
push
jmp
aam
sub
rcrl
jnp
dec
nop
ljmp
xchg
mov
xor
inc
popa
cli
imul
pusha
nop
test
in
iret
pop
sbb
jae
jno
inc
stc
jns
shl
movsb
lods
test
pop
push
fistps
popa
or
dec
pop
xchg
mov
or
cmp
adc
stc
xor
fsubl
sub
sbb
add
xchg
push
sub
in
lcall
push
inc
mov
push
cmp
jo
rol
and
hlt
fwait
popf
insl
cmp
and
mov
sub
unpckhps
nop
movsb
jmp
xor
int
mov
xchg
xor
adc
sub
ficompl
jmp
xor
push
xchg
lcall
push
lret
lcall
sysret
mov
xchg
or
movb
in
int
mov
xor
sub
xor
and
add
mov
mov
mov
dec
movsb
popa
pusha
xor
into
ds
sti
jo
frstor
fxtract
lcall
les
pop
jo
cmp
and
jmp
inc
outsl
mov
sub
xchg
cwtl
daa
pop
mov
xchg
sub
inc
arpl
adc
les
jl
pusha
pop
jp
test
cmpsl
call
push
jmp
fldcw
js
ss
xchg
mov
jb
repz
lods
xchg
cwtl
pop
sbb
mov
mov
jle
fimuls
sub
lret
rep
cltd
push
enter
in
adc
ret
popa
jnp
and
or
sub
cmp
or
push
mov
jle
and
outsb
jge
cmpsb
ds
iret
stc
data16
xor
mov
add
sbb
mov
push
adc
jo
push
pusha
test
and
push
adc
jg
dec
or
adc
pop
gs
enter
js
sarb
sub
sub
add
sbb
dec
pop
sti
dec
jo
push
roll
inc
in
mulb
sbb
ss
mov
pop
test
push
cmp
pop
cmpsb
xchg
push
add
or
jne
lcall
lock
sbb
stos
in
inc
lods
push
cmpl
pushf
out
pushl
push
xchg
ret
lret
cli
cmp
cmp
hlt
pop
fwait
jecxz
or
add
shll
jge
xor
loop
jo
clc
push
mov
and
and
pop
popa
dec
stos
inc
and
loope
pop
pop
lcall
fsubrl
jno
dec
adc
loope
or
mov
xchg
ljmp
sub
or
jp
fwait
sub
cwtl
inc
xchg
nop
ss
sub
inc
nop
out
jmp
fldcw
test
dec
popf
push
or
imul
fs
xchg
insl
pop
xchg
push
pop
inc
std
jo
inc
loope
xchg
pop
stos
sahf
mov
andl
mov
aaa
jmp
cs
push
adc
lods
fisubl
imul
scas
fs
inc
sub
or
jg
add
in
mov
adc
cli
stos
mov
iret
mov
stos
add
test
cmpsl
mov
iret
lret
lods
call
dec
pop
jo
lcall
or
movsl
mov
or
aad
or
popa
pop
mov
push
ficomps
xor
pushf
sbb
lds
ror
in
in
imul
pop
enter
jge
xor
cmp
xchg
stos
es
xlat
xchg
cltd
or
mov
and
repnz
jb
push
pusha
js
test
dec
sub
mov
pop
mov
push
dec
test
dec
mov
insl
out
xor
pop
movsb
cmp
shlb
aam
pushf
in
xchg
adc
push
enter
loop
loope
mov
data16
pop
mov
fsubl
cltd
xchg
dec
xchg
add
xchg
add
xchg
je
aaa
cmc
les
insb
in
scas
dec
and
in
out
mov
in
cld
cli
adc
jnp
gs
push
fwait
ret
xor
and
inc
xchg
shlb
test
and
enter
and
test
cmp
pushf
inc
pusha
stos
inc
scas
xor
sub
sub
lea
ficoms
jae
hlt
dec
pop
adc
push
cli
add
inc
lock
push
pop
insl
in
test
inc
or
stc
pop
pop
and
jl
das
mov
xor
add
adc
aaa
pop
lret
lock
sbb
repz
imul
stos
in
pop
sahf
bound
or
xor
cld
sub
aas
jecxz
das
jmp
xor
mov
and
fistpll
sub
in
or
xor
into
into
mov
push
cmp
push
ret
push
xchg
int
mov
scas
adc
lods
or
cmp
divl
jle
in
jg
push
cld
test
ret
test
jbe
dec
xlat
mov
in
push
dec
sub
jnp
inc
pop
outsl
pop
stos
daa
mov
sub
test
pop
push
fstps
jne
mov
cltd
jmp
in
push
into
xorb
movsb
ss
int3
inc
aaa
fiaddl
sbb
inc
dec
fcoml
pusha
jp,pt
pop
mov
pop
andb
jo
addr16
pop
insb
push
pop
ja
pushf
dec
cmc
out
cmp
mov
rcl
sub
or
scas
cmp
in
clc
movsl
lret
loopne
rolb
adc
dec
or
inc
lds
cmp
mov
in
sarb
test
push
cmp
in
and
mov
lock
imul
cmp
mov
gs
mov
xchg
xchg
cmc
enter
lea
and
mov
dec
xlat
rol
loopne
ljmp
loope
scas
add
or
les
push
xor
psrlw
mov
loopne
js
mov
pop
popa
repz
pop
pop
out
int
xchg
lods
rcrb
jmp
fwait
and
out
pop
jmp
jns
jns
decb
xlat
mov
dec
mov
popa
cmc
pop
jle
ret
inc
ds
mov
xchg
xchg
mov
lea
mov
mov
sbb
xchg
jmp
push
scas
push
das
pop
loop
cwtl
xor
fnsave
jae
outsl
je
mov
aas
add
pop
jno
or
shrl
jo
push
xchg
stos
dec
mov
mov
testb
sub
add
in
fidivrs
add
addr16
push
lods
push
dec
int
xor
pop
pop
jnp
jle
divl
out
lock
add
lds
ret
aaa
mov
xor
test
add
test
sti
mov
xlat
add
fisubrl
xlat
adc
shlb
mov
push
mov
sub
dec
sub
pop
ficoms
insl
lcall
jmp
std
push
xor
or
cmp
cmp
sarl
ret
or
dec
mov
int
mov
aas
push
gs
cmp
inc
das
shll
cli
lods
lods
or
push
adc
mov
push
fcompl
pop
inc
mov
sub
mov
movsb
mov
mov
or
jecxz
pop
subl
jnp
pop
jp
insb
or
mov
add
adc
imul
xor
lods
inc
ljmp
je,pn
sub
xlat
je
xor
sti
jl
rorl
lods
data16
adc
sub
nop
fstps
jg
mov
cld
sub
lret
sbb
sbb
xchg
pop
out
inc
sbb
pop
mov
push
ss
xchg
pop
xor
inc
adcl
or
fisttpl
lcall
out
pusha
push
mov
int
add
movsb
or
inc
cld
cmp
push
repnz
cmpsb
dec
out
sub
mov
mov
cmp
pop
push
push
jns,pt
push
stc
neg
loop
adc
and
lods
inc
xchg
inc
cli
pop
es
cmp
cmp
jae
sub
repnz
in
pop
lcall
sbb
adc
xlat
fcmovb
pop
test
aas
lcall
pop
out
adc
std
push
lahf
aas
push
mov
icebp
add
xor
repz
push
push
xchg
hlt
push
cli
test
add
decl
mov
fstps
mov
les
es
pusha
insb
je
mov
lret
jno
mov
mov
pop
jo
adc
xchg
and
xchg
mov
or
into
push
rorl
dec
adc
pop
bound
adc
es
test
jle
add
mov
popl
cmpsl
outsb
cwtl
fistps
fmul
ljmp
xchg
mov
fisttpl
mov
icebp
cmp
mov
cli
pop
scas
mov
adc
leave
and
mov
and
push
jle
int
les
sub
jbe
xor
loopne
or
cmp
ljmp
jb
pop
in
jae
and
imul
lea
fsubrs
insl
sub
imul
pop
sub
aaa
sbb
frstor
mov
push
xchg
cld
mov
push
sahf
testb
or
or
fs
js
jnp
mov
pop
push
pop
imul
jbe
pop
leave
xor
sbb
iret
xchg
icebp
scas
mov
pop
mov
daa
psubd
loopne
aam
inc
and
jne
pop
mov
rcrb
mov
mov
mov
int3
mov
cwtl
push
pop
bound
icebp
add
add
ss
pop
fs
lret
jo
mov
inc
jge
mov
pop
add
add
push
aaa
add
adc
dec
ret
lcall
sub
fcomip
daa
cmp
incb
fldt
and
clc
xchg
dec
push
jno
push
pop
xchg
lahf
sub
shll
adc
push
jp
sar
add
lea
lods
xor
hlt
sub
out
fsubl
push
mov
pop
clc
cmp
ss
clc
imulb
mov
shrb
fimull
ss
xor
jl
pop
dec
mov
inc
ret
push
hlt
cmpsl
add
mov
addr16
andl
imul
clc
dec
xchg
insl
out
arpl
enter
push
es
outsb
imul
sub
pusha
adcb
rclb
pop
adc
pop
aaa
adcb
add
hlt
fbstp
jp
ret
stos
leave
lahf
or
outsl
xor
pop
or
xlat
arpl
push
cmp
xor
mov
pop
ret
aam
jb
fmuls
push
cli
add
push
fsubl
sub
dec
in
pop
bound
mov
int3
lcall
fnstcw
mov
fdivrl
jg
pushf
push
and
jl
lcall
sbb
loope
bound
adc
das
pop
mov
or
ret
aam
mov
push
dec
adc
push
and
stos
xor
or
cmp
aam
sub
repnz
fs
cmp
and
ss
xchg
shl
popa
outsb
jecxz
pop
jbe
ss
and
inc
or
mov
cmp
mul
mov
int3
test
sahf
inc
cmp
sbb
mov
ror
sti
in
subl
push
pop
push
fucomip
in
cmpsl
rep
xor
xchg
movsl
mov
fmuls
and
jg
aaa
sub
addb
pop
imul
mov
aad
dec
clc
rorb
cs
jge
and
inc
dec
hlt
mov
mov
sub
inc
inc
jne
xchg
repnz
mov
repz
xchg
fidivl
insl
push
ljmp
mov
push
and
adc
adc
fcoml
dec
loop
and
jnp
lret
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
clc
sahf
ljmp
pop
jl
push
cmp
push
bound
xchg
out
sti
mov
imul
cmp
sub
mov
bound
es
int3
sub
insl
test
and
and
fdivrs
adc
ds
je
mov
lock
daa
mov
les
cmc
xchg
sub
aas
lock
mov
orl
clc
jecxz
cmp
cmp
movsb
enter
sub
movsl
or
cmp
in
lds
mov
inc
loopne
add
jge
lock
pop
pop
cltd
in
sbb
fwait
ja
or
mov
xor
rorb
or
mov
xor
aaa
out
sbb
sbb
xor
cli
cmp
xchg
lods
push
xchg
imul
pop
dec
aas
stos
adc
mov
movsl
fsubl
xchg
mov
fstp
mov
orb
std
in
cmpsl
xor
sub
fstpl
inc
rcl
jnp
inc
into
fisubrs
cmp
mov
xchg
or
pop
xchg
mov
ds
call
cmc
imul
xchg
mov
aaa
cld
pushf
pop
fiaddl
repnz
jne
or
leave
ret
and
jns
mov
enter
add
adc
push
xor
cmp
dec
popf
imul
test
xchg
mov
pmulhuw
jae
dec
xlat
loope
jo
or
pop
mov
gs
fimuls
push
dec
fidivs
out
insb
adc
mov
xor
add
pop
ret
lea
or
or
push
mov
jo
mov
out
rcll
sti
mov
and
push
aas
xchg
or
mov
dec
fs
and
mov
mov
push
addl
lds
es
loope
mov
movsb
clc
xchg
xchg
xchg
mov
pop
jno
sub
outsl
sbb
daa
mov
add
ja
or
push
cmc
test
movsl
push
mov
and
leave
jo
cmpsl
rolb
imul
push
rol
mov
inc
in
push
and
jns
fisubrs
mov
lret
jecxz
cmp
lea
aam
add
fsts
cli
xor
pop
mov
fistps
pop
repz
pushf
iret
rorl
mov
mov
cltd
in
and
test
pop
popa
and
xorl
or
sbb
mov
je
sbb
lcall
js
data16
mov
cmp
xchg
jecxz
imul
pop
sub
in
sti
repz
inc
outsb
or
sub
aaa
pop
push
lea
mov
sub
sub
out
xchg
aam
mov
lock
add
push
fmuls
mov
dec
push
imul
add
dec
test
dec
adc
push
xchg
inc
xchg
outsb
jbe
ficoms
scas
hlt
xchg
xchg
mov
mov
fwait
mov
or
lods
addr16
das
lods
mov
xchg
xchg
pop
outsb
repz
repnz
lcall
ljmp
sub
adc
insb
arpl
into
aas
cmpsb
dec
and
sub
pop
xchg
mov
out
and
jo
shlb
cmp
aas
pop
cld
jb
jmp
push
push
out
test
mov
loopne
stos
inc
mov
pushf
dec
pop
pop
sbb
push
loop
movsb
daa
stos
fimuls
mov
js
and
add
pop
movsb
cmpsb
scas
pop
and
mov
lods
clc
jno
mov
adc
pop
xrelease
fdecstp
aad
cmc
cmp
xchg
and
loop
adc
cli
ja
mov
imul
hlt
or
icebp
pop
loop
test
and
xor
jae
and
xor
add
cmp
es
sub
dec
sub
aam
in
decb
push
ljmp
aas
cli
repnz
daa
icebp
adc
push
pop
pushf
and
mov
xchg
mov
or
jno
les
push
mov
lahf
int
es
push
sti
in
xor
mov
pop
pop
mov
rol
pop
jg
add
cmpsb
int3
sub
arpl
clc
jmp
aas
dec
dec
adc
jno
aas
dec
xchg
hlt
xchg
movsb
fistpll
hlt
outsl
sahf
fiadds
jnp
test
mov
xchg
push
call
fildl
dec
inc
adcl
or
pop
jmp
imul
lock
nop
cld
enter
adc
mov
mov
xchg
fsubrs
xchg
sub
inc
sar
ja
rorb
jge
shll
pop
aas
test
cmpsb
adc
sub
mov
mov
xchg
mov
sbb
cmpsb
out
insb
hlt
inc
adc
sub
xchg
cltd
jecxz
faddl
push
lods
lahf
mov
int3
int
inc
insb
inc
adc
loopne
fdivp
xchg
or
test
loopne
inc
pop
jno
sub
or
gs
xchg
mov
cmp
sub
push
es
fwait
pop
cld
ja
popl
lods
xchg
in
cmp
scas
mov
jo
clc
pop
filds
pop
cmpsl
add
jg
lock
js
pop
push
and
stos
ljmp
mov
test
mov
push
cld
xchg
pusha
test
loop
lods
push
push
jg
in
movl
inc
lods
imul
popf
mov
adc
loope
test
xor
pop
inc
sarb
xor
popf
inc
jmp
cmp
xchg
pop
inc
test
lods
lcall
jl
fwait
mov
adc
sbb
icebp
lods
out
shr
mov
jnp
mov
loope
in
out
je
dec
bndldx
adc
sub
lret
xlat
pop
pop
cmpsb
xor
pop
sarl
add
pusha
mov
into
xor
loopne
cmp
movl
push
inc
dec
push
jne
jecxz
jae
test
xchg
pop
cwtl
cmpsl
and
ja
add
inc
sub
mov
jbe
les
mov
outsb
clc
imul
lahf
repnz
fnstcw
mov
adc
pop
jmp
enter
cltd
lret
test
push
int
inc
in
pop
test
lret
add
pop
and
clc
mov
cmp
out
in
loop
xchg
jle
mov
add
adc
and
mov
sbb
into
sbb
out
push
jl
roll
cmp
and
adc
imul
pop
out
and
add
lcall
push
popa
xchg
push
shlb
mov
imul
cmc
cli
jb
mov
dec
imul
mov
test
jnp
inc
int3
imul
dec
xor
shlb
push
insl
push
mov
or
mov
imul
mov
mov
int3
and
mov
and
jo
clc
insl
and
and
xchg
inc
jae
push
pop
jns
lods
inc
cli
jne
out
push
add
jbe
adcb
out
add
clc
cmc
pop
aam
or
cli
testl
adc
ss
fsubrp
push
dec
or
decl
lret
fisubs
dec
jg
outsl
jnp
iret
mov
outsl
ret
aaa
xchg
sarb
scas
test
imul
pop
or
cmc
and
jns
inc
push
ret
cmpsl
dec
js
push
ljmp
dec
arpl
xchg
add
loop
dec
imul
xchg
popa
repz
data16
ss
test
popa
rorb
sbb
xrelease
ret
outsl
push
jo
mov
push
in
dec
xor
mov
fs
cmp
jo
in
pop
push
pop
pop
pushf
inc
movsl
mov
aad
inc
jg
scas
mov
mov
loopne
push
insb
push
int3
mov
lds
mov
testl
sub
mov
fidivrl
repz
ds
repnz
mov
jge
jecxz
scas
int3
push
in
jmp
mov
pop
mov
xor
fcmovnbe
mov
mov
mov
xlat
stc
js
xchg
call
mov
or
mov
pop
or
ret
mov
sub
out
jmp
pop
aas
and
shlb
ficoml
cmp
shll
dec
outsl
add
arpl
gs
inc
push
subl
in
xor
pop
pop
jo
cmp
lret
shl
int
or
fdivrl
into
fmull
test
sub
lods
insl
out
scas
je
xorl
cwtl
xchg
insl
push
push
mov
pop
outsb
cmc
imull
int
loope
jg
sbb
pop
sbb
fsubrl
je
cmp
hlt
imul
shll
mov
xor
rorb
cmc
imul
pop
movsl
cmp
mov
push
mov
int3
adc
mov
pop
pushf
bound
loopne
nop
sbb
arpl
mov
push
arpl
xchg
int
mov
insb
fs
sbb
mov
mov
and
cmpsb
jecxz
xor
push
aad
add
adc
mov
out
loop
jo
enter
mov
scas
incl
sub
lret
jmp
pop
int
pop
jo
push
mov
inc
in
adc
sub
hlt
nop
lcall
mov
fwait
xor
lret
push
rorb
inc
jae
inc
bound
inc
lea
pop
xchg
lret
lock
push
push
xchg
pop
movsl
lea
cli
mov
pusha
xor
mov
xchg
cmc
xlat
inc
outsb
lret
repnz
mov
aad
cmpsl
add
pop
push
add
out
inc
mov
cmp
push
ds
fiadds
std
lods
adc
sarl
les
inc
push
cmp
ret
push
push
test
das
jnp
out
push
nop
sub
or
sub
std
sub
rorb
push
arpl
jge
ljmp
js
cltd
mov
int3
addr16
adc
mov
out
mov
or
sub
in
push
xchg
and
clc
xor
les
ret
mov
mov
and
cwtl
cld
fistpl
mov
inc
push
mov
cli
lret
push
add
sbb
lcall
pusha
stos
mov
test
and
mov
pusha
xchg
dec
mov
pop
push
incb
inc
mov
and
pop
hlt
test
in
pop
pop
dec
incb
xchg
lahf
dec
inc
stos
or
jno
mov
scas
xchg
or
addr16
rorb
add
push
aaa
pop
jnp
xlat
push
push
movsb
xchg
mov
outsl
xchg
push
fndisi(8087
push
pop
mov
loope
pushf
imul
inc
int
cmp
or
das
in
lret
jecxz
fidivl
out
pop
fists
arpl
out
and
adc
cs
out
and
fstps
aam
lods
enter
mov
loope
push
mov
mov
sub
and
popa
mov
xchg
leave
das
jmp
cmp
adc
rorb
inc
nop
mov
ror
movsb
ds
into
xchg
fcmovnu
nop
gs
mov
jmp
pop
sahf
loope
cmpsl
popa
mov
lahf
cltd
imul
dec
push
cwtl
daa
out
cmp
mov
or
cmp
dec
aam
loop
int3
pop
imul
orb
test
lahf
lahf
pop
xchg
push
aaa
ja
popa
int3
rcrl
adc
cltd
out
mov
push
mov
fabs
clc
nop
xor
push
mov
enter
cs
mov
cs
pop
ss
adc
pop
and
adc
or
xchg
dec
fisttps
mov
mov
push
repnz
mov
loopne
rol
int
xchg
ret
xor
movsb
js
mov
mov
in
sbb
adc
dec
dec
nop
cmp
mov
adc
xchg
stc
pop
outsb
jo
dec
mov
loope
test
cs
sbb
int
xchg
jecxz
add
push
ss
shl
mov
sbb
xchg
cs
aaa
inc
enter
icebp
cmp
jo
mov
dec
adc
push
call
or
loop
xchg
jg
push
outsb
pop
cmpsb
in
loop
jne
pop
jne
jb
adc
test
in
pusha
aaa
jmp
jge
jne
fucom
push
cmp
adc
adc
pop
lea
dec
xor
jmp
mov
cmp
inc
out
andl
aam
cld
add
lcall
mov
xchg
sub
ljmp
jnp
pop
and
repnz
int3
aas
mov
out
sub
aas
sbb
in
sbb
std
push
out
stos
cmp
clc
lcall
in
dec
data16
in
in
mov
shrl
fwait
sarb
pop
mov
out
xlat
pop
push
sub
push
or
stos
xlat
jp
pop
loopne
xchg
sti
cmpsl
call
pop
dec
sub
mov
pop
cs
cmp
mov
push
sbb
fcompl
rolb
jle
jno
or
push
daa
pop
scas
dec
push
cmpsb
jae
data16
out
mov
in
int
in
dec
push
cmp
xor
xchg
fiadds
popf
and
xchg
and
dec
adc
imul
xor
in
or
adc
adc
jmp
push
out
cmp
roll
mov
outsb
xchg
mov
fcomps
sub
or
fnstcw
ja
and
outsl
or
stc
jl
and
fldt
pop
popa
adc
hlt
call
adc
dec
pop
dec
add
inc
mov
ds
xor
xchg
lcall
mov
ret
mov
fs
ret
cwtl
adc
outsb
movsb
aad
int
mov
cmpsl
popa
inc
call
push
sbb
iret
das
add
push
cmp
push
sbbl
inc
pop
xlat
in
loope
loopne
lret
push
pop
sahf
jo
mov
popa
in
and
jle
mov
jl
rcrb
pop
mov
sub
pushf
fcomps
cmp
mov
lds
or
mov
fsubs
pop
js
cmp
jno
inc
lret
stos
mov
aad
fbld
mov
cli
scas
movsl
mov
push
orb
sbb
or
and
popf
mov
das
imul
lcall
loopne
inc
in
pop
aaa
sti
test
in
shl
cwtl
shl
or
xorl
pop
into
aaa
out
int
jnp
ret
scas
mov
loopne
mov
add
push
movsb
data16
adc
sarl
imul
add
dec
insl
pushf
in
and
adc
jb
sbbb
add
cwtl
adc
sahf
pop
std
jns
jle
or
lahf
outsl
inc
mov
inc
mov
xor
loope
imul
push
pop
adc
es
mov
ja
out
aam
cmp
inc
ljmp
mov
js
mov
sbb
sti
add
jg
rorb
xchg
scas
fsubrl
adc
push
or
mov
movsl
or
sub
popf
aas
pop
adc
cmp
xchg
and
iret
sbbl
into
cmp
lret
lock
outsb
xor
xor
push
call
lock
test
inc
gs
pop
push
ret
repnz
mov
cwtl
or
pop
cltd
sbb
sbb
or
shrl
scas
xchg
sbb
jle
cld
lds
cmp
add
subb
mov
lock
rcrl
mov
pushf
data16
loopw
aaa
inc
out
or
enter
sbb
mov
push
mov
fsubs
pop
lea
push
ds
sub
push
jno
sbb
pop
mov
stos
rorl
int3
push
fistpll
mov
dec
or
rclb
xchg
dec
test
pop
notb
inc
sbb
jns
fsubr
dec
icebp
mov
dec
xchg
cmp
pop
popa
lods
jge
pop
int
std
inc
into
and
sub
jo
cs
mov
fistl
fstpt
les
imul
cmp
mov
mov
enter
adc
adc
es
pop
or
lods
adc
or
or
fcoms
inc
sub
insl
into
inc
jle
inc
imul
aaa
js
jecxz
jl
sub
cli
lods
enter
repz
in
fs
gs
in
inc
cmp
mov
sbb
cli
notb
dec
xor
pop
aas
mov
aam
xchg
or
mov
in
cs
push
and
rcl
push
fnop
or
lods
mov
cmc
cmp
pop
push
insb
popf
xchg
cmp
bound
inc
pop
pop
jle
jmp
xlat
adc
outsb
nop
in
and
cmpsl
xchg
sarb
or
push
add
sub
test
or
ljmp
lea
push
mov
mov
mov
sbb
insb
push
mov
add
and
sbb
bound
jl
mov
fidivs
hlt
ljmp
pop
loopne
pop
xchg
ja
push
and
cmpsl
ljmp
nop
dec
jle
aam
mov
fadd
or
fst
stc
lock
arpl
xor
aad
test
sbb
orl
pop
rolb
dec
jg
mov
cmp
push
adc
fldln2
test
jnp
scas
and
ss
stc
dec
jno
test
push
test
xor
jle
enter
in
dec
inc
sub
or
mov
pop
outsb
insl
rcll
leave
inc
iret
inc
int
push
sbbl
stc
in
xorl
cmp
dec
gs
mov
jp
push
xchg
or
test
jle
jle
and
adc
loopne
test
mov
sbb
adc
push
fsts
nop
insb
in
cmpsl
cmc
adc
fwait
lea
sub
and
in
stos
daa
lds
and
mov
dec
inc
cs
mov
fldz
inc
nop
or
scas
mov
pusha
cmc
push
mov
jg
cmp
rcr
clc
lods
dec
shrl
or
sub
adc
ljmp
icebp
lcall
out
inc
add
sbb
mov
test
add
cmp
jge
pop
mov
loop
mov
es
inc
out
cs
stos
mov
insb
cmp
and
xchg
sbb
cld
jno
mov
ror
fistps
dec
ja
jl
adc
cltd
jb
xchg
mov
pop
fisubrl
enter
mov
aas
sub
mov
sub
mov
repnz
stos
lret
aad
stos
jns
mov
or
jg
sub
outsb
shll
incl
fists
lock
mov
cmpl
xor
shll
and
mov
lret
lahf
push
imul
inc
js
aas
inc
data16
cltd
ficoms
push
or
js
sbb
inc
cli
test
int
xor
mov
inc
adc
push
mov
jne,pn
adc
sbb
pop
push
int
xchg
idivb
and
push
push
stos
and
jbe
ljmp
sbb
fadds
adcb
icebp
xor
test
ds
je
icebp
es
lods
mov
fistps
jne
xchg
pop
or
out
fs
sbb
adc
frstor
fimull
aaa
xlat
orb
cmpsb
sub
jnp
sti
add
lahf
adc
sub
fsubl
inc
lea
dec
lcall
and
or
push
inc
lods
xchg
pop
mov
adc
add
sub
fimuls
aas
mov
mov
pop
je
pop
mov
push
push
xchg
push
push
lods
and
shl
int3
jp
push
sbb
sub
js
push
in
jb
je
cli
hlt
cmp
adc
cmp
lret
mov
pusha
push
mov
cld
sahf
mov
insl
cmp
push
jns
leave
pop
int3
push
jno
outsl
fbstp
mov
rcll
in
int
aad
js
ljmp
repz
jb
mov
push
mov
repz
enter
add
mov
sub
xor
orl
in
lods
fnsave
dec
mov
jmp
and
ja
sbb
adc
jecxz
pop
cmp
test
in
daa
test
gs
adc
aam
push
outsl
bound
mov
std
lods
cld
in
cmp
xor
daa
jmp
jnp
mov
pop
or
movsb
push
addb
xchg
int
arpl
aaa
jmp
imul
les
inc
ljmp
push
mov
aas
xchg
or
sbb
inc
enter
push
lds
cmc
cwtl
loopne
js
dec
cld
and
pop
pop
mull
jmp
pop
cmpsl
push
or
test
hlt
mov
add
sub
mov
add
mov
sbb
aad
push
das
dec
loop
inc
je
cmp
adc
imul
mov
orl
jle
outsb
or
insb
jbe
das
lcall
mov
cmp
add
pop
dec
in
loope
incl
sahf
xchg
dec
xor
cmp
inc
aad
dec
scas
sar
sub
add
les
mov
arpl
lret
fildll
lods
xor
cmp
and
push
fistpll
std
aaa
fucomip
call
imul
bound
xchg
dec
mov
dec
jnp
push
xor
in
and
jns
into
mov
pop
mov
mov
dec
jbe
push
or
out
out
lret
rclb
push
mov
hlt
popa
or
cmp
sub
xchg
adc
rolb
mov
aas
push
fwait
and
sbb
and
sbb
fucomi
ret
loop
inc
xchg
sbb
push
lret
pop
xor
xor
and
addb
xchg
insb
sub
fcmovne
sub
or
lea
daa
or
or
test
adc
add
out
aam
xor
mov
decl
scas
negb
sub
mov
stos
adc
in
in
sub
mov
loope
add
inc
les
jno
mov
cmp
push
pop
and
inc
xor
std
dec
repnz
outsl
mov
out
icebp
fiaddl
and
scas
jge
jle
out
push
or
inc
popf
push
push
cmpsb
add
add
sub
cmpsl
mov
test
jns
xlat
mov
ror
fwait
aad
mov
aad
adcl
loope
add
sub
popf
mov
clc
imul
push
mov
scas
in
shlb
call
int3
insb
repz
dec
ret
mov
jl
mov
lcall
xor
lods
or
add
js
adc
aaa
fnstenv
adc
push
pop
pop
xchg
xlat
mov
xor
nop
cmp
std
add
push
xor
sub
xor
or
adc
scas
jns
loope
sbb
nop
stc
mov
test
xchg
aam
push
sbb
jge
xchg
imul
dec
mov
icebp
push
dec
xor
icebp
adc
shll
or
pop
shlb
fs
into
mov
gs
hlt
xchg
cwtl
aam
arpl
lret
xchg
stos
cltd
mov
inc
shlb
lods
aas
test
lret
jmp
enter
roll
lods
fldt
xchg
or
es
push
sarb
pusha
insb
xor
dec
inc
fisubrl
nop
movsl
pop
xchg
nop
push
sbbb
dec
jl
pop
dec
xchg
or
dec
clc
add
pushf
cmpsl
imul
negl
inc
xchg
push
data16
subl
adc
in
add
dec
xor
aam
lods
insb
push
fsubr
test
or
jg
jo
sbb
xchg
lds
lock
mov
push
and
sbb
shlb
sub
loope
push
xor
popf
test
test
jo
dec
jmp
outsl
aam
dec
pop
mov
xchg
or
cli
jne
cmpsl
ds
pop
mov
mov
test
lret
cmpsb
lcall
sbb
imul
loopne
xor
mov
hlt
xor
dec
imul
out
or
movaps
add
and
sub
pop
add
lret
xchg
leave
fxch
pop
inc
and
xchg
aam
xorb
xchg
test
jle
or
imull
inc
add
ljmp
and
scas
aaa
int
xchg
lods
sbb
cmp
push
mov
gs
fldl
dec
adc
mov
or
enter
lahf
jg
clc
sub
outsb
xchg
in
subb
lds
lods
lahf
test
cmp
insl
leave
mov
jmp
xor
mov
inc
popa
xchg
mov
dec
jae
aad
jg
cli
fistpll
and
test
cmc
mov
sti
or
gs
xor
cmpsb
lret
add
cs
sbb
rcrb
lods
push
inc
lret
pop
cmpsl
cmpsl
inc
jg
repz
inc
fists
inc
sbb
bnd
mov
xchg
sub
push
scas
mov
mov
xchg
test
jecxz
mov
aam
jae
push
ficomps
iret
jb
pop
inc
mov
push
dec
mov
pop
cmp
or
mov
shrl
mov
lea
test
jg
call
aas
mov
jne,pt
xor
lret
aas
mov
imul
in
push
dec
sbb
xchg
fnstenv
xchg
dec
cmp
and
xor
dec
sbb
add
cmpsl
adc
push
push
dec
mov
cmp
pop
push
push
jle
cwtl
inc
mov
pop
cmc
sbb
fnstcw
xor
mov
insb
rcr
jle
or
call
push
int
mov
js
insb
addr16
cmp
jo
dec
or
mov
xchg
xchg
jb
or
stos
sbb
pop
inc
outsl
mov
movsl
and
dec
shrb
pop
jns
pop
inc
inc
cmc
and
add
or
push
call
movb
bound
mov
or
aam
lret
cmp
hlt
pop
mov
xor
sub
idivb
into
cld
popa
dec
mov
jecxz
lcall
ss
in
sbb
mov
shr
mov
test
cmp
push
dec
cmpl
nop
add
mov
jle
cld
lret
push
dec
mov
in
sbb
sbb
pushf
sahf
in
lcall
js
adc
jl
mov
add
dec
sbb
popa
dec
rcll
xchg
mov
ljmp
xchg
xor
inc
mov
pop
jne
xor
push
cmpsb
dec
pop
out
fwait
and
es
jo
and
pop
push
popf
push
xchg
push
mov
outsl
aad
push
xor
pushf
mov
xchg
push
aaa
fmuls
pushf
gs
loopne
pop
and
inc
outsb
push
adc
pop
push
bound
xchg
in
adc
sahf
mov
pop
jg
dec
stc
mov
pusha
aas
aam
xchg
jl
lret
movsl
roll
int3
xchg
incl
int
into
cld
push
push
push
sbb
insb
pop
shll
insl
and
pop
sbb
sub
pop
ja
mov
inc
xchg
sub
mov
cltd
or
ret
mov
scas
icebp
sub
pushf
js
shlb
movsl
push
ret
mov
adc
cmpb
push
and
adc
sub
shl
addr16
xchg
sar
dec
sub
dec
cmp
dec
or
sub
enter
mov
outsl
mov
xchg
sub
inc
xor
sarb
movsl
inc
loopne
ljmp
jbe
das
outsl
es
mov
dec
sub
mov
jl
lret
int
mov
xchg
sub
push
add
dec
adc
loopne
mov
mov
clc
add
pop
cmp
sahf
dec
gs
loope
push
adc
mov
test
and
adc
xchg
adc
mov
mov
inc
mov
add
scas
pop
hlt
inc
cli
xchg
add
stos
aaa
adc
mov
xchg
mul
movsb
push
xor
add
add
popa
mov
and
jle
adcb
call
xchg
int3
cmpb
add
add
and
and
cmp
shll
enter
inc
sahf
cmp
mov
out
jne
push
mov
decb
mov
inc
mov
xchg
pop
dec
pop
pop
outsl
jnp
stos
pop
xlat
in
clc
mov
daa
pop
outsl
xchg
and
dec
loop
or
ret
push
or
ret
in
sub
or
ja
mov
in
mov
mov
push
jp
int
int
rcll
or
mov
or
and
repnz
fmul
out
ror
mov
fsubrs
cmc
mov
in
shll
insl
cli
push
mov
mov
gs
and
mov
ds
pop
xlat
pop
mov
mov
mov
push
mov
adc
pop
hlt
adc
push
rcll
adc
pop
fistpll
cwtl
add
jmp
xlat
iret
mov
inc
lcall
mov
stos
cmp
ss
fsub
and
or
insb
pop
nop
out
shrl
movsl
adc
out
push
add
aam
lahf
outsl
daa
and
hlt
and
push
inc
shll
pushf
cmpsl
cmp
das
adc
jo
insl
sub
das
push
ja
mov
pop
dec
mov
xor
sub
mov
mov
dec
and
call
daa
outsl
in
and
jo
mov
cli
pop
sahf
sbb
sub
jne
sbb
cltd
pop
mov
or
test
cli
xchg
cmp
inc
jge
xchg
push
test
jnp
mov
mov
push
inc
and
or
call
pop
mov
lret
xchg
push
mov
dec
inc
cmp
mov
jo
pop
mov
jge
stc
pusha
push
sbb
sub
mov
outsl
cmp
mov
add
lret
xchg
into
inc
mov
rorb
mov
push
and
lods
test
and
mov
mov
mov
pop
dec
stc
test
sbb
mov
cmpsl
and
dec
cwtl
outsb
sar
lahf
add
aas
inc
jmp
xor
jle
inc
xchg
fbld
mov
js
sbb
cltd
dec
jno
out
xchg
dec
shll
push
sbb
cmpsl
movsl
push
mov
sub
jbe
faddl
jg
int
push
hlt
and
mov
fistpll
and
pushf
xchg
jne,pn
punpcklbw
pop
inc
pushf
cmp
in
in
cmp
lea
fmulp
inc
sbb
loop
in
cmp
lcall
pop
pop
call
shlb
jne
adc
mov
cs
push
dec
mov
or
mov
mov
mov
mov
jl
adc
xor
inc
add
sbb
rcll
movsb
dec
in
pushl
insl
outsb
das
pushf
sahf
shlb
push
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
pusha
gs
jl
pop
jl
sub
icebp
lret
dec
bound
aaa
mov
push
jo
xchg
test
test
out
inc
xlat
lcall
mov
add
out
icebp
xchg
lret
pop
jp
test
in
push
cmp
stos
dec
mov
fmulp
loopne
inc
popa
dec
mov
fmull
jne
xor
outsl
mov
fldt
xabort
test
push
mov
jnp
jo
dec
pop
popf
ljmp
int
cmp
aam
icebp
push
pop
ss
sbb
lds
adc
aas
lcall
push
pop
sar
pop
mov
mov
mov
cwtl
jecxz
lret
test
lods
sbb
ret
sbb
jnp
jbe
lods
inc
push
mov
sbb
inc
int3
shrl
je
jb
push
push
adc
mov
testl
repz
movsb
or
add
shll
and
testb
adc
lds
popa
cmp
outsl
out
jl
jo
pop
je
mov
ja
pop
dec
ljmp
lock
jns
jb
shll
icebp
test
aad
ret
rcr
addr16
add
sbb
call
jae
or
dec
mov
pop
negl
aad
cltd
add
ss
jmp
ljmp
out
test
pop
scas
pushf
push
sbb
cmpsb
xchg
mov
cmp
repnz
imul
dec
sbb
loopne
aam
pop
xchg
lcall
stos
xchg
mov
dec
pusha
call
fadd
cmc
int3
pop
or
mov
pushl
push
jecxz
push
nop
push
or
test
push
call
cmc
dec
lret
push
push
adc
inc
fs
mov
cmp
lret
or
mov
xor
fcomip
cli
xchg
jo
movsl
mov
decl
out
mov
fld
aaa
sub
sarb
das
movsl
clc
scas
daa
pop
dec
or
rcrl
pop
or
push
xchg
xor
int
loopne
mov
sub
ja
mov
mov
addb
mov
arpl
lods
pop
lods
sub
mov
repz
jp
jge
dec
mov
mov
sub
inc
cltd
js
enter
lret
test
gs
jmp
add
add
test
nop
out
mov
int
mov
ja
mov
and
mov
sbb
push
cmp
cwtl
pop
push
fisubs
lds
bound
or
in
cmp
popf
adc
mov
add
push
or
lods
pop
xchg
shlb
mov
xor
xchg
out
push
inc
mov
cs
pusha
add
loop
fstpl
jmp
mov
xor
push
jg
adc
test
sarl
lods
les
pop
mov
mov
out
xchg
ret
cmpl
cltd
jl
mov
or
xchg
movsl
sbbb
mov
cld
and
mov
out
stos
cwtl
push
pop
enter
fs
add
mov
add
in
stos
mov
ret
dec
pop
mov
inc
and
loope
into
addb
sub
adc
bound
fistpl
mov
mov
push
xlat
push
dec
aam
movsl
xorl
pop
xchg
push
push
fwait
xor
shlb
lock
stc
ljmp
test
imul
std
outsl
jp
scas
mov
push
mov
ja
sub
or
cmpl
cs
sub
movsl
out
test
push
and
outsl
sub
call
rorl
or
outsb
adc
sbb
lcall
mov
or
fcmovnbe
ljmp
jecxz
push
push
push
std
cs
outsl
sti
mov
lret
mov
fwait
popf
aam
and
jecxz
int3
lods
stc
frstor
mov
cld
adc
add
scas
mov
push
add
insb
outsl
or
adc
and
push
cmpsb
or
insl
inc
into
sbb
adc
sbb
add
fdivrl
or
sbb
cmc
jge
call
les
pusha
iret
mov
or
or
push
jle
mov
xchg
adc
cmp
push
ret
js
pop
jne
or
daa
mov
das
into
xchg
mov
lock
cltd
xchg
in
fildl
sbb
in
dec
arpl
add
lds
and
mov
sbb
xor
dec
mov
mov
jp
insb
pusha
or
hlt
adc
cmp
movsl
ffree
inc
xor
jecxz
mov
jno
cmovo
xor
es
ds
or
mov
push
fisubs
xchg
sbb
sbb
clc
or
xchg
adc
xor
fsubr
mov
out
scas
xor
xchg
sbb
xor
nop
push
pop
sbb
mov
lcall
mov
sbb
fisubs
mov
add
insl
lret
pop
add
inc
jns
lds
ljmp
xor
sbb
sahf
add
sub
ret
loop
cmpsb
maskmovq
notl
faddl
into
mov
ret
int
cs
jge
push
mov
inc
lea
xchg
je
mov
or
sub
cmpsl
adc
mov
sti
in
push
ja
and
insb
push
dec
cltd
adc
inc
xchg
pop
scas
movsl
xor
ljmp
test
pop
mov
pusha
fcompp
push
movsb
icebp
dec
cli
or
pop
call
shr
aas
jg
jl
daa
aas
mov
pop
inc
and
fistpl
in
cmp
push
and
rol
into
sub
jo
push
pop
and
jo
dec
sti
scas
pusha
mov
aas
popa
fdivs
ljmp
dec
std
push
mov
iret
mov
subb
jbe
into
sbb
pop
xchg
mov
mov
insb
dec
and
sbb
xchg
test
jmp
xchg
inc
iret
scas
jns
mov
and
icebp
jne
insb
sbb
mov
lcall
push
add
jmp
add
jecxz
imul
push
je
mov
call
sbb
and
and
fbld
mov
stos
dec
mov
jmp
push
inc
loopne
icebp
popa
ss
mov
insl
cmp
ds
push
dec
adc
ret
pusha
popf
and
inc
je
sbb
pop
mov
sbb
repz
cmp
cmc
int3
inc
in
out
lret
mov
inc
rclb
js
imul
xorb
data16
cld
cmp
jle
es
push
mov
ret
xor
andl
pop
fnstcw
inc
dec
cmp
clc
cmp
jno
push
cmp
xchg
adc
stos
pop
int
sub
idivl
mov
mov
and
ret
push
mov
lcall
aam
notb
lea
incl
sbb
or
pop
cmpsl
and
pushf
dec
ljmp
add
xchg
sarl
mov
xchg
xor
mov
sub
mov
push
dec
movsb
jno
ja
movsl
and
fdivrl
sub
popa
sbb
call
incb
scas
sbb
in
pop
adc
sub
mov
ljmp
xchg
loop
mov
mov
xchg
shll
adc
lret
nop
pop
sub
xor
inc
loopne
scas
shll
ss
mov
jo
mov
inc
pop
loop
test
call
dec
jbe
test
test
stos
fcmovbe
pop
add
sbb
and
sub
aam
jge
pop
test
pop
dec
outsl
test
pop
push
addl
push
scas
out
in
in
xchg
or
mov
bound
les
mov
test
fcompl
pop
dec
dec
jne
and
or
or
lock
je
imul
fbstp
cmpsb
push
ss
jecxz
jle
scas
jb
jmp
xchg
add
popf
aad
jl
xor
outsl
dec
and
imulb
aad
iret
in
in
das
gs
subl
lock
test
mov
mov
cld
ret
mov
sub
mov
xchg
scas
test
fistpl
pop
adc
mov
jbe
pusha
and
shl
jae
xor
or
jp
cld
cld
mov
adc
out
fcoml
clc
sbb
ljmp
pop
popf
xchg
push
lret
xchg
xor
mov
sbb
jle
sbb
call
mov
sub
and
sub
pop
aaa
inc
rcll
adcb
imul
mulb
test
dec
mov
sub
jle
push
and
xor
add
inc
jns
push
lods
cmc
js
test
enter
sub
imul
and
lahf
add
jb
push
push
adc
stc
pop
or
push
aam
pop
das
mov
sbb
insl
jle
sti
fsts
mov
sub
add
inc
outsb
push
loop
repz
test
push
imul
sub
test
leave
xchg
jmp
pop
sti
mov
sbb
fisubrs
cmp
bound
stc
cwtl
mov
mov
jb
popf
and
lods
xor
in
jno
xchg
aaa
sub
je
inc
cmc
testl
jae
cmpl
insl
cli
pop
cmpl
out
lds
cmp
loopne
call
addr16
in
pop
loop
xchg
aam
sub
or
push
test
adc
inc
push
xor
mov
jle
mov
jo
je
mov
inc
or
pop
adc
cmpsb
aad
jle
cmpsl
jne
das
shrb
lret
js
lret
cwtl
pusha
aam
pop
out
and
xlat
movd
loopne
xor
push
out
cmp
add
inc
fadd
xchg
icebp
shrl
arpl
pop
cmpsl
add
mov
mov
add
test
mov
out
test
je
add
cltd
inc
loope
out
mov
adc
les
push
adc
enter
nop
mov
stos
jnp
lods
fld
sub
fcomps
push
push
into
popa
jb
push
push
mov
out
mov
pop
fmuls
or
xor
aaa
int3
mov
cmpsb
add
ljmp
hlt
and
dec
inc
sub
sub
sub
aas
ss
sbb
lret
or
fldt
fisubs
lahf
adc
mov
xchg
stc
movsl
cmp
repz
jo
sbb
sbb
jecxz
and
test
das
dec
cld
mov
adc
and
cmp
or
pop
add
xor
cli
mov
jl
push
inc
or
pop
mov
leave
push
pop
cmp
and
dec
or
xchg
jnp
ds
sbb
lock
shr
xlat
ljmp
in
push
lea
enter
imul
add
add
dec
or
adc
jbe
jecxz
and
push
and
add
leave
faddl
popf
jge
mov
add
jl
pop
dec
into
out
shr
in
cs
fwait
inc
bnd
int3
aaa
cmpsl
fs
pop
push
repz
add
int3
pusha
ret
mov
jg
popf
sub
pop
movsl
and
es
shlb
or
mov
push
cmpl
sbb
int
sbb
push
push
fnsave
popf
sub
push
lds
sahf
or
rcrl
int3
mov
sbb
jecxz
dec
mov
jle
dec
sub
adc
xchg
aam
sbb
dec
hlt
inc
cli
test
xlat
cmc
dec
and
jge
aad
add
mov
add
hlt
dec
push
mov
sbb
pop
sub
jecxz
lods
jnp
out
xor
mov
and
mov
ret
aad
shlb
inc
mov
hlt
mov
mov
sub
cmp
aas
xorb
cmp
xchg
pop
sbb
rcll
xchg
mov
outsl
fisttpl
enter
stos
or
movsl
inc
repz
int3
mov
inc
movsl
sbb
dec
adc
push
adc
cmp
cmp
jno
sti
jmp
add
pop
and
in
iret
mov
cwtl
xchg
jae
jo
jnp
sub
adc
pop
sub
int3
inc
mov
push
jecxz
xchg
add
movsb
mov
mov
insb
inc
sbb
add
into
jo
adcb
aad
jmp
int
fcoms
test
rol
jo
push
xchg
mov
jl
aaa
cmp
inc
pop
xchg
cmp
scas
mov
jmp
and
inc
aaa
add
mov
mov
lock
mov
sbb
movsb
mov
gs
xchg
lods
dec
push
mov
popa
mov
sbb
jb
jae
inc
sub
repnz
mov
fwait
imul
fistps
push
notl
sbb
scas
mov
loope
fadds
push
lods
pop
xor
cmpsl
sti
adc
mov
jne
les
sbb
mov
inc
jno
mov
xchg
ret
jg
enter
adc
xchg
xchg
imul
sbb
test
dec
sub
stos
push
rcrl
cmpsb
pop
loop
test
ds
repnz
aas
mov
rcll
mov
fs
rcrl
sub
sbb
dec
pop
inc
jne
adc
cmp
mov
dec
jnp
pop
adc
and
push
mov
xchg
and
push
shl
iret
mov
xchg
pop
cmp
cmp
into
insb
mov
insb
imul
mov
cmpsl
pop
dec
mov
cmp
stos
xchg
mov
int
jle
push
test
mov
mov
daa
pop
jnp
mov
cmp
lret
jp
movsl
sub
mov
imul
add
js
outsl
or
push
clc
rcl
ljmp
xchg
xchg
loope
call
inc
cmc
in
loope
xchg
pop
dec
shlb
and
push
rolb
add
movsb
rorb
mov
aad
mov
xor
mov
loopne
xor
mov
inc
jb
pusha
pop
push
les
aaa
push
repnz
xor
xchg
jmp
not
sbb
pop
shll
scas
fmull
inc
sbb
push
es
hlt
or
cmp
jg
popf
out
mov
mov
xor
data16
mov
jbe
mov
inc
incb
push
adc
jge
hlt
xor
push
sbb
orb
int3
scas
pushf
pop
jl
jp
add
or
add
xor
mov
cmovg
in
pushf
add
idivb
mov
add
call
dec
add
push
push
sub
outsl
push
sub
dec
add
ret
jbe
pop
sbb
sbb
add
pop
sbb
fnstenv
and
lea
adcl
xor
or
and
scas
xor
shll
and
and
stc
pop
jbe
xor
lods
dec
fmuls
cmpb
ss
js
shrb
mov
xor
push
sub
mov
pop
xchg
loop
xor
call
dec
or
fistl
popa
shll
push
pop
adc
lahf
jmp
fs
or
sbb
sahf
movsb
jne
jle
push
xchg
sbb
push
cs
call
or
imul
add
out
ljmp
les
orl
mov
mov
push
sub
add
dec
dec
jno
imul
loope
xchg
bound
and
xlat
je
jg
pop
mov
mov
daa
lock
lods
add
add
mov
jecxz
fsubr
adc
mov
pushl
jge
cmp
sarb
inc
aaa
insl
mov
int3
cmp
xchg
negb
xor
xor
cmp
cmp
lds
mov
push
adc
insb
push
jbe
cld
mov
xor
lods
fiadds
out
dec
out
mov
shll
mov
xor
iret
leave
pop
stos
mov
or
push
aad
add
into
jno
xchg
rclb
faddl
imul
fstps
dec
sub
xor
mov
mov
jnp
push
test
xchg
negb
add
fwait
sbb
pop
pop
cwtl
sub
cmpsl
pushf
rolb
jnp
clc
xlat
out
mov
or
scas
xchg
addl
xor
cltd
lret
adc
fildl
push
mov
inc
fidivrs
xchg
iret
xor
fidivl
aam
lods
sub
mov
jl
add
or
lods
test
aas
push
daa
les
pop
ds
and
aam
jmp
and
stc
push
pop
or
xchg
lea
out
int3
das
dec
adc
dec
in
stos
xchg
mov
jge
or
int3
scas
cmp
repz
cltd
sbb
mov
popf
lret
push
mov
mov
pop
mov
mov
jns
mov
lahf
inc
mov
out
push
orb
out
insl
ljmp
pop
sbb
xor
dec
mov
mov
pop
adc
xchg
movsb
push
scas
push
and
pop
mov
mov
in
add
stos
jecxz
ret
in
mov
movsb
lock
inc
repnz
xchg
movsb
cmc
and
and
mov
mov
and
shrb
sub
or
jmp
pop
mov
testb
loop
dec
addl
xor
ret
out
sub
dec
out
mov
jmp
out
inc
xchg
jne
cmp
push
test
outsl
les
stos
mov
icebp
xor
mov
out
push
sub
jne
xchg
cmp
clc
in
int
rcl
sub
sti
fs
mov
sub
notb
add
mov
sbb
jo
sahf
fdivs
and
push
data16
fists
out
out
adc
mov
fldl2e
mov
shll
sub
and
aad
gs
out
out
jecxz
add
in
mov
push
loope
in
ljmp
nop
xchg
mov
push
sbb
pop
push
inc
shlb
test
jecxz
inc
pop
jne
jmp
pop
loope
xor
leave
jae
outsb
xor
push
jnp
js
lea
ror
fisttpl
and
or
inc
cmp
mov
leave
cli
push
xor
mov
pop
lea
mov
outsl
or
jmp
mov
or
xor
inc
or
ret
lret
cmp
mov
jne
cmp
push
jle
add
test
push
sar
sbb
push
test
loopne
test
insb
ret
xor
lcall
or
fidivrl
outsl
insb
jecxz
outsl
je
shr
lahf
arpl
call
cmpsb
jnp
pushf
repnz
mov
fimull
lods
push
sbb
push
sub
mov
dec
inc
mov
faddl
call
fwait
loopne
scas
adc
aas
mov
xor
jl
aas
sbb
jmp
sbb
push
movsb
add
push
das
inc
cmc
xor
movsb
adc
ret
stos
aas
mov
sbb
lret
faddl
jno
xchg
pop
sar
mov
cmp
leave
hlt
sbb
jg
cmp
push
dec
or
lods
sti
xor
cmc
ss
ret
aas
lods
testb
call
mov
dec
movsl
inc
and
jno
dec
ja
cld
xchg
mov
sub
push
jl
mov
hlt
mov
mov
pop
dec
dec
mov
addr16
pushf
sbb
mov
adc
adc
or
fbld
push
daa
ss
mov
out
loope
inc
mov
punpckldq
je
int
aaa
sbb
adc
movsb
and
xor
xchg
gs
iret
jns
in
addb
dec
es
imul
cmp
idivl
shlb
jl
dec
jne
xchg
mov
jns
sub
loopne
mov
pop
aas
pop
adc
cmpsb
dec
pop
ds
mov
xor
mov
add
dec
sub
fidivrs
cmp
xchg
mov
pop
jo
dec
xchg
out
add
fisubrl
jge
xchg
pop
mov
dec
adc
mov
mov
lcall
cltd
rcll
je
js
sbb
aas
mov
jae
cmpl
mov
cmp
mov
jl
sub
lahf
jecxz
adc
sub
sbb
ljmp
out
jmp
xorb
sub
cli
sub
pop
inc
sub
jle
pandn
cld
in
bnd
jbe
out
mov
mov
sub
and
sbb
sub
adc
lea
scas
stos
ror
mov
test
pop
jp
cmp
add
fcomps
das
jne
adc
sbb
mov
and
lcall
or
popf
imul
mov
fstl
xchg
lea
or
fcmovne
scas
inc
xchg
adc
mov
push
mov
and
cmc
repnz
andl
jne
int
aad
mov
xchg
ret
sarl
cld
rorb
stc
cmovbe
fisttpll
sub
rcll
lahf
sbb
test
cmp
inc
fcoml
push
xchg
jbe
jp
das
pop
inc
add
cmp
xchg
cmp
mov
adc
jno
pop
adc
scas
in
mov
push
lret
add
inc
adc
xchg
sbb
xchg
and
jno
inc
loop
lods
jge
cmp
lock
test
out
mov
hlt
shlb
gs
daa
add
or
jl
mov
outsb
or
cmp
push
int
inc
rcrb
xchg
lcall
xor
test
fbld
cmp
neg
cmp
fdivs
mov
and
add
ret
addb
jo
xchg
fbld
add
jl
and
bound
fdivr
inc
scas
std
and
mov
lods
mov
ljmp
push
in
shr
cli
cltd
mov
int3
mov
loopne
inc
push
dec
inc
ds
arpl
mov
mov
inc
movsl
push
or
mov
xchg
jae
sbb
aaa
enter
cltd
cmp
dec
stc
push
cmp
cmp
decb
dec
aas
pop
mov
loop
cmp
das
jb
mov
mov
xor
cmp
add
orl
mov
out
push
and
adcl
pop
jecxz
mov
mov
sub
sbb
in
loop
repnz
mov
testb
fbld
push
push
mov
mov
ss
mov
in
andl
xor
stos
popf
cmp
insb
outsb
sub
or
inc
jecxz
pop
sub
scas
jnp
mov
xchg
mov
stos
inc
pop
adc
mov
mov
push
in
mov
aam
mov
cmp
mov
shll
mov
xchg
xor
sbb
in
inc
add
fisubrs
outsl
mov
adc
ss
fdivrs
adc
inc
cld
and
sbb
shl
cmp
mov
add
jge
cmp
in
fcom
xchg
insl
or
push
dec
sbb
popa
sbb
lcall
shll
sub
mov
mov
ss
mov
adc
pop
adc
jne
cmpsl
xchg
push
pop
jle
inc
test
enter
out
incl
inc
in
aad
and
in
cmpsb
mov
mov
bound
imul
aam
sub
xchg
mov
and
sti
sub
ja
xor
into
mov
jbe
pop
or
mov
das
loopne
sbb
add
lods
lcall
test
inc
inc
mov
ret
mov
mov
sub
sub
cmc
clc
leave
inc
jns
pop
push
into
imul
pusha
enter
ret
jbe
gs
dec
fwait
xor
mov
jae
sahf
pop
mov
mov
adc
hlt
int3
push
aas
and
xor
sbb
pop
into
hlt
frstor
add
xor
outsb
adc
shl
sbbb
sbb
sub
lret
rorl
iret
pop
mov
and
in
jne
pop
jl
out
inc
in
rorl
inc
lcall
mov
fcmovbe
xlat
pushf
test
nop
hlt
xchg
lea
mulb
flds
out
out
je
out
pop
repz
dec
cmp
mov
ds
jge
or
push
lods
movzbl
stos
rorb
inc
call
mov
in
cmp
out
xchg
push
jle
push
popa
and
test
xor
and
sub
and
adc
cld
sub
aad
sub
add
cmp
cs
pop
push
lock
jns
and
sbb
or
je
int3
xor
mov
cmp
and
ss
push
dec
mov
xor
mov
push
inc
mov
dec
add
daa
mov
adc
in
inc
sbb
cmp
lods
push
bound
scas
jno
fnstcw
mov
xchg
inc
dec
push
das
and
mov
fmulp
jno
add
xchg
xchg
in
or
int
in
scas
fsubrp
mov
lock
sarl
in
cmp
sti
xor
jp
dec
mov
gs
stc
xor
into
les
imul
or
shlb
xchg
pop
push
pop
ret
inc
daa
hlt
fcmovnu
mov
fimuls
xchg
int3
adc
insl
data16
pop
lods
out
imul
test
enter
and
int
in
pushf
lock
shll
data16
xchg
addr16
push
aad
push
mov
cmp
push
je
adc
xchg
xchg
mov
add
clc
mov
push
sarb
mov
jmp
pop
inc
cmpsb
lock
arpl
push
enter
leave
mov
loopne
jne
rcl
sub
fstps
fsubs
cmpsb
insb
orb
dec
cld
stc
pop
or
inc
cwtl
mov
inc
pop
jae
inc
mov
ret
daa
sub
loop
or
ret
mov
cmp
mov
mov
adc
lahf
decb
ljmp
fwait
jmp
pop
out
and
fmull
push
add
add
adc
adc
repnz
jbe
push
leave
push
mov
push
loope
cmp
jbe
aad
test
faddl
xchg
jge
addr16
int
loopne
pop
mov
xchg
call
mov
jmp
repz
jns
mov
iret
adc
inc
repnz
enter
sub
or
sub
inc
enter
rol
or
push
rcr
cmc
imull
push
push
xor
push
sub
call
aas
fiaddl
jecxz
mov
sbb
fs
cmp
bnd
cwtl
mov
sub
xor
lock
shlb
ljmp
movsb
fs
lock
cmp
add
inc
repz
pop
shrb
shrb
or
lret
fcmovb
lds
pop
cmpsl
lock
dec
push
xchg
or
adc
rol
cmc
rcll
call
pop
xor
rcrl
jo,pt
mov
add
or
sbb
sub
lock
scas
cmp
adc
repz
xchg
and
test
hlt
and
and
xor
fwait
lret
das
jae
jns
inc
das
jle
jo
fimull
or
test
pop
pop
and
into
mov
push
sbb
call
movb
push
orl
xlat
fcompl
or
cli
add
in
mov
shl
mov
mov
fsubp
mov
add
and
cmp
push
inc
mov
jl
imul
mov
ljmp
adc
lcall
lds
push
ret
sti
xchg
dec
jmp
jle
push
dec
add
ja
mov
loop
mov
rcrl
cmc
pop
fisubrl
sbbl
sahf
pop
cmp
pop
push
pop
ret
push
dec
jle
jno
mov
incl
push
or
adc
es
mov
out
mov
mov
inc
pop
hlt
add
je
hlt
sti
in
stc
js
popa
push
fidivrl
js
mov
imul
lahf
sarl
mov
stc
adc
gs
outsl
jne
sbb
jne
dec
clc
sbb
bound
push
mov
int
jo
push
andl
sub
mov
rclb
pop
jne
sub
movsl
mov
pop
stos
sbb
and
mov
jnp
lret
sti
decb
rcr
xor
xlat
das
mov
daa
mov
lcall
in
xor
lods
aaa
push
sbb
push
mov
push
aad
cld
leave
shl
jb
push
xlat
jb
mov
add
or
icebp
leave
cmp
adc
xchg
int
arpl
out
fwait
xor
aam
testl
add
sub
cmp
dec
test
shlb
test
jo
imul
xchg
in
ficoml
lock
ret
das
xor
push
jno
les
xor
in
movsb
or
and
adc
imul
mov
scas
repnz
cwtl
lock
fdivr
push
dec
sub
je
jmp
inc
loop
pop
pop
xchg
xor
push
and
jecxz
and
sbb
dec
ss
mov
xchg
stos
test
sbb
or
push
dec
out
popf
bound
add
lret
lods
mov
mov
mov
pop
cmp
push
or
fistpll
popa
xchg
sub
iret
in
or
cltd
mov
arpl
push
dec
mov
mov
popa
mov
pop
push
popa
into
movsl
orl
addr16
leave
add
jle
shlb
lret
xlat
mov
sti
jno
push
or
ljmp
popl
push
jne
loop
push
mov
sbb
jge
xchg
aam
or
stos
mov
xchg
jae
jo
lret
xchg
js
repz
xchg
sti
pop
mov
dec
or
fstl
cmpsb
mov
cmc
xlat
cmp
inc
sub
out
aas
gs
nop
push
std
sub
test
mov
sbb
inc
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
pop
mov
pop
jl
dec
js
push
imul
sub
push
repnz
push
dec
inc
sarl
movsl
cmc
sti
jle
push
adc
fxch
andb
add
dec
inc
leave
mov
adc
sbb
shrl
mov
xchg
imul
jno
jne
and
inc
repnz
movsl
test
add
popl
aas
push
xchg
fcomps
aad
and
int3
fistps
iret
jno
rclb
loop
in
inc
cmp
test
mov
ret
xor
out
xchg
push
andl
mov
pop
jae
xlat
ss
or
mov
dec
cmpsb
je
stc
jnp
popa
jno
mov
movsb
mov
pop
xchg
nop
out
mov
movsb
push
nop
or
adc
fwait
sbb
mov
movsb
fwait
dec
in
mov
inc
rorl
mov
pop
loopne
pop
ret
cwtl
inc
pop
ret
mov
popf
call
push
and
ffree
in
mov
xchg
add
ljmp
scas
jbe
cltd
inc
mov
cmpsb
xor
out
xchg
push
adc
mov
dec
cmp
jge
inc
ds
or
adc
mov
xchg
push
data16
dec
mov
or
jg
cmp
and
lahf
mov
adc
mov
adc
daa
in
push
sbb
mov
bndldx
loopne
mov
or
xor
jp
mov
lock
aaa
xlat
sbb
push
lock
cmp
push
and
ss
pop
inc
inc
adc
movsb
aad
gs
pop
mov
inc
push
add
iret
jge
mov
xchg
es
cmp
pop
es
sub
adc
test
push
out
ja
dec
fisttpll
gs
pop
je
in
scas
aad
divl
fcmovnu
scas
shll
ret
and
mov
and
mov
ss
mov
ficomps
jmp
sahf
jbe
ds
xchg
push
mov
push
cmp
movsb
popf
xchg
jo
arpl
pop
out
mov
insl
cs
mov
aad
pop
lret
inc
add
aad
in
mov
inc
pop
and
or
push
pop
xor
sub
mov
xchg
aam
popa
jne
inc
push
je
ficomps
add
xor
fidivs
test
lret
pop
test
add
shlb
incb
outsl
enter
xor
push
in
jle
sub
mov
scas
pusha
test
pop
dec
push
jle
or
mov
lock
gs
cmp
fstpl
lret
out
das
push
sub
jmp
push
jmp
aad
mov
test
pop
xchg
cmp
pushl
pop
pop
ret
sbb
fwait
jne
test
mov
pop
xor
adc
mov
fcomp
fmul
mov
inc
jae
adc
sub
mov
push
push
push
insb
add
push
pop
lock
leave
addr16
test
fnstcw
jae
scas
nop
jecxz
cmp
in
adc
mov
mov
inc
adc
pop
mov
lods
clc
sbb
mov
addl
xchg
test
mov
and
lcall
or
pop
mov
aas
xchg
mov
xor
add
pop
cmp
push
je
push
dec
pop
in
sbb
push
test
in
xchg
push
add
adc
ljmp
outsl
das
add
mov
aaa
push
adc
sbb
pop
push
mov
lret
pop
clc
test
and
cwtl
ret
lods
aad
inc
mov
jl
jne
mov
xor
int3
loope
sbb
lea
jle
sub
aad
mov
push
jmp
and
sti
sub
xor
lods
sub
sub
das
mov
in
mov
xchg
xchg
ja
mov
push
hlt
std
cltd
in
imul
jb
or
xchg
mov
pop
adc
jne
nop
sahf
dec
scas
cld
stc
fmul
insl
push
add
xor
int3
mov
jl
mov
push
mov
ret
jns
ret
test
gs
scas
cltd
fmulp
lds
push
sbb
dec
inc
mov
int3
mov
pop
icebp
pushf
lret
push
inc
xor
fwait
mov
mov
xor
enter
clts
push
or
adc
test
mov
test
sub
or
mov
xor
movsl
mov
test
nop
adc
test
mov
insl
clc
push
add
or
mov
pusha
data16
aaa
inc
dec
invd
dec
mov
mov
int3
sub
mov
cmc
mov
outsl
popf
and
push
mov
cmpsl
test
adc
movsl
int
or
jo
frstor
lods
repz
and
push
andb
mov
testl
pop
test
push
dec
push
popf
pop
cmp
out
loope
popa
or
push
adc
sub
mov
addr16
push
push
into
scas
nop
fcmovu
xchg
fwait
jnp
sti
int3
adc
pusha
cmp
int
fs
jge
shl
pushf
jmp
jmp
lcall
cmp
mov
mov
stos
data16
dec
mov
sbb
cmp
push
jo
cmpsl
fwait
jbe
and
xchg
cwtl
jo
sub
mov
xor
data16
xor
pushf
aad
popa
lret
jge
mov
and
rorb
iret
jo
xchg
jg
scas
fdivrl
add
pop
fnstcw
fs
mov
or
push
dec
jmp
loope
out
nop
or
cmp
jg
mov
pusha
pop
push
mov
mov
push
sbb
pop
push
shl
repnz
xchg
js
push
xchg
neg
lock
and
subl
push
mov
add
int3
lcall
adc
and
out
inc
add
adc
imul
imul
aad
fildl
in
gs
scas
mov
outsl
jb
pusha
mov
dec
test
inc
sti
mov
pop
into
push
cmpsl
mov
sbb
xchg
mov
and
enter
repz
xchg
adcb
pop
adc
mov
jae
sub
xor
and
aaa
lcall
jae
adc
jge
add
jecxz
push
frstor
or
in
clc
fildll
cld
push
cld
push
scas
add
push
pop
or
mov
and
xchg
add
inc
mov
sahf
dec
mov
dec
lds
test
imulb
dec
int3
roll
or
jle
or
mov
mov
clc
push
pop
popf
test
add
sbb
dec
sbb
iret
add
arpl
sub
xor
sbb
sahf
fs
jp
shrl
mov
dec
mov
and
aas
xor
sbb
inc
push
mov
mov
mov
rclb
add
pop
xor
xchg
pop
mov
test
es
dec
inc
mov
stos
pop
cld
fstl
and
repnz
pop
test
in
jg
or
rol
sbb
lcall
push
test
test
and
mov
out
dec
scas
je
sub
and
ss
xchg
cmc
cwtl
jbe
jp
xchg
push
loop
movsb
test
test
cli
cmc
and
fstps
sbb
push
pop
dec
adc
add
outsl
push
sbb
sbb
cwtl
add
jae
in
scas
dec
pop
push
dec
push
repz
cmc
mov
jecxz
push
fiaddl
outsb
push
xor
lods
push
or
test
cld
test
xchg
insb
in
loope
xchg
mov
jb
or
ret
mov
fiaddl
arpl
add
jmp
icebp
push
mov
test
add
imul
outsl
ljmp
outsb
xchg
test
and
movb
rcl
stc
loopne
int3
cmpsl
test
push
jp
jge
jns
fdivrl
jl
cmp
jp
adc
int3
push
cli
movsb
cld
repz
outsl
mov
jmp
adc
inc
es
test
popf
insb
ret
int
push
idivb
mulps
or
inc
sub
aad
mov
loop,pn
xor
movsb
popf
cmp
call
adc
data16
xor
outsb
dec
bswap
mov
mov
stos
loopne
mov
rep
pop
jns
out
js
xor
cmpsb
test
inc
frstor
cs
aaa
enter
shr
stos
xchg
mov
nop
sbb
jbe
pop
cmpl
xor
fcmovnbe
mov
dec
jmp
and
pop
and
sbb
mov
shll
sti
push
or
outsb
jg
add
hlt
fldcw
sub
rcll
sbb
testb
in
jle
xchg
add
popf
outsb
cli
test
lock
mov
cwtl
addb
cwtl
push
xchg
sbb
repz
push
dec
and
jb
test
aad
scas
cli
sarb
cltd
jae
jmp
ficoms
loope
out
mov
jl
dec
jmp
aas
jmp
scas
shrl
lret
push
call
sub
dec
mov
mov
push
neg
jae
pop
lock
or
cwtl
adc
movsl
test
xchg
push
mov
rcrl
inc
lea
jmp
fstps
push
adc
sahf
xlat
loope
je
jb
jecxz
add
cmp
sbb
aam
jmp
dec
imul
ljmp
xor
test
divb
sbb
push
imull
mov
test
or
or
push
mov
stos
adc
gs
lret
and
pop
push
xlat
hlt
out
enter
into
outsl
or
rcll
das
in
xchg
dec
int3
adc
mov
ja
sub
jecxz
cli
push
and
pop
xor
sbb
js
ja
sbb
and
cmp
push
lods
js
gs
or
rcl
testb
mov
and
mov
mov
adc
mov
fmull
mov
jle
cmp
jmp
cmp
pop
mov
push
enter
mov
cli
add
push
addr16
adc
add
inc
pop
dec
icebp
loop
add
std
int3
adc
mov
and
mov
mov
add
insl
jae
enter
or
arpl
pop
lahf
arpl
dec
insb
ja
sub
pop
mov
cmpsl
cwtl
xchg
dec
and
push
pop
pop
pop
addr16
adcl
cmpl
jno
movsl
mov
sbb
adc
push
pop
je
insb
call
inc
mov
dec
in
arpl
push
popa
aam
sbb
sbb
fisttpll
pop
mov
leave
jb
cwtl
cmpsl
xor
push
daa
cmp
pop
data16
fisubl
aad
xchg
xchg
fcmovbe
jle
xchg
add
test
xchg
les
mov
push
add
sbb
mov
jns
fisubrs
leave
popf
xchg
push
adc
out
add
negb
push
aas
aam
jecxz
stos
fists
sbb
mov
insl
stc
fmulp
add
push
test
repnz
cmp
adc
shr
pop
mov
add
push
out
cmpsl
fcoms
mov
out
test
lods
push
mov
outsb
mov
sbb
or
fcmovne
sub
fisubs
lds
and
fstpl
idivl
jg
jae
sti
rorl
push
dec
cmp
cld
mov
insb
sub
leave
fsubrl
mov
shrl
or
jnp
sarb
mov
jo
inc
scas
jo
dec
sbb
inc
adcl
loop
push
jl
stos
jnp
push
rorl
neg
add
xchg
insl
out
inc
inc
enter
mov
lret
add
call
ror
push
cltd
mov
jl
test
xor
lods
cwtl
mov
jno
and
dec
stc
es
inc
cltd
jecxz
movsl
nop
adc
js
jbe
inc
add
xchg
xor
leave
cmp
stc
jl
mov
cwtl
pop
mov
ret
add
call
in
aaa
ret
or
cs
xchg
in
fnstsw
mov
adc
mov
jle
inc
inc
std
movsl
pop
dec
cmp
subb
xchg
insb
xor
or
cmp
xor
mov
dec
mov
jp
jo
clc
push
pop
inc
neg
js
or
dec
cltd
subb
pop
pop
xchg
push
add
mov
sub
shlb
mov
imul
fildl
dec
push
in
pop
loop
into
pop
mov
jb
mov
mov
inc
int3
cli
je
adc
decb
xor
push
fstpt
mov
in
dec
mov
pop
std
xchg
popf
enter
test
and
and
enter
push
aaa
or
mov
sbb
dec
push
sub
dec
inc
js
jmp
mov
shl
pop
xor
test
repz
addb
jle
add
out
fst
insb
nop
insb
dec
xchg
std
jp
or
adc
stos
push
fiaddl
or
mov
out
xchg
repnz
test
repnz
ss
jle
pop
mov
mov
xor
mov
or
in
xchg
loop
mov
push
lods
inc
cld
movb
jl
lds
sub
fldl
pop
and
jne
faddl
lea
adc
dec
fs
xor
pop
or
xor
push
test
lret
aad
das
sub
stc
pop
sub
cwtl
repnz
push
fdivl
iret
js
mov
dec
subl
enter
pop
push
aas
push
fs
fcmove
xchg
xor
dec
add
test
mov
lods
lea
cmp
imul
sbb
popf
pop
icebp
js
shll
std
sub
or
js
dec
pop
inc
mov
dec
lahf
loope
aam
pushf
mov
jmp
fisttps
nop
cmpsb
cmc
mov
shll
in
popa
nop
int
pusha
push
xchg
test
ficoms
ror
out
mov
imul
test
fisubrs
scas
xchg
pusha
int3
inc
gs
das
xchg
mov
stc
jns
mov
subb
mov
cld
add
xor
cld
and
bound
sbb
push
push
insb
inc
scas
xchg
or
xchg
inc
xchg
pop
jmp
push
out
push
faddp
addb
jecxz
jmp
sbb
out
jae
ja
and
add
subb
jae
das
mov
lock
xor
arpl
repz
repz
xchg
or
jns
sbb
loope
aaa
sbb
repz
xor
arpl
jg
js
lock
repz
mov
out
mov
stc
mov
cmc
dec
xchg
test
and
cmpsl
clc
and
fimuls
in
aaa
adc
add
imul
arpl
sahf
outsb
xchg
push
popf
sar
fwait
adc
cmp
pop
fdivrl
jnp
mov
sub
and
dec
ljmp
nop
mov
imul
jl
mov
mov
outsb
inc
jle
push
fldt
test
jp
push
jp
loopne
roll
xchg
xlat
add
xchg
repz
outsl
into
mov
mov
mov
sbb
nop
aad
xchg
inc
mov
xchg
cwtl
and
xchg
cmp
imul
mov
mov
mov
in
je
fildl
or
push
jge
sbb
out
int
push
mov
js
add
mov
xlat
ja
and
and
add
das
ja
in
outsb
ret
jmp
inc
fisttps
and
push
push
fcmovnb
popa
mov
jp
pushf
jnp
es
add
shlb
in
out
lahf
mov
daa
arpl
movsl
push
into
movsl
and
das
lret
xchg
pop
pop
mov
inc
and
inc
or
sbb
push
imul
push
xor
ret
test
sub
stc
mov
xor
or
les
pop
adc
adc
sbb
add
mov
inc
mov
cmp
adc
mov
pop
cmp
call
call
push
xchg
imul
call
clc
jno
pop
mov
pushl
fsubrl
fcoml
xchg
push
or
jge
sarb
data16
jb
lods
mov
ja
filds
push
scas
rorl
shll
mov
mov
cltd
add
cmc
pop
xchg
cmp
call
ljmp
sub
dec
outsb
inc
sbb
cs
xchg
movsl
push
cmp
popf
adc
gs
jmp
push
xchg
sub
pop
stos
push
lahf
dec
loop
mov
mov
aam
pushf
aad
jl
xchg
out
pop
mov
xor
iret
xchg
xchg
mov
dec
xchg
pop
push
mov
mov
push
push
adc
bound
aas
repz
mov
xchg
and
lret
fiaddl
dec
add
subl
sub
movsb
mov
jmp
add
mov
test
test
imul
dec
inc
lds
cmp
stc
xor
mov
mov
adc
fcoml
popf
add
dec
js
sti
pop
je
dec
pop
mov
in
push
push
gs
adc
cli
icebp
fsqrt
mov
inc
jecxz
xchg
rcr
test
xchg
dec
test
jb
shl
xor
xor
mov
mov
fwait
push
icebp
rolb
cmpsl
testl
xchg
mov
cmpsl
pop
pop
add
pusha
mov
push
or
mov
pop
inc
ficoms
movsb
je
mov
cld
add
push
dec
mov
aas
roll
dec
jmp
test
mov
out
pop
cmp
pop
jge
test
jbe
cli
lock
and
cmc
loope
fisttpll
xchg
ret
fmuls
xchg
call
sub
mov
or
aaa
push
cwtl
in
out
ss
jno
mov
mov
pushf
add
xchg
mov
push
nop
dec
push
push
cmpsl
dec
mov
jae
fwait
gs
outsb
call
xor
pop
rolb
or
mov
jns
sahf
in
push
loop
or
ret
jl
sub
out
shrb
add
imul
clc
push
xsavec
xlat
lret
lock
mov
insb
aad
cmp
mov
adc
sub
aaa
adc
rcrl
pushf
and
jle
dec
xor
ljmp
lcall
sahf
test
dec
scas
jmp
adc
hlt
xchg
rolb
sti
xchg
push
xchg
jl
daa
xor
adc
ret
mov
shr
xchg
outsl
and
roll
ret
push
outsb
cmp
repz
push
fldcw
cmpsl
shlb
inc
mov
sarb
sub
lcall
jecxz
mov
lahf
test
orb
inc
sbb
pop
sub
inc
in
popl
lcall
mov
bound
mov
jnp
test
stos
pop
enter
cwtl
add
jle
xor
dec
movsl
mov
insl
int
js
inc
xchg
mov
xor
fldl
mov
xor
xchg
mov
mov
test
and
push
jl
stos
inc
lret
pushf
mov
mov
sbb
cmpsb
popf
mov
loope
push
and
in
jl
fisubrs
leave
sub
mov
sarl
jns
icebp
cli
pop
bound
cmp
mov
sbb
and
rcrb
inc
or
add
sub
mov
cmp
mov
sbb
fistpll
jmp
jmp
mov
push
mov
push
lea
mov
scas
mov
fwait
add
mov
inc
pop
mov
mov
or
inc
in
inc
push
test
pop
js
lock
mov
data16
fistpl
lds
jecxz
icebp
push
jo
cld
aas
cwtl
rcrb
push
aad
daa
jns
push
sub
lret
xor
loop
pop
js
fisubrl
cli
test
jbe
test
test
xchg
mov
movsl
inc
andb
add
dec
lahf
xchg
es
outsl
lds
mov
and
in
jg
inc
insl
xchg
mov
push
rcr
and
cmp
push
movl
dec
loope
mov
push
shrl
pop
add
push
lret
xor
push
xor
movsl
pop
xchg
pop
fnsave
lret
pop
popf
inc
mov
inc
cld
mov
lds
loopne
add
js
push
repz
xor
insl
and
push
mov
not
xchg
cld
les
fcmove
arpl
ret
pusha
aam
fdivl
in
xchg
sub
aaa
loop
shrb
and
out
imul
das
jnp
outsb
jmp
fwait
test
sti
movsb
ret
test
ljmp
notl
je
or
in
mov
jnp
pop
gs
push
ja
cmp
jne
jmp
jmp
jmp
mov
stos
cltd
xchg
fildl
rol
push
lahf
bound
divl
add
icebp
mov
sbb
mov
bnd
mov
rclb
emms
popf
add
ss
mov
dec
insb
out
out
jl
mov
jno
repnz
xchg
insl
sub
add
sarl
jg
sbb
mov
aam
cmp
out
cmp
and
adc
adc
inc
mov
fwait
jmp
imul
rcrb
cmp
sub
mov
inc
push
sbb
inc
xor
mov
dec
test
inc
cmp
jnp
xor
call
stos
rclb
test
dec
adc
jp
lcall
dec
cmp
sbb
lahf
push
lds
push
shl
or
jge
xchg
mov
inc
lds
scas
xor
out
enter
cmp
cmp
mov
ds
sbb
xor
in
ds
clc
xchg
dec
push
inc
shll
je
rcrb
test
pop
das
jnp
stos
lods
je
cmp
std
fisttpl
mov
push
xchg
mov
rolb
jae
dec
sub
pop
call
and
out
pop
jne
out
inc
push
dec
hlt
cmp
pop
popf
in
scas
loopne
sub
pop
popa
mov
push
lahf
in
mov
ret
pop
push
je
shll
push
test
shrb
lock
add
pop
sbb
sub
movsl
loop
or
ds
shrb
in
insl
mov
lds
add
lea
fwait
sbb
xor
inc
jae
andl
xor
jns
mov
nop
push
dec
in
cmp
and
lret
dec
aas
jne
xchg
xchg
scas
in
and
xchg
ror
in
repz
jp
mov
mov
cmc
add
aam
xor
das
sbbb
sti
xchg
test
and
mov
sti
lea
shll
lds
xor
sbb
mov
mov
andl
imul
cmp
arpl
inc
cld
pop
loop
sub
mov
call
and
xchg
inc
push
xchg
loope
pop
jae
sub
rorb
push
pop
insb
bound
je
mov
mov
mov
push
lahf
jbe
cmp
cmp
jo
testb
cmp
jp
jbe
sbb
out
inc
test
mov
popl
sbbl
add
xor
pop
lods
sbb
pop
js
mov
push
or
movsb
mov
popa
or
popa
lea
stos
pop
xor
xchg
dec
add
pop
in
std
or
or
shll
aas
pop
pop
mov
dec
in
fistps
or
aaa
pop
lret
roll
mov
inc
jno
cmpsl
or
sub
stos
popl
sbb
jp
adc
imulb
repz
mov
sbb
ret
outsb
mov
arpl
cld
dec
sub
insb
xchg
out
or
ss
mov
in
xchg
xchg
sub
aas
xlat
inc
les
mov
xlat
push
call
add
pop
cltd
add
adc
mov
sub
and
arpl
dec
or
mov
in
shlb
adc
and
jns
and
sbb
mov
cmp
push
add
test
jg
xchg
or
rcrl
mov
add
lcall
pusha
push
stos
lret
sbb
stos
mov
fsub
shl
or
xor
out
add
loope
outsb
sub
inc
mov
jmp
xchg
fimuls
push
in
shr
push
imul
test
fsubrl
pusha
int3
cltd
mov
push
test
enter
scas
std
jecxz
cmp
jmp
mov
dec
inc
and
push
cmp
sbb
es
or
loop
fldl2t
jno
cmp
pushf
sbb
flds
or
or
popf
fbstp
cmp
pop
clc
push
scas
and
icebp
mov
inc
mov
cmp
mov
in
xchg
jg
fwait
jnp
ret
lcall
jle
sti
movsl
xor
pop
cmp
sbbb
les
loop
mov
lcall
xchg
xor
xor
jae
jno
or
scas
sub
jmp
mov
pop
mov
sub
pop
lret
pop
arpl
in
es
sti
rclb
imul
jmp
mov
pushf
pushf
ja
xchg
cmp
add
dec
sub
sbb
push
addr16
jnp
clc
jp
imul
lret
fldt
stos
sbb
ret
or
and
sub
stos
push
test
lods
shll
sbb
sub
out
and
jecxz
or
xor
adc
lods
mov
or
cmpsl
out
adcb
inc
sub
dec
cld
sub
rorb
shrb
paddq
shr
loopne
aaa
ljmp
xchg
mov
sbb
fs
push
scas
cmpl
ss
sbb
pop
jno
jg
imul
push
mov
cmp
cmp
mov
pop
cmpsl
scas
adc
cli
dec
sbb
jbe
test
adc
jg
xor
cltd
ret
lea
push
out
add
leave
out
cmp
sarb
and
test
addr16
sbb
imul
cmc
sub
mov
mov
sub
sbb
lds
push
sbb
cmp
out
es
lock
out
clc
inc
jo
loope
mov
fldenv
imul
pusha
xchg
insb
shlb
insl
mov
cwtl
push
pop
inc
jns
push
adc
rol
dec
mov
out
dec
mov
add
cmc
or
adc
test
adc
inc
popf
addr16
sbb
pop
mov
mov
rcll
idiv
xor
aas
or
mov
repz
jmp
es
adc
daa
jno
pushf
test
cmp
int
fisttpll
mov
xor
push
ret
fcom
icebp
sbb
sub
gs
stc
jno
stos
aad
xchg
aas
jb
ror
int
add
cmp
test
add
mov
fwait
in
fdivrs
lahf
stos
ss
int
sub
pusha
fcomip
inc
and
fcompl
push
sbb
push
xor
sbb
ds
inc
push
ja
mov
add
adc
add
loop
pop
xchg
icebp
jecxz
cs
mov
test
lods
dec
stos
adc
push
test
adc
fdivrl
jg
pop
xor
push
jns
push
hlt
in
fisttps
xchg
int3
cltd
push
test
push
mov
gs
jge
or
cmp
into
xchg
pushf
pop
cs
push
or
dec
ret
fs
shl
mov
pop
sbb
dec
dec
mov
movsb
xor
cs
idivb
pop
fdivl
dec
ficoms
in
cmp
xor
jecxz
out
aam
xchg
push
jle
xor
lcall
pop
push
adc
dec
pop
in
or
pop
fiadds
dec
or
jns
fwait
imul
lahf
in
cmp
imul
jae
or
cld
xchg
inc
mov
fldenv
sbb
jae
add
pop
xor
popf
addr16
mov
stc
push
jmp
push
or
shlb
xchg
xor
xor
push
pop
jecxz
sbb
stc
xchg
daa
mov
pop
inc
cwtl
aad
lcall
xor
jmp
mov
mov
popa
scas
ja
jge
fwait
xchg
stos
pushf
cmpsb
mov
loop
mov
inc
xchg
xchg
shr
adc
pop
icebp
call
jnp
std
scas
movsb
sbb
and
sub
or
inc
jnp
mov
cmpl
into
clc
stos
jge
adc
cli
insl
and
mov
cltd
sbb
sub
movsl
jecxz
push
jnp
clc
mov
inc
mov
sub
flds
ret
jo
push
xchg
lea
cmp
cmpsl
loope
sub
sub
sbb
push
push
mov
pcmpeqw
call
pushf
int
rclb
pop
leave
jl
bound
jg
mov
outsb
mov
xchg
mov
shrl
out
jne
lods
mov
in
aas
pusha
or
test
adc
test
pop
fimuls
and
xchg
packssdw
outsb
xorl
sbb
sbb
xor
nopl
cmpsl
nop
out
es
or
xchg
inc
inc
ud1
lret
scas
pop
dec
lret
adc
data16
push
jmp
fstl
mov
aas
adc
negl
xorl
in
push
sbb
nop
jae
jmp
xchg
pop
mov
std
cmp
xor
sbb
sbb
aam
jnp
in
jnp
test
add
jns
int3
mov
aad
push
xor
add
arpl
ja
jns
inc
pop
xor
lock
jg
ret
daa
out
mov
and
enter
mov
adc
pop
addr16
pushf
mov
xchg
push
mov
fisttpl
push
lea
jecxz
lds
dec
jp
adc
mov
mov
xchg
fcompl
or
mov
fstl
in
into
mov
pop
sub
inc
push
xchg
fstpt
out
scas
aaa
mov
dec
loopne
xchg
int3
imul
xorb
adc
nop
push
lret
adc
addr16
cmp
jge
sub
inc
sub
outsl
lods
or
fcoms
xchg
or
mov
pop
xor
fwait
xchg
test
pop
cwtl
test
fisubl
addb
sbb
imul
or
out
aam
push
es
cmpsb
notb
mov
mov
sub
sbb
js
jmp
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
push
pop
rorb
pop
les
pop
jmp
pop
dec
lcall
outsl
add
sahf
test
or
push
pusha
inc
call
xchg
or
cmp
inc
movsl
lahf
lock
add
shl
sub
rol
jecxz
cmp
in
push
je
push
cmp
xor
push
popa
arpl
mov
rol
or
cmp
xlat
ret
xchg
movsl
mov
jno
js
popf
push
mov
mov
xchg
xor
inc
jle
aas
insb
shrl
movsl
mov
or
or
cmp
repz
pop
adc
dec
push
push
imul
push
das
mov
xor
out
or
test
jns
fiaddl
or
or
mov
fwait
sbb
add
add
xor
pop
loop
into
mov
test
jge
fistps
xchg
ret
mov
mov
orb
outsl
push
pop
ss
in
push
outsl
push
js
ret
add
xor
or
movsb
fisubrs
or
gs
in
es
jb
clc
movsl
sub
mov
xlat
test
clc
jp
shll
test
addl
pop
push
je,pn
xor
fcom
sub
and
xor
mov
mov
stos
test
aam
pop
xor
and
daa
adc
sub
lret
lret
fildll
ja
xchg
inc
aad
rolb
mov
icebp
negl
arpl
push
je
clc
jl
pop
push
gs
dec
cmpsb
ja
ret
inc
in
lock
out
push
fisttpl
cltd
jns
mov
pop
adc
ljmp
lret
jmp
leave
shrl
sub
idivb
adc
cwtl
dec
inc
dec
add
push
loopne
push
push
mov
mov
ss
jge
out
xlat
dec
jo
out
xor
ror
sahf
pop
sti
fcmovbe
out
ret
imul
addl
pop
push
shlb
jo
mov
ret
pop
loop
cwtl
enter
shll
xor
mov
or
xchg
mov
in
lock
xor
leave
popf
pop
inc
jmp
imul
loop
or
adc
fnstsw
shll
or
insb
cltd
xor
movsl
sbb
or
dec
jp
fsubrs
xchg
xor
push
pop
jnp
popf
bound
pop
ret
lcall
cltd
jae
push
out
mov
es
daa
ret
aad
ljmp
cmp
cmp
and
fmull
pusha
add
aam
sub
adc
bound
sbb
jmp
sbb
xor
int3
xor
nop
shrl
sbb
sbb
test
pop
add
data16
inc
xchg
mov
es
sub
xchg
inc
mov
inc
xchg
xlat
mov
in
push
jmp
xchg
inc
cmp
cli
stc
mov
mov
adc
cwtl
pop
and
cld
mov
add
or
xor
mov
lcall
xchg
adc
or
push
repnz
sub
lret
rcrb
dec
scas
cltd
xlat
pop
xchg
rorl
fsts
pop
or
in
xchg
leave
mov
cs
pop
test
imul
inc
pusha
dec
jecxz
mov
push
adc
in
pop
sbb
dec
insb
sbb
push
scas
or
mov
fsub
ljmp
ds
lret
cmpsb
mul
lret
sub
fistps
jp
sub
fnsave
inc
xchg
movsl
push
or
rolb
jg
fs
bound
pop
or
cli
mov
gs
bound
mov
out
mov
jne
test
adc
fs
in
mov
pop
out
lret
inc
out
sub
scas
andl
mov
xlat
fsubrs
xchg
shl
push
pusha
fadd
fnsave
mov
push
inc
cmp
cltd
pop
or
gs
or
mov
pusha
rcrl
pop
xchg
mov
arpl
ret
lret
sub
jns
mov
ds
inc
divl
movsl
jo
sbb
fs
xchg
enter
push
pop
add
fdiv
in
stos
ja
test
dec
mov
call
imul
pushf
or
xor
mov
ja
ret
jns
adc
scas
and
outsb
cwtl
std
add
lea
sub
aas
pop
rcrb
lea
stos
pop
sbb
inc
mov
cmovbe
lcall
sbb
jecxz
cs
xchg
inc
test
pop
pop
lahf
mov
xor
ret
xor
jecxz
mov
push
inc
mov
cmp
pop
pop
aad
out
add
pushf
js
adc
add
aad
loop
insb
lods
and
insl
sub
cmp
dec
inc
pop
arpl
leave
mov
xchg
insb
iret
loop
add
test
enter
cwtl
testb
or
bound
or
pop
mov
data16
addb
sub
mov
out
out
or
mov
sbb
iret
jo
mov
sub
add
mov
dec
lods
inc
scas
sti
rcrl
out
push
dec
xor
lret
and
push
adc
in
sub
inc
dec
mov
gs
shlb
in
mov
jns
dec
sub
sbb
fsubs
insb
aad
dec
out
test
lds
repz
or
lret
stos
and
aam
add
jnp
mov
inc
xchg
dec
aad
dec
shll
lods
and
gs
mov
movsl
cmpsl
and
push
pop
mov
adc
pop
popa
hlt
test
inc
jmp
sub
enter
fbld
popf
and
pop
adc
or
les
sub
mov
sarl
mov
sub
xor
and
cmc
pop
test
mov
mov
pop
pop
clc
out
pop
cmpsb
sub
orb
push
dec
stos
out
mov
mov
push
jle
ret
xchg
lds
sub
jl
or
xor
cmp
adc
adc
inc
out
xor
push
push
cwtl
lods
mov
sub
sahf
push
loop
mov
and
out
push
jb
lods
je
dec
gs
fldlg2
inc
test
nop
ret
sub
mov
cwtl
push
mov
call
outsb
xor
into
loop
push
gs
sbb
sahf
popf
fwait
loope,pt
lret
push
mov
sub
dec
xor
add
ja
add
shlb
xlat
pop
xor
lcall
ret
movb
push
sub
xor
or
das
xchg
mov
outsb
jle
jne
ds
adc
sbb
js
jne
inc
fcmovnb
enter
bound
xorb
sub
mov
fisttpl
cmp
mov
bound
enter
xchg
jecxz
pop
mov
insb
int3
sub
das
imul
les
jmp
std
and
subl
jb
mov
cs
xor
mov
mov
hlt
mov
add
fdivrp
adc
pushf
pop
push
je
movsb
and
scas
push
mov
ret
insl
dec
insl
or
jno
inc
out
pop
ds
inc
jmp
out
sub
push
aad
mov
push
jle
cmpsl
rcrl
add
fisubrs
or
out
xchg
mov
cmpsl
lahf
xchg
ljmp
iret
sbb
cmc
daa
outsb
push
push
pop
sahf
xchg
adc
mov
xor
fadds
mov
cmp
xor
fsts
adc
ja
or
ljmp
sbb
mov
lods
out
jns
sbb
and
add
dec
outsb
mov
inc
mov
adc
inc
xchg
nop
stc
shlb
mov
cmp
cmp
sub
sti
daa
outsl
mov
aad
sbb
rep
mov
pop
movsb
cwtl
sbb
cmp
in
repz
sahf
inc
icebp
testb
xor
int3
es
das
addr16
pop
lahf
decl
and
inc
inc
aad
dec
sbb
sub
jge
mov
lcall
call
out
pop
shrb
leave
cmp
mov
adcb
pushf
test
cmpsl
test
insl
and
ret
mov
cmp
sub
out
clc
inc
jl
xor
outsb
jp
aad
sbb
dec
out
and
aad
aaa
in
mov
mov
rol
nop
ss
adcb
mov
or
lds
lock
out
popf
inc
ss
std
cmp
jl
push
or
xchg
lods
cld
adc
mov
and
mov
mov
dec
fs
mov
xor
fdivs
pushf
lock
imul
or
aas
imul
test
cmpsb
fwait
popa
notl
pop
test
dec
fs
adc
popa
dec
cmpsl
or
jecxz
mov
cltd
mov
sbb
test
inc
call
pop
arpl
push
shr
ret
jle
fs
or
xchg
xor
inc
js
pop
push
pusha
ss
test
test
int
ja
out
or
test
cmp
inc
adc
rorb
cwtl
adcl
xor
mov
or
cmp
mov
jb
add
adc
sbb
sub
mov
dec
mov
outsb
adc
jecxz
fildl
mov
and
mov
int3
je
sub
pop
test
cwtl
imul
nop
and
push
xor
out
jge
mov
repnz
push
ret
hlt
jns
pushf
decb
jp
jge
inc
lcall
fiadds
mov
lea
xchg
bsr
sbb
incb
dec
cmp
push
aas
mov
pop
fisubs
add
jb
rcr
mov
mov
movsl
mov
fistl
mov
ret
pop
inc
jl
out
fnstcw
movsb
loope
or
push
gs
ss
or
pop
xchg
jnp
jl
inc
xorb
mov
pop
xchg
fs
push
daa
mov
fildl
pop
cmpb
rcrb
arpl
xchg
lds
add
xchg
mov
loopne
jno
mov
adc
pop
aam
add
sub
dec
sub
daa
jg
stos
lods
fwait
mov
rcrl
hlt
cmp
repz
aas
pop
xor
and
mov
xchg
mulb
mov
mov
ds
and
daa
lret
fs
push
iret
bound
push
mov
or
sbb
inc
sub
cmp
out
mov
sti
jne
and
int3
lahf
gs
in
es
add
aad
popf
mov
ljmp
sarl
gs
test
sub
sub
mov
int3
sbb
sti
lcall
push
pop
imul
pop
mov
pop
and
cmp
inc
mov
adc
jns
les
aad
inc
xlat
fcomi
fisubl
xchg
adc
pushf
lds
jmp
nop
fucomip
fiadds
std
call
andl
mov
call
ss
and
sbb
ds
cmp
jnp
out
adc
stos
dec
xor
fstps
xchg
mov
inc
and
push
xor
add
mov
or
add
out
cmp
data16
outsb
jmp
mov
mov
test
lret
mov
mov
sbb
push
out
xor
or
cli
pop
sbb
push
fwait
loope
cmp
mov
cs
xlat
sarb
xchg
outsl
repz
mov
push
mov
jo
jecxz
adc
and
xor
mov
push
xorl
xor
cld
repz
fsubrs
xor
lret
test
cs
stos
fcompl
inc
or
imul
xchg
cmp
aas
insl
push
add
sahf
inc
nop
inc
inc
adcl
cmp
rolb
inc
and
mov
mov
lods
dec
mov
sbb
jp
jbe
sti
jecxz
mov
sbb
shlb
pop
inc
and
pushf
int3
imul
ljmp
fisttps
xchg
les
data16
and
imul
push
jae
push
add
int
push
addl
data16
cmc
adc
rclb
movsl
int
sub
ds
sub
xchg
sub
neg
mov
pushf
orl
dec
dec
test
or
repnz
stos
stos
lcall
int
pop
lods
push
rcrl
lods
mov
fwait
arpl
cltd
mov
aad
jg
ljmp
cmp
jmp
test
pusha
push
decb
add
dec
cltd
mov
aaa
ljmp
dec
mov
xor
cmp
push
dec
mov
and
add
inc
push
movsb
sub
imul
push
insl
cs
and
adc
out
push
pop
fwait
ja
cmp
push
xor
fwait
das
jne
insl
or
dec
cs
xchg
call
test
movsb
bound
cmp
pop
lret
pop
push
add
sub
jns
lea
lods
mov
dec
jbe
sahf
sbb
movsb
dec
jo
fsubs
add
mov
inc
leave
or
cmpsl
andl
mov
jbe
xchg
mov
es
popf
idivl
and
inc
mov
fwait
cmpsl
jp
nop
xchg
mov
daa
imul
mov
dec
es
push
dec
loope
adc
pop
adc
adc
add
push
mov
mov
cltd
repz
stos
out
dec
push
jmp
incb
xchg
cmp
les
js
push
hlt
inc
enter
push
aad
mov
imul
push
dec
xchg
fnstenv
sbb
or
mov
push
rcll
push
rcrl
or
xchg
and
dec
int3
mov
lcall
jne
fisttpll
xor
cmp
cmp
xchg
cmp
mov
mov
imul
push
cmpsl
xchg
insb
and
stos
xor
push
push
aaa
jecxz
je
fcomip
pop
xor
jge
mov
sahf
sbbb
shr
loope
fists
xchg
jge
out
push
sub
je
add
xor
sub
mov
jp
imul
test
jle
sbb
je
xchg
cltd
push
add
push
push
jmp
fmull
daa
inc
and
sub
jecxz
cltd
pop
xchg
les
repnz
fistpll
sbb
push
jl
and
data16
cmc
ljmp
int3
aas
addb
inc
add
in
xchg
jl
icebp
subb
xor
dec
call
or
incl
add
add
add
iret
stc
imul
mov
out
scas
out
dec
notl
inc
cmp
jge
js
cmp
mov
jns
fsubs
mov
jno
mov
and
fistpl
rorl
xchg
cmp
mov
clc
push
mov
pop
push
sbb
xchg
sub
loopne
xchg
lahf
jnp
aad
cmpl
sbb
test
movsl
rcll
xlat
lcall
pop
ja
adc
adc
cmp
sbb
sbb
mov
ficoml
pop
neg
popa
fadds
imull
pop
sbb
xchg
jae
fidivrs
gs
dec
add
inc
xchg
in
jae
in
xor
add
pop
outsb
pusha
leave
xor
mov
sub
lret
jle
out
cmpb
mov
xor
push
add
sarb
pop
mov
push
push
dec
or
pop
inc
lcall
rcrb
dec
dec
pusha
cmp
cmp
addl
push
push
or
or
lock
xchg
int
cmp
mov
dec
sbb
sub
adc
hlt
xchg
inc
add
pop
aaa
and
mov
pop
test
pop
dec
cmp
insl
enter
test
fsubl
icebp
mov
out
enter
pop
fsubs
aaa
jp
std
fstl
mov
mov
add
fldenv
pop
jno
int
or
ss
mov
mov
pop
mov
rolb
idiv
mov
or
jle
call
add
xor
and
add
pop
dec
and
or
xor
or
cwtl
js
es
test
rcrb
fs
aaa
inc
scas
dec
shrl
nop
stos
hlt
lds
inc
adc
cmp
or
dec
iret
js
jp
test
shrb
gs
mov
test
push
test
jp
cmp
and
sar
rcrb
aaa
add
mull
inc
fmull
jecxz
jl
cli
in
gs
mov
adc
out
pop
and
pushf
cli
jmp
icebp
xchg
jns
push
pop
aam
mov
mov
subb
popa
ds
cltd
arpl
mov
push
cmp
enter
inc
lds
dec
lahf
repz
jns
stos
mov
or
movsb
popa
mov
leave
shrl
lret
and
lcall
sti
lods
outsb
test
js
pop
or
popa
mov
gs
iret
pushw
gs
rcr
decb
add
test
sub
inc
and
out
stos
lret
cmpsb
movsl
xor
test
outsl
icebp
lods
dec
addr16
pop
xchg
push
push
xor
pop
loop
xchg
inc
pop
and
in
xchg
gs
repz
je
mov
mov
mov
in
xor
les
xor
cmp
idiv
in
jnp
hlt
iret
add
push
popa
loopne
xchg
pop
add
add
jp
sub
push
into
push
and
call
and
cmpsb
add
add
dec
pop
dec
cmpsl
popa
lret
dec
xlat
fwait
stos
es
mov
xor
sbb
mov
mov
jae
push
std
out
dec
jge
sbb
add
inc
icebp
pop
subl
inc
push
pop
movb
stos
push
fisttpll
add
lret
xorb
or
outsb
rcrb
cmpsb
gs
int
outsb
aad
jb
cmp
fiaddl
shl
lahf
mov
or
xor
test
scas
add
cmp
sbb
insl
pop
out
ret
int3
pop
rcrl
and
mov
cmp
jmp
mov
lods
pop
push
pop
rcrl
shrl
mov
xchg
es
cmp
arpl
adc
fisttps
push
inc
jno
add
and
imul
sbb
sbb
cltd
mov
neg
nop
fiaddl
jne
push
aaa
inc
mov
popa
push
lods
fstl
loopne
pop
and
lds
ror
inc
rcrl
out
push
aaa
and
xor
mov
dec
leave
sbb
xor
enter
sbb
sbb
stos
dec
cmc
cmpsb
mov
rclb
repz
arpl
mov
fyl2x
push
xor
add
pop
mov
dec
mov
dec
scas
xor
and
mov
out
subl
or
dec
push
jns
addl
ret
xchg
inc
scas
sarl
push
push
push
ret
data16
aam
pop
cmp
cmp
mov
lea
add
fwait
fs
cmp
bound
mov
or
dec
and
orl
insl
out
jae
icebp
xchg
add
scas
xor
inc
sbb
or
pop
popa
ret
inc
or
int3
push
or
push
roll
mov
add
xor
dec
jb
push
stos
pop
lods
and
mov
fsubs
dec
xchg
jbe
aad
push
mov
ret
mov
sbb
sbb
out
fs
lret
cmp
les
in
loopne
jp
add
pop
rcl
xor
int3
add
ljmp
jmp
popf
iret
arpl
jns
xor
lret
jp
dec
or
je
push
push
pop
mov
sahf
shrl
mov
bound
cmpsl
mov
lret
mov
repnz
sar
imul
lahf
fs
dec
int3
jmp
retw
movsl
in
jle
les
push
out
mov
in
into
jno
jp
xchg
pop
mov
add
xlat
or
ljmp
mov
addr16
push
dec
lods
dec
rcll
mov
mov
lidtl
jno
stos
js
jbe
iret
or
ss
dec
repnz
mov
mov
lock
push
sbb
out
sub
pop
dec
sbb
jns
push
fimull
sbb
xchg
xchg
and
cmc
movsl
in
movb
sbb
fucomi
movsl
cli
jne
int
insb
xlat
insb
push
pop
imul
lds
int
dec
xorl
sbb
subl
and
jmp
jp
mov
stc
sub
dec
lret
push
ljmp
out
cmc
add
cmp
out
pop
movsb
in
fsubl
jb
pop
aad
jb
cmp
shlb
jmp
test
mov
or
mov
pop
xor
mov
xorb
cmp
push
jecxz
inc
dec
mov
mov
jmp
adc
les
hlt
jg
cmc
add
mov
jnp
push
dec
push
xor
imul
pop
andb
xor
inc
dec
push
pop
clc
je
push
lcall
inc
cmp
xchg
xchg
or
jl,pt
sub
lock
sbb
fdivrs
or
aaa
aam
test
inc
jno
push
mov
lods
xchg
loopne
out
mov
adc
add
push
arpl
movsb
scas
mov
and
fsub
clc
aad
mov
scas
sbb
rcrb
jmp
movsb
ja
test
push
loope
cmp
in
xchg
shl
mov
pop
mov
mov
stos
dec
or
cmc
mov
add
jle
inc
stos
ja
fsubrl
xor
cld
imul
into
test
inc
xor
inc
scas
pop
xchg
stc
push
test
dec
adc
repnz
int3
or
out
cmpsb
mov
sbb
xor
add
sub
or
cs
ljmp
das
fmuls
cmp
jno
jno
pop
add
shl
dec
xchg
jno
cmp
ret
jno
xchg
frstor
cld
aas
insl
test
adc
cmp
das
jl
mov
popf
inc
sub
xchg
xchg
mov
sbb
mov
nop
not
xchg
movsb
out
fs
mov
sarl
mov
pop
sahf
vshufpd
idivl
lods
enter
mov
loop
or
mov
mov
sahf
mov
dec
aam
out
add
dec
add
sbb
div
cmc
je
mov
lret
hlt
cltd
fimuls
imul
mov
cmp
push
or
xchg
and
lahf
pusha
or
xor
lret
cmp
push
xchg
xor
dec
mov
cmp
xchg
fistl
mov
imul
and
lods
inc
xor
dec
add
sub
cld
in
add
scas
adc
cs
aaa
ret
mov
or
rcl
inc
jecxz
bound
mov
je
fbld
aam
xchg
aas
mov
sti
hlt
fiadds
into
mov
mov
stos
adc
scas
mov
sahf
xchg
xor
sub
mov
or
sahf
or
jp,pt
and
in
enter
fists
xchg
iret
jl
sbb
jns
cmp
mov
or
sub
fnstsw
xchg
in
xchg
sub
pop
enter
mov
icebp
std
mov
pop
pop
aam
sbb
hlt
sbb
outsb
sub
jbe
fnstenv
stc
or
fnsave
mov
ja
xchg
lods
jl
or
div
call
aaa
or
push
jno
sti
mov
mov
cmpl
push
mov
jb
inc
lahf
mov
js
loope
cmp
ja
push
cmpsl
add
xor
loop
cmp
bound
xor
rolb
popa
dec
cmp
sbb
xchg
mov
cmpsl
les
outsl
fcomi
jns
sbb
js
test
inc
jmp
inc
dec
xchg
jmp
push
lods
fwait
mov
xchg
pop
push
cs
test
sub
cld
outsl
sub
mov
push
fwait
push
push
xchg
nop
sbb
js
outsl
adc
arpl
jno
or
shlb
mov
out
jmp
jmp
and
leave
out
cmp
outsl
loopne
xor
je
movl
ficomps
cmpsb
ffreep
mov
aad
out
stos
mov
sbb
mov
sti
sub
adc
stc
jns
sbb
repz
addr16
push
xlat
aad
push
aaa
fildll
sbb
xchg
pusha
bound
pop
xchg
fiaddl
nop
push
das
fwait
sub
imul
outsb
fdivrl
sbb
fsubr
int3
xchg
push
jl
jmp
xchg
xor
dec
jne
rorb
imul
sub
fwait
ljmp
push
fdivl
push
jo
aaa
das
dec
mov
jmp
xchg
addb
or
dec
push
cmc
xlat
insl
mov
dec
in
out
lds
or
mov
sbb
dec
aam
shl
jnp
loop
ficompl
mov
js
push
orl
mov
xchg
ret
and
cltd
xchg
push
jmp
lahf
cmp
cltd
je
add
jbe
xchg
movsl
lock
push
push
dec
test
pop
xchg
aaa
out
sub
shr
mov
jae
outsb
sbb
or
bound
adc
add
mov
xchg
movsl
push
lcall
hlt
pop
jg
add
outsb
lods
stos
add
mov
lcall
cmp
orl
negb
mov
ret
mov
mov
in
int3
mov
lea
je
in
xchg
lahf
cmp
cmp
sub
stos
add
adc
dec
mov
sbb
outsb
scas
xorb
out
xchg
in
in
xor
sub
out
dec
clc
daa
fscale
mov
xor
das
loop
aad
dec
imul
shr
lret
lods
or
pushf
jmp
jo
test
ljmp
inc
sub
sub
push
jle
inc
sbb
xchg
mov
xchg
int
ja
int
dec
lock
jg
fcomps
out
movsl
jb
mov
push
or
add
cmpsb
stos
adc
cli
fcmovnb
lcall
jl
loope
cli
out
cmp
pop
jnp
cwtl
loopne
and
mov
xor
test
xchg
jle
mov
fwait
pop
insb
ds
cltd
cmc
andb
insb
mov
add
dec
in
mov
or
xchg
push
call
sbb
and
scas
in
dec
or
jbe
add
inc
adc
mov
push
mov
movsb
jno
adc
les
push
jne
loope,pt
jns
jno
out
xor
das
nop
stos
loope
inc
cmpsl
sub
mov
and
arpl
sbb
jecxz
loop
inc
setb
ja
xchg
dec
lock
jecxz
clc
jne
xchg
mov
xchg
add
roll
movd
dec
fiadds
rcrl
pushf
out
jl
pop
add
pushf
cmpsb
add
pop
lds
call
mov
mov
xchg
push
aas
lcall
add
sbb
nop
insl
into
repz
jle
ss
js
and
jno
cltd
hlt
cwtl
pop
xchg
rorb
push
js
mov
jne
and
out
lret
nop
clc
aaa
jnp
mov
jbe
rcrl
test
mov
aas
mov
jmp
push
pop
addr16
iret
rol
cmp
pusha
jns
dec
imul
pop
fbstp
pop
orb
repz
add
ljmp
jo
das
xchg
mov
xchg
sub
das
icebp
mov
mov
pop
bound
xchg
sbb
enter
jo
pop
loope
cld
retw
stc
in
icebp
mov
xchg
repnz
inc
in
imul
dec
loop
xchg
shlb
sbb
xor
push
cmp
pop
mov
and
xor
adc
and
popl
inc
xchg
roll
popf
push
rcrl
mov
cmp
xchg
dec
inc
sbb
add
js
test
out
test
and
mov
call
mov
inc
enter
pop
cmp
cld
sahf
mov
push
outsb
int3
jg
shrl
xchg
sbb
je
dec
adc
into
mov
test
loopne
dec
call
sar
cmp
fldcw
ds
mov
pusha
mov
decb
addr16
sub
mov
adc
mov
mov
enter
add
xchg
stc
out
dec
movsl
incb
dec
adc
ss
ss
rcll
or
ficoml
fimuls
xor
mov
fdivr
nop
pop
dec
ret
ja
jmp
xchg
cmp
xchg
sub
add
rclb
inc
je
push
lahf
cmp
pop
aad
jp
and
decl
ds
hlt
pop
inc
ds
sbb
into
movsb
loope
jb
outsl
sub
js
scas
popl
icebp
ficompl
jp
cmp
fdivs
ret
gs
ljmp
mov
stc
xchg
lds
jle
out
push
scas
sbb
jmp
cmp
lods
add
pop
andb
faddp
out
or
cmc
or
cld
sti
adc
mov
jmp
rcll
adc
xor
jmp
aas
ret
and
add
loope
dec
int3
mov
and
popf
sahf
outsb
inc
pop
outsl
scas
fs
xor
mov
pushl
je
xchg
lret
jae
repz
xchg
cwtl
iret
and
scas
pop
pop
cmc
fcomps
cld
lret
test
icebp
roll
cmp
push
pop
pop
xchg
pop
int
pop
sbb
jmp
lock
push
add
jmp
dec
in
stos
pusha
jge
sbbl
es
lock
call
jg
frstor
and
insb
pop
mov
xchg
pop
sbb
loopne
scas
test
xor
mov
jo
stos
out
subb
loop
cmp
cld
data16
shrb
cld
negl
scas
xor
sahf
cmpsb
and
andl
dec
sub
enter
xchg
cmp
xchg
std
mov
outsl
mov
aam
repz
push
mov
popa
xchg
mov
inc
jle
fldcw
iret
ds
mov
loope
mov
cmp
in
test
addr16
mov
jnp
jl
push
lea
in
push
mov
or
dec
lods
push
popf
mov
stos
pop
xor
pop
ficompl
ss
aas
jg
pop
xchg
mov
mov
pop
cmpsb
push
add
pushf
lock
push
movsb
std
lds
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
xchg
addr16
xor
inc
pop
jl
sbb
adc
or
fiadds
cmp
enter
push
rcrb
leave
mov
mov
add
push
sbb
cld
sub
outsb
dec
mov
sti
xchg
stos
aam
popf
repnz
pop
shll
jne
adc
jl
pop
pop
popf
push
pop
adc
cmp
jne
pop
nop
mov
add
add
sub
push
mov
mov
jae
push
scas
subl
test
testb
bnd
jae
popf
add
fsubl
jno
test
xchg
sub
imulb
pusha
popf
mov
lcall
jp
shrl
je
or
jo
roll
imull
or
cmpsb
cmp
ficompl
fsubl
out
jecxz
xchg
mov
add
outsl
je
jge
jge
dec
mov
inc
scas
pop
lods
xchg
ss
popf
mov
add
push
sbb
loope
je
sbb
jno
dec
xor
in
incl
mov
lods
call
mov
jbe
ja
mov
dec
xlat
cmp
add
lcall
icebp
add
dec
jle
pushf
pop
ret
jmp
xchg
aam
aad
pop
imul
sub
cmp
adc
scas
out
daa
inc
inc
ljmp
push
in
jne
adc
loope
ja
aas
nop
adc
sub
rcrl
mov
data16
scas
into
inc
test
jne
insb
dec
mov
xor
jg
jnp
adc
xor
imul
rcll
xor
dec
lcall
pop
cmp
push
mov
jns
xor
cmpsl
adc
or
lret
cmc
sbb
adc
cli
adc
adc
mov
xor
push
push
fcmovu
in
jno
add
pop
notb
into
out
pop
push
das
inc
insl
cld
pop
push
jnp
addb
and
mov
xchg
pop
fdivr
jnp
dec
in
sbb
xor
mov
mov
cs
jl
add
jne
cmc
repnz
jb
or
cmp
xchg
cli
sbb
or
jns
mov
xor
stos
adc
les
aas
daa
or
adc
sbb
xchg
xchg
stos
mov
enter
mov
sti
ljmp
cltd
sbb
pushf
fldcw
rcll
and
xor
jo
pop
testl
fildll
enter
add
and
inc
mov
into
inc
and
cmpsl
mov
lea
int
fadds
hlt
test
dec
inc
popf
or
xor
into
loop
loope
notb
sahf
mov
push
xlat
dec
cmp
sbb
cld
add
ret
ljmp
add
or
pop
mov
add
sbbb
movsb
xor
mov
add
mov
or
ja
push
jno
lds
fdivp
mov
push
cmpsb
inc
loope
insb
pop
jle
pop
lret
lock
fs
test
or
sbb
mov
pop
rcrb
es
insb
ret
fsts
sbb
sbb
arpl
mov
es
repz
sbb
add
lock
xchg
rcll
pushf
mov
and
mov
adc
add
jmp
pop
pop
mov
rclb
loopne
xor
jbe
add
pop
dec
jo
push
push
push
popa
cltd
pop
pop
cmp
popa
dec
sub
and
adc
outsl
dec
inc
inc
xlat
sub
repnz
and
push
cmp
call
faddl
mov
insb
mov
lea
and
mov
rcl
fldl
dec
mov
inc
adc
popf
scas
int3
or
add
inc
pop
fldt
adc
dec
jle
jle
and
jge
adc
xor
xor
popa
push
pop
xor
clc
ja
pop
jmp
xchg
rcrb
out
ja
lcall
lods
xchg
movsb
xchg
test
pop
das
mov
push
inc
ljmp
mov
dec
dec
dec
jno
sbb
ror
insl
sbb
mov
push
xorl
scas
fildl
jo
push
or
repz
xchg
jne
dec
pop
inc
ds
sbb
mov
aas
testl
gs
inc
inc
stos
movsb
in
stos
xchg
cmp
shll
push
sbb
loopne
fcmovne
ljmp
out
out
sub
jbe
and
imul
or
push
push
out
push
push
mov
or
pop
cmp
mov
jl
mov
leave
stc
mov
jnp
out
push
mov
fists
fs
pop
outsl
ss
adc
mov
mov
xor
bound
sbb
adc
out
xchg
insl
xchg
sar
sarb
test
rclb
add
mov
les
push
hlt
imul
push
gs
pushf
sub
aad
rdtsc
mov
xor
add
jno
push
lcall
xor
in
xchg
shlb
xchg
bound
pop
mov
xor
mov
mov
inc
mov
dec
cs
cltd
pop
lds
jbe
mov
outsl
xchg
in
cmp
sbb
ds
aad
jg
jns
jb
loope
sahf
add
testb
ds
sbb
popf
loopne
jbe
outsb
xchg
mov
push
lds
mov
sbb
bound
sub
test
jl
mov
test
aas
inc
dec
fisttpl
push
je
xchg
mov
mov
jecxz
mov
mov
pop
ja
std
xorb
lcall
cmp
movsl
int
into
fdivl
data16
and
mov
cmp
aam
enter
test
scas
push
xchg
rcl
push
dec
rcrl
cmp
mov
out
sahf
mov
jbe
lods
sub
lcall
sbb
inc
add
in
sbb
cwtl
xor
sub
dec
sbb
fdivl
push
lods
push
das
out
out
nop
mov
add
or
and
shrl
xchg
add
out
test
push
xchg
sub
inc
cmc
jbe
adc
sarb
dec
shlb
cmpb
sub
fcoms
rcl
cmp
out
sbb
cmpsb
jecxz
movsb
sar
or
lret
rclb
jo
lods
xorl
adc
mov
fs
cltd
jbe
nop
clc
lahf
pop
and
xor
or
imul
xchg
push
cli
sub
daa
dec
pusha
push
xor
imul
imul
jbe
jno
shll
inc
aad
iret
jb
addr16
pop
out
mov
cmp
mov
mov
push
fidivs
pop
and
xor
nop
ljmp
aam
pop
mov
test
xor
subb
mov
rcll
or
add
xchg
or
push
mov
mov
std
call
loop
lock
pop
jecxz
inc
bound
and
outsb
stc
mov
pop
aaa
pop
cmp
lret
push
push
scas
add
mulb
nop
in
jle
lods
lcall
insl
or
loope
movsb
mov
mov
aas
push
pop
cs
mov
mov
pusha
movl
sbb
in
xchg
into
fidivl
pop
pusha
pop
add
loopne
cli
leave
jnp
rcrb
xchg
shl
shr
repnz
test
lea
adc
jo
cmpsb
xor
pop
es
popf
xchg
les
jae
mov
dec
mov
push
dec
scas
dec
sub
fistpll
mov
fsubl
imul
outsb
cmc
jle
call
cmp
xchg
and
lock
jg
jb
loop
push
jmp
daa
sub
add
cwtl
ficomps
and
add
push
lock
xor
adc
adc
and
outsl
data16
add
inc
jnp,pn
jge
add
std
jns
das
cs
cmpsw
pop
loope
xchg
imul
xchg
out
mov
or
fidivrl
add
jmp
outsb
lret
pop
mov
ret
popa
xor
lea
leave
stc
pop
dec
subl
adc
bound
jo
popa
mov
cmpsl
jo
pusha
pcmpeqd
repnz
sub
mov
stc
dec
daa
push
mov
xor
jl
repz
repz
in
and
inc
dec
lods
arpl
xchg
orb
test
daa
int3
aam
pop
loop
out
push
add
adc
mov
pop
lock
lds
fdivs
and
aas
cli
addr16
xor
lods
mov
sbb
fsts
je
mov
or
jnp
jne
int
pop
push
imul
jecxz
dec
xchg
lret
enter
ret
aam
jl
icebp
scas
sbb
lds
test
sbb
das
es
test
pusha
popa
mov
cs
call
cmpsl
cli
pop
sahf
sahf
out
shrb
sub
sbb
xchg
xchg
les
cltd
stc
inc
pusha
je
pop
ret
push
in
mov
and
mov
enter
jno
ljmp
test
fs
and
jmp
pop
int
xor
in
pop
push
js
jecxz
adc
idivl
sbb
push
or
insl
scas
jmp
stos
test
push
and
movsl
cld
in
jmp
test
repz
outsl
sti
add
lock
sub
repnz
stos
popa
cmp
pop
lret
fists
xchg
fwait
mov
xor
pushf
ret
xchg
ds
test
adc
jp
mov
sub
pushf
sbb
adc
pop
ss
fnsave
cltd
ja
push
adc
insb
fidivrl
out
cmpsl
repz
repnz
dec
fstps
call
inc
dec
les
pop
mov
and
sarb
jns
adc
mov
or
movsb
pop
ret
dec
xor
push
clc
cli
push
push
mov
daa
frndint
mov
push
cmp
mov
jg
lds
mov
inc
xchg
lret
lahf
dec
cmp
add
or
syscall
test
sub
lret
push
sub
test
ret
enter
jns
jnp
jns
sub
pop
filds
mov
sub
loopne
aas
mov
xor
xchg
push
or
shl
inc
push
ljmp
popf
mov
or
enter
mov
pop
sub
sub
movsb
mov
test
xchg
cmc
call
xor
cmp
int
xor
xchg
lock
xlat
scas
jl
pop
mov
ja
mov
adc
mov
xchg
data16
lds
hlt
sbb
or
nop
cmp
jecxz
fdivs
daa
mov
out
xor
popf
mov
call
ret
pop
sub
jb
pop
xchg
xchg
add
cmp
mov
rolb
push
lds
je
push
lret
fdivrl
loopne
xchg
inc
xchg
lods
pop
ret
fcoms
pushl
pop
stos
leave
sbb
test
fildl
cltd
fcomip
shlb
mov
call
xor
sbb
ljmp
lret
sti
adc
cmp
mov
fwait
add
mov
or
std
mov
test
cmp
cmp
lret
mul
test
pop
mov
mov
and
xor
mov
xchg
mov
jmp
mov
adcb
dec
fs
cli
outsb
jae
jb
push
adc
and
adc
ja
mov
jno
mov
adc
je
sub
jns
xchg
addb
jge
cmp
jg
test
dec
out
lods
mov
aad
in
jae
sbb
addr16
icebp
pop
popf
ret
pop
lods
loope
dec
shr
lcall
xchg
add
cmp
jge
lock
sbb
data16
scas
addr16
push
sub
sub
push
mov
lea
mov
xor
sub
in
adc
fwait
pop
jns
shlb
out
adc
sbb
addl
mov
rcrl
cmc
rolb
cmp
sbb
dec
or
inc
loope
jecxz
inc
clc
inc
cmp
cmc
inc
popf
enter
cmp
shrl
fisubl
mov
std
and
ja
fnstenv
xchg
sbb
inc
fcoms
dec
sbbl
sti
out
roll
sub
fistps
and
fnsave
jp
mov
jmp
inc
outsl
or
cwtl
and
or
outsb
pop
and
out
lds
repnz
jns
scas
dec
sbb
cmp
out
das
xlat
cwtl
jle
add
mulb
pop
cmp
jne
gs
fildl
add
pop
jg
ds
in
data16
fcmovb
enter
sbb
sbb
insb
addr16
xor
leave
xchg
jecxz
mov
mov
dec
test
sub
push
and
leave
rcrb
out
sbb
rcl
dec
jl
fwait
mov
mov
popa
cmp
int3
jb
out
xchg
in
ss
inc
adc
push
mov
cmp
mul
mov
mov
xor
lret
pop
mov
xor
stos
jb
popf
jne
add
or
pop
ret
mov
xchg
movsl
decl
mov
fimull
fstl
decl
popf
leave
subb
pop
xor
mov
clc
pop
adc
mov
fidivl
into
mov
mov
notl
push
pop
push
mov
in
pop
push
out
fsts
mov
pop
jae
sbb
aaa
mov
push
or
push
jo
xor
jb
jmp
loope
push
or
mov
arpl
xchg
hlt
sbb
add
mov
fadd
inc
aaa
inc
das
aad
ljmp
sub
into
arpl
adc
int3
push
mov
cli
clc
hlt
mov
fcomps
fildl
sbb
movsl
dec
jg
aaa
mov
outsb
lea
jmp
mov
icebp
popf
leave
or
xor
adc
rcrl
clc
jns
faddl
inc
push
xchg
push
xor
lods
orb
add
sub
or
es
imul
cmc
shll
scas
sub
pop
push
and
mov
mov
out
sbb
in
add
sub
jg
dec
push
inc
pusha
jno
stos
sahf
stc
inc
shlb
jmp
xchg
jl
push
pop
fs
adc
xor
push
fs
pop
lcall
ljmp
out
mov
test
int3
icebp
jne
mov
cmp
jle
movsb
pop
xor
loopne
inc
or
fucomp
fcmovbe
jmp
and
scas
jg
orl
in
in
xchg
fs
pop
mov
test
mov
pop
or
aam
sbb
push
cmp
das
lods
arpl
xlat
pop
jo
add
sbb
or
mov
jmp
rolb
mov
test
scas
push
mov
jae
ja
xchg
das
cmpsl
std
inc
inc
shll
sub
stos
inc
adc
pop
cmpsl
es
arpl
fdivrl
mov
mov
jle
push
and
mov
or
xor
outsb
push
mov
xchg
sbb
xchg
std
imull
mov
fwait
test
lods
adc
jne
push
inc
cmc
add
stos
movsl
scas
inc
adc
jecxz
cmpsb
and
and
test
mov
push
int
sahf
or
sub
jno
add
inc
mov
jb
sti
jg
idivl
aas
test
add
addl
dec
pop
sahf
pop
lods
cwtl
jo
push
je
mov
jmp
push
mov
cli
in
cli
mov
rcrl
ss
inc
bound
addl
xor
jge
js
cmp
dec
data16
lret
cmpsl
push
iret
std
dec
xchg
fwait
cmc
sub
outsl
loop
std
loope
jp
or
repz
adc
fadds
xlat
scas
push
stos
popa
cli
mov
adc
scas
adc
outsl
mov
push
mov
out
jns
cltd
gs
and
fisttps
pop
fsubrs
loope
lds
mov
jg
mov
pop
and
cwtl
fcmovb
pop
mov
xor
push
cwtl
dec
add
sub
cmp
test
andb
jge
lods
sub
add
mov
shlb
pop
jo
test
enter
add
je
std
xlat
inc
cwtl
mov
lcall
movsl
clc
inc
adc
lret
mov
and
inc
sbb
daa
stos
adc
pushf
jl
and
cwtl
sub
or
dec
mov
lods
scas
jle
xor
pop
clc
je
jnp
dec
fcomps
jns
cmp
addr16
js
xchg
pop
cld
test
test
or
lcall
dec
rcl
mov
pop
pop
sbb
aas
pushf
jbe
shlb
iret
in
xor
test
dec
std
dec
xchg
inc
and
inc
add
imul
fldenv
sub
sbb
add
pop
push
add
enter
push
cmp
jl
daa
push
in
mov
daa
aam
and
adc
dec
outsl
mov
stos
shll
or
mov
push
lret
push
mov
adc
sub
adc
xchg
push
lret
pop
repnz
push
push
pop
aas
daa
clc
or
mov
push
fcomps
arpl
cmp
mov
lahf
and
movsl
xchg
insl
test
ds
lods
mov
dec
and
mov
stc
andb
pop
mov
popw
nop
push
push
fs
xlat
xchg
sbb
insl
xchg
pop
icebp
jae
aad
pop
mov
pop
and
cmp
popa
fdiv
mov
lcall
les
sbb
inc
push
into
arpl
out
jns
aad
jecxz
negb
jno
mov
aas
cmp
repnz
stos
sub
xchg
xchg
lock
iret
lret
fwait
add
or
sbb
sbb
mov
es
inc
mov
push
or
cmp
and
push
loopne
mov
push
mov
aaa
sub
dec
or
jbe
mov
jne
mov
iret
jecxz,pn
shll
add
mov
push
stos
ss
test
in
xchg
sbb
in
inc
test
mov
push
pop
cltd
jo
sub
cmc
aad
mov
mov
push
adc
adc
mov
mov
ljmp
mov
inc
cmp
add
idivl
je
loop
dec
mov
rorl
or
mov
cs
xchg
xchg
ss
inc
popf
cmpsb
mov
ljmp
and
insb
lret
ror
mov
add
pop
out
or
push
xchg
ds
push
lock
xchg
repnz
sub
insl
in
fwait
sti
repz
lahf
or
jle
jg
sub
insl
dec
dec
rcrl
and
cli
repnz
xchg
mov
movsb
pop
clc
add
jnp
pop
sti
inc
jne
lods
mov
js
mov
gs
lret
out
and
inc
lock
pop
mov
xchg
aad
sarb
xor
mov
dec
int3
ljmp
xchg
adc
pop
push
movsb
cld
cltd
xor
cli
jns
dec
stos
inc
mov
dec
gs
std
push
mov
dec
push
dec
push
mov
push
imul
push
fsubs
das
mov
inc
clc
xor
jo
adcb
push
cmpsl
lock
aam
rolb
mov
lods
mov
negl
lods
sub
mov
imul
push
adc
xor
mov
mov
push
inc
and
fs
cld
mov
jle
gs
cld
jb
and
xor
pop
sub
loop
mov
rclb
add
lahf
add
idivb
adc
in
pusha
les
xor
rcrb
mov
cmp
sub
mov
mov
inc
push
mov
xchg
xor
cmp
xor
mov
pushf
pop
mov
lret
ds
add
mov
xchg
adc
adc
aam
adc
addr16
fadds
call
mov
push
cmp
jecxz
andl
pusha
dec
addl
mov
fwait
movsb
or
pop
clc
cmpsl
stos
into
out
pop
jno
cmp
lds
cli
push
sahf
jge
and
stc
dec
jb
sar
es
jp
pop
cmp
test
mov
inc
jns
xchg
out
mov
loop
sbb
ljmp
outsl
pop
mov
fwait
jmp
test
add
dec
int
lea
sub
jns
cmpsl
mov
iret
roll
sti
cld
push
movsb
rclb
jbe
andb
hlt
cmpsb
dec
cmp
push
inc
movsb
fnsave
jle
xchg
sub
movsl
pop
cmp
je
sbb
and
dec
pop
cld
cmp
jecxz
bound
mov
adc
cmpsb
dec
mov
pop
popa
xchg
shll
sub
lea
jge
add
mov
pusha
fdivs
pop
popf
pop
popa
mov
xchg
clc
repz
stos
sgdtl
divb
aad
stc
pop
enter
fdivr
pop
das
ds
orb
mov
sub
outsb
inc
lods
or
dec
push
scas
mov
enter
mov
pop
aad
xchg
cmp
pop
stc
imul
int
in
pop
and
popf
fiaddl
call
lods
pop
push
call
sahf
fldcw
ret
loopne
out
inc
xchg
shlb
jmp
call
adc
sub
flds
mov
add
les
addr16
mov
xor
sub
or
push
in
mov
out
sub
mov
call
es
ret
add
aad
clc
or
sub
dec
imul
mov
mov
stos
inc
jnp
cmp
adc
add
cmp
bound
repnz
fs
xor
push
ret
xchg
jnp
and
lahf
jne
inc
std
xor
stc
out
sub
pop
test
jbe
cmp
std
and
sub
sbb
jl
mov
jmp
lret
mov
lret
mov
stos
cld
dec
out
out
lea
cmp
jae
out
ds
rolb
mov
mov
jnp
int
and
lea
push
and
lds
mov
inc
pop
pop
add
jns
pop
insl
inc
inc
xchg
out
fdivrs
add
enter
cs
mov
sbb
or
add
or
jb
clc
cmpsl
mov
mov
jo
push
std
call
test
adc
repnz
test
or
int
push
iret
mov
push
out
and
and
sub
scas
je
movsb
repnz
addb
ljmp
pop
in
neg
int3
cmpsl
les
in
movsb
pop
cs
fisubs
out
or
mov
fistpll
inc
push
fwait
and
push
mov
pop
inc
and
pop
or
jne
cmpsl
dec
mov
test
insb
je
adc
mov
outsb
add
push
aam
push
jp
popf
add
fisubrs
jg
xor
push
jns
fimull
xchg
out
mov
es
dec
sub
sbb
ret
aam
sbb
das
cmp
loopne
add
sub
sbb
subb
into
sahf
mov
aam
jae
lock
dec
movb
imul
insl
xchg
inc
stos
lock
jp
lret
dec
xor
jle
xor
dec
jae
out
pop
or
sub
lret
xchg
fsts
mov
in
xchg
add
add
mov
push
outsl
scas
or
imul
loop
and
xor
inc
cmpl
les
subl
push
dec
mov
outsl
jbe
ficompl
lahf
mov
test
push
aad
mov
rcl
cmpsb
add
lods
push
jo
les
inc
sbb
std
dec
nop
mov
push
add
jnp
bound
add
stos
icebp
add
mov
push
dec
push
jl
add
push
cmp
popa
inc
mov
aad
push
add
rorl
in
mov
rorb
int
jb
outsl
mov
mov
mov
sub
or
mov
sub
lock
lcall
pop
pop
sbb
popf
add
sbb
and
pushf
movsl
loopne
mov
cwtl
icebp
ret
xchg
pop
jmp
imul
push
inc
cs
pop
cltd
ja
arpl
mov
xor
sbb
xchg
adc
inc
pop
sbb
and
fimuls
icebp
add
xchg
mov
fistpll
push
inc
and
jmp
adc
je
lcall
sti
lcall
push
cwtl
inc
mov
mov
cld
mov
lods
fstpl
jl
mov
pop
fxch
leave
sub
and
add
sti
int
aaa
arpl
lds
mov
sub
out
mov
loopne
mov
mov
bound
mov
xchg
add
ljmp
int
pushw
jg
cwtl
fs
movsb
push
push
decl
popa
and
in
imul
inc
mov
pusha
popf
test
xchg
inc
dec
notb
mov
mov
mov
mov
inc
and
push
clc
icebp
inc
and
mov
dec
jbe
dec
push
xor
inc
sbb
dec
dec
pop
fidivs
add
cs
scas
jbe
mov
je
inc
in
cmc
pop
stc
sub
loop
fdivr
sbb
cmpsl
xchg
xchg
lcall
jg
popf
ret
test
movsl
inc
pop
ja
inc
xor
std
xor
mov
mov
aad
dec
jo
and
sbb
idiv
sub
aas
xorb
outsb
fs
subb
pop
popa
mov
xlat
std
lock
pop
pop
pop
sbb
pop
popa
adc
ljmp
xor
pop
xor
inc
outsb
rcr
mov
int
push
adc
inc
add
sbb
aas
shrb
fisubrs
arpl
mov
add
push
xchg
enter
rcr
xor
sti
mov
pop
cmp
popa
mov
aas
jno
add
xor
insb
arpl
sub
cmp
and
ljmp
cltd
or
dec
push
iret
pop
xor
dec
mov
outsb
sahf
mov
call
sbb
imul
shrb
lds
scas
or
aad
jno
cmp
lds
jnp
cmpl
shrb
pop
lahf
mov
add
in
scas
sbb
pop
ljmp
fisttps
mov
sbb
movsb
mov
test
cld
pop
pusha
push
push
idivb
sahf
jns
in
add
adc
inc
pop
ret
cs
push
or
pop
push
test
fisubl
and
jge
xor
or
mov
jne
inc
in
adc
sbb
xchg
movups
outsl
mov
mov
enter
dec
hlt
cmp
xor
xor
out
fdivs
stos
leave
dec
clc
sub
sub
dec
mov
ficomps
mov
pop
fldcw
pushf
lahf
sbb
ret
xchg
dec
lock
or
cwtl
mov
dec
mov
js
test
adc
sub
shl
movsb
cmp
lahf
mov
imul
icebp
add
insb
and
int3
xor
aas
add
scas
out
cmp
inc
inc
sub
adc
sub
push
push
out
es
pop
jno
out
push
inc
in
stos
mov
pop
xor
jp
push
pop
sub
pushf
push
int
fwait
pop
jg
pop
push
sbb
mov
imul
xchg
insb
jecxz
and
int3
push
lret
mov
lret
lret
or
dec
push
adc
sbb
rcll
mov
jl
inc
pop
dec
jne
inc
pop
pop
ja
push
adc
imul
stos
inc
jmp
mov
ss
inc
mov
adc
adc
inc
mull
xor
incb
icebp
test
push
ljmp
movsl
push
ficomps
xorb
ljmp
bound
inc
xchg
inc
mov
inc
push
xchg
addr16
scas
hlt
push
stos
adcb
test
pop
push
mov
int
div
pop
icebp
cmp
shll
mov
popf
mov
sub
push
push
xchg
rcr
add
inc
sub
xchg
lcall
aaa
movsb
add
movsl
xor
sub
mov
mov
setno
repnz
fsubrs
sub
fcoml
shrl
push
xor
lret
mov
aaa
stos
cmpsb
jae
je
sub
inc
jno
inc
add
push
xor
pop
test
loope
pop
imul
sbb
lahf
mov
mov
int
test
pop
add
mov
aad
out
jmp
in
stc
jbe
xchg
out
lahf
lahf
mov
jp
xchg
mov
bound
mov
mov
mov
sbb
jecxz
sub
add
in
sub
popa
inc
mov
gs
leave
fnstenv
xchg
js
add
addr16
cwtl
outsl
and
push
pop
jno
jecxz
adc
imul
bound
rol
jne
mov
add
cmp
into
fistps
pushf
sbb
mov
jl
mov
push
es
dec
sub
popa
cs
mov
push
fs
sbb
xchg
pop
testb
sbb
or
mov
cs
adc
imul
cmpsb
xor
mov
xor
pop
jg
and
add
cmp
xchg
out
cmp
xor
sub
add
jne
xchg
sbb
in
rorl
mov
dec
fimull
fnstcw
out
push
aam
sub
adc
jle
sub
mov
mov
or
jae
push
or
dec
or
shlb
sub
fcmovne
stc
mov
ja
js
jmp
sub
cmc
sub
scas
mov
loopne
mov
ljmp
das
js
aas
dec
add
push
les
jp
sarb
sbb
xor
inc
cmpsb
lods
das
add
enter
push
pop
jne
ret
xchg
int
imul
stos
lock
jp
sub
cmp
aas
in
xor
mov
dec
jo
sub
push
mov
int3
push
inc
dec
jns
repnz
xlat
shl
push
hlt
add
adc
in
cmp
shr
lahf
mov
out
jb
jnp
cmp
and
xorb
xor
movsl
adc
fidivl
mov
fs
ret
popf
cmp
jg
and
push
or
mov
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
mov
adc
inc
pop
jl
mov
leave
in
int
aad
jp
pop
icebp
imul
sbb
subl
push
mov
lods
iret
sub
inc
lock
or
and
into
es
test
inc
cli
fldt
and
sbb
adc
dec
mov
aaa
jo
xadd
mov
mov
lcall
cmp
xchg
mov
mov
xchg
test
xchg
ss
and
insb
or
fsts
jmp
xchg
mov
dec
int3
mov
sub
jecxz
or
test
add
ret
xor
or
loop
adc
dec
rolb
loopne
sbb
jmp
pop
and
push
pop
imul
in
dec
mov
out
call
xchg
add
jae
mov
and
or
jg
mov
das
mov
push
push
sub
les
mov
lahf
jno
push
jge
jecxz
pop
sbb
int
les
cmp
or
insb
fwait
and
add
inc
cwtl
jl
int3
cmpsb
pop
out
out
out
movsb
loopne
lret
aas
cmp
inc
dec
push
cmp
jns
aas
lret
pop
jge
addb
int
sbb
data16
out
pushl
data16
test
mov
dec
repnz
jne
lods
or
cmc
cmp
add
inc
pusha
mov
pop
scas
sarl
test
push
dec
lret
xor
mov
mul
out
dec
arpl
enter
dec
imul
jbe
jmp
mov
lods
push
adc
fists
cmp
ret
sbb
movsb
call
aas
pop
mov
hlt
sub
cmp
insb
pop
push
imul
sbb
cld
inc
mov
inc
popf
fldl
cmpl
sub
fsubs
in
pop
push
subb
scas
test
and
jle
sub
mov
popa
data16
dec
push
pusha
push
jg
lods
cld
scas
cmpl
xchg
out
jecxz
cmp
fdivs
rcr
or
hlt
mov
jne
fimull
mov
adc
push
sub
push
dec
cwtl
or
jnp
fwait
inc
mov
ljmp
sbb
mov
popa
jno
jnp
mov
and
xor
lcall
outsb
mov
xchg
adc
test
push
fscale
jne
jns
std
mov
xchg
adc
push
sub
adc
sub
in
adc
cmp
xor
in
mov
xchg
inc
aas
adcb
pusha
lea
adc
shrl
dec
dec
cld
cmp
fs
ret
shrl
adc
int
arpl
sbb
stc
cwtl
push
lods
or
inc
inc
nop
jb
adc
jge
xchg
and
adc
jp
nop
sbb
lods
inc
jne
jbe
into
xchg
insb
lock
or
ret
mov
std
out
mov
fwait
aam
test
or
insl
aas
cmp
movsb
js
loop
push
data16
cs
mov
pop
sbb
lods
or
mov
sub
mov
lods
sbb
xchg
shll
lret
and
xor
mov
push
xchg
mov
shll
loopne
xor
sub
test
stc
xor
adc
dec
cld
cmp
inc
dec
fimuls
mov
out
xchg
xchg
incl
xchg
or
icebp
cmpsl
fadds
inc
pusha
mov
nop
in
jg
in
jae
sbb
out
cmpsb
jbe
call
mov
incl
cmp
pop
ret
adc
sub
add
xchg
mov
out
int
cmpsl
push
push
sarl
icebp
inc
sub
dec
insb
jmp
subl
aas
popa
sbb
adc
icebp
into
repz
jb
mov
adc
mov
adc
adc
inc
fidivrl
test
mov
ss
xchg
int
nop
andb
fsubrs
icebp
mov
lret
cmpsl
push
daa
xor
cmc
adc
int
stc
dec
fs
test
test
hlt
cmpsl
aad
inc
adc
fcoml
pusha
mov
pop
outsl
dec
orl
jbe
inc
inc
in
pop
or
popa
data16
and
push
mov
icebp
das
xchg
test
pop
push
int
jne
pop
xchg
jo
das
fdivl
stc
sub
iret
out
into
int3
lret
shll
cmp
ret
insb
jg
dec
sub
out
cmpb
cltd
cmpsl
jbe
nopl
cmp
xchg
and
in
pop
pop
es
aad
or
sti
adc
mov
cld
xchg
and
push
and
sbb
dec
hlt
add
rorl
mov
or
or
shll
cmp
jmp
sub
loop
push
sbb
int3
mov
push
jmp
pop
mov
jne
test
sbb
std
xchg
sub
or
dec
pop
mov
insl
dec
loop
xchg
mov
aas
jns
pop
lock
dec
popf
leave
daa
dec
ss
xchg
xchg
sub
push
or
mov
pop
push
ret
jne
fdivrs
or
in
xchg
dec
loope
inc
cmpsl
dec
mov
pop
je
das
mov
ficoml
or
mov
out
femms
dec
jmp
rcrb
setb
or
xor
and
xchg
outsb
jge
mov
dec
popa
ficomps
mov
fidivs
sub
mov
test
or
stos
test
push
push
dec
cmp
je
test
sbb
xchg
add
scas
cmp
sbb
lahf
outsb
stos
aam
or
sub
rcrb
adc
jne
pushl
mov
fwait
in
adcb
insb
in
out
pop
lods
jbe
inc
loope
nop
push
ja
sub
aam
in
andl
mov
fdivr
jb
sub
dec
cs
fwait
inc
pusha
test
xlat
sbbb
fsts
jg
add
aam
mov
mov
pop
sbb
je
dec
push
cmpsl
insb
sbb
cmp
dec
mov
in
divl
xor
pop
and
mov
jbe
jl
loope
fwait
rclb
jmp
inc
xlat
insb
add
adc
xchg
mov
cwtl
loop
inc
push
imul
shrb
sarb
nop
cmpsb
jae
lret
rorb
insl
jmp
or
loope
lcall
inc
xchg
call
xchg
sbb
and
pop
add
outsl
inc
push
jne
lea
push
sbb
xor
out
testb
jno
rolb
jbe
hlt
sbb
sub
scas
jo
add
daa
fiaddl
adc
mov
jo
jo
ja
mov
xchg
arpl
jmp
subb
ror
scas
mov
int3
pop
mov
xchg
push
sub
dec
lret
sub
adc
imul
pop
sbb
out
fsubs
pop
adcb
fsubr
and
xchg
out
clc
repnz
arpl
out
add
lods
jbe
enter
data16
adc
dec
out
mov
and
clc
fsub
jno
pop
std
xchg
loopne
and
insb
pusha
pop
xor
mov
inc
add
mov
sbbb
mov
mov
cmp
inc
sub
stos
loopne
push
jbe
repnz
in
xchg
lods
mov
decl
gs
cmp
push
mov
sub
sub
loope
and
mov
push
pop
movd
aad
loop
mov
adc
pop
cmpsb
sub
loop
lret
xor
pop
fwait
out
push
pop
mov
mov
loop
andl
pop
fadd
outsl
jns
ss
fcoms
mov
add
enter
loope
inc
lret
test
movsb
mov
lods
dec
aas
lock
and
repz
push
lcall
stos
mov
and
out
sub
push
push
mov
xor
into
cmp
rorb
shll
into
fnstsw
arpl
mov
mov
dec
inc
mov
jmp
add
xor
dec
jge
jo
into
ficompl
pusha
pop
jns
jmp
ljmp
repz
cmpsl
clc
js
lods
and
pop
insl
adc
add
mov
stc
out
sarb
xchg
mov
and
in
push
repz
call
xchg
sub
cmp
mov
out
and
cmp
xor
outsl
aam
mov
sbb
sub
std
push
xchg
pop
jle
outsb
outsb
daa
xchg
dec
mov
pop
pop
divb
fisttpl
cli
adc
pop
xor
cmpsb
or
or
dec
dec
push
fists
aad
in
cwtl
mov
in
cs
pop
gs
cmpsl
imul
add
outsb
sbb
imul
inc
test
push
rep
mov
inc
mov
sub
repz
xor
cltd
movsb
inc
test
mov
lahf
inc
dec
dec
xchg
adc
jno
xchg
mov
and
shll
jae
shlb
or
in
mov
mov
cwtl
jno
cs
leave
out
lcall
gs
sarl
popf
jg
and
and
nop
mov
cld
lahf
xchg
cmpb
lret
mov
inc
shrl
adc
sbb
mov
test
loopne
mov
lea
jae
cmpsb
pusha
jg
inc
mov
pop
out
and
push
jecxz
test
call
scas
adc
pushf
mov
dec
mov
out
leave
add
testl
sub
mov
mov
popa
mov
cld
out
std
in
pop
dec
push
fsubrs
xor
mov
lods
jbe
ffree
ret
loopne
das
test
rcll
sbb
push
data16
aaa
loop
add
and
xlat
pop
sbb
stos
cmpsl
je
ss
arpl
in
out
mov
lods
mov
aad
popf
cmp
movsl
pop
out
pop
mov
leave
lea
add
jno
jmp
test
add
xchg
sbb
push
cmpsb
std
test
mov
mov
test
filds
add
leave
dec
xor
sub
paddsw
gs
andl
sbb
mov
mov
xchg
push
adc
adc
repz
mov
popa
xchg
add
push
adc
and
fstpt
push
mov
jg
cli
daa
arpl
cli
rcrl
outsl
jg
push
mov
push
je
inc
dec
adc
mov
pushf
sub
jl
cmp
sbb
nop
sbb
push
rorb
or
icebp
mov
push
adc
pop
cmc
in
xor
movsb
xchg
cmp
pop
sti
jne
gs
jmp
xlat
arpl
mov
pusha
lock
scas
lds
outsl
xchg
mov
inc
js
xchg
outsl
mov
insb
int
dec
ficomps
adc
mov
in
adc
pop
cltd
imul
movsl
mov
test
cli
lods
pop
das
les
dec
movsb
outsl
add
cli
fimull
mov
jecxz
adc
cmp
mov
xchg
mov
in
leave
lods
fs
sbb
xchg
fnstsw
js
sub
pop
fidivrs
inc
cmp
push
fildl
loopne
pop
push
test
rolb
mov
repz
cmpsl
icebp
ret
xchg
fimull
dec
inc
pusha
repz
ret
sub
inc
inc
enter
cwtl
stos
cwtl
sbb
xchg
dec
out
fmuls
jecxz
sbb
into
jae
jno
dec
sub
fldcw
pop
adc
add
jmp
insb
insl
xor
popa
into
imul
or
mov
bound
movsb
loopne
mov
add
lret
jno
test
mov
pop
imul
mov
std
ja
mov
out
jl
enter
aad
mov
and
outsb
cmc
clc
pushf
inc
adc
ds
xor
jne
mov
hlt
rdpmc
test
pop
inc
xchg
jl
fs
mov
test
shrb
xchg
out
imul
xor
cmpsb
sbb
je
push
cmp
xchg
mov
ja
push
enter
adc
pushf
pop
pop
aaa
pop
shlb
andb
movzwl
std
aam
loope
int
into
ss
push
inc
cs
cmp
nop
inc
inc
stc
lea
sbb
mov
leave
hlt
or
xlat
xchg
lret
test
or
in
dec
leave
inc
icebp
pushf
punpcklwd
outsb
int
jno
lahf
jne
mov
test
hlt
and
and
pushf
fwait
push
xor
repnz
call
inc
ss
or
xchg
jmp
add
enter
leave
roll
aas
lods
lcall
xor
xor
jbe
push
fdivrs
aad
in
shlb
pop
test
mov
adc
xor
push
xorl
and
jo
xchg
cmp
loopne
ficoms
jecxz
mov
push
movsl
dec
dec
and
push
mov
push
fldcw
ss
aad
inc
fwait
push
xchg
data16
movb
adc
cli
arpl
stc
nop
push
aad
test
push
ljmp
push
out
push
mov
popf
jle
mov
push
mov
jp
sti
orb
fwait
cmpsl
mov
gs
mov
pop
scas
adc
aaa
daa
dec
sbb
ljmp
ret
xor
inc
outsb
cli
lea
loope
in
mov
clc
mov
mov
lods
shl
add
cli
adc
fsubs
add
movsl
sbb
adc
jecxz
into
push
cli
jbe
fistpll
outsl
out
orl
ret
out
inc
in
mov
testl
mov
stos
cld
test
aas
mov
and
cmp
stc
out
push
repnz
sbb
add
sti
push
stos
sahf
add
test
stos
mov
in
adc
imul
repz
mov
ljmp
mov
dec
mov
movsb
pusha
mov
adc
je
fidivs
xchg
cmpsl
sahf
inc
das
xchg
mov
adc
lea
mov
leave
fisubrs
jns
jb
fs
dec
insb
xor
cmp
clc
xor
ljmp
cld
xor
out
test
inc
ret
sbb
mov
mov
fcmovne
push
loope
sbb
add
xor
loopne
mov
xchg
inc
test
stc
shlb
push
rcrl
je
outsl
adc
dec
adc
sub
popa
sbb
mov
xchg
setge
jmp
add
and
adc
xchg
mov
push
push
mov
and
stos
repnz
fwait
repnz
ret
outsb
out
dec
lret
mov
outsb
mov
jmp
int
inc
xchg
fs
jle
xchg
loopne
mov
scas
add
das
mov
test
jb
inc
push
nop
arpl
pop
adc
test
lret
sbb
sbb
out
aas
xor
out
rcll
sbb
pop
cmp
aam
inc
xor
ds
lds
pop
push
imul
jae
scas
popf
ljmp
ss
pop
fs
div
les
mov
aad
dec
cmp
sti
jmp
cmp
jg
or
inc
js
ds
insl
pop
jns
mov
cmpsb
loope
scas
cli
push
cwtl
mov
or
push
into
dec
mov
mov
or
or
lock
jne
jmp
call
hlt
mov
xchg
cwtl
loopne
push
mov
jno
jo
loopne
mov
aas
testb
std
mov
jnp
inc
pop
or
add
fucom
add
jbe
iret
aam
adc
cltd
xchg
mov
bound
or
jp
jecxz
sbb
stos
mov
push
cmp
loopne
notl
jmp
loope
mov
add
adc
mov
xchg
sarb
and
shrb
pop
and
jg
loopne
stos
ljmp
call
xchg
out
rcr
shlb
shrl
test
adcb
cmp
sbb
es
int
pop
icebp
cmp
push
dec
shlb
jg
lods
das
mov
dec
mov
icebp
add
jne
mov
xchg
sbb
xorl
mov
insl
movsl
leave
xchg
xor
aas
imul
shrb
ss
sub
xchg
pop
mov
je
cmp
ror
push
push
bound
mov
fldt
adc
lcall
rcl
mov
mov
pusha
sbb
sbb
cld
clc
cwtd
jp
inc
pop
xchg
mov
lahf
hlt
sub
mov
jp
lds
loop
popf
jle
das
repz
data16
mov
ja
inc
xor
in
imul
rclb
inc
push
ret
mov
pushf
push
xchg
fdivrl
sub
imul
cmpsb
lret
lods
lock
or
jae
data16
pop
sub
jecxz
sti
push
jbe
stos
repz
pop
fwait
out
push
dec
and
es
int
or
sbb
adc
adc
mov
mov
andl
shrl
out
jmp
lock
stc
enter
loopne
shll
movsl
pop
jp
lcall
push
jo
imul
or
pop
mov
daa
push
mov
cs
sbb
mov
lahf
shrl
ja
mov
pop
mov
inc
pop
repnz
lds
sbb
jp
adc
sahf
push
mov
pop
mov
loop
xor
inc
sbb
sub
repnz
xlat
mov
xchg
xor
and
dec
jo
dec
mov
ss
cmp
test
or
fdivrp
sbb
test
push
fildll
lods
inc
push
mov
scas
nop
xor
neg
adc
pop
rcr
push
test
sub
xlat
insb
iret
cmp
push
outsl
push
dec
jnp
jp
sub
jb
mov
outsl
das
movsl
je
fdivrs
or
jo
xchg
sbb
cmp
pop
stos
cwtl
je
fbstp
cmpsb
rolb
arpl
cmpsb
lret
sbb
lods
lods
sub
xchg
in
test
mov
shl
mov
in
outsb
mov
dec
lods
and
mov
imul
cmp
fcmovnu
sub
ret
sti
aad
pusha
lcall
sub
mov
lods
mov
adc
scas
clc
nop
jmp
and
push
call
push
mov
filds
sarl
push
mov
andb
jle
pop
pusha
pusha
mov
xchg
call
inc
push
cmp
test
shrl
aas
jp
fstpl
sbb
mov
mov
ret
mov
add
je
lods
adc
ds
stos
push
iret
dec
and
pop
xchg
ss
shrb
out
mov
push
push
in
out
loopne
test
mov
and
jg
push
int
push
inc
rclb
dec
rcr
test
movsb
mov
iret
cwtl
add
push
add
dec
jno
mov
lock
xchg
or
jb
mov
add
stos
xchg
push
cmpsl
jmp
ja
loopne
mov
or
repz
ret
push
in
out
pop
mov
push
mov
movsb
cli
pop
push
cwtl
push
loopne
scas
pushf
mov
or
sbb
ljmp
xchg
dec
push
mov
or
ljmp
mov
cmp
add
stos
adc
in
loope
out
sub
stos
repz
loope
pop
jbe
push
popa
fisttps
dec
add
nop
xor
shrb
lcall
ljmp
gs
cs
adcb
test
lds
add
mov
out
mov
cwtl
jbe
push
cmp
fdivrl
jns
ljmp
mov
popa
lea
inc
and
fisubrs
sti
inc
cmp
pushf
aaa
stos
xchg
addr16
mov
js
in
stos
fiaddl
out
jb
cmp
dec
insl
push
lea
sbbb
inc
inc
orl
cmp
orb
movsb
mov
xlat
mov
and
and
lret
jbe
jns
les
dec
outsb
movl
testl
ret
jbe
sbb
cmp
mov
add
jbe
arpl
movsl
shlb
mov
xlat
div
sarb
jmp
mov
mov
repz
ret
lds
and
push
loope
ljmp
or
push
mov
sbb
arpl
imul
loop
inc
jle
adc
arpl
push
jp
jp
adc
inc
daa
bound
cmp
lahf
hlt
adc
xorl
or
cmp
or
pop
push
sub
jmp
insb
xchg
cmp
jnp
jo
pop
ror
push
stos
popa
mov
inc
call
sbb
push
imul
mov
inc
jle
xor
dec
shlb
test
sbb
add
inc
pop
rcrl
ss
mov
es
cli
test
mov
cmp
pushf
sbb
xor
jns
movb
jbe
mov
mov
ja
and
sbb
addb
test
push
aad
cmp
movsl
lahf
stc
loope
scas
inc
xchg
test
inc
and
stc
xchg
fcoml
loope
push
das
jle
xchg
iret
mov
arpl
push
mov
jp
cwtl
in
test
push
push
scas
les
mov
xor
xchg
mov
jmp
xchg
fcmovnbe
or
push
add
dec
leave
imul
pop
pop
int
sbb
daa
test
insb
stc
mov
mov
ljmp
inc
push
push
bound
mov
push
outsb
mov
pop
jmp
in
jl
movsl
jmp
push
add
mov
stos
cmp
xchg
imull
mov
cltd
insl
push
mov
push
pop
inc
sub
add
jne
lcall
mov
sbb
ds
dec
repz
inc
lcall
jp
mov
in
imul
leave
jne
cmp
xor
repz
sbb
lcall
or
or
cmpsb
sbb
pushf
sbb
cmp
dec
mov
xchg
push
jg
movsb
call
lcall
popf
out
mov
aam
ja
in
repz
mov
repnz
mov
adc
pop
scas
mov
xor
push
and
es
dec
or
mov
mov
insl
add
repnz
jl
xlat
mov
xchg
mov
cmp
push
cmp
add
pop
rcl
aad
js
inc
cmp
push
nop
or
jb
pop
jb
and
jp
out
mov
cmpl
and
push
ret
test
xchg
jge
pavgw
mov
push
dec
add
sbb
push
or
addb
lret
subl
mov
icebp
dec
sub
shlb
ret
jns
out
or
jg
xor
jmp
in
mov
mov
jns
add
sub
mov
inc
inc
cmp
loopne
push
in
mov
gs
xor
mov
jmp
std
jnp
xchg
xchg
mulb
into
lret
inc
or
lds
sti
mov
fdivr
jmp
xchg
and
xor
xchg
xor
subb
dec
mov
fstpl
bound
lahf
dec
mov
push
je
out
addr16
fwait
adc
inc
cld
ljmp
mov
pop
int3
jno
mov
mov
rcl
dec
jno
jnp
xchg
cmpsb
add
push
or
mov
sub
adc
xchg
aad
dec
mov
out
inc
loopne
sbb
sub
jecxz
push
fidivl
movsl
mov
iret
dec
mov
sbb
add
rcll
xchg
int
cmpsl
inc
sub
lret
pop
popa
leave
mov
xchg
sarl
js
pop
xchg
js
sub
add
xchg
arpl
lcall
rcll
xor
daa
jmp
and
mov
push
insl
jmp
je
xchg
pop
xor
cmpsb
jmp
loopne
outsb
in
mov
lds
cs
push
mov
cwtl
out
jae
inc
mov
adc
fwait
je
cli
les
int
stc
and
jmp
out
inc
stos
fsubrs
aas
rcl
or
shrb
lods
fs
ss
rorb
mov
scas
stc
jno
sbb
push
aas
mov
pop
mov
sbb
adc
push
adc
mov
fcmovb
iret
repnz
dec
cmp
iret
jecxz
adc
cmp
nop
les
sbb
pop
fs
mov
ss
lret
adc
scas
movsl
push
mov
insl
sbb
leave
jbe
dec
mov
cmp
out
je
fpatan
cs
mov
sbb
push
xor
js
ja
adc
and
daa
xor
arpl
dec
jle
outsl
lcall
mov
xor
mov
stos
fldt
fdivrl
push
adc
adc
flds
fadds
je
adc
lcall
inc
cmp
xchg
push
sub
xor
out
sbb
sub
jl
or
cmovns
or
push
out
out
cmovns
cmp
xchg
inc
lea
insb
dec
cmpsb
not
inc
mov
pop
or
lods
jne
pop
lock
mov
mov
ret
aaa
lock
pop
push
xchg
lds
or
jae
adc
push
inc
mov
or
mov
mov
cmc
mov
in
cmp
push
mov
lea
in
shll
jns
aad
shl
adc
xchg
xor
fcmovbe
dec
shlb
push
inc
or
test
test
xlat
leave
xor
cs
mov
lods
lds
bound
xchg
daa
jp
or
xchg
sahf
push
jmp
adc
mov
es
out
aaa
addr16
xor
mov
jae
icebp
aad
pop
push
inc
jle
xchg
cmp
cmp
adc
pop
sahf
cmp
out
sub
xor
cmc
xor
cmp
fcomps
and
pushf
imul
jp
push
fildl
xchg
jno
lods
jle
cmp
mov
pop
lods
lcall
inc
je
jmp
mov
sub
cld
inc
test
popa
popa
imul
mov
fcom
xchg
push
add
shll
out
inc
jp
ds
icebp
add
inc
adcl
inc
addr16
mov
repnz
sub
inc
mov
scas
ret
ss
cmpsb
xchg
cli
mov
insl
mov
push
fisttpll
adc
xchg
imul
cmp
int
into
inc
sbbl
pop
or
adcb
add
cmpb
jge
xchg
dec
movsb
mov
aad
mov
or
mov
fildl
xorb
mov
push
mov
jge
xorl
or
ret
sub
jl
popf
in
lahf
xchg
int3
sub
jge
fs
nop
cwtl
dec
or
xchg
inc
pop
xchg
mov
jnp
xchg
popf
jb
and
and
test
jae
inc
dec
pop
pop
mov
arpl
jns
out
push
push
sub
aad
inc
nop
mov
arpl
sub
stos
test
sub
inc
pop
stos
sahf
in
call
out
mov
xor
add
mov
clc
test
insl
into
pop
shlb
dec
movsl
stc
setl
das
xchg
iret
decl
ret
bound
pop
xor
movsl
aad
aam
out
daa
test
add
xor
imul
sub
hlt
jns
jno
mov
push
mov
divb
pop
sub
sub
cld
dec
mov
daa
jae
push
lock
jmp
mov
push
push
sahf
mov
aam
push
cmp
cs
aas
dec
ret
push
jp
cld
xor
xchg
in
add
cmp
pop
cmp
mov
jb
loopne
add
and
popf
sub
lods
mov
or
inc
sbb
std
mov
push
notb
negl
mov
fistpll
push
dec
inc
add
adc
jno
or
fidivl
aas
pusha
and
mov
and
push
fldln2
arpl
pop
mov
pop
andb
js
lods
and
mov
stos
push
pop
inc
ja
mov
andl
or
ljmp
add
cmpsl
dec
mov
je
insb
xchg
push
cli
inc
lret
jbe
cmpsl
ja
adc
cli
icebp
test
jp
sti
push
pushf
cmpb
inc
dec
fcmovb
and
in
loope
jb
sbb
pushf
insb
ret
jo
sbb
sbb
mov
stos
and
shl
out
mov
cmc
push
lods
pop
sub
ljmp
ja
mov
cmp
in
ljmp
and
out
lcall
cmpsl
adc
and
popf
fistpll
ficomps
mov
mov
pop
leave
xor
push
and
mov
mov
xchg
pop
xchg
mov
pop
mov
pop
jbe
mov
jae
addb
cmp
xchg
pop
repz
mov
shll
aaa
inc
arpl
xchg
mov
mov
into
lock
into
imul
pushf
and
in
mov
cmp
sti
xlat
test
sbb
mov
divb
add
loope
dec
je
mov
jle
shrb
xchg
in
mov
ljmp
sub
rolb
mov
aaa
sub
insb
cli
sbb
inc
insb
push
call
mov
into
dec
jo
ja
sub
push
adc
cltd
scas
insl
pop
sub
and
adc
cmp
push
pop
std
std
fidivs
ds
std
adc
push
std
lret
cmp
call
adc
xchg
dec
fcmovb
fisubl
daa
mov
sub
or
iret
ror
je
push
xor
sbb
popa
mov
sub
cmc
add
jecxz
jns
cmp
pop
mov
js
outsb
jp
push
js
fstl
lret
ja
pop
and
out
jl
mov
das
cmc
fs
jg
scas
pushf
mov
mov
loope
mov
je
mov
mov
xchg
push
mov
jl
in
push
pusha
int
ret
and
mov
jmp
std
push
inc
sub
lods
cmp
aas
inc
imul
bswap
pusha
mov
and
movsl
fwait
jnp
fs
sub
outsl
into
jb
mov
sbb
mov
adc
mov
mov
sahf
loop
fs
push
std
jg
inc
mov
stc
jg
mov
mov
push
cltd
in
push
mov
movsb
test
jg
les
xchg
sbbl
jg
mov
out
mov
and
lcall
push
xor
cmp
es
mov
mov
sub
and
push
or
iret
or
xchg
loope
pop
scas
pop
xor
cs
aad
adc
stc
xchg
mov
int3
xchg
test
or
js
mov
xor
cmp
inc
das
cmp
jns
cltd
push
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
cmp
fdivrs
push
fimuls
push
shr
pop
jl
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
jb
cwtl
or
add
inc
mov
popf
rcll
push
lcall
adc
leave
in
js
jne
or
mov
call
in
push
push
testb
out
clc
dec
aaa
addr16
jl
push
fwait
push
pop
adc
mov
mov
fiaddl
mov
and
repnz
enter
lcall
je
std
popf
xchg
je
bound
pop
stc
cmpsb
ljmp
js
stc
xor
js
sbb
ret
pop
cmp
iret
sub
ror
mov
cmp
into
jno
call
push
adc
dec
jle
rcll
push
jb
jmp
pop
insl
xlat
ficompl
xor
cmp
inc
fbstp
es
mov
pop
lods
movsb
xor
mov
mov
and
pop
loop
fwait
jl
mov
lds
add
icebp
mov
mov
test
mov
add
les
jecxz
sub
mov
loop
push
outsl
idiv
nop
cwtl
adc
lods
push
dec
popa
test
lock
pop
jbe
cmp
testb
stc
iret
cmp
xchg
loopne
mov
pushl
cmc
aas
pop
xchg
pop
ss
adc
out
movsb
cmp
xchg
imul
pop
jb
mov
mov
into
xchg
jae
aaa
mov
mov
ja
andb
push
pusha
dec
mov
data16
loope
add
outsl
pop
cmpb
and
fisttpll
in
mov
out
rcr
xchg
shlb
stos
subb
js
sahf
dec
out
mov
test
adc
lock
jno
iret
push
mov
clc
fs
cmp
es
lds
int3
iret
aad
sub
and
pop
fldenv
daa
push
int3
ds
cltd
cmpsl
fnstsw
inc
add
idiv
jg
mulb
aas
outsb
add
add
and
mov
sbb
es
imul
dec
pop
negb
push
dec
mov
lret
push
push
call
pop
test
push
ja
aam
add
scas
mov
mov
std
loop
cli
mov
cmp
mov
jp
test
xorl
scas
mov
jmp
cld
push
mov
shll
hlt
hlt
shll
enter
mov
js
adcl
jl
xor
mov
out
cwtl
subb
cmp
jne
adc
xchg
mov
cmp
dec
jne
dec
stc
pop
rorb
or
iret
jge
dec
leave
jmp
addl
jns
test
sub
sbb
cmp
add
or
shl
mov
xchg
dec
mov
in
movsb
cli
add
shl
fisttpll
loop
mov
cmpsl
gs
decl
pop
pop
sub
jp
push
xchg
mov
ss
pop
cli
imul
fs
adc
xchg
push
cmp
inc
dec
stos
pop
faddl
mov
cld
imul
cmc
das
fsubrs
sbb
jb
outsl
test
adc
pushf
cmp
pop
xchg
add
popf
rcrb
mov
cltd
std
out
int3
jp
sahf
mov
out
push
jb
lods
sub
and
data16
or
aaa
or
nop
jle
jnp
stos
movsl
imul
sbb
rorl
push
mov
fsts
dec
cmp
inc
adc
mov
mov
nop
adcb
inc
addr16
cmp
outsl
and
testl
jae
cmp
and
push
stos
cli
bound
dec
loop
loope
mov
cs
mov
jns
sbb
mov
push
add
sbb
pop
std
jg
int
xchg
add
add
add
xchg
jmp
lahf
scas
lahf
test
xchg
adc
inc
dec
add
stos
in
and
mov
popa
imul
ja
xchg
jb
out
mov
mov
sub
pop
mov
add
imul
xor
cld
out
ret
mov
mov
or
cmp
lahf
push
idiv
push
mov
sbb
push
mov
mov
dec
pop
pop
scas
adc
repnz
push
pop
pop
int3
pop
imul
pop
jmp
in
test
dec
dec
inc
xor
mov
xor
sub
clc
sbb
and
jle
lea
pop
adc
sbbb
mov
push
pushf
xor
ja
inc
jns
mov
mov
cmp
out
dec
xchg
data16
cmp
sub
in
add
push
pop
out
outsl
adc
mov
popa
daa
sub
outsl
inc
das
lahf
cmp
and
data16
jnp
cltd
push
xor
pusha
cmp
cmp
xchg
cmpsb
pushf
movsl
roll
pusha
mov
dec
sbb
jne
lds
ljmp
popa
adc
stos
jp
mov
jae
scas
dec
mov
push
dec
mov
xchg
out
cmpsb
adc
lds
add
dec
gs
sub
ja
mov
or
sbb
cwtl
iret
das
jp
add
mov
sub
jmp
aam
fmuls
pop
test
xor
es
das
clc
or
test
out
call
xor
movsb
mov
mov
push
fimull
mov
das
imul
jge
push
call
sbb
sbb
es
sub
xchg
mov
negb
and
in
or
pusha
les
outsb
and
stos
add
add
mov
int
mov
out
push
stc
mov
add
add
add
add
inc
push
dec
pop
clc
pop
cmp
push
insb
inc
or
imul
jecxz
call
ljmp
xchg
adc
lods
fmul
push
and
sbb
push
xchg
adc
dec
inc
cmpsl
xor
or
push
les
and
add
cli
pop
test
std
sub
sbb
repnz
xchg
fmull
mov
or
fnsave
lret
ret
mov
inc
pusha
or
xlat
int3
dec
cmp
mov
ss
jl
in
in
sub
lahf
and
pop
pop
shrl
int3
in
mov
push
cmp
fdivrl
movsb
xchg
jno
pop
jecxz
jge
jmp
enter
and
dec
movsb
and
cs
frstpm(287
xchg
iret
div
orb
mov
pop
mov
fidivs
pushf
xlat
aaa
or
xor
dec
leave
scas
fidivl
iret
int3
add
xor
xchg
lret
popa
fistps
or
mov
out
sbb
aas
mov
push
ss
and
xchg
testb
add
pop
ffree
sti
push
pop
enter
hlt
in
xchg
sahf
hlt
pop
xlat
dec
mov
adc
mov
cltd
push
jmp
cmpsb
mov
and
popf
lds
neg
loope
sar
les
push
das
test
and
push
xchg
mov
add
mov
mov
push
push
jp
hlt
movsl
adc
mov
mov
enter
push
pop
adc
xlat
out
mov
jg
push
dec
daa
cs
aas
psubusb
repz
xor
jns
fbld
mov
sub
aaa
xchg
mov
and
lock
fdivrs
mov
sbb
or
cmovae
push
jecxz
les
jg
aas
inc
xchg
and
jbe
xor
cmp
pop
pop
mov
add
hlt
mov
std
jl
xor
jg
sarl
hlt
mov
add
add
add
pop
cmp
cmp
out
nop
fcmovb
repz
fs
mov
mov
add
out
stos
out
xchg
scas
je
dec
cmpsl
and
or
jge
cmp
mov
loope
sub
popf
xchg
loopne
dec
or
hlt
jl
sbb
fwait
out
mov
and
pop
jae
sti
jge
popf
bound
jbe
icebp
dec
mov
popl
mov
dec
fcoms
lods
push
inc
ret
popf
jns,pn
sub
and
cmp
out
test
ret
ret
jo
test
movsb
xor
dec
int
add
sub
aas
outsl
xchg
lea
add
push
xchg
jbe
adc
or
lods
pop
fcoml
inc
jb
stc
push
mov
adc
mov
dec
adc
mov
or
cwtl
dec
mov
inc
adc
test
aas
add
in
sbbb
cmpsl
cmp
add
mov
ret
and
xlat
in
fadds
cs
sub
fidivrs
cwtl
mov
jae
mov
push
push
lret
imul
pop
lods
mov
loop
sbb
scas
out
lahf
push
add
sub
and
rorb
xlat
sub
mov
mov
into
xchg
sbb
int3
in
js
lock
push
ret
test
xchg
adc
std
adc
std
cltd
jl
mov
inc
jmp
sub
xchg
cmp
and
lret
in
jnp
xchg
adc
jmp
mov
sahf
pushf
dec
inc
movsl
cli
imul
mov
out
xor
cwtl
inc
call
cmpsl
lds
cmp
push
mov
js
mov
sarb
sub
decl
std
mov
or
add
add
imul
fdivrl
xor
int
mov
add
add
add
jg
mov
push
xchg
rclb
out
dec
stos
jg
inc
push
data16
mov
ja
cltd
cmc
mov
dec
into
inc
jbe
push
push
fstp
pushf
fistl
arpl
cltd
sarl
sub
dec
out
sarb
lret
xchg
ja
cmp
mov
or
popa
adc
int3
rcl
data16
push
add
rcr
orl
negb
adc
mov
mov
mov
jns
int3
xchg
inc
popa
cmp
clc
inc
inc
shufps
sbb
push
roll
orl
mov
mov
mov
andl
inc
mov
divl
cmp
inc
aas
imul
inc
mov
pushf
jp
outsb
ret
out
add
icebp
and
push
inc
cwtl
sub
pop
xchg
loopne
fstpt
mov
xchg
and
and
ror
hlt
or
lret
sbb
jle
push
bound
mov
popa
jo
jb
sbb
lea
loopne
adc
jle
shr
addr16
fimull
scas
ret
lret
jmp
fs
mov
adcb
push
out
sub
xchg
cltd
jbe
push
in
push
popa
mov
shlb
ja
xlat
fstpl
push
icebp
cli
ja
leave
mov
into
in
fnstsw
mov
mov
hlt
sbb
out
imul
lcall
or
popf
pop
ficoms
fwait
and
mov
inc
or
fcomip
shll
or
sarl
push
rorb
std
ss
ss
jns
negb
mov
push
fs
btc
mov
jp
aas
pop
jge
sahf
and
in
adc
cmpsl
sbb
jg
pop
fstps
ljmp
add
jns
ds
jns
jp
lcall
lahf
lods
int
push
lea
and
repz
loop
and
arpl
push
pop
sub
mov
adc
sahf
ljmp
xor
pcmpeqw
test
ret
in
rol
ror
xor
leave
mov
or
addr16
popf
insl
push
xchg
fwait
lock
add
andb
mov
call
int3
out
adc
jle
data16
scas
aam
ret
popa
ret
push
pop
bound
jno
and
sub
lea
push
mov
xchg
mov
and
inc
sub
fwait
hlt
sbb
adc
mov
movsl
mov
push
lds
lcall
sbb
jnp
adc
cmpsl
pop
outsb
and
out
ret
xor
mov
popa
mov
mov
push
imul
pushl
inc
push
mov
es
cmpsl
gs
neg
xor
movsl
mov
idiv
and
push
mov
roll
adc
shlb
add
dec
cmc
or
mov
arpl
sahf
ja
bound
mov
fxch
lea
and
xchg
jne
sti
sahf
inc
jne
sahf
fwait
stos
mov
fbstp
stos
shlb
and
push
aam
bound
jle
mov
xor
sub
inc
imulb
xchg
pop
mov
sub
mov
mov
ret
push
lods
repnz
nop
imul
test
sti
mov
xchg
dec
mov
push
pop
jns
das
daa
stc
cmp
arpl
mov
add
rcr
notl
jo
popf
paddd
fidivl
in
push
sbb
sti
add
add
push
arpl
in
pop
fstpt
jecxz
push
sahf
in
orb
lahf
push
push
or
and
fldcw
inc
cmp
cld
iret
shr
inc
sbb
gs
push
popa
lcall
mov
fisubrl
scas
stc
mov
mov
xchg
inc
neg
loopne
inc
pop
mov
xor
dec
hlt
pop
jp
in
aas
dec
test
pop
stc
add
int
jecxz
sti
addr16
fwait
or
iret
cmc
dec
fldt
or
jmp
cmp
fcomip
lock
test
fdivl
fsubrl
xchg
ljmp
pop
popa
insl
xlat
xor
addr16
nop
roll
lahf
inc
in
push
push
jno
fcomi
pop
loope
mov
xor
hlt
jno
aad
test
jne
sar
adc
or
iret
sbb
or
adc
lcall
mov
std
xor
into
push
shll
repz
lahf
addr16
inc
imul
sbb
add
pop
push
in
imul
jns
push
jne
bound
fisubrl
pop
cmp
les
jg
pop
insb
mov
jno
cli
xchg
js
xabort
and
cmc
xor
insl
scas
jo
cli
sahf
jle
adc
adc
sub
jle
dec
stc
push
and
testb
jle
jmp
mov
lods
cmc
mov
xchg
push
pop
jne
mov
sub
add
clc
jmp
movsl
pop
push
ljmp
out
mov
mov
cmpsl
scas
js
pop
add
lods
arpl
pop
mov
int3
sbbl
pushf
in
add
aas
mov
jnp
dec
jecxz
out
daa
jecxz
mov
push
pop
xchg
lods
jne
fs
adc
js
add
pop
or
loop
stos
fsubs
push
jecxz
inc
out
jg
fstps
loop
rcll
add
and
movsb
lea
sub
negb
clc
and
loopne
add
sti
add
add
cmp
inc
and
inc
call
std
test
mov
sbb
sub
sbb
popf
xor
push
rclb
mov
fimull
loope
sbb
bound
out
mov
mov
add
mov
mov
and
cmp
cmp
int
mov
adc
jb
mov
mov
mov
lods
into
fwait
xchg
lds
cwtl
ret
sub
push
mov
loop
pop
cmp
adc
sbb
imul
das
fisubs
and
sub
mov
xor
punpckldq
or
jo
jb
xchg
pop
xchg
mov
test
ffree
ljmp
xor
dec
push
ljmp
and
ds
das
dec
dec
aad
xor
dec
in
ljmp
arpl
rcrb
mov
xlat
mov
lcall
mov
fisttpl
push
mov
pop
xchg
nop
in
mov
lret
test
add
cli
mov
jp
jno
imul
jp
les
lahf
mov
pop
lods
aas
movsl
cmp
ss
xchg
xor
jmp
mov
sub
ficompl
mov
test
lret
lret
cmp
mov
out
mov
stos
aaa
mov
sbb
jge
fildl
dec
fwait
out
jp
loopne
mov
ja
rolb
out
or
loope
leave
negb
jp
jns
xchg
jg
scas
inc
adc
sbb
loope
cltd
and
jg
jp
stos
jb
inc
ss
fimull
fisubl
sbb
jbe
arpl
xchg
decb
rorb
jle
flds
sub
in
subb
icebp
add
test
mov
jge
xchg
add
sti
add
add
mov
mov
ds
cmp
shrb
or
mov
ss
icebp
lahf
sub
push
filds
lret
push
sbb
ret
subb
data16
ss
pop
push
fs
adc
cmp
mov
push
jb
pop
outsb
sbb
adc
repnz
notl
adc
shrb
mov
imulb
mov
icebp
xchg
int
ret
sahf
mov
psubw
outsb
cs
jb
inc
inc
adc
push
sbb
pop
nop
push
lock
sbb
mov
shr
add
xchg
dec
xchg
push
push
sub
inc
push
mov
cltd
sarb
xchg
or
add
mov
mov
inc
lahf
pop
addl
test
hlt
pop
push
cltd
nop
jae
les
aaa
popa
je
cmp
pop
mov
or
inc
xchg
test
pop
int3
dec
jno
scas
or
ja
dec
es
inc
fistl
mov
les
mov
out
out
push
mov
call
xor
aad
mov
adc
jb
ror
or
xchg
mov
lret
clc
mov
pop
cs
adc
or
stos
dec
stc
dec
mov
inc
or
and
pop
in
or
add
pop
pop
mov
pop
addr16
or
popl
imul
ja
mov
popf
mov
lea
lock
sbb
outsb
enter
jp
adc
aad
pop
loopne
int3
xchg
bound
shl
lcall
std
mov
out
mov
jg
mov
push
xorl
jecxz
pushf
movsb
test
aad
xchg
push
ja
shll
mov
aad
js
jecxz
je
bound
fnsave
call
mov
popl
inc
cmp
mov
add
test
xchg
std
jg
mov
adc
sti
add
add
cs
mov
and
lock
movsl
inc
test
roll
xchg
and
cmp
jecxz
pusha
out
dec
es
sbb
call
mov
adc
lret
or
scas
or
mov
xchg
enter
insb
and
mov
cmc
in
cli
sbb
jae
lahf
jae
push
sub
in
cwtl
pop
jae
insb
lods
clc
push
sti
push
loope
jp
mov
and
jb
sbb
data16
shll
push
or
add
mov
push
inc
or
lret
mov
and
add
xchg
into
mov
sub
xor
mov
jbe
adc
lods
or
xchg
in
inc
fdivr
bound
dec
mov
fisubrl
sbb
xchg
push
push
shll
jae
mov
ret
cmp
inc
sub
inc
in
mov
movsb
ljmp
or
pushf
jge
loopne
unpckhps
stos
xchg
jb
or
daa
ljmp
mov
add
jmp
sbb
jae
push
inc
push
jecxz
mov
inc
mov
std
pushf
pop
xchg
mov
add
dec
lock
sahf
cmpsb
sub
lret
ret
add
push
ss
cmp
int3
adc
jmp
pop
fidivs
scas
sub
push
test
or
sub
bound
rcrb
mov
gs
mov
inc
imul
and
mov
scas
lock
push
jbe
push
popf
int
inc
clc
mov
push
push
adc
jo
add
in
inc
adc
mov
jle
pop
xchg
clc
fildl
and
outsb
scas
xchg
sahf
mov
cmc
mov
mov
idiv
iret
rorl
enter
rcrl
add
xor
jno
aas
test
arpl
aam
sub
int3
jbe
adc
adc
jo
xchg
lea
mov
add
popa
or
mov
push
push
add
pop
sub
lods
addr16
lret
sub
sbb
outsl
dec
in
add
imul
aam
sbb
js
mov
movl
enter
xor
es
cmc
add
jge
mov
test
sbb
mov
mov
in
and
nop
push
sbb
mov
lahf
xor
icebp
mov
dec
sbb
sbb
lock
repz
xor
ss
mov
pop
rcll
mov
xchg
xor
xor
adc
pop
mov
jmp
push
push
pushf
incl
stos
dec
sti
clc
sbb
mov
jge
cld
push
subl
rolb
nop
pop
cmpsb
insb
jb
ja
sbb
adc
mov
mov
mov
cmp
cmp
pop
es
cld
or
push
repnz
leave
popa
daa
loopne
std
push
adc
stos
add
cltd
test
mov
jmp
jns
out
cmpsb
jg
imul
mov
lea
imul
mov
push
pop
xchg
cmp
xor
xchg
test
insl
out
lods
mov
inc
sbb
push
repnz
fwait
rorl
imul
pusha
lret
sbb
inc
add
sub
xchg
push
push
lret
arpl
push
cmp
lcall
pop
mov
dec
ret
xchg
push
je
test
inc
int
adc
push
cmp
inc
pushw
adcl
xchg
xor
sti
outsl
mov
cli
add
ret
mov
ja
or
lcall
cmp
pop
cwtl
jbe
cwtl
iret
xchg
inc
sbb
jle
push
loope
das
and
push
lret
loope
xor
push
and
mov
cltd
jae
xor
or
sub
sbb
mov
and
popa
insl
cmpsl
jle
mov
ljmp
xchg
enter
dec
adc
js
push
ret
jmp
push
sbb
loope
aaa
xchg
or
ror
test
xor
and
adc
fisttpl
cld
enter
add
and
bound
xchg
pop
pop
cmp
dec
mov
pop
push
mov
aam
rcrb
sub
or
or
repz
insl
mov
dec
ret
cs
sub
aas
fimuls
into
inc
das
into
mull
cli
test
out
inc
inc
cmp
std
pop
dec
jno
and
movsb
push
in
loopne
cmp
sbbb
lahf
dec
dec
test
aaa
les
sub
shll
pop
stos
push
movsb
add
sbb
pop
inc
mov
adc
les
sub
xor
bound
aas
push
xchg
fs
adc
cmp
stc
cmp
cmp
mov
das
adc
repnz
sub
mov
fcmovne
mov
mov
mov
jge
cltd
dec
push
jmp
dec
jmp
dec
inc
mov
and
mov
cmp
and
inc
outsl
xor
push
adc
pop
dec
bound
repz
popa
or
cmp
int3
jg
push
cmpsl
xchg
cmc
and
imul
xlat
push
fdivs
cmpsb
mov
cmp
stos
mov
xchg
out
mov
dec
push
and
jae
push
cmp
mov
es
pop
cli
ret
cmp
into
jnp
enter
mov
inc
ret
inc
mov
adc
adc
pop
push
arpl
stc
loop
or
push
push
jle
xlat
lret
push
testl
pushf
add
sti
add
add
out
fidivrl
mov
mov
lahf
sbb
adc
cmp
call
cmpsl
stos
test
xchg
push
fbstp
mov
jno
rolb
jle
movsb
add
dec
imul
push
xchg
pop
sbb
lods
sbb
fildl
add
dec
std
leave
gs
popf
jno
pop
movsb
mov
test
inc
jp
cld
test
xor
int3
xor
xor
mov
es
icebp
mov
sub
fstpt
sub
pop
into
and
pusha
ja
mov
jmp
jno
adc
bound
cmp
sub
or
scas
mov
or
cmp
int
mov
dec
add
sbb
outsb
mov
inc
arpl
shrb
mov
adc
fwait
cs
adc
pop
push
in
test
adc
xchg
test
jle
xchg
and
inc
sub
sbb
cmpsb
loope
xor
les
dec
ret
mov
test
arpl
movsb
xor
aaa
test
mov
ds
sbb
inc
nop
call
push
insl
call
inc
seto
dec
fdiv
xchg
shrl
fstp
cmp
stc
push
xchg
fildll
adc
roll
pop
jge
or
scas
mov
out
pop
jne
push
cs
xchg
cs
xor
scas
test
aad
mov
adc
loopne
xchg
ret
adc
pop
push
or
cmp
aaa
fs
es
adc
std
cwtl
sub
inc
xlat
xchg
mov
mov
sbb
pop
pop
gs
rcrl
push
mov
and
lahf
into
sub
cwtl
movsb
mov
inc
cli
push
pop
jbe
out
pop
jne
loop
jp
aad
adc
or
pop
out
repz
fucomp
sti
pop
xchg
jl
sahf
add
sti
add
add
shlb
push
dec
ja
bound
jns
insb
frstor
dec
xlat
lahf
add
xchg
js
mov
and
icebp
fcmove
cmp
into
adcb
pop
push
cmpsb
ljmp
sub
mov
mov
mov
mul
pop
add
sub
lea
daa
cmpsl
mov
data16
cmp
jmp
xchg
cmp
inc
scas
into
sub
or
hlt
fmull
dec
sub
xor
sbb
mov
sbb
cli
es
inc
mov
stos
in
je
cmpsb
in
lods
mov
push
push
adc
pop
push
fmuls
sub
inc
out
jle
pop
gs
hlt
ss
test
into
into
jo
cmp
push
xchg
aaa
scas
scas
inc
push
pop
cs
cmp
adc
out
jl
push
sub
in
aaa
lret
mov
out
pop
mov
sub
push
loopne
sbb
pushf
dec
jl
cmp
iret
inc
sahf
cmpsb
sub
in
lret
movsl
mov
adc
lcall
push
sbb
repz
jnp
inc
jge
lcall
adc
sahf
lods
jne
inc
arpl
leave
push
mov
sbbl
sbb
pop
push
cmp
xlat
lret
jmp
jae
push
xchg
push
xchg
in
hlt
mov
add
push
icebp
es
xor
rorb
dec
sbbb
add
pop
repz
push
jle
xor
dec
push
sti
popa
mov
in
loope
ja
jmp
xor
cmp
pusha
sbb
cmp
mov
adc
imul
popf
cmpsb
cmp
jmp
mov
mov
shrb
jg
mov
push
movsl
mov
sti
adc
push
divb
es
pop
add
xchg
insl
mov
out
nop
sbb
push
out
inc
mov
add
add
adc
into
inc
mov
xchg
sbb
or
xchg
shlb
push
popf
ficoml
rclb
sub
mov
sbb
xchg
or
lret
or
mov
xor
fimull
out
add
mov
je
stos
lret
popa
les
lret
into
jbe
adc
out
aad
hlt
inc
scas
mov
push
adc
sub
jb
jp
leave
sahf
xlat
mov
fmull
dec
ss
in
xchg
push
inc
xor
sbb
sub
ret
add
mov
add
sbb
add
movsl
pop
test
fistpll
jecxz
mov
cmp
repz
ficoml
addl
jnp
sti
push
or
and
push
xchg
jmp
aas
xlat
fsubrs
mov
add
lcall
aam
push
je
adc
mov
mov
roll
gs
cwtl
in
in
hlt
sbb
mov
sbb
dec
pop
and
jno
xor
cmp
xchg
sbb
into
mov
sbb
fldenv
mov
cmp
mov
push
stos
inc
sub
adc
sub
loope
arpl
push
repnz
pop
add
mov
push
shrl
leave
add
es
pop
enter
lods
xor
mov
push
push
insb
iret
inc
inc
nop
sub
scas
inc
inc
mov
lret
push
jmp
sbb
divb
pop
dec
or
les
sbb
or
rorl
mov
cmpsl
pop
scas
jbe
out
inc
or
iret
nop
in
pop
in
add
ja
idiv
pop
out
cmp
adc
add
add
add
movsl
adc
imul
or
add
xlat
ds
pop
inc
and
xchg
lods
and
jae
add
out
loopne
das
add
mov
jns
mov
stos
shll
lret
push
sahf
xchg
fistpll
cmp
mov
pop
and
mov
clc
jecxz
ljmp
bound
cmp
movsb
lock
fdivs
lea
jl
mov
cmp
shrb
or
inc
adc
inc
xchg
or
push
push
outsb
fstpl
sbb
loop
jge
testb
push
adc
sahf
lock
aam
and
cmp
lahf
jle
mov
xsha256
cmpsb
xchg
mov
mov
add
or
xor
xlat
jbe
pop
sub
aaa
jp
arpl
or
xlat
and
leave
cmpsb
push
mov
pop
fnstsw
loopne
add
adc
pop
adc
lcall
test
add
sbb
mov
inc
in
leave
fstps
mov
shlb
test
add
fidivrl
je
insb
in
xor
sti
pop
shr
outsb
push
xchg
addr16
mov
in
insb
dec
ljmp
arpl
push
sbb
add
inc
mov
jno
push
aas
dec
mov
call
test
loop
cmc
cmp
push
jmp
or
scas
or
xor
cmpsl
je
mov
cmp
adc
test
inc
in
or
mov
dec
cmpl
pop
dec
jmp
mov
pop
notl
punpcklbw
loopne
cltd
jl
shrb
mov
cmp
shr
arpl
push
jmp
cmp
push
dec
dec
lock
ret
int3
lods
fcmovbe
stos
cmp
inc
inc
movzwl
mov
xlat
mov
mov
out
enter
ds
les
mov
pop
jecxz
sti
mov
inc
or
jge
mov
add
sti
add
add
cs
push
sbb
mov
nop
mov
imul
cmc
jg
mov
add
xchg
push
or
xchg
es
fs
hlt
stos
pop
ret
es
lcall
jmp
push
adc
inc
push
movsl
mov
push
add
dec
fcoml
les
data16
push
arpl
addl
nop
sarb
inc
pop
sub
inc
cmpsb
mov
out
and
push
adc
fidivrl
stc
pop
sbbb
xchg
outsb
pop
fidivl
std
in
inc
bound
push
lret
cmp
test
and
jb
add
mov
lret
push
aaa
lds
rcrb
es
icebp
xchg
nop
xor
popf
lods
xlat
stc
jbe
mov
fnstcw
inc
test
jle
fwait
lods
push
fnstsw
push
fiadds
mov
lcall
aam
roll
or
jno
fwait
xor
les
aad
js
ds
push
pop
pop
sahf
loope
pop
mov
jmp
or
mov
out
iret
in
arpl
ja
mov
bound
inc
shrb
inc
cmp
xchg
adc
ret
mov
push
add
pop
or
mov
dec
and
in
lods
in
js
mov
mov
xchg
insb
in
add
rcrb
sbb
and
xchg
mov
enter
cwtl
dec
adc
daa
lea
sub
gs
ljmp
stos
pop
pop
sarl
mov
addr16
js
inc
push
stc
and
push
arpl
sub
xchg
pop
mulb
push
sbb
imul
pop
daa
mov
arpl
sti
sbb
cmp
fisubrl
ret
scas
les
dec
sub
xor
sahf
xor
sub
cmpsb
add
sti
add
add
and
xor
adc
in
xor
cmc
aas
test
push
inc
loope
ffree
stos
loopne
inc
mov
fsts
repz
jnp
inc
mov
subb
xchg
pop
mov
ljmp
sahf
cmc
fadds
loop
lahf
inc
mov
shlb
sub
sarb
mov
fidivl
popf
and
xchg
mov
mov
lahf
shr
and
cmp
jmp
scas
inc
add
lock
and
jns
insl
push
xchg
push
jecxz
daa
push
or
aad
pop
fldenv
xor
mov
xor
out
sahf
mov
dec
pop
adc
ret
ss
mov
hlt
push
movsl
xlat
jnp
mov
jno
fstps
xchg
pop
xlat
int
aam
pop
and
adc
mov
je
adc
clc
jnp
mov
inc
mov
mov
stos
mov
pop
or
xor
pop
stos
pop
add
jo
stos
jbe
jge
outsl
mov
sbb
hlt
mov
in
leave
outsb
adc
ret
std
pop
insl
cmp
push
mov
idiv
mov
lahf
mov
mov
pusha
xchg
fxch
cld
setbe
sahf
jno
outsl
iret
popa
rcll
jnp
cmpsb
mov
aad
rorb
push
imul
sarl
sbb
mov
sub
or
dec
ret
popa
push
stos
movsl
les
dec
movl
pop
mov
mov
ret
fmul
add
in
std
in
push
mov
add
movsl
mov
jb
and
out
sub
jo
stc
and
in
loopne
divb
incb
sbb
outsl
inc
into
mov
jg
inc
cld
lds
mov
stc
std
in
mov
mov
std
cmp
int3
cmpsb
test
add
add
or
jg
out
arpl
sub
pop
movsw
out
sub
je
dec
cmp
lcall
xchg
cmpb
div
leave
cmp
dec
icebp
movsl
call
sbb
mov
mov
pop
and
test
mov
or
movsl
aam
loop
je
xlat
pusha
lcall
enter
loopne
lds
js
mov
incl
xor
cmp
out
mov
add
xchg
push
sbb
ss
push
mov
push
push
jb
sahf
idiv
pop
xor
enter
jle
dec
ret
inc
loop
dec
decl
mov
sub
jge
sbb
fucomp
mov
mov
sti
pop
test
jmp
int
sbb
out
jg
sbbb
sbb
cmp
jo
aas
data16
hlt
out
out
jecxz
xor
inc
fsub
sbb
pop
mov
sahf
adc
dec
cwtl
sbb
fwait
xchg
test
cmp
xchg
or
fldcw
mov
loop
repz
cmpsl
out
cld
inc
or
inc
in
and
gs
push
loop
xor
fisttpll
nop
push
sbb
inc
xchg
mov
mov
out
or
cltd
cmpsb
ret
lea
imul
inc
out
sbb
call
pop
inc
cltd
cmc
sub
mov
imul
out
aad
out
jb
or
icebp
mov
ret
bnd
das
aaa
cmp
pop
fcoms
add
cmp
cmpsb
add
xor
ffree
int3
pop
push
in
cmc
and
mov
dec
adc
aaa
jg
xor
stos
cwtl
aam
lret
psubsb
jp
mov
sbb
mov
pop
and
repnz
testb
inc
xor
stos
add
sti
add
add
div
xchg
inc
fs
mov
sbb
and
jg
mov
nop
push
pop
lods
jecxz
cli
pop
sbbb
add
pop
pop
cwtl
jne
dec
sbb
mov
add
fldenv
push
and
in
rorb
int3
and
lahf
fildl
decb
lret
cmpsl
sub
xor
je
and
fistps
fdiv
ss
bound
imul
or
mov
jnp
and
pop
push
mov
inc
and
loope
ljmp
sbb
xlat
sti
jne
insb
imul
imul
decb
outsl
orps
pop
addr16
mov
fisubl
sbb
lods
sbb
rol
lds
adc
std
lds
add
adc
pop
lcall
shrl
scas
lds
mov
inc
je
xor
inc
adc
sub
push
orb
pop
aaa
add
test
xchg
fiadds
lock
bound
sbb
xchg
ret
out
jmp
scas
repnz
call
sbb
cwtl
loopne
dec
add
sbb
les
xchg
aaa
iret
push
inc
xchg
fadds
pop
daa
lahf
push
push
and
inc
cmp
repnz
cmp
scas
mov
xchg
add
fcomi
inc
cmc
je
frstor
mov
stc
in
pop
add
popf
lea
out
ret
pop
and
fwait
repz
xor
push
inc
jp
popl
lea
scas
lods
cltd
lret
pop
mov
iret
das
jbe
in
into
pop
in
jmp
and
sbb
cmpsb
loop
inc
mov
stc
mov
stos
jmp
push
jo
and
ret
mov
add
add
popa
data16
gs
mov
xlat
daa
or
add
add
add
adc
xchg
sbb
fnstsw
cmp
xchg
xor
iret
jne
in
arpl
cmp
lahf
jecxz
in
stos
out
stos
mov
lods
cs
fadds
bound
xor
fsubrl
xchg
cmp
out
in
mov
mov
or
shl
in
push
in
sbb
push
xchg
lods
mov
mov
fs
dec
dec
dec
jp
insl
xor
lahf
mov
adc
adc
xchg
mov
mov
inc
push
nop
mov
mov
dec
or
shrb
js
jecxz
ret
xchg
xor
inc
or
fstps
gs
lds
mov
push
in
nop
add
jecxz
fistpl
jnp
dec
pop
lock
in
push
and
pop
jg
das
ficoml
in
xlat
add
jns
lret
js
cmp
dec
add
sbb
imulb
cmc
inc
and
jecxz
or
cld
aas
xchg
idiv
inc
dec
adc
push
movsb
lea
adc
cmp
adcl
gs
jl
notb
js
cmc
push
adc
xchg
leave
divb
push
push
movb
dec
roll
and
je
pusha
outsb
loope
sbb
shrb
insl
dec
cmp
jmp
sahf
cs
lock
dec
arpl
aam
lods
fidivl
mov
inc
popf
aam
lret
push
sub
adc
add
cli
sub
inc
enter
add
mov
stos
adc
gs
adc
add
xor
push
sbb
dec
dec
inc
xchg
rcrl
inc
cmp
add
inc
jbe
adc
test
movsb
test
bound
loope
jns
into
daa
repnz
aad
dec
and
in
push
xlat
mov
imul
add
add
cmp
cli
cmp
adc
mov
scas
add
sti
add
add
aas
pop
inc
lods
adc
sbb
aaa
cmp
inc
mov
fsubrl
mov
cmp
shl
hlt
sbb
cmp
pop
in
div
xchg
ds
ficoms
fdivrs
sahf
frstor
and
shrb
cmc
iret
arpl
xchg
das
jne
lea
fidivrs
icebp
add
sbb
jle
xchg
fsubl
movsb
mov
loopne
leave
xor
lahf
cli
mov
jle
int3
out
or
mov
movsl
test
mov
dec
test
jl
int3
popf
imul
movsl
out
and
addb
jne
pop
psubsw
adc
mulps
mov
push
jmp
mov
xchg
inc
inc
rclb
or
inc
shrb
decb
xor
mov
inc
adc
sbb
cmp
push
push
pop
adc
pop
or
addb
jae
or
add
push
or
popa
movsl
jge
jmp
movsl
les
xor
xor
mov
int
insl
jmp
adcb
ret
and
loope
jg
clc
pop
js
nop
mov
mov
int3
leave
jb
dec
incl
mov
fisttps
sahf
add
and
mov
sub
lahf
add
adc
push
cmp
mov
clc
lcall
inc
pop
push
cmpsb
mov
jp
pop
and
std
rcll
sub
stos
dec
push
outsb
push
mov
mov
cmp
push
sub
leave
mov
and
xor
cmp
xchg
mov
out
pop
lock
mov
movsb
mov
add
mov
orps
stos
inc
fcomps
shlb
xchg
lcall
cmp
pop
cmpsl
stc
outsl
xchg
mov
add
add
add
push
dec
lret
dec
lret
jbe
loope
test
mov
aad
xlat
mov
mov
mov
push
rclb
repz
add
rcrl
or
xchg
stos
and
inc
scas
add
jmp
sbb
outsb
sbbl
sbb
or
push
repz
int
js
jb
and
pop
bound
pusha
jo
repz
and
pop
lock
clc
sti
aaa
std
notl
int3
pushf
mov
daa
fdivrl
pop
fwait
pop
push
loopne
gs
shrl
xor
inc
lret
xchg
pop
xor
dec
imul
cltd
xchg
mov
cltd
xchg
addr16
add
sub
add
inc
add
shr
cli
push
jg
cli
fimull
mov
scas
jge
data16
sarb
cmp
mov
adc
push
lock
mul
sub
xor
in
cld
jne
ss
jno
repnz
push
insl
sbb
nop
jge
daa
lds
xlat
xchg
aas
mov
ds
mov
outsb
into
std
or
std
movsb
loopne
inc
xor
icebp
push
mov
lock
cmpsl
clc
insb
sub
mov
stos
sbbl
mov
lds
and
inc
jp
lret
xor
aad
xchg
fisubl
fidivrs
int3
out
mov
mov
sbb
scas
fstpt
outsl
lock
xor
imul
and
and
and
mov
fcoms
add
adc
loop
sbb
je
outsb
leave
adc
inc
inc
xor
fmull
movsl
push
mov
cmp
pushf
fisttpll
sub
mov
imul
push
movsl
ret
jg
out
shlb
das
push
mov
aam
ret
inc
cltd
mov
data16
cmpsl
add
nop
cld
jle
and
add
cmp
mov
in
outsb
fs
cmp
cltd
nop
mov
add
add
add
sbb
sbb
mov
lahf
jns
dec
dec
jno
fwait
addl
xor
mov
pop
int
sbbb
popf
cmp
movswl
incl
in
cmovno
iret
rcl
cmp
push
mov
ja
xchg
or
data16
fcomi
xor
dec
inc
lock
jl
enter
xchg
gs
cwtl
mov
call
add
jne
cmp
cpuid
cld
cmp
fdivrs
sbb
out
push
and
enter
pop
ss
cmc
cmp
add
add
jmp
pop
cs
repz
shlb
pop
cmp
insb
iret
test
icebp
test
add
jmp
daa
pop
loope
mov
aas
or
and
mov
mov
movb
int3
push
jns
shll
pop
jo
lret
push
inc
insl
out
sbb
sub
add
insl
insl
and
adc
xchg
lret
stos
xlat
mov
cmpsl
cmp
mov
mov
fsubs
mov
sub
js
sub
sarb
pushl
push
test
fisttpl
pusha
jns
jp
popa
daa
in
add
or
lret
push
add
mov
pusha
dec
jl
or
mov
les
pop
pop
aad
jno
cld
outsl
pop
cli
pop
mov
fldcw
xor
adc
xchg
and
es
ja
pop
loopne
xchg
into
mov
inc
jnp
sbb
int3
addr16
jg
movsb
adc
les
jne
jmp
mov
fisubrs
mov
loopne
mov
mov
cmp
fildl
stc
or
ret
dec
add
mov
mov
mov
sub
mov
add
add
inc
mov
jb
outsb
arpl
mov
add
add
add
xor
adc
inc
xor
test
and
inc
aas
loopne
xchg
lcall
orb
js
lock
fmull
pop
aaa
out
mov
mov
js
in
daa
mov
xor
ja
das
faddl
pop
sbb
pop
bound
add
mov
pop
lds
adc
fcmovb
clc
cmpsb
push
jo
imul
sub
ret
mov
inc
lea
mov
scas
inc
dec
cs
lock
push
loopne
js
lret
ja
push
adc
dec
cmpsl
jp
shl
cltd
or
or
xchg
testl
mov
mov
mov
push
and
pop
xchg
les
pop
dec
mov
lods
xchg
jo
or
push
outsb
dec
xor
cld
xchg
aam
push
insb
rcll
cmp
pop
sbb
pop
sub
sti
loope
pop
out
cmc
xchg
push
mov
stos
pop
sbb
cmp
out
push
loop
inc
sbb
xchg
sbb
lret
daa
out
xchg
sar
out
aam
lcall
jno
adc
testl
popf
xchg
dec
sahf
and
sub
mov
pop
adc
movsb
repnz
movsl
bound
adc
jno
lahf
icebp
test
mov
inc
lods
pop
add
sbb
cmp
std
xchg
mov
push
mov
or
test
mov
pop
jg
mov
mov
pop
test
cmp
dec
mov
insb
inc
xlat
shlb
lds
mov
cmp
xor
jg
sub
aas
das
pop
add
dec
adc
inc
xchg
xor
sbb
pop
mov
repnz
cmp
mov
push
mov
addb
add
add
mov
cmp
mov
in
mov
sti
add
add
adc
jecxz
lods
ljmp
sbbb
jge
loope
xor
sbb
je
mov
and
hlt
add
clc
cmpsl
dec
sub
int
scas
inc
enter
in
sahf
imul
negb
mov
iret
cmp
aam
and
aaa
imul
lock
inc
ret
jg
or
dec
lahf
push
dec
imul
dec
inc
icebp
mov
movsb
jno
mov
ret
in
cmp
add
mov
add
push
enter
loope
dec
jno
or
sub
xor
inc
jae
adc
lods
divl
inc
roll
out
stc
mov
iret
ljmp
test
in
push
xchg
loopne
fimuls
daa
icebp
inc
dec
ljmp
add
pop
jle
sbb
xorb
insb
xor
push
jp
test
insl
xchg
mov
add
scas
popf
push
lret
xchg
cwtl
dec
mov
scas
and
pop
stos
in
idivl
mov
xchg
scas
imul
push
jl
sub
adc
mov
mov
pop
adc
xor
xor
jne
xchg
scas
movsl
adc
in
in
cmp
lods
mov
nop
lods
cmp
outsb
es
jg
cmp
and
dec
pop
push
out
ret
push
mov
pop
divb
xor
jg
sub
cmpsb
xchg
jecxz
gs
out
mov
add
movsl
xchg
mov
sti
lods
in
and
shlb
mov
mov
daa
inc
test
ja
xchg
add
in
jnp
mov
sbb
jbe
or
rol
les
daa
and
es
cli
cli
lock
sub
or
push
addl
add
sbb
out
idivl
test
push
das
in
mov
add
sub
lret
mull
mov
sbbl
push
fs
mov
add
pusha
jnp
and
nop
inc
add
adc
cwtl
das
fisttpl
or
mov
pop
inc
in
sbb
divl
push
inc
pop
push
xchg
dec
push
pop
or
add
mov
aad
mov
mov
fstpl
mov
add
dec
xchg
movzbl
push
add
jb
jp
inc
xor
sub
mov
and
imul
cwtl
mov
or
loope
push
xchg
int
test
das
bound
cmp
push
cmp
mov
jge
lret
sub
pop
adc
xor
fnstsw
sub
cmpsl
cmp
dec
or
nop
mov
jae
int3
sub
inc
jecxz
cs
adc
xchg
mov
divb
das
cmc
loope
add
or
jns
mov
adcb
push
or
out
and
divb
sbb
add
cmc
jno
sbbb
xchg
xor
dec
insb
add
inc
btr
pushf
int3
push
addl
aaa
mov
dec
dec
mov
aaa
sub
or
daa
push
dec
lds
clc
dec
ja
sbb
scas
cmp
push
mov
xor
push
xor
inc
adc
sub
stos
xorb
pop
bound
mov
adc
movsl
inc
sub
andb
daa
mov
sub
or
addl
xchg
jbe
lds
mov
idiv
sahf
adc
sahf
jno
pop
jns
mov
adc
fdivs
mov
xor
add
dec
xor
pop
mov
add
sbb
fsin
out
fs
popf
outsb
cltd
mov
add
sti
add
add
pop
pusha
inc
enter
adc
jmp
sarb
inc
pushf
jnp
pop
mov
fadd
xlat
fwait
sub
jmp
xor
cmp
jnp
cwtl
shl
mov
and
mov
lds
jle
inc
pop
out
push
repnz
dec
xor
and
push
int
aaa
sub
dec
ret
into
fsts
cli
sbbl
mov
sbb
pop
sbb
shrl
push
push
and
mov
lods
pop
inc
sub
in
cld
addr16
jo
dec
popl
cmp
loopne
mov
sub
mov
ret
test
pop
jmp
movsb
sub
cmp
incb
xchg
jg
sub
ret
mov
mov
in
in
fstl
mov
cli
sub
xchg
imul
imul
subps
aas
mov
test
pop
pusha
add
mov
hlt
sbb
lret
pop
arpl
jbe
nop
pop
pop
out
xchg
mov
fwait
jl
dec
jp
mov
int3
jmp
push
push
lcall
xchg
sbb
sarl
adc
andl
sub
ret
pop
adcl
les
das
jb
add
add
rorb
gs
jns
and
inc
sub
lret
dec
shlb
xchg
mov
mov
mov
mov
or
std
cmp
sub
test
cmp
pavgw
ds
lret
add
scas
hlt
int3
addr16
into
mov
lahf
popf
ljmp
movsl
test
leave
xor
and
out
pop
sbbb
pop
stos
add
xor
push
add
fsubs
jmp
adc
jl
dec
dec
jne
cli
ljmp
add
xchg
call
jge
and
xchg
mov
adc
cmp
es
push
out
pop
push
sub
xchg
mov
ret
dec
dec
lcall
dec
fwait
sbb
aam
cmpsl
mov
hlt
out
pop
je
in
sbb
xlat
mov
test
sub
xor
cmp
out
inc
sarl
push
sub
into
push
ds
jp
stos
push
ljmp
movsb
cmpsl
mov
lcall
icebp
icebp
lock
inc
call
jg
inc
cmp
dec
add
cmp
push
pushf
jg
xor
shlb
por
stc
lds
leave
or
xchg
rcll
call
mov
scas
jbe
lods
pop
lea
test
or
into
add
sbb
mov
xchg
aas
push
and
push
aam
icebp
ret
fmuls
cs
fwait
test
test
xor
xchg
push
orl
bound
rclb
cmp
dec
mov
scas
mov
xchg
jo
hlt
mov
fwait
cli
xlat
xchg
mov
rclb
push
les
fwait
push
lret
ss
pop
loope
sub
in
push
mov
leave
mov
push
dec
pushf
or
and
pop
jb
clc
xchg
imul
xor
call
xor
jecxz
sub
imulb
mov
sub
fldenv
stos
xchg
mov
test
jecxz
cmp
push
sbb
das
xor
jl
pop
mov
iret
loopne
mov
stos
out
mov
lods
ds
mov
repnz
int
shl
ret
in
sbb
fbstp
sub
cmp
arpl
sti
cmp
push
dec
js
mov
fidivs
add
stc
std
fisttpl
and
pop
add
and
xor
sub
mov
add
sti
add
add
dec
shlb
pop
add
test
aas
in
jnp
popa
cli
fcmovnbe
pop
inc
mov
dec
cmc
xchg
pop
idivl
push
sbb
add
sarl
jno
ss
jmp
or
mov
lods
enter
inc
outsl
mov
mov
pop
andl
cmp
or
fnstsw
adc
testb
rcrl
dec
mov
fimuls
addr16
shll
iret
imul
xor
loop
cli
jae
jg
fnstcw
push
mov
pop
jno
and
adc
sbb
adc
cmp
push
cmpsl
lret
xor
sub
or
pop
or
popa
scas
lcall
gs
push
std
cmp
push
loop
aas
out
push
popf
clc
xchg
addr16
add
aaa
push
cwtl
inc
dec
lret
mov
push
mov
repnz
jbe
xor
and
shll
mov
stos
inc
int3
jmp
mov
mov
xchg
daa
sbb
inc
xchg
mov
leave
leave
je
xchg
add
sub
pop
or
std
adc
adcb
mov
or
cmc
arpl
sub
or
pop
pop
xor
sub
icebp
adc
sub
inc
sub
test
mov
mov
int
push
aaa
mov
out
ss
nop
dec
arpl
mov
mov
mov
cmp
pushf
xchg
aad
and
insb
js
or
adc
shlb
outsb
ss
leave
push
mov
in
fmul
arpl
leave
push
mov
push
mov
enter
fiadds
mov
mov
icebp
pusha
inc
add
push
jecxz
jg
data16
sbb
pop
adc
insl
rolb
sti
add
add
aad
in
mov
mov
aam
push
xchg
lret
cs
push
mov
cmp
sbb
add
rclb
sub
mov
and
cmpsb
dec
shll
jno
mul
repz
jmp
add
mov
push
lea
loop
pop
xchg
jmp
clc
mov
jmp
les
mov
mov
or
xchg
mov
or
rclb
jae
adc
mov
add
xchg
sub
outsl
fidivs
das
mov
rep
push
pop
pop
push
insl
or
push
xchg
lret
cmp
mov
adc
in
xor
lods
mov
xor
cmpsl
xor
dec
cmp
inc
xchg
lock
inc
es
hlt
mov
lds
xchg
mov
push
das
pop
div
jb
xchg
mov
test
mov
icebp
cmp
repz
cmp
out
inc
mov
loope
sti
jne
rol
mov
leave
int3
mov
lret
enter
fnstenv
dec
insb
popa
push
fsubp
out
lods
imul
adc
or
cmp
aad
scas
and
push
stc
hlt
int3
dec
outsl
lods
int
cli
jnp
stc
aas
rolb
imulb
mov
cltd
mov
sahf
mov
jl
cmp
fwait
mov
pusha
pop
adc
out
sub
movb
pop
jno
cmp
mov
aam
outsl
mov
xor
or
cmp
inc
jno,pt
adc
in
xor
addr16
jb
shrb
test
adc
sbb
and
stc
sub
jno
xchg
mov
pop
adc
out
out
mov
dec
jns
mov
push
xchg
mov
inc
push
pusha
jbe
out
test
stos
and
cmp
sti
add
add
imul
mov
sbb
cmpsl
jmp
shlb
dec
mov
jge
or
mov
xor
jns
ljmp
dec
sbb
icebp
push
dec
mov
cmc
jne
test
clc
add
jge
push
lcall
sbb
cwtl
sub
std
lods
push
mov
sarb
insl
sbb
mov
jne
test
jge
lods
and
mov
inc
mov
mov
mov
orl
mov
rcl
call
outsb
mov
sarl
fbld
shrl
out
dec
add
lret
jmp
add
into
out
in
push
adc
ret
cmp
mov
mov
jb
push
lcall
enter
sub
or
add
cmp
mov
adc
push
je
aad
in
shlb
mov
aas
jmp
and
fdivr
xlat
sar
inc
pusha
adc
mov
lds
inc
sahf
xchg
fldl
mov
add
lock
repz
add
jne
sahf
mov
cwtl
inc
ficoml
addr16
xchg
xor
sbb
sbb
mov
mov
das
cmpsl
mov
or
out
cs
lret
call
sub
scas
ret
or
xchg
and
stos
fidivl
sbb
scas
das
mov
add
or
jnp
ja
enter
bound
jnp
sti
xchg
sahf
stos
loopne
add
jge
movsl
stos
fisttps
xchg
sti
mov
mov
inc
popa
cmpb
xchg
adc
ljmp
fiadds
push
lret
in
cs
dec
inc
in
inc
xor
pushf
rcrl
push
sbb
rcrl
xchg
ja
enter
adc
add
pop
lcall
addr16
scas
lret
les
add
add
add
sub
inc
mov
sub
mov
imul
adc
ja
push
push
int
jle
sub
sti
pop
push
sbb
and
dec
int
cmp
adc
pop
sbb
stos
lods
sub
pop
sbb
stos
adc
push
mov
xchg
push
pop
loope
cli
xchg
jg
int3
lret
add
push
test
lahf
loopne
add
sub
ljmp
sub
add
push
imul
inc
cli
aad
cld
daa
and
push
xchg
fnstenv
or
sti
ss
push
nop
dec
sbb
out
ss
xor
test
leave
inc
shl
mov
decb
mov
cltd
jae
pop
dec
and
cwtl
cmp
ds
mov
scas
cli
xor
cmc
pop
test
repz
sbb
jo
imul
adc
das
arpl
or
ljmp
stc
xchg
jg
aas
xor
adc
imul
sbb
in
push
out
rcll
test
pusha
cli
and
lods
imulb
outsl
movsl
adc
sub
sbb
push
xchg
xchg
and
mov
pop
repnz
pop
sub
or
addr16
enter
mov
sti
push
jecxz
icebp
sbb
sbb
dec
pop
xchg
insb
fcos
ljmp
xchg
movsl
push
jns
pushf
and
scas
div
or
sbb
mov
std
insl
pop
pop
int3
lods
jg
xor
into
sti
repz
adc
sbb
push
std
sahf
ljmp
jle
or
std
aaa
out
clc
imulb
or
xchg
push
or
arpl
das
cmpsb
gs
cmpsb
movsb
cmpsl
int
scas
or
cld
push
xchg
add
arpl
cmp
leave
mov
mov
shl
flds
cmpsl
push
xchg
or
adc
aaa
leave
push
dec
insb
roll
add
add
outsl
daa
insl
push
addb
mov
add
sti
add
add
sub
jl
cli
jnp
fdivl
pop
sarl
jo
repz
flds
nop
adc
or
mov
testb
push
out
cmp
cmp
scas
ffree
inc
shll
sar
iret
test
jns
or
pop
hlt
cmp
fisubl
sub
mov
xchg
jb
in
push
movsb
sbb
dec
jno
ja
pop
jo
mov
mov
test
out
mov
pop
outsl
jb
and
mov
jmp
pop
pop
out
jecxz
lahf
movsl
mov
out
mov
push
jp
add
dec
cld
cmp
hlt
stos
and
sti
rcr
subb
mov
mov
xor
enter
cmp
cmpsl
push
call
jns
aaa
je
jae
inc
into
jmp
jbe
imul
push
imul
and
mov
push
les
adc
std
xchg
mov
xchg
mov
cmp
mov
cltd
inc
inc
push
or
inc
push
add
in
xchg
push
daa
in
adc
pop
cmp
cli
dec
cmp
xchg
mov
jge
add
push
adc
aam
push
jb
push
or
leave
popa
mov
xor
dec
jle
pop
push
push
lret
adc
test
sub
mov
dec
jmp
outsb
hlt
fmull
leave
cmc
jecxz
mov
lds
movsl
dec
dec
out
xchg
xor
or
lret
inc
in
lea
mov
or
cld
sbb
jne
push
adc
inc
test
inc
mov
aad
inc
iret
jecxz
out
cs
vlddqu
lods
sbb
ficomps
pop
lret
and
in
stos
das
xchg
dec
pop
sti
push
gs
scas
fildl
insb
lods
push
inc
xor
add
rol
mov
cld
sub
add
pop
and
mov
out
leave
enter
in
mov
add
add
add
pop
xorb
hlt
fmull
add
pop
and
leave
and
out
imul
xor
ss
xchg
or
adc
push
or
mov
lea
mov
testl
lods
push
mov
push
sub
jbe
sahf
pop
icebp
sub
xchg
mov
inc
movsl
lock
adc
pop
imul
mov
cmp
and
out
mov
jmp
add
jb
aaa
xchg
sti
lods
jmp
sbb
out
xchg
mov
es
jmp
inc
cwtl
out
inc
scas
dec
xlat
fistpll
ret
xor
sbb
jl
inc
sub
xchg
pcmpeqd
adc
int3
out
inc
push
cwtl
roll
push
popa
dec
dec
sub
sbb
cmc
add
cmpsb
lahf
cmp
or
xlat
inc
xor
movsl
xor
inc
int
addr16
push
xchg
imulb
mov
or
dec
mov
sbb
dec
das
cmpsb
dec
xor
fdivrl
fisubs
js
insb
jbe
cmp
lret
mov
lock
mov
aas
rcl
test
inc
out
adc
xchg
add
mov
js
sub
lods
pop
sub
add
dec
fmuls
roll
dec
in
sub
push
sbb
xchg
and
lret
xchg
in
push
popa
repz
cmc
in
or
jae
xchg
mov
jae
aas
dec
nop
hlt
inc
push
comiss
je
cmp
insl
leave
jb
jle
mov
sti
pop
loop
repz
mov
fs
push
sti
inc
adc
push
outsb
insb
mov
js
pop
jbe
int
cmp
shlb
jns
into
push
jae
push
adc
fldenv
lock
inc
mov
hlt
cmp
mov
jmp
lret
sti
add
add
aam
xor
push
jnp
ja
sarb
js
hlt
fmulp
pop
jo
xor
shl
mov
sbb
fcmovbe
or
or
pop
cltd
enter
dec
das
inc
stos
lods
lock
lea
test
cli
and
xor
adc
loop
aas
pusha
cmp
lock
mov
mov
dec
ret
dec
pop
inc
stc
enter
sub
add
stc
sarl
mov
mov
divl
movsl
add
in
sti
hlt
cmpsl
dec
pop
mov
outsl
jle
push
pop
mov
pop
dec
mov
inc
xor
xchg
sarl
push
jecxz
push
fadds
pop
jmp
fnstcw
mov
sub
push
push
jge
cmp
jg
out
out
mov
mov
cs
mov
mov
xchg
cli
jl
shrb
xor
jmp
mov
sub
or
dec
jg
clc
push
adc
test
mov
xchg
lret
shlb
pop
jecxz
pop
push
out
andb
punpckhdq
dec
adc
pop
testb
aas
out
push
mov
mov
roll
call
sub
lret
and
movsb
jns
jmp
cmpsl
and
sbb
dec
aas
sti
jne
jecxz
nop
cld
adc
pop
stc
stos
jmp
jno
gs
pop
sub
push
inc
jbe
out
outsb
mov
jge
or
sub
xor
in
adc
sub
cmpsb
and
das
pop
lds
cs
stc
cmpsb
aam
cwtl
inc
xchg
xor
push
adc
mov
mov
mov
dec
fsubrl
jne
loope
out
jmp
fmuls
icebp
xchg
sbb
rcrl
sub
pop
or
lahf
adc
cmc
aad
in
les
sbb
push
ds
outsb
sbb
aam
dec
xchg
in
int3
inc
dec
int3
add
sti
add
add
in
cmp
push
push
mul
and
mov
cmp
mov
jno
pop
and
cmp
pushf
test
mov
jmp
arpl
rolb
outsb
ss
mov
ud1
lods
jns
iret
int3
adc
inc
stos
arpl
mov
xchg
mov
and
sbb
sbb
cmpsb
arpl
dec
sub
adc
dec
mov
pop
scas
pusha
sub
in
push
jne
xor
lds
and
inc
adc
mov
pop
sub
and
jmp
cli
dec
dec
mov
and
push
aad
push
sub
and
cmp
mov
pop
out
int3
add
cmp
mov
push
pop
xor
movsb
cmc
sahf
into
inc
clc
jecxz
add
xchg
shl
movsl
and
cmp
lods
xor
inc
das
icebp
aam
jmp
xchg
adc
mov
notl
dec
cltd
int
inc
cli
cmp
test
cmc
cmc
imul
or
sbb
lret
outsl
jnp
xor
movsb
lret
or
pop
or
or
and
jnp
lods
mov
sbb
pop
insl
xchg
fstps
mov
pop
out
or
popa
sbb
lods
loop
dec
cmp
movhps
in
cmpsb
mov
lahf
xor
pop
lock
xor
xchg
xorl
imulb
lcall
pop
push
adc
imul
adc
mov
xchg
cmp
into
cli
bswap
push
mov
mov
inc
jle
xchg
hlt
lods
cld
gs
push
hlt
testb
lock
cmp
adc
or
and
sbb
mov
jo
lea
jne
push
mov
lods
mov
cmpsl
rcrb
mov
cmp
mov
add
mov
nop
cld
popf
test
sti
add
add
out
and
add
inc
mov
mov
pop
pop
xchg
retw
lcall
xchg
and
out
mov
pop
fs
dec
shr
clc
xchg
jae
xchg
movaps
push
mov
or
push
xor
and
mov
hlt
sbb
pop
jmp
cmp
cmpb
sbb
in
cmp
jb
imull
adc
gs
fwait
xlat
in
or
lret
lds
popf
movsl
insl
imulb
jno
lock
jno
insb
ja
insl
sbb
xchg
xor
into
or
mov
loop
lods
mov
fsubl
adc
data16
sahf
push
pusha
out
or
mov
and
lret
out
push
push
cmp
cmpl
mov
aam
fcmove
mov
sub
adc
inc
cmp
ja
mov
aaa
dec
inc
push
xlat
andb
mov
imul
cmp
xor
aas
xor
insl
imul
adc
loopne
pusha
fs
pop
push
pop
jp
xor
ljmp
mov
es
and
sbb
insb
ret
pop
lock
lods
xlat
mov
in
fidivl
pop
push
js
stos
push
inc
addb
xor
scas
sub
or
and
mov
pop
popa
push
leave
or
enter
idiv
ja
loopne
jb
mov
loop
popa
stos
nop
cltd
mov
sub
mov
out
jle
push
and
inc
loop
push
cmc
push
cli
pop
in
les
std
mov
out
and
inc
sbb
cmp
push
or
push
je
mov
mull
pop
ljmp
push
imul
frstor
movsb
jb
mov
out
roll
dec
inc
mov
in
dec
cmp
push
rcl
inc
rolb
add
add
add
inc
pop
jbe
imull
pushf
mov
cli
cmp
jnp
out
pop
inc
mov
push
jge
icebp
push
push
xor
outsb
out
jnp
jge
aam
pop
imul
mov
xchg
or
xor
pop
repnz
fidivs
jo
pop
push
ficoml
in
push
cmp
movsb
add
jmp
int
sti
fidivl
sub
mov
icebp
repz
cmp
mov
dec
pop
mov
mov
enter
fildll
pop
sub
cmp
jecxz
fistpll
adc
popa
out
lret
fldt
mov
pushf
xchg
xlat
cmp
mov
adc
out
pop
sbb
dec
loope
fwait
adc
inc
mov
popf
cmp
lock
sub
sub
jmp
mov
shrl
adc
push
inc
aaa
push
into
xlat
jmp
sbb
dec
test
xchg
xchg
jne
das
js
or
cli
mov
enter
cmp
in
or
and
push
ja
xor
adc
cmpsb
and
jne
insl
adc
push
mov
pusha
jge
or
and
cmp
les
lcall
push
cmpsl
and
mov
test
xlat
dec
pop
subl
ss
pop
fmull
outsb
push
mov
shll
jns
rorl
mov
mov
inc
fcoml
js
push
aaa
dec
les
out
inc
cmp
mov
xor
lds
out
mov
xor
mov
inc
pop
ds
gs
pop
adc
jne
fisubs
lock
jmp
aaa
fstpl
mov
stos
jo
dec
cli
fldcw
lods
xor
add
sti
add
add
cwtl
xchg
xorb
cmp
pop
imull
push
cmp
popa
insb
xorb
lock
aad
xchg
je
add
xchg
or
fwait
insl
mov
inc
xor
aam
fcomps
movsb
push
mov
nop
mov
or
jae
loopne
int
pop
insl
push
lods
xchg
mov
jp
loop
rorb
mov
jbe
xchg
lcall
lret
mov
cwtl
and
sub
dec
ja
sahf
sub
orb
mov
xor
in
ja
adcb
inc
ss
sbb
ja
movsl
cmpsl
xor
push
or
int
aam
cs
outsb
push
inc
pop
jnp
repnz
xchg
dec
sahf
push
jae
ljmp
push
xchg
dec
test
mov
inc
ret
xchg
jmp
inc
cmp
and
imul
jbe
int
xor
addl
jae
ficomps
xor
in
les
jge
inc
inc
test
fs
rcr
sbb
jb
scas
dec
xchg
int
mov
dec
mov
repnz
stc
fwait
push
movsl
xor
fsubl
cmpsl
scas
shl
filds
pushf
lds
ljmp
pop
adc
rol
sbb
addr16
cmp
jmp
mov
icebp
adc
dec
xchg
or
aam
mov
mov
outsb
fs
inc
cmp
das
pop
xor
xbegin
jg
inc
sub
lcall
sbb
sahf
das
test
xchg
pop
pop
insb
mov
mov
and
ljmp
xchg
lods
jl
cmp
outsl
cmpsb
adc
mov
push
stc
test
mov
hlt
imul
mov
loopne
xchg
jge
lret
addb
adc
add
stc
add
fadds
imul
testl
add
add
add
add
push
dec
pop
xchg
sub
scas
cmp
add
sti
add
add
xor
push
stos
dec
daa
enter
push
insb
jmp
mov
xor
and
cmpsl
xor
push
arpl
xor
jl
mov
repz
je
jecxz
mov
cwtl
and
stos
dec
xchg
pop
adc
out
das
cmc
imul
frstors
lret
push
dec
cmpsl
call
ljmp
cmp
xor
push
cmp
inc
dec
jg
cld
sub
xchg
repz
jne
ja
sub
icebp
add
adc
movsb
fldcw
inc
daa
and
inc
or
cmp
xchg
dec
mull
inc
mov
mov
shll
push
cmpsl
xor
movsl
adc
sbb
arpl
sbb
inc
sarb
mov
fidivl
lds
ret
mov
ret
insb
ret
cwtl
inc
dec
mov
push
jbe
test
sbb
es
mov
fmulp
aad
cmp
fidivs
fidivs
mov
out
popa
inc
pop
loop
dec
fs
mov
pusha
xchg
lahf
movsl
movsl
sub
cmpsl
ret
mov
stos
cs
dec
cmp
ret
push
fwait
dec
lods
imul
into
push
dec
jmp
jns
sbb
sarb
sub
adc
push
jmp
ljmp
inc
inc
ja
cmpsl
daa
adc
cmp
int3
outsl
fucomip
daa
jns
sub
pusha
add
insb
fcomps
mov
shl
mov
subb
leave
xchg
and
push
inc
mov
sbb
dec
bound
es
mov
sarl
lods
test
and
mov
xor
lds
ds
jns
sub
pusha
sub
gs
adc
mov
add
or
dec
mov
sub
sub
addr16
add
add
add
push
push
cltd
cld
mov
out
mov
xor
cld
scas
fsubp
in
imul
ds
ja
jecxz
mov
mov
shlb
daa
aas
sahf
daa
add
add
stos
xor
or
test
mov
fadd
scas
mov
mov
adc
das
mov
aaa
shl
test
cmp
mov
pop
sbb
adc
xchg
pushl
ds
test
cmp
cmp
mov
scas
push
pushf
repnz
cs
mov
xchg
sbb
pop
mov
outsb
arpl
out
jle
imull
xchg
or
incb
sub
pop
fsts
in
dec
fistpl
add
xor
pop
arpl
lock
fistpl
xchg
dec
inc
xchg
xchg
sub
notl
mov
pop
pop
lret
sub
jle
sub
mov
adc
mov
push
mov
push
jecxz
iret
inc
lea
adc
jg
ja
fbstp
jge
cli
xor
dec
and
and
jecxz
insl
inc
adc
mov
test
cltd
jl
lods
movnti
push
out
dec
je
xchg
and
lcall
pop
sub
je
jae
ret
cmc
test
sarl
push
fadd
dec
cmp
mov
fcoml
push
int
sub
jge
cmp
sub
ds
and
pusha
pop
lods
imul
insb
data16
lahf
icebp
cmp
add
mov
outsb
lret
lret
daa
daa
or
cmpsl
mov
sub
imul
int3
mov
fsubrs
orb
pop
cwtl
or
sbb
aam
and
inc
fwait
stos
jno
scas
inc
lcall
ret
and
dec
repz
fldt
xor
fadds
add
add
add
and
sahf
sbb
add
jns
loop
out
outsl
mov
inc
mov
mov
adc
mov
and
cmp
iret
ret
xor
xlat
add
ret
outsb
sub
add
cld
inc
pushf
and
jnp
popf
sub
mov
jmp
decl
fldcw
add
negb
cwtl
inc
xor
aam
cmp
push
insl
sub
mov
mov
aas
out
in
inc
push
hlt
sahf
aad
shll
lods
jecxz
sarb
movsb
fadd
dec
lock
sarl
enter
out
test
stos
addr16
xchg
frstor
sbb
mov
jae
and
cmc
sbb
pop
mov
loope
mov
enter
clc
push
and
lds
sahf
ja
pop
mov
push
mov
fsubr
pop
sub
jno
jns
sub
pop
sub
in
add
js
insl
xor
jo
sti
and
cld
add
jae
int
movsb
xor
and
popa
movl
xorb
ret
dec
jns
inc
pop
int
nop
jecxz
push
ja
scas
repnz
pop
dec
rcrl
in
pop
cmp
pop
lahf
lahf
arpl
jecxz
sarb
lahf
mov
push
outsl
mov
jne
in
and
fxch
push
sub
push
or
xchg
inc
push
inc
cltd
out
adc
dec
push
jle
outsl
mov
cmpsl
dec
xchg
mov
addr16
rorb
pop
inc
jg
mov
hlt
aam
push
mov
mov
jae
sbb
adc
sub
cs
pop
ss
cli
outsl
mov
out
shr
loop
dec
in
jb
inc
jl
sbb
cwtl
sub
add
in
repnz
add
add
lcall
sarl
std
dec
sub
add
sti
add
add
push
xchg
jno
dec
and
xor
inc
xchg
ds
pop
ss
xchg
test
cmp
loope
ja
mov
out
bound
test
js
iret
inc
nop
jecxz
addr16
inc
push
je
ret
mov
dec
adc
jl
jl
push
xchg
sti
iret
push
xchg
push
jo
sub
test
test
jecxz
mov
mov
jno
xchg
sarb
sbb
mov
cltd
push
test
aaa
xorb
inc
aaa
push
or
out
xchg
iret
shrb
jo
xor
xlat
pop
aad
push
mov
cmc
mov
add
notl
add
inc
popa
xor
add
icebp
stos
and
cmp
cmp
mov
ja
xchg
ja
enter
rsm
pop
dec
pop
push
aam
lret
xchg
add
xlat
jmp
call
fildl
int3
call
sub
pop
ror
popf
outsl
xor
mov
jle
push
xor
lds
xorb
mov
cmc
iret
cmpsl
divb
or
cmp
jo
inc
xor
xchg
leave
pop
filds
mov
cmp
out
jbe
and
sbb
mov
push
jo
pop
sbb
push
mov
sbb
cmpsb
pusha
pop
add
xor
push
mov
inc
mov
popf
shr
add
add
xchg
popf
test
dec
repnz
jb
rcrb
in
jg
lock
push
insb
pop
and
movsb
mov
out
jno
xor
in
mov
mov
push
xchg
fs
inc
out
aad
inc
fsincos
out
incb
movsb
mov
adc
or
jecxz
test
fbstp
jmp
push
lea
jg
test
cmp
push
movsl
inc
jecxz
loope
imul
mov
fsubrp
nop
aas
pushf
inc
outsb
or
add
idivl
jg
xor
aas
daa
faddl
add
add
add
lods
cmpsb
xchg
pop
mov
jbe
pop
mov
sti
in
mov
push
mov
popf
inc
push
mov
and
cmp
jb
jle
fidivrl
lds
inc
in
add
stos
add
sub
pop
cmp
sub
mov
add
js
mov
inc
std
xor
mov
aam
mov
decb
mov
cmp
lea
and
xchg
pop
xchg
or
jae
bound
jecxz
xchg
mov
mov
loopne
arpl
jns
lea
testb
repz
adc
cmp
dec
adc
mov
popa
popa
inc
adc
cmp
iret
sub
out
clc
std
repnz
inc
cmp
es
stos
cmp
testl
and
push
xor
cld
pop
std
pushf
ljmp
add
imul
adc
jne
sub
lods
sub
push
pushf
pop
pop
sti
int
mov
lods
pop
cld
mov
adc
out
mov
xchg
stc
adc
push
daa
movsb
test
sub
in
push
xor
sub
in
addr16
adc
fisttps
sbb
lods
sbb
pop
jl
jb
jne
hlt
sbb
sbb
lahf
sbb
push
inc
mov
addr16
arpl
cli
test
adc
pop
xchg
xlat
mov
inc
lret
add
sti
fcmovbe
ret
add
sar
inc
lea
cmp
aas
mov
imul
fldpi
xchg
mov
mov
pop
shlb
lret
dec
rolb
jmp
jb
mov
xor
outsl
push
dec
mov
insb
lods
scas
fwait
adc
or
cltd
test
dec
mov
mov
jg
insb
cmp
pop
pusha
dec
clc
sbbb
cmpsb
lock
mov
mov
cmpsl
add
jecxz
mov
lret
push
and
add
sti
add
add
insl
dec
cltd
push
pop
clc
movsb
xlat
push
cltd
push
pushf
fs
cli
mov
lret
push
dec
pop
dec
push
xor
xchg
xor
push
xchg
dec
sub
cmp
push
mov
or
mov
cmp
and
xchg
loopne
cltd
push
jo
pop
or
aam
ret
aaa
xchg
xchg
leave
mov
cld
jns
int
lock
push
xor
pop
loope
mov
imul
stos
aam
lcall
xlat
jmp
xchg
or
dec
xchg
jecxz
packssdw
jp
jbe
sub
hlt
mov
fwait
push
loope
movl
jecxz
sahf
mov
cmpsl
xchg
daa
int
fldenv
push
and
leave
fimull
popa
or
nop
add
dec
movsl
pop
ret
mov
dec
mov
lret
aaa
mov
sub
pop
int
add
cld
cmp
call
sbb
mov
mov
jl
iret
out
aam
jecxz
rolb
test
jns
fidivl
loope
leave
cli
ret
mov
xor
mov
lea
cmpsl
and
sbb
popl
pop
mov
xchg
daa
and
cmp
cmp
sbb
test
jl
or
pop
loopne
mov
mov
mov
movb
sub
pop
pop
test
pushf
push
sahf
inc
mov
decl
in
daa
mov
cltd
sahf
cs
mov
add
cs
shlb
push
mov
mov
idivb
inc
cmp
jp
push
mov
arpl
add
inc
mov
mov
add
pop
repnz
aam
xor
inc
lret
les
and
cmp
je
push
stc
cmp
mov
fcompl
or
cmc
sti
clc
addr16
add
add
mov
std
xlat
mov
cmc
and
insl
jne
mov
rcrl
inc
xchg
mov
cwtl
pop
inc
sahf
push
jno
jecxz
dec
iret
pushf
inc
aad
mov
das
imul
jl
pusha
stos
mov
xor
pop
dec
fwait
hlt
mov
sub
mov
inc
inc
in
sbbb
mov
pushf
push
sbb
push
ficoms
push
sbb
mov
ljmp
pusha
mov
xchg
pop
cld
ret
movb
jl
inc
xchg
in
fidivs
pop
rorb
jb
sahf
andb
test
out
sub
aaa
popf
aam
in
dec
mov
mov
insb
pop
arpl
cmp
cs
xor
jmp
iret
push
adc
iret
in
sbb
mov
cwtl
adc
push
pop
push
leave
cld
enter
fcmove
in
gs
add
sbb
or
xor
movsl
mov
ja
sbb
or
sbb
mov
add
jmp
pop
jno
out
fisubs
push
inc
add
cld
or
subl
mov
sar
pop
xlat
popa
xor
pop
stc
mov
std
inc
cld
inc
pop
mov
sub
sti
je
ljmp
ficompl
pop
subb
std
mov
cmpsl
xchg
lret
rcll
dec
lock
cmp
or
xchg
stos
jno
cmpsl
rcrl
test
les
in
js
inc
inc
imul
mov
adc
ret
xchg
movsl
out
cld
jge
pop
fisttpll
hlt
push
sarl
inc
icebp
gs
ds
jns
ss
adc
stos
jns
push
sahf
push
test
or
std
in
add
rcll
outsb
gs
jle
inc
jg
xor
inc
stos
pop
sbb
cli
inc
cli
mov
mov
jl
loop
add
add
add
out
cld
ret
divl
xchg
aam
push
cwtl
outsl
movsl
ljmp
jnp
mov
xchg
out
scas
xorb
movsb
js
lret
push
addl
mov
mov
mov
xchg
notb
outsb
mov
push
inc
jno
aas
scas
push
sbb
pop
mov
imul
mov
icebp
in
mov
mov
push
incl
lret
jg
mov
dec
pop
jp
into
cli
xor
fdivrs
mov
and
jg
lret
ljmp
jmp
pop
push
xchg
jnp
push
sub
jg
dec
nop
lods
or
sahf
inc
xchg
sub
icebp
fyl2x
cmp
and
lahf
push
addb
daa
or
sar
scas
jb
and
fadds
outsl
jl
aad
dec
jnp
cmp
mov
imull
xchg
sbbl
fists
mov
mov
out
clc
jg
jb
testl
lret
sub
mov
sbb
mov
mov
fcmovnbe
xor
sub
jge
xchg
aaa
ret
xchg
test
mov
mov
cmp
pop
ljmp
pop
je
add
lods
adc
fs
movsb
ja
xorb
leave
sub
fsubrs
fwait
pop
jnp
adc
mov
mov
outsb
inc
and
aas
pop
cmp
insl
pop
into
icebp
lret
cmp
sbb
push
mov
jbe
in
push
mov
ljmp
mov
cli
in
pop
jge
mov
test
sub
test
mov
sub
adc
lret
dec
mov
pop
jle
out
gs
leave
xor
dec
out
xor
sbb
insl
in
jns
push
fsts
and
mov
sub
sbb
adc
mov
cmp
add
add
ja
out
push
lahf
adc
in
add
add
add
inc
icebp
stos
sub
sbb
mov
sbb
xor
out
inc
xor
jecxz
nop
dec
push
std
fistpll
mov
cmp
mov
popa
sub
ds
ja
push
xchg
adc
pop
rorl
mov
popf
push
mov
inc
xor
mov
xchg
sbb
add
cli
lea
add
lcall
push
into
mov
popa
cmp
icebp
xchg
mov
sarl
cmp
ror
divb
les
inc
lea
dec
or
jnp
addr16
insb
xor
out
out
pop
lock
outsl
fstps
repz
clc
push
push
fcmove
into
inc
dec
popa
cld
and
and
dec
or
jae
mov
xchg
mov
mov
mov
lods
repz
in
add
scas
add
or
aam
add
out
testl
ficomps
mov
cmp
pop
js
lock
clc
jne
add
enter
and
xor
pop
fucomip
xchg
jae
test
stc
and
push
out
call
lahf
mov
push
repz
dec
mov
mov
jbe
add
sbbb
int3
or
out
xchg
mov
jns
xchg
cli
xor
or
fwait
adc
arpl
mov
jae
adc
xor
push
scas
sbb
test
sub
popf
push
cmp
cmp
sub
adc
inc
cmc
jns
sub
cmp
jl
lret
js
lock
cwtl
into
push
cmpb
mov
in
pop
ficoml
jp
insl
negb
and
push
mov
imul
clc
mov
jecxz
test
stc
das
mov
fcmovnu
ret
xor
cli
rcll
jmp
pop
or
sti
add
add
add
les
inc
ljmp
mov
daa
mov
adc
incb
movsb
movsb
mov
je
sbb
and
jp
push
mov
xchg
outsl
xchg
mov
movsl
aam
push
cli
and
or
pushf
scas
ret
inc
xor
and
adc
shl
cmp
mov
jl
out
push
roll
sub
xchg
out
adc
lahf
push
mov
psrlq
jo
divl
loop
lea
adc
aad
sahf
and
xchg
xchg
add
aaa
dec
lret
and
int3
in
mov
sbb
lcall
fcom
fdivs
loopne
xchg
cmpsl
roll
pop
fwait
xchg
or
mov
orl
mov
xchg
repz
mov
push
call
icebp
sbb
int
xchg
adc
mov
sahf
mov
dec
popf
popf
push
inc
xor
addr16
out
repnz
or
and
std
in
or
aad
mov
mov
push
inc
sbb
inc
js
subl
mov
daa
lcall
pop
mov
shll
shll
jecxz
mov
imul
sub
call
cld
call
xchg
xchg
es
mov
or
pushf
imul
sahf
inc
adc
xchg
xor
sub
aaa
leave
or
ja
cmp
test
outsl
imul
es
or
mov
xor
lea
popf
mov
insl
out
xor
or
lret
outsb
jne,pn
cmp
sbb
mov
incl
cmpsl
push
sub
bound
cmp
jnp
inc
rorb
pop
cli
loop
mov
fs
loope
int
xor
fs
inc
js
add
dec
add
stos
sub
insb
ds
add
add
negb
mov
cmp
je
call
add
das
pop
inc
mov
cs
inc
push
mov
test
cmp
out
ljmp
jns
ss
or
xor
mov
stos
sub
jg
int3
movntq
lods
repnz
pop
fsubr
rcr
mov
mov
dec
subb
push
loope
scas
xor
jecxz
dec
jae
in
rorl
cmp
rcl
add
lock
mov
jecxz
mov
jmp
fsubs
aas
les
int
push
aam
das
out
cli
xor
fidivl
outsl
imul
nop
cli
mov
inc
sti
js
mov
andb
mov
jne
xchg
sbb
jns
icebp
popa
jbe
stos
add
mov
or
jg
xor
ret
test
lds
flds
sbb
xor
dec
add
sbb
sub
arpl
jmp
and
stos
sti
loopne
mov
xchg
mov
out
pushfw
in
loop
fwait
cmp
repz
xchg
bound
int3
mov
lock
in
xchg
jle
jo
xchg
stos
aad
test
cmpsb
xchg
aas
adc
mov
daa
popa
push
push
std
cmp
mov
test
or
movsl
sbb
call
test
jp
jg
iret
aam
gs
ja
dec
jb
sub
inc
jp
fwait
js
loope
scas
out
je
or
scas
jl
iret
aaa
mov
loopne
push
imul
sbb
xchg
fwait
cwtl
stos
mov
push
mov
test
jecxz
mov
sti
adc
inc
mov
sub
ja
mov
daa
push
sub
mov
ror
mov
inc
pop
sbb
pop
xchg
and
sbb
add
sub
ja
jno
dec
outsl
push
push
sahf
add
add
sti
add
add
bound
js
icebp
cmpsb
in
or
cs
xchg
loop
mov
lcall
inc
ljmp
or
ja
sbbb
stos
mov
inc
dec
push
or
jno
jecxz
mov
cld
adc
cld
sahf
jbe
out
fs
mov
and
mov
bound
cmp
xor
xlat
push
and
lods
jcxz
add
inc
jle
jae
dec
xor
pop
arpl
dec
mov
adcb
imul
popa
adc
pop
lods
add
sub
inc
pop
push
adc
xor
ret
inc
jae
loopne
xchg
stc
sahf
clc
sbb
clc
fcoml
adcl
adc
enter
imul
mov
jae
jo
out
jnp
push
cmpsb
cmc
jnp
outsb
ljmp
in
mulb
arpl
stos
mov
sar
sub
decl
mov
lock
jl
fisttpl
test
lock
cmp
or
xchg
popa
jp
repnz
call
xor
mov
sbb
rorb
mov
clc
jl
es
xor
mov
mov
loop
fmul
sahf
inc
mov
push
adc
int
lea
xchg
addb
test
les
enter
cmp
jo
mov
fs
cmc
sahf
sbb
lret
cmp
push
dec
mov
sbbl
or
and
pushf
inc
sub
imul
jle
and
xchg
jge
push
xchg
push
clc
mov
add
push
test
push
xor
sbb
lret
aam
ds
sub
mov
ja
pop
xchg
mov
out
cmpsl
xchg
add
cltd
enter
mov
stc
popf
outsb
inc
pop
pop
jmp
add
add
add
jecxz
shrl
sub
jns
add
cs
mov
movsb
subb
cmp
xlat
cltd
and
nop
add
dec
js
push
push
movhps
mov
ja
sub
or
rcr
sub
lret
adc
jp
dec
mov
movsb
pop
fwait
xor
jbe
fnstsw
xchg
dec
stos
pop
cmp
mov
lds
stos
push
rcrb
pushf
aam
xchg
dec
leave
stos
movsl
jo
pushf
dec
adc
loop
xor
icebp
adc
and
sbb
or
sub
or
jl
leave
notl
lock
fistpl
jmp
cltd
mov
and
jnp
pop
cltd
fldt
in
testl
mov
jb
sar
or
push
movsb
pop
in
dec
aad
sbb
cwtl
push
jmp
cmp
sub
enter
push
notb
data16
frstor
jbe
mov
mov
mov
ljmp
mov
push
add
orl
arpl
xchg
jecxz
mov
sub
movsl
push
adc
cmpb
imul
or
sub
mov
mov
cld
sbb
xchg
jp
into
adc
popa
outsb
push
xchg
push
xlat
or
lret
fisttps
aaa
inc
daa
and
cmc
xchg
add
sti
cmpsl
pop
out
push
in
jge
mov
lds
addl
or
mov
call
push
sahf
cmovg
test
adc
jbe
or
into
outsb
mov
cmp
or
sbb
xchg
scas
sbb
push
imul
fldcw
jns
sbb
jge
and
dec
stos
lahf
jbe
cli
in
add
sti
add
add
mov
lods
or
fstp
cmp
jle
xchg
xrelease
les
bnd
ret
xchg
adc
sub
add
sti
test
mov
leave
cmpb
in
xlat
out
rcrl
jae
push
shll
sbb
loopne
fadd
mov
or
popa
cltd
call
iret
sub
push
sbb
push
mov
out
jmp
in
addb
outsl
mov
cmp
loopne
fcompl
ret
cld
push
pop
imull
and
pop
dec
loope
sarl
add
out
dec
xor
cmp
mov
inc
aam
add
stc
adc
out
test
and
push
aaa
mov
stos
aad
cmp
ds
icebp
inc
jg
xchg
rcll
inc
sbb
popf
in
push
out
call
cmpsl
lock
jg
mov
xchg
or
dec
test
jecxz
pop
rcrl
jns
jae
aam
xchg
mov
push
imul
push
xchg
pushf
jne
sarb
leave
scas
int
and
pop
inc
pop
mov
xchg
xchg
lea
add
inc
int
stos
loop
pop
ljmp
outsb
jnp,pn
push
push
cmp
fildll
cmp
outsl
pushf
leave
sub
inc
dec
fldt
test
push
not
lods
push
fstl
sbbb
loope
insb
and
insb
into
adc
push
push
mov
sub
nop
adc
or
outsl
call
cmc
sbb
test
pop
pop
mov
push
neg
jns
lock
cs
test
lret
fisubs
fidivs
push
ficomps
jns
test
aas
pop
out
sbb
mov
mov
xchg
fwait
cmp
call
into
lods
adc
mov
add
pop
add
inc
fcmovnb
fstpl
arpl
pop
pop
cmc
out
add
sti
add
add
cmp
loop
adc
push
inc
lds
push
stos
addr16
inc
lcall
gs
xlat
push
cs
fcmovne
cwtl
jp
jns
lcall
push
inc
mov
mov
outsl
cmpsb
xchg
stc
scas
inc
mov
sbb
push
bound
lcall
sbb
adc
sub
push
and
fwait
daa
or
sbb
mov
in
pusha
xor
mov
cld
subb
dec
out
int
popf
btc
in
sub
mov
in
sti
mov
in
mov
shr
flds
sub
rep
add
push
dec
cmp
nop
and
out
insl
sub
lock
add
or
mov
cltd
mov
adc
xor
jns
enter
cmp
imul
pop
add
mov
pop
repnz
and
adc
xchg
out
xchg
nop
sbb
lock
jmp
ss
movsl
cmpsl
jp
adc
dec
addr16
dec
scas
xor
mov
sbb
and
inc
mov
or
mov
mov
js
add
in
mov
imul
add
mov
or
or
adc
jae
or
cltd
icebp
jb
out
rorb
inc
movaps
push
push
adc
dec
sub
dec
dec
adc
add
ds
sub
call
jne
and
cmp
test
cmc
mov
scas
scas
shlb
mov
push
enter
mov
sub
mov
icebp
xorb
fdiv
cmp
pop
and
push
mov
call
xor
sub
adc
add
out
cwtl
mov
dec
fwait
jp
aad
mov
jecxz
outsl
aad
or
dec
cwtl
xchg
cli
or
push
xor
flds
sbb
pushf
cli
mov
xchg
out
cltd
fmuls
dec
lock
add
sti
add
add
cmc
fld
pop
ljmp
loopne
dec
fstps
gs
lret
out
mov
call
fldcw
xchg
popf
cmp
cmpsl
or
push
fidivrl
icebp
mov
out
sbb
int
add
add
xchg
int3
mov
repz
std
pop
and
jl
mov
xchg
mov
decl
mov
mov
outsb
rcrl
add
mov
pop
mov
subb
arpl
scas
mov
xchg
jp
xchg
divl
je
jecxz
push
stos
fildl
repnz
pop
add
mov
dec
addr16
xchg
cmpb
dec
out
test
pop
lahf
ljmp
lea
leave
mov
movsb
sub
cmp
sub
add
add
xchg
imul
into
mov
mov
ja
repnz
pop
sbb
scas
xchg
xor
jg
pop
or
lea
jmp
aas
call
push
xchg
xor
jb
inc
icebp
push
test
dec
movsb
cmp
stos
dec
loop
jns
subl
jg
adc
mov
call
rcrb
push
xchg
lcall
lock
sub
fwait
sub
out
xlat
psubsb
lret
sar
mov
shlb
xchg
xchg
hlt
and
xchg
adc
lock
inc
inc
adc
mov
orb
out
push
or
andb
mov
out
and
lea
scas
lret
mov
push
and
mov
sbb
notl
mov
pop
pop
xor
dec
fs
aas
in
sbb
push
cmpsl
mov
adc
and
rclb
lods
mov
add
adc
add
fisubl
and
into
cs
jmp
add
sti
add
add
xchg
mov
outsl
push
push
sbbb
or
lret
sub
lock
xchg
adc
add
adc
ret
arpl
cmc
loop
movsb
sub
add
sub
mov
divl
push
lcall
arpl
pop
daa
pop
pop
icebp
inc
pop
jge
in
testb
cmp
rorl
js
mov
cltd
aas
push
cs
and
dec
mov
negl
loopne
xorb
pop
test
enter
scas
outsl
mov
sub
mov
add
xor
xor
aad
inc
xor
es
mov
jnp
daa
cmp
sub
pushf
ret
jae
mull
cmp
push
and
cli
inc
in
inc
in
ja
jae
ljmp
scas
ret
and
mov
lods
jp
or
mov
jl
pop
fisubl
xor
lock
fcomps
sbb
jne
jno
xor
ja
out
adc
push
xchg
ret
xchg
xor
call
push
loopne
lahf
lret
popa
ljmp
sahf
sarl
jo
repz
jecxz
xchg
jge
addl
jge
jb
movsl
or
vpsrld
js
xor
lret
xorl
push
push
mov
mov
in
mov
shlb
xor
mov
insl
jmp
jle
fcoms
aam
push
or
cmp
pop
imul
inc
cli
mov
bound
idivb
roll
fidivrs
js
add
push
inc
into
add
jo
pusha
sbb
pop
mov
mov
jb
mov
cwtl
sbb
mov
scas
xchg
add
in
das
out
cmp
cs
jns
arpl
jecxz
pop
cs
orb
lea
data16
xor
fistps
add
iret
cmc
sti
pushf
and
push
pop
arpl
jo
cmc
add
sti
add
add
xor
iret
es
inc
dec
add
aaa
clc
outsb
sbb
repz
subl
pop
into
bound
sbb
orb
daa
hlt
in
ja
pop
out
adc
ds
aad
push
lods
aas
mov
mov
lock
push
negb
mov
and
mov
pop
push
int3
adc
psubw
mov
add
mov
pop
or
mov
lret
sub
and
in
fwait
stc
fnstenv
push
push
std
fdivs
insb
std
push
mov
adc
cmpsl
push
dec
adc
popf
pop
pop
or
add
nop
xchg
dec
adcb
mov
repnz
sbb
lea
sbb
inc
adc
test
nop
mov
jne
hlt
inc
cmp
cmp
in
aaa
rorl
pop
ds
out
cmp
jp
mov
in
mov
push
mov
pop
jge
in
mov
sti
lock
int3
jmp
pop
jae
mov
mov
mov
mov
mov
arpl
jo
mov
paddw
pop
fidivrl
push
pusha
push
xor
and
out
test
xor
cltd
sub
fstpl
cmp
cmc
fcoms
daa
mov
test
cli
mov
les
test
sbb
inc
mov
lods
adc
lods
fdiv
adc
aad
dec
jns
mov
popf
sub
arpl
ds
push
xlat
jb
shr
aas
lret
mov
pop
add
and
xchg
lods
test
sub
out
or
jmp
in
pop
sahf
das
stos
lods
pop
push
sbb
sbb
and
in
in
push
sub
test
dec
add
cmp
stc
jl
stc
jne
push
lcall
testl
add
inc
dec
jb
inc
movsl
insb
jae
or
adc
xchg
dec
dec
inc
test
cmp
ror
jmp
inc
sub
xorl
sub
outsl
loopw
sbb
mov
jmp
inc
mov
mov
jl
cmp
xchg
pop
icebp
jmp
lock
add
int3
loop
popa
aaa
mov
push
mov
lock
int3
dec
addr16
cmp
js
enter
popa
std
pop
pusha
pushf
es
cmp
inc
sub
add
xlat
mov
xchg
inc
dec
addr16
in
sbb
xorl
rorb
andl
cmp
fistps
fmuls
shlb
sub
xchg
enter
sbb
ss
cmc
jne
imul
int3
xchg
xor
jbe
add
mull
inc
loopne
push
dec
shr
pop
cmp
fsubs
mov
sub
adc
notb
aam
add
inc
fidivrl
inc
aam
insb
leave
rorl
scas
pop
and
xchg
adc
dec
sub
enter
dec
insl
lret
push
clc
in
jecxz
test
xchg
jg
jae
dec
jae
imul
xchg
sbb
rcrl
adc
add
push
aam
ja
push
xor
in
sbb
cmp
mov
and
dec
test
jb
lret
lcall
xor
popf
adc
cli
push
movsl
mov
mov
addl
ds
push
sbb
shll
dec
and
rclb
jo
lea
mov
inc
int3
adcb
and
adc
pop
or
loope
into
mov
leave
hlt
rclb
dec
inc
cs
cmp
add
sbb
add
cmp
test
fdivr
add
or
je
jp
sbb
sti
adc
