push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
aas
and
orl
subl
es
cmp
js,pn
je
in
jo
jo
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
int3
sti
fs
lret
scas
and
adc
add
and
mov
push
push
test
mov
leave
popf
call
xchg
cmc
int
daa
fimull
push
mov
mov
mov
ss
inc
xor
mov
push
stos
mov
mov
cmpsl
stos
bound
add
iret
sub
imul
fwait
test
lcall
out
inc
insb
loope
insl
and
enter
and
xchg
pop
or
aam
pop
mov
push
call
jns
sbb
bnd
inc
int3
repz
jle
jb
popa
das
cltd
ret
jg
sbb
mov
imul
scas
rcl
sub
jo
jae
dec
mov
mov
roll
jae
push
aaa
loopne
fdivrp
aas
add
andl
inc
jp
pusha
push
lods
mov
rolb
adc
filds
sub
fcomps
outsb
in
add
lods
jecxz
xchg
xchg
and
jecxz
mov
sub
jbe
lds
adc
cmp
je
jb
cmp
movsb
nop
orl
arpl
jp
bound
xor
loopne
sub
in
cwtl
or
cmpsb
adc
sub
popf
xor
roll
mov
pushf
je
xor
out
xor
pop
and
mov
subl
ret
and
scas
stc
inc
inc
rolb
in
sbb
fbstp
call
mov
sbb
push
xor
mov
mov
out
rcll
fcoml
jno
adc
cmp
out
cmp
sbb
in
lcall
das
test
sub
push
jns
mov
out
mov
out
outsl
jle
cmp
mov
out
or
mov
ret
popf
xchg
dec
mov
je
xor
or
add
xchg
sbb
test
inc
filds
mov
xchg
jns
mov
dec
sbb
addr16
sub
mov
xchg
aam
xor
cltd
arpl
push
xchg
subb
add
add
lret
out
cmp
mov
pop
shl
xchg
mov
pop
sub
mov
std
push
jmp
ds
sbb
mov
jle
dec
xor
loop
jns
das
cmpsl
jmp
push
outsl
mov
rep
hlt
test
pop
mov
enter
cmp
adc
das
lods
xchg
outsb
xrelease
ficoms
and
sahf
enter
subb
inc
cmpsb
mov
outsl
movsb
dec
or
popf
cmp
fwait
repz
aad
subb
mov
or
dec
cwtl
fisubrl
xlat
adc
inc
push
mov
call
in
pop
sar
jge
pop
fcomp
icebp
jg
mov
or
mov
inc
sub
push
pop
pop
cmp
or
sub
loop
cwtl
lods
add
push
sahf
xor
mov
popa
and
out
das
movsl
das
push
cmpsb
mov
repz
mov
mov
fcomps
mov
push
aas
cmpsl
cwtl
sarb
mov
pop
mov
xchg
sub
outsl
push
sub
push
push
les
inc
fucom
inc
dec
sbb
aaa
repnz
mov
pop
into
daa
mov
fucomp
lahf
subb
pusha
ljmp
inc
sub
pop
cmp
xchg
mov
dec
pop
ret
sub
in
pushf
scas
cs
pop
ret
je
inc
mov
repz
sbb
inc
mov
cwtl
push
pop
fidivs
mov
xchg
sub
xchg
sbb
test
loop
mov
out
aam
test
inc
or
mov
rorb
sahf
push
fdivl
subb
aam
jge
push
lret
inc
jne
movsl
add
in
call
aaa
mov
jno
stos
mov
lea
pop
cld
ds
dec
xchg
call
in
cmpsb
dec
out
mov
incl
cld
and
fcmovnb
orl
cmp
sub
sbb
jecxz
xor
aas
xor
cmp
pushf
aad
stos
mov
out
inc
dec
leave
push
or
add
movsb
lcall
daa
andl
or
inc
sbb
out
jne
jnp
or
pop
push
imul
repz
int
cmp
loopne
and
test
fwait
mov
test
jl
sbb
out
jno
pop
mov
js
xchg
out
sub
xchg
inc
aaa
add
inc
add
add
insb
les
mov
cmp
jp
inc
push
dec
test
aaa
cmp
shl
push
test
idivb
ss
cs
sahf
cmpl
cli
js
enter
int
lret
gs
es
mov
or
push
test
sub
cmp
mov
sar
cmc
mov
test
pushf
mov
xchg
enter
out
xchg
add
sbb
push
push
rorl
adc
arpl
adc
mov
jle
push
inc
aad
pop
lcall
test
in
popa
call
add
jg
or
xlat
rcrb
repnz
imul
mov
push
mov
mov
enter
pop
mov
cmp
mov
mov
jecxz
push
pop
push
sbbb
popa
out
adc
or
jp
pop
pop
pop
sub
not
inc
gs
mov
sbb
inc
adc
pop
movsl
pop
sub
leave
push
sub
push
jp
push
xchg
lahf
test
mov
imul
cmp
ss
cmpsb
popa
or
loopne
mov
xchg
mov
enter
or
push
mov
fildll
jnp
loop
xchg
in
cmp
int
jbe
shl
dec
add
ljmp
jmp
jl
test
leave
loop
pop
int
or
lcall
mov
fcom
push
loope
loop
fdivrl
ret
sub
aad
std
inc
and
mov
rcr
fdivrl
movsb
inc
inc
add
das
loop
mov
arpl
xchg
xlat
ret
test
xor
mov
popa
mov
test
and
mov
xor
rcll
mov
dec
data16
dec
jne
lret
les
dec
or
hlt
mov
mov
lcall
movsl
outsb
push
jecxz
ret
pushf
lret
mov
fwait
sub
fildl
push
push
pusha
ds
mov
scas
das
and
mov
xor
cmpl
loop
lret
jb
add
les
mov
arpl
push
div
cmp
jl
xor
sub
dec
out
add
outsb
mov
cwtl
inc
das
add
rol
lods
xchg
dec
push
stos
jo
jnp
mov
adc
scas
jg
inc
dec
mov
mov
popa
leave
pop
add
call
mov
push
js
sbb
push
fidivrs
pushf
imul
popl
jnp
mov
mov
popf
repz
inc
aad
mov
fldt
xchg
insl
in
push
push
xor
pop
cli
and
repz
ja,pt
stos
movsb
push
xchg
jnp
mov
jmp
add
xchg
and
cli
push
movsb
mov
xor
or
push
mov
sbb
or
repz
jno
mov
dec
lahf
or
pop
add
ret
inc
push
clc
stos
sub
adc
or
xchg
xchg
jne
mov
rorb
cli
pop
repz
mov
imul
test
cmp
dec
cmp
jmp
mov
incl
insb
adc
pop
cli
pop
jbe
ljmp
dec
sub
lea
and
push
cld
jle
cltd
test
fstpl
pushf
add
icebp
sub
xchg
cmp
xlat
xchg
pop
push
idivl
pushf
mov
mov
sarb
mov
std
inc
push
xor
push
mov
out
sar
push
ds
jecxz
mov
xchg
ss
sbb
add
repnz
ficoml
and
popa
xchg
in
in
xchg
xlat
insl
mov
jmp
dec
fdivl
imul
sub
rclb
add
mov
push
dec
and
or
inc
mov
adc
into
push
mov
rorb
out
or
push
push
in
nopl
adc
ljmp
mov
sub
mov
inc
cs
push
add
cmp
out
dec
sti
mov
andl
xlat
jl
push
jns
sbbl
push
dec
jmp
cmp
adc
test
jno
sbb
push
stos
rcll
xor
insb
xchg
cmp
xchg
add
adc
sbb
repz
and
mov
push
ljmp
adcl
ret
sbb
sub
addr16
icebp
cwtl
jg
dec
pushf
push
sbb
dec
loope
ret
js
push
cmp
sub
push
mov
xchg
add
mov
dec
enter
mov
dec
adc
sub
mov
ffreep
mov
rorl
scas
or
pop
out
push
jne
movsb
scas
adc
test
call
int
pop
or
add
sbb
cltd
add
inc
add
aaa
sbb
cmp
cmpsl
push
out
and
shlb
leave
or
aas
mov
inc
daa
sub
jae
cs
mov
inc
add
or
stos
push
aam
pop
aaa
mov
in
mov
xchg
mov
movzwl
outsl
dec
int
adc
pop
pop
lea
mov
xchg
ljmp
and
mov
pop
rclb
rclb
arpl
loope
cmc
mov
loope
mov
out
jns
xor
xchg
test
push
fcmovnb
or
jecxz
jg
push
aad
addr16
ffree
leave
insl
sub
jnp
ljmp
cltd
pop
cmpl
xchg
jnp
daa
mov
push
ficompl
outsl
mov
mov
sub
fmuls
mov
js
std
in
psubsb
add
stos
mov
enter
mov
daa
mov
sbb
jns
add
stos
movsb
or
fistpll
sub
call
test
jo
out
inc
out
mov
fstps
xor
push
push
insl
cmc
arpl
mov
test
lcall
xorl
lea
jbe
xor
jae
test
cmc
dec
mov
xchg
es
movd
dec
arpl
aad
cmpsb
dec
xchg
sub
mov
out
fstpl
cltd
mov
mov
add
jno
push
add
jnp
out
scas
pop
outsl
lahf
mov
sub
imul
dec
push
adc
cld
mov
cmp
popf
jecxz
fsubs
ret
xchg
ds
test
imul
jbe
inc
addb
idivb
stc
and
cmc
jmp
sar
enter
pusha
dec
addr16
jge
icebp
push
push
dec
adc
lcall
jp
std
and
xor
mov
das
pmulhw
push
inc
cmpsl
sbb
mov
xchg
es
pop
push
xchg
fidivrl
repz
insb
test
stc
into
jbe
int
cmp
xchg
mov
mov
adc
cmpsl
enter
dec
xchg
roll
rorb
decb
jg
push
lahf
popf
jnp
adc
imul
pop
adc
fiaddl
fstpl
push
sub
cmpsb
in
jmp
clc
mov
rclb
inc
inc
pop
pop
call
fbld
ficompl
mov
mov
int
xor
mov
dec
xchg
push
jne
stos
mov
or
jmp
into
and
test
sub
add
fnstcw
jle
jbe
iret
mov
fdivrl
mov
test
pushf
ja
push
dec
push
ds
cwtl
jns
ror
xor
bound
add
and
fisttpl
sbb
repnz
stos
nop
scas
adc
out
mov
jmp
sbb
mov
dec
sahf
adc
fs
xor
and
xchg
mov
sub
insb
xchg
sbb
int
inc
testb
je
shlb
or
mov
ret
clc
push
frstor
fldcw
roll
enter
stos
adc
push
fnstsw
aam
xor
pop
lods
sub
roll
dec
inc
out
dec
and
and
cmp
into
sub
adc
test
xor
lcall
jecxz
xor
test
lds
fdivr
jecxz
pop
imul
mov
dec
mov
mov
cmp
fldenv
loope
add
insb
dec
sbb
ret
add
jg
xor
jle
pushf
mov
sahf
push
movsb
jmp
sbb
add
outsb
xor
xor
and
jno
lods
mov
dec
lret
imul
pop
xor
xor
insb
ret
bnd
aam
pop
push
add
xchg
into
fbld
hlt
scas
arpl
lret
pop
shrb
pop
sbb
sbb
xchg
dec
mov
mull
nop
jmp
sbb
xor
inc
cmp
dec
push
inc
push
pusha
jbe
cs
daa
sti
cmp
mov
xlat
fs
loope
or
enter
and
or
and
popa
loope
dec
dec
sahf
lcall
xchg
pop
lret
fdivrl
mov
cli
push
adc
out
mov
cmpsl
mov
ret
inc
push
inc
aad
lock
bound
pop
xchg
in
aaa
aad
rcll
mov
insb
lods
mov
mov
mov
push
jmp
mov
dec
out
repnz
pop
je
push
inc
sub
xchg
mov
fsubs
movb
out
inc
pop
in
dec
add
sub
imul
rcl
adc
inc
xchg
inc
inc
jnp
shll
pop
lcall
dec
pop
test
mov
xor
nop
fdivrs
xchg
cmpsl
test
push
insb
xor
dec
or
das
cmp
sbb
cmp
pop
fidivs
insl
pop
pushf
cmc
orl
pushf
lock
loopne
sub
ja
enter
cld
mov
adc
pusha
cmp
jb
into
das
jo
imul
inc
lahf
adc
mov
adc
out
lock
push
lret
aam
sub
push
fidivs
clc
pop
cmp
into
aas
adc
imul
test
pop
ja
cmc
xchg
mov
in
ds
cmp
dec
inc
test
int
rep
xor
sub
xchg
jecxz
xchg
pavgb
fsubl
cli
cmpsl
dec
subl
loopne
scas
mov
lods
xor
scas
pop
dec
sub
push
pop
pushf
leave
lcall
mov
xchg
outsb
in
repnz
imul
jns
insl
cmp
cmpsl
jmp
scas
inc
push
testl
push
add
sbb
mov
inc
inc
pop
mov
sbb
push
fwait
scas
and
xchg
into
repnz
xchg
jp
cmp
pop
aad
pop
test
and
insb
push
decb
pop
loope
test
arpl
dec
into
and
cmp
scas
das
lods
fdivrs
frstor
fsubrs
jecxz
mov
jo
cmc
std
fs
xlat
dec
cmpsl
push
sarl
movsb
adc
xchg
sbb
mov
mov
push
cmc
cmpsl
cmp
mov
sub
mov
jns
inc
and
ljmp
mov
js
movsb
cmp
movsb
push
stos
pop
push
jle
out
ret
mov
data16
push
xchg
pop
jnp
cmc
adc
adcl
je
adc
adc
push
shlb
int3
jg
sub
cmp
in
nop
sub
sbb
call
clc
addr16
add
sbb
fs
stc
pop
mov
xor
push
sbb
test
push
jecxz
addr16
pop
and
aam
xchg
cmp
fwait
xchg
fsubrs
popa
mov
cmc
push
mov
aam
cs
pop
sbb
fldl
fldcw
rolb
jl
pusha
je
outsl
lds
aaa
pusha
cwtl
jno
mov
lcall
sbb
cld
int
pop
dec
xor
xchg
hlt
and
push
mov
int
push
fldl
cmp
or
fsubrs
push
out
addr16
xchg
ret
push
int
pop
mov
test
sahf
mov
sarb
das
mov
stos
mov
xchg
sub
notl
in
ja
ja
fstps
insb
into
jnp
or
sbb
out
stos
je
popf
dec
jp
addr16
dec
data16
jg
xchg
fistpl
jle
andb
dec
loop
adc
xchg
cmp
jb
pushl
push
push
push
imul
and
or
mov
push
pop
xchg
fcoml
mov
and
dec
sti
ds
imul
lret
stos
mov
sti
adc
stos
dec
sbb
and
add
push
arpl
mov
pop
xor
xor
js
inc
inc
dec
pop
scas
movsb
outsb
mov
inc
cmpsl
fnsave
mov
xorl
nop
sbb
xchg
loopne
clc
stos
fsubl
cmpsb
test
pop
cmp
loope
cmc
mov
add
lret
rcrl
into
push
stos
adc
aam
subb
add
cld
push
movsl
sub
xor
dec
icebp
xchg
out
mov
add
xor
dec
pop
jo
sbb
movsb
mov
adc
add
popa
sub
mov
or
in
jno
scas
bound
outsl
fimuls
mov
dec
push
lea
jno
outsb
or
xchg
pop
out
or
int3
inc
repnz
or
mov
pop
sahf
or
push
xor
cltd
jno
loopne
mov
cs
cmp
divl
xlat
sub
pop
lods
push
ffreep
insb
push
aam
pop
bound
decl
loop
das
cmpsl
cmp
jns
mov
inc
in
aas
fs
xor
stc
pop
inc
loop
inc
pop
push
jae
in
sar
imul
xchg
pminub
cwtl
add
pop
inc
cmp
jmp
push
pop
xor
sbb
add
sub
jne
loop
hlt
mov
lret
push
xor
stc
cs
cmp
xchg
xchg
dec
mov
inc
jl
cmp
das
pop
das
pop
test
push
cmp
in
sub
push
mov
jns
xor
mov
outsb
out
pushf
xchg
divb
pop
ffree
daa
pop
jae
cmpsb
mov
js
jl
mov
and
push
cmp
hlt
inc
adc
aaa
sub
jno
dec
or
pop
xor
sbb
rorl
cltd
push
rcrl
lahf
ret
into
jmp
xor
dec
clc
mov
push
lods
dec
push
jl
fldcw
out
xlat
test
out
jb
cli
lahf
and
adc
fwait
dec
xor
jmp
leave
dec
jg
pop
imul
imull
mov
pop
rclb
aas
dec
xor
js
nop
lock
sar
addr16
int
jge
add
add
sub
insl
rol
shl
nop
fcoml
xor
push
cmpsl
xor
cmc
rcl
adc
sub
sbb
rcrl
notb
aad
int3
mov
sbb
mov
out
js
or
xlat
or
ljmp
sbb
inc
test
loope
enter
push
dec
cwtl
loope
fsts
orl
sub
push
leave
mov
dec
dec
iret
sub
cmp
push
cmp
loop
and
cld
lcall
xor
inc
cmc
pop
gs
inc
mov
jle
cwtl
jns
rclb
pop
aad
push
fistpll
popa
mov
outsb
mov
cltd
mov
push
lods
mov
push
das
jl
push
nop
push
stos
push
aam
lods
inc
repz
sub
mov
jl
daa
out
pop
xchg
fs
cmc
int
mov
bound
mov
out
les
cmc
and
into
mov
test
fidivs
in
pop
sub
mov
xchg
or
cmp
jne
push
xchg
insb
mov
mov
andb
sub
cmpsl
mov
add
testb
mov
mov
out
hlt
xor
mov
arpl
sub
fwait
sbb
jae
xchg
jmp
mov
in
rep
cmp
mov
aad
mov
mov
pop
leave
fimull
in
jb
xchg
lret
jge
in
add
cli
push
fildll
push
adc
xlat
lcall
lds
and
fwait
or
movsb
fisubs
cmpsl
lret
xor
iret
cs
imul
imul
xor
or
iret
insl
add
ss
js
inc
push
mov
push
mov
lcall
sar
sbb
mov
adc
sbb
mov
add
insb
outsl
or
ss
roll
jbe
sub
sbb
and
rol
lahf
fsubs
mov
insb
dec
dec
leave
jo
test
int3
subb
das
int
xchg
pop
popa
dec
bound
push
inc
in
jmp
jo
sbb
lods
mov
and
daa
lcall
fidivrl
sbb
or
aam
pop
dec
test
popf
pop
mov
scas
addl
fwait
scas
mov
std
outsb
mov
and
stos
jne
loope
and
cmpsb
ret
mov
sti
push
sub
and
clc
push
stos
push
lahf
les
mov
lock
je
call
pop
data16
jnp
xchg
out
add
icebp
std
inc
testl
sbb
jp
push
loop
test
gs
ja
jae
pop
mov
ret
adc
mov
outsb
adcl
dec
pop
std
call
inc
out
pop
outsl
es
jne
arpl
scas
or
xchg
sub
push
mov
mov
in
mov
bound
cmpsb
lods
divb
push
test
jb
sub
sahf
mov
push
fisubl
mov
push
dec
push
xor
das
dec
repz
fucomi
cmpsb
jb
xchg
pop
push
ljmp
mov
xchg
and
mov
jne
add
shld
les
dec
lahf
in
sahf
sti
add
outsb
outsb
jg
cmpb
mul
jb
cmp
jne
lret
cli
mov
pop
push
lods
xchg
movsb
mov
cmp
gs
aaa
jnp
sub
lock
shll
ret
outsl
mov
xchg
mov
inc
jmp
clc
adc
iret
in
div
add
and
dec
imul
add
int3
in
jnp
pop
shll
cmpsb
bound
mov
add
insl
nop
xor
enter
jl
test
leave
adc
repz
ret
and
test
shll
xchg
dec
out
pusha
xchg
push
mov
daa
rol
mov
lods
inc
jo
scas
mov
pop
out
sub
push
mov
xorb
cld
nop
cmp
xor
xchg
adc
rorb
arpl
xor
and
insb
fwait
mov
shrb
pushl
pop
lds
pop
xor
pop
adc
sub
fbstp
imul
adc
outsb
insb
xor
adc
bound
cmp
jmp
data16
test
stos
leave
fildl
sbb
jae
pop
out
add
fcomp
and
xchg
pop
mov
fldcw
ds
hlt
push
dec
jmp
inc
inc
cmp
mov
hlt
inc
lcall
call
jle
adc
xlat
lahf
push
xchg
pushf
daa
shlb
jae
test
xchg
fs
aas
rol
or
dec
pop
xchg
pop
mov
hlt
popa
stos
popa
cmp
in
dec
mov
mov
ret
imul
inc
sbb
cmp
mov
dec
sarl
lret
dec
push
adc
stc
push
insb
adc
mov
pop
xchg
mov
test
or
sub
push
jns
std
cli
loop
and
lret
jmp
push
aas
and
xchg
add
cmc
cmp
sti
push
aam
repz
scas
fnstsw
push
outsb
ds
scas
lds
inc
test
sub
scas
xchg
in
mulb
adc
loopne
dec
popf
loopne
jns
adc
pop
mov
cli
mov
pop
clc
pop
stos
ret
inc
les
fistps
lret
data16
mov
jb
int3
pop
aad
adc
ljmp
jmp
ret
hlt
ret
out
cmp
mov
jecxz
leave
cmc
mov
outsl
xchg
aas
push
lea
movsb
xchg
cli
loope
xor
push
jne
fildll
push
shrl
maxps
adcb
sbb
enter
loopne
jo
mov
sbb
jecxz
adc
xor
mov
sti
sbb
in
xor
outsl
rcll
push
mov
mov
or
clc
popa
dec
cmp
cmp
inc
cld
insb
test
add
fldenv
cmp
push
lahf
pop
cmp
pop
pop
fbstp
xchg
fwait
cli
mov
pop
imul
mov
push
add
shlb
pop
mov
out
dec
add
push
pusha
imul
repz
shr
mov
pusha
and
pop
jecxz
daa
nop
or
enter
add
fcmovu
stos
push
xor
xor
push
call
cwtl
repnz
outsl
mov
xor
cmpsb
adc
cmp
jg
orb
add
sbbl
stos
and
mov
mov
incl
mov
fiadds
movsb
mov
aaa
mov
mov
jne
jge
ret
xor
int
xor
lock
fwait
mov
iret
popa
adc
fidivrs
jp
or
inc
in
lds
or
lea
out
out
test
mov
jb
movsb
lea
add
icebp
in
push
cmp
sbb
mov
movsl
inc
imul
in
lret
sbb
sbb
cmp
subl
push
insl
xor
arpl
sbb
adc
inc
xchg
xchg
lahf
es
mov
femms
dec
out
cmpl
pop
adc
mov
pop
int3
mov
scas
insl
mov
pop
sbb
add
push
mov
sahf
sti
jl
ret
mov
icebp
sub
sbb
in
add
dec
test
or
aad
pextrw
mov
scas
aaa
popa
mov
pushf
js
sub
push
add
repnz
push
or
mov
movsl
popf
inc
jmp
shll
xlat
jl
incl
outsl
sub
adc
sahf
and
adc
dec
jb
je
sbb
in
lds
mov
xchg
cmp
xchg
adc
inc
push
push
cmp
ss
sbb
popa
int3
pop
inc
outsl
dec
push
out
lret
or
jp
scas
ss
xlat
mov
test
pop
addr16
xchg
jb
dec
jle
data16
pop
fstpt
jbe
mov
dec
push
int3
or
cmp
mov
cmp
mov
sub
adc
and
push
ss
testl
rolb
lret
lahf
cs
push
ljmp
pop
das
mov
sbb
sub
pop
jle
adc
lahf
sub
xchg
mov
cmpsb
add
xchg
pop
fsts
push
xchg
scas
sbb
jne
mov
scas
adc
push
dec
push
loope
push
out
jo
imul
fwait
mov
mov
int3
popf
repz
jmp
inc
xchg
cltd
mov
xor
test
lock
nop
lods
mov
push
lea
daa
shl
clts
jg
pop
insb
fidivl
push
movsb
sbb
cld
sub
jmp
pop
jns
pcmpeqb
cmp
je
jp
mov
lret
add
insl
popa
mov
mov
stos
aaa
dec
pop
loopne
xchg
subl
icebp
incb
adc
inc
and
and
jno
cmp
inc
lret
out
dec
dec
inc
aaa
int3
sti
mov
jg
xor
stc
mov
push
xchg
je
or
in
mov
fiadds
mov
or
jp
mov
test
pop
push
out
ds
icebp
push
cmp
sub
test
int
ljmp
ljmp
sub
std
leave
lods
and
pusha
test
push
jno
test
mov
ret
mov
inc
push
sbb
gs
jae
add
lahf
popa
test
cmp
push
push
test
cwtl
xchg
and
dec
jo
mov
push
mov
lret
out
test
in
xchg
in
and
popa
jmp
adc
add
hlt
pop
mov
test
xlat
adc
jge
push
sub
mov
sub
push
add
sbb
xchg
shlb
scas
mov
das
cmp
test
inc
lret
negb
adc
psubb
out
cmpsb
sbb
cltd
mov
imul
cld
add
in
testb
inc
pop
mov
pusha
or
cmpsb
and
adc
sub
mov
dec
xchg
rorl
xchg
xchg
stos
imul
je
je
test
scas
inc
rol
sub
in
add
inc
inc
faddl
movb
frstor
aas
data16
popf
cmp
cmpsb
mov
cmp
or
xchg
mov
in
test
es
lods
test
fst
arpl
sbb
push
arpl
mov
ja
into
test
mov
mov
shll
mov
pusha
jecxz
pop
sub
xlat
xchg
out
add
cmp
das
or
add
int
jp
rcl
pop
cs
jmp
cmp
mov
in
testb
js
bound
lds
iret
dec
xchg
inc
popa
jb
pop
lret
mov
ret
out
mov
int
adc
test
and
pop
xchg
or
nop
mov
outsb
popf
cmp
push
js
jo
mov
ljmp
sub
ds
mov
ss
sub
cmp
pop
jg
and
movsb
cmp
js
aas
or
sarb
push
adc
sub
push
out
push
add
mov
mov
out
mov
xor
xchg
or
sbb
test
lret
call
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
xor
or
addl
in
jns
inc
fmull
dec
mov
xchg
daa
fistpl
add
scas
mov
jae
cmp
pushf
mov
or
mov
ja
inc
aam
lcall
in
ret
mov
fists
popa
mov
add
fsubrs
lret
or
jno
cld
jmp
and
insl
movsl
push
insl
outsb
mov
cltd
pop
and
or
mov
icebp
sbb
xchg
pushf
or
and
sub
cmp
dec
shr
popa
cmp
jp
add
mov
jbe
mov
jl
ret
faddl
cmp
mov
xor
push
in
ret
adc
sub
push
aad
in
rclb
and
aad
or
sub
jbe
dec
cmovp
xchg
imul
bound
in
mov
pop
adcb
aam
push
mov
test
xchg
dec
scas
lods
or
rorb
out
push
fldenv
je
pop
hlt
xchg
cmp
ljmp
push
aad
ret
sub
ret
inc
or
ret
test
iret
test
xor
sub
adc
lahf
es
jle
mov
fsubs
fdivs
cmp
aam
or
and
sbbl
jbe
adc
jmp
cmp
test
aam
xlat
sarb
lods
outsb
pop
mov
sbb
imul
xor
imul
int3
gs
xchg
test
sbb
dec
xor
insl
insb
in
movsl
jmp
das
or
adc
cmp
stc
insl
test
cwtl
pop
inc
mov
sub
test
lcall
jge
pop
push
iret
loop
or
sbb
lea
mov
lods
mov
inc
fwait
inc
cld
jo
xor
mov
sbb
aaa
pop
sub
cmp
fldt
jo
or
out
pop
sbbb
inc
ret
arpl
dec
mov
fwait
and
jne
stos
in
enter
jno
sub
jge
pop
sarl
das
arpl
icebp
jp
mov
cld
sbb
mov
or
xchg
push
add
ret
or
lock
xchg
mov
call
and
dec
mov
sub
lock
mov
sbb
pop
ds
and
cmp
push
mov
stos
push
jns
mov
mov
xchg
es
add
mov
cmpsb
xor
push
out
mov
jns
adc
out
push
inc
sub
ja
jne
test
out
insl
rcrb
add
push
sub
mov
cmc
jbe
mov
inc
sbb
push
xor
sub
xor
outsb
pop
xchg
pop
roll
xor
mov
pop
iret
pop
das
rcrl
mov
jne
in
pop
inc
adc
jl
push
add
add
cmp
xchg
movsl
push
aam
cli
fistl
or
cmc
xor
inc
and
jb
jle
cs
push
pop
xchg
adc
pop
xchg
xchg
push
les
in
and
mov
jno
inc
or
and
cmp
loopne
and
in
icebp
sbb
sbb
and
adc
mov
xor
jmp
xlat
dec
arpl
scas
roll
cli
cli
fildll
testl
add
imul
pop
enter
push
lret
jne
jg
cwtl
cli
inc
shrb
mov
xorb
jmp
jg
call
adc
arpl
push
pop
imul
leave
cs
fldl
add
adc
mov
cltd
inc
xor
mov
sbb
imul
xor
fs
sti
jbe
mov
fst
and
and
subl
mov
inc
fisttps
rorl
mov
lock
and
sbb
rcrl
outsl
fwait
adc
loopne
pushf
mov
xchg
mov
in
xor
add
dec
mov
loopne
enter
and
stos
xchg
or
mov
fs
in
adc
mov
sbb
mov
lods
fidivl
add
lret
int
fldl
push
inc
add
mov
std
xchg
arpl
out
es
aas
lcall
imul
and
fsub
test
sti
add
pop
rcrb
insb
inc
push
lock
dec
cld
loope
ja
lret
xor
push
mov
mov
int3
jp
sbb
fdivrl
ret
xor
aad
aad
jo
ret
add
bnd
xchg
mov
cmp
jmp
xchg
sbb
jnp
cmpsl
mov
xchg
push
out
ja
test
or
mov
mov
stc
fisttps
sub
dec
cmp
cli
ja
pop
insb
iret
xlat
xor
mov
and
aaa
popa
cmp
dec
add
popf
fimuls
popa
call
mov
dec
mov
inc
jmp
adc
imul
movsb
pop
mov
lret
or
mov
adc
inc
scas
pop
int
adc
or
lods
out
mov
aas
out
sub
or
cld
scas
push
lret
ret
cmpsl
and
mov
and
insl
out
jne
cmp
outsb
inc
jnp
inc
repz
sbb
pop
add
push
sub
call
sbb
out
scas
dec
adc
push
jl
mov
mov
rorl
std
sub
adcb
test
dec
xchg
fiaddl
and
xlat
mov
and
into
lahf
sub
arpl
pop
movsb
ficompl
adc
loopne
sti
repnz
sbb
rclb
les
jno
lret
dec
inc
lahf
cli
int
fbstp
lock
mov
dec
push
movsl
lret
fidivrl
pusha
xchg
lods
movsl
sub
sbbl
fadds
test
test
fldcw
dec
neg
jb
and
iret
xor
aam
jmp
pop
inc
iret
pop
dec
inc
push
adc
imul
repnz
fwait
test
jnp
fwait
lods
jmp
fld
insl
lods
or
cmp
ret
test
pop
ss
adc
shlb
jp
push
les
test
scas
lcall
ljmp
mov
dec
push
rcl
divl
pop
and
aaa
cmpl
sbb
or
xor
fistl
sbb
insb
xchg
mov
jge
add
or
mov
mov
push
jne
pop
xchg
arpl
jle
sbb
mov
inc
pop
mov
mov
pop
out
test
ljmp
cltd
ja
adc
and
cmp
js
inc
rcll
js
insb
and
hlt
out
and
mov
addr16
jle
mov
fimull
cmc
inc
pop
push
dec
mov
inc
pushf
ret
fsubrl
aad
sbb
movsb
jne
int3
add
test
or
lock
test
xchg
inc
push
inc
push
lds
or
mov
push
icebp
adc
popa
pop
aam
pop
add
enter
pop
push
sub
ss
add
mov
hlt
jno
ds
mov
ret
mov
movsl
mov
fs
testl
push
xchg
cmp
loope
fdivl
insb
outsl
push
js
sbb
iret
fmull
bound
jmp
bound
js
sbb
add
stos
xor
add
cmp
pop
adc
js
dec
adc
sbb
int3
cwtl
je
sub
jge
scas
and
jo
add
call
out
ficompl
sbb
push
popa
outsl
or
test
cmc
mov
xor
pop
rcll
addb
pop
cmpb
xchg
stos
sub
dec
loop
das
rcll
in
scas
mov
dec
xlat
add
adc
push
mov
and
ficoml
mov
mov
clc
jb
cmpl
insl
les
cmp
pop
gs
xor
testl
js
sub
es
sub
mov
xor
xchg
xacquire
adc
jp
pushf
mov
cmpsb
pop
rorl
push
aaa
mov
xchg
repnz
aad
pop
sbb
push
addr16
push
push
lahf
inc
aad
dec
mov
and
ret
ljmp
int
mov
or
outsb
add
xchg
pop
xlat
shll
aad
ss
and
jb
cwtl
cmp
push
mov
js
ljmp
jmp
xor
mov
in
cmc
pop
adc
dec
hlt
data16
adc
fwait
adc
jns
xchg
sbb
pop
out
sbb
adc
dec
push
mov
pop
gs
sub
lcall
dec
mov
sub
lahf
imul
ret
out
decl
sti
cmp
xchg
andb
cmp
add
jns
inc
or
ds
test
dec
sti
and
mov
mov
sti
cmp
js
pop
lock
daa
push
ficomps
pop
or
jle
mov
mov
in
push
loop
out
mov
dec
lea
mov
jge
sarb
sarl
negb
lds
dec
mov
and
push
loop
cmc
xchg
xor
fnsave
bound
fisubrl
mov
add
adc
jbe
sub
and
push
xchg
insl
adc
mov
faddl
mov
pushf
cmpsl
sbb
sbbl
push
test
shl
cmp
dec
and
xor
dec
fadds
lret
inc
mov
ror
jge
xor
xor
lret
sub
sub
pop
jmp
pusha
pushf
inc
dec
mov
call
imul
loope
mov
mov
mov
jecxz
sti
jecxz
movsl
leave
je
or
xchg
cmpb
popa
push
add
mov
inc
nop
shrb
xor
sarl
jmp
loopne
and
push
shlb
mov
xor
cli
mov
icebp
adc
in
sti
daa
jecxz
mov
aas
mov
shlb
and
das
or
lret
xchg
and
mov
add
pop
cwtl
pop
das
sbb
jle
sbb
ja
inc
lods
lods
jae
loope
sbb
daa
push
leave
xor
out
mov
test
push
pop
push
inc
orb
xor
cmp
adc
inc
pop
pop
call
arpl
enter
and
mov
int3
sub
sub
in
ret
mov
push
call
mov
xor
loope
out
mov
mov
pop
pop
add
test
mov
lret
fwait
aas
mov
loopne
or
inc
push
pop
sub
mov
enter
cmpsb
nop
test
and
mov
lods
cli
sub
repz
pop
popf
insl
popa
bound
xchg
sbb
rcl
inc
jne
inc
jmp
fsts
dec
mov
jbe
xchg
sub
jbe
sbb
out
popa
jnp
or
in
pushf
xchg
into
movsb
out
aaa
mov
loopne
jae
xlat
test
jbe
mov
jns
mov
insl
mov
xchg
mov
sbb
add
sahf
pop
inc
sahf
test
ret
xchg
inc
cmpsl
dec
dec
xor
imull
dec
lcall
lods
add
negb
add
mov
gs
pop
dec
ret
xlat
mov
scas
hlt
xor
into
test
xor
sahf
mov
int
stos
fcoml
test
pusha
sbb
xchg
push
adc
mov
or
inc
and
sub
outsl
popa
cmpb
popl
insb
lods
aam
ljmp
jl
xorl
enter
inc
shl
xor
and
mov
repz
mov
pop
mov
push
xchg
shlb
lcall
mov
xchg
andl
stos
test
std
mov
dec
sub
ret
int3
push
mov
cmp
aaa
xchg
xor
in
inc
inc
cmpsb
mov
lret
adcl
mull
pop
inc
imul
sbb
aam
or
into
pop
jae
mov
test
jl
fildll
fwait
adc
loop
sti
hlt
cltd
sbbl
std
pusha
mov
push
dec
add
cmpsb
in
cltd
push
sub
and
mov
call
stc
into
cs
xorl
cmp
inc
lods
sbb
leave
arpl
cmp
mov
call
stos
iret
jae
sahf
push
mov
ret
das
sub
mov
pavgb
cmpb
cmp
sbb
fcmovnb
sbb
into
pop
sub
jl
scas
fldl
mov
arpl
mov
lahf
outsl
inc
loope
add
sub
jbe
sbb
jmp
add
test
sti
push
and
adc
testb
jae
out
dec
int3
movsl
sti
das
fs
ljmp
movsb
mov
mov
scas
and
ss
mov
and
push
mov
inc
cmp
loope
rorl
je
sub
mov
lds
sub
mov
pop
lcall
and
aam
lds
cmp
xor
and
cmp
in
pop
lret
xchg
scas
and
cli
mov
sub
std
hlt
lahf
shll
insl
adcl
dec
dec
cltd
lods
iret
xor
testb
shr
sbb
std
pop
data16
jbe
dec
xor
subb
mov
or
movsl
mov
xorb
or
and
loop
insl
nop
idivl
les
aam
push
lret
lds
xor
scas
lret
push
push
in
aad
jno
xchg
mov
jle
inc
mov
jno
or
mull
fsubrl
sahf
sub
fwait
jle
or
cmp
mov
push
and
aam
int3
xchg
lcall
mov
ret
movsb
stc
sbb
pusha
into
scas
sub
xor
or
fwait
mov
scas
into
aam
lds
jmp
mov
aas
imul
mov
push
xchg
add
mov
insl
xchg
test
daa
lret
outsl
mov
int3
pop
mov
xor
fdivs
subb
cmc
add
outsb
loop
std
stc
rcrb
sub
xchg
jmp
mov
xchg
xchg
aam
mov
dec
dec
adc
test
jae
dec
cmpsl
sbb
cmp
jns
insb
jbe
popf
out
push
jge
dec
xorl
push
ret
mov
xor
mov
adc
frstor
cld
icebp
jp
inc
xchg
add
mov
aas
inc
fstl
adc
add
jae
in
push
jge
adc
mov
icebp
jnp
stos
enter
gs
loopne
scas
mov
sub
adc
fidivrl
inc
aam
stc
icebp
into
push
and
cmp
pop
mov
pop
pushl
mov
push
jl,pt
cmp
jp
ret
dec
push
jge
and
pop
jne
or
pop
cmp
pop
lock
inc
clc
push
mov
and
jg
out
mov
jbe
adc
popa
iret
inc
mov
stos
mov
cli
pop
rorl
je
mov
xchg
xchg
cltd
icebp
adc
add
dec
fcmovb
dec
inc
aam
leave
ss
jecxz
add
pop
data16
inc
push
inc
es
adc
enter
sahf
test
add
add
xchg
adc
scas
pop
and
loopne
fists
xor
and
loope
mov
cs
inc
clc
std
negb
dec
roll
stos
daa
push
subl
cmp
aam
flds
leave
fs
int3
or
xchg
insl
popf
add
ffreep
mov
inc
shlb
test
outsb
push
lret
cmc
in
js,pt
andl
mov
stc
sub
jnp
and
jp
xchg
jmp
dec
test
push
std
ljmp
insb
and
js
jle
inc
xor
push
movntq
pop
cmp
sti
mov
mov
enter
aas
xchg
rcrl
pop
loop
leave
test
sbb
iret
inc
xchg
shl
push
xlat
mov
push
call
addr16
inc
xchg
push
mov
mov
ret
clts
lock
xor
sub
mov
sub
enter
enter
cmp
cmc
imul
fsub
adc
sbb
in
pop
ljmp
mov
cmp
cmp
enter
mov
mov
movsb
lods
xor
ja
push
cli
popa
mov
cmpsb
and
idivl
notb
mov
sub
mov
popf
int
pusha
fadds
xor
or
xchg
xchg
xor
sub
pop
jno
mov
lcall
pop
rcr
insl
mov
sahf
loopne
cmp
cs
shrb
sub
push
fnstcw
xchg
cmp
negb
jno
int
and
jl
or
aam
je
das
mov
pop
adc
pop
out
and
sub
rclb
push
gs
leave
pop
lret
push
inc
xor
scas
sarb
aas
jne
mov
adc
xor
push
flds
mov
mov
push
and
popa
jp
cmp
xorb
ljmp
inc
call
test
jno
das
repnz
insl
xchg
sub
xlat
sub
imul
inc
pop
pusha
aaa
pop
push
or
push
pop
fsubr
das
jns
cs
dec
aas
imul
mov
fwait
or
repz
sbb
sub
pop
push
insb
shl
shrb
or
decb
insb
inc
adc
mov
jge
psadbw
insl
mov
cmp
cmpsb
lahf
mov
mov
adc
test
lock
pop
rorl
cmp
adc
cmp
fnstsw
add
push
in
rolb
fmuls
lret
scas
mov
fcomps
push
pop
out
fldt
jge
lock
fstpl
call
mov
jecxz
push
lds
imul
imull
hlt
mov
cmpsb
mov
adc
sti
dec
sbb
inc
jg
lock
hlt
data16
mov
fsubs
pop
repnz
push
add
jmp
leave
add
pusha
iret
push
fldcw
in
nop
shlb
test
fdivs
xor
dec
test
imul
push
xor
push
adc
mov
push
and
icebp
imul
inc
inc
dec
test
pop
or
outsb
enter
xor
sahf
push
in
iret
popa
dec
test
popf
rorb
sbb
adc
mov
push
es
aas
push
in
adc
mov
rolb
aaa
popf
scas
fldl
sbb
negb
pusha
xchg
xchg
xor
xor
jmp
mov
dec
stos
clc
xchg
jp
xor
lret
lcall
movsl
add
adc
int3
rol
push
leave
cli
std
mov
pop
xchg
inc
push
clc
shrl
je
mov
inc
mov
add
mov
pop
fstpl
xchg
inc
pop
mov
lahf
repz
sti
or
add
xchg
add
push
js
je
int
sub
fisubrl
jb
xchg
adc
mov
sarl
ret
int3
lcall
jecxz
test
loop
mov
sbb
fisttps
adc
loopne
test
clc
mov
popa
mov
cli
in
cmpsb
jb
in
mov
sti
pop
sbb
add
popa
loopne
jmp
pop
mov
arpl
in
lods
mov
iret
or
cmp
lea
ljmp
repz
mov
int3
add
cmovle
fsubs
sub
pop
int3
lcall
xchg
fldl2t
adc
jns
inc
test
dec
dec
dec
mov
add
mov
mov
addr16
cmp
adc
in
jg
dec
inc
push
pop
adc
ss
adc
and
lds
daa
je
xchg
movsl
cmp
ret
loope
test
adc
dec
stc
push
push
fsubrs
jo
insb
sub
jle
xor
jmp
mov
lcall
sbb
loope
nop
mov
negl
decb
mov
in
inc
xorl
js
push
jno
pushf
mov
hlt
inc
mov
bound
xchg
imul
and
popa
notl
mov
pop
sub
out
xchg
sub
jl
insb
addr16
xchg
into
jns
int
xchg
mov
aas
cmpsl
orl
mov
xchg
cmp
lcall
out
clc
insl
cmp
inc
ret
mov
lea
scas
cmp
shrb
lahf
inc
fcmovnbe
pop
inc
fcompl
ja
scas
jge
in
lock
out
mov
sub
std
clc
movsb
jne
sub
out
cmpsl
int3
aas
xchg
sbb
push
incb
dec
sahf
lret
dec
scas
sbb
mov
add
shlb
push
rorl
movsl
add
add
in
ret
icebp
jl
push
xlat
xor
aas
cmp
add
or
mov
cmp
int3
icebp
fldcw
out
dec
or
pop
ljmp
loope
push
cwtl
add
mov
cltd
sbb
fidivl
adc
pop
js
or
test
andb
mov
popf
mov
and
into
inc
xor
xchg
out
mov
mov
dec
orb
shlb
or
cmpsl
sub
push
sahf
pop
repnz
mov
push
into
roll
jae
pop
sbb
and
popa
adc
mov
xor
mov
mov
cmp
mov
loopne
pop
jb
outsl
lds
dec
mov
fnstsw
mov
aaa
ss
movl
popa
sbb
data16
push
gs
cli
in
leave
inc
dec
sbb
mov
je
mov
jecxz
bound
notl
pop
lock
aas
dec
lahf
out
test
es
aas
daa
stos
stos
mov
daa
test
notl
orl
jge
jle
sbb
cmp
sub
arpl
enter
xchg
add
xchg
xchg
ret
adc
clc
stc
push
or
mov
pop
cmp
push
in
pushf
and
inc
jae
inc
out
mov
pop
jae
mov
cmpb
dec
dec
sbbl
push
int3
push
divl
loope
ds
leave
nop
aaa
dec
out
int3
push
insl
push
mov
mov
mov
in
jp
mov
or
xchg
fldcw
in
rcll
cmp
cmp
aas
mov
aaa
push
lahf
and
jns
jbe
lods
divb
sbbl
loop
sub
inc
test
inc
in
mov
pop
pop
xchg
les
inc
ljmp
inc
fdivrs
lods
test
fistps
cltd
and
or
cmp
ficompl
mov
pop
mov
jp
movsl
push
lret
mov
push
dec
jl
jbe
outsb
into
enter
push
jbe
cwtl
mov
into
repz
fs
add
mov
enter
shlb
mov
cmp
jg
add
movl
popa
inc
inc
in
adc
mov
arpl
out
loop
jnp
xchg
dec
sarb
pop
sbbb
in
jecxz
or
and
sahf
sbb
imul
dec
cmp
push
xchg
pop
out
ljmp
inc
and
jle
sbb
adc
add
out
call
jmp
stos
xchg
or
cmpsb
repz
and
xor
add
test
add
in
push
xchg
mov
insl
test
daa
fsubrl
or
jnp
push
not
cmc
ret
bound
xlat
imul
cltd
fdivr
imul
push
jnp
nop
xor
pop
loopne
popa
push
mov
int
movsl
push
pop
mov
arpl
sbb
in
fldl
push
xor
outsl
in
test
and
jg
pop
cwtl
xchg
test
stos
insb
cmp
mov
popl
stos
xor
in
call
shlb
mov
mov
pop
out
outsb
pop
or
nop
cmp
xor
dec
jae
jae
push
add
sahf
js
dec
xchg
loop
sub
inc
xchg
rep
dec
inc
sub
repnz
jnp
xor
inc
adc
sahf
sub
mov
int3
xor
sbb
jmp
mov
popf
loop
mov
mov
mov
movsl
cli
or
sti
lea
stc
adc
insb
cmpsb
cltd
cmp
cmc
and
jmp
iret
mov
je
push
jbe
daa
jl
sub
in
aaa
mov
inc
xlat
iret
es
cli
sub
xchg
inc
outsl
dec
stos
cmp
into
or
enter
xchg
dec
jb
test
clc
imul
fidivs
mov
mov
mov
std
les
in
dec
mul
jl
xchg
dec
push
or
mov
dec
test
dec
orl
popa
icebp
int3
shrb
adc
lahf
dec
ja
xlat
sbb
pop
int3
fs
inc
cmp
xchg
or
jp
mov
xor
or
ret
mov
cmpl
sbb
inc
fwait
rorl
and
inc
sbb
sbb
sbb
mov
push
or
inc
loop
xchg
inc
pop
in
inc
or
and
test
push
or
cltd
into
daa
inc
pop
pop
faddl
mov
cmp
add
mov
mov
push
bound
pushf
xchg
sahf
mov
push
adc
cmp
push
sbb
mov
xchg
rcrb
mov
xor
jge
dec
out
xchg
cs
jbe
add
test
sarb
movsl
es
sbb
das
xor
lahf
jmp
insb
mov
dec
xchg
push
dec
jbe
sarb
cmpb
xchg
jmp
jl
fcoms
lcall
popa
test
xchg
iret
pop
popa
push
imul
int
jo
mov
int
leave
dec
sub
aaa
mov
inc
test
icebp
xorl
jae
sub
imul
sub
mov
addb
sarb
ret
ficompl
sbb
leave
adc
test
cmpl
xchg
mov
cmpsb
and
out
sub
data16
adc
inc
mov
data16
pusha
int3
aas
stos
sub
xchg
jp
mov
roll
aaa
scas
arpl
ret
call
mov
or
out
dec
rclb
pop
jo
push
std
jno
xchg
add
adc
sbb
loope
inc
push
or
jb
mov
inc
repz
fdiv
pop
in
dec
pushf
pop
add
adc
or
enter
adc
add
in
std
pop
pop
daa
xor
fbld
mov
jnp
sub
and
scas
inc
sub
cmc
aad
jb
xchg
push
cmp
xchg
xchg
xchg
movsb
push
sahf
les
cmc
cmpsl
loopne
lea
jmp
test
inc
mov
es
outsb
push
fistpll
enter
sbb
es
jb
popa
insl
insb
push
aaa
addr16
jae
inc
mov
sti
adc
mov
xchg
mov
inc
or
cld
mov
js
lods
insb
mov
pop
xchg
stc
stc
jns
lcall
int
xchg
mov
fcompp
or
dec
or
clc
and
xchg
daa
push
lcall
into
push
sahf
pop
dec
shrb
sti
mov
adc
cs
push
call
xchg
cmp
out
in
add
dec
or
sub
xor
push
outsb
lods
test
lahf
pop
and
jmp
pop
addr16
nop
repnz
add
inc
addr16
lahf
les
xlat
mov
repz
movsl
push
leave
push
jnp
lods
xor
mov
cmp
in
outsb
push
nop
gs
cld
subb
jnp
mov
out
sub
xor
pop
rcrl
jg
sub
dec
mov
mov
mov
movsb
inc
mov
bound
jg
sar
cmp
add
cmpl
imul
cwtl
fisubrs
pop
shrl
xor
adc
jecxz
jnp
jge
jge
pop
ret
pop
xor
adc
pusha
das
push
test
nop
fwait
mov
scas
aam
dec
or
or
adc
sub
mov
paddsb
rorb
and
inc
aam
mov
in
hlt
out
test
cmp
gs
sahf
xchg
fdivl
add
inc
outsl
jge
push
imulb
sub
addb
int
sbb
and
push
mov
xchg
sbb
rclb
call
fstpl
out
sahf
dec
mov
std
mov
inc
test
mov
int
xchg
repz
mull
into
fisubrl
sar
into
cmpsl
inc
xchg
mov
les
add
and
lahf
dec
mov
arpl
or
mov
aas
mov
dec
imul
mov
and
cs
mov
sub
add
fisttps
adc
jmp
aaa
fistl
push
inc
insl
mov
jecxz
pop
dec
dec
ret
sbb
loopne
sti
or
xchg
inc
push
movsl
push
jp
rolb
ret
or
jmp
pop
push
faddl
clc
insl
cmpsl
mov
xchg
ss
daa
inc
inc
push
adc
sbb
and
cltd
sbb
push
fnstcw
sbb
loopne
jmp
in
mov
fimull
inc
push
add
xlat
fs
and
xor
inc
imul
les
inc
movsl
test
inc
and
out
rolb
shll
decb
xor
push
push
add
pusha
or
out
arpl
subl
lret
mov
out
scas
inc
pop
mov
sub
test
mov
cs
clc
sti
pop
or
roll
jmp
push
sbb
das
xor
roll
xchg
push
xor
shlb
inc
fsubrl
mov
sub
lahf
dec
frstor
jmp
mov
push
sbb
ret
daa
add
fsub
inc
aad
mov
aam
mov
imul
cmp
out
pop
push
sbb
xor
xchg
nop
mov
push
imul
orl
ljmp
mov
push
fwait
out
hlt
bound
pop
mov
jp
mov
mov
in
jns
jle
fwait
xor
fsubrs
mov
out
inc
int
shr
pop
out
ss
shrb
add
mov
push
fs
adc
mov
stos
jae
pop
add
movsl
fdivl
push
jae
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
inc
imul
sbbl
add
pop
scas
popf
mov
pop
dec
xchg
push
cmpsb
push
xlat
mov
cmc
sub
xchg
fbstp
mov
xchg
das
add
jp
test
shl
and
loope
loopne
xor
sbbb
pop
stc
leave
jge
loopne
into
aas
loopne
xor
xchg
out
push
dec
mov
jb
adc
cltd
xor
in
cmpsl
iret
orl
lods
pop
xchg
out
cmp
lds
test
shlb
and
subl
adc
jle
inc
adc
rcr
xchg
insb
sbb
popa
add
daa
aaa
jb
js
sub
sbb
xchg
dec
push
xlat
pop
push
das
test
loop
push
test
add
enter
cmp
lock
mov
out
mov
pop
lcall
mov
mov
sub
lahf
adc
fdivrs
cmpsl
mov
push
xchg
dec
sub
and
jno
insb
imul
push
cli
or
sub
mov
loop
inc
cwtl
movsb
jo
jns
test
ss
or
mov
out
loopne
push
lahf
dec
movsb
ljmp
or
jo
js
out
pop
mov
rcll
xchg
ja
and
shll
xor
lods
add
test
clc
jbe
sti
ljmp
push
jo
add
mov
test
pushf
js
repnz
push
push
dec
cwtl
mov
jmp
mov
push
xchg
pop
in
dec
mov
mov
leave
sbb
mov
jbe
ret
insb
add
hlt
push
imul
inc
out
xorl
push
out
pop
fmuls
sub
and
hlt
sbb
mov
or
iret
adc
mov
lcall
imul
mov
adcl
and
sti
lret
scas
inc
nop
mov
inc
lret
add
lahf
cld
lahf
sti
fnstcw
insb
ret
movsl
xor
jg
les
pop
adc
outsl
jne
mov
movsl
out
imul
xchg
push
xchg
pop
gs
aam
sti
inc
cltd
in
and
cwtl
dec
mov
cmp
adc
call
xchg
cmpb
lods
aad
rcl
lods
mov
push
clc
cmp
mov
lret
sub
pop
or
pop
sub
dec
inc
add
dec
cmp
out
sub
daa
hlt
fsubr
fcomps
lods
jbe
jae
pop
dec
sub
jo
dec
inc
dec
fistpl
addr16
mov
js
mov
data16
mov
adc
loopne
add
xor
mov
mov
aaa
mov
in
rcrl
in
and
inc
mov
lahf
jo
mov
mov
gs
mov
pop
loop
ljmp
xchg
pop
leave
aad
cmp
aam
popa
fistpl
push
mov
mov
je
sub
scas
xchg
inc
push
sbb
push
aaa
mov
lahf
mov
push
dec
stc
je
sbb
pop
sub
or
cmp
das
mov
mov
dec
push
call
dec
popa
dec
insb
push
adc
out
pop
iret
xorb
push
dec
add
gs
adcl
aas
outsb
sbb
stos
loop
std
fisttps
out
pop
cmp
sub
and
dec
movsl
cmp
ja
scas
jbe
popa
xor
mov
dec
jo
fsubs
outsb
push
sahf
shr
cmp
insl
push
push
jne
xorb
mov
sar
sahf
imul
xchg
dec
sub
lea
iret
push
xchg
xchg
lret
in
fdivrs
pop
ljmp
ss
shll
inc
adc
add
inc
test
clc
shl
pop
pop
mov
xchg
mov
sbb
sbb
sbb
int3
pop
mov
scas
ds
pop
ret
ds
cli
arpl
push
push
adc
pmulhuw
imul
sub
fiaddl
mov
pop
and
or
dec
add
cwtl
sbb
outsb
adc
push
clc
hlt
push
idivb
ficoml
test
and
mov
push
mov
lret
push
pop
adc
shrb
xor
fucomp
cltd
xlat
fdivl
insb
dec
sbb
or
cmpb
xor
mov
push
cmp
mov
imul
or
xor
mov
fs
sub
push
sub
lock
cmc
test
mov
and
mov
stc
jg
mov
push
jle
aad
imul
out
jp
lret
std
repz
mov
int3
stos
ja
push
fistpll
iret
jne
mov
decb
or
dec
xor
movsl
xchg
dec
and
ficoms
aaa
fildll
sub
test
outsb
mov
cs
repnz
adc
push
pop
jnp
fdivs
rcrb
dec
lea
jo
aas
mov
jo
fs
mov
pop
lea
ret
push
icebp
dec
sbb
adc
mov
pop
mov
push
push
imul
and
push
adc
arpl
call
sub
jg
test
outsb
out
pop
popa
mov
xchg
jmp
adc
adc
mov
jmp
jne
repnz
insl
sub
ret
enter
ds
notl
stos
and
dec
mov
pushf
sub
xchg
adc
cmpsb
call
andb
cmp
mov
outsl
fcmovbe
and
mov
mov
mov
out
pcmpeqb
mov
sub
faddl
sti
mov
inc
add
sbb
sbb
lahf
mov
add
adc
mov
or
add
fldln2
sbb
hlt
sahf
notl
sar
mov
mov
arpl
insl
adc
shll
clc
cwtl
dec
cs
mov
out
push
dec
insb
mov
mov
sti
pop
bound
inc
jns
pop
dec
popa
xchg
sbb
dec
mov
ljmp
into
xchg
jne
out
ret
pusha
mov
mov
aad
xlat
pop
xchg
inc
jecxz
rcrb
ds
fidivl
out
out
dec
daa
cmpsl
pusha
adc
dec
fnsave
jne
cli
xchg
insl
les
clc
outsb
data16
mov
inc
jns
imul
lods
mov
movq
mov
mov
cmpsl
xor
mov
mov
adc
and
std
repnz
push
mov
jp
or
xchg
push
out
lret
not
test
jno
pop
data16
fcoms
mov
or
roll
jecxz
fildl
cmp
lcall
movsl
ds
clc
call
mov
stos
decl
imul
and
test
clc
jbe
jns
mov
sbb
push
sub
inc
pushw
or
adc
pop
in
jl
push
pushf
in
mov
test
add
dec
icebp
hlt
or
mov
int3
repz
push
fstpt
js
mov
stc
xchg
and
or
aad
mov
cld
mov
xchg
popa
cs
push
daa
sbb
cmpsl
clc
pop
faddl
ljmp
push
cwtl
hlt
xchg
cld
inc
push
adc
loope
xchg
nop
jnp
or
jge
ljmp
fcmove
jl
dec
data16
sbb
or
xor
mov
test
and
cmpsb
test
mov
mull
push
mov
dec
sbb
push
in
mov
divb
mov
fcmovnbe
sti
sbb
leave
movsb
or
scas
cmpsl
sub
mov
and
xchg
fisubs
jp
xchg
push
cmc
add
cld
movsb
insb
dec
or
int
out
and
insl
mov
jns
xor
and
inc
push
xor
jp
jecxz
lods
leave
lahf
push
adc
inc
xor
xchg
imul
ljmp
pushf
push
lds
and
xchg
mov
in
xchg
add
dec
je
mov
inc
ds
lods
sbb
aam
aas
xor
aad
xchg
test
lock
aad
scas
or
inc
add
mov
and
sbb
cmp
lock
pop
notb
jecxz
pusha
out
dec
mov
xchg
cltd
mov
outsl
jg
andl
shll
push
pop
nop
movsl
je
jmp
mov
fiaddl
mov
xor
fisubs
sbb
lds
arpl
adc
stos
enter
pop
scas
push
sub
sti
pusha
rolb
fs
loop
xchg
xchg
and
mov
or
arpl
dec
xor
ficompl
mov
cs
fiadds
pop
mov
in
hlt
fadds
dec
xlat
push
fsubr
int3
mov
into
xchg
push
jne
movsl
sub
stos
mov
push
cmp
les
clc
fs
xlat
leave
popa
adc
adc
push
xchg
sub
imul
xchg
jecxz
xor
je
lea
in
imul
cmc
or
or
jns
pushf
out
fidivl
and
mov
inc
call
jp
repz
dec
fs
xchg
sbb
xchg
iret
es
mov
inc
addr16
cs
push
or
xchg
int3
push
add
enter
out
adc
jmp
shlb
xorl
ret
rorl
inc
adc
aam
fwait
pushf
out
fiaddl
test
mov
fld1
add
push
in
lods
sbb
fistpll
jae
cmpb
xchg
push
dec
in
fists
int
aaa
xchg
xchg
clc
mov
negl
add
fwait
or
pop
pushf
sbb
cmc
inc
std
out
sub
lea
int
xchg
fildl
loopw
pop
out
inc
fwait
cmc
sti
sarl
pop
xor
lret
push
cmp
mov
and
mov
scas
push
jns
jp
and
mov
sub
iret
nop
pop
xchg
dec
rorb
inc
std
push
pop
push
sub
call
cmpsb
aam
fs
in
je
mov
mov
xchg
pop
fs
jne
sbb
enter
and
aaa
mov
dec
cli
xchg
imul
mov
mov
das
pusha
jge
jp
popa
cwtl
xchg
push
inc
movsl
inc
cwtl
lea
push
pop
sub
mov
or
push
jg
test
pusha
sbb
subl
je
or
enter
les
jns
std
xchg
inc
jne
dec
jns
orb
xchg
jo
cmpsb
std
mov
push
ret
sbb
mov
mov
dec
jo
pop
rolb
mov
pop
and
aam
cmpsb
or
cltd
out
lcall
fidivrl
sbb
cld
inc
retw
clc
mov
in
pop
sub
out
xchg
pop
cmp
stos
push
adc
pusha
mov
nop
cmpsb
mov
xor
js
cmpb
pop
sub
jns
jo,pt
ljmp
cs
das
movsb
daa
inc
imulb
adc
mov
aas
imul
stos
inc
lods
mov
jp
mov
out
mov
shlb
sahf
lea
xor
ljmp
testb
test
cmp
repnz
inc
and
xor
xchg
and
repz
out
pop
add
inc
mov
sarb
ljmp
mov
jmp
and
ss
and
cmpb
add
xlat
mov
shll
aas
mov
dec
je
repz
push
sub
xchg
lock
push
pusha
in
jecxz
pop
dec
push
inc
xchg
out
mov
push
mov
mov
sub
cli
out
xor
ret
mov
adc
aaa
insl
scas
leave
and
sbb
into
aam
in
xlat
pop
push
add
rcl
adc
push
test
mov
xchg
dec
out
es
into
outsl
push
sub
lret
mov
xchg
test
cmovne
rcr
dec
shll
jb
mov
enter
jl
test
xor
imul
add
sbb
push
push
dec
data16
das
fprem
push
js
stc
aaa
pusha
lds
dec
cwtl
aas
stos
sahf
push
lock
out
fwait
xor
xor
adc
xor
in
sti
dec
pushf
in
mov
push
out
sti
push
ds
shl
and
test
jnp
pop
push
fldenv
cmp
xchg
sarl
inc
mov
add
es
mov
xchg
jne
cltd
jecxz
adc
adc
test
ja
push
inc
icebp
jno
or
xchg
lds
addr16
dec
mov
inc
sbb
sub
aad
and
leave
int3
stc
sub
mov
and
or
mov
mov
ja
cld
dec
outsb
adc
jns
push
inc
and
xchg
in
cmp
int3
stos
and
mov
mull
sbb
add
adc
stc
push
or
adc
inc
dec
ds
in
icebp
fistl
add
int3
movsb
cwtl
jle
and
xor
adc
mull
call
mov
jge
mov
adc
es
push
fdivrl
or
dec
clc
dec
in
mov
stos
add
xor
insb
or
push
sub
jmp
lcall
pop
add
rorl
mov
int
xchg
int3
xchg
push
xchg
jno
out
and
jp
in
scas
test
add
xlat
cmp
das
jp
and
imul
cltd
ss
xlat
out
out
int3
jbe
lret
and
in
adc
jno
enter
jp
fadd
push
in
lret
inc
mov
ret
jg
pushf
sarl
inc
or
xlat
sahf
jmp
movsl
enter
outsl
xchg
repnz
movsb
add
mov
and
aas
jmp
mov
insl
xor
popf
sub
and
add
sbb
or
in
mov
mov
les
pushf
jb
xchg
cmp
push
test
mov
mov
jno
jg
and
mov
mov
testb
pop
inc
lahf
push
adc
jno
movb
mov
packuswb
insb
cwtl
push
push
insb
movsb
pop
cmp
xor
je
test
repz
repnz
sub
add
push
test
clc
stc
lahf
adc
rorl
sbb
sbb
int3
or
lock
push
or
aaa
in
push
mov
adc
sub
fisubrs
mov
lret
or
dec
xchg
dec
mov
inc
icebp
stc
cmpsl
mov
popa
xlat
test
shr
sti
jns
popf
mov
outsb
xlat
cli
icebp
pop
pop
scas
repz
push
lock
pop
inc
mov
and
ds
cmp
popa
or
push
jb
dec
mov
mov
fiaddl
jo
mov
jmp
lods
pusha
pop
push
or
push
cmp
mov
fs
mov
ds
push
lods
or
dec
inc
fsubrl
mov
out
cmp
pop
mov
pop
cltd
xor
mov
sahf
mov
xchg
inc
lds
test
insl
ljmp
insb
call
lcall
cmovbe
push
lahf
in
mov
mov
push
je
aad
test
stos
push
mov
rorb
repz
cmpsl
push
pushf
pop
mov
fadds
jmp
pop
cmpl
xchg
add
sub
jl
cld
xchg
lods
lock
mov
test
sub
icebp
lods
dec
dec
fsts
lods
push
inc
or
ljmp
adc
mov
or
mov
and
stc
xorl
lahf
mov
jne
mov
xchg
adc
pop
and
test
inc
mov
push
adc
mov
test
mov
enter
jmp
ret
mov
js
dec
cmp
fidivrl
sahf
into
mov
inc
and
push
push
sbb
inc
shl
fcomps
xor
mov
call
mov
div
stc
and
subb
lods
sbb
sub
lock
or
cltd
fdivrp
xor
shrb
cmp
aad
mov
add
pusha
jl
xor
data16
jl
mov
fcomi
and
xchg
cmp
sti
loop
push
frstor
movsb
or
xlat
gs
lock
sub
mov
xchg
lahf
movsb
enter
lret
add
jmp
sub
jo
mov
and
into
scas
push
cmp
lret
xchg
dec
sub
pop
jae
inc
call
rcll
mov
testb
add
imul
inc
pop
cmp
or
repz
pop
or
jae
mov
jnp
add
xchg
mov
ds
or
sbb
sub
adc
mov
push
xchg
xor
out
and
xchg
shlb
mov
outsl
dec
pop
stc
aas
lods
stc
jo
lret
arpl
xlat
out
hlt
or
xor
push
in
aam
jmp
outsb
pop
or
lahf
push
and
lret
es
jae
push
fstl
lods
rol
mov
adc
fisubs
push
aaa
sti
insl
test
rorl
sbb
lahf
push
jnp
mov
xchg
icebp
aam
cmp
iret
movsl
sbb
stos
cmp
std
stos
mov
or
inc
bound
aam
mov
lcall
mov
mov
cmc
ds
jmp
repz
rcr
push
xchg
js
push
out
or
dec
out
out
push
test
loopne
ficoms
pop
ss
movsl
lcall
sbb
jle
pop
div
adc
gs
addr16
in
jae
and
xor
jmp
pop
add
add
roll
mov
and
mov
sbb
addr16
or
fs
inc
movsb
jecxz
adc
imulb
out
xchg
mov
imul
xlat
inc
dec
add
mov
jge
pop
cmpsl
int3
enter
mov
out
sbb
mov
fldenv
and
bound
inc
jg
lret
jle
lock
rorb
dec
xor
xor
nopl
nop
push
loopne
out
inc
in
jmp
cmc
hlt
and
aaa
lret
loopne
mov
jmp
cltd
or
into
fwait
int3
mov
add
mov
mov
jg
mov
push
and
leave
sbb
lea
sub
dec
out
lret
mov
cmp
clc
and
jmp
xchg
cmp
adc
inc
add
jl
lods
push
mov
dec
cmpsl
iret
mov
incb
inc
jbe
pop
adc
and
inc
testb
arpl
lahf
ret
sub
sbb
xchg
mov
lcall
xor
sbb
xor
shlb
loop
sbb
repz
add
push
add
pop
fiaddl
push
mov
lret
popf
push
inc
out
jno
inc
lahf
sahf
mov
xchg
mov
pop
in
lret
iret
mov
jp
rcrb
daa
stc
cltd
push
jecxz
adc
xlat
dec
mov
pusha
aaa
cltd
push
cmpsb
and
push
xor
fidivrl
fwait
add
jns
pushf
mov
mov
and
pop
sahf
inc
popf
push
adc
lods
inc
cmp
push
daa
jbe
movsl
pop
pop
push
push
lods
inc
insl
outsl
dec
test
inc
rcr
out
pop
fs
jmp
inc
adc
sub
dec
adcl
lret
dec
xor
cmpsl
scas
adc
mov
imul
mov
or
or
pop
push
cli
scas
iret
mov
sbb
stos
dec
inc
push
shlb
sbb
mov
pop
pop
addr16
sbb
das
sahf
hlt
popa
shrb
fnsave
aas
fcoms
add
mov
jg
call
xlat
cwtl
in
push
mov
or
jge
inc
loope
arpl
in
push
or
xchg
dec
nop
add
negl
adc
ficoml
test
push
scas
aam
notl
push
dec
cmp
dec
add
shll
mov
jb
lea
jl
ds
cmp
push
adc
jle
inc
jae
inc
cmp
sub
loope
inc
outsb
stc
mov
call
lock
and
ss
movb
push
cld
and
mov
push
rorl
rolb
add
xchg
mov
testl
mov
daa
xor
xchg
aam
mov
inc
xor
out
or
sub
loope
in
and
inc
inc
sbb
and
inc
dec
movsl
popa
mov
out
das
mov
stos
and
and
sbb
jge
pop
adc
mov
pushf
out
test
inc
jl
rcll
or
sub
jg
in
push
rcrb
xor
mov
jns
jno
push
insb
mov
xchg
push
or
xchg
and
push
imul
lods
cld
xlat
lea
adc
lea
or
fsubr
jle
dec
adc
stos
mov
inc
mov
mov
cmp
sbb
sbb
loopne
sub
cmpb
xor
loopne
mov
roll
movsb
iret
loope
rcll
call
pop
incl
dec
cmpsb
mov
aaa
mov
and
je
sub
rcll
es
cld
les
das
stc
inc
lea
add
and
jne
dec
push
ficompl
adc
ficoms
pop
out
sbb
loope
insb
ds
mov
mov
test
and
mov
ja
cs
iret
cli
lret
orl
sub
jb
cmpsl
add
pop
movsl
pop
push
adc
mov
into
and
dec
rolb
xorl
mov
test
cmpsb
pop
sbb
cs
sbb
adc
adc
pop
popa
pop
stos
sbb
xchg
ss
pop
shr
movsl
add
push
mov
popf
jmp
jmp
call
hlt
dec
xchg
lock
sub
pop
filds
scas
add
roll
ds
mov
pand
or
and
pop
xor
xor
repnz
mov
pop
add
lcall
jb
push
rol
aad
or
movsb
xor
sbb
gs
sti
and
mov
daa
arpl
insb
xor
xchg
cld
mov
cmp
sbb
add
mov
out
inc
xor
mov
xchg
leave
aad
mov
or
push
cli
sub
inc
mov
push
jnp
jecxz
test
scas
call
xor
shll
and
iret
xchg
xor
inc
ss
stos
test
mov
lahf
inc
xor
sub
out
ss
pop
and
vmovhps
je
call
int
iret
push
ret
pop
rcll
fdiv
xor
cli
je
mov
pop
sbb
aam
xchg
inc
or
lret
lods
xchg
mov
xorl
mov
pusha
cmp
xor
mov
mov
adc
mov
or
dec
xchg
push
sahf
popl
jp
movsbl
sbb
add
fdivl
and
insb
add
repnz
int
xchg
jnp
jb
cmp
gs
mov
or
pushf
and
sbb
jae
jle
mov
add
loopne
or
push
dec
in
pop
test
inc
mov
out
ret
mov
mov
inc
out
jbe
dec
dec
xchg
adc
pop
dec
mov
cs
xor
call
mov
mov
arpl
or
in
orl
movsl
inc
xchg
in
push
inc
outsl
pop
and
clc
les
pop
shlb
je
popf
subb
or
sbb
movsl
dec
push
xchg
and
icebp
xchg
addr16
in
andl
stos
mov
repnz
sbb
loopne
jae
xchg
inc
bnd
dec
pop
adcb
pop
inc
xchg
loopne
mov
sar
cmp
lods
lahf
inc
xchg
jge
adc
add
nop
stos
xor
in
or
jo
aas
ret
fcomip
push
xlat
and
mov
inc
xlat
sbb
leave
jmp
jne
enter
fidivrl
pop
jmp
xchg
enter
push
pop
jbe
pop
mov
xchg
aas
fisttpll
or
xor
lods
adc
fs
push
sub
inc
sbb
xor
pop
cmp
mov
bound
inc
fcoml
insl
push
mov
mov
dec
test
pxor
test
stos
cmpsl
pop
push
or
repnz
adc
enter
in
test
pop
je
jl
shrb
cli
es
cmp
mov
or
aas
dec
dec
xchg
push
ffreep
push
lret
aam
adc
ret
ljmp
dec
pop
mov
xchg
rolb
mov
mov
push
xchg
and
scas
pop
dec
js
fldl
xchg
ss
jb
mov
lret
ret
inc
mov
dec
add
fcoms
and
and
repz
sbb
and
push
mov
cmp
notl
jmp
mov
lcall
imul
pop
addr16
mov
roll
cwtl
pop
mov
repz
shlb
push
xchg
mov
xor
push
aas
jne
in
imulb
jae
sub
pop
iret
jnp
jo
sub
js
jno
sarb
shll
imul
xchg
enter
and
pop
mov
mov
dec
mov
repz
xchg
ljmp
daa
mov
xor
pop
loop
inc
clc
adc
sub
adc
adc
roll
scas
in
adc
jp
and
xlat
addr16
or
dec
sub
xor
mov
ficoms
in
pop
xchg
sbb
push
add
fldenv
push
ret
fidivrl
pusha
or
mov
rorb
cmp
xor
fsubl
push
push
call
decb
pop
mov
leave
cwtl
hlt
sub
inc
push
cmpsb
xor
inc
aad
lret
ja
cmp
adc
mov
jns
insl
imul
ljmp
fistpl
popa
movsl
test
mov
sub
in
add
popa
aad
ret
xchg
fsubs
sbbb
addr16
addr16
xchg
pop
push
cmpsl
adc
nop
insl
fmull
shll
pusha
pop
mull
in
xlat
mov
test
sub
sub
xlat
xlat
cmp
mov
jg
cmp
and
mov
pop
cmc
fbld
jne
out
lret
mov
push
adc
stc
pusha
lea
stc
aad
dec
or
mov
sbb
jp
mov
pop
push
push
cmp
xor
stos
jnp
inc
adc
jmp
mov
cmp
xor
imul
xchg
pop
and
push
fwait
out
mov
ja
push
jl
push
rcr
repz
stc
mov
mov
push
xchg
and
sti
jns
insb
pop
or
push
dec
pushl
pop
xor
mov
cmpsb
add
jb
cld
subw
mov
sub
roll
dec
in
pop
repz
sbbl
jl
mov
out
clc
cmp
push
xor
sub
jecxz
test
mov
shll
aad
pop
enter
mov
roll
in
mov
lds
cmpsl
ret
outsb
pop
and
pop
xchg
adc
sbb
subb
mov
add
es
sbb
jecxz
mov
fisubrl
in
and
cmp
adc
sbb
lea
xor
mov
je
nop
pop
mov
push
and
test
adc
xor
data16
pop
mov
je
push
fsubrp
fnsave
stos
mov
jne
or
adc
mov
sub
or
adc
adc
add
call
aad
icebp
pop
movsl
and
pop
dec
dec
je
cld
mov
clc
jnp
cmp
pushf
test
fs
xchg
push
mov
and
cmpsb
adc
inc
adc
test
insb
dec
jb
sbb
es
incl
and
and
jle
into
xor
mov
mov
push
inc
lods
mov
add
or
dec
lock
data16
inc
and
js
int3
rcrl
add
in
cmc
out
sub
adc
and
mov
outsb
cmp
jl
shl
jae
fcmovne
out
outsb
jp
clc
test
xor
adc
cltd
adc
ret
mov
cmpsl
dec
pop
imul
or
int
mov
loopne
push
sbbl
xchg
fsubrs
mov
push
cs
leave
jl
inc
daa
sub
sub
dec
sti
out
nop
push
pop
addr16
and
pop
or
fcoml
mov
stos
inc
ds
add
outsl
jmp
test
in
rclb
push
mov
fidivrs
mov
and
out
xchg
push
aam
lcall
push
das
adc
in
and
adc
inc
data16
add
mov
insl
lock
pushf
jg,pt
dec
jmp
cmp
jecxz
ja
mov
pop
loopne
sbb
out
subb
enter
imul
mov
add
dec
in
jo
sbb
add
int3
leave
shrl
ss
jbe
jl
fprem
outsb
push
js
in
and
in
sarb
out
add
sub
adc
je
imul
popf
loopne
add
dec
movsl
call
sub
jmp
fldl
sub
mov
ss
sbbl
dec
ret
mov
cmpsl
lcall
inc
je
sbb
icebp
mov
rcll
iret
ja
push
xchg
mov
jo
std
adc
shlb
add
mulb
mov
fistl
sbb
jmp
jo
imul
pop
jae
or
or
les
mov
in
dec
loop
xlat
add
int3
mov
je
add
inc
sub
dec
push
adc
rol
cld
fcoml
fcmovne
mov
popa
dec
xchg
flds
xor
popa
orb
push
shlb
lret
mov
je
sub
es
jp
stc
mov
push
push
clc
loop
pop
dec
mov
xchg
jo
adc
cwtl
je
mov
jp
pop
mov
out
sbb
jae
and
sub
jns
push
nop
movsl
aam
and
pop
fst
xor
xchg
daa
shlb
push
jae
rorl
mov
dec
negb
xor
and
insl
push
pop
fiadds
bound
cmp
mov
insb
dec
into
xchg
dec
lea
inc
mov
mov
fstps
in
mov
sbbb
nop
push
sbb
add
xchg
out
inc
jbe
sub
sbb
inc
and
or
lea
pop
jmp
mov
in
inc
in
xchg
sbb
outsl
mov
rclb
test
mov
add
dec
inc
lret
pop
in
lds
mov
xor
cs
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
call
or
addl
sub
std
pop
mov
mov
fadds
std
ds
sub
mov
shrl
and
mov
loope
stos
pop
xchg
jmp
dec
dec
mov
out
jae
repz
daa
icebp
mov
sub
and
test
ret
in
mov
sub
push
arpl
xchg
popa
fldt
repz
cmpb
push
push
xchg
push
ds
xor
fwait
pop
mov
mov
jbe
jnp
fldenv
scas
mov
or
jl
rcrl
gs
push
movsb
leave
arpl
xor
xor
mov
add
mov
cwtl
adc
stc
addl
jb
or
mov
sub
cmp
fsts
repnz
mov
adc
inc
mov
andl
and
repnz
into
cld
xchg
push
dec
in
dec
mov
int
xor
daa
mov
push
mov
mov
xor
xor
dec
lcall
push
arpl
rcl
into
arpl
jo
mov
cmpb
test
push
subb
cmc
add
push
shrb
call
cli
popf
adc
xchg
lahf
adc
or
pop
and
pop
ja
xchg
popa
cmpsb
js
push
xchg
jns
ljmp
jno
ljmp
mov
jmp
add
add
dec
and
mov
mov
inc
rol
stc
push
loope
dec
enter
push
out
sbb
mov
stc
mov
xor
lret
push
push
pop
xor
xchg
jns
ficoml
cs
scas
and
mov
rol
dec
sbb
test
aaa
ljmp
jg
mov
xchg
xchg
xchg
testb
dec
inc
loop
loope
or
aam
push
dec
in
inc
push
popf
dec
es
add
mov
enter
cmp
aaa
or
jns
jne
add
aaa
mov
xlat
arpl
jp
addl
sub
les
add
notb
shlb
leave
es
enter
fldt
decl
add
imul
dec
out
xor
jmp
out
je
jl
addr16
aam
xchg
xchg
pusha
or
insl
sbb
sarl
push
jge
mov
mov
std
inc
lds
cmpsb
mov
lea
mov
cmpsb
insb
inc
lods
and
lret
dec
inc
pop
jne
lds
je
enter
jge
mov
pushf
xchg
mov
sbb
fbstp
inc
inc
pop
add
pop
pop
jmp
cmp
sbb
dec
aas
xchg
pushf
dec
jae
ss
fs
or
pop
pushl
cmc
add
jl
jle
sub
or
loope
mov
sub
adc
jae
push
cmp
and
xchg
je
add
xchg
mov
push
sub
mov
cmc
out
add
daa
lds
dec
push
cld
test
mov
js
pusha
test
pop
sbb
iret
mov
into
in
call
ds
mov
mov
mov
lea
xlat
test
pop
adc
sbb
shlb
pop
push
jg
adc
push
je
dec
xchg
push
lds
or
pop
cmpsl
shl
icebp
pop
pop
testl
cmpsb
xor
pop
mov
mov
xchg
pusha
outsl
pop
ret
fisttpll
add
test
mov
scas
shl
insb
les
mov
fdivr
mov
stos
add
fwait
jl
cmp
std
add
pop
lds
outsb
inc
mov
clc
push
inc
mov
leave
pop
xlat
pop
push
push
stc
fdivr
in
ud2
jmp
sbb
sahf
jae
test
cmp
jg
mov
add
push
int3
cmpsb
xor
scas
cltd
clc
sbb
jo
xchg
cld
lret
icebp
mov
jge
cmp
push
lea
xor
je
jae
mov
stos
outsl
dec
pusha
pop
movsb
jb
fcoms
es
xchg
push
ret
js
or
es
lcall
enter
shl
sbb
in
cmp
jge
jno
std
sub
fwait
xor
ret
cwtl
pop
test
push
cmp
or
or
dec
leave
mov
outsb
inc
push
xchg
aas
cld
in
push
adc
cmp
jecxz
aas
int
cmpsl
inc
icebp
inc
and
lcall
sahf
xor
flds
dec
adc
inc
data16
cmpsl
out
xchg
cmp
xchg
mov
adc
js
xor
push
test
stc
xor
dec
xchg
mov
rcr
leave
std
js
cmp
aas
mov
xor
jge
icebp
lods
xchg
push
cmc
mov
sti
std
xchg
sub
sub
push
xchg
pop
gs
lock
mov
repz
cmp
fdivl
jecxz
and
mov
sub
js
int
aam
adc
mov
call
ss
lcall
cli
ret
or
enter
xor
xchg
mov
cmp
fs
or
sbb
dec
pop
jb,pt
notb
mov
sub
pop
in
lcall
or
add
jmp
stc
shlb
push
subl
bnd
mov
xor
cli
fs
sub
bound
les
cmc
dec
fcompl
jmp
jbe
loop
mov
out
jo
jge
lahf
jnp
cs
sub
or
icebp
rcll
dec
test
iret
insl
pop
ljmp
lods
xchg
loopne
cmp
repnz
mov
or
adcb
pop
fcmovnb
push
test
stc
lods
notl
inc
pop
nop
adc
push
add
adc
xor
mov
xor
lea
and
in
sbb
cmp
dec
or
int
jno
cli
cltd
mov
cs
insb
sub
pop
pop
or
frstors
test
sub
das
push
clc
mov
add
outsb
cmc
sub
sub
cmc
mov
popa
add
xchg
xchg
sbb
sub
gs
dec
mov
sub
in
cli
pushf
mov
sub
imul
pop
or
int
xchg
cld
and
cmpl
mov
mov
popf
imul
std
inc
out
push
addb
xchg
cmpsl
mov
ljmp
jb
xchg
xchg
sub
and
lock
and
mov
inc
xchg
lods
fbld
xchg
popa
sub
ja
ja
cwtl
sub
test
in
movsl
mov
popf
mov
out
jecxz
dec
movsb
movsl
sub
sti
stos
movb
test
jbe
mov
mov
imul
mov
or
jbe
sbb
scas
cmp
xchg
xorl
lds
mov
sub
arpl
das
push
jb
xchg
gs
push
xchg
mov
rolb
test
cwtl
jmp
cltd
dec
xor
fisubs
ds
push
mov
aas
mov
mov
push
inc
xchg
inc
repz
movsb
jge
rorl
xlat
lcall
cmp
outsb
out
sbb
xchg
and
sub
jbe
pushf
andb
movsl
lods
xchg
scas
aam
das
pop
mov
insb
push
loope
adc
loopne
sbb
xchg
cmc
pop
xor
add
xchg
nop
adc
xor
test
addr16
dec
loope
cmp
pop
mov
in
mulb
cmp
sub
cmc
sbb
cs
sub
sbb
rcrb
cli
fcmovu
rclb
mov
sub
or
sub
and
jnp
jne
repz
and
stos
lret
and
pop
mov
lret
mov
sbb
mov
sub
fnstcw
inc
jmp
les
ljmp
rclb
les
sbb
test
mov
popa
adc
in
mov
ret
dec
xor
lret
jo
push
ret
sbb
outsb
xchg
xchg
inc
mov
movsl
cmpb
mov
xor
divb
mov
dec
pop
inc
out
adc
jg
ja
xor
ss
pop
and
cmpsl
jge
fldt
cwtl
ljmp
movl
mov
lods
cld
addb
aaa
jecxz
pop
mov
sbbb
pop
mov
sub
push
push
or
inc
lods
inc
jmp
xchg
lahf
push
or
or
in
pop
clc
nop
test
lahf
fstps
adc
lret
sarl
sbb
add
pop
sbb
jl
fs
iret
fidivl
xchg
sub
mov
arpl
popf
test
sbb
popf
cmp
push
pop
fisttps
jae
into
xchg
ljmp
repnz
add
pop
jbe
pop
ss
jl
hlt
repz
sarb
jae
xor
movsl
push
test
jp
pop
xabort
outsl
sbb
rcl
mov
pop
popf
xor
std
cli
pop
mov
outsl
sbb
push
mov
andl
lret
outsl
mov
movsb
or
pop
inc
les
shlb
cmpsl
cmp
fsubp
jno
inc
jne
pop
aaa
outsl
aaa
sub
mov
js
pop
lods
adc
and
stos
js
pop
cmp
daa
mov
cmp
mov
bound
les
leave
pop
fistpl
and
clc
adc
test
popf
sarb
pop
outsb
imul
subl
ds
xchg
out
push
outsb
push
enter
sahf
test
fmul
push
aas
scas
cmp
stos
hlt
jno
daa
lods
das
fcomp
mov
xor
push
add
mov
adc
test
icebp
std
sbb
subb
dec
ficoms
jle
out
sti
sub
jecxz
push
negl
sub
dec
jp,pn
push
jae
pop
into
push
adc
lods
sbb
fwait
or
or
stos
loopne
lret
cmp
sbb
mov
fyl2x
xchg
nop
mov
jp
cmc
sahf
sbb
les
hlt
or
xor
das
mov
or
cmp
xor
stc
sbb
inc
shl
enter
pop
stc
popa
bound
mov
cmpsb
int
imul
aam
fldenv
jae
fildll
fbld
mov
cmp
clc
addr16
jl
add
push
cmpsl
stc
ret
xchg
movsb
fs
aas
es
aas
and
imul
fs
jae
cwtl
ss
xchg
loop
or
aam
int3
add
xlat
push
mov
ss
mov
lcall
mov
in
adc
ljmp
adc
cltd
xor
loope
out
shrb
out
sarl
pop
adc
movsb
jb
push
and
jecxz
push
mov
inc
ss
xor
repnz
pop
add
sub
mov
js
lret
iret
or
mov
mov
sub
nop
mov
sub
or
inc
sub
lods
int
rolb
pop
sub
stos
enter
jns
mov
dec
outsl
stos
repz
clc
test
sbb
inc
xchg
sbb
push
fiadds
mov
icebp
or
gs
repz
sbbl
inc
in
mov
and
jae
mov
xchg
mov
push
clc
push
add
ss
xor
in
cltd
call
popa
loop
out
mov
clc
mov
jo
mov
movsl
dec
scas
jge
cltd
int3
inc
mov
add
xor
cmp
clc
sahf
adc
loop
imul
stc
rolb
lret
and
push
outsl
and
sbb
lds
fstpl
cmp
and
push
or
lcall
xchg
dec
inc
push
sbb
test
sahf
push
push
mov
jmp
pop
das
lods
je
cmp
mov
subb
lods
rolb
mov
mov
lret
fs
stos
int3
pop
or
xor
loop
stc
rorb
insl
lods
cmpb
sbb
cmp
xlat
fwait
push
ja
add
inc
leave
or
cmpsl
int
push
enter
push
ljmp
pop
fstpt
loop
pop
jbe
or
out
and
push
cmp
xchg
jmp
xchg
in
test
std
rclb
int3
shl
mov
mov
rclb
mov
insb
cli
sub
mov
inc
icebp
sub
sub
xor
jnp
movsl
es
lock
lcall
hlt
or
leave
pop
in
cmp
insl
cmp
into
and
clc
mov
cmc
in
push
pop
mov
clc
lock
cli
xchg
xor
cmp
and
in
lret
cmpsb
pop
xor
push
lds
fdivrs
or
jmp
mov
ficoml
cmpsl
fwait
xor
lods
or
mov
dec
movsb
xor
pop
vmovaps
sbb
das
push
imul
mov
cli
add
fwait
jle
or
loopne
or
loop
cmpsl
call
andb
aas
lret
mov
repz
cmp
cmp
mov
mov
sarb
mov
mov
pop
out
cwtl
mov
insb
pop
push
outsl
lret
push
repz
int3
dec
clc
lahf
jae
out
push
mov
jae
adc
test
fwait
xchg
mov
jecxz
add
lret
xchg
xchg
lret
ret
cld
lret
mov
xchg
jnp
mov
arpl
popf
fistps
xor
push
scas
aam
orl
in
mov
xlat
inc
jg
lea
and
push
pop
rclb
jle
jecxz
add
pop
rcrb
loop
rcrl
add
movsl
pop
push
out
dec
mov
inc
push
cs
icebp
dec
mov
aam
loop
cmp
cli
test
add
mov
divb
cmp
daa
pop
es
mov
or
jno
add
dec
std
xor
mov
adc
mov
repz
mov
or
fldl
rdmsr
insl
in
cmpsb
daa
cmpsl
xor
out
fistps
mov
dec
add
push
repz
adc
or
fisubrl
neg
or
mov
popf
push
testb
loop
mov
lahf
stos
xor
xor
xor
loopne
cwtl
lock
mov
push
jmp
jp
inc
mov
mov
icebp
fnsave
fstps
jl
add
pushl
sbb
xlat
sbb
or
movsb
add
jno
data16
inc
push
push
pop
pop
fistpll
sahf
stc
inc
mov
pop
daa
lods
jg
push
cli
clc
rcrl
jecxz
stos
mov
ja
popa
adc
jge
sbb
std
clc
and
repz
stos
js
or
pop
jbe
jp
cmc
lock
movsb
push
cmp
clc
les
dec
dec
sub
push
pushf
mov
mov
enter
rorl
jnp
jmp
pop
std
ds
mov
dec
pop
and
jo
xchg
int
scas
fbld
imul
enter
push
cs
popa
testb
mov
jnp
cmpsl
std
insb
fiadds
lds
jnp
lods
mov
mov
or
andl
mov
xorb
in
movsl
mov
cmpsl
pop
hlt
lret
test
push
stos
stos
fucomi
mov
aas
stc
inc
lahf
test
lods
out
xor
mov
ret
in
cli
stos
xchg
out
ficompl
or
test
push
sub
push
lret
inc
ret
cmp
inc
call
jge
test
push
jl
lock
xchg
in
roll
filds
gs
repz
dec
out
inc
icebp
mull
mov
push
and
xor
insb
cmp
mov
xchg
xchg
ret
jne
fnstsw
cmp
cmc
add
iret
das
or
into
test
pushf
dec
jae
in
repnz
hlt
out
cld
lcall
mov
lahf
mov
pushf
cmc
jbe
cmp
inc
sbb
push
mov
cmp
insl
adcb
cmpsb
push
sbb
aad
xchg
dec
push
and
aas
pop
aam
pop
mov
aam
lret
mov
jae
dec
push
sbb
jmp
aas
fwait
idiv
mov
jbe
cmpsb
add
sbb
jle
pop
pop
mov
mov
in
jno
sub
popa
jne
inc
jns
dec
xor
sub
pop
lock
cmp
mov
cmp
inc
mov
insb
pop
dec
test
imul
push
or
les
mov
cmc
shll
xchg
movsb
mov
xlat
dec
cld
xor
ror
lret
leave
stos
sub
push
sbb
call
int
sub
xchg
in
mov
stos
cmp
cmpsl
add
dec
xor
fcomi
insl
sbb
xor
cmp
addb
and
movsb
push
jns
cmc
add
mov
dec
jge
xor
mov
push
jb
rcrb
push
cmp
xor
int3
xor
push
fsubrs
xchg
leave
loopne
insl
rolb
push
sarl
fldpi
les
std
enter
sahf
imul
insb
and
js
dec
add
sub
inc
jle
jae
cmp
sbb
mov
inc
pop
sti
adc
adc
push
call
xchg
mov
scas
enter
add
das
mov
mov
sub
xor
cmp
out
ds
jne
enter
sar
icebp
stos
inc
stc
fistpll
pop
adc
add
add
outsb
or
mov
and
add
cs
inc
pop
push
fidivl
sub
sbb
and
xchg
ljmp
loopne
shl
xor
dec
loopne
push
es
scas
xor
add
push
pushf
mov
ljmp
mov
push
add
orl
xor
sti
or
add
adc
dec
jge
lret
aas
and
and
jo
sahf
cmp
pop
push
lret
push
imul
stos
icebp
xlat
sbb
test
daa
or
dec
mov
mov
mov
repz
fdivr
mov
push
scas
rclb
dec
orb
inc
fstpt
mov
or
xchg
arpl
lock
jbe
xlat
daa
movsl
push
nop
sbb
adc
cmp
jle
ror
mov
dec
add
out
xchg
push
movb
cmc
repz
subl
bound
dec
or
jae
fstpl
lods
xchg
data16
cli
popf
xor
push
jp
mov
popf
es
loope
cs
sti
orl
xchg
push
fisttpl
stos
pop
cwtl
in
into
and
jge
adcb
mov
jmp
lock
jno
xchg
jg
cld
dec
int3
into
pusha
ja
or
pop
sbb
lock
xor
hlt
adc
nop
cmp
scas
xchg
jmp
xor
xlat
xchg
ljmp
jle
outsb
lods
inc
and
out
inc
aas
stos
and
or
push
push
push
dec
xor
jle
les
pop
push
cmpsl
or
xchg
cs
mov
mov
jecxz
subl
adc
dec
push
xlat
icebp
cmp
and
sub
data16
int3
push
xchg
pop
pop
xlat
inc
xchg
rcll
inc
scas
cmp
adc
lret
xlat
push
mov
movsb
dec
and
inc
imul
ds
outsb
jl
pushf
mov
add
pushf
pop
or
or
inc
mov
int
lods
test
jno
dec
add
push
adc
push
push
or
jle
sub
mov
sub
or
lahf
rolb
lcall
ja
mov
repnz
cltd
int
int
and
cmc
or
jp
jno
xchg
sbb
lds
adcl
dec
pop
cs
rclb
imul
ret
lret
dec
inc
popa
push
inc
and
lret
stc
stos
xchg
mov
test
jo
fwait
xchg
adc
bound
bound
push
dec
inc
or
inc
xlat
repz
hlt
xchg
fsubl
jmp
jle
ljmp
vrsqrtps
adc
fwait
pop
fmul
push
adc
mov
stos
push
mov
mov
jecxz
inc
cmpsb
rcpps
test
pusha
and
lcall
addr16
pop
out
xor
test
cmpb
cmpsb
dec
pusha
push
lea
dec
xor
pop
pop
mov
sub
pop
loope,pt
mov
adc
lods
jbe
xchg
into
int
in
fistps
pop
and
andb
mov
sbb
ja
out
mov
mov
inc
lods
and
sbb
mov
iret
test
negl
push
jae
repnz
ja
push
push
sub
data16
lea
out
jmp
cmp
jno
movsb
mov
es
pushf
lret
add
xorl
cmp
mov
mov
outsl
cmp
mov
push
lock
rcrl
pop
xchg
in
xchg
icebp
into
sbb
mov
pop
pop
orb
popf
jle
lods
add
adc
xchg
stos
xor
aam
push
lea
inc
and
outsl
mov
add
rorb
pop
lea
adc
cmc
loop
call
jecxz
and
lcall
or
and
pop
inc
xchg
jbe
inc
jbe
mov
xor
call
push
mov
inc
notb
jle
stos
sbb
lret
sbb
sbb
aas
jbe
xor
shll
fldl
repnz
xchg
outsl
out
aas
push
cmp
push
pop
call
adc
imul
inc
aad
dec
xor
cmpsl
and
movsl
fildl
xor
movsb
test
or
pusha
pushf
mov
xor
push
xor
jmp
lcall
std
out
and
loopne
fcoml
mov
or
cmp
add
cmp
push
inc
xchg
out
out
cmc
out
popa
xor
xchg
pop
test
movsb
bound
mov
shll
mov
lahf
ljmp
jo
sbb
add
aaa
xchg
aam
jnp
int
ja
mov
pop
movl
into
xor
and
mov
lcall
setbe
mov
outsl
jne
xchg
arpl
pushf
aas
jle
pushf
push
xchg
jmp
popf
pop
nop
das
int3
jne,pn
and
fisubrl
sbb
test
pop
or
xchg
xchg
pop
inc
adc
push
xor
into
fwait
mov
sub
cmp
adc
mov
out
out
movsl
dec
xchg
dec
ss
sbb
pop
fndisi(8087
add
lods
or
dec
push
andb
mov
imul
sbb
sub
loop
inc
adc
test
hlt
push
and
sub
push
gs
test
in
adcb
popa
pop
and
push
les
adc
loop
or
cmpsl
fimuls
sbb
lea
cmp
push
inc
and
dec
cmp
xlat
jp
xlat
divl
jo
inc
pop
repnz
mov
int3
xchg
mov
lods
push
xchg
cvtdq2ps
into
jne
cli
cmpsl
cld
cmp
and
call
add
ret
cmp
cmp
push
insb
pop
push
notb
imul
sbb
push
jb
xchg
sub
inc
ds
repnz
cmp
push
jns
es
or
sub
int3
stc
pop
cs
imul
f2xm1
xlat
mov
icebp
cmovb
jge
xchg
cmpsl
arpl
repz
cmp
das
mov
cmpsb
std
icebp
clc
clc
pop
fiadds
sub
cmp
je
bound
je
fsts
fcomps
mov
notb
xchg
aad
fmul
repnz
dec
and
mov
into
pushf
xlat
jne
mov
je
dec
mov
xchg
sti
imull
mov
jl
sbbb
pop
xchg
jbe
sti
or
adc
sti
cwtl
sbb
enter
xchg
and
cmpsb
fbld
ja
fwait
push
jno
mov
adc
loopne
js
in
std
sbb
dec
inc
push
dec
push
repnz
out
sub
sub
xor
jo
repz
xchg
mov
push
push
xchg
std
jne
cmp
jecxz
cltd
loope
cmp
repnz
imul
pop
out
cs
push
jle
pop
pusha
push
cltd
cmpsb
xor
jle
pop
xchg
mov
mov
scas
and
jle
and
mov
je
adc
pop
inc
and
pop
dec
pop
fs
in
test
std
pop
imul
or
push
or
popf
sub
dec
js
inc
pop
out
push
and
xor
fcoml
jmp
inc
add
lret
ret
fs
push
mov
sbb
adc
cmpsl
fwait
or
push
jbe
cmpsl
pop
dec
cmp
int
out
sub
movsl
mov
jmp
call
pop
and
mov
jnp
inc
scas
mov
int3
vcvtps2dq
arpl
add
test
ror
aaa
dec
imul
fwait
loopne
out
pop
pusha
or
rol
pop
adc
movsb
jle
repnz
ljmp
add
pop
in
dec
lcall
cmp
pop
push
pop
lock
and
les
aas
lcall
inc
fiaddl
rclb
je
add
or
sub
mov
mov
adcb
dec
or
xchg
pop
popa
int
iret
cmp
out
je
and
dec
xlat
and
mov
fnstenv
repz
jl
jmp
push
popf
mov
push
push
mov
test
inc
pop
pop
adc
int
push
push
xor
sbb
shl
int3
addl
dec
scas
cltd
xchg
mov
sbb
pop
nop
adc
adc
or
mov
test
dec
pushf
cmpsb
fwait
sub
jle
test
xor
out
add
adc
dec
push
popa
sti
mov
mov
cmpsl
es
int3
stos
add
xor
xor
xchg
ljmp
pop
dec
arpl
popa
ss
sub
add
cmc
or
lret
jmp
mov
and
movsl
adcb
aam
out
pop
mov
in
call
mov
js
cmpsb
add
or
adc
push
mov
fidivrl
in
xchg
shrb
repz
xchg
sbb
dec
pop
loop
sub
scas
lods
imull
test
jp
call
insl
test
mov
push
jg
pusha
ret
mov
xchg
mov
mov
mov
adc
xchg
repnz
and
jmp
and
loope
into
pop
inc
scas
leave
xchg
jbe
rorb
xor
xchg
mov
push
dec
lods
sub
scas
xchg
cmp
fcoml
cmpsb
stos
test
cli
jp
rcrb
ficoml
shlb
xor
jp
in
mov
cltd
int
aaa
push
push
mov
aad
mov
sbb
adc
test
cld
cli
add
mov
stos
mov
dec
sti
xchg
and
push
in
cwtl
int
jno
add
mov
pop
sti
lods
mov
lahf
out
andl
in
push
jbe
mov
test
in
mov
aam
fadds
xchg
in
stos
sub
jl
popa
mov
mov
pop
push
cmpsb
icebp
loope
fs
aam
sbb
lods
and
pop
add
fbld
stos
fdivs
dec
inc
add
out
sahf
test
iret
stos
hlt
pushf
xchg
or
idiv
jne
lods
add
cltd
rorl
xchg
out
daa
dec
std
push
inc
dec
leave
mov
imul
pop
stos
mov
xchg
and
mov
xchg
or
call
cmpsl
push
out
shl
stos
shlb
pop
sbb
nop
pushf
sbb
push
cmpsb
lock
popa
movsb
out
lret
pop
leave
xchg
test
popf
test
leave
into
add
or
into
imul
lods
loope,pt
in
imul
sub
out
data16
lret
int3
cmc
test
scas
je
sti
or
ljmp
movsl
std
cmp
das
jns
pop
xchg
pop
mov
and
je
pop
bound
mov
dec
inc
xor
cmp
mov
repz
clc
add
inc
lea
dec
pop
test
and
mov
pop
mov
data16
not
adc
mov
test
je
into
cld
xor
idivl
xchg
js
mov
push
mov
std
nop
ret
sbb
mov
add
push
inc
mov
mov
sub
subb
faddl
add
popf
cmpsb
sub
push
in
data16
insb
jo
int
in
scas
orb
rclb
push
ret
add
bound
jo
mov
roll
sahf
push
sub
pop
insl
movsl
cli
push
mov
mov
adc
mov
call
cmpl
push
clc
out
jmp
mov
cmp
mov
lock
push
imull
xor
mov
lds
cmpsl
int3
cmpb
out
mov
xchg
inc
mov
sbb
out
or
adc
out
jb
xchg
int3
or
aad
mov
mov
out
mov
loop
xor
shrb
stos
stc
jmp
pop
fistps
xlat
pop
push
mov
leave
hlt
sub
sbb
stc
mov
cs
cmp
fs
outsb
in
xor
dec
and
and
fcoms
fsubl
xor
fidivl
iret
jle
push
imul
sbb
fmull
insb
stos
sbb
scas
mov
aas
inc
push
cli
or
lods
inc
shll
cmp
or
in
inc
jb
xor
insb
cmp
into
adc
shll
fcomps
loope
out
push
out
rclb
sub
jmp
lock
aas
repnz
sub
and
pop
lock
or
cli
or
scas
push
dec
jle
test
xchg
loop
cmp
clc
push
leave
or
in
inc
lret
jbe
pop
iret
push
ds
fbld
stc
jp
jne
das
push
into
mov
dec
inc
leave
sti
jne
jle
push
xor
fisubrs
imulb
imul
jg
jg
cltd
enter
shr
ret
mov
pop
pop
stos
add
jb
int
jp
and
in
ds
xchg
adc
mov
adc
movsl
fcoml
sbb
lret
push
lods
insb
jmp
mov
cmp
push
lahf
ficoms
mov
jl
test
add
mov
xor
mov
aad
xchg
add
and
dec
inc
add
sbb
lock
mov
fidivs
sbb
xchg
mov
sbb
out
sbb
mov
rcrl
jl
cmp
int3
test
mov
push
enter
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
test
orl
adcl
mov
add
add
xor
push
sub
pop
push
lds
movsb
pop
and
dec
stos
les
pop
jp
and
mov
test
cmp
int3
loopne
push
fs
mov
insl
pop
mov
push
xchg
and
jo
add
mov
pop
out
jg
lahf
stos
dec
add
in
cs
mov
dec
aaa
and
dec
jnp
cmp
push
int
sbb
movq
push
jmp
ss
xchg
jmp
ret
and
adc
scas
pushf
int3
xchg
test
jle
adcb
adc
sub
cmp
hlt
sbb
xor
ret
fdiv
mov
fistpll
sbb
inc
int
mov
outsl
scas
je
xchg
and
xor
test
movsl
push
push
daa
in
jle
xchg
inc
nop
adc
loopne
mov
cwtl
daa
cmpsb
aaa
xchg
lahf
lods
addr16
mov
push
adc
xor
xor
loop
cmp
js
jno
repz
push
lods
shrb
out
sub
dec
jae
add
in
and
dec
push
xchg
xchg
push
add
pop
into
ds
xchg
push
jo
sbb
xchg
gs
dec
lea
imul
push
mov
pushf
mov
mov
daa
arpl
mov
cltd
add
jb
in
pushf
insb
sbb
jl
sarl
sbb
stos
jl
mov
sub
and
cltd
es
sbb
ss
xor
or
and
inc
imul
imul
sarl
mov
lock
mov
mov
adc
sti
test
cmp
dec
and
mov
jb
dec
pop
cmpb
add
ret
loopne
cmp
mov
jmp
out
pop
xchg
ljmp
and
loop
mov
mov
jmp
std
scas
cmpsb
testl
iret
pop
or
push
xor
mov
push
jge
jb
xchg
add
testb
fwait
pop
xlat
xor
std
cwtl
stos
cli
mov
adc
mov
cmp
lock
mov
fs
jno
leave
ficoms
pushf
cwtl
rorl
cld
lahf
xchg
js
mov
subb
push
sbb
jp
mov
sbb
shlb
sti
or
cld
mov
enter
jno
and
cmc
add
jecxz
fidivs
or
aad
sub
cmp
xchg
adc
cmpsb
cld
cld
daa
mov
mov
je
imulb
fcoms
test
aaa
xor
mov
sub
cmp
fisttpll
lds
lds
xchg
mov
inc
xlat
mov
pop
out
aam
es
out
mov
and
add
or
enter
add
rcll
ljmp
sub
adc
sti
pop
add
cmp
jmp
out
repz
push
inc
push
mov
fistl
cmpsb
adc
inc
out
push
shll
scas
aas
fcmovu
ljmp
cld
jae
xor
loopne
and
mov
xchg
mov
mov
test
add
cs
pusha
fsubr
orl
jne
sbb
outsb
xor
movl
ret
push
sti
lcall
iret
mov
xchg
scas
ja
mov
xor
loopne
xchg
and
mulb
sbb
ja
sub
shll
xchg
jge
sbb
insb
je
fldl
rol
shl
testb
and
dec
dec
bnd
adc
les
and
mov
sub
stos
sbb
leave
mov
leave
mov
lret
xor
test
cld
xor
mov
loopne
jge
xor
mov
push
jge
adc
scas
add
fldcw
repnz
sbb
and
xchg
pusha
adc
jp
movb
add
data16
stos
cwtl
push
mov
mov
jnp
cmp
pop
test
daa
mov
popa
jno
lahf
pop
decb
fnstcw
dec
jne
mov
sbb
mov
adc
imul
cmp
scas
mov
aas
aam
push
push
xchg
rorb
xchg
pop
mov
xor
lds
gs
pop
in
stos
or
imul
mov
pop
sbb
out
fucomp
mov
pop
pop
and
inc
and
mov
mov
xor
int3
fisubs
push
or
push
push
mov
int3
and
test
mov
ficoml
dec
mov
dec
sbb
sub
and
jmp
jbe
cmp
jge
and
jbe
mov
arpl
and
mov
lret
mov
sahf
and
pop
enter
test
mov
mov
outsl
push
hlt
outsl
xchg
xor
rclb
or
js
mov
lock
and
jg
or
popl
add
add
pusha
cmp
stos
pop
xor
or
outsb
es
push
push
pusha
pusha
push
adc
stc
add
cmpsb
mov
mov
adc
sbb
sub
les
or
jae
bound
push
dec
push
test
xorb
dec
mov
into
jg
xor
shlb
xlat
ds
xor
push
xchg
test
mov
sbb
outsl
int
sbb
sbb
ret
std
sbb
sti
rcl
cld
fcmovu
xor
xor
es
xchg
lods
push
add
mov
and
enter
mov
inc
xchg
adc
or
mov
xor
push
in
std
adc
lcall
outsl
jecxz
nop
fbstp
loopne
insb
xor
div
sub
dec
push
push
cmp
cmp
cmp
test
xor
popf
mov
mov
jge
xor
in
stos
mov
inc
fidivl
push
leave
mov
adcl
lcall
icebp
ficoml
das
dec
or
add
sub
push
arpl
in
in
jle
out
mov
jmp
mov
push
mov
jmp
and
stos
xchg
test
jmp
dec
push
sbb
adc
jno
pop
fcmovbe
and
pushf
mov
push
inc
inc
cmpsb
and
test
mov
faddl
xor
xor
insl
inc
negb
in
lret
iret
cltd
lock
jno
xor
fildll
jle
cmp
mov
fs
xchg
push
xorb
adc
in
ja
xchg
stos
cmp
push
push
jmp
mov
notb
pop
sbb
loope
bound
call
jne
jl
mov
mov
mov
adc
aaa
ds
emms
cmp
repnz
lret
repnz
in
or
jp
dec
ret
inc
or
sbb
cli
add
loopne
divb
push
jmp
mov
or
mov
lret
xor
sbb
xor
pop
mov
ss
leave
mov
mov
push
arpl
repnz
lea
mov
xorl
enter
inc
dec
sahf
lea
aas
add
mov
pusha
lods
movsl
les
andb
xor
test
negl
jp
aad
pop
adc
cltd
jns
push
pusha
pusha
icebp
bound
loop
mov
push
bound
pop
loop
out
les
dec
jb
pop
dec
lods
in
cmc
xor
lret
mov
mov
outsb
hlt
fdivrs
icebp
into
sbb
insb
cmp
fxch
icebp
xor
loop
cli
mov
xor
xchg
pusha
sbb
lahf
sub
call
cmpsl
inc
jne
dec
gs
inc
xor
imul
adc
and
int
or
pop
mov
jb
movsl
popf
cmp
sub
pop
pop
loop
adc
add
adc
test
imul
mov
in
cmp
popa
ror
jl
ds
aam
pop
fistpll
adc
rclb
sbb
clc
inc
cmpb
xchg
cmp
popl
sbb
dec
add
fwait
ret
test
cmp
xchg
mov
push
push
adc
add
scas
push
int
pop
push
addr16
jmp
or
ficompl
jno
mov
push
in
cmp
cs
jmp
insb
iret
pop
jg
std
cmp
push
pop
fstl
test
jmp
test
sti
add
or
loope
xor
out
ret
sub
push
movsl
xor
ret
out
lret
sbb
jl
cmpsb
aam
mov
adc
pop
push
lret
xchg
add
mul
negb
lods
jl
pop
jbe
xor
dec
lahf
xlat
dec
cmp
push
fldcw
sub
lea
aam
in
pusha
push
xchg
std
imul
das
rcr
int3
popf
fisubrs
cld
movsl
lcall
adc
mov
fistpll
loop
lea
mov
jo
mov
out
in
jp
out
pop
adc
shlb
fbstp
out
mov
clc
pop
cmp
out
iret
mov
inc
popa
repz
push
pop
or
pop
enter
insl
addr16
test
jo
test
insl
adc
cld
ret
mov
nop
xchg
or
mov
aam
xchg
dec
fists
lods
shlb
cmp
daa
loope
xor
sbb
xchg
popa
iret
movsl
pop
lock
adc
adc
fcoms
ret
out
cmp
test
add
lds
and
fnsave
or
mov
xchg
popf
in
jp
pushf
push
fs
pop
in
inc
cmp
push
int3
shll
or
add
test
push
int3
xchg
pop
pop
push
push
test
push
sbb
push
push
xchg
xor
add
adc
in
lods
imul
xor
into
push
mov
sub
es
jo
push
sub
inc
sti
cs
fists
cmp
leave
cld
add
jnp
fs
loopne
aas
lods
push
pop
xchg
inc
lret
cmpsb
push
fwait
add
mov
sbb
icebp
lock
push
cmp
outsb
loope
cmp
dec
dec
jo
bound
lcall
repz
sub
inc
in
jne
cltd
lods
stc
pop
xchg
jno
adc
lds
pop
lods
stos
push
fsubr
mov
lock
mov
mov
or
xor
adc
mov
xchg
dec
pop
mov
test
enter
movsb
loope
dec
mov
mov
add
ljmp
adcb
xchg
test
std
out
mov
lcall
iret
movsl
mov
adc
sbb
or
dec
fdivp
rcr
gs
cmp
mov
xlat
mov
jbe
mov
pop
jo
pushf
lret
mov
mov
mov
inc
push
jnp
lods
mov
stos
xchg
lock
nop
stos
inc
mov
xchg
sti
dec
out
js
out
sub
jo
xchg
inc
scas
xor
mov
push
xchg
insl
push
xchg
or
cmp
ret
insb
cs
pop
mov
mov
mov
jmp
clc
or
lcall
dec
ljmp
ljmp
daa
int3
rorb
or
and
dec
push
je
js
out
nop
inc
dec
fs
roll
pop
subb
das
fisubs
aas
xor
push
or
shlb
jns
add
push
xor
jge
test
fcmovne
sahf
aad
push
std
sub
stos
mov
loopne
xchg
mov
sub
popl
sub
adc
out
movsl
pop
cmpsl
pop
stos
out
lcall
adc
push
lock
dec
mov
jnp
subl
mov
pop
mov
pop
mov
sahf
outsl
rol
push
fisttpl
mov
lahf
xchg
jp
pop
fisubrl
shl
stc
add
inc
jge
push
repz
cld
dec
add
dec
int
lods
mov
xlat
jmp
lahf
subl
movsl
xadd
pop
iret
xor
jecxz
jo
jg
jns,pn
pop
repz
imulb
test
out
sbb
test
sub
pop
push
inc
test
pop
mov
pop
in
lock
ds
scas
shrb
in
int3
and
dec
push
push
cld
shrb
fiadds
jbe
dec
dec
stos
dec
push
mov
mov
out
cli
hlt
mov
shll
lea
fs
or
mov
fnstenv
arpl
dec
inc
bnd
scas
ret
cli
jns
xor
filds
sub
add
jle
je
hlt
loopne
lock
scas
cltd
pop
push
mov
shrb
mov
das
gs
jo
rcl
imul
jp
mov
out
fnstcw
mov
ds
pop
push
cmpsb
pop
cmp
out
xor
jg
shrb
lret
inc
push
jmpw
or
jo
mov
dec
insl
adc
das
stos
testb
lds
and
outsb
mov
or
lds
and
fidivl
sahf
pop
insb
mov
inc
jo
mov
pusha
fdivrl
jp
jmp
fbld
inc
inc
fstps
std
pusha
imul
retw
xor
sahf
pusha
jb
insb
dec
flds
shl
push
mov
loopne
adc
xchg
dec
aaa
stc
and
loope
pop
xchg
fstps
imulb
daa
xchg
xchg
xchg
into
dec
jmp
dec
dec
sub
pop
mov
mov
mov
mov
bound
js
mov
pop
adc
fmuls
pop
cltd
pop
and
push
mov
push
test
shl
add
mov
add
or
mov
stos
sub
and
push
fs
je
and
mov
aad
mov
and
sahf
adc
jnp
sahf
add
rolb
pop
sbb
inc
mov
mov
xor
xor
mov
xchg
mov
popa
push
fsub
pop
add
or
and
nop
pop
and
push
fstl
or
mov
andl
mov
into
insb
cwtl
inc
lret
fidivrs
shll
xor
mov
and
fistl
cmp
xchg
mov
and
sub
stos
add
push
stos
scas
mov
out
sbb
daa
adc
fidivl
aaa
ja
adc
movsb
jbe
push
mov
xchg
add
mov
sysexit
dec
and
insl
cmp
pop
loope
popf
jp
dec
ret
and
push
pop
or
cli
xlat
or
cmp
ss
fisttpll
sbb
enter
loop
mov
fs
cli
icebp
lods
fnsave
ja
dec
xor
push
mov
jbe
js
in
imul
mov
fcompl
movsb
dec
or
testl
test
repnz
or
adc
fs
pushf
cmp
jne
fcoml
mov
cwtl
pop
lret
out
jecxz
lock
out
rcrl
loope
mov
inc
cmp
mov
adc
push
and
mov
es
xchg
jle
into
cld
fwait
cmp
fadds
cmpsb
or
ds
icebp
push
insb
gs
addb
clc
pop
cli
pop
mov
push
fsubl
or
push
out
sub
mov
pop
inc
push
or
std
add
xchg
out
cmp
in
ljmp
jb
cltd
cli
push
jl
jle
inc
mov
idivb
subb
in
cmc
nop
or
imul
sub
lods
mov
cli
cmp
mov
jg
and
xlat
jg
push
mov
mov
pop
jl
bound
xchg
and
or
push
inc
lds
rorl
add
jb
add
mov
sbb
mov
cmp
pop
mov
adc
pop
cmp
cwtl
popf
jno
inc
cmc
hlt
pop
jle
xchg
mov
std
dec
fwait
in
cs
mov
dec
inc
add
adc
movl
sbb
in
pop
sbb
and
dec
es
mov
insb
bound
aaa
test
or
xchg
pop
ja,pn
add
js
pusha
sahf
pop
dec
cs
loop
test
mov
xchg
std
cmp
cs
cmc
mov
sbbl
jg
cmc
out
sub
push
aad
repz
or
xchg
mov
cwtd
sbb
aam
loopne
xor
cltd
lret
push
clc
out
mov
insl
test
lcall
push
mov
mull
fldcw
add
hlt
mov
xor
mov
cmp
pop
nopl
jns
hlt
xchg
scas
push
and
mov
or
jmp
and
mov
bound
repz
lcall
nop
sub
push
iret
mov
inc
push
jmp
ss
mov
xchg
std
cltd
jae,pn
xchg
xchg
jbe
inc
bnd
inc
inc
mov
dec
mov
sbb
shlb
loop
xchg
or
outsb
add
adc
sbb
adc
cmp
pop
and
push
pop
pop
fcomi
jl
jo
sarb
aad
into
out
test
cmc
and
mov
mov
outsb
mov
nop
lcall
add
push
or
scas
scas
and
dec
lret
scas
xor
jge
sub
push
lcall
test
mov
xchg
jns
sub
push
sbb
aam
lods
mov
idivb
mov
lret
inc
shrb
adc
repz
stos
fsts
les
cmpsl
add
repz
pop
dec
decw
add
js
sub
jno
xchg
jne
xchg
push
movsb
mov
sbb
mov
push
cltd
or
xor
js
add
test
mov
jae
or
mov
loop
rclb
mov
jbe
hlt
fidivl
jbe
das
je
bound
in
xchg
pop
mov
jno,pn
jg
mov
call
arpl
out
movsb
mov
and
stc
lea
jp
push
stos
xchg
xchg
and
lea
aad
repz
adc
jge
jne
adc
pop
sahf
pop
sahf
inc
ds
call
cmpsl
dec
mov
mov
dec
jo
dec
jle
inc
test
fsubl
insb
push
mov
ja
pop
fiadds
mov
fcomp
in
lods
cmp
xchg
sahf
int3
loopne
shrb
adc
js
or
fwait
sahf
test
adc
mov
test
add
cmp
and
lds
sahf
or
scas
lea
jo
add
push
test
test
aad
shlb
adc
mov
outsb
leave
xor
pop
xchg
push
inc
pop
xchg
std
push
adc
mov
in
inc
out
movsl
repz
push
lods
jl
xor
addr16
out
mov
dec
and
mov
rolb
adc
and
aaa
or
insb
dec
mov
xor
jg
sbb
or
jae
pop
lahf
push
inc
cs
aaa
fcoml
icebp
inc
mov
jg
or
mov
jo
sbb
shrb
hlt
inc
jge
mov
add
icebp
stos
add
adc
pop
xor
call
add
adc
stos
icebp
ret
jne
sbb
xorb
and
mov
fcomi
sbb
xchg
mov
sbb
xchg
sbb
lcall
sarb
ja
test
sub
jmp
popa
fwait
inc
shr
test
pop
sub
mov
mov
icebp
cmp
lahf
arpl
lcall
into
ljmp
sbbl
lods
fs
push
cmpsl
sbb
imul
inc
ret
in
add
cmpb
dec
cmp
xchg
pushf
fcom
push
xlat
mov
cmp
xchg
int
rclb
push
ljmp
iret
mov
fwait
popa
mov
in
pop
dec
loope
sub
repz
ja
out
push
outsb
pop
out
test
and
add
cmpsl
fisttps
test
leave
inc
stos
push
andb
xchg
cmp
mov
mov
xor
sub
stc
loop,pn
pop
js
mov
repnz
sbb
loop
sarb
fs
add
inc
and
inc
pop
and
sbb
adc
stc
test
divl
lcall
cmp
and
aaa
mov
adc
pavgw
push
dec
loop
jne
sub
sub
lds
cmp
push
std
fwait
or
push
adc
test
addr16
cld
sbb
mov
shrb
mov
sbb
pop
out
or
packuswb
sbb
ds
aaa
fldt
xor
pop
push
adc
cmp
pop
cmc
or
test
mov
inc
pop
popf
sbb
pop
adc
and
es
cwtl
mov
and
daa
sbb
or
out
leave
dec
ljmp
pushf
mov
loope
cmp
dec
pop
fwait
mull
and
das
push
mov
in
pop
ja
fldl
cmp
ss
add
sbb
scas
mov
dec
add
adc
test
es
sub
adc
hlt
lcall
jnp
mov
pushf
fildl
popa
shlb
arpl
pop
and
xor
jl
push
and
push
mov
cmc
mov
and
ret
xor
loopne
aad
or
mov
adc
sub
cmc
loop
cmp
jecxz
mov
jmp
inc
notb
mov
clc
out
jmp
and
jle
and
push
stos
mov
dec
or
cmpb
in
sahf
bound
xchg
xlat
neg
xchg
jecxz
pop
stos
in
or
lret
jecxz
int
and
hlt
cltd
daa
lret
mov
push
hlt
push
outsl
fcmovnu
dec
or
test
orl
push
arpl
and
jl
or
mov
test
test
cs
mov
jo
lea
dec
xchg
mov
adc
xor
mov
mov
xor
push
xchg
push
cmp
pop
adc
mov
lods
fs
stc
fsubl
divb
pop
jge
cmp
lds
int
aam
pop
jecxz
cs
repz
or
es
mov
in
adc
lds
add
adc
cmpsb
stos
mov
xor
mov
gs
xor
add
push
jmp
push
push
out
pop
sahf
cwtl
xor
push
mov
ficoml
enter
pop
lea
sbb
dec
js
out
sarl
or
ret
sti
cmp
mov
push
xor
pop
dec
push
xchg
sarl
fmull
flds
testb
push
jmp
mov
push
push
adcb
cmp
cmp
das
sar
mov
jns
push
sahf
pop
add
sbb
xlat
dec
inc
fucomi
decb
adc
inc
sbb
mov
push
in
into
sub
int
push
cmp
mov
xchg
push
xchg
jns
scas
or
popf
xor
stc
lock
push
lds
and
pushf
inc
mov
add
int
inc
imul
rolb
jmp
rorb
pop
sahf
push
mov
nop
andl
jbe
pop
in
fistpl
scas
fisttps
jecxz
int
lods
or
xchg
mov
xor
cmp
and
negb
ja
int
cmpsb
xchg
sahf
pop
pop
adc
mov
lret
add
shll
mov
mov
test
and
lea
mov
je
repnz
pop
jg
xchg
test
test
fwait
xor
out
ja
out
cmp
pushf
fcomps
adc
ficoms
addr16
xor
jno
std
lret
mov
push
mov
inc
fcoml
outsb
mov
inc
js
and
xchg
inc
xchg
or
int3
jle
test
icebp
jg
cmp
testl
sbb
and
outsb
insb
mov
push
fs
pop
lret
ljmp
fwait
inc
pop
adc
add
xor
arpl
push
data16
lock
stos
imul
popa
ret
sbb
adc
std
mov
lret
adc
xor
jne
push
jnp
fs
add
mov
addr16
add
jbe
popf
pop
dec
inc
sub
icebp
pop
jge
add
in
or
fisttps
inc
fbstp
ret
iret
std
in
scas
add
mov
cltd
mov
or
adc
negl
cmpsl
shl
push
in
je
test
or
push
pop
in
popf
adc
cmp
setno
cmp
mov
fnstenv
jnp
adc
test
mov
jo
mov
imul
loope
dec
or
lods
popf
push
lods
pop
xor
lcall
in
sbb
mov
cmp
mov
dec
inc
test
popa
dec
movl
stos
jno
leave
std
and
dec
push
adc
push
lret
mov
popa
adc
cltd
outsl
cmp
mov
sti
inc
pop
mov
mov
fistpll
loop
xchg
jl
mov
push
arpl
lea
inc
ljmp
in
rcrb
adc
mov
rcrl
ljmp
jp
cld
adc
aam
pop
popa
mov
mov
mov
adc
pop
insl
sahf
sahf
inc
add
imul
sar
lea
xchg
mov
je,pt
stc
adcl
adcl
ret
aaa
push
jne
out
push
aas
scas
jecxz
es
outsb
adc
addl
adc
cltd
dec
aaa
popa
mov
sahf
mov
daa
imul
lret
jno
mov
pop
aad
xchg
cmc
xchg
push
sbb
xor
popf
xor
pop
xchg
es
cli
ljmp
dec
out
jmp
mov
sti
cmp
or
js
jo
movsl
or
fcmovnu
inc
sahf
sbb
fidivl
mov
inc
pop
adc
xor
ja
dec
sahf
jo
cmp
sub
and
xchg
push
in
xor
xlat
inc
nop
push
sub
aam
xchg
jmp
cmp
aaa
bound
shrb
stc
icebp
jb
and
sub
loope
xchg
pop
xor
andl
cmpsb
std
int
xchg
and
xchg
sub
lret
pop
mov
cmp
aas
imul
mov
shlb
ljmp
lods
sbb
jb
cmp
mov
pop
mov
rorb
fwait
adc
add
imul
aas
fldl
cmp
or
or
lahf
pusha
xor
add
cld
sbb
shll
add
and
test
cmpsb
sahf
or
xlat
stos
or
cmp
mov
je
pushf
mov
lcall
push
mov
out
xchg
lock
filds
push
xchg
inc
sarl
lock
cltd
cmp
mov
pushf
rclb
xchg
test
call
sub
cmp
mov
pop
jge
mov
jnp
adc
push
sub
inc
test
sub
jmp
imul
sub
cmc
adc
push
mov
fdivr
aas
nop
adc
push
jb
lds
mov
xchg
push
push
test
pop
mov
fs
xchg
mov
jg
push
clc
hlt
sbb
jb
shrb
mov
mov
pop
shlb
xlat
dec
fcmovu
int3
ja
ljmp
xlat
and
mov
shrb
jne
ror
in
jns
dec
pop
jne
pushf
lods
sub
negb
lods
movsl
sub
pop
out
in
loopne
ret
bound
sub
into
dec
or
hlt
pop
aas
rcrl
push
cli
sub
mov
test
push
pop
mov
add
or
lea
pop
mov
dec
lods
jnp
clc
dec
jp
push
shlb
inc
popf
cmp
xchg
sub
in
fsubs
push
ret
iret
sub
and
dec
test
jne
clc
mov
pop
aam
or
mov
test
cwtl
stos
sahf
sub
rorl
dec
pop
outsl
and
movsl
in
dec
movsl
jnp
jl
daa
dec
adc
mov
xor
mov
scas
dec
jp
xor
icebp
daa
subl
leave
push
lahf
lea
shr
pop
xchg
mov
jb
push
repnz
movsl
fwait
lock
pushf
sub
outsl
sar
cltd
mov
in
fwait
or
ret
pushf
jmp
dec
aam
pop
or
xor
sub
clc
not
xchg
mov
lcall
inc
sub
xchg
xchg
push
mov
jb
push
movsl
enter
fcoml
cmp
int3
ret
adc
dec
fstps
icebp
testb
jbe
mov
cmpsb
mov
xchg
andl
dec
push
popf
mov
xor
pop
mov
iret
test
adc
rorl
mov
cmp
neg
or
and
inc
mov
mov
aaa
xchg
int3
es
and
cli
lret
adc
mov
outsl
imul
xchg
inc
push
ret
or
inc
or
jae
sbb
pop
dec
mov
ds
or
mov
addr16
test
sbb
bound
jle
mov
ret
add
jg
int3
mov
inc
mov
insl
loop
dec
les
jl
mov
fucom
das
xchg
test
scas
push
fisubs
test
pusha
xlat
lods
mov
push
jne
or
adc
daa
xlat
dec
inc
out
sbb
and
sub
lret
or
push
add
imul
push
and
xchg
int
add
pop
scas
pop
aam
sbb
xchg
jnp
cltd
pop
xchg
and
insl
jmp
mov
hlt
adc
pop
outsb
mov
dec
daa
dec
out
cmp
xchg
dec
subb
stc
dec
aaa
jmp
sahf
fisubrs
arpl
add
sbb
es
and
xchg
pop
repnz
aaa
dec
push
test
pop
xchg
push
push
int3
rorl
dec
out
dec
adc
xlat
faddl
pop
sahf
xchg
pop
insb
loope
mul
push
test
cmp
or
mov
scas
xlat
push
in
jns
and
sbb
lock
lods
rorl
jmp
aas
mov
cmp
mov
push
popf
and
hlt
fstpl
mov
lock
jmp
pop
jne
outsl
aaa
leave
test
cmp
or
sub
inc
test
push
imul
fsubp
leave
outsb
push
pop
enter
mov
outsl
adc
push
push
ds
add
dec
add
out
or
and
dec
push
cmpl
jo
nop
jge
adc
into
cmp
jg
or
cmpsb
add
cmpsb
mov
cmpsb
stos
clc
and
cld
outsl
sub
ldmxcsr
iret
xchg
push
ret
into
fistpl
ret
arpl
les
xor
js
sub
arpl
cli
mov
sbb
sarb
rcrl
dec
pop
cmpl
push
and
mov
push
lcall
mov
call
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
xchg
push
mov
or
addl
movsl
push
add
xchg
test
add
cli
scas
rclb
jnp
or
lret
mov
sub
lret
mov
icebp
fldt
cmp
dec
push
cld
dec
sti
mov
sub
test
test
push
push
pop
mov
ret
xor
addr16
mov
mov
fistpl
inc
out
stc
sbb
adc
mov
cmp
or
xchg
lahf
icebp
js
dec
pop
and
in
adc
loop
jmp
sub
mov
jecxz
mov
pop
adcb
push
daa
imul
ljmp
pop
adc
nop
mov
inc
idivl
pop
imul
daa
push
iret
mov
ja
dec
arpl
xchg
xchg
push
cmpsb
fcmovnb
inc
add
lret
and
dec
int
sbb
cmp
test
push
pop
in
ret
dec
cmpsl
repnz
push
sub
dec
lcall
mov
ret
and
inc
orb
mov
stc
fs
adc
out
xlat
mov
xchg
dec
cmp
push
cmp
sub
sbb
imul
rcll
inc
imul
les
cs
sahf
or
dec
cmpl
das
mov
jo
out
mov
loope
out
xchg
testb
daa
xor
xchg
insb
cld
cmp
lahf
mov
sub
fwait
sbb
jne
xchg
jmp
test
inc
and
inc
decl
push
lret
mov
mov
xchg
mov
mov
dec
mov
mov
cmp
mov
mov
xchg
push
add
repnz
dec
out
dec
mov
dec
enter
clc
xor
dec
adc
and
sbb
mov
pop
outsb
mov
add
out
inc
adc
sbb
adc
jae
push
fwait
les
adc
mov
loope
sbb
cltd
test
and
inc
pop
into
out
fmuls
xchg
add
test
es
inc
les
pop
das
jmp
cmpsl
push
in
jnp
mov
lahf
fildll
jae
scas
in
es
jns
popf
jecxz
or
les
sbb
mov
cli
dec
loop
xor
jae
pop
push
mov
or
add
fldt
enter
mov
lods
cmp
fsubl
lods
and
stos
aam
jmp
int
aam
lock
jb
xor
adc
cmp
cwtl
aaa
add
mov
jecxz
data16
in
out
and
out
fistps
int3
adc
or
mov
in
imul
int3
ss
inc
or
jge
loopne
dec
pop
outsl
aam
pushf
arpl
push
nopl
jne
dec
cmp
mov
push
xor
xor
clc
fneni(8087
int
cwtl
xor
stos
dec
mov
negl
insb
jle
xor
loop
and
out
xchg
adc
xchg
mov
push
mov
cwtl
add
fcompl
dec
test
sbb
fdivr
adc
mov
outsl
jo
jecxz
stc
mov
jb
pop
stc
fs
fs
mov
mov
ds
jge
mov
std
inc
fwait
mov
pop
cli
imul
lret
xor
and
mov
stos
sub
sbb
and
rcrl
dec
xchg
movsb
mov
leave
mov
jmp
idivl
cmp
jns
out
aaa
les
lods
dec
into
mov
fs
clc
loop
xchg
imul
ss
ljmp
pop
test
into
imul
in
mov
adc
lret
stos
bound
add
xor
mov
mov
pop
xor
rorb
jbe
lahf
bound
mov
push
in
adc
fucomi
pop
push
jecxz
dec
xchg
ret
add
xchg
mov
hlt
andl
leave
cmp
inc
daa
mov
in
xchg
xchg
xor
pop
push
pop
sti
cmpsb
and
mov
xor
sar
add
mov
mov
or
inc
mov
mov
scas
imul
daa
in
fldt
mov
pop
push
addr16
add
sbb
popf
outsb
cmc
pop
test
ja
jl
cltd
test
stc
mov
rclb
pop
into
out
cmpl
mov
or
inc
dec
inc
int
int
andb
sbb
lcall
dec
jecxz
out
add
cli
sahf
xlat
inc
repnz
or
insb
mov
sahf
push
repz
mov
in
test
sti
adc
rcrl
mov
jge
test
adc
jne
lahf
or
xchg
mov
jp
lods
inc
sti
rorl
inc
stc
je
testb
lds
pop
adc
in
inc
push
adc
ret
sub
frndint
mov
add
icebp
push
xchg
ficoms
jno
fwait
rcr
push
xor
loop
jmp
inc
jecxz
and
mul
xor
jmp
push
in
es
in
fidivl
lock
in
int
addb
mov
mov
mov
or
outsb
jae
jp
sub
rorl
sbb
mov
inc
and
push
mov
xor
movsb
inc
push
aas
mov
movsl
cmp
pusha
pop
outsb
sbb
in
adc
sti
mov
push
loope
imul
mov
sub
aaa
test
fsts
add
jo
push
in
inc
sahf
outsl
adc
popa
xor
xchg
push
mov
mov
push
jg
dec
jne
jge
xchg
sbb
lods
pop
sbb
dec
sbb
cmp
icebp
mov
rcll
jp
out
jns
sbb
test
jnp
bound
in
call
mov
or
xchg
mov
mov
dec
dec
push
sbb
enter
daa
or
jle
sub
jle
push
sbb
mov
cmpsb
lret
in
xchg
sahf
mov
loop
xor
inc
push
test
mul
mov
jbe
lods
movb
mov
pop
sbb
jns
shll
jge
add
sysret
clc
jmp
fildll
pop
adc
push
adc
incl
mov
lock
fistpll
fldcw
pop
cmpsb
lods
iret
xor
jl
std
ret
dec
scas
cmp
callw
push
pop
cmp
inc
ds
call
data16
sar
jp
ja
lcall
aad
mov
and
sbb
int
insl
xchg
xchg
leave
cmp
push
leave
cmp
mov
int3
lea
xchg
clc
rol
nop
add
fists
jle
dec
stc
loopne
les
cmp
sub
stos
mov
aaa
xor
xchg
and
mov
pop
mov
arpl
icebp
xadd
out
dec
shlb
pop
popa
push
clc
xchg
bnd
arpl
push
or
jge
ja
cmp
in
loopne
sahf
aam
clc
xor
movsl
dec
dec
pop
xchg
imul
aas
pop
sub
xchg
repnz
mov
js
push
xor
jae
adc
pop
loope
insl
push
inc
fwait
dec
dec
sub
scas
call
xor
stc
inc
jmp
lret
arpl
je
dec
addr16
cs
shll
stc
push
and
cmp
sub
lods
ret
pop
pop
xchg
movsb
cmp
lret
mov
mov
adc
and
dec
mov
dec
fsubrs
sbb
js
es
fidivs
mov
mov
call
loopne
jb
movsb
jecxz
jb
fisubl
aad
inc
into
sub
insl
lock
mov
lahf
push
push
fbld
test
subb
fstl
fwait
and
loope
mov
sahf
shl
mov
jo
in
in
mov
mov
addr16
lcall
aaa
subl
inc
jg
repnz
loope
xor
lret
mov
pop
ljmp
test
jae
mov
jle
ret
push
out
and
dec
shlb
xchg
inc
jecxz
push
enter
xor
icebp
cs
mov
push
and
dec
lcall
shl
xchg
dec
pop
idiv
mov
add
popa
pop
sti
mov
not
xor
add
xchg
or
adc
add
add
out
cmpsb
fs
insl
xchg
aam
int
mov
stos
lret
cwtl
adc
cs
in
icebp
jo
or
mov
mov
adc
inc
jmp
xchg
out
xchg
jge
jae
mov
icebp
jnp
sub
loop
jmp
or
mov
xchg
repz
mov
notl
fildll
dec
bound
lods
pop
or
pop
test
sbb
scas
push
dec
mov
or
imul
into
rcl
push
xor
pop
xchg
xor
imul
and
pop
mov
stos
in
add
xor
mov
ljmp
sub
push
inc
mov
insb
mov
adc
push
in
bound
fs
sbb
js
xchg
push
lcall
xor
andl
inc
imull
arpl
jbe
in
push
mov
mov
jns
push
pop
int3
sub
xlat
pop
adc
fcompl
push
or
pop
jnp
and
push
pop
xchg
cmp
cmpsb
push
sub
sarl
subl
jo
push
and
bound
jo
or
mov
imul
fnsave
fwait
mov
loopne
mov
movsl
dec
pop
inc
shr
in
icebp
pop
xor
mov
enter
aas
or
mov
repz
clc
jg
xor
and
dec
out
jae
push
sbb
repnz
jnp
dec
hlt
cmp
cli
jp
repz
mov
ljmp
inc
cmpsb
int
jg
hlt
xlat
add
dec
mov
lds
daa
inc
in
xchg
xorl
pop
mov
sub
or
adc
std
inc
jbe
outsb
push
cmp
push
adc
in
push
or
test
and
incb
out
test
jne
out
pop
dec
loop
pop
mov
sub
je
rcrb
in
rcrb
dec
into
test
jae
jmp
push
rorl
push
lods
cwtl
jl
pop
mov
fimull
push
fldl
je
inc
negl
mov
pop
add
scas
inc
add
mov
sbb
mov
adc
xchg
data16
sbb
loope
dec
push
adc
in
movsb
sbb
mov
sti
jns
mov
and
add
or
call
cmp
ror
jb
daa
and
cli
lea
inc
cmp
add
adc
pop
cmp
push
push
sbb
add
enter
and
add
mov
ja
daa
pop
push
pinsrw
pop
sub
es
into
cwtl
push
ss
mov
jns
push
test
push
rolb
dec
jmp
aaa
inc
dec
cmc
outsl
cmc
faddl
xchg
inc
stc
and
xor
or
nop
jmp
in
jmp
out
test
sahf
add
cltd
mov
or
call
sti
ror
rclb
jno
pop
addl
pushl
mov
cwtl
sbb
arpl
sbb
pop
fdivs
jnp
lock
sub
mov
pop
pop
pop
fwait
mov
push
lods
lcall
adc
hlt
movsb
jmp
jle
lods
push
imulb
call
lcall
add
adc
cmc
pop
jbe
outsb
mov
sbbl
sbb
jge
jmp
in
jl
jo
dec
lds
test
lock
mov
mov
xchg
lock
or
xlat
lds
adc
xor
push
or
mov
imul
in
fcompl
sbb
mov
movsl
pop
pop
shr
fstpl
push
push
cmp
out
sub
cmp
sbb
mov
fs
test
inc
sbb
fbstp
add
dec
es
rorl
aas
je
cmp
iret
lods
lcall
sbb
jecxz
call
js
int
and
adc
xchg
pop
xor
cltd
jb
jns
dec
lea
xor
fiaddl
shl
sti
mov
sbb
jecxz
rolb
cmpsl
fdivrs
add
cli
and
es
outsl
mov
daa
and
push
loopne
lds
outsl
lods
inc
push
out
das
and
cwtl
inc
nop
sbb
jmp
negb
loope
push
fs
nop
jg
adc
push
inc
inc
lret
cmp
call
imul
not
pop
mov
cmp
stc
or
imul
push
jno
stos
add
add
adc
or
pop
fdivrs
call
adc
je
inc
repz
lret
jmp
push
ljmp
call
xor
fisubrl
adc
ds
jbe,pt
neg
or
pop
iret
adc
jb
in
movsb
jno
jmp
lcall
add
inc
pop
xor
int
xchg
js
xor
fsub
pusha
mov
aas
fs
jae
push
movsb
addl
stc
xor
sub
pop
ss
cmp
add
insb
mov
subl
sbb
int
int
imul
and
xchg
sbb
scas
mov
aad
adc
or
fisttpl
imul
pop
andl
sbb
cld
call
lcall
int3
shll
xlat
stos
adc
or
roll
aas
push
neg
or
iret
mov
pop
add
sub
jp
mov
push
or
push
nop
push
mov
xchg
adc
inc
stos
clc
jg
or
lds
add
lock
mov
mov
cmc
cmp
mov
cld
ror
mov
cwtl
inc
mov
ret
test
imul
nop
clc
sbb
leave
inc
add
push
push
aas
stos
xlat
sbbl
push
in
pushf
mov
pop
stos
flds
ja
decb
sub
mov
mov
out
jne
aas
cmpsl
stc
xchg
dec
mov
jbe
stos
imul
sbb
mov
and
jbe
inc
xor
mov
negl
pop
insl
test
and
or
add
addb
dec
in
push
xor
adc
cld
in
jg
mov
lds
dec
sbb
pop
ss
jecxz
fists
movsb
rcrb
cwtl
sub
aam
inc
adcb
adc
xor
ja
push
pop
pop
adc
outsb
inc
pop
jno
call
xorb
jmp
fs
inc
cld
das
je
jmp
leave
cltd
call
lock
add
mov
jle
add
add
inc
and
add
adc
jns
fistps
mov
movsl
push
pop
inc
sbb
js
mov
mov
incl
add
popf
push
pop
or
dec
sarl
inc
inc
out
or
and
ja
mov
test
push
leave
sahf
dec
cmpsb
dec
mov
mov
aam
dec
xchg
aam
inc
in
pop
sub
lea
imul
loope
xor
add
ret
push
das
mov
jge
neg
imul
xlat
push
push
xchg
cmpsl
rol
adc
pop
sub
test
shll
shrb
inc
pop
mov
fs
pop
aad
lahf
jo
cmpsl
mov
les
lahf
inc
add
mov
and
aaa
lret
cmc
dec
jb
dec
sub
dec
adc
pop
frstor
lods
dec
jecxz
aad
pop
inc
xor
xchg
orb
ret
pop
cmp
test
jmp
pushf
mov
iret
jae
sub
je
dec
sbb
mov
push
outsb
inc
test
mov
iret
sahf
jecxz
jbe
cmp
loopne
xor
and
es
inc
and
and
lea
scas
inc
les
incb
in
shr
sub
jl
pop
inc
dec
call
push
ds
cmp
push
or
data16
arpl
xlat
pop
enter
xchg
xor
in
popf
repz
inc
sbb
push
push
test
ret
mov
addr16
jg
adc
mov
add
adcb
nop
loope
cwtl
xchg
inc
icebp
imul
popl
jne
xchg
or
test
cld
std
shrl
sub
loop
mov
ds
ds
jg
dec
js
lods
cmpsl
or
add
mov
test
testl
outsb
mov
sahf
xor
xchg
xchg
repnz
faddl
sub
cli
out
test
test
jb
jnp
fs
sti
lret
mov
xchg
stos
sbb
and
cli
adc
push
add
ret
js
sub
pop
ja
and
mov
aad
dec
sahf
push
imul
xor
dec
fnstsw
push
das
inc
mov
xchg
add
lahf
jp
nop
mov
call
imul
sbbl
cmp
and
ja
xor
dec
jge
fxrstor
sbb
push
mov
cmpb
cmp
inc
and
hlt
mov
movsb
ss
fidivs
sbb
ljmp
mov
mov
xchg
lock
gs
insl
inc
test
sub
shlb
pop
push
dec
add
fwait
lods
cli
jb
cld
jge
and
das
pop
hlt
pop
inc
xchg
and
fcmovne
pop
xchg
mov
push
dec
fsts
stos
out
cltd
lret
add
sbb
inc
mov
xchg
sbbb
leave
jle
aad
nop
pushf
rcr
xchg
mov
fs
jge
xor
adc
add
js
mov
dec
push
rorl
xor
hlt
insl
data16
js,pt
lcall
xchg
cld
jmp
out
call
xchg
xor
into
outsl
xchg
sub
cmp
cmpsb
bound
sti
ds
sbb
and
addb
push
clc
push
test
and
inc
add
jns
mov
js
lahf
sub
or
call
adc
mov
cmpsb
dec
popf
scas
pusha
mov
jg
mov
xchg
subb
gs
or
je
iret
cmp
jns
fs
push
nop
adc
add
mov
or
mov
jmp
fadd
ror
push
sti
push
divb
dec
sbb
xlat
cld
jle
cs
pop
insb
fldl
cmp
pop
fdiv
inc
clc
cwtl
mov
add
xchg
cs
push
xor
notb
add
mul
sbb
xor
add
inc
nop
movsb
fyl2xp1
push
sbb
repz
adc
push
repnz
sub
mov
mov
test
sub
add
sti
inc
mov
add
mov
and
test
push
cltd
adc
movaps
xchg
movsb
es
subb
cmpsl
popa
push
or
call
mov
rolb
sbb
cmp
cmp
out
jg
push
mov
aas
sub
mov
loope
or
jo
jno
push
dec
jle
fidivrs
psllw
mov
leave
dec
push
fwait
inc
mov
xchg
jmp
sub
mov
or
xchg
fstps
lret
inc
or
xchg
xor
xchg
push
jge
in
inc
pop
sbb
pop
dec
sub
sbb
mov
dec
push
jp
decl
jns
subl
inc
jb
or
dec
pop
or
pop
inc
out
in
xchg
mov
mov
movb
mov
cmp
ret
arpl
jbe
cmp
sbb
leave
sar
test
aaa
outsb
std
into
fstl
clc
add
addr16
aaa
fildl
push
rcll
into
add
jecxz
push
cmp
xchg
jmp
add
fisubs
ss
shrb
hlt
push
aaa
mov
sbb
mov
popa
test
add
daa
jle
in
movsb
call
cmpsb
push
std
sarl
gs
outsb
in
into
clc
mov
addr16
movsl
push
pusha
shl
sub
je
fldcw
push
test
addr16
dec
lea
mov
xchg
sub
test
cmp
rcll
xchg
rclb
jne
xor
or
cmpsl
push
popf
bound
mov
inc
mov
and
testl
inc
adc
cltd
xchg
repz
fmuls
rcl
scas
pop
repz
mov
repz
test
xor
jae
fmul
lods
inc
loope
mov
int
js
or
fisubrl
jno
fs
insb
xor
pop
xor
xchg
sub
and
pop
jg
insb
filds
rorl
stos
and
mov
mov
dec
stc
pop
lcall
xchg
cmp
dec
fsubrs
mov
aam
insl
movsb
adc
xor
std
push
stos
jbe
mov
aam
inc
push
sub
push
stos
inc
xchg
icebp
imul
mov
pop
sub
mov
mov
mov
adc
jno
jno
pop
mov
ret
sbb
mov
sbb
pop
cmpsl
ret
aas
mov
xor
push
mov
pop
mov
pop
push
mov
call
fs
jge
mov
push
xchg
test
inc
adc
in
push
insl
ficompl
imul
mov
jmp
jmp
insl
adc
jnp
or
aaa
and
in
clc
push
nop
xor
inc
cmpsb
cwtl
mov
popl
push
adcl
sbb
mov
push
ret
cs
cli
xor
or
addl
hlt
mov
pop
adc
das
sub
faddl
or
scas
push
fdivrp
fisubrl
insl
movaps
inc
testl
lds
sahf
or
mov
scas
xor
jl
lds
pand
insb
or
pop
out
add
push
jecxz
add
fsts
or
pop
mov
lds
stc
loopne
mov
mov
xor
sbb
jle
sub
or
pushf
cld
ds
adc
mov
pop
cmp
outsl
cs
shlb
pushf
popl
inc
dec
lea
pop
pop
in
mov
adc
pop
dec
rcl
dec
xlat
jne
test
push
jmp
push
cld
std
jbe
jmp
loop
ds
aaa
sbb
out
jb
mov
inc
addr16
pop
dec
fcompl
icebp
cld
out
jne
pop
jle
mov
cmp
push
sti
jns
or
lock
jp
lret
popa
and
inc
push
mov
mov
fcoms
push
cmp
shrl
fcompl
pop
lret
dec
push
mov
jge
fsub
notb
enter
in
add
sti
push
jb
pop
outsb
cmp
jne
ljmp
mov
inc
jp
mov
insb
or
pop
dec
jmp
and
out
in
or
mov
ret
and
jae
arpl
push
jecxz
or
and
jne
test
subb
arpl
pop
inc
pusha
std
add
sbb
push
ja
lahf
cmp
sbb
aas
leave
mov
push
cmpsl
aad
and
push
sbb
pop
push
and
imul
push
pop
enter
fwait
movsl
out
xchg
add
mov
imul
inc
dec
sbb
pop
mov
mov
pop
aaa
mov
out
jb
mov
fwait
cs
call
xlat
pop
repnz
loope
xlat
sbb
pop
sbb
jmp
sub
or
aam
xchg
gs
ds
enter
mov
cmp
imul
lret
sbb
sbb
or
gs
inc
push
lods
pop
fwait
cmp
xor
cmp
push
inc
adc
add
fs
arpl
mov
inc
or
in
add
loop
xchg
mov
jo
arpl
sbb
mov
lods
shlb
sti
popl
pop
sbb
or
adc
or
aaa
xchg
cli
icebp
jmp
iret
nop
or
sub
fisubrl
scas
fbstp
test
stos
orl
fstpl
push
lea
mov
or
xchg
jle
out
inc
test
icebp
fstp
push
cmp
sbb
sub
inc
js
mov
ficompl
dec
daa
stos
jo
mov
outsl
cmp
ds
call
lock
jb
pop
xchg
movsb
xchg
dec
fdivl
xor
pop
pushf
nop
loop
aaa
cmp
jp
jge
push
sub
pop
cmpsb
dec
dec
inc
ds
adc
pop
insl
lret
xchg
out
neg
push
nop
cmc
adc
or
cmp
movsb
rcl
cmp
orl
mov
mov
mov
movsb
jb
cld
push
or
nop
cmp
pop
cmp
push
xor
jecxz
cli
data16
in
bound
jl
fidivl
xchg
in
adc
jge
adc
adc
add
xor
ret
sub
popf
xor
imul
out
out
cltd
sub
add
mov
fmuls
loopne
sbbb
cmc
stc
imul
jne
mov
add
fwait
sbb
mov
out
arpl
les
clc
mov
xor
mov
xchg
xchg
popl
jl
cs
leave
pop
xor
add
cmp
dec
mov
push
testb
mov
lcall
or
xor
aaa
out
adc
push
movsl
add
lods
jnp
inc
mov
or
mov
push
adc
pop
or
mov
mov
mov
aad
xchg
orb
std
arpl
in
jl
xchg
sti
outsb
adc
xor
sbb
sbb
inc
mov
mov
je
pushf
inc
add
daa
or
cli
mov
mov
std
loopne
jmp
dec
aaa
inc
jl
fsubs
mov
push
dec
add
stc
dec
les
push
xor
scas
ss
movsb
xor
fmulp
iret
lahf
arpl
pop
xor
dec
cmp
adc
or
pop
jno
inc
into
daa
or
popa
out
testl
flds
adc
cmp
cmp
pop
adc
sbb
mov
mov
fisttpl
inc
stos
add
pop
jae
icebp
or
mov
dec
loop
jl
out
je
mov
sub
inc
fistps
cmp
jle
ja
mov
jg
sbb
mov
or
test
pop
cmc
sub
bnd
dec
xor
mov
sbb
fldt
or
push
mov
mov
mov
mov
pop
pushf
fwait
addr16
jns
mov
subb
es
inc
jnp
sub
adc
jecxz
and
xchg
jecxz
shll
mov
sahf
mov
jnp
les
inc
cli
sti
sub
in
push
cmp
lret
add
xchg
aas
iret
cmp
ss
sbb
xor
push
les
js
lock
pop
jno
push
sbb
fisttpll
and
addr16
sbb
bound
enter
xchg
jl
cmp
imulb
stc
and
call
stos
mov
add
push
adcl
and
hlt
jmp
negl
cs
sbb
loope
mov
mov
test
mov
mov
cmp
outsb
popa
inc
shl
cmpl
rep
stc
jp
sbb
aad
push
pop
cs
pop
xchg
or
cmp
xor
jno
xor
sub
fninit
push
aas
xchg
push
leave
jbe
inc
test
insb
int3
xchg
and
int
sub
cmp
xchg
cli
pop
and
stos
xchg
ss
lds
cmpsb
xchg
mov
sti
arpl
stos
mov
lds
arpl
xchg
mov
test
or
mov
xchg
dec
xchg
ds
mov
adc
sub
mov
adc
test
push
lret
roll
cmp
bt
xchg
jb
and
sbb
gs
inc
hlt
insb
mov
jno
cmpsl
xlat
xor
jne
mov
out
mov
mov
push
mov
adcb
mov
jge
loopne
and
cld
gs
notb
inc
adc
and
add
jl
into
ret
adc
add
jnp
xor
movsb
sbb
mov
in
shrl
mov
or
mov
repnz
dec
xchg
cmp
jmp
shrl
push
xchg
mov
and
mov
dec
inc
mov
adc
push
inc
jne
stos
cmp
mov
jge
es
adc
inc
fdivs
push
out
inc
push
inc
push
idivb
inc
and
mov
imul
iret
leave
mov
xchg
scas
test
aaa
push
add
or
int
or
ss
rcll
cld
mov
mov
sbb
pop
dec
incb
jg
jle
push
orl
add
xor
loopne
xor
sbb
insl
add
cmp
add
repz
cmp
jmp
je
lock
aaa
mov
add
outsb
add
sbb
loope
dec
out
dec
mov
add
dec
jae
cmp
inc
pop
xchg
adc
push
mov
repz
mov
fsubl
mov
aaa
aad
std
xchg
call
and
xor
daa
scas
movsb
pop
add
cmp
jb
outsb
call
movhps
adc
adc
fmuls
and
imul
sub
jmp
push
movl
jp
add
adc
pop
inc
ret
in
cmpsl
or
fadd
int
outsb
inc
xchg
bound
dec
movsl
lods
roll
cmp
test
outsb
and
and
mov
lock
fnstsw
lea
xor
mov
xlat
cmp
mov
outsl
insb
lret
cmp
imul
mov
adc
js
inc
pop
xchg
and
aad
inc
leave
fs
adc
xchg
cmp
mov
in
cmp
cmpsb
xchg
push
rcr
sub
mov
xchg
adc
mov
xchg
dec
mov
xchg
fnsave
ss
jbe
or
daa
xor
sbb
andl
fs
outsl
sbb
or
sub
add
adc
cmpsb
xlat
sbb
pop
leave
mov
insb
jge
dec
push
sbb
sub
mov
dec
xor
aam
aam
mov
mov
out
popa
js
repnz
pop
sbb
cmp
push
jle
inc
mov
int
pop
cmp
xor
movsb
enter
in
jge
cmp
ljmp
xchg
ds
add
outsb
insb
addr16
adc
fistl
cmpl
and
aaa
adc
lret
jno
mov
out
dec
cmp
sbb
clc
scas
mov
sub
jg
outsb
xor
bound
movsl
outsb
push
dec
xor
lahf
into
inc
arpl
js
jo
jle
sub
imul
ret
aaa
cld
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
xor
cmpl
addl
das
ljmp
jp
sbb
and
rclb
inc
pop
and
jge
divb
push
fbld
mov
xor
pop
mov
mov
cwtl
jg
aas
je
cmpsl
out
mov
pop
ja
imul
insb
cli
call
mov
sahf
sbb
add
movsb
fucomp
loopw
cs
mov
lcall
in
jecxz
push
xor
bound
pop
mov
jne
stos
cmp
gs
mov
addr16
in
test
inc
jge
ds
jge
inc
test
clc
and
mov
push
js
adc
adc
jns
pop
and
fldl
dec
insl
test
xchg
pop
rorl
in
cmp
pop
mov
mov
mov
mov
out
in
fcmovnu
repz
mov
neg
sub
adc
pop
clc
push
shl
jge
xchg
inc
add
xchg
or
cli
inc
scas
and
cmc
stc
cmpsb
popa
clc
add
mov
cmc
call
add
addr16
popa
popl
xor
mov
sahf
jbe
cli
into
mov
sti
push
mov
mov
bound
daa
mov
cmc
mov
adc
fst
sbb
clc
push
lds
hlt
jmp
test
pop
loope
fbstp
jle
mov
rcll
sub
add
xor
bsr
fs
dec
bound
mov
jmp
aas
xchg
xchg
bound
mov
sub
xchg
shlb
imul
adc
xchg
cmc
xchg
fabs
js
jmp
nop
lock
cmp
fbstp
sub
stc
xchg
or
push
adc
xchg
leave
push
jb
push
add
test
mov
xlat
jl
fcmovnbe
stc
das
inc
nop
jno
ljmp
imul
fiaddl
movsl
add
je
loopne
subl
or
push
xlat
mov
sub
orb
lret
repnz
sub
xor
adc
lcall
fadds
mov
jp
aad
incl
mov
daa
ret
shll
mov
out
loopne
jge
jnp
test
hlt
push
je
enter
dec
fwait
sbb
ffree
mov
icebp
ret
pop
jbe
xchg
dec
jge
movsb
lods
out
pop
ja
das
sahf
pop
test
mov
std
jmp
cwtl
xor
push
syscall
mov
pop
out
stc
and
add
mov
adc
mov
data16
sub
push
cmpsb
mov
xor
mov
dec
pop
flds
nop
mov
lock
or
or
xlat
jne
sub
lahf
shll
roll
add
ficompl
add
pop
pop
in
ret
xor
jb
pop
data16
orl
movsb
aas
test
xor
std
sti
inc
inc
add
ret
push
push
mov
imul
adcb
out
dec
mov
jl
jnp
ljmp
cmp
jp
mov
push
pop
shrb
inc
popa
add
or
scas
mov
or
push
jl
push
cmc
sahf
ret
xchg
test
jns
stc
aad
test
gs
movsl
sti
sub
es
scas
xor
or
xchg
dec
cmp
push
lods
mov
orl
or
imul
pop
sbb
pop
push
or
lret
mov
push
ss
mov
xor
adcb
leave
out
int
add
pop
rcl
inc
push
xchg
and
subl
mov
dec
imul
mov
shr
sbb
loopne
mov
js
ja
and
xor
pop
rcrb
ljmp
add
ja
push
loopne
xchg
pop
cmc
lcall
fcoms
sbb
mov
dec
mov
lea
and
push
xchg
xor
jle
cmpb
mov
xchg
stos
push
std
jge
daa
xor
test
jl
sub
cmpsb
out
sar
ss
xor
outsb
sub
push
inc
adcl
pushf
add
inc
mov
adc
xor
push
scas
add
cli
push
or
shrb
fwait
sbb
mov
push
loope
mov
das
push
lahf
iret
and
pop
sub
add
mov
popf
aaa
or
xchg
push
das
sub
aaa
loop
cmp
push
stos
out
mov
int3
dec
push
xor
jb
rclb
inc
jbe
push
mov
es
lock
nop
cli
xchg
fcompl
sbb
movsb
jp
push
xchg
pusha
ljmp
icebp
test
dec
rcl
add
pop
testb
xchg
test
cwtl
ret
cmp
cli
sub
mov
push
jmp
outsl
popa
sub
out
xlat
dec
subb
and
jp
in
pop
xchg
and
sub
inc
push
sub
sbb
adc
jp
adc
pop
and
out
jnp
ud2
imul
shlb
iret
cmp
mov
stos
mov
jge
cwtl
dec
mov
mov
arpl
out
inc
ret
out
jnp
lret
xor
test
pop
mov
xchg
rcr
mov
cli
mov
jno
mov
adc
pop
jnp
jne
mov
outsl
fstpl
xchg
in
repnz
fsubr
nop
adc
test
loopne
jne
leave
sti
add
push
xchg
aaa
push
out
ds
pop
pop
and
jae
in
sbb
add
dec
sti
mov
in
and
xor
idivb
or
addr16
mov
enter
xlat
mov
mov
dec
mov
lds
mov
add
andb
or
cmp
in
cmp
sahf
ret
mov
insb
out
movsb
aaa
dec
ror
xchg
or
inc
adc
cmp
mov
mov
lret
loope
gs
lahf
inc
mov
mov
pusha
popf
pop
and
inc
mov
test
push
leave
cwtl
add
cld
add
cmpsb
popf
xor
scas
sbb
xor
sti
inc
adc
mov
nop
mov
push
mov
and
push
sbb
push
test
cmp
in
push
sti
sub
das
imul
jo
icebp
or
inc
mov
aad
sub
lds
loop
cli
mov
in
mov
outsl
stos
jnp
cmp
pop
inc
mov
sub
loope
push
outsl
mov
idivl
and
je
imul
push
ss
dec
insl
or
outsb
push
adc
mov
and
shlb
call
js
mov
adc
sub
in
or
aad
das
int
ljmp
dec
mov
jp
jo
aas
cltd
shlb
loopne
js
sub
pop
aad
jp
nop
mov
jno
loop
jmp
mov
push
jg
cmpsl
jg
sub
fildll
inc
sub
push
push
ret
or
mov
aam
sti
sbb
lock
pop
adc
inc
pushf
adc
xor
xchg
xchg
dec
cmp
loopne
aad
jp
inc
xor
rolb
out
cmp
mov
xor
fldl
out
adc
mov
mov
lock
sub
adc
mov
push
and
stos
adcl
push
dec
pop
pushf
and
js
xor
jb
shr
or
sub
xchg
cs
hlt
insb
dec
and
ret
arpl
movsb
adc
out
das
add
add
push
popl
test
arpl
out
xor
push
ficoms
scas
cmp
mov
jns
xchg
xchg
mov
pop
mov
std
lret
ret
in
mov
cmp
int3
pop
push
pop
fs
sub
outsl
aam
push
jmp
adc
stos
and
cmp
cmpsb
dec
mov
aad
pop
lret
loop
lahf
mov
and
lret
ljmp
mov
xor
jle
nop
pop
push
fisubrs
sbb
xor
enter
addb
ret
loop
dec
xchg
inc
imul
sahf
pusha
fsubrs
add
rcll
fnstsw
pop
out
scas
ljmp
scas
adc
je
jmp
in
mov
inc
fwait
imul
or
gs
data16
cmc
add
out
jl
jbe
cli
xchg
push
in
scas
and
imul
dec
jp
sbb
and
cmpsl
jnp
stos
xchg
out
enter
fstps
jle
sub
aad
pushf
xor
scas
jnp
xchg
xor
mov
jle
repz
bound
loopne
mov
inc
cmp
call
mov
cltd
cli
lret
lret
insb
lods
pop
mov
push
xchg
inc
lret
adc
mov
jbe
sbb
jae
iret
sahf
ffreep
lret
push
mov
lret
das
push
ja
lock
hlt
adcl
mov
into
push
popf
fwait
dec
sti
cmpsl
pop
ret
mov
jnp
push
out
pushf
rorb
es
xor
xor
scas
sbb
ljmp
mov
inc
mov
cmp
nop
add
mov
dec
pop
stos
mov
nop
ret
mov
jno
add
push
sbb
inc
adc
push
add
movsl
jmp
pusha
inc
pop
or
xchg
pop
imul
mov
stos
or
dec
fadd
das
cmp
mov
stos
pop
pop
shr
lods
movsl
or
outsb
in
jno
sbb
frstor
fsubrl
pusha
aas
cmp
cmp
add
mov
pop
orl
xchg
mov
out
sahf
mov
les
sbb
les
andl
scas
std
pop
or
pop
stc
mov
aas
xchg
sub
pop
jne
test
cmp
mov
out
inc
aaa
or
ret
data16
xchg
cmp
insb
addr16
sub
subb
out
lea
push
sub
neg
in
lahf
ds
push
cltd
jae
sub
adc
jb
ljmp
jo
cmp
push
xorb
mov
jl
push
add
inc
pcmpgtw
mov
pushl
jle
lods
and
repz
pop
inc
les
jecxz
dec
or
push
popl
push
dec
popf
sbb
test
sub
sti
inc
xchg
mov
test
pop
xchg
or
adc
mov
fst
jns
aad
jmp
xor
leave
mov
loope
call
adc
sbb
sbb
add
mov
and
dec
sbb
out
ja
pushf
cltd
mov
rcr
pop
mov
xchg
pop
pop
int3
popf
cltd
fwait
popa
mov
sub
push
rorb
and
outsl
enter
or
mov
mov
popf
push
mov
fisttpl
sub
pop
test
dec
faddp
incl
iret
call
and
inc
loop
les
leave
leave
or
xchg
mov
xchg
sbb
movsb
les
int3
in
add
push
pop
fdivs
pop
movsl
leave
out
cmpsl
fstp
test
std
outsb
nop
push
cmp
xor
add
pop
iret
imul
not
jle
rcrb
inc
adc
test
test
push
pushf
pop
cmp
cmpsb
push
jge
add
in
add
cmp
jge
mov
int3
es
sti
sub
adc
jg
sbb
mov
lretw
and
and
adc
inc
movsb
cmpsb
hlt
clc
mov
icebp
mov
inc
jb
fadd
jae
movsl
fbstp
rol
dec
mov
add
jno
jnp
pop
xor
pop
testl
in
cmpsb
adc
fsts
xchg
fld
pusha
dec
mov
xor
jle
add
dec
clc
ja
je
mov
xlat
adc
call
pushf
inc
test
fstps
lret
lcall
aas
adc
scas
fsubs
in
fmuls
push
sti
cs
pop
data16
popw
pop
jmp
outsl
sub
xlat
cmp
outsb
jge
cmp
cmpsb
jo
aad
repz
mov
sub
lcall
adc
lahf
mov
vandps
sbb
jae
mov
or
ss
push
in
hlt
inc
mov
mov
sub
ret
lods
mov
or
mov
push
in
repnz
loop
sbb
mov
xrstors
movsb
negl
mov
jle
rolb
push
out
icebp
xor
cmpsb
cmp
push
cs
nop
and
pushf
aaa
adc
repnz
in
and
mov
mov
int3
cwtl
adc
cmc
in
adc
inc
jno
test
fs
sbb
fistps
movsl
enter
mov
test
dec
in
sbbb
sub
xor
xchg
iret
mov
popa
lea
inc
sub
or
lcall
jmp
mov
push
insb
arpl
cltd
aam
pop
outsl
sbb
iret
sub
lds
mov
push
and
ret
mov
fs
aas
mov
imul
add
rcrb
fists
mov
or
xor
pusha
call
xor
jae
jmp
mov
cmp
push
jg
data16
ficoms
loop
js
scas
aaa
rcrl
mov
push
popa
fidivs
outsl
daa
pop
or
fstl
mov
mov
leave
out
pop
shrb
mov
es
sbb
sbb
push
jne
jl
lahf
sub
jo
sbb
mov
iret
mov
lret
shl
pop
lods
pop
sbb
js
imul
mov
rcrb
scas
xchg
popa
pop
push
pop
cs
rolb
mov
cli
leave
int3
fldcw
mov
lds
mov
mov
stos
mov
jb
outsb
push
lcall
filds
mov
hlt
adc
ja
fwait
cmpb
arpl
into
sub
lcall
pop
movsl
add
mov
or
shrl
dec
scas
pop
repz
jno
cmpsl
dec
pop
add
push
xchg
lcall
jbe
test
sarl
sub
jge
gs
inc
or
pop
jb
repnz
adc
ja
pop
fwait
pop
cltd
adc
mov
xor
cmpsb
push
test
push
cmp
mov
fdivp
aaa
aad
mov
lock
jns
xchg
add
aas
pusha
lret
popa
pop
dec
or
clc
out
sub
xor
mov
cmpsb
and
daa
loop
add
icebp
repnz
jge
data16
insl
cs
mov
ds
mov
inc
mov
add
fs
jo
icebp
mov
push
sbb
jl
ljmp
sub
cs
xchg
das
jno
cmpl
xchg
push
out
lods
into
push
xchg
dec
cmpsl
ss
lcall
pushf
xchg
jmp
pop
fisttpl
or
push
lods
popa
in
inc
adc
cmpsb
mov
pop
cmp
cltd
dec
adc
nop
cltd
mov
pop
mov
sbb
and
and
push
mov
or
adc
aam
dec
jno
gs
pop
rolb
jg
xchg
sarl
cmpsb
add
jnp
clc
int
jno
push
inc
adc
fcomps
pop
push
pop
sub
ret
lret
jg
lcall
cmp
xor
popa
or
adc
adc
iret
adc
mov
sarb
lods
mov
pop
adcl
ficomps
inc
es
inc
hlt
inc
mov
jp
insb
lods
xor
jbe
in
sub
aaa
sub
sub
ljmp
test
test
lock
lods
cmp
pushf
jp
xchg
vpsubd
and
jae
loopne
icebp
into
arpl
push
imul
cs
push
adc
ljmp
std
and
pusha
xlat
sub
cmp
pop
popa
push
hlt
mov
add
adc
popa
pop
inc
add
dec
pop
lock
mov
shrl
jge
sbb
in
ja
das
inc
pop
xlat
jae
push
sbb
je
xchg
mov
fstl
jle
or
outsb
loop
test
cmp
sti
fisttps
jge
hlt
dec
std
inc
and
xchg
cmc
sub
dec
mov
cmp
ds
lret
daa
insl
out
mov
mov
and
std
and
mov
jnp
xchg
and
aam
testb
xor
repz
add
dec
cmpsb
ja
scas
aaa
sbb
xchg
js
xchg
sbb
xchg
dec
jp
movsl
dec
add
sarl
dec
cwtl
test
hlt
je,pt
add
mov
movsl
pop
enter
xchg
ja
and
sbb
ljmp
notb
enter
idivl
push
pop
mov
adc
mov
aas
rol
adc
jge
fidivrl
nop
roll
outsb
mov
or
add
xor
jns
pop
imul
cmc
push
push
dec
pop
mov
mov
aas
arpl
out
cmp
aaa
push
cli
jae
imul
jb
jmp
cmc
sbb
negb
into
xchg
xchg
fsubs
jg
inc
xor
lds
in
inc
or
loop
push
jnp
aas
testb
add
adc
dec
mov
mov
push
add
adc
movsb
lret
jbe
jne
rolw
push
cmpsb
shlb
aad
sub
cwtl
aad
gs
lret
push
pop
test
lods
in
adc
repnz
outsb
pop
out
subb
pop
test
mov
bound
jl
sub
incl
sahf
push
adc
add
aam
movsl
sti
push
leave
ret
int3
add
push
push
add
stc
andl
pop
dec
imulb
in
push
and
xchg
adc
mov
fcomps
jge
cmp
adc
mov
pop
stos
push
loop
inc
jae
nop
cmpsl
mov
add
hlt
mov
pop
push
inc
std
call
jecxz
fnstcw
dec
lods
mov
into
mov
subb
push
ret
inc
cld
pop
out
dec
xchg
das
fistpll
push
imul
xchg
sbb
cmp
sbb
mov
jns
lods
push
adc
shlb
dec
out
ficoml
push
lods
jno
shlb
lret
shr
add
adc
xor
xchg
add
pushf
xchg
fsubl
imul
aaa
sub
adc
push
out
sub
mov
jecxz
cmp
xchg
data16
movsl
adc
in
fldcw
sbb
js
sbb
push
inc
jne
movsb
jg
or
repnz
test
lsl
mov
push
cmpsl
ds
jmp
imul
int
jb
jle
mov
xor
shlb
adc
arpl
jle
pop
lret
push
mov
xchg
push
add
insl
and
adc
addr16
ljmp
mov
enter
xchg
xchg
lcall
xorb
add
add
int
into
adc
dec
mov
push
mov
cltd
pop
out
jo
insl
dec
mov
cmp
mov
dec
inc
fwait
testb
bound
mov
enter
pop
and
xor
cs
int3
push
out
lock
cs
movsl
inc
push
inc
mov
pop
mov
xchg
popa
call
push
xchg
mov
pushf
push
pop
mov
fwait
rorl
xor
insl
pop
xchg
outsb
add
xor
fadd
cmpsl
lcall
mov
pusha
xchg
adc
xchg
addr16
and
mov
inc
mov
jb
sub
out
sti
loope
hlt
xchg
mov
mov
sub
pusha
std
cmc
in
xor
push
cmpsl
subb
xor
dec
inc
popa
push
dec
or
fwait
movl
rclb
jmp
outsl
lret
insl
scas
dec
sub
cmc
imul
sub
orb
xchg
inc
or
push
mov
mov
or
inc
pop
ficompl
or
ror
out
fdivrl
daa
ljmp
mov
frstor
xchg
int
iret
aad
ret
mov
fstl
out
pop
cmp
sub
rolb
dec
inc
movlps
pop
add
jae
sub
inc
push
push
dec
xlat
xor
sbb
and
push
or
add
in
adc
cmc
sbb
jmp
sbb
add
sub
add
mov
cli
mov
push
cmp
cltd
cmpsl
and
push
inc
inc
xchg
outsl
ja
or
fcompl
adc
js
imul
nop
sbb
pop
jecxz
lcall
inc
push
mov
cmp
sbb
add
and
push
cltd
faddp
push
mov
mov
and
mov
test
xchg
mov
adc
or
push
sub
inc
mov
or
mov
dec
and
mov
pop
and
popa
jmp
push
sbb
mov
adcb
stc
and
dec
pusha
inc
fnstsw
je,pt
ror
in
mov
dec
push
cmpsl
cmovg
out
cmp
fcompl
jecxz
cmpsl
pop
jb
xchg
je
sahf
or
add
dec
cmp
cltd
out
andb
imul
lods
jb
setp
outsl
jl
xorl
shlb
jo
dec
xor
cltd
test
stos
pop
mov
mov
repnz
in
inc
pop
inc
or
iret
jne
pop
cmp
inc
push
add
mov
xchg
cmc
xchg
mov
xorb
es
dec
xchg
adc
push
aad
test
inc
xor
mov
pop
push
adc
inc
or
dec
mov
mov
dec
xor
loope
pop
dec
int3
and
aad
aad
xchg
pusha
inc
bound
sbb
and
jb
jne
imul
std
and
scas
cmp
push
insb
out
inc
insb
fdiv
xchg
xchg
push
mov
loope
pop
sub
clc
inc
sbb
push
jmp
jle
push
pop
mov
mov
idivl
nop
or
adc
cmp
fprem1
and
outsb
xchg
scas
mov
push
adc
fisttpll
lds
popf
xor
jb
je
inc
sti
adc
outsl
sbb
in
sbb
hlt
cwtl
testb
lahf
inc
add
ret
pop
notb
xchg
pushl
stc
andb
dec
repz
loope
addb
int
pushl
jbe
out
xlat
pop
rclb
xchg
inc
lock
mov
cld
or
ficoms
out
cltd
dec
push
fs
lcall
sub
push
and
inc
ret
or
push
or
push
inc
nop
pop
mov
out
ret
loope
inc
nop
mov
mov
fs
pop
cmp
xlat
ret
popf
mov
jne
cld
negb
cld
shlb
sbb
imul
mov
mov
lret
roll
les
pop
pop
push
sbb
popa
pop
mov
push
inc
cmp
adc
call
sahf
mulb
pushf
cmc
decl
pop
mov
jecxz
inc
or
in
jbe
movsb
sub
push
mov
mov
enter
xchg
jl
cmp
mov
sbb
mov
out
mov
push
cmp
loopne
pmulhuw
in
std
orb
testl
shl
xor
xor
pushf
add
inc
mov
stos
dec
or
clc
fsubrl
orb
push
lds
and
lds
xchg
push
pop
lahf
adc
in
push
push
arpl
daa
cld
lock
pop
leave
jne
frstor
test
push
mov
adc
jl
ja
push
insl
cli
aam
out
insb
pop
push
jae
es
pop
imul
dec
and
aad
lret
outsl
cmp
aad
fidivs
test
mov
jbe
out
sub
sbb
rclb
add
test
rcrb
push
pop
dec
mov
cmp
adc
push
mov
or
push
pop
lahf
pop
xor
dec
loopne
dec
out
sbb
adc
and
jnp
jns,pn
ja
cli
mov
and
pop
lcall
pop
cli
jl
rorl
mov
out
pop
or
jno
pushf
movsb
inc
loope
or
arpl
or
inc
popf
cmp
or
and
sbb
push
pop
cmp
add
clc
pcmpeqd
sahf
push
nop
std
jae
nop
rclb
mov
adc
or
adc
mov
adc
sbb
or
cmc
and
xor
xlat
push
adc
or
jbe
mov
rcll
cld
dec
xor
dec
cs
lcall
sahf
stos
pop
js
pop
sbb
ljmp
mov
imul
pop
cmpsl
cmp
lods
insb
stos
in
je
lock
leave
cmp
out
jbe
jbe,pn
pushf
scas
dec
xchg
loop
loopne
das
call
mov
lods
mov
sti
add
fdivrp
mov
adc
push
pop
dec
add
dec
jmp
xchg
cltd
jbe
pushf
xor
in
inc
sbb
mov
xlat
dec
dec
sub
stc
jmp
shr
jns
sub
mov
aaa
mulb
out
pushf
fcomps
popa
mov
inc
cmp
add
mov
sub
rcrl
daa
xchg
xchg
adc
sub
loope
cwtl
or
mov
jmp
push
pop
mov
out
mov
and
fisttpl
mov
ljmp
test
mov
add
lods
out
sub
fdivl
loop
push
jge
scas
pushf
cmp
sub
out
fcomp
lret
adc
and
imul
push
or
xchg
xor
xor
mov
pop
icebp
dec
data16
xor
pop
cli
xor
stos
mov
rcrl
inc
dec
sahf
outsl
adc
ret
in
sbb
xchg
ss
enter
clc
pusha
jns
sti
daa
repz
sbb
push
and
stos
adc
xchg
pop
ret
or
mov
insb
or
mov
xorl
jmp
add
lahf
aad
lret
push
lods
pop
xor
inc
ret
mov
mov
addr16
sub
testl
sbb
les
pop
movsb
fwait
push
int3
jnp
cmpsb
mov
test
jnp
scas
lods
dec
inc
pop
jno
lahf
add
pusha
mov
sub
cs
dec
mov
add
mov
inc
cmp
sbb
push
ljmp
outsb
imul
fwait
pop
inc
pop
bound
call
xchg
sbb
es
or
xor
test
jmp
loope
rclb
gs
push
sahf
push
call
xor
push
lods
repnz
xchg
lcall
jecxz
jne
inc
xchg
mov
test
xchg
mov
lahf
or
mov
inc
popf
or
in
push
or
dec
incl
jecxz
mov
shrl
or
insb
fbstp
je
addr16
fwait
shrb
sti
jecxz
lret
dec
cmp
xchg
fdivr
fldt
xchg
inc
sub
sub
adc
rcl
faddl
inc
sub
fwait
jp
mov
imul
lcall
pop
pop
inc
pusha
hlt
cmp
cli
sub
push
movsb
mov
xchg
xchg
add
outsb
xchg
imulb
imul
lret
ja
xchg
data16
ljmp
jbe
lcall
lret
jg
fisttps
cmc
sar
lea
mov
push
or
movsl
dec
sarl
mov
cmc
xor
mov
pusha
jecxz
nop
ljmp
and
and
imul
sub
shl
and
cmp
inc
push
dec
cmpsl
sub
lcall
dec
push
dec
cmp
pop
adc
mov
mov
jae
sub
nop
adc
ret
notb
dec
cmp
pop
cli
push
stos
lock
les
lock
add
and
add
mov
pop
cmp
pusha
inc
push
adc
pop
in
sarb
repz
inc
pcmpgtw
or
jnp
cmc
test
inc
mov
push
in
add
std
lahf
fmuls
fcoms
test
lods
clc
mov
es
cltd
sub
mov
and
in
outsb
insl
sub
cmp
xchg
and
push
mov
aaa
pop
add
test
js
adc
sbb
xchg
divb
testl
jg
mov
fsts
and
push
adc
sti
cmp
imul
notl
push
jp
cs
repnz
daa
fistpl
sub
mov
aaa
mov
mov
rclb
repnz
out
dec
inc
jle
mov
sbb
ja
scas
pop
sbb
cmpsb
cs
xchg
or
das
jno
push
scas
push
test
sbb
jbe
jo
icebp
push
add
cmp
imul
add
das
gs
lds
subps
andl
add
div
adc
das
or
in
fwait
add
xchg
dec
iret
movsb
leave
xor
ljmp
push
sub
insl
push
scas
andb
nop
std
mov
leave
fmulp
pop
dec
pusha
nop
aam
aad
das
imul
jge
lods
outsl
in
jae
in
test
cmc
lret
sub
fs
lret
test
xchg
add
mov
add
shrl
int
mov
push
push
jae
iret
mov
xlat
aad
mov
xor
repz
add
push
int
enter
addl
loop
push
inc
sahf
or
inc
or
jge
adc
xchg
mov
mov
cmp
or
mov
lcall
xor
pop
add
jp
jnp
xor
ror
mov
mov
in
push
push
inc
cmp
mov
movsb
jae
mull
fbld
scas
sub
int3
cmp
push
push
popa
or
cmc
add
pop
hlt
aas
dec
js
hlt
xor
fisubrl
stc
mov
push
loopne
dec
push
imul
sub
pop
shll
sti
leave
push
xchg
push
cld
test
in
dec
or
adc
rcrb
fmuls
aaa
in
mov
out
dec
cmp
jb
lret
dec
and
fsubs
sbb
jg
into
sahf
cmp
xchg
daa
fldt
fsub
jmp
push
loope
xor
outsl
inc
mov
inc
inc
fwait
imul
mov
scas
jno
int
dec
lret
push
and
ljmp
mov
mov
dec
jno
push
jnp
sbb
mov
bound
movsl
int
jno
mov
std
loope
jno
daa
cli
lods
jmp
scas
xlat
clc
xchg
ret
mov
insb
mov
xchg
inc
in
sti
mov
push
adc
dec
push
jl
push
ja
int3
add
dec
cmc
into
cs
mov
xor
xlat
jmp
into
mov
mov
scas
rclb
and
and
and
push
test
xorl
mov
push
or
flds
scas
adc
dec
mov
mov
inc
sti
cmp
sub
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
idivb
and
sbb
mov
and
int
addb
mov
in
mov
add
sbb
xchg
sub
mov
pop
xor
push
dec
push
fmuls
pushf
and
ret
loopne
add
ja
in
mov
lods
test
or
and
or
and
loopne
pop
jle
jns
push
add
mov
loope
or
mov
pop
dec
fcomip
xorl
ja
call
sub
and
lods
popf
inc
xchg
cwtl
orl
adc
scas
lcall
mul
fsubrs
testl
dec
imulb
pop
pop
shll
xor
enter
cmp
ret
aam
bound
push
lcall
mov
jmp
outsl
lods
ret
xor
adc
decb
mov
adc
fidivrs
jecxz
repnz
mov
dec
sbb
fiaddl
inc
and
pop
mov
int
push
mov
hlt
cmp
arpl
xchg
outsb
nop
adc
lahf
scas
std
pop
sub
mov
or
shrb
fwait
dec
sti
and
adc
xor
xchg
xabort
cli
lds
notb
sub
adc
jb
mov
test
sahf
inc
xchg
out
mov
mov
xor
cmp
lods
dec
push
icebp
subl
mov
or
lock
loope
and
enter
out
sbb
jb
jg
aas
add
jo
mov
gs
and
cld
test
filds
ljmp
aas
push
cmp
mov
jmp
out
mov
cmpsl
adc
mov
mov
repz
loop
mov
fsub
popf
xchg
in
repz
lds
push
sbb
test
test
pushf
js
mov
and
aam
movsb
icebp
jno
lock
or
dec
cmp
notl
mov
mov
into
jne
mov
pushf
iret
test
jnp
enter
sbb
push
shrl
xchg
and
mov
xor
xchg
cld
shll
xchg
daa
adc
outsb
cmpsb
jle
out
push
fbld
add
cltd
and
ljmp
sub
int
pop
sbb
pop
pop
sbb
out
addr16
in
sub
xchg
jo
jo
jmp
or
repz
in
mov
aas
imul
into
scas
mov
movsb
or
cmp
jmp
hlt
and
outsb
inc
jo
outsl
fistpll
nop
cmp
int3
inc
sysret
adc
sar
cmpsb
loopne
imul
rcrb
sub
negb
testl
ds
pop
mov
push
mov
sub
andl
sub
dec
pop
adc
icebp
sarl
mov
jb
outsb
push
and
push
insb
aaa
jne
scas
push
rorb
mov
fdivrl
or
mov
add
mov
out
and
stc
test
lds
add
sbb
popa
or
ds
flds
pushf
and
mov
pop
push
pushf
fidivs
aad
in
pop
add
adc
xchg
sbb
in
adc
dec
xchg
add
loopne
xor
and
movsb
into
mov
pop
add
dec
pushf
inc
xchg
cld
stos
adc
sbb
pop
les
fwait
xor
inc
js,pn
std
inc
xchg
jo
adc
sbb
pop
add
push
outsl
cmc
lret
sbb
fsub
fisubl
push
cli
ret
cltd
test
out
mov
enter
dec
cmp
pop
fs
inc
push
jae
out
pop
jne
mov
call
xor
pop
or
pop
push
and
adc
adc
inc
adc
or
sub
mov
js
jne
inc
decb
cmp
mov
nop
test
mov
add
xchg
gs
cltd
es
xchg
pop
pop
divl
jae
mov
jnp
ja
jbe
push
xchg
pop
mov
pop
xor
fwait
sbb
mov
push
pop
jo
fwait
and
lret
pop
js
jg
repnz
mov
and
xchg
or
test
out
cmc
add
lock
jb
push
aad
ja
shll
gs
sub
adc
cmp
loope
xor
lret
xor
test
mov
mov
pop
out
lea
push
adc
in
lret
xchg
jmp
mov
iret
pushf
inc
rorl
cmp
shlb
ljmp
push
jne
es
jb
cwtl
nop
mov
and
fnstcw
in
orb
pop
fwait
jns
iret
xor
and
test
fstps
jp
jo
xor
lods
in
push
mov
mov
fs
in
shll
in
stos
lret
gs
sti
xor
dec
mov
dec
stos
mov
xchg
sub
shll
loope
inc
insl
sbb
xor
mov
fwait
pop
lods
test
sub
fcmovu
pop
aad
xchg
int3
out
mov
jae
test
rcll
sbb
faddl
pop
adc
dec
jle
cmp
lret
imul
imul
push
arpl
push
stos
mov
sahf
push
jle
aas
loop
aam
add
mov
vcvtsd2ss
shll
and
add
hlt
ret
adc
repnz
mov
nop
inc
ss
cmp
mov
test
jb
mov
pop
lahf
lds
stos
mov
les
in
data16
and
cld
and
push
das
cwtl
or
mov
sub
mov
fldt
jb
addr16
lods
push
or
cli
adc
lods
xchg
inc
outsl
imul
adc
call
sub
xchg
adc
pop
aad
push
push
inc
add
scas
les
loope
not
loope,pn
rorb
xor
fsubrl
cmp
insb
ror
into
mov
mov
jns
mov
sti
pop
insb
xchg
out
dec
xor
pop
mov
adc
push
jb
pop
xchg
jne
push
add
jecxz
cmp
jbe
jge
aas
or
icebp
cmp
mov
test
in
pushf
jno
dec
xchg
mov
outsb
inc
loope
add
mov
int
mov
loopew
sbb
dec
aas
outsl
cmp
popf
jecxz
add
jae
sub
movsb
or
push
bound
cmp
fwait
mov
popf
js
cmpb
fcom
loope
and
lea
mov
mov
in
cltd
std
ss
repz
out
mov
jp
fwait
adc
int3
add
dec
iret
daa
mov
mov
aam
clc
lcall
lock
stc
jae
cs
pop
cltd
add
adc
pop
insb
mov
sub
lods
push
ud2
mov
cmpsb
sbb
into
aas
xchg
cld
in
dec
xlat
jbe
popf
mov
jae
jp
or
and
push
addr16
push
fwait
inc
repz
cmp
mov
das
lahf
fcomp
and
aaa
sbb
dec
mov
mov
push
xchg
and
jge
fwait
subl
jmp
dec
cmpsb
push
dec
lock
mov
xor
ret
cld
ljmp
inc
add
mov
mov
mov
andb
sbb
shr
scas
or
movsb
xchg
into
sub
icebp
fldenv
test
lret
shll
jge
sub
or
lods
xor
das
adc
out
cmp
adc
sbb
or
adcl
les
adc
in
sti
jbe
mov
push
adc
insl
inc
loop
mov
jmp
xchg
and
sbb
lcall
lcall
out
adc
std
cmp
mov
sahf
pop
fimull
pop
ljmp
daa
sbb
sbb
mov
mov
mull
sbb
adc
mov
fildll
pop
mov
push
into
push
mov
mov
pop
jns
decb
dec
scas
ret
sbbl
push
jmp
fs
pop
add
scas
sub
mov
inc
cmp
sbb
js
add
inc
mov
dec
sahf
xor
cmp
lods
and
and
jecxz
push
jmp
js
and
scas
scas
in
test
mov
subb
push
xor
ja
mov
js
xchg
mov
and
mov
int
cwtl
adc
lret
sub
aam
ds
push
cmc
fmulp
and
cwtl
push
adc
cmp
jno
pop
arpl
stc
movsl
rorb
sub
test
enter
jns
jle
pop
add
adc
out
popa
enter
jbe
dec
je
clc
jns
notb
cli
jns
sbb
cmp
jbe
jo
out
push
aad
cmpl
jp
das
mov
add
flds
sbb
sbb
sti
cld
xor
lds
inc
movsl
sub
mov
and
lcall
std
popa
out
jmp
push
insb
xor
mov
movsb
lret
sbb
xor
outsl
and
scas
xchg
xor
jge
bswap
iret
mov
fcoml
mov
test
call
jo
inc
xchg
jl
adc
pop
scas
jnp
xor
frstor
dec
js
mov
cmp
mov
push
jecxz
jb
pop
lds
ljmp
xor
arpl
jle
jno
cmp
adc
jae
into
inc
les
xchg
jne
cmp
mov
pop
cmp
ja
imul
fisubrs
shl
aam
pop
jbe
repnz
or
xlat
mov
std
sub
add
sahf
call
negl
outsl
test
pop
add
push
into
pop
ret
testb
cmp
xchg
insl
or
dec
arpl
jb
push
sbb
popf
pop
fstl
push
lods
std
jmp
xchg
add
mov
scas
push
mov
out
nop
push
lock
std
jge
push
clc
push
push
fists
sbb
hlt
mov
dec
cwtl
jle
mov
pop
jg
xchg
mov
loope
xor
aas
sub
outsb
neg
mov
outsl
pop
adc
push
mov
lret
xor
sbb
jae
imul
mov
cmp
cmp
jne
sbb
push
icebp
cmp
je
xchg
ss
jmp
into
mov
aaa
push
push
sbb
repnz
jecxz
imul
frstor
lods
loope
test
or
popf
and
leave
mov
pop
movsl
mov
out
and
xchg
cmp
adc
outsl
ds
mov
mov
push
pop
inc
sub
lods
add
hlt
stc
cs
mov
jecxz
arpl
xchg
add
mov
enter
andb
outsb
mov
mov
jl
add
in
push
mov
fsubl
sbb
mov
or
push
fsts
cli
pop
sub
or
pop
enter
mov
mul
adcb
push
xchg
nop
in
fdivs
test
test
mov
pop
pop
lds
les
push
fcompl
jae
cmpl
mov
aam
mov
pop
out
jl
gs
mov
cmp
add
or
push
idivl
mov
call
mov
addr16
ficoml
mov
and
loop
fstpl
inc
add
lcall
mov
mov
sub
clc
pop
arpl
xchg
fdivrp
pushf
fsubrp
push
icebp
or
inc
adc
push
mov
mov
pushf
or
cmp
mov
sbb
mov
and
pop
xchg
movsb
pop
sub
out
dec
pop
es
mov
lods
xchg
mov
imul
std
aam
lahf
and
gs
inc
jg
cmc
push
gs
sbb
in
add
xchg
stos
cvttps2pi
aad
jmp
add
add
test
pop
sub
sbb
or
inc
dec
cmp
or
fbstp
mov
je
or
jl
cmp
cmpsb
aad
mov
jnp
dec
mov
mov
cmp
lods
sub
mov
andb
div
inc
add
insb
jbe
test
add
loop
and
nop
xchg
scas
aad
lods
ret
push
dec
fisubrl
das
mov
outsb
pop
aaa
mov
pop
push
xchg
shlb
push
push
xchg
sub
add
mov
dec
jle
pop
add
pop
mov
in
fdiv
fs
mov
or
repz
nop
call
aad
sub
in
lock
lock
xchg
dec
aas
je
inc
jno
cwtl
int
adc
hlt
mov
notl
adc
outsl
andl
push
movl
mov
lret
jbe
outsb
jns
mov
stos
mov
dec
and
ljmp
jbe
repz
adc
xchg
rcll
sub
push
cmc
dec
and
and
cld
push
aas
xchg
xor
dec
cmp
enter
int
outsb
mov
cmpsb
add
dec
stos
push
adc
sarl
push
ret
pop
mov
mov
insb
orb
mov
push
inc
imul
out
das
addr16
fsubrl
out
sub
jb
dec
push
add
xor
or
inc
add
arpl
mov
xor
inc
pop
mov
test
jp
leave
jae
adc
cwtl
orb
lcall
add
or
enter
imul
ja
push
add
or
scas
daa
cmp
rorl
pop
jae
xor
ficoms
testl
and
mov
push
dec
adc
sub
add
loopne
jne
insl
sbb
push
int3
imul
xchg
adc
nop
adc
or
pop
mov
movsl
dec
cmpsb
fwait
mov
jnp
icebp
adc
enter
adcl
in
rcrb
ret
jmp
push
ja
dec
lahf
mov
mov
cld
or
aam
or
sbb
stos
repz
imul
dec
mov
push
and
loopne
movsl
les
fbld
das
leave
mov
hlt
stc
int3
and
push
out
cs
lods
cmp
cmp
inc
negl
std
or
aaa
and
sub
into
jmp
testl
cmp
out
aad
xchg
jae
dec
scas
sub
sahf
loop
pusha
cmp
inc
fs
push
out
movsl
testl
aam
pop
sub
sub
cltd
les
jl
lret
sbb
mov
xchg
pop
outsb
pushf
push
out
in
data16
das
mov
sahf
adc
fstl
in
mov
scas
push
inc
pop
pop
xchg
jecxz
into
add
subb
jne
movb
sbb
dec
stc
adc
cmc
jb
inc
push
dec
push
cmp
cld
xor
jge
jae
loope
rcll
mov
jns
pushl
addb
xlat
lahf
sti
shrl
push
dec
pop
mov
fstpl
mov
out
aad
or
inc
mov
movsl
sub
adc
adc
pop
ljmp
hlt
out
push
lcall
packssdw
loope
push
loope
or
ss
aaa
bnd
scas
xchg
stos
xor
jg
inc
jg
popf
xchg
mov
inc
or
sub
jle
add
test
sub
fists
cmpl
movsl
dec
movl
jb
jns
sahf
clc
aaa
fisttpl
pop
ljmp
in
mov
movsl
xchg
jae
push
xchg
sbb
push
or
xor
ljmp
je
hlt
add
outsl
pop
aas
stos
lahf
stc
rcl
xchg
shlb
clc
dec
int3
push
xor
xor
and
fisubs
xchg
std
lock
ret
mov
xor
popa
shrb
push
dec
es
clc
or
out
inc
xor
and
gs
mov
stc
lahf
jle
pop
stc
bound
loop
test
pop
push
xor
dec
xor
mov
xchg
and
mov
xchg
fcos
jle
lods
pop
sub
faddl
xchg
and
or
outsl
gs
xchg
test
movsb
gs
mov
inc
jo
sbb
popf
sub
loopew
adc
hlt
aas
popl
sahf
jp
sub
scas
das
enter
out
xchg
rolb
mov
loop
and
cld
mov
jae
pop
sbb
xor
adcb
jl
mov
test
sub
xchg
pop
popa
mov
dec
movsl
cmp
sarl
addb
roll
rorb
mov
mov
inc
not
sti
pop
mov
call
scas
lock
mov
pop
inc
jbe
dec
xor
inc
cmp
push
and
push
lock
jecxz
aaa
ja
jl
mov
mov
repz
stc
daa
jbe
pop
iret
fcoms
cmp
sub
in
bound
insl
push
cs
lret
mov
sbbl
adc
cmp
movsb
int3
into
into
jns
pop
inc
sub
sub
int3
ss
fmul
push
in
jo
enter
sub
jg
inc
scas
imul
sbb
inc
cli
popa
lret
and
mov
push
mov
jns
scas
sbb
xchg
into
scas
cmp
dec
ljmp
lea
push
testb
sub
lock
imulb
add
push
pusha
fisubs
add
dec
fdivrp
popf
in
dec
dec
addb
add
dec
jne
lahf
jno
fidivrl
rcr
idivl
sarb
cmp
mov
add
pushf
rcll
outsl
jg
sbb
adc
fdivrl
adc
popf
or
adc
repz
daa
push
cwtl
imul
mov
enterw
es
inc
mov
shlb
dec
cld
bound
daa
iret
push
pop
cmpl
push
sub
mov
mov
daa
aaa
ds
ficoms
shlb
lahf
aad
daa
and
add
cmova
add
pop
nop
repnz
dec
mov
ja
ret
push
js
xchg
ljmp
scas
ret
sub
mov
test
and
or
daa
fiaddl
sub
daa
mov
xchg
stos
loop
shll
or
fstp
dec
int3
sub
pop
push
fwait
addr16
addb
fldt
lahf
mov
push
jle
jb
mull
mov
xchg
pop
mov
sti
cwtl
outsb
ficomps
jmp
adc
sub
out
into
pushf
iret
xchg
add
xchg
or
fwait
inc
out
add
ljmp
daa
dec
push
incl
rorb
pop
xor
test
imul
push
cmp
bound
aas
movsb
test
and
pop
inc
xor
test
cld
fists
out
sub
inc
lea
shll
sahf
bound
out
xor
adc
mov
mov
mov
test
adc
push
movsb
dec
pop
mov
aad
cmpsl
fs
loope
popf
fmuls
pop
test
cmp
jns
fdivrs
mov
cmp
pop
inc
jnp
mov
hlt
sbb
addr16
mov
std
int3
sarl
loop
mov
dec
cld
in
mov
jg
jmp
enter
adc
sbb
lcall
movsb
mov
fldenv
or
dec
xchg
sub
shlb
xchg
add
out
jb
adc
jb
mov
dec
fs
gs
xor
js
push
out
shrb
cs
pop
incb
xchg
adc
sub
mov
outsb
mov
call
stos
mov
inc
mov
sbb
sbb
mov
jp
lds
fcmovb
sub
movsl
sbb
insl
or
ds
jl
fwait
cmp
pop
out
out
stos
fs
jno
cltd
lret
push
cmpsl
lea
add
and
pop
test
inc
lahf
jnp
push
decl
je
movsl
in
test
pop
fs
and
hlt
lahf
repnz
or
out
in
aad
lods
loope
xor
test
fcomps
bound
xor
mov
mov
add
fisubs
shlb
jmp
inc
fistps
outsb
push
std
mov
mov
mov
insl
pop
and
dec
loope
fists
hlt
cli
inc
push
push
jnp
outsb
inc
sbb
inc
shrb
leave
inc
cltd
xchg
xor
sahf
pop
roll
cmpsb
pop
jle
jno
and
fmul
push
pop
jmp
icebp
cmpsl
test
mov
and
add
add
clc
int
cld
adc
inc
and
add
lods
outsl
jb
add
dec
scas
mov
je
outsl
shll
mov
out
jl
sub
pop
and
or
mov
out
dec
ja
lds
xor
push
lahf
ljmp
mov
and
jnp
dec
fucom
cltd
mov
hlt
shrl
in
call
adc
mov
mov
and
loope
das
test
bound
xor
nop
data16
insl
les
dec
cmpsl
mov
out
jae
mov
pop
jnp
xchg
hlt
ds
mov
dec
ja
nop
or
lahf
xor
incb
faddp
push
cmpsl
adc
fwait
lret
push
adc
pop
popf
and
xchg
cmp
ret
xor
pop
fwait
clc
into
jg
mov
test
insl
shlb
xchg
andl
pop
jmp
cmp
es
xchg
imul
fdivs
xchg
insl
shrb
cmp
add
add
jnp
cs
xor
in
into
lds
es
out
insb
stc
xor
sub
aas
mov
jle
add
sub
push
lret
pop
adc
xlat
jmp
flds
cmp
pop
in
jno
cmp
mov
xor
pop
inc
push
add
push
pop
jnp
in
jp
adc
repnz
or
dec
fsts
ljmp
stos
cltd
fs
adc
xor
pop
aaa
lret
pop
adc
jbe
sub
xor
jl
xchg
cmpsl
cmp
push
inc
das
nop
jmp
in
pop
and
mov
pushl
add
jmp
es
sbb
xchg
sbb
jl
jge
xorb
out
movsl
jo
shll
imul
test
out
add
mov
xor
stos
sub
inc
clc
inc
pushl
cltd
mov
mov
mov
add
mov
mov
cmp
cmp
insl
dec
or
loope,pn
mov
cmp
int
or
cltd
cltd
sbb
negl
int3
pop
xchg
sub
or
jmp
dec
sub
repz
pop
jg
mov
addr16
in
iret
mov
mov
cli
bound
popa
in
cli
or
lods
aaa
push
jle
pusha
mov
pop
xchg
add
mov
mov
or
push
ss
xor
or
mov
jo
std
iret
into
jl
sub
cli
sbb
ret
dec
in
adc
mov
xchg
xchg
sub
insl
sbb
or
iret
xor
sub
lea
jbe
and
jae
mov
mov
cmp
sub
stos
test
out
add
sbb
bound
pop
add
inc
mov
and
mov
xchg
xorb
pop
dec
add
repnz
fs
pop
sub
cmp
or
adc
add
and
mov
addr16
enter
cmp
pop
insb
inc
cwtl
jp
sbbb
jno
dec
rorl
stos
jae
xchg
aaa
popf
inc
sahf
rcll
ret
iret
pusha
fcomps
mov
push
cmp
jl
adc
xchg
arpl
ja
stos
adc
stos
call
and
push
push
unpckhps
sub
imul
jnp
sub
lea
add
mov
push
mov
inc
push
lahf
inc
sub
mov
repz
sub
add
xlat
idivl
popa
xchg
in
mov
icebp
sbb
nop
pusha
popf
cmc
push
in
cltd
fldcw
lds
add
call
mov
sbb
push
adc
sahf
gs
mov
push
addr16
data16
inc
and
xchg
inc
pushl
jle
and
dec
fdivrp
hlt
lds
mov
imul
inc
test
idivl
mov
cmpsb
xchg
push
push
fisubrl
jmp
push
mov
xor
roll
cmp
shrl
data16
add
or
inc
jmp
and
ss
mov
xor
xor
loop
push
jl
sbb
pop
mov
lods
add
fstps
pop
cld
adcb
imul
xlat
sub
push
sahf
add
xor
jg
imul
inc
shlb
scas
xchg
rcrl
pop
and
cmp
pop
sti
out
mov
cwtl
sbb
arpl
xor
pushf
jp
jo,pn
imul
push
div
test
sub
stc
add
loope
sti
inc
add
sbb
jno
mov
mov
addr16
hlt
push
ret
sub
lds
lahf
xorl
adc
inc
pop
stos
pop
jb
dec
into
arpl
mov
sti
cwtl
sub
push
mov
adc
lods
ret
xchg
stos
shl
mov
pop
das
cld
movsb
or
es
pop
repnz
dec
adc
dec
xor
jns
out
push
push
inc
aaa
and
stos
push
push
pop
lahf
push
cmpsl
mov
and
dec
xchg
stos
pop
mov
jnp
test
sahf
mov
nop
shlb
insl
cltd
insl
push
sbb
popa
jo
out
add
mov
fcmove
test
push
fsubrl
xchg
fs
jp
add
sub
call
aad
fmull
and
dec
ja
or
movsb
test
push
out
in
insb
int
movsl
daa
ds
je
stc
dec
aas
lret
scas
dec
lahf
fabs
xchg
iret
pop
push
rcrb
es
jmp
aas
inc
fidivs
mov
cmpsb
int3
or
push
pushf
inc
dec
jle
sub
mov
fwait
inc
sub
sub
mov
sub
mov
aaa
mov
sti
and
inc
daa
sti
repz
mov
lea
jbe
cmp
push
xor
fdivr
and
cltd
scas
mov
je
subb
pushf
pop
outsl
pop
lret
shll
aas
pop
stos
aas
das
arpl
lret
cmp
jmp
push
jns
fwait
xchg
insl
sub
cli
xchg
das
jbe
jne
or
xor
shl
mov
mov
cmp
xchg
lods
mov
push
ficomps
rclb
shlb
cmpsb
clc
insb
or
push
adc
pop
les
out
mov
lea
pop
mov
push
mov
in
clc
or
xor
mul
jns
mov
push
stc
shll
cmc
pushl
cmc
add
pop
sti
pop
aam
ret
lret
aas
fwait
or
and
inc
movsl
jg
xor
outsl
fs
les
dec
mov
mov
out
mov
dec
xchg
insb
outsl
pusha
imul
mov
xchg
add
push
mov
and
arpl
sub
fsubrp
fidivl
cmp
sub
lods
ja
and
or
xchg
pop
xchg
mov
js
cwtl
inc
mov
jecxz
sub
dec
js
not
ja
jp
xor
pop
push
mov
orl
mov
mov
fnstcw
add
call
xchg
dec
pushf
rorb
sub
pop
mov
push
jl
stos
or
mov
out
xchg
cmpsl
les
and
sbb
rorb
in
mov
cmp
xor
xor
mov
cld
cs
lahf
sub
dec
jae
sbb
sub
push
lods
aas
icebp
pop
ds
inc
cmp
inc
adc
add
adc
ljmp
jbe
gs
clc
inc
dec
jmp
xor
jmp
xchg
mov
pop
fistpl
or
fld
jge
fisttpll
cltd
add
enter
leave
std
xchg
in
xor
push
stos
xchg
das
in
push
mov
subb
dec
inc
push
pop
dec
push
dec
shrl
pop
sub
add
mov
mov
insb
loope
inc
add
gs
mov
cld
dec
ljmp
xchg
inc
xchg
dec
mov
lret
mov
mov
mov
shr
rclb
xlat
and
cld
imul
scas
cmp
in
sub
lahf
xor
clc
out
mov
fwait
pop
pop
fistps
mov
mov
mov
mov
sub
ja
push
cmp
pop
mov
adc
sbb
call
jns
enter
in
mov
adc
testb
fcomip
push
mov
inc
js
in
daa
mov
stos
jle
int3
push
test
and
sub
out
xchg
jl
inc
push
mov
mov
sarb
mov
call
scas
adc
in
movl
out
cmc
sarl
cmp
mov
aam
push
cmp
fs
sbb
or
test
es
inc
dec
mov
inc
mov
ror
mov
aad
pusha
xchg
pop
fdivs
arpl
clc
dec
repz
nop
jns
fistpll
shrl
loop
jmp
xor
imul
leave
ficomps
ljmp
js
jae
jne
cmp
lret
mov
lods
mov
sub
outsl
shl
lods
lock
jge
xchg
inc
outsl
in
lret
sub
ss
pop
pushl
movsl
aaa
adc
sahf
jo
mov
psubsw
adc
and
call
jmp
js
mov
aaa
ja
sub
repnz
rclb
inc
mov
mov
nop
mov
push
div
out
pop
xchg
ror
jge
sahf
or
push
xor
popa
jnp
js
fmuls
dec
subl
lret
xchg
mov
repz
std
mov
fwait
xchg
roll
lcall
pop
aas
filds
mov
punpckhwd
out
jno
or
push
and
jmp
jmp
dec
xchg
mov
fsub
dec
mul
sub
sbb
lret
inc
push
or
daa
lahf
mov
gs
ror
jg
insl
jl
or
mov
xchg
ret
pop
iret
leave
cs
xchg
dec
test
fstpl
inc
lods
mov
incl
inc
pusha
les
cmp
fisubrs
mov
sbb
jl
repnz
mov
and
mov
fs
mov
jle
ret
mov
arpl
xor
ds
sub
xlat
ffreep
mov
mov
adc
jge
mov
test
nop
pop
inc
and
push
or
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
je
lods
enter
aad
adc
bound
cwtl
out
jmp
ja
lods
push
pop
loope
fs
adc
aad
sub
jno
int3
fs
dec
loopne
nop
repz
mov
test
lcall
pop
push
inc
and
jge
pop
mov
sub
jns
lods
mov
mov
pop
movsl
cmp
push
jns
popa
pop
xchg
outsb
cmp
mov
push
jmp
inc
aad
inc
pop
aad
rol
dec
movsl
movsb
add
ljmp
mov
test
xchg
fdivrp
xchg
insl
lahf
push
mov
out
out
xchg
gs
jmp
out
push
rcl
cltd
das
jae
mov
adc
jne
jo
mov
push
test
mov
xchg
repz
aas
push
sbb
mov
and
jnp
or
pop
push
sbb
inc
jmp
pop
movsb
subl
inc
xor
add
jbe
push
pop
mov
stc
clc
loope
sbb
cmc
push
aam
push
leave
subb
add
mov
push
nop
fdivrl
sub
or
xlat
jne
jge,pt
mov
pop
lock
adc
loopne
or
je
or
jp
adc
jbe
cmp
fwait
das
xchg
rcrl
mov
fldl2e
scas
pop
push
jl
xlat
popa
test
test
mov
sbb
test
xchg
jno
daa
pop
pushf
pop
ja
mov
out
mov
call
in
add
fwait
add
sti
sti
frstor
push
sub
mov
push
in
push
shr
in
rcrl
das
int3
push
xchg
pop
mov
jo
clc
push
sub
cld
xor
cmpl
rcl
sbb
mov
add
add
int3
clc
jl
sub
mov
cmpb
xorl
cmp
in
fs
cmc
ja
jl
movhps
jg
cmp
add
jb
iret
jle
push
ds
in
vpacksswb
shrl
aas
adc
xchg
out
loop
cmpl
js
aaa
test
jb
pop
xchg
add
popf
in
scas
imul
jmp
imul
out
xchg
push
pop
clc
nop
loop
xchg
dec
cmp
icebp
or
ficompl
mov
mov
js
add
cmp
cmp
xor
nop
aad
dec
xchg
into
faddl
mov
or
xchg
leave
div
lahf
sub
push
pop
sub
sahf
int3
inc
lcall
cmp
cmp
icebp
scas
or
mov
pop
xor
pusha
mov
pushf
bound
and
mov
mov
sbb
cmc
scas
add
xchg
stc
into
mov
hlt
pop
inc
jecxz
cmp
out
mov
jmp
jecxz
test
sub
movsb
test
imull
repz
push
scas
and
or
sbb
jns
je
fsubl
les
cwtl
add
cli
and
cmp
mov
cmpsl
call
addr16
jnp
jns
addr16
iret
add
test
adc
xchg
std
sub
test
lods
add
mov
popf
cmp
pushf
ror
mov
sub
rcrb
lret
xchg
mov
test
lcall
sub
das
adc
xor
or
xor
mov
mov
sub
inc
add
jbe
mov
ss
xor
jg
arpl
decl
shl
mov
inc
out
sub
mov
adc
lds
adc
push
out
inc
mov
pop
mov
push
mov
adcb
xchg
jo
hlt
inc
pop
cltd
into
into
stos
repz
xchg
jbe
cmc
dec
mov
loopne
std
mov
adc
ljmp
pop
inc
outsb
enter
inc
dec
outsl
push
or
jns
fs
mov
ret
pop
subb
iret
adc
push
dec
mov
scas
lahf
mov
loopne
enter
adc
xlat
mov
mov
xchg
sbb
lahf
shlb
popf
mov
sbb
shl
pop
mov
push
pop
das
cmp
das
out
or
outsb
sbbl
xor
gs
mov
adc
out
rorb
add
pop
or
fisubrl
adc
lahf
insl
insl
pcmpeqb
movsb
icebp
mov
sahf
adc
adc
adc
repz
jmp
int3
imul
dec
push
repnz
pop
out
ret
cmp
or
adc
stos
lock
arpl
jno
xchg
loope,pt
fmuls
mov
and
jp
adc
jmp
shlb
test
push
stos
and
popa
dec
sbb
jae
lods
movsl
in
loopne
test
lret
pop
iret
mov
jns
js
adc
gs
dec
test
jecxz
sahf
flds
sbb
push
mov
insl
pop
xchg
dec
pop
push
ds
push
mov
fdivp
adc
fsubr
cld
aaa
dec
mov
scas
cwtl
xor
mov
scas
xchg
push
adc
dec
repz
pminub
ret
fwait
add
test
inc
enter
add
cmp
js
enter
jae
mov
push
or
jnp
aam
lods
daa
sarl
mov
mov
mov
aam
and
scas
ret
mov
ja
scas
lret
loope
cmp
mov
or
push
mov
jns
icebp
loop
push
popf
dec
xor
cmpsb
cli
xchg
mov
push
movsb
jl
mov
cmp
fistl
sbb
out
in
mov
cwtl
mov
scas
sbb
cwtl
pop
fwait
cld
xchg
cwtl
hlt
test
daa
repnz
popa
sub
fcmovb
cld
cld
sbb
push
paddd
jb
int3
inc
mov
pop
daa
ss
loope
dec
push
lcall
mov
sbbl
das
push
xchg
arpl
je
fs
sub
xchg
pop
dec
addr16
and
pop
pop
or
mov
ret
add
add
arpl
mov
cs
or
dec
rorb
ret
movsl
pop
std
push
repnz
out
push
cwtl
test
adc
enter
dec
pop
mov
int3
inc
jp
sbb
lret
shrl
sar
xchg
loope
and
sub
fidivl
inc
mov
sub
out
sti
movsl
arpl
fidivrs
inc
test
pop
cmp
js
add
sbb
gs
shr
push
dec
imulb
testb
mov
popa
cs
mov
loop
jns
movsb
in
pop
xor
pop
mov
aas
es
mov
shrb
push
sub
shll
arpl
sbb
sbb
adc
or
movsb
fstp
fiadds
jne
cld
add
jb
xchg
out
iret
push
push
lret
dec
je
cmp
pop
in
push
jbe
pusha
shll
out
push
mov
aam
adc
mov
jno
arpl
sbb
adc
push
push
nop
push
lods
mull
out
dec
cltd
inc
jmp
shrl
out
jp
fiaddl
mov
aam
pop
test
fildl
sub
sar
and
ljmp
push
sbb
pop
sub
scas
mov
leave
sbb
inc
adc
lods
adc
cmp
cmp
leave
cmp
stos
or
push
bound
inc
aas
sbb
jns
mov
xchg
pop
mov
xchg
dec
dec
mov
mov
es
mov
mov
mov
add
pop
fcos
lea
ror
xor
shll
mov
cli
out
out
or
ret
mov
arpl
jno
pop
into
lods
imul
cmp
mov
adc
cld
aas
mov
adc
pop
add
and
dec
mov
jo
lods
adc
lds
cmp
jmp
mov
ret
or
sbb
in
hlt
pop
sbb
popa
lds
inc
ss
and
dec
and
je
and
push
inc
dec
jmp
rorl
xchg
js
fistpll
insl
inc
sbb
scas
fisubrl
rcr
adc
loopne
lds
mov
fists
push
push
into
lahf
jno
dec
test
cld
dec
cmp
lock
sbb
inc
outsb
push
iret
cld
pop
pop
lods
pusha
fstl
js
nop
and
mov
sub
and
mov
inc
adc
mov
push
rcll
not
mov
stos
fsubrs
lock
jl
insl
mov
fsubrl
lds
xchg
xchg
mov
adc
xchg
pop
and
imul
push
inc
ds
in
jl
fstps
lret
sub
dec
fcoml
insl
sbb
pop
cmp
leave
push
lods
aas
pop
in
movsl
test
daa
call
aad
jge
dec
add
pop
sbb
les
js
xchg
push
and
test
pushf
jmp
loope
inc
ret
mov
or
xchg
cmp
xchg
rorl
inc
cld
xor
movsl
in
aad
xlat
or
shlb
push
push
insl
sbb
and
call
jp
xchg
call
dec
push
loop
bound
dec
incl
inc
xchg
add
data16
ss
push
stc
int
loopne
callw
mov
cmpsb
dec
jg
dec
jns
dec
lret
xchg
fdivrp
jl
andl
add
std
lock
out
leave
insb
jbe
pop
fs
sub
mov
pushf
out
sub
sti
add
fcmovnu
jle
mov
scas
jae
mov
cmpsb
adc
lahf
icebp
or
mov
xlat
lcall
xlat
mov
mov
sub
out
jecxz
xchg
and
mov
data16
insl
or
inc
sarb
pop
test
pop
mov
into
push
pop
mov
pop
insb
movsl
out
test
test
test
push
dec
imull
dec
dec
sti
sub
xlat
pop
call
push
lahf
and
out
or
adc
xchg
insb
cmp
adc
lods
add
add
mov
jo
pop
mov
popf
imul
outsl
cmp
sub
and
xchg
mov
ja
bnd
std
mov
inc
pop
out
scas
cs
stos
mov
xchg
mov
cmp
sbb
add
cmp
std
cwtl
xchg
ret
popf
mov
das
gs
adcl
sahf
hlt
repnz
sbb
and
fidivs
mov
push
addr16
mov
testl
jnp
movsb
push
cmp
addb
leave
pop
aas
inc
and
add
pop
rclb
add
sbb
lret
and
mov
push
fwait
mov
repnz
das
xor
or
sub
lods
popf
pop
sbb
push
inc
cmpsl
out
cmp
out
hlt
shll
mov
push
sbb
scas
mov
imul
push
dec
sbb
cmpl
pop
push
lahf
adc
pop
xchg
js
int3
mov
ret
cli
test
jb
xchg
cmp
pushf
mov
popf
inc
call
pop
push
movsl
test
es
xchg
xchg
push
outsb
fisttps
int
or
jne
ret
xrelease
sbb
mov
sub
gs
rclb
cmpsb
sub
sbb
ja
xchg
fcoml
or
fcomps
adc
add
adc
cli
in
adcb
maxps
lea
icebp
int3
mov
or
test
sbb
mov
add
lahf
testl
fcmovnbe
cld
addr16
cmpsl
insb
outsl
call
into
add
shlb
sahf
scas
aam
pop
test
aaa
or
test
aas
sbb
jg
jae
inc
lcall
imul
dec
outsl
mov
jecxz
lret
mov
pshufw
icebp
cltd
jb
mov
mov
rcrb
daa
cmp
push
add
pop
pop
sub
outsb
jns
pop
push
mov
xor
fdivr
cli
ror
loop
lock
and
xchg
lea
pop
xchg
lods
sahf
mov
rcr
jmp
ret
push
mov
lret
in
or
sarb
xchg
push
fsts
mov
xor
xor
rcrb
ret
adcl
mov
hlt
mov
push
adc
stos
int
xorl
fs
sbb
xchg
inc
cli
mov
mov
testb
popf
adc
add
xor
mov
or
loopne
cmc
fidivs
aas
cmp
cli
popa
or
cmp
sar
loopne
iret
cs
movsl
lcall
mov
scas
cmpsb
arpl
fcmovbe
xor
movsl
scas
dec
mov
scas
in
jmp
sub
push
sahf
lds
and
mov
cmp
adc
sbb
pushf
inc
and
mov
push
fwait
in
pop
inc
sbb
xchg
shrl
mov
adc
and
push
ss
icebp
mov
mov
imulb
aas
sub
mov
add
or
sub
pop
xlat
fs
jo
cwtl
and
neg
inc
jle
movsl
out
mov
fwait
loope
js
pop
and
dec
jge
outsl
stc
ja
les
aas
mov
jecxz
inc
into
fnstsw
mov
jge
fstpl
xchg
mov
aas
pushf
mov
lret
js,pn
mov
aas
mov
mov
insb
dec
loope
mov
mov
cmpsl
adc
cmp
mov
in
fistl
fsubr
sub
outsl
loope
xchg
js
cmpsl
mov
iret
inc
std
inc
and
mov
data16
push
adc
insb
sbb
and
mov
jno
mov
jle
push
rcll
sti
inc
nop
adc
push
mov
push
inc
and
mov
jle
cmp
mov
rorb
pop
ja
test
and
into
movsb
test
adc
xchg
mov
clc
fstpt
adc
pop
hlt
adc
daa
mov
fildl
popa
into
call
sub
mov
ds
outsb
mov
xchg
ret
je
jb
sub
xchg
je
fdivrs
repz
mov
mov
pop
and
insb
xor
outsb
pop
int
sub
les
jecxz
outsl
add
cmp
xchg
ds
mov
push
xchg
sub
jp
repz
xor
pop
dec
mov
adc
sub
sarb
jg
std
adc
jp
jg
cmpsl
xchg
lcall
loopne
subb
dec
xchg
dec
adc
loop
dec
shlb
mov
aad
mov
inc
and
cmp
mul
dec
ret
push
xchg
jnp
addr16
pop
dec
ret
cli
adc
repz
nop
repnz
mov
testb
test
add
adc
push
ja
xor
insl
pop
cmp
add
cmpsl
cld
and
xchg
jge
enter
mov
popf
incl
xchg
jns
cmp
mov
dec
push
push
lods
dec
cmp
mov
push
ret
jnp
enter
sbb
lret
adc
sbb
test
fwait
pop
jo
sbb
push
test
icebp
repz
sarl
cmp
push
fisubrs
sbb
outsl
jp
xchg
aad
xchg
dec
jo
xchg
or
mov
add
push
push
pusha
cwtl
or
adc
jecxz
fsubp
pop
ljmp
lcall
iret
lret
pop
mov
adc
stos
mov
add
aaa
cmp
mov
add
pusha
cmpl
jne
cmp
xchg
jmp
jle
mov
cmp
sbbl
jg
dec
and
lret
fcmovnu
inc
stos
xchg
in
xchg
arpl
cmpsl
test
fwait
and
pusha
fists
push
outsl
jbe
je
xor
loopne
scas
cmpb
add
jmp
adc
test
dec
test
out
sahf
loop
inc
cli
std
jmp
xchg
push
popf
aam
mov
adc
sub
ja
adc
mov
lahf
push
sub
inc
shll
rcl
sbb
pop
stc
adc
mov
lds
jmp
xchg
or
fwait
push
loop
inc
test
pushf
in
push
add
rolb
dec
sahf
lahf
sub
outsl
adc
or
sbb
xor
and
mov
inc
repnz
jl
in
lret
jno
lock
ss
sub
dec
iret
fdivrs
pop
fisttpll
xlat
gs
inc
jbe
jae
mov
clc
adc
lea
jge
aam
bound
mov
cwtl
mov
pop
cmpsl
adc
dec
jae
mov
in
outsb
pop
jg
mov
jno
cmpsl
das
pop
dec
aas
fwait
and
mov
or
dec
jne
mov
test
loop
sti
jno
mov
xchg
std
test
xor
xchg
adc
pusha
arpl
sub
cmpsb
pop
fs
xlat
ret
ja,pt
adc
fs
pop
xchg
popf
dec
push
jae
and
push
mov
fisttpll
jmp
iret
pop
fimuls
xchg
scas
out
cmp
adc
ret
repnz
jns
pop
add
fcmovnu
push
fisubl
push
gs
inc
rcrb
mov
push
xor
stos
decb
stc
scas
ss
jbe
hlt
cmp
outsb
add
or
movsb
ficoms
push
pop
andl
sub
aas
imul
add
dec
ficompl
aad
push
fsubrp
push
repz
lret
sub
dec
dec
sbbl
fldt
mov
xchg
dec
inc
lret
push
sar
mov
mov
xor
push
test
mov
mov
sahf
cmpsl
xchg
inc
jg
test
fdivs
pop
push
addr16
call
aaa
movsl
movsl
addr16
mov
outsb
jg
push
and
dec
push
fs
lock
mov
das
out
or
std
xchg
pop
or
xchg
and
pop
call
loope
fisubrl
mov
mov
fwait
push
lcall
jg
or
inc
mov
lods
fmulp
popf
sbb
aaa
mov
popf
loope
je
mov
cmp
das
pop
mov
inc
mov
paddsb
sub
sub
push
dec
out
add
xor
lret
addr16
or
iret
gs
and
in
push
xor
rorl
fs
push
jecxz
dec
bound
cmc
int
dec
testb
in
adc
movsl
inc
mov
dec
popa
xchg
bound
addr16
adc
mov
mov
pop
dec
rcrb
xchg
cltd
aaa
push
fistps
aam
pop
pop
les
xor
nop
push
mull
hlt
lcall
mov
stc
adc
lods
sub
neg
or
add
imul
sbb
dec
mov
pop
push
pop
mov
mov
pop
int3
sub
add
les
mov
inc
imul
pop
cmp
stc
jl
rcl
cmc
push
outsb
push
data16
sbbb
pop
jecxz
or
push
jge
cmc
inc
add
js
cmp
mov
cmpsb
jo
or
ja
inc
mov
loope
in
jle
nop
adc
dec
jbe
leave
pop
insb
push
lock
hlt
enter
je
dec
sbb
inc
ret
sub
rcll
mov
jne
jg
dec
xor
dec
int
and
ja
cmp
xor
and
push
pop
add
pop
mov
insb
popa
jae
or
ret
shll
inc
pop
push
xlat
mov
jns
xchg
and
sbb
test
arpl
pop
int3
mov
inc
sub
push
or
adc
imul
mov
je
lret
or
imulb
xor
mov
fdivrp
jecxz
push
lds
and
dec
loope
pushf
inc
jbe
xlat
fwait
push
mov
sbb
or
ljmp
mov
test
bnd
pop
dec
iret
roll
adc
xchg
hlt
sub
adc
test
rcr
bound
je
cmpl
or
dec
lock
adc
xchg
cmpsb
add
mov
out
push
lock
daa
xchg
xchg
sbb
mov
icebp
push
push
inc
mov
sbb
data16
and
xchg
movsl
xor
cwtl
cmpsb
pusha
mov
rorb
lret
mov
and
imul
jbe
push
call
je
fiadds
push
enter
jns
mov
nop
mov
jle
jl
cmp
gs
fwait
cwtl
push
mov
jns
pop
imul
jne
xlat
lret
pop
push
outsl
xor
fs
icebp
imul
mov
jge
loopne
fisubs
addr16
dec
jge
repnz
sti
xchg
and
pop
mov
mov
cmp
lea
sub
ljmp
sbb
scas
pop
and
sbb
xlat
xchg
push
sbb
mov
fcom
sbb
mov
pop
mov
and
iret
xor
pop
lret
rep
nop
sbb
shl
inc
inc
test
aas
pop
or
lea
jno
mov
mov
jg
scas
sub
mov
xchg
sub
mov
rcll
mov
aad
aaa
add
xchg
into
cli
negl
inc
cmp
aaa
cmpsb
dec
adc
sub
or
dec
or
adc
dec
xchg
dec
cmpb
and
push
pop
inc
lret
por
lea
dec
adc
push
mov
clc
fs
xchg
xchg
insb
pop
or
sub
iret
lock
arpl
dec
push
and
dec
sbb
stc
call
fnop
sub
or
decl
fcmovbe
mov
xchg
rorl
mov
call
mov
nop
idivl
xchg
ficompl
jge
andb
mov
jg
xchg
ljmp
stc
insl
insb
dec
test
jne
push
repnz
cmpsl
add
cld
xorl
xchg
mov
xor
test
sub
ljmp
adc
mov
loop
into
icebp
xlat
sub
mov
mov
mov
dec
sub
lcall
mov
jae
jp
jg
xchg
xchg
imul
push
inc
imulb
add
dec
mov
test
sbb
repnz
fisttpll
jp
fidivrl
iret
cli
rcrl
jl
adc
mov
mov
cmpsl
jns
sbb
test
xor
ficoms
cmp
pop
int3
or
push
test
mov
lods
xor
iret
xchg
jae
dec
mov
pop
jg
setg
add
dec
sbb
cmp
or
jae,pt
add
pop
fmuls
imul
xchg
dec
push
scas
movsb
notb
push
insl
jle
test
dec
mov
fldcw
push
into
jb
xchg
fisubrl
minps
pop
sbb
dec
xchg
cli
xor
mov
ret
xchg
out
and
stc
rcrl
and
push
out
rcll
add
mov
arpl
mov
repz
jmp
test
scas
jmp
mov
ret
pop
jmp
test
xchg
jp
pop
ret
jg
cmp
push
sub
js
pushl
mov
inc
sbb
insb
mov
data16
shl
pop
jo
in
fadds
mov
std
js
mov
cltd
fnstcw
not
repnz
ds
mov
int3
and
sti
cli
dec
ret
push
arpl
popf
shr
inc
mov
push
push
out
xlat
xlat
jp
imul
lea
sbb
push
cmpsb
stos
ss
xor
xchg
push
push
xor
outsl
outsl
mov
aaa
stos
inc
or
flds
mov
xchg
dec
in
dec
cmp
lcall
sahf
insb
inc
dec
xchg
shll
sti
push
cmpsl
adc
fistpll
mov
adc
sbb
xor
icebp
pop
xor
or
or
test
mov
push
push
lahf
movsl
out
imul
or
add
jbe
int3
aad
sarb
push
les
add
or
insb
lea
jle
dec
imul
pop
je
or
inc
fimull
mov
test
loop
scas
xchg
ss
fldcw
iret
fdivs
dec
xor
xchg
sub
dec
and
push
ja
call
or
or
ds
dec
or
sti
call
xchg
out
xor
mov
push
dec
mov
dec
ret
jb
inc
or
and
in
ret
movsl
out
lods
push
cmp
xlat
fdivs
inc
jae
lret
xor
mov
div
mov
pop
test
inc
mov
push
mov
or
pop
cmp
cwtl
sub
xchg
movsb
out
jo
mov
jns
xor
pushf
outsl
jecxz
pop
inc
mov
stos
std
xor
xchg
add
fisubl
fisttpl
dec
pop
add
cmpb
cmc
pop
mov
mov
mov
xchg
in
jb
das
std
mov
inc
jecxz
mov
insl
out
dec
ror
xchg
rcrl
add
jae
dec
push
or
ret
orb
insl
mov
jp
fadd
or
lods
scas
push
loopne
pop
in
fisttpll
icebp
fs
imul
repz
shll
jmp
fsubr
out
iret
pop
inc
sbb
push
lahf
sub
xchg
iret
pop
ljmp
pop
out
dec
aaa
arpl
cmp
test
insl
and
dec
in
add
dec
inc
adc
inc
cmpl
and
dec
sbb
adc
lret
mov
xchg
imul
inc
js
aam
cltd
out
pusha
mov
jecxz
movsl
jno
sub
cli
or
js
jl
jns
cmp
repnz
mov
or
jbe
ficoms
test
test
outsb
add
loope
inc
fstpl
jae
inc
add
dec
lea
clc
xor
push
cmp
cmpsb
and
leave
sub
les
fstl
ret
add
loopne
aam
std
hlt
mov
pop
sub
sub
adc
mov
mov
jae
negb
inc
loope
leavew
es
jmp
imul
stc
sub
stos
mov
das
push
jl
xchg
xor
fnstsw
lds
or
dec
jp
mov
mov
aam
dec
sub
cmp
pop
aaa
mov
outsl
sbb
dec
cmpsl
fistl
sbb
lods
sbb
lods
stos
inc
loopne
cmp
mov
aam
push
ret
xchg
mov
fcomi
jge
stos
das
pushf
inc
sbb
mov
jmp
lahf
popa
and
sahf
jae
enter
movsl
add
mov
sub
je
pop
push
mov
shrb
push
notl
sub
mov
loope
popf
movsb
jnp
mov
mov
jg
int
xchg
icebp
and
jle
add
in
or
addb
add
inc
jns
pushf
mov
gs
add
in
xchg
ret
mov
adc
pop
push
add
jmp
sub
lods
nop
inc
and
pop
fistl
lahf
outsb
test
mov
cmp
std
add
push
clc
jmp
add
cli
addr16
mov
ss
data16
sbb
sbb
or
test
movsb
sbb
xchg
shlb
or
mov
xchg
cmp
iret
xor
leave
divb
insl
fsubrl
popf
jnp
dec
mov
clc
ret
enter
bound
mov
repnz
sbb
pop
xchg
fiaddl
pushl
lea
push
fisubl
scas
call
or
mov
sahf
enter
movsl
pop
mov
pop
je
inc
leave
enter
mov
int3
lret
inc
inc
mov
adc
pop
call
sbb
lret
cmp
fadds
pop
inc
xchg
popa
mul
cli
js
in
xorl
mov
inc
mov
in
xchg
cli
stos
cli
or
ret
out
xchg
icebp
pop
sbb
mov
adc
test
mov
or
aad
xor
pop
mov
xchg
mov
jnp
das
cld
cs
mov
jns
sti
and
cmp
cld
movsl
fsub
rcr
xor
call
psrlq
jno
sbb
stos
lcall
loope
insl
sub
popa
cltd
push
sub
mov
jno
pop
sbb
and
out
jg
testl
xchg
mov
sbb
fistpll
int3
out
mov
and
data16
mov
call
or
hlt
addl
cld
out
ja
addl
lahf
clc
pop
jg
jp
popa
stc
movsb
js
rolb
test
add
and
std
dec
and
pop
xor
push
xchg
sub
mov
jg
push
out
jno
cmp
into
out
movsl
out
aaa
out
faddl
push
or
sub
scas
mov
rcll
pusha
out
inc
fs
cld
inc
out
add
sub
sub
mov
aas
push
jo
mov
fimull
push
sub
xchg
dec
xor
loopne
cld
daa
inc
xor
loop
add
xchg
into
jae
es
lret
icebp
inc
pop
enter
dec
adc
outsb
mov
add
lret
call
xchg
xchg
stc
lods
pop
xchg
imul
jae
push
test
fnstsw
in
pop
dec
iret
test
jne
lds
lahf
add
xchg
push
cli
sahf
jp
xor
inc
les
or
inc
add
inc
into
mov
cs
rorb
cld
lcall
je
insl
mov
jne
sti
xor
insb
push
out
add
sub
mov
dec
sub
adc
in
inc
adc
or
pop
cmpsl
jne
rcl
dec
loop
or
jg
mov
or
imul
in
inc
xor
movsl
cmc
ja
sub
fst
mov
mov
addr16
and
or
xchg
ret
pop
fcomps
mov
sub
cmc
mov
mov
aas
cmpsb
xor
mov
xor
xor
or
mov
test
loop
je
addr16
mov
mov
jmp
bound
jmp
adc
out
mov
nop
call
cmp
repz
mov
add
imul
dec
movsl
dec
jge
out
jg
jmp
outsl
jg
mov
push
ljmp
lahf
movsb
mov
add
fstpt
imulb
lcall
or
cmc
imul
inc
mov
and
mov
mov
dec
or
add
fwait
stos
decl
adc
psubsb
fmuls
mov
xchg
std
push
clc
or
adc
rorb
mov
cli
pop
outsl
nop
fmulp
int3
push
insl
xor
cwtl
sub
inc
fnsave
das
xlat
cmp
jp
scas
cmpb
outsb
inc
out
sbb
xchg
push
loope
xchg
btc
mov
jle
sub
sub
test
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
pop
fisubs
inc
addb
xor
jp
scas
sub
mov
movsb
jle
push
add
inc
lods
into
movsb
pop
test
jb
sbb
arpl
adc
adc
sub
inc
repnz
or
and
xchg
cmp
insl
push
inc
jae
ret
jge
lods
push
mov
movsl
adc
lcall
pop
jg
js
icebp
lods
jne
int3
pop
mov
inc
lea
add
mov
sub
pop
bnd
dec
shlb
jne
push
shlb
insl
js
and
cmc
cwtl
mov
adc
pusha
and
aas
mov
repnz
inc
sbb
jp
mov
lret
aaa
push
mov
or
add
jecxz
mov
fucom
jle
or
rclb
pop
lcall
in
dec
popf
adc
leave
orb
xchg
add
lea
mov
dec
mov
jg
aaa
jbe
fidivl
stos
dec
mov
jns
into
mov
inc
adc
fisttps
mov
cmovs
inc
push
xor
xorb
ljmp
ja
mov
leave
bound
mov
cmp
jg
fs
inc
inc
sbb
mov
std
or
mov
dec
inc
fisubrs
pop
inc
cmp
nop
mov
and
or
add
dec
test
mov
dec
andl
mov
cmp
cmp
sub
and
jne
out
icebp
dec
xor
pop
addr16
mov
cmp
cmp
mov
mov
xor
test
out
jo
das
cld
aam
sub
xchg
dec
adc
fnstsw
add
mov
mov
xorb
lret
in
sub
test
in
and
jno
and
outsb
ss
push
test
in
add
les
cmp
pop
aam
adc
dec
xchg
mov
test
add
jno
pop
push
test
sub
sbb
imul
mov
push
xor
gs
adc
xchg
mov
xor
cmp
icebp
inc
idivb
inc
loop
push
lods
ret
inc
arpl
push
and
lret
outsl
divb
xchg
pop
push
rorb
fwait
cmp
pop
sub
mov
inc
es
outsl
movsl
sbb
fiadds
cwtl
repz
out
faddl
or
fucomip
jl
jo
aaa
mov
repz
clc
dec
cmp
xchg
cmpb
shll
xor
aaa
or
je
test
call
fs
xchg
stc
xchg
push
fisttpll
inc
lods
mov
xchg
mov
cmp
cmp
push
pslld
cltd
iret
xor
push
pop
out
jae
mov
or
add
or
cwtl
lea
lods
push
adc
mov
pop
sbb
outsb
ljmp
or
xor
iret
pop
rol
pusha
adc
pop
fistps
fs
push
pop
fadds
ss
lcall
push
push
xchg
inc
add
test
lahf
jecxz
dec
incl
cmpsb
or
pop
test
loope
repz
fisubrs
cmp
adc
push
into
test
daa
loopne
stc
mov
jecxz
pop
pop
daa
sbb
imull
out
add
and
mov
cli
mov
add
mov
aam
sbb
rorb
and
nop
subb
add
push
fiaddl
push
jb
out
mov
push
in
adc
mov
std
pop
mov
rclb
pop
clc
ss
cmpsb
xchg
mov
pop
clc
push
push
cli
lret
sbb
insl
dec
xchg
adc
not
ret
fs
mov
pop
add
add
dec
shlb
jp
stos
xchg
mov
ret
outsl
cwtl
scas
mov
in
sbb
shrl
scas
iret
leave
fsubrl
mov
out
mov
out
dec
aas
fadd
push
into
mov
ret
sub
jecxz
aam
mov
jecxz
sbb
lods
push
aad
adc
sbb
fs
xchg
mov
pop
data16
xor
sub
ds
cmp
cmp
jb
xchg
test
jle,pn
jmp
xor
jb
lods
jl
dec
cmpsb
out
std
in
cmp
popf
inc
pop
cld
sub
mov
icebp
stos
fadd
test
mov
mov
stos
jne
push
movsl
mov
mov
out
jecxz
push
mov
or
fnstenv
or
cmp
mov
leave
lods
mov
sub
rcrl
es
and
add
leave
negb
iret
and
addb
jp
dec
xlat
jae
cmp
jmp
xchg
loop
daa
jge
push
or
inc
rcrb
mov
push
mov
insb
mov
lahf
scas
fidivs
dec
dec
out
popa
cmp
push
sub
xchg
pop
shl
int3
inc
lcall
inc
cmp
jno
arpl
inc
ljmp
lods
mov
psubsw
mov
les
loope
mov
push
leave
xor
pmaxub
dec
jns
mov
sub
idiv
mov
adc
cmp
ljmp
dec
sbb
pusha
push
sahf
push
pop
cmc
sub
xchg
adc
imul
pop
es
ljmp
jns
aaa
add
call
ret
enter
shlb
pop
fwait
stos
in
sbb
mov
dec
cmpsb
push
push
or
mov
add
pop
cli
lret
pop
aaa
pop
sti
push
or
insl
sbb
lahf
adc
mov
adc
imul
int
insl
adc
xor
arpl
repnz
mov
ss
rcll
ret
test
pop
inc
mov
xor
out
lea
mov
lahf
xor
sub
sbb
add
dec
fstp
notl
sub
pop
jo
sub
popf
xchg
sub
daa
dec
cmp
int
sub
sbb
adc
pop
out
sub
fnstcw
nop
nop
adc
lahf
movsl
nop
ret
and
icebp
lahf
das
shl
icebp
es
push
sarl
sbb
inc
xchg
dec
xchg
cmp
mov
into
inc
gs
aad
adc
fisttpl
pushf
adc
movsb
pop
rorb
dec
cmp
out
mov
je
sub
xlat
sub
std
arpl
xor
in
ret
loope
lock
call
push
inc
fldcw
in
clc
outsl
jnp
jl
rolb
clc
sbb
sbb
push
fucomi
mov
loop
xor
xorb
cwtl
lret
jbe
xchg
mov
in
stos
test
add
orb
inc
cld
fsub
cmpsl
jns
sbb
sub
fsub
stos
call
cmp
push
cmc
aaa
out
mov
scas
out
bound
mov
fistps
sub
xor
mov
xchg
push
das
cld
outsl
mov
and
sbb
inc
cld
jno
test
xor
push
shlb
cli
sbb
jp
popf
int3
mov
stc
js
loop
adc
ja
cld
push
cwtl
repnz
aas
mov
adc
xlat
push
pop
out
xchg
pushf
aaa
out
loopne
jns
repnz
xchg
cmc
lea
cmpsb
push
and
pop
push
ljmp
roll
stc
enter
adc
pop
aas
push
mov
jbe
loopne
in
insl
cmp
push
in
add
fildl
jg
cmc
inc
aaa
mov
cmc
negb
adc
pushf
inc
dec
je
roll
or
insl
insl
jne
cmp
jno
pusha
into
cli
and
inc
aaa
push
arpl
int3
pop
sub
aaa
pop
sbb
stc
imul
rorb
into
imul
jae
movsl
adc
sub
out
scas
popf
and
adc
jmp
mov
jge
xor
and
and
ret
add
fistps
or
mov
cmpsl
js
out
mov
push
dec
and
push
mov
daa
fstps
rcll
dec
adc
push
xor
jns
add
jnp
cmp
fmul
sbb
dec
inc
test
cs
nop
sbb
xlat
xchg
inc
mov
lods
mov
jg
or
sub
jne
loope
repz
jge
mov
arpl
loope
and
popl
lret
adc
mov
sbb
mov
and
stos
cmpsb
dec
je
jmp
sub
and
mov
mov
push
xchg
shll
incl
and
xchg
fdivrl
aas
in
xchg
data16
push
sti
adc
xlat
mov
and
enter
hlt
cmp
ret
in
cwtl
fs
lods
cwtl
div
lods
xor
aas
jae
mov
shlb
jp
shr
mov
mov
push
fs
out
xlat
cmp
into
sarl
notl
cmpsl
scas
mov
mov
dec
pop
cmp
fmulp
push
scas
stos
push
mov
insb
imul
rorl
dec
sar
aas
cs
sbb
adc
or
iret
sbb
xchg
sbb
leave
jns
xchg
loop
mov
mov
out
pop
out
fmull
rcrl
int
and
fdivp
adc
and
lret
repz
add
jge
or
cwtl
outsl
mov
iret
push
xchg
jnp
jbe
pop
ja
sub
nop
inc
xchg
fnstenv
adc
push
mov
ret
cmpsl
pop
inc
jecxz
inc
adc
ret
test
cmp
push
dec
fcmovne
mov
adc
shlb
aad
inc
mov
lock
addr16
adc
je
xor
or
push
jmp
inc
clc
mov
xchg
push
mov
xchg
xchg
sub
mov
xor
inc
sub
xor
loope
lret
addl
cmp
mov
arpl
and
jb
imul
fcomi
pop
enter
jp
xor
mov
jo
lahf
in
and
fs
adcb
nop
fcomps
mov
js
and
cmp
sti
pop
cmp
jno
push
adc
xchg
call
popa
push
xchg
sbb
mov
sti
aas
xchg
out
out
mov
jecxz
test
ret
ret
in
sarb
mov
inc
movsb
loop
sub
push
push
outsb
insl
xchg
inc
adc
testb
dec
in
lods
out
xchg
movsb
inc
mov
int
jmpw
les
push
fcmovnb
leave
push
int
mov
int
add
lret
icebp
int3
das
fsubs
or
push
cmp
and
xor
push
insb
mov
mov
adc
mov
pushf
and
fsubs
sbb
out
or
sub
movsl
inc
jge
lcall
mov
mov
mov
add
in
mov
sbb
in
xor
or
out
push
and
repz
sbb
add
sub
jmp
les
rorb
push
mov
shl
mov
imul
push
lret
and
add
or
cmpsb
adc
sbb
mov
push
clc
fs
loop
frstor
es
lods
add
adc
xchg
iret
lods
sub
mov
sti
imul
inc
sub
jae
mov
push
cmp
jno
cmp
stos
jne
xchg
in
imul
cwtl
insl
jne
shll
push
out
mov
das
shll
ret
shll
sahf
inc
dec
enter
push
sbb
scas
xorb
shrl
mov
mov
dec
mov
jbe
xor
out
inc
out
scas
loope
test
mov
and
cmpsb
sub
lahf
hlt
test
pop
xor
xor
cli
mov
or
sub
fs
jbe
leave
jns
and
das
sbbb
fisubs
inc
adc
notb
js
ljmp
add
jnp
std
stos
pop
lods
es
sub
cmp
pop
sbb
mov
cmp
bound
jle
or
gs
icebp
inc
lock
loopne
xchg
sub
xchg
aam
jae
sbb
repz
mov
push
es
in
mov
pop
cmp
sbb
mov
mov
loop
lods
xor
ljmp
add
lods
xchg
lret
jmp
mov
mov
cmp
mov
pusha
in
mov
hlt
int3
jge
jle
in
xlat
cld
lret
adc
jne
rorl
mov
loope
mov
sub
sub
cmpsb
fcmovb
subb
jle
pop
adc
fmul
and
or
cmp
fwait
cltd
or
xor
sub
mov
cwtl
lock
xor
inc
mul
popa
addr16
push
fldt
mov
repnz
jmp
pop
cmpsl
mov
sbb
cmp
mov
push
das
xor
dec
sbb
shlb
js
cmc
xchg
jb
mov
lock
pop
fidivs
imul
jecxz
call
imul
mov
call
out
rcl
repz
or
and
jnp
pop
test
jp
mov
cmovns
cmp
dec
insb
xlat
pop
mov
in
push
aas
cld
adc
add
ljmp
mov
cmp
mov
dec
ret
dec
mov
cld
icebp
fcmovne
jbe
lods
idiv
mov
decb
xchg
mov
pop
pop
pusha
ficompl
adcb
ds
xor
sub
jo
mov
out
cmpsl
je
mov
pop
sub
sbb
ljmp
in
jae
push
nop
hlt
sub
mov
xchg
adc
pop
ret
jle
cmp
rcrb
xor
out
into
xchg
inc
mov
hlt
pushf
movsl
mov
mov
mov
and
sbb
sub
fbld
insb
nop
mov
int3
out
arpl
sub
mov
fisubs
shl
push
out
inc
movsb
jecxz
cs
push
add
dec
shlb
scas
stos
mov
xor
sbb
jp
jle
clc
sbb
repz
cmp
jp
push
mov
and
dec
mov
out
in
mov
orb
pop
push
jno
scas
fsubrl
mov
sub
notl
mov
mov
add
je
sub
xor
or
divb
cltd
xchg
and
sub
dec
xor
mov
xorb
adc
or
inc
jmp
jne
pop
adc
mov
push
cmp
ret
add
test
adc
push
lds
xchg
cmc
add
js
pop
loop
aad
popa
push
ss
fistpll
fdivrl
clc
pop
cmpsl
dec
add
loop
jecxz
test
mov
jmp
sbb
jne
cmp
sub
addr16
pushf
fwait
and
or
adc
xchg
push
xchg
jbe
pop
fucomp
jp
aam
mov
and
push
insb
movsl
push
jnp
enter
pop
outsb
adc
jecxz
pop
inc
mov
xor
xchg
pop
xor
mov
dec
dec
and
mov
ljmp
cmpsl
out
mov
cli
and
jle
mov
xchg
inc
fistps
mov
jb
cmp
arpl
lret
cmpsb
mov
or
adcl
out
icebp
fs
cltd
or
nop
sbb
cs
nop
loope
sarb
repz
testl
sahf
in
call
pop
mov
insl
imul
sbb
arpl
sbb
cli
pop
xor
loop
es
jmp
jl
pusha
mov
mov
cmpb
rorb
push
scas
inc
pusha
add
dec
setno
dec
dec
movsl
push
lock
scas
ss
adc
popf
push
fisubrl
mov
adc
and
add
push
int
xor
aaa
xchg
leave
sub
push
ja
mov
mov
mov
les
mov
imul
jmp
push
rcr
mov
pop
test
adc
imulb
and
pop
mov
adc
push
pop
int3
sahf
mov
pop
mov
xchg
cld
ss
mov
ffree
shll
shll
sti
jo
stos
pusha
cmp
pop
add
xor
push
mov
ljmp
inc
and
lds
dec
out
pop
sub
cmp
sahf
jb
ljmp
adc
jb
pop
xor
clc
mov
aad
gs
xorl
test
ret
xor
xchg
mov
sbb
pop
inc
std
fistl
xchg
push
loope
xchg
add
xchg
shlb
or
stc
outsl
push
xlat
pop
jno
inc
sbb
imulb
sub
mov
jecxz
je
insb
leave
lds
sahf
dec
aas
sbb
jmp
dec
in
push
repnz
das
repz
adc
pop
mov
push
andl
rorb
movsb
filds
adc
mov
out
xchg
fsubl
cli
dec
fldl
adc
push
clc
ja
mov
mov
aad
add
pushf
shr
sub
fldcw
inc
inc
rcrl
sarl
sbb
inc
adc
std
and
sbb
mov
cmp
mov
sbb
add
fnclex
shll
popf
cld
mov
xlat
mov
lds
test
out
gs
das
rcrb
aaa
andl
xchg
cmp
aas
xchg
sti
xchg
testl
rcrl
jo
add
lock
ja
push
gs
xchg
cmp
fmull
rcr
fists
in
shl
mov
jno
pop
pusha
ret
mov
and
movsl
sub
jmp
fcomip
adc
pusha
jb
xchg
add
cmpsb
xchg
jg
adc
ljmp
mov
stc
sub
adc
daa
push
or
repz
mov
and
frstor
add
subl
cmp
mov
lods
imul
inc
jb
leave
nop
lea
test
out
loopne
fimull
loope
out
ja
ljmp
pop
call
mov
rolb
jb
xor
into
cmp
lods
add
std
mov
add
jno
les
adc
flds
mov
jg
scas
and
inc
jg
outsl
movsl
push
push
mov
test
adc
int
and
jle
cmovo
cmc
test
fisubrs
decb
js
vunpcklps
mov
flds
pop
cmp
loope
and
in
sub
mov
outsl
inc
push
int3
adc
xorl
daa
mov
jecxz
push
das
cmp
scas
orl
add
data16
mov
sub
add
adc
add
xor
gs
cmp
div
xchg
pop
cmpsb
xor
imul
testb
into
std
mov
cmpsb
mov
idivl
mov
clc
addr16
popf
mov
pop
outsb
and
add
or
aad
xor
cmp
xor
sbb
xor
push
mov
sub
mulb
loop
push
je
rcll
test
popl
ds
and
je
aas
outsl
xchg
cmp
push
sub
mov
xlat
lods
insb
xchg
fistpll
cmp
mov
inc
sub
xchg
or
add
xchg
inc
add
dec
loop
dec
ret
inc
and
xor
adc
mov
mov
fnstsw
test
loop
cwtl
loop
mov
mulb
mov
shlb
out
xor
or
fidivrl
hlt
fimull
out
cmp
hlt
adcb
mov
fnop
or
js
es
jbe
andl
popf
call
and
stos
adc
mov
bound
sub
adc
push
push
dec
sbb
arpl
pop
push
dec
or
lea
int3
decl
jo
fnstenv
mov
xchg
fdivrs
xchg
xchg
add
fistpll
out
aam
pop
sub
fwait
les
cmp
vmovsldup
repnz
jo
fwait
or
js
push
or
test
push
mov
js
scas
add
sahf
jmp
sbb
rorl
lahf
idivl
testb
hlt
jle
cmp
or
jo
or
adc
lret
dec
iret
lods
mov
push
or
mov
mov
out
fwait
ss
call
dec
rorb
es
sbb
das
pop
lret
pop
pop
stos
je
and
inc
sbb
adc
jae
cmp
cmp
mov
inc
dec
dec
rorb
stc
push
lret
clc
das
ret
pop
push
pop
jmp
adc
push
adc
and
xchg
and
sbb
insb
inc
scas
sbb
inc
adc
pop
and
push
loop
sbb
cld
cs
cmp
mov
push
fadds
push
popa
pop
mov
and
movsb
lahf
adc
stc
cltd
pop
and
cmp
mov
and
xchg
ret
add
push
sub
addr16
inc
sub
out
hlt
inc
loopne
cmp
and
mov
cmp
rcll
imul
pusha
fwait
sub
sbb
cli
stc
sbb
jbe
dec
inc
inc
cltd
pop
fs
inc
scas
fistps
sub
sti
enter
cmp
popf
lcall
fwait
cwtl
and
mov
pop
ret
sbb
add
mov
ds
testb
dec
xchg
lret
imul
mov
cmpsb
ficoms
mov
push
cmp
adc
test
pop
inc
andb
sbb
cld
cmp
imul
pop
or
jbe
in
ret
add
test
dec
sub
push
cmpsl
mov
xchg
push
pop
shrl
xor
push
push
outsl
sar
pmuludq
inc
int
sub
push
mov
dec
and
lcall
insb
jo
mov
mov
andb
daa
es
mov
xchg
repz
mov
iret
inc
inc
fisubrs
out
dec
inc
dec
cs
cltd
mov
push
fcomi
cmpsl
mov
in
jno
mov
repnz
arpl
pop
inc
or
clc
mov
inc
ficoml
push
xor
dec
aad
add
cmp
cs
add
mov
mov
xor
lods
sub
sbb
mov
push
jo
sbbl
out
pusha
push
ss
movsb
pop
into
fwait
sbb
loop
mov
cmpsl
in
pusha
add
imul
test
sbb
jae
jo
sbb
in
xor
mov
mov
jbe
ja
fildl
fs
sub
aaa
mov
in
sbb
xor
ss
mov
lcall
stos
and
mov
sbb
xchg
sub
xor
pop
sub
lret
ror
or
push
repnz
pushf
enter
lret
sbb
jecxz
shl
hlt
out
adc
je
notb
dec
or
mov
bound
imul
sar
dec
jge
push
lret
pushf
fsubr
inc
movsb
fs
fidivs
sbb
in
in
push
lcall
stc
push
pushf
aad
sub
fdivrs
mov
cmp
adc
stc
inc
jne
ficoml
in
clc
inc
cli
cmp
push
xor
dec
addb
imul
cmp
ds
or
jge
jecxz
mov
push
and
mov
inc
enter
inc
outsb
add
pop
inc
sbb
dec
add
push
and
mov
enter
fcomps
je
mov
jg
fsts
jb
inc
jg
push
movsl
out
arpl
out
pusha
cld
mov
aaa
pop
pop
pop
mov
jp
inc
jmp
loope
or
ds
mov
scas
out
rcrl
int3
xchg
inc
push
push
and
sbb
sub
test
adc
and
adc
push
jns
mov
jbe
push
pop
adc
scas
or
xchg
dec
inc
rolb
cmp
stos
mov
push
push
das
inc
das
dec
das
mov
xchg
lahf
stos
adc
les
and
mov
insl
movsb
fcomip
ja
mov
call
cmp
pop
popa
outsb
test
mov
lock
int
xchg
in
scas
cmc
pop
inc
cli
and
imul
vmovsd
and
arpl
icebp
loop
lcall
and
pop
add
test
add
lds
mov
or
mov
xchg
cmpsb
jecxz
ljmp
xchg
test
or
xor
ret
icebp
insb
fs
mov
or
sarl
aad
dec
popf
xchg
push
nop
jbe
mov
mov
push
fwait
jae
ficomps
xor
stos
out
insl
lahf
push
in
aam
outsb
jae
sub
sbb
xchg
mov
mov
push
fwait
mov
es
mov
pushf
dec
add
dec
cmpsb
out
sar
jb
es
mov
jne
xor
adcb
xchg
mov
dec
aas
idivl
xor
mov
subb
leave
insl
sahf
test
lret
aam
jns
sahf
aaa
dec
dec
and
inc
sbb
test
shlb
add
dec
dec
xor
and
vmread
cltd
rcll
jle
mov
rolb
jge
clc
lret
loopne
mov
mov
xorl
hlt
jns
fs
jl
clc
jecxz
das
mov
mov
dec
cld
pop
or
or
mov
pop
shll
movsb
and
je
pusha
xchg
enter
movsb
mov
sub
xchg
int3
jmp
insl
cmp
mov
shlb
xor
mov
stos
pushf
roll
adc
stc
pop
lods
add
test
rcll
dec
mov
lret
jno
es
out
insw
scas
pusha
or
cld
sub
rcr
add
jle
dec
stc
mov
loop
enter
sbb
lahf
mov
mov
pop
aad
outsl
mov
ljmp
adc
repz
inc
pusha
xchg
pop
or
add
scas
pusha
inc
jp
sarl
sub
fs
ds
cli
fdivr
out
mov
inc
xor
sbb
xor
fldl
out
push
inc
in
bound
mov
fcomi
or
lret
into
push
sub
mov
in
fistps
push
sub
imul
pusha
sbb
xorb
les
loop
sti
jg
maxps
shrb
xor
movsl
aaa
rclb
in
adc
mov
fwait
neg
arpl
xor
inc
lock
dec
xor
sbb
incb
clc
add
cli
dec
arpl
push
mov
xchg
xchg
dec
dec
and
test
inc
stc
test
in
push
shr
addr16
lds
xchg
cmpsl
hlt
movsl
pop
outsb
or
jmp
sbb
add
or
lods
cmp
push
pushf
pusha
dec
fisubl
push
int
xor
jnp
pusha
ljmp
stc
jge
shlb
ret
push
mov
icebp
int
nop
adcb
inc
das
sub
outsb
rorb
pop
repnz
les
popa
mov
std
cltd
stos
adc
stc
dec
aaa
adc
pop
xchg
mov
mov
mov
mov
mov
btr
lds
cmpsb
dec
pop
push
sbbl
adc
movsl
xchg
cmpsb
shll
stos
jae
cmp
adc
cld
xor
jmp
and
mov
cmpsb
adc
lret
jmp
mov
dec
insl
mov
inc
popa
lea
push
push
int
std
into
pop
mov
mov
arpl
push
loope
pop
lock
sbbl
push
out
cmp
and
jb
mov
call
mov
mov
pop
cmp
sbb
int
and
fiadds
std
mov
mov
aad
addr16
push
push
jge
mov
dec
iret
sub
jecxz
xchg
jo
int3
out
test
sarb
imul
dec
or
popa
lret
mov
sti
sbb
dec
adc
xlat
orb
fs
pop
cmp
std
pop
in
lea
mov
lahf
int3
inc
sbb
in
dec
fcomi
jmp
jmp
into
mov
mov
xchg
push
dec
addr16
cmp
ficompl
pop
stc
push
mov
mov
push
shl
mov
and
ds
iret
mov
cmpb
cmp
repnz
in
fisttps
add
add
xorb
sahf
dec
nop
dec
pop
test
mov
jp
or
iret
jmp
adc
cltd
mov
and
rorl
inc
add
add
test
inc
mov
fwait
mov
call
movsb
cmp
add
ljmp
mov
adc
sahf
ror
arpl
jmp
xchg
xor
mov
pop
pop
in
es
or
mov
jecxz
dec
or
ret
and
xor
xchg
es
enter
dec
jmp
lds
add
rcr
lods
jmp
movsb
mov
adc
enter
loop
leave
popa
outsl
sarb
fidivrs
cmp
adc
adc
inc
xchg
adcb
sub
pop
jo
lret
cmc
dec
and
push
pop
movl
arpl
jmp
adc
cmpsl
call
dec
push
clc
jl
mov
add
sbb
aam
cli
lods
and
pop
jp
and
mov
hlt
cld
inc
xchg
outsl
pop
aas
adc
imul
es
or
xlat
ret
loop
lds
dec
xor
in
mov
add
xchg
int
and
mov
mov
pop
xor
inc
mov
jle
sti
mov
sbb
test
inc
arpl
xchg
dec
push
mov
sub
lock
lret
aam
mov
inc
aas
enter
push
shl
call
mov
push
testl
mov
pop
sarl
adc
xor
dec
add
or
aas
dec
or
lret
cmp
adc
jbe
stc
popa
movsl
mov
daa
push
and
rcrl
faddp
mov
pop
push
shr
test
inc
sbb
xor
cmpsl
inc
push
adc
mov
dec
movsb
out
or
mov
and
or
or
nop
pop
or
add
pop
pusha
sbb
mov
aaa
jecxz
aam
sub
pop
jnp
das
jmp
sbb
outsl
ret
aaa
and
pop
jmp
adcb
pop
scas
jmp
pop
xchg
xor
repz
rolb
mov
push
leave
in
mov
inc
adc
inc
out
inc
mov
fwait
out
out
or
mov
insl
mov
gs
add
stos
mov
gs
cmpsb
outsb
cmp
and
mov
sub
cmp
jp
es
mov
dec
fwait
scas
pop
jb
mov
sub
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
fldenv
cmpl
addl
out
dec
xchg
xchg
jno
sbb
fistpl
dec
leave
mov
jge
push
daa
dec
pop
xor
dec
mov
pushf
bound
mov
mov
jl
jbe
sub
sub
sbb
mov
nop
push
pop
jg
divl
imul
sbb
jmp
mov
out
jnp
in
pop
pushf
iret
scas
mov
ljmp
js
gs
sbb
xchg
add
push
or
push
add
out
inc
daa
sbb
cmp
jl
cltd
and
outsb
cmp
xor
lret
and
cli
cltd
lds
cld
and
cmp
frstor
shll
xor
cmp
aam
mov
std
cmpsl
mov
fwait
cmp
sbb
lcall
dec
dec
sub
dec
jge
mov
sarb
push
dec
out
je
push
sbb
rclb
sbb
push
pop
sub
cmp
push
lret
and
inc
xchg
adc
push
pop
pop
icebp
loopne
test
jl,pn
out
enter
pop
mov
add
pop
sbb
dec
add
sbb
pop
mov
loope
xorb
imul
dec
cmp
dec
adc
jecxz
pushf
das
dec
or
pusha
mov
loope
jbe
cmp
aas
cmc
pop
or
mov
xchg
jo
enter
pop
adc
adc
or
push
ret
negb
or
pop
adc
out
shlb
adc
cmp
xchg
sbb
je
out
adc
jnp
fdivl
jns,pt
lret
leave
cmpsl
stos
inc
push
xchg
pop
fbld
int
push
js
in
mov
jns
xor
loope
jmp
push
adc
push
fists
jae
jne
roll
rcrl
pop
mov
dec
movsb
adc
xchg
hlt
sbb
rcll
lods
inc
inc
in
popa
leave
leavew
sahf
cmp
push
pop
xchg
fnstsw
xor
into
lods
cs
stc
aas
mov
aas
xor
jae
imul
data16
sub
xchg
clc
pushf
xchg
or
iret
stc
push
imul
xchg
ljmp
inc
or
out
popf
dec
cwtl
jns
fcmove
sbb
inc
xchg
and
loopne
ljmp
pop
in
hlt
xor
cmp
popa
int3
xchg
and
lods
sub
sahf
fiaddl
std
outsb
dec
cltd
scas
sub
stos
jnp
repnz
shrb
jb
push
jmp
arpl
xchg
xchg
sbb
sub
and
dec
sub
addr16
mov
xor
and
test
imul
iret
test
rclb
int3
in
int3
mov
les
xor
jns
xor
lods
xor
outsl
int
ret
stos
into
dec
movsb
push
dec
or
ljmp
in
imul
inc
push
push
daa
fidivl
mov
mov
mov
adc
outsb
jno
insl
pop
sbb
mov
popa
jle
inc
int
cli
inc
xor
mov
mov
push
push
movl
sub
es
adc
mov
js
lea
xor
mov
in
mov
mov
or
loopne
xor
dec
int3
and
mov
and
and
jge
mov
xlat
inc
jne
rol
stc
cmp
ficompl
dec
xor
jmp
aaa
cmp
xchg
mulb
aad
mov
pop
cmp
fidivs
mov
push
sbb
ds
hlt
repz
les
imul
pop
add
jp
cmp
inc
push
mov
das
leave
and
sbb
bound
ror
mov
repnz
mov
pop
scas
jge
in
dec
mov
dec
lds
sbb
adc
loopne
dec
shll
fucomip
sub
jmp
xchg
inc
call
cltd
push
subl
testl
xchg
rclb
jmp
int
fimuls
pop
arpl
inc
mov
call
push
push
ljmp
jo
loope
aad
pop
lds
scas
test
pop
pop
xchg
mov
xchg
jnp
push
lret
shlb
add
movsl
add
push
and
scas
cmp
out
lea
and
decb
jl
cmp
fisttpl
lret
cmc
cld
mov
pop
pusha
sub
test
add
out
push
inc
add
pop
add
push
dec
xor
adc
mov
movl
xlat
cs
lahf
notl
jge
roll
and
sbb
and
cmpb
test
adc
push
pop
jg
xor
sbb
sub
rcr
sbb
enter
cmp
mov
jg
rcl
xor
and
jp
jge
lcall
mov
push
jge
iret
add
mov
mov
cs
push
xchg
or
mov
adc
push
xchg
test
xchg
and
sbb
lret
pop
mov
pop
imul
daa
in
jg
xchg
imul
movsb
push
repnz
add
xlat
inc
scas
mov
mov
sahf
mov
or
push
addl
dec
or
loop
lret
hlt
in
cmp
pop
dec
jecxz
push
mov
test
jb
or
inc
xchg
xlat
adc
lcall
test
pop
lods
dec
xchg
sbb
sub
gs
popl
test
mov
test
dec
roll
pushf
adc
mov
fisubl
pop
inc
scas
inc
inc
into
lock
stos
jnp
mov
mov
je
jg
jno
mov
xchg
sahf
push
jp
call
cmp
jmp
adc
sahf
cwtl
outsl
push
std
invd
rcll
in
inc
orl
fldz
push
inc
sbbl
shlb
xchg
shlb
fdivs
adc
push
jae
mov
and
mov
push
pop
push
jle
pop
inc
loope
aad
cli
and
in
incb
rcl
loope
movsl
iret
pop
icebp
xchg
cmp
add
jg
ljmp
cmp
mov
in
pop
push
sar
dec
cmp
lock
repz
jnp
add
pop
out
cmp
pop
and
dec
sub
in
lret
sub
xchg
add
mov
dec
dec
sub
push
xlat
out
jle
mov
jecxz
mov
outsl
movb
js
notw
out
cli
sar
add
ljmp
stos
or
cltd
movsb
jo
push
and
nop
icebp
cmp
int
jbe
data16
push
mov
bound
cmp
mov
rcl
cmp
pop
in
xchg
js
push
ret
jae
fisubrl
mov
dec
mov
stos
or
loopne
and
and
popa
test
push
lock
rcll
sbb
jge
and
loop
jo
cmp
imul
or
fs
sub
lcall
mov
loope
adc
xchg
xchg
test
icebp
int
fsubp
out
test
cmp
inc
xchg
jecxz
fisttpll
inc
jmp
jmp
inc
jge
lret
adc
jp
mov
shrl
push
mov
sub
aam
jp
add
jmp
pop
nop
and
xor
lcall
sub
or
push
xchg
and
add
adc
push
enter
add
mov
and
dec
movsl
lret
cmpsb
scas
inc
test
rolb
push
or
sub
imul
pop
iret
and
mov
jle
adc
fnstsw
cmpsb
lahf
aam
sub
popa
shlb
xlat
xlat
sahf
jns
jp
xchg
jp
jo
jmp
sub
pop
pop
mov
les
adc
ror
add
mov
cmp
jmp
dec
sub
lret
pop
cmp
mov
xor
mov
xchg
xlat
cmp
test
add
jnp
xor
mov
jge
inc
mov
jne
jnp
std
movd
fildll
push
ret
mov
aaa
inc
mov
jl
adc
nop
addb
pusha
arpl
inc
cld
movsl
pop
shr
xchg
cmpsb
xchg
orl
mov
mov
mov
lods
xchg
mov
jp
push
sahf
sbb
stos
add
test
xlat
rclb
lret
pop
xor
or
inc
and
add
jl
jns
mov
jecxz
jns
xor
dec
rolb
mov
mov
sbbl
adc
icebp
push
ret
add
insb
mov
dec
out
sub
xor
fiadds
cltd
pop
icebp
sahf
xor
pop
rcll
ss
sbb
jbe
insl
pop
adc
push
xor
cltd
pusha
mov
or
popa
cmp
mov
std
dec
cmp
and
xchg
sbb
pop
or
push
lret
push
leave
xor
insb
imull
add
sub
cmpl
xchg
mov
xchg
jle
sub
shll
and
dec
cs
ss
xchg
cmpl
sarb
faddl
push
mov
arpl
pop
rcl
jg
js
cmc
imul
xor
andnps
mov
addl
pop
test
dec
rcrb
fnstenv
inc
sbb
sahf
push
je
xchg
xlat
shl
dec
cmpsl
in
and
or
jp
popa
adc
in
mov
sub
mov
popa
push
pop
adc
gs
add
push
pop
jg
cs
add
movsl
sbb
mov
mov
aad
dec
outsl
adc
cmp
xorb
jp
insl
dec
jnp
and
mov
lret
stc
xor
mov
ficoms
jo
mov
pop
lds
pop
sbb
shl
out
cmpsb
push
push
jge
push
loop
jge
dec
in
adc
sub
insl
push
cmp
dec
js
cltd
and
subl
mov
mov
in
jnp
hlt
movsb
xorb
movsb
pusha
dec
mov
enter
cmpb
mov
or
out
sbb
inc
jmp
jle
movsb
jnp
sbb
dec
test
push
cmp
popa
or
mov
mov
idiv
mov
xchg
dec
add
insb
aad
lds
jbe
out
lods
gs
rcll
les
mov
sbb
jb
jge
sbb
gs
mov
add
pop
enter
cmp
les
lock
pushf
shll
cmpsl
int3
push
mov
dec
ljmp
or
dec
pop
les
xchg
xchg
xor
sub
pop
into
outsl
scas
fistps
jle
loop
dec
jle
adc
lahf
jb
gs
add
out
or
subl
fwait
nop
ja
sub
mov
jge
das
sub
push
rolb
add
mov
mov
pop
lock
shl
ficompl
inc
mov
inc
jl
test
jmp
sbb
pop
insl
std
pop
mov
jo
sbb
enter
adc
dec
push
push
dec
sbb
cwtl
push
or
add
addr16
in
cmc
stos
imul
repz
mov
out
hlt
jne
mov
movsl
inc
pop
mov
dec
xor
popa
in
popf
add
inc
mov
loop
repnz
es
js
int3
mov
add
mov
repz
aaa
in
add
xor
add
push
xor
add
mov
seto
hlt
or
repnz
nop
pop
xor
add
rcrl
push
and
lret
imul
scas
or
xchg
inc
cmpsl
mov
outsb
push
jo
test
sahf
inc
jl
push
cmc
std
rolb
shll
fisubs
or
sub
nop
jns
and
lods
sub
iret
cs
push
clc
in
ljmp
icebp
shlb
cmp
int
ja
jns
loopne,pn
shlb
fs
mov
mov
ljmp
int3
js
les
inc
mov
or
fldt
mov
shrb
add
xor
jecxz
cmp
movsb
push
push
std
shl
mov
mov
lods
sub
popf
lret
mov
mov
mov
inc
rorl
stos
sub
cmp
sbb
push
pop
int3
jmp
sarb
fadd
mov
add
lods
hlt
cli
push
adc
push
jne
and
sbb
int3
adc
aad
shl
sub
fcmovnu
mov
lret
push
cltd
mov
push
fiadds
sbb
pop
pop
push
mov
mov
xchg
faddl
dec
subl
cli
aad
movsl
rorl
xchg
pushf
push
pop
cld
push
in
cld
nop
adc
sub
jl
out
sbb
popa
mov
sarl
dec
jg
jg
cli
repz
cmpsb
int3
les
ficoms
jns
or
ljmp
in
test
scas
ljmp
or
cmp
xorl
jno
sub
jns
cmpsl
jnp
mov
notl
mov
push
sub
push
push
push
push
xchg
cmpsl
jb
xchg
lea
std
push
and
loop
cmp
idiv
mov
xchg
cmpsb
push
xchg
jno
sti
hlt
out
adc
incl
and
sbb
mov
orb
inc
mov
inc
inc
loop
xor
add
pop
mov
cmp
icebp
cmp
fisubl
lcall
inc
push
inc
pop
cmp
mov
leave
jno
es
notl
or
inc
add
loopne
jmp
inc
pop
mull
shll
aas
lea
js
rorl
xlat
add
inc
arpl
insb
rorl
pop
rorl
sbb
pop
push
scas
adc
jb
fidivrl
dec
xor
lahf
mov
notl
push
pushf
jo
xor
mov
fdivs
mov
add
lret
test
xor
sbb
mov
mov
and
andb
adc
push
mov
and
sub
test
push
and
imul
dec
xor
int
push
cmpsb
mov
fdivrp
jbe
aam
lods
in
mov
add
popf
aam
adc
adcb
imul
int
daa
pop
mov
xchg
aas
lods
mov
add
ret
and
pushl
jecxz
dec
push
gs
and
test
jmp
lcall
and
repnz
cmpsb
mov
push
adc
add
and
loop
fisubrl
cmp
fwait
mov
and
iret
addr16
cli
out
push
fs
add
xor
jnp
mov
pop
addr16
mov
outsl
inc
les
out
push
mov
mov
sbb
lret
sub
test
mov
gs
cmp
icebp
sub
add
adc
flds
test
out
movsb
jo
iret
scas
mov
xchg
sbb
cmc
testb
imul
dec
pop
cmp
pop
and
jge
push
ret
stos
lcall
sbb
iret
push
add
xchg
mov
sub
cltd
or
cmc
xlat
and
out
jmp
xchg
cmpsl
push
xchg
sub
test
sarb
loopne
jo
dec
inc
fidivl
fstpl
and
shrb
mov
test
dec
mov
add
cmp
sub
mov
pop
scas
xor
jmp
sub
cmpsb
xor
pop
js
loope
jecxz
pop
jno
in
out
or
hlt
jmp
pop
dec
stc
jecxz
repz
popf
enter
mov
cmpsl
inc
jge
inc
and
cwtl
adc
xlat
or
and
xor
mov
sarl
loopne
ret
arpl
push
repz
push
push
xchg
sbb
loop
inc
sbb
xchg
lcall
sbb
pop
xor
fwait
js
testb
out
dec
hlt
arpl
ret
adc
popf
xchg
iret
xchg
sub
fwait
leave
loopne
pop
fstpl
jns
xchg
insb
cmc
loop
jp
mov
jecxz
pop
jns
sbb
pop
and
sti
insl
dec
mov
mov
sahf
scas
shrl
stos
cmp
filds
ret
xor
mov
loopne
and
adcl
xchg
mov
jne
push
lahf
inc
dec
cmp
mov
adcb
data16
sbb
insl
jg
adc
into
xor
test
mov
inc
inc
mov
cli
out
push
lcall
mov
adc
lret
mov
aaa
pop
out
pop
cwtl
inc
mov
mov
sbb
pop
and
mov
jno
fmuls
push
mov
aad
test
mov
cli
sub
test
sbb
js
cmp
out
pop
nop
scas
insl
movsl
sbb
mov
test
out
out
subb
cwtl
dec
cwtl
and
sub
aad
xchg
xchg
inc
dec
or
mov
sbb
xchg
jp
or
ds
adcb
popl
dec
lods
shll
cs
bnd
inc
rorb
jg
enter
ret
iret
rcll
aaa
cld
lock
jp
mov
lea
inc
inc
dec
cmp
jle
add
shrl
scas
pop
push
cld
mov
decb
xchg
push
mov
js
sub
rorl
sbb
test
cli
adc
inc
cwtl
cmp
out
insb
pop
pop
push
dec
push
fdivrs
push
stos
popa
fnstcw
fnstsw
lret
ffree
xor
jne
mov
cmpsl
loop
add
cltd
fidivrl
add
and
sarb
outsb
fwait
sbb
lea
cmp
xchg
movsb
inc
data16
and
sbb
ja
and
bound
push
out
sbb
add
xor
xchg
cmp
mov
int3
std
xor
jecxz
cmp
mov
ret
cld
push
jl
xor
out
cmp
fcoml
mov
loopne
adc
test
test
cmpsb
jmp
gs
je
stos
test
sbb
pop
jl
data16
mov
fistps
xchg
jbe
in
or
and
jp
pop
pop
adc
jo
fisubs
xchg
dec
cwtl
lret
test
ss
call
popa
xchg
out
pop
push
subl
int3
xchg
mov
inc
push
mov
or
loopne
pop
sarl
or
add
cmp
cmc
jo
jb
pusha
rcrb
fildl
inc
hlt
xchg
push
inc
mov
xlat
push
loopne
or
mov
mov
insl
push
mov
out
std
mov
divb
fsubl
and
and
adc
sbb
jle
aaa
inc
sbb
add
mov
sub
inc
dec
stos
pop
clc
rorl
rcl
mov
push
aad
faddl
sub
or
cwtl
sbb
jnp
ror
adc
fsubrs
cltd
xchg
shll
sub
lods
sahf
sbb
roll
fucomp
mov
fildll
inc
push
jg
imul
mov
shlb
xchg
jl
xchg
push
scas
inc
xor
fdivrs
cltd
inc
lcall
in
or
mov
pushf
sbb
das
in
lods
ja
push
mull
fisttps
test
stos
andb
mov
sub
sub
cmc
push
cmp
popa
or
jnp
scas
fsts
mov
addr16
int
adc
push
add
pop
xchg
mov
push
lahf
sub
push
gs
shll
inc
imul
call
stos
mov
lahf
mov
mov
push
mov
fisttpll
mov
jb
jl
je
mov
js
adc
inc
and
ja
jne
cmc
iret
dec
call
or
cmp
addb
cmp
jg
jo
pop
cli
icebp
outsl
ja
xor
mov
or
mov
dec
mov
andl
xor
shl
cs
in
imul
out
cmp
imul
inc
mov
mov
outsb
ljmp
sarb
jmp
jno
sub
les
pop
fs
adc
mov
push
add
xor
cmpsb
xor
mov
int3
pop
out
movsb
mov
dec
int
pop
das
add
and
pop
mov
pushf
adc
aaa
mov
cmp
out
loopne
adc
in
or
call
pop
ds
fcomi
pop
outsl
repz
jb
cli
mov
inc
ret
sahf
cmp
xchg
jl
fidivl
adc
sbb
push
cmp
mov
popf
lds
inc
fisttps
adc
lahf
bound
rcl
lock
rcll
sub
pushf
ljmp
daa
rcrb
or
clc
aam
pop
push
pop
inc
and
lea
cmp
mov
ds
jae
fwait
pop
fdivl
data16
cmp
mov
sub
sub
addb
test
xchg
mov
ret
cmpsb
or
lods
xor
sbb
fsub
sti
call
cli
popl
sub
in
sbb
cmp
int3
gs
rcr
sti
push
push
out
jmp
lods
sbb
shr
push
add
mov
repz
lcall
jb
cmp
repz
xchg
test
ss
push
jge
dec
pop
shrb
bound
jnp
mov
and
and
jo
rorl
pop
pushf
push
mov
mov
cmpl
scas
jle
add
clc
cmp
jb
sub
cmpsl
rolb
into
sub
addr16
jns
inc
xor
and
or
pop
xor
sub
test
nop
outsb
inc
xor
and
sub
xor
out
mov
mov
cwtl
push
sbb
popa
push
xor
inc
iret
pop
and
xor
xchg
pop
sbb
stos
cmpsb
xchg
pop
and
xor
adc
js
xor
mov
shrl
dec
stos
pop
jb
lea
test
cmc
aam
push
les
adc
imul
push
test
jne
leave
jmp
sbb
loopne
push
jl
xor
xor
sub
and
jo
pop
outsl
addr16
mov
sbb
loop
icebp
outsl
sbb
mov
push
lret
xor
inc
testb
xor
fnsave
sbb
jge
and
adc
add
mov
mov
jg
push
lret
pop
fsubrl
mov
les
into
jle
jo
shrb
ret
xor
push
mov
lods
pushl
sub
mov
dec
rcr
pop
push
rcr
cmp
jb
mov
cmc
fdivrl
xchg
inc
enter
aaa
sub
icebp
or
cld
cltd
adc
fisttpl
xchg
sub
mov
cmp
stc
jnp
scas
and
adc
xchg
out
test
xor
les
fs
dec
push
loopne
inc
popf
and
jp
or
into
daa
push
nop
jg
cmp
in
or
inc
jae
imul
out
pusha
ret
mov
sub
rcrb
adc
xlat
lret
arpl
idivb
mov
mov
sbb
mov
and
js
push
arpl
or
in
fbstp
mov
inc
pop
in
cwtl
fnstsw
pop
pop
lods
imul
lods
inc
sub
and
jecxz
movsb
dec
cltd
cmp
push
movsb
out
push
imul
xchg
push
stc
mov
movsl
cmpsb
xchg
mov
test
jle
sbb
int
inc
jnp
mov
hlt
inc
and
mov
pop
add
test
sub
dec
jmp
lret
xchg
imul
imul
jbe
gs
dec
or
mov
fnsave
pop
aaa
sbb
inc
push
pop
test
lea
scas
cli
jmp
sub
cmp
fdiv
jg
push
cmp
sahf
decl
repnz
or
out
add
arpl
std
lods
sti
mov
mov
push
mov
popa
or
fwait
cmpsb
lods
push
add
out
mov
insl
es
mov
dec
mov
inc
jecxz
push
in
dec
mov
push
fwait
cli
jae
fstps
jecxz
mov
inc
lock
bound
stc
movsb
cltd
movsb
jne
fmuls
jb
xor
mov
push
sub
ja
and
in
xchg
and
sbb
sub
icebp
insb
dec
hlt
jnp
mov
or
imul
inc
stc
push
pop
adc
insl
inc
dec
or
cmp
jns
add
adc
adc
inc
xchg
dec
jnp
mov
idivb
pop
ret
jmp
pop
shlb
cwtl
popf
or
adc
xor
insl
dec
test
pop
mov
adc
aaa
pop
fidivl
pop
inc
xlat
out
adc
push
lods
je
xlat
call
jnp
push
loop
mov
jg
sti
mov
addr16
mov
and
inc
data16
dec
imul
and
das
sub
adc
popa
ficompl
adc
dec
int3
mov
sbb
aam
jg
xor
cmp
cli
inc
decl
movsb
or
add
mov
insb
pop
mov
adc
mov
fbld
xchg
in
repnz
data16
shr
push
aad
mov
mov
mov
push
stos
mov
push
jno
pop
push
push
cmp
leave
and
sbb
fs
jl
lcall
testl
sarl
mov
xchg
inc
push
popf
push
inc
insl
lret
and
cltd
and
ret
jnp
andb
sbbl
jnp
fcom
lock
mov
and
and
into
ljmp
or
mov
dec
mov
hlt
mov
fwait
jbe
push
dec
push
jbe
pop
hlt
inc
xor
jnp
lret
pusha
enter
push
pop
out
imul
push
sbb
and
lret
cld
and
int
add
inc
popf
mov
inc
sub
xchg
test
push
xor
dec
jp
push
sub
xor
push
mov
push
dec
dec
push
mov
js
mov
pop
scas
fdivl
es
inc
xor
push
lahf
jge
inc
or
inc
in
out
std
hlt
ds
jbe
int
sti
lahf
or
mov
outsb
mov
and
je
cmpsl
ficompl
sbb
xchg
pushf
stos
sub
cmc
push
push
xlat
cmc
es
fwait
mov
out
dec
mov
data16
shll
test
mov
add
mov
dec
sub
inc
inc
xchg
jge
lea
inc
lock
xor
mov
scas
out
sbb
dec
pop
test
or
dec
sub
mov
sahf
loop
in
sti
push
aad
push
pusha
mov
outsl
xchg
sbb
inc
jp
scas
in
add
mov
iret
es
cmp
cs
pop
into
cmpl
rcr
addr16
mov
sbb
adc
sti
add
enter
das
mov
pop
jns
push
push
fsubs
mulb
hlt
mov
push
dec
ds
pop
add
push
and
shl
in
imul
pop
xor
push
sbb
cvtps2pi
xchg
mov
mov
cli
dec
adc
jmp
adc
imull
jne
movsl
sub
jnp
or
sarl
push
jae
cld
pop
js
and
rcrb
dec
jb
mov
mov
adc
data16
mov
mov
iret
fadds
pop
pop
les
es
sbb
in
movsl
push
cmp
or
mov
cmp
scas
mov
or
filds
testb
sbb
jae
test
lea
xchg
gs
jp
add
fcompl
icebp
inc
sub
fwait
pop
xor
loop
jbe
pop
pop
or
aaa
adc
ss
push
jecxz
int
mov
sarb
adc
or
cmp
pop
sbb
inc
fnstenv
pop
dec
adc
out
jns
mov
cli
rcrb
lcall
cmpsl
movsl
rorl
adc
fisttpl
add
mov
mov
ljmp
jecxz
inc
lcall
mov
aas
dec
or
fld
nop
mov
xor
mov
aam
lret
mov
popf
sahf
push
fnstcw
xchg
or
sbb
inc
mov
push
jo
enter
lret
push
adc
cltd
mov
inc
xor
inc
mov
push
adc
inc
adcl
xchg
push
loopne
mov
fcompl
je
xorb
sub
les
and
jae
sub
inc
cmp
in
repnz
hlt
cmp
pop
lret
rorl
cwtl
mov
lods
aad
cld
and
ret
dec
test
popa
in
mov
mov
mov
mov
cmp
out
shlb
add
sub
sbb
fs
fisubs
inc
lret
enter
inc
jno
pop
sahf
lea
pop
add
insb
add
mov
loopne
stos
imul
cwtl
pop
adc
cmp
sbb
jg
pop
mov
xorl
jbe
pop
xchg
cmp
sub
dec
test
pop
xor
cmp
xor
imulb
sbb
lock
pusha
pop
pop
push
xchg
mov
push
outsb
cmp
rorb
popl
lcall
iret
push
ds
js
lea
dec
arpl
fldl
iret
std
mov
xchg
movsl
mov
aas
and
xlat
inc
pop
loope
movsb
daa
mov
mov
notl
inc
jp
inc
mov
adc
cmp
or
sbb
ret
fnsaves
imul
adc
stos
sub
test
pop
push
push
cmp
fsubs
mov
dec
es
mov
loopne
cld
mov
add
mov
push
mov
lret
js
lods
ret
bnd
mov
bound
pop
int3
int
adc
push
fadds
inc
addr16
inc
inc
clc
inc
test
dec
adc
lds
aas
in
insb
jp
dec
ror
mov
shlb
mov
inc
sub
les
push
hlt
xlat
dec
add
push
mov
xor
stos
lcall
add
les
sub
xor
sub
mov
rol
mov
pop
data16
push
icebp
mov
pop
pop
xchg
aas
push
adc
dec
repnz
xchg
pop
stos
pop
adc
xchg
add
dec
aam
push
sub
xor
xlat
dec
push
mov
js
test
or
dec
ss
mov
mov
inc
mov
stos
mov
int3
inc
ss
adc
xchg
pop
push
or
mov
sbb
loope
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
jmp
incl
subl
pop
pop
addl
mov
push
cmp
lahf
sahf
dec
mov
movsl
test
mov
scas
mov
pop
push
mov
xchg
sti
cs
xor
mov
cmpsl
leave
mul
dec
sbbl
outsl
out
and
ds
cmpsl
mov
add
pop
mov
and
xor
mov
cvttps2pi
insl
fdiv
test
jmp
cs
pop
lret
inc
test
cmpl
sbb
insb
stc
add
daa
jg
stos
in
mov
arpl
repz
push
jnp
addr16
adc
push
jns
mov
ror
aaa
xchg
dec
addr16
pop
cmpsb
mov
lcall
push
lods
lret
arpl
mov
inc
out
std
lock
loope
xor
dec
loope
mov
cmp
add
cltd
mov
jnp
test
insl
jp
mov
mov
pop
mov
xor
inc
sar
ret
xchg
bound
add
lods
rcll
mov
lahf
adc
mov
xchg
add
jle
mov
sub
pop
fbld
outsb
ficomps
cmp
sti
xlat
mov
sahf
pop
mov
pop
inc
sub
sbb
lock
mov
popa
movsl
fldenv
dec
xchg
fdivl
sbb
int
push
daa
sar
mov
cli
fstpt
jns
cltd
jb
fsubrs
data16
jle
movsl
repz
lock
and
lods
lds
xchg
and
mov
xchg
push
in
sbb
sub
shll
cmp
mov
pop
push
cmp
stos
addb
mov
cmp
push
out
mov
lcall
adc
rorl
push
sub
pusha
xlat
cmp
arpl
ljmp
pop
fcompl
jecxz
ss
mov
mov
rcrl
repz
xor
pavgb
fstl
scas
jns
jo
scas
sbb
push
adc
out
mov
and
adc
push
adc
and
ret
or
pop
adc
push
aaa
mov
cmpsl
andl
fistl
lods
loop
or
js
xchg
orl
xchg
xor
xor
insb
xlat
iret
add
add
inc
mov
or
adc
push
aam
je
hlt
xchg
add
lret
ret
or
jbe
into
cmp
popa
orb
mov
lcall
mov
pusha
add
adc
add
xchg
stos
stos
add
mov
push
jl
outsb
mov
inc
or
jno
push
pusha
rcrl
lds
stos
sti
gs
lods
movsl
sbb
ret
shl
push
add
cmc
adc
cmp
jmp
rcrb
mov
pop
js
test
in
aad
je
test
push
stos
sub
decb
sbbb
xor
dec
out
add
push
pop
mov
test
xor
mov
lret
pushf
shll
incb
rcll
cs
fildl
push
pop
cli
nop
push
nop
dec
stc
inc
scas
dec
fucom
cltd
negl
lea
cmp
lods
clc
cwtl
shrl
mov
and
mov
mov
fsubrs
lret
jno
jno
inc
pop
aad
mov
faddl
adc
inc
sarl
xor
fwait
jle
mov
and
mov
add
pop
lret
fwait
cmp
inc
xor
repnz
add
scas
inc
jnp
xchg
cmp
imul
stc
pop
ss
cltd
test
scas
sub
fst
xchg
scas
fwait
imul
aad
test
fst
sbb
rolb
fadds
icebp
sbb
addr16
dec
xlat
pop
mov
in
cmp
adc
mov
inc
lods
outsl
mov
aas
aad
mov
sti
sub
aas
mov
je
outsl
xor
push
fcoms
shll
cli
fbld
in
sbb
mov
sbb
in
or
xlat
mov
out
jl
in
ja
xorl
adc
popf
shll
pop
xchg
hlt
and
xor
mov
mov
icebp
mov
negb
push
mov
inc
push
lods
inc
dec
push
mov
stc
cmp
mov
mov
iret
adc
ljmp
std
cltd
pop
je
pusha
jbe
repz
inc
sbb
pop
decb
lret
sbb
insl
in
mov
test
lea
ja
inc
shrb
andb
movsb
adc
mov
sub
inc
jae
add
inc
ss
stos
mov
mov
add
enter
in
xchg
and
inc
dec
test
aam
adc
xchg
aam
mov
in
xchg
es
lret
outsl
int
adc
loopne
mov
push
roll
sub
out
inc
push
xchg
mov
cmpsl
xor
cmp
mov
pusha
call
stos
insl
xor
mov
jae
imulb
and
add
loope
add
add
out
pop
in
jmp
add
mov
leave
popa
mov
sbbb
les
jne
and
jbe
sub
jmp
mov
insl
cmpsb
xchg
out
cmc
ret
outsb
fistps
pusha
inc
clc
addb
sbb
add
jbe
fimuls
jo
push
je
shrb
lahf
ret
cwtl
fmull
mov
adc
cs
sbb
pop
jle
sbb
xor
andb
inc
push
dec
inc
sar
push
lods
jmp
stos
sub
mov
into
mov
add
cmpsb
enter
xor
in
mov
sub
and
mov
mov
rcll
ret
mov
dec
pop
fcomip
mov
das
out
mov
je
cltd
test
lds
hlt
repz
push
jg
int
test
fucomip
sub
sahf
enter
mov
cmpsl
and
sarb
ss
icebp
negb
mov
dec
push
cmp
cli
sbb
jae
xor
xchg
push
pop
ret
jne
not
or
jp
jle
mov
clc
js
push
add
jbe
iret
xor
popa
fcmovu
mov
ret
or
fadds
mov
cwtl
inc
je
and
popa
mov
lret
idivb
jmp
pop
rorl
repz
fidivs
push
push
pusha
push
and
mov
std
mov
pusha
test
lds
xorl
lcall
lret
dec
mov
stc
jno
minps
outsb
iret
imul
cmp
sub
in
icebp
cmp
inc
push
mov
call
push
sbb
pop
inc
lea
fcmovnb
mov
adc
insb
mov
out
cld
dec
aas
mov
adc
cmpsl
lcall
lcall
push
pop
stc
fidivs
add
dec
pminsw
stos
mov
js
cmp
and
jp
push
sub
lock
inc
cmp
ds
faddl
das
das
and
inc
test
adc
scas
fsubs
cmp
mov
jecxz
cld
push
les
cmp
dec
dec
pop
and
jge
adc
aam
and
jle
fldt
scas
pop
sub
xor
pop
and
or
pop
or
js
mov
jmp
in
add
adc
stos
iret
or
mov
jl
cmp
adc
and
xchg
push
jne
pusha
dec
fwait
jmp
mov
pop
outsl
xchg
jnp
test
cmp
test
jmp
loopne
mov
xchg
out
or
cwtl
shrb
sti
rorl
adc
cld
cmp
out
mov
push
mov
lret
testl
ljmp
xor
pop
adc
lods
or
add
jmp
or
jecxz
push
out
and
pop
sarl
mov
lcall
decl
lret
lea
push
adc
dec
sbb
scas
pop
insl
mov
clc
sbb
fwait
stos
popa
addr16
mov
or
out
pop
push
mov
sarl
inc
inc
mov
jns
fistpll
fsubl
scas
pop
mov
and
jge
xor
shrb
loop
cmpsl
or
repnz
cmp
sti
xchg
test
fwait
es
negb
pop
cmp
dec
xchg
dec
push
dec
mov
jle
rcll
je
insl
fildl
and
jecxz
pop
sbb
mov
fwait
adc
jmp
lea
mov
push
mov
inc
repz
les
icebp
out
pop
inc
mov
mov
loopne
jno
dec
lds
in
ds
lret
xor
aaa
adc
int
rcrl
stos
sub
popf
movsb
inc
mov
xor
aad
sub
cmp
push
sbb
dec
xor
add
outsb
jnp
dec
call
push
scas
mov
scas
out
int
dec
adc
push
add
mov
jnp
mov
or
testb
mov
xchg
and
add
pop
inc
sbb
inc
xchg
pop
inc
fnsave
sahf
mov
xor
fcoml
sub
lods
adc
cmp
sub
add
dec
jae
scas
mov
sub
cmpsl
adc
cmp
push
test
mulb
outsl
pop
sub
dec
xchg
stos
inc
inc
cltd
std
add
je
push
sub
movsb
std
mov
push
and
push
xchg
stos
rclb
inc
sbb
push
mov
adc
rorb
and
xor
aaa
cwtl
mov
jnp
or
bound
mov
xchg
out
lahf
sbb
rcrb
fidivl
xchg
or
orb
aas
sub
movsb
stc
xchg
fsubrl
sbb
fsubl
int
mov
inc
add
jle
int
sahf
in
push
repz
mov
fdivrl
jmp
lds
dec
lcall
lods
cltd
and
fmulp
dec
mov
push
bound
pushf
outsb
neg
mov
mov
sub
xchg
pop
int
xchg
or
jge
iret
pop
mov
loop
out
dec
xchg
push
loope
lods
jne
inc
fstpt
cmpsl
in
lods
mov
inc
lods
mov
fadds
sub
sub
in
lahf
mov
mov
add
insl
iret
cmp
dec
outsl
mov
lahf
cmp
mov
or
mov
lods
xorb
adc
sarb
imul
push
sbbb
push
sub
push
xor
test
mov
mov
fbstp
or
fildll
xchg
or
mov
add
pop
nop
mov
xcrypt-ofb
cmpsl
scas
adc
out
dec
mov
dec
and
jae
pop
repz
or
jp
cltd
jp
sub
dec
sahf
fisubrs
fsubrl
mov
scas
iret
or
xor
loop
mov
shlb
sbb
adc
pop
imul
dec
lock
mov
jbe
lahf
xor
das
lret
clc
rcrl
cmpl
adc
mov
xchg
xor
push
xchg
insl
sbb
add
fwait
add
mov
dec
nop
xor
xor
mov
mov
lock
dec
sbb
aas
add
pop
aam
mov
jmp
das
jb
movsb
mov
insl
mov
pop
xchg
cs
and
pusha
in
sub
ret
ret
repz
sahf
pop
and
push
mov
les
push
enter
push
out
and
adc
push
arpl
or
mov
aad
sahf
ja
bound
xchg
das
orb
popf
rcrl
call
icebp
jb
ljmp
add
scas
cltd
jle
jns
enter
fcmovne
aam
sub
sub
inc
arpl
lds
mov
stc
mov
in
rorl
cmp
bound
cli
lahf
mov
push
mov
mov
cmp
sub
pushf
fwait
or
inc
sbb
mulb
jne
je
push
faddl
aaa
push
jns
mov
jbe
and
pop
js
outsb
inc
std
shl
pop
sub
push
xor
jne
nop
out
mov
push
cmp
aad
cmp
xchg
jge
inc
and
repz
popa
and
popf
fwait
mov
lock
xchg
popf
cli
xor
test
test
push
jbe
loopne
loope
pop
bound
and
sub
fwait
insl
mov
push
movsl
push
jmp
subl
xor
adc
or
push
pop
mov
inc
icebp
nop
push
sub
outsl
inc
push
frstor
inc
frstor
mov
add
push
outsb
push
cltd
pop
mov
rcll
movl
mov
xchg
test
push
mov
or
aad
lds
xchg
fdivl
sbb
inc
sbb
fdivl
push
stos
inc
outsb
repnz
test
dec
ret
repz
or
and
mov
push
jg
mov
adc
rcl
imul
xor
or
imul
out
add
sub
movsl
push
adc
icebp
scas
xchg
bnd
aam
xchg
cmp
jg
sbb
arpl
ja
shlb
jg
ja
jl
stos
or
and
push
popa
fcmovb
sarb
sbb
dec
add
add
push
loope
jle
test
les
out
lcall
xchg
stos
cltd
out
mov
push
mov
fdiv
cltd
mov
xor
test
cltd
jne
pop
jecxz
mov
int
orb
mov
icebp
and
pop
mov
dec
pop
and
aam
sbbl
rcll
ret
xchg
aas
lods
inc
xor
adc
add
rcll
fdiv
scas
std
stos
sbb
lock
out
dec
xchg
xchg
inc
arpl
jno
mov
jae
lods
cwtl
push
xlat
insb
sub
fsubl
ljmp
push
xchg
and
jbe
jl
adc
mov
dec
sahf
cs
sbb
pop
leave
mov
test
pop
daa
add
out
mov
sti
out
outsl
xor
add
aad
pop
dec
out
mov
iret
or
lea
popf
mov
sbb
in
cmpsl
dec
sti
jae
mov
push
rorb
push
jno
inc
lahf
dec
sub
xchg
xchg
sub
rcrl
pop
jns
ficompl
in
scas
push
jecxz
mov
and
movsl
mov
cs
sub
or
fs
lds
ss
and
jecxz
or
pop
loopne
sub
pop
push
push
pop
push
and
jp
sub
out
sbb
dec
jp
testl
push
mov
inc
cmc
inc
xchg
cmp
ss
shrd
incb
cmp
scas
add
pop
mov
mov
cmp
je
sub
std
add
in
lret
adc
mov
je
dec
fsubs
or
fldl
cwtl
and
jge
or
movsl
mov
ret
cmp
clc
push
vorpd
and
adc
nop
loopne
jo
jle
adc
sub
xchg
adc
push
loop
vmread
jo
cmpsb
ss
lods
je
and
push
mov
lock
lahf
mov
ds
andl
and
xchg
sub
shlb
outsl
clc
pop
pop
rolb
ret
xchg
jg
mov
mov
sub
adc
or
rorb
jge
xchg
in
mov
insl
iret
xchg
jg
and
adc
xor
fldl
shrl
movsl
fnsave
push
notw
cmpl
add
out
mov
lods
ret
mov
jp
movsl
inc
repnz
pop
lods
mov
pop
mov
enter
test
sub
pop
jp
pop
jb
daa
clc
mov
popf
ficompl
cmp
scas
xchg
lock
sbb
push
or
scas
leave
mov
add
pop
or
cmp
lods
mov
adc
mov
movsl
rolb
btr
out
loopne
mov
shlb
add
popf
jb
xchg
sub
or
es
loopne
xor
inc
or
xchg
and
jno
outsb
or
shll
xor
fnstsw
orb
push
sub
push
mov
fidivs
mov
or
popf
movsl
and
cli
or
jae
add
sti
mov
xor
gs
mov
ret
sti
test
ficompl
jb
push
sub
jbe
scas
lea
cli
add
mov
call
outsl
dec
repnz
sbb
std
and
jne
mov
fwait
aas
mov
stc
xor
xor
mov
adc
out
call
mov
mov
ret
pusha
lea
jb
mov
xchg
fwait
scas
ljmp
mov
adc
add
dec
lcall
push
mov
inc
add
cmp
das
cli
mov
cmpb
pop
outsl
int3
outsl
mov
testb
outsb
pusha
push
sub
adc
jmp
inc
loope
loope
jnp
sub
ljmp
stc
ret
pushf
cli
out
dec
lods
test
ja
lahf
insl
in
push
lds
shlb
ret
xchg
or
aad
mov
fadds
imul
fs
push
fdivl
sub
mov
jmp
lahf
fadd
xchg
lahf
ficoms
lods
xor
stc
push
out
dec
push
std
hlt
int
add
pop
push
sti
add
dec
xchg
jno
adc
xor
and
mov
hlt
popa
cmpsb
add
aas
sti
jmp
leave
jp
mov
sbb
xchg
mov
adc
into
sub
cmp
push
add
fisttpl
jmp
pop
in
or
insb
shrl
pop
fidivrl
xor
fs
out
jb
rcl
dec
or
lea
xor
and
dec
test
and
xchg
movsb
cltd
or
sbb
stos
or
pushf
xorb
outsl
inc
add
lahf
mov
sbb
or
adc
sub
sbbl
inc
inc
inc
xchg
in
repnz
into
pop
mov
cltd
jnp
sub
adc
adc
sub
flds
rorl
loope
test
pop
shlb
sub
inc
cs
mov
jb
cmp
mov
gs
jns
rcrb
pop
inc
ficoml
mov
xor
rcl
pop
iret
ja
ret
add
xor
andl
loopne
cmp
lret
enter
and
imul
cld
testb
jmp
data16
leave
jbe
jp
mov
cmp
outsb
add
jmp
enter
xor
xchg
pop
cvtps2pi
enter
inc
lods
mov
je
pop
outsb
in
out
push
cmpsb
jnp
sbb
jns
xchg
mov
inc
jbe
stos
inc
imul
movsb
xor
and
jb
popf
arpl
cli
fldenv
test
ret
mov
fcompl
inc
incl
movsl
pop
xor
cmp
loope
gs
in
fucom
mov
addr16
repnz
inc
mov
lods
pop
call
or
out
pop
inc
mov
arpl
pop
test
mov
jns
pop
pop
cmp
loop
jp
cmp
pop
es
sbb
pop
int3
outsl
sub
dec
cmp
mov
mov
loop
mov
xor
pop
inc
jmp
xchg
lods
add
adc
icebp
out
jb
sbb
std
cmpb
cli
mov
pop
fcoml
daa
cmp
stc
lahf
sub
cmp
mov
pop
mov
jmp
mov
xor
sub
rcrb
mov
out
sub
sub
insl
shl
cmp
daa
mov
xchg
outsl
divl
fwait
jnp
sbb
test
dec
loopne
add
ret
adcb
push
jecxz
xchg
inc
fs
ja
cmpsl
icebp
adc
mov
sbb
pop
fistl
push
negb
stc
push
movsl
jae
lret
pop
mov
or
daa
mov
xor
leave
aam
xchg
stos
xor
sbb
push
sub
dec
jo
mov
loope
push
jl
jne
dec
in
leave
inc
negl
loope
divb
stos
fwait
shl
fcmovb
mov
dec
fcoms
pop
and
insb
outsb
adc
mov
fiadds
mov
xchg
dec
outsl
sub
xor
ss
sub
mov
lea
and
icebp
dec
xchg
sbb
and
loop
jle
push
xchg
push
push
add
xor
sub
lret
push
int
jo
sbb
adc
pop
call
mov
leave
lret
loope
adc
adcb
push
stos
xchg
outsl
or
mov
mov
mov
sub
repz
fisubs
pop
pop
lahf
sbbb
sbb
repz
fnstenv
test
sbb
loop
pushf
ljmp
mov
insl
andb
sbb
loop
xor
cmp
ret
repnz
mov
in
lds
pop
clc
jbe
call
jg
pusha
sar
and
lret
cmp
daa
dec
dec
adc
xorl
sbb
inc
jae
mov
shrl
inc
jg
sub
xor
or
test
cmp
mov
push
lret
movsl
loope
mov
shll
dec
or
movsl
cmc
xor
iret
enter
dec
xchg
xor
stc
aas
inc
add
pop
mov
sbb
divb
inc
lock
movsl
insb
or
xchg
dec
jecxz
inc
cmpsl
jmp
je
notb
mov
dec
jmp
daa
jmp
cmp
in
jle
xor
orl
sahf
cs
and
je
inc
xlat
movsl
mov
scas
insb
sbbl
stc
loope
mov
cmpb
inc
jno
sub
mov
push
imul
jl
xor
xlat
mov
pandn
xor
mov
call
lds
mov
ss
outsb
sub
popf
aaa
iret
jnp
mull
jecxz
test
cmp
cmpsl
loopne
ficoms
jl
mov
je
pop
cli
inc
or
push
dec
or
popf
jle
and
popa
and
or
and
adc
push
inc
xor
imul
push
ss
or
mov
pop
mov
push
jg
rcr
add
dec
rcr
pop
mov
add
cli
and
and
loope
jne
jae
arpl
lock
scas
ret
dec
mov
sbb
aaa
cs
jle
idivb
pop
or
add
hlt
lods
outsl
test
ret
pop
pop
push
jmp
dec
rclb
in
xchg
or
jmp
aaa
xor
nop
add
sar
dec
mov
inc
arpl
popf
into
push
sub
sub
adc
pop
loop
pop
inc
add
fbld
mov
pop
or
ljmp
arpl
jno
mov
inc
push
orl
mov
inc
sahf
mov
aaa
lahf
das
ror
mov
shlb
and
mov
mov
xchg
adc
pop
xchg
or
mov
xchg
out
adc
inc
jns
mov
scas
andl
pop
sbb
lret
and
xchg
cmpsl
js
add
dec
pop
inc
orl
pop
fs
pop
test
movsl
xor
xor
bound
pusha
pushf
pop
sub
adc
es
sbb
rcrl
jns
ret
adc
imul
mov
mov
or
or
sbb
jecxz
xchg
shlb
mov
xor
ljmp
in
loop
mov
sbb
mov
push
inc
aad
daa
push
adc
movl
jbe
test
pushf
add
cmp
push
push
addr16
push
adc
repz
pop
push
mov
xchg
data16
adc
icebp
push
cmp
repz
fs
pop
push
call
test
sahf
jl
lods
inc
shrl
nop
inc
or
jmp
xlat
xor
pop
mov
sbb
xchg
pop
xchg
sbb
and
lods
fldenv
fiadds
or
out
loop
pop
pop
repnz
cli
fsqrt
or
mov
push
mov
lea
inc
sbb
imull
clc
mov
je
mov
fldcw
inc
dec
push
call
cld
and
outsl
lahf
mov
bound
imul
ret
cmp
mov
mov
jbe
cmp
pop
outsl
imul
int
mov
sbb
das
scas
arpl
dec
mov
lret
mov
fnstenv
push
ret
int3
dec
dec
lds
jg
and
sbb
push
jge
adc
imul
add
xchg
lret
cltd
xor
push
add
adc
fld
out
pop
and
ss
inc
addb
test
xchg
jmp
sub
or
rcll
mov
jp
mov
rcrl
and
loopne
imul
mov
push
mov
lods
ss
cmp
mov
call
popf
sub
in
cltd
adc
pop
daa
adc
jge
dec
sbb
adc
pop
push
lahf
fldenv
in
repz
cmpsl
cwtl
and
sahf
jl
adc
movsb
or
or
jnp
push
out
decb
dec
mov
mov
dec
inc
out
sarl
adc
cwtl
lods
dec
cmpsl
iret
or
rol
inc
sbb
pop
jle
mov
cmp
inc
push
push
movsl
pop
and
mov
xchg
add
xchg
cmpsl
mov
jns
sbb
pop
lahf
nop
lahf
mov
negl
xchg
bound
fmull
ret
mov
stc
nop
push
outsl
mov
sub
jnp
or
addr16
pushf
enter
aaa
fmuls
dec
les
and
jb
fcomps
stc
xchg
pop
xchg
arpl
push
dec
push
xchg
jg
cmc
push
adc
ret
push
clc
fistl
or
lahf
dec
sarl
and
dec
adc
bound
xchg
cs
adcb
ror
nop
iret
int3
mov
mov
dec
fiadds
sub
lcall
dec
dec
rorl
dec
int
imul
xchg
pop
inc
xor
outsb
fucom
sar
sub
daa
ret
in
cmpsl
mov
stos
mov
pop
or
sub
lret
sbb
cltd
xor
sub
adc
cmp
mov
je
cwtl
sub
sub
repz
loope
insl
fildl
loop
push
sub
movsb
les
adc
lock
sbb
push
xor
push
js
sbb
xchg
pop
ror
hlt
push
in
lret
add
add
pop
xor
fsubl
orb
jle
lcall
push
pushl
mov
xor
inc
pop
das
sarl
mov
dec
lcall
xor
das
aas
xchg
fistpl
out
adc
dec
add
pop
adc
mov
push
mov
cmpsl
shll
fwait
test
enter
and
je
scas
jl
popf
and
push
pop
cmpsl
stos
lcall
sub
push
ss
sar
mov
les
inc
lcall
mov
roll
movsl
js
js
lock
add
push
mov
and
pop
inc
jp
sarl
jl
and
sbb
mov
xchg
scas
jbe
cmc
orl
xchg
sti
mov
movsb
xchg
leave
jp
out
mov
jmp
jmp
jns
lock
push
aaa
and
arpl
fiadds
filds
jmp
cmp
mov
mov
sub
inc
stc
xor
cmpsb
mov
xor
stc
jecxz
jbe
ret
xor
push
and
jne
mov
cmp
add
mov
mov
push
insb
bound
inc
popa
inc
loop
jns
test
xchg
aad
mov
ror
mov
push
jp
adc
sub
divb
jge
cmp
lcall
or
dec
add
addw
and
inc
ja
es
jle
mov
xor
xchg
mov
stos
mov
push
pop
shrl
dec
aaa
aam
in
xor
jecxz
pusha
adc
mov
pop
cmp
or
and
stc
insb
je
loope
loope
add
jmp
push
dec
stos
insb
hlt
cltd
lods
sbb
mov
jl
or
mov
outsl
insb
into
fstpl
and
dec
pop
jmp
lret
mov
jge
frstor
jae
sbb
mov
stos
out
adc
jnp
fiadds
sub
sbbb
cmp
lods
cld
or
inc
scas
fwait
adc
xor
or
push
shr
xor
xor
push
sbb
mov
dec
popa
fsubrs
sub
imul
loope
sar
jns
or
js
in
jl
push
mov
xchg
or
sub
mov
int3
xchg
xchg
xchg
nop
add
rorl
std
push
mov
sarb
dec
and
xor
outsl
lret
pop
lahf
or
add
push
and
pop
mov
inc
jns
jg
lret
aas
add
pop
incl
arpl
xor
fimull
and
clc
add
jbe
dec
outsb
imulb
jbe
ret
out
rol
clc
mov
mov
sbb
xor
pop
repz
sbb
addr16
daa
loope
inc
shll
into
inc
shlb
ret
test
popf
sbb
sub
adc
rcll
add
and
sbb
jo
cmc
sbb
roll
mov
inc
jle
xchg
jno
fsubl
mov
dec
fwait
or
outsl
negl
lea
fildl
loopne
subl
and
push
and
mov
scas
push
mov
clc
fs
test
popa
and
inc
and
mov
int
sbb
daa
inc
movsb
into
pop
das
stos
cmpsl
fsubr
xchg
ret
and
mov
sbb
or
push
pushf
push
or
inc
pop
inc
int
sub
arpl
test
in
push
mov
stc
push
xorb
cmc
jbe
mov
or
mov
insl
xor
or
clc
sub
xor
int
sti
out
imul
pusha
iret
hlt
daa
roll
adc
pop
mov
inc
adc
pop
inc
or
jo
xchg
fisttpll
in
imul
ljmp
mov
sbb
fsubrs
ja
xchg
icebp
in
lock
ss
outsl
mov
jmp
fbld
mov
ds
fwait
lods
ret
andl
in
sahf
add
enter
fxch
and
xchg
mov
adc
inc
lock
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
fildl
adcl
pop
sub
cmpsl
mov
fwait
lret
ret
adc
mov
mov
rcrl
out
std
fimuls
rsm
std
popf
outsb
push
aad
dec
xchg
xchg
adc
js
shl
int
cli
xchg
fldcw
inc
test
mov
mov
loopne
mov
cwtl
xchg
inc
orps
sub
sub
or
sub
popf
push
aad
stc
jbe
rcr
inc
aaa
pop
lods
divl
aas
cs
outsl
cltd
cmc
adc
pop
sub
int3
daa
jno
inc
imul
iret
cmp
dec
xchg
and
push
mov
inc
mov
adc
ja
xor
or
cltd
jno
sub
xor
loop
mov
in
pop
mov
subb
or
shlb
repz
aaa
call
add
into
push
shl
out
loopne
adc
lahf
fstpt
stc
xor
mov
out
repz
out
fdivl
pop
mov
push
in
ja
insb
daa
jno
lods
int
lock
inc
cmp
inc
test
jno
push
test
sbb
mov
sub
call
jge
jecxz
adc
scas
test
lods
pop
dec
sbb
and
in
in
sub
in
dec
jle
cmp
inc
sbb
clc
outsb
lock
add
jne
popa
lahf
mov
mov
xor
inc
movsb
push
bound
lcall
xor
gs
or
jb
pop
test
arpl
jne
ror
insl
xlat
jno
mov
xor
inc
sahf
xchg
icebp
imul
cmp
push
and
imul
push
jne
sub
cmp
push
scas
adc
movsb
mov
adc
or
sbbb
call
mov
xor
sbb
pushf
in
add
xlat
push
mov
pop
cltd
mov
dec
movsl
not
inc
mov
or
pop
mov
movsb
jno
out
cmp
inc
clc
adc
cmp
hlt
outsl
ljmp
lret
les
xchg
sbb
ds
jl
sbb
xor
or
pop
push
sub
jecxz
pop
aas
xchg
adc
sbb
mov
pushf
sbb
into
hlt
fldenv
jbe
jg
push
cmp
jecxz
pop
and
insb
jno
dec
aad
xor
into
mov
sub
cmc
aaa
pop
ret
mov
sarl
cli
cmc
jbe
jmp
xor
movsb
mov
in
push
jno
pushf
and
nop
xchg
jecxz
xlat
bound
pop
adcb
scas
ljmp
ljmp
test
jne
addl
dec
jbe
xchg
add
fwait
outsl
or
sub
aas
loopne
sub
int3
gs
jnp
xchg
cwtl
jmp
pop
dec
sub
xchg
aas
pop
cmp
cld
sbb
stos
lods
lds
jbe
xchg
pop
and
xchg
xchg
int3
or
add
lock
dec
addr16
aas
repz
loopne
pop
pop
scas
sbb
push
mov
push
out
push
cmpsl
lret
mov
xchg
int3
cmc
andl
sbb
jle
cmc
int
loope
push
fadd
test
mov
xor
in
int
ja
push
aad
ja
cmp
cmp
cmc
outsb
adc
mov
cmp
fmuls
lahf
fmull
mov
sahf
push
outsb
jp
scas
es
push
outsb
cwtl
nop
lds
mov
or
rclb
sbb
push
mov
dec
divl
jmp
mov
sbb
adc
push
in
dec
dec
in
repz
nop
cmp
loopne
shlb
test
cmp
jne
cmp
scas
dec
jne
cltd
sub
orl
push
dec
mov
aaa
push
mov
int3
xor
sub
in
ja
pop
test
push
inc
adc
jne
cmpps
adc
into
jno
dec
loop
imul
jecxz
sarl
push
jg
ret
xor
rcrb
jns
xchg
inc
addr16
push
mov
popa
xor
dec
add
hlt
roll
clc
xor
jne
sti
jp
xor
jo
jl
cli
fwait
pop
lods
cld
jns
stc
stos
dec
imulb
adc
insb
fwait
pop
sub
dec
jl
xor
or
movsb
jmp
fisttps
fcomip
push
gs
dec
add
xchg
adc
jo
xchg
pop
std
test
addr16
dec
mov
daa
and
dec
shlb
jnp
daa
aaa
decb
and
call
lahf
or
push
mov
shll
lret
inc
adcl
cmc
lods
add
ss
sti
mov
adc
test
xchg
push
sbb
mov
sub
mov
fs
xchg
testl
fmulp
setl
loope
push
in
je
rcl
mov
movsl
loope
mov
mov
push
sub
adc
jbe
insl
pop
mov
in
pop
popa
mov
call
sub
pop
and
lcall
test
push
xlat
sbb
out
arpl
dec
push
cwtl
outsl
out
add
dec
adc
imul
push
mov
sbb
insl
inc
lods
jmp
cs
jmp
je
cld
nop
adc
icebp
loope
xchg
push
xchg
sub
jo
fldl
and
pop
out
cmpsb
xor
addb
jecxz
test
or
pop
aad
ret
test
rep
out
cmpl
adc
loope
pop
arpl
cmpsb
jge
jnp
xor
scas
inc
dec
jns
pop
out
rcrb
xor
aas
test
ds
sub
stos
push
clc
xchg
lahf
imul
subb
scas
movsb
cmp
and
fisubl
lret
mov
cmpsb
stc
decb
lea
cmpsb
mov
out
bound
mulps
out
push
mov
movsb
inc
xor
cmp
leave
inc
outsb
enter
inc
dec
pop
pop
scas
in
jmp
pusha
ds
dec
out
sahf
adc
jns
icebp
mov
or
cmp
enter
rol
mov
es
sub
cmp
std
pop
push
test
sub
filds
sti
ret
data16
in
sub
inc
pop
test
outsb
iret
sbb
mov
sbb
sbb
ret
lods
outsl
es
daa
and
dec
cltd
xor
rcl
cmpsb
push
sub
decl
ds
imull
push
int3
movsl
repz
pop
push
pushf
jmp
cmp
inc
popa
push
add
pushf
inc
adc
mov
xor
mov
pop
dec
cmpsl
jo
and
pop
sub
rcrl
jle
cltd
mov
mov
mov
aam
mov
cmp
mov
add
popa
adc
outsl
sub
sbb
add
out
loope
imul
dec
dec
test
xor
pop
cmp
sub
leave
imul
shlb
fldt
mov
sbb
popa
pop
cld
nop
jnp
or
ret
popf
mov
jno
and
lret
repnz
jle
stc
mov
dec
adc
stc
pop
lock
call
ret
mov
aaa
stos
in
add
lret
xor
ljmp
enter
in
mov
and
add
dec
inc
push
lods
jg
sub
aad
addr16
test
int
jl
lahf
hlt
mov
sub
es
andb
jmp
lret
mov
rclb
sbb
hlt
jle
mov
add
mov
call
xor
or
rorl
ret
push
fcompl
cmpsb
sub
pusha
push
add
enter
scas
sarb
cmp
sbb
mov
pusha
adc
aam
mov
inc
das
mov
outsb
push
in
sbb
imul
dec
inc
lahf
hlt
into
xchg
mov
leave
push
adcl
pop
cmp
dec
out
das
dec
out
adc
mov
xchg
pop
sahf
mov
fadd
nop
xchg
cltd
cmp
leave
adc
inc
sub
aad
pushf
fldenv
and
sbb
xor
push
sub
inc
push
add
sbb
movsl
clc
mulb
int
repnz
sbb
xchg
xorb
mov
insb
gs
sub
hlt
mov
sub
xchg
inc
mov
into
mov
push
mov
aas
ficoms
or
or
sbb
sbb
sub
or
cmp
imul
mov
cwtl
in
or
add
push
in
push
push
shl
sbb
std
test
mov
jmp
add
mov
mov
sti
dec
inc
hlt
into
or
mov
sub
lret
stos
sahf
mov
imul
mov
aaa
mov
push
lea
cmp
das
test
jg
idivb
imul
stos
jne
add
pop
xchg
dec
neg
sbb
test
ret
pop
cmpsl
sub
or
xchg
mov
in
push
adc
aas
mov
inc
stos
sarl
dec
push
pop
or
xor
add
inc
mov
pop
into
jle
ret
pop
sbb
sub
mov
mov
jg
out
push
push
xor
shrb
jge
push
loopne
icebp
adc
add
in
sbb
xor
jecxz
xor
jmp
and
dec
aam
cmp
push
inc
mov
leave
jnp
test
mov
sbb
fsubrl
dec
mov
scas
adc
mov
xchg
int
xchg
cmp
and
dec
idivl
in
stc
inc
into
les
es
sbb
sar
mov
mov
addr16
test
mov
mov
xor
outsb
xor
fdivr
out
mov
movsl
decl
stc
movsl
icebp
fpatan
mov
pop
das
jmp
jo
push
pop
pop
imul
jb
clc
jbe
mov
adc
loop
loop
mov
ss
scas
test
jl
ret
adc
filds
stos
mov
adc
jbe
jae,pt
add
xchg
and
mov
std
cmp
insb
pop
mov
loope
xor
sarl
sbbb
jle
cmc
dec
mov
pop
repnz
das
clc
out
dec
mov
push
mov
dec
push
xorb
push
daa
roll
xchg
xor
mov
jno
mov
pop
xchg
jne
push
mov
jmp
icebp
inc
ds
lahf
pushf
jg
out
adc
fcmovne
lock
push
sarb
int3
or
add
or
fwait
stos
add
ds
cmpsb
xchg
xchg
loop
rcl
mov
push
inc
call
hlt
popa
test
fmull
mov
push
dec
add
insb
int3
adc
outsl
pusha
xchg
test
popa
mov
push
adc
test
pushl
inc
aad
push
mov
mov
dec
iret
xlat
popa
pop
iret
out
mov
and
rclb
mov
push
das
imul
and
xchg
sbb
insl
neg
xchg
pop
xchg
dec
mov
iret
or
fs
fwait
push
mov
bswap
mov
mov
inc
aad
pop
cmp
adc
and
fwait
cltd
mov
push
mov
cmpsb
xchg
sub
jae
fwait
adc
mov
mov
pop
and
iret
jo
mov
inc
pop
pop
rcrb
pushf
mov
test
pop
out
fsts
and
cwtl
xorb
ret
andl
loope
icebp
and
push
stos
push
mov
sub
scas
pop
in
mov
adc
cld
or
bound
sub
bound
sbb
mov
ja
clc
mov
jmp
cmp
adc
bound
push
test
fs
mov
mov
mov
pushf
rcrl
ficoms
mov
int3
push
out
sahf
in
dec
dec
mov
jnp
mov
push
push
int
cs
mov
dec
ud1
cmpsl
sbbb
cmp
dec
xchg
mov
imul
scas
lahf
fs
mov
les
sti
and
rcrl
add
mov
inc
fsubrl
decl
dec
test
inc
and
loopne
cmc
rcl
push
jg
sbb
shrb
rorl
pop
dec
xchg
rcll
mov
jno
mov
mov
int3
stos
lahf
rcrb
out
dec
and
adcb
push
mov
lods
das
and
cmp
pop
dec
xorl
or
pop
insb
adc
imul
movsb
adcb
mov
cmpsl
ljmp
rol
out
jecxz
outsl
aad
sbb
pop
repnz
jne
inc
or
stc
sbb
sbb
fs
ss
ret
adc
ret
inc
push
das
inc
fsubrl
scas
jno
test
add
jnp
sti
jns
sbb
inc
and
sbb
aaa
mov
test
and
and
scas
sahf
or
xor
inc
or
das
fiaddl
lea
nop
aam
pop
rcl
push
dec
mov
xchg
add
jle
loope
arpl
jecxz
ds
cmp
push
push
das
inc
push
xchg
mov
leave
jge
pop
lock
into
jecxz
cli
stos
xchg
dec
jg
lcall
pop
loop
in
aaa
or
addr16
and
adc
or
add
push
push
inc
and
cmp
cmp
push
xchg
ret
mov
adc
daa
or
andl
cmpsl
inc
add
mov
popa
jns
xchg
loope
or
fld
cwtl
movsl
test
inc
arpl
fs
pop
mov
pushf
pop
cli
retw
add
sbb
pusha
pop
stc
push
imul
add
mov
repnz
push
mov
cmp
xchg
pop
bound
inc
daa
adc
jno
adc
aam
cs
xlat
or
int3
inc
xchg
mov
ja
test
pushf
repnz
in
shrb
sahf
lods
inc
fidivl
cmp
mov
lds
sub
lahf
pop
and
jne
adc
mov
push
lock
incl
push
leave
movl
cmp
loope
push
lcall
mov
mov
cmpsb
inc
pop
cltd
popf
mov
inc
xchg
enter
pop
mov
enter
dec
dec
pop
push
sahf
cld
sub
sub
das
push
inc
aam
mov
mov
adc
pop
shl
shll
pop
jns
imul
lret
and
dec
jp
call
xlat
mov
rclb
rcrb
notb
nop
fwait
outsb
and
inc
xchg
push
mov
mov
loop
fidivrs
pop
or
jnp
js
jp
test
jns
add
jle
jo
mov
cltd
mov
push
fwait
mov
arpl
jge
mov
mov
mov
not
mov
icebp
lret
imul
mov
pop
out
add
mov
les
pop
adc
iret
sbb
jl
dec
sbb
ficoms
cmp
fsubrp
push
mov
and
loopne
push
xchg
loopne
leave
sbb
adc
mov
pop
inc
enter
xchg
sbb
lret
xchg
adc
repnz
cmp
cmp
sti
rcl
ja
push
pushf
inc
jo
mov
les
outsb
adc
pop
xchg
nop
mov
sub
scas
mov
enter
and
lods
cmpsb
loopne
sub
lock
xor
stos
pop
lds
pop
pop
jae
pop
insl
jmp
and
stc
popf
push
push
jp
push
pop
xorb
or
mov
pop
mov
shrl
test
push
adc
adc
jecxz
movsb
dec
sbbb
or
mov
bswap
js
xor
jmp
fs
ja
cli
insl
xchg
enter
or
cs
pop
shlb
icebp
fmuls
sub
or
sub
cs
xor
cld
lahf
jnp
push
jnp
or
idivl
inc
popa
add
xor
xor
call
mov
bound
push
lcall
jmp
pop
shrl
out
jp
cmpsb
jno
jno
jb
lret
addl
in
xor
xorl
or
pushf
adc
xlat
xchg
adc
xor
frstor
add
stos
and
stos
lds
pop
loope
sar
mov
sbb
movsl
dec
loope
lods
dec
pop
ja
aas
push
movsb
xor
cmovae
push
jbe
in
leave
or
push
push
arpl
adc
jg
pop
push
pop
push
push
test
mov
jl
dec
arpl
jb
mov
stc
cmpsb
jnp
rolb
sub
repz
das
pusha
mov
xchg
adc
xchg
or
mov
adc
repz
push
stc
stos
push
sub
ret
sub
mov
subl
inc
jp
cmp
dec
cli
out
and
mov
fs
jae
out
cwtl
movsl
cmp
imul
xchg
fdivrl
add
mov
xchg
iret
jne
cmpsb
cmp
sbb
loop
scas
in
xor
mov
in
incl
imul
cmpsl
adc
les
es
gs
ss
rcrl
cmp
fstpl
mov
pop
xor
loope
dec
mulb
popf
ficoms
lds
xor
mov
mov
fsubl
aam
movsl
xor
dec
pop
push
stos
adc
pusha
xor
jae
dec
into
xor
sub
pop
fdivl
testl
sarl
in
iret
jo
gs
lods
adc
das
jle
and
in
sub
jl
mov
rorl
ror
jecxz
in
into
pop
jmp
pop
stos
dec
jg
dec
test
push
insb
mov
popf
pop
loope
and
mov
dec
sbb
lods
inc
cmp
sarl
xlat
mov
aad
stc
add
and
inc
push
std
sub
outsb
push
es
lods
shrb
cmp
xlat
adc
fstpl
cltd
pop
pushf
cmp
loope
inc
imul
pop
cli
adc
push
daa
push
push
ret
cmp
xor
cmpsl
dec
xor
jns
cmp
push
lods
cmp
mov
pusha
mov
lods
pop
daa
mov
mov
mov
push
dec
lods
mov
mov
mov
incl
and
pop
ljmp
adc
imul
adc
in
imul
jmp
call
or
xor
lea
ljmp
jecxz
lock
xchg
cltd
ret
mov
mov
shl
sbb
dec
stc
popa
or
nop
mov
xlat
or
je
das
and
aam
add
ffreep
xchg
sarl
das
jmp
cmp
and
push
or
data16
mov
fcoml
cmp
or
testl
aas
add
jae
push
shlb
imul
leave
imul
mov
incl
jno
lcall
sbb
ja
adc
adc
aaa
test
pop
push
lahf
inc
es
bound
imul
push
xchg
add
pop
dec
sar
cmpsb
arpl
shrl
pop
rol
mov
mov
call
or
or
call
es
sbb
cwtl
out
sbb
mov
aad
xchg
popa
sub
sbb
push
cmp
xchg
pop
mov
adc
aad
pushf
push
or
cmp
dec
inc
pop
push
sbb
pop
push
pop
sub
fcmovbe
mov
mov
mov
pop
jne
setp
push
movsl
xchg
lea
dec
lock
movsl
inc
fisttpl
jbe
mov
xlat
xchg
je
xchg
lret
mov
es
add
and
bound
jle
mov
mov
jecxz
pop
cld
pop
sbb
fwait
pop
push
cmpsb
sub
adc
icebp
xchg
sub
inc
dec
lcall
or
pop
mov
and
gs
test
outsl
jl
aas
imul
dec
je
outsl
jbe
xchg
scas
and
add
rep
fistpl
sbb
out
adc
pop
test
lea
rolb
enter
bound
rolb
iret
popa
cmpsl
imul
test
cs
cmpsb
add
or
test
xor
andl
mov
adc
adc
outsb
cmpsl
fsubrl
leave
mov
fdivrs
seto
adc
jne
into
mov
jle
in
cmp
and
mov
dec
add
jnp
sbb
gs
pop
clc
jae
mov
std
icebp
dec
test
push
mov
sti
orl
push
sarb
sbbl
pop
out
xchg
jne
sub
inc
es
fs
stos
cmc
cmpl
repz
jle
mov
dec
push
or
adc
add
or
imull
xor
pop
dec
shll
test
push
dec
ja
mov
mov
dec
aam
out
pop
lret
lcall
dec
pop
fistl
jg
mov
lods
test
or
in
add
lock
filds
ljmp
mov
pushf
add
jmp
in
in
adcl
iret
je
add
jg
imulb
leave
insl
mov
sub
lds
jns
xor
loop
sbb
xchg
outsl
push
pop
inc
inc
incl
xchg
adc
clc
jo
fistl
and
outsb
sub
mov
lds
push
cmp
call
out
jg
or
push
jle
out
popa
pop
pop
push
scas
jl
push
jecxz
add
out
mov
adc
dec
shll
lds
out
je
and
fbld
ds
sbb
movsb
loopne
sbb
scas
pop
xchg
mov
jbe
cmp
push
jb
sub
and
xchg
jmp
mov
xchg
addr16
pop
pop
mov
mov
mov
repz
lret
add
cld
push
das
pop
test
cli
aas
rcrl
jmp
mov
cmc
pop
sbb
xor
data16
lds
add
dec
pop
popw
inc
ljmp
arpl
es
cmp
repz
cmp
cltd
push
stos
jge
mov
sub
or
sbb
mov
outsl
jno
add
mov
pusha
dec
pop
lods
inc
andl
push
outsb
mov
mov
xchg
inc
das
shr
in
inc
dec
add
mov
lds
arpl
dec
out
sbb
mov
xchg
insb
jae,pt
test
cmpl
lret
out
mov
mov
mov
icebp
cli
xchg
lea
mov
mov
outsb
and
inc
popa
popf
jecxz
pop
mov
outsb
stos
fs
mov
sub
sti
xorb
add
popf
mov
xor
add
sbb
fsub
or
jb
mov
mov
adc
jecxz
mov
fprem1
mov
push
addl
in
call
scas
and
insl
out
push
ret
push
pusha
adc
mov
test
test
jmp
repnz
movsl
or
sarb
mov
popa
mov
rorl
ja
mov
pusha
fwait
bound
add
xor
mov
dec
jge
jge
sub
in
test
dec
je
cmp
arpl
icebp
jnp
pop
sub
das
sub
cmp
pop
test
adc
xor
inc
insb
mov
mov
adc
push
or
dec
and
xchg
add
insl
jno
add
sub
data16
add
xchg
scas
pop
outsl
xor
mov
lock
bound
jl
bound
cmpsl
or
notb
sbb
sub
jmp
jmp
mov
or
adc
imul
add
cmp
cmp
mov
fadds
daa
sti
or
sub
ja
ret
jae
in
add
xor
jmp
push
aas
push
fidivrs
sti
loope
cmp
cmpsb
shrb
in
adc
out
jns
mov
mov
nop
pop
sahf
test
mov
test
cld
lahf
in
loop
inc
outsl
pop
xor
sbb
push
pop
icebp
data16
push
cli
mov
das
ja
call
pop
in
pop
or
rcll
and
sub
divb
inc
pop
adc
je
xchg
imul
in
xlat
fsubrs
cmpsb
xchg
gs
in
sbb
dec
out
cmc
cmpsl
pop
or
scas
je
jo
fistpll
pop
aaa
fistps
xor
dec
mov
hlt
int3
adc
mov
push
add
arpl
pop
mov
add
imul
add
dec
ficoms
aas
shr
xchg
fcomip
fwait
pop
adc
repnz
xor
shl
sti
or
jmp
leave
sbb
test
sarw
fdivl
jbe
jnp,pt
and
mov
mov
jne
push
sub
into
adc
jnp
lock
movsb
jbe
outsb
lcall
sub
mov
sub
mov
and
mov
lahf
loopne
xchg
jns
pushf
fbld
push
or
add
push
aad
jmp
icebp
jmp
mov
sub
sub
in
sbb
mov
shlb
je
lds
cltd
test
jmp
fildll
cmp
stos
lea
xlat
arpl
ret
inc
ja
mov
mov
add
rcrl
clc
mov
in
js
in
xor
test
imul
push
mov
jg
les
lods
xchg
pusha
dec
imul
fcompl
xchg
adc
dec
cmp
fisttps
setae
imul
fisttps
das
add
pop
cmp
xor
and
mov
push
aad
mov
sbb
shrl
pop
shlb
inc
cmp
jmp
sub
or
sar
into
jbe
ret
sub
decb
pop
pop
cli
cli
add
std
push
subl
push
call
sbb
mov
cmp
sub
in
dec
pushf
sub
xor
lods
push
adc
or
repz
ficoms
mov
daa
outsl
inc
clc
push
mov
adc
sub
pop
or
or
cmp
jg
sti
mov
in
mov
jb
jge
cmp
pop
outsw
xchg
xor
inc
push
or
outsb
dec
mov
cmp
rcll
jno
inc
inc
and
cmc
outsb
pfrsqit1
mov
daa
fwait
xlat
or
imul
inc
daa
fidivl
inc
andl
push
pop
and
jbe
nop
cmpl
fmuls
jl
push
iret
hlt
and
and
jle
xor
ret
sub
outsl
js
fwait
mov
pop
loope
mov
rorb
add
dec
fadd
sti
fwait
inc
pushf
mov
xor
in
loopne
aas
popf
lock
sub
les
cmpsb
popa
sbb
jl
scas
mov
and
sbbb
mov
aam
movb
dec
iret
dec
jb
dec
jne
inc
iret
loopne
xor
pushf
jge
add
jp
jmp
dec
dec
jecxz
xor
cld
push
pop
jae
scas
ljmp
cmp
and
dec
in
in
arpl
out
inc
xchg
mov
fcoms
inc
sub
out
arpl
scas
popfw
pop
popa
mov
push
pushf
repz
imul
insb
pop
out
adc
push
or
xor
xor
inc
add
push
dec
adc
fs
cmp
jecxz
sti
stos
lock
mov
mov
fwait
xor
lods
sub
jecxz
cwtl
les
push
jb
push
outsl
jbe
mov
cmp
dec
out
in
cmpsb
js
and
das
loope
cmp
dec
in
add
rorb
push
adc
pop
adc
aas
mov
out
ss
lods
jae
lods
scas
aad
out
iret
jg
mov
xchg
call
mov
outsl
ja
std
push
dec
aam
es
es
push
sub
ret
mov
add
hlt
aas
lahf
cmp
out
mov
dec
out
sub
push
jecxz
bound
push
xchg
inc
stc
pop
orl
enter
add
and
jge
jmp
lret
lock
ds
dec
jg
in
cli
pop
out
test
inc
data16
dec
xchg
lahf
inc
adc
push
notl
xchg
mov
mov
inc
xchg
push
cld
cwtl
scas
sbb
pop
add
mov
std
stc
mov
dec
push
mov
cmp
cmp
jmp
es
lret
mov
jg
jnp
std
mov
icebp
mov
add
imul
mov
pop
adc
or
pop
add
fs
jbe
mov
push
adc
mov
xchg
xchg
xor
push
jae
push
test
movsl
bound
inc
xor
push
cmp
inc
pop
mov
push
push
mov
std
incb
pop
shr
mov
inc
pop
adc
in
push
push
cwtl
sub
fucom
cld
insb
sub
xchg
cltd
and
or
movb
pop
or
sbb
inc
xchg
xchg
pop
clc
mov
pop
repnz
cmc
scas
incl
insl
pushf
add
ja
daa
and
adc
pop
pop
cltd
std
repnz
insl
pusha
lds
or
jmp
inc
xchg
mov
test
cltd
in
nop
lcall
jg
and
cmp
inc
or
rclb
movsl
jne
push
fldt
xchg
dec
movsl
loope
jp
outsb
adc
jae
test
add
mov
cmp
lret
cvttps2pi
out
decb
ret
inc
shll
pushl
outsl
fimull
test
stos
push
inc
aas
out
pop
mov
aam
adc
movsb
xchg
push
lds
and
xor
pop
call
sarl
rol
stos
or
outsb
cli
xor
inc
loopne
scas
scas
outsb
sub
scas
cmp
jne
lret
jb
xchg
in
xor
dec
cmpsl
outsb
and
xor
jge
jne
fcmovb
cmp
ljmp
ja
mull
adc
fcmove
pop
pop
clc
jmp
scas
ficoml
push
sbb
add
pop
add
js
cmp
dec
lcall
gs
bound
cmp
pop
jg
das
pop
push
inc
cmp
inc
lds
push
mov
dec
lcall
xor
inc
outsl
aaa
pop
inc
dec
xchg
shlb
mov
das
pop
cli
and
jmp
aas
push
jnp
pop
push
imul
lahf
lret
nop
mov
push
fsubrs
mov
xchg
cmc
cmp
push
addr16
lods
sti
test
pop
in
sbb
pushf
cmpsl
jmp
dec
cmp
js
xchg
negb
mov
mov
outsb
or
sub
jb
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
mov
mov
orl
addl
aas
or
outsl
mov
lods
std
cmp
jp
add
fistl
sub
jno
sar
out
or
xor
push
js
jae
inc
pop
pushf
xchg
mov
call
fs
iret
push
or
xchg
scas
sub
xchg
mov
enter
addr16
sbb
lds
pop
out
and
les
lea
inc
mov
adc
pop
stos
inc
xor
push
sahf
add
xchg
jmp
mov
roll
xor
inc
mov
sub
push
dec
xchg
mov
inc
cmp
jg
scas
stos
sbb
call
out
repz
xlat
jecxz
xchg
outsb
cltd
aas
sub
inc
push
into
in
daa
xchg
add
and
sahf
push
push
jnp
xchg
pop
sbb
mov
xor
pop
bound
fdivrs
mov
jecxz
clc
leave
xchg
jo
daa
stos
jno
mov
pushl
or
sub
out
clc
sub
pop
je
xor
mov
mov
jp
test
mov
ja
cs
sub
imul
cwtl
outsl
cmp
or
xchg
pop
mov
insl
push
test
mov
add
adc
outsb
in
clc
cmp
adc
popa
hlt
dec
sahf
add
popa
dec
pop
popa
add
xchg
add
fisubrs
mov
xchg
outsb
repz
jo
mov
mov
out
jge
aaa
mov
dec
adc
adc
jnp
enter
int
inc
shlb
push
aad
daa
pop
bound
std
fidivrs
add
loope
divb
xchg
lahf
fiadds
fldt
or
outsb
loop
fidivl
sub
lds
aam
jp
popf
pop
stos
dec
add
test
imull
or
ret
clc
jae
jb
add
lret
jae
lods
cwtl
test
call
out
sti
adc
cmc
cmp
cltd
imul
pusha
lods
jmp
inc
jle
ror
mov
pop
stos
fcomip
incl
jle
xchg
cwtl
in
imul
lock
mov
packssdw
sbb
inc
pop
cltd
or
out
lahf
stos
dec
add
jo
xchg
in
les
call
xlat
adc
push
xchg
int3
push
call
popa
les
loop
jae
aad
push
push
popf
add
and
xchg
scas
scas
jns
arpl
sbb
addr16
add
push
jno
test
aaa
jle
test
jge
mov
movsb
repz
xor
mov
cld
dec
xchg
loope
xor
xor
fidivl
mov
int3
mov
inc
popf
mov
cmc
repz
push
xchg
loope
mov
inc
js
dec
inc
test
xchg
gs
js
dec
loopne
out
ljmp
bound
cmp
daa
jns
popa
stos
jge
int
pop
add
push
sbb
xchg
fwait
sbb
jae
notl
or
push
ljmp
inc
push
int3
gs
iret
jg
daa
sub
xchg
mov
add
jmp
jmp
jb
xor
movsl
dec
pushf
and
das
ss
or
out
jae
mov
sbb
dec
in
push
pop
ret
out
pop
cmpsl
rcll
mov
mov
cwtl
and
xor
jae
jne
xor
clc
inc
fisubrl
ds
sub
pop
out
inc
das
enter
rolb
icebp
adcl
adc
inc
push
pop
inc
sbb
imul
jmp
scas
jecxz
jnp
adc
out
iret
xchg
in
push
jg
aas
jb
fimull
sub
lcall
sub
shrl
into
cmp
mov
std
cld
loop
pcmpeqb
cltd
call
leave
dec
imul
or
stos
push
loop
cmp
push
mov
mov
mov
test
pushf
mov
dec
xchg
xchg
dec
fists
jo
pop
pop
aaa
dec
dec
dec
cmpsb
jns
ss
insl
nop
add
jnp
pop
sarl
aas
shlb
ja
mov
gs
inc
je
mov
ljmp
sub
ljmp
mov
mov
or
mov
push
fwait
cmp
data16
mov
aad
mov
mov
sti
sbb
sub
cmpsb
in
pop
movb
in
mov
cmpsl
ja
inc
idivl
test
addr16
shlb
push
jnp
push
inc
gs
dec
pop
pop
imul
test
pop
xchg
leave
clc
pushf
ret
cwtl
push
pop
adc
mov
fwait
jp
mov
sahf
jns
cmpb
add
pop
dec
ficomps
iret
aaa
jnp
sub
js
push
out
xor
sub
and
hlt
add
pop
out
insl
ljmp
sbb
mov
pop
ret
hlt
icebp
or
inc
cmpl
lods
dec
add
sub
sbbl
push
xchg
es
lret
cld
or
inc
punpcklbw
pop
or
mov
jge
sti
push
cmp
push
mov
js
loopne
orb
dec
dec
scas
cmp
inc
cld
pop
sti
inc
mov
lea
cli
ljmp
int3
dec
xor
and
stc
and
and
fimull
mov
icebp
dec
insb
lods
jmp
or
sub
movsb
scas
cmpsl
in
cmp
stc
pop
and
xchg
jnp
xor
mov
popa
lock
imul
out
sbb
fsubl
and
sub
jo
and
adcb
hlt
cmc
outsb
cmpsl
cld
mov
dec
jle
decl
daa
xlat
dec
pop
daa
shrb
out
test
arpl
cmpsl
or
jecxz
lods
sbbl
aam
sbb
and
out
into
xor
push
adc
int3
jo
jae
jle
stc
mov
dec
xor
mov
adc
nop
loop
xchg
outsb
dec
or
inc
inc
sub
jecxz
lea
aaa
loop
bound
adc
pop
movsl
in
xchg
mov
push
xchg
je
mov
dec
movsl
cmp
fisubs
mov
les
push
jne
mov
mov
mov
jmp
repnz
incl
lods
xor
cwtl
outsb
bnd
fcmovnbe
jo
stos
clc
xchg
and
int3
vorps
dec
stos
mov
fwait
repnz
mov
add
loop
xor
in
shrl
mov
cmovp
and
test
aad
xor
pop
cmpsl
ucomiss
inc
movsl
repz
and
dec
mov
repnz
xchg
add
jl
es
mov
jmp
mov
cwtl
cltd
aad
pop
rolb
aad
fidivrs
popa
push
jl
popf
inc
push
insl
and
mov
jno
sbb
xor
fbstp
stos
insw
cld
std
fwait
leave
mov
rclb
or
in
add
pop
mov
addr16
and
xor
jg
push
gs
mov
inc
jge
mov
in
pushw
popa
pop
sbb
lea
insb
mull
gs
xor
test
dec
lret
cmp
dec
xor
sub
pop
pop
or
loop
fidivrl
cmpsl
or
hlt
cmp
push
adc
popl
jo
and
push
adc
xor
pop
mov
and
subb
adc
jae
popf
cmp
add
hlt
dec
xchg
fcompl
inc
pusha
in
mov
mov
mov
call
pop
add
js
out
xor
adc
cwtl
xchg
fnsave
insl
mov
outsl
jge
dec
stc
fsub
sub
push
or
mov
inc
sbb
cmc
test
test
cmp
dec
jge
mov
jo
mov
hlt
adc
loop
push
shl
inc
mov
and
push
gs
fisttpll
mov
mov
dec
call
dec
test
ficoms
cmp
or
inc
mov
ljmp
mov
addr16
or
std
popf
push
push
das
cmp
insb
insl
insb
and
pop
push
xchg
sub
fmul
or
rcll
lret
and
push
enter
outsb
nop
and
mov
jae
jg
jae
lahf
jmp
hlt
cwtl
mov
cmp
mov
in
inc
and
xor
cld
jp
jnp
pop
adc
clc
cmp
push
adc
jno
cmpsb
inc
bound
xor
sub
mov
and
jmp
scas
lret
inc
push
lcallw
aaa
hlt
mov
subb
mov
and
jns
out
adc
loop
cmc
lret
mov
push
insb
sbb
jne
js
scas
dec
add
mov
lods
adc
pop
xchg
in
lahf
js
jns
enter
lret
test
inc
inc
testb
xchg
pop
sbb
cmc
cmp
xor
push
xor
jbe
push
dec
xchg
adc
jb
cltd
add
and
fs
pop
subb
cmp
call
cmpsl
mov
mov
cmp
pop
or
call
mov
or
mov
push
cmp
mov
pop
jge
lock
lock
dec
mov
fs
and
jb
adc
fdivs
xor
pusha
sbb
out
nop
push
or
or
pop
stos
xor
mov
xchg
aas
adc
inc
xchg
sub
lret
push
scas
or
leave
test
out
and
mov
adc
mov
push
push
xchg
mov
or
js
mov
aas
ss
addr16
jb
mov
inc
or
mov
cmp
jno
cmpsb
sahf
push
adc
add
mov
arpl
jmp
add
pop
test
lret
lret
pusha
lods
pushf
mov
bswap
das
inc
hlt
outsb
pop
je
vunpcklps
ja
std
mov
adc
test
cmpsb
ljmp
or
lcall
pushf
xor
cli
add
xor
mov
mov
int
sub
lret
movsb
jp
cmp
pop
sub
sub
lods
push
push
xchg
sbb
xchg
cmp
xchg
fs
fcomps
hlt
fstps
jge
or
push
mov
fsubrl
xchg
sbb
insb
adc
dec
inc
mov
fcmovu
sahf
fldenv
xchg
imul
rclb
or
cmp
push
lods
mov
imul
jg
ss
roll
xchg
dec
inc
xor
mov
lods
adc
mov
cmp
addr16
in
adc
loopne
popf
dec
mov
pop
jecxz
into
sbb
mov
les
mov
dec
sbb
mov
jg
es
lock
addr16
ja
icebp
sub
aas
and
sbbb
lds
leave
inc
idivl
xchg
inc
outsb
push
xor
popa
out
out
and
fldl
xor
ret
divb
pop
shll
or
imul
mov
jle
jmp
mov
fsubrl
push
jno
jno
outsl
sahf
and
jl
in
add
out
pop
out
jp
bound
add
sbb
fildll
dec
xchg
aad
gs
mov
sarb
mov
sub
imul
xchg
sub
or
xchg
cmp
cmp
cmp
mov
mov
pop
leave
push
testb
int
or
pop
and
inc
push
or
sbb
das
xchg
jmp
jge
outsl
cld
hlt
inc
pop
dec
fisubl
and
cmp
ss
shlb
cmp
gs
cltd
pop
sti
data16
adc
iret
pop
push
jo
je
lcall
addl
cmc
int
aaa
mov
cmpsb
mov
scas
jl
andb
out
push
loop
cmp
and
aas
ljmp
sub
stos
in
xchg
scas
pop
inc
test
xchg
push
cmp
in
sbb
into
mov
dec
lret
clc
inc
inc
rol
mov
ss
outsb
test
pushf
inc
fwait
mov
movsb
cmp
mov
lods
push
sbb
addb
test
pop
xor
into
hlt
and
aaa
jno
js
sub
jne
mov
rolb
mov
cmp
push
leave
in
xor
mov
cli
mov
insl
je
pop
ljmp
ret
jbe
dec
fs
test
dec
xor
or
insl
sub
or
jmp
dec
mov
inc
sar
adc
xor
insb
mov
sub
inc
xchg
loop
fs
into
add
mov
call
insb
movsl
xor
fidivrl
shrb
lods
xchg
out
addr16
dec
adc
cmp
lcall
xor
sub
shrd
mov
xchg
dec
vmwrite
out
jp
sbb
sub
mov
test
test
mov
lods
sbb
add
push
mov
aam
les
in
jecxz
xchg
sbbb
cltd
frndint
cmp
fwait
mov
sub
cmp
or
mov
inc
pop
sbb
stos
shll
and
sbb
dec
cmp
xchg
mov
hlt
mov
enter
push
ucomiss
sahf
jno
sub
lahf
pop
sbb
jns
xor
gs
xchg
mov
adc
jmp
cmc
adc
repnz
cltd
pusha
ret
pop
push
adcb
pushf
dec
jmp
icebp
push
adc
stos
insb
jno
fiaddl
aaa
popf
mov
adc
dec
push
addb
in
dec
or
cmp
push
into
scas
jbe
fistpl
test
mov
mov
fistps
enter
pop
push
and
inc
add
push
or
inc
sbb
or
mov
and
insb
in
shl
and
fiadds
mov
fdivs
sbb
push
sbb
in
in
mov
push
sub
push
mov
pop
xor
and
sti
jae
adc
mov
scas
inc
ljmp
adc
inc
and
shlb
xchg
push
jmp
js
jp
pop
xor
sbb
scas
push
inc
lock
push
xorb
pop
dec
sub
es
push
inc
cltd
imul
mov
jmp
std
movsb
fbld
insl
or
and
add
scas
mov
cmp
and
inc
cli
leave
inc
push
outsb
fstpl
aaa
jns
test
add
mov
mov
mov
inc
out
push
das
sti
and
cmp
in
addr16
push
rolb
jae
pop
xor
cmp
pop
scas
repz
and
insl
sub
lcall
fldenv
mov
out
inc
add
ret
cmpsl
mov
sub
movsbl
add
popa
mov
out
pusha
xchg
xor
dec
mov
sub
movsb
sbbl
jmp
jmp
out
aas
mov
push
scas
addr16
pop
xor
sbb
into
jo
mov
push
xchg
add
mov
jb
ja
jg
out
lock
dec
sahf
out
mov
js
mov
aam
lret
hlt
loopne
cli
jg
lret
je
loope
add
pop
out
inc
cmp
lock
or
pushf
xor
aam
add
icebp
add
jge
mov
std
cmp
push
jmp
imul
or
xchg
testb
cmp
out
mov
rorl
inc
jne,pt
insb
ljmp
cmpsb
push
mov
lcall
dec
mov
inc
xorb
push
mov
cltd
sbb
ret
cltd
lods
jecxz
pop
pop
jp
sahf
pop
pop
add
dec
mov
cmpsl
jns
popw
mov
loopne
orb
jnp
jb
popa
test
jge
pusha
loopne
sahf
and
ficompl
es
cmp
cmp
cmp
add
xlat
and
cmc
mov
jmp
cmpsl
int3
inc
leave
and
and
xchg
data16
lea
test
testl
cmp
ret
daa
mov
loope
push
cmp
arpl
arpl
xchg
sbb
andb
xlat
inc
push
sbb
adcb
mov
int
mov
ficoms
aas
mov
into
cmp
add
fwait
inc
xchg
mov
in
cli
rolb
dec
dec
fists
icebp
out
add
jge
dec
mov
pop
fisttps
aam
mov
or
xchg
xor
mov
cld
inc
or
mov
dec
pop
push
mov
bound
div
sub
movsl
stos
pop
inc
xchg
xchg
fstl
pop
dec
in
push
aas
jecxz
mov
rorb
test
es
popf
mov
add
pop
insl
push
test
pop
fsubl
aas
inc
scas
pop
scas
loope
or
fisubs
shll
jae
add
pop
xor
arpl
adc
pop
popa
lds
and
pushf
mov
mov
fsubl
push
dec
pop
mov
and
js
les
xchg
ror
int
mov
icebp
push
sub
inc
push
cmpb
dec
sti
ljmp
sbb
dec
loop
arpl
into
xor
mov
or
insb
dec
mov
shll
push
inc
xlat
mov
mov
popf
into
cs
loop
dec
idivl
or
mov
imul
adc
fwait
mov
aas
bound
mov
and
bound
xor
aad
bound
adc
fstl
cmp
aam
test
cmp
sarl
cltd
xor
imul
adc
mov
mov
out
mov
shl
loop
add
mov
les
les
xchg
push
push
jns
dec
pop
cmp
fsub
in
orb
insb
mov
xor
dec
xor
lds
sbb
dec
sub
movsl
inc
popf
xlat
aas
or
mov
fwait
aad
pop
fisubrl
ja
imul
scas
mov
mov
rcll
or
xchg
jb
stos
and
imul
or
test
xchg
sub
fs
jmp
xor
std
dec
pop
and
jl
mov
fld
inc
call
or
adc
cmp
aad
inc
rorl
rcll
cmp
int3
xchg
jb
inc
adc
inc
sbb
add
and
out
stos
push
push
jecxz
xchg
in
or
pop
jecxz
nop
mov
pusha
cmp
mov
push
cmc
jg
sti
js,pn
mov
cmpb
iret
xchg
lret
pop
int3
add
xor
mov
sbb
inc
popa
push
test
and
out
ja
int3
jmp
fistl
jo
inc
shlb
daa
nop
cmp
add
jne
lods
jne
lea
sub
mov
pop
dec
mov
icebp
scas
mov
dec
repnz
mov
lea
ds
cmpsl
dec
jns
ret
inc
mov
loop
jae
fistps
lock
hlt
mov
mov
jl
xchg
jg
jle
jle
jmp
addr16
adc
sbb
sbb
push
lods
std
test
pop
lock
inc
push
enter
mov
add
out
fmull
adc
xchg
cmp
xchg
pop
in
int3
push
or
cld
inc
ss
pop
imul
mov
or
xor
or
pop
out
xchg
imul
cli
rcrb
push
push
mov
ret
fs
xchg
test
push
xor
xchg
xor
mov
movsb
mov
icebp
mov
mov
adc
mov
fdivl
insl
or
xor
mov
pop
repz
inc
fimuls
add
loopne
cmp
insl
mov
nop
pop
ljmp
sbb
mov
sahf
imulb
mov
lahf
jp
adc
mov
add
jl
jmp
mov
pop
xchg
sub
int
lock
int3
sar
lds
shlb
insl
dec
cmp
out
les
insb
mul
outsl
push
xor
out
pop
jl
adc
std
cmp
jmp
pop
dec
decl
mov
xchg
movb
push
lock
ja
call
movsl
lods
scas
mov
pop
mov
mov
sti
jnp
addb
fistl
add
xchg
adc
dec
insb
insb
mov
and
imul
inc
mov
into
dec
into
mov
and
ss
jne
int
mov
dec
das
lret
or
scas
jmp
inc
test
or
xchg
mov
das
pop
mov
addr16
mov
fcmovb
loopne
jb
mov
orb
push
mov
fisttpll
gs
inc
ud0
enter
mov
test
ljmp
stc
xchg
add
mov
sbb
rcr
and
popf
xor
xor
test
popf
cmp
cltd
mov
sarl
sbb
mov
sahf
sub
sbb
lret
and
pop
adc
mov
xchg
fcmove
xchg
cmp
hlt
mov
cmp
scas
adc
addl
les
iret
icebp
cmp
aam
lret
adc
push
sub
fs
pop
xchg
sub
stc
or
shrl
test
xchg
jo
repnz
xchg
rcr
int
cmp
sbb
add
push
or
rolb
in
fisubs
cs
fdivs
cmp
sub
fistpl
mov
jle
insb
shrb
and
or
data16
aaa
pushf
or
cwtl
sub
addr16
scas
jl
repz
lods
mov
inc
push
fwait
xchg
in
popf
pop
js
cmp
in
and
pop
mov
insb
jo
aas
sub
ss
movsb
adc
pushf
or
mov
iret
pop
pop
out
cmp
stos
fdivl
jg
inc
xchg
clc
iret
mov
lock
fadd
rolb
or
xchg
cmpl
int
or
sbb
aas
es
loopne
xchg
jp
mov
sub
jnp
xor
jae
jb
pop
fildll
out
cmp
mov
out
and
addr16
jo
mov
fldl
pop
sub
inc
xor
je
add
loop
dec
adc
aas
push
lahf
fadds
or
in
dec
stos
jbe
cmpsb
xchg
push
loop
cli
lds
adc
jnp
jmp
addb
xlat
mov
cli
pushl
sbb
fists
dec
push
pop
daa
inc
ljmp
cltd
jae
mov
ja
inc
clc
loop
xor
push
fldl
adc
push
and
fsubrp
imul
push
insb
xchg
mov
or
or
test
fwait
lret
sti
dec
cmp
es
std
imul
mov
add
push
in
inc
outsb
sbb
dec
popa
dec
gs
xor
mov
cwtl
ljmp
dec
shll
fmuls
scas
pop
arpl
mov
cmp
sub
push
inc
sub
mov
inc
mov
loop
lahf
ret
movsl
sbb
and
fstl
pop
pop
cs
movsb
mov
xor
adc
push
iret
inc
clc
ret
and
lock
je
std
jg
hlt
mov
adc
push
pop
cmp
pop
movsl
sbb
les
shll
sahf
ret
stos
lods
das
fmull
xchg
lcall
inc
fisubrs
add
lods
call
adc
inc
outsb
hlt
dec
jnp
xor
aas
fs
std
icebp
imul
arpl
stos
out
loop
pop
or
mov
sbb
add
ja
cltd
incb
in
dec
pop
nop
dec
cltd
loope
or
add
cmp
inc
es
inc
jno
xlat
mov
sub
pop
dec
and
fnstsw
ret
push
pop
leave
cli
inc
xchg
or
je
mov
or
insb
or
test
roll
push
stc
lcall
mov
mov
addr16
xchg
fnstenv
mov
fwait
cmp
aas
stos
rorl
inc
or
std
mov
sbb
aas
add
call
pushf
jmp
lahf
inc
dec
les
lcall
shl
rcrb
or
mov
push
cmpsl
aam
ficompl
popa
sub
cmc
inc
ret
lret
mov
pop
sbb
xchg
int
test
test
push
adc
mov
push
or
inc
cmp
xor
fcmovu
jp
xlat
adc
mov
cmpsl
push
mov
lock
sub
out
jo
adc
fisubs
xchg
mov
jb
sbb
mov
out
and
adc
jb
into
mov
in
adc
movsb
pop
pop
dec
sub
loop
aas
leave
gs
inc
xchg
mov
xchg
pop
xchg
daa
sbb
imul
mov
and
and
push
dec
idivl
cmp
fdivp
movsl
ret
sub
cmp
sub
insb
xor
arpl
int
stc
cmp
cmpsl
enter
nop
mov
mov
sbb
jge
nop
sub
jo
sub
sbb
nop
cmpb
cwtl
stc
sarl
cmp
inc
inc
lock
xchg
imul
dec
lret
sub
aaa
daa
pop
ss
pop
jg
and
cs
cwtl
popf
out
stos
shlb
fwait
jle
jbe
pop
xlat
nop
sub
inc
lods
int3
mov
adc
in
stos
mov
mov
je
mov
sbb
adc
add
sbb
dec
int
ret
mov
pop
adc
ss
jle
pop
rorb
idivl
xor
cli
imul
les
pop
add
mov
aaa
push
ja
arpl
in
ficoms
sbb
xor
orl
shlb
push
jnp
jne
hlt
xor
dec
mov
aas
dec
cli
cmc
xor
cmp
sahf
and
and
inc
dec
and
inc
sub
inc
loop
inc
hlt
fistpll
pop
repz
inc
out
or
push
popa
mov
push
push
adc
mov
and
sub
jae
jb
popa
push
jecxz
icebp
sub
ret
pop
lret
loopne
jae
lcall
cmpsb
in
arpl
lret
gs
mov
fwait
dec
add
dec
pusha
les
fnstenv
push
dec
lret
xchg
xor
mov
and
fstpl
inc
enter
shrd
sbb
test
cmp
je
push
adc
adc
push
loopne
xchg
sub
es
mov
jle
inc
and
mov
push
pop
repnz
ljmp
jg
add
inc
cmp
out
lret
mov
xchg
lods
cwtl
and
lds
decl
loope
aad
sub
mov
mov
cmp
and
ds
add
es
aaa
push
enter
bound
mov
fsubp
shrb
gs
je
mov
mov
mov
insl
roll
mov
mov
das
pop
enter
or
and
stc
outsb
loop
out
jge
push
cmpsb
push
je
mov
jecxz
jl
sbbb
int3
lret
pop
cmp
repz
jae
or
add
cmpsl
sub
mov
hlt
std
out
loopne
inc
iret
pop
shrb
lahf
gs
fisubrl
int
dec
in
aad
bound
in
cli
outsb
mov
pop
pop
mull
fcmovnbe
lfs
xchg
or
jae
cmp
sub
and
fs
push
decb
sub
or
inc
lea
out
cmp
sub
mov
loopne
inc
shrl
push
mov
lahf
ja
adc
push
stc
xorl
jbe
jae
adc
mov
jbe
fbld
iret
push
inc
int3
pop
sub
mov
adc
sub
mov
addr16
popl
push
loope
stos
lods
dec
or
pop
dec
dec
mov
and
outsb
sub
jb
mov
jno
mov
mov
push
push
cmp
sub
aam
lds
pop
flds
dec
fidivrs
push
movl
mov
jmp
or
ja
jge,pt
aaa
mov
out
cmp
mov
flds
pop
and
dec
push
adc
lcall
cld
and
outsl
cld
pop
popa
mov
or
lcall
sub
mov
and
mov
pusha
xchg
xchg
jg
cli
hlt
mov
add
in
mov
or
jg
dec
push
cs
insb
fdivrp
arpl
addl
aam
jb
jno
insl
enter
js
xchg
or
xor
es
adc
test
lret
push
inc
cmpsb
ret
sbb
inc
pop
cld
inc
pop
push
repz
dec
adc
inc
divb
mov
aam
repnz
or
mov
cltd
lahf
nop
fnstenv
push
cmpb
dec
jnp
dec
mov
mov
xor
pop
mov
xor
ljmp
pop
outsl
add
fstpl
jno
enter
test
call
mov
popa
add
lods
cltd
out
popf
sbb
inc
gs
scas
adc
es
add
jb
jbe
testb
ret
leave
mov
cmc
mov
push
rcll
insl
mov
cltd
clc
leave
popf
or
mov
call
mov
sub
test
fnstenv
jb
push
mov
sbb
sub
cmp
out
ret
imul
cmp
inc
dec
cld
notl
out
push
sarb
repnz
sbb
xor
lret
into
cmp
in
mov
inc
popf
pop
imul
mov
sub
ret
out
jmp
sbb
js
push
and
lds
out
cmp
jae
je,pn
pop
or
ret
std
adc
jp
in
jecxz
cwtl
or
call
jmp
movsb
jo
sbb
and
pop
push
dec
mov
jmp
leave
mov
mov
jmp
xlat
push
push
mov
xchg
sbb
sub
add
mov
ljmp
cmpb
out
mov
pop
jle
std
cli
rcl
test
adc
adc
sarl
cmp
fistpl
ds
ljmp
adcl
clc
insb
pop
lock
dec
enter
xchg
and
mov
clc
into
dec
mov
mov
jae
movsl
mov
add
dec
dec
scas
pushf
xor
inc
test
and
sub
pop
in
mov
dec
push
xchg
push
mov
cmpl
loopne
pop
push
subb
push
adc
std
inc
shl
ja
cmc
lods
jmp
cmc
fldt
cmpb
lds
adc
push
iret
clc
test
das
adc
xchg
out
mov
jmp
aam
pop
pop
cld
and
shrl
xchg
pop
cs
lcall
int
jmp
cltd
cltd
ror
outsb
adc
in
xchg
fsubl
adc
loopne
cmp
lahf
push
pop
test
dec
into
add
enter
movsb
cmpsl
fiaddl
and
cmp
lods
pmaxsw
push
loope
mov
mov
test
mov
jp
mov
xchg
std
and
sahf
cmp
mov
sub
push
ret
addb
cmc
lret
mov
jecxz
xchg
sarb
mov
rcrl
bound
mov
xchg
in
pop
ljmp
inc
stc
cmpsl
push
adc
pushf
and
jno
mov
jmp
mov
les
mov
mov
pop
fadd
add
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
push
mov
xchg
addb
call
xor
mov
xchg
dec
jno
inc
fwait
xchg
shrl
lret
stc
mov
imul
fldt
lds
mov
sub
and
int3
mov
aaa
mov
ds
pushfw
int
mov
inc
mov
xor
popf
scas
jne
pop
test
cmpl
mov
ss
iret
adc
pop
stos
popa
xchg
pop
mov
aaa
jbe
inc
or
lea
mov
aaa
cmp
jecxz
bnd
pop
jno
inc
xor
lahf
je
lock
mov
mov
lods
push
cltd
adc
xchg
pusha
outsb
sub
js
out
js
sub
add
add
int
or
jns
stos
idivb
mov
xchg
or
daa
lock
mov
orb
push
repnz
xor
popf
dec
rcr
ja
pop
js
testb
imul
sti
lods
clc
mov
xchg
shrb
xor
aaa
lds
mov
mov
out
xchg
push
je
call
add
repz
sub
sbb
xor
mov
sbb
mov
lds
sub
or
test
fnstsw
andl
inc
fnstcw
jl
adc
inc
push
cwtl
daa
out
sbb
das
sbb
lahf
outsl
jmp
ds
icebp
mov
push
xchg
scas
sub
test
aam
jle
loopne
fdivrp
lds
repnz
xor
jmp
mov
pop
push
jno
sub
xor
out
testl
sbb
arpl
jle
mov
sbb
pop
jmp
inc
or
dec
sub
mov
imul
dec
xor
lea
into
pop
cmpsl
lahf
mov
jmp
orb
loope
ds
inc
ljmp
push
cmc
test
nop
jne
adc
lcall
jno
out
sarl
test
aaa
cmp
cmp
mov
mov
jb
mov
lods
lret
loope
pop
clc
push
xchg
xor
cmp
rcll
sbb
mov
mov
pop
mov
das
inc
mov
mov
enter
shll
es
leave
shll
push
sbb
mov
jno
aad
mov
sbb
xchg
mov
jnp
cmpsb
shll
iret
inc
mov
sbb
test
and
and
jo
shlb
pop
and
js
and
xchg
inc
sub
cmp
stc
jmp
fistpll
in
mov
xor
fidivs
aad
enter
sub
ret
cli
idivb
mov
xor
dec
pop
mov
fstps
mov
pop
mov
test
lods
popf
pop
testl
scas
lret
sbb
loopne
push
and
adc
testl
sbb
pop
mov
mov
sub
enter
cmp
mov
pop
sub
or
pop
lahf
vmovntps
call
or
int
repz
lret
push
cmc
dec
mov
mov
xchg
mov
into
add
mov
dec
push
xor
imul
and
lcall
test
shll
cltd
xchg
sub
outsl
rolb
mov
push
cmp
gs
dec
int
nop
inc
les
push
lock
cld
jle
sbb
inc
xorb
stos
xlat
iret
inc
aam
add
cli
push
ljmp
inc
dec
push
fistpl
jmp
push
xchg
dec
jecxz
fidivrs
addr16
inc
addr16
xchg
inc
sbb
cmp
jbe
xchg
pop
insl
loopne
and
jno
out
fimuls
inc
sbb
cmp
push
jnp
movsl
bound
mov
sbb
icebp
out
xchg
jae
pop
mov
xor
inc
push
inc
mov
jae
out
pushf
stos
sbb
and
aaa
or
je
fldenv
scas
sbb
mov
fisttps
pushf
xchg
push
movsl
push
imul
into
or
insl
sbb
mov
inc
pop
idivb
xchg
sub
adc
push
and
inc
cmpsb
cmc
mov
sub
xchg
mov
ret
fsubs
push
out
mov
mov
mov
jl
fstps
xchg
xchg
xchg
es
pop
jp
pop
pop
lock
clc
lret
push
and
test
dec
inc
dec
jns
add
push
icebp
push
and
data16
fcmove
loop
in
dec
mov
push
test
ret
subb
add
je
xchg
mov
inc
jne
dec
inc
adc
sbb
fidivl
int3
mov
sahf
pop
sub
pop
xchg
cmp
fwait
lret
aaa
outsl
adc
xor
cltd
aad
jns
negl
xchg
shlb
dec
push
jns
ljmp
and
fsubl
fisttpll
and
xchg
sbb
int3
scas
pop
repnz
jns
scas
xchg
cmc
or
mov
lock
inc
lcall
cmpsl
mov
and
test
or
jecxz
fdivrp
jmp
sbb
pusha
fcomip
stc
and
sub
test
add
in
pop
jecxz
stos
stos
push
repnz
and
sarb
or
jg
int3
mov
sub
adc
jecxz
sbbl
mov
cmpsl
push
inc
cmp
loop
pop
and
push
cmp
pop
popa
mov
adc
push
addr16
jg
nop
icebp
rorl
shlb
and
fadd
sbb
or
cli
movsl
xchg
cmp
fldcw
pop
int
push
mov
outsb
in
xchg
jp
jne
lret
fisubl
push
mov
int3
shlb
mov
and
push
dec
xchg
dec
fucomp
lds
pushf
cmpsl
and
sbb
jp
inc
xchg
push
cmp
sub
or
cmpsb
sub
int
insb
stos
push
rolb
push
sbb
out
dec
sub
lea
mov
es
xchg
pusha
inc
popa
adc
add
pop
stos
inc
jne
sbb
xchg
leave
push
in
push
sub
cmpsl
xchg
addr16
adc
cltd
cmp
enter
mov
pop
shrl
inc
icebp
andl
pop
jg
aad
test
in
hlt
jmp
jle
das
fnstsw
pop
pop
std
loop
inc
sub
inc
jbe
out
cmp
push
inc
repnz
bound
rorb
xchg
and
add
and
sti
andl
fdivs
xchg
sbb
sar
or
pop
fldcw
pop
sbb
xor
ja
jno
fsubs
aad
jl
mov
scas
mov
xor
enter
cmpsb
xor
nop
mov
fldt
pusha
ret
loop
test
and
in
jb
movsl
inc
cli
movsb
jnp
push
lods
and
cmp
mov
jle
stc
aad
xchg
xor
sarb
dec
in
cmp
or
push
push
push
xor
xchg
outsb
mov
push
icebp
xchg
arpl
cmc
cmpsl
or
sahf
mov
mov
dec
add
and
lea
inc
pop
push
cs
dec
mov
mov
mov
shll
stc
ret
jnp
cltd
dec
pop
inc
jbe
adc
sub
movsl
inc
push
cmp
pop
mov
insl
data16
gs
xchg
dec
daa
ficoms
or
pop
sbb
in
mov
push
xchg
dec
add
mov
adc
aad
outsb
sbb
cmp
into
mov
push
adc
adc
or
mov
in
dec
addr16
fwait
add
sub
mov
or
mov
xor
iret
imul
fists
insb
cli
cmp
test
les
loop
loopne
data16
push
scas
lods
inc
sarb
in
mov
ds
dec
cmp
inc
call
leave
repz
hlt
insl
fidivs
wbinvd
fldenv
mov
in
xchg
add
fcoms
lock
mov
dec
cmp
jle
add
sbb
enter
push
mov
pusha
jno
mov
ljmp
clc
sahf
add
rorl
pop
lock
fsubrl
jecxz
xchg
dec
int
adc
xchg
sahf
leave
rorl
jns
test
cs
mov
inc
dec
mov
stos
cmpsb
lock
movsl
test
addl
inc
pusha
ret
call
lock
pop
jecxz
outsl
xor
pop
adc
and
pusha
inc
sub
mov
and
xor
jb
lds
push
push
jo
inc
cmp
loopne,pn
fmuls
cmp
lcall
rorb
xchg
or
adcb
lods
cmc
pop
lret
pop
push
test
xchg
pop
movsl
ds
test
fsubs
push
in
jne
xor
or
fiadds
lret
shl
test
in
enter
test
repnz
jge
aas
jmp
xchg
ss
pop
sub
repz
iret
inc
cs
push
push
std
mov
fidivrl
pop
ss
mov
pop
mov
jp
mov
push
loopne
push
cli
test
out
leave
pop
sahf
pop
inc
call
push
inc
js
jo
stos
rolb
pushf
xor
out
in
das
add
shll
mov
cs
sbb
jns
cmp
push
loopne
pop
int3
testb
test
loope
push
stos
mov
pop
pop
cmpsl
mov
cmp
jnp
or
pop
cmpsl
add
and
scas
scas
ds
cmp
daa
or
push
call
push
int3
dec
addr16
ficoml
adc
ja
xchg
jmp
jecxz
shr
in
bound
fisttpll
xor
pop
cltd
and
xchg
out
pop
js
inc
xchg
fs
adc
pop
mov
test
pushf
lock
sub
pop
arpl
insb
add
jb
scas
xchg
add
sbb
stc
sbbb
sub
mov
xchg
adcb
mov
bound
mov
jl
or
dec
out
popf
mov
and
mov
pop
adc
das
sub
addl
adc
int3
xchg
shrl
dec
pop
sbb
jecxz
and
nop
and
setle
fisubrs
sub
xchg
mov
and
xor
std
sub
loopne
adc
aaa
nop
jbe
cmp
jae
jp
int
out
or
cmp
adc
out
nopl
xchg
loopne
leave
testl
cmpsb
fwait
and
mov
sub
sub
mov
adc
jns
sub
pushf
dec
ret
mov
add
mov
pop
iret
icebp
pop
in
ficoms
out
sbb
jge
fwait
and
mov
add
push
push
mov
dec
xchg
fmuls
int3
push
pop
mov
cli
dec
das
movsl
loop
loopne
and
rol
push
cltd
fwait
vdivpd
fmuls
xor
lock
fs
inc
fxam
push
popa
adc
sbbl
addr16
mov
ret
push
mov
int
rorl
scas
jns
test
divb
pop
mov
dec
dec
clc
lcall
das
movsl
push
adc
out
loop
add
scas
jno
pop
ss
ss
popf
mov
and
inc
adc
dec
rolb
jb
cmpsb
mov
push
mov
fstl
jns
dec
imul
in
clc
sub
jo
outsl
fwait
mov
in
xchg
pop
data16
inc
outsl
cmp
test
stos
or
xor
sub
sbb
movsl
mov
ret
jbe
xor
hlt
or
push
sub
mov
inc
loop
push
pusha
adc
push
push
xor
add
lret
in
ljmp
xorl
and
imul
sbb
push
scas
inc
add
pop
faddl
mov
in
jg
push
cmp
js
xor
fsts
test
fwait
test
pop
rorb
lcall
mov
inc
xchg
lods
outsb
sub
and
push
testb
sti
fs
adc
loopne
adc
or
push
jp
cmp
inc
and
inc
testl
cld
cmpl
lahf
inc
cwtl
mov
insb
cmp
out
push
clc
cli
aaa
mov
jge
mov
idivl
sub
cwtl
pusha
and
dec
jge
lea
dec
pop
jl
pop
insb
mov
mov
dec
sub
insb
push
pop
xor
xlat
dec
in
sub
std
into
leave
aaa
lods
cltd
insb
push
test
je
rorb
test
sti
sbb
push
jle
xor
mov
sahf
mov
subl
xor
in
push
cmp
dec
aas
xor
adc
insl
jl
mov
popf
nop
push
ja
and
pop
shrl
enter
pop
pushf
les
insb
dec
sbb
sbb
or
dec
mov
sbb
sub
sti
decb
test
or
enter
xchg
ret
mov
stc
xlat
push
sbb
cld
out
push
and
sub
test
cmpsb
jg
jg
xchg
fiaddl
jge
fcmovb
stos
and
xchg
xchg
jne
call
adc
ljmp
pop
mov
xor
xor
ljmp
lahf
and
rcrl
jnp
fsub
scas
testb
clc
loope
inc
shlb
enter
pushf
pop
push
ds
movsl
or
mov
sbb
mov
jl
pop
pop
sahf
push
dec
negb
push
imul
dec
mov
xor
inc
xchg
jb
pop
push
mov
mov
fsts
xor
xor
push
fnstsw
sar
in
mov
mov
and
fdivr
push
sub
cld
xchg
inc
fistpll
mov
je
lods
push
loopne
mov
lcall
xchg
sbb
and
pop
mov
das
sbb
push
dec
lock
ljmp
or
xchg
cmp
test
lret
mov
cwtl
xor
pop
pop
jmp
push
sub
hlt
fsubl
cld
push
sub
xchg
pusha
popf
or
add
nop
cmp
leave
cwtl
pop
jns
push
js
div
mov
adc
fwait
cwtl
fimuls
mov
mov
lret
scas
sub
adc
cmc
xchg
std
js
std
ljmp
mov
inc
push
flds
test
sti
pop
sbb
stos
loopne
xor
gs
hlt
jb
mov
fdiv
cltd
out
xor
mov
dec
repz
inc
mov
test
rcr
add
cmp
adc
cld
or
mov
lods
dec
scas
test
mov
push
stos
test
jmp
mov
btr
leave
dec
add
and
imul
pop
ss
outsb
cmpsl
dec
aam
add
bound
shl
and
push
mov
ss
out
sub
mov
or
mov
add
pop
pop
loope
and
cs
dec
int3
inc
ret
mov
push
imul
test
stos
mov
pop
fcoml
cltd
jno
sub
jo
hlt
ss
jecxz
add
xchg
inc
lret
shlb
lret
out
push
push
sub
addr16
loop
popf
and
sbb
leave
fdivp
xchg
dec
outsb
insl
pop
sbb
ret
mov
xor
enter
cmp
sub
fadds
data16
mov
mov
iret
iret
mov
ja
loop
sbb
pop
mov
pop
inc
adc
mov
lahf
sahf
push
cli
cmp
add
loop
scas
sbb
xchg
out
mov
aas
and
call
fistpll
sbb
enter
loopne
pop
test
cmpsb
call
insl
mov
mov
mov
xchg
in
xchg
in
inc
and
cmp
cli
aaa
into
cmp
orb
aad
jg
mov
out
cmp
xchg
jns
mov
lds
rorb
dec
add
jle
sti
jo
ds
mov
dec
dec
xlat
mov
dec
mov
cwtl
loopne
int3
inc
adc
mov
out
bound
fsubr
js
aaa
repz
xlat
and
mov
xchg
mov
xor
dec
shr
dec
xchg
jb
imul
pop
jecxz
adc
jo
dec
sub
lods
sub
rcll
dec
xor
lds
std
mov
mov
xor
cmc
bound
dec
inc
cmc
mov
loop
aaa
lods
aaa
add
imul
sub
jmp
cmp
or
mov
dec
fadds
pop
push
and
popa
inc
fcmovnb
lcall
cmp
inc
mov
mov
cld
daa
shrl
xchg
push
mov
cmpsb
ds
pop
in
cmpsl
adc
fnsave
cmpsl
lret
repnz
scas
pusha
cs
pop
pop
inc
fadd
insl
sub
push
mov
mov
test
add
jmp
push
ficoms
sub
addr16
lock
mov
and
inc
inc
cmp
call
adc
dec
cmpsl
aas
bound
subl
les
js
lret
mov
movsl
adc
sub
enter
pop
cli
sahf
cs
push
jp
stos
outsb
or
push
movsl
mov
push
add
mov
inc
mov
mov
pop
push
into
out
push
mov
push
inc
test
fcmove
nop
dec
sbb
in
add
xchg
imul
lds
mov
sbb
cli
ret
mov
in
add
push
ret
add
or
inc
fstl
test
repnz
in
in
dec
insb
cwtl
cmp
sbb
inc
das
or
jmp
loopne
push
mov
mov
push
sub
shrb
je
mov
lcall
dec
test
mov
shr
xor
out
daa
ss
imul
pushf
add
xchg
mov
cmp
add
sti
loopne
imul
xchg
outsl
jl
mov
cmp
fdivl
sub
and
inc
and
fdivs
cmc
shll
lds
mov
sub
aaa
lea
ds
fs
xlat
push
push
in
cmp
add
inc
sbb
leave
jb
mov
or
out
mov
fistl
cmp
mov
or
adc
ja
test
push
pop
jp
inc
lea
imul
cwtl
call
xchg
movsb
or
scas
or
adc
lahf
xor
cmp
scas
dec
add
fsubs
jne
jge
pusha
outsb
push
insl
jne
xor
jmp
outsb
shrb
int
push
dec
jb
int3
aam
in
or
and
lds
add
nop
icebp
movsbl
int
ret
adc
xor
mov
mov
or
mov
int
insl
jo
movd
andl
mov
jo
dec
cmp
add
aas
xchg
sub
inc
jp
ficoml
mov
stos
and
mov
dec
and
and
loopne
mov
sbb
je
xchg
out
mov
ja
inc
loop
jp
sahf
out
push
pop
idivl
insb
movsb
and
cmp
or
rorb
fdivrl
push
cmpb
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
int3
cmp
dec
add
add
add
add
add
add
pop
add
and
add
add
add
inc
push
sti
jbe
je
inc
inc
inc
scas
mov
addb
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
