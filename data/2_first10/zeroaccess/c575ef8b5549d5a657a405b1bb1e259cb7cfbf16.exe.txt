push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
add
mov
orl
orl
mov
mov
inc
mov
adcl
mov
sub
mov
mov
sbb
xor
mov
adc
orl
orl
lea
mov
add
mov
mov
mov
xorl
add
xor
or
mov
and
jmp
and
xor
sbb
mov
dec
ss
push
push
push
cmp
jmp
inc
mov
dec
popf
pusha
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
xchg
clc
xchg
ds
test
and
inc
int3
or
cwtl
dec
jle
adcb
daa
mov
mov
imul
in
jle
xlat
sub
add
adc
dec
ss
nop
int
jbe
pop
fsubrl
pop
iret
aas
jae
inc
ljmp
jg
push
outsb
lods
jle
add
xchg
pop
adc
jnp
gs
in
test
dec
add
ret
out
lods
push
jno
outsb
xchg
jge
cli
mov
out
stos
lcall
inc
xchg
movsb
cli
xchg
mov
idiv
pop
mov
jno
orl
push
movsl
inc
cmp
mov
mov
mov
fwait
mov
inc
mov
dec
push
in
dec
pop
inc
xlat
inc
into
or
inc
lret
sub
clc
inc
scas
jg
adc
testb
lods
pushf
fcoms
js
mov
xor
mov
mov
inc
testl
xchg
sub
dec
push
and
dec
adc
lea
lods
stos
ficoml
jp
xor
das
pop
int
pop
push
cmp
cli
adcl
cmp
xorb
ret
dec
int
shl
xchg
sbb
jecxz
cmc
addr16
lea
jl
add
cmp
adc
das
das
xchg
jns
in
cmp
push
inc
imulb
mov
sub
push
mov
mov
cwtl
popf
ret
addr16
out
cli
inc
mov
addb
jle
fidivrl
sti
mov
in
sub
pop
sbb
dec
xorb
or
sahf
sbb
imul
cmp
das
mov
fcompl
outsl
sbb
outsb
jno
int3
xchg
pop
pop
in
fists
jae
xchg
mov
dec
lds
mov
pop
xchg
aam
mov
test
loop
arpl
ljmp
out
popa
ret
pop
mov
mov
andb
ret
mov
cld
cmp
xor
xor
dec
js,pn
mov
and
mov
jg
pop
stc
enter
aaa
jnp
scas
xchg
fs
lahf
negb
sub
inc
shrb
sbb
sub
xorb
sahf
hlt
ds
fst
and
pop
int3
sarl
rcrb
push
in
imul
sub
push
test
int3
fcmovnb
mov
jl
add
mov
hlt
push
loop
or
mov
insl
inc
jnp
mov
pushf
xor
pusha
repnz
scas
pop
push
int3
nop
in
fs
pop
jge
mov
mov
loope
inc
dec
push
pop
mov
mov
push
xchg
mov
xchg
cmp
xchg
and
es
hlt
ds
js
lods
call
xchg
popa
in
or
xchg
enter
sar
pop
mov
outsl
int
mov
mov
in
mov
or
loope
add
shll
xor
add
popf
je
fnsave
enter
sub
and
add
js
cmp
cli
idivl
push
into
gs
cld
or
loopne
lret
mov
xchg
rcll
mov
jmp
scas
dec
cld
mov
cltd
lcall
xor
xchg
pop
insb
pop
inc
mov
sub
aad
out
mov
jo
xor
inc
testb
lcall
lea
repnz
loop
aam
orb
loopne
call
mov
mov
movb
lds
std
mov
sub
adc
jmp
or
push
cli
or
push
xchg
jg
call
out
aas
mov
aas
cmc
add
mov
mov
scas
test
xor
add
xchg
pop
xlat
sub
push
and
and
jl
pop
subl
hlt
enter
jle
arpl
mov
pop
enter
pushl
xchg
outsl
data16
fisttps
in
fmull
std
divl
jb
push
xor
gs
cmp
and
mov
jecxz
adc
pop
in
add
sub
and
pop
cmp
add
inc
pop
shrb
cmp
popf
cmp
dec
repnz
pop
mov
jbe
inc
inc
mov
fistpll
adcb
jp
xor
mov
fcmove
push
hlt
ja
xchg
xchg
pop
popf
mov
pop
sbb
in
mov
fs
jg
into
inc
dec
or
and
push
mov
xor
mov
add
mov
jmp
fdivrs
lds
xchg
pop
and
sub
cmp
lea
lods
jbe
aas
iret
mov
fstps
cmp
fwait
dec
pop
xchg
pop
jne
movsb
rcll
sub
lahf
out
je
addb
out
cmpsl
xor
sub
in
xor
in
pop
dec
jnp
pusha
aaa
xchg
jnp
push
mov
js
insb
jae
in
aad
jns
arpl
movsl
pop
push
xor
push
lock
incb
ret
ja
sti
in
inc
and
aam
add
popf
fcmovnu
xchg
dec
push
xchg
push
dec
scas
outsb
adc
push
sahf
pop
cmpsb
xchg
xchg
inc
push
sbb
lock
cmpsb
xchg
xor
fdiv
xor
push
sub
mov
popf
movsl
push
xor
jl
stc
popf
inc
mov
sbb
adc
jb
and
adc
xor
je
push
ret
xlat
pop
jmp
and
lret
mov
into
push
mov
adc
pop
rcr
and
add
dec
jle
das
mov
das
mov
push
stc
xchg
mov
pop
les
sub
fbstp
inc
sahf
jo
mov
in
test
jecxz
mov
adc
mov
inc
mov
fsubrs
pop
aam
mov
dec
xor
xchg
sub
sbb
jne
push
lds
lahf
push
out
push
out
mov
into
push
stos
insl
enter
pop
out
inc
aad
mov
or
in
push
pop
pop
mov
jg
inc
aam
xor
pushf
push
xchg
cmpl
data16
mov
movsb
cmpsb
fnstsw
add
cmp
in
jns
cld
out
xor
or
inc
dec
roll
add
adc
push
dec
sub
xor
xor
mov
inc
jge
sti
mov
add
iret
inc
add
add
jb
and
repz
xchg
mov
sub
inc
out
mov
and
in
pop
ficoml
jbe
in
jl
inc
lret
mov
add
les
mov
push
jge
inc
fidivrs
and
lcall
mov
jl
in
mov
xchg
cwtl
fwait
test
push
cmp
jno
out
adc
cmp
bound
xstore-rng
cmpsl
push
sbb
inc
rorl
stc
and
cmpb
lahf
dec
push
xchg
mov
pushfw
test
or
xor
sub
mov
enter
xchg
pop
push
sahf
pop
cltd
sbb
jo
mov
ffreep
mov
jg
jae
aas
sub
push
dec
adc
std
or
mov
fildll
mov
adc
jl
inc
and
ret
rolb
test
sbb
mov
jge
jbe
gs
mov
mov
push
xor
mov
ds
stos
test
mov
das
loopne
stc
cmpsb
imull
and
cli
cmpsl
cmp
or
into
mov
lods
stc
es
push
out
jecxz
aas
leave
xchg
adc
clc
jp
imull
dec
and
cmc
jecxz
je
arpl
or
jp
clc
mov
int3
mov
insl
repz
std
mov
call
xorl
lods
repz
mov
pop
push
sti
cmp
mov
shll
add
test
add
and
test
jle
inc
ss
dec
leave
in
xchg
cmp
inc
imul
mov
loope
dec
stos
repnz
sbb
aaa
adc
xor
cmp
pop
push
dec
push
mov
xor
xchg
mov
inc
mov
adc
int3
fstpt
lret
mov
push
or
jle
push
les
sub
jmp
negb
mov
push
jp
roll
mov
or
pop
not
cld
xor
inc
push
pop
incl
jnp
out
mov
xor
adc
dec
jae
xchg
jae
cmp
ja
add
icebp
mov
jmp
iret
lret
into
jmp
sub
push
loope
ret
outsb
icebp
dec
adc
cmp
mov
push
jae
inc
cwtl
jle
mov
mov
pop
jb
mov
pop
popa
std
test
fs
fucomp
ljmp
imul
loop
fcomps
pop
xchg
ret
test
shll
sub
in
cmp
jp
ja
subl
das
mov
jne
data16
dec
leave
sbb
pop
inc
ret
jle
pop
mov
sbb
popf
jne
jb
mov
outsb
das
sub
jo
sbbl
sti
bound
call
sbb
gs
gs
dec
je
or
push
mov
nop
bound
xor
adc
insb
cld
cmp
inc
cmp
ret
mov
addr16
push
ds
aam
jecxz
dec
mov
fidivrs
aaa
iret
clc
sbb
scas
fsubrl
sbbl
push
adc
mov
mov
insb
ljmp
dec
pop
les
and
pop
mov
shrd
shr
not
mov
dec
mov
xor
adcl
xor
movl
or
adcl
mov
neg
movl
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
andl
subl
and
orl
xorl
mov
sub
movl
movzbl
or
jmp
in
in
testl
sbb
push
cmp
push
test
aam
jecxz
adc
jnp
xchg
ret
mov
xchg
jecxz
fdivr
les
icebp
cs
scas
sbb
sbb
inc
adcl
enter
vcmpps
aas
sub
cmpsl
mov
idivb
jecxz
inc
les
add
mov
ficoms
testl
aam
orl
add
in
xchg
scas
aaa
mov
xor
add
and
std
mov
pop
mov
es
xchg
sahf
loop
stos
lahf
push
fwait
jecxz
in
lcall
jmp
mov
sbb
mov
push
and
cmp
lcall
cmp
pop
int
cmpsb
sahf
fsubrs
sbb
inc
pop
add
scas
mov
aam
xchg
lret
sti
jp
pop
jge
jl
add
add
push
pop
fwait
xchg
xor
and
sbb
in
push
sbb
sbb
fcomip
push
outsb
and
pop
je
sub
push
push
dec
mov
fsubl
push
pop
imulb
mov
cmp
lea
shlb
push
insb
push
icebp
lcall
insl
cltd
fildll
push
aad
pop
adc
cmp
jge
fcomps
jecxz
dec
and
mov
sub
inc
mov
sahf
jnp
mov
adc
mov
adc
or
test
mov
orb
mov
jno
inc
ljmp
jge
xchg
mov
jle
adcl
adc
jmp
pop
add
dec
cmc
sub
jle
add
adc
loopne
sbb
push
xor
les
testb
adc
mov
lret
in
jp
or
leave
push
imul
hlt
out
push
jge
sub
in
not
sbb
cmp
mov
scas
dec
psubusw
shlb
add
mov
mov
dec
or
lock
adc
inc
mov
mov
pop
add
push
movsl
adc
sub
xlat
ljmp
adc
sub
hlt
es
mov
push
test
sbb
sub
hlt
xor
push
xchg
mov
fcomps
repz
xchg
mov
out
mov
out
push
in
subb
jmp
adc
int3
iret
cmp
fsin
std
inc
setge
jl
mov
jne
movsl
pop
jmp
sub
popf
add
mov
xlat
ss
in
shrb
cmp
jnp
xchg
mov
jae
std
mov
ret
or
mov
fisubs
int
repnz
and
in
mov
push
pop
xchg
lods
fwait
xchg
cli
repz
ds
jecxz
sbb
lods
mov
lds
mov
fldcw
mov
add
pop
dec
das
xchg
jno
shrl
inc
sar
imul
jnp
nop
das
ss
or
push
add
cmpsl
popf
dec
mov
leave
stc
jns
arpl
jg
and
ds
sti
xchg
add
ret
jae
ds
in
test
movsb
lods
pop
fcoms
mov
sbb
push
lcall
sub
lcall
in
inc
sbb
outsl
xchg
push
push
push
xor
pop
dec
pop
loopne
test
ljmp
stc
push
nop
push
mov
jl
fstps
sub
add
inc
cmp
push
jecxz
mov
jnp
sbb
fisubrl
adc
out
mov
inc
lret
add
scas
in
pop
ds
push
in
lds
sahf
shll
loopne
push
je
out
cmc
pop
and
test
or
les
mov
test
call
shl
push
mov
mov
jnp
xchg
int3
push
out
sub
jne
into
mov
shrb
leave
or
mov
lods
mov
in
scas
add
fisubrs
orb
imul
jle
in
jbe
adc
out
and
fwait
mov
movsb
push
ljmp
xchg
or
lea
mov
ss
or
sub
lcall
mov
inc
xchg
push
mov
data16
je
int3
cld
mov
mov
push
rcr
jne
into
sub
int3
test
push
xchg
add
sub
add
pop
addr16
pop
int3
mov
subb
dec
in
test
sti
adc
cmp
xor
push
xor
aaa
in
jnp
shll
push
int3
repz
mov
pop
and
lahf
sbb
sahf
dec
mov
pop
mov
lret
insb
sbb
les
or
rolb
adc
mov
or
or
mov
and
adc
fsubl
or
aam
dec
mov
push
subb
out
mov
shlb
push
push
dec
jle
movl
movl
and
jmp
loope
mov
scas
sbb
dec
lret
loopne
loop
mov
add
push
sub
xchg
adc
aaa
jno
adc
loop
daa
cmc
std
inc
jae
or
ret
lea
out
mov
movnti
push
arpl
lods
sub
popa
arpl
or
setge
stos
lret
sarl
rorb
es
inc
xor
dec
test
pop
pop
sub
aad
gs
xchg
test
mov
mov
sub
xor
div
rcll
cltd
mov
bound
fsubl
push
mov
inc
movsb
push
cmc
sbb
xchg
dec
push
mov
push
pop
xchg
fneni(8087
neg
lds
inc
inc
data16
fcoml
jge
cmp
mov
sub
rcll
adc
pushf
cmp
or
jecxz
cwtl
mul
js,pt
nop
fwait
jl
push
adc
cs
out
popf
cmpsb
mov
jl
jecxz
outsb
dec
sbb
xchg
pop
es
dec
sti
test
inc
dec
sbb
push
call
sub
mov
dec
mov
in
divl
fs
aam
mov
repz
add
cmp
xor
mov
cltd
ret
test
cs
jne
pop
push
insb
lret
into
lcall
dec
jecxz
xchg
into
gs
push
shl
clc
xchg
and
into
mov
fiadds
je
imul
pop
or
rdpmc
imul
mov
cld
push
jge
xlat
sub
and
shr
push
mov
mov
in
and
fucomp
inc
add
lcall
add
xorb
jbe
xor
rcl
dec
notl
mov
add
std
movsb
mov
mov
shl
aad
inc
push
or
ficoms
mov
outsl
push
or
das
xor
cmpsl
mov
bound
lods
dec
dec
pop
adc
add
stc
jle
push
fidivrl
jnp
jge
pop
add
pop
inc
or
sbb
mull
pop
xor
loope
mov
add
sti
mov
mov
cmpsb
jmp
pop
push
sub
cmc
mov
lahf
test
jle
insl
out
dec
inc
jmp
aam
add
or
dec
inc
mov
mov
repz
add
push
cs
in
cmp
rol
jae
fstl
int3
arpl
jp
xchg
aaa
lahf
mov
int3
jnp
or
sti
div
imul
loope
lea
cwtl
cli
mov
jmp
mov
mov
cmp
fiaddl
pop
fidivs
repz
jne
inc
into
or
push
lret
sti
sbb
push
fnstenv
loopne
and
jns
mov
or
dec
mov
and
mov
fxtract
popa
mov
mov
jmp
and
xchg
sar
aad
sarl
add
or
ja
lret
sbb
mov
push
insb
mov
xchg
sub
add
into
lret
xlat
stc
test
and
dec
js
rcll
out
jbe
fistpll
push
cmp
fimuls
nop
add
adc
push
pop
xor
sbb
lock
mov
xor
rclb
movsb
sub
xor
jnp
pop
lea
addr16
inc
inc
and
sbb
jmp
xlat
dec
or
cmp
cltd
cs
adc
in
in
rorb
aas
xor
jg
aaa
out
into
icebp
fs
adc
xor
mov
jl
incl
sti
sub
adc
push
push
jmp
sbb
rorl
or
push
ret
inc
cmpsl
push
mov
xchg
add
cmp
mov
lea
mov
mov
test
enter
test
scas
mov
mov
repz
cmp
and
mov
jp
sub
mul
push
add
cs
ds
outsb
idivl
pop
xchg
mov
pop
mov
push
ds
in
xchg
cmp
popf
jnp
aam
push
jmp
add
aam
test
jb
mov
mov
arpl
mov
mov
adcl
adc
mov
inc
cmc
jl
and
push
xor
std
sub
mov
outsl
pusha
idivl
sbb
jo
push
jg
cli
shrl
sbb
mov
notl
push
mov
add
sub
jns
stos
ljmp
call
jg
sub
pusha
or
mov
ret
push
xchg
xchg
cli
loop
cmp
and
push
pop
inc
inc
ja
push
sub
jg
arpl
std
inc
mov
push
stos
sbb
cmpsb
aam
in
push
sub
cmp
ja
dec
popf
xchg
xlat
add
daa
jmp
adc
and
mov
out
inc
mov
out
fcmovb
push
adc
push
and
fwait
gs
shlb
stos
movsl
or
push
aad
out
cmp
ficoms
jp
fs
movl
movl
cmpl
movl
movl
jmp
notl
jg
push
pushl
push
push
push
call
xorl
adcl
xor
or
or
sbb
movl
mov
add
mov
movl
sbb
movl
movl
movl
jmp
cmpsb
in
ficoml
adc
cmpsb
es
jb
in
push
cmp
pop
movsl
fmull
inc
inc
lahf
cmpsb
mov
scas
inc
sub
mov
rorb
pop
mov
dec
mov
sbb
mov
mov
sub
mov
push
aas
out
loope
push
loopne
cmp
cltd
lea
jbe
out
jae
dec
jno
jle
imul
bound
out
or
stc
test
mov
fs
jl
hlt
jg
out
lret
call
mov
jns
aad
iret
pusha
and
enter
es
mov
repnz
mov
scas
pop
dec
lods
push
push
add
or
cmp
mov
pop
inc
jno
loope
sahf
bound
gs
mov
lock
xchg
mov
outsl
dec
lret
sbb
dec
pop
scas
inc
sarl
or
aam
mov
sub
cs
shll
sti
test
xor
sub
aam
mov
mov
popa
jnp
call
cs
outsb
inc
or
call
dec
shr
repnz
addl
jecxz
fimuls
repnz
push
idivb
sbb
imul
mov
ret
jae
movsb
cmpsb
ret
clc
fsub
or
push
lret
inc
add
mov
clc
lret
in
and
cmp
in
xor
add
mov
jbe
out
pop
pop
sub
les
mov
loopne
or
enter
sub
sub
jnp
out
cmp
fdivr
pop
push
jnp
sbb
bound
scas
xchg
or
in
pop
or
lods
inc
icebp
sahf
lahf
cli
jno
xor
push
xchg
mov
test
pop
jno
jae
pop
std
push
out
cld
mov
fcompp
cmp
xchg
jbe
mov
mov
aam
rcll
sub
cmpsl
xchg
fwait
shrb
aaa
pop
gs
or
mov
and
movsl
sbb
data16
mov
inc
fwait
cmc
ljmp
mov
das
popa
xor
stos
pop
lret
mov
rcl
loop
lea
push
sub
sub
mov
jmp
rcl
cmp
xor
subl
pop
jno
or
inc
rorb
mov
pop
push
lret
sub
mov
cli
mov
fisttps
in
cmp
push
mov
push
movsb
call
rolb
pop
test
sbb
mov
mov
cmp
mov
xor
out
subl
add
fwait
icebp
lea
jnp
xchg
cmp
jae
in
push
sub
aas
mov
inc
jo
ja
jnp
jno
sub
and
dec
cmp
jmp
pop
js
mov
adc
leave
push
movb
pop
mov
dec
push
mov
mov
jbe
cmp
enter
mov
scas
movsb
sbb
pop
add
mov
cmp
xchg
scas
test
sbb
add
xchg
dec
mov
xchg
xchg
cwtl
inc
imul
cmp
xor
mov
lds
cmp
mov
js
inc
stos
ljmp
sahf
push
lea
mov
mov
mov
push
js
inc
sbb
es
xchg
lahf
in
xchg
xchg
pusha
leave
mov
iret
adc
add
pop
into
jge
insl
outsb
lcall
pop
sub
pop
mov
or
aam
jnp
mov
andb
push
fld1
mov
lret
repnz
xchg
mov
das
pop
or
adc
scas
xor
pop
push
rep
jno
jo
adc
les
hlt
in
popf
adc
xchg
dec
shrl
aam
pop
xor
movb
orl
stc
pushf
pushf
push
xchg
mov
jecxz
in
hlt
fmuls
push
shrb
outsl
mov
cltd
mov
pop
iret
push
pop
insl
push
iret
lds
divl
or
mov
adc
jae
shrb
cmpsl
leave
int
in
xor
aad
lahf
xchg
adc
push
outsb
outsl
out
std
pop
das
popa
jnp
xchg
push
data16
aam
pop
mov
cltd
cmp
and
mov
pop
mov
popa
int
mov
cmp
in
cmp
push
pop
jno
push
cmp
fiaddl
mov
mov
sub
gs
shrl
out
jmp
and
aam
stos
mov
aad
push
hlt
iret
leave
push
pop
cmp
test
scas
cmp
push
jno
imul
dec
nop
xchg
and
mov
cmp
xchg
mov
jecxz
out
xchg
rorl
push
push
gs
fs
cmp
adc
cld
mov
fidivl
pop
add
das
imul
fadds
mov
sbb
add
add
sbb
add
movl
cmpl
movl
movl
jmp
movl
not
jne
push
call
add
addl
addl
subl
adcl
add
addl
sub
movl
movl
movl
movl
add
movl
movzwl
and
movl
xor
movl
inc
movl
movl
cmpl
mov
movl
jmp
movl
not
jne
push
pushl
pushl
call
xorl
orl
andl
and
addl
decl
xor
cmpl
movl
movl
movl
jmp
mov
movl
jge
push
call
addl
subl
addl
sub
orl
andl
cmpl
movl
movl
jmp
mov
movl
jl
call
xorl
andl
orl
xor
mov
shl
mov
andl
push
incl
push
push
push
addl
call
mov
addl
mov
subl
xor
not
mov
add
mov
sub
sub
cmpl
movl
mov
movzbl
mov
jmp
movl
mov
jl
push
push
pushl
call
xor
or
mov
sbb
sbb
mov
add
mov
sbb
movzbl
or
mov
mov
mov
mov
xor
lea
jmp
out
decb
lock
sbb
hlt
loope
push
cmp
in
out
pop
mov
pop
jb
push
adc
fdivrl
je
shlb
ja
or
mov
rclb
jbe
fwait
and
loop
mov
push
gs
mov
sub
adc
ss
adc
out
incl
xchg
adc
pop
incl
add
jmp
mov
rcr
lcall
aam
imul
sbb
xchg
sub
jle
cmp
rcrb
aad
cmpsb
fdiv
sbb
xchg
jge
add
xchg
mulb
adc
cltd
and
fbstp
mov
ret
pop
popa
pop
cmp
int3
imul
rorb
std
pop
sbb
or
mov
mov
mov
xor
pusha
and
cld
dec
popa
std
jno
fiadds
rcll
shl
iret
cmp
cltd
dec
lahf
mov
or
rorb
sbb
jns
test
sub
mov
test
push
mov
in
and
xchg
nop
push
ljmp
push
idivl
dec
fnstcw
enter
adc
jge
jmp
idivb
daa
into
mov
movsl
fadds
adc
fdivrs
sti
out
loopne
pop
and
jge
rolb
shll
push
iret
mov
dec
add
xchg
push
lahf
push
pop
push
fnstcw
idivb
aaa
lods
mov
mov
imul
cmp
and
push
and
aaa
xor
in
xor
loope
dec
ret
push
xor
into
push
inc
and
mov
adc
cmp
ds
outsl
inc
push
jg
out
pop
lods
test
andw
push
and
nop
or
sti
dec
test
clc
inc
gs
dec
sub
lret
dec
xchg
outsb
shlb
sbbl
fisttpl
jle
pop
mov
jecxz
sarl
push
lea
or
cs
sbb
ficompl
or
add
sbb
push
test
mov
stc
xor
pop
sub
cld
ljmp
mov
inc
mov
ret
cmp
movsl
sbb
lds
sub
enter
sti
cmp
inc
cs
iret
xlat
cmc
std
test
inc
js
cs
ret
mov
lret
mov
cmp
iret
rcrl
fdivrs
cmp
out
data16
in
xchg
push
iret
hlt
or
jmp
movb
sarb
xchg
lods
dec
xchg
pop
cmp
nop
pop
adc
mov
xor
sub
and
mov
push
pop
dec
cmpsb
push
in
ja
shlb
pop
and
push
mov
into
xchg
cmp
add
ja
cmp
or
sbb
in
cmp
int3
xor
test
shlb
mov
outsl
sbb
push
pop
mov
xchg
cmp
icebp
popf
incb
leave
fstl
mov
xchg
xlat
add
inc
jecxz
in
loopne
inc
dec
pusha
scas
loopne
pop
add
inc
fdiv
and
test
sbb
data16
lret
jecxz
push
pop
popf
int
insl
pop
and
inc
les
int3
pusha
addr16
mov
xor
pop
aad
cmp
inc
shll
inc
or
testb
and
add
shr
aam
push
mov
cmp
ret
xchg
mov
and
fcomps
pop
pop
sub
cmp
mov
stos
insb
add
dec
jle
mov
icebp
aad
mov
mov
jns
cmc
pop
mov
or
push
cmpsl
inc
scas
push
mov
dec
lret
mov
mov
jns
mov
roll
rcll
jbe
into
and
push
mov
out
fwait
sbb
in
inc
sbb
add
xchg
push
imul
ret
addr16
mov
es
xor
out
cld
in
aaa
cld
mov
xor
or
xor
leave
fstpl
popa
std
add
fbld
push
enter
fwait
mov
jo
imul
stc
sbb
xchg
imul
pop
imul
push
add
jecxz
out
cmp
and
and
imul
bound
aaa
shlb
and
add
xor
mov
push
jbe
scas
dec
ljmp
mov
jb
ficompl
pop
outsb
test
std
push
sbb
scas
sbb
cmp
std
lods
sub
inc
movsl
push
sub
dec
rclb
dec
sub
sbb
lcall
xorb
testl
les
jmp
dec
jnp
push
push
scas
int
jnp
mov
dec
les
inc
das
pop
imulb
mov
mov
mov
sub
and
stc
clc
inc
lds
and
mov
and
fldt
ret
imul
add
jle
inc
cmpsl
arpl
and
test
test
cmp
xchg
repnz
fstpt
imul
inc
push
xchg
enter
jmp
xchg
inc
xchg
mov
cmpl
notl
mov
movzwl
jmp
movl
jg
pushl
call
add
xor
subl
sub
or
xor
mov
orl
or
and
mov
adc
mov
mov
adcl
or
adcl
xor
cmp
jne
andl
mov
subl
mov
and
shrd
shr
sbb
mov
and
mov
shl
addl
xor
subl
jmp
add
sbb
sbb
clc
sbb
jb
cmpsb
jns
push
cmp
jo
out
xlat
insb
les
pop
je
dec
out
arpl
inc
mov
lret
or
ficoml
je
cmpsl
into
push
fisubl
fiadds
push
test
inc
imul
xchg
inc
lcall
pop
adc
outsb
jnp
lcall
nop
push
jo
jmp
cli
mov
int
mov
loop
inc
xchg
bound
jno
push
cmp
xchg
insl
mov
adc
std
sti
push
mov
mov
jb
pop
mov
xor
repnz
jo
scas
lahf
jg
call
negb
in
push
iret
sbb
test
lahf
cmp
inc
arpl
movsb
fidivrs
ds
arpl
mov
mov
xchg
fisttpll
outsl
adcb
shrb
adc
xchg
xlat
cmc
ficompl
and
xchg
loope
loopne
xchg
pop
or
addr16
cli
sub
mov
jo
push
dec
imul
cmovns
jb
push
ret
test
sub
xor
xchg
pop
jns,pn
sbb
xor
jmp
and
js
inc
hlt
outsl
sub
imul
cltd
scas
lock
xchg
insl
cmp
addr16
cmp
jnp
adcb
pop
dec
push
jp
add
mov
mov
lods
mov
jg
movsb
or
es
xlat
loope
imul
mov
jge
or
fstl
rolb
add
rcrb
ficoml
xor
lret
dec
outsb
jge
or
mov
and
mov
xchg
into
cli
les
xchg
mov
pusha
dec
in
rcr
out
repnz
repz
mov
push
push
outsb
jns
xchg
pop
cmp
out
or
lods
pop
sbb
xlat
adc
popf
dec
call
or
dec
sbb
lcall
gs
jb
cmp
test
repz
mov
pop
shrl
decl
pop
stos
loope
xor
jno
push
stc
mov
lret
lcall
cmpl
mov
das
sbb
xor
fs
lea
jg
lret
xor
dec
mov
daa
in
jl
sub
lods
push
jecxz
or
and
dec
push
mov
jmp
dec
lds
or
lock
xchg
outsb
aad
decb
test
jns
iret
lods
and
sub
xchg
jno
fdiv
in
aad
cmp
mov
cli
sbb
repnz
cltd
out
nop
xchg
inc
mov
dec
enter
lret
sub
mov
mov
inc
icebp
xor
xchg
pop
dec
and
mov
jge
jno
and
in
push
test
mull
add
call
jae
insb
mov
jno
arpl
jae
jmp
outsl
push
clc
pop
inc
int3
xchg
xchg
icebp
cmovbe
xchg
ja
push
push
xchg
cmpsl
sub
call
test
push
mov
cmc
xchg
adc
push
imul
sbb
test
into
jno
js
fimull
mov
adc
push
movsl
xchg
mov
xor
jo
pop
scas
fnstsw
gs
cmp
xchg
fildll
lods
fs
rorb
mov
clc
adc
imul
outsb
movsl
mov
jmp
sbb
rclb
jbe
xor
repz
popf
jp
jl
ja
jne
push
mov
mov
lds
pop
les
rorb
jg
enter
gs
adc
ss
cwtl
int
cmpsl
mov
fcoms
jbe
sbb
jle
xchg
es
xchg
shll
inc
mov
jbe
nop
in
sbb
imul
dec
push
xorb
fs
pop
sbb
xor
cmp
cltd
jb
adc
in
lcall
lods
dec
jno
iret
xchg
loop
push
ljmp
inc
outsl
cwtl
icebp
push
popa
push
cwtl
movsb
clc
ljmp
outsl
daa
sbb
mov
rorl
into
or
lret
mulb
jno
cmp
shlb
pusha
push
lods
lock
pop
sub
iret
sub
ret
xchg
repnz
rclb
push
sbb
test
or
aad
rep
call
xor
test
imul
inc
inc
test
sbb
cltd
or
mov
inc
pop
pushf
outsb
into
sahf
add
fucomi
insb
adc
lahf
pop
push
cld
inc
jno
dec
jns
outsl
sbb
push
in
add
sub
mov
inc
or
ds
mov
mov
jns
lahf
cmp
or
dec
mov
or
mov
arpl
push
mov
sbb
imul
ret
dec
mov
mov
cltd
pop
pop
imul
sbb
fildl
verw
xchg
jl
lret
mov
mov
clc
repnz
sbb
xchg
cmc
lahf
insb
ret
inc
in
lahf
adc
push
sbb
fisttps
fnstenv
xorb
subl
or
notl
jmp
ss
cmp
sbb
pop
pop
scas
and
sbbl
lds
push
cmp
psubsb
ja
stos
stc
pop
sahf
outsb
movsl
movsl
popa
push
inc
add
ret
xchg
out
into
mov
in
mov
aam
mov
out
ds
ds
mov
in
scas
jl
into
ja
mov
add
jns
adc
lret
repnz
fsts
sub
xor
lods
and
loop
in
xchg
push
lahf
insl
call
loop
int3
in
push
inc
out
loope
mov
dec
jnp
sbb
cmp
and
sub
jp
fbld
xchg
jg
pop
vorps
xor
pop
lods
insl
scas
lea
mov
clc
mov
int
daa
xchg
out
sub
cmc
adc
movsb
pop
sbb
insb
or
push
loop
jo
cmpsl
orb
lods
inc
xchg
pop
dec
or
and
testl
es
xor
add
push
clc
clc
sbb
add
dec
ret
sub
std
sahf
pushw
lea
adc
rcr
pop
pop
push
jp
fs
cmp
sub
movsl
clc
inc
insl
lds
aam
push
jecxz
fdivl
xor
inc
sarl
clc
imul
je
or
into
cs
test
push
mov
cmp
sahf
lret
jne
and
pop
xlat
idiv
es
arpl
add
getsec
rolb
mov
push
xchg
adc
push
mov
mov
ficompl
stos
subl
leave
dec
sub
mov
fstl
push
mov
fstp
mov
fs
sarb
push
jno
rcll
inc
scas
movsl
imul
mov
in
stos
xor
inc
fisttpll
fdivl
adc
or
jmp
inc
xor
cmp
jle
mov
jmp
sub
cld
mov
xchg
or
pushf
cmc
cmp
mov
dec
into
insl
jns
fnstenv
into
notl
int
arpl
mov
xor
adc
sub
scas
jbe
mov
mov
mov
inc
out
arpl
push
adc
push
mov
push
nop
lea
mov
cmp
push
dec
pop
outsl
cmpsb
sub
xchg
push
out
clc
dec
dec
add
gs
sarb
mov
cld
jmp
add
aam
rorb
xchg
addl
mov
cli
lds
inc
pop
and
xor
cli
push
popf
out
adc
push
in
cmp
xchg
jns
clc
cmp
jg
lock
fdecstp
mov
or
adc
xchg
jb
and
pop
cli
and
cmp
or
inc
mov
jns
add
mov
ljmp
jp
fimull
loope
sarl
ja
sbb
enter
mov
jb
adc
in
aad
arpl
addb
xlat
sbb
xchg
sub
js
lret
leave
push
sti
mov
adc
pop
repnz
int3
mov
daa
inc
or
push
add
sahf
jg
sub
sbb
inc
dec
xchg
into
daa
mov
pop
js
add
nop
cmp
rcrb
jmp
mov
loop
cmp
jp
ds
or
cld
fistpll
xor
mov
adc
sub
lock
lret
pop
xorb
mov
icebp
xor
cmpsb
in
jae
jle
test
adc
fwait
addr16
lods
lret
aad
lret
sbb
and
mov
sbb
or
mov
jns
and
in
xor
adc
inc
std
movsb
dec
adc
in
mov
jnp
es
sub
sbb
mov
int
and
loop
clc
cmp
fwait
jns
lods
lods
shlb
out
out
pop
ret
xor
mov
mov
inc
push
or
shr
inc
outsl
adc
ds
fimuls
movsb
mov
sbb
inc
xchg
add
pop
ret
lret
push
push
and
mov
scas
rorl
ljmp
nop
leave
inc
sbb
test
mov
fstl
xchg
mov
out
sbb
jp
lret
rorl
add
xor
push
movb
cltd
lock
jb
ret
dec
test
lcall
out
mov
ljmp
enterw
add
movsl
pop
roll
push
push
int3
xor
ss
or
and
repz
push
daa
xchg
push
scas
stos
push
mov
clc
add
in
mov
adc
ja
popf
mov
jb
push
xchg
jle
mov
jnp
mov
xorb
sub
lahf
jp
and
and
test
std
iret
aam
add
lret
mov
mov
add
pop
loopne
cld
sti
sub
lcall
add
add
add
loopne
add
jne
or
mov
cmpl
mov
not
jmp
movl
mov
jb
push
call
xor
adc
orl
mov
mov
sub
xor
mov
xor
or
sub
sub
movzbl
add
mov
movzwl
or
mov
xor
mov
mov
adcl
mov
shrd
andl
mov
add
mov
xor
sbbl
shr
mov
addl
xor
andl
or
addl
shl
cmpl
mov
movl
mov
mov
jmp
movl
movl
jl
pushl
call
or
xor
xorl
incl
add
not
sub
mov
mov
sbb
mov
add
mov
and
mov
mov
mov
or
mov
xor
jmp
xlat
mov
push
xor
sub
push
cmp
lea
inc
addr16
scas
aad
dec
add
pop
cltd
mov
int3
jne
arpl
sahf
lret
mov
aad
adc
int
in
pop
cmc
jecxz
insb
int3
push
rorl
rol
or
sbb
rcr
jl
inc
xlat
jle
cmp
xchg
arpl
insl
dec
and
out
das
add
xchg
mov
sbb
cmpsl
mov
call
in
mov
cmp
rorb
jnp
adc
rorl
sarb
frstor
sub
mov
rol
push
imulb
xor
ret
shlb
and
and
adc
enter
into
imul
cmpsb
xlat
rclb
add
repnz
test
sbb
shrb
ret
in
xorb
adc
inc
and
mov
repz
xor
push
dec
jg
and
push
sbb
repnz
or
ss
gs
and
mov
xchg
push
in
aam
loope
repnz
sub
jmp
sub
stc
neg
and
faddl
call
popf
sarb
scas
xchg
jae
test
movsb
ja
xchg
pop
add
and
inc
lcall
dec
popf
icebp
push
ret
mov
dec
js
mov
xchg
jnp
xchg
xor
xlat
movsb
and
jns
ret
mov
ficompl
or
and
jmp
inc
mov
fstpl
daa
mov
jne
inc
cmp
andl
mov
pop
cltd
stos
pop
lcall
hlt
jg
movb
in
push
inc
das
popf
sbb
pop
mov
sbb
lcall
mov
pop
mov
cli
mov
push
and
das
dec
cs
inc
stc
adc
jmp
dec
stc
jne
xchg
dec
test
inc
popa
inc
subb
int3
test
sub
cs
bound
leave
mov
loop
xchg
jge
sub
jmp
xchg
out
xchg
xchg
out
or
xor
inc
in
cmp
cmp
push
jl
mov
inc
lods
xor
and
jmp
mov
repnz
clc
daa
lock
mov
adcb
xchg
cmp
scas
dec
ror
or
add
clc
repnz
fidivrs
testl
loop
jae
shr
push
je
mov
jl
pop
stc
mov
ljmp
das
stc
add
dec
lods
push
test
push
outsl
out
and
push
les
and
outsb
insl
mov
mov
jbe
lea
loop
in
mov
or
push
mov
adc
int
shll
test
int
mov
mov
push
ret
xchg
mov
dec
fsubrp
lds
cld
mov
lods
pushf
xchg
sub
dec
shrb
sub
pop
lock
rol
rclb
imul
sub
jne
adc
push
xchg
imul
dec
adc
jae
xor
sub
aam
cmp
xchg
addr16
fs
and
sub
cmp
jbe
mov
cmp
test
cmp
push
in
insl
prefetch
pop
inc
adc
add
push
loop
call
mov
sub
dec
arpl
push
dec
outsb
lret
xchg
xor
mov
iret
lcall
add
mov
dec
xchg
repz
cmp
jbe
test
xor
ljmp
test
rcr
pusha
push
sub
add
and
or
jg
and
jb
pop
push
inc
adc
and
inc
fucompp
rolb
xor
in
sahf
mov
jo
sub
aaa
jg
test
jbe
mov
mov
add
sbb
push
ljmp
xchg
repnz
ret
jo
cmp
enter
clc
scas
shlb
mov
cwtl
xor
ljmp
repnz
adc
testl
sbb
pop
sbb
call
call
stos
test
jb
mov
das
mov
in
insw
adc
mov
dec
popf
lahf
dec
mov
jno
jne
mov
pop
fbstp
mov
ret
das
out
jecxz
push
mov
ds
es
jns
xor
pop
xor
or
mov
mov
mov
add
push
ret
mov
mov
ds
inc
enter
mov
rclb
scas
jmp
mov
stos
add
cmpsl
std
je
stc
push
sub
scas
out
shrl
and
stos
mov
stc
add
js
cmpsb
lds
xor
fwait
es
jnp
hlt
push
mov
xorl
adc
stos
mov
adc
test
out
out
lods
fs
sbbb
jae
arpl
fcoms
int3
inc
fisubl
roll
cmp
shr
mov
mov
xor
mov
andl
xor
shl
adcl
xor
or
jmp
xchg
fcomps
xor
insb
jp
rcr
outsb
lods
mov
push
cmp
sbb
cs
add
rcl
fists
aam
loopne
out
push
testl
jo
cmc
out
into
js
and
leave
push
out
pushf
movsb
sub
cmp
roll
adcb
xor
xor
dec
ret
cmp
mov
sbb
pop
fadds
idivl
mov
inc
cmp
shl
std
sub
pop
or
pop
adc
cmp
out
popf
xchg
insb
std
fstps
jmp
pop
call
dec
mov
fistps
lahf
xor
loop
bound
testb
sbb
data16
mov
xchg
lcall
out
pop
lods
lcall
dec
pop
pop
jle
pop
xlat
int3
add
cmp
bound
inc
movsl
cld
loop
out
jae
movsl
pop
call
cs
inc
shll
shl
and
rorb
test
stos
in
mov
out
mov
cmp
int
out
jo
in
add
in
push
jmp
mov
xchg
lahf
gs
jge
xor
mov
or
jno,pn
je
inc
mov
or
fisttpll
mov
imul
cmp
xor
mov
lods
in
add
xchg
psubusw
or
outsb
jg
mov
push
outsb
cmpb
leave
enter
push
mov
push
push
push
and
adc
mov
aam
shrl
fcomp
shlb
mov
iret
aad
cltd
xchg
push
inc
ss
and
les
mov
lods
lds
rorl
dec
iret
or
lea
and
mov
cmc
out
and
popf
ds
es
push
movsl
fistl
andb
jmp
xchg
stos
lret
inc
lret
scas
xchg
mov
inc
xlat
mov
ljmp
mov
gs
pop
call
or
mov
xchg
xchg
mov
inc
push
dec
scas
loopne
cmpb
mov
and
ss
push
aaa
test
inc
sbb
jge
mov
test
sbb
fimuls
adc
xchg
dec
sbb
push
enter
push
out
xor
add
push
push
shll
or
fldln2
loope
sub
mov
mov
pop
adc
push
push
loop
scas
push
cmpsb
xchg
mov
insb
push
out
aam
inc
ja
nop
addb
mov
ljmp
and
in
nop
ret
inc
xchg
inc
je
out
mov
mov
mov
adc
lods
jle
or
enter
enter
cmp
inc
lock
into
icebp
bswap
jge
jecxz
orb
shrl
mov
dec
add
loopne
xchg
cld
xchg
mov
jbe
xor
sub
hlt
jp
jp
cmp
call
mov
push
dec
into
out
sub
arpl
shll
jns
icebp
mov
mov
mov
loope
jne
mov
sub
aaa
ret
adc
js
inc
xor
pop
jb
cmc
in
xor
add
xchg
sub
int3
fsubrs
les
push
int
push
lahf
imul
push
andb
test
scas
xchg
dec
add
cli
fsubr
dec
movsl
pop
shlb
iret
or
and
mov
sbb
in
pop
xchg
aad
ss
ds
pop
pop
les
fisttpll
cmp
jne
adc
jmp
fistl
ja
add
pop
inc
mov
xlat
lret
ret
push
lock
cli
jns
push
pop
mov
jl
roll
insl
xor
lock
cmp
jecxz
mov
out
test
cmp
push
ds
jecxz
gs
sbb
adc
cltd
mov
inc
fsubr
iret
cs
enter
adc
mov
add
rcrl
and
test
and
lea
push
jbe
jg
pop
and
int
xchg
xchg
roll
push
dec
les
test
dec
xchg
cmp
sbb
loopne
or
push
push
rcrb
dec
mov
mov
fidivrs
rcr
push
mov
cmpsb
sbb
fmuls
pushf
inc
pop
test
leave
insb
sbbl
adc
mov
pushf
int
sbb
sbb
cmp
push
outsb
loope
loop
push
xor
loopne
inc
mov
sbb
push
mov
lods
adc
dec
mov
jl
sbb
jg
orb
add
dec
nop
and
sub
mov
sub
outsl
das
fs
mov
bnd
clc
sbb
jnp
and
cmpb
mov
pop
push
mov
or
xchg
jecxz
adc
mov
jbe
enter
pop
sbb
push
mov
in
subl
cmp
iret
push
sahf
sbb
push
ds
je
xor
dec
sub
mov
add
mov
cmpl
mov
mov
movl
jmp
movl
movl
jae
call
and
subl
add
mov
xor
xor
mov
shrd
shr
dec
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
push
push
call
mov
sbb
orl
or
adcl
xorl
or
mov
orl
xor
sbbl
xor
notl
or
orl
jmp
mov
inc
test
sub
fcomp
dec
int3
outsb
or
push
push
cmp
pop
repnz
cmc
xor
adc
arpl
jecxz
mov
mov
jns
push
fildll
cmpsl
lods
es
cmp
jb
adc
inc
and
fsubrl
jns
push
sub
add
push
jo
and
sub
jl
sbb
push
inc
pop
fwait
add
add
in
imul
jmp
push
dec
movsl
and
jne
sub
test
dec
pushf
fistpl
xor
xchg
shlb
pop
sbb
loop
dec
or
adc
imul
push
jno
inc
sbb
movsl
sbb
mov
mov
incb
or
ss
insb
ds
fisubrl
dec
loopne
dec
cltd
push
dec
pop
pop
cmp
dec
mov
int3
stc
das
movsl
mov
jmp
icebp
call
and
mov
pop
fs
sub
sub
out
cmp
sbb
pushf
adc
mov
les
and
push
jo
inc
dec
loopne
push
cli
push
lea
xchg
sbb
sahf
and
mov
inc
or
rolb
dec
movsb
push
pop
xor
inc
fldenv
lcall
fisubl
loope
sub
xchg
lea
sub
ja
adc
outsb
adc
cmp
inc
popf
mov
inc
scas
je
xchg
add
mov
xchg
add
sub
dec
xlat
lds
jb
cmc
inc
and
xlat
mov
jo
flds
mov
in
inc
outsb
mov
test
lock
pop
xchg
inc
psllq
call
cmp
push
loope
and
in
sub
mov
mov
or
int
mov
dec
mov
inc
daa
pop
dec
mov
cmp
mov
fnstenv
push
lahf
mov
push
or
add
mov
cmp
daa
fimuls
rcll
inc
xor
mov
xchg
sbb
inc
inc
inc
push
mov
push
enter
gs
xchg
sub
jge
dec
jae
jo
push
jnp
pop
aas
test
neg
mov
fcompl
inc
jnp
cld
cmpsl
ss
cmp
insb
adc
gs
mov
sbb
daa
sub
imul
add
and
insb
dec
pop
inc
sub
iret
mov
rcrb
outsl
es
fidivs
xor
ja
pop
add
dec
lods
push
sarl
jns
lea
mov
push
dec
inc
imul
add
ss
int3
dec
dec
cs
push
scas
jae
or
ret
fcompl
pushl
fistps
cmp
movb
aas
mov
mov
loopne
shll
scas
jge
inc
icebp
faddl
aaa
sub
add
add
scas
push
cmc
fs
and
pop
mov
mov
cmpsl
cmpsb
xor
fstpt
push
jp
fcmovb
mov
cs
fcmovb
add
pop
mov
pop
pop
sub
jmp
imul
int
pop
fiadds
adc
lcall
cmc
fistpl
xor
iret
ja
rclb
fs
push
fwait
mov
das
in
pop
je
sbb
popa
xlat
call
dec
xchg
and
mov
mov
popf
xchg
nop
mov
xor
adc
jmp
lods
insl
pop
hlt
dec
daa
out
lods
stos
ja
mov
mov
mov
jae
stos
mov
inc
adc
mov
nop
out
push
xor
cmp
xor
jmp
sti
popf
fadds
jmp
incl
pop
xchg
jl
mov
int3
inc
lcall
dec
push
pop
xchg
adc
inc
mov
mov
jno
test
nop
insl
sub
aaa
lds
in
cmp
push
imul
mov
out
or
pop
dec
mull
clc
adc
xor
mull
jl
int
dec
inc
xchg
jae
xchg
xor
out
mov
cmp
fwait
mov
pushf
enter
and
stos
int3
mov
mov
dec
rclb
adc
jmp
dec
and
sbb
inc
lods
ficoms
stos
test
pop
mov
imul
shr
jo,pt
imul
ja
cmp
rcrb
and
notb
jle
xor
sub
repnz
push
mov
xlat
jmp
mov
and
popf
frstor
sbb
rorl
cmpl
push
aad
imul
or
pop
xchg
ret
jae
dec
sub
lret
out
pop
add
push
mov
rorb
dec
stos
rcr
sahf
stc
mov
xchg
sbb
mov
int3
push
jb
dec
xchg
sbb
stos
mov
inc
inc
jmp
daa
fnsave
push
mov
or
stos
into
inc
aas
xor
shrb
das
pop
rolb
mov
pushf
xchg
mov
mov
adc
jle
stos
mov
lea
mov
movzwl
or
mov
mov
subl
shrd
shr
cmpl
mov
movl
movl
jmp
not
mov
jbe
push
push
call
mov
add
xor
or
add
orl
add
movl
add
not
mov
mov
or
mov
jmp
loope
adc
adc
push
fsubrs
adc
push
push
popa
mov
adc
or
in
push
mov
push
mov
cmp
mov
xchg
push
ja
mov
clc
push
xor
pop
inc
xor
add
imul
add
arpl
xchg
dec
aad
xchg
daa
imul
mov
cmpsb
jg
enter
das
mov
push
out
dec
xchg
lcall
aam
inc
add
insl
xchg
stos
xchg
mov
adc
je
mov
sbbl
lods
push
inc
insl
mov
and
lods
popl
loopne
shll
pop
aaa
js
je
in
cmp
push
add
and
sub
jg
es
negb
in
xchg
pushf
rorb
scas
or
mov
inc
into
and
nop
jecxz
jno
mov
and
push
std
subl
or
cmp
inc
pop
push
and
jne
cmp
xor
in
fwait
dec
enter
rcrl
sbb
out
ret
cmp
inc
rcrl
jmp
mov
cltd
jge
call
ret
inc
pop
cltd
or
dec
mov
in
adc
and
in
rcrl
clc
and
pop
jle
outsl
scas
fidivs
or
push
insl
push
jno
add
xor
pop
outsb
push
push
jns
call
shlb
iret
test
sub
movsb
pusha
xchg
cmp
push
hlt
or
add
lret
enter
rcrb
aad
stos
mov
mov
shrb
sbb
out
mov
adc
gs
push
adc
imul
jmp
mov
jl
mov
push
icebp
pusha
xchg
xchg
ljmp
dec
mov
push
mov
mov
mov
fs
mov
or
fstl
add
sbb
mov
sub
or
movsb
and
xor
sti
fwait
push
push
adc
mov
loope
jbe
in
push
push
shll
in
rcrl
inc
pop
xchg
cmp
dec
lock
scas
add
ds
jne
in
and
iret
xchg
pop
mov
adc
ljmp
notl
cld
sbb
aaa
inc
movsl
and
and
xchg
movsl
sbb
fnstcw
add
in
pop
leave
ret
jae
jb
add
jnp
cmp
jno
xor
mov
jo
ret
add
jecxz
loopne
fwait
and
push
fadd
mov
iret
sub
shl
mov
in
outsl
xor
das
rol
pushf
cli
jns
mov
sti
jo
mov
dec
xchg
mov
mov
hlt
shl
mov
sbb
dec
fnstcw
xchg
jmp
stos
jecxz
das
int
shrl
cmpsb
scas
roll
mov
ss
movb
push
jb
sbbl
dec
repnz
adc
lret
aas
sbb
jle
xor
addr16
jnp
out
out
add
daa
lock
sub
fidivrs
mulb
aad
inc
cmpsb
adc
mov
sahf
inc
add
xlat
jmp
push
mov
add
jmp
cmc
xor
pop
sub
std
cmp
push
dec
add
xchg
in
fsub
cmp
push
pop
stos
cltd
dec
negl
xchg
jle
daa
lcall
out
lret
xor
or
or
je
pop
pop
andb
negb
pop
and
push
mov
push
sbb
sub
xlat
movsb
lcall
paddusw
nop
mov
pop
cmc
inc
xchg
cmc
dec
xor
lret
jecxz
xor
push
push
popa
push
jns
inc
aas
xchg
xchg
lcall
inc
enter
push
hlt
clc
cli
fildll
sub
push
pop
les
out
cmpsl
xor
jp
xchg
sbb
or
mov
or
incl
push
notb
mov
dec
imul
inc
int
fs
clc
loop
frstor
add
call
and
rcrl
adc
fistpl
dec
push
dec
push
inc
std
fdivl
les
and
jo
mov
subb
test
leave
fildll
jp
xchg
aam
push
cltd
xlat
cli
bound
ficompl
sbb
push
sbb
int3
push
movsl
lcall
dec
pop
cld
mov
jns
cltd
stc
xchg
mov
mov
pop
inc
icebp
mov
dec
cwtl
jnp
dec
mov
adc
xlat
mov
das
cld
pusha
xchg
push
aad
inc
inc
fs
push
fldt
cltd
ja
mov
fsts
movsb
add
movsb
xor
jno
sub
xor
add
stos
and
cmp
insl
jle
enter
test
ficomps
xchg
xlat
mov
mov
adc
add
mov
inc
sub
sub
xor
mov
orl
xor
orl
or
shl
subl
imul
mov
mov
shrd
incl
mov
mov
xor
shr
and
mov
movzbl
or
mov
mov
addl
xor
andl
or
sbbl
shl
addl
sub
movl
mov
cmp
mov
mov
jg
xorl
mov
adc
mov
shrd
orl
mov
xorl
mov
xor
shl
xor
addl
or
xorl
shr
mov
mov
mov
or
mov
shrd
subl
jmp
fwait
push
dec
mov
xchg
sbb
inc
push
je
pop
shrb
xchg
push
push
cmp
rolb
xor
add
enter
pop
jmp
sbb
mull
cmpsb
pusha
popf
lock
mov
push
push
jl
mov
ljmp
cmpb
pop
shlb
xor
test
or
aaa
dec
xchg
notl
cltd
and
fwait
lds
xor
int
mov
aaa
xor
mov
je
adc
iret
push
adc
mov
xchg
lea
mov
push
andb
pusha
fs
arpl
mov
jbe
outsb
imul
pop
daa
test
push
mov
pop
dec
sbb
daa
pop
pop
pusha
aam
xor
call
cld
mov
cmp
movsl
das
cmpsb
jle
sbb
aam
lock
pop
insl
sbb
mov
mov
lock
sub
iret
lcall
push
call
adc
jmp
push
stos
iret
cmpsl
fisttpl
push
dec
imul
push
lods
test
inc
lods
subb
je
loopne,pn
cltd
shlb
int3
ljmp
outsl
inc
xor
sub
int3
cmp
adc
xor
mov
jmp
into
das
rcrl
jmp
mov
jo
outsl
jecxz
jb
cli
xor
jecxz
movsl
cmp
dec
and
dec
dec
scas
inc
sti
popa
dec
cld
test
ljmp
fidivl
adc
cltd
and
mov
sti
xor
addr16
mov
stos
lcall
dec
lahf
jae
jle
cltd
jno
pop
push
adc
cmpsb
mov
push
test
pop
pop
jne
mov
cmpsl
jle
repz
in
cmpsb
push
cwtl
push
cmpsb
sub
mov
nop
xor
sub
dec
adc
mov
lret
test
add
scas
cltd
cmc
jnp
out
aas
pusha
mov
xor
into
insb
ja
jbe
cmp
jno
mov
mov
out
sub
lods
inc
fnstsw
shll
xchg
in
fwait
sbb
push
dec
sahf
mov
xchg
or
mov
cmpb
dec
dec
repz
cmc
or
pop
push
adc
mov
jle
sarl
test
push
push
pop
les
lock
lahf
cs
mov
ret
call
aas
pop
jns
xchg
sub
adcl
cwtl
fsubs
pop
inc
out
push
mov
mov
cs
fnsave
add
push
mov
mov
mov
scas
test
jl
ds
mov
pop
xchg
or
xor
push
shrl
popf
adc
jo
push
or
or
ret
es
pop
pop
movsb
mov
cli
paddsw
add
imul
mov
test
lahf
xchg
cmpsl
insl
jmp
push
stc
mov
or
mov
xchg
in
mov
cmp
mov
mov
pop
lods
jbe
xchg
jl
decl
push
adc
xchg
repnz
in
xor
inc
sbb
cmp
movsl
subl
popa
addr16
sub
pop
in
pop
addr16
sbbb
dec
stc
pop
leave
cmp
lock
cmp
cli
inc
xchg
xchg
sbb
mov
cmp
fidivrs
xor
cmp
jp
mov
daa
inc
rorb
scas
ss
jno
sbb
popa
adc
pop
jg
stc
sub
xchg
shlb
imul
jne
imull
or
or
xchg
dec
mov
out
and
sbb
xlat
fldl
or
push
sub
xchg
dec
or
add
aas
ret
jno
mov
stos
lds
pop
rolb
xchg
mov
sbb
mov
leave
fwait
aaa
cmp
jecxz
cltd
and
sub
lret
out
and
loope
idivl
icebp
mov
pop
inc
pop
cmp
push
add
scas
push
inc
mov
subl
jnp
enter
push
xchg
cmp
into
sbb
mov
rol
jmp
scas
ljmp
pushf
mov
sub
sbb
scas
adc
jle
pusha
cmp
daa
sbb
shrl
es
jge
xchg
push
pop
and
inc
mov
inc
mov
mull
sbb
sub
jo
cmp
aad
mov
test
and
lret
pop
adc
shl
cwtl
arpl
mov
dec
sbb
mov
scas
dec
sahf
add
ret
cmpsl
push
mov
std
shll
fcoml
fnstenv
repnz
sub
push
adc
test
ljmp
dec
pop
dec
mov
pushf
lahf
pop
mov
dec
and
push
mov
pop
jle
out
xchg
jmp
jne
inc
fiaddl
adc
enter
imul
pop
outsl
mov
jae
dec
inc
xor
scas
inc
xchg
sub
or
sub
mov
dec
subb
mov
add
scas
sub
mov
and
mov
xor
orl
xor
jmp
fisttpl
mov
xor
sbb
xor
adcl
cmp
or
in
push
test
fcmovnb
push
dec
mov
cld
pop
pop
cmpsb
jnp
pop
popf
jnp
adcb
icebp
mov
lock
cmp
mov
inc
or
pop
outsl
aad
push
mov
push
test
sahf
jle
xchg
mov
xchg
sarl
dec
testb
fildll
scas
pop
lcall
sbb
sbb
jle
push
or
test
jb
in
fstpt
adc
inc
das
lock
shlb
insb
insl
push
and
lea
pusha
mov
pop
std
xor
cltd
out
mov
sub
pop
mov
pop
cwtl
aaa
jbe
aam
outsl
mov
sub
in
sbb
repnz
mov
dec
imul
ret
scas
mov
push
mov
add
cmp
sbb
jg
fs
push
test
fnstsw
imul
xor
mov
xchg
inc
lock
xchg
mov
sub
mov
inc
cltd
mov
mov
icebp
jne
and
aas
cmp
into
cli
daa
fisubs
cmp
xor
outsl
dec
sub
dec
stos
push
nop
ret
sbb
clc
dec
out
mov
aad
sub
mov
cs
sti
mov
adc
hlt
adc
ljmp
repz
loop
jmp
xchg
pop
adc
adc
mov
dec
jg
ficoml
out
mov
mov
sbbl
popa
xchg
mov
adc
mov
add
daa
pop
xchg
in
test
shrl
dec
add
lods
xor
adc
stc
sbb
cwtl
shl
add
inc
and
inc
stc
push
js
test
lods
or
add
sarl
sub
test
outsb
mov
jl
adc
mov
cmp
push
xchg
inc
mov
pop
lods
roll
shlb
xor
pop
es
jne
add
jno
stos
jmp
repnz
lock
xchg
sbb
push
or
cli
enter
aam
scas
push
sub
jb
sbb
repnz
xor
cli
mov
je
cs
movsb
ds
dec
test
movsl
test
mov
mov
push
or
adc
dec
mov
mov
bound
je
fdivrl
mov
scas
cwtl
xchg
hlt
dec
addr16
or
test
adc
mov
les
push
mov
push
mov
sub
jg
cmpsl
ljmp
or
cmc
mov
mov
add
enter
adc
nop
arpl
mov
test
xor
rol
hlt
lds
cmp
out
add
mov
and
push
inc
imul
ficoms
xchg
dec
sbb
arpl
pop
mov
add
add
xchg
mov
cld
cmp
xor
cld
movsb
mov
inc
ret
xor
int3
cwtl
mov
leave
jno
shll
cltd
pop
xchg
jb
aaa
notb
lods
cmp
ja
stos
cmpsl
out
sbb
pop
mov
mov
mov
dec
std
mov
cmpsl
sbb
push
fs
shll
mov
mov
ljmp
test
inc
xor
xchg
xor
pushf
cld
and
sub
insb
and
out
rorl
fldcw
stos
filds
pop
pop
pop
into
ds
sbb
push
jl
xor
ds
imul
or
inc
push
mull
push
dec
scas
mov
mov
cmp
ret
sub
mov
dec
sub
xor
sbb
adcb
lret
push
cmp
jmp
mov
add
sbb
jae
ret
push
mov
push
pop
dec
dec
add
sbb
jle
popf
sbb
lock
and
in
xchg
outsl
dec
inc
ret
cmp
insb
call
cltd
es
jg
pop
and
fs
sbb
test
ja
mov
inc
test
hlt
jp
enter
cmpsl
dec
mov
dec
leave
fstpl
jae
rorl
adc
loopne
jp
dec
in
arpl
jge
jl
aas
into
push
mulb
test
stc
sbb
cmpsl
bound
mov
nop
mov
cmp
int
and
push
xor
rcr
daa
push
sahf
clc
std
jne
mov
pop
jecxz
stos
jp
ss
fldl
xor
pop
in
aas
jl
push
imul
aad
xor
xlat
mov
data16
and
and
popa
aas
mov
add
and
sar
mov
add
sbb
mov
enter
sbb
or
cld
imul
sbb
jp
into
xor
loope
subl
imul
sub
movl
jmp
sub
mov
mov
sbbl
shrd
mov
mov
xor
adcl
jmp
bound
imul
push
pop
fsts
std
mov
enter
adcl
push
icebp
or
out
jecxz
cli
ds
cmp
ret
xor
inc
push
add
pusha
mov
sar
inc
loopne
clc
cmpsl
pop
cmc
adc
push
adc
stos
push
popf
out
in
xor
mov
xchg
push
add
sbb
cld
test
sbb
inc
js
pop
stc
adc
mov
push
cmp
sub
push
jmp
mov
int
mov
lea
cmp
sar
sbb
sbb
sub
cli
push
fwait
aam
aas
dec
mov
aam
or
test
xchg
and
pop
scas
loopne
jle
push
pop
mov
rclb
or
out
das
inc
pop
hlt
xor
ret
int
sbb
and
imul
jae
sbbb
sub
jnp
cmp
lcall
mov
mov
lods
and
push
jg
mov
lds
adc
fcoml
pop
loop
mov
ret
jp
dec
add
xor
movb
int3
mov
mov
inc
push
sub
fisubs
push
shll
mov
outsl
iret
add
rclb
xchg
mov
out
int3
xor
adcl
cmp
imul
jmp
lret
push
pop
jae
push
paddq
cmp
xor
xor
inc
cmp
imul
xchg
mov
pop
or
rcrb
and
fisttps
scas
dec
lea
push
add
dec
out
dec
insb
add
decl
orl
addr16
xchg
lea
mov
mov
adc
mov
push
cmpsl
sbb
or
scas
fwait
push
push
std
xchg
pop
test
adc
popf
std
push
loope
cmp
or
test
in
add
stc
int
sub
bound
sbb
hlt
cmc
fwait
fs
into
stc
stos
vxorpd
mov
xor
jns
add
push
lods
jg
add
pop
sub
inc
sbb
inc
addr16
xchg
das
adc
negl
inc
aaa
jle
inc
jecxz
movsb
test
xchg
aaa
out
insl
ret
outsb
lods
pop
mov
scas
push
dec
jg
gs
rorb
inc
dec
sbb
jg
lods
stos
dec
xchg
sbb
popf
daa
and
pop
mov
xchg
jmp
sub
mov
xor
xchg
fbstp
ret
add
push
pop
mov
sub
imul
mov
outsl
cmc
jne
add
mov
shrl
mov
outsb
dec
jge
das
xchg
not
pop
push
sub
add
and
mov
adc
pop
fwait
jns
xchg
add
inc
add
outsl
and
cmp
dec
or
and
or
push
dec
in
jb
les
push
loop
lods
ja
adc
sub
inc
clc
jge
into
stos
int
xchg
cmp
pusha
jge
push
sbb
jb
insl
jge
into
add
and
and
repz
ret
adc
mov
movsl
in
and
sbb
int3
push
in
add
test
inc
mov
xorl
fwait
lret
mov
lahf
xor
push
insl
outsb
jnp
push
mov
xor
sahf
push
xlat
jecxz
fwait
pop
push
shlb
cltd
inc
pop
rorl
inc
fwait
and
test
mov
jmp
mov
jmp
daa
xchg
sub
pop
mov
mov
mov
pop
xchg
fmulp
inc
inc
aaa
and
cli
sbb
sti
cmp
xor
mov
data16
cli
je
cmp
repz
movsb
ja
xchg
jae
xor
pusha
and
jmp
aad
fcmovnbe
stc
dec
inc
addr16
cmp
enter
sbb
stc
scas
push
std
jae,pn
dec
push
cmp
mov
into
loope
fnstcw
push
push
and
jle
insl
cli
cwtl
inc
stos
lcall
jl
add
jl
lret
fisttps
dec
push
push
rorb
lcall
push
jns
jo
nop
in
fsubrl
repz
adc
cmpb
pop
mov
nop
dec
stc
and
jno
lahf
call
add
mov
mov
mov
inc
mov
addb
or
or
in
cmp
sahf
dec
das
and
pop
pushf
add
sbb
dec
sbb
adc
xor
lret
mov
jns
adc
inc
adc
jo
mov
jecxz
dec
lods
mov
hlt
mov
mov
cmp
out
arpl
bound
ret
jns
and
icebp
data16
add
dec
cmp
sub
dec
test
and
add
and
pop
pop
sub
testl
mov
push
xor
xorl
or
shr
xor
mov
mov
cmpl
movl
mov
mov
jmp
movl
je
push
call
xor
or
xor
add
inc
or
adcl
mov
cmpl
movl
movl
jmp
movl
jle
pushl
push
push
push
push
push
call
inc
dec
sbbl
sub
cmpl
mov
mov
not
jmp
movl
jae
push
push
call
add
xor
andl
sbbl
adc
xor
xor
add
mov
mov
shrd
addl
jmp
loope
ja
xor
pusha
pushf
sub
scas
jb
and
test
insl
push
push
cmp
xor
pop
enter
add
push
test
sub
inc
xchg
outsl
sub
pusha
aam
sub
pop
pop
loop
sbb
xor
add
jmp
adc
xchg
lahf
iret
movsb
and
std
andb
pop
pop
mov
test
cltd
loop
add
push
int3
xor
lret
xchg
jo
mov
int3
xor
pop
sbb
adc
dec
add
sbb
add
dec
add
push
push
wrmsr
pop
jb
popf
mov
xchg
and
inc
mov
das
push
ljmp
insb
jle
add
sbb
mov
es
out
xchg
pushf
push
shlb
js
push
imul
test
or
mov
je
xor
nop
hlt
bound
cld
inc
or
adc
jle
jp
cld
scas
add
aam
mov
pop
mov
into
out
xchg
fs
sub
movsl
incl
loop
sbb
mulb
dec
movsb
pop
clc
test
sub
cs
add
or
imul
gs
xor
mov
xchg
sbb
xchg
push
xchg
cmpsb
pop
popf
mov
nop
cmpsb
cmc
leave
fwait
pusha
fistl
lcall
xchg
fldt
les
mov
push
mov
in
push
xor
push
push
jmp
jge
xchg
mov
int3
lds
pop
or
xchg
shrl
mov
or
sbb
xchg
lock
mov
sub
lea
scas
mov
sub
pop
dec
xchg
lds
mov
sub
aas
xchg
movsl
or
pop
sbbl
add
jle
pop
lock
ds
adc
cmp
into
test
sub
outsb
cltd
sub
xor
lret
seto
mov
jmp
adc
arpl
test
mov
inc
inc
adc
scas
inc
xchg
dec
jecxz
xchg
repnz
scas
jnp
mov
adc
mov
mov
xor
movsb
rcrl
repnz
fdivrs
fisubrs
and
out
push
enter
inc
sti
and
test
js
fsubrl
adc
std
cmp
jecxz
ret
icebp
xchg
ss
or
adc
cwtl
and
shrl
iret
mov
inc
sbb
inc
ret
fisttpll
cmp
sbb
aas
mov
ljmp
pop
stos
pop
mov
mov
xchg
mov
insl
fcmovu
nop
sti
xchg
pop
jnp
fisttpl
pop
and
add
push
jecxz
fucom
jmp
cmp
orl
inc
into
push
jae
aas
pop
push
adc
add
jle
pop
inc
jo
fndisi(8087
in
pop
sarl
and
sbb
shrl
loop
aaa
or
fldcw
iret
add
and
rcrb
and
mov
scas
pop
aaa
lods
sbb
xor
mov
and
fwait
jnp
cmp
jb
mov
xor
mov
xchg
fucom
into
xchg
jno
mov
xor
or
sbb
in
xchg
sbb
into
jle
inc
jnp
mov
xchg
and
enter
sub
ret
lret
or
out
or
jbe
lods
jno
arpl
repnz
sub
mov
cmpsb
and
scas
jne
xchg
mov
or
or
and
lods
scas
jle
dec
imul
inc
movsl
hlt
cs
cmp
xchg
cmc
mov
fwait
jge
or
out
xchg
cmp
adc
pop
int
mov
sbb
loopne
mov
mov
ror
mov
fisttps
lret
mov
mov
inc
add
sub
cmp
pop
xor
pop
xchg
cmp
iret
pop
rol
inc
clc
dec
sub
push
daa
push
idiv
lcall
in
cld
cld
add
fs
cmp
add
mov
add
or
xlat
call
lahf
dec
adc
psubusw
xor
cmc
adc
push
push
js
arpl
pop
adc
cmp
out
push
arpl
paddusb
pop
cmp
mov
ds
jno
sbb
es
ja
fmuls
xchg
add
inc
rcl
mov
fistpll
xchg
push
decb
jmp
fsub
or
adc
xor
test
lock
jb
sub
pop
mov
dec
add
hlt
sbb
push
xchg
jns
dec
pushf
xor
gs
out
ljmp
mov
push
sub
cs
pop
jb
push
clc
xor
pop
clc
jae
loope
push
dec
mov
inc
mov
jbe
jnp
mov
mov
mov
or
add
or
jne
sbb
test
xor
ja
outsb
mov
adc
mov
mov
subl
mov
orl
xor
orl
xor
or
orl
shl
decl
add
add
sbb
mov
sub
mov
movzbl
sub
mov
shrd
shr
sub
mov
cmpl
movl
mov
movl
jmp
movl
movl
jne
push
push
push
pushl
call
and
sub
inc
adcl
dec
mov
mov
xor
mov
xor
shl
xor
or
xor
add
adc
mov
jmp
jle
fucomp
sbb
test
mull
push
cmp
mov
cwtl
movsb
sbb
ds
inc
xchg
call
popa
jp
test
mov
pop
int3
sbb
fiadds
cmp
mov
pop
pusha
adcl
mov
adc
inc
inc
sbb
icebp
xchg
pop
and
mov
cmc
push
pop
hlt
inc
aad
jmp
push
mov
aaa
ljmp
adc
lea
jo
sub
add
lods
mov
pop
roll
in
aas
or
cwtl
dec
sub
sub
xor
pop
test
bound
bound
or
iret
lret
lea
sbb
dec
xor
insb
cmp
cwtl
clc
dec
and
dec
ss
jne
xchg
xchg
jbe
push
stos
jo
js
out
mov
or
cmp
andl
cmp
sbb
fbld
pop
jl
insl
fbstp
mov
adc
clc
xchg
hlt
fwait
push
outsl
cmp
mov
ds
mov
test
jp
add
lods
adc
xchg
mov
loopne
dec
xchg
mov
jo
loope
inc
inc
data16
sub
iret
xchg
jns
push
adc
pusha
or
mov
mov
adc
dec
in
test
scas
int
fsubl
loope
cmp
divb
and
push
mov
pop
cld
sti
sbb
jbe
or
mov
lds
divb
icebp
call
adc
into
mov
jp
ret
lret
iret
mov
pop
sbb
rcll
mov
lcall
jmp
push
mov
mov
movsl
jne
cltd
mov
stos
cmc
shl
movsb
push
mov
push
xchg
or
ja
adc
stc
mov
or
lahf
lret
sub
cli
push
jbe
scas
push
shll
adc
mov
sahf
ss
push
mov
or
mov
pop
jne
adc
shll
orb
add
lret
loope
popf
idivb
lcall
outsl
pop
and
jo
xor
lcall
test
or
in
popa
sub
hlt
aas
subl
pushf
pop
scas
xlat
mov
out
inc
cmp
lods
add
test
mov
sbb
es
lret
ja
xchg
pushf
mov
cmp
xor
xor
cli
xchg
call
dec
push
mov
push
pop
cmpsb
jp
lds
jp
imul
xor
cmp
jle
sub
popf
lret
cld
xchg
lret
std
into
add
in
xchg
add
fdivr
das
mov
cmp
inc
stc
insb
inc
je
shrl
and
cltd
stos
inc
dec
lret
push
and
adcl
mov
daa
mov
push
shll
add
xor
es
cltd
subl
cs
loopne
mov
or
mov
sub
inc
pop
arpl
lds
add
popa
insl
push
out
gs
cwtl
add
dec
ss
inc
mov
add
pop
icebp
sbb
pusha
sub
jno
out
js
or
xor
enter
jecxz
insl
fldt
outsl
mov
or
ret
add
mov
add
pop
mov
adc
stos
sbb
test
adc
int3
out
fstpl
cmp
mov
xor
out
sub
jb
mov
pop
inc
mov
jo
faddl
hlt
lret
and
divl
and
and
scas
xor
and
lahf
popa
dec
fisubl
dec
in
cmpsb
das
out
xchg
mov
sbb
or
repnz
xor
arpl
out
fidivrs
xchg
push
mov
das
jmp
lcall
imul
xchg
in
stos
popf
in
shll
add
aad
add
rcr
push
pop
sub
popf
sbb
xor
add
daa
loop
movsb
lret
mov
out
ja
scas
cmpsb
jns
mov
pop
popa
je
out
xlat
jo
jmp
jae
mov
xchg
fs
shrb
xor
mov
dec
xchg
or
insb
test
sbb
imul
out
lods
fcoml
lret
lock
cmp
out
push
daa
xor
pop
outsb
sub
jmp
gs
push
pcmpgtw
std
xor
pop
inc
xor
pop
pop
xchg
fistpll
or
inc
mov
imul
popf
inc
pop
push
jl
xchg
in
jnp
xchg
iret
inc
pushf
adc
repnz
or
or
fs
mov
or
mov
jl
popa
clc
mov
push
fldenv
daa
js
test
ret
push
js
gs
sbb
mov
hlt
mov
stc
push
setge
mov
mov
lahf
push
xchg
xor
xor
inc
out
fiadds
sbb
mov
push
cli
pop
mov
push
cld
movl
sbb
mov
or
mov
sub
movl
and
mov
movl
mov
movl
add
mov
sbbl
mov
xorl
jmp
mov
or
sbb
je
mov
popa
push
push
cmp
ror
adc
ljmp
mov
push
add
icebp
push
pop
dec
xor
test
scas
notb
mov
dec
jg
shl
adc
ds
fsubrp
js
mov
imul
push
cmp
stc
pusha
jl
fcomp
cmpsl
addr16
cmpsl
push
xor
inc
sub
daa
pop
fstp
frstor
adc
push
pop
inc
mov
jae
push
mov
rcrl
cli
push
xchg
int3
xor
negl
mov
popa
pop
insb
cmp
xchg
test
mov
scas
scas
push
dec
inc
jnp
stos
mov
aam
sbb
pusha
inc
sahf
lret
loope
int3
xchg
popf
inc
or
mov
xchg
or
sub
popa
fcomps
sub
jmp
mov
imul
lcall
lea
repz
pop
xor
mov
and
inc
dec
pushf
sub
shl
dec
cmp
in
scas
mov
repz
and
dec
mov
inc
lahf
jns
divb
jns
cwtl
lods
sbb
aas
insb
test
xchg
nop
icebp
adc
ja
xchg
pop
sbb
pushf
dec
lret
aas
pop
aas
mov
cmp
jo
into
add
mov
cmc
bound
add
or
lret
sbb
call
popa
jne
inc
cli
lahf
push
xlat
adc
jp
mov
ror
das
je
sbbl
and
add
stc
adc
or
sbb
clc
outsl
jns
sbb
xchg
jbe
or
ljmp
sbb
nop
mov
fwait
lods
inc
xchg
xchg
add
cmp
mov
dec
push
mulb
std
or
or
dec
add
mov
mov
dec
xchg
sarl
dec
pop
aad
push
dec
mov
sub
push
adc
popf
popa
xlat
xchg
mov
test
xor
cmp
stos
nop
mov
xor
mull
fwait
jne
filds
fcmovnbe
mov
push
ljmp
pop
push
mov
pop
cwtl
jo
out
adc
adc
xchg
add
jecxz
push
fimuls
pop
jecxz
xor
hlt
hlt
sahf
mov
faddl
sbb
pushf
push
or
scas
mov
inc
jle
pushf
movsb
and
aaa
lea
mov
cmpb
in
or
aas
cmpsb
inc
xchg
loope
cli
bound
inc
subb
add
lret
cmpsl
and
out
mov
rcr
sub
adc
lret
shr
in
pop
inc
push
inc
fnstenv
bound
jnp
cld
cmpsl
fcmove
and
lahf
jno
ret
mov
popf
rcl
outsl
gs
mov
inc
scas
sub
je
mov
xor
xchg
mov
xor
das
jns
test
shrl
add
push
xor
mov
aas
movsl
or
lret
cs
sub
in
pushf
xor
sbb
loop
and
fcoml
js
sarl
sti
loopne
add
inc
adcb
movsb
out
xor
inc
jo
mov
cs
mov
jb
andl
jo
aam
lret
jns
xor
xchg
pop
xor
outsl
sbb
or
jle
fwait
das
pop
scas
mov
xor
fmull
xor
adc
cli
ja
fistpll
jg
mov
mov
and
cs
push
sbb
mov
mov
push
push
fimuls
mov
cld
stos
imul
mov
mov
dec
or
enter
sub
jno
inc
shrl
cmp
inc
xchg
xor
xlat
mov
ljmp
or
bound
lock
movsb
mov
aam
cli
xor
jns
adc
add
leave
orl
mov
int3
aam
lds
xchg
cwtl
lods
shrl
shl
sti
pushf
enter
in
test
fcomip
cmp
jmp
xchg
lea
push
mov
add
sbb
fadd
mov
test
pop
inc
lods
jl
es
lcall
mov
gs
sbb
bound
inc
mov
or
mov
dec
ret
ljmp
cmp
iret
imul
dec
pop
mov
mov
sbb
mov
sub
push
call
ret
mov
or
cmp
popa
in
jne
sbb
jno
dec
in
lods
out
icebp
shl
sbb
pop
jns
ss
xlat
adc
andb
dec
fcoml
fsubrs
mov
hlt
stos
mov
pop
push
es
mov
movsb
movsb
inc
mov
or
arpl
pop
or
xor
cli
inc
aas
lods
mov
and
gs
jbe
pop
sbb
rcr
push
adcl
pusha
mov
mov
shrd
cmpl
movzwl
movl
movl
mov
jmp
movl
ja
push
push
push
push
call
adc
orl
movl
and
movl
mov
mov
sub
addl
shr
orl
mov
mov
xor
shl
and
xor
or
lea
sbb
mov
mov
mov
and
shrd
mov
sub
shr
or
jmp
xchg
xchg
pop
test
mov
pop
mov
dec
push
push
cmp
add
sub
cmp
xor
scas
in
stos
jne
dec
push
mov
jo
sub
pop
inc
shlb
imulb
fisubrl
stc
cmc
ja
push
xchg
shl
or
out
lret
jo
or
lea
and
or
push
sbb
rorl
ds
aad
stc
xlat
push
lret
adc
out
mov
push
pop
pop
fldenv
xchg
cmp
repnz
adcb
sub
outsb
mov
ret
mov
and
sbb
movsl
popl
add
in
or
test
rclb
add
test
aas
pop
testb
call
aas
xchg
and
jmp
in
sbb
add
dec
adc
std
lahf
pop
pop
push
mov
je
mov
lea
jecxz
push
out
and
or
sbb
jnp
push
mov
cld
mov
aad
push
and
mov
mov
pop
outsl
inc
orb
sbb
popa
cs
and
xchg
dec
repnz
cmp
mov
iret
outsb
scas
pop
repnz
jbe
cmpsb
pushf
adc
and
xor
sbbb
in
sbb
dec
out
hlt
or
inc
xchg
pop
fnstsw
or
lret
mov
lods
adc
mov
daa
add
or
idivl
lds
xchg
push
hlt
iret
mov
jl
imul
ss
popa
fistl
je
xchg
jge
cmp
inc
and
es
mov
pop
mov
inc
xchg
mov
dec
push
jp
pop
jb
scas
adc
sbb
jns
push
loope
stos
sbb
bound
xchg
sub
rcll
lods
aas
cltd
testb
push
mov
les
add
add
ja
pop
adcl
xchg
insb
adc
push
cmp
stos
pop
mov
mov
into
fnstsw
adc
fs
sbb
push
jns
sbb
dec
lret
cmpsb
inc
pop
mov
inc
lret
adc
sub
dec
cmpsb
je
cmpsl
xchg
int
in
adc
mov
sub
mov
je
rorb
mov
dec
mov
xchg
pop
jbe
jnp
jns
and
dec
fucomi
hlt
jge
in
ret
test
pop
in
in
inc
mov
xlat
dec
push
rcrb
lock
xor
js
cmp
popf
push
adc
out
mov
mov
ss
inc
bound
shrl
add
sub
stos
sbb
aad
into
mov
pop
in
adc
fsubs
and
stos
mov
loop
int
out
mov
ja
or
mov
or
xchg
jp
adc
xchg
jne
or
sub
scas
cmp
lock
pushf
pop
sahf
push
stc
xor
je
ret
je
sub
fcmovnbe
lret
mov
daa
std
sbb
or
sahf
in
lea
test
mov
or
jnp
pop
ret
mul
mov
pop
inc
add
out
and
xchg
leave
lret
mov
dec
xchg
jmp
sahf
jge
out
xchg
fwait
mov
out
in
sbb
cmp
push
cmpsb
bound
mov
pushf
nop
in
sarb
std
je
mov
ljmp
fisubrs
xor
fistps
or
mov
movsl
cwtl
iret
mov
jbe
lret
jne
sub
imul
neg
movsb
jl
sub
imul
imul
push
outsb
repz
add
clc
fnstenv
mov
das
fdivrl
xorl
into
rcrb
and
cmp
dec
pusha
movsl
aam
lret
mov
pop
sub
aas
imulb
les
aam
gs
mov
pop
push
pop
jno
and
xor
push
lock
ss
mov
lods
loopne
aaa
adc
pop
and
jb
jle
inc
data16
sub
adc
je
mov
and
mov
in
loope
loop
int
testl
popa
fs
in
push
mov
in
pop
push
and
pusha
xchg
pusha
fwait
and
daa
test
sbb
push
ret
ret
cwtl
jnp
popa
or
xor
mov
inc
inc
jle
sub
mov
and
mov
push
insb
andb
mov
popf
add
mov
or
pusha
and
jo
and
ja
bound
mov
sub
jp
or
mov
int
scas
inc
jns
xchg
cwtl
dec
stos
insl
push
cmp
vminpd
lahf
test
xor
out
push
repz
ja
sub
dec
or
movsb
or
mov
mulb
fiaddl
push
test
mov
lea
pop
mov
dec
rorb
dec
sub
lcall
add
shl
mov
xor
xor
sbbl
or
mov
mov
or
xor
mov
subl
jmp
in
imul
pop
je
pop
mov
push
dec
je
inc
push
push
cmp
xor
mov
fiadds
inc
out
mov
adc
les
rcll
rcrl
mov
testl
dec
bswap
xchg
mov
pop
push
sti
jae
sbb
ss
push
inc
inc
mov
cmp
icebp
mov
test
lea
mov
notb
sbb
fwait
gs
add
call
and
lods
xchg
rorb
add
test
jle
lea
mov
push
stos
or
stos
lea
clc
xchg
cs
jo
cmp
jns
push
jle
fisubrl
or
jp
adc
cld
fsts
cmpsl
xor
outsl
testl
fisttpl
testb
mov
push
jo
mov
inc
aad
scas
add
jp
ljmp
sub
sub
fisttps
scas
negb
adc
xor
imul
out
mov
pop
lock
bsf
adc
pushf
into
jnp
lods
test
inc
cmp
imul
xchg
movsl
add
and
sub
adc
outsb
arpl
sbb
test
in
arpl
xchg
fbstp
xchg
enter
fsubr
insl
in
pop
mov
xor
jns
into
sbb
add
xchg
outsb
adc
mov
inc
push
mov
and
and
inc
mov
pusha
jbe
int3
and
push
inc
imul
jge
ja
pop
pop
jmp
inc
sub
jl
test
pop
mov
dec
in
or
movsb
out
mov
imul
cmpsb
push
pop
and
cmp
mov
jle
cmp
sahf
push
stc
xchg
xchg
push
lcall
jl
or
or
fs
fstpl
pushf
hlt
int3
or
inc
push
repnz
jbe
jno
lcall
pop
adcb
scas
shr
sbb
std
scas
jmp
cli
adc
xchg
push
je
jmp
mov
xor
push
cwtl
mov
sti
xchg
push
xchg
bound
mov
or
mov
pop
cltd
jg
repnz
shrb
mov
pop
cmp
scas
mov
jg
cmp
or
inc
pop
ljmp
daa
aam
mov
shlb
shl
cld
pusha
pusha
jne
jnp
sub
loopne
inc
jno
xlat
arpl
fistl
add
int
and
push
stos
jb
mov
pop
mov
js
and
add
movsb
flds
ror
pop
daa
mov
imul
insb
stc
pop
mov
call
mov
stos
sbb
mov
pop
xchg
pop
mov
popf
ret
and
fdivl
jp
inc
mov
mov
mov
ret
inc
sub
scas
fisubl
in
mov
add
bswap
and
pop
out
xchg
mov
les
adc
xor
push
jne
sub
sbb
inc
insl
jnp
pop
xchg
pop
ljmp
jp
mov
out
jnp
xor
notb
add
push
adc
ss
jle
or
in
push
imul
repnz
test
add
mov
adc
test
das
addr16
mov
and
std
ja
in
push
sub
outsb
mov
imul
je
sahf
adc
lahf
lcall
xchg
cmc
enter
ja
adc
mov
jle
jnp
movsl
fcomip
lods
in
cmpsb
xchg
dec
out
pop
lods
sarb
jb
sahf
sbb
mov
je
xchg
iret
aad
and
mov
loop
adc
repnz
mov
fxch
push
mov
pusha
jg
int3
mov
cmpsl
aas
jecxz
addr16
stos
mov
lcall
jbe
pop
inc
xchg
pop
arpl
jb
nop
cmpsl
xor
pop
lods
popf
int3
pop
std
repnz
xorl
push
ds
sti
insl
push
push
push
sub
sahf
and
pop
adc
jge
cmpsb
mov
js
adc
sbbl
xchg
sub
xchg
lret
mov
jns
pop
cmp
jge
ror
push
pop
sbb
pop
into
push
shr
flds
int3
pop
repz
pop
and
aas
fwait
jge
enter
ret
imul
dec
push
push
sub
push
ffreep
ja
pop
jle
out
test
outsb
push
xor
adc
push
fldl
pop
mov
cli
popa
push
push
fwait
xchg
xchg
inc
mov
xor
popf
rcr
idivl
jae
xor
loope
adc
repnz
data16
jmp
data16
jp
jbe
cmp
xor
and
pop
adc
inc
jge
pushf
xchg
sbb
add
xchg
es
sbb
out
xor
clc
mov
lods
mov
aaa
lds
fnstsw
mov
mov
pusha
popa
pop
pop
lcall
test
jns
bound
add
mov
dec
in
or
shrd
xor
shr
addl
mov
xor
mov
xorl
xor
shl
sbb
xor
cmpl
mov
movl
mov
jmp
movl
jne
pushl
pushl
pushl
call
xor
add
and
mov
sub
add
xor
mov
or
adc
adcl
or
cmpl
movl
mov
jmp
movl
movl
je
pushl
pushl
push
pushl
call
sbbl
subl
add
sub
and
cmpl
movl
movzbl
mov
jmp
mov
movl
jge
pushl
pushl
call
xor
sbb
mov
mov
sub
sub
movzbl
or
mov
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
add
inc
and
push
loop
scas
aas
push
push
cmp
inc
xchg
adc
mov
js
dec
scas
sbb
icebp
and
les
roll
add
inc
test
dec
or
int
ljmp
test
loope
xchg
fisttpl
sbb
mov
sti
inc
cltd
sbb
clc
orb
divl
mov
aad
xor
lds
jle
jle
fldenv
stc
das
pop
xlat
lret
shrl
inc
push
adc
pop
outsb
imul
jnp
int
fisttpl
repz
xor
xchg
lret
mov
sub
hlt
sbb
cmp
fidivrl
mov
push
gs
loopne
inc
fdecstp
je
xchg
insl
and
lds
lret
cmc
sub
cltd
sub
xor
mov
mov
call
stc
mov
pop
inc
test
push
lock
inc
mov
or
push
in
or
das
cmc
mov
jae
pop
sti
mov
les
gs
fiaddl
dec
fstpt
mov
cwtl
push
jmp
ja
cs
lds
dec
xchg
sbbb
in
loopne
into
mov
hlt
mov
push
sti
mov
xchg
lods
pop
jno
mov
xchg
arpl
cmc
loop
aas
imulb
data16
inc
shl
push
mov
insb
jecxz
push
test
scas
jmp
ja
sbb
add
fs
sbb
out
xchg
push
cmp
stos
jns
mov
inc
push
mov
inc
xchg
out
mov
adc
popf
add
enter
shll
lcall
xchg
cmp
xchg
xor
xlat
lret
or
mov
loopne
dec
aaa
inc
in
mov
mov
mov
cmpsb
mov
inc
pop
icebp
testb
ret
push
cld
jae
or
mov
mov
push
movsb
or
or
push
push
dec
lea
inc
in
mov
insl
and
lds
mov
mov
psrlq
inc
pop
dec
adc
ljmp
sbb
mov
cwtl
push
dec
roll
dec
mov
mov
mov
inc
xor
dec
loope
fadds
lret
incl
cli
pushf
rcrb
stos
imul
push
shrb
pop
mov
insl
mov
cmp
les
pop
inc
sbb
testl
lea
test
xchg
stos
jne
adcb
mov
scas
mov
sbb
cmp
scas
nop
sbb
cmp
xchg
and
jbe
stos
xchg
movsl
xor
jno
mov
and
stc
or
and
lock
enter
fmulp
hlt
imul
mov
popa
out
dec
ret
test
dec
test
cmpsb
sbb
xchg
movsb
sbb
add
sbbb
ja
daa
sub
sub
mov
imul
call
in
sbb
jnp
cld
jae
xor
xchg
xor
adcb
loop
cmp
fldcw
mov
mov
fs
cmp
aaa
cmp
xchg
push
pop
into
mov
cld
xor
inc
fdivl
movq
jns
repz
int
stos
jecxz
fwait
aad
aaa
mov
test
stc
test
out
cmc
mov
in
shll
repz
call
dec
jno
out
dec
jae
jge
addl
push
push
dec
movsl
insb
inc
loope
loop
jb
dec
imul
scas
cmpsb
rdpmc
and
inc
fsubl
adc
sub
aas
add
push
mov
aam
test
mov
in
std
cli
push
test
pop
lahf
outsb
andb
pop
or
pop
jle
shll
jg
mov
clc
gs
cli
cmp
lds
push
push
aaa
and
fsts
subb
sbb
repz
cmp
jg
je
sti
imulb
ljmp
mov
leave
cmpsb
cltd
sub
xchg
xor
ss
pusha
test
pop
jmp
std
shlb
xchg
add
test
jbe
push
insb
cmp
push
dec
jecxz
xlat
inc
popa
dec
out
scas
mov
movaps
addr16
sbb
mov
or
shll
sbb
fcomi
out
push
rorl
mov
je
add
sub
add
adc
ficomps
ds
pop
pop
cmc
ror
into
imul
pop
cmp
inc
out
mov
orb
ja
push
outsl
xor
pop
jno
pop
jmp
outsl
call
add
mov
xor
imul
jmp
outsb
daa
and
xchg
inc
mov
pop
pop
mov
std
hlt
sbb
add
aas
and
mov
call
mov
lret
sbb
dec
aaa
jecxz
pop
ss
bound
cmp
ret
mov
int
pop
in
and
mov
dec
mov
cmc
jae
adc
testb
loop
cmp
insb
shl
mov
jmp
out
inc
mov
push
sahf
pop
sub
xchg
cmp
fldl
mov
sti
push
sub
push
shrb
into
insl
add
inc
adc
dec
loopne
les
push
fwait
push
add
or
and
or
in
mov
cmp
and
pop
cwtl
add
inc
repnz
xorb
push
add
lods
cld
sbb
push
push
bound
je
cmp
sbbl
fs
fimull
data16
fstps
or
mov
loop
xchg
sbb
pop
in
push
push
les
aad
mov
cmpsl
fcoml
outsb
or
aam
adc
pop
sub
rdmsr
push
pop
stos
cmpsl
or
lock
push
mov
xchg
mov
dec
in
cltd
mov
mov
movsb
dec
ret
loopne
test
rcll
push
xchg
stc
sub
pusha
call
arpl
fisubs
lods
rcrb
adc
jle
mov
test
and
xlat
mov
incl
pop
repz
mov
pop
fdivrp
por
mov
sub
jb
shlb
mov
stos
repnz
xchg
xor
push
lahf
xchg
cmc
pop
daa
js
icebp
xor
inc
mov
cmp
sub
add
inc
inc
addb
jl
add
cld
xor
dec
add
inc
jmp
insb
sbb
int3
mov
inc
sbb
cs
lods
mov
jmp
push
ret
lea
xlat
arpl
inc
insl
into
add
popf
adc
lods
stos
mov
xchg
jmp
dec
mov
rcl
fcmovnbe
addl
push
inc
in
add
jbe
mov
xor
out
adc
and
or
sbb
fisubs
inc
lods
jg
movsb
call
pop
pusha
and
outsl
data16
xchg
ss
daa
xchg
aad
popa
mov
jo
push
mov
ret
push
bound
inc
dec
mov
bound
fwait
mov
cli
das
jbe
mov
or
imul
cwtl
das
or
movsl
call
popf
popf
ja
push
lcall
inc
sarb
pusha
lcall
outsl
mov
push
sahf
pop
mov
fists
xor
or
lahf
test
cltd
stos
dec
mov
outsb
and
jb
xchg
mov
sbb
shr
sti
push
lds
je
sub
sub
mov
les
add
jne
enter
sbb
fidivl
leave
jl
push
push
push
mov
pop
mov
push
lcall
push
adc
push
clc
jne
or
test
mov
dec
add
repz
mov
xchg
pop
scas
push
mov
push
cmc
fdivrl
mov
notl
dec
stc
ret
aas
jbe
push
add
mov
xchg
fisttps
xchg
inc
xor
cmp
cmp
jecxz
xchg
dec
and
clc
or
repnz
pop
sti
lret
cli
or
clc
pop
rcl
and
push
pextrw
xchg
cwtl
stos
pop
and
mov
mov
push
cmp
scas
sti
out
push
pop
rorb
lock
push
xor
add
inc
loop
cmp
hlt
aad
rorl
imul
es
sahf
fstp
aam
cmp
push
rcrb
jno
jl
or
insb
mov
pop
fwait
ss
push
subb
mov
cli
inc
adc
mov
imul
popa
mov
cmpsb
pop
ret
fldcw
sub
mov
mov
out
sbb
test
lods
lds
dec
jl
out
jl
mov
sbb
mov
cmp
fisttps
mov
and
push
add
mov
dec
cmc
inc
mov
in
push
cmp
cmp
sar
and
testb
inc
in
jae
inc
xchg
add
test
lret
cmp
imull
test
xchg
pop
xchg
lret
nop
bound
cwtl
mov
sarb
mov
out
movsb
aas
inc
mov
mov
sub
int
test
cmp
lret
sbb
xor
dec
ret
cli
cmp
mov
sub
dec
cmpsl
cmp
fcom
loopne
mov
es
daa
sub
outsl
in
inc
sets
fidivrs
jecxz
inc
mov
ficoms
mov
dec
dec
dec
das
mov
or
mov
cmpsl
cmp
lret
in
adc
pop
mov
and
aad
jmp
out
jne
mov
jnp
push
push
pop
icebp
ss
fwait
add
mov
xor
fldenv
repnz
shrl
jns
xor
shll
adc
out
addl
out
testb
gs
xor
int
jbe
fcmovbe
push
mov
add
popf
jmp
pop
ljmp
je
push
adc
mov
mov
pusha
and
add
stos
dec
push
pop
jecxz
ret
pop
add
imul
jmp
cltd
xorb
xor
jmp
into
icebp
test
dec
push
mov
cmp
push
cmp
mov
adc
jp
cmp
dec
call
push
ficoms
pause
add
pop
pop
sub
mov
add
ucomiss
mov
cmp
adc
std
push
outsb
mov
jae
mov
imulb
or
jge,pt
loop
mov
push
push
into
int
ficoml
sti
es
mov
andb
or
cmp
mov
mov
test
cmc
mov
lahf
and
insl
sar
xchg
cltd
loop
inc
repz
test
adc
mov
push
insb
jge
repz
stc
lods
out
ds
inc
clc
xor
ss
fcompl
insb
push
mov
jo
fisttpll
shll
mov
push
and
jno
test
or
ss
in
xor
test
insl
inc
mov
fdivr
cmp
jae
call
add
shlb
sub
or
insb
popa
inc
mov
sbb
mov
fidivs
jp
mov
cmp
and
jge
pop
adc
add
jnp
jecxz
insb
clc
mov
pusha
or
cmp
add
or
rep
je
mov
push
insb
mov
jle
ret
mov
dec
xor
rcll
inc
insb
or
pop
xchg
cli
sbb
fcmovnu
inc
jmp
roll
je
adc
addr16
faddl
or
int
or
dec
ja
jmp
xor
pop
mov
push
scas
or
mov
jle
or
mov
xchg
or
cs
mov
cmc
imul
lcall
xor
xchg
or
xchg
xchg
or
shll
dec
mov
rcll
xor
mov
pop
sbb
lret
xlat
jb,pt
stos
jmp
xor
repz
ljmp
int
mov
xorl
insl
sub
pusha
jecxz
hlt
inc
rcr
lahf
cmp
cmpsb
push
cmpsb
xlat
add
or
in
mov
jns
mov
les
ret
mov
fmull
pop
cmp
loope
push
out
add
lea
mov
push
mov
icebp
and
enter
xchg
test
outsl
jp
mov
test
aam
mov
hlt
icebp
sbb
cli
mov
xor
out
jmp
inc
adc
push
cmp
test
and
lods
xor
test
and
lock
push
mov
in
inc
add
xor
adc
pop
adc
sbb
mov
cmc
lret
repnz
cli
imul
sar
lea
mov
fwait
call
bound
fwait
cwtl
mov
bound
sahf
xchg
popa
sbb
cmp
dec
int
inc
inc
stc
lods
lahf
push
push
sub
sub
sarl
outsl
je
jnp
xor
adc
stos
imul
clc
aaa
cltd
push
jbe
dec
jne
sti
and
into
inc
jo
stc
xor
sbb
mov
mulb
movsb
popa
or
jbe
adc
xchg
iret
ss
pusha
inc
ret
cmpsb
jo
sub
rclb
pushf
mov
and
push
add
repz
ds
cmp
or
imul
xchg
mov
mov
lods
and
bound
xchg
adc
es
push
and
adc
ret
scas
push
loopne
push
add
cmp
int3
pop
jo
loop
je
sub
or
push
cld
xor
mov
mov
popa
insb
mov
mov
stos
dec
popf
in
aaa
sbb
daa
outsl
cmpsb
pusha
cmp
mov
lods
setb
subl
push
imul
aad
and
int
ret
arpl
sub
mov
xchg
std
dec
xor
int
cmpsl
dec
xchg
xchg
fdivp
popf
aaa
cs
cld
les
imul
test
sbb
int
insb
test
das
sub
out
adc
data16
push
mov
mov
jmp
xchg
mov
cmp
cld
iret
mov
test
jl
jle
mov
jmp
jmp
repz
inc
inc
or
cmp
xor
jae
not
jmp
pop
and
in
dec
ret
jno
pushf
fsubrs
add
ljmp
dec
sbb
adc
nop
or
push
aam
jb
mov
cmp
js
outsl
das
add
pop
and
lods
andb
insb
dec
je
dec
push
lret
dec
jne
mov
jo
adc
sub
lret
pushf
in
loop
fld
jmp
push
mov
out
cli
pop
push
and
bound
pop
push
xor
pop
xchg
mov
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
sbb
push
sbb
mov
adc
jb
pop
push
push
cmp
cmp
ret
dec
pop
cmpsl
or
inc
outsb
icebp
sub
test
adc
scas
push
mov
sub
imul
inc
mov
jecxz
jle
ljmp
xor
xlat
iret
out
sbb
insb
cwtl
repnz
mov
and
cmp
cmp
dec
adc
adc
jl
sbb
mov
and
test
xlat
jl
hlt
push
mov
in
shl
sub
add
ret
fisubl
movsl
icebp
imul
jnp
enter
insb
jbe
ret
mov
mov
jno
push
mov
mov
pop
data16
pusha
in
je
sbb
movsb
or
das
loope
inc
push
sbb
dec
jb
lret
cltd
loop
mov
pop
sbb
sarl
or
mov
adc
dec
xor
cmp
rorl
sbb
lret
rcrl
pop
dec
cmp
xchg
pushl
aam
fcomip
pop
xor
dec
fsubr
inc
ret
push
cmc
sub
cmp
cmpsl
xchg
faddl
idivb
daa
mov
icebp
ds
mov
mov
pop
inc
add
jle
mov
pop
shll
icebp
movsl
test
mov
lcall
and
or
insb
jb
sbb
les
inc
pop
ljmp
fists
add
sub
imul
xchg
popf
int
out
sub
adc
and
jbe
test
sti
adc
ficoms
inc
mov
push
in
cltd
push
mov
mov
push
gs
xchg
rcll
pop
sbb
pop
ds
dec
or
rcrl
daa
pop
repz
lods
push
mov
dec
mov
adc
and
ds
sub
mov
ja
mov
sbb
jmp
and
jle
adc
ljmp
adc
xchg
cld
and
xchg
add
mov
scas
daa
pop
add
sub
inc
cld
sub
dec
bound
push
insl
sarl
imul
xor
mov
ja
pop
push
xor
jns
and
sbb
pusha
sbb
sub
sub
stc
stc
mov
mov
sti
loopw
cmp
lds
sub
stc
lds
gs
das
lret
gs
sbb
pop
rcll
mov
loope
xchg
mov
and
popf
imul
push
fstpl
mov
mov
adc
cli
or
adc
nop
dec
in
push
pop
xor
jnp
fidivl
movsl
add
add
mov
shlb
movsl
fprem1
hlt
dec
and
adcl
xor
int3
pop
mov
js
mov
or
fwait
mov
movsb
push
cmp
mov
addr16
das
jnp
cmp
mov
stos
push
push
fstp
aaa
ret
cs
jne
imul
lock
pop
test
add
not
jecxz
cmpsb
dec
mov
leave
out
les
inc
popaw
popf
in
fs
xor
out
imul
xchg
pop
ja
fwait
es
cmpsb
pop
push
push
repnz
imul
int3
repz
mov
movsb
rolb
add
add
add
mov
outsb
ljmp
xchg
cmpb
jmp
movsb
jb
cmp
push
add
mov
shlb
ffree
xchg
cmpsl
repnz
jle
into
repz
pop
movsb
mov
xchg
rolb
jns
lret
and
dec
test
lods
mov
aas
ljmp
in
ljmp
push
enter
inc
dec
icebp
aam
cmpsl
enter
lea
and
dec
xchg
dec
pop
and
dec
imul
cwtl
jns
sarl
mov
inc
lahf
jp
scas
imul
adc
push
shlb
push
inc
jl
add
xchg
mov
add
leave
arpl
mov
insl
xlat
dec
or
rcll
scas
pop
call
icebp
addr16
imul
inc
xchg
cli
xor
clc
lret
sti
pop
rcll
pop
popa
jb
inc
cltd
sub
insl
das
sub
jno
shrb
data16
mov
aaa
lods
imul
ss
jp
mov
pop
out
push
imul
pop
push
adcl
repnz
adc
mov
ss
xchg
test
jbe
or
mov
es
movsb
push
mov
aaa
push
outsb
imul
dec
fwait
in
loope
or
push
dec
aaa
pop
loop
dec
or
test
jg
mov
out
xchg
fisttpl
shll
push
repnz
imul
fwait
ret
loopne
rcll
push
fldenv
xor
in
notb
or
insb
movsl
mov
dec
movsl
neg
and
cmp
adc
outsb
mov
pop
int3
repnz
leave
or
ret
adc
cld
jae
into
add
jge
push
jno
sahf
pop
fisttps
or
jmp
push
hlt
xor
shl
mov
xor
or
mov
mov
jmp
inc
dec
aad
fcoms
inc
loop
ds
or
cmp
nop
mov
scas
popf
inc
arpl
jmp
push
pop
and
test
ljmp
mov
cli
mov
pop
mov
sub
call
iret
lods
dec
nop
mov
test
pop
xchg
pop
and
sub
adc
sbb
push
mov
ret
mov
cs
add
pop
jb
lds
jl
cmp
adc
dec
add
sbb
dec
sbb
push
cmpb
pop
xchg
jle
stos
or
and
mov
push
popa
or
pushf
prefetcht0
mov
jl
push
in
and
dec
sub
inc
insl
cmc
dec
sahf
int3
jmp
stos
cmp
pop
pop
mov
js
ficoml
xchg
aam
js
push
adcl
pop
cmp
mov
inc
xchg
mov
lock
dec
jae
mov
mov
xchg
push
in
mov
or
jmp
rolb
imul
dec
lcall
adc
pop
sbb
ss
cli
xchg
mov
shll
xor
das
cltd
mov
mov
jo
gs
xchg
fmull
ljmp
iret
add
push
and
lods
jae
addr16
jmp
mov
inc
cmpsl
gs
add
in
mov
pop
or
mov
jb
ret
test
shl
nop
addr16
hlt
pushf
aaa
mov
incb
loope
sub
lea
add
repnz
jnp
mov
popf
sub
fmuls
pusha
xchg
pop
sub
or
xlat
xor
pop
sub
xchg
adc
les
cmp
lret
jns
test
sbb
out
and
sti
add
rclb
cld
mov
je
outsl
loop
mov
xor
push
dec
iret
jae
push
rcr
test
inc
or
rorb
jnp
movsb
lret
xor
imul
xchg
mov
loope
fldcw
or
lock
inc
aaa
js
and
nop
jne
and
dec
addb
add
lcall
mov
and
jmp
pop
xchg
xchg
jno
das
cwtl
and
movsl
adc
les
mull
cmpsb
push
add
and
outsl
or
enter
adc
into
out
sbb
xorl
fidivrl
fs
inc
stos
roll
push
and
fwait
in
mov
std
stos
into
popa
loop
aad
push
pop
xchg
call
jb
mov
push
push
sarb
nop
pop
fnstcw
push
ret
push
fisubrs
mov
and
fwait
push
mov
stc
mov
mov
out
mov
decl
iret
mov
jae
mov
xchg
int
jb
sub
pop
xor
cmp
and
sub
out
xchg
ljmp
mov
adc
and
lea
xchg
mov
xor
cmp
push
addr16
ja
out
add
scas
or
out
xlat
mov
shl
jno
xlat
mov
mov
pop
lret
ss
cwtl
pop
movsl
mov
sbb
lods
xchg
jno
js
push
insb
sbb
cmp
pop
and
das
icebp
in
fidivs
push
stos
mov
fldt
sub
add
inc
js
outsb
sahf
arpl
mov
lods
sub
loope
cmp
cs
pop
shl
or
mov
and
cs
sub
jb
jle
dec
hlt
push
mov
and
lds
add
jnp
push
and
outsb
push
int3
xor
xor
jge
and
mov
jmp
jb
mov
adc
repz
nop
mov
xchg
cmp
cmp
lahf
bnd
push
inc
das
mov
jmp
div
mov
cmp
movsb
and
mov
add
sbb
psubw
les
adc
push
push
adc
mov
mov
leave
and
lret
pop
repnz
dec
mov
inc
int3
ret
jbe
mov
iret
movsl
fldt
popf
cmp
mov
or
push
jl
imul
sub
test
push
lcall
jns
push
addr16
mull
inc
daa
xchg
jns
ja
push
add
xor
mov
mov
mov
ss
cmp
and
mov
out
lcall
outsb
addr16
rclb
repnz
push
push
pushf
jne
int3
inc
push
push
scas
cmpsl
stos
dec
adc
leave
arpl
mov
in
loop
stos
mov
cmpsw
lret
mov
enter
jnp
dec
pushf
adc
bound
mov
and
and
mov
lcallw
aaa
shr
in
lds
and
ret
mov
lods
xor
jp
mov
loope
xor
xor
jae
inc
sbb
or
movsb
shrd
shr
mov
mov
jmp
dec
adc
adc
xchg
inc
mov
mov
push
push
cmp
aaa
mul
push
movsb
cwtl
ret
enter
adcb
dec
insb
subb
imul
add
mov
mov
lds
sbb
popf
loop
lods
sbbb
pop
mov
mov
or
out
mov
adc
enter
xchg
push
aam
frstor
rcrb
loopne
jae
mov
sbb
push
and
shrl
lret
sti
arpl
out
pushf
jnp
iret
jmp
ljmp
pop
pop
xchg
cmpl
fcmovnu
fdivr
mov
loop
movsb
mov
je
mov
shll
xor
xchg
gs
lds
cmpsb
xchg
adc
xchg
out
mov
jae
jns
addl
out
fwait
adc
sti
pop
sahf
or
mov
jp
js
in
mov
repnz
loope
rolb
sbb
mov
fldcw
dec
jne
popa
aam
in
pusha
in
repnz
enter
push
cmpsb
cmpsb
xor
cmp
cmpsb
ficoms
idivl
jmp
pusha
rcrl
push
jnp
stos
sti
aas
push
aam
pop
ret
fs
mov
out
mov
adc
fbld
push
mov
cs
sbbb
mov
stos
xor
mov
movsb
std
sbb
mov
testl
or
pop
lret
mov
out
in
push
bound
mov
push
dec
outsb
push
jle
mov
andl
push
push
in
dec
mov
shl
fstpl
push
sub
adc
enter
push
sbb
test
mov
or
add
cmp
lods
int3
fs
push
daa
pop
cmp
gs
pusha
dec
movsb
sbb
ss
inc
sahf
call
mov
aas
push
mov
mov
mov
aad
and
ret
mov
pop
out
and
aam
sbb
push
int
ss
push
jmp
pop
int3
test
xor
out
imul
shrb
inc
dec
sub
xlat
js
cmp
and
mov
xor
push
jne
sbb
sbbl
jb
je
ret
inc
loop
xor
and
jge
mov
pop
in
pop
xchg
mov
ljmp
rcr
dec
jl
loop
mov
xlat
inc
rcrb
push
dec
inc
ss
push
mov
stos
xlat
adc
cmp
mov
shr
pusha
pop
mov
cmpsl
adc
add
das
leave
cwtl
cmc
pop
sbb
mov
mov
out
mov
out
test
jae
xlat
dec
scas
cmp
cmp
std
test
fimull
and
jno
lock
xchg
cld
mov
outsb
addr16
int
sub
push
pop
ds
sub
mov
add
mov
push
and
cmpsl
add
xor
std
ja
daa
out
test
repnz
mov
fisubl
js
int
cmc
loopne
sti
nop
repnz
sarb
inc
loope
arpl
fwait
gs
mov
jp
loope
cli
xchg
jne
loope
add
jle
push
inc
push
ret
or
out
outsb
nop
mov
fcomip
je
ret
xor
sbb
inc
push
inc
push
lahf
adc
popa
sti
int3
sti
jmp
mov
dec
lods
jne
add
outsb
adc
cmp
inc
mov
or
out
lret
pop
xor
out
std
lcall
mov
mov
jns
push
jno
inc
push
test
xlat
jno
loope
xor
rorl
divl
or
pop
push
jno
adc
cmpsb
pop
xchg
ror
jge
and
xlat
push
dec
xor
popf
mov
ror
jecxz
adc
subl
test
sbb
xor
movsb
sub
fstps
test
shlb
cmpsb
and
pop
movzbl
mov
fsts
call
push
aad
in
xchg
mov
sbb
xchg
scas
mov
push
repz
mov
lret
shrl
mov
cmpsb
cwtl
shll
loope
adc
icebp
aaa
imul
push
les
pusha
xor
addr16
pop
jle
hlt
cmp
pop
movsl
shlb
dec
jnp
adc
lret
cmp
or
cmp
push
cld
sbb
int3
faddl
imul
push
das
push
fxch
filds
jb
xchg
insb
shrl
lcall
jnp
dec
test
insb
stos
dec
mov
cmpsl
leave
lea
push
xchg
adc
in
jno
repnz
cld
into
inc
xchg
out
adc
or
pop
addr16
mov
xchg
adc
nop
inc
add
jns
mov
in
inc
inc
ret
pop
daa
inc
nop
lcall
mov
sti
mov
xlat
jg
sti
shr
popa
cmc
mov
xor
xor
or
lea
jmp
dec
outsl
cltd
js
cmp
mov
mov
xchg
js
mov
call
push
cmp
je
repnz
arpl
mov
lcall
rep
dec
cmc
sub
ffreep
loope
jb
mov
lock
xor
out
rorl
stos
adc
cld
jo
jmp
mov
jb
cmp
xchg
out
cmp
jnp
jne
shlb
gs
idivb
pop
imul
add
cmp
mov
loopne
pushf
int3
lods
xchg
jecxz
call
push
mov
fdivrl
aas
and
xor
pushf
clc
leave
xor
ljmp
movsb
jg
insl
xchg
and
in
sti
cmp
insl
cli
imul
mov
xchg
addl
xor
es
pop
inc
mov
rcl
iret
sbb
stos
test
cwtl
pop
clc
cli
js
jge
mov
rol
xor
addr16
stos
mov
lcall
stos
aad
into
leave
inc
push
iret
mov
lods
push
mov
jp
sbb
jmp
jecxz
pop
cwtl
out
popa
adc
lea
lcall
fldcw
cmp
pop
call
adc
adc
mov
mov
mov
jb
fcomip
inc
sub
jl
adc
mov
cs
cvtps2pi
or
lods
fwait
pop
pop
jnp
mov
jnp
jp
stos
cld
mov
mov
lret
bound
mov
movsb
mov
pop
sbb
xchg
sbb
dec
dec
movsl
fldenv
sbb
or
subl
in
inc
and
pop
sti
cwtl
dec
mov
sahf
adc
pop
testl
ror
pushf
orl
cltd
and
jmp
icebp
mov
jp
jno
and
or
push
pop
sbbb
repnz
cwtl
xchg
outsb
in
xchg
sti
les
in
outsb
lods
or
out
cmp
mov
pop
aad
sub
les
xchg
push
aas
mov
push
int
fs
jae
jb
mov
push
rcrl
repnz
es
xchg
add
inc
or
ret
call
shll
pop
out
inc
leave
pop
adc
sub
ds
lret
into
rclb
pusha
ss
xchg
cld
addl
mov
test
aas
dec
fldt
xor
lret
xor
daa
and
jecxz
push
imul
jmp
pop
lock
nop
addr16
xor
sbb
out
dec
je
inc
daa
cmp
pop
pusha
mov
inc
lds
cmp
jae
or
adc
iret
add
dec
xor
mov
scas
rcrl
es
popa
adc
out
sbb
or
in
cmp
inc
movsl
cmpsb
mov
out
jbe
aad
xor
call
out
mov
movdqu
xor
in
out
xchg
addr16
push
popf
lock
cmpsb
xchg
xchg
icebp
cmp
sbb
nop
pop
pop
cmc
jae
and
fwait
mov
ret
stc
insb
insb
call
add
pop
stos
xchg
cltd
aas
xchg
xchg
push
cmp
out
lea
dec
ret
mov
lods
adcl
push
mov
push
adc
mov
push
lret
ret
sub
add
mov
mov
andb
rep
enter
dec
pop
test
pop
push
insl
popf
out
pusha
or
iret
jmp
dec
leave
pop
mov
xchg
add
insl
ds
call
bound
pop
cmp
mov
jnp
dec
repnz
popf
adc
mov
jmp
outsl
sbb
fwait
out
subl
ljmp
jb
mov
jne
imul
pushf
std
rclb
aad
repz
cmp
cld
xchg
push
mov
or
xchg
lret
loope
mov
push
fnsave
jno
dec
mov
ret
enter
repnz
in
loopne
push
lods
leave
sbb
xor
and
icebp
insb
sub
mov
jbe
mov
sbb
stos
pusha
mov
test
mov
push
adc
push
imul
mov
sahf
cmpl
jbe,pt
in
in
fdivrl
push
divb
insl
mov
mov
cmpsl
int3
or
and
mov
cs
sub
jecxz
fcom
in
aam
subl
lahf
andl
push
out
out
add
mov
loope
xchg
xchg
and
call
stos
add
push
mov
add
adc
xor
sbb
gs
je
loop
push
mov
jecxz
lea
int
sbb
scas
iret
mov
cltd
cmp
dec
adc
and
push
fisubrs
push
in
adc
lahf
scas
adc
jb
jmp
inc
int
sbb
mov
mov
shl
mov
jmp
lret
movsb
cli
jo
sbb
and
insb
mov
inc
mov
push
push
cmp
mov
and
rorb
clc
xchg
call
adc
dec
js
gs
jge
jmp
adc
pop
jne
mov
lds
inc
fwait
mov
in
jo
fisttpll
mov
push
and
cmp
mov
cmc
mov
pop
sbb
mov
shll
arpl
popf
cmp
shlb
xchg
mov
leave
ret
shll
push
xchg
cs
rorl
pop
hlt
sub
mov
pushf
call
sub
imul
das
add
in
jge
mov
inc
jno
into
stc
mov
bound
adc
fwait
sub
das
mov
xchg
mov
xchg
rcll
inc
mov
jmp
jno
out
and
mov
in
push
mov
fldenv
mov
lcall
repz
and
pusha
sub
lds
dec
test
test
clc
and
cmp
aam
out
push
bnd
pop
pop
fwait
and
and
popa
jmp
int
pop
sarw
ret
jo
mov
mov
mov
or
into
shl
imul
jne
vmwrite
aad
sbb
and
mov
call
adc
add
cmp
test
mov
rorl
sub
jmp
int
rcll
inc
add
fs
or
pop
stc
adc
arpl
mull
call
wbinvd
jns
push
icebp
aas
jp
inc
imull
jle
mov
mov
sbb
faddl
divb
sbb
and
inc
in
leave
mov
mov
and
sub
mov
ja
and
mov
mov
repnz
dec
js
mov
mov
pop
xchg
adc
clc
dec
jp
mov
push
sub
adc
inc
jl
sbb
test
flds
stc
xchg
pop
push
add
inc
dec
out
sarl
add
add
scas
mov
pusha
and
test
mov
loop
sbb
loope
xor
fwait
bound
sbb
dec
mov
cmp
pop
jl
repnz
mov
xor
pop
sub
sbb
or
push
add
cmpsl
push
addr16
mov
push
loop
add
das
push
mov
in
int3
pop
jbe,pt
imul
mov
cmp
xor
in
and
xchg
and
adc
jns
iret
bound
dec
iret
jl
dec
cltd
jmp
xor
xchg
or
arpl
xchg
xor
out
adc
loopne
daa
mov
pusha
stc
scas
sub
dec
imul
sbb
and
inc
stos
out
add
test
sbb
add
and
lods
sub
inc
sub
in
movsb
xchg
notl
aam
orb
pop
mov
fucomi
daa
sbb
loopne
hlt
in
push
and
int3
and
push
inc
lahf
mov
cmp
push
xchg
inc
call
fsubrp
xor
popa
inc
or
mov
popf
shll
fimull
outsl
push
xchg
nop
repnz
repz
adc
int3
mov
inc
sub
add
sbbb
xor
xor
sub
adc
pop
sti
in
mov
inc
inc
and
mov
sarb
mov
in
sti
jecxz
les
jae
push
add
or
mov
mov
sbb
dec
lock
movsb
inc
adc
mov
dec
arpl
sub
aaa
mov
inc
pop
pop
pop
arpl
hlt
in
cwtl
cmp
ret
push
rcrb
sub
scas
fs
lret
ftst
sahf
or
add
pop
jmp
lahf
pop
lds
mov
xchg
das
int
jl
mov
pop
jp
cmp
pop
roll
lret
scas
aaa
mov
add
fiaddl
out
push
add
bsr
cltd
dec
mov
push
repz
out
jecxz
add
addl
sbb
in
data16
call
and
jl
inc
adc
xchg
outsl
es
ret
pop
imul
xor
jo
clc
bnd
ljmp
pushf
std
jp
or
xor
imul
pop
pusha
jns
xchg
xchg
subb
mov
pusha
push
add
test
and
shl
mov
mov
int
mov
es
clc
jb
bound
push
dec
jl
jno
leave
mov
push
fisttps
test
aad
ss
sbb
push
fstps
jp,pt
push
mov
scas
xchg
lea
out
ficompl
fdivrl
andl
ja
xor
addb
dec
ds
enter
push
imul
mov
test
xor
lods
enter
add
add
orb
js
xor
outsb
sahf
mov
push
cmp
pop
pusha
adc
xchg
aam
les
push
mov
incb
sbb
popa
mov
xlat
pop
lret
arpl
popa
shrb
mov
mov
and
call
scas
mov
adcl
in
xchg
iret
fdivs
xchg
pop
and
mov
cltd
je
push
push
negb
test
add
orb
sahf
loop
fwait
jnp
adc
sub
pop
pusha
aaa
int3
mov
jo
in
pop
inc
movsb
jmp
mov
sub
cld
test
pop
cmp
int3
push
jl
jae,pt
mov
sbb
mov
in
int
add
push
mov
mov
cmp
xor
aad
sbb
pop
pop
jmp
sti
fdivs
fucomp
jle
mov
xorl
rcll
adc
js
and
pop
xchg
test
jno
iret
in
mov
sub
xorb
pop
inc
cmp
jg
ds
das
sahf
mov
addb
dec
daa
scas
popl
xlat
pop
sub
fildll
sahf
stos
dec
prefetch
adc
xchg
shrb
xchg
repnz
xor
jb
ds
std
mov
jo
out
pop
add
sbb
lods
subb
and
and
adc
sbb
push
jo
push
lret
imul
pop
out
jb
sbb
and
jbe
or
add
pop
mov
negl
and
push
jo
js
into
cmp
aaa
insb
mov
push
test
mov
sub
test
scas
lock
and
dec
add
mov
cli
xor
mov
inc
into
dec
movsl
arpl
sahf
test
xchg
lea
lods
pop
test
adc
mov
ret
lea
push
mov
push
jnp
push
jle
or
stos
add
xor
rcll
and
cs
ret
imul
mov
pop
nop
push
sbb
jg
mov
adc
mov
faddp
loope
add
fsubrl
scas
scas
call
pop
cmp
enter
out
add
lahf
push
loope
mov
lea
and
sahf
adc
icebp
aam
xchg
push
and
repz
and
mov
cli
aas
dec
pop
jb
cmp
adc
fnsave
hlt
pop
movb
sbb
rcll
in
imul
pop
and
xchg
inc
movsl
and
mov
sbb
insl
in
push
shll
push
sbb
cmpsl
push
push
inc
dec
push
mov
jp
xchg
mov
dec
and
fs
scas
inc
and
out
in
inc
inc
or
data16
add
dec
in
or
xor
jecxz
pop
mov
repz
or
mov
mov
stc
cmpsb
cs
out
or
ljmp
nop
sbb
call
and
jecxz
in
mov
jg
inc
pop
in
pusha
lock
out
mov
sbb
sub
test
jge
pop
enter
xchg
sahf
sub
jb
push
les
sbb
lret
stc
xor
add
jnp
fimull
push
aas
jmp
jns
mov
push
dec
pop
jnp
fimull
sbb
rclb
add
push
pop
push
pop
cmpsl
sahf
inc
shlb
fists
xchg
jg
rorl
and
movl
sub
add
aam
in
adc
out
pop
pop
inc
sti
adc
pusha
inc
movsl
imul
lahf
dec
push
xchg
sub
xchg
mov
push
inc
jno
push
andb
or
lock
test
sbb
adc
inc
lock
shlb
mov
cmp
mov
mov
addr16
inc
mov
xchg
jnp
lock
dec
sbb
lds
aad
sub
insb
sbbl
loope
mov
aam
jnp
add
mov
xchg
push
movsl
ss
mov
int3
push
pop
pop
xorb
push
cs
dec
or
into
mov
sbb
mov
es
mov
cmp
sub
xchg
mov
jl
ljmp
xor
dec
jbe
pop
test
pop
mov
insl
cmpsl
sbb
aam
outsb
arpl
mov
cltd
mov
mov
cmp
mov
cs
jl
push
aaa
cli
inc
icebp
dec
fstps
cmp
add
gs
rcll
cmp
bound
pop
pop
jp
xchg
xchg
xor
negl
jmp
out
lds
cwtl
testb
inc
or
fadd
pop
shl
pop
sub
cmp
inc
jmp
fwait
sub
sarb
sub
and
or
push
push
jnp
movsb
out
clc
mov
call
into
out
in
push
mov
mov
mov
xor
xor
or
mov
shl
jmp
sbb
adc
aad
into
sti
mov
cmp
mov
ficoms
push
cmp
test
test
enter
test
push
cmpsl
ret
pop
out
scas
mov
adc
test
lret
sbb
nop
stc
pop
cmp
pushf
stos
aad
inc
mov
push
adc
push
imul
and
mov
cmp
loopne
aas
int
push
xor
push
push
outsl
add
stos
ret
and
mov
sbb
jne
outsb
jo
pop
mov
aaa
lret
mov
xor
and
std
jnp
mov
outsb
nop
into
dec
shll
mov
sub
pusha
xorl
addr16
mov
pop
or
rcrl
cli
shrl
lea
aad
mov
push
mov
jne
mov
cmp
xchg
sbb
mov
pop
and
movsb
add
sub
sub
push
ljmp
nop
sbb
mov
and
insl
pop
les
pop
test
and
bound
and
xor
lcall
fdivrs
fcoms
push
in
shr
leave
movsl
insb
loope
pop
lcall
mov
xorb
jmp
mov
cmp
jno
fwait
xor
jo
data16
out
jno
sbb
push
lret
addl
mov
pop
fs
int3
xor
push
cmpsb
adc
sub
jnp
aad
in
outsl
clc
or
sub
xchg
imul
lods
mov
jae
roll
orb
stos
push
fldt
push
sbb
andl
dec
jne
pusha
push
or
dec
mov
int
xor
or
or
js
das
pop
push
mov
enter
stos
subb
loopne
out
add
fidivs
subb
sbb
dec
pop
sub
vpunpckhdq
insb
or
sar
pop
jmp
jmp
ljmp
adc
jne
mov
lods
push
mov
cmp
pop
pop
jae
frndint
sbb
mov
jl
fcomp
adc
std
or
mov
fs
mov
mov
shrb
loope
mov
xor
test
mov
sub
mov
inc
rcll
test
notb
xor
fisttps
rcrl
add
jb
ret
sub
or
xchg
mov
xchg
xchg
xchg
jecxz
shll
and
out
xchg
mov
mull
cli
mov
mov
mov
cmpsb
mov
mov
cmp
ss
xor
aaa
test
xchg
xchg
sub
cmpsb
inc
xchg
add
push
jbe
push
pop
push
stc
xchg
jno
lods
std
add
outsb
clc
test
push
mov
pop
push
stos
insb
mov
xchg
inc
mov
jne
stc
dec
aaa
and
imul
jns
mov
sub
mov
mov
faddl
jg
dec
push
mov
mov
in
loop
mov
fiadds
test
imul
repnz
inc
addr16
movsb
and
or
in
nop
xor
add
pop
jnp
insl
cmp
les
daa
inc
andl
or
popf
or
mov
in
add
xchg
mov
std
pop
mov
inc
mov
add
and
and
shll
divl
mov
mov
cld
lret
cmp
sub
push
inc
cld
in
xor
jmp
int
mov
ds
sbb
jmp
popa
pop
jae
dec
jb
or
call
cmp
imul
xchg
js
cmpsb
pop
ss
pop
xor
push
or
rorb
xchg
or
int3
inc
int3
lods
in
xor
fmuls
jle
ds
leave
aas
dec
and
add
repz
mov
pop
add
adc
inc
sbb
or
fnsave
enter
fidivrl
xor
test
jg
out
jb,pn
dec
or
pop
push
xor
nop
xchg
jne
cs
mov
add
popa
mov
xchg
xchg
add
pop
fdivrs
shrb
loope
ret
mov
adc
mov
popa
lcall
sub
inc
mov
mov
push
cmpsb
ja
pop
push
add
hlt
in
out
add
mov
ret
jns
xchg
add
lahf
jo
rcrl
movsl
and
mov
aas
mov
inc
lret
cmp
xchg
icebp
pop
aad
sbb
addl
add
xchg
add
sahf
mov
pushl
fidivs
jo
add
icebp
adc
movsl
movsb
and
dec
pop
add
fwait
in
cmp
daa
out
icebp
lahf
pusha
bound
lods
add
cwtl
ss
mov
lahf
cmp
insb
cli
andb
dec
pop
nop
fdivrs
jge
lret
dec
pop
mov
mov
mov
or
mov
mov
jmp
and
sbb
in
and
push
jae
push
push
cmp
ds
adc
dec
cltd
insb
iret
cwtl
fsubrl
jp
sub
add
scas
mov
adc
mov
pop
imul
xor
fwait
jl
sti
fdivrl
add
rcrl
xor
mov
popa
push
add
sub
mov
mov
call
test
sbb
dec
loopne
enter
jno
cmc
xor
fs
test
push
push
out
sbb
out
xchg
push
pushl
jbe
xorl
lea
sub
xor
and
pop
pop
cmc
sbb
mov
inc
and
iret
dec
jno
mov
jg
jo
sahf
in
cmc
mov
mov
and
lods
jg
jge
out
cmp
push
xor
inc
xchg
stc
sbb
call
jno
in
std
in
push
jbe
dec
inc
sbb
cmp
movsl
sub
test
ljmp
pushf
and
xlat
out
cmp
sbb
or
lock
repz
pop
cmp
xchg
mov
pop
dec
add
cmovno
mov
push
and
fwait
xor
sbb
nop
mov
sub
add
sub
ficomps
xchg
and
mov
mov
push
and
fdiv
adc
arpl
xchg
mov
shlb
out
ret
movsb
xor
mov
stos
xor
shrl
push
xor
icebp
setb
test
mov
mov
shl
test
or
iret
mov
dec
dec
and
int3
incb
sub
mov
lods
iret
popa
out
fs
push
pop
lahf
add
into
bsf
out
cmp
pop
divl
mov
xchg
dec
xlat
xor
push
hlt
int
sbb
sbb
sbb
sub
inc
xchg
idivl
and
call
cmp
scas
dec
pop
mov
ljmp
bound
cmc
mov
sbb
cmp
pop
dec
loop
int3
iret
xchg
test
pop
outsb
pop
lods
out
pop
push
movsl
shrb
fwait
jle
pusha
cmp
stos
or
stos
imul
popf
xor
scas
dec
sub
push
mov
incb
adc
push
pop
push
movsb
or
push
in
mov
lds
in
add
fldln2
stos
sbb
xchg
negl
inc
aad
or
cmpl
pop
push
cmpsl
push
push
cli
mov
cwtl
ds
dec
inc
jb
jle
mov
out
pop
aaa
dec
ja
pop
mov
stos
mov
lahf
fnstsw
dec
mov
in
sub
pusha
or
stc
push
xor
bound
jae
sbb
sti
push
stos
outsb
pop
adc
lret
les
pop
cwtl
and
pop
jmp
pop
xor
je
push
jb
stc
adc
xor
and
mov
jne
add
cmpsl
cld
int3
xchg
in
cmc
add
ret
sub
push
adcb
pop
xchg
add
test
jl
loope
repz
aaa
cld
pop
out
adc
and
push
push
fsubl
popa
insl
pop
sahf
push
sub
jge
divb
sbb
cmp
pusha
into
or
and
mov
mov
testl
mov
pushf
aad
stos
mov
mov
adc
mov
pop
sbb
add
ret
add
shld
ljmp
arpl
and
mov
xchg
mov
mov
imul
in
pop
mov
bound
fists
push
lods
mov
arpl
fnsave
jae
jne
faddl
cmpb
push
rclb
cli
insl
int3
outsl
into
sub
out
pop
cmpsl
inc
mov
orl
out
cmp
xchg
cs
es
cld
add
stc
mov
pop
les
cmp
imul
lods
pop
mov
call
lret
popa
dec
adc
mov
adc
fdivrs
out
add
in
outsl
xorl
mov
and
jae
mov
int3
das
cmp
sbb
or
adc
shll
test
xlat
imul
cli
insb
mov
pop
dec
fwait
movsb
mov
mov
mov
xchg
rolb
movsl
les
or
push
cmc
xchg
xchg
mov
shl
mov
adc
dec
pop
mov
cld
pop
add
ss
push
fidivl
cwtl
dec
jbe
lds
adc
inc
or
fadd
or
jnp
mov
pop
icebp
xchg
out
jp
ja
adc
lods
cld
pusha
sbb
in
loopne
xchg
ss
das
testb
stos
xchg
cltd
dec
and
lahf
shlb
cmc
cmp
mov
xor
mov
or
enter
push
cld
push
imulb
push
pop
sbb
jecxz
pop
std
xchg
jge
outsl
popf
cltd
or
dec
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
lock
mov
enter
xchg
cld
mov
cmp
pushf
and
shll
push
in
mov
lods
in
stos
ret
loope
ficoms
leave
and
sub
dec
dec
and
rcr
adc
arpl
ds
popf
cwtl
inc
jnp
mov
test
adc
mov
roll
sub
or
nop
inc
xlat
test
aas
and
xor
es
lcall
lea
lret
mov
mov
xchg
inc
adc
xchg
out
arpl
popf
jo
cwtl
pop
test
xor
inc
mov
dec
or
or
jmp
in
scas
out
xchg
sbbl
cmpsb
mov
push
packsswb
iret
xchg
pop
xor
aam
ret
adc
inc
dec
add
inc
icebp
pop
pop
adc
xchg
pop
mov
arpl
cmp
adc
rorl
mov
or
adc
enter
ds
jo
jo
sti
mov
faddl
pushf
enter
push
jo
fcoml
mov
mov
dec
lcall
inc
xchg
xchg
sti
pop
and
xchg
stc
icebp
or
mov
cs
mov
pushf
or
sub
mov
enter
mov
or
mov
stos
rcrl
mov
adc
fwait
xchg
outsb
sbb
cld
sahf
fcoml
or
enter
out
and
inc
cwtl
fsubp
nop
nop
lods
cltd
sahf
mov
lea
jbe
sarb
fdivrs
int3
outsl
jle
pop
ficomps
shll
inc
jl
sub
pop
inc
dec
movsl
fdivs
arpl
adc
or
popf
mov
sbb
push
jg
repnz
xchg
pop
cs
add
adc
shlb
push
sbb
cwtl
std
insl
pop
cld
stos
sub
into
stos
aas
mov
or
push
stc
mov
inc
xchg
imul
arpl
dec
insb
and
je
lret
sbb
lahf
hlt
lcall
testl
xor
bound
jnp
sbb
popf
dec
pop
xchg
sarl
stc
push
leave
sub
mov
test
ljmp
pusha
loopne
xchg
ss
lods
aam
dec
call
dec
fimull
mov
data16
xor
push
cs
js
mov
fdiv
cltd
mov
fsubrl
and
aad
xchg
fs
das
js
sbbl
jno
lcall
mov
inc
out
lahf
iret
xor
mov
rolb
adc
rcrl
lcall
nop
es
addb
jg
loopne
xchg
cmp
fwait
sbb
cmpsl
cld
pop
arpl
cli
cltd
or
fldcw
mov
push
cmp
out
sub
xor
daa
cmp
hlt
scas
cmc
cltd
daa
int
sbb
or
test
cwtl
sub
movsl
jne
aam
jns
iret
and
add
pop
or
mov
sarl
das
xor
xchg
nop
jnp
and
push
inc
jle
dec
add
sbb
and
mov
push
push
xor
fisttpl
mov
movsb
xchg
mov
call
mov
fcompl
jp
lea
push
daa
add
cmp
mov
ret
push
imul
push
add
lods
fisubs
clc
mov
mov
inc
mov
dec
jno
add
push
inc
pop
add
out
cmp
sbbb
or
xchg
xchg
adc
fldenv
mov
jno
nop
outsl
mov
mov
stos
int3
cmpsl
lods
xor
pop
aas
adc
lock
inc
mov
lea
nop
sub
mov
mov
xor
push
js
insb
ret
aaa
mov
add
mov
fcomp
rorl
int3
outsl
mov
leave
in
adcb
xor
adc
xchg
push
cs
mov
gs
and
or
popf
xor
cwtl
sbb
add
cmp
jmp
xchg
clc
inc
in
fmuls
ljmp
inc
fs
leave
and
pop
cwtl
and
int3
and
pop
into
sub
arpl
iret
stos
popa
ss
hlt
push
loopne
inc
jmp
adc
int
scas
aam
add
mov
shlb
fstp
and
push
push
or
mov
xor
inc
roll
test
cmp
imul
mov
dec
sbb
and
lods
aam
adc
dec
add
xchg
pop
scas
pop
and
stos
xchg
js
aas
xchg
outsb
into
aam
push
sets
push
xchg
jl
pop
cs
cwtl
inc
add
imul
sbb
in
repz
dec
mov
fs
out
mov
shll
jl
stc
scas
fadds
mov
push
cli
jae
xchg
daa
push
mov
mov
dec
adc
pop
test
xchg
shlb
ret
mov
jmp
mov
sbb
cltd
cmovbe
sbb
xlat
mov
push
cmp
push
mov
and
faddl
cmp
ror
das
repz
or
mov
adc
mov
lahf
push
fildl
mov
mov
push
cltd
movsb
sbb
loope
pop
out
xor
adc
pop
sbb
movsb
imul
mov
mov
sbb
cmp
std
stc
adc
mov
fcmovb
pop
sbb
mov
sahf
int
jg
push
mov
cmp
pusha
inc
and
repnz
sub
jo
mov
jo
mov
xor
pushf
adc
mov
jg
mov
sub
sarb
fs
pop
add
lcall
sbbb
jae
dec
xchg
and
cmp
cwtl
mov
inc
and
insb
lret
cmp
inc
fcmove
mov
das
lods
mov
and
fsubl
subb
sti
mov
mov
sbb
stos
lock
or
add
shll
mov
iret
mov
add
ret
sub
adc
lret
add
push
or
shlb
inc
pop
and
or
xchg
and
push
hlt
pop
or
jne
xbegin
cmp
movsb
fs
lea
orl
mov
mov
add
repnz
pop
push
mov
pop
xchg
and
call
std
ljmp
jno
push
andl
fisubrs
push
push
out
mov
add
neg
sub
popf
sbb
stc
mov
lret
in
xor
movsb
ds
arpl
imul
xor
mov
testl
and
test
sub
xchg
imul
add
ret
orl
xchg
adc
xor
cmp
mov
repnz
cld
xchg
xchg
pop
sbb
mov
or
dec
lods
cmpl
sub
jmp
sbb
int
push
sbb
xchg
jbe
dec
js
int3
clc
inc
loop
adc
in
jae
xchg
and
repz
mov
push
rolb
push
cmpl
push
test
push
xchg
xor
pop
inc
bnd
inc
add
jmp
data16
sbb
std
aad
cmc
cmc
pop
stc
popf
xchg
js
push
imul
in
je
push
pop
mov
lock
mov
pop
loop
mov
scas
sarl
fwait
mul
xchg
inc
fidivrs
insl
gs
repnz
subb
lods
xchg
jecxz
stc
fildl
cltd
cmp
orb
mov
fmull
fildl
addr16
leave
and
adc
dec
icebp
jns
push
xor
and
pushf
lds
and
out
xchg
xchg
dec
xor
ds
lock
popa
xor
mov
mov
xchg
mov
xchg
pop
popl
adc
pop
pop
cmp
adc
in
sahf
test
mov
sub
arpl
jnp
xor
and
idivl
jmp
in
or
mov
pop
test
sbb
leave
scas
cmp
and
lahf
bound
jmp
sbb
xorl
mov
in
ret
les
lods
push
inc
mov
mov
fists
adc
out
lods
xchg
lahf
loopne
xor
out
sub
cmp
fucomip
mov
cli
rcrl
xchg
fbstp
movsl
flds
gs
jno
mov
xchg
jae
faddl
cs
insl
sub
in
inc
js
adc
xchg
sbb
or
rcrb
out
imul
ds
loope
jo
xor
push
push
fcomps
lahf
aad
dec
cld
dec
popa
lcall
push
repz
ret
enter
cli
push
mov
outsl
cld
das
add
insb
popa
inc
pop
xor
adc
in
jl
dec
xchg
bound
scas
insl
jns
xchg
inc
mov
xor
cmpsb
adc
shll
lcall
lock
jp
loope
test
mov
test
nop
xchg
sarl
insl
dec
popa
pop
out
xchg
cmpsb
and
add
and
scas
mov
imul
jo
cmp
andl
aad
nop
bound
inc
push
mov
rcrb
orl
int3
jmp
test
je
jbe
or
rclb
or
rolb
dec
pushf
roll
sub
addr16
fwait
in
inc
fisubs
std
pop
xor
pop
sahf
ret
ret
add
jg
rcrb
scas
lods
cmp
pusha
rcll
stos
sbb
in
std
dec
pop
sbb
stos
lahf
iret
jg
call
in
subb
imul
lret
neg
mov
xor
push
adc
test
cwtl
dec
push
dec
insb
and
xor
inc
cs
xor
cmp
insb
fnstsw
addr16
mov
mov
into
int
fwait
sar
mov
pop
cmp
iret
lret
jno
lahf
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
jmp
sbbl
das
je
mov
stos
push
push
cmp
out
xchg
out
push
dec
jmp
icebp
dec
int3
inc
push
pop
push
aaa
mov
xor
andb
dec
mov
fnstsw
imul
dec
movl
jmp
in
mov
fsts
ds
mov
push
imul
add
fstp
repz
dec
rcll
push
jp
xchg
std
sub
in
aaa
js
clc
xor
push
iret
mov
cmpsb
cmpsl
stos
mov
mov
es
pop
xor
inc
into
out
push
movzbl
push
adc
pop
lahf
jp
loop
pop
mov
jnp
mov
jmp
mov
push
rclb
dec
mov
flds
jg
mov
in
enter
lahf
xor
add
outsb
add
rorb
push
std
lahf
push
dec
test
inc
outsb
fs
ficompl
xchg
cltd
scas
popa
push
mov
shrl
sub
cmp
mov
lea
je
jnp
cmp
shll
mov
out
add
add
sub
or
icebp
movsl
lods
cmp
or
jbe
daa
cmp
pop
push
mov
push
test
jae
or
bnd
movsl
mov
lods
ret
cmp
fcomi
mov
lea
adc
jb
gs
out
lahf
cld
out
sbb
inc
or
jmp
mov
loop
jge
inc
test
imul
loope
push
mov
mov
dec
dec
mov
insl
dec
movb
ficompl
fstl
jae
and
xor
or
flds
rolb
xorl
mov
pusha
popf
or
fnstcw
std
insb
pop
adc
movsl
fisubrl
lahf
stos
sub
or
jb
push
gs
xchg
xchg
cmp
mov
test
push
sbb
je
push
jno
mov
mov
inc
jns
inc
pop
mov
lods
hlt
scas
test
add
or
frstor
pop
adc
dec
cwtl
sub
or
ret
mov
inc
ret
jnp
cmp
dec
push
mov
decb
ljmp
and
repz
int3
add
pop
jge
mov
clc
mov
ret
enter
xor
int
xchg
clc
sbb
dec
push
lahf
push
pop
sbb
pop
xchg
lret
push
inc
repnz
scas
in
fisttpll
cmp
out
out
sbb
or
rcrb
inc
les
in
rcr
cld
add
mov
aad
pop
icebp
xchg
faddl
lods
mov
test
xlat
mov
sbbl
inc
jge
xchg
jge
rclw
dec
cs
call
xor
cwtl
lcall
out
sub
in
pop
mov
cmp
sub
xor
push
cltd
push
dec
out
push
pop
dec
je
rorb
fbld
movsb
mov
dec
mov
clc
push
jne
push
xor
daa
inc
mov
xor
mov
insl
inc
inc
js
jne
fwait
dec
or
clc
mov
or
xor
dec
and
mov
or
lds
test
call
dec
iret
pop
sbb
shll
jecxz
js
inc
jle
xor
dec
repz
fdivr
imul
xlat
and
fldcw
out
xchg
cltd
bnd
push
mov
out
sub
xchg
icebp
lds
loop
test
test
push
jb
negl
jecxz
popa
sub
pop
xchg
ret
fbstp
movsl
jbe
outsb
nop
adcl
add
xor
add
jle
sub
mov
pop
mov
xlat
jecxz
call
jo
push
incb
std
lret
test
adc
ljmp
in
sti
mov
mov
sbb
mov
push
call
ds
adc
sarb
or
jmp
sub
xor
mov
in
mov
ljmp
sub
insb
loope
mov
std
fmuls
xor
jae
mov
jnp
push
dec
jmp
cld
in
sarl
cmp
jg
imul
add
out
out
adcb
aas
inc
sub
push
out
faddl
iret
loop
cmp
test
jae
rorl
and
sub
mov
jne
lds
pop
or
pop
out
jmp
movsl
nop
or
repz
push
mov
scas
or
nopl
and
icebp
adc
mov
push
lret
pop
or
fsin
pop
or
sub
stos
mov
bound
pop
mov
popf
jl
mov
ja
loopne
loope
adc
sbb
out
pop
cmpl
cmp
pop
mov
push
and
xchg
cltd
dec
adc
into
call
cmpsb
lods
adc
inc
pop
or
sbb
sub
jecxz
out
cmp
test
addr16
mov
sub
add
xor
loopne
push
mov
rol
loopne
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
jmp
push
cli
test
fs
pop
jb
shrl
sub
push
push
pusha
push
sbb
mov
lds
aam
and
into
movl
xchg
aad
inc
sbb
fcoml
ret
jecxz
sbb
sbb
shrb
jge
fstps
ret
js
add
jns
imul
push
inc
push
enter
orb
dec
and
ja
ret
pop
sbb
aam
scas
std
repz
jl
outsl
xchg
xor
cs
lods
mov
mov
inc
inc
ficompl
fsubr
pushf
and
pop
jnp
js
cltd
fmull
outsl
mov
jo
arpl
lcall
mov
icebp
lods
mov
movsb
out
jmp
lea
mov
stos
mov
fisttpll
adc
movsl
aad
jb
mov
jo
sbb
loope
sbb
jmp
cmp
test
sbb
inc
or
mov
sub
inc
aam
jge
mov
xorl
inc
push
imul
mov
jo
mov
push
dec
dec
fimuls
cmp
dec
sbb
xchg
test
stos
lret
mov
jecxz
add
movsb
int
leave
in
dec
imul
mov
fidivs
cmpsb
repz
xchg
into
add
cld
sbb
xchg
mov
mov
lock
rcrl
sub
jecxz
pusha
push
xchg
shll
jl
jl
cltd
andl
inc
fadd
icebp
pop
das
push
ja
daa
ss
pop
int3
mov
iret
aad
mov
std
pop
scas
push
or
xlat
or
pop
sub
loop
xchg
mov
push
jge
add
sbb
add
jmp
xchg
sti
adc
in
arpl
push
int
or
loopne
mov
xchg
lcall
int
xor
pop
and
cmp
imul
mov
imul
push
shlb
add
std
push
fadd
cli
testb
xor
dec
mov
jb
outsb
int3
stos
jg
das
mov
rorl
imul
popf
fisubrs
insl
out
and
xor
lds
sbb
mov
xchg
jge
xchg
dec
xchg
cld
sub
and
popa
pop
pushf
es
mov
mov
not
mov
fdivs
iret
cli
sub
jb
popf
xor
mov
sub
or
enter
adc
cmpsl
fs
clc
lcall
jmp
sbb
lods
scas
call
jnp
pop
repnz
repz
inc
mov
inc
pop
rolb
out
adc
inc
test
or
jecxz
jl
cltd
mov
notl
mov
ds
shrl
loope
hlt
aas
mov
dec
repz
rcrb
mov
adc
ret
js
sbb
popa
push
hlt
ret
adc
inc
jo
ret
sub
in
popa
je
in
sbb
pop
div
push
mov
mov
pop
fildl
jnp
shll
into
adc
sub
and
js
jae
xchg
lods
dec
loopne
out
movsl
int
jbe
bnd
mov
shr
push
mov
jns
sbb
scas
std
sub
xor
or
dec
jae
std
cwtl
jmp
xchg
mov
inc
call
inc
roll
cmp
shll
cmp
inc
ja
push
js
mov
jae
inc
je
scas
and
pop
xchg
scas
mov
sbb
jnp
jo
jecxz
inc
cmp
adcl
and
in
int
movsb
imul
inc
cwtl
mov
adcb
push
jmp
aad
loopne
rdpmc
imul
cs
shlb
jno
add
outsb
push
out
ss
icebp
or
xchg
mov
out
pop
push
cmpsl
mov
mov
addr16
call
add
jo
in
insl
out
sbb
iret
imul
jle
jle
into
lea
mov
shlb
pop
xchg
adc
add
push
jl
into
mov
test
inc
cmp
sub
std
dec
into
and
jno
sbb
test
out
or
mov
stos
cmc
loope
xor
loopne
and
sub
push
or
shlb
jne
mov
lds
or
enter
mov
fs
xchg
inc
dec
sub
fbld
imul
push
aas
nop
mov
push
jg
add
mov
ret
icebp
shrb
out
fdivs
repz
gs
cld
aas
or
add
sti
cmp
jbe
mov
inc
jno
lret
add
test
inc
xchg
ljmp
mov
imul
push
shrl
xor
arpl
rcll
arpl
push
pop
jmp
add
add
hlt
lret
jmp
mov
pop
pop
vpsraw
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sahf
or
jp
cmp
sub
mov
pop
bound
xchg
push
push
cmp
aam
out
dec
jl
mov
dec
ds
aam
jmp
lcall
arpl
and
leave
in
jle
test
cmp
inc
insl
inc
pop
pop
cmc
sbb
stos
nop
xchg
mov
mov
push
mov
in
mov
ret
icebp
cs
adc
sbb
xchg
insl
add
fwait
xor
imul
cmp
dec
shrb
mov
adc
mov
cmc
cmp
push
mov
push
cmpb
outsb
adc
jge
xor
mov
xorb
sbb
shl
mov
cli
test
lret
or
mov
adcl
mov
push
mov
sub
cmp
fiaddl
test
pop
fwait
sbb
aas
pop
adcb
ret
jmp
out
inc
dec
push
test
cmp
scas
sub
mov
aam
sbb
jb
push
fs
subl
repz
and
imul
mov
and
mov
aad
les
test
jno
in
imul
sbb
sub
pop
fwait
mov
push
test
push
in
add
cmp
stos
jge
shll
sbb
cltd
xchg
add
cmp
add
aaa
out
sbb
fwait
cmp
push
out
mov
popf
mov
jl
test
add
stc
and
add
push
xchg
jge
sbb
lods
cltd
xchg
cmp
fmuls
out
push
imul
jbe
pop
or
or
aas
xchg
aam
xor
sub
sbb
scas
fstps
test
and
add
cmp
sub
xchg
jle
sub
cli
xchg
out
jle
add
xchg
test
xor
lcall
push
lods
out
loop
lds
lock
jmp
repz
js
leave
xor
aad
mov
aam
roll
hlt
mov
mov
mov
or
xor
mov
xchg
fidivl
gs
mov
das
ret
sub
xor
dec
xor
push
test
and
mov
sub
pop
mov
jl
lock
cmp
mov
jno
mov
in
pop
inc
jne
or
push
jge
in
es
sarl
into
push
sbb
add
jl
pop
cwtl
imul
loope
gs
sbb
dec
mov
lret
dec
and
mov
testl
jae
pop
xchg
fdivrl
adc
xchg
iret
cs
cwtl
mov
xor
jo
and
dec
loopne
sbb
lret
and
or
inc
push
dec
cmp
popf
scas
push
cmpsl
or
mov
sbb
pusha
mov
lods
inc
pop
sbbb
sbb
jge
stos
pop
cld
cmc
call
flds
add
call
xchg
xchg
sbb
pop
mov
or
loop
or
jl
inc
sar
popf
outsl
aam
movsl
jge
mov
inc
negb
push
sti
jmp
cmp
inc
mov
push
int
sbb
out
xor
mov
scas
dec
and
lds
loop
xchg
mov
pop
shrb
sbb
lahf
lret
ja
mov
mov
cmp
cli
leave
ret
mov
mov
lret
cs
xor
jmp
push
push
push
push
pushf
mov
aas
mov
nop
sub
mov
das
and
or
xchg
loope
pop
push
xchg
mov
shlb
std
adc
iret
pop
pop
mov
loop
add
stos
movsb
shrb
orl
cmp
cmp
xor
mov
shrl
jge
jmp
loop
push
xchg
loop
in
outsl
fwait
xchg
cltd
movsb
inc
hlt
pop
mov
mov
in
add
sahf
adc
push
mov
and
insl
xor
and
insl
jecxz
cmpsl
bswap
adc
test
aad
push
dec
aad
aam
leave
jmp
aas
test
mov
pop
sarl
cmp
pop
cmp
ret
enter
push
sub
jns
mov
or
cmp
es
push
std
lea
gs
adc
push
mov
lods
xchg
cmp
pop
sub
hlt
cs
loopne
pop
popf
add
dec
sub
mov
push
xchg
inc
decb
frstor
adc
addb
cmp
iret
or
dec
mov
push
pop
loop
add
leave
mov
pop
loop
jae
adc
aaa
xor
popa
mov
shlb
pusha
cmp
adc
xor
mov
into
sub
lret
xchg
add
xchg
repnz
rolb
push
out
sbbb
or
push
pop
xchg
inc
cmp
xchg
shlb
xchg
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
jmp
and
adc
xor
mov
shrb
add
push
call
dec
movb
or
cld
sub
cwtl
in
xchg
andl
cmpsb
lret
lods
inc
pop
adc
aad
popa
test
jl
aaa
mov
cmp
pop
adc
push
lcall
out
js
cltd
mov
inc
xchg
sub
das
cmc
or
adc
mov
or
push
xor
scas
rcll
or
movl
jmp
mov
nop
out
in
add
mov
or
dec
cld
in
add
inc
inc
jo
mov
data16
arpl
cmp
popa
outsl
ret
inc
xchg
mov
add
testb
dec
pop
mov
cs
fdivrs
push
adc
push
adc
xchg
out
xchg
ret
mov
xlat
jo
adc
jb
js
push
xor
insb
imul
mov
in
inc
fisttpl
jg
cmp
inc
lcall
sbb
cmc
in
les
lret
cltd
hlt
imul
mov
imul
cmp
mov
mov
hlt
rclb
pop
das
pop
sub
xor
imul
xor
stc
pushf
and
push
mov
xchg
push
push
xchg
rcll
es
push
mov
jno
push
bnd
in
and
orb
or
in
mov
aad
stos
stos
leave
jmp
fcmovnb
xchg
int
push
sbb
jne
jne
mov
out
push
outsl
movsb
push
pop
xchg
sti
push
mov
push
xchg
mov
stc
loopne
mov
mov
pop
mov
pop
out
sub
mov
rcrb
adc
jecxz
aam
mov
jb
cmp
lcall
mov
loop
ficompl
lds
xchg
cld
arpl
pusha
rolb
adc
enter
imul
jae
dec
imul
movsb
inc
jo
repz
cmp
add
rcll
pop
popf
xor
adc
xor
aad
or
imulb
pop
adc
sub
addr16
jecxz
lcall
ds
cmp
pop
xchg
out
loope
and
fsubr
and
push
xchg
lcall
jno
dec
push
mov
leave
jbe
sbb
cmc
mov
or
mov
aaa
fdiv
test
jb
xchg
and
pop
add
cltd
lret
in
mov
aas
cmp
sbb
sbb
lcall
es
adc
lods
add
in
daa
and
aaa
jnp
test
dec
test
jp
xchg
sbb
incl
jns
ficoms
mov
xlat
jecxz
ret
insl
add
movsl
ficoms
mov
dec
adc
and
and
push
pushf
test
cwtl
pop
cmpsl
mov
dec
test
test
push
sbb
fidivrs
inc
out
cmpsl
adc
xorl
mov
mov
sub
cmp
popl
cmpsl
jmp
das
mov
dec
adc
movsl
mov
xor
mov
fsubrl
mov
adc
pop
dec
stos
pop
in
sbb
xor
aad
fwait
inc
mov
lods
arpl
fs
lods
popf
ffreep
popa
inc
push
push
sub
addb
ljmp
ficompl
pop
dec
add
stc
jge
mov
enter
mov
mov
cmc
leave
pop
xchg
adc
push
or
push
stos
inc
jno
ficoml
dec
dec
das
cmp
jmp
dec
cltd
fcompl
stc
testb
lahf
add
shll
bound
lahf
dec
push
mov
xchg
pop
sti
outsb
shlb
and
xchg
lret
arpl
clc
pop
sub
daa
cmp
insl
call
aad
pop
testl
xchg
push
cmc
and
pop
fisttpll
sbb
lods
pop
xchg
cs
scas
xchg
outsb
into
xchg
jmp
mov
movsb
out
dec
inc
scas
and
mov
sub
leave
iret
mov
pop
xor
push
mov
inc
outsb
mov
loop
inc
mov
in
xchg
mov
sbb
mov
arpl
imul
mov
in
jno
push
fstps
jbe
xor
ljmp
push
push
fsubl
push
insl
pop
inc
pop
rolb
xchg
arpl
aas
scas
mov
setbe
sbb
js
std
cli
fdivrs
fcomi
cmp
dec
and
add
sbb
sub
xor
repnz
mov
or
hlt
aam
jle
pop
or
push
testl
or
cwtl
stos
pop
movsb
mov
fimuls
cmp
dec
insl
adc
jae
js
adc
into
daa
sub
ret
inc
push
addb
or
idivb
cmpsl
inc
lret
std
insl
je
jl
dec
mov
int
into
cwtl
xor
mov
jns
xchg
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
jle
sub
xor
mov
push
push
cmp
jno
aaa
rcrb
divb
cld
dec
cmpsl
cs
push
stc
lods
mov
popa
negb
dec
cmp
lods
xor
test
cltd
cmp
es
pop
filds
fldz
jae,pn
cmp
pop
mov
mov
pop
mov
mov
in
shlb
sbb
cltd
mov
mov
ficoms
mov
dec
and
outsb
movsb
mov
bound
fucomp
dec
popa
jno
inc
scas
test
cmp
jb
sub
xor
dec
add
mov
outsl
xor
jne
push
or
jno
sbb
or
pop
test
sbb
jmp
pop
lret
lahf
sbb
adc
je
lods
sbbl
jbe
call
sbb
lea
arpl
mov
out
mov
sub
addr16
push
xor
repnz
push
std
mov
aaa
hlt
out
pop
xchg
fsubrl
bound
pop
iret
push
das
js
mov
mov
imul
xor
dec
push
cmp
aam
imul
xor
daa
cmc
std
push
inc
push
mov
pusha
jge
lret
out
cwtl
je
jns
mov
shll
call
pop
or
in
mov
or
push
mov
psrld
inc
xchg
xchg
rclb
sub
mov
mov
mov
test
test
xchg
test
adc
enter
fistl
push
outsb
scas
mov
xorb
shrl
dec
sub
fadds
cmp
mov
mov
add
ds
nop
pop
push
std
xchg
pop
mov
in
test
pop
jp
xor
inc
sbb
jae
mov
pop
cwtl
xor
xor
sub
test
xor
mov
insb
js
mov
in
popf
jae
sbb
dec
insb
lret
jbe
divl
dec
test
xchg
movsb
jp
test
pusha
adc
sub
pop
pop
and
out
pushf
jb
scas
dec
sahf
cmp
mov
jle
pop
jecxz
stos
mov
and
push
lret
push
cmp
mov
mov
cmp
xor
inc
fldt
stos
sbb
sbb
mov
mov
pop
repnz
xchg
daa
mov
dec
cmc
loop
ret
push
cli
arpl
pusha
ja
xchg
cmpsb
inc
mov
ljmp
add
and
push
push
mov
in
sub
ret
into
rorl
pop
loop
mov
repnz
dec
pop
xchg
xchg
sahf
jno
push
dec
es
pop
aaa
ljmp
aad
iret
inc
lret
lret
stos
loope
xor
adc
icebp
sbb
out
adc
push
test
jle
fs
adc
add
jae
xchg
repnz
ja
mov
pop
pop
stos
cwtl
repnz
movsl
fcmovne
pop
sbb
dec
jle
sbb
iret
xchg
dec
outsl
int3
js
out
mov
push
in
mov
mov
jmp
add
addr16
mov
enter
loop
xor
xchg
pop
in
movsb
call
push
popl
repz
push
jge
sub
aaa
shll
js
shl
lahf
push
ja
xchg
dec
adcb
imul
dec
xlat
pop
cli
jle
cld
xor
lea
stos
enter
gs
sbb
movsl
cmp
or
dec
push
ss
hlt
ja
daa
loopne
je
xor
aas
xchg
adc
scas
dec
je
cld
cmpsl
push
xchg
cli
push
xor
mov
mov
sub
dec
push
or
adc
test
jno
pushf
mov
fiadds
jg
dec
push
adc
in
cmc
sbb
jp
pop
sti
xchg
xor
dec
sub
cmp
sbb
push
movsw
mov
inc
cmp
insb
sbb
popa
adc
xor
in
pop
leave
add
mov
gs
sbb
inc
dec
pop
popf
test
mov
dec
sub
adc
dec
fldt
xchg
fdivl
ss
int
cmpsl
mov
sub
sub
mov
or
je
sub
xor
in
pusha
push
stos
jp
negb
mov
sub
push
cltd
sahf
shlb
inc
adc
cld
call
sarl
ja
aas
dec
call
jns
and
loope
xchg
pop
adc
mov
ret
popf
cmp
pop
shlb
loop
dec
push
xor
jne
fdivrs
adc
mov
imul
add
sub
add
lret
xchg
cmp
push
push
dec
sub
add
call
notb
enter
adc
aad
mov
andl
add
lods
rolb
mov
mov
xor
shr
mov
jmp
inc
jecxz
sbb
sub
mov
or
push
push
cmp
loopne
adc
into
cltd
push
pop
outsb
sarb
dec
addr16
sti
pop
aaa
lea
lret
stos
push
mov
cli
push
mov
xor
xlat
xor
js
jg
out
mov
cld
in
xor
int3
add
loopne
push
cli
cltd
outsb
inc
mov
mov
mov
pop
stos
push
insb
rclb
mov
push
inc
lds
pop
dec
add
daa
test
jle
push
inc
jmp
cmc
mov
inc
stos
xchg
xchg
cmpsl
jge
and
orb
pop
aad
sub
fimuls
loope
mov
xchg
or
cmp
cld
jecxz
fsqrt
in
int3
call
xor
pop
orl
cs
mov
cmp
push
in
testl
xchg
jo
pop
cmp
jl
mov
xor
jg
xchg
sahf
xor
scas
push
mov
pop
jno
mov
mov
cmpsb
outsl
lcall
rcrl
fldt
std
lds
data16
push
stc
lret
cmpsl
push
fsts
lock
mov
sub
in
jns
fisubs
sub
pop
xor
scas
jl
sbb
rcrb
cmp
adc
out
aam
xchg
or
out
jns
push
push
filds
adc
push
js
xchg
clc
pusha
sub
rcrl
fmuls
adcl
mov
fwait
bound
and
aas
jne
nop
mov
add
stos
cmc
pop
xor
jno
dec
cmp
lods
stos
jns
xor
sbb
lods
fistpl
js
aas
mov
xlat
faddl
jno
xchg
negb
lcall
adc
jbe
mov
std
or
xchg
out
xor
mov
stc
mov
xor
or
andl
sbb
pop
jmp
lahf
mov
mov
dec
addr16
jno
inc
xor
jae
sbb
xchg
add
xchg
int
pop
in
inc
popa
pop
in
sub
mov
dec
adc
push
xor
dec
inc
push
lahf
mov
mov
add
or
pushl
out
ret
adc
stos
leave
leave
aam
mov
push
in
adc
popa
add
loopne
mov
mov
cs
sbb
out
push
pop
loop
xor
rcrb
jl
jae
push
in
add
sahf
mov
pop
leave
js
push
dec
pop
les
mov
pop
frstor
loop
cltd
out
jne
dec
push
pop
mov
jne
xchg
stos
cmp
cmp
addr16
fmull
mov
mov
lods
dec
and
subb
lds
sahf
popf
mov
icebp
pop
mov
pop
xchg
aam
adc
dec
lcall
jg
xor
mov
jmp
lahf
fucomp
mov
adc
movsl
idivl
and
sub
sbbb
bound
out
das
push
mov
sahf
enter
xrelease
pop
mov
pop
cltd
dec
in
testl
pop
cld
out
add
sub
popa
xchg
das
ds
clc
sub
aas
dec
gs
sub
repnz
sub
into
mov
nop
adc
popa
je
fwait
mov
in
clc
mov
iret
jg
and
add
dec
mov
inc
call
dec
cmp
jnp
push
sub
repnz
sbb
pop
sub
push
das
mov
aam
mov
rolb
jnp
aas
cli
lahf
xchg
adcb
dec
rcr
xor
pop
adc
mov
into
jle
rcrb
clc
loope
int3
sahf
lods
test
fnstcw
mov
mov
mov
adc
clc
mov
push
jb
iret
push
xlat
orb
xlat
loopne
fs
add
in
xor
push
outsb
std
mov
insl
iret
push
push
mov
stos
lret
sahf
loop,pn
jae
loopne
sub
xor
mov
imul
mov
dec
test
sub
inc
and
fldt
pop
imul
adc
fwait
testl
jmp
rolb
int
shlb
arpl
jp
adc
rorb
or
cwtl
mov
subl
add
adc
jbe
dec
inc
jae
lret
pop
insb
or
sbb
outsb
scas
mov
pop
push
cld
inc
add
sti
and
js
cmp
inc
xor
rol
xor
scas
into
mov
fimuls
mov
movsl
jno
push
xchg
sub
push
popa
lcall
jge
mov
fcmovnu
push
sahf
xor
dec
push
mov
adc
mov
sub
mov
jecxz
mov
inc
mov
in
stos
sarb
sbb
xor
mov
mov
jnp
data16
jge
es
cmpsb
inc
les
testl
fdivrs
frstor
adc
adc
divl
je
push
and
es
cwtl
adc
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
jmp
shlb
and
and
test
xchg
xchg
mov
push
push
cmp
inc
rcr
add
stos
out
das
push
xorl
jb
clc
leave
xor
jne
cld
or
xor
mov
xlat
mov
xchg
fsubp
stos
mov
repnz
loop
mov
adc
iret
sbb
adc
pop
das
pusha
or
mov
iret
xchg
ds
or
lds
sbb
pop
inc
sbb
mov
jge
clc
adc
insb
in
jge
cmpsl
pop
mov
outsb
cld
xchg
imul
push
pushl
or
mov
pop
mov
cmp
sbb
inc
scas
rcr
pop
imul
pop
pushf
sbb
pop
pop
xlat
push
fs
add
outsb
decb
sbb
lds
mov
sub
push
sbb
jg
aas
ja
push
dec
imulb
jns
sbb
push
xchg
and
cmp
insl
popa
mov
dec
dec
fwait
xchg
inc
mov
test
xchg
cmp
jge
inc
int
push
test
mov
inc
movsl
into
and
negb
xor
add
mov
les
jmp
xor
fldt
dec
jle
rolb
cmp
rclb
in
xchg
jno
push
popa
leave
into
nop
jbe
sub
stc
test
fimull
push
data16
add
in
int
dec
xchg
repnz
push
pop
popa
add
or
ljmp
mov
and
icebp
jo
clc
push
and
pop
and
jge
or
xchg
xchg
lock
das
sahf
sub
std
lret
cltd
or
jno
popa
sbb
aaa
cmp
cmpb
aas
ja
and
daa
pushf
pop
mov
gs
adc
inc
outsl
jbe
out
sbb
rcll
xchg
add
mov
lahf
cmpsl
test
mov
adc
das
arpl
outsb
inc
xor
rolb
add
mov
shrl
cld
push
push
outsb
icebp
fsubrl
pop
hlt
push
mov
push
pop
mov
insb
mov
int3
ret
pop
imul
jmp
arpl
int3
add
imul
mov
push
sub
sahf
jns
out
aas
inc
or
int
jb
xchg
jo
es
dec
cli
push
das
dec
add
mov
bound
push
pusha
mov
je
sahf
jp
xchg
inc
lock
mov
adc
repnz
sbb
adc
inc
fbstp
arpl
inc
mov
outsl
dec
fbstp
pop
jne
loope
sbb
ror
jno
sub
popw
pop
sub
push
push
xchg
cmp
cmpsl
popa
es
pop
ss
cld
and
and
aas
sub
std
inc
loope
les
or
push
fs
aam
xor
jmp
mov
shlb
stc
movsl
rcr
neg
in
jg
cmp
stc
ret
mov
mov
test
sbb
adc
push
mov
popl
addr16
jp
in
cmp
imul
jne
mov
fxch
or
mov
sub
fadds
pop
xchg
jl
adc
test
cmpsb
aas
loop
gs
out
mov
sarb
adc
stos
lret
outsb
sub
fldl
mull
mov
ret
inc
and
cmp
test
adcb
pop
xchg
insb
xchg
push
inc
cli
fcomp
jl
dec
std
fbld
sub
std
jge
push
mov
pop
out
mov
push
filds
outsb
sbb
mov
adc
sub
ret
push
lea
xchg
sbb
flds
movsb
mov
push
loopne
sbb
jae
rclb
rcll
mov
sub
dec
enter
mov
int3
lahf
push
sbb
je
js
shrl
push
xchg
and
int3
fisubl
inc
inc
mov
out
mov
aas
add
mov
push
jp
mov
and
pop
or
or
dec
lret
lret
jl
pop
dec
jae
std
dec
shl
mov
mov
xor
xchg
and
in
adc
js
sbb
test
push
mov
inc
mov
mov
xchg
icebp
aas
sti
ss
mov
popf
movsl
pushf
pusha
cmpb
push
pop
hlt
sub
dec
mov
add
push
mov
sub
jge
cli
add
mov
adc
dec
les
and
xor
adc
scas
adc
lods
mov
add
cld
mov
sbb
or
inc
mov
imul
sub
push
hlt
push
push
pop
jnp
sbb
dec
dec
rcr
fs
arpl
stos
mov
btr
leave
gs
mov
sub
dec
out
lea
movsb
out
adc
ljmp
imul
fdivs
push
rcll
cmc
jle
push
addr16
pop
iret
sub
fdivrp
mov
add
rcrb
leave
fcoms
cmp
je
and
fisttpl
in
xchg
je
add
aam
mov
mov
adc
stos
pop
pop
scas
jnp
loopne
loop
mov
pop
insl
arpl
ret
or
test
push
add
mov
mov
mov
mov
mov
jmp
shr
ror
shlb
loopne
sbbb
inc
pushw
push
cmp
xor
adc
add
mov
dec
adc
dec
mov
and
jno
xchg
fidivl
bound
sub
or
pop
les
testb
fdivl
push
cltd
inc
xchg
scas
shrl
jmp
aas
xchg
adc
and
movsb
out
xor
sub
pop
fisttpl
nop
and
mov
pop
dec
inc
fwait
push
icebp
sbb
xor
aaa
push
ss
flds
scas
mov
sbbl
inc
ret
sbb
cs
outsb
ficompl
popa
es
popa
aad
pop
les
loop
scas
ljmp
test
test
cs
pop
scas
lea
repz
add
loope
lds
sbb
dec
dec
push
shlb
enter
or
mov
jl
xor
push
dec
je
out
ret
sub
cmpsb
sub
or
fs
sub
cmpsb
inc
cmp
dec
jle
mov
dec
dec
pop
pop
loopne
or
dec
cmp
push
ret
and
and
shr
stos
sbb
inc
in
mov
mov
pop
xor
jmp
in
mov
sub
sbb
lods
push
dec
push
and
pusha
mov
rcll
add
sbb
adc
mov
xchg
ss
repnz
in
addl
in
push
or
pop
sub
jbe
jb
sub
inc
aad
mov
aam
test
hlt
bound
ljmp
in
addr16
xor
add
and
sbbl
scas
xchg
push
adc
add
test
adc
imul
xor
rcll
mov
popf
ret
lods
fmul
add
enter
repnz
add
cmovne
and
adc
jmp
pop
lock
test
sub
sbb
sub
imul
insl
xor
pop
push
insb
popa
mov
mov
jno
movb
fwait
ja
ret
popf
jb
inc
push
pop
int3
icebp
mov
icebp
and
adc
scas
dec
arpl
push
mov
ljmp
outsb
mov
or
aad
push
mov
dec
adc
pop
add
incb
lods
iret
aam
sarb
das
sub
loopne
sbb
mov
arpl
das
icebp
dec
ss
mov
sub
add
sbb
push
mov
pop
mov
lcall
loope
or
dec
loopne
and
or
dec
inc
mov
mov
subb
pop
mov
cmp
lar
divl
sub
xchg
adc
mov
loop
xor
orl
ljmp
cwtl
icebp
mov
das
pushf
scas
and
outsl
inc
lret
lods
cld
into
sub
jbe
sub
pop
or
in
mov
jg
cmp
andl
xor
aam
mov
loopne
xchg
jno
jae
dec
js
inc
xchg
add
mov
incl
imul
hlt
dec
pusha
and
adc
sti
mov
xchg
cmc
ret
jmp
hlt
xlat
fldenv
imul
sub
stos
add
cmpsb
insb
push
ss
clc
ss
hlt
pop
adc
dec
cs
dec
rcll
test
pop
push
xchg
out
repz
mov
dec
add
push
cmp
fidivrl
or
fsubrs
shl
and
cmp
and
dec
dec
call
test
aam
roll
pop
sub
stos
jl
addr16
xchg
pop
inc
push
mov
jle
push
dec
std
imul
mov
stos
mov
push
mov
jl
ss
sbb
xor
addr16
pop
xchg
pop
call
xor
arpl
stos
mov
jle
mov
inc
jp
in
enter
cmp
mov
xchg
in
test
jp
dec
dec
insl
cmc
pop
jl
cmpsl
push
iret
pop
or
addl
and
shll
jp
test
sti
dec
jle
sub
jnp
fs
pop
movsb
adc
aad
mov
dec
pop
mov
mov
daa
adc
mov
mov
fistpll
pusha
push
xchg
imul
push
pop
je
aam
inc
stc
js
test
clc
jle
js
test
ja
mov
stos
lods
push
add
and
push
fcoms
lcall
pop
dec
xor
inc
lock
aad
lds
mov
imull
mov
xor
mov
pop
enter
pop
jecxz
sti
ds
lret
shl
mov
jmp
mov
adc
sbb
cmp
jne
es
push
pop
je
push
push
push
cmp
in
inc
in
les
pop
push
lcall
push
addr16
jb
es
outsl
sbb
fsubr
cmp
aaa
aaa
insb
daa
leave
int3
iret
pop
mov
into
mov
out
out
sub
jae
int3
dec
mov
or
pop
in
ret
cmp
out
xor
xchg
and
nop
inc
test
je
sahf
ss
iret
mov
leave
xchg
mov
cmp
outsl
clc
icebp
in
mov
or
popa
lea
dec
unpckhps
out
and
jbe
into
mov
pushl
in
je
xor
push
cwtl
push
data16
psllq
inc
jge
sub
cmp
jg
push
push
popf
mov
and
jmp
pop
xor
mov
sbb
or
or
cli
mov
mov
xlat
in
pop
bound
mov
add
addr16
pushw
fcomps
sbb
stos
add
fidivl
fnsave
mov
ret
cwtl
sub
sub
cmc
in
enter
xchg
pop
pop
insl
or
inc
cmpsb
jns
and
repz
cmc
stos
push
push
mov
jl
adc
les
nop
adc
adc
dec
out
mov
xor
stos
pushf
sub
jp
lock
xchg
and
xor
rorb
or
aas
pop
aam
xchg
in
add
dec
mov
inc
xor
mov
sub
sbb
pop
pop
test
cmp
mov
push
cmp
sbb
push
cltd
pop
xor
loope
lret
cmp
scas
push
xchg
fucomip
pop
dec
test
adc
push
mov
pop
and
outsl
or
cmp
movsb
sbb
lods
pop
push
mov
push
jp
mov
gs
movsb
fisttpll
inc
cwtl
into
fdivl
push
mov
out
xor
int3
cmp
add
push
jmp
mov
jo
dec
arpl
imul
push
jnp
jge
mov
xor
pop
and
dec
out
mov
mov
or
adc
xor
jb
xchg
or
xchg
das
push
mov
jae
fistl
fnstsw
clc
iret
add
cmpl
lret
loope
inc
mov
jbe
sbb
mov
pop
mov
xor
test
dec
ret
jecxz
aaa
ss
mov
ja
jmp
iret
jnp
push
cmp
xor
shrl
adc
mov
clc
js
dec
mov
lret
mov
jmp
jp
addr16
xchg
ljmp
and
std
outsb
cmpsb
jmp
inc
push
loope
sub
mov
std
fsubl
adc
fcomps
mov
ljmp
push
stos
dec
jno
stos
hlt
mov
shrl
inc
test
frstor
leave
das
and
insb
jge
mov
es
inc
mov
mov
push
pop
xchg
lea
leave
push
mov
push
lods
mov
sbbl
dec
adc
adc
dec
cvtdq2ps
inc
add
pop
push
xchg
mov
sbb
lret
pushf
shll
mov
mov
adc
push
lret
and
or
mov
xchg
insb
pop
mov
popa
imul
fxch
dec
pop
cmp
fnstcw
ret
sub
aaa
fdivs
push
adc
rorb
popa
testl
sbb
popa
push
jl
cmp
sbb
cmp
inc
shrl
or
jb
xor
cli
pop
movsb
decl
pop
pop
jne
sbb
mov
aas
lret
sub
clc
xchg
lcall
insl
or
push
and
xor
repnz
sahf
in
addr16
call
mov
int3
cs
insl
xchg
add
pushf
idiv
ss
xlat
ss
push
pop
jno
push
inc
jb
icebp
pop
addl
push
jecxz
jge
ss
and
or
and
push
push
push
dec
and
sarl
notb
in
jl
jle
cmp
push
aas
xchg
outsl
clc
and
jae
mov
mov
pop
enter
stos
in
inc
ficoml
data16
push
inc
pop
testl
mov
jne
lret
cmpsb
fstpt
pop
ficompl
in
inc
or
rorl
mov
dec
mov
popa
and
jns
cwtl
jmp
js
pop
addr16
push
inc
inc
fwait
mov
loope
sub
ret
sbb
add
dec
cwtl
mov
cmp
jbe
outsl
mov
gs
test
xchg
inc
pop
bound
pushf
nop
inc
test
jecxz
mov
mov
push
scas
in
pop
jle
add
cwtl
shll
movsl
out
cwtl
push
rorl
aas
pop
jge
push
fucomp
out
cmp
sub
jmp
loope
pop
push
cmc
push
xor
add
in
jbe
mov
repnz
add
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
jmp
ret
and
cmp
outsb
mul
inc
mov
push
push
push
cmp
addb
adc
xor
xchg
and
mov
out
lock
dec
lcall
push
or
out
movsb
cmpsb
loopne
or
sbb
fldl
nop
sbb
pop
mov
lods
aad
subl
xchg
lods
fwait
cmp
aad
stc
rclb
adc
pop
in
lea
sub
data16
mov
sbb
dec
push
mov
aad
frstor
push
sbb
call
push
xorb
dec
jp
jo
mov
in
fwait
outsl
cltd
push
push
arpl
jnp
cli
lods
jbe
test
adc
fiaddl
cli
pop
lret
sbb
fwait
push
jne
adc
test
xchg
lds
rolb
test
add
sahf
or
repnz
push
jp
cmp
les
jo
incl
idivl
sbb
jl
sarl
lret
fnsave
cmpsb
das
outsb
sbb
imul
push
dec
bound
adc
adc
pop
out
test
fwait
inc
cmp
xor
insb
cs
adc
sti
sahf
mov
decl
xor
inc
jle
mov
push
loope
or
sbb
lods
daa
cmp
xor
and
xchg
fwait
adc
sub
pop
mov
sbb
pop
mov
out
mov
mov
insl
ret
xchg
sbb
adc
inc
xchg
enter
ja
lcall
adc
icebp
dec
lahf
push
push
sbb
out
jns
or
sarb
aam
aam
gs
xchg
enter
jo
out
aas
push
mov
inc
dec
cmpsb
mov
push
pushf
mov
or
push
add
pushf
je
sub
pushf
test
cmp
or
sub
jg
jecxz
xchg
or
roll
pop
outsl
mov
mov
out
clc
adc
jae
adc
nop
mov
push
jae
mov
fldenv
pop
adc
fs
leave
jbe
jae
popa
out
jb
adc
bnd
repnz
jmp
leave
dec
out
int
push
inc
mov
push
sub
insb
shrb
jl
ljmp
subb
outsl
inc
daa
fldt
cmp
icebp
out
xor
cmpb
sub
xchg
int3
add
pop
push
fmuls
jg
sub
xor
adc
xor
pushf
cmp
test
shlb
add
push
addr16
jns
test
out
fsubr
in
and
xchg
push
mov
xor
sbb
in
add
out
loopne
cmpsb
ljmp
js
test
mov
inc
xor
push
jl
stc
stc
ja
movsb
adc
push
daa
or
xchg
mov
test
ss
cmc
fcomp
cmp
gs
je
in
icebp
push
stos
ss
enter
in
cli
xchg
xorl
imul
xchg
les
in
xchg
jb
shrb
add
loope
mov
out
iret
pop
push
pop
jbe
mov
es
jle
add
rolb
sbb
inc
jmp
es
inc
mov
ja
jns
sub
push
pop
shlb
jns
addr16
out
mov
push
loope
push
inc
mov
pop
jl
imul
lfs
popf
sbb
rol
add
mul
sbb
stos
sub
and
sbb
sub
stos
inc
jns
and
push
push
data16
stos
pop
dec
inc
ss
clc
fldl
or
lret
or
sbb
and
mov
jge
scas
sbb
add
jle
cmp
clc
sarl
shl
mov
xchg
xor
bound
sub
inc
push
pop
inc
sarb
in
dec
push
mov
or
ljmp
jge
xor
jb
lret
cmc
or
sbb
lret
add
icebp
mov
sub
lret
adc
fcoms
sub
sahf
lahf
cltd
xchg
or
aam
movsb
sbb
outsl
testb
cmp
dec
mov
pop
fucomp
sub
fstps
pop
loope
inc
inc
scas
or
lock
mov
inc
ds
in
sbb
xchg
ret
mov
cmp
dec
arpl
and
push
lds
dec
push
mov
cmp
jns
sub
sahf
jge
pop
in
call
sarb
mov
add
inc
adc
fisubrl
dec
or
arpl
clc
in
test
sub
aas
shl
inc
movsl
push
sbb
out
shlb
out
aas
stos
xchg
jmp
mov
xor
inc
cmp
shll
jmp
and
shlb
mov
sub
mov
mov
or
leave
testb
into
pop
push
ss
adc
lds
and
out
xor
mov
jmp
jl
mov
inc
jmp
mov
rolb
push
cmp
pop
mov
enterw
pop
xchg
pop
pop
jmp
daa
sub
test
cld
lock
push
jle
xchg
loopne
add
insl
scas
dec
jp
das
mov
rcl
cli
cmpsb
inc
stc
call
mov
cmpb
fisubl
aas
pop
popf
xlat
dec
jge
dec
mov
leave
jp
fcomps
addr16
out
lcall
or
mov
mov
les
sbb
cmp
jno
fs
cmp
fldt
sbbb
adcb
cmc
ffreep
cwtl
cmc
test
repz
pushl
add
stos
or
push
and
outsl
mov
dec
lods
cwtl
addr16
mov
mov
jo
cmpsb
fldcw
cmp
cmp
cltd
xlat
and
or
rorb
loop
mov
mov
mov
jl
gs
inc
add
call
jl
adc
lahf
lahf
sbb
add
jecxz
dec
sbb
ljmp
add
add
lds
stc
push
xor
xchg
loope
hlt
jbe
fnstsw
icebp
addb
adc
cmp
in
fs
in
and
jne
int
shlb
xorl
js
sahf
in
cmc
cld
xchg
lret
sbb
sub
adcb
inc
in
imul
cmpsl
dec
lcall
pavgb
dec
mov
js
jae
loop
and
int
imul
aaa
ret
stc
loope
jmp
jge
and
movlhps
out
push
inc
xchg
push
jmp
mov
jo
adcb
arpl
fsubs
bndldx
xchg
adc
sub
cwtl
xchg
pop
push
mov
into
mov
sbb
mov
lret
push
pop
jmp
pop
inc
mov
jg
sub
mov
addr16
mov
leave
jecxz
outsb
push
loopne
aam
push
mov
lock
xor
mov
dec
mov
imul
dec
xor
shlb
mov
pop
and
ret
mov
in
mov
mov
adc
clc
xchg
inc
jno
mov
cmpsb
divl
xchg
xor
push
pop
jae
push
scas
or
pop
test
ljmp
js
jns
sbb
lahf
push
jo
sbb
ds
popw
xor
data16
in
jo
jecxz
andb
sbb
iret
lock
jbe
fs
pop
xor
sbb
cwtl
out
popa
sub
dec
mov
push
adc
and
xchg
movsb
sub
test
sbb
test
fcmovne
push
loopne
and
int3
cmp
nop
insl
jns
fbstp
push
enter
iret
insb
and
ret
cld
clc
mov
out
or
adc
or
scas
xchg
jmp
sub
xchg
movsl
jg
dec
dec
clc
imul
add
rcll
test
push
fistpll
sarb
repz
mov
and
jmp
stos
jp
mov
cmp
sbb
adc
or
xchg
xchg
dec
and
icebp
jmp
outsl
popa
xchg
ja
es
in
inc
pop
jl
mov
movsb
pusha
push
clc
nop
dec
test
sbb
xor
les
int3
in
pushl
mov
fsubrs
adc
mov
and
stos
sub
jmp
ret
test
rcl
loopne
icebp
outsl
ss
ss
sahf
ljmp
push
or
repz
in
sbb
imull
inc
aad
jmp
daa
jmp
inc
add
xchg
incl
sub
ror
pop
or
fs
mov
pop
jo
stc
imul
das
mov
hlt
cmp
push
xor
mov
rcrb
iret
jne
out
inc
out
and
scas
stos
je
sub
xchg
add
jl
and
mov
pop
lret
int
mov
int3
fs
imul
cmp
mov
sbb
push
bound
enter
dec
cmp
ja
push
pushf
push
ds
inc
out
mov
push
push
data16
and
outsl
dec
insb
ja
or
dec
movsb
adc
gs
push
adc
mov
outsl
xchg
push
xchg
mov
and
call
mov
sbb
stos
lock
or
int3
rorb
or
sbb
lcall
filds
cmpl
scas
mov
fnstenv
negb
push
mov
jb
add
sub
pushf
inc
sub
shl
test
mov
mov
movsb
ret
insl
std
jg
sub
push
stc
movsl
xchg
add
lret
adc
jns
arpl
mov
js
mov
std
push
jb
cld
insl
adc
sbbl
xor
inc
lds
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
jmp
jle
addr16
push
ds
dec
clc
pushf
outsb
push
scas
mov
cmp
jns
out
je
inc
fs
mov
mov
in
int3
xlat
mov
mov
leave
leave
fsts
fucomi
mov
xchg
dec
imul
or
lcall
add
xchg
add
jge
lods
mov
pop
pop
xor
fistps
dec
sbb
gs
pop
dec
push
inc
or
xchg
cmp
jae
xchg
xchg
stos
push
movsl
pop
enter
add
pop
ret
mov
pushf
arpl
adc
adc
adc
int3
test
cmp
or
iret
xchg
dec
std
movsl
aaa
xor
lds
sahf
jp
dec
mov
outsb
bound
mov
sbb
xchg
or
push
push
mov
push
jns
pop
inc
xchg
mov
xchg
xchg
subl
mov
pop
fistpl
sbb
sbb
add
xlat
mov
rcr
pop
out
or
inc
sub
dec
mov
popa
jg
scas
or
in
std
sub
fadds
cmp
or
fwait
cmpl
mov
push
jno
out
or
stos
mov
cwtl
inc
je
adc
xchg
test
inc
xchg
and
fcmovu
gs
jge
ss
fwait
divb
fisttpl
and
mov
add
and
jecxz
test
mov
cmp
out
cwtl
movb
push
aam
movsb
push
sub
fsubs
push
cs
jge
iret
gs
popa
fstpt
gs
pop
adc
xchg
add
rcll
rclb
imul
lcall
aad
test
sbb
icebp
pop
sub
and
imul
jp
popf
shrl
pop
pop
jb
call
pushf
xchg
loopne
or
and
mov
pop
test
jne
ret
inc
divl
xor
repz
push
movsb
fdivr
inc
add
bnd
lods
mov
leave
mov
adc
mov
jno
jg
aas
jl
or
std
daa
cmp
pop
cmp
cld
pop
jg
lcall
es
and
insl
fadds
push
dec
or
mov
and
xor
clc
out
dec
data16
lahf
jmp
int
sbb
push
jl
xchg
les
xor
jp
mov
mov
in
repz
push
jg
cmpb
inc
adc
lcall
aam
dec
rcrb
sub
lea
in
imul
scas
add
imul
xchg
jo,pt
leave
lret
test
xor
or
jmp
or
add
mov
sbb
repz
pop
ljmp
ja
int3
sbb
push
mov
jmp
add
pop
sub
xor
inc
mov
stos
inc
jecxz
dec
cmp
mov
xchg
push
lcall
mov
in
fwait
and
jg
and
cmc
sbb
mov
jg
addr16
pusha
xor
mov
aad
dec
ftst
into
scas
push
jb
xlat
rcrb
sub
cltd
dec
and
fiaddl
sbb
into
out
dec
lcall
pop
fbld
mov
clc
repz
jg
pop
push
roll
dec
push
out
adc
xchg
inc
daa
sub
push
lds
cltd
enter
mov
mov
pop
fcmovbe
imull
nop
andb
mov
push
fwait
xor
dec
xcrypt-cbc
cmpsl
adc
aaa
mov
pop
in
pop
sbb
rcrl
xor
imul
xchg
ss
test
jne
cmp
jne
cmp
or
fisttpll
aad
mov
lret
outsl
inc
and
pop
mov
add
loop
popa
fistps
ds
mov
xchg
push
sbb
adc
mov
aam
testl
dec
jbe
dec
jecxz
cli
fs
lock
ret
cmp
add
push
cmp
mov
negl
dec
mov
push
or
xchg
cmp
cmpsb
pop
mov
fmull
and
pop
outsb
push
mov
mov
enter
ss
push
jmp
arpl
shl
xor
hlt
aaa
xchg
ror
sub
nop
js
cmp
mov
dec
push
enter
mov
cmp
pop
sarl
pusha
pop
out
sbb
pop
sbb
push
js
pusha
dec
sti
lock
jae
ret
jp
jo
jecxz
inc
insl
push
and
mov
loop
mov
and
outsb
cmp
push
or
lcall
ljmp
arpl
stc
dec
loope
jb
addl
sbb
xchg
fcoml
outsl
hlt
cltd
mov
inc
mov
or
dec
inc
movsb
mov
mov
popf
das
into
mov
jae
shl
test
fsubs
cmpsb
imul
push
xchg
dec
and
mov
sarl
shrl
fwait
pop
stos
xor
push
jmp
sub
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
jmp
repz
sbb
jmp
cmp
xor
push
cmp
mov
push
inc
jnp
test
ja
fldt
fbstp
cs
mov
repz
int
outsb
dec
xor
or
sub
pop
jge
adc
or
out
clc
int3
pusha
test
mov
inc
fsts
sbb
ljmp
and
add
cld
popa
xor
sbb
jne
das
imul
movsb
mov
movsb
dec
dec
out
push
xor
xchg
jmp
sub
test
int
xchg
lock
and
lret
int3
leave
and
xlat
sbb
dec
sbb
xchg
int
popf
notl
push
fdivs
jecxz
xor
in
cmp
mov
mov
cli
filds
loope
cmc
rolb
aam
repz
lds
out
cmp
xor
sarb
mov
ja
push
mov
movsl
add
outsb
aaa
xchg
inc
cmc
cmc
pop
add
and
mov
add
stc
pop
mov
ljmp
je
lcall
lods
push
scas
push
in
jb
push
mov
dec
mov
aaa
enter
xchg
jno
adc
adc
mov
xchg
add
dec
push
int3
lods
pop
xor
aaa
outsl
sbb
push
in
or
xchg
aaa
or
out
sub
lret
dec
and
mov
mov
push
test
or
int3
add
pusha
in
xlat
sbb
or
pop
in
loope
pop
sub
mov
jb
jno
fwait
sbb
mov
cmpsb
int
orb
loope
popl
imul
jle
xchg
xor
adc
dec
sarl
rorb
sub
test
add
lret
addr16
mov
xchg
mov
add
popa
popa
stos
ret
adc
pop
xor
data16
fists
movl
adc
or
outsl
shrb
arpl
xor
test
sbb
sbb
pushf
and
rcrl
testb
ss
aas
test
loop
add
fistpll
ja
adc
dec
pop
or
xor
jp
push
or
imul
sti
daa
aad
mov
mov
adc
daa
or
lock
jns
rcrl
sbb
add
mov
sub
aaa
scas
mov
pop
push
mov
xlat
into
notb
inc
push
fwait
pop
mov
ljmp
aam
mov
xchg
and
push
jae
mov
lahf
cmp
mov
popl
cmp
xor
mov
mov
sbb
or
jle
fs
iret
iret
inc
cmp
pop
fstps
cld
inc
mov
jg
lahf
push
addr16
dec
cli
cs
push
sbb
add
repz
aaa
aaa
xor
int
into
and
ja
pop
loop
cmpsl
fst
mov
pop
dec
sbb
xchg
add
pushf
out
xor
pop
pushf
inc
pop
jnp
aam
out
add
or
int
movsb
cvttps2pi
fisttpl
inc
and
test
jnp
pop
or
aaa
and
sub
mov
test
add
lgs
or
mov
outsl
mov
adc
ljmp
je
in
and
jmp
jl
js
test
mul
push
test
sahf
daa
and
mov
add
lcall
sbb
rorb
stos
aam
sbb
jg
pop
cmp
add
dec
xor
aas
adc
aad
dec
loopne
inc
cltd
jae
fistl
rorl
movsb
repz
jbe
outsl
xor
int3
lods
adc
adc
xchg
sti
mov
mov
movsb
rolb
mov
xor
inc
divb
repnz
jge
lcall
jne
sarl
cmc
xchg
rcll
sub
loop
or
jne
lods
jl
dec
push
imul
nop
aaa
out
and
sti
sub
scas
mov
sub
test
jbe
adc
dec
push
sbb
mov
sahf
jae
lret
push
pushf
fsts
mov
jns
sbb
and
or
jg
jp
xchg
mov
lock
insl
dec
inc
cs
push
repnz
push
fcmovu
mov
mov
outsl
call
popf
mov
adc
out
mov
mov
jae
xor
sub
popf
jo
popf
test
out
adcl
sahf
mov
scas
mov
push
arpl
sbb
lret
repnz
mov
pmaxub
sbb
sbb
mov
and
pop
and
inc
fcompl
adc
std
dec
out
cmp
enter
arpl
clc
insb
loopne
aad
test
repnz
inc
push
jle
xor
add
pop
inc
jne
jb
pop
sub
repz
js
stos
jo
pop
fisttps
and
mov
movl
mov
movl
mov
movl
mov
jmp
xchg
jbe
pop
adc
mov
pop
shrb
push
es
push
cmp
adc
inc
jb
mov
pop
call
lods
and
pop
mov
cltd
add
das
push
negl
test
andb
je
test
shlb
lds
mov
dec
sbbl
movsb
sahf
ja
lods
push
pop
sbb
filds
mov
ret
and
int
mov
nop
mov
xor
fwait
cltd
lret
into
shrb
cwtl
loope
cmp
xchg
cli
ja
fsubrs
mov
imul
mov
int
lods
cmp
pusha
data16
sbb
push
adc
pop
xor
sbb
cwtl
sub
ja
mov
lods
push
data16
outsl
dec
xchg
pop
clc
stc
pop
cmp
ljmp
lret
mov
adc
mov
xchg
ja
shll
sbb
mov
rcrb
sbbl
jae
ljmp
push
ret
into
mov
inc
cld
xchg
repz
ja
frstor
cmp
dec
jne
xor
sub
popa
and
sbb
neg
adc
sti
aad
xchg
stos
lds
or
mov
mov
loope
xchg
or
lahf
imul
aas
mov
arpl
cli
push
push
jo
test
mov
sbb
mov
xchg
adc
mov
or
mov
inc
sub
repz
push
dec
test
jns
mov
stos
cmp
cmp
das
inc
adc
fnstsw
sub
mov
sbb
sub
cld
and
jo
push
pop
jbe
dec
jge
push
mov
in
pop
stos
pushf
lahf
frstor
lods
cli
inc
mov
inc
mov
outsl
mov
mov
xor
and
mov
stos
mov
mov
sahf
xor
push
pop
idiv
test
jmp
jns
sbb
xchg
xor
cmp
lahf
jo
push
cmpsb
leave
dec
jne
mov
icebp
out
push
adc
stos
rcrb
stos
test
xchg
out
push
ss
xor
cmp
gs
mov
add
out
xchg
push
stos
out
daa
add
jle
imull
movsb
aas
pushf
fucomip
xor
fisubrs
push
cwtl
frstor
movsb
mov
call
cwtl
xchg
movsb
dec
loopne
enter
push
cmp
shr
scas
mov
iret
pusha
sub
jnp
xchg
adc
xchg
jmp
xor
fsubr
pop
add
inc
call
stos
mov
mov
mov
xchg
add
lods
jmp
mov
sub
jmp
xchg
addr16
sbb
pop
sti
push
addr16
and
stos
cld
sbb
pop
jg
std
repnz
imul
sti
jmp
int3
sbb
das
sarl
insl
in
mov
aas
loop
movl
dec
and
add
and
pop
fsubr
sub
out
add
ja
cli
lods
mov
loope
sahf
or
into
in
mov
jge
aas
mov
dec
imul
adc
pop
xor
xor
jl
stos
cli
push
jb
std
insl
sbb
call
aad
es
aas
insb
loop
push
in
jp
cmp
lock
loop
sub
xchg
add
adc
push
mov
popa
cltd
mov
lock
stos
lcall
test
xor
repnz
adc
fs
pop
int
into
mov
or
or
mov
movsw
inc
addr16
stos
jno
pop
mov
fcmovb
aas
inc
repnz
mov
test
inc
cmp
add
dec
cmpb
push
jb
mov
rolb
pop
imul
mov
pop
fldl
dec
test
unpckhps
dec
xchg
or
jno
push
lds
roll
mov
jmp
insb
mov
call
xor
dec
inc
pop
mov
pop
fisubl
or
mov
inc
lcall
scas
sahf
cmpsb
xor
std
in
mov
adcl
jnp
mov
sub
inc
adc
std
jle
dec
jecxz
adc
loop
fcoml
int3
hlt
fdivrs
dec
push
dec
insb
sub
inc
sbb
mov
aas
cmc
into
inc
lods
fidivl
push
sbb
in
pop
les
popa
fs
mov
xchg
inc
pop
ja
scas
cltd
mov
mov
fs
sar
test
out
popf
dec
clc
outsb
push
cmp
in
cmpsl
cmp
cmp
inc
lea
push
cmp
cmc
es
ljmp
aam
ljmp
add
clc
adc
rorb
inc
xor
push
sarb
cmp
enter
xor
push
stos
sub
data16
or
stos
nop
das
jae
sub
jle
iret
int3
data16
mov
fdivrs
ret
sbb
sbb
int
jo
pop
daa
push
out
mov
sbb
lcall
and
jne
jne
push
add
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
jmp
xchg
lret
cs
push
adc
mov
mov
sti
mov
adc
push
cmp
inc
jb
sbb
and
xchg
xor
add
lret
add
cmp
lahf
mov
cltd
or
mov
mov
xor
push
push
test
fsubr
inc
cmp
jmp
dec
cmp
mov
mov
dec
cltd
lock
rolb
sbb
cld
mov
arpl
lock
call
je
fistpl
xor
jb
sbb
fiadds
jg
sti
into
dec
mov
in
inc
int3
or
mov
out
push
jbe
xor
pop
xchg
pop
push
mov
clc
xor
cmp
cli
xor
js
add
sub
sbb
orb
ret
es
mov
leave
mov
ret
sub
jno
lods
sbb
fildl
pop
xor
cmpsl
cmp
xchg
loop
out
pop
fnstenv
gs
jp
sbb
call
js
insb
insl
ffreep
divb
mov
dec
movb
dec
add
pop
xchg
in
fstps
inc
rorb
je
inc
cmp
test
in
mov
dec
push
pop
add
imul
push
fisubrs
ror
push
pop
test
dec
setl
jmp
cltd
lcall
xlat
data16
mov
jmp
loope
mov
test
mov
cltd
lret
xchg
outsb
sbb
jmp
add
sbb
arpl
das
scas
or
hlt
pushf
cs
or
adc
sbbl
inc
xor
jno
mov
mov
fwait
mov
cmp
mov
push
pop
clc
xor
push
hlt
pop
fwait
push
out
test
pop
xor
xor
movsl
jecxz
jg
test
mov
imul
add
add
hlt
cli
lods
insl
sti
xor
ljmp
fsubrs
mov
mov
incl
clc
cmp
inc
xor
faddl
push
jg
imul
ret
cmp
imul
push
shll
mov
in
sbb
jns
jns
pop
lods
lcall
mov
lret
add
inc
pop
lea
nop
aad
and
jmp
xor
pop
sbb
xor
add
push
fnstcw
mov
movaps
sub
cltd
cltd
mov
mov
test
dec
test
cmp
inc
rol
out
pop
ljmp
out
out
gs
sub
mov
or
lret
mov
sub
mov
fimuls
add
mov
jbe
sarb
sar
dec
dec
fxch
movsl
xor
int3
lret
scas
xchg
aaa
loop
add
fnstcw
jne
sub
cwtl
nop
sub
dec
sahf
ds
ljmp
dec
lcall
mov
or
sbb
dec
je
cmpsb
rsm
into
dec
out
scas
inc
mov
mov
shlb
push
cmp
in
inc
adc
out
mov
jae
les
sub
in
les
mov
sub
js
inc
jmp
test
cmp
adc
push
xor
jb
push
push
enter
or
jle
dec
fdivrs
dec
or
aam
daa
jae
cmpb
dec
pop
mov
sbb
movsb
shr
fmul
out
mov
lret
or
loopne
mov
xchg
mov
xchg
mov
push
pop
in
xor
fldenv
fdivrp
das
in
daa
xor
lret
data16
roll
dec
stos
pop
out
popa
sbb
or
mov
add
push
shl
sub
cld
outsl
xor
add
repnz
insb
aas
movsb
mov
adc
jae
imul
sub
push
cmp
jmp
inc
int3
sub
aaa
cmpl
jl
hlt
fs
add
or
icebp
repz
dec
xor
outsb
imul
mov
and
and
shll
push
aaa
stos
mov
sti
repnz
xchg
and
cmc
int
pop
jl
out
xor
sub
out
inc
sbb
jae
movsl
iret
fs
dec
pop
fcomps
or
fcompl
mov
and
xchg
shlb
movsl
leave
sbb
std
dec
loope
mov
into
hlt
out
push
bound
mov
pop
iret
add
xchg
ret
or
xor
push
ljmp
sti
pop
add
aaa
outsl
push
mov
and
inc
lods
outsb
or
hlt
int3
cli
mov
imul
scas
sarb
xchg
js
xor
push
dec
in
xor
je
or
sbbl
cmp
scas
scas
aad
js
jne
mov
test
or
dec
xor
cltd
in
push
enter
loope
pop
pop
icebp
cmpsl
add
cltd
or
pop
cmc
mov
mov
call
int3
stc
lret
jmp
movsl
jns
icebp
add
sbb
scas
dec
out
rcrl
jl
inc
mov
mov
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
jmp
xchg
fadds
mov
out
shrb
mov
or
cmp
icebp
fstp
cmp
cmpsb
adc
call
sbb
mov
repnz
add
sub
loopne
mov
jle
mov
sub
cmp
aas
adcl
scas
scas
imulb
lock
and
adc
movsl
mov
mov
ret
sub
pop
leave
int
fcom
pusha
adc
popa
cmp
movsb
fnstsw
sti
les
repz
imul
jo
inc
notl
in
in
ret
dec
testb
adc
mov
insl
pop
xchg
out
test
mov
mov
sbb
add
into
jae
jmpw
outsb
sub
rorl
pop
out
cmpsl
cmp
fst
or
in
decb
jae
mov
daa
sbb
jle
jno
sub
sub
cwtl
lcall
rol
sub
cld
sbb
aas
sbb
pop
mov
ljmp
pop
es
sub
xor
sahf
sbb
pop
and
sbbb
test
addb
das
loope
shll
and
loopne
mov
loopne
out
dec
cmp
pop
stc
movsl
repnz
dec
into
into
shlb
fsts
lret
and
pop
mov
into
dec
test
lods
dec
mov
pushf
loope
test
les
imul
xor
addb
out
xchg
ret
mov
mov
jmp
out
xor
punpckhwd
cmp
in
cltd
or
divb
cmp
gs
push
out
or
xchg
stos
and
push
lods
cwtl
idivb
in
lds
out
sar
xlat
mov
xchg
out
ret
xor
sbb
cmpsl
and
sub
push
jmp
push
adc
push
in
mov
xor
or
sahf
push
mov
xlat
push
aaa
jmp
scas
or
bound
repz
cli
jo
jmp
xorb
out
dec
setl
scas
ret
out
mov
cmpsl
xchg
mov
test
call
pop
xor
push
aad
xchg
test
xor
jb
icebp
inc
and
and
stos
cmpsl
add
adc
cmpsl
mov
ss
cmpsl
add
or
cmpsb
or
jne
cs
or
sahf
insl
xor
into
jne
lahf
popf
dec
aaa
adc
mov
aad
sahf
ljmp
movsl
dec
sub
xor
mov
mov
sbb
xchg
pushf
pop
cwtl
add
fisubrs
inc
icebp
lods
in
fwait
mov
mov
xchg
fnsave
push
pop
adc
sbb
mov
xor
mov
jne
pop
js
rcl
lods
sbb
mov
cmp
sub
mov
xlat
jmp
rcrl
cli
ret
push
add
icebp
xchg
mov
push
decb
dec
fwait
lahf
mov
xlat
xchg
mov
mov
push
pop
cld
cltd
cmpsb
movsb
jnp
dec
jnp
insl
mov
in
shrb
mov
sarb
in
mov
lret
stos
xor
movsb
sahf
hlt
movsb
jno
mov
dec
mov
jns
mov
jns
ds
cs
pop
mov
mov
mov
push
scas
mov
in
cmp
jns
hlt
out
lods
jle
cmp
divl
cmp
sub
pop
es
call
iret
mov
push
xlat
add
jns
in
sbb
pop
ss
nop
fsubrl
xor
adc
das
shrb
mov
pop
cmp
int3
mov
and
scas
movsb
xchg
lods
push
lcall
popl
jne
stos
pop
cmp
sub
stc
shlb
addr16
outsb
in
test
jge
cmp
or
shll
cmp
jno
lret
cs
inc
jnp
repnz
int
mov
enter
add
dec
out
stos
lods
arpl
or
stc
rolb
and
adc
jecxz
cmp
jns
or
das
out
push
ss
push
mov
js
mov
add
adc
cs
mov
push
test
aas
iret
jo
ret
sbb
jp
xorb
push
fnstsw
sbb
mov
push
je
and
mov
sbb
sub
mov
push
dec
loopne
and
cmp
sub
movsb
rorb
jg
lret
pushf
mov
jp
or
mov
mov
inc
stc
test
push
fstps
add
aam
int3
mov
mov
cmp
scas
fistps
dec
mov
push
movsb
lcall
sbb
and
fmulp
rcrb
popa
ficompl
jmp
aam
into
cmp
sbb
repnz
and
hlt
sub
in
adc
jge
cld
push
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
jnp
les
jle
nop
outsb
out
inc
or
or
cmp
xchg
xor
test
ret
loopne
cmpb
test
rorl
xorb
lcall
shlb
jno
xchg
sti
xor
pop
dec
push
add
movsl
dec
xlat
enter
pop
clc
fisubrs
stos
pop
pusha
test
mov
xchg
push
sbb
mov
inc
mov
mov
aad
incb
cli
mov
add
inc
jbe
mov
and
shlb
mov
xchg
insl
aaa
mov
fbstp
mov
xchg
iret
idivl
andl
imulb
pusha
dec
xchg
push
test
xchg
cli
ljmpw
test
insl
iret
mov
add
pop
pushf
mov
test
cltd
setbe
orl
jmp
mov
jbe
sbb
sub
sub
ret
cmp
jle
mov
leave
xchg
cmpb
push
jnp
mov
daa
fwait
in
stos
jle
mov
ror
push
cwtl
aam
sarb
dec
and
dec
ret
xchg
push
loop
fsubl
stos
shr
mov
ficomps
loop
fs
cmpsl
aas
inc
and
push
cmp
divb
enter
dec
out
xor
jbe
and
xchg
shll
push
movsb
mov
scas
fwait
and
addr16
in
stos
or
fstpt
loopne
jle
mov
mov
jns
int
and
mov
lret
push
inc
push
adc
lock
push
cmp
cmp
mov
mov
xchg
into
aas
fdiv
add
and
cmp
in
mov
outsl
scas
sahf
inc
push
or
fimuls
cmp
pop
cmp
hlt
js
ret
div
cmp
insl
int3
or
hlt
jns
gs
adc
ds
and
cmc
pop
outsb
xorb
fcmovu
add
push
dec
js
test
adcb
imul
push
dec
xor
inc
lods
enter
pop
adc
leave
dec
jge
cmp
xchg
lahf
clc
xchg
lret
pop
pop
lcall
pop
scas
lock
pop
jmp
mov
popa
fs
repz
add
clc
jecxz
ss
and
movsb
call
insl
vmulss
call
fisubrs
out
push
fmul
and
dec
or
popf
mov
or
in
mov
jo
popf
adc
inc
pop
and
in
or
sbb
ss
pop
adc
data16
ss
jbe
or
jbe
into
movsb
adc
pop
clc
mov
shlb
push
push
mov
js
mov
pop
sbb
test
sub
popa
hlt
ss
arpl
fimull
inc
xchg
fstpt
mov
cmp
ljmp
jno
jecxz
sahf
adc
cmp
jg
not
xchg
imul
lret
inc
cmp
mov
lods
loope
fidivs
je
cld
movsb
cmp
int3
imul
jnp
pop
dec
mov
mov
iret
and
inc
jl
dec
mov
loope
sti
mov
and
or
ss
mov
ja
xchg
fldenv
pop
xchg
addr16
mov
mov
add
jo
sbb
lcall
mov
pop
rolb
mov
rcll
cs
push
push
pop
hlt
adc
sub
sub
cmc
lret
hlt
inc
add
jno
testb
lret
pop
mov
sbbl
and
jl
adc
es
icebp
out
js
aaa
pop
sub
fwait
push
loop
add
jb
add
enter
pop
sbb
mov
mov
adc
mov
mov
ja
test
int
inc
jge
and
scas
mov
or
mov
inc
mov
repz
mov
inc
aaa
cmp
xor
idivl
incb
jl
int
mov
sarb
sub
push
jo
sub
or
and
jle
inc
xchg
push
rcrl
shrb
out
xlat
fistl
pop
cs
outsl
nop
mov
inc
and
push
mov
pop
push
imul
push
push
jbe
in
das
xchg
xstore-rng
cmpsl
inc
cmpl
jg
add
hlt
xor
xor
sub
pop
dec
xchg
mov
pop
mov
insb
orl
popf
push
leave
icebp
push
jne
or
cmp
sbb
adc
add
out
xor
mov
adc
stc
outsb
mov
cs
jns
push
lock
pop
pop
inc
int
and
adc
lods
cmp
xlat
or
push
jbe
addb
jns
cmp
xbegin
mov
xchg
add
xchg
loope
dec
jne
mov
je
aas
out
or
dec
cmp
xchg
daa
inc
xchg
pusha
imul
sub
mov
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
jmp
sahf
push
sub
sbb
inc
adc
subb
repnz
cmp
or
adc
pop
iret
das
xchg
jno
pushf
xchg
adc
cmp
insl
cs
call
stos
bswap
xor
or
shl
cli
push
imul
pop
sub
adc
test
push
lahf
dec
enter
popa
clc
nop
popa
mov
in
enter
insl
add
pusha
repnz
mov
mov
mov
mov
in
shl
test
jge
lahf
scas
fsubr
push
sub
ja
push
or
orb
mov
clc
push
xor
mov
or
les
out
fwait
cs
hlt
jmp
and
add
movl
adc
call
or
inc
xchg
pop
xchg
imul
add
cmp
sti
hlt
jecxz
cltd
hlt
movsb
iret
add
push
scas
push
cs
and
dec
and
movl
inc
cld
jnp
sbb
xchg
mov
or
cmp
cmp
outsb
cmp
adc
outsl
xor
lret
pop
sbb
adc
sbb
jl
int3
xchg
push
mov
popf
cmp
cld
xchg
test
jge
imul
stos
je
or
mov
xlat
addr16
inc
xchg
mov
int
int
sbb
xor
add
mov
mov
lahf
fmull
push
or
inc
sub
stos
push
ror
and
push
inc
dec
icebp
test
roll
bound
in
sub
insb
scas
sub
daa
sbb
loop
cmp
stos
int
xchg
sahf
insb
mov
mov
and
div
sub
cwtl
fstpt
push
add
pop
pop
or
pop
ret
dec
mov
mov
fcmovnbe
std
push
pop
dec
orl
inc
hlt
mov
sub
sub
push
pop
dec
push
out
jle
gs
stc
push
decb
cmpsl
clc
test
jp
jge
jb
stc
int3
mov
clc
inc
lods
pop
cmpb
pushf
mov
dec
mov
ljmp
fcomip
cmpsb
cmp
sub
xchg
fimuls
imull
jnp
push
add
cmp
cmpsl
in
aas
inc
inc
push
sbb
xchg
pop
sub
add
adc
inc
ret
mov
rcl
dec
faddl
mov
in
adcl
dec
jg
repnz
int3
xor
or
mov
mov
sub
fcoms
jecxz
sbb
jns
sbb
xchg
ret
pop
add
sbb
lret
mov
pmullw
jnp
sub
push
lcall
add
rorb
shlb
aad
xor
or
push
sbb
out
jne
cs
inc
loop
sbb
jo
push
and
jno
mov
ficoms
es
sub
lahf
ss
cmp
pop
push
adc
xchg
jne
js,pn
cmp
mov
sbb
jno
sbb
cmp
mov
inc
or
in
enter
sub
inc
and
jae
in
sub
sub
nop
imul
fstpl
clc
das
aaa
rcll
sbb
jbe
daa
ds
test
rclb
sbb
js
int
mulb
ja
lea
sub
xchg
and
repnz
dec
sbb
je
jns
sub
into
and
dec
fiadds
jbe
sar
dec
mov
mov
xchg
cli
push
mov
push
fisubrs
fsubl
stos
mov
testl
enter
lcall
shrl
stos
daa
sub
daa
dec
in
add
inc
push
xchg
or
jbe
push
and
adc
inc
mov
inc
orb
in
loope
into
mov
adc
mov
add
push
iret
std
cwtl
int
outsl
or
lcall
and
mov
mov
and
push
mov
sub
adc
sahf
test
mov
fwait
scas
pushl
mov
mov
pop
into
lods
add
addr16
in
jg
movsb
jecxz
sub
cwtl
jb
mov
out
in
and
fldl
jmp
sbb
sbb
cmp
cmpsb
out
mov
push
ds
notl
sbb
in
mov
pushf
inc
pop
jo
daa
lret
and
in
adc
jle
popf
or
xlat
jno
clc
jg
jp
sbb
stc
lock
add
addr16
xor
popf
jmp
xchg
cmp
sbb
mov
int3
outsl
addr16
cmp
jnp
testb
mov
inc
shrb
lea
leave
xchg
ret
paddd
dec
mov
inc
cmp
out
es
xorl
jg
xchg
mov
lock
mov
mov
jp
push
ja
xor
pop
lea
adc
insl
cmp
cltd
insb
mov
mov
add
shrd
xor
shr
mov
mov
xor
jmp
jb
jecxz
sub
push
xchg
das
mov
test
lock
cmp
mov
clc
dec
nop
aam
mov
testb
gs
xor
cltd
imul
jg
iret
dec
or
repz
test
sub
mov
sbb
jge
pop
push
push
mov
lds
scas
adc
movsb
sub
int3
bound
mov
sbb
addl
stos
cmp
push
mov
add
xlat
hlt
iret
stc
loope
xchg
bnd
loop
fwait
xor
xor
cmp
in
stc
les
cmp
mov
mov
adc
lahf
mov
jg
mov
pop
pop
dec
adc
sub
jle
add
in
es
and
mov
add
xor
popf
cwtl
mov
push
jecxz
test
dec
dec
popa
rorb
rcrb
fidivl
das
mov
int
jae
adc
cmpsb
and
or
mov
fs
jle
push
mov
xchg
fsub
shlb
push
and
mov
adc
jae
mov
jmp
out
push
sub
mov
jp
movsl
test
enter
push
mov
fs
inc
jo
insb
out
xchg
loop
push
lret
xor
xor
fldcw
mov
movsb
shlb
pop
add
push
sub
jno
bound
dec
push
push
cmpsb
mov
and
scas
pop
js
int3
push
in
pop
imul
data16
in
not
push
aam
pop
jo
or
mov
pusha
stc
pusha
jmp
pop
fbstp
fistpl
loop
fcmovnb
pop
imulb
push
data16
cmp
or
jne
les
jne
jmp
jmp
gs
mov
or
iret
cmpsb
ret
and
mov
cmp
sbb
int
mov
outsl
bound
inc
clc
mov
xor
out
inc
lret
xchg
call
mov
sbb
and
fistps
pop
js
jns
shrb
dec
adc
mov
into
rcl
int
in
mov
cmp
leave
sbb
xchg
fstps
jb
arpl
iret
popf
xchg
ja
je
push
pop
pusha
or
das
cmpl
sbb
lods
leave
pop
ljmp
iret
add
xchg
mov
repz
jno
mov
dec
sarl
repz
adc
adc
insl
xorb
jbe
add
aad
aas
inc
fsubl
adc
push
dec
dec
xchg
push
mov
out
sub
pop
fisubs
loopne
dec
sub
mov
inc
pushf
and
popa
inc
xchg
push
out
loope
sub
sbb
movsl
mov
cmc
pop
cmp
jns
sub
aam
cmp
fmull
scas
sahf
dec
insl
outsl
call
jmp
pop
outsl
jmp
lods
mov
lock
push
cmp
test
fsubl
mov
fnstcw
mov
roll
and
and
jp
sub
lock
jns
ret
mov
push
xchg
jbe
mov
sti
in
or
xlat
pop
pop
insl
test
das
outsb
clc
pop
pop
nop
xchg
shlb
add
inc
xchg
jo
lds
xchg
lret
outsl
adc
xlat
movsl
sub
jle
and
cld
cmpsb
jae
in
push
push
pop
rcl
mov
inc
clc
pop
rcrl
or
ret
and
dec
add
add
xchg
fsubl
outsb
xchg
and
outsl
mov
push
pop
into
mov
hlt
shll
add
mov
jl
lock
mov
das
mov
add
push
imul
mov
insl
mov
dec
fs
sub
dec
adc
jbe
lea
bound
jl
xor
add
jne
pop
stos
xchg
and
sbb
in
push
imul
inc
stos
mov
test
dec
inc
fcompl
push
jo
rcrb
ret
xorb
lahf
fdivl
push
out
inc
mov
out
sahf
lret
jne
scas
pop
hlt
mov
jge
popl
popa
push
stos
push
je
or
ret
xor
adc
mov
xchg
sub
fsubl
xor
lea
add
xchg
rcll
popa
in
adc
mov
repnz
icebp
je
movsb
xchg
mov
cli
outsb
aam
xlat
jns
sub
adc
imul
lahf
das
push
mov
jg
cli
pusha
dec
in
or
in
push
int3
ret
cwtl
push
aas
xchg
mov
lcall
jge
call
push
popl
int
ret
add
pop
test
insl
fcomip
dec
push
add
and
pop
je
jo
xor
std
add
xchg
out
push
cltd
xchg
sahf
dec
xor
inc
mov
mov
pop
and
orl
add
fs
xchg
adc
int
jb
adc
mov
mov
pop
cmp
std
xor
mov
out
jl
daa
fisttps
inc
jb
pop
adc
and
mov
and
inc
jne
and
pop
adc
and
jns
test
cmp
or
mov
or
shl
mov
mov
jmp
arpl
and
stos
sub
scas
les
mov
fisttpll
cmp
mov
in
add
lods
daa
inc
testb
es
jl
xor
dec
and
loopne
dec
add
fs
ljmp
nop
movsb
jo
mov
sub
and
push
cmc
push
aas
pusha
insb
sbb
xchg
push
and
cmp
add
cwtl
sbb
notl
jno
and
and
andl
mov
insb
push
cwtl
jo
pop
cmp
xchg
cltd
icebp
sbb
push
pop
jbe
das
roll
in
into
das
lret
js
dec
rorb
enter
lcall
fisttps
xor
gs
fs
int3
shrb
out
lds
pop
mov
add
nop
iret
push
out
inc
pinsrw
outsb
push
jo
mov
adc
aam
cmpsb
gs
test
scas
cmp
int
mov
inc
and
int3
fimull
insl
insb
mov
out
fdivrp
jb
shlb
cmp
nopl
pop
lcall
inc
rolb
movsb
imul
popf
or
mov
mov
xor
xchg
loop
in
xor
ljmp
pop
and
out
pusha
jbe
xchg
int
jecxz
cs
jp
aas
repnz
faddl
add
lea
push
les
xchg
or
lahf
out
add
sub
add
push
mov
mov
dec
mov
lea
sub
movsb
adc
cmpsb
stc
in
xchg
sub
ds
leave
jle
xchg
rclb
aaa
sbb
mov
cmp
insl
pop
icebp
xlat
lcall
test
add
call
loope
cmp
aaa
js
dec
sbb
dec
xchg
out
mov
sarb
stc
in
nop
or
mov
rorl
cmp
pop
lods
int
and
add
mov
sub
adc
es
and
mov
lods
jbe
sub
cmpsb
jnp
cmp
sbb
jmp
cmp
test
inc
mov
lds
inc
jo
inc
push
in
jecxz
jle
or
sbb
mov
jo
add
mov
dec
iret
lcall
or
mov
push
and
mov
pop
mov
or
xor
jnp
icebp
push
icebp
pop
pop
cmp
rol
iret
or
in
or
loopne
movsl
cmp
leave
div
in
shl
xchg
aas
cmp
add
ja
jo
dec
sbb
lcall
cmp
mov
out
sbb
sbb
hlt
popa
jae
bound
xor
sahf
bound
insb
jp,pt
xor
incb
imul
lret
and
mov
xlat
jl
or
push
mov
adc
and
scas
out
std
cmc
andl
inc
and
cmpsb
aas
loop
mov
fwait
lret
lcall
ljmp
jno
cmc
cmp
testb
and
roll
and
daa
xchg
popf
test
leave
or
push
andb
sbb
test
dec
popf
testl
jmp
clc
leave
jmp
cmp
les
inc
jae
fwait
pop
push
inc
cltd
mov
movsb
inc
xor
test
mov
add
mov
sub
mov
xchg
into
cmp
xchg
fdivs
out
or
mov
and
std
lahf
clc
cmp
dec
dec
fsubrp
jle
popa
sar
out
pop
subl
mov
jmp
mov
push
sub
pop
lds
add
jge
adc
mov
mov
xor
clc
int
mov
xchg
sub
mov
sub
out
lret
arpl
push
or
and
je
sbb
sub
add
push
adc
inc
pop
or
push
out
and
xchg
out
gs
test
push
push
cltd
pop
rorb
stos
sahf
adcl
das
adc
push
cmc
test
nop
mov
ret
mov
dec
inc
cmpsb
jne
imul
test
fdivrl
fs
subl
pusha
xchg
bound
add
mov
or
outsl
dec
push
ret
mov
jl
lock
dec
and
inc
cltd
daa
dec
insl
test
sbb
pop
in
cmpsb
aam
cmp
pop
fcomps
adc
mov
movzwl
sub
cmc
sti
and
adc
xor
xchg
gs
into
lds
push
imulb
divl
jbe
or
mov
test
imul
sbb
ret
test
andl
pop
inc
cmp
sub
push
cmp
mov
push
and
xchg
pop
xchg
or
add
popa
jbe
imul
mov
lret
or
dec
stc
push
loope
sbb
add
repz
mov
loopne
loop
jmp
mov
xor
xor
xor
or
je
shrb
cmp
adc
adc
mov
add
ret
test
ret
mov
add
xor
rorb
dec
add
aam
inc
cmp
scas
pop
xchg
hlt
cmpsb
fsubrs
mov
dec
testl
mov
lds
add
xorl
fcomps
sbb
aaa
int3
rorb
mov
push
sub
js
cmp
mov
add
pop
inc
jl
jl
jae
mov
ret
pop
xchg
mov
inc
insl
icebp
mov
adc
dec
push
push
inc
inc
lcall
dec
sub
add
lock
icebp
dec
clc
adc
jbe
and
dec
fisubrs
add
xchg
je
stos
cmp
mov
jle
push
xchg
cmp
ja
andl
imul
pop
dec
aam
or
in
dec
fistpll
mov
xor
lret
test
mov
in
xor
sub
lret
xchg
lcall
cmp
mov
mov
add
pop
loopne
pop
insb
in
loop
lea
nop
lock
stc
imull
imul
xchg
sbb
push
push
inc
popl
scas
not
insl
mov
inc
imul
and
pop
push
sbb
lret
sar
mov
cmp
mov
jnp
cmp
data16
mov
rolb
negl
cwtl
aad
out
fidivl
lret
add
sarl
jmp
insl
sbb
enter
lret
rcr
loopne
out
std
pop
inc
xchg
mov
push
jle
scas
leave
mov
push
push
arpl
mov
sarb
shll
sbb
int
add
lahf
add
sbb
jmp
fisubl
pop
and
cmp
jl
sub
loop
cli
mov
xchg
xlat
pushf
mov
icebp
adc
or
test
pop
add
stos
mov
sub
jno
dec
push
cmp
mov
decb
pop
divb
aad
das
subl
cmp
cmp
sbb
xor
in
jp
in
nop
lods
pop
cmp
xchg
and
lret
mov
and
movb
push
lds
lret
or
or
mov
cmpsl
fmuls
sbb
cld
xor
dec
push
test
pusha
push
sbb
popa
lock
push
das
push
lods
dec
jmp
enter
call
and
mov
lds
jle
out
fwait
jmp
aad
inc
add
inc
push
stos
jg
insb
inc
cmpsl
and
testb
pushl
test
cmp
jb
mov
pop
jbe
dec
cmp
test
test
push
dec
repz
std
pop
lods
jo
xor
cld
pop
sti
sbb
cmp
pop
ret
mov
jle
mov
rcll
sbb
add
sahf
and
je
shrl
out
sbb
and
orb
mov
rclb
fwait
mov
jae
mov
jo
mov
daa
fiadds
imul
icebp
mov
xchg
push
pop
pop
icebp
int
pop
mov
xchg
add
mov
out
imul
xlat
cmp
lods
std
mov
clc
xor
call
lcall
andb
dec
dec
xchg
out
loop
les
jne
adc
fnsave
lret
ljmp
gs
inc
add
sub
and
mov
test
fs
iret
fcompl
or
loopne
add
xor
mov
jo
cmpsl
push
add
movsb
or
xchg
pop
push
lea
in
lret
or
fsubr
test
push
stos
inc
hlt
mov
dec
movsb
add
stos
test
orl
test
stc
pop
push
fmull
cmpsb
mov
push
rorb
pop
jnp
or
daa
cmp
movsb
cmc
sub
hlt
inc
out
push
push
fdivrs
or
outsl
repnz
add
loopne
sahf
sub
xor
and
xlat
xor
cmc
pop
pop
dec
inc
mov
pop
inc
prefetcht2
xchg
pop
push
jge
mov
adc
cmc
xlat
cld
sti
cmp
push
les
pop
fs
cwtl
xchg
rorb
dec
test
in
mov
iret
testb
mov
in
fnsave
outsb
daa
mov
inc
int
test
mov
mov
xor
or
lret
es
aam
lret
fld
or
gs
mov
add
lds
xchg
sub
sub
mov
mov
push
addr16
cltd
pushf
jae
mov
add
push
hlt
leave
sahf
dec
xchg
enter
xchg
imul
dec
or
push
xchg
jecxz
sub
call
push
or
push
sahf
mov
mov
xchg
insl
cli
rcrl
jge
sub
popa
dec
mov
inc
sbb
adc
repnz
xor
push
pop
xchg
cs
mov
xor
mov
mov
mov
xor
jmp
movsb
outsl
test
movsb
ss
sahf
cmp
lds
push
cmp
add
xor
in
fsubl
fsubl
in
out
fimuls
dec
jecxz
shlb
imul
adc
push
in
add
inc
sarl
add
imul
cmp
sub
mov
pushf
pusha
xlat
sbb
or
fadd
out
arpl
inc
adc
sub
in
push
rorb
inc
cmpsb
jge
cs
sahf
inc
fs
imul
mov
lock
pop
out
cmp
arpl
js
adc
xchg
insl
and
pop
cwtl
dec
cli
movsl
inc
mov
inc
ret
aad
fsubrs
pushf
dec
test
lret
stc
in
mov
dec
pushf
add
ljmp
lods
std
cmp
shr
xchg
mov
fldcw
fisubs
pop
dec
pop
mov
iret
mov
jmp
adc
in
inc
ljmp
addr16
xchg
pop
inc
adc
scas
lock
and
xlat
cmpsl
pusha
pop
mov
cmpsb
pop
fs
push
push
push
inc
sti
movsl
lahf
lahf
and
push
adc
sbb
add
mov
add
jno
push
out
mov
mov
scas
xchg
mov
inc
outsb
cmp
aas
dec
loope
fmul
lods
sub
orl
xlat
sbb
jnp
lds
cmp
jbe
mov
pop
jno
jp
dec
jge
xchg
mov
dec
je
in
pop
pop
cmp
arpl
ds
pop
add
xor
xchg
cs
lods
inc
jp
pop
testl
pop
cmp
fistps
ret
mov
fcomps
iret
outsb
sbb
push
iret
js
mov
xlat
and
cmovae
sbb
fisubl
mov
and
pop
mov
bound
arpl
pop
xchg
sbb
adc
enter
hlt
lds
mov
mov
movb
mov
jecxz
xor
lahf
clc
arpl
adc
mov
push
jae
leave
js
or
mov
repz
pop
sub
mov
aam
pop
xor
cmpb
sbb
inc
les
or
inc
fs
jnp
adc
fidivrl
dec
cs
mov
pusha
pop
shrb
dec
xor
xchg
mov
bnd
fst
mov
mov
in
dec
cwtl
jno
call
in
aam
inc
lods
lock
enter
or
jmp
mov
xor
cmp
cmp
jmp
jno
lds
lret
cmp
in
scas
inc
stos
cwtl
jbe
std
pop
mov
and
inc
inc
xchg
jnp
ljmp
in
mov
mov
push
in
js
popf
addr16
jp
mov
insb
clc
cmc
mov
fistpl
outsl
or
push
mov
push
iret
pusha
jae
jns
xchg
sub
mov
push
push
jmp
test
dec
shrl
push
xchg
mov
jae
out
mov
mov
lock
aas
pop
arpl
cmp
ja
ret
jno
outsl
dec
dec
cmp
aam
fwait
xor
and
mov
and
lahf
dec
mov
sbb
jmp
test
and
xlat
iret
sahf
into
mov
in
fs
int
adc
test
pop
dec
mov
popl
dec
cs
and
test
scas
popa
add
add
or
fidivrs
dec
ja
pop
fisttpl
imul
dec
sbb
sti
xor
test
pop
jmp
xor
xchg
mov
cmp
lret
out
xchg
in
jnp
pop
out
cwtl
mov
xor
lock
arpl
dec
cmp
shrb
scas
pop
cmp
sbb
sti
loopne
dec
fsubr
loop
repz
cld
fildl
dec
int3
xchg
push
sub
test
sbb
shrb
inc
rolb
addb
rol
test
aaa
insb
mov
cmc
pusha
shll
je
mov
and
arpl
mov
inc
mov
add
adc
mov
shl
xchg
clc
add
incb
add
sbb
sbb
sub
stos
and
jb
xchg
scas
sub
pop
es
jg
push
mulw
inc
dec
mov
out
int
jnp
xchg
shlb
mov
inc
rcrl
dec
out
or
int3
adc
mov
cli
cltd
mov
cmc
add
in
subl
xchg
std
ret
cmpsl
push
cmp
pop
popa
sub
sahf
add
arpl
push
pusha
hlt
sub
movsl
js
cmp
enter
mov
lock
sarl
cmp
xchg
jns
aas
adc
ljmp
xor
adc
pusha
cmp
arpl
xchg
outsl
outsb
sub
movsb
pop
push
icebp
movsb
pusha
outsl
xchg
ja
int
cli
sbb
mov
xchg
xor
ds
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
jmp
scas
rcrb
and
ja
lods
scas
js
scas
stc
mov
push
push
rclb
lea
mov
fidivrl
xchg
push
out
mov
out
jle
adc
cmp
push
jl
sub
mov
xchg
add
movsl
push
ret
add
mov
hlt
mov
sahf
jge
in
dec
jmp
out
push
lods
mov
mul
movsb
mov
xchg
negl
into
cmp
adc
scas
xchg
int3
add
ss
mov
sub
jle
outsb
pop
iret
pop
bound
ljmp
bound
fs
mov
jns
add
dec
mov
icebp
mov
cmp
adc
cmc
cmpsb
jmp
arpl
stc
ds
loope
pop
jge
cmp
push
fadds
xchg
mov
loop
pop
inc
or
ds
sahf
cmpsb
data16
lcall
les
mov
adc
dec
movsl
inc
xchg
jno
pcmpeqb
lcall
leave
enter
test
pop
mov
sbb
dec
adc
mov
push
xchg
sbb
push
std
iret
mov
pop
add
mov
testl
daa
jnp
orl
lods
gs
cmp
shl
xchg
or
cmpb
xor
cmp
out
addr16
cmp
dec
dec
push
fisttps
xor
push
fidivl
inc
add
cmp
orb
test
mov
or
and
fisttpll
cli
cmp
incb
add
in
inc
fsubs
jg
push
sbb
dec
ret
xor
sub
rclb
inc
dec
je
inc
dec
add
int
push
nop
cld
int3
imul
ja
test
nop
popa
inc
push
in
mov
xor
test
push
ficomps
rorb
or
mov
jno
push
out
fs
das
repnz
xchg
xchg
inc
sub
pop
clc
fcmovu
in
lods
fldcw
inc
mov
jns
aad
rep
pop
pushl
mov
mov
jmp
sub
jecxz
aam
push
sub
mov
fimuls
mov
test
xchg
in
ljmp
clc
mov
fwait
sbb
sbb
inc
inc
cmp
subb
ljmp
fisttps
pop
leave
add
ds
cmpsb
sbb
movsl
jp
jno
dec
adc
ljmp
adc
mov
sbb
popf
aad
call
aam
cld
and
test
mov
imul
mov
rorb
xor
in
fisubrs
cmpb
pop
cld
sub
loope
je
sbb
sub
or
shr
mov
xor
cs
call
call
dec
stos
inc
incl
cmp
mov
fdiv
xor
push
mov
jno
xchg
xor
adc
xor
xor
mov
stos
out
sti
mov
repnz
cvttps2pi
insl
mov
int
mov
push
insb
push
dec
outsb
add
dec
lcall
insl
add
xchg
sub
in
pop
mov
inc
mov
loope
imul
shlb
sbb
or
mov
and
mov
int
xchg
push
mov
inc
jae
pop
adc
mov
shlb
mov
jnp
test
push
out
inc
add
imul
xchg
mov
pop
sub
and
inc
cmovbe
iret
mov
push
adc
cmpsb
cmp
iret
enter
push
mov
jb
incl
and
stos
pop
add
xor
lret
fcompl
or
aam
cwtl
add
dec
cmp
and
sub
or
lds
clc
pop
mov
inc
inc
lods
xchg
sahf
add
into
add
mov
rolb
lret
int
add
xchg
test
cmp
xlat
cmpsb
inc
mov
adc
lret
pop
je
xor
pop
pop
inc
push
or
inc
pop
ljmp
andb
mov
arpl
sbb
add
sub
and
out
into
inc
dec
and
mov
cmp
clc
popa
stos
and
pop
cld
es
icebp
ja
arpl
cmpsb
les
mov
add
imul
mov
outsl
or
stc
dec
mov
cmp
pop
push
xchg
xor
test
mov
cmpsl
stc
sub
sbb
sub
pop
ja
rorb
inc
out
and
test
adc
dec
cmp
jne
push
push
xor
bound
jae
mov
in
andl
iret
jbe
jle
pop
mov
jg
push
int
mov
inc
rorl
cmc
mov
mov
ds
push
xor
xor
mov
jmp
inc
mov
inc
inc
nop
scas
shl
adc
test
mov
push
cmp
push
sbb
mov
add
push
sbb
dec
test
push
sbb
es
mov
and
jmp
or
imull
mov
jmp
jle
aas
les
pop
lret
cmp
fs
sahf
pop
xchg
pop
xorl
mov
outsb
cli
and
iret
das
xor
xchg
sbb
dec
int
add
xchg
gs
loop
les
xchg
mov
movsl
mov
shrl
sbb
xchg
enter
add
stos
movsl
ret
daa
inc
mov
adc
in
mov
cwtl
aaa
out
into
cmp
push
inc
fcmovne
pushf
push
sti
daa
ja
pop
dec
jmp
adc
cmovbe
cmp
test
mov
shlb
cltd
push
cmpsb
cmpl
mov
jle
scas
mov
mov
mov
push
sar
popa
mov
daa
int3
in
addr16
and
jg
jbe
push
sub
out
pop
nop
xor
divb
mov
mov
dec
shll
testb
addl
mov
sahf
add
aas
dec
mov
sbb
cmc
add
xlat
add
pop
movsb
inc
js
push
cmp
into
push
call
push
bound
push
push
or
pop
aad
and
es
mov
sub
jg
jmp
inc
mov
cwtl
orl
mov
adc
adc
cld
push
push
cmp
adc
xor
fs
push
ror
data16
jmp
subb
ficomps
cmp
mov
sbb
add
dec
jp
xor
into
out
dec
scas
cmc
mov
aas
pop
lahf
outsl
xchg
je
inc
outsl
pop
imul
mov
pop
mov
jge
mov
adc
or
xorb
mov
push
imul
push
stc
or
int3
mov
scas
pusha
or
jecxz
rorl
stos
push
jmp
add
sbb
mov
cmovp
pop
mov
inc
arpl
sub
imul
stc
sbb
jl
incl
push
out
mov
jmp
jo
lock
loope
stos
divl
add
rclb
faddl
xor
stos
adc
cmp
adc
ljmp
insb
xchg
push
lret
inc
xchg
gs
sub
popa
out
pushf
stos
sbb
fwait
cmp
repz
in
mov
inc
push
loope
jno
jp
xchg
imul
xor
inc
mov
pop
fucomi
cmc
jecxz
adc
jb,pt
jle
and
mov
scas
push
dec
add
sub
jge
sub
jmp
dec
pop
mov
pop
ljmp
aad
jbe
add
or
mov
add
mov
rorl
stc
push
dec
xlat
cwtl
adcb
xlat
add
mov
mov
sarl
mov
lods
pop
mov
pushf
push
xor
push
mov
jg
mov
jmp
jg
pop
gs
cmp
scas
sbb
push
test
test
jge
xchg
js
out
sub
jnp
int
cmp
adc
sahf
xor
dec
sub
or
pop
ja
mov
xchg
add
cld
in
loope
dec
push
test
jno
imul
into
or
inc
adcl
out
push
xor
jl
add
lret
daa
dec
aad
adc
aas
or
jl,pn
aas
mov
or
and
adc
movsl
rolb
fldcw
ret
jne
jns
and
adc
test
sbb
aaa
ret
aas
test
and
in
ret
push
mov
cmpsb
push
aad
stos
mov
sbb
stos
std
outsb
imul
and
cwtl
movsb
xchg
xchg
add
xchg
jnp
fsubrp
bswap
sar
dec
adc
test
stc
push
sub
les
sub
jge,pt
loope
jb
cltd
mov
cli
cli
inc
stos
mov
xor
xchg
lds
pop
inc
test
mov
mov
cld
fisttps
arpl
or
push
mov
mov
aam
mov
cs
or
pop
push
pop
lahf
sti
popl
insb
pop
cmp
mov
cs
sbb
and
and
lds
sub
mov
jecxz
repz
xchg
subl
add
sbb
fmulp
cltd
jo
daa
xchg
daa
pop
cs
sbb
frstor
test
je
adc
pop
stc
negb
imul
test
mov
jb
xor
mov
jmp
negl
and
push
out
stos
out
out
out
adc
aas
ljmp
ds
rclb
cld
or
jno
jo
sbb
js
and
pop
dec
push
enter
lods
js
cmp
push
and
pop
mov
pop
add
jbe
adc
hlt
xor
push
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
jmp
and
mov
loopne
lods
scas
push
pop
adc
dec
scas
or
cmp
cmp
pop
sub
je
pop
and
cs
mov
xchg
fwait
mov
push
inc
sub
scas
dec
in
pop
aas
lods
sbb
adcb
ljmp
cmc
mov
aas
and
mov
pop
test
mov
out
sub
push
out
cmp
nop
sti
dec
sbb
fists
pop
cmp
or
pop
shrb
push
aas
push
mov
jecxz
add
xchg
sub
cmp
inc
mov
dec
xor
mov
in
repz
sub
mov
in
repnz
or
xor
js
cmp
adcb
xchg
inc
fwait
mov
std
jmp
repz
lods
or
ficompl
pop
insl
in
bt
push
and
dec
aad
cmpsb
jb
mov
push
aad
sarl
or
orb
and
test
insl
shll
mov
jg
mov
push
inc
jle
cs
es
jp
inc
lock
fs
push
popf
icebp
xchg
xchg
dec
fsts
int3
popa
xchg
mov
ss
repnz
dec
mov
aam
rolb
clc
mov
out
mov
mov
test
add
cmc
out
lods
outsb
xchg
push
fmull
push
enter
sbb
push
in
pop
mov
insb
fiaddl
jno
push
mov
xchg
bound
and
jno
setbe
xorl
jb
sub
jbe
sub
mov
and
pop
dec
xorl
mov
pop
aas
push
rorl
pop
add
ss
jge
imul
add
or
aam
jl
or
pop
cli
xor
sti
fcmovu
sbb
stos
aaa
pop
or
mov
cmpsb
add
imul
cmpsl
ljmp
mov
cmp
mov
mov
xchg
push
loop
loopne
add
mov
iret
dec
mov
and
subb
mov
in
fisubs
in
or
sub
leave
test
les
pop
and
dec
or
fdivr
into
dec
arpl
ljmp
xchg
sbb
dec
pop
jge
sbb
jns
movsl
subb
xor
lcall
jnp
outsl
pop
aad
lea
pop
push
nop
hlt
adc
movsb
adc
scas
and
adc
lods
cmp
xor
xor
mov
loopne
lods
mov
jmp
inc
mull
xor
sub
dec
outsl
fadds
inc
lods
jae
mov
fiaddl
xor
push
add
or
je
in
std
xor
sahf
fsubr
out
xor
nop
mov
xor
mov
fidivs
clc
mov
out
popa
lods
inc
les
inc
mov
and
adc
data16
mov
or
or
mov
mov
push
pop
adcl
adc
sbb
push
xchg
cmp
andb
adc
shll
iret
cmpb
dec
fdivrl
in
outsl
sub
adc
ss
pop
mov
mov
sbb
ljmp
movsl
sbb
int
sbb
dec
fldcw
and
out
adc
add
cltd
sub
push
fwait
sbb
outsl
pusha
aad
sbb
les
jne
push
loop
mov
sti
inc
nop
imul
xchg
adc
mov
icebp
cmp
jo
mov
shll
sub
fistpl
js
aas
pop
xchg
dec
push
jno
test
aaa
outsl
and
out
xor
shrl
xchg
pop
mov
popf
lds
je
je
repnz
pop
cmc
mov
adc
jecxz
outsl
jl
adc
incl
addr16
ljmp
test
cld
bound
stos
inc
int3
push
fists
rep
xchg
xor
pushf
xchg
movsl
xor
push
or
mov
inc
das
pop
push
xor
adc
inc
inc
jb
mov
stos
test
and
lcall
add
dec
lea
mov
xor
and
xor
ffree
cmp
dec
into
shr
cmpsb
mov
aam
lods
shll
jg
pop
outsl
cld
jns
push
jge
imul
repz
test
inc
sti
xchg
cltd
jo
jle
cmp
jns
in
sbb
add
shl
push
fdivrs
bound
sub
push
ror
or
xchg
inc
outsl
push
hlt
push
sub
sbb
outsb
sbb
inc
add
pop
lret
jl
cli
test
fmul
int
test
fcoml
sbb
jp
sbb
fwait
mov
je
or
add
mov
xacquire
or
sbb
in
stos
int3
loope
ds
int3
pop
inc
inc
enter
mov
xor
shl
mov
mov
xor
mov
mov
jmp
or
jns
stc
repz
jp
or
cmp
xchg
jno
sbb
stos
or
jb
test
xchg
push
fsubrs
pop
adc
pop
rolb
outsl
mov
call
pop
push
loope
unpcklps
or
jmp
or
push
cmp
incl
es
and
push
jno
inc
out
iret
inc
push
add
inc
mov
out
insl
push
aam
jmp
shrl
in
sub
mov
out
sbb
xlat
jmp
mov
mov
out
sub
adc
aam
loopne
push
lea
mov
data16
jno
sbb
repz
sub
loope
xchg
xchg
push
ljmp
sbb
push
pusha
int3
mov
sub
nop
outsb
daa
inc
in
lret
icebp
mov
xchg
mov
jno
out
pop
testb
mov
push
push
cli
cli
mov
jae
fldl
mov
lods
into
sarb
jns
ja
fcompl
gs
enter
jbe
mov
insb
inc
imul
lahf
add
out
pop
push
loope
cmp
frstor
cmp
std
jnp
in
lea
jne
push
xchg
dec
cli
jns
add
fsts
dec
test
xchg
pusha
inc
adc
addb
test
or
jg
push
enter
clc
mov
or
add
sub
mov
loop
icebp
ljmp
stos
mov
ja
mov
adc
add
push
loop
jmp
into
int
inc
js
inc
js
sub
popa
mov
test
arpl
ret
rcrl
push
test
js
les
cmp
les
sbb
je
jae
mov
ficomps
leave
mov
and
jecxz
adc
dec
jge
xchg
in
repz
xchg
push
jae
push
insl
mov
pop
sbb
mov
out
adcl
mov
aaa
int
jp
inc
sbb
js
daa
or
xor
out
dec
loope
and
lret
jbe
mov
jns
add
push
xorl
fcmovb
sahf
test
repnz
ret
out
jge
sbb
adcb
adc
frstor
push
mov
insb
mov
cwtl
jecxz
dec
pusha
ror
xlat
sbb
xchg
mov
scas
push
cmp
sub
stos
or
xchg
push
mov
cltd
adc
dec
inc
imul
fs
adc
cmpsb
rorl
pop
mov
push
adc
pusha
cmp
xor
add
jg
inc
adc
icebp
inc
pop
xlat
and
nop
jge
aas
xchg
cwtl
ljmp
out
adc
adc
mov
and
add
loopne
lret
cmpsl
xor
movsb
mov
mov
jecxz
inc
arpl
add
mov
xchg
mov
rcrl
mov
inc
jb
or
lret
sti
mov
test
data16
xchg
test
divb
xchg
inc
andl
outsl
insl
ljmp
adc
pop
push
aad
sahf
ds
jmp
pop
insb
pop
sbb
icebp
popa
adc
add
in
add
into
aad
outsb
sbb
jecxz
push
push
push
jmp
and
and
fisttpll
xchg
xchg
mov
mov
ds
sub
xchg
and
xor
sbb
inc
xor
jl
pop
fisttpl
and
dec
xor
stos
std
add
add
enter
adc
les
inc
or
fsubp
lods
shl
sbb
shr
jne
fstpt
xor
rolb
sbbl
inc
add
mov
cmp
aam
inc
cmpl
push
jle
cmpsb
mov
push
ljmp
or
test
push
add
jmp
test
je
jp
shl
mov
in
ja
scas
enter
sbb
mov
in
mov
mov
and
rolb
incb
aas
mov
push
cmpsl
fsubrp
data16
fldenv
dec
push
mov
enter
and
popf
in
pop
in
jg
mov
jmp
out
iret
push
adc
jae
out
xlat
jmp
loopne
sbb
xchg
loop
aad
cltd
scas
js
std
mov
adc
inc
inc
and
xchg
lcall
lods
xor
mov
push
popa
xchg
in
push
push
int3
and
add
inc
mov
jno
test
hlt
xchg
out
jp
push
fwait
xor
jbe
insl
lds
or
xchg
imul
sub
xchg
jle
cs
mov
data16
cs
sub
mov
dec
jnp
xor
not
movhps
mov
int3
or
pop
fldt
les
xchg
mov
push
mov
mov
imul
adc
jmp
mov
or
mov
mov
push
pushl
jmp
aaa
or
js
stc
sub
out
aam
je
cltd
or
cmp
cmp
in
repz
or
jne
les
pop
jbe
dec
xchg
cld
cmp
out
mov
jp
inc
mov
outsb
cmp
aas
push
mov
ljmp
mov
xor
mov
or
or
outsb
mov
add
mov
or
pop
iret
pusha
xor
out
scas
sub
cmpsb
cmp
xor
pop
pop
cmp
shlb
bound
adc
adc
push
dec
pop
xor
mov
inc
and
pop
out
scas
push
xor
pop
cmpsl
sub
aaa
mov
or
data16
out
and
mov
dec
lahf
test
dec
in
clc
repnz
dec
sub
insl
sub
xor
cmpsb
out
cld
syscall
mov
cmp
pop
push
pop
addb
in
nop
ret
repnz
push
pop
jmp
sub
add
cmp
fs
lods
dec
imul
cmc
pop
icebp
insl
cmpsl
rcrb
sub
push
jg
cmp
jae
mov
push
adc
or
nop
popf
adc
pop
mov
adc
jl
es
nop
push
mov
mov
xchg
xchg
mov
add
loopne
outsb
mov
lret
mov
out
mov
xchg
les
push
adcb
pop
xor
jle
orb
push
or
mov
aas
je
mov
dec
xlat
aad
cmc
scas
ss
jae
sarl
mov
sahf
stos
and
imul
mov
push
inc
lea
xchg
push
jl
and
xchg
mov
dec
cmc
and
cs
pop
je
int3
adc
testl
sti
adc
ss
lcall
cmpl
enter
stos
mov
aad
gs
and
out
ljmp
nop
add
arpl
add
and
arpl
out
jge
inc
adc
sbb
sbb
popa
stc
orl
daa
dec
sub
jge
adc
and
or
mov
jl
aam
mov
xchg
fnstsw
inc
or
sub
addr16
imul
mov
xor
mov
add
vpmulhuw
mov
or
outsl
mov
dec
or
aad
push
fists
popf
push
rorl
mov
cmpsl
push
add
adc
sub
sbb
cmp
and
in
es
ja
add
loope
mov
test
lock
inc
mov
xlat
stos
pop
mov
scas
adc
sbb
loopne
inc
or
fldt
and
jno
mov
mov
cmpsb
lea
insb
aad
push
jb
movsl
icebp
mov
cmovo
cs
pop
gs
int3
cmpsl
scas
jns
in
or
push
pop
push
stos
jb
pop
sub
je
mov
inc
mov
push
lods
mov
xor
sbb
iret
xor
xchg
ret
inc
test
mov
rcrb
pop
cwtl
pusha
and
daa
mov
xlat
pop
xchg
push
loope
push
repz
in
out
add
daa
hlt
jmp
push
sub
cmp
inc
iret
push
pop
repz
dec
sbb
mov
ja
adc
gs
fisubrs
std
jb
pop
popf
aas
push
push
adc
mov
out
mov
inc
and
xchg
push
lock
cmp
mov
in
shrb
stc
dec
or
inc
int
mov
or
jae
or
arpl
pop
fidivl
add
jmp
cmpsb
push
loopne
stc
inc
aad
inc
cmp
ljmp
mov
imul
fcomps
icebp
mov
cs
enter
sub
push
iret
popa
in
sub
sti
jb
xchg
sbb
aam
pop
sbb
in
mov
pop
ret
rcl
daa
and
jns
cmp
xchg
lret
aad
outsl
in
mov
fmull
push
or
cmp
push
inc
mov
add
ljmp
arpl
loopne
xchg
pop
cmp
das
ffreep
sub
xchg
add
in
xlat
repz
iret
mov
mov
sbb
leave
sbb
repnz
cwtl
mov
sub
add
ss
into
xchg
ja
xchg
notl
mov
and
sahf
xor
dec
subl
unpckhps
lcall
mov
mov
and
into
lock
iret
mov
jbe
rol
dec
xchg
stc
outsb
addr16
jae
or
dec
pop
pop
jo
outsl
and
xchg
lcall
fs
add
mov
push
lret
mov
test
xor
adc
popa
and
daa
imul
mov
push
jns
in
les
ret
stos
or
data16
mov
fidivrs
push
call
mov
mov
shrd
shr
shr
xor
jmp
repnz
pop
loop
fsubrs
fimuls
push
push
jo
xchg
sub
jp
xor
adc
jo
push
jecxz
icebp
test
repz
pop
mov
mov
xchg
push
mov
scas
adc
lock
sub
enter
lods
adc
pop
cmp
outsb
outsl
int3
push
pop
pop
decl
adc
popf
jne
in
jmp
pushf
out
ret
adc
test
imul
fwait
out
out
andnps
mov
repnz
cmp
inc
cmp
xor
addr16
out
enter
fstps
movsl
cmpl
and
xor
movntq
dec
je
stc
dec
mov
xchg
push
jle
sub
les
lahf
fs
loop
ss
pusha
mov
addr16
repnz
or
in
sub
fdivp
sub
inc
adc
out
jge
fildl
js
mov
data16
inc
xor
add
movsb
cmc
enter
xchg
xor
mov
in
xor
and
cmp
jp
push
in
clc
into
es
movsb
ret
adc
sbb
jmp
in
test
ja
sub
je
out
fstps
outsl
adc
mov
cltd
mov
pop
add
adc
adc
addb
mov
mov
mov
inc
sbb
mov
call
mov
inc
jp
test
in
push
xchg
stc
xchg
adc
roll
dec
in
jl
and
jp
lret
orb
std
mov
push
push
lods
jae
out
or
adc
adc
push
pushf
leave
ret
and
pop
push
ljmpw
add
loop
aaa
xchg
pop
mov
xchg
mov
out
add
adc
paddb
inc
adc
adc
in
fstpt
movsb
and
pop
add
jae
lea
pushf
iret
adc
in
setge
iret
cmp
push
bound
mov
stos
dec
push
popaw
sarb
cltd
push
ljmp
adc
and
mov
sub
and
dec
popf
pop
xchg
inc
lret
sbb
pop
es
test
mov
cwtl
xchg
inc
lahf
mov
pop
jns
add
cld
popw
sbb
push
add
xor
fdivr
add
cmp
mov
xchg
es
push
cmp
push
imul
add
jbe
cmpsl
xchg
aaa
xchg
sub
orb
mov
dec
xchg
stos
mov
out
cmp
mulb
push
sub
jns
dec
cmpsb
scas
cmc
into
les
dec
mov
cmpsb
jne
jno
dec
in
cli
cmpsb
lods
imul
lret
test
repnz
inc
pop
jnp
ret
cmpsb
mov
aam
jg
call
cld
add
aam
adc
rolb
stos
jne
adc
shlb
jno,pn
mov
sub
push
or
nop
cli
neg
jbe
xchg
call
scas
jno
mov
jg
in
add
mov
jno
add
dec
sbb
lods
bound
cmp
mov
enter
mov
out
fs
dec
xchg
push
mov
in
jns
loope
fs
xor
push
sbb
testl
ljmp
or
jg
xchg
mov
shrb
pushl
aaa
pop
test
ja
and
pop
jo
je
cltd
cs
jmp
mov
push
mov
mov
mov
cld
sub
popa
jne
push
sub
xchg
inc
and
rorl
mov
or
push
inc
fs
out
or
xor
cmc
in
xchg
xor
inc
lds
mov
xchg
or
sub
jno
out
out
pop
inc
and
sti
sbb
notl
dec
movsl
fwait
call
mov
test
stc
push
xor
iret
fcomp
push
xchg
int3
lods
loop
jns
and
push
shl
mov
adc
gs
pop
mov
outsl
push
jge
cld
shlb
dec
jno
mov
jns
dec
aas
data16
pop
out
imul
push
jmp
inc
cmp
sbb
and
stos
cltd
and
inc
sub
mov
arpl
mov
aas
orb
clc
pop
daa
call
push
je
adc
sbb
adc
inc
es
sub
les
in
fidivrl
loopne
loopne
xchg
sti
mov
push
and
mov
addr16
cmp
adc
mov
mov
out
cltd
jnp
mov
stos
data16
cmpsw
in
sbb
jge
fstl
mov
outsb
sti
push
enter
loop
dec
dec
mulb
into
je
stc
lea
rcrl
lcall
test
lods
and
cwtl
movsl
imul
repnz
aas
dec
xor
rcrl
fists
mov
mov
jmp
in
and
dec
mov
xorb
jnp
push
cmp
idivl
out
or
jmp
jecxz
cmp
fsubs
cmp
dec
rcrb
mov
sbb
jge
out
dec
xchg
outsb
cmpsb
lods
adc
les
clc
inc
xchg
pop
dec
fs
fstpl
into
in
cld
lds
into
xor
pop
push
daa
sub
cli
and
out
jp
xchg
movsl
dec
fidivrs
pop
and
sbb
cmpsb
xor
or
xchg
jbe
pop
add
outsl
lahf
sbb
movsl
sbb
setg
orl
insl
fstpt
stos
push
pop
ljmp
js
fprem
sbb
out
aad
loopne
push
loop
sbb
xchg
cmc
dec
mov
pusha
push
fdivrl
in
rcrb
dec
push
std
dec
mull
xchg
jne
inc
jnp
dec
insl
mov
imul
dec
lret
mov
dec
dec
jecxz
popa
test
and
leave
sahf
pop
inc
push
jecxz
leave
icebp
cmp
mov
and
cltd
dec
fnstenv
add
ror
stc
mov
into
out
loop
xor
or
add
sbb
mov
std
dec
mov
sbb
outsl
shll
fisubl
decb
sbb
add
scas
cli
loopne
mov
inc
jnp
scas
push
in
mov
cltd
push
or
pop
add
outsb
lock
lret
out
jae
cmp
add
pusha
sarl
dec
out
aad
xchg
sub
jne
insb
dec
mov
dec
xlat
adc
mov
sub
test
jp
mov
mov
xchg
enter
sub
jp
sbb
cmp
push
jbe
pop
jno
mov
ret
xchg
in
mov
ror
push
cmpsl
jnp
sub
sub
pop
imul
sbb
xor
imul
inc
cmc
xchg
scas
xor
add
fsubs
xchg
rorl
cltd
stos
loopne
cmpsb
xor
and
adc
pop
xchg
std
out
cmpb
pop
pop
imul
sub
mov
imul
pushf
enter
leave
arpl
mov
or
popf
fsubs
test
inc
pushf
sbb
ljmp
neg
sbb
mov
jge
repz
ljmp
mov
fnstsw
xor
ret
das
sbb
mov
xchg
dec
xlat
mov
call
adcb
addl
js
es
mov
lret
inc
pushf
xchg
cli
push
xchg
clc
imul
adc
cmp
pop
mov
add
int
dec
enter
shll
sti
mov
fsubrs
scas
pop
lahf
dec
daa
pop
pop
test
iret
nop
adc
pop
mov
test
jnp
movsb
outsl
ficoml
enter
lcall
sahf
mov
mov
mov
neg
xor
icebp
popf
sub
jo
cs
stos
enter
or
mov
cmc
mov
fiadds
mov
inc
or
or
jne
mov
cmp
aas
xor
xlat
mov
dec
push
push
aam
sbb
nop
mov
test
loop
add
pop
std
je
push
mov
pop
xlat
pop
vpunpckhqdq
std
in
loopne
das
in
jmp
mov
sub
stc
jne
push
pop
sbb
push
cmp
mov
repz
jle
jge
lods
push
pop
xchg
data16
popf
rcrb
jp
les
mov
add
das
pusha
xor
outsb
fsubrl
jl
xchg
push
pop
pop
push
popf
inc
inc
stos
loope
dec
or
inc
cmpsb
jmp
pushaw
and
xchg
push
pushf
push
mov
imul
or
or
cmpsb
dec
leave
dec
push
enter
push
fstl
inc
dec
sbb
and
dec
leave
lahf
aad
nop
push
inc
lret
jp
adc
into
cld
loopne
mov
mov
jb
push
xchg
test
cld
inc
lds
mov
dec
lahf
pop
scas
add
nop
mov
in
jmp
enter
adc
int
imul
dec
loop
test
and
xor
and
inc
jnp
push
iret
mov
inc
mov
inc
testb
mov
cmc
addl
loop
xor
xchg
inc
out
cmp
add
je
mov
mov
inc
push
int3
xchg
xchg
test
aam
rorb
xor
out
je
ljmp
xorb
fisubs
jne
int
push
sbb
and
notb
inc
adc
dec
adc
xchg
loope
ljmp
fildll
addl
jno
testl
cmp
adc
mov
test
add
or
adc
test
out
nop
push
push
mov
cmpsb
pop
xchg
sbb
adc
fnstenv
test
xor
jbe
or
loopne
loop
nop
dec
sub
mov
arpl
mov
inc
pop
xchg
mov
arpl
je
jnp
push
push
push
call
shld
shl
jmp
lods
jecxz
sarb
sub
hlt
gs
je
pop
pushf
outsb
xor
push
cmp
xor
sub
inc
jl
test
xchg
lret
out
fwait
aaa
sub
push
inc
mov
sarb
mov
pop
pop
and
push
shll
movsb
imul
adc
dec
inc
or
clc
push
pop
pop
xchg
test
sub
jmp
sub
or
and
cmp
mov
shll
or
lods
sub
jmp
ss
lcall
adc
lahf
xor
iret
pop
xor
add
decl
mov
pop
pop
aad
inc
cli
jns
pop
inc
dec
int
push
jle
sbb
fiadds
dec
cld
mov
in
or
add
pop
mov
pop
xchg
mov
push
movsl
jmp
mov
cli
outsl
xchg
fcompl
adc
je
pop
test
stos
and
into
iret
lds
mov
lock
push
jb
loopne
or
stos
pop
cmpb
xor
faddl
xor
ret
pop
mov
pop
cmp
fnsaves
cmc
sub
push
cltd
aas
imul
pop
rcr
sub
flds
dec
repnz
lds
mov
fcoml
lods
loope
dec
mov
sbb
popa
lds
sub
pusha
add
mov
fwait
sub
outsb
sub
stos
mov
or
popa
out
ret
push
mov
into
push
xchg
sbbl
adc
fisubrl
scas
sub
mov
cwtl
movsb
mov
std
adc
je
into
das
outsb
xor
push
outsb
int3
aad
xchg
adc
ret
lods
jg
jg
js
xchg
lea
mov
fcmovb
pop
sbb
jb
mov
mov
sbb
rcrl
jbe
xchg
lods
dec
dec
or
and
add
xor
aam
jl
lcall
and
push
ds
pop
fildll
push
dec
sbbl
add
push
rcrl
xchg
les
inc
mov
push
xor
mov
test
adc
loop
lahf
setg
lock
mov
pop
scas
sarb
stos
push
int
and
xor
test
jns
inc
inc
in
int
callw
add
ja
push
ss
lret
outsl
leave
sarl
ret
xlat
fcmove
out
mov
or
pop
daa
sbb
pop
adc
add
push
cmpsl
iret
scas
mov
mov
daa
es
sbb
insb
push
pop
and
pop
pop
cvtdq2ps
sub
test
les
push
xor
mov
ljmp
idivl
mov
subl
ficompl
js
cld
xor
sub
hlt
xchg
bound
out
pop
pop
cs
call
and
js
mov
sbb
xchg
mov
adc
mov
nop
shll
inc
sub
std
sub
clc
xor
sbb
cmp
mov
dec
sbb
hlt
jno
adc
repnz
push
icebp
or
int3
loop
es
cmpsb
out
imul
xchg
and
jbe
cmp
fdivs
mov
shrb
sub
stc
test
adc
call
inc
clc
jns
xchg
push
adc
push
test
push
movsb
setne
xor
enter
test
xor
inc
sti
dec
bound
xchg
popa
movsl
xlat
mov
inc
or
cld
shll
out
cmp
or
sti
rorb
sub
sub
pop
out
xchg
xor
mov
sahf
loope
xor
push
cmp
xlat
pop
sbb
pop
mov
js
cmp
xor
cmc
enter
and
push
push
mov
and
xor
mov
push
mov
and
imul
and
leave
cmp
popl
inc
clc
dec
cmc
mov
xor
jmp
sub
outsl
xchg
scas
repz
jl
and
cmp
fucomip
cltd
jg
pop
xchg
dec
mov
sti
cld
and
cli
jne
inc
mov
cmc
cmp
faddl
scas
cs
push
imull
sbb
inc
insb
js
test
sub
mov
xor
repnz
int
mov
in
pop
cmpsb
push
addr16
add
das
inc
fwait
mov
int3
mov
mov
mov
movsl
clc
push
lahf
mov
movsl
adc
rcrl
aaa
clc
pop
mov
pop
dec
inc
pop
and
mov
aas
movsb
imul
sub
ja
lock
inc
xchg
mov
dec
push
nop
dec
sub
dec
inc
aam
sub
sarb
test
aad
jmp
jb
scas
lret
mov
mov
rol
adc
loop
and
les
shr
test
mov
mov
push
aas
aam
dec
out
and
add
fidivrs
add
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
jmp
testl
mov
jb
outsl
or
cmp
aam
out
cld
jns
fadd
dec
mov
sbb
loop
ret
mov
jnp
and
jo
rcll
sbb
cmp
leave
sarb
fistpll
push
and
add
jg
mov
xchg
push
lds
shlb
pop
xchg
dec
fwait
add
rorl
or
or
pop
arpl
xor
dec
test
jo
aad
push
inc
outsb
cmp
xchg
pop
xchg
and
sbb
test
push
inc
or
mov
sti
push
cmp
jl
cmpsl
scas
rorb
mov
jl
out
dec
sbb
movsl
mov
insb
mov
inc
hlt
inc
pop
ss
mov
adc
jns
pop
cmpsb
shll
push
loop
inc
mov
add
pop
loop
dec
pop
shll
les
inc
rorb
fs
sbb
push
flds
and
dec
mov
sub
mov
sbb
stos
jmp
add
rcll
movsb
sbb
gs
sti
cltd
repnz
loop
fcmovbe
ljmp
test
mov
lock
nop
mov
aam
imul
imul
scas
cmp
ja,pt
push
hlt
jno
or
repnz
cwtl
and
gs
shlb
je
out
fs
sub
xchg
pop
jnp
pusha
xchg
xchg
int3
out
push
mov
mov
fucomp
ss
adc
aad
dec
cld
fistps
push
test
cltd
mov
xlat
sarb
pop
pop
dec
and
push
and
pop
push
inc
test
inc
mov
mov
out
push
iret
xchg
xchg
and
divb
cltd
ret
adc
mov
xor
dec
jae
xchg
and
lea
addr16
lcall
loope
cmc
adcb
add
lds
sub
pushf
jns
push
or
cli
mov
ss
icebp
add
xor
shlb
leave
pop
xor
inc
orb
add
pop
mov
cmp
mov
and
inc
inc
daa
in
push
outsl
ret
push
dec
lods
fidivs
push
mov
outsb
push
arpl
shl
cmpb
hlt
mov
and
mov
mov
mov
xchg
int
into
mov
scas
stos
sbb
rcrl
imul
xchg
das
push
or
movsb
xor
hlt
leave
sahf
sub
data16
cmpsb
int3
aaa
cmp
jae
lret
jg
aaa
jnp
in
mov
jmp
adc
cmpl
push
or
add
xchg
mov
dec
push
ljmp
cmp
mov
pop
mov
adc
inc
gs
inc
add
xlat
leave
fstpl
mov
sbbb
add
ds
ja
mov
mov
push
mov
test
xchg
mov
addr16
add
push
repnz
ret
ret
ret
pop
xchg
loopne
inc
push
pop
lods
mov
jo
ret
jne
cmp
icebp
cld
aaa
stos
iret
cmp
adcl
xchg
clc
jnp
or
pop
pop
and
subl
outsl
mov
lret
lock
dec
sub
nop
call
imul
xor
mov
and
jne
hlt
push
aaa
mov
mov
in
adc
jnp
cli
fimull
mov
lahf
push
les
xchg
lret
mov
lds
lret
sbb
inc
add
in
jae
fsubrl
popa
pop
adc
scas
enter
sbb
scas
movsb
mov
in
std
mov
aam
imul
xor
inc
xchg
adc
pushf
xlat
jl
shrl
add
ja
adc
inc
mov
stos
xor
inc
dec
scas
add
sbb
cmp
and
repz
jnp
jle
loope
or
or
or
popa
xor
gs
fsubl
inc
jmp
mov
mov
ret
xchg
xchg
add
test
sub
leave
test
sbb
cmc
lods
mov
aaa
sar
cmp
xchg
in
cmp
xor
outsb
mov
adc
out
mov
pop
lcall
sar
inc
insl
test
cmp
dec
sbb
mov
cld
shl
pop
loope
mov
movl
push
mov
pop
jl
pop
fcmove
dec
movsl
inc
fdivrs
mov
imul
jb
push
xor
cmp
sub
sbb
inc
mov
mov
push
lret
sti
stos
test
arpl
mov
call
and
je
sub
mov
and
movsb
je
mov
pslld
fcomps
push
dec
into
sbb
jbe
xchg
cmpsl
push
inc
push
imulb
sub
cld
inc
pop
xor
jno
xor
cmpsl
pop
xor
xor
shrd
jmp
xorl
mov
and
push
mov
pop
or
cmp
cmc
shl
push
fiaddl
and
imul
nop
test
sbb
mov
mov
mov
mov
ffreep
test
jge
mov
js
js
inc
sub
popf
and
es
aaa
lock
ds
loopne
sub
sti
lahf
das
or
and
or
ds
or
xchg
movsl
inc
stc
insb
in
jle
push
lea
scas
cmp
jb
add
add
push
pusha
dec
pop
dec
push
mov
bound
ljmp
jb
rolb
adc
dec
fisttps
in
jl
cmc
jne
adc
orb
movsl
mov
pop
fwait
in
push
mov
jo
scas
iret
sub
sub
lods
add
iret
scas
enter
mov
ja
mov
sbb
push
sbb
add
cmp
xchg
aad
xchg
sbb
pusha
arpl
fdivl
or
jge
jae
mov
xchg
jne
sub
dec
jo
testb
pop
xchg
lods
sbb
into
les
clc
sub
xchg
shr
dec
cmp
aaa
lods
cwtl
cmp
cmp
jmp
leave
push
dec
outsl
mov
jecxz
jg
inc
clc
xchg
shufps
lock
dec
test
clc
je
and
jb
out
mov
pop
cwtl
mov
fmulp
ficompl
inc
xchg
jae
aad
jbe
dec
xchg
sub
mull
cltd
test
ss
sub
test
pop
aaa
mov
pop
out
dec
adc
test
adc
into
icebp
cld
mov
cmp
push
inc
inc
lahf
sbb
lret
loope
dec
and
lds
int
adc
ja
fbstp
das
je
pop
in
mul
movsb
cmpsl
jno
lods
push
rcl
mov
cwtl
cmpsl
subl
lcall
aad
ret
in
imul
sbb
in
push
mov
and
sbb
dec
aad
mov
aad
push
mov
das
leave
push
outsl
pushf
pop
mull
pop
aad
xor
mov
shl
push
push
clc
loopne
imul
add
daa
jnp
mov
xchg
and
pop
mov
mov
or
lret
push
sub
mov
lcall
mov
jp
int3
pop
sbb
jb
loopne
push
xchg
mov
add
pop
dec
inc
sbb
pop
push
cmp
pop
lods
adc
dec
xor
push
jge
and
dec
enter
stc
cmp
and
fsubl
sub
stos
add
sahf
ds
lret
sub
cltd
es
pop
mov
rcrl
loope
mov
cmpsb
mov
and
leave
xchg
jp
shll
push
subb
cmpsl
push
data16
jae
icebp
es
test
mov
ret
es
stos
jecxz
pusha
mov
lcall
push
iret
add
loop
shrl
inc
cmp
cmp
mov
adc
popf
loopne
in
mov
xchg
fwait
jmp
sbb
std
lock
mov
dec
lret
mov
addl
or
mov
inc
dec
jecxz
lods
inc
cmp
sub
lcall
in
xchg
int3
addr16
push
addr16
out
lods
fdivrl
outsb
xlat
pop
call
out
inc
mov
xchg
int
dec
xchg
std
stc
bound
jle
je
and
push
jle
fnop
xchg
xor
bound
lret
push
repnz
aaa
shlb
lcall
mov
jg
add
mov
gs
mov
cmp
or
and
dec
ret
and
mov
outsb
jp
stos
divl
bound
sbb
mov
jo
ljmp
mov
testb
clc
andb
push
xor
sarb
mov
jne
stos
cmp
jmp
sub
leave
test
fs
mov
stos
es
or
aas
lock
neg
insb
xorl
add
mov
ss
sub
scas
stos
or
lahf
addl
insl
ficoml
xor
test
add
sarl
mov
dec
icebp
or
mov
mov
xchg
adc
mov
jo
cld
sub
mov
sub
jmp
mov
mov
and
and
aas
insl
movsb
lds
or
pop
mov
pop
sti
add
in
test
push
sbb
xchg
addr16
jge
mov
bound
sbb
outsb
jecxz
xor
fwait
stos
leave
jns
mov
mov
js
fidivs
test
mov
les
popf
sti
mov
cmpsl
and
mov
in
shl
leave
jbe
popf
push
pop
and
mov
cmp
jbe
mov
xchg
out
push
dec
mov
cmp
jno
sub
test
in
loopnew
inc
mov
jo
leave
shr
or
or
cmp
jne
cmp
jmp
arpl
cmpsb
adc
xchg
outsb
cmpb
mov
add
push
stos
int3
or
jb
pop
test
gs
mov
mov
cli
pop
push
loop
pushw
mov
xchg
or
push
cld
sbb
cmp
jbe
popf
rcll
xchg
ret
ds
sub
adc
sti
mov
mov
dec
or
cmpsb
movsl
rcl
dec
movsb
andl
dec
sub
adc
sbb
ss
dec
ret
xor
subb
in
sahf
adc
jmp
ds
jo
xor
mov
mov
lea
inc
xor
inc
xchg
xchg
cwtl
enter
and
push
jmp
sub
fs
jg
inc
xchg
inc
mov
dec
xchg
or
mov
int
push
rorl
fstpl
es
std
and
adc
shrb
xor
adc
sbb
push
ss
fs
test
jbe
mov
xor
pop
sbb
es
ret
lock
inc
jecxz
je
cmpsb
repnz
xchg
inc
dec
aaa
addr16
xchg
xchg
les
jp
add
or
lahf
insb
adc
ds
jl
cmpsl
xchg
xchg
fsubr
dec
or
adc
sub
imul
lds
movsl
popf
dec
jne
pop
mov
cmpl
mov
inc
and
sub
or
sub
adc
and
sub
inc
mov
mov
mov
stos
jmp
cmp
repnz
sahf
lretw
mov
dec
out
pop
and
imul
lods
pop
mov
dec
mov
xorb
jae
mov
xor
xchg
jl
mov
dec
adc
pop
and
in
pop
or
sbb
in
push
add
push
mov
pop
jnp
mov
sub
cmc
imul
push
cmp
andl
test
sub
pop
mov
sub
xchg
mov
jg
scas
shlb
adc
mov
or
sub
cli
bound
incl
xchg
js
push
fs
stos
lods
adc
stos
adc
ja
in
aad
jne
xchg
mov
adc
dec
sub
mov
cmpsb
push
push
add
addb
mov
call
adc
mov
int3
pop
mov
cmp
popa
jae
pop
jmp
ret
test
imul
dec
dec
push
mov
add
notb
scas
aam
pop
lock
fisttpl
cmp
insl
push
cmpsl
lds
movsl
cli
and
sub
adc
xlat
push
iret
pop
push
adc
das
popf
inc
dec
xchg
push
daa
mov
pop
decb
clc
add
xor
int
pop
inc
and
out
jb
psllq
cmp
mov
pop
rcrl
push
dec
dec
test
movl
mov
xchg
mov
mov
ja
lcall
jge
mov
mov
push
lcall
pop
and
dec
push
aaa
xor
adc
divb
cmp
or
mov
sub
xlat
inc
je
dec
sub
mov
scas
mov
lret
add
cmc
sbb
aam
nop
ret
arpl
sub
xor
cmpsb
cld
scas
jno
stc
pop
mov
lahf
ljmp
popa
outsb
or
push
cmc
jo
call
imul
mov
cmp
out
add
and
mov
pushf
jmp
lret
dec
push
cmp
mov
xor
clc
test
push
mov
icebp
xor
or
aam
cmp
pop
incl
mov
cmpsb
ret
adc
loope
push
jle
jl
cmpsl
data16
and
leave
cmp
jp
push
add
add
mov
pop
cmpsb
mov
jecxz
popf
out
mov
jo
dec
mov
adc
xchg
imull
repnz
jbe
inc
push
cmp
cltd
je
fidivrs
inc
in
push
pop
bswap
shl
stos
pop
push
imul
insl
cltd
mov
ret
adc
lret
cmp
adc
mov
jne
inc
jge
xor
cwtl
mov
adc
nop
out
shll
sti
pop
ss
sub
out
aaa
jmp
scas
ret
in
or
int3
xor
jbe
adcl
mov
sub
cltd
push
out
xchg
and
sbb
cmpb
xchg
mul
incl
not
mov
js
lret
out
ss
xchg
jne
xchg
xchg
jbe
mov
ret
cmp
test
sub
inc
shrd
xchg
mov
mov
leave
lahf
mov
or
mov
scas
cli
ja
popf
int
xchg
pop
lods
into
inc
pop
and
arpl
rclb
imul
loope
xchg
out
movsl
dec
or
xchg
fldenv
addr16
mov
sbb
in
js
fimull
movsb
mov
stc
ds
pop
aaa
xlat
fs
int
pop
rclb
inc
jne
lret
je
pushl
pushl
pushl
jmp
mov
push
inc
push
sbb
add
mov
imul
inc
or
cmp
push
dec
mov
lret
jp
mov
and
imul
jo
and
outsl
enter
fidivrl
mov
adc
insb
push
cmpsl
mov
cltd
je
xchg
movsl
pop
arpl
jno
sbbl
inc
aas
iret
fmul
push
inc
stc
out
mov
cmpsb
orl
and
loopne
pop
pop
or
sbbl
cltd
sbb
enter
mov
shll
xchg
fsubrs
fists
xlat
adc
xor
lcall
add
jp
cli
lahf
mov
sub
and
lcall
push
jo
test
in
and
jmp
sbb
subb
cwtl
sub
pop
enter
fiaddl
das
jge
push
mov
xor
movsb
iret
loopne
xor
sbb
or
jb
loopne
roll
je
pop
addl
inc
popa
xchg
dec
xor
adc
into
sbb
sbb
jbe
xchg
pop
lcall
jnp
inc
outsl
push
pushf
call
mov
mov
out
lds
in
cmp
testl
and
add
sub
jmp
scas
xchg
xorl
or
notb
aas
mov
aas
or
nop
cli
ljmp
adc
addr16
insb
sub
test
clc
xlat
adc
mov
cs
rclb
inc
mov
data16
lretw
or
int3
inc
fwait
stos
ret
or
fidivrs
xchg
aad
sarl
fcomps
movsl
mov
ljmp
xor
jecxz
pop
push
cmp
jecxz
sub
cs
sub
fisttpll
ret
mov
add
inc
sub
mov
movsl
xor
repz
shrl
or
mov
ja
dec
push
jb
push
es
adc
aas
js
adc
push
inc
cmp
and
loopne
or
stos
scas
jmp
lcall
mov
push
or
xchg
loopne
sbb
xchg
xor
sbb
jmp
sbb
inc
shlb
data16
jbe
and
jg
je
insl
shrb
stos
push
inc
outsl
xor
mov
out
jp
lock
fimuls
and
push
inc
rclb
push
stc
ret
adcb
rsm
sub
data16
add
xchg
test
aam
push
mov
lahf
adc
and
mov
adc
xchg
call
adc
mov
dec
jmp
ret
lahf
insl
fst
xor
jle
pop
scas
or
pop
hlt
push
rol
dec
fistpl
lret
js
sti
mov
and
ja
mov
dec
lret
loope
mov
cmp
popf
ficomps
rcll
pop
cmpsl
push
arpl
iret
repz
fnsave
xchg
mov
fnsave
pop
mov
dec
cli
dec
pop
pushf
ja
mov
pop
stos
xadd
in
ret
cmpsb
pop
xchg
push
or
inc
mov
js
dec
lock
mov
aam
in
xor
incl
out
mov
pop
js
dec
and
sahf
pop
mov
enter
sbb
pop
mov
js
aas
mov
js
push
jmp
addr16
mov
imul
bound
rol
mov
scas
cmc
loope
scas
xchg
cmp
push
pop
into
movsb
jge
adc
cmp
pusha
add
fs
lds
out
das
sbbb
xor
repnz
mov
popl
mov
dec
inc
test
jbe,pt
or
ds
and
insb
mov
or
testl
or
cwtl
cmp
loopne
std
stc
mov
cmc
and
push
inc
push
push
loopne
mov
sbb
jp
cmp
mov
or
popf
sub
and
pop
pop
pusha
fisubrs
scas
xor
and
mov
cmp
mov
add
ss
mov
or
sub
repnz
ja
into
cmpsl
add
cmp
daa
mov
arpl
mov
cmp
pushw
cmpsb
icebp
fimull
ljmp
lcall
mov
adc
cmp
lcall
mov
lret
imul
andl
push
rcll
lret
xchg
clc
cmp
pop
test
cmp
or
stc
sub
dec
pop
mov
push
or
inc
xor
fs
fsts
jecxz
aad
lea
cmovno
mov
arpl
xor
dec
jg
push
lahf
outsl
pop
das
enter
les
pop
out
stos
scas
and
and
cs
pop
xchg
xor
adc
cs
jne
fldcw
lea
dec
shlb
popf
xchg
inc
sub
or
and
or
sbb
mov
jmp
in
inc
scas
sbb
push
mov
dec
outsl
cmp
add
push
jmp
jae
mov
push
cld
fildll
mov
mov
pop
xchg
insl
pop
in
outsb
stc
lods
add
xor
cmp
mov
arpl
and
cmp
js
add
and
cmpsb
mov
ja
adc
insl
shrb
push
je
cs
adc
test
iret
outsl
xor
lods
fstpt
in
dec
stos
js
add
hlt
adc
nop
stos
outsl
jb
and
xor
push
js
and
fnsave
push
xchg
pusha
cli
lods
cmp
shll
ss
adc
popf
roll
hlt
ja
or
push
scas
xchg
mov
and
add
xor
imul
xchg
or
mov
das
ljmp
sub
je
nop
or
lahf
inc
orl
xor
fistpl
push
in
neg
out
loop
xor
popa
cs
fbld
mov
inc
dec
leave
gs
clc
inc
fs
fwait
insl
dec
andl
shl
test
es
sub
gs
cltd
into
or
dec
push
push
xchg
or
pop
xor
sub
out
imul
sahf
mov
push
push
les
dec
insl
jne
addr16
pop
into
jg
mov
test
and
sarb
scas
sub
and
sahf
stos
sub
test
inc
sbb
cmpsl
xlat
shll
pop
daa
xor
push
jp
cwtl
dec
in
sbb
addr16
or
mov
bnd
or
sbb
or
fmull
mov
sub
je
loopne
jmp
xchg
scas
mov
lcall
xchg
inc
cltd
in
pop
call
fstps
negl
cmp
push
jg
xor
out
rorl
inc
adc
xchg
in
test
cld
xor
stc
xchg
xchg
lcall
cmp
dec
rolb
mov
sub
inc
add
loop
inc
daa
shrl
xor
jno
sbb
jecxz
mov
inc
dec
pop
lret
sbb
ss
shll
pop
and
add
add
arpl
gs
subb
js
loop
int
test
popf
push
cmc
xchg
dec
cmp
adc
fisubrl
xor
filds
sahf
movsb
jbe
sahf
aad
mov
insl
dec
and
mov
mov
out
push
inc
push
inc
clc
xchg
xor
jo
push
pop
out
pop
mov
mov
sub
mov
sub
ret
fstpt
sub
cmpsl
mov
mov
xor
inc
sbb
rcll
pushf
imul
add
mov
xor
imul
push
pop
sarl
push
cmc
push
jo
mov
sbb
cld
cltd
pop
pushf
jge,pt
hlt
and
popa
aad
in
fs
adc
fs
ficoms
int3
lods
add
shrb
mov
sbb
or
push
ret
je
ljmp
cmpsl
xchg
data16
fistpll
lcall
divl
pop
xor
or
or
ficoms
cld
inc
icebp
xchg
aam
lock
inc
in
jne
xchg
cmp
mov
fs
hlt
jge
lock
lahf
mov
or
dec
cmpsl
pop
in
or
sub
shll
inc
adc
scas
mov
ret
lods
rclb
dec
inc
dec
sbb
fsubrs
ja
sbb
push
xlat
jle
push
cmp
mov
les
mov
outsb
push
daa
pushf
inc
inc
clc
decb
sbb
rorb
scas
xor
mov
sub
push
dec
push
sahf
aam
xor
cli
xor
xor
dec
int
cli
fs
xor
add
jp
jmp
mov
dec
add
mov
test
mov
inc
int
jbe
lods
cld
xchg
ret
cmp
loop
or
jg
fcoml
xlat
pop
xchg
mov
ja
ja
out
sub
push
cmp
sbb
and
shl
clc
adc
jecxz
or
inc
lahf
inc
test
out
movsb
or
dec
cmpsl
cmc
scas
mov
popa
mov
xchg
sbb
xchg
in
pop
mov
insb
xchg
dec
pushf
pop
pop
adc
es
rorl
xor
cmc
and
push
pop
cld
push
xor
pop
sub
lret
xchg
jno
dec
aad
adc
dec
push
je
inc
add
adc
mov
sti
jns
xchg
fnstcw
outsb
xor
imul
loopne
lods
jl
call
push
jge
cmc
add
jnp
addr16
test
mov
sbb
repz
loope
dec
mov
dec
paddusw
arpl
jge
ds
xchg
and
mov
fildl
cmpsb
mov
inc
mov
xor
add
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
movl
shr
ret
neg
mov
jmp
fldenv
inc
cmp
pop
adc
inc
xor
xor
subb
add
push
shll
add
jo
pushf
mov
roll
push
push
pop
lods
mov
dec
dec
scas
movsb
and
jne
dec
pusha
xchg
push
std
scas
outsb
ss
mov
nop
cmc
pop
dec
mov
outsl
mov
mov
out
xchg
inc
sub
xlat
cmpsb
pop
add
xchg
outsl
sbbl
sti
push
mov
inc
pop
sbb
or
inc
std
push
dec
dec
push
jp
jae
xchg
ret
inc
sbbb
add
call
push
cmp
sub
cmp
inc
mov
negl
mov
cmp
and
repnz
sbb
jne
ds
cmc
add
lret
popa
or
stc
mov
cmp
add
jmp
js
call
in
aad
mov
or
cmpsb
pop
int
sbb
cmp
mov
lret
lea
out
dec
out
fisubl
mov
hlt
sub
das
add
orl
jl
push
fisubrl
out
shrl
xor
sbb
pusha
std
add
cmp
mov
out
insl
push
lcall
push
scas
outsl
mov
sbb
insl
insb
movsb
pop
or
xchg
ret
repz
xor
xchg
add
repz
aaa
inc
lock
mov
out
cltd
mov
hlt
mov
adc
add
pop
fildll
mov
js
mov
and
std
jle
ja
pushl
push
je
push
gs
dec
fsubr
add
xor
shrb
push
out
lret
popa
in
cs
out
in
insl
pop
or
scas
jo
test
out
iret
out
lahf
leave
popa
add
insl
shll
js
lcall
and
inc
mov
pop
cmp
or
imul
add
test
loopne
jg,pt
sbb
lock
pop
cmpb
pushf
mov
sub
out
jmp
fsubl
ja
icebp
mov
into
in
sub
mov
fs
sbb
mov
sub
mov
xchg
imul
xor
mov
fistl
push
daa
sub
mov
test
cmpsb
into
sub
aam
ret
mov
sahf
mov
sti
notb
mov
mov
js
insb
jae
cmp
inc
mov
and
push
aas
jmp
mov
call
inc
inc
mov
bound
test
sbb
jb
and
dec
mov
cs
aas
out
int
filds
dec
call
xchg
cmp
je
adc
and
rcrl
jno
sarb
add
lcall
inc
sti
mov
cmp
lret
or
cmp
adc
mov
jp
outsb
xchg
popf
adc
addb
hlt
jb
rcrb
push
mov
mov
mov
fmuls
xchg
dec
xlat
push
xor
mov
aam
out
inc
inc
push
fwait
cld
mov
and
in
mov
sti
scas
stos
push
lea
or
int3
outsl
xchg
addl
sbb
sub
dec
bound
mov
subl
aad
mov
mov
xchg
mov
xor
cltd
mov
mov
dec
cmc
and
dec
cmp
cld
pop
pusha
push
xor
pushf
cmp
mov
mov
or
icebp
addb
cmp
lods
lods
cmpsb
lea
jb
inc
mov
adc
push
test
and
add
movsb
mov
pusha
negl
gs
inc
insb
rorl
and
scas
xchg
pop
cld
pop
jecxz
sbb
and
push
cmp
mov
pusha
inc
fnsave
je
insb
mov
xchg
scas
add
push
sbb
push
ret
sbb
or
sub
inc
lea
sub
enter
leave
int3
xor
mov
sub
repz
jecxz
enter
xchg
lock
adc
pop
dec
data16
sub
bound
aam
les
arpl
pushf
inc
shrl
fidivl
pop
and
inc
pop
xchg
arpl
sbb
jg
push
xor
adc
add
into
jmp
mov
push
mov
cli
dec
mov
push
in
imul
out
cmpsl
xor
into
sbb
pop
lods
jne
add
and
daa
sub
out
cld
mov
xor
das
pop
sub
js
or
jo
push
xor
inc
cli
mov
inc
pop
mov
xor
push
out
addb
inc
sbb
mov
loopne
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
xor
mov
mov
sbb
mov
movl
sub
mov
sbb
movl
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
movl
xor
movl
cmpl
mov
mov
mov
jmp
mov
jne
push
call
adc
sub
xorl
dec
movl
movl
movl
mov
subl
mov
jmp
mov
dec
fdivs
adc
std
cs
aam
dec
je
das
or
push
push
push
cmp
xor
add
xchg
and
mov
mov
lds
movsb
add
dec
sbb
sub
push
das
sbb
cmp
mov
mov
mov
dec
insl
cli
cld
ret
addr16
sbbb
mov
in
ret
pushf
mov
sahf
out
cmp
dec
popf
jecxz
mov
cmc
aad
adc
add
sub
jmp
lock
repnz
popf
push
les
into
icebp
cwtl
scas
add
mov
aas
dec
cmp
mov
sub
or
leave
es
mov
imul
icebp
mov
or
jbe
xchg
test
imul
lods
jne
and
mov
js
imul
frstor
inc
shr
cltd
mov
fwait
pop
push
jb
adc
xchg
jo
in
enter
addr16
ljmp
or
push
jp
out
jmp
insb
int3
popa
xchg
out
mov
movsb
pushl
mov
outsl
inc
imul
ljmp
mov
cmpsl
fstpl
aad
cltd
loopne
repz
pop
outsl
cmp
mov
orl
xchg
sub
mov
stc
dec
popa
adc
aad
jmp
inc
fxch
das
mov
cmp
rcll
push
pop
lods
fnstenv
mov
lretw
mov
inc
xchg
mov
jl
cmp
add
shlb
or
sbb
or
push
insl
and
mov
cmc
pop
lock
dec
popa
xor
xchg
imul
fimull
dec
mov
std
out
push
inc
cmpsl
filds
adc
pop
cmc
stc
insb
mov
icebp
push
xor
int
xchg
call
dec
jmp
cld
add
mov
insl
imul
mov
ljmp
in
psrlq
xchg
fimuls
leave
stc
dec
dec
push
or
and
push
adc
jmp
stos
jle
add
inc
sub
sahf
add
mov
xchg
push
push
xchg
int3
sahf
faddl
push
or
out
aas
sub
pop
inc
sbb
in
xchg
lcall
pop
jno
test
jbe
push
mov
test
ds
fcmovne
push
fisubrs
push
out
rorb
out
mov
mov
and
add
call
add
add
aam
loopne
jo
cld
fiadds
mov
popa
sub
mov
mov
fadd
lods
test
or
out
sub
inc
dec
test
js
inc
lds
rcr
inc
call
cmp
cmp
call
mov
cmpsl
cwtl
ficompl
adc
addb
push
notb
es
loopne
bound
lret
cld
or
enter
add
mov
adc
loopne
scas
dec
mov
dec
pop
test
sub
ret
xchg
jl
or
adc
push
adc
push
sub
or
mov
lds
daa
xor
cmp
mov
push
ds
push
std
push
mov
or
and
lcall
sbb
inc
icebp
pop
aam
out
sti
mov
ret
jno
mov
adc
mov
inc
inc
dec
jne
pop
fdivrs
jge
push
out
rorl
mov
out
outsb
dec
push
xlat
add
push
hlt
out
xor
repnz
xor
sbb
adc
ror
lahf
lods
mov
arpl
sub
or
sbb
lret
inc
sbb
push
inc
xorl
fidivs
add
push
and
imul
mov
shl
test
movsl
mov
imul
mov
xchg
dec
adc
in
in
jno
jmp
ret
inc
inc
inc
out
xor
ja
jmp
add
addl
sub
mov
push
mov
sbb
cmpl
mov
mov
mov
jmp
notl
jge
push
call
adc
xor
xor
and
sbb
mov
mov
sub
add
xor
xor
or
sbb
mov
mov
jmp
test
sub
cmp
cmc
push
int
or
push
push
push
cltd
lea
pop
mov
xchg
and
jbe
lcall
int
imul
fiaddl
mov
sbbl
xchg
std
lret
mov
lcall
sarl
pop
sbb
icebp
out
scas
js
fisubs
mov
jp
push
adc
outsl
inc
mov
jmp
mov
xor
nop
sub
dec
subb
das
shlb
pop
cwtl
in
xchg
fst
xchg
add
js
xchg
add
ja
pop
xlat
and
loop
sub
jne
stos
add
mov
iret
mov
std
push
cltd
movsb
pop
call
gs
mov
jmp
xchg
in
leave
js
xchg
stc
adc
fnsave
jg
dec
jle,pt
push
push
jns
insb
cmp
cmovle
pop
int
inc
into
ja
pop
clc
out
in
push
repnz
inc
es
sbb
push
push
push
mov
pop
enter
xor
dec
xor
xchg
push
rcl
insb
cmp
int3
mov
push
adc
jge
jb
cli
adc
pextrw
inc
add
pop
ss
mov
sbb
pavgb
test
and
test
cs
in
leave
xchg
inc
popa
mov
daa
icebp
or
adc
imul
sbb
jae
push
aad
cmp
fstps
and
mov
cmp
mov
sarb
xchg
sbb
pop
test
aam
add
mov
sub
cmp
mov
add
pop
jns
dec
and
test
lahf
and
jp
pop
sbb
sbbl
xchg
mov
jno
dec
gs
add
sbb
outsl
jo
repz
sbb
push
dec
or
addb
ja
imul
inc
pop
adcl
jnp
ss
xor
dec
int
xor
and
jecxz
cmpsl
adc
xchg
out
shl
jg
sub
add
and
pop
lret
and
pushf
daa
dec
sahf
inc
mov
dec
xor
popa
stos
dec
inc
mov
lcall
dec
roll
adc
xor
shl
rorb
push
fwait
jge
mov
data16
mov
jmp
cli
test
sub
je
bound
xor
aaa
adc
mov
pop
dec
int
bound
cld
ljmp
stc
lods
and
fisubs
popf
sbb
std
mov
dec
sbb
jo
dec
push
xor
test
int
and
adc
stc
jg
pushf
adc
insl
sub
leave
andl
gs
mov
or
add
and
js
add
sub
nop
insl
test
sub
mov
addr16
mov
xchg
stos
hlt
pop
repnz
pop
daa
push
xchg
imul
gs
cmpsl
pop
ljmp
in
out
inc
pop
push
dec
xlat
mov
sarl
lods
cmp
push
cmpsl
lcall
fwait
dec
lret
dec
cmp
mov
sbb
adc
push
mov
xchg
not
pop
xchg
add
push
call
out
push
dec
out
fisttpll
psubd
leave
xchg
cld
xchg
or
fs
data16
mov
mov
inc
inc
ret
add
subb
out
push
cli
out
mov
dec
cli
push
sub
cli
mov
sahf
ret
sub
cmpsl
xchg
popa
add
fistps
clc
icebp
fwait
jae
fstpl
popa
and
fwait
das
ficomps
shl
xchg
xlat
pop
cli
sbb
jne
loop
les
adc
adc
push
subl
push
xorl
push
jmp
xor
inc
or
xor
and
fwait
ds
jge
or
push
push
push
andl
dec
out
aam
sub
jnp
cmovnp
sbb
jmp
xlat
dec
dec
xor
add
pop
icebp
loope
int
rclb
xchg
jnp
sub
out
adc
or
xor
or
or
cmc
xor
adc
andb
lret
cs
sub
vcvtsd2si
sub
or
mov
sbb
push
sub
scas
cmpsl
or
arpl
jo
mov
mov
shrd
cmc
sbb
ficoms
xor
inc
insl
out
scas
fwait
cmp
stos
push
lret
ss
mov
fs
jns
scas
shl
cli
leave
pop
leave
inc
imul
dec
xor
gs
xor
nop
sub
xchg
pop
adc
lcall
in
sub
cmp
shl
sbb
fldcw
xchg
cmpsl
ds
or
cwtl
rcrb
test
mov
hlt
sub
sbb
mov
lock
jne
add
dec
mov
shrb
mov
daa
mov
ret
sbb
fwait
sbb
aad
fmul
pop
aad
mov
dec
ret
inc
jecxz
scas
dec
test
and
std
das
in
xchg
cmpsb
cmpsl
cli
jg
lahf
shlb
inc
inc
adc
add
into
add
lods
out
and
xchg
jo
push
and
mov
push
lock
mov
push
dec
xchg
int3
jmpw
out
xchg
outsb
lret
jne
aas
sbb
testl
addb
mov
jnp
lock
cmp
lcall
inc
leave
test
lret
jo
cmc
ror
adc
mov
sbb
test
out
movsb
sub
popw
mov
cmp
jae
xchg
shlb
mov
mov
pop
fs
sbb
data16
hlt
mov
mov
dec
mov
cmp
inc
mov
mov
ss
adc
fstpt
test
sub
mov
testl
dec
lods
adc
push
scas
cmp
std
mov
movsb
mov
and
sub
es
sbb
imul
je
jne
mov
fwait
movsl
mov
mov
gs
clc
push
push
jecxz
mov
pop
cs
ds
in
dec
inc
xor
arpl
cli
shr
inc
cld
mov
xor
lcall
fisttpl
cltd
push
insb
jo
repz
mov
insb
lcall
xor
xorl
lds
push
lret
pop
cmpsb
je
xor
push
pop
scas
jnp
in
dec
jmp
cltd
aad
insl
das
leave
add
sub
push
mov
jnp
fisttps
mov
pop
je
xchg
jbe
loopne
adc
enter
sub
lret
jecxz
pushf
push
leave
or
lahf
mov
insb
shrb
mov
sbb
call
stos
sahf
jg
lods
dec
repnz
shrb
inc
std
mov
jae
add
or
mov
lods
out
jno
xchg
clc
adc
xchg
jp
adc
movsl
pop
xchg
es
adc
pop
out
sub
sub
xor
mov
jne
jne
loop
fwait
jecxz
add
cs
push
mov
cmpl
insl
cltd
loope
cwtl
popa
cmp
shll
jb
sub
sbb
pop
ds
sbb
mov
inc
mov
loopne
imul
cltd
hlt
dec
adc
inc
adc
stos
orl
subb
shll
mov
out
movsb
xor
adc
push
add
int3
mov
mov
loop
jb
nop
aas
mov
int3
and
mov
das
and
insl
ret
stos
loope
sbb
in
cs
rcr
pop
dec
shll
es
andl
cmp
push
xlat
in
jno
call
jmp
push
adcb
fs
and
fsubrl
sub
push
push
push
and
fucom
testl
mov
imul
jecxz
js
mov
test
jnp
out
roll
mov
gs
sub
loope
lret
jg
adc
adc
outsb
or
or
in
xchg
xchg
push
or
mov
xchg
mov
shll
xor
pop
out
adc
jno
rcll
mov
testb
adc
and
mov
jg
popf
les
jo
sti
popf
push
jecxz
mov
or
mov
jge
dec
pop
jecxz
xor
shl
push
sahf
repz
ss
nop
clc
ja
push
jne
pop
loopne
stos
in
xchg
aaa
sbb
jle
jno
shr
xchg
out
leave
mov
imul
bound
orl
inc
jp
inc
mov
cmp
push
fmulp
ds
mov
scas
pop
aaa
cmp
jns
inc
dec
sarb
leave
xor
adc
xlat
cmp
push
xor
pop
mov
cltd
xor
push
in
popa
xchg
leave
ficoml
rolb
dec
ja
test
push
jmp
or
test
hlt
dec
mov
popa
int3
and
ljmp
jae
mov
sub
xchg
adc
jle
cmp
addl
lods
cmp
out
mov
iret
insb
xor
pcmpeqd
addr16
and
mov
mov
test
xchg
movsl
js
iret
andb
movsb
mov
nop
dec
sbb
inc
lahf
rcrb
push
lods
push
add
ja
call
cmc
pop
in
sbbb
sub
das
add
sahf
push
jb
sbb
and
outsl
pop
adc
jge
jmp
mov
cmp
and
mov
fcompl
and
fistl
jmp
dec
sub
push
or
cmp
pop
cmp
fadds
xor
adc
data16
dec
push
inc
scas
dec
fcmovu
jge
lret
test
data16
and
out
cli
adc
jns
ljmp
fsubrs
aam
and
stos
idivl
dec
jecxz,pn
ss
dec
jnp
mov
mov
push
adc
stc
sbb
xchg
enter
mov
fsubrl
mov
adc
jle
mov
mov
test
sbb
jp
xor
or
pop
lods
pop
lock
and
sti
and
stos
test
xorb
add
mov
jae
in
adcb
std
inc
cmp
jno
negl
int3
add
call
xor
push
sub
in
add
fwait
mov
addr16
insb
icebp
insl
arpl
push
lds
pop
leave
push
mov
std
sbbl
test
adc
mov
mov
addb
push
dec
push
pop
rcrb
mov
call
and
add
xlat
push
pop
test
iret
in
bound
push
aad
scas
add
jg
mov
push
push
push
hlt
lock
sbb
loopne
mov
out
movsb
mov
loope
or
mov
xchg
pop
push
mov
push
ljmp
hlt
ficoml
add
enter
dec
insb
jecxz
ficoml
mov
loope
aam
fldenv
pop
stos
pop
orl
imul
fstpl
bound
aaa
jbe
inc
jmp
popf
jg
cmc
fmuls
mov
pop
xor
outsl
and
or
rep
xlat
ljmp
mov
movq
aaa
rorl
nop
ret
iret
adcl
enter
xor
or
xor
test
stos
mov
mov
adcl
mov
xor
and
sbbl
xor
and
cmpl
mov
mov
jmp
movl
ja
pushl
pushl
call
sub
xor
adcl
and
adc
and
mov
and
cmpl
mov
mov
mov
jmp
mov
jle
push
call
movzwl
sbb
mov
andl
sub
sbb
sbb
mov
or
add
mov
movl
mov
mov
sub
and
movl
jmp
mov
or
and
pop
aam
add
or
push
inc
mov
in
aaa
and
mov
cmp
mov
icebp
xor
data16
xor
ss
mov
jae
push
leave
jo
jnp
scas
jmp
pop
int3
daa
lods
roll
push
pop
mov
inc
ljmp
pop
pop
sub
loopne
popa
daa
mov
insb
inc
mov
inc
mov
shl
push
fmul
mov
fs
rcrb
fistpl
shll
pop
rorb
cmp
push
mov
push
pop
lea
cmp
ja
mov
call
movsb
push
icebp
bound
iret
pop
clc
dec
push
xchg
jne
inc
cwtl
xchg
sbb
pop
stos
out
fistl
fistps
dec
loopne
lcall
push
xor
and
int3
adc
icebp
push
xchg
fs
xchg
cs
xchg
or
add
jne
leave
or
or
andl
add
in
rcr
dec
sub
push
imul
jns
ljmp
loop
cmp
sbb
ljmp
mov
insl
daa
enter
sbb
fistpl
loope
xlat
jno
pop
cmpsb
in
jp
push
push
xor
pop
clc
vmaxss
cmp
inc
push
iret
in
push
into
inc
shlb
dec
cmp
mov
jmp
jge
sub
outsl
or
jecxz
xor
xlat
rcll
loopne
int3
inc
mov
mov
mov
das
out
jl
in
xchg
ret
adc
adc
jno
cmp
mov
lods
pop
cmpsb
pop
adc
aad
outsb
mov
pop
iret
dec
leave
imul
xor
sub
mov
testb
fucomi
xchg
pop
jne
and
addr16
sub
sub
ret
push
cs
iret
and
inc
ss
test
inc
mov
inc
cmpsl
xor
idivl
push
push
lret
imul
lods
xor
push
or
mov
out
sbb
rorl
mov
inc
fcomps
adc
movl
addl
mov
movl
mov
xor
mov
and
mov
add
push
adc
sbbl
push
negl
and
orl
and
subl
push
push
orl
call
movl
mov
mov
mov
cmp
ja
movl
jb
cmp
movl
jae
adc
movl
movl
sub
movl
cmpl
mov
not
jmp
not
jbe
pushl
push
pushl
push
push
push
push
call
sub
sub
sbbl
xorl
addl
mov
mov
sub
add
movl
xor
movl
movl
mov
cmpl
movl
mov
jmp
mov
mov
jl
push
call
sub
sbb
or
andl
sbbl
adc
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sub
push
push
movzbl
and
mov
mov
shrd
cmpl
mov
mov
jmp
movzbl
jbe
push
pushl
call
and
mov
add
sub
subl
adcl
xor
or
mov
sub
add
shr
mov
mov
inc
xor
cmpl
mov
movl
mov
movl
jmp
mov
je
pushl
push
push
pushl
call
and
sub
mov
mov
sub
sub
sbb
not
mov
xor
cmpl
mov
movl
movl
mov
jmp
movl
movl
ja
push
push
call
sbb
mov
adc
xor
or
mov
adc
movl
and
sub
adc
movzbl
adc
mov
xor
or
sub
or
or
movl
mov
mov
or
shl
cmpl
mov
mov
movl
jmp
mov
mov
jae
pushl
pushl
call
mov
mov
sub
or
mov
sbb
mov
orl
adcl
mov
mov
sub
or
mov
xor
shrd
adc
xor
adc
shr
mov
inc
mov
xor
xor
or
sub
mov
mov
add
mov
xorl
mov
mov
sub
mov
mov
xor
xor
sub
and
mov
cmpl
mov
movl
jmp
mov
jl
push
call
decl
or
adcl
or
neg
sbb
mov
or
mov
orl
shl
subl
xor
adc
shld
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
je
push
push
push
call
xor
add
mov
sub
xor
add
inc
movzbl
or
mov
movl
xor
add
and
mov
mov
shl
and
mov
or
xor
or
mov
xorl
xor
xor
movl
inc
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
mov
and
xor
shld
cmpl
not
movl
mov
jmp
movl
jl
pushl
call
mov
xor
add
andl
sub
xorl
sbb
sbbl
shl
xor
mov
cmpl
movl
mov
mov
mov
jmp
mov
jne
push
pushl
push
call
subl
incl
subl
movzbl
or
mov
sub
adcl
andl
mov
xor
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
jmp
mov
movl
jg
push
pushl
push
push
call
mov
sbb
xorl
dec
sbb
mov
xor
xor
sub
add
mov
adcl
mov
neg
xor
shl
sbb
mov
xor
shr
orl
or
cmpl
movzwl
not
jmp
movl
je
push
call
sub
sub
mov
or
add
xor
adc
xor
xor
or
and
sbb
mov
xor
mov
mov
adc
mov
mov
xor
xor
sbb
mov
cmpl
movl
movzwl
jmp
movl
mov
jg
pushl
push
push
call
and
sub
adc
xorl
dec
addl
mov
and
mov
or
mov
cmpl
movl
mov
jmp
movl
jg
pushl
call
or
add
xor
dec
orl
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
not
mov
movl
jne
cmpl
notl
movl
movl
jmp
mov
jge
push
pushl
pushl
pushl
pushl
push
call
sbbl
xorl
orl
orl
orl
sbb
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
pushl
pushl
call
test
jle
xor
jmp
movl
or
movl
adc
movl
movl
cmpl
mov
not
jmp
mov
jb
push
push
push
pushl
pushl
push
pushl
call
not
add
sbbl
or
add
sbbl
xor
xor
or
add
movl
cmpl
movl
mov
jmp
notl
movl
jbe
push
call
add
movzbl
and
and
xor
xor
or
add
xor
or
sub
movl
or
movl
xor
xor
mov
sub
and
push
cmpl
movl
mov
mov
jmp
mov
movl
ja
push
pushl
push
call
subl
xor
add
xor
mov
sub
mov
adc
orl
movl
mov
or
mov
push
subl
push
subl
push
call
sbbl
mov
mov
sub
mov
sbbl
push
sbbl
push
addl
push
push
sbbl
call
mov
sub
mov
subl
add
movl
mov
adc
mov
subl
xor
decl
mov
xor
mov
or
movl
movl
movl
xor
movl
cmpl
movl
mov
not
jmp
movl
mov
jle
push
push
pushl
push
pushl
push
call
adcl
or
sub
addl
or
movl
cmpl
mov
mov
jmp
not
je
pushl
push
pushl
push
call
sub
and
and
sub
adc
negl
push
not
movl
movzwl
and
mov
mov
or
mov
adcl
push
push
negl
push
notl
call
mov
movzbl
add
mov
mov
subl
push
orl
push
adcl
push
addl
push
movl
call
and
mov
cmpl
mov
mov
jmp
mov
movl
ja
push
pushl
pushl
push
push
call
orl
movzwl
add
mov
movzbl
add
sub
movzbl
sub
adc
mov
xor
add
mov
orl
xor
xor
mov
sbbl
xor
adcl
xor
cmp
jne
cmp
movl
jne
sbb
movl
andl
movl
dec
movl
mov
inc
imul
mov
mov
and
xor
sbb
mov
div
pushl
xor
adcl
and
xor
cmpl
mov
movl
mov
jmp
movl
movl
jbe
pushl
push
push
push
push
call
andl
xor
or
sbb
mov
sbb
subl
pushl
cmpl
mov
movl
movl
jmp
not
mov
jle
pushl
push
call
and
add
sbb
sbb
mov
push
pop
div
sub
mov
notl
sub
adcl
add
sbbl
imul
and
xor
pushl
addl
pushl
pushl
orl
pushl
pushl
xorl
call
not
movl
cmpl
mov
mov
not
jmp
notl
movl
jb
push
pushl
push
pushl
pushl
call
adcl
sbb
orl
sbb
add
or
movl
mov
sub
mov
xorl
sub
movzbl
sbb
mov
mov
xor
xorl
xor
orl
div
imul
incl
xor
sbbl
pushl
orl
pushl
sbbl
call
and
movl
cmpl
mov
movl
notl
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
and
or
or
and
adcl
xor
xor
xor
xor
sub
add
sub
movzwl
and
movl
cmpl
movzbl
not
movl
jmp
mov
not
jg
push
push
push
call
and
dec
mov
or
mov
mov
or
mov
add
movzwl
and
mov
movl
cmpl
movl
mov
mov
mov
jmp
mov
mov
jb
push
pushl
pushl
push
call
movzbl
and
and
mov
mov
sub
sub
adc
xor
xor
adc
xor
movl
add
mov
adc
mov
mov
adc
mov
negl
push
subl
push
xor
xor
push
push
call
addl
add
mov
adc
mov
adc
movl
movl
cmpl
mov
mov
jmp
mov
jle
push
pushl
pushl
push
push
push
pushl
push
pushl
call
and
xor
xor
xor
or
mov
xor
decl
mov
mov
sub
add
movl
adc
movl
movl
mov
xor
mov
xorl
mov
sbbl
mov
addl
movl
andl
mov
call
lea
xor
or
sbb
mov
mov
mov
sub
and
lea
cmpl
movl
mov
jmp
mov
mov
jge
pushl
call
andl
sbb
mov
adc
mov
incl
adc
and
adcl
xor
mov
mov
and
mov
mov
sub
mov
cmpl
movl
mov
jmp
movl
jae
push
push
call
inc
sbbl
xor
sbb
movl
xor
xor
shl
movl
shr
xor
xor
or
or
mov
mov
sbb
mov
cmpl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
pushl
call
sbb
mov
xor
add
mov
mov
adc
subl
sbb
negl
lea
addl
mov
or
mov
mov
mov
sub
shrd
shr
mov
adc
mov
adcl
xor
xor
orl
or
mov
orl
push
pushl
orl
lea
addl
push
shl
call
lea
xorl
push
andl
mov
sbbl
mov
lea
push
movl
mov
lea
sbbl
mov
subl
mov
addl
mov
push
notl
call
orl
push
adcl
push
orl
pushl
adcl
call
mov
adc
mov
add
mov
cmpl
movl
notl
jmp
mov
jle
pushl
call
neg
sbb
notl
not
adcl
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
movl
movl
movzbl
jmp
mov
ja
push
push
pushl
call
movzwl
sub
addl
xorl
mov
or
mov
sbb
sbbl
movl
sbb
push
and
push
movzwl
and
push
xor
movl
movl
movl
or
mov
cmpl
movl
movl
mov
movl
jmp
movzbl
mov
jae
pushl
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
movl
adc
adcl
adcl
cmpl
movl
movl
movl
movl
jmp
mov
jne
pushl
call
xorl
xorl
xorl
addl
subl
adcl
addl
xor
neg
mov
subl
xor
div
cmpl
mov
movl
mov
movl
jmp
movl
jb
push
call
sbbl
sbb
sub
and
or
add
adc
imul
cmpl
mov
movzwl
mov
jmp
mov
ja
push
pushl
pushl
call
movl
notl
sub
sub
adc
sub
mov
xor
sbb
and
mov
andl
xor
orl
div
addl
sub
mov
xor
mov
cmpl
mov
not
movzwl
jmp
not
jae
pushl
call
add
and
addl
and
negl
movl
or
movl
cmpl
movl
mov
mov
jmp
movl
mov
ja
push
call
andl
xor
add
add
mov
mov
xor
dec
subl
mov
sub
movl
movl
mov
adc
add
neg
xor
xor
xor
dec
imul
sub
mov
and
or
sub
andl
mov
movl
cmpl
movl
mov
movzbl
jmp
mov
jae
push
push
push
pushl
push
call
add
or
xorl
adc
sbb
not
movl
adcl
movl
cmpl
movl
mov
jmp
movl
mov
jle
push
call
or
adc
sub
dec
incl
adc
sub
movl
movzwl
sbb
mov
mov
imul
mov
and
imul
sbb
imul
mov
incl
and
sub
or
cmpl
mov
mov
mov
mov
jmp
movl
mov
ja
push
push
push
push
call
mov
adc
mov
not
xor
mov
mov
add
mov
and
movzwl
add
movzwl
xor
mov
mov
xor
addl
mov
mov
addl
lea
sub
mov
movl
movl
andl
movl
mov
xor
movzwl
or
mov
or
xorl
add
mov
addl
or
and
add
cmpl
movzwl
mov
mov
jmp
mov
movl
jb
pushl
pushl
push
push
push
push
pushl
push
call
mov
add
addl
add
sbb
add
sbbl
xor
mov
movl
sbb
movl
movl
mov
cmpl
movl
mov
movzwl
jmp
movl
je
pushl
call
add
and
add
xor
sub
add
mov
xorl
sub
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
call
add
movzwl
add
and
sub
xor
xor
add
mov
movzwl
or
mov
xorl
lea
not
or
xor
sub
andl
mov
addl
movl
movl
mov
and
add
imul
mov
andl
imul
xor
and
mov
div
adcl
sub
cmpl
movl
mov
jmp
movl
notl
jbe
push
call
not
addl
andl
xor
adcl
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jbe
push
push
pushl
push
call
add
adc
movzbl
and
sub
mov
add
mov
movl
movl
movl
xor
add
add
mov
or
mov
xorl
xor
div
sub
imul
cmpl
movl
movl
movl
jmp
movl
jb
push
push
pushl
push
call
and
mov
xor
sbbl
notl
adc
cmpl
movl
mov
movl
jmp
movl
movl
je
call
or
adcl
negl
sub
or
adc
xorl
adc
add
dec
mov
sbbl
xor
movzwl
sub
mov
xor
mov
div
and
xor
mov
movl
movl
and
movl
xor
movl
mov
mov
orl
sub
dec
shr
sub
cmpl
movl
movl
jmp
mov
notl
jl
push
push
push
call
add
sub
and
adc
adc
add
addl
sub
mov
imul
xor
mov
xorl
and
mov
andl
sub
orl
mov
mov
sbb
movl
xor
movl
xor
mov
add
or
mov
subl
or
and
sub
mov
mov
adc
mov
movl
movl
not
movl
or
movl
movl
movl
movl
notl
mov
cmpl
mov
movl
movzwl
jmp
movl
jl
pushl
push
push
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
call
mov
sub
not
sub
sbb
mov
or
add
cmpl
mov
movl
movl
mov
jmp
movl
jge
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
mov
subl
sub
mov
andl
imul
imul
neg
mov
andl
or
mov
lea
xorl
push
subl
call
neg
mov
mov
sub
imul
and
add
and
andl
sub
or
xor
mov
orl
div
xor
cmpl
mov
movl
mov
jmp
movl
jg
pushl
call
sub
sub
or
add
mov
mov
sub
imul
xor
cmpl
movl
mov
jmp
movl
jb
pushl
push
pushl
pushl
pushl
call
xor
adc
sub
xor
and
mov
mov
sub
xor
cmpl
mov
movzwl
mov
jmp
movl
movl
jb
pushl
pushl
call
adc
andl
or
xor
incl
and
add
mov
movl
inc
movl
xor
or
xor
movl
sbb
movl
movl
cmpl
not
movl
movl
mov
jmp
mov
mov
je
push
push
call
xorl
adc
adc
and
sbbl
add
movl
mov
mov
sub
movl
or
movl
movl
adcl
movl
xor
movl
movl
or
mov
adc
mov
mov
add
mov
xor
and
neg
sub
sub
or
imul
cmpl
mov
movl
mov
jmp
mov
mov
jb
pushl
call
sbb
xor
add
mov
sub
xor
and
decl
mov
lea
sub
mov
mov
andl
mov
mov
xor
cmpl
not
movl
jmp
movl
notl
jae
pushl
push
push
push
push
call
sbb
orl
sbb
neg
xor
add
sub
orl
add
adc
mov
lea
and
mov
cmpl
movl
mov
mov
jmp
mov
ja
push
push
push
call
adc
movzbl
xor
or
or
movzwl
sub
sub
add
mov
cmpl
movl
movl
movl
mov
jmp
not
mov
jae
push
push
push
push
pushl
pushl
push
call
adc
xor
orl
sub
xorl
movl
movl
movl
sbb
movl
or
mov
mov
mov
sbbl
xor
subl
xor
mov
call
cmpl
movl
mov
not
mov
jmp
movl
movl
jle
pushl
push
pushl
call
add
movzbl
add
and
inc
neg
xor
xor
mov
mov
and
mov
mov
xor
xor
mov
adcl
call
or
or
cmpl
mov
mov
not
mov
jmp
not
mov
jne
push
call
xorl
mov
mov
sub
adcl
sub
sbb
sbb
mov
neg
mov
subl
xor
sbbl
xor
mov
adcl
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
sub
push
mov
mov
add
push
inc
mov
or
movl
jne
mov
xorl
mov
mov
add
mov
xor
adcl
div
mov
mov
movl
div
mov
jmp
mov
movzwl
or
mov
mov
adc
mov
mov
sbbl
shr
movl
rcr
orl
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
and
add
mov
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
shl
ret
andl
mov
subl
xor
and
movl
shl
ret
xor
xor
ret
