push
mov
jmp
adc
mov
jne
inc
jg
sti
in
add
add
push
pop
inc
pop
dec
pop
push
or
or
adc
cmp
syscall
pop
push
adc
repnz
sbb
add
test
enter
or
adcb
fs
cmp
push
movsb
out
dec
jae
iret
lock
jnp
mov
dec
pop
jb,pn
femms
mov
int3
orl
pop
jge
sub
adc
add
jmp
sbb
push
pop
lahf
inc
add
and
std
adc
mov
outsl
inc
orl
imul
mov
sbb
or
sub
and
ds
lock
lea
jb
sbb
in
pusha
mov
adc
mov
cmpl
jge
jmp
pushl
push
call
jmp
xchg
xor
and
jo
lret
mov
add
add
push
dec
sub
jle
pushf
jmp
or
sub
xchg
je
jo
shlb
int3
lds
xchg
xor
dec
jno
dec
outsl
mov
dec
leave
or
cmpsl
rorb
hlt
add
adc
add
sbb
cmpsb
inc
sarl
dec
or
pop
shll
or
jne
xchg
outsb
push
or
xor
lds
or
and
es
xchg
int
inc
jns
bound
mov
xchg
xor
jb
call
cli
in
stc
or
sbb
mov
lock
jg
gs
push
aad
xchg
in
inc
push
addr16
pushf
jp
push
xadd
jmp
push
or
outsl
out
dec
imul
add
stc
dec
stc
fidivrl
lahf
arpl
mov
jge
js
mov
lret
popf
sub
xor
cmpsl
data16
aad
cmpsl
push
jg
loope
mov
daa
movhps
icebp
pusha
xchg
mov
in
push
leave
dec
imul
insl
pop
xlat
clc
dec
popa
ss
idivb
adc
push
movsl
mov
fmulp
sbb
std
jno
mov
shrl
in
cltd
adc
inc
sti
mov
js
push
cmp
jg
cmp
lcall
inc
dec
push
and
pop
cmpsb
xchg
mov
test
aaa
icebp
cmpsb
std
roll
stc
es
outsb
jnp
xchg
jmp
inc
aad
pop
mov
push
fimuls
adc
add
bound
jl
push
cmp
sub
out
cmp
jl
movsb
pop
fdivrl
inc
mov
mov
test
aaa
mov
icebp
loope
cmpsb
int
push
in
mov
fsubr
bound
hlt
mov
sub
pop
pop
stos
cmp
mov
adc
lock
cmc
or
ja
test
push
sub
out
xchg
sub
cmp
scas
xchg
scas
fldcw
mov
push
add
push
mov
bound
stos
mov
jns
rolb
mov
cltd
add
bound
adc
xlat
jns
sti
push
ljmp
inc
mov
mov
sbb
orl
mov
sub
orl
or
mov
cmpl
jbe
jmp
pushl
pushl
call
jmp
into
mov
into
mov
mov
add
add
insb
mov
arpl
inc
dec
dec
inc
sbb
xor
adc
ja
dec
sbb
cmp
mov
aad
aaa
test
jmp
fadds
dec
ret
sbb
lret
cmp
add
testb
sub
cld
fisttpll
jmp
inc
fisubrl
cs
cmp
add
pop
xor
lds
call
out
enter
push
out
aaa
jno
adc
pop
adc
movsl
xor
dec
ds
cmp
inc
mov
jnp
jb
add
cmpsb
pop
mov
pop
xor
mov
xchg
dec
dec
mov
pusha
or
mov
mov
mov
mov
sub
mov
movzbl
sbb
jmp
jecxz
adc
scas
sti
jge
scas
cltd
int
xchg
or
cmpsl
add
add
lahf
outsb
mov
pop
roll
outsb
mov
test
popa
fs
loop
pop
push
push
hlt
mov
nop
mov
and
rcll
push
adc
lods
repnz
mov
popf
xchg
sbb
fwait
aam
movb
pop
lods
or
jle
pop
shll
jne
out
pop
and
xchg
gs
lods
ja
andl
inc
je
push
and
inc
cmp
and
imul
in
mov
roll
out
or
xlat
sbb
mov
out
or
jmp
sbb
repnz
decb
frstor
push
mov
add
sti
in
outsl
lea
pop
mov
add
mov
ret
enter
or
xchg
inc
mov
lods
jnp
push
loopne
xchg
pop
hlt
cltd
push
mov
xor
and
mov
dec
jmp
pushf
repz
std
negb
mov
movsb
mov
repz
xlat
je,pn
nop
inc
mov
shll
mov
add
cmp
test
movsb
aaa
mov
cwtl
pop
add
inc
mov
fldcw
cmp
not
xor
cmpsb
les
inc
push
xor
aaa
or
repz
setb
stos
in
clc
add
pop
cmpsb
push
orl
mov
sbb
mov
or
mov
mov
dec
jmp
mov
push
dec
pop
jae
sbb
add
add
pop
mov
movb
sarl
sbb
imul
cmc
cli
cmp
int
push
out
aam
fstps
lahf
dec
insb
fst
shl
pop
mov
sti
es
sbb
test
testl
gs
push
cmp
xor
in
movsb
shrl
lods
cmp
sbb
inc
cli
and
inc
notb
adc
cmc
pop
xor
lods
sbb
mov
xor
outsb
shrl
in
pop
mov
xor
mov
mov
call
dec
jo
rolb
xchg
stc
pusha
jb
push
cmpsl
insl
add
jmp
add
roll
add
pop
outsl
sub
out
xchg
dec
jbe
iret
int
add
add
jb
mov
jne
fldenv
in
adc
test
mov
pop
pop
fildl
mov
lea
enter
jne
mov
out
vorps
cmp
mov
aam
mov
sub
or
push
divb
stos
imulb
xor
push
js
lahf
or
fisubrs
lods
bound
add
xor
add
adc
and
mov
pop
xchg
xor
xchg
faddl
mov
scas
pop
xchg
in
mov
loop
inc
push
cmp
cmp
sub
fucomip
xlat
in
das
xor
adc
int3
repnz
arpl
fdiv
imul
lods
jmp
cs
jmp
out
jle
in
xor
add
add
add
push
out
adc
insb
cld
pop
cwtl
dec
or
test
xchg
in
test
pop
push
shlb
inc
dec
insb
xor
sub
mov
jns
test
cs
jns
lea
or
movsb
or
repz
daa
cwtl
cwtl
lea
int3
sti
jmp
mov
mov
adc
ss
inc
es
cmp
pop
mov
pop
or
xor
mov
std
scas
fwait
ljmp
ss
adc
in
sub
pop
cmpsb
test
fwait
insb
xchg
mov
in
mov
mov
cwtl
pop
cmp
mov
ret
pop
push
xor
mov
mov
xor
mov
jmp
mov
scas
repz
adc
jg
push
xor
add
fs
adc
add
es
or
jmp
fdivr
mov
int3
push
cmp
push
mov
stc
pop
inc
and
push
xor
jmp
sbb
add
js
sub
inc
pop
add
pop
xchg
mov
mov
fbstp
adc
cmp
mov
fimull
je
sbb
fmull
daa
daa
lret
inc
or
mov
lds
mov
sbb
push
xor
loopne
aaa
cli
cmpsb
adc
pop
adc
in
ljmp
fs
aad
pop
push
mov
inc
mov
dec
and
sub
sub
add
xor
mov
subl
sub
orl
jmp
xchg
inc
imul
lea
ret
add
add
mov
das
jns
jnp
sbb
es
leave
mov
addr16
stc
mov
mov
xor
mov
sbb
cmp
dec
hlt
sahf
mov
jnp
push
xchg
outsl
sbb
outsl
jnp
sbb
test
and
popf
pop
xor
add
out
mov
movsl
int3
gs
sarl
mov
rorb
sbb
rep
dec
dec
inc
arpl
lret
movsb
fs
mov
cmp
sar
insl
sbb
pop
rcl
test
sahf
or
jbe
mov
pop
cwtl
pop
cmp
jle
jns
inc
aam
cmp
add
lea
add
add
push
add
add
jne
pushl
push
push
call
movl
jmp
push
xchg
xchg
push
les
add
mov
fucomp
popf
xchg
xchg
bound
fimuls
push
mov
mov
mov
jno
sbb
push
push
mov
shlb
add
cwtl
cwtl
stc
xchg
xchg
mov
popa
dec
mov
jle
dec
imul
cmpsl
and
mov
cld
jmp
adc
adcl
sbb
test
in
js
nop
roll
xor
sti
enter
or
push
sbb
fstl
dec
jp
dec
icebp
fld
lods
pop
xchg
shl
jmp
shlb
cli
nop
adc
sti
out
or
dec
fcomps
orl
mov
mov
dec
adc
mov
jmp
hlt
adc
xor
icebp
cmc
aad
cld
ja
xchg
jmp
int3
jg
add
mov
je
pop
aaa
js
dec
mov
jmp
push
dec
outsb
pop
jae
insl
sbb
dec
std
xor
out
rclb
mov
add
adc
xchg
je
cmpsb
and
xor
sub
push
xor
jo
mov
adc
bound
push
adc
repz
icebp
fwait
mov
mov
ret
mov
sub
or
pop
testl
xor
test
sub
cmp
sub
movsl
test
mov
adc
push
jg
fwait
js
dec
mov
or
mov
mov
ffree
pop
jnp
jmp
pop
sbb
je
insb
test
cld
insl
add
movl
jmp
test
lcall
pop
pop
dec
aad
cmp
add
mov
cmpsb
test
shlb
aam
lret
xor
jp
lds
testb
int
xlat
push
out
lock
push
into
dec
mov
sub
das
inc
add
add
cld
jbe
add
shl
dec
iret
loope
subb
fwait
adc
and
in
aaa
jle
mov
imul
push
mov
rolb
pop
push
sub
adc
adc
cmp
xchg
adc
mul
inc
xchg
push
pop
or
enter
lods
movsb
mov
jbe
andb
mov
ja
mov
pop
xchg
ja
xlat
in
pop
lret
cmp
push
js
push
cmp
or
fucomip
pop
inc
xchg
mov
pop
movl
jmp
cmp
shl
xlat
std
cmp
push
pop
lea
js
and
mov
popf
add
sahf
cmp
xchg
mov
popa
pushf
push
mov
sarb
sub
cmp
ret
notb
dec
insl
jge
mov
mov
ss
sub
outsl
daa
out
cmp
push
jmp
or
mov
cmp
and
xor
lock
aaa
cli
rorl
push
push
ret
leave
outsl
lcall
add
roll
jne
sbb
pop
ficoml
js
mov
jle
testb
xchg
repnz
les
movsb
jno
pop
or
mov
mov
jno
das
lahf
jmp
lcall
in
movw
add
add
movl
sub
movl
subl
jmp
cltd
xchg
inc
sub
std
mov
pop
mov
mov
mov
out
lret
fs
loopne
in
test
in
fcoms
lock
outsl
fst
mov
pop
sahf
cmp
push
test
int
int3
sub
fisubs
sbb
mov
inc
mov
inc
inc
dec
mov
pop
ret
vpunpckldq
push
xor
addb
cmp
inc
lock
andl
adc
pop
in
mov
xchg
xor
pop
jno
pop
mov
xlat
or
in
inc
push
sbb
pop
adc
inc
pusha
push
fimull
out
aaa
mov
movl
enter
mov
jne
sub
cmpsb
dec
xorb
mov
sar
roll
movsb
and
add
mov
mov
sbb
movl
movl
cmpl
jbe
add
not
jmp
push
call
movl
push
pop
jmp
push
mov
push
in
xchg
pop
imul
add
inc
inc
addr16
xchg
jmp
out
stc
xchg
leave
pusha
add
inc
push
push
and
fdivrl
inc
sbb
insb
mov
pushf
pop
push
fstenv
push
lahf
add
inc
push
imul
add
mov
outsb
scas
dec
push
xchg
jmp
orb
addr16
mov
fs
adc
scas
xor
sub
sbb
das
and
aam
dec
xchg
pop
lret
ljmp
ljmp
add
sbb
fcomps
or
or
xchg
cmc
sub
fcoml
or
movl
cmpl
ja
mov
xor
jmp
push
push
call
movl
jmp
jp
cmp
stc
out
mov
xor
xchg
es
add
idivb
jnp
aad
imul
jbe
adc
xor
push
sub
fmuls
pop
adc
xor
shlb
sbb
mov
ss
int3
bswap
or
mov
jbe
in
nop
jns
xchg
or
mov
iret
mov
lret
jp
cmp
cmp
sti
jp
xchg
xchg
pop
leave
push
call
dec
rclb
shrl
sbb
jp
rcrl
fistpl
sub
clc
pop
inc
mov
gs
mov
aas
cmp
jmp
lahf
pop
sbbb
aas
sub
or
outsl
push
faddp
inc
int3
movsb
add
add
inc
int3
jle
add
jmp
pushf
push
adc
xchg
mov
lock
push
gs
add
mov
fnstcw
jnp
and
loope
xchg
dec
rcl
and
or
icebp
out
cld
push
rcrl
add
inc
and
mov
cmp
sbb
jmp
lock
xchg
inc
fwait
mov
lcall
pop
xchg
or
insl
xchg
out
pop
bound
mov
ret
xchg
pop
cmp
inc
push
scas
adc
mov
xchg
insl
outsl
lret
jb
sub
mov
cmp
cmp
cmpsb
push
cmp
out
fwait
adc
daa
stos
xor
repz
inc
or
test
test
inc
xchg
dec
std
shl
cmp
push
pop
mov
inc
cmc
xor
cli
jbe
adc
mov
mov
xor
mov
orl
push
xorl
push
andl
jmp
xchg
xchg
mov
pop
cmp
pop
push
clc
or
mov
xchg
in
cmp
test
repz
add
lcall
dec
mov
popa
mov
jae
pop
dec
lahf
xor
lds
lahf
xchg
push
aad
iret
rorl
ljmp
mov
fs
hlt
test
push
lea
push
jo
xchg
jnp
pop
cmp
movsl
lea
push
push
popf
idivl
ret
aad
lret
and
jp
mov
hlt
dec
jecxz
pop
sub
in
loop
loope
mov
scas
xorb
mov
xor
cmpsb
stc
out
push
addr16
sub
jl,pn
dec
scas
imul
orb
or
add
cmp
cmp
add
add
jae
add
mov
add
mov
andl
mov
and
mov
not
mov
and
xor
sub
cmpl
jb
mov
sbb
jmp
push
call
mov
lea
mov
mov
jmp
or
pop
pop
pop
pop
push
ds
or
push
sldt
mov
pusha
push
adc
xor
aaa
hlt
popf
dec
jmp
inc
rol
bts
mov
dec
add
outsl
adc
xor
stc
pop
das
sub
pop
lcall
popf
in
mov
cmpl
sbbb
daa
mov
adc
or
or
fsubrs
xor
mov
leave
ret
jo
dec
mov
adc
movsl
mov
mov
mov
lcall
rorb
test
repnz
repnz
push
xchg
mov
addr16
fnstsw
push
pop
mov
or
sti
push
add
xor
sbb
rorl
or
inc
add
add
and
sbbl
jmp
jp
cld
mov
mov
jnp
xchg
mov
add
mov
dec
sub
adc
fistl
jge
xor
cwtl
in
pusha
jns
jnp
mov
adc
mov
das
std
fwait
mov
lock
inc
xchg
push
popa
push
pop
push
sub
sub
or
sbb
lods
sbb
sbb
loope
lds
jl
mov
jp
and
inc
push
sub
test
enter
pop
enter
dec
mov
push
xor
loopne
test
lods
das
loop
jbe
ss
loopne
je
xor
cmp
int
add
pop
mov
idivb
jecxz
mov
pop
mov
popf
rolb
add
add
add
jmp
loope
addr16
cli
je
jecxz
fmulp
adc
add
sub
sub
ljmp
ja
roll
in
mov
adc
mov
sub
jo
ja
ja
mov
xorl
xor
add
insb
pop
adc
in
scas
adc
out
adc
push
loopne
out
cmp
sbb
push
push
sbb
jbe
loope
insb
fnstcw
pushf
fwait
jae
adc
sub
jl
dec
loopne
mov
sbb
mov
mov
in
push
dec
je
pusha
jns
pop
outsl
popa
imul
sub
addr16
clc
xchg
add
sbb
mov
ljmp
cmp
inc
add
push
add
cmp
movl
jne
adc
mov
mov
cmpl
jg
add
jmp
push
call
mov
xor
add
cmp
jmp
in
cmc
xchg
notl
fbld
mov
add
mov
mov
adc
mov
xor
mov
fst
divb
ss
xchg
dec
shrb
jns
pop
jg
xchg
icebp
stos
test
pop
add
js
inc
ljmp
jo
test
adc
push
call
jbe
push
cltd
or
out
or
mov
mov
cs
ret
dec
mov
ret
or
inc
pop
mov
xor
jmp
ficompl
xor
xor
dec
or
inc
insb
or
xor
test
loop
sbb
jle
lods
pusha
mov
sub
insb
mov
leave
cmp
sti
outsb
pop
lea
cmc
mov
adc
test
add
add
mov
cmpl
ja
dec
jmp
pushl
call
xor
mov
mov
mov
xor
jmp
arpl
mov
mov
cld
js
movsb
mov
inc
adc
add
add
movsb
ret
mov
rclb
shrb
mov
shl
jno
pop
pusha
cmp
icebp
call
daa
loopne
insl
pushf
xor
or
lods
inc
mov
cmp
loopne
rorb
mov
pop
xorb
cmp
cs
aam
enter
ret
add
and
or
mov
rcrl
adc
jo
sub
ss
pop
pusha
loop
inc
or
fldenv
pop
mov
inc
dec
gs
cwtl
loopne
dec
cmp
sbb
loope
ret
push
cmp
inc
xchg
in
test
push
jmp
inc
bound
aas
add
sub
cmpl
jle
sbbl
xor
jmp
push
pushl
push
call
add
jmp
das
in
subb
out
in
addr16
repnz
mov
adc
add
dec
jp
cwtl
jno
dec
xorl
sub
movsb
pop
loopne
mov
movsl
lret
add
cld
fidivs
or
pop
iret
pop
es
jmp
push
test
xor
and
adc
aaa
sub
push
leave
cmp
ljmp
cmp
sahf
pop
iret
push
clc
sbb
mov
iret
movsb
mov
scas
inc
mov
das
ror
jb
push
fwait
mov
pop
or
add
shrl
xor
mov
cmp
dec
pop
test
cmp
scas
aad
pop
insb
adc
cmpsl
inc
sub
jl
xchg
hlt
xor
subl
jmp
mov
jmp
f2xm1
out
out
xchg
stc
incb
xchg
push
adc
sub
mov
add
add
sub
insb
adc
loop
mov
jg
dec
xchg
cwtl
sub
int
shufps
and
aad
in
sub
into
mov
mov
xor
xchg
pop
inc
pop
nop
sbb
mov
stc
pop
jmp
addr16
mov
and
mov
xor
dec
mov
sahf
xchg
xor
jecxz
mov
sarb
movlps
xchg
xchg
roll
sbb
mov
jmp
sub
aas
fucomp
cmc
mov
roll
mov
pushf
aam
add
xchg
push
es
sbb
hlt
jo
adcb
dec
push
fistps
lods
add
movzbl
sbb
xor
cmpl
jbe
and
jmp
push
push
pushl
push
push
pushl
pushl
push
call
add
adc
mov
jmp
mov
ljmp
lahf
fiadds
cmp
add
push
and
jg
and
lahf
insl
fisubl
dec
cmp
jmp
ret
pop
jl
mov
test
inc
mov
cwtl
xchg
ficoml
int3
dec
or
mov
inc
nop
jge
int
add
fisubrl
add
mov
sbb
pop
jae
xchg
inc
les
and
or
out
icebp
scas
loope
ds
cmp
pop
jecxz
int3
pop
pop
fldz
out
div
mov
dec
or
scas
sarl
inc
xlat
push
pop
or
pop
xchg
addr16
xor
cltd
test
fs
mov
jmp
or
popa
fdivrl
mov
ret
shll
add
mov
push
jle
push
icebp
loopne
in
add
and
in
mov
adc
loopne
jl
dec
cwtl
sub
sbb
out
jb
stos
arpl
aas
lcall
adc
xchg
push
push
nop
mov
mov
mov
push
gs
dec
sbb
xorl
sub
dec
mov
imul
xor
pop
mov
sub
aaa
xor
sub
push
cmp
fstps
push
movsl
sub
shrl
in
adc
std
xor
jno
xchg
mov
add
mov
push
pop
aam
jae
in
ficomps
pusha
sub
fstpt
dec
adc
add
shr
roll
add
and
and
out
in
aam
push
or
ljmp
add
lds
mov
xchg
jo
jnp
adc
inc
in
enter
add
sbb
cmp
popa
mov
inc
ret
es
pop
add
and
outsb
push
shl
mov
enter
cmp
pop
xchg
and
push
jge
mov
xchg
arpl
ret
vhsubps
xor
pushf
sarl
js
mov
pop
gs
pop
mov
insb
arpl
adc
test
aaa
movsl
jmp
push
mov
jne
xchg
mov
dec
pop
xor
jo
mov
frstor
aad
jbe
inc
sub
stc
mov
xor
xor
addl
xor
add
jmp
xor
cmpsl
aaa
out
jg
sti
mov
or
mov
in
push
add
mov
mov
mov
cltd
pmulhw
fwait
clc
cli
sbb
push
cwtl
sahf
xor
fs
mov
decl
push
popa
xor
orb
inc
loopne
stos
lods
cmpsb
fwait
mov
jo
xchg
cltd
adc
dec
out
adc
addr16
fsub
mov
int
js
pop
scas
jne
push
pop
int3
lods
mov
ret
push
push
sbb
ficomps
lock
mov
lods
cli
inc
jle
pop
outsb
int
enter
add
cltd
jns
jbe
daa
pop
int
pusha
mov
adc
jnp
iret
add
out
dec
add
negb
popa
out
mov
lcall
pop
dec
in
pop
rorl
cmc
xor
adc
movl
mov
movl
cmp
movl
jne
not
mov
movl
cmp
je
jmp
repz
pop
mov
mov
xor
sbb
pop
add
mov
cmp
test
enter
sub
cli
xor
xchg
idivl
fisubrs
out
push
sbb
lret
out
mov
mov
jno
push
mov
mov
jb
inc
inc
leave
and
sub
lcall
mov
mov
pop
ret
icebp
loopne
pop
es
gs
xor
scas
cmp
or
push
dec
pop
mov
push
or
push
repnz
xchg
dec
pop
mov
addb
or
sbb
insl
jl
sbb
mov
test
xor
jmp
jg
or
cmp
mov
aad
mov
enter
mov
sbb
adc
add
jl
mov
mov
sub
add
jmp
pushl
push
push
pushl
pushl
push
call
jmp
xchg
pop
sbb
fistpl
fdiv
push
sub
add
xchg
cmp
mov
push
aaa
outsl
imul
ret
fidivrs
sahf
adc
mov
inc
sbb
test
mov
stc
xchg
ja
or
jns
pusha
test
stos
testl
rorl
ret
push
lods
mov
stc
sub
in
cmpl
dec
and
mov
addr16
push
jecxz
dec
sub
fisubl
jge
push
cmpsb
adc
mov
cmp
xchg
repnz
xor
or
sbb
rorl
pop
fstpt
push
xchg
das
dec
loopne
es
adc
xor
or
fs
xor
sahf
repz
inc
mov
add
add
inc
test
xor
add
inc
lods
shrl
add
add
jge
or
jmp
push
pushl
push
push
pushl
push
push
pushl
call
movl
jmp
adc
clc
sar
cmp
cltd
dec
mov
sbb
add
stos
or
adc
adcl
add
mov
xor
loop
dec
hlt
add
cmp
or
push
aas
fimull
inc
push
clc
jl
clc
insl
and
mov
xchg
sub
xchg
addr16
nop
jbe
jg
stos
mov
pop
in
test
jo
cmp
pop
jae
lcall
test
pusha
dec
pop
push
lods
hlt
loope
outsl
pop
cmp
xchg
leave
inc
xor
add
ljmp
jno
inc
push
orl
nop
sbb
sbb
push
test
mov
sub
jmp
int3
out
in
inc
movsb
jl
add
movl
jmp
cmp
jl
std
lahf
sti
inc
pop
fsts
xchg
sbb
add
lods
pop
xchg
pop
lods
dec
ljmp
dec
fisttpll
push
adc
xchg
dec
gs
aam
cmp
jno
mov
push
push
divb
jg
sbb
jnp
xor
xor
xor
fimuls
add
cmp
sbb
add
xorl
jae
xchg
dec
xchg
ss
dec
push
stos
cltd
clc
movsl
inc
sub
xchg
scas
dec
mov
ja
movsl
arpl
lea
nop
ljmp
mov
outsb
aas
dec
push
or
movsl
sarb
ret
dec
les
pop
out
and
addl
fcmove
sbb
mov
int3
fisttps
add
movsb
mov
movzbl
xor
mov
jmp
jmp
stc
jg
cmp
ficoms
add
mov
mov
hlt
sub
xor
out
es
lahf
jns
add
sbb
dec
lret
hlt
icebp
jle
jo
mov
inc
xorb
jge
cmp
xchg
jmp
jo
aaa
jo
cmpb
jne
xlat
inc
adc
insl
dec
outsl
insb
pop
or
pusha
inc
xor
xchg
ror
mov
push
adc
stos
sbb
pop
pop
sbb
cwtl
decb
mov
mov
and
call
xchg
xor
cmpsl
insb
mov
inc
mov
add
mov
adc
pop
fsubrp
dec
fstl
lods
lods
pop
and
pop
mov
cld
in
add
mov
movl
adc
mov
push
jmp
mov
mov
cmp
leave
inc
xor
sbb
add
loopne
sub
fstps
cld
push
outsl
mov
mov
enter
cmc
adc
pushf
push
call
xchg
lock
push
lret
call
test
add
iret
inc
jo
mov
mov
jbe
fisubl
mov
setnp
lret
inc
roll
push
int3
loope
mov
call
aam
insl
push
call
addb
int3
push
mov
push
add
xor
mov
cwtl
fwait
add
xchg
cmp
mov
test
push
mov
and
jecxz
das
xor
dec
repnz
dec
daa
lcall
cmc
inc
add
adcl
push
andl
call
xor
mov
mov
and
mov
xor
sub
movl
mov
adc
and
or
sub
mov
lea
decl
add
xor
jmp
clc
xor
ret
call
xor
xor
inc
ret
ret
add
rolb
xor
sahf
add
mov
cmp
int3
pop
pop
jp
jmp
dec
out
out
insb
addl
adc
mov
and
unpcklps
sub
xor
sbb
xlat
dec
pop
mov
and
pop
and
cmp
dec
lahf
loope
mov
cltd
cmp
xor
xor
andb
ja
stos
mov
adc
cmc
push
jge
push
rorb
mov
cli
loop
fucomp
mov
les
push
call
mov
mov
out
push
push
lea
movsl
and
call
mov
jb
hlt
inc
dec
daa
jp
movsl
and
add
add
inc
clc
mov
movzbl
adc
mov
mov
subl
jmp
add
out
out
sbb
and
mov
push
mov
add
add
jp
icebp
outsl
sbb
icebp
cmp
dec
xor
out
mov
outsl
in
mov
sbb
mov
inc
jnp
cs
sahf
int3
inc
fwait
leave
sbb
stc
pusha
out
ffree
cmc
pandn
andb
out
xchg
dec
repz
and
inc
jnp
mov
stos
loop
loope
push
out
inc
cwtl
arpl
and
inc
lret
out
inc
aaa
xchg
out
dec
xor
aam
push
sub
adc
insl
jp
lcall
rcrl
test
fs
sbb
repnz
cld
dec
sar
push
insb
inc
jb
or
adc
or
jmp
jns
mov
leave
scas
mov
cmp
add
xchg
ficompl
mov
inc
adc
push
shrb
clc
pop
jle
inc
pop
mov
enter
xchg
pop
push
mov
push
gs
pop
call
dec
xchg
jbe
sub
mov
and
sub
adc
mov
imul
and
aad
into
pushf
push
cmp
sub
sub
out
sub
adc
xchg
mov
xchg
test
mov
out
outsl
lret
inc
or
jno
mov
gs
push
mov
int
dec
lds
fwait
lds
cmc
int3
out
cld
fcompl
cmp
push
mov
mov
sub
xor
mov
cmpl
jb
movzwl
and
jmp
push
call
mov
jmp
pop
push
ljmp
sarb
repz
add
rcll
test
mov
pop
sbb
xchg
mov
jae
or
mov
sti
push
or
push
xchg
faddp
inc
nop
scas
dec
mov
orb
jae
testb
adc
cmpsl
add
rcrb
nop
dec
and
or
cmpb
or
jbe
jle
xor
add
stos
or
in
xor
jnp
or
sbb
and
push
lock
push
mov
enter
int
mov
inc
out
sar
hlt
xor
inc
sbb
in
repz
decl
sarl
cmp
cmc
in
mov
adc
sbb
mov
jmp
pop
add
dec
out
scas
dec
and
and
data16
add
mov
or
mov
fiadds
cld
lods
stos
xchg
fdivrs
mov
xchg
push
inc
ret
push
in
ds
mov
pop
cmp
or
test
xchg
mov
push
mov
lahf
cmp
pop
daa
inc
pop
xor
xor
pop
push
push
xor
ss
pushf
ret
mov
scas
sti
je
cli
fstp
lcall
dec
cmp
push
lcall
fs
inc
jb
cmp
add
xor
ficomps
cmp
or
test
arpl
dec
sarb
sub
and
mov
dec
sub
jle
je
add
mov
xor
jmp
hlt
ljmp
cmp
cmp
add
push
sbb
or
dec
cmp
or
xchg
in
jmp
inc
out
and
push
call
ss
adc
stc
cmp
imul
xchg
loopne
mov
cmp
int3
xchg
pop
and
push
aas
outsl
push
mov
sbb
cmp
xchg
or
popa
inc
push
or
daa
inc
ficompl
pop
add
insb
clc
cmp
inc
push
ja
adc
popl
add
int3
jae
adc
jp
fnstenv
xchg
xchg
or
jl
das
jae
xor
sahf
enter
cwtl
sbb
xor
jle
push
testb
xor
inc
cmc
inc
add
ja
incl
jmp
pushl
call
jmp
mov
push
xchg
idivb
out
mov
and
add
mov
rorb
les
push
inc
popa
mov
jno
fistl
lods
pop
jns
sub
cmp
push
cmp
sbb
mov
lods
push
fwait
dec
inc
jne
addr16
cmp
inc
sbb
pop
mov
cmp
push
jl
mov
sbb
ret
mov
push
jge
std
mov
push
int3
pop
inc
mov
loope
inc
pop
dec
movsl
jg
sub
pop
sti
inc
ljmp
shrb
pushf
hlt
push
xchg
dec
inc
cmp
ljmp
dec
push
faddl
or
nop
in
xchg
jo
es
popa
cmp
movsb
inc
cmp
in
cmp
jg
mov
mov
jmp
push
nop
mov
mov
loope,pn
es
cmpsl
sbb
and
add
idivl
cmp
xchg
xor
or
xchg
test
dec
iret
fisttps
ret
push
std
pop
stos
mov
out
gs
stos
dec
shll
pop
cmp
add
xchg
mov
adc
sub
xchg
in
mov
cwtl
dec
mov
ds
pop
int3
insb
lret
or
mov
sbb
lret
lea
les
int
mov
aam
inc
clc
pop
les
mov
js
cwtl
les
call
xchg
push
sbb
cmp
sti
std
add
jmp
xor
lds
shll
nop
pop
out
or
or
lea
add
sub
imul
mov
sbb
mov
adc
mov
jmp
adcb
idiv
out
fistpll
ljmp
lcall
add
lods
dec
das
lock
jno
gs
sahf
dec
imul
stos
lods
cmp
sbb
icebp
iret
std
sub
je
adc
inc
aaa
xchg
jecxz
mov
orb
out
int
hlt
jmp
jnp
fisubrs
mov
sti
adc
adc
jmp
mov
inc
xor
cld
pop
icebp
or
mov
inc
mov
fnsave
and
loop
jb
lds
push
inc
stc
cmp
outsl
xorb
pushw
daa
imul
lret
lcall
movsl
popf
insl
push
push
test
and
mov
lock
lea
adc
push
adc
add
testb
movb
js
inc
add
inc
faddl
movl
cmp
mov
mov
movl
jmp
and
jae
push
in
or
push
and
add
sub
xor
rclb
mov
in
cmp
and
jno
add
sti
loope
adc
jge
rcrb
inc
mov
out
sub
out
mov
inc
pop
enter
cmpsb
hlt
test
pop
hlt
sbb
stos
bound
adc
movsl
pop
mov
loopne
add
push
xlat
negb
dec
lea
or
dec
iret
push
cmp
jge
sub
pop
repnz
mov
jecxz
mov
lds
fsub
addb
stos
sbb
fdivrl
mov
out
in
sarl
mov
repz
insl
popa
mov
cs
xor
nop
add
testb
roll
add
outsl
and
cmp
add
faddp
sub
in
and
add
sahf
js
test
mov
cmp
sbb
inc
in
adc
out
push
push
and
lahf
sbb
testb
div
adc
cmp
je
xchg
rcrb
ret
es
sbb
fstpl
ret
ds
cld
and
jge
test
pop
cmp
outsl
jg
int3
dec
into
dec
mov
lods
sub
jnp
iret
inc
xor
mov
sbb
pop
cmpsb
jns
inc
cld
lcall
pop
xchg
inc
adc
shll
mov
outsb
xchg
scas
lock
sub
jnp
lret
dec
mov
ss
call
pop
movsb
pop
push
sub
inc
push
hlt
xor
cltd
adc
jns
sub
repz
fcompl
adc
mov
neg
mov
xor
jmp
addl
fistps
les
and
add
lds
dec
push
add
and
insb
lcall
mov
js
push
movl
ljmp
push
lods
pop
lods
push
decb
mov
push
fisubrs
addr16
jge
mov
out
xor
sub
movsl
add
in
pop
sbbl
mov
loop
lret
das
jns
push
add
loopne
sti
int
in
inc
or
into
das
fldt
subl
dec
cs
mov
adc
imul
inc
pop
xor
cmp
test
sub
sbb
outsl
xor
and
rcr
in
cmpsl
xor
cld
cmp
push
inc
call
mov
add
repz
sbb
repz
or
out
xchg
add
enter
mov
adc
fists
and
clc
scas
jns
push
mov
divb
and
jl
cmpb
inc
aaa
add
push
in
test
popa
ljmp
stc
lock
push
repz
push
inc
out
lock
sarl
add
jle
loope
inc
inc
cmpxchg
mov
fistpl
aaa
jp
into
adc
test
ds
ds
sbbb
neg
nop
shll
pusha
or
es
repz
mov
lret
pop
jne
out
dec
imul
jg
std
and
mov
add
lahf
iret
sub
mov
jmp
jo
inc
dec
jbe
jle
repnz
nop
xor
popa
lahf
inc
and
add
cld
mov
jmp
syscall
dec
cwtl
adc
cmp
add
mov
cli
mov
sbb
or
cs
ja
xor
mov
ds
xchg
push
jl
fisttps
adc
aas
and
add
push
xchg
sbb
pop
push
arpl
imul
loope
movb
lds
pop
aad
pop
mov
push
ss
test
in
mov
jg
add
movsb
popw
sub
es
ss
test
jmp
out
insl
dec
xor
dec
sub
jecxz
push
mov
shl
bound
fidivs
push
loop
cmpl
xor
into
out
mov
add
push
add
mov
cwtl
cmc
inc
add
adc
jmp
pop
ds
sti
jg
cmp
push
cld
and
add
jbe
int
mov
data16
xchg
inc
adc
cmc
jp
clc
out
mov
dec
mov
pop
scas
push
pop
jb
xor
inc
ror
fs
jnp
sub
cmpsb
cmc
and
xchg
sub
push
add
ss
ds
mov
cmp
xchg
push
les
gs
fnop
mov
je
test
cmpsl
dec
add
and
mov
test
out
jle
and
pop
ret
cmc
addb
imul
adc
jno
ss
adc
lds
inc
out
ret
dec
nop
cmp
mov
fadd
mov
shrb
mov
sub
imul
sub
mov
movzbl
or
mov
orl
jmp
icebp
out
in
std
test
sbb
xchg
mov
add
mov
adc
imul
sarb
and
cmc
stos
test
inc
lcall
call
xor
fnsave
outsb
xchg
mov
push
mov
gs
sub
test
add
dec
jg
dec
pop
test
mov
test
repz
rolb
mov
jge
cs
pop
xchg
mov
sahf
test
mov
bound
mov
mov
mov
add
mov
jno
sub
jmp
aaa
adc
mov
jmp
dec
mov
punpcklwd
jno
add
sub
dec
ds
outsb
mov
or
inc
add
inc
add
jmp
mov
mov
and
mov
mov
cmpl
ja
sbbl
dec
jmp
pushl
push
push
push
call
mov
xor
mov
mov
mov
adcl
jmp
jg
dec
jne
cmc
jg
mov
fsts
xchg
jb
add
mov
jmp
scas
push
jae
testl
cltd
in
adc
lds
pop
lcall
cmp
push
mov
cmp
mov
lods
nop
aaa
cli
movsl
mov
push
add
push
sub
inc
inc
fsubl
mov
adc
fistpl
fdivl
roll
call
xor
sti
jbe
pop
lods
dec
adc
cmp
pop
test
idivl
add
repnz
sub
xchg
sub
les
push
jb
enter
push
sahf
outsb
xchg
imull
pop
dec
inc
mov
mov
stos
xor
pop
inc
xlat
mov
add
add
add
dec
std
jg
push
inc
or
sub
add
add
jmp
jmp
inc
in
dec
xor
enter
push
adc
js
sbb
sbb
test
aaa
imul
pop
sbb
popf
inc
jo
lods
in
rorb
and
jo
lds
push
nop
and
roll
lods
dec
popf
mov
xor
loopne
pop
push
push
bound
sub
sub
sahf
add
push
dec
les
les
mov
dec
rorb
pop
sub
das
jae
and
or
push
add
dec
inc
dec
and
int
leave
lds
pop
mov
lahf
xlat
inc
andl
push
rorb
movb
inc
add
jmp
mov
mov
call
retw
mov
call
add
add
in
dec
mov
outsl
sbb
cltd
or
dec
or
inc
popa
iret
push
pop
inc
enter
adc
cmpb
out
jnp
inc
stos
lahf
sub
scas
ds
subl
or
in
inc
fistps
inc
je
mov
stos
outsl
xor
dec
inc
pop
add
fwait
pop
mov
rcrl
in
pushf
ret
fmul
jge
cwtl
stc
sub
sar
adc
add
push
std
xchg
stc
je
stos
enter
sub
out
lret
hlt
pop
inc
cmc
push
or
xorb
cli
cmp
cmp
jg
dec
cwtl
pop
hlt
fsubl
mov
jo
outsb
pusha
sbb
mov
xchg
adc
inc
pop
add
jmp
mov
jbe
out
xchg
aad
sbb
add
mov
sbb
inc
mov
nop
mov
add
cwtl
and
shrb
dec
lods
sub
test
jmp
sbb
xchg
hlt
xor
outsb
add
sbb
xor
dec
adc
cs
stc
sbb
xchg
fistpl
mov
sub
mov
daa
sub
pop
cli
loop
jns
jecxz
hlt
cmp
ljmp
daa
sahf
mov
test
mov
adc
xlat
sub
icebp
shl
scas
subl
popf
mov
repnz
lret
fwait
xchg
fs
dec
mov
aam
mov
pop
add
shl
arpl
mov
inc
add
inc
add
adc
sbb
jmp
test
cld
sub
sub
xor
ficomps
add
mov
xchg
xchg
sti
leave
loopne
cmpl
adc
cmp
push
jle
jle
mov
dec
ja
and
mov
int
adc
mov
push
into
nop
repz
loope
xchg
mov
js
mov
add
mov
movsb
fisubrs
dec
mov
lret
das
xchg
rclb
add
mov
andb
cmp
xchg
mov
cmp
loope
jb
dec
mov
mov
stc
sbb
adcl
mov
es
pop
add
nop
rcrb
sbb
out
cmp
cmp
movsb
add
mov
das
mov
mov
jmp
mov
mov
cmpl
jbe
jmp
pushl
call
movl
mov
movl
mov
jmp
push
or
pop
fcmovnu
iret
jg
pop
fisubs
mov
add
das
mov
dec
cwtl
sahf
xor
stc
leave
clc
pusha
fnstsw
sub
testb
ss
cmp
fcmovnb
xor
mov
mov
rorl
xlat
sti
inc
sbb
bswap
push
add
sarl
xchg
dec
ja
cmp
cmp
clc
mov
pop
outsb
aas
cmp
test
out
ret
inc
jbe
push
pop
mov
lcall
fisubrl
add
adc
push
cld
jle
cmp
mov
lcall
test
sub
movl
push
or
outsl
cmp
and
cmc
enter
in
insb
daa
in
test
dec
jmp
mov
mov
decl
mov
cmpl
jle
jmp
call
xor
lea
mov
mov
mov
mov
xor
adcl
mov
mov
adc
jmp
call
jbe
mov
pop
add
add
mov
das
rcrb
pop
cli
fisttps
maxps
dec
dec
add
mov
add
add
sub
push
insb
mov
push
popf
push
mov
jo
data16
lods
hlt
daa
jbe
test
int
fwait
movsl
push
leave
test
add
xchg
movl
out
mov
movsb
ljmp
insb
in
dec
fidivrl
push
das
xchg
aad
cmc
mov
icebp
cmp
jmp
jmp
aas
jmp
roll
fcomps
cmp
loope
fimuls
inc
jo
cs
repz
arpl
sbb
cli
lods
repnz
pop
push
nop
push
imul
addl
jmp
lods
mov
mov
ds
bound
push
mov
add
inc
call
sbb
js
stos
sbb
add
out
pop
daa
lret
xchg
mov
add
xchg
xlat
pop
rolb
pop
pop
test
lock
sub
lahf
data16
mov
je
push
out
or
xlat
pop
and
jae
fs
sti
pop
pop
add
fwait
ret
dec
push
mov
bound
cltd
jnp
in
daa
cmp
imul
jp
sub
mov
shlb
in
cmp
addr16
or
mov
loop
push
shrb
add
add
mov
or
add
mov
test
insb
mov
adc
add
jge
jmp
pushl
push
pushl
push
push
call
jmp
dec
or
arpl
neg
sub
sub
sub
lahf
dec
sub
add
bound
dec
xchg
sub
sbb
es
loop
and
and
jge
fs
adc
pop
fists
lods
ds
fcompl
ds
mov
es
hlt
aas
shlb
aas
lods
inc
jg
jl
inc
xchg
test
subb
sub
das
adc
pusha
rol
inc
iret
icebp
or
leave
in
lret
and
mov
mov
or
daa
xchg
js
test
inc
fisubs
fcompl
lods
sbb
mov
in
inc
inc
or
cmp
inc
popa
fsub
stos
fadds
push
and
fadds
inc
or
sub
cwtl
cwtl
push
jae
xlat
div
push
mov
mov
xor
lea
jmp
inc
add
ja
gs
add
mov
addr16
add
add
stos
icebp
roll
mov
std
outsl
mov
push
and
xchg
in
or
pop
xchg
adc
pop
mov
insl
pop
pop
fldt
cwtl
xchg
aam
data16
aam
std
fld
adc
pop
jl
add
ja
shlb
ds
push
setge
aad
loope
jge
decb
jl
arpl
push
inc
xchg
cmp
leave
cmc
clc
fldl
jno
out
iret
inc
test
fiadds
dec
push
jmp
xchg
je
imul
sbb
jle
stos
fbstp
and
xor
add
popf
sub
lock
xchg
imul
adc
roll
add
jno
wbinvd
pop
das
ja
repnz
sbbl
add
mov
cmp
mov
pop
ljmp
xor
cltd
loop,pt
rcrb
rcll
pop
rolb
sti
add
jno
popf
and
or
cmp
and
add
mov
negb
xchg
cmp
mov
pop
clc
mov
mov
je
int
xor
sub
mov
and
ss
adc
shrl
daa
cmpsb
fwait
test
movsl
jl
cli
push
jmp
pusha
mov
inc
add
xchg
data16
fwait
ja
fisubrl
test
adc
dec
lret
nop
lcall
dec
mov
clc
jae
mov
jmp
imul
jae
imul
fdivs
mov
das
add
mov
pop
jns
dec
sub
mov
test
mov
fidivrs
lods
mov
sbb
add
into
loopne
or
add
test
stos
mull
mov
dec
sahf
movl
cwtl
mov
or
icebp
fstps
or
pop
lret
out
mov
mov
jg
ffreep
dec
pop
xchg
rolb
and
movsb
jbe
mov
or
cmp
pop
je
loope
fdivrl
xchg
jne
cmp
jae
loop
leave
xchg
rcr
cmpsb
and
into
xchg
jno
fcoml
cld
or
dec
inc
adc
xor
addl
inc
or
lods
mov
push
fmull
sbb
inc
add
cmc
inc
add
roll
add
sbb
jge
xor
xor
add
dec
out
or
jle
ds
or
std
inc
mov
pop
jne
repz
scas
mov
aaa
std
jb
adc
sbb
jge
mov
cltd
jge
lds
sbb
inc
inc
popa
popf
mov
mov
cmpsb
jae
jmp
push
js
or
js
xchg
cmp
sbb
jae
and
popa
aaa
popa
orl
dec
sbb
imul
sbb
xor
sbb
ret
addl
and
or
pusha
insb
ror
daa
ds
or
xchg
imul
outsb
xor
push
inc
je
sbb
mov
mov
movl
xor
mov
or
jmp
stos
ficompl
in
aad
pop
or
icebp
xor
add
pop
testb
subb
fwait
ss
mov
jmp
lea
pop
out
pop
cmp
bound
jns
fstp
jmp
inc
jb
xor
cmp
rcl
lds
push
jne
in
mov
inc
xchg
mov
cltd
pop
js
ja
mov
repnz
mov
sahf
sub
cmp
std
jns
imull
test
bound
cltd
js
xchg
mov
sbb
dec
xchg
sub
out
je
jbe
sub
rcl
icebp
sbb
subl
in
ds
xor
jae
add
xor
ja
xchg
cmpsl
cmc
loop
insl
mov
add
jmp
fstpt
inc
out
fistpll
cmp
bound
mov
aas
fistpll
mov
outsl
sahf
xchg
icebp
xchg
dec
sbb
dec
aam
mov
jne
mov
cmp
pop
fnstenv
aad
xor
xchg
in
inc
add
pop
jle
lock
std
ret
xchg
int
or
dec
or
jbe
addl
out
mov
lds
push
or
push
out
imul
repz
mov
outsl
lahf
mov
ret
sbb
shll
add
mov
cld
dec
adc
xor
call
loopne
lea
adc
aam
sahf
xchg
orl
push
jmp
stc
or
aas
mov
push
roll
add
iret
insb
lds
out
iret
in
mov
adc
xor
add
sub
fisttps
mov
jnp
or
adc
sahf
mov
sub
push
jg
mov
push
stos
push
mov
hlt
lcall
cmp
mov
fdivrs
ret
dec
movsl
std
shl
int3
shrl
pop
or
pop
test
push
mov
cmp
add
movsb
pop
push
pushf
test
icebp
xlat
push
jmp
sbb
and
test
int
lcall
imul
int3
sbb
fwait
cmp
pop
ret
outsb
ret
mov
adc
mov
mov
sti
jle
imul
pop
wrmsr
incb
movsl
or
cmp
movzwl
sub
mov
lea
mov
add
mov
jmp
lods
sub
dec
scas
dec
in
ljmp
xchg
xor
add
test
popa
mov
add
mov
pop
into
pop
les
jp
repnz
scas
xchg
imul
dec
mov
fucomp
movl
cmp
cmp
into
addb
in
aam
xor
and
testl
pusha
mov
repnz
pop
xchg
jl
jg
jnp
xor
jo
out
jmp
mov
push
mov
ja
dec
pop
xor
pop
ja
jmp
mov
mov
faddl
mov
lcall
ret
adc
xor
pop
mov
insl
pop
cmpsb
mov
pop
push
lds
out
add
inc
adc
in
roll
add
xchg
pop
sbb
stc
mov
dec
in
sbb
xchg
fnsave
add
mov
test
lods
out
or
imul
aas
xchg
add
les
stos
shll
mov
addr16
outsb
xchg
lea
fs
pusha
add
dec
popa
aas
lret
inc
adc
test
xchg
mov
loope
push
push
outsl
pop
mov
cli
data16
xchg
shlb
int
enter
cmp
push
jg
fisttpll
mov
push
fs
xchg
shrl
add
push
jp
push
movsl
xchg
int
jmp
mov
sbb
add
inc
and
xchg
sbb
aas
xchg
mov
loopne
shrb
pop
insl
mov
stos
xorb
loope
mov
jnp
push
out
pop
mov
xor
orl
jmp
test
fildll
in
mov
in
adc
jo
xor
add
shrb
xlat
mov
pop
jb
xchg
mov
lods
add
xor
inc
test
mov
jp
mov
rorl
ret
sub
xor
sub
sbb
je
ja
push
call
and
bound
or
movsl
ja
je
push
adc
out
fnstenv
jg
mov
push
push
dec
mov
pop
ficoms
insb
out
out
jb
popf
push
mov
scas
mov
repz
loope
imul
leave
xlat
les
jnp
xchg
jg
push
sahf
xor
and
xor
dec
icebp
and
sarl
adc
mov
inc
add
add
mov
sbbl
xor
cmpl
jbe
subl
jmp
push
call
jmp
xor
dec
jg
jg
lahf
outsb
xor
xor
add
out
in
fstpl
arpl
rol
jp
js
mov
lds
pop
push
cltd
insl
adc
inc
inc
scas
adc
out
pop
and
sahf
mov
sarb
mov
sub
pop
jmp
push
outsb
push
mov
mov
mov
jge
mov
pushf
cs
push
cltd
push
pop
loop
adc
into
movsl
fcom
push
jne
ds
je
jl
add
xor
sub
push
test
fistps
add
aas
push
lea
mov
inc
lahf
sub
dec
mov
jmp
lock
test
add
xchg
pop
jne
lcall
adc
out
bound
cmpb
pop
sub
push
in
jmp
lcall
fbstp
cmp
sarb
mov
aas
in
sbb
mov
sub
jmp
sar
aas
sub
add
rorl
adc
and
outsl
mov
cwtl
dec
mov
cli
jns
out
dec
push
cmp
std
rcll
dec
shrb
jle
imul
rorl
aam
or
mov
int3
jmp
cmpsl
cmp
js
dec
sti
lds
pusha
js
pusha
adc
xor
add
sar
jne
scas
je
div
sub
or
ja
jecxz
xchg
mov
pop
test
inc
push
cli
data16
cs
pusha
jae
in
stos
mov
lret
add
xor
jmp
jae
sub
inc
fwait
xchg
les
add
mov
stos
out
test
jno
adc
cli
cmpsb
mov
pop
push
jmp
or
xor
dec
out
hlt
clc
jle
adcb
aas
sub
mov
aam
jae
out
xchg
daa
and
xor
xorb
sti
pop
mov
sub
cmp
shrl
leave
mov
mov
xorb
xor
dec
inc
push
int
pop
adc
les
cltd
out
sub
mov
xchg
mov
aam
into
decb
sbb
cmpb
mov
jno
mov
push
push
push
dec
add
rcll
aaa
cltd
jg
fimuls
lea
mov
mov
and
mov
orl
mov
subl
xor
mov
mov
xor
mov
jmp
je
lea
scas
sti
push
stos
xor
inc
fiaddl
add
jae
test
jne
mov
mov
popf
sub
dec
xchg
xchg
nop
das
add
daa
add
lods
imull
sahf
sti
leave
mov
fwait
mov
mov
jmp
mov
xchg
fldenv
mov
cmp
pop
sbb
into
and
std
sahf
and
or
cmpsb
pusha
xchg
in
mov
pop
mov
cmp
mov
out
bound
push
mov
pop
movsb
xor
movsl
js
jns
enter
ret
sub
jle
cmp
fcomps
pop
xchg
jge
xor
es
inc
sub
push
cld
xor
mov
add
jmp
dec
xor
dec
dec
stos
jmp
enter
aas
cmp
add
pushw
ljmp
xchg
push
cmp
sub
or
mov
aas
push
and
scas
cmp
jb
inc
adc
xlat
fisttpl
fisubrl
inc
ss
cmp
cmc
add
std
lret
shlb
popf
inc
mov
cmpsl
xor
sbb
jae
pop
lea
dec
dec
ret
or
ss
dec
arpl
mov
dec
dec
cmp
push
imul
sub
jl
mov
xchg
push
out
pop
ss
pop
ret
xchg
aas
push
cmc
iret
test
xorb
jle
movsl
cld
cmp
test
cmp
shlb
ret
add
add
push
mov
mov
leave
sub
cli
cmp
add
pop
or
xlat
xchg
pop
mov
fistpll
and
push
pop
xor
push
ret
mov
shlb
xchg
pop
shll
mov
aaa
push
or
mov
and
mov
or
popf
in
or
xor
push
add
out
std
dec
push
xchg
inc
cmc
add
xchg
sahf
inc
push
dec
iret
fsts
mov
test
subl
mov
sub
jmp
sub
arpl
insb
das
cld
inc
flds
lock
std
out
sub
pop
call
aas
or
test
pop
cli
aam
mov
mov
jmp
pop
xor
stc
ja
aas
xor
xor
mov
add
mov
sbb
and
pop
or
js
xchg
orl
adc
push
rorb
maskmovq
imull
popf
sub
adc
sti
fistl
iret
out
scas
jecxz
push
popf
daa
cmp
pop
out
inc
xor
popa
inc
shl
test
cmpsl
mov
dec
mov
jecxz
xlat
imul
scas
out
inc
mov
icebp
mov
pop
out
mov
fstl
sub
popf
stos
xor
mov
in
outsl
nop
in
dec
popf
push
les
out
xchg
mov
dec
xor
pop
add
mov
or
dec
inc
xchg
clc
xor
test
aas
inc
outsb
sub
pop
mov
mov
xor
mov
add
mov
cmp
je
mov
sub
jmp
mov
scas
popf
ret
sarb
sbb
add
mov
movsb
xor
fdivl
daa
sbb
nop
outsl
loope
or
int3
pop
xchg
std
fstl
push
in
les
jbe
fcmove
add
push
sahf
mov
adc
push
arpl
fstpt
cmpsl
xchg
push
jle
test
push
enter
fnstenvs
jmp
jne
adc
ret
bsf
nop
popl
pop
cmpsb
sbb
inc
pop
fwait
sub
out
pop
add
nop
in
xchg
push
inc
cmc
mov
mov
repnz
push
xchg
lret
into
sbbb
lret
outsl
sub
push
adc
adc
decb
xchg
pop
das
and
inc
cld
mov
mov
mov
xor
xor
jmp
mov
pushl
adc
add
mov
xchg
mov
popf
inc
jg
fldl
mov
dec
movsl
push
mov
leave
lods
aaa
or
jg
xor
mov
int3
pop
roll
cmp
test
jbe
mov
icebp
mov
sbb
cmp
jmp
sub
pop
rcrl
pusha
or
dec
test
push
int
lret
test
sub
push
out
push
xor
sub
cmp
das
add
jbe
pop
outsb
and
sti
sbbl
test
sub
pop
mov
mov
jno
inc
xor
mov
jae,pn
pop
add
jmp
popa
push
xchg
stos
ljmp
shlb
xchg
adc
add
push
lea
stc
jns
add
jge
jae
rol
mov
test
clc
cli
or
shrl
arpl
aas
adc
mov
jp
fnsave
jl
inc
sub
xor
sahf
loope
jl
cmc
sub
test
mov
cwtl
or
fxch
cmp
cld
es
add
mov
sub
iret
inc
dec
jecxz
add
stos
icebp
or
test
pop
jbe
or
not
mov
arpl
in
or
mov
and
push
jl
push
sahf
xchg
mov
lret
movb
pop
adc
stos
pusha
xchg
lds
cmp
adc
mov
mov
jmp
mov
stos
out
out
ljmp
mov
add
add
cmp
mov
addr16
sub
add
mov
scas
repz
in
xchg
adc
mov
hlt
cmp
sahf
mov
sub
repnz
in
clc
test
dec
sbb
imul
and
bswap
cmpl
push
push
push
pop
dec
les
in
adc
xor
mov
cs
ss
pop
dec
in
sbb
push
out
scas
fwait
incb
cmp
xchg
lret
pop
cwtl
int
mov
add
cwtl
xor
orl
pop
shlb
daa
insb
repnz
mov
nop
inc
int3
je
scas
rcl
xchg
xor
mov
mov
xor
xor
add
adc
mov
cmp
jne
jmp
ret
sti
push
jg
xor
or
pop
cmp
add
mov
sbb
data16
adc
sub
cld
imul
inc
sub
push
bound
lcall
xchg
push
adc
mov
lret
dec
and
cmp
insb
inc
pusha
fnstcw
add
jnp
sbb
pusha
cli
cli
xchg
test
cmpsb
mov
xlat
push
fmulp
sub
loop
and
into
or
sub
add
pusha
adc
das
lods
add
out
sbb
push
mov
pop
clc
pop
shll
mov
std
daa
in
and
cltd
shr
adc
mov
repz
cmp
je
jmp
jmp
jo
cld
add
sub
or
add
add
mov
dec
pop
adc
shll
aas
sub
inc
call
pop
or
rclb
mov
inc
ljmp
or
fwait
icebp
adc
push
mov
mov
inc
div
jbe
hlt
cmp
js
repz
lods
rorl
ret
xor
clc
and
adc
call
roll
adc
fs
shrb
inc
sbb
pop
cmp
xchg
rcll
xor
mov
cld
push
add
adc
add
pop
cld
cmp
rcrl
jbe
stc
add
mov
cmp
or
mov
xor
js
mov
mov
xor
xor
jmp
xchg
push
jg
fldenv
cli
pop
in
add
mov
loop
push
mov
loop
jl
jne
cmpsb
scas
ja
jmp
sub
dec
repnz
mov
cltd
dec
in
adc
ret
pop
sub
leave
cmc
cmpsl
mov
sbb
cs
sub
dec
mov
mov
lcall
cmp
mov
push
cmp
push
out
gs
mov
adc
outsb
dec
xlat
repnz
mov
mov
bound
fwait
out
dec
stc
imull
and
inc
ret
adc
pop
jb
jne
jge
aad
les
imul
test
in
fwait
adcl
movsb
mov
xor
add
adc
mov
mov
mov
mov
jmp
shr
adc
aas
xlat
out
jb
cmp
adc
mov
mov
add
cld
or
cmp
xor
fistps
fiaddl
xchg
out
lods
sbb
jge
lcall
fstpl
shlb
add
stc
mov
out
adcb
into
sar
leave
fsub
jl
mov
adc
adc
jecxz
out
cmpl
ja
adc
loop
loop
adc
mov
adc
out
ss
adc
sahf
cs
lock
push
xchg
mov
stc
out
out
or
adc
lods
faddp
adc
adc
pop
loopne
push
movsl
or
and
or
rcll
fucomp
sub
mov
imul
stc
xchg
sbb
jl
mov
rclb
roll
add
test
cmp
mov
pushf
aas
jp
cwtl
addr16
inc
add
mov
ret
rcrb
or
pop
cltd
aad
or
lret
xor
pop
adc
push
mov
int3
or
cmp
adc
mov
shl
shll
adc
test
jne
cmp
cmovns
xchg
jbe
int
inc
push
mov
cltd
test
mov
jg
scas
mov
aas
cmpl
imul
arpl
push
rcl
or
or
andl
stos
call
setnp
dec
rcll
call
lods
mov
repnz
cli
mov
xchg
push
xchg
pop
add
les
push
mov
mov
inc
lods
loop
xor
add
adc
mov
jmp
cmp
add
adc
xor
inc
add
mov
shll
sbb
pushf
pop
mov
inc
insb
add
xchg
sti
mov
xor
inc
fwait
jp
loopne
out
cmp
jge
bnd
mov
mov
pop
pop
cmc
pop
mov
or
lahf
pop
arpl
sbb
mov
pop
mov
inc
xchg
sbb
mov
popa
add
call
dec
pushf
leave
popf
pop
sbb
test
hlt
or
jg
mov
sbb
mov
lock
sbb
push
insl
movsl
push
or
or
sbbb
andl
xor
push
call
imul
inc
sbb
test
add
add
add
inc
mov
cmc
ljmp
idivl
lahf
mov
mov
push
mov
or
push
out
mov
sub
fadds
mov
pop
into
gs
adc
cli
outsl
fisubrl
inc
jb
push
aam
inc
mov
pop
test
ja
popa
xchg
shr
sbb
pop
test
mov
xlat
shlb
mov
fisttps
mov
insb
leave
push
inc
pop
xor
popa
jne
movsl
arpl
popf
push
out
push
dec
pushf
loop
cmp
repz
testl
enter
ret
inc
mov
xchg
and
cmp
rclb
outsb
test
adc
rcrl
js
or
and
cmp
je
mov
mov
mov
mov
lea
jmp
mov
pop
sarl
out
or
in
inc
add
mov
shlb
xchg
cltd
lret
out
cmp
std
lods
xlat
lods
popf
or
andb
xor
or
ljmp
push
test
pop
sbb
icebp
mull
shll
into
out
fs
pop
jmp
or
or
out
insl
ljmp
leave
sbb
add
and
dec
stc
iret
sahf
push
in
sbb
loopne
cmp
mov
mov
jae
shl
lahf
pop
out
aam
adc
bound
test
movsw
or
sbb
iret
or
int
in
int3
xor
repnz
mov
lea
insb
sbb
adc
sbb
push
add
mov
jmp
lcall
out
pop
ss
addr16
inc
add
mov
cmpsb
mov
cltd
dec
inc
vpsrlq
or
out
in
xchg
mov
adc
orl
or
xchg
xchg
mov
jb
push
jmp
loop
inc
imul
int3
mov
push
out
cli
or
ret
xchg
les
out
push
sub
and
pop
jo
adc
xchg
clc
movsl
mov
hlt
xor
aaa
jo
pop
xor
fsubl
mov
inc
adc
or
pop
jbe
idivb
lock
pushf
sbb
mov
gs
dec
sub
xchg
cmp
sbb
fstpl
mov
shlb
sub
sahf
add
in
xorl
mov
xor
jmp
ret
out
push
popf
js,pt
in
dec
xor
add
add
dec
jb
out
std
lahf
test
neg
pushf
pusha
mov
mov
rclb
insl
cltd
seta
jle
stc
call
push
cli
pop
push
aaa
outsb
das
int3
xchg
ret
ret
mov
fs
xchg
or
sbb
and
fldenv
jle
dec
jno
xlat
mov
fisttpl
mov
add
pmuludq
sub
fwait
add
addr16
sub
jnp
sbb
and
lcall
xchg
and
fistpl
jmp
cmpsb
mov
dec
cltd
stos
sbb
jge
cmp
js
cmpsb
repnz
mov
mov
mov
xor
add
adc
jmp
add
mov
dec
addr16
inc
add
mov
mov
xchg
shll
jge
mov
mov
dec
daa
testl
adc
sbb
cmp
xchg
mov
pop
or
xorb
int
sbb
int3
and
std
js
mov
lret
or
std
push
rcrl
in
mov
mov
xor
lret
out
mov
mov
std
dec
stos
add
mov
push
outsl
and
dec
lock
int
fcom
adc
ffree
add
add
cmp
mov
add
push
stos
xchg
fwait
xchg
push
inc
fistl
push
repnz
rcl
xor
mov
mov
mov
mov
xor
mov
cmp
jmp
in
call
in
stc
ja
push
aas
xchg
int3
add
inc
add
mov
push
sbb
pushl
iret
jne
xchg
out
movsl
push
outsl
outsb
mulb
std
and
dec
into
jno
mov
fistps
loopne
cmc
jge
sahf
push
xor
and
daa
adc
adcl
add
std
pop
sub
es
add
jl
pop
fiaddl
and
addr16
jge
leave
push
sbb
mov
aad
jo
ffree
je
or
sub
pop
fmull
in
mov
sub
xchg
jnp
stc
rcrl
or
xor
mov
out
lret
cmp
inc
sbb
adc
cs
test
or
add
add
sub
xlat
mov
pop
scas
sti
daa
jp
inc
add
mov
jmp
lahf
cmp
pop
push
test
in
clc
add
insl
test
cmp
pop
cmp
cmp
inc
adc
adc
lods
std
inc
les
inc
inc
inc
pop
in
cltd
pushf
stc
sub
cmp
aad
enter
jnp
dec
push
rorl
cs
scas
lret
shll
mov
or
adc
mov
adc
add
sbb
lret
fcom
add
or
loope
insl
arpl
mov
sbb
cmp
xor
les
cli
add
pop
push
sbb
pop
sahf
jp
rclb
sarl
xchg
ds
in
push
sbbl
cmp
jne
mov
mov
xor
xor
jmp
xor
xor
cmp
addr16
xchg
dec
vsubss
fildl
add
and
dec
adc
mov
xchg
xor
popf
or
cwtl
mov
jns
sbb
push
sbbb
and
sub
addr16
xchg
sub
jge
fisttps
or
xchg
or
sarb
pop
add
sbbb
cld
inc
jp
push
push
mov
cmp
cmpsb
cmpsl
jbe
mov
xlat
dec
jb
mov
lret
mov
fisttps
jl
mov
pop
scas
mov
frstor
pop
imul
and
aaa
std
scas
stc
add
cld
addr16
pop
pop
aam
int
add
and
cmp
lock
pop
adc
popa
not
insb
faddl
mov
jmp
ss
in
out
mov
dec
cmp
pusha
int
inc
add
mov
outsb
sahf
popa
xchg
sbb
or
mov
int3
lea
push
pop
call
mov
or
mov
mov
fwait
jmp
je
and
je
loopne
into
test
in
cld
test
pop
pop
inc
cmp
pop
xchg
and
cld
call
mov
jns
xor
icebp
jns,pn
mov
add
lds
mov
lea
jle
stos
iret
xchg
lods
out
sub
mov
fnstsw
fcoml
xor
mov
sub
addr16
mov
addb
xor
std
mov
add
je
inc
sahf
pop
xlat
addr16
xlat
enter
ret
mov
jmp
and
jne
pop
mov
and
xor
addr16
dec
add
mov
xlat
call
dec
jmp
lret
cwtl
gs
jns
movsb
inc
mov
adc
ret
or
movsl
seta
mov
adc
or
movsb
lcall
dec
lret
test
nop
fwait
aam
sbb
in
iret
lret
mov
jmp
push
push
mov
xlat
call
fnstsw
test
mov
cltd
stc
mov
lods
jge
movsl
xchg
out
test
rclb
and
aaa
cmp
cmp
pop
mov
cltd
mov
or
sub
cmp
mov
xor
decb
mov
lea
add
roll
add
sbb
cwtl
sbb
mov
or
add
mov
pop
xor
pop
sbb
xor
sarl
test
cld
jp
adc
lret
mov
sub
fsub
push
test
insl
insl
int3
sub
inc
push
pop
repnz
dec
mov
lcall
add
movl
mov
xchg
adcl
mov
cmp
jmp
int3
add
add
xor
rep
dec
add
adc
inc
mov
pop
lahf
test
lret
and
inc
aas
or
xor
ljmp
js
pop
jbe
mov
mov
addb
pop
pop
pushl
push
jmp
cmp
sti
sbb
loop
dec
add
mov
lods
arpl
push
test
xor
cmp
fisttpll
adc
add
adc
std
xchg
dec
inc
cs
push
movsl
std
cmpsb
inc
mov
les
imul
xlat
mov
xlat
mov
mov
ljmp
adc
aas
push
push
xor
insb
je
mov
cltd
lret
pusha
loope
outsl
pop
fisttpll
mov
pusha
ja
mov
rcrb
rolb
jbe
outsl
test
jle
xchg
aaa
insl
mov
fcomp
cmp
and
xchg
cmp
aas
sarl
das
mov
in
aas
dec
rol
popf
int
add
arpl
insl
dec
push
call
jmp
stos
mov
in
in
fisttps
ficomps
jno
orb
mov
inc
mov
imul
fldcw
pop
xchg
in
stos
sti
mov
mov
js
scas
add
adc
ret
jo
clc
pushf
xor
loopne
pop
lret
iret
xchg
lret
lock
mov
int3
mov
mov
cmp
inc
shr
cmp
xor
mov
hlt
push
mov
mov
sub
dec
clc
and
jo
cld
into
es
inc
loop
jbe
xchg
cwtl
sahf
push
lea
out
adc
add
adc
sub
lods
jae
cwtl
fiaddl
xlat
add
or
pop
jl
mov
sub
syscall
mov
inc
jmpw
add
cwtl
jns
jns
std
xor
mov
mov
rclb
enter
push
push
lea
int
push
js
adc
je
dec
adc
sbb
mov
lods
in
mov
fdivs
es
add
je
test
lods
aas
rclb
ljmp
xor
leave
or
or
leave
iret
loope
or
xor
add
xchg
aam
push
push
in
insl
in
push
test
push
lods
aaa
imulb
cmpb
stos
sub
adc
pop
scas
loope
mov
pop
mov
and
xor
mov
mov
mov
das
imul
jp
gs
mov
in
daa
mov
inc
stos
daa
mov
bound
decl
add
add
loopne
test
addr16
clc
dec
add
mov
pop
push
mov
negb
sbb
jo
inc
push
cwtl
mov
test
jo
int
imulb
sub
mov
cmpsb
push
cmpsb
dec
xchg
daa
fdivl
mov
insl
cmp
es
xor
iret
jae
hlt
push
mov
call
mov
aas
xchg
cmc
sbb
xchg
outsl
fisubrl
add
xchg
adc
xchg
or
loopne
adc
ret
inc
ret
lcall
fs
cmp
aas
xor
scas
mov
es
lods
push
xchg
pop
cwtl
mov
adc
lret
or
push
add
push
or
roll
add
into
jmp
fdivrp
sbb
leave
shll
add
mov
in
out
jp
add
sbb
pop
or
pop
mov
adc
hlt
dec
popa
pop
cmp
dec
icebp
ja
inc
lahf
dec
inc
add
xchg
mov
add
cltd
push
subl
cmpsb
subb
int3
ficoms
adc
push
inc
insb
movsl
mov
out
in
sub
fwait
add
enter
cmpl
pop
pop
jo
push
repz
lret
and
cmp
sbb
hlt
testb
scas
fiaddl
push
push
xor
fadds
xchg
jae
ljmp
or
adc
jbe
jo
lds
into
mov
jmp
mov
add
jmp
mov
xchg
jle
fwait
jge
ja
pop
ret
outsb
dec
add
mov
fsubp
xor
lock
dec
insl
rcr
fadd
adc
lcall
cs
mov
fistps
cmp
jmp
cmp
lock
lea
ja
and
pminub
leave
popa
scas
mov
mov
mov
push
sarl
mov
outsl
push
dec
sub
pop
pop
xchg
aas
stc
sbb
mov
lret
mov
ret
fstps
sbb
jmp
pushf
dec
mov
scas
push
lods
cmc
xlat
jmp
xchg
cs
xor
xor
or
xchg
sbb
xor
les
or
mov
mov
je
xor
dec
mov
mov
jmp
js
or
ds
jp
push
dec
or
mov
dec
add
mov
and
pop
inc
dec
test
mov
ds
cmp
dec
lret
les
jbe
stos
mov
sbb
leave
testl
enter
aam
xor
jmp
dec
enter
jo
jg
cmp
mov
aas
or
xchg
lcall
xor
push
hlt
or
and
xor
push
push
sbb
data16
fiaddl
add
mov
ret
fsub
mov
pop
jns
push
cmpsl
cmpsb
mov
push
popl
es
mov
and
mov
inc
or
sbb
cwtl
mov
lret
in
mov
push
fucom
xchg
inc
inc
mov
mov
jmp
or
or
outsl
repnz
std
and
xchg
in
add
mov
test
or
orb
mov
adc
movaps
clc
ret
cmpsb
inc
or
mov
test
cmpsb
sbb
daa
in
cmp
je
and
xlat
ja
cmp
adc
xchg
aad
rclb
es
and
add
fsubrl
mov
cmp
mov
jbe
xlat
jp
jnp
cmpsl
push
mov
insb
movsb
js
stc
shlb
outsb
daa
add
lcall
cld
sbbb
push
lods
stos
ret
pop
adc
adc
sti
andl
loopne
fsubrl
adc
in
arpl
and
add
data16
push
mov
movzwl
cltd
add
jmp
fimuls
xor
xor
out
and
mov
setg
add
and
jb
pop
mov
je
sbbb
dec
ror
shll
or
int3
pop
push
lds
xor
adc
dec
sahf
testl
lods
cmp
pushf
pop
js
lret
lods
mov
pusha
lcall
out
data16
icebp
sbb
xchg
xor
push
cmp
faddl
fxch
cltd
cli
sub
popa
inc
imul
jle
dec
push
mov
jo
lret
sbb
adcl
je
data16
mov
popf
js
push
adc
sub
ficomps
mov
inc
ljmp
in
adc
inc
pop
mov
or
pushl
rorl
mov
push
mov
or
inc
or
test
pop
add
jmp
sub
mov
pop
sub
jbe
pop
push
add
mov
xchg
xchg
mov
inc
mov
dec
dec
push
mov
or
cmovo
cld
fisubl
insl
int
dec
jle
cmpsl
std
scas
nop
and
push
gs
daa
leave
mov
xlat
je
mov
and
imul
cwtl
mov
mov
repz
fldenv
sbb
in
push
mov
cmp
adc
jbe
andb
lods
push
adc
int3
xlat
cmpsb
mov
in
mov
xchg
outsb
shll
and
and
mov
cmpsb
xor
xor
pusha
clc
push
mov
cmp
jmp
popa
xchg
xor
std
outsl
mov
adcb
add
pusha
jp
outsb
add
dec
stos
or
aam
jl
shlb
sub
pop
int3
sbb
inc
add
mov
cmp
and
lcall
jp
aas
arpl
dec
test
imul
aam
mov
aaa
out
insl
sub
roll
dec
xor
adc
jmp
aas
adc
ja
loop
pop
mov
sub
lods
std
cmpsl
jp
in
imul
jno
and
nop
pop
push
nop
insl
sbb
or
sub
mov
dec
inc
push
gs
xchg
add
int
aam
mov
rcll
push
sarb
adc
add
add
rorl
mov
xor
xchg
int
rclb
add
lcall
scas
rcll
mov
lahf
stos
sub
in
fiadds
in
pop
fcomp
xor
or
sbb
mov
or
call
in
or
adc
and
ret
mov
add
aad
imul
and
lds
add
jne
in
mov
inc
leave
cmp
push
addr16
adc
fimull
and
outsb
out
mov
or
mov
loope
stos
jno
scas
mov
scas
jmp
rorl
or
jmp
xor
jecxz
sbb
daa
lahf
mov
pop
push
or
push
jle
sbb
dec
icebp
sbb
movl
mov
jmp
jecxz
outsb
loope
jmp
push
adc
xor
xor
add
add
xchg
dec
call
or
mov
test
js
imul
dec
pop
mov
scas
mov
mov
shrl
pop
std
cs
dec
cmp
jbe
push
mov
nop
imul
in
jecxz
pop
and
addr16
sub
jo
fs
mov
pushf
pusha
mov
mov
insb
iret
dec
xchg
sub
or
mov
push
fst
and
jns
jge
sbb
test
sub
jge
mov
xchg
in
cmpsb
push
mov
insl
jno
movsb
mov
mov
dec
aas
mov
push
and
jl
xchg
adc
lds
lea
mov
mov
movl
jmp
or
insl
ja
or
movsb
sti
xor
lds
mov
mov
or
mov
mov
pop
cmp
mov
mov
push
test
push
mov
inc
stc
jle
jle
dec
cmp
shlb
popa
xchg
ds
push
loopne
mov
mov
es
aas
adc
clc
push
test
aam
fs
mov
popf
fnsave
pop
jl
cs
sub
push
adc
jbe
cmpsl
cld
adc
sti
loop
loope
ja
stc
mov
ja
cs
push
fadd
inc
cltd
lds
scas
popf
fisttpl
jno
add
inc
jge
and
dec
rcpps
into
ss
data16
mov
add
xor
xor
int3
sahf
lods
loop
and
inc
sbb
roll
add
outsl
call
xor
ds
lcall
jnp
in
push
add
mov
call
sbb
in
shlb
fst
andb
or
xor
clc
push
repz
mov
dec
pushf
jno
push
shlw
pushf
push
in
daa
inc
add
sbb
into
inc
xlat
xor
int
ja
pop
sub
aam
rorl
aam
cmp
push
mov
dec
pop
popf
and
sbb
and
xor
out
rcll
adc
xchg
dec
insl
jg
ss
popf
popa
add
inc
and
test
std
cld
pop
push
xlat
dec
cmpsb
add
mov
push
fisubs
pop
mov
sar
add
movl
mov
movl
mov
mov
jmp
inc
std
inc
fwait
add
test
add
mov
pop
lcall
mov
test
frstor
push
adc
push
jmp
mov
mov
push
loop
ret
push
xchg
out
sbb
push
inc
pop
and
lret
jle
mov
loope
ljmp
je
adc
sub
mov
mov
scas
xor
xchg
sub
pop
in
lret
mov
xchg
les
dec
jb
out
int3
iret
sbb
jns
mov
ds
pop
loopne
inc
gs
jne
cld
roll
mov
repnz
aas
and
jecxz
pop
add
and
clc
repz
popf
add
push
jns
sub
xchg
lahf
sarl
xor
push
or
adc
xor
jmp
mov
mov
mov
xchg
add
mov
sbb
pop
in
push
xor
mov
mov
xor
repz
out
test
sub
movsl
cmp
mov
enter
shrl
or
fldenv
dec
int3
mov
and
push
test
or
add
stc
jb
push
add
pushf
test
push
add
inc
pop
add
aad
cmp
adc
xchg
ret
dec
pop
cld
mov
aam
addb
push
jno
into
pushf
cmc
and
sahf
mov
mov
mov
lcall
jae
cltd
inc
in
int3
fidivrs
cmp
push
xchg
lock
ror
les
les
mov
mov
mov
xor
jmp
jbe
enter
pushl
push
inc
cmp
push
add
mov
inc
and
adc
mov
adc
jecxz
addb
add
push
mov
ficoml
aam
out
jbe
clc
dec
aaa
add
out
add
xchg
stc
sub
imul
push
out
out
sbbl
mov
jecxz
in
std
inc
cmp
enter
fiaddl
loope
sbb
aam
push
out
mov
dec
xchg
mov
in
xor
andl
pop
xor
jl
arpl
ja
imul
push
fildll
jg
not
inc
lcall
jbe
inc
cld
jns
jbe
push
nop
fisubrl
clc
daa
jp
add
jge
xchg
add
jmp
mov
sti
mov
lahf
mov
push
add
mov
enter
xchg
push
push
hlt
add
mov
popf
in
daa
enter
or
push
aaa
or
insl
lods
sub
or
jno
lea
inc
rorb
inc
scas
out
xchg
scas
cmp
imul
notb
outsb
lahf
test
sbb
in
out
jo
outsl
or
das
cmp
out
roll
daa
jge
out
cmpsl
fisubl
cmp
shrb
jmp
push
cmp
aaa
testb
pop
and
stos
sub
scas
fimull
mov
sbb
mov
pop
js
mov
jg
cld
pusha
popa
push
bound
ja
stc
xor
inc
adc
adc
roll
add
push
or
pop
pop
push
dec
sub
lock
rcrl
push
add
mov
stos
ret
xor
inc
std
sub
xor
add
js
mov
xor
insb
test
bound
cwtl
pop
std
adcl
and
and
or
into
mov
or
mov
cmp
mov
lret
mov
ljmp
sub
fiadds
and
inc
dec
scas
dec
sbb
sub
nop
enter
mov
das
insl
movsl
pop
aad
aam
lods
push
mov
lods
call
add
push
mov
repnz
testl
mov
sbb
push
loop
movsb
push
ret
aas
cli
sub
sbb
mov
mov
mov
xor
jmp
xchg
subb
test
xchg
movsl
cmc
adc
lahf
arpl
add
pop
fcompl
pop
fwait
pop
or
mov
es
xchg
cmp
jge
add
lahf
cmp
add
pop
xor
mov
push
adc
jae
jae
scas
push
imul
add
fadds
adc
lret
test
imul
inc
mov
int
lret
fdiv
jae
or
jmp
xchg
stos
mov
push
mov
enter
add
sub
arpl
scas
push
xchg
xor
jnp
mov
rclb
xlat
inc
adc
mov
mov
shl
sbb
jmp
int
dec
dec
add
mov
je
xor
lea
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
jmp
inc
or
inc
jge
jg
arpl
push
or
push
pop
add
mov
xchg
fcomp
imul
neg
aaa
mov
rcrb
sub
cmp
mov
xorl
aad
push
stos
jge
xchg
add
mov
inc
adc
sbb
jnp
mov
insb
out
lcall
popa
cmpsb
lahf
lret
xor
mov
inc
fidivrs
iret
jnp
cmpsl
insl
mov
testb
fwait
cwtl
inc
stc
les
add
imul
inc
push
addr16
mov
sbb
mov
add
jmp
jb
adc
les
pop
lods
push
ja
pop
adc
push
or
inc
aaa
jge
xchg
dec
bound
mov
mov
xor
mov
mov
xor
mov
jmp
insb
shlb
idiv
fisttps
inc
icebp
lahf
fstps
add
jbe
leave
jecxz
stc
add
mov
movsb
in
cwtl
mov
add
push
mov
repnz
aad
repnz
cli
mov
add
xchg
loopne
lea
test
cwtl
mov
das
and
adc
inc
mov
pop
out
arpl
push
outsl
and
mov
push
ret
sahf
popf
loop
push
and
cs
xchg
push
in
cli
jle
sbbl
in
pop
push
out
add
mov
stos
mov
test
xor
push
pop
ret
sahf
sub
fs
mov
bound
in
data16
mov
repz
adc
sub
out
das
pop
xor
fbld
lea
adc
roll
add
jp
testb
lahf
sbb
rorb
add
mov
fcompl
pmaxub
sub
pop
imul
add
aad
dec
mov
sbbl
and
inc
push
frstor
push
inc
push
mov
negl
jle
aam
enter
mov
arpl
lret
les
add
push
inc
rcrl
add
xchg
or
lahf
scas
ss
pop
fists
aaa
mov
movsb
les
repnz
divb
dec
rclb
mov
mov
jo
inc
xor
popa
mov
in
mov
sti
aam
push
inc
lret
lret
enter
repnz
imul
aaa
mov
push
inc
sub
jb
addr16
xchg
mov
xor
lea
jmp
and
in
outsl
mov
cmc
sub
pop
add
mov
dec
jnp
repnz
or
clc
inc
jge
cmp
jle
ja
dec
xlat
and
pop
mov
mov
dec
mov
leave
inc
loop
xor
pop
jno
lret
sti
dec
or
aam
leave
jle
loope
ss
mov
mov
mov
arpl
dec
mov
stos
pop
or
sbb
int3
cmp
lret
addr16
pop
or
outsl
adc
fistpl
xchg
jge
imul
sub
xchg
xchg
repz
neg
mov
jecxz
out
or
xchg
negl
adc
inc
das
inc
mov
adc
inc
adc
add
add
mov
sti
aas
mov
aas
sti
pop
inc
je
pop
add
mov
push
xor
repz
pop
push
popaw
daa
in
cmp
sub
and
jno
mov
pop
xchg
pop
test
out
testb
stc
mov
sti
testl
adc
loop
popf
cmp
aas
sub
adc
jbe
cli
jl
andl
mov
push
and
or
test
sub
mov
sahf
adc
in
mov
xor
loop
pop
ljmp
in
lods
dec
and
lahf
lcall
int
or
jg
push
pop
jne
decl
mov
lock
lcall
xor
jmp
mov
jno
jne
mov
dec
fstl
lds
mov
fildll
jl
test
xor
pop
push
addr16
mov
jle
jnp,pn
out
in
stos
es
test
mov
cmp
push
je
ljmp
mov
ja
int3
push
pop
cmpb
stc
xlat
sar
inc
shlb
push
cmp
cs
in
ds
xchg
pop
lock
inc
and
sti
and
mov
test
sti
cmp
xchg
push
out
jno
inc
add
lock
out
inc
sub
orb
fwait
add
test
pop
repz
in
mov
daa
fistpl
outsb
sub
sub
mov
jmp
sti
stc
pop
insb
pop
out
jmp
pop
ret
mov
pop
add
mov
lret
mov
add
fcompl
or
cmp
cmpsl
jno
and
xchg
loopne
pop
imul
add
gs
or
int
aas
loope
std
push
mov
dec
dec
xor
adc
push
push
dec
icebp
mov
push
xchg
sub
add
out
and
aam
pop
dec
in
jle
arpl
sbb
or
out
cmp
sarb
inc
adc
fs
call
aaa
repnz
and
push
adc
sti
dec
sbb
clc
popa
fldcw
dec
mul
dec
xchg
inc
fs
mulps
push
test
mov
mov
xor
mov
jmp
jg
dec
mov
enter
mov
pop
add
mov
add
cwtl
test
sbb
mov
ss
pop
sub
or
aad
push
mov
ss
sub
jg
out
xor
aaa
and
lcall
xor
xor
shr
and
cmp
xor
jecxz
sub
add
out
hlt
cmpb
inc
jns
xor
jl
das
cmc
and
fldl
aad
aad
ret
push
sahf
or
or
mov
pushf
fwait
shr
outsl
movsl
ljmp
lcall
jbe
jnp
pause
push
and
push
pop
pop
sarb
in
push
mov
lcall
jmp
or
mov
adc
into
pop
cmpsl
cmp
pop
add
mov
out
loop
imul
xchg
add
push
mov
fwait
xchg
sub
mov
mov
pop
lret
sahf
sub
adc
aam
xchg
xchg
inc
mov
in
lret
cld
iret
testl
xchg
xlat
mov
mov
add
add
cmp
mov
add
insl
dec
aam
insl
js
out
add
into
jnp
adc
cld
cmpsl
out
sub
lahf
fsts
rclb
mov
mov
and
int3
mov
pop
test
inc
lock
daa
movsl
es
shl
int3
xor
std
jbe
test
dec
mov
fdivl
shr
roll
add
call
cli
stc
sti
push
jecxz
add
xchg
add
movsb
xchg
or
call
cmp
incl
sarl
imul
mov
dec
xchg
xor
cmpb
xchg
loop
clc
sbb
xchg
inc
pop
popa
dec
inc
cli
test
sahf
inc
mov
popf
pusha
xchg
cmpsl
test
and
mov
cmp
lds
ja
adc
lods
sbb
mov
jecxz
lahf
cmp
add
adc
ds
lcall
gs
jge
sub
loope
fcoms
inc
ficoml
jbe
pop
popf
lea
outsl
stos
popf
adc
or
xor
mov
and
xchg
rcrb
jmp
cmpsb
xchg
leave
imul
cmp
mov
mov
mov
inc
inc
orb
mov
pop
int3
adcb
pusha
dec
mov
jnp
xor
out
nop
or
stos
push
and
outsl
in
xor
push
scas
rcll
clc
adcb
dec
and
sbb
cli
scas
pushf
jbe
scas
mov
js
push
ds
mov
mov
or
sbb
cmp
lds
sbb
stc
xor
ljmp
test
dec
and
xlat
stc
test
pop
aad
cmp
pop
sub
jb
ss
pop
mov
test
jecxz
xchg
lods
aas
shrl
push
insb
ja
or
ret
add
adc
jmp
adc
ret
xlat
pop
xlat
jl
stos
in
out
cmp
popa
add
mov
inc
outsb
xchg
add
ja
popf
lea
mov
stos
bound
popa
es
jp
clc
pop
js
xchg
mov
ret
outsb
add
sub
aas
arpl
test
mov
sub
outsb
fnstcw
or
dec
inc
nop
xor
mov
insb
mov
inc
mov
repnz
rcr
loop
and
xor
mov
jle
lock
or
sub
xchg
lcall
or
inc
aas
inc
sti
mov
xchg
or
mov
cmp
dec
mov
cmp
xchg
mov
adc
outsl
lsl
out
jns
hlt
das
and
xorb
inc
or
roll
add
nop
stos
mov
scas
lds
or
loop
add
mov
ja
lret
popf
mov
and
sub
cmpsl
and
jl
pop
push
add
or
ds
jo
xchg
pushf
mov
pop
mov
rorb
push
insl
pop
or
push
pop
sbb
mov
push
dec
lea
cld
xor
loopne
cmpsb
inc
xchg
fists
inc
lea
jecxz
adc
insl
or
cli
fimull
test
add
addb
pop
mov
add
outsb
or
mov
sti
in
ds
rcrl
idivl
mov
shrl
lock
loopne
cmp
add
das
jmp
xchg
mov
jmp
mov
jne
ja
lcall
lock
popf
bound
add
ret
out
pop
pop
fcmovbe
pop
lods
mov
push
xchg
cmpsl
dec
pusha
mov
push
lcall
jbe
push
fnstsw
push
sbb
cltd
and
add
movsl
pop
cwtl
and
sub
add
add
ss
pop
dec
inc
mov
inc
pop
add
hlt
cmovb
mov
call
fld
mov
xchg
sbb
xchg
jmp
and
ja
pop
add
bound
mov
cs
add
xor
push
imul
fimuls
adcl
mov
sbb
ret
add
cltd
xor
or
push
add
xor
add
adc
mov
cmp
jne
mov
cmp
jne
jmp
mov
mov
jmp
pop
push
out
pop
mov
mov
pop
arpl
add
sub
sub
jns
arpl
cmp
xor
and
jl
xchg
add
not
mov
push
loope
inc
and
pop
pop
sbb
jo
std
inc
push
jmp
push
mov
clc
fwait
sbb
aad
mov
xor
xchg
or
mov
xorl
fmul
fcomp
pop
testl
popf
jns
daa
mov
pop
jp
xor
push
fidivrs
iret
push
mov
or
push
push
ljmp
popf
sub
push
sar
pop
mov
mulb
out
ret
sub
nop
cli
cli
ret
rorb
xor
cld
sub
mov
xor
add
mov
mov
mov
mov
adc
push
jmp
cmp
jge
rorb
xor
dec
jl
adc
mov
xchg
mov
mov
dec
mov
push
shl
lea
shll
xor
push
xchg
jno
inc
imul
mov
mov
jge
mov
mov
pop
sub
mov
and
xchg
int
stc
pop
fwait
xor
xor
aas
push
or
adc
out
ret
bound
imul
movsl
dec
jae,pn
sti
lds
mov
jo
xchg
shr
mov
sbb
and
cmpsb
push
or
cmpsl
pusha
xchg
hlt
gs
push
pop
imul
push
lock
cwtl
data16
push
rcrb
xor
inc
jmp
mov
jl
dec
stos
push
lods
arpl
add
cmp
pusha
pushl
push
push
call
jmp
lods
xchg
int
fdivrp
mov
sahf
shrl
add
dec
clc
mov
sbb
cmp
subb
cld
xor
push
lods
or
push
sbb
mov
inc
jle
out
popa
inc
out
xor
jbe
notb
daa
add
mov
push
rclb
jmp
dec
loopne
int3
mov
adc
mov
les
mov
push
in
inc
pop
in
inc
scas
pop
icebp
addr16
mov
inc
dec
and
scas
stc
test
inc
inc
das
dec
and
mov
xchg
adc
xchg
pop
sahf
sarb
push
adc
add
xchg
loopne
mov
push
jnp
jo
test
mov
pop
or
imul
sbb
mov
inc
adc
pushl
mov
mov
xor
jmp
cmc
jae
cld
cmpsb
std
jnp
out
lahf
sbb
sub
mov
add
inc
pop
cmp
jmp
push
ja
fisttps
ret
cmpl
sub
cmpsl
aam
stos
loopne
icebp
push
pop
xchg
sbb
add
les
adc
mov
loope
fcmovnbe
outsb
gs
enter
mov
or
imul
sar
leave
jl
xchg
push
jo
not
inc
jmp
sbb
adc
cwtl
cmpsb
sbb
push
mov
inc
sbb
es
inc
mov
pushf
or
inc
push
dec
add
mov
mov
mov
cltd
and
test
roll
mov
rcrl
dec
ds
and
fdivl
addr16
pop
mov
les
jae
dec
cmp
and
pop
mov
xor
xor
add
adc
mov
jmp
xlat
pushf
sbb
pop
lahf
test
mov
add
mov
ret
es
test
outsb
arpl
dec
mov
shl
dec
jl
jmp
repz
jo
in
jae
outsb
lahf
push
les
jg
lods
jno
cwtl
mov
out
wrmsr
jle
insl
xchg
fbstp
push
pushf
cmp
add
push
add
cmpsb
cmp
int
sub
adc
xor
lahf
xor
pop
pop
mov
cmp
scas
fwait
jmp
sub
in
aad
sub
iret
mov
negb
sub
fidivrl
gs
cmc
add
mov
dec
and
fbld
js
fcom
mov
test
push
or
push
add
roll
add
mov
ficomps
aaa
jo
jmp
add
mov
je
test
faddl
fxch
adc
ficomps
cmp
movsl
cmpsl
mov
ret
scas
cli
xchg
mov
fnsave
mov
mov
pop
add
pop
daa
stc
jecxz
mov
sti
call
lods
mov
xchg
dec
in
scas
and
xchg
scas
lret
fisttpll
out
inc
mov
int3
jecxz
scas
mov
and
in
or
mov
adc
inc
cmc
lcall
in
sub
sub
jl
repnz
inc
fstps
dec
lock
divl
cmp
xor
lahf
push
mov
in
mov
je
and
jmp
jge
popf
push
out
imul
add
add
ret
pop
or
out
pushf
mov
cmp
jecxz
rolb
mov
mov
or
jg
sbb
rol
aad
icebp
sub
pop
sbb
outsb
add
test
mov
lcall
xor
jo
mov
mov
test
xor
cltd
xchg
cmc
mov
cmp
mov
add
dec
mov
mov
xchg
dec
imul
cwtl
orl
add
xor
test
psubd
ja
fmul
addb
sub
mov
pusha
jmp
cld
xor
jmp
les
cld
in
sub
rorl
inc
mov
add
mov
pop
sub
pop
lret
push
andps
xchg
loope
pusha
jo
cmp
mov
mov
and
jns
cmp
adc
adc
push
and
fsubr
fs
jmp
sub
sub
mov
and
dec
mov
xchg
fdivp
scas
cmp
dec
shrl
cmc
nop
pop
xor
pop
push
jbe
mov
cmp
xor
xor
enter
xor
pop
data16
out
sub
lds
adc
inc
sub
jb
mov
jb
inc
mov
or
js
and
add
inc
mov
push
outsl
fs
cld
aas
add
jmp
daa
incl
decl
mov
xor
add
sub
mov
jecxz
mov
dec
pop
shrl
sbb
adc
sub
sub
fs
outsl
inc
mov
imull
inc
sub
rclb
outsl
sbb
loopne
mov
sub
add
aam
mov
push
leave
arpl
inc
push
insl
idivb
push
fs
mov
clc
or
xor
or
test
ret
aam
mov
leave
cmc
repz
push
call
jl
hlt
outsl
lcall
dec
fwait
mov
push
mov
mov
mov
fildl
fldt
arpl
adc
jmp
aaa
adc
xchg
outsl
mov
sti
mov
in
imul
add
rcrl
mov
aaa
push
in
jp
pop
mov
ljmp
xchg
xchg
or
mov
push
mov
dec
cmp
mov
or
je
dec
pushl
pop
sbb
inc
adcl
cmpsb
xchg
or
rorl
imul
call
mov
and
jno
push
lods
test
jge
xor
pop
jg
in
inc
dec
mov
jb
xchg
mov
push
or
sarb
stos
sub
jp
lret
cmp
add
sub
pop
scas
insb
imul
push
pop
scas
xchg
jg,pt
mov
ljmp
xchg
mov
push
popa
mov
roll
add
adc
sub
sub
sti
cwtl
or
int3
add
iret
cmpsb
push
add
sbb
jecxz
fistpl
pop
add
push
lahf
gs
bound
xor
sub
add
cli
sbb
jo
add
test
gs
or
xor
test
sbb
outsl
push
ljmp
jbe
imul
stos
mov
jbe
and
into
adc
pop
aas
push
cmp
pop
rcr
cmp
or
das
stos
inc
jo
lods
fidivrs
push
push
sbb
lret
aam
jg
and
jno
inc
loopne
xchg
mov
fidivl
imul
push
std
ja
jb
shlb
loope
add
cmp
je
jmp
cli
or
lahf
lahf
add
fidivs
out
xor
add
mov
push
dec
into
andb
sub
pop
adc
lret
repz
jg
je
cmp
stos
cmpsl
outsb
mov
xchg
adc
mov
ficomps
and
mov
fmull
repnz
adc
mov
loope
mov
or
mov
push
mov
cmp
mov
fldcw
push
in
xchg
mov
in
mov
out
push
pushf
pop
pop
push
or
sahf
outsl
rolb
dec
adc
inc
loope
xchg
push
adc
faddl
dec
push
iret
push
jb
inc
arpl
and
imul
and
jne
push
push
call
jmp
ja
xor
insb
cmp
or
mov
insb
add
mov
aam
test
pop
mov
and
loope
jge
imul
test
hlt
arpl
jge
xor
and
lock
jg
leave
lahf
test
cwtl
or
loopne
cld
hlt
lds
rolb
cmpsl
push
add
push
sbb
sbb
sub
aas
xchg
movsb
cmp
adc
mov
insl
sbb
orl
sbb
aad
jl
cld
xor
jmp
sbb
push
jb
pop
adc
dec
lods
pop
imul
mov
imul
pop
mov
out
leave
fdivl
dec
lock
pop
inc
xchg
out
sub
add
pop
call
sbb
push
lea
add
jge
fst
call
jge
jno
jbe
data16
mov
xlat
insb
add
mov
mov
imul
mov
jns
adc
fucom
mov
mov
pop
xor
push
jne
push
aaa
cld
jmp
push
xlat
insb
enter
icebp
fisubrs
addr16
das
call
jb
bound
gs
and
cld
call
aas
gs
cmp
or
in
inc
inc
dec
sbb
sub
dec
clc
mov
cmp
fsubrl
mov
cmp
ret
mov
push
ror
data16
dec
addr16
pusha
movsl
or
push
jb
or
ret
or
cmp
xor
and
push
mov
sub
push
jmp
orl
iret
mov
dec
sub
sub
add
movsl
add
add
iret
clc
outsl
in
mov
mov
jne
repnz
adc
adc
outsb
push
sub
xor
leave
xchg
dec
test
xchg
addl
pop
mov
cli
stc
imul
popa
sub
jmp
mov
pushf
test
shl
inc
idivb
fidivl
dec
ja
push
loope
movsl
push
jmp
jo
add
cmp
xchg
in
pop
mov
clc
call
or
push
adc
lahf
add
mov
stc
pop
movsl
sub
cmp
and
cld
lret
xchg
int3
shll
mov
sub
inc
cld
sbb
add
jmp
xchg
rorl
inc
dec
fstp
sarl
ret
outsb
add
movsl
add
add
push
mov
outsl
mov
subb
and
or
jnp
scas
pop
adc
cli
loopne
sbb
xchg
mov
mov
cli
pop
sub
das
jb
xorb
mov
lahf
sub
add
fstpt
pop
cwtl
jo
std
or
mov
dec
add
jno
push
or
push
add
or
xchg
and
cmp
cltd
add
cld
ja
mov
mov
sub
das
cmp
pop
std
test
pop
or
sbb
mov
push
jns
sub
inc
fsubrl
pop
add
jmp
jg
sbb
jg
jmp
movsb
shlb
add
pop
mov
mov
xchg
mov
mov
test
pusha
imul
movsb
jl
frstor
sahf
movsb
orl
inc
mov
cmpsl
add
pop
daa
push
adc
jne
int3
in
dec
pop
jnp
or
lret
mov
lock
popf
xor
mov
movsb
mov
and
cld
cs
jp
xchg
mov
sbb
jle
stc
mov
lret
pop
movsb
jne
jle
xlat
inc
xchg
xor
adc
iret
addl
mov
pushf
movsb
jnp
sbb
mov
inc
jae
ret
mov
xor
movl
inc
jmp
cmp
outsl
jg
mov
pop
xchg
xlat
fldenv
outsl
add
movsl
add
add
pop
add
mov
pop
add
daa
sarb
inc
push
adc
pop
adc
rorb
dec
pop
add
xor
test
imul
mov
push
xchg
push
bound
lea
xchg
lds
push
add
jo
in
jge
mov
shrl
rclb
aad
mov
out
cmp
daa
jno
mov
mov
fstpt
jno
cmp
adc
dec
movsl
xor
popa
test
cltd
subl
add
das
inc
andl
xor
add
cmpsl
push
mov
movl
jmp
pop
inc
pusha
xor
pop
insl
das
lock
je
jne
mov
movsl
add
add
mov
scas
mov
dec
sarb
dec
int
or
in
add
aad
cltd
mov
or
xor
fstpl
push
imul
add
ret
inc
lret
or
cmpl
jg
add
fdivrl
pushf
movlps
mov
lea
stos
push
ljmp
xchg
pop
and
std
sti
testb
mov
ret
fs
sti
orb
add
dec
ljmp
loop
sbb
pop
or
or
movsb
stos
mov
js
adc
in
xor
cld
xchg
jb
xor
and
mov
or
add
mov
and
sub
push
xor
push
xor
movl
movl
jmp
push
in
fnsave
mov
and
movsl
add
add
dec
loop
mov
xchg
es
rcll
out
hlt
test
ss
repnz
add
scas
dec
inc
or
mov
push
jg
xchg
inc
jecxz
mov
jmp
cmpsb
or
jmp
push
nop
adc
leave
push
cld
mov
in
mov
hlt
xchg
sarl
jne
jae
xchg
aad
xchg
hlt
pop
nop
ljmp
cmpb
xchg
jl
add
cwtl
out
mov
fwait
ret
xchg
test
mov
ror
scas
loop
push
pop
js
icebp
cld
inc
lock
imul
movl
jmp
sbb
cmp
les
mov
movsl
add
add
sub
stc
mov
sbb
sbb
cli
xor
xor
mov
sub
andl
popa
or
xchg
push
pusha
rcl
xor
stos
cld
jbe
out
jno
pop
mov
xchg
mov
mov
bound
push
cwtl
insl
jecxz
or
or
mov
add
ds
lock
xchg
loopne
pop
cld
xchg
pop
les
mov
lahf
jns
jle
movsb
xor
lock
mov
daa
loop
in
gs
fstpl
cld
xorb
pop
jbe
inc
cld
push
pop
div
jmp
jecxz
rcll
push
repz
shll
adc
add
add
sub
inc
or
loope
push
fsubrs
inc
loope
fsubr
icebp
leave
and
nop
mov
hlt
jb
jge
mov
call
test
adc
mov
mov
pop
ret
lcall
lret
leave
inc
or
rcr
test
cld
pop
inc
jg
and
push
icebp
cmp
imul
out
jge
jecxz
aad
les
xchg
xor
sub
jae
lds
test
and
lahf
dec
dec
xchg
sbb
repz
mov
add
mov
jmp
inc
insl
jne
jge
imul
mov
rcr
mov
add
add
popa
pushl
dec
lods
cmp
xor
cmp
std
flds
inc
inc
outsl
in
je
push
in
idivb
mov
in
mov
sub
mov
das
mov
pop
add
scas
loope
mov
mov
orl
cld
cmpsl
sbb
cmp
idivl
or
nop
fwait
out
cmp
cmp
jnp
sbb
pop
fmuls
imul
mov
jnp
arpl
xchg
mov
mov
fnstenv
scas
mov
mov
adc
lds
xor
inc
clc
mov
or
mov
sub
mov
sub
xor
jmp
into
push
fcoms
xchg
add
lret
mov
cmp
add
movsl
add
add
ret
mov
cmp
dec
mov
inc
sub
es
enter
xchg
test
stc
into
xchg
mov
mov
inc
shrb
xor
insb
mov
inc
jne
push
ds
xchg
insb
repz
pop
pop
dec
mov
mov
and
mov
ds
andb
lahf
push
adc
jl
mov
divb
call
call
or
aad
add
sbb
rorl
mov
sub
int3
and
fwait
rcrb
xor
jmp
scas
inc
std
mov
mov
pop
xchg
dec
push
cmp
add
add
movsl
add
add
mov
out
negl
mov
cmp
hlt
cmp
xchg
das
in
xlat
fildll
out
data16
dec
pop
inc
iret
xor
mov
hlt
imul
mov
xor
mov
roll
fwait
or
cltd
xlat
or
xchg
pop
and
mov
jbe
popa
pop
push
seto
cmp
jp
pop
inc
dec
adc
inc
push
je
xchg
rcrl
lock
jo
out
cmpsb
pop
jb
jmp
xor
sub
mov
loopne
dec
pop
imul
jnp
and
mov
adc
xor
add
jmp
sub
jp
aam
in
mov
test
add
add
add
nop
cltd
push
push
xchg
sbb
into
enter
rolb
or
push
mov
cmc
push
or
in
clc
repz
mov
mov
imul
cs
insl
loopne
cmp
or
pushf
cltd
repnz
pop
pop
pop
pop
or
ljmp
stc
mov
test
js
leave
mov
mov
push
push
dec
lea
and
mov
cmp
dec
xchg
xchg
das
ret
and
xor
and
in
orl
jecxz
xor
test
sti
stos
mov
fwait
lods
xchg
xchg
inc
mov
cmpb
jmp
rcrb
sti
fisttpll
cmp
add
adc
mov
or
mov
rorb
arpl
hlt
lcall
mov
and
adc
cmp
stos
and
andl
jmp
mov
in
daa
or
test
sarl
sbb
repz
outsl
std
mov
insb
aad
xchg
xor
insb
dec
jae
jne
push
push
mov
mov
mov
jp
jb
push
mov
pop
mov
incl
cmpl
xchg
mov
jbe
iret
arpl
cli
xor
inc
jl
xchg
les
pop
lahf
push
mov
mov
mov
xor
mov
div
jmp
dec
lcall
pop
cmp
out
repz
add
outsl
sub
sub
or
out
jp
push
adc
xchg
xchg
mov
sarb
mov
mov
sub
inc
inc
in
mov
sbb
loopne
mov
add
or
outsb
int
cmp
in
ficoml
xor
mov
or
adc
stos
cld
shlb
push
mov
or
push
adc
std
repnz
or
nop
jo
mov
adc
test
pop
test
movsl
mov
mov
dec
pop
or
mov
js
xchg
test
mov
mov
add
xor
xor
div
mov
jmp
dec
shl
ljmp
rcrb
repnz
movsl
add
add
pop
lds
pop
push
mov
pop
nop
adc
push
jne
mov
imul
movsl
pop
lods
and
cmp
adc
jnp
xor
mov
mov
test
gs
lods
pusha
jg
test
jnp
push
fmuls
mov
gs
sub
adc
pop
jmp
jmp
mov
jle
pop
stos
dec
mov
lret
sbb
popa
inc
jecxz
fldl
mov
jmp
adc
push
out
cmpsl
cltd
arpl
and
mov
xor
fs
rolb
enter
jmp
sbb
insl
jl
pop
ja
popl
in
adc
mov
movsl
add
add
daa
aam
mov
es
aas
push
cmp
clc
jmp
and
pop
xor
and
roll
mov
test
stos
cli
ja
lcall
mov
mov
mov
je
addb
cmp
mov
out
and
negl
les
xlat
shll
jno
sbb
in
and
cwtl
and
xor
jo
out
and
xor
hlt
iret
mov
addr16
fcoml
adc
xchg
add
insl
fidivs
shrb
testl
ret
add
add
push
int
int
adc
idivl
xchg
inc
sbb
ja
add
loope
adc
pop
cmp
sub
or
cmp
aam
cltd
lods
enter
add
std
in
and
adc
dec
jb
lahf
stos
sahf
mov
in
movsl
push
sbb
mov
es
xchg
imul
ds
inc
xchg
stc
jbe
xchg
lock
sub
push
and
repnz
lcall
imull
push
push
int
sbb
adc
and
gs
cs
mov
sti
repnz
popa
pusha
addl
ljmp
cmpsb
xchg
xchg
mov
mov
cmp
mov
inc
insb
sar
mov
imul
add
add
vmread
push
test
repnz
add
add
xchg
loop
paddb
out
pushf
or
xchg
aas
cli
xchg
xlat
mov
jecxz
sar
shrl
into
insl
and
jae
repz
lds
jmp
push
lret
stos
insl
jmp
sbb
cmp
xchg
outsb
pop
dec
shrb
inc
and
inc
orb
int
push
or
mov
pop
popl
fldcw
orl
xchg
test
adc
xchg
cwtl
fldt
movsb
test
cmp
imul
or
jmp
scas
or
iret
in
scas
push
dec
mov
mov
mov
sub
add
movsl
add
add
pop
pop
popw
add
or
or
inc
xchg
push
and
stc
xchg
xor
push
mov
ret
xchg
mov
dec
mov
mov
xchg
jmp
stc
push
mov
shrb
addl
mov
imul
mov
pop
and
mov
add
fdiv
mov
inc
push
xchg
pop
pop
lahf
adc
sahf
mov
dec
inc
ss
scas
or
cmpsl
mov
or
call
icebp
in
ficoms
push
sub
sbb
pushf
mov
add
and
or
xor
add
rclb
add
jmp
cmpsl
fcmovnbe
sti
scas
jle
sub
sbb
lods
mov
sarl
add
cs
ss
adc
fwait
daa
jo
daa
xchg
sahf
subl
ljmp
sbb
test
push
mov
stos
inc
ret
in
cltd
lahf
std
jb
insl
dec
cld
push
out
mov
in
sbb
push
neg
push
rorl
in
lret
nop
push
ds
adc
movsl
pop
mov
pop
mov
add
pop
lret
outsl
sti
jb
sbb
cmc
repz
loopne
push
out
outsl
pop
ja
or
inc
xchg
test
ret
inc
fcompl
inc
fdivrl
popa
imul
movl
movl
movl
movl
movl
mov
jmp
mov
mov
shlb
mov
push
outsb
or
jbe
add
movsl
add
add
test
xchg
cmp
test
or
mov
jnp
rcl
inc
jne
cwtl
ret
add
sbb
cld
xchg
add
sbb
and
mov
adc
jl
inc
cwtl
mov
push
clc
loop
dec
ret
pop
js
jbe
testl
stos
jno
in
mov
in
repz
cwtl
sbb
loop
sahf
sbb
cs
ficoml
mov
mov
mov
out
xchg
leave
lret
sub
lods
incl
inc
push
push
les
stc
dec
ds
sub
imul
pop
xor
pop
movl
movl
jmp
andb
scas
repnz
ret
sbb
add
aam
in
daa
or
fsubrl
test
inc
jecxz
call
ds
adc
sbb
loop
push
dec
sbb
sub
jno
pusha
dec
or
jns
fcoms
inc
cmpsl
sbb
into
adc
xchg
push
test
sbb
loop
inc
pop
jo
mov
cmp
int
add
inc
jno
cmp
aad
push
mov
test
movsb
xchg
in
imul
sbb
inc
dec
imul
xor
xchg
add
stos
sbb
cmpsb
ss
xchg
daa
inc
sar
fisttpl
loop
mov
sbb
mov
fsubrs
pop
inc
movl
jmp
dec
pop
inc
jae
jg
jnp
stos
mov
pop
sarb
movsl
add
add
cmp
bound
sub
and
push
xchg
cmp
push
repz
ja
mov
rorl
mov
add
push
ss
jmp
mov
popf
rorl
push
pusha
xorl
pop
push
pop
cmc
cmp
adc
cmpsb
es
cs
mov
jno
and
and
push
add
test
stc
pop
add
test
shl
jp
add
sti
jb
std
xor
dec
pushf
enter
fidivl
movsl
lods
xchg
jbe
pop
xor
out
mov
iret
add
inc
add
sbb
int
movl
movl
jmp
shll
mov
in
loope
cmp
repnz
gs
add
xchg
aam
je
data16
stc
or
add
fsqrt
outsb
add
clc
jne
xor
addr16
popa
data16
in
loope
push
mov
and
mov
jae
dec
sbb
roll
pop
inc
dec
push
enter
dec
mov
jle
fs
std
clc
xor
mov
xor
push
inc
test
or
popa
jo
xlat
mov
adc
repz
and
test
inc
jae
inc
repz
pop
test
call
xor
mov
xor
cmp
in
sbb
fnstcw
sub
inc
in
outsb
add
jmp
inc
cmp
cmp
aaa
push
ret
rcrl
cmp
jge
add
movsl
insl
dec
xor
bswap
dec
pusha
filds
lret
add
sbb
iret
add
jge
sarl
cmc
jmp
popa
mov
lret
xor
jmp
fs
sbb
dec
jne
bound
mov
outsb
lock
xchg
dec
fstpt
ja
sahf
pop
mov
inc
std
test
jo
xchg
bound
jle
inc
and
imul
mov
jge
das
mov
xchg
xchg
dec
jbe
mov
es
cmp
xchg
or
sbb
dec
jg
adc
lds
dec
xor
mov
add
mov
or
and
jmp
scas
std
loopne
repz
std
xor
and
add
movsl
add
add
push
les
xchg
shll
imul
popf
and
test
inc
cs
cmp
js
and
ljmp
out
xor
or
xchg
out
mov
mov
xchg
pop
fwait
test
and
inc
xor
fwait
ljmp
dec
or
push
push
sbb
les
sub
or
jb
js
and
lret
mov
inc
test
mov
addr16
stc
xbegin
inc
mov
or
sti
aaa
jl
imul
arpl
shrl
rorb
call
add
imul
ds
out
cli
push
movsb
mov
movsl
add
add
lods
cmp
inc
or
mov
hlt
inc
xchg
mov
or
loopne
mov
leave
arpl
stc
push
dec
or
adc
lods
sbbb
lcall
fptan
push
lcall
std
inc
sbb
aam
add
hlt
sti
fwait
xchg
les
call
jl
shrb
jnp
add
xchg
aas
subl
shlb
cmp
cwtl
mov
add
cs
mov
pop
loop
xchg
and
mov
sub
test
add
cvttps2pi
shr
add
and
mov
sub
mov
or
mov
jmp
inc
push
rcl
rcl
inc
xchg
pop
ds
in
jmp
add
movsl
add
add
cmc
icebp
xchg
arpl
dec
or
and
sbb
imul
xorl
jo
lret
sbb
inc
int
jl
loop
sub
ficoml
jno
jp
sete
imul
lea
xchg
addr16
jle
les
pop
hlt
adc
jecxz
arpl
xor
testb
in
scas
inc
push
mov
lods
xchg
hlt
ljmp
popa
mov
idivb
pop
scas
pop
xchg
das
push
sub
xor
sbb
mov
popf
int
mov
jae
inc
mov
pop
dec
sub
push
insl
testl
scas
fnstcw
mov
mov
add
add
mov
nop
cmc
inc
std
gs
pushf
in
in
fldt
in
xchg
jg
add
push
das
cli
and
mov
loopne
fcompl
iret
cmp
sub
inc
sbb
mov
outsl
sbb
out
loop
push
dec
sbb
dec
xor
mov
pop
inc
sbb
enter
imul
bound
in
idivl
aas
dec
in
out
dec
clc
loope
popf
adcl
mov
hlt
test
pushf
mov
sbb
pop
pop
sub
xor
sub
je
sbbl
inc
push
mov
jge
push
pop
or
mov
mov
add
int
pop
test
cltd
sub
jmp
insb
jne
int
sub
repz
inc
addb
movsl
add
add
das
mov
ds
imul
sbb
mov
icebp
scas
cld
xchg
fwait
pop
es
test
sub
or
or
mov
xchg
pop
leave
inc
inc
push
adc
pop
loope
jg
dec
push
jmp
jnp
add
dec
push
push
daa
jb
or
test
mov
mov
lea
aam
adc
push
shlb
aaa
test
out
pop
js
inc
jl
add
cltd
movsb
cs
sahf
in
in
mov
imul
add
add
aam
xchg
mov
cli
pop
push
addb
movsl
add
add
jp
nop
fstpl
push
lds
rclb
adc
sbb
dec
add
xchg
pusha
in
sbb
fstpl
shrb
movntq
out
test
out
adc
fiadds
popf
test
xor
pop
xor
push
in
cmp
pop
fninit
aam
or
pop
push
sub
ss
and
imul
mov
shll
notl
xchg
scas
dec
rcll
sub
and
arpl
cmpb
imul
sbb
in
sbb
cmpsl
add
mov
mov
mov
mov
xor
add
imul
jmp
mov
sbb
popf
pop
jge
stos
xchg
es
and
lea
add
mov
pop
loope
push
in
jne
jb
dec
mov
rol
adc
sub
cwtl
pusha
jge
inc
mov
pop
stc
adcl
dec
fwait
cwtl
ja
mov
jae
je
mov
mov
mov
jp
in
sbb
jbe
sti
imul
sub
mov
rcl
and
mov
stos
push
nop
add
inc
xchg
fildl
adc
leave
sti
cmpsb
xor
and
or
push
and
mov
imul
or
add
lea
mov
mov
or
mov
and
mov
jmp
jge
js
clc
out
jg
adc
imul
xor
add
imul
fildl
into
and
dec
fistl
push
test
imul
mov
shlb
inc
jnp
loopne
cmpb
fiaddl
lods
push
mov
dec
sbb
jne
cmc
imul
push
mov
cmp
fsubrl
je
loopne
mov
fs
lahf
inc
subb
out
pop
jbe
inc
mov
cwtl
dec
add
jp
inc
add
popf
cltd
dec
in
repnz
into
xor
inc
inc
pop
out
pop
dec
cmp
mov
mov
ret
jo
cmp
and
add
xor
xor
jmp
adc
in
negl
cmp
push
lahf
mov
xlat
addb
movsl
add
add
pop
mov
dec
mov
inc
into
stos
xor
pop
xchg
sbb
xor
sub
sbb
push
rcll
or
push
out
sub
mov
lods
sbb
and
out
mov
xlat
add
lret
popa
sbb
cmp
mov
fs
in
add
fxam
shrb
les
cmc
push
cmp
push
scas
testl
daa
ja
add
xorl
xchg
sub
add
mov
test
mov
gs
xchg
push
dec
xchg
movsl
add
add
adc
cmpsl
or
ss
out
push
xlat
adc
icebp
xchg
sbb
sub
xlat
cmpsb
push
nop
mov
fnsave
bound
inc
xchg
xor
push
imul
gs
jmp
sbb
or
icebp
insl
leave
xor
mov
dec
push
ss
xor
adc
int3
stc
mov
mov
inc
jecxz
jbe
jp
cmp
ljmp
popf
fiadds
in
cmp
mov
repnz
add
push
cltd
push
fstpt
cmp
pop
jle
adc
xchg
imul
test
xchg
mov
sbb
ljmp
mov
mov
test
add
pop
out
adc
mov
adc
mov
aaa
xor
nop
test
stos
cwtl
neg
stos
jae
imull
xchg
xor
push
adc
adc
lods
pop
xchg
popa
outsl
dec
pop
mov
daa
sbb
jmp
mov
xor
mov
ljmp
ss
stos
dec
push
in
dec
inc
fisubl
leave
dec
repz
stos
mov
sbb
cmp
les
sbb
cwtl
into
hlt
adc
jns
push
imull
aad
mov
mov
popf
inc
inc
push
mov
std
je
cmpl
jmp
int
movl
movl
movl
movl
movl
movl
jmp
jg
int
in
idivl
aas
movd
scas
int
movb
out
dec
pushf
cmpsb
out
push
hlt
sub
inc
jne
out
cmp
hlt
lret
jmp
scas
cmp
aam
outsl
push
mov
in
leave
cmp
cmpsl
ljmp
imul
in
dec
fs
sahf
adc
out
jnp
daa
sbb
sbb
push
cmp
lea
clc
push
into
movsl
cmp
test
mov
mov
add
ds
xor
jns
jmp
mov
push
jb
adc
addr16
inc
push
xor
scas
gs
outsl
arpl
lret
xchg
pop
imull
fs
out
repnz
mov
push
shl
imulb
inc
or
sub
add
scas
shr
add
add
rcrl
xchg
insb
push
jo
push
sub
imul
add
add
xchg
loope
adc
cmpsl
fiaddl
shl
xchg
lock
cmp
stc
int
xchg
sti
xor
push
xor
jecxz
hlt
mov
orb
inc
xchg
lcall
ret
pop
sbb
xchg
aas
pop
mov
xchg
push
mov
fs
mov
xor
push
cwtl
inc
mov
jge
sbb
sbb
mov
pop
sbb
dec
and
push
jmp
cltd
xchg
clc
cltd
popa
sub
jb
divl
mov
add
sbb
dec
rorl
loop
sar
xchg
mov
scas
scas
mov
int3
jmp
xchg
test
mov
add
stc
rorb
xchg
add
stc
icebp
inc
fdivrs
inc
cld
inc
mov
int3
pop
popf
std
hlt
push
push
popf
sub
stc
cmpsl
shrl
sbb
mov
mov
iret
lods
and
dec
cltd
xor
push
cwtl
loop
adc
stos
jecxz
mov
fstpl
push
loope
mov
test
lcall
sbb
lahf
cli
jl
outsl
sar
out
push
adc
mov
addr16
xchg
not
mov
jge
or
pusha
push
cmpsb
pop
jle
addb
insb
cmp
jge
xchg
rolb
mov
or
ficoms
orb
or
jmp
jecxz
mov
fcomip
andb
stos
push
pop
mov
add
movsl
add
add
ds
xor
rorl
or
fwait
hlt
lds
out
mov
mov
push
enter
imul
ljmp
sti
idiv
je
sbb
lods
leave
jmp
pop
test
push
cmp
xchg
in
mov
mov
jnp
sbb
in
or
push
jle
movl
or
or
notl
xchg
mov
dec
aas
xchg
jb
ja
mov
or
mov
mov
jno
and
leave
mov
sub
jmp
cwtl
xchg
jb
jp
fidivs
jnp
out
pop
xchg
add
rcrb
push
das
fwait
and
xor
adc
repz
ficomps
sbb
int3
fsubrl
stos
fxtract
sub
jb
outsb
mov
ljmp
push
insl
sbb
mov
inc
xchg
push
mov
mov
mov
inc
adc
fidivs
dec
in
sbb
push
insl
inc
or
dec
ljmp
addr16
int
xor
or
mov
lds
pop
dec
adc
xlat
aas
int3
or
mov
ret
adc
inc
or
inc
rclb
inc
int3
mov
add
inc
or
push
add
jmp
xor
or
and
movsl
add
add
push
jmp
lret
ret
mov
fcomp
je
in
jecxz
ficoms
out
int
out
imul
sbb
and
cwtl
dec
cmpsb
cmp
lcall
loope
adc
not
shlb
lret
push
out
push
cmovp
add
or
push
push
es
cli
inc
icebp
fidivl
fnstcw
insl
lock
loopne
pop
push
pop
sub
es
in
and
jl
and
mov
mov
loop
test
ja
inc
pop
shrb
iret
mov
test
mov
cld
sub
pop
mov
xor
add
xor
jmp
xchg
inc
or
out
int3
mov
in
push
fiadds
movsb
mov
add
movsl
test
or
xorb
xlat
stos
adc
mov
push
lret
pop
movsb
pop
mov
in
int3
push
cmp
imul
dec
out
sub
push
inc
call
and
rcrl
fdivl
stos
leave
leave
dec
iret
stc
xor
out
push
mov
jmp
mov
repnz
jne
inc
jp
mov
sti
mov
inc
ret
emms
shl
loopne
ds
mov
js
push
popa
inc
cli
mov
add
outsl
incl
in
stos
je
scas
mov
int3
or
mov
sub
jmp
mov
cmpsb
or
mov
fidivs
fistpl
movsl
add
add
xchg
fisttpl
sub
fs
push
cmp
pusha
addb
inc
sub
xlat
or
add
xchg
xor
bound
enter
inc
test
test
insb
scas
inc
out
mov
ja
mov
add
sbbl
lret
pop
stc
mov
mov
je
out
fidivrs
inc
cmc
or
test
scas
je
dec
in
enter
test
inc
mov
cmp
adcb
push
dec
push
mov
pushf
xor
or
mov
sar
mov
mov
fsubrp
mov
add
push
xor
cltd
cli
adc
in
in
jl
sub
sahf
xor
xchg
fwait
in
cmp
dec
fcompl
pop
push
psubsb
ss
jno
or
pushf
nop
mov
xchg
imul
aad
sub
pop
std
ss
xor
icebp
out
mov
mov
jno
in
mov
pop
xchg
stos
adc
cld
or
repz
sahf
push
dec
inc
sahf
ja
adc
cli
mov
add
fmul
pop
popa
cmp
rcr
test
sub
insl
push
test
xchg
rorl
mov
xor
mov
or
and
mov
add
xor
mov
jmp
enter
fistps
mov
sbb
lahf
xchg
mov
add
sarl
mov
incl
jno
cmpsl
mov
fsubs
adc
sahf
add
test
inc
push
mov
cmp
mov
dec
dec
xchg
repz
xorl
cmc
mov
adcb
cld
or
sbb
xor
lea
cmpsb
or
lahf
xchg
in
jle
push
jo
adc
jle
mov
dec
movsl
pop
rcll
repz
pop
addr16
xor
fcompl
lret
rclb
fisubrl
jg
aad
cmp
dec
mov
mov
xchg
sarl
les
add
sub
mov
mov
jmp
mov
jge
out
fucomip
xchg
fimuls
mov
add
and
xchg
pop
icebp
mov
mov
int
fs
dec
sbbl
mov
push
dec
out
push
push
mov
jecxz
sub
or
jns
mov
mov
jno
sbb
rcrb
jb
out
js
dec
repz
sub
jmp
mov
lds
inc
pop
sbbl
aas
push
lret
push
lods
pmaxsw
cmp
jae
arpl
in
mov
xchg
daa
imul
inc
int
jae
mov
rorl
adc
push
dec
dec
add
mov
mov
jmp
cltd
loope
add
adc
stc
dec
dec
mov
mov
add
loopne
imul
insb
icebp
jnp
aam
fucomip
cmc
mov
pop
data16
cmc
mov
cmp
mov
mov
mov
or
insb
test
and
add
adc
movsb
ja
pop
cmpsb
lahf
loope
pop
cmc
hlt
lods
adc
dec
add
imul
arpl
pop
cmp
pop
add
mov
je
pushf
cld
insb
inc
and
es
iret
popf
bound
mov
or
jb
mov
inc
inc
sbb
dec
iret
ret
cltd
mov
xchg
bound
imul
or
and
xor
jmp
ljmp
leave
dec
sub
xchg
addr16
add
movsl
add
add
imul
mov
dec
jge
adc
mov
fisubl
repz
cmpsb
mov
in
insb
into
cs
jl
inc
or
mov
add
jp
push
jne
mov
mov
test
pop
jbe
std
cld
bnd
icebp
mov
insb
adc
shlb
scas
out
insb
dec
pop
bound
dec
jecxz
jo
mov
jb
cltd
mov
orb
xchg
xchg
movsl
scas
sti
popf
fimull
std
dec
push
adc
aam
call
test
lahf
std
imul
jmp
push
pop
in
inc
out
idiv
pop
int
dec
mov
daa
lea
add
cmp
popa
icebp
call
sbb
cmp
jnp
iret
cmove
add
test
ss
insl
lahf
mov
and
push
push
sub
xchg
in
iret
or
push
push
xchg
pop
push
or
rorl
icebp
shl
dec
hlt
or
sbb
inc
fs
sbb
imul
jae
aaa
inc
xchg
sbb
repz
gs
pop
push
pop
inc
mov
ret
mov
jbe
jmp
and
ja
cs
mov
jecxz
push
adc
sbb
xor
push
enter
xor
mov
div
jmp
cmp
fs
mov
push
pop
add
mov
int3
lea
add
fdivr
xchg
mov
and
add
sbb
jo
sahf
and
popf
push
sahf
inc
andl
jecxz
pop
pop
aas
lret
xchg
cld
test
pop
addr16
xchg
inc
xchg
or
mov
aam
test
mov
jle
dec
stos
fdivrs
push
fsubrl
aaa
fnstcw
je
dec
rolb
aad
cs
xchg
std
sub
inc
stos
mov
cmpb
test
cmp
mov
loope
out
mov
pop
jae
or
les
dec
push
push
dec
pop
rolb
adc
imul
mov
sub
imul
or
sub
cmp
jbe
pop
leave
ret
jmp
sbb
adc
lock
nop
test
insl
jo
push
lahf
jno
add
mov
sti
xlat
mov
pushf
mov
inc
cmpsl
and
cmc
out
mov
fwait
int3
xchg
mov
decl
hlt
mov
push
pop
inc
jle
lret
cmpsl
out
jae
and
fdivrp
mov
xchg
push
daa
rcrl
and
mov
jae
loopne
mov
pop
js
fisubs
xchg
iret
inc
aad
mov
lcall
push
loopne
xor
je
mov
dec
pop
leave
xor
and
loopne
jne
and
leave
int3
mov
jle
decl
push
jno
mov
jne
add
das
lret
into
out
jae
cs
push
xchg
mov
mov
ret
push
mov
sub
movl
or
movl
movl
mov
xor
mov
sub
xor
xor
mov
add
add
mov
incl
imul
andl
xor
andl
div
cmpl
ja
jmp
pushl
push
call
mov
jmp
gs
dec
mov
inc
fstl
sub
add
test
and
xrelease
out
cmc
cmpl
popa
pop
lret
rcrl
mov
hlt
lcall
sbb
xlat
outsl
vpminsw
inc
and
xchg
add
sub
test
dec
sbb
scas
push
push
xlat
fbld
or
jo
xorl
shrb
adc
mov
cmp
xor
pop
jecxz
adc
dec
rcrb
adcb
push
jmp
pusha
ffreep
push
or
cmp
pusha
dec
xor
imul
cld
fistpll
or
pop
inc
inc
mov
jge
std
test
loope
fs
and
jmp
push
rcl
data16
data16
arpl
push
xchg
movsl
test
ljmp
add
inc
xlat
in
xor
inc
mov
jl
mov
repnz
repz
push
outsl
rcr
pop
in
lods
xor
fldl
and
dec
mov
shl
mov
scas
pop
and
test
xor
scas
sbb
mov
in
arpl
mov
jecxz
or
sahf
aas
mov
push
ljmp
sbb
or
fnsave
and
js
xchg
cmpl
rorl
fdivrs
lahf
in
cmp
push
lea
stos
sbb
int3
and
test
xor
xchg
imul
es
and
push
pop
mov
icebp
push
push
sub
mov
mov
xor
xor
sub
xor
movl
cmpl
jg
jmp
pushl
push
call
movl
movl
jmp
popf
mov
xor
mov
insl
add
xchg
movsl
test
add
add
out
clc
cmp
dec
pop
push
cmp
xor
mov
add
pop
popf
js
fwait
shrl
add
aas
leave
mov
fwait
notl
mov
outsl
data16
outsb
add
pop
test
lret
dec
pop
xlat
mov
mov
sbb
lret
mov
adc
fcompl
push
xchg
sbb
mov
in
dec
fs
xor
pop
mov
sbb
out
xchg
and
les
push
ffreep
cmp
ds
lcall
push
les
iret
or
xchg
in
rclb
int
mov
sbb
cmp
mov
insb
mov
mov
xor
div
mov
mov
mov
add
imul
mov
mov
sub
and
sub
mov
adc
mov
jmp
push
and
mull
aam
lahf
loope
nop
pop
push
add
add
fcoml
mov
imul
clc
stos
clc
push
sbb
xchg
xorb
mov
mov
mov
sbb
repnz
push
and
inc
pop
inc
dec
in
enter
or
mov
dec
icebp
shll
push
xchg
stos
mov
mov
xor
adc
test
into
test
jnp
pop
addr16
and
or
lods
cmp
sub
in
loop
dec
mov
or
jae
in
push
sbb
jmp
in
cmp
cmp
addl
daa
pop
in
mov
incb
jne
jl
lods
push
inc
enter
call
cld
movl
addl
movl
mov
xor
mov
movl
mov
mov
movl
add
mov
and
jmp
outsb
jl
clc
jle
out
push
jge
pop
dec
ja
ret
daa
xchg
add
mov
add
lock
outsl
inc
lds
out
mov
lds
mov
repz
insl
jae
push
pop
pop
inc
daa
mov
push
cld
mov
addl
in
pop
cmp
dec
in
arpl
pop
mov
xchg
mov
scas
sub
mov
ds
repz
push
dec
imull
bound
int3
cmp
and
imul
lret
xor
test
adc
fistps
push
ret
xchg
push
inc
idivb
mov
std
mov
jl,pt
into
adc
sbbb
idiv
popf
and
bound
mov
insb
sub
repz
and
adc
inc
rcrb
divl
faddl
add
inc
add
add
lret
xorl
jmp
pop
xchg
pop
or
inc
mov
mov
out
add
mov
inc
jmp
sbb
xchg
xchg
lods
sbb
aas
jns
jnp
outsb
outsb
pop
cld
outsl
enter
enter
jl
xchg
test
leave
cmp
push
data16
add
add
loopne
call
xchg
xchg
shlb
cld
gs
and
adc
icebp
pusha
add
daa
pop
popf
je
leave
inc
xchg
mov
cmc
sar
ja
jg
mov
test
inc
movsl
fmull
fwait
out
filds
sub
pop
nop
push
push
jno
adc
pop
mov
je
mov
mov
stos
adc
mov
fsubrl
out
add
movsb
adc
adcl
or
xchg
mov
dec
adc
adc
mov
xor
mov
subl
imul
cmpl
ja
jmp
pushl
call
jmp
pop
lds
ljmp
sub
dec
mov
add
mov
jmp
xor
fwait
test
push
les
stos
out
inc
or
jl
fs
adc
inc
sbb
in
mov
cltd
jnp
rorl
in
adc
outsl
jl
push
or
or
or
loopne
lods
je
inc
xorl
fldl
ja
mov
or
ds
push
add
jno,pt
lcall
addl
stos
push
in
out
adc
je
push
sub
pusha
mov
xor
mov
clc
add
pop
cmpb
popf
ds
aaa
xchg
loop
xor
outsb
repz
ljmp
lea
mov
add
mov
jmp
jecxz
xchg
hlt
mov
test
int
xchg
add
mov
lock
xor
rcrl
test
out
push
in
cmp
mov
add
in
orl
pop
inc
jbe
out
ja
les
and
mov
ficompl
idiv
loop
fsubs
or
adc
lock
scas
popa
ret
sub
in
pop
dec
xchg
jle
sahf
stc
int3
sbb
sub
insb
lock
lods
adc
daa
icebp
dec
lcall
push
aaa
dec
out
or
pand
mov
xchg
sub
mov
lret
cmp
ret
inc
and
dec
or
lret
and
add
inc
loopne
insb
add
xor
movl
add
movl
cmpl
jg
addl
jmp
pushl
pushl
push
pushl
call
mov
jmp
cld
sahf
lret
repz
cld
lahf
push
mov
or
and
add
je
pop
xchg
in
sarb
call
mov
lcall
xor
xor
jp
cld
cli
out
mov
stos
aaa
jbe
std
rcrl
lock
sub
iret
mov
adc
jae
push
hlt
xor
dec
dec
out
int3
int3
push
aam
imul
cmpsb
cmp
mov
and
jecxz
ds
imulb
pop
xchg
mov
lock
pop
ljmp
or
mov
shll
js
cltd
inc
inc
push
das
sbb
sub
inc
movsb
dec
fsubrl
call
insl
fidivrl
test
inc
lock
push
test
push
pushl
xchg
mov
dec
faddl
xor
div
mov
xorl
or
not
jmp
outsb
inc
and
sub
jg
shll
add
sub
xchg
loop
add
mov
movsb
sub
push
mov
sbb
fstpt
jle
and
or
dec
add
aam
aas
pop
push
das
mov
push
lcall
cmc
into
fldt
mov
stos
int
idivl
xchg
push
jp
xchg
shlb
mov
xchg
pop
stc
fwait
cmpb
repz
xchg
in
xchg
cmp
xchg
sbb
das
jg
fucomp
and
test
movsb
push
arpl
mov
test
ret
inc
cmova
push
or
mov
outsb
lods
dec
and
mov
out
call
divb
mov
push
jae
test
iret
dec
xor
sub
mov
and
jmp
mov
mov
test
push
dec
sbb
mov
add
add
mov
popa
and
pop
jae
mov
jecxz
jno
addr16
adc
in
adc
pop
mov
or
adc
fimull
inc
sbb
adc
jb
inc
fs
mov
inc
stc
fildl
mov
inc
int
jne
push
and
repz
xchg
outsl
push
dec
imulb
wbinvd
jne
cli
cmp
mov
cmp
jne
fucom
mov
in
xchg
mov
inc
test
pop
lds
arpl
jmp
pop
pusha
xchg
sub
jnp
push
adc
sub
divb
mov
lods
movsb
fisubrl
xchg
inc
mov
ljmp
mov
mov
loopne
inc
fsubrs
cmp
add
mov
add
add
add
jmp
push
call
jmp
cmp
subl
mov
pusha
xchg
add
mov
ss
dec
mov
and
test
push
int3
mov
dec
sahf
arpl
icebp
enter
jo
or
outsb
jo
outsb
aam
sbb
jmp
sub
xchg
xchg
testb
mov
divl
stos
add
out
cmp
mov
icebp
fstp
in
add
test
fcmovnb
in
adc
xor
fidivl
bswap
mov
imulb
cmpsl
mov
inc
fcompl
mov
std
cmpsl
sarb
dec
inc
inc
mov
mov
icebp
arpl
out
push
cmp
ljmp
xchg
cmp
fidivl
jo
inc
mov
mov
jnp
inc
fsubr
xlat
add
add
xlat
mov
jns
inc
in
adc
pop
cwtl
add
mov
fs
mov
ret
pop
fsts
sti
mov
cmpb
cld
repz
mov
xchg
lea
sahf
pop
ret
popa
test
inc
das
call
cmp
or
imul
les
xchg
pop
faddp
in
mov
inc
xchg
in
mov
out
icebp
adc
jb
mull
fstps
fdivrl
scas
dec
and
lret
or
and
dec
gs
cmp
scas
adc
dec
jl
jle
call
cmp
push
das
hlt
and
mov
aaa
add
aad
ret
add
adc
add
xlat
add
add
lret
mov
mov
loop
int
push
ret
cwtl
add
mov
mov
popa
xor
fistpl
or
or
sbb
popa
push
dec
jnp
loope
popf
pop
mov
push
lahf
jnp
cmc
ficompl
div
daa
mov
clc
je
sub
adc
xchg
pop
jl
cmp
jo
inc
push
xchg
cltd
aas
push
dec
lcall
pop
adc
push
lret
psubd
cmpsl
mov
jp
add
imul
es
fisttps
cmpsl
xchg
xchg
jge
mov
xor
in
jae
jl
cwtl
sarb
sbb
mov
adc
std
pop
cmpsb
mov
push
add
test
imul
aaa
sub
and
xchg
cmp
add
mov
movl
neg
movl
or
mov
cmpl
jbe
subl
and
jmp
push
pushl
push
call
mov
xor
add
imul
or
sub
jmp
sub
add
cmpsl
pop
testb
sub
popf
cltd
add
mov
insb
mov
dec
xor
shl
pop
jecxz
cmpsl
ret
nop
iret
fs
scas
out
out
xchg
sbb
push
data16
mov
jmp
repnz
push
test
aam
push
mov
fwait
repnz
les
scas
and
or
mov
cmp
stos
cmp
idivb
mov
roll
stos
loopne
stos
xchg
sub
aam
adc
mov
test
imul
mov
repnz
test
das
int3
gs
pop
sub
and
sub
rcrl
jp
and
movsl
pop
in
loope
daa
div
push
cmp
sub
adcl
jmp
js
mov
mov
push
xchg
mov
pop
lcall
rcrl
adc
mov
rcrb
xchg
jmp
test
adc
pop
dec
add
add
dec
sahf
insb
addr16
cs
cmc
jmp
jns
ficoml
and
insb
ficompl
das
mov
pusha
mov
mov
inc
sti
sbbb
loope
push
mov
lcall
outsb
xchg
sbb
fiaddl
mov
mov
mov
dec
fdivp
pop
int3
dec
cmp
loop
ret
mov
lea
mov
loop
int3
dec
add
cwtl
dec
inc
fdivrs
sbb
mov
mov
cltd
andl
pop
sbb
mov
lcall
scas
mov
mov
xor
movl
movl
jmp
push
cmc
aaa
fidivs
cmp
imul
add
add
std
fsubrl
or
popa
mov
dec
xchg
mov
out
jnp
shr
jg
jne
or
cmp
mov
rcll
cs
xchg
pop
daa
in
ljmp
fnstenv
adc
fldl
sbb
jae
aas
movl
dec
mov
ret
jae
scas
test
out
pop
in
mov
loope
int
adc
inc
push
inc
cmp
filds
test
add
cltd
daa
fisubrs
mov
jne
notl
adc
jle
push
inc
fsub
pop
add
add
jmp
lods
hlt
mov
jg
incl
xlat
inc
or
mov
lds
repnz
int3
xor
dec
sbb
xor
jne
mov
ret
add
xchg
jns
adcl
movsl
paddusw
mov
js
sub
pop
out
push
pop
in
sbb
adc
xor
std
jns
mov
bound
popa
mov
cmp
and
add
cltd
adc
ljmp
jnp
fsubl
sub
or
pop
lcall
push
inc
xor
mov
sarb
adc
rdpmc
insl
rorb
mov
int3
add
testb
push
pop
shl
lret
outsb
xchg
mov
ja
xor
sarb
push
fsubs
mov
movl
mov
mov
xor
xorl
imul
mov
andl
xor
addl
or
jmp
test
ljmp
sbb
cltd
pushf
add
mov
xor
scas
push
dec
bound
mov
sahf
test
mov
cwtl
add
adc
and
lods
outsb
adc
arpl
inc
lahf
movsl
and
add
lods
lret
pushf
push
xchg
je
loop
mov
jp
lea
rcrb
lret
lret
stos
jns
adc
mov
cli
sahf
xchg
mov
leave
jno
push
push
out
test
cmpsl
repz
sub
ja
into
popa
outsb
inc
xor
scas
cmp
cs
aam
leave
xorb
add
push
stos
xchg
scas
pop
xor
pop
mov
rclb
xchg
sahf
cmp
clc
sbb
and
push
dec
ds
adc
adc
call
mov
addl
or
cmpl
jb
mov
sbb
jmp
pushl
pushl
push
push
push
push
pushl
push
call
mov
sub
mov
movl
mov
movzbl
and
jmp
in
cmp
xchg
repz
jg
or
dec
into
mov
add
mov
data16
adc
jb
pusha
lds
pop
imul
add
mov
dec
hlt
movsb
pop
lds
test
push
xchg
mov
sbbl
fadd
xor
mov
cmp
cltd
fildll
inc
rcrb
fs
mov
jle
xor
mov
xor
pop
pusha
jb
xchg
pop
pop
loop
mov
adc
dec
scas
dec
cmpsb
mov
push
adc
sub
pop
std
arpl
lret
movsl
ss
scas
outsl
lea
inc
cmp
jmp
xchg
add
ds
jnp
pop
sbb
pop
dec
out
dec
push
jge
jnp
pop
gs
lods
jl
cmpsl
adc
or
ds
add
jmp
mov
cmpl
cwtl
adc
pop
sahf
add
mov
mov
into
add
mov
xor
outsl
jge
jno
push
ds
out
push
jmp
fidivs
dec
in
test
cbtw
clc
mov
xchg
cmp
fnstsw
sbb
dec
lea
mov
out
repnz
nop
or
stos
inc
mov
loop
adc
aas
xor
xchg
cmc
mov
loope
jp
push
lods
push
jmp
sti
repz
cmp
cli
scas
or
mov
lods
mov
fnstsw
fidivs
movsb
xchg
xchg
cmpsb
xlat
and
fsts
xchg
mov
mov
xchg
pop
out
fnstcw
mov
lds
push
cmp
or
sbb
push
pop
sub
mov
sub
movl
movl
adc
mov
andl
mov
jmp
mov
and
jge
leave
std
fnstenv
fisubrl
lods
shll
sahf
add
mov
bound
int3
test
sbb
int
inc
clc
sbb
daa
mov
sub
and
js
nop
adc
xchg
inc
addr16
aad
icebp
adc
jb
idivl
adc
stc
xor
pop
sub
insl
fdivp
or
xchg
add
cmc
rcll
sbb
xchg
add
sti
hlt
aam
faddl
add
pop
scas
das
clc
push
enter
mov
in
int3
pop
int
xchg
add
push
jp
push
cmp
push
jnp
mov
icebp
jl
dec
sbb
cmpl
and
jp
xor
push
stos
mov
dec
mov
pushf
add
repnz
add
or
adcl
sub
and
mov
movl
sub
jmp
cmp
outsl
jg
mov
fadds
or
lahf
xchg
lahf
add
mov
push
xor
cli
push
es
rcrb
lds
ja
mov
dec
jmp
xor
out
fldl
movsb
jp
clc
xor
je
pushf
jecxz
stos
sbb
mov
sarb
shrb
xchg
stos
adc
out
leave
mov
test
mov
mov
xchg
sbb
jmp
out
and
mov
fs
filds
in
or
mov
movsb
rolb
pop
jmp
jbe
inc
test
fsubrs
pop
lret
or
arpl
mov
adc
add
pushf
cmp
es
and
call
jne
int3
xorb
movl
sub
movl
adc
jmp
sbb
test
nop
mov
mov
add
ja
fcomi
out
call
and
mov
les
shrb
insb
mov
sahf
int3
es
or
gs
into
shlb
sub
mov
or
dec
lret
jne
mov
das
add
mov
cmpsb
jns
imul
imul
jle
mov
stc
aam
hlt
cmpsl
adc
cmpsb
jmp
pushf
into
out
adc
dec
sahf
mov
negb
lea
popa
fisttps
add
repnz
out
add
mov
pop
fisttpll
fstpt
sbb
js
mov
xor
pop
add
jmp
xor
loop
rcll
add
add
mov
and
mov
add
xorl
jmp
lock
xchg
fnstenv
int
int
mov
adc
add
ja
mov
push
outsb
cmp
cwtl
mov
test
sub
out
insl
ljmp
sub
data16
cmp
scas
dec
in
push
stc
outsb
test
mov
push
xor
fwait
decb
xor
cld
mov
jb
xchg
hlt
lahf
inc
or
or
imul
insb
call
out
negl
or
xor
add
fisttps
aaa
pop
clc
add
daa
sub
pop
mov
mul
loope
cmc
pop
sub
test
lods
jns
sar
mov
fstpt
mov
xchg
pop
inc
push
pop
xchg
pop
mov
adc
push
cs
xorl
jmp
into
jo
stos
mov
add
push
mov
add
and
jb
adc
jl
dec
inc
pop
mov
push
rclb
jle
outsb
and
loope
jne
cmp
frstor
lret
or
jmp
test
pushf
cmpsb
xchg
sbb
popa
mov
fistps
xchg
loopne
in
aas
or
adc
repz
int
bnd
jmp
sti
pop
sbb
xor
jns
repnz
outsl
fcomip
sub
dec
leave
test
lea
leave
int3
fistpl
mov
or
jg
mov
stos
into
fcompl
dec
out
mov
fdivrl
sub
icebp
aad
stos
insl
mov
jo
ret
stc
int3
in
in
sbb
rorl
xor
mov
mov
andl
lea
jmp
cmp
test
sti
push
cmp
mov
les
add
add
sub
outsb
jp
sub
xchg
idivb
and
stos
fcomi
mov
out
cmc
call
inc
ret
mov
pop
cmpl
jno
sbb
movsb
mov
call
mov
out
imul
cltd
out
cmp
test
pushf
cld
ljmp
lcall
jmp
pop
pop
jo
inc
incl
inc
and
mov
mov
pop
arpl
rolb
outsl
aaa
cmp
mov
mov
inc
inc
xchg
jne
scas
test
into
loop
call
call
test
dec
mov
and
jg
push
decl
jmp
cmp
jns
sti
sti
inc
out
dec
int
in
jmp
mov
add
push
jo
push
movsb
inc
shll
lcall
pop
lds
cmpl
icebp
stos
cmp
and
rclb
cmc
dec
bound
data16
pop
xchg
cmp
or
dec
jae
xor
rcl
xchg
int
lock
clc
and
rcll
jl
sub
mov
arpl
xorb
push
cmp
inc
cmp
in
mov
adc
fwait
aad
xor
push
or
jno
outsl
dec
jp
in
xchg
sahf
push
or
mov
jae
jecxz
lds
lret
ljmp
js
call
fldln2
nop
xor
mov
inc
imul
add
and
mov
cmpl
ja
xor
jmp
pushl
call
mov
or
jmp
jle
fstpl
in
adc
int3
shld
mov
mov
xchg
mov
push
jb
mov
scas
push
pop
xchg
add
mov
mov
or
add
jge
fsubrl
les
nop
adc
cld
adcb
inc
jb
or
and
lods
pop
xchg
pushf
outsb
jne
jle
jmp
push
ret
mov
test
and
jmp
fsubrs
bound
jb
daa
std
insl
inc
fwait
pop
and
ds
mov
mov
jmp
push
cmpsl
add
stc
outsb
pop
jmp
jb
adc
xchg
pop
leave
sbb
and
inc
into
xchg
push
movsb
aas
mov
or
adc
repz
aad
push
mov
add
insl
int3
xchg
movsb
cltd
jge
add
xor
push
pop
mov
adc
div
mov
xor
sbbl
xor
jmp
dec
test
xchg
out
fdivrp
inc
lahf
sbb
loope
sbb
mov
cli
out
xchg
enter
in
add
push
inc
js
out
popa
lret
sub
push
test
jo
lods
and
fisttps
inc
jnp
jg
test
out
imul
jbe
mov
and
sbb
addr16
push
in
inc
addr16
mov
jge
xor
mov
pop
jmp
outsb
pop
pop
test
loope
xchg
cmpsb
inc
negl
int3
inc
aad
fbstp
ds
jl
and
fistps
pop
movsb
lea
mov
shll
leave
jo
xor
adc
lock
scas
mov
hlt
mov
leave
js
xchg
jo
xor
cwtl
jl
add
adc
mov
sbb
movl
adc
movl
jmp
aad
mov
xlat
loopne
push
lahf
pusha
adc
movsl
add
mov
mov
fisttpl
inc
jne
mov
fsub
sub
cmp
xchg
cmp
fildl
dec
mov
lahf
std
pop
xchg
cmp
push
mov
subb
fwait
jecxz
lret
pop
jmp
clc
lret
pop
ja
in
scas
aas
int3
addr16
cmpsl
push
sub
in
pop
dec
es
inc
orl
mov
mov
popa
push
pop
mov
jne
es
jo
fimull
ret
jmp
xor
mov
or
fiadds
mov
shrl
add
adc
mov
sub
adc
add
inc
out
add
cmpl
jb
or
jmp
push
push
call
jmp
mov
scas
mov
int
gs
gs
cmpsb
add
mov
popa
es
cli
push
imul
aaa
cmp
shrl
inc
cmp
inc
test
ret
xchg
aaa
sarl
cmp
lret
out
sti
sbb
cmc
ret
adc
dec
dec
mov
hlt
fwait
sbb
pop
xchg
xlat
pop
xor
push
cmp
adcb
adc
rolb
jno
arpl
lcall
dec
push
xchg
sbbb
and
pop
jb
std
mov
mov
cld
fsubs
mov
aaa
push
xchg
dec
or
cmc
cmpl
popa
mov
push
pop
call
in
out
loop
movsl
lahf
add
fcoms
cmp
movl
movl
movl
movl
movl
movl
xor
mov
mov
cmpl
jbe
jmp
pushl
pushl
pushl
push
call
or
mov
or
imul
xor
jmp
pop
iret
lods
jle
jg
out
into
add
dec
cmpsl
decb
pop
or
add
pop
and
daa
inc
or
out
and
jae
xchg
js
cmp
lods
fstpt
call
dec
or
ret
movsb
fidivrl
shl
add
push
inc
inc
loopne
les
js
lret
sub
and
jl
lahf
mov
insl
cli
movsl
stos
lcall
loopne
lret
loopne
mov
and
mov
ss
inc
mov
pop
dec
stos
push
adc
add
adc
insl
fwait
and
push
push
adc
jp
cmp
xor
hlt
push
div
jge
es
leavew
xchg
incb
sbb
out
mov
clc
and
push
add
mov
imul
jmp
cltd
pop
pop
pop
xchg
push
ficoms
lock
lret
add
test
iret
inc
outsb
mov
jns
repz
cli
arpl
push
inc
dec
or
push
cli
jle
and
adc
inc
sahf
into
or
mov
outsl
stos
and
jp
bound
fistl
in
addr16
stc
xchg
ret
mov
mov
mov
dec
sub
repnz
les
sbb
sbb
adc
pop
ljmp
jbe
repnz
mov
xchg
mov
cmp
and
rcll
out
xor
sbb
movsl
inc
push
test
in
aas
movsl
int
pusha
stos
mov
cmpsl
roll
add
mov
pop
fcoml
mov
inc
cld
mov
mov
sub
or
mov
or
mov
sub
imul
jmp
stos
jl
mov
mov
push
pop
test
test
add
lods
sbb
push
push
mov
xchg
mov
push
hlt
and
inc
pop
lahf
test
mov
push
aam
push
rcrb
decl
xlat
mov
sbb
lds
mov
mov
pusha
and
or
repz
in
mov
mov
jge
jae
test
nop
cld
shl
inc
gs
or
cld
jp
clc
pop
xchg
out
cmpsb
insl
gs
xchg
lret
sub
nop
and
push
pop
dec
int3
push
dec
shll
mov
jno
int3
mov
les
idivl
gs
imul
cmp
mov
movsb
fisttps
xor
or
mov
add
add
mov
mov
sub
xor
jmp
push
xchg
mov
mov
out
data16
fimuls
test
add
enter
inc
pushf
push
rcrl
lahf
jg
pop
dec
push
pop
arpl
mov
std
dec
mov
dec
repz
sbb
int3
sbb
nop
addb
add
push
or
fucom
test
test
and
out
fcomps
adc
cmpsl
xor
xor
or
xor
jge
push
fdiv
jbe
jl
xor
loopne
mov
mov
in
mov
mov
lahf
jecxz
dec
pop
mov
hlt
sub
out
inc
lea
js
daa
or
lea
jg
and
jno
lds
cmp
rcrb
leave
jecxz
and
or
lods
inc
mov
lock
and
or
jmp
jp
xor
outsl
mov
notl
mov
xor
loop
dec
dec
daa
push
adc
xor
add
pop
xchg
xor
test
cmp
aad
sahf
sarb
xorl
xlat
jbe
jne
xor
add
pop
jecxz
jb
jnp
pop
pop
int
xor
xor
or
jp
jge
clc
loopne
sub
aas
push
sub
shl
xchg
and
hlt
mov
adc
ljmp
ret
xchg
mov
inc
xchg
ret
hlt
fdivrs
fs
jmp
scas
mov
jle
lods
push
xchg
leave
add
bound
mov
sar
jnp
and
sti
cmp
lahf
adc
add
rclb
sbb
cltd
ss
mov
mov
adc
add
movl
cmpl
jg
jmp
pushl
call
mov
mov
jmp
rorb
enter
or
je,pn
stos
add
mov
iret
bound
arpl
int3
test
das
and
jae
adc
mov
dec
sahf
mov
xor
inc
aam
lahf
and
scas
add
add
cltd
lea
pop
and
mov
sub
adc
fucomp
push
lahf
andb
mov
push
sub
out
ja
std
movsl
cmp
repnz
jno
mov
jl
sbb
sub
mov
pop
stc
pushf
add
xor
mov
or
lcall
pop
mov
inc
mov
outsl
call
fsub
add
xor
lock
or
ret
jmp
push
mov
push
pusha
sub
cmpsb
mov
jbe
mov
movl
mov
jmp
push
push
and
and
repz
push
jp
shl
test
add
pop
xor
cmc
gs
icebp
jmp
lret
mov
sub
mov
in
int
fiaddl
mov
jge
sbb
ljmp
push
pop
mov
std
jo
lret
mov
mov
xchg
and
inc
sbb
or
mov
pusha
mov
in
test
repz
xchg
lods
gs
adc
xchg
pop
fdivs
mov
cmc
adc
sbbb
cmp
xchg
fnsave
adc
gs
dec
jl
push
fs
sbb
jae
push
sbb
mov
sbb
mov
mov
mov
xor
orl
xor
mov
sbbl
jmp
sub
ljmp
pushf
in
lahf
loopne
daa
dec
inc
lods
add
mov
push
pop
imul
lret
in
mov
push
add
es
xor
xor
daa
cs
cltd
xchg
les
cs
mov
sqrtps
insl
cmp
pop
mov
ja
hlt
xchg
loopne
or
out
cwtl
push
sub
cmp
push
mov
cltd
dec
add
aaa
adc
jno
negl
dec
adc
div
xchg
stos
icebp
dec
jns
in
addr16
push
adc
cmpb
lcall
ret
mov
test
adcl
sbb
jl
cmp
out
xor
fcompl
icebp
mov
mov
xchg
lock
sub
sbbl
imul
mov
movl
cmp
movl
je
movl
xor
mov
xorl
jmp
loopne
lahf
xchg
lahf
in
repz
lock
int
xchg
mov
lods
add
mov
cld
pushf
push
cld
add
sub
dec
pop
in
or
pop
les
mov
ret
adc
outsb
or
pop
mov
mov
xor
pop
lret
pop
cmp
dec
mov
lds
test
flds
cmp
lds
mov
lcall
inc
pop
and
inc
scas
bound
and
repnz
call
nop
andl
in
scas
push
pushf
std
dec
dec
sbb
or
add
test
sub
push
adc
int
enter
mov
jg
outsl
filds
jae
stos
xchg
mov
sub
sub
cmpl
jge
subl
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
shl
xor
jmp
aas
sbb
das
imul
lcall
xchg
negl
insb
ljmp
add
add
push
jne
jbe
rcr
sbb
fwait
js
dec
sub
xor
int3
xchg
mov
push
xor
jo
mov
jg
xor
aaa
lds
push
repz
xor
int3
sbb
mov
fistpll
cld
sarb
or
sti
ja
inc
mov
sbb
enter
push
dec
int3
movsb
aad
pop
mov
sti
stos
subb
dec
stos
lret
mov
sub
inc
xchg
mov
test
out
sti
mov
fisttpll
jl
stc
dec
push
or
mov
xor
iret
gs
adc
inc
pop
mov
jbe
inc
sar
aam
adc
lret
mov
dec
cmp
mov
xchg
ljmp
pop
or
lea
sbb
mov
cmpl
jbe
jmp
push
push
push
pushl
push
push
call
mov
jmp
adc
sti
call
out
out
adc
in
sarl
subl
sbb
daa
xor
xor
icebp
jmp
cmp
jle
pop
gs
inc
ds
xor
mov
push
mov
jne
inc
xor
pop
jmp
popa
dec
jg
ret
insb
loopne
push
push
xor
cmp
jbe
in
dec
pop
inc
cltd
dec
enter
mov
sub
pop
scas
in
inc
push
cmc
jge
fdivs
or
es
ficoml
fucomip
mov
inc
adc
mov
xchg
cwtl
adc
out
xchg
jns
sub
repz
push
lret
outsb
push
push
sub
fcmovnbe
sub
pop
and
lock
loopne
arpl
cld
or
pop
mov
mov
jmp
jge,pt
neg
idivl
std
push
popa
nop
pop
stc
and
add
rclb
inc
int
in
out
mov
xor
jb
popa
sbb
ds
sahf
nop
lahf
sti
pop
dec
loope
cmp
and
daa
mov
jmp
dec
push
inc
fsubr
sub
xor
dec
stos
incb
addl
test
mov
repnz
mov
out
pushf
clc
mov
lods
lock
push
cmp
or
andl
sub
es
nop
aam
rclb
inc
xchg
fdivs
jns
test
subl
stos
jne
pop
sti
movsl
lods
popf
adc
adc
rcrl
sub
lea
push
cmp
xchg
mov
clc
or
mov
scas
fdivrs
pop
sub
rorb
jmp
add
scas
in
leave
les
rcrb
add
mov
shrl
sbb
daa
mov
lcall
scas
push
fsubrs
lock
mov
sub
xchg
les
sti
sbb
inc
jae
jo
jae
sub
call
cltd
repz
sbb
ret
test
add
fsubl
sti
cltd
cwtl
lods
imul
shl
cld
dec
rolb
test
repz
mov
fstps
jne
inc
dec
adc
loope
pop
jno
je
out
data16
lock
aas
mov
xchg
jmp
pushf
or
nop
push
jg
xchg
loop
push
and
pop
addr16
fidivl
cmc
cs
dec
push
mov
jb
jecxz
jmp
sbb
lahf
mov
cmpl
xor
sub
sub
imul
jmp
notb
sahf
out
sahf
idivl
inc
adc
addr16
mov
add
add
int
sbb
inc
es
inc
jge
mov
add
shlb
enter
in
jle
aas
jg
into
and
or
and
sub
inc
xchg
es
lahf
xorl
or
jae
mov
std
mov
xchg
adc
les
lret
push
adc
inc
mov
sbb
xchg
mov
cmp
test
rorl
adc
lock
or
fs
jae
mov
in
inc
cmp
cltd
cmp
adc
add
pop
sub
enter
mov
lcall
rol
or
and
incl
inc
lret
mov
cmp
je
jmp
dec
mov
iret
mov
lahf
stos
inc
fidivrs
add
mov
mov
mov
ret
jae
mov
fwait
in
and
or
filds
dec
rorl
cmp
cmc
lcall
cmpsl
insl
or
pop
sahf
in
outsl
mov
pop
pop
inc
jns
mov
and
adc
mov
enter
adc
add
in
cs
lea
mov
test
mov
mov
or
or
mov
inc
cmp
clc
push
cmpl
dec
js
fsubr
mov
pop
hlt
scas
xchg
andl
lahf
sub
adc
mov
adc
jmp
out
fldl
xchg
test
insb
addr16
mov
push
enter
jmp
inc
int
sbb
cld
ja
stos
sti
dec
cmp
mov
add
push
stos
sub
jge
and
push
mov
je
cmpl
fnsave
mov
or
aaa
and
test
inc
lcall
aas
stos
mov
imul
pop
rorl
mov
push
add
mov
pop
movsl
mov
fildll
std
xchg
sti
inc
pushf
in
pop
mov
sub
mov
aam
in
xchg
jbe
outsl
ja
cmp
in
movsb
mov
mov
cmp
add
or
mov
cmp
xor
ret
adc
scas
mov
sarb
hlt
ljmp
add
add
in
hlt
std
pop
scas
in
pop
mov
sti
mov
add
mov
data16
xchg
iret
dec
pop
adc
sbb
dec
popf
mov
or
ficompl
mov
negl
ficoms
jle
fsubrs
mov
ljmp
push
xchg
paddb
pop
daa
cmp
ss
or
in
mov
add
jb
out
lods
cmp
cmc
jns
cmp
xchg
test
sub
push
cli
inc
int
into
out
mov
lahf
push
out
pusha
ud0
out
push
dec
inc
adc
jbe
inc
sub
pop
clc
xor
inc
xchg
jns
xchg
lock
jno
dec
add
loope
cld
push
push
and
jb
and
sub
mov
imul
jmp
stos
xchg
out
das
lods
sahf
xchg
icebp
and
jo
mov
add
iret
jl
lahf
popf
das
loopne
lds
add
cmovbe
mov
dec
outsb
mov
lds
pop
mov
mov
stos
outsl
pop
push
cmp
lds
inc
push
fisubl
xor
and
inc
enter
dec
dec
and
je
sahf
enter
or
incl
mov
xor
loop
xchg
pop
jb
shlb
and
gs
movsl
ja
lret
ret
cmp
in
xchg
jle
loop
fdivrp
data16
loope
ljmp
or
ss
jno
dec
out
jle
repz
xor
aaa
and
mov
xlat
xchg
push
les
jmp
mov
mov
mov
mov
jmp
test
xchg
and
loope
in
out
jns
add
mov
cli
lods
mov
stos
lcall
loopne
add
cmpsb
sti
mov
xchg
int
jb
cmpsb
push
test
cltd
lcall
repnz
pop
mov
shrb
loope
dec
in
popf
mov
and
sub
insb
orb
out
and
pop
jg
fisubs
outsb
mov
pop
push
jge
outsl
test
adc
sub
imull
sub
mov
mov
aam
jg
mov
jl
mov
je
cli
hlt
mov
lea
ljmp
arpl
mov
pushf
mov
cmc
push
fildl
mov
icebp
jmp
adc
dec
adc
add
in
mov
add
mov
cmp
pop
inc
aas
or
inc
sbb
test
adc
sahf
push
sbb
pop
divb
xlat
pop
ret
aam
mov
out
and
or
mov
lret
mov
mov
loope
xchg
pop
bswap
jmp
xor
rcll
sbb
fsubp
pop
pop
fcmovb
and
aam
cwtl
or
arpl
push
cli
sub
rcrl
push
sbb
test
cs
xorl
xchg
bound
out
mov
call
mov
shll
lods
es
mov
mov
sbb
aaa
ds
pop
rcrl
pop
ljmp
enter
lock
imul
mov
jmp
xchg
cmp
mov
and
ret
divl
add
cmpb
test
cli
xchg
pop
adc
xor
dec
hlt
pop
jbe
pushf
jmp
inc
data16
movsl
jbe
fwait
jmp
mov
or
dec
push
and
cmp
rcrl
aaa
add
nop
insb
lds
mov
mov
imul
std
loope
sbb
push
xchg
fcmovne
lods
insl
test
lcall
push
mov
sbb
cmp
enter
sub
sbb
sub
adc
jns
movsb
daa
sbb
stc
mov
call
es
add
out
pop
mov
push
mov
into
in
push
mov
std
add
jg
lock
xlat
cli
ja
push
idivb
icebp
cmp
in
out
test
add
sub
add
jmp
jne
and
jge
imul
mov
add
mov
and
xchg
mov
adc
jns
add
mov
xlat
in
arpl
pop
aas
jp
adc
lcall
pop
mov
mov
jno
or
inc
mov
mov
sbb
shlb
insl
repnz
push
iret
jp
sub
push
mov
cmp
mov
fistpll
aaa
mov
dec
subl
sbb
pushl
inc
add
push
int
sbb
jp
fs
ss
or
jnp
dec
movsl
nop
out
push
dec
mov
jg
cmc
std
int3
mov
push
ljmp
repnz
dec
lock
movsl
addr16
addr16
xor
shll
mov
adc
decl
fsubrl
push
add
movl
jmp
inc
sub
popa
out
jmp
cs
and
imul
mov
add
xor
pop
and
xlat
push
daa
push
and
xchg
ret
negl
jg
dec
fildll
inc
jecxz
xchg
mov
std
lcall
push
sbb
pusha
sbb
dec
icebp
mov
in
add
mov
dec
jmp
jo
adc
mov
push
arpl
push
jle
cmpxchg
jmp
mov
xchg
sub
inc
cmp
lock
push
cld
add
addl
je
out
mov
rolb
out
adc
mov
std
sbb
lds
xor
lock
ljmp
insb
push
sub
adc
sbb
push
sub
movl
movl
movl
jmp
ficoms
fistps
mov
jecxz
add
add
mov
shrb
sbb
push
inc
gs
pop
dec
js
dec
inc
jne
rclb
dec
xchg
mov
shl
or
repnz
jns
mov
xchg
stc
sbb
push
daa
xor
sbb
or
dec
sarl
inc
dec
jle
push
jg
aas
add
test
scas
inc
adc
scas
loopne
hlt
addr16
stos
clc
daa
cmpsl
clc
sub
test
imul
mov
or
pop
test
pop
sarl
insl
out
jae
les
mov
outsb
mov
xchg
lock
cmp
jns
popa
loop
movsb
dec
movl
jmp
insl
out
push
stc
mov
fisubs
mov
add
sub
sub
jne
mov
jne
pop
add
pop
push
dec
push
fwait
jecxz
shrb
add
dec
jb
push
and
or
into
mov
das
adc
xchg
ret
mov
mov
lret
iret
adcl
sub
mov
cld
movd
js
shll
in
push
xor
outsl
sub
xchg
jbe
pop
jne
je
push
imul
jmp
push
int3
sub
jns
sbb
jle
mov
inc
aaa
mov
cmpsb
xor
cmp
test
outsb
iret
dec
sbb
das
xor
in
mov
mov
sbb
fists
jmp
xchg
addl
sub
and
and
add
inc
int3
adc
add
jmp
mov
mov
jno
daa
popa
fdivrl
mov
push
iret
sbb
negb
stos
push
adc
sbbb
cmp
stc
and
jno
and
xchg
sub
cmp
ds
scas
jno
push
push
pusha
mov
xor
mov
jae
mov
lret
out
mov
test
inc
pop
sbb
lahf
incl
mov
inc
mov
push
in
mov
xor
cmp
mov
add
cmc
mov
xor
rorl
mov
jne
or
mov
jl
and
test
xor
jmp
sti
push
mov
inc
xor
rcl
adcb
mov
mov
imul
sub
xor
div
mov
sub
mov
lea
mov
jmp
pop
stos
sbb
push
pop
mov
sub
jo
jno
add
mov
es
jbe
movsb
xchg
push
cs
js
xor
mov
stc
fwait
sti
and
out
enter
sub
std
out
jmp
or
nop
loopne
movsb
fstpl
mov
adc
adc
cmpsl
xor
loope
ja
inc
scas
pop
lea
cmp
or
stc
clc
fcom
push
mov
push
cmp
lret
insb
pusha
cmp
cmp
xchg
cmc
mov
inc
fs
rorl
popf
cmp
mov
pop
pusha
jne
stos
call
insb
loopne
lret
outsl
dec
add
stos
lock
sub
jnp
mov
xor
outsl
mov
mov
add
or
jmp
rcr
cmp
repnz
int
fldt
jp
mov
add
sbb
push
cmp
aad
xchg
outsb
mov
inc
ljmp
testb
lds
xchg
cmp
push
imul
popf
ss
insl
stos
push
cmp
aad
inc
in
or
jmp
adc
aam
mov
pop
iret
cmp
in
or
repnz
cmp
aas
and
aas
dec
xchg
aaa
movsl
mov
lds
lahf
or
and
clc
xlat
scas
or
mov
pop
mov
popa
xchg
lcall
mov
test
push
lods
imul
cmp
filds
je
pop
lret
daa
scas
ja
and
mov
lods
xchg
ret
sub
jg
lret
jge
adc
cltd
jae
ret
fs
inc
sbb
imul
cld
jmp
cli
push
jbe
jle
hlt
sbb
jae
cmp
add
mov
mov
adc
repz
leave
or
fistpl
cmpsl
out
sub
adc
sbb
mov
mov
or
daa
mov
add
in
leave
and
bound
fisubrs
enter
and
imull
aas
addr16
jbe
call
out
pop
arpl
mov
jg
dec
mov
stos
gs
xchg
fistpll
xchg
in
lret
push
pop
or
jno
adc
cltd
sub
pop
push
xchg
cmp
mov
insl
inc
clc
sbbl
rorb
sub
push
dec
inc
mov
fwait
cmp
lods
jle
jnp
add
sbb
cmpl
ret
add
add
add
jmp
data16
mov
dec
pop
pop
mov
mov
add
fistps
jno
lock
out
and
lods
and
andl
sbb
push
push
push
cli
mov
stos
mov
call
or
dec
arpl
push
cmpsb
jne
scas
mov
mov
test
xchg
inc
rcrl
dec
mov
int
dec
loop
adc
out
push
pop
sbb
push
xchg
jg
loope
pop
lea
mov
negb
ds
pop
je
sbb
sarl
outsl
ds
adc
lods
mov
mov
push
fwait
or
addr16
sbb
mov
xchg
inc
sarl
dec
jns
jns
imul
arpl
push
adc
pusha
dec
inc
daa
int
mov
adc
mov
mov
xor
sub
imul
add
mov
lea
mov
jmp
scas
sub
fidivrs
scas
cmp
movsl
pop
insl
mov
add
cld
ss
mov
sub
enter
xchg
ja
lods
shlb
shl
scas
xor
xchg
adc
idiv
mov
in
les
popa
xchg
dec
sarl
cld
inc
aad
lock
je
sbb
test
int
outsl
cmp
lods
sahf
insl
cmp
jb
in
adc
icebp
aam
mov
jmp
push
pusha
lret
int
int
cwtl
ret
jmp
hlt
sbb
in
mov
mov
sbb
dec
dec
xchg
movsb
shlb
clc
push
movb
sbb
add
out
loop
sahf
inc
cmp
ss
jge
sahf
mov
mov
neg
mov
inc
xor
add
inc
fsubrl
add
jmp
bound
sti
mov
pop
iret
loop
sub
add
mov
xchg
adc
scas
mov
sti
inc
and
mov
mov
xchg
or
mov
mov
jmp
inc
mov
les
push
repz
push
aad
sti
lea
pop
outsb
scas
pop
clc
mov
adc
mov
vpaddq
lock
shl
sti
sub
mov
push
or
daa
test
mov
ja
xor
sub
insl
mov
xor
inc
fs
enter
shrl
sub
or
pop
movsb
inc
add
add
stos
jle
xchg
dec
xchg
or
jae
sub
sarb
sub
into
addr16
movl
movl
jmp
rolb
fdiv
inc
push
std
dec
jne
sbb
mov
add
dec
insl
enter
icebp
cwtl
ret
in
outsb
or
out
aaa
shufps
xchg
out
inc
sbb
movsl
repz
add
das
adc
and
push
jecxz
aas
insb
cli
xor
pop
ljmp
outsl
out
add
add
sub
out
sbb
stos
mov
aaa
inc
lds
mov
mov
pop
loope
inc
pop
mov
mov
lock
mov
movsb
jae
rorb
sbb
adc
out
fisttps
adcl
lret
and
in
loope
push
hlt
xor
xor
inc
or
decb
cmpsb
jo
inc
mov
cmpsl
sbb
clc
jbe
cmp
out
clc
hlt
pop
movl
movl
movl
jmp
test
rcl
cli
xor
mov
mov
sti
xlat
or
cmpsl
sub
in
js
pushf
aaa
jnp
or
adc
or
cmpsb
scas
insl
lods
sbb
cmc
jmpw
cmp
mov
pushf
pop
adc
mov
pusha
pop
in
in
lods
das
and
mov
sbb
inc
in
mov
cs
mov
in
xor
in
adc
mov
lods
pop
insl
sub
pop
iret
jo
push
lcall
add
std
loope
scas
xchg
dec
xchg
addr16
push
movsb
gs
stos
push
out
cmp
movsl
add
push
pop
add
in
push
dec
mov
ja
dec
insb
mov
mov
mov
jo
dec
cmp
push
xchg
xor
inc
and
inc
int3
lret
add
xlat
add
add
push
js
jnp
pop
in
outsl
orb
inc
les
add
mov
fdivr
fsubrl
movsb
aam
pop
roll
ror
sub
outsb
dec
les
ret
stc
dec
aaa
imul
pusha
test
xchg
mov
fistps
mov
mov
aaa
mov
adc
gs
sbb
lds
pop
sbb
cmp
sbb
ds
movsl
mov
pop
test
shrl
outsl
sub
outsb
cmpb
pop
test
insl
sbb
arpl
adc
and
dec
pop
out
movl
or
aaa
iret
popa
or
adc
xchg
adc
mull
sub
inc
stos
es
xor
outsb
idiv
mov
inc
aam
add
mov
jmp
add
subl
dec
ror
mull
add
mov
inc
or
mov
call
cmp
cltd
repnz
pop
mov
test
ret
roll
je
pushf
rorl
loope
mov
and
cld
xchg
lds
sbb
inc
xor
jne
inc
fimull
rcll
movsb
scas
sub
xor
add
mov
adc
push
aad
das
loop
lods
add
pop
out
mov
dec
icebp
adc
shlb
cmp
push
or
adc
xchg
shlb
dec
sarb
test
test
jle
das
xchg
fdivrp
push
jmp
push
and
lock
fcmovne
jp
gs
and
call
mov
jmp
jle
decb
idivb
rorb
fsubp
roll
mov
fdivrs
test
or
push
jge
jge
idivl
adc
shlb
add
and
fsubrp
jle
inc
adc
push
cmp
aaa
out
xchg
int3
xchg
sub
adc
sbb
adc
pushf
loope
aas
mov
jecxz
mov
sbb
call
cmpb
jg
or
outsl
mov
cli
repz
test
popl
stos
leave
pushf
mov
lock
lahf
les
ret
jb
sub
in
imul
sub
xlat
adc
mov
push
push
test
jle
pop
outsb
test
mov
popf
cld
lret
sub
mov
xor
mov
jmp
insb
lret
rol
lret
outsl
out
xchg
rclb
mov
fildll
insb
int3
dec
hlt
mov
bound
lret
or
add
dec
xchg
outsl
iret
out
xchg
cltd
daa
push
or
mov
cli
scas
iret
fbstp
and
dec
in
leave
test
movsb
repnz
xor
or
push
jle
ja
aas
and
pop
cmp
call
daa
push
pop
icebp
mov
jo
cmp
sbb
xchg
push
hlt
sub
adc
cmc
rcl
add
cmpsb
jbe
aaa
leave
mov
cmpsl
rol
stos
mov
xor
pop
push
jmp
pop
call
jmp
mov
shlb
adc
popf
or
loope
arpl
add
add
xlat
add
add
pop
out
fidivl
ss
push
aas
sub
lahf
gs
add
mov
les
loopne
xor
popa
mov
cli
add
dec
insl
popa
push
add
or
adc
jp
movsb
adc
inc
imul
daa
cmp
mov
subb
mov
fldt
pop
loopne
hlt
loope
jmp
pop
push
test
stos
mov
adc
pop
inc
jae
xchg
pop
js
push
xor
fidivrs
cld
fwait
loope
ja
xchg
aaa
icebp
mov
cltd
cmpsb
ficoml
hlt
jmp
pop
popf
sbb
sbb
outsb
adc
lock
scas
out
pop
pop
aas
and
add
les
xor
int3
pusha
vcvtsd2ss
scas
enter
mov
or
xor
add
mov
xor
jmp
loopne
mov
cmc
mov
fwait
xor
les
add
xor
and
add
cmp
std
popf
jecxz
push
adc
test
or
push
out
and
mov
testl
and
lock
push
das
add
jg
stos
andnps
in
aam
arpl
mov
add
mov
rcll
jle
mov
and
int3
call
push
jb
loopne
sahf
es
dec
inc
and
xor
test
hlt
mov
out
jno
ljmp
cmpsb
adc
xorb
lret
fst
sti
dec
loope
xchg
lds
aam
ret
ficomps
fdivl
mov
fsubrp
mov
std
push
and
add
mov
mov
imul
sub
xor
mov
jmp
dec
mov
xchg
pushl
pushf
aas
rcrl
jecxz
add
mov
jbe
in
clc
cmp
cli
push
jecxz
pop
repz
dec
jns,pn
mov
adc
incb
std
ss
mov
aas
push
cltd
in
xlat
sbb
lcall
dec
jmp
cmc
add
jo
or
jp
in
sub
or
out
push
sbb
jo
and
add
stos
cwtl
jmp
sub
or
jl
leave
and
lret
jnp
sbbb
mov
mov
ljmp
testl
pop
inc
sahf
outsl
stos
loop
scas
jns
push
divl
and
jmp
and
inc
movsl
movsl
out
inc
data16
or
lds
add
pop
mov
adc
scas
pusha
idivl
push
inc
push
xchg
mov
sub
pop
std
roll
movsl
fnstenv
xchg
pop
loope
mov
pop
and
loop
cmpsl
js,pt
mov
lcall
and
adc
cmc
xlat
les
jae
push
add
movsb
add
cmp
dec
fwait
add
mov
test
sahf
mov
ljmp
int3
mov
nop
sbb
jb
fadd
push
jb
cmpsb
pushf
jae
orb
stos
fs
fiaddl
clc
fs
out
daa
loope
jo
movsb
mov
mov
fisubrs
jge
xor
mov
and
mulb
xorl
jl
enter
lea
jmp
and
jo
div
push
lods
out
movl
movb
mov
shlb
lret
or
movsl
insb
mov
lea
call
sbb
lahf
sub
push
push
mov
mov
sbb
push
das
cmpb
das
pop
mov
jne
mov
push
fstpt
xlat
jp
out
stos
inc
mov
shl
cmp
lcall
out
lcall
int3
fcoml
outsl
ret
jle
or
pop
push
mov
fisubl
test
inc
orl
sub
xor
ficompl
ja
xor
aaa
pop
out
cmp
pop
fsubl
mov
cmp
sbb
mov
int3
push
mov
out
mov
jmp
push
inc
or
int
add
sbb
add
mov
dec
mov
adc
movsl
pop
and
jl
push
out
daa
enter
adc
push
mov
sub
loop
jbe
out
dec
sbb
mov
dec
jno
push
xor
pushf
mov
xorl
mov
sti
and
insl
add
mov
adc
icebp
jnp
mov
rclb
lods
push
and
js
bound
jg
bound
or
mov
dec
fisttps
popl
mov
gs
jmp
xor
shr
mov
mov
lcall
pushf
in
sub
mov
adc
test
push
fiaddl
fstp
stos
movl
movl
movl
movl
movl
movl
mov
and
mov
sub
mov
jmp
dec
adc
icebp
pop
repz
mov
xchg
orb
mov
xchg
xlat
ret
pop
fidivrs
aam
imul
les
jl
andb
push
movsb
or
mov
pop
and
sar
cld
cmp
sub
fdivr
pop
mov
or
faddl
sub
mov
out
movsb
push
adc
sbb
je
in
push
sbb
cmp
xchg
or
pop
not
dec
cmpsl
iret
or
outsb
xchg
addr16
fistpll
jae
inc
mov
cli
push
mov
jae
adc
jle
stos
insb
xchg
enter
ljmp
or
insl
mov
mov
jmp
in
mov
sub
or
xor
aam
ficoml
jp
out
stos
xchg
imul
mov
shr
jmp
mov
jg
in
adc
lds
sahf
enter
add
add
mov
gs
lock
clc
fidivrl
jno
pop
xchg
int3
jb
aas
ja
fldl
pop
jge
fisttpll
inc
xchg
stos
stos
insb
int
ret
pop
scas
enter
mov
movsl
cmc
sti
out
popa
ss
out
jae
pop
sub
or
stos
int
int3
jb
int3
or
xchg
fstp
aaa
imul
jle
loopne
add
lods
and
sub
or
mov
mov
or
lret
and
or
pop
adc
mov
sbb
je
xor
in
iret
cs
in
pop
cmpsl
in
imul
or
jmp
inc
inc
shlb
shll
popf
insl
pushf
mov
add
mov
outsl
jl
mov
dec
popa
shl
mov
mov
divl
pop
sub
sti
add
stos
cmp
jbe
das
mov
pop
std
mov
mov
imulb
push
dec
test
ja
and
and
and
out
scas
dec
dec
stc
lahf
insb
pop
scas
movsb
mov
inc
inc
dec
rcll
outsl
std
xor
mov
jns
inc
sbb
push
jge
pop
out
push
mov
cs
ret
ja
or
hlt
leave
push
adc
repz
pop
and
aas
pop
scas
sub
mov
pop
push
nop
and
test
mov
stos
mov
shrl
in
push
mov
xor
imul
xor
add
mov
mov
and
imul
mov
sub
xor
add
add
xor
mov
mov
jmp
push
pop
inc
test
inc
out
mov
sbb
add
mov
repz
dec
add
push
popa
das
mov
repnz
sbb
daa
aaa
jge
inc
xchg
mov
in
adc
and
and
int
and
lds
xor
and
or
test
fbstp
lcall
inc
mov
inc
inc
xchg
jmp
cmp
repz
push
add
inc
nop
pop
mov
and
mov
mov
cld
fisubs
xchg
insl
ffree
test
ja
stos
cmpb
addr16
adcl
jl
jp
bound
jp
test
je
shlb
xor
cmp
jmp
adc
jle
jle
mov
adc
shlb
fcmovne
add
mov
cmp
int
mov
jb
dec
xor
cld
mov
cwtl
xchg
xchg
fldcw
out
add
call
repnz
and
pop
pop
loopne
pop
shlb
mov
sahf
jo
and
mov
push
mov
enter
add
mov
nop
rorb
jl
adc
pop
push
sbb
loope
pop
js
sub
pop
adc
xor
jecxz
mov
data16
in
in
sbb
mov
sbb
mov
push
fnstsw
cs
fbstp
mov
push
nop
mov
out
iret
mov
lods
cmpxchg
mov
ud0
inc
rcl
pop
cmp
xor
xchg
and
icebp
mov
add
add
add
add
mov
neg
insl
sti
scas
cmpl
mov
cltd
jle
jecxz
jnp
out
mov
push
sub
clc
fs
iret
jne
push
imul
jle
jl
push
mov
push
stc
subb
ja
dec
jne
mov
imul
jnp
jle
cld
mov
push
mov
mov
pushf
incl
sahf
movsl
add
out
lcall
xchg
mov
mov
je
decl
gs
fadd
cmpsl
inc
iret
fidivrl
dec
mov
movsb
dec
push
outsb
repz
add
mov
xor
fwait
les
push
pop
mov
gs
aas
leave
gs
xchg
inc
mov
add
lock
movsl
out
lea
cwtl
add
mov
add
mov
pushl
pushl
call
jmp
cwtl
arpl
sti
stos
fdivrs
in
xchg
sbb
add
mov
dec
jnp
sub
or
stos
push
adc
xor
dec
jge
ret
test
aaa
das
es
push
rcll
ljmp
jo
js
dec
push
cmp
mov
sub
mov
out
mov
sbb
dec
adc
push
jno
and
jns
out
pop
and
fs
rcll
dec
pop
cmc
scas
and
lcall
jo
mov
dec
xchg
xor
roll
inc
into
mov
test
mov
movsl
call
rorl
and
aas
jmp
movsb
jbe
lock
sbb
jns
add
inc
cs
cmpsl
push
sbb
add
nop
or
mov
mov
test
jne
mov
inc
cmp
jne
jmp
mov
movzwl
mov
mov
mov
mov
test
je
mov
jmp
dec
loopne
cmp
adc
sbb
add
mov
jmp
pushf
fistl
sub
xor
inc
jae
cwtl
mov
in
sti
xlat
push
fstpt
xor
xchg
dec
mov
cmc
out
cli
pusha
cld
cmpb
lcall
mov
popl
cwtl
inc
add
sbb
out
mov
mov
stc
xchg
cmp
gs
mov
sti
fisubl
cltd
ret
mov
sub
insb
test
lock
jns
sub
add
jl
xchg
and
aas
mov
loopne
xchg
pop
xchg
adc
jb
ret
lahf
mov
outsl
xchg
outsb
add
mov
hlt
leave
mov
lahf
lret
jmp
add
mov
mov
mov
test
je
jmp
xor
es
ds
jmp
xor
shrl
ret
xlat
int
add
repnz
xorl
lret
cltd
inc
pop
movsb
cmpsb
ja
outsb
jno
or
dec
sub
clc
xlat
nopl
iret
imul
cmpsb
add
jecxz
lahf
aaa
sub
jp
cmp
ja
pop
subl
imul
inc
stos
or
mov
mov
in
jl
js
mov
and
out
stos
push
nop
jo
dec
jne
in
out
push
sbb
pop
ljmp
add
enter
adc
aad
inc
adc
cltd
sub
and
leave
sub
inc
fsubrs
or
mov
xchg
jnp
add
sbb
mov
out
cld
adcb
clc
test
je
mov
jmp
divb
add
xor
idivl
lods
cmpsb
xor
add
add
out
setne
and
pop
inc
cmp
movsb
call
add
out
ljmp
insb
jbe
xchg
xchg
ret
sbb
js
mov
sub
lahf
out
push
pop
pop
adc
mov
scas
pop
add
inc
and
add
lret
popf
pop
add
dec
insb
sysenter
mov
cmp
ja
dec
pop
mov
cli
pop
pop
enter
aaa
das
jno
cmp
cmc
scas
inc
and
insl
cmp
orb
les
or
pusha
jge
mov
stos
out
mov
imul
mov
cmp
pop
push
xchg
pop
jo
ret
jae
fs
outsb
sbb
outsl
add
jnp
lahf
test
loopne
mov
jmp
xchg
add
test
inc
ficoms
add
mov
rcll
outsl
xor
shrb
mov
fyl2xp1
push
sbb
xchg
stos
cmpsl
sub
dec
jnp
sub
add
aad
jne
aad
les
mov
sbb
mov
cmp
arpl
cld
data16
das
mov
decb
clc
lret
cli
sti
arpl
lods
jmp
roll
adc
test
outsb
adc
std
cmpsl
arpl
adcb
and
or
xchg
xor
xor
scas
sub
sbb
add
idivl
sub
pop
popa
std
jb
jb
add
push
push
jb
push
sbb
mov
out
and
inc
ss
testb
dec
decl
add
add
sub
mov
jmp
insb
lret
push
sbb
je
rolb
add
mov
enter
xor
inc
cmpl
push
popf
jo
sub
lea
jl
cmp
mov
les
cs
dec
test
or
push
add
or
mov
out
mov
mov
dec
pop
call
ja
sbb
sub
mov
dec
decl
push
lods
insb
orb
hlt
xchg
test
lods
and
push
lock
push
in
mov
hlt
push
mov
subl
jp
or
or
sbb
and
shlb
int
inc
mov
je
lock
mov
mov
jmp
mov
mov
mov
mov
jmp
xor
jl
mov
fnsave
inc
imul
rolb
add
inc
pop
mov
cmpsb
sub
lods
adc
jbe
jp
add
or
test
sbb
sbb
aas
cmp
inc
mov
leave
lock
jo
rorb
xor
nop
bound
push
in
push
out
mov
xchg
and
sbb
fisubs
sbb
mov
ret
call
scas
scas
or
adc
pop
inc
sbb
add
addb
xor
frstor
sbb
into
add
mov
jnp
pusha
jp
enter
mov
inc
inc
in
sbb
push
cltd
pop
cmp
inc
lods
sub
outsb
xchg
sub
setge
shlb
push
xchg
add
adc
incl
mov
mov
cmp
jne
mov
call
xor
inc
cmp
je
add
jmp
adc
or
aas
sbb
mov
into
loope
xchg
roll
add
and
sbb
lods
cmp
mov
scas
mov
mov
pop
push
cmp
inc
sbb
maxps
insb
test
xchg
lods
xchg
pop
les
push
leave
push
mov
inc
pop
pop
divl
xchg
or
mov
ret
jl
aam
push
push
xor
pop
jg
mov
lods
fnstenv
jl
push
jg
dec
loope
imul
mov
loop
int3
stc
cmp
in
xadd
xor
inc
into
jmp
cmp
cmp
dec
push
push
xchg
lds
xor
adc
in
mov
sar
rcll
mov
pop
mov
inc
mov
cmp
and
sub
sub
dec
outsb
mov
jmp
out
imul
adc
ljmp
add
jo
push
rolb
add
mov
fwait
push
and
mov
in
popa
je
imul
fs
unpckhps
out
gs
jge
sbb
fimull
mov
lret
aad
mov
jle
popf
adc
sbb
xlat
cmpsb
mov
adc
lock
xchg
lds
pop
adc
enter
bound
je
ljmp
repz
or
mov
add
dec
movsb
lock
cmpsl
inc
xor
int
mov
data16
jae
sbb
and
in
pusha
call
mov
leave
and
pusha
icebp
ja
shll
mov
clc
xor
inc
hlt
pop
pop
jmp
int3
sub
push
call
mov
sti
or
or
mov
mov
int
xchg
ljmp
mov
and
add
inc
cmpsl
call
hlt
mov
pop
sahf
mov
stos
lods
leave
cli
inc
into
push
mov
dec
cmc
mov
sahf
mov
push
sub
enter
nop
ds
addr16
dec
cmp
jmp
jbe
cmp
dec
and
push
imul
push
jb
stos
push
iret
mov
or
repnz
in
fs
mov
aad
rcr
xchg
xchg
push
lcall
sbb
ror
insl
push
dec
or
xor
push
pop
cmpsl
sub
ds
push
out
arpl
insl
adc
test
leave
ret
push
mov
sub
jmp
mov
and
movsb
pushf
mov
imul
roll
add
xor
cmp
movsb
mov
in
fsub
mov
sub
add
scas
test
mov
pop
jae
jmp
adc
add
es
aam
xchg
and
mov
pop
fimull
icebp
dec
jns
xor
sub
jno
mov
std
leave
xor
mov
es
sarb
stos
jns
or
shrb
jg
and
xchg
or
cmp
stc
mov
pop
fdivrs
dec
in
xchg
sub
xor
xchg
add
shrb
je
stos
push
movl
movl
movl
jmp
shr
xor
fcomip
jae
ret
mov
add
scas
add
add
sub
ds
cmp
sahf
in
mov
xor
adc
nop
or
rcr
adc
xor
adc
jp
andb
repnz
adc
jl
xchg
sub
mov
std
orl
cmpsb
out
jge
and
hlt
call
inc
testl
jb
pop
rolb
shll
xchg
lret
xor
xchg
xchg
jae
stos
sahf
sub
dec
xor
call
and
es
jbe
inc
mov
cmpl
and
movb
add
stc
fidivl
cmp
aad
add
pop
sub
jnp
or
jp
pop
dec
movsl
mov
jo
or
xor
shrb
add
cmp
sub
rorl
mov
out
pop
pushf
and
xchg
xchg
pop
pop
fwait
into
test
outsb
mov
mov
sub
fimuls
add
clc
repnz
movsl
jl
pop
repz
jns
mov
aas
mov
cmpsl
inc
lcall
fsubs
or
push
jge
in
cs
mov
dec
test
js
scas
jecxz
pop
sbbb
pop
int3
inc
xor
popa
sub
adc
stos
loop
ret
test
add
icebp
mov
and
mov
imul
jmp
into
jbe
mov
mov
lahf
dec
insb
es
movsl
add
scas
add
add
mov
in
popf
cltd
fildll
popa
dec
sbb
adc
jmp
insb
add
adc
mov
push
xchg
or
mov
int3
sbb
into
inc
and
mov
mov
jo
int3
jp
lods
xchg
adc
adc
and
inc
push
jp
jae
jb
jle
inc
mov
mov
jp
xchg
rcl
mov
mov
xchg
enter
cmpsb
loopne
cs
mov
out
stc
fmuls
ret
pop
mov
pop
xchg
fisubrs
insl
mov
xchg
mov
sbbl
jo
cwtl
cmpb
add
mov
movl
movl
movl
mov
mov
add
or
mov
lea
lea
jmp
pusha
fwait
mov
lahf
das
fstpl
repnz
xchg
xchg
add
scas
add
add
jle
fcompp
ficompl
icebp
adc
sahf
jg
das
std
out
adc
sbb
mulb
xor
mov
xor
mov
dec
loop
pushf
xchg
push
adc
dec
jecxz
loope
insl
inc
je
fwait
rcl
stos
inc
fst
loopne
ss
mov
fiadds
jno
aad
lcall
ss
inc
fs
mov
or
push
shr
leave
stos
push
cld
mov
movsl
add
mov
sbb
add
ljmp
add
int3
frstpm(287
jle
mov
aas
push
in
in
cmp
lods
rorb
mov
repnz
add
add
leave
adc
neg
in
aas
adc
test
xor
add
add
jns
imul
push
jnp
cmp
push
arpl
rcrl
mov
mov
nop
jmp
rolb
jmp
fimuls
adc
enter
cmc
shll
mov
jl
sbb
and
adc
loop
cmp
jl
filds
sbb
jge
iret
fisubs
inc
mov
ja
cmp
dec
jg
mov
lods
insl
leave
jno
test
lds
dec
addb
push
popf
or
sub
fmuls
hlt
std
push
add
movl
mov
mov
add
or
and
mov
sub
mov
movl
movl
movl
mov
mov
or
mov
jmp
es
repz
cmpsb
nop
cmp
int
xlat
add
scas
add
add
push
or
xchg
lret
dec
ror
sub
insl
xchg
test
push
push
jecxz
inc
sub
ja
std
int
jp
ss
inc
mov
and
and
std
mov
iret
pop
mov
fwait
sbb
adc
daa
add
pop
shl
cltd
inc
into
dec
add
dec
xor
mov
mov
mov
shr
mov
out
mov
mov
lods
out
in
inc
movsb
fcoml
jne
cmp
outsl
mov
dec
mov
jle
fcomps
xchg
xchg
subb
add
jmp
clc
cs
and
idiv
jmp
in
in
fadds
add
ljmp
cmp
ret
lcall
inc
arpl
faddp
sub
or
sbb
xor
dec
call
into
xchg
push
mov
in
xor
xor
push
cmp
divl
mov
push
icebp
mov
fcompl
data16
mov
movsl
sub
cmpsl
push
mov
mov
es
xor
adc
adc
fwait
in
xor
ja
push
les
fadds
or
push
mov
pop
adc
mov
movsl
and
jmp
outsb
xchg
sbb
add
ret
and
ljmp
loopne
mov
movl
jmp
fadd
in
std
arpl
jg
add
and
mov
scas
add
add
add
dec
test
sbb
lret
mov
faddp
cmp
sub
icebp
cmp
lea
cmpb
or
jecxz
ss
inc
or
push
scas
cmpsl
sub
add
fisubl
aad
mulb
mov
lret
jne
xor
call
cmp
jno
push
aam
lcall
sub
xchg
in
cmp
adc
loope
ss
add
inc
ret
dec
dec
or
fs
sbb
pusha
mov
jb
repnz
jle
inc
hlt
popa
pop
add
movl
mov
mov
shr
add
imul
mov
jmp
mov
mov
stos
lea
dec
scas
outsb
xchg
flds
add
pop
fs
out
movsl
rcll
movsl
mov
adc
sub
xor
jmp
adc
pop
push
jns
xor
out
popl
xchg
sbb
fs
pop
adc
mov
sbb
in
lcall
ror
push
mov
mov
push
mov
sub
mov
adc
jle
aam
in
movsb
inc
sbb
test
call
push
cltd
sbb
push
inc
ret
add
jge
xchg
negb
xchg
and
adc
and
stc
jge
xor
bound
imul
xor
mov
movl
jmp
test
xchg
mov
gs
ja
xor
pop
mov
scas
add
add
movb
and
ficoms
inc
outsl
cmpsb
lret
mov
ror
lds
sub
fcomps
mov
andl
sub
andl
jne
nop
cmpsl
ljmp
rcll
out
daa
and
xchg
mov
aam
push
dec
push
add
dec
subb
jge
mov
xchg
je
xchg
out
add
fldt
and
test
add
cmp
pop
std
enter
rol
call
pop
pop
mov
sub
xchg
iret
push
out
xor
repnz
loopne
mov
lcall
add
jmp
jbe
jbe
ja
notb
les
add
scas
add
add
testl
pop
push
in
movsl
xor
add
cwtl
cmp
test
out
pop
mov
sub
mov
negl
sub
pop
sbb
pop
xor
mov
sub
out
jecxz
sub
jbe
inc
loope
stos
mov
movsb
pushf
sbb
ja
popa
sbb
ja
repz
sti
cwtl
adc
jmp
lds
les
iret
fildll
frstor
pop
pop
cmp
ss
test
ja
pop
outsl
out
icebp
mov
adc
push
aaa
pop
movl
movl
mov
jmp
clc
outsl
lcall
ja
add
cmp
xchg
neg
add
scas
add
add
dec
dec
xor
arpl
xchg
es
push
cmp
shlb
xchg
stos
mov
leave
sub
pop
fwait
mov
xchg
stos
fwait
movsb
pop
cmc
sub
test
arpl
mov
push
bound
mov
add
jnp
testb
stc
ror
mov
mov
push
repnz
xchg
and
clc
lret
dec
push
repz
jge
pop
orb
inc
mov
rcrb
push
jne
push
ja
pop
push
inc
push
loopne
cs
push
js
jae
cmp
sub
mov
jg
or
mov
lock
mov
dec
hlt
shr
lea
jmp
daa
adc
xchg
push
or
movsl
faddl
add
inc
ret
repnz
pop
je
das
sbb
lcall
jmp
testl
daa
xor
xchg
lret
lcall
imul
mov
int3
xchg
outsl
dec
popa
dec
mov
dec
bnd
mov
aaa
mov
test
mov
mov
inc
inc
mov
sub
mov
arpl
dec
lea
gs
sub
inc
or
loop
cmp
movsb
je
adc
enter
outsb
out
cs
outsl
cmp
sti
aad
xchg
popf
jecxz
push
arpl
ret
jno
add
dec
cld
imul
mov
imul
add
mov
movl
movl
movl
movl
jmp
xchg
clc
shrb
stc
sub
cli
adc
or
mov
add
mov
int
int
cmp
cmp
push
pop
jmp
push
insl
cld
mov
jae
push
cmp
jl
adc
out
jae
add
inc
or
sub
mov
data16
add
scas
call
jp
cmc
enter
scas
xor
cmc
sub
inc
dec
mov
gs
dec
mov
enter
jg
fistl
sti
mov
cmc
rclb
mov
cwtl
insl
aas
test
fs
push
loop
or
into
loopne
push
jge
jae
mov
jae
or
push
outsb
ret
pop
jb
out
test
aad
outsb
push
cltd
in
inc
pushf
mov
jmp
xchg
out
sti
push
jno
insl
add
add
scas
add
add
addr16
shlb
hlt
orb
mov
jae
mov
fsts
scas
arpl
data16
mov
popf
mov
push
fwait
mov
jg
or
mov
int
call
sbb
mov
push
jmp
jno
mov
pcmpeqd
xor
xor
movsl
or
sub
lret
cmp
shrl
gs
repnz
enter
jo
stc
mov
xor
cmpsb
loope
loopne
or
xor
sub
cmp
push
cwtl
cli
enter
ljmp
clc
xor
jmp
arpl
add
popf
jmp
rcll
in
or
dec
scas
fiadds
add
jmp
add
lret
dec
or
pushf
lods
xor
lods
sti
mov
cwtl
adc
push
lds
movsl
cmovbe
cmc
leave
adc
sub
sub
aaa
or
sti
push
iret
cmpsb
and
mov
testb
mov
or
sub
fwait
rcll
jbe
and
out
jbe
pop
shrl
mov
inc
movsb
stc
mov
repnz
or
mov
ds
filds
jae
mov
pop
cmp
adc
popf
mov
movsl
scas
inc
or
mov
imul
jmp
lret
movsl
repz
mov
sar
int
filds
add
mov
xor
xchg
pop
cli
out
lea
and
lds
jno
mov
jmp
into
and
adc
jns
mov
jmp
sti
inc
jecxz
in
cmp
clc
in
lods
mov
push
into
cmpsl
loop
inc
inc
call
mov
push
stc
stc
fisubl
icebp
lahf
mov
push
fcomps
or
cs
adc
lea
fwait
adc
daa
rcr
fcomps
cwtl
sbb
push
lock
cmp
insb
shrb
aaa
int
fiadds
pop
rcrb
mov
imul
xor
jmp
pusha
xor
outsl
mov
maskmovq
add
loopne
add
inc
repnz
fwait
jnp
xchg
ljmp
mov
jg
cli
xchg
pop
mov
add
pushf
movsl
insb
jl
dec
and
je
mov
jo
dec
daa
pop
add
and
stc
xchg
in
xor
data16
insl
sbbb
bound
jns
cmp
shrl
fcmove
push
add
aam
dec
jge
xchg
mov
inc
adc
mov
add
sbb
scas
je
lret
mov
adc
cs
inc
or
sarl
or
fdivs
icebp
das
push
sti
fdivrs
xchg
aad
repz
push
mov
xor
or
add
movb
add
movsl
mov
mov
xchg
lock
loopne
add
pop
xchg
call
mov
in
stc
in
fistpll
sbb
cli
mov
cmp
mov
test
iret
std
jae
dec
mov
loope
push
sub
bound
jns
mov
mov
xchg
aas
xor
popf
mov
mov
sbb
sti
xor
in
je
adc
cmp
mov
cmp
les
and
je
adc
mov
xchg
jnp
pop
mov
fnstenv
add
fucomp
fistps
stos
mov
dec
stos
pop
lods
pop
je
and
movsb
jae
xchg
inc
sub
icebp
inc
mov
jmp
inc
fadd
inc
sarb
fucomi
push
inc
aam
add
add
inc
fmul
xor
add
inc
fsubrl
add
movl
movl
mov
mov
mov
mov
add
adc
or
jmp
mov
std
mov
ss
imul
scas
add
add
test
jbe
xlat
xchg
mov
or
scas
flds
lods
es
jbe
test
nop
loopne
testl
mov
iret
in
into
cmc
ljmp
jns
xor
icebp
jle
scas
pushl
pop
stc
std
lea
jmp
or
in
les
jmp
cmpb
fsubs
scas
pop
dec
inc
insb
add
mov
lret
pop
scas
lods
lret
shrl
sti
or
jmp
nop
fs
das
std
mov
push
and
add
daa
inc
mov
cmp
lcall
push
rorb
into
mov
push
push
push
push
jmp
out
pop
out
jg
test
jle
jmp
scas
add
add
xchg
imulb
mov
lret
pop
xchg
arpl
mov
pop
or
push
loope
inc
sub
loop
mov
xor
dec
aas
lods
insl
psubusb
nop
dec
stc
pop
mov
or
sbb
and
dec
rorb
mov
sbb
cmp
fisubs
mov
daa
xchg
pop
jb
inc
sub
movb
and
jge
outsl
push
scas
lock
fmulp
mov
stos
idivb
in
bound
aad
fdivl
clc
and
jno
dec
popl
rclb
loope
call
and
and
jmp
mov
push
fistpll
or
ret
loop
add
rcrl
std
test
push
je
movb
loope
push
sbb
pop
sub
cmpb
sub
xchg
add
pop
and
jmp
or
rolb
pop
clc
pushf
push
sbb
push
call
ja
out
push
cmpsb
add
fcoml
xchg
lds
lods
pop
ror
ljmp
ret
add
push
jnp
mov
add
movsb
out
icebp
stos
leave
rcll
pop
in
int
ret
add
or
xchg
sahf
subl
ret
inc
add
and
xor
jecxz
in
jmp
xor
lret
fcompl
adc
sbb
mov
adc
mov
jmp
nop
rol
rcrb
fmul
push
ds
int
mov
jno
add
scas
add
add
jae
xor
jmp
xchg
add
stos
pop
stos
daa
mov
dec
aad
mov
ret
sub
cwtl
imul
rolb
pop
js
and
jmp
hlt
or
dec
je
aad
push
fnsave
mov
and
mov
push
mov
adc
dec
sub
pop
pop
in
and
or
push
sub
es
push
sub
sbb
mov
inc
jecxz
ret
sub
add
scas
repz
pop
inc
dec
push
xor
adc
std
ds
fwait
aad
out
test
das
cs
add
adcb
add
movl
movl
jmp
aas
jns
push
xlat
cli
mov
gs
in
add
cmp
cmp
mov
scas
push
popf
movsb
aas
inc
pop
in
mov
mov
jmp
xor
lods
sub
xchg
add
mov
repnz
shlb
add
fadds
lcall
mov
lods
mov
cmp
cld
arpl
int
adc
mov
in
mov
movsb
xchg
pop
push
push
jg
cmp
xor
hlt
testl
call
ja
adc
pop
outsl
pop
shll
push
sbb
pop
xchg
or
push
fsubrl
repz
jge
mov
xchg
mov
add
movl
movl
movl
movl
movl
jmp
cmpsb
imul
int
xchg
aas
int
add
scas
add
add
out
outsb
sbb
sbb
jle
xchg
je
enter
jbe
test
lock
movl
sbb
rcrb
sbb
mov
xor
out
mov
jne
sbb
mov
or
ja
test
push
daa
imul
movsl
pop
mov
lea
adc
sbb
lcall
mov
mov
fs
scas
sub
inc
cmpsl
pop
mov
xchg
ljmp
movsb
pop
fidivs
out
cmp
inc
hlt
lods
xor
add
inc
clc
mov
add
movl
jmp
inc
sti
mov
mov
pop
test
movsl
jnp
add
scas
add
add
stc
inc
cs
ds
add
je
fcoms
adc
xchg
loopne
imul
inc
daa
cli
insb
imul
je
nop
iret
sub
adc
fidivrs
loopne
jns
pop
insb
or
mulb
cmpsb
cmp
pop
cmp
xor
cmp
into
xchg
jmp
lahf
nopl
lea
stos
into
sbb
sub
mov
sbb
adc
mov
aas
fcompl
and
call
xor
push
insl
test
dec
das
or
movsl
push
subl
pop
inc
pop
xor
cli
push
mulb
mov
mov
inc
mov
pop
add
jmp
push
dec
inc
pop
ja
cmp
jnp
and
out
add
jbe
jl
inc
outsb
mov
mov
cmp
jae
inc
lret
xacquire
lahf
mov
inc
mov
stos
mov
lret
xor
aad
lods
inc
out
loope
sbb
in
aaa
push
push
lahf
incb
fbstp
sub
nop
mov
pop
into
mov
fdivl
mov
aas
lcall
or
test
jnp
cmp
jo
cmp
leave
shrb
pop
push
mov
loop
inc
mov
ja
cmpsb
js
jns
popa
or
or
mov
movl
movl
jmp
stos
dec
mov
ja
in
fiaddl
outsb
xlat
out
add
scas
testl
add
inc
or
mov
fadds
popf
pop
lods
or
int3
sbb
mov
pushf
outsb
enter
xchg
pop
in
ret
into
cmc
fidivl
sbb
inc
loopne
iret
lods
mulb
movsb
dec
lock
dec
fstpt
and
mov
dec
call
cmc
add
fwait
aaa
mov
jne
mov
lahf
pop
add
outsb
popa
clc
add
call
sarl
loopne
ja
out
movsl
jl
data16
jo
pop
xor
cmp
jl
je
ss
pop
xor
push
cmp
mov
inc
mov
movl
movl
movl
movl
movl
movl
jmp
xchg
mov
mov
mov
mov
inc
movsl
pop
sbb
out
add
jb
push
test
sub
cmp
jnp
lret
aam
jmp
nop
enter
or
adc
cmp
enter
ficoms
push
jmp
scas
in
add
xchg
mov
stos
and
ljmp
xor
lock
or
jbe
jmp
in
loop
out
mov
mov
jecxz
scas
and
shlb
and
fs
inc
pop
fsincos
cwtl
xchg
mov
cmpsl
mov
mov
push
and
mov
mov
adc
ljmp
xchg
sahf
subl
adc
xchg
out
mov
cmpsl
shll
mov
mov
sub
jmp
int3
push
mov
lods
and
xchg
stos
mov
mov
scas
add
add
and
add
mov
add
push
loopne
les
xor
sbb
aaa
dec
nop
cmp
jge
lret
adc
test
and
mov
add
pop
movsb
push
cmp
inc
mov
dec
stc
xchg
jecxz
arpl
jg
ljmp
xchg
shlb
cmp
mov
or
shl
xchg
xor
ljmp
fldt
loop
adcl
test
call
jge
sarl
jecxz
rcl
dec
les
popa
scas
dec
mov
shr
movb
add
cmp
cli
call
sub
movsb
cmpsl
and
add
ret
in
xchg
xchg
jecxz
add
int
lds
ds
jno
inc
mov
sbb
mov
jle
jp
scas
xchg
rcrb
iret
mov
push
sub
fcmovnu
xchg
push
sbb
mov
cmp
data16
frstor
in
fisubl
push
clc
mov
or
in
cmp
cmpsb
addr16
inc
repnz
ja
adc
lret
sbb
ljmp
aad
pop
ljmp
movsl
xorb
fsubrs
jecxz
aam
push
push
aas
rcll
dec
mov
or
shll
add
sar
mov
dec
cld
div
xor
add
push
jmp
std
orl
mov
xor
scas
add
add
shll
jecxz
push
ret
sbb
rep
call
das
in
sub
mov
xacquire
out
add
cmp
pop
mov
cmc
pushf
push
cmc
fs
or
jns
sbb
and
and
out
sbb
mov
scas
push
or
sub
adc
mov
cmpsb
sbb
add
xchg
push
in
or
xchg
lcall
ss
ret
rcrl
xor
loope
add
mov
fadds
popf
out
cmpb
jecxz
xchg
sub
and
mov
fisttpl
sub
lock
lea
cmpsl
mov
jmp
adc
call
mov
cmp
add
add
mov
jnp
cmpsl
mov
pop
jmp
cltd
sub
jnp
setg
pop
lock
mov
and
xchg
ror
mov
push
xchg
push
sbb
cmc
adc
fdivrl
dec
sub
xchg
cs
and
mov
xor
mov
pop
dec
inc
dec
insl
push
bound
aaa
dec
cmp
addr16
pop
push
cld
int3
mov
or
jno
inc
push
jg
mov
cmp
in
daa
lret
xchg
jmp
ds
pop
jle
jge
paddusb
filds
sbb
add
and
imul
jmp
xchg
cmp
dec
mov
dec
outsl
in
sub
add
pop
jae
mov
mov
push
inc
iret
push
cmp
inc
jnp
dec
pop
inc
add
insb
cs
cmp
sti
lds
das
dec
xor
dec
adc
rolb
inc
mov
shr
push
jmp
neg
mov
iret
shlb
xor
xor
mov
sub
stc
mov
mov
push
mov
push
js
iret
sub
cwtl
add
fdivl
jecxz
adc
push
gs
dec
cmpsl
dec
or
aam
mov
in
in
stc
sbb
add
adc
mov
mov
out
mov
mov
inc
mov
add
add
jmp
in
xchg
sti
fwait
ljmp
dec
mov
cltd
jmp
add
test
mov
xchg
sbb
lock
and
mov
aad
mov
not
loop
pop
sub
jecxz
movsl
adc
insl
dec
movsbl
inc
adc
loop
es
lds
pop
ret
mov
bound
sub
xor
sub
push
ds
ficoml
adc
mov
mov
test
cmp
cmpb
lahf
sub
pusha
in
cmpsl
js
jecxz
in
sub
fwait
fwait
xchg
cmpsl
mov
arpl
push
adc
lock
loope
inc
and
cmpb
and
pop
fisubl
mov
push
or
xor
add
add
jne
lret
fnsave
or
pop
inc
in
add
scas
add
add
mov
lea
sub
sbb
mov
sbb
and
push
inc
or
pop
jmp
add
test
imul
mov
adc
and
mov
jbe
iret
sub
xorps
lods
add
stc
adc
or
xchg
stc
jnp
cmp
pop
pushf
inc
addb
stos
into
dec
lcall
cmp
out
jg
inc
sbbb
push
ljmp
sarl
jns
cs
jp
xchg
xor
bound
xor
dec
cmp
imul
xor
add
push
jmp
mov
cmp
ds
mov
or
cmc
in
add
scas
add
add
sub
mov
mov
rcrb
shll
ljmp
dec
das
je
push
dec
nop
ljmp
mov
cli
enter
adc
cli
data16
adc
push
out
fadds
loopne
fnstsw
jp
adc
dec
stc
push
shlb
mov
aam
stos
loope
pop
push
adc
mov
or
jb
push
pop
mov
fucomi
push
or
int
jge
xchg
jl
dec
sbb
fidivl
jg
xchg
iret
mov
jmp
sbb
or
mov
jmp
mov
mov
cmpsl
jae
mov
add
add
lods
add
jb
nop
pop
shrl
icebp
jns
mov
sub
mov
mov
test
push
shr
add
cmp
leave
xlat
cmpsb
mov
gs
addb
push
push
inc
add
daa
insb
shrb
gs
sbb
or
imul
dec
sub
push
gs
test
js
inc
fsubl
mov
pop
xchg
les
daa
xchg
push
push
xor
jo
push
cmp
jno
mov
jmp
cltd
add
cmp
pop
mov
inc
ret
nop
lods
fdivr
mov
test
int
jecxz
loopne
aaa
mov
mov
push
and
add
add
or
scas
das
pop
jns
ficoms
lahf
mov
scas
add
add
pusha
jl
push
imul
js
xchg
inc
push
and
sti
adc
xchg
or
cwtl
pushf
pop
test
in
sahf
mov
jg
lds
cli
aaa
jp
pop
cmp
mov
in
or
add
mov
xchg
cld
add
repz
addr16
ljmp
mov
pop
into
aam
mov
int
in
lcall
sbb
inc
daa
dec
add
sub
mov
rolb
mov
iret
dec
ficomps
xchg
out
cld
leave
lods
jge
sbb
or
xchg
mov
mov
mov
or
imul
jmp
jg
cmpsb
popa
mov
xor
out
add
scas
add
add
push
lds
fcmove
stos
xor
outsl
pop
mov
cmpsb
pop
or
or
int3
aad
mov
cld
les
mov
xlat
xor
outsb
mov
lods
ror
cmc
adc
and
push
mov
test
outsb
leave
cs
je
test
cmp
imul
jp
sub
lods
push
cmpsl
mov
cmp
pop
es
divb
lret
or
adc
pop
cwtl
imul
jnp
hlt
int
jg
stos
enter
push
xchg
push
push
add
mov
xor
push
xchg
dec
xor
jmp
push
les
std
mov
sbb
lods
out
add
scas
add
add
inc
mov
ljmp
stos
inc
dec
inc
xor
pop
pop
dec
jns
pop
cmp
pop
pop
popa
sbb
xor
cmp
mov
push
aaa
ret
out
int3
sbb
adc
out
in
push
mov
sbb
dec
xor
cld
cli
mov
iret
mov
andb
or
adcl
sub
sbb
xchg
dec
pop
xlat
mov
inc
loop
popa
push
push
ret
adc
push
mov
pop
das
pop
fisubl
inc
inc
cmp
mov
xchg
out
jnp
pop
ja
lret
sbb
insb
fsubrs
loop
lds
repnz
repnz
sub
and
lea
xor
push
mov
sub
jmp
ret
in
addr16
out
ljmp
adc
add
scas
add
add
mov
fisttps
dec
xor
divl
int3
and
cmp
scas
xchg
pop
call
mov
mov
jg
pop
aaa
push
jne
xor
cmp
mov
pop
sub
xchg
pop
add
adc
movsl
shrb
pusha
adc
push
and
popf
sbb
push
jnp
rol
repz
mov
mov
xlat
call
or
lock
push
cltd
inc
xlat
pop
push
lret
scas
mov
sahf
sbb
pop
fwait
push
sbb
xchg
xor
pop
pop
push
mov
popa
push
in
subl
xchg
insb
lret
out
dec
sub
in
mov
insb
xchg
pop
jle
imul
xor
lea
jmp
or
inc
push
imul
xchg
lret
in
dec
xor
push
or
scas
add
add
in
ret
jns
pop
cmpl
add
loope
stc
and
aad
dec
push
stc
pop
fidivrs
push
stc
push
cmp
mov
mov
sbb
call
ss
sbb
or
pop
out
push
inc
pop
sbb
jle
and
xchg
sbb
dec
fs
mov
jnp
ja
inc
add
jg
rolb
imul
sbb
jne
jns
rcl
add
xchg
mov
sbb
add
les
sbb
int
popf
jns
fldl
sub
iret
out
push
adc
lock
pusha
call
mov
mov
add
or
sub
cmp
jne
mov
jmp
or
push
xchg
jle
lret
mov
hlt
in
adc
icebp
add
scas
add
add
pop
outsb
mov
inc
jbe
jbe
int3
and
pop
arpl
push
push
and
adc
into
leave
nopl
sbb
cmp
lret
pop
cmp
pop
lret
lret
pop
fstl
sub
add
ret
jns
xor
js
cmp
pop
aam
mov
fisubrl
fidivs
cwtl
sub
sub
pop
arpl
sub
movsb
sbb
jmp
cmpsl
jbe
cs
daa
aas
xor
xchg
sub
jne
iret
pusha
mov
aas
mov
arpl
jl
and
insl
inc
divl
dec
nop
imul
xor
and
add
jmp
push
and
xchg
mov
dec
int
arpl
int
repnz
scas
add
add
subl
jo
shrb
mov
xchg
add
test
dec
add
lds
test
notl
push
jo
in
mov
xor
ret
out
adc
or
in
sbb
sti
lcall
je
jecxz
pop
not
push
jb
ljmp
fwait
dec
ljmp
jns
mov
mov
sahf
ret
push
ds
push
or
test
and
out
ja
cltd
insl
pop
es
jbe
pop
popf
jmp
shll
es
ljmp
dec
aas
gs
inc
push
xor
lea
jmp
sub
lea
imul
pop
jl
fnstsw
adc
add
scas
add
add
lock
sub
inc
popa
sub
inc
out
push
vcvttps2dq
pop
mov
movsl
mov
scas
cmpsb
and
mov
outsl
pop
stc
jmp
mov
mov
push
insb
cmp
sbb
or
decl
mov
scas
ds
xchg
mov
adc
aam
das
lods
jge
pop
sbb
ja
and
adc
xor
dec
dec
jns
mov
subl
outsb
scas
push
jb
jno
and
cmpsb
dec
addb
call
mov
jge
push
sub
xchg
lret
faddl
push
push
sbb
mov
sub
out
push
mov
jmp
push
and
fidivrs
loopne
clc
add
jmp
jae
in
lcall
andb
loopne
mov
dec
stos
fsubr
mov
mov
subb
mov
mov
adc
push
sbb
xor
add
jno
inc
aas
pop
test
repnz
add
das
fcomi
and
in
cwtl
or
jl
roll
ljmp
ss
test
mov
sbb
stos
jno
fdivl
jge
daa
arpl
push
adc
mov
gs
mov
jns
mov
xor
mov
mov
nop
pop
sysexit
into
sub
push
or
bound
fcomps
lods
xchg
notl
dec
enter
dec
shlb
rorl
xor
jmp
pop
and
divb
div
jecxz
loope
dec
test
fistpll
outsl
hlt
add
scas
add
add
pop
fs
mov
adc
enter
mov
mov
push
out
xchg
and
lock
xchg
lds
jp
lret
enter
push
xor
out
mov
push
adc
stos
push
add
nop
push
hlt
or
sbb
jg
jnp
sbb
cmp
movsb
xchg
sbb
xchg
frstor
jb
sbb
movsb
add
or
pop
daa
jle
push
ret
pushf
jl
push
xor
por
dec
dec
add
mov
xchg
xor
mov
adcb
loopne
ficoml
mov
inc
add
movb
add
push
sti
icebp
fldt
jb
loopne
sbb
add
add
call
inc
pop
or
dec
lds
mov
add
into
cmp
mov
shl
jge
lods
rorl
sbbl
into
or
adc
adc
xchg
sbb
inc
mov
test
adc
mov
test
mov
mov
sub
pop
adc
adc
adc
xchg
dec
je
ret
pop
xchg
sahf
xchg
dec
mov
in
test
repz
or
pop
sub
mov
ror
pop
jmp
mov
mov
mov
jns
shrl
out
add
push
mov
imul
mov
div
mov
xor
jmp
cmpb
fistpll
jmp
ret
es
sbb
scas
add
add
ss
addl
out
and
pusha
rcl
repz
dec
jecxz
shll
pushf
or
sbb
pop
jecxz
xchg
jecxz
dec
pop
push
outsb
cwtl
addr16
sbb
mov
divb
cmp
cwtl
ret
xor
pushf
cmc
mov
sbbb
loopne
imull
push
jo
je
and
aaa
pop
push
fs
xor
lea
pop
bound
fadds
test
bound
add
mov
repz
push
ret
shrb
xchg
sti
mov
inc
xor
xor
pushf
in
lcall
jae
push
out
and
mov
scas
sarl
movb
add
repz
jge
loope
dec
dec
scas
aad
jns
add
scas
add
add
sub
testb
out
in
mov
scas
loope
out
jp
ljmp
cwtl
lods
rorl
lods
push
jmp
sbb
loope
push
mov
loop
mov
or
push
lcall
mov
push
shll
pop
les
mov
sub
rcll
or
andl
and
cld
lods
es
mov
imul
cmp
negl
or
and
pop
and
mov
rclb
pop
pop
loope
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
jmp
pop
jmp
insl
in
outsl
jmp
pop
adc
xchg
mov
add
lds
repnz
mov
adc
jae
pushf
loop
in
adc
jecxz
loope
fucomp
xchg
xchg
cmp
mov
pop
clc
pop
dec
mov
dec
dec
add
xor
leave
lcall
fwait
adc
out
cmpsb
mov
out
mov
in
push
push
cmpsl
fstpl
rcrb
jmp
add
add
dec
stos
rorl
in
sbb
cmpsl
jo
pushf
mov
andb
xor
loop
cmp
fisubl
adc
xor
into
incl
stc
mov
inc
add
mov
jmp
pop
ds
cmp
out
into
xor
int
testl
add
add
fnsetpm(287
xor
jbe
and
add
sbb
jnp
mov
mov
sahf
subb
outsl
fisttpll
hlt
loope
jmp
mov
fimull
aas
xchg
mov
incb
push
cmpsb
scas
mov
jg
test
jmp
repnz
fstpt
repz
mov
jle
xor
mov
jno
sti
in
jne
ficompl
and
sbb
andl
pop
push
xor
stos
fistpl
push
sti
std
mov
jne
adc
loope
out
insb
add
jns
stos
or
add
adc
xor
xor
cmp
jmp
lret
fwait
xchg
sbb
mov
sbb
xor
add
add
arpl
mov
hlt
lcall
or
mov
popf
loope
push
mov
push
arpl
icebp
push
xchg
das
sub
sbb
mov
cltd
in
jno
or
aas
mov
insb
mov
mov
push
sarl
jb
adc
out
imul
ss
or
nop
incb
aas
repz
add
cmpsl
daa
mov
inc
xor
cmc
jp
insb
jecxz
and
and
jmp
shlb
fdivrp
loopne
mov
xor
hlt
mov
mov
xlat
sub
push
test
add
add
decl
test
inc
lock
mov
mov
jmp
cltd
nop
add
or
hlt
bound
js
mov
scas
add
add
xchg
pop
insl
add
sbb
mov
sbb
nop
test
mov
jg
imul
xor
clc
ret
jge
and
adc
inc
pushf
dec
sbb
mov
sarl
jb
in
mov
sbb
repnz
sbb
loopne
fs
adc
pop
mov
sub
xchg
rol
inc
inc
aaa
add
inc
out
shlb
ljmp
pusha
outsl
mov
shrl
push
xor
and
call
lock
push
add
push
xor
xchg
scas
jnp
loop
fisubs
sub
dec
sbb
fwait
add
or
xor
lock
push
rclb
mov
cmp
stc
add
scas
add
add
daa
lock
pop
cmp
es
pop
cwtl
xor
push
wrmsr
or
lock
movsl
jno
mov
xchg
fiadds
fmul
lea
or
dec
jge
mov
adc
cmp
into
xchg
movsb
arpl
das
xor
outsb
sub
cmp
jb
shl
lea
ret
dec
js
lods
xlat
loopne
cmpsb
xor
jnp
inc
scas
arpl
movb
sbb
sub
xchg
jl
mov
mov
sub
lret
sbb
subl
sub
sbb
xor
mov
jmp
call
push
mov
add
add
mov
rorl
add
and
pop
xchg
pop
imul
mov
cld
push
sbb
cli
add
scas
add
add
xchg
aaa
stos
sbb
cmp
jmp
sbb
mov
scas
xchg
sub
mov
aam
mov
mov
out
cmp
jle
movsl
push
cbtw
lret
dec
cli
jae
xor
dec
or
xchg
pop
jne
push
gs
std
test
pop
sub
xchg
cmpsl
push
scas
mov
sbb
cli
mov
movsl
mov
cmp
gs
mov
daa
test
push
add
adc
insl
movsl
lds
jge
imul
nop
mov
push
jbe
jnp
add
inc
daa
jbe
push
xchg
lds
scas
xor
inc
loopne
dec
in
inc
lock
jmp
jle
and
out
jnp
out
in
xchg
inc
or
scas
add
add
bound
xchg
and
sub
sub
movsb
popf
daa
xorb
mov
push
inc
and
pop
mov
movsl
mov
sbb
jbe
pop
and
ja
pusha
out
xchg
sub
cltd
loope
mov
jecxz
addr16
mov
neg
jl
push
lcall
test
pop
fcoms
out
push
clc
sub
mov
in
inc
cli
mov
xchg
test
sub
aaa
cld
dec
and
mov
jns
or
pusha
pusha
fucomip
push
sub
inc
int
out
dec
xor
jno
xor
test
add
push
push
inc
jmp
cmc
int3
mov
mov
lods
mov
movsl
jmp
add
add
cwtl
pop
fsubp
push
mov
aaa
int3
ret
push
inc
sbb
mov
out
out
jno
and
in
fists
stos
pop
dec
incl
adc
cmpsl
sbb
or
mov
test
insb
adc
shll
clc
addl
add
out
icebp
push
and
cs
jle
mov
rcll
js
mov
mov
movd
sbb
push
mov
inc
imul
add
xchg
inc
sbb
movsw
xor
lahf
cmp
ljmp
mov
lds
inc
add
push
push
ja
inc
lock
sub
mov
cmp
add
scas
add
add
sbb
cmc
lret
xor
ret
add
divb
xchg
pop
push
cmp
dec
fcompl
xchg
or
andl
test
hlt
imul
jge
es
sbb
xor
cld
pop
and
inc
push
sub
aaa
and
bound
in
mov
mov
lret
popa
mov
stos
mov
rcrl
sbb
pushf
lret
stc
rorb
loop
enter
out
scas
ljmp
mov
adc
xchg
mov
push
test
mov
pop
sarb
or
fmull
add
jmp
cmpsl
std
inc
ss
mov
and
std
add
scas
add
add
mov
push
rcl
mov
push
adc
sbb
push
test
int3
insb
jo
in
in
push
insl
xchg
and
add
out
jmp
mov
inc
lea
movsb
mov
push
mov
cmp
or
aad
aaa
push
lret
push
push
mov
add
outsb
pop
lods
mov
jo
push
mov
pusha
int
sub
andl
push
loope
pop
in
shrb
fdivrs
mov
sub
mov
in
mov
push
add
jne
inc
sti
adc
mov
pushl
pushl
pushl
pushl
pushl
jmp
in
jg
jmp
jge
or
cmpsb
dec
mov
add
enter
arpl
jg
aas
push
mov
mov
insb
dec
push
pop
or
fst
dec
jecxz
push
ret
int3
dec
sbb
stos
cmp
out
jg
or
and
in
pushl
jae
jecxz
lods
xchg
stc
and
leave
inc
add
push
fisttpl
mov
adc
jg
adc
repnz
out
xchg
ret
cmpsl
push
out
dec
into
insb
jle
fistl
jge
into
idivb
mov
cmp
pop
inc
rolb
add
stos
fwait
shll
inc
mov
pop
stos
and
insb
lea
mov
cli
pop
fsubl
sbb
xor
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
jmp
and
aaa
adc
rorl
mov
imul
add
jae
adc
out
les
sub
out
or
mov
loope
sbb
mov
cmc
jecxz
push
outsb
test
sub
rdmsr
cld
add
ds
mov
or
jmp
int
fisubs
mov
test
es
mov
in
adc
push
xor
jle
xor
mov
sar
arpl
sbb
mov
imul
repz
and
push
in
jbe
fwait
pusha
jb
mov
mov
and
push
bswap
sarl
hlt
pop
cmp
ds
sub
dec
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
jmp
ss
popf
stc
fbstp
jmp
addr16
add
incl
add
push
les
mov
or
jle
leave
mov
adc
cmp
leave
cmpb
xchg
cmpsl
popf
mov
sbb
mov
in
xchg
dec
jle
sbb
jo
nop
mov
push
pop
push
wbinvd
xchg
jnp
and
loopne
sahf
xor
outsb
loop
setno
bound
adc
mov
add
pop
inc
xchg
test
jnp
xorl
ja
xchg
mov
arpl
aas
out
push
or
pop
add
in
lret
fiadds
pop
out
lahf
cmp
xchg
imul
jo
sub
inc
dec
mov
nop
xor
add
imul
push
push
call
jmp
sbb
gs
mov
and
sub
mov
add
push
push
inc
jo
setle
cltd
jns
jbe
test
jge
pop
mov
pop
sahf
iret
inc
loop
cmp
mov
cld
jb
sbb
test
or
add
jnp
push
hlt
lods
repnz
adc
fsubs
fdivl
popa
fcoml
or
mov
test
sub
sub
loop
push
jecxz
cmp
xor
fxch
xor
and
ljmp
sbb
mov
sbb
sbbb
and
push
loop
dec
addl
inc
mov
shrb
testb
dec
xor
cmc
psrld
mov
mov
mov
push
push
push
push
call
xor
or
sub
mov
jmp
sbb
jg
icebp
cmpsb
ss
xchg
inc
cmp
add
add
mov
mov
mov
add
xchg
fnsave
ss
leave
clc
sub
lock
cmc
icebp
addr16
xchg
push
fsubl
cli
sub
arpl
imul
push
cmc
dec
pop
ja
mov
enter
xor
in
std
sahf
mov
daa
inc
jecxz
push
mov
loope
jp
in
jecxz
sub
lea
fisubrl
test
rcll
rcrl
or
adc
popa
rorb
out
cli
pop
movsb
das
mov
mov
pop
loopne
in
xor
addr16
inc
mov
inc
fs
jmp
mov
jnp
inc
mov
loopne
add
movl
movl
movl
movl
movl
jmp
add
rcrb
std
jg
ja
cmp
inc
xor
je
add
mov
add
push
sti
push
ds
pop
ljmp
jl
cmp
mov
in
arpl
xor
pop
dec
push
push
sub
mov
mov
cltd
mov
cmp
fidivrl
cmc
inc
inc
mov
iret
cld
hlt
jmp
jns
add
push
mov
mov
pusha
fnstcw
fistps
loop
and
scas
notb
fdivl
daa
adc
add
out
shll
loopne
or
pop
pop
cmp
pushl
jae
flds
xchg
mov
ljmp
add
add
movl
mov
mov
jmp
push
pushf
xchg
mov
lret
mov
sub
add
mov
add
cmp
jb
cmpsb
jae
pop
add
aad
mov
mov
pusha
push
dec
data16
lds
mov
dec
mov
inc
imul
pop
call
jecxz
mov
sub
cmpsl
imulb
mov
pusha
jno
cmp
xchg
cmp
rcl
mov
mov
jbe
cli
mov
add
repz
shld
lea
in
xor
jecxz
xlat
fwait
jnp
mov
pop
mov
cmpsl
lods
clc
mov
xor
call
push
mov
fsts
mov
or
imul
iret
add
add
addl
xchg
jo
pop
push
mov
loop
add
mov
add
mov
jns
cmc
fs
xor
dec
adc
std
sub
or
or
or
push
idivl
test
jae
mov
jne
dec
add
roll
lock
xchg
xor
pop
xor
ja
lahf
dec
rorl
sti
cltd
push
popf
addr16
jns
enter
pop
sbb
jecxz
stos
fs
mov
ds
rcrl
add
sub
xchg
xorl
sub
ficompl
push
or
decb
and
std
sbb
addb
push
jmp
push
aaa
sbb
push
sarl
mov
vxorps
scas
pop
cmp
or
and
jmp
insb
add
or
out
addr16
shr
or
cltd
add
add
jmp
pop
and
pop
in
jne
fs
dec
ret
cld
pop
sbb
or
test
lea
sub
popl
mov
dec
fs
mov
cli
push
jne
sbb
sbb
push
xchg
cs
pop
sub
sbb
lret
jb
aad
or
pop
je
ja
mov
mov
mov
sbb
daa
sbb
jns
sbb
test
mov
imul
cmc
fildll
push
jecxz
loopne
jns
dec
bound
jle
shlb
fcmove
cmp
fwait
repz
xchg
xchg
or
call
sub
and
and
push
jmp
sarl
sarl
mov
add
add
stos
sbb
dec
cltd
fldl
int3
mov
adc
xorb
das
test
ljmp
in
mov
cltd
pop
sbb
jge
rcrl
and
mov
push
sub
jmp
call
xchg
jae
stos
jo
arpl
out
mov
in
ds
mov
mov
or
sbb
sub
icebp
or
jno
aam
jno
mov
leave
popa
mov
lds
ret
pop
jmp
insl
lcall
addl
adcb
lret
leave
data16
fsts
or
jmp
jo
call
mov
mov
or
sub
mov
jmp
xor
adc
ja
jmp
enter
add
add
lods
mov
push
fnstenv
movsb
pop
sbb
outsb
push
stos
pop
jg
jmp
addb
jbe
in
push
add
add
mov
loopne
cmc
bound
jnp
test
and
xchg
js
mov
dec
xchg
loop
pop
mov
sbb
sub
outsl
dec
pusha
push
add
sub
in
popf
adc
rcll
pop
test
mov
jnp
pop
cmpl
notb
sbb
gs
xchg
mov
in
nop
cmc
jle
or
sub
xlat
or
das
jg
lods
in
pop
in
je
jo
adc
imulb
jnp
xor
add
add
jmp
xchg
xor
jbe
mov
mov
mov
add
in
xor
xchg
jnp
imul
xor
std
and
clc
sub
cmp
push
pop
adc
cmpsb
xchg
ljmp
push
sbb
jo,pn
pop
shl
and
mov
jecxz
aad
mov
dec
or
inc
push
jmp
imul
bswap
repnz
imul
adcb
mov
cmp
js
fldt
fildll
inc
in
adc
mov
dec
jl
cwtl
mov
xor
iret
test
and
aam
inc
outsl
mov
negl
dec
out
push
mov
sahf
pop
pop
sub
enter
aas
test
jge
ret
movl
movl
mov
jmp
aaa
lock
jg
inc
mov
add
mov
add
add
in
out
and
xor
shl
nop
push
daa
aaa
xor
mov
faddl
scas
mov
push
mov
outsl
lahf
sbb
dec
or
sbb
add
gs
dec
lods
in
fimull
jmp
sub
cmpsb
pop
cmp
shl
bound
push
into
int
xchg
sbb
jo
mov
je
sub
push
pop
xchg
ret
lcall
inc
jo
insl
sbb
pushf
lods
out
or
mov
or
pop
lock
pop
mov
test
adcl
xor
jmp
mov
mov
mov
mov
mov
add
inc
or
bound
sub
je
xchg
addl
mov
jnp
pusha
lret
inc
sahf
cltd
jecxz
fs
add
push
test
mov
push
push
jecxz
in
cmp
cwtl
pop
xor
hlt
inc
pop
and
outsb
jge
push
lret
xchg
jae
lods
testl
shlb
or
in
in
icebp
leave
popa
cmp
inc
xchg
sub
lret
mov
xlat
mov
sub
scas
movsb
mov
dec
mov
or
and
mov
add
mov
xchg
sub
push
xor
inc
sub
add
shr
add
add
mov
iret
inc
mov
leave
xor
pop
add
mov
add
stc
hlt
loope
dec
sbb
int3
jne
pop
cmp
cs
xchg
adc
stos
jg
loop
or
fs
and
imul
xchg
sbb
idivb
sub
cmpsl
sub
sub
xchg
shll
pop
fbld
cmp
add
cmp
cmp
inc
lea
fisubrs
cmp
pop
in
ds
addl
outsl
pop
jg
insl
movsb
adc
push
fcompl
popf
arpl
add
mov
loopne
dec
sbb
in
sub
cmpsb
mov
enter
scas
stos
rolb
outsb
lahf
hlt
ret
or
cmp
lahf
sbb
stos
pop
add
xor
mov
div
mov
jmp
xchg
push
ffree
lock
imul
ja
in
scas
insb
jg
fldcw
mov
jnp
dec
adc
cmp
mov
cmpsl
add
jmp
cmp
add
and
popa
ficoms
call
xchg
test
add
xchg
dec
js
loope
sbb
and
or
mov
add
js
mov
or
dec
mov
popf
mov
jno
mov
ficompl
xor
aam
or
sti
add
fistpll
adc
sub
lock
mov
xor
mov
xchg
sbb
mov
push
sarb
mov
xor
add
inc
or
inc
or
jmp
jmp
dec
sbb
sbb
incl
inc
jp
pushf
das
ficoms
add
mov
add
mov
rcl
jbe
loop
mov
or
ror
dec
xor
xlat
adc
lret
outsl
mov
nop
add
or
sbb
fstpl
jge
int
int
mov
inc
inc
pop
or
in
movsb
test
sub
sbb
pop
jg
pop
sub
lea
or
cmp
imul
push
mov
jbe
xchg
xor
add
cmp
mov
sub
dec
mov
and
push
xchg
and
inc
or
shll
mov
lds
lcall
test
loope
xchg
xchg
xchg
pop
loop
lret
cmp
shll
add
xor
mov
div
mov
jmp
das
imul
packuswb
mov
or
add
mov
add
inc
sbb
fisttps
test
sbb
dec
inc
xor
cs
push
ljmp
or
dec
std
repz
or
cs
or
lret
mov
lods
dec
lahf
sahf
dec
xchg
push
mov
add
fcoml
or
add
shll
lret
cmp
push
xlat
xchg
mov
sub
xchg
jbe
ret
pop
mov
movsl
push
outsl
mov
test
push
push
bound
pop
jae
mov
fwait
sub
in
mov
pop
xchg
xorb
fwait
pop
and
in
push
inc
fwait
out
add
mov
pusha
lods
testb
and
cltd
ror
movsb
mov
movl
jmp
push
lret
fisubl
pop
popf
xor
or
in
or
add
out
cltd
push
leave
or
and
inc
adc
cmp
pop
in
adc
sbb
or
lahf
push
imul
mov
fs
lcall
sbb
lds
add
fwait
int3
xor
or
and
mov
xchg
inc
in
outsl
dec
xor
or
push
inc
xchg
fstps
cli
mov
loope
imul
push
scas
xchg
adc
pop
pop
jmp
push
push
aam
loopne
in
std
mov
and
cmp
jmp
sbb
mov
push
and
movl
movl
jmp
xor
and
aaa
out
cld
out
pushf
int
gs
sbb
or
add
pusha
call
mov
jle
xchg
fdecstp
pop
and
dec
ss
jae
xchg
pusha
jg
lahf
pop
cld
xchg
bound
test
mov
pop
aad
inc
pop
push
in
mov
sbb
jmp
mov
or
mov
addr16
push
pusha
pop
cld
xor
ficomps
push
sbb
push
jns
push
jb
shlb
jo
mov
pop
je
push
adc
sahf
ss
sub
inc
repnz
lds
adc
push
mov
lods
dec
pop
hlt
cmc
mov
xor
inc
xchg
mov
mov
ljmp
lock
sbb
leave
mov
mov
and
mov
imul
mov
xor
jmp
cmp
jmp
mov
add
sub
add
add
mov
adc
mov
in
adc
lahf
mov
mov
sbb
in
xchg
sub
mov
cmp
xchg
ss
inc
jne
idivl
out
lods
add
loop
push
out
lods
pushf
jnp
stc
xor
adc
lcall
jge
ds
cmp
xchg
scas
push
cmpsb
jmp
sarb
int3
ret
stos
add
rcrb
mov
cltd
and
push
inc
clc
cmp
or
hlt
ds
and
push
sub
dec
cmp
mov
add
adc
shlb
xorl
sbb
dec
mov
dec
in
hlt
jmp
adc
sbb
pusha
test
movl
jmp
clc
push
add
pop
jmp
or
in
add
mov
add
or
sarl
ss
adc
push
jns
xor
sarl
push
push
push
lea
pop
nop
lret
int
fcmovne
pop
cmp
mov
in
xchg
mov
in
or
xchg
into
jge
pushf
and
sbb
loope
sub
aas
dec
cwtl
push
loope
pop
int3
iret
leave
cmp
mov
mov
sub
aam
push
mov
ret
shll
inc
mov
cmpsl
jge
push
hlt
outsl
dec
out
push
cmpsb
mov
mov
mov
call
jne
sub
xchg
in
add
and
push
pop
or
push
sbb
push
movl
movl
jmp
push
mov
repz
push
adc
xchg
fwait
or
add
push
pop
push
lret
cli
lods
jp
les
out
lods
mov
cmpsb
and
jl
scas
cs
add
mov
sub
out
sub
jae
popf
xor
les
fnsave
push
add
aas
pop
mov
push
rorl
gs
test
inc
orb
sbb
loope
das
and
lret
push
in
xchg
add
cmp
aad
cmp
popf
repz
and
fs
popa
mov
fldl
and
xchg
sbb
xchg
sahf
rol
inc
mov
lcall
mov
add
and
mov
and
jmp
cmp
aas
cld
imul
push
push
add
mov
add
aas
mov
pop
mov
push
jmp
faddl
cmc
mov
int3
add
outsl
ds
jmp
jnp
add
test
mov
loope
rclb
dec
pushf
stos
mov
push
sti
jno
dec
int3
add
jo
inc
xor
loopne
mov
xor
cmc
fcmove
nop
add
fmuls
cmc
mov
imull
iret
out
cli
pop
push
and
stc
test
sahf
sub
add
pushf
push
divb
mov
call
lahf
jae
sbb
leave
pop
incb
push
loope
cmc
movsb
push
dec
aaa
push
sub
lcall
cmc
cmp
cmp
xor
mov
div
pop
leave
ret
push
mov
sub
jmp
arpl
sub
sub
nop
movups
add
mov
add
aaa
addr16
mov
dec
or
outsl
lcall
outsb
mov
es
lret
mov
pusha
subb
ror
sbb
mov
jg
jmp
enter
cs
movsl
sarb
sub
push
or
xchg
sbb
lds
mov
icebp
call
mov
mov
gs
adc
and
pop
jns
mov
insb
data16
jmp
xchg
mov
xor
out
mov
pusha
mov
sarl
cld
jns
mov
fwait
in
loop
repz
in
mov
gs
bound
dec
sub
icebp
push
jmp
js
jl
cld
std
std
fxch
xchg
xchg
out
mov
add
shlb
loope
loop
aaa
pusha
inc
test
mov
ja
cld
test
hlt
cmp
orb
adc
jbe
lods
decl
sbb
fisubl
cmp
adc
pop
lret
push
mov
xor
mov
test
jae
adc
xor
fildl
mov
mulb
fs
sub
add
in
in
out
add
jae
mov
das
dec
pop
mov
or
dec
push
cmpb
sarb
imul
rcr
mov
test
movl
movl
movl
movl
movl
jmp
jae
jmp
stos
aam
inc
je
mov
xor
add
mov
add
xchg
mov
add
fnsave
push
add
call
ret
scas
add
mov
pop
repnz
cmp
sub
ja
dec
sbb
push
pop
cli
adc
jne
push
idivb
dec
xchg
add
enter
out
sahf
lret
mov
push
in
int3
inc
xor
cmc
cmp
icebp
jecxz
insl
sub
aaa
std
mov
rcrb
cs
sub
mov
loope
les
movsb
mov
mov
aaa
jp
add
lcall
and
es
push
sbb
out
out
dec
push
ja
jle
cmp
repz
inc
cmp
in
pop
jmp
inc
mov
dec
add
jmp
addb
fldt
mov
add
cmp
adc
mov
push
adc
mov
xchg
ja
cmp
rorb
inc
add
clc
hlt
add
les
fistl
test
jg
sti
mov
adc
jne
push
or
das
push
jae
es
mov
jb
inc
mov
pop
push
pushf
mov
pop
mov
jmp
cmp
pop
xor
inc
add
out
popf
lret
icebp
inc
pop
or
xor
and
push
ret
cmp
sti
stos
jae
adc
fnstenv
mov
out
and
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
clc
repz
stc
pop
sti
clc
repz
xchg
lock
fiaddl
rcll
add
mov
add
push
jbe
inc
cltd
retw
test
inc
sbb
fsubrl
outsl
test
arpl
adc
mov
loopne
inc
fdivrp
cmpsb
jnp
andb
nop
and
push
or
jnp
outsb
sti
jo
dec
test
xchg
cwtl
outsl
jg
insl
fldl
xor
lret
inc
in
jno
push
pusha
popf
pushf
xchg
pop
fstl
inc
jne
jno
sub
pop
push
jbe
fcompl
or
das
in
fstps
inc
xor
cld
imull
dec
ret
popf
leave
scas
nop
jb
pop
push
data16
out
xchg
jl
int3
add
ret
fiaddl
ss
mov
sbb
inc
fsubs
add
movl
movl
jmp
cmp
mov
inc
xor
adc
dec
imul
pop
test
ss
mov
sarl
mov
cmpb
scas
jbe
mov
dec
adc
push
mov
test
cmp
adc
push
gs
cmp
bound
mov
mov
push
mov
daa
cmp
stc
les
jge
stc
push
scas
jae
inc
ficompl
cli
iret
mov
mov
rorl
mov
dec
fistps
mov
push
in
dec
mov
mov
rcll
mov
inc
jbe
xchg
pusha
jle
lea
int3
mov
push
pop
loop
pop
sub
lock
jge
jle
pop
movl
movl
jmp
roll
jne
fnstenv
fcoms
xor
add
add
movsl
notl
in
fidivrs
xor
hlt
lds
arpl
xchg
mov
push
inc
pop
xor
inc
jle
iret
push
cmpsl
fistpll
dec
cmpsb
shlb
mov
inc
lods
loop
cmp
cwtl
xor
out
in
mov
test
popa
mov
add
mov
jp
mov
pop
xor
push
test
nop
loopne
jecxz
mov
lds
push
cmpsl
mov
call
cmp
mov
stc
iret
cmp
cmp
add
scas
imul
cli
movl
jmp
sahf
pop
or
iret
idiv
jnp
lea
in
adc
add
imul
jbe
push
push
aam
sbb
add
xlat
test
insb
ja
dec
dec
mov
iret
movsl
sbb
add
fdivr
rorb
arpl
inc
call
or
insl
xchg
push
or
add
inc
cmc
out
int3
pop
dec
pop
arpl
xor
pusha
jo
mov
int
mov
out
pop
fnstsw
push
cli
mov
push
sbbl
xlat
out
in
mov
and
sbb
dec
mov
dec
sbb
cld
das
fcmovne
push
fdivl
aad
ret
jne
inc
je
int
movl
movl
jmp
cmp
into
data16
mov
sbb
adc
add
adc
add
cmp
mov
xchg
loope
add
aas
mov
ja
mov
loop
mov
daa
xlat
sub
popf
ret
mov
add
dec
jae
xchg
xchg
das
pop
aas
push
jmp
xor
ficoml
push
aaa
stc
push
or
adc
jmp
dec
jnp
jae
mov
inc
es
mov
xchg
mov
psrlq
jecxz
mov
scas
jg
daa
or
xor
call
xchg
mov
enter
pop
jp
loop
mov
jecxz
aaa
imul
inc
int3
pop
adc
add
inc
sarb
add
movl
mov
mov
mov
mov
add
adc
jmp
mov
outsl
mov
faddp
dec
dec
mov
mov
add
xor
popa
movsl
aas
add
dec
and
adc
jmp
mov
mov
movsb
inc
sub
inc
test
ljmp
call
fwait
loope
mov
cmp
int3
mov
divb
gs
stos
rcrl
out
sbb
addb
cmp
xchg
lock
roll
jge
inc
push
add
imul
testl
pop
adc
cmc
xchg
cmp
rol
mov
mov
loopne
insl
inc
dec
repnz
xor
push
es
inc
cs
xchg
xor
push
push
bswap
add
pop
jb
push
loop
movsb
and
jmp
aas
dec
out
movsb
jmp
cmpb
adc
add
adc
pop
and
dec
fldpi
and
imul
ss
push
xchg
cmpsl
mov
push
jmp
adc
and
ljmp
or
xchg
out
jp
fwait
xor
and
dec
out
lea
popl
int
xchg
or
jmp
mov
in
cltd
js
dec
cltd
inc
jnp
inc
xlat
or
sti
push
imul
and
cmp
sbb
sbb
pop
ret
lret
out
lods
dec
rolb
dec
leave
daa
add
lret
data16
daa
push
dec
jne
mov
test
cmpsl
adc
pusha
mov
pop
and
repnz
jmp
push
data16
ja
adc
clc
mov
mov
add
cmpsb
addr16
fildl
sub
fstpl
imul
pop
icebp
dec
jmp
adc
sarl
mov
sbb
out
out
fdivrs
add
add
imul
lods
xor
fucomip
out
iret
and
and
sbb
in
aam
inc
pushf
fdivrs
or
dec
and
fwait
pop
pusha
outsb
add
ja
sub
mov
jb
adc
ja
cmpsl
dec
mov
xor
sbb
loopne
and
push
psllw
lret
sub
cmp
mov
inc
arpl
aad
scas
sti
out
cs
rcr
xchg
js
sub
mov
mov
mov
sbb
add
cltd
jmp
shlb
inc
cmp
leave
ljmp
mov
add
xor
jae
scas
push
pop
xor
add
mov
pop
cmp
mov
imulb
sub
aas
int3
hlt
push
outsb
out
sub
and
pop
xchg
sahf
pop
cltd
sbb
lds
push
movsb
je
jle
aaa
mov
jecxz
mov
inc
xlat
adc
ds
idivb
data16
stos
outsb
jle
pop
stos
fcoms
pop
movsb
in
shll
aam
inc
fidivs
fsubrl
bound
xor
scas
testl
sbb
fdivp
pop
pushf
xor
lds
testb
rolb
sub
in
push
xchg
je
popf
inc
aaa
imul
cmp
jne
cmp
jmp
cmpb
call
scas
jge
cmp
xchg
ds
cmp
adc
add
mov
add
mov
out
cwtl
ret
sub
stos
lock
test
xor
cmc
fwait
or
or
ret
js
scas
lods
xchg
cmp
je
pop
jnp
out
mov
inc
push
fiaddl
xorb
inc
jb
cmpsl
mov
mov
icebp
xchg
pop
pushf
mov
push
adc
gs
loop
ljmp
rorb
inc
inc
mov
das
pop
arpl
jo
push
pop
mov
into
popf
pop
mov
data16
scas
icebp
add
mov
fldt
shrb
ss
repnz
out
push
add
jno
pusha
push
stos
lods
mov
je
mov
mov
mov
mov
add
push
adc
jmp
loop
pop
dec
jle
repz
idivb
int
cltd
addr16
sbb
add
pop
das
sbb
cli
xor
lods
negb
fwait
dec
xchg
or
cld
xchg
mov
jecxz
mov
push
add
or
xchg
popa
fucom
out
inc
jg
ret
xchg
scas
inc
jb
jl
adc
in
repz
lret
mov
cmp
enter
add
mov
xor
call
xor
pop
mov
mov
xor
mov
pop
mov
mov
push
inc
pop
inc
ret
test
or
jp
jno
mov
xchg
div
xor
mov
pop
fnstsw
ret
lcall
rorl
fcompl
test
imul
inc
add
add
into
jmp
lahf
jecxz
or
int3
mov
imul
sbb
add
pop
mov
out
sub
gs
inc
out
xor
xchg
cmp
fcomps
repnz
bound
fwait
dec
push
and
lret
out
push
lcall
and
lods
shr
in
movsl
movsl
gs
loope
mov
xlat
rcrb
mov
lock
clc
leave
loope
movsl
inc
jle
ss
mov
add
xchg
pop
xlat
push
dec
fnstcw
dec
fwait
adc
mov
lahf
in
push
adc
cs
gs
imul
xor
ja
test
hlt
mov
popf
mov
jae
push
sarb
jp
faddl
dec
mov
out
and
push
push
call
mov
mov
mov
jmp
movsb
lret
pop
hlt
ljmp
push
lahf
sub
add
mov
add
lods
fsubl
popa
cmp
pop
push
test
popa
dec
jnp
add
adc
cmp
jl
xor
popa
xlat
arpl
sub
repnz
shlb
repnz
pop
repnz
fxch
jg
xorb
or
les
xor
fs
ss
arpl
push
push
mov
imul
loope
xchg
or
in
dec
pop
sahf
xlat
mov
jb
and
popf
rcl
and
jle
je
jb
jo
popa
xchg
cli
daa
sbb
addb
stos
dec
lods
cmp
inc
dec
outsl
push
cmovns
add
add
idivb
enter
or
jne
mov
or
add
xor
push
pop
div
jmp
test
and
inc
lcall
mov
add
loopne
and
sub
clc
jg
cmc
fisubs
jno
insb
shl
shl
mov
pop
repnz
xchg
das
mov
inc
fdiv
jne
sbb
jl
adc
jne
pop
ja
jns
xlat
fldenv
int
or
iret
movsl
lcall
in
jl
aam
push
xchg
lret
sbb
mov
push
data16
in
mov
dec
stc
mov
test
sbb
mov
inc
jae
int
fisubl
push
adcl
fiadds
lcall
and
repz
orl
jo
fistpll
mov
xor
sub
mov
or
mov
sub
mov
add
xor
mov
jmp
imul
repz
lcall
push
je
mov
mov
add
push
push
dec
jg
sbb
push
inc
adc
fstps
scas
fldcw
xor
push
xchg
pop
insb
popa
xchg
pop
cmp
dec
or
push
mov
imul
lcall
mov
inc
inc
mul
repnz
clc
notl
stc
mov
nop
jle
cmpsb
mov
adc
enter
dec
ss
out
in
xor
xlat
or
jge
xor
add
cmp
inc
jb
test
decb
rorb
loopne
scas
push
inc
mov
in
fcomps
inc
js
outsb
add
ret
mov
in
xor
dec
leave
cld
orb
add
jmp
cmp
in
out
jg
fucomip
adc
mov
mov
add
jle
cmp
sti
aas
jmp
or
and
cmpsl
or
lea
adc
dec
push
xchg
mov
mov
inc
push
lcall
negb
and
shrb
xchg
mov
lahf
mov
hlt
popa
mov
iret
lahf
mov
or
pushf
jb
xor
mov
test
sbb
xchg
sbb
mov
roll
aam
mov
or
loope
loop
pop
lock
ljmp
mov
mov
jno
dec
mov
rcll
push
mov
imul
sbb
mov
push
jns
add
rorl
add
fldl
movsl
sti
lods
fistpll
mov
or
add
fsubrs
push
mov
hlt
cld
sbb
cmp
jl
test
cmpsb
divl
push
pop
or
rcll
popf
mov
cltd
jg
mov
adc
or
test
sub
sbb
adc
mov
test
dec
lea
push
push
dec
shrl
dec
lods
shll
ficompl
daa
shrb
mov
das
ffreep
jl
test
push
lret
popf
jb
les
aas
jne
push
jns
inc
outsb
call
mov
dec
popa
movsl
sahf
fwait
insl
fdivrl
add
lods
in
data16
imul
push
mov
adc
pusha
insl
xor
div
mov
jmp
jb
fsubp
jnp
sub
mov
mov
add
add
mov
push
adc
jne
dec
ss
pop
pusha
aam
gs
test
repz
mov
push
mov
dec
stos
adc
jae
sub
cltd
push
add
mov
lock
inc
test
jl
push
fwait
push
inc
mov
mov
inc
add
pop
fstpl
lcall
jp
rcll
adc
movsl
es
aad
pop
test
sub
sub
pop
jb
pop
cmpsl
sar
iret
insl
push
or
mov
mov
cld
in
faddl
scas
into
push
push
jecxz
ljmp
push
or
lret
add
or
test
ret
dec
cld
push
movsb
adc
add
mov
add
aaa
sti
push
mov
mov
addb
pop
das
les
pop
jnp
repnz
jecxz
enter
mov
mov
movsl
push
xchg
xchg
inc
adc
or
and
enter
mov
lock
inc
sbb
fdiv
test
mov
mov
lock
pop
jnp
pop
pop
mov
mov
shr
lods
jl
outsl
idivl
or
jecxz
cmpsb
aaa
add
sti
in
inc
sahf
rclb
cmpsl
inc
mulb
dec
ljmp
mov
lods
and
ret
and
mov
inc
fnstcw
add
gs
xor
and
jmp
pusha
test
test
cmc
je
add
int
decb
pop
pop
add
mov
add
mov
daa
jg
aam
leave
cmp
jp
xor
cmp
arpl
jmp
jns
movsl
push
jge
and
adc
jnp
insb
mov
pusha
pusha
push
icebp
xor
scas
xchg
jo
lret
xor
gs
ja
aam
xor
mov
neg
pop
or
std
or
push
stos
xchg
xchg
sahf
ljmp
fcompl
cs
dec
sub
pushf
and
push
push
test
inc
and
cs
jle
scas
sub
outsb
fucom
out
paddusw
push
inc
mov
fidivs
xchg
xor
add
xchg
sub
je
imul
rcrl
add
jmp
add
inc
push
sbb
pop
inc
and
push
xlat
xchg
mov
add
add
adcl
jecxz
jno
mov
arpl
fsin
push
pop
out
insb
pop
je
mov
push
push
mov
xor
adc
mov
fmull
and
insl
adc
popa
in
sahf
mov
iret
adc
add
popa
imul
mov
push
jns
jbe
lret
call
pop
jbe
dec
enter
sar
inc
imul
in
cmp
fwait
push
aas
or
es
mov
jb
mov
out
mov
xchg
and
icebp
cmp
hlt
fcompl
cld
inc
insb
dec
jl
sbb
mov
xchg
dec
mov
out
inc
xchg
pusha
cwtl
mov
or
jmp
mov
pop
sbb
iret
and
jo
movsl
add
mov
add
lcall
pop
arpl
add
jle
negb
mov
sub
add
hlt
adc
out
test
fdivp
inc
orl
outsb
jecxz
pop
stos
loopne
bound
jno
pop
jge
call
jmp
cmp
testl
les
ss
pop
repz
and
and
shll
outsb
out
push
iret
rclb
dec
xlat
sbb
aad
add
or
adc
aaa
stos
addr16
out
or
and
xor
arpl
cwtl
shr
dec
sahf
imul
out
mov
push
lret
ret
shll
dec
jmp
sub
mov
mov
das
fcmovnb
mov
out
sbb
add
add
popf
add
jl
pop
jnp
xor
js
or
sti
cmpsl
pusha
sbb
movsl
mov
xchg
jecxz
js
cmp
push
repz
sub
and
push
nop
aad
rol
and
cwtl
sbbb
sti
sbb
inc
mov
les
iret
test
sub
mov
cmpsb
adc
pop
ljmp
jns
mov
mov
fcomp
fisubl
cmp
mov
inc
arpl
push
inc
dec
lcall
xchg
mov
scas
in
repnz
out
int
je
cld
stos
dec
insb
sbb
call
icebp
sub
enter
dec
loopne
add
lret
add
pop
test
mov
daa
dec
fisubrs
iret
and
add
decb
inc
add
das
or
jmp
test
leave
stc
test
int3
out
lcall
push
les
imul
inc
pop
ljmp
or
bound
xchg
push
lods
out
ja
add
lret
jmp
popf
xchg
inc
push
shrb
mov
fdivrs
subl
or
and
je
cmpsb
inc
jge
cmp
repz
les
addr16
ljmp
stos
inc
lret
mov
sbb
jle
mov
fstpl
mov
sub
lret
inc
mull
add
inc
push
fcmovne
xor
cwtl
or
jne
mov
sub
aas
out
add
jl
lods
or
add
mov
sub
mov
lea
jmp
mov
mov
aam
fsubl
mov
add
js
mov
fcoml
into
aaa
or
jo
or
jp
outsl
not
ret
stos
xchg
das
mov
add
push
rcr
sahf
sbb
mov
mov
icebp
push
jecxz
bound
push
xchg
xchg
frstor
jno
into
and
fidivs
out
popf
jmp
inc
stc
mov
stc
inc
lods
push
sbb
cmpsb
xorl
xor
jle
pop
outsb
jb
inc
inc
push
in
jge
lock
mov
into
inc
sub
xchg
ficomps
pop
imul
push
sub
xlat
sbb
cwtl
inc
jno
and
cmp
inc
add
or
pushf
mov
mov
jmp
cmp
imul
pop
js
pop
pop
cmp
add
mov
inc
mov
xchg
repnz
cmp
roll
testl
repz
sbb
mov
mov
mov
js
shl
neg
mov
lea
das
pop
cltd
push
outsl
mov
pop
push
jle
jge
pop
jp
dec
jns
pop
xor
in
aad
mov
push
jne
jmp
insb
cld
incl
fwait
repnz
pop
xor
or
push
orl
cmc
jnp
mov
bound
and
sbb
in
inc
out
gs
call
jg
test
cld
pop
ja
sarb
mov
icebp
adc
sub
mov
sbb
mov
or
mov
jmp
xlat
ja
xchg
push
lcall
and
add
daa
jo
dec
in
js
or
xor
sbb
daa
inc
cmp
jnp
jae
repz
shrl
push
shlb
push
sbb
mov
push
xor
stos
lea
xlat
inc
je
mov
jg
mov
scas
popf
mov
xchg
mov
or
mov
xchg
push
push
fsubrs
leave
mov
data16
sahf
scas
inc
push
xlat
mov
dec
fincstp
pop
or
xlat
push
and
aam
arpl
xchg
mov
cwtl
je
lret
je
sti
cmp
movsl
test
cmp
fildl
pop
xor
sarl
ret
rcr
and
fimuls
into
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
sub
xor
div
mov
or
imul
xor
add
mov
jmp
sar
test
jg
cld
xchg
out
mov
jp
and
add
jne
mov
sbb
imul
popa
and
icebp
cmp
lret
add
jae
mov
xor
inc
fwait
nop
and
insb
cs
sti
shlb
mov
pop
cmc
lret
jns
ret
lahf
pop
cmpsl
mov
ds
mov
mov
sub
pop
dec
fs
mov
aas
adc
cli
sub
pop
in
aas
shl
sbb
mov
push
mov
mov
aam
imul
ja
mov
mov
jle
jnp
test
dec
out
iret
out
gs
mov
loope
mov
adc
hlt
cmp
gs
daa
jge
mov
js
sahf
add
ret
push
mov
sub
push
push
push
movl
jmp
inc
jae
push
cmc
xlat
divb
je
in
sub
lahf
dec
and
add
adc
add
xchg
inc
jl
push
jbe
dec
push
cmp
aaa
lret
rolb
bound
hlt
fwait
and
jge
enter
sbb
fisttps
push
and
mov
cltd
mov
mov
push
sub
nop
testb
mov
subl
dec
lcall
lods
dec
movsl
xchg
adc
fs
dec
inc
mov
out
or
jno
xchg
add
pop
push
jne
shlb
mov
mov
mov
inc
jbe
push
push
pop
lret
fwait
lds
cmp
xor
jo
fwait
mov
pushf
bound
add
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
push
jbe
int
in
ret
dec
dec
mov
stc
and
add
jns
mov
lcall
ret
mov
aaa
and
out
adcb
jle
shrl
xchg
scas
lcall
inc
in
movsl
dec
leave
mov
fistpl
nop
test
adcb
xor
jo
dec
loop
adc
dec
pop
leave
push
std
scas
xchg
or
popa
adc
pusha
cld
and
sar
add
rcrb
inc
xor
hlt
ret
fistl
sbb
testb
loope
enter
mov
iret
add
mov
pop
mov
jmp
ss
outsl
pop
enter
aas
jle
mov
movl
jmp
loop
cmpsl
lret
out
stc
mov
nop
pop
add
mov
add
push
mov
inc
imul
iret
imul
push
testb
movsl
adc
add
cmp
jp
mov
iret
mov
icebp
xchg
or
add
icebp
test
inc
out
popf
cmp
push
mov
pop
outsb
sub
mov
cltd
lret
imul
and
int
out
push
mov
out
mov
push
dec
mov
inc
xor
jo
bound
jecxz
lods
mov
fyl2x
insl
std
lea
cs
xor
adc
pop
mov
sbb
mov
movl
movl
movl
movl
movl
jmp
adc
xlat
mov
aad
in
daa
add
mov
add
pop
sbb
fs
mov
push
mov
fs
jmp
or
push
mov
movsb
cmp
test
es
jno
jne
fwait
mov
mov
dec
test
xlat
out
or
sub
jp
gs
lods
lock
xchg
push
mov
and
js
nop
jle
imul
sbb
in
les
inc
fnsave
and
add
cmp
shlb
sub
inc
mov
out
leave
hlt
adc
rol
hlt
scas
mov
push
sub
push
mov
mov
push
setp
adc
inc
je
inc
in
insb
dec
add
jmp
sbb
mov
andl
add
add
out
mov
repnz
xorl
daa
stos
jbe
sahf
inc
mov
mov
out
sbb
iret
or
sti
icebp
inc
lcall
test
push
stos
lds
mov
sub
xchg
pop
or
add
dec
sbb
or
push
js
gs
push
mov
pop
je
bound
sbb
inc
adc
iret
xchg
cld
jae
stc
mov
mov
xor
dec
gs
cwtl
jae
dec
xchg
push
leave
sub
insl
mov
mov
sbb
adc
ret
mov
mov
inc
lock
add
jmp
and
fildll
pushl
dec
shlb
add
les
xchg
les
push
dec
lahf
mov
lods
mov
into
icebp
incb
add
aam
xchg
scas
pop
movsl
xor
xchg
inc
cli
ds
call
mov
jmp
add
jb
pushf
dec
push
movsl
and
push
xlat
pop
push
das
adc
adc
jns
gs
sbb
pop
les
mov
data16
inc
xor
pop
xchg
stos
hlt
jl
dec
cmp
xchg
and
mov
call
xchg
inc
xchg
xchg
lcall
sub
lret
fisttpll
loopne
sbb
xorb
outsb
in
scas
imul
sub
inc
hlt
sub
add
enter
inc
ds
fstpt
int3
mov
cmp
int
sub
add
cmp
movsb
dec
sub
subb
pushf
and
adc
sti
xchg
shlb
fwait
les
loope
sbb
mov
xor
push
fdivp
jbe
inc
lods
xchg
or
push
xor
imul
cmp
mov
add
jo
data16
in
sub
push
sbb
ljmp
cmpb
fwait
repz
push
bound
mov
stc
xor
dec
xchg
dec
adc
int
cmp
sbb
mov
mov
pop
ficoms
enter
clc
je
add
push
jmp
enter
imul
sti
pop
add
mov
add
in
sarl
dec
addr16
or
mov
add
mov
lds
and
push
xor
cmp
push
or
out
icebp
and
test
incb
shlb
lea
pusha
enter
jno
gs
lcall
jecxz
jmp
inc
xor
movsl
or
das
mov
sbb
push
pop
push
testb
jnp
in
mov
shlb
ret
mov
mov
pop
and
pop
lcall
hlt
xor
lods
cld
popa
push
in
leave
out
mov
shlb
adc
mov
inc
cld
jle
add
jmp
xor
xchg
outsl
lahf
jg
sti
or
loope
addr16
sub
add
int3
xchg
fdivrs
jecxz
dec
stos
and
add
xchg
xchg
or
mov
addr16
and
pop
jle
imul
in
ss
cli
xchg
sub
loopne
icebp
mov
repnz
daa
pop
ret
popf
pop
sbb
lea
push
jb
pop
pusha
fisttpl
lea
mov
and
in
sub
sub
fdivr
push
sub
leave
dec
push
pop
data16
fwait
mov
jnp
out
aam
adc
sbb
pop
xlat
jo
or
inc
mov
test
xchg
rorb
out
aaa
mov
mov
mov
push
push
push
jmp
fsubl
std
mov
cmpsl
pop
ret
shll
jns
add
mov
add
or
inc
inc
and
push
mov
nop
negl
rclb
mov
addr16
mov
je
lahf
or
sbbb
pop
xlat
test
dec
pop
out
outsb
and
push
in
cltd
jo
jmp
cmpsl
dec
inc
mov
aad
stos
xchg
inc
imul
dec
mov
dec
int3
xchg
les
icebp
lahf
and
lds
rolb
or
or
sbb
mov
enter
xchg
inc
rclb
mov
jle
jp
and
imul
in
sbb
push
mov
sub
xor
push
add
add
hlt
sub
mov
sbb
jmp
insb
mov
rcr
stc
jl
add
jl
sub
add
stos
cmp
fldt
mov
sbb
js
mov
inc
mov
enter
pushf
ret
add
mov
out
ds
mov
mov
cld
ret
dec
test
xchg
fsubrl
repnz
xor
inc
arpl
popw
in
shll
mov
fstpl
clc
mov
mov
repnz
je
test
cmp
jmp
test
test
mov
jle
jg
jmp
xor
mov
pop
xchg
and
pop
test
mov
mov
sub
test
std
cmpl
mov
jmp
fidivs
xchg
lods
repz
sub
int
sub
add
arpl
pop
popa
inc
andb
pop
cmp
hlt
add
iret
lcall
fld
cmp
or
addb
inc
insb
cwtl
das
add
loope
test
push
insb
push
int3
cmp
pop
cmp
out
mov
xchg
or
or
jo
or
outsl
pop
std
cmp
jle
jae
and
xchg
stc
push
pop
adc
cmp
call
dec
push
xchg
jns
fnsave
mov
push
pop
xchg
aam
push
pop
and
dec
dec
movl
pop
pop
mov
aad
jecxz
mov
jns
mov
add
jmp
or
ljmp
mov
fimuls
add
add
ljmp
nop
cmp
popf
out
xchg
scas
inc
mov
pushf
mov
jp
pop
xchg
aam
dec
adc
in
or
cltd
push
push
sbb
fisttpll
mov
mov
movsb
call
and
jae
cs
cmp
mov
jnp
mov
imul
push
jp
and
sub
mov
dec
or
jae
cmp
fucomp
jbe
das
inc
dec
xchg
lock
in
stos
push
cmp
sbb
idivl
test
int3
mov
sub
insb
std
pop
jmp
jbe
xchg
popa
int
sbb
lea
popf
xor
pop
adc
aam
arpl
roll
jmp
rol
jmp
jmp
ljmp
aaa
les
add
mov
add
mov
pop
jno
mov
inc
cmp
ljmp
xchg
push
repz
adc
jb
mov
jo
es
test
rclb
xchg
gs
inc
pop
mov
js
hlt
loopne
or
in
imul
shlb
mov
pop
jg
pushw
mov
mov
cwtl
jns
clc
fistpll
jl
aad
mov
adc
es
xor
dec
sar
dec
dec
fs
rorl
jbe
push
in
repz
mov
mov
aam
aad
and
fcmovnbe
jo
addr16
outsb
popf
loopne
xchg
dec
movhps
mov
addl
jne
jg
add
adc
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
mov
add
jmp
in
and
in
jg
fwait
sub
jmp
add
add
add
in
hlt
je
orb
imul
sarb
scas
xchg
sarl
sar
idivb
cmpsl
movsl
fdivrs
sub
cld
je
push
mov
leave
sti
out
mov
xchg
lcall
or
popf
xchg
repz
cwtl
icebp
aaa
push
mov
mov
jno
cmp
xor
test
xor
in
outsl
dec
pop
pushf
test
cmp
fadd
jg
aaa
xchg
xorl
mov
es
lcall
lea
shrb
gs
dec
adc
inc
loop
cs
sub
add
jmp
and
push
jg
imul
int
lahf
cltd
das
add
mov
add
es
enter
cmp
ret
inc
outsb
xorl
ljmp
enter
cltd
arpl
adc
cmp
push
inc
fcoms
ret
mov
cld
dec
jge
lea
push
into
push
pop
dec
fdivrp
negl
ret
xchg
mov
into
cmp
incl
pop
pop
xor
mov
pop
xchg
fst
ljmp
cmp
lods
into
adc
imul
xlat
cmp
subb
pop
jl
and
pusha
in
inc
inc
xchg
mov
ja
popf
mov
push
pop
xchg
xchg
in
std
xor
and
jmp
sbb
mov
loope
or
mov
add
test
sarl
mov
inc
adc
in
sub
inc
sub
adc
shll
adc
mov
sti
jg
dec
sub
aaa
mov
adc
jo
sub
cmpsb
dec
mov
cltd
shrl
mov
or
mov
stos
shlb
or
push
lods
and
jns
adc
dec
and
ss
mov
pop
js
lock
or
jge
outsl
add
fcmove
pop
push
xchg
mov
sbb
xchg
roll
lcall
lods
jno
and
nop
in
out
and
sub
push
jmp
jle
and
data16
mov
stc
xor
add
cmpsb
mov
jo
xchg
or
out
lcall
pop
hlt
push
lret
call
inc
xchg
out
popa
out
shl
lahf
mov
jecxz
push
loop
int
mov
push
mov
jmp
pop
pop
std
xchg
push
dec
imul
rcrl
dec
pop
jo
out
sbb
and
adc
push
mov
mov
cli
popa
or
pop
shr
and
jae
aad
je
fnstenv
gs
and
mov
pusha
xchg
pop
dec
mov
mov
mov
inc
popf
rcrb
imul
in
subb
call
shr
sar
call
jmp
std
pop
and
popf
adc
pop
test
mov
mov
add
setae
sbb
pop
test
imul
mov
movl
mov
mov
mov
scas
or
lahf
pop
push
pop
ficompl
outsb
cwtl
lock
pop
mov
or
negl
ficoml
dec
push
jmp
xor
lods
pop
jle
cmc
sub
pop
pop
xchg
scas
mov
movsl
and
test
cmp
dec
adc
iret
aaa
bound
cmp
scas
lcall
aam
ffree
test
xor
es
iret
inc
inc
loope
jno
mov
pop
or
mov
ret
pop
fwait
ss
push
jns
sbbb
nop
dec
pop
call
mov
mov
jmp
pop
fwait
xchg
mov
cwtl
push
add
repz
xor
add
jne
cmp
pop
adc
sbb
cmp
es
mov
out
xor
jp
sub
cmp
into
out
pop
outsb
test
push
test
out
aad
mov
fs
and
sub
imul
push
stc
in
jbe
xor
ljmp
dec
dec
cmp
ja
sbb
mov
ja
popf
imul
bound
fldenv
je
sbb
ret
pusha
jmp
cli
inc
mov
rcr
ret
mov
sbb
into
rol
test
mov
and
push
adc
mov
add
jmp
xchg
dec
lret
scas
repz
mulb
test
or
add
mov
add
xlat
xchg
stos
movsl
mov
xor
movsb
push
or
inc
add
sub
xor
or
out
mov
adc
arpl
or
rcr
or
pop
adc
pusha
sub
std
mov
xchg
xchg
outsl
std
ret
aad
or
les
pushf
push
movsb
jns
adc
dec
xlat
xor
push
daa
jcxz
sub
sub
out
mov
sbb
mov
and
lahf
test
mov
xchg
nopl
popa
or
arpl
inc
mov
add
cltd
mov
cmpsb
in
popf
add
adc
lcall
ljmp
lret
adc
mov
mov
mov
mov
mov
mov
jmp
sbb
lods
std
out
cmp
std
xchg
push
jp
ret
mov
add
add
in
cmp
jae
jmp
ss
pushf
pop
and
mul
dec
ret
lret
sub
sti
ret
jo
pop
or
cld
add
daa
xor
cmp
int3
or
sub
imull
adc
xchg
popa
sahf
xchg
fs
mov
jge
movsb
dec
scas
out
xchg
pusha
sar
out
lret
lcall
lea
add
leave
push
dec
jg
mov
add
ds
aaa
clc
adc
js
sub
and
xlat
push
imul
pushf
pop
pop
sub
mov
xor
cmp
push
add
jmp
xchg
dec
jns
stc
negl
mov
imul
add
pop
dec
push
jmp
js
mov
addr16
inc
or
add
addr16
sub
pop
mov
lahf
mov
inc
jecxz
inc
fstps
ret
icebp
push
push
mov
in
jno
outsl
and
dec
out
jno
test
xlat
jge
adc
stos
inc
push
lret
mov
mov
nop
pop
inc
dec
outsl
mov
lock
inc
mov
rclb
xor
jecxz
sahf
mov
dec
fwait
sbb
and
cmp
out
loop
test
xchg
std
cli
cltd
gs
push
add
adc
push
jno
cmp
cmpsl
divl
ret
mov
add
adc
das
scas
mov
insl
in
jo
pop
sbb
add
in
ds
lock
insl
push
push
sbb
lea
push
sub
sbb
das
cmc
cs
std
scas
sub
mov
push
mov
dec
loop
call
aas
cmp
sub
mov
dec
jmp
cmp
nop
xchg
js
repz
cmp
test
fdivr
insl
mov
std
mov
adc
stos
pop
xchg
cmpsb
mov
pop
popl
xchg
std
rcr
popa
mov
xchg
inc
pop
dec
call
fnstenv
lahf
cmp
push
vsubsd
xor
xor
loope
inc
add
xor
mov
jmp
cmp
arpl
pop
jmp
mov
movsb
mov
xor
add
flds
xor
mov
icebp
push
mov
mov
push
push
cmp
mov
push
cltd
jle
mov
xor
mov
xor
inc
push
xchg
xor
test
loope
and
stc
lahf
outsb
or
lods
xchg
pop
aad
mov
ss
pushl
loopne
adc
lret
clc
cwtl
and
jle
aam
cltd
cmp
mov
inc
jbe
sarl
pop
pop
mov
fildl
pop
sub
xchg
mul
jp
pop
orl
xchg
xor
mov
pop
arpl
addr16
dec
insb
jns
scas
mov
addr16
sbb
insb
ret
aaa
ret
les
sub
test
into
decl
ret
add
add
mull
in
mov
add
mov
add
shl
in
xor
test
push
dec
dec
iret
stc
fcompl
jne
aam
jns
mov
call
push
int3
outsb
or
loope
sbb
pop
popf
loopne
testl
xchg
clc
mov
jge
dec
addr16
inc
ja
ljmp
addb
cli
xchg
push
xor
xchg
sub
insb
mov
fstps
mov
push
xchg
xor
fildll
js
mov
cmpsb
xchg
mov
stos
add
mov
cmp
stos
fwait
mov
call
mov
mov
and
mov
sub
jmp
mov
mov
jo
xor
mov
mov
add
inc
mov
test
mov
ja
jp
dec
fwait
dec
test
in
xor
into
mov
mov
int3
inc
scas
and
mov
xchg
push
mov
sub
fwait
nop
or
and
repnz
sbb
adc
add
inc
jmp
movsb
sbb
cmp
sub
stos
push
mov
or
lcall
dec
cmp
add
adc
push
cld
mov
aam
cmp
fdivs
push
scas
pusha
and
xorb
xchg
xor
sub
mov
mov
aas
adcb
pop
int3
inc
push
lods
jns
sub
mov
jmp
clc
test
jg
inc
push
dec
jae
push
test
fnstenv
add
mov
add
xor
cld
sub
push
outsb
sbb
mov
mov
pusha
sub
int
sub
rcrl
cmovne
aad
enter
mov
cmp
mov
sub
pop
add
mov
adc
add
dec
idiv
cld
mov
fldenv
push
adc
sbb
repnz
pushf
push
das
and
js
mov
xchg
dec
dec
mov
insb
fistpll
loope
loope
mov
or
sarl
sub
mov
ffreep
mov
add
mov
dec
out
loop,pn
in
cld
pop
add
sbb
add
adc
jmp
ljmp
out
ljmp
outsb
mov
add
mov
add
and
movsl
inc
xor
cmpsl
out
mov
cmp
mov
ret
fdivs
mov
sub
insl
push
mov
pop
jns
push
fcmovu
enter
mov
cmp
pushf
push
imul
mov
mov
mov
dec
popa
and
sub
shlb
ret
xor
add
fsubrp
cltd
xor
lret
sub
jb
jbe
pop
ret
std
push
add
inc
jg
cmpsl
icebp
add
pop
push
push
mov
loopne
jae
repnz
inc
sub
dec
int
packuswb
fsubrp
enter
mov
sbb
pop
fcompl
mov
cmp
add
mov
add
adc
fcoml
jg
or
sub
pop
roll
dec
jge
shr
jo
cwtl
loopne
jno
lea
sti
push
lock
push
dec
rcr
lods
out
negl
jge
or
push
pop
xchg
mov
pop
fimuls
lcall
bound
repnz
or
in
lea
pop
aas
sub
xor
fnstcw
pop
or
dec
loope
pop
and
call
cmpsl
ret
leave
addr16
int
aas
dec
or
add
sub
daa
cld
push
inc
mov
jno
jge
leave
sbb
cli
push
xchg
sub
mov
cmp
add
mov
adc
mov
mov
mov
mov
mov
and
jmp
ss
mov
ficoms
cmp
add
loop
ds
arpl
stc
sub
xchg
cs
fs
pop
add
pop
int
aaa
mov
lret
pop
jmp
mov
adc
ret
cmpl
test
call
cmp
dec
ret
and
clc
sbb
push
js
pop
sub
test
int
imul
and
or
cmc
mov
ret
push
ljmp
lcall
dec
pop
jns
mov
das
cwtl
imul
enter
push
lret
divl
sbb
push
test
lds
push
dec
xchg
inc
xchg
adc
loopne,pn
mov
jge
xchg
mov
and
jmp
pop
insl
scas
fdivrp
fbstp
mov
xchg
sbb
cmp
add
mov
push
xor
fmul
andb
cmpsb
cs
mov
and
sub
or
iret
test
ja
je
xor
mov
mov
sbb
dec
decb
hlt
gs
dec
in
push
scas
in
add
pop
inc
lds
mov
jl
out
mov
cmp
in
dec
fisttpl
inc
add
sbb
shlb
push
xor
push
movb
dec
fnstcw
jle
fscale
es
xchg
fcomp
add
mov
cmc
sub
mov
adc
inc
push
push
push
mov
pop
dec
cs
lret
push
adc
jns
mov
push
push
push
push
call
mov
mov
mov
jmp
sub
mov
mov
aad
int
pop
jmp
dec
cmp
add
leave
stos
stos
inc
push
inc
loopne
fsubrl
lcall
mov
aad
mov
pop
lret
fstps
in
scas
jns
cmp
addr16
lret
in
out
xchg
insl
mov
icebp
mov
fisubs
cmp
jle
push
xor
js
insb
outsl
rclb
pushf
ds
movaps
in
shr
adc
pop
test
push
xchg
or
ret
mov
xlat
popa
vmwrite
aas
jnp
mov
iret
adc
lock
inc
sbb
or
inc
xor
adc
mov
std
je
cld
mov
inc
mov
add
add
enter
or
mov
jmp
lahf
sub
test
xor
dec
mov
cmp
add
xor
mov
cld
jp
adcb
jo
insb
mov
lock
sbb
jp
dec
fcomps
pop
mov
leave
out
push
out
orl
movsb
xchg
jo
adc
out
inc
pop
test
xor
sbb
add
mov
dec
aaa
fnstcw
mov
test
aad
test
lahf
or
sahf
leave
sbb
xchg
ret
jne
add
xor
dec
push
jl
and
pop
xor
xchg
das
call
call
jmp
pop
daa
adc
push
mov
leave
int
dec
insb
shl
cltd
sub
mov
add
add
enter
pop
jmp
adc
fstps
fcoml
jp
dec
lock
mov
add
push
lods
xor
add
push
pop
inc
cwtl
sbb
jl
fisubl
xor
pop
subl
and
mov
cwtl
loopne
cmc
mov
adc
jmp
sbb
ret
inc
ret
jne
jae
mov
int3
mov
mov
mov
mov
or
data16
ljmp
dec
int
ret
sbb
jp
insl
bound
cld
mov
imul
pusha
pop
ficomps
pop
dec
inc
mov
jge
ret
test
cmp
jne
sbb
mov
jecxz
in
add
jg
cwtl
mov
repnz
push
lcall
mov
mov
pop
leave
ret
push
mov
sub
push
jmp
call
mov
loope
mov
add
push
arpl
lret
add
call
sub
fistps
xor
dec
xor
es
cmp
bound
insl
cmp
test
push
jne
out
jnp
sbb
ja
lods
push
cmp
inc
test
sub
sbb
out
mov
jno
cmp
fwait
ret
andl
push
mov
leave
push
push
cmp
sbb
pop
fwait
pusha
jp
pop
push
mov
cmp
xor
jmp
jb
imul
lock
add
sarl
hlt
nop
leave
mov
pop
orl
into
pop
sub
inc
call
movl
jmp
inc
pop
cmp
mov
lret
lret
or
add
mov
add
mov
iret
ret
sbb
repnz
loopne
dec
mov
sti
fbstp
scas
enter
adc
int
mov
call
xchg
ljmp
or
pop
xor
and
dec
sub
loopne
in
mov
fs
fsub
or
adc
pop
mov
clc
dec
push
sub
or
or
adc
sub
pusha
sub
jb
sub
pusha
jmp
mov
mov
fimuls
mov
mov
and
adc
cmp
mov
insl
sbb
sub
lods
cmp
inc
lock
and
add
leave
add
add
gs
ja
jo
gs
pop
js
mov
add
add
xchg
pushf
xchg
outsb
jge
mov
mov
mov
mov
and
push
jo
ret
into
ret
icebp
je
inc
mov
sahf
xor
ljmp
cmp
xchg
dec
dec
xorl
mov
aas
mul
or
mov
jp
enter
dec
cs
loopne
add
adc
imul
or
sbb
xchg
test
pop
fisubs
imul
cld
mov
add
xchg
ss
aad
data16
adc
shlb
pop
push
mov
out
nop
push
lret
or
out
mov
arpl
inc
loopne
iret
or
jmp
aas
mov
stos
out
jg
inc
into
push
ret
insb
aas
add
mov
add
xchg
mov
pop
nop
xor
mov
pop
xor
jns
xor
xchg
pushf
incb
cli
test
ret
vprotd
sar
sub
cltd
add
adc
or
push
xchg
scas
mov
sbb
sti
push
fbld
int3
add
hlt
pop
sar
inc
scas
inc
sub
adc
mov
cmp
lods
inc
ret
std
lahf
rol
fdivrp
adc
push
and
mov
ret
repz
pop
outsl
int3
lahf
sbb
repz
adc
jnp
fadds
nop
lods
pop
das
andl
add
inc
hlt
cli
xor
add
inc
clc
xor
add
movl
jmp
inc
call
xlat
ljmp
push
xor
add
add
mov
loop
gs
add
rclb
adc
aam
xchg
cmp
pusha
jno
pop
mov
repz
fwait
ja
mov
enter
shll
push
lods
dec
cmpsl
shrb
loop
cli
xor
jmp
lods
xchg
sub
xor
push
mov
cmp
fbstp
cld
cli
and
cmp
popf
int
sbb
jbe
dec
pushl
ss
dec
movsb
adc
sbb
jecxz
dec
stos
outsl
mov
cltd
rorb
lds
cmpb
and
xor
pop
push
repz
inc
jl
and
cmp
push
add
movl
jmp
fs
jl
push
push
mov
into
inc
add
mov
add
mov
cli
push
adc
cwtl
xor
fxam
scas
jbe
ret
jae
adc
out
bound
sub
jo
imulb
adc
xor
pusha
sahf
add
ja
mov
inc
rcll
out
ret
adc
mov
aad
sbb
test
into
cmc
fs
popa
aad
jecxz
pop
gs
daa
sbb
mov
inc
imul
fildll
jp
into
out
jmp
jae
fldcw
ja
out
mov
test
fs
jne
inc
or
les
mov
cmp
icebp
movl
movl
mov
mov
imul
sub
mov
jmp
xor
jg
cmpsb
and
int
inc
add
mov
add
adcl
movsb
ja
shr
mov
xlat
mov
out
aas
lcall
movsl
fisubrl
lret
lret
in
pop
aam
push
ficompl
inc
dec
data16
js
or
ror
ret
repnz
out
dec
fdivrs
mov
or
xor
ljmp
test
mov
subb
loopne
dec
jge
adc
je
mov
adc
push
jns
lock
bound
lods
lea
sbb
cmp
icebp
push
add
mov
add
xor
mov
jg
fistps
icebp
cwtl
lahf
shlb
jge
sbb
or
lea
mov
mov
jmp
mov
fbld
imul
add
add
mov
mov
mov
or
aas
xor
push
lods
adc
mov
sahf
cmp
icebp
xlat
in
insl
mov
cmc
mov
js
add
std
lahf
in
repz
fs
lods
imul
scas
mov
insb
or
data16
in
add
sbb
xchg
out
lret
into
mov
mov
sub
loopne
test
cmp
lret
push
aaa
frstor
mov
jnp
mov
stos
mov
int3
jge
xchg
aad
fstpt
movsl
jne
inc
push
cmpl
loop
mov
jl
je
jnp
mov
mov
into
pop
js
in
jmp
imul
xor
xor
div
mov
sub
cmp
jmp
inc
shll
out
outsl
leave
js
std
jo
cmp
inc
add
mov
add
sbb
daa
cmp
in
sbb
and
stc
xchg
idivb
adc
cld
cmp
mov
cli
imul
ret
out
lret
nop
jne
mov
inc
pop
adc
out
push
and
inc
xor
or
mov
add
mov
lea
das
stos
and
cmp
cmpsb
ljmp
jo
movsl
xlat
sarl
nop
rcrb
loop
ret
xchg
fnstsw
ret
sub
mov
mov
inc
adc
push
jae
lahf
cmp
in
icebp
mov
cmpsl
jecxz
sub
jne
jmp
out
clc
outsl
inc
jg
out
clc
rcll
add
inc
add
mov
add
insl
sbb
and
cli
and
subl
or
insl
adc
pop
push
push
test
xor
pusha
out
mov
jle
sbb
pop
cmp
fnstcw
jge
daa
jae
sarb
mov
loopne
das
stc
add
sbb
outsb
hlt
mov
aad
cli
and
ja
add
adc
not
jne
fbstp
aaa
sub
arpl
movsl
lahf
ret
cmp
mov
add
ds
mov
mov
jae
xchg
test
in
jle
iret
rorb
jecxz
mov
mov
xorb
xchg
and
fwait
add
cld
mov
imul
and
mov
mov
mov
imul
jmp
inc
fists
fcmovu
cld
ret
lret
lds
add
dec
jns
sub
fdivs
xor
lahf
adc
sahf
cmp
cmp
sub
pop
jne,pn
adc
mov
dec
loopne
call
imul
jle
add
bound
dec
lret
gs
mov
shll
jmp
xor
hlt
bound
push
out
mov
jg
mov
lea
or
pop
pusha
scas
inc
sub
out
push
repnz
je
dec
ss
sbb
and
mov
fcoms
inc
clc
aaa
in
inc
sbb
repnz
xchg
int3
icebp
push
jp
pop
mov
jle
push
and
adc
sbb
aam
dec
in
xor
and
mov
jmp
cmpsb
ret
idiv
out
ffreep
into
push
ret
out
nop
xor
inc
add
mov
add
je
or
cmc
pop
fsubp
xchg
jb
stos
pop
jae
sbb
lret
push
stos
jne
sub
or
sub
aam
loop
adc
loop
lret
int3
xchg
add
and
and
sub
dec
sahf
push
adc
test
data16
cmpsl
fists
jge
mov
repnz
dec
jnp
js
jns
and
sub
xchg
add
mov
cli
xchg
into
dec
sub
jne
pusha
xchg
clc
mov
xchg
arpl
jle
and
sub
es
in
pop
lahf
rcrl
add
testl
cld
adc
lods
js
adc
mov
repnz
xor
jmp
adc
adc
adc
fstp
xlat
subl
inc
add
mov
add
call
imulb
data16
mov
mov
cwtl
clc
iretw
cmp
popa
cmpsb
mov
hlt
xchg
pop
daa
in
mov
adcb
daa
pushf
push
fnstenv
jns
repz
aaa
pop
cmp
xchg
pusha
adcb
xor
frstor
enter
push
gs
popf
scas
or
mov
mov
jno
push
cld
dec
sbb
mov
icebp
lods
sub
scas
jns
mov
dec
sbb
movsb
mov
arpl
pop
dec
enter
mov
in
mov
lahf
aaa
fidivrs
xor
aaa
lcall
push
or
xor
mov
mov
jmp
sti
dec
out
inc
jmp
sti
ljmp
and
inc
add
mov
add
xchg
fnstcw
jle
imul
dec
mov
ljmp
fs
mov
sbb
int
pushf
or
inc
mov
cmp
fcmovnu
hlt
adc
adc
sbb
push
subl
punpcklwd
fst
sub
mov
dec
std
shlb
jne
pop
sub
jb
ret
xchg
mov
stc
xchg
lret
pop
fidivrl
rolb
cmp
mov
rorb
pop
sti
out
mov
xchg
testb
shrl
mov
jl
fs
das
jb
inc
jmp
mov
leave
add
add
pusha
scas
stc
scas
push
lods
sbb
imul
add
add
mov
or
ljmp
pop
test
dec
dec
inc
pushf
bound
push
cld
lret
pusha
rcll
lret
lock
pop
daa
adc
repnz
mov
push
push
xor
pop
pop
push
loopne
adc
ljmp
pop
jbe
jne
lods
jb
testl
scas
pop
cmp
jns
push
mov
pop
add
sbb
aaa
mov
mov
lods
jns
push
stos
imul
pop
pop
push
xchg
push
roll
cmp
and
add
bound
aaa
roll
ret
add
add
mov
mov
or
outsl
or
add
jge
enter
mov
mov
insl
lret
jmp
icebp
ror
mov
and
out
lods
gs
movb
movsb
dec
icebp
sbb
or
pushf
pop
push
dec
outsl
lret
sub
lcall
mov
clc
xor
inc
pusha
fwait
shl
sahf
xchg
adc
aad
fwait
stos
int3
jmp
pop
sbb
jmp
mov
xchg
aad
in
xor
jp
into
in
clc
mov
fisttpl
push
jmp
mov
push
les
stc
cs
or
loope
neg
push
push
rorl
pop
xor
inc
cs
repnz
in
add
enter
mov
mov
add
jmp
sub
js
std
das
ljmp
int3
add
push
xchg
sahf
or
mov
add
add
sbb
mov
inc
and
xchg
shll
loope
sbb
mov
insl
push
or
inc
cmpsl
and
movsl
inc
pop
aaa
adc
movsl
sbb
das
jp
jge
push
mov
in
xor
shlb
jbe
cmpsb
pop
lds
and
xor
dec
fstl
call
cmc
inc
out
adc
push
sbb
inc
stc
in
push
inc
out
push
aaa
sti
and
pop
cltd
popa
test
pop
cltd
sbb
mov
sub
in
sub
repz
in
bound
sub
mul
mov
dec
mov
jns
xor
jmp
orb
lret
fstp
and
mov
sbb
add
inc
xchg
xchg
and
and
leave
mov
sbb
mov
clc
fmull
dec
mov
out
xor
pop
ljmp
int
xchg
add
das
mov
inc
ds
sti
push
cld
inc
dec
test
inc
cltd
xchg
lock
in
sub
pop
or
mov
rcrl
lahf
mov
add
cmpsl
push
aam
sbbl
sahf
cmp
mov
cwtl
data16
jge
dec
es
out
movsl
add
sbb
divl
jnp
xor
sub
fisttpll
mov
mov
imul
xor
cmp
je
jmp
xor
lods
jg
dec
or
gs
fmulp
dec
add
mov
add
sbb
cld
pop
ja
daa
mov
ja
add
in
loop
or
test
or
jno
add
xchg
mov
mov
jns
jne
add
jmp
dec
mov
mov
add
dec
imul
mov
inc
xor
sar
fstpt
push
test
ja
lock
sub
xor
daa
xchg
popl
jmp
cs
cmc
movsl
jecxz
push
pushf
adc
outsl
enter
sti
rolb
push
xchg
and
or
mov
and
mov
das
adc
xor
mov
jmp
mov
mov
sub
mov
jmp
or
in
in
cmc
or
in
or
lds
add
mov
add
jle
fwait
clc
insl
vpcomw
mov
mov
movsb
ret
mov
dec
insl
and
out
xchg
add
xor
dec
pop
scas
mov
pusha
mov
ret
and
jle
push
inc
jnp
lahf
enter
aaa
insl
push
mov
fimull
xchg
test
movb
mov
mov
cmc
sub
call
adc
jno
add
pop
ds
pusha
pop
mov
fsub
std
ljmp
imul
add
call
jnp
fiadds
mov
leave
orb
fwait
push
js
cltd
push
loopne
shrl
icebp
add
add
inc
or
add
add
dec
push
add
add
xor
jmp
and
adc
mull
out
jge
lods
pop
push
ret
sub
add
add
rcrb
lds
xlat
jne
inc
data16
pop
sarl
xchg
cmc
dec
cmp
pop
cmp
scas
adc
sar
or
fs
shrb
dec
and
adc
lahf
sub
cwtl
xchg
int3
ja
mov
pop
xor
in
dec
xor
or
fadd
adc
fs
jbe
jp
rcrb
ficoml
shrl
mov
fs
mov
int3
mov
insb
jmp
es
imul
loope
mov
dec
mov
repz
and
int
pop
cmp
pop
add
cmpl
testl
sub
pop
leave
ret
push
mov
jmp
out
cmpsb
xor
jp
sbb
jo
dec
add
scas
add
add
jp
jae
dec
movsb
cmp
mov
fs
and
aas
pop
ss
push
pop
fistps
fiadds
mov
shrl
mov
pushf
push
xchg
gs
clc
ss
ljmp
mov
mov
mov
int
fwait
pop
imulb
mov
lods
inc
xchg
mov
mov
xchg
movsb
and
fisubs
je
imul
aam
aam
add
mov
add
cli
jnp
aam
jae
cmpsl
inc
pop
rol
jecxz
push
push
das
leave
mov
push
mov
pop
inc
xor
cwtd
bound
out
enter
pop
cmp
or
add
jmp
lock
inc
xchg
out
hlt
jbe
pop
mov
jp
dec
add
scas
add
add
fidivs
mov
fldl2t
inc
jbe
sub
sahf
push
sbb
fcoml
fistpll
dec
fildll
movb
into
add
in
out
push
xchg
nop
gs
and
fldcw
fwait
pop
sbb
hlt
in
pop
and
sub
andl
mov
jecxz
std
stos
test
cltd
push
mov
push
pop
pusha
in
add
lea
movsl
pop
mov
ss
push
or
test
daa
int3
lahf
data16
jae
mov
cmp
adc
ficompl
ficompl
pop
sub
and
jae
lods
fdivrl
sub
add
lea
adcl
mov
mov
cmpl
ja
sbb
jmp
push
call
mov
jmp
subb
sub
add
dec
cmp
add
cltd
std
pop
adc
out
shlb
arpl
dec
test
jnp
fistl
addr16
test
iret
lea
push
sti
xchg
ret
inc
mov
mov
pop
push
xor
mov
add
lcall
movl
jg
insb
lods
xchg
jb
fcom
push
pop
jle
and
aam
push
fsubl
mov
inc
push
in
jecxz
jecxz
les
mov
and
push
mov
subl
xchg
ljmp
adc
pop
jno
pushf
mov
jmp
sbb
hlt
xchg
idiv
jnp
push
into
or
add
add
push
les
push
pop
push
cmc
in
push
movsb
scas
sbb
jle
push
mov
cmpsb
xchg
cmp
test
popf
lods
inc
mov
test
in
jo
ss
mov
js
pop
dec
mov
xor
sti
cmp
cld
ja
dec
rcr
cmc
ret
xor
mov
fsubr
cmpsb
dec
pushf
cmpsl
push
sahf
int
mov
xchg
cmp
fs
jb
ljmp
dec
inc
adc
xchg
in
repnz
lds
xchg
pop
popf
cld
xchg
hlt
jecxz
pop
lcall
sbb
pop
jbe
outsb
cmpsb
cmp
cwtl
xlat
fcomp
repz
pop
lods
in
sbb
push
sbb
mov
orl
andl
orl
lea
jmp
pusha
mov
inc
jmp
in
inc
andl
dec
add
scas
add
add
mov
pop
mov
jb
cmp
adc
incl
push
out
popf
push
psrad
cmpsb
test
jle
cli
ficoms
pushf
inc
mov
lds
mov
cmp
pop
mov
push
out
sub
hlt
cltd
aaa
sub
adc
pop
roll
shlb
idiv
iret
les
push
jno
push
cwtl
jg
sbb
pop
inc
xor
push
jge
mov
pop
xor
shr
stc
int3
dec
xorl
out
cmpb
xor
jl
loop
ds
pop
je
xchg
sub
jg
jnp
cld
fcom
cwtl
add
iret
mov
mov
sbbl
lea
push
xorl
jmp
sti
xchg
js
jge
decl
arpl
inc
dec
add
scas
add
add
dec
cmpsl
sub
mov
fmuls
fstpl
in
fisubrs
lea
jne
icebp
loopne
arpl
inc
in
stos
push
mov
test
or
dec
and
outsl
shrl
sbb
push
ds
mov
testl
test
lds
enter
ret
or
fsub
mov
loopne
xor
mov
mov
push
bound
gs
adcl
add
mov
push
mov
cs
push
jbe
les
xor
mov
dec
lret
sbb
mov
jmp
iret
inc
jbe
cmp
repz
mov
add
outsl
ds
inc
int3
bound
dec
mov
dec
or
dec
das
aas
fdiv
leave
outsl
inc
or
push
jge
add
fucomip
cltd
cmp
xor
lds
shrl
or
inc
bound
cmpsb
ds
daa
pop
pop
cmpsl
jne
cwtl
jns
mov
dec
sbb
inc
xor
mov
leave
sub
das
xor
fcmovnu
test
idiv
dec
ss
dec
call
cmp
shrb
in
mov
mov
mov
adc
xor
add
mov
fisubrl
xchg
js
jmp
dec
and
mov
add
mov
pushl
mov
jmp
lcall
idiv
mov
insl
sub
les
add
add
pop
fcomp
ret
leave
xor
popa
das
scas
pusha
or
outsl
push
adc
lcall
int3
test
xchg
mov
mov
xchg
or
push
pusha
push
dec
jle
jge
jmp
sub
data16
in
notb
cmp
test
mov
inc
test
mov
xchg
sub
mov
jbe
mov
pop
int3
push
pop
cmpsb
rolb
mov
addr16
and
push
mov
pop
sub
enter
outsl
jb
mov
xchg
cmp
xlat
push
cld
cmp
mov
push
pop
stos
mov
mov
jne
lea
pushl
pushl
pushl
pushl
push
pushl
jmp
lods
push
clc
mov
scas
std
ja
inc
mov
outsb
dec
push
add
scas
add
add
test
add
sub
ret
push
or
leave
sbb
negl
pop
mov
mov
scas
mov
arpl
sbb
les
ljmp
cltd
pop
aad
xchg
hlt
jp
jecxz
mov
jl
jecxz
out
xorb
mov
mov
sub
mov
outsb
shl
dec
not
adc
xor
js
xor
fmuls
sarl
lds
icebp
xchg
in
shlb
xchg
lods
sub
fmull
mov
lods
movsl
mov
pushf
dec
negb
je
cmp
add
lcall
in
ret
push
mov
sub
jmp
mov
or
mov
jo
cmc
insb
dec
cld
push
add
scas
add
add
lds
adc
fldl
or
scas
outsb
and
jb
int
lods
jmp
cmp
pop
fwait
mov
shll
fistpl
pop
imul
and
les
xor
scas
ret
jge
std
inc
mov
adc
ljmp
push
push
and
cmp
sub
pop
sub
xchg
pop
cli
repnz
std
insb
fstps
dec
loope
or
out
and
dec
std
mov
xor
dec
add
popa
das
mov
pop
mov
loop
test
sbb
jmp
testb
inc
and
pop
cld
pop
push
fiadds
add
xchg
movl
movl
movl
movl
movl
jmp
cmp
jge
sub
cmpsb
lods
mov
scas
add
add
scas
sub
mov
iret
lcall
mov
out
hlt
movq
jno
jo
jle
lods
imul
push
sti
outsl
dec
dec
enter
mov
daa
push
xchg
lds
or
loope
or
jae
adc
out
negb
jecxz
outsb
in
push
cmp
iret
roll
xchg
cld
push
in
add
cmpl
rep
into
cwtl
lahf
cmpsl
cs
cmp
aaa
push
out
out
inc
pop
and
xchg
stc
sbb
sti
test
addr16
pop
push
or
sarb
push
pop
jnp
dec
push
jne
sar
faddl
pop
jns
movl
movl
movl
movl
movl
movl
movl
movl
jmp
or
hlt
into
hlt
iret
cmp
add
or
dec
pop
push
add
scas
add
add
pop
jmp
lods
stos
outsb
jb
and
xchg
cld
popf
ljmp
repnz
adc
and
lea
pop
jbe
cmp
lea
nop
andl
fcmovb
xchg
mov
push
addr16
push
icebp
add
xchg
mov
jle
mov
cli
maxps
mov
out
subl
lods
pop
mov
cwtl
shl
push
call
sbb
xor
lods
ds
jle
leave
aad
aaa
jbe
xor
test
jle
mov
push
cltd
xor
cmp
push
sub
test
call
mov
add
jmp
adc
mov
fistpll
sbb
ja
in
push
add
scas
add
add
jmp
pushf
jae
test
sbb
rorb
mov
inc
movsl
adc
outsl
sahf
in
and
int3
imul
jl
cli
and
adc
sub
push
or
and
push
sti
sbbb
repnz
pushl
pusha
mov
jge
rcrb
outsb
aas
mov
jbe
push
mov
popf
mov
mov
or
out
movsb
mov
shl
in
fsubrl
adc
adc
scas
inc
lret
jmp
mov
or
jg
or
int3
pop
shll
lods
inc
scas
dec
hlt
xchg
push
mov
std
movb
dec
hlt
imul
mov
sub
add
push
push
movl
xor
movl
jmp
pop
divb
mov
sahf
cmpsl
fisttpll
mov
add
add
shll
inc
xchg
mov
out
cmp
xchg
icebp
lret
sub
xor
and
fidivrl
inc
imulb
mov
je
ror
pop
test
cld
cmp
and
pop
and
out
outsl
stos
out
cwtl
push
lea
in
loope
icebp
subb
and
dec
mov
mov
mov
mov
pop
cwtl
jge
mov
imul
mov
addb
mov
cmp
mov
lods
fmuls
leave
push
lea
mov
cmpsl
cmpsl
test
clc
jl
add
inc
hlt
in
add
jmp
push
mov
push
jae
or
addr16
add
scas
add
add
mov
xor
cwtl
mov
stos
int3
pop
sub
sub
pop
lock
inc
xchg
shl
cmp
pop
xchg
icebp
jne
xchg
push
repnz
cmpl
mov
cmp
jecxz
int
stos
push
xchg
sub
mov
push
lods
xchg
loop
mov
jmp
cmp
or
push
adc
stos
cmp
sarb
mov
mov
xchg
psubusb
call
insl
sbb
testb
add
lods
or
testb
movl
mov
push
pop
div
mov
mov
or
mov
mov
and
xor
div
mov
mov
sub
xor
mov
jmp
mov
mov
int
lahf
int
push
push
add
scas
add
add
fisttpll
sahf
sbb
stc
es
ljmp
push
loopne
scas
dec
lret
js
rcll
dec
push
daa
out
mov
mov
sub
fwait
dec
push
popl
xchg
repz
ja
out
jmp
repnz
dec
add
test
lahf
cmp
adc
pop
dec
xchg
incl
fimull
mov
ja
mov
cmp
adcl
out
push
mov
stos
roll
addr16
adcl
fimull
pusha
jo
inc
inc
notl
adc
arpl
sub
cmp
pop
mov
inc
sbb
push
cld
mov
mov
mov
jmp
and
jmp
pop
mov
xor
lds
add
and
push
cmp
mov
std
fldcw
xor
pusha
popa
dec
addr16
jns
mov
dec
data16
sub
lahf
and
loopne
les
jmp
dec
fnsave
outsl
lahf
xchg
mov
add
shlb
imul
add
inc
dec
ss
mov
mov
enter
xchg
inc
adc
xor
lods
adc
ljmp
loopne
mov
sahf
pusha
xorl
lret
int3
sub
adc
mov
jae
jne
pop
movl
fsub
sar
cmpsb
jg
and
adc
arpl
cmp
movl
jae
ja
ja
pop
sbb
mov
je
add
scas
add
add
push
pop
mov
xlat
aam
sbb
icebp
dec
shl
xchg
mov
arpl
test
adc
lock
dec
pop
cli
add
ret
or
sub
cmpsl
or
push
popa
push
out
pop
push
adcb
inc
ret
stos
or
popf
outsl
inc
dec
scas
or
and
call
lret
mov
fs
int3
inc
dec
test
pop
outsl
ds
push
mov
iret
out
js
push
ja
push
sti
popf
addr16
mov
gs
xor
dec
hlt
mov
adc
jns
mov
imul
xchg
hlt
cmpsl
mov
jmp
sbb
push
fs
hlt
ds
in
scas
push
jae
pop
add
scas
add
add
gs
cmp
sub
inc
cmp
lea
sub
sub
pop
xchg
push
jns
inc
dec
fs
jbe
pop
addr16
jnp
cltd
inc
mov
data16
xchg
inc
and
lret
movsl
xchg
lahf
mov
mov
inc
or
scas
mov
or
xor
hlt
mov
fldcw
mov
call
jb
out
enter
lock
es
dec
lea
add
je
adc
sub
adc
jb
xchg
pop
shll
loop
imul
fldcw
mov
mov
sub
mov
imul
jmp
out
int
out
pop
idivl
lcall
add
stos
movsb
leave
lahf
pop
ret
adc
pop
lods
repnz
and
in
mov
push
inc
pop
insb
mov
sub
xor
loope
std
and
jl
inc
push
hlt
pop
or
paddq
pushf
adc
dec
push
std
or
jp
lock
cltd
and
mov
scas
bnd
xor
dec
pop
mov
fsubrl
push
jmp
stos
sbb
adcl
xor
sbb
stc
dec
and
aad
adc
in
jo
cltd
outsl
outsl
cmp
or
mov
scas
jge
push
orb
pusha
xor
sbb
data16
out
aaa
roll
shrb
add
xor
jmp
jecxz
out
out
xchg
ja
ficompl
cmp
int
pop
add
scas
add
add
ret
or
adc
sub
aaa
in
mov
inc
mov
stc
push
mov
mov
inc
mov
test
xchg
add
jb
mov
dec
cmpsb
add
inc
xchg
loope
ljmp
xor
call
nop
roll
sub
sbb
std
in
push
stc
arpl
mov
js
lods
cmpsb
sub
test
inc
mov
pop
fsubrs
js
pop
out
int3
addr16
and
pusha
mov
sbb
jne
lods
sub
jge
and
mov
cmpsl
jp
sub
addr16
mov
jmp
cld
jp
jmp
jg
jg
xor
xor
add
loop
xchg
ja
mov
pop
leave
fwait
sbb
push
test
add
push
ret
js
lock
lods
push
insb
or
insl
fcoms
fsubp
mov
cmpsl
shrb
icebp
lds
movb
popa
call
sub
jge
mov
mov
pop
in
or
decb
sbb
sbb
fiadds
xchg
sbbb
inc
popa
cwtl
add
jle
pop
mov
ficoms
nop
roll
inc
fisubs
cs
scas
mov
or
push
jb
jle
mov
xor
fs
out
xchg
cmp
mov
mov
xor
jmp
inc
stc
ss
incl
les
cmp
jns
in
pop
add
scas
add
add
adc
ss
sbb
pop
sbb
and
test
mov
mov
xor
insb
add
dec
adc
and
cmp
test
out
inc
lret
lods
dec
imul
ds
mov
dec
jnp
lret
push
sbb
pop
lahf
icebp
pop
sub
dec
push
or
fldt
clc
mov
in
cwtl
cli
sti
xor
or
jno
lret
push
mov
mov
fnstsw
mov
sub
jecxz
cli
gs
inc
or
add
and
jecxz
push
out
fdivl
add
mov
shr
or
mov
imul
xor
jmp
jmp
adc
pushf
ja
decl
sub
xorb
scas
add
add
das
adc
or
jecxz
into
inc
and
xchg
xor
stos
pop
fs
in
mov
add
pop
mov
fidivs
cli
popa
push
push
lret
adc
add
popa
or
pusha
sbb
sti
mov
mov
sbb
sub
jle
inc
jp
aas
jb
push
push
sbb
test
adc
arpl
and
and
jmp
push
sub
test
rclb
test
inc
imulb
mov
gs
mov
pop
es
cmp
dec
sbb
jne
adc
mov
pop
jne
adc
push
cwtl
dec
sarb
mov
imul
movl
dec
jo
jle
addr16
dec
mov
hlt
inc
pop
cmp
add
add
and
jns
shlb
mov
and
adc
jb
push
mov
dec
fistpl
pop
addr16
repz
pop
repz
es
es
dec
push
push
out
push
insb
xchg
mov
in
repnz
mov
jmp
lcall
xor
aam
lds
cmpsl
pop
fisttpl
aaa
jecxz
ds
and
mov
mov
lds
push
rclb
dec
hlt
mov
out
xor
icebp
je
leave
dec
in
sbbb
dec
cmpsb
inc
lock
imul
xchg
push
and
jle
je
push
xlat
aaa
js
out
or
jmp
mov
lods
mov
movl
sbb
and
mov
push
pop
add
scas
add
add
adc
mov
setb
ja
insb
in
into
das
and
mov
std
lret
lods
mov
fcoml
mov
jno
shll
adc
adc
xchg
inc
notb
enter
pop
aas
test
or
mov
mov
push
xlat
push
daa
pop
xor
dec
hlt
push
and
sub
inc
ja
inc
push
outsb
repz
inc
jmp
pop
adc
imulb
scas
xchg
jne
jl
in
push
mov
iret
daa
dec
push
cmp
in
xchg
in
xchg
fdivs
xchg
inc
xchg
fadds
jge
rorl
sti
data16
pop
xchg
xlat
xor
sub
mov
sub
jmp
data16
xchg
fstpl
cmpsl
xlat
add
imull
fwait
pop
add
scas
add
add
int3
jno
jno
xor
paddsb
les
enter
inc
in
cmp
in
in
cmp
lock
pop
and
addb
sub
push
and
jns
hlt
or
push
out
jl
mov
mov
dec
mov
loope
stos
movsb
lods
test
sbb
fxch
sub
outsl
jb
sbb
add
out
mov
js
jnp
fistl
lcall
mov
xchg
adc
ss
leave
push
aad
or
iret
js
rolb
xor
xchg
loopne
fisttps
adc
outsb
mov
imul
div
mov
add
lea
jmp
xor
divb
divb
xor
into
jle
mov
scas
add
add
popa
push
test
sub
decl
insl
iret
lret
fisubl
dec
cmp
fcoms
push
psllw
clc
cs
cltd
ljmp
mov
jp
xor
mov
out
mov
inc
mov
es
adc
roll
rorb
xchg
imul
insb
sbb
clc
xchg
aam
add
push
scas
jo
stos
add
jne
push
sbb
push
popl
or
out
cmpb
mov
ja
ret
jp
inc
cli
jae
jmp
rcrl
jns
sbb
xchg
jbe
sti
mov
mov
jmp
inc
jne
out
in
div
xchg
cltd
cmp
gs
pop
stc
pop
add
scas
add
add
and
or
outsl
test
or
fwait
loop
cli
incl
or
add
mov
out
xchg
decl
or
pop
pop
dec
adc
pop
rorb
jp
outsl
sar
daa
outsb
inc
lcall
mov
addl
xor
leave
cmp
iret
movsl
cwtl
fnstcw
or
aaa
mov
sbb
cmp
in
movsb
inc
sbb
mov
sbb
ja
sbb
jno
sub
jns
dec
push
fidivrs
lods
rcll
pop
repz
cwtl
dec
sbb
or
add
sub
jmp
and
lcall
aam
sbb
fisubrs
add
add
jb
fdivl
sub
lods
add
sarb
pop
les
adcl
decb
push
xor
xor
outsb
mov
xchg
push
repnz
mov
sbb
data16
lret
mov
sbb
xchg
scas
icebp
sbb
fsts
inc
vaddsubpd
popf
jbe
mov
rorb
mov
xor
outsb
pop
cmp
push
pusha
fcoms
test
mov
lods
pop
xchg
mov
lret
outsl
jmp
push
std
pop
jae
nop
out
mov
fisttps
stc
and
cmp
jbe
jmp
les
rcr
fists
insl
fcoml
push
pusha
add
scas
add
add
pop
loopne
add
ret
fsubl
and
mov
scas
sub
lea
dec
mov
pop
shll
lock
test
dec
shll
jnp
dec
pop
aaa
jecxz
and
mov
push
add
cmpsl
loop
stc
loope
enter
pop
daa
sbb
sti
xchg
jns
movsl
push
lahf
repz
inc
pfcmpge
rcr
mov
mov
pushf
sbbb
cmp
mov
inc
jbe
jns
lret
dec
cmpsb
stc
adc
xor
incl
test
xchg
rcrl
stos
push
outsb
dec
mov
xchg
mov
pop
leave
ret
push
mov
jmp
sar
out
cmp
adc
sub
add
mov
add
inc
xchg
imul
mov
inc
and
add
xchg
mov
es
and
imul
pop
jl
xor
enter
enter
mov
iret
mov
push
adcb
out
data16
imul
fiaddl
test
decl
popf
mov
mov
stos
cmp
or
stc
leave
adc
and
jl
imul
inc
pusha
and
inc
lds
test
call
rorb
fiaddl
add
or
adc
mov
mov
subl
push
cmpl
jg
xorl
mov
and
jmp
call
push
jmp
in
cmpl
std
out
repz
in
popa
add
mov
add
ficoms
fwait
mov
gs
fidivl
rclw
js
adcl
aas
out
test
mov
mov
and
aaa
mov
aad
jns
dec
rolb
adc
xlat
adc
lods
loope
adc
pop
sbb
or
sbb
push
ljmp
mov
sti
sbb
mov
out
mov
xchg
stos
dec
jno
xchg
push
xor
xor
push
sub
xchg
adc
mov
test
call
daa
adc
push
pop
jno
sbb
addb
dec
jg
or
pusha
shrb
add
sarl
mov
bound
add
mov
mov
inc
arpl
inc
inc
stos
xlat
cmp
adc
jo
int
xchg
shl
xchg
add
leave
lods
xchg
sbb
jnp
mov
push
in
andl
cmp
pop
xchg
mov
std
xchg
fdivs
jmp
sub
jmp
xlat
pop
sub
xor
sub
std
cmpsl
jns
adc
sub
ret
test
repz
lahf
iret
jb
data16
aam
sub
pop
mov
inc
out
sbb
sti
sbb
mov
in
jl
leave
fnstcw
and
enter
aas
mov
dec
xor
push
mov
and
sub
not
mov
jmp
ficoml
push
add
je
mov
mov
add
sarb
dec
and
inc
and
addr16
iret
int3
lods
xchg
mov
mov
or
xor
sbb
jb
call
sbb
pop
daa
mov
xchg
mov
sbb
pushf
enter
or
pcmpgtb
xchg
enter
cmp
lds
adc
xor
mull
es
aaa
mov
adc
pop
inc
test
pop
es
dec
bound
mov
popa
inc
mov
pusha
mov
xor
inc
jle
jo
outsb
jo
aad
fs
jecxz
xor
xchg
mov
mov
neg
mov
andl
xor
sub
sbbl
mov
jmp
or
scas
idiv
push
mov
ss
bswap
arpl
add
fcmovbe
int
sbb
pop
xorb
jbe
jb
inc
and
xchg
jl
outsl
inc
mov
cmp
loopne,pt
dec
lcall
jnp
push
push
sub
sbbb
cld
ja
or
mov
mov
mov
divb
and
rcll
dec
test
ljmp
andb
jmp
imul
sbbl
push
mov
dec
dec
jo
ret
or
xor
pop
and
sbb
mov
pop
hlt
dec
xchg
mov
add
je
subl
mov
and
arpl
fwait
test
divl
and
jp
or
inc
add
shr
add
add
and
out
mov
add
jo
add
mov
add
adc
mov
lahf
test
dec
ficompl
movsl
iret
into
popa
fimull
pushf
pop
pop
js
xchg
sub
in
sbb
fisubl
mov
sbb
sahf
add
mov
mov
test
inc
stos
stc
scas
adc
inc
and
xchg
mov
pop
inc
xor
stos
fdivs
mov
pop
and
rcrb
lds
daa
mov
cmpsb
and
mov
push
dec
sbb
test
cmpsb
adc
negl
jae
test
mov
or
adc
ficoms
int3
cmp
iret
push
aas
jne
mov
and
mov
mov
mov
adc
xor
orl
add
jmp
and
mov
imul
add
mov
add
xchg
inc
mov
inc
and
mov
loope
xchg
lcall
icebp
sbb
into
mov
adc
daa
in
ja
xchg
fistpll
mov
mov
bound
push
xchg
sbb
call
adc
call
xor
lret
pop
test
mov
dec
fucomi
mov
fsubl
lahf
pop
and
add
xchg
icebp
jns
add
pop
jmp
push
sti
jns
mov
jl
jns
outsl
call
cmc
or
cmc
xchg
gs
mov
xlat
ds
jge
mov
xchg
push
jbe
insb
lods
sti
arpl
xor
pop
adc
mov
xor
cmpl
jle
or
jmp
pushl
call
mov
mov
mov
xor
jmp
shlb
mov
sbb
or
frstor
add
mov
pop
out
mov
pushf
lods
shlb
int
mov
xchg
mov
cwtl
lea
mov
add
mov
icebp
sbb
or
or
shl
in
rorb
mov
xchg
and
sbb
adc
out
mov
inc
shl
fidivl
dec
test
mov
stos
mov
fwait
repz
jmp
aad
jmp
push
push
push
cli
xor
push
scas
xor
jnp
mov
cli
shl
enter
out
int3
pop
adc
test
inc
mov
pop
enter
testb
fwait
or
xchg
rolb
stos
dec
jmp
enter
mov
out
sub
add
mov
add
mov
rorl
insb
icebp
enter
div
cmp
imul
out
jmp
repz
sbb
movsb
fwait
mov
mov
dec
out
cmp
add
jno
add
scas
stc
push
jnp
xchg
aas
cmc
push
xor
jge
jne
insb
imul
lods
push
xchg
fsubrl
rclb
arpl
sbbl
adc
mov
cs
ret
out
and
dec
bound
sysenter
inc
mov
jb
leave
into
inc
les
ja
stos
fucomip
gs
xor
fs
mov
push
popl
sub
movsl
js
inc
out
cmc
movl
mov
mov
cmp
movl
jne
movzwl
mov
cmp
je
mov
incl
jmp
mov
or
fimull
pop
aaa
aas
add
mov
add
ret
mov
pusha
nop
xor
fs
repz
cmp
cmp
xlat
inc
xlat
cmp
or
add
add
add
pop
cmp
inc
nop
es
fsubrs
xchg
ds
xor
arpl
adc
push
ret
and
sub
xchg
repz
push
or
dec
xchg
push
daa
mov
push
test
das
loop
or
stos
cmp
sub
rcrl
push
xorb
out
or
jb
cmpsb
orl
sbb
std
clc
mov
stos
jb
xchg
pop
or
stos
scas
shll
shr
leave
add
add
pop
pop
insl
mov
ljmp
push
sti
xor
add
mov
add
fadds
cli
test
fs
sbb
mov
push
jnp
add
data16
dec
test
mov
rcr
icebp
or
mov
mov
mov
loop
pop
pop
xchg
xchg
jmp
addb
int
outsl
dec
popw
sbbb
mov
xchg
jecxz
shrl
mov
or
ss
in
leave
repz
xchg
divb
lret
repz
subb
std
adc
cwtl
jle
subps
call
pusha
jno
xor
lds
fucomip
or
sbb
popf
sbb
mov
adc
add
sbb
add
incl
add
leave
add
add
xchg
pop
repnz
out
mov
das
xchg
mov
add
add
aas
enter
pop
inc
lahf
test
push
cltd
mov
jge
dec
jge
iret
sbb
adc
pop
pop
push
enter
pop
nop
inc
push
leave
clc
leave
xchg
cmp
and
std
int
jg
movsb
push
inc
movl
jo
pop
pop
or
out
cmp
lcall
mov
and
pminub
fcmove
loopne
push
mov
daa
test
pop
call
jae
arpl
jns
addr16
push
or
jno
imul
push
ds
aas
sbb
movsl
movsb
stc
dec
popa
in
pop
push
mov
out
fwait
lcall
out
xor
adc
jmp
mov
mov
lret
fisubs
imul
add
push
fcmovnbe
add
jge
mov
addr16
std
repnz
inc
mov
repz
dec
xor
int
std
xor
lcall
add
xchg
pop
add
loop
jbe
or
mov
ss
jmp
jge
sbb
and
jge
ret
test
sub
pop
hlt
cwtl
adc
sti
mov
add
lahf
das
stc
xchg
movsl
daa
adc
jbe
mov
push
out
push
mov
pop
lret
test
jno
cmp
push
cmc
jo
mov
mov
imul
cld
xor
dec
or
add
cmc
inc
add
je
add
jmp
xchg
or
aas
adc
jnp
push
jae
xor
push
add
pop
dec
dec
lret
mov
int
mov
xor
push
icebp
xchg
or
mov
aas
mov
mov
call
xchg
negb
or
arpl
rcrb
scas
push
jmp
fsubrs
rcrl
and
adc
outsb
adc
and
mov
sbb
cwtl
jecxz
mov
daa
outsl
das
clc
shll
adc
subl
and
sahf
out
fidivrs
push
shrl
mov
jns
and
mov
xchg
mov
cmpsb
jg
jle
jo
repz
in
loop
jbe
loope
mov
movl
xor
movl
jmp
xchg
sub
jg
in
add
out
out
jno
mov
add
mov
add
mov
sbb
dec
add
push
mov
jle
fnstcw
je
lcall
push
adc
lods
das
xor
popa
aaa
lahf
test
sbb
sub
xlat
push
mov
in
jge
and
pop
jg
inc
push
out
mov
fsts
adc
and
jg
ficoms
or
dec
ret
adc
loop
cmpsb
xchg
cmp
pop
std
mov
subb
inc
dec
jno
fimull
sub
sbb
or
cmpsl
push
sti
adc
fnstsw
mov
sub
popf
adc
iret
movsb
sub
mov
int3
movl
cmp
movl
jmp
and
sti
aas
cmc
cld
call
mov
mov
add
aad
fldt
pusha
jp
dec
xchg
popf
pop
add
cmp
mov
and
mov
ds
xchg
stos
cs
mov
pop
mov
cmc
adc
int3
push
adc
sbb
cwtl
cmp
fcmovu
je
push
or
cwtl
xchg
nop
dec
push
inc
push
sbb
adc
sbb
mov
lret
mov
test
ss
add
scas
xor
adc
dec
adc
mov
mov
outsl
pop
cmp
bound
xchg
leave
movsb
jne
cmp
sbb
mov
push
push
jne
movl
cmp
movl
je
cmpl
jb
add
jmp
pushl
push
push
push
pushl
call
jmp
arpl
xchg
push
mov
out
hlt
mov
aas
xchg
dec
push
pop
push
insb
add
mov
add
pop
das
in
notb
or
loope
fcoms
and
dec
add
leave
xchg
pop
pop
cmc
push
js
push
lods
lret
shrb
clc
bound
call
dec
add
hlt
scas
sub
leave
jns
or
add
ja
inc
dec
lret
or
jns
fsubl
jnp
push
cwtl
stos
xorb
idiv
pop
push
movsb
pop
sbb
out
mov
push
repz
and
out
pop
insb
push
lcall
fsubrl
cmp
daa
pop
mov
outsl
int3
int
xorl
jp
dec
mov
and
cli
sahf
jo
popf
ja
push
jge
mov
scas
mov
mov
sub
sub
xor
shr
orl
xor
shl
mov
and
or
cmpl
jbe
movzbl
and
jmp
pushl
pushl
pushl
pushl
call
jmp
das
jnp
inc
std
scas
jg
xor
xchg
popf
jecxz
insb
add
mov
add
or
imul
or
sub
lcall
aaa
pop
aam
sub
push
mov
jle
push
pop
outsl
ljmp
daa
adc
imul
hlt
jns
loope
in
in
push
adc
mov
lock
imul
add
imul
inc
int
js
shlb
and
or
lock
cmpl
jae
ss
hlt
loop
scas
ss
loope
je
nop
sarb
dec
pop
mov
mov
jnp
xchg
push
dec
mov
mov
je
mov
jle
mov
mov
jmp
adc
mov
fsubs
push
add
mov
add
and
mov
subb
xor
mov
jl
jle
mov
ja
pusha
pop
scas
sbb
loopne
call
adc
mov
push
les
pushf
xor
xor
cwtl
into
mov
and
int3
das
mov
lcall
xchg
test
mov
pusha
push
push
outsl
mov
mov
cmp
pop
fildl
fldcw
lds
arpl
imul
sub
loope
sbb
add
pop
shll
mov
dec
ss
mov
mov
jmp
icebp
rcrb
fcomip
fisttps
cltd
int
outsb
add
mov
add
gs
pop
xchg
fidivrs
es
jge
cwtl
jge
mov
adc
xor
push
or
into
mov
mov
out
js
mov
aam
xor
dec
mov
sti
lods
jl
sbb
xor
fstpt
stc
dec
int
clc
loopne
jae
mov
into
adc
scas
imul
xchg
dec
sub
mov
insl
fimull
aaa
cld
bound
xor
push
push
enter
push
bound
gs
ffree
pop
xchg
dec
mov
cmp
ds
fwait
outsb
adc
rorb
jmp
les
cwtl
pop
gs
lahf
cwtl
or
fisubrl
add
cltd
rolb
enter
pop
loopne
outsb
loopne
icebp
cmp
mov
dec
sub
fiadds
hlt
sub
xchg
sbb
stos
imull
and
or
sbb
pusha
or
adc
cltd
loopne
push
loopne
in
mov
in
lods
dec
loope
mov
decb
jge
dec
iret
inc
pop
sahf
pop
pop
xchg
ljmp
les
mov
bound
push
pop
lcall
sbbb
cmp
or
movsb
mov
fdivrl
and
std
inc
xor
div
xchg
push
pop
movzwl
sub
sub
add
cmpl
ja
movzwl
or
adc
jmp
push
push
call
mov
movl
jmp
add
dec
push
pop
pop
dec
mov
jb
lahf
mov
add
les
adc
inc
movsl
mov
adc
cs
push
test
jge
cmp
mov
out
cmp
lods
mov
xchg
loopne
test
cmp
add
lods
and
into
push
nop
stos
push
cmovae
dec
xchg
pop
sub
push
cmpsl
push
pushf
inc
jno
or
aaa
push
jmp
lret
jnp
loop
pop
pushf
mov
dec
lods
ret
sbb
mov
out
push
movsl
sbb
addr16
fwait
in
shl
xor
clc
mov
insl
xor
rcll
sahf
aam
dec
lods
outsb
adc
push
cmpsb
cmp
in
enter
enter
mov
mov
and
mov
jmp
mov
out
xor
add
ljmp
add
add
and
dec
or
pop
mov
add
imul
scas
mov
mov
mov
rclb
cld
fnstenv
and
nop
pop
push
lock
call
fnstcw
inc
mov
fisubrl
cmp
push
rorb
popf
in
in
xor
lret
inc
rorl
mov
divl
jno
addr16
inc
mov
lahf
mov
sbb
jg
or
and
push
shl
lods
xor
cmp
fdivs
movb
jmp
or
gs
in
hlt
add
xor
jmp
sub
jnp
pushf
cmp
jl
in
jo
add
pop
in
test
jge
inc
icebp
push
mov
fdivs
mov
pop
pop
xchg
cmp
or
mov
push
dec
push
aaa
push
jp
push
shrb
out
int3
test
inc
arpl
imul
insl
add
xlat
push
cltd
cli
out
inc
xchg
dec
leave
jg
xor
inc
push
sub
int3
pop
or
mov
mov
sub
lock
xchg
in
push
fwait
push
jp
test
push
aad
inc
lret
mov
stc
test
cmc
jl
mov
leave
dec
sub
jg
stos
mov
add
stos
scas
push
push
mov
pusha
mov
jmp
dec
stos
nop
cmpsl
lock
mov
pop
sahf
jno
add
orb
repz
jno
pushf
outsl
lret
inc
jle
lods
xchg
mov
in
scas
lea
jmp
inc
mov
add
xchg
jnp
bound
inc
out
loopne
shlb
cmp
adc
cltd
mov
cli
hlt
mov
push
in
mov
movsl
in
mov
jns
push
lcall
shll
cld
mov
xchg
fnsave
or
mov
and
test
sbb
push
or
cmp
mov
pop
push
or
push
icebp
push
adc
test
mov
scas
fcoml
cmp
mov
mov
add
mov
xor
andl
mov
xor
jmp
pop
sbb
negl
pop
aad
dec
jb
add
ds
rcrl
sub
adc
dec
lods
in
fcomip
mov
pop
mov
lods
sub
lcall
aam
lods
jmp
subb
sbbl
add
mov
jg
xor
rolb
repnz
cmp
int
jge
xor
xor
and
std
sub
and
rcrb
stos
push
xchg
sbb
popf
cltd
jp
jno
mov
lods
ret
ss
sub
sbb
imul
fs
dec
out
mov
imul
add
push
mov
mov
adcl
sub
sub
cmpl
jb
neg
jmp
push
push
call
jmp
sub
adc
jp
loope
push
scas
or
mov
add
inc
xchg
insl
stos
in
adc
cmpsb
sub
int3
lret
aam
push
push
pop
movsl
push
outsl
cmc
cmp
mov
jmp
adc
or
outsl
fimull
movsb
loope
movsb
cltd
out
adc
sbb
ret
mov
dec
or
stc
sub
enter
xchg
test
cwtl
jnp
pop
lea
fwait
pushl
imul
or
xor
fistpll
iret
pop
inc
data16
cmp
test
xor
ja
rcr
repz
xchg
ret
push
or
mov
add
push
mov
scas
pop
add
in
shll
add
ss
insl
cs
shr
xor
jmp
int
ret
cli
std
jmp
xor
add
mov
add
mov
dec
xchg
stos
ljmp
xor
mov
dec
mov
mov
sbb
scas
inc
or
mov
insl
pinsrw
mov
xor
sbb
inc
xor
sbb
or
lret
dec
lods
hlt
cmp
push
mov
hlt
xchg
aam
cs
shll
imul
mov
or
hlt
jae
cmp
aas
pop
ds
int3
inc
sub
jge
pop
pop
out
jp
lcall
bound
add
imul
mov
mov
in
xor
inc
sbb
shr
add
add
and
neg
sti
scas
mov
push
cld
cmp
xor
add
mov
add
loope
dec
push
jecxz
pop
popf
cwtl
mov
dec
inc
addr16
outsb
fstpt
lcall
addr16
sub
mov
iret
popa
jnp
int3
and
cmp
sub
xchg
inc
pusha
xchg
shrl
aas
js
adc
cmp
add
mov
test
lods
mov
cs
insl
mov
mov
adc
cmpsb
imul
clc
fndisi(8087
mov
mov
pusha
adc
into
sub
mov
xor
sbb
out
jns
loope
sub
cmp
add
adc
xchg
cmp
movsl
inc
in
push
xchg
daa
insl
mov
cmpl
jl
jmp
push
call
jmp
repz
pop
out
out
repz
out
xchg
mov
adc
add
pop
mov
stc
add
xor
fs
sbb
cmc
in
popa
lds
mov
push
adc
or
and
mov
xchg
and
into
stos
movsl
filds
mov
cmp
inc
xor
neg
lcall
inc
mov
push
mov
inc
sahf
addr16
xorb
or
imul
lret
pop
int3
xchg
sub
das
pop
sbb
cltd
dec
push
aam
fldenv
mov
cld
mov
fwait
add
loop
cmp
call
dec
mov
mov
stos
imul
mov
xor
jg
mov
mov
jmp
movsb
ret
jle
inc
dec
stos
in
test
push
xchg
les
add
repz
sub
sahf
test
xlat
ljmp
sbb
sti
outsb
dec
adc
and
mov
and
cs
jg
iret
xchg
mov
or
sbb
and
or
inc
adc
or
das
jb
mov
pop
and
cmp
mov
jno
sub
fs
inc
call
fstpt
add
test
add
pop
inc
jno
xchg
insl
or
xor
cmpsb
je
rcr
std
imul
lret
inc
ljmp
pop
or
mov
js
into
sub
mov
xor
add
adc
jmp
pop
icebp
dec
movsl
out
mov
rorb
mov
jne
add
mov
add
pop
xchg
pop
and
out
sbb
popa
jbe
fildll
pusha
add
clc
xchg
pusha
in
adc
or
stc
ja
fisubs
scas
outsb
out
in
xlat
lock
jae
push
pop
jae
or
push
icebp
add
pop
shrb
sbb
vpsrlq
lret
xchg
sbb
mov
js
mov
dec
and
pop
cli
push
int
mov
notl
mov
xchg
cmpsl
loop
cmp
cli
movsb
dec
inc
mov
in
xchg
loope
and
ret
jae
stos
stos
xor
or
mov
cmpsb
out
fiaddl
fisubrl
stos
cmp
ret
int
cmp
add
sbbb
add
lret
adc
jmp
push
pushl
push
call
mov
mov
mov
mov
xor
jmp
lahf
dec
sahf
add
rcrl
fcompp
mov
add
mov
add
mov
or
jo
mov
cmpsl
mov
push
mov
xchg
inc
aas
inc
mov
jp
addr16
push
insl
mov
jp
sub
adc
fimuls
mov
add
gs
repz
outsb
movsl
pop
popa
outsb
addr16
sti
jl
les
in
inc
push
shr
je
adc
push
pusha
xor
push
cli
push
stos
test
mov
adc
xchg
js
cs
lods
add
mov
fidivl
cwtl
cmpsb
mov
dec
cmpsl
stos
clc
mov
push
ss
in
imul
adc
mov
cmp
rorl
add
lret
ror
lret
rcll
aaa
xchg
sbb
ja
add
xor
call
dec
xchg
sub
jns
or
imul
or
test
scas
inc
sbb
mov
sbb
adc
popa
or
jl
and
scas
xor
fstpt
inc
test
sahf
orb
jl
mov
insb
cli
mov
jns
and
add
push
jb
fsubl
add
je
mov
sbb
adc
sub
cwtl
out
jae
pushf
cmp
rorw
xor
dec
push
daa
test
push
sub
push
mov
xchg
pop
andl
ja
les
fnstcw
and
leave
add
add
std
scas
sti
sub
stos
jp
mov
add
xor
jmp
push
mov
xchg
pusha
cmp
test
inc
or
mov
lret
mov
das
gs
pop
cmpsb
and
push
in
pop
push
lahf
sub
cmpsb
xchg
mov
xor
or
push
pop
mov
sarl
js
movsb
lods
pop
jb
jne
outsl
out
dec
mov
insb
push
dec
mov
dec
imul
icebp
push
mov
jae
mov
add
faddl
in
adc
add
inc
cmpsb
xchg
imul
lahf
add
addr16
ficoms
adc
xchg
mov
adc
dec
push
and
jmp
push
cmpsb
pop
outsb
xor
cmpl
jle
movzbl
and
jmp
pushl
call
add
lea
mov
mov
mov
sub
sub
add
mov
sbbl
sub
addl
jmp
jae
lahf
fistpll
adc
popf
mov
jns
add
fiaddl
cli
add
xlat
ficompl
leave
xor
pop
push
movsb
insl
adc
stc
out
pop
and
push
jmp
jge
iret
jp
movsb
negb
mov
int
std
xlat
std
push
sub
mov
jae
inc
lret
ja
cmp
cs
aad
pushf
jmp
or
jmp
jnp
call
xor
out
scas
fsubl
enter
imulb
je
pop
aam
fxch
mov
scas
pop
sbb
push
mov
mov
mov
pop
adc
push
add
pop
sub
insb
popa
inc
fs
shlb
mov
xchg
mov
iret
or
lahf
fdivl
das
xor
xor
andl
shl
jmp
cmpl
mov
and
jns
add
pushf
xchg
cli
pop
or
dec
aad
pop
cmpsb
xor
cltd
dec
int
ret
xchg
movsl
fdivr
and
xlat
mov
shll
mov
xchg
mov
xlat
or
pop
test
and
mov
dec
mov
call
pop
lods
sbb
pop
sub
les
repnz
pop
pop
lret
dec
test
or
mov
loope
or
jg
jnp
test
push
iret
orl
jecxz
insb
xor
jecxz
adc
in
pop
lret
push
mov
outsl
insl
mov
or
movl
sub
xorl
jmp
xchg
lcall
cmp
fistps
push
dec
dec
add
in
jp
add
sbb
jb
imul
cmpl
out
add
adc
loop
das
mov
and
inc
add
or
add
ds
mov
add
jp
pop
repz
xchg
sub
imul
cmp
xor
mov
hlt
push
in
jle
iret
adc
dec
push
pop
sbb
pop
iret
jmp
lahf
push
push
in
adc
ja
loope
pop
add
lcall
mov
jno
movzbl
push
dec
incl
jo
imul
xchg
roll
push
xchg
mov
out
mov
test
jmp
or
cmp
cmp
into
testl
jnp
add
das
add
daa
cs
fs
mov
mov
addr16
pop
push
sub
sub
fwait
in
xchg
rolb
shll
inc
xchg
sbb
clc
aas
xchg
mov
xchg
pop
add
add
lods
push
daa
sub
sub
ljmp
int3
mov
mov
mov
push
mov
test
ja
add
pop
adc
jl
xlat
push
fisttpll
sbb
fsin
icebp
cmp
enter
cmp
into
out
dec
jmp
test
out
inc
iret
push
mov
into
dec
popf
out
pop
mov
dec
cmp
sub
mov
mov
or
jmp
sbb
inc
ljmp
imul
jnp
add
cmpb
adc
loope
add
cmp
sahf
xor
ljmp
push
mov
imul
loopne
pop
mov
stos
adc
adc
outsl
sub
rcll
outsl
push
mov
xchg
insb
jp
sti
out
and
aam
scas
sub
xor
ss
inc
lods
dec
push
lea
out
sti
cmpsl
roll
outsb
xor
add
or
stos
mov
xchg
cltd
cmpsb
inc
xchg
shl
jg
arpl
mov
xchg
je
add
js
insl
lods
jb
sahf
fimuls
test
lret
mov
xorl
mov
xor
or
sbb
mov
andl
xor
jmp
inc
pop
movsb
xor
mov
xor
add
mov
cmp
mov
aaa
and
dec
lret
push
ret
das
popa
sti
sub
in
insb
fisttpl
sti
das
jbe
or
sub
roll
mull
out
int
inc
pop
inc
cltd
xor
mov
dec
inc
jp
pop
leave
inc
sbb
adc
es
shll
push
and
or
sbb
lods
cmp
and
int3
pop
lock
dec
pop
lcall
mov
test
jns
outsl
cmp
decb
ret
test
sub
cmp
enter
out
sub
fcompl
in
sbbl
in
les
cmp
sub
jmp
loopne
push
ficompl
call
lahf
ja
push
ficomps
add
mov
add
sub
pop
mov
jle
pop
in
cmp
mov
and
xchg
mov
cmp
xchg
add
stos
lret
enter
push
xchg
xor
fucomi
or
mov
cmp
inc
outsb
sbb
mov
push
fcoms
or
cmp
aad
mov
mov
push
mov
in
stos
push
lea
jo
add
pop
lods
lret
je
ds
jae
sbb
sbb
dec
inc
pcmpgtb
testb
ljmp
rorb
cwtl
fisubrs
enter
std
lret
idiv
pop
push
mov
push
andl
pushl
subl
jmp
sbb
cmp
icebp
inc
or
mov
cmp
jle
add
sarb
popf
pop
jb
in
cmc
pop
pushf
ljmp
push
mov
aad
das
fists
icebp
cmp
lahf
test
fwait
adc
orb
scas
xor
add
jae
scas
mov
insb
daa
mov
inc
cmp
push
das
sbb
rcl
cmpsl
sub
sbb
repz
sti
cmp
fdivrl
sbb
sbb
xchg
jmp
cmp
cmp
cmpsb
mov
sbb
dec
push
jl
jae
mov
test
sbb
rorl
sbb
sbb
push
test
lret
call
rorl
cmc
inc
add
jb
jmp
push
push
call
mov
mov
jmp
insl
shrb
mov
pop
pop
mov
mov
sarl
mov
add
cmp
sbb
outsl
sahf
fisttps
in
test
and
lahf
pop
jne
push
int3
xchg
push
sti
mov
sbb
mov
movsb
mov
adc
cmpsl
gs
add
sub
call
push
filds
jae
imul
sbb
fwait
into
and
pop
aam
rol
add
sti
mov
ret
add
xchg
or
stos
xchg
xchg
and
mov
loope
ret
shl
push
and
pop
dec
mov
fisubrl
stos
sahf
in
xchg
or
out
pop
mov
and
add
mov
jmp
call
out
cs
inc
ror
jecxz
xor
jb
add
mov
add
mov
rol
mov
add
popa
ret
andb
stos
shl
push
mov
add
out
loopne
and
mov
iret
cs
es
xchg
fwait
ss
xchg
repnz
pop
or
cwtl
dec
jle
lods
test
ja
and
insl
add
cld
mov
lcall
cmp
aaa
mov
and
or
xchg
inc
lods
add
dec
push
test
cmp
add
adc
lea
xchg
sbb
shlb
mov
add
icebp
dec
insb
or
in
xchg
movsl
cmp
inc
push
jle
rcl
sub
loopne
xor
loope
jmp
sub
adc
jl
cmp
push
mov
mov
add
cmc
ret
xchg
or
les
add
vmwrite
inc
and
in
in
movsb
in
or
adc
mov
dec
out
rcr
jbe
lods
cld
or
pop
jno
jg
adc
shlb
push
xor
shlb
sti
xchg
and
loop
das
test
es
cli
mov
pushf
test
mov
xchg
push
sbb
cmpsb
popf
cli
je
negl
xchg
push
pop
sub
jbe
xchg
mov
sub
popf
sbb
js
popl
xchg
lahf
mov
cs
aad
ret
adc
dec
sbb
cs
and
mov
inc
sbb
es
fwait
add
jmp
mov
pop
iret
xlat
lcall
push
lahf
aam
add
mov
add
or
jb
xchg
or
jno
ljmp
sbb
aam
pop
inc
sub
fcmovne
mov
xor
imul
push
lret
rcll
movsl
dec
xchg
mov
mov
add
mov
sub
sub
test
fcomp
fnstenv
dec
and
pop
repz
push
sbb
and
mov
lahf
or
in
mov
lahf
xchg
cs
stc
cmp
ljmpw
mov
mov
inc
jno
fisubrl
sbb
leave
shr
mov
ljmp
xor
inc
testb
enter
pop
loop
addl
add
movl
jmp
xchg
in
addr16
mov
dec
push
jmp
add
mov
add
mov
push
popf
cli
push
or
fldenv
sarb
idivb
sti
pop
int
add
pop
in
addb
jns
mov
jp
ja
push
inc
cmpsl
inc
std
push
les
repz
stos
or
call
imul
loope
xchg
enter
or
js
dec
in
and
xor
mov
daa
xor
xchg
xchg
dec
xor
and
shr
insb
push
push
fwait
jmp
test
jns
sbbl
in
inc
imull
leave
pop
in
movsl
leave
ljmp
cmp
movl
jmp
lahf
sbb
jnp
jbe
fisubrl
and
add
sbb
shll
mov
push
lahf
icebp
xor
jae
stc
adc
dec
push
ljmp
push
test
pop
loope
and
sti
xor
cmp
xchg
out
push
sub
aad
into
jb
mov
lds
vpandn
mov
push
xor
jmp
in
cs
aaa
mov
push
mov
push
cltd
mov
dec
push
icebp
push
mov
aad
dec
fistpll
push
add
int3
add
fcmovbe
or
mov
mov
out
mov
xchg
sbb
shll
or
mov
test
sub
add
xor
add
add
jmp
mov
repz
std
jle
dec
and
out
add
mov
add
test
push
xorb
rcll
ret
jg
dec
and
pop
inc
inc
ljmp
add
aas
ficoms
loopne
xchg
jo
xchg
and
aaa
ljmp
shl
mov
and
in
cmp
xchg
cmp
pop
mov
xor
fidivrs
div
rorb
nop
lock
in
jns
push
aad
dec
xor
out
jg
jg
pop
sbb
sti
ficoms
jnp
and
or
or
mov
aaa
outsb
clc
fsubrl
icebp
cld
adc
loop
xor
ret
cs
xchg
in
cmp
movl
cmpl
ja
jmp
push
pushl
push
push
pushl
pushl
pushl
pushl
call
jmp
mov
pop
mov
in
and
xor
add
add
jle
outsl
shll
mov
lds
shll
or
arpl
std
into
lock
push
iret
daa
or
mov
mov
mov
into
std
or
cltd
dec
push
or
cmp
daa
inc
mov
stc
lret
aam
mov
out
adc
mov
bound
sbb
shlb
push
ficoms
scas
sarb
lret
add
adc
pusha
push
stc
outsb
jle
int3
push
ja
not
lret
fwait
push
xchg
mov
out
adc
addl
sbb
xchg
mov
in
inc
fwait
lahf
sbb
cmp
lock
or
add
add
add
int3
stc
lret
stc
push
jns
dec
xor
jecxz
dec
test
add
adc
repnz
inc
mov
leave
or
inc
lods
fwait
imul
adc
or
fsubs
repnz
cmp
add
mov
dec
lds
jb
mov
stos
shrl
dec
pop
lret
push
movsl
outsl
pushf
pop
rcr
movsl
sub
repz
xor
adc
xor
ja
js
dec
push
xor
popa
xor
jo
mov
push
ret
popf
xlat
dec
or
movsl
mov
add
inc
inc
cld
jno
lods
js
mov
bswap
in
rorb
push
or
iret
pop
adc
mov
jmp
jg
xchg
jle
jg
mov
fstpt
cli
test
add
aaa
and
push
jl
int
aam
sbb
stos
ljmp
std
add
sbb
and
mov
aaa
add
testb
mov
in
fsts
and
sub
shrl
jg
adc
pop
xchg
addb
insb
xchg
icebp
push
cmpsb
xor
pop
andb
cmp
sti
lret
cli
mov
pop
inc
fnsave
xchg
test
jns
or
enter
scas
cwtl
mov
cmp
ljmp
pop
jge
aas
sub
inc
mov
pop
jl
je
xchg
cmpl
mov
jb
add
and
push
add
jmp
insl
and
sbb
ljmp
ret
stos
test
add
xor
or
or
and
rorl
dec
xchg
pop
xchg
or
xchg
sti
stos
mov
mov
lahf
pop
xchg
cmp
sahf
lea
push
mov
dec
pop
je
sub
push
scas
lcall
xor
pop
ffreep
lea
lcall
xchg
push
sbb
test
je
sbbl
loope
daa
pop
cwtl
mov
push
xor
test
int3
inc
jmp
rorl
jmp
clc
and
cltd
xchg
lock
add
in
sub
mov
xchg
sbb
fcoms
sub
and
dec
jmp
aam
dec
das
ljmp
sti
decb
sbb
mov
pop
xchg
add
add
dec
cmc
jae
pop
xchg
mov
jae
jo
or
shl
push
and
xor
js
mov
in
dec
push
xor
or
add
mov
negl
xchg
fucomi
mov
rcl
dec
adc
cmp
cmc
ja
jge
sub
inc
and
pop
or
add
call
mov
rclb
mov
in
pop
fnstsw
dec
and
push
aam
or
repnz
or
add
test
aas
sbb
in
stc
xor
mov
in
sub
push
cmpsl
jns
stos
push
pop
or
and
mov
mov
mov
sub
and
movl
movl
orl
mov
mov
mov
cmpl
ja
subl
jmp
push
call
jmp
ss
and
cmpsb
cld
fisubl
adc
int
ja
or
add
add
adc
out
insb
dec
ret
xor
sar
arpl
xchg
sbb
in
jecxz
mov
out
mov
lods
out
sub
push
or
sbb
sbb
scas
outsl
cmp
rcrb
jle
call
imul
mov
xor
cmp
sub
add
jge
jno
and
add
std
sti
push
fdivp
test
aas
or
jle
daa
scas
and
sbb
inc
inc
lods
sbb
movsb
and
mov
jnp
out
jmp
jmp
mov
stos
jb
repnz
jae
mov
jmp
pop
jno
sti
cld
sti
pop
idivl
popa
mov
pop
add
mov
mov
add
fmuls
dec
in
push
test
loopne
xchg
pop
adc
add
sbb
cmpsl
test
push
sub
dec
stc
repnz
fs
sbb
and
mov
insb
rolb
pop
mov
sub
in
adc
es
push
mov
mov
xor
sub
add
mov
ss
adc
fstpt
das
pop
nop
ja
stos
loop
fs
xchg
sbb
mov
lret
pop
mov
test
or
rolb
adc
shr
wbinvd
jnp
jnp
outsb
sbb
fimuls
jb
stos
pop
mov
dec
bound
mov
repnz
mov
xor
xor
div
mov
cmp
movl
jae
jmp
pop
mov
lock
std
pop
mov
inc
sarb
add
add
mov
and
mov
and
loope
les
cmpsl
jl,pt
ret
int3
imul
roll
call
pop
inc
inc
test
sahf
sbb
pop
adc
aaa
lds
jns
push
mov
xor
jae
sub
pop
pushf
cmc
inc
lret
and
rol
sbb
or
ss
mov
dec
pop
cmp
fidivrs
mov
adc
adcb
iret
fnsave
xor
xchg
mov
sbb
insl
cmp
xlat
mov
dec
in
xchg
cli
repz
xor
mov
jb
cmp
gs
inc
clc
loop
add
add
movl
add
jmp
adc
cmp
push
fildll
sbb
fsubrl
add
mov
add
rcr
dec
ret
lods
xchg
roll
out
dec
in
xchg
scas
test
pop
roll
sbb
mov
call
add
mov
xchg
push
and
pop
daa
mov
or
insb
and
sub
nop
xchg
aam
in
aas
cs
jmp
add
jno
std
inc
xchg
push
jns
inc
std
jne
sub
pop
mov
jge
add
fisubs
dec
xor
lods
push
in
sbb
inc
pop
inc
push
mov
ror
adc
dec
ja
stos
daa
mov
iret
mov
bound
mov
je
movl
add
movl
cmpl
jge
orl
jmp
push
call
movl
mov
mov
jmp
mov
idiv
pushl
into
outsl
mov
add
sbb
sub
mov
add
mov
sbb
cltd
add
mov
sub
test
sbb
pop
lcall
cmpb
pop
push
mov
clc
scas
aam
jno
dec
test
addl
mov
mull
xor
mov
push
shll
mov
xchg
mov
les
ficoml
lds
inc
ficoml
leave
and
cli
mov
int
stos
bound
idiv
mov
inc
sbb
inc
push
popf
hlt
jns
cwtl
loope
inc
xor
sti
inc
sub
mov
xor
mov
sub
imul
mov
and
jmp
push
xchg
ljmp
and
inc
aas
je
orb
add
inc
call
test
std
lcall
imul
xchg
xchg
aaa
inc
cltd
lahf
dec
mov
pop
imul
das
sahf
daa
stos
adc
and
adc
jae
mov
dec
lds
iret
jo
dec
aam
iret
cmpsl
add
icebp
xchg
xchg
imul
pop
sub
arpl
ljmp
mov
test
mov
sub
mov
add
push
inc
xchg
or
mov
xchg
xchg
in
out
inc
mov
out
out
aas
or
dec
sub
pop
add
mov
mov
andb
sbb
pop
shrl
hlt
xor
mov
mov
jmp
pop
or
mov
nop
pop
pusha
or
xor
add
ficomps
movsb
inc
pop
xchg
inc
mov
sbb
cmp
mov
and
xor
xchg
loop
call
and
imul
aaa
inc
or
mov
cmpsb
es
push
add
fcmovu
push
dec
mov
inc
cmp
int3
inc
mov
cmp
inc
cmp
int
sub
movsb
xor
cltd
sub
push
mov
push
mov
xchg
negb
cmp
push
mov
inc
mov
jl
jmp
mov
out
mov
or
dec
push
adc
jmp
cmp
mov
xor
cmpsb
jle
cltd
cmp
jbe
add
mov
mov
movl
jmp
shll
out
jg
cmp
sbb
je
mov
add
fs
loope
jle
out
nop
insl
lock
cli
les
cmc
sbb
shlb
shlb
out
jmp
cmp
push
sub
mov
mov
mov
adc
sub
pop
aas
jo
and
int
add
outsb
scas
stos
dec
push
mov
test
sub
jne
cmp
imul
cli
rcrl
loopne
in
push
imul
pushf
nop
pop
fmul
shrl
daa
jmp
sahf
add
aas
pop
cmp
or
imul
sbb
and
jmp
mov
dec
xchg
mov
movl
jmp
clc
fs
mov
fldenv
mov
mov
add
out
ds
mov
out
dec
in
mov
daa
mov
and
out
imul
adc
aaa
and
fistl
pusha
xor
cmpsl
ja
in
int
movsl
jne
add
add
adc
gs
add
adc
add
mov
jae
popa
sar
xor
mov
xchg
ret
push
testl
test
mov
enter
dec
lea
fisubrs
pushl
repnz
gs
adc
aaa
out
cli
sbb
fisubrl
aaa
ret
push
out
and
dec
sbb
adc
clc
loopne
push
mov
mov
jmp
inc
push
or
sbb
std
adc
dec
inc
lea
add
sub
repnz
jmp
das
push
into
or
pushf
xor
mov
xchg
scas
xor
jns
popf
jae
xchg
stos
test
mov
out
cmp
cmpsb
push
jp
inc
push
scas
mov
xchg
popa
cwtl
mov
aad
pop
in
negb
outsl
scas
pop
negb
movsl
adc
and
aam
cmc
push
cmp
mov
sbb
and
inc
int3
out
cmp
gs
mov
sub
inc
roll
sbb
hlt
pop
and
pop
shll
and
mov
mov
mov
leave
or
push
or
cmpsb
and
or
xor
and
jmp
add
xchg
iret
lahf
push
fbstp
or
testl
inc
cli
jge
sbb
pop
bound
mov
popf
test
jmp
pop
mov
sbb
cld
shlb
roll
lods
sub
mov
loopne
mov
imul
hlt
aas
loope
jp
and
dec
push
mov
xor
cmp
cs
jle
mov
out
fcomip
mov
xchg
rcrb
pop
or
mov
dec
popf
push
xchg
pop
es
jo
out
cmc
lret
jb
adc
jl
jne
mov
mov
xor
negb
std
mov
dec
sti
dec
cmp
add
mov
movl
movl
jmp
sbbb
in
jle
ljmp
test
add
mov
add
mov
fbstp
stos
or
in
aas
lods
or
sbbb
outsl
pop
mov
fs
pop
jmp
adc
mov
movsl
ret
pop
ljmp
jae
test
sbb
cs
push
scas
jle
rorl
arpl
xorb
add
je
repnz
daa
arpl
adc
jg
mov
xor
std
popf
ljmp
ret
mov
dec
je
mov
mov
pop
aad
xlat
sub
mov
adc
or
loop
mov
mov
and
jmp
lds
inc
fstpt
aas
sbb
fdivr
retw
pop
popl
add
test
sarl
shll
push
imul
fdivs
jnp
xchg
adc
es
cmp
rolb
ljmp
lret
xchg
shl
lcall
fwait
icebp
cmpsb
rclb
repnz
lret
inc
and
lcall
outsl
fisubs
call
loop
push
lret
pop
add
inc
leave
int
jge
mov
add
cs
cmp
je
pop
fstpt
inc
roll
jb
ja
xchg
sub
aam
loopne
lods
mov
ljmp
sub
imul
movsl
sub
shlb
shl
mov
cmp
jae
movl
jmp
pop
js
movsl
jbe
sti
mov
outsl
loope
or
add
jmp
or
sbb
or
data16
sub
mov
add
iret
jo
xchg
cmpsb
push
dec
sub
pop
mov
sub
ret
shr
popa
jne
ljmp
add
in
fisubl
inc
mov
mov
cld
ljmp
lret
mov
ds
ret
clc
fisubrl
jmp
push
popa
icebp
cmp
fimuls
or
cmpb
out
mov
jp
push
es
inc
sub
fwait
xor
xchg
dec
ret
jl
add
xchg
shll
xor
in
jg
jl
inc
ljmp
es
add
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
mov
jmp
mov
mov
sti
test
out
int
dec
scas
int
nop
add
mov
add
fstpl
nop
fdecstp
xchg
pop
mov
and
push
arpl
in
dec
movsl
sub
rcrb
aam
jge
push
jo
sbbb
or
xchg
pop
xchg
jmp
jno
or
fimuls
xchg
aad
test
xchg
sub
adc
sbb
nop
js
fsubr
stc
pop
dec
in
cmp
adc
xlat
mov
mov
jne
cwtl
inc
xchg
push
aad
rol
mov
push
test
rcrb
sub
xchg
jg
imul
adc
ss
cmp
popf
daa
test
sahf
mov
jle
jno
sbb
sub
movl
movl
mov
jmp
mov
ss
mov
cmc
jg
insb
xchg
add
mov
add
bnd
xchg
hlt
or
cltd
fcoms
imul
pop
pop
loop
add
jmp
scas
push
loope
scas
xchg
sarb
cwtl
add
sub
or
xchg
fcmovbe
sub
cmp
xchg
insb
jnp
mov
sub
fidivl
jae
push
scas
pop
pop
push
push
inc
bound
or
xor
cmc
mov
scas
adc
loop
jecxz
or
dec
gs
cld
mov
repz
mov
sub
jns
mov
stc
mov
pushf
sti
pop
insl
dec
push
inc
gs
xchg
mov
sti
mov
or
jmp
dec
daa
pop
aam
dec
mov
jecxz
jp
sbb
add
add
xchg
mov
mov
enter
dec
push
hlt
mov
sbb
add
jno
push
pop
fsts
xor
mov
mov
pop
xchg
push
mov
mov
dec
push
push
fdecstp
xor
lods
out
pop
ja
mov
loope
mov
incl
mov
mov
xor
in
ret
in
cmp
lret
mov
and
xchg
mov
insb
mov
insl
in
sarl
adc
imul
pop
lock
mov
or
push
fwait
js
jecxz
mov
or
xor
adc
std
dec
xlat
movsb
enter
pushl
jmp
enter
pop
xlat
fmull
mov
add
mov
add
and
adc
xchg
push
dec
mov
sbb
cmp
dec
mov
and
popa
push
xchg
xchg
sub
cmp
lret
scas
xchg
mov
xlat
xchg
sahf
jl
out
mov
fadd
fcmovnbe
cmpb
testl
cmp
test
fbstp
inc
or
pop
cmp
inc
fcomps
mov
xchg
mov
movsl
mov
sarl
into
addr16
mov
mov
subl
out
or
gs
incl
mov
sub
mov
jb
sbb
loop
gs
shlb
ret
pop
add
mov
mov
movl
mov
mov
jmp
mov
xor
scas
mov
rcrb
aaa
movsl
jg
add
mov
add
xchg
push
imul
dec
add
addr16
inc
gs
jecxz
push
and
pop
xor
jmp
iret
cmp
cmpsb
xor
arpl
jg
cwtl
fildll
aaa
dec
push
sbb
dec
cmp
xchg
ja
loop
fstl
mov
mov
mov
rcrb
inc
imul
test
lret
fiaddl
dec
pop
add
and
cli
xchg
jmp
jb
cltd
fxam
sbb
aad
enter
mov
jmp
loope
pushl
xchg
dec
sarl
pop
dec
sbb
and
jmp
icebp
push
ret
cmc
pop
xchg
mov
test
xor
add
mov
popa
inc
push
out
aaa
jnp
stos
cmp
int3
test
pop
stos
push
mov
push
scas
icebp
cmova
jp
cwtl
mov
add
std
inc
mov
and
add
adc
std
push
clc
inc
in
or
sub
xlat
sbb
push
bndstx
add
pushf
and
push
xor
xor
test
jle
mov
das
mov
add
int
js
sub
je
scas
push
iret
test
fs
xchg
pop
push
xor
bound
cmpsl
loope
aad
or
push
or
mov
es
inc
xor
xor
div
mov
cmp
jae
movl
movl
jmp
mov
mov
dec
sbb
xchg
int
xchg
add
mov
add
rcrb
jle
divb
xor
push
mov
fcoms
mov
fwait
inc
std
push
fimuls
frstor
imulb
pop
dec
addr16
sbb
xchg
add
loop
mov
testl
jnp
movb
lahf
ja
xchg
and
and
xor
out
loope
and
cmp
cmc
int
sysenter
pushf
insl
in
in
test
jmp
push
test
cmpsl
adc
adc
xchg
pop
adcl
mov
or
and
push
sub
jbe
mov
or
push
xchg
sbbl
inc
clc
push
jl
add
inc
fmull
imul
add
fsubr
fwait
mov
cmp
lahf
les
dec
push
dec
xchg
xchg
add
mov
add
xchg
mov
popa
ja
push
push
pop
in
jae
js
pop
add
push
test
push
mov
inc
stc
repz
cmpsl
push
mov
sub
leave
push
cmp
mov
adc
outsl
adc
mov
mov
sbb
pusha
test
dec
bound
loopne
add
pushf
lea
in
pop
aad
mov
inc
adc
jo
loopne
in
jae
test
jnp
mov
lret
and
inc
inc
out
mov
mov
lock
push
cld
jmp
dec
mov
inc
lods
jle
push
mov
xlat
movsl
ret
int
add
or
adc
inc
fmull
mov
xor
mov
sub
jmp
pop
lods
fidivs
jae
out
pop
sbb
or
inc
xchg
add
mov
add
stos
sti
sub
mov
and
mov
xchg
and
int
mov
xor
xchg
pusha
sbb
xchg
jmp
or
repz
loop
push
inc
pop
push
outsl
inc
lock
mov
aad
mov
pop
adc
dec
dec
cld
call
and
pop
andl
dec
and
and
cmc
pop
adc
test
and
inc
aad
test
inc
jbe
push
rcll
adc
mov
sbb
inc
cwtl
jae
inc
addr16
sub
sub
cmp
xchg
enter
imul
jmp
loope
fwait
pop
mov
out
sbb
xor
add
sub
loop
stos
pop
jbe
idivb
cvtpi2ps
insl
adc
adc
daa
test
test
push
aas
xchg
xchg
push
push
add
movsb
mov
xchg
dec
jo
cmc
xchg
pusha
add
mov
jge
loope
ret
mov
inc
insb
sub
lret
pop
sub
push
arpl
ljmp
in
cli
repz
inc
inc
lret
sbb
insb
dec
jae
jns
xchg
xchg
mov
pusha
fwait
rorl
ds
mov
push
nop
add
cld
cmp
and
mov
movl
jmp
daa
pop
push
jnp
imul
add
dec
sub
jg
arpl
dec
mov
pop
cs
dec
fsubs
inc
pushf
addr16
out
je
test
cmp
nop
addl
xor
add
sbb
inc
stos
arpl
aas
xchg
xchg
add
stc
adc
in
aam
or
pushf
fdivr
ficompl
fnsave
push
popa
aaa
iret
cmp
adc
push
and
inc
out
dec
stos
jns
dec
icebp
mov
lods
mov
xchg
lds
ss
ss
outsb
insl
stc
sbb
in
aaa
mov
aaa
push
xor
xchg
nop
jno
cld
rorb
movl
mov
jmp
or
aam
aad
pushf
fnop
out
xchg
sbb
mov
ret
push
cwtl
add
mov
add
les
jnp
inc
lcall
call
and
lret
add
cltd
imul
push
push
mov
mov
movsl
push
popa
call
push
cmp
repnz
aaa
mov
out
std
pop
sahf
das
mov
mov
insl
fs
xor
mov
fistpll
pushf
mov
stos
cmp
std
dec
int3
sbb
or
ffreep
sbb
xor
jmp
cmp
das
dec
leave
sti
lock
jl
aas
hlt
adc
sbb
insb
sub
jns
das
pop
adc
fs
pop
push
lret
mov
or
xor
and
jmp
dec
imul
pop
shll
mov
mov
add
lcall
nop
hlt
daa
pusha
mov
pop
mov
das
mov
push
jae
xor
cmp
test
adc
test
les
out
jge
out
int
mov
mov
xor
mov
imul
push
xchg
and
shll
lds
test
popf
sub
bound
mov
testl
inc
mov
test
sub
subb
cmp
lods
aam
push
in
jns
imul
jmp
pop
sub
mov
jno
and
inc
push
out
inc
arpl
mov
hlt
cmp
or
mov
mov
movl
mov
mov
and
jmp
jb
jnp
jg
repnz
shl
pushf
sub
cltd
add
mov
add
dec
scas
push
jo
insb
aaa
movsl
mov
insb
and
push
cmpsl
mov
bound
popa
mov
push
mov
or
push
lret
ret
insb
scas
pop
lock
lock
push
xchg
fisubs
pop
test
mov
mov
stos
in
cmpsb
xchg
mov
je
jmp
add
xchg
mov
cmc
nop
cmc
pop
adc
jle
xlat
cmp
dec
int
in
sub
adc
xor
mov
and
mov
pop
mov
aam
jbe
inc
shlb
adc
mov
shlb
shl
mov
addb
cmp
jmp
imul
std
mov
jg
mov
popf
imul
add
push
jo
imull
cltd
mov
das
daa
ficompl
int3
add
iret
jmp
ficompl
push
inc
fcmovne
add
fdivl
add
mov
mov
test
lods
lock
aam
fldcw
push
sub
sub
in
sahf
lods
sub
scas
cmp
insb
mov
arpl
nop
add
jb
cmp
pop
nop
int
fmuls
push
test
push
adc
jp
sahf
iret
mov
mov
enter
and
jmp
bound
add
in
loop
add
movl
jmp
or
int3
mov
in
popf
ficomps
fwait
add
mov
add
fisttpll
out
mov
xchg
pop
mov
cmp
in
mov
inc
dec
jns
cmp
sub
ficomps
sub
xor
or
mov
xchg
leave
pop
je
lcall
inc
mov
lret
mov
mov
lock
adc
xchg
or
jp
cs
nop
fcmove
aas
push
sub
inc
hlt
shl
in
icebp
dec
scas
jnp
fxtract
or
dec
and
ss
scas
add
jae
and
xchg
hlt
icebp
push
jne
pop
and
insb
in
stc
jecxz
and
mov
mov
enter
push
add
or
pop
stc
das
test
stc
repnz
push
mov
add
jmp
xchg
not
fyl2x
lcall
sbb
dec
fistps
mov
add
notb
into
js
pop
lret
dec
push
cmp
mov
orb
push
lahf
mov
dec
push
xor
xor
jl
mov
push
or
cltd
and
addb
test
jp
test
and
xchg
jp
or
les
std
ds
pop
jns
inc
mov
cld
or
ljmp
adc
cmpsl
gs
stc
cmovle
jno
cld
aas
lock
imul
mov
lret
sbb
clc
pop
in
xlat
xchg
add
fmul
loope
call
repz
clc
push
jl
add
inc
fmull
imul
mov
jmp
shlb
fcomip
mov
or
or
mov
add
dec
pop
cs
xchg
mov
movsl
scas
in
inc
sub
nop
dec
jbe
mov
and
or
test
lds
pop
arpl
data16
pop
push
imulb
mov
mov
fs
jl
les
xchg
sbb
inc
lahf
lret
xor
fdivrp
repnz
mov
push
adc
push
xchg
push
mov
dec
sarb
jmp
xor
mov
sarb
jge
or
inc
mov
stc
cmp
xchg
dec
lods
push
jbe
andl
ret
bswap
jne
or
stos
push
dec
mov
insl
int3
xchg
in
sbb
push
jae
xor
in
sub
mov
xor
mov
sub
imul
jmp
lock
ret
sti
jae
push
xchg
dec
sub
add
add
and
ret
sbb
int
sbb
xor
jp
and
add
mov
addr16
gs
sbb
inc
jge
stos
jp
jb
dec
loop
cwtl
or
sbb
setnp
out
fldenv
pop
and
xor
in
jle
in
into
mov
fistps
cmc
xchg
mov
or
dec
mov
dec
mov
xchg
mov
shll
sub
push
insb
and
fisubs
mov
xor
mov
push
lods
push
inc
or
pop
cli
mov
sbb
pop
and
push
xchg
cmp
jge
gs
cmp
fwait
mov
and
jmp
lahf
mov
sarl
popf
push
pop
jno
pop
ficomps
mov
add
imul
js
sahf
mov
sti
out
hlt
insb
leave
bound
mov
mov
loopne
xor
cmpsb
or
mov
add
push
xor
inc
in
addr16
mov
imul
pushf
scas
enter
cwtl
or
lds
stos
cwtl
fucomp
pop
xchg
imul
cmp
fwait
cli
jae
xor
nop
mov
xor
xlat
and
cmc
lahf
hlt
and
dec
pop
mov
xchg
js
mov
mov
xchg
movsl
xor
fsubp
dec
xchg
loop
mov
sbb
and
mov
out
scas
cwtl
push
xor
incl
leave
add
add
jg
pushl
imul
add
filds
inc
fcompl
sbb
cmp
gs
sub
dec
bnd
in
data16
pop
dec
or
dec
mov
imul
cmp
and
andb
xlat
and
sbb
inc
push
outsl
sbb
mov
mov
jl
mov
cmp
sub
cmpsl
in
pushf
and
fistps
nop
add
stc
pushf
nopl
mov
mov
call
mov
test
cmpsl
mov
dec
pop
push
mov
or
jg
out
sub
cmp
pop
push
adc
int3
jmp
xchg
rcrb
aad
arpl
sbb
jnp
popf
imul
add
adcb
mov
push
es
push
pop
aaa
lds
lret
enter
jmp
ficompl
adc
dec
cmpsl
shlb
insb
ret
imul
lods
pop
mov
mov
in
scas
cmc
cmp
test
repz
sbb
stos
dec
fs
mov
pop
adcl
dec
sub
addr16
mov
ss
jae
push
jle
pop
pop
sbb
in
in
cwtl
clc
inc
adc
ficompl
std
xchg
mov
imull
das
scas
mov
sbb
int
int
fwait
xor
es
adc
insl
mov
push
jmp
movl
pop
imul
add
mov
add
loop
repz
das
orw
or
xchg
mov
adc
xchg
or
aam
adcl
nop
cmc
or
add
jg
popa
xchg
push
mov
ja
pop
and
mov
lods
adc
and
fsubrl
xchg
sar
push
pop
dec
sar
cld
ja
mov
sbb
jmp
cld
stc
pop
ffreep
cmp
movl
adc
push
sub
jne
adc
pop
es
cmp
cmp
dec
test
shl
cmp
and
int3
push
and
aas
hlt
mov
mov
adc
add
add
std
fbstp
and
mov
add
add
roll
jl
jmp
les
imul
loop
in
push
pop
mov
sub
stos
loop
adc
mov
in
aaa
jb
outsl
pop
or
and
test
add
add
jle
and
repnz
int
xlat
push
pop
pop
sarl
lret
xor
and
por
fiaddl
mov
mov
lret
aad
or
sbb
fwait
repz
pop
icebp
sbb
cmp
insb
push
dec
mov
push
movsl
add
jmp
cmp
add
popa
xor
add
xor
jnp
jnp
jnp
hlt
xchg
repz
cmpsl
ret
push
mov
add
cmp
push
inc
lock
mov
dec
cs
fistpll
hlt
dec
outsb
stos
inc
loope
mov
js
or
push
loopne
add
add
inc
cmpsl
fadd
inc
inc
cmp
push
dec
inc
mov
std
or
arpl
mulb
je
pop
aas
mov
subps
push
jnp
mov
adc
outsb
int
adc
out
jae
div
inc
dec
and
sub
jmp
cmp
je
inc
testl
mov
cmp
fsubrs
pop
movsl
add
pop
icebp
mov
fisttpl
ljmp
push
test
dec
cmp
test
jo
cmc
dec
mov
inc
lock
jmp
mov
mov
add
fisubrl
mov
add
xor
mov
sub
sub
cmp
xchg
test
out
adcb
mov
or
dec
mov
adc
pushf
xor
xchg
jle
dec
enter
cmc
inc
dec
sub
xor
sti
into
addr16
arpl
cmp
push
mov
orl
xor
lahf
jecxz
pop
mov
cmp
add
cmp
fimull
inc
loope
rcll
jmp
adc
fdivl
loop
xor
sbb
push
adc
or
fnsave
test
jmp
pop
jb
jmp
cli
das
pushf
fcomp
sti
das
cmpsl
or
loop
and
mov
add
mov
add
mov
dec
mov
clc
sbb
sub
cli
xor
jns
and
lods
and
or
sahf
and
ja
les
cmp
lds
in
out
imul
dec
fisttpll
cmp
lgs
dec
add
add
dec
push
into
inc
xor
xlat
push
add
andl
sub
shll
mov
jg,pt
or
fistpll
cmp
mov
fistpl
mov
imul
jo
push
push
pop
jbe
or
jno
cmp
mov
jbe
push
loopne
fistl
mov
jo
add
mov
or
or
push
lea
push
lea
push
call
jmp
xor
aaa
or
ljmp
out
nop
test
mov
add
enter
sbb
cwtl
repnz
mov
int3
mov
pop
leave
test
cmc
mov
jno
jecxz
fwait
mov
inc
jno
dec
fnstcw
cmp
outsb
adc
jp
mov
sub
sbb
and
imul
outsb
gs
jecxz
xor
dec
lods
in
aas
mov
lea
je
lea
fs
repz
cmp
push
jl
out
inc
add
push
cmc
jl
push
popa
test
dec
push
sub
pop
orb
push
xor
fcmovnb
in
xor
notb
mov
mov
xor
lea
push
push
mov
mov
xor
lea
push
call
push
lea
push
jmp
pop
adc
decl
sub
pop
ret
in
movsb
add
mov
add
xor
fiaddl
or
bswap
cwtl
push
or
clc
cmp
sbb
cmp
movsl
mov
notl
hlt
cmpsl
jbe
xchg
dec
out
insl
or
mov
daa
jle
lds
mov
aad
or
pop
jnp
push
and
push
xchg
cmp
fwait
dec
cmp
inc
je
leave
inc
add
shlb
test
stos
pop
adc
imul
ja
adc
int
sub
jmp
js
pusha
adc
cmp
adc
lea
push
call
mov
jmp
mov
jg
int
icebp
and
and
mov
mov
add
inc
sarb
cmp
push
lcall
dec
cmp
add
cmpsb
lea
ret
test
cmc
dec
mov
test
adc
pop
rcrb
lods
lahf
push
cld
cmp
add
movswl
insb
push
add
or
mov
inc
and
lods
add
clc
int
aas
daa
or
mov
test
xchg
fistpl
or
sub
mov
shl
test
call
sub
mov
mov
xchg
aas
pushf
adc
loopne
imul
jno
out
dec
jno
mov
adc
mov
rorb
add
add
pop
or
lahf
mov
mov
add
or
sub
inc
xchg
mov
fs
data16
data16
cmp
sub
xor
lods
xor
ljmp
mov
and
lds
std
jo
out
ret
test
ljmp
fwait
dec
test
push
pop
hlt
mov
leave
test
mov
cmc
out
cld
das
push
call
jb
movsb
fimull
cmp
jbe
dec
mov
out
je
xchg
push
cmpl
adc
cmp
lds
dec
sub
or
push
inc
sbb
cmc
add
pop
iret
imul
push
scas
cs
mov
xor
sub
pop
pop
pop
leave
ret
xor
or
or
mov
push
sbb
push
sbbl
mov
or
movl
jmp
jp
inc
rcrb
in
add
imul
add
test
loop
push
xchg
das
js
clc
mov
test
aaa
xchg
or
push
mov
sub
sub
or
sbb
test
pop
lret
jne
incb
add
das
xchg
sub
enter
jmp
lcall
repnz
mov
mov
jbe
jge
pusha
inc
cmp
inc
pusha
enter
movsl
jbe
push
fimull
mov
mov
movl
lret
loop
sub
mov
inc
xchg
or
mov
inc
aas
fistpll
jbe
jmp
sub
rcr
or
jne
mov
mov
movzwl
sub
mov
xor
cmpl
jge
xor
jmp
pushl
pushl
pushl
push
call
div
jmp
lock
out
and
dec
arpl
xchg
xor
add
mov
lcall
xchg
jo
adc
lret
push
imul
and
insb
sub
sub
adc
stc
out
xchg
inc
adcb
xlat
mov
test
lds
jg
ljmp
mov
add
inc
mov
mov
rorl
or
enter
xchg
ljmp
aam
aaa
jae
dec
push
popa
mov
push
sti
adcb
movsb
inc
lods
call
xor
jbe
or
rorl
into
adc
mov
push
cmp
push
inc
dec
test
outsb
xchg
pushf
scas
mov
mov
xchg
mov
imul
rolb
add
hlt
and
out
push
xor
add
in
inc
pop
sub
iret
push
and
imul
mov
or
rcrb
fsubs
sarl
mov
test
jg
sub
aas
out
push
and
scas
mov
add
les
sub
nop
scas
push
lds
xchg
fcomps
and
das
jo
adc
or
mov
jle
mov
xor
mov
ss
leave
sub
cld
mov
flds
sbb
outsl
std
ror
es
cmp
lcall
lea
fsubrp
jnp
sbb
adc
or
rolb
add
fimuls
clc
cltd
std
sti
decl
fsubrl
fisubrs
inc
gs
test
add
ss
dec
pop
ret
mov
adc
inc
inc
push
shlb
jle
mov
jo
dec
ret
hlt
arpl
push
xlat
pusha
and
arpl
into
lret
jnp
or
cmp
ret
xchg
or
mov
cltd
mov
add
das
xchg
mov
jo
pop
test
dec
out
ljmp
cmp
subb
fisubs
popa
adc
jae
jnp
fmull
jb
xlat
stos
cwtl
negb
leave
adc
int
std
insl
gs
jl
stos
lret
mov
test
addb
gs
rolb
sbb
shll
aaa
pop
insb
pop
adcb
icebp
mov
jmp
mov
sub
mov
mov
or
jmp
and
dec
sub
mov
fistpll
fstpl
add
mov
xor
sarb
out
test
inc
pushf
dec
add
mov
lahf
jp
inc
xchg
lcall
and
mov
nop
pop
es
loop
dec
mov
ss
sti
out
inc
xor
shrb
loop
xor
cmp
dec
sbb
cs
cmp
dec
add
test
adc
xor
or
das
xor
addb
mov
jae
into
adcb
mov
es
mov
sub
mov
clc
mov
ja
pushf
popa
lret
sub
jne
add
fisubrl
testl
add
add
jmp
inc
add
cmp
add
fcmovnbe
ljmp
call
call
add
mov
add
das
daa
xchg
ret
pusha
fistpll
jb
push
jnp
mov
jnp
out
push
push
xor
es
push
push
inc
sub
push
repnz
adc
mov
xlat
adc
repz
je
scas
std
xchg
rolb
aam
inc
mov
jecxz
lahf
push
popf
sbb
and
pop
jge
mov
outsb
dec
jl
sub
push
and
lcall
scas
repz
mulb
adc
sbb
cmp
xrelease
sub
andb
sbb
ds
adc
sub
mov
adc
fisttpll
cs
rcr
or
jne
div
jmp
xor
mov
mov
dec
push
xchg
or
mov
mov
inc
dec
cltd
xor
adc
and
ficompl
fnstenv
mov
pop
mov
inc
sub
dec
imul
addr16
mov
mov
fcmovnu
dec
aas
rcll
jp
push
sarl
push
les
mov
ret
add
cmp
push
push
pop
hlt
xchg
lods
pop
dec
data16
ret
push
fnstsw
pushf
cmp
cmp
out
in
or
clc
js
rcrl
les
cmp
mov
bound
mov
mov
fldcw
ret
les
mov
pop
lods
sub
or
and
insb
mov
jmp
nop
fs
jge
cmp
xor
stos
add
mov
sbb
dec
outsb
pop
lock
adc
mov
cmp
inc
add
adc
lret
xor
mov
push
pop
xchg
pop
cmpsb
cli
movsb
push
pop
std
aaa
xchg
pop
inc
mov
xchg
push
stos
sub
pop
test
imul
pop
test
aaa
frstor
mov
push
insl
mov
jne
cmp
dec
ljmp
out
mov
jg
cltd
bound
std
mov
sbb
or
out
push
fbstp
and
mov
mov
sub
cmpsb
mull
bnd
into
push
pushf
sbbl
les
jne
jp
mull
mov
mov
mul
add
jb
cmp
jmp
enter
mov
jne
mov
cli
stos
add
mov
in
jge
enter
scas
jno
mov
xor
jp
jle
xor
cmp
cli
xchg
dec
pusha
leave
mov
mov
shll
adc
lahf
cmpsl
lock
pop
aaa
lock
lods
mov
push
outsl
and
mov
inc
ljmp
push
push
fucomi
cmp
decb
scas
and
lcall
pop
pop
shll
push
mov
test
mov
inc
cwtl
stos
sbb
mov
mov
fwait
jecxz
sar
jecxz
fildll
pop
push
loopne
mov
repnz
adc
xor
adc
mov
push
pop
jo
stos
add
icebp
cld
adc
dec
or
cli
aad
lret
ja
jmp
enter
mov
orl
mov
xor
add
out
mov
add
mov
xchg
scas
out
stc
xchg
push
xor
adcb
mov
mul
or
cmc
clc
push
xchg
or
sub
dec
lahf
push
pop
mov
mov
shrl
test
dec
rorb
iret
pop
out
stos
cmp
mov
fstpt
jns
aaa
cmp
repz
cmp
std
or
nop
sbb
in
xchg
call
in
ljmp
adc
sub
fistps
aam
add
lock
insl
jg
int
cld
jb
xchg
xchg
roll
insl
rolb
das
mov
mov
xlat
data16
jnp
orb
add
cmp
jbe
dec
xor
jmp
scas
push
mov
jae
pushf
loopne
jae
enter
add
mov
repz
ss
call
xchg
addb
mull
lods
sub
push
hlt
mov
mov
call
shrl
pop
stc
mov
shrl
sti
push
test
hlt
jp
mov
inc
push
rol
inc
pop
andl
jns
push
in
negb
int
or
pop
jbe
movsl
hlt
xchg
clc
sbb
push
inc
stc
lods
sub
bound
rcrb
add
push
lret
cmp
dec
hlt
sbbb
inc
hlt
adc
jnp
lcall
out
cmp
aas
and
mov
push
mov
xchg
add
iret
fstps
nop
pop
ror
push
xor
ret
sub
add
jb
scas
ds
into
cmp
xchg
add
add
pop
pushf
push
mov
out
imul
aaa
add
sub
inc
push
stos
add
mov
in
addr16
cmp
push
rcll
test
ret
inc
mov
lret
mov
mov
add
and
loope
add
ja
jb
fmul
imul
push
mov
test
sbb
and
imul
jg
and
sbb
push
push
fs
lock
lock
nop
aad
mov
push
adc
push
fxch
push
fisubrl
pop
mov
fwait
push
popa
ret
pop
outsb
iret
inc
pop
les
sub
pop
pop
jmp
sub
mov
lds
fsubrs
add
inc
push
mov
pop
mov
ret
sub
nop
cld
nop
jno
xchg
jge
fsubl
pusha
xchg
mov
bnd
mov
adc
fucomip
mov
insl
mov
dec
repnz
aaa
inc
mov
mov
or
jmp
fnstenv
rclb
dec
rorl
aam
mov
jne
andb
dec
dec
into
jo
sub
je
and
out
mov
push
mov
dec
pop
es
push
nop
std
jecxz
sub
fists
daa
jl
mov
out
into
or
add
ficoms
rorb
push
js
roll
lcall
push
push
push
outsl
mov
pop
ret
push
mov
sub
push
jmp
or
inc
out
stos
int
cli
stos
mov
pushf
scas
add
test
add
adc
sbb
mov
jno
mov
mov
inc
lods
std
pop
cmc
rcrl
lds
pop
nop
xchg
fcmovnu
jno
pop
mov
hlt
push
jne
mov
jmp
movzbl
loopne
mov
gs
out
mov
cmp
push
aad
jns
cmc
cwtl
das
inc
jno
dec
mov
rorl
lret
fs
mov
xchg
sbb
mov
or
dec
add
into
dec
loop
adc
pop
insl
xor
loopne
push
rcrl
xchg
insl
mov
hlt
mov
mov
aad
repnz
call
in
sbbb
pusha
std
sti
sub
inc
clc
pop
sub
cmpsl
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jae
cmpsl
cmp
mov
fidivrs
inc
mov
add
adc
xor
das
or
xchg
xchg
test
xchg
adc
mov
sbb
cmp
jmp
push
arpl
lea
or
push
adcl
lcall
mov
pop
aam
decb
jns
push
cmp
ret
and
ficoml
nop
mov
cltd
mov
push
mov
test
cmc
sbb
rorb
jnp
xor
ret
imul
add
xchg
and
movups
sbb
outsb
adc
mov
inc
rclb
add
add
inc
aam
and
add
inc
fcom
add
add
rolb
add
mov
ja
lret
ljmp
in
mov
add
scas
pop
xor
or
push
mov
aad
mov
sbb
push
xchg
xor
pop
mov
xor
jecxz
icebp
jmp
pop
test
loop
fwait
or
cld
in
push
xchg
pop
stc
pop
sti
aad
sub
lods
pushf
daa
push
adcb
test
mov
hlt
and
fcomps
adc
pandn
ret
aas
clc
and
jns
xor
add
fucom
mov
push
rorb
repz
stos
ficomps
rorb
xor
icebp
fwait
mov
lcall
jne
push
cmpsb
add
add
rolb
add
mov
pop
mov
std
adc
and
ror
xchg
mov
add
sub
pop
push
mov
pusha
pop
jo
cs
xchg
jb
loope
jo
fwait
adc
cld
mov
or
fsubs
pop
hlt
mov
int3
add
cmp
test
xchg
pop
stos
push
sub
popa
ss
jecxz
xchg
cmpsb
cli
sbb
in
out
xchg
in
pop
adc
jae
sti
in
cmp
and
or
mov
stos
mov
jbe
loop
fbld
inc
adc
and
jl
cs
xchg
pusha
add
mov
xchg
iret
in
lcall
shl
mov
mov
jmp
cwtl
add
cmpl
in
addr16
add
test
add
ja
mov
das
jbe
gs
rcl
xlat
sbb
xor
addr16
repz
fidivl
dec
lods
repz
mov
lods
add
jmp
iret
cltd
jae
xlat
cmp
or
clc
xor
sub
jp
cmpl
xor
push
add
je
data16
lods
mov
xchg
cmp
sbbl
les
adc
dec
arpl
adc
mov
into
sub
mov
enter
aaa
adc
pop
lock
enter
int
xchg
int3
daa
adc
mov
mov
or
sub
mov
jmp
daa
repz
repz
andl
cmp
mov
add
push
addb
sbb
int
jae
push
sbb
lahf
jnp
fucomp
imul
repnz
ror
inc
out
mov
in
cmp
sbb
jp
jle
clc
xor
lods
push
fistpll
pop
movsb
push
mov
inc
pop
mov
pushl
mov
pop
add
push
inc
or
das
fistps
mov
std
imul
adc
xor
imul
mov
xchg
push
out
stos
andl
xlat
push
stc
xchg
enter
jbe
add
or
out
push
mov
rorb
hlt
sub
add
jmp
xchg
push
fbstp
inc
in
je
sub
mov
add
adc
jl
jne
lret
and
jmp
and
sbb
push
mov
fldcw
xor
jno
push
fnstcw
inc
mov
lock
push
fmull
jae
mov
mov
push
pop
outsl
out
jmp
cmpsb
ss
mov
sbb
or
add
stos
sbb
pop
xor
xor
dec
sub
jl
hlt
into
out
adc
inc
or
and
jb
push
dec
subl
add
xor
div
and
mov
jmp
dec
ret
dec
xchg
lret
push
sub
cmp
cld
jp
mov
add
loope
cmpsl
insl
loop
and
stos
inc
xor
adc
imul
mov
shl
cmp
add
xor
jmp
sub
aas
es
jae
leave
pop
ss
movsl
and
xchg
jbe
pop
mov
xlat
loopne
scas
jecxz
inc
mov
mov
adc
repz
inc
jle
lods
and
xchg
lock
jno
repnz
mov
jl
rclb
or
mov
insb
mov
fcmovnbe
mov
jns
cwtl
ds
lods
rorl
lods
jno
mov
dec
cmp
lahf
inc
mov
pop
xchg
dec
push
and
push
fildl
add
add
sub
mov
mov
or
xor
mov
jmp
jmp
cmp
jge
into
jge
mov
fdivl
add
sarl
jbe
or
cmp
xchg
cwtl
adcl
cltd
aas
inc
je
xor
out
lods
out
call
jbe
push
out
xlat
and
inc
cli
dec
dec
dec
test
pop
and
testl
ret
lahf
sbb
cmc
out
sbbl
loope
ret
push
cmp
rolb
jge
sub
insb
aam
adc
xchg
data16
lods
xchg
cwtl
daa
mov
mov
jg
mov
cmp
mov
cmp
shl
pop
aad
call
ficoms
ds
push
fwait
mov
inc
loopne
inc
add
movl
movl
mov
mov
sub
or
jmp
jo
mov
fildl
adc
or
xchg
test
add
pop
xchg
scas
add
pop
call
xor
fmull
cmp
sub
add
stos
fdivs
jo
mov
ljmp
mov
push
cmp
sub
stos
test
jae
and
dec
es
pop
jo
sar
mov
mov
sbb
outsb
jno
push
sub
mov
pop
std
xor
sar
lock
notl
dec
sub
scas
dec
rol
jo
sbb
push
fldcw
cmp
aaa
fcomps
in
iret
packuswb
or
addr16
sahf
mov
xor
jmp
nop
sub
lods
fwait
dec
fisubs
mov
add
cltd
pop
or
rol
loop
mov
push
cwtl
insb
pop
or
xor
cmp
push
dec
dec
and
inc
dec
movb
test
dec
add
int3
mov
aad
arpl
test
inc
push
je
jb
inc
cmp
fistpl
jp
fdivrl
jno
cltd
pop
push
and
enter
arpl
bsr
push
mov
jo
jg
sti
dec
lcall
jb
or
sahf
std
push
pushf
fcoms
pop
jo
xchg
mov
mov
aas
xchg
push
sbb
ret
add
mov
mov
mov
imul
jmp
test
std
fstpt
ret
mov
mov
add
xor
rorl
xor
mov
cmp
mov
loope
in
cmpb
add
xor
popf
jo
xchg
addr16
popa
into
fldt
mov
and
sahf
pop
or
push
mov
sub
pop
or
lods
sahf
js
out
sbb
fidivl
mov
daa
icebp
xor
sub
and
vpcmpgtb
aam
or
adc
andl
pop
lret
sub
in
or
nop
xchg
xorb
dec
or
cltd
sbb
xchg
sub
repz
pop
aam
and
loopne
les
adc
jl
add
test
add
and
cltd
cmp
jecxz
cmp
mov
outsl
roll
enter
jo
pop
dec
cmc
daa
dec
repz
inc
adc
inc
ret
cmp
xor
mov
adc
pop
or
mov
push
adc
sub
out
pop
jnp
mov
push
mov
das
mov
push
or
cltd
lret
xchg
xor
cmp
push
adc
gs
pushf
sahf
mov
push
cmpsb
inc
std
js
push
cmp
sub
pop
mov
loopne
cmp
pop
rorl
push
es
xor
lret
mov
jmp
xchg
pushl
aam
lahf
xchg
sbb
and
add
test
add
add
fwait
int
jmp
push
xor
bound
out
sarl
xor
dec
mov
mov
or
into
pop
fwait
mov
push
pop
mov
adc
lods
xchg
pop
or
push
sti
xchg
pop
push
inc
ss
or
pop
pusha
adc
and
lcall
mov
das
jl
mov
stos
fldcw
mov
iret
fwait
lods
outsb
orb
sbb
and
pop
rcll
cmp
pop
test
cmp
adc
jg
out
xor
add
add
xlat
xchg
rcrl
dec
pop
mov
test
add
lret
lea
mov
mov
lahf
clc
or
mov
xchg
or
mov
fidivs
mov
fmuls
mov
call
sbb
dec
lock
lds
xlat
loopne
and
mov
enter
pop
jae
ss
int
fucom
pop
cmp
and
dec
stos
rep
cltd
sti
mov
push
and
and
adc
ret
xchg
pop
ljmp
call
pushf
mov
mov
cmp
lcall
fcmovbe
test
push
sub
lods
dec
mov
mov
add
push
or
imul
mov
add
jmp
scas
cmp
scas
popf
mov
stc
lahf
adc
mov
add
test
and
and
cmp
jmp
cmp
jecxz
pop
inc
out
imul
push
nop
adc
inc
sbbb
les
jge
ss
sbb
test
loope
jb
adc
xlat
inc
jae
dec
adc
lock
rcll
sbb
mov
in
or
movl
mov
aaa
outsb
xor
dec
cmp
outsl
dec
and
inc
xchg
or
mov
fdivr
xor
daa
pop
sbb
loop
mov
add
or
cmpsl
fsub
test
xchg
fdiv
int
and
fstpl
orl
push
adc
dec
jns
push
js
or
inc
or
add
mov
mov
jmp
mov
xchg
add
std
mov
stos
xchg
xchg
sbb
stos
or
sbb
add
test
add
mov
stc
dec
and
push
fiaddl
add
jnp
fistps
js
subl
or
negb
push
adc
xchg
testb
int
mov
adc
je
push
pop
mov
mov
mov
mov
mov
andl
jge
mov
adc
cmp
fnstenv
add
add
ljmp
ret
out
or
adc
call
push
in
int
mov
mov
nop
int
repnz
mov
cli
xor
div
mov
jmp
sub
mov
push
das
std
insb
ret
divb
data16
jo
mov
add
pop
jle
loope
aam
jnp
inc
lock
fwait
bnd
shr
ffree
inc
mov
shrb
push
and
lahf
sub
sub
mov
cld
cmc
inc
iret
mov
in
cmpsl
mov
and
mov
add
pushf
sbb
into
in
in
jbe
add
pop
dec
pop
jo
lds
cmp
dec
outsb
push
ret
xchg
test
scas
mov
dec
jae
shl
cmp
enter
cwtl
lea
ja
jl
sti
pop
xchg
dec
ret
sahf
ljmp
add
inc
and
mov
push
cmc
sub
dec
jl
enter
cld
cmpsb
ret
mov
jmp
ret
adc
add
enter
mov
imul
mov
sub
add
xor
div
mov
jmp
mov
fcoml
or
lahf
mov
mov
add
in
dec
in
je
pop
push
pop
das
fprem1
sub
pop
dec
pop
stc
fidivrs
out
mov
pop
stc
test
popf
jne
int3
bound
inc
icebp
outsb
inc
xchg
mov
loop
adc
fcmovbe
sub
and
cmp
pop
fimull
cwtl
sbb
aad
xchg
jb
adc
ja
pop
bound
push
stos
mov
mov
in
scas
out
adc
pop
mulb
xor
stos
mov
test
ds
sub
fcoms
sbb
mov
sbb
push
xchg
mov
pop
adc
inc
outsb
pop
xchg
mov
sub
mov
mov
jmp
lret
dec
jg
mov
dec
pop
adc
mov
adc
add
test
add
cmp
lret
mov
xlat
stc
sbb
cmp
es
lock
xor
mov
mov
std
fidivrl
mov
sub
loope
sbb
push
pop
sbb
sub
pop
lret
sbb
add
dec
adc
adc
leave
pop
xor
adc
sbb
repnz
fstl
xor
pusha
test
dec
aad
jp
or
addr16
scas
cmp
rcrb
add
dec
jl
in
sub
out
jnp
mov
adc
pop
shlb
mov
lock
dec
aaa
pop
iret
jle,pn
nop
pusha
add
jmp
dec
push
ror
pop
jnp
cmp
add
add
test
add
repnz
xor
mov
mov
ror
nop
cli
scas
stos
xchg
cmpsl
push
mov
pusha
pop
out
mov
mov
sti
xlat
ja
out
and
aas
ret
aas
es
cmpsl
je
in
js
leave
mov
fs
sbb
jno
in
pop
inc
xor
out
cmp
das
jbe
jbe
test
nop
sar
cmp
imul
adc
mov
and
inc
sub
shrb
pop
dec
jns
push
xlat
insb
and
out
movsb
dec
jns
sbb
and
cwtl
mov
cmp
jne
test
fldcw
fadds
fidivrs
fimull
xchg
idiv
jmp
shrl
sbb
insl
xchg
xchg
movsl
cmp
mov
add
pop
sub
out
mov
adc
xchg
outsb
adc
outsb
mov
or
jg
jecxz
jb
lods
push
aam
mov
rcll
insb
and
and
insl
cmp
cli
into
scas
and
xchg
and
add
dec
bnd
outsl
icebp
sub
push
mov
dec
mov
test
mov
or
dec
and
bound
loopne
adc
cmp
pop
lock
jne
pop
fldenv
xchg
mov
adc
jge
inc
pop
xchg
dec
and
sbbb
xchg
and
fidivrs
test
pop
idivb
popf
iret
or
sub
jmp
aad
mov
negb
ror
mov
lock
test
add
pushl
mov
loopne
cmp
or
loopne
inc
and
outsb
mov
fcoml
fs
push
aad
pop
nop
xchg
add
mov
test
jge
pop
shl
mov
xchg
sub
fiadds
cmpsl
jecxz
pop
sbb
mov
movups
out
add
pop
dec
sbb
xor
add
ja
sbb
push
xchg
jle
dec
pop
pusha
cmpl
mov
aaa
lahf
in
fimuls
push
movsb
xchg
push
or
sbb
out
mov
into
gs
sub
inc
repz
add
lea
leave
ret
push
mov
jmp
stc
lods
call
jmp
mov
xor
add
ret
add
add
mov
add
inc
mov
cmp
xor
or
aaa
push
mov
xchg
or
xchg
out
xlat
and
push
mov
scas
daa
sbb
jge
mov
and
fimull
stos
mov
popf
dec
mov
stos
jne
stos
addr16
repnz
mov
out
outsl
add
aas
jns
into
lret
and
mov
test
in
repnz
repz
adcb
mov
pop
test
or
pop
xor
cmpsb
add
inc
das
in
pop
neg
cmc
ror
pushaw
inc
adc
add
aaa
lock
shrl
adc
imul
mov
fcomi
cmpl
adc
and
sub
jmp
popa
jns
xchg
mov
xor
mov
add
add
add
jnp
in
repz
sbb
dec
inc
daa
inc
hlt
stos
int
aas
gs
out
xlat
into
je
dec
loope
xlat
out
add
jmp
push
std
inc
mov
dec
shl
adc
in
or
imul
test
mov
fildll
ret
xor
mov
lock
jb
imul
or
sub
vmovq
stos
std
jl
push
dec
sbb
movsb
cli
or
sub
das
in
cmp
pop
add
adc
bound
push
test
cmc
jns
dec
sub
xor
cs
mov
fidivrl
lahf
push
addr16
jb
imul
xor
movsb
sub
scas
mov
int
mov
in
rolb
ret
add
add
add
xor
aam
or
jge
fwait
and
inc
hlt
into
int
pop
xor
jae
jl
sub
adc
pop
call
xor
sub
cmp
std
or
inc
mov
cmp
out
cmpsl
dec
outsl
push
cmp
pop
in
pop
addb
dec
nop
push
push
popf
or
cltd
pop
pop
and
insl
add
ret
add
adc
inc
sub
inc
xchg
inc
inc
mov
pop
and
insb
jns
mov
jbe
xor
xor
and
cltd
add
aam
adc
dec
ds
dec
inc
xor
pop
pop
ja
xor
add
pusha
fdivrs
dec
adcb
jmp
sub
std
mov
sub
xor
rolb
ret
add
add
aaa
fistps
aad
cmc
mov
inc
repz
pop
lea
mov
aaa
hlt
cld
cli
loopne
mov
cmp
fmul
pop
push
aad
repnz
sub
cmp
xor
gs
movsl
xchg
test
dec
call
add
xchg
inc
inc
fsubrp
dec
popf
out
jg
mov
mov
fwait
jp
in
pop
dec
je
arpl
cltd
push
xchg
frndint
imul
xlat
aaa
xchg
and
in
roll
insl
mov
jnp
sub
mov
sahf
imul
shlb
clc
xchg
xchg
xchg
cltd
pop
repnz
pop
jecxz
xchg
mov
fdiv
inc
add
fildl
add
push
call
imul
ret
or
rol
add
add
add
inc
jp
jne
out
dec
shl
pop
mov
mov
pop
data16
mov
or
sbb
cmpsb
push
lods
es
cmpsb
mov
shlb
sub
mov
addr16
jne
popf
dec
cmp
idivb
cld
mov
int
pusha
mov
cmpsb
cmp
mov
jns
popf
xchg
push
imul
mov
stc
sti
scas
add
jecxz
ret
sbb
mov
sub
icebp
out
jl
pop
xor
jecxz
in
inc
adc
mov
mov
mull
outsl
push
sbb
mov
popa
lcall
les
add
add
je
xor
inc
jmp
andl
push
addl
lea
sbbl
push
call
movl
mov
cmp
movl
jne
jmp
inc
mov
inc
decl
movsl
jg
xchg
xor
add
add
testb
push
push
shrb
pop
loopne
mov
or
xchg
xor
sahf
ljmp
repnz
jnp
js
test
enter
lea
xchg
mov
or
data16
das
dec
and
cmp
in
hlt
mov
xor
xchg
dec
test
testl
out
mov
push
jb
clc
xchg
clc
xor
push
shlb
mov
mov
adc
jecxz
inc
in
jns
cs
push
sbb
push
mov
int
adc
sarl
lahf
lods
jg
in
lea
testl
repnz
push
insl
sub
or
adc
inc
movl
jmp
sbb
push
sahf
fistps
les
sbb
inc
ret
add
ret
add
add
mov
mov
and
jbe
jle
xchg
cmpsb
out
in
in
bound
xor
shrb
imulb
fwait
mov
and
cmpsl
jl
stc
xor
sub
mov
nop
jecxz
mov
ds
push
stos
xchg
out
and
hlt
add
into
inc
gs
jle
cmp
adc
cmp
call
fsubrs
icebp
stos
inc
imull
sbb
sub
dec
cmpsb
xchg
pop
fldcw
pushf
cmp
mov
or
rolb
cmp
and
push
scas
test
arpl
jle
out
push
sub
add
incl
add
jl
adc
jmp
pushl
call
mov
movl
mov
lea
jmp
lret
push
mov
out
pop
dec
shrb
add
ret
add
add
adc
loopne
fstps
sbb
ds
inc
push
scas
sbb
jecxz
add
mov
enter
cwtl
lea
pop
pusha
repnz
inc
xchg
and
push
cmpsb
out
push
in
pop
arpl
nop
xchg
insb
testb
addl
pop
mov
fwait
push
cld
mov
dec
loop
into
adc
pushf
push
jne
data16
js
pusha
pop
or
sbbb
sub
cmpsb
pusha
out
out
sbb
in
loope
call
mov
adc
sub
xchg
scas
push
mov
cli
iret
mov
fdivs
sbb
rcl
test
mov
fidivl
aad
dec
or
jmp
xor
inc
and
mov
jmp
aaa
jae
push
je
aaa
ja
out
aam
scas
pop
int3
les
add
add
add
scas
mov
clc
mov
inc
popa
push
js
cmp
pusha
arpl
out
mov
js
push
xor
mov
daa
adc
jb
cmp
fwait
jo
insb
lea
into
push
sbb
loopne
movsb
xchg
pop
aas
mull
adc
call
xchg
movb
push
lahf
adc
fs
adc
xor
loopew
sbb
insb
scas
add
fstpt
jecxz
pop
xchg
cltd
push
jmp
sub
xor
mov
lock
rcrl
mov
idivl
pop
adc
fxch
push
adc
rcll
xchg
pop
xchg
iret
repnz
jbe
mov
mov
mov
sub
sub
jmp
add
ss
ja
jg
adc
push
sbb
pop
add
ret
add
add
inc
into
cmp
xchg
aam
sbb
mov
mov
in
mov
sub
pusha
bound
out
imul
outsl
mov
pop
jbe
test
loopne
sub
dec
jnp
stc
cs
mov
dec
fistl
aad
xor
push
mov
lret
xchg
repnz
mov
out
push
add
lret
mov
jle
mov
cmp
and
mov
js
mov
hlt
push
inc
mov
lods
mov
sahf
jbe
outsb
sub
mov
add
cs
cmp
pop
xchg
or
or
add
mov
lea
cmpl
ja
xor
jmp
push
push
pushl
push
push
push
pushl
push
call
add
shl
xor
jmp
cmp
mov
mov
fisubrl
push
movb
ret
add
add
add
push
into
adc
lret
cld
jle
in
in
jecxz
pop
iret
xchg
mov
dec
add
pop
inc
jnp
or
jae
leave
stc
add
shll
pop
lret
and
push
jle
stc
cmpsl
jge
test
cmp
sub
loope
fwait
int
iret
push
dec
xor
jno
mov
cmp
pop
lcall
repnz
clc
push
je
incl
push
negl
in
cmp
jg
jnp
pop
mov
lcall
xchg
mov
das
cmp
fbld
cs
or
jp
push
fimuls
cld
shr
fcomps
repnz
adc
inc
adc
push
dec
fstpl
aas
pop
jmp
stc
nop
sbb
cli
pop
add
pop
jmp
inc
mov
jns
stc
pop
mov
push
mov
insl
adc
add
add
pop
and
add
sbb
add
insb
or
mov
mov
jle
mov
inc
fistl
mov
mov
sub
adc
dec
mov
or
cwtl
out
dec
cmpsb
shlb
hlt
lds
std
cld
cmp
jae
pop
add
imul
jnp
stos
lcall
mov
das
mov
aad
inc
mov
fistl
clc
xchg
leave
jnp
push
fwait
mov
mov
mov
dec
sbb
sbb
out
je
fisttpll
mov
pushf
jecxz
in
xchg
push
sbb
or
andb
or
cmpl
jl
movzbl
adc
jmp
pushl
push
push
pushl
push
pushl
call
mov
jmp
fnstcw
sti
inc
and
outsl
in
movl
add
or
mov
sarb
fs
lock
lret
daa
test
or
in
test
insb
pop
out
ja
repz
lods
pop
loope
and
push
or
push
fimuls
pop
mov
xor
test
jne
adc
stos
mov
mov
mov
sub
outsl
adc
ficomps
pop
arpl
mov
jecxz
pop
sub
fcompl
cli
pusha
test
push
gs
sub
shl
xor
xor
cmpsl
and
mov
filds
pop
inc
cmp
mov
sub
mov
mov
fdivrp
dec
cwtl
push
mov
sub
jmp
cmc
ret
sub
out
cmc
sti
xchg
sarb
mov
ret
add
add
icebp
aam
inc
scas
movaps
addr16
xchg
push
in
es
das
mov
inc
inc
xor
mov
inc
xor
or
in
dec
into
mov
cli
xchg
fldt
add
mov
jle
popa
int
loop
fwait
hlt
aad
dec
sbb
hlt
jp
stos
push
dec
dec
mov
jle
inc
pop
fisubl
xchg
ficoms
push
inc
pushf
sub
int3
out
mov
pushf
sbb
push
and
lods
movb
nop
int3
popa
insb
xor
in
inc
sub
xlat
call
into
out
adc
pop
outsl
test
xchg
add
hlt
pushf
aam
test
cmp
rcrb
mov
jmp
sbb
jmp
out
dec
or
out
jmp
add
add
add
es
in
xlat
lret
in
jne
icebp
xor
movntps
hlt
mov
pop
xchg
pop
addr16
push
jo
push
and
xchg
dec
xor
popa
cmp
iret
xchg
incl
and
rclb
jp
clc
test
dec
insl
sub
shlb
enter
sub
dec
push
push
pop
add
mov
push
inc
xlat
sub
pop
pop
mov
sub
in
jae
cld
push
cs
mov
inc
xor
test
add
ret
into
dec
loope
bound
int
mov
fs
adc
push
cmpsb
out
test
inc
loop,pt
mov
sti
jae
shlb
outsl
adc
daa
push
push
call
hlt
cmp
and
sbb
add
xor
xor
mov
sub
sub
mov
cmpl
jg
sbb
jmp
pushl
call
mov
xor
sub
mov
movl
movl
xor
movl
addl
jmp
adc
pop
mov
repnz
mov
or
xor
lret
ret
add
add
int
jno
inc
nop
insl
sbb
mov
pusha
cmp
jno
xor
stos
inc
stc
xchg
jnp
jb
fistl
push
les
in
lock
std
arpl
popf
dec
bound
negl
or
cltd
mov
jmp
or
mov
faddl
imul
inc
cmp
xchg
jne
fcoml
mov
clc
push
xor
pop
in
xchg
jg
es
dec
test
sahf
rol
icebp
push
addr16
pop
outsl
addb
leave
loopne
loop
test
fimuls
xchg
leave
mov
nop
fiaddl
imul
sub
out
in
outsl
insl
mov
jp
ja
insb
cmc
jecxz
xchg
cwtl
jg
fucom
negb
outsl
sbb
cmc
mov
inc
and
push
jbe
add
add
inc
and
andl
mov
cmpl
ja
jmp
push
call
jmp
dec
cmp
int3
stc
in
pop
mov
int3
clc
xlat
mov
ret
add
add
fisttps
mov
mov
sub
lds
push
mov
dec
adc
cmp
imul
sub
js
xor
pop
mov
daa
shrl
shlb
arpl
adc
movsb
and
and
aaa
lea
inc
iret
cld
lock
push
mov
push
stc
push
mov
mov
out
clc
movsl
ret
addr16
sub
jp
out
insl
xchg
lods
scas
fdivr
scas
mov
das
xchg
xchg
out
iret
mov
adc
fmuls
cmp
in
inc
inc
pop
sbb
jno
repnz
sub
in
jecxz
inc
cmpsl
mov
mov
lock
cwtl
or
jmp
fwait
movsl
fs
aaa
xchg
iret
push
scas
cmp
add
add
std
lds
sbb
inc
sbb
ds
dec
mov
ret
push
lahf
mov
mov
adc
outsl
jge
mov
or
in
push
int3
mov
daa
fbld
xchg
mov
pusha
jecxz
in
jns
and
jp
xchg
and
add
lahf
in
into
pusha
insl
inc
in
testl
adc
outsb
cwtl
push
push
cwtl
inc
add
jae
pop
mov
sub
jae
mov
xchg
lea
jmp
popf
enter
ja
xorl
adc
ss
imul
sbb
cmp
rorl
mov
jmp
outsb
jae
gs
mov
dec
fisubrs
add
ret
add
add
mov
pop
ds
filds
loop
subb
or
adc
xchg
jg
and
mov
push
je
push
xchg
lods
in
bound
cmc
cmp
sarl
and
cmp
lock
cmp
fucomp
push
sbb
ret
or
xor
sar
in
push
sbbb
popf
sti
loope
push
adcb
sub
scas
pushf
mov
sub
pop
xor
lods
mov
cld
shrl
insl
stc
jb
push
cmc
jb
add
jg
out
dec
mov
rcrl
stc
aad
sub
addr16
shll
xchg
xor
div
movl
mov
mov
mov
movl
cmp
movl
ja
mov
mov
jmp
or
scas
push
mov
and
fbstp
add
ret
add
add
mov
xor
xchg
jae
out
fistps
movsb
mov
add
push
xchg
mov
or
xchg
mov
bnd
lock
sahf
jne
outsb
dec
scas
dec
fdivs
fnstcw
bound
es
jbe
mov
shll
pop
xor
lret
pop
jo
or
sarl
adc
push
mov
mov
aas
xor
pop
sbb
cmp
outsb
dec
mov
adc
pop
pop
jbe
push
ret
push
pop
sti
test
std
xorl
dec
sub
ficoml
ret
fnstcw
lea
xor
fdivrs
shl
push
inc
neg
inc
jo
cs
xor
insl
jbe
ffreep
mov
testb
aaa
add
jne
mov
mov
cmpl
jbe
andl
addl
jmp
call
mov
mov
jmp
repnz
jg
sub
push
dec
lock
add
add
add
js
sub
sti
lret
adc
and
mov
jns
sbb
push
inc
sub
push
xchg
sbb
xor
or
fmull
cmp
in
jg
out
ret
or
push
andb
lock
pop
jnp
aam
cs
dec
dec
loope
and
adc
push
xor
push
mov
jg
mov
dec
leave
inc
cwtl
out
stos
std
out
shrb
push
inc
clc
mov
orl
mov
sbb
push
sub
dec
dec
in
sub
pop
fiaddl
int
ret
shll
je
push
mov
push
aam
sbb
rolb
adcl
xor
sub
jmp
clc
movsl
cmp
mov
dec
iret
jo
push
mov
add
add
add
and
scas
pop
test
add
pop
aas
in
incl
cmpsl
gs
xor
mov
lods
push
adc
aaa
push
or
cmpsl
loopne
dec
cltd
test
test
stos
ret
pop
mov
adc
mov
sbb
std
dec
pop
and
les
or
mov
cmp
lea
int3
mov
nop
mov
scas
inc
cmp
jmp
cmp
sbb
int3
dec
loope
xor
fwait
pop
imul
outsl
jo
cmp
mov
xchg
imull
jns
or
xor
fadds
fnsave
cli
mov
sbb
mov
or
jmp
cmp
out
jge
inc
js
xchg
mov
jecxz
jbe
add
ret
add
add
pop
hlt
filds
test
faddl
mov
xor
inc
adc
sarb
movsl
dec
jmp
add
mov
mov
or
iret
or
push
and
add
rclb
jmp
push
icebp
fdivrp
mov
leave
ret
fwait
inc
dec
lret
fcmovb
sub
jns
or
push
xchg
cmp
mov
mov
fdivp
or
xchg
test
cld
cmp
sub
jb
es
fst
iret
icebp
shrb
divl
cmp
out
and
mov
fnstsw
push
mov
es
or
lods
dec
mov
mov
adc
mov
xor
push
hlt
gs
cmp
xor
xor
cmpl
jle
or
jmp
push
push
pushl
pushl
pushl
call
sub
jmp
lods
cs
out
lods
outsb
inc
sub
inc
rolb
add
add
add
adc
inc
pop
jmp
fcoml
dec
inc
inc
aam
and
and
xor
sbb
test
dec
mov
stc
xor
dec
jecxz
add
daa
std
add
xchg
lds
js
enter
add
mov
or
and
sub
fists
int3
iret
hlt
xor
xchg
xchg
cmp
adc
lea
subl
adc
std
sub
xor
sub
shr
js
leave
xchg
add
scas
jb
mov
in
insl
pop
xchg
sub
or
mov
add
xchg
cmp
cmp
mov
and
push
adc
iret
and
into
mov
jmp
sbb
idivb
lahf
out
mov
adc
outsl
lea
cld
rolb
add
add
add
mov
es
xchg
jbe
gs
or
sbb
xor
and
push
clc
mov
stos
inc
out
pop
fcoml
xor
cli
lods
int
ror
int3
adc
push
dec
in
int
test
sti
fbstp
inc
jmp
pop
subb
mov
dec
sub
out
fsubr
cltd
test
mov
pop
ljmp
pop
adc
std
inc
test
add
jns
cmp
sub
cwtl
mov
out
fadds
jmp
adc
or
mov
push
nop
jo
add
sbb
cmp
test
out
stos
pop
add
stc
cmpsl
fs
aam
and
mov
mov
xor
sub
add
mov
xor
add
xor
xor
sub
and
movl
movzbl
xor
mov
adc
mov
orl
jmp
lods
add
idiv
adc
ret
mov
add
add
stos
flds
sub
fisttps
xchg
pushf
xlat
fbld
adc
lret
or
dec
das
mov
jle
fwait
loop
mov
sub
nop
jmp
aad
jns
pop
shrl
inc
aas
pop
jns,pt
lock
cli
adcb
clc
fidivrs
or
dec
jbe
dec
xchg
imul
cli
pop
pushf
jae
sti
lret
leave
inc
xchg
adc
add
sub
js
jmp
test
dec
pop
cmp
sarb
push
mov
or
mov
test
cmp
mov
repnz
mov
xor
movsb
xor
cmp
add
lret
sub
sbb
add
stc
sbb
cmp
pop
mov
decl
xor
subl
sub
addl
push
mov
andl
jmp
loop
push
xchg
ljmp
xorb
rolb
add
add
add
in
aad
stc
xlat
out
insl
xor
sub
out
jle
lods
sbb
in
cwtl
pop
leave
lret
mov
pusha
sbb
sahf
insl
mov
jb
add
hlt
loope
add
sbb
mov
push
pop
dec
scas
push
sub
test
sbb
loop
pop
subb
adc
pop
inc
inc
aad
bound
data16
add
adc
mov
stc
cmp
adc
imul
dec
mov
popf
pop
pop
fldenv
jae,pt
rcl
jbe
jge
test
mov
push
jbe
cmp
sbb
mov
add
stos
lea
sti
inc
jmp
lcall
fisubl
pushl
movl
lea
adcl
jmp
out
jns
sub
mov
adc
shll
fiadds
add
ret
add
add
arpl
ficompl
push
cmp
subb
movsb
jp
fcoml
dec
cltd
pop
inc
jae
repz
lods
cmp
fld
xchg
movb
cmpsb
out
xchg
popa
cmp
cmpsl
outsb
mov
test
ret
jle
xchg
xor
and
addr16
divl
movsl
jb
negl
pop
fstps
enter
mov
and
mov
test
fdiv
and
sti
push
cmpb
adc
xchg
lock
cmp
cmp
xchg
lock
xchg
jmp
add
sbb
lahf
insb
sbb
int
iret
xchg
fs
push
jmp
in
push
loopne
cli
out
ja
ret
sbb
in
or
add
ret
add
add
or
hlt
push
push
ja
imul
sub
scas
stos
mov
jge
outsb
add
cmp
jecxz
mov
mov
insl
sub
repz
psrlq
test
cltd
dec
push
inc
movsl
dec
popa
lds
filds
loope
push
jb
enter
mov
jbe
nop
clc
sbb
push
jno
mov
cmpsl
mov
ja
nop
addr16
fisttpl
gs
jnp
clc
xor
adc
mov
adc
mov
push
rol
mov
fildl
lods
outsl
mov
insl
adc
add
add
icebp
sub
inc
dec
clc
mov
sti
mov
adc
pop
call
mov
sub
jmp
aad
repnz
test
sub
xchg
lret
aam
add
add
add
mov
mov
and
lret
adc
mov
mov
inc
push
into
idivl
mov
bound
mov
fs
cmp
dec
lods
pusha
pusha
shrl
fucom
adc
mov
out
jle
data16
jp
add
sbb
daa
pop
jns
adc
jge
mov
jo
arpl
pop
push
test
out
aad
add
int
sub
xor
xchg
adc
inc
in
out
loopne
test
daa
push
dec
mov
jns
fucomp
sbb
rcrl
fmull
cli
mov
or
sub
aaa
ss
mov
mov
cmp
into
xchg
mov
sbbl
jmp
push
sti
inc
out
sti
mov
mov
mov
add
ret
add
add
mov
sbb
dec
hlt
mov
adc
add
pusha
jl
push
jns
fldl
push
sbb
xlat
xchg
push
pop
dec
pop
jae
inc
dec
scas
mov
push
inc
daa
sahf
jmp
pop
int3
xor
imull
lahf
aas
jmp
mov
clc
mov
rcl
lock
mov
aad
pusha
mov
cld
jg
in
pop
movsb
dec
or
pop
cmc
mov
pop
ds
push
cmp
jne
dec
cld
fnstenv
mov
aam
stos
xorb
outsb
mov
mov
mull
ret
and
sub
addl
sbb
in
jp
or
mov
xchg
outsb
jecxz
and
sbb
sbb
loopne
inc
add
fildl
add
popa
mov
stc
movsl
and
xchg
fnsave
int
add
ret
add
add
iret
xchg
call
insl
jecxz
out
icebp
adc
or
inc
dec
or
fidivrl
pop
mov
sahf
jns
pop
and
ljmp
dec
fld
and
les
stc
inc
sub
jb
add
test
sbb
cmp
insl
inc
shll
and
add
leave
movsb
push
ficompl
mov
push
add
mov
or
out
jp
orl
pushw
and
adc
xor
cmpsl
sub
cmp
not
sub
stos
inc
add
mov
push
jae
inc
adc
mov
gs
xor
inc
and
jmp
adc
push
cmc
testl
call
add
add
add
in
in
xchg
push
add
test
mov
aam
outsb
lds
xchg
jmp
and
push
push
cmc
pop
cmp
jmp
imul
inc
or
sbb
jno
out
ss
aad
out
dec
push
adc
and
add
add
cld
pop
mov
movsb
stc
sub
sub
mov
mov
jl
insl
dec
push
stc
mov
out
repz
push
lods
add
lock
inc
div
stos
pop
sbb
es
hlt
xor
or
push
dec
pop
mov
hlt
in
sub
mov
cmp
dec
add
leave
mov
in
pushf
cld
xor
xchg
mov
push
cmpl
mov
stos
lea
movl
push
orl
lea
jmp
sub
out
adc
test
xlat
xlat
add
ret
add
add
cmp
push
xchg
jb
push
or
lret
jns
test
jmp
push
add
inc
mov
jl
mov
pop
add
rcrb
aad
iret
ret
imul
je
ja
pop
and
rorl
inc
xchg
mov
and
push
cmc
in
notb
mov
adc
rcrb
add
inc
int
add
push
and
adc
adc
test
mov
mov
jo
push
add
dec
xchg
fucomp
adcl
mov
cmp
rclb
inc
gs
inc
push
ret
inc
mov
insl
lahf
fmulp
mov
adc
loop
stos
dec
sarb
mov
push
jmp
jo
cmp
imul
push
mov
ret
add
add
cmp
jmp
sbb
add
and
mov
xchg
add
scas
jle
jp
out
adcb
aad
test
sbb
or
xchg
jg
js
clc
lcall
mov
jb
repnz
inc
push
push
das
iret
ds
out
imul
je
push
mov
nop
cmp
adc
aad
jl
jge
rcrl
mov
daa
and
outsb
pusha
pop
cmp
jbe
data16
push
fmull
mov
mov
inc
clc
xchg
push
jmp
cld
jbe
mov
mov
lret
dec
fbld
test
mov
loop
jae
shl
outsl
jg
lret
jae
fwait
sub
lea
andl
jmp
rolb
jns
sti
testl
mov
add
ret
add
add
ds
sub
cmp
pusha
mov
stos
sub
js
sub
aad
jecxz
out
adc
pushf
mov
jle
rolb
fmul
aad
dec
icebp
test
fldcw
iret
lods
fmul
hlt
mov
test
sbb
pop
xchg
cld
sub
rcrb
fdivs
mov
or
mov
imul
add
xchg
lret
mov
xchg
aas
dec
jae
jae
jl
aaa
popa
jg
cmp
mov
lcall
xlat
add
xchg
cmp
cld
lds
inc
cltd
data16
mov
mov
xchg
cmp
pop
paddusw
imul
mov
mov
adcl
push
call
addl
push
addl
jmp
xchg
push
cmp
mov
sahf
jnp
sub
add
ret
add
add
test
xchg
mov
jo
sub
dec
sbb
andb
xchg
cmove
jg
mov
push
in
incb
sbb
fwait
or
pop
pusha
in
mov
int
stc
mov
sbb
cmp
shl
sub
imul
lcall
or
daa
jg
popa
cmp
mov
js
pop
xchg
xor
aaa
subb
fwait
lahf
dec
repnz
mov
int3
test
nop
pop
adc
ja
insb
imul
fstl
mov
int3
jg
mov
dec
or
mov
cmp
pop
lods
jbe
xchg
mulb
mov
int
or
lock
add
add
and
movl
call
mov
movzwl
or
mov
mov
xor
mov
mov
sbb
add
cmpl
jb
jmp
push
push
call
shl
mov
add
jmp
imul
movsl
jg
jmp
js
shlb
fiaddl
add
add
add
mov
int3
pop
enter
ljmp
jno
push
push
sbb
iret
dec
sub
call
fidivs
or
imul
test
pop
inc
xchg
push
jbe
xchg
lock
icebp
jae
ss
jl
lret
int3
pop
ljmp
lret
scas
test
ror
test
xor
or
push
jl
push
aad
ds
repnz
or
jo
mov
push
and
lret
lods
push
cwtl
xchg
das
aas
mov
cmpsl
je
int3
rolb
stc
ja
sub
loopne
and
lea
pop
and
lds
inc
ffreep
xor
and
and
jne
movsb
vpminsw
or
xor
add
sub
mov
mov
xor
mov
xor
lea
neg
mov
and
lea
and
jmp
cmp
mull
addr16
pop
lahf
shrb
add
add
add
jns
sub
pop
xor
push
std
mov
imul
push
cwtl
rol
sbb
add
out
sub
js
inc
dec
jne
mov
add
or
int3
fsubr
adc
jo
dec
pop
xor
adc
mov
inc
fs
mov
jle
mov
bound
clc
jnp
addr16
daa
jne
cmpsl
das
xchg
cmpsl
push
int
lahf
ds
stc
and
out
cmpsb
repnz
stos
adc
nop
sub
dec
xchg
adc
gs
inc
inc
adc
pop
adcb
jne
sub
loope
lock
popf
lods
rcll
fcom
mov
xor
std
jae
aaa
pop
sar
jno
inc
and
mov
adc
mov
addl
xor
orl
jmp
jno
dec
nop
out
fdivrp
cmc
push
stos
sub
pop
imul
add
into
dec
push
push
pop
xchg
repnz
jo
jmp
push
lahf
aaa
xlat
adc
xor
dec
mov
dec
out
stc
adc
and
in
lea
imul
test
sbb
out
iret
push
test
xor
pop
jbe
mov
addl
loope
adc
xor
lret
push
out
mov
into
ss
or
mov
dec
push
lahf
lcall
mov
sar
sbb
xchg
pop
push
dec
inc
mov
movsb
aad
int3
cli
jne
je
push
mov
mov
adcl
add
push
or
orb
push
sbb
mov
lea
xor
or
mov
movzbl
or
mov
movl
mov
subl
mov
and
jmp
sbb
repz
mov
std
dec
loope
sub
ret
add
add
sub
mov
fldt
lcall
inc
pop
and
adc
jge
daa
cmp
enter
roll
mov
loope
push
outsl
fsts
mov
imul
and
lahf
mov
xchg
xchg
jl
dec
mov
fcompl
jns
popf
xchg
jbe
cmp
aad
movsl
in
popf
xchg
testb
sub
or
adc
pusha
lock
push
jge
call
inc
fisubs
les
adc
xchg
sbb
outsl
inc
mov
fldcw
loop
xor
mov
popa
cmp
insl
xor
arpl
inc
jmp
into
xor
daa
dec
push
or
test
mov
fisubrs
test
pusha
lret
and
add
add
jb
xor
jmp
pushl
push
push
pushl
call
mov
mov
mov
movzwl
movzwl
jmp
pusha
xchg
inc
and
mulb
pop
xor
dec
out
fldl
add
add
add
and
das
mov
dec
sub
jnp
loopne
aas
lahf
je
pop
je
and
fsubl
popf
out
mov
sub
idiv
pop
enter
dec
pop
inc
mov
imul
ficoml
and
mov
je
cmp
mov
push
shll
subl
mov
jmp
pop
and
jbe
mov
push
ss
mov
lret
mov
movsl
les
popf
xchg
fs
push
pop
jecxz
lods
xor
cli
adc
mov
enter
jne
pop
sahf
inc
mov
into
addb
subl
inc
push
loope
adc
roll
movzwl
adc
jmp
mulb
dec
fcmovnu
sti
imulb
fs
dec
imul
fiadds
add
add
add
jl
or
dec
out
or
cli
adc
inc
push
and
add
xchg
inc
inc
xchg
les
adc
add
daa
popa
pop
push
out
push
jge
bnd
call
push
clc
dec
cwtl
orl
ja
ss
ret
das
xchg
sbb
mov
mov
pusha
cmp
fs
popa
out
jmp
daa
lock
xlat
ja
cmp
or
int3
xchg
in
add
out
push
mov
enter
or
inc
jmp
push
xorb
pop
jbe
mov
ljmp
push
dec
fldcw
std
lret
scas
or
xor
ja
mov
pop
add
movzwl
orl
or
or
addl
jmp
cmpsb
inc
dec
xchg
out
sahf
pushl
sub
aam
inc
jp
filds
add
add
add
xchg
dec
lock
mov
lods
sub
mov
decb
cs
mov
inc
xchg
pop
xchg
or
das
stc
out
fwait
or
xchg
jmp
or
testl
lea
or
sbb
push
das
and
adc
dec
mov
jo
inc
sbb
cmc
push
xor
mov
and
mov
add
jmp
adc
repnz
dec
fwait
scas
sub
rcrl
shlb
lret
xchg
pop
ja
addl
mov
jnp
dec
and
lea
mov
ja
pushf
adc
sub
in
jb
dec
adc
loope
jge
add
add
inc
and
mov
andl
mov
mov
adcl
mov
mov
adc
mov
mov
mov
xor
add
mov
xor
mov
addl
mov
decl
mov
xorl
mov
movzwl
adcl
jmp
cmp
sbb
fcomi
in
test
pop
jne
hlt
mov
ret
add
add
je
cwtl
fnstsw
sbb
clc
leave
cmp
mov
arpl
jbe
jp
pop
jmp
inc
xor
jmp
mov
xchg
lods
dec
ud1
mov
imul
daa
xor
pop
out
pushf
lret
dec
aad
push
mov
xchg
and
dec
cmpsl
cmp
enter
mov
sbb
push
xchg
aas
push
pop
pop
cmp
int3
lret
mov
das
mov
mov
or
xor
mov
ja
lock
mov
outsl
cli
dec
sub
xor
fcomps
and
shl
das
add
call
sbb
sub
fidivs
lods
in
aas
outsb
xchg
repz
mov
xchg
popa
movzwl
and
mov
jmp
aas
or
aas
mov
insl
int
mov
add
ret
add
add
test
jmp
sahf
addl
sub
loope
push
stos
pop
frstor
aam
push
sub
cltd
dec
cmp
ljmp
lcall
andb
dec
pop
adcb
shr
addr16
xchg
push
pop
add
pop
lret
xor
loop
lcall
popa
sub
and
and
insb
mov
clc
push
pop
pop
adc
outsb
and
insl
adc
pop
clc
sbbl
fbstp
rep
jle
xchg
jns
andb
sti
xor
jb
stos
sub
outsl
cmp
push
lea
int3
pop
dec
dec
add
movzwl
jmp
daa
bound
pop
out
repnz
push
fidivrs
add
add
mov
and
or
pusha
xor
sbb
iret
ja
aaa
jmp
push
mov
sub
fiaddl
mov
popa
in
mov
adcb
adc
mov
push
into
iret
adc
ret
lret
xchg
bound
cmp
mov
or
lods
into
pop
daa
xor
jecxz
cmpsb
mov
in
mov
int
jge
push
movb
inc
movsl
test
ljmp
rcr
into
cmc
aad
and
jp,pn
mov
mov
in
fdivrl
or
cmp
lahf
iret
imul
and
push
rcrb
push
roll
test
inc
add
dec
and
imul
jmp
lea
lcall
xlat
aas
ljmp
add
add
add
sub
cmp
push
inc
mov
shrb
push
subb
call
icebp
sbb
rcrl
jge
and
loope
dec
push
add
in
push
fs
repnz
sbb
jge
push
cmp
adcl
pop
cmpsl
jae
mov
and
sub
xchg
and
mov
fs
mov
rcr
rorl
dec
in
addr16
in
fstpt
inc
jns
test
rcrl
or
adc
jmp
das
cmp
ret
fdivrp
lcall
mov
dec
push
mov
cmp
stos
pop
iret
cwtl
sub
push
imul
inc
mov
leave
movl
jmp
push
mov
jp
cmpsb
rclb
pop
jne
inc
jecxz
add
add
add
add
add
cltd
cld
shl
pusha
negb
push
dec
sub
pop
pop
sub
xchg
cmp
pop
stos
or
dec
iret
jae
stos
inc
inc
inc
cmpl
push
cmp
inc
sub
inc
sbb
clc
int
sbb
or
xor
outsl
js
subl
push
adc
incb
addr16
sti
add
dec
lea
out
sbb
sar
push
sbb
in
cmp
ret
stos
push
sub
push
xchg
pop
movsb
pop
add
dec
mov
cs
fiadds
push
addr16
cmp
or
push
into
loope
adc
jnp
cmp
cmpl
mov
fisubs
lahf
jns
adc
mov
cmp
xor
xchg
mov
rol
je
inc
add
cmp
add
dec
and
jmp
sbb
jne
jge
cltd
jae
adc
add
ret
add
add
or
fisttps
adc
pop
push
dec
mov
aaa
or
and
cmpsb
lods
divb
lret
shlb
jb
out
mov
lret
repnz
inc
xor
jno
push
insl
or
faddl
xor
mov
gs
ss
cmp
xchg
mov
sbb
ret
call
and
cmp
imul
sub
shlb
xchg
rclb
cwtl
adc
push
lock
cmpsl
sbb
rcl
lods
lahf
adc
imulb
xor
or
adc
fdivrp
aaa
inc
adc
test
push
sbbl
inc
add
add
cmp
jg
movl
jmp
push
int
dec
stc
outsl
fildll
mov
ret
lret
add
add
add
mov
mov
sub
sub
xor
mov
out
ds
sub
inc
sbb
inc
sub
loope
mov
int
jge
or
cli
push
sub
scas
inc
fiaddl
stos
dec
adc
sub
cltd
insb
in
in
jne
jb
lock
mov
int3
jns
inc
sub
out
mull
cld
sub
arpl
test
les
xchg
outsb
out
adc
sub
pop
ja
cli
stc
outsl
jg
sbb
call
jmp
cmp
xlat
xor
xor
adc
push
cmp
dec
loopne
sbb
fwait
xor
xchg
jecxz
inc
stos
addr16
in
inc
and
or
add
add
mov
imul
and
insl
in
add
add
add
gs
xor
add
add
out
jo
or
cmp
mov
lods
push
cmpsb
sub
mov
mov
cltd
add
sub
mov
cwtl
and
cmpsb
lret
or
mov
daa
pop
adc
add
sub
jmp
push
pop
jae
shl
mov
jp
flds
roll
sub
mov
out
outsb
scas
fcoml
jne
lods
rorl
sub
jecxz
sbb
fidivrl
push
or
syscall
and
shrb
push
adc
push
pop
aam
and
enter
stc
xchg
adc
es
mov
mov
movl
add
movl
adcl
movl
jmp
imul
lret
stc
pop
insl
push
out
add
add
add
pop
jge
mov
pop
gs
in
in
inc
push
jae
sub
mov
repnz
inc
jle
scas
dec
cld
pop
adc
adc
cmp
xor
in
adc
cmp
out
and
movsb
fnstcw
ret
arpl
ret
add
out
arpl
mov
xchg
repz
jns
daa
adc
aam
sub
sbb
int3
mov
xor
ds
dec
inc
test
out
int3
in
and
cmp
add
or
ss
adc
xchg
sti
mov
inc
stos
jno
cmp
jecxz
cmp
mov
jecxz
inc
and
or
add
movl
cmpl
jg
jmp
push
push
call
movl
mov
mov
mov
jmp
and
lahf
sti
lahf
lcall
stos
in
cmc
shll
ret
add
add
and
push
hlt
lahf
lods
bound
jl
xchg
inc
ret
int
cmpsb
push
jbe
push
xor
fimuls
idivb
gs
cwtl
jo
loop
aad
pop
add
jp
mov
pop
add
in
out
mov
dec
insb
ss
movsb
jl
pop
add
push
stc
jb
call
push
pop
pop
fsub
les
cmc
mov
arpl
in
andb
push
outsb
insb
mov
push
mov
push
mov
cmc
insb
sub
insb
in
sarl
push
add
loope
rorb
mov
faddp
jg
ds
test
pop
mov
out
pop
dec
fmuls
ret
and
adcl
xor
or
mov
orl
push
push
decl
push
push
adcl
call
addl
mov
subl
mov
xor
cmpl
jge
movl
jmp
push
pushl
call
jmp
cmpsl
js
inc
inc
mov
or
out
add
add
add
ja
inc
jnp
dec
mov
or
repz
mov
test
lcall
sub
pop
sbb
mov
lahf
add
int
bound
pop
or
adc
out
sti
mov
leave
outsl
adc
sbb
sbb
mov
inc
push
inc
jo
adc
out
xchg
fwait
inc
cmp
or
push
aam
and
neg
mov
mov
in
fwait
push
test
xor
sbbl
fabs
jle
cltd
push
pop
sbb
lods
lods
movsl
mov
fistpll
ret
test
xchg
xor
lock
fs
push
pop
test
jge
pop
sub
cmp
test
xor
and
mov
and
jmp
pop
mov
sar
bnd
rcrb
repz
call
add
out
jge
pop
ds
xor
dec
cli
sub
cmp
cmp
xchg
adc
xorl
sar
es
or
lods
stc
push
push
mov
inc
jo
movsb
add
mov
jae
push
lods
repz
ljmp
mov
ds
sub
pop
mov
in
jne
and
inc
sbb
pop
sbb
xchg
mulb
scas
fsubrs
sub
icebp
aad
xchg
ret
mov
repz
mov
xor
jnp
ret
inc
or
push
xchg
mov
dec
inc
sbb
andb
test
scas
cld
iret
sub
pop
cmpsb
and
and
dec
mov
movl
mov
mov
sub
and
jmp
outsb
js
cmc
ds
sti
mov
loopne
lahf
pop
jmp
add
jo
push
inc
or
test
cmpsb
xor
mov
cli
ret
dec
fisubs
pop
or
cli
insl
je
push
sub
xorl
mov
xchg
pop
push
jne
out
das
adc
jmp
or
sbb
imul
push
add
jge
mov
mov
je
jae
cld
sbb
push
dec
push
rcrl
sahf
mov
fildl
call
xor
insl
stc
ret
bound
jbe
push
and
push
in
xor
out
adc
dec
and
adcl
or
je
dec
dec
jns
into
pop
and
xor
movsb
ljmp
add
cmpl
ja
sbb
jmp
pushl
call
movl
movl
jmp
inc
mov
jb
xchg
repnz
sbb
xlat
dec
addr16
ljmp
push
mov
hlt
lret
mov
mov
lds
push
bound
out
ja
mov
inc
pusha
outsb
popa
fldenv
inc
insl
sbb
ret
call
and
xchg
sbb
fdivs
xchg
cmc
mov
or
push
sbb
add
fs
adc
mov
pop
test
jae
aam
fldcw
jns
loop
cltd
sti
pop
je
mov
clts
icebp
lret
cmpsl
mov
or
dec
adc
push
mov
xor
test
out
xchg
jge
sbb
xlat
mov
dec
sbb
push
fisttpl
in
sbb
cltd
mov
aaa
xor
icebp
mov
lods
sub
xor
rolb
cld
outsb
repz
push
imul
add
add
fildl
add
aas
in
sbb
hlt
xor
mov
loop
add
ret
add
add
loope
sti
outsb
add
jno
cmc
iret
adcb
sbb
add
adc
mov
fnstcw
or
stos
and
and
rcll
in
popa
xor
cmp
fcomi
mov
mov
fwait
loop
add
nop
mov
fmul
pop
jecxz
dec
ret
arpl
mov
push
inc
popa
test
ja
sbb
aas
shr
xchg
incl
les
adc
mov
loop
aad
shll
cmpsl
xchg
adc
sub
loopne
push
daa
mov
sbb
daa
xor
mov
sbb
sbb
pop
mov
or
inc
and
scas
dec
add
mov
mov
cmpl
jg
jmp
pushl
call
jmp
mov
push
insb
pop
cld
mov
or
movsl
jmp
add
add
add
loopne
cmp
inc
jne
push
imul
cmp
inc
cmp
mov
pop
pop
cld
or
sbb
xor
or
xchg
shrl
or
push
andb
sbb
push
movsb
enter
or
movsl
in
sbbb
insb
fdivl
andb
js
cmpb
push
push
or
ja
mov
lret
ja
mov
cmp
sub
push
fnstsw
xchg
or
jmp
rcr
ja
cmp
push
mov
dec
xor
test
push
outsl
mov
mov
lcall
add
mov
mov
xor
xor
sub
mov
sbb
cmpl
jge
jmp
push
call
jmp
sub
das
das
sub
or
lahf
xor
push
add
add
ds
in
icebp
dec
cmp
sub
aam
leave
pop
or
jno
outsb
jge
jnp
xlat
jp
cmp
outsb
sbb
cmp
xor
push
cli
cmpsl
dec
cmpsl
out
loop
dec
sub
data16
adc
cmpsl
or
movsl
push
inc
stos
les
pop
mul
adc
repz
les
add
sub
ds
fsts
loop
push
pop
lods
lods
xchg
fildll
lahf
pop
pop
insl
adc
mov
jns
add
cwtl
jg
arpl
outsl
cld
cmpb
inc
pop
nop
popf
jne
inc
mov
jmp
push
pop
add
aas
add
sbb
ret
mov
sbb
les
mov
mov
jmp
push
into
or
lahf
pushl
addr16
mov
sub
add
ret
add
add
cs
xchg
mov
dec
mov
mov
mov
dec
cwtl
shlb
adcb
clc
js
push
add
push
dec
fwait
xchg
xchg
sub
mov
dec
inc
xchg
pop
inc
data16
push
scas
pop
sbb
mov
mov
jl
adc
es
xchg
jp
or
dec
push
mov
aas
push
jmp
sub
ljmp
jge
sbb
sbb
pop
lret
or
loop
aas
mov
icebp
pop
movl
inc
xor
push
adc
rolb
xchg
dec
pop
iret
js
mov
push
mov
repz
scas
and
sbb
lock
frstor
mov
mov
sbb
mov
jmp
inc
leave
push
rcr
ror
sbb
jo
mov
add
in
add
xchg
add
add
jb
mov
or
movsb
sbb
fdivrs
adc
sbb
cmp
xor
xor
push
pop
fisubl
mov
subb
and
hlt
sbb
outsl
imul
and
cltd
xchg
xor
adc
fcmovnb
mov
mov
jo
packsswb
in
dec
jo
mov
cmp
clc
cmpl
ljmp
icebp
jmp
sub
mov
add
adc
movl
cmp
movl
jne
cmp
je
mov
xor
add
mov
adc
mov
xor
mov
mov
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
sub
sub
xor
xor
shr
shl
or
add
xor
add
adc
xor
xor
cmp
jne
cmp
je
mov
cltd
add
adc
xor
mov
mov
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
movl
mov
xor
add
adc
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
sub
push
push
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
xor
xor
add
adc
xor
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
movzwl
movzwl
or
movzwl
or
sub
mov
mov
mov
movzwl
mov
add
movzwl
and
cmp
jg
lea
push
lea
call
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
jle
jmp
push
pushl
push
pushl
push
push
push
pushl
call
push
push
push
movl
mov
mov
movl
or
mov
xorl
mov
mov
add
mov
add
xor
mov
or
mov
and
add
addl
mov
imul
xorl
movzwl
adcl
shr
incl
movzwl
orl
or
and
mov
mov
not
mov
xor
addl
add
subl
movzbl
push
negl
lea
subl
push
call
xor
mov
mov
and
mov
xor
mov
and
xor
not
mov
xorl
sub
movl
cmp
movl
je
mov
cmpl
jge
mov
mov
sub
sub
jmp
pushl
pushl
push
pushl
call
mov
mov
add
cmpl
jge
jmp
push
push
push
push
pushl
pushl
pushl
pushl
call
mov
movzwl
shr
mov
mov
mov
add
adcl
imul
add
movzwl
sbb
or
mov
cmpl
jb
dec
jmp
pushl
push
push
push
push
pushl
call
mov
mov
add
mov
movzwl
shr
andl
mov
mov
andl
add
movzwl
mov
sub
mov
shl
or
mov
mov
mov
xor
lea
mov
cmp
jne
mov
mov
mov
xor
sub
mov
jmp
mov
xor
add
adc
xor
mov
xor
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
sub
pop
pop
pop
leave
ret
mov
mov
jmp
mov
mov
ret
sbb
mov
mov
adc
mov
orl
or
mov
mov
jne
andl
mov
andl
mul
ret
subl
push
mov
adc
mul
mov
mov
mull
add
mov
mul
add
pop
ret
dec
push
dec
pop
ss
aaa
xor
pop
xor
pop
xor
push
inc
add
dec
pop
xor
dec
dec
add
inc
ss
dec
dec
dec
pop
xor
pop
pop
push
inc
xor
add
inc
pop
push
xor
dec
pop
xor
dec
inc
ss
inc
dec
xor
inc
inc
inc
pop
xor
aaa
xor
inc
pop
push
pop
dec
inc
cmp
pop
push
push
pop
xor
pop
push
pop
add
xor
cmp
inc
cmp
add
xor
cmp
pop
inc
xor
push
inc
xor
pop
pop
pop
xor
dec
push
pop
push
pop
add
dec
xor
pop
dec
ss
xor
pop
push
xor
dec
dec
xor
push
inc
dec
pop
xor
inc
dec
push
xor
push
inc
inc
pop
xor
add
push
pop
xor
xor
xor
inc
inc
add
dec
pop
dec
xor
push
xor
push
pop
inc
pop
push
inc
inc
inc
add
xor
push
xor
inc
add
inc
xor
aaa
push
pop
add
xor
xor
push
xor
xor
add
xor
xor
pop
dec
xor
cmp
xor
cmp
add
pop
add
cmp
xor
cmp
pop
add
add
add
add
cmp
dec
add
add
xor
push
add
add
push
add
xor
dec
add
add
inc
add
pop
add
add
xor
cmp
pop
add
push
add
cmp
add
push
add
add
pop
add
inc
add
pop
add
inc
add
dec
add
add
push
add
add
push
add
xor
pop
add
add
dec
add
add
add
pop
add
add
push
add
add
cmp
inc
add
add
dec
add
xor
add
pop
add
add
dec
add
add
pop
add
xor
dec
add
cmp
add
inc
add
pop
add
inc
add
push
add
inc
add
add
inc
add
push
add
xor
inc
add
aaa
add
add
add
inc
add
pop
add
add
dec
add
xor
add
add
add
push
add
pop
add
pop
add
cmp
xor
pop
add
add
