push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
mov
adc
adc
daa
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
popa
ds
stos
cmp
in
lcall
fdivrl
scas
adc
mov
push
mov
cmp
cmpxchg
aad
scas
lcall
xlat
or
jns
imul
mov
aam
shll
jnp
jnp
dec
sbb
mov
inc
aad
imul
je
lcall
pop
adc
outsb
in
xchg
xlat
daa
jbe
fdivrl
push
scas
adc
mov
insb
data16
fs
std
jbe
cmp
js
dec
in
pop
sti
cwtl
or
dec
cmp
inc
std
jnp
mov
cld
loopne
movsl
inc
icebp
iret
mov
imul
mov
fistpll
cs
int
rorl
sub
sbb
ljmp
adc
lret
or
push
aas
ret
int3
bound
xorb
fidivl
es
xchg
out
dec
jmp
sub
ds
sti
into
and
popa
push
gs
fnstcw
mov
push
fldenv
adc
xchg
lods
jg
jl
lcall
xor
data16
cmp
mov
cmpsl
add
push
mov
cmc
popa
mov
sbb
js
jno
mov
aad
mov
or
dec
sbb
insb
or
mov
sti
adc
repz
nop
leave
jo
gs
jecxz
mulb
inc
push
inc
cmpsl
ret
adc
cmp
into
adc
add
and
xchg
mov
mov
push
mov
adc
xchg
push
add
out
nopl
popa
roll
shl
pop
test
addr16
adc
les
fisubrl
pop
daa
cmp
xor
pushf
xor
fidivl
in
sub
jg
mov
popf
cli
movsb
mov
roll
out
or
or
sbb
sbb
fidivs
aad
lods
test
dec
aaa
mov
pop
sub
jo
lcall
jo
sub
sti
mov
aas
cmp
jns
lods
xchg
push
push
xchg
mov
scas
dec
fwait
pop
cmpsl
lahf
add
call
pop
pop
cmp
popa
jne
rcll
je
je
cmp
les
shll
sub
lods
data16
mov
test
divl
imul
out
stos
mov
mov
xchg
movsl
dec
xchg
das
or
xchg
fimuls
loop
int
inc
xlat
pop
test
stc
mov
pmaxub
pusha
mov
add
xchg
mov
shll
and
inc
testl
in
adc
aas
stos
popl
and
xchg
dec
jle
int
xchg
sub
daa
sbb
jge,pt
and
jmp
mov
rcrl
ds
mov
mov
cmp
cs
mov
cld
add
adc
out
pusha
imul
jno
pop
mov
addr16
and
arpl
push
jge
adc
sub
jno
js
pop
or
mov
xchg
xchg
sahf
pushf
lea
push
sub
cmp
mov
rolb
or
outsl
cmp
stc
jmp
sbb
mov
sbb
and
cld
rcr
and
inc
jns
lahf
xor
pop
pop
push
mov
movsb
and
loope
adcl
push
mov
popf
add
sub
and
out
imul
movl
xor
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
cli
adc
daa
cli
adc
mov
out
cmp
stc
mov
leave
loopne
mov
inc
ljmp
mov
pusha
test
pusha
dec
test
std
sbb
push
dec
mov
hlt
xchg
push
scas
loopne
mov
int3
cmc
and
pop
aas
adc
and
outsb
imul
sbb
negl
pop
movsl
ret
push
jns
sti
cltd
gs
push
mov
pop
jle
testl
ljmp
sbb
or
outsl
frstor
pusha
cltd
push
mov
test
push
mov
daa
push
adc
fidivrs
dec
cmp
mov
xchg
out
cmp
and
jge
and
sub
mov
ret
idivb
inc
push
or
inc
pop
fwait
or
psrad
dec
imul
jecxz
fnstenv
les
mov
scas
dec
icebp
xchg
mov
dec
outsb
mov
dec
push
pop
es
stos
push
decl
cmp
mov
loope
xchg
lea
rcl
lods
scas
jnp,pt
and
es
es
and
and
xor
adc
cmp
dec
dec
mov
adc
clc
push
xchg
adc
aad
sub
insl
mov
add
test
in
lds
jl
xlat
arpl
mov
lret
push
xor
or
mov
and
je
mov
repnz
dec
jbe
scas
pop
dec
movb
iret
fsubrl
pop
loopne
add
int3
mov
sbb
and
dec
pusha
lock
adc
mul
mov
sbb
add
push
add
out
pusha
pop
pop
jl
popa
cmp
sbb
std
xchg
lcall
push
mov
sub
aas
dec
adc
sahf
cmp
mov
daa
je
adc
add
pop
xchg
mov
xchg
leave
cld
cld
sub
divl
movsl
sbb
ss
enter
and
sub
sti
cs
and
cwtl
out
testl
pop
mov
out
jnp
clc
cmc
xor
imul
loop
cmpsl
cld
sti
subl
mov
mov
push
cltd
adc
add
stos
sub
pop
mov
xor
mov
and
jne
loope
lods
push
in
add
cmp
xor
adc
inc
test
inc
and
cwtl
lods
addr16
out
loope
out
mov
movsb
mov
sub
stos
or
and
lahf
out
inc
sub
mov
notb
test
fbstp
or
aaa
mov
in
sub
ds
xor
icebp
je
out
fcomps
nop
sub
shll
outsb
push
pop
xorb
adc
inc
xchg
pop
or
mov
mov
pop
aas
mov
mov
movsb
dec
pop
or
sub
sahf
repz
pop
movsb
jmp
push
inc
push
lods
push
mov
or
cli
mov
mov
je
adc
pushf
lods
sbb
sti
pop
push
ds
cmpsl
in
subl
aam
inc
push
pop
fistps
mov
cmpsb
lret
in
arpl
mov
pop
xlat
sbb
push
lret
mov
sahf
out
jp
testb
test
jge
add
cmp
sbb
pop
adc
imul
fdivp
or
inc
mov
and
inc
es
jmp
fdivl
add
pop
inc
ss
js
inc
sub
sti
popa
scas
ret
fists
push
shlb
jg
xchg
jns
sbb
iret
xchg
cmp
pop
out
jno
lds
decb
pop
lock
push
fists
jno
cmp
pop
ret
pop
mov
push
addb
ret
inc
test
xor
xchg
scas
push
loopne,pn
inc
lods
inc
orl
sub
cmp
ret
dec
sahf
lret
mov
push
jae
mov
mov
sbb
rorb
mov
add
inc
in
dec
in
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
add
mov
daa
cli
adc
roll
xor
cmp
adc
xor
pop
sub
loope
or
shlb
dec
xor
ffreep
jle
int3
test
dec
pusha
mov
lret
xor
outsb
cld
fbstp
fst
xchg
out
push
xchg
gs
inc
sti
pusha
call
sub
int3
pop
mov
fwait
inc
adc
add
pop
gs
and
cmp
push
rcll
jae
jg
mov
or
inc
push
sbb
xor
in
pmaddwd
mov
sub
dec
xchg
xchg
jbe
loopne
push
sub
and
stos
test
mov
test
and
push
cs
jge,pt
movsl
and
in
adc
dec
adc
cs
nop
jno
add
ja
repz
jb
cs
xor
inc
mov
cmp
fcmovnb
mov
lcall
jmp
stos
mov
mov
fucomp
pusha
shlb
pusha
dec
out
popa
daa
cwtl
inc
push
mov
pop
pop
and
push
out
add
mov
aaa
xchg
rorl
filds
and
rorb
lahf
rol
jle
fildl
cvtdq2ps
leave
movl
sbb
fwait
add
fdiv
jle
or
xor
pop
jp,pn
je
cmp
push
jge
inc
and
in
push
mov
dec
sub
not
rolb
daa
xor
xchg
aad
pusha
xchg
sahf
push
arpl
out
sub
pop
mov
loopne
push
test
fdivrl
mov
sahf
repnz
xor
xor
andl
popa
cmp
or
lret
cmpsb
out
xor
xchg
jb
jae
or
pusha
sbb
mov
mov
cmpsb
or
into
xchg
dec
gs
testb
loop
mov
movsb
mov
lret
subb
add
out
adc
out
fisttpl
ja
mov
lods
dec
push
std
stos
gs
popa
in
mov
push
pop
adc
adc
xchg
or
jmp
leave
pop
mov
popa
pop
sbb
inc
jno
cli
mov
les
addr16
or
lock
xor
andb
clc
ja
ljmp
loope
dec
es
insl
xchg
dec
dec
push
imul
pop
inc
mov
inc
push
lcall
lea
dec
repnz
lcall
push
mov
adc
cli
fdivrl
rolb
gs
fcompl
cwtl
dec
mov
sub
imul
in
out
cltd
push
out
into
fistps
das
pop
out
inc
cmp
push
pop
aas
test
xchg
xchg
sbbl
add
stos
in
mov
cmc
mov
les
sub
fisubl
jmp
mov
dec
test
test
in
mov
sbb
add
loopne
mov
mov
hlt
clc
fs
xchg
lods
jno
repnz
lret
in
hlt
adc
outsb
inc
repz
jp
add
popf
inc
dec
js
sub
rolb
leave
insl
mov
or
jae
xchg
cmp
sub
hlt
xchg
mov
scas
and
lahf
pop
and
in
fs
xchg
shll
mov
sub
sbb
pop
stos
data16
mov
ja
aas
lds
xlat
filds
push
fisubrl
int
mov
pop
push
mov
pop
xor
mov
or
add
sub
shl
dec
das
and
popa
dec
mov
fists
cmp
pop
xchg
in
sahf
or
push
fiadds
push
ret
sbb
add
pop
lock
scas
pop
dec
mov
or
sub
cmp
push
adc
leave
gs
sti
call
lea
xor
out
sahf
loope
addr16
sarl
jo
out
loop,pn
lods
pop
push
add
lahf
add
div
mov
mov
mov
push
jmp
int3
test
and
add
adc
daa
cli
adc
clc
mov
imul
sbb
sub
push
popa
inc
mov
sbb
cmp
lods
cwtl
aad
movsb
insb
cs
pushf
jl
pop
lds
sub
es
and
enter
cmpsb
add
pop
cltd
and
arpl
add
jnp
scas
mov
movsl
fnstsw
bound
gs
or
mov
into
pusha
stos
pop
or
daa
pop
int3
test
aas
add
pop
rcrb
add
ja
bound
repz
loope
lods
cmp
ret
roll
out
fisttps
sub
add
and
mov
xchg
out
cwtl
ret
mov
sahf
sarl
sbb
sub
ljmp
or
scas
push
push
xchg
call
sub
bound
dec
cmp
out
dec
iret
icebp
add
inc
mov
leave
pop
rcll
addr16
mov
add
insb
mov
jmp
notb
jnp
mov
aam
subb
sub
pop
filds
xor
cmpsl
ret
push
sub
sub
int3
xor
repnz
jmp
ja
xlat
inc
lahf
js
fsubr
sub
jno
pop
fstpl
xorl
add
push
lea
mov
cmc
adc
loop
out
xchg
pop
dec
inc
jmp
add
push
lds
subl
fsubrl
lods
push
xchg
lock
xchg
mov
pop
push
push
mov
movsb
mov
pop
ja
in
lds
fwait
fwait
sub
out
sub
xchg
mov
mov
js
push
test
nop
mov
lock
mul
loop
popa
negb
in
mov
lods
or
sub
repnz
orb
fs
ret
dec
mov
movsl
push
dec
loope
cmp
les
dec
sbbl
notl
mov
push
dec
dec
or
ret
mov
pop
pushf
dec
mov
mov
push
in
jb
push
lock
pop
int
fstps
nop
dec
and
jmp
xor
sub
adc
push
enter
loope
loope
cmp
popf
push
push
dec
es
out
pop
ret
cmp
les
mov
xchg
mov
popf
iret
in
movsb
dec
adc
loope
cmp
cmp
movsbl
cmc
sbb
jmp
jp
sbb
push
adc
sub
fcmovne
fcomps
dec
xchg
loop
cmc
mov
repz
mov
jl
jp
dec
push
dec
popf
mov
sbb
sub
xchg
arpl
jno
cmp
jmp
std
sbb
mov
pop
loope
cmp
adc
jge
movsb
mov
popf
jne
rorl
adc
push
or
jge
or
push
push
mov
andl
mov
sbb
adc
pushf
mov
mov
test
cs
int3
outsb
inc
adc
sbb
jecxz,pn
stc
mov
xchg
push
mov
mov
fiaddl
push
sbb
mov
scas
jnp
loopne
pop
scas
cs
sbb
shlb
sub
or
or
outsb
jno
push
push
sbb
fwait
sub
je
jge
decb
cmp
jae
dec
sbbb
cmpsl
movsl
int
jns
and
jnp
xorl
fwait
addb
jg
nop
pop
ret
jp
mov
fbstp
repnz
rorl
bound
pop
adc
outsl
shrl
rorl
sbb
mov
out
xor
mov
mov
bound
inc
popl
out
repnz
sbb
enter
cmc
pushf
xchg
mov
pop
add
add
insl
cltd
jg
js,pn
push
mov
sub
rcl
std
into
xor
std
test
jmp
add
xchg
clc
sbb
ljmp
push
idivb
mov
pop
inc
dec
insb
mov
xchg
dec
add
shrb
imul
sub
sbb
and
pop
xchg
jae
adcl
add
sbb
add
or
repz
inc
add
push
out
add
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
push
ljmp
cli
adc
pop
lods
fistpl
insb
mov
or
sbb
movsb
mov
ffree
das
mov
jge
xchg
xor
inc
pop
or
dec
das
incl
cmp
mov
push
and
jbe
je
and
pop
pop
jp
xchg
jns
or
out
and
mov
mov
xor
mov
adc
fs
sti
call
pop
mov
arpl
rcll
les
lret
mov
mov
xchg
and
cmpsl
aas
aad
pop
sarb
jmp
xor
lret
cmpsl
sub
lahf
and
cmc
test
inc
or
dec
push
into
popa
mov
jge
jnp
pop
cmp
sti
adc
insl
jle,pt
dec
push
rorb
mov
jecxz
sbb
in
das
inc
or
ret
jl
sub
rcr
and
stc
movsb
mov
push
sbb
cmpsl
sbb
fimull
movsb
test
aam
cmp
xchg
push
arpl
push
stos
adc
movsb
ja
test
fidivrs
nop
dec
push
insl
repnz
mov
push
push
sbb
cmp
mov
xchg
movsb
push
loope
or
dec
jnp
leave
shl
adc
es
jge
xor
jno
xchg
data16
dec
add
popa
dec
jl
pop
stos
push
std
dec
sbb
insl
mov
add
mov
push
lds
dec
popf
rorb
or
nop
jg
xor
sub
mov
out
popa
inc
mov
jno
push
sbb
mov
add
nop
ja
mov
sub
das
mov
repz
inc
sub
ret
pop
movsl
in
mov
lahf
clc
sbb
ret
inc
inc
int3
inc
sbb
cmp
add
cmpsl
mov
cwtl
dec
xchg
adc
sub
clc
jmp
jmp
js
dec
lods
xor
gs
divb
xor
imul
cwtl
pop
dec
mov
imul
cltd
data16
std
adc
insb
test
cmpl
jge
push
xor
mov
push
push
sub
out
mov
pop
cmp
iret
push
fcoms
or
repz
xlat
out
insl
rcrl
ds
addl
jno
fs
stos
stos
ret
sub
ret
jl
icebp
jg
sbb
rolb
jnp
adc
popa
cmp
mull
je
sub
mov
add
sbb
in
adc
sub
lret
push
xor
sbb
nop
mov
out
ret
jo
jo
push
call
cld
mov
push
xchg
outsl
addr16
lods
mov
pop
bound
fwait
sub
ja
dec
sub
arpl
cmpsb
sbb
shlb
and
mov
fisttps
xchg
sbb
jae
add
aam
stc
mov
je
mov
and
mov
mov
aam
jmp
jmp
mov
or
in
cmp
iret
sbb
dec
xorl
cmp
pop
and
fcoms
into
insl
filds
lahf
shrl
adc
push
pop
dec
repnz
jmp
xor
push
ljmp
adc
mov
adc
js
push
out
arpl
bound
sub
adc
pusha
push
imul
push
mov
xchg
inc
in
outsb
std
lret
cmc
test
pop
or
out
jecxz
dec
lahf
fwait
enter
and
dec
in
inc
clc
sbb
jmp
stos
icebp
xchg
dec
outsb
fisubs
add
enter
dec
lret
adc
ret
and
ret
stos
mov
cmp
cmc
add
movsb
sar
pusha
std
jno
mov
loope
push
mov
mov
xchg
dec
lock
xchg
and
repz
mov
pop
popf
faddl
loope
leave
xchg
pop
dec
cmp
ljmp
lret
mov
roll
cwtl
test
addr16
scas
pop
rcrb
arpl
jns
shr
mov
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
inc
cmpsl
adc
daa
cli
adc
fstl
mov
push
jnp
xor
imul
sbb
ss
cmp
out
imul
dec
sub
js
sbb
adc
sub
sbb
xlat
pop
xchg
ret
xchg
and
add
inc
sub
push
out
cmp
call
std
pop
mov
mov
xchg
xor
sub
sahf
shl
or
dec
push
loope
mov
mov
loopne
jl
and
mov
mov
sub
mov
fdiv
mov
iret
jmp
mov
jecxz
jge
jne
outsl
aas
jp
push
jb
inc
pop
push
sub
clc
xchg
xchg
lds
mov
mov
ljmp
pop
insb
add
dec
mov
jecxz
pop
sbb
das
fcomps
lea
pop
cmp
pop
aaa
out
subb
mov
jno
adc
ds
mov
jecxz
enter
les
fidivrs
pop
aaa
add
pop
pop
fwait
inc
push
adc
pop
xchg
scas
arpl
sub
rcrb
jecxz
jo
not
mov
and
inc
shll
xchg
dec
inc
mov
sbb
in
or
imul
and
lods
fistps
loopne
js
mov
jbe
cmp
dec
popf
stc
aaa
dec
push
and
int3
test
lcall
xchg
and
gs
loopne
iret
movsl
dec
outsb
inc
inc
xor
out
nop
or
dec
test
jbe
mov
sub
ljmp
inc
jns
xor
aaa
test
aas
iret
test
icebp
jb
mov
lods
cmp
icebp
push
mov
pusha
lahf
sahf
pushf
rolb
std
pop
dec
add
dec
mov
xor
adc
out
cwtl
and
mov
mov
jge
mov
in
jo
and
aam
jle
xchg
jne
mov
fwait
cmpsb
sbb
push
lock
pop
inc
jb
lea
int
xlat
test
and
in
jno
int
xchg
inc
mov
loop
shlb
cmp
repz
andb
dec
mov
std
sub
ljmp
push
call
and
ja
jge
pop
cltd
adc
std
mov
push
adc
push
ret
adc
into
fldenv
repnz
jle
jmp
pop
gs
pop
inc
and
or
cwtl
repnz
and
sbb
aam
mov
pop
bound
invd
testb
int
int3
jnp
inc
push
jbe
cli
insl
lahf
and
xchg
ja
adc
cld
mov
mov
sbb
fidivrs
mov
jle
movsl
dec
test
shll
push
or
dec
xlat
and
or
out
jb
inc
sub
xor
mov
adc
test
pop
iret
and
push
insl
pabsw
add
ret
push
xchg
test
inc
mov
xorb
ss
and
mov
adc
push
icebp
dec
aas
dec
addr16
lock
aas
in
sbb
inc
ljmp
popf
push
fmuls
pushl
in
jge
imul
add
cwtl
lcall
aas
mov
repnz
negb
cmpsl
jo
decl
fnstenv
xchg
jo
cmc
and
lds
push
sub
push
push
icebp
outsl
decb
ficompl
pop
out
jae
fld
mov
dec
fistpll
scas
and
cld
pusha
xor
and
in
jno
mov
cmc
pusha
pop
fbld
sbb
bound
out
imul
les
stos
adc
push
test
imul
enter
or
lahf
sbb
sub
or
inc
mov
sub
cwtl
test
aam
mov
pop
dec
int
jmp
xlat
pusha
mov
ror
xchg
jnp
lods
mov
into
lods
adc
jae
hlt
and
nop
imul
addr16
leave
cmp
dec
add
sti
sbb
mov
or
push
mov
add
jbe
mov
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
nop
push
cltd
lds
adc
daa
cli
adc
add
pusha
inc
lock
or
mov
repz
cmp
xor
sarl
lock
inc
mov
mov
inc
and
imull
inc
jmp
hlt
xchg
ja
test
dec
cld
andb
mov
and
jnp
insl
pop
fcmove
hlt
test
leave
in
aas
leave
mov
lcall
or
pop
out
daa
out
push
negl
mov
mov
adc
data16
sub
ss
outsl
fiaddl
sub
icebp
int
and
sahf
push
or
cld
insb
mov
adc
pop
sahf
into
insl
test
push
adc
adc
cmovs
pusha
cmpsb
jne
push
int
sub
in
dec
lcall
mov
insl
mov
pop
inc
insb
dec
fdivl
repnz
or
and
stos
xor
cmc
cmp
pop
jl
mov
cmc
sbb
iret
cmp
or
mov
pop
movsb
sub
test
cld
jg
push
cmp
mov
inc
inc
mov
mov
ds
pop
outsb
lods
dec
mov
mov
adc
mov
pop
inc
add
add
cmpsl
inc
scas
in
out
iret
jmp
push
fcomps
aas
cwtl
int
lods
push
in
mov
push
xor
fwait
xchg
cmpsb
sbb
jno
push
jl
xchg
lods
jnp
dec
ja
pop
sti
sub
mov
xchg
dec
movsb
xor
add
mov
add
xrelease
int
push
stc
arpl
popf
andb
jle
push
fisubl
mov
adc
mov
aas
ljmp
xor
cmpsl
and
movsb
cmpb
lret
sub
jle
rcll
cwtl
iret
and
pop
mov
imul
cmp
int
test
emms
leave
mov
stc
sub
rorl
xchg
inc
icebp
lret
aad
xchg
test
rcl
movq
xor
pop
or
pop
mov
mov
or
andb
and
and
mov
cld
lahf
arpl
and
sti
in
push
ret
lcall
jb
adc
addb
sbb
jmp
scas
insl
mov
cmc
lds
adc
mov
pop
pop
xor
mov
push
lahf
ss
ss
xor
inc
inc
sbb
arpl
loope
fs
imul
repz
cmpsl
aaa
das
loop
push
outsb
mov
pusha
movb
sbb
test
rclb
scas
stos
mov
aam
jge
jne
loope
jecxz
pop
cltd
mov
ja
mov
fidivrl
test
leave
js
rol
cmpsl
sti
outsb
insb
movaps
sbb
xchg
xchg
push
adc
scas
mov
xor
xchg
std
je
mov
pushl
add
rorl
adc
stc
aaa
add
sub
mov
or
sbb
cmpl
push
and
dec
fstps
dec
cmp
fsubrs
or
das
adc
and
ds
fldl
jbe
dec
add
iret
push
cmp
jg
mov
mov
ljmp
aas
insb
dec
lock
out
inc
xchg
and
leave
into
iret
sub
and
mov
xor
and
adc
ljmp
cld
inc
and
and
ds
pop
pusha
mov
movsb
iret
cltd
addl
cmpsb
mov
out
insl
insl
gs
lcall
andb
sti
test
adc
mov
sti
nop
sub
xor
pop
lahf
out
xchg
mov
testl
xchg
cld
jnp
sbb
hlt
lahf
enter
xor
xchg
or
sbb
movsl
mov
mov
inc
subl
push
aas
push
subb
mov
ja
lea
enter
int3
mov
lods
adc
xchg
iret
dec
push
xchg
rcrb
push
and
mov
lea
jl
xchg
stc
ret
scas
mov
aad
imul
cwtl
pop
mul
cli
jmp
pop
sbb
lds
stos
decb
push
orb
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
fiadds
push
enter
mov
push
sar
jne
shrb
out
aad
or
cli
cmpsb
lahf
pop
cmc
dec
insb
mov
xchg
sbb
cli
notb
adc
repnz
and
mov
fsubrp
mov
dec
je
inc
push
dec
js
inc
adc
movsl
aad
dec
jo
mov
jo
cmp
mov
repnz
or
xchg
sbb
cld
adcb
lahf
inc
xor
push
ja
mov
lods
movsl
push
mov
aas
push
test
jne
mov
xchg
jmp
ljmp
pop
pop
mov
inc
les
imul
mov
loope
cltd
mov
cltd
mov
and
inc
dec
popf
mov
jns
mov
lock
inc
mov
pop
push
mov
add
or
push
pop
pop
push
xor
cmpsl
pushf
xor
orl
mov
mov
mov
les
mov
pop
not
icebp
gs
pop
and
adc
std
loope
mov
pop
in
push
fnstsw
out
mov
inc
test
lds
pop
in
cltd
test
jg
mov
push
int3
mov
scas
je
pop
and
dec
push
lods
xchg
adcb
jl
adc
pop
les
test
and
sub
add
cmpsb
nop
fsubs
or
cld
push
jns
into
lret
and
and
int3
cmpsb
inc
sbb
stos
push
fs
sub
push
pop
fmull
xchg
sti
mov
xor
cli
cs
jae
pop
pop
cmp
add
xor
nop
xor
sbb
push
and
mov
fcmovne
insl
fcoml
mov
jl
loope
adc
xor
pop
and
and
or
scas
fisubl
add
dec
inc
popa
fsub
pusha
and
ret
xor
and
adcb
test
ljmp
insb
add
insl
xchg
insl
sbb
adc
ljmp
adcl
daa
stos
fimull
leave
iret
dec
push
cli
pop
push
sbb
cmp
aad
xchg
cmpsl
int
fsubs
cmpsl
inc
mov
loop
bound
cs
add
cmpsl
arpl
jb
js
or
mov
mov
rclb
jns
out
loopne
inc
cmpsl
mov
cmpb
xchg
cli
add
dec
std
fcmove
addr16
test
push
clc
cmp
addr16
mov
mov
add
cmp
mov
cmpsb
faddl
xor
stos
gs
lds
jg
rclb
inc
pop
mov
or
pop
mov
js
xor
shll
mov
test
pop
stos
mov
das
mov
jle
or
bound
lea
and
dec
sub
lds
fmuls
out
mov
shlb
fisubrs
or
inc
ljmp
int3
scas
mov
mov
adc
mov
imul
jnp
jae
xchg
xchg
out
subb
cmp
mov
mov
sbb
std
int3
lea
cmp
repnz
fstl
add
push
push
insb
jle
mov
push
fwait
aad
mov
push
lret
push
lock
aaa
pop
xchg
nop
push
sbb
push
lods
cmp
mov
out
sbb
rol
test
ret
loop
xchg
in
test
test
test
inc
jecxz
ret
insl
adc
hlt
aas
pmullw
mov
inc
xor
cmp
mov
dec
adc
js
fidivl
mov
insb
mov
icebp
shrl
dec
inc
inc
sub
pop
hlt
leave
test
sbb
fwait
in
mov
cltd
push
loop
or
stc
or
mov
fs
pop
mov
cli
dec
sarl
sbb
scas
mov
cmp
cmp
repz
jl
out
dec
cltd
into
sub
in
popa
out
rcrb
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
insl
lds
adc
aaa
cli
adc
xchg
mov
mov
sub
rcr
mov
mov
or
jl
imul
jp
lods
mov
push
loope
xor
ss
pop
dec
pop
dec
xor
dec
ds
fdivrp
dec
sbb
push
xchg
dec
cli
push
pop
pop
or
ljmp
mov
js
xor
lock
add
ret
data16
out
clc
jns
jg
pop
or
insl
mov
or
or
pop
mov
adc
ds
sbb
sti
mov
add
jle
aad
push
mov
dec
mov
dec
hlt
sub
iret
jl
lods
dec
inc
fcoms
jbe
sbb
dec
push
fimull
outsb
ret
mov
int
out
movsb
lods
rcr
lds
lods
lea
dec
pop
mov
sbbl
mov
jecxz
inc
adcl
adc
and
sarl
add
xlat
lock
mov
push
mov
out
cmp
inc
sbb
gs
pop
lret
and
aas
repnz
cmp
mov
dec
imul
xorl
push
or
pop
bound
mov
sub
sub
in
pop
ret
imul
shl
rcll
push
js
adc
lcall
sub
add
mov
scas
mov
xchg
xor
add
imul
jle
and
mov
mov
popf
les
testb
hlt
mov
inc
unpckhps
rol
aad
clc
and
andl
push
shl
pop
pop
push
cmp
psrad
lret
out
fwait
aaa
mov
sub
and
push
mov
mov
push
xchg
jle
add
pop
popl
cmp
fcomps
js
sub
jecxz
dec
or
ljmp
ficomps
sub
sub
push
jnp
ror
mov
scas
add
popa
arpl
dec
sti
inc
fmul
movsl
mov
jp
jae
dec
js
push
stc
push
div
fisttps
push
pop
push
adc
test
dec
aad
bound
inc
inc
pop
push
xchg
clc
les
cmpsl
xchg
lds
sarl
or
xchg
push
and
jnp
and
dec
or
lds
lods
repz
mov
cs
mov
aaa
xor
hlt
cmp
test
mov
add
outsb
cli
shl
dec
aas
pop
stc
clc
in
sbb
fwait
jg
sbb
dec
cmc
arpl
out
sub
cltd
stc
adc
add
lods
sub
gs
xchg
add
mov
dec
mov
mov
les
inc
inc
push
mov
stos
fldcw
pop
mov
popf
adc
arpl
enter
bound
push
stos
pop
jnp
hlt
and
add
jnp
or
add
mov
dec
sbb
gs
sahf
pop
clc
sarl
push
mov
adc
jp
jb
jnp
sub
jle
in
stos
jecxz
add
ljmp
fldt
movsb
mov
fsubrp
push
pop
vmovapd
jo
cmpl
inc
dec
rclb
or
icebp
int
sbb
jo
les
sbb
cmp
icebp
dec
aas
cmp
xchg
jg
aam
cwtl
ds
cmp
add
mov
cltd
hlt
sub
mov
data16
incb
outsl
incl
clc
icebp
lods
jns
in
daa
gs
sarb
cmp
push
sti
push
sbb
test
movsl
pop
fcompp
outsb
jle
and
negl
xor
shrb
mov
or
dec
dec
shlb
mov
and
pop
daa
sbb
loopne
ss
mov
jecxz
and
mov
dec
add
dec
test
adcb
or
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
inc
xor
pop
fsubr
shrl
mov
add
out
mov
push
outsl
ret
xor
les
pop
mov
xchg
lods
ret
push
mov
jo
dec
sarl
lock
and
add
sub
jbe
xchg
jmp
lahf
sbb
andb
and
leave
or
mov
pop
xchg
jge
clc
jnp
pop
mov
test
add
hlt
insb
loop
mov
mov
jbe
cmpsb
stc
cmp
xchg
inc
or
cmpsb
mov
arpl
test
fcoms
rcrb
out
add
loopne
xchg
add
out
mov
lods
and
xchg
imul
sbb
cmp
sub
sbb
mov
es
sbb
imul
fldenv
ss
xor
into
xchg
sbb
mov
test
pop
or
pop
jl
and
rcll
pop
icebp
add
cwtl
mov
or
adc
std
inc
addr16
cwtl
dec
int
cltd
rcr
dec
out
jg
add
or
fiaddl
push
and
leave
sbb
rclb
jp
pop
jne,pt
add
icebp
pop
add
mov
push
call
jmp
inc
mov
shll
xchg
outsl
lcall
cmp
mov
mov
push
mov
dec
insb
jnp
lahf
push
loope
inc
inc
inc
cmpsl
mov
xor
ds
nop
movsb
sbb
pop
sbb
imul
jge
xlat
daa
cmp
inc
jg
adc
fucomip
rcrb
pop
jbe
mov
jle
stos
inc
jle
inc
sbb
jbe
push
incl
test
mov
mov
mov
enter
fwait
sbb
movsl
in
test
jl
mov
xor
jo
jge
cmp
sbb
repz
mov
jl
xchg
scas
outsl
fimull
xchg
test
scas
xor
cmp
insb
or
cmpsl
shlb
mov
mov
ds
mov
xchg
cmovne
pop
pop
pop
xchg
fcmovb
scas
add
in
adc
test
rorl
out
push
pop
mov
inc
mov
jbe
mov
mov
inc
pop
add
in
int3
xchg
jbe
js
inc
sub
pop
mov
stos
and
in
test
and
xchg
pop
mov
mov
jne
jbe
sbb
push
ja
outsl
jbe
je
iret
fisttpll
inc
aaa
adc
mov
dec
jp
xchg
adc
fadd
xchg
dec
ljmp
fstpl
push
icebp
xor
jmp
addb
dec
pushf
cld
call
mov
dec
lret
xchg
pop
sub
jp
daa
mov
scas
out
pcmpgtd
mov
in
leave
dec
sbb
or
cmp
inc
xchg
clc
adcl
int
mov
aas
push
arpl
hlt
xchg
out
mov
popf
lds
pop
pop
rcrl
lock
push
pop
loopne
test
jne
add
adc
or
stos
push
icebp
mov
je
jbe,pt
sub
mov
cmp
mov
or
dec
sti
or
das
rcl
mov
sub
popa
leave
sbb
out
cmp
jne
push
mov
cmp
inc
inc
ds
inc
adc
dec
mov
popa
lahf
sbbb
in
stos
jmp
mov
dec
les
fidivl
hlt
jo
mov
dec
add
sbb
add
outsl
mov
insl
test
inc
cltd
pop
and
xchg
pusha
and
ret
popa
fmuls
xlat
enter
and
ja
out
jno
push
ss
arpl
and
addr16
xor
out
jo
push
xchg
mov
jae
adcb
xor
ljmp
xchg
popf
jmp
mov
mov
push
pop
lret
pop
or
inc
jne
das
cmpsl
push
dec
dec
fbstp
sbb
jmp
lret
popf
xchg
push
add
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
ja
fldt
adc
iret
and
pop
pop
push
test
test
das
push
cld
sti
xchg
adc
dec
adc
xor
xor
sbb
push
inc
mov
sbb
and
adc
inc
jnp
mov
aas
cld
dec
xchg
ret
or
insl
and
push
out
push
and
xor
push
or
cmp
lds
cwtl
arpl
sub
lods
jo
insl
or
jle
sti
adc
jp
out
gs
popa
call
push
mov
pop
popf
bound
adc
push
mov
shlb
dec
movsl
out
jbe
xor
xor
mov
mov
into
mov
fsub
cwtl
pop
add
jae
jle
pop
inc
mov
mov
dec
bnd
clc
stos
push
lds
jge
leave
cltd
fdivr
pop
mov
mov
push
int
mov
data16
xchg
dec
jp
out
inc
mov
insb
jno
pop
and
mov
shll
cmpsl
cmp
ror
mov
sub
sbbb
fmull
dec
stc
xchg
push
and
mov
jecxz
push
les
add
lahf
jb
invd
push
cld
cli
and
sarl
lret
add
add
sub
push
fs
or
stc
jg
mov
pusha
mov
xchg
ret
add
pop
xlat
xchg
mov
pop
adc
inc
and
mov
mov
xchg
fadds
test
addr16
push
mov
jae
inc
or
cwtl
jle
mov
andb
jb
cmp
mov
adc
ss
xchg
sbb
dec
nop
sub
dec
and
inc
and
into
fidivs
mov
xor
jl
bound
mov
cwtl
sbb
jns
sbbl
or
mov
lret
fcmovu
push
push
mov
dec
negb
adc
lret
jnp
sbb
pusha
mov
repnz
adc
aad
imul
fildl
jnp
ret
sarb
into
add
or
mov
fistps
or
push
pop
xchg
dec
ja
dec
loop
xor
adc
mov
das
lret
icebp
cmp
jbe
pop
loop
push
push
scas
mov
and
push
je
repnz
call
insb
mov
jne
pop
fidivs
sbb
idiv
jae
sbb
mov
fidivs
push
es
loopne
test
xchg
stos
or
cli
jo
clc
clc
push
mul
jns
sti
loop
sub
fsubrs
push
inc
dec
jle
fistpll
push
fdivl
ja
rol
dec
cmp
mov
and
negb
aas
int3
or
or
dec
outsl
fisttps
jb
in
adc
outsb
imul
lods
insl
pushf
aad
or
dec
sbb
add
aad
mov
pusha
xor
mov
dec
out
and
setg
fcomps
cmpsb
hlt
das
std
push
mov
lahf
idiv
fs
out
in
out
push
cmp
icebp
aaa
les
cld
dec
add
aas
jle
lcall
fstpl
hlt
call
fwait
mov
jns
cmp
das
cmp
adc
out
cmp
mov
xor
dec
stc
push
adc
sub
xchg
cmp
adc
xchg
jecxz
shl
clc
dec
mov
sub
pop
xchg
inc
pop
xlat
adc
test
cmp
push
jae
sbb
aas
cli
mov
lods
or
adc
push
sbb
lock
iret
in
mov
fisubrs
loopne
ljmp
ror
dec
std
aad
sbb
jmp
adc
push
test
mov
aas
rcrl
xlat
loop
sbbb
bound
aad
test
dec
iret
jne
jnp
mov
adcb
mov
push
or
pop
testb
inc
and
out
sbb
push
sbb
adc
lods
mov
pop
jge
push
negb
add
out
loope
jp
fstl
push
push
push
sbbl
call
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
sub
mov
adc
cli
adc
mov
cmp
mov
gs
outsb
clc
cmpb
push
push
cltd
jmp
mov
cmp
xlat
mov
je
dec
and
stos
xor
dec
jge
jmp
test
fsub
xchg
add
das
adc
neg
add
xor
push
loope
movsb
mov
aaa
and
test
ds
je
xchg
andb
mov
dec
stc
shlb
mov
lods
adc
adc
cltd
mov
mov
out
pop
pop
imul
cltd
jns
add
shlb
leave
out
test
and
push
jmp
inc
pop
adc
adc
out
ret
adc
movsb
xchg
rcll
gs
pop
fnstcw
pop
lea
sbb
pop
gs
dec
cmpsl
jmp
pop
inc
cld
jg
sbb
adc
sub
xor
stos
mov
inc
mov
ss
dec
ljmp
add
add
popa
or
mov
xor
loopne
adc
mov
lcall
rcl
ficomps
xchg
fldenv
xlat
rcrb
outsl
cwtl
add
mov
mov
cmp
push
or
shll
test
push
sti
orb
dec
stos
cs
push
daa
mov
jle
mov
xchg
or
dec
aad
dec
inc
addb
andb
out
cmp
xchg
xchg
xchg
cmp
sbb
icebp
mov
mov
sbb
arpl
pop
or
add
or
movsb
adc
shrl
int3
mov
add
adc
scas
sub
std
mov
insb
mov
notb
sub
cmp
std
ljmp
dec
adc
mull
xchg
adc
mov
pop
mov
sub
mov
jns
dec
sbb
arpl
jns
in
dec
popf
xlat
ret
aas
and
or
mov
addr16
mov
lods
mov
mov
sbb
mov
push
rclb
add
pop
push
jb
sub
enter
out
mov
mov
xlat
dec
shl
popa
in
inc
arpl
es
and
not
inc
mov
mov
outsb
nop
mov
xlat
dec
cmpsl
leave
scas
lods
inc
xor
pop
mov
pushf
jge
or
add
pop
sahf
mov
cltd
inc
shrb
mov
pop
xor
popa
jle
idivl
loop
xchg
les
mov
test
mov
pop
outsb
push
fucomi
xchg
lcall
xchg
add
adc
pop
push
mov
repnz
movsl
ja
rorl
lret
test
push
je
add
repnz
mov
jmp
adc
mov
movsl
daa
arpl
mov
fdiv
and
insl
fwait
xlat
int3
jmp
outsl
repz
or
or
xor
jg
mov
test
nop
add
mov
xchg
xor
data16
jge
jae
or
std
xor
mov
pop
jne
adc
adcb
sbb
pushf
or
pop
and
mov
enter
fsubl
sub
enter
mov
popf
inc
sbb
test
mov
pop
cmp
mov
mov
bswap
xchg
addr16
outsb
daa
mov
mov
sub
xchg
inc
dec
push
cmp
xor
and
mov
push
ret
or
mov
lea
push
cmpsl
push
pushf
fnsave
stos
push
adcb
daa
mov
lret
jmp
pop
cmp
push
sarl
sub
cld
je
mov
push
mov
adc
push
pop
or
jae
imul
sbb
xchg
lret
or
int3
imul
fs
les
addr16
rcll
mov
mov
add
daa
jmp
sti
mov
shlb
xor
adc
icebp
adc
pop
jmp
test
call
rolb
adc
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
sub
aaa
cli
adc
jns
adc
push
push
push
es
ss
jl
sub
sbb
mov
mov
repnz
pop
jmp
repnz
dec
insl
ljmp
ljmp
jne
xor
inc
cmp
ds
in
or
pop
jge
mov
jo
div
pop
sbb
xchg
nop
adc
mov
jl
in
sub
stos
add
cmp
icebp
sub
sbb
imul
popf
fscale
rorl
ja
mov
mov
mov
in
push
or
js
or
fnsave
dec
inc
push
jno
xor
lret
adc
mov
cmpsb
popa
fs
xchg
mov
out
daa
and
jg
shl
push
add
mov
arpl
loope
aaa
mov
aaa
adc
sbb
pop
or
push
push
xchg
jge
imul
loope
xchg
test
daa
imul
mov
mov
into
in
cmp
scas
xchg
repnz
cmc
sub
or
dec
jle
mov
inc
xchg
pop
popf
pop
and
jae
cmp
push
call
push
ss
out
int
sbb
xor
and
int3
or
inc
or
js
cmp
inc
jmp
mov
dec
sbb
mov
cmp
mov
or
cmp
das
xlat
dec
popf
dec
adc
ret
xchg
fimull
cmpb
lcall
xor
fucomp
add
pushf
jle
cmp
xor
xor
pop
div
fcoms
faddl
sbb
rcr
cmp
and
loopne
add
pushf
jo
push
lret
cld
sbb
jle
out
xchg
not
popf
jg
dec
lret
mov
into
xor
idivl
xorb
sub
shrl
cltd
inc
dec
sahf
pushf
gs
cld
out
insl
in
fwait
mov
pop
aad
push
mulb
or
add
sub
dec
ds
pop
sahf
movsb
inc
mov
ja
sbb
jno
loopne
mov
xchg
cmpsl
lret
divb
sahf
lock
jmp
pop
push
pop
push
mov
pushf
mulb
jnp
loop
xchg
outsb
sbb
roll
sti
sub
clc
arpl
jo
mov
js
sub
mov
js
mov
jnp
or
stc
test
jb
lock
imul
mov
dec
out
dec
pop
in
xchg
push
mov
jge
ljmp
or
cmp
mov
or
push
call
mov
xchg
jge
xor
xor
into
and
add
xor
cmc
inc
jge
xchg
aam
adc
dec
push
mov
jae
or
outsb
xor
lret
lea
test
lods
es
add
out
out
scas
xor
aas
les
pop
jno
cmp
out
push
sub
and
sti
sarl
mov
imul
sbb
or
xor
dec
jle
xchg
sub
in
cltd
fstps
testb
or
push
mov
lock
xchg
mov
add
movsl
into
xor
test
out
lds
rorb
push
negl
lret
int3
push
lahf
add
xchg
and
or
fdivs
mov
jg
dec
dec
cmp
outsl
mulb
mov
mov
popf
lods
xlat
push
cltd
push
dec
cltd
je
jmp
lock
mov
mov
cs
add
mov
dec
scas
mov
xchg
push
leave
cs
mov
lock
testl
sarb
loope
pop
sti
jnp
push
sub
shll
fadd
aad
js
lahf
inc
addr16
sub
mov
hlt
enter
xor
jge
bound
lea
mov
push
mov
mov
sub
lock
push
cmp
sbb
adc
enter
mov
push
mov
mov
lret
xor
mov
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
stos
push
add
aaa
cli
adc
mov
outsb
cmp
mov
sbb
push
stos
jmp
shll
aam
mov
and
dec
sbb
loopne
stc
pop
push
cltd
std
and
add
dec
out
outsl
enter
sahf
jg
push
add
sub
jmp
mov
sub
xor
xorl
daa
jge
in
ficoms
in
pop
and
mov
insb
cmpb
pop
repnz
movb
outsl
and
sub
xchg
fisubl
ror
sbb
xchg
cmpsl
jl
xor
pop
pop
bound
xchg
fs
das
loop
sub
dec
sub
fs
add
push
dec
inc
pop
jle
divb
xor
notl
jnp
lahf
popf
xor
sbb
pop
sub
or
int3
pop
add
insl
mov
mulb
mov
in
and
push
clc
mov
hlt
inc
mov
fisttpll
or
pop
lods
add
cmp
jge
dec
stos
mov
fsubs
fistpl
adc
fldcw
xor
cmpsl
insl
ficompl
loopne
inc
mov
mov
loop
pop
outsb
mov
mov
std
mov
cmp
push
in
movsb
fisubrl
jl
mov
outsl
push
ss
jno
popf
andl
jne
or
xchg
cmp
test
push
mov
jmp
add
jo
in
mov
sub
sub
xchg
mov
enterw
xchg
out
adc
mov
mov
pop
mov
adcl
cmpsl
roll
inc
jae
loope
adc
mov
arpl
inc
dec
push
out
mov
outsl
push
pop
stc
mov
neg
push
mov
jg
jno
in
cwtl
sbb
xor
inc
dec
jbe
stc
cltd
cmovp
pop
mov
xchg
mov
cmp
sbb
mov
mov
ljmp
pop
jns
ja
dec
stc
cmp
inc
cmp
add
mov
jle
pop
insb
pushl
jo
out
aas
mov
or
mov
push
dec
mov
mov
and
cwtl
xor
in
jb
movsb
sub
push
jl
out
add
dec
or
mov
cmpsl
mov
add
mov
call
arpl
scas
mov
loope
mov
cmpsb
xor
mov
lods
fs
mulb
cmpb
jle
xorb
or
xor
std
or
sti
and
push
xor
or
fmull
push
sub
pop
push
dec
jne
aas
inc
add
outsl
or
push
in
push
rcrb
mov
stos
and
or
cmpsl
test
push
outsl
pop
xchg
hlt
inc
iret
mov
inc
mov
dec
dec
cmpsl
dec
or
mov
out
lea
push
aam
inc
jp
pop
js
mov
ss
lock
imulb
int3
sbb
fcmovnu
insl
scas
push
icebp
ds
ljmp
xchg
mov
sbb
or
repnz
pop
xchg
fmull
jnp
movsb
lds
clc
out
popa
outsl
inc
pushf
ss
dec
pop
fistpll
mov
xchg
jmp
pop
pop
rclb
scas
jl
jbe
jbe
sub
in
xor
and
outsb
or
jae
repz
pop
test
cmpsb
xchg
pop
dec
in
push
xor
addr16
ret
test
xchg
cwtl
outsb
inc
inc
popa
in
mov
rorl
lods
cmpsl
mov
mov
xor
aas
cmp
neg
dec
jnp
jg
add
and
stos
repnz
pop
stos
pusha
add
aaa
jg
lods
icebp
movsl
ljmp
jmp
push
scas
ja
adc
cmp
jmp
sahf
xchg
sub
fisttpll
adc
movsl
push
in
fnstcw
lcall
cltd
idiv
dec
inc
push
es
fs
mov
lods
xor
cmpsb
js
hlt
repnz
dec
ljmp
jl
jae
push
loop
adc
mov
xor
mov
xchg
stc
out
lea
jno
push
loopne
arpl
push
lock
cltd
test
lods
roll
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
push
adcb
lret
adc
cli
adc
out
xor
xor
test
jb
sbb
sub
xor
adc
call
lods
sub
lea
pusha
push
mov
inc
xchg
arpl
dec
mov
add
aad
jbe
xor
testl
mov
dec
mov
lods
lea
or
adc
and
out
jle
clc
push
mov
jp
xchg
sbb
inc
lcall
push
das
and
je
and
pop
mov
or
jmp
adc
mov
and
clc
mov
adc
mov
pop
nop
outsl
xorl
hlt
lret
cmpsb
std
cmp
jne
ret
push
jbe
rorl
pop
insl
inc
push
push
push
pusha
dec
int3
cmp
popw
fildl
repz
orl
sbb
inc
call
nop
and
vhaddps
repz
or
xor
sbb
sbb
pop
inc
fdiv
fsub
leave
cld
iret
xor
shl
dec
adc
out
xchg
gs
dec
cmpb
rcll
mov
fstp
push
lret
add
cmp
push
mov
xchg
aas
or
or
jo
jns
ficoml
leave
sbb
jp
ja
xor
mov
daa
sti
dec
aad
push
sbbl
lcall
xchg
mov
enter
pusha
stos
jbe
les
mov
adc
popa
lods
test
dec
jle
mov
ret
push
insl
adc
ja
inc
xchg
hlt
out
das
sbb
lods
filds
xor
push
mov
arpl
shrl
push
mov
popa
pop
sbb
mov
test
push
mov
sub
popa
int3
sub
clc
orl
inc
out
or
pop
ds
sub
jmp
xor
push
jb
test
mov
hlt
dec
dec
imulb
sub
xchg
imul
cmpsl
and
mov
dec
mov
xor
movsb
push
and
push
mov
ss
jno
inc
push
xchg
xchg
xchg
in
insb
sbbb
into
flds
mov
pop
ds
mov
scas
push
jns
mov
jecxz
repnz
pop
pop
and
mov
ja
sbb
mov
inc
imul
pop
pop
cmp
sub
push
lret
loop
out
inc
test
jb
push
test
lcall
sub
cmp
lods
loopne
jae
jne
popf
testb
jne
adc
mov
and
flds
mov
mov
add
dec
ljmp
sub
scas
gs
and
mov
push
cld
lea
and
push
inc
mov
dec
hlt
stc
jge
lods
inc
mov
mov
inc
add
pusha
mov
cmp
in
mov
add
fwait
xchg
cmc
sub
sbb
inc
movsb
sub
jg
outsl
mov
ret
mov
shl
std
inc
int3
mov
call
mov
or
loope
das
inc
push
dec
add
mov
lea
out
test
mov
dec
mov
lcall
push
shll
and
sbb
cwtl
test
pop
gs
fs
arpl
dec
mov
out
pop
in
mov
lock
lahf
daa
decb
xchg
roll
out
jns
jne
push
jecxz
inc
and
into
adc
out
pop
cmpsl
pop
xor
cli
aad
sub
jo
out
sahf
bound
push
jbe
adc
subl
cmp
sub
repnz
push
int3
js
sbb
mov
cmp
lcall
cmpsl
mov
jbe
add
dec
cltd
sbb
sbb
addr16
jns
js
jb
or
jmp
cmp
sub
ror
jg
xchg
add
sub
sbb
movsl
enter
movsl
sahf
xorl
aas
repz
popf
push
dec
or
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
cmp
cwtl
xor
aas
mov
test
cli
jge
mov
rcr
sub
dec
xchg
loop
fdiv
loopne
aaa
ret
out
add
pop
mov
xchg
sbb
sub
stos
dec
stos
cwtl
das
adc
out
mov
das
pop
cmp
and
inc
and
repnz
mov
outsl
jne
lods
push
out
and
or
aaa
xor
mov
sbb
insl
add
lods
fdivrl
outsl
lret
xor
xor
roll
cmp
in
pop
mov
pop
sub
xor
or
insl
dec
daa
push
stos
fldt
cmp
outsb
adc
mov
ficompl
lahf
in
cld
into
mov
in
jb
mov
aaa
xor
jge
cmpsb
stos
jne
sbb
sub
and
mov
mov
in
cwtl
sbb
inc
xchg
lock
fstl
push
test
je
pop
pop
aaa
push
cmp
mov
add
out
push
mov
lods
mov
or
in
mov
jbe
leave
loopne
ja
mov
fwait
adc
cmp
aam
fisubrl
scas
xor
test
and
jo
fidivrl
addr16
les
ret
stos
pushf
push
ret
mov
mov
lea
aaa
push
cwtl
sbb
mov
cwtl
fisubrs
inc
fwait
mov
rep
sbb
repnz
cmp
dec
in
cmpsb
add
sub
aam
sbb
push
sbb
push
cmpl
daa
adc
sahf
mov
mov
mov
adc
sbb
out
pop
or
xlat
mov
cwtl
ljmp
repz
lock
lock
add
cmc
sti
into
jl
jge
xchg
sbb
pop
adc
pop
sarl
or
std
xor
sbb
sub
cmp
or
push
ljmp
sarb
or
pop
adc
mov
sub
lret
inc
in
pop
sbb
cmp
data16
inc
xchg
and
adc
ret
jg
jae
dec
dec
mov
lods
enter
xchg
pop
xchg
loop
push
mov
gs
inc
imul
mov
sbb
cmp
repz
scas
fdivrs
xor
in
cmp
in
pop
dec
jno
mov
pop
pop
out
dec
jbe
sub
push
mov
out
cmp
movl
bound
fldl
or
or
sub
or
dec
push
insb
outsb
out
hlt
push
push
data16
aaa
cmp
add
xchg
ret
mov
pop
cmp
and
icebp
je
icebp
mov
xchg
sub
inc
or
mov
dec
mov
dec
mov
xchg
pusha
movsl
cmpl
mov
sub
es
adc
test
jns
jmp
scas
outsl
int3
lea
outsb
mov
and
adc
leave
cltd
ljmp
xchg
cltd
pop
inc
aad
jnp
and
adc
and
in
dec
fiaddl
ret
pop
mov
cmc
xchg
imul
imul
add
bound
cltd
and
and
sub
add
push
stc
or
hlt
dec
and
push
pushf
ljmp
fdivl
cmp
divl
mov
pop
push
jmp
mov
pop
imul
push
mov
dec
ss
cs
xor
adc
cltd
and
pop
int
leave
shlb
mov
mov
sbb
popa
fs
jne
sarb
xor
adc
jp
in
adc
scas
fldenv
fwait
mov
test
mov
je
jnp
sbb
out
push
sbb
inc
cmp
mov
xor
and
jns
popf
ja
mov
add
repnz
and
movsl
pop
test
aad
ljmp
ret
xor
das
mov
adc
sub
call
imul
mov
add
icebp
scas
das
das
pop
aaa
outsb
mov
sub
jg
pusha
stc
cltd
jg
xor
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
push
das
jnp
jg
adc
cli
adc
es
loope
sbb
subb
xchg
fcmovne
test
stos
ret
adc
mov
xor
xor
daa
andb
add
in
sahf
jne
jno
push
inc
lret
mov
test
sbb
ret
cmp
jns
cmp
pop
aam
lock
fmuls
inc
or
inc
mov
mov
jecxz
lcall
fs
daa
add
pop
cmp
cmp
jnp
out
mov
jnp
pop
rol
xor
stos
dec
adc
sub
inc
psrlq
sbbb
sbb
pop
ss
clc
in
add
add
pop
mov
insb
cs
sbb
jb
adc
adc
xchg
xchg
push
das
gs
push
sub
movd
or
leave
pop
rcr
mov
sbb
in
or
xorb
es
mov
cmp
cmpsl
xchg
lret
cmp
push
pop
in
pop
cvtps2pi
push
dec
xor
loope
xor
lds
pop
neg
imul
int
sbb
pop
lcall
xor
stos
loop
jno
lea
cmp
and
cmp
roll
addl
fbstp
and
in
lret
jle
lods
jmp
sbb
inc
sub
mov
pushf
and
inc
out
cmovge
das
repz
jne
jae
test
in
push
das
jle
outsl
out
add
mov
and
jp
pop
adc
fadd
into
mov
cmp
jecxz
out
popa
add
or
sbb
stc
mov
xor
icebp
mov
loop
data16
jnp
out
les
outsb
mov
adc
ret
pusha
cltd
pop
add
or
inc
and
sub
in
or
arpl
mov
shl
push
add
mov
push
xchg
jno
clc
push
imul
jb
xor
in
mov
xchg
jns
or
mov
push
and
mov
fsubr
cs
mov
leave
inc
cmc
sub
sub
jle
loopne
jnp
jae
imul
ret
add
daa
mov
pop
jne
into
sub
iret
cwtl
cwtl
inc
sub
sahf
cmp
in
mov
jle
shlb
nop
and
arpl
or
add
and
xchg
dec
stos
xor
cmp
pop
loopne
cmp
sub
mov
shll
sbb
pop
xchg
aas
ret
pop
sub
sub
sbb
mov
sti
or
fcompl
scas
push
pop
sbb
sbb
aam
cmpb
mov
cmp
movsl
xor
sbb
hlt
or
or
pop
xchg
repnz
mov
inc
jl
or
fisubrl
fwait
mov
pop
aas
test
jecxz
lods
ds
iret
dec
mov
dec
enter
movsl
adcl
sub
mov
enter
xor
jb
xor
push
pop
mov
xchg
fdivrs
mov
xchg
push
jns
aas
movsl
int
pop
xor
icebp
sub
push
in
sub
mov
push
pushl
aas
lock
add
or
dec
push
adc
ret
aaa
lahf
dec
js
push
outsb
push
and
cmp
jg
push
sbb
fiaddl
cmpsl
push
push
imul
int
sbb
mov
or
push
mov
push
das
int3
xchg
cld
lock
add
enter
xlat
or
mov
lds
stos
scas
push
ret
ret
sbb
mov
mov
adc
imul
adc
test
mov
cltd
imul
dec
icebp
cs
sub
aad
call
out
push
mov
fdivrs
mov
movsb
ficomps
mov
mov
decb
stc
mov
inc
js
adc
inc
mov
idivb
dec
lret
push
sbb
shl
lcall
lea
or
pushl
inc
add
lods
roll
call
cmp
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
das
mov
iret
mov
inc
xchg
mov
out
push
inc
fistps
jb
mov
outsl
mov
push
mov
andl
cwtl
cli
push
xchg
mov
and
mov
roll
cwtl
cmc
and
bound
inc
loopne
xor
dec
ror
mov
orl
pop
jnp
cmp
adcb
hlt
insl
mov
push
ror
pop
pop
cmpsb
sbb
pop
adc
aaa
cmp
stc
loopne
push
dec
or
rolb
mov
pusha
mov
std
out
and
outsl
xchg
andb
and
jecxz
sub
fimuls
cwtl
xor
add
add
mov
push
arpl
int3
test
nop
in
cli
daa
notl
shlb
lods
cmpsb
mov
jb
xchg
add
enter
sbb
push
andl
movsb
jnp
pop
jmp
dec
push
fidivs
enter
imul
and
mov
sub
or
outsl
push
sub
or
or
fcoms
jp
mov
sbb
or
jp
sarl
inc
pop
mov
mov
push
lahf
lds
les
imul
cmpsl
ja
xlat
push
paddw
push
cmp
outsb
sbb
sbb
inc
jb
xor
les
insb
out
addb
out
sub
xchg
push
gs
lods
adc
mov
add
cmp
xchg
inc
xchg
sbb
xchg
out
cmp
xor
lahf
loop
lahf
imulb
adc
push
push
pusha
js
sbb
xorl
xchg
or
and
addr16
jge
inc
icebp
mov
fbld
shlb
cmpsb
call
cmp
dec
push
dec
pushf
fsubrs
les
nop
pop
pop
lock
lcall
neg
mov
jle
mov
cmpsl
sub
in
mov
outsb
inc
pop
jnp
or
ljmp
adc
lods
push
imul
pop
into
outsl
in
iret
cld
mulb
out
pop
or
inc
mov
or
sbb
mov
and
movsl
imul
jnp
or
and
sub
push
loope
enter
mov
add
pop
es
adc
jbe
jb
movsb
mov
mov
and
adc
and
xchg
jl
add
gs
insb
lahf
ret
push
cltd
aaa
dec
jns
js
add
popf
jp
iret
insl
cmp
sub
into
fcomps
xchg
in
mov
ret
xorb
insb
cmp
ds
adcl
sub
inc
sub
jl
leave
ljmp
sbb
insl
inc
or
jbe
add
mov
jo
pushf
decl
push
test
push
sbb
loopne
pop
jle
or
lea
pop
int
sbb
mov
lahf
dec
push
int3
sti
sti
rcl
dec
int
enter
cmc
mov
sub
mov
sub
iret
sti
xchg
aas
mov
add
add
xor
mov
lahf
imul
mov
movsb
fmuls
pushw
cld
push
or
mov
iret
or
add
cmp
fwait
inc
xor
dec
jecxz
mov
xor
push
and
pushf
negl
fnsave
test
aam
clc
and
stc
pushf
sbb
mov
inc
or
in
test
xorl
imul
dec
jge
jb
mov
jle
rcll
dec
cmc
stos
adc
pop
rcl
pushf
mov
sbb
in
out
ror
mov
pop
outsb
add
sub
fwait
xor
mov
lcall
pop
dec
dec
aaa
in
mov
ds
push
pop
push
add
mov
out
jb
mov
pushf
cwtl
add
stos
push
mov
push
adc
rorl
gs
inc
mov
or
sahf
sub
adc
ljmp
mov
insb
clc
xor
sub
les
pusha
pop
out
in
lret
movsl
add
pop
jle
xchg
or
push
cltd
jae
add
shl
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
dec
mov
cli
adc
ss
jmp
mov
mov
lods
pop
xor
stos
and
nop
cmpb
aaa
mov
shl
or
testb
sbbl
sbb
or
mov
cwtl
xor
test
pop
aas
xchg
leave
xchg
stos
mov
lods
mov
flds
sub
mov
sahf
outsl
shl
bound
adc
mov
lcall
ja
or
xchg
and
test
dec
mov
jbe
shll
jp
incb
xchg
dec
adc
bound
shrb
lds
push
cmp
aad
shrl
sub
andb
pop
mov
mov
sub
mov
inc
decl
mov
sbb
aad
mov
mov
sub
xor
ficomps
and
repz
or
mov
jne
inc
inc
cmc
les
mov
mov
mov
pop
xchg
dec
into
ljmp
mov
bound
insl
jle
adc
test
bound
cmp
out
insb
icebp
iret
lds
dec
fiaddl
xor
sub
jo
dec
ja
dec
hlt
lods
test
lock
jg
dec
ss
repnz
mov
or
cltd
pop
sbb
jge
jbe
int3
fldenv
add
sti
cs
sbb
jae
cmp
mov
ja
flds
cld
mov
imul
sub
test
adc
xchg
dec
sub
fwait
andb
push
dec
pop
mov
mov
mov
repnz
fwait
xor
out
rorl
aam
adc
jnp
sbb
in
xor
jl
fnstcw
cmp
jl
data16
mov
mov
out
arpl
data16
adc
add
mov
in
stc
mov
arpl
sbb
xchg
mov
mov
enter
testl
sub
mov
cmpsb
jmp
mov
pop
mov
insl
sbb
cmp
andl
and
cmc
jae
mov
sarl
loop
or
imul
movsb
push
ljmp
shrl
into
loop
cld
add
popl
dec
cmc
test
push
adc
das
mov
or
filds
jmp
into
jo
out
gs
cwtl
mov
ss
xor
scas
sub
iret
cmp
pop
mov
insb
dec
or
adc
mov
lds
je
enter
loopne
movsl
cs
arpl
arpl
push
sbb
xchg
cmp
xor
insl
jg
jecxz
nop
scas
imul
pop
mov
adc
lock
sub
dec
cltd
cli
shlb
movsb
sbb
jae
pop
mov
and
repnz
jmp
cmp
xor
shl
xlat
mov
xorb
xor
push
pusha
push
lret
inc
xchg
jo
adc
push
sbb
shlb
pop
test
mov
xor
loope
adc
cmp
inc
fsubrp
add
or
pop
or
xor
and
sbb
cmp
xor
ljmp
add
andb
fwait
mov
xchg
sarl
mov
xchg
in
into
mov
cmp
pop
gs
hlt
mov
and
shlb
sbb
and
in
xlat
push
test
std
repnz
add
jl
shl
subb
les
mov
in
mov
cmc
xchg
push
andl
cmp
roll
inc
push
fwait
sub
inc
or
adc
pop
mov
sbb
sub
inc
outsb
int3
xchg
xlat
sbb
add
lret
bound
or
fsts
add
adc
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
cld
or
dec
lcall
adc
cli
adc
sub
xorl
inc
repz
stos
or
pop
xor
notl
out
sub
and
addr16
cmp
imul
jbe
lods
fistpll
push
mov
in
testb
adc
mov
filds
pushf
pop
fs
mov
in
test
nop
and
add
adc
sub
mov
jb
fnstenv
xor
in
mov
repnz
repz
jg
loope
aas
scas
in
mov
repnz
stc
jb
pusha
sahf
aam
add
jns
add
roll
in
pop
insl
fldt
outsb
lods
push
shll
out
cmp
xchg
addr16
stos
addr16
insb
sbb
push
movsb
dec
fwait
add
push
mov
addb
lcall
leave
stos
test
push
push
cmp
push
icebp
lret
mov
repnz
int3
scas
cmpsw
movsb
data16
jecxz,pn
mov
cltd
inc
in
lods
insb
fisubrs
js
sub
arpl
and
mov
or
dec
in
ucomiss
and
dec
imul
outsl
test
or
cli
add
cmc
arpl
cmp
mov
jbe
jmp
xchg
sub
pop
ret
sbb
test
movsl
mov
jo
and
data16
push
sahf
mov
sub
enter
pop
shl
add
adc
add
inc
cmp
mov
imul
dec
mov
jne
mov
jnp
inc
jb
movsl
int3
dec
ja
xor
pushl
jmp
or
mov
je
dec
movlps
or
loope
pop
sub
mov
sub
jnp,pn
int3
mov
mov
sti
adc
ljmp
aaa
outsb
cmc
ja
sub
push
inc
sti
adc
push
out
adc
cli
lret
out
cmp
mov
popf
pusha
jle
xchg
push
scas
cmpl
ret
mov
push
movsb
das
inc
xchg
jo
pusha
push
sub
mov
repnz
arpl
add
jbe
xor
mov
hlt
xchg
lret
dec
cltd
xor
incb
cli
das
sbb
adc
lds
fadd
fwait
lea
mov
jmp
aas
pop
pop
data16
push
pop
push
mov
cwtl
mov
mov
or
push
xchg
push
in
mov
into
jno
adcb
mov
aam
sub
mov
xchg
shl
jo
ret
mov
std
iret
in
adc
push
adc
nop
push
je
fwait
or
mov
scas
mulb
adc
xchg
push
scas
or
mov
cwtl
lret
iret
stos
test
aas
xchg
lock
xchg
push
sbb
mov
fmuls
adc
je
aas
or
mov
or
testl
add
orl
cmp
mov
cmpsl
ds
arpl
jne
push
sub
out
mov
popa
repnz
test
pop
ds
dec
xorl
mov
mov
sarb
cmp
pop
repz
mov
inc
inc
mull
push
push
add
add
rolb
test
cmpsl
mov
shrb
sbb
inc
inc
out
popa
mov
inc
mov
pop
xchg
js
mov
aas
cmp
cmp
push
xchg
pop
punpcklwd
adc
mov
xchg
cmp
xor
adc
lret
or
pop
nop
dec
mov
je,pn
imul
rol
mov
mov
arpl
das
add
test
test
in
pop
sbb
test
add
test
mov
aaa
stc
jecxz
in
arpl
test
fisubs
xchg
lock
outsb
das
push
and
mov
lods
or
or
outsl
addl
push
jb
add
movsl
xchg
jbe
inc
inc
jge
scas
push
mov
xchg
mov
xchg
push
btsl
xchg
imul
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
call
adc
aaa
cli
adc
cwtl
adc
test
pop
mulb
sbb
jp
add
sub
ljmp
bound
js
lock
pop
nop
pop
xchg
mov
cmp
sarl
popa
push
testb
leave
bound
inc
sub
lret
sahf
mov
lock
frstor
das
mov
out
jecxz
push
test
xchg
in
xchg
fwait
inc
mov
sbb
stos
cmp
sbb
in
pop
jae
ja
insl
neg
xchg
mov
jle
mov
repz
insb
xor
fwait
mov
mov
push
mov
jmp
sti
cmp
jbe
call
adc
pop
pop
dec
hlt
or
inc
out
push
mov
sti
repz
xchg
sub
jl
adc
sbb
xor
sub
aam
inc
cs
xchg
inc
sbb
mov
dec
std
mov
aas
lds
fistpl
mov
xchg
in
adc
ficoml
andl
movsb
stos
adc
xor
lahf
jbe
lahf
fcoml
aas
xchg
mov
xchg
nop
dec
jl
mov
mov
inc
inc
xchg
imul
dec
in
push
ds
lds
jp
dec
rcll
mov
ljmp
dec
inc
xor
int3
outsl
jae
inc
lret
push
mov
stos
shufps
mov
arpl
sub
xor
mov
daa
and
jmp
inc
mov
or
out
je
das
inc
shrl
sbb
push
adc
cmp
je
lret
out
cld
sbb
rorb
mov
sbb
sub
into
int3
dec
adc
mov
add
jmp
adcl
andb
fists
jp
sub
cli
dec
pop
inc
rorb
inc
jmp
ss
pop
arpl
movsl
jb
push
cmp
xchg
mov
bound
cmp
shll
and
or
lea
cld
daa
test
popa
xor
xlat
cli
pop
inc
sbb
repz
clc
test
sbb
jle
ficoms
xor
shlb
mov
pusha
fdivr
mov
sub
and
pop
cld
inc
sbb
not
sbb
cmp
arpl
sub
jg
jo
pop
lock
das
loope
or
sub
arpl
jo
push
mov
jbe
mov
or
xor
mov
xor
mov
jp
std
ss
call
and
enter
in
cli
int
lods
scas
mov
bound
cs
xchg
mov
push
push
je
int
in
sbb
and
and
in
hlt
inc
int3
jl
dec
fwait
mov
movsl
imulb
test
jne
xor
cmpsl
cmp
cmpsl
cmp
imul
nop
push
or
mov
repnz
cmp
outsb
repz
scas
inc
or
out
push
movsl
xor
or
stc
cld
and
sub
clc
fwait
pop
test
sti
xchg
push
hlt
adc
push
push
iret
into
jns
push
mov
and
cmp
sub
loopne
pushf
and
in
jp
xchg
cmp
imul
mov
aas
sbbb
jb
roll
loopne
push
pop
jo
xor
out
jne
lret
mov
mov
into
pop
push
test
sbb
pop
pop
roll
test
dec
mov
sub
nop
jno
sbb
rorl
xchg
mov
js
mov
cmp
fsubp
enter
jp
xchg
insb
push
clc
outsb
es
pop
stc
scas
or
rorb
aam
and
xor
jo
jne
test
fldcw
or
hlt
xor
pop
pop
test
jle
pop
pop
movsbl
in
sub
pop
lret
push
das
push
push
push
sub
daa
xchg
fisttpl
int3
roll
xor
and
mov
mov
dec
mov
in
loope
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
and
xchg
xchg
lret
and
inc
sub
fdivr
mov
mov
xchg
adc
mov
gs
adc
adc
int
adc
cmpsl
imul
mov
and
pushf
mov
jmp
lea
xchg
inc
ret
add
mov
adcb
cmpsl
cmp
fisubrs
xor
mov
add
inc
push
cmp
aam
inc
fnsave
dec
pop
push
xchg
cmc
popf
sbb
add
pop
mov
repnz
or
and
cmp
decl
jnp
test
out
mov
insb
testb
cli
dec
rcl
inc
dec
add
fdivs
push
aad
mov
lret
loop
adc
pop
test
or
mov
adc
int3
test
cmp
cli
or
and
lret
pop
popf
fdivrp
iret
fidivs
lea
and
xchg
std
dec
cmpsb
pop
mov
sbb
push
sub
xorb
aad
out
mov
mov
push
and
sbb
xor
pop
aam
inc
inc
push
push
out
out
jmp
mov
imul
mov
imul
xor
xchg
movsb
loopne
movsl
and
test
and
insb
add
out
divb
mov
xor
mov
or
sbb
lret
jne
inc
mov
inc
or
mov
pop
cmpsl
repz
imul
and
loope
sub
cltd
pop
mov
pop
es
outsl
and
sub
js
mov
pushf
pop
adc
or
push
popf
cld
add
outsb
iret
mov
test
inc
in
xchg
lcall
or
xchg
lret
xchg
inc
and
outsl
daa
push
mov
sbb
mov
xchg
inc
xor
dec
xlat
orl
scas
push
adc
ja
iret
cmp
leave
and
clc
ret
jae
cmp
pop
or
mov
mov
and
icebp
cmp
add
xchg
addr16
mov
sbb
push
test
mov
dec
nop
xor
jle
addb
pop
lock
xchg
sbb
push
mov
xor
fs
jmp
flds
rcrb
add
shrb
incl
sbb
jo
pop
or
daa
sub
jae
push
xor
sti
xor
xchg
pop
testl
repnz
sbb
sub
push
clc
mov
jnp
jae
add
dec
add
mov
jecxz
ss
in
addr16
xor
push
add
dec
pop
mov
outsl
inc
icebp
pop
mov
pushl
xchg
mov
idivb
lret
jp
jle
cmp
daa
fdivs
or
out
xor
repnz
xchg
jb
jl
jnp
jg
cs
into
mov
push
xchg
mov
fimull
ljmp
out
jge
in
cmp
nop
dec
loopne,pt
popf
xor
fmulp
fcompl
or
adc
xchg
cmpl
andb
mov
dec
leave
lcall
out
or
sbb
dec
dec
pushf
mov
cwtl
lret
pop
sbb
xor
sub
push
out
rclb
cs
mov
cmpsl
pop
negl
outsb
jno
xchg
imul
lds
push
jae
das
mov
dec
repnz
shl
test
mov
sbb
clc
adc
pushf
pop
insb
xchg
inc
jo
mov
mov
cmp
fcoms
dec
imul
sahf
loopne
cwtl
mov
jmp
jae
rorb
aam
fwait
inc
or
rcrb
scas
iret
mov
iret
mov
pop
or
data16
add
addl
mov
shrd
shr
mov
mov
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
inc
test
cli
adc
subl
daa
aaa
aam
addr16
es
adc
daa
popf
pop
mov
mov
fistps
repz
sti
push
mov
imul
jle
nop
test
push
mov
subl
repz
movsb
mov
into
ja
ret
cmp
das
loopne
lcall
movsb
loopne
inc
addr16
jno
xchg
or
dec
mov
jne
sbb
test
fidivl
mov
pop
inc
inc
popf
xchg
jmp
mov
movsl
lahf
ficomps
push
jle
pop
lods
or
cltd
outsb
cmp
sbb
inc
je
inc
pop
or
push
es
loope
push
fs
gs
rorl
push
sub
insb
mov
xor
and
xor
fs
mov
jbe
repnz
stos
push
scas
cmpsb
sub
hlt
xchg
cmpsb
jns
int
mov
shl
and
mov
push
stc
jae
mov
mov
push
scas
xor
test
fnsave
push
mov
cmp
ret
pop
scas
cli
sub
pop
sub
loope
out
jae
xlat
dec
inc
shrb
call
js
adc
xchg
loopne
fstpt
lea
test
dec
xchg
int3
dec
jne
scas
and
dec
shll
dec
xorl
mov
jg
mov
push
mov
lcall
inc
jg
add
jge
rolb
inc
push
or
lds
pop
nop
sub
pop
icebp
and
add
xchg
pop
repnz
mov
pop
xor
lret
loopne
arpl
dec
scas
mov
popf
mov
fimull
jb
push
xor
mov
mov
insl
loope
pushl
jle
scas
mov
xchg
leave
push
lret
pop
adc
jl
inc
outsb
pop
sbb
add
adc
js
cmpsb
loopne
cmpsb
xchg
repnz
and
pusha
rorb
jb
sub
popa
roll
js,pt
js
sti
xor
push
in
loopne
mov
pop
mov
pushf
push
cmp
movsl
ud0
adc
inc
divb
adc
in
js
push
jle
sbb
fisubs
sbb
pop
rcl
add
xor
hlt
xchg
inc
data16
or
iret
testl
loop
pop
add
js
push
mov
popf
pop
jmp
fistpll
lea
xor
jb
mov
xchg
ss
in
pushf
cs
out
jne
sbb
inc
addr16
adc
push
ljmp
fneni(8087
lret
loop
sub
jl
fsubl
lcall
sub
movsb
xchg
std
jge
fidivs
pushf
aam
out
cmp
test
aad
es
inc
sbb
and
test
mov
push
mov
mov
shl
or
or
arpl
dec
mov
es
xor
inc
in
mov
mov
push
mov
mov
xor
ret
sub
or
sti
mov
cltd
inc
and
xor
mull
dec
sbb
push
push
or
testl
imul
stos
dec
and
jno
rolb
orl
cmp
push
test
movsl
dec
jno
jae
adc
lea
fidivl
sbb
fcmovnu
repz
movsb
mov
int
sub
cmp
daa
cli
and
pop
rcll
cmp
aam
test
sub
jns
jo
mov
pop
repz
fwait
lods
popa
bound
mov
sub
jmp
aam
lea
pop
vmovss
jnp
mov
dec
or
pop
aad
jo,pt
mov
lock
icebp
cmpsl
and
mov
out
jb
outsb
push
mov
dec
aam
cmc
jle
xlat
cld
mov
add
rorl
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
popl
inc
adc
aaa
cli
adc
jmp
lock
mov
jp
xor
add
mov
lret
inc
or
gs
mov
cmp
cmp
pop
xchg
push
dec
into
imul
push
pop
xchg
xchg
dec
pop
cmp
mul
add
sub
push
std
inc
std
inc
fisttpll
sub
xchg
sahf
xchg
pop
sub
pop
dec
mov
outsl
mov
stos
or
add
dec
fdiv
jno
fs
or
insb
imul
cmp
outsb
or
outsl
fmull
sub
xchg
aas
adc
xchg
xchg
cli
shlb
outsb
mov
dec
pop
mov
pop
pusha
icebp
hlt
push
imul
cltd
pop
dec
fisttps
pop
xchg
dec
xorl
lds
push
mov
xchg
sbb
out
jns
out
andl
lods
scas
add
xchg
cmc
ret
notl
sbb
pop
aad
fnsave
cld
loope
or
in
cmp
in
push
leave
push
mov
out
jmp
in
mov
add
add
mov
add
outsb
mov
adc
xchg
stc
icebp
and
xchg
std
mov
jmp
or
imul
lahf
sub
lds
mov
push
add
fdiv
or
push
or
sbbl
int
enter
ficoml
mov
cmp
repz
fadd
mov
test
in
lcall
xor
xor
sbb
mov
aad
popl
rorb
stos
lods
add
hlt
dec
add
xchg
popa
call
mov
out
dec
lret
imul
lds
clc
imul
out
dec
dec
sub
cs
mov
js
insb
in
inc
or
dec
nop
xchg
add
sarb
xchg
xchg
jnp,pn
ss
lret
pop
dec
sub
mov
mov
fs
inc
add
mov
mov
mov
sub
xchg
call
aad
cwtl
inc
in
cmp
es
aad
out
mov
jle
push
mov
sbb
cmp
das
jae
dec
sbb
dec
lcall
leave
xbegin
xor
out
and
xor
or
lret
sbb
jb
lret
dec
mov
push
mov
es
jmp
ret
adc
push
je
lock
lret
rclb
test
arpl
ja
lods
lods
sbb
pop
inc
aam
fs
notb
outsb
dec
inc
adcb
packuswb
mov
fcoml
jnp
add
xlat
mov
adc
aam
sub
xchg
stc
imul
leave
sbb
dec
mov
jnp
xor
je
popa
cmp
test
jbe
leave
sahf
pop
or
dec
dec
and
mov
bnd
dec
jecxz
scas
xor
mov
xor
adc
mov
cli
imull
add
xor
push
or
push
mov
and
stos
jge
ss
test
iret
xor
add
xlat
ja
aad
call
rcll
dec
scas
push
lret
dec
hlt
ffree
xchg
jl
cmp
or
fwait
std
insb
in
or
mov
fsubs
mov
mov
dec
add
lret
cld
loopne
jo
arpl
dec
push
mov
sahf
jmp
fistl
adc
lahf
test
shlb
jbe
xor
in
dec
int3
aas
mov
xorl
in
in
mov
sbb
mov
out
sbb
or
int
cmp
xchg
mov
data16
popa
cmp
test
sbb
into
pop
push
stos
inc
fisubs
push
jmp
mov
dec
cmp
ds
cltd
fidivl
push
je
test
cmp
shll
clc
add
js
mov
push
dec
mov
push
mov
push
mov
pushf
std
inc
icebp
mov
mov
test
scas
maskmovq
notl
jo
inc
lock
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
out
pop
lds
sub
adc
cli
adc
pop
jg
mov
jge
xchg
cmp
pusha
icebp
or
std
loopne
jno
nop
inc
scas
test
or
stc
pushf
cltd
mov
add
ja
sarb
jns
imul
dec
in
jg
inc
cmp
and
inc
lods
mov
aaa
adc
sti
xor
mov
mov
mov
mov
sub
in
fimull
jg
cld
insb
int3
push
lahf
shll
inc
inc
dec
push
out
sub
xor
js
sub
sbb
mov
ficoms
enter
or
jle
cmp
mov
jae
xchg
dec
xchg
addr16
adc
and
les
insb
gs
add
scas
push
ret
cmpsl
popf
inc
jne
clc
mov
pop
ret
sbb
or
mov
jle
xchg
and
or
inc
icebp
imul
jae,pt
lods
cmp
gs
sbb
mov
daa
divl
lret
dec
test
push
loop
int
adcl
adc
nop
div
adc
iret
aas
bound
mov
loop
mov
test
push
xchg
jb
pusha
int3
and
or
pop
loopne
test
cmp
jmp
stos
insb
xchg
fdivr
push
movsb
sbb
mov
lds
inc
ret
dec
lret
je
imul
jo
or
or
or
andl
jl
lahf
jl
pop
pushf
add
popf
hlt
shl
mov
push
and
inc
std
dec
pop
mov
outsb
xor
sub
add
or
iret
out
sub
add
bound
pop
fisttpll
sub
or
fcompl
inc
subl
stos
mov
sbb
lcall
add
or
stc
leave
jns
adc
mov
fcompl
repz
and
xchg
lods
sub
in
pop
mov
jno
inc
jb
cmp
movsl
mov
aas
jmp
pop
mov
add
rclb
sub
push
inc
icebp
lock
or
mov
add
movsb
and
outsb
mov
outsl
sbb
lds
stc
ffree
add
stc
dec
pop
jp
mov
mov
xor
pop
roll
les
jnp
dec
adc
dec
or
loope
adc
push
pushf
pop
jne
sub
push
test
inc
inc
ss
xchg
in
iret
cmpb
loopne
jg
gs
pop
add
imul
in
cmp
and
adc
jnp
or
stos
cmp
lods
les
fwait
cltd
das
arpl
jle
mov
xorb
pop
pop
loopne
popa
std
and
fcmove
into
jae
jl
popa
das
lahf
aas
ljmp
shll
and
or
into
ds
fmull
pusha
mov
xchg
adc
sub
and
jmp
adc
sbb
mov
cmc
cmp
aaa
scas
push
cld
jp
pop
in
es
rcrl
mov
dec
adcb
mov
aas
mov
mov
hlt
mov
and
leave
inc
mov
pop
test
mov
rcr
inc
insb
shll
or
inc
inc
push
sarb
outsb
loop
bound
fld1
iret
cmp
or
lods
int3
sti
stos
sbb
lcall
mov
and
or
arpl
add
cmp
and
mov
ret
cmpsb
jne
cmp
mov
jmp
pop
jo
fwait
int
jno
add
xchg
pushf
sbb
repz
mov
loope
sub
repz
or
adc
jle
xchg
jp
jnp
jl
or
sub
sbb
mov
call
fdivrs
jbe
mov
sbb
pop
incl
fcomps
lods
push
sub
pop
add
push
cmp
xchg
es
insl
xor
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
mov
jnp
xor
adc
cli
adc
mov
mov
pop
rclb
mov
lret
repnz
add
cmp
sbb
stos
jae
subb
shlb
cltd
jg
add
push
jns
xor
lcall
xchg
mov
pop
xor
stos
jmp
xor
les
jbe
cmp
leave
or
sbb
xor
mov
xor
cld
scas
rcr
imul
lahf
testb
xor
push
insb
dec
rorb
xchg
jae
cmpsb
dec
xor
sbb
enter
lds
cli
mov
testl
push
lods
test
jecxz
std
pop
xchg
imul
mov
adc
inc
mov
xchg
sbb
inc
in
jns
xchg
pop
xor
cmp
mov
dec
sbb
iret
out
loop
xor
lcall
pop
and
iret
xabort
int3
icebp
mov
push
sahf
ret
push
mov
jecxz
push
lods
addl
mov
clc
cmp
add
std
out
jge
out
aaa
sbb
pop
xor
pop
outsl
arpl
sbb
out
mov
enter
dec
jp
cmp
call
repz
pop
test
ret
push
cmp
stos
enter
pop
dec
popf
fdivrs
scas
sub
lret
xchg
icebp
dec
pop
add
push
and
inc
scas
outsb
mov
or
loope
aas
sbb
push
lcall
and
popa
mov
inc
ret
insb
pop
jne
pusha
loop
mov
les
test
inc
std
test
sbbb
mov
ret
arpl
cmp
mov
js
inc
jl
enter
sbb
das
or
sbb
out
cmpsb
adc
inc
call
loope
lret
es
lods
aaa
stc
fisubrl
pop
jne
pop
mov
popf
or
icebp
push
xor
dec
popl
xor
rorl
iret
fs
stos
mov
je
adc
in
or
data16
fcoms
andb
paddd
mov
les
arpl
cmp
inc
sub
inc
popa
das
adc
sbb
insb
stos
dec
je
dec
mov
and
sti
les
imul
cs
add
xlat
into
cmp
jecxz
call
xor
mov
dec
or
xchg
js
iret
aas
rcrb
and
adc
je
fwait
pop
lods
mov
mov
ficoms
mov
aaa
and
lods
cmp
lret
inc
inc
mov
out
mov
jnp
aam
mov
lret
inc
jecxz
int3
enter
sbb
and
mov
xor
and
xchg
cmpl
jmp
jg
lods
stc
adc
mov
lcall
cmp
test
jmp
xchg
add
sti
mov
rcl
cmc
fisubrl
cmc
fwait
pop
add
sub
mov
inc
popf
call
icebp
pop
fdivrp
repz
jnp
adc
mov
sub
mov
std
lds
fisttpll
je
xchg
mov
xchg
xchg
adc
sbb
pop
sub
out
lea
push
sbb
push
pop
push
mov
add
adc
pusha
ret
loopne
lea
adc
stos
lock
movsl
in
mov
sbb
mov
adc
and
rcrb
push
mov
push
lret
fwait
daa
repz
int
mov
shlb
jmp
leave
cmp
jmp
pop
mov
mov
test
aas
add
enter
rorb
iret
mov
fnstenv
pslld
jecxz
pusha
lcall
sahf
sbb
inc
inc
xor
add
pop
test
xchg
push
and
lds
pop
xchg
lock
mov
push
mov
subb
dec
inc
jb
inc
adc
add
loopne
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
xchg
fwait
pop
adc
aaa
cli
adc
add
and
mov
xor
add
push
or
adc
mov
imul
cld
push
push
xchg
jp
jbe
cmp
data16
jmp
rcrb
sbb
dec
pop
push
mov
jns
scas
scas
or
sar
add
scas
dec
fdivr
adc
adc
adc
rorb
imul
inc
ljmp
inc
jno
outsl
fisubl
rcrb
bound
test
jge
outsb
mov
stos
pop
push
mov
in
or
mov
mov
lret
jmp
sbb
pop
mov
xor
in
jnp
int3
mov
test
xchg
jmp
cs
pop
fldt
mov
pop
lock
push
jb
pop
repz
or
lea
test
rcll
lods
adc
add
arpl
xor
xchg
call
imul
test
mov
mov
xor
push
stc
lahf
push
push
out
sbb
ljmp
mov
pop
push
mov
nop
pop
and
and
mull
sbb
leave
push
hlt
mov
sbb
lret
test
fsubrs
add
subb
inc
pop
pop
add
jg
mov
movsb
test
test
xchg
cwtl
cli
adc
xchg
je
xchg
adc
mov
lods
dec
jl
mov
mov
pop
daa
or
add
mov
or
loop
popa
push
in
test
xor
imul
in
mov
mov
xchg
addr16
jecxz
dec
out
in
daa
popf
dec
pop
xchg
popw
roll
jno
outsb
jmp
pop
mov
lods
movsl
aam
mov
add
push
mov
jle
rclb
cmp
test
pop
adc
test
into
nop
pop
fiadds
mov
arpl
movl
mov
push
enter
push
leave
dec
lret
add
sub
cmp
mov
xchg
outsb
hlt
inc
and
push
mov
adc
add
push
shll
jle
les
xchg
mov
flds
xchg
add
fidivrs
popf
inc
dec
xor
push
add
xor
pop
rcrl
sbb
xlat
and
jne
sbb
or
stos
mov
adc
push
push
int3
sub
inc
adc
push
xchg
pop
add
data16
or
movsl
jmp
daa
js
pop
test
sub
and
movsb
loopne
mov
dec
mov
inc
sbb
mov
sbb
pusha
jnp
mov
mov
enter
sub
hlt
push
nop
leave
cmp
xchg
pop
xchg
dec
add
jo
mov
nop
mov
mov
test
shl
in
insl
inc
cmp
xchg
sbb
jmp
sbb
and
jno
mov
repnz
ret
sub
mov
movsl
movsl
fsubrl
adc
leave
das
sub
je
es
dec
cmp
ficomps
repz
inc
movsb
stc
fidivs
mov
or
lds
add
cwtl
dec
mov
sti
sbbb
int
std
mov
jno
and
cltd
movsl
mov
popa
pop
pop
add
addr16
dec
mov
dec
shll
int3
adc
mov
imul
das
sbb
sti
adc
cli
je
inc
cmpsl
mov
out
mov
int
mov
scas
lea
jns
es
mov
loope
fstp
popf
mov
dec
or
jle
stos
cmp
xor
scas
iret
jmp
rcrl
cmp
vandnps
fisubrl
leave
xor
outsb
sbb
mov
jbe
pop
iret
pushf
pop
mov
jnp
lea
ret
call
pop
aam
sub
jge
cli
mov
aaa
jmp
adc
adc
mov
xchg
jg
repz
dec
mov
dec
mov
jmp
add
sbb
mov
pop
push
xor
push
ficomps
adc
aaa
cli
adc
and
mov
sub
mov
or
mov
daa
mov
cmpsb
into
ret
pop
out
sub
add
movsb
push
hlt
scas
leave
or
mov
add
sub
jae
out
and
ret
xchg
pop
add
xchg
sahf
adc
lds
loop
test
mov
mov
fimuls
sbb
pop
ret
mov
mov
mov
push
ljmp
stc
bnd
pop
mov
in
and
add
outsl
xlat
insl
dec
pop
aas
rcll
mov
addr16
push
sbb
scas
xchg
das
and
orb
add
jmp
lret
jecxz
rorl
jmp
xchg
push
sub
mov
mov
sbb
imul
xor
push
jl
imul
call
daa
jns
mov
insl
js
sbb
hlt
push
jo
fiadds
and
in
imulb
mov
sub
and
add
jae
in
jmp
fcmovb
sbb
push
fs
push
lahf
lds
sub
call
sub
pop
jg
aas
test
xor
add
push
mov
sbb
push
ja
jne
sti
sub
sub
sbb
sub
push
sbb
arpl
xchg
adc
test
push
fcompl
pop
lcall
mov
pop
subl
insl
mov
pop
daa
dec
ret
ds
sbb
fcomps
jne
mov
cmp
jecxz
int
les
sbb
add
inc
scas
mov
rclb
push
xor
aaa
jne
imul
je
ret
push
sbbb
in
mov
push
lods
loop
xchg
je
aam
sahf
pop
adc
mov
sbb
sarl
cmp
pop
or
int
flds
and
lret
imul
and
cmp
imul
sub
ret
insl
data16
stos
push
or
cmp
jg
pusha
push
ljmp
fs
mov
test
cmpsl
mov
xlat
add
repz
shrl
data16
leave
aam
test
das
out
cmpsb
bound
aas
xchg
cmpsl
cmc
out
inc
push
xchg
mov
add
mov
mov
or
shll
mov
mov
std
xchg
ss
insl
addb
push
fcom
inc
ret
imul
jmp
daa
and
mov
push
jl
daa
mov
scas
mov
clc
test
pop
mov
popl
outsb
nop
ljmp
daa
pop
scas
je
pop
sbb
push
add
shlb
cltd
pusha
add
and
add
sub
mov
push
gs
stos
xor
inc
sbb
mov
out
ss
repz
repnz
adc
out
dec
or
xchg
jns
adc
iret
adc
outsb
add
sbb
mov
les
cmp
cmpsl
out
jp
ds
dec
in
pop
psubw
scas
and
mov
loopne
jne
adc
test
mov
lea
mull
test
cmp
loope
addb
mov
push
and
ret
mov
sub
lock
inc
es
inc
pop
iret
lret
xlat
xlat
mov
cmp
cmp
js
jge
insb
stos
mulb
add
adc
sbb
cmc
push
sub
and
and
lods
out
xlat
sub
mull
mov
gs
xor
mov
lods
nop
std
ds
outsb
sub
jnp
push
xor
and
mov
flds
cmp
xor
push
call
lods
enter
add
shlb
enter
add
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
les
lds
pop
adc
aaa
cli
adc
jmp
cmp
icebp
sbb
dec
imul
aad
std
shl
or
jb
push
or
in
mov
shl
cmp
in
jle
in
sbb
push
inc
jecxz
cli
push
clc
cs
icebp
adc
or
jl
add
push
push
cmp
jno
mov
jo
repnz
pop
xchg
jo
lods
xchg
xor
out
loop
nop
in
cmp
push
cmp
push
and
rcrl
sbb
scas
movsl
movsl
test
fs
cmp
lods
push
jle
dec
mov
and
les
hlt
xchg
or
scas
push
icebp
dec
xor
testb
fdivrl
inc
enter
lcall
aaa
inc
cmp
sti
mov
repnz
enter
aad
outsb
nop
dec
adc
mov
xor
test
cmp
test
mov
mov
push
shlb
aam
arpl
iret
in
cmpsb
pop
arpl
add
in
lods
dec
push
pop
shll
and
cmp
stos
xchg
jg
stc
es
pop
xchg
nop
scas
jp
mov
add
mov
mov
js
insb
push
icebp
pushf
and
inc
mov
lods
or
icebp
pop
mov
push
adc
pop
imul
and
fists
mov
cmp
lods
cmp
xchg
push
add
jns
jb
in
jmp
pop
mov
testl
mov
or
stos
pop
lds
ss
loop
xor
adc
jecxz
add
and
loopne
iret
pop
xchg
sub
push
mov
push
out
mov
cld
dec
lea
xor
imul
pop
sbb
orb
fmulp
xchg
sbb
aam
mov
xchg
mov
ljmp
sub
pop
sub
icebp
fmulp
lds
push
push
xor
insb
inc
inc
js
sub
xchg
pop
pop
pop
pushf
loop
in
rol
mov
dec
pop
pop
jp
cmp
cmpsl
fnstenv
dec
or
sbb
push
pop
adc
cmp
arpl
inc
dec
fnstsw
mov
mov
or
mov
subl
xchg
enter
pcmpgtb
loope
mov
sub
and
jl
jl
adc
mov
lock
xchg
outsl
lret
cltd
mov
scas
mov
leave
subb
test
sub
fisubs
mov
inc
dec
dec
adc
out
mov
xlat
inc
addb
aad
mov
pop
rorb
mov
rolb
in
shlb
mov
shll
aam
jl
xor
mov
or
mov
sub
mov
push
out
inc
cmp
fdivp
icebp
dec
ffree
jmp
gs
lock
cmp
cmc
add
push
dec
mov
adc
popl
pop
fstps
dec
mov
pop
mov
fwait
mov
adc
xchg
out
icebp
into
clc
sub
cs
or
rcrl
jge
pop
das
adc
sub
testb
push
imul
mov
sub
imul
cmc
cwtl
cmpl
dec
ja
inc
add
mov
test
sahf
jno
pop
mov
clc
frstor
pop
mov
xchg
jne
xlat
popf
fs
test
dec
fisttps
jb
inc
jb
dec
fsub
and
stos
popf
mov
jno
or
jp
pop
dec
sub
test
jne
cli
fs
hlt
outsl
sub
inc
mov
push
mov
add
jmp
dec
mov
in
push
adc
sub
divl
je
xor
sbb
sub
mov
cmp
imul
nop
daa
clc
movsb
xchg
push
cli
xor
mov
scas
mov
jmp
push
lret
out
pop
cwtl
push
pop
inc
add
xor
es
or
xchg
ja
xchg
xchg
mov
push
mov
mov
xchg
lds
xor
xor
mov
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
fisttps
arpl
aaa
cli
adc
dec
mov
and
add
push
test
xchg
cmc
dec
aas
hlt
imul
imul
adc
out
or
js
dec
sub
inc
cmp
int
orb
test
daa
in
test
loopne
in
and
outsl
movsb
adc
mov
aam
and
div
xor
push
fbld
call
loop
mov
insl
fistl
cld
dec
das
mov
fists
ja
loopne
sub
or
or
mov
shrb
ret
jo
sbb
clc
jbe
mov
cmp
cld
mov
js
ljmp
sub
mov
cltd
aaa
in
stos
out
ds
fildll
xchg
inc
cwtl
ljmp
inc
mov
les
in
nopl
jl
lea
mov
stos
xchg
pop
xchg
sub
notl
ficoml
and
mov
cmpsb
xchg
data16
ficompl
push
in
addr16
dec
sbb
lods
or
insl
push
mov
push
aam
xchg
inc
cmp
sub
fiadds
sahf
add
aad
mov
xor
fwait
imul
ss
test
mov
addb
rorl
mov
xchg
inc
mov
test
aad
fidivrs
lahf
and
push
stos
cmpsl
cmp
sub
cld
xor
jo
cmp
stos
push
adc
mov
mov
dec
dec
xchg
adc
stc
bnd
inc
imul
pop
push
mov
xlat
push
inc
push
push
idiv
pop
xchg
mov
lret
cmp
mov
jb
pop
pop
mov
ficompl
ss
cld
enter
or
lret
pop
mov
lods
insl
or
xor
and
xchg
divb
sbb
push
pop
xor
in
shll
or
lods
adc
insl
aad
mov
mov
mov
popf
loope
mov
in
jnp
cmc
test
jns
pop
test
jge
out
pop
push
stc
mov
jecxz
jge
mov
jbe
or
std
inc
std
sbb
mov
lcall
and
stc
mov
repnz
or
add
in
fcompl
cli
movsb
xor
mov
pop
cmp
jne
orl
pop
shl
enter
or
rsm
xor
xor
fxch
sbb
call
lahf
and
bnd
repz
stc
hlt
mov
test
rcl
mov
inc
dec
and
push
repnz
js
in
fistpll
icebp
ljmp
scas
fisttpl
sbb
and
sarb
sbb
stos
dec
sub
jae
aam
jb
sbb
mov
xchg
mov
pop
push
js
ret
mov
and
xor
in
movsb
mov
mov
in
xchg
fildl
leave
ljmp
cld
jl
sar
loopne
xor
pop
cmovs
in
std
out
pop
push
in
push
dec
scas
das
repz
dec
std
xchg
push
out
fidivl
cmpsl
lret
enter
xor
cmpb
cmp
mov
aas
test
aaa
and
lds
lods
andb
test
icebp
fisttps
pop
cmp
cwtl
inc
out
movsb
inc
pop
pusha
add
sahf
xchg
dec
dec
inc
ret
fisttps
jmp
test
ds
sbb
aas
add
pmulhuw
sub
push
push
pop
cmpl
mov
jle
das
push
jne
sysexit
or
jns
cld
iret
icebp
hlt
clc
mov
loop
out
jp
push
test
fs
sub
fmull
in
jecxz
jp
mov
roll
cmp
out
and
dec
jns
jecxz
and
push
mov
pop
std
cmc
dec
lcall
out
inc
stc
hlt
sti
test
daa
add
and
push
es
shrl
jg
xor
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
std
adc
aaa
cli
adc
pop
movsb
insb
or
pop
pop
fs
jg
popf
push
out
adc
js
jnp
sti
movsl
cmpsl
test
fwait
call
push
add
xor
jns
rorb
dec
dec
mov
aas
dec
push
sub
mov
ret
mov
lret
add
pop
sub
pushf
inc
rolb
push
cmp
mov
aaa
pop
in
aad
lods
dec
rcrl
add
dec
mov
inc
sub
add
popf
add
xchg
inc
rcll
sub
or
dec
mov
cmp
lahf
cli
inc
add
and
mov
ficoml
shll
sub
jo
push
loope
sbb
test
shlb
pusha
or
mov
int
mov
ds
adc
sti
add
fldenv
mov
jbe
dec
movsl
or
ja
imul
loop
es
mov
fcoml
cmpsl
test
push
or
and
inc
in
test
or
xchg
pop
mov
push
xchg
lret
jns
push
mov
imul
sbb
shrb
mov
mov
adc
mov
popf
or
pop
scas
sti
mov
es
imul
pop
mov
push
sub
xchg
mov
stc
pop
push
loop
pusha
xchg
aas
push
jo
rcrl
scas
jmp
xor
add
lret
pusha
test
jno
cmp
mov
pop
sbb
and
loopne
rol
outsl
movsl
lds
gs
jge
adc
movsb
loop
loop
in
xchg
shlb
pop
negl
enter
adcb
rorl
jmp
cmpsb
jne
xor
frstor
mov
cmpb
jne
pop
mov
inc
adc
cmp
pop
lock
adc
push
test
jl
adc
andl
popf
scas
ret
popf
movsb
rol
pop
lret
and
xor
enter
pop
sahf
popa
pop
push
pop
add
daa
add
ja
lcall
jecxz
std
jne
jmp
js
pop
ljmp
xchg
ret
xchg
jbe
push
add
fcompl
jl
cltd
cmp
adc
inc
xor
cmp
mov
ds
aas
jecxz
std
leave
lods
mov
add
xchg
mov
add
pop
mov
mov
mov
out
fwait
test
fimull
jecxz
xor
and
aam
lock
xchg
or
jle
fisttpl
mov
cmp
xor
push
dec
push
push
mov
inc
inc
sbb
mov
das
xor
xchg
mov
push
out
or
imul
insb
cmp
and
push
mov
push
or
push
ss
movsb
stos
mov
mov
js
cltd
push
xor
test
loope
test
stc
or
enter
clc
aad
mov
aam
adc
aas
cmp
mov
stos
dec
cmp
or
xchg
push
dec
call
dec
add
push
push
test
xorl
out
cwtl
mov
mov
cmpb
xchg
or
fwait
dec
xor
or
mov
stos
dec
lahf
or
les
inc
push
inc
mov
pop
jnp
mov
test
pop
xchg
call
or
call
push
data16
out
cltd
mov
outsb
jmp
stos
aam
adc
daa
dec
dec
cmp
out
insl
int
mov
pop
fcom
mov
cltd
jae
imul
idivb
cmp
and
sbb
cmp
inc
arpl
aaa
mov
and
divb
pop
pop
pop
cwtl
mov
jnp
imul
pop
iret
adc
jle
shl
outsb
lods
pop
lcall
cmp
inc
mov
xchg
push
mov
push
movsb
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
test
add
adc
cli
adc
mov
ret
push
jle
xorl
and
mov
mov
mov
js
push
add
mov
into
mov
adc
xor
xchg
adc
in
shl
fdivrl
int
dec
sbb
push
xor
jl
inc
out
lea
xchg
dec
mov
push
cld
push
push
lcall
add
mov
dec
mov
inc
pop
fmuls
add
mov
ljmp
insl
dec
iret
push
push
fs
mov
jb
mov
add
jg
or
shll
dec
push
dec
push
lret
repz
cmp
scas
jo
xchg
push
xchg
js
sbb
mov
pop
clc
xlat
push
push
int3
add
jle
int
enter
sarb
repnz
pop
sbb
pushf
mov
jb
bound
mov
mov
jg
sub
dec
push
mov
mov
int
aam
mov
inc
int
pop
imul
push
lea
fstl
and
aas
add
out
mov
ds
mov
mov
movsb
jb
in
cmp
cli
inc
lret
jp
sbb
xchg
pop
mov
add
cmp
mov
adc
push
cmc
adc
inc
mov
cmp
sarb
movsl
int3
add
sarb
push
cmp
adc
pop
cmp
mov
mov
icebp
lds
out
inc
cmp
inc
sub
adc
jle
dec
pop
popa
aas
xchg
push
xchg
iret
xor
jg
mov
movsl
or
dec
sbb
and
pop
fbld
js
dec
mov
hlt
cmp
cmp
inc
in
and
adc
lret
push
loopne
jnp
fdivs
add
mov
out
add
and
push
xor
dec
or
mov
jae
ljmp
mov
jmp
bound
subl
add
scas
cmp
pop
push
sub
jne
adc
nop
xor
jecxz
jne
jno
or
adc
lcall
cmp
scas
out
aam
arpl
jb
xchg
div
in
dec
jmp
push
test
je
mov
mov
mov
and
les
pop
iret
inc
sub
or
in
inc
push
mov
mov
cmp
jbe
push
lret
and
and
repnz
jne
cmpsb
jmp
lods
inc
xchg
stos
jb
push
lds
bnd
out
or
mov
push
stos
fisttpl
dec
cmp
adc
add
mov
pop
pop
jge
jp
pushf
notl
out
jge
xchg
push
sub
cltd
mov
out
incb
sub
in
xchg
lds
jmp
push
dec
mov
inc
int3
in
lret
jecxz
xchg
dec
xor
sbb
fwait
int
adc
sahf
mov
add
cli
cmpsl
add
mov
shlb
ficoml
lock
pop
jmp
cwtl
bound
addr16
jge
fistps
or
pop
pop
push
mov
and
and
jl
and
mov
jne
jb
addr16
test
test
mov
xlat
je
inc
xor
pop
inc
faddl
cld
pop
scas
or
sbb
pop
jp
jle
adc
jmp
in
push
xlat
fnstcw
jge
aam
pop
fidivs
rcll
mov
dec
or
xor
pushf
lcall
cld
xchg
inc
inc
adc
rorl
ja
insb
mov
mov
insl
test
aas
shrl
push
js
mov
sti
push
mov
cmpsl
cli
in
int
ss
outsb
dec
jb
pop
aam
insb
xchg
dec
inc
and
mov
add
insb
xchg
dec
rorl
mov
and
sub
rclb
xchg
cmp
movsl
xchg
popa
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
push
adc
adc
aaa
cli
adc
mov
mov
ret
mov
adc
jp
daa
dec
pop
mov
int3
in
pop
outsb
enter
je
mov
push
jns
or
aad
mov
ficompl
mov
mov
add
sub
stc
mov
rcl
xchg
sbb
dec
mov
cmp
jl
xchg
and
inc
or
jle
icebp
xchg
out
push
gs
les
push
out
inc
mov
les
jne
mov
je
adc
in
push
in
cmc
and
push
fnstcw
gs
mov
xchg
out
adc
int
add
shlb
mov
int
loopne
and
dec
lcall
adc
and
or
pop
movsl
cmp
sub
inc
jg
lea
mov
pop
mov
daa
cld
xor
stc
jmp
ficompl
jno
fdivrs
add
pop
js
pop
cltd
mov
stos
lcall
and
adc
or
dec
inc
mov
lea
add
add
pop
push
imul
and
jns
pop
ret
pop
mov
sbb
loope
enter
stos
ljmp
mov
add
mov
ja
jb
pushf
pop
pop
xor
lods
subb
adc
dec
iret
xchg
inc
ja
lret
add
mov
mov
loop
and
mov
adcb
mov
fs
jl
stos
fwait
cpuid
in
mov
icebp
mov
mov
loopne
cmp
and
popf
ret
adc
jae
pop
negl
fsubrl
cmc
jb
adc
cmp
dec
push
insl
cmp
insl
mov
mov
rorl
jecxz
add
xchg
sub
call
in
fisttps
rcl
popa
out
dec
out
std
ret
outsb
ds
movsl
in
sbb
cltd
add
jbe
sbb
lmsw
mov
add
push
cltd
dec
sbb
cmpsb
rcrb
clc
jne
pop
mov
aas
mov
xor
cmc
adc
jmp
ret
push
int3
jmp
pop
push
test
rorb
add
in
inc
test
add
lahf
or
fsubrl
jecxz
inc
mov
add
push
cmpsl
nop
sub
nop
sub
aas
jl
rcll
lcall
popf
xchg
ss
sbb
insl
cmpsl
sub
adc
repz
and
repnz
mov
rcll
jbe
lods
das
mov
fidivrs
mov
lcall
dec
int
mov
ja
mov
ds
out
aas
sub
pop
or
fadd
mov
cmpsb
addr16
fstl
jnp
movb
and
cld
pop
pop
inc
add
fidivrs
lret
popa
jb
mul
pop
push
adc
or
dec
push
outsl
pop
inc
out
dec
mov
lret
mov
arpl
je
mov
sbb
jle
push
icebp
cwtl
sub
insl
inc
addr16
xor
or
mov
jnp
mov
xorb
push
cmpsb
adc
push
outsb
or
pusha
or
test
xor
popa
or
mov
out
mov
rcrl
push
adc
bound
jns
lahf
xchg
mov
outsb
test
xor
mov
dec
ret
lcall
jmp
push
inc
lods
repnz
pop
mov
faddp
add
fs
mov
jo
xor
in
sbb
fwait
ret
cmp
adcl
pop
pop
imul
fistpll
jns
cwtl
sbb
icebp
add
int
cmp
push
mov
dec
outsl
and
add
xlat
movsl
push
clc
movsb
sub
mov
mov
test
push
jl
pop
dec
cmp
mov
outsb
std
cmp
dec
pop
hlt
ss
stc
add
insb
and
fldl
pop
movsl
and
or
aas
insl
sarl
call
dec
mov
mov
cli
dec
hlt
mov
or
xchg
lea
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
jo
dec
test
repz
aaa
cli
adc
out
dec
loopne
add
loopne,pn
pop
imul
mov
adc
pop
movsb
push
loopne
mov
mov
imul
jo
movsb
int3
and
adc
ja
adc
sub
add
add
outsb
mov
fisttpll
and
jno
notb
push
adc
lods
push
jb
xor
les
adc
jae
xor
or
faddp
mov
push
mov
enter
xchg
jg
js
xchg
adc
pslld
scas
stos
jge
cmp
lea
or
pop
test
popa
ficompl
lahf
les
add
cmpsb
or
incb
outsb
repz
inc
sbbb
imul
jg
shlb
mov
shll
shr
xor
sbb
into
js
push
movsl
dec
adc
pop
pop
xchg
mov
xor
xor
lret
adc
adc
inc
rcl
test
cwtl
jb
out
add
xchg
lahf
gs
clc
dec
std
pop
mov
add
lods
or
inc
jns
or
rclb
cmpsl
pop
sahf
jle
sbb
pop
sbb
xchg
adc
dec
mov
outsl
imul
in
add
mov
imul
pusha
cld
cmpsl
mov
shrl
add
fadds
shll
or
adc
push
hlt
jb
fdivrl
mov
xor
js
in
aaa
pop
or
jae
xchg
imul
sarb
mov
je
lds
inc
jne
sub
outsb
fmul
mov
jecxz
idiv
cwtl
pusha
pop
in
dec
lea
outsb
hlt
ja
xor
stos
ja
mov
popa
shll
leave
jle
jg
std
inc
scas
pop
and
orl
out
vmread
data16
mov
leave
daa
jnp
jmp
cld
mov
push
sub
das
and
mov
mov
sbbb
fcoml
test
fwait
jnp
push
sub
jae
and
sbb
sub
enter
dec
sbb
pushf
mov
pop
and
push
stc
mov
xor
aas
out
sub
lods
lahf
shrb
sbb
rcrl
pop
stc
mov
jecxz
loop
push
shlb
cmp
adc
shll
and
push
subb
mov
fsubr
mov
cmp
pop
movups
lds
int3
ds
lret
jno
test
mov
or
repz
pop
push
lods
cmp
sarl
jns
push
jg
push
adc
dec
out
cmp
outsl
add
out
adc
rorl
popa
jo
mov
fs
js
pop
sar
sub
mov
leave
xorl
mov
filds
mov
xchg
jp
jns
adc
mov
test
sbb
outsb
decb
sbb
dec
xlat
add
lds
out
sub
or
int3
shl
mov
cmpsl
das
or
pop
dec
hlt
scas
xchg
cwtl
xor
fildll
push
inc
push
jno
pop
xor
test
loopne
or
test
xor
mov
ret
rcr
aad
movsb
push
fadd
imul
scas
adcl
fisubrl
sub
aas
sbb
push
scas
addl
dec
inc
xor
cltd
cmp
or
sahf
bound
outsb
out
cmp
jl
js
mov
sahf
mov
mov
mov
sub
lcall
hlt
neg
push
incl
call
sahf
inc
and
lahf
aam
fadds
stos
js
aad
adc
xchg
cli
pop
ret
pop
sbb
mov
sahf
add
ret
ss
inc
icebp
jns
jnp
xchg
push
in
iret
xor
sarb
fisubrs
arpl
lret
decb
adc
ljmp
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
mov
xchg
jnp
adc
aaa
cli
adc
pop
js
lahf
pop
jmp
cmp
rol
shl
xor
push
cwtl
in
sub
jno
jns
sbb
push
mov
push
jecxz
jae,pt
sub
xchg
jnp
pop
inc
insb
xchg
fiaddl
lret
gs
cli
mov
cmp
sbb
dec
call
push
and
dec
xorl
xor
movsb
pop
add
xchg
and
push
lods
movsb
vhsubps
and
fwait
push
xor
mull
je
ret
or
mov
loope
sub
mov
jle
push
add
dec
enter
call
sbb
int
test
cmp
pusha
jne
dec
and
pop
divl
scas
jno
xchg
lret
cmp
mov
pusha
bnd
sub
out
ret
and
adc
stc
xchg
xor
mov
xchg
ss
scas
pop
repnz
jecxz
adc
xchg
inc
ret
push
outsl
lret
dec
insb
add
ja
out
mov
mov
dec
cmp
cltd
idivl
sbb
push
lea
xlat
mov
sbb
or
cli
push
imul
mov
adc
push
xchg
imul
test
mov
mov
jno
bound
leave
push
xchg
popf
stos
or
inc
add
xchg
inc
pop
add
mov
cli
cmp
out
shrb
inc
lret
arpl
adc
adc
in
push
or
ret
and
dec
mov
xlat
outsb
cwtl
cmp
fwait
inc
mov
sbb
fscale
push
cltd
add
enter
cmpsb
in
repz
cmp
cmpsb
test
fsts
das
js
mov
jg
lods
fdivl
cmpsl
inc
xor
add
mov
add
xor
negb
xchg
push
or
aas
jg
xchg
mov
out
lods
popa
bound
popw
gs
or
mov
sti
cmp
dec
mov
xchg
sub
daa
addl
aaa
out
data16
dec
sbb
cltd
aas
call
mov
sub
lahf
inc
sbb
js
repnz
adc
or
mov
les
adc
call
lods
and
dec
pushl
jne
push
jo
push
test
xor
icebp
scas
into
cmp
mov
jg
int
xchg
bound
sbb
xchg
popf
jne
daa
push
mov
push
xor
and
imul
xchg
out
jecxz
pop
cld
pop
lods
inc
push
jmp
cmpsl
xchg
dec
icebp
jecxz
sbb
push
popa
hlt
divl
dec
fcmovb
imul
mov
push
and
mov
jae
inc
push
idivl
repnz
dec
icebp
int
ds
dec
addr16
mov
lahf
jno
pop
loopne
rclb
mov
mov
insb
arpl
xor
sarl
sbb
pop
insb
js
jbe
and
clc
ss
aam
and
movsb
out
sbb
ljmp
push
add
loopne
add
insl
pusha
decb
into
popa
and
jg
lahf
inc
or
call
and
ja
push
popf
dec
push
dec
inc
inc
push
es
rcrl
push
adc
out
in
mov
xor
das
ret
pop
adc
and
les
int3
dec
movsb
clc
push
scas
sub
sub
pop
gs
sub
iret
xlat
sbb
shl
cmp
adc
and
jo
clc
push
lahf
lds
ret
inc
cs
adc
cmp
lahf
cltd
idiv
ret
add
out
roll
jne
fisubrl
mov
lods
add
shlb
jecxz
pop
imul
fucomip
push
les
idivl
adc
daa
lods
push
lret
es
or
pop
fiadds
sbb
hlt
mov
xor
jmp
cs
pop
mov
push
add
stos
mov
stos
fcomp
fstp
popa
and
int3
cs
jne
xchg
outsl
fstpl
push
add
shlb
rorb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
gs
adc
cli
adc
cld
jp
clc
ret
xor
jae
adc
test
dec
popf
outsl
cltd
jns
cmp
mov
lret
lea
or
adc
call
dec
fcoms
jb
mov
inc
push
ret
outsl
push
addr16
mov
mov
repz
dec
fidivrl
popf
inc
stos
enter
bound
mov
lock
add
test
test
cmp
daa
jle
cmp
icebp
ss
xchg
inc
add
xor
in
dec
repz
fdivrs
and
cmc
dec
enter
bound
fwait
outsb
mov
push
xchg
and
lods
mov
mov
cmp
roll
jp
ret
pop
repz
sbb
loop
in
aas
add
fstps
popf
lods
std
cmp
inc
cwtl
and
rcrl
push
mov
push
fiaddl
jecxz
stos
mov
push
mov
not
cld
aaa
mov
arpl
imul
xor
sahf
jle
outsl
orb
lret
inc
test
repnz
cmp
dec
dec
jae
test
mov
push
or
mov
dec
sub
les
nop
sub
push
mov
jg
in
sarb
dec
stos
inc
adc
out
gs
jge
mov
pop
xchg
pop
out
push
mov
cmp
inc
test
adc
cmp
fildl
jle
dec
das
cmp
jg,pn
or
icebp
sbb
push
es
inc
push
ret
loope
daa
out
xor
into
mov
cmpsb
pop
xchg
hlt
out
std
sub
cld
push
dec
push
pop
xchg
inc
mov
ret
sbb
in
cmp
mov
mov
fisttpl
testl
cmp
or
push
and
mov
or
sti
sub
mov
cwtl
out
ja
and
sbb
aam
gs
sbbb
mov
xor
pop
mov
add
lock
mov
nop
xchg
add
mov
xchg
xor
stc
add
add
int3
scas
pop
and
stc
mov
add
cmpsb
dec
xor
mov
xchg
mov
rclb
sub
dec
repz
scas
mull
test
adc
mov
aad
fstps
mov
dec
stos
xorb
add
cmc
fists
inc
add
jae
lahf
mov
das
cmp
add
mov
mov
adc
mov
out
aaa
fnstenv
xchg
and
in
ret
push
mov
stos
jo
cmc
sbb
xchg
and
fcomps
les
addl
rclb
or
lods
stos
jb
stos
repnz
sbb
pcmpeqb
pushf
jp
scas
aas
mov
cld
sub
or
and
pushf
loop,pt
jno
mov
arpl
shll
mov
sbb
jg
adc
filds
jbe
push
or
stos
jp
shll
fwait
add
pop
sbb
mov
sub
adc
sbb
pop
das
fs
jmp
dec
fidivl
pop
adc
inc
cmpl
test
dec
cmpsl
bound
cmp
rcrl
sub
xchg
mov
sub
cmc
call
fiaddl
daa
pop
mov
cmp
stc
imul
test
jge
pop
iret
mov
adc
mov
mov
out
sti
push
gs
or
ss
mov
xchg
xor
push
xor
jle
lds
sti
cli
test
push
rolb
movsb
xchg
test
insl
xor
cmp
xchg
jbe
xchg
mov
inc
push
dec
je
jno
mov
sti
or
pop
add
xor
imul
or
push
mov
xchg
cmp
lcall
and
sahf
out
mov
sub
call
cmp
mov
in
dec
pushf
iret
sbb
fists
ret
fcoms
iret
mov
loop
mov
lds
andl
jmp
lea
adc
leave
xor
dec
test
into
adc
aaa
cli
adc
aam
lea
lcall
addr16
and
lock
add
call
mov
fstl
cmp
inc
lock
pxor
cli
mov
add
push
mov
push
xor
int3
xchg
push
jmp
mov
xchg
xchg
test
and
out
dec
les
into
mov
push
shlb
cltd
ret
sar
stos
xchg
or
mov
fwait
mov
jg
sti
adc
std
fnstcw
ljmp
xchg
mov
mov
jp
lret
ret
pop
adc
leave
in
xor
and
loop
xor
xchg
sbb
aad
mov
mov
add
dec
hlt
rclb
adc
int3
and
shll
and
faddl
cmpsl
or
mov
add
or
jae
sub
in
pop
dec
and
es
jae
mov
dec
bound
xor
add
add
adc
popf
int3
lods
lcall
fdivrp
xchg
scas
aaa
mov
nop
std
in
adc
outsl
shll
mov
roll
scas
push
or
mov
lea
mov
scas
sbb
mov
mov
pop
jo
iret
jb
add
inc
shlb
test
enter
cmc
push
jl
jb
nop
fwait
data16
subl
arpl
xchg
push
in
rclb
out
int
xlat
lock
fstpt
dec
insb
pop
jb
ret
lock
push
lret
lock
lret
xchg
inc
pop
shl
stos
xchg
ja
cltd
mov
enter
jb
inc
stos
test
iret
inc
fsubrl
imul
mov
stc
leave
add
pushf
cmpl
push
pop
dec
std
data16
shrb
out
jg
jbe
jb
xchg
mov
out
outsb
or
cs
mov
mov
jle
sub
mov
mov
out
mov
fildll
ljmp
jb
js
lahf
int
inc
aas
dec
push
cld
sub
push
lea
arpl
imul
jbe
repz
decl
sbb
mov
cli
fcoml
insl
incb
or
or
repnz
mov
stos
jg
int3
in
inc
cmp
jl
out
adc
lods
lds
cmpsb
clc
lods
sub
pushf
xchg
sub
pop
mov
jl
addr16
cmp
adc
mov
mov
sub
dec
ret
loope
mov
into
scas
xchg
xor
and
cmpsb
iret
or
lods
fisubl
imul
sub
test
test
adc
das
add
shl
mov
mov
ficoml
xchg
adc
inc
lods
lea
pop
rolb
inc
jno
mov
imul
in
adc
or
or
lock
xchg
xor
push
dec
mov
adc
iret
xchg
into
jmp
fldcw
leave
iret
into
dec
xchg
mov
sub
jns
outsb
xorb
shlb
cmp
mov
lods
mov
jo
cmp
in
xchg
in
daa
insb
nop
cmpsb
clc
sbb
movsl
hlt
or
push
mov
fsub
scas
cmc
xchg
mov
cmp
adc
jae
push
lcall
fiaddl
cmp
jns
jl
xchg
int3
mov
imul
sub
popf
rol
cmpsb
lcall
mov
xchg
sarl
push
cmpsl
movsl
lods
pop
push
mov
stos
stos
gs
push
pop
ficompl
xchg
or
in
pop
jle
or
push
pusha
cmpsl
jge
faddp
sub
inc
xor
lds
outsb
mov
xlat
and
mov
cmp
xchg
dec
and
lds
fcoms
pop
js
test
enter
jg
icebp
andb
dec
cmp
lcall
pop
mov
pop
xor
cmp
xchg
inc
sub
push
ror
mov
out
sbb
loope
lahf
loopne
cmpsl
adcl
dec
xor
and
cli
adc
mov
xchg
xchg
xchg
rcll
sub
jl
xchg
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
mov
xchg
mov
xchg
aam
jp
push
push
das
cs
jl
arpl
decb
xor
cmp
adc
fsubl
rorl
add
loope
cltd
cmp
inc
xor
push
ja
ja
add
add
jmp
and
xor
mov
rcl
cmp
pushf
je
leave
add
sub
lods
xlat
jl
lds
mov
call
mov
clc
or
mov
sub
fldenv
fldt
push
es
dec
pop
push
test
fcomps
sub
xchg
mov
js
jo
pop
pop
bound
hlt
xor
fstpt
push
scas
pushf
xchg
nop
in
loope
and
and
insb
mov
loopne
test
xchg
xor
sahf
mov
repnz
mov
push
xchg
pop
fistpll
lret
fnstsw
push
je
fdivl
sbb
gs
xchg
ret
jbe
pop
pushf
stos
xchg
mov
xor
dec
pop
in
push
cld
push
repnz
push
cmp
pusha
into
xchg
mov
clc
je
outsb
ret
push
xor
xchg
cmp
cli
imul
and
lahf
pop
cmc
mov
cmp
pop
in
mov
aas
cmp
push
lcall
call
clc
arpl
sbb
gs
nop
aas
cmpl
pushf
outsl
bswap
insl
inc
cli
inc
xchg
adc
aad
or
iret
lods
add
dec
mov
adc
cmp
mov
push
cld
or
pop
sbb
sbb
jno
out
mov
es
or
aam
dec
push
mov
or
sub
idivl
or
adc
mov
lret
push
mov
cs
fwait
aaa
imul
pushf
insb
outsb
repnz
mov
je
leave
pop
or
and
lret
xchg
bound
pop
mov
xor
fists
loop
xchg
jnp
arpl
movsb
mov
dec
jge
or
in
aad
cs
test
mov
insl
cli
adc
push
mov
cmp
test
mov
jbe
jmp
mov
sbb
or
shl
pusha
jecxz
xchg
pop
dec
push
pop
adc
mov
cmp
and
fucomp
xor
pushl
sub
aam
imul
xchg
inc
movsl
add
mov
loop
in
inc
sub
cwtl
std
lods
mov
pop
adc
call
and
sarb
lock
jp
pop
ja
icebp
jle
add
cmc
push
cld
mov
push
xchg
sub
aam
push
sarl
iret
mov
cld
mov
imul
imul
out
daa
es
ja
inc
cmp
inc
jecxz
jl
pop
out
push
push
pushf
cmp
push
bound
sub
push
movsl
ljmp
cltd
or
sbb
mov
or
sbb
dec
fildll
xchg
cmp
fistl
je
pop
data16
sbb
lcall
push
popf
adc
xor
cli
or
dec
mov
in
mov
ret
lock
popf
clc
std
or
and
enter
and
test
inc
clc
out
rclb
cmp
mov
or
push
iret
fwait
dec
cmpsl
adc
faddl
fmulp
loope
inc
xorl
rcll
lods
mov
loope
sub
pop
add
enter
adc
test
pop
out
jne
mov
mov
mov
pusha
adc
shlb
add
enter
dec
xor
jnp
dec
loope
iret
outsl
in
outsl
out
in
es
and
loope
gs
rorb
out
jno
loope
repnz
ret
push
xor
adc
xlat
jecxz
insl
scas
push
push
in
pop
xchg
clc
pop
stos
and
jle
pop
mov
iret
aaa
lret
loopne
and
dec
pop
push
fwait
jg
xchg
lahf
les
dec
sbb
jbe
in
push
aaa
int3
lock
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
mov
adc
mov
or
mov
stos
mov
mov
fs
or
dec
or
mov
fmull
mov
cmp
xor
mov
outsl
cs
imull
lahf
loop
cmp
jge
mov
cmp
dec
sar
fdivr
mov
pop
cmp
xchg
loop
cwtl
or
ficompl
rclb
or
in
stc
scas
fcompl
pop
inc
std
mov
push
inc
xor
mov
jg
xor
es
pop
in
aad
int
fnstcw
sbb
test
shrl
lret
mov
push
flds
lock
lahf
jmp
imul
arpl
das
out
ror
test
xorb
mov
test
cmp
cmp
loop
loope
inc
movsb
mov
dec
lods
shlb
jecxz
push
push
out
and
or
sbb
mov
testb
popa
jne
leave
outsl
inc
mov
push
arpl
push
pop
sub
xorb
out
xchg
pop
in
stos
jbe
aaa
xor
sub
add
inc
mov
dec
lods
sbb
dec
cmpsl
ja
hlt
outsb
adc
pop
cmp
cmp
sbb
into
dec
lcall
aam
movsl
test
or
jnp
jmp
pop
daa
lret
add
out
sti
mov
inc
mov
jge
xchg
iret
stc
xchg
push
fsts
inc
jno
imul
xor
and
jl
jns
dec
push
daa
xchg
xchg
adc
lret
inc
stc
sbb
and
arpl
mov
sbb
test
push
out
lret
sbb
adc
adc
mov
jne
mov
pop
out
rcll
push
test
lret
sub
stos
add
add
lcall
out
dec
imulb
pop
sarb
jl
out
in
in
in
lret
push
in
orps
dec
cmc
mov
add
lret
cmc
jns
or
dec
int3
pop
and
mov
enter
push
pop
mov
pop
outsb
and
push
jmp
jecxz
or
or
inc
dec
xchg
arpl
mov
out
cmp
xor
or
popf
popf
mov
jo
sbb
mov
leave
push
xor
imul
loope
or
pop
lods
lods
cs
daa
xchg
or
jge
add
dec
xor
inc
adc
adc
test
mov
jecxz
xchg
dec
and
ss
fldcw
pop
das
fwait
pop
adc
mov
jno
dec
out
push
repz
and
loopne
add
inc
fists
aad
mov
pop
mov
push
cmp
jbe
lahf
pop
cmpb
out
pop
outsb
push
sbb
addr16
dec
clc
leave
adc
and
jle
in
pop
pop
popl
dec
out
jne
jp
jp
adc
xchg
mov
sti
or
aam
lods
sbb
pop
mov
notb
sbb
add
scas
xchg
xor
lret
dec
pusha
jl
add
sbb
mov
lods
push
jmp
mov
or
cli
xchg
aaa
xchg
xchg
mov
ret
lret
cld
mov
pop
inc
aas
cmp
and
xchg
inc
pop
rcll
loop
outsl
iret
xor
js
repz
dec
xchg
mov
xlat
and
mov
push
inc
adc
jmp
ret
test
cmp
push
xor
push
aaa
push
inc
jo
or
in
imul
nop
mov
push
idivl
cmp
cmp
or
stos
mov
out
mov
sub
loopne
xor
incl
nop
mov
jge
inc
inc
xchg
out
inc
and
xchg
mov
ret
pop
mov
cmpsb
mov
or
cbtw
push
push
xor
movsb
xchg
fsubr
je
cmp
int3
mov
push
push
add
mov
hlt
cmp
cmpsl
xchg
xchg
xchg
inc
mov
out
es
xor
jmp
lods
cld
xchg
jmp
xchg
loope
test
mov
adc
cli
adc
pop
dec
cmp
clc
add
jge
xchg
mov
out
shlb
cmp
clc
lcall
imul
mov
push
dec
stos
pop
push
jl
xor
call
ljmp
pop
sbb
mov
mov
repnz
xchg
cs
lret
mov
lret
ret
push
mov
aam
xor
lods
ss
repnz
adc
fs
divb
ds
mov
or
dec
int3
sbb
jl
bound
mov
lcall
mov
inc
jae
and
or
xor
jo
push
pop
pop
loop
inc
inc
inc
fst
shl
cmp
ss
jecxz
sub
stc
xchg
xchg
mov
sbb
repz
mov
sahf
outsb
out
cld
cmc
pop
enter
out
ror
movsb
lods
jg
or
outsb
dec
bound
jnp
shrb
inc
ljmp
pop
xchg
sub
push
scas
fimuls
xchg
sub
push
jg
pop
and
dec
sahf
hlt
push
sub
test
xor
imul
outsb
adc
lretw
cmp
xchg
mov
push
mov
push
movsl
jmp
mov
out
add
not
les
inc
cmpsb
push
xchg
inc
add
incb
pushf
notb
int
leave
sub
mov
loopne
sbb
inc
out
xchg
sub
ficoms
sbb
stos
sub
add
mov
mov
pop
jae
pop
inc
mov
pop
icebp
movsb
mov
mov
stos
push
imul
stos
lret
mov
sbb
pop
cwtl
arpl
aad
mov
or
fs
into
inc
inc
insl
aam
outsl
into
push
mov
mov
cmp
push
jae
pop
xchg
sub
inc
ljmp
mov
inc
pop
pop
daa
push
in
mov
popf
ljmp
insl
lret
cmpsl
addl
pop
lock
push
adcb
ljmp
int
pop
das
stos
outsl
add
jge
mov
xor
lcall
fldl
lods
subb
sbb
loopne
mov
fidivs
mov
cmp
push
jg
stos
cmpsb
outsl
dec
jg
or
or
push
cmp
lds
pusha
push
loopne
lahf
xchg
popf
push
jae
in
dec
mov
xor
ds
lahf
jbe
push
pop
out
cwtl
aad
add
mov
hlt
and
jae
out
das
jbe
dec
jl
ljmp
das
mov
pop
xchg
inc
es
into
sub
xchg
ja
mov
push
mov
cmc
adc
imul
cmpsb
and
mov
sbb
sub
mov
and
jle
repz
mov
call
and
into
dec
cmp
cmpsl
xchg
mov
xor
in
out
ljmp
inc
pop
movsb
sub
arpl
jecxz
and
sub
cmpsb
lods
push
add
fistps
movb
push
jle
cmp
fdivrs
mov
inc
cmc
jmp
sbb
enter
xor
aas
mov
xchg
cmc
pushw
les
clc
ljmp
aad
cmp
or
fisubl
out
jg
and
mov
cmpsb
pusha
repz
xor
test
and
iret
mov
or
or
pop
fstl
inc
or
cmp
fidivs
addl
movsb
loop
fmull
adc
mov
dec
aam
nop
mov
pop
mov
jge
imul
dec
push
and
ljmp
lea
mov
fidivrl
sahf
andl
pop
mov
sahf
cli
sub
or
out
pop
imul
adc
push
or
in
out
mov
pop
mov
mov
mov
pop
sarb
xchg
iret
sbb
loop
adc
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
mov
out
repz
adc
cli
adc
inc
fistpll
xchg
push
out
das
jbe
lret
pop
xor
jns
mov
cmpsl
mov
and
and
mov
push
mov
push
pop
daa
xchg
xor
pushf
in
xchg
sub
fwait
sub
mov
jae
js
dec
imul
out
push
xchg
andb
dec
inc
dec
insl
scas
repz
inc
popf
inc
aam
xchg
leave
inc
dec
adc
cmpsb
in
mov
lcall
add
add
fiaddl
pop
out
mov
out
fistl
scas
jnp
cli
dec
inc
xor
sub
jp
inc
mov
es
adc
pushf
enter
xor
pop
sti
rcr
fs
add
leave
lret
mov
gs
mov
in
imul
mov
mov
rcrb
lahf
test
push
hlt
loopne
aam
fs
outsb
cmpsb
arpl
or
add
lea
mov
add
lods
ror
pop
inc
inc
in
insl
mulb
mov
mov
sub
and
lret
pushf
arpl
mov
and
lods
sub
mov
scas
sahf
rorb
and
lea
or
mov
jb
jb
les
cs
or
iret
lcall
add
rcrb
jmp
xchg
shlb
int3
push
imul
jo
mov
fwait
adc
inc
in
jno
pop
nop
mov
jnp
inc
decl
lods
lret
push
loopne
icebp
cli
mov
sub
es
dec
lods
jg
gs
dec
shrb
pushf
mov
cmpl
in
push
cmp
lahf
or
out
mov
int3
cmp
imul
pop
das
push
rcrb
lahf
outsl
loope
fdivrs
cmovbe
push
cmp
in
fwait
jge
xchg
out
xchg
pusha
sub
imul
mov
jge
sub
imul
sub
lods
jp
xlat
lds
lret
fld
cld
out
in
xchg
or
in
lock
xchg
add
cmc
sub
rol
adc
out
push
notb
jno
mov
mov
imul
in
ds
cwtl
and
adc
ljmp
mov
jl
aas
xor
cmc
and
shll
mov
pop
or
sbb
ret
cwtl
jo
mov
fidivs
sbb
xchg
cmp
scas
xor
in
je
ficompl
and
lea
jb
int
nop
cs
movsb
cmpsl
aam
mov
arpl
pop
ss
leave
pusha
out
cmp
movsl
cmp
xchg
adc
adc
repnz
adc
loopew
push
mov
sbb
or
mov
and
test
int3
xchg
inc
mov
mov
rcr
mov
or
pop
mov
mov
xor
inc
lods
or
dec
add
mov
out
pop
out
shl
xchg
mov
xchg
lea
inc
cs
aad
clc
sbb
mov
into
mov
mov
mov
repz
mov
arpl
push
adc
fnstsw
aaa
outsb
andl
sub
clc
scas
insb
or
int
daa
and
jb
cs
mov
test
jae
js
push
push
test
out
jne
test
loope
push
aad
mov
test
gs
insl
in
mov
or
mov
cmp
sbb
sbb
aam
lcall
sub
test
fstps
fists
adcl
cmpsb
stos
cmpsb
ljmp
sbb
in
shr
lret
cmp
jno
imul
push
lods
ret
mov
dec
arpl
rcrl
add
sbb
mov
mov
ds
daa
xor
mov
push
mov
sbb
inc
and
push
fwait
sahf
sub
and
repnz
add
dec
shr
js
adc
sbb
in
cmp
aam
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
dec
push
pushf
adc
aaa
cli
adc
icebp
bndldx
leave
pop
adc
stos
movsl
in
lods
arpl
pop
or
insb
mov
pop
add
sbb
call
sti
sbb
loope
push
cmpl
and
into
jno
or
aad
das
dec
mov
int3
push
lods
mov
loopne
dec
rorb
or
fmuls
movsb
enter
xchg
das
cmpsb
scas
adc
out
lahf
jbe
fistpl
sbb
lea
lds
stc
or
cmp
inc
xchg
jp
push
add
xchg
pop
fs
cmp
sbbb
or
loope
and
out
adc
inc
test
out
or
push
jno
fildl
shrl
or
and
sub
jo
lcall
sahf
pop
in
pop
mov
hlt
push
sbb
pop
or
inc
xor
fdiv
pop
cmpsl
push
push
mov
jecxz
cmp
push
aaa
xor
xchg
mov
mov
bound
fimuls
data16
loope
adc
divl
mov
scas
cmp
mov
pushf
add
and
enterw
inc
mov
push
add
add
mov
adc
daa
mov
push
push
push
daa
mov
and
mov
dec
sub
pop
push
jmp
jmp
xor
mov
pop
movsb
mov
mov
mov
and
imul
ret
ss
pusha
cmovg
stos
repnz
insl
fdivrs
aad
sub
and
in
sub
fcoms
mov
shrl
sarl
in
es
xor
jp
xchg
popa
mov
xchg
cld
arpl
dec
int
sbb
inc
fimull
mov
jl
ret
push
test
in
jle
mov
fisttpl
mov
fldcw
add
repnz
mov
mov
inc
and
push
jno
imul
fs
add
clc
fiaddl
push
xor
inc
sbb
in
sahf
lahf
sbb
loopne
repz
or
lcall
leave
push
ficompl
shll
gs
repz
jne
icebp
and
sub
jl
dec
je
testb
fcmovu
mov
mov
rorb
outsl
mov
fistps
adc
push
sti
cmpsb
jge
mov
lar
iret
and
in
je
jge
jb
movsl
sub
movsb
ss
cmp
jns
cltd
in
movsl
arpl
les
mov
mov
adc
cltd
sarb
fisttpll
out
sub
push
imul
push
jae
sbb
outsl
mov
and
push
mov
push
arpl
xchg
add
add
jmp
sti
loopne
sbb
cld
test
mov
ret
xor
lds
hlt
sbb
gs
adc
fwait
xchg
mov
clc
fwait
push
ja
add
fwait
negb
fwait
push
cld
addr16
xor
inc
push
pushf
adc
ss
cld
addr16
mov
fstpt
sbb
int3
sbb
adc
lret
sbb
call
jmp
int3
addr16
inc
jo
mov
adc
mov
out
inc
sbb
push
adc
ret
mov
iret
loop
jg
repz
xorl
push
jae
xor
or
push
lds
out
test
mov
cmp
and
xchg
mov
jae
addr16
aas
sbb
fdiv
stos
test
mov
or
and
dec
inc
mov
dec
mov
dec
arpl
das
pop
dec
call
ds
mov
filds
outsb
jle
pop
fildll
andb
mov
jae
mov
stos
add
dec
push
lahf
loopne
and
icebp
lock
mov
dec
inc
push
xor
pushf
jmp
int
mov
pop
ja
cmp
lods
enter
pop
xor
int3
pop
xor
iret
sub
ret
dec
pop
cmc
fidivrl
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
push
fsubrl
pop
mov
adc
stos
popa
lea
lcall
push
ret
test
sbb
cltd
loope
xor
outsb
cmpsb
call
arpl
and
cmp
push
pushf
push
or
or
mov
inc
rcl
scas
mov
jbe
int3
lods
push
mov
dec
inc
inc
mov
cmpsb
test
test
inc
out
testl
imul
lds
xchg
adcl
jle
pop
aas
mov
sbb
in
sbb
jno
add
add
jge
out
xor
test
nop
lods
mov
push
mov
pop
js
dec
sub
in
sbb
loop
outsb
push
xchg
cmp
jecxz
mov
push
lea
cmp
in
rolb
aam
jne
outsl
mov
inc
inc
jb
movb
int
cmp
shlb
idivb
mov
or
call
mov
xlat
cwtl
test
mov
sahf
outsb
xchg
or
rorl
shl
imul
lods
inc
push
jl
in
daa
dec
inc
jl
adc
ds
pusha
clc
mov
mov
and
inc
repz
lret
jle
pop
mov
mov
jno
mov
push
and
sti
push
and
mov
add
repnz
mov
sub
dec
mov
fildll
and
inc
sub
cmp
inc
into
add
fldenv
fdivr
jmp
sub
movsl
loop
sub
mov
idivb
pop
iret
mov
fidivrl
call
mov
mov
scas
mov
add
data16
mov
jb
cs
push
mov
pop
xchg
mov
sbb
div
mov
inc
mov
dec
mov
daa
and
sbb
jb
test
aaa
jmp
movsb
ss
pop
mov
fmuls
arpl
out
and
movb
cmp
faddl
in
dec
and
int3
mov
mov
loope
sub
andl
call
in
hlt
cli
rcl
dec
jge
mov
inc
mulb
and
push
std
popf
outsl
cmpsl
sub
dec
ss
shl
dec
sub
popf
sub
lret
pop
xchg
push
jo
push
pop
jle
cwtl
es
push
or
add
test
or
pop
mov
mov
test
and
fcmovb
sub
inc
loope
movsl
inc
sahf
pop
inc
hlt
lret
xor
xchg
cmp
or
pop
mov
adc
je
mov
mov
dec
fildl
out
cmp
ret
aaa
add
push
out
imul
subl
iret
cmp
or
xor
inc
jecxz
cmp
push
fld1
jp
add
movsl
aad
pushf
push
sbb
xchg
inc
jle
addl
pop
jne
push
inc
out
mov
jbe
push
inc
mov
mov
mov
add
mov
mov
xchg
pop
cld
js
cmp
fidivs
adc
insl
mov
cld
jno
sub
sbb
cmc
mov
inc
cwtl
arpl
out
int
adc
repz
sbb
ret
lcall
fistl
scas
cmp
call
sbb
rcl
cmpsl
pop
mov
aad
les
jb
pop
push
inc
pop
push
or
push
loope
pop
cwtl
andb
push
repnz
cmp
and
mov
add
fwait
jle
jb
jae
lea
leave
pop
jo
mov
test
pushf
test
pusha
push
rorl
shlb
jge
mulb
cmp
mov
idivb
repz
push
sarb
es
xchg
cs
faddp
fwait
sbb
movsb
xor
lock
fs
push
cltd
movsl
test
das
mov
fisttpll
loopne
rorl
test
das
lahf
rorl
iret
das
pop
sbb
pop
inc
cld
push
icebp
dec
daa
jne
xor
mov
ljmp
cs
test
add
mov
jno
and
rorb
ret
add
add
je
lods
mov
imul
sahf
mov
adc
cli
adc
cmpl
cli
je
cwtl
mov
ljmp
add
jnp
and
frstor
pusha
int3
mov
add
or
cld
sbb
or
inc
insl
aam
scas
add
dec
pavgb
stc
popl
fwait
or
popf
hlt
mov
pop
jmp
cltd
std
iret
push
fs
push
xchg
lahf
stos
or
fs
aad
dec
or
insl
mov
push
ds
and
cmp
out
pmaxsw
fstpl
push
mov
xor
xchg
and
pop
mov
not
shlb
rorl
fdivs
and
mov
std
cmpb
or
mov
and
dec
xlat
mov
test
mov
dec
sbb
negb
pop
imul
sub
fimull
lds
arpl
or
mov
xor
adc
sbb
mov
adc
pop
data16
pop
cmp
mov
rcl
adc
pop
adc
xchg
lods
testb
and
out
popa
int
mov
fwait
ret
hlt
cmc
fisubrs
push
test
xor
or
lcall
dec
sub
imul
cld
icebp
push
adc
xchg
sub
js
fcmove
inc
pop
xchg
jno
sahf
pop
push
push
jbe
jge
loop
lds
std
out
decl
add
cmc
push
jbe
cmp
push
out
jno
ss
leave
push
sbb
iret
cld
sbb
push
add
or
mov
pop
sub
sbb
mov
inc
fcoms
xchg
pop
lahf
aam
sbb
mov
xchg
xchg
in
mov
dec
jae
bound
pop
inc
out
push
mov
sbb
rclb
lock
loop
jo
sub
inc
or
pusha
push
lds
mov
les
fwait
lds
je
dec
mov
mov
jg
dec
dec
xchg
xchg
lods
in
out
push
xchg
int
in
and
dec
add
cli
iret
js
pop
fldt
add
pusha
inc
aad
or
xor
push
add
cli
pop
sub
outsl
hlt
test
test
or
sbb
pop
loopne
mov
xor
clc
xchg
out
mov
pop
mov
or
scas
sub
and
push
cmpsl
andb
sahf
int
call
mov
rcrl
js
mov
sub
mov
movsl
pop
mov
mov
aaa
je
sub
jns
test
jne
outsb
lcall
out
nop
nop
testb
dec
push
add
jb
aam
mov
push
pushf
fnsave
shlb
divb
outsl
add
lods
pop
pop
lcall
cmp
out
mov
int3
adc
add
dec
fdivrs
decl
and
cmp
shl
fs
jo
subb
adc
js
sarb
cli
in
sub
lods
mov
shrl
or
ljmp
dec
xor
xor
pop
cs
jecxz
stos
pop
shrl
cli
push
or
or
arpl
fwait
out
repnz
and
jno
roll
pushf
cmp
pop
cli
sbb
inc
pop
and
adc
je
cmc
popa
push
fldl
es
iret
aam
push
test
dec
rcrb
negb
jns
xor
pop
popf
sub
xchg
into
in
ret
test
fadds
pushf
iret
and
cmp
mov
popf
push
add
mov
aam
sub
insl
mov
mov
and
adc
inc
frstor
push
jmp
sbb
push
jb
push
out
dec
pusha
sbb
lret
sub
dec
sbb
icebp
stc
jg
push
pop
adc
inc
mov
inc
rcll
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
pusha
mov
jecxz
adc
aaa
cli
adc
xchg
jb
cli
std
pop
cmp
movb
sbb
mov
pop
cmp
mov
add
add
jge
push
fstpl
aad
add
scas
xchg
mov
adcb
sti
adc
push
adc
cmpb
add
fwait
data16
jne
inc
xchg
push
xchg
inc
stc
daa
or
add
adc
jb
fdivrp
push
xor
mov
mov
inc
mov
add
xorb
jg
shll
ficoms
mov
ret
stc
xor
out
mov
add
sub
movsl
pop
inc
icebp
add
sahf
iret
and
leave
sti
dec
pop
pop
sub
and
inc
outsl
mov
mov
pop
and
sti
and
or
mov
adc
test
sub
mov
cwtl
out
mov
dec
clc
dec
mov
ds
xor
dec
xchg
xchg
jecxz
movsb
xchg
iret
jecxz
sahf
pop
repnz
mov
cli
lret
int3
orl
stos
pop
data16
push
arpl
shr
daa
movb
popf
pop
mov
mov
xor
add
or
inc
in
popa
sbb
pushf
dec
mov
xor
push
aad
lods
jg
pop
cld
test
jge
js
mov
xor
lock
leave
jno
imul
and
daa
inc
mov
lds
rcrb
inc
clc
test
inc
inc
shrb
call
mov
mov
add
jno
mov
cltd
ljmp
shrb
movsl
rorl
enter
icebp
push
xchg
pop
and
imul
pop
mov
out
mov
sarl
dec
or
push
sub
fs
mov
xor
mov
mov
ja
xchg
inc
push
dec
das
mov
ds
push
add
dec
inc
adc
sub
xor
scas
xchg
mov
pushf
movsl
sbb
or
insb
mov
pop
cmc
aaa
std
push
stos
mov
lds
and
xchg
jmp
in
add
mov
cmp
test
add
iret
sbb
in
adc
xchg
repz
and
ja
sbb
leave
mov
hlt
icebp
icebp
pusha
imul
xchg
movsl
jne
imul
icebp
jo
sti
lret
out
loop
xchg
pop
adc
mov
addr16
cmp
repz
push
cmpsl
loop
stos
mov
enter
fistps
fadds
mov
lret
imul
xor
xor
pop
aaa
cmp
fstpt
and
lret
xchg
lds
insb
mov
mov
fucomi
out
adc
aad
and
inc
loope
orb
adc
inc
mov
xchg
mov
mov
sub
jp
fndisi(8087
add
ds
ja
push
shll
fnstenv
inc
cmp
roll
cld
jle
and
pop
scas
dec
push
aaa
push
js
cltd
enter
ds
adc
push
jl
mov
std
jae
cmpsl
lds
pop
in
repnz
addl
pop
push
jp
int
sbb
pop
fsubs
pusha
loop
or
jns
test
jp
in
sub
dec
xchg
test
loopne
outsl
cld
cld
in
out
sub
adc
loop
jne
pop
pop
movsl
cmp
adc
inc
inc
jmp
mov
mov
rorl
xchg
cmp
jle
mov
popf
push
mov
cmc
dec
imul
cmp
jp
xchg
aad
adc
mov
out
scas
ja
push
lret
mov
mov
clc
fsubl
sbb
sub
sbb
cmp
and
outsl
hlt
rcll
and
dec
rolb
and
int
jb
sbb
inc
arpl
cmp
or
jbe
xchg
cmp
xchg
ss
imul
enter
add
mov
or
add
shl
jmp
add
push
adc
add
jnp
adcb
aaa
cli
adc
out
icebp
or
les
cmc
cmpsb
mov
pop
mov
xor
mov
out
daa
test
mov
inc
imul
sbb
test
rolb
outsl
jge
loopne
rcrl
mov
mov
fildll
lods
xchg
push
mov
popa
push
test
mov
das
leave
mov
jle
jb
stc
cltd
shll
rcll
xor
mov
pop
add
xchg
mov
pop
out
call
movsl
les
dec
jne
mov
xchg
pushf
adc
or
mov
or
adc
shrl
es
xchg
je
xchg
mov
rcrl
dec
xchg
movsb
enter
aad
mov
xchg
fiaddl
ss
dec
nop
dec
in
mov
popf
xchg
pop
dec
lret
orb
adc
adc
add
jg
mov
lea
pusha
mov
mov
arpl
imul
xor
adc
cmp
jp
jle
jb
jno
lods
fiaddl
aad
xchg
dec
adc
out
repnz
add
movsl
outsl
pushf
frstor
xor
daa
addr16
xchg
sti
mov
pop
xor
jno
setne
jne
in
loopne
out
cmc
adc
adc
loop
adc
mov
dec
imul
aad
sbb
jg
sbb
push
mov
sub
insb
mov
and
mov
mov
inc
sti
dec
or
mov
push
insb
push
or
inc
fistpl
out
cmc
add
mov
ficomps
insl
rcl
dec
mov
mov
or
mov
scas
in
orb
or
xchg
lods
inc
dec
xor
xchg
lret
iret
mov
inc
push
gs
pushf
adc
pop
addb
jl
adc
lret
and
mov
stos
movsl
sub
mov
pop
test
xchg
out
mov
jp
push
sarb
out
je
adc
pop
mov
mov
xor
cmp
sub
add
call
mov
movsl
fucomp
loope
jbe
and
push
xlat
mov
and
loope
sub
mov
add
fildll
test
bnd
jp
jne
lcall
xchg
andl
cmp
pop
outsl
cmpsb
pushf
push
pusha
popf
sbb
lcall
cmc
sbb
xor
pop
xor
push
lret
movsb
rclb
rcrl
xlat
adc
xor
and
movsl
sbb
adc
insb
cmpsl
test
mov
shll
mov
test
xchg
icebp
aaa
xlat
push
pop
push
mov
cs
pop
mov
ret
sub
test
jp
cmp
sbb
loopne
subb
push
aam
mov
push
mov
lahf
bound
sbb
mov
jp
call
mov
je
stc
xor
lock
insl
inc
shll
push
sbb
dec
adcl
mov
sbb
jbe
popf
das
cltd
cwtl
sub
cld
push
mov
stos
cmp
test
movsl
lret
xchg
jo
add
lahf
mov
shlb
insb
ret
int
outsl
loop
add
cmp
cli
ss
pop
and
movsl
mov
imul
pusha
cmc
pusha
fisubs
push
in
test
popf
sti
out
test
ja
adc
repnz
int
jp
cmc
jp
xchg
mov
fmul
jno
or
sub
dec
inc
jg
jae
cmp
add
es
sbb
insl
xrelease
in
shll
mov
int3
in
inc
fs
into
mul
divl
aas
jno
jno
shlb
or
stos
test
jp
in
xchg
sbb
test
pop
in
andb
rcrl
cmc
xchg
dec
and
xchg
adc
mov
lods
enter
add
add
movsl
js
inc
push
dec
xchg
movsb
cmp
jae
pop
jnp
push
adc
test
sbb
es
dec
fcmovnu
mov
add
inc
add
f2xm1
xchg
lea
in
jecxz
sub
leave
sbb
cld
push
cmp
icebp
inc
icebp
and
clc
sub
mov
shrl
adc
ret
inc
data16
xchg
negb
cmc
aam
dec
mov
mov
mov
rorb
ja
shrb
js
push
fsubrs
inc
sbb
leave
pop
cmpsl
jmp
cmp
adc
inc
cld
and
mov
negl
mov
out
dec
sbb
jns
push
mulb
in
scas
and
dec
pop
mov
pop
hlt
and
mov
and
xor
test
mov
popa
lods
dec
mov
inc
sahf
pop
add
jge
or
mov
sbb
push
cmp
sub
or
jnp
dec
das
jnp
mov
pop
dec
xchg
sbb
and
sbb
and
cmpsb
mov
mov
inc
lret
out
and
popa
imul
pop
adc
shrl
jmp
lcall
cmp
or
inc
outsb
jns
mov
xlat
pop
std
add
and
shl
mov
idivl
and
and
jne
repnz
in
out
adc
mov
hlt
inc
lock
mov
lds
cmpsb
in
mov
lcall
mov
xor
subl
cmp
popa
adc
add
cmp
icebp
jge
fwait
scas
mov
push
test
push
sbb
test
jnp
dec
xchg
ljmp
aas
pop
pop
loope
mov
dec
sub
add
dec
push
mov
mov
sbb
jo
iret
mov
stos
mov
and
lret
pushf
jp
xlat
jp
dec
pop
or
inc
jno
mov
icebp
mov
jbe,pt
jnp
dec
jle
pushf
stc
jmp
iret
lea
ret
and
dec
test
and
push
xchg
push
in
in
jge
push
dec
in
pusha
nop
repnz
add
mov
lret
mov
sbbb
pop
inc
add
clc
cmp
insb
insb
sub
jne
imul
xor
jo
mov
in
sbb
pshufw
movzbl
int
pusha
inc
push
xchg
mov
cmp
daa
loope
jp
in
pop
xchg
dec
loope
cmpl
sbb
cmp
subb
insl
popa
nop
repz
pusha
jne
add
and
addr16
int3
fadds
mov
ja
cmpb
push
jecxz
fs
xor
shufps
scas
inc
sbb
and
test
jno
in
les
inc
push
cmpsb
sub
jmp
xchg
dec
iret
inc
adc
inc
push
lcall
ja
int3
pushf
mov
dec
mov
out
xor
cmpsl
stc
roll
inc
mov
icebp
xchg
sti
inc
inc
push
aas
test
shrl
std
addb
fsubs
icebp
fidivrs
add
jne
pop
sub
push
sub
scas
aam
insl
mov
call
test
dec
hlt
push
mov
and
mov
popf
and
ljmp
pusha
push
dec
icebp
xchg
cld
sub
stos
jge
and
repnz
xchg
rorl
dec
scas
jbe
sbb
cmp
or
mov
iret
lods
adc
outsl
xor
ret
jecxz
stos
imul
push
shll
pop
shll
fisubs
pop
loopne
fisubl
jae
and
mov
mov
mov
repnz
leave
mov
rorb
or
adc
test
gs
out
sub
cltd
pop
sbb
mov
fwait
jne
mov
add
clc
adc
iret
xor
sbbb
shrb
adc
jp
dec
pushf
repnz
movsb
lods
mov
sbb
pop
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
jg
inc
dec
sub
outsb
loopne
sub
mov
jne
pusha
pop
gs
mov
jno
cmpsl
mov
inc
fadds
jge
mov
fwait
add
sub
ja
into
sub
sbb
mov
jle
or
fs
dec
push
cmp
xchg
ja
outsb
js
xor
sarb
loope
mov
cltd
in
test
imul
mov
sbb
xchg
paddd
xchg
rclb
lcall
xchg
push
jnp
xor
push
xchg
mov
dec
sub
cmpsl
add
movsb
call
adc
test
sub
jmp
aas
dec
pop
jb
or
jge
aas
js
and
push
adc
movsb
sbb
test
imul
fwait
jbe
xchg
dec
paddq
push
mov
adc
sbb
pop
int
mov
cmovo
and
insb
in
add
cli
push
mov
push
jle
add
xor
mov
bound
cwtl
jge
data16
hlt
mov
les
shll
and
mov
pop
mov
mov
push
dec
adc
ja
jp
add
gs
test
xchg
inc
and
ljmp
xor
movsb
jp
mul
cmp
mov
imul
ljmp
adc
loopne
testl
cs
out
jge
mov
jecxz
sub
dec
clc
mov
mov
pop
mov
adc
or
rep
adc
stos
mov
fimull
jno
divb
shlb
pop
jge
push
mov
fs
pusha
pop
repnz
mull
cltd
sub
sub
mov
scas
iret
dec
dec
outsb
pusha
mov
test
xchg
sub
mov
cmp
movsb
mov
cmp
in
adc
sbb
push
jle
mov
out
shll
ljmp
enter
scas
dec
sub
dec
xchg
xor
jg
mov
insl
mov
cltd
loop
mov
dec
movl
vcvtsd2ss
inc
ljmp
add
gs
pop
dec
addl
cs
insl
mov
mov
imul
jecxz
movsb
daa
and
inc
shrl
cmpb
pop
out
into
jns
push
xchg
mov
sub
insl
cmpsl
push
push
mov
movsl
insb
jecxz
lahf
cld
sub
stos
sbb
repnz
test
dec
adc
fidivl
movb
xor
stos
in
dec
push
and
shrl
sbb
mov
xor
mov
jbe
imull
icebp
sbb
rorb
mov
outsb
adc
sub
jbe
and
push
mov
shl
inc
scas
pop
nop
aam
lock
adcb
push
dec
push
pusha
pop
mov
add
push
cwtl
adc
in
popa
lods
ror
sti
int
dec
je
mov
push
or
sahf
inc
cmp
xchg
pop
outsb
daa
dec
insb
xchg
mov
inc
sub
dec
xlat
push
jae
xchg
xchg
mov
outsb
pop
xchg
push
andb
xchg
xor
cmp
xor
mov
outsl
and
push
xor
cli
adc
jo
mov
adc
mov
jb
jmp
or
add
sbb
cs
fdivs
sub
add
lret
jae
mov
out
andl
dec
mov
test
sti
jp
ret
inc
in
adc
pusha
fldenv
xor
mov
mov
adc
cmp
mov
adc
inc
xor
int3
and
mov
ja
add
arpl
pop
pop
sbb
push
dec
sarl
dec
adc
sbb
popa
mov
cmpsl
les
in
bound
push
cmp
rorb
lret
pop
mov
cmpsb
fdivp
inc
ficoms
inc
enter
jmp
mov
dec
js
fs
xor
adc
adc
aaa
cli
adc
addr16
pusha
sbb
pop
jne
adc
cld
fwait
push
pop
cs
or
fadds
ret
dec
pusha
xchg
nop
xor
inc
aad
icebp
stc
aam
pop
lret
mov
inc
sub
cs
cmp
subb
push
cwtl
daa
scas
out
mov
add
movsb
jmp
or
push
out
aaa
and
lret
hlt
incl
jne
push
sub
pop
ficomps
pop
mov
pop
inc
movsl
jg
sar
loope
inc
test
inc
mov
pop
or
inc
orb
push
sub
dec
and
xchg
cmp
pop
mov
mov
add
sbbb
cmp
xchg
mov
call
push
fisubs
into
subl
rolb
popa
inc
and
mov
stos
je
push
push
lods
or
cli
pop
les
in
pop
test
loopne
shll
js
and
test
mov
lahf
mov
nop
dec
sbb
jl
push
imull
call
xchg
icebp
lock
xor
or
xchg
mov
xchg
push
jae
jnp
or
rolb
roll
icebp
outsb
aam
or
xchg
popa
mov
arpl
mov
scas
and
adc
ss
loope
pop
lret
pop
mov
inc
mov
shrl
loop
and
mov
push
ss
enter
shl
fildl
ret
shll
sbb
fwait
xchg
inc
ja
cld
popa
sbb
push
outsl
jmp
sub
push
lret
lcall
adc
je
and
push
jle
jb
or
jbe
jmp
jb
mov
lods
xlat
clc
push
fbstp
xchg
jbe
pop
push
iret
xchg
fwait
or
adc
mov
mov
imul
and
pop
sub
lea
and
test
sti
or
test
or
pop
xor
xchg
inc
out
mov
xchg
adc
out
xor
fdivp
pop
pushf
sub
in
mov
mov
fidivrl
push
mov
add
mov
xor
xlat
insl
push
adc
seta
pusha
rcl
orb
lods
in
sahf
xchg
call
sub
cmc
cmp
aaa
aad
adc
lock
ds
xchg
and
sar
fisubrl
push
jb
insb
xchg
jg
dec
sbb
jg
add
xor
and
jge
jne
scas
push
mov
imul
stos
mov
or
clc
push
aaa
sub
pop
insb
dec
icebp
xchg
adc
addr16
push
mov
aaa
inc
jmp
ret
nop
sub
dec
mov
pop
imul
cs
lods
add
jbe
hlt
mov
lds
or
les
dec
sbb
mov
push
cmp
js
div
js
sbb
loop
sbb
xchg
lods
inc
inc
xchg
dec
lods
xor
mov
mov
lcall
pop
shrb
mov
xchg
pop
lret
push
push
cmp
das
and
leave
jbe
cmc
push
or
xor
jp
xchg
mov
cmp
push
in
lds
mov
jbe
stc
enter
and
bnd
lcall
xchg
push
mov
inc
rcl
xor
fldt
lcall
add
add
pop
movsb
mov
dec
mov
cmpsl
xlat
or
add
xchg
sub
mov
fwait
xor
jno
test
cli
dec
cli
enter
mov
repz
mov
lds
xchg
mov
aad
and
push
mov
mov
mov
jo
gs
es
push
and
imulb
inc
push
push
dec
in
cmp
push
ds
dec
mov
aad
or
cmc
cmpsl
push
pusha
pop
or
sbb
cli
sub
dec
mov
pop
sbb
mov
pop
test
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
add
adc
cli
adc
insl
mov
and
mov
rcrb
xor
jle
xchg
xchg
xor
insb
testl
and
lcall
inc
mov
inc
test
lret
jecxz
and
std
jo
aad
sbb
mov
out
enter
dec
call
push
clc
jmp
sar
rcpps
enter
pop
pop
sbb
push
or
rcl
mov
dec
fsts
arpl
and
push
jg
aaa
mov
std
mov
mov
imul
push
int3
sub
es
push
pop
mov
movsl
pop
js
test
std
addb
imul
cmp
inc
repnz
push
stc
idiv
mov
movsl
repnz
sti
pushf
int3
in
jno
out
mov
rcrl
leave
shlb
fbstp
add
adc
addr16
in
mov
into
test
call
cmp
jmp
ds
out
scas
jl
cmp
js
mov
jbe
sbb
pop
mov
mov
mov
adc
js
xor
inc
pusha
fisubl
out
fisubs
add
out
dec
pop
js
shll
fdivr
cwtl
js
dec
sti
ds
popa
sub
into
add
sub
fs
or
mov
lea
movsl
sti
sub
cltd
js
data16
call
enter
adc
scas
cmp
sub
icebp
icebp
bound
loopne
call
jecxz
repz
xor
test
push
aad
adc
mov
inc
ret
mov
mov
jle
fstpl
mov
jecxz
ljmp
fsubs
repz
flds
mov
into
push
cmp
cmc
stos
mov
cwtl
dec
test
cwtl
ss
mov
cmp
mov
aam
clc
sbb
orb
cmp
scas
int3
adc
aam
xchg
imul
jmp
sbb
addl
pop
sbb
gs
std
pop
outsl
cmc
fcmovnu
movsl
gs
adc
test
data16
popf
negb
loopne
addb
imul
jno,pn
xchg
jp
sahf
cmpsl
loop
xchg
mov
push
or
mov
push
mov
mov
cmc
pop
jb
mov
and
xchg
int
in
loopne
sahf
addr16
adcl
popf
outsb
push
push
je
sarl
jb
sbb
push
out
add
jnp
sub
in
pop
lods
xchg
jnp
xchg
fisttps
pop
xor
shrb
cmp
sti
adc
sub
test
fs
lret
jecxz
mov
and
rcr
mov
xchg
dec
mov
cltd
sub
dec
lds
outsl
jmp
sbb
xor
loop
stos
jle
fs
test
dec
adc
xor
test
mov
mov
nop
loopne
ja
movsl
je
ret
mov
popl
sbbb
sahf
mov
fwait
mov
outsb
and
mov
lcall
pop
pop
cmp
add
mov
xor
sub
leave
cmp
cmp
fldenv
gs
dec
mov
pop
mov
outsl
pop
xchg
sub
in
stos
fwait
add
mov
ljmp
ficompl
sbb
test
or
pop
mov
add
mov
xchg
cmp
xchg
fimull
out
aam
sbb
mov
iret
lea
cmc
aaa
cld
rclb
pop
cmp
jl
cs
xor
xchg
arpl
orb
out
mov
test
xor
inc
push
push
add
aaa
or
daa
imul
adc
dec
das
push
xchg
shrb
scas
mov
jb
test
pop
xor
and
stos
stos
inc
xor
cltd
in
addr16
fld
aad
inc
lcall
push
cmp
aad
enter
sti
cmp
scas
add
push
popf
int
or
test
or
mov
shrd
add
jmp
push
fsubrl
dec
or
mov
adc
aaa
cli
adc
imul
sub
sub
and
jne
jg
add
rcrl
xorl
adc
pop
mov
push
test
rorb
inc
cmp
or
fiadds
xchg
add
add
int3
mov
in
pmovmskb
mov
push
push
pop
and
es
call
cmc
and
mov
jmp
xor
fmull
gs
pop
lock
jecxz
adc
and
push
fldenv
xchg
js
lds
ds
xchg
xchg
fsub
jp
sbb
rcll
rcll
popa
add
movsb
xchg
lea
add
sbb
daa
stc
popf
cli
mov
dec
iret
mov
loope
bound
pop
sbb
ja
fldl
imul
inc
push
fsubl
shr
adc
cli
sar
xchg
loopne
xchg
and
sub
ja
inc
shr
movl
in
stos
ds
add
mov
shrl
lds
adc
jp
scas
outsl
lret
fmul
fdivl
xchg
lcall
dec
gs
xor
mov
sbb
jb
mov
mov
ja
repnz
push
lods
lds
into
and
jnp
push
rep
jae
pop
out
ljmp
mov
pop
inc
pop
jle
push
pop
andb
imul
pop
into
inc
mov
mov
rcll
out
jns
mov
or
sbbb
inc
aam
push
js
jnp
out
xor
fists
test
hlt
test
push
push
cmpxchg
inc
xchg
and
notb
fildl
aas
imul
lret
or
out
ret
sti
popf
dec
adc
aaa
push
gs
iret
push
out
xchg
ficoml
es
lea
jbe
stos
rclb
jg
lret
inc
xchg
add
enter
test
cmp
call
mov
int3
mov
sub
or
insb
call
fnstsw
stc
cmpsl
or
xchg
out
pop
push
xchg
jbe
push
scas
rorl
cmp
arpl
cmpsl
mov
jg
inc
and
outsl
scas
clc
loop
test
sbb
add
xchg
aad
cmp
ficoms
stos
mov
push
lea
cmpsb
popf
dec
rorl
cmp
loop
pop
pop
mov
insb
mov
imul
es
je
in
movsb
inc
mov
mov
divb
jg
lods
add
ficomps
jb
mov
xor
ret
lahf
loop
xor
push
mov
inc
push
sahf
xchg
fsubrl
jg
fists
inc
ss
dec
lods
int3
movsb
adc
push
xchg
jb
addl
add
cmpsb
dec
ljmp
mov
orl
rcll
xchg
jo
lds
and
jae
lahf
and
test
shl
cld
push
xchg
fbld
or
test
mov
aad
jbe
data16
sub
push
das
add
sub
movsl
xor
mulb
sub
mov
arpl
push
sar
jmp
pop
ljmp
adc
xchg
sbbb
cmp
cmp
mov
mov
lcall
daa
sub
pop
ss
and
cmc
xchg
test
aas
jmp
pop
mov
jle
mov
fimull
add
cmc
inc
fcompl
das
dec
sbb
mov
popf
movsl
inc
push
cld
xor
sahf
pop
test
mov
lret
pop
mov
push
jne
pop
sub
lcall
sub
sbb
gs
fistpl
dec
insl
rcrb
xchg
jns
push
xor
addr16
jge
rorw
ret
nop
xor
jo
fucomi
xorl
shrl
or
aas
pop
push
test
popa
mov
lret
push
sbb
sti
mov
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
lds
push
adc
aaa
cli
adc
aaa
and
jp
mov
dec
addr16
jb
or
lea
jmp
adc
insl
jmp
or
inc
loope
add
mov
push
xchg
mov
jecxz
adc
mov
pop
jnp
inc
repz
cmp
cmp
test
loopne
pop
repz
fidivs
insb
sbb
aad
dec
test
or
lea
push
xor
fucom
sbb
inc
mov
xor
popa
mov
mov
jno
xchg
mov
push
add
cmp
sbb
out
ljmp
addb
test
xchg
gs
push
je
or
pushf
mov
pop
mov
out
cmp
lock
enter
in
and
jg
insb
jno
dec
sbb
xchg
pop
shrb
dec
out
aad
cs
mov
mov
int3
pop
shl
repnz
out
mov
jns
gs
mov
sub
jae
push
pop
xchg
loopne
mov
fdivrl
pushf
sarb
call
xchg
pop
and
fsubrp
cmp
sub
adc
add
out
or
loopne
sti
insb
lock
mov
mov
jo
int3
xchg
iret
int3
dec
int3
subb
push
loope
in
sbb
call
das
popf
mov
inc
fs
mov
rcrl
lea
jmp
mov
das
push
insl
mov
gs
mov
mov
sub
lods
jb
rcrl
cwtl
mov
cwtl
xlat
scas
int3
cld
notl
and
out
aas
xchg
test
dec
rorl
movd
aas
inc
stos
push
jecxz
xlat
aaa
dec
cmp
sbb
shlb
pushf
ljmp
fbstp
push
ret
jno
or
in
stc
xchg
mov
cmc
shl
or
nopl
inc
mov
xor
xor
fst
or
xor
push
shll
dec
jmp
ss
sub
dec
inc
mov
les
popa
add
mov
mov
sbb
nop
sub
imul
call
jnp
hlt
int3
mov
and
cld
and
cli
cmp
repz
pop
dec
push
arpl
cmp
add
xor
mov
and
add
lret
das
stc
push
out
aam
push
js,pn
arpl
out
mull
mov
cmp
jp
ret
inc
push
cmp
jge
push
jne
imull
mov
sub
inc
add
outsb
scas
push
dec
ret
cmpsl
and
lret
repnz
push
xchg
xor
pop
test
dec
fsubl
xor
repz
divl
jbe
pop
dec
add
std
mov
xchg
jecxz
ljmp
int
adc
ds
loop
leave
inc
in
mov
repz
adc
mov
add
dec
or
lea
jmp
enter
imul
and
das
dec
cltd
gs
aam
dec
or
inc
xchg
mov
cmp
push
imul
dec
mul
or
loopne
adc
sub
ja
insl
data16
repz
mov
mov
pop
cs
mov
stos
test
sbb
add
push
xchg
minps
retw
push
lret
add
push
les
fwait
jo
mov
repnz
sti
pop
pop
outsl
insb
mov
std
ja
xor
lahf
mov
enter
mov
pop
movsb
pop
dec
push
or
fsubrp
cmpsl
dec
mov
pop
or
mov
scas
mov
add
xorb
sub
sbb
fidivl
jno
sahf
adc
xchg
movsl
fwait
add
xor
inc
mov
cmp
mov
mov
lret
fisttpl
adc
test
or
ljmp
test
mov
cmp
popa
les
dec
sbb
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
mov
xchg
ret
cmp
adc
cli
adc
pop
dec
sbb
lods
xor
aas
into
and
dec
inc
fnstenv
push
fmull
aam
ljmp
lcall
call
leave
outsl
adc
sub
or
push
xchg
ret
lret
popf
je
pop
cmp
mov
cmp
xor
jns
sub
push
dec
mov
push
inc
sti
call
divb
xchg
cmp
xor
mov
pop
lret
insb
mov
jmp
in
sti
mov
jns
fs
sub
inc
jecxz
sub
push
in
or
pushf
xor
repz
jmp
ljmp
pop
in
pop
jl
popa
out
cli
daa
sub
rcll
lahf
orl
ljmp
inc
xor
inc
mov
popa
dec
cmp
divl
shll
cmp
hlt
jnp
lahf
add
xchg
pop
xor
sahf
mov
jns
mov
lods
loopne
outsb
fld1
je
jmp
adc
hlt
xlat
mov
cmp
adcb
or
xchg
xchg
mov
scas
jg
fs
mov
jecxz
mov
add
icebp
scas
mov
mov
aam
data16
xchg
mov
inc
xchg
and
cmp
loope
test
pop
sbb
das
test
jo
jecxz
xchg
mov
mov
sbb
add
adcl
mov
push
jp
cmp
inc
push
inc
sbb
movsl
mov
inc
pop
add
mov
sub
icebp
movsl
jp
stc
and
mov
xchg
out
lret
and
push
xor
pop
dec
test
inc
bsr
ss
add
mov
clc
xchg
test
je
ret
jmp
sarb
aaa
jecxz
or
adc
xchg
mov
inc
xor
mov
push
js
aam
shll
popf
imul
inc
push
addr16
xor
sbb
adc
or
mov
cmp
cli
inc
jnp
out
js
ds
cltd
mov
rolb
into
das
fdivs
sub
xor
lds
or
adc
lods
leave
jle
sahf
push
mov
sbb
or
pushf
dec
pop
dec
loop
push
jb
dec
fidivrl
std
cli
cmpsb
xor
adc
in
mov
cwtl
std
stos
lds
pop
inc
ret
push
nop
cmp
scas
shr
jge
and
or
xchg
imul
inc
lcall
mov
mov
pop
xor
mov
adc
add
imul
cmpsb
mov
pusha
dec
dec
dec
xor
push
popa
jl
test
inc
jb
pusha
xor
push
out
dec
sbb
pop
sbbl
shr
dec
cmc
sub
in
movsl
lea
std
data16
enter
mov
sbb
in
std
lea
sahf
notl
push
mov
push
pop
push
push
dec
sbb
cmp
lret
lret
in
sub
xor
sbb
mov
popf
jecxz
aas
xor
push
popf
push
mov
gs
push
ret
test
popa
push
btr
imul
rcr
arpl
movsb
imul
add
aaa
sub
les
sar
icebp
jne
mov
outsb
ret
rclb
and
push
push
enter
lock
pop
jge
add
inc
loopne
dec
cmp
test
or
scas
out
int3
jnp
mov
or
insb
xchg
push
js
pop
lea
sbb
adc
push
data16
lods
xor
mov
sub
mul
sub
imul
jge,pt
mov
and
leave
xor
and
lods
adc
fucomp
idivb
cli
jo
jae
push
stos
fdivl
mov
jne
ljmp
sub
rorl
scas
sbb
cmpsb
push
dec
dec
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
or
adc
cli
adc
push
dec
inc
out
pop
ror
mov
test
ja
jae
cs
in
gs
jge
fidivrl
mov
adc
scas
push
and
out
xchg
or
mov
paddusw
xchg
cmpsb
dec
popf
fwait
jp
xadd
pop
out
mov
mov
mov
lret
lds
popf
or
aaa
popa
push
xchg
stos
cmp
push
jae
es
cmpsb
dec
jae
mov
ja
dec
jb
pop
add
sbb
icebp
cwtl
sbb
sub
shrl
push
adc
adc
nop
push
xchg
out
pop
mov
push
stc
pusha
jg
or
xchg
lds
lret
xor
loop
ret
lea
push
inc
cmpb
stc
cmp
rcrl
lods
jnp
adc
jl
pop
js
dec
lret
xorl
dec
sbb
sub
pop
insb
pop
test
mov
dec
or
inc
movsl
mov
andb
inc
mov
inc
mov
sahf
jmp
test
ds
and
jmp
dec
jmp
sbb
sbb
pop
nop
mov
ljmp
dec
push
pop
or
scas
or
pop
and
aam
xchg
push
or
xchg
push
scas
xlat
add
mov
fimuls
aaa
sub
add
insl
aas
repz
mov
inc
cmpsb
xor
mov
mov
jmp
lret
pop
pusha
xor
insl
dec
and
aaa
fs
dec
mov
xor
aad
xchg
icebp
dec
cmp
cmpsb
or
out
push
mov
ret
jecxz
xchg
fildl
xchg
les
xchg
cmpsb
loopne
insb
in
int3
daa
xchg
cmc
xchg
das
push
aaa
ficoms
dec
dec
sub
dec
std
outsb
pop
loopne
lcall
test
imul
hlt
dec
or
and
pop
repnz
inc
int3
pop
scas
dec
adc
jno
lock
xchg
mov
fistpll
fdivrs
stc
loopne
xchg
lahf
mov
movups
and
and
je
stos
and
repnz
add
inc
out
pop
shll
test
notl
sub
dec
xchg
inc
not
mov
push
shll
adc
pushf
add
jb
aaa
imul
test
inc
cmp
cs
inc
cltd
das
hlt
sarl
lret
mov
leave
dec
stos
jnp
dec
xchg
in
inc
mov
shlb
popf
xchg
cmp
pop
dec
fmull
shrl
mov
dec
mov
xor
out
stos
pop
in
arpl
movsl
xchg
jo
mov
sbb
dec
pop
mov
pop
cwtl
push
cmp
movsl
repnz
sbb
mov
subb
popa
mov
dec
inc
dec
int
repnz
pop
mov
pushf
mov
cld
add
iret
fsubs
xchg
mov
mov
jns
out
add
add
sahf
and
xchg
jp
in
lret
mov
sbb
or
mov
pop
stos
mov
and
pop
xchg
daa
movsb
daa
sub
fdivp
sbb
pop
data16
cmp
data16
xor
sarb
sarl
mov
int
in
rcrl
xchg
jne
xor
les
aaa
stos
outsl
imul
leave
iret
mov
xor
mov
iret
sub
mov
cmp
jno
mov
fstpt
sbb
or
xchg
xlat
lret
aam
push
es
cmp
or
lods
leave
decb
enter
adc
push
idivl
dec
mov
repz
jnp
pop
lods
shl
sbb
jo,pn
int3
xor
jg
mov
ss
push
jg
arpl
jb
incb
mov
push
inc
repnz
jmp
jbe
aam
jmp
leave
dec
jge
cmp
js
mov
mov
and
ss
ljmp
stos
mov
add
add
and
or
js
mov
sub
adc
aaa
cli
adc
cmp
popf
fs
push
lahf
mov
je
in
scas
lock
mov
data16
xchg
and
dec
and
sub
xor
and
push
test
jmp
mov
cmp
jno
or
xchg
shlb
lods
dec
ljmp
push
lahf
ficoms
xor
add
iret
xor
push
mov
lcall
and
cs
mov
pop
push
je
push
and
test
scas
cltd
hlt
andl
sub
dec
add
mov
mov
jp
iret
subb
jle
insb
aas
mov
cmp
js
jmp
mov
test
xchg
imul
add
in
mov
adc
inc
sub
adc
aad
jg
popf
inc
into
je
jae
or
dec
inc
jecxz
sbb
mov
push
scas
pop
outsl
jo
pop
cwtl
fnstcw
mov
out
jns
clc
cltd
test
inc
dec
das
mov
lcall
sub
inc
push
ffree
cli
sti
les
loope
daa
mov
xor
sub
loop
xlat
fsubl
outsb
pop
mov
inc
pop
inc
movsl
repnz
fwait
pop
push
test
aad
call
jne
add
add
enter
pop
je
xor
inc
dec
je
sti
mov
pop
sub
ror
add
mov
jns
cmp
sub
fidivrl
inc
cmp
sub
or
adc
mul
les
push
xlat
mov
cld
movsb
push
and
lea
and
cmp
push
dec
clc
decb
leave
lds
clc
in
mov
js
shlb
nop
enter
mov
shl
sbb
xlat
adc
aaa
or
jp
inc
or
cs
fists
adc
cmp
ret
das
pop
cwtl
idivl
jmp
cmp
arpl
or
pop
pop
imul
stos
lcall
out
cmp
jae
dec
or
sbb
pop
push
adc
je
sahf
jne
imul
repnz
insl
adc
mov
xlat
sarb
cltd
pop
mov
xchg
cmp
repz
pop
loop
jb
mov
ret
mov
out
insb
fsubrl
jmp
shr
popa
mov
inc
push
cmp
cli
imul
add
lock
ja
jg
xchg
jne
jbe
inc
dec
mov
pop
cmp
addr16
mov
push
xchg
nop
lods
ret
dec
pusha
clc
adc
xor
rolb
push
test
mov
getsec
outsb
xchg
cmpsb
pop
push
outsl
dec
stos
loop
add
push
ret
or
out
xchg
sbb
ficomps
xor
test
lea
xchg
mov
cmpb
aaa
mov
pop
sub
inc
mov
jns
insb
lahf
roll
sub
cmp
cmp
inc
mov
xor
fdivl
sbb
inc
pusha
adc
sub
mov
sbb
int3
gs
inc
pop
ret
leave
add
fdivs
push
mov
sbb
mov
pusha
std
movnti
xchg
mov
neg
test
call
sbb
stc
adc
pop
jg
and
add
ret
std
sbb
mov
gs
jle
scas
pushf
mov
aad
ja
aam
xor
mov
lock
sub
outsl
mov
mov
sti
test
inc
aad
cmp
and
dec
in
inc
movsb
sub
call
lret
inc
daa
ret
jb
dec
shrb
xor
daa
dec
aam
add
xor
sarb
cmp
ljmp
ret
jl
sub
push
lds
or
stos
sbb
mov
and
pop
aad
push
xchg
jne
push
xor
fdivl
cmp
movsb
lea
or
ljmp
adc
mov
and
mov
xor
push
mov
std
xchg
inc
je
cmpsl
addr16
or
cmp
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
fdivl
test
adc
aaa
cli
adc
pop
icebp
jecxz
ljmp
jmp
and
push
or
sbb
cmp
vpsllq
out
mov
push
push
push
push
dec
repz
std
call
mov
xchg
sarl
hlt
rcrb
shlb
cwtl
add
call
push
push
bound
mov
sub
and
sub
sbb
cmp
test
int3
add
imul
mov
arpl
outsl
repz
jmp
jge
int
jo
out
xlat
fbstp
bound
inc
sbb
pusha
adc
inc
sti
sbb
hlt
mov
in
xchg
push
and
jl
pop
inc
xlat
inc
insl
push
mull
adc
subb
jl
xchg
mov
adc
and
or
sub
divl
int
cmp
push
mov
int
sti
dec
adc
sbb
outsb
push
mov
adc
pop
rol
lds
lock
lds
xor
cmc
pop
in
iret
flds
mov
ljmp
mov
cmc
mov
xchg
test
sbb
jne
repnz
outsb
sbbb
es
sbb
push
inc
in
leave
out
stc
fildll
and
roll
mov
sti
lock
push
scas
popf
shl
fidivrs
sub
jae
pop
mov
cmpsl
cmp
sbb
mov
sbb
adc
stos
add
sbb
stos
pop
pusha
adc
ret
pop
xor
cltd
sbb
cs
add
sub
in
xchg
xor
adcb
loop
call
mov
aaa
dec
pop
outsl
mov
pop
mov
popf
mov
mov
fnsave
test
dec
inc
and
sub
jmp
xor
mov
ss
scas
fcmovnu
test
or
or
inc
jp
lea
mov
xchg
cmc
sub
mov
loopne
scas
lret
loop
mov
out
jmp
dec
dec
scas
jecxz
cmp
shll
xchg
adc
hlt
imul
cs
mov
arpl
ss
insb
lods
push
imul
sbb
cmp
xchg
and
and
test
rol
mov
into
ret
rolb
mov
pop
jge
jmp
aas
mov
cmpl
outsb
push
sbb
out
pop
jg
rorb
push
xor
shl
push
outsb
push
sbb
add
lret
dec
inc
pop
orl
ja
aas
daa
sti
cmp
jp
sub
loopne
in
sbb
jbe
sub
adc
fildll
pop
dec
pop
adc
fcompl
iret
scas
xchg
sub
inc
push
push
dec
leave
repnz
mov
push
fildl
push
scas
loop
pop
stos
mov
sahf
aaa
call
in
and
mov
sub
cmpsl
xor
je
add
xor
lock
dec
jbe
add
jb
push
push
addr16
inc
jecxz
push
dec
lods
cltd
in
ret
mov
pop
inc
mov
mov
jp
rclb
orb
add
daa
adc
fmull
mov
cmp
repnz
pop
ss
clc
pop
outsb
mov
les
inc
mov
clc
gs
pmulhuw
test
xor
loopne,pn
sub
add
cmp
or
enter
mov
add
adc
mov
push
cmp
fwait
add
test
push
push
nop
scas
xchg
insb
xchg
or
jb
adc
ret
cmpsb
vandnpd
lds
sbb
fisubrl
add
aam
jbe
mov
bound
pop
inc
push
mov
add
add
test
aad
sub
adc
add
lret
sahf
jbe
daa
jbe
dec
lods
in
pop
sbb
sbb
ss
fmuls
mov
dec
add
xchg
cli
cmpsb
clc
pop
cwtl
sub
xor
mov
loope
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
sbb
sarl
xchg
cli
adc
adc
fsubrl
jl
pusha
mov
jbe
dec
or
adc
mov
in
xchg
ja
jnp
ds
nop
inc
jno
push
mov
mov
xlat
sub
out
pop
pushf
mov
ljmp
icebp
mov
iret
push
jecxz
inc
nop
xchg
movsb
jmp
in
imul
in
call
stos
subb
jns
movsl
mov
lock
push
hlt
enter
inc
rcrb
call
out
jns
ror
test
xchg
xchg
imul
push
lods
pop
cmpsl
inc
leave
add
lret
lods
xchg
xor
pop
push
mov
adc
xor
mov
add
mov
aas
imulb
push
test
popa
popf
push
mov
xchg
push
inc
cmp
xchg
pop
cltd
scas
clc
inc
cmp
sbb
push
call
shrl
rcl
jno
gs
push
addr16
lret
sbb
jo
inc
xchg
out
leave
xchg
subb
xor
or
jle
push
dec
and
mov
and
jnp
cmpsb
jns
pop
jmp
in
xor
mov
fsubs
leave
int
dec
add
mov
cmp
scas
flds
dec
mov
pop
sarl
inc
cmpsb
stc
xchg
add
cli
test
cmpsl
les
loope
mov
stc
arpl
insb
test
jno
lea
je
lods
mov
or
imul
push
mov
xor
aaa
dec
dec
gs
js
sti
sub
mov
sbb
lea
fldenv
enter
rorl
sbb
js
cmp
xchg
inc
push
incl
jae
test
dec
ficomps
jo
test
push
lods
cmp
cmp
push
xchg
lea
xor
ljmp
das
xchg
imul
pop
and
mul
mov
cmpsl
rorl
xor
in
rcrb
pop
jne
lea
addr16
mov
inc
xchg
or
daa
mov
insb
pop
std
xchg
push
imul
push
push
call
loop
lods
xchg
jecxz
ret
mov
outsb
clc
movsl
call
mov
mov
and
xorl
incb
mov
add
mov
es
out
jmp
arpl
cltd
in
fcomi
fnstsw
stc
push
stos
push
xchg
mov
arpl
into
xchg
xorl
cmp
or
ljmp
cwtl
add
cmpb
loopne
xor
bound
xor
lcall
imul
xor
scas
mov
cld
insl
repz
mov
sbb
lods
fstp
stos
mov
xor
push
jge
push
pop
pop
fwait
fwait
rclb
cmp
data16
mov
loop
xchg
xchg
in
cmpsl
test
loopne
push
sbb
into
push
ss
lea
pop
mov
xor
push
add
pop
ret
dec
out
lds
mov
mov
clc
pop
jl
mov
daa
mov
or
das
push
jo
push
pop
pop
jae
xchg
xor
sbb
inc
jecxz
loop
xchg
lret
loopne
push
and
lock
data16
mov
addr16
jg
xchg
pop
rcll
clc
jle
lcall
inc
test
pop
jle
int
xchg
push
cmp
ds
cmpsb
jo
xchg
jno
insl
repz
sbb
xchg
dec
scas
pop
sti
cmpl
or
or
sbb
sub
subl
sahf
or
mov
push
mov
scas
rclb
leave
bound
add
adc
fld
pop
addr16
movntq
out
lret
inc
mov
push
mov
aaa
imul
movsl
cmp
test
clc
std
stos
lds
es
pop
subb
stc
or
add
add
dec
add
add
ss
ds
xor
ret
push
xchg
jnp
or
adc
fldcw
and
subl
push
mov
mov
dec
pop
adc
xchg
andl
je
sahf
adcl
inc
mov
ss
mov
mov
mov
pop
mov
mov
negl
push
xor
adc
jno,pn
sub
inc
pushf
test
fwait
add
mov
sbb
or
mov
or
push
sbb
xchg
out
jmp
or
stos
jle
pop
cmpsl
int3
mov
repz
pop
and
int3
bnd
or
xchg
arpl
ds
out
out
lock
shl
out
shlb
and
mov
jnp
mov
pop
ljmp
ljmp
shll
push
push
inc
les
sbbl
arpl
jno
hlt
add
test
sarl
loopne
sub
push
xchg
lock
pop
jmp
adc
mov
adc
or
sub
mov
shl
pusha
inc
inc
mov
out
pop
push
xchg
fldcw
data16
and
lods
daa
in
dec
out
adc
jb
lock
mov
cmp
inc
dec
or
adc
iret
ret
ljmp
fucomip
ja
xchg
dec
mov
cmpsb
dec
cmp
pop
push
mov
jb
push
lret
out
nop
test
std
arpl
clc
fwait
push
sub
ret
insb
jae
shlb
mov
daa
push
adc
jp
sbb
lea
insl
xchg
push
sub
repz
andb
inc
ret
dec
pop
fs
jne
cmp
lods
pusha
pop
daa
sub
and
pop
jne
pop
and
mov
fidivrs
xor
mov
fdivrl
cwtl
cld
test
mov
bound
clc
mov
dec
mov
dec
sbb
sbb
xchg
add
ljmp
pop
cli
sbb
test
lds
jl
cmpsl
mov
lret
jo
sbb
imul
mov
out
gs
adc
xchg
call
repz
inc
fcompl
jl
lret
push
mov
test
pop
fists
outsb
mov
pop
outsl
cwtl
mov
lcall
add
sub
or
push
xchg
adc
xchg
lock
push
enter
xchg
push
sbb
mov
into
add
fidivrs
lcall
dec
sub
push
adc
pop
cmpl
dec
pop
js
mov
notb
leave
cmp
das
lret
repz
and
pop
shrl
ds
loop
xor
loope
add
sub
divl
pcmpgtb
je
and
pop
mov
xchg
pop
xor
mov
sbbb
cmp
lret
setp
inc
inc
push
mov
xor
enter
test
pushf
mov
fdivs
cmpl
xchg
add
push
mov
loop
insb
lahf
dec
popa
movsb
push
lcall
das
inc
repnz
mov
adc
xor
adcl
xchg
mov
xchg
push
xadd
fdivrs
fadds
jmp
and
xchg
sbb
and
cld
mov
xchg
jbe
push
popa
fcoms
pop
xchg
xchg
imul
inc
xor
mov
xorb
mov
js
rolb
cmp
mov
inc
imul
add
adc
xchg
jne
repz
mov
xchg
sahf
jne
xchg
out
dec
add
in
sbb
loopne
dec
pop
sti
mov
sub
and
rcl
jnp
movsl
dec
xor
es
and
pop
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
mov
xchg
fisttpl
adc
xchg
cli
adc
scas
jno
je
dec
mov
aas
pop
push
das
orl
pop
das
xor
pop
cltd
out
arpl
jge
push
ss
aad
clc
mov
push
imul
rolb
sbb
pop
dec
cmpsl
mov
icebp
loop
bswap
jl
jmp
pop
loope
outsl
jbe
popf
bound
add
or
jo
dec
sub
xlat
mov
fs
cmp
xlat
xchg
mov
xor
mov
sahf
cmp
add
loop
fcomps
arpl
jl
mov
and
xor
imul
fldenv
or
sbb
outsl
dec
adc
pop
xchg
dec
mov
ds
sbb
dec
fstp
notb
cmp
adc
and
repnz
aaa
or
adc
jp
mov
aam
and
xchg
pop
clc
or
mov
test
mov
mov
repz
shrb
adc
loop
sbb
pop
repnz
jmp
cwtl
adc
cs
ljmp
sub
jp
js
mov
lea
in
jecxz
pusha
cmp
xchg
sbb
sub
ds
scas
add
jo
and
insl
flds
dec
enter
jge
out
mov
push
insl
push
jno
mov
mov
mov
mov
lds
cltd
popf
push
jbe
js
loop
dec
test
clc
or
and
mov
ljmp
lahf
pop
xor
jmp
stc
stos
mov
ror
mov
inc
pusha
cmp
inc
inc
or
cmp
adc
pop
ret
inc
sub
in
sub
repnz
jbe
imul
add
and
inc
repnz
mov
push
cmp
leave
test
pop
inc
test
mov
in
sti
sahf
xchg
fidivrl
xlat
xchg
scas
leave
lcall
pop
push
xor
fistps
insb
sbb
clc
mov
fsubp
fwait
jns
std
sbbb
xlat
mov
arpl
call
adc
adc
add
mov
jno
and
pusha
mov
in
push
movsb
popf
sahf
mov
mov
cmpsl
filds
jecxz
xor
inc
mov
gs
push
xor
mov
mov
and
pop
mov
arpl
push
jp
xchg
or
scas
imul
mov
test
gs
xchg
or
dec
out
mov
or
mov
lahf
insb
jno
test
cmp
stc
popf
sbb
cmpl
addr16
add
int
adc
push
sbb
clc
xor
xor
add
lock
jle
in
test
dec
or
jbe
aad
lds
inc
add
lret
push
dec
dec
sbb
sbb
push
add
shll
cmp
jl
cmp
and
push
je
scas
cs
sub
cmp
mov
jg
sahf
cli
mov
jno
popf
loope
inc
xchg
popa
jno
imul
jnp
or
cmpb
pop
pop
xor
daa
mov
js
sbb
imul
lock
mov
add
jmp
mov
cmp
inc
in
int
dec
xchg
xlat
mov
test
jle
dec
xchg
ja
popa
es
mov
sub
cmp
test
std
pushf
inc
push
sub
dec
lock
cli
nop
fisubrs
push
push
in
xchg
test
ret
jo
pop
cmp
cmp
aad
add
mov
xor
sahf
js
adc
setge
insb
imul
enter
addl
movsl
clc
lcall
sbb
add
pop
push
add
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
inc
cld
dec
jg
clc
adc
je
sbbl
es
int3
das
cmp
xor
shr
sbb
ret
mov
or
jae
cld
loop
arpl
mov
mov
mov
cmc
mov
mov
iret
xchg
adc
ljmp
xor
and
and
lods
jno
push
sub
test
push
in
adc
hlt
pusha
cltd
pop
sub
mov
ljmp
xor
cwtl
pushf
push
inc
pop
or
mov
cmp
sti
push
xchg
pop
xchg
jecxz
jmp
xor
lcall
adc
testl
fistpl
add
test
pop
mov
outsb
mov
inc
shll
xchg
dec
fidivs
pop
dec
or
dec
inc
fcoms
mov
add
scas
ljmp
scas
in
int
repnz
lret
out
add
xchg
cmp
jle
rol
repz
fs
push
cmpsl
jb
push
and
incb
mov
mov
push
out
xchg
jmp
and
mov
ret
dec
and
push
xor
bound
xor
xchg
lret
pop
int
out
and
mov
ss
test
pop
fwait
cmpsl
and
mov
div
xchg
fs
shr
xchg
xlat
lds
popf
xor
cmp
jb
je
jb
mov
xchg
movsb
incl
or
push
adc
inc
out
pushf
in
mov
sarb
push
fdivs
fs
inc
scas
stc
lcall
push
mov
insl
movsl
lods
hlt
test
xor
outsl
or
leave
xor
insl
add
adc
sti
push
add
and
xor
popa
aas
cli
lcall
xchg
and
sbb
jmp
and
cwtl
in
mov
and
loop,pn
sub
les
xchg
mov
popa
mov
lcall
cld
sbb
xchg
mov
out
jmp
add
mov
es
pop
adc
pminsw
cmp
pop
add
test
js
hlt
push
xchg
mov
adc
jle
jae
xchg
xchg
in
jbe
xor
inc
push
jo
xchg
or
fcom
fadds
sbb
sarb
cmp
push
fucomi
sub
std
cli
push
iret
mull
outsl
clc
pop
ss
cmp
push
add
push
enter
arpl
inc
dec
data16
in
sbb
jne
cmp
mov
sbb
dec
jecxz
push
imul
mov
xor
jae
and
mov
and
imul
pop
push
pop
add
jbe
cmp
out
pop
sub
dec
adc
fldcw
ret
sub
mov
repnz
pop
frstor
and
int
jmp
push
mov
adc
add
stos
jg
mov
sub
out
jmp
lcall
mov
icebp
std
mov
movsl
dec
leave
adc
cmp
lea
dec
jbe
in
pop
mov
inc
lock
and
aam
mov
push
arpl
pop
iret
fst
xchg
cmpsl
pop
negl
out
xchg
add
nop
jne
mov
lcall
lock
test
sbb
inc
push
xchg
fidivl
xchg
xchg
xchg
cs
adc
popf
test
sti
and
adc
jno
cwtl
push
push
jae
aad
hlt
loope
pop
dec
and
scas
nop
sub
ficoml
insl
addl
cmpsl
xchg
das
xchg
enter
push
nop
push
fimuls
nop
nop
push
fwait
mov
out
shll
leave
mov
xlat
sub
and
xchg
nop
iret
scas
jg
cmc
daa
sub
in
pop
xor
and
dec
mov
cs
cmp
ret
in
push
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
mov
xchg
cli
adc
pop
loopne
test
push
push
sub
and
jge
push
pop
add
int
jbe
dec
and
add
daa
mov
data16
aad
inc
add
and
xchg
ret
lods
out
rolw
xor
adc
adcl
into
pop
insl
arpl
insb
cmp
gs
pop
pop
mov
lahf
mov
fcmove
in
arpl
cmp
add
push
gs
lea
pop
dec
aas
jns
test
subb
sub
dec
pop
movsl
loope
cld
sub
xchg
imul
pushf
outsl
jg
inc
lret
les
out
push
jmp
popa
add
outsl
mov
xchg
or
movsl
sbb
ret
add
lahf
add
outsb
fwait
push
mov
dec
inc
pop
cmpsb
sub
call
pusha
out
and
pop
mov
push
xor
jae
adc
and
push
push
dec
popf
jp
inc
sti
fdivs
or
popa
int
es
or
out
sub
add
repz
cmpsb
xchg
aad
ret
idivl
cli
cltd
loopne
sbb
xchg
insl
or
adc
mov
jmp
les
lods
push
push
stc
cmp
rcrb
mov
popf
cli
adc
lock
aas
jae
adc
inc
out
cmp
cltd
leave
scas
adc
xor
sub
jo
clc
rorb
lcall
push
enter
xchg
imul
test
cli
dec
mov
jbe
inc
jecxz
push
dec
sahf
dec
mov
mov
cmp
cmp
aaa
inc
pop
xor
adc
insb
xor
ud1
inc
in
push
call
mov
fadds
adc
das
sbb
pusha
xor
popa
mov
mov
push
insl
testb
push
jle
shll
jno
loopne
stos
ret
imul
jp
scas
xchg
inc
loopne
fwait
xchg
imul
rolb
aad
stos
pop
sbb
clc
fcmovnb
and
xchg
lds
inc
sbb
arpl
dec
xchg
sub
repnz
mov
out
imul
sti
leave
xchg
rorb
xchg
es
outsb
in
jg
push
mov
movsl
push
aaa
std
ja
push
sbb
sbb
adc
stos
into
cwtl
push
pop
icebp
icebp
scas
divl
gs
push
xor
cltd
loope
xor
cmp
mov
lret
jmp
repnz
xor
adc
sti
mov
adc
xor
pop
int3
out
lods
push
aad
adc
inc
push
xchg
movsl
mov
xor
fcoml
lret
sub
mov
and
sub
mov
test
lret
add
cmp
dec
js
and
aas
push
push
sbb
add
or
out
push
pop
jg
dec
movsl
pop
lret
cmp
shrb
jnp
repnz
jno
in
sub
ret
push
pop
cld
sub
std
dec
cwtl
sub
push
mov
cli
cmpsl
imul
cmpsl
or
jecxz
add
mov
sbb
xor
jl
sub
lcall
xor
or
pop
dec
inc
sbb
outsb
or
test
xorl
cmp
ret
jmp
js
pop
inc
or
sub
sub
aam
jo
into
lds
xor
into
and
repz
daa
subl
jp
add
push
hlt
cmp
sub
push
mov
pop
inc
sbb
and
sbb
jle
mov
mov
iret
bsf
icebp
das
loopw
xchg
push
addr16
mov
shll
or
push
push
int
outsl
rcrb
xor
in
inc
lret
xchg
mov
xorl
dec
xchg
mov
push
jp
jmp
or
sbb
pushf
and
adc
mov
jno
cmpxchg
or
fists
jbe
sub
inc
cmpps
fadds
add
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
clc
adc
cmpsb
out
adc
push
pop
jo
aaa
out
push
mov
divl
jbe
daa
cmpsl
xor
sbb
lea
dec
jp
in
aad
imul
mov
mov
mov
aad
push
mov
fdivl
sub
lock
mov
mov
les
adc
jle
add
addr16
sahf
adc
ss
test
into
pop
int
xchg
jo
rolb
ss
sti
mov
push
fucom
outsb
call
jg
cmp
dec
mov
enter
std
sbb
mov
loope
inc
xchg
jbe
mov
insb
push
stos
sbb
addr16
jnp
into
pop
ja
or
and
and
mov
jl
mov
jnp
sbb
add
nopl
std
and
aad
loopne
out
enter
out
scas
push
loopne
cmp
adc
lods
subl
xor
cs
push
in
pusha
subb
insl
outsb
pop
adc
mov
cmpsb
mov
or
inc
push
cmp
test
notb
divl
aam
jb
leave
mov
jmp
lcall
sub
push
mov
adc
adc
pop
test
mov
mov
outsb
scas
sbb
fsubp
sbb
pop
test
pop
iret
mov
popf
std
xchg
jle
dec
mov
push
and
daa
pop
repz
nop
mov
xchg
loopne
jmp
xor
mov
dec
or
mov
insl
das
in
test
push
push
lcall
pop
sbb
pusha
cmp
mov
insb
xchg
loop
pop
jae
mov
jno
jp
cwtl
ljmp
xchg
loop
sbb
cli
int3
inc
ds
cs
mov
bound
cmp
hlt
pop
dec
es
inc
inc
pushf
ret
and
enter
sti
jl
dec
mov
push
push
cmp
mov
movsb
orb
and
add
push
cmp
add
mov
dec
lea
les
aaa
pushf
add
jl
dec
dec
insb
dec
fldenv
fucom
pop
pop
xlat
dec
pop
mov
dec
dec
mov
adc
fimuls
ja,pn
inc
data16
dec
or
jp
ficoml
test
rclb
ret
lods
sub
aas
xchg
push
ficompl
cwtl
gs
xor
dec
sbb
sub
scas
add
pusha
sub
push
aas
sbb
mov
xchg
mov
roll
and
bnd
out
xchg
push
xchg
cltd
dec
jbe
jns
adc
push
push
sub
movsl
xchg
loop
int3
sub
ds
jbe
fwait
add
popf
push
or
mov
jbe
inc
mov
jecxz
adc
or
clc
les
add
or
adc
jmp
roll
shlb
xlat
imul
dec
mov
jb
mov
mov
xchg
cwtl
hlt
and
int3
jo
sahf
and
dec
ja
adc
pop
arpl
xor
sbb
cmp
pop
imul
xchg
sahf
xor
sahf
jno
push
pushf
adc
xor
shlb
repz
xchg
jl
adc
cmpb
xchg
in
fsubp
inc
add
push
jno
cmp
push
cmpsl
push
sbb
daa
and
xor
insl
test
sbb
add
repz
or
imul
dec
sbb
leave
fsts
sbb
not
imul
out
js
enter
xchg
mov
push
mov
jg
inc
jl
packsswb
loope
rclb
dec
jmp
test
lods
je
xchg
stc
rol
in
loop
add
mov
lock
pop
push
shrb
nop
sbb
test
or
inc
in
dec
mov
add
mov
xor
push
or
pop
pop
loopne
mov
and
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
fmul
push
lds
clc
adc
bound
popf
fiadds
and
lods
dec
mov
out
out
cmc
cmp
jbe
arpl
xor
pop
xchg
sti
rclb
mov
das
cltd
fsubrl
out
adc
jge
jb
int3
sub
das
xchg
mov
lret
push
cmp
push
xchg
sahf
pop
mov
adc
mov
pop
cli
daa
cwtl
push
mov
insb
mov
pop
stos
push
leave
testl
push
dec
scas
test
mov
add
add
cs
pop
bound
sub
decb
int3
jge
add
fst
sub
or
xchg
aam
or
pop
gs
lods
jno
push
cmp
dec
loopne
jge
adc
rolb
push
jo
incb
cltd
roll
cltd
lret
lret
add
mov
add
roll
dec
and
aaa
inc
mov
or
adc
popf
data16
mov
lods
les
arpl
add
arpl
dec
movsl
hlt
or
cmp
aas
out
lcall
fwait
movsb
mov
cmp
cmpsl
dec
out
cmp
mov
cmp
add
fs
inc
movsl
loopne
or
sarl
popf
aaa
sbb
cmp
outsl
xchg
jle
mov
push
in
xchg
iret
xchg
out
stos
add
faddl
std
jecxz
mov
sub
test
add
scas
mov
xor
add
xor
int
cmp
dec
cmpl
and
sub
cwtl
std
push
adcl
sub
mov
cmp
js
and
push
addr16
call
pop
imul
sbb
jo
faddp
int
mov
push
mov
rcl
clc
and
cmpl
pop
add
das
inc
or
mov
cmp
mov
push
add
js
push
imul
and
insb
insl
inc
in
push
push
into
ds
pop
ja
fwait
pmaxub
and
stos
mov
push
popa
xlat
jl
xchg
pop
mov
or
add
or
bound
push
jnp
mov
xor
fdivs
jae
pushf
xchg
mov
je
mov
and
jo
movsl
sbb
lods
and
aam
cltd
addr16
pushf
bound
or
lcall
mov
sbb
rcrl
bound
or
dec
cmp
pusha
cmpb
iret
jg
aaa
imul
mull
inc
popa
shrb
add
in
xchg
sti
or
scas
movsl
cmp
mov
inc
push
std
or
or
cltd
out
mov
inc
sub
mov
movsb
cwtl
mov
clc
sbb
inc
cld
pop
jns
jnp
pop
sub
or
mov
or
lock
mov
loop
or
pop
mov
xor
dec
sub
xchg
push
push
push
std
stos
cltd
mov
jae
shll
mov
sub
push
xor
ljmp
out
xchg
push
mov
ja
pop
or
aad
xchg
scas
test
dec
iret
xchg
popf
lret
jecxz
cmpsl
xor
bound
pusha
loopne
test
jo
sbb
cli
movsl
xchg
push
mov
add
lcall
mov
lea
or
fwait
add
dec
add
mov
jnp
fildll
popa
jbe
cltd
sub
or
cmp
jne
xor
lea
mov
cmp
sti
aas
into
and
fdivs
mov
jle
lahf
jae
fcomps
and
test
sahf
orl
dec
and
or
fadd
popa
push
into
pushf
push
or
jp
fstps
xor
or
fsub
ja
add
ja
outsl
das
xor
leave
xchg
mov
xor
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
clc
adc
mov
rcrl
outsb
loop
scas
clc
pop
cmp
fmuls
ficomps
and
jnp
stos
fs
in
outsl
ret
mov
pop
jmp
jne
stos
cmp
jge
enter
push
xor
mov
jne
cli
push
ss
scas
push
outsb
insb
rcrb
cmc
roll
add
mov
mov
sbb
jle
out
cmp
aam
loope
ljmp
or
cld
shl
jne
sbb
fildll
sub
mov
jb
movsl
lret
dec
mov
out
loop
push
sub
ja
mov
outsb
mov
pop
cmp
mov
call
adc
cmp
adc
das
mov
nop
mov
outsl
test
add
add
sbb
hlt
adc
dec
nop
lock
ljmp
pushf
insb
or
adc
int
push
shrb
das
cmp
mov
in
dec
cli
xchg
outsl
push
repnz
pushf
arpl
mov
fwait
cmp
stos
push
mov
repz
cmp
loop
iret
mov
jecxz
push
or
mov
aad
insb
dec
cmp
push
mov
cmc
out
fcmovnbe
data16
in
cwtl
mov
js
jo
fistpl
xor
test
push
push
push
cwtl
insb
and
cmp
std
in
test
xchg
xchg
test
ja
popf
imul
jg
sub
fadds
jno
add
sbb
aam
dec
add
mov
mov
jo
je
mov
sub
out
pop
notb
das
sbb
ja
xor
jle
or
dec
sarb
out
lea
in
pop
jl
aam
xchg
pop
jbe
bound
xchg
jns
cmpsl
cwtl
jge
xchg
incb
negl
fdivrl
mov
cmp
test
add
jbe
sbb
add
inc
js
in
adc
lods
adcb
push
xor
movsl
push
adc
fildll
mul
xchg
xor
ret
addr16
push
fisubrl
xchg
scas
mov
jne
pop
pop
fisubs
inc
pop
repnz
adc
sbb
pop
mov
pop
ljmp
outsb
fimull
push
jo
stos
push
sbb
icebp
frstor
mov
dec
inc
ljmp
pop
dec
je
jnp
sbb
mov
popf
xor
pusha
jb
push
jge
and
stos
adc
iret
cld
push
xorl
or
sub
or
mov
jns
cmc
xchg
push
push
adc
jecxz
xor
loope
cmpsb
dec
adc
add
lods
shlb
ljmp
mov
jbe
movsl
mov
push
shr
push
js
inc
xlat
ds
and
cmp
je
int
dec
xchg
pop
jge
scas
inc
sub
loope
mov
push
or
les
arpl
enter
dec
cmp
leave
into
js
roll
push
mov
jp
dec
rorb
imul
dec
adc
mov
cmp
adc
neg
mov
sti
movsl
pop
mov
addr16
lahf
cmp
aas
mov
xchg
fdivrs
pusha
cmp
inc
cltd
movsb
mov
inc
xchg
aas
cmp
das
push
adc
jmp
ljmp
cli
je
add
stos
xor
loop
or
pushf
mov
adc
mov
and
fidivrl
mov
ja
xchg
xor
stos
fiaddl
adc
push
xchg
mov
mov
add
dec
jno
xchg
mov
in
in
mov
aaa
mov
mov
dec
dec
cli
cmpb
cmpsl
xchg
mov
mov
jb
pop
add
inc
enter
add
inc
faddl
add
add
inc
fdivr
add
add
inc
aam
insl
add
mov
mov
jmp
and
mov
out
jno
mov
push
xchg
in
adc
jmp
xchg
shlb
pusha
adc
xlat
ret
repnz
or
call
aaa
imul
sbb
add
mov
das
icebp
jg
ja
add
sub
stos
adc
or
jbe
sbb
imulb
cli
pop
insb
loop
dec
push
fs
das
daa
hlt
sub
push
pushf
pushf
push
fwait
int3
cmp
push
mov
aas
xchg
mov
sbb
or
jbe
push
cmp
jae
xor
sbb
in
inc
mov
and
inc
std
pop
out
push
push
repnz
jne
xor
mov
xchg
mov
flds
fiaddl
js
shll
ds
mov
jg
and
and
movsb
mov
scas
jp
popf
adc
insl
aad
mov
cmp
movsl
fdivrl
jns
jns
loope
popf
xor
adc
ja
fwait
js
inc
cmp
mov
add
inc
dec
test
sub
add
or
cltd
sub
or
pop
out
xlat
xchg
push
mov
scas
jb
fbld
shrb
xorl
data16
jl
mov
cld
inc
movsl
xor
sahf
or
mov
sub
cmp
adc
std
xchg
xchg
sti
xchg
incl
and
xor
aad
jne
sahf
xchg
and
loopne
cmp
or
cltd
xchg
mov
xchg
sub
stos
cmp
jno
adc
pop
es
jmp
cmp
add
xor
cmp
xchg
outsb
gs
xor
cmp
jg
stos
mov
sub
movsb
mov
fsts
push
sti
mov
call
in
sahf
push
jbe
inc
xchg
shlb
mov
cmp
mov
sbb
cltd
and
in
sub
aad
mov
dec
mov
aam
or
dec
lahf
fiaddl
push
cmp
mulb
xor
call
notb
and
test
insb
fnstenv
fisttpl
scas
imul
push
addr16
mov
shl
mov
pusha
mov
fidivl
fisttpl
mov
add
mov
divb
sbb
mov
jb
jne
or
stos
mov
sbb
sbb
aam
mov
lods
push
leave
fisttpl
cmp
sub
jbe
jnp
sbb
fwait
ss
fidivrs
or
ror
mov
pop
jnp
inc
shrb
iret
dec
inc
or
mov
mov
ret
inc
adc
xchg
and
mov
add
jbe
mov
xchg
mov
jmp
mov
ljmp
add
roll
push
xchg
xchg
inc
adc
test
sbb
fs
dec
stc
inc
insl
das
sbb
adcb
xlat
inc
pop
loop
jle
sbb
cwtl
push
sub
pop
mov
ffree
pop
into
lea
je
pop
rcrl
movbe
mov
lcall
pop
lahf
adc
mov
xor
jb
arpl
xchg
data16
lods
sbbl
bound
sbb
cmp
xchg
adc
mov
lea
xchg
cld
pusha
es
in
mov
idivb
out
jno
jge
jge
pop
dec
and
jle
add
mov
xor
jmp
mov
aam
xor
fsubrs
push
call
sub
mov
cltd
test
push
mov
push
mov
inc
test
mov
iret
cmp
jmp
rolb
int3
pushf
aas
mov
adc
xor
popf
pushf
push
aad
dec
stos
test
xor
cmp
xor
lcall
add
ret
shr
dec
add
add
xlat
mov
xchg
stc
mov
mov
adc
fsubr
jns
push
sbb
mov
push
xchg
fsub
pop
dec
fsubrp
rclb
stc
ds
mov
xor
xlat
xor
push
pop
adc
repz
popa
mov
ds
addb
js
loopne
or
pop
es
xchg
inc
repnz
jns
cld
cs
out
inc
sti
and
cli
push
cmpsb
adcb
hlt
add
mov
mov
stc
inc
out
pop
rclb
lock
push
fistl
add
push
popf
shlb
ficoml
out
push
and
outsb
gs
xchg
cld
and
in
movsb
add
cs
mov
xchg
ja
fisttps
push
in
pop
or
outsl
mov
mov
sub
notb
enter
std
test
jl
gs
adc
ds
mov
add
jne
cli
pushf
mov
jne
sbb
aad
dec
es
cmpsb
jnp
mov
sub
and
leave
pop
jbe
shl
cmp
xor
inc
aas
add
or
in
pop
punpckldq
cmp
add
movb
in
aas
out
nop
out
push
pop
rolb
jnp
push
daa
fwait
inc
int3
or
jecxz
and
lods
lods
cltd
rcr
hlt
xchg
dec
out
stos
jl
mov
rcrb
stc
lcall
mov
insb
ret
icebp
insb
mov
lret
pop
pusha
lahf
sub
add
cmp
cmpsl
xchg
movsb
push
leave
sbb
orb
push
movsl
sub
jl
pop
aas
movsl
std
or
mov
hlt
push
push
mov
mov
mov
pop
and
js
inc
and
movsl
movsl
xchg
mov
push
xchg
mov
hlt
dec
xchg
sub
cmp
dec
add
out
sbb
mov
dec
ljmp
pop
cmp
test
hlt
cmp
adc
jbe
inc
in
aam
jbe
cmp
adc
mov
iret
cmpsl
clc
sub
mov
gs
dec
es
or
lret
and
xchg
pop
cmp
cld
pop
in
loope
test
stos
xchg
std
test
or
and
orl
or
cld
mov
arpl
fcmovne
ss
cli
mov
fists
mov
daa
xchg
incb
adc
pop
jle
ja
pushw
punpcklbw
jge
cwtl
and
aad
push
pop
pop
jl
inc
loope
inc
outsb
addb
or
out
in
lahf
je
mov
or
push
and
mov
push
dec
xchg
mov
dec
jl
sbb
ja
mov
push
movsl
push
stos
lcall
and
xchg
cld
icebp
xchg
push
push
push
lret
mov
mov
outsl
pop
pop
push
cmp
add
lock
out
jnp
daa
fstl
test
ljmp
aad
sbb
je
loope
fcmovne
ja
rcrl
inc
jg
mov
mov
aam
cltd
mov
rorb
push
rclb
rol
mov
lea
add
mov
subb
lahf
ret
adc
mov
xchg
cmp
addr16
xor
pop
lahf
addl
je
int3
das
push
xor
mov
out
mov
cmpsl
jno
or
and
push
cmp
pop
out
sbb
leave
call
aas
fwait
and
mov
mov
lcall
adc
mov
jp
jb
xor
js
repnz
cmp
in
divl
jbe
jo
push
inc
adc
xorl
xchg
dec
in
or
mov
scas
lods
dec
and
mov
loopne
add
mov
sub
ret
sub
pop
popf
fstl
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
mov
cli
adc
aas
lods
mov
dec
push
xchg
and
cmp
or
sbb
psllw
lss
and
cmpsl
xchg
fcmove
and
or
fxch
jno
loope
stc
inc
int3
jno
pusha
jge
cmp
jmp
rolb
cmc
xor
mov
mov
jb
dec
push
pop
sti
pop
xchg
mov
jbe
xchg
push
push
les
mov
imulb
cmpsb
cmp
sbb
std
cltd
jmp
aaa
and
pop
cltd
mov
and
cltd
mov
pop
loopne
or
xchg
xor
jle
daa
ja
adc
lds
adc
cwtl
aad
jp
stc
xchg
add
add
aam
test
dec
xchg
cmc
dec
ljmp
add
mov
in
mov
andb
arpl
pop
xlat
pop
test
pop
addb
loope
filds
jo
mov
movsb
jecxz
aaa
dec
mov
xchg
divl
jp
add
mov
cmp
in
sub
insl
ret
push
in
out
loope
jecxz
lods
pop
ficoml
sbb
cli
mov
or
shll
jmp
call
fcmovb
movsl
cld
inc
stos
decl
mov
scas
cmp
lahf
jae
mov
nop
add
and
pop
xor
add
mull
int
xlat
xor
lahf
shlb
je
cmc
fcoml
enter
add
push
xchg
arpl
addb
lods
xchg
repz
push
jbe
push
cmp
fdivrs
sbb
jnp
leave
mov
mov
xchg
out
lods
sbb
daa
cwtl
lods
sub
int3
or
cmpsb
call
cli
cmp
and
syscall
pop
incl
in
mov
loopnew
fwait
dec
xchg
shlb
jmp
mov
movsl
pop
iret
jecxz
loop
mov
dec
mov
push
or
loope
sbb
inc
dec
adc
inc
popf
push
addr16
aas
sub
cmp
sbb
es
lock
xchg
outsl
mov
jae
sub
lahf
hlt
je
sub
bnd
lahf
xchg
fst
lahf
outsl
jl
sub
and
adc
jns
iret
xor
and
loopne
pushf
insl
gs
xchg
sarl
dec
push
rcr
outsl
mov
mov
test
ja
or
cmc
nop
jae
repnz
fwait
add
stos
xchg
dec
cmp
adc
lods
fwait
popf
xchg
xchg
xchg
jmp
es
movsl
pop
cmpb
mov
dec
repz
jmp
inc
ret
in
out
mov
jns
mov
sbb
xor
sahf
cltd
outsl
leave
imul
mov
inc
loope
or
adc
cmpsb
cmp
xor
fcomi
xchg
push
out
bound
shrb
push
out
sub
push
out
dec
pop
cmpsl
stc
fldt
push
push
nop
push
jmp
push
mov
fwait
xchg
cltd
pop
xchg
rcrb
fldl
gs
mov
rcrb
adc
jp
add
cwtl
xchg
xor
stos
ja
xchg
add
movsl
mov
pop
jae
aas
aaa
pushf
dec
mov
aaa
jg
call
mov
icebp
push
mov
sub
xlat
xor
jmp
push
sbb
inc
enter
pop
jns
lahf
jne
xchg
sbb
test
in
cmp
test
or
pusha
mov
rcrl
mov
test
lret
fwait
dec
dec
cmp
xchg
mov
ja
add
lret
add
jae
cmp
icebp
ret
daa
cli
inc
push
es
sbb
xlat
cmc
iret
cmp
cmpsl
aaa
pop
dec
insl
dec
dec
pop
mov
subl
cmpsl
movsl
call
mov
sbb
movsb
fiadds
fldl
ss
std
stc
fcomp
jo
imul
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
pop
mov
test
clc
adc
xchg
jno
rcrb
fwait
cmpsl
scas
call
jb
test
ss
dec
pop
lock
popf
in
xor
dec
add
xor
xchg
fwait
cmp
test
inc
adc
cli
mov
fsubrp
and
inc
push
push
aas
push
out
ss
std
mov
or
dec
faddl
or
mov
sbb
inc
pop
outsl
aam
ret
pop
mov
mov
jbe
sub
mov
sbb
fadd
jp
cmp
clc
movsb
ljmp
or
fsts
test
imul
push
dec
jecxz
out
scas
cmpsb
mov
mov
das
push
adc
fcmovb
cld
pop
jne
xlat
lahf
aas
inc
int3
cmp
aas
mov
lea
iret
xor
push
or
push
aad
sar
sarb
or
or
or
mov
arpl
sub
mov
es
fmul
jo
cmp
outsb
push
lock
clc
push
mov
push
jl
mov
dec
cwtl
mov
cmp
add
cmpsb
test
movsl
cmpsb
iret
rclb
cmpsb
iret
orb
lret
hlt
xchg
jmp
lea
mov
add
pop
jno
xchg
mov
mov
push
mov
mov
test
mov
shrb
ret
cltd
mov
jmp
loop
fs
faddl
das
movsb
push
ror
std
movsb
xchg
call
loopne
in
imul
pop
les
jl
mov
repnz
popa
aaa
and
hlt
lret
sbb
mov
push
jge
pop
gs
fs
icebp
adc
inc
lock
lock
and
enter
push
scas
push
rcl
out
lahf
lock
mov
stc
sbb
iret
mov
int
or
notb
enter
iret
aaa
and
dec
sahf
inc
jmp
jnp
or
ljmp
fsubrs
adc
inc
jmp
xor
out
jbe
jnp
jnp
push
lods
es
sbb
pop
or
out
jmp
mov
xor
andb
lret
mov
xchg
xchg
dec
lock
sub
jmp
sub
jo
loopne
sti
scas
pop
cmpsl
fdiv
fisttpll
lock
sbb
xor
mov
insl
jecxz
movb
add
mov
jno
dec
outsb
xor
cmpsb
adc
mov
pop
ret
xchg
lds
test
gs
sub
out
add
dec
das
push
push
add
test
inc
adc
insl
and
dec
imul
je
mov
lea
sti
adc
pop
or
pop
rclb
adc
ljmp
test
jecxz
mov
xchg
insb
enter
lret
sbb
sub
add
sbb
sbb
adc
ret
mov
fwait
cmpsb
sbb
scas
nop
call
icebp
adc
jecxz
push
ja
inc
or
cmp
dec
clc
pop
mov
push
mov
sbb
fdivr
iret
pop
sbb
imul
inc
pop
ljmp
sub
addl
test
psrlw
mov
cmp
rorl
outsb
aas
into
inc
xchg
pusha
cmp
mov
push
mov
and
stc
push
inc
push
popa
fwait
push
andb
insl
sarl
pop
shr
outsl
jbe
dec
fmull
vaddsd
js
add
fwait
inc
pushf
imul
dec
incb
je
stos
int
imulb
ds
mov
inc
cmp
loope
sbb
rol
out
inc
sub
xor
cmp
nop
sub
jg
jo
iret
sti
imul
cmp
lret
push
mov
add
lret
sub
loop
pop
ja
std
sarb
clc
xchg
sbb
add
inc
hlt
movsb
das
add
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
inc
mov
ficoml
je
int
test
filds
jnp
mov
mov
push
adc
loop
lods
pop
rcrb
mull
out
and
or
push
sar
inc
jae
adcl
je
test
aaa
xlat
pop
adc
xchg
add
cmp
adc
sbb
shrb
mov
push
sbb
outsl
out
sub
adc
xor
outsb
cltd
lea
cwtl
jno
aaa
adc
xchg
xchg
jb
fistpl
out
sub
aas
inc
loopne
mov
mov
inc
mov
hlt
ftst
ror
jp
cmp
or
outsb
daa
and
sbb
and
outsb
and
adc
jo
pusha
andb
stc
xor
adc
repnz
mov
sub
out
sbb
xor
filds
or
inc
and
sub
pop
mov
popa
mov
lret
unpckhps
add
jl
int
jmp
jb
xchg
mov
dec
pop
testb
mov
call
mov
or
push
xor
movsb
sbb
call
orl
mov
or
cmc
roll
cmp
push
mov
and
sets
subb
xchg
push
ror
insb
in
or
cmp
sbbl
adc
dec
xchg
mov
cld
mov
js
lcall
dec
data16
mov
lock
aad
inc
sti
mov
pop
inc
hlt
or
into
mov
fucomip
or
pop
int
insl
outsb
pop
aad
adc
sbb
hlt
inc
push
xor
dec
out
arpl
sub
ror
inc
ss
addr16
xor
iret
push
fisubl
mov
punpcklbw
add
cmp
and
addr16
insl
adc
dec
pop
cmp
fbld
mov
mov
lea
clc
iret
in
mov
adc
mov
jns
mov
fnstenv
cmp
add
js
jle
adc
outsl
jge
rorb
outsl
add
adc
cwtl
pop
cmp
test
or
xchg
mov
jmp
lret
pop
inc
add
dec
mov
inc
faddl
aas
cmp
pop
out
wrmsr
add
sahf
mov
push
push
or
call
push
lock
jge
enter
cld
mov
clc
lahf
or
arpl
stc
into
xor
aas
aaa
bound
push
ret
cmp
jle
std
mov
push
push
pusha
loop
mov
sbb
outsl
leave
xchg
push
cmp
pop
rorl
sub
subl
and
pop
call
cs
push
fstpt
test
adc
rcr
mov
inc
mov
and
inc
out
jae
mov
pop
sbb
rcl
out
pushl
repnz
arpl
sub
cmp
ret
inc
add
pushf
fwait
add
jp
inc
sub
cmc
iret
jno
xor
push
inc
adc
ja
jne
or
cmp
or
movsb
ss
and
loopne
js
sbb
cmpsl
inc
movl
mov
add
pop
scas
pop
bound
outsb
nop
stc
and
mov
divb
daa
ret
mov
cmc
and
pop
in
pop
mov
pop
nop
push
icebp
roll
inc
addr16
jmp
cld
xchg
ljmp
cli
pop
shlb
or
lahf
cmp
adc
clc
lock
adc
sbb
mov
ljmp
jnp
divb
sub
movsl
addl
or
pop
add
sbbb
push
sbb
nop
pop
lret
repz
lcall
ljmp
dec
movl
movl
movl
mov
mov
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
arpl
ror
aaa
shll
js
test
movsb
push
or
fidivrl
add
test
or
cld
pop
jb
lret
cltd
sbb
lock
jecxz
xchg
sub
mov
jl
cld
jg
xor
pop
adcl
cli
ret
pinsrw
and
dec
shl
or
push
in
loopne
and
or
and
mov
mov
cmc
imul
cmp
stc
mov
push
sahf
shrl
push
mov
scas
jge
or
fsubrl
repz
mov
xchg
xchg
mov
addr16
stc
pop
stos
nop
mov
pop
add
cmp
adc
loop
dec
sbb
and
xchg
aam
pop
cwtl
push
loop
add
cmp
les
mov
xchg
das
sub
cltd
or
inc
roll
push
lcall
inc
cmp
adc
dec
cmp
mov
adc
in
jge
repnz
mov
xor
adc
xor
mov
or
ss
movl
or
xor
in
cmpsl
cwtl
fbld
push
mov
test
movsb
movsl
jg
adcb
xor
sub
or
and
fldenv
ja
pop
xchg
and
xchg
add
out
or
sbb
jle
jae
xchg
cmpl
iret
sbb
orb
mov
cmp
sbb
jmp
inc
pushf
mov
dec
or
xlat
mov
test
or
enter
xchg
test
xchg
jb
pop
lcall
push
and
out
les
xchg
mov
aad
xchg
jmp
dec
test
mov
data16
dec
mov
jne
stos
stos
shl
adc
stos
es
add
ret
jle
into
mov
or
stos
mov
lahf
ss
jp
add
stc
adc
cmp
and
jno
inc
mov
addb
std
imul
ret
cli
sbb
fsubs
mov
mov
fstps
dec
daa
adc
fsubs
mov
jmp
sarb
lds
call
nop
mov
and
mov
imul
cmp
xchg
inc
or
adc
dec
sbb
add
xchg
std
shr
sti
and
cmp
test
mov
int
stos
enter
mov
das
mov
jg
inc
jo
gs
mov
sbb
or
faddl
fldt
mov
xor
jmp
aas
pop
and
pop
xor
rcrb
call
inc
fs
sahf
aam
add
jmp
shld
movsl
mov
out
mov
filds
cmpsb
pop
pop
add
sbb
outsl
inc
jmp
mov
lret
out
dec
rcll
lock
sarb
xchg
jo
xorl
and
test
push
scas
add
in
xchg
jno
push
cmp
cs
jmp
es
or
add
add
mov
jne
rcll
add
add
push
inc
lods
cmp
mov
inc
es
in
push
sbb
aad
ss
or
subl
sub
mov
packuswb
push
outsb
jmp
cmp
sub
add
repz
gs
ret
and
jl
sbb
xchg
fisttpll
enter
pop
jmp
add
cmp
ss
adc
lds
sbb
sub
xor
mov
dec
sub
fdivrl
ja
adc
lahf
push
and
out
mov
adc
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
dec
sub
adc
movsl
mov
shrb
bound
cli
das
push
pop
push
enter
imul
xor
call
dec
jns
xor
insl
fwait
insl
arpl
orb
add
sub
into
inc
jecxz
sbb
cmp
inc
addb
add
or
mov
sub
mov
repnz
test
xor
test
xor
mov
mov
pop
add
cltd
pop
xlat
push
inc
repnz
pop
push
dec
sbb
repz
sub
lods
icebp
inc
dec
ret
pop
mov
nop
cmp
ret
jge
sbb
dec
outsb
and
adc
add
adc
xor
fs
adc
sbb
lea
pop
push
and
inc
cmp
mov
add
and
pop
aas
push
lods
sub
addr16
xchg
pusha
lds
loop
mov
dec
xchg
imul
das
push
sbb
sub
dec
mov
and
xchg
insl
ffree
pop
fistl
pushf
mov
repnz
lods
lea
jl
and
arpl
ljmp
xor
adc
cld
cwtl
mov
cmp
sti
sub
xor
scas
mov
sbb
int
dec
imul
stc
push
xlat
mov
mov
push
mov
jmp
xor
fcoms
mov
inc
out
xchg
inc
xchg
push
into
lret
orb
pop
cmp
fisttps
loope
imulb
aas
cmp
sub
push
lcall
and
mov
les
insl
jge
dec
jecxz
inc
nop
cmp
popa
and
sub
mov
push
rclb
jmp
push
pop
mov
mov
sub
jbe
into
inc
lret
cmp
das
fs
dec
in
fcoml
cld
aad
add
sahf
sub
adc
dec
sbb
pop
mov
addr16
cmp
and
in
jbe
aam
adc
add
aaa
out
jno
addr16
push
and
flds
mov
out
lea
sub
shl
insl
ret
jle
dec
mov
test
mov
add
jle
test
aad
in
adc
cmp
fimuls
movsb
sbb
xchg
pop
pop
or
pop
rolb
repnz
mov
fisubs
sub
mov
add
test
iret
daa
lahf
xchg
mov
jp
xor
movb
sbb
mov
vmwrite
aam
xchg
dec
mov
jg
ds
rcrl
test
mov
pop
adc
stos
add
mov
mov
inc
out
es
cli
ljmp
pop
mov
mov
sub
js
push
adc
dec
jo
jle
and
pop
pop
out
mov
dec
scas
scas
mov
aas
push
jge
cmp
es
test
test
icebp
arpl
andb
cs
dec
or
sub
sub
sub
rorl
pop
sti
sarl
push
or
test
mov
ss
or
sahf
cmp
pop
cli
arpl
jne
addb
dec
inc
xor
pop
sub
scas
jle
sbb
cmp
mov
lcall
mov
shll
push
xchg
xorl
out
mov
xor
insb
push
sbb
hlt
insb
sub
pop
mov
and
fildll
add
push
mov
add
add
sarb
stos
add
add
add
xchg
pop
jns
in
and
loop
push
test
lret
sub
mov
adc
mov
out
sbb
pushf
std
xor
add
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
leave
lds
into
fwait
clc
adc
inc
mov
mov
adc
or
cltd
out
repnz
add
lea
jle
andl
mov
pop
mov
imul
mov
cmp
scas
scas
fnsave
fcomps
stos
pop
call
lret
stos
enter
cmp
dec
mov
xchg
adc
cli
loope
or
dec
pop
and
lock
or
xor
scas
jae
jbe
loope
lret
mov
bound
in
rcr
cltd
adc
mov
clc
cmp
push
jge
aad
ret
aaa
out
and
into
xor
leave
fisubrs
xchg
outsb
pop
lfs
les
rorl
and
mov
pop
mov
lret
or
inc
ret
ret
adc
int3
dec
std
lods
ficomps
loopne
inc
pusha
pop
fs
inc
cs
sar
leave
mov
xor
ret
out
lahf
scas
data16
sar
sti
minps
jne
scas
cmp
aad
lds
mov
xor
push
test
pop
xor
push
sbb
int
lret
leave
sbb
xor
subl
mov
int3
xchg
aas
test
movsl
xchg
fnstenv
int3
jne
fldt
ja
imul
cmpsl
sub
shrl
mov
cs
arpl
jecxz
and
fnstcw
and
inc
in
rorl
lock
and
leave
mov
dec
add
cmp
adc
jp
or
fs
aam
add
shlb
xchg
pushf
adcb
add
imul
and
inc
mov
outsl
lods
mov
mov
stc
loope
xchg
inc
iret
rclb
xchg
xlat
hlt
pop
aaa
xchg
fimuls
add
cwtl
mov
push
loopne
pushf
loope
fisttps
jl
sahf
not
lcall
out
nop
jmp
or
mov
sbb
or
call
pop
jbe
lods
and
adc
xlat
inc
negl
sbb
test
sub
mov
cmp
mov
or
and
nop
cmpsl
pop
jne
mov
das
popa
sarl
dec
pop
fiadds
push
push
jne
add
les
aam
cmp
dec
pop
mov
jmp
adcb
testb
enter
dec
inc
xor
out
xchg
sub
inc
rclb
pop
test
jo
adc
or
jns
movsl
lret
in
in
sub
adc
cwtl
je
std
idivl
stos
add
cmp
cltd
lahf
pop
dec
and
mov
jae
aaa
jno
cs
mov
sub
roll
lcall
repz
rorb
fiaddl
or
jg
faddl
fstl
pop
lea
push
in
daa
xchg
xor
push
sub
out
xor
and
scas
cmp
add
mov
mov
test
int3
jge
stos
push
testb
mov
mov
mov
ss
pop
inc
push
sub
add
scas
cmp
cmp
cmp
cld
icebp
cwtl
movsb
adc
jne
ror
pusha
mov
inc
sbb
push
cmp
jae
inc
outsb
addr16
mov
enter
aad
lret
lods
jp
jmp
xchg
shl
and
outsb
ja
and
enter
and
mov
out
jp
mov
enter
loopne
mov
stc
or
jnp
cmp
add
mov
inc
sub
fs
push
out
xchg
out
pop
mov
or
pop
jmp
push
rcl
dec
jns
mov
or
rclb
test
sbb
mov
cmpsl
jl
lret
dec
das
insb
pop
cmp
and
adc
mov
jb
mov
out
mov
xchg
dec
maxps
test
dec
andl
inc
or
push
hlt
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
xlat
sbb
push
push
fnstsw
call
add
push
loopne
aaa
jnp
pusha
js
loopne
loopne
daa
stos
mov
xchg
jns
cmp
iret
xor
insl
lret
shlb
or
cwtl
xchg
inc
scas
jecxz
dec
sbb
pushf
int
pop
andl
mov
sub
dec
outsb
push
dec
pop
jle
dec
fwait
incb
pop
cmp
leave
pushf
adc
mov
call
pop
xor
push
push
xor
mov
dec
imul
cs
add
mov
or
outsl
cld
flds
loop
sarl
push
addr16
lock
repnz
pop
rcrl
push
sbb
out
inc
cmpsl
fldenv
lcall
into
sub
int
pop
stos
aas
cs
shrb
push
in
push
in
xlat
sub
jmp
jne
cld
hlt
xchg
scas
cwtl
loop
ja
sarb
dec
add
mov
add
cmp
outsb
es
mov
jle
aas
call
add
sbb
imul
jae
cmc
ja
pusha
inc
pop
xor
notl
mov
add
sarl
mov
into
mov
sbb
mov
ret
or
or
movsl
mov
stc
ret
fcomps
pop
lds
sbb
rclb
out
mov
fnstenv
lret
lods
ficomps
sub
xor
cmp
mov
movsb
popf
dec
fstps
ficomps
push
push
sysret
in
and
flds
test
jl
fiadds
fidivrs
cmp
xor
cmp
jnp
test
test
push
addr16
pop
xchg
aas
rcrl
xchg
push
les
in
movsl
sub
mov
popf
cmp
cmp
incl
mov
dec
fsubs
adc
cmpsb
push
sarl
in
mov
adc
push
out
sub
orb
loope
xor
fstpl
aaa
and
push
push
xor
mov
and
das
mov
mov
stos
xor
add
xchg
out
stc
inc
jae
inc
sahf
clc
fstps
jb
jmp
and
push
adc
or
test
mov
sub
mov
push
jne
vmwrite
int
in
mov
mov
aas
jns
adc
pop
aad
fdivr
inc
int
jo
mov
pushw
decl
push
mov
pop
es
sbb
dec
xchg
je
jge
jle
jge
or
push
mov
and
repz
xor
dec
push
std
pop
pop
in
gs
mov
std
iret
das
out
jne
das
add
imul
movsb
into
pop
jo
mov
push
mov
cmp
hlt
push
xor
mov
nop
rorb
divb
test
mov
mov
outsl
ret
cmp
dec
xchg
ficoms
popa
frstpm(287
and
dec
cmp
pop
cmp
ljmp
sarl
out
add
and
sub
movsb
nop
cmp
dec
imul
lahf
and
flds
in
mov
iret
jl
mov
xorb
and
mov
sub
cmp
lea
loop
scas
xor
jle
adc
arpl
sub
mov
mov
ret
dec
sbb
sub
lcall
adc
xchg
mov
icebp
sub
mov
insl
mul
jbe
jb
inc
aam
sbb
dec
loop
jo
cmc
andl
and
mov
xor
pop
and
add
and
icebp
sbb
jge
movsb
xchg
jmp
insb
and
cmp
mov
or
xor
adc
jmp
xor
arpl
push
jae
scas
sbb
mov
gs
lock
adc
xchg
pop
aas
out
fadds
and
mov
stc
dec
jno,pt
jo
sub
inc
sub
arpl
and
pop
cmp
testl
negb
or
popf
jge
stos
loop
ficoms
jecxz
push
addb
and
inc
xchg
out
sub
call
adc
and
mov
inc
add
rorb
cld
or
add
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
push
mov
adc
adc
xor
fdivp
movsb
int
ss
outsl
dec
stos
shl
in
icebp
lret
inc
or
xlat
sbb
jmp
adc
inc
xor
adc
mov
cmp
psrlw
cli
fdivs
add
pushf
outsb
push
jo
mov
xor
inc
push
pusha
pusha
lods
pop
sbbl
loopne
shll
jle
js
dec
push
cli
sub
cmpsb
movsb
scas
ret
adc
vcvtpd2psx
inc
iret
inc
cmp
cmpsl
sbbl
bound
loop
adc
nop
outsb
sahf
xchg
push
imull
cmpb
add
rolb
inc
cwtl
lods
mov
jno
add
sbb
lea
adc
test
push
nop
aas
jmp
lcall
ret
and
sbb
cmpsb
sub
pop
sub
push
push
jecxz
scas
rcrb
mov
cmp
roll
sub
mov
or
inc
jae
xor
jmp
inc
jae
fisubrs
cmpsl
ret
xor
cli
in
sub
out
mov
fsubl
mov
mov
fcom
push
enter
popa
lods
and
jecxz
push
in
lcall
push
add
cld
lcall
pavgw
xor
aam
adcb
frstor
cs
push
sub
push
mov
pop
notl
cmp
xor
imul
incl
jno
or
or
inc
fisttpll
stc
dec
movsb
adc
mov
faddl
and
push
xchg
xor
sbb
mov
xor
jmp
out
rolb
mov
pop
ret
cmp
fcmovnb
cmp
data16
cmp
pusha
ficoml
hlt
mov
lret
mov
and
rclb
loope
pop
fucomp
mov
xor
adc
clc
and
cli
popa
int
cwtl
mov
js
test
sbb
in
push
and
stos
dec
and
popf
mov
nop
sar
mov
or
push
clc
sub
pop
xchg
fildl
sbb
push
repz
push
dec
shll
mov
push
cmp
sbb
dec
shrl
call
pusha
sti
dec
inc
clc
mov
out
cmp
ja
or
sub
xchg
pusha
mov
scas
mov
jl
arpl
inc
and
ja
lods
loopw
pop
xchg
fdivrl
cmp
loope
lods
ss
sub
add
mov
inc
dec
daa
sbb
or
mov
arpl
shll
and
sbb
mulb
lods
xor
fidivrl
stos
sub
je
mov
das
stos
mov
incb
aaa
js
testb
inc
enter
cmpsl
movsl
or
cmp
and
cs
push
fs
mov
int
pop
and
test
ds
mov
lea
add
pop
xchg
adc
dec
cmp
cmp
mov
xor
in
adc
sti
dec
xchg
sbb
add
pop
mov
sub
dec
nop
push
cs
adc
push
mov
jp
mov
jne
or
mov
sub
dec
and
insl
stc
sub
cmp
fdiv
das
lock
cmp
data16
jl
fwait
sub
mov
rcrl
jns
dec
or
push
and
xchg
mov
push
inc
jl
or
std
inc
xchg
sti
mov
push
and
mov
mov
inc
icebp
jmp
dec
stc
divl
mov
lret
in
ja
mov
stos
xor
outsb
fmuls
int
jg
lods
sbb
ror
mov
imul
inc
xor
or
pop
scas
imul
jne
movsl
push
dec
in
cmp
in
mov
sbb
sub
int
mov
mov
jecxz
add
add
dec
push
mov
or
pop
xor
or
adc
pop
push
fwait
loop
pop
nop
lcall
shll
mov
xchg
cmp
in
jb
daa
jnp
xor
movsb
std
out
fcmove
pushf
in
xor
push
push
dec
popf
cwtl
pop
jg
xor
imul
inc
movsl
cmp
push
nop
negb
cmc
jo
lret
in
ja
pop
cmc
mov
pushl
ret
inc
pusha
scas
or
jl
push
insl
mov
sahf
cmp
gs
insb
sub
insl
ja
into
out
ss
sbb
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
imul
push
lcall
imulb
adc
pop
clc
daa
lds
inc
push
push
sahf
mov
je
mov
loop
lods
inc
es
mov
xchg
sub
sub
ss
jmp
test
fisttps
push
dec
and
bnd
addl
mov
sbb
dec
sbb
rol
mov
call
jbe
or
insb
push
mov
outsb
mov
lds
jbe
add
dec
rcrl
addr16
cmp
jmp
and
jge
sbb
pop
cwtl
stc
jne
cmp
cmpsl
xchg
pcmpgtb
mov
lcall
mov
inc
test
xchg
scas
enter
fnstcw
xchg
into
push
movsl
push
fnstcw
gs
xchg
xor
mov
cmp
fisttpll
sbb
cmp
pop
sti
pop
sbb
stos
xchg
inc
out
jbe
pop
push
lret
ljmp
jnp
sbb
fists
xchg
jbe
xchg
or
dec
insb
or
imul
rclb
in
cs
dec
cli
jbe
jmp
adc
enter
shlb
enter
lcall
mov
decl
ja
cmc
jl
cmp
mov
xor
xor
cltd
sti
inc
and
std
test
xor
pop
fsts
push
sub
pop
scas
int3
xchg
fs
sub
fs
loopne
ret
inc
jge
cld
xor
sar
jmp
gs
lea
fcoms
std
sbb
xor
enter
aad
das
push
jnp
mov
push
and
mov
adc
mov
shll
push
int3
add
outsb
mov
arpl
nop
inc
and
and
aaa
mov
cmp
mov
fnstenv
cmpl
jb
insb
pop
sbb
js
lret
fcmovu
lea
sub
xchg
aas
in
cmpsl
ja
adc
push
bound
push
aas
scas
rclb
or
cmp
je
push
add
xchg
and
rorb
and
and
push
outsb
aad
mov
cmpsl
mov
lock
cli
into
cmp
lea
sub
sbb
iret
stos
add
andb
mov
sub
lahf
outsb
jp
std
sub
ja
jne
mov
shlb
je
xor
pop
outsb
mov
jge
or
ss
ljmp
neg
imul
cmp
sub
loopne
mov
pop
in
int
cmp
mov
outsb
cmp
aam
insb
adcb
inc
sbb
scas
mov
decb
jl
xchg
mov
xor
in
push
pop
add
jle
mov
std
aaa
jge
sub
xchg
ret
jne
lcall
xlat
bound
inc
or
faddl
jne,pn
scas
das
lret
or
cmp
pop
pop
pop
sub
mov
adc
cmp
daa
push
imul
mov
stos
xor
mov
push
mov
push
jno
fisubrs
mov
cmpb
sub
call
cld
inc
icebp
sub
mov
sbb
xchg
fwait
loopne
sub
jbe
lock
xchg
or
divl
mov
adc
pop
ds
cmp
scas
sbb
mov
push
inc
js
dec
jns
sarl
sbb
pusha
mov
mov
in
xchg
cltd
std
in
decl
jnp
lret
and
xchg
inc
repz
cmpsl
xor
les
cmp
sqrtps
and
and
hlt
arpl
outsb
xchg
insb
leave
shlb
cwtl
out
inc
xchg
vpshufhw
test
dec
jg
imul
sahf
popl
add
sub
cmp
or
addl
xor
outsl
pop
imul
sub
pop
jne
add
inc
mov
repz
xor
stos
push
addb
repz
cwtl
addr16
rorl
insb
call
sub
jbe
test
out
and
inc
in
je
test
stc
and
into
cli
push
and
repz
scas
add
cmp
xchg
sbb
je
enter
mov
fisubrl
dec
sti
pushf
mov
mov
lock
inc
xchg
mov
jbe
xchg
jb
or
mov
push
data16
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
sarl
lods
test
adc
adc
fmull
data16
add
push
cmpsl
cmp
adc
sub
sub
sub
inc
inc
aas
iret
inc
fcompl
mov
fs
jb
sbb
stc
outsb
mov
cmc
and
lahf
adc
sub
test
ljmp
sbb
mov
sbb
cmpl
addl
aad
cmp
outsb
jecxz
push
inc
ret
pop
xrelease
xor
push
jno
int3
stos
je
cmpb
cmp
dec
ss
mov
clc
lcall
enter
push
shll
adc
or
inc
push
sub
in
rcrl
pop
xlat
xor
lods
enter
gs
push
enter
mov
push
dec
nop
mov
lret
xor
dec
adc
add
push
lods
scas
je
jl
iret
inc
fwait
scas
xchg
std
pop
mov
inc
loopne
mov
fisttps
mov
and
imul
mov
out
fildll
push
sarl
ret
ljmp
add
dec
outsl
fldl
mov
mov
cmc
in
arpl
es
dec
cwtl
xor
push
sbb
cmpb
add
adc
add
and
fs
and
stc
mov
cmpsb
jbe
jecxz
test
divl
arpl
call
mov
insb
cmpsb
mov
mov
sbb
jg
aad
xlat
mov
xchg
jg
fs
cwtl
ds
std
mov
pop
arpl
decb
sbb
cli
mov
xlat
aam
jns
pmaxub
in
cmp
jb
out
rcrb
sbb
mov
loope
dec
scas
pop
loopne
cmpsl
and
test
cmp
jge
pop
dec
jae
jge
pop
dec
loop
mov
sbb
imul
fisttps
push
clc
pusha
repnz
jge
test
shlb
je
xor
in
mov
in
mov
fbstp
shlb
ljmp
or
and
loop
sub
aaa
data16
out
negb
lds
mov
leave
out
stos
pop
jne
xchg
xchg
push
aad
sbb
nop
call
add
ret
mov
pusha
xorl
pusha
and
mov
sub
mov
mov
je
test
push
inc
loopne
test
push
loop
and
mov
xor
stc
lds
cmp
movsb
pushf
inc
mov
lahf
jae
ret
int3
or
pop
jo
sbb
xchg
push
cwtl
lret
pop
cmp
cmpsb
and
out
jnp
add
sbb
popf
popf
add
js
js
mov
cwtl
in
sar
adc
je
ret
lea
pop
or
jl
pop
lahf
ljmp
fs
fmuls
loope
push
gs
mov
inc
cmp
lea
pop
sbb
cmpsl
cmp
xor
mov
pop
push
mov
or
pop
jno
mov
dec
adc
clc
pop
aaa
mov
pop
adc
push
adc
fld1
xchg
cmp
sub
mov
stos
xchg
push
add
cmp
push
ss
or
or
dec
and
or
add
mov
inc
mov
ret
push
push
sub
insb
add
pop
cwtl
inc
ds
fiadds
popa
and
jns
sarb
push
mov
mov
stc
xchg
mov
jecxz
mov
movsb
add
mov
xchg
inc
sbb
adc
sub
mov
mov
into
call
cltd
stc
imul
or
fwait
lsl
fs
mov
add
pop
inc
das
movsb
scas
in
lret
ss
sbb
insw
jno
iret
mov
dec
cmc
ja
test
in
xor
adc
aas
lcall
jecxz
pop
lahf
iret
jecxz
sub
pop
movsl
lods
loop
xchg
push
pop
add
lds
pop
adc
mov
ja
mov
pusha
cs
daa
aad
push
jle
mov
pop
sub
in
loope
jle
into
push
jmp
ficomps
aam
cmc
clc
fs
adc
xchg
adc
cmp
push
sub
fsubp
mov
adc
and
sbb
icebp
xchg
out
mov
add
cmp
xchg
daa
sahf
fistps
sub
pop
in
clc
cwtl
pop
pop
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
scas
in
movsb
cli
mov
or
pop
or
push
mov
enter
sub
and
xchg
mov
mov
xchg
or
jecxz
add
jno
or
mov
sub
mov
inc
js
int
loopne
pop
sbb
push
and
mov
push
shrb
roll
sub
add
mov
xchg
xchg
jle
int
dec
imul
add
lret
rcll
jp
add
mov
shl
icebp
xchg
leave
idivl
and
inc
sar
jmp
int
sub
std
addr16
fwait
bnd
pop
xchg
mov
dec
lods
fnsave
sbb
sar
xchg
aam
stos
mov
stos
aam
xchg
sbb
fs
popf
mov
std
jnp
outsl
push
shl
dec
insb
push
adc
rorl
jp
pushf
nop
cwtl
or
or
lea
ds
dec
arpl
insl
fwait
pop
arpl
push
rcrl
mov
cld
pushf
lods
int3
dec
inc
cmp
mov
loop
push
inc
jl
or
scas
divl
movsl
or
and
jge
call
or
dec
pop
or
out
xchg
in
mov
test
insl
loopne
push
shlb
inc
dec
sahf
gs
shl
in
or
ss
xchg
in
imul
mov
js
pop
divl
add
addw
dec
rolb
bound
push
fidivs
in
sbb
xchg
jb
aas
rcrl
xchg
xchg
xor
sub
push
pop
outsl
ljmp
repz
xor
dec
push
pop
mov
add
pushl
push
loop
es
daa
icebp
adc
mov
xor
leave
cmc
cltd
xor
cmp
mov
xchg
cmpsl
mov
xor
inc
jmp
or
push
xor
adc
pop
sub
jmp
push
insl
jg
shll
xchg
enter
loopne
jg
cwtl
in
sub
pop
add
negb
sbb
orl
lock
or
outsb
lds
and
ljmp
or
or
adc
xor
cltd
push
mov
in
mov
or
hlt
cli
cmc
imul
fwait
adc
leave
pop
lret
add
loopne
les
xchg
sbbl
scas
fwait
sahf
or
fimuls
or
and
xor
andl
scas
add
cld
imul
dec
into
aas
or
xor
sub
pop
das
adcb
popf
push
jae
inc
pop
je
je
sub
sbb
xchg
les
pop
dec
push
mov
movsl
cmc
sub
int3
add
loopne
lock
in
xor
cmp
or
std
ret
add
jp
iret
lea
pop
call
mov
inc
pop
rcrl
out
mov
test
ret
mov
pushf
cmc
and
shrl
mov
sub
mov
jnp
or
repnz
adc
popf
das
bound
xor
or
dec
mov
mov
stos
add
add
ds
inc
into
or
out
scas
bound
push
jns
ret
negl
mov
mov
xor
lds
mov
loope
rcll
loope
int
jno
and
sbb
aad
adc
fs
loop
inc
sub
outsl
cmp
mov
sbb
push
mov
data16
repnz
cmpsb
inc
dec
hlt
mov
sbb
inc
mov
pop
mov
add
rcr
cltd
xor
mov
nop
xor
xchg
mov
inc
icebp
add
lock
iret
cmp
out
ret
dec
sahf
enter
sarl
jecxz
js
roll
mov
sarb
cmc
jp
pop
xor
in
or
imul
loop
test
hlt
lahf
sbb
push
imul
fwait
rorb
mov
stos
mov
sbb
push
mov
aaa
fwait
or
sbb
mov
pusha
inc
cltd
fldl
mov
sbb
out
jae
inc
iret
cld
scas
fwait
mov
popf
xchg
fcompl
cltd
inc
xchg
lahf
lock
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
push
insl
lds
cli
adc
adc
jns
push
pop
test
jp
loope
test
pop
xchg
or
sbb
movsl
and
cmp
inc
popa
cmpsl
test
jnp
mov
xor
sub
adc
addr16
sbb
int3
aad
mov
pop
ds
es
aaa
mov
adcl
ffreep
std
xchg
adc
or
mov
cmpsb
lahf
insl
popf
pop
ljmp
popa
outsb
int
push
pop
xor
clc
inc
add
jmp
insl
push
push
inc
jae
ret
adc
mov
imul
adc
les
inc
lahf
out
xor
ja
adc
ficompl
aam
push
mov
stos
cmp
add
popf
fnstsw
xlat
inc
pushf
dec
or
sub
pop
movsl
incl
cmp
into
sbb
aad
or
xor
mov
lcall
sbb
mov
cmp
sub
mov
shl
movsl
adc
cmp
std
jg
dec
repnz
test
or
jle
out
daa
jbe
lahf
sbb
into
add
sbb
lea
xor
xor
sbb
mov
push
int3
andl
fs
xor
imull
adc
xor
in
push
sbb
xchg
sbb
cli
scas
pop
dec
repz
xchg
mov
jp
fsubs
or
mov
insl
xor
jno,pt
sub
icebp
jecxz
inc
inc
iret
xor
lock
cmp
cld
push
fs
pusha
push
movb
push
lahf
je
test
out
stos
mov
mov
in
lock
stc
or
pushf
fwait
pop
test
in
out
cwtl
int3
inc
jns
sub
sub
js
jns
mov
test
scas
xor
addl
movsb
jo
push
ljmp
lcall
ljmp
in
movsb
ret
imul
fdivp
sbb
sti
sub
pop
loop
jg
rcr
insl
lods
mov
cmp
sbb
inc
test
push
mov
fists
cmp
push
push
in
aad
mov
mov
ljmp
add
gs
cli
cli
outsl
fwait
fs
lods
jp
xchg
mov
dec
repnz
movsl
std
ds
inc
in
fdivr
pushf
cltd
ret
push
xchg
cli
jmp
jb
pop
inc
pop
inc
pushf
das
jge
pop
cltd
mov
xor
mov
test
fsubl
gs
in
push
mov
mov
mov
add
js
out
insb
into
push
fildll
mov
out
pop
incl
sti
fiaddl
sahf
dec
add
mov
sub
jmp
rclb
sub
pop
iret
cmpsb
xchg
dec
loop
mov
ret
enter
fadds
pop
push
pop
push
lock
sub
sbb
das
push
inc
mov
jbe
dec
movsl
aam
ljmp
imul
mov
lock
mov
decb
in
xor
inc
jle
adc
xor
aas
push
jo
sub
cmp
xor
dec
scas
dec
mov
lahf
out
adcl
cwtl
lods
push
adc
mov
xchg
sahf
pushf
and
subl
jle
subb
pop
sti
fwait
setbe
lahf
sbb
pop
jne
push
int
cmc
lcall
xchg
and
push
adc
test
ljmp
popa
popf
push
mov
lods
andl
flds
iret
add
pop
arpl
xor
jecxz
repz
fimull
push
or
mov
popf
cmp
xor
or
mov
or
jnp
inc
jp
cld
mov
cmp
test
push
fdivrs
ret
andl
adc
cmovno
rcrl
lret
or
imulb
pop
add
push
sub
pop
jle
fmull
or
mov
fwait
clc
jne
push
call
dec
jno
test
fwait
xlat
adc
fwait
xchg
mov
mov
push
and
aam
std
inc
daa
xor
shlb
inc
or
jg
incl
dec
sbb
push
cmp
pop
shrb
sbb
faddp
orb
add
push
cli
cmp
jbe
pop
imul
rolb
adcb
fs
xlat
mov
mov
xor
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
int3
xor
adc
adc
cmpsb
xchg
das
mov
in
jo
xor
mov
jae
flds
shlb
nop
mov
dec
mov
mov
fcmovb
mov
aaa
dec
inc
inc
cmpb
out
loopne
jp
xor
popf
setne
pop
insl
aas
xchg
adc
adc
lcall
insb
lods
bound
pop
mov
dec
lcall
or
icebp
lock
fidivrl
push
jl
mov
mov
pop
jo
lret
xchg
adc
es
add
test
inc
xor
or
mov
adc
cmp
lea
push
adc
cmpsl
sub
jmp
jle
inc
xchg
lcall
mov
fwait
mov
push
dec
in
stos
mov
sub
stos
enter
sub
sub
inc
xor
or
imul
or
mov
push
arpl
lcall
enter
mov
das
repnz
fistps
sub
gs
mov
inc
es
inc
lods
sbb
das
mov
and
ss
xchg
or
push
aad
xor
loop
sbb
dec
lds
sub
movsl
jg
mov
cmp
push
push
adc
les
js
adc
stc
and
add
dec
pop
out
movsb
rolb
jg
adc
fisubl
daa
inc
pop
mov
jl
add
push
and
out
dec
mov
imul
inc
xchg
pop
sub
cmc
dec
push
int
jge
int
push
js
mov
pop
test
add
mov
aas
mov
cli
mov
mov
adcl
stc
sub
and
negb
push
roll
sbb
cmp
jecxz
and
sbb
dec
js
mov
xchg
nop
test
and
jb
mov
mov
xorb
add
pop
cmc
mov
pushf
pop
lret
mov
sahf
sarl
push
movsl
or
dec
das
fs
pop
jae
hlt
add
aad
cli
add
and
jae
cwtl
dec
or
xchg
outsl
dec
cmp
in
add
mov
adc
shl
jge
leave
mov
pop
xlat
mov
arpl
push
add
outsl
mov
in
jle
mov
xchg
test
repnz
xchg
inc
fstps
fnstsw
xor
mov
les
xchg
je
lea
call
test
in
pushf
jg
popf
mov
ret
pop
xor
xchg
xchg
push
mov
adc
pop
jb
inc
and
mov
jg
sub
add
test
loopne
out
aas
xor
lcall
mov
bound
scas
repnz
push
sbb
mov
mov
sahf
je
sub
mov
shl
inc
loope
inc
or
fidivs
je
or
xchg
leave
mov
jbe
insl
xchg
call
lahf
loope
mov
lea
cli
insl
mov
mov
int
hlt
inc
shrb
jmp
push
ret
aam
sar
mov
xchg
dec
inc
mov
xor
jg
lret
push
bound
xchg
in
pop
xchg
mov
decl
mov
in
xchg
add
enter
decl
sub
xchg
inc
filds
sub
cmp
dec
fwait
pop
sub
push
bound
jle
sbb
int3
ss
cld
insb
imul
xlat
cmp
lods
aas
mov
sub
cmp
test
pushl
sbb
mov
xchg
add
and
cmpsl
test
push
cmpsl
enter
pop
sbb
mov
les
xchg
inc
nop
mov
movq
stos
push
mov
xor
orl
in
push
imul
or
push
xor
jmp
jg
shl
dec
dec
lods
jle
pop
les
push
or
aad
jb
cli
in
ret
sti
inc
sub
lahf
aas
mov
int
loope
pusha
xchg
rep
sbb
icebp
bound
icebp
dec
mov
movb
mov
push
inc
jp
or
lods
inc
pop
push
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
adc
xchg
jne
clc
adc
adc
pop
jns
jmp
movsl
cmp
out
imul
popa
pop
or
daa
pop
jle
inc
mov
add
sub
aad
xchg
jmp
ljmp
and
in
and
xchg
es
mov
stos
adc
mov
add
push
xchg
jmp
mov
pop
enter
mov
pop
out
bound
fwait
out
adc
add
sbb
pop
or
inc
iret
jb
jmp
sti
call
mov
jp
xchg
call
inc
sub
inc
ret
test
shll
mov
sub
ljmp
movl
nop
adc
fistl
xchg
add
jecxz
mov
sub
popf
mov
or
fidivrs
pop
cmp
add
insl
in
arpl
xchg
adc
sub
mov
sbb
fwait
mov
adc
stos
in
sbb
arpl
lods
jl
loopne
js
ja
inc
cwtl
lcall
aas
push
fstl
in
in
test
lock
loopne
into
and
pop
xchg
je
outsb
mov
aaa
lea
xor
mov
adc
xor
test
enter
push
lods
mov
out
pop
push
cmp
jo
mov
xchg
int
lods
mov
add
sub
sahf
inc
jnp
test
sub
arpl
les
jbe
es
push
repz
pop
xchg
fs
adc
xorl
call
inc
inc
jno
push
pushf
ficoms
lcall
neg
aam
mov
pop
mov
xor
jo
sbb
sub
sbb
mov
sub
lods
xchg
addr16
sub
sbb
xchg
sahf
jo
xor
pop
xchg
add
adc
xor
jl
loop
and
into
jl
int3
cmovge
xchg
or
inc
clc
nop
sub
fsin
pop
jne
add
adc
adc
jecxz
cmc
xor
pop
jno
push
jl
mov
das
daa
or
test
lahf
inc
ds
push
idivl
push
pusha
test
dec
push
or
push
cmp
mov
push
movsl
scas
lock
nop
jnp
jo
ds
sub
fnstsw
test
or
aaa
inc
sti
fimuls
inc
cmc
popf
sub
add
lahf
scas
push
ret
hlt
mov
inc
sbb
mov
jne
adc
daa
out
pop
arpl
in
pusha
sub
mov
pop
lods
and
push
push
xor
stc
cmp
xchg
insl
add
mov
jl
sub
mov
into
orl
outsl
pop
or
loop
andl
clc
sbb
insb
sbbb
push
or
pop
adc
cltd
push
cmp
sbbb
adc
int3
xchg
iret
outsl
movsb
decl
dec
jnp
ljmp
xchg
mov
dec
xor
jl
add
pop
dec
outsb
cmpsl
cmp
add
jne
mov
movsb
shlb
dec
aam
addr16
jge
jp
fst
or
leave
jmpw
aad
or
mov
mov
aam
scas
xchg
jecxz
fcompl
mov
mov
mov
jo
xchg
js
sub
jg
pop
pop
ss
fs
and
bound
ret
shlb
adc
cmpsl
inc
ret
movsl
mov
aam
out
enter
cmc
dec
xchg
js
out
dec
lcall
mov
xor
mov
sbb
cmp
stc
adc
jno
cmp
fdivrl
xchg
pop
rcll
sub
pop
popf
mov
push
cmpsb
shll
mov
mov
jns
jle
sarb
movsb
ret
pop
sbb
sar
mov
mov
aaa
ret
in
sub
es
pushf
xor
data16
out
test
cmc
fsub
dec
xor
mov
aad
mov
mov
ror
fldenv
pop
test
mov
lret
add
jo
sub
inc
mov
ljmp
inc
sarl
xchg
in
sub
pop
jp
lds
outsl
out
shr
cmp
pop
mov
movsb
jno
fstpt
xchg
sbb
jne
and
jg
mov
mov
push
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
std
sbb
adc
mov
mov
cmp
jbe
dec
xlat
pop
pop
stos
jl
mov
pop
push
mov
cmp
cmp
cmp
xchg
shll
adcb
outsb
sub
stos
cwtl
pop
jne
sub
inc
lcall
aad
pop
add
mov
mov
dec
ljmp
mov
shrl
les
sbb
add
mov
push
ja
loope
sub
stos
gs
mov
sbb
mov
orb
and
sti
aam
in
cmp
xchg
addl
mov
mov
sbb
cli
mov
adc
mov
xlat
popf
in
dec
shlb
loopne
xchg
add
mov
push
pushf
popa
movsl
cmp
data16
cli
push
inc
movsb
mov
or
jg
sbb
shrb
mov
xchg
cs
and
dec
lds
inc
or
int
scas
popa
mov
out
add
adc
mov
adc
xchg
jl
faddl
testb
rorl
mov
clc
loope
mov
in
leave
ret
jecxz,pt
xchg
sbb
movsl
jbe
mov
mov
cli
lahf
jl
insl
sbb
lea
mov
sarb
sbbl
mov
cld
loop
jnp
xchg
adc
insb
pop
xchg
mov
fs
lock
xor
into
cld
or
sbb
push
add
inc
mov
and
call
xchg
sub
mov
lods
aad
push
dec
sbb
ljmp
inc
dec
jge
pop
gs
das
jbe
jns
imul
rcr
mov
push
add
cwtl
and
cltd
mov
fsubrp
jns
clc
loope
mov
xchg
and
push
cld
jbe
mov
or
int
ss
inc
cmp
pop
ja
xchg
or
mov
hlt
cwtl
xor
cmpsl
test
rorl
sbb
in
lcall
push
xchg
dec
ja
and
stc
dec
cwtl
out
fadds
ja
cmpsb
sbb
popa
add
hlt
push
scas
in
daa
repnz
dec
pop
lea
outsb
add
inc
ret
inc
jl
add
pop
test
das
and
popa
lods
dec
lahf
xchg
xchg
cmp
adc
aam
pop
cmp
pop
dec
jbe
scas
push
or
adc
jp
sbb
and
dec
hlt
sbb
inc
mov
je
cmc
jp
mulb
mov
cmp
mov
in
js
push
push
loop
jecxz
dec
scas
cltd
inc
mov
xor
outsb
cmp
outsb
insl
xchg
cmpsb
ds
call
lods
lea
sub
adc
pop
lods
inc
lcall
cmpsb
jbe
and
add
jno
jp
in
je
jns
jecxz
push
inc
xchg
mov
dec
inc
scas
js
push
jnp
xchg
addr16
movsl
sub
jae
or
out
xlat
ss
mov
es
aaa
ret
mov
push
sub
pop
out
xor
push
mov
gs
xchg
shlb
setbe
sub
orl
lret
or
mov
mov
dec
test
mov
jnp
rcrl
popa
jg
push
into
xchg
fwait
mov
sahf
mov
push
cltd
adc
inc
fdivrl
shll
jle
or
int3
push
mov
jnp
flds
mov
xor
or
xor
or
shrb
xchg
mov
pop
jmp
sahf
sbb
mov
adc
sahf
jbe
and
and
mov
aaa
or
out
rcl
into
stos
push
enter
mov
popf
lret
jge
fnstsw
adc
cwtl
xchg
add
aad
idivl
fninit
cwtl
movsb
ret
sarl
push
in
mov
and
sub
lds
cli
int3
xchg
adc
bound
stos
in
out
dec
xor
addl
int3
fdivrs
inc
sbb
fcomps
iret
addb
test
jb
jb
rcrl
test
or
arpl
popl
jl
les
iret
pop
adc
lods
mov
jmp
xchg
pop
ret
xor
pop
fwait
jno
fsubr
push
add
pop
mov
push
addr16
mov
arpl
out
pop
add
stos
ljmp
push
inc
add
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
pop
stos
push
cmp
adc
iret
loope
into
cltd
xor
pushf
push
pop
sub
insb
movsb
hlt
gs
stos
repz
jl
mov
adc
pop
sbb
aaa
add
lock
cltd
or
dec
push
or
test
adc
jle
xlat
mov
lock
pop
xchg
repnz
cmpsl
jae
adc
xor
adcl
popf
cmp
fcoml
xor
inc
pop
add
test
and
adc
mov
adc
mov
and
jo
or
ja
push
sbb
dec
repz
aaa
adc
ss
jmp
jae
cmp
mov
cmp
ljmp
cld
pop
adc
aad
sub
insb
test
loop
loope
xor
pop
sbb
cmpb
data16
or
arpl
mov
adc
dec
std
les
lods
and
bound
fsubl
jo
mov
int
mov
cmp
jecxz
push
mov
data16
mov
rolb
and
mov
int
mov
fdivs
cmc
fwait
adc
icebp
jo
pop
int3
dec
push
pushf
pop
push
mov
les
mov
or
or
loope
rclb
lods
add
arpl
or
adc
lock
sbbl
jo
lahf
adc
lahf
lret
dec
xor
push
push
call
and
mov
daa
repnz
mov
push
add
xor
xchg
sbb
xchg
mov
mov
xchg
push
mov
inc
les
dec
pop
call
xchg
mov
shl
imul
fistpll
mov
add
and
cmp
cwtl
test
sahf
out
std
scas
loopne
push
cmpsl
lods
pop
and
test
outsl
shrb
push
dec
adc
xchg
adc
xor
sti
rcl
lds
out
aam
push
pop
push
mov
sbb
cld
aaa
loop
adc
dec
das
notb
in
in
cld
lods
ret
imul
pop
lods
push
je
cltd
inc
neg
fstps
cmp
out
cwtl
adc
and
jbe
xlat
mov
fs
lods
cmp
fs
or
sbb
loope
fistpll
cmp
hlt
xchg
xlat
test
fstpl
movsb
test
jmp
push
and
inc
out
dec
ss
dec
push
xor
sbb
lahf
arpl
xchg
mov
pusha
cmp
or
sub
jg
lds
cmp
je
xchg
popa
mov
lea
inc
daa
add
addb
scas
sbb
or
mov
les
andl
inc
sub
inc
lea
adc
icebp
repz
push
jmp
mov
mov
cmp
or
dec
mov
cwtl
jno
adc
lcall
insb
inc
or
test
mov
into
ja
idiv
and
int3
mov
jbe
daa
pop
in
movsb
cld
xchg
dec
and
in
xor
leave
loopne
aaa
jnp
repz
mov
in
imul
xor
and
jns
xor
sarb
enter
test
inc
repnz
push
push
cmp
icebp
data16
outsl
fcompl
lret
fisttpl
jge
xchg
inc
add
and
rcr
arpl
sbb
mov
jno
pop
push
inc
imul
aas
add
fld
mov
loop
adc
pop
pop
jmp
std
fdivr
xchg
cmc
fs
jo
pop
or
push
or
loop
cs
sahf
mov
sbb
inc
pop
pusha
xchg
mov
pop
adc
xor
sub
xchg
icebp
or
mov
or
mov
lds
out
and
cmc
ljmp
enter
xorl
cmp
xchg
pop
repz
push
and
inc
dec
dec
pop
and
and
fdivs
shl
and
xchg
jmp
gs
mov
popa
jecxz
or
outsb
sub
insb
xchg
shlb
ljmp
jne
hlt
or
mov
jmp
aas
xchg
xor
inc
stos
dec
xchg
jg
inc
movsb
movzbl
adc
leave
or
fidivl
cmp
ret
adc
mov
cs
out
push
ljmp
mov
jmp
nop
test
adc
sub
dec
xchg
add
and
adc
adc
bound
rcll
ja
les
pusha
aad
js
jge
and
sbb
bound
sub
movsl
dec
mov
stos
aam
test
pusha
fdivl
fs
les
mov
and
mov
cmp
ret
cwtl
pop
shl
dec
js
jmp
and
ret
jbe
fucom
jo
push
fcomps
sti
sbb
adcl
cmp
jne
repz
in
clc
push
leave
add
loopne
push
fbstp
leave
and
jle
stc
push
jecxz
mov
es
sub
pop
mov
or
adc
aad
push
leave
fsubs
fwait
ret
mov
ljmp
pop
jns
dec
mov
stc
xchg
aas
add
mov
daa
add
sahf
cmc
jne
mov
mov
pop
and
cld
divb
test
cmp
mov
dec
ja
mov
loopne
lcall
arpl
pop
sub
les
or
cmc
dec
jle
ror
pop
mov
pop
loop
es
adc
push
add
xchg
xor
pop
popa
cwtl
mov
xor
loope
mov
inc
pop
xchg
inc
sub
adcl
add
mov
mov
fs
pop
inc
arpl
iret
call
pop
loop
repz
adc
or
mov
out
cmpsb
mov
popa
fdivs
adc
movsl
jge
icebp
loop
jmp
enter
lods
std
push
ja
call
sbb
xchg
xchg
dec
mov
cwtl
or
jnp
arpl
pop
dec
fildl
les
dec
adc
jecxz
fmull
and
mov
push
cmp
mov
inc
das
leave
clc
jmp
cmp
shll
out
ds
shl
sti
ret
or
jp
arpl
scas
xchg
adc
decl
push
jno
into
ljmp
sbb
xor
lcall
xor
ret
cwtl
ficoml
test
or
ret
imul
dec
sub
xchg
mov
sub
pmaddwd
add
movsb
push
rolb
sbb
test
les
or
push
fwait
add
das
enter
mulb
pusha
das
lcall
mov
xor
ret
or
lods
and
mov
aaa
stos
add
jae
ljmp
scas
add
push
gs
stos
fisubrs
leave
adc
mov
mov
dec
imul
push
lea
adc
ss
cmc
loopne
out
sbb
mov
jbe
mov
aaa
mov
xchg
clc
repz
xlat
lea
into
dec
dec
and
jmp
clc
sbb
test
jnp
push
loopne
aam
out
pop
jge
scas
fdivp
ja
push
mov
clc
ret
js
mov
sub
cld
mov
xchg
mov
jne
xlat
in
scas
xor
jle
lret
mov
mov
ja
inc
mov
repnz
lea
cli
cmpsl
imul
mov
jmp
and
arpl
mov
or
mov
bound
movhps
sbb
pop
push
ds
sub
add
lods
xchg
aas
rcr
adc
xorb
jge
lret
mov
arpl
and
adc
jo
xchg
pop
enter
icebp
fdivrs
sbb
outsb
aam
xchg
mov
daa
sbb
stos
pop
mov
add
imull
or
sbb
in
xchg
inc
pop
fldenv
fcom
aaa
pop
mov
sub
psubq
sahf
jne
push
outsl
sbb
push
movsl
adc
adc
xlat
pusha
mov
add
cmp
bts
hlt
lock
mov
popf
insb
test
loope
movsl
daa
out
pop
sbb
or
jnp
mov
xor
mov
dec
pushf
jno
fdivl
nop
sub
cltd
shll
cld
cmp
push
data16
mov
cltd
xor
pop
push
bound
aam
push
and
xchg
hlt
mov
sub
mov
imul
adc
xchg
fstl
sub
adc
in
iret
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
testb
xor
adc
adc
xchg
push
sub
std
mov
or
sub
pop
jmp
repnz
mov
cltd
in
push
in
cmp
loop
inc
out
mov
and
adc
fs
scas
xor
fimuls
jo
pop
and
xchg
inc
mov
mov
cmp
mov
aaa
jne
fstps
in
mov
or
mov
sub
xor
out
rorb
or
mov
outsb
aaa
or
mov
test
inc
aaa
sub
and
rorl
incl
sub
xchg
lret
cmp
or
mov
jl
cmpsb
mov
data16
jns
popa
clc
pop
loopne
dec
mov
push
cmp
or
pop
push
xchg
jge
and
adc
popf
orb
mov
add
inc
add
fstpl
or
je
ljmp
je
push
test
or
or
jo
pop
dec
out
or
and
fs
cltd
mov
lahf
ficomps
xchg
jecxz
sub
sbb
adc
ljmp
or
fidivl
imul
aaa
pop
out
dec
mov
mov
mov
mov
ljmp
outsb
rcrl
sahf
pusha
xchg
repnz
popf
sbb
aas
push
mov
stc
adc
xor
or
pop
adc
sbb
jo
adc
testb
movsb
aam
shl
sbb
inc
and
dec
lret
fstl
in
pop
pop
andb
pop
push
loope
aaa
movsl
lods
fstpt
aad
xchg
call
ret
xor
mov
and
leave
sub
iret
inc
push
or
mov
mov
jae
in
xchg
cwtl
xchg
jg
sub
mov
or
ja
movsl
mov
testl
aas
rclb
rcrl
or
es
xor
jge
pop
scas
lea
sbb
jmp
inc
push
lcall
push
sub
pop
inc
sti
xchg
cmc
por
sbb
pop
addr16
mov
adc
cli
stos
lret
or
xchg
xor
sub
or
nop
xor
and
scas
push
loopne
je
xchg
rdmsr
mov
pushf
fsubrp
add
scas
jnp
test
push
and
aad
stc
sbb
xchg
inc
mov
push
and
cltd
and
and
pop
cmp
loope
std
mov
notb
or
stos
inc
scas
add
jb
xor
mov
or
push
pop
mov
pushf
cs
in
imul
dec
bound
aas
pushf
add
jne
out
bound
xchg
je
push
jge
sbb
sbb
popa
ficoml
mov
mov
or
ret
imul
jecxz
negl
pop
out
xchg
or
lds
sub
lcall
mov
and
mov
es
cmc
cmp
mov
aam
cmp
xchg
add
pop
lea
push
push
pop
in
test
sub
push
sub
xchg
hlt
add
imul
fwait
xchg
aaa
out
cmp
fiaddl
and
xor
lock
xor
push
andb
test
mov
stos
jns
add
pop
stos
pushf
mov
jl
mov
sub
aas
pop
cmp
flds
movsl
sub
gs
mov
and
repz
pop
negl
dec
and
mov
xchg
dec
int
inc
lcall
ds
mov
push
psllw
dec
mov
addl
push
push
cmpsb
movsb
or
sbb
sub
cli
mov
nop
add
scas
add
fcomi
and
sarb
mov
pop
lahf
pop
dec
pop
push
xchg
pop
clc
add
push
pop
mulb
pop
add
inc
push
js
insl
or
mov
fldcw
dec
xchg
inc
dec
cmovae
sti
aad
repnz
arpl
fs
and
push
jp
shl
jae
movsl
add
cmpsb
push
sbb
in
lahf
gs
jle
pushf
xchg
lahf
or
les
aas
sub
push
addl
mov
or
scas
cli
jg
cltd
push
xor
xchg
cs
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
rcrl
mov
clc
adc
adc
mov
iret
ret
addl
dec
push
mov
add
sti
aam
push
clc
pop
cltd
and
out
cmp
xor
stos
pop
push
pusha
stos
arpl
jl
fimuls
gs
cmp
mov
push
cmp
mov
jge
add
jo
xchg
cmpsl
or
sub
outsb
stc
cwtl
shll
cmp
sarl
push
lahf
in
jb
dec
push
dec
pop
xor
insl
int3
imul
adc
stos
jp
mov
xor
stc
jle
enter
push
push
fwait
xchg
mov
xchg
sbb
xor
bound
add
fwait
mov
jl
sub
push
cwtl
lods
pop
adc
insb
lods
repnz
add
out
mov
jno
pushw
cs
mov
lret
push
xchg
dec
mov
insb
xchg
pushf
loope
xor
dec
in
push
xor
aas
xchg
das
and
add
jmp
ret
or
push
pop
pusha
rcrl
cmpsb
mov
fldt
dec
imul
scas
lods
sbbl
cmc
xchg
mov
pop
pop
xor
test
xchg
test
mov
stos
dec
pop
add
mov
and
xchg
pop
pop
in
pop
sbb
mov
jnp
and
stos
mov
jg
mov
mov
cmp
lcall
mov
sub
outsl
adc
inc
int
mov
ss
pop
mov
mov
and
sub
int
dec
xchg
into
dec
mov
mov
cmpsl
xchg
sub
mov
idivb
push
inc
neg
popa
sbb
xor
imul
xlat
mov
stc
lds
xor
sub
push
stos
inc
fwait
jb
add
xor
cmp
popf
mov
lock
cld
jno
shrb
add
inc
cmp
or
cld
adc
mov
jo
fistps
ja
sub
inc
cmp
int
mov
ds
push
mov
pop
popa
cmp
movsl
pop
sub
scas
stos
in
mov
cmp
int
jb
push
sahf
arpl
aad
pop
in
mov
pop
lods
rol
dec
inc
push
inc
mov
or
notl
add
and
repz
mov
movl
call
xor
mov
hlt
movsb
sub
jmp
shrl
icebp
jbe
mov
mov
out
shrl
inc
pop
cmp
rcrb
add
test
gs
movsl
inc
xor
in
push
ficoms
hlt
inc
enter
push
sub
movsb
inc
ja
dec
fcoml
loopne
test
jl
into
test
sbb
adc
arpl
stc
vcvtdq2ps
sbb
fisubrl
daa
push
cmpsb
fsubrl
push
fcmovu
xor
pop
ja
int3
xchg
fstpt
lock
fwait
push
pushf
inc
add
test
sub
int3
cvtps2pi
ret
scas
xchg
xor
cwtl
mov
adc
mov
sub
scas
sbb
cmp
fdivrl
cmp
outsb
fldl
sub
mov
or
mov
add
inc
in
scas
cli
cmc
gs
mov
lods
ret
divb
ds
sbb
fadds
subl
cld
in
jae
push
pushf
imul
xchg
repnz
xor
sbb
or
retw
pusha
popa
xlat
mov
fstl
addr16
jns
fstp
jbe
popf
popf
imul
scas
aam
cmp
push
adc
jecxz
mov
faddl
es
ret
call
lahf
xchg
jge
imul
push
cmp
dec
adc
ret
testl
je
jmp
insb
int
mov
adc
iret
fisttpl
outsb
mov
dec
xchg
filds
fisubl
add
jb
cmp
xor
mov
leave
mov
adc
cld
or
rcl
cli
nop
int3
mov
sub
add
mov
push
push
push
jnp
jbe
push
jl
loope
sub
push
inc
mov
add
cmp
js
dec
dec
mov
xchg
mov
and
mov
std
or
dec
adc
sub
adc
mov
jmp
mov
push
mov
into
mov
sub
adc
adc
add
iret
mov
imul
push
in
push
mov
mov
add
popa
dec
inc
mov
jg
pop
scas
fsubl
mov
cmp
popf
sub
clts
pop
cltd
mov
leave
cmpsb
and
sub
pop
jecxz
repz
and
jae
sbb
cmp
stos
lahf
data16
repz
in
pop
dec
aas
sbb
rolb
mov
push
in
add
sti
mov
or
mov
inc
stos
and
icebp
sbb
daa
push
test
dec
adc
sbb
cmp
adc
mov
or
adc
cwtl
jle
jno
aam
mov
add
loope
fwait
adc
xchg
movsb
sbb
sub
cmp
sub
xor
sbbb
pop
inc
rorb
lods
and
cmpsb
xlat
jo
aas
imul
cmp
testb
inc
jmp
es
and
rcr
xor
sub
dec
out
test
dec
ret
cmp
test
dec
subb
sub
into
inc
add
call
jg
outsb
scas
xor
inc
test
daa
and
lcall
repz
pop
xor
xchg
mov
mov
scas
decl
in
jmp
lods
adc
ret
cmp
cmp
or
push
xlat
xchg
fnstsw
cmp
push
and
push
sub
inc
arpl
cmp
sub
mov
ficompl
or
pop
or
ljmp
sbb
icebp
daa
repz
or
xor
lahf
enter
iret
sbb
push
rcl
imull
lds
inc
out
data16
je
mov
dec
pushf
fdivrl
shlb
int3
xchg
adc
popa
fcmovbe
inc
insb
imul
daa
out
mov
pminsw
push
stos
mov
dec
xor
and
pushf
adc
xchg
mov
mov
pushf
aaa
movsl
shl
aam
test
loop
push
mov
pushf
fmuls
sti
aad
xchg
xchg
push
adc
stc
or
adc
push
ret
orb
push
sub
daa
loopne
xor
adc
lods
test
in
negb
daa
push
out
jb
or
jg
mov
fdivrl
inc
mov
in
call
stos
fbld
dec
ficoml
lods
fstl
add
daa
mov
xor
fisttpll
lret
scas
mov
stc
lds
adc
sti
pop
mov
mov
adc
jb
js
mov
xor
cmp
xor
fidivrl
push
cmp
cmp
push
fwait
cmpsl
gs
pushf
outsb
xchg
rorl
iret
cmp
jno
dec
adc
int3
lahf
insl
ret
gs
mov
inc
mov
pop
push
rcll
jmp
pop
push
std
inc
shr
and
add
push
xor
roll
sub
divl
push
sub
or
jmp
cmp
cmpsb
push
xchg
fcmovb
inc
mov
sahf
jne
aam
out
inc
push
clc
xchg
jg
adc
mov
mov
fsubs
cmc
bound
mov
hlt
pop
xchg
stc
movsb
or
rolb
push
dec
add
xchg
mov
into
insl
mov
push
pop
addb
testl
fcmovnb
sarl
xor
repnz
cmp
cld
imul
lods
fiadds
adc
dec
pop
inc
mov
testl
add
cltd
jne
cmp
jle
pusha
mov
inc
mov
cmpb
ss
jle
mov
jbe
lods
cs
es
xor
push
xor
mov
fsubs
sahf
sbb
pop
xorl
lret
in
xor
cmp
pusha
xchg
inc
add
vmovhlps
repz
hlt
push
cs
pop
rcr
inc
not
mov
cltd
jb
mov
dec
aad
orb
cmp
inc
xchg
ret
clc
dec
jle
inc
inc
imul
mov
std
or
mov
push
cmpsb
xlat
sbb
jmp
push
call
cwtl
xchg
insl
pop
es
outsb
inc
aam
jmp
ficomps
scas
aad
clc
mov
ds
pop
xchg
and
ret
repnz
fidivrl
data16
daa
cli
add
int
mov
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
jne
outsb
or
adc
jnp
inc
fsubl
scas
or
xor
jmp
in
jno
mov
iret
popa
jmp
cmpsl
ljmp
scas
into
sub
adc
imul
mov
stos
cltd
mov
loopne
icebp
lods
in
pushf
and
int3
inc
cmc
loopne
popa
xor
sub
sbb
mov
jle
xchg
jp
push
inc
or
mov
sub
call
xor
loope
arpl
les
sbb
sbb
mov
mov
or
sbb
in
jg
jecxz
fwait
xchg
lods
leave
jb
jno
jge
test
xchg
test
jne
mov
mov
clc
fmuls
iret
inc
fst
adc
stos
xor
cmp
add
addb
cmp
push
cmp
fisubrs
push
push
adcl
loop
cmp
js
xor
int
stos
popa
pop
js
jmp
out
ret
or
add
xchg
pusha
sahf
add
clc
js
lcall
jecxz
jge
mov
add
cmp
into
or
cmpsl
push
sbb
cmc
and
ss
push
dec
testb
rcll
int
cli
adcl
lret
jnp
test
or
mov
cwtl
lods
bound
add
or
out
pop
lcall
cmpsl
arpl
sbb
pop
jbe
dec
xchg
into
es
push
add
xchg
mov
cmpsl
push
xchg
fs
jo
outsb
ret
fnstsw
mov
ja
xchg
gs
out
cli
mov
in
nop
pop
sub
das
lahf
jnp
push
mov
stos
jge
dec
loop
aaa
test
fsubr
out
mov
sub
lods
or
fcomip
jb
js
mov
mov
iret
popf
lret
pushw
shrl
inc
adc
push
mov
insl
jle
adc
fisubl
cmp
jns
fbstp
add
sub
cltd
out
das
jo
pusha
int3
push
mov
xlat
repz
ss
ja
mov
xor
mov
mov
es
ss
xor
lea
sbb
push
enter
test
jge
mov
lcall
stos
ffree
icebp
or
jmp
or
pop
or
adc
sbb
rcrb
sub
mov
sbb
or
xchg
rcrl
ja
mov
out
push
push
in
fnstenv
int3
xchg
cmp
or
aad
test
xchg
ret
pusha
sub
push
lcallw
jp
jo
sub
scas
into
sbb
mov
jg
imulb
mov
daa
push
push
add
sub
rcll
fists
jns
lods
shll
hlt
xor
repnz
nop
daa
ficoml
xor
cltd
lea
js
movsb
push
es
scas
xlat
push
iret
sar
loop
push
mov
pcmpgtw
jmp
add
fstpl
sub
ds
mov
push
add
imul
mov
adc
xchg
imul
cmpsb
adc
rcll
inc
out
mov
mov
ss
testl
call
jo
mov
mov
dec
xor
ret
add
mov
push
jns
add
xor
lods
or
rorb
ss
out
xor
sti
add
xor
lea
stos
inc
ret
popaw
lcall
dec
aaa
inc
xchg
out
xchg
mov
push
inc
lods
or
lock
pop
cld
imul
pop
lcall
jb
inc
ret
pop
cmp
xchg
mov
imul
loope
popf
stos
jns
sub
mov
mov
aaa
movsl
dec
das
pop
ljmp
xor
iret
test
loope
sbb
inc
sti
jmp
stos
movsb
mov
pusha
int3
mov
sub
cs
into
and
in
into
mov
pop
inc
mov
jge
out
cmp
mov
xor
daa
sub
or
dec
testl
test
dec
stos
popa
vcvttps2dq
test
js
iret
adc
pop
loope
dec
pop
push
adc
fimull
xchg
ja
jge
test
push
xchg
inc
insl
mov
lods
mov
lret
dec
mov
das
nop
mov
add
pop
inc
gs
mov
test
adc
inc
and
iret
pop
in
clc
adc
adc
sbb
cmpsl
inc
push
sbb
pop
sub
subb
cmpsb
adc
insb
pushf
repz
pop
mov
iret
xchg
add
add
xchg
push
movsl
sub
mov
xor
icebp
push
dec
scas
out
pop
in
jmp
or
adc
outsl
out
scas
icebp
aaa
inc
dec
mov
movsb
adc
xor
int
lahf
add
mov
pushf
lret
scas
push
push
fbstp
out
cmp
inc
mov
pusha
out
aaa
aaa
dec
std
jae
subl
jbe
push
sub
inc
push
aam
cmc
mov
and
sbb
mov
insl
inc
cmp
js
fnstenv
cmp
push
arpl
xchg
cmp
pop
aaa
jmp
push
xchg
mov
shll
push
lret
lret
pop
add
jmp
ret
fsubl
out
mov
xchg
sub
xchg
dec
dec
lahf
xor
mov
mov
jno
mulb
fstpl
push
adc
std
ja
sbb
stos
pushf
dec
add
mov
insb
push
lcall
sbb
shl
mov
cmp
xchg
addl
out
jle
test
sbb
dec
mov
pop
push
nop
test
ljmp
cmpsb
sbb
mov
inc
iret
add
pop
lods
jnp
jl
int3
mov
dec
jecxz
not
mov
cld
std
cld
outsl
and
fwait
and
mov
sbb
cwtl
int3
pop
mov
arpl
pop
adc
jp
addb
cmp
pop
push
jbe
add
jmp
out
fmul
inc
xchg
ljmp
in
inc
mov
ret
dec
xchg
add
xchg
jecxz
xlat
jns
test
xchg
add
stc
jb
shrl
push
add
arpl
xchg
push
push
repnz
mov
aad
mov
stc
sub
cmpsl
inc
adcl
push
mull
or
or
insb
scas
inc
mov
jne
pop
adc
clc
out
jno
dec
adc
bound
mov
addl
xor
or
and
jle
sbb
mov
rorl
clc
ds
fstpl
ret
lds
push
ret
movsl
lret
cli
movsl
pop
arpl
push
test
cmp
jle
xor
dec
or
and
bswap
xchg
cmc
lock
push
mov
lret
xor
in
dec
int3
pop
push
xchg
inc
jmp
add
aad
mov
lret
leave
mov
je
cmc
or
pushf
push
ret
mov
mov
xor
push
sbb
mov
mov
test
imul
inc
mov
es
cmpsb
inc
mov
push
cmp
aaa
mov
sbb
cmpl
bswap
ret
addr16
cld
cmp
inc
xor
sub
stc
int3
mov
cs
cmp
jmp
mov
test
jns
xchg
push
jns
arpl
addr16
xchg
cmp
test
inc
xor
jge
in
cmp
jp
hlt
inc
push
lds
test
loop
stos
mov
mov
notb
hlt
pop
jmp
pop
out
imul
sub
aas
add
dec
sub
mov
loope
lret
jbe
std
imul
sbb
pop
lahf
push
lahf
dec
jb
sbb
jno
jle
sarb
cmp
outsb
cli
jb
dec
cmpsl
cltd
iret
lahf
cmp
jo
icebp
loope
lahf
dec
jne
add
adc
lea
sub
and
cmp
xor
jmp
rol
inc
jge
xchg
in
gs
call
mov
or
push
dec
in
mov
add
sub
jno
fwait
iret
jmp
xchg
scas
test
dec
into
ds
ja
lahf
mov
xchg
lret
mov
mov
cmpb
je
stc
adc
or
cmp
mull
leave
data16
lahf
mov
in
mov
push
mov
add
lock
imul
add
sub
adc
imul
pop
dec
add
sbb
and
ds
in
sbb
out
outsl
pop
test
pop
cmpsl
fdivrl
dec
mov
loope
sbb
inc
add
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
notb
adc
sti
fists
popf
insb
xchg
mov
and
mov
dec
mov
icebp
pop
aam
add
xchg
das
es
or
pop
pop
push
jle
inc
dec
mov
das
jge
sbb
stos
push
dec
pop
iret
dec
dec
cmp
in
loope
movb
clc
mov
mov
xchg
mov
mov
call
test
sbb
xor
mov
leave
popaw
mov
cmp
pushw
or
in
xchg
repnz
lea
roll
inc
aam
test
inc
lds
mov
xor
mov
in
outsb
test
pusha
xor
xchg
push
push
loop
push
or
push
pop
dec
jo
sub
xchg
mov
cmp
mov
push
xor
outsl
dec
hlt
mov
cli
mov
jne
mov
jnp
mov
sbb
or
fdivs
dec
ret
out
mov
out
cmpsb
xor
insl
lock
test
xchg
sub
rcl
mov
test
mov
cmp
mov
scas
sbb
test
pop
push
or
es
cmpl
dec
icebp
enter
xchg
add
xor
pop
push
mov
in
mov
mov
idiv
divps
in
dec
push
rcrl
cwtl
and
inc
push
int3
addr16
mov
rorb
inc
js
adc
inc
jle
leave
mov
and
jg
movsb
pop
dec
xor
xor
call
aas
adc
jg
xor
xchg
fcmovb
ljmp
add
cmp
mov
fnstcw
jne
mov
add
test
cmp
and
insl
dec
dec
sahf
and
mov
in
sbb
sub
daa
pushf
jbe
gs
lock
cmp
pop
ret
xor
mov
xor
xor
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
