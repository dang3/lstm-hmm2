push
mov
sub
push
orl
push
lea
addl
push
subl
push
xorl
call
sub
mov
movl
push
addl
xor
inc
push
push
call
subl
test
movl
lea
movl
je
push
push
call
jmp
xorl
push
mov
addl
push
orl
push
movl
call
test
je
push
movl
jmp
push
sbbl
push
xorl
push
andl
call
test
movl
lea
movl
push
movl
je
movl
push
movl
jmp
adcl
push
subl
call
addl
test
je
push
jmp
sbb
movl
xor
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
xor
or
dec
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
lea
dec
mov
lea
mov
and
mov
and
mov
mov
mov
movzwl
sub
mov
mov
dec
xor
adc
mov
subl
add
movl
mov
mov
cmp
jne
andl
mov
xorl
mov
mov
addl
xor
add
mov
addl
mov
andl
xor
andl
add
mov
mov
mov
subl
mov
andl
mov
mov
adcl
mov
mov
adcl
push
mov
push
movl
orl
mov
push
sbbl
movl
call
adcl
test
movl
lea
push
je
push
movl
jmp
subl
push
sbbl
call
test
je
movl
push
movl
jmp
mov
xor
add
jmp
push
push
xorl
push
call
xorl
test
lea
movl
push
movl
jne
sbbl
push
andl
call
test
jne
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
xor
movl
lea
push
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
lea
addl
push
mov
orl
pushl
call
and
mov
mov
andl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
lea
sbb
mov
mov
sbbl
xor
xorl
xor
subl
add
mov
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
addl
push
orl
push
push
xorl
call
sbbl
test
movl
lea
push
movl
je
movl
push
movl
jmp
movl
push
jmp
push
jmp
orl
push
call
test
je
push
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
call
jmp
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
orl
push
sub
push
xorl
xor
push
subl
mov
xorl
call
test
lea
movl
push
je
movl
push
jmp
sbbl
push
call
andl
test
je
movl
push
movl
jmp
mov
movl
cmp
movl
jne
addl
push
push
subl
push
call
test
movl
lea
push
je
movl
push
jmp
addl
push
addl
call
sbbl
test
je
movl
push
movl
jmp
andl
lea
mov
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
test
movl
je
push
push
adcl
push
andl
call
test
movl
lea
movl
push
movl
je
movl
push
movl
jmp
adcl
push
addl
call
test
movl
je
movl
push
movl
jmp
or
mov
sub
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
pushl
pushl
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
addl
mov
dec
cltd
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
call
jmp
add
mov
adc
andl
xor
mov
sbb
mov
or
mov
adc
mov
mov
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
adcl
andl
xor
mov
mov
mov
sub
mov
orl
xor
movl
mov
movl
cmp
movl
jne
mov
cmp
movl
je
mov
and
mov
mov
addl
mov
xor
add
movl
adc
addl
xor
decl
xor
movl
cmp
movl
jne
cmp
movl
jne
mov
sub
mov
xor
sub
mov
mov
mov
xorl
add
mov
movl
mov
movl
jmp
mov
cmp
je
adcl
mov
mov
xor
add
cmp
movl
je
push
push
push
sbbl
call
test
lea
push
movl
je
push
movl
jmp
push
call
test
movl
je
movl
push
jmp
sbb
mov
notl
mov
mov
movl
mov
pushl
subl
mov
subl
pushl
add
mov
mov
pushl
addl
call
notl
mov
movl
mov
mov
movl
jmp
push
xorl
push
andl
push
negl
call
adcl
test
lea
movl
push
movl
je
push
movl
jmp
adcl
push
andl
call
xorl
test
movl
je
movl
push
jmp
mov
xor
add
adc
mov
mov
addl
xor
adcl
add
cmp
movl
jne
add
mov
mov
subl
mov
adcl
xor
orl
add
cmp
movl
jne
incl
push
sbbl
push
sbbl
push
call
test
movl
lea
movl
push
movl
je
movl
push
jmp
sbbl
push
subl
call
subl
test
movl
je
movl
push
movl
jmp
sbb
mov
push
sbbl
xor
add
push
subl
push
pushl
orl
pushl
adcl
call
andl
push
subl
push
movl
push
addl
call
test
lea
push
movl
je
push
movl
jmp
push
call
subl
test
movl
je
push
movl
jmp
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
add
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
xor
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
push
lea
mov
push
lea
push
mov
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
mov
test
je
push
push
push
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
push
push
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
xor
inc
push
push
call
test
lea
push
je
push
call
jmp
mov
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
push
push
call
test
lea
push
je
push
call
jmp
push
call
test
je
push
push
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
sub
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
movl
mov
xorl
push
or
mov
xor
mov
push
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
mov
add
cmp
je
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
orl
xor
andl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
jmp
lods
dec
hlt
xchg
mov
pop
ss
data16
adc
jo
sbb
jo
cs
cmp
jns
gs
pusha
popa
dec
std
push
arpl
stos
jp
push
iret
push
inc
cmp
inc
jg
mov
jmp
imul
xor
sub
andl
mull
push
or
and
inc
push
and
bound
movsb
jmp
inc
and
ret
adc
jb
jnp
xchg
pop
cmpl
pushf
mov
xorl
andb
insl
out
push
xor
mov
fiaddl
push
icebp
push
mov
cmc
loopne
lret
fisttpl
xlat
cmpsl
stos
subb
xchg
add
iret
inc
pop
push
push
imul
inc
stos
dec
xchg
aas
fdivrs
jns
push
jmp
pop
lods
jbe
daa
popf
jecxz
xchg
insb
outsl
aaa
pop
hlt
xchg
cmp
fistl
push
xchg
sar
je
xor
sbb
fcmovu
iret
pop
aaa
mov
pusha
repz
adc
sti
fsubrs
gs
loopne
sub
pusha
roll
lock
scas
add
push
mov
mov
imulb
int3
add
repnz
cli
fs
add
mov
out
iret
and
shll
test
jecxz
popa
scas
sahf
jp
sbb
xor
in
je
and
lods
repz
mov
push
insb
or
jle
mov
xchg
daa
outsl
cmp
or
jmp
pop
push
add
lock
testl
out
push
mov
iret
das
idiv
lret
repnz
enter
push
ds
sub
xor
loopne
in
inc
out
mov
inc
loop
in
mov
test
inc
pop
stc
rol
jmp
fs
fsubrl
and
div
aas
sub
not
push
xor
mov
jnp
mov
lahf
or
or
xchg
fdivr
dec
fmulp
enter
mov
jne
jl
mov
fsubrs
outsl
dec
fcomi
push
lods
out
jno
call
mov
jns
mov
stc
mov
cltd
push
sub
and
dec
xor
or
mov
mov
xchg
mov
rcrl
int
mov
scas
cmpsb
cwtl
ficompl
xlat
mov
xor
push
arpl
mov
mov
jne
jne
sahf
xor
je
or
push
stos
xor
push
jmp
mov
out
bound
aaa
dec
rcrl
xor
loopne
push
sbb
not
xchg
pop
sti
jp
or
test
das
ror
xrstor
jmp
cmpsl
sbb
add
inc
pusha
clc
rolb
mov
sbb
xor
dec
sub
jg
and
push
movsl
inc
pop
push
xlat
stos
mov
pop
in
push
sbb
dec
sbb
pushf
jg
ds
jb
mov
scas
int
movsl
push
mov
cmp
or
cmp
test
ja
fs
jae
push
lock
lock
push
xchg
fs
and
inc
repz
fistl
lahf
fs
sbbl
insl
popa
mov
or
loopne
push
or
ret
stos
ret
mov
int3
cwtl
or
jle
mov
fidivl
mov
xor
lcall
add
aam
aam
stos
fidivl
fnstsw
out
pusha
and
les
insl
xchg
cs
shrl
mov
sbb
cli
mov
in
mov
js
xor
stos
adc
fcoms
das
xlat
adc
int
sub
add
loopne
jl
lods
nop
xchg
jne
fmul
cli
pushf
out
ret
push
scas
add
jg
jb
xchg
nop
lcall
jns
fsts
inc
mov
mov
inc
in
mov
nop
icebp
mov
jo
mov
jne
inc
mov
mov
scas
jecxz
dec
jmp
divl
add
lret
push
mov
clc
dec
cli
xchg
mov
mov
cltd
pop
test
int
insb
test
ret
mov
dec
mov
notl
fldenv
sbb
mov
push
add
aam
out
stc
adc
adc
imul
aaa
rolb
adc
push
sbb
push
push
sub
loope
mov
rclb
inc
adcb
jl
mov
fldt
dec
and
pushf
adc
inc
popf
sbb
gs
rolb
sub
gs
jecxz
ds
mov
adc
jmp
and
jge
mov
xor
int3
pop
aas
mov
gs
pop
aas
fadds
push
push
jae
cmc
sub
jle
testl
mov
movsl
cltd
clc
stos
fildl
clc
jle
mov
ja
hlt
mov
icebp
sbb
ret
pop
xchg
jns
mov
sub
xor
test
jb
add
mov
xchg
andb
or
clc
bound
das
xchg
je
movsb
fs
mov
pop
movsl
jmp
inc
fildll
fiadds
cltd
shrb
cld
jnp
jo
sbb
notb
push
or
xchg
dec
js
adc
push
mov
cmp
push
movsl
test
push
in
jns
push
adc
xlat
and
cmp
mov
cmp
inc
into
inc
lahf
cmp
cmpsl
pop
sbb
and
mov
mov
xchg
pop
push
mov
out
ret
inc
push
jns
mov
cwtl
repnz
inc
movsb
test
pop
out
andb
add
add
add
mov
test
out
enter
push
pushw
in
out
pop
cmpsb
shrb
xchg
pop
dec
es
inc
inc
push
inc
inc
scas
mov
lock
xchg
mov
mov
sbb
js
clc
mov
jo
dec
or
outsb
les
cmp
mov
xchg
das
pop
popa
mov
adc
inc
cmp
mov
test
test
push
inc
shrb
cmp
mov
sti
xor
in
mov
push
push
mov
inc
cmp
popa
div
arpl
xor
sahf
jne
outsb
xchg
dec
mov
pop
add
xor
jne
sub
and
test
in
cs
aas
mov
inc
in
push
ljmp
xchg
push
mov
adc
add
in
cltd
xchg
mov
sub
fstpl
push
arpl
test
push
loop
js
cmc
sbb
lock
pop
sbb
dec
pushf
lods
xchg
gs
outsl
xorl
clc
dec
adc
mov
iret
cmc
push
lahf
pop
pop
adc
call
or
ds
jp
inc
lods
mov
aas
jno
fwait
rorl
and
pop
aaa
push
mov
imul
popa
jns
lock
pop
mov
mov
pop
add
divl
in
aaa
sub
es
iret
popf
pushf
mov
lock
mov
or
dec
cwtl
js
shrb
jo
not
ds
xchg
sbb
in
sbb
dec
lea
jl
push
jne
mov
fcompl
mov
cmp
pop
inc
leave
mov
daa
sbb
ljmp
int3
insb
pop
fadd
fdiv
loopne
lret
push
adc
cmp
inc
rorb
mov
shl
shrl
movb
dec
fsubs
sub
cld
repz
scas
mov
clc
push
iret
in
stos
ja
mov
aam
jp
sbb
and
push
mov
sbb
fistpll
cld
pusha
or
xor
inc
test
inc
cmpsb
xorb
cli
incl
or
lahf
loope
mov
jb
pusha
ret
enter
sti
mov
loope
insb
fwait
popf
icebp
adc
data16
movsb
insb
mov
mov
jae
repz
mov
adc
inc
mov
std
dec
int
cs
or
xchg
add
out
sti
mov
sub
negb
jno
sub
xor
jns
xor
xchg
adc
jb
push
mov
jg
adcb
repnz
inc
dec
mov
fwait
lret
lock
fs
outsb
repz
jge
sub
nop
shlb
sbb
mov
jo
mov
mov
data16
out
pop
pop
sahf
call
jmp
push
mov
std
adc
out
in
frstor
jge
rcrb
cli
jecxz
flds
xchg
and
inc
adc
out
mov
iret
test
pusha
cmpsl
dec
cld
xlat
dec
dec
and
xchg
mov
mov
jbe
cmc
push
adc
int3
std
jo
leave
mov
outsl
dec
out
and
pop
insb
insb
mov
pop
and
mov
imul
dec
icebp
push
in
pop
pop
dec
inc
fs
sti
test
in
mov
mov
adc
push
cmp
ljmp
mov
in
jp
outsb
mov
xchg
inc
add
push
jb
aad
lds
test
jno
out
ss
adc
xor
inc
xchg
fistpl
dec
push
outsb
mov
adcb
arpl
stos
in
test
push
cmp
dec
adc
mov
dec
ja
cmp
push
add
add
ficoml
sub
xor
push
and
in
arpl
clc
js
ret
clc
loopne
mov
mov
xor
int
dec
push
movsl
mov
inc
aam
rcl
mov
in
inc
sbb
dec
sub
mov
cmpsl
pop
test
sub
xlat
dec
push
mov
mov
push
xchg
in
cmp
aad
std
jo
pop
sub
hlt
xlat
pop
push
es
and
cmpsb
mov
cmpsb
cwtl
adc
add
fidivl
idivb
mov
xchg
jle
test
push
xchg
pusha
leave
push
mov
aad
inc
aam
shll
xchg
sar
cmp
test
loop
imul
xchg
pop
inc
data16
and
pop
ficomps
sahf
ljmp
sub
lahf
cmp
mov
rcrb
cwtl
add
jge
mov
aad
add
fimuls
lds
addr16
aaa
adc
mov
enter
xchg
mov
rep
jnp
cmp
push
sbb
cs
add
push
popa
out
ret
fldl
cmp
clc
cmp
xchg
leave
adc
loopne
dec
sub
mov
push
out
nop
inc
ds
out
pop
pop
mov
ds
loopne
out
repz
push
inc
sub
cmp
fimull
mov
bound
or
inc
mov
jp
jge
mov
idivl
jno
popf
jns
rcrb
or
mov
cwtl
pop
mov
pop
cmp
orl
sbb
push
xor
jae
lret
test
in
loop
dec
mov
pop
sub
cltd
jecxz
ret
sbb
sbb
cmp
pop
sub
lods
or
jl
xchg
adc
rcll
loop
lcall
push
push
mov
lahf
pop
cmp
mov
jmp
in
and
mov
inc
inc
adcl
sahf
dec
push
pop
inc
push
jg
xchg
bound
fucomi
jecxz
cmp
lahf
dec
adc
pop
jp
arpl
xchg
push
sti
sti
push
mov
inc
repnz
cmp
int
sarl
dec
add
push
jo
and
and
push
inc
hlt
loope
xchg
dec
pop
subl
or
inc
outsb
add
add
xor
or
mov
inc
cltd
cltd
decl
aad
pop
stos
jne
aam
and
es
ret
in
jl
push
leave
movsl
daa
jmp
shlb
stos
pop
lahf
and
cmp
imull
sbb
push
push
scas
add
lret
addb
in
xchg
cmp
sbb
jl
push
pop
add
aad
cmpsl
hlt
sti
or
dec
pop
xor
sbb
in
sub
sub
imulb
sahf
mov
sbb
inc
jbe
cwtl
xor
and
sbb
jne
int
xchg
mov
imull
inc
dec
mov
push
pop
push
xor
mov
mov
data16
jmp
lock
insl
inc
xor
cmp
imul
rolb
xchg
testb
lods
push
test
cmp
xor
lods
mov
addr16
aam
sbb
push
iret
mov
jl
or
mov
and
jae
cmp
sarl
insl
and
push
xchg
cmpl
sub
push
and
icebp
loopne
pushl
mov
daa
adc
scas
xor
jl
xchg
jb
inc
and
fwait
int3
jecxz
insl
in
inc
jo
mov
cmpsb
scas
fdiv
or
popf
das
jnp
iret
enter
popa
pop
dec
push
data16
jbe
or
add
hlt
jmp
inc
popa
jne
andl
in
jg
inc
pop
jge
bound
ja
stos
fwait
cmp
dec
out
cltd
sbb
outsl
cmp
shll
xchg
and
jle
sti
fiadds
dec
inc
xchg
mov
call
icebp
daa
loope
insb
cltd
push
mov
out
or
sbb
loop
idivb
inc
jnp
popa
jne
cmc
add
jo
add
daa
mov
hlt
sbb
inc
mov
adc
repnz
sbb
lods
fcoml
test
gs
cvtpi2ps
out
and
cld
sbb
rorl
mov
sub
xor
leave
push
or
or
gs
fcoml
xor
mov
pop
pop
add
mov
call
jbe
push
push
sahf
adc
or
cmpsl
shrb
rdpmc
or
mov
push
xchg
mov
lock
mov
mov
es
clc
xchg
aaa
adc
bound
jnp
add
and
sbb
test
or
insl
dec
jecxz
xchg
nop
xor
cs
xor
cmp
cmp
xor
inc
jae
push
sahf
inc
dec
sahf
lock
inc
mov
or
testb
ljmp
fidivrs
adc
and
jno
mov
and
add
cmp
jmp
in
aas
jge
push
mov
xchg
jo
sub
push
pop
jge
push
pop
cmpsl
pop
and
pop
inc
cli
cmpsl
xchg
xor
xchg
shl
nop
and
dec
fiaddl
je
push
call
xchg
inc
lock
push
mov
jo
mov
push
adc
outsb
mov
sbb
dec
adcb
adc
and
lret
popf
jae
xor
in
xlat
cs
xor
and
push
es
loop
mov
ljmp
push
lcall
dec
pop
sub
inc
add
out
inc
or
test
lea
push
sti
sub
sbb
ss
ret
cli
sbb
adc
jbe
aad
sbb
mov
fldt
js
and
cwtl
pop
xchg
fstpl
adc
cmp
cmp
add
data16
fstl
scas
cmc
dec
push
add
fidivrs
clc
mov
inc
adc
sbb
mov
sbb
adc
sub
cmp
sbbb
and
aaa
int
mov
push
sti
cltd
sbbl
inc
push
stos
das
push
jno
flds
mov
mov
cmpsb
fstpl
mov
xchg
movsl
adc
and
aaa
sbb
xorb
add
daa
mov
cmp
stos
pop
push
stc
out
xchg
test
pop
dec
mov
xchg
ret
dec
clc
dec
cmp
enter
addl
notl
mov
into
mov
fisttpll
insb
repz
andb
nop
sbb
push
dec
fdivrl
fcmovnbe
xor
sbb
ds
mov
and
fistl
mov
repnz
ret
mov
int
je
cmp
xchg
sub
gs
inc
jnp
pop
fistpll
pop
push
cmc
hlt
add
fldenv
aas
sub
or
xchg
rcrb
pushf
enter
stos
hlt
cmp
mov
add
enter
mov
leave
cld
and
mov
jae
mov
mov
mov
inc
or
clc
fsubs
add
test
inc
pop
popa
inc
adc
inc
add
pop
cmpsl
sbb
or
jmp
out
out
cmpsb
cltd
sbb
jb
std
jb
mov
scas
mov
in
icebp
scas
push
and
pop
loopne
push
jge
aaa
sti
adc
es
add
aad
xor
cmc
mov
dec
xchg
cld
sti
imul
inc
mov
jp
fwait
rclb
inc
cmc
out
jno
pop
jae
cli
xchg
je
jb
in
leave
fwait
jb
pop
or
xchg
scas
fdivl
jbe
xor
sbb
lds
call
xlat
add
xor
lcall
mov
jge
idivl
mov
mov
or
or
adcb
pusha
jno
add
jle
loop
jno
add
ds
dec
scas
pop
mov
scas
sti
push
mov
je
incb
mov
mov
pop
packssdw
push
loop
daa
mov
push
test
mov
rorb
pop
stos
addr16
loope
mov
push
inc
out
adc
push
adc
pop
push
lds
mov
mov
addr16
xor
roll
push
jae
mov
sub
mov
sbb
mov
push
sar
push
or
mov
outsb
mov
pop
iret
pushf
adc
xchg
cmp
leave
pop
push
ja
pop
ja
lods
add
adcb
ss
xchg
pop
mov
arpl
inc
fldt
sbb
test
xor
jb
arpl
inc
movsb
mov
arpl
adc
nop
inc
mov
sub
mov
xor
nop
add
nop
enter
bound
mov
xor
dec
inc
test
sarb
or
outsl
cmp
sbb
jbe
out
cli
adc
cmc
adc
lock
out
inc
jle
sub
out
stos
loopne
mov
mov
ficompl
mov
push
clc
or
addr16
fwait
aas
pushf
aas
inc
lods
rcrl
gs
lock
pop
scas
rcrl
pop
xchg
insb
rcrl
mov
sub
sbb
xchg
dec
pop
cmpsb
je
jl
dec
imul
adc
sub
pusha
mov
mov
mov
idivb
sub
mov
jl
bound
lods
add
and
movsl
push
dec
stos
xchg
bound
pop
sbb
jmp
or
je
jne
shlb
int3
lret
cld
sahf
lcall
daa
mov
stos
nop
faddl
rol
mov
cli
into
xor
mov
mov
clc
jnp
or
push
mov
lahf
loope
dec
mov
sbb
push
pop
mov
aas
inc
or
push
js
inc
jne
sub
dec
adc
test
pop
jle
mov
sub
fwait
xchg
lahf
outsl
xchg
into
loop
cltd
pop
sub
stc
push
shr
adc
mov
imul
stos
sub
nop
shl
dec
fsub
adc
cmp
mov
xor
xor
xlat
pop
dec
scas
mov
xor
arpl
sbb
or
ds
ret
bts
lods
jmp
insl
data16
scas
mov
ljmp
mov
cmp
int3
mov
or
pop
sahf
mov
mov
dec
test
mov
rolb
xor
test
adc
mov
xchg
mov
sbb
push
jno
scas
cmp
and
jno
push
xor
adc
repz
bound
leave
pusha
out
aad
cmp
xchg
cld
andb
or
in
add
mov
sub
sti
out
push
inc
imul
add
js
push
push
push
pop
dec
inc
fistps
xor
das
xchg
stos
int
jae
jne
sub
std
push
negb
outsb
xor
pop
gs
mov
dec
adc
jecxz
jecxz
sbb
cwtl
pop
jl
mov
and
xor
cli
cmc
les
dec
mov
outsb
rclb
add
jge
aas
pop
outsb
js
xor
mov
stos
and
bound
js
cmp
push
push
leave
loopne
mov
push
xchg
mov
inc
sub
mov
lods
fcoms
sbb
dec
or
popa
mov
aam
push
ret
in
sub
out
lea
fistpl
push
hlt
mov
je
mull
jp
dec
leave
add
and
fadds
lea
xchg
icebp
fs
mov
xor
mov
nop
mov
xor
cmpsl
mov
lods
andb
jne
sbb
js
stos
lea
add
dec
out
cwtl
das
pop
or
push
cmp
and
vmovss
adc
add
cmc
test
sahf
fsts
ss
out
ds
xor
iret
out
stos
shrl
sbb
test
out
fsubl
jl
cmp
testl
inc
dec
jo
pop
push
inc
fildll
pop
jl
movsb
dec
stos
sub
fcoml
clc
or
push
ror
sub
dec
aad
mov
data16
dec
inc
je
push
imul
lahf
sub
cs
cld
xchg
add
inc
jns
sarb
test
mov
and
inc
lds
inc
and
mov
xchg
shll
pop
add
xchg
fisubrs
add
popf
test
shrb
gs
sub
xor
add
sbb
dec
imul
sti
out
mov
push
inc
adcb
fs
jo
mov
and
mov
add
outsl
sbb
fdivrs
jmp
cmp
sub
push
fstl
std
mov
fimull
outsb
int
lahf
cvtps2pi
icebp
xchg
add
repz
bound
xchg
inc
jl
loopne
jb
or
pop
inc
shlb
mov
dec
cmp
mov
les
insl
pushf
scas
xor
loop
dec
jns
sub
pop
mov
std
rorl
int
js
inc
faddl
dec
xchg
add
mov
out
imul
sbb
call
jno
sbb
jp
mov
mov
shlb
inc
add
imul
cmp
ss
xor
mov
fcoms
mov
in
fmuls
repz
sub
mov
call
or
dec
dec
clc
push
adc
cwtl
enter
add
jbe
shl
int3
addr16
outsb
sub
out
cmp
leave
scas
pop
xor
mov
pop
xchg
popf
jecxz
cld
nop
push
fwait
das
cs
test
push
mov
cmp
rcrl
pop
push
xchg
mov
mov
mov
jnp
mov
mov
xchg
fnsave
jb
cwtl
inc
jge
and
xchg
add
sbb
adc
into
jns
dec
inc
cmp
out
fsub
push
mov
pop
les
jge
mov
pop
fstps
jno
and
jns
inc
mov
sub
inc
je
in
in
loopne
push
sbb
int
repnz
mov
addr16
hlt
sti
lods
ds
jp
cli
sar
test
push
in
dec
sbb
and
pop
dec
jge
xchg
pop
dec
leave
popa
rorl
cmp
pusha
imul
rcrb
jne
jge
or
mov
pop
pusha
lods
in
call
test
sub
mov
mov
fidivs
lds
inc
cmp
xor
mov
fcoms
xchg
cltd
loopne
int
in
out
int3
fnstsw
call
in
xor
xchg
pop
xchg
mov
mov
iret
fwait
jnp
mov
aam
and
sub
std
and
aam
and
mov
cwtl
ja
jb,pt
lahf
shll
xchg
data16
or
fildll
test
xchg
add
inc
roll
enter
inc
int
push
add
mov
imul
data16
adc
jnp
fadd
rorl
mov
xchg
and
pop
data16
mov
in
divb
out
icebp
xor
andl
lods
pop
cs
cmp
loope
dec
mov
repnz
sbb
dec
orl
cmc
add
mov
pop
or
adc
cmp
pop
push
out
and
adc
lret
fs
popa
insl
das
adc
dec
add
jno
mov
stos
jecxz
dec
icebp
lds
jae
dec
imul
jg
mov
add
fldl
clc
cmp
push
xchg
into
or
pop
xchg
jmp
mov
scas
sbb
sbb
das
xchg
movl
cwtl
inc
push
inc
xor
je
mov
rcll
mov
jmp
sete
mov
daa
test
sbb
push
xchg
negl
mov
push
aaa
pop
xor
ljmp
add
mov
jl
jle
adc
mov
adc
into
inc
cmp
out
sbb
mov
js
clc
xor
adc
out
andl
cmp
imul
ss
in
jae
mov
repz
dec
pop
loope
stos
cld
mov
lock
outsl
fs
scas
adc
mov
mov
mov
add
lcall
push
stos
dec
xchg
bound
and
mov
sbb
cmp
mov
sbb
or
mov
lods
aaa
xchg
pop
sbb
inc
xchg
xor
push
lods
mov
mov
mov
repnz
push
cmp
mov
xchg
push
or
sub
or
jo
lahf
inc
xor
orb
sti
pop
xor
scas
cli
adc
pop
int
jmp
pop
add
mov
mov
dec
cmp
add
mov
add
push
xchg
imul
insl
adc
or
cmp
push
gs
sub
push
cmp
std
ja
stos
lods
pop
mov
push
das
cli
jne
mov
arpl
hlt
shl
jb
xor
fwait
sub
imull
leave
mov
push
cmp
and
repnz
push
and
inc
push
or
jp
sbb
and
mov
mov
push
mulps
xchg
std
ret
sub
pop
cwtl
stos
cli
test
push
out
pop
fists
insl
cmp
ror
lea
jne
cmc
cld
arpl
out
test
adc
jmp
xchg
in
imul
push
andl
jae
shr
add
or
and
cmp
adc
loope
shrl
ret
or
outsb
mov
push
loopne
jbe
loop
cmpsl
loopne
xchg
mov
aas
inc
lcall
xchg
lods
add
or
test
dec
cli
pop
cmp
push
mov
push
xchg
fstpt
test
lea
in
mov
scas
xchg
jbe
lds
jno
inc
xchg
stos
jmp
dec
es
push
imul
in
cmpsb
lret
mov
orb
stc
cmp
lds
jne
in
test
xchg
add
mov
andl
lods
addr16
mov
in
pusha
lods
ret
push
pop
out
in
fimull
xchg
push
xor
fiaddl
pop
stos
sub
addr16
and
aad
ret
mov
sbb
mov
ds
xor
mov
ficoms
insb
xchg
mov
sbb
cmpsl
and
xlat
fwait
es
pop
cltd
mov
aam
cmp
mov
or
xchg
cmp
dec
mov
loope
pop
push
mov
mov
enter
xchg
dec
xchg
pop
mov
mov
push
adc
fcoms
sbb
jg
mulb
cmpsl
fldenv
and
cmp
test
shrb
rcr
jo
pop
fwait
adc
sub
outsb
sbb
mov
xchg
push
mov
mov
or
sbb
dec
sbb
sbb
cmp
mov
cmp
nop
mov
mov
cmc
mov
ret
leave
mov
pop
push
testl
sahf
dec
mov
enter
stos
lds
push
repnz
mov
subb
loop
test
cmp
aad
int
dec
ficomps
fstl
and
cld
pushf
mov
or
mov
jp
mov
cmpsl
pop
dec
shll
test
push
in
or
fidivrl
xor
jl
mov
and
pop
mov
in
xor
xor
rcl
outsl
cmpsb
dec
and
call
sbb
mov
and
andl
dec
xor
insb
mov
add
cmpsl
mov
mov
jb
icebp
xor
adc
adc
mov
push
xchg
sub
mov
and
push
imul
mov
mov
or
je
xor
je
xor
std
add
int
outsb
sbb
cmpsl
adc
and
mov
xor
sbb
mov
outsb
arpl
adc
mov
inc
xlat
out
inc
shlb
or
or
jnp
pushf
fnstenv
mov
mov
sub
mov
adc
js
and
lret
xchg
out
inc
pop
test
lret
daa
sti
cmp
pop
pop
add
cmp
fcoms
stc
lea
xor
je
mov
js
lret
scas
xchg
iret
pop
in
dec
mov
mov
xor
and
jge
nopl
fsubrl
xchg
mov
jno
fildll
pop
mov
incl
into
enter
xchg
test
mov
fdivrl
jae
xor
pop
mov
test
mov
pop
insl
scas
faddp
mov
mov
js
es
ret
fbstp
lods
xchg
mov
add
out
insb
jae
in
jo
lret
leave
in
into
je
sti
test
sbb
ljmp
sbb
dec
and
popf
loope
shrb
mov
pop
adc
mov
fs
scas
adc
inc
js
movl
movsb
mov
lret
sub
loope
jmp
leave
sbb
fsts
add
push
cmp
xor
jmp
or
cmp
push
mov
rcrl
or
inc
jl
gs
push
cli
xchg
cmpsl
inc
jle
pusha
pop
pop
scas
or
je
cs
xor
push
stc
add
lahf
aaa
xor
movups
xor
push
addb
fstpl
push
and
dec
leave
sub
divl
lcall
and
push
cwtl
push
cmpl
push
inc
dec
mov
push
rorb
nop
pop
or
dec
fldl
adc
int3
in
lock
test
shl
les
nop
fldt
adc
pop
cmp
ds
adc
arpl
jle
aaa
arpl
sub
or
xchg
mov
fists
int3
jecxz
or
js
stos
ss
lret
mov
add
jmp
inc
imul
ret
jb
or
mov
negl
pop
jo
sbb
jo
dec
push
inc
test
mov
jb
test
ds
mov
lret
dec
or
mov
jo
or
cmp
addr16
add
xchg
jge
pop
sbb
push
mov
cmpsl
stos
mov
mov
negl
aaa
outsb
jmp
jb
outsb
enter
pop
mov
add
mov
cmp
loopne
pop
rcrl
and
push
rep
add
xor
dec
push
test
inc
aaa
test
out
push
mov
dec
test
cmpsb
repz
add
pop
aaa
mov
dec
jmp
mov
sbb
push
movb
push
test
or
pop
adcl
iret
or
test
or
rclb
mov
das
push
imul
xchg
or
mov
lods
or
les
stos
es
lahf
std
mov
aaa
and
adc
mov
push
push
mov
cs
daa
sub
push
xchg
out
cmc
adc
outsl
or
into
dec
mov
mov
js
pop
int
pop
xor
fcompl
push
mov
insl
mov
in
addl
popf
popa
pop
les
lcall
mov
test
cwtl
sbb
cmp
repz
adc
fimull
push
or
inc
xor
cmpsl
nop
mov
in
not
outsb
jb
mov
std
orb
xor
cmpsb
dec
jno
loop
push
stos
iret
sub
outsl
movsl
push
mov
les
or
imul
mov
arpl
lahf
sub
pop
jg
jmp
cwtl
inc
xchg
push
sbb
mov
out
mov
out
cmc
cmp
cmp
inc
pop
dec
add
aam
sar
lar
push
or
pop
push
push
cmp
push
jne
inc
or
push
push
cmp
les
jb
push
icebp
sub
out
cmp
call
push
ds
outsb
les
lret
pop
mov
ficomps
loop
push
or
pop
jle
fstl
cmc
ss
es
xor
popf
add
pop
imul
or
ficompl
xchg
repz
mov
stos
jp
mov
pop
icebp
fs
add
push
shrl
push
fcmovb
mov
loopne
xchg
sbb
add
add
in
icebp
adcb
mov
pop
ss
scas
mov
scas
mov
or
or
fisubrs
daa
add
ds
xchg
stos
mov
ss
roll
lret
mov
and
imul
and
jnp
test
push
inc
pop
pop
arpl
call
fidivrs
jge
movsb
data16
and
test
mov
mov
mov
xchg
jns
cli
frstor
xchg
dec
out
movsb
xchg
xchg
push
sbbl
mov
loope
into
xchg
mov
mov
scas
clc
adc
add
jmp
and
xlat
add
pop
mov
outsl
pop
and
jne
gs
cmc
cmp
hlt
cmp
add
xor
lret
cs
mov
stos
into
xor
xabort
lcall
pop
or
add
jbe
or
push
sub
ret
imul
scas
rorb
imul
cmc
loopne
mov
jne
movsb
lret
test
pushf
lods
outsb
mov
ret
mov
hlt
adc
pusha
orl
inc
ss
imul
sti
das
pop
arpl
lret
jae
imul
sub
xchg
pop
inc
xor
icebp
ss
les
in
or
fdivl
mov
sbb
jns
fdivr
ljmp
adc
jmp
pop
mov
mov
into
sub
xor
push
sbb
adc
adc
sub
outsb
cmp
adc
fwait
xor
push
and
pop
xchg
sub
cmp
aad
dec
jle
ljmp
addr16
mov
aaa
or
pushl
and
enter
jnp
data16
jmp
enter
repnz
cmpsb
inc
ret
lret
les
enter
cld
sub
mov
and
mov
inc
xchg
orl
and
adc
aam
fwait
jmp
mov
frstpm(287
in
push
xchg
inc
pop
jge
nop
lahf
lea
ret
cld
mov
out
xchg
pop
jne
scas
jo
enter
cmpl
test
divl
or
outsl
pusha
aas
mov
push
inc
into
imul
cmp
mov
xchg
imul
mov
lret
xor
test
inc
xorb
cwtl
pop
in
outsb
mov
dec
adc
lods
sub
xlat
add
or
popa
lret
adc
jbe
stc
jg
mov
dec
sbb
fs
xor
mov
xchg
xlat
leave
lret
add
inc
xor
fnstenv
lds
outsb
fdivrl
jge
lahf
daa
add
dec
es
jnp
add
cmp
xor
addr16
xchg
in
sub
shlb
je
adc
sbb
push
lcall
out
repz
push
mov
pop
sbb
jnp
cmp
lods
mov
mov
rcrl
jge,pt
iret
xchg
push
push
cli
gs
dec
cltd
and
jge
enter
scas
loopne
xchg
popf
in
ss
cmpsl
sbb
add
cmp
std
mov
fidivs
xchg
xchg
sbb
rolb
push
ds
outsl
sbb
mov
int3
hlt
push
fidivrl
jns
iret
xchg
push
xor
jg
mov
mov
fcmovu
test
popa
cmp
mov
pop
ror
xor
mov
imul
or
sub
jno
inc
je
stc
lahf
adc
sbb
nop
and
sub
jp
push
rcr
inc
lret
fxch
repnz
add
xor
push
in
xlat
mov
clc
in
je
mov
jmp
add
xor
sub
pop
sub
insl
or
sar
sarl
jge
inc
ja
les
xor
mov
outsl
jmp
sbb
imul
dec
ss
mov
ret
mov
and
xor
cmp
rcl
int
ljmp
sti
lods
sub
mov
mov
xor
xor
dec
jmp
add
cltd
enter
shrl
in
and
jo
dec
repnz
lcall
je
insl
dec
stc
add
shl
pop
js
cmc
add
insl
sarb
mov
push
repnz
jno
mov
push
sbb
outsb
xor
adc
flds
dec
dec
jmp
pop
sar
test
add
xlat
inc
test
insb
out
insb
out
repz
stc
leave
push
push
pop
sbb
mov
xchg
cmp
jl
nop
pop
repnz
jg
stos
icebp
pop
outsl
ficompl
sub
jecxz
pop
xchg
je
enter
jmp
jmp
dec
jns
scas
jp
stos
aas
xor
int
js
pop
pop
xchg
mov
xor
jp
popf
push
pop
inc
test
pop
movsl
mov
icebp
sarb
mov
push
or
loop
rcr
sub
insb
xor
daa
sub
pop
cmc
pop
icebp
es
adc
fidivrl
jb
outsb
sbb
mov
les
flds
sbb
bnd
xor
add
roll
loope
mov
jle
int3
jb
mov
in
pop
decl
dec
inc
adc
pop
pushf
into
insl
sbb
sarl
sub
les
add
xchg
xor
out
cwtl
test
or
jae
jo
xchg
mov
cmpl
outsl
imul
cli
das
jo
cmp
arpl
mov
lods
inc
vfrczsd
jle
test
popf
sbb
leave
or
jae
jo
jnp
and
cs
ss
xor
cmpsb
mov
fsubr
dec
sti
test
inc
or
lahf
pop
cmp
icebp
pop
xchg
dec
and
ja
sbb
fwait
add
scas
mov
outsb
out
xchg
stc
xchg
dec
mov
mov
mov
sarb
xchg
adc
mov
dec
xor
jp
clc
inc
mov
fsubs
ljmp
add
das
shll
pop
test
push
adc
adc
pop
xor
stos
xchg
push
dec
cli
andb
cmpsb
adc
loope
push
insl
inc
ss
mov
inc
pop
popf
mov
dec
and
sbb
fsubl
sub
jbe
mov
loope
pop
mov
push
jnp
mov
push
push
lcall
dec
aam
pop
shlb
lds
xor
std
dec
xchg
adc
pop
outsl
in
push
fmuls
movsl
jle
mov
sub
jne
call
pop
sbb
mov
xchg
sarl
cmp
loope,pt
fmuls
clc
mov
and
pop
adc
data16
fidivs
inc
cmc
test
cli
jle
cmp
inc
mov
dec
popf
mov
mov
mov
insb
push
dec
addl
pop
or
pop
pop
cmpps
addr16
leave
loop
mov
bnd
jl
adc
adc
or
into
fwait
lock
pop
cs
mov
mov
lods
jae
inc
sub
mov
je
pop
int3
pop
dec
mov
jle
jg
mov
into
adc
jns,pn
sub
adc
aad
fldt
hlt
xor
pop
idivl
pop
push
inc
imul
mov
pop
clc
xor
mov
insb
adc
xor
aam
lcall
mov
test
test
lret
adc
inc
adc
cmp
inc
jo
sbb
or
push
sbb
push
outsl
pop
insl
stos
push
pop
cld
cmpsl
repz
out
ret
dec
mov
mov
add
daa
cltd
dec
xor
fdivrs
sub
jmp
inc
ljmp
sub
dec
js
push
fists
push
jmp
sarb
or
adc
or
movsl
sbb
sub
pop
in
sbb
lock
add
lret
xor
mov
cmc
cltd
fadd
repz
xchg
mov
repnz
xchg
test
and
in
dec
xchg
push
pop
nop
adc
inc
aam
outsb
out
inc
insl
push
ds
xchg
mov
mov
imul
bound
xchg
dec
sarl
jnp
sub
or
insb
imul
pop
ret
dec
xchg
push
mov
xor
add
repz
pop
xchg
lea
call
push
xor
insb
inc
insl
into
push
lock
mov
push
xlat
stc
outsb
xchg
mov
inc
mov
ds
dec
aam
and
adc
cld
inc
icebp
cmpl
sbb
inc
test
xor
mov
rcl
and
or
ss
xchg
mov
push
fldl
mov
jnp
mov
nop
pop
out
out
jecxz
loop
lea
sbb
cmpsb
jecxz
outsb
mov
cmpsb
xor
sbb
lahf
mov
jecxz
push
adc
fwait
mov
daa
xor
mov
dec
mov
push
lock
loope
xchg
adc
add
cmp
repz
mov
add
cmpsl
sti
xlat
aad
sbb
psllq
inc
xchg
jge
push
mov
inc
fwait
pop
fidivrs
cmc
mov
lret
xor
jmp
test
and
in
inc
fcmovbe
xchg
or
loope
xor
insl
push
push
rolb
sub
or
cmp
pushf
adc
addr16
cld
lea
mov
cmp
add
call
movsl
push
mov
ret
sbb
cmpsb
shld
loope
cmp
arpl
out
mov
push
ja
mov
dec
pop
popa
ss
fsubs
add
addb
push
dec
ret
dec
inc
push
js
push
mov
xor
push
repnz
insb
sub
les
repnz
jbe
stos
mov
movsl
insb
add
out
incb
out
mov
dec
jge
icebp
sub
pop
inc
daa
jne
adc
sub
cmp
mov
jp
pop
insb
push
sbb
fs
mov
es
cmpsb
cs
cmp
leave
pop
call
or
mov
add
xlat
aam
out
cmp
cs
cmp
ret
inc
je
xchg
pop
cwtl
scas
mov
rorb
inc
pop
pop
push
ret
add
pop
xchg
xlat
out
fildll
mov
call
in
xchg
cmpsl
mov
ret
add
xchg
or
popa
lea
rorl
fists
das
loopne
out
sbb
idivl
and
and
sbb
movsl
mov
xchg
loop
push
ffreep
adc
sbbb
pop
lods
aas
add
addb
mov
outsl
fwait
adc
shlb
add
pusha
into
add
in
push
cli
sub
pop
adc
adc
xlat
sub
sub
aam
push
add
movsb
cmp
cmc
std
inc
movsb
and
xor
adc
repz
adc
mov
fmull
sub
push
pop
push
xorl
test
jmp
add
sbb
xor
push
fs
mov
popf
xchg
pop
push
mov
enter
and
repnz
xor
test
sbb
ret
loope
leave
js
adc
lret
adc
fidivs
push
icebp
sahf
fcompl
and
ds
adc
mov
adc
ljmp
jno
sub
test
sbb
and
sbb
mov
pusha
mov
out
out
lcall
jne
jo
cmp
push
jno
in
push
cs
xchg
mov
stc
or
jns
fidivs
negb
and
sub
cmp
pop
adc
ss
lcall
iret
push
pop
mov
movb
pop
mov
cmpsb
notl
push
leave
fcoml
cmp
lods
pop
sbb
xchg
mov
jge
ja
xlat
out
cmp
jno
insb
int3
dec
paddsw
decl
xor
sub
ret
sub
push
lret
jnp
mov
xor
hlt
lcall
aaa
mov
sti
mov
rep
jbe
cmp
mov
shlb
fiaddl
sub
test
movsb
xchg
adc
add
iret
mov
adc
pusha
es
daa
leave
dec
jae
dec
ret
outsb
sbbb
xor
popa
jbe
pop
xor
adc
dec
in
fisttpll
mov
sbb
es
pop
pop
push
mov
scas
int
dec
insl
das
or
cmp
insb
cmp
je
int
lea
mov
mov
mov
cmpsl
or
lahf
icebp
cs
or
adc
std
int
lcall
fimuls
sub
popf
idivw
add
dec
leave
push
out
ds
xchg
mov
outsb
pop
dec
dec
mov
icebp
pushw
lret
fdivrs
jae
sbb
ljmp
and
ffree
push
mov
test
fbld
call
sub
mov
push
popf
mov
rcl
pop
xchg
mov
mov
xor
mov
add
jmp
mov
ds
xchg
inc
mov
mov
mov
scas
dec
scas
push
push
mov
jae
and
xor
xsave
das
xor
push
jmp
pop
enter
or
push
mov
push
enter
xchg
int3
lahf
dec
shlb
dec
stc
push
mov
mov
outsb
aad
in
insl
ds
xchg
or
fstpt
push
nop
and
popf
pop
xchg
rep
fdivs
bnd
in
mov
add
es
jl
jge
adc
cld
lret
int3
push
push
test
ss
lret
or
nop
aas
aad
test
data16
mov
and
jo
pop
sbb
jg
inc
fisubs
xchg
ret
cmp
andl
push
dec
mov
cli
mull
out
repz
or
arpl
sbb
pushf
jae
or
lds
andb
mov
fld
inc
mov
mov
dec
mov
bound
js
mov
dec
jge
pop
push
cmp
or
in
das
nop
xchg
sahf
mov
notl
and
xchg
aam
mov
sub
inc
stos
mov
or
enter
xor
pop
or
cmp
xchg
fmuls
sbb
sbbb
mov
movsb
mov
jbe
cmp
cmp
jge
das
push
fs
ficomps
mov
loope
jmp
in
mov
lcall
sbb
stc
pop
js
fcomps
sub
shlb
jne
ljmp
jl
mov
js
and
fnsave
movsl
jmp
cmp
out
mov
and
push
dec
cmp
out
adc
push
ds
fwait
push
pop
roll
push
cmp
jb
pop
out
das
adc
inc
cmc
imul
outsb
icebp
or
mov
in
aaa
xchg
lret
sub
dec
mov
pop
outsb
jp
push
fistps
nop
sarb
aas
inc
cmpsl
aaa
pop
cmp
and
sbb
movsl
sbb
adc
mov
jae
stos
push
out
and
ljmp
jecxz
popa
xchg
loopne
inc
test
xchg
int
out
hlt
xor
inc
mov
add
push
pop
movsl
push
add
dec
pop
xor
mov
jo
pop
push
push
aam
in
nop
popa
outsl
mov
ja
enter
cmp
add
daa
lods
or
jmp
xor
divb
xor
push
jle
jb
lods
inc
inc
adc
leave
sbb
orb
in
fstpt
cmpl
stos
adc
pop
add
add
push
bound
mov
adc
jg
dec
pop
sub
adc
sub
lret
adc
test
pop
daa
jmp
cmp
sub
imul
inc
in
fcomps
or
inc
popa
addb
pop
mov
punpckhbw
in
insb
cmp
sbb
dec
push
mov
or
xchg
out
clc
loope
sub
xchg
hlt
dec
stc
fistpl
sbb
stos
mov
sub
push
or
and
adc
out
fs
xchg
inc
dec
cmc
insl
xchg
mov
pop
inc
js
sub
leave
inc
cmp
daa
push
sahf
mov
out
pop
leave
subb
mov
add
test
cmpsl
jno
ja
mov
add
cmp
dec
cli
les
movsb
push
jne
sbb
sbb
xchg
sub
notl
sub
adc
inc
sub
xor
mov
cmpl
xchg
repnz
call
loop
ret
adc
mov
xchg
jb
lock
cmp
xchg
or
into
jno
enter
insl
or
aad
sub
mov
cmc
call
pop
icebp
inc
jae
mov
xchg
lahf
js
xchg
push
push
lret
outsb
inc
mov
lds
xlat
jmp
xor
andb
ljmp
cli
in
lcall
mov
cmp
mov
movsl
outsl
jae
mov
jb
outsb
pop
lret
push
mov
imul
fnstsw
mov
cmc
ret
in
jno
iret
fdivr
fcoms
imul
jbe
clc
jl
andl
lret
aas
inc
pop
push
push
mov
push
leave
ds
jg
mov
or
cmp
inc
out
cli
lret
cld
mov
aas
cmp
jno
out
mov
adc
or
xchg
lock
mov
and
mov
mov
xor
clc
push
clc
pop
xchg
in
xchg
mov
arpl
inc
mov
outsl
pushf
xchg
xchg
sbbl
lcall
mov
lret
push
daa
or
add
add
jno
or
sub
ret
imul
jg
out
add
stc
subl
or
int3
mov
into
pusha
aam
pusha
inc
add
ljmp
sbb
lea
nop
rcll
adc
sub
lock
or
xchg
andb
arpl
push
inc
aaa
enter
shll
popa
subb
push
fildl
or
jo
mov
dec
daa
cmp
sahf
or
jne
push
push
sub
xlat
mov
add
mov
or
insb
jle
popf
jns
mov
pop
stos
fnsave
sbb
jae
mov
leave
xchg
sbb
mov
sub
gs
xchg
in
inc
add
dec
nop
push
shlb
lea
test
cwtl
add
jo
dec
outsb
outsb
jo
cmp
inc
and
push
mov
xchg
mov
ds
pushf
shlb
lea
fidivrs
sub
jno
mov
imul
xchg
loop
adc
ljmp
addr16
mov
fmull
ret
bound
aaa
hlt
pop
mov
or
jbe
push
pop
sub
fisttpl
dec
and
and
cmc
les
rcll
jmp
push
bound
cmpsl
push
sub
nop
and
pushf
ficompl
cmpsb
add
inc
leave
lcall
pop
les
hlt
adc
dec
push
sar
pushl
adc
xchg
roll
add
push
shlb
je
or
mov
pop
push
fwait
sbb
test
loop
mov
scas
lods
test
and
mov
push
aam
test
ss
lret
or
int
insb
sub
repz
pop
lods
iret
mov
mov
jnp
sub
and
repz
mov
pop
scas
arpl
push
xchg
cmp
mov
push
xchg
pop
repz
in
into
xchg
sti
test
sbb
jl
arpl
ss
int
std
popf
inc
mov
mov
fistpll
sub
pop
xor
cmp
je
lahf
add
aad
add
icebp
mov
jecxz
adc
jae
repz
lret
add
cmpsl
cmp
mov
imul
sbb
push
inc
sarl
mov
push
xor
into
mov
adc
xchg
int3
jbe
xor
push
push
daa
ret
xchg
jl
stos
les
xor
aas
mov
lcall
pop
push
in
pusha
and
inc
jbe
mov
mov
movsl
in
jecxz
dec
mov
cmp
daa
xor
out
adc
das
lock
inc
push
inc
ljmp
mov
fcompl
push
repz
fucomi
stos
das
cltd
insl
outsl
pushf
ja
pop
and
push
cmp
cwtl
jbe
out
lods
sbbb
dec
xchg
lods
mov
dec
dec
stos
sub
lds
add
test
movsb
add
push
push
sbb
jne
outsl
inc
sahf
add
out
test
mov
leave
fs
xchg
mov
mov
cmp
leave
dec
adc
inc
shll
and
fdivs
je
sbb
addb
icebp
pop
jg
aad
inc
xchg
stc
dec
cmp
cmp
insb
arpl
add
jnp
adc
mov
xor
mov
or
mov
cmpsl
lea
inc
leave
loopne
test
cmpsb
fisttpll
pop
jl
in
std
dec
clc
stos
pushf
pop
insb
in
mov
pop
cmp
push
xlat
cli
and
aad
je
and
aam
ret
imul
outsl
push
mov
sbb
out
out
cmpsb
jge
arpl
jp
mov
loop
mov
or
je
pop
or
xchg
ja
lods
dec
sbb
icebp
lahf
adc
sbb
roll
clc
dec
pop
jp
or
fistpll
daa
jno
mov
or
lret
push
mov
in
and
lds
xchg
and
xor
jmp
push
incb
divl
fistl
sbb
sub
cltd
iret
push
dec
lret
lea
mov
xchg
call
cmp
loopne
or
arpl
popa
xlat
or
in
bound
lds
sbb
inc
inc
jbe
test
or
sarl
scas
cmpsb
push
ficompl
pop
ja
and
or
leave
mov
sar
dec
enter
daa
mov
xlat
std
js
cmp
mov
repnz
sarb
inc
adc
imul
jge
stos
jp
fsubl
mov
xor
xchg
inc
pop
push
add
outsl
push
orb
pop
or
inc
cmp
jl
aam
adc
inc
xchg
movsl
mov
nop
mov
das
sbbl
add
push
sub
adc
cmpl
test
lods
popf
popf
insb
out
cmpsb
push
aad
push
xchg
out
ljmp
imul
leave
loop
aad
pop
lods
dec
sub
in
dec
stos
or
out
pop
xchg
xlat
mov
popa
jp
cmc
sub
sub
xchg
fidivl
and
cmp
fstp
int3
inc
outsl
jne
add
int3
jb
adc
movsl
inc
cmpsb
addr16
push
jge
loope
fs
push
pop
mov
stos
inc
out
sub
add
lock
dec
mov
sbb
pop
inc
push
xchg
xor
inc
sub
cli
rorb
divb
fnstcw
movsb
addr16
fsubrl
pop
jbe
mov
lret
pop
xlat
xor
cld
call
enter
xchg
jl
clts
mov
or
fcomi
push
int
inc
std
ljmp
and
std
sar
lea
js
add
inc
lret
leave
orl
dec
mov
sbb
icebp
mov
std
pop
mov
lods
inc
cmpsl
outsl
and
push
aam
ljmp
and
pop
inc
mov
add
outsl
imul
push
aam
push
jno
jae
mov
decl
cmc
push
cli
aam
sub
inc
out
lds
mov
insl
hlt
inc
outsb
pop
mov
push
xchg
in
scas
dec
push
cmp
sahf
aaa
xlat
pop
ret
test
popa
fs
adc
jle
xchg
mov
and
push
xor
add
jecxz
lods
mov
or
aaa
push
stos
sbb
mov
nop
mov
rclb
xlat
fcmovnbe
insl
xor
data16
ja
call
ret
dec
cs
aas
in
fldenv
imull
pop
jge
push
push
aad
inc
addr16
pop
test
jg
inc
add
lcall
and
adc
jmp
aam
out
push
dec
ffree
mov
push
mov
loope
jecxz
sbb
testb
jb
mov
into
xchg
mov
or
push
add
inc
imul
out
je
testb
xor
out
bound
cmpb
aam
arpl
xor
lcall
cmp
mov
lock
push
lods
test
lret
pop
push
push
ljmp
scas
loop
mov
jns
pop
cmpsb
xor
cmp
mov
mov
inc
mov
addr16
scas
xor
jb
dec
sbb
cmp
ljmp
jge
call
or
mov
or
rolb
xor
pop
repz
xchg
cmp
mov
test
out
fcmovu
pop
scas
dec
push
mov
cli
repnz
andl
aad
ss
iret
xor
loop
jb
out
cmp
mov
sbb
xchg
es
leave
mov
pop
cs
adc
scas
aaa
icebp
push
ja
jae
adc
jmp
ficoms
arpl
sub
dec
adc
push
sbbl
mov
lock
vpmacsswd
gs
push
call
stos
adc
popa
shll
in
mov
mov
insb
sti
cmpb
xchg
jno
lret
out
fwait
push
mov
iret
inc
int
sub
xchg
sub
loopne
out
orl
sahf
data16
sti
aas
pushf
add
bound
and
cmp
ja
imul
cmp
push
sub
jge
xchg
sub
cmp
jcxz
pop
sbb
es
dec
sete
mov
fs
rcrb
mov
imul
adc
inc
sub
rcl
sbb
int
cmpsl
call
movsb
push
jo
dec
sbb
cmp
scas
stc
inc
xlat
in
pop
push
xorb
cmpsb
add
or
notl
fnstcw
sub
pop
cld
and
fwait
lret
inc
inc
fisttpll
push
xchg
fdivrl
pop
jecxz
icebp
scas
sub
xchg
sub
repnz
dec
push
outsb
push
loop
mov
ljmp
leave
or
cmovp
aad
ret
sbb
jl
test
inc
cld
add
mov
lea
and
push
scas
adc
mov
pop
dec
insb
std
xchg
int3
xchg
push
mov
xchg
aas
insb
fucomi
jmp
jecxz
jmp
js
mov
in
loopne
pop
and
sub
sar
shlb
or
inc
xlat
test
pop
push
stos
outsl
aas
xor
outsl
sub
inc
jne
or
scas
mov
sbb
pop
jnp
pop
push
mov
lcall
popl
push
sarl
movsb
call
fmull
ret
jge
insl
xor
inc
mov
pop
sub
pop
sbb
ret
insl
xchg
dec
scas
add
lds
mov
mov
cmp
ror
addr16
imul
stos
fsts
es
pop
and
xchg
rorb
inc
div
js
aaa
jne
lret
shll
lock
adc
lock
arpl
shlb
out
and
je
or
sahf
sbb
adc
sbb
push
mov
or
stos
sbbl
lock
push
das
shl
pop
push
iret
dec
mov
aas
mov
rorl
adc
fwait
test
mov
mov
mov
push
aas
sub
mov
jnp
xor
popl
pop
or
mov
cld
rcl
mov
mov
imul
dec
jnp
scas
add
xchg
loope
leave
cltd
test
fistpll
mov
lock
loope
cs
add
cmp
in
cmp
fsubp
push
sbb
inc
inc
jae
sub
mov
mov
inc
xor
sti
imul
repnz
and
test
jno
sub
js
icebp
out
push
gs
mov
imul
push
mov
jb
pop
shll
sub
jl
xor
cmc
cmp
popa
pop
mov
xor
ret
pop
mov
pop
sub
loop
jo
fsubrl
clc
push
inc
xchg
mov
sahf
mov
mov
xchg
xor
stos
sahf
and
mov
and
enter
pop
sbb
in
inc
cmp
mov
dec
dec
pushf
movsb
cmp
jno
push
or
scas
orb
cmpsl
adc
arpl
xor
lods
mov
es
inc
xor
in
jns
jl
lods
lret
inc
pop
push
lods
into
fsub
das
into
lcall
mov
mov
pushf
push
mov
into
mov
pushf
adc
or
xchg
xchg
pop
fsubrs
ja
pop
xor
xor
pop
fcoms
pop
std
popa
sub
sbb
pusha
pop
inc
sbb
into
fisubrl
sbb
and
mov
es
incb
stos
mov
mov
rorb
mov
xor
add
mov
mov
pop
dec
jne
cmp
je
jmp
jmp
mov
pop
jae
cmp
lock
mov
jo
sbb
jo
les
ret
pushf
mov
in
sti
out
arpl
or
mov
cmp
hlt
test
push
xlat
popf
mov
mov
xor
push
jbe
cmp
push
cltd
data16
adc
adc
jmp
lods
incb
fbld
lret
clc
jge
sbb
lea
jp
dec
push
xchg
xchg
xor
mov
loope
ds
push
xchg
ret
jae
into
adc
ret
inc
jae
fmul
sbb
js
aam
sar
loope
mulb
and
inc
jns
aad
jp
aad
fildl
je
aaa
es
mov
leave
adc
js
and
push
addl
imul
inc
push
int3
scas
and
aad
arpl
lock
fdivrl
mov
fisubrs
adc
sbbl
movsl
xor
imul
push
jmp
sbb
adc
stos
dec
mov
lcall
mov
xchg
cmpsb
adc
mov
jns
stc
push
imul
dec
insl
inc
xchg
popa
cltd
fsubl
xchg
mov
and
add
xchg
lods
add
call
cmp
cs
loope
and
adc
repnz
push
aas
orw
les
xor
xlat
xor
out
es
int3
js
sub
sbb
mov
jns
inc
and
sbb
pop
xor
pop
leave
dec
xchg
outsl
cmp
adc
fcoml
mov
mov
xchg
fnstenv
mov
push
add
sbb
lcall
in
mov
and
mov
xchg
jg
fs
int
mov
and
cmp
movsl
orb
and
xor
aas
xlat
test
sbb
cmpl
add
dec
push
in
mov
stos
jnp
pop
fimull
std
xlat
and
sub
inc
nop
stc
mov
repz
lds
jno
ss
cmp
movsb
pusha
fwait
inc
cmpsb
mov
adc
jge
xchg
dec
or
and
xlat
sub
je
loop
pop
sti
outsb
out
push
stc
mov
dec
jb
or
jmp
dec
int
mov
into
mov
adc
shlb
out
cmp
xchg
jne
cmp
fildll
sti
sbb
inc
test
insb
cli
mov
jb
mov
fsubl
mov
jmp
fidivl
xchg
gs
xor
pop
xchg
pop
dec
inc
fbld
ja
pop
inc
jp
mov
cli
dec
out
fwait
ret
das
jle
int
push
dec
adc
mul
ds
ja
inc
mov
stc
shll
pop
inc
jle
pop
cltd
push
jno
cmp
inc
sub
subl
loopne
ljmp
push
popf
pop
jle
pop
andl
and
int
xor
imul
push
sub
in
into
je
inc
add
adc
negl
lahf
fs
sub
pop
shlb
add
jbe
testl
pop
adc
sub
mov
mov
test
push
mov
jmp
xchg
cmp
push
lods
je
fcomps
or
mov
jle
xlat
inc
mov
xchg
or
mov
or
imulb
leave
jns
push
lds
int3
jb
movsl
push
mov
mov
mov
test
insl
inc
ret
pusha
pop
inc
insb
pop
frndint
cmp
bound
popf
push
test
lock
insl
mov
pop
mov
adc
pop
mov
add
shrl
jg
sub
fidivrl
rorl
in
and
adc
sbb
cltd
mov
jno
shl
fcmovb
mov
roll
scas
fldt
fidivrs
pop
mov
imul
aam
cmp
sarl
sbb
in
mov
inc
aas
cmpsl
mov
xorb
out
inc
xchg
into
jl
cld
movsl
cmp
je
push
xor
fisttpll
ss
jno
pushf
fisubrs
push
sti
mov
jecxz
or
jl
lock
dec
xchg
imul
sub
das
dec
imul
pop
add
out
ljmp
outsl
add
arpl
xor
mov
pop
xor
xchg
jmp
or
push
mov
jmp
aad
popf
dec
push
clc
mov
mov
jle
js
nop
sbb
mov
cmp
cmp
mov
mov
xchg
push
addr16
addb
icebp
dec
mov
jmp
sub
imulb
stos
test
orb
sbb
test
push
inc
fwait
xor
orb
pop
adc
xor
cmp
or
inc
test
pushf
repnz
xor
or
lock
xor
mov
popa
inc
enter
aas
sbb
sub
int3
out
pop
add
cmp
arpl
popf
ficoml
jb
lods
inc
xor
movzbl
adc
and
mov
pop
test
nop
scas
xchg
or
xchg
inc
mov
mov
out
lock
icebp
sub
or
mov
and
out
xchg
sbb
js
cltd
pushf
imul
sbb
jne
add
jns
sub
sub
out
pop
out
or
subl
mov
adc
sbb
std
adc
shlb
sti
imul
add
pop
int
xchg
inc
jle
mov
std
mov
leave
mov
fadds
scas
outsl
cmp
xchg
mov
out
xchg
out
hlt
fildll
test
add
sbb
mov
fwait
sub
negb
add
or
por
enter
mov
cwtl
mov
jp
jbe
pop
ror
cmp
rcrb
in
test
lock
repz
fwait
lock
int3
mov
lock
cmpsl
pop
stos
imul
adc
adc
clc
xlat
mov
push
cmp
in
push
mov
mov
lea
test
push
mov
pusha
sarl
movsl
aas
mov
mov
shll
test
adc
jo
testl
test
je
dec
sub
lret
js
mov
add
inc
push
lret
xchg
negl
dec
frstor
sti
sbb
xchg
repnz
stos
dec
mov
scas
pop
mov
scas
inc
pop
push
sub
and
jecxz
mov
outsb
xchg
xchg
repz
xor
and
scas
inc
dec
inc
adc
mov
push
into
adc
or
test
popf
mov
sub
dec
mov
scas
add
int3
cld
dec
push
lods
aam
or
jecxz
pop
out
aad
mov
mov
inc
andl
mov
repnz
mov
sbb
out
fcomp
stos
inc
sarl
cmpsb
pop
shlb
mov
pop
dec
enter
cmpsb
aas
aad
xor
dec
fcomps
add
dec
insb
int3
cld
xor
rcrb
and
lock
jbe
push
dec
push
add
test
sahf
fs
sbb
movsl
addr16
testl
and
mov
cmpsl
hlt
adc
adc
lahf
cwtl
in
adc
sbb
fmul
jns
aad
rsqrtps
bound
dec
push
stos
mov
repnz
mov
mov
outsb
xchg
fsubl
add
js
and
int
ds
leave
mov
scas
psrlw
int
arpl
lahf
adc
mov
sbb
pushf
or
jb
orl
lret
or
ss
aad
jne
sarb
in
addr16
push
xor
icebp
jne
ret
add
jecxz
lahf
push
sbb
pop
inc
push
pop
sbb
pop
jg
cmp
lret
das
in
cli
pop
cmp
cwtl
add
cli
insl
inc
push
mov
xchg
shrl
mov
cmp
adc
dec
sar
js
les
aaa
pushf
and
es
rcl
bound
movsl
adc
jbe
dec
adc
xchg
dec
push
push
mov
jp
push
cmpsl
loop
ret
imul
sub
jecxz
fdivl
inc
or
fprem
inc
inc
mov
push
xchg
push
jmp
jbe
xchg
xlat
outsb
clc
jnp
ret
xchg
mov
sbb
rcl
iret
mov
fucomi
in
rolb
or
dec
out
ja
fsubrs
jno
cmp
lock
ljmp
sub
adc
test
add
test
das
push
push
and
daa
and
lods
fucomi
ja
popf
rcl
movb
adc
outsb
fsubl
mov
fists
sbb
mov
xchg
add
cmpsb
cltd
mov
sub
and
les
pop
mov
arpl
in
xchg
fcmovb
mov
imul
mov
test
push
sti
negb
lret
orps
xchg
dec
out
push
adc
xor
xor
lret
xchg
daa
lea
xchg
xlat
dec
lahf
pop
divb
ret
lods
or
or
mov
into
sub
dec
imul
lcall
pop
imulb
ret
dec
test
stos
xor
ret
jnp
psllq
and
pop
pop
lds
cld
pop
ljmp
and
loope
mov
adc
sarb
mov
in
js
outsb
test
push
inc
mov
lcall
adc
pop
jg
pop
adc
stc
iret
ljmp
setnp
mov
popf
pop
lods
ds
xchg
lock
xchg
test
lret
and
inc
aad
push
in
pop
mov
in
sub
mov
enter
in
mov
imul
or
add
mov
or
out
es
jnp
adc
mov
movsb
jge
xchg
fsubl
adc
sbb
lods
push
and
movsb
js
xchg
popa
cmp
jno
fstp
xchg
mov
cmp
in
les
mov
xchg
test
aas
mov
test
and
ja
mov
cmp
jle
jle
cwtl
pop
and
pop
fildl
lret
lods
pop
lcall
test
jg
and
or
add
xchg
in
mov
scas
and
xchg
or
repnz
mov
out
mov
push
inc
out
lods
into
or
movsb
outsl
popa
int3
call
and
inc
cmc
inc
sbb
incl
cltd
popf
lret
mov
in
xlat
std
sbb
popa
push
scas
push
sbb
imul
or
clc
jg
js
popl
into
arpl
icebp
loope
and
xchg
or
loop
sub
dec
xor
jno
and
std
sbb
aad
add
jmp
mov
jae
dec
aad
fcoml
add
inc
subb
clc
inc
inc
cmp
mov
adc
fidivl
sub
push
dec
lods
jge
mov
inc
loop
xor
filds
jp
push
pop
sub
sub
pop
je
pop
mov
or
xchg
mov
jne
ljmp
push
repz
sbb
sub
fistl
fwait
inc
mov
dec
out
mov
dec
insb
lods
repnz
push
xchg
stos
push
out
push
xor
inc
mov
lods
insb
mov
xchg
jnp
add
inc
lock
mov
pop
jbe
out
jnp
jbe
out
push
repz
fldl
sti
xchg
and
shll
lea
jae
mov
xchg
dec
dec
and
lret
loope
xchg
push
out
adc
mov
sahf
je
decl
into
add
out
xor
cmp
xor
pop
sub
mov
aas
aaa
daa
xchg
je
jecxz
iret
pop
dec
out
xchg
movsl
and
pop
es
sbb
cmp
xchg
adc
fdivl
and
aam
pop
lds
inc
test
pop
sti
pop
inc
stc
std
dec
shl
inc
xor
jb
jmp
mov
mov
mov
sbb
push
sub
dec
jg
xor
popf
add
repz
std
push
jmp
mov
es
sbb
and
add
rorb
mov
cmp
sarl
push
insl
pop
jl
je
xor
fistps
cmpsl
pop
jno
adc
inc
stc
iret
jmp
cmp
xlat
jg
inc
in
mov
mov
je
pop
das
int
rorb
cld
shrl
xor
pop
cli
andb
fwait
jae
popa
int3
das
mov
fcmovnb
cmp
loop
inc
scas
push
dec
sub
mov
idivb
push
jecxz
lret
sbb
out
test
cmpsl
push
sbb
push
mov
xchg
jge
and
jno
rorb
push
int
ficompl
int3
inc
fs
add
arpl
daa
xor
imul
inc
pop
roll
and
inc
pushf
mov
stos
je
lock
jns
in
xor
test
lods
inc
ss
test
pop
sarb
mov
movsb
push
jecxz
lods
mov
mov
andl
aad
jae
jb
mov
out
cli
mov
bound
sahf
adc
leave
xchg
cmpsb
loopne
mov
inc
fmull
mov
mov
or
inc
dec
dec
add
jp
loop
mov
mov
inc
outsb
decb
pop
and
mov
aad
cmp
mov
xchg
sbb
mul
fldl
loop
and
pop
loopne
and
adc
lock
xchg
rcll
sbb
mov
inc
push
imul
repnz
test
repz
jg
lea
test
in
pop
rol
jp
mov
push
adc
sbb
addr16
mov
jb
lds
mov
fimull
leave
inc
fistpll
mov
inc
push
or
subl
int3
pop
in
push
int
mov
mov
das
test
xor
cmp
divb
and
shll
add
and
xor
cmp
push
into
add
out
aaa
dec
enter
int3
popa
mov
je
add
icebp
fwait
out
mov
clc
mov
stos
pop
movb
test
pop
ss
aas
int
repz
fadd
divb
xor
call
cmp
or
ja
push
ret
test
sub
cmp
out
push
das
subb
dec
out
lret
jns
or
rcl
lret
fwait
loop
jp
insb
or
cmpsb
xchg
sahf
in
jle
enter
stos
push
aas
insl
push
xor
inc
jno
push
iret
adc
dec
mov
lea
movb
push
pop
mov
addb
mov
jmp
mov
mov
mov
xchg
insb
daa
aam
push
push
in
cs
std
dec
gs
andb
movsb
jecxz
test
pop
mov
xchg
mov
xor
mov
les
or
setb
sbb
pop
call
push
inc
loop
rcrb
push
movsb
and
jmp
push
orl
movsb
xor
mov
pop
xchg
sub
cmpsb
js
sbb
pop
adc
cwtl
mov
or
jae
scas
scas
test
mov
xchg
or
adc
and
push
xchg
push
mov
jmp
movsl
dec
jge
jno
adc
xor
fidivl
imul
mov
and
test
cmc
out
repz
cmpsl
das
xlat
sbb
data16
push
push
in
sbb
mov
je
sahf
or
lods
cs
xchg
cmp
sub
or
int3
lods
lcall
fucomi
in
test
test
xchg
push
addr16
loope
js
sbb
or
jg
sub
mov
addr16
mov
sbb
push
scas
pop
push
sub
push
add
ficompl
andb
xor
ficoml
xchg
and
mov
xor
stc
aas
cmc
sarb
xchg
aad
enter
dec
scas
out
adc
push
into
movsb
pop
push
jecxz
xchg
push
subl
xchg
sub
inc
lcall
xchg
fcmove
popl
stos
lahf
mov
dec
jnp
call
in
inc
adc
lds
mov
or
mov
scas
adc
sbb
dec
shlb
daa
sub
jle
cmc
jg
enter
es
push
ljmp
int
mov
pop
bound
cs
mov
aam
ret
fcomp
shr
pop
mov
add
pop
adc
test
add
pushf
xchg
mov
cs
in
jno
iret
adcb
pop
mov
inc
js
or
dec
pusha
pop
adc
sub
mov
push
inc
add
mov
add
sbb
cmp
adc
sahf
dec
int
ficoml
and
adc
pop
bound
fwait
mov
jo
fidivl
repz
lock
pop
daa
mov
inc
or
xchg
and
ror
movl
pop
lea
mov
popl
aas
aaa
cli
xchg
jle
push
add
insl
adc
push
bound
jnp
adc
out
jge
mov
iret
mov
cmpl
sbb
cmc
ss
adc
pop
sbb
out
pop
sbb
iret
jecxz
ljmp
add
mov
xor
push
hlt
xor
outsb
lods
adc
mov
jae
adc
dec
inc
mov
mov
or
fs
xor
aam
push
loope
lods
xchg
imul
adc
lcall
mov
test
nop
adc
jp
or
mov
addr16
push
add
mov
fs
pop
lock
into
jge
jbe
repnz
and
dec
cmc
cmp
cmp
cmpl
stc
pusha
mov
pop
jle
pop
repz
mov
or
mov
dec
or
jmp
adc
add
mov
push
addr16
imul
mov
xor
aad
jecxz
mov
or
out
repz
add
xor
adc
jge
daa
lret
aas
fdecstp
sub
push
xor
or
mov
mov
sub
sbb
sub
add
leave
imul
ljmp
push
pop
mov
int
movsb
xchg
push
clc
jmp
mov
add
xor
xchg
in
insl
pop
mov
hlt
dec
and
shrb
ja
addr16
in
imul
sbb
pop
sub
add
ja
cmc
mov
pop
imul
xchg
mov
jnp
pop
xchg
xchg
and
mov
mov
clc
loop
sub
inc
add
inc
aad
push
pop
jmp
scas
dec
insl
popa
or
mov
dec
sbb
aaa
ljmp
mov
xorl
int3
inc
xchg
inc
inc
loopne
pop
push
bound
flds
xor
enter
popa
hlt
jge
lahf
negb
pop
dec
icebp
fxch
lock
clc
mov
into
nop
add
imul
das
lahf
push
pop
in
adc
mov
js
or
ja
insl
jne
add
xchg
push
jp
jno
pop
sti
push
dec
popl
push
cld
dec
lea
arpl
ds
dec
and
xor
out
push
js
inc
movsl
push
dec
jp
jno
mov
add
subb
and
mov
ret
aaa
in
jg
add
aam
mov
xchg
hlt
push
cmp
cld
enter
jns
insl
sbb
push
aaa
imul
imul
scas
mov
ret
xchg
jg
adc
popf
xor
mov
jno
xchg
sahf
lea
movsl
outsb
sbb
aam
loop
test
repnz
dec
jns
and
fmul
mov
outsb
push
sarl
movsl
jb
insl
movsb
stc
je
iret
cmp
pushf
loope
dec
add
add
push
lret
add
mov
shrl
outsl
mov
cld
lret
in
or
je
push
xchg
sahf
scas
adc
lods
sbb
test
or
mov
sbb
jp
insl
stos
sub
mov
push
mov
mov
rclb
rorb
ffree
test
addb
push
mov
xchg
ret
stos
test
xchg
aaa
mov
xor
and
popa
cmp
mov
out
inc
rcll
push
aam
repz
repnz
dec
xchg
mov
sbb
daa
adc
imul
pop
and
and
incl
xlat
adc
adc
add
out
xor
inc
inc
ja
lods
cmpsb
orl
or
jmp
out
ja
sahf
rcrl
mov
mov
cmpsl
aaa
test
sbb
mov
xor
add
insl
and
notl
xor
jg
or
outsb
loop
mov
lock
pop
andnps
mov
add
dec
out
pop
ss
or
popa
jnp
in
cs
ss
movsb
push
popf
dec
fdivrl
sbb
and
aam
jp
cwtl
or
iret
bound
sahf
icebp
lea
fidivrs
sahf
mov
cmp
std
sbb
lret
int3
out
dec
jno
xor
jle
das
into
ljmp
mov
push
imul
pop
fpatan
jl
cltd
lcall
sub
xchg
sysexit
cmp
mov
ja
and
lock
fistpll
mov
jbe
scas
aad
inc
push
push
cld
lock
push
xchg
pushf
ret
xchg
jl
mov
xchg
inc
xor
cs
mov
jae
rcrb
lock
inc
add
stc
mov
lret
clc
sbb
jo
mov
cmp
mov
dec
pop
stos
pop
jo
pop
call
jecxz
sub
das
jns
bound
pop
dec
pushf
jne
inc
mov
cwtl
ret
fistl
adc
or
jbe
sbb
imul
pop
sub
lcall
loopew
iret
sahf
mov
push
jmp
sub
pop
into
lahf
mov
fs
int3
mov
adc
test
test
mov
cmc
cmpsl
hlt
ja
bound
clc
hlt
cmp
sub
mov
mov
xor
adc
daa
int3
test
jmp
sub
adc
shl
dec
pusha
in
shll
sub
notl
xor
jo
dec
jnp
clc
mov
push
and
stc
sbb
or
or
lcall
dec
sahf
out
cmp
je
in
subb
mov
push
push
fs
test
sahf
cmpsb
dec
nop
mov
daa
push
sbb
or
shlb
adc
pop
sub
dec
ret
es
fwait
xorb
cmp
push
jl
mov
mov
int
fimuls
and
push
adc
vmovq
sbb
cmpsl
inc
rcl
xchg
cmovnp
sbb
xchg
pop
filds
das
dec
dec
sbb
stos
sahf
je
inc
imul
xchg
mov
jle
sub
loopne
rcrl
cmp
inc
lret
fnsave
and
xor
mov
jmp
je
loop
in
clc
add
ds
adc
and
xchg
dec
lcall
cmpsb
in
mov
flds
pop
fbstp
mov
bnd
or
mov
iret
test
xor
aam
sbb
pop
or
and
push
push
jbe
mov
pop
lahf
stos
sub
jmp
pushf
cmp
enter
mov
adc
pop
push
out
jno
jg
inc
pop
jecxz
ss
sbb
and
fcomps
out
adc
test
add
addr16
repnz
mov
xchg
and
mov
mov
push
mov
adc
or
adc
fstpl
std
stc
cwtl
jg
mov
dec
int3
ret
cmp
sub
into
xor
insb
mov
inc
jmp
in
push
mov
ja
mov
out
ds
dec
jg
fldl
push
es
aas
pushf
sub
inc
ret
and
roll
mov
adc
adc
outsl
movsb
testb
sbb
sub
and
or
mov
mov
xchg
mov
lods
adc
mov
sub
jae
mov
stc
lea
xor
inc
xchg
sub
push
je
in
nop
jo
sbb
sbb
push
mov
fst
popf
fnstcw
sbb
adc
leave
sub
cmpsl
inc
or
mov
inc
push
push
nop
cmp
das
gs
std
jge
adc
out
pop
ds
xlat
outsl
or
xchg
or
mov
lahf
sbb
pushf
out
push
daa
mov
sahf
inc
in
cmp
lock
mov
mov
adc
cmc
lods
and
sbb
imul
xchg
adc
in
mov
test
out
imul
cmp
xchg
add
mov
sbb
int3
add
or
cmp
sbb
push
out
fld
inc
push
adc
ret
sub
repz
sub
xchg
xor
lods
add
loopne
mov
cmc
in
cmc
fmull
mov
mov
mov
movsl
and
rcrb
inc
cmp
mov
fildl
loop
xor
mov
jno
int3
mov
lret
lods
test
sbb
push
data16
lret
icebp
mov
xchg
and
ficompl
mov
and
jbe
movsl
sbb
lock
xlat
xor
stc
or
cmp
aad
loope
cmpsb
gs
sub
loope
cmpsl
mov
push
sbb
aaa
sub
and
dec
push
inc
lret
imul
dec
mov
icebp
fndisi(8087
fists
adc
sbb
sbb
fdiv
push
cmp
fidivrs
mov
clc
outsb
ret
loope
mov
ds
pop
stos
xor
cmp
cmp
mov
rcl
es
test
add
jo
push
ljmp
add
adc
mov
in
or
mov
jbe
cmp
repz
push
pop
hlt
out
xchg
stc
push
cmc
insb
mov
ja
shrl
sbb
push
repnz
xlat
mov
insb
into
add
pop
inc
nop
jge
xor
xchg
xchg
or
icebp
outsl
lahf
leave
cmpsb
adc
jo
add
aad
sbbb
sub
ss
or
ret
lods
iret
loopne
pop
sti
mov
pop
test
popf
repz
sub
mov
mov
test
jns
lods
jecxz
loop
sbb
jl
xchg
add
xor
mov
scas
jns
sbb
bound
jmp
and
sub
pop
xor
or
inc
mov
daa
mov
aam
dec
cmp
jge
xor
lret
fwait
mov
pop
cmp
rcll
in
popa
les
gs
call
jle
frstor
sbb
cmp
inc
and
cmp
cmpsl
aam
or
cmp
cmc
xchg
pop
mov
not
fucomi
lods
sahf
int3
mov
cltd
je
into
test
subb
mov
adcb
sub
into
or
and
mov
cs
sbb
xorb
test
mov
sahf
xor
test
das
xor
xor
insb
daa
jns
outsl
push
pushf
or
stc
pop
add
test
fsubrs
cmc
in
sti
clc
sti
mov
insb
inc
iret
shrb
xchg
gs
imul
int3
mov
mov
and
cs
jo
and
mov
sbb
loopne
addr16
or
ss
pop
xor
jnp
mov
icebp
cld
pop
push
add
insb
mov
test
in
imulb
sbb
mov
dec
lock
xchg
in
add
mov
arpl
hlt
sbb
cmp
xchg
lret
jne
adc
sahf
data16
dec
repz
and
leave
int3
push
mov
mov
xchg
popf
pop
jns
std
xchg
xchg
ja
jle
xor
mul
push
dec
mov
bound
hlt
insb
mov
lods
fwait
adc
imul
mov
popa
cli
in
orb
mov
outsl
addr16
jg
jno
into
push
cmpsb
xor
jae,pt
sub
orl
lods
cmp
out
push
inc
xchg
pusha
or
pop
jbe
fsubs
and
or
mov
xchg
aad
sbb
mov
mov
adc
push
aam
lret
pop
pop
insl
adc
arpl
les
xor
xor
mov
cmpsb
lock
dec
dec
xchg
ror
xchg
lahf
icebp
or
sub
sbb
into
sub
ljmp
mov
and
or
jg
ja
push
lods
mov
jl
jbe
fbld
jno
popf
les
jge
cmp
add
popa
dec
pushf
insb
ret
pop
fdivrs
and
pushf
aas
push
mov
xchg
fmuls
cmp
ret
ljmp
push
ss
pop
inc
push
rcll
dec
xchg
bound
jecxz
sarl
into
sti
in
fbld
inc
ss
sub
adc
insl
xlat
movsb
dec
ficompl
sub
sbb
into
cmp
sub
pop
xor
lods
out
pushw
add
shll
les
rolb
arpl
add
and
adc
push
aam
dec
add
mov
mov
mov
sbb
in
bound
ret
push
mov
xor
sbb
lret
fstpt
adc
shll
adc
and
cmpsb
sbb
sub
bound
pop
in
or
push
pop
fdivs
movsl
mov
call
xor
xor
in
in
roll
push
sbb
loopne
aad
push
aaa
and
ljmp
cs
ret
xchg
shll
adc
cmp
add
sbb
les
iret
cmpsb
xchg
shll
mov
hlt
jmp
mov
jl
push
orl
clc
into
loop
addr16
sbb
icebp
inc
out
les
or
jbe
stos
mov
and
sub
sub
call
clc
aam
sub
xchg
mov
fsts
imul
fcom
sub
loop
and
xchg
inc
cmpsb
xorl
popa
stos
repz
in
mov
pop
or
push
loop
out
iret
or
subl
mov
outsl
sbbb
adc
dec
fcmovne
sbb
les
cmp
or
sti
push
dec
popf
sbb
mov
inc
sbb
aam
in
push
xor
les
xchg
mov
daa
scas
xor
fs
add
adc
jns
inc
fwait
push
xchg
fdivl
arpl
addr16
rcrl
push
push
aaa
sbb
inc
mov
das
outsb
or
mov
and
jnp
push
jb
mov
jmp
sub
lahf
xlat
dec
pop
push
sbb
negl
sar
xlat
sbb
adc
xor
sbb
incl
push
repz
fs
push
xchg
jl
xchg
or
mov
cltd
fistpll
or
mov
sub
sbb
aam
adc
and
pop
pop
je
xchg
mov
es
cmp
mov
into
test
shll
or
out
xor
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
or
movl
mov
add
movsbl
xor
mov
neg
sub
not
mov
addl
xor
movl
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
mov
and
push
movl
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
push
mov
and
mov
xor
orl
push
mov
add
mov
mov
test
movl
je
mov
mov
mov
mov
xor
adcl
add
orl
mov
mov
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
add
mov
mov
adc
mov
mov
add
xor
mov
xor
add
xor
mov
subl
sub
lea
xorl
xor
sbbl
xor
cmp
je
mov
mov
add
mov
xorl
xor
add
cmp
jne
pushl
adcl
call
mov
sub
mov
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
andl
pushl
orl
pushl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
andl
mov
mov
addl
xor
xorl
add
movl
cmp
movl
je
add
mov
mov
sub
mov
jmp
mov
je
shlb
add
push
jo
loop
jo
pop
out
hlt
rclb
imul
jnp
xchg
leave
xor
pop
lcall
in
inc
in
in
cmp
shll
sub
rclb
rcl
shll
push
dec
bound
fisttpl
push
data16
loopne
mov
iret
lret
inc
pop
push
push
pop
push
ret
cltd
ficompl
xchg
dec
xchg
xchg
sbb
push
and
pop
jne
and
xchg
loope
fdivrs
xor
and
lods
sub
sbb
mov
adc
push
push
pop
cmp
jmp
scas
mov
sbb
pop
repnz
fsubl
jg
sub
pop
les
out
out
xchg
inc
fistpl
les
lret
lock
test
sbb
in
mov
jge
mov
mov
mov
xchg
sbb
int3
or
jns
sbb
mov
arpl
mov
push
xchg
fs
sub
cmpsl
mov
mov
pop
std
aad
mov
mov
pop
or
cmp
movsl
and
lahf
xor
pop
stos
mov
aam
cmp
movb
enter
dec
mov
mov
mov
jg
sbb
lret
sub
mov
xor
and
push
iret
xchg
add
inc
shlb
fdivrs
jl
insb
pop
jae
ret
push
cs
mov
sub
jge
sbb
xchg
inc
daa
lret
adc
xor
adc
lods
and
or
dec
mov
or
imul
dec
outsb
sub
inc
cmp
lret
pop
call
loop
jg
fs
jp
sbb
mov
call
stos
ja
lods
lret
int
in
mov
cltd
cmp
test
lret
adc
inc
pop
addb
jg
pop
lock
push
inc
scas
sub
jg
pushf
test
jecxz
test
pop
pop
add
jge
lahf
sub
jmp
sbb
jbe
insl
and
pop
dec
sub
xchg
push
add
in
or
add
inc
adc
addr16
cmp
leave
xchg
pop
push
adc
push
imul
call
nop
clc
leave
lret
les
loop
daa
ss
mov
xchg
stos
and
insb
filds
mul
xor
push
jle
andb
in
mov
loopne
xor
sti
sub
xchg
loopne
pop
imul
lea
lcall
pop
iret
xor
mov
or
cmc
lods
lret
repnz
fidivs
sbb
filds
jo
inc
fwait
in
insl
fiadds
push
pop
push
movsb
push
push
sub
sub
lcall
in
xchg
sbb
mov
daa
push
push
pop
lock
and
popf
push
repz
push
mov
jle
shlb
xchg
mov
lahf
dec
shll
push
sub
dec
fsts
shll
stc
mov
out
sbb
push
addl
fistpl
movl
dec
pop
dec
pop
inc
out
test
or
iret
xchg
vpcmpeqw
inc
imull
sub
sub
adc
sub
in
push
xchg
cmp
ds
arpl
inc
test
fmull
cmpsl
leave
mov
sahf
das
add
andb
enter
push
xorl
out
mov
test
xchg
aaa
rorl
fcompl
hlt
mov
jle
lret
fisttps
mov
adc
jbe
push
jle
imul
pop
out
nop
enter
jbe
rcrl
adc
push
test
push
fldt
cmpb
divl
std
mov
call
mov
jge
push
mov
fnstsw
out
roll
mov
out
and
ja
inc
pop
std
test
leave
dec
lret
aad
xlat
cli
lret
jp
jo
jmp
mull
cmpsb
jb
pusha
and
clc
xor
push
adc
dec
pop
xchg
scas
xor
lret
insb
pop
mov
pop
data16
stc
out
outsl
sbb
push
dec
inc
inc
xor
lds
mov
pop
or
inc
sarl
mov
adc
pop
aam
repz
cmp
movsb
test
adc
jmp
adc
push
lret
add
add
bound
push
pop
mov
xchg
loopne
sbb
or
fildl
ret
insb
shlb
or
mov
xadd
push
icebp
jno
icebp
mov
ljmp
fnsave
push
or
cmp
stos
inc
mov
jbe
sti
inc
jle
mov
and
fstl
in
jns
inc
jno
ss
dec
shrl
jmp
gs
jge
es
jmp
loopne
ror
add
jo
and
xchg
scas
xor
in
add
xchg
cmp
jmp
sbb
push
adc
add
cmpsl
sbb
cmp
add
aad
jl
push
push
popf
or
aaa
into
push
cmpl
cmp
jne
cwtl
dec
imul
loope
imulb
fwait
adc
pushf
inc
mov
push
inc
cld
push
fidivs
aam
xchg
add
lret
and
mov
cmpsl
dec
push
pop
mov
adc
sti
dec
pushf
sbb
pop
cmp
fists
cmc
sahf
xor
dec
fs
fcoml
movsl
or
lahf
ss
out
xlat
mov
sbb
sbb
sbbb
shll
mov
dec
push
sbb
fisttpl
rorl
xor
mov
and
fidivrs
into
fimull
mov
rcll
mov
js
push
mov
jle
adc
pop
lret
xchg
and
push
cltd
pop
sbb
stc
sti
xchg
and
pop
addl
imul
loop
mov
hlt
test
and
inc
mov
dec
addb
mov
popa
cmpsb
addl
in
out
cli
inc
dec
ret
fmull
popa
fwait
jg
pop
push
xchg
les
dec
jge
das
add
icebp
mov
popa
out
ljmp
inc
stos
sbb
fwait
jg
in
out
lahf
enter
sub
pop
adc
mov
cltd
cltd
and
mov
and
leave
push
orl
das
mov
rcr
ljmp
clc
js
and
cmp
xlat
scas
xchg
lods
test
xor
cmc
ds
jbe
dec
xchg
inc
jns
cmp
add
daa
push
xchg
mov
mov
out
add
push
sbb
mov
and
sub
add
adc
inc
jne
fsubs
sub
icebp
imul
js
cmp
in
adc
push
or
in
stos
incl
fbstp
icebp
fcoms
int3
sbb
cmpsl
add
pushf
cmp
adc
mov
popa
rcrl
out
pop
mov
mov
xor
add
adc
test
xor
mov
int
ds
movsl
les
les
and
lock
fs
add
jmp
jbe
mov
add
rorb
dec
dec
jecxz,pt
pop
or
enter
pcmpeqb
mov
mov
cmpsl
fnsave
sti
pop
pop
insl
hlt
push
adcl
push
pop
out
mov
hlt
je
and
lods
sub
add
adc
add
fwait
andl
daa
xor
xchg
gs
out
aaa
or
inc
cmc
mov
loope
inc
jne
gs
lods
xchg
in
push
lea
push
or
loopne
xorl
inc
idivl
and
loopne
cltd
add
aad
lods
cwtl
mov
or
imul
repnz
dec
mov
dec
xchg
pop
cld
pop
jmp
inc
pushf
shlb
jns
scas
cmp
ret
shll
mov
out
int
xchg
mov
ds
adc
mov
aas
push
or
subb
pop
dec
adc
cmpsb
pop
pop
jmp
mov
cltd
push
jo
aaa
mov
int3
bound
stc
notl
lret
cmp
jbe
shrb
sub
and
add
cld
jp
cmp
add
jecxz
or
pop
or
es
cmp
sbb
lods
int3
mov
aaa
jae
and
mov
loopne
push
inc
jbe
movl
test
mov
jle
push
sub
sub
push
or
adc
mov
pop
push
inc
fdivrl
popa
sub
or
dec
pop
push
js
dec
and
ja
bsr
and
out
bound
xor
mov
movsl
aas
mov
mov
outsl
push
pop
ja
fcmove
adc
outsl
into
jl
imul
sarb
notb
in
testl
xchg
jb
arpl
cmp
pop
cmp
inc
jnp
sahf
ficoml
decl
filds
push
pop
fistpll
cbtw
jbe
sti
cmp
mov
lcall
inc
cwtl
add
call
stos
mov
enter
movsb
dec
or
mov
gs
xor
add
sub
rolb
mov
fs
xchg
mov
cmp
pushl
pop
test
inc
mov
sub
imul
stc
pop
mov
push
dec
and
inc
sarb
aad
push
pop
call
sbb
xchg
rol
ljmp
mov
dec
mov
arpl
pop
pop
dec
jno
cmp
or
std
stos
ud2
sub
push
lods
push
jl
jbe
cmp
add
in
cmpl
mov
cltd
call
jae
cmovnp
xchg
out
enter
sbb
stos
sti
mov
mov
push
cmp
xchg
push
add
push
cmc
pop
lea
add
mov
mov
cmp
rcrl
inc
xchg
scas
cmp
push
pop
pushw
dec
testl
hlt
and
xorb
mov
mov
pop
jne
pop
subps
dec
sub
inc
xor
mov
add
rcl
ret
aas
mov
lret
and
jge
pop
sbb
arpl
ss
jg
addr16
sub
pushf
pusha
enter
inc
rcrb
loope
inc
mov
int
icebp
xchg
lock
lock
adc
mov
aas
lcall
lods
scas
dec
adc
sub
ljmp
lea
push
jl
fucom
adc
xchg
mov
inc
mov
mov
and
cmp
xchg
dec
stos
or
enter
fnstcw
enter
movzwl
push
jle
jno
push
test
push
jle
pop
pop
push
nop
pop
rolb
jno
mov
adc
inc
loop
pop
lock
mull
fldcw
neg
sub
adc
push
sbb
sarb
int3
mov
sub
scas
ficompl
sbb
adc
dec
in
cs
lods
adc
cmp
mov
inc
fcmovu
in
add
test
pop
cmp
mov
inc
push
andl
outsb
int3
lret
ja
ds
pop
fidivrs
push
or
repz
inc
mov
in
outsl
scas
ljmp
std
sti
jle
jb
xchg
mov
xorb
pop
lods
push
jbe
sbb
pop
and
push
es
inc
mov
repz
lods
lahf
xchg
cmp
lds
sbbl
mov
add
inc
dec
push
jg
icebp
je
out
or
rclb
sahf
jbe
in
cmp
pop
mov
fldt
fildll
les
push
stc
imul
mov
lret
pop
mov
movsb
xchg
repnz
sarb
dec
mov
jmp
pop
test
sbb
pop
fsubrs
xchg
andb
cmp
push
add
sbb
repz
sbb
add
fmull
and
cmpl
addr16
fimuls
loop
add
mov
loope
lea
push
push
or
dec
daa
cmpsl
iret
in
outsl
cmc
data16
sbb
lea
incl
ficomps
pop
fiaddl
lcall
xchg
mov
lret
jecxz
cmp
fiadds
mov
call
into
mov
sarb
in
cmp
test
sbb
cltd
cmp
cli
mov
mov
jb
into
dec
fsubl
adc
dec
mov
sub
rclb
loop
outsl
sarb
adc
xchg
push
add
jb
aam
jmp
loope
sub
ret
cmpsb
sub
add
out
inc
inc
push
enter
xchg
or
icebp
in
mov
lock
popa
sbb
cmp
and
sub
sub
sbb
dec
dec
add
jne
adc
xor
negl
out
fs
push
stc
scas
cmp
cmpsb
or
insl
pop
dec
pop
test
push
gs
out
jns
sbb
ss
jecxz
add
aad
xchg
aas
adc
arpl
mov
gs
mov
fwait
inc
lahf
icebp
or
shrl
stos
push
or
adc
or
pop
adc
jnp
jl
loop
dec
mov
es
add
lock
cmp
icebp
pop
inc
pop
cltd
mov
or
leave
xchg
pop
pop
xor
push
ja
rcrl
add
aam
ret
loope
outsb
andb
adc
rcl
and
mov
fcoml
inc
ja
popa
aam
jae
pop
in
jl
jp
hlt
jge
decl
into
xor
pop
xor
mov
mov
cwtl
jl
mov
je
insl
divl
jle
push
stos
jno
mov
xchg
push
sbb
mov
mov
sub
push
scas
inc
xor
and
pop
mov
insl
sub
xchg
rcrb
push
mov
xchg
sarl
repz
sti
fmuls
cmpsb
or
in
in
cmpsl
sub
je
lret
mov
jmp
xchg
mov
imul
adc
pop
and
xchg
jg
jae
ja
fnsave
and
ljmp
movsl
in
mov
sub
loope
jecxz
cvttps2pi
pop
sub
or
cs
xchg
and
cmp
xchg
and
xor
daa
dec
mov
mov
aaa
jae
xchg
stos
hlt
lods
ret
repnz
or
and
dec
rorb
xor
mov
xchg
mov
cmp
out
addr16
xor
aaa
inc
push
ficomps
mov
mov
test
sbb
lcall
cmpsl
add
imul
pop
or
dec
and
test
mov
in
pop
hlt
cmp
xor
pop
out
sub
gs
and
or
cmpl
push
xchg
dec
lea
cmp
xchg
cli
std
jg
xchg
adc
mov
inc
js
test
call
and
jnp
xchg
sbb
mov
lds
mov
scas
mov
sub
inc
xor
lcall
inc
jb
cwtl
mov
jae
jo
fsts
rorb
cmp
cmp
sub
loop
xor
into
test
fcomps
cmp
pushf
rcrb
fistl
xor
mov
lock
xor
sub
test
push
fs
sub
insl
cmp
outsl
cmpsl
xchg
scas
es
jno
jbe
xchg
leave
xchg
inc
xor
punpckhbw
clc
pusha
xor
dec
leave
cmp
pop
fwait
popa
ljmp
push
pop
mov
or
mov
push
inc
inc
hlt
pop
sbb
xlat
out
in
divl
fdivrs
and
mov
sub
faddp
ds
jmp
addb
or
imulb
pop
test
movsb
ret
scas
lods
popa
je
xor
adc
call
mov
add
sahf
shr
push
test
lea
cmpsl
and
lock
or
gs
cmp
and
lcall
push
xor
mov
mov
jge
pop
aaa
or
sub
test
fsubl
outsb
cmp
mov
jbe
jno
gs
jp
test
push
inc
inc
test
add
scas
std
and
xchg
mov
adc
aad
adc
and
jg
cs
inc
sbb
or
jg
mov
pop
ret
cs
push
flds
decl
repz
sbb
mov
sti
sub
outsl
mov
dec
xlat
add
das
jecxz
xlat
aam
xor
pop
fmulp
rorb
jecxz
lea
int
dec
pop
inc
or
dec
shll
xchg
test
and
jp
fs
jle
and
out
xor
push
repnz
hlt
shll
mov
fisubl
pop
es
ret
sub
xchg
test
or
push
cmp
ret
clc
cmp
bnd
inc
mov
xchg
in
pusha
out
push
push
mov
xchg
out
cmp
icebp
and
pop
loopne
or
mov
and
jmp
fwait
js
std
add
int
inc
adc
or
sub
mov
dec
dec
or
cmp
sahf
add
inc
aas
out
out
movsl
sub
jo,pn
or
cli
sub
push
pop
arpl
jno
test
cmc
xchg
arpl
push
popf
or
inc
cmp
jecxz
arpl
aaa
xchg
daa
arpl
mov
cmc
ds
or
pop
aad
invd
das
xlat
pop
dec
in
jnp
ja
in
mov
aaa
jp
repnz
call
inc
addb
or
xchg
pusha
call
loopne
dec
out
inc
pop
stc
ret
out
fcoml
mov
leave
icebp
clc
push
push
shr
jbe
xchg
mov
adc
jno
jp
shll
xchg
add
mov
dec
add
jnp
stc
pop
xchg
and
cli
ret
jp
fwait
cmp
daa
inc
fstpt
testb
dec
mov
into
sbb
push
push
xor
inc
sti
lret
pop
push
or
and
adc
or
imul
aad
mov
dec
enter
dec
shl
add
cmpsb
rclb
in
lcall
insb
sarl
movsl
push
ror
mov
pusha
addl
stc
pop
les
nop
add
jno
push
movsl
xchg
scas
cwtl
int
sbb
mov
imul
xor
jne
sbb
or
sarb
int3
jae
lds
jecxz
lret
ficompl
xchg
ror
adc
js
mov
push
ja
lcall
jge
js
ljmp
jl
mov
pop
lock
cld
sub
imul
stos
cmp
xor
xor
pop
clc
movsb
out
sub
mov
sub
xor
sub
insb
dec
dec
inc
mov
enter
mulb
iret
push
std
cmpsb
insl
inc
push
arpl
nop
outsb
mov
mov
fnsave
data16
mov
sub
sahf
int3
adc
fistl
adc
adc
movsl
mov
mov
lods
inc
enter
inc
jecxz
adc
mov
push
mov
movsb
xor
push
std
in
mov
jns
mov
and
dec
sbb
or
fwait
mov
adc
mov
cmp
out
adc
mov
dec
push
in
mov
lea
adc
cs
push
xor
sub
daa
push
setge
or
cmpsb
pop
or
pop
pushf
mov
jno
mov
in
divl
pop
mov
lea
mov
cmp
leave
mov
mov
mov
repnz
ror
inc
mov
pop
fdivl
sub
test
mov
pop
rclb
aas
pop
fdivs
jecxz
inc
mov
rol
push
ret
mov
gs
xchg
cmp
popf
outsl
or
sub
pop
fisubl
push
imul
cmp
cmp
shlb
les
lahf
cli
out
lea
loope
inc
aad
mov
mov
xor
fucomip
add
cld
cltd
scas
pop
mov
or
adc
pop
or
sub
in
jno
add
dec
mov
mov
adc
loop
cltd
call
jmp
xchg
sti
dec
dec
mov
je
xor
icebp
ja
and
or
jg
cltd
stc
push
bound
mov
aaa
int
sbb
loopne
push
aaa
jl
xchg
xor
xchg
call
int
fwait
int
add
movsb
mov
add
icebp
lcall
adc
aam
into
out
aad
test
adc
and
push
out
les
sub
mov
mov
jge
mov
push
mov
cmp
push
jl
and
je
sahf
pop
mov
xor
jb
rclb
cwtl
pop
xor
movsb
push
lds
sub
xor
mov
dec
add
scas
loop
pop
mov
aad
sub
or
rcll
ret
fwait
mov
xchg
testl
mov
sbb
pop
and
pop
cmp
xchg
jmp
fsubrl
or
jae
add
cmp
aam
ljmp
cmpsl
adc
je
mov
iret
ds
iret
push
fnstcw
push
inc
xchg
pusha
leave
scas
es
xchg
pop
or
das
jge
sbb
mov
mov
loopne
arpl
adc
ljmp
pop
push
cmp
push
lds
mov
je
loope
cmp
push
mov
push
cmp
jns
adc
add
bound
mov
std
ja
testb
movsl
push
xor
sbb
push
mov
roll
stc
mov
fimuls
pop
test
cmpb
xchg
push
sbb
mov
ja
or
dec
mov
add
or
ss
cs
cli
repnz
sub
cmpl
mov
hlt
adc
and
lret
mov
jge
cmpsb
fisubrl
dec
lret
mov
idivb
dec
jg
pop
sbb
push
cmpsl
sub
pop
lods
repnz
push
repz
mov
pop
leave
les
or
loop
sbb
jnp
enter
mov
push
lods
push
pop
push
rclb
jnp
fsts
insb
daa
dec
jb
jecxz
shlb
sar
dec
jnp
mov
ljmp
cmc
ret
jno
pop
nop
mov
mov
adc
inc
pushf
clc
and
or
mov
lret
xor
sti
leave
cli
loop
lds
loopne
clc
jbe
mov
mov
xchg
dec
sub
mov
stos
sub
mov
adc
test
lods
fwait
adc
sarb
leave
inc
inc
mov
inc
and
outsb
in
pop
rol
andps
jns
mov
lods
test
push
jg
loop
inc
or
push
jg
mov
adc
ljmp
push
call
jne
lea
push
lahf
push
cmp
test
dec
dec
sbb
mov
mov
cltd
mov
dec
xor
or
call
les
pop
pop
rorb
pop
fildl
xorl
mov
clc
add
jae
mov
addr16
or
iret
cmpsl
push
mov
and
lods
test
xchg
loope
out
pop
sbb
cwtl
pushl
data16
inc
jns
and
sbbb
inc
outsl
sbb
push
in
pop
loopne
movsl
jbe
xor
xchg
fwait
pusha
xlat
int3
jle
pop
cmpsl
push
push
sbbl
js
in
push
or
mov
inc
pop
mov
ds
pushf
cs
lods
out
pop
dec
shlb
lret
loopne
fisttpll
and
aaa
mov
jp
ljmp
xor
imul
mov
sbb
pop
sbb
jp
nop
add
push
mov
pop
popa
iret
inc
xchg
pop
fsubs
jge
js
xacquire
or
cmp
and
sahf
cmp
mov
dec
xor
repnz
and
mov
sub
lods
dec
pop
mov
ja
sbb
call
inc
mov
push
push
xor
fldl
scas
and
pusha
inc
cltd
dec
cmp
stos
mov
pop
pop
popa
dec
pop
xchg
and
xstore-rng
cmpsl
jmp
stc
and
jmp
sbb
lcall
adc
xchg
nop
ficoml
ficompl
mov
jnp
pop
xchg
mov
movsb
out
push
or
cmp
hlt
mov
imul
lcall
ss
mov
std
shrl
xor
bnd
jge
jb
iret
mov
mov
jg
adc
lcall
test
pop
xor
cmp
test
dec
std
jno
mov
mov
jae
mov
lods
mov
mov
loopne
fcomps
movsb
jge
cld
cld
sub
mov
mov
xchg
lahf
sbb
dec
popf
std
and
mov
dec
insl
fisubl
aad
addr16
movsb
loopew
mov
rolb
mov
int3
pop
popa
push
ret
dec
mov
pop
pop
ret
push
pop
jo
into
inc
outsl
loope
or
daa
jbe
and
cmp
and
lret
push
mov
jbe
in
xor
push
inc
sub
cli
push
out
cli
mov
mov
xor
mov
nop
je
adc
scas
mov
shll
out
je
sub
out
lcall
cmp
jbe
fsubl
mov
cmp
jnp
and
sbb
rcrb
jb
dec
popf
in
xorb
aaa
jmp
adc
push
sub
mov
pop
mov
ja
js
popf
xchg
std
cltd
inc
in
jge
loop
or
movb
popa
data16
addr16
test
fidivl
test
scas
clc
cmp
addr16
mov
lcall
loopne
jb
addr16
jmp
sbb
xor
adc
push
pop
dec
mov
fcoms
push
sbb
jmp
adc
in
jb
add
fdivr
cmp
inc
shll
jp
mov
fs
adc
adcb
mov
aas
dec
sub
cmc
scas
sub
sub
rorl
mov
mov
jbe
fs
leave
cwtl
sub
test
mov
movsb
inc
jnp
and
notl
push
jp
lds
push
dec
mov
jo
mov
nop
xorl
push
insl
lods
mov
daa
pop
dec
xor
cmp
and
repz
pop
xor
mov
jb
jo
push
mov
xlat
int3
in
lods
jae
jno
inc
xor
or
and
test
lds
lahf
sbb
and
out
les
ds
fs
pusha
js
lea
stos
mov
and
pop
mov
adc
out
jae
inc
leave
or
rolb
add
xor
mov
or
in
cmpsl
pop
or
and
repnz
xor
shlw
xor
xchg
mov
out
mov
nop
clc
mov
pop
sarb
xchg
fistps
ds
pop
lret
sub
xor
pop
mov
mov
push
es
xor
fsub
dec
and
pop
fisubrs
data16
pop
inc
in
adc
aam
dec
mov
xor
or
cmc
xor
push
sti
ds
xchg
scas
mov
aad
jae
cli
mov
in
int
leave
xor
idivl
pop
fisubrl
shlb
repnz
jnp
mov
lret
out
test
rclb
scas
and
mov
jne
rol
out
js
cltd
aas
lods
movsb
filds
mov
das
lock
jb
and
add
dec
sbb
lahf
dec
fldenv
scas
cmc
cmp
inc
add
sub
sbb
jmp
add
xchg
mov
sub
jo
or
stc
sbb
jae
leave
ret
fidivs
pop
xor
lcall
clc
out
xor
fsts
push
pop
fistpl
sbb
sub
xchg
push
fmulp
fnstcw
inc
sbb
pop
shlb
inc
mov
sub
sbb
mov
fwait
xchg
mov
out
push
nop
cwtl
fstpt
xlat
roll
jle
icebp
insb
xchg
es
sub
pop
data16
xlat
dec
les
xchg
dec
add
sbb
outsb
pushf
ja
pop
jae
xchg
and
nop
or
stos
es
and
xor
push
jo
nop
jmp
shl
mov
and
jmp
popf
imul
pushf
xor
mulb
enter
fnsave
or
add
push
mov
dec
mov
cmp
aaa
es
sub
jecxz
mov
sub
daa
test
outsl
and
jecxz
inc
bound
and
call
and
push
ja
sub
ret
adc
mov
leave
jecxz
stos
cmp
in
mov
cmp
mov
push
pop
mov
push
rcrb
xor
pushl
xor
je
pop
mov
pop
test
add
je
lds
fcom
or
xor
test
jae
adc
xor
arpl
data16
aad
les
add
pop
adc
imul
xlat
clc
add
jb
sub
and
out
or
dec
stos
enter
mov
mov
jle
xchg
imul
loop
daa
adc
ret
mov
int
fwait
xchg
repz
push
adc
jne
add
lea
int3
jecxz
cs
movl
cmpsl
push
mov
pop
das
cmpsb
jne
test
pop
imul
inc
adc
popa
pusha
xor
xor
sahf
loope
jne
shll
or
adc
pop
or
push
test
gs
out
pop
pop
popl
xor
push
mov
in
mov
xor
lock
cmovg
xor
sub
int
jecxz
jg
or
rolb
xor
andl
outsl
adc
das
or
mov
pop
test
cmp
popf
loopne
mov
xlat
pop
push
sub
sbb
or
mov
push
dec
leave
mov
aaa
ss
mov
cmp
jo
subl
and
ret
cli
into
fst
mov
xlat
pop
pop
mov
xchg
pop
pop
jp
mov
pop
aaa
les
js
in
mov
enter
mov
sbb
fsubr
cmp
in
mov
inc
lock
push
lock
lds
idivl
cmpsb
into
arpl
icebp
inc
mov
jo
cltd
sub
fimuls
scas
push
inc
and
shr
mov
jecxz
push
test
jbe
lds
or
test
faddp
mov
ss
xchg
mov
mov
cmp
add
sub
daa
cmp
inc
lds
nop
clc
mov
out
sbb
jp
jb
and
xor
jae
xor
nop
stc
scas
fstps
fistps
push
insb
dec
push
push
jge
mov
inc
xchg
jnp
idivb
push
xor
sbbb
pop
xchg
sahf
popf
mov
or
addb
in
call
push
stc
fistl
dec
pushf
call
mov
cmpb
and
push
into
mov
cld
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
jmp
mov
or
mov
orl
add
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
addl
add
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
mov
sbbl
mov
sub
mov
orl
add
mov
jmp
movl
mov
mov
andl
add
adcl
mov
addl
mov
mov
orl
xor
add
cmp
movl
je
jmp
add
mov
sub
mov
subl
xor
andl
add
cmp
mov
movl
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
jmp
jb
xchg
repz
jb
adc
mov
je
stc
mov
jo
loop
jo
fwait
mov
aad
inc
pop
mov
les
dec
cmpl
jle
pop
mov
bound
or
xchg
mov
xor
xor
enter
in
aad
arpl
sbb
mov
imull
sbb
mov
cmp
ljmp
jmp
roll
lcall
mov
repz
cmc
ret
lahf
sbb
lea
mov
pop
shr
sahf
jg
jne
xchg
jmp
sbb
ss
in
std
adc
xor
cltd
out
int3
negl
mov
xchg
cmp
in
arpl
push
sub
out
rcrb
popa
jns
testb
insb
popa
sub
dec
nop
mov
mov
lcall
or
add
pushl
fistpll
sbb
and
in
jno
fcoms
lcall
dec
aaa
jecxz
scas
ss
shll
daa
push
inc
cwtl
mov
add
iret
mov
test
inc
dec
pop
push
or
and
xor
repz
int3
shrl
xchg
in
addr16
ja
sbb
cmp
sbb
pop
outsb
aaa
lods
jmp
dec
mov
cltd
lret
into
lds
mov
cmp
repnz
cmpl
cmp
int3
pop
std
pop
jl
add
push
xchg
sub
and
pop
add
pop
mov
mov
andb
xlat
dec
dec
or
stos
imul
jns
push
ljmp
adc
roll
xor
pop
jne
push
rorl
imull
ror
jg
out
add
mov
push
inc
xchg
mov
pop
or
out
jb
jmp
in
mov
icebp
sbb
mov
loopne
pcmpeqw
loopne
push
sbb
add
mov
movsb
mov
fsubrl
insb
xchg
jb
js
xchg
cli
inc
shll
mulb
mov
ret
lcall
dec
sbbl
sbb
icebp
rol
sahf
add
xchg
outsl
in
and
ret
xor
popa
inc
arpl
xlat
pop
mov
jns
mov
addr16
aaa
xchg
mov
shl
dec
sub
das
push
std
loop
adc
push
inc
lahf
mov
ljmp
fnstcw
pop
ljmp
adc
cmp
mov
push
cmp
jnp
pusha
movsl
mov
inc
lds
mov
decl
add
jns
rorl
cmp
scas
mov
cmpsl
repz
fcompl
cmp
push
mov
jns
cs
cmp
stos
xchg
cmp
pop
mov
inc
in
or
sarl
or
xchg
cmp
mov
xchg
flds
std
mov
pop
stos
push
mov
pop
mov
sub
scas
rcrb
addl
mov
push
jecxz
shlb
mov
bound
xor
ret
cmpsl
pop
cmp
push
sub
lahf
clc
ficomps
xlat
add
std
jns
or
xor
fmuls
or
dec
mov
inc
dec
pop
xchg
stc
sub
mov
inc
pop
sbb
or
pop
aas
lahf
repz
xchg
inc
sub
jge
sbbb
push
dec
js
ret
scas
jle
stc
leave
jae
in
push
add
out
sbb
outsl
mov
enter
test
mov
mov
stc
fnstenv
cmpsb
std
das
dec
imul
outsb
inc
mov
cmpsl
es
adc
insb
pop
in
out
inc
popf
fdivrs
out
movsl
mov
imul
aam
dec
adcl
nop
in
test
pop
aaa
jae
je
pop
stos
dec
inc
jae
xchg
addr16
or
pop
and
inc
sub
sahf
pop
mov
outsl
dec
lods
pop
mov
rolb
ljmp
push
sahf
jne
or
mov
or
xchg
fcoml
repnz
jne
dec
sahf
sub
push
mov
cli
ds
sub
decb
pop
adc
gs
lock
mov
and
mov
jns
and
jb
mov
jg
idivl
cs
in
movsb
cltd
imul
xor
mov
and
scas
cs
mov
pop
lea
and
push
repz
cmp
cmp
mov
loopne
loop
inc
icebp
adc
push
leave
cmp
arpl
popf
mov
cld
stc
movl
mov
add
in
stos
icebp
pop
push
fistl
pop
xor
jg
repnz
xor
mov
dec
push
popa
and
sbb
pop
repnz
aam
pop
rol
cmp
scas
push
push
jge
das
pop
jb
out
in
dec
mov
test
pop
adc
push
cs
arpl
cmp
xchg
xchg
insb
and
pushf
test
push
fidivrl
lock
push
cmp
fsubrs
dec
inc
loope
xor
xor
int
test
nop
subb
pop
test
push
sarb
mov
push
mov
bnd
dec
lcall
insb
lea
adc
push
or
outsl
lahf
into
out
popa
lret
xlat
adc
mov
or
movsl
and
mov
dec
lret
xor
push
aad
sahf
sarb
sbb
lock
mov
dec
lods
xlat
in
jb
loopne
pop
adc
mov
loopne
mov
fdivrl
and
pop
push
inc
mov
pop
inc
mov
mov
mov
cmp
xchg
pop
pushf
mov
xor
fstpt
xor
push
pop
lret
jno
shr
push
cmpsb
xchg
enter
ja
sub
cmp
jle
xchg
addr16
dec
cmp
xchg
stc
jmp
shll
sub
insb
jbe
lcall
stos
les
jp
shl
jno
xor
jmp
mov
les
mov
mov
pushl
sbb
mov
or
test
ds
adc
or
shll
pop
and
test
sub
test
jle
push
out
sbb
lret
stos
sub
or
dec
pop
sub
out
cs
insl
leave
pop
fs
loope
sbb
aad
lds
pop
cmp
test
mov
into
cs
mov
push
pop
inc
nop
jp
ja
push
dec
stos
jo
negb
jbe
add
pop
xor
xor
aaa
jnp
stos
sbb
dec
out
pop
insl
xor
movsb
loopne
movzwl
jno
xchg
mov
dec
aam
lods
ja
pushf
push
sub
jge,pt
clc
aas
xchg
loop
cltd
jne
test
pop
sbb
jnp
dec
rcr
sbb
cld
sub
sub
arpl
jo
cmp
and
push
cltd
push
sub
lock
aas
mov
scas
insb
or
inc
push
mov
xchg
loop
mov
and
punpcklbw
and
mov
movb
xlat
add
fmull
add
push
xor
lahf
out
inc
aad
into
out
dec
jmp
jns
nop
les
movsl
in
repnz
and
out
xchg
inc
sbb
add
iret
lahf
test
faddp
xchg
loopne
outsl
scas
lret
lret
add
cs
jno
rorl
adc
dec
add
aad
lods
je
pop
jl
adc
sub
xchg
xor
sbb
adc
ds
xor
aad
mov
xchg
mov
jmp
stc
popf
enter
fcoml
je
dec
sub
stos
imul
data16
das
stc
roll
push
mov
cmpsb
mov
xchg
jp
mov
div
insb
jae
inc
lds
xchg
jg
mov
mov
sti
idivl
push
sbb
outsb
push
cmp
test
int3
cld
push
out
pop
and
int3
xor
adc
ret
dec
vandnps
mov
cld
jle
cwtl
mov
inc
xchg
sbb
std
je
jae
loop
icebp
dec
dec
dec
cmp
xor
add
adc
mov
mov
les
jb
cmp
aad
pop
jb
rclb
xor
inc
lods
and
cwtl
sbb
or
push
cld
add
repz
mov
movsb
faddp
add
mov
cmp
mov
setl
not
data16
icebp
mov
jmp
jns
pushl
mov
mov
insl
notl
jmp
add
xchg
cs
cmp
mov
mov
or
int
orl
xlat
add
mov
cmp
das
or
mov
or
push
and
push
aam
mov
adc
shll
pop
iret
jge
cmp
adc
lods
cli
arpl
ss
dec
push
mov
dec
add
xor
pop
mov
lret
addl
movsbl
stc
push
mov
pop
fcomp
xlat
aam
cmp
push
sbb
test
jns
or
mov
pop
fildll
adc
lods
in
repz
gs
or
cmp
data16
scas
adc
dec
lret
dec
popa
cmp
adc
inc
pop
or
insb
lahf
mov
aad
cs
movb
repnz
rcr
xor
pusha
mov
cmp
rol
dec
xchg
daa
xchg
cmpsl
dec
out
stc
out
popf
xchg
mov
push
xor
sbb
push
loop
jnp
movsl
movsl
add
pop
sbb
in
add
sub
loopne
cmp
stos
in
rolb
arpl
dec
sub
inc
dec
icebp
adc
mov
loopne
in
loopne
fnstcw
adc
pushf
mov
adc
imul
mov
addb
add
xchg
mov
lahf
js
mov
lock
mov
mov
js
stos
lock
push
add
adc
mov
int3
repz
stos
cmpsl
dec
and
out
xchg
insl
sti
cmp
lahf
cmpsb
js
xchg
dec
mov
xchg
mov
push
sbb
test
lahf
xchg
mov
stc
scas
and
mov
pop
repnz
mov
testl
jle
movsb
mov
testb
scas
shlb
jmp
mov
movsb
adc
mov
je
lods
inc
pop
pusha
push
sub
jge
lcall
fs
rcll
mov
stos
adc
enter
int
mov
dec
addb
fldenv
es
xorb
xor
add
stos
jns
push
lods
dec
and
js
jecxz
icebp
imul
add
cmp
and
fwait
int3
adc
jae
xor
jb
push
add
popa
jge
add
in
jb
push
fistps
and
sarb
gs
push
pop
jne
adc
popf
popf
jge
out
in
lret
xchg
ror
jecxz
sub
mov
dec
inc
add
sahf
jnp
sahf
stos
out
outsb
js
mov
and
lcall
jnp
mov
ljmp
mov
bound
and
aaa
mov
adc
mov
dec
sub
sti
sub
xor
stos
xchg
ret
push
or
pop
outsb
mov
jbe
xor
js
mov
aad
jmp
adc
outsb
push
ds
movsb
lret
lcall
mov
negb
pop
cs
scas
lcall
sbb
push
les
push
xlat
fiaddl
lcall
sub
sbb
or
clc
aaa
rorl
inc
sbb
sub
xor
sub
pop
dec
cmp
subl
ja
xchg
fcoml
clc
insl
enter
test
adc
cmp
ja
sbb
shll
loope
pop
loopne
scas
push
test
mov
mov
or
rorl
testl
popf
adc
push
push
inc
xchg
xchg
xor
mov
lods
ss
js
dec
loope
adc
mov
xchg
inc
adc
orb
int
lea
repnz
ja
mov
into
test
call
adc
jae,pn
or
or
call
outsb
inc
and
hlt
dec
je
call
add
sbb
dec
stos
int3
adc
push
outsl
pop
pop
dec
fistpll
sahf
and
fisubrl
xor
inc
pop
stos
repz
mov
mov
ret
jo
out
mov
sbb
call
lcall
or
push
mov
jecxz
xor
jo
sbb
xlat
mov
jb
mov
stos
scas
stos
or
fs
lret
xor
stos
das
and
mov
cmp
rclb
fisttps
jg
das
pop
mov
cs
adc
cmp
mov
push
mov
ds
adc
push
shlb
daa
clc
mov
les
ss
pop
idiv
adc
and
mov
out
and
shrl
sarb
lods
inc
outsl
jno
ret
lret
jns
orps
aaa
add
in
adc
dec
inc
movsb
andb
xor
adc
cmp
in
int
jle
xor
sti
fadd
dec
inc
mov
xchg
daa
je
sbb
push
xchg
dec
cwtl
cmp
outsl
icebp
loopne
pop
xchg
mov
cld
jbe
xchg
es
xor
xor
cmpsb
or
mov
arpl
xchg
cmp
push
je
test
mov
or
shrl
xchg
icebp
pop
repz
sub
mov
mov
mov
push
pusha
add
stos
jbe
dec
in
lds
jne
pusha
pop
scas
stos
lds
mov
inc
popf
pop
mov
cmp
xchg
mov
pop
sub
add
lcall
jo
idivl
dec
inc
cmpl
pusha
or
xchg
xor
pop
sub
cli
push
mov
mov
in
xor
bound
and
lea
push
in
sahf
jns
mov
or
loope
outsb
out
jle
or
jl
test
adc
pop
insb
or
movsl
out
outsl
push
fwait
scas
inc
add
outsb
lock
mov
stc
fidivrl
dec
pop
sub
aam
rorl
stos
hlt
jmp
popa
push
add
cmc
or
dec
jns
adc
and
xchg
loopne
sub
out
push
or
push
mov
popf
add
jle
sub
cli
and
into
notb
mov
dec
push
sarl
call
xor
pop
dec
popa
scas
nop
ret
test
mov
ss
inc
sbb
xchg
out
pop
shll
subb
js
inc
inc
ficomps
add
insb
cmp
sbb
xchg
data16
leave
pop
jle
mov
ljmp
stc
push
fadd
je
sbb
in
adc
cmp
adc
sub
inc
pop
scas
daa
in
jb
mov
or
arpl
lahf
jae
out
jno
adc
cmp
dec
lahf
pop
add
cmpsb
rclb
loope
or
je
cmc
iret
mov
pop
sti
cs
mov
incl
push
mov
sbb
or
xchg
dec
ret
aas
aam
fdivl
stos
push
push
add
leave
ficoms
jecxz
cmp
iret
cmc
push
ds
rcll
sub
push
or
jo
dec
jmp
fucom
jns
repz
mov
adc
aad
rolb
xchg
jecxz
ficompl
and
lret
in
out
sub
aam
faddl
ret
call
push
out
popf
xor
arpl
pop
dec
mov
dec
mov
cltd
andb
cmp
push
xchg
pop
jo
jae
xchg
xor
clc
sub
data16
pop
call
pop
xchg
inc
push
addr16
outsb
adc
ljmp
arpl
jns
scas
iret
jmp
xchg
pop
xchg
push
add
es
test
lea
mov
mov
push
clc
out
cmp
out
jbe
arpl
jmp
pop
out
push
std
std
stos
je
fs
or
sti
mov
and
bound
adc
push
and
and
lds
imul
cld
adc
mov
lea
test
dec
fldenv
cltd
or
aas
stos
lock
sbb
or
stc
fndisi(8087
dec
test
shll
push
inc
or
inc
into
pop
and
test
and
repnz
das
push
ficomps
mov
pop
out
test
xchg
inc
loop
sbb
out
rcrl
push
bound
movl
test
inc
test
into
insb
pop
addr16
or
push
push
aam
loope
jb
out
or
sub
das
push
cmpsl
cmp
xchg
xchg
faddl
in
out
ror
cmp
loop
in
add
pop
pop
cmp
pop
mov
ret
pop
and
ljmp
and
scas
push
mov
or
movsl
adc
jg
mov
sbb
mov
xor
xchg
imul
push
sar
out
and
sbb
loopne
jecxz
mov
icebp
lea
fcoml
jb
cwtl
test
ret
xor
cmp
insb
in
jb
enter
hlt
in
sub
clc
mov
and
add
push
pop
dec
mov
jp
jmp
lahf
add
ret
inc
jecxz
jb
rcrl
rcl
push
jg
mov
cmp
inc
fwait
mov
cli
and
pop
adc
sti
xchg
xchg
fists
pop
fmuls
mov
repnz
ss
mov
and
push
pop
xor
jno
test
stc
loopne
popa
jo
xor
scas
imul
adc
jmp
inc
jmp
hlt
xchg
add
imul
aam
xchg
xchg
push
stos
fwait
push
cmp
pop
mov
pop
in
das
hlt
jmp
gs
mov
cmpsb
sub
jbe
push
adc
sub
orl
mov
xchg
inc
popf
in
inc
jbe
push
jo
pop
fstpl
mov
cmpsl
mov
adc
aad
sbb
and
pop
clc
and
push
jecxz
imul
mov
pop
movsb
mov
push
into
int3
xor
cwtl
dec
lret
out
and
cwtl
idivl
std
xchg
add
inc
sbb
iret
movsb
int
xchg
das
mov
jge
adc
cmp
imul
out
jp
fadd
xchg
loopne
icebp
mov
mov
sbb
and
lds
stos
imul
xor
rorl
nop
imul
xor
sbb
push
cmp
xlat
fildl
ljmp
push
fcompl
push
shrb
or
mov
or
and
call
nop
stos
jecxz
sti
xchg
sbb
in
adc
xor
xchg
cmpsb
int
push
nop
add
fdiv
outsb
pop
insl
cmp
loop
into
mov
xchg
dec
push
lcall
fisubs
jne
into
repnz
push
or
je
out
gs
sahf
xchg
pop
es
std
jo
xlat
push
adc
push
xchg
sub
or
loope
pushf
or
mov
cmp
mov
xchg
fdivrs
je
loope
aam
inc
dec
inc
js
cld
jne
aaa
cltd
pop
movsl
push
jnp
cmp
es
aaa
sbb
daa
iret
sbb
push
rol
dec
sahf
sbb
cmp
sbb
int
mov
xchg
addl
or
xor
outsb
out
mov
mov
push
in
or
xchg
pop
cmp
ficoms
shlb
jae,pt
outsb
or
mov
test
in
loop
dec
jo
mov
cmpsl
adc
xchg
or
add
insl
loope
andl
pusha
mov
cmp
mov
shr
mov
jmp
icebp
jge
xorl
adc
out
sub
test
xor
ja
mov
or
pushf
test
bswap
in
jo
jmp
jne
jns
movsb
add
or
inc
pop
outsb
mov
stos
rorl
in
popa
adc
sti
adc
test
mov
and
lock
bound
adc
and
imul
or
mov
cmp
jae
jbe
pop
and
test
xor
ds
dec
out
movsl
add
mov
adc
aaa
mov
mov
inc
cltd
stos
xchg
xchg
mov
xchg
jg
cld
mov
les
or
sbb
sarl
lds
jb
fisttpll
jmp
out
cmp
xorb
fisttpll
add
inc
pop
mov
inc
xor
nop
or
cwtl
and
out
or
cmp
xchg
mov
push
mov
bound
push
mov
in
cmp
dec
lds
nop
in
mov
addr16
cmpsl
sbb
subl
jae
fcomi
xchg
iret
mov
add
fsubrl
lret
xchg
repz
sub
push
jbe
shrb
arpl
stos
jp
mov
rorb
imul
fldl
xlat
or
push
ljmp
divb
pop
sbb
mov
and
out
std
dec
shll
rclb
daa
inc
mov
sbb
jnp
rcrb
adc
pusha
adc
add
inc
fistpl
lahf
popa
int3
addl
cmp
mov
mov
xor
jge
cmpsl
push
outsl
mov
jmp
sub
stc
fdivs
sbbl
inc
nop
int3
pop
pop
nop
push
lcall
lret
popa
testl
mov
in
cmp
fldcw
lret
rorl
xor
lahf
pop
and
arpl
inc
aaa
inc
push
inc
stos
or
sub
mov
cwtl
aas
adc
pop
loop
adc
loope
add
decb
popa
lds
shlb
int3
inc
cmpsb
lds
fs
mov
fs
jle
sbb
inc
lods
mov
dec
inc
adc
xchg
mov
call
mov
sbb
iret
jmp
and
shll
adc
pop
jb
mov
rclb
pop
loop
xchg
pusha
pop
addr16
cmp
adc
pop
data16
and
aas
push
adc
repz
xchg
hlt
fnstenv
mov
dec
and
adc
ret
outsb
cmp
lcall
mov
cmp
push
out
out
pop
scas
test
inc
cmp
push
cmc
adc
mov
test
mov
not
add
push
and
lret
sahf
or
sub
xor
mov
out
cwtl
lods
cli
mov
repnz
daa
mov
stc
sub
xlat
dec
scas
insb
lea
test
lods
and
cmpsb
xchg
popa
mov
push
int3
mov
shrb
dec
and
fsubrl
sti
mov
rcl
fs
xor
loope
out
inc
scas
es
mov
loopne
pop
shl
sub
sbb
sub
pushf
jnp
aas
inc
add
out
jmp
in
or
inc
loop
test
inc
idivb
mov
sbb
jno
cmpsb
inc
push
push
gs
xor
fdivrs
incl
iret
or
mov
dec
xchg
push
xor
mov
cmpsb
cs
aam
cmpsb
aaa
push
arpl
mov
popf
and
nop
adc
ljmp
and
push
mov
xor
xchg
sbb
data16
ret
xchg
add
dec
cltd
add
out
sub
sahf
stos
sbb
jnp
test
movmskps
jecxz
fwait
inc
out
jae
cwtl
mov
test
sahf
xchg
push
mov
iret
push
xchg
mov
sti
mov
adcl
lock
cmp
sbb
punpcklbw
iret
jp
mov
mov
cmp
aad
dec
add
cltd
add
stc
or
int3
mov
orb
aaa
in
jmp
push
loopne
inc
add
fsubs
aam
repnz
pop
xchg
lret
and
inc
mov
lods
cmp
data16
add
cmp
loopew
xor
sbb
xchg
outsl
jmp
xchg
xchg
mov
es
idivl
adc
adc
mov
ljmp
jmp
or
cmc
call
push
cwtl
stos
adc
fisubrl
loop
mov
idiv
xor
lods
int3
inc
push
loope
or
sbb
jmp
mov
lods
lea
pop
mov
cmpsb
out
push
mov
xchg
or
pop
mov
pop
lret
loopne
stos
pop
mov
dec
test
mov
mov
push
pop
or
out
xchg
call
dec
push
and
jmp
cmp
sub
adc
sub
adc
arpl
mov
outsl
push
or
or
inc
or
add
inc
push
repz
xchg
xor
dec
dec
ret
pop
ds
push
or
push
pop
inc
push
stos
hlt
outsb
shrl
shrl
jp
call
sub
pop
stos
jg
incb
out
push
mov
adc
mov
add
clc
jp
xchg
mov
in
xchg
test
cmc
enter
jb
jp
jl
jge
xchg
insb
andb
aaa
xor
sbb
push
jle
arpl
test
push
sarb
cmc
mov
xlat
xchg
faddl
push
mov
lds
push
dec
les
push
xchg
cmp
popf
or
mov
xchg
push
mov
leave
cmp
ja
cld
cmpl
jae
mov
repz
xchg
aas
outsl
push
cmpsb
sti
test
popa
pop
leave
and
jg
ds
orl
and
add
mov
cmpsb
adc
push
cltd
cmc
stos
sub
mov
popf
inc
imul
adc
push
jb
cmp
movsb
pushf
jge
cmp
pop
movsb
in
fidivl
xorl
outsb
inc
insb
lret
repnz
das
test
sbb
jmp
mov
insl
inc
in
cmp
incl
cmp
stos
or
fucomip
add
popa
add
arpl
jp
xor
pop
cltd
jge
je
inc
add
int
mov
pop
dec
insl
mov
mov
mov
push
sbb
jmp
mov
jb
aam
daa
add
das
or
push
dec
xchg
and
mov
cmpsb
repnz
fsubrl
orl
pop
repnz
mov
std
in
or
lods
loope
dec
je
lock
shll
mov
jae
cmpsb
jo
test
add
mov
ja
sbb
lahf
mov
clc
push
sti
push
outsb
aas
cmp
aas
mov
adc
jo
pushf
in
mov
repnz
mov
push
cltd
pushf
xchg
pop
adc
xor
mov
in
repnz
mov
push
hlt
pop
das
mov
imul
xchg
add
cwtl
test
inc
or
out
push
aam
stc
addr16
mov
addb
mov
call
rorb
fs
jmp
pop
push
mov
iret
rorb
lret
lret
dec
and
xchg
ljmp
pop
xchg
adc
in
xchg
xchg
out
mov
push
and
mov
rorl
sarb
stos
bound
and
jns
enter
lock
xchg
clc
mov
mov
and
push
inc
push
movsb
push
jns
loopne
xchg
lret
aaa
test
vpperm
jl
mul
das
dec
lcall
rcrl
enter
hlt
lods
cmp
imul
out
in
mov
add
cmp
pop
pop
cli
mov
add
mov
dec
xchg
je
int3
cld
push
pop
mov
es
add
fadds
fistl
mov
jne
dec
pop
push
int
pop
test
lods
adc
xchg
mov
mov
fisubl
inc
aaa
pop
cs
cli
jnp
xlat
jns
pop
shlb
adc
or
outsb
push
dec
dec
mov
cmc
scas
shll
imul
aaa
and
das
cmp
fisttps
lods
dec
mov
out
ja
iret
sub
pop
imul
cltd
sbb
fcompl
cmp
nop
mov
aas
xchg
subb
popa
jp
aam
xor
xor
int
mov
in
jle
mov
pop
jo
outsl
push
cs
mov
in
fdivrl
sbb
frndint
into
cmp
jmp
repnz
pop
in
mov
jge
or
movsb
andb
je
and
inc
insl
loopne
mov
add
inc
pop
lock
fwait
lods
push
jbe
ffree
add
imul
and
sarb
lahf
dec
and
sub
pop
adc
jno
fisubrl
jae
ret
lret
fnstcw
cmpsb
jl
pop
push
orb
mov
or
xor
mov
adc
jge,pn
push
les
int3
test
mov
xor
scas
mov
cld
cmp
mov
dec
stos
sbb
adc
xor
push
dec
cmc
sub
mov
out
mov
sbb
xor
xor
es
inc
mov
insl
mov
frstor
sub
add
pop
bound
sahf
movq
or
xor
sub
xchg
call
mov
cmpl
dec
jecxz
cmp
fs
inc
repz
test
popl
dec
data16
lods
dec
in
icebp
mov
sub
mov
sbb
mov
cmpsl
mov
cwtl
dec
loopne
lahf
pop
repnz
fsubrl
fwait
xchg
xor
icebp
xor
xchg
sbb
cwtl
inc
addr16
in
adc
out
mov
hlt
popa
ja
enter
mulb
ds
sub
adc
push
push
stos
pop
and
das
or
rorl
add
push
inc
rclb
sub
cmc
xor
pop
data16
pop
mov
cmc
or
fucomp
mov
or
icebp
adc
imul
jle
add
inc
lock
mov
jnp
jno
lock
enter
repz
incb
dec
inc
imul
je
sub
sub
and
cmpl
leave
jo
movsb
or
in
fsubrs
fnstenv
cli
orl
and
nop
pop
imul
fs
cmpb
out
dec
insl
mov
add
mov
lahf
out
push
jb,pt
dec
lea
lret
dec
enter
dec
leave
bound
test
mov
pop
repz
xor
inc
popf
mov
lods
jmp
mov
and
xor
cwtl
sub
push
dec
frstor
pop
cmpsb
pop
fcmovnbe
test
out
dec
push
shrd
mov
mov
push
jp
pop
repnz
and
mov
fcoml
adc
addr16
jnp
scas
daa
fwait
jp
fdivrs
pop
dec
sub
loop
rol
icebp
push
pop
inc
adc
jl
inc
dec
add
mov
push
aaa
js
push
fisttpl
test
mov
hlt
ds
repz
dec
xor
cs
outsl
push
pop
cltd
or
adc
je
push
nop
mov
add
mov
pusha
insb
ret
data16
push
mov
lds
dec
fsqrt
push
adc
es
jns
popa
fnstenv
fnsave
mov
out
stos
das
ljmp
jmp
jp
fwait
sbb
mov
mov
sbb
mov
push
addl
js
std
push
popa
into
ret
fadds
data16
or
mov
or
addb
dec
mov
mov
aas
adc
xchg
mov
xchg
rcll
mov
pop
and
in
ret
adc
fnstenv
fistl
xor
and
dec
pushf
les
and
mov
rcl
dec
hlt
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
push
push
xor
mov
add
mov
sub
mov
andl
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
andl
sub
movl
movl
subl
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
sub
mov
xorl
orl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
xor
sub
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
pushl
push
call
cmpl
jb
mov
orl
xor
mov
xor
mov
sub
sub
mov
mov
sub
xor
mov
orl
sub
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
dec
movl
adc
lea
xor
mov
push
mov
sub
mov
add
mov
andl
lea
subl
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
pushl
call
xor
add
dec
mov
jmp
mov
adc
mov
adc
mov
adcl
xor
andl
add
adcl
mov
mov
xor
mov
mov
orl
add
xorl
push
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
mov
sbb
xor
mov
add
movl
cmp
movl
je
mov
jmp
movl
mov
movl
cmp
movl
jne
push
jmp
not
mov
mov
movl
cmp
jne
mov
xor
movzbl
sub
add
andl
xor
or
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
mov
mov
sbbl
xor
add
imul
mov
andl
xor
add
movl
cmp
mov
mov
movl
push
je
mov
addl
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
xor
add
sbbl
imul
jmp
imul
roll
pop
jl
pop
xchg
or
shll
pop
jo
cltd
jae
aad
push
sub
mov
push
into
fsts
ds
and
lahf
pop
stos
dec
rorb
xchg
hlt
jp
cmovs
push
jns
xchg
fstl
scas
sbb
lods
mov
pop
cmc
adc
inc
push
sbbl
dec
xor
push
fstp
mov
jmp
fcmovu
cltd
hlt
cwtl
stc
fcoml
stos
imull
cmpsb
ljmp
mov
mov
or
cmp
loope
lret
lds
pcmpeqd
cmp
and
int
xor
dec
push
xor
mov
adc
jmp
stos
dec
mov
cmc
sbb
or
fwait
lods
sub
sahf
out
aaa
mov
loopne
jno
pop
iret
outsl
and
out
jb
jp
mov
mov
or
insb
add
sbb
pop
cmp
mov
xchg
push
ficomps
arpl
cmp
cmc
test
pusha
push
mov
jmp
adc
movsl
popl
fmuls
les
add
icebp
mov
fwait
inc
or
pop
adc
jmp
call
jle
popa
dec
sbb
lds
movsl
push
add
in
dec
stc
xchg
dec
or
jnp
insb
into
mov
fsubrl
insb
add
lahf
lea
enter
cli
pop
jb
mov
addr16
int
cmp
std
and
xor
sub
fwait
dec
xor
adc
rorb
stos
mov
xor
inc
and
js
xchg
clc
cmpsl
loopne
mov
mov
adc
cmp
fnstenv
sti
mov
icebp
in
mov
xchg
mov
pop
fcoml
pop
xor
mov
sub
out
push
mov
repz
jp
push
arpl
push
lods
adc
arpl
add
int
int3
xchg
dec
xchg
push
inc
inc
enter
mov
push
or
pop
test
out
mov
or
mov
sub
cltd
cmp
mov
dec
int
cld
xor
jle
and
pop
mov
outsl
mov
mov
xor
daa
ror
loopw
sbb
cmp
fwait
inc
scas
les
andb
iret
jg
mov
mov
jns
aad
and
push
sahf
inc
mov
xlat
orb
push
sti
mov
jns
enter
fwait
adc
xor
dec
jbe
cmpsb
jnp
cmp
mov
xchg
jmp
test
das
lcall
push
cmpsl
lock
stos
mov
orb
inc
fidivs
or
rorl
imul
aad
jnp
mov
dec
mov
push
imul
bnd
and
mov
sti
fs
adc
add
xchg
mov
cmp
clc
dec
cmp
popf
ss
jno
arpl
das
sbb
rcrb
mov
lahf
xchg
sbb
add
movsl
jmp
push
adc
push
out
out
xchg
sbb
aas
push
push
add
mov
push
mov
call
ret
mov
mov
mov
xchg
cmpb
xchg
incl
pop
adc
sbb
pop
sarb
jecxz
arpl
cmp
sub
pop
jbe
mov
sti
xor
sti
adc
jg
jmp
lret
dec
repnz
pop
push
push
mov
xchg
sub
icebp
jmp
jb
jge
mov
pop
mov
mov
jge
lahf
pop
sub
xor
clc
gs
test
xchg
int3
mov
adc
mov
test
mov
push
loop
fxtract
aam
xlat
lea
sub
mov
xor
xchg
mov
mov
jl
adc
popf
lahf
inc
sub
dec
sub
mov
xchg
out
pusha
mov
divb
lret
sbb
daa
push
call
push
mov
fisubrl
xor
pushf
adc
pop
mov
cltd
cs
ljmp
cld
sahf
and
pushf
ja
cmpsb
cltd
add
rorb
mov
idivl
push
adc
into
negb
decb
push
rsm
mov
cmp
rcrb
aaa
mov
xlat
mov
jge
cmp
movsb
push
rcrb
sub
repnz
pushf
add
fs
mov
mov
cli
mov
dec
cmpsl
sub
push
mov
or
int3
mov
xor
cwtl
xor
jne
dec
and
and
pusha
push
test
lahf
mov
xchg
sub
xor
mov
clc
jle
add
pop
mov
add
adc
push
jmp
cmp
stc
outsl
cltd
or
out
aaa
cmc
test
xchg
push
shll
and
lock
leave
inc
cmp
push
inc
aaa
cmp
mov
imul
popf
xchg
lods
add
and
dec
mov
lret
hlt
out
psrad
mov
cmp
mov
xchg
push
dec
jl
sti
in
nop
dec
mov
lcall
xor
dec
push
lods
inc
push
out
mov
addr16
or
inc
inc
xchg
in
imul
call
sbb
cmpsl
mov
push
sbb
lods
sub
shrb
mov
cmp
jo
xchg
sbb
rclb
js
lods
scas
arpl
shrb
xor
das
out
ffreep
out
push
mov
mov
cld
out
xor
sub
xchg
sbbl
test
xor
sarl
imul
dec
pop
movsl
call
inc
mov
clc
cmpsl
fidivrs
incl
xorb
movsb
mov
cmpsl
dec
les
aam
inc
lcall
cmp
ds
and
insb
xchg
jg
lcall
jmp
dec
in
into
or
mul
mov
pop
dec
pusha
push
scas
pop
jo
add
adc
packuswb
aas
pop
das
xor
jl
lock
stos
stos
pop
mov
into
rcr
mull
sbb
mov
int3
ret
fldenv
jb
xchg
jns
insb
int
or
call
out
mov
loope
pop
es
ret
test
sbb
or
in
les
xchg
jo
enter
cmp
mov
aaa
xor
fdivs
and
lret
shlb
sbb
lds
lret
or
scas
pop
es
jmp
push
shl
stc
mov
addr16
mov
jle
cld
mov
xchg
dec
bnd
popf
cmp
cwtl
xor
inc
mov
inc
cmp
fistl
and
in
shlb
addr16
aad
in
jp
cmpsb
jnp
push
mov
aas
jmp
mov
out
movsb
fwait
dec
dec
sbb
push
mov
out
lea
cmp
push
sub
sbb
out
stos
adc
nop
jo
inc
fnstcw
mov
popf
push
sbb
into
scas
movsl
mov
or
jle
ljmp
push
movsb
daa
or
xchg
dec
imul
xor
fwait
test
sahf
push
mov
push
aas
jp
xlat
enter
mov
pop
stos
in
cmp
aaa
fcmovnu
dec
lret
pop
pop
insb
mov
jae
hlt
xchg
enter
cmp
adc
mov
mov
push
mov
sub
sbb
inc
ljmp
clc
jae
push
ja
ss
push
xchg
in
push
movsb
stos
xlat
js
fdivrs
xor
mov
jae
mov
pop
cmp
xchg
shrb
cli
add
mov
sub
adc
mov
aam
push
cmpsl
and
or
dec
mov
fdivrl
push
adc
sub
jmp
mov
xchg
sahf
idivl
stc
imul
dec
mov
repz
xchg
xchg
inc
add
lea
je
mulb
icebp
inc
cld
or
inc
mov
push
mov
mov
test
fldcw
push
movsb
inc
cli
xrelease
push
popa
sub
sub
mov
nop
pusha
aaa
mov
mov
leave
pushf
jmp
push
mov
cmp
ret
popa
xchg
cmp
sbb
es
fstp
push
mov
cs
xor
cmp
jae
push
pop
outsb
leave
icebp
test
ficoms
fwait
or
xchg
add
cmp
in
adc
int3
repnz
mov
push
daa
xchg
faddl
hlt
sbb
lcall
dec
repz
jl
add
jae
lods
lea
mov
cld
ja
movsb
movsl
movsl
xchg
cwtl
mov
lcall
cmp
dec
out
adc
jmp
shl
lds
jge
mov
pushf
jno
lods
jl
sub
in
pop
pop
mov
or
out
and
shrb
ljmp
mov
jle
fidivs
enter
into
arpl
add
fwait
push
mov
or
ss
and
mov
stos
loopne
jnp
movsl
inc
and
fwait
movsb
mov
aad
mov
pop
sbb
cltd
test
sub
rol
jmp
pop
mov
cmp
mov
es
dec
pop
ljmp
test
sti
lahf
std
ret
mov
adc
insl
stos
jge
mov
inc
bound
adc
into
inc
dec
addr16
outsl
sub
loope
cmp
shrb
cmp
negb
jge
adc
mov
pop
mov
lods
stos
push
aaa
shrl
add
and
les
shlb
inc
jo
loope
lods
stc
pusha
ret
mov
pop
push
mov
movsl
daa
xchg
imul
sarl
ret
xchg
jmp
data16
mov
xchg
in
nop
es
cltd
xchg
fisubl
xlat
lods
fstps
sbb
jmp
lods
cmc
mov
xor
test
lcall
push
xor
jl
aas
pop
and
dec
jo
mov
jnp
cmpsb
mov
mov
pushf
cmp
arpl
stos
pop
daa
pop
dec
cli
mov
gs
xchg
scas
mov
xorl
cld
mov
cmp
fsub
repz
insb
mov
sbb
adc
adc
jecxz
scas
mov
fstpt
sub
push
out
jge
sahf
and
and
sahf
mov
call
sbb
iret
jmp
lods
aaa
push
pop
movsb
loope
outsl
in
test
cmp
or
loop
jg
fld
pop
adc
add
or
insl
sub
popa
or
mov
adc
cmpsb
lea
mov
mov
mov
add
arpl
insl
subb
xchg
jno
repnz
jnp
nop
mov
cmp
jg
ret
dec
cltd
xchg
cmc
bound
dec
dec
jge
scas
hlt
push
and
insb
xorb
jp
and
js
stos
shrb
lods
std
popa
sub
mov
roll
test
mov
push
lcall
mov
dec
jecxz
lcall
mov
fsubl
int3
push
mov
std
pushw
repz
insb
movsl
ljmp
mov
mov
cmp
pushf
xor
jbe
pop
push
cwtl
xchg
push
pop
xchg
xorl
add
data16
mov
fmull
mov
js
mov
xchg
jbe
adc
fistl
orl
cmp
dec
cmp
hlt
push
ljmp
xchg
lods
mov
repz
fwait
sti
sbbb
sarb
cmp
les
push
lcall
mov
movsb
shlb
push
and
sbb
mov
bsf
popl
stos
aaa
cmp
daa
ljmp
dec
mov
movsl
mov
lret
push
das
repz
mov
aad
daa
sahf
adc
imul
daa
add
sub
pop
das
jno
mov
hlt
jnp
dec
hlt
inc
shlb
push
cmp
daa
jp
xor
arpl
and
mov
push
mov
xchg
xchg
dec
dec
cld
repz
lea
mov
nop
mov
stc
ret
or
mov
lret
in
or
xchg
data16
jne
test
idivl
adc
lods
pop
dec
iret
out
fistpl
mov
cli
pop
in
iret
mov
cmp
inc
dec
mov
ret
loopne
dec
mov
cmp
pop
add
mov
addr16
dec
aas
push
sbb
pop
xchg
add
push
pop
jge
push
in
ljmp
stos
iret
jne
xor
xor
popf
shlb
lods
popf
negl
fldl
imulb
sub
jmp
xchg
lret
xchg
or
pop
mov
andb
cmc
adc
pop
aam
push
mov
int3
jo
pop
lock
mov
or
mov
loop
mov
mov
addl
call
xor
popf
add
negl
mov
adc
or
imul
push
sub
movb
mov
rcr
xchg
or
shr
xchg
push
pop
rcrb
fsubl
mov
ja
lahf
mov
mov
mov
in
es
hlt
scas
rorb
inc
cltd
or
sub
and
das
sbb
mov
and
mov
clc
insl
stos
sbb
test
inc
mov
addl
mov
fmulp
mov
cs
and
outsb
popf
loopne
or
imul
lret
ret
inc
ja
movsl
xchg
fucom
popf
ficompl
aaa
popf
shr
mov
sbb
jg
sbb
sub
push
jge
hlt
jnp
mov
cmc
repnz
add
push
loope
dec
roll
fstl
imul
inc
fs
xor
push
nop
je
cltd
push
jp
pushf
mov
rorb
sahf
fcomps
es
std
imul
sbb
lea
into
hlt
mov
push
fisttpl
test
fs
and
push
xchg
sbb
sti
in
int
mov
jle
imul
ret
out
pop
dec
in
adc
and
mov
fdivrs
dec
fnstsw
sbb
mov
and
adc
lcall
clc
pop
enter
jge
inc
out
cli
stos
adc
push
xchg
inc
mov
sbb
aad
mov
xchg
xchg
das
in
out
enter
hlt
movsb
adc
cmp
jp
or
lods
mov
rorl
fcomps
adcb
dec
lret
dec
adc
cwtl
mov
jns
and
sbb
mov
jbe
mov
xor
push
fsts
push
icebp
and
pop
and
test
adc
inc
cmp
mov
push
push
sub
ds
jl
daa
std
int
aam
repnz
roll
daa
push
shrl
repz
andl
sbbl
push
cmp
imul
xor
scas
mov
cmpsb
lahf
adc
mov
out
adc
xchg
loopne
mov
leave
shrl
fdivrl
stos
rolb
fsubrp
data16
sbb
xchg
int
jmp
mov
out
aas
jg
das
jno
sbb
into
je
insl
and
cld
lcall
xchg
arpl
pop
pop
push
pop
pusha
sub
add
das
xor
pop
and
dec
scas
jns
aas
cwtl
or
mov
jo
repnz
popl
push
fsubr
or
and
dec
nop
out
sub
aad
jb
addr16
cmc
or
adc
in
cwtl
or
jecxz
or
sti
loope
sbb
pop
in
dec
movsb
mov
push
outsl
pop
dec
cvtdq2ps
jl
dec
jbe
rcll
outsb
jmp
enter
shlb
loop
jbe
jns
push
dec
add
jg
daa
sub
fucomi
xor
pop
jb
jge
andl
inc
add
cmp
iret
dec
lcall
test
std
cmp
dec
push
arpl
lock
scas
ljmp
fmuls
add
sbb
dec
leave
pause
mov
jmp
sbb
sub
call
cld
scas
imul
aad
jo
std
je
ja
push
cld
xor
jae
xor
dec
jp
cwtl
nop
ret
and
cli
xchg
push
mov
mov
push
cmpsb
or
out
scas
sbb
sbb
data16
xchg
pop
jge
dec
pop
sbb
nopl
hlt
sbb
pushf
ret
mov
or
int
jle
and
cvtdq2ps
aam
cld
out
xchg
inc
xchg
mov
pop
sti
ja
shrb
mov
mov
add
add
mov
rclb
mov
push
fstpt
aas
pushf
loopne
xchg
cmp
sub
xchg
mov
cmpsl
into
mov
jno
enter
mov
daa
mov
nop
push
je
sbb
arpl
divps
mov
mov
cs
pusha
sbb
aaa
xor
fimull
push
or
mov
cmp
xchg
sub
and
or
icebp
mov
and
inc
mov
sub
jae
push
hlt
jne
ja
fbld
push
popa
in
cmpsb
mov
stc
cs
xor
push
sub
cmp
mov
xchg
rclb
or
imul
sbb
jl
jl
mov
fbld
ds
xor
cmp
mov
mov
pop
aad
daa
dec
xlat
lea
dec
fsubs
xchg
insb
iret
and
fnstenv
movsb
lcall
xor
cld
pop
cmpsl
jbe
cli
std
lret
pop
inc
mov
inc
filds
lret
sub
fs
adc
xlat
inc
int
cmp
cld
bound
leave
jle
cmpsb
shll
mov
sbb
push
and
pop
clc
sub
lret
rcrl
sub
std
xor
out
xor
cltd
mov
in
imul
push
push
cmpsb
push
aas
out
outsl
out
push
je,pt
sub
adc
fildl
lret
xchg
imul
leave
js
mull
mov
int3
ficompl
pop
or
cmp
in
xchg
xchg
jecxz
outsb
cmp
xor
mov
lahf
adc
sti
xchg
inc
rolb
mov
jl
sub
cltd
adc
adc
inc
dec
and
mov
or
rcll
outsl
xchg
dec
sbb
sbb
jecxz
insb
xchg
push
sbb
cmp
and
and
sbb
testl
ljmp
fistps
stos
std
dec
xor
lret
call
mov
je
pop
incb
aas
mov
dec
insl
push
sub
insl
mov
or
pop
add
mov
popa
lret
add
add
into
call
test
int3
mov
mov
fwait
shll
out
fs
aam
sub
jbe
jl
shlb
in
lret
cmc
mov
cmp
out
mov
sbb
jp
push
sub
mov
scas
sub
jmp
or
mov
sbb
push
aad
test
nop
test
icebp
shl
jmp
jo
insb
inc
fs
push
adc
cmpsb
popf
jp
add
loopne
std
sbb
mov
leave
daa
push
xchg
lret
mov
out
sbb
ja
rclb
pop
push
sub
mov
dec
jmp
fs
scas
addr16
push
xlat
cmpb
xor
pop
inc
inc
aaa
jbe
dec
cld
add
mov
mov
and
popf
push
pop
pusha
fwait
nop
lods
sub
lret
dec
sti
push
and
scas
xlat
fimull
cmp
pop
clc
inc
je
xor
mov
addr16
popa
sbb
outsb
push
pushf
jns
jnp
les
std
or
jp
nop
lods
stos
data16
mul
mov
xchg
cmp
cmp
mov
sbb
mov
pushf
subb
pop
addb
out
stos
out
and
pop
add
in
in
in
mov
repz
sbb
jecxz
movsl
push
adc
pushf
adc
mov
inc
pop
pusha
xchg
rcll
mov
movsb
and
lods
loopne
enter
cmpsb
outsb
pop
dec
xchg
xlat
xor
negb
jl
mov
inc
sub
push
inc
pop
jns
jmp
mov
lock
add
out
jno
lcall
push
and
test
lcall
clc
aam
popf
dec
fcmove
gs
ret
xlat
xor
pushf
push
pop
scas
repnz
sub
imul
lods
fstpt
xlat
inc
shlb
adc
daa
xchg
mov
mov
cltd
ss
sub
mov
lods
fidivrl
clc
or
xchg
jmp
js
inc
ljmp
sahf
dec
movsl
lods
outsb
imul
ds
shl
push
adc
rep
dec
push
jno
adc
sti
int
sub
insb
push
sbb
pusha
fcompl
popf
mov
inc
clc
sub
cmc
std
xor
pusha
xchg
cmp
ja
cmp
jbe
int3
je
nop
mov
push
add
sub
out
fwait
add
xchg
das
adcl
es
add
adc
jle
sub
cmp
shll
popf
ret
adc
fwait
negl
push
add
add
pushf
mov
icebp
fsubrs
or
or
cmpsl
cmp
mov
xchg
and
pop
mov
xchg
hlt
movl
and
or
cmpsl
sbb
lret
xchg
jl
loope
inc
pusha
cltd
adc
nop
or
je
xchg
jo
sub
divl
ja
pop
addr16
movsl
jle
adc
xor
adc
cmpsl
pop
ja
pushf
test
pop
mov
mov
lods
lret
mov
or
mov
xor
add
es
mov
sbb
mov
cmp
loopne
pop
mov
or
dec
data16
dec
insl
out
int3
aam
in
daa
sub
lahf
fimull
loop
sbb
shrb
scas
outsb
xchg
inc
loopne
movsl
shl
aad
ja,pt
rcrb
sub
mov
xlat
sub
push
xchg
or
sbb
mov
mov
push
jns
xor
iret
mov
push
sub
addr16
fnstcw
adc
dec
pop
test
int
lret
adc
and
lahf
inc
pushf
pop
or
negl
xorb
push
jg
aaa
fdivrp
jp
fcmovnu
std
or
cltd
xlat
mov
jo
pop
pop
and
sahf
test
mov
jp
adc
fstps
mov
fdivp
mov
mov
push
imul
xor
cmp
ret
jge
mov
mov
sbb
test
js
and
mov
mov
mov
cs
je
mov
cmpsl
mov
in
insb
fs
enter
mov
pop
jbe
cs
mov
sub
mov
loopne
call
mov
scas
or
dec
test
xor
mov
dec
pop
xchg
hlt
push
add
xchg
ja
dec
js
jb
mov
jp
aaa
push
cmp
andb
or
adc
jb
and
add
push
popa
xchg
je
push
scas
or
lea
inc
adc
icebp
int3
leave
das
pop
jbe
sub
clc
std
xor
mov
shrl
xchg
test
dec
xchg
push
andl
lds
mov
and
mov
xor
xchg
adc
xchg
and
mov
lret
stos
jnp
mov
sbb
cmc
lods
mov
mov
sti
add
lret
sbb
inc
loope
sbb
mov
out
mov
jp
cwtl
movsb
jb
xchg
cmp
adc
push
mov
int
lock
pop
jl
mov
aam
push
or
fldenv
shr
jbe
insb
lcall
push
pop
das
jp
mov
dec
cmp
insb
fcmove
jns
add
inc
sub
scas
push
push
cmp
loope
push
cmp
xlat
fucomip
dec
cmp
es
jns
cmp
mov
repnz
and
jle
xlat
in
cmp
jmp
mov
fwait
outsb
xchg
call
pop
dec
jl
push
sub
arpl
cs
aam
sbb
xchg
xor
pusha
fimull
shrl
jne
loop
lea
sub
inc
test
mov
andl
cmpsl
sbb
xchg
popa
cli
or
xor
push
xchg
mov
lods
es
sbb
loop
inc
mov
js
jl
mov
mov
cwtl
ret
movsl
prefetchw
or
adc
in
and
aad
inc
in
xor
xor
popf
div
sub
cld
push
ficompl
dec
adc
fucomi
xor
jp
cmp
dec
lock
jne
imul
jnp
sahf
lret
cld
sbb
dec
pop
or
add
clc
data16
push
addb
jno
pop
xor
iret
sbb
call
mov
inc
imul
stos
xchg
cwtl
orl
sub
stos
outsl
outsl
mov
repz
aaa
movsl
adc
movb
stos
pop
sub
stos
sub
subl
cld
jns
or
aam
dec
sub
jnp
nop
inc
pop
mov
inc
dec
mov
stc
xchg
mov
sub
and
inc
jbe
int
push
add
fisubs
push
cmp
mov
mov
cmp
sbb
pop
or
mov
test
test
clc
popf
daa
or
push
push
jns
aam
mov
or
jecxz
in
ret
push
mov
jge
cmp
imulb
rcrl
aad
pop
ja
jne
push
push
mov
mov
xchg
push
addr16
cs
cmp
push
sub
jp
cmpsb
daa
imul
pop
out
cli
push
cmp
or
test
pushf
rclb
jmp
in
adc
ljmp
imul
jne
test
adc
push
sbb
insl
xchg
xchg
in
int
pop
ret
aas
cwtl
in
xchg
sahf
and
sbb
push
adc
shlb
icebp
push
or
mov
push
jb
and
dec
dec
jne
jg
shll
and
xchg
mov
or
and
or
cld
stos
cli
jne
std
inc
sahf
dec
xchg
cwtl
xor
lret
arpl
adc
jp
cmpsb
xchg
movsl
out
xchg
filds
cmpsl
cwtl
jbe
add
push
pop
mov
test
call
ds
stc
mov
shlb
or
sbb
shlb
ret
jns
sbb
idivb
divb
pop
mov
inc
and
lret
ss
dec
jo
rcrl
jge
nop
add
lods
shlb
and
loop
daa
pop
and
cmp
outsl
add
dec
out
push
mov
cmpsl
mov
cmpsl
pushf
jns
jnp
pop
mov
sbb
pop
rclb
pop
lds
dec
out
pop
sub
push
out
sbb
les
xchg
pop
fimuls
mov
xchg
dec
cmp
les
jp
cld
add
pushf
push
adc
fnsave
lods
push
mov
ret
jg
lret
xchg
outsl
pop
push
dec
movsl
cmp
cli
fdivl
xor
cmp
jecxz
fidivrs
pop
pop
enter
pop
icebp
daa
pop
push
in
adc
sbb
stc
cmpsb
jg
cmc
or
and
sbb
push
jbe
inc
shrl
sbb
mov
mov
mov
mov
cli
outsl
xchg
test
iret
mov
fdivrs
mov
sub
cmp
jbe
fs
jl
mov
ja
pushf
jle
mov
sbb
pop
ljmp
inc
outsl
pop
jae
push
cmp
mov
push
mov
ret
and
mov
pushf
push
test
stos
pop
loopne
ret
jnp
mov
sub
scas
ljmp
jge
mov
or
decl
xor
jg
xor
lods
addb
cli
xchg
popa
int
adc
mov
mov
movsb
mov
inc
jmp
fistps
mov
xor
mov
add
aas
outsb
pop
xchg
cmpsl
adc
add
outsl
mov
hlt
ja
sbb
or
cli
jge
push
movsb
ss
push
sub
or
xorb
xchg
pusha
adc
add
xchg
notb
xor
in
popf
mov
push
mov
aaa
je
push
dec
mov
or
xchg
cmp
aas
out
xorl
gs
push
dec
or
int
lods
or
ljmp
inc
fisubrl
or
jo
mov
divb
loope
inc
repnz
stos
inc
sbb
pop
scas
mov
clc
rolb
fs
fwait
testl
arpl
mov
mov
adc
sub
jns
je
lds
aad
mov
pop
repnz
and
fprem
xchg
out
mov
pop
sub
cmp
pop
push
xor
pop
lock
popa
shl
in
shll
sbb
xor
and
cmp
mov
mov
fidivl
jp
mov
mov
push
addb
in
pop
mov
push
adc
imul
mov
adc
mov
xchg
pop
xor
mov
mov
pushw
out
cmp
add
fsubrs
mov
dec
lods
dec
mov
mov
pop
int3
xchg
les
inc
lahf
mov
xor
in
pop
test
sub
ja
aad
jg
stos
in
push
inc
sbb
es
mov
or
xchg
inc
shlb
sahf
clc
ret
jns
push
or
ret
inc
clc
repz
js
cmp
add
cmp
xchg
sbb
xorl
add
dec
movsb
jne
mov
and
cmp
xchg
add
or
adc
cmp
clc
mov
mov
cwtl
insb
mov
call
ret
and
mov
iret
test
push
hlt
push
pop
cmc
cltd
out
push
jp
adc
pop
add
jle
test
jne
inc
pop
bound
sbb
xchg
pop
scas
nop
stc
call
loop
jo
sbb
fsubl
mov
xor
sahf
rcll
push
gs
stos
pop
cmp
idivl
das
fadd
mov
mov
scas
push
scas
aaa
sti
lock
enter
mov
cmp
mov
insl
test
lods
and
mov
mov
and
xchg
jg
lahf
sub
mov
and
dec
pop
int
xor
xor
jnp
mov
jp
sub
adc
pop
into
sbb
lret
pop
int
push
push
cmp
push
push
inc
nop
mov
adc
pop
shl
mov
mov
xor
pop
mull
jle
mov
jmp
sub
fidivs
jmp
outsb
repnz
lea
filds
jb
jl
ja
sti
jb
mov
mov
stos
mov
icebp
lock
mov
aaa
fisubrs
pop
out
inc
insl
sbb
ja
or
xchg
and
xor
mov
shlb
loope
loopne
movsb
adc
adcb
pop
aam
ret
or
aad
lret
movsb
and
test
mov
mov
in
adc
fistps
mov
jmp
shlb
mov
addr16
shl
push
dec
xchg
mov
fistpl
and
int
out
xor
mov
or
xchg
cmp
mov
dec
mov
mov
movl
jmp
orl
mov
or
xor
mov
or
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
and
push
xor
mov
sbb
mov
xor
movl
push
movl
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
sub
xor
xor
mov
sub
mov
andl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
movl
je
xor
mov
mov
or
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
xor
movl
xor
mov
sbb
mov
sub
mov
decl
jmp
dec
daa
inc
mov
jae
cmpsl
cmp
dec
sbb
sub
mov
call
jne
and
aad
out
ljmp
or
mov
clc
and
mov
and
pop
add
add
in
push
nop
and
xor
or
inc
inc
dec
jge
stos
insb
push
mov
dec
lahf
test
mov
insb
mov
out
cwtl
dec
bound
imul
ret
xor
les
jb
ljmp
inc
arpl
adc
loop
or
sub
xor
mov
mov
push
jnp
cltd
sbb
iret
push
es
test
pop
xor
pop
sub
into
mov
mov
aad
cmpsl
imul
and
mov
sub
and
pop
stos
sti
push
dec
xor
jnp
mov
inc
sub
cmp
lods
cs
test
jmp
pmulhw
sub
xor
mov
mov
aaa
push
pop
mov
leave
push
ljmp
xchg
fnstenv
insb
xor
add
in
pusha
and
lds
jle
sbb
nop
sub
adc
jg
or
dec
pop
and
dec
cmpsb
inc
aam
push
call
or
jo
cmpsl
cld
je
xor
push
push
mov
or
negl
dec
fmuls
xlat
in
xor
xor
adc
int
push
mov
xchg
inc
int
rclb
es
mov
lods
shlb
test
sti
mov
mov
nop
mov
fdiv
icebp
mov
stos
fdivl
mov
vpbroadcastd
mov
add
adc
dec
setge
add
jmp
mov
and
push
cmpsb
cltd
call
push
mov
push
mov
cmp
pop
mov
push
enter
rclb
lods
je
clc
inc
lahf
add
fidivl
rclb
imul
pushf
loopne
pop
mov
pop
pop
ret
out
repnz
stc
insb
out
rcrb
lahf
adcb
adc
into
mov
jge
jo
adc
adc
mov
fcomip
push
cmp
mov
je
mov
inc
mov
ret
or
inc
fldenv
mov
cmpsb
add
adc
in
or
jecxz
xchg
push
fimuls
or
mov
cmp
loopne
push
stc
mulb
cmpsl
ret
inc
cmc
iret
fwait
sbb
je
xchg
pop
cmc
bound
iret
imul
inc
sub
rclb
xchg
inc
fldcw
sbb
popf
jns
sub
push
dec
jp
ret
pop
sbb
aam
and
adcb
adcl
loope
sti
jno,pn
and
popa
xor
fwait
jecxz
pop
imul
loop
mov
inc
sub
roll
or
fldl
sub
dec
cltd
dec
push
mov
xchg
xor
mov
lea
xor
stc
mov
mov
push
sub
inc
rcr
mov
scas
arpl
dec
mov
xorb
cmc
cmp
pushf
gs
push
sub
shll
push
mov
xchg
inc
sbb
adc
out
test
cmpsl
in
push
test
scas
clc
adc
and
in
ret
jle
cmp
sahf
movsl
jnp,pt
ret
subb
inc
cmpsl
jb
movsb
in
xchg
out
js
je
in
inc
in
cmp
adc
sbb
repnz
iret
nop
cmpsb
push
inc
enter
sbb
cmp
mov
aam
mov
adc
adc
dec
mov
push
jge
pop
adc
mov
cwtl
jecxz
std
movsl
pushf
in
ror
xor
in
xchg
movl
mov
sbb
mov
xchg
pop
push
imul
cs
xabort
in
push
dec
addr16
stc
rorl
mov
daa
outsb
sbb
or
inc
inc
shl
or
and
mov
mov
popa
aas
pop
cmp
shlb
iret
je
or
mov
stc
mov
fsubs
push
inc
out
iret
sti
cmp
xor
add
pop
jbe
cmpsb
sub
nop
sbb
fistps
push
jo
add
pop
push
push
xchg
mov
pop
adc
jne
mov
in
jecxz
in
pop
push
les
cmc
inc
test
adc
or
popl
pop
aaa
xor
cmc
or
shl
and
or
cmp
pop
mov
bound
push
cmp
insl
bound
cmp
mov
cwtl
dec
lret
push
in
mov
lret
sbb
mov
sub
and
in
sub
cs
inc
mov
out
sbb
fdivl
cmp
aam
mov
mov
mov
popf
and
cmpsl
jle
movsl
inc
outsb
faddp
xchg
inc
jno
dec
sbb
rorl
cld
xor
data16
rcrb
sarl
shlb
jns
cwtl
jge
aas
push
or
mov
jecxz
iret
lea
add
xlat
add
insb
aaa
scas
mov
enter
xor
inc
cwtl
mov
mov
cltd
pop
or
push
pop
sarb
sub
cmp
jb
mov
inc
push
pop
into
add
rcrb
sarb
mov
jns
pusha
cmp
stos
inc
in
stc
or
pusha
dec
jae
cltd
mov
mov
bound
or
je
movsl
xchg
scas
mov
sub
enter
mov
mov
popf
loope
jge
in
add
in
inc
lds
fdivp
in
push
inc
aam
jp
xor
xor
cmp
jnp
dec
aas
movsb
mov
inc
jno
mov
test
shl
inc
std
xor
push
add
mov
sahf
push
sbb
xor
push
xchg
or
and
inc
push
fistpll
aas
add
xchg
sub
pop
or
iret
fbld
ret
movsb
je
adc
cs
xor
xchg
fimull
and
jp
adc
fldl
jle
sbb
and
adc
pop
stc
add
xchg
or
jne
insl
movsl
mov
pop
sbb
sub
int3
and
rorb
test
jecxz
mov
dec
and
jne
cltd
mov
fildll
sti
imul
fisttps
fmuls
xchg
aas
add
aam
dec
pop
fcmovu
sub
icebp
sbb
cli
pop
mov
insb
xchg
jp
mov
frstor
add
cmc
dec
jnp
out
mov
jns
daa
xchg
clc
je
ljmp
and
into
mov
lret
fsubrl
into
push
and
mov
push
xorl
push
or
out
jmp
rorl
xchg
mov
insl
lods
or
sbb
sub
cmp
cs
into
ds
dec
pop
movsb
jno
arpl
lea
pop
mov
add
std
fmull
xchg
inc
lcall
stos
sub
adc
mov
ja
and
push
rorl
aad
or
mov
stos
or
ljmp
aad
push
push
cld
ja
xchg
pop
dec
push
popf
pop
ss
mov
mov
repz
mov
lds
sbb
ljmp
test
inc
imul
ds
pop
inc
mov
inc
orl
jae
das
insl
mov
cmp
xchg
insb
in
or
in
lcall
xchg
mov
push
xchg
mov
xchg
jge
push
push
xor
loopne
add
fsts
push
pop
or
cmp
mov
into
icebp
shlb
outsl
cmp
and
inc
out
adc
jb
lahf
mov
push
loopne
ficomps
mov
pop
dec
shrb
fldcw
stos
divb
xlat
imul
ss
cmp
push
dec
cmp
push
mov
jbe
imul
pop
mov
and
xchg
fildl
cmp
push
rorb
inc
cmpsb
test
sbb
mulb
into
loopne
addr16
paddsb
call
pop
ljmp
lock
xchg
adc
jne
das
xchg
mov
div
jnp
loope
jb
mov
jmp
in
fldt
arpl
jecxz
push
mov
push
dec
arpl
pop
cmp
pop
ds
ficoms
movsb
in
push
cmp
push
inc
inc
lahf
stc
jmp
bound
cmp
movsb
mov
lret
icebp
in
ss
dec
loopne
cmp
push
in
adc
jns
mov
hlt
int3
adc
je
enter
inc
or
sub
mov
dec
jecxz
inc
or
push
shll
inc
adc
mov
mov
push
ds
lret
divb
xor
enter
test
sbb
mov
out
repnz
and
jge
call
cmp
or
sbb
jle
sar
xchg
scas
sahf
xor
xchg
jp
and
fs
jno
add
in
mov
push
cmc
rcl
lahf
xchg
push
jl
sahf
mov
xlat
cltd
je
popa
mov
shrb
pop
cwtl
jmp
ret
js
mov
std
int3
or
std
out
and
push
sub
icebp
inc
pusha
dec
xor
icebp
insb
flds
push
jp
stos
loop
mov
pop
adc
ss
xor
mov
dec
inc
or
rcl
iret
push
jle
ljmp
jo
push
gs
add
jl
push
cmpsl
in
add
push
fdivl
add
aad
hlt
and
in
and
push
mov
repnz
mov
nop
pop
gs
arpl
inc
mov
xchg
pop
push
xor
pop
clc
fcmovbe
push
jp
into
ja
dec
test
inc
xchg
push
pop
push
lret
mov
ret
cwtl
mov
lods
ljmp
ds
adc
hlt
cs
pop
in
ficoml
pop
jo
fcompl
xor
sti
sbb
xor
imul
lods
frstor
ss
hlt
aam
movsl
das
and
fdivs
add
stos
push
testb
xor
fs
push
aas
mov
xchg
dec
mov
mov
jae
mov
jecxz
or
xchg
out
pop
add
mov
mov
pop
add
cmpsb
push
xor
push
fsubp
push
jecxz
push
pusha
jmp
pusha
adc
mov
sub
add
mov
push
enter
nop
sub
and
adcb
nop
sub
push
mov
xlat
and
xor
subb
ret
jns
sub
popa
pop
sbb
jo
gs
test
test
dec
push
lret
das
in
dec
sub
int3
xchg
mov
sbb
outsl
jg
and
mov
ja
nop
les
sbb
lods
push
repnz
repnz
call
in
pop
gs
xchg
xchg
into
mov
mov
lret
out
movsl
mov
add
inc
cmpsl
inc
subb
std
test
or
outsb
inc
jp
mov
mov
in
test
mov
mov
sub
lea
xchg
mov
adc
movsl
dec
mov
push
sbb
xchg
inc
adc
and
or
test
sbb
mov
mov
es
outsl
movsb
fdivrp
pop
das
or
loope
aad
ss
repz
inc
repz
aaa
dec
xchg
arpl
push
mov
jb
repnz
fstl
pop
daa
sbb
fcomp
xchg
test
cmp
int3
movsl
cmp
nop
lds
jae
fistpl
arpl
mov
push
xlat
out
js
ds
inc
jno
sbb
cs
and
sub
jge
repz
ret
testl
imull
xor
cli
jae
into
push
icebp
add
dec
inc
push
push
cmpsl
pop
mov
scas
mov
and
mov
test
and
xor
sarl
lahf
or
inc
mov
fldl
dec
xchg
mov
sarb
adc
int3
push
std
outsl
sbb
sub
es
sahf
push
lds
push
mov
popf
or
sbb
push
jo
enter
xor
bnd
aam
push
mov
jg
and
mov
push
jb
inc
in
clc
sahf
xchg
ret
pop
jns
cmp
sahf
sbb
ja
das
cmpsl
notb
mov
push
addl
rclb
aam
pop
jecxz
sub
ficoms
test
data16
fadd
pop
into
sbb
jo
bound
dec
dec
or
push
adc
adcl
adc
imul
mov
inc
push
cld
xchg
or
cld
xor
adc
mov
jmp
iret
jo
jo
mov
cmp
or
enter
repz
ja
stos
mov
cmp
adc
scas
jb
inc
inc
cs
cltd
adc
lea
lea
xchg
xchg
movsl
test
shlb
or
ja
lret
cmc
inc
pop
pop
cmp
dec
lea
dec
sbb
sbb
nop
gs
dec
fisubs
neg
mov
es
and
imul
jb
pop
and
pop
mov
xchg
cmp
stos
iret
popf
aaa
xchg
addr16
sti
adc
lods
mov
int3
adc
mov
and
aam
push
movsb
sub
test
lea
icebp
enter
popf
jb
cmpsb
ljmp
add
adc
call
out
stc
iret
mov
sarl
mov
xchg
cmp
sub
pop
cmp
push
xchg
loope
inc
add
dec
jbe
mov
sbb
in
pop
mov
cld
int
mov
inc
or
lret
jns
les
push
mov
adc
test
xchg
mov
and
sub
adc
icebp
mov
mov
das
cmp
aam
nop
dec
mov
xor
aam
inc
pop
fsubrs
jl
jmp
flds
fxch
jo
sbb
mov
add
movsl
xchg
pushf
mov
mov
lea
or
dec
in
scas
hlt
mov
imul
mov
popf
and
push
mov
stos
fsubs
popf
test
sbb
push
jmp
mov
xor
insl
sahf
xchg
jp
xor
fwait
mov
lret
add
sub
shrb
mov
pop
xor
mov
je
or
push
cmp
in
cmp
fwait
or
daa
dec
add
loopne
or
pop
addr16
loope
pop
scas
inc
xrelease
shrl
pop
ret
das
xlat
jo
mov
mov
cmp
dec
xchg
and
decb
nop
sbb
into
xor
adc
outsl
das
pop
in
pop
mov
ds
aas
adc
mov
xchg
out
rorb
push
clc
xor
cmc
loop
imul
decb
mov
cmc
lret
nop
mov
mov
xchg
inc
mov
lods
lods
cmp
push
outsl
push
push
test
insl
jno
mov
jg
aad
test
push
jo,pn
push
fs
icebp
ss
or
jle
aad
jecxz
mov
sti
mov
js
movsb
and
imul
scas
daa
notl
loop
xchg
and
or
out
rolb
es
mov
jl
mov
sbb
push
test
mov
icebp
testl
iret
or
push
aas
outsl
dec
fs
roll
sbb
sbb
sbb
imul
je
es
push
test
out
ss
clc
leave
les
xchg
pop
int
nop
jae
cli
inc
sub
lds
or
inc
xchg
pushf
into
jns
mov
xchg
lods
adc
mov
adc
je
inc
adc
xor
mov
sti
or
les
mov
pusha
call
insl
scas
jo
hlt
pushf
in
push
push
adc
jmp
cli
cmp
div
adcl
aam
arpl
fxch
sbb
sub
xchg
stos
call
jnp
enter
jmp
cmc
pop
movd
add
add
adc
dec
ror
mov
xor
enter
hlt
or
lock
pop
int
or
jmp
ret
out
sub
pop
or
pop
and
sub
cltd
bound
and
pop
out
sahf
push
mov
push
mov
jbe
das
mov
dec
add
mov
jp
lea
mov
jp
dec
jns
xrelease
inc
stos
mov
ss
insl
inc
inc
and
jl
test
sbb
push
imul
imull
or
push
rorb
imul
loopne
adc
inc
outsb
stos
int3
fimuls
mov
push
or
movsb
test
xchg
call
cmp
push
dec
cs
daa
jnp
inc
or
sbb
inc
ja
pop
ret
sub
cli
xor
aam
inc
lcall
push
push
std
dec
shl
xchg
add
mov
je
lods
iret
mov
mov
das
pusha
mov
mov
insl
xor
and
lcall
xchg
jp
cmpsb
out
mov
and
in
xlat
xchg
aad
flds
add
mov
shrl
xor
cmp
repnz
sbb
jle
mov
jecxz
imul
push
add
mov
fcomi
lret
loope
xchg
clc
mov
fcoms
inc
mov
clc
sbb
test
aas
sbb
aaa
in
out
sbbb
and
clc
lds
push
fstp
negl
inc
push
xor
lock
jg
addb
jo
jmp
fistl
adc
test
fidivrs
push
jnp
pop
popf
shr
iret
aam
push
sbb
xor
orl
mov
cmp
nop
ja
fistl
sub
pop
jno
bound
gs
push
andl
fs
cmp
popf
jmp
xor
std
and
jl
ret
xchg
mov
out
mov
xor
outsb
xchg
int
iret
and
xlat
pop
sbbb
xchg
mov
add
inc
es
push
movb
and
lahf
lds
inc
push
cmp
fildl
dec
cmp
mov
or
lret
iret
jl
js
mov
jp
and
push
and
dec
rol
out
push
pop
push
push
or
mov
fisttps
int3
mov
mov
jne
scas
dec
repnz
push
imul
inc
icebp
push
popa
xchg
test
add
fadds
jne
imul
je
dec
mov
and
mov
ror
lcall
adc
and
lret
mov
out
loop
aas
mov
xchg
xor
movsb
sub
mov
int3
outsl
ss
lret
xchg
lret
rcl
jecxz
into
out
push
pop
and
and
push
in
dec
ds
inc
rcrb
out
rolb
sub
aaa
idivl
cmp
cltd
aas
mov
mov
jbe
bound
int
ret
cmp
std
sub
push
mov
xor
add
or
lret
add
push
jnp
test
call
pop
in
add
mov
fcomp
pusha
lret
lret
es
add
xor
xchg
stc
xor
push
jle
out
mov
sub
mov
jmp
cltd
cmpsb
mov
dec
sub
cli
inc
push
jo
pop
dec
jb
hlt
and
scas
pusha
rcrb
loop
arpl
loope
or
xchg
pop
mov
mov
pop
insb
mov
xor
adc
push
orb
push
das
scas
mov
fucomp
and
ret
xchg
out
jno
jp
or
inc
and
lods
pop
ja
inc
pop
repz
icebp
add
addb
fisttps
mull
jecxz
or
sbb
in
shl
pop
fidivrl
ljmp
mov
dec
push
and
mov
inc
jl
lret
jmp
inc
pop
mov
sbb
cmp
cs
mov
xchg
lret
add
mov
fwait
cltd
add
ret
xchg
push
sbb
sub
cltd
add
mov
icebp
pop
aaa
enter
in
adc
adc
scas
in
outsl
cwtl
push
aas
mov
sbb
push
cwtl
inc
push
cmp
movsb
out
movsl
mov
ja
aaa
test
sbb
push
xchg
dec
push
and
and
xor
loope
das
adc
push
test
lahf
push
subb
jge
es
xor
add
jbe
fdivrs
mov
bnd
scas
pop
hlt
in
fucomp
mov
or
cld
test
in
mov
jl
push
shl
jae
rcr
fcom
pop
mov
sbb
sti
call
sbb
lea
clc
ljmp
fsubrp
je
inc
mov
add
xchg
mov
jbe
push
lods
into
addr16
stc
jmp
ret
xor
out
shr
imul
sbb
je
pop
cwtl
push
pusha
xchg
mov
xchg
adc
loopne
xor
jg
inc
and
mov
sub
xlat
or
xor
rorl
cltd
out
stc
mov
add
test
out
push
cmp
jp
push
ja
cmp
int3
mov
ds
inc
sub
push
inc
bound
xchg
dec
cld
inc
pop
mov
push
jno
pop
fisubrl
jbe
cli
std
fisttpl
dec
icebp
push
repz
pop
jl
bnd
pop
cs
jns
push
in
mov
push
jp
decl
pop
das
adc
sbb
aaa
and
mov
or
enter
push
je
mov
add
adc
nop
mov
ficoml
jns
cmp
jg
imulb
sub
negb
scas
adcb
jp
lret
cmpsl
or
sbb
in
jnp
dec
jae
inc
dec
sbb
cs
sub
or
test
and
mov
int3
cmp
mov
xchg
adc
aas
xor
inc
xor
dec
lahf
jg
mov
cltd
push
lret
xor
pop
or
out
adc
jb
js
and
sbb
out
dec
negl
jae
sbb
push
add
jmp
testl
pusha
xlat
les
repz
push
push
xchg
sub
mov
dec
lds
loopne
leave
aas
jnp
jmp
jge
imul
pop
pusha
mov
mov
adc
pop
xor
fwait
adc
push
pop
idiv
xor
mov
stc
arpl
gs
xor
or
cltd
clc
mov
stos
mov
dec
mov
sti
imul
arpl
xor
gs
xchg
push
and
jne
mov
subl
stos
xlat
repz
pop
xor
mov
out
fadd
jl
lods
mov
push
sbb
data16
cmp
cmp
and
cmp
sub
or
into
pop
jo
jne
add
repnz
xchg
pop
inc
push
push
pop
push
cmp
push
cmp
sbb
repnz
lods
inc
mov
xchg
push
mov
and
adc
dec
lea
add
adc
popa
sbb
mov
bnd
into
sbb
iret
jmp
in
inc
lods
mov
imul
or
adc
dec
cmp
sbbb
out
add
pop
xorl
jne
pop
cld
pop
loopne
sahf
and
pusha
cmc
daa
add
and
sbb
sbb
pop
movd
push
icebp
sub
lods
xchg
in
cmc
hlt
jb
clc
pop
push
inc
sbb
mov
xchg
dec
cmpsb
in
leave
sbb
cmpsb
enter
in
in
hlt
lods
jp
xchg
out
mov
jge
scas
sbb
inc
xlat
sub
sbb
cmp
mov
inc
out
je
or
sub
inc
imul
loopne
clc
in
aam
mov
inc
nop
mov
xor
std
icebp
enter
punpckldq
or
ficomps
es
scas
push
add
test
lea
out
cmp
and
movsb
add
jnp
push
xchg
mov
and
test
ret
pusha
fldpi
into
inc
pop
xchg
mov
fcmovnbe
add
aad
dec
fiadds
mov
mov
dec
sub
xor
mov
mov
adc
cmpsb
lods
js
lea
sub
out
rcr
sub
pop
dec
jns
mov
popf
mov
out
push
dec
jno
cmp
lea
dec
inc
or
mov
adc
cli
adc
cmp
sahf
and
test
notl
aam
jp
ljmp
mov
in
push
repz
outsb
dec
pop
fildll
pop
gs
movsb
jae
xchg
call
cmp
lods
insb
xchg
pop
sbb
cmpsl
es
in
je
and
pop
lahf
push
pop
jge
xchg
and
inc
dec
jnp
pop
sarb
xchg
dec
add
push
out
and
rep
lret
stc
aam
lods
test
xlat
int3
mov
pop
fstpl
fcom
add
lds
xor
xchg
push
adc
xchg
mov
mov
add
jo
aam
fwait
dec
push
cld
popa
add
or
adc
lahf
loope
in
mov
rcrl
mov
add
mov
cmp
mov
aas
in
xchg
lods
push
ret
mulb
and
inc
dec
jb
mov
mov
loopne,pt
cli
fisttps
jge
push
mov
mov
cmpsb
ret
xlat
mov
push
lahf
ds
xchg
rcll
jae
pop
cli
mov
outsb
fisubl
or
imul
dec
sbb
xchg
iret
xlat
fidivs
rcrl
xor
push
mov
in
lods
sbb
sti
mov
rorl
and
out
stos
xchg
cli
xchg
cmp
cmp
outsl
div
outsb
dec
stc
leave
imul
or
xor
imul
insb
bnd
xor
mov
sub
cmp
cmpsb
mov
xor
bound
roll
xchg
jns
adc
jge
xorb
sbb
push
rorb
cmp
mov
push
movl
test
int3
pop
and
push
into
sub
jne
dec
jnp
push
lds
xlat
push
add
mov
push
les
shlb
cmp
addr16
jbe
sti
pop
adc
mov
lods
cs
sti
or
das
rcrb
dec
std
mov
lret
mov
jge
mov
aaa
adc
sysret
aad
mov
test
jp
jg
mov
dec
inc
fisubrl
jb
jl
roll
repnz
lahf
lods
dec
fldl
fstpt
add
bound
and
in
sbb
loopne
testl
dec
add
stos
pop
mov
add
hlt
negl
cmpsb
mov
cmp
fld
fldl
lods
roll
rcr
out
mov
loopne
dec
fcompl
jb
test
data16
cltd
imul
cs
xor
loopne
outsl
and
jae
into
push
bound
inc
imul
mov
out
sbb
xchg
add
jp
cmp
push
cmp
pop
leave
fxch
frstor
loope
inc
imul
pop
gs
mov
ss
cltd
js
adc
jno
sub
pop
mov
daa
out
iret
cld
shlb
cmp
add
adc
push
es
cltd
dec
cld
sbb
sbb
out
sub
filds
mov
lea
or
dec
add
dec
shlb
sub
push
xchg
xchg
sub
xchg
imul
xchg
cli
cmpsb
les
push
push
stc
adc
sbb
lret
out
je
sbb
lret
mov
mov
lcall
dec
cmp
add
xchg
push
negl
popa
divb
stos
pop
lahf
jbe
movsb
jecxz
cs
out
and
popl
cld
xor
out
mov
jns
ret
ljmp
jo
inc
lds
cmpsl
sahf
dec
loop
call
mov
subl
leave
stc
loop
cli
and
movsb
push
repz
xchg
xor
in
notb
xor
or
inc
sub
mov
int
movsl
mov
into
xor
mov
jle
mov
inc
cltd
out
inc
inc
sbb
lcall
pop
and
dec
pop
test
in
inc
popa
pop
in
stc
pop
push
and
sub
pop
jmp
outsl
cmp
cmp
les
add
inc
and
push
lods
mov
mov
jae
xchg
data16
test
mov
loope
test
stos
shll
hlt
jp
lret
inc
xor
mov
lods
mov
mov
rcll
inc
push
cmpsl
mov
cmpsb
push
mov
js
movswl
jbe
sbb
call
push
add
lahf
jns
decb
clc
push
jle
int3
cwtl
divb
test
push
xor
dec
pop
shll
es
int3
dec
push
mov
sti
fwait
cmpsb
mov
pop
ficoms
ror
icebp
mov
sahf
stos
ret
cwtl
je
mov
mov
imul
in
cmc
add
in
mov
sti
mov
test
mov
dec
dec
jns
movsl
mov
in
fldl
jecxz
mov
inc
or
inc
ffree
dec
xchg
imul
shl
shr
xchg
fisttpll
sub
mov
test
push
loopne
jge
fwait
push
divw
sub
inc
add
pop
sahf
cmp
mov
mov
dec
ljmp
shrb
insb
inc
int3
cmp
scas
in
fistpl
out
push
add
mov
sbb
sub
addr16
out
cmp
dec
sub
fildl
push
sbb
dec
lcall
and
ss
clc
les
scas
mov
jne
cmp
int
push
rcl
je
addb
hlt
add
subb
xor
adc
fdivrs
pop
lods
pusha
ficompl
push
or
jbe
out
push
aam
push
jb
xor
pop
mov
out
add
xor
fdivrl
cmpsl
sbb
insl
push
addb
inc
clc
loop
dec
cmp
add
or
in
mov
out
test
add
cmp
out
loop
pusha
mov
inc
js
insb
loopne
sbb
mov
and
cwtl
out
aas
js
outsl
inc
shll
imul
dec
sbb
inc
aad
inc
dec
aas
fstl
shlb
push
and
clc
push
add
test
jnp
xor
sbb
push
rcr
dec
pusha
ds
es
in
addl
repz
je
pop
cmp
jp
jns
fidivl
scas
lods
jmp
cli
sbb
sbb
outsl
push
or
push
popf
mov
stos
cmp
add
add
jae
xchg
sbb
in
rclb
cwtl
sbb
jge
call
int
pop
dec
in
les
ret
mov
xchg
sub
lds
call
xchg
in
push
push
push
jnp
and
inc
push
imul
out
xchg
fs
add
cltd
xchg
loopne
pop
inc
adcb
inc
inc
adc
sub
ss
inc
popa
cltd
mov
dec
stos
xchg
cmp
movsl
push
cmc
fs
testl
xor
add
sbbl
mov
mov
adc
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jb
movzwl
or
mov
sub
movb
lea
mov
add
mov
movl
cmpl
je
cmpl
jle
jmp
call
mov
dec
mov
jmp
mov
sbbl
xor
sub
orl
mov
movl
jmp
cmp
cmp
add
movsb
in
ja
das
xchg
cmp
jo
mov
push
cli
es
in
iret
ja
mov
testl
xchg
xlat
inc
sbb
and
pop
xor
xor
fwait
sbbb
xor
push
push
xchg
dec
push
xor
loopne
lret
cltd
inc
imul
jmp
mov
fistpll
xchg
rcll
sahf
insb
in
rclb
jns
cli
mov
mov
test
je
icebp
adc
fisttpl
xor
mov
inc
and
and
fwait
cmp
mov
stos
ljmp
insl
jmp
jnp
loopne
loop
xchg
insl
dec
inc
xor
jnp
aad
add
aam
mov
fsts
xchg
ss
mov
mov
movsl
sbb
aad
fisubs
rcr
call
sub
pop
sbb
lret
lcall
popa
xchg
xchg
daa
cmpl
or
arpl
scas
leave
cmp
cwtl
dec
popa
sahf
clc
je
mov
test
mov
hlt
push
je
push
pop
jno
lea
pushf
mov
push
mov
add
dec
push
inc
mov
arpl
data16
es
sti
pushf
mov
mov
jo
sbb
popa
jmp
ret
sub
xor
cmp
imul
push
adc
ja
mov
push
sahf
xor
shrb
aad
jl
stc
push
pop
scas
add
push
movsb
pop
xchg
jge
pop
movsb
test
lret
ffree
sub
adc
mov
es
dec
add
cmp
test
cmp
fwait
les
lret
hlt
scas
nop
stos
insb
xor
shll
lcall
sbb
inc
fwait
pop
rcll
or
xchg
push
cmc
in
iret
xchg
pop
lahf
inc
iret
xchg
and
jae
pusha
pop
xchg
in
call
adc
fsub
mov
in
jo
dec
xchg
aam
gs
xchg
sub
loopew
in
jb
pop
out
xchg
ss
neg
push
divb
or
inc
aam
push
mov
out
or
add
jnp
add
cmc
dec
ja
push
shlb
sti
lret
pop
cmp
adc
int
int
insb
and
cmp
jmp
movsb
cld
jp
popf
mov
mov
stc
repnz
popf
pcmpeqb
hlt
dec
or
leave
add
gs
sbb
call
int3
adc
fwait
push
push
mov
xchg
mov
pop
lret
inc
jge
nop
push
adc
or
jmp
sub
add
shl
or
stos
sbb
imull
cltd
add
pusha
scas
mov
pop
ss
insl
repnz
cmp
and
fadds
dec
mov
xor
mov
sbb
sub
data16
out
sub
imul
lcall
fcompl
fistpl
add
pop
in
cmp
push
mov
mov
lret
pcmpeqb
sub
popf
push
sub
cmp
jnp
lea
xor
xor
iret
into
jmp
push
or
cwtl
cltd
mov
or
mov
pop
mov
pushf
in
and
sbb
mov
inc
addr16
arpl
stos
jno
je
test
pop
stos
ss
add
shll
lds
mov
bound
mov
mov
sub
call
adc
jecxz,pn
jge
pop
sbb
or
xchg
icebp
gs
inc
pop
out
sbb
and
enter
or
lcall
lret
int
pop
ljmp
int
sbb
mov
les
or
cmp
mov
xchg
push
cli
mov
mov
out
pushf
shrb
mov
ficoml
jbe
mov
fdiv
inc
jmp
mov
lahf
mov
test
push
clc
add
xchg
adc
scas
push
cmpsb
jp
clc
or
test
loope
gs
push
inc
mov
gs
test
or
fisubrs
xor
mov
rcr
pop
movsl
sbb
push
bound
mov
iret
jae
ljmp
mov
fmuls
and
jge
call
push
jle
sub
mov
ss
imul
dec
sub
xchg
addr16
inc
mov
pop
or
mov
mov
ret
xor
shrl
xor
mov
xchg
lret
aaa
movsl
pop
add
dec
decl
add
and
mov
cmp
cli
in
addr16
repz
lock
js
orl
stc
ja
jo
jb
xchg
aaa
into
in
fmul
rolb
into
insl
pop
mov
push
popa
test
push
aad
cmp
fldt
cmp
mov
pop
push
ret
fnstenv
cltd
jno
inc
rclb
pop
mov
lret
and
js
xchg
cmp
sub
pop
lds
lahf
dec
aas
push
adc
outsb
or
out
and
sbb
cmp
push
sub
or
sbb
xor
add
mov
and
xor
push
xorb
xor
inc
jne
imul
pop
xchg
les
sti
and
mov
lret
xchg
inc
iret
mov
mov
pop
bound
sbb
push
xchg
push
add
push
incb
xor
loopne
in
xor
add
negb
mov
dec
aam
fmull
in
and
movsl
out
inc
fisubrl
cs
cmp
cs
mov
popa
sub
cmp
adc
adc
gs
mov
arpl
aad
add
mov
pop
dec
xor
push
add
xor
xchg
outsl
xor
mov
stos
lods
sub
fisttps
mov
or
add
jecxz
dec
pushl
clc
xchg
sub
ljmp
out
push
xor
adc
rolb
and
sahf
int3
loop
call
test
mov
lds
cmp
std
arpl
adc
adc
xor
and
cmp
negb
insl
cmp
sbb
into
xchg
fcmovbe
add
fs
add
outsl
or
cmp
and
nop
add
mov
mov
push
and
jle
or
xchg
lods
stos
ficoml
das
fadd
jecxz
pop
xchg
cld
imul
lret
inc
push
fisubrs
or
inc
mov
movsb
push
add
lahf
dec
jnp
into
adc
outsb
jecxz
mov
mov
es
pop
cmp
add
jp
pop
push
aaa
pop
cltd
cmp
jb
lret
pushl
pop
movsb
jge
jno
test
xor
inc
jecxz
pop
scas
push
lahf
sti
cmp
mov
inc
fildl
cmc
sub
sbb
and
clc
xlat
nop
mov
enter
fwait
lods
das
das
cwtl
xor
lret
lret
mov
sbb
pop
gs
jge
pop
mov
int3
inc
pop
insb
stc
fs
pop
lock
ss
jbe
iret
pusha
dec
rorl
jg
add
jne
dec
mov
adc
mov
or
push
and
or
lcall
cmpsl
or
out
dec
dec
jmp
stc
inc
adc
ja
xlat
push
mov
arpl
jmp
dec
xchg
out
scas
xchg
imul
mov
mov
jp
mov
xchg
lods
jbe
pop
xchg
jp
ss
xlat
cmc
js
dec
aam
mov
shlb
xchg
cltd
add
inc
arpl
leave
sub
scas
xor
dec
ds
shll
jle
out
fidivrl
stc
out
cmp
jmp
mov
push
mov
mov
mov
into
loopne
stos
repz
or
mov
and
fisubs
faddl
lock
mov
loopne
scas
jg
cmpsl
mov
addr16
pop
jl
mov
mov
sahf
xor
test
loope
sub
fidivs
and
into
testl
scas
push
cli
xchg
lret
sub
mov
inc
jae
sub
dec
sub
dec
cld
or
pop
sbb
stc
cmpb
decl
adc
std
lods
outsb
jo
inc
mov
int
push
xchg
lret
cli
push
outsl
add
mov
pop
jmp
fstpt
mov
jb
mov
mov
dec
dec
iret
pusha
and
addr16
negl
xchg
dec
fcomp
cmp
imul
outsb
cmp
movb
addr16
pop
clc
lods
xchg
in
insb
mov
lods
and
aad
fs
adc
xor
fwait
xchg
cmp
and
xor
mov
xor
or
ficoms
or
xchg
and
es
add
imul
pop
insb
cmpsl
arpl
cmp
jnp
call
loopne
enter
mov
xchg
mov
in
mov
std
movsl
sub
sub
jmp
iret
xor
jmp
sub
jnp
sarl
movzbl
sub
xchg
je
lret
negb
int3
push
test
push
add
imul
cmp
jl
push
xchg
mov
cli
std
mov
adc
sbb
push
ror
xchg
jp
pop
dec
iret
push
faddl
test
jne
jg
cmp
jg
push
cmp
lds
inc
jmp
mov
xlat
icebp
or
aam
or
in
ljmp
adc
ret
movsb
stc
xchg
testb
js
into
mov
dec
mov
push
es
arpl
sarb
sub
outsb
shrb
fnstenv
push
jae
js
fistl
pop
or
xchg
in
scas
dec
jmp
xor
cmp
add
mov
rol
xor
addr16
jo
arpl
iret
icebp
push
ds
sahf
adc
ficoml
mov
cmp
and
cmpsl
out
adc
scas
jns
sbb
nop
push
mov
mov
adc
xor
mov
adcb
sti
cmpl
push
jnp
adc
into
mov
sbb
and
cltd
shlb
xchg
xchg
xchg
cmp
cmp
and
divl
push
in
daa
cld
iret
outsb
outsb
mov
mov
mov
adc
test
adc
pop
faddl
jo
pop
popa
cltd
pop
and
pop
mov
xchg
jo
outsb
add
pop
enter
hlt
push
les
sub
or
lcall
addr16
pop
test
inc
setnp
ret
loopne
add
mov
push
adc
push
cmp
pop
inc
sbb
add
fsubrl
and
adc
sbb
adc
cs
mov
xor
xchg
cmpsb
dec
dec
out
hlt
xchg
ret
adcb
aad
jb
lods
mov
push
inc
sbb
inc
add
and
push
pushf
and
lret
sub
je
movsb
movsl
mov
xorb
pushf
lea
jle
mov
inc
insl
pop
cli
stc
jecxz
sbb
mov
and
mov
push
jg
sbbb
and
in
xor
jns
dec
mov
cmp
xchg
movsb
aad
out
sbb
icebp
cmp
cltd
jns
mov
arpl
test
aaa
mov
xor
mov
out
fst
push
sub
mov
pushf
dec
cmp
sub
push
into
or
lcall
ljmp
outsb
adc
inc
inc
cs
xor
sub
add
int3
push
jecxz
movsb
sub
mov
aas
cwtl
jp
popf
sub
and
out
mov
subb
inc
mov
nop
xlat
jno
cmp
in
cmc
dec
bound
xchg
in
push
nop
imul
lret
imul
daa
sbb
insb
pop
jae
les
dec
inc
adc
cmp
sarb
rcrl
out
pusha
adc
and
cmpsb
repz
or
outsb
mov
adc
and
into
inc
les
jns
mov
dec
in
pop
pop
mov
jbe
repz
out
inc
sbb
or
xor
repnz
dec
and
in
or
inc
lods
into
xchg
mov
out
push
mov
in
pop
outsb
ljmp
lods
jb
adc
cmp
rclb
mov
out
aaa
arpl
lds
cmpl
orl
xchg
adc
scas
push
imull
jge
leave
outsb
mov
xlat
or
repnz
inc
or
shrb
or
sub
mov
xchg
gs
pop
in
dec
movsb
loop
mov
sahf
cltd
push
cmp
mov
pop
out
int
sbb
adc
adc
test
leave
sub
dec
inc
mov
xor
bound
stos
imul
mov
aaa
call
or
clc
lret
add
or
sti
outsb
loop
out
cmp
add
jecxz
inc
jb
inc
testl
mov
shlb
faddp
sbb
dec
dec
mov
fsubrp
std
lret
fmull
sarb
fstl
out
or
ss
fcom
in
test
jmp
mov
push
mov
cwtl
mov
push
test
pop
dec
adc
push
inc
push
fcomps
sbb
mov
add
nop
loope
dec
inc
adc
loopne
aam
mov
inc
inc
inc
stos
pusha
adc
aaa
in
js
dec
sub
adc
iret
daa
mov
repz
pop
jbe
xchg
ja
stc
mov
xchg
jo
mov
fimuls
cld
add
mov
ds
das
cs
lock
dec
das
mov
rcr
bound
jge
xchg
mov
push
sahf
jo
aaa
jae
fs
xchg
scas
adc
push
ret
int3
jns
repnz
ror
shl
pushf
and
int3
jno
call
inc
outsl
push
cltd
mov
inc
jl
lret
outsb
stos
xor
lock
sub
cld
lahf
and
leave
push
lea
xchg
mov
ret
cwtl
sbb
or
lahf
in
repnz
pop
hlt
xor
mov
mov
dec
or
mov
add
and
cld
rorb
aad
xor
cmc
bound
mov
test
add
dec
pop
or
lahf
lret
jecxz
pop
mov
js
repnz
push
sbb
mov
mull
cli
adc
sub
roll
xor
call
xor
jecxz
inc
mov
and
mov
push
es
ffree
das
sub
jge
adc
inc
mov
xor
mov
lret
notl
ljmp
jecxz
jp
dec
mov
pop
sbb
xlat
loopne
nop
sub
lret
adc
outsb
mov
dec
mov
adc
cmpsl
cmp
pop
hlt
jb
mov
std
movsl
jnp
pop
cmp
or
imul
jecxz
cmp
cmp
xor
adc
xchg
sub
dec
test
ja
push
push
pop
push
mov
push
cld
pop
das
cmpsb
cmp
jp
mov
lcall
sub
sub
pop
mov
aaa
neg
push
xor
sbb
inc
mov
cld
pop
inc
cli
xchg
jnp
mov
mov
test
inc
mov
fmul
repz
stos
add
mov
xor
ret
lds
out
clc
or
xor
sub
or
dec
ljmp
mov
sbb
pop
push
lods
aam
arpl
aaa
insl
and
pop
sbb
in
cmpsb
mov
xchg
or
add
int
in
adc
lahf
mov
jmp
movsl
sbb
out
pop
rcrb
inc
jle
fildll
add
inc
loopne
xchg
imul
adc
adc
push
fcomip
push
idivb
stc
lods
in
adc
pusha
push
push
rorb
adc
dec
dec
sbb
xlat
pop
fstl
rolb
cmp
jle
int3
mov
jecxz
into
dec
loope
mov
cmp
std
push
sub
int3
test
add
pop
jo
sub
cmp
dec
ss
fwait
mov
stos
mov
lods
in
lock
sub
inc
ljmp
xchg
std
sbbb
out
mov
or
mov
jle
stos
mov
mov
xor
adc
sbbb
sbb
dec
jo
push
dec
xor
add
jbe
ret
out
out
outsl
and
adc
or
fwait
pop
shrl
rorl
adc
out
or
out
ficompl
cmpsb
jp
cmp
addr16
jl
sbb
addr16
xor
arpl
bound
pop
adc
popf
stos
xor
cmp
in
cmp
and
aam
xchg
xchg
mov
lods
out
push
sub
ja
mov
inc
test
mov
je
mov
jnp
pop
scas
ror
or
push
cltd
sub
inc
xchg
sahf
sub
xor
inc
negl
loop
lret
mov
lds
scas
adc
loop
sub
sub
sbb
jmp
sub
ret
mov
ja
in
and
shrl
in
mov
inc
jg
clc
rolb
dec
mov
jmp
imul
mov
or
and
lock
jle
fnsave
xlat
inc
pop
jge
sub
push
inc
int
xor
aas
stos
loope
in
sar
sub
cmp
scas
mov
arpl
dec
daa
mov
mov
andl
ret
pop
lods
cmpsb
shl
sarb
out
push
les
mov
sub
jg
int
xchg
push
int3
aad
mov
aaa
mov
bound
add
push
add
es
fs
bound
shrl
xor
adc
aam
add
das
std
addr16
and
loopne
sub
in
xor
pop
add
movsl
mov
stos
jne
xor
scas
mov
jb
in
mov
scas
xchg
sti
insl
out
stc
jns
add
or
sbb
std
lret
out
jno
arpl
nop
fcoms
movsb
mov
addl
enter
or
add
fs
mov
scas
pop
cltd
stc
mov
mov
into
and
aad
or
and
test
popf
xchg
mov
jae
dec
adc
into
xchg
fisttps
xchg
stos
shl
cmpsb
push
mov
add
loopne
adc
xchg
mov
or
int3
jo
fs
sarb
add
adc
xchg
aas
cwtl
push
loope
popa
shlb
gs
mov
mov
push
adc
loop
inc
fsub
aas
mov
test
fisttps
dec
push
inc
lock
sarb
cld
mov
adcb
xorl
sbbb
push
cmp
sbb
pop
sbbb
mov
data16
faddl
mov
arpl
test
in
adc
mov
out
cli
jne
sub
test
aam
in
and
mov
into
and
repnz
out
lds
push
in
out
xchg
xchg
cli
add
std
jmp
jae
inc
je
cmp
test
aas
adc
or
lea
push
pusha
xchg
push
enter
inc
dec
icebp
into
mov
dec
sbb
push
shlb
in
jecxz
cmp
cmp
sbb
loope
mov
xchg
mov
jmp
pusha
mov
push
lock
inc
sbbb
xchg
aas
shll
fwait
sub
sbb
fdiv
pop
sbb
sbb
rcrl
movsb
movsb
sti
jmp
mov
jle
jmp
inc
jae
fimull
adc
lret
fwait
test
jl
push
rcr
test
in
pop
out
adc
or
and
mov
je
movsl
and
and
xor
add
inc
popa
add
lahf
mov
faddp
outsb
test
dec
call
lds
je
addr16
add
mov
jge
frstor
pop
and
sbb
xor
mov
imul
shlb
jae
push
mov
rorb
pop
sbb
jle
sbb
pop
out
inc
xchg
xchg
aam
leave
adc
repz
jnp
enter
add
filds
push
inc
scas
cmpsl
mov
in
mov
or
sub
inc
out
scas
addr16
stos
test
mov
jne
popf
push
inc
inc
fwait
xchg
fstpl
mov
ror
andl
imul
into
push
adc
push
imul
dec
inc
dec
xchg
repz
pushf
test
cmp
push
dec
dec
ret
mov
xchg
out
clc
xor
xchg
movsb
in
out
cmp
movsb
fcomp
mov
es
xchg
mov
lcall
stos
loop
daa
add
outsl
stc
sub
sbb
sub
jle
or
and
cli
push
sahf
jle
loope
pop
push
fcmovnu
pusha
loopne
lods
sbb
adc
xor
aaa
jl
out
test
lock
mov
jae
sbb
sub
ljmp
lea
clc
aas
xchg
pop
js
xchg
inc
stc
cmp
scas
adc
sbb
cmp
jo
mov
divb
and
push
iret
xchg
movsb
cmp
push
out
mov
add
dec
scas
test
stc
neg
xchg
lods
sbb
ljmp
adc
inc
outsb
cld
add
mov
dec
dec
shl
sub
sarb
std
cmp
in
lods
inc
faddl
cli
repz
sbb
out
inc
mov
cli
push
iret
je
aad
enter
cmp
jmp
add
mov
lahf
sarb
xchg
in
mov
xchg
add
insl
int3
aaa
mov
sbb
aam
xor
repnz
push
jp
insl
or
add
xchg
dec
in
icebp
dec
sub
lret
repz
orl
ss
jns
cmp
jecxz
jns
sbbl
push
and
repnz
aaa
xor
cmpsb
jmp
sbb
rsqrtps
jno
and
je
mov
scas
repz
add
dec
aad
and
fldenv
mov
xchg
mov
xchg
push
pop
mov
push
mov
adc
or
loope
incl
insb
jb
pop
jle
fsubp
xor
push
dec
icebp
jle
scas
push
mov
ljmp
inc
or
sbb
movsb
add
mov
daa
sub
rcrl
outsb
pop
sti
aad
fistpll
pop
ds
out
leave
lahf
or
mov
push
lds
dec
int
ret
loop
pusha
and
aaa
fstpl
test
sub
fists
mov
xchg
adc
fldcw
push
lahf
adc
xor
mov
mov
jge
aam
in
jge
movsb
test
mov
faddp
push
leave
dec
in
cmpsl
xlat
sbb
mov
cltd
mov
push
push
aaa
andl
lcall
inc
inc
je
imul
pop
addr16
scas
jne
mov
rolb
pop
jnp
sbb
faddl
mov
mov
jae
or
lret
xchg
pushf
scas
push
pop
push
sub
dec
and
adc
pop
negl
cmp
xlat
lods
mov
fmull
mov
push
mov
pop
sbb
add
pop
sub
mov
lcall
add
cmpb
adc
jg
dec
adc
test
movsb
push
and
sub
bound
sub
jae
mov
rcll
in
lss
jbe
mov
std
jo
sti
daa
mov
push
xor
cltd
lcallw
push
incb
mov
loopne
sbb
int
lods
cmpsb
popf
adc
add
jg
mov
xor
fdivs
mov
dec
cmpsb
dec
sub
in
pop
data16
jno
adc
jno
mov
jae
cmc
lcall
sbb
fnstsw
cld
dec
stos
loope
push
xor
movb
and
cmp
cmpsb
push
sbb
pop
sbb
lods
scas
lret
xorb
inc
sbb
inc
jge
jo
adc
mov
adc
or
add
cli
lahf
testb
fstl
push
sti
popl
dec
pop
popl
and
and
add
lea
outsl
dec
inc
or
dec
leave
aam
test
packsswb
mov
lods
popf
xchg
sbb
sbb
adc
cmp
push
loopne
lahf
sub
dec
xor
mov
push
mov
add
jno
pop
sbb
jge
sbb
jne
mov
test
mov
push
outsb
hlt
inc
repnz
jl
aam
xlat
pop
xor
jne
aad
cmp
daa
fwait
in
add
popf
and
push
mov
pop
arpl
sub
jo
mov
push
and
push
xor
push
sub
jnp
push
mov
sub
pop
mov
sbb
cmp
int
cs
dec
cld
fsubrl
ret
mov
adc
out
adc
loope
mov
idivb
inc
or
dec
fwait
sub
mov
and
idivb
bound
pop
addl
icebp
mov
pop
lds
xchg
out
mov
sti
or
or
incb
fisttpl
sbb
jnp
scas
std
lock
mov
mov
pop
mov
cmp
cwtl
pop
fisubs
leave
pmaxsw
loop
aam
in
or
les
fcos
js
xchg
adc
repz
push
fcmovu
jae
push
sub
lcall
popa
je
leave
jge
jns
popf
mov
hlt
ds
inc
bound
sub
fcmovb
loope
shrl
sbb
sub
call
and
gs
test
repz
mov
mulb
aam
jne
mov
cs
repz
test
pop
std
imul
xor
les
mov
adc
xchg
pop
test
cs
jns
lea
cmp
ficoml
out
mov
add
mov
mov
dec
stos
cs
dec
sbbb
call
sub
stos
xchg
rorl
or
mov
dec
roll
xor
sub
ds
aas
pop
test
pop
sahf
add
mov
pop
mov
ds
and
jbe
xchg
addr16
insl
jne
xchg
shll
push
cmc
mov
xchg
ret
fnsave
jl,pt
ds
pop
inc
decl
bnd
aad
sbb
clc
cmp
add
jge
loop
mov
jbe
sbb
jg
or
pop
pop
fdivrl
test
rcrl
pop
jle
movsl
in
inc
cld
lret
in
jbe
int3
lahf
int
decb
inc
lahf
sbb
sub
push
dec
fistps
cmp
rcrb
loope
pop
enter
lea
scas
mov
jl
aad
cs
add
dec
and
inc
aaa
addr16
push
int3
aad
adcl
push
xorb
popf
push
adc
aam
fwait
scas
xchg
arpl
loope
in
dec
adc
mov
imul
dec
test
int
sub
xlat
in
lret
lock
lcall
push
mov
dec
rolb
arpl
orl
lock
lcall
sub
jmp
or
inc
enter
addr16
fidivrl
mov
popf
jae
inc
mov
aas
sbb
in
in
in
das
cmp
insl
jl
mov
or
sub
sbb
or
push
adc
and
cld
jge
mov
out
daa
shrl
iret
cli
mov
push
adc
xchg
sbb
xor
xor
push
lock
data16
sub
pop
hlt
xchg
mov
or
xor
xorb
push
xchg
fiaddl
test
shl
xor
xchg
cmp
mov
iret
fs
in
push
arpl
data16
loop
out
xor
dec
add
rcl
cld
loopne
loop
adc
inc
sti
or
mov
rcll
or
rcrb
and
in
sbb
mov
xor
cli
scas
ret
pop
scas
es
iret
cli
jno
out
pop
inc
dec
hlt
xchg
fmulp
roll
xlat
jl
xchg
xchg
cltd
mov
and
sbb
lock
push
inc
insl
cmc
mov
ja
jnp
push
cmp
push
movsb
or
push
mov
mov
xchg
xchg
mov
xor
popf
pop
popa
insb
pusha
and
jmp
and
sub
dec
pusha
lret
xchg
sarb
dec
bound
inc
adc
outsl
shrl
into
push
pop
dec
xchg
sub
lcall
mov
mov
les
loopne
or
negl
std
jbe
push
pop
sbb
xor
add
imul
fs
out
mov
loop
repz
xchg
fwait
mov
pop
into
jb
test
cmpsb
jno
dec
shr
adc
pop
mov
xchg
loopne
in
loop
add
sub
mov
xor
loop
cltd
and
mov
sub
stos
pop
lods
push
adc
jb
insl
mov
lcall
pop
push
testl
les
ret
mov
mov
mov
insl
and
mov
pop
out
shll
testb
cltd
mov
mov
xor
xchg
repz
mov
push
xor
jmp
loopne
cmpsb
loopne
sbb
add
xchg
and
out
jge
jb
mov
call
cmp
sub
rorb
jae
cltd
scas
mov
notl
sub
dec
mov
ret
jbe
adc
cmp
xchg
sahf
je
subl
mov
sub
cmp
xchg
xor
mov
adc
shrl
fwait
and
iret
jg
lea
mov
inc
testb
loope
getsec
jae
mov
xor
xchg
inc
fldl
jg
inc
sbb
or
xor
jne
mov
pop
mov
inc
call
sti
xor
xor
or
leave
xchg
or
movsb
pusha
jne
push
mov
ja
xor
cmp
ficoml
cld
fsts
jo
xor
daa
inc
or
inc
push
xchg
add
mov
or
add
xor
push
push
adc
mov
pop
cmp
out
jle
ret
and
push
flds
and
adc
mov
scas
lcall
mulb
sahf
mov
sti
sub
enter
and
in
popf
sti
sub
sbb
lods
xor
lret
jae
jbe
dec
adc
je
pop
out
sbb
in
in
gs
push
outsl
aaa
dec
imul
int
dec
lods
cwtl
pop
cli
out
xlat
xor
sub
cmp
outsl
dec
push
stc
ds
dec
jns
mov
aas
mov
jno
xor
pop
xchg
cwtl
addl
call
dec
inc
add
fldlg2
out
pop
shrb
stos
stos
out
inc
and
mov
mov
or
adc
aad
int3
mov
cmp
jb
inc
jg
stos
ret
sbb
xor
shrb
jo
mov
push
cmp
jmp
adc
pop
or
sbb
ja
shlb
outsb
and
sbb
mov
pusha
dec
out
mov
mov
jle
push
arpl
gs
cmpsb
lods
cmpsb
test
cmp
push
cvtdq2ps
or
insb
fisubrs
movsb
inc
addr16
call
or
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
mov
adc
push
addl
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
andl
add
jmp
mov
mov
inc
cmp
jb
xor
mov
sbbl
xor
add
jmp
mov
xor
mov
orl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
subl
add
subl
movzwl
mov
mov
movzwl
adcl
xor
addl
add
mov
mov
mov
movl
inc
mov
mov
cmp
movl
jne
mov
adcl
mov
mov
sub
xor
add
mov
and
mov
mov
sbb
mov
or
xor
andl
xor
add
inc
mov
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
or
movl
add
movl
movl
addl
mov
mov
mov
movzwl
and
mov
xor
incl
add
movl
mov
movzbl
mov
je
adc
mov
andl
xor
add
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
sbbl
xor
xor
addl
sub
notl
sub
add
xor
incl
mov
or
mov
mov
subl
add
imul
mov
sbb
mov
mov
add
xorl
or
movzbl
sub
mov
mov
sbb
mov
add
xorl
xor
adc
mov
mov
mov
addl
add
addl
and
mov
sub
mov
mov
andl
lea
mov
mov
add
mov
orl
sub
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
xor
addl
add
movl
jne
jmp
incl
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xor
xor
adcl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xorl
xor
xor
sub
sub
sub
xor
mov
adc
mov
andl
mov
add
subl
imul
andl
mov
or
mov
mov
addl
add
addl
or
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
push
into
push
mov
nop
mov
lcall
push
jno
or
sbb
add
jl
inc
xchg
adc
add
sbb
bound
cmp
pop
xchg
mov
vpcmpeqw
call
pop
dec
dec
lock
jae
mov
popa
mov
iret
mov
and
outsl
jg
sti
mov
adc
aam
aas
fadd
mov
repnz
out
jbe
adc
jnp
sbb
inc
repnz
in
mov
adc
pop
push
sub
cwtl
lods
out
mov
lock
fldl
cmp
push
sbb
test
addl
xor
sbb
sub
or
out
pop
pop
inc
mov
jl
inc
xchg
jge
sbb
sar
cmpsb
xchg
sbb
call
data16
lds
mov
inc
ljmp
jb
or
inc
cli
mov
repnz
popa
xor
inc
pushf
xchg
aam
and
mov
xor
aad
inc
ljmp
add
xor
dec
in
dec
in
shll
mov
cmpsl
arpl
adc
loopne
ficoms
mov
call
rcl
add
mov
jge
push
xor
popa
mov
lods
pop
ss
es
and
mov
mov
adc
loopne
jb
ret
mov
add
mov
add
int
sbb
out
gs
lcall
cmp
xchg
pushl
pop
mov
cld
adc
cmc
lods
ficomps
jb
shlb
jns
adc
subl
adc
xchg
lahf
mov
jecxz
les
lods
xor
test
dec
cs
push
inc
fwait
outsl
aaa
cwtl
into
or
ret
fimuls
push
sar
mov
sbb
hlt
gs
jb
cmpsl
outsb
sbb
sarb
into
or
jb
sbbb
shrl
mov
xor
mov
fcmovb
dec
imul
das
les
xlat
in
jmp
push
mov
mov
je
addl
push
cmp
ja
jg
subl
leave
xor
sahf
stos
sub
jbe
dec
nop
mov
xor
jno
pusha
pop
dec
mov
iret
lds
sub
loop
ja
rcrb
jge
out
fwait
mov
jmp
mov
lcall
sub
gs
sbb
lods
pop
mov
mov
push
repnz
leave
int3
inc
and
sbb
xchg
jns
push
jg
pushf
xchg
inc
add
stos
lahf
ljmp
add
std
scas
or
mov
mov
dec
pop
arpl
int
push
inc
stos
inc
lea
mov
mov
push
jb
mov
inc
sub
lea
rorb
xor
jcxz
stc
mov
sti
sub
mov
push
pop
or
orl
arpl
popf
inc
dec
adc
stc
aas
ret
out
dec
fmull
orl
out
sub
fwait
adc
daa
sbb
push
out
mov
jns
dec
sbb
stc
mov
mov
std
orb
dec
in
sbb
add
sub
mov
sub
loop
pop
out
mov
loopne
test
arpl
and
push
fdivp
sub
aas
mov
cmp
scas
lods
and
jle
out
xor
out
or
pop
add
or
or
int3
mov
mov
sarb
pop
lret
sbb
push
fadds
vmovaps
repnz
loope
fcmovb
repz
fidivs
and
shll
sub
pop
iret
leave
test
sti
mov
psubw
movsb
sub
imul
int3
enter
je
imul
in
mov
out
gs
fdivs
shlb
fldt
out
add
mov
pop
sub
push
sbb
mov
divl
pop
out
ljmp
movb
or
sahf
sub
and
ret
fmull
cwtl
lret
adc
inc
int3
test
jp
push
xchg
xchg
test
data16
cmp
lret
or
mov
dec
ffree
xor
mov
jno
xor
scas
inc
mov
and
cmpl
das
xchg
push
fcmovu
lahf
jne
sub
je
arpl
jl
jecxz
and
inc
xchg
sub
xchg
pop
jns
and
cwtl
cmp
aad
sbb
cmp
pop
notb
xchg
ret
or
dec
imul
mov
sbb
xchg
pop
iret
inc
imul
pop
jne
int
mov
out
mov
adc
or
pop
test
sub
cmpsl
xlat
and
int3
jb
pop
pop
rcrb
mov
mov
fisttpll
jecxz
cmp
ss
xor
shl
adc
xor
insb
mov
orl
xchg
scas
adc
outsl
xor
stc
js
or
pop
lahf
pop
dec
mov
test
cmpsl
mov
pop
mov
outsb
int
jne
ss
push
push
sbb
test
outsb
cmp
mov
scas
dec
or
movsb
aam
mov
popf
push
mov
push
incl
dec
push
pop
fwait
jo
xor
faddl
lea
enter
sub
mov
movsl
gs
dec
cmp
push
inc
fwait
daa
lock
pop
sbb
fmuls
mov
or
lahf
scas
jnp
dec
bound
ds
cmp
dec
adcb
addr16
fnstcw
add
clc
out
cld
mov
fcoms
lcall
mov
jnp
inc
mov
jge
jae
jae
rcl
push
sbb
lret
stc
sub
push
jbe
shr
mov
out
lock
repnz
in
out
xchg
xchg
lods
cmpsl
inc
jp
or
out
add
xchg
bound
call
fiaddl
push
jne
pushf
repz
int3
pop
test
es
mov
fs
hlt
in
popa
cmpsl
pop
test
push
mov
cltd
stc
jle
jle
aad
imul
push
lods
dec
cmpl
ljmp
iret
add
stos
push
xchg
sub
imul
xor
mov
hlt
mov
in
imul
adc
jp
sti
pop
or
cmc
jle
cmpb
add
mov
add
fbstp
push
jmp
scas
je
aam
dec
ret
test
jge
shlb
fcmovbe
cltd
push
idivb
cmp
cmp
shld
sub
pop
mov
sub
sbb
xchg
pop
call
push
xor
cs
mov
pop
mov
mov
or
inc
jl
lahf
lcall
adc
out
call
mov
stos
out
sbb
sti
sbb
gs
pop
scas
fistl
mov
movsl
dec
xchg
and
addr16
fimuls
movsl
mov
call
jmp
pop
adc
add
add
xchg
sbb
sbb
mov
and
das
mov
jge
out
icebp
mov
fidivrl
aas
add
or
jp
lock
sub
inc
dec
pop
enter
inc
sti
jge
xor
imul
push
or
mov
jo
dec
in
add
imul
add
dec
jns
pusha
mov
add
cwtl
jno
cli
mov
ret
aas
jg
mov
int3
cli
or
fs
aas
jne
mov
loop
sarl
test
dec
test
pusha
out
push
mov
scas
lock
cltd
add
int
and
mov
add
dec
pop
xchg
fdivr
cmc
pop
add
pop
add
dec
mov
sbb
add
sbb
lea
add
aad
mov
sbb
rorb
dec
stos
out
xor
shll
insl
push
mov
pop
int3
lahf
sbb
lods
lock
aad
add
adc
mov
repz
scas
dec
mov
lea
mov
sub
jb
sbb
push
xchg
inc
lds
mov
loop
jp
cld
or
lahf
int3
outsb
jle
mov
pop
idivl
fldt
jb
xor
xorb
jb
ret
ror
pusha
orb
xor
pop
cltd
ss
ss
lods
sbb
test
mov
xchg
mov
push
mov
inc
jle
pop
shlb
pop
or
adc
mov
sbb
fdivs
mov
mov
jecxz
dec
push
stos
sbb
xor
dec
and
xor
jns
mov
imul
xor
cmpsb
cltd
stos
aam
jne,pt
xor
iret
and
inc
out
add
sbb
les
inc
jg
mov
pop
push
push
leave
jp
sbb
loopne
dec
movsl
int
and
pusha
mov
gs
movsb
imul
and
popa
lods
mov
mov
lods
int
push
notb
shl
lret
xlat
orb
notb
ljmp
sar
popa
scas
sbb
xor
push
adc
push
enter
inc
push
cmp
inc
andb
mov
adc
xchg
aam
lret
int
out
cmp
jg
jl
pop
push
inc
das
mov
jb
notb
cmp
pop
mov
fldenv
xchg
sbb
inc
pop
push
mov
dec
lods
cmc
fsubrp
cmp
shll
mov
sbb
mov
add
adc
dec
mov
push
cli
dec
push
jl
insb
test
fldl
jns
out
sbb
push
xchg
add
cmpsb
mov
and
xchg
fs
fidivrl
xchg
jo
xchg
mov
jmp
jne
scas
pop
andl
sub
ljmp
add
leave
cmp
bound
outsl
and
pop
push
in
mov
je
pushf
lods
xor
sub
popf
lea
jbe
pop
sbb
xchg
dec
pop
mov
pop
inc
and
lahf
insl
inc
sbb
shlb
add
shll
adc
dec
stos
test
loope
mov
push
xchg
std
jecxz
cli
lods
mov
into
std
je
or
movsb
int
mov
jle
cld
out
and
lods
aam
shrl
mov
mov
cmp
cmp
add
sub
fs
inc
xchg
adc
movsb
popa
fsubp
aaa
or
sub
or
inc
push
dec
push
pop
xchg
lcall
sub
push
add
mov
xor
sbb
popa
pop
xchg
gs
xorb
lock
stos
stc
xchg
ret
and
add
stos
jae
pop
fmuls
add
cmp
ljmp
dec
xor
cli
arpl
pop
pop
pop
repz
ret
mov
adc
dec
cmp
pushl
shlb
add
orb
lods
jb
sbb
mov
xor
scas
fs
push
loopne
sbb
dec
lret
lds
lds
mov
js
adc
inc
repz
xor
xchg
pop
xchg
cmp
sarb
xchg
ss
push
fs
shll
xor
repnz
xor
adc
into
cmp
pop
inc
scas
pop
into
imul
or
dec
in
or
cmp
pushf
scas
aad
in
lea
cli
les
pop
aaa
xlat
cmpsl
orl
add
jo
je
dec
insl
in
mov
cmp
test
add
xlat
push
sbb
xor
test
stos
sub
push
orb
nop
int
daa
imul
loop
jbe
arpl
addr16
jecxz
aam
jge
add
add
loop
or
dec
iret
push
mov
arpl
jmp
jbe
xchg
or
mov
cwtl
xchg
dec
imul
add
fists
inc
sub
popf
xor
hlt
dec
jmp
xchg
xor
pop
sbb
inc
clc
lcall
jge
ret
lock
jp
xchg
sbb
popa
mov
call
icebp
gs
or
in
add
clc
dec
pusha
xchg
cs
orb
push
int3
xchg
cwtl
in
push
jle
xlat
or
dec
inc
cld
or
mov
mov
lret
jp
jmp
adc
lahf
and
xchg
xchg
mov
pop
out
ret
scas
mov
cmp
pop
add
mov
fldt
hlt
test
add
out
cmp
mov
stc
and
push
or
xchg
fists
dec
popa
mov
pop
lods
push
xchg
movsl
call
sub
jmp
cmpl
fnsave
cmp
push
lods
adc
sahf
rorb
sub
xchg
sub
xchg
xor
and
das
pop
pushf
pop
push
mov
mov
test
cmp
adc
imul
mov
fwait
repz
add
out
test
pop
test
sbb
push
pop
shrb
loopne
cmp
cs
xchg
rorb
out
xchg
adc
pop
push
mov
and
fucompp
jp
int
ljmp
inc
pop
out
stos
or
jae
lret
cltd
cltd
xchg
add
daa
lods
data16
mov
push
push
xor
and
sbb
mov
jl
aad
outsb
cmp
cmp
xchg
imul
pop
bound
mov
test
mov
cmpsl
xchg
loopne
sbb
dec
test
nop
sbb
int
pop
xchg
out
adc
imul
and
mov
int
into
push
movsl
js
push
fidivrs
dec
repz
ficoml
lods
or
je
xchg
adc
pop
ds
aad
lods
xchg
in
mov
jns
call
mov
ss
addr16
adc
pop
push
lods
inc
add
sbb
mov
mov
in
or
fnstenv
loop
daa
out
mov
xchg
nop
push
add
in
outsl
clc
aaa
or
sub
mov
ljmp
dec
push
sarl
mov
andnps
iret
mov
insl
push
cmpsb
into
push
jl
push
push
roll
lods
pop
xor
loop
mov
nop
jl
jo
adc
mov
adc
inc
aad
cli
sbbl
lock
push
test
inc
pop
pop
gs
adc
mov
mov
stc
push
nop
bound
stos
xor
jl
sub
mov
es
jl
xchg
in
adc
cmp
sti
push
and
inc
mov
les
rorl
jno
mov
shlb
scas
xchg
in
aaa
xchg
inc
lret
mov
mov
push
mov
test
gs
cmpsl
jmp
push
out
dec
sbb
and
push
lds
lea
and
xchg
out
leave
dec
mov
mov
loope
sti
aas
das
div
jmp
push
or
rorl
pop
mov
js
fstpl
int3
pop
jae
adc
jmp
inc
push
add
outsl
lret
ficoml
or
cmpsb
bswap
inc
and
lcall
jno
ja
test
push
push
test
sub
push
adc
aam
cmpl
loope
pop
dec
ss
test
mov
fmulp
or
daa
shrl
ret
ss
adc
sub
pmaxub
repz
testb
jae
add
mov
movsl
pop
addr16
test
inc
inc
xlat
cli
sbb
repnz
loopne
xchg
movsb
flds
shlb
sub
cwtl
loope
fsubrs
mov
sbb
imul
mov
idivb
shrb
repnz
push
data16
loop
mov
fucomp
inc
inc
bound
sbb
clc
jle
repnz
mov
dec
push
xor
aad
mov
fwait
xor
jbe
mov
pop
xchg
outsb
daa
stos
lcall
jb
or
test
or
je
add
xlat
cmpsb
pop
add
jg
pop
push
cmp
lahf
ret
pop
dec
adc
mov
faddp
add
dec
mov
mov
mov
sbb
sahf
vpackssdw
mov
pop
scas
test
cmp
xor
jne
rorl
mov
repnz
clc
xchg
inc
push
out
inc
aad
stc
imul
and
sarb
push
lahf
push
in
test
xor
pop
dec
enter
clc
pop
xchg
or
icebp
xor
xor
pop
repnz
dec
adc
sbb
fidivrl
rcll
cli
loopne
mov
jno
mov
outsb
or
dec
and
cltd
jp
icebp
pop
and
addl
imul
or
bswap
mov
add
xchg
add
dec
mov
sub
addr16
in
mov
scas
push
cmp
shlb
fs
pop
lods
pop
jmp
jnp
mov
xchg
and
inc
cld
xchg
cmp
mov
mov
mov
and
push
push
mov
sbb
orl
push
stos
jle
gs
pushf
pop
xor
cmpsl
pop
lods
mov
daa
adc
stos
ja
adc
sbb
add
outsb
add
outsb
faddl
sbb
frstor
push
pop
cwtl
xor
icebp
xor
push
xor
pop
dec
test
neg
imul
jb
test
insl
and
or
xchg
inc
mov
out
and
adc
pusha
sbb
jne
btr
nop
xor
rclb
jb
outsb
icebp
xchg
hlt
clc
arpl
out
pop
sub
add
jo
sbb
mov
insl
pop
mov
in
xor
cmp
cmp
scas
leave
pop
and
clc
into
pop
mov
aad
inc
xor
cmpsb
jae
or
lret
push
adc
movsb
lock
cmp
aas
pop
movsb
pusha
test
mov
lcall
insl
add
pushf
jae
rcll
lods
outsl
mov
fs
or
and
jl
outsl
scas
in
cmp
mov
cmp
shrl
jge
jecxz
sub
cli
xor
loopne
dec
outsb
enter
sbb
testl
jnp
inc
fldl2t
or
nop
mov
add
push
in
andps
push
cmpsb
pop
addr16
fs
sub
lea
mov
test
mov
or
repnz
loope
sub
ret
push
push
mov
pop
cmpsb
ret
test
cmp
lods
adc
imul
das
in
pop
repnz
out
sbb
sarl
fwait
lcall
mov
adc
xor
orl
int3
mov
dec
arpl
icebp
lods
stos
push
scas
call
mov
arpl
fisubrs
and
sub
lcall
jle
adc
ja
cli
or
mov
ficoml
in
pop
aad
movsb
xchg
push
lret
jmp
push
out
push
daa
les
dec
xchg
es
xchg
cmp
subl
sbb
daa
jmp
pop
test
xchg
adc
xchg
jb
subl
sub
incl
mov
sub
lcall
stos
lea
roll
inc
mov
jge
outsb
cmp
jecxz
xor
shll
jp
sti
aas
repz
sub
add
dec
insl
leave
rorl
pushf
scas
es
mov
gs
in
or
lods
test
testl
outsb
jnp
andb
sub
xor
pop
jbe
push
jge
sbb
fwait
ret
inc
cs
adc
dec
lcall
shlb
lret
adc
pop
jg
stos
and
fstl
sbb
xor
repz
ja
push
cwtl
outsl
push
push
testb
stos
mov
unpcklps
imul
mov
jo
sbb
fisttps
addb
lea
ljmp
popf
les
jae
std
lret
mov
xchg
jge
es
mov
cmp
pop
pushf
sbb
add
dec
sti
icebp
mov
sbb
in
in
jae
loopne
repz
hlt
adc
stos
add
mov
fldl
jno
jo
cmp
pop
inc
hlt
and
cli
mov
xor
out
imul
pushf
leave
out
adc
lods
sbb
divb
fisttpl
insb
mov
sub
push
arpl
pop
das
mov
out
sub
loope
in
lahf
call
int3
test
addr16
test
pop
jae
fildll
aaa
test
es
jle
in
hlt
outsb
sub
pop
aas
xlat
push
stos
inc
or
into
inc
cmpsl
jo
dec
loope
iret
inc
addr16
es
lret
adc
test
les
test
sbb
jae
xchg
movsl
mov
jo
mov
cld
pop
in
fidivs
fmull
and
in
mov
pop
test
adc
int
sub
mov
out
sti
sub
or
pop
pop
test
aam
stos
rclb
cs
xchg
inc
ljmp
mov
adc
out
enter
imul
xor
gs
cwtl
cmp
test
and
aad
push
test
push
dec
movsb
add
ja
icebp
movnti
xchg
in
inc
inc
add
dec
or
mov
xchg
stos
fs
mov
test
and
cmp
dec
push
xchg
push
push
or
cmp
fwait
dec
stc
stos
call
xor
jns
mov
jl
sub
ret
std
adc
mov
add
pop
lcall
sub
sub
xor
shlb
testl
aaa
fmul
sbb
adc
mov
inc
jmp
or
and
or
test
cli
mov
ror
push
cmp
jle
cmp
pop
aam
pop
pusha
and
or
adc
dec
mov
or
out
and
xchg
mov
push
jmpw
dec
push
inc
pop
pop
rcr
or
repnz
mov
fstl
mov
test
add
jmp
mov
jg
insb
or
out
push
jge
popf
cwtl
sbb
mov
jecxz
mov
jle
sub
jnp
push
imul
xlat
mov
mov
das
mov
inc
stos
test
mov
push
and
outsb
test
dec
push
sbb
outsb
pop
das
xchg
adc
dec
pop
xor
mov
xor
push
jb
cmp
jmp
test
cli
fdivl
ret
hlt
mov
roll
pop
fcom
shr
fisubl
xchg
das
pusha
pushf
fldcw
std
fsubrs
sub
je
scas
subl
js
mov
sbb
std
lret
adc
mov
nop
mov
mov
sub
je
sub
pop
lret
push
and
rclb
mov
ficompl
xor
or
mov
stc
mov
stc
dec
sbb
sbb
ss
and
fidivl
push
hlt
out
xor
lods
or
xchg
sbb
mov
pop
lods
loope
sbb
dec
sbb
jno
jb
mov
adc
xchg
pop
jae
rcrb
imul
and
push
das
aas
lods
imul
fcomi
jns
jbe
sbb
andl
push
sub
es
mov
mov
mov
mov
lahf
mov
out
test
cmpsb
pop
add
sub
sahf
push
lret
mov
mov
fwait
dec
add
mov
ror
sbb
sub
jmp
sbb
add
ret
cmp
inc
and
aas
mov
insb
sbb
mov
mov
aas
push
inc
mov
int
adc
addr16
stc
ficoml
mov
add
bound
cmc
cmpsl
adc
jge
inc
pop
mov
jmp
adc
add
lds
ss
cmp
movsb
loopne
push
adc
jae
adcb
mov
pop
dec
mov
jmp
adc
rol
and
aas
mov
rorl
test
int3
jae,pn
iret
adc
xchg
scas
ja
or
shlb
push
jg
and
ljmp
push
cltd
arpl
sahf
lret
outsb
stos
mov
push
sbb
mov
xchg
scas
pushf
dec
push
les
cwtl
outsl
in
popf
pushf
jne
push
psubsb
dec
and
mov
jns
push
lret
inc
pop
or
scas
cmp
jp
mov
or
sahf
jge
add
cmp
sarb
scas
push
cwtl
xor
ficoms
dec
rorb
cmpl
addl
mov
inc
aaa
aas
dec
xor
cmp
sub
shlb
pop
daa
xor
mov
add
mov
fisubrl
test
xchg
or
dec
or
adc
pop
lds
jno
stc
xchg
sbb
hlt
push
adc
or
xor
cld
cmp
fsub
bnd
repz
rorb
stos
sbb
aam
out
inc
pushf
push
cltd
arpl
insb
cmpl
sub
add
dec
sub
fmuls
inc
leave
xchg
addl
out
loopne
out
jg
inc
adc
cmc
mov
or
jmp
pop
mov
xchg
out
inc
pop
push
xor
add
repnz
cmc
arpl
sub
test
fstpt
gs
mov
fsubrs
call
in
adc
cmpsl
push
xchg
push
sarl
xchg
inc
popf
mov
clc
mov
mov
pop
push
adc
and
mov
push
push
sub
or
scas
jnp
push
fwait
xorb
subl
and
in
bound
int
insb
jb
jbe
cmp
mov
sub
test
scas
aam
imul
pop
cmpsb
iret
sbb
imul
dec
dec
test
roll
lret
jge
popa
cmp
dec
dec
cmc
aaa
xchg
jp
mov
test
inc
loopne
push
hlt
ret
xor
adc
cmp
lods
cmc
push
sub
pop
fldt
mov
rcr
sub
jno
jmp
stc
xchg
loop
dec
mov
jl
xchg
or
or
sub
lret
stos
mov
mov
and
jp
outsb
push
lods
imul
mov
imul
add
loopne
jno
push
shrb
jno
cld
mov
jbe
inc
or
ja
mov
jbe
jg
cli
push
fdivl
ret
lods
push
cltd
cmc
jae
sub
repnz
push
sub
add
lea
sbbl
adc
js
push
lret
fsubl
cld
cmp
xor
dec
cmp
imul
xchg
mov
call
mov
imull
pusha
imul
jl
test
push
mov
cmp
jmp
push
inc
jne
scas
xchg
aas
dec
pop
mov
inc
clc
push
pop
loopne
jmp
pop
xchg
pop
lret
int
mov
xchg
push
cmp
fs
inc
clc
pop
lcall
aad
jno
movsl
outsl
jbe
inc
loope
push
lds
aaa
adc
add
cmp
mov
inc
rcrl
fldl
in
lahf
fdivs
lods
jecxz
jg
jmp
dec
inc
pop
jno
dec
shr
sub
mov
push
mov
adc
bound
lcall
pop
cli
xchg
push
jbe
stc
push
pop
out
add
ds
and
add
insl
or
std
mov
fistpll
inc
rclb
sbb
lods
dec
mov
sbb
xchg
pop
testb
je
adc
outsb
dec
jmp
jbe
xchg
jno
adc
push
jno
cmp
fcoms
bound
sbb
mov
mov
pusha
sbb
sub
and
mov
sub
mov
ret
in
gs
fsubrl
out
pop
lds
push
icebp
dec
inc
fs
scas
sub
cltd
mov
push
mov
fcoms
popa
mov
bound
fiaddl
fidivs
add
jg
xchg
negb
sbbb
and
or
xchg
adc
jns
dec
pop
cltd
jmp
sub
push
cmp
and
cld
jne
push
xlat
pop
mov
aas
pop
and
add
aas
ss
pop
clc
inc
scas
sub
pop
decl
repnz
pop
out
mov
mov
jnp
or
xor
or
xchg
ret
lods
fstps
popa
jecxz
pop
imull
movsl
or
imul
ljmp
in
xor
out
add
lods
cmpsb
andb
cld
pop
pop
jmp
fcomp
and
pop
pop
fwait
sub
or
jl
pop
aaa
scas
push
inc
rcrl
jg
pop
ds
jl
xchg
js
fiadds
cs
data16
pop
test
cwtl
cs
test
dec
ret
inc
mov
iret
fsubrs
xor
gs
daa
adc
sbb
xor
push
loopne
push
rcrb
or
cli
ja
xor
loopne
repnz
and
movsb
es
out
pop
daa
scas
hlt
jg
dec
cmp
xchg
or
popf
arpl
out
fs
xor
jecxz
inc
in
aas
rol
jle
jb
and
addr16
lahf
cmc
cmp
dec
testb
adc
push
dec
sub
ja
cmp
or
mov
jecxz
and
push
mov
nop
xor
push
mov
jne
pop
lods
mov
xor
rcrl
stos
ret
ljmp
mov
ss
adc
movsb
mov
pop
or
jbe
jbe
push
push
xchg
xor
inc
rol
jge
fldl
xchg
ss
sub
mov
jl
inc
insl
cmp
push
adc
sub
sub
daa
jl
ret
mov
and
into
loopne
mov
jecxz
movsl
jecxz
jb
movsb
xor
mov
dec
loop
int3
test
inc
mov
inc
shrb
test
insb
loop
icebp
arpl
scas
fiadds
push
push
mov
and
icebp
shr
xor
imul
call
sbb
mov
fsub
or
mov
loope
push
lret
cs
mov
in
pop
xchg
into
inc
dec
cmp
or
dec
loop
add
push
push
inc
imul
jae
sbb
fidivs
pop
cmp
add
pop
pusha
ret
test
movl
test
in
adc
sub
hlt
idivb
mov
out
jle
insl
test
pushf
jb
mov
cmp
imul
lea
mov
mov
and
loop
aam
aaa
jp
out
and
jne
ja
jle
push
mov
stos
mov
cmp
pusha
xor
les
shlb
gs
mov
xor
fsubs
gs
into
inc
cmpsl
aaa
sub
fildll
xlat
dec
sahf
stos
int
sub
sbb
mov
ret
cwtl
jp
adc
mov
int
arpl
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
hlt
mov
xlat
jne
mov
test
sbb
or
aas
sbb
mov
mov
fistl
cmp
add
sbb
xor
xchg
bound
int
dec
or
lahf
push
fmuls
addr16
data16
in
popf
daa
inc
or
orl
loopne
insl
test
lds
or
out
sbb
sub
nop
aam
in
inc
dec
push
mov
out
test
pop
mov
bound
iret
jne
jo
fisttpll
popa
shrb
loopne
lock
or
jne
outsb
xchg
jmp
lcall
jp
sbb
jmp
sahf
or
stos
inc
ja
inc
mov
aaa
jno
xchg
mov
lock
xchg
fadd
mov
pusha
test
cmc
das
fldenv
and
ficoms
pop
sbb
xchg
fldl
pop
xor
dec
cltd
sbb
inc
ja
xor
lea
mov
cmp
insb
loope
xchg
adc
inc
pop
xchg
call
cmp
or
andl
add
xorb
dec
push
or
fidivrs
xchg
fidivrs
je
cmp
and
je
cmp
add
mov
loop
pop
xor
sbb
cmp
push
test
mov
adc
dec
push
and
cld
stc
mov
pop
test
sbb
iret
movsb
fsubrl
adc
mov
dec
adc
pop
add
dec
les
sbb
int
imul
aad
rcrb
mov
jge
shlb
ret
inc
repnz
cld
std
inc
pop
int
scas
loop
jge
repnz
mov
push
lahf
mov
sbb
in
repz
fcomps
xchg
xchg
xor
aam
test
aaa
orb
sbb
jo
jmp
jb
mov
mov
cwtl
xchg
cmpl
jo
imul
jmp
insb
jecxz
sub
pusha
fwait
int3
mov
jmp
repz
stos
lods
adc
ss
pop
dec
addb
cmp
cli
mov
fmuls
fwait
popf
xlat
daa
mov
adc
pusha
out
jae
mov
mov
jo
repz
pop
aas
hlt
sbb
pop
fldl
stos
insb
fisttps
insl
std
dec
cmp
jo
andb
outsb
dec
int3
xchg
xchg
mov
inc
fsubs
into
enter
mov
lret
out
aam
andb
mov
shl
sbb
lret
pop
xor
jmp
sbb
ret
mov
inc
test
pop
cmp
adc
pop
jmp
out
clc
stos
dec
dec
cmpsb
mov
rcrl
mov
xchg
add
or
jecxz
ljmp
or
jo
incl
enter
lahf
jae
in
mov
xor
neg
jl
dec
loope
mov
xor
out
in
aam
xchg
jae
or
fstpl
ficompl
push
xor
icebp
in
dec
pop
imul
add
repz
fwait
xor
ss
rcrb
cmc
cmc
mov
repz
xor
stc
ss
add
jecxz
xchg
sub
mov
stc
cwtl
repnz
in
cmpsl
mov
test
lcall
adcl
push
push
shlb
scas
movsl
xor
rcr
dec
clc
js
or
or
and
roll
popfw
xchg
mov
mov
inc
fs
inc
sbbl
push
inc
in
pusha
sahf
push
shll
sub
push
cli
mov
cmp
sbb
fnsave
movsb
stos
cmp
pop
mov
in
jecxz
xchg
out
dec
sub
outsl
xor
shrl
daa
mov
stos
std
insl
or
call
mov
jp
hlt
scas
mov
or
dec
inc
push
adc
outsb
xchg
addl
sbb
hlt
in
call
cmp
stc
and
jb
mov
cwtl
dec
cmpsb
fs
mov
movsl
and
push
and
push
divb
mov
data16
roll
fwait
shll
aas
sbb
sahf
popf
xchg
adc
stos
and
jmp
loope
and
xor
jge
fcomi
les
cwtl
add
movb
dec
sbb
daa
inc
jl
mov
inc
sbb
mov
lahf
push
sbb
mov
ror
stc
and
push
mov
push
pop
mov
push
fidivs
xchg
add
pop
fildll
or
mov
in
data16
f2xm1
rclb
mov
pop
mov
dec
sub
jmp
push
outsl
call
int
movsl
mov
aad
test
xchg
push
mov
int
jg
sub
inc
in
sarl
aaa
inc
push
pop
fmul
mov
into
sbb
sub
repz
sahf
inc
pop
aam
inc
and
xchg
xchg
sbbb
hlt
loope
or
push
xchg
pop
jle
aam
ds
jns
push
dec
faddl
ja
fists
inc
js
sub
in
mov
daa
sub
or
jecxz
adc
in
push
movsb
or
pop
push
xchg
pop
push
fs
cmpsl
pop
mov
pop
jp
xor
jnp
or
sbb
dec
into
cwtl
jae
sub
cmp
sbb
popa
or
inc
and
nop
pop
add
or
frstor
cmp
cmp
mov
push
dec
jnp
or
jno
push
lret
cmp
pushf
cmpsl
pop
and
ds
jecxz
sbb
mov
pusha
scas
inc
call
xchg
mov
stos
jp
cmp
leave
adc
cld
ss
push
push
dec
popf
pop
sub
shlb
xlat
pop
sbb
sbb
mov
test
mov
scas
cmpsb
ds
lea
mov
leave
jno
inc
jo
int
sub
mov
daa
mulb
cmp
ror
cmp
iret
fadd
push
cmpsb
cmp
mov
and
push
jae
mov
jae
sti
jl
xor
lock
and
add
sub
call
je
pop
jne
mov
aaa
cmpsb
icebp
fsubrs
add
mov
pop
inc
scas
inc
lahf
je
push
push
popf
adc
mov
xchg
stos
xchg
cmp
adc
xlat
mov
lret
inc
and
sbb
xchg
and
test
and
xchg
xor
jge
sbb
jg
sub
shl
pop
xchg
xlat
cltd
out
xchg
inc
mov
icebp
test
push
and
and
stc
xlat
jae
mov
ds
mov
enter
jne
mov
jmp
mov
push
rclb
rorb
push
out
iret
dec
pop
mov
aad
fcmovne
lds
loop
push
daa
fbstp
pop
dec
jg
push
fimuls
cmpsl
inc
cmp
out
mov
mov
dec
dec
mov
inc
add
mov
imul
cltd
sbb
xchg
mov
clc
cmpsb
lcall
sbb
enter
test
adc
mov
daa
movl
jmp
pop
xor
dec
mov
and
inc
mov
sub
add
ljmp
pop
in
xor
inc
adc
subb
push
shlb
sbb
mov
fsubr
mov
mov
std
push
aad
add
mov
gs
xchg
cld
imul
xor
dec
je
jne
lock
adc
orl
lret
popa
fildll
cwtl
mov
sahf
hlt
sbb
push
enter
dec
jns
xchg
cs
xchg
inc
push
daa
popf
ret
xor
lock
or
jno
fsubrl
inc
shrb
fcoml
mov
push
mov
inc
bt
xchg
xchg
inc
stc
jnp
pop
jae
lcall
jecxz
es
nop
mov
popa
test
xchg
add
jmp
into
mov
in
push
pop
cmp
and
dec
mov
jae
insb
mov
cwtl
sbb
mov
lods
addb
scas
cmc
pusha
daa
loopne
inc
sub
mov
enter
pop
pop
sahf
std
mov
add
arpl
inc
mov
jbe
xor
push
sub
mov
std
or
addr16
push
bound
dec
int3
cltd
sub
cwtl
push
add
push
push
aam
mov
push
sbb
orl
faddp
aas
cmpsl
mov
lcall
dec
xorb
dec
jno
jnp
pushf
dec
xchg
xor
into
adc
nop
iret
outsl
pop
dec
mov
dec
popa
jge
int
xchg
or
pcmpeqw
mov
inc
sub
or
xchg
jg
aad
aam
pop
cmc
ret
or
or
pop
dec
cld
pusha
sbb
push
jo
dec
pop
ss
aas
inc
mov
jl
pop
pop
jge
push
mov
xlat
xor
mov
xor
sti
sbbb
xor
stos
and
sti
dec
pop
mov
xor
mov
pop
fldt
inc
cmp
bound
nop
sbb
pop
cwtl
push
lcall
cmpsl
mov
test
out
and
aaa
adc
cmc
sub
pop
shll
int3
mov
fildll
test
outsl
sti
mov
xchg
cwtl
repz
mov
mov
sub
lcall
jo
out
icebp
adc
in
fwait
mov
les
mov
jl
icebp
sub
push
stos
std
in
sub
decb
std
out
sbb
negl
jmp
imul
cwtl
rorb
lods
ret
stos
fbld
and
movsl
repnz
mov
sub
cmp
inc
shr
imul
cmp
inc
dec
xorl
cli
mov
adc
xchg
cmp
sbb
jl
daa
pop
cmc
out
out
outsl
gs
pop
dec
lock
mov
pop
shlb
mov
push
or
mov
pop
mov
xchg
mov
xchg
add
out
dec
inc
test
cwtl
arpl
fwait
imul
mov
or
lea
fcomps
jb
xchg
sub
inc
mov
dec
or
dec
hlt
out
mov
xchg
mov
lock
lret
jp
and
push
or
lock
push
in
pop
ret
fidivrl
jbe
lret
div
or
dec
adc
leave
add
pop
hlt
jb
pop
adc
pop
mov
mov
jae
jb
push
xor
sub
pop
aas
fistps
test
popf
pop
pop
jbe
push
mov
ss
pop
push
gs
or
outsl
test
pop
mov
ds
notb
dec
insl
cli
fildll
hlt
fcomps
ljmp
push
fwait
mov
mov
in
xchg
test
mov
and
sub
dec
xor
mov
sub
mov
rorl
add
scas
lds
mov
mov
pop
and
inc
sub
cmp
mov
cmp
rorb
ja
dec
ds
inc
xchg
cwtl
repz
add
lods
push
push
scas
cmpsb
jbe
je
fiadds
add
or
testl
js
outsb
xor
aas
or
xor
mov
jge
cld
pop
jg
mov
jae
jns
mov
pop
mov
test
inc
mov
mov
or
aam
xor
imul
clc
or
lea
into
arpl
test
dec
push
xor
ret
mov
mov
push
sub
mov
jno,pt
xor
push
push
test
call
aad
mov
push
sbb
jo
inc
insl
mov
notl
mov
inc
test
add
sahf
sub
xor
data16
orb
xchg
push
push
pop
je
push
mov
leave
xchg
outsb
dec
mov
mov
xchg
add
xchg
sti
cmp
mov
in
adc
ss
arpl
das
cmp
aam
mov
cltd
sub
sub
test
ret
mov
dec
bound
jns
mov
xchg
push
lret
mov
jmp
push
int
cs
les
jo
adcb
and
jg
ljmp
lret
add
scas
mov
sub
fdivs
push
or
daa
cmp
add
aad
out
push
into
addr16
sbb
stc
in
adc
scas
insl
mov
ds
dec
jns
xlat
icebp
fnstsw
jge
aad
cmc
pop
lret
add
mov
es
cmpsl
sub
ljmp
out
xchg
mov
mov
mov
stos
xor
test
repz
in
movsl
mov
sbb
sbb
dec
lahf
fucomi
pop
aaa
pop
push
inc
lret
inc
jecxz
fsubrl
jp
test
add
mov
inc
into
je
fmull
jg
adc
out
mov
xor
shrl
xchg
add
mov
mov
push
cmp
das
or
mov
sbb
jmp
mov
cmp
outsl
mov
nop
or
shrb
insb
stos
pushf
jle
insb
dec
pop
out
push
mov
xor
pop
cmp
cmp
adc
add
sub
inc
bound
fadds
jo
movsl
cs
fucom
mov
pop
in
sbb
cltd
cmpsl
xchg
mov
lahf
inc
stos
cli
mov
and
orl
xlat
int
xchg
add
mov
adc
mov
add
lea
cmp
nop
and
mov
adc
test
lds
mov
jl
popf
adc
insb
pop
adc
mov
lret
xor
ljmp
lahf
enter
js
ret
mov
clc
sbb
sti
cmp
jl
daa
lcall
mov
aam
out
mov
xor
js
add
mov
cmp
push
jmp
and
xchg
int3
pusha
or
jge
mov
and
push
mov
cmp
adc
dec
jle
jno
and
into
inc
scas
in
adc
shrl
in
aas
push
mov
fistpl
popf
testl
ljmp
mov
or
bnd
or
or
hlt
push
negl
push
inc
ja
sbb
push
xchg
mov
pop
jecxz
add
sub
adc
dec
sti
and
jno
sub
adc
dec
test
jp
outsb
cli
popf
test
add
mov
mov
add
repnz
jecxz
scas
lahf
fs
xchg
roll
lods
ds
ffreep
rolb
out
lret
lahf
inc
mov
addb
out
cmc
lock
xor
sbb
aad
rclb
xchg
adc
inc
push
and
mov
xchg
shrl
inc
inc
push
fs
cmp
xchg
enter
jge
int
and
xchg
shrb
jecxz
mov
jbe
sbb
in
testb
pop
ja
jbe,pn
das
push
popa
cmp
ds
dec
push
sahf
xchg
add
stos
mov
xor
cltd
lods
push
inc
lret
sti
imul
mov
sbb
add
sbb
inc
push
xor
and
dec
and
pop
minps
cmp
cwtl
or
fnstenv
loop
xor
push
jb
fmull
jl
imul
xchg
or
in
pop
mov
pushf
int
daa
es
cmp
cmc
inc
pushf
shlb
ss
add
jmp
mov
repnz
test
stos
xchg
mov
inc
ljmp
daa
jne
lahf
inc
mov
filds
lock
xchg
clc
jmp
enter
jns
bound
pop
jo
int3
les
add
pop
daa
xor
in
mov
js
loop
inc
mov
mov
inc
and
aam
inc
pop
mov
cmp
pop
ss
dec
and
xor
jmp
mov
movsb
sub
adc
iret
xlat
pop
leave
pop
cmp
mov
andb
inc
cmovbe
jg
pushf
or
mov
test
inc
in
push
scas
fisubs
dec
jno
cmp
xor
cmp
fiadds
insb
mov
cmp
pop
push
adc
xchg
aaa
jo
loop
mov
test
out
and
iret
pop
add
push
fistpll
into
mov
xchg
in
cs
test
data16
mov
pop
xlat
rcr
mov
xchg
mov
jns
xor
jge
sbb
mov
jle
popa
mov
mov
mov
mov
test
lds
push
fmul
push
push
movsl
sub
and
in
dec
outsb
jl
mov
fldenv
jmp
push
imul
out
jae
test
mov
jmp
pop
shlb
adc
add
and
push
push
pop
sub
jl
xor
inc
inc
lea
aad
xor
pop
mov
iret
es
mov
xchg
cli
insl
lret
cmc
das
pop
mov
mov
jmp
lahf
inc
and
out
call
cmpsl
into
pop
lret
shlb
and
cltd
cmpsl
jl
outsl
ss
repz
xchg
movsb
jo
fwait
xor
arpl
fdivrl
clc
mov
ja
add
fisttpll
fisubl
adc
cmp
lcall
clc
and
arpl
addr16
and
sub
addr16
dec
mov
push
push
xchg
fcmove
repz
inc
in
ljmp
mov
shll
mov
jo
mov
fdivp
fdivrs
sbb
ja
mov
cmp
and
insb
ss
add
aad
cmp
mov
mov
inc
mov
jae
and
adc
lret
mov
cmp
jg
mov
icebp
pusha
adc
in
jae
add
ficompl
jge
inc
sub
inc
std
or
insb
xor
std
rcll
push
pusha
pop
mov
stos
cltd
pop
jnp
xchg
out
cmpsb
scas
sbb
push
xchg
inc
shlb
xor
mov
adc
add
adc
mov
push
jmp
sub
movsb
add
dec
xchg
xorl
prefetch
cmc
int3
xchg
xor
add
jb
inc
or
sbb
jbe
push
mov
out
insl
sub
pop
stos
xchg
sarl
lcall
xor
and
leave
sub
mov
sbb
mov
and
push
fcmovne
lds
leave
cmpsb
jp
xchg
rcl
and
aam
repz
mov
std
mov
movsb
rcl
fs
push
mov
je
xchg
pop
dec
push
pushw
fwait
sahf
in
inc
adc
sub
pop
int3
cmp
popa
in
sbb
mov
dec
dec
pop
fisubrl
test
xchg
pop
cwtl
sbb
push
fdivs
inc
dec
scas
fbstp
dec
cmp
ljmp
mov
cmpxchg
rcll
mov
rclb
mov
fstpl
jp,pn
and
sub
aaa
out
test
mov
pop
sub
shll
pop
jg
jnp
subb
aam
xchg
xchg
dec
fwait
pop
int3
inc
lret
xor
dec
mov
nop
shlb
fcoml
mov
xchg
sbb
push
hlt
or
rcr
in
jns
mov
mov
test
sub
int
icebp
mov
aam
hlt
xchg
das
fstpt
rclb
adc
sub
sub
shl
sub
jmp
das
out
sbb
or
mov
ret
loopne
xor
pop
xchg
sar
xchg
adc
shl
xor
flds
dec
orl
push
sub
rolb
movsl
dec
ljmp
xorb
std
pop
cmp
inc
sarl
xchg
mov
mov
cmpsl
xchg
or
ja
and
add
mov
cld
jp
adc
dec
adc
sahf
jnp
cld
xor
fisubrs
sbb
sub
pop
or
call
sub
mov
gs
push
out
fimull
jb
lahf
mov
push
or
adc
sbb
ljmp
arpl
into
ja
push
jmp
rorb
mov
nop
xor
ljmp
mov
les
or
inc
push
insl
es
je
sarl
pop
js
cli
loop
xchg
xchg
ror
ret
dec
add
out
ss
adc
cmp
dec
and
cmp
push
inc
dec
mov
out
mov
xchg
test
ret
xchg
mov
pop
mov
stos
mov
xchg
mov
pop
bound
pop
ret
jmp
daa
jns
inc
sub
test
loop
or
mov
icebp
and
iret
pop
mov
jl
lahf
fisubs
stc
addr16
int
je
push
imul
mov
lock
clc
fadds
imul
pop
icebp
fs
mov
aam
loopne
ss
js
mov
cmpsl
sbb
out
addr16
mov
pusha
mov
imul
fcomp
pop
cwtl
dec
imul
mov
daa
test
lods
mov
xchg
or
sar
mov
jne
shr
push
pop
call
loop
repnz
cld
inc
repz
mov
cmp
imulb
aas
adc
jbe
and
inc
push
mov
cld
mov
in
cltd
dec
xchg
pop
sbb
mov
adc
pop
es
mov
and
xchg
leave
sub
ret
push
push
add
into
cmpsb
stos
dec
out
dec
iret
repnz
dec
fnstcw
mov
xchg
and
mov
fidivl
dec
cltd
jne
jns
dec
sbb
cmc
iret
push
sub
mov
pop
and
jmp
jne
adc
lods
push
inc
out
test
subl
cmpsb
inc
sbb
cwtl
mov
dec
js
cs
adc
pop
fcoms
push
ljmp
loopne
push
lcall
fsts
mov
mov
lret
push
mov
mov
cmp
adc
into
ljmp
mov
inc
imul
cmp
or
pop
sbb
test
int3
repz
or
lret
sub
pshufw
jae
inc
aas
pop
push
dec
cltd
add
shrb
add
je
inc
xchg
push
dec
mov
adc
mov
lcall
leave
jae
sbb
adc
and
inc
hlt
xchg
sub
insb
dec
popa
jge
inc
jne
cwtl
aad
inc
es
xor
jo
or
sahf
in
push
sbb
test
fcompl
fisubrl
andb
lea
mov
or
sahf
and
push
mov
lods
adc
xor
sbb
push
shrl
stos
iret
insb
in
push
cs
pop
jl
popf
xchg
dec
jns
pusha
add
outsb
ljmp
mov
push
imul
popa
mov
int
aad
dec
int3
jg
inc
lret
mov
test
cmp
cwtl
dec
mov
xchg
ss
out
and
add
mov
int3
cmpsl
mov
sbb
mov
and
fisubrl
fucom
dec
pop
stos
and
xchg
imul
push
cmc
pop
icebp
jle
cmp
imul
pop
popa
cmc
das
imul
mov
xchg
inc
mov
cmp
aas
pop
mov
push
inc
subl
shl
mov
dec
repz
inc
adc
fistpll
mov
adc
cwtl
push
sub
xor
sarb
ret
jae
out
jge
push
mov
repnz
fnstcw
jp
or
xchg
xchg
and
xchg
int3
imul
push
xor
arpl
mov
sbb
and
cmpsb
punpckhbw
imul
or
mov
or
sub
mov
adc
cmc
add
push
mov
in
mov
mov
mov
pushf
lcall
mov
icebp
outsl
arpl
out
or
mov
pushf
inc
fimull
int3
movsb
mov
hlt
mov
scas
nop
mov
xor
xchg
mov
or
push
stos
xchg
ljmp
xchg
fs
jge
std
ja
inc
xor
loopne
pop
imul
nop
movd
sub
pop
out
xor
sub
add
dec
mov
insl
test
nop
call
dec
ds
mov
jecxz
pop
mov
xchg
jge
adc
outsb
jno
add
mov
ja
lcall
sub
push
adc
mov
add
add
and
cmp
lret
hlt
push
rcrb
add
orl
int3
shrl
mov
mov
repnz
fcmovne
test
xchg
shrb
cmpb
je
add
das
adc
ds
insl
mov
sub
mov
or
inc
lret
adc
arpl
jmp
dec
and
jp
call
fwait
sbbb
jg
mov
jo
dec
loop
mov
aam
pop
mov
sub
mov
and
icebp
fidivl
xchg
and
pop
fmull
push
or
cli
xchg
push
lock
stos
aaa
in
dec
inc
fnstsw
int3
jecxz
sahf
aaa
stos
sub
dec
fnstcw
int3
pop
dec
mov
jge
pop
aaa
pop
mov
jo
push
push
mov
or
lcall
sub
sarb
imul
mov
cmp
sub
dec
xor
pusha
mov
pop
pop
dec
je
sbbl
pop
pop
cmpsl
mov
adc
pop
sub
shrb
leave
cmp
inc
sbb
and
xchg
pop
xor
xor
fs
or
lcall
jnp
mov
cld
dec
orb
cmp
and
sub
faddl
mov
cwtl
outsb
pop
jg
mov
sbb
repz
inc
repz
dec
push
test
xorb
scas
in
xor
test
divl
pop
xchg
mov
popa
mov
push
push
mov
lret
xchg
jg
mov
shl
xor
les
push
push
xor
lea
push
inc
sub
inc
out
jl
mov
pop
adc
inc
cli
cmpsl
jnp
cmpsl
bound
lods
jmp
xchg
xor
mov
fwait
scas
xor
aam
stc
fildl
xlat
decl
dec
sahf
inc
pop
mov
jl
sbb
mov
clc
pop
fcmovbe
std
fmull
sub
add
sub
out
mov
repz
cmp
dec
les
stc
dec
pop
ret
inc
rcrl
test
add
mov
out
inc
dec
mov
jb
mov
inc
nop
jl
mov
sbb
push
push
jmp
fimull
xchg
or
push
clc
pop
in
cwtl
pushf
jb
push
push
push
xor
test
les
xchg
and
cmp
pop
xor
jo
outsl
decl
pop
add
mov
jne
lods
mov
push
ljmp
jg
pop
lods
dec
scas
mov
ret
les
dec
sbb
inc
push
ja
rorl
in
cmp
imul
mov
xchg
mov
dec
sbb
daa
in
xchg
inc
push
insl
lock
sub
dec
or
enter
mov
ss
aad
xor
movsl
stos
dec
xor
adc
sahf
or
hlt
roll
jg
xchg
in
sub
add
xor
jl
mov
stos
pop
xor
push
imul
inc
cmc
dec
in
test
sahf
pop
outsl
pop
sub
sbb
pushf
xchg
aaa
movsl
mov
dec
adc
ret
pop
inc
cmp
inc
dec
sbb
adc
mov
mov
xchg
cs
xor
mov
mov
das
movsb
push
dec
imul
int3
dec
arpl
add
add
xor
jmp
sub
movsl
inc
mov
mov
enter
jp
pop
xor
jmp
int3
rorl
mov
xchg
repz
push
mov
xor
xor
repz
shrl
xchg
mov
mov
movsl
test
add
add
sub
mov
push
into
scas
cltd
rorl
mov
fstps
movsb
jp
jne
pop
cwtl
in
pop
jb
lret
push
lcall
in
xchg
cwtl
cmp
lret
jnp
inc
sub
push
xlat
xchg
xor
xchg
lock
mov
daa
out
or
cltd
dec
xchg
pop
sub
dec
and
lea
test
fsub
push
mov
dec
enter
inc
sub
inc
scas
xchg
stos
cwtl
jne
jmp
dec
adcl
repz
popf
push
add
sti
shrb
mov
add
pop
add
xchg
sbb
sti
outsl
push
or
push
roll
cld
inc
in
mov
jg
call
js
jle
xchg
arpl
adc
mov
push
stos
xlat
add
dec
rol
or
jg
or
xor
inc
mov
aam
xor
repz
stc
pop
test
mov
lcall
aad
scas
pop
sbb
jno
stos
es
rcl
aad
icebp
enter
or
sbb
enter
lods
imul
push
jp
movsl
xchg
xchg
cmpsl
jl
mov
or
pop
xor
pop
lcall
jae
in
sbb
cli
vhsubpd
mov
cmp
sahf
int
push
cmp
push
test
lahf
xchg
xchg
cwtl
add
clc
imul
jne
jl
testb
jle
cmp
cli
jp
pop
mov
pop
mov
movsb
out
inc
pop
mov
mov
xor
mov
mov
sahf
lcall
push
in
scas
cmc
or
aas
mov
cltd
xchg
cmpsb
lret
add
addb
shl
lods
popa
cld
sub
sub
cmp
pop
and
push
test
pop
jg
mov
jno
and
lods
loop
add
xchg
sbb
cmpsl
sbb
cmpsb
jp
iret
popa
shrd
scas
mov
mov
xchg
xchg
pop
xchg
scas
ret
push
jle
dec
aam
test
test
xchg
xchg
mov
test
adc
clc
sbb
idiv
lock
push
adc
xlat
in
xchg
ja
test
out
sub
lcall
add
test
negb
push
and
mov
dec
and
cmpsl
inc
push
push
sbb
cmp
xchg
ja
sbb
andl
nop
fdivr
inc
pop
lock
sub
dec
aad
ja
inc
inc
pop
sbb
sub
lahf
stc
outsl
inc
mov
and
inc
movsb
or
daa
pop
and
inc
pop
push
xor
leave
js
sbb
jp
jmp
xchg
outsb
xor
mov
add
sub
imul
jp
ljmp
mov
mov
outsl
rcll
into
and
pop
clc
mov
mov
imul
ss
mov
test
dec
sbb
push
xchg
pop
jp
jmp
scas
or
push
ss
mov
jmp
pop
int3
jno
ss
lock
mov
push
pusha
sub
loop
arpl
addb
stos
hlt
ja
outsb
sbb
daa
mov
ret
fdivl
or
scas
xchg
add
scas
lret
test
dec
or
mov
lret
lods
mov
mov
add
xor
mov
mov
mov
jmp
cmc
imul
aad
push
push
lret
fcomps
jno
or
adc
insl
jnp
push
gs
stc
xchg
shrb
inc
mov
fdivrl
dec
sub
andl
cmp
sbb
lret
add
cli
push
dec
lods
inc
test
cmp
movsl
nop
fmul
testl
cld
je
ljmp
xchg
mov
mov
cltd
sti
scas
int
pushf
push
inc
insl
daa
std
icebp
sub
xor
jecxz
loopne
or
js
fstl
ret
mov
pop
fisttpl
pop
xor
adc
icebp
xchg
bound
out
dec
push
jle
push
out
cltd
adc
cmpsb
push
inc
sbb
flds
xchg
pop
dec
push
adc
loope
mov
lea
lea
stc
or
dec
push
ja
stos
cmpsl
ret
std
ljmp
in
fs
stc
mov
push
test
mov
daa
ret
mov
outsl
aad
imul
movsl
call
xchg
leave
stc
andl
cmp
das
decb
inc
mov
sti
mov
and
icebp
pop
stos
pop
nop
dec
fldln2
ss
into
outsl
push
jp
adc
jecxz
push
xor
pop
mov
mov
hlt
mov
call
pop
je
and
pushw
sbb
movsb
mov
xor
fldcw
lea
xchg
adc
popf
bound
mov
pusha
add
loope
sar
jns
jnp
xchg
das
push
xor
adc
imul
cli
and
cld
sub
fsubrl
out
adc
popf
mov
mov
loopne
inc
sbb
jp
mov
or
mov
repnz
paddw
pop
jge
sbb
ss
and
fsubs
fdivs
test
jmp
cli
mov
aaa
stc
bound
ds
push
add
gs
or
outsl
xchg
sbb
lahf
popa
mov
aam
fwait
mov
jo
and
fidivs
lcall
hlt
ja
test
jb
shrb
scas
xchg
jecxz
stc
das
sub
jp
adc
popf
mov
shl
and
lock
inc
sub
xchg
push
fdiv
lods
and
lahf
stc
mov
lock
mov
lds
jbe
stc
test
jae
jne
jae
rcl
dec
sbb
lcall
pop
mov
icebp
lahf
adc
nop
lcall
xchg
sahf
inc
js
dec
lret
inc
push
sub
cmp
xchg
pop
cmpl
shll
fisubrs
jmp
cmpsb
sbb
pop
dec
xchg
jmp
iret
cmpsb
movsb
fiaddl
sbb
fisubrl
mov
lods
jne
dec
stos
gs
daa
inc
sub
push
lds
fcom
out
fsts
in
cmp
ljmp
test
inc
xchg
fildl
dec
xchg
push
idivl
lock
out
mov
sbb
xor
push
out
pop
xorl
imul
arpl
fs
in
sbb
cmpsl
outsl
lea
std
mov
imul
arpl
xorb
push
imul
ljmp
fiadds
pop
mov
sub
cmp
in
jle
sbb
nop
or
test
push
sub
add
xor
xchg
push
vmulps
mov
cmp
inc
xchg
pop
cmp
fistpl
test
xlat
and
ljmp
sub
jnp
call
sub
addr16
shl
test
rcr
inc
mov
mov
adc
into
std
push
cmp
inc
stc
dec
in
xor
sbb
sbb
jmp
adc
scas
dec
adc
daa
cmpsb
or
inc
insb
sti
int3
xchg
sahf
dec
test
push
test
fcomp
iret
test
les
into
ret
movl
shl
mov
add
out
ret
dec
mov
js
decl
push
jmp
mov
or
cmpsl
xor
repz
add
int3
int3
mov
inc
sbb
out
shlb
rol
and
sbb
pop
js
jnp
cmc
lods
fidivrs
pop
push
pop
mov
and
pusha
stos
push
xor
cwtl
in
aas
sub
mov
mov
inc
stos
cmp
mov
adc
mov
test
xchg
or
jl
mov
lds
cltd
mov
cltd
in
inc
push
cmp
push
mov
dec
and
aas
mov
inc
jno
mov
mov
xchg
add
cmp
xchg
out
push
cmp
ljmp
out
xor
mov
stos
xchg
inc
fcmovne
mov
imul
sub
push
mov
mov
xchg
clc
fcompl
dec
sub
and
push
push
add
push
pop
jecxz
enter
pop
fcoml
or
push
popa
push
aam
pop
hlt
pop
pop
sub
lahf
arpl
xor
pop
jecxz
xchg
adc
int
faddl
and
ficompl
negb
jmp
invd
cli
jnp
dec
ret
pusha
ljmp
jno
lock
repz
mov
jb
xchg
mov
mov
cmp
lcall
xorl
inc
insl
sbb
add
test
and
jne
push
mul
mov
add
loope
push
negl
scas
sti
fmulp
scas
mov
test
repz
push
mov
or
icebp
jg
nop
mov
pop
lret
dec
call
and
lcall
aam
lret
addr16
scas
xor
fwait
xor
jmp
sbb
jnp
pop
shl
cmp
leave
jmp
hlt
sahf
and
jne
cld
sti
jb
jle
rclb
and
sub
dec
sbb
jg
inc
cmp
or
or
scas
adc
addr16
add
adc
pop
adc
call
dec
adc
aas
fsts
pop
aam
jb
and
jge
dec
test
add
cltd
in
or
add
bound
insl
test
cmpsb
dec
in
fisubrs
jmp
xor
sub
jne
mov
in
sbb
repz
and
cmpl
ror
subb
lea
aaa
gs
xor
pop
scas
jle
xor
push
inc
gs
popf
mul
inc
cltd
xlat
movsl
lock
repnz
cli
xor
and
jp
mov
int
xchg
scas
inc
mov
ret
rolb
imul
lock
cli
mov
fdivrs
ret
sub
aaa
or
dec
lea
testl
iret
in
scas
mov
fldenv
inc
or
push
push
aas
jb
jno
subb
adc
xor
push
adcl
adc
sbb
repnz
mov
or
jo
mov
push
lret
pop
dec
adc
dec
push
inc
movsl
pop
jae
mulb
push
jp
mov
clc
push
push
sti
cwtl
or
loopne
dec
xchg
jnp
adc
arpl
push
xchg
jle
mov
sub
fdivrs
adc
fidivs
inc
cmp
aam
insb
daa
ss
int
repnz
cwtl
xchg
mov
dec
cld
sbb
xor
dec
in
or
imul
mov
xor
inc
mov
mov
shll
out
mov
pop
mov
xlat
adc
clc
jge
rcr
jle
mov
aaa
pusha
stos
cmp
ds
lret
add
sbb
and
daa
xor
adc
jp
insb
pusha
or
in
xchg
out
dec
and
sub
aam
jae
loope
sbb
cmp
push
mov
cmc
aad
sar
iret
jle
stos
fists
lds
push
sub
daa
arpl
dec
adc
add
int
popf
test
mov
cmpb
scas
pushf
jns
fldt
xchg
fmuls
loopne
popf
cli
sbb
out
imul
mov
adc
insl
lds
ja
adc
mov
ljmp
xor
mov
xchg
cmp
lcall
adc
icebp
mov
ds
jnp
mov
pop
in
mov
ja
push
jne
mov
mov
dec
lret
fcmovnb
push
xor
jnp
mov
negl
mov
xor
fxch
loop
or
add
mull
js
and
xlat
dec
int3
outsl
mov
pusha
add
inc
je
sar
push
jb
lahf
scas
stc
dec
xlat
mov
push
lea
push
movsb
fiaddl
pop
fiadds
pop
xchg
dec
outsl
mulb
imul
sti
push
sbb
mov
xchg
dec
jge
int3
cli
push
cmp
mov
xchg
sbb
mov
rolb
push
inc
rolb
in
push
mov
add
mov
and
data16
jmp
and
idivl
sub
jnp
push
fldl
out
pop
pop
lret
mov
xlat
xchg
stc
cltd
fwait
mov
mov
dec
xchg
ljmp
or
call
mov
ret
pop
or
and
es
test
xor
cld
fisttps
nop
and
cwtl
movsl
cmp
lods
cmpsb
cmpsb
icebp
imul
pusha
inc
aas
movsl
sbb
adc
lcall
fnsave
pop
mov
mov
ljmp
fs
loopne
mov
daa
xchg
jle
jnp
je
daa
popf
enter
or
cli
pop
jno
jge
or
mov
daa
addl
cli
insb
dec
sub
aad
mov
negb
xor
sbb
orb
ror
outsl
pop
in
mov
add
or
nop
sub
cmp
or
push
push
push
outsl
les
sbb
xchg
inc
in
push
push
fisttpl
in
mov
sub
out
insb
out
inc
push
xor
pop
movntq
out
xor
push
out
and
mov
sahf
jb
xlat
clc
sub
ret
ret
imul
xor
inc
in
aaa
test
and
pop
pop
fcoms
mov
xor
xchg
mov
ja
aaa
js
les
arpl
pushf
xchg
mov
lds
add
push
mov
fsts
stc
dec
les
sub
loope
jns
inc
jg
aas
arpl
cmp
cs
imul
test
xchg
mov
in
sarl
sbb
jmpw
xchg
rorl
jno
call
loope
and
sbb
pushf
xchg
mov
or
jb
addr16
addr16
pop
inc
rcl
adc
push
arpl
lret
pop
inc
cmc
push
push
aad
stc
dec
test
aam
inc
push
aas
adc
cmp
bound
insb
loope
mov
iret
jle
and
mov
ret
fildll
inc
fsincos
sub
scas
mov
jns
enter
setp
setb
cmp
jns
add
fwait
repz
sbbb
xorl
pusha
clc
mov
gs
sub
cmp
cmp
int3
jbe
test
repnz
xchg
mov
xor
outsl
rcl
adc
out
pushf
jnp
xchg
rcrl
aas
pop
mov
aam
out
pop
into
cmp
lcall
mov
xor
aas
push
pop
dec
aam
or
in
out
sbb
es
cwtl
pop
adc
dec
xchg
hlt
imul
lds
add
mov
in
fcmovnb
daa
cmp
push
cmpsl
inc
test
gs
mulb
jo
fucom
mov
mov
ljmp
sar
pop
dec
leave
les
fwait
int
leave
aaa
sub
adc
dec
pop
cmpsb
pop
rolb
push
nop
mov
jle
inc
mov
fdivr
addr16
xorb
cmp
push
mov
xchg
jae
stos
sub
test
repnz
ret
push
mov
cmp
popa
push
jbe
int
cmp
push
inc
call
mov
dec
subl
testl
push
lahf
hlt
jge
ljmp
pop
movsl
out
bound
lret
mov
jle
cs
add
ret
test
test
ficompl
add
mov
aam
xor
mov
mov
int3
xor
stos
or
fists
test
rolb
outsb
pop
inc
and
and
jmp
popa
fdivr
icebp
decb
and
inc
mov
push
push
je
sbb
pop
adc
mov
mov
or
mov
mov
push
es
mov
into
push
movsb
or
shl
ljmp
mov
aad
cmp
leave
xchg
call
mov
mov
or
ljmp
push
pusha
xchg
fs
aad
pop
and
test
mov
jno
push
pop
lcall
mov
das
leave
hlt
pushf
add
mov
or
test
leave
mov
sub
shll
andl
shlb
pop
lock
popf
roll
dec
sbb
fcmovu
dec
aad
in
test
add
cmp
lock
arpl
sti
mov
leave
or
mov
cmp
cmc
pushf
aas
cmp
push
sbb
mov
mov
push
push
rorl
clc
mov
add
push
test
adc
adc
sbb
pop
jl
in
in
scas
xchg
mov
xchg
push
je
inc
cmp
cltd
xor
and
inc
shrl
cmp
popf
add
roll
std
pop
mov
rolb
sub
mov
daa
mov
xchg
pop
pop
stos
pop
mov
insb
sbb
mov
xchg
outsb
mov
jg
adc
js
pop
mov
cli
inc
xor
and
xchg
cmp
cltd
cli
test
call
dec
mov
negl
xor
cmpsl
xor
add
pop
add
add
inc
shll
sahf
aas
clc
fsubl
pop
stc
fnstcw
popa
mov
ljmp
sub
inc
and
lret
subb
mov
decl
sbb
xor
mov
xchg
imul
add
mov
data16
lods
shll
hlt
das
ljmp
mov
insl
mov
dec
mov
aaa
xchg
dec
lods
dec
xchg
or
sub
push
cmp
lods
xchg
mov
xchg
cwtl
loope
movsl
ret
movsl
xor
push
jmp
aam
insl
pop
push
cmp
in
std
sbb
icebp
adc
cwtl
loope
jne
pushf
sti
adc
cmp
sbb
ret
or
xchg
addr16
lds
push
sbb
inc
call
scas
sub
icebp
sar
mov
gs
mov
in
inc
dec
inc
sub
in
pop
cli
pop
pop
fwait
inc
jnp
sub
mov
fcoml
push
cmc
dec
testb
enter
mov
pop
sub
addl
test
out
shrb
iret
test
mov
inc
inc
or
dec
repz
xor
inc
nop
sbb
stos
stos
rorb
adc
adc
mov
in
je
push
enter
mov
cs
mov
addr16
push
jmp
push
xchg
push
out
mov
sahf
sub
jae
cltd
dec
repz
enter
inc
jl
jbe
inc
js
push
mov
mov
pop
nop
and
sbb
leave
outsb
dec
inc
inc
loope
sub
cmpsl
cmp
push
inc
fildl
sbb
cltd
fsubrl
adc
ljmp
sub
hlt
push
lret
cs
xor
ja
inc
es
shll
dec
ljmp
arpl
pusha
fidivrl
jmp
jns
mov
fwait
je,pt
pop
and
pop
push
data16
xor
stos
inc
mov
pop
bound
and
and
lds
jmp
bound
cltd
pop
nop
fstpl
sahf
bound
sarb
shrb
in
aad
jge
jg
and
sbb
lret
insl
sbb
je
into
or
mov
notb
jle
jl
fidivrl
mov
loope
inc
pop
icebp
cmp
subb
lods
push
inc
sub
test
add
pop
push
repnz
outsl
push
outsb
aad
filds
or
out
mov
add
add
cltd
test
imul
enter
adc
jb
add
fs
cmp
sahf
addr16
sarb
cmpl
testl
or
roll
ds
or
push
mov
inc
stc
sbb
or
or
and
clc
in
cmp
inc
sti
addr16
mov
xchg
mov
xorb
jae
lock
cmp
icebp
iret
dec
out
stc
mov
push
rcll
jle
mov
mov
adc
movsb
cmp
fmulp
cmpsb
icebp
loopne
pop
or
icebp
add
adc
jmp
jbe
jne
js
cmp
ror
mov
dec
jns
inc
inc
in
jns
xchg
imul
dec
fisttpl
push
mov
push
scas
notl
adc
xlat
xchg
jbe
js
jl
push
int
out
add
ud2
cmp
xor
outsb
mov
add
push
test
dec
stos
fcompl
jle
fdivs
hlt
call
add
sub
mov
fadds
js
lcall
mov
jbe
gs
sub
idivb
rorb
addr16
or
fstpl
lock
lret
in
sahf
push
fsubrs
or
sarb
jmp
icebp
sahf
dec
cmp
idiv
out
int
out
pop
sub
dec
fcompl
or
push
mov
pop
je
rep
lods
dec
mov
cltd
cld
aam
arpl
out
hlt
pop
out
push
or
xchg
jecxz
arpl
das
in
push
mov
enter
les
pop
addr16
cmp
adc
cmp
jno
lods
mov
adc
lods
push
insl
imul
das
aas
sbb
inc
ds
jl
shll
out
mov
cmp
fcompl
fmuls
ja
sar
fcmovnbe
dec
sbb
and
sbb
dec
sub
jmp
call
nop
push
mov
and
shrl
sub
shll
call
cmc
icebp
lods
test
stos
mov
adc
push
inc
push
test
aas
mov
mov
pop
and
test
out
movsb
dec
ret
inc
lock
or
cmpsb
js
lods
int3
js
pushf
ret
fsubrs
fdivrl
incl
cmp
push
xor
add
iret
push
cmpsb
out
imul
mov
and
mov
xchg
jbe
pop
sar
pop
mov
sbb
nop
into
daa
push
int
or
iret
and
pop
cmp
ret
cmpsb
sub
leave
out
pop
popa
dec
jmp
ljmp
jne
mov
into
sbb
scas
hlt
dec
aaa
jbe
push
pop
pop
lds
das
lcall
hlt
push
lret
cmp
insb
jno
push
jne
test
jno
xor
inc
xchg
dec
mov
sbb
mov
lahf
arpl
jnp
hlt
xchg
shr
mov
sti
shlb
int3
rol
jb
dec
cmp
mov
jb
mov
xor
ljmp
sarb
div
adc
icebp
dec
gs
test
mov
inc
pushf
loope
xor
loop
inc
or
jmp
cwtl
int
pop
dec
or
ds
jne
cmpsb
add
jne
inc
pop
push
xchg
xor
sbb
or
jo
pushf
jo
lcall
inc
dec
fstpt
cmpsl
or
xor
stos
loopne
jmp
mov
shll
pop
cmpsl
mov
sub
or
xchg
inc
out
out
mov
pusha
outsl
shlb
inc
dec
testb
pop
lock
in
xor
orl
push
jne
out
fdivr
add
cmpl
xor
jmp
jb
push
cli
nop
mov
and
out
push
and
adc
decl
pop
cmp
push
inc
test
pop
xor
addl
ds
jmp
mov
popf
add
dec
insb
mov
pop
adc
and
mov
mov
xchg
test
dec
aaa
dec
test
or
jge
decb
add
jo
add
das
testb
lret
nop
fmull
hlt
sub
pop
fadds
js
fbld
and
mov
cmp
inc
xorl
data16
push
jae
popa
push
xor
cmp
sbb
and
fistpl
out
mov
mov
xor
xchg
pop
pop
in
xchg
sub
xchg
mov
xor
inc
xchg
pop
mov
xor
sub
test
add
xor
sub
inc
push
sub
xchg
ret
jmp
xor
mov
pop
pusha
and
stc
adc
das
xchg
dec
loop
cltd
and
test
mov
inc
pop
loope
mov
shll
rcll
cmc
jge
ret
or
push
imul
push
out
cli
sbb
out
inc
add
les
sbb
and
loope
adc
xchg
or
int3
push
call
adc
sbb
mov
xor
cmpsl
insb
and
out
dec
aam
push
inc
sub
comiss
testb
adc
pop
cld
rorl
stos
or
dec
push
stc
jb
and
aas
push
addl
mov
sub
adc
jmp
mov
inc
in
jb
mov
loopne
ljmp
fadd
add
fwait
xchg
or
movsl
repz
insb
mov
in
flds
push
rorb
rol
xchg
adc
push
lock
and
cmc
loope
jecxz
add
xor
repnz
dec
and
gs
scas
outsl
popa
lds
dec
aam
out
mov
gs
aam
xor
add
in
std
fwait
cmp
sbbl
cmpsl
mov
pop
lahf
lea
push
mov
in
cmp
adc
inc
popf
and
rorb
dec
xor
push
addr16
or
addr16
jb
and
test
popf
mov
loopne
mov
sub
out
icebp
cwtl
or
mov
cmp
add
loope
xor
pop
cmp
inc
ljmp
jbe
adc
sbb
adc
stos
push
jns
mov
int3
xchg
sub
add
and
or
rclb
xchg
ds
scas
cmpsl
popf
cmpsb
lahf
rol
movsb
jl
outsb
jle
pop
cs
stos
pop
bound
sbb
mov
scas
xor
out
add
movsb
outsl
sub
jl
nop
push
loope
pushf
xor
xlat
int3
sbb
in
lret
dec
out
or
jns
imul
fwait
jl
fists
push
xchg
stos
jmp
leave
cwtl
movsl
pop
jne
jecxz
in
js
adc
cs
popf
inc
ljmp
shr
pop
scas
cmp
adc
pusha
lock
ja
ror
mov
rcrl
ja
dec
adc
xor
cli
es
xlat
in
xor
mulb
or
stc
jg
add
inc
pusha
pop
mov
lret
xchg
and
add
sub
xor
and
mov
cmp
nop
mov
dec
je
mov
imul
loopne
xor
subb
push
dec
dec
xchg
and
lea
jecxz
mov
adc
les
adc
enter
and
lods
sbb
inc
and
inc
xlat
inc
es
mov
mov
sbb
in
movsl
and
pop
negb
orl
xchg
dec
lret
push
adc
push
xor
iret
add
add
nop
and
push
pop
scas
mov
mov
nop
lahf
mov
stc
scas
in
repnz
rclb
dec
and
mov
mov
bound
adc
enter
call
sbb
daa
sbb
gs
pusha
cmpsl
mov
clc
fucom
xor
jo
stc
inc
lret
test
int3
pusha
xchg
sub
dec
jle
mov
pushf
mov
fdivs
mov
test
enter
pop
test
add
sub
fsubs
ficomps
dec
xchg
xchg
sbb
jmp
rcrb
insl
sbb
push
clc
xchg
mov
ret
outsb
sti
cmp
lcall
mov
cmp
cmp
icebp
and
dec
pop
cs
mov
pop
push
test
sbb
inc
sbb
flds
scas
sub
out
push
nop
arpl
clc
jns
mov
cmp
sbb
loop
ss
mov
in
add
add
clc
sub
arpl
push
push
popf
out
dec
lods
mov
call
or
fsubrs
movsl
mulb
dec
pop
popf
cmp
xor
xchg
jb
xor
jns
pop
aad
fsts
xchg
adc
inc
mov
mov
in
in
out
in
fdivrs
pop
loopne
mov
int3
sub
shlb
and
pop
nop
bound
pop
cmp
rcrl
mov
filds
add
or
push
test
cmp
push
pop
adc
jecxz
fistpll
cmp
or
pop
push
and
mov
sbb
pop
aas
lret
mov
mov
mov
xorl
push
ss
adc
mov
adc
push
mov
push
out
shl
mov
jl
lds
je
subl
or
inc
adc
out
push
int
push
adc
cmp
inc
test
mov
fsts
test
addl
jne
int
stos
in
addr16
sub
gs
mov
cld
mov
pop
fistl
xor
sbb
sahf
je
dec
dec
xchg
adc
mov
jge
mov
aad
dec
mov
adc
fcomip
dec
rcrl
jns
cmpsl
jbe
fidivl
sub
int
xor
test
ret
mov
pop
insl
test
adc
pop
pop
das
lret
dec
cwtl
testb
cld
shlb
loop
scas
int
xor
sub
add
pusha
mov
cmpsb
test
and
in
mov
ds
addb
dec
push
lret
fisubrl
add
cmpsb
ret
ss
xchg
imul
mov
popa
xchg
adc
xor
lcall
cmp
jle
jns
loop
cmc
bound
leave
jge
dec
adc
jb
or
cld
mov
fadds
jl
mov
es
xchg
sbb
mov
jecxz
sub
and
ds
ds
mov
xchg
mov
cwtl
add
stos
in
jl
mov
add
dec
fcoml
sbb
int3
jge
movsl
add
icebp
adc
pop
ret
mov
adcb
fildll
enter
mov
xor
push
lods
mov
add
fmull
sub
dec
das
cmp
into
add
mov
imul
nop
pusha
or
clc
push
lcall
cld
jg
ljmp
dec
sub
out
add
fisubrl
mov
testb
or
dec
mov
cmp
fwait
xor
sbb
repnz
test
jl
shr
adc
iret
test
divb
ds
pop
push
mov
jo
xchg
mov
push
lock
push
inc
pop
sbb
push
test
and
inc
cmpsb
pusha
mov
cs
mov
lods
xchg
sbb
idivl
sbb
sub
or
pop
out
sbb
mov
xor
clc
and
mov
insl
fldt
dec
dec
fs
sub
mov
sub
cmp
mov
sbb
push
add
mov
pop
rorb
jg
and
xor
or
adc
mov
cmpsb
and
add
push
adc
cmp
loope
insl
or
pop
push
jg
flds
xchg
add
ss
testl
nop
inc
lds
lgs
mov
lcall
enter
pop
jp
sub
mov
in
cli
mov
and
mov
push
jbe
mov
into
lds
repz
imul
into
je
and
dec
cmp
inc
lahf
xor
mov
inc
sahf
mov
pop
jmp
gs
mov
mov
gs
xchg
bswap
jl
or
in
push
lcall
mov
dec
pop
cmpsb
add
and
sbb
call
or
xor
imul
rcl
mov
mov
xor
and
and
ds
std
sub
or
or
mov
inc
push
mov
jae
icebp
mov
adc
popf
sbb
xor
lods
in
xchg
cmp
cmpsb
lret
loop
outsb
movsl
ficoml
jbe
adc
popf
gs
in
out
in
pop
mov
in
fcomip
fwait
imul
xor
in
pop
xor
or
jp
cmpsl
lahf
push
mov
jg
xlat
lret
pop
pop
sub
sub
icebp
aad
iret
icebp
arpl
and
cmp
jecxz
push
ljmp
in
stc
shr
jns
or
xor
jle
dec
in
icebp
nop
push
scas
fidivl
je
std
addr16
pop
dec
and
cmpsb
cmp
dec
add
test
xchg
mov
iret
stc
jno
cld
out
scas
in
push
mov
jno
or
and
insb
fnstsw
cwtl
push
lods
aas
xchg
sub
imul
dec
data16
xchg
mov
mov
aas
add
and
sbb
fwait
insb
add
in
add
pushf
sti
inc
lock
and
pop
xchg
adc
arpl
push
les
fwait
lret
cmpsl
lret
out
pop
aad
lock
dec
pop
or
fxch
movsb
fisubs
cmc
lahf
in
repnz
or
lea
fisttpl
ret
cmpb
jne
std
pop
sbb
xchg
aas
adc
sub
or
test
and
mov
fsubp
test
lcall
xchg
sbb
repnz
cmp
fistpl
inc
shrb
test
xchg
and
es
ja
mov
push
fldl
mov
jp
in
mov
cld
fcmove
jl
call
sbb
sub
cmc
outsl
inc
leave
mov
sbb
or
int3
sbb
add
dec
and
cmp
jle
inc
cs
push
divl
adc
xor
jmp
mov
loop
push
cmpsb
sbb
sub
jle
jle
pop
sbb
daa
repz
cmpsl
movsl
and
ja
inc
aaa
mov
push
mov
jo
jp
adc
push
push
mov
es
push
xchg
stos
add
mov
dec
subl
mov
repz
pop
movsb
lret
cmp
sub
insl
bound
push
jae
sarl
int
pusha
adc
cltd
mov
jb
adc
shlb
cltd
ljmp
and
push
mov
out
pop
mov
inc
pop
xchg
into
adc
pop
dec
ss
fiadds
aad
lcall
ss
add
or
sbb
cs
lahf
imul
inc
xor
sbb
cmp
pop
movsb
pop
inc
mov
and
xor
xor
xchg
mov
rcrl
jmp
lret
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
stc
clc
sbb
add
add
add
add
add
add
rolb
add
enter
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
add
add
inc
push
addr16
jmp
jp
inc
lods
ror
lret
mov
add
add
inc
cmp
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
