push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
bnd
test
jle
jle
jno
jle
xor
xor
ja
or
cli
or
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
imul
test
mov
inc
aad
fisubrl
in
ljmp
cmp
mov
mov
cs
and
fidivl
dec
and
inc
adc
dec
sub
ljmp
mov
scas
xchg
lret
add
push
cmp
xor
test
pop
enter
xchg
mov
lock
mov
adc
jne
sbb
iret
dec
push
pusha
pop
je
sub
mov
sbb
sub
pop
leave
inc
push
fcoms
pushf
roll
rorb
xchg
pop
das
sub
clc
mov
das
xor
iret
and
sub
push
add
dec
cmp
mov
out
jl
and
jb
and
std
pop
dec
push
jne
repz
jno
mov
int
out
addr16
jle
lret
bound
shrl
iret
xlat
and
adc
ss
push
mov
jmp
xor
popf
outsb
ja
jnp
lock
pop
fisubrs
xor
cli
outsl
outsb
xor
xor
rcrb
jno
mov
cmp
jne
loop
add
pusha
into
ss
dec
out
in
loopne
xchg
sbb
jle
pop
xchg
imul
push
icebp
test
rcl
rcl
mov
push
pop
inc
xchg
test
fdivrl
aas
in
lcall
imul
add
cs
pop
lcall
add
mul
int
inc
mov
ret
rcr
dec
aam
je
pusha
data16
sub
aad
jmp
mov
ret
loopne
mov
call
aaa
stos
aaa
js
xchg
imul
mov
jmp
sub
mov
je
mov
fistpll
push
dec
clc
and
cmc
mov
mov
inc
fidivl
into
jle
dec
push
rolb
adc
iret
test
lret
loope
cmpsb
clc
pop
dec
int
lods
fildl
pop
cld
dec
sub
lea
pop
sahf
inc
jmp
sbb
outsb
sbb
jp
mov
cld
push
dec
sub
rorl
fldenv
cmpl
gs
sub
incb
push
aas
movsl
lret
cmp
sbb
push
pop
cmp
test
and
mov
or
xor
cmpsl
loope
dec
test
push
fidivs
cmp
dec
faddp
insb
jno
cs
or
insl
xchg
loopne
pop
test
push
cmp
inc
cwtl
fnstenv
outsb
je
and
add
sbb
push
jno
test
std
addr16
push
into
mulb
push
in
xchg
or
jb
mov
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
add
xorb
xorb
jle
outsl
jne
xor
and
xlat
pop
mov
adc
adcl
out
pop
mov
sbb
push
test
mov
dec
lret
jne
call
cmp
ds
mov
mov
scas
dec
inc
lods
push
daa
aam
bound
mov
cwtl
jl
out
decb
out
sbb
aas
adc
out
rcr
hlt
popf
push
std
mov
sub
mov
test
sarl
pop
sbb
xchg
add
push
fwait
shll
push
out
neg
sub
sti
inc
pop
push
inc
pop
sub
and
in
popf
xchg
cmp
mov
std
xor
outsl
and
call
arpl
repnz
popf
ret
xlat
aaa
mov
and
test
and
shlb
dec
clc
inc
fistl
xchg
mov
adc
call
push
mov
out
adc
xor
jle
in
add
jg
inc
lahf
or
pop
ja
xchg
popa
jmp
jo
pop
mov
jo
js
mov
ja
repz
adc
dec
repz
inc
xor
outsl
inc
popf
stos
jge
aad
mov
sub
pushf
push
movsl
xor
sti
cmp
aad
out
add
pusha
cmp
andb
int
es
test
pusha
das
mov
insl
loope
rcrb
scas
cltd
in
repz
loope
addb
sub
dec
test
ret
lods
int3
lcall
popf
or
popa
popf
shrl
push
xor
dec
jl,pn
nop
jb
std
dec
notl
jl
int
bound
jae
inc
stc
xchg
adc
pushf
std
push
pusha
jb
lea
repz
negl
in
mov
push
test
rcrl
pop
scas
pop
test
fmuls
sarl
dec
je
out
jmp
test
arpl
inc
movsb
aas
insb
aas
mov
ficomps
sub
or
inc
sub
xchg
inc
sbb
aam
jl
out
mov
push
bound
shl
mov
lret
aas
xchg
xchg
mov
iret
dec
jnp
iret
mov
subb
call
loope
cld
mov
sbb
adc
lahf
cwtl
scas
or
pop
xchg
dec
das
jb
sub
xchg
mov
push
mov
sbb
arpl
add
pcmpgtd
adc
outsb
andl
xchg
pop
mov
mov
out
arpl
xor
pop
mov
adc
js
ljmp
dec
aam
cmp
in
sub
scas
cs
adc
cmp
mov
test
and
or
jne
lds
test
push
inc
mov
adc
addl
pop
cmpl
push
fs
cmc
les
fwait
add
stos
push
pop
mov
sub
jbe
lret
xor
dec
imul
mov
push
jae
fdivrs
jo
aad
fwait
dec
mov
fsub
nop
hlt
insb
sub
call
jae
lods
repnz
ja
aas
shrl
dec
adc
push
pop
mov
mov
xchg
adc
das
in
sub
and
gs
mov
mov
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
cmpsb
lods
out
sub
xorb
mov
stos
jmp
push
pop
mov
sarb
inc
mov
pop
fucom
add
mov
cmp
arpl
fists
and
jae
mov
or
insb
aas
lret
test
pop
inc
icebp
and
ret
sub
fmul
dec
mov
popa
sahf
ss
iret
in
sti
lret
cmc
pop
outsb
sbb
mov
iret
bound
pusha
in
cmp
dec
xchg
dec
fstpl
shll
aad
mov
ficompl
inc
std
inc
in
jb
pop
loop
dec
dec
mov
pop
jo
and
adc
pop
or
orb
push
jp
test
lahf
or
jle
fists
lret
dec
add
clc
push
mov
push
out
mov
lods
jecxz
adc
adc
jp
jge
js
cmpsb
xor
cli
pop
adc
mov
ja
and
dec
fisubs
pushl
mov
clc
push
pushf
and
pushf
fstpl
lahf
push
pop
mov
mov
rcrl
or
cmp
insb
xlat
pop
xchg
lcall
into
push
fldl
mov
cmc
rclb
sbbb
mov
adc
sti
xchg
bound
popl
cmp
movsb
cltd
clc
dec
mov
pop
sub
out
lea
call
cmp
xchg
loopne
jno
cwtl
sbb
push
mov
pushf
mov
sbbl
jle
movzbl
loop
adc
jecxz
loop
push
shl
mov
fs
scas
jmp
sub
pop
dec
mov
or
pop
pusha
or
in
inc
movsb
bnd
orl
inc
lret
gs
mov
shrl
test
jp
dec
sub
dec
jecxz
sub
out
dec
inc
cli
movsl
repz
or
xchg
adc
sti
or
push
mov
mov
adc
mov
jbe
ljmp
fldcw
push
or
addr16
js
dec
arpl
out
in
sbb
cmp
ret
adc
pop
dec
stos
out
cmp
into
js
ja
adc
jne
mov
push
mov
add
test
push
addr16
sub
out
movsb
fisubrl
lahf
test
lahf
pop
fucomi
lret
jnp
mov
xchg
je
add
das
xlat
pop
stos
dec
mov
cwtl
sahf
mov
cmpb
pusha
push
hlt
insb
xchg
inc
jne
and
ret
jmp
daa
aam
filds
adc
push
mov
or
jne
xchg
adc
dec
fildl
out
xchg
jecxz
stos
packssdw
xor
adc
imul
inc
and
loop
adc
adc
xor
ds
mov
mov
mov
mov
clc
and
aam
mov
sahf
pop
mov
dec
ja
jns
addb
mov
pop
fldl
lcall
mov
pop
aam
pop
lahf
enter
push
out
jb
lock
in
cmp
idiv
push
and
xorb
xchg
jbe
jbe
test
test
dec
shlb
push
cmpsb
cmp
aaa
adc
sbbl
ficoml
cmp
or
das
inc
fs
cmp
add
jge
sub
xor
movl
jmp
pop
nop
jl
jge
and
jns
mov
sbb
xorb
cwtl
sbb
icebp
sub
lcall
jo
dec
sarl
sbb
fistpl
cwtl
iret
adc
pop
fisubrs
bound
sub
enter
add
sub
push
sub
stos
mov
dec
xchg
dec
mov
mov
das
into
xor
lret
sub
mov
and
shll
xchg
jns
mov
cs
subl
cmp
rorl
rorb
xchg
pop
sbb
jae
stos
sbb
cli
xlat
and
dec
lret
and
fsubrs
rdtsc
pusha
cmpsl
call
clc
sar
mov
mov
es
mov
dec
bound
dec
add
out
xor
mov
jbe
in
xchg
dec
push
xchg
add
jg
mov
xchg
lods
movsbl
or
leave
out
pop
jge
xor
pop
dec
das
pop
lcall
jbe
or
pop
gs
xlat
mov
jmp
pop
jbe
jo
dec
pop
addr16
rorb
sbb
gs
cmp
pusha
das
push
add
mov
sbb
in
adcb
xchg
std
push
in
and
aas
adc
aam
icebp
call
daa
std
push
dec
out
cltd
pop
sub
lds
or
mov
adc
lret
je
jns
mov
dec
aaa
leave
subl
jmp
add
pop
mov
pop
ret
lods
inc
pop
ret
mov
cmc
xor
daa
pop
xchg
das
into
leave
add
pop
and
and
leave
or
push
adcl
xor
hlt
mov
jbe
sub
popf
cwtl
push
sub
sub
aam
mov
mov
mov
daa
nop
frstor
sbb
fsubrs
push
jmp
sub
repz
sbb
fistpl
dec
fs
pop
repz
fscale
mov
push
pop
fldt
bound
movl
add
dec
rcr
inc
inc
mov
jge
stos
or
or
mov
sub
ds
jo
mov
push
mov
das
and
jmp
fcomp
into
popf
sbb
inc
cld
daa
ss
pusha
out
xor
fcmove
jp
cli
out
mov
sbb
lods
cmp
mov
sub
cwtl
hlt
out
mov
mov
add
movsb
imulb
addl
out
cmp
adc
xor
loope
mov
xchg
adc
fs
and
pop
aad
das
popl
test
push
xchg
mov
ds
cmp
cld
arpl
and
pushf
aas
test
lods
gs
pop
cmp
insb
jb
movsb
pop
js
loop
jmp
into
mov
jno
aam
xchg
dec
lods
lret
popf
cmc
fnstsw
xor
mov
or
pop
fidivrl
push
xor
lods
lcall
xor
cmpsl
mov
lods
push
in
popf
inc
jnp
adc
inc
decb
lea
mov
xor
mov
and
cmpsb
loop
sub
and
mov
or
fstpl
xchg
xchg
outsl
sti
or
outsb
sbb
mov
sbb
or
adc
pop
arpl
call
inc
into
stos
add
fwait
cmp
cli
sub
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
out
or
sub
dec
sub
sub
addb
ja
daa
push
aaa
xchg
fcmovnbe
ret
mov
add
mov
bnd
inc
insl
cmp
xchg
outsb
mov
inc
or
add
lret
dec
or
mov
idivl
sarb
mov
add
mov
jne
inc
test
test
test
dec
test
cmp
xor
cmpsb
fistpl
loope
dec
or
push
call
repnz
add
push
repnz
add
push
incl
jae
pop
mov
cmpsl
xchg
movsl
lcall
roll
mov
sub
mov
and
add
out
cmpsb
jl
outsb
orb
mov
cmp
in
fcompl
clc
lret
inc
inc
dec
push
mov
ss
int3
pop
adc
xor
cwtl
sub
jg
and
jae
xchg
gs
sub
inc
vpackuswb
sub
out
out
or
loop
dec
out
mov
push
mov
mov
pop
xorl
lea
jge
pop
test
sarl
into
push
nop
bnd
sar
testl
mov
add
out
and
sub
das
jbe
mov
mov
lds
inc
dec
or
xchg
jg
mov
cmp
jmp
in
es
fwait
in
addr16
mov
rcrb
push
daa
in
leave
ds
mov
sbb
mov
inc
adc
xchg
or
stos
mov
pop
mov
fwait
xlat
jmp
les
cli
cmp
mov
dec
lret
jns
sub
imul
push
lcall
cmp
mov
jo
push
dec
adc
sbb
icebp
shrl
cmpsl
and
sti
and
icebp
xchg
ret
ja
int
pop
or
mov
mov
push
or
dec
imulb
xchg
pusha
ja
movsb
gs
or
mov
ljmp
sbb
movsl
sbb
add
or
xlat
xor
fnsave
pop
shlb
inc
fcoms
sub
pop
outsl
adc
pop
stos
mov
mov
or
test
add
pop
cmp
mov
arpl
lahf
pop
add
cmp
filds
pop
mov
mov
jp
insl
daa
std
jg
addr16
and
jp
insl
add
cltd
clc
addr16
iret
xor
mov
flds
adc
mov
jecxz
dec
cmc
or
push
outsl
jp
cwtl
movsl
stos
pop
testb
addb
data16
adc
push
inc
lret
cmpsl
mov
or
xchg
in
adc
mov
cmp
xlat
stc
enter
test
xchg
mov
loop
pushf
cwtl
test
movsb
inc
push
pop
in
mov
fdivrl
ret
ljmp
push
mov
orl
rcll
pop
lods
packssdw
das
push
lret
or
inc
mov
xchg
int3
ret
dec
sub
lock
mov
push
jmp
lahf
push
cwtl
dec
push
hlt
dec
js
pop
popa
lahf
sub
test
jne
inc
cmp
ds
das
xchg
ret
movsl
xorl
cmpsl
in
arpl
mov
sbb
jp
jmp
stos
adc
repz
cmp
insl
xchg
test
inc
add
add
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
clc
jg
or
jle
xorb
stc
test
or
loope
lock
pop
lods
cmp
dec
cld
xor
or
shr
mov
sarl
cwtl
fucomi
addr16
mov
jb
addb
test
mov
fst
xor
push
xchg
sbb
xor
and
lods
push
or
sbb
out
fdivrs
sti
or
dec
ffree
sub
pop
or
les
and
mov
dec
sub
repz
sbb
in
jle
jne
idivb
aam
jge
jl
das
out
cmp
mov
xor
insl
shrl
pop
mov
in
in
sub
inc
int3
lods
pop
hlt
mov
test
rol
stc
mov
popf
push
mov
xor
dec
push
popf
mov
cmp
stos
xor
movsl
nop
push
jl
mov
sub
rcl
fs
pop
cld
cld
aad
ret
cmpsb
add
sbb
lea
dec
pop
inc
xchg
push
adcb
insl
inc
test
cld
lods
imul
ljmp
jb
lret
shlb
loope
inc
fists
dec
stos
jb
adc
xlat
pop
sarb
mov
or
fwait
xor
add
add
sbb
xor
int3
push
movsb
or
cmpsl
lahf
xchg
xor
and
adc
arpl
mov
pop
sti
and
mov
cltd
bound
das
or
int3
cmp
push
dec
call
dec
sbb
pcmpeqw
add
fiaddl
repz
pop
adcb
leave
aas
mov
dec
xchg
push
das
dec
sbb
shlb
gs
push
sbb
daa
add
pop
dec
jecxz
outsb
push
std
xor
xor
scas
jg
insb
cmp
repnz
pop
sbb
loop
arpl
popa
les
imul
popa
pop
lods
test
arpl
xor
sbb
fstp
rolb
and
popa
xchg
sbbl
dec
mov
mov
sub
or
popf
xchg
loop
cmp
adcb
lods
and
hlt
adc
sbb
mov
into
das
bound
lea
xchg
stos
pop
pop
sarl
and
inc
xchg
inc
adc
adc
in
mov
inc
cmp
lods
sub
push
pop
fistpl
imulb
xor
adc
mov
or
xchg
add
mov
jbe
fwait
mov
fildll
js
call
shrb
shl
and
div
push
test
push
mov
jl
aas
in
inc
mov
cmp
addb
pushf
psubsw
mov
pop
fimull
xchg
cmc
inc
pop
dec
mov
adc
pop
aam
mov
or
sub
inc
pop
sbb
sub
loopne
fidivl
pop
iret
inc
jl
lods
rclb
stc
sub
mov
xor
lock
leave
call
aas
xorb
add
movsb
and
add
aam
jl
mov
dec
xor
test
aaa
iret
mov
mov
cmc
fs
into
mov
xchg
scas
outsb
or
shl
jno
mov
movsl
sahf
dec
add
sub
cmp
pop
lea
in
arpl
or
ret
mov
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
jge
sbb
jle
jno
jle
sub
adc
lea
adcb
testl
in
dec
cmp
cmp
pop
movsb
movsb
adc
testl
popa
lret
mov
add
in
aas
cmpsb
inc
mov
fstpl
jg
or
in
or
fcoml
rorb
jl
clc
data16
sbb
movsb
jae
add
int
into
aaa
ret
mov
xchg
add
popa
mov
dec
lock
inc
addb
cwtl
or
icebp
in
jecxz
cltd
scas
enter
icebp
sub
rcrb
lret
and
push
movsl
jo
lcall
pop
cs
out
cwtl
dec
or
lret
xchg
pop
jl
enter
ror
shl
sub
shll
cli
mov
xor
lret
mov
jp
out
sti
pop
les
mov
stos
mov
fdivl
cmc
into
dec
imul
mov
sbb
jno
out
xchg
fsubrs
add
cmp
mov
dec
mov
xor
or
push
jb
inc
out
mov
jae
mov
imul
inc
push
xor
mov
fmull
fs
sbb
andl
cltd
mov
cltd
mov
pop
mov
and
cmp
mov
inc
loopne
jb
xor
sbb
and
add
dec
jnp
or
jmp
inc
and
adc
loopne
ret
mov
movsb
pop
fxam
xchg
mov
rcll
sbb
je
cli
and
adc
mov
in
lret
cmp
rcrl
sbb
js
mov
xchg
xchg
sub
out
testb
xchg
cli
fadd
loop
cltd
inc
dec
shrl
pop
ret
pop
xor
das
jbe
inc
in
push
adc
pop
mov
mov
inc
xor
mov
popf
subl
lret
cmp
popa
and
jno
xchg
mov
push
or
jae
jmp
sub
imul
sbb
movb
fs
mov
mov
cltd
xor
cmp
icebp
sarl
in
aaa
dec
add
int
dec
bound
push
shl
jmp
dec
sbb
or
mov
mov
mov
or
lock
xor
loop
xor
push
adc
dec
jb
into
xor
inc
push
fbstp
cmpsb
dec
fwait
pop
inc
push
rcrl
add
mov
bound
add
mov
or
xor
movl
iret
mov
xor
sbb
clc
or
sub
xchg
les
fildl
aas
mov
in
imull
test
and
lret
sahf
add
mov
mov
dec
jbe
and
rol
aaa
pushf
sbb
imul
xor
sub
cwtl
test
xor
movsb
icebp
arpl
cmp
je
enter
aad
cwtl
movsb
pop
xor
xor
fdivrl
jmp
cs
aas
jns
and
xchg
in
cmpsl
pop
lahf
xchg
jg
mov
int
or
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
mov
pop
jle
xorb
cmp
cmpsb
and
mov
adc
movsl
add
loopne
fdivl
or
dec
mov
mov
lds
xchg
arpl
rorb
stc
pop
pushf
scas
pop
fdivrs
lods
inc
add
jno
mov
and
ds
loope
xor
aam
mov
test
pop
test
aad
decl
xchg
jne
loop
sahf
xchg
setl
pusha
add
xor
dec
ret
cli
or
sub
daa
sti
adc
aam
aas
pop
jne
sbb
movsb
int3
inc
push
js
adc
xchg
lock
xchg
insb
sahf
loopne
mov
ja
imul
out
pop
stos
jae
add
push
add
jl
mov
into
rcrb
gs
out
inc
xor
aaa
test
aad
popa
es
pop
addl
jbe
sbb
ror
add
fwait
sub
and
mov
jmp
mov
pop
or
stos
xor
jne
push
mov
mov
and
jmp
cmpsl
pusha
sbb
sbb
jb
mov
loop
insb
xchg
lods
jmp
loop
out
roll
mov
lahf
iret
sbb
mov
popf
int3
stc
outsb
cwtl
pop
bound
in
je
sti
loopne
leave
cmp
sbb
mov
nop
mov
adc
adcl
fmuls
mov
cmp
js
add
cmp
push
pop
xchg
and
and
outsl
push
pop
jno
push
es
je
in
mov
test
pop
cmp
dec
jle
xchg
hlt
dec
ficomps
sbb
cmp
sub
fwait
adc
xchg
ret
test
mov
imul
add
bnd
sbbl
cmp
ret
imul
rorb
mov
cltd
xchg
cmpl
and
mov
iret
sbb
xchg
dec
sahf
mov
maskmovq
imull
sub
push
and
inc
popf
sti
jge
cmpb
pop
arpl
xor
pop
loopne
sub
es
fnstenv
adc
xor
xlat
dec
push
insb
aas
jecxz
pushf
pop
mov
cli
cwtl
into
push
adc
xchg
push
fucomp
in
ror
push
inc
xlat
adc
xor
in
fdivrs
mov
cs
cs
lret
sbb
andw
icebp
scas
push
fwait
int3
pop
pop
lea
sub
sub
int
in
dec
dec
xor
sbb
adc
gs
mov
out
push
adc
lock
out
push
inc
cltd
rolb
stc
pop
inc
sbb
inc
ss
enter
call
jno
mov
lea
dec
sbb
pop
sti
xor
fldt
addr16
pop
jb
or
ja
dec
or
mov
imul
pop
sbb
xchg
out
cmp
scas
call
outsb
mov
adcb
fidivrs
fadd
test
gs
in
mov
fisttpl
iret
dec
ret
das
test
in
xchg
je
xor
scas
xchg
imul
sub
pop
jb
outsl
mov
loopne
movsl
outsb
stos
push
jp
inc
cs
xlat
jp
stos
addl
pop
fistl
mov
jmp
jl
sub
jge
jge
inc
sbb
fistpl
sbb
xorb
ljmp
inc
pop
jae
xchg
rorb
inc
repz
cwtl
dec
lret
hlt
iret
les
aam
xchg
sbb
aaa
mov
movups
xchg
cmp
aam
xchg
jl
dec
mov
arpl
pop
adc
and
bound
std
loopne
cmp
push
pop
ret
xchg
lret
jp
push
mov
cmp
jl
mov
xor
scas
xorb
sbb
aas
je
shll
jae
clc
ds
icebp
loopne
lret
pop
sub
push
lret
sbb
cmp
rorl
sti
ss
fildl
popa
jle
subl
sbb
pushf
sbb
sbb
add
xlat
popa
ljmp
ret
imul
test
pop
lret
and
adc
subl
jge
ljmp
inc
rolb
fimull
mov
insb
adc
pushf
lret
scas
imul
and
mov
leave
arpl
or
fsubl
ja
lret
scas
push
push
fwait
insl
adc
daa
arpl
mov
js
ss
mov
sbb
outsl
jle
les
jne
std
ljmp
and
insl
adc
and
sub
leave
enter
rcrb
add
mov
xor
inc
push
mov
mov
lds
cmpsl
push
jbe
jno
push
or
repz
pop
idiv
dec
and
lcall
cld
fbstp
or
mov
jb
ja
pop
les
stc
testl
sub
inc
mov
push
imul
jle
adc
dec
xchg
lds
ljmp
insl
les
loop
rcrl
shlb
sub
dec
data16
mov
inc
mov
cmp
jns
and
xor
dec
add
pop
push
mov
add
lds
cmp
sub
push
pusha
leave
movsl
mov
test
sub
repnz
sti
imul
xchg
pop
sti
xchg
gs
clc
xor
outsb
sbb
lret
inc
shl
enter
jl
xchg
jge
or
nop
push
hlt
jecxz
shlb
outsl
jae
int
inc
arpl
push
dec
add
lds
push
imul
ss
fs
cltd
lock
lds
push
std
rorb
cmp
push
insl
dec
and
data16
dec
sbbb
push
mov
les
aaa
add
shlb
dec
add
add
push
inc
push
mov
in
pop
decb
cmp
movsl
and
and
sbb
pushf
inc
xor
jg
in
insb
imul
fldenv
push
test
sub
sub
add
xchg
std
fadds
mov
cwtl
lods
shll
mov
xchg
out
cmpsl
mov
sbb
dec
pop
fbstp
push
sbb
inc
add
lahf
loopne
pop
mov
scas
stc
repz
sahf
bound
cmp
xchg
clc
adc
push
cmp
nop
jo
in
cmp
sbb
lock
mov
jl
adc
into
aam
or
bound
clc
enter
pop
call
or
mov
das
ret
jge
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
repz
inc
mov
push
jle
xorb
sbb
lcall
dec
je
or
out
push
mov
xchg
mov
sub
sbb
dec
pop
stos
stos
mov
frstor
test
jbe
fimuls
pop
shl
xchg
leave
jecxz
arpl
mov
roll
iret
or
jle
pop
aaa
filds
adc
cmp
in
aas
mov
aam
jae
lods
fcoml
jnp
dec
xchg
sahf
jb
xchg
mov
mov
sbb
push
sub
inc
inc
or
sbb
add
icebp
push
fmulp
into
sub
popa
or
jnp
xchg
sub
cmp
push
adc
sub
xchg
or
push
jne
leave
out
das
repz
les
es
or
push
push
mov
stos
lret
inc
fcmovu
push
mov
xor
pusha
xchg
in
dec
orb
insl
mov
add
mov
adc
push
inc
push
jb
shll
pop
pop
sub
cld
mov
stc
or
add
into
mov
shl
push
ja
aas
hlt
add
movsb
movsb
push
loop
movsl
xchg
adc
sti
push
or
dec
incb
push
mov
adc
inc
addr16
xchg
sub
arpl
decb
shl
and
cmp
nop
test
jb
imul
jb
mov
ss
dec
test
lret
sbb
cmp
pop
mov
add
xchg
mov
push
jl
jecxz
xor
mov
dec
jle
jnp
lock
aas
fiadds
fldcw
adc
pop
cmp
jle
in
mov
jl
or
add
pop
xlat
cmp
fildl
pop
ss
test
outsl
sub
aam
in
or
jl
stos
sarb
sbb
inc
test
scas
negb
cwtl
sbbb
mov
pop
mov
jns
push
imul
popa
xchg
les
inc
cld
add
std
shlb
sbb
inc
push
stc
xchg
popf
sub
ds
sub
push
xor
inc
cmp
iret
inc
rorb
fnsave
pop
and
mov
mov
push
cmp
clc
das
ficoms
add
mov
outsb
push
movsb
xchg
pop
or
add
push
pop
out
lahf
insb
push
ljmp
lret
push
es
xchg
cmp
sbb
xor
pop
data16
add
pushf
xchg
paddb
xchg
movsb
jp
xchg
inc
pop
mov
ret
lods
fnsave
inc
mov
out
adc
jae
data16
aam
inc
iret
scas
add
scas
pop
sbb
adc
les
xchg
sbb
ja
ficompl
dec
mov
mov
jae
jmp
or
adc
test
push
or
shl
orb
push
adc
sbb
popa
xor
shl
jo
and
sbb
andl
jg
call
sbb
xchg
or
repnz
repnz
sub
push
enter
jo
jmp
sub
push
out
mov
aaa
inc
ss
sahf
xchg
lods
push
pushf
sbb
add
jp
push
push
and
leave
jmp
and
cmp
dec
pop
je
js
or
xchg
mov
mov
fwait
mov
pusha
or
jmp
jno
push
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
or
mov
jle
orb
aas
mov
mov
fistps
cmpsb
scas
add
cmp
adc
setp
out
shll
dec
or
repnz
shrl
idivl
lds
mov
daa
cwtl
enter
popf
cmc
into
cwtl
scas
or
or
shrl
inc
mov
jmp
mov
pop
dec
xor
dec
arpl
lods
movsl
aaa
pop
int3
push
out
nop
rcrb
les
inc
mov
aas
scas
jmp
popf
mov
dec
xchg
mov
jp
adc
outsl
add
lods
mov
call
repnz
out
and
popf
enter
pop
dec
xchg
jo
rcll
out
stos
sbb
dec
pushf
fidivs
xor
mov
mov
ficoml
push
ljmpw
cld
push
das
jns
nop
pop
push
dec
pusha
jge
js
in
xchg
ds
inc
lea
test
dec
inc
jp
insl
adc
mov
push
mov
cwtl
pop
shrl
test
loope
psraw
data16
subl
cmp
jle
into
int3
sbb
adc
in
movsb
mov
outsl
inc
inc
test
pop
sbb
and
and
pop
lock
dec
jmp
add
adc
and
sbbb
and
mov
sbb
dec
in
jmp
fcomp
sarb
jge
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
idivl
ret
adc
mov
jle
fadds
fdivrp
dec
hlt
lahf
pop
scas
mov
dec
cld
bound
ss
mov
fwait
insb
mov
push
inc
mov
stc
jge
sti
testl
lcall
out
jns
jge
andl
addb
mov
mov
enter
push
call
jnp
push
cmpsl
lret
sbb
and
outsl
sbbb
lcall
mov
movsb
mov
xor
insb
adcb
cmp
test
sub
shrl
inc
mov
jmp
imul
cmpsb
jmp
push
call
xchg
push
xchg
sub
pop
push
fs
daa
outsl
inc
jl
test
popa
pop
aad
adc
cwtl
mov
mov
in
xchg
inc
loope
icebp
in
imul
push
daa
lock
daa
or
pop
push
popf
xchg
push
outsl
add
test
sbb
xchg
jge
adc
std
add
adc
xor
lods
test
lds
and
lods
push
adc
mov
mov
in
les
push
repnz
ja
aaa
cmp
popa
mov
into
aam
mov
dec
xchg
sti
adc
mov
sbb
push
xlat
in
push
jae
push
sarb
das
and
lods
fcomps
pop
xor
shl
push
addl
cmp
int3
mov
pop
adc
or
jnp
inc
sub
inc
add
ja
add
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
aaa
xchg
push
push
aaa
xchg
xchg
jo
movsl
push
aad
in
dec
das
lods
add
aaa
jp
cmpsl
dec
and
jbe
xchg
in
cli
lds
fcoml
rolb
xchg
out
dec
cmc
mov
bnd
jb
icebp
cmp
mov
fidivl
test
popa
adc
or
sub
pop
movsl
pop
insl
cmpsl
jecxz,pt
outsb
out
xor
lahf
sub
lret
xlat
rol
popa
in
pop
orb
lods
stos
loope
rcll
or
mov
ja
jecxz
rol
subl
or
cmp
das
pop
mov
lcall
fists
mull
add
bound
insb
test
std
mov
fldt
dec
push
mov
shrb
mov
gs
or
mov
jae
fsubrl
pushf
imul
pop
ret
frstor
push
push
xor
mov
inc
sub
jae
push
cli
add
loop
fstl
cwtl
jp
and
mov
daa
fidivl
push
addl
push
insb
daa
and
sub
loope
outsl
sub
push
imul
fists
jnp
or
xor
mov
pop
mov
add
push
jl
shl
pop
loop,pn
mov
push
cmp
and
and
fwait
lahf
stos
shl
xlat
loopne
clc
xchg
lods
dec
mov
icebp
xor
aaa
and
dec
jb
out
mov
xor
xor
jmp
xchg
push
int3
jns
imul
push
push
in
push
jle
mov
jle
and
dec
inc
fnstenv
iret
jg
imul
int
and
cmp
sub
les
lods
add
inc
xorl
mov
cmp
mov
insb
pop
sbb
mov
pusha
repnz
ret
xlat
pop
xor
rclb
sbb
in
fisubs
arpl
or
mov
xor
mov
push
inc
mov
cmp
fld
lock
repz
dec
lds
imul
aam
or
dec
jns
negl
push
sarl
xchg
jg
mov
loopne
adc
sub
jne
in
mov
push
movsl
lcall
push
mov
inc
push
lock
rcrb
mov
dec
pusha
jb
mov
add
negl
jle
lcall
stos
add
cmc
bswap
int
jl
xlat
inc
adcb
rclb
xchg
outsl
adc
jg
and
pop
lds
cltd
xchg
fs
push
out
inc
test
mov
ret
adc
jnp
mov
testb
shlb
dec
int
out
scas
sbb
icebp
adc
clc
test
cmp
jns
loop
xchg
sbb
jmp
push
hlt
mov
mov
push
aad
retw
xchg
icebp
call
inc
sbb
mov
pop
pop
cmp
mov
jmp
xor
pop
pop
and
addr16
xchg
xchg
mov
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
dec
jp
jle
mov
jle
xchg
call
or
push
mov
in
lods
mov
addr16
sbb
push
jp
std
xor
enter
mov
mov
dec
loope
mov
addr16
and
decl
mov
mov
pop
movb
xchg
imul
sbb
sarl
cmp
add
inc
sarb
dec
and
dec
dec
in
xor
aas
je
loope
lds
lods
cmp
js
push
loop
and
push
fstps
mov
mov
mov
xchg
out
pushf
shlb
div
add
xor
addb
iret
push
mov
fdivrs
sub
mov
cmpsb
add
mov
or
ds
lcall
push
xchg
data16
pushl
test
and
and
inc
mov
pop
and
out
and
inc
pop
ss
inc
pusha
arpl
out
xchg
aam
mov
test
icebp
stc
testl
lods
and
mov
out
jb
sub
mov
push
popa
test
or
jne
jg
mov
bound
add
and
jno
pop
jecxz
dec
jge
negb
test
ja
js
xor
mov
andb
xor
fdivl
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
loopne
imull
jle
mov
jle
lret
test
sbb
lods
xchg
rcl
mov
jle
mov
ss
sub
lods
lret
out
dec
sti
std
stc
scas
lods
stos
movsl
pop
push
mov
mov
sbb
stc
xor
enter
je
mov
xorl
xor
seta
and
jmp
jae
mov
xor
mov
ds
pusha
lods
shlb
push
insb
dec
and
ja
pop
popf
and
cs
testl
ret
cmp
cmp
push
fbld
lcall
ret
pop
jp
pop
cltd
and
filds
fsts
test
stc
pop
hlt
mov
aaa
lock
xchg
cmp
incl
mov
push
cmp
and
out
jmp
inc
out
dec
or
ss
mov
jne
xor
xor
push
ret
decb
arpl
and
xor
xchg
sbb
pop
mov
cmp
or
pop
pop
movsb
inc
jb
xchg
clc
or
mov
mov
sbb
xchg
add
sti
lds
cvtpi2ps
add
jecxz
xchg
push
xchg
or
jo
xchg
int
rcrb
push
pop
shrl
adc
or
lods
in
push
pop
es
pop
cmp
outsl
adc
push
jg
es
mov
pusha
push
scas
cmp
dec
xor
add
mov
mov
mov
mov
jmp
andb
addw
adc
jle
mov
jle
or
stc
inc
or
fwait
mov
aaa
ret
pop
push
repz
mov
lret
mov
dec
pop
add
test
adc
mov
inc
mov
loopne
xchg
jmp
pop
daa
pop
imul
in
cli
cmp
out
mov
lret
cmp
je
mov
and
call
add
enter
adc
and
test
repnz
xor
fucompp
shr
cmp
and
outsb
cmp
das
addr16
dec
push
cltd
movsl
jl
testl
jge
mov
push
xor
xor
cmc
cli
inc
ja
dec
rcrl
jae
rcll
adc
je
xor
arpl
pop
out
sbb
inc
outsl
mov
mov
repnz
dec
fbld
out
cmp
mov
push
mov
sti
or
push
sub
cmp
ret
movsb
and
outsb
push
pop
push
and
insl
icebp
ds
inc
mov
sub
xor
dec
test
ljmp
dec
rol
push
xor
jbe
add
jne
push
pop
roll
adc
pop
add
rcrb
mov
or
ja
mov
aaa
mov
mov
add
cmp
stos
mov
or
adc
ljmp
mov
xor
add
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
cmc
sub
insb
jae
jecxz
call
stos
inc
rolb
fstl
push
lret
arpl
and
xlat
cld
jns
pushf
add
movsl
test
jns
repnz
jns
add
dec
iret
lret
xchg
addr16
mov
add
fldl
fwait
xor
add
out
lahf
xlat
and
stc
jp
mov
add
insl
daa
mov
or
add
lods
mov
mov
push
xor
pop
popa
clc
jae
imul
dec
stos
or
rcll
xor
push
adc
jecxz
sub
mov
inc
dec
xor
lcall
out
daa
cmc
mov
fisubrs
mov
rorl
sahf
pop
cmp
inc
inc
inc
pop
mov
test
or
ss
mov
push
bound
sbb
mov
xor
push
cmp
gs
xchg
fiadds
push
ret
and
out
sub
and
insb
les
xchg
cld
and
push
pop
lods
jmp
cld
sub
inc
adc
push
xchg
dec
out
jne
jo
push
dec
cs
stos
loopne
scas
mov
rolb
cmp
addb
inc
test
push
gs
stos
lods
push
mov
hlt
out
inc
or
cmpsb
mov
jno
mov
mov
mov
daa
int
repnz
lds
cmp
push
or
hlt
xor
add
jmp
in
push
adc
movsl
aas
push
les
jle
mov
jle
and
ret
rcrl
lock
cmp
push
aad
jb
inc
movsb
jne
xchg
out
fstps
imul
aaa
adc
dec
and
xor
std
ret
je
add
mov
inc
pop
push
push
pushf
adc
push
jmp
out
xchg
clc
xchg
lret
aaa
call
and
mov
lods
test
xlat
cld
dec
leave
rep
sbb
jb
xor
sub
pusha
stos
mov
pop
xchg
rcrl
mov
push
int3
xchg
add
push
cmp
es
popa
scas
jmp
popa
dec
fdivrl
and
stos
aam
inc
shlb
arpl
icebp
push
mov
stc
cli
aas
orb
dec
testl
pop
push
in
sub
shlb
ficoml
les
cli
jb
sahf
ds
or
inc
xchg
sub
inc
push
in
stc
iretw
repz
cld
xor
fs
mov
sub
pop
pop
push
fisttpl
sub
inc
cmpsb
sbb
xchg
cld
cltd
mov
scas
cmc
jmp
mov
or
mov
sub
gs
fucomip
ds
hlt
pop
loope
js
jo
mov
int3
mov
pop
add
fnstenv
and
pop
jne
mov
add
or
or
and
jb
in
loopne
sub
lcall
test
or
xor
push
out
mov
je
push
jg
lods
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
sbb
jle
jg
jle
or
inc
or
shr
push
or
cmp
xchg
xchg
into
push
jo
mov
push
loope
push
adc
shlb
mull
jmp
pop
stos
jns
pop
jecxz
fdivrl
jne
inc
dec
xor
jae
xchg
xchg
clc
or
or
mov
xchg
push
or
push
mov
in
push
push
in
scas
sub
stos
add
mov
sub
lret
inc
mov
call
ret
inc
int
les
mov
inc
jmp
addb
jmp
movsb
loopne
sbb
mov
data16
jl
ret
mov
rclb
cmp
sbb
xchg
addr16
jge
cld
mov
lahf
bound
push
sbbb
test
cwtl
pop
test
orb
sbb
sbb
syscall
cmpsb
and
jbe
push
pop
ret
sti
outsb
push
pop
pop
jge
movsl
cltd
outsb
loope
mov
scas
and
mov
test
out
adc
pop
std
js
jge
sbb
loopne
jecxz
lock
mov
jnp
data16
jbe
cmp
push
ds
hlt
ss
aaa
in
adcl
fstp
test
shll
add
mov
xor
mov
cmp
jle
popa
jl
jnp
push
mov
test
aaa
popf
pop
dec
movsl
repnz
sub
hlt
rol
jae
insb
lock
lods
and
cs
imul
jmp
mov
jns
dec
mov
scas
lcall
jg
jle
add
ss
xor
loope
bound
sbb
out
sub
ljmp
popf
cmpsl
push
mov
scas
jne
sbb
stc
cld
jge
push
fcmovnb
sti
aaa
enter
popa
int
scas
add
dec
lcall
movsb
ret
push
pop
les
aad
ret
jl
faddl
cmpb
aad
cmpsl
lahf
cli
cmc
jecxz
jbe
pop
daa
adc
sbb
test
cmp
shrl
test
out
sub
dec
or
in
loopne
pop
stc
aaa
sarl
frstor
sbb
das
sahf
arpl
gs
mov
jo
adc
adc
sub
test
ficoms
jno
pop
cld
or
test
aam
decl
adc
inc
call
lds
cmp
outsb
fistl
and
push
adc
xor
pop
clc
inc
mov
test
jae
je
adc
xor
jmp
cwtl
push
orl
xchg
mov
leave
aad
sahf
imul
and
pushf
mov
cmp
popf
dec
add
jl
pop
lret
imul
sbb
cmp
mov
in
ds
pop
stc
cmp
clc
lahf
test
loop
push
jg
comiss
mov
lea
popa
loope
jle
loop
mov
xchg
cmp
orb
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
test
and
mov
jle
mov
sbb
or
aam
xchg
cmp
ja
andl
sub
orl
outsb
stc
sub
bound
mov
fs
cmp
fstpl
adc
mov
ret
popf
into
jb
inc
in
adc
push
inc
push
fwait
rorl
add
inc
jmp
and
sbbl
jb
jb
nop
pop
xchg
lret
push
in
cmc
mov
inc
pop
cmp
mov
mov
adc
pop
stc
xchg
cmp
and
adc
rcl
out
xor
xchg
pop
loopne,pn
movsl
mov
hlt
and
sbb
lock
mov
jecxz
or
push
xchg
pop
dec
rcrl
imul
xor
bound
cmc
cmp
iret
or
pop
push
fcmovnbe
into
aaa
imul
mov
sub
mov
mov
cs
sbb
out
sbb
xor
inc
cmpsl
daa
mov
bound
fs
data16
test
movsl
stos
aad
and
fadds
je
sub
cli
xor
ljmp
idivb
ror
popa
xchg
cmp
xchg
cmp
push
dec
gs
loop
ret
nop
cmp
repnz
ret
xor
fldz
mov
andl
mov
imul
push
movsb
jno
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
pop
shlb
jle
jno
jle
push
jne
xchg
shll
and
fwait
insb
jbe
adc
adc
aad
imul
mov
in
ds
test
mov
push
cs
stos
push
and
jle
jl
xor
and
mov
xchg
inc
fisubrl
sub
outsb
outsb
mov
into
fcmove
imul
or
pop
lods
mov
inc
adcb
xchg
shrb
aad
rcrb
adc
dec
and
push
popa
jmp
jmp
es
adc
or
mov
sub
incb
and
push
xor
pop
in
sub
inc
bound
lahf
filds
ljmp
je
rcrl
cwtl
in
aam
fcoml
jp,pt
dec
or
and
cmp
or
out
pop
push
push
mov
push
sbb
jae
or
mov
bt
clc
adc
les
push
pop
ljmp
push
xchg
jmp
cs
push
inc
jle
xor
jl
xor
popa
mov
enter
lea
sbbl
cmp
mov
push
pop
outsb
push
adc
aas
or
lock
sbb
cmp
and
int3
xchg
push
in
shr
pop
dec
xchg
mov
insl
dec
out
push
or
test
and
sbb
push
push
loopne
mov
jns
cmp
add
cmp
pop
mov
fisubrl
rorl
mov
out
xchg
mov
xlat
add
xor
mov
pop
cmpsl
and
out
dec
lret
das
push
jg
fwait
cmp
fndisi(8087
push
outsl
inc
lds
cmp
addl
xchg
rolb
incl
cmpsl
xchg
int3
lcall
sti
scas
pop
add
push
push
test
cmp
in
jb
aam
sarb
pushf
fwait
mov
into
jbe
jle
dec
pop
mov
lret
xor
add
cltd
or
in
lahf
add
mov
mov
outsl
mov
push
dec
cmpb
push
dec
sub
test
adc
xor
in
mov
pop
pop
jnp
sbb
sbbb
dec
mov
or
cmp
inc
aam
nop
sub
xchg
ja
or
push
imul
adcb
pop
mov
daa
loope
jle
cli
adc
cmpsb
shlb
shrb
mov
test
test
jae,pn
jns
rol
cmp
xor
scas
mov
xchg
xor
sbb
push
mov
dec
stos
sub
dec
in
stos
sub
dec
in
repnz
adc
outsb
pusha
dec
and
inc
and
mov
xchg
pop
ficoms
sti
aam
add
push
repz
lods
mov
cmpsb
mov
and
add
aam
aas
dec
cmpsb
xor
mov
out
out
inc
stos
jecxz
push
xchg
adc
push
pop
repz
dec
push
outsl
inc
iret
lods
mov
inc
jae
lret
outsb
stos
sbb
push
adc
sub
mov
or
jge
in
fld
shlb
repz
jle
test
jne
adc
pop
mov
jmp
mov
dec
inc
push
adc
sbb
mov
repz
cmp
mov
jecxz
cwtl
jno
adc
pop
movsl
adc
divb
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
pushf
adc
jle
mov
cmp
scas
loope
rolb
pop
jne
jbe
out
inc
mov
loopne
ret
ret
cmp
adc
push
shrb
scas
push
out
xchg
pop
lea
lcall
lods
fisubrs
fisttpll
sub
aad
jmp
scas
iret
dec
xchg
push
cli
inc
jne
jmp
stos
pop
cwtl
or
out
or
mov
push
sahf
stc
sub
xor
mov
xchg
and
lods
and
xchg
mov
mov
xor
inc
push
pop
pop
ss
out
xor
push
int
push
loop
pop
jmp
addb
call
xor
sub
push
rcrl
lret
lgs
rcrb
adc
jmp
pop
xlat
sub
inc
lret
inc
lcall
sbb
fldenv
pushf
das
mov
addb
lea
inc
cli
sti
sti
jp
xchg
cmpsl
aad
popa
in
test
popf
and
jecxz
adc
jno
mov
sarl
mov
push
jmp
lods
andb
repz
mov
aad
mov
cmp
mov
mov
mov
call
mov
push
lret
orl
stc
insl
test
bound
movsl
and
movsb
mov
ljmp
test
push
push
or
imul
loop
pushf
int3
xor
mov
es
insl
dec
xor
sbbl
ror
ret
aam
imul
xchg
pop
pop
mov
pop
jnp
pop
mov
shr
adc
cmp
adc
jge
cmp
stos
leave
sbb
jb
cmpsb
or
add
inc
cs
adc
push
out
into
jbe
ljmp
sbb
push
push
dec
in
jge
mov
jmp
and
pop
sbb
dec
mov
iret
cmpsl
pop
repnz
stos
cwtl
test
imul
or
sub
in
iret
push
add
out
stc
inc
daa
push
or
out
jecxz
pop
push
das
fstpl
inc
inc
push
jg
aaa
scas
pop
lret
mov
in
mov
test
loopne
inc
sub
or
imul
dec
bound
pop
mov
ret
iret
push
mov
jne
dec
aaa
mov
pusha
ss
mov
subb
push
or
add
dec
and
ds
icebp
test
jo
push
repnz
fnstenv
dec
push
arpl
xor
daa
fisubl
pop
mov
lret
xor
pop
inc
xor
daa
adc
jg
xor
xchg
jb
popf
and
cmp
out
loopne
lret
and
mov
xchg
dec
cwtl
cmpsb
mov
outsl
push
aad
jge
adc
int3
inc
jae
pusha
cwtl
mov
jge
roll
roll
inc
cmp
mov
push
test
repnz
data16
and
ss
repnz
test
bnd
pushf
jg
push
jg
repz
stc
sbb
lods
pop
add
sub
jecxz
in
ljmp
mov
or
push
fsts
cmpsl
mov
fsubp
pop
pop
das
cmp
fwait
dec
xchg
ljmp
mov
mov
out
nop
fs
jmp
cmp
or
shlb
jnp
clc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
or
jle
mov
push
daa
leave
daa
faddl
popf
jp
orb
aaa
jp
ret
push
lahf
into
stos
dec
mov
or
stc
pop
mov
into
mov
cli
subb
inc
pusha
jp
inc
mov
iret
push
addr16
popf
scas
out
dec
clc
lock
or
insl
adc
rorb
insb
ret
iret
scas
cmc
sbb
ds
stos
in
xchg
inc
sbb
in
rolb
sub
push
ret
lods
xchg
jae
mov
clc
fs
fstl
sahf
lods
stos
in
mov
inc
mov
out
test
mov
into
mov
jo
enter
cmp
fsubl
add
dec
out
cwtl
movsl
popa
popf
popf
xchg
sbb
dec
negb
js
jl
ret
stos
ja
movsl
in
rclb
push
mov
cld
popf
cs
adc
mov
aaa
xor
add
or
mov
lcall
and
dec
subl
mov
jecxz
in
in
and
dec
shl
inc
fisttpl
mov
jbe
xor
push
lahf
add
and
jecxz
imul
xor
addb
js
neg
xchg
xchg
xchg
int
loope
and
out
repnz
hlt
movups
jl,pt
adc
fcompl
dec
and
loopne
bound
icebp
fsubs
inc
xlat
pop
aaa
xchg
push
cmp
sbb
adc
mov
addb
aaa
dec
idiv
sbb
sbb
dec
loop
mov
pop
adc
nop
and
xor
mov
push
stos
and
adc
sbb
sbb
push
les
pop
sbbl
cmpsl
fists
mov
and
dec
and
loopne
lcall
sub
js
or
and
mov
cmp
lods
lds
outsb
inc
cwtl
sarb
out
hlt
outsb
inc
in
sbb
adc
loope
cmp
leave
push
mov
mov
aam
cmc
js
loope
je
add
dec
repnz
lcall
jecxz
jbe
movsb
push
or
rorl
iret
cwtl
test
adc
lret
add
mov
push
aas
test
insb
add
add
dec
xorb
cmc
pop
insl
fwait
add
xor
fcmovbe
jmp
cmp
sarl
or
shr
mov
loopne
pop
outsb
or
sub
in
jp
pop
jns
sbb
mov
sbb
cmp
adc
push
sbb
dec
adc
mov
arpl
negb
mov
xchg
imul
mov
testl
popa
pop
or
divl
mov
cmp
popf
xchg
add
ja
cmpsl
xor
outsb
xchg
mov
mov
mov
lock
fstpt
mov
decb
push
mov
rcrl
jge,pn
mov
pushf
xor
push
repnz
mov
es
xorl
aam
mov
add
lret
and
xchg
lahf
jno
fisubrl
xor
popf
inc
out
pop
jmp
mov
out
bound
sub
sbb
lret
adc
push
imul
push
stc
or
out
ja
sbbl
loopne
adc
es
stos
aam
mov
out
ret
inc
mov
scas
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
outsb
out
pop
jno
aas
jle
mov
insl
lock
mov
push
pusha
or
jae
movsb
inc
or
test
test
sbb
push
jb
js
sbb
or
int
sub
and
sub
xchg
lret
stos
add
and
dec
mov
rorl
sahf
pop
inc
mov
inc
mov
mul
aad
mov
mov
xor
in
test
adc
stos
pop
insl
outsl
imul
fcomps
imul
ja
das
sbb
mov
cmp
dec
int
shrl
jmpw
pop
sub
test
xchg
jb
mov
cmp
sbb
adc
cwtl
cli
mov
mov
cmpb
xchg
mov
arpl
dec
jae
lock
test
add
ss
mov
clc
ret
repz
int3
mov
mov
push
jno
cmp
call
aad
fstpl
mov
out
insl
jae
bound
dec
sbb
cmpsb
inc
cld
xor
icebp
cwtl
in
fisubrl
push
jnp
mov
adcb
ret
and
dec
cld
jp
and
pop
xchg
jp
loope
add
push
movsb
xor
leave
jo
into
pop
and
outsl
sahf
pop
cmp
nop
out
or
jns
push
in
inc
push
test
rorb
mov
test
mov
mov
dec
mov
lds
adc
inc
test
mov
mov
cld
lea
in
pop
dec
cmp
idiv
cwtl
inc
lret
jae
aad
lods
shll
idivl
xor
sbb
xchg
out
cmc
leave
in
fstpl
xor
inc
adc
cmp
addr16
rol
repnz
push
cmp
insl
insl
andb
in
sub
lcall
repnz
mov
inc
and
sub
out
fisubs
xor
sub
cmp
inc
out
decl
mov
fsubl
jg
dec
cmpsl
dec
mov
sub
inc
dec
sti
jmp
imul
push
fildl
push
bound
jne
int
and
adc
mov
cmp
es
or
hlt
lods
or
sub
jp
dec
decl
sbb
sub
push
xor
daa
mov
jle
xchg
fs
push
cmp
xlat
fisubl
je
into
call
clc
clc
pop
and
push
push
push
mov
or
inc
stos
test
dec
mov
mov
inc
jmp
or
aaa
fisttps
add
or
scas
mov
add
inc
outsb
mov
xor
aas
push
mov
inc
scas
in
jmp
lcall
das
lret
mov
dec
and
pop
aad
mov
inc
jb
cmc
mov
or
je
cmp
rolb
xor
mov
pop
push
adc
push
push
mov
push
add
imul
pusha
test
hlt
aam
dec
push
xor
cmc
push
stos
mov
add
insl
xchg
hlt
rcrl
por
add
xor
cmp
incl
cmp
ret
lods
lods
inc
add
sub
dec
sbb
xor
movb
mov
mov
shrb
icebp
cmp
cld
ret
pushf
pop
or
call
cmp
jle
xchg
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
pop
or
mov
dec
lahf
add
fdiv
mov
xchg
or
cmp
sti
inc
pop
jo
and
xchg
push
aas
fists
rorl
fisttps
add
jo
sub
sub
je
repz
sub
adc
mov
dec
push
push
shl
mov
dec
jnp
test
sbb
ljmp
xchg
imul
ljmp
mov
mov
fldt
mov
mov
movl
ja
sahf
xchg
es
cmp
pop
add
xor
pop
or
jmp
cmp
das
scas
rclb
lods
mov
iret
push
adc
fiaddl
test
xchg
pop
xchg
mov
jle
push
jbe
ret
mov
cwtl
and
push
mov
adc
xor
das
pop
cmp
fcomps
adc
sub
iret
cmpsb
mov
inc
enter
xor
jp
jle,pn
rclb
lret
test
ljmp
sub
out
add
mov
push
lret
mov
mov
mov
mov
push
sub
ss
cmovg
cmc
cmp
sub
jb
pop
inc
arpl
mov
jnp
inc
fcompl
lea
adc
outsb
lcall
dec
xchg
mov
jecxz
outsl
mov
cmp
xchg
imul
je
out
mov
cmp
aaa
and
pop
cmp
sarb
sub
shl
fmuls
add
ds
mov
lea
push
jae
fidivl
xchg
scas
sub
out
sarb
scas
fisttpl
xor
mov
cwtl
dec
sti
xchg
ljmp
xor
push
fsubrs
stos
add
out
xor
dec
addr16
std
outsl
pop
jns
bound
push
je
enter
sbb
rclb
dec
out
cmp
mov
jae
lea
jecxz
sub
inc
adc
fidivrs
sbbb
mov
and
mov
aas
popa
andb
fidivrl
ds
lret
xchg
dec
test
arpl
lock
add
pop
push
cli
inc
repnz
or
xchg
iret
mov
negb
pop
add
test
inc
cwtl
xor
cmc
sub
mov
shl
dec
js
outsl
fwait
cli
arpl
xor
mov
adc
sub
sti
andl
jo
xchg
outsb
and
mov
stos
call
or
and
sub
push
popf
mov
daa
jp
daa
loopne
arpl
jae
mov
xchg
and
lret
into
fwait
add
pop
mov
pushf
popa
fcomp
pushaw
jb
loopne
in
mov
pop
stos
xor
xchg
mov
add
sbb
test
test
lds
push
popa
xor
push
mov
sub
sbb
and
xchg
test
and
cltd
mov
sbb
stos
add
add
ret
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
popf
pop
mov
dec
ss
jmp
jle
addr16
shrb
sub
mov
inc
movsb
dec
and
enter
data16
jnp
xchg
aam
xchg
dec
or
dec
xor
pop
imul
pop
lds
xlat
inc
fimuls
push
les
mov
add
movsb
in
insl
enter
shl
jg
or
jne
add
mov
and
int3
push
leave
mov
or
adc
adc
out
nop
clc
fcoms
pusha
xchg
mov
insb
adc
daa
xor
push
jp
into
and
js
jge
cmc
fsubs
jno
adc
adc
sub
jg
cs
xlat
mov
sbb
call
lds
mov
mov
pop
sub
rcrl
adc
pop
cmpsb
cs
xchg
mov
pop
pop
outsb
push
int
idivl
stos
push
adc
mov
icebp
pusha
pop
rolb
pop
inc
pop
popf
push
mov
sbb
and
pushf
xor
jns
jo
adc
mov
pop
push
mov
sub
cs
adc
xor
ss
cltd
sbb
jb
mov
imul
mov
sub
sub
movsb
fdivp
push
ret
sbb
lcall
bound
enter
push
fisttpll
bsr
cmpsb
fs
and
insl
cld
cmp
aaa
rorb
and
sbb
mov
test
outsb
sbb
push
fimuls
dec
jae
pop
adc
cwtl
sbb
xchg
addr16
rorl
cmp
or
cltd
jns
and
bound
imul
and
pop
repz
inc
xor
ficoml
pusha
sbb
or
and
rcll
ret
in
lret
xchg
cmp
cmp
mov
dec
mov
or
mov
dec
push
mov
pop
lds
xlat
mov
push
inc
rol
inc
cmc
jl
aas
std
lods
sbb
ja
push
mov
mov
dec
lds
pop
dec
or
cmp
mov
push
repz
pop
lock
and
andl
sub
jae
stos
fidivl
mov
add
jne
xchg
sub
pusha
popf
mov
jmp
sbb
jl
mov
ljmp
inc
in
rclb
sahf
sti
addl
int3
inc
add
imulb
xchg
roll
lahf
push
mov
jno
jmp
cmc
cmp
ret
inc
mov
outsb
xlat
stos
or
cwtl
jge
lds
mov
push
mov
in
or
je
ljmp
cmp
ss
idivb
mov
inc
sti
ss
push
jae
mov
icebp
xchg
xor
mov
loope
cmp
enter
push
in
in
lods
cltd
push
sbb
cmp
or
icebp
push
mov
and
mov
pop
test
in
imul
cltd
ds
push
insb
dec
mov
cmc
mov
mov
adc
pop
xchg
sub
and
inc
add
jmp
repz
inc
or
pop
inc
and
sub
and
rcr
lret
jmp
jle
inc
sbb
jmp
xchg
pushf
lds
pop
out
pusha
mov
repnz
mov
mov
push
adc
fs
sbb
push
sbb
pop
and
jmp
and
es
pop
mov
inc
sub
xor
subl
dec
xchg
mov
daa
outsl
mov
lock
testl
loop
jno
repz
dec
aam
movsl
int
xor
inc
jo
hlt
push
insb
push
fcomps
inc
pop
rcl
inc
and
cmp
aam
iret
push
popf
sub
lock
push
mov
lcall
xor
cltd
mov
loope
std
pop
ljmp
pop
add
mov
mov
sbb
push
adc
mov
cmp
xor
dec
scas
adc
daa
push
je
cmp
sarl
mov
dec
into
pop
mov
cmp
jbe
shlb
jne
lock
jg
gs
or
sub
sub
mov
popa
scas
movsl
leave
xchg
jecxz
ret
jns
and
cwtl
stos
rcll
icebp
sub
xchg
ss
cmpsl
nop
mov
mov
lods
sbb
add
pop
sub
movsb
xor
notb
sbb
ja
jbe
outsl
dec
std
mov
push
adcb
push
or
pop
mov
bound
mov
sub
mov
mov
push
fidivl
sub
add
mov
mov
dec
xor
adc
xchg
mov
jo
and
dec
dec
sbb
insb
xor
js
popf
arpl
push
test
rcl
es
lds
orl
pop
stos
ficoms
inc
pop
or
cmp
pop
or
mov
pop
mov
xchg
fisttpl
pop
test
mov
pop
fnstcw
out
inc
call
out
push
jbe
push
dec
out
inc
ds
adc
inc
test
jge
mov
jmp
and
and
cltd
lock
adc
rclb
cmpsb
mov
test
cld
repnz
jb
jmp
pop
mov
fwait
loop
xor
les
je
jecxz
bound
faddl
xor
neg
pop
dec
push
outsb
cwtl
sahf
outsb
or
dec
shll
mov
in
fucomp
das
test
rolb
and
cmp
js
cli
mov
negb
mov
jo
loopne
inc
push
add
mov
mov
sbb
pop
test
xchg
lods
shlb
pusha
dec
xchg
xor
mov
mov
aam
xchg
sti
xor
jg
mov
mov
stc
pop
ja
dec
filds
mov
cmp
push
sub
adc
add
mov
pop
add
in
push
std
mov
cwtl
or
adc
pusha
cs
or
in
jne
add
jecxz
scas
in
leave
lret
jg
ss
mov
mov
push
mov
jmp
imul
sbb
mov
mov
xor
mov
test
cmp
cmpsb
sbb
jae
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
fiadds
insb
sbbb
inc
popf
lds
movsl
outsb
or
rclw
hlt
xchg
xchg
mov
ss
loop
int
in
mov
cmpsb
mov
xchg
in
pushf
jg
cmpsb
and
sub
xchg
shrl
and
add
clc
xor
js
in
xor
and
sahf
bound
popf
je
mov
dec
mov
nop
mov
shlb
jl
mov
mov
inc
sti
bound
push
and
adc
std
mov
lock
mov
sbb
lods
and
aad
xchg
push
xor
subl
repz
push
add
jno
cmp
sub
lcall
push
add
ja
aam
lods
ljmp
inc
xchg
dec
shll
jmp
cmp
fdiv
loopne
jae
nop
push
mov
outsl
and
inc
fs
jne
xchg
popa
adc
lds
fcomi
inc
stos
les
add
dec
xor
rclb
xchg
adc
adc
stos
aaa
arpl
pop
or
aam
scas
dec
frstor
lods
mov
dec
call
jmp
xchg
in
fcomi
bound
cmp
mov
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
divl
jle
jg
jle
pop
xor
push
sahf
add
popa
adc
jecxz
cmp
cmp
jmp
ss
sub
cmp
dec
jb
mov
and
inc
enter
mov
icebp
shlb
fiaddl
test
scas
js
shl
repz
push
mov
pop
aam
divb
mov
add
xlat
shlb
jmp
cmp
sub
sti
ja
add
icebp
or
adc
xchg
out
loope
dec
rorb
cmpsb
and
jecxz
cmp
repz
sbb
or
cld
dec
push
jns
subl
cmp
push
lahf
fs
inc
or
repz
push
mov
dec
lret
adc
adc
or
xor
mov
fiadds
mov
fucom
icebp
imul
push
in
dec
sti
lret
fnstsw
mov
or
mov
cwtl
xchg
jmp
xor
xor
inc
in
pop
lret
in
pop
dec
push
iret
in
xchg
popa
sub
hlt
aas
pop
push
adc
cmc
in
mov
das
lahf
leave
mov
adc
and
sbb
sub
jl
mov
aaa
push
out
mov
mov
sub
fs
decl
hlt
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
adc
outsb
shr
sarb
jg
jle
call
lods
cmp
data16
cli
push
push
lea
jl
stc
and
or
loope
push
mov
daa
adc
inc
or
mov
cmp
imul
mov
jp
and
pop
jae
out
mov
jle
sub
and
adc
mov
sbb
push
mov
ljmp
inc
pop
je
jmp
push
test
aas
inc
pop
xlat
add
mov
loopne
out
sbb
orl
mov
shrl
xor
nop
add
pop
add
or
pushf
push
into
call
xchg
dec
pusha
inc
test
in
jmp
loop
jmp
dec
fadds
inc
mov
fmull
insl
imulb
mov
cld
int
loope
push
ss
orl
mov
xchg
test
cmp
inc
mov
or
jmp
in
in
dec
dec
cmp
jne
xchg
repnz
cmp
cmpsb
xor
cmpsb
pushf
cmpsb
sub
mov
cmp
inc
testl
or
cmp
in
jp
mov
sbb
or
shll
dec
js
inc
mov
push
in
add
pop
cmp
fsubrp
mov
jl
add
jae
cmp
cli
vpaddw
incl
push
fwait
jl
sarl
jg
jle
addr16
mov
xchg
xchg
push
loope
adc
cmp
iret
ror
data16
je
push
icebp
cmp
outsb
jb
ret
dec
lgs
jecxz
fldenv
jno
dec
icebp
popa
movl
cltd
mov
mov
call
jp
or
int
mov
mov
leave
imul
pop
outsl
stos
pop
push
or
cwtl
cmpxchg
jmp
pop
rorb
jbe
fstps
out
pop
mov
addr16
repnz
loopne
adc
or
cmpb
fiadds
sbb
fcomi
daa
push
and
lahf
dec
roll
test
in
sbb
cmp
imul
add
push
and
cmp
rcrl
sub
lret
inc
dec
scas
stc
push
ret
and
push
mov
mov
cltd
rcrl
xchg
jne
mov
and
mov
cmp
mov
jecxz
mov
out
dec
mov
jmp
inc
inc
push
jae
ds
fisubs
in
cld
insb
xor
xchg
mov
jl
sbb
mov
jnp
dec
sbb
adc
movsl
push
inc
iret
shlb
and
loopne
sub
lods
pop
cmp
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
repz
sbb
jle
jg
jle
sub
mov
or
push
xchg
sub
icebp
dec
sbb
pop
jno
ficompl
jae
les
sbb
jne
mov
sub
pop
push
ficoms
xlat
pop
cmp
jo
popf
and
or
loope
xchg
dec
ret
dec
or
rcr
fsub
push
jecxz
pusha
popa
push
push
sbb
dec
stc
inc
mov
das
sti
dec
sti
mov
adc
lock
ret
mov
xor
add
lahf
fwait
bound
sub
jb
mov
js
aas
test
out
mov
cmp
mov
insl
adc
in
mov
out
xchg
repnz
cmp
out
in
repz
mov
in
cmp
mov
add
xchg
dec
mov
xor
or
and
or
dec
xchg
jecxz
inc
mov
js
cmp
push
sbb
outsl
pop
lahf
xor
hlt
fisttpll
inc
add
inc
sbb
mov
bound
sbb
xor
pop
in
in
cmpsl
cmp
ds
lcall
call
mov
pop
loope
pop
sti
lods
ficoml
bound
mov
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
xor
pop
push
cltd
les
sarb
jle
pusha
pop
mov
addb
and
popf
stos
or
dec
inc
push
and
add
test
les
lds
int3
stc
mov
push
push
dec
insb
inc
nop
jmp
inc
mov
xchg
icebp
pop
cmc
adc
jns
ss
dec
jge
js
add
daa
xor
enter
push
mov
mov
andl
gs
xchg
sbb
xchg
addr16
aaa
aad
mov
sbb
cmp
and
rcrl
in
pop
cs
lahf
adc
lahf
push
loopne
add
xchg
adc
xchg
addr16
daa
mov
pop
sbb
ffree
jg
ljmp
orb
pop
mov
mov
ds
push
xchg
js
jle
jo
inc
lods
cmpsl
xor
cli
inc
push
add
arpl
shll
add
inc
sub
call
add
xchg
add
cwtl
and
notl
lods
ljmp
fcmovnbe
pusha
and
pushf
insl
imull
jbe
adc
jb
or
push
xchg
pushf
les
pop
stos
or
aam
pop
xchg
aas
int3
shrl
cmpsl
xchg
lds
mov
lock
fildl
cmpl
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
mov
lds
sarb
jle
jb
jbe
mov
sti
cmp
imul
ret
popf
and
mov
shlb
dec
test
insl
fidivl
inc
fisubs
xchg
es
mov
rcrl
or
add
negb
xor
fiaddl
popf
inc
std
mov
dec
sbb
out
mov
in
jmp
push
or
test
jnp
leave
dec
cmpsb
inc
mov
loope
jnp
mov
scas
cmc
movsl
jnp
jg
call
shr
jae
out
xchg
cs
fdivs
dec
sub
cmp
xor
jnp
cmc
in
rorb
out
cli
xor
lock
mov
fldl
int
rcrb
fisttpl
lds
popf
mov
subb
inc
sub
and
inc
jns
and
add
fidivs
inc
das
push
insl
xor
popa
in
mov
sub
jecxz
imul
stc
mov
sub
dec
push
push
adc
adc
mov
rorb
fmulp
repnz
inc
push
rol
pop
cmc
mov
add
das
push
rcrb
push
adc
hlt
bswap
mov
or
mov
cmpl
negb
data16
inc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
lcall
jle
sarb
jle
sub
outsb
xchg
jmp
ret
ds
inc
mov
movsb
xchg
sahf
sbb
and
fcoml
cmp
shrb
mov
push
add
adc
mov
stos
cmp
mov
push
adc
pop
mov
test
roll
cmp
sbb
outsb
adc
xchg
or
flds
xor
fisttpll
fs
test
cmp
fucomi
jb
lods
mov
cwtl
dec
dec
jmp
out
and
adc
sbb
and
cs
or
and
push
je
loopne
rcrl
add
or
inc
or
push
cwtl
mov
push
call
clc
inc
push
jmp
out
pop
div
test
push
and
add
pop
lahf
add
mov
jae
jge
fcmove
mov
stc
adc
sbb
jmp
dec
es
pop
push
lahf
movsb
push
loop
mov
fwait
jl
aas
or
xchg
mov
popf
pop
jl
jl
dec
fsubrl
sbb
pop
icebp
dec
mov
shlb
rcll
scas
sbb
mov
add
sub
cmc
mov
popf
imul
cmpsl
push
and
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
jo
mov
fdivrs
sarb
jle
fwait
data16
incl
jo
or
movsb
jge
nop
inc
adc
jns
insb
mov
mov
sbb
outsb
enter
imulb
subl
loope
aad
sarb
mov
shrb
mov
dec
adc
mov
lock
dec
in
fildll
xor
data16
sbb
xchg
fucomi
rorl
out
int
clc
sbb
inc
pop
cmp
daa
lods
shlb
call
repnz
mov
mov
jnp
imul
je
pop
xor
or
or
fildl
mov
jmp
mov
adc
xchg
dec
push
push
movsl
fbld
lods
sbb
pop
dec
inc
cwtl
xor
push
pushw
std
mov
jmp
int3
imul
rcl
cwtl
int
mov
popa
out
lret
fcompl
cmpsl
sbb
mov
aaa
insl
pop
fs
orl
lahf
xchg
push
mov
outsl
sub
out
push
incl
dec
std
sbbb
add
movsb
push
cmp
mov
mov
push
ljmp
call
test
cmp
cmp
sub
sti
leave
in
mov
add
out
add
idivb
inc
in
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
xor
into
in
dec
ret
and
in
hlt
jb
fisttpl
push
pop
adc
jmp
popa
pop
in
popf
mov
adc
dec
xchg
xor
mov
imul
sbb
add
lret
mov
xor
mov
movsl
xchg
xor
push
mov
xchg
data16
ljmp
jp
sub
sbb
adc
call
leave
repz
popf
test
sub
fdivrs
push
xchg
jmp
sbb
xchg
rolb
sub
movsb
mov
mov
xchg
dec
sub
inc
orl
loop
cwtl
enter
aam
or
cmp
add
call
mov
add
mov
divl
lcall
stos
shll
popf
push
icebp
ljmp
mov
fwait
cmp
loope
into
push
das
mov
aaa
loope
cmp
jmp
test
in
mov
xor
add
addr16
int
jno
into
push
xchg
push
mov
stc
rcr
mov
insb
xor
ror
out
mov
movsl
hlt
xchg
cld
xchg
pop
cmp
repnz
lret
lahf
mov
sti
lret
jp
xor
jbe
jae
fimuls
fisttps
or
shr
add
add
fldl
fstpl
inc
inc
jmp
push
sarb
jle
data16
pushf
sahf
scas
push
sbbb
stos
inc
adc
call
jb
divl
movsl
xchg
sbb
inc
dec
push
test
bound
shll
in
mov
sub
negl
fistpl
test
lret
jbe
mov
dec
scas
adc
cld
xor
mov
sub
hlt
rclb
out
stos
sahf
dec
mov
xchg
adc
jmp
push
inc
loop
ja
dec
fs
mov
adc
push
mov
pop
dec
outsb
pop
fwait
cmpsl
dec
shr
test
js
data16
inc
push
mov
cmp
or
pop
movsl
sarb
mov
fs
cmp
sub
xchg
jg
sub
jae
outsb
dec
pop
add
out
lods
push
xchg
fcoms
shll
mov
jbe
pushl
adc
mov
xchg
pop
xchg
test
jl
rolb
and
int
inc
orl
mov
xchg
mov
sub
ss
sub
leave
rclb
imul
sub
xchg
loope
clc
add
push
jno
cmc
cmp
dec
subl
inc
dec
sub
daa
xchg
add
xor
ljmp
movsb
lods
and
fs
lret
fwait
adc
ficompl
push
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
dec
add
es
fdivrl
push
jo
jle
adc
or
loope
pusha
in
mov
mov
nop
mov
mov
ss
mov
mov
std
into
sti
adc
push
into
arpl
jbe
repz
cmc
cmp
int3
push
aad
inc
and
ss
fcomip
jle
adc
push
loop
and
cmc
lcall
cld
pop
or
lods
aas
in
flds
add
mov
in
push
hlt
inc
or
sbb
dec
pop
ss
popa
clc
cmp
inc
add
les
dec
fwait
jmp
in
rolb
fdivrp
adc
in
leave
push
repnz
mov
leave
scas
mov
jo
ret
rolb
ret
adc
xchg
decl
loope
mov
adc
pop
test
mov
push
jmp
mov
and
mov
mov
lods
pop
leave
pusha
mov
dec
stc
stc
cmp
rorb
add
push
inc
inc
pop
js
sub
jbe
cmpsb
pop
add
inc
xchg
pop
or
xor
jbe
mov
repnz
mov
pop
or
dec
push
arpl
incl
dec
insl
cmpsl
jo
ss
mov
push
mov
leave
cs
icebp
jae
incl
jle
push
mov
inc
push
dec
cld
jno
and
jnp
push
jl
loopne
ret
sub
scas
xchg
mov
shrl
repz
xchg
pop
push
adc
cmp
fwait
cmpsb
push
fiadds
icebp
inc
pop
cmpsl
push
mov
loop
sub
xchg
xchg
movups
mov
stos
mov
mov
jns
lret
cmpsb
popf
mov
sub
lret
xchg
pop
sbb
add
mov
mov
mov
push
lcall
jae
cld
out
jmp
cmpsl
jge
mov
xchg
int3
or
ds
fisttps
in
lods
loop
aam
inc
mov
cmp
rorb
xor
aas
mov
aas
jno
cmp
xchg
lcall
rcrb
jp
push
ret
or
dec
mov
std
cmpb
mov
pusha
mov
inc
and
out
ja
sti
sbb
in
mov
fcoms
aad
mov
loopne
std
mov
divb
pusha
mov
jbe
inc
negb
mov
es
add
pop
int3
lods
roll
cmp
lret
enter
cmp
cmpsl
movsl
pop
test
jnp
jecxz
mov
aam
pusha
movsb
sbb
loopne
push
or
ja
cmp
push
pop
out
je
fisttpll
dec
add
xchg
mov
inc
in
sarb
div
mov
and
jmp
out
xchg
imul
fnstenv
nop
inc
fistpll
push
jo
jle
mov
mov
loop
loopne
int3
and
mov
mov
add
lea
pop
iret
imul
cmc
jp
mov
xchg
xor
sub
push
fcmovbe
xchg
roll
push
in
in
cld
je
testb
dec
cli
negl
test
xlat
es
mov
ljmp
sbb
mov
addr16
xchg
mov
pop
ret
loope
test
fwait
adc
outsb
in
std
sbb
inc
pop
xchg
bound
and
or
loopne
das
add
mov
or
std
xor
inc
in
push
test
jmp
ljmp
in
push
dec
addb
enter
push
loope
outsl
jle
mov
and
xchg
shl
pushf
and
xchg
cmp
mov
fadds
out
es
sub
jmp
int3
das
adc
lea
addr16
pop
repz
orl
dec
lods
insl
mov
jg
push
xor
adcl
decb
cli
dec
dec
imulb
mov
xchg
cwtl
adc
scas
imulb
sti
jg
push
xor
div
cwtl
fwait
pop
cmp
bound
mov
lea
cmp
loope
out
push
xor
sbb
push
pop
iret
mov
ffree
push
dec
push
int3
fldt
int3
std
dec
jno
and
repnz
lock
and
adc
ja
dec
xor
cmp
add
dec
addr16
into
aaa
mov
adc
movsb
data16
sbb
shrl
sub
mov
sub
push
jmp
mov
pushf
adc
adc
repnz
insl
push
out
mov
jae
movsl
daa
fidivrs
ror
mov
rclb
outsl
repz
in
pop
adc
add
fists
jg
fs
adc
adc
cmc
sbb
dec
aad
fstl
jb
repnz
cmp
push
mov
adc
in
loopne
ret
mov
cltd
jl
add
add
add
into
sub
jbe
jmp
gs
sub
xor
iret
imul
shlb
cwtl
inc
push
fdivrl
adc
inc
out
sbb
and
pop
jle
inc
inc
mov
imul
les
fisttpll
ljmp
insl
sahf
mov
in
mov
xchg
mov
fwait
popa
mov
jno
icebp
loopne
fcomps
loope
fidivrl
aas
test
and
fimuls
sbb
cmc
andb
push
orl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
stos
pop
outsl
movsb
movsl
sarb
inc
jg
jle
imul
roll
stos
cs
mov
jp
or
int3
out
and
aam
cli
mov
ret
cmp
mov
xchg
pop
mov
data16
jne
pop
cld
lds
lds
hlt
xor
pop
shll
mov
in
pop
and
shl
mov
rol
fidivrl
jo
jge
jnp
in
push
enter
xchg
cmp
mov
pop
xchg
inc
mov
in
sbb
dec
jbe
stos
jge
adc
hlt
xchg
pop
jge
add
mov
sub
xchg
clc
fs
jge
mov
iret
gs
jge
das
xchg
cs
cwtl
sbb
pop
push
adc
mov
in
jp
jbe
adc
ljmp
sub
mov
sub
imul
rol
sbb
mov
jns
xchg
or
sbb
cmpsl
stc
push
ds
mov
lock
fs
jo
mov
cld
mulb
and
stos
jne
inc
cwtl
push
adc
pop
xchg
jl
pop
dec
jge
lods
aam
ljmp
pusha
dec
jp
fcmovu
aaa
inc
pop
sub
or
scas
mov
sub
js
fsubs
lret
jnp
stos
dec
cltd
jno
call
cs
repnz
pop
and
xor
ret
xor
lret
fdecstp
loope
mov
inc
stos
mov
push
out
les
popa
cmp
cli
add
repnz
insl
xor
out
dec
sahf
dec
movsb
fiaddl
aam
sbb
cmp
add
inc
mov
cmp
push
ds
repz
adcb
sbb
popf
jb
add
add
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
sti
xchg
add
mov
jle
inc
jg
jle
adc
pop
mov
ds
add
sub
push
ljmp
mov
loopne
mov
sbb
cs
sub
push
jge
out
data16
divb
aaa
bound
xchg
movsb
ss
stos
addr16
inc
push
jae
mov
pop
mov
pop
pop
jmp
cmp
lret
pop
pop
sub
imul
pop
push
xor
push
lods
arpl
sbb
es
subl
pop
stos
mov
pop
inc
mov
xchg
sbb
mov
jne
xor
in
xchg
int
mov
sbb
cltd
enter
lret
daa
mov
jnp
and
dec
xor
adc
mov
outsl
push
xchg
scas
pushf
xchg
out
jg
fs
pop
adc
cmp
cmp
ret
scas
sahf
inc
sbb
mov
fsubr
sbbl
xchg
push
nop
inc
test
inc
cld
mov
mov
cmp
adc
rolb
sbb
ljmp
divl
pop
mov
lds
ds
sbb
xor
push
xorl
add
jno
dec
jne
push
adc
ss
push
insb
dec
sub
subl
inc
dec
in
add
pop
and
scas
push
lahf
mov
sbb
xchg
cmpsb
rcrl
enter
filds
add
lods
push
lret
jmp
and
inc
mov
xor
xchg
dec
mov
pop
jg
outsb
or
lock
out
sub
insb
roll
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
xchg
fwait
or
shlb
push
sarl
push
shrb
je
inc
shr
scas
xor
jl
jnp
fsubl
mov
in
adc
cmp
es
es
mov
push
mov
jo
mov
sub
movsl
pop
cmp
sbb
popa
add
inc
imul
into
sbb
cmc
lahf
xchg
adc
and
pop
loope
mov
mov
mov
sarb
int
or
inc
pusha
jno
iret
repz
sub
ret
shrb
sahf
pushf
jp
add
xchg
fsts
mov
add
cmp
dec
jge
popa
movsl
xor
std
movsl
xor
lods
cwtl
adc
inc
pop
fadds
jno
outsb
inc
pop
ud2
mov
es
mov
mov
sti
xchg
xchg
dec
loop
cmpsb
adc
lret
dec
imul
das
jecxz
scas
fmull
cs
iret
sub
push
add
mov
sub
inc
rol
or
sub
mov
enter
cld
jge
jg
push
add
and
pop
out
pop
mov
dec
insb
add
ja
pcmpgtw
iret
iret
pop
sub
jge
ds
push
lods
fcompl
push
aas
add
data16
pop
jp
lcall
dec
lock
xchg
dec
lea
ss
outsb
xor
inc
or
imul
fbld
lahf
stos
lret
shll
jb
add
fmul
insl
movsb
jnp
push
and
xchg
xorl
je
loop
sub
movsl
and
push
xchg
push
sarl
iret
arpl
mov
in
popl
jno
out
insb
icebp
xchg
sahf
ja
lods
and
pop
adc
sti
jo
pop
adc
sub
jle
and
out
mov
jno
push
cmpl
loope
in
mov
or
into
xchg
das
mov
mov
fisttps
add
jno
loope
mov
jecxz
nop
movsl
sub
in
xchg
lahf
pushf
add
je
inc
js
dec
mov
jg
inc
ja
or
inc
mov
movsl
insb
lea
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
out
jns
call
jle
adc
scas
nop
sbb
mov
and
sbb
fnclex
add
aam
or
adc
or
add
push
sbb
mov
or
imul
sti
cld
stos
sub
loopne
out
rol
push
or
pop
xchg
mov
pusha
sub
ret
sbb
xchg
out
lret
xchg
xchg
vphaddbw
xor
push
cmp
dec
jl
mov
push
pushf
int
les
fwait
imul
push
out
incl
sub
sahf
jno
push
lods
in
xchg
mov
inc
aas
lahf
rolb
cmp
sub
sbb
mov
sbb
rol
jle
das
add
call
adc
mov
fsub
int
cmp
push
sub
xor
sbb
push
or
in
add
lret
push
xchg
dec
and
xchg
dec
mov
jbe
push
pop
push
sbb
push
xor
cmp
add
addr16
mov
inc
cmp
adc
xor
sub
inc
jns
addr16
rcl
mov
in
dec
jp
cmp
mov
cmp
ds
cmpl
in
push
push
stc
pushf
jno
inc
aas
cmpsl
pop
or
cmc
push
repz
sub
fdivr
ljmp
jecxz
lret
or
push
mov
out
rcrl
xchg
sub
jle
xor
add
fsubrs
jg
xlat
dec
mov
push
xchg
push
fmull
lods
jns
outsl
insb
fs
pop
cmp
lret
icebp
iret
test
jbe
push
sub
adc
leavew
xchg
xor
xor
lahf
out
lahf
sub
into
mov
scas
insl
push
cmpsl
ret
dec
mov
mov
pop
out
pop
mov
call
cwtl
nop
rcl
lret
lods
sub
or
adc
incb
nop
xchg
loopne
pop
inc
push
sbb
xchg
xchg
out
mov
mov
sub
fsts
mov
dec
movsl
loope
out
dec
inc
insb
cmp
out
std
dec
add
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
scas
mov
adc
jg
jle
aas
sub
imul
lret
mov
loopne
lcall
push
or
push
cmc
jnp
sbb
push
cwtl
add
cs
sahf
sahf
and
lock
pop
push
mov
rol
call
push
and
daa
mov
mov
jl
jns
pop
add
sub
shl
pop
mov
fwait
xchg
loop
sahf
scas
sub
lods
subl
xchg
inc
jg
pop
adc
and
push
and
lret
mov
lret
lahf
andb
xchg
loopne
imul
int
cli
fucomi
push
ss
cli
lahf
sahf
fidivl
fiaddl
daa
iret
aaa
fmuls
mov
dec
adc
mov
lods
push
ss
push
or
mov
insl
aad
push
fs
cltd
pushf
in
mov
dec
je
fisubl
dec
jb
and
inc
test
push
jp
popa
call
hlt
jns
add
push
sub
cltd
add
xor
sbb
fisttps
fucomp
mov
rcll
addl
cmc
cs
aad
pop
cmp
xor
sbb
lahf
mov
addr16
jnp
cmp
pop
subl
push
add
sbb
pop
movsb
lock
int
cmp
divb
movsl
repnz
cmp
mov
scas
cmpsl
add
sub
inc
xchg
mov
mov
mov
cs
xchg
mov
std
push
js
aad
sbb
xchg
sub
xor
insb
and
sub
xchg
jle
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
jae
push
lret
jae
jle
pop
jg
jle
mov
fsts
xor
xlat
call
outsb
insl
pop
xor
js
in
mov
jno
sbb
xor
das
add
pop
pop
xchg
xor
sti
cmp
js
xchg
out
outsl
mov
cmpsl
sbb
sbb
lahf
das
pusha
mov
lret
mov
dec
dec
and
in
fsubrl
push
adc
pop
ret
ret
jp
add
fidivrs
std
mov
and
mov
inc
sti
dec
les
fisubrl
rolb
bound
stos
mov
xchg
daa
stos
mov
addl
sbb
sub
sub
and
inc
dec
add
fldenv
fldcw
stos
mov
mov
cwtl
mov
push
idivb
insb
lcall
ret
mov
in
cltd
nop
push
or
in
leave
lahf
mov
xchg
in
or
xchg
imul
int
push
rolb
fdivrs
jle
insb
fistpl
out
pusha
pop
sbb
xchg
dec
ljmp
clc
xchg
mov
xor
mov
les
jle
cwtl
ror
jne
pop
dec
jmp
inc
icebp
push
dec
aam
xchg
mov
and
addr16
test
xor
push
out
daa
pop
ret
arpl
mov
jns
js
enter
mov
dec
cmpsb
gs
jo
imul
sub
and
dec
xor
and
ss
daa
rclb
jl
xchg
mov
jo
add
das
xor
fsubs
and
cmp
pop
rcll
dec
test
sub
in
and
cwtl
xor
or
or
ljmp
aad
cmp
and
loopne
mov
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
ret
push
out
jle
pop
jg
jle
test
arpl
call
cmc
stos
icebp
jecxz
pop
icebp
mov
stos
adc
pop
loope
jae
pop
xchg
xor
imul
shrb
sbb
das
repnz
js
loope
mov
sub
xchg
or
sbb
into
sub
mov
dec
ret
mov
nop
fdiv
ret
pop
into
jp
ss
ss
jns
jle
xchg
mov
xchg
stc
int
cmp
dec
js
cli
dec
xor
sbb
inc
sub
jno
in
lods
pop
pop
push
dec
cmpsb
pop
pushl
mov
xchg
testb
xor
push
jnp
sub
loopne
scas
lret
mov
cmp
adc
inc
add
jle
dec
jg
or
xchg
fsubp
dec
data16
jb
sbb
rcrb
pop
out
push
adc
pop
call
dec
loop
jae
jecxz
aam
sub
pop
inc
sub
imul
call
inc
cld
mov
clc
in
loop
roll
ret
dec
jmp
enter
aad
shll
inc
popf
mov
dec
cmp
filds
mov
pop
cmp
or
lahf
mov
lahf
repz
aaa
cwtl
loope
outsl
mov
jb
std
cmp
pop
mov
imul
adc
or
fsubrl
popf
or
pop
mov
shlb
jb
das
stos
adc
lock
xchg
data16
mov
cltd
leave
addr16
adc
js
pop
jecxz
dec
repnz
add
xchg
movsb
insb
mov
mov
sub
les
push
pop
and
frstor
hlt
adc
adc
jp
adc
push
sbb
icebp
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
cmpsl
aad
mov
jg
jle
movsl
into
sti
lcall
pop
rcrb
push
ror
call
and
push
shll
out
sub
sarl
data16
mov
sub
or
or
add
js
jb
mov
push
push
mov
and
mov
pusha
fwait
inc
adc
push
sbb
and
int3
add
sbb
iret
jnp
sbb
cmp
mov
or
lds
jne
stc
pop
js
das
test
addr16
test
mov
rolb
mov
and
repnz
clc
mov
cwtl
jg
mov
mov
dec
mov
popf
xor
dec
add
mov
cld
sub
cmp
les
lret
aam
cmpsb
cmp
cld
or
adc
sti
adc
outsb
stos
inc
cmp
shrl
sub
aam
leave
aaa
cmp
insb
test
cmp
and
out
mov
add
push
popa
ret
add
adcl
push
inc
jle
dec
inc
mov
ficoms
mov
nop
cli
jle
dec
into
sub
inc
test
mov
fnstcw
lret
test
ja
in
push
push
jge
inc
lahf
xorb
push
add
sub
or
or
movsl
dec
cmp
pop
pop
stc
dec
or
sub
cmpsb
iret
mov
cmp
into
sbb
sub
cmp
pop
vpmacswd
pusha
popa
ret
mov
ss
scas
push
add
add
sub
fstl
lret
jno
out
pop
cmp
arpl
roll
push
lahf
mov
lea
sub
aas
xor
cmp
cli
mov
ret
cmp
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
fstps
pop
nop
add
push
lock
enter
sbb
movsb
lds
inc
imul
movsb
insl
iret
sub
icebp
jbe
jbe
push
ficompl
pop
and
jecxz
adc
ret
xchg
inc
inc
inc
das
into
fdiv
mov
adc
jl
das
mov
jmp
cmp
stos
outsb
flds
sbb
xchg
scas
shlb
lods
cmp
inc
mov
fs
gs
arpl
inc
push
jne
cmp
inc
jns
mov
les
jb
xor
and
xor
incl
cmc
cmpsl
pop
jns
mov
push
es
jns
mov
dec
imul
xchg
cmp
shl
cmc
insb
lret
sub
cli
cmp
sbb
pusha
scas
fists
fcomps
imul
and
mov
jle
cmp
cmp
inc
adc
and
pop
push
jne
or
fists
lock
fcmovbe
mov
xchg
inc
push
adc
push
lahf
cltd
cmp
clc
dec
lods
in
sbb
add
int3
sbb
movsl
fisttps
and
and
sbb
mov
sbb
pop
jne
fsubr
adc
sarl
repz
sbb
xchg
xor
or
xor
movsb
xchg
repnz
inc
in
mov
popa
pop
inc
dec
stc
ss
fstpt
push
out
pop
mov
aas
sbb
lods
outsb
xor
mov
dec
test
dec
dec
inc
shl
dec
sub
addr16
andb
xchg
or
into
dec
mov
and
pop
or
adc
xchg
mov
mov
cmp
mov
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
aad
movsl
sar
in
jle
jg
jle
jl
mov
enter
xchg
fildl
xchg
mov
pop
sub
outsb
cs
scas
outsb
jmp
lret
push
dec
xchg
testl
dec
and
fidivrs
push
cld
aad
imul
cs
xor
xchg
jp
mov
pop
adc
xchg
mov
inc
inc
fadd
stos
mov
cmp
ret
and
adc
dec
adc
cld
mulb
push
jg
sbb
pushf
shll
jecxz
add
push
push
push
and
xchg
mov
cs
xor
fwait
inc
gs
xor
dec
out
jb
lock
pop
lret
sub
out
shll
test
push
lds
mov
push
adc
mov
pop
shlb
insb
nop
or
inc
inc
ljmp
or
xor
jecxz
adc
pop
iret
jmp
lret
iret
std
subl
push
adc
adc
testl
pop
mov
or
adc
stos
push
adc
out
pop
iret
ja
rclb
adc
stos
insl
test
in
aad
dec
push
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
jmp
mov
jg
jle
adc
lds
add
outsb
stc
or
push
repz
out
mov
aas
xor
test
sub
mov
ret
dec
shr
cmpsb
mov
mov
and
sub
int
icebp
aas
pusha
test
jle
arpl
mov
sahf
int3
mov
ds
dec
pop
jbe
pop
adc
inc
cmpsb
dec
mov
mov
push
dec
sub
pmullw
js
adc
pop
in
aaa
cmp
test
mov
push
mov
lock
cmp
jg
arpl
idivb
mov
inc
das
push
adc
xchg
insl
mov
clc
testb
add
or
int
sub
mov
adc
xchg
sub
jg
das
movsb
or
pop
in
ljmp
sbb
add
sbb
mov
loop
decl
mov
xorl
push
ljmp
mov
jmp
xchg
push
out
xorl
push
cs
testb
add
add
inc
add
add
add
xor
pop
xchg
lods
mov
inc
jge
jle
aas
jg
jle
inc
hlt
mov
lahf
js
enter
mov
in
sbb
sub
lret
cmp
adc
xor
fiaddl
sti
push
ja
xchg
scas
inc
sub
dec
pushf
fdiv
and
push
sub
pop
enter
jge
je
jne
imul
test
sub
or
loopne
cmp
jg
sub
push
sub
push
insb
ljmp
bnd
inc
adc
cmp
and
jb
mov
insl
mov
pop
sbb
adc
sub
lea
sbb
fadds
enter
divl
aad
cmpsb
shlb
stos
sti
ret
invd
stos
int3
loope
pop
outsl
mov
sub
xchg
mov
das
ror
stos
and
mov
ds
fs
nop
ret
lret
fldt
and
iret
popf
jmp
hlt
subb
fnstenv
cmp
jmp
jbe
ja
lret
call
sub
and
xchg
lds
testb
add
cmp
stos
out
mov
lret
add
cmp
xchg
fisubl
jb
jmp
sbb
in
imul
cli
shrb
cmp
out
mull
xchg
insb
xchg
lret
in
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
addb
aas
idivl
clc
jle
aas
jg
jle
mov
mov
ret
sub
cmp
and
aam
jmp
mov
popf
dec
cmp
pop
jecxz
xor
les
je
pop
sbb
hlt
mov
cmp
imul
daa
dec
xor
lds
lds
add
jle
xchg
popa
popa
jecxz
loop
mov
icebp
push
cmp
jmp
xchg
jg
mov
mov
test
mov
out
dec
ja
inc
lahf
sub
mov
and
sub
in
push
ss
xor
dec
decl
cli
cmc
mov
cwtl
paddb
xchg
ds
add
enter
loopne
mov
loop
jl
dec
cmp
movsb
mov
in
pushf
int3
subps
jle
outsb
pop
cmp
push
lods
outsb
inc
mov
in
dec
or
or
aaa
jae
pop
mov
cmpsb
ljmp
mov
lahf
mov
sub
cltd
pop
mov
push
ret
xchg
insl
test
inc
into
mov
push
cmpsb
push
cmpsb
xor
inc
outsl
lcall
mov
and
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
or
jle
aas
jg
jle
adc
fcoms
int3
notl
inc
ds
outsl
lcall
sbb
sub
aam
xchg
or
jg
ss
mov
or
imul
jmp
jmp
dec
lahf
mov
inc
xchg
cltd
sub
lods
xor
bound
inc
and
add
sub
add
filds
and
fnsave
jmp
and
les
loope
mov
xor
mov
xchg
cmp
test
push
xor
aam
or
dec
sub
mov
xor
push
insb
push
or
test
sbb
fldl
pop
jno
std
add
mov
jp
xor
mov
jo
std
push
data16
xchg
pop
mov
popa
subb
sub
les
outsl
insb
dec
xorl
outsl
pop
add
mov
fwait
cmp
dec
mov
jle
fldenv
xor
mov
cmpsb
stc
mov
stos
inc
imul
loope
jle
push
cs
out
mov
sub
inc
sub
cmp
inc
xor
inc
or
mov
loop
fimuls
jo
adc
roll
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
push
and
xlat
mov
jle
aas
jg
jle
add
cmp
pop
out
out
cwtl
xchg
ljmp
dec
aam
jo
fistpl
push
sarl
or
add
iret
fsub
sahf
lods
push
xor
dec
ljmp
rorb
shl
das
pusha
nop
adc
sarb
shl
jne
scas
repz
add
push
pop
jbe
adc
dec
jo
addr16
or
imul
sub
adc
dec
adc
and
and
aas
mov
ljmp
js
shr
shl
scas
push
mov
sbb
xor
xchg
mov
adc
push
inc
shrb
je
arpl
sub
inc
insl
test
fcmovnu
mov
shr
and
mov
fdivrs
xor
shll
jge
into
paddd
loope
lret
and
lea
mov
xchg
jo
movsl
lahf
push
pop
inc
push
hlt
dec
push
pop
popf
in
pop
sub
sub
mov
cltd
jle
nop
mov
repz
mov
cmp
or
cwtl
cmp
in
aaa
mov
cmp
outsb
mov
rcr
stc
and
dec
or
add
add
add
lods
dec
insl
jge
popf
mov
scas
scas
cld
mov
jle
jg
jle
inc
push
adcl
mov
rcrb
jo
subl
ret
out
cs
mov
inc
cli
add
mov
dec
sub
dec
and
push
testb
clc
push
leave
lahf
jmp
push
cmp
into
push
gs
sbb
xor
push
jae
adc
jle
cmp
arpl
mov
shr
push
mov
jge
pop
jno
dec
pop
insl
test
movsl
xor
inc
mov
mov
daa
and
ret
pop
cwtl
jg
add
xor
add
lret
lock
add
add
js
dec
inc
push
out
add
or
inc
inc
mov
loop
jge
mov
aas
mov
push
cmp
or
test
push
xchg
sbbb
push
ja
pop
jns
add
fwait
and
rorl
xchg
aas
ficoml
lea
and
mov
jecxz
or
xchg
je
cmp
lds
mov
cmp
into
in
fmull
leave
sbb
mov
mov
int3
in
shlb
sbb
dec
pusha
sbb
pop
xor
adc
jo
lahf
or
adc
dec
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
add
jle
aas
jg
jle
mov
andl
int3
mov
inc
pop
inc
flds
test
jne
jmp
adc
sub
lret
mov
ret
adc
mov
xor
mov
jmp
mov
cmp
push
cmp
movaps
int
push
ror
sbb
pop
movsl
jo
mov
mov
sbb
outsl
mov
mov
enter
mov
mov
add
sti
push
jae
and
lods
test
int
lret
jne
test
xchg
lods
fwait
and
mov
gs
popa
out
js
or
outsb
ja
inc
fsubs
push
hlt
mov
push
add
call
into
insl
shrl
cmp
sti
pusha
jbe
cmp
add
lahf
aad
les
add
push
scas
sub
daa
rcrb
mov
les
mov
cltd
jnp
sarb
dec
daa
sub
mov
movsl
rorb
dec
xor
orl
cmp
test
or
lcall
fwait
xor
xchg
stos
jns
inc
sub
dec
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
inc
bound
or
lret
pop
enter
cmc
cmp
inc
out
cmp
std
cmpsl
call
adc
jl
pop
and
fdivrs
and
cli
adc
shrb
push
loop
jbe
sti
cmp
shlb
cmpsl
orb
push
sbb
fisttpll
outsl
in
push
xchg
pop
sti
sbb
xor
cmp
dec
cmp
cmc
nop
mov
ss
stc
fdivrl
fsub
nop
jecxz
xbegin
pushf
clc
stos
pop
fidivrs
arpl
ficomps
jmp
lahf
adc
int3
adc
jnp
sbb
sub
inc
mov
xchg
ljmp
cli
test
dec
sbb
jbe
fwait
in
cld
int3
add
add
lods
jl
sbb
adc
arpl
stos
jne
adc
push
mov
push
mov
and
lea
lahf
sbb
fsubl
push
iret
xor
xor
xor
movsl
mov
push
movsl
adc
mov
int
pop
lret
int3
hlt
out
push
cmp
cmc
mov
insb
push
dec
loop
inc
clc
jmp
and
and
sti
mov
jle
aas
jg
jle
ds
enter
das
aaa
mov
andb
fnstsw
ja
push
cmp
xor
cwtl
outsb
mov
pusha
pusha
sub
and
popa
jb
rclb
xchg
cmp
jge
push
fsubs
add
jae
je
pop
push
pop
or
fidivs
rcrl
pushf
mov
es
pushf
bnd
add
jle
popa
xchg
xchg
pusha
imul
imul
dec
mov
je
pop
daa
dec
add
les
push
add
cmp
outsb
push
insb
das
lods
xchg
add
shlb
mov
mov
or
push
addr16
dec
adc
mov
out
add
repnz
mov
dec
aas
lahf
pop
adc
mov
cmpsl
shrl
add
xor
xchg
jo,pt
sti
adc
xchg
mov
cltd
ss
lcall
ss
xor
int3
insb
scas
cmp
pop
mov
mov
ret
int3
or
in
bound
iret
sub
push
dec
add
in
mov
xchg
mov
or
aas
push
lods
repnz
orl
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
iret
xchg
rcr
push
out
cwtl
mov
and
mov
test
insl
imul
cmc
jmp
idivb
cmpsb
jb
push
jbe
cmc
dec
mov
adc
pop
nop
adc
sub
mov
pop
xchg
icebp
ret
pop
mov
das
mov
push
push
movsb
dec
pop
loop
pop
push
inc
mov
fbstp
push
ja
mov
lahf
cli
push
sti
sahf
push
fcmovb
adc
jecxz
add
sahf
dec
cmpsb
add
enter
mov
aas
add
jbe
mov
dec
mov
pusha
push
and
aaa
cmp
sub
lahf
push
js
in
repnz
push
test
movsb
je
lock
or
enter
mov
cmp
dec
mov
test
rolb
mov
repnz
scas
jae
lods
sbb
daa
xchg
lock
fisttpll
jmp
sbb
insb
insb
test
std
adc
cmp
sub
daa
xor
or
pop
les
mov
stc
adc
int3
aad
push
mov
sub
loope
cwtl
mov
and
push
popa
adc
loopne
pop
dec
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
shlb
jb
bnd
aas
jg
jle
push
jmp
lea
inc
les
aam
mov
push
aaa
xchg
in
sbb
pop
call
adc
fs
jo
xor
out
push
pop
push
adc
add
mov
cmpsb
sub
in
scas
xchg
or
sub
jmp
push
lock
jl
or
mov
stos
pop
lds
cmp
push
jnp
testl
jge
mov
js
or
sahf
pushf
ja
cli
outsl
scas
dec
rcl
jmp
in
lea
pop
and
sbb
lods
or
pop
mov
stos
mov
fsubl
dec
ret
int
jns
imul
dec
gs
mov
mov
cmp
add
add
inc
mov
and
add
lods
es
pusha
add
and
in
mov
xor
lock
icebp
out
adc
out
jae
cli
daa
mov
cmp
cmpsl
xchg
mov
adc
outsb
stc
addr16
das
stos
test
sbb
cmpsl
sahf
cmpsl
or
mov
mov
xor
jge
pop
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
push
jns
inc
js
mov
cmc
sbb
mov
pop
outsb
scas
add
lods
pop
inc
sub
cmpsl
frstor
jecxz
fucomp
dec
or
sub
dec
lahf
arpl
jmp
loope
gs
in
mov
int
mov
cld
nop
mov
mov
es
sbb
cld
adc
cli
scas
sub
notb
shll
inc
xlat
jl
xchg
insl
pop
sti
out
dec
shll
out
not
call
mov
adc
imul
imul
lods
cmp
fistps
sbb
and
int
fbstp
or
shrb
lods
push
movsl
or
icebp
cmp
push
stos
and
in
bnd
jns
jae
push
mov
es
mov
ss
inc
push
push
mov
adc
hlt
mov
xor
adc
test
fldlg2
lds
fsub
or
mov
adc
dec
outsb
loop
add
mov
shlb
fnstcw
rolb
daa
idivb
stc
add
out
xchg
sbb
sub
andl
dec
jae
push
cmp
dec
jmp
and
lods
lret
movsl
sub
sub
jle
aas
jg
jle
or
push
xchg
data16
mov
jecxz
stos
inc
sbb
lds
movsb
inc
xchg
push
repnz
or
cmp
cli
add
fisttpll
sbb
bound
mov
mov
orl
jle
mov
mull
fwait
ret
pusha
into
aas
popa
sbb
mov
push
dec
imul
rcrb
leave
icebp
test
inc
mov
shll
popf
mov
ss
sbb
dec
sbb
push
xchg
mov
repz
jne
loope
ret
jb
jb
push
and
std
sbb
out
jae
lea
test
popf
pop
sub
sub
pop
imul
insb
shrl
data16
sub
mov
clc
leave
subb
dec
iret
add
lahf
add
int
outsb
cmova
dec
cmp
mov
mov
daa
subb
push
push
lcall
aas
lret
dec
mov
sbb
mov
lahf
cmp
xlat
les
nop
cmp
hlt
rol
inc
rcr
jecxz
adc
push
jb
mov
mov
enter
sahf
cmp
test
push
pop
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
pop
inc
xchg
or
jle
aas
jg
jle
lret
adc
sbb
mov
inc
aas
mov
dec
or
jg
sub
and
dec
cld
lret
jo
jg
push
rep
cmpl
arpl
cmpl
mov
cmpsb
dec
xchg
mov
cmp
jns
test
xchg
test
pop
mov
insl
cmpsl
out
mov
dec
xor
les
push
stos
dec
negl
xchg
push
in
inc
loop
les
mov
arpl
xchg
cltd
popf
xchg
mov
sub
pop
mov
shr
hlt
push
mov
enter
xor
mov
scas
jl
add
fucomip
adc
cmc
xor
nop
out
adc
dec
xchg
or
outsb
xchg
xchg
lcall
push
mov
mov
sbb
mov
stos
ljmp
sbb
orb
mov
jo
cmp
ficoms
subb
adc
cltd
push
sbb
cmp
sbb
stos
cmpsb
adc
adc
pop
fwait
js
xchg
jle
rcrl
fs
add
cld
mov
jmp
test
test
jge
cmp
in
jmp
aas
jg
jle
xchg
mul
mov
sbb
cli
sti
xor
lock
aam
inc
push
aam
out
movsb
xor
fld
and
cs
and
jle
mov
icebp
call
fistps
jp
orl
ret
outsl
jb
mov
into
cwtl
or
scas
enter
mov
int
jbe
jp
mov
mov
outsl
scas
adc
aam
lret
loope
mov
xchg
and
mov
push
scas
fisubl
xchg
jmp
xor
mov
pop
mov
add
mov
and
ret
call
sbb
inc
gs
adc
push
lret
orb
iret
ficoml
pop
hlt
push
jp
pop
int3
mov
and
cli
xchg
repz
out
or
movl
push
xchg
outsb
out
pop
push
shll
mov
cmpsl
out
jg
stos
dec
rcrb
push
cmp
pop
daa
sbb
inc
das
jl
cld
shrl
imul
pop
xor
adc
fcomps
int
mov
int3
mov
adc
jb
mov
inc
mov
xchg
xorb
mov
sub
mov
add
jmp
mov
or
lods
jge
out
mov
loope
mov
jle
loopne
inc
jmp
inc
movsb
popf
mov
nop
loopne
push
cmp
mov
add
out
js
xchg
idivb
push
aad
in
jae
pop
mov
mov
sub
in
enter
movsl
jb
fimuls
in
push
dec
push
xchg
test
xor
test
inc
xchg
out
shrl
xor
and
mov
mov
mov
out
lcall
mov
fs
ds
lea
xor
addr16
bound
adc
cltd
or
frstor
push
push
shlb
xchg
scas
fbld
fidivrl
pop
push
les
inc
in
fnstenv
or
aaa
add
out
lret
xchg
aaa
or
xor
cmp
xchg
inc
es
mov
lahf
int
gs
adc
nop
jecxz
cmp
js
pop
je
inc
xchg
and
popa
or
sbb
out
jge
scas
movsl
sub
fimuls
fs
fsub
push
mov
push
or
dec
test
jno
pop
fstp
les
inc
call
mov
imul
mov
jmp
inc
sbb
gs
jae
cmpsl
dec
aam
dec
mov
aas
jg
jle
daa
std
adc
inc
xor
sbb
aam
sbb
pop
push
in
cmpsb
cs
sahf
and
jne
mov
cld
add
pop
fwait
mov
mov
lret
cltd
lret
xor
dec
mov
sbb
dec
add
mov
fisttps
dec
mov
push
movsb
cmpl
sub
or
push
xchg
les
mov
xchg
repz
imul
imul
in
mov
lods
add
xor
jb
mov
fdivrs
xor
cmp
movsl
lret
xor
adc
movl
sbb
xchg
sbb
arpl
std
sti
movsl
js
cmp
jl
cmp
jmp
filds
pop
or
loope
mov
ss
mov
hlt
pop
decl
jo
add
les
fsubrs
enter
in
cld
rcl
and
jmp
push
sti
sub
movsl
push
incb
mov
cmp
pop
lahf
push
jnp
jns
adc
mov
mov
xchg
fcmovbe
int
icebp
cmp
inc
shrl
pop
sub
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
xorb
jmp
aas
jg
jle
test
pop
mov
pop
roll
add
jge
push
fimuls
jae
out
xlat
sub
push
stc
sarl
lods
fs
out
mov
in
enter
mov
dec
lods
or
pop
fcmovb
das
inc
lods
enter
mov
and
fs
sbbb
aaa
decb
cmpsb
dec
sti
cmp
scas
rorl
jg
pushl
in
stc
rcrl
sub
dec
jl
dec
leave
daa
jecxz
and
dec
je
sbb
adcb
inc
mov
pop
mov
and
xchg
mov
jae
daa
enter
adc
in
mov
adc
sbb
sbb
push
dec
dec
mov
fdiv
push
mov
mov
dec
jge
push
cmp
pop
fs
rclb
add
mov
fcmovbe
adc
popa
push
add
fdivrs
jbe
pop
cs
mov
add
in
jno
push
pop
fstps
sub
scas
and
jb
push
xchg
cmpsl
push
arpl
push
push
xchg
fmul
mull
or
incb
ret
push
cmp
std
enter
repnz
stos
and
pop
mov
dec
repz
test
popf
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
fstpt
ret
into
mov
aas
jg
jle
iret
xor
xor
lods
dec
mov
mov
sub
mov
std
cmpsb
fists
cmp
jbe
add
outsl
cltd
out
test
roll
aaa
sbbl
int
outsl
out
icebp
testl
push
aad
sarl
insl
mov
mov
dec
cld
mov
dec
jmp
mov
push
xchg
or
mov
jp
push
inc
mov
das
out
insb
jle
sub
and
scas
fisttpll
pop
insb
dec
sti
js
outsb
or
js
mov
sub
in
ret
xchg
clc
pop
aaa
cli
jecxz
fnsave
cmpsl
xor
mov
cli
cs
xor
add
insb
inc
leave
or
out
sub
xchg
stos
jmp
cmp
jb
sub
les
pushaw
sbb
jle
lods
sub
cwtl
sbb
mov
mov
mov
dec
sbb
out
push
adc
mov
inc
push
cmc
mov
push
mov
in
fsubrs
cltd
pop
mov
push
add
lock
jns
mov
jecxz
and
lcall
jg
pop
dec
push
popa
movsb
cld
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
pop
loopne
and
aas
jg
jle
shrl
and
jle
adc
mov
xor
insb
jl
cli
or
mov
or
pop
arpl
cmp
ficomps
mov
mov
testb
dec
out
xchg
clc
push
outsl
mov
or
sub
pop
sbb
mov
push
lods
pop
imul
test
loopne
roll
sub
into
jb
push
bound
mov
inc
repnz
aaa
fs
lds
cmc
hlt
push
lods
ja
in
jb
and
lock
shrb
leave
inc
loop
stc
dec
xor
pop
cli
aam
cmpsb
ljmp
push
movsl
sbb
jmp
nop
xlat
lock
sub
inc
add
xor
outsl
mov
pop
sahf
stos
xchg
cmpsb
mov
pop
lock
dec
add
mov
and
mov
pop
pop
pop
stos
es
jecxz
loope
loop
jmp
js
or
rep
sub
cmp
add
mov
jge
adc
sbb
push
mov
fsubs
test
push
notl
mov
scas
insb
adc
data16
mov
sbb
jae
or
scas
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
jmp
inc
mov
aas
jg
jle
mov
mov
pop
xor
testl
cltd
jae
xchg
and
jb
pushf
cmp
lcall
test
xor
outsl
push
pop
pop
aad
iret
leave
push
pop
or
cld
arpl
mov
dec
mov
in
outsl
sbb
lcall
sarl
cmp
out
mov
shll
mov
inc
mul
xchg
add
lea
idivl
popf
sahf
or
add
mul
mov
or
mov
out
loop
dec
ficoms
and
in
test
mov
inc
mov
xadd
jbe
xor
ficoml
test
ret
sti
sahf
scas
pop
push
xchg
mov
mov
cmp
loopne
cmpsb
fcmovne
lcall
je
xor
sub
adc
icebp
and
xlat
jmp
fwait
jmp
jno
xchg
ret
imul
jb
pop
push
push
jle
jo
popf
dec
sub
lahf
clc
pop
imul
sahf
rcrb
rclb
dec
xor
push
sub
push
into
add
rcrb
mov
sub
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
lret
pushf
nop
xchg
add
jle
cmc
jno
sarl
std
insb
mov
addr16
mov
stos
adc
jl
pop
and
adc
int3
ss
pop
jg
cli
das
fwait
mov
jnp
inc
das
sbb
cmp
and
or
push
in
xor
out
and
mov
int
popa
and
test
inc
inc
sbb
movsl
push
mov
push
mov
mov
xchg
lea
push
int
jge
mov
das
adc
push
das
out
fs
or
outsb
movsb
nop
jge
push
and
fcomps
hlt
mov
mov
gs
mov
push
jl
adc
je
and
nop
lods
push
inc
imul
xor
test
cmc
out
push
add
pushf
inc
test
inc
mov
dec
rorl
loopne
test
cmp
roll
pushf
int3
pop
push
clc
push
ret
arpl
fwait
test
ret
mov
jp
sub
mov
push
int
lahf
mov
rcll
dec
fnsave
pusha
push
fwait
adc
cmp
jae
cmp
sbbb
pop
js
test
mov
adc
jbe
shll
fucomi
pop
add
add
arpl
imul
mov
mov
jle
jg
jle
lock
mov
sbb
int
jge
fs
jnp
sub
iret
pop
gs
sti
xchg
ljmp
icebp
and
int
and
jae
dec
and
xchg
stos
test
sbb
mov
in
test
repnz
pop
mov
lock
adc
push
cmp
loop
sub
mov
sbb
sbb
faddl
orl
cmp
insl
mov
adc
cmp
negl
push
jmp
or
imulb
push
push
jbe
sarl
jo
or
dec
xchg
mov
or
out
push
popf
xchg
xchg
push
or
jne
inc
fwait
rol
cmp
out
inc
xor
fidivs
mov
je
test
add
and
lret
lods
ljmp
jb
adc
adc
sbb
enter
sub
aam
and
pop
xchg
ljmp
sbb
xchg
in
ss
sbb
enter
jp
pop
adc
add
jae
jmp
jae
aas
mov
cmp
jno
push
push
addl
jle
mov
and
movsb
dec
lods
les
rcrb
enter
test
sbb
jge
adcb
fnstcw
or
aad
mov
xchg
push
rorb
add
jge
xchg
inc
neg
or
mov
sub
push
fistl
daa
add
bound
testb
subl
lahf
das
insb
bound
cmc
inc
ss
jecxz
push
xor
inc
daa
xchg
repnz
hlt
cmp
shll
adc
or
ja
loope
ret
dec
paddq
aad
sbb
pop
mov
pop
nop
add
add
dec
jb
mov
lahf
jge
loop
cld
and
int3
js
pop
xchg
sbb
das
or
adc
les
fidivs
arpl
and
and
nop
jecxz
mov
ds
int3
mov
xchg
fisttpl
sbb
push
add
or
mov
mov
dec
cmp
xchg
or
inc
inc
dec
inc
mov
lret
jne
ret
pop
lret
vandnps
add
add
sbb
cmp
mov
mov
adc
test
add
add
pop
add
add
cmp
mov
inc
sbb
inc
cmpl
jg
jle
ret
push
test
popa
inc
shr
push
scas
mov
mov
pushf
add
push
fisubl
fstpl
push
out
mov
push
mov
aaa
add
xchg
lods
std
pop
inc
and
and
and
fs
push
inc
lret
pop
mov
push
test
dec
xchg
in
pusha
sub
pop
xor
xor
pop
das
stos
adc
add
cmp
popf
pop
cmpb
pop
mov
mov
jne
dec
pop
inc
cmp
sti
add
dec
jp
out
pop
adc
push
push
xchg
inc
jne
mull
fcomp
sbbl
fstl
adc
adc
loopne
xchg
inc
and
xor
adc
aaa
enter
mov
ret
jb
cld
outsb
insb
pop
dec
mov
xchg
icebp
stc
and
adc
pop
mov
scas
or
mov
cmp
dec
or
mov
inc
dec
dec
mov
add
jg
xor
sub
pop
adc
imul
and
cmp
daa
sbb
sbb
mov
mov
ret
daa
mov
add
dec
adc
jns
rclb
add
aas
jg
jle
mov
sbb
cmp
mov
lods
mov
gs
push
test
mov
inc
stos
bound
test
push
dec
movsb
or
xchg
ret
test
leave
sbb
or
aad
mov
jg
stos
es
push
daa
insb
out
out
or
xor
and
imul
jae
jae
mov
out
jg
insw
or
jo
xchg
inc
mov
fsts
sbb
dec
icebp
cld
insb
sub
xor
jp
sub
mov
pop
gs
movsb
pop
add
push
xor
shlb
mov
aas
inc
outsb
js
pop
jmp
mov
xchg
push
scas
sbb
pushf
mov
push
jae
test
mov
stc
push
push
push
push
xorb
ja
aam
fdivp
dec
push
fildll
sbb
sub
data16
mov
add
in
pop
jno
xchg
inc
sbb
sbb
sub
cmp
adc
jle
or
in
fmuls
cmp
xchg
xchg
adcb
inc
repz
mov
andnps
mov
add
inc
xchg
jmp
ss
or
mov
jmp
in
xchg
aas
jg
jle
xor
mov
bound
enter
in
fldt
push
cmp
fldt
stc
pop
je
fdivr
pop
push
jmp
out
add
sbb
add
in
pop
add
xor
xchg
aad
and
test
lds
jl
fidivrl
sahf
addr16
lods
push
mov
xchg
outsb
adcb
popa
jmp
add
loop
divb
test
mov
xor
jg
out
jo
iret
cmpsl
das
jl
pop
fstpl
shlb
es
and
int
or
xchg
out
fimull
dec
xchg
dec
popa
or
xchg
imul
mov
dec
mov
or
cli
out
fisttpl
mov
mov
jmp
cltd
or
into
aam
push
pop
cs
sub
sub
add
xor
cli
stos
pop
pop
js
mov
xchg
pop
jnp
ja
lods
inc
sbb
fnstsw
or
fwait
in
mov
int
add
cmpsb
jmp
jmp
push
xor
mov
das
mov
push
xchg
into
pop
loopne
xchg
mov
and
pop
dec
scas
adcb
int
loopne
add
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
rcll
inc
xchg
jle
xor
inc
mov
ss
aas
xor
jae
pop
ds
jnp
jmp
mov
xor
push
test
sti
cltd
push
test
jp
pushf
xor
add
fcmove
mov
adc
jmp
popf
cmp
add
fnstenv
xchg
cmp
xchg
stos
jne
sti
jg
pop
je
jg
pop
into
mov
les
jle
sti
fdiv
lea
mov
rcrb
sti
mov
ss
mov
push
pusha
and
adc
data16
shlb
call
shl
jae
sbb
push
sbb
push
inc
stos
mov
rcr
sbb
sbb
fs
addr16
mov
adcl
push
sub
cmc
shll
subl
enter
inc
std
add
mov
jbe
cmpsl
clc
jmp
shll
jle
inc
ficompl
es
adc
dec
jo
xor
pop
xchg
jg
adc
inc
call
nop
push
das
fucom
lea
mov
jmp
int3
cltd
cmpsb
xchg
push
out
loopne
or
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
