push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
pop
clc
ljmp
pop
jl
adc
and
popa
pusha
pop
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
cmp
dec
cwtl
pop
sub
div
sbb
test
scas
cmp
dec
adc
movsl
cmp
test
push
mov
and
cmp
mov
adc
call
pop
jbe
xor
cmp
out
repz
pushf
int
and
push
into
mov
push
or
dec
outsb
hlt
icebp
notl
xchg
push
mov
or
push
jo
inc
ds
xor
or
test
movsl
cwtl
nop
hlt
jecxz
mov
cwtl
shl
shr
addl
pop
jb
pop
or
cmc
ja
es
cli
lea
lods
mov
cmpsl
hlt
mov
push
fbstp
pop
mov
fidivrs
pop
cmc
push
jae
sbb
jno
int3
icebp
mov
test
dec
xor
movsb
inc
js
sbb
aam
xchg
inc
shrl
push
inc
push
push
ret
stos
push
sbb
inc
rorl
and
mov
push
pop
lahf
dec
imul
mov
push
fucomip
in
xchg
outsb
aas
daa
xchg
fcmovb
or
add
cmpsl
sub
add
out
sar
mov
mov
dec
mov
mov
cwtl
sbb
cmc
push
adc
sub
mov
fs
jg
cmp
in
cltd
or
pushf
mov
push
aam
dec
jmp
mov
add
xlat
adc
shrl
cmp
cmp
icebp
mull
inc
cwtl
push
mov
xor
orb
outsb
sub
mov
jecxz
out
loope
or
test
xor
pop
lcall
cmp
stos
or
fidivrs
addr16
ret
xor
mov
lcall
xchg
fmul
dec
lea
repz
xlat
add
clc
fstpt
daa
dec
add
int
dec
or
jp
stc
test
jo
lods
test
push
mov
ret
pop
das
sbbl
cmp
jp
sbb
mov
sub
out
popf
test
sti
mov
lahf
test
mov
jg
adc
dec
sti
sub
sbb
push
movsb
sbb
sbb
into
std
mov
clc
jp
dec
popf
cli
arpl
push
push
mov
pop
pop
daa
push
arpl
fnstenvs
fdivs
mov
pop
or
in
xchg
lret
sahf
jle
cwtl
test
pushf
jl
inc
call
std
cmp
mov
adc
or
je
push
mov
add
sub
cmp
xchg
jl
lods
jl
sti
adc
loope
hlt
jb
scas
fadds
jecxz
sub
xor
movswl
xor
ret
mov
daa
push
aas
aad
sbb
jle
rcrb
xchg
add
daa
mov
pop
and
cmp
outsb
mov
push
push
pop
and
nop
xchg
daa
inc
lock
jp
mov
scas
int3
insl
or
jecxz
lret
jmp
jmp
outsl
outsl
add
shll
mov
mov
push
jne
sub
jmp
leave
ds
xor
sbb
outsb
out
jmp
cmp
insl
es
test
imul
repnz
lock
lahf
dec
dec
enter
scas
pusha
pop
sarb
fstps
pop
push
stos
fadds
pop
mov
cwtl
in
scas
test
mov
mov
sub
mov
iret
adc
ljmp
dec
andl
mov
pop
ss
data16
adc
test
cmp
adc
cmovge
dec
cwtl
mov
pop
jnp
push
clc
rorl
movsb
sbb
mov
cltd
jne
out
or
xor
mov
dec
cmp
jno
imul
add
cmp
pop
js
xchg
pop
scas
jecxz
add
call
mov
dec
cmc
cmpsl
sub
xor
cmpsl
mov
or
pop
shr
aas
stos
sub
lcall
andb
adc
pop
mov
cltd
pop
mov
pop
scas
cwtl
push
pusha
inc
xor
repz
jae
mov
aas
fisubs
in
push
push
inc
xchg
and
inc
cmp
mov
roll
push
xchg
lret
sub
jp
or
addr16
mov
pop
mov
xlat
je
add
pop
cmp
cmpsb
push
pop
adc
jnp
pushf
jbe
scas
xor
jle
jle
rorl
cmpsl
dec
jo
ss
pop
and
push
cs
push
fwait
xorb
mov
dec
test
xchg
dec
ljmp
gs
jmp
loopne
xchg
aam
repnz
add
daa
sbb
imul
incb
fmuls
inc
dec
push
cmp
popf
mov
dec
dec
jnp
bound
in
outsl
lret
inc
pop
mov
xchg
clc
cmp
jle
in
loope
movsl
inc
or
push
addr16
lcall
je
dec
push
mov
aam
mov
dec
xor
jl
xor
aaa
dec
rcrb
mov
mov
jg
out
ficompl
sbb
adc
sbb
mov
add
dec
pop
fs
add
cmpl
fxch
mov
repz
ret
idivb
or
cmp
aad
dec
mov
mov
adc
or
int
pop
lods
pop
mov
mov
arpl
jae
jns
test
xor
jg
lcall
mov
flds
pop
push
pop
call
pop
mov
adc
in
jns
dec
test
scas
ss
pop
into
jge
repnz
mov
in
add
xchg
xor
repz
pop
clc
mov
dec
adc
pop
arpl
xor
sti
test
out
push
xchg
push
mov
lods
adc
pop
pop
sub
daa
movsl
daa
std
adc
inc
xchg
hlt
icebp
push
xchg
ja
inc
sbb
inc
mov
pop
adc
sub
cmpsl
sbb
add
xchg
dec
dec
loopne
pop
cmp
pop
jo
jns
lds
js
sub
das
sbb
sti
test
inc
cmp
pop
nop
lods
xchg
pushf
fmuls
outsb
mov
and
cmp
gs
mov
insb
scas
and
test
push
jge
jmp
inc
sub
popf
pop
jecxz
xchg
mov
cmc
push
xchg
es
add
sub
or
out
sbb
dec
mov
ret
cwtl
jns
lods
mov
jecxz
push
mov
sub
mov
popf
out
xlat
push
xor
add
and
pop
fidivrl
adc
in
pushf
sub
bound
arpl
mov
mov
out
or
stos
dec
xlat
lret
mov
xchg
add
ficomps
sub
aad
cmovnp
addr16
cwtl
push
mov
arpl
ror
outsb
and
dec
mov
inc
dec
inc
jp
push
nop
sub
test
sbb
push
lcall
xor
pop
sub
aaa
sarl
sbb
lods
push
mov
push
inc
adc
rorb
popf
lret
into
pop
jae
jne
insb
loopne
mov
sti
cmp
lds
orb
movsb
in
into
fimull
jmp
out
xchg
mov
ret
aam
jnp
into
movsl
call
mov
push
push
cmp
js
mov
rolb
fstp
aas
mov
lahf
mov
and
add
cs
imul
add
push
loope
test
pop
in
ret
lret
movb
pop
arpl
outsl
pop
cmp
push
jge
dec
aaa
pop
mov
cmp
push
imul
sub
gs
inc
mov
bound
fnstcw
into
lock
jo
inc
ja
push
imul
xchg
scas
sbb
jge
call
roll
cmp
fimull
hlt
pop
lret
call
in
pop
mov
cmp
add
ret
rcr
xor
xchg
pop
and
or
xor
bound
xor
fldl
pop
add
jb
jg
sub
pop
testb
lret
std
jno
cwtl
dec
test
fdivs
mov
mov
xchg
into
repz
sbb
inc
cmp
daa
push
fcmovne
sbb
cli
push
add
lcall
ljmp
ljmp
xchg
xor
loope
mov
fs
pop
fmuls
pop
cmpsb
ficoml
lock
jge
dec
inc
dec
mov
sti
pop
or
fimull
les
pop
pusha
les
ss
repnz
mov
adc
cmp
inc
lcall
stc
mov
push
movsb
test
and
lcall
mov
or
sbb
movsb
lock
mov
pop
mov
leave
ret
call
add
shrl
daa
iret
bound
and
mov
shrl
and
xchg
lret
adc
xor
cmp
and
sub
adc
mov
popf
out
push
jne
dec
aaa
pop
rcr
jge
test
enter
ljmp
adc
xor
push
cmpsl
jbe
decb
in
rcrl
inc
add
cmp
mov
loopne
mov
cmp
xchg
nop
fwait
pop
mov
mov
jecxz
or
mov
sarl
mov
dec
push
inc
test
mov
rol
imul
mov
sbb
jae
pop
mov
jno
xlat
mov
jnp
arpl
adc
sub
push
xchg
push
sbb
sbb
add
and
mov
icebp
cli
pop
jmp
in
adc
mov
add
stc
mov
pusha
xor
xchg
js
loop
lcall
push
mov
jp
data16
sub
cmp
cltd
outsl
and
push
lret
inc
push
outsb
pop
jge
xor
mov
out
mov
xlat
jle
insl
loop
ds
dec
mov
shrl
inc
nop
push
and
cmp
push
push
dec
add
jae
or
cmp
mov
mov
jae
aam
sbb
or
mov
std
push
sbb
gs
lods
and
jne
adc
test
int3
sahf
xlat
jno
das
adc
cmpsl
faddp
fnstenv
lock
lahf
lds
pop
mov
ja
sub
xabort
adc
xchg
hlt
lcall
xchg
mov
pop
sbb
xchg
scas
arpl
and
dec
jecxz
mov
popa
xchg
out
es
mov
push
push
mov
cmp
adc
jmp
and
call
jns
xorl
cmp
mov
sti
jne
test
in
cmp
outsl
gs
mov
or
pop
movsl
xchg
das
mov
dec
sbb
sbb
hlt
pop
hlt
lods
cltd
inc
jae
pop
fcomp
xlat
add
push
scas
mov
outsl
loope
sub
sub
outsb
mov
add
sbb
fdivr
cwtl
insb
icebp
mov
scas
or
test
xchg
jae
cmpsl
xor
clc
jb
mov
mov
and
or
fcomps
add
add
inc
jp
dec
out
ret
add
jae
imull
mov
popf
mov
int3
js
jo
jl
pushf
movb
jl
and
jle
inc
lods
movsb
call
int
mov
mov
and
mov
clc
add
shrb
fisttps
faddl
push
xchg
arpl
cli
int3
jne
in
shlb
mov
cli
adc
fadd
xchg
aaa
jmp
and
push
push
out
cmp
inc
test
dec
push
loopne
mov
popf
inc
repnz
lahf
sbb
loop
loopne
notb
xchg
insl
iret
aad
pop
int3
jne
adc
sub
jl
sub
xor
out
mov
aad
mov
sbb
insl
add
mov
or
add
popf
out
test
dec
sahf
xchg
xor
les
das
mov
adc
or
mov
pop
push
push
setge
xchg
in
jae
sub
decl
call
sub
cmp
jae
cmp
daa
leave
testl
sti
inc
fdiv
pop
insl
xor
pop
fisubrl
arpl
add
lgs
popf
out
fwait
in
pop
xchg
mov
push
sahf
rol
cwtl
data16
aam
popa
enter
fsubrs
push
jge
fimuls
in
push
lahf
out
loop
pop
lret
adc
stc
insl
inc
pop
jg
rcrl
mov
push
xchg
hlt
pop
sbb
hlt
xchg
add
fwait
rcrl
mov
push
sarl
daa
filds
mov
inc
dec
test
xor
jne
mov
rolb
mov
in
sub
sbb
mov
ljmp
mov
ljmp
inc
xchg
fcomps
mov
pop
idivl
mov
fnstcw
jnp
stc
or
mov
add
loope
sub
shlb
dec
jl
jae
lret
out
add
clc
lods
pop
pushf
das
jp
push
cwtl
test
push
mov
mov
imul
inc
or
sahf
mov
jp
test
inc
adc
stos
adcb
add
sub
pushf
loope
std
notl
cmp
repnz
sbb
and
or
jge
xsavec
jb
hlt
lahf
push
adc
push
jecxz
push
test
cld
jns
push
add
xchg
adc
popa
jmp
rorb
push
add
push
push
mov
call
or
test
add
sti
pop
fidivrs
push
inc
xchg
test
rorl
pop
pop
dec
js
fimull
subl
stc
mov
daa
stos
fdivrl
rorb
push
fwait
loope
ret
jp
pop
push
sub
pop
outsb
and
into
cmp
loopne
je
mov
scas
adcb
or
ja
popa
ficompl
bound
sub
dec
push
or
imul
imul
inc
dec
fnstcw
lret
add
fsubs
pop
pusha
push
dec
mov
jl
push
mov
dec
scas
lock
jecxz
hlt
loope
lret
cs
xchg
out
jae
lods
pop
push
xor
dec
insb
push
lcall
push
jae
pushf
pop
into
mov
xchg
fs
data16
stos
push
sarb
add
lods
ljmp
stos
jmp
and
jg
pushf
push
xor
cmp
adc
xlat
test
jo
push
mov
jl
jl
sub
xor
cli
fsubs
pop
add
inc
cmp
push
push
daa
test
jle
dec
ret
mov
inc
pop
es
and
xchg
gs
adc
movsb
and
adc
mov
xchg
pop
sub
fs
clc
adc
out
mov
cmovnp
adcb
cmp
gs
rol
aad
or
push
and
orl
adc
hlt
sub
shl
sbb
es
cli
sbb
mov
fwait
ret
popa
lret
xchg
cmpsb
scas
popf
in
ret
hlt
sbb
ljmp
xchg
sub
lock
insb
jmp
loop
add
popa
xchg
aas
sarb
xchg
dec
fcoms
gs
popf
mov
lret
mov
mov
cli
xorl
xor
xchg
fwait
les
dec
push
lcall
call
pop
push
and
mov
push
es
lahf
adc
into
lods
mov
mov
rcr
mov
lret
xor
repnz
lret
cltd
bound
lds
sbb
lds
cwtl
mov
mov
jecxz
jo
mulb
fsub
mov
xchg
xchg
rcrl
sbb
jbe
add
rorb
adc
pop
imul
in
ret
xchg
xchg
ds
fwait
or
mov
mov
sbb
add
in
std
imul
cs
inc
cmp
cmp
jnp
ja
jp
aas
jns
adc
lea
lcall
popa
xchg
mov
test
fcmovnbe
sbb
in
aas
add
cmp
gs
xchg
std
pop
dec
dec
negb
mull
scas
clc
mov
pop
cmp
jno
cmp
ja
out
sub
inc
insb
imul
mov
into
repnz
add
push
aas
add
int
or
adc
not
sbb
xor
push
test
nop
fmuls
mov
sub
icebp
adc
ror
sbb
fcoms
sti
xchg
sub
aam
imul
push
or
adc
mov
gs
dec
lods
rcrb
aas
addr16
lahf
or
mov
das
sub
icebp
push
stc
and
xor
sbb
xchg
mov
cmp
cmp
mov
lcall
mov
mov
stc
add
push
dec
cmp
arpl
js
mov
enter
push
cmpsb
fs
test
xchg
mov
movsl
lods
imull
adc
push
push
cld
or
sarb
or
mov
cmc
cmp
stos
jb
xor
and
mov
cmpb
jmp
sub
in
inc
push
ficoms
cmc
mov
mov
sbb
lods
cld
call
xor
lcall
mov
outsl
and
push
and
out
mov
xlat
movsl
add
mov
rolb
pop
xor
mov
and
lea
jl
dec
inc
fwait
mov
mov
fimull
rcrb
je
sbb
out
sbb
pop
xadd
movsl
mov
or
std
sub
sbb
ja
push
jge
adc
push
pop
cmp
pop
stos
mov
jno
cltd
in
dec
je
mov
add
dec
xor
add
xor
lahf
stos
nop
mov
push
push
xor
jns
add
cmp
stc
jecxz
push
imul
je
jne
cmp
pop
push
pushf
out
and
das
mov
popl
stos
add
dec
and
mull
or
push
std
add
adc
xchg
cmp
and
imul
add
cmp
movl
test
fcoms
push
push
dec
pop
add
stos
mov
jb
mov
lea
sub
cld
jmp
aam
stos
adc
lds
and
mov
xchg
inc
pop
mov
xor
or
in
dec
dec
es
push
insl
ret
adc
mov
leave
shll
inc
mov
icebp
jecxz
aas
dec
and
sub
push
lret
and
mov
or
loop
mov
into
lods
xchg
adc
pop
cmp
stos
cmpsb
mov
sti
dec
ss
add
lret
mov
iret
mull
cmpb
pop
cmp
cmp
push
xor
cwtl
xor
test
pop
jmp
addr16
or
or
ja
push
inc
and
inc
fs
je
mov
cltd
mov
push
test
jp
mov
in
outsl
cmp
enter
fabs
push
add
mov
dec
div
push
movsb
sbb
push
and
shr
jno
shll
repz
arpl
xor
scas
divl
movsl
repnz
dec
jl
ret
sub
sti
clc
xor
xchg
mov
mov
xor
int
cli
mov
pop
rclb
jp
ljmp
aad
cmp
ret
clc
mov
ret
or
push
imul
es
js
scas
cmpl
pusha
dec
test
add
loope
jg
cmp
push
add
add
lods
stc
insl
pop
repnz
repz
xchg
cld
mov
mov
test
jnp
test
jo
mov
rorl
nop
insl
dec
xlat
xor
insl
aas
mov
adc
sbb
in
cmpsl
xchg
pop
or
push
xor
sub
into
lcall
movsb
push
push
xor
movsb
mov
xor
sbb
xchg
fadds
js
in
or
fbstp
test
dec
shl
daa
push
imul
into
inc
fs
cmp
mov
fidivrl
fdivrl
nop
rorb
or
jmp
cltd
mov
mov
cli
push
ret
lods
mov
xchg
mov
imul
clc
mov
ljmp
stos
addl
test
out
cmc
inc
push
aam
out
pop
daa
cmc
out
sbb
or
repnz
jp
iret
mov
xor
and
push
xchg
xor
test
insl
in
push
pusha
lock
xor
mov
push
in
and
push
fprem1
ss
push
adc
sti
in
cmp
fdivl
pop
adc
jle
nop
mov
test
in
or
and
test
mov
sbb
push
mov
jb
aaa
xchg
int3
lret
fs
mov
sbb
push
add
pop
pop
mov
out
addr16
mov
ljmp
lahf
or
or
in
dec
fidivrs
movsl
int3
popa
repz
jl
cmp
inc
cmp
mov
outsl
push
cmpsl
aad
sahf
mov
das
inc
icebp
std
adc
mov
inc
pop
pop
add
or
and
push
enter
shlb
popa
push
mov
jp
mov
aad
outsl
pop
iret
adc
dec
popf
sbbl
jbe
shl
xor
movsb
jmp
test
enter
mov
repz
jnp
outsb
push
mov
ja
xor
push
adc
rorl
push
mov
cld
jbe
leave
push
lods
scas
xchg
stc
lds
jge
movsl
inc
dec
loop
xchg
push
or
jecxz
push
jns
in
stos
mov
mov
pushf
or
mov
arpl
cwtl
outsb
jg
jl
dec
pop
or
and
dec
sbb
jge
sti
out
dec
adc
sarb
addr16
cmp
inc
hlt
add
cwtl
push
test
push
mov
mov
and
sbb
shrb
xchg
inc
sub
dec
mov
jae
daa
mov
std
and
jnp
shl
lea
bound
inc
in
and
data16
mov
xchg
cmpsl
mov
pop
cltd
imul
ljmp
sub
addr16
or
fbld
shlb
pop
imul
mov
lods
xor
testb
jmp
repz
cld
push
insl
outsl
nop
inc
or
roll
fldl
orl
cmp
scas
push
pop
jae
ljmp
scas
out
out
jp
push
lret
sahf
imul
out
mov
pop
or
adc
dec
cmp
divl
fwait
xchg
inc
dec
mov
int3
xor
jbe
or
aam
dec
mov
xor
jle
pop
inc
fs
adc
in
xor
fistpl
out
int
adc
test
or
cmc
stos
out
xor
mov
and
dec
xchg
outsl
adcb
hlt
adc
in
iret
dec
test
dec
popf
dec
mov
mov
xor
cwtl
dec
and
movsb
mov
cmpsb
inc
cs
mov
push
cwtl
jecxz
jge
or
aam
adc
loopne
xchg
mov
in
imul
adc
lds
or
out
xchg
fiadds
cld
push
aas
sbb
hlt
into
dec
das
add
push
je
xchg
leave
push
push
or
pusha
sub
jge
sbb
dec
lds
inc
lods
sub
cmp
ffree
js
mov
in
inc
dec
xchg
scas
jecxz
cmp
mov
xchg
insb
or
or
mov
fmuls
dec
push
shlb
fst
xor
insb
push
leave
pusha
push
jecxz
neg
jbe
inc
pop
jmp
addr16
nop
xor
ret
gs
xchg
mov
stc
in
jg
data16
mov
je
out
addl
out
xchg
push
jp
xor
movsl
push
shll
dec
fadd
int3
pop
ret
inc
and
and
pop
imul
add
add
sub
cwtl
push
icebp
dec
out
jae
cld
fcmovu
addb
xchg
mov
push
loop
imul
lret
adc
pop
iret
add
and
push
jbe
jge
jecxz
sbb
out
idiv
sbb
or
scas
mov
sti
push
mov
inc
or
adc
out
cwtl
xor
andl
lods
dec
mov
loopne
adc
in
cs
jp
push
test
jle
ret
leave
lcall
cli
lcall
out
xchg
adc
mov
popf
lahf
add
shrl
repnz
fadds
push
push
pusha
testb
pusha
ss
mov
mov
xor
outsl
arpl
xchg
mov
or
jmp
sub
mov
es
aaa
aaa
fisubrl
mov
fimuls
sbb
xor
jnp
pop
pop
js
jl
jae
xor
pop
nop
inc
jmp
in
xchg
cmp
mov
ficoml
adc
mov
xlat
inc
rcll
push
mov
xchg
ljmp
into
daa
divb
and
sarl
jp
adc
inc
ret
outsb
filds
in
sub
and
gs
dec
pusha
lahf
popa
push
push
add
je
scas
das
pop
sbb
pop
add
addr16
xor
cltd
xchg
decb
push
int
mov
mov
repz
rcrb
add
xor
je
sub
fdiv
fsubp
dec
push
mov
aas
adc
cmp
adc
jle
je
adc
pushw
insl
mov
jl
shrb
jb
inc
std
outsl
lret
test
loop
shrl
and
out
push
pop
add
rcr
xor
dec
ja
lret
cltd
lret
jl
dec
cltd
out
mov
js
imul
imul
fs
push
aam
in
or
flds
in
mov
pop
ds
and
out
test
iret
mov
push
xchg
dec
sub
imul
push
pop
shl
mov
sub
lds
shl
mov
push
sbb
stos
mov
xchg
inc
decb
xchg
jae
push
xlat
movsb
lcall
adc
movb
fistl
loopne
stos
inc
inc
repz
mov
in
pop
mov
aam
adc
add
jne
sahf
repnz
scas
fildll
gs
sub
sbbb
mov
pop
addr16
addr16
sbb
out
ret
dec
mov
xor
bound
std
push
je
and
frstor
jp
js
jo
fildl
cld
jbe
and
clc
dec
pop
in
sbb
ret
in
mov
jae
cmc
pushf
pop
or
cmp
cmp
loope
shlb
nop
int3
int
xchg
mov
mov
fadds
sub
mov
test
stc
sbb
cld
push
daa
loopne
xor
mov
mov
sti
cmp
push
jbe
dec
mov
jmp
add
dec
mov
leave
sbb
ret
shlb
lds
jge
cmp
pop
push
adc
nop
jp
jno
push
mov
decl
mov
adc
sub
sub
mov
movsl
movsb
ja
xor
je
jecxz
inc
stos
enter
sahf
xor
stos
sbb
popa
lock
sub
enter
sarl
adc
sub
mov
loopne
add
xchg
in
shll
adc
inc
mov
xlat
cmp
jbe
lret
loopne
fwait
in
ss
rcl
add
lcall
pop
out
adc
mov
cmpsl
mov
mull
aaa
ss
jmp
imul
sub
jns
push
push
xor
and
mov
popa
enter
xorl
test
es
push
sbb
inc
pop
bound
sti
add
test
int3
add
or
andl
daa
and
add
push
outsb
mov
push
cmp
cmp
add
dec
mov
jb
dec
pushf
pop
andb
clc
mov
testb
mov
sar
cmpsb
mov
popf
cmpsl
repnz
push
cli
into
xchg
or
cmp
loopne
adc
pop
lods
jp
inc
in
sbb
jl
cmp
xchg
std
pop
mov
sbb
ljmp
or
jbe
xor
sbb
xchg
repz
inc
fdivrl
dec
sbb
test
fsub
int3
movl
xchg
dec
mov
lock
jmp
mov
add
xchg
or
pushf
shll
ret
std
mov
data16
mov
es
test
xchg
add
jle
lret
push
lret
jno
xchg
sbb
out
leave
icebp
cmp
fdivrs
sbb
xchg
leave
fildl
movsb
lds
int3
in
lock
cltd
mov
insl
add
lock
lahf
push
jge
adc
ljmp
es
jg
add
xlat
and
and
nop
mov
push
aad
aad
cs
adc
pop
pop
cli
out
lods
dec
mov
inc
repz
mov
xor
push
sbbl
es
inc
cmp
fwait
cmp
stos
xor
lods
les
fdivrs
adc
subb
or
or
pop
aad
scas
idivl
push
push
sub
or
jae
stos
cmp
aam
xor
inc
clc
mov
ret
and
mov
jp
xchg
inc
mov
pop
je
push
xchg
mov
movb
push
lea
xchg
mov
ret
out
fsts
mov
repz
xchg
rcll
repz
scas
dec
dec
lea
bound
dec
shlb
cld
dec
mov
xchg
lods
push
lock
test
cmpsb
sbb
in
sub
add
nop
sbb
pusha
test
lods
jae
scas
and
jns
pop
mulb
fmuls
mov
xlat
or
sti
pop
popl
xchg
or
jbe
push
pop
enter
mov
in
xor
enter
mov
inc
mov
pop
or
mov
sub
xorl
cwtl
cmc
subb
adc
js
movsb
inc
add
addr16
insb
mov
sbb
and
add
fwait
sbb
adc
ret
lcall
push
test
scas
push
divl
pop
adc
clc
push
sbb
movsb
pop
es
mov
push
cltd
lcall
push
scas
push
mov
mov
scas
pop
out
mov
jp
cmpl
mov
das
clc
and
mov
push
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
clc
jae
xor
jl
dec
pop
jl
movsl
daa
pop
inc
outsl
enter
push
or
adc
jle
and
sbb
leave
mov
les
dec
in
push
push
fdivrs
int3
jbe
js
imul
cwtl
adc
jmp
ljmp
mov
mov
mov
call
repz
pop
stc
pop
mov
iret
pop
inc
cmp
enter
xor
push
ret
icebp
mov
and
mov
out
mov
xorb
pop
sub
mov
xor
outsl
nop
fidivrs
jmp
push
lcall
mov
lods
fs
mov
fstpt
mov
sbb
mov
imull
cmc
sbb
push
xor
sub
out
sahf
aam
loope
pop
dec
cmp
mov
push
fsubl
stc
pop
stc
iret
mov
push
push
jae
lcall
mov
aaa
pop
push
inc
xor
push
int
out
adc
pop
lds
insb
cwtl
mov
popf
xchg
scas
fisubs
jp
mov
mov
inc
push
in
cwtl
daa
add
cltd
inc
imul
pop
std
movsb
call
mov
mov
mov
add
fs
das
jecxz
push
gs
das
imul
sub
je
iret
les
jne
and
cmpsb
inc
out
daa
or
mov
mov
cmp
add
and
add
fwait
out
xchg
test
fadd
out
pop
adc
mov
jno
add
insl
pop
je
mov
out
and
shlb
dec
aam
mov
xchg
xor
loope
hlt
jl
jge
rorb
test
es
popa
add
push
sbb
in
add
or
cmp
call
rcrl
insb
lea
out
jle
cli
pop
sti
ljmp
in
enter
jmp
jns
push
pusha
push
push
mov
mov
cmpsb
stc
ficomps
jne
test
rclb
jecxz
xor
ret
pop
xor
cwtl
ret
dec
jbe
jmp
sbb
pop
cmp
cmp
push
add
repnz
xchg
fsubs
push
clc
jno
stos
jle
push
push
jp
loope
mov
inc
lea
jae
cltd
sbb
and
sub
jae
mov
mov
lods
cmpl
fnstenv
fs
jmp
insb
mov
and
dec
or
aaa
jge
add
jb
mov
imul
pop
dec
imul
adc
mov
pop
jae
mov
dec
dec
shrl
stc
in
adcl
iret
xchg
jl
ret
jge
inc
or
in
in
and
mov
das
inc
dec
jb
inc
xor
aas
mov
xchg
sbb
andb
and
xchg
ja
mov
dec
notb
lret
leave
sbb
call
mov
lret
mov
mov
rorb
mov
mov
push
cmpb
shrb
sub
and
es
inc
shrb
insb
insl
test
sub
jge
sub
out
loopne
in
sub
jne
dec
jb,pn
scas
shrb
dec
es
xorb
push
popa
mov
xor
inc
ss
cmp
inc
mov
dec
imul
inc
repz
cltd
out
jo
mov
xchg
cmp
loopne
es
mov
jl
mov
sub
dec
pop
jge
push
sbb
adcl
rcr
dec
sub
jp
loop
lcall
int
insl
loopne
shrb
jnp
mov
das
or
cwtl
jecxz
cltd
sub
test
into
aaa
add
xor
jb
mov
cmp
pop
cmpsl
in
js
push
mov
xchg
sbb
jo
icebp
pushf
and
outsb
or
xchg
int3
out
out
mov
pushf
ds
pop
pop
icebp
mov
inc
fidivrl
insl
cmp
lahf
insb
inc
repz
gs
add
add
loopne
in
inc
out
cmp
sbb
aad
cmp
pop
sbb
sbb
xchg
int
jle
mov
mov
std
gs
rcr
push
iret
push
xchg
add
imul
leave
in
popf
addr16
inc
dec
push
add
scas
hlt
test
lock
mov
cmc
js
je
loope
loopne
out
jne
pop
lret
push
test
fsubl
mov
xor
add
aam
daa
inc
into
shl
mov
dec
mov
inc
jne
testb
pusha
push
sbb
xchg
scas
xlat
idivb
out
sbb
mov
nop
ret
jo
les
cwtl
fldenv
jns
inc
ljmp
leave
xchg
xor
adc
ret
xor
loopne
add
push
and
pop
dec
xor
jg
out
rorb
push
jmp
mov
dec
lds
jecxz
push
lret
jmp
push
sub
jb
int
fbstp
sahf
pop
ret
cltd
mov
nop
ret
dec
add
cmp
jg
arpl
fldl
adc
cs
jbe
push
in
and
pushl
idivl
mov
mov
lret
and
int
jns
dec
mov
jmp
in
add
mul
cld
xchg
pop
fsts
ja
mov
rcll
jb
dec
push
loopne
mov
scas
add
pop
andl
push
sbb
pop
inc
les
mov
addb
fnstenv
or
xor
add
nop
divb
push
dec
in
shll
or
and
jp
out
out
jg
ret
xorb
sub
pop
leave
ljmp
cmp
dec
xor
pop
pusha
push
push
xchg
xchg
inc
jp
add
imul
jecxz
mov
outsl
or
cmp
imul
or
jge
pop
sbbb
mov
cmc
outsb
adc
movsb
jge
inc
jmp
inc
jno
xlat
fs
fwait
out
fcoms
out
dec
mov
das
enter
in
jnp
push
cltd
push
mov
and
inc
or
call
loope
sub
xor
fimull
jbe
jecxz
dec
xchg
adc
push
fs
mov
sbb
xor
mov
out
icebp
mov
rorl
dec
sbb
cmc
adc
adc
sub
sub
adc
jle
mov
xchg
lret
js
out
and
icebp
or
push
pusha
xor
mov
pop
and
mov
outsb
xlat
pop
or
addl
cmp
daa
fcmove
jmp
jnp
or
adc
xchg
flds
fstpl
push
add
popf
mov
gs
ret
loopne
mov
fnstcw
push
cli
repz
pop
xor
ja
scas
mov
arpl
dec
fwait
or
dec
mov
call
mov
inc
cs
in
mov
cmpsb
fmull
push
icebp
dec
mov
xchg
ret
mov
gs
test
push
out
xor
and
nop
jl
les
movhps
into
jo
adc
insb
add
mov
icebp
inc
icebp
mov
sub
imul
addb
nop
loope
jmp
outsb
push
push
jno
mov
repz
test
adc
add
push
mov
mull
lods
inc
add
and
lahf
push
imul
xchg
cltd
and
sahf
sti
pop
jae
decb
imul
insb
sbb
jmp
push
mov
pop
scas
xchg
ret
xchg
insb
call
jb
cld
pop
jmp
push
xchg
cmpsl
cld
js
fcmovne
xchg
add
cld
jae
jno
xchg
daa
xchg
xor
bound
and
clc
push
nop
inc
in
sbbl
mov
xchg
add
mov
sbb
fstpl
adcl
insl
in
push
cwtl
add
es
movsl
xor
imul
inc
pop
jbe
pop
cld
movsl
or
sbb
cltd
das
xor
and
mov
fs
outsb
adc
stos
int3
pusha
xorl
test
cmpsl
rorl
dec
mov
dec
out
rcll
mov
rclb
add
cmp
rorl
mov
add
ss
cmp
mov
push
cmp
and
push
or
arpl
enter
adc
hlt
js
push
lock
pushf
add
jp
stos
dec
add
repz
mov
mov
add
movsl
ss
cli
fwait
pusha
pop
mov
xor
call
add
lret
dec
fs
pop
adc
rcrb
sub
or
lret
cwtl
xor
movsb
xor
pop
jle
lock
inc
dec
mov
rorl
mov
pop
in
movl
add
pop
fistpll
loop
or
adcl
xor
mov
jns
push
sub
shrl
lds
cmp
popa
push
fdivrs
pop
addr16
xchg
inc
inc
inc
xchg
pop
fimull
inc
testb
jno
std
xchg
aam
dec
add
inc
cmpsb
mull
inc
sbb
pop
dec
mov
negl
nop
dec
lahf
imul
jno
fcoml
mov
arpl
popf
fsubl
adc
or
pop
or
mov
xlat
push
and
sbb
mov
push
outsl
mov
mov
pop
sub
push
mov
push
push
mov
and
subl
xlat
xor
adc
pop
mov
je
ret
mov
outsl
inc
movsb
pushf
inc
jecxz
dec
arpl
or
iret
mov
lahf
in
imul
pop
nop
mov
push
adc
and
adc
outsl
pop
xor
mov
lret
xor
fs
push
jecxz
mov
jmp
daa
pusha
pusha
out
pop
hlt
or
sahf
push
push
push
out
sarb
sub
aad
pop
sarb
jge
cwtl
inc
hlt
addr16
in
mov
rclb
mov
fstpl
inc
jnp
jge
mov
aas
mov
add
push
lret
xchg
mov
dec
orb
push
jp
and
fdivl
lea
inc
xor
movsb
sbb
sbb
add
mov
sbb
int3
mov
shl
jp
lock
ret
mov
jl
pop
into
mov
movsb
lcall
xchg
daa
rcrl
loop
punpcklqdq
and
push
lods
orb
ret
rcrl
push
in
out
cmp
xchg
lock
cli
in
and
inc
xchg
or
inc
test
mov
repnz
bound
test
and
xor
clc
cmc
ss
mov
inc
enter
dec
insb
fstpt
arpl
arpl
in
jnp
sbb
int
decl
adc
push
lret
or
gs
sbb
lods
jge
xchg
mov
int3
lods
in
sahf
sub
loopne
add
or
jo
out
mov
cmpsb
sarb
sahf
mov
sub
push
or
aam
clc
lcall
sbbb
dec
or
fucom
or
repz
jle
inc
rcr
jmp
mov
mov
out
cmp
pop
scas
sub
rolb
shrb
xchg
int3
clc
mov
leave
dec
fdivr
cli
out
mov
popf
sbb
mov
mov
inc
xchg
xchg
mov
add
fbld
lcall
cmp
jl,pn
pop
or
sub
xor
xchg
call
mov
adc
mov
outsb
inc
cmp
outsb
rorb
xchg
cmp
mov
lcall
pop
push
mov
fdivrs
add
imul
jnp
test
jae
enter
fistps
int3
lret
fdivr
sarl
test
test
inc
or
mov
stos
add
mov
scas
movsb
mov
push
addl
lock
cmp
pusha
sub
jbe
dec
cmp
cs
mov
and
mov
fimuls
test
push
sub
fstl
sarl
gs
jg
jo
push
mov
mov
ret
mov
push
lods
lds
jmp
inc
lods
xchg
xor
icebp
cmp
ret
pop
pop
sbb
aam
sub
or
cld
pusha
stc
and
push
xchg
movsl
xchg
push
dec
repnz
cmp
fildl
nop
cli
push
sahf
inc
mov
loope
mov
inc
lret
outsb
dec
incb
mov
cmc
bound
push
inc
mov
daa
cmpsb
icebp
clc
push
aad
mov
test
mov
jle
and
jmp
mov
inc
jno
cmpsb
sbb
lret
stc
xor
xchg
aam
xor
into
mov
scas
mov
push
arpl
ss
and
dec
or
mov
cs
iret
in
data16
bound
andl
loopne
inc
out
aam
push
mov
fdivl
in
out
inc
data16
clc
aad
icebp
sbbl
jo
fs
hlt
xor
jp
loopne
or
mov
imul
sbb
adc
notb
inc
mov
test
ja
repnz
adc
hlt
and
inc
pop
test
fldt
xor
mov
mov
fdivs
push
mov
mov
lods
into
lods
cltd
xchg
add
inc
insl
mov
lock
sbb
test
mov
pop
ret
mov
mov
mov
mov
jno
cmp
mov
sbb
mov
in
fmull
repnz
lret
dec
push
addr16
mov
and
jae
add
dec
cmp
pop
cld
sbb
insl
cli
stos
fs
sbb
adc
stc
insl
mov
dec
xchg
roll
mov
es
imul
adc
outsb
out
lock
or
sub
jbe
jbe
mov
mov
and
stos
scas
fdivs
pusha
push
mov
cmpsb
ret
stos
in
lret
in
pop
mov
cs
jg
pop
add
call
dec
gs
fcoms
mov
xor
pop
sbb
sbb
shll
push
sub
inc
out
clc
jnp
mov
mov
pop
imul
mov
loop
sbb
pop
idiv
mov
addr16
xchg
ret
stos
imull
sub
pop
and
sub
stos
out
pop
repz
imul
daa
xchg
push
out
mov
je
jb
aaa
push
jg
cmpsl
addl
and
data16
and
sti
addb
fcomps
test
push
sub
int
int3
mov
inc
inc
add
cmp
cmp
icebp
punpcklwd
sahf
sbb
out
dec
call
scas
movsb
xor
aas
mov
mov
mov
loop
sti
in
test
inc
mov
ret
data16
adc
in
enter
adc
mov
cltd
mov
das
push
lahf
jbe
in
pushf
sub
push
jno
loop
dec
pop
icebp
and
add
xlat
insb
fstps
xchg
or
mov
inc
cmp
shrl
cmpsb
mov
lcall
add
lea
mov
mov
ret
pop
mov
push
mov
rorl
mov
call
mov
jno
nop
cmp
jne
jmp
push
je
mov
mov
int
leave
jns
insb
inc
nop
or
ljmp
inc
movsl
lock
mov
inc
xor
push
pop
or
sbb
cltd
add
cltd
xchg
or
shlb
xor
adc
push
dec
clc
add
pop
cmpsb
inc
sbb
popa
inc
xor
fsubl
push
sub
dec
neg
test
test
outsl
adc
pop
orl
leave
std
test
and
jecxz
dec
data16
lcall
neg
dec
sub
stos
cli
ja
mov
mov
xchg
inc
pusha
jp
cmpsl
in
or
sub
inc
orl
notb
adc
lds
jns
jp
inc
pop
mov
aaa
imul
dec
mov
loope
pop
dec
mov
cmp
mov
push
lods
sub
jecxz
pop
adc
xor
fcmovne
mov
cwtl
or
sbb
bound
dec
rcl
mov
mov
xchg
jmp
es
lcall
fmul
sbb
mov
and
sub
push
push
jae
subl
and
cmp
adc
test
sahf
dec
lahf
in
jmp
lcall
dec
mov
nop
lret
in
mov
imul
mov
into
or
int
cld
mov
lret
ficomps
pop
fcoml
sti
or
mov
std
mov
fs
add
addr16
cmp
sbbl
xor
es
jne
lret
push
sub
daa
dec
adc
outsl
cs
cli
js
int3
out
ja
stos
mov
add
sbb
cmp
or
adc
mov
adc
adc
fidivrl
lahf
ret
pop
imul
out
stc
ret
dec
sbb
push
in
pop
xlat
fnsave
nop
lret
iret
xor
xchg
add
adc
mov
or
sarl
nop
roll
and
frstor
and
xor
testl
xchg
inc
subb
xor
mov
xorl
pop
xor
orl
mov
mov
xor
and
lds
in
inc
xor
daa
xchg
add
xchg
sbb
ret
mov
jp
aam
push
fcmovbe
lock
adc
scas
pop
test
jecxz
int
pushf
sahf
jmp
jge
in
sarl
lea
xlat
fs
out
fwait
scas
jge
pop
or
mov
dec
addr16
xchg
cmp
mov
push
and
jne
xor
mov
andb
or
xchg
inc
stos
cltd
cmpsl
xchg
add
mov
ss
test
lcall
mov
jge
sub
xchg
mov
fst
push
addb
ficomps
scas
insl
jb
jecxz
enter
xchg
mov
shrb
cs
push
imul
inc
adc
or
outsb
cmc
adcb
and
dec
cmp
pop
jno
pop
hlt
push
or
add
mov
mov
jg
mov
and
cltd
seta
pop
add
ret
pop
sub
addr16
jmp
dec
sar
test
push
lock
sbbl
xchg
outsl
ja
mov
dec
popa
and
sbb
sub
negl
mull
cmc
xchg
xor
lahf
jmp
or
je
push
popa
and
sbb
sbb
scas
roll
int
dec
lds
jmp
xchg
mov
xlat
out
movsb
ja
sbb
sub
addl
pop
adcb
mov
mov
fbld
fbld
lds
popa
test
or
jne
sahf
adc
sarl
cli
dec
shlb
idivl
mov
or
imull
fistpl
and
cltd
mov
xlat
into
in
popa
adc
cmp
in
dec
lcall
dec
adc
mov
pop
ret
adc
shlb
call
scas
xchg
push
mov
clc
loopne
push
adcl
push
mov
jle
ja
or
scas
test
cmpsl
cmc
dec
testb
adc
push
mov
mov
or
rorb
xor
mov
pusha
in
push
and
cs
andb
jmp
pop
inc
repz
cmp
out
mov
sub
cmp
call
mov
jnp
inc
hlt
mov
in
shll
test
pop
lods
xchg
fnop
test
xor
mov
enter
rcll
out
lret
add
inc
je
inc
lods
call
insb
push
xor
mov
dec
jns
aaa
je
stos
adc
add
addr16
sbb
xchg
or
cmp
jns
gs
je,pt
nop
das
lcall
push
popf
mov
rolb
iret
inc
jmp
push
icebp
icebp
or
xor
adc
pop
pushf
mov
jmp
ljmp
movsb
lods
mov
inc
xchg
ljmp
lds
clc
int
push
int
data16
inc
ret
iret
inc
lock
lea
mov
stos
and
pop
pop
movsb
pop
push
sub
xchg
inc
idiv
dec
jp
adc
cmpsl
xor
xor
push
cmpsl
fists
mov
push
cmp
mov
add
jecxz
inc
faddl
lret
jmp
shl
push
cmpb
mov
mov
ljmp
ja
dec
repnz
shll
test
mov
push
pop
push
hlt
aam
inc
adc
sub
or
inc
pop
adc
xor
stc
cmp
adc
addr16
xchg
inc
dec
das
pop
scas
jecxz
and
sub
leave
repnz
adc
push
dec
in
dec
mov
adc
mov
pop
or
enter
or
sti
and
lods
pushl
add
xchg
loopne
or
sbb
mov
sarl
adc
mov
xor
jne
rolb
add
cmp
repz
adc
sub
in
into
fnstenv
in
sub
xor
jae
cmp
mov
xchg
outsb
dec
faddp
jns,pt
or
pop
loope
cmp
add
jge
jns
xor
xor
adc
xchg
jle
adc
mul
xor
cs
repz
pop
push
das
cmp
int
or
inc
nop
fwait
pop
mov
aad
outsb
jecxz
aaa
push
lods
mov
je
arpl
in
out
mov
das
inc
jnp
sub
in
mov
xor
in
inc
pop
xchg
lret
or
into
iret
les
jp
mov
xor
mov
int3
sbb
mov
push
sbb
rcl
rorl
add
das
push
mov
cmp
adc
mov
pop
cmp
xchg
mov
imul
gs
cmpl
cs
dec
hlt
or
jns
imul
into
nop
fidivl
dec
in
insb
cwtl
scas
push
aaa
jecxz
rcrl
shlb
pop
pushf
add
lret
mov
out
fimuls
jge
fs
jns
je
push
adc
cmpsb
lret
mov
mov
sbb
adcb
sar
push
jecxz
or
sbb
pop
outsb
or
movsl
fsts
and
xchg
or
lea
fbld
lds
pop
call
adc
rclb
test
jg
lds
mov
stos
loop
out
xchg
ljmp
and
aam
or
loope
arpl
inc
push
dec
pop
push
cmpsb
test
andb
repz
loope
mov
push
stos
insl
jb
dec
sub
cmp
dec
out
jno
pop
xchg
jnp
rorl
push
adc
test
arpl
mov
inc
and
cwtl
hlt
mov
xchg
push
jne
mov
dec
xor
xor
mov
pop
lret
cmp
xchg
adc
ja
xor
pop
cmpsb
inc
xchg
pop
pushf
imul
adc
rcll
dec
aam
loope
aas
mov
aad
mov
rol
jge
sbb
ss
add
jg
lret
adc
lods
mov
sub
jg
push
test
add
imul
mov
js
les
xor
add
or
iret
push
imull
jb
cmp
cmp
sbb
stos
fistpl
or
daa
dec
fs
mov
xchg
ja
in
cli
sub
jmp
out
fcmovb
xchg
pop
dec
int
rcrb
sbb
inc
mov
pushf
mov
cmc
cs
mov
gs
repnz
movsb
inc
jae
sub
es
pop
jg
add
mov
lods
rcr
popa
aam
or
sub
add
and
rcrb
sbb
and
xor
adc
ret
push
addr16
int3
aaa
sbb
pop
hlt
test
aas
xlat
adc
clc
pop
in
aas
and
fsubr
xchg
mov
jmp
int3
mov
xor
mov
or
pop
push
lods
sub
cld
cmpsb
test
inc
mov
adcb
test
test
js
aas
mov
rorb
dec
sub
pop
pop
dec
push
cltd
xchg
sub
and
sub
jmp
xchg
sub
sub
and
ret
fldl
jns
xchg
sub
mov
jg
imul
loope
divb
fmul
sarl
popf
jo
cmpsb
add
sub
add
loope
data16
stc
outsl
lahf
sahf
pushf
push
clc
cli
or
xchg
outsb
inc
inc
mov
inc
xchg
sbb
or
aas
cmp
bound
std
je
sbb
dec
stos
sbb
popa
pop
icebp
add
jns
stos
mov
sbb
jbe
mov
push
loop
sbb
mov
sarl
push
adc
mov
pop
mov
test
adc
cmp
cmp
and
int3
nop
mov
mov
adc
mov
ss
mov
push
xor
lret
sub
adc
push
inc
cmpsb
mov
mov
shrl
popf
and
cmp
stos
ret
stos
xor
pushf
jle
sub
insl
fldcw
adc
call
je
out
xchg
push
dec
loopne
outsl
xchg
mov
jae
xor
gs
shrb
popl
je
cld
inc
into
inc
mov
and
push
js
dec
popa
test
xchg
dec
jmp
test
ficomps
push
roll
movsb
mov
push
mov
stc
and
cli
jecxz
fcmovne
cmp
hlt
sahf
fdivl
iret
ret
out
dec
xor
das
cmpsl
dec
cltd
jg
mov
or
pop
out
xchg
aam
pop
mov
shr
adc
jge
push
mull
push
adc
dec
pop
shlb
xor
outsb
mov
xchg
cli
add
outsb
xchg
pop
fs
scas
ficoml
hlt
mov
sub
inc
hlt
ss
incl
adc
mov
xchg
out
or
pop
jecxz
sbb
aad
dec
adc
xchg
js
shll
rcl
sbb
outsb
pop
jecxz
dec
out
rorl
mov
add
fisttpll
lods
adc
mov
jg
push
jmp
xor
xchg
dec
lahf
int3
push
pop
mov
mov
ret
pop
cmc
scas
cmp
test
mov
inc
jle
add
xor
outsb
mov
mov
ss
sub
popf
jo
jecxz
nop
mov
in
scas
repnz
lcall
rolb
mov
popf
xchg
hlt
ss
adcl
sub
mov
xchg
dec
orl
in
shrb
jne
outsl
jl
jge
pop
ja
sarb
pop
in
xchg
dec
scas
rcll
adc
pop
test
jmp
out
mov
mov
data16
xlat
cmp
dec
imul
and
stos
outsl
mov
mov
dec
jns
adc
pop
mov
js
imul
sbb
fcmovb
repnz
push
adc
call
scas
sub
lock
jp
xchg
dec
fsubl
dec
imul
cmp
movsl
mov
mov
fs
jge
mov
mov
inc
lds
pop
dec
mov
jg
and
cmpsl
xorl
stos
lsl
jl
sar
mov
fcmovu
mov
inc
js
push
xchg
test
cmp
out
sub
sbb
ficoml
xchg
enter
inc
xchg
insb
les
les
sbb
scas
dec
fdivrs
and
or
cwtl
addr16
scas
les
push
dec
add
jb
jecxz
out
idiv
pop
dec
mov
jns
pop
push
popf
subb
pushf
mov
adc
mov
and
jge
int
fldcw
add
rcll
cmpsb
cli
sahf
or
push
mov
dec
mov
inc
loope
jae
mov
xor
xchg
fbstp
fdivrp
pushf
sbb
xor
or
xchg
push
xlat
pop
testb
loopne
xor
push
shlb
adcl
jl
xlat
jnp
cmp
add
or
add
mov
cld
scas
cmpsl
and
dec
popa
daa
dec
in
sub
push
lcall
or
and
mov
jle
rolb
jns
in
outsl
jne
jle
mov
sub
push
sti
mov
jl
push
dec
push
aad
jge
adc
inc
clc
sbb
cmp
push
mov
je
fldcw
mov
mov
or
loopne
mov
adc
mov
mov
xor
pop
int
jo
jbe
and
pop
push
repz
call
and
bound
jl
stos
stc
xor
out
sub
sti
in
or
stc
dec
jmp
mov
and
sub
cmp
testl
sub
test
loopne
xchg
insl
repnz
sbb
fucomip
mov
xchg
inc
jmp
mov
push
mov
movsl
into
jnp
aas
rcr
daa
cs
inc
lret
pop
adc
adc
sbb
push
jne
nop
dec
pop
icebp
orl
aas
mov
pop
or
jns
shll
and
jno
xchg
lret
testl
sti
fists
cmp
add
sub
fadd
sbb
pop
lea
das
repz
mov
lahf
and
mov
or
rorb
jge
cli
fdivrs
fistpl
imul
mov
cmp
sub
dec
xor
gs
js
or
scas
mov
inc
xor
aam
mov
mov
inc
jl
sbb
es
xor
es
pop
adc
xchg
and
push
mov
test
mov
jns
repnz
xor
ljmp
int
sub
xor
loope
dec
or
es
fwait
inc
add
jl
mov
xchg
push
mov
orb
add
fisttpl
jns
test
and
xchg
mulb
jl
ljmp
clc
adc
ds
mov
jns
mov
mov
jmp
inc
dec
push
mov
cmpsb
push
inc
testb
lahf
xchg
lock
adc
out
std
inc
fnsave
push
mov
inc
in
adc
enter
mov
std
popa
scas
nop
hlt
push
fs
xor
xchg
mov
lock
fdivl
pusha
inc
fidivl
mov
pop
aaa
and
fdivs
lahf
cltd
push
push
mov
enter
repnz
cwtl
movb
sub
fistps
pop
in
xor
jno
imul
fwait
push
movsb
and
loope
sbb
pusha
shrl
mov
sbb
lea
lret
adc
in
out
adc
iret
xchg
dec
add
push
sbb
add
push
push
scas
hlt
xor
test
out
adc
mov
dec
jmp
mov
cmp
mov
sbb
gs
cmp
pop
jl
push
dec
pop
or
mov
mov
filds
pop
sub
sub
mov
sbb
jo
aad
cmp
sbb
addr16
push
out
popf
into
lahf
out
xor
or
ljmp
sbb
gs
mov
pop
nop
push
adc
pusha
stos
bound
mov
pop
out
in
loop
mov
jnp
jp
shlb
pop
jl
je
stos
cmp
das
jae,pn
adc
loope
vmovd
sarl
fadd
int
std
pop
mov
pop
in
and
jns
fsubrs
lcall
adc
ja
and
cli
or
jp
jno
insb
int3
inc
push
pusha
nop
cmpsl
mov
push
divl
mov
jecxz
push
jnp
lock
mov
dec
sbb
not
cmp
mov
call
fisttpll
shll
sbbl
xor
mov
in
mov
stos
sbb
loop
cmp
frstor
orb
dec
or
sahf
rcrb
fxtract
mov
stc
pusha
xor
lods
cld
lea
pop
aas
fistps
in
subl
xchg
cld
sub
xor
mov
ds
hlt
xor
repz
inc
pop
les
into
test
cmp
hlt
or
rorb
dec
sti
pop
mov
bound
subb
or
dec
sbb
xchg
jmp
push
int3
lds
pop
shlb
sbb
and
mov
xor
mov
and
sbb
adc
rcr
add
and
das
inc
cmpsl
push
mov
cmp
or
out
jae
icebp
xchg
add
sbb
mov
out
popa
or
ljmp
fldl
flds
mov
mov
jnp
stos
and
mov
xchg
cld
xlat
jns
cmc
rclb
incl
faddl
sbb
sbb
aas
mov
aaa
scas
daa
mov
push
sbb
nop
mov
xor
add
aam
fld
mov
sub
cli
mov
sub
add
jne
or
add
or
pushf
subb
inc
jmp
mov
xchg
test
pandn
lcall
push
iret
rcrl
pop
stc
out
sbb
enter
test
add
mov
rep
repnz
xchg
int3
ds
or
push
lcall
dec
mov
mov
mov
gs
pop
divl
adc
mov
divb
or
cmpsb
xlat
inc
fistpl
push
pop
lret
imul
mov
icebp
movsb
cld
xor
jbe
repnz
mov
testl
mov
inc
in
jecxz
dec
mov
lods
jl
int
pop
int
jnp
pop
fsin
dec
lret
mov
ret
dec
hlt
cmpsb
xor
outsl
mov
cltd
adc
rcrb
outsb
adc
mov
fcoms
mov
push
sub
xor
mov
fisubrl
pop
sub
mov
pop
push
sbb
mov
inc
and
insb
jne
mov
mov
jbe
sbb
stc
mov
fnstenv
sbb
out
lret
das
dec
ret
enter
pusha
jp
sbb
popf
or
mov
lahf
pop
ja
sbb
mov
jecxz
jg
aas
nop
sub
mov
in
sub
jns
jnp
sub
call
push
call
push
movsb
idiv
ret
jns
test
jl
sub
aaa
dec
or
lret
outsb
js
sbb
fsubp
pop
sbb
dec
add
sbb
aam
test
or
fcoms
loop
pop
add
mov
jmp
es
or
sub
test
fs
dec
repnz
repnz
adc
cltd
out
or
pop
out
lret
mov
into
hlt
and
jnp
negb
push
shr
cmp
js
mov
lcall
out
jmp
or
movsb
scas
mov
sub
pusha
push
fnsave
xlat
aaa
mov
fadds
je
mov
in
pop
pusha
cld
ret
jp
sbb
xor
or
out
ret
test
cmp
icebp
imul
mov
aaa
sub
jl
adc
scas
les
jns
cmp
inc
dec
jo
jb
rcrl
xchg
inc
mov
aad
dec
pop
das
jne
sub
adcl
push
jg
fidivrl
outsl
mov
pop
aas
adc
xchg
ljmp
popf
pop
mov
clc
sbb
mov
pop
inc
mov
call
cli
dec
neg
mov
xlat
pusha
mov
call
lret
mov
fstps
std
loop
xor
fcomip
js
popf
xor
fbstp
dec
mov
mov
add
out
xlat
mov
push
lcall
ds
imul
inc
push
lock
xor
push
jle
mov
lcall
mov
jge
ret
jmp
and
nop
push
xchg
mov
dec
pop
jp
fidivs
jl
push
xor
inc
ja
inc
into
call
push
push
pop
or
xchg
ds
sbb
push
push
das
lcall
jne
ret
lret
outsb
outsb
outsl
mov
andb
rcrb
outsl
mov
call
jns
outsb
int
and
and
mov
cmp
xor
jle
lods
fisubs
fadd
rclb
mov
pusha
ret
loope
sub
mov
stos
jae
scas
pop
pop
ss
outsl
int
jl
fisttpll
push
imul
xchg
lods
int3
data16
div
inc
xlat
or
jnp
mov
aaa
cmpl
call
pop
je
sub
push
xor
inc
test
popa
sbb
repz
cwtl
jl
inc
popf
mov
cmp
mull
pop
in
fmuls
imul
jmp
cmp
add
or
xor
adc
pop
test
xor
sbb
cli
push
xchg
and
ds
push
mov
pop
aam
repnz
xorl
cmpb
aam
nop
xchg
xor
dec
pop
mov
sahf
jp
pop
mov
js
and
rcll
xchg
inc
lods
dec
into
push
in
and
sti
cmp
jmp
mov
int
sub
push
and
inc
into
pop
lahf
ljmp
mov
jmp
add
sub
into
dec
cld
cmp
aam
xchg
fildll
cltd
pop
mov
test
iret
insb
cmpl
sbb
sub
pop
imul
repz
pushf
jmp
mov
inc
pushf
scas
xchg
jmp
fidivs
sub
and
jg
xchg
xchg
mov
push
in
insl
and
insl
imul
sbb
imul
sarb
mov
int
es
hlt
call
jmp
ljmp
mov
cmp
add
outsl
rorb
mov
pop
xchg
add
adc
and
movsb
cld
or
cld
ds
shll
sbb
test
push
or
filds
in
add
push
jnp
mov
int
xchg
sti
lds
jb
push
mov
cmpsb
push
mov
les
push
inc
pop
or
cmp
out
test
lret
cmp
add
ret
mov
xor
or
mov
and
pop
outsl
in
popa
sahf
mov
ds
sbb
ja
std
out
lret
add
nop
movsl
push
addb
or
mov
aaa
sbb
in
mov
mov
mov
fwait
inc
sbb
aam
movb
lret
inc
aam
mov
in
lcall
sar
jecxz
sub
shl
lods
divb
out
xor
sahf
in
in
aaa
sub
cmpl
push
jno
or
aaa
jle
shlb
or
imul
mov
inc
mov
daa
test
mov
jl
test
scas
outsb
je
sub
mov
push
jo
out
xchg
inc
inc
or
add
ljmp
dec
clc
dec
cmp
add
rcrl
lock
push
fimull
sub
into
pop
popf
insb
int3
popa
jae
fcmovnbe
movb
orl
xchg
shll
mov
rorl
add
mov
push
cltd
jl
ret
or
lret
cmpsb
xchg
cmp
repz
adc
dec
dec
rorl
cld
xorl
repz
in
test
cmp
sti
cwtl
out
cmc
pop
aad
dec
ret
sub
push
addb
std
lcall
push
xchg
xor
xor
sahf
sub
outsl
movsl
mov
jns
sub
mov
push
popa
data16
pop
xor
stos
push
lds
push
imul
scas
sti
mov
int3
mov
fstl
gs
fidivrl
cmp
sub
xchg
push
sub
or
mov
pop
push
xchg
repnz
sbbb
adc
lock
pop
sub
fdivs
mov
stos
sub
push
pop
mov
sub
movsb
mov
adc
xor
xchg
mov
jno
test
lcall
push
jmp
sub
mov
in
mov
mov
jg
cmp
js
add
sti
fildll
in
mov
cmp
pop
out
mov
aaa
daa
jp
or
nop
xchg
incb
dec
push
lock
xor
push
outsb
pop
dec
dec
cmp
mov
scas
fnstsw
adc
out
aas
adcb
fst
mov
nop
adc
sbb
ja
or
imul
or
inc
mov
dec
or
and
jl
dec
stc
inc
ds
ds
push
push
xchg
pushf
lds
popa
sub
ror
bound
pop
mov
leave
pop
pop
xchg
cltd
push
test
push
sbb
add
lret
mov
aad
adc
pop
xchg
jbe
dec
and
out
pop
push
sbb
mov
js
mov
and
jmp
pop
les
jp
out
inc
push
fs
sbb
mov
jg
call
push
sbbb
lret
mov
pop
mov
mov
shl
add
cmp
enter
dec
repnz
and
jp
mov
lret
jno
xor
lret
sbb
jo
lds
test
add
test
aam
adc
repz
testl
mov
je
ljmp
push
mov
pop
cmp
push
les
xchg
push
pushf
test
xchg
jl
int3
or
in
mov
imul
jge
sbb
adc
pop
in
add
dec
nop
inc
lds
pop
gs
push
mov
sub
out
stos
movsb
sub
lahf
ret
pop
orl
push
fadds
mov
repz
addb
mov
pop
or
mov
add
test
jle
stos
push
das
popa
lea
sahf
or
jmp
adc
mov
cmp
cwtl
in
loopne
fsubrs
pop
add
iret
dec
shlb
test
adc
cmp
popf
sbb
sbb
fdivrp
out
mov
jge
pop
mov
addr16
mov
fwait
push
fwait
enter
sub
adc
daa
mov
fstps
pop
mov
cmp
pop
jmp
cmp
mov
out
mov
out
inc
add
dec
xor
cltd
lret
out
mov
jecxz
push
push
jo
mov
rorl
push
jp
pop
iret
xorb
mov
shr
mov
dec
cmp
shlb
sub
lods
test
inc
lahf
sti
inc
test
outsb
lods
ficomps
ret
and
mov
inc
mov
repz
adc
push
mov
lret
sbb
or
std
pop
lahf
dec
jmp
lret
lcall
add
gs
lods
int
shll
jp
leave
inc
dec
xchg
inc
or
mov
xchg
out
test
mov
mov
in
loopne
bnd
loope
arpl
or
lods
fstpt
call
xor
adc
in
and
fdivrl
sbb
aaa
and
mov
xchg
rclb
jl
ss
sub
jmp
arpl
leave
pop
loope
dec
gs
push
das
arpl
inc
test
mov
in
daa
mov
inc
fst
idivl
les
gs
jae
mov
dec
cmpsl
jb
push
ficoml
pop
inc
adc
xchg
jno
adc
cld
in
or
lret
scas
pop
pop
sbb
and
ja
sbb
lret
test
jo
stos
jle
stc
dec
in
jecxz
dec
dec
clc
pusha
fistpll
insl
cmp
cmp
imul
xor
dec
sbb
mov
dec
push
push
fdivrl
mov
dec
mov
cli
test
stos
mov
outsl
pop
aas
sbb
inc
outsb
sub
out
push
xor
or
mov
xlat
divl
mov
fstpl
mov
scas
or
ret
jo
icebp
call
repz
add
jo
ror
out
add
pop
push
push
cld
or
cld
stos
test
and
sbb
push
jle
scas
lcall
pop
mov
test
or
das
xor
xchg
imul
ja
movsb
lods
jge
outsl
pop
cmp
xor
fcomi
sahf
sub
mov
std
aas
mov
rcrb
outsl
inc
push
inc
mov
push
xchg
push
mov
out
xor
stc
dec
lcall
sti
outsl
xchg
adc
jns
dec
lahf
pop
test
nop
loope
cmp
shr
pusha
mov
push
mov
dec
rcl
imul
dec
std
sub
lcall
pushf
adc
loope
mov
stos
sub
mov
push
mov
sbbb
push
insb
test
sbb
dec
cmp
xor
cltd
dec
pop
into
es
std
pop
mov
cmpsb
dec
shlb
lcall
mov
mov
icebp
fistps
cltd
dec
scas
dec
or
insl
cmpsb
and
adc
les
add
add
push
sub
cmp
out
js
add
pop
rolb
cltd
xchg
mov
cmpb
mov
sub
popa
sarb
pop
sbb
sti
bswap
cwtl
into
mov
stos
xchg
lods
sub
mov
jno
sti
ds
into
push
mov
je
cmp
clc
pop
dec
fcompl
rclb
fwait
insl
into
push
push
xor
movsb
mov
mov
mov
mov
xor
or
adc
pop
sub
in
out
jns
jb
sub
cmpsl
sub
or
jno
enter
jno
rcll
fstpt
dec
sub
add
das
ljmp
rep
sahf
js
nop
push
shrl
pop
arpl
push
hlt
push
into
test
lods
inc
mov
out
dec
push
sub
cmpsl
inc
mov
pusha
out
jp
popa
idivb
adc
inc
mov
inc
loop
shl
jae
fwait
jno
enter
es
and
cmp
loopne
test
xor
xchg
dec
out
mov
mov
pop
xchg
and
xchg
mov
pop
mov
xor
fnstcw
xor
dec
out
mov
push
dec
jbe
cwtl
mov
and
stc
and
repnz
sub
push
test
imul
pop
xchg
add
sbb
push
gs
pop
push
jmp
addl
cmp
pop
xlat
adc
icebp
xchg
or
andb
push
xchg
sbb
add
adc
cmp
test
jne
fwait
test
aas
imul
mov
add
mov
out
mov
sbb
lods
cmp
and
loopne
sbb
cmpsl
pop
push
push
mov
fwait
add
push
insl
jl
jp
cmp
ret
inc
mov
imul
cmp
mov
xchg
daa
sahf
out
mov
cli
dec
add
das
add
dec
out
lret
push
insb
sbb
ja
rorl
ljmp
sbb
push
lea
fidivrs
mov
jae
cwtl
adc
lods
repz
shrb
adc
lods
in
icebp
jp
test
loope
insl
inc
adc
sub
pop
dec
nop
xor
adc
testb
push
push
pop
in
insl
test
pop
mov
pop
cmp
sub
mov
test
jle
inc
das
divb
jno
push
pushf
hlt
repz
adc
adc
clc
jge
cmp
xchg
pop
push
sub
int
pop
lds
loopne
push
jne
adc
xchg
push
mov
std
popf
popa
mov
inc
shl
es
push
push
divl
dec
cli
dec
sub
cltd
xor
imul
cld
push
adc
push
fyl2xp1
repnz
push
pop
xchg
std
jmp
pop
movsb
cmpsb
popf
stos
movsl
xchg
call
ljmp
insb
js
adc
nop
ror
mov
and
pop
inc
scas
lock
out
ret
movsb
rcl
sbb
xchg
lea
mov
int3
inc
ss
fisubl
pop
xchg
aas
add
sbb
xor
scas
or
push
ret
push
fistps
lahf
xor
jl
std
and
into
push
or
adc
jmp
stos
jl
or
idivl
scas
mov
mov
enter
leave
cmp
add
cmpsl
cli
inc
test
sub
in
rolb
pop
fs
and
dec
ja
ljmp
pop
out
push
xor
ret
popf
add
iret
mov
dec
arpl
fwait
lods
movsb
mov
sub
jge
lret
inc
daa
repnz
mov
jae
in
call
mov
pushf
fstps
add
fiadds
push
cwtl
pop
mull
mov
ror
dec
cld
sahf
addr16
and
ficoml
mov
mov
push
add
aas
cmpsl
sbb
cli
mov
lcall
data16
sub
fs
shll
push
cs
push
adc
clc
pop
bound
mov
sub
cmp
scas
jb
cli
jno
ss
xchg
adc
loopne
stos
dec
ljmp
pushf
lcall
push
test
sub
rcll
xor
mov
sti
loope
in
sbb
bound
mov
mov
iret
sbb
ds
dec
xor
fdivrl
out
push
loop
dec
inc
fisubrl
imul
mov
test
pop
inc
in
test
jns
std
popa
js
and
cmpsl
stos
jmp
subb
enter
push
shrl
xchg
or
inc
fldenv
test
out
push
or
sbb
inc
or
mov
inc
push
xor
loope
pushl
jp
rorl
in
mov
push
adcb
jmp
and
xchg
aaa
lds
xor
mov
lahf
sahf
imul
adc
sub
and
fisubl
xchg
mov
jecxz
sarb
iret
fmull
xchg
das
push
movsb
fwait
or
push
iret
jle
fldl
xor
js
into
inc
mov
rcr
mov
roll
ljmp
insl
xlat
jg
dec
pushf
subb
inc
aas
fstpl
pop
and
adc
adc
rcll
and
into
mov
fsubrs
and
sub
adcb
xor
mov
movsb
cmp
xchg
or
stc
dec
mov
das
pusha
arpl
and
mov
inc
xor
cltd
xlat
fwait
mov
cld
adc
dec
pop
xlat
cmpsb
stos
fidivl
add
jbe
pop
hlt
push
mov
adc
ficomps
shll
out
flds
mov
mov
push
stc
pop
jbe
mov
or
pop
sub
cmp
or
adc
and
jno
cs
xor
scas
jl
mov
adc
mov
or
pop
cmp
xchg
jb
cmp
xor
popf
pop
push
mov
adc
adc
roll
flds
pop
pop
and
adc
inc
add
jno
leave
push
imul
fsub
mov
shl
out
in
pop
mov
cmp
popf
lds
scas
sbb
sbb
call
std
fs
jge,pn
std
push
add
mov
les
stos
push
or
cmp
loopne
xchg
sub
inc
sahf
ret
loop
aam
mov
fisubs
repz
pop
sbb
outsl
mov
or
mov
cmpsl
je
sbb
rol
or
mov
xchg
push
adcb
cmpsb
pusha
fwait
xchg
jae
cmpsl
int
stos
test
dec
and
cmp
dec
lods
adc
dec
out
lods
int3
or
fimuls
or
je
out
arpl
js
jne
mov
test
pushf
jae
aaa
lret
or
das
sub
mov
jo
pop
std
dec
inc
push
xorl
pop
jge
ret
pusha
sub
adc
pop
xchg
sbb
negl
pusha
jle
movsb
cltd
scas
pcmpgtb
jns
xor
jbe
fwait
inc
xor
clc
push
adc
jmp
inc
jmp
into
insb
cmpsl
pop
sub
popa
xor
aaa
fdivl
enter
pop
mov
inc
shr
shlb
add
cwtl
push
add
or
inc
lock
movsl
icebp
sbb
leave
cmpsb
mov
add
xchg
dec
es
imul
or
cmpsb
xchg
int
fcompl
fiaddl
adc
mov
pusha
push
add
das
shll
cltd
sbb
mov
stos
pop
inc
rcll
aad
dec
out
movb
push
jno
push
add
aas
aad
cltd
nop
call
jg
dec
adc
movsb
mov
stos
pop
out
push
das
push
push
repnz
mov
mov
in
jge
jb
cmp
bound
dec
into
sub
adc
fstpl
pop
jns
xchg
adc
stos
pusha
cmpsb
sub
jg
mov
popf
pop
jl
inc
xor
lcall
gs
aam
movsl
add
out
shrl
and
inc
jbe
leave
inc
fistl
sbb
lock
sar
into
insb
out
es
repz
jle
add
movsl
push
in
insb
dec
push
fwait
sub
pop
outsl
jne
pop
push
ss
and
rcr
or
les
lret
jecxz
addr16
add
mov
sbb
inc
rcll
jmp
idivb
scas
shlb
dec
jne
aad
mov
mov
adc
push
inc
inc
outsb
insl
and
xchg
je
aaa
mov
cs
imul
sub
shrl
dec
ret
cmp
xchg
pop
xlat
inc
and
push
pop
jmp
add
imul
sahf
test
jno
fistpl
inc
adc
add
inc
cwtl
jecxz
pmaxub
dec
cs
int
pop
iret
insl
inc
fiaddl
shrl
add
je
push
cs
gs
idiv
out
scas
jp
xor
mov
or
push
sbb
and
jg
outsb
repnz
aam
stos
mov
cli
dec
jecxz
iret
xchg
sub
jp
mov
dec
xor
mov
push
out
cli
sbb
dec
add
mov
arpl
mov
and
stos
pop
sub
into
mov
push
fldln2
fsubs
xchg
mov
movd
int
jecxz
mov
notl
jae
jp
aas
ficoms
xchg
adc
lcall
xor
push
ffree
rolb
aaa
add
push
push
arpl
jl
jle
scas
bndstx
scas
cmp
and
cmp
outsl
mov
jae
pop
shll
cmpsl
lods
stos
cmp
fists
sbb
hlt
jecxz
push
or
jmp
out
dec
lss
ss
mov
mov
xchg
loopne
xor
ret
icebp
jg
pop
mov
mov
mov
in
sbb
jg
daa
lods
cmp
jae
pop
mov
mov
lret
idivb
loopne
lds
sub
cmp
sub
mov
inc
in
fidivs
mov
push
clc
adcl
les
or
aam
or
cmp
stos
test
cmp
movsb
std
das
ja
lret
xchg
sahf
mov
iret
pop
das
xor
mov
lods
inc
rcr
shl
jno
hlt
sub
xor
xchg
loop
outsb
stc
sbb
lret
jbe
outsb
fs
pop
jge
mov
mov
repz
sub
or
cli
sbb
dec
test
cmp
dec
fdiv
sbb
das
sti
stos
cwtl
sbb
xchg
es
out
iret
fidivl
mov
xlat
cmpsl
xchg
pop
jae
xchg
lock
pop
add
add
cmc
inc
inc
imul
jmp
xor
inc
ficomps
sub
sbb
push
push
fsub
jmp
iret
mov
dec
enter
xor
movsl
test
popf
fstpt
push
sbb
clc
push
sub
jmp
cmp
int
xchg
mov
fimuls
mov
movsb
test
int3
jne
test
in
hlt
mov
pshufw
addr16
icebp
xor
mov
cltd
lret
sbb
xchg
ficomps
push
rorb
iret
xchg
daa
push
adc
xor
mulb
fpatan
leave
pop
adc
movsb
shl
btr
les
jbe
popf
mov
icebp
call
in
dec
jl
sbb
ljmp
mov
std
adc
add
xlat
lods
adc
mov
xchg
xor
push
lds
fldcw
jg
xor
lea
cmp
jne
enter
lock
fldenv
jae,pt
cmpsl
and
sahf
dec
lcall
stos
test
sub
test
test
or
int
push
add
fdivl
loope
xor
push
mov
in
mov
or
adc
cld
mov
cmpl
sbb
popw
das
push
lret
pop
stc
push
out
es
sbb
stc
cli
in
aas
popf
cli
or
mov
sbb
jp
dec
inc
pop
xchg
fsubr
mov
jp
push
out
xorb
mov
ret
movsl
lds
pop
jns
pop
mov
les
cmp
add
jmp
jl
adc
push
xor
cmpsb
mov
and
mov
xlat
sbb
inc
mov
rorb
popa
xchg
dec
mov
lods
fadds
push
xchg
dec
add
dec
loopne
stos
dec
adc
mov
jno
push
dec
jecxz
insb
or
test
repz
icebp
and
xchg
fdivrl
fwait
push
cmp
jns
jmp
pop
xor
mov
dec
mov
hlt
cs
xchg
arpl
aaa
sub
shll
shrb
jmp
cs
inc
jg
mov
call
pop
mov
xchg
dec
add
mov
xchg
add
fwait
mov
ret
int3
xchg
jle
sbb
xchg
or
jae
or
outsl
insl
imul
xchg
xchg
pop
lods
sub
cmp
rolb
jae
fisubl
mov
lahf
push
xchg
jl
cld
mov
fcomip
xchg
jp
sbb
icebp
cli
sahf
data16
jecxz
sahf
outsb
mul
sar
icebp
mov
pop
pop
push
xchg
lahf
xchg
push
subl
jns
movsl
lods
movl
push
out
xchg
mov
pop
int
jmp
adc
fs
sarl
pop
fisttpl
scas
repz
push
data16
or
jnp
movsl
and
iret
imul
inc
hlt
pusha
xchg
cwtl
iret
mov
sbb
inc
call
cmp
imul
lret
fdivl
sti
or
out
cmp
fcmovnb
popf
nop
int
jmp
mov
push
rcr
and
inc
dec
mov
inc
mov
and
out
inc
jno
ret
cmp
adc
hlt
sti
repnz
mov
cmc
xchg
and
mov
adc
dec
jo
jae
inc
test
mov
sub
icebp
std
movl
sti
mov
loopne
std
cltd
repz
xor
or
lahf
dec
xchg
jb
adc
in
mov
loope
and
lea
mov
pop
outsb
jne
mov
movsl
filds
push
jns
lahf
adc
adc
dec
outsb
daa
leave
out
adc
jmp
xor
jp
mov
cltd
neg
arpl
pop
imul
cwtl
icebp
in
gs
hlt
pop
je
inc
or
sub
out
push
mov
movsl
cmp
lods
mov
insb
in
dec
lret
leave
jecxz
repnz
xchg
call
xchg
stc
lds
pop
jge
test
bound
jg
xchg
inc
and
rorb
add
lods
fisttpl
jno
xor
mov
add
movsl
push
mov
punpcklbw
jno
lods
and
add
iret
inc
mov
dec
add
pop
rorl
dec
cmc
mov
inc
jecxz
push
stos
aas
mov
mov
mov
in
or
pop
mov
pusha
les
js
lret
imul
das
push
jg
push
mov
add
sub
je
mov
nop
xor
adc
or
std
mov
pop
out
daa
xlat
mov
in
dec
imul
xchg
popf
ljmp
xchg
xchg
mov
mov
sti
push
rcll
jnp
cs
ret
cmpl
adc
iret
sbb
add
into
ljmp
fistps
insl
test
addr16
lcall
or
add
push
mov
pop
stos
lret
test
push
adc
pushf
sub
adc
and
cld
pop
std
xchg
call
hlt
ss
mov
sahf
inc
push
add
scas
loope
clc
pop
and
lock
daa
imul
in
mov
jae
into
mov
addb
insl
data16
mov
mov
mov
clc
loope
push
lds
movl
out
pop
call
adc
into
adc
jecxz
and
aaa
lods
push
pop
ja
cli
xor
pop
cmpsb
mov
mov
jl
divb
mov
pop
mov
aad
outsl
shr
jno
das
xor
repnz
jmp
movsl
iret
push
pop
je
daa
xchg
dec
add
inc
imul
bound
ljmp
mov
shrl
sub
sbb
adc
fsub
inc
stos
ljmp
inc
aam
movsb
test
into
gs
and
mov
sub
lcall
xchg
and
push
data16
push
addr16
ljmp
inc
sbb
jbe
sbb
clc
sub
inc
ffreep
cmp
sub
test
inc
icebp
popf
cld
inc
imul
jb
popf
xor
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
jb
mov
add
jl
into
adc
xor
mov
sbb
cmpsb
lret
in
sub
xlat
cmp
nop
add
sbb
add
outsb
xchg
pop
bound
addr16
in
jmp
shr
fnstsw
movsl
ljmp
push
jnp
xchg
scas
mov
int3
test
mov
scas
ficoms
insb
cld
in
movsb
and
lea
cmp
push
and
xchg
dec
sbb
ds
cmp
push
ret
lcall
filds
jmp
pop
in
fsubs
roll
fists
jae
sub
lcall
inc
sbb
pop
adc
dec
insl
out
stos
mov
mov
and
stos
xchg
das
lock
dec
push
mov
nop
xchg
xchg
shr
push
into
add
lock
mov
test
rcrb
jmp
mov
aaa
mov
fdivr
jl
aad
stc
xchg
add
dec
push
push
cmp
xlat
xchg
xchg
push
loopne
mov
int
outsl
adc
inc
inc
push
repnz
jo
ret
sub
clc
cmpb
adc
popa
mov
push
cltd
add
inc
clc
jg
int
repz
loop
rcrl
dec
lea
call
lds
jle
fstpt
push
scas
cwtl
cli
xor
movsb
movsl
out
xor
imull
fnstsw
cmpsl
mov
mov
imul
cwtl
fs
mov
sbb
aam
ja
pop
dec
push
push
sahf
push
fldcw
into
xchg
inc
popf
and
popw
ret
cmp
xor
test
rclb
jae
insb
adc
out
sti
mov
pusha
add
adc
mov
or
iret
cwtl
cmp
mov
ds
out
in
fildl
add
gs
scas
xchg
or
scas
aad
inc
inc
aad
mov
ds
xorl
addr16
cmpsl
fsubl
dec
pop
loopne
inc
adc
pop
sbb
fdivrs
lahf
adc
test
add
cmc
outsl
jle
inc
lods
imul
xor
inc
pop
adc
inc
loopne
jl
xchg
jl
leave
adc
jl
mov
movsl
mov
insb
imull
mov
pop
gs
jl
lea
aaa
shr
inc
imul
sub
sub
in
imul
or
dec
scas
call
cmpsb
and
movsb
mov
push
in
mov
sti
xor
mov
ds
lds
incb
push
aas
sub
dec
cli
out
icebp
ret
ja
frndint
scas
xor
adc
pop
cli
pushf
in
shlb
icebp
mov
shrb
cmp
inc
mov
mov
mov
popf
cmp
pop
xchg
dec
popa
cmp
cmc
loopne
loop
sub
xchg
sti
adc
sti
jb
jecxz
lahf
xor
inc
lock
jbe
mov
push
ss
imul
sub
sahf
aaa
adc
sbb
fst
loope
push
sbb
cmp
cmc
cmp
subb
mov
and
negl
repnz
cld
sahf
sarb
loope
mov
push
mov
or
xchg
mov
out
pusha
bound
mov
lea
xchg
cwtl
jnp
insl
nop
xlat
out
imul
fs
and
cmpsl
data16
scas
push
stos
insb
inc
out
sub
negb
xor
leave
xchg
push
mov
rep
jae
xchg
mov
data16
jb
mov
mov
int
jle
test
sbb
insb
out
pop
add
or
mov
sub
sub
pop
icebp
les
cmpsl
jbe
mov
push
in
pusha
pop
and
pop
jl
pop
aas
leave
xlat
cmpl
mov
sbb
xor
sub
cmp
es
jp
and
ret
scas
scas
ss
pushf
adc
xchg
inc
pop
push
ljmp
sti
mov
pop
sbb
xor
cmc
out
movl
and
or
loope
call
arpl
shl
cltd
jnp
cli
jne
push
jae
in
mov
pop
je
cmp
or
dec
add
mov
test
dec
mov
adc
shll
mov
push
stos
repnz
xorl
out
push
jl
mov
fldcw
sbb
dec
clc
fidivs
jnp
sbb
call
adc
loope
call
int3
mov
and
push
gs
cmovo
pushf
dec
jp
lods
jmp
aam
sbb
imul
in
sbb
stos
jg
cmp
mov
sub
pop
in
shrd
arpl
mov
inc
es
decb
enter
subb
sub
fsubrl
cmp
sub
push
mov
add
nop
aaa
lahf
sti
ja
mov
sub
rol
add
push
mov
mov
jbe
pop
mov
shlb
jg
add
std
mov
cli
mov
test
shrb
js
lock
inc
push
lret
shr
xchg
cld
dec
ds
das
mov
mov
aam
in
lret
fcoml
mov
insb
mov
loop
push
jns
loope
xchg
pop
and
and
push
pop
jp
call
jno
mov
lods
dec
repz
js
sbb
repz
push
xlat
mov
adc
adc
pusha
add
outsb
insl
in
pop
cmpsb
ret
roll
jne
out
outsl
xchg
bound
add
xchg
mov
or
mov
sbb
sub
pop
pop
pushf
ds
inc
push
xor
jae
cmpsl
push
in
lods
jnp
pop
movsb
mov
push
sub
push
xchg
fidivl
jg
scas
jns
mov
push
push
jae
fcoms
and
jmp
dec
mov
and
popa
test
std
jns
add
cs
dec
jbe
shll
or
paddusw
call
insl
gs
and
das
jne
cmc
sbb
sbb
and
sbbb
and
test
adc
sub
or
inc
sub
arpl
movsb
fistpl
adc
cmp
out
in
sbbb
aam
mov
push
jne
rcrb
jmp
ss
inc
adcl
faddp
aas
jecxz
jns
adc
out
or
sub
arpl
cltd
lcall
dec
in
in
out
xchg
and
out
lret
aaa
fsubs
in
mov
xchg
cmp
sbb
cmp
sbb
shlb
cwtl
jbe
icebp
lods
subl
push
push
jge
leave
inc
insb
rcll
pop
int3
push
loop
sbb
int
cmpsl
inc
out
xor
xchg
xchg
inc
lds
movsl
and
xchg
arpl
pop
je
shl
popa
out
fmuls
inc
lds
in
dec
dec
in
arpl
mov
ja
and
subb
scas
aas
subl
sti
insb
shl
idivb
js
sub
sbb
shrl
pop
sahf
adc
jp
sbbb
mov
adc
inc
mov
mulb
jge
jnp
pop
push
in
pop
outsl
stc
mov
jns
lret
push
dec
loopne
call
push
mov
sti
sub
adc
out
pop
movsb
jmp
sbb
mov
insl
pop
call
cs
jne
sub
mov
sbb
cmpsb
stc
notl
pop
cmp
imul
mov
pusha
xorb
fs
fsubp
xchg
add
loopne
adc
sub
or
ret
aas
xchg
test
xchg
sbb
fwait
pop
mov
sbb
in
jne
xchg
cmc
je
xchg
in
mov
cwtl
cltd
dec
and
das
ficomps
in
push
out
pop
stc
lea
jle
cwtl
sub
push
sti
mov
sbb
and
inc
and
xor
fst
and
or
pop
jne
pusha
addr16
rcl
mov
mov
cli
push
into
aas
jecxz
or
mov
jbe
xchg
jge
inc
loopne
dec
push
dec
rclb
testb
out
je
ss
pop
cli
movsb
cmp
ret
add
xchg
jae
and
xchg
das
sub
push
scas
dec
loop
mov
out
clc
pop
xor
shl
add
jp
jp
out
nop
push
mov
lods
lret
test
push
jnp
and
imul
mov
iret
orl
pop
nop
lods
xor
dec
out
mov
or
adc
insb
mov
cli
xchg
test
fwait
cmc
dec
or
cmp
out
pop
outsl
push
testb
mov
js
jmp
pop
sbb
xchg
out
into
shr
scas
test
push
and
xor
scas
jge
icebp
enter
push
push
mov
mov
xlat
cli
daa
xor
imul
leave
xor
xchg
mov
xchg
in
mov
test
je
cmp
add
mov
inc
jns
sbb
pushf
sbb
sbb
arpl
push
pop
out
les
movsl
mov
fcmovbe
mov
js
push
push
push
mov
or
in
push
movsl
push
fbstp
dec
mov
mov
sbb
cld
jo
mov
rorl
in
in
fidivs
enter
pavgb
call
sbb
outsb
and
jge
dec
daa
adc
filds
ds
push
scas
pushf
mov
mov
scas
xchg
xchg
dec
call
or
sub
stc
fstpt
jl
or
adcb
popa
nop
mov
push
push
aaa
icebp
mov
cmp
les
fisttpl
pushf
add
and
add
or
push
cmp
scas
push
js
aaa
das
scas
imul
je
arpl
lea
xchg
rcrl
mov
in
iret
mov
insl
nop
inc
cmp
push
jnp
imull
xor
nop
loop
mov
xor
mov
adc
insl
xor
jl
out
movsl
pop
gs
or
inc
pop
mov
test
frstor
fnstcw
add
orb
aas
imul
jns
rcl
out
jns
pop
push
mov
stos
fs
hlt
xor
push
fwait
xor
aaa
pop
lds
push
shl
ret
fidivs
jmp
pop
std
sub
or
cmpsl
cmpsl
jmp
xchg
xchg
enter
cmp
sahf
outsb
add
loop
mov
stc
and
or
das
leave
lock
xor
mov
outsb
call
js
or
xchg
xchg
adc
fldenv
xor
sub
cli
andb
hlt
inc
stc
sarb
dec
fsubrp
mov
mov
fnstenv
mov
or
or
lcall
mov
inc
or
or
xlat
ret
and
lock
outsb
movsl
popa
insl
pop
inc
push
and
lock
push
out
or
andb
gs
adc
xchg
aam
imul
ret
pop
cmp
clc
dec
fwait
movsb
pop
in
int
push
imul
ret
xchg
jmp
push
mov
inc
jecxz
int
push
icebp
mov
inc
in
cmp
scas
aad
imul
sbb
test
les
lods
dec
in
nop
dec
xor
xchg
fs
sub
stos
adc
stc
cwtl
loope,pt
dec
push
outsl
push
jmp
es
les
xor
cmp
popa
pop
mov
jge,pn
ss
fidivrs
sbb
into
or
cmp
or
adc
jecxz
mov
data16
popa
pop
lahf
pop
sti
mov
and
jne
test
xchg
aaa
adc
stos
push
xchg
jmp
dec
add
lds
js
or
shll
ljmp
pop
in
icebp
adc
loope
test
push
sub
pop
jb
lret
sbb
fimull
xchg
insb
mov
mov
jecxz
sahf
or
add
movsb
sbb
idivb
jp
into
aam
adc
imul
ss
mov
iret
push
ret
mov
sub
mov
in
mov
mov
pop
pop
lock
dec
jbe
sbb
sbb
adc
sbb
int3
push
pop
enter
pushf
inc
aam
sbbl
imul
sub
cmp
cmc
ja
mov
ja
push
jb
imul
pop
pop
aam
or
cld
jg
test
test
ss
mov
inc
mov
lock
jnp
subb
adc
pop
sub
in
pop
pop
add
dec
sbb
dec
add
xor
test
popa
ss
call
es
enter
inc
and
mov
sub
adc
jg
stos
shl
or
dec
dec
lds
pop
out
xor
adc
fcmove
cld
std
xchg
sbb
sub
xchg
add
cmove
xor
mov
out
mov
inc
xchg
inc
iret
cltd
scas
push
or
add
int3
mov
ret
outsl
pop
shrb
xlat
cmp
xor
es
je
pop
pop
in
xor
push
dec
mov
mov
add
lret
push
jnp
add
cltd
aas
mov
push
cmp
mov
and
inc
mov
dec
xchg
xlat
outsl
sub
mov
icebp
repz
je
cmp
cld
aaa
cld
push
xchg
jg
ret
incb
test
clc
cmp
mov
shr
lods
jne
add
sub
cmp
faddl
add
cmp
imul
pop
jbe
in
stc
shll
mov
in
hlt
repnz
mov
cld
fwait
movsb
or
jmp
into
dec
push
dec
mov
mov
xchg
jb
mov
sbb
and
add
data16
mov
lret
mov
outsb
roll
jp
xchg
fldl
jp
pusha
jno
push
movsb
repnz
int3
add
loope,pn
adc
inc
popf
mov
and
sbb
sub
inc
scas
mov
adc
adc
xchg
xor
test
pushf
fisttpl
sub
push
add
mov
push
fmull
decb
push
or
ret
or
test
push
movsl
jae
mov
in
fwait
stos
mov
jbe
push
push
xchg
mov
xchg
mov
mov
cmc
xchg
mov
repnz
loopne
shrl
xchg
mov
xchg
or
pop
or
dec
sub
dec
sub
sub
icebp
dec
fcompl
cmp
dec
test
inc
dec
lods
sahf
mov
jns
cltd
xchg
pop
loope
fcomp
inc
ds
adc
inc
test
in
scas
adc
icebp
push
sbb
dec
mov
call
daa
xchg
and
jmp
mov
repnz
adc
sub
imul
stos
xor
sbbb
faddl
call
cmpl
test
cld
aas
jge
xor
lcall
popa
jno
enter
lcall
mov
dec
mov
mov
mov
jae
sbb
je
add
jae
popa
int3
pop
cmp
inc
xchg
adc
sbb
jmp
fidivl
mulb
mov
pusha
jmp
mov
cmc
fistps
ret
shl
pop
dec
sub
push
cld
je
mov
fisubrl
or
out
adc
mov
testl
imul
jb
in
repz
pop
aas
or
pushf
xchg
push
clc
sub
xchg
lret
out
ffree
int
jg
adc
inc
jge
sahf
dec
inc
cmp
clts
adc
ljmp
sub
xor
push
jge
add
mov
imul
fldt
lods
test
hlt
aad
out
mov
cmp
mov
es
or
sub
sarl
outsl
jae
mov
pop
gs
rorl
dec
test
cmp
cmp
xor
nop
or
jbe
and
cli
scas
loope
pop
jmp
stos
inc
pop
dec
add
mov
fsub
arpl
and
sti
xor
leave
cs
leave
jbe
stc
fs
or
dec
pop
stos
dec
fadd
mov
lret
jp
mov
mov
imul
pop
rcll
add
mov
cs
scas
rolb
cmp
inc
fldenv
hlt
clc
fisubrl
push
pop
dec
mov
cmc
flds
aaa
sar
das
je
stc
fwait
pushf
in
cmp
cmp
out
inc
xchg
ja
sub
scas
insl
jno
push
cmc
mov
adc
add
or
cmpsb
add
enter
into
adc
mov
js
mov
lcall
scas
jo
and
stos
int3
inc
mov
pop
das
icebp
push
sub
shl
jl
cmpb
arpl
imul
dec
out
xor
xor
shrl
sbb
cli
lret
outsl
mov
lods
sub
jmp
cmp
cs
lock
mov
push
call
jmp
bound
xchg
mov
add
js
notb
lret
ds
add
icebp
je
int3
mov
push
testb
push
or
dec
enter
test
pop
sbbb
push
and
out
ja
add
add
pop
xor
call
xor
pmullw
pop
xchg
push
nop
fcoml
sub
xchg
xchg
push
mov
push
in
cmp
mov
jl
pop
inc
movsl
pop
push
add
and
and
pop
mov
cmp
subb
mov
inc
mov
pop
test
js
bound
into
push
jl
insb
cmp
pushf
arpl
lea
sbb
mov
pop
pushf
dec
cmc
daa
push
js
mov
and
xchg
in
xchg
jecxz
outsl
jne
dec
cmp
xchg
inc
roll
mov
mov
push
push
pop
scas
mov
adc
lret
adc
and
jl
xchg
movsl
mov
and
ds
mov
fildl
adc
fxch
or
sbb
faddl
sbbl
mov
add
pop
pop
and
add
inc
f2xm1
leave
out
rcrb
mov
test
add
into
inc
std
popf
sti
jle
out
jae
sti
rep
insl
xchg
in
cmp
imulb
sub
fwait
js
nop
fbld
outsl
jae
mov
test
orb
push
ss
rorl
sub
je
pusha
xchg
outsl
sahf
inc
addr16
int3
bound
flds
add
clc
mov
rorb
mov
cwtl
rorb
inc
icebp
fwait
adc
dec
call
mov
pop
xor
repnz
scas
dec
lea
fmuls
jge
lret
je
enter
inc
add
pop
movsb
inc
stc
lock
mov
mov
mov
fdivrl
mov
and
out
mov
arpl
les
jno
and
mov
mov
mov
jns
lcall
mov
mov
push
call
push
repnz
jle
push
add
icebp
push
repnz
shlb
daa
add
testl
arpl
scas
push
cwtl
ret
daa
xchg
rcrb
inc
ret
pusha
lcall
enter
jp
or
bound
or
inc
mov
cmpsb
inc
and
mov
iret
mov
sub
adc
xchg
push
cmp
scas
xor
and
push
xchg
insl
mov
jae
dec
cs
sub
push
jmp
rorb
verw
lea
dec
fisubrs
xchg
outsb
jl
push
into
outsb
mov
test
push
inc
pop
pop
and
scas
test
jae
ja
cld
xor
jmp
mulb
in
movsb
stc
pop
pop
lret
or
and
mov
movsl
mov
cmp
arpl
enter
mov
sbb
loope
cmpsb
push
gs
inc
outsl
int
shlb
int
dec
scas
xorl
and
nop
jns
insl
mov
cmp
fcmovne
push
xor
cmpsb
jg
ret
or
fstpt
jo
jecxz
test
or
dec
js
add
int
jmp
mov
cmpsl
test
adc
and
dec
or
mov
lret
lods
xor
cmpsl
mov
adc
or
mov
cs
push
jl
mov
inc
imul
mov
iret
or
rorb
popl
aaa
xchg
xchg
add
push
xchg
dec
and
out
in
in
popf
mov
jecxz
sbb
dec
clc
data16
cmpsl
int
inc
in
push
mov
push
xchg
sbb
sbbb
cmpsb
push
cmp
lcall
inc
enter
push
adc
add
fadd
xor
push
cmpsl
mov
mov
stos
sbbb
lods
gs
mov
or
mov
lret
cmp
mov
jne
lret
aam
in
xchg
push
in
lret
mov
decl
and
dec
insb
clc
iret
adc
mov
push
leave
mov
stc
push
add
lret
push
cmp
pop
imul
stos
icebp
mov
pop
into
jl
cmc
sub
int3
inc
cld
or
int3
nop
aaa
adc
add
jb
adc
mov
sti
inc
mov
adc
dec
sbb
add
mov
and
xchg
ret
cmp
adc
pushf
repz
ds
fdivl
test
push
sub
inc
js
mov
xor
fdivrp
xor
dec
outsb
scas
sete
imul
popa
push
cmp
pop
push
dec
mov
jmp
jns
jo
hlt
mov
xchg
adc
data16
xchg
daa
and
aas
dec
sub
ficomps
enter
lret
les
cmp
add
cli
cmpsb
out
out
adc
cmp
jl
js
adc
inc
xlat
jnp
xor
push
sub
in
rclb
dec
lods
sahf
je
out
mov
iret
cli
test
mov
dec
or
mov
and
loop
dec
pop
xchg
in
lcall
jb
dec
add
add
clc
scas
pop
xchg
sti
add
sbb
sahf
rol
fwait
inc
jae
lods
outsb
sub
inc
lcall
int
mov
out
xchg
nop
psrlw
clc
imul
syscall
add
mov
rorl
leave
arpl
lods
jl
mov
shll
sbb
add
dec
cmp
imul
mul
in
mov
les
xchg
lahf
jns
mov
mov
pop
int
sbb
arpl
and
mov
push
push
movsb
mov
sbb
sbbl
rorl
imul
mov
jno
and
sti
cmp
jnp
mov
xchg
popf
in
xor
inc
jns
jnp
mull
or
adc
add
sbb
subb
hlt
test
jl
adc
js
add
mov
js
inc
cwtl
mov
in
outsb
or
xchg
out
test
xor
inc
stos
sub
rcll
inc
xor
mov
sub
cmp
lcall
xor
call
imul
mov
test
jg
cmpsb
pop
cwtl
ret
mov
xor
pop
jl
jecxz
and
insl
movsl
popf
sub
pop
sub
sbb
xor
add
test
dec
out
or
negb
stos
fdiv
mov
or
mov
ja
cmp
xor
push
pop
jne
dec
cli
push
xlat
shl
dec
icebp
enter
imul
nop
lds
sub
push
mov
adc
sahf
fs
inc
xlat
lret
xchg
mov
mov
push
insl
mov
xor
cmp
test
adcl
inc
xchg
inc
inc
mov
in
pop
push
mov
fwait
into
in
jge
or
cmc
gs
fstpt
or
fstl
test
pop
insl
movnti
decb
out
adc
fstpt
lods
sbb
lods
xchg
adc
fstpl
test
xchg
sbb
mov
cmp
in
sub
add
test
fldcw
loope
popl
and
orb
pop
int3
mov
lods
scas
popa
inc
sub
mov
cmp
jnp
sbb
push
cltd
push
lret
aad
cmpb
fdivrp
popf
push
daa
insb
ja
lea
jp
out
sub
jnp
fstpl
mov
adc
popa
cmp
data16
std
daa
les
negb
mov
ficoms
cmpsb
lea
sti
lret
mov
imul
mov
aas
add
stos
push
sub
in
arpl
lcall
add
push
lcall
push
lret
outsl
les
sub
loope
aam
aam
cld
dec
call
data16
loope
ret
sub
or
cmpsb
and
sbb
add
mov
sbb
pop
loop
lds
add
jp
arpl
call
inc
enter
xchg
pushf
fsubs
adc
js
mov
pop
cs
dec
or
loopne
pop
cmp
mov
jbe
push
mov
inc
insb
lret
sbb
les
sbb
stos
pushf
mov
fstl
lahf
sahf
test
cmpsl
cmp
sub
sub
mov
adc
les
ret
mov
push
push
stos
or
shll
lret
dec
sbb
pop
pushf
adc
cld
subb
xchg
mov
fwait
or
repz
clc
aaa
xor
jg
mov
pop
ljmp
push
mov
sub
stos
fdivl
out
sahf
sbb
stc
cltd
add
mov
cwtl
mov
pop
jmp
je
fcmovb
add
dec
xor
ljmp
jne
mov
sbb
inc
sbb
out
mov
fisttpl
jg
mov
ret
inc
rcrb
pop
pushf
stos
sub
lret
sub
dec
nop
sbbl
mov
ficoml
dec
lahf
popw
push
mov
pop
mov
mulb
cld
aas
nop
sub
jo
enter
int3
addr16
add
sbb
testb
jb
cmp
dec
js
mov
mov
push
pop
out
iret
sbb
push
mov
inc
lahf
hlt
xlat
stc
xchg
push
shrl
mov
push
mov
out
jge
and
adc
cmp
or
repz
test
movsb
shrb
mov
xchg
cltd
out
nop
pop
rcl
and
orl
adcl
inc
or
push
icebp
cwtl
fmull
clc
adc
xchg
lret
xor
jo
sbb
mov
mov
push
push
xor
push
sbb
movsb
jp
or
sub
pop
or
addr16
mov
cmp
jl
sbb
mov
sub
xor
in
sbb
jg
popf
fidivs
fidivrs
jecxz
jp
cmpsl
loope
imul
fcomps
popa
pop
and
mov
xchg
lods
in
mov
mov
jo
pop
pusha
push
les
pop
jbe
dec
xchg
push
out
in
es
push
cmp
jns
pop
mov
je
xor
cmpsb
sub
testb
xor
mov
gs
inc
mov
fsubrl
pop
pop
push
pop
adc
jo
cmp
fimull
sub
mov
loop
push
mov
cld
or
pushf
rcll
popl
ret
sub
repnz
icebp
sub
test
mov
cmp
int3
out
xor
adc
add
aas
jns
ljmp
cmpsb
outsl
dec
mov
rolb
ja
arpl
sub
mov
lcall
imul
or
xor
adc
popa
or
sti
fidivs
pop
cld
in
jle
movsl
add
pushf
ret
mov
sub
sbb
sbb
test
popa
jg
adc
xor
sub
adcl
push
jp
push
daa
push
insb
daa
mov
sub
inc
lock
dec
mov
inc
mov
out
mov
aad
mov
push
mov
pop
in
or
es
sbb
popf
lret
pop
pop
mov
outsb
imulb
push
push
cmp
loopne
inc
out
inc
push
mov
push
mov
push
push
xchg
push
les
jnp
inc
fmul
mov
int
dec
popf
dec
aaa
sbb
add
dec
repz
xchg
sub
scas
jnp
repnz
shl
fistps
mov
dec
adc
jle
xor
negb
js
orb
fwait
mov
scas
or
in
test
xchg
int3
sti
mov
mov
inc
sbb
roll
es
pop
movntq
out
movsb
fistl
sub
inc
xor
mov
cltd
aam
cwtl
cmpsl
push
out
pop
add
mov
nop
push
dec
pop
xchg
negl
push
adc
lcall
insb
mov
mov
mov
js
daa
fs
fiaddl
pop
das
movsb
add
pop
hlt
mov
fs
ljmp
cld
mov
dec
add
sahf
xchg
mov
roll
in
shl
fidivl
sbb
mov
das
dec
jae
jg
adc
dec
push
adc
push
cmp
in
jnp
push
iret
xchg
lods
int3
add
jmp
push
fldl
leave
jnp
stos
out
mov
imul
outsl
in
dec
sub
cmc
mov
paddusw
pop
iret
neg
unpcklps
inc
jecxz
mov
push
xchg
mov
pop
jg
mov
jne
leave
cld
mov
cs
push
mov
add
fs
jecxz
out
repnz
jb
inc
lds
mov
lods
inc
popa
add
sub
sub
aaa
dec
dec
sub
add
sbb
adcb
mov
test
and
das
adc
push
mov
dec
add
je
aaa
lahf
mov
call
push
xchg
aas
repz
test
test
inc
push
stos
lea
or
push
mov
mov
mov
dec
pop
std
sbb
popf
and
cmp
loopne
xchg
fistps
push
inc
pop
test
sbb
dec
xor
adc
cmpb
pop
push
mov
testl
dec
dec
push
cmpsb
fs
and
daa
pop
jecxz
js
test
adc
add
mov
mov
fs
jbe
loopne
fs
cmp
mov
notb
mov
clc
pop
movsl
std
icebp
pop
jle
mov
es
sub
mov
test
mov
inc
lods
pop
pop
popf
push
cmpsb
and
in
cmp
mov
sbb
out
dec
pop
loope
ja
sahf
outsb
xchg
repz
cwtl
aas
sbb
mov
push
daa
mov
hlt
and
push
add
xchg
in
jp
push
push
orps
leave
dec
mov
out
xor
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
jecxz
lret
mov
pop
jl
enter
je
hlt
mov
arpl
jp
and
jecxz
sbbl
xor
jno
xchg
jle
pop
bound
add
or
loope
push
mov
fidivrl
mov
addr16
push
mov
negb
push
aaa
jne
fcomps
stc
stos
xchg
movsl
jb
sbb
scas
aaa
fdivs
out
les
inc
mov
ds
mov
jbe
push
popf
jno
popf
push
sub
ret
pusha
imul
std
xor
or
pop
cmpsb
lret
in
mov
fnstsw
inc
jns
cmp
lds
xchg
mov
push
loopne
mov
or
test
je
mov
xchg
add
or
sub
repz
mov
hlt
mov
pop
and
sub
cmc
mov
push
test
scas
cltd
jnp
adc
outsl
repz
pop
lret
hlt
dec
adc
jecxz
push
adc
push
pop
xlat
call
shlb
sub
loopne
add
fisttpll
ficoms
xor
nop
movsb
pop
fs
outsl
adc
repz
mov
pop
jne
xchg
jg
mov
push
cmp
mov
imulb
add
xor
dec
test
xor
sub
add
xchg
mov
jecxz
adc
pop
aaa
lret
test
cs
mov
jae
adc
movsb
enter
repz
mov
fsubs
jae
les
xchg
hlt
xchg
cmp
jl
and
jb
popf
dec
stos
imul
fst
xchg
insl
inc
xor
mov
mov
mov
gs
xor
shrb
push
adc
push
xchg
stc
aas
sbb
orl
mov
cmp
pop
test
sub
jge
sar
out
stos
xchg
mov
jmp
stos
sub
pop
mov
loop
ficompl
in
out
mov
cmp
mov
jo
inc
stos
mov
jb
sub
dec
ja
andb
rclb
push
inc
sbb
lret
aas
mov
inc
xor
mov
adc
outsl
xchg
in
insb
xchg
in
sbb
xor
push
cmp
rclb
mov
popa
stos
xchg
int3
and
es
xor
shll
xchg
sub
das
jno
adc
mov
das
mov
push
mov
push
int
stos
xchg
and
sbb
test
add
mov
js,pt
out
push
shl
push
arpl
cmpsb
test
mov
lods
dec
sbb
sti
mov
push
in
sub
mov
out
lcall
or
sub
sahf
scas
bound
cmp
imull
stos
nop
sbb
pop
repz
jp
push
add
mov
jnp
and
adc
pop
mov
inc
outsl
popa
call
jae
xor
cmp
cmpsb
sbb
push
leave
sbb
and
mov
mov
test
push
add
jb
insb
mov
arpl
lahf
inc
push
lds
cmp
das
xchg
shrb
cmpl
mov
cmp
mov
shll
js
fwait
jg
icebp
movsl
scas
push
inc
push
jo
int
and
push
fisttpl
inc
xor
mov
loop
aas
jb
or
cmp
or
idivb
popf
inc
inc
pop
inc
push
pop
or
sbb
and
hlt
cld
out
fdivp
aaa
pop
in
cmpsb
in
sub
movsb
jne
pop
andl
and
and
sub
stos
clc
cwtl
xchg
push
inc
jp
int
outsl
adc
test
pusha
adc
add
stos
outsb
push
add
jl
push
jo
insb
inc
dec
imul
into
jge
cmpsl
frstor
sub
mov
out
clc
and
nop
outsl
jae
push
rcrl
pop
dec
out
test
cmp
aam
in
pusha
lods
dec
test
push
ljmp
enter
cmp
xchg
fadd
jb
cs
jp
gs
and
sbb
push
push
xchg
cmp
push
cwtl
pop
outsl
test
pop
jbe
repz
pop
and
aaa
repz
int3
arpl
hlt
iret
fwait
clc
dec
sbbl
les
pushf
outsb
mov
test
test
loopne
repnz
push
insl
mov
xor
fstpt
add
mov
ljmp
and
xchg
in
pop
inc
bound
dec
test
mov
test
in
xchg
or
mov
add
push
or
push
xor
pop
and
pop
test
lret
scas
leave
mov
add
mov
pop
outsl
xor
add
sbb
xor
xor
add
adc
mov
inc
lods
aam
inc
imul
stos
cli
lret
jo
lret
je
rorl
les
mov
mov
loope
fcmovb
mov
dec
xor
popf
popa
lods
je
mov
pop
jmp
sub
push
nop
ja
xor
pop
jl
or
hlt
jecxz
movq
cmp
cmpsb
out
cmpsb
or
shrl
pushl
cmc
loopne
mov
and
sbb
sub
mov
mov
pop
xor
add
xor
jno
nopl
out
mov
and
testb
fistpl
mov
or
lahf
add
jb
shrb
add
and
scas
dec
ss
xor
add
cmpsl
nop
arpl
mov
lods
enter
xchg
das
les
inc
rcll
mov
inc
data16
sbb
sbb
cmp
add
repnz
jno
xorl
inc
pop
xlat
push
scas
js
add
scas
cs
push
cmp
mov
mov
xor
in
stc
in
push
push
fstenv
push
sub
sti
lea
pop
int3
cmp
jb
in
outsl
jnp
mov
or
jb
imul
mov
add
jns
adc
bound
in
sub
shrb
push
pop
push
imul
xchg
pop
or
jbe
lea
adc
loop
in
cwtl
loop
push
aas
xchg
adc
mov
fucom
dec
clc
or
mov
xor
push
xchg
jge
sbb
int3
and
outsl
or
and
stos
inc
cmpsl
xchg
xchg
mov
bswap
imul
pusha
aaa
imul
pop
dec
push
js
repnz
scas
pop
ret
imul
add
in
fs
xchg
inc
mov
push
sub
mov
ret
inc
xchg
loopne
pop
dec
gs
xlat
xchg
and
and
jl
dec
xor
push
sub
jp
add
mov
pop
mov
movsb
cmpsb
fcoml
or
sbb
in
sub
loopne
add
sub
icebp
push
push
lods
pop
addl
scas
add
xchg
pop
nop
mov
pop
daa
pushf
mov
push
jno
mov
xchg
add
add
xchg
shll
repnz
dec
in
repnz
adc
hlt
lock
lahf
enter
daa
ljmp
sbb
aad
inc
or
sub
mov
into
xchg
gs
aad
xchg
add
scas
test
lods
popa
sub
push
mov
xor
xchg
cmp
nop
xor
adc
cmp
in
pop
xchg
dec
xor
jp
xlat
shll
xchg
loope
cmp
out
arpl
push
xchg
mov
mov
lcall
add
adc
orl
mov
lret
add
mov
xor
mov
inc
push
ficompl
clc
jecxz
jp
push
add
push
ss
daa
sub
imulb
dec
sbb
add
push
adc
or
lcall
inc
xchg
mov
xor
lds
out
sub
xchg
xor
push
mov
test
push
push
pop
jle
sbb
out
add
insl
in
mov
push
pushf
inc
aad
or
fcmove
cmp
popf
xchg
aas
pop
popf
out
fdivp
xor
sub
sbb
push
xchg
xor
jnp
push
rorl
xchg
and
mov
out
cmp
sti
jbe
call
xchg
and
popa
fsubrl
lret
popa
sbb
rcr
pop
fistpl
arpl
pop
sbb
and
adc
mov
xor
push
inc
stc
icebp
nop
cwtl
xchg
je
add
add
xor
aas
jmp
hlt
and
push
add
mov
push
lods
jnp
jo
faddl
leave
sub
mov
movl
out
add
and
ss
fimull
or
clc
mov
push
into
fnstenv
cwtl
adc
dec
xchg
dec
dec
push
sub
xchg
xor
aam
ljmp
xlat
hlt
push
adc
outsl
insl
pop
xor
pop
and
pop
ret
in
jbe
scas
jge
jb
sbb
mov
fistpl
pop
xor
cltd
pop
test
and
cmp
test
cli
loope
popf
mov
stos
setbe
mov
dec
mov
out
jae
pushf
xchg
out
ds
pcmpgtd
sar
add
out
hlt
aad
stos
leave
loope
mov
add
jl
xor
aam
scas
push
out
and
arpl
adc
out
aaa
jns
sbb
lds
jg
dec
jle
popf
cs
jl
pop
fildll
fs
std
inc
pop
or
xor
add
push
insb
rorb
adcb
xchg
popf
in
ds
fistpl
in
add
cmp
roll
je
mov
out
add
xlat
int3
cmp
jb
or
in
push
pop
iret
jmp
hlt
mov
mov
test
and
cmp
shll
inc
push
jmp
xor
jge
daa
xchg
aaa
adc
outsl
in
push
cmc
fmuls
aam
pop
adc
clc
xor
sub
hlt
push
or
aas
fnstenv
push
pop
and
test
mov
popa
loop
mov
jae
xor
cvtpi2ps
inc
std
pop
out
adc
pushf
xchg
nop
cmp
test
dec
cld
mov
jb
xor
and
inc
and
sbb
lods
sbb
mov
je
bound
dec
adc
rolb
sub
xchg
cmp
cwtl
or
push
add
jnp
mov
sbb
sub
gs
int3
ficoml
mov
xchg
and
mov
lods
fbstp
push
fistps
hlt
lods
and
clc
mov
incb
daa
sub
popa
out
cli
push
jnp
ja
test
cmpsl
jp
inc
push
and
jbe
mov
push
dec
cs
dec
roll
mov
inc
xor
xlat
mov
pop
stc
lahf
mov
xor
mov
lcall
lods
fistl
dec
cld
add
jno
aas
cmp
xor
sbb
fcomps
fimull
sbb
push
int
jns
lcallw
xorb
mov
hlt
or
xor
dec
into
lret
and
mov
aaa
outsl
adc
xor
add
arpl
fsubp
sti
addr16
inc
jecxz
mov
in
cmpsl
xor
or
cmp
ret
shrb
push
jbe
loop
jb
ret
mov
cmp
ss
cmp
inc
dec
or
dec
inc
cmp
adc
gs
add
into
pop
dec
sti
loop
negb
adc
cwtl
test
imul
stc
mov
lret
aas
pop
iret
jnp
add
fwait
loope
xor
push
mov
fdivrl
insb
mov
xchg
test
hlt
jns
out
jno
lea
jmp
dec
pop
dec
shlb
push
adcl
icebp
cli
shrl
pop
sub
jno
mov
push
jns
push
mov
ss
add
xchg
or
in
outsl
icebp
push
or
or
fidivs
jl
lock
in
fcmovnb
nop
or
mov
lret
lahf
mov
push
pop
inc
inc
fnstsw
adc
jg
cmp
lds
lea
add
scas
movsb
call
imulb
negb
mov
xorl
xchg
push
pop
inc
or
jg
out
js
std
lret
je
pushf
addb
into
fs
pop
icebp
push
cmpsl
add
sub
add
lods
test
ret
mov
push
iret
lret
fdivs
push
repnz
cli
subl
adc
dec
xchg
jle
mov
repz
adc
cs
pop
clc
outsb
sub
jl
xchg
or
and
test
cmpsl
push
sub
call
insl
jo
mov
insb
std
xchg
into
inc
pop
or
xor
jno
or
or
adc
lods
add
sahf
inc
aas
insb
out
and
cmp
pop
pcmpgtw
std
icebp
fldln2
pop
sub
in
cmp
mov
out
cmp
mov
add
cld
add
inc
jae
push
or
sahf
leave
cmp
push
push
aas
xchg
dec
rep
lds
push
and
push
lds
inc
dec
xchg
aam
dec
mov
mov
jl
dec
test
mov
jecxz
pop
ds
std
adc
and
add
add
cwtl
in
push
fildl
insl
cltd
xor
clc
insl
or
sbb
jns
push
and
mov
adc
pushf
jae
add
jmp
mov
stc
loop
rcrb
movsl
hlt
pop
push
push
fidivrs
pop
xor
cli
mov
sti
fimuls
xchg
cmp
cs
push
push
aad
ret
sbb
icebp
add
inc
add
aad
xchg
mov
jb
inc
dec
xchg
pop
and
push
jne
mov
push
inc
pop
insl
pusha
ljmp
loope
and
mov
scas
push
mov
lea
cmc
mov
mov
or
cmp
je
in
adc
pop
pushf
jge
insb
jb
add
sbb
inc
out
mov
iret
and
fadds
xchg
xor
in
lock
jae
mov
and
roll
rorb
pop
fyl2x
dec
push
pop
adc
rol
add
fcompp
stos
push
sbb
mov
jne
and
cmc
fistps
or
outsl
mov
cli
jae
mov
sahf
cmc
xor
pop
mov
in
mov
pop
xchg
jb
mov
pop
dec
out
fsubrp
fs
pop
ljmp
arpl
xchg
ds
cs
sarl
jle
push
jne
xchg
shlw
mov
neg
mov
push
sbb
clc
sti
jb
fincstp
rorb
cli
pop
loop
insl
jns
xor
vmwrite
adc
sbbl
shlb
adc
int3
fst
jle
notl
jmp
scas
pushf
lea
stos
push
sbb
movsb
fxch
mov
and
lret
sahf
xor
or
repnz
mov
pop
js
popf
lret
ds
sbb
pop
mov
cmp
mov
mov
mov
dec
mov
shlb
fstps
cmpsb
mov
test
shlb
movsb
fxtract
fisttps
add
mov
sarl
jl
aaa
xchg
std
insb
mov
add
lods
into
mov
mov
mov
push
sbb
out
outsl
mov
clc
push
adc
sete
shlb
add
jp
out
dec
pop
dec
andl
jl
in
call
push
push
or
mov
cmc
pop
aas
insl
sub
clc
pop
and
leave
add
lods
cwtl
jge
sub
mov
or
cmpsb
pop
js
pop
sub
jecxz
js
ret
test
ficoml
lods
pop
push
mov
out
pop
xor
jnp
sti
test
shll
scas
stos
loope
pop
add
cmp
jns
cmp
pop
pushf
je
mov
pop
lea
add
out
jns
adc
dec
push
int3
dec
ret
mov
mov
aam
sbb
mov
sub
add
sbb
test
pop
or
loopne
sub
push
int
mov
pop
and
negb
push
jo
inc
or
outsb
loope
notl
cmc
cmp
push
push
jbe
jmp
movsb
scas
sub
shlb
cwtl
mov
in
out
addl
movsb
fdivl
inc
cmp
mov
xor
sub
xor
sbbl
sar
dec
sbb
mov
lods
ja
sub
cmpb
test
popf
jb
dec
int3
pop
loopne
and
movsb
mov
push
test
dec
stos
add
pusha
mov
cmp
movsb
sbb
push
add
outsl
sbb
fs
push
adc
aam
popf
dec
push
dec
pop
jl
push
int
push
push
cwtl
adc
jmp
repz
xchg
mov
xchg
or
sbb
test
fldenv
scas
int
lods
dec
or
and
insb
clc
and
or
sbb
cmpl
inc
jns
dec
inc
jb
repnz
cwtl
ljmp
add
testb
aaa
xor
test
mov
fstps
loop
aaa
ja
pop
push
dec
xchg
lahf
scas
bound
out
xorb
xchg
xor
mov
or
mov
xor
je
lahf
mov
ss
test
jge
in
push
lahf
push
dec
jmp
ja
shll
repnz
mov
jbe
jae
mov
mov
mov
cmp
pcmpgtd
pop
dec
fnstenv
mov
add
hlt
shll
movsb
popf
push
push
and
add
mov
inc
jge
xchg
sub
xchg
xor
inc
xchg
aad
sub
icebp
cld
pop
ficoml
jecxz
sub
pop
push
jmp
ja
push
dec
mov
push
cmp
xchg
flds
sbb
mov
adc
mov
data16
pop
pushf
xor
add
in
sbb
xlat
sti
push
sub
adc
fwait
ror
test
mov
sahf
mov
aaa
aad
ds
or
xor
cmp
pop
xchg
inc
inc
es
pop
cld
into
les
or
in
mov
ss
aaa
push
sbb
lods
push
test
ffree
divb
inc
in
add
and
data16
and
jne
stos
fwait
mov
daa
jg
mov
push
adc
mov
cld
mov
pop
repz
mov
repnz
rolb
and
jae
dec
aaa
and
daa
jle
jns
out
xchg
xor
gs
sbb
fs
in
test
jge
push
ret
aas
sbbb
and
pop
mov
xor
and
push
fstpl
rclb
xchg
lea
xchg
lods
fiadds
mov
lahf
pop
inc
test
pop
ds
pop
mov
xlat
cmp
jecxz
lea
shll
or
inc
xchg
ror
mov
loop
mov
and
xor
cmp
or
xchg
mov
pushf
dec
jmp
dec
jge
inc
inc
sbb
mov
into
sbb
push
cmp
inc
in
mov
push
inc
pop
sub
xchg
aad
cld
pushf
inc
add
xor
sbb
lea
es
lahf
mov
jns
stc
in
cmp
pop
roll
les
push
stos
sub
jecxz
enter
cmp
xchg
ljmp
cmp
call
jns
xchg
pushf
and
and
sub
hlt
rcl
lods
cmp
cs
cmp
hlt
or
mov
adc
dec
movsl
adc
lret
out
add
mov
adc
js
dec
in
cmp
popw
loop
or
subb
lds
push
mov
mov
js
mov
mov
loopne
xor
push
pop
fdivl
jge
test
inc
push
push
sbb
mov
dec
lret
jmp
in
cwtl
sbb
jge
xor
push
jmp
loop
sbb
or
jge
lret
push
xchg
imul
imul
push
ljmp
cli
xchg
in
jae
sub
and
push
xor
sti
leave
sti
movsl
inc
lcall
sbb
enter
lods
jp
push
jo
insl
ficompl
push
out
jnp
fildll
or
or
sub
sarb
push
sub
and
divl
fnstenv
sub
fnstsw
cmp
imul
push
jl
pop
add
movsl
sub
std
test
bound
lea
imul
dec
cwtl
dec
cmp
aam
movsb
or
jo
rcl
insl
add
xchg
fwait
cltd
sub
inc
icebp
cmp
cwtl
cld
out
testl
and
xchg
and
xor
test
pop
stos
stos
test
int3
fstpt
out
adc
xorl
movsb
aad
mov
fs
mov
outsl
xorl
data16
leave
jg
mov
cmp
icebp
outsb
push
test
push
jle
sbb
test
shll
ss
cmp
cmp
insl
lock
dec
jmp
jle
lds
mov
sub
mov
sbb
cmpsl
dec
add
fcompl
or
mov
shll
test
popa
daa
xchg
insb
mov
cli
adc
dec
add
mov
js
sub
movl
fnstcw
adc
test
repz
iret
sti
nop
jle
push
add
pop
gs
push
cmp
les
xor
xor
add
inc
xchg
adc
lret
jmp
clc
inc
out
xorl
mov
or
movsl
mov
xchg
push
test
xor
xor
punpckhbw
outsl
pop
pop
push
outsl
push
jne
arpl
out
cwtl
and
push
dec
push
sub
mov
push
push
aaa
hlt
sbb
jae
les
lock
std
in
stc
push
pop
icebp
lret
cmpsl
sbb
and
out
fistps
iret
es
leave
push
inc
or
xor
jl
in
sti
push
adc
pop
push
push
jb
dec
fs
mov
push
mov
cld
repnz
inc
in
inc
pop
sbb
jo
push
jae
pop
xor
sub
in
ror
pop
dec
sti
insb
ret
dec
hlt
pop
dec
pop
loop
lret
sahf
ja
mov
outsl
and
push
sub
jne
pop
shll
pop
push
or
outsb
loop
sub
sti
jae
xor
nop
cmp
jg
fidivrl
mov
call
mov
bndstx
cwtl
and
jg
imul
sbb
sbb
xchg
cltd
jno
iret
jns
filds
xor
gs
fcoml
ret
add
push
xchg
orl
mov
add
cmpsb
push
fs
pcmpgtw
es
movsb
pop
call
adc
imul
shll
fisubrl
cmpsb
dec
enter
push
arpl
jb
push
in
mov
cli
movsb
inc
push
stos
int3
mov
mov
imul
xor
and
xor
fs
mov
xlat
inc
fisttpll
jecxz
mov
int3
insl
jae
inc
cmpsb
push
idiv
adcl
xchg
int
arpl
pop
sub
clc
sbb
ret
or
addb
jle
int
mov
mov
pop
out
sbb
adc
call
gs
lret
lods
je
push
add
pop
jno
adc
sahf
jae
or
pop
jp
xchg
push
aam
mov
mov
or
mov
mov
shl
mov
sub
sti
rorb
cmp
xorb
imul
loope
fmulp
inc
cmp
mov
jl
cld
mov
repnz
cmp
cld
stos
mov
lock
out
test
sbb
lret
inc
repz
js
sub
add
jmp
or
jmp
roll
jg
in
ret
xchg
dec
cmp
cld
test
out
sub
push
cmc
mov
add
in
loope
lret
std
xchg
jae
dec
mov
sti
sbb
mov
rcl
out
out
arpl
lcall
push
or
int
push
cmp
sbb
movsb
sub
arpl
ficomps
cmp
adc
testl
enter
scas
jl
xor
sub
mov
fsubl
fstps
pushw
or
xchg
inc
outsb
dec
add
mov
pushf
push
mov
dec
movsl
pop
sbb
lea
fisubl
mov
sahf
and
insb
xor
mov
mov
add
add
and
push
fistl
jno
cld
xor
sbb
aaa
or
push
mov
js
into
push
mov
and
popf
jg
mov
cs
and
jo
icebp
sbb
inc
leave
outsl
out
mov
fwait
dec
cli
hlt
repnz
cmp
jno
cmp
add
lea
cs
dec
je
sbb
cli
sbb
or
cltd
gs
adc
sub
add
inc
inc
and
mov
cmpsl
add
sbb
push
ret
jbe
les
sahf
fisttpl
push
and
negl
call
xchg
js
out
call
lret
dec
jle
ret
stc
orb
push
push
push
and
dec
mov
jno
add
int3
dec
lock
out
out
out
shrb
lret
stos
subl
dec
pop
outsb
aaa
addl
xchg
jns
add
and
mov
addr16
sbb
insl
inc
int
inc
jecxz
icebp
icebp
and
mov
int3
push
pop
adc
jl
out
insl
push
fsubrl
and
ja
shlb
arpl
xchg
xchg
test
mov
enter
dec
sub
das
jg
enter
jecxz
and
je
das
iret
push
xchg
aaa
cmp
iret
mov
dec
shl
bound
inc
cmp
test
xor
pop
or
xor
mov
mov
movsl
pop
addr16
ljmp
clc
xchg
cld
jg
xchg
daa
popf
push
xor
fs
repnz
pop
or
rol
and
xchg
les
test
push
imul
and
xchg
mov
sti
in
out
movsb
fstl
mov
bound
jecxz
cmpsl
jbe
test
sar
push
mov
inc
mov
fdiv
push
xor
sbb
or
jge
push
in
dec
iret
in
xor
es
and
loopne
pop
cwtl
ljmp
mov
pop
mov
push
popf
xor
push
movsl
mov
and
dec
rorb
test
mov
in
cwtl
cmp
add
ret
in
mov
xchg
dec
cli
xor
test
rcrb
jae
xchg
jmp
out
sub
dec
xlat
iret
sarl
mov
mov
xchg
mov
xor
cmpsb
pop
mov
cmpsb
push
adc
cmp
outsb
leave
sti
movsl
dec
orb
xchg
dec
imul
adc
dec
xchg
cmpsb
jp
add
cmp
jns
and
sub
fisubl
lret
xchg
xchg
call
daa
and
pusha
movsl
inc
or
add
xor
fnstsw
sbb
sbb
pushf
aam
out
mov
and
iret
pop
and
movsb
adc
mov
in
xor
and
jecxz
scas
inc
mov
lcall
jl
aad
cli
and
mov
std
loop
lret
sub
sbb
xor
int3
mov
pop
cmpb
decl
push
out
subl
jp
repz
jg
mov
aad
xchg
into
mov
ret
and
idivb
movsl
into
xchg
call
jnp
cld
rep
inc
xchg
jp
ret
mov
into
orl
push
or
call
jnp
mov
inc
mov
out
outsl
pop
jecxz
enter
je
mov
adc
dec
jbe
lcall
pop
push
mov
movsb
jae
mov
dec
out
adc
pop
std
or
or
jle
lods
inc
ds
lret
ljmp
jbe
gs
add
pop
mov
and
or
repnz
sti
stc
int
test
int
aam
mov
mov
in
dec
int3
inc
popa
lods
cmp
repnz
lods
call
mov
leave
add
ret
leave
cmpb
movsl
pop
jae
je
mov
lods
in
mov
and
and
aad
flds
subb
sbb
pop
mov
jns
adc
outsl
cmp
sbb
ljmp
jns
popl
adc
test
mov
data16
aad
pause
fsubrp
hlt
add
imul
push
fdivl
popf
scas
mov
add
inc
inc
dec
out
lods
pop
outsl
fpatan
cwtl
test
mov
sbb
mov
mov
fldenv
and
adc
adc
add
xchg
cmpsl
mov
xor
fistpll
inc
sub
dec
movsb
dec
dec
cwtl
inc
push
sbb
gs
addb
mov
scas
jae
sarl
dec
clc
mov
outsl
push
aas
mov
cmpb
ja
jmp
mov
loope
in
xchg
lods
mov
push
sub
loopne
notl
push
mov
dec
adc
dec
shll
and
or
pop
stos
and
incb
inc
jp
ret
cs
subl
ret
in
subl
and
adc
sbb
dec
mov
int3
sub
sarl
add
popa
sbb
into
dec
xor
push
mov
enter
jge
xchg
xchg
frstor
cmp
xchg
lahf
inc
dec
loope
push
test
pop
xchg
mov
pop
dec
mov
fimuls
add
js
sahf
repz
mov
aas
pop
mov
cmp
jno
fsubrl
int3
lret
sub
jne
fdivr
lods
xchg
or
mov
or
imul
test
fildll
rclb
or
shll
aad
push
loop
xchg
sbb
int3
je
pop
bnd
xchg
ss
bnd
mov
jns
pop
dec
pop
enter
fcompl
out
popa
xor
xchg
push
jge
ds
pop
xor
lahf
mov
out
jmp
leave
cmp
mov
in
or
xor
inc
mov
cmp
mov
sub
outsb
dec
xchg
jnp
fistpll
push
repnz
mov
dec
xchg
dec
mov
pusha
push
adc
and
loopne
push
cmpsl
lcall
add
add
loope
popf
fisubl
fwait
lods
cmp
loop
pushf
inc
cmp
sub
sub
pminub
in
cs
and
aad
dec
sbb
sbb
lods
lea
out
or
push
ret
mov
aas
cli
call
iret
and
rorb
repz
or
jecxz
and
jle
or
dec
data16
and
loop
pop
mov
arpl
repnz
outsb
pop
jae
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
cmp
jl
inc
pop
jl
ljmp
sbb
cmpsl
mov
push
xchg
lods
dec
jb
fbstp
inc
mov
jmp
movsl
ret
and
inc
rcrl
xor
pop
sub
mov
xor
pop
jns
movsb
mov
xchg
jl
test
mov
icebp
stos
mov
sbb
subl
insl
popf
mov
push
data16
pop
pushl
lea
inc
lret
das
ret
out
add
outsb
das
jne
jecxz
adc
imul
loopne
imul
cmp
rcrl
mov
add
popa
data16
jp
pop
or
in
sub
loop
cs
jl
movsl
fisttpll
sti
jo
sub
je
cmpsb
inc
or
jp
mov
sbb
jae
ret
cmpb
lret
jo
push
push
in
jge
add
pop
pop
loop
cmpsl
sub
pushf
call
cmp
xchg
mov
scas
jl
lret
shlb
je
xor
rcrb
dec
je
scas
push
pop
jbe
es
mov
in
mov
xchg
pop
or
addps
test
jge
imulb
test
loop
aad
stos
and
cmp
sbb
inc
mov
call
bound
cltd
mov
mov
sti
jno
push
outsb
fs
bt
jb
repnz
sub
adc
cwtl
dec
sarl
pop
test
test
push
xchg
cmpsb
adc
iret
pop
fldl
sub
pop
push
add
add
in
push
xor
imul
mov
xor
rcr
sub
test
aaa
and
xor
pushf
mov
popf
ljmp
push
and
sub
sub
push
sbb
jmp
push
shrb
sbb
decb
push
sub
xor
les
lods
ljmp
gs
sbb
and
dec
loop
jg
ja
cmp
mov
sti
testb
xchg
and
xchg
xlat
xor
pop
inc
nop
sub
stos
sbb
pop
push
lss
aad
je
xor
js
mov
adc
leave
inc
sub
jge
addr16
sub
jmp
roll
test
jo
roll
loop
mov
loope
push
cwtl
or
scas
push
push
outsb
inc
jg
ss
lods
das
stos
mov
lods
and
lcall
aad
out
add
movb
addb
out
dec
dec
mov
in
sbb
movsl
mov
inc
cmpsl
lret
push
sti
xchg
and
xchg
int
out
icebp
insb
xchg
cs
jbe
sub
pop
cltd
lods
xchg
cli
aam
movb
xchg
orb
out
icebp
js
sti
fidivs
add
imul
rcll
fimuls
lahf
sub
icebp
repz
add
data16
dec
outsb
fwait
add
stos
insl
inc
sahf
jmp
push
data16
and
and
add
or
mov
out
dec
jne
dec
push
lret
xchg
aas
sbb
sub
insl
jbe
mov
outsl
add
movsb
pop
jne
hlt
inc
add
out
mov
dec
rorl
cltd
push
adc
inc
lock
test
fs
int3
loope
xor
jge
xlat
ja
lahf
mov
nop
cmp
or
pop
mov
mov
xor
and
or
xor
sub
dec
ja
call
pop
jbe
push
js
mov
rorb
jge
xchg
das
inc
lock
xchg
xor
movsb
pushf
pop
mov
idivl
adc
xchg
lret
das
popa
and
adc
mov
icebp
or
mov
ljmp
jns
push
pusha
push
inc
and
xchg
addb
xor
cs
inc
pop
cli
test
pop
xchg
outsl
mov
shll
xchg
push
cmp
enter
mov
aad
mov
rclb
into
add
out
aam
xor
outsl
inc
out
xor
dec
jb
mov
movsb
and
in
adc
dec
cld
repz
add
mov
and
and
andl
pop
adc
or
xlat
test
leave
and
repnz
adc
test
sarl
jp
fimull
and
in
andl
lods
or
xor
call
shll
xchg
pop
cmpl
mov
repnz
fdivrl
cmp
arpl
inc
inc
xchg
jge
or
inc
mov
test
scas
push
mov
test
out
pop
out
dec
or
adc
leave
cld
sub
pop
arpl
adc
aaa
and
mov
pop
mov
sub
adcb
sub
gs
in
and
or
jns
adc
insb
add
es
movsb
outsl
xlat
loopne
sub
sti
lods
mov
jnp
jge
adc
jmp
ret
pop
or
and
out
xor
push
adc
dec
and
xor
xchg
xor
cmp
shll
outsl
cmp
dec
loop
dec
jne
cwtl
in
add
push
aam
mov
test
jb
jmp
push
mov
into
add
mov
and
subb
cltd
push
jmp
lahf
sub
cmpl
mov
int3
add
pop
dec
lcall
jl
in
mov
push
sub
dec
or
jbe
scas
ljmp
cmc
out
mov
sbb
aaa
push
inc
xchg
lret
jmp
jbe
dec
push
mov
mov
outsb
mov
xor
sub
enter
cmp
inc
jmp
pop
ficoms
jp
pop
sub
shll
loope
or
push
jb
xchg
or
jae
call
popf
loope
out
shrl
pop
popf
jo
inc
ljmp
pop
sti
xchg
and
sub
out
loopne
dec
rcl
jle
mov
outsb
test
push
hlt
push
jle
loope
fdivrp
inc
pop
out
jmp
or
pop
add
sub
lea
mov
inc
xlat
dec
imul
in
bound
mov
mov
mov
lret
sub
mov
xchg
add
leave
int3
shrl
pop
sub
sub
in
adc
xor
dec
mov
sbb
repnz
inc
dec
loopne
and
mov
push
clc
jo
dec
jo
mov
pop
lret
mov
outsb
cs
jno
jge
scas
and
push
cli
jb
inc
and
mov
clc
dec
packsswb
jne
rcr
test
mov
icebp
dec
shll
or
int
mov
mov
mov
daa
dec
ds
daa
mov
inc
sub
bnd
xor
aam
sbb
loop
fs
int
pop
mov
stc
daa
in
data16
jmp
jno
or
inc
mov
push
xchg
fdivs
scas
pop
ljmp
shll
sbb
cmpsb
bound
pop
add
lods
sbb
mov
nop
ss
int
cmpsl
shll
arpl
andb
imul
stos
cwtl
mov
mov
push
dec
jmp
pushf
mov
movsl
scas
aad
mov
xchg
loop
andb
adc
push
aam
mov
or
mov
das
cmc
sbb
scas
or
sbb
sub
xor
cld
mov
jne
out
adc
jp
pop
mov
out
subps
ljmp
sub
gs
pop
rorl
stos
bnd
or
cltd
int3
mov
xor
add
cs
loopne
jecxz
lcall
or
add
leave
adc
ret
rorl
psraw
mov
roll
push
aad
add
fimull
into
add
repz
std
and
out
rorb
imul
insl
lahf
dec
outsb
xchg
repz
jne
nop
push
push
sbb
add
xor
add
cmc
iret
jno
jecxz
imul
add
cmp
mov
cli
cmpsl
outsl
xor
jnp
je
cld
dec
arpl
sbb
pop
fbld
insl
jb
mov
imul
int3
and
cmp
pop
lods
and
addb
inc
cmpsb
enter
sbb
lock
push
inc
in
scas
pop
insb
lret
dec
mov
fisubl
out
shlb
jb
lods
in
inc
sti
mov
imulb
rclb
mov
mov
sbb
xchg
movsb
inc
insl
test
xchg
stc
imul
pop
add
or
dec
dec
and
sarl
push
pop
rcll
xchg
pop
lret
stos
mov
fisttpl
cltd
sub
jbe
and
jo
lcall
cmpsb
rdpmc
into
cwtl
pop
loopne
mov
mov
test
popf
dec
push
arpl
jne
jge
mulb
push
jnp
call
popa
pop
stos
pop
rcrl
lea
lds
fldcw
in
lcall
xchg
mov
mov
cmp
pop
xchg
addr16
iret
stos
aad
cmpsb
out
and
mov
sti
clc
add
js
mov
cmpsb
cli
dec
mov
lahf
lea
iret
imul
and
xor
dec
out
pop
jmp
xchg
test
jmp
sub
addr16
int3
mov
xchg
fdivl
cmp
rorb
and
lods
dec
or
dec
mov
push
inc
mov
dec
outsl
or
lcall
push
in
add
das
add
inc
shlb
inc
data16
into
push
lahf
cmp
mov
out
cld
mov
ja
dec
insb
push
xchg
insl
push
cld
xchg
pusha
pop
xor
lahf
adc
cmp
cmp
imull
sub
jmp
pop
jl
in
mov
out
jge
icebp
mov
lcall
fs
inc
mov
xor
in
cmp
pop
xchg
dec
cmc
sbb
push
pop
pop
mov
cli
jbe
dec
mov
inc
pop
jno
int3
push
lock
imul
cltd
negl
and
cmp
pop
lret
js
aam
cmp
fdivrl
sbb
data16
aaa
inc
repnz
add
mov
push
iret
push
ds
nop
mov
xor
cld
push
jecxz
mov
mov
mov
aaa
inc
pop
inc
pusha
or
stos
nop
cwtl
jnp
adc
daa
jo
lret
jo
out
mov
jo
cltd
sti
cmp
sahf
jne
test
lods
mov
imul
jne
out
daa
test
jmp
lahf
into
out
movsl
dec
dec
jecxz
pop
sbb
outsb
shll
cmp
xor
fs
outsl
cltd
pushf
adc
ds
push
pop
cmp
dec
jb
jnp
mov
inc
es
das
jle
aam
mov
outsl
xor
in
jmp
leave
lds
test
cli
lret
and
lods
mov
and
fisttpl
sti
mov
aam
fisubl
mov
jo
enter
mov
out
jg
jp
call
pop
adc
cmp
and
add
mov
push
orb
dec
push
jp
aad
push
push
cmp
gs
loopne
fbstp
aaa
dec
sub
arpl
mov
pusha
dec
cmp
push
dec
outsl
lds
aaa
loopne
push
sub
xor
push
xor
test
das
pop
xchg
insl
jg
mov
imul
sti
bnd
mov
lods
lret
sbb
lahf
mov
pop
sbb
insb
inc
aad
mov
jne
add
in
lahf
in
cmpsb
in
xor
in
mov
xchg
xchg
movsl
scas
or
stos
cwtl
xchg
rol
stos
fsubrs
pop
or
jo
push
or
xchg
add
adc
loop
xor
jbe
xor
mov
icebp
fsubrl
sub
shrl
scas
cmp
dec
inc
xchg
mov
mov
roll
push
push
xlat
jl
and
rcrb
sbbb
imul
inc
push
je
test
jg
bound
xchg
roll
push
loope
push
xchg
pushf
sub
js
mov
lahf
xor
mov
test
xchg
jle
les
in
lret
mov
adc
out
sbb
inc
xor
aam
add
xor
ja
inc
sub
movsl
dec
outsl
pop
out
sbb
and
popa
dec
cli
nop
pop
adc
stos
dec
mov
stos
mov
sbb
insl
fsubs
push
sbb
jbe
lret
dec
cmp
sbb
mov
mov
test
andl
jl
sub
mov
cmp
xor
mov
stos
bound
inc
sbb
fidivrs
js
push
in
inc
ret
pusha
dec
das
pop
xchg
xchg
movsb
xchg
sbb
pop
clc
lret
mov
cmpsb
pop
lret
pop
imul
test
nop
push
dec
in
jl
lock
loop
test
inc
lds
das
mov
push
nop
inc
mov
xchg
fsts
js
es
dec
jbe
jmp
fcomip
and
icebp
sub
fistl
dec
mov
sbb
push
cltd
mov
mov
test
mov
mov
sub
xchg
xchg
jp
jo
inc
enter
adcb
lods
ficoml
cmp
jnp
loope
stos
push
lock
repz
jbe
outsl
sti
mov
lret
jno
js
scas
mov
je,pn
and
push
or
cmp
ss
sbb
cmp
xor
lea
jne
clc
push
sbb
sbb
test
xor
lods
cmp
test
jecxz
push
loope
mov
mov
mov
fstpl
cltd
mov
lcall
aas
push
popa
daa
daa
mov
test
mov
xor
pop
cwtl
dec
bound
jno
in
pop
cmp
jl
pop
int3
sub
das
outsb
fwait
jg
es
cld
lret
push
js
mov
sar
push
mov
xor
push
sbb
xchg
out
test
cmpsb
popf
int3
xchg
leave
rcll
xor
icebp
mov
jbe
clc
mov
fisubs
cmp
mov
aad
xor
out
icebp
and
mov
push
push
dec
adc
outsl
popa
sbb
lret
inc
xor
leave
jmp
movsb
repnz
out
add
ret
jmp
dec
inc
stos
xor
sbb
push
xchg
mov
orl
in
xlat
lds
mov
jecxz
dec
cmp
xor
movsl
pusha
sub
cmp
mov
pop
mov
dec
mov
sub
mov
ret
divl
cmp
movsl
out
stos
pop
jnp
or
cmp
xchg
dec
mov
les
xor
jecxz
outsb
mov
and
mov
fistps
shrl
mov
shll
arpl
xchg
mov
movsb
dec
dec
dec
popa
push
stos
in
jge
aas
and
pop
fcoml
dec
add
xchg
adc
stos
xchg
fdivrp
mov
push
test
outsb
jp
lret
cmp
or
or
adc
mov
stos
push
push
push
jb
popa
sahf
out
or
test
adc
int3
mov
push
fwait
mov
dec
scas
pop
imul
mov
or
jo
pop
add
arpl
lret
inc
lret
fnstenv
aad
inc
leave
push
dec
imulb
cmpsl
adc
cmp
sub
pushf
fisubrs
adc
repz
hlt
into
mov
int3
dec
xor
cwtl
cwtl
inc
std
jbe
inc
or
cltd
and
jbe
jb
cmp
addb
inc
leave
jbe
ja
mov
xchg
sbb
int3
push
sub
pop
xlat
das
mov
add
adc
dec
push
into
sbb
mov
xchg
pop
sbb
sbb
lea
loopne
push
dec
adc
add
adc
xchg
xchg
jg
cltd
pop
and
inc
rcll
push
fs
xor
pop
dec
or
dec
xlat
jnp
enter
or
ret
or
mov
jge
aad
cs
dec
ret
cltd
and
jmp
shlb
add
xlat
adc
out
xor
fwait
jl
rcrb
lret
mov
mov
inc
gs
push
mov
jp
pop
cmp
jnp
cvtpi2ps
cs
cmp
pop
enter
lods
pop
mov
dec
and
pop
xchg
push
scas
shll
or
ja
ja
js
dec
icebp
pop
fxch
cmp
mov
mulb
xor
lods
test
fdivrs
adcl
cwtl
popa
fnstcw
lret
and
and
movsl
imul
pusha
js
xchg
xor
cs
call
das
add
xor
imul
call
mov
ror
out
ss
add
xlat
cmpsb
cmp
flds
mulb
mov
in
fiaddl
jecxz
and
fdivs
xchg
sub
jne
out
fistl
andb
add
and
data16
adc
push
sub
xor
sbb
and
cmpsb
mov
mov
jbe
xor
dec
sbb
es
adcb
jns,pn
cltd
mov
or
push
mov
fcompl
mov
loopne
stc
xor
cmc
jne
or
mov
push
inc
out
mov
or
incb
fldcw
popa
stc
push
xchg
and
pop
push
fs
addl
dec
cs
sub
stc
pop
push
xor
into
jge
shll
cmc
and
fcmove
jge
or
jno
rcrb
stc
ret
leave
dec
inc
jmp
push
jne
dec
insb
mov
jae
mov
mov
xchg
sbb
xlat
cmpsl
add
cmpb
xchg
shll
clc
pop
sahf
cwtl
jne
add
xor
jns
cwtl
jg
loope
ja
xchg
outsl
jle
cli
mov
insb
sbb
xchg
add
fidivrs
inc
xor
loop
insb
xchg
mov
inc
pushf
pop
push
inc
shr
hlt
idivl
cmp
push
loope
stos
aad
and
jns
dec
lock
push
mov
jb
add
push
mov
sub
push
pushf
cmp
jns
mov
std
inc
mov
and
or
sub
mov
es
or
fwait
movsl
icebp
addb
pop
xor
shl
insl
inc
jg
pushf
sbb
mov
aas
dec
mov
in
out
lret
int3
jl
loop
out
or
jle
outsb
insb
data16
orl
arpl
scas
mov
xchg
inc
in
push
int
sahf
lea
shll
xchg
lea
call
pop
lret
mov
sbb
inc
pop
jmp
pop
movsl
addl
test
push
mov
push
aaa
stos
sti
dec
shll
mov
adc
and
repnz
jne
jno
lea
jecxz
lret
push
dec
mov
fs
adc
xor
inc
loope
xlat
xor
out
add
icebp
pushf
sbbb
mov
dec
lods
mov
or
mov
movsl
std
lea
mov
cmpsb
cmpsb
std
cs
loopne
leave
mov
dec
stc
test
push
or
mov
push
lret
mov
cltd
xor
flds
test
lods
inc
je
fcoms
cmp
insl
mov
xor
arpl
fldl
adc
lods
stos
jb
mov
mov
loop
pop
pop
push
pop
pop
into
xor
jb
push
mov
mov
dec
shll
xchg
popa
or
jg
orb
mov
pop
ret
push
or
lea
popf
lods
aam
outsl
out
lcall
push
subb
sbb
inc
sub
shr
popl
aaa
inc
push
in
aas
lret
cmp
jb
dec
mov
mov
lret
jmp
xchg
pushw
pop
mov
cmp
and
cmp
pushl
jle
stos
scas
js
lret
movsb
xor
scas
xlat
fimuls
loop
test
mov
cmp
shrb
push
shll
push
in
push
imul
out
mov
push
call
lods
xchg
mov
cmp
cwtl
test
rolb
fimull
fimull
cmp
mov
std
into
fcompl
and
les
sbb
sub
pushf
xchg
inc
ljmp
and
sarb
out
test
lcall
pop
jne
jo
xlat
call
dec
gs
mov
int3
pop
jmp
inc
sub
add
rclb
mov
outsl
adc
pop
cwtl
mov
pop
pop
lcall
mov
dec
sbb
adc
push
xlat
or
fisubrl
scas
jg
mov
int3
or
sbb
mov
pushf
movsl
jl
sarl
xchg
cmpsl
dec
ficoms
aad
out
js
cmp
xor
inc
in
dec
ljmp
cmpsl
push
adc
xor
iret
xor
inc
push
inc
repz
cmc
mov
shll
imul
sbb
lea
mov
xor
subl
outsl
jp
aas
sbbl
sub
mov
cli
add
pusha
cmp
lret
mov
testb
mov
cmc
nop
scas
mov
dec
jecxz
dec
outsb
fistpll
dec
sbb
and
and
cmp
xor
fidivl
js
rcr
push
into
cwtl
ljmp
xor
in
push
rcrb
mul
ror
cld
scas
popa
mov
adc
cvtps2pi
xchg
adc
sbb
ds
jle
in
daa
arpl
movsb
scas
out
inc
lahf
pop
adc
inc
test
cmp
cs
shll
xlat
pop
in
movsl
or
js
aam
sbbb
outsl
aas
or
in
addr16
mov
fcoms
test
rcll
mov
subb
xchg
jns
pop
pusha
and
adc
lret
aam
pop
ja
adc
mov
ds
hlt
push
xchg
insb
shrl
pop
dec
into
mov
das
std
mov
and
and
cli
insl
lea
dec
out
daa
cltd
pop
jl
lret
pop
shrb
xchg
dec
mov
pop
pop
pop
inc
lock
cmp
sub
pushf
ds
bound
mov
mov
add
pop
mov
sbb
xchg
ror
imul
movsl
movsl
sbb
add
iret
fidivrl
jge
mov
je
xchg
push
testb
jmp
lcall
lds
mov
stos
pushf
loop
xchg
mov
and
das
rclb
and
or
pop
push
pop
mov
jmp
aas
push
jg
das
push
push
push
dec
sbb
andb
into
and
je
test
popa
jmp
sbb
xorl
add
push
mov
push
arpl
scas
add
lcall
xchg
pushf
fnclex
mov
or
popa
je
jmp
xchg
fcmovu
in
enter
ja
pop
movsb
out
lock
sub
mov
hlt
and
jb
cltd
jae
add
loope
add
sub
adc
jae
cwtl
inc
cltd
xchg
iret
push
sbb
rcr
inc
mov
cmp
mov
sub
jp
inc
mov
shlb
outsb
sbb
int3
push
jae
and
das
mov
mov
pop
cltd
pop
mov
dec
fwait
mov
xchg
cmp
sub
into
push
xchg
xchg
movsl
lret
sti
add
and
sbb
xor
xlat
sbb
adc
mov
or
lea
divl
xchg
xchg
xchg
lds
fwait
ljmp
dec
scas
pop
loopne
sbb
rclb
stos
fstl
mov
xorb
add
jnp
aas
xor
cwtl
jbe
ss
push
push
les
cmp
and
push
jle
fmulp
inc
and
sub
push
push
daa
out
outsb
mov
push
loope
mov
aas
iret
mov
jl
lret
cmp
mov
dec
in
xchg
cmp
add
push
push
push
xor
sub
in
cwtl
inc
ror
jl
pop
adc
dec
jb
repz
out
fsubs
cmp
nop
stos
clc
call
fst
push
into
cmc
dec
ret
shl
cmp
test
clc
cmp
ret
pop
sub
ljmp
add
test
cmc
fsubrl
mov
ret
inc
sbb
popa
xchg
push
test
adc
fistpll
xor
daa
mov
xchg
or
in
xorl
enter
adc
pusha
test
leave
xchg
mov
out
ja
shll
inc
sarb
or
pop
jge
mov
or
push
mov
ds
sub
sbb
nop
rclb
stc
insb
data16
xchg
xor
or
mov
xorl
xlat
mov
insb
mov
mov
mov
or
xorb
mov
popa
test
mov
push
xchg
faddp
inc
ret
jb
subb
sbb
icebp
int3
mov
or
pop
cmpsl
and
jbe
push
inc
movsb
dec
pop
addr16
icebp
xchg
xor
cmp
repnz
popa
lret
lret
sbb
mov
cmpsl
ds
and
jne
call
data16
test
test
sarb
jmp
add
adc
rorl
hlt
pop
cld
test
lahf
outsl
enter
pop
lock
xchg
out
sub
mov
lcall
into
add
sti
sub
mov
idivl
add
in
aad
inc
adc
int
jge
imul
xlat
mov
scas
ret
sub
adc
test
mov
jl
pop
test
ja
cmp
out
aam
aas
lock
mov
nop
popa
jbe
fwait
mov
sahf
lret
pop
xchg
inc
fwait
ret
cwtl
cltd
xchg
push
out
xor
and
dec
mov
push
push
cs
jmp
pop
ja
mov
mov
xor
and
or
inc
insb
out
in
insl
adc
sub
dec
aaa
test
fwait
sub
and
add
aaa
sub
movsb
mov
bound
pop
outsl
jns
adc
rcr
cli
pop
push
fisubrl
lcall
push
arpl
outsb
and
cld
xlat
mov
xchg
lock
dec
data16
jae
adc
nop
in
mov
clc
mov
faddl
sar
imul
fwait
cmpsl
add
and
pop
mov
adc
xor
ja
or
jbe
loopne
xchg
imul
mov
jno
repz
push
jge
test
add
scas
ficoms
in
je
pop
sub
sub
xor
mov
mov
sub
sbb
push
dec
addr16
lret
das
dec
cmp
std
jmp
decl
bound
or
cmp
rcll
xchg
mov
add
adc
test
adc
push
jecxz
inc
dec
xchg
rcll
cmp
mov
sbb
sub
lods
xchg
mov
mov
pop
pop
sub
mov
mov
aaa
aam
jge
insl
push
mov
xchg
or
add
cld
jns
cmc
lods
in
xchg
or
movl
and
lcall
push
movsb
frstor
lock
dec
push
push
jb
ret
dec
stos
sbb
bound
mov
fcomp
mov
cs
xor
jnp
xor
dec
mov
and
imul
push
mov
ret
mov
scas
and
cltd
das
mov
cmp
cwtl
out
add
pop
xorl
pop
movsb
in
mov
adc
push
pop
rcrb
cmp
mov
sbbb
cmp
push
out
xchg
mov
js
sbb
rdmsr
int
xchg
or
inc
sbb
pusha
mov
imul
imul
dec
lret
cmpsl
sbb
mov
add
sbb
stos
ret
add
shlb
stc
pop
ret
loop
sub
jb
xor
mov
and
bound
aam
setl
scas
fsubs
mov
and
enter
inc
test
repz
sub
push
push
add
push
shlb
sub
cwtl
or
add
cli
lahf
arpl
repz
dec
outsl
cwtl
cmpsl
rclb
xchg
es
sub
out
cwtl
inc
mov
push
loop
add
subl
jp
leave
or
lods
pushf
test
pop
cmp
sbb
jbe
pop
shrl
and
dec
pop
inc
mov
pusha
pop
notl
and
pop
xchg
adc
in
repz
pop
inc
sbb
mov
lods
fsubrs
inc
dec
fidivrs
adc
cmp
xor
lds
adc
and
or
mov
mov
cli
adc
ljmp
dec
shll
inc
pop
int
add
lods
lret
idiv
add
imul
in
lock
mov
testb
clc
pusha
push
xor
push
in
hlt
push
mov
cltd
je
shll
cmpsl
or
in
pop
mov
push
xchg
lahf
pop
xor
mov
mov
in
cltd
dec
jecxz
icebp
or
xor
jnp
std
pusha
mov
push
in
sub
dec
bound
xchg
inc
insl
call
jno
adc
xor
xlat
adc
out
mov
outsb
mov
movsl
std
out
mov
mov
pop
mov
pop
mov
lods
outsl
mov
fs
aas
fisubrs
aas
jo
fs
jae
das
mov
xorb
int3
rep
into
out
or
cld
inc
dec
daa
push
clc
aad
xchg
repz
daa
xchg
dec
inc
aam
cmp
mulps
dec
mov
mov
js
sbb
and
sub
bound
das
jne
xor
nop
ljmp
in
test
out
or
mov
and
xchg
imul
jno
arpl
mov
jg
cld
insb
fldt
push
adc
rorb
sarb
jbe
mov
add
dec
cmpsb
daa
outsl
add
jge
stos
lods
sti
cmp
mov
int
jecxz
mov
push
xor
cltd
dec
xchg
push
mov
aad
cmp
out
xchg
xor
cmp
insb
in
and
jecxz
test
inc
mov
push
cld
pusha
jno
sub
inc
push
jnp
cltd
daa
pop
daa
jnp
adc
adc
mov
cld
popa
pop
jns
jae
ficompl
data16
mov
sub
or
test
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
incb
adc
inc
pop
jl
subb
pop
sub
mov
dec
add
scas
fs
xchg
sub
cli
xchg
push
fmuls
mov
dec
xor
push
push
cmp
xor
loopne
les
xchg
adc
test
lret
je
lahf
cli
mov
xchg
cmpsl
mov
shlb
or
std
hlt
aas
stos
mov
inc
imul
and
div
insl
testl
mov
xor
icebp
popl
nop
sub
movsl
pop
mov
push
pop
xor
out
mov
in
ds
add
pop
int3
or
xchg
ja
mov
jo
cmc
inc
mov
xor
inc
dec
call
xchg
add
sub
outsb
cltd
cwtl
xor
hlt
lods
add
int3
push
xlat
lea
ret
sbbb
push
dec
aaa
cmp
fwait
scas
jns
and
mov
enter
inc
cld
les
xchg
fadd
ret
sub
and
popf
inc
and
decb
inc
leave
inc
inc
popf
mov
ds
xor
push
imul
xchg
xor
pusha
sbb
inc
add
jno
sbb
jno
cmp
in
mov
cmpsl
scas
es
test
fwait
imul
mov
mov
sbb
sbb
fidivl
jl
sahf
push
mov
fisttpl
sbb
sub
loopne
inc
xor
bound
mov
jmp
fsubs
fdivrl
inc
in
push
jp
loope
jg
mov
mov
sub
sub
pop
or
sub
add
mov
sbb
mov
xor
jne
cmp
adc
cmp
sarb
adc
stc
out
push
inc
jmp
dec
movsl
cmp
cli
call
mov
mull
cld
int
adc
mov
jmp
lcall
clc
push
dec
inc
cmp
sub
mov
fcmovu
mov
sub
loop
insb
test
sub
jnp
sub
pop
or
xchg
mov
mov
adc
dec
inc
cld
add
dec
mov
jmp
mov
mov
loop
fs
mov
rclb
popf
push
xor
xlat
ret
mov
pop
in
leavew
inc
pop
pop
outsb
fwait
cld
xorb
shrb
lea
movsl
fbstp
cltd
mov
mov
fstl
xor
pop
jb
js
cmp
inc
cmc
mov
jne
das
cltd
lock
pop
out
push
pop
dec
push
push
fcmovbe
jnp
es
ja
xchg
xor
das
push
mov
enter
movsl
pop
sarl
and
repz
ds
out
push
popf
ljmp
cmp
mov
cmp
fbld
sti
inc
xchg
int3
pop
daa
std
inc
xchg
mov
imul
cmpsl
icebp
adc
dec
pop
mov
xor
std
jecxz
sbb
add
rcrl
push
les
add
jl
jg
push
lods
loopne
xchg
ret
cmp
bound
sbb
adc
incl
test
jg
sub
push
mov
stc
mov
dec
add
push
pop
flds
sahf
bound
push
int
inc
cli
bound
loopne
sahf
cli
push
das
cmpsl
dec
stos
push
out
fdivs
push
lock
test
mov
sub
andl
push
cmpsl
sub
imul
outsb
pop
add
sub
cltd
xchg
movsl
movsl
lods
fldenv
out
mov
test
or
repz
loope
in
clc
lock
ljmp
xor
push
xorl
and
int
adc
mov
mov
push
shr
mov
push
jbe
shll
xor
and
addr16
sub
outsb
xor
sub
das
fisubrs
sub
insl
push
subl
and
cwtl
iret
pop
push
sbb
andl
inc
cmpsl
pop
in
sbb
jge
movsb
push
xchg
jg
pop
sub
inc
sahf
mov
jbe
cmp
repnz
incb
add
dec
pop
fiaddl
cltd
pop
mov
repnz
mov
das
inc
xchg
push
lret
jmp
push
leave
xor
add
outsb
mov
xchg
mov
sub
xchg
xor
loope
xor
iret
outsl
ljmp
rcrb
scas
in
pop
dec
pop
lods
or
out
or
adc
fimull
add
jns
pushl
sub
je
das
adc
adc
arpl
les
out
rclb
mov
icebp
add
xchg
shll
mov
jnp
xchg
cmp
xchg
mov
add
lds
mov
xchg
repnz
bound
xchg
loope
push
in
dec
adc
repnz
fwait
insb
test
sub
fdivl
pop
jns
out
jne
lods
cltd
xchg
scas
imul
pop
inc
inc
jmp
insl
add
nop
repnz
lahf
push
stc
sbb
repnz
push
xchg
push
mov
daa
push
das
sbb
movsl
mov
ret
cld
shll
adc
inc
daa
mov
rol
adc
adc
repnz
outsb
ret
dec
sbbb
push
andb
pusha
loopne
call
adc
inc
sbb
idiv
imul
dec
sbb
gs
push
test
adc
or
ljmp
mov
aaa
out
inc
mov
push
mov
add
call
movsb
hlt
ss
mov
jle
hlt
mov
inc
xchg
sub
scas
push
scas
loopne
xchg
push
sarb
mov
es
les
mov
orl
mov
lret
adc
jnp
add
outsb
incb
add
mov
sbb
mov
and
sbb
adc
les
jl
push
xchg
icebp
outsl
dec
mov
xchg
lcall
pop
and
sahf
or
mov
inc
cmp
sti
insb
xor
mov
mov
xor
sarl
fsubrl
mov
jge
cmpsb
popf
jns
sbb
push
and
shl
xchg
mul
sar
xchg
lahf
push
inc
or
xor
cmp
ss
jae
pop
jg
push
daa
cld
mov
xchg
jb
sbb
jo
loope
lcall
or
jecxz
scas
jmp
sbb
arpl
pop
clc
pop
js,pn
cld
ja
push
mov
sub
orl
or
aaa
ret
call
sbb
fadds
cmp
inc
push
daa
loopne
imul
test
xor
out
add
pop
sub
cmp
push
movb
pushf
pusha
add
or
in
dec
rol
add
fistps
movsb
jl
insl
mov
aas
jno
jns
dec
dec
mov
loop
pop
bound
lock
leave
jne
push
mov
push
scas
in
int3
dec
js
ds
pop
pushf
ret
push
cmpsb
into
stc
inc
xor
loop
call
es
mov
inc
test
in
leave
insb
and
mov
je
stc
icebp
mov
out
test
jmp
daa
and
cli
addb
xchg
dec
mov
xor
fiadds
cmp
cli
stc
lahf
xor
loopne
je
pushf
in
lock
jmp
jle
mov
popa
xchg
cmp
mov
inc
cmpsb
jg
std
fimull
mov
filds
pop
clc
jo
testl
lahf
dec
push
loope
xor
not
test
fs
iret
push
push
bound
punpckhwd
push
and
into
add
pop
and
mov
mov
sbb
loopne
dec
cs
adc
cmp
mov
imul
pop
pushf
xor
lret
sub
push
int
icebp
fadds
add
inc
dec
into
std
jno
xchg
ret
inc
pop
and
xor
int3
out
arpl
ljmp
mov
mov
shrb
sub
sub
push
pusha
nop
xchg
and
push
mov
pop
cmp
adc
add
std
mov
in
xor
loope
or
dec
cmp
out
adc
pop
and
sbb
dec
push
cs
pop
ret
call
pushw
addr16
loope
sub
mov
sub
fistl
dec
pop
sbb
pop
sbb
gs
pop
mov
outsl
bound
sbb
loope
dec
test
pop
mov
sub
loop
add
xor
cmp
jle
jbe
pop
xchg
ja
sbb
lea
stos
add
push
jns
popa
xchg
dec
sub
cmp
push
in
clc
push
fwait
pop
es
into
outsb
add
cmc
cmp
adc
xchg
dec
int3
aaa
mov
dec
dec
test
dec
push
out
inc
out
jo
add
cmp
and
cmpsb
cmp
ret
fisttpl
add
in
cld
mov
mov
cmp
pop
test
out
aam
sbb
js
xchg
and
mov
push
outsb
cli
mov
rcrb
movsl
test
clc
ja
mov
inc
dec
stos
idivb
jle
dec
xor
pop
gs
xor
cld
dec
aad
or
mov
mov
outsl
repnz
mov
xchg
inc
and
lods
push
scas
mov
or
mov
in
jg
mov
xor
hlt
mov
scas
add
leave
ficoml
sub
mov
lcall
dec
sbb
sahf
loop
in
icebp
imul
pushf
sub
adc
fistpll
pusha
ficomps
jno
xchg
dec
popa
dec
push
cmp
insb
in
push
cmpsl
cltd
sbb
hlt
pop
aas
out
aad
xchg
cmp
cmp
shlb
mov
out
sahf
out
jp
ret
loopne
movaps
test
or
cs
mov
repz
int3
adc
out
jae
mov
mov
jno
ljmp
call
push
sbb
sbb
frstor
dec
leave
inc
or
mov
and
cmp
pop
xchg
or
fsubrp
mov
add
mov
dec
and
xchg
insl
repnz
sub
inc
jmp
jbe
pop
sbb
pcmpgtw
jb
sub
into
mov
aas
push
mov
push
repnz
bound
lods
mov
inc
pop
adc
dec
mov
iret
out
cltd
loop
add
imul
dec
or
adc
dec
scas
aad
aad
arpl
loope
mov
cmpxchg
je
das
fsubs
roll
xchg
jb
loopne
incl
mov
stos
hlt
jno
dec
mov
stos
sbb
mov
outsb
and
rcl
mov
adc
jmp
cs
in
lret
pop
popf
adc
lods
repz
fldenv
push
test
mov
sbb
shlb
mov
xor
xor
mov
jl
fdivl
clc
inc
add
pop
mov
pop
cli
daa
fcmovne
mov
xchg
mov
lcall
cs
adc
and
div
push
jb
enter
cmp
es
add
loop
dec
std
gs
imul
enter
adc
mov
inc
aad
in
loopne
data16
xchg
rolb
or
pop
push
push
mov
pop
std
mov
sbb
cmp
test
mov
push
imul
mov
mov
and
movsl
xchg
cmp
test
and
popf
sbb
jne
add
cmc
and
in
adc
xorl
jb
cmp
int3
or
icebp
pusha
push
repz
jg
mov
fidivl
sub
mov
adc
test
cmc
xlat
pop
fninit
inc
jle
push
push
lret
sub
sbb
xor
movsb
loop
push
loopne
cli
movsb
cmp
jge
jae
sub
sbb
loopne
push
loope
lods
daa
jns
test
scas
mov
inc
jnp,pn
sbb
sub
xchg
sub
xor
dec
fldenv
pop
aad
dec
frstor
int3
cmp
mov
adc
jno
xchg
xor
les
mov
xor
subb
mov
mov
dec
ss
into
outsb
repz
sti
lods
sbb
ja
xchg
push
shl
pop
sahf
jnp
push
adc
std
adc
xchg
outsl
out
rcl
fldenv
neg
mov
call
adc
push
push
shll
arpl
sbb
pop
mov
pushf
xrelease
and
sbb
ja
mov
dec
xchg
mull
xchg
sbb
cmpl
and
sbb
fnstcw
jg
pop
outsb
pop
mov
mov
inc
jae
shlb
add
xchg
cld
xor
push
add
lock
or
sti
lea
ret
jns
stos
adc
dec
and
pop
push
stc
jnp
arpl
loope
sub
leave
les
aad
cmc
into
adc
lock
scas
mov
aam
mov
push
sub
jae
test
aad
sub
mov
es
int3
cmpsl
lods
es
cmp
xchg
jb
adc
aaa
add
pushf
shlb
aad
mov
in
add
sti
movsb
or
pop
idiv
xor
lds
adc
inc
xchg
sub
outsl
or
fdivrl
pop
sbb
lods
leave
mov
pop
js
push
addb
push
mov
xor
ja
xchg
push
ljmp
xor
push
xchg
insb
jp
jbe
stos
sarl
xor
addb
shlb
jl
icebp
xorl
aaa
push
mov
xchg
sub
or
dec
aad
adc
daa
sbb
inc
xlat
sbb
insl
mov
inc
adcb
add
xchg
lods
sbb
sahf
or
out
aaa
push
adc
jno
mov
loop
xchg
sub
dec
int
cltd
mov
jo
sub
lea
lods
add
mov
inc
xchg
popf
lods
cmp
insb
das
out
stos
mov
push
jle
cmp
hlt
jo
ss
in
jmp
xor
jae
loopne
add
std
pop
sbb
push
pop
mov
xchg
movsb
cmovb
push
js
testl
les
insl
mov
sub
xchg
leave
jl
adc
jg
inc
mov
mov
in
cltd
ret
and
adc
test
mov
subb
jg
mov
push
mov
inc
pop
aaa
cs
ds
jg
sti
mov
das
pop
jo
in
test
xlat
das
sbb
and
mov
enter
insb
shrl
jmp
out
bound
mov
mov
fmuls
cmp
cld
jb
fwait
in
and
sti
xchg
repnz
dec
push
or
lret
rcll
jns
dec
outsl
mov
inc
and
arpl
mov
loop
scas
outsl
jmp
lea
adc
bound
arpl
sbb
pusha
mov
mov
mov
in
xchg
repz
std
cld
mov
gs
loop
mov
sbb
adc
daa
pusha
mov
mov
jl
js
mov
sahf
aas
arpl
outsb
sub
or
pushf
jle
cmp
fisttpll
shr
lods
dec
lock
mov
cmpsb
xchg
push
sbb
inc
sbb
and
mov
call
stc
fistl
ret
pop
imul
in
pop
popa
xor
movsb
or
cld
or
inc
inc
xor
adc
les
test
lock
rcrb
bndldx
sbb
sti
lock
inc
mov
mov
jecxz
sub
add
loope
pop
cs
xor
dec
lret
in
pop
negb
jecxz
or
pushf
jae
adc
clc
lea
mov
mov
and
dec
cmp
xchg
jle
cltd
mulb
jne
push
fdiv
cwtl
out
pop
add
out
jmp
sbb
test
dec
xchg
adc
mov
shlb
and
inc
mov
pop
gs
sbb
add
ret
add
js
cmpsb
aad
push
in
xor
stos
or
imul
adc
ficomps
lods
mov
adc
imulb
shl
xchg
or
insl
add
xchg
fbstp
fxch
and
data16
push
in
and
cmpsl
in
mulps
mov
xorb
ljmp
push
cmpsb
xchg
mov
in
pushf
gs
jge
pop
adc
ljmp
lret
leave
jnp
inc
das
pop
or
inc
jecxz
mov
push
sub
mov
data16
ror
xor
xchg
push
scas
xchg
in
xor
mov
xchg
mov
adc
pop
inc
or
fidivl
insb
mov
jmp
jmp
sahf
shll
ljmp
adcl
dec
lcall
js
xor
mov
cmp
mov
shll
in
ljmp
imul
in
and
add
push
or
xchg
mov
pop
lret
cmp
inc
xchg
xor
je
and
ljmp
sub
sbb
fcoms
xor
es
insl
cwtl
test
and
pop
adc
test
pop
add
scas
push
pop
jge
std
sbb
mov
rorb
sub
adc
popa
mov
or
xor
xor
sub
icebp
add
jbe
lock
aam
lahf
mov
cmp
inc
mov
iret
and
push
jo
adc
jns
and
popa
cmp
and
jl
fldt
mov
mov
scas
sbb
inc
mov
and
test
inc
daa
lret
roll
orb
fstl
fadds
mov
sbb
dec
in
les
aas
test
test
jnp
xchg
lea
sub
adc
cmpsb
push
pop
adc
lock
mov
jb
aaa
mov
push
js
in
adc
xor
popa
filds
sub
cmpsl
xlat
jnp
jp
mov
inc
rcll
and
mov
xlat
in
push
jecxz
enter
jl
aad
and
jno
mov
je
sub
mov
jmp
lods
into
sbb
cmp
xor
jecxz
inc
pop
movhps
lret
ffree
rclb
daa
sahf
cmp
add
push
insb
repz
dec
das
mov
inc
daa
dec
imul
mov
xchg
adc
push
andb
bound
cmp
mov
jb
or
and
pusha
loopne
push
mov
adc
push
pop
mov
fstp
stos
je
inc
insb
sbb
loop
xor
jno
test
insl
movsl
jl
pop
inc
inc
insb
mov
pop
or
in
xor
fmull
adc
adc
pusha
mov
lock
dec
xor
lcall
in
mov
dec
add
inc
imul
xchg
idivb
or
pusha
add
pop
js
into
inc
inc
daa
les
movsb
or
adc
insl
in
cwtl
mov
aaa
push
fwait
aad
inc
adc
movsb
add
ror
pop
jecxz
aaa
mov
arpl
inc
add
or
mov
std
and
repnz
xor
repz
push
mov
sub
xchg
and
dec
in
loop
pop
out
das
cmp
stos
sbb
add
xchg
and
adc
pop
jbe
mov
mov
pop
xor
jmp
jno
scas
fnstcw
xor
mov
or
rclb
clc
xchg
mov
add
inc
insl
or
and
sbb
pop
jne
mov
lock
add
lea
clc
lret
mov
push
dec
jns
xchg
mov
push
js
dec
pop
sbb
nopl
insb
outsl
call
mov
inc
lahf
lcall
movsb
fimuls
int
sub
or
sub
hlt
pop
xsaves
push
xchg
sbb
mov
sti
push
fsubrs
sbb
cmp
sbb
mov
dec
jnp
lds
xor
pop
popf
daa
aas
xor
insw
in
jo
in
in
es
push
in
ljmp
sub
rorb
sahf
pop
stc
push
sub
mov
nop
ret
fnsave
lock
and
pop
jle
inc
mov
xor
add
sub
cmp
rcrl
and
dec
rorb
iret
stc
mov
imul
mov
les
pop
addr16
test
fidivrl
daa
ror
outsl
mov
out
mov
ds
push
pop
lods
dec
bnd
jo
stc
movsb
push
add
rorl
clc
xchg
mov
cmp
loope
jno
add
sbb
inc
ds
stos
loope
mov
push
and
ljmp
fldenv
subl
push
das
aas
push
fmuls
jno
pusha
cmpsl
or
push
repnz
bound
aas
or
pop
scas
pop
mov
or
aas
cltd
xchg
sahf
or
add
add
jns
xchg
pop
outsl
repz
push
out
and
sub
and
push
cmp
pop
mov
sub
pop
loope
adc
mov
sub
xor
xchg
int3
test
adc
int
add
subb
int3
outsl
and
out
sbb
push
dec
xor
push
test
add
jg
sub
pop
push
rcr
mov
iret
ja
push
mov
xor
in
pushf
pop
je
subb
dec
and
sbb
xchg
ret
ja
vcvtss2si
lret
and
mov
pop
mov
lcall
in
insl
and
add
xchg
mov
pop
add
incb
xor
adc
jnp
test
xor
inc
cmc
jo
lds
mov
mov
dec
and
jbe
xchg
test
mov
xchg
add
xor
and
xchg
or
insb
jecxz
mov
lret
dec
xchg
or
adc
inc
lcall
lds
fmul
inc
int3
jno
fmul
in
xor
push
dec
and
mov
fstpl
fisubs
mov
ja
movsl
popa
pop
out
scas
pushf
rorl
data16
cltd
test
icebp
fwait
lret
sahf
sbb
mov
or
movsl
mov
repnz
bound
int
cld
xor
mov
movsb
aam
xchg
adc
cmp
sbb
rcr
arpl
cltd
adc
aad
lds
iret
add
pop
lods
int
mov
xor
in
push
popa
fadds
cltd
mov
icebp
xchg
cmp
and
repnz
push
test
xlat
ja
in
int3
lock
dec
cmpsl
not
lcall
test
pop
sub
add
adc
shrb
adc
mov
data16
scas
arpl
mov
mov
cmpb
cmp
movsb
cs
fwait
mov
aaa
cmp
xor
sub
push
cmc
cld
xchg
es
mov
inc
loope
scas
dec
ror
push
push
pusha
mov
push
mov
sub
adc
sbbb
inc
scas
divl
adc
rol
sti
sub
adc
rclb
adc
test
mov
mov
jnp
cmp
int
pushf
mov
push
mov
mov
rolb
add
push
and
adcl
pop
fwait
outsl
out
jl
insb
in
cmp
mov
and
xchg
in
mov
dec
ss
jge
mov
jg
dec
inc
in
jecxz
push
movl
pop
lods
mov
push
xor
in
xchg
mov
cmp
stos
push
and
jno
hlt
out
dec
mov
je
mov
sbb
xchg
js
push
dec
out
lret
arpl
aas
les
hlt
inc
in
lock
and
jnp
outsb
mov
leave
sbb
fisttpl
sub
sbb
push
ljmp
xchg
out
xlat
fdivs
dec
fnstcw
pop
test
jp
sub
push
push
sti
mov
xor
pop
ret
push
in
repz
insl
pop
pop
aaa
sub
and
insl
push
ja
sahf
sbb
cmp
fstcw
adc
pusha
mov
or
jge
xor
or
sbb
movsb
lahf
cmp
movsl
mov
insl
push
sub
mov
stos
push
jg
fidivrl
fidivl
push
xor
push
cmpsb
add
push
repnz
mov
cmp
inc
mov
push
mov
aam
fs
mov
jns
xchg
xor
mov
xchg
or
inc
rcll
lods
xor
ljmp
fwait
mov
xor
int3
and
lcall
lret
frstor
cmp
shlb
stos
mov
and
sbb
mov
mov
leave
sbb
pop
sbb
sub
ret
sub
mov
pop
subl
aad
mov
pop
jmp
mov
sti
pop
sbb
mov
add
jp
jmp
inc
sbb
cs
and
push
push
push
repnz
into
inc
adc
xlat
insb
test
inc
sbb
sub
icebp
xor
mov
dec
mov
aaa
push
mov
mov
and
jecxz
in
push
in
pop
sbbb
stos
mov
and
fidivrl
insb
ds
push
lds
xchg
inc
fadds
into
pop
push
dec
add
dec
jl
and
pop
push
xchg
movsl
push
cmp
fcmovnb
ds
jmp
insb
and
push
sbb
pop
mov
jg
out
xchg
insl
cmpsl
test
push
xor
mov
nop
push
icebp
mov
adc
lahf
int3
shrb
mov
add
cmp
xchg
sub
pop
das
xor
mov
pusha
jne
dec
lahf
push
jg
fcompl
cmp
ror
mov
or
xor
call
sub
xchg
dec
xor
or
and
push
jno
fs
pop
outsb
xor
push
dec
mov
or
arpl
stos
and
jne
jmp
jmp
and
mov
outsb
fldl
sub
js
call
add
leave
es
inc
popf
mov
push
cmp
outsl
adcl
cmp
mov
inc
mov
push
call
inc
jno
mov
push
movsl
sub
xchg
jp
adc
fistps
xor
add
jmp
add
fadds
cmpsl
roll
in
and
fs
xchg
lcall
mov
jb
sbb
add
jmp
mov
testl
into
jle
xor
popf
push
cmp
jns
mov
mov
shll
fdivl
xor
lods
cmc
cmpsl
pop
arpl
int
movsb
scas
mov
fsts
push
push
lea
test
daa
cmp
aas
lahf
push
inc
or
fisubrs
cmp
test
jns
fisttps
data16
shl
test
ljmp
shrb
addl
fdivl
jbe
add
cmc
inc
or
out
push
pusha
ret
aad
pop
adc
into
mov
adc
xchg
dec
xchg
mov
push
mov
xchg
clc
push
repnz
test
jl
les
test
lock
ret
pop
repz
jl
shr
fwait
leavew
in
jl
loopne
lahf
notl
cmc
fldl
sub
add
mov
lret
cld
xchg
inc
mov
add
push
in
scas
sahf
enter
cmp
sbb
mov
pushl
xor
nop
xor
testl
int
cmpsb
shrb
mov
adc
outsb
pushf
popa
adc
inc
pop
dec
dec
cmp
add
or
fdivrs
cmp
cmpsl
fiaddl
cmpb
sbb
sbb
popf
daa
loope
inc
or
das
add
sbb
and
je
stos
jp
fisttpll
add
xchg
cltd
and
xor
std
clc
stc
or
sbb
mov
test
mov
scas
ds
xchg
pop
jmp
enter
loope
lea
sub
adc
or
insb
imul
add
call
pop
cwtl
pushf
cmpsl
adc
inc
sbb
mov
pop
call
mov
insb
sub
pop
adc
sbbl
cmp
jno
lock
xor
jmp
jecxz
xor
inc
test
add
test
gs
inc
inc
sti
ret
mov
loopne
loopne
mov
jle
xchg
cwtl
ret
dec
pop
push
shrl
sub
das
jmp
icebp
mov
push
popf
fidivrs
loop
repnz
mov
les
adc
in
cmp
out
fdivr
push
xchg
or
fs
sub
mov
mov
test
movsl
mov
mov
loop
xchg
in
mov
adc
sahf
jnp
aas
std
push
lds
fimuls
adc
movsl
adc
push
and
dec
ss
and
xor
ljmp
and
mov
fdivr
inc
sub
test
rol
and
jmp
fldl
or
in
add
movl
and
ljmp
aas
mov
or
mov
sahf
cmp
subl
jmp
flds
sti
xchg
and
call
sahf
out
je
leave
mov
push
hlt
sub
fwait
xchg
bound
push
fstpl
jne
pop
stos
int
mov
mov
imul
loope
and
orb
aad
icebp
aam
into
shrl
jo
ficoms
push
or
lods
xchg
jecxz
inc
xchg
gs
movsl
jp
xchg
test
loope
cmp
jns
add
pop
fisubl
pop
cmp
pop
jne
aam
dec
cli
xor
sub
inc
xorl
lahf
jge
cmp
cmp
insl
xchg
or
ja
jne
int
aad
lea
mov
scas
fstpt
lock
lods
iret
inc
add
jnp
aas
outsl
ja
outsl
push
mov
jae
mov
rcll
mov
rclb
xchg
mov
addr16
sahf
push
sbb
sbb
in
mov
lods
adcb
jmp
cmpl
xchg
jb
xchg
pusha
pop
pop
mov
loopne
push
cltd
bound
imul
call
pop
ret
xchg
xchg
or
push
jne
mov
ret
jbe
pop
sbb
loopne
outsb
pop
mov
push
jmp
repz
lret
push
pop
test
sub
sar
scas
sub
push
subl
shll
mov
and
dec
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
mov
adc
jl
inc
pop
jl
add
rcr
xchg
xor
lods
aad
jg
jg
push
jmp
jnp
notl
and
xchg
add
and
shl
pusha
nop
popa
mov
add
imul
pop
call
fdivl
add
dec
jle
sbb
das
mov
and
scas
sub
sub
icebp
add
xlat
je
daa
test
loope
push
out
clc
loopne
push
mov
xchg
test
cmp
mov
sbb
cmpsb
aaa
loope
enter
or
fsubrs
push
out
sahf
cmp
mov
dec
adc
add
adc
fldcw
add
jecxz
popa
add
mov
xchg
mov
xlat
fstp
cmpl
test
in
mov
jbe
scas
mov
dec
push
fstpt
dec
out
loope
sarb
push
mov
mov
sbb
xor
push
pop
mov
js
movsb
xchg
inc
jmp
push
sti
jg
aas
mov
mov
mov
mov
mov
pop
cmpsl
inc
prefetch
dec
aas
iret
add
das
xchg
mov
nop
add
xchg
in
mov
cmp
mov
das
cmp
mov
jns
push
int
mov
jne
jns
mov
jo
push
jb
add
mov
xor
dec
ret
pushf
cmp
and
cs
imul
and
cld
stos
lcall
jae
xor
or
jg
adc
cmp
das
incl
lods
push
mov
outsb
jle
lods
adc
leave
repnz
dec
mov
inc
xor
mov
xchg
shlb
push
movsl
mov
xchg
in
pop
push
jne
aad
stos
cmp
jb
lds
stc
adc
fstl
mov
add
adc
lock
xchg
or
repnz
negb
add
lods
repz
mov
movntq
sbb
jmp
or
data16
push
mov
rorl
adc
lahf
mov
push
or
inc
mov
dec
mov
cmpsl
ret
push
push
inc
addb
mov
test
cmpsb
cmp
cmp
pop
cmp
dec
jge
sbb
aaa
test
mov
test
movntps
mov
es
and
jmp
shrl
mov
inc
push
sbbl
lret
sbb
xor
cltd
clc
leave
xchg
popf
outsl
mov
lock
loopne
mov
es
push
imul
imul
ret
and
dec
popf
push
in
int3
shlb
inc
sahf
lret
ljmp
ljmp
mov
dec
jp
gs
test
mov
out
data16
je,pt
xchg
lahf
cmp
ficompl
xlat
subb
cmpsl
adc
xchg
jmp
xor
fmull
sbb
mov
push
cmp
cmp
je
test
jbe
xchg
adc
mov
xor
faddl
out
fsubl
insl
push
sbb
dec
mov
dec
out
aad
sbb
leave
pop
xchg
mov
cli
push
leave
fisubrs
sub
dec
inc
and
add
cmp
lea
cmp
push
mov
or
mov
cmp
bound
leave
repnz
repz
in
mov
std
inc
pop
pushf
xchg
fstl
or
adc
pop
pop
and
adc
inc
stos
mov
mov
repz
subb
push
fnstcw
fs
sub
or
xchg
decl
movl
add
popa
ret
hlt
and
test
mov
and
lret
push
add
pop
xor
shrb
jmp
je
jmp
sbb
mov
rcll
scas
aam
lret
adc
frndint
ljmp
mov
jno
mov
out
je
mov
adc
test
rorb
mov
fldcw
lods
aam
data16
or
aas
push
icebp
xchg
lcall
jecxz
mov
xor
push
mov
sahf
ret
jne
mov
sub
mov
push
pop
in
inc
mul
inc
cmp
jle
vpermps
mov
lock
push
add
mov
aas
and
lods
ss
fisubs
pop
jl
cmp
fisubs
push
dec
sub
or
inc
xor
fisttpl
sub
mov
jp
test
out
mov
mov
aam
sbb
and
nop
fcompl
sbb
push
adc
sub
fisttpll
into
daa
cld
movsl
mov
pop
scas
pop
mov
movsb
sbb
mov
sub
push
sbb
outsb
lcall
repnz
mov
xor
jbe
push
lcall
pop
rcr
inc
sbbb
add
test
das
mov
insl
mov
leave
mov
mov
push
inc
inc
stc
push
pop
mov
jge
es
ds
jge
jle
add
lahf
fidivs
add
xchg
jb
fwait
mov
sub
adc
pop
sarb
mov
shlb
lea
push
or
dec
ret
mov
dec
std
mov
dec
xchg
jecxz
cmc
insl
push
sbb
cld
adc
inc
das
mov
pusha
ret
test
je
sbb
shl
add
test
subl
mov
mov
xchg
push
dec
pop
mov
inc
jmp
or
pop
xchg
pop
out
ret
shrl
xlat
test
adc
push
xor
pop
cmp
pop
adc
mov
outsb
mov
nop
cwtl
mov
inc
add
lret
jl
jle
xor
addb
jno
cmp
clc
lcall
hlt
movsb
mov
sbb
ds
nop
fnstsw
js
aaa
lock
sbbl
int
add
lods
subl
dec
imul
jecxz
les
jl
lcall
inc
gs
or
xchg
add
popa
mov
outsb
imul
add
and
in
arpl
mov
add
rolb
jnp
push
mov
ret
fsubrl
roll
mov
gs
imul
arpl
mov
sub
fsub
push
orl
xlat
mov
cwtl
mov
data16
ret
adc
leave
push
shrb
push
rorl
add
sub
xchg
dec
add
xchg
xchg
sub
aad
pop
imul
adc
insl
iret
hlt
shr
or
push
std
out
pop
aaa
mov
xor
jo
cmpsl
stc
jb
push
fnstenv
out
pop
test
cld
sub
test
inc
jp
mov
mov
sub
mov
jp
mov
pop
inc
loope
mov
and
aas
or
imul
cld
jno
test
mov
mov
add
mov
jb
ret
cmp
popf
mov
clc
fidivs
push
adcl
fwait
addb
andl
sbb
insb
cmp
mov
ffreep
mov
into
sbb
outsb
andl
movsl
aaa
pop
je
in
xlat
jle
add
xor
mov
shlb
inc
inc
xchg
xchg
dec
jbe
sbb
mov
adc
ja
or
sbb
push
and
repz
shr
mov
pop
in
das
popf
ja
jnp
in
das
mov
js
add
rcll
jmp
push
jbe
sarb
shrb
out
out
inc
out
jb
testl
adc
pusha
cmp
cld
push
fwait
cmp
inc
mov
ss
leave
lahf
pop
xor
jp
xchg
xchg
icebp
inc
push
ss
xorl
mov
fsubl
jae
nop
inc
lcall
cmp
mov
mov
outsl
int3
jae
jg
inc
ss
aad
push
sbbb
ss
dec
adc
push
pop
lds
cmpsb
dec
mov
addb
addr16
inc
out
stc
imul
sub
sub
test
stos
pop
dec
mov
inc
into
jno
fwait
or
mov
sahf
xchg
rcll
jns
mov
sbb
rol
je
jg
call
int
call
sbb
in
jecxz
adc
pop
rol
outsl
jne
push
setle
or
inc
adc
je
push
testl
xor
push
andb
jne
and
push
data16
fldt
pop
sbb
jb
aas
mov
fidivrs
push
shrb
cmpsl
mov
mov
ja
mov
xchg
cmp
insb
sub
push
popf
pop
xchg
fs
data16
jae
adc
sbb
sub
les
hlt
xor
cmp
sbb
out
mov
std
fildl
xchg
subl
push
jmp
dec
sbb
test
jge
mov
mov
in
sub
pop
cmp
pop
enter
fsubl
mov
orb
dec
notl
aas
shlb
ds
mov
sbb
shlw
mov
inc
cmp
notl
sub
rcll
mov
sub
adc
sub
jbe
leave
mov
sbb
xor
mov
inc
mov
pushf
mov
std
mov
cmp
sub
pop
arpl
or
xchg
mov
mov
jae
cmc
repz
jns
loop
es
aas
test
add
iret
cmp
stos
cwtl
ds
jecxz
cmp
push
cmp
mov
scas
push
fucomip
sub
sbb
dec
dec
pop
dec
cli
adc
add
or
push
mov
mov
enter
outsb
insl
push
push
mov
or
xor
adc
cmc
data16
rcrl
pop
jnp
push
sbb
jg
mov
xchg
sbb
mov
ljmp
add
repnz
hlt
lock
fstl
sbb
fidivl
and
insl
jge
pop
cs
movsl
mov
repnz
test
mov
cmp
stos
test
add
call
popa
cmp
mov
cmpsb
jb
mov
or
mov
scas
pop
imul
mov
aaa
int
push
lahf
sub
inc
jb
sbb
mov
and
icebp
jecxz
and
int
inc
sub
or
adc
push
mov
add
adc
scas
bnd
iret
inc
pushf
adc
adc
inc
repnz
dec
push
sbb
mov
fcmovb
dec
sbb
adcl
mov
jg
sarl
aas
gs
mov
sahf
inc
popf
movsb
pop
cmp
int3
add
in
jle
adc
mov
xchg
fdivr
inc
adc
dec
test
sub
aad
inc
mov
xchg
inc
shl
cmc
adc
jo
cmp
push
addl
cmp
xlat
pop
xchg
mov
shl
cmpsb
mov
insl
daa
add
lods
cmpsb
pop
ffree
dec
test
mov
repz
loop
fcoml
rcrl
cmp
lock
mov
std
pop
and
sahf
adc
loope
rcrl
test
dec
and
insb
rorb
jp
nop
nop
int
mov
out
jg
push
sbb
imul
inc
das
sbb
jb
cld
push
inc
clc
nop
shlb
pop
lods
aad
sub
mov
jle
add
lret
repz
push
sbb
xor
into
pop
add
xchg
add
jg
xor
push
mov
out
fcom
inc
leave
add
repnz
cli
fwait
das
and
cmp
lods
je
pushf
fstpt
clc
jns
dec
loop
popa
mov
hlt
or
sub
dec
dec
pushf
mov
les
jo
mov
cmpb
pop
sub
rcrl
jge
mov
sub
test
mov
jmp
scas
jg
cmpsl
sub
push
mov
outsb
out
lret
cmpsb
xor
test
dec
imul
and
inc
push
test
pop
sbbb
inc
and
rcrl
outsl
add
ja
rorl
int3
rcr
mov
call
xlat
in
mov
pop
test
out
icebp
ja
adc
dec
inc
inc
sbb
xchg
cmp
adc
xchg
fld
leave
inc
out
mov
lock
sbb
sbb
sub
adc
pop
cmp
les
push
test
cmc
iret
adc
fnsave
xor
test
stos
add
cwtl
push
cmc
insl
sub
fisubl
pop
loop
adc
sti
test
hlt
inc
cld
fstpl
xchg
faddl
and
dec
ljmp
pop
gs
sbb
inc
std
iret
cwtl
xchg
shlb
inc
pop
mov
loopne
adc
jg
pusha
jg
bound
or
insb
xchg
ret
mov
push
dec
sub
push
cwtl
pop
push
sub
mov
ss
cmp
sahf
jbe
mov
cmp
imul
inc
movsb
xchg
cmpsl
ja
pusha
movsb
sub
xor
mov
sbb
int
pop
add
sbb
add
mov
inc
ljmp
xchg
sbbl
push
mov
xchg
push
mov
mov
add
sbb
shrb
sbb
iret
adc
mov
xlat
xor
fbld
inc
sti
imull
in
test
adcb
sbb
sbb
jecxz
adc
les
xchg
dec
pushf
subl
imul
sbb
rclb
sbbb
pop
xor
shl
add
jg
iret
out
stc
test
dec
pop
js
sbb
mov
mov
scas
cwtl
or
jecxz
popf
nop
xchg
cwtl
out
jae
adc
sub
mov
outsl
fcomps
in
iret
stos
pop
test
lcall
stos
test
subl
fdivrp
mov
les
jmp
das
push
jl
out
sub
movsb
add
cmp
xlat
outsl
pop
clc
jbe
fwait
ret
sbb
popa
daa
sub
out
outsl
insb
into
insb
jg
sahf
push
mov
mov
pushf
or
rcl
imul
mov
data16
rcl
pop
lds
insb
popa
notl
add
cmp
ret
test
ja
jle
xor
fstps
test
pusha
or
pop
fcomps
cmp
adc
movsb
in
push
cmp
xor
fistpl
mov
dec
addr16
jl
sub
lcall
and
xor
cmp
adcb
mov
push
lret
cld
or
daa
sub
pop
add
pushf
leave
mov
out
jno
and
adc
and
out
movsl
jo
imul
mov
bound
pop
rolb
pop
dec
jns
mov
jl
adc
loope
dec
cmpsl
jae
mov
pop
xchg
pusha
out
ret
lahf
enter
ljmp
dec
or
sbb
aam
scas
push
icebp
sub
or
xchg
jnp
scas
bound
adc
fmul
mov
mov
shl
ds
loope
pushf
or
decl
movsl
sub
sbb
enter
inc
pop
xlat
pop
add
cmp
nop
movsb
mov
mov
clc
fcoms
mov
push
rcrb
jbe
mov
ret
add
jp
aam
add
js
pushf
inc
jmp
mov
pop
push
ljmp
adc
roll
js
pop
mov
adc
inc
add
js
mov
mov
cmpsl
sahf
inc
das
mov
jnp
mov
dec
fidivs
inc
add
fnstsw
dec
dec
jecxz
jns
mov
sbb
hlt
shrb
inc
or
mov
cmp
test
add
test
in
mov
dec
icebp
rcrb
insl
and
xlat
mov
fcoml
push
jne
or
shll
pop
push
adc
lret
sahf
mov
pop
lods
out
sbb
jbe
imul
and
stos
mov
dec
stos
xor
pop
test
addr16
cld
jp
int3
mov
pop
pop
dec
stos
push
adc
icebp
push
and
pop
mov
pop
fistpll
jnp
dec
push
pop
adc
aam
jb
fnstenv
shrl
push
lret
outsl
adcl
cld
call
insb
xchg
push
jb
push
pop
sbb
icebp
mov
andl
in
mov
cmp
pop
out
lcall
cmp
ret
push
addr16
sbb
pop
dec
dec
lea
pop
sbb
sbb
push
dec
xchg
imul
xchg
fcmovnu
and
lea
aaa
xlat
push
scas
ja
sahf
fld
mov
pop
fwait
or
test
lds
aaa
out
lret
xor
loope
dec
outsl
fwait
les
cli
into
sub
rcll
fs
adc
in
mov
cmp
ja
stc
in
ror
addr16
mov
sbb
sti
test
cmp
lret
popa
xchg
adc
shr
push
test
mov
or
sbb
dec
xor
in
mov
je
fiadds
mov
and
or
cs
stos
aam
faddp
rclb
aad
xchg
mov
dec
stos
mov
aad
mov
nop
xchg
sbb
ret
mov
xor
mov
pop
aad
ja
bound
pusha
jl
push
jb
lahf
jne
and
dec
jae
fistpl
pop
jp
dec
aaa
xchg
pop
adc
popa
hlt
testl
jle
xchg
xchg
mov
outsb
out
test
stc
xorb
mov
bound
or
aaa
push
addr16
lcall
sbb
sbb
mov
xchg
xchg
jo,pt
pop
xor
mov
das
jnp
fisubl
pusha
mov
adc
aaa
cli
pop
adc
mov
scas
mov
outsb
sub
stos
jecxz
jae
daa
cmc
sub
cmc
pop
les
in
int3
arpl
repnz
pop
stc
pushf
jns
mov
sub
and
xchg
adc
xchg
leave
jb
xchg
inc
lahf
aaa
sub
jae
dec
shll
mov
lock
mov
pop
ror
pop
int
push
les
sbb
cltd
xor
sub
dec
icebp
inc
inc
test
enter
and
repnz
jne
pop
push
push
pop
popa
loope
pop
jb
jg
push
pop
pop
fwait
xchg
jbe
xchg
shll
movsl
arpl
and
xchg
es
outsl
mov
jmp
fmul
mov
imull
orl
fs
in
fisubrl
jbe
sti
mov
cli
jnp
xor
lret
adc
int3
mov
sbb
pop
ret
pop
mov
inc
or
jno
jnp
arpl
jmp
call
ror
in
push
xchg
xchg
mov
aaa
mov
push
sti
repz
fsubr
popf
sbb
push
sub
int
cltd
dec
sti
dec
cmpb
mov
mov
inc
push
fimull
ds
in
outsl
cwtl
cmc
add
shrb
push
bound
or
xchg
cmp
dec
mov
mov
sbb
adc
mov
sbb
ja
cmc
or
fs
push
or
xor
dec
inc
mov
mov
push
call
sub
cmp
pop
int3
addb
sub
cltd
jmp
push
icebp
push
popf
adc
cmp
sti
sahf
sbb
mov
addr16
adc
xlat
or
cmp
into
or
js
jle
fildll
sub
out
ret
pop
ret
sub
dec
or
sub
xor
cs
push
cli
test
js
push
and
sub
insb
mov
sub
sbb
fcomps
push
es
adc
sub
enter
std
out
sub
jl
dec
xchg
xchg
daa
popf
xchg
dec
adc
mov
inc
xor
mov
addr16
sub
into
or
cs
pop
adc
popf
mov
loopne
adc
inc
mov
fstl
cmpsb
xor
pop
jno
xlat
mov
scas
and
scas
scas
mov
inc
scas
cs
jnp
sbb
sbb
xor
mov
mov
mov
sub
jmp
push
push
jae
pop
pop
arpl
push
sahf
xor
mov
or
out
js
gs
test
pop
pusha
pop
mov
dec
mov
mov
fsubs
mov
shrb
daa
lcall
insb
add
std
sub
out
xlat
in
sbb
mov
andb
enter
mov
aam
inc
cld
adc
dec
fwait
insb
pop
pop
add
jge
fldenv
mov
aam
pop
cltd
mov
test
push
cwtl
lods
mov
sbb
lds
inc
ret
insb
icebp
or
xor
xchg
dec
ja
pusha
in
stc
aaa
insb
mov
push
xchg
loopne
cli
pop
movsb
dec
jb
icebp
aad
mov
lahf
push
sbb
inc
xchg
xchg
stos
add
lods
mov
xor
push
test
test
push
or
test
push
mov
neg
sbb
rclb
bound
loopne
mov
arpl
add
adc
mov
and
jbe
dec
or
adc
or
adc
outsl
inc
push
fcoms
js
pushf
inc
roll
add
repnz
cs
inc
add
dec
sub
fbld
xlat
fadd
jno
data16
ss
aam
pop
jo
lret
jno
and
imul
jecxz
cmpsb
push
xchg
call
xchg
inc
xor
int3
sbb
dec
js
inc
or
and
repz
stos
pop
and
cmp
test
push
push
adc
cmp
add
aad
test
and
pop
es
jge
stos
and
in
xchg
mov
test
inc
out
cmp
daa
fdivr
outsl
test
lods
jmp
fimull
pop
add
cltd
lds
loop
cmp
push
xor
adc
call
dec
pushw
add
cmp
push
and
push
fdivl
push
aas
arpl
sbb
push
ret
sbb
dec
mov
adc
stc
stc
cmp
sbb
mov
push
cltd
imul
rep
adc
les
jp
ror
outsl
pop
addr16
sub
sub
sarb
xor
inc
insl
add
cmp
cmp
dec
mov
adc
cld
dec
arpl
rorl
inc
popa
adc
fmull
mov
sbb
aaa
stc
add
rclb
ds
xchg
jbe
cltd
adc
std
ret
call
push
inc
test
pop
loopne
hlt
fisubrl
push
jae
xor
insl
insl
out
shll
and
fcomps
add
inc
cmp
cmp
lds
add
lea
jl
push
inc
sbb
cmp
pop
mov
cmc
cs
mov
test
imul
mov
stc
inc
cmp
xor
lcall
loopne
xor
mov
adc
xchg
out
and
das
loope
nop
mov
aad
sbb
fucomp
jbe
addr16
xor
mov
xor
iret
setnp
flds
call
pusha
and
mov
jbe
xchg
fisubl
bound
xor
mov
mov
enter
mov
add
xor
dec
inc
mov
push
testb
lahf
xchg
or
movsb
icebp
sbb
dec
cmc
mov
xor
lret
outsb
dec
push
jo
mov
sub
popa
jmp
fdivl
sbb
jl
jmp
mov
mov
add
jg
lea
xlat
jb
pusha
push
xor
sti
sub
imul
cltd
scas
test
pop
daa
je
adc
dec
sub
cli
sahf
push
jecxz
xchg
sbb
mov
sub
ljmp
rcrb
mov
int
in
sub
movsb
loop
scas
movsb
adc
jmp
mov
subl
mov
cwtl
fisubl
sub
mov
shlb
cli
xlat
cmp
mov
sub
jge
pop
mov
xor
sub
push
xlat
sahf
or
cli
or
dec
inc
into
popf
inc
out
mov
mov
jae
int3
and
loope
cmpsl
aaa
inc
mov
imul
xchg
in
adc
dec
pop
and
icebp
dec
push
mov
dec
pop
test
mov
add
daa
orl
xlat
inc
xor
mov
pop
xchg
cmc
in
xor
in
addl
fcmovu
rorl
insl
repz
sub
xchg
pop
push
sub
sbb
rorb
lret
stc
adc
dec
cld
test
xchg
js
test
sbb
les
into
repnz
fs
icebp
add
mov
jo
jle
dec
fists
inc
and
dec
pusha
jle
adc
push
out
sbb
pop
adc
sti
fcompl
add
add
cltd
outsl
mov
xor
loop
es
cmp
mov
idivb
sbb
movsb
jl
jns
jl
or
add
push
pop
xchg
jne
fmulp
rorb
adc
push
js
sbb
pop
std
into
fs
rcl
jp
dec
mov
adc
loop
jb
mov
inc
into
or
jb
cmp
int3
mov
lret
stos
xor
loop
mov
stos
cmp
add
adc
lds
or
inc
mov
lea
jp
arpl
mov
lcall
call
out
adc
sbb
lock
insl
out
outsb
mov
clc
dec
inc
in
inc
push
xor
xor
loope
mov
aad
arpl
xor
hlt
dec
sahf
arpl
inc
dec
dec
cmpsl
loop
push
outsl
push
sti
lahf
shll
cmp
js
push
aam
mov
das
je
shl
add
iret
mov
sbb
ljmp
cmp
xchg
shrb
dec
push
clc
or
push
movsb
ret
outsl
cmp
aas
addr16
sub
and
call
inc
movups
js
xor
imul
negb
inc
jbe
int
sbb
inc
push
sahf
lcall
and
loopne
scas
xchg
decb
adc
pop
xchg
lahf
shlb
cltd
aam
xor
test
int3
cmp
xorl
dec
insb
shl
call
sub
sti
jno
addl
mov
cmpb
mov
mov
stos
push
or
xchg
aam
mov
xchg
cmpw
int3
lahf
std
inc
data16
adc
imul
lods
mov
jle
or
mov
hlt
pop
popf
into
int3
mov
leave
rcrl
mov
push
jno
movl
pop
data16
out
imul
loopne
into
jno
pop
enter
aam
inc
out
dec
sbb
inc
orl
cmpsb
in
push
adc
inc
nop
bound
cmp
mov
xor
pop
sub
mov
xchg
pop
jmp
cmpb
out
sub
mov
push
imul
out
jo
mov
push
data16
sub
xchg
sbbl
sbb
xchg
enter
sbb
xchg
xchg
dec
push
add
sub
in
scas
lock
pop
jmp
outsb
mov
test
lds
adc
cmc
jbe
and
int3
lcall
into
subl
dec
dec
insl
fisttpl
mov
mov
mov
pusha
out
aam
enter
js
clc
icebp
pusha
push
insb
pop
iret
int3
mov
mov
repnz
insl
stos
jne
scas
jmp
jns
add
inc
push
sub
int3
dec
in
mov
fisubrl
add
or
inc
jo
push
mov
in
incb
ret
addb
inc
int3
mov
rorb
jp
pop
out
or
rcrb
xchg
sbb
clc
repz
add
es
loopne
mov
cmp
loope
mov
add
xchg
inc
add
in
dec
xor
push
mov
xor
sub
cmc
nop
out
stc
pusha
pop
notl
mov
pushf
les
insl
mov
mov
inc
xchg
inc
insb
xor
mov
jne
pushf
jae
out
pop
xchg
or
sub
mov
jno
sbb
scas
lods
and
adc
das
xchg
test
int
jbe
jbe
pop
and
xchg
lods
mov
repnz
shr
jle
inc
clc
lods
jne
inc
insb
gs
sub
and
in
mov
pop
out
add
sub
loope
rcrl
push
and
pop
mov
push
shll
lret
flds
cmp
lock
in
or
push
dec
outsl
movsb
or
ficompl
insl
mov
aad
push
aaa
fstl
cli
mov
loopne
aad
or
jae
fidivrs
sbb
dec
insl
xchg
adc
mov
or
mov
jne
and
mov
test
fxch
imul
push
push
inc
mov
sbb
pop
sbb
xor
sbb
xor
mov
scas
hlt
sbb
xor
dec
rcrb
fwait
mov
shll
popf
shll
int3
mull
push
ja
jg
push
je
mov
mov
sbb
scas
push
mov
in
push
sbb
das
cmp
cmp
jb
fwait
js
push
xchg
push
daa
xor
mov
jecxz
xor
and
jge
in
iret
or
or
mov
push
addr16
ds
adc
xchg
clc
cmp
ljmp
jne
xor
fldcw
addb
test
mov
adc
stos
adc
xor
fstl
out
iret
adc
jle
sbb
aad
gs
mov
repnz
xchg
push
das
jo
push
xor
outsb
pop
es
test
mov
mulb
faddl
mov
dec
sbb
sti
das
div
rcll
pop
add
cmp
inc
push
and
outsl
lods
outsb
fsubl
push
aad
jle
xchg
dec
inc
ljmp
dec
push
out
sbb
push
scas
fs
mov
ljmp
out
jecxz
sbb
outsl
inc
int3
mov
and
jge
lock
out
sub
dec
and
pop
pop
aas
loopne
sub
inc
xorl
xchg
mov
jnp
lahf
mov
lds
mov
bound
out
cmp
in
mov
loope
arpl
and
fidivs
add
inc
sub
and
lret
adc
mov
push
add
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
xchg
sti
shlb
jnp
dec
xor
icebp
jmp
mov
mov
or
cmpb
lods
jle
hlt
imul
mov
push
sbb
xor
push
frstor
loop
jnp
xor
jl
sbb
test
pop
push
aam
fiaddl
iret
sbb
test
xorb
fcmovnb
mov
add
hlt
xor
pop
fprem
xchg
lret
icebp
cmp
cltd
dec
adc
sub
xor
cltd
and
mov
in
sub
jecxz
mov
mov
lret
jns
cltd
or
mov
xor
fucomp
xor
sub
mov
movsl
test
mov
cmp
add
outsb
cmpsb
fists
cwtl
les
lret
std
xchg
cmp
xchg
add
sbb
std
enter
or
push
aad
pop
in
clc
mov
outsb
shrb
out
xchg
popa
rcr
dec
add
std
push
or
xor
jmp
xor
in
loop
mov
mov
inc
insb
lret
adc
in
sbbb
imul
cwtl
and
mov
insl
les
lods
lret
cmp
sbb
mov
jmp
add
sbb
in
mov
ja
push
and
xor
aam
push
mov
in
lret
lods
or
add
lret
movsl
jg
stos
arpl
mov
test
sbb
and
fnsave
iret
sub
movsb
jo
call
xchg
mov
das
pop
loop
nop
sbb
out
dec
cmp
ret
lock
mov
cmpsb
xchg
and
push
pop
lods
repz
sbb
jl
shlb
pushf
test
push
hlt
mov
and
and
and
std
pop
adc
pop
dec
cmpsb
xchg
pusha
push
inc
stc
aad
hlt
mov
xor
les
xchg
xchg
inc
push
das
inc
mov
cmpsl
lods
jbe
add
test
pop
pop
add
mov
inc
add
out
sbb
nop
mov
scas
sti
mov
into
nop
bound
inc
fsubrl
mov
arpl
xchg
jmp
mov
arpl
jns
add
and
cltd
add
mov
sub
lret
xchg
xchg
mov
mov
mov
sbb
scas
cmp
das
push
mov
xor
movsl
ret
pop
cmc
mov
ss
fldcw
xor
push
adc
movsl
or
cli
outsl
mov
dec
or
pop
data16
cmp
sub
pop
cmpsl
and
mov
pop
xor
push
dec
and
fcomi
ja
add
sahf
js
inc
dec
aad
jg
adc
idiv
push
mov
mov
push
js
jae
sbb
dec
in
mov
shl
arpl
lds
les
scas
lret
mov
repnz
inc
adc
add
jne
ss
or
inc
push
popa
pushf
jle
sbb
jmp
mov
push
xchg
push
mov
cmp
aam
mov
div
jmp
lea
and
jns
loop
pop
xorb
xchg
iret
mov
xor
add
xor
outsb
cltd
sti
rcr
adc
flds
push
lret
aad
rcll
pop
ds
push
xlat
xchg
lds
mov
int3
mov
je
mov
cmpsl
inc
jge
out
ja
dec
les
xlat
jo
adc
sbb
or
pushl
mov
test
add
push
loopne
jb
jl
inc
jne
xor
xchg
mov
fnstsw
dec
xchg
mul
jmp
mov
insl
inc
stos
repnz
jl
mov
test
and
sub
cmp
fidivs
std
ja
sbb
imulb
mov
xchg
mov
in
stos
iret
insl
cld
cmpsl
mov
cmp
and
and
test
cmp
pushf
xor
xor
adc
inc
test
xchg
aas
or
pop
cmp
or
iret
test
into
aad
fwait
imul
push
or
cmc
sarb
dec
popa
loope
jns
in
adc
outsb
rclb
popa
add
int
adc
ret
sbbl
mov
mov
jo
add
cmpsl
or
scas
daa
xchg
xor
out
xchg
jmp
insl
xlat
cmp
or
xor
rorl
or
test
cmpsb
inc
add
and
adc
in
xorb
inc
and
dec
sbb
xor
rolb
imul
arpl
jo
push
fucomp
out
mov
xchg
ret
test
add
push
mov
nop
jmp
inc
mov
cld
mov
mov
dec
sbb
inc
in
xorl
lods
mov
xorl
sbb
xor
rol
out
shrl
mov
pop
push
ja
xchg
repz
jl
push
dec
sub
pop
jl
and
mov
xchg
cmp
adc
ljmp
leave
ljmp
lahf
test
mov
test
popa
push
mov
jge
ss
xchg
shrl
js
hlt
adc
sub
dec
mov
and
mov
cltd
das
addr16
pop
pop
bound
sbb
mov
std
mov
aad
bound
inc
xor
lahf
testl
mov
or
push
dec
les
stos
inc
xor
stos
jb
imul
push
test
sbb
test
cs
aaa
int3
or
rorb
mov
xchg
xchg
lods
xchg
add
adc
seta
and
sar
divl
leave
xchg
cmp
and
or
cmp
adc
mov
stc
std
fwait
repnz
dec
push
nop
fldt
cmc
adcb
pop
add
cmp
jl
dec
iret
ja
or
push
mov
cltd
dec
sahf
popa
push
cs
imul
jl
call
fsts
sti
mov
divl
ret
push
mov
test
xorl
call
mov
xchg
and
jo,pt
enter
cmc
dec
mov
imul
inc
sub
xor
jp
fimuls
pop
test
scas
mov
and
push
mov
xor
addr16
sub
jnp
sahf
sub
xchg
and
pop
xchg
jmp
in
push
lea
mov
sbb
or
out
push
mov
xorb
cmp
sti
pop
les
test
xor
xchg
sub
stos
mov
jge
or
cld
mov
fisttps
cli
movsl
ret
nop
inc
and
jg
int
aad
enter
mov
pop
scas
popf
adc
inc
jno
xor
lret
idiv
imul
dec
cli
cmpsb
adc
sbb
xor
push
add
test
mov
lock
mov
insb
inc
cmpl
out
jbe
cld
sub
cmp
psrlq
cmc
xchg
jo
int3
xor
jecxz
lods
loopne
aam
ja
mov
mov
adc
mov
lock
aas
pop
inc
ja
loop
movsl
lret
stc
jp
xlat
and
and
push
adcb
jp
popf
fmuls
xchg
data16
or
call
hlt
xor
ror
ds
mov
imul
lahf
iret
adc
lock
mov
dec
cmc
cmpb
int
push
add
in
push
xchg
push
mov
fwait
jae
in
adc
cmp
ds
xchg
mov
jecxz
cwtl
inc
fiadds
mov
add
xor
icebp
xor
jle
movsb
repnz
pop
aas
pop
sub
adc
push
test
xchg
rcrl
xchg
aas
out
lods
test
pop
ds
out
pop
outsb
and
inc
mov
inc
and
pop
sbb
adc
mov
jne
lods
mov
lcall
lahf
insl
xor
adc
mov
out
fdivrp
pop
adc
fs
mov
sbb
arpl
xchg
dec
push
push
jnp
mov
cmp
cli
pop
nop
fldl
inc
enter
mov
stos
sub
adcl
je
sub
rcr
fisubl
add
out
jle
jg
mov
dec
dec
add
je
in
addr16
test
lds
xor
pop
dec
jmp
mov
mov
pop
dec
out
sub
xchg
decl
cmpsb
imul
push
mov
mov
xchg
sub
loopne
sub
xor
xchg
mov
add
sub
adc
scas
rcrl
test
mov
adc
jl
pop
push
mov
jle
lret
int
sbb
std
xor
out
js
fsubrs
jmp
inc
stos
std
jno
loop
mov
add
mov
mov
loope
mov
mov
mov
lea
nop
iret
jg
fwait
dec
ja
pop
mov
mov
fisttpll
adcb
xchg
xor
stc
mov
addb
sbb
push
fistps
adc
adc
mov
out
add
popa
aam
fildll
xchg
scas
lods
adc
mov
into
shrb
mov
or
aas
inc
iret
jmp
mov
jle
xor
test
lcall
mov
push
or
xchg
iret
lods
inc
push
mov
xlat
pop
cmp
cs
mov
aaa
cmpsb
add
cs
aas
aam
ja
mov
rol
test
mov
stos
inc
or
andb
xorl
xlat
ja
mov
sbb
vmaskmovdqu
clc
mov
xor
push
mov
sbb
clc
pop
faddp
daa
inc
adc
and
xchg
lahf
add
mov
mov
test
jmp
iret
push
xchg
lret
sahf
aas
dec
xor
insl
cmp
mov
fisubl
lea
cmp
icebp
stos
mov
inc
mov
pop
xor
movsb
dec
mov
add
leave
mov
jecxz
xchg
adc
fmull
pop
je
xchg
es
mov
ss
cmp
into
dec
add
push
repz
pop
scas
adc
pop
es
jp
push
hlt
mov
in
arpl
jge
sti
cmpsl
pop
sbb
jg
loop
mov
bound
or
mov
mov
rorb
mov
lock
xchg
add
daa
or
sbb
push
fsubl
fnstcw
repnz
sub
dec
inc
aad
into
cmpsl
int
mov
out
test
mov
rolb
out
xorb
lock
dec
and
and
fidivrs
out
pop
adc
push
stos
stos
cmp
repnz
inc
movsl
jne
out
sub
push
pop
repnz
dec
cs
and
call
mov
cld
movsl
test
dec
sub
push
mov
jmp
push
mov
sbb
inc
or
sub
aad
insb
popf
add
ljmp
dec
mov
adc
jno
and
pusha
in
mov
mov
repz
or
lret
fisttps
cmpsb
cmp
aad
cmp
xor
je
lret
push
lods
inc
xchg
push
test
nop
mov
push
movswl
gs
xchg
jmp
mov
cltd
lock
adc
xor
dec
mov
sbb
mov
push
pop
outsl
jno
cmp
push
mov
cmp
push
mov
add
push
mov
mov
or
aad
enter
addb
mov
inc
xor
push
outsl
ljmp
int
mov
cmp
inc
cmp
and
clc
push
mov
xor
and
pushf
loopne
cmc
insb
scas
dec
mov
mov
es
jl
or
pop
lcall
fwait
repz
lea
test
xor
pop
cld
push
xchg
pusha
or
int
sbb
cmc
mov
jb
aad
test
inc
loopne
mov
aad
inc
jle
out
adc
arpl
inc
rclb
mov
out
lods
sbb
xchg
leave
sub
fs
add
loop
fldenv
adc
daa
dec
mov
inc
leave
lds
scas
cltd
mov
dec
rorb
ss
sub
lret
mov
add
jb
mulb
cmp
int
or
loop
xor
xchg
and
sbbb
or
mov
jbe
cmpl
inc
dec
xchg
cmp
hlt
xchg
pop
pop
mov
adc
adc
or
popa
or
fstpt
sub
mov
rorl
or
push
push
ret
jle
add
out
inc
int3
jb
dec
test
or
imul
push
lahf
pinsrw
push
outsb
sbb
int
fsubs
adc
mov
shl
dec
add
xchg
or
jno
inc
jp
lods
and
cmc
adc
out
jmp
mov
lock
mov
push
xor
dec
push
cli
push
rcr
aad
loopne
add
and
cmp
xchg
inc
es
daa
inc
lahf
call
fistpll
cmpsb
sbb
mov
daa
push
and
sub
aaa
and
inc
push
jnp
ds
mov
jns
mov
nop
loop,pt
mov
mov
ja
bound
ljmp
ljmp
loop
enter
inc
pop
iret
movsb
jbe
pop
int
jp
mov
outsl
cld
iret
iret
sahf
scas
dec
repnz
dec
pop
xor
jo
pop
mov
shlb
and
pop
rorl
push
scas
sti
pushf
scas
ret
jecxz
jle
mov
xor
cld
lods
xorb
push
adc
nop
jnp
test
push
inc
mov
add
das
sub
in
dec
jge
sub
push
mov
push
outsb
rorb
out
test
sub
or
cltd
loope
xor
fidivrs
inc
cmp
lods
inc
jno
mov
push
subb
dec
sbb
jecxz
daa
in
inc
mov
or
and
and
adc
mov
inc
mov
fildll
mov
loope
repz
mov
dec
cltd
push
cs
stos
pushf
cmp
lods
dec
mov
cmc
xchg
xor
addr16
fmuls
sahf
sub
push
aam
mov
mov
and
pop
sbb
repz
ret
inc
imul
hlt
and
sub
jle
adc
pop
lea
fs
insb
adc
and
sbb
push
dec
push
js
fs
mov
jo
jle
sub
xorl
pop
adc
test
andl
int
jo
xchg
in
xor
push
adc
sbb
leave
movb
or
loopne
andl
xor
dec
stos
das
stc
mov
adc
sub
incb
outsl
jge
aad
leave
adc
outsb
arpl
dec
pop
push
es
adc
insl
jle
jnp
lcall
xchg
stos
movsb
into
lods
or
mov
dec
xor
insl
or
out
xchg
cmp
adc
push
inc
insb
xor
idiv
jne
fwait
mov
xchg
push
push
sbb
xor
cli
mov
pop
jp
mov
inc
in
add
xchg
stc
mov
lcall
jge
lods
loopne
inc
xor
aaa
mov
das
push
jnp
shrb
scas
push
push
xchg
push
sbb
or
dec
mov
xchg
add
leave
cmp
push
repz
mov
scas
out
insb
mov
push
cmpb
cmp
mov
cmpsl
rcl
jle
js
inc
or
xor
lahf
addr16
lahf
popa
stos
ret
or
cmp
push
jo
or
dec
xchg
arpl
push
mov
hlt
icebp
shrb
and
out
jno
pop
shll
in
push
inc
mov
push
pop
cmp
sbbl
sbb
add
sub
add
test
inc
loopne
fsubrp
dec
cmpsl
pop
mov
adc
adc
repz
fildll
fdivrs
lret
std
popa
outsb
pop
mov
cmc
and
bound
ljmp
mov
xchg
mov
js
lea
adc
arpl
call
xchg
das
sbb
jbe
push
push
pop
push
jge
xchg
adc
push
ja
addr16
sahf
push
imul
fs
jmp
popf
dec
mov
movsb
testl
es
fdivs
test
mov
mov
or
jl
icebp
mov
pop
cmp
sub
arpl
cmp
push
add
mov
subl
or
xchg
lea
movsl
aad
int
mov
dec
imul
dec
push
insb
jo
mov
shld
call
je
lds
jmp
cmp
mov
dec
push
add
pop
jp
rorb
dec
mov
xchg
push
mov
fstpt
fidivrl
mov
jno
xor
xlat
addr16
or
xchg
divl
ficoml
addr16
pminsw
fldt
push
xchg
inc
insb
clc
cld
cltd
ficoml
pop
adc
lahf
std
gs
sub
mov
nop
sbb
loope
push
call
mov
mov
or
mov
sub
mov
sbb
aas
lods
dec
std
add
aas
scas
adc
and
pop
inc
adc
hlt
cltd
rcl
push
cld
mov
loop
out
std
in
inc
idiv
cmp
mov
sarb
fdivl
sub
les
pushf
cmp
xchg
mov
fldcw
add
fwait
push
adc
stos
sbbl
sub
popf
icebp
inc
ljmp
mov
pop
inc
lahf
out
pop
aad
jbe
mov
xor
xchg
cmpsl
in
lock
adc
jae
jle
xchg
sub
dec
sahf
in
xlat
mov
shrb
fisubs
out
lds
jecxz
sti
sub
sub
add
sbb
in
and
mov
pushf
xor
adcl
dec
xchg
jno
mov
jp
mov
pop
loope
in
sub
sbb
or
cltd
push
push
jne
inc
clc
pop
push
inc
lret
xor
sbb
sub
ffree
aam
test
ss
sbbl
inc
push
jae
push
gs
negb
and
shlb
nop
mov
jg
in
ja
inc
mov
add
shrl
outsl
adc
out
movd
sahf
sub
sbb
push
lret
rcll
mov
shl
call
rcll
sub
jge
leave
pop
sbb
orl
pop
ror
divl
int3
cmp
sub
adc
push
sbb
sbb
sbb
or
jns
outsl
nop
jmp
xor
xlat
sub
lds
mov
fsubp
inc
xchg
stc
pop
xchg
mov
insb
add
mov
les
fisubrs
int3
jge
leave
cwtl
in
test
mov
mov
cmp
fisttpll
js
inc
pushf
xchg
out
adc
mov
in
mov
outsl
ss
xor
push
adc
js
shl
in
lahf
lret
mov
lods
mov
add
mov
xlat
jb
jns
mov
lds
addr16
pop
andb
andl
adc
notl
popf
jl
arpl
pop
or
inc
shl
dec
sbb
cmp
cmp
pop
sub
lret
pop
jp
movsl
or
test
popf
nopl
sbb
push
jmp
and
mov
and
imul
mov
aaa
stc
push
cmp
mov
inc
mov
and
mov
mov
jo
jns
adc
sub
sub
ret
dec
ljmp
fistpl
outsl
imul
test
cs
in
pop
cmp
mov
or
sahf
sarb
movsl
test
out
shrl
mov
lahf
sub
bound
scas
test
cmpsb
dec
mov
popa
shrb
ja
dec
out
cs
mov
out
fnstenv
xorb
adc
roll
push
lret
mov
xchg
addr16
inc
fcoms
jg
jge
insl
ds
jae
ror
dec
jge
ret
rorb
shl
adcb
xchg
div
call
cmpsl
add
outsb
mov
inc
mov
scas
cmp
ljmp
ds
nop
sub
cs
cltd
push
insl
pop
xor
jnp
sbb
xchg
adc
jo
lahf
dec
push
mov
loop
and
cmp
mov
aad
pop
pop
cmp
ja
fiadds
cmp
cmp
insb
clc
sub
xchg
push
repnz
loopne
or
jb
add
jo
or
sbb
sbb
lret
jl
out
addr16
mov
mov
popf
fwait
and
jge
xor
and
outsb
sbbl
cmp
call
lea
inc
push
movl
daa
stos
pop
clc
pop
lock
pop
adc
inc
cmp
nop
shrb
in
hlt
fistpll
mov
addr16
loope
xchg
rorl
fcoms
push
push
add
ret
shrb
mov
inc
adc
mov
mov
and
mov
fists
lcall
xor
inc
dec
jmp
les
cmp
inc
jl
cmp
push
jp
pushf
lds
outsb
jbe
aam
adc
push
mov
mov
fildl
jecxz
mov
jp
fstpt
xchg
push
stos
stos
mov
xchg
mov
mov
hlt
cltd
ret
inc
push
and
daa
jmp
pop
mov
call
sub
jns
push
out
pop
ss
push
insl
nop
xchg
data16
data16
mov
aas
xchg
insb
and
iret
cmpsb
adc
push
shlb
rorb
fs
inc
xchg
sub
push
mov
ljmp
xchg
pop
das
mov
mov
cmpsl
in
cmp
push
mov
push
add
mov
pushf
mov
movsb
add
push
push
call
orl
mov
and
lcall
xor
push
ljmp
push
rcr
push
clc
xchg
mov
jecxz
lret
int3
js
mov
mov
push
mov
push
sub
bound
test
xchg
push
int3
and
sub
adcb
js
ljmp
jp
scas
fucomip
fmuls
lods
fs
std
sbbb
aad
or
push
dec
mov
cmp
dec
cmp
in
push
adc
jne
call
adc
inc
dec
and
mov
popf
out
and
sbb
sub
fisttps
mov
lds
fbld
jmp
pop
mov
jmp
negl
adc
xor
shrl
imul
stos
adc
xchg
pop
pop
mov
inc
outsl
inc
mov
ljmp
cld
fs
jecxz
and
xor
xchg
sbb
imul
dec
ret
mov
and
hlt
mov
out
pop
cmp
cmp
sub
loopne
xchg
xor
test
fists
aaa
cltd
iret
and
inc
repz
jle
mov
mov
dec
pop
push
imulb
cld
lods
cmp
or
cmp
sarb
cmp
pop
lret
clc
leave
add
sub
frstor
xor
adc
popl
push
mov
or
sub
push
lret
fs
ret
dec
sbb
rol
mov
sub
iret
lsl
shrl
inc
mov
xor
insb
jnp
pop
mov
fwait
sub
jle
and
add
aaa
imul
mov
sbb
inc
mov
dec
add
out
jno
push
fcomps
xchg
idivl
enter
aam
int3
cmp
lcall
rolb
lcall
decl
inc
je
sbb
outsl
or
sub
xor
call
pusha
xlat
xor
mov
push
sub
push
lcall
mov
mov
out
into
cli
int3
rep
test
mov
mov
jmp
xchg
jne
cmpsl
inc
outsl
addb
clc
and
stc
icebp
or
out
imulb
and
jb
lea
icebp
jle
xor
jmp
add
or
xchg
jo
push
mov
push
dec
inc
rorl
test
jg
push
cltd
out
jo
adc
cmp
out
loop
test
mov
stos
mov
xor
loop
jns
lock
sbb
push
cmp
push
stc
popf
xchg
popf
sbb
or
xlat
mov
inc
mov
gs
lahf
in
sti
bound
cld
xor
mov
aas
cmp
sbb
fsubs
mov
pop
xlat
adc
andb
push
push
mov
push
stc
add
adc
stc
int
faddl
mov
ljmp
popa
ja
cmpsb
lods
and
push
in
in
jns
xchg
cs
xor
movsb
in
daa
sbb
mov
mov
fisubs
shlb
out
xor
out
fcoms
repz
mov
test
clc
sub
mov
mov
icebp
inc
mov
lret
in
int3
shrb
loope
dec
sbb
lret
push
adc
outsl
mov
cmp
out
xchg
mov
or
filds
mov
sub
aas
popf
lcall
ljmp
inc
icebp
das
in
or
lods
cs
adc
sbb
inc
jnp
roll
call
pop
cmp
inc
rcll
int3
outsb
test
xchg
xor
xor
faddp
int
cmp
dec
out
filds
fisttpll
xor
xchg
sbb
gs
pop
mov
scas
aaa
pushf
mov
test
jmp
out
lods
test
stos
jae
pop
clc
sub
cltd
cwtl
hlt
push
int3
js
push
push
rclb
or
call
xlat
mov
ret
push
clc
leave
enter
mov
dec
xchg
cmp
frstor
popa
in
xchg
sub
imul
jp
pop
mov
jns
in
lea
hlt
ret
lret
int3
jns
pop
inc
push
cmc
push
arpl
mov
or
test
mov
cmp
inc
aad
mov
aas
or
mov
insl
ja
add
es
xor
popl
dec
mov
add
sbb
pop
loope
mov
push
ds
cltd
out
mov
aad
xchg
cmc
sub
xor
sub
pop
dec
js
leave
cmp
mov
and
aaa
fnstcw
ds
mov
adc
pusha
outsl
cmp
push
das
mov
iret
and
decl
addr16
out
push
nop
lods
lods
hlt
xchg
int
cli
nop
jmp
inc
lahf
mov
std
pop
insb
or
dec
push
mov
push
jl
jmp
mov
flds
and
xchg
fcmove
add
movw
pcmpgtb
xchg
dec
in
mov
mov
fidivl
test
mov
stos
dec
or
addr16
repnz
out
lods
and
and
stos
out
mov
imul
dec
lahf
fimull
add
lcall
lret
aaa
xor
scas
add
jbe
and
xor
int
mov
mov
popa
imul
iret
in
mov
mov
insb
je
dec
mov
in
xchg
jae
mov
adc
aad
hlt
xchg
aas
jp
shl
cwtl
fcom
int
sub
nop
jge
imull
call
jle
cld
clc
jns
leave
jno
mov
sbb
jb
dec
dec
sub
pop
sbb
data16
or
pop
pop
sub
stc
jns
outsb
jae
in
mov
fdivl
pop
in
bnd
arpl
and
loop
sub
cmp
ffree
push
mov
in
jl
push
jbe
outsb
fstpl
xor
shl
mov
xchg
fcomp
sub
mov
lahf
repz
sbb
mov
xchg
push
cltd
cmp
mov
dec
and
mov
imull
decl
cmp
add
shl
pop
pusha
xor
call
movsl
imul
ret
pop
push
jo
repz
adc
popa
ret
dec
shrb
mov
mov
aam
inc
mov
dec
pop
or
mov
dec
iret
lods
xchg
jb
adc
add
mov
sti
jle
pop
push
mov
push
sarb
mov
xorl
scas
dec
pop
movsb
rolb
jno
push
jge
lret
xchg
cltd
xchg
es
orl
clc
addb
in
out
in
lods
mov
repnz
sbbb
lret
int3
jge
sbb
fld
jmp
ret
and
dec
xchg
es
cmp
xlat
pop
adc
inc
dec
sub
mov
push
jmp
push
mov
mov
inc
fistl
scas
xor
mov
scas
hlt
sahf
cmc
sub
fst
sbb
ss
int
adc
lods
xchg
insb
test
test
fstpt
cwtl
xlat
cmp
xchg
movsb
xchg
push
imul
xabort
jg
bound
call
les
cmpsb
test
fldcw
int
sti
sbb
ror
les
push
lret
fs
fyl2xp1
clc
clc
sbb
inc
data16
das
xchg
dec
lcall
out
insb
mov
test
ret
jno
xchg
jae
xchg
inc
cmp
popf
test
xchg
push
add
ficoml
test
insl
mov
push
aad
and
fdivrs
sahf
jmp
cmp
mov
hlt
sarl
jnp
lahf
js
sbb
mov
add
loopne
hlt
push
fdivrs
inc
lea
xlat
inc
ret
fdecstp
mov
xchg
imul
ret
cmp
lds
aas
lods
mov
adc
inc
and
test
mov
ss
adc
js
das
push
enter
pusha
mov
test
push
xchg
rcrl
pushf
hlt
and
xor
in
ret
inc
mov
daa
repz
push
les
push
sbb
sbb
mulb
jecxz
pop
mov
pop
jb
loop
hlt
faddl
mov
cmpsl
in
inc
aas
lret
jne
adc
inc
outsb
cmp
stos
mov
pop
je
cmpb
jmp
adc
jg
pop
push
pop
add
loope
xor
out
or
iret
sbb
les
cmp
pop
in
in
sub
dec
repz
imul
cltd
sar
icebp
inc
imul
out
rcll
ret
popf
push
stc
mov
out
sbb
jp
push
lret
cmpsl
push
or
ret
insl
push
pop
fisttpl
scas
sbb
adc
dec
mov
int3
sarb
and
mov
xchg
loopne
or
hlt
lds
lret
in
test
pop
arpl
push
inc
push
stos
les
mov
jle
mov
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
xchg
insl
sub
jl
pop
jl
cltd
sbb
dec
cli
push
add
out
xchg
scas
push
mov
and
mov
dec
ds
jbe
mov
imul
int3
and
aaa
js
mov
xchg
pop
add
xor
xor
in
sub
xor
and
fsubrs
stc
aam
icebp
add
sub
mov
jge
dec
dec
rcll
mov
xchg
fisttpl
mov
mov
and
lahf
lea
ss
dec
or
fisubrl
neg
cwtl
lcall
sbb
sbb
iret
sub
pop
fs
rcrl
lods
push
in
cmp
xor
sti
or
jae
lea
and
cld
scas
cmp
lods
jecxz
mov
imul
add
sub
pop
inc
add
rep
cmpl
xor
xchg
mov
mov
jmp
cmpsl
add
mov
pop
or
adc
push
push
or
cltd
roll
push
sub
js
pop
jp
call
outsb
cmp
insl
mov
ja
andb
sub
jmp
push
and
sbbl
jo
fisubl
test
das
mov
xchg
pop
dec
mov
loope
js,pn
mov
cmp
jle
cmp
jne
in
jne
dec
dec
push
jecxz
ficompl
das
dec
lds
push
loopne
lcall
jmp
notl
fs
and
lock
mov
aaa
sar
mov
les
inc
ds
popf
mov
int3
pop
cltd
in
repz
xchg
fdivrs
movsb
mov
insl
fistpl
sbb
sub
aam
pop
pusha
adc
lcall
inc
mov
sub
mov
out
inc
sbb
push
sbb
add
fucomi
xchg
mov
pop
int
ja
daa
in
pop
pop
mov
lock
fiadds
sub
pop
imul
je
inc
in
push
pop
dec
mov
jo
rcl
les
inc
push
adc
insl
or
iret
imul
cmp
mov
cmp
in
dec
push
pop
gs
ja
pop
inc
nop
or
adc
shrl
shll
pusha
inc
jmp
sbbb
dec
mov
mov
pop
pop
cli
dec
mov
sub
ss
clc
out
mov
int
inc
popa
arpl
add
mov
mov
shl
and
mov
stos
repnz
mov
inc
xor
pop
push
js
xchg
jno
aas
clc
jns
pusha
lcall
inc
adc
mov
add
mov
add
push
int3
push
sbb
xorb
gs
add
mov
push
orb
adc
adc
push
jg
jp
inc
mov
test
movsl
add
insb
jp
out
inc
arpl
test
fld
cmp
pop
das
xor
jle
outsl
or
dec
int3
jle
popa
inc
pop
pop
loopne
fldcw
or
cmp
leave
jbe
and
push
adc
inc
std
loope
adc
inc
mov
movsb
mov
mov
inc
push
cmp
insb
cld
dec
sbb
and
arpl
xchg
fistl
adc
dec
jmp
aad
xchg
das
aaa
inc
jnp
pop
mov
adc
cli
mov
mov
jnp
xchg
jle
cmp
and
outsl
and
sub
lahf
fdivl
xor
xor
sahf
pop
sbb
dec
mov
jnp
pop
mov
adc
roll
lret
rcl
lock
in
repnz
aam
jbe
sub
stc
mov
dec
or
out
repnz
loopne
rolb
inc
lods
mov
nop
subb
fsubs
subl
jno
cmpsl
xor
mov
dec
adc
scas
push
cmp
out
push
int3
call
lahf
stc
dec
in
jge
in
rorb
mov
daa
add
dec
in
fs
pop
push
fisttpl
fcomps
add
and
mov
insb
shlb
mov
push
lock
inc
in
jecxz
sarl
addr16
lret
outsb
and
pop
adc
stos
jbe
aam
cwtl
jp
and
push
xor
mov
xchg
push
int
dec
cltd
cmp
aam
in
mov
jb
dec
insl
push
ljmp
sub
gs
and
or
loope
stc
call
loopne
xor
pop
mov
in
mov
mov
sub
inc
les
aam
in
mov
pushf
jnp
push
mov
adc
outsb
xchg
adc
sbb
inc
or
jae
lods
push
mov
mov
lret
sbb
pop
jg
fs
adc
fildll
enter
aaa
pop
fs
dec
adc
out
cmp
push
pop
call
mov
push
enter
sub
lret
jbe
shlb
aaa
adc
sbb
pop
aad
adc
adc
mov
mov
divl
mov
mov
cmpsl
loop
icebp
push
sub
mov
jge
pushf
sub
stos
fs
mov
mov
cmp
cmp
sbbb
vsqrtpd
push
cmp
idivl
stos
sub
jo
mov
dec
loope
sbb
xor
mov
andl
iret
aam
jl
ret
gs
pop
in
cltd
jmp
pop
push
stos
jecxz
push
ja
mov
sub
push
ds
enter
fdivl
jb
inc
or
and
inc
movsb
test
mov
sbbl
fwait
mov
dec
andb
imul
jo
adc
int
mov
cmp
jne
cmpsb
leave
xor
les
pop
add
imul
fwait
leave
jl
and
sub
lcall
xor
mov
in
add
add
enter
pop
jno
mov
mov
pop
cwtl
negl
mov
mov
and
and
mov
hlt
ljmp
popa
inc
repz
xor
in
xchg
cmp
push
cmp
push
shlb
push
push
add
xlat
sub
mov
sbb
pop
test
inc
aad
mulb
jne
jmp
cmc
imul
std
xchg
fisttps
jo
stos
lds
lods
adc
and
into
nopl
push
imull
or
push
fsubrl
mov
mov
cmp
mov
mov
cmp
push
cmp
movsb
or
mov
iret
decb
test
pop
int
inc
xchg
jmp
and
std
dec
push
cmc
fidivrl
in
lods
mov
push
mov
pop
mov
lods
enter
int3
dec
arpl
dec
push
push
or
xchg
jmp
mov
cmp
cld
dec
cld
outsl
push
pusha
inc
cmpsb
jmp
add
aam
push
jp
and
sarl
nop
push
jbe
dec
mov
pop
mov
lock
xlat
mov
jle
test
xchg
sarb
jl
test
bound
orb
adc
adc
sbb
cmp
aam
idivb
pop
and
lret
mov
test
imul
outsb
jbe
in
loope
add
pop
inc
jle
in
lahf
cmp
into
mov
insb
hlt
mov
sbb
je
out
xor
cmpsl
push
dec
pop
cli
mov
pop
mov
out
clc
xchg
push
into
insb
jo
scas
iret
jnp
adc
movsl
pushf
daa
fwait
push
sub
add
fadd
test
jae
test
js
mov
xchg
movsb
lods
arpl
sbb
mov
cmp
inc
cltd
mov
fstpt
push
pop
mov
mov
xor
push
cmp
fstps
das
cli
je
jl
jle
imul
fldl
ret
shll
dec
sbb
arpl
test
lea
movsb
popf
cltd
subb
push
push
sub
sub
aaa
insl
inc
fcoms
jp
cmp
jae
jl
mov
loope
xchg
popf
outsl
cmpsl
push
ficompl
aas
xor
gs
test
xchg
jns
and
sbb
push
cs
aam
ret
pop
std
inc
xchg
lods
leave
loope
push
scas
shr
push
adc
inc
fistps
dec
bt
sub
popa
out
shrb
cmp
cmp
mov
fwait
cltd
les
aam
mov
daa
xor
adc
mov
mov
mov
inc
sub
out
psubusb
dec
xchg
ret
sbb
or
stos
clc
test
lock
or
push
and
inc
cmc
fs
or
add
jo
mov
push
jbe
in
adc
lret
shrl
pop
cmp
jmp
and
push
pop
repz
or
orb
int3
mov
cld
test
ret
or
sub
fidivrs
das
bound
es
mov
jo
sub
mov
pop
inc
popa
cmp
ljmp
mov
outsb
sti
out
lret
inc
into
outsb
xor
cli
dec
in
jo
hlt
sahf
inc
into
insl
std
xchg
jb
xor
mov
xor
stos
imul
xchg
out
ss
out
add
sub
int
dec
movsl
xorl
lret
test
nop
jnp
inc
cmp
xchg
cmpsb
fwait
push
xchg
call
test
out
add
add
dec
jne
ret
and
in
fiaddl
daa
lcall
jb
cli
and
insb
pusha
mov
ds
sub
sub
loope
cs
cmpsl
clc
pop
mov
pop
enter
mov
insb
jl
nop
loop
jnp
xchg
icebp
and
ljmp
out
jbe
ljmp
adc
jae
mov
xchg
pop
pop
mov
loope
call
inc
out
dec
les
push
push
les
add
and
movsb
push
inc
insb
adc
out
test
fwait
mov
das
movsb
adc
xchg
imul
test
push
lret
insb
rorb
lds
in
fs
dec
mov
sub
pop
ljmp
pop
push
popl
repnz
xlat
test
notb
iret
movsl
rcll
test
sbb
cmp
push
and
dec
jb
mov
add
inc
adc
jno
or
cmp
call
mov
mov
je
js
dec
iret
out
cmp
push
sub
inc
aad
jge
dec
ret
mov
ret
ret
mov
cmc
dec
push
in
add
sub
aad
test
aaa
lret
push
test
cli
xchg
test
fstpl
sbb
lock
ss
jl
in
cmp
mov
jmp
sbb
enter
xchg
jge
ss
sub
inc
xchg
dec
iret
adc
xor
mov
jbe
inc
pusha
add
or
push
jo
insb
add
scas
orl
inc
stc
jp
add
mov
repnz
call
push
or
loop
jo
add
outsb
loope
cld
or
insb
or
aaa
mov
mov
and
insl
rcll
mov
sub
jmp
hlt
pop
cmpsl
insl
jecxz
mov
aas
xchg
aam
sub
push
jle
xchg
xchg
mov
xlat
push
in
bound
rcr
in
cmp
jae
fdivrl
sbb
mov
inc
or
ss
inc
in
popa
dec
mov
pop
loopne
xchg
xchg
icebp
and
cli
mov
dec
int3
lods
push
push
outsl
iret
jns
and
lret
mov
add
push
pop
sub
push
scas
or
sbb
icebp
xchg
sahf
or
sbb
cmp
loope
add
lahf
lods
mov
fcmovnb
adc
loope
xchg
fidivrl
dec
rcll
and
sbb
push
xchg
mov
xchg
fsubr
add
cmp
lods
inc
iret
bnd
je
dec
cmp
lock
add
jp
and
or
lahf
shl
push
sub
or
cmp
push
inc
out
mov
mov
xor
adc
mov
pop
orl
sbb
je
mov
scas
jle
adc
cmpsl
jno
ss
dec
stc
incb
dec
xor
in
mov
mov
pop
sub
xchg
adc
sbb
cld
and
data16
adc
aad
hlt
pop
ret
ds
orl
jl
adc
cmp
pushf
xchg
push
cld
jnp
mov
xchg
out
cltd
jg
in
add
into
sbb
add
xor
xchg
cld
ds
push
sbb
lret
mov
adc
cmpsb
dec
out
pop
outsl
loope
dec
inc
dec
push
stc
pop
ja
add
hlt
push
call
xor
adc
mov
fistpl
inc
mov
push
negb
jbe
lods
adc
cmp
addr16
xor
jmp
cmp
loope
push
dec
cmpl
insl
add
jecxz
or
lods
outsl
jge
addr16
subl
out
addb
in
cltd
xchg
fwait
nop
pop
pusha
data16
out
sub
adc
sbb
into
add
push
xchg
xor
mov
add
icebp
sub
insb
pop
scas
xchg
adc
add
dec
dec
test
jns
jnp
and
cmpsl
lahf
pop
cmpsl
push
into
push
sti
adc
dec
sub
scas
inc
push
imul
notb
dec
fisttpl
and
imul
mov
mov
dec
mov
jb
push
imul
addb
pop
imul
idivb
jo
cwtl
scas
ss
arpl
cmc
pop
push
gs
or
leave
dec
neg
xchg
sarl
sar
or
pop
jnp
lds
pop
add
popf
jns
imul
lea
sub
pop
jns
hlt
ret
push
jbe
inc
sub
mov
sub
xor
test
inc
fnstenv
cmp
mov
loop
push
inc
xchg
rcll
aas
push
pop
mov
mov
and
or
daa
or
cmp
das
ss
in
dec
cmpsb
add
jbe
cmp
addr16
and
push
pop
sbb
test
das
int3
xchg
scas
dec
cli
sub
cmp
out
mov
lahf
cltd
jne
inc
adc
push
dec
bound
xor
push
inc
ljmp
dec
mov
dec
aam
fcoml
jbe
fcmovne
pop
pop
call
sub
mov
xchg
stos
pushf
loop
add
ljmp
hlt
sbb
xor
add
test
shrl
insb
cmp
xor
xchg
push
pop
inc
inc
pop
imul
data16
roll
mov
iret
insb
aam
push
or
push
call
cmpsb
je
mov
hlt
adc
mov
cmp
shl
sub
adc
dec
sbb
dec
pop
xchg
mov
movl
mov
dec
mov
pop
mov
ljmp
subb
dec
movsb
iret
loop
sbb
icebp
shlb
fcom
imull
sub
inc
lret
pop
adcl
sbb
dec
mov
stc
ja
cmp
jbe
movsb
mov
aas
mov
cwtl
test
mov
sbbb
xchg
jl
dec
lcall
daa
dec
test
jge
mov
adc
lods
ja
jbe
push
mov
jo
mov
inc
movsl
es
add
cld
jmp
sub
out
jno
stos
popa
mov
or
scas
int
mov
sbb
mov
push
aam
push
fmulp
mov
jecxz
xchg
jb
push
mov
add
jmp
dec
ja
in
or
adc
pop
sub
xor
cmp
insb
and
sub
imul
outsl
cmpsb
pop
cmpsb
dec
jl
sarl
lea
pop
jo
int3
cwtl
enter
adc
xor
jmp
bound
bound
cli
loopne
ds
lock
fwait
sub
xlat
cld
xchg
cltd
sub
adc
dec
shr
mov
mov
xchg
ja
or
sub
les
ss
pop
aaa
xchg
lahf
insl
scas
or
fwait
mov
lods
push
jl
popa
inc
lret
pop
addr16
push
dec
fs
cmpsb
dec
add
inc
cmpsb
stc
and
hlt
test
add
cmc
fdivs
add
lock
mov
mov
sub
push
pop
or
cmpsb
in
cmp
arpl
pop
and
and
inc
mov
mov
inc
mov
xor
jnp
bound
jmp
rcrb
mov
add
into
shl
pop
push
mov
xor
push
sub
push
xlat
add
leave
and
loopne
push
jns
std
enter
incl
jno
fistl
dec
pop
jb
inc
push
push
lods
add
das
inc
mov
ljmp
xor
pop
lret
addr16
fstl
inc
into
jae
and
minps
and
mov
cmpsl
cs
mov
clc
shl
pop
push
arpl
gs
fnstenv
jbe
mov
jmp
addr16
and
imul
lds
adc
pop
push
sbb
stos
xchg
inc
cmc
scas
push
adc
rclb
mov
gs
inc
arpl
in
mov
clc
cs
lea
mov
sub
call
cmp
pop
pop
xor
rcll
pop
stos
and
push
in
scas
push
xchg
sub
lcall
imull
jne
out
and
jmp
into
insl
push
mov
cmp
cmp
xchg
repnz
jp
lret
popf
loopne
fwait
inc
add
mov
or
pop
fs
xchg
and
popa
int
and
scas
xor
xlat
cmpb
pop
and
inc
cs
addr16
push
inc
push
mov
xor
push
in
stos
nop
adc
rorl
or
inc
mov
adc
xor
or
aaa
test
lock
pusha
mov
push
sub
sub
popa
idivb
js
xor
fstps
ss
pop
leave
mov
and
jge
mov
notl
test
cs
gs
insl
test
mov
imul
xchg
adc
mov
xchg
dec
push
cltd
dec
xor
movsb
push
int
shrb
adc
cmp
movl
lock
enter
and
mov
gs
sub
shll
loope
in
in
popa
stos
xor
ret
cli
aaa
dec
pushf
pop
rorb
out
pop
mov
sub
call
xor
cmpl
sub
fcomi
loopne
cltd
pop
shlb
push
inc
push
sti
int3
xchg
jg
sub
push
cmp
dec
push
dec
jle
jnp
inc
aas
push
xchg
jae
jbe
sub
xor
push
in
leave
mov
mov
and
aaa
mov
std
xchg
fisubrs
lcall
mov
frstor
pop
pop
shl
sub
sbb
mov
jmp
cmpb
test
push
inc
xchg
xor
inc
jne
add
or
or
mov
gs
jg
cld
int
mov
pop
loop
mov
std
mov
jns
das
stos
jmp
test
push
sub
lods
or
ficoms
cmp
sbb
popf
mov
js
fwait
mov
ret
and
dec
ljmp
inc
mov
sbb
xor
mov
cmpsl
inc
je
loopne
orb
fs
stos
ret
popf
and
sbb
jp
xchg
movsb
mov
aaa
loope
clc
shlb
mov
sbb
sar
fs
push
jl
sub
or
inc
add
je
jbe
mov
pop
jp
outsl
adcl
jmp
sub
nop
mov
fimull
jge
push
jle
jae
into
and
cli
xor
mov
jnp
cltd
aas
jo
sti
fs
pop
mov
sub
push
inc
xchg
adc
leave
inc
sub
das
dec
cli
cmp
hlt
pusha
shll
arpl
xchg
dec
aas
inc
stc
ficomps
cmpsb
inc
loope
in
int
add
subb
repz
and
jb
shrl
dec
in
or
dec
or
fsubs
and
cmpsb
jecxz
jne
or
or
nop
sbb
adc
sbb
adc
xchg
xchg
stos
je
loop
pop
int
clc
pop
rcrl
pushf
pushf
test
or
sub
inc
mov
or
pop
lahf
shlb
jns
lods
push
pop
pop
push
pop
bound
fsubr
repz
or
adc
push
ljmp
imul
jecxz
jns
in
adc
sti
into
jne
rcrb
cmp
mov
cld
je
mov
aaa
test
xchg
cli
clc
dec
iret
mov
imul
hlt
icebp
jl
push
xchg
cmp
aaa
mov
hlt
lock
jae
popa
pop
addr16
mov
adcb
jp
sub
or
xor
cmp
cmc
and
or
cmc
fisubrs
xor
adc
inc
mov
or
push
and
or
jbe
paddd
mov
rol
and
in
loopne
adc
sbb
ficomps
andb
rolb
mov
dec
or
inc
sbb
push
cmp
test
int
loopne
outsb
pop
outsb
xchg
and
and
popf
push
adc
lea
push
inc
gs
movsb
sub
rcr
mov
shrb
pop
or
stos
or
cmpsl
jb
pushf
inc
mov
jb
dec
add
repz
in
aam
jecxz
jbe
test
xor
and
sub
imul
lea
lahf
push
mov
icebp
add
sti
out
xor
push
es
daa
js
sbb
adcl
jb
repz
std
or
lsl
mov
inc
mov
and
adc
es
push
stc
movsb
lds
out
insb
cli
cmp
inc
cwtl
lds
adc
sub
sbb
cmp
test
lahf
dec
data16
movsb
adc
xorb
js
movsb
inc
push
std
dec
xor
xchg
in
jbe
rcll
or
mov
inc
xchg
outsl
imul
fwait
cmpsb
shll
clc
mov
jmp
sub
stos
mov
out
outsb
sub
sbb
and
orb
enter
pop
mov
mov
mov
mov
sbb
fbld
repz
out
or
sti
xlat
test
pop
xor
jno
out
outsl
mov
cltd
sub
hlt
xchg
cltd
dec
and
rorl
adc
add
inc
pop
ret
mov
arpl
decl
and
mov
cmp
sahf
dec
push
ja
mov
js
dec
xor
ljmp
sbb
in
jbe
rcll
push
rorl
lods
pusha
dec
and
push
mov
enter
adc
xor
inc
jg
mov
mov
or
hlt
std
and
mov
lret
or
mov
jo
cs
jae
roll
loope
cmp
xchg
mov
hlt
dec
mov
leave
jmp
jbe
scas
jg
outsb
bound
push
bound
xchg
jne
xor
inc
imul
ret
mov
xchg
shrl
jecxz
cmp
sub
mov
mov
mov
xor
outsb
enter
push
negb
push
cmp
hlt
cmp
stc
repz
sub
adc
cmpsl
sar
pop
and
lods
mov
es
pop
jecxz
orb
popl
dec
inc
xor
push
jnp
jmp
push
loop
test
cltd
std
jle
jecxz
pusha
mov
std
pop
xchg
xorb
movsl
and
cmp
ret
loop
je
push
mov
es
testl
pop
lods
fistpl
scas
pop
cmpsl
mov
lds
add
inc
jge
mov
adc
enter
imul
sub
fucomip
sbb
rorb
and
jne
mov
cmpsb
push
xchg
or
sbb
insb
pop
lret
and
les
or
pop
mov
aaa
pop
repz
into
ja
fwait
mov
dec
shr
inc
jmp
inc
jns
pop
fwait
mov
and
push
sbb
and
in
sub
jo
push
aam
mov
xchg
xchg
out
jb
bound
inc
sub
pusha
dec
bound
fdivl
inc
sbb
shlb
push
sbb
scas
mov
ss
ret
jno
cmp
std
aam
stos
push
inc
push
ljmp
dec
es
push
filds
mov
cmp
call
into
scas
jb
std
mov
sbb
scas
pop
popa
cli
jmp
fs
ss
adc
xchg
pop
xor
mov
repnz
insb
jl
fdivs
in
push
pop
int
adc
push
sub
mov
jge
mov
fucom
xlat
decl
subb
mov
mov
or
loope
pop
rolb
cmp
xchg
mov
or
sub
add
or
fldt
test
js
dec
js
rcrb
test
lret
hlt
aad
pop
lahf
insl
or
cltd
mov
inc
subl
add
lods
inc
add
shll
dec
sub
pop
xor
push
sahf
test
lea
fiaddl
fisubl
jb
fnsave
aaa
mov
mov
in
lcall
push
ret
add
xorb
in
xor
mov
enter
repz
sub
adc
imul
add
bound
mov
push
out
ds
ss
jo
rol
mov
push
jns
sahf
mov
scas
call
fwait
int
xchg
aas
repz
sti
cmp
loopne
sub
test
mov
push
divl
cmpsb
mov
sahf
pop
cmc
push
mov
cs
rolb
mov
ds
popa
jne
ss
ret
xlat
icebp
mov
out
pop
jo
ret
gs
and
mov
dec
and
iret
roll
push
rol
mov
sbb
push
fidivrs
jle
in
jle
les
lcall
ret
mov
push
xor
xchg
xchg
jo
cmc
pop
imul
adc
push
shll
cmpsb
idivl
shrb
adcb
inc
sub
xchg
stos
scas
sub
addr16
lret
outsb
mov
dec
pop
xchg
mov
dec
repz
insb
and
lahf
mov
cwtl
add
push
pop
jb
push
out
push
lret
xchg
nop
xchg
pop
and
add
call
subb
mov
jmp
loopne
leave
jmp
inc
fidivrl
insb
andl
mov
pop
fnstsw
xchg
xchg
les
pop
sub
in
jmp
xor
or
mov
ds
sub
shlb
hlt
and
sbb
mov
sub
loope
push
mov
or
shlb
xor
das
add
pushf
add
into
scas
out
mov
adc
ficoml
add
std
sub
adc
inc
sbb
shll
push
adc
lret
lock
imulb
sti
sub
inc
fcmovnb
push
int3
adcb
or
pop
stos
dec
insl
mov
xchg
inc
stos
jecxz
push
arpl
je
loopne
arpl
jb
orb
mov
testl
roll
mov
sub
nop
cmpsl
push
inc
and
or
push
xor
sbb
xchg
mov
stos
rclb
xor
and
xlat
inc
ret
ret
mov
fwait
pop
adc
loop
nop
adc
pop
or
rclb
aaa
cmp
mov
jb
int3
jnp
pop
cs
jl
stc
dec
or
cli
push
test
lock
nop
enter
ds
dec
push
mov
rdmsr
outsl
clc
iret
loopne
push
mov
xor
jnp
push
icebp
ja
jg
lea
xor
sarb
sarb
sbb
xchg
xchg
jb
dec
pop
testb
pushf
mov
dec
in
repz
mov
andl
xchg
into
cmpsb
test
dec
cld
mov
icebp
lods
idivb
pop
nop
jb
divl
scas
sbb
shl
shll
or
cmp
push
push
cltd
into
aad
test
and
xor
sub
jno
cmp
cli
dec
insb
sbb
cmc
xchg
mov
dec
inc
jb
xchg
clc
loopne
sub
xchg
loop
incb
orl
inc
adc
mov
mov
cwtl
scas
pandn
xchg
pusha
icebp
inc
lock
or
notl
les
mov
sub
imulb
mov
fsubrl
in
jge
mov
sar
dec
mov
shll
xorb
pop
jp
inc
mov
imul
mov
ret
std
xlat
dec
sub
adc
mov
xor
testb
iret
rcll
outsl
out
int
movsb
lret
scas
divl
loope
inc
das
loopne
jnp
cwtl
sub
jb
add
push
popa
push
mov
pop
inc
orb
cmp
push
lea
adc
push
and
xchg
inc
subb
insl
fisubrs
ret
out
add
cs
dec
push
sub
jg
or
stos
inc
sbb
mov
sub
pop
cld
js
xchg
xchg
shrb
leave
jno
xor
mov
inc
mov
jle
pop
mov
inc
rcll
testb
pop
aas
iret
out
sub
push
cld
mov
push
pop
inc
mov
aas
xlat
xchg
or
repz
jno,pt
sti
clc
int3
idivb
lea
cmpsl
mov
cmpl
insl
fnstenv
cmp
shlb
inc
pop
or
in
xlat
popa
mov
in
addr16
test
mov
xchg
add
xor
enter
mov
testl
scas
adc
push
leave
loopne
sub
pushf
unpcklps
subb
jae
sub
movsl
lods
or
adc
jbe
and
inc
push
je
fildl
pop
fwait
add
pop
outsl
ljmp
ljmp
xchg
int
sbb
inc
pop
ror
mov
cmp
mov
and
and
mov
sub
pusha
pop
dec
xor
rcrb
cmp
jmp
cmp
pop
aad
mov
jnp
sbb
aam
push
push
das
or
out
xchg
jge
jbe
bound
and
cs
push
stos
lock
xor
aad
add
imul
sub
mov
add
add
imul
dec
mov
das
pop
add
push
cli
jl
loop
insb
inc
in
mov
fildl
in
jbe
je
es
mov
shrb
movsb
pusha
xchg
lods
ds
ss
inc
rclb
xchg
cmp
lahf
shlb
mov
pop
stc
pop
shlb
imul
sbb
fimull
or
mov
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
lds
pop
jl
mov
add
icebp
sbb
and
js
ja
or
cs
pop
or
mov
je
dec
jg
sub
mov
fmulp
lock
sub
sbb
push
cwtl
bswap
int3
sub
push
mov
insb
gs
in
mov
cli
adc
sub
stc
jo
dec
jecxz
and
sub
and
dec
sbb
repz
test
les
or
cmp
lods
mov
loope
and
fwait
pop
repz
rclb
nop
idivb
or
sbb
shl
or
in
test
lahf
mov
mov
repnz
aaa
sbb
scas
gs
dec
inc
mull
call
xchg
or
arpl
xchg
rorl
in
add
add
sti
fsubrs
mov
sbb
jns
pop
pop
in
inc
loop
xchg
mov
aas
xchg
cmp
mov
mull
mov
fstl
ss
cmp
push
jns
ret
aas
add
out
popa
mov
push
jmp
in
lock
stos
xchg
enter
push
mov
mov
lock
repnz
xchg
push
stos
mov
pop
jg
cmp
fisubrs
movsl
je
ficoms
pushf
ret
pop
jbe
cltd
dec
ljmp
xchg
je
leave
push
cwtl
cs
cmp
lock
out
adc
cwtl
stos
in
pop
push
add
cli
adc
pushf
movsb
das
inc
in
rcrb
mov
pop
pop
or
and
jl
or
pop
jno
in
adc
fcmove
xorb
jg
mov
pop
in
sub
cli
or
sub
lds
lods
push
fwait
cli
test
out
mov
jo
sub
cmc
lea
xor
or
mov
cmpsl
cs
mov
leave
out
inc
sbbb
mov
imul
jg
inc
je
mov
mov
pop
or
mov
dec
je
xchg
xlat
mov
fisttpll
shr
lock
mov
out
loopne
shrl
xchg
add
add
dec
cmpsl
sbb
cmpsl
fstps
mov
cmpsb
dec
shrb
xor
jle
cld
push
loopne
adc
in
fistl
mov
fisubs
es
adc
mov
in
sub
out
dec
sub
test
push
push
or
dec
mov
out
jno
test
jg
rcl
push
test
xlat
in
jecxz
fidivrs
push
mov
addr16
pop
stos
inc
leave
sub
shlb
push
push
xchg
xlat
mov
sbb
adc
ja
test
or
pop
sub
stos
std
shl
js
and
fcompl
cmp
ficompl
jb
sub
cmp
push
push
xor
mov
mov
adc
and
mov
sub
leave
and
xchg
dec
repz
xor
adc
imul
stc
fsubs
pop
inc
sbb
lret
or
or
popa
xor
push
sub
imul
ja
sub
jbe
dec
popa
stos
jp
cmp
mov
sbb
stos
pushf
xchg
jge
sbb
jecxz
add
pop
fwait
subb
incl
insb
jp
jmp
je
push
push
sbb
xchg
push
jge
sub
iret
pop
and
sbb
pop
jecxz
sub
clc
imul
cmp
jbe
cmc
mov
dec
rol
fs
inc
lret
and
mov
testb
and
shll
push
scas
sub
push
sub
mov
insl
xchg
imul
les
mov
pop
mov
aas
or
jne,pn
cmpsl
push
lahf
sbb
mov
push
jo
mov
cmp
adc
mov
daa
push
jmp
mov
sbb
jnp
pop
outsb
push
pop
dec
dec
scas
cmpsb
push
jp
xlat
addr16
scas
pop
sub
adc
lds
sub
repnz
pop
lea
and
jmp
pop
mov
dec
or
mov
jg
in
je
pushf
push
dec
movsb
adc
aas
xchg
pop
insb
mov
push
pop
xchg
stos
cmp
xchg
fisttps
and
and
mov
mov
in
outsb
dec
sub
repnz
or
mov
pop
les
daa
popf
pusha
inc
repz
jmp
jno
mov
pop
adc
mov
mov
mov
push
and
sub
jle
std
sub
xorb
adc
jecxz
xor
inc
mov
pop
shll
add
data16
add
in
xchg
or
sub
fs
inc
mov
in
es
lock
cmpl
popa
ret
loop
mov
push
adc
or
mov
hlt
mov
rcrb
test
divb
dec
rclb
out
fwait
xlat
push
ljmp
sub
ja
call
cmp
sbb
or
inc
lods
fucomp
aas
lds
out
adc
and
movsl
dec
add
sbbb
push
arpl
mov
fs
mov
bound
cmpsb
jbe
cmpsl
mov
xchg
lds
xchg
fiaddl
adc
push
mov
in
shlb
leave
and
add
outsl
fwait
test
mov
push
addr16
cmp
xor
icebp
imul
outsb
out
ret
dec
out
inc
cld
fs
les
jb
mov
rorl
sub
mov
call
xchg
sbb
xchg
test
clc
mov
sbb
hlt
xor
adc
cmp
outsl
lahf
sbb
outsl
sbb
jb
imul
stc
pushf
mov
fsubr
mov
xor
add
data16
loop
outsl
sub
mov
bndldx
push
inc
data16
lock
jo
ljmp
or
or
cmp
lods
sahf
sub
cwtl
hlt
push
sub
sbb
or
adc
mov
jge
clc
jno
xchg
pop
imul
cmp
or
xchg
pop
pop
das
xchg
aam
sub
jp
aas
popa
sbb
mov
mov
mov
cmpsb
cmp
ljmp
out
adc
add
push
inc
lret
les
or
enter
rcll
jge
mov
aam
icebp
shlb
dec
ss
dec
lock
mov
add
mov
mov
jmp
inc
ret
dec
xor
or
aad
add
lret
fwait
jmp
add
mov
adc
xor
daa
icebp
imul
popa
mov
and
addl
mov
or
jle
aaa
arpl
mov
add
fs
cmp
mov
add
stos
push
and
mov
lods
mov
js,pt
jo
mov
adc
insl
and
repnz
idivl
add
nop
imul
lret
push
ficomps
lret
cmp
adc
rcrl
adc
cmpsb
sub
add
dec
cli
cmpsb
push
out
cmpsl
sarb
xchg
fdivrl
fsts
es
mov
ss
sti
sti
cwtl
popa
imul
loope
or
sarl
loop
sub
test
clc
jecxz,pn
mov
xor
daa
dec
inc
xor
jb
mov
stc
push
jecxz
push
movsl
mov
addr16
loopne
in
movsl
sub
js
cmp
popf
push
push
fs
fistps
sub
out
movsb
psllq
jbe
in
pop
sahf
jge
or
or
cmp
or
dec
aaa
mov
pop
ret
adc
test
xchg
jno
andb
inc
ljmp
add
jns
fldl
mov
aaa
lea
adc
std
dec
fcoml
inc
add
movsl
push
int3
lock
jb
jg
sbb
add
mov
addr16
flds
out
dec
and
xchg
ljmp
sbb
js
lods
xchg
imul
scas
add
dec
xlat
or
jle
mov
sub
stc
jl
push
in
lods
pushf
jnp
mov
fs
mov
dec
mov
dec
xlat
popa
mov
mov
data16
jb
rorl
adc
jb
or
lcall
cmp
in
cwtl
rolb
inc
dec
out
add
push
or
xchg
repz
scas
stos
lods
les
cwtl
inc
xchg
into
lods
or
push
push
jnp
add
nop
sub
cld
lret
fs
les
xor
mov
idivb
enter
jle
xor
xor
jae
xor
fisubs
mov
cmc
cs
jo
stc
clc
cmc
xchg
call
mov
jecxz
pop
cwtl
test
cmpsb
or
cmp
jbe
clc
bswap
adc
in
movsb
mov
push
and
push
nop
mov
jno
dec
sbbl
test
inc
mov
stc
cmp
inc
shrl
sbb
call
push
loopne
jnp
fisttps
fidivrs
fsubs
sbb
pop
or
es
aaa
lahf
add
ret
adc
stc
or
xor
scas
mull
shl
aam
lods
adc
and
in
divb
add
dec
xor
dec
fcomip
lcall
jl
sub
inc
outsb
jo
stos
cmpb
add
mov
adc
rcll
jmp
and
push
mov
cmp
ret
xchg
mov
jge
xlat
lods
mov
dec
cmpsb
ss
add
roll
jo
mov
out
ds
aad
xchg
pop
je
mov
loope
pop
pop
sub
scas
sub
lret
lcall
sbb
icebp
mov
clc
lods
lds
pushw
out
pop
ds
jge
sub
mov
jne
inc
fs
dec
cmpsb
pop
out
cmp
xlat
mov
push
fwait
inc
clc
mov
xor
loope
stos
adcl
into
xor
adc
outsb
scas
lcall
pop
ss
bound
leave
imul
xchg
or
jmp
inc
cltd
mulb
cs
gs
push
adc
icebp
cmc
jecxz
mov
mov
cmp
loop
fisubs
mov
sbb
adc
push
push
fwait
mov
sti
sub
pop
push
xchg
scas
push
add
pop
test
inc
or
mov
add
jp
dec
pop
and
scas
dec
fwait
mov
mov
xchg
mov
adc
or
sar
dec
xchg
mov
mov
loop
sub
mov
adc
into
in
dec
xchg
or
dec
scas
loope
pop
mov
mov
gs
call
sbb
out
mov
out
push
stos
add
inc
jb
and
xchg
fscale
mov
add
popf
mov
push
aaa
stos
sbb
mov
outsl
hlt
add
dec
sub
push
imul
jae
clc
sub
cmp
xlat
out
nop
add
and
mov
jmp
popa
xchg
sti
adc
divl
divb
xchg
sbb
mov
out
push
int3
clc
arpl
sbb
nop
test
xchg
adc
or
iret
pop
adc
and
cmp
or
dec
mov
popa
loope
mov
mov
or
xor
inc
out
sti
mov
outsb
push
xchg
mov
enter
xchg
jl
jmp
faddl
icebp
mov
je
jae
gs
inc
idivl
ljmp
fs
and
pushf
enter
inc
int
arpl
xchg
or
mov
push
hlt
mov
push
push
inc
ljmp
dec
dec
push
pop
aas
dec
push
push
js,pt
outsb
jmp
jnp
inc
jp
out
cmc
popf
pop
ss
lea
movsb
inc
add
call
dec
int
repnz
int3
lea
out
inc
adc
or
inc
ret
scas
pop
jns
aam
fsubr
fdivrs
test
test
or
imul
and
fldenv
jno
inc
in
aas
lock
sbb
xchg
mov
lret
in
in
cs
call
dec
mov
xchg
ffreep
sbb
cwtl
js
push
pop
test
jae
push
jmp
fldcw
imul
jl
adc
fs
xor
test
sbb
xchg
cmp
inc
pusha
sub
sbb
rcrl
test
pop
add
mov
aas
inc
call
inc
pop
aad
pop
hlt
inc
dec
or
mov
push
jge
lret
pushw
push
xor
jne
sub
push
pop
add
or
mov
frstor
push
imull
daa
in
xor
cmp
mov
or
mov
rcll
neg
mov
je
xor
icebp
rcrl
mov
jae
in
clc
push
add
cmc
loopne
mov
arpl
fwait
leave
int3
repnz
aam
cmc
ret
or
mov
mov
dec
mov
push
push
push
or
sbb
out
xchg
mov
inc
les
cmpsb
push
psrlw
cwtl
xchg
jle
cld
sub
ja
dec
leave
push
push
inc
and
dec
add
mov
int
adc
orb
jae
jo
jge
ds
shll
out
mov
mov
fcmove
popa
pop
push
mov
divl
jne
pop
mov
xchg
jg
dec
xor
push
dec
out
jge
pop
adc
xchg
enter
cmovne
das
fnsave
sbb
cmp
inc
lock
mov
scas
imul
repnz
and
sbb
data16
jl
xchg
jne
cmp
push
imul
test
jmp
fbstp
dec
jne
movl
pop
cmp
mov
cli
dec
cmp
inc
cmp
imulb
sahf
pusha
pusha
mov
js
xor
pop
xor
ljmp
std
in
xchg
pop
mull
add
bound
add
dec
shll
lock
sbb
and
call
jp
xor
bound
jge
jbe
push
insl
pop
xchg
sub
jns
mov
mov
test
leave
or
ret
icebp
sub
mov
ret
dec
push
mov
or
jbe
pop
fsts
cltd
cmp
or
popf
or
out
pop
xchg
aas
inc
adc
mov
xchg
inc
add
jle
in
out
pop
push
and
orb
inc
cmp
mov
pusha
pop
addr16
mov
xchg
pop
cmp
dec
outsl
daa
push
xorps
push
sub
jbe
push
mov
arpl
cmc
inc
dec
fidivs
mov
out
in
adc
daa
daa
gs
dec
dec
adc
in
clc
mov
stc
int
mov
lcall
mov
popl
aas
int
xor
pusha
in
mov
pop
mov
cmp
shll
mov
stos
iret
adc
cmp
popa
mov
adc
jbe
iret
push
mov
fidivrs
lret
lods
mulb
or
ss
repz
and
push
mov
jmp
xor
mov
jp
das
stos
ficoms
pushf
ss
fld1
adc
enter
jl
out
gs
push
sbb
dec
sbb
out
cmp
cmp
jne
add
xchg
aas
adc
dec
outsb
xchg
lret
sbb
loop
stos
push
mull
jb
jno
jne
sub
dec
jl
pop
jno
icebp
mov
mov
cmp
xchg
dec
outsl
arpl
in
addb
mov
aaa
adc
adc
shlb
mov
inc
jb
jmp
add
pop
nop
add
xchg
in
add
pop
mov
mov
inc
pop
pextrw
mov
ret
icebp
imul
and
out
gs
xchg
das
xchg
cmp
mov
sbb
mov
iret
testl
cltd
dec
pop
fnsave
xchg
pop
scas
lcall
jbe
add
popa
add
mov
xor
scas
push
jnp
imul
lods
test
mov
mov
or
aad
lahf
aas
add
leave
jmp
xchg
push
pop
jle
sub
xchg
xor
sahf
movsb
push
orb
mov
inc
adcb
ret
jbe
ds
inc
mov
addr16
rclb
pop
or
jb
push
mov
inc
fdivrl
push
aaa
fdiv
xor
add
inc
es
mov
inc
loop
std
jnp
mov
xchg
setne
cmpl
movsb
mov
xchg
in
sub
sub
negl
or
loope
dec
sub
addr16
xchg
push
xchg
add
push
cmp
lahf
ljmp
mov
out
lods
sub
push
cmp
pusha
pop
cmp
cmp
ljmp
sti
bound
leave
sbb
enter
loope
or
mov
movsl
fldenv
test
inc
data16
push
sbb
lret
shl
mov
push
jo
cltd
push
dec
pop
adc
mov
jbe
or
dec
jbe
sbb
in
andb
loope
dec
enter
mov
clc
inc
rcl
adc
or
ljmp
xchg
and
sahf
jae
pop
jnp
jns
mov
jo
push
xor
mov
outsb
clc
sub
fcmovbe
int
loope
mov
adc
cs
xlat
loopne
outsl
xor
loop
add
lahf
es
dec
mov
dec
jno
and
mov
addr16
push
xor
inc
mov
fcoms
xchg
mov
in
pop
pop
orl
aam
sahf
push
repnz
sahf
dec
ljmp
cwtl
dec
in
xchg
push
adcb
xor
popf
xchg
cli
imul
adc
xor
stc
inc
xor
lea
xor
adc
inc
jp
pop
pop
ja
add
xlat
shrb
or
fs
dec
and
loop
mov
daa
lcall
repz
xor
arpl
shlb
gs
test
pop
push
jnp
dec
and
adc
sbb
sbb
pop
scas
setbe
push
out
mov
leave
negb
xor
rclb
js
rorb
jns
xor
inc
fsubr
out
enter
jno
add
mov
rcll
sub
shl
aad
test
outsl
or
push
out
push
fidivrl
cmp
xchg
sub
repz
lods
arpl
or
sahf
and
xchg
test
ss
divb
imul
divl
jg
mov
addr16
adc
push
insl
imul
sub
push
sub
iret
dec
dec
and
into
pushf
rcl
leave
cmp
fwait
cli
js
mov
ret
insl
addr16
xchg
lcall
mov
xor
in
fildl
mov
push
rcll
push
xadd
stc
loope
aaa
mov
xchg
xor
popa
inc
sub
or
mov
test
push
sbb
push
notb
test
rcll
push
je
pop
pop
or
add
xchg
lret
cltd
and
and
dec
mov
xchg
shlb
push
test
stc
mov
pop
pop
push
daa
push
sub
repz
sbb
push
test
ss
jp
mov
mov
jp
mov
sub
sbb
int3
in
xchg
mov
fdivp
mov
lahf
repz
mov
pop
ds
mov
add
aam
sub
xor
push
int3
fnstenvs
gs
sbb
push
cmpsl
js
mov
sub
or
sbb
es
push
sbb
fcomps
pop
dec
cwtl
imul
pop
outsb
rclb
mov
int
fildl
mov
dec
push
xor
and
cwtl
add
xor
xor
gs
insl
ds
bound
aas
rcll
pop
adc
mov
or
outsl
nop
cmp
arpl
dec
push
jg
sbb
leave
push
xor
and
arpl
out
xor
xor
pop
test
orb
outsb
sbb
cmpb
iret
ficomps
stos
movsl
in
dec
sub
sti
in
jmp
mov
inc
arpl
cld
aam
imul
mov
testb
jne
push
ljmp
sub
aaa
xor
mov
dec
les
jecxz
loop
ljmp
fisubs
xchg
pushl
cmp
xchg
bound
jmp
orb
mov
mov
shr
xchg
push
movsw
in
push
cs
sub
inc
push
stos
adc
sbb
repnz
iret
sub
loope
in
inc
pop
es
mov
jmp
insl
pop
jns
adc
mov
rorb
ds
jae
push
das
outsl
stos
ret
insl
inc
jae
mov
inc
std
push
outsb
fs
mov
rclb
inc
sbb
fdiv
cmc
arpl
out
lahf
mov
dec
dec
push
jecxz
imul
xchg
dec
dec
test
aad
xchg
lcall
jo
fidivs
int
outsl
push
outsl
add
adc
jae
popa
sbbl
jbe
mov
shrl
dec
js
test
inc
xlat
add
jl
push
addr16
mov
mov
sbb
lods
pop
jns
sbb
mov
jbe
aaa
loopne
jle
add
mov
in
fwait
gs
data16
add
mov
in
dec
or
lea
ret
sbb
jmp
syscall
pusha
jle
cltd
mov
negl
inc
addr16
mov
jnp
sbb
cmpsl
addr16
push
out
dec
dec
mull
push
pusha
in
xchg
test
pushf
ret
dec
std
aas
add
sahf
xchg
test
dec
jmp
movsl
cmp
dec
mov
and
add
popa
insl
stc
sub
fisttpll
or
jmp
xchg
aad
clc
pop
les
je
pop
cmpsl
out
insl
cmc
cmp
cltd
lret
cwtl
or
xchg
pop
mov
fsubrl
std
call
mov
mov
mov
scas
aad
jg
shl
lret
sar
jp
imul
rcr
daa
mov
dec
stc
mov
jne
insb
xchg
sub
xor
imul
adc
mov
and
xchg
int
cld
adc
hlt
or
dec
popf
sahf
orb
lock
loop
inc
fwait
mov
jle
movsb
addr16
jnp
js
shrb
mov
xchg
and
push
test
pop
pop
imul
pop
shrl
mov
clc
add
adc
jge
add
sbb
fnstsw
das
pushf
test
fnstenv
dec
jmp
xchg
fsubs
sub
mov
adc
jnp
xchg
add
sbb
push
cmpsb
call
mov
sarl
mov
std
lcall
shlb
sub
ljmp
and
adc
nop
xor
repnz
push
mov
hlt
imul
popa
sti
pop
pop
sbbl
fldl
add
jb
nop
pop
push
test
les
rolb
cld
mov
and
int
mov
rcrb
stos
sub
sbb
into
gs
bound
flds
cltd
mov
sbb
sbb
sar
fmull
push
sub
imul
dec
icebp
lahf
cmpsb
repz
sahf
inc
sub
inc
cld
xor
and
addr16
out
xchg
daa
cli
imul
fbstp
adc
jb
mov
xchg
ss
dec
cmp
mov
cli
lret
mov
and
adc
jne
jbe
mov
notl
stc
jmp
xchg
gs
pop
cmc
push
je
ret
popa
push
cmp
into
dec
pop
xor
test
sti
jnp
rcll
stos
mov
aas
nop
inc
sub
test
je
push
cmp
rorl
fcmovb
mov
popa
in
int
inc
xor
fildll
idivb
int
popl
loope
mov
and
cvtps2pd
xor
mov
jg
cmp
xchg
jle
cmp
adc
cmp
sub
adc
mov
lcall
rolb
mov
sbb
sbb
sbb
xchg
jecxz
cmp
and
les
mov
push
push
sbb
inc
mov
addb
in
mov
movsb
mov
cmp
leave
test
mov
pop
pop
aas
orb
xorb
sub
cmp
hlt
sub
mov
sub
out
push
push
xchg
xchg
cmpsl
and
inc
fisubl
leave
filds
ja
insb
cmp
and
push
out
mov
xchg
in
mov
cmp
xchg
and
cltd
mov
cmp
lods
cmc
daa
xchg
cltd
sbb
enter
xchg
mov
mov
outsl
sbb
cmpsl
sti
or
cmp
int
push
aad
jns
dec
mov
movsb
push
and
int3
inc
pop
mov
jbe
push
inc
ljmp
dec
out
aad
out
sbb
xor
lds
pop
sub
xchg
stc
divl
movsl
clc
leave
scas
push
bound
loopne
mov
mulb
and
daa
loopne
in
push
xor
std
pop
fucomi
lods
sbb
int
enter
icebp
xchg
add
pop
stc
push
xor
lahf
testb
stos
enter
add
leave
sbb
jnp
adc
mov
cwtl
fdivrs
lahf
fistpll
cmc
fs
fcmovnb
imul
xor
xchg
rcrb
inc
push
outsb
pop
addr16
and
f2xm1
jmp
std
addb
popa
lods
pop
aas
ja
xor
and
cmp
mov
aaa
cmp
jns
ds
mov
cmc
arpl
jne
fildl
pop
std
in
xor
js
ret
in
adc
in
xor
int
lahf
push
das
stos
sbb
aas
push
xchg
jl
bound
or
dec
sbb
xor
fbld
mov
cmp
push
cs
data16
and
das
ja
loop
out
sub
in
sbb
mov
sbb
lea
add
cmp
cmp
or
insl
dec
test
jae
inc
dec
mov
mov
pop
cmpsb
sarl
adc
stc
cmp
pop
and
mov
mov
ja
pop
mov
push
lock
aaa
enter
sbb
and
ret
std
pushf
xor
cmp
push
addb
push
cmp
mov
cmpsb
outsl
sub
mov
rorb
xchg
imulb
push
aad
loopne
stc
lea
movsl
scas
mov
dec
stos
dec
pop
pop
adc
mov
in
addl
cltd
add
je
or
stos
mov
cltd
pop
mov
sub
pop
cmpsl
mov
out
and
fcoml
fdivrl
rclb
push
cmovg
sub
or
lret
rolb
add
test
repz
lahf
pushf
loopne
adc
out
into
test
mov
jns
stos
mov
into
pusha
mov
mov
and
shl
mov
gs
pusha
movsl
lods
movsb
lods
fnop
cmpsl
mov
inc
mov
add
lock
iret
and
in
pop
jmp
into
mov
rol
xor
ror
es
push
jnp
xchg
repnz
imul
fcoml
mov
lods
or
ret
int3
lods
decb
int3
add
je
cltd
jo
mov
daa
pop
test
mov
stc
or
and
inc
sbb
cli
xor
mov
xchg
out
hlt
dec
mov
incb
aad
mov
clc
or
inc
repz
sub
repz
dec
xchg
imul
loopne
and
jg
mov
push
sti
adc
jmp
pop
adc
xor
adc
add
arpl
pop
movsl
cmp
and
mov
ds
pop
jo
cmp
repnz
dec
rcrl
lret
mov
scas
mov
clc
cltd
adc
jle
pop
stc
inc
mov
mov
cwtl
insb
faddl
inc
mov
fcmovnu
jle
dec
out
iret
and
or
pop
cli
xlat
xor
in
mov
mov
popa
hlt
packuswb
pop
adc
jns
repz
pop
push
sbb
cmpsl
sub
aaa
mov
inc
sbb
adc
inc
jle
rcrl
xor
fcom
cmp
ret
inc
js
cltd
rclb
add
mov
pop
mov
loop
lcall
push
mov
xor
fsubr
cltd
cwtl
push
ficoml
popf
test
add
push
cwtl
fadd
cmp
cmp
xchg
or
and
push
out
mov
movsl
push
push
fistps
dec
hlt
aas
adc
stc
dec
es
icebp
rorb
push
and
pop
shrl
dec
stos
pop
or
add
push
decb
push
test
dec
cld
shr
xlat
pop
test
shlb
xchg
std
dec
into
or
or
xchg
mov
pop
ret
lods
sub
push
pop
cmpsb
jne
imul
cmpb
jmp
xorl
in
jg
push
pusha
jnp
sub
in
mov
in
jo
clc
dec
mov
mov
pop
lret
test
xor
lods
xor
ret
push
outsb
and
add
inc
subb
stc
cwtl
cwtl
push
sub
in
lods
jmp
and
mov
and
pop
add
loopne
popf
xor
fidivrl
fistpl
icebp
test
push
pop
scas
push
lret
jl
fadd
pop
adc
xchg
add
popa
xchg
dec
cmpsb
es
add
add
pop
movsl
adcb
push
repnz
pop
cld
xor
sbb
aad
div
jbe
and
stos
test
fistl
subl
add
cmp
mov
xchg
imul
cmp
adc
xor
movsl
fcmovnbe
lods
jb
leave
icebp
icebp
add
push
mov
sti
push
faddl
mov
roll
loope
xor
hlt
fcos
fcmovnu
or
add
stos
lds
adc
mov
and
fdiv
mov
and
and
repz
stos
sbb
rcrl
fisttps
popa
adc
sub
or
jbe
lret
jne
ret
push
cli
fdivl
sub
cmp
sub
push
ss
dec
pop
or
or
fdivr
pop
and
pop
jge
sbb
pop
jg
and
ja
test
add
ss
popf
addr16
xchg
inc
cmp
cwtl
pushfw
scas
pop
push
mov
inc
inc
jnp
shlb
in
mov
adc
loope
hlt
mov
insl
cmp
inc
mov
ret
es
outsl
inc
aad
scas
pushf
jmp
sbb
les
insl
mov
out
inc
mov
fldenv
aam
add
pop
int3
xchg
lcall
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
and
cmpsb
add
fmuls
push
and
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
push
addl
cld
add
add
fnstsw
push
outsb
pop
cmp
sbb
or
movsb
dec
xor
ljmp
jb
fcmovnu
shrl
shll
sub
jl
stc
jbe
mov
aaa
and
mov
push
dec
xlat
add
inc
movsl
out
adc
xor
inc
inc
and
mov
out
mulps
ret
push
pop
push
xchg
mov
mov
mov
stos
push
push
inc
add
outsl
sub
mov
lahf
mov
repz
sti
ja
repz
cmc
fwait
xchg
push
pop
or
sbb
mov
xor
loop
inc
loopne
add
sahf
add
mov
cmp
cmp
push
xchg
sub
mov
push
dec
mov
arpl
push
test
mov
lods
call
repnz
pop
lea
dec
push
loopne
jb
addb
je
push
dec
sbb
mov
sub
add
aas
dec
mov
popa
shlb
mov
push
sti
push
lock
mov
dec
std
fs
push
notb
scas
jle
enter
inc
sbb
fcoms
jbe
sub
jne
fcoms
js
rcl
lahf
mull
add
shrb
ret
hlt
andl
xor
ret
cmp
dec
addl
xor
imul
push
fsubrp
or
jne
fsubl
or
inc
jbe
in
inc
pushf
ljmp
push
cmp
mov
lock
xchg
mov
fists
cltd
sub
mov
and
mov
outsl
dec
adc
test
mov
ret
cmp
je
sbb
sahf
mov
pushf
outsl
pop
cmp
push
and
cmp
add
add
idiv
jg
mulb
jbe
add
add
cld
add
add
repz
sub
jge
nop
sub
inc
nop
pop
cwtl
xchg
clc
aam
lcall
cld
divb
ss
and
shl
add
or
lea
push
mov
stc
scas
xchg
pop
insl
jno
xchg
mov
jne
jne
pop
pop
loopne
aaa
jle
sbb
jnp
sbb
hlt
lahf
dec
into
sub
push
stos
inc
testl
mov
adc
aam
fisttps
bound
mov
or
jmp
out
icebp
or
ret
cmp
bound
dec
dec
mov
push
mull
int3
rcrb
pop
cmp
repnz
in
sub
fimull
sub
cmp
push
sub
mov
mov
movsl
push
mov
insb
xchg
dec
loop
adc
enter
cmp
popf
mov
lods
in
mov
lcall
lret
fistps
fldt
xchg
mov
pop
dec
mov
sub
imul
mov
adc
dec
fcomi
fbstp
aad
and
test
dec
arpl
pusha
pusha
aaa
xor
stos
orb
adc
xchg
outsb
push
and
imul
ret
or
jp
jne
inc
in
pop
incl
xchg
jle
rolb
fisubl
push
mov
inc
ret
pop
jl
push
fstpl
fs
fimull
lret
or
int3
rcr
mov
add
jno
lcall
cmp
dec
loop
inc
in
push
and
int3
mov
fnstenv
push
inc
je
inc
push
cmc
js
sbb
jmp
push
stos
scas
mov
xor
mov
std
pop
pop
fdivs
pop
mov
pop
stc
mov
sub
orl
dec
jo
fstpt
mov
sbb
add
add
sbb
pop
std
jg
ljmp
add
add
dec
pusha
adc
adc
aaa
sarb
pop
test
js
and
xchg
cs
dec
xchg
push
ja
pop
adc
insb
cmp
ljmp
add
cmp
inc
shll
int3
shlb
rcll
inc
rcr
pop
dec
es
sar
cmp
sbb
icebp
xchg
sbb
pop
xlat
xor
push
mov
insb
movsl
xor
cmpsl
jb
add
lds
aaa
inc
mov
pop
xchg
je
test
cli
pop
ljmp
mov
adc
mov
adc
mov
push
test
jg
sub
and
aad
jno
cmp
adc
xchg
mov
mov
daa
ljmp
lahf
shl
bound
sub
mov
cmp
es
idivb
cld
inc
add
push
ffreep
push
jl
out
cmp
test
sbb
sahf
push
ret
lcall
lea
daa
ror
adc
jbe
les
and
nop
adc
hlt
dec
std
and
mov
sub
cld
mov
leave
and
pushf
ret
test
cmpl
jp
jns
jb
mov
out
or
pop
cld
subb
lret
ds
xchg
jae
lret
lret
or
jbe
mov
hlt
mov
out
imul
mov
daa
pop
stos
mov
repz
and
xor
inc
cmp
stos
sbb
sti
movsl
mov
adc
stos
fcomps
insl
icebp
stos
lea
popa
xchg
imul
or
xchg
addr16
jo
rcr
pop
sbb
stos
jb
cltd
loope
push
add
mov
int
mov
sub
add
add
add
int
jae
jmp
jge
xor
gs
adc
cld
xchg
scas
out
sbb
mov
jno
cltd
scas
mov
sbb
outsl
pop
fimuls
add
idivb
faddl
ja
iret
mov
aam
push
and
fdivrp
adc
mov
mov
stos
dec
xor
jbe
inc
les
mov
pop
fs
cmp
sbbl
ja
in
fwait
mov
xchg
leave
enter
push
cmpsl
or
xlat
mov
mov
and
fcomip
aad
ja
and
inc
das
fs
shll
fwait
mov
or
std
sub
or
out
lds
mov
fistl
lret
fistpll
inc
std
sbb
aad
lret
and
pusha
shlb
mov
fimuls
xor
jle
adc
push
sbb
jnp
add
nop
mov
sub
ja
popl
fs
mov
movsb
adc
out
inc
pop
pop
sbb
ljmp
nop
pushf
loopne
jp
sub
or
pushf
mov
data16
lret
cmc
dec
sub
xor
xlat
cmpl
sub
cmp
dec
rcrb
push
addb
push
data16
pusha
insl
scas
notl
or
push
xor
mov
mov
mov
movswl
or
push
sahf
or
cmp
loopne
ljmp
int
jo
mov
jmp
enter
out
xchg
mov
jb
cld
fisubl
popf
push
sbb
fnsave
xchg
adc
mov
xchg
scas
sub
je
inc
pop
inc
cmc
and
test
insl
dec
fisubl
clc
sub
lret
mov
insl
push
push
or
mov
aas
ss
pop
loopne
add
add
js
hlt
mov
std
jl
xor
jg
les
cld
add
add
push
loope
pop
insl
lret
call
cmpsl
call
jbe
dec
or
pop
xor
xchg
mov
lahf
xor
int
bnd
pop
pop
cmp
pusha
xor
lock
xchg
lods
leave
sahf
mov
push
inc
js
and
je
movsb
loop
pop
inc
pop
xchg
xchg
inc
aas
stos
ffreep
or
nop
cmp
jecxz
xor
repnz
add
jmp
icebp
jle
inc
mov
imul
int3
enter
ret
enter
popl
push
sbb
jno
sub
push
andb
ljmp
mov
add
das
ljmp
leave
sbb
and
gs
mov
loopne
aam
pop
adc
xchg
negl
cmp
or
aam
inc
cmp
mov
push
sub
xchg
imull
sub
jbe
push
fbstp
fucomi
sub
fbstp
loope
mov
or
js
ret
iret
mov
cld
jae
inc
adc
inc
int3
push
fldt
hlt
xor
inc
jp
ret
repnz
jno
orb
popf
stos
push
jbe
rolb
sbb
mov
dec
push
push
sub
and
mov
push
aaa
fiadds
popa
inc
pop
fcomi
pop
pop
sbb
adc
pushf
xchg
fisubs
sbb
paddq
ja
mov
add
xchg
cwtl
outsl
cmp
jae
lods
mov
test
stos
pushf
xor
pop
ret
pusha
jl
jecxz
movsb
push
cmp
push
add
aam
sbb
mov
cmp
loop
popf
aam
out
adc
sarl
int3
mov
add
jne
mov
cmpsl
jb
xor
jne
mov
sub
jbe
jno
call
out
cmp
mov
pop
mov
mov
daa
push
sub
hlt
mov
add
add
add
add
idiv
imul
mov
and
push
dec
fs
ljmp
int
and
and
add
lahf
xchg
aam
pop
pop
push
lcall
imul
or
add
jl
mov
insl
lret
add
mov
ror
int
and
inc
sbb
fwait
mov
rorl
iret
fs
pop
cmp
repnz
push
pop
movl
pop
int
insl
pop
repz
push
add
add
xor
and
arpl
lret
test
sbb
cwtl
and
je
jp
dec
in
inc
jl
and
lods
lods
push
cmp
and
mov
daa
lahf
and
cmp
sarb
mov
scas
clc
mov
aad
inc
or
cmp
hlt
sahf
mov
sub
cltd
in
and
xor
cli
cmp
enter
pushf
test
dec
mov
mov
stc
mov
jnp
loopne
in
je
pmaxub
cmpsl
dec
mov
je
inc
aad
jno
andb
bound
shrb
push
sarb
jne
cld
shl
ja
shrl
out
push
aaa
ja
fcomp
fbstp
or
insb
mov
rolb
xor
and
push
addb
cli
mov
pusha
repz
loop
mov
popa
jne
sbb
cmp
das
and
dec
mov
insl
dec
mov
and
mov
iret
rol
es
lds
fsubrs
push
or
idivb
push
inc
iret
mov
xchg
dec
add
add
data16
mov
pop
adc
popf
and
call
stos
out
aaa
sub
stos
mov
pop
xor
ds
mov
pop
dec
jo
and
mov
xchg
cmpsl
sbb
jg
pop
fstps
lock
add
add
add
ja
jmp
loop
mov
rcrb
xchg
stos
mov
lds
aaa
in
mov
sti
or
lods
and
or
mov
sti
loopne
lahf
lahf
loop
adc
in
les
fistps
incb
loop
sbb
dec
frstor
lods
lcall
mov
in
adc
cwtl
or
ficoms
push
fdivs
pop
imul
mov
dec
mov
lahf
mov
pop
fwait
out
out
movsb
pop
aaa
ja
adc
outsl
add
mov
sub
adc
shlb
loope
shll
or
push
pop
ret
ljmp
mov
sub
and
xchg
add
add
jecxz
push
movsb
pusha
subl
cmp
notl
adc
inc
adc
xor
pop
mov
enter
or
add
push
jmp
push
add
out
aaa
pop
xchg
test
push
std
scas
and
aaa
lret
push
scas
xor
adcb
data16
cmp
mov
fadd
testl
inc
js
xchg
sbb
or
das
xchg
lds
bound
mull
outsb
test
pop
push
adcl
cmp
pop
mov
call
ss
cmp
and
push
or
je
inc
pusha
mov
cmp
movsb
movsl
cmpsb
test
sub
push
insb
and
rorl
push
inc
lahf
sub
jne
push
cmp
repz
movsl
adc
mov
mov
adcb
in
ss
in
cwtl
rcll
xchg
imul
sbb
mov
sbb
add
std
sti
sub
inc
sti
test
fisubs
mov
add
add
popf
paddd
fidivl
hlt
cmp
mov
nop
add
cld
add
add
or
mov
stos
cmp
or
insb
stos
cmp
mov
vpcmpeqb
or
push
nop
or
fwait
jle
xor
cwtl
pop
cmpsl
loopne
cmp
push
and
sbb
aam
mov
sub
bound
or
lcall
pop
ret
test
je
xchg
push
or
jle
push
inc
push
mov
cmpsl
push
in
fidivl
cmp
out
fwait
test
adc
mov
in
ja
pop
inc
iret
int
mov
sbb
pop
clc
sub
lret
push
mov
lods
data16
jns
and
push
daa
or
xchg
nop
aaa
cwtl
xlat
jno
sti
je
cmpl
adc
cwtl
rcrl
pop
popf
pop
sti
push
mov
or
cmp
or
mov
jecxz
shrl
mov
clc
mov
jg
fsubr
insb
lds
aaa
pusha
jo
lds
dec
push
into
loop
imul
je
mov
lcall
xor
mov
imul
gs
ds
mov
add
or
jmp
mov
jp
dec
shlb
adc
sub
mov
mov
push
xlat
cmp
inc
stos
and
or
sbb
jg
xchg
adc
jp
test
xor
or
xlat
xor
lcall
in
cs
cmp
in
mov
daa
add
int3
repz
aas
out
bound
pop
xor
sub
popa
test
popf
test
shl
aam
movsl
aam
jecxz
inc
xor
in
lret
daa
sbb
push
jbe
pop
gs
inc
stos
push
xor
out
and
mov
jb
inc
xor
fnsave
ret
sarl
add
push
movsb
lea
sub
negb
jb
call
add
add
or
lods
adc
ret
mov
inc
mov
ret
push
imul
adc
lahf
ss
sub
jo
cltd
mov
xor
adc
jmp
dec
xchg
cmp
push
outsb
loope
jmp
fs
push
test
jnp
mov
or
imul
mov
test
fisttpll
daa
gs
adcb
xor
pop
inc
sarl
adc
push
sub
test
cmovnp
or
cmp
popf
nop
adc
fstps
scas
imul
inc
pop
mov
fcom
aad
cmp
or
add
xchg
xchg
inc
xor
and
pushf
lret
xchg
outsl
mov
or
sbb
sub
inc
les
dec
pushf
mov
jmp
popa
dec
push
sbb
leave
call
or
mov
movb
stos
cmpsl
mov
rcll
and
mov
cli
inc
lret
nop
loope
adc
pushf
stos
mov
sub
jnp
add
retw
out
dec
lods
notb
xchg
or
mov
adc
int
mov
mov
inc
and
mov
jae
pop
xchg
xchg
nop
ja
sti
inc
bound
push
jo
mov
xlat
ret
popf
loop
and
rcrl
pop
cld
mov
xchg
lret
jae
out
inc
push
push
push
mov
stos
and
pop
adc
lods
andb
orl
fcompp
cltd
cltd
aaa
pop
inc
sbb
fst
scas
jge
in
out
sub
mov
inc
fs
sar
dec
rcrl
cmpsl
lret
out
or
xchg
je
cmpsl
adc
aas
pop
push
fcomps
push
loop
in
lcall
add
add
add
mov
cmp
popl
mov
add
cld
add
add
xchg
xor
movsl
add
lea
and
jge
arpl
sbb
adc
mov
repnz
std
arpl
sar
lret
jo
faddl
adc
bswap
sbb
add
and
ret
subl
nop
andl
jp
push
add
int3
or
bound
adcb
jae
addr16
lods
iret
mov
mov
js
icebp
outsl
cmpsl
xchg
dec
mov
loop
out
inc
or
test
mov
pusha
mov
cmp
mov
js
mov
notb
aad
jp
mov
cmp
pop
adc
in
and
call
cli
ljmp
and
iret
fstpt
or
js
roll
cli
icebp
ds
mov
lea
jge
sub
shl
js
ljmp
std
jg
out
addb
in
inc
lcall
ljmp
cmp
add
sahf
ja
inc
addr16
adc
ljmp
aam
popf
in
adc
daa
shll
jle
adc
sbb
cmc
xchg
inc
add
arpl
xchg
inc
mov
cli
push
dec
clc
inc
loope
sub
movsb
pop
enter
jb
aas
and
mov
pushf
pop
xchg
xchg
inc
jle
rcll
leave
push
adc
mov
and
xor
or
and
mov
ds
shrl
aaa
jg
adc
imul
add
mov
pop
inc
mov
test
int3
loopne
mov
xor
push
scas
pop
xor
js
stos
imul
push
insb
jb
in
ret
rcrl
loop
test
xchg
std
jg
mov
idiv
loopne
add
cld
add
add
pop
test
hlt
cs
stc
loopne
and
mov
ds
adc
jae
sbb
mov
aaa
adc
or
cmpsb
mov
cmp
rolb
sub
dec
dec
jecxz
lods
jno
in
fs
inc
sarb
je
or
sbb
and
jp
into
imull
mov
aaa
adc
cmp
jnp
sub
repz
mov
out
xchg
fcmovbe
jbe
dec
jns
adc
repz
mov
iret
or
sub
insl
push
jnp
call
mov
repz
imul
and
das
dec
lods
xchg
test
mov
shl
mov
jmp
push
filds
xor
popf
jl
cmpsb
into
mov
test
pop
mov
xor
lods
out
roll
push
add
call
add
fdivrs
iret
stos
inc
pop
pop
cmp
lds
dec
sar
mov
test
cmp
push
ja
dec
and
jbe
xor
sarb
mov
stos
and
xchg
test
mov
mov
mov
cltd
negl
pop
out
aaa
mov
ret
loop
jle
pop
test
in
icebp
in
lods
xor
cmp
xor
jl
xchg
imul
inc
in
push
mov
mov
add
sub
iret
xchg
pop
and
pop
fisttps
data16
fcoms
sahf
sub
sahf
push
rorb
pop
push
lea
inc
movsb
cltd
lods
and
div
jnp
mov
adc
push
pop
mov
pop
divl
xchg
push
xchg
xor
xlat
push
loopne
push
sub
jno
cwtl
and
push
fldt
xor
push
pop
sti
test
mov
idiv
iret
rorl
aam
test
cld
add
add
push
push
dec
js
push
mov
mov
push
jb
ds
add
cli
sbb
push
aad
jp
aaa
push
out
push
mov
outsl
xchg
rol
clc
sub
xlat
sub
push
xor
fwait
pop
jmp
leave
sbb
and
xor
pop
rolb
push
xchg
imul
pop
dec
and
outsl
movsb
pop
adc
push
jge
sub
mov
call
mov
inc
cmpsb
or
mov
sub
sbb
cmp
mov
or
jbe
sbb
xor
mov
in
mov
fisttpl
dec
xchg
push
insb
push
inc
adc
fisubl
fwait
xchg
ret
outsl
adc
jno
mov
outsl
push
ja
and
mov
fcompl
in
push
ficoms
cli
and
arpl
div
sbbb
jge
cmc
mov
je
cmpsb
jg
cld
shrl
cmc
lock
pop
cmp
inc
cmp
out
cmpb
das
sub
imul
xor
jbe
repnz
pop
dec
inc
xchg
inc
cmp
sahf
xchg
rcrb
pop
inc
cmp
mov
jge
out
mov
pop
insl
xchg
cmc
or
mov
mov
dec
pop
inc
sub
add
das
cmp
mov
stc
inc
jge
in
jnp
std
fcoms
in
mov
aam
dec
inc
inc
pop
or
inc
xchg
cmpb
std
cmp
push
clc
add
pop
std
push
pop
xlat
pushf
negl
mov
in
jge
hlt
xchg
inc
sbb
shrl
in
mov
cltd
stc
sbb
sbb
sbb
add
cmpsb
mov
mov
call
jmp
pop
outsl
add
dec
push
test
mov
or
add
add
out
ret
mov
ja
or
xchg
add
lcall
adc
push
inc
dec
add
xchg
fidivrs
cmp
jp
cs
cltd
inc
pop
adc
push
jo
pop
sbbb
imul
outsl
daa
adc
or
lahf
pop
into
pusha
jnp
sbb
call
push
aaa
sub
lahf
push
test
sti
subb
adc
cmp
mov
jle
hlt
mov
mov
mov
repz
das
cmpl
or
adc
aad
jns
dec
dec
mov
jmp
mov
push
sbb
inc
xchg
pop
push
rol
mov
xorb
nop
out
mov
cmc
jp
test
outsb
add
inc
push
fmuls
add
jmp
shll
ljmp
push
mov
sahf
repz
cmp
dec
ds
mov
scas
pusha
cmp
mov
int
cld
sub
cmpl
in
jb
xchg
scas
stos
cwtl
mov
je
xchg
adc
rcll
in
mov
jp
shll
cmpsl
xor
stc
dec
rcll
imul
leave
pop
aaa
push
pop
sbb
ret
lcall
or
ss
adc
sarl
inc
jecxz
scas
test
cmpl
fistpl
xchg
ja
sub
lods
xlat
jle
leave
popf
or
xchg
mov
fcoms
mov
iret
je
jge
sub
lods
lahf
pop
xor
lock
cld
sub
pop
jge
cmp
or
xchg
mov
loop
shll
mov
fxam
adc
xchg
out
sbbl
sbb
mov
fcomip
and
add
das
lret
add
mov
movsb
addr16
jg
add
test
cmpsb
rcrl
pop
push
lret
mov
cmp
xchg
clc
mov
push
push
jle
xlat
lret
push
testl
pushf
add
cld
add
add
dec
shl
or
inc
pop
add
bound
sub
rolb
out
je
sti
data16
es
pop
add
xchg
mov
stos
adcb
imul
mov
dec
jle
je
fisubrl
add
arpl
push
xchg
aaa
push
lock
data16
pushf
adc
sub
add
je
ja
dec
cs
rcr
sub
es
xor
pop
mov
ss
mov
xor
cltd
mov
cmp
cwtl
adc
push
dec
sub
test
popf
mov
cmc
xchg
fiadds
clc
adc
adc
and
mov
pop
out
aad
cltd
es
mov
xor
jg
dec
and
xchg
andl
sub
mov
outsl
inc
xchg
cwtl
ds
mov
bound
popf
ljmp
adc
pop
sbb
mov
push
lret
sti
add
push
jmp
jecxz
daa
inc
daa
lea
mov
push
push
ds
sub
repz
stc
mov
jne
jae
pusha
mov
pop
lods
andl
push
dec
test
or
push
pop
inc
xor
js
out
or
pop
inc
loopne
ss
push
or
push
lea
jo
mov
adc
push
adc
pop
outsb
jmp
sub
lahf
jne
int
push
rcrl
xor
jmp
shrb
pop
adc
aad
mov
popa
neg
sub
lret
out
aas
les
rcll
cmp
sub
mov
xchg
in
jb
std
test
mov
and
adc
cld
subb
jecxz
sub
xlat
jp
jo
negb
lret
das
adc
add
push
or
pop
out
repz
fucomp
mov
mov
sahf
add
cld
add
add
sub
daa
lock
mov
popf
nop
inc
mov
loope
pop
push
cltd
loope
pushf
dec
ljmp
rorb
js
ret
dec
pop
fidivs
aad
dec
je
adc
scas
movsb
jecxz
pop
jb
addl
adc
in
xlat
jecxz
into
push
lods
shlb
adcw
push
sbb
xor
cmp
icebp
cs
and
adc
mov
cmpl
stos
faddl
xchg
cmp
popa
fldcw
sbb
nop
push
clc
pop
sbb
mov
cwtl
fists
sbb
arpl
jle
lods
cmpsb
dec
cltd
sbb
cmp
sub
push
loop
jb
inc
adc
pop
inc
xor
dec
insl
sti
xchg
rol
sub
call
mov
imul
out
inc
cmp
in
mov
mov
ret
shr
sub
add
adc
mov
lcall
mov
cmp
fimull
jp
pop
push
mov
adc
inc
bound
push
idivl
mov
sbb
jo
pop
sbb
imull
dec
push
ss
xchg
add
push
aam
jecxz
ret
sub
push
inc
clc
add
dec
cmp
mov
dec
in
clc
xchg
jae
dec
outsl
sti
jo
mov
fstpt
jo
icebp
mov
pop
mov
out
loopne
outsb
adc
stos
scas
insb
enter
mov
pop
xchg
xor
ret
outsb
cltd
lock
inc
cmpsl
mov
mov
movsb
mov
push
push
mov
repnz
aaa
add
jg
jmp
scas
jge
xor
push
and
rcll
sub
jl
inc
and
or
jbe
sti
xor
rclb
leave
xchg
insl
mov
out
nop
sbb
push
inc
clc
int3
mov
add
repnz
jae
jp
sbb
or
pop
out
or
out
fcomps
or
cmp
mov
fimuls
mov
add
mov
pop
insb
and
gs
adc
popf
mov
clc
out
pop
inc
and
subl
mov
dec
orl
mov
push
pop
pop
out
insl
faddp
cltd
xchg
push
mov
ds
lret
mov
pop
shl
pop
dec
mov
out
ret
lahf
fcmovnbe
adc
push
adc
movsl
push
jle
mov
mov
inc
inc
aaa
mov
imul
lock
mov
xor
scas
stos
out
mov
daa
dec
cmp
mov
std
xor
ffreep
xchg
out
sub
sub
jne
cli
mov
adc
jns
mov
jle
cmp
jno
add
xor
pop
mov
scas
out
into
xor
adc
xchg
add
push
lea
add
pop
addl
aad
pop
dec
mov
mov
xchg
push
movsl
push
jp
and
fcompl
std
or
je
jo
sbb
xor
and
adc
rorl
push
jno
lret
jg
push
lfs
sbb
mov
sti
mov
mov
in
pop
pop
jmp
mov
add
sub
lret
xchg
fst
fstpt
outsl
xchg
lds
aaa
arpl
mov
ret
mov
lahf
cmp
mov
lds
jle
shlb
mov
jmp
std
adc
jns
pop
mov
cmpsl
aad
fimull
mov
sbb
or
lcall
shlb
imul
enter
dec
out
ja
idiv
pop
out
cmp
pushf
test
cld
add
add
les
fdivs
jg
aas
cmpsl
xor
loopne
push
lea
incb
mov
cmpsb
popa
mov
mov
sbb
dec
adc
jne
lds
aad
in
lahf
inc
out
push
cmp
and
add
aad
mov
test
jo
mov
inc
add
mov
test
jg
lahf
imul
sbb
notb
jbe
inc
adc
inc
and
daa
pop
push
sub
incl
mov
cmp
sub
out
add
push
in
jecxz
hlt
fidivl
popa
adc
aam
out
push
int
fbstp
stos
push
jns
lahf
pop
fcmovu
lret
mov
mov
push
test
jae
insb
mov
outsl
sub
imul
nop
fnstenv
std
ljmp
mov
push
pop
pushf
outsb
mov
scas
les
aam
shrl
inc
pushf
or
xchg
stc
loop
fisttpll
mov
cmpsb
mov
and
jg
inc
jp
mov
daa
ret
pop
jo
loopne
nop
lret
mov
andps
jmp
push
aaa
adc
dec
es
lds
pop
cltd
sbb
aaa
roll
mov
xchg
ja
jae
jl
inc
call
lea
outsb
sbb
lods
jae
cli
movsb
popa
push
cld
lea
int
je
ljmp
insl
loop
lods
out
sub
or
adc
movsb
jnp
add
ljmp
xchg
sub
stc
adc
dec
or
movsl
sbb
pusha
pop
sbb
sbb
sbb
mov
and
in
call
inc
mov
jae
dec
xor
jae
jne
pop
sub
popf
ds
notb
ljmp
xor
testb
popa
out
orb
lret
mov
pop
jecxz
sti
mov
inc
icebp
mov
movsb
add
cld
add
add
arpl
jle
xor
in
or
dec
cmpsl
mov
lods
xchg
scas
cmc
mov
imul
ljmp
sub
adc
test
cld
xor
sahf
pop
je
push
fucomi
or
leave
iret
fwait
sbb
gs
sbb
cmp
push
jl
lock
or
xchg
push
daa
lock
dec
sub
mov
mov
push
mov
pop
mov
add
sahf
rcr
push
aad
insb
aaa
xor
inc
add
das
push
lods
xor
insl
orl
test
ret
xor
push
rcll
incb
push
pusha
popf
cmpsl
pushf
xchg
push
sbb
cmp
icebp
mov
cwtl
pop
int
push
xor
imulb
cmp
adc
loope
into
jp
int
jmp
pop
mov
shlb
and
mov
mov
pop
jle
mov
imul
mov
mov
inc
lock
add
sbb
div
xor
lret
mov
lret
xchg
jne
jmp
int
push
int3
adc
out
sub
lods
stos
js
dec
fimull
or
aad
ret
les
cmp
std
out
loop
mov
cwtl
inc
cmp
and
add
pop
pop
mov
mov
sbb
sub
aaa
je
hlt
fildll
sub
jne
int3
or
pop
mov
add
push
fcoml
xor
and
insl
jmp
daa
jle
inc
xchg
xchg
jl
add
lds
inc
je
mov
push
or
insb
push
fs
lods
mov
mov
jg
push
mov
and
cld
and
insb
xor
in
mov
fadds
add
add
sahf
xor
sub
mov
shlb
add
ret
hlt
test
mov
enter
cli
je
dec
push
sbb
lods
imul
mov
sbb
xchg
shl
je
mov
faddl
mov
xchg
stc
cmpsl
test
fcoms
or
xor
test
fwait
daa
push
dec
leave
bound
mov
test
push
xchg
mov
popf
leave
add
cmp
mov
jb
xchg
adc
inc
bound
or
or
or
mov
dec
sbb
cmpsl
push
rcrl
jo
das
xchg
mov
inc
fnstcw
jge
js
and
xchg
jg
jb
push
cwtl
mov
sahf
mov
sbb
pop
ret
push
sub
inc
pop
imul
push
mov
clc
out
jl
mov
mov
test
xchg
push
lods
sbb
daa
push
popa
jns
dec
sub
hlt
inc
test
adc
add
dec
icebp
add
pusha
push
jg
jp
mov
divl
dec
mov
es
adc
imul
mov
xor
xchg
hlt
mov
dec
jbe
adc
loop
or
jge
cli
sarb
test
mov
fidivrs
in
sbb
lods
xchg
into
clc
dec
push
xchg
imul
setns
daa
jcxz
xor
adc
rorl
inc
xchg
jo
aam
mov
mov
sbb
fidivrl
sub
pop
cmpsb
or
test
mov
test
xchg
lods
cmp
inc
mov
mov
pop
iret
into
inc
fsubl
push
insb
cli
loop
jno
pop
gs
jne
aad
inc
pop
in
push
test
xor
stc
std
in
mov
mov
std
cmp
pop
idivb
add
jp
adc
pushf
pushf
test
mov
mov
pop
aaa
pop
mov
jmp
jmp
addr16
jb
jmp
mov
cmp
faddl
mov
les
cmp
add
sbb
nop
jbe
aad
pop
pop
test
cs
js
lds
lds
sub
hlt
mov
jg
add
xor
push
push
push
push
mov
into
dec
or
les
ret
bound
cmp
rcl
adc
lea
out
mov
fwait
jecxz
xchg
inc
jge
lds
xor
rcl
lahf
out
jmp
xor
loopne
in
pop
and
adc
mov
enter
add
dec
mov
es
sti
lahf
rcrb
mov
sub
cmp
add
mov
mov
int
push
jno
xlat
dec
movsl
pusha
in
js
mov
xchg
and
push
ja
lahf
fildll
push
aad
adc
call
test
repnz
adc
mov
in
sti
pop
dec
lods
inc
dec
pop
jb
lods
or
popa
pop
lock
push
shrb
mov
xchg
test
bound
inc
out
cld
roll
dec
dec
mov
jo
jge
cmp
mov
je
mov
addr16
ss
dec
out
and
dec
gs
cmp
addl
fcomp
rcrb
and
and
icebp
or
cmc
xor
mov
mov
shrb
icebp
ljmp
cmp
sbb
in
pop
push
push
test
movsb
mov
pop
and
mov
pop
int
lret
in
jbe
push
mov
push
push
ficoml
mov
subl
loopne
mov
and
add
rolb
testb
inc
xor
or
mov
add
add
pop
sbbl
mov
movsl
push
push
daa
push
dec
add
dec
jmp
jo
xor
push
rolb
mov
pop
jmp
cmc
jb
out
push
push
push
push
pop
adc
dec
dec
jbe
addb
xor
mov
scas
jle
inc
fnstsw
sub
pushf
test
mov
divb
mov
push
dec
loop
push
mov
xchg
jb
sbb
mov
and
mov
les
les
fmuls
push
mov
mov
mov
push
fcomi
xor
dec
sub
scas
xor
mov
mov
imul
daa
xchg
mov
cmpsl
mov
cwtl
scas
js
enter
sbb
jne
fs
stc
sbb
orl
enter
das
mov
pop
mov
fcoml
xchg
out
xor
test
cwtl
test
fnstcw
pop
insl
in
mul
mov
inc
jp
mov
add
hlt
lahf
addl
fucomip
add
pandn
leave
push
lret
mov
mov
or
pop
push
pop
mov
movswl
inc
lcall
dec
lods
mov
push
in
fcoms
cwtl
push
sbb
fcoml
sbb
jecxz
loopne
xchg
push
cmp
std
xchg
nop
pop
rolb
dec
into
nop
jo
scas
xor
aaa
mov
fwait
imul
adc
je
pop
inc
adc
iret
inc
mov
faddp
pushf
or
push
lock
lds
popf
call
adc
lds
xchg
jp
nop
xor
popa
mov
mov
xchg
xchg
addl
sub
cmp
imul
in
jle
lea
sub
add
add
popa
data16
gs
mov
push
lods
add
cld
add
add
iret
jp,pn
andl
scas
add
sahf
mov
jge
iret
and
xchg
push
xchg
lock
test
xchg
cmpsl
jo,pt
mov
lods
sarl
testl
or
fbstp
cli
and
iret
pop
push
popa
lods
push
inc
sbb
jle
or
mov
sahf
jo
xchg
cmp
mov
mov
incb
mov
inc
in
jmp
adc
sub
ss
test
pop
and
jmp
insl
jmp
ficomps
sub
xor
fs
cmp
int3
and
lea
and
out
inc
push
into
push
add
inc
into
or
pushf
pop
inc
repz
or
or
mov
sub
in
push
insl
push
push
xchg
fdivrs
mov
cmpsb
sahf
sub
aam
cmpsb
in
jg
jge
inc
cmpsl
jns
cmp
lret
push
call
ds
shl
mov
out
cli
lods
mov
jbe
mov
add
sahf
mov
add
fistpll
xchg
sbb
inc
or
iret
push
and
mov
scas
add
int
shrb
cwtl
mov
jns
jecxz
pusha
sbb
push
icebp
lods
testb
push
fsubrs
jae
mov
rol
jecxz
pop
es
xor
fs
mov
fidivrs
adc
inc
mov
ljmp
jns
inc
inc
les
pop
jae
data16
popf
enter
mov
xchg
repnz
bound
and
popa
cmp
cli
mov
pop
ret
or
lds
xor
pushf
test
xor
call
leave
jp
sub
jae
lahf
jmp
add
xchg
arpl
daa
or
add
add
cmp
cli
cmp
adc
push
scas
add
cld
add
add
dec
jo
pop
stc
inc
insb
xchg
js
dec
adc
lahf
mov
push
ficompl
or
mov
das
neg
xchg
jmp
or
cmp
cwtl
inc
loopne
popf
lock
cmp
jge
xchg
leave
out
cmp
icebp
call
fadds
cmpb
jne
aaa
mov
nop
stos
jmp
out
add
scas
sub
jecxz
mov
and
xor
test
int3
js
cmp
fcom
inc
test
xorl
fistl
out
ret
mov
mov
dec
sbb
cmp
xchg
dec
das
or
inc
fnstcw
out
mov
inc
mov
neg
sbb
and
sub
mov
pop
jbe
in
dec
sti
push
mov
ja
cmp
jbe
into
subl
dec
inc
ret
mov
les
push
xor
shrb
pop
jo
outsb
aaa
mov
pop
daa
pop
mov
fbld
xor
xchg
ret
lahf
movsl
js
xchg
es
jbe
dec
fxtract
push
add
test
sub
sbb
inc
push
loopne
movsl
pushf
std
test
inc
dec
ret
jne
push
jmp
lahf
aaa
mov
xlat
or
data16
cmpsb
mov
fwait
cltd
inc
sbb
pop
adc
fcomip
in
jl
add
fcoms
jns
mov
pop
sub
sbb
cld
mov
std
push
mov
cmpsl
js
outsl
adc
addl
inc
dec
vmread
adc
jns
mov
xor
mov
sbb
jns
adc
std
aam
repnz
adc
loop
adc
fcomip
add
or
data16
add
add
and
push
push
cmp
inc
cwtl
inc
mov
add
add
mov
adc
xchg
xchg
pop
dec
negl
in
mov
ror
in
mov
mov
xchg
and
jp
push
repz
push
cltd
pusha
push
shl
push
xchg
mov
in
ret
sbb
cwtl
outsl
pop
dec
ret
fld
lods
jnp
jecxz
nop
test
jp
std
push
seto
pop
jb
jbe
mov
jno
cmc
testb
sub
sub
cs
jge
push
and
sbb
mov
lods
add
fldl
and
popf
es
sti
push
test
adc
push
in
loopne
test
or
xchg
pop
sub
out
sti
mov
repz
scas
sbb
sbb
movsl
or
icebp
jnp
rorb
popa
push
aad
in
xchg
popa
xlat
stos
popa
lcall
or
fldl
jns
lock
in
and
hlt
jp
xor
mov
and
inc
xchg
push
lcall
push
shrl
testb
into
xor
jmp
repz
fsts
and
mov
jmp
je
xchg
test
scas
push
jnp
andb
adc
or
jmp
int3
mov
fisubrl
inc
pop
nop
fcompl
and
loop
rcrb
pop
inc
adc
pop
adc
push
add
add
dec
call
pop
lock
or
mov
push
cmc
in
or
in
nop
or
dec
or
out
xchg
addr16
scas
lds
dec
xor
lock
and
jecxz
repnz
lock
pop
inc
and
push
add
mov
pop
repnz
jne
lret
les
and
ret
jl
test
push
lret
enter
fnstsw
mov
in
outsb
fs
mov
mov
add
add
add
cmp
popa
fs
add
push
mov
lahf
jae
xchg
push
imul
mov
sbb
lods
lret
mov
mov
mov
sti
mov
mov
iret
jg
mov
xor
xor
sbb
push
mov
std
mov
xor
shlb
call
xchg
xchg
adc
repnz
mov
pop
stc
fs
push
fcmovnu
xor
test
nop
inc
mov
pushf
push
pop
sub
jne
jae
xor
out
mov
out
movsb
dec
xor
push
pop
divl
mov
fidivs
outsb
int3
bound
pop
and
stos
adc
daa
xlat
or
clc
stos
inc
out
inc
ljmp
mov
ret
and
ret
mov
sub
lret
jo
cs
mov
jnp
enter
jecxz
mov
stos
popf
or
and
mov
test
mov
adc
jle
in
in
ljmp
sbb
ss
mov
dec
pop
in
cmc
dec
fstpl
mov
xchg
jno
dec
or
mov
jl
cmpsb
mov
popa
push
jbe
xchg
inc
xchg
sahf
sarb
cmp
lock
or
repz
loopne
aas
xor
add
gs
inc
repnz
jno
in
icebp
call
xchg
push
xchg
jge
and
pop
add
push
cmp
outsl
iret
mov
stos
outsl
mov
jnp
sub
add
loop
sbb
xchg
sbb
fists
outsl
cltd
push
daa
test
add
stos
das
outsl
push
push
jne,pt
fldcw
pop
sub
jg
in
pop
insb
inc
pop
loopne
adc
rolb
lcall
mov
fcomp
mov
bound
outsl
leave
jbe
cmp
jb
lcall
add
add
inc
mov
jb
add
dec
movsb
mov
add
add
add
jle
pop
jnp
mov
cli
xor
sub
sar
cmpsl
dec
fidivl
push
faddl
testl
and
ret
loop
pop
mov
popl
add
int3
pusha
outsl
int3
xchg
or
dec
cwtl
push
rolb
adcl
cld
and
and
test
sub
test
inc
sbb
sbbb
push
xchg
mov
cmc
and
out
inc
mov
icebp
test
push
cs
push
mov
xchg
dec
insl
sub
push
fstpt
pushf
cmp
mov
testl
mov
roll
imul
cmp
inc
test
mov
in
rcll
push
stc
jo
int
ret
xchg
mov
jne
and
add
popf
movsl
sti
in
sub
mov
or
data16
out
push
sbb
out
ficoms
cli
bound
pop
xor
data16
xor
and
into
pop
pop
add
pusha
addl
xchg
push
iret
clc
mov
add
push
lret
cmp
inc
scas
int
pop
cmpsb
stos
fdivr
gs
pushl
ljmp
imul
fldl
mov
fstpt
out
fistps
in
js
pop
push
adc
mov
mov
sbb
fbld
add
loopne
inc
xor
mov
pop
sbb
add
cmp
mov
pusha
inc
shrl
lods
jno
sub
sbb
iret
sub
xchg
fcmovb
jno
insl
scas
or
jp
shl
iret
mov
outsb
cmp
mov
ret
and
pop
aas
sub
or
pop
aad
and
test
pop
xchg
notb
aas
aad
inc
sub
cmp
dec
xlat
xor
lcall
movsb
or
fwait
cmp
add
sbb
push
add
mov
cmp
mov
les
mov
add
add
imul
or
pop
lods
mov
sbb
icebp
pop
and
push
repz
sbb
mov
stc
xor
inc
inc
jge
aas
out
cltd
mov
dec
ret
push
mov
test
hlt
dec
ss
cmc
cltd
loop
add
jmp
pop
inc
pop
aam
push
add
out
xchg
lock
ret
mov
adc
fdivr
shl
and
push
or
sbb
push
push
sarl
shlb
stos
add
mov
fisttps
sub
push
sbb
gs
push
push
mov
lds
mov
sub
iret
ja
lret
ss
mov
je
add
cmp
fsubs
add
pusha
loop
or
mov
pop
je
loop
mov
icebp
ja
add
movb
sub
dec
push
jno
jecxz
dec
in
pop
stos
stos
cmp
nop
add
shlb
xchg
popf
add
mov
inc
push
lret
jnp
jge
sbbl
inc
fsubl
jno
mov
xor
fsubrs
pop
xchg
jle
ljmp
mov
ss
xchg
jg
dec
pop
movsb
xor
adc
dec
mov
stos
outsl
xchg
push
bound
stos
repnz
pusha
por
inc
sub
and
scas
jle
push
push
fs
mov
stc
and
mov
xchg
cli
sbb
sub
sub
aam
insb
cs
pop
mov
xor
scas
pusha
inc
cmpsb
push
ss
jle
imull
add
test
daa
outsb
aaa
dec
ret
loopne
adc
push
jecxz
or
decb
or
outsl
dec
lods
rclb
in
and
push
ss
test
ficomps
pop
nop
inc
dec
xchg
inc
xchg
jle
pop
or
lods
jnp
mov
cmp
out
idivl
test
sbb
add
cld
add
add
mov
mov
inc
and
mov
cmp
ds
mov
xchg
outsb
outsl
scas
jl
out
xor
andb
imul
sbb
out
rep
pop
pop
mov
sahf
clc
aaa
andl
cli
lods
adc
cmp
mov
adc
push
jmp
or
mov
movsl
dec
adc
rcr
mov
out
into
xor
dec
std
test
lock
xor
mov
cmc
add
dec
in
jo
or
test
adc
fld
and
shrb
pop
loope
imul
jmp
std
lods
add
pop
aad
pop
push
xchg
out
and
in
mov
dec
or
shl
and
mov
and
ret
movsl
fs
push
xor
xchg
je
int
push
movsb
or
sbb
jge
xor
or
xchg
mov
and
sbb
gs
mov
jb
xchg
xor
mov
xchg
add
imul
push
insl
jno
scas
or
push
add
fidivs
in
test
add
stos
and
xchg
xchg
call
notl
xchg
adc
in
push
into
leave
jne
iret
insb
mov
int
fcom
dec
mov
pop
sub
daa
fidivrl
sub
test
xor
pop
xor
sbb
pop
dec
xchg
shlb
xor
dec
mov
ret
xchg
or
out
stc
jp
sbb
and
push
lods
popf
notb
int3
out
repz
and
mov
dec
add
shll
lahf
imul
push
clc
fcoms
jl
aad
fsubl
dec
outsl
xchg
mov
cmpsb
cmp
pop
ficomps
mov
fs
ja
gs
fcompp
out
fs
popf
outsb
cmc
jbe
push
cwtl
mov
add
xchg
push
mov
notl
push
jae
xor
mov
syscall
lcall
test
aam
iret
push
fwait
xchg
test
dec
das
lds
or
inc
cmpsl
adc
ja
push
int
jmp
and
nop
movsb
jg
jp
inc
repz
repz
sbb
xor
popa
repz
inc
jno
test
mov
outsl
jmp
mov
mov
mov
xor
out
xchg
leave
and
mov
stc
pusha
cld
stos
scas
pop
push
jo
leave
mov
data16
xlat
loope
adc
clc
bound
inc
ret
push
iret
cltd
sahf
adc
cmpsb
mov
ds
sub
lock
std
fists
repnz
fisttpl
jl
stos
movnti
adcb
pop
pop
lea
subl
popf
push
xchg
mov
mov
pop
das
inc
push
jle
mov
jle
lcall
loope
aad
movsl
jecxz
outsb
xchg
sub
ds
cmp
xchg
xchg
out
outsl
xor
mov
jmp
pop
xchg
dec
mov
aas
repz
mov
in
ret
rcll
movsl
or
jg
sub
insl
test
inc
aaa
cmp
mov
push
rorb
cmp
mov
sbb
cmpb
leave
sbb
push
nop
stos
and
pop
movsb
cmp
dec
jmp
arpl
pop
xchg
jl
lods
fmuls
cmp
testl
leave
mov
and
sbb
or
lea
repnz
xor
xor
add
dec
icebp
mov
xchg
movl
hlt
push
inc
repnz
sub
ljmp
lds
add
add
fsubs
jmp
adc
jl
dec
dec
std
aam
lcall
add
in
in
push
push
insl
jnp
add
adc
rolb
rolb
push
add
ret
inc
and
mov
fsubs
lods
notl
popa
sbb
clc
cld
lahf
sbb
int
ja
mov
mov
rorb
add
jns
inc
cld
test
and
aas
paddq
pop
push
in
call
and
sbb
jbe
shlb
xor
jge
adc
test
outsb
hlt
adcb
jb
lock
dec
or
or
jmp
orb
cld
flds
mov
push
jp
dec
lahf
in
xorb
push
out
enter
jns
and
push
push
jo
rcll
mov
pushf
aaa
cld
aad
xchg
or
movsb
xchg
mov
mov
and
ja
xor
aam
add
add
movsl
lea
jno
ficoms
cmpb
popa
movsb
fisttpl
lds
pop
loopne
aam
cmp
mov
fwait
xchg
mov
mov
stos
add
idivl
and
xorb
pop
shlb
and
jno
ljmp
loopne
aam
stos
mov
clc
aam
and
pop
or
and
mov
ss
pop
lds
mov
test
test
or
outsb
and
mov
sbb
pop
and
jg
and
cmp
push
sbb
mov
push
imul
sbb
jg
loope
sbb
inc
stc
clc
in
cmp
stc
sahf
imul
pusha
mov
call
imul
lcall
push
and
adc
ljmp
push
pop
cmp
enter
out
adc
push
daa
sub
popa
adc
or
testb
inc
mov
adc
xlat
inc
push
and
xor
sub
inc
nop
mov
add
sti
push
mov
testl
ret
mov
push
jns
mov
in
cmp
pushf
mov
pop
test
iret
and
lods
inc
sti
jno
cmpsb
dec
shrl
mov
sub
mov
inc
jae
dec
push
mov
sub
cltd
jg
push
repz
pushf
mov
or
xor
sbb
inc
stos
sahf
adc
js
add
pushf
imul
xor
addl
xchg
dec
in
jg
lods
into
out
shr
std
les
js
repnz
xor
lods
mov
pop
mov
out
pop
adc
arpl
xchg
mov
jle
out
test
out
test
mov
shrl
stc
cmp
or
push
or
xchg
xchg
call
push
cmp
or
add
and
enter
sahf
hlt
mov
je
xlat
pop
push
gs
push
adc
fiaddl
mov
mov
popf
das
lahf
and
cld
xor
adc
add
loope
test
sbb
mov
lds
xor
push
push
pop
pop
dec
loop
pop
pop
push
jle
jne
and
lret
lret
pop
insb
lret
add
insb
cmc
popf
jne
out
out
aad
test
cs
rclb
pusha
jnp
dec
test
lock
jge
iret
xchg
fxch
jmp
out
rorb
push
pushf
dec
cmp
push
lret
add
jecxz
hlt
imul
test
xlat
shll
andl
push
sbb
in
jb
push
addb
inc
imul
fwait
lret
sub
mov
out
xchg
push
enter
aad
cmp
into
orl
sahf
ret
and
cmp
mov
loope
jnp
testl
add
add
add
add
push
jecxz
jg
data16
sbb
repnz
sub
add
fldcw
insb
mov
lahf
dec
mov
into
jmp
cmpl
shll
fwait
adc
frstor
js
inc
mov
dec
sbb
mov
adc
cltd
ja
inc
mov
jge
in
cltd
stc
or
mov
in
ljmp
clc
in
lds
aas
mul
les
cmpsl
xchg
adc
jle
pop
lods
mov
rcl
mull
aad
leave
pop
lds
in
shl
and
push
out
gs
jg
loop
ret
out
rol
mov
int3
jbe
mov
ljmp
lahf
and
in
fwait
and
test
jno
or
mov
fdivl
pushl
roll
push
xor
or
and
jno
iret
inc
push
rclb
rclb
je
xor
pop
inc
insb
mov
leave
les
lret
jne
dec
fidivrs
sub
push
sti
adc
lcall
inc
mov
daa
in
add
add
sbb
imul
fsubl
dec
hlt
lock
test
fisttps
dec
call
rol
xor
xchg
pop
inc
cs
cmpsb
ficompl
aad
shll
inc
movsl
outsb
aam
movsb
lds
bound
hlt
dec
cmp
out
sub
pusha
cwtl
ss
jle
cmpsl
rorl
mov
ljmp
mov
xchg
and
dec
mov
push
enter
clc
xor
dec
jmp
inc
outsl
mov
in
inc
icebp
js
sahf
out
xlat
in
inc
pop
cmpsl
xchg
dec
mov
or
lcall
pop
mov
cld
int
dec
pop
cmp
add
js
xchg
mov
cmc
aaa
dec
mov
dec
loopne
insl
jecxz
xchg
arpl
dec
push
dec
mov
nop
shll
imul
add
inc
push
pusha
jbe
out
test
stos
test
mov
mov
add
cld
add
add
mov
cli
movsb
inc
xor
lods
loopne
insb
ja
adcb
xchg
pop
adc
cmp
xchg
inc
mov
cmpsb
push
jno
push
xchg
cmc
push
je
sbb
leave
xchg
pop
les
insl
push
movsl
rcr
scas
rorb
push
lret
ret
lahf
iret
push
cmp
bound
scas
or
cmp
cmp
stos
cmp
pop
lock
fcmovb
mov
mov
mov
cmc
or
mov
mov
aas
jbe
xchg
lret
mov
jmp
addr16
push
jmp
push
lea
jo
cmp
outsb
outsl
pop
cmp
push
push
jp
pminsw
pusha
fsub
in
or
clc
mov
iret
popf
repz
out
fcom
out
adc
popf
int3
push
jp
xchg
fdivrl
test
jno
dec
jp
xor
popa
xchg
lret
and
decb
mov
cld
pop
push
push
mov
popa
push
repz
mov
xor
cmp
mov
push
sahf
cmp
fstp
ret
popf
and
shll
call
dec
fbld
call
cmp
out
inc
and
and
pop
sbb
shlb
aas
or
in
inc
cmp
int3
jne
lods
inc
cmp
cmp
cmp
rcl
insl
mov
test
push
out
aad
sahf
mov
rorb
sub
fdivl
xchg
dec
push
mov
jb
push
mov
pop
cmp
stc
push
frstor
push
mov
std
pusha
mov
fcoms
adc
imul
dec
pop
pop
xchg
xchg
pop
fld
in
cld
and
in
rolb
sub
inc
stos
mov
adc
testb
mov
lds
add
add
pop
lcall
addr16
mov
test
add
cld
add
add
sbb
sub
pop
andb
cmp
push
jecxz
sub
mov
popa
lea
push
jbe
push
inc
or
pop
ds
adc
inc
push
cmp
adc
add
ficomps
mov
xchg
inc
fldt
push
xchg
jnp
xor
cwtl
loope
pop
push
or
aaa
xor
ljmp
inc
pop
lock
jno
sub
cs
clc
fisubrl
pop
loope
mov
adc
scas
lret
movsl
movsl
or
into
fcom
or
int
push
fld
pop
cmp
xor
test
push
xor
and
sbb
ljmp
jmp
mov
std
mov
aaa
pop
outsb
loop
fistps
fdivp
dec
mov
mov
or
cmpsb
inc
stos
cmp
jno
jg
and
iret
xor
push
xchg
cli
cltd
pop
mov
mov
add
cmp
sub
hlt
loopne
sub
pop
rolb
add
mov
xchg
mov
dec
dec
mov
jp
lret
or
cwtl
cmp
je
mov
out
jnp
push
and
outsb
mov
sbb
int
adc
js
jno
push
shll
jbe
cmpsb
stc
sub
movsl
lret
push
shr
and
fs
pop
sub
add
sub
in
xchg
js
mov
stc
shl
and
decl
cs
arpl
ret
push
flds
jnp
jne
daa
mov
es
mov
and
or
add
pop
mov
mov
sub
sbbl
jle
roll
add
add
outsl
daa
insl
push
addb
inc
mov
stos
add
add
add
add
repz
cmp
lods
test
and
jg
hlt
pop
lcall
push
pop
xchg
pop
cmpsb
gs
dec
std
sbb
push
mov
dec
iret
xchg
outsl
jle
mov
cmp
mov
rcl
lret
mov
mov
clc
call
mov
sbb
dec
pop
jo
rclb
dec
dec
jo
mov
jae
pop
mov
fcoml
mov
adc
aam
cmc
push
dec
test
inc
jg
cmp
mov
adc
dec
test
pop
scas
add
dec
push
test
js
mov
and
clc
test
daa
pop
ss
orb
and
arpl
pop
out
jo
aam
jmp
dec
lahf
mov
aaa
ffreep
fwait
movsl
rolb
dec
sub
fidivs
adc
sti
sub
mov
and
mov
dec
lret
or
shll
xchg
cltd
push
and
fdivs
pop
je
mov
xor
adc
jns
cmp
add
scas
sbb
jl
dec
leave
jecxz
or
cmpsb
fs
ljmp
cmp
lods
dec
sub
mov
insl
jle
clc
jmp
pop
jmpw
insb
or
push
lock
int
mov
loopne
out
dec
sbb
cld
mov
in
es
push
mov
orl
cmp
mov
inc
inc
shrl
call
push
int
adc
mov
jmp
and
and
out
and
leave
popl
inc
outsb
adc
mov
and
lret
xchg
cmp
xchg
xchg
cmp
push
cli
xor
pop
jbe
cmp
jae
mov
mov
xor
aam
dec
inc
scas
movsl
icebp
add
pop
and
mov
out
leave
enter
js
dec
jl
add
cld
add
add
bswap
aad
pop
lea
ljmp
and
mov
pop
cmp
mov
jo
mov
fsubrl
add
imul
outsb
xor
stos
inc
sub
pop
push
rolb
outsb
pop
mov
stc
pop
shlb
mov
jo
scas
cld
sbbb
lret
cwtl
ret
sbb
repnz
sarl
loope
hlt
data16
scas
out
adc
jno
sbb
mov
cmp
mov
aas
jbe
mov
outsb
dec
sub
inc
ficoms
lret
mov
aad
imul
aaa
mov
inc
and
sti
and
ss
mov
mov
loope
cmp
out
jae
adc
inc
add
lea
cwtl
adc
loope
stos
sti
inc
inc
outsb
mov
sub
sbb
sbb
xor
xchg
xor
mov
push
test
cwtl
or
ja
adc
stos
or
ljmp
mov
mov
out
mov
into
inc
divb
xor
lret
inc
inc
loop
loop
ljmp
jge
push
cmp
xchg
xor
jne
int
jp
adc
fsubs
int
adc
jo
add
ds
cmpsl
inc
jecxz
ret
js
addr16
or
push
lahf
std
iret
xor
cmpsb
mov
sti
lcall
addr16
in
imul
and
fmull
gs
push
testl
scas
push
push
push
and
mov
add
mov
mov
aas
test
dec
pushf
inc
repnz
test
out
push
mov
inc
pop
xchg
lock
dec
add
lock
and
mov
jbe
lock
inc
sbb
push
jae
aaa
sbb
cmp
lds
das
cmp
rol
mov
add
repz
add
add
add
add
cmp
mov
push
mov
add
cld
add
add
add
xchg
sub
xor
push
out
test
in
in
or
mov
ja
push
sbb
dec
mov
ficomps
movsb
aam
sub
mov
cmp
test
pop
shl
sbb
mov
jno
les
mov
xlat
jne
ror
jnp
xchg
jle
std
xor
enter
stos
inc
out
mov
pop
shll
xchg
xchg
dec
push
mov
jb
lods
es
mov
pop
mov
and
push
in
cmc
jge
sbb
xchg
jge
mov
loop
aam
insl
out
popa
fistpl
inc
jp
pop
mov
imul
jle
inc
jmp
in
jp
mov
push
out
faddl
adc
pushf
test
loope
xor
insb
loope
cli
push
loope
mov
mov
out
notl
lret
scas
out
sbb
dec
add
shll
pop
or
hlt
dec
mov
int
out
popa
mov
loop
in
adc
jp
ds
lahf
cmpsb
es
pop
pop
jl
push
push
insl
shlb
push
movsl
push
lret
jecxz
xor
je
imul
lods
xchg
in
and
int3
jg
psrlq
dec
jg
movsl
test
xor
sub
mov
inc
push
outsl
arpl
sti
popf
mov
test
sbb
lea
jo
or
notl
cs
xor
test
addl
xorl
pop
stc
sbb
add
je
push
outsb
fsubl
icebp
cmpsb
lahf
rorl
cmp
xor
loopne
add
mov
lods
inc
mov
sar
dec
sub
test
insb
mov
adc
xchg
mov
cwtl
fwait
les
add
add
sbb
jge
aam
dec
push
jo
insl
je
add
cld
add
add
popa
jl
lea
pop
jl
sub
cltd
daa
add
out
sahf
fldenv
clc
xchg
aam
push
ret
fwait
mov
shll
xchg
std
pusha
aaa
mov
andl
pop
sahf
inc
dec
sahf
sub
xchg
fimull
and
les
xchg
out
adc
ret
mov
lret
sar
mov
popa
or
xor
popa
dec
fsubrp
jecxz
mov
test
scas
iret
jmp
jmp
adc
mov
popa
push
fildl
cmp
jbe
or
or
inc
in
arpl
loop
in
jno
adc
lahf
mov
fdivl
push
xchg
adc
xor
pushf
js
sbb
mov
dec
cmp
inc
mov
sbb
dec
xchg
lret
fs
push
insb
mov
and
lock
lock
repnz
loopne
cltd
inc
je
cmp
and
arpl
sbb
push
imul
jge
mov
inc
dec
test
mov
stos
stos
enter
cmp
jmp
xchg
lret
loopne
pop
and
cmpsl
and
out
dec
loop
faddl
and
sbb
testb
dec
clc
cmp
cld
mov
push
orl
sbb
xchg
mov
jne
lcall
jge
mov
in
daa
bound
or
loope
xor
outsl
mov
jp
in
dec
mov
pusha
aad
arpl
mov
sub
inc
pop
sub
negb
fistpll
or
dec
iret
jbe
jb
icebp
mov
nop
sbb
or
je
mov
xchg
push
mov
ss
ja
int3
or
jp
sbb
mov
push
add
pop
sub
in
or
push
add
mov
mov
nop
mov
into
add
cld
add
add
and
jns
mov
add
je
lods
pop
test
sub
mov
pop
inc
sahf
sub
bound
mov
popa
mov
sti
in
sub
and
xchg
in
outsb
repnz
lahf
lods
test
add
mov
mov
insl
xor
mov
push
mov
cld
rolb
pushf
pop
push
iret
xchg
das
and
mov
or
push
pop
jno
jmp
pop
in
cmp
pop
or
inc
pop
push
or
lcall
shr
or
sbb
xor
pop
lea
enter
ljmp
sbb
ret
mov
xchg
cmp
mov
pusha
cmpsl
xchg
jmp
jle
mov
imul
call
and
mov
ret
add
jno
cld
lahf
xchg
insb
fisubrl
inc
pop
sbb
mov
outsl
js
pop
lock
push
jg
stos
add
xchg
imul
jmp
adc
ret
add
jns
jge
pop
lcall
lret
iret
cmp
ja
std
mov
push
inc
dec
shll
sbb
sub
or
lahf
adc
nop
addl
pop
xorl
mov
lahf
cmp
ffreep
ds
bound
xlat
shlb
mov
fstl
and
xor
dec
adc
sbb
add
mov
dec
ja
cmp
add
cmp
sbb
out
cmp
and
std
sbb
or
push
in
outsl
stc
out
inc
gs
std
sbb
jge
addb
jns
push
icebp
lret
cmpsl
loopne
mov
xchg
xlat
or
dec
ja
xchg
cwtl
jp
scas
jns
loop
mov
jbe
pop
lret
pushf
pop
shl
dec
push
jb
out
sub
scas
fwait
pop
or
dec
inc
mov
in
dec
cmp
pop
pop
je
insb
rolb
add
add
add
sub
inc
in
clc
dec
lcall
lds
cmp
pop
loope
les
testb
and
xchg
push
and
xor
fcomps
leave
lcall
dec
fidivrs
lds
loop
nop
and
ja
add
push
mov
or
mov
pop
dec
jne
test
jmp
mov
push
cmp
jnp
jo
cmp
jae
xor
movsl
lods
lods
negl
mov
rcrb
imul
scas
mov
movb
lods
aaa
inc
sbb
mov
mov
pusha
fstps
les
andb
cmp
lcall
sbb
pop
cmp
inc
or
and
jns
jl
jne
jmp
or
mov
out
test
xor
lock
cltd
inc
shl
out
sub
jge
mov
insl
pop
adc
and
rcrb
icebp
aaa
ds
jbe
xor
cmp
cmpb
and
adc
movsl
mov
xor
push
mov
test
pop
fimuls
es
sti
in
fisubrl
inc
outsl
cmpsl
jge
lret
stos
sbb
lods
sbb
xchg
imul
stos
jmp
flds
outsl
push
fsubr
dec
cmp
pop
jp
dec
mov
orb
cmp
xchg
sbb
aaa
std
addb
sbb
jo
ja
and
add
mov
lret
aam
mov
bound
push
movsb
or
mov
pop
int3
xchg
int
mov
pushl
fs
es
push
nop
jbe
inc
mov
js
inc
xor
mov
fmul
fwait
loopne
std
das
repnz
cltd
jns
and
rcrb
inc
imul
lods
add
add
stos
jo
dec
cli
fldcw
decb
rolb
add
add
add
loopne
pop
push
add
or
dec
es
or
pop
inc
daa
ljmp
sbb
std
pushf
bound
pop
jbe
jb
fisubl
xchg
imul
test
es
or
or
add
shl
mov
cmp
xor
loopne
mov
xchg
mov
inc
sarb
push
sbb
pop
adc
xchg
aaa
mov
andl
and
int
in
icebp
cmp
out
jg
jge
xor
lret
popf
rep
sub
push
aam
dec
xchg
mov
call
outsb
cltd
and
and
inc
ja
cs
shrb
fdivs
mov
cs
inc
repz
adc
mov
addb
xor
cltd
jae
int
adc
sub
dec
adc
jecxz
popf
or
ss
inc
sub
arpl
sbb
push
inc
mov
mov
outsb
es
sub
js
sbb
and
cmpsb
pop
jmp
xchg
sbb
mov
loopne
bound
or
or
ja
loope
test
push
xlat
pop
or
cmp
and
fidivrs
fincstp
mov
xchg
std
sbb
jo
inc
pop
mov
mov
fs
movsb
pop
pop
xchg
xor
push
xor
cmp
and
xchg
and
cmp
divl
xorb
orb
cmp
jle
mov
mov
inc
mov
mov
test
mov
std
int3
repnz
adc
sbb
push
cmp
ds
push
divl
or
push
xchg
sub
push
mov
mov
and
adc
jb
xchg
pop
loopne
pop
jecxz
cmp
mov
xor
cmp
dec
xchg
pop
xchg
pop
jp
fs
add
add
add
cmpsl
jae
sub
sub
or
jmp
pop
or
xchg
xchg
icebp
outsb
cltd
ret
dec
jmp
mov
adc
shlb
insl
loope
test
pop
lods
scas
sub
push
pop
fstps
sarl
ret
dec
fwait
dec
sbb
mov
inc
mov
addr16
jb
inc
sub
rol
push
aaa
pop
mov
xchg
pop
mov
mov
call
xorl
pop
nop
inc
pop
mov
pop
fisubrs
icebp
xchg
or
sahf
scas
pop
pop
cltd
xor
fldenv
mov
imul
jp
lods
push
stc
add
inc
mov
lods
rolb
sub
push
sbbb
arpl
inc
repz
cmp
jb
mov
mov
out
or
xchg
cltd
jae
xor
jmp
or
dec
xchg
daa
sub
adc
and
push
jnp
leave
mov
lahf
or
jmp
mov
lcall
xchg
inc
sbb
adc
in
sub
popf
insb
jns
fiaddl
mov
sbb
cmpsl
ss
cli
fs
adc
lods
mov
popf
push
movsb
jno
mov
dec
cmpsb
fsubs
or
insb
push
test
sbb
cmp
daa
xchg
mov
in
cmp
sbb
iret
movsl
mov
xchg
jge
test
stc
sub
push
aaa
call
or
mov
sub
sub
push
shl
and
repz
rcl
jmp
sbb
push
dec
lods
cmpsl
mov
fadd
in
sbb
repz
or
mov
add
pop
adc
jnp
std
js
adc
sub
sub
lahf
xor
das
inc
aaa
adc
mov
or
push
mov
add
add
xchg
jl
cld
decl
or
sub
das
pusha
add
cld
add
add
xchg
or
addr16
idivl
mov
lea
out
add
dec
lds
add
cmp
pusha
fbld
xor
js
testb
fnstcw
adc
test
iret
insb
xor
mov
cld
and
aad
movq
push
ficomps
jno
sub
in
stos
mov
aaa
or
stos
adc
mov
mov
inc
cmpl
mov
jg
sbb
out
push
repnz
jb
mov
mov
pop
test
std
idivl
xchg
out
ss
cld
icebp
cs
aam
stos
mov
push
or
push
lret
pop
dec
pop
inc
outsb
push
repnz
fsubrl
adc
mov
push
add
mov
push
shll
adc
adc
imulb
xor
dec
sbb
dec
out
cmp
adc
stos
mov
jle
addr16
mov
sbb
repz
cli
insl
mov
mov
add
insl
jbe
shlb
ss
add
fadds
jne
ss
pop
mov
imul
in
jbe
insb
mov
or
cmp
mov
adc
lds
ret
inc
andl
ret
call
jle
out
pop
call
mov
push
fcmovnbe
xchg
bound
call
lods
xchg
stc
cmc
jne
push
mov
xor
push
sahf
popa
ja
push
cli
inc
mov
shll
out
pop
in
cwtl
in
adc
or
cmp
es
mov
xor
out
sbb
in
sbb
in
xor
nop
sbb
cmpl
les
xchg
bswap
jle
xchg
scas
iret
cwtl
adc
out
ret
and
dec
repz
fldt
cmp
mov
fadds
add
add
add
mov
dec
push
push
or
sbb
adc
loopne
mov
cs
sahf
pushf
in
mov
popf
lret
jnp
dec
mov
in
pop
sub
lret
in
jno
inc
mov
jmp
lret
push
loope
push
popa
xchg
push
je
hlt
dec
jbe
out
xchg
loopne
inc
jp
xor
cmp
leave
fnstenv
pop
push
repz
loope
cmp
mov
cmp
je
dec
in
sub
dec
add
clc
mov
jbe
or
sbb
mov
mov
xchg
add
int3
into
or
sub
lock
mov
mov
cmp
inc
jmp
xor
mov
and
lahf
inc
aaa
in
mov
mov
jae
outsb
cltd
in
dec
add
and
pop
jg
mov
int3
js
gs
ret
xor
outsl
decb
adc
mov
incl
dec
jb
and
in
insl
lahf
pop
push
xchg
fdivrs
mov
dec
cmp
or
out
call
orb
enter
xchg
jg
mov
pop
cltd
pop
ret
or
iret
pop
std
xchg
add
sbb
inc
pop
push
sbbl
mov
fwait
mov
adc
aaa
and
pop
mov
pop
fcomp
or
fxch
push
incl
lcall
xorb
cmp
aas
push
adc
mov
sbb
mov
push
adc
jg
call
stc
nop
enter
jle
mov
and
sub
inc
xchg
es
sbbb
sti
add
shll
imul
sub
iret
mov
mov
pop
sub
cmp
lods
mov
inc
push
inc
jbe
xor
test
add
add
lcall
rcrl
fiaddl
add
add
add
orl
pop
lahf
push
shr
xchg
or
aam
cmp
mov
add
je
pushf
pop
fadd
dec
std
loopne
mov
or
dec
sbb
imul
sub
leave
mov
lock
mov
mov
dec
dec
in
lcall
pop
fwait
xor
out
sub
inc
pusha
dec
push
lock
jecxz
imul
push
nop
and
adc
out
andb
sahf
fldt
push
mov
xchg
and
rclb
push
outsb
adcb
repnz
hlt
fcmove
xchg
aas
shrl
push
stos
clc
loop
mov
sub
ret
mov
add
mov
jbe
fcoml
dec
mov
fildll
fs
push
mov
or
cld
jae
xchg
xchg
into
or
sahf
xor
or
adc
mov
imul
mov
sbb
mov
xchg
out
cmp
inc
ret
push
aas
out
and
jmp
out
push
sbb
je
xchg
cs
cld
xchg
aam
jae
dec
call
cwtl
xchg
sbb
mov
mov
mov
xchg
mov
aad
adc
fisttpl
sub
dec
cmp
rcrb
push
ljmp
lahf
loop
scas
test
in
ret
js
cmp
or
cmp
pushf
stos
mov
and
aam
ja
pushl
sub
mov
mov
adc
add
repnz
push
mov
ret
push
pop
push
or
stos
dec
jle
fldt
ret
push
out
jmp
adc
inc
xchg
mov
lods
push
test
mov
dec
mov
fdivp
and
mov
lahf
jae
xor
and
loopne
add
popa
imul
xlat
std
mov
mov
rolb
dec
idivl
jg
popa
mov
cld
add
add
adcb
and
mov
lea
arpl
or
iret
xor
mov
cmp
cmpsb
pop
test
adc
pop
loop
cmpsl
jp
aaa
test
xor
add
jns
repz
lock
dec
mov
or
dec
popf
pop
repnz
aad
inc
fwait
addl
xchg
arpl
mov
cmp
popa
pop
cmp
jecxz
adc
nop
fnstsw
xchg
sbb
cmp
stos
pop
cmpsl
sbb
test
loope
popf
dec
dec
xor
sub
or
jmp
sub
sub
test
xchg
xchg
mov
bound
loopne
sub
arpl
xchg
popa
std
xor
jnp
or
dec
inc
movsb
xchg
push
outsb
fs
mov
and
addb
stos
lret
addr16
lret
add
inc
cli
cs
mov
xchg
sbb
push
popa
fwait
sbb
aas
insl
ret
dec
xchg
mov
insl
dec
or
and
dec
and
hlt
data16
repnz
mov
push
es
out
push
inc
dec
or
adc
repnz
pop
sbb
dec
inc
popa
pusha
loope
add
movsl
add
test
pop
jge
in
xchg
mov
mov
jle
lret
cmp
adcl
cwtl
sub
iret
cmp
sub
push
fdivs
push
xchg
test
sbb
mov
pop
sahf
sub
jns
dec
or
inc
add
das
clc
push
mov
cmp
xor
repz
cs
lahf
pop
punpcklbw
jns
in
ljmp
push
cmp
sub
or
mov
in
xlat
mov
add
inc
insb
xchg
les
cmp
movsb
mov
aaa
imul
mov
call
mov
mov
fiadds
add
add
add
xchg
mov
xor
les
push
adc
out
pop
xchg
clc
addr16
sbb
je
inc
ss
adc
stc
inc
inc
shrb
stos
repnz
adc
test
adc
push
mov
xchg
xor
mov
bound
dec
mov
in
add
int
insb
push
jbe
les
inc
cltd
incl
in
out
jno
outsl
fidivrl
xor
rorl
pop
sub
and
sbb
in
paddq
and
cmp
push
jge
jo
dec
dec
mov
icebp
pop
hlt
xchg
mov
ja
outsb
or
test
push
pushf
pop
add
ret
mov
push
loopne
inc
rorb
lret
xor
test
scas
jbe
repz
insb
adc
xchg
lds
leave
fs
or
add
cwtl
inc
repnz
dec
cmpsl
test
cmp
mov
mov
adc
cmc
outsl
lds
lret
movsl
or
mov
dec
lods
pop
repz
dec
push
pop
cmp
dec
mov
cmp
or
mov
aaa
scas
inc
stos
cwtl
xchg
adc
cmpb
adc
scas
je
inc
inc
mov
pusha
and
lods
shl
sub
cs
or
lcall
mov
pop
jecxz
jns
incl
pop
sbb
and
daa
fisttps
outsl
scas
outsb
jmp
outsb
les
pop
mov
ret
aad
pushf
pop
cmpsb
push
sbb
sub
aas
imul
mov
jecxz
ss
jecxz
setb
cmp
sbb
sarl
js
repnz
cltd
add
clc
jo
mov
pop
std
mov
mov
add
ficompl
mov
cmp
xchg
dec
loopne
add
add
add
sub
or
inc
leave
inc
lock
inc
rcrb
inc
loop
fwait
jg
into
repnz
jo
adc
lock
lods
aad
pop
xchg
addl
aam
mov
andps
jnp
xor
xor
lods
jno
movb
loope
push
and
push
fnsave
cmp
or
pop
dec
pusha
out
push
add
ficoml
cmc
imul
das
push
fnstsw
sub
lea
sub
stos
roll
fs
cmpsl
imul
sahf
popf
aad
add
adcb
sbb
jecxz
clc
cli
clc
pop
in
and
cmp
insl
dec
cmp
or
lock
scas
je
mov
pop
sbb
insl
ficoml
or
push
push
push
or
inc
out
or
or
mov
mov
cmpsb
jnp
xor
jp
lods
repz
fsubs
cmp
dec
test
sti
xchg
inc
pop
nop
aad
bound
pop
mov
add
pop
mov
stc
adc
lea
cli
js
scas
jb
pop
inc
pop
outsl
mov
lret
push
xor
into
mov
sar
int
jbe
imulb
fldl
mov
sar
dec
cwtl
pop
int
inc
sub
inc
cmp
cmp
dec
mov
aas
adcl
ja
rcrl
inc
mov
jg
outsb
cmc
aad
pop
cmp
xchg
push
or
test
cltd
mov
jecxz
lahf
in
sub
fisttps
enter
lods
inc
jmp
pop
pop
xchg
leave
outsb
out
rol
push
pop
xchg
fisubs
pop
mov
or
pop
cmp
cmp
sub
dec
xor
insb
inc
stos
pop
sbb
cli
inc
cli
mov
jb
push
dec
loop
add
add
add
or
sub
pop
pop
jno
data16
pop
enter
push
mov
mov
add
lret
jecxz
test
jecxz
mov
push
sub
dec
push
mov
xor
xchg
fsubrl
adc
mov
xor
fidivrl
sbb
out
mov
cwtl
xor
js
mov
arpl
inc
fisttps
lea
aas
test
mov
lea
shrl
fwait
jbe
adc
mov
push
push
ja
push
js
mov
jns
mov
stos
ret
mov
inc
cltd
pop
jnp
inc
movsl
and
int
sub
addb
aad
sub
cmp
push
sarl
add
pushf
rorb
insb
or
mov
dec
stos
cmp
ret
sub
imul
shll
mov
dec
sbb
xlat
fsubs
mov
fwait
test
or
adc
push
mov
call
rcl
push
stos
hlt
leave
lods
mov
push
mov
gs
loop
out
sbb
lret
scas
jecxz
enter
outsb
shll
inc
inc
xchg
imul
dec
scas
and
jmp
jge
mov
les
imul
or
shrb
xor
push
add
cwtl
mov
nop
pop
sub
jo
loopne
mov
loope
add
mov
in
out
sub
sub
bound
add
jo
fisubrl
or
mov
jg
jge
dec
stc
cmp
loopne
dec
xchg
jmp
dec
add
cld
sbb
lret
or
out
pop
push
xor
xlat
dec
mov
or
jae
push
xor
push
fs
mov
xlat
push
xlat
ja
out
push
lahf
push
int3
pop
inc
inc
in
add
add
add
xor
outsb
andb
insl
dec
xchg
test
cmp
jb
inc
mov
fisubs
push
je
pop
mov
sarb
mov
and
ds
mov
pop
adc
arpl
pop
ss
inc
out
enter
sahf
es
ret
cmpl
es
addr16
push
or
or
mov
add
push
and
and
add
cltd
sub
sarb
pop
and
clc
adc
adc
loope
dec
mov
ret
jmp
push
lahf
xor
dec
loope
stos
lahf
mov
in
push
lock
leave
jle
sbb
jo
cmp
xor
inc
or
movsb
cmpsb
mov
xchg
shl
inc
cmp
out
add
in
push
mov
pop
add
test
or
fstps
comiss
ljmp
add
add
cmp
inc
dec
int3
add
or
jp
shrb
loop
or
hlt
loope
cmp
inc
leave
outsb
jb
jmp
and
shlb
xchg
xor
in
rolb
imul
loope
shll
out
jo
enter
scas
mov
inc
pop
arpl
scas
and
into
popf
fidivrl
outsb
rorb
cld
ss
cmp
out
fdivrp
push
mov
sub
pop
add
cmp
cmpsb
cwtl
mov
ja
stc
mov
nop
mov
cmp
cwtd
sub
icebp
add
in
and
shll
lock
lahf
ret
out
cli
adc
add
push
lock
and
sub
mov
inc
jle
push
in
dec
or
sbb
inc
lods
sub
mov
and
fwait
imul
xor
into
mov
loop
xchg
inc
xchg
cli
rcll
jmp
pop
inc
push
inc
out
add
add
add
and
adc
repnz
pop
adcb
sub
mov
cwtl
rclb
fdivrs
into
arpl
mov
int
and
lods
ror
mov
xchg
push
cmpsl
incl
mov
inc
sub
add
sahf
test
mov
into
popf
das
mov
push
aam
mov
pop
arpl
inc
aaa
andl
xchg
aad
jp
dec
jno
xchg
es
or
sbb
out
mov
adc
cld
push
mov
in
ret
pop
cmp
imulb
into
movsl
push
sub
dec
addb
out
or
push
jmp
push
mov
inc
cs
fs
iret
movsl
add
or
shrl
and
cwtl
jmp
xor
cmp
hlt
sbb
jp
rcll
pusha
call
pop
pop
pop
inc
push
dec
in
pop
mov
cmc
mov
pop
in
in
sbb
shl
add
mov
jmp
mov
mov
addr16
pop
xchg
lahf
mov
push
dec
enter
adc
mov
lret
push
lahf
push
bound
pop
push
lahf
cmpsl
mov
dec
shlb
jmp
btc
jbe
push
test
mov
and
mov
jmp
inc
clc
push
jns
notl
inc
add
cmpb
enter
roll
lret
jns
mov
or
mov
lods
mov
stos
xor
mov
add
pushf
sbb
dec
pop
cmp
int
shl
std
mov
outsl
mov
cmpsl
insl
xchg
mov
mov
stc
pop
inc
xor
stos
xchg
sbb
and
fisttpl
mov
popf
es
sub
cs
loop
dec
iret
negb
mov
sub
cmp
add
cld
add
add
push
mov
mov
jge
dec
js
jnp
out
jg
jae
jmp
fidivs
iret
adc
xchg
inc
enter
out
sbb
or
mov
or
cli
movl
jle
cs
js
sub
cmpsl
push
xchg
push
jmp
cwtl
in
adc
adc
mov
fst
insb
add
jecxz
xchg
inc
fldcw
aam
sbb
pop
push
cmc
outsl
mov
movsl
shrb
in
insb
fmulp
stos
fcom
or
xlat
add
dec
jnp
orl
jnp
aad
inc
fsubr
push
inc
test
pusha
inc
rorb
mov
test
div
jno
mov
pop
xor
js
cli
decb
in
popf
mov
and
testl
add
imulb
mov
outsb
push
sbbb
pop
push
push
in
sbb
push
mov
jne
cld
cmpsb
into
cmp
pop
fisubrl
fsubp
aad
stos
fistpl
lret
mov
aad
add
xchg
push
ja
push
loopne
stos
sarl
es
cmp
cmpsb
sbbb
movsl
cli
clc
adc
and
jl
in
mov
push
xchg
pop
xor
cs
mov
loopne
cmp
inc
mov
push
in
cmp
jno
jno
pop
pop
mov
lret
sbb
dec
rcrb
stos
and
or
popl
aas
sub
lret
ja
add
lods
inc
das
mov
cli
or
dec
hlt
push
in
jns
pop
jp
sahf
nop
roll
outsb
mov
fildll
mov
out
mov
test
jmp
aad
inc
es
jmp
lret
out
das
sti
mov
gs
adc
add
test
lods
push
icebp
outsb
pop
shr
xchg
add
add
sub
ja
jno
dec
inc
loopne
test
cld
add
add
mov
lods
cmp
push
mov
and
jbe
add
xor
and
add
mov
popf
les
rcll
ljmp
les
movsb
jmp
xchg
aam
sbb
dec
hlt
xchg
xchg
sbb
stc
mov
inc
push
fidivs
mov
pop
mov
add
das
aaa
ret
test
inc
test
jo
sbb
nop
or
ret
dec
out
ljmp
cs
adc
and
push
out
jecxz
mov
aad
out
je
sti
sbb
cmp
inc
pop
test
jnp
stc
or
cld
mov
adc
outsb
mov
and
sti
fistpll
sub
in
sbb
cmp
pushf
xchg
ret
loop
jns
mov
sbb
in
push
xchg
xor
sarb
dec
xor
mov
jg
jmp
pop
addr16
and
xlat
std
cmp
and
xchg
test
add
xchg
adc
in
mov
xlat
xchg
push
fcmovbe
inc
jle
lock
icebp
test
in
in
pop
and
gs
sub
iret
es
icebp
pop
lds
mov
rcll
xchg
lock
or
and
jp
mov
mov
scas
mov
loop
and
push
pop
xchg
mov
mov
add
pop
iret
aaa
xchg
scas
pop
int3
je
adc
out
pop
das
pop
imul
arpl
stos
out
je
pop
jmp
fsts
movsb
nop
mov
push
and
mov
jmp
mov
orb
test
jl
aas
mov
popf
pop
inc
adc
fcoml
jp
dec
xor
aad
mov
cltd
enter
mov
stc
popf
pop
sti
stos
fdivs
add
cld
add
add
ja
push
stos
iret
mov
inc
jo
push
test
mov
loope
in
ljmp
in
sub
jl
std
scas
lahf
sub
lods
jo
push
js
mov
mov
divl
in
and
and
mov
sbb
loop
iret
fwait
out
inc
mov
test
filds
lret
xchg
cmp
ljmp
ret
in
rep
cmp
xchg
xchg
cmp
sub
loopne
push
test
loop
sbb
adc
xor
xorl
xor
sub
and
cmpsl
rcrb
out
add
mov
or
xor
stc
flds
fidivl
shld
sbb
lods
call
mov
pop
stos
dec
data16
dec
loop
xor
push
loopne
loopne
mov
adc
leave
and
inc
sbb
mull
cmc
mov
rcrl
push
pop
repnz
pop
dec
pop
push
push
sahf
xchg
push
fisubl
in
dec
pop
push
xchg
ret
xchg
push
fcoms
mov
pop
cmpsb
adc
clc
into
adc
ljmp
scas
push
cmp
jp
out
pop
adc
pop
add
popa
xor
xchg
mov
adc
pusha
mov
int3
pop
push
sbb
cli
dec
jl
lods
jb
push
jae
sti
rclb
test
fildl
mov
pusha
lret
jmp
mov
sub
and
push
dec
mov
mov
pop
test
pop
mov
pop
add
mov
fwait
cmp
sbb
dec
inc
jl
sbb
sar
fwait
push
fdivs
ret
movsb
jb
dec
jl
or
call
push
jp
fs
pop
mov
dec
and
lds
mov
fwait
xor
jns
sbb
jge
and
dec
outsl
andb
cld
add
add
insl
xchg
add
aad
inc
cltd
aaa
xor
jecxz
xor
adc
fisubl
in
lods
ljmp
pop
push
mov
mov
dec
push
mov
xchg
insb
mov
or
repnz
les
pop
outsb
in
fcoms
lea
and
sub
hlt
jnp
pop
sbb
mov
adc
jbe
jecxz
das
sub
xchg
stos
addb
imul
adc
outsl
and
and
xchg
mov
nop
fs
jae
fst
pop
repz
insl
push
jbe
aaa
subb
mov
dec
test
pop
xchg
inc
push
cmpsb
and
inc
adc
push
xor
sbb
push
mov
dec
jle
mov
scas
push
pop
rcrb
ja
push
notb
dec
mov
sub
pop
and
jno
pop
mov
xchg
and
mov
in
cwtl
push
add
dec
insl
mov
mov
sbb
sbb
pop
andb
mov
jno
push
ss
sarl
out
jmp
pop
jmp
dec
mov
xlat
adc
pop
mov
test
test
or
mov
push
stos
movsl
jmp
gs
dec
jp
xchg
ljmp
and
fsubr
dec
cmp
inc
push
xchg
cltd
adcl
rcr
lret
pusha
adc
pop
inc
int
or
clc
inc
mov
orb
mov
mov
test
fcoml
loope,pn
jl
xchg
xchg
icebp
or
js
popl
in
aam
negb
mov
push
cmp
jl
cld
inc
shl
jo
push
ljmp
mov
xor
add
add
roll
pop
arpl
lds
sub
add
cld
add
add
sub
inc
mov
fwait
loope
das
outsl
addl
add
enter
rolb
jecxz
cmp
inc
rolb
test
jmp
test
mov
shll
scas
pop
or
arpl
pop
jmp
xlat
rolb
xchg
xchg
mov
push
xchg
stc
ljmp
xor
insl
sub
dec
popf
pop
hlt
sahf
jns
cmp
fwait
cmpsl
repz
shl
xor
fsubrl
xor
popf
xor
dec
mov
and
jecxz
dec
sbb
mov
push
shlb
into
clc
push
jae
xchg
jmp
fnsave
add
and
pop
nop
xor
out
loope
adc
dec
jbe
xor
cmp
fwait
sub
inc
dec
lea
inc
mov
push
and
dec
enter
xchg
cli
xchg
stc
mov
test
loop
pushf
inc
pop
or
sbb
fisubrs
mov
call
push
mov
repz
rclb
jg
aam
lcall
pop
mov
popf
test
aad
fdivr
push
add
and
mov
cmpsb
mov
jle
aam
ret
popa
fsts
sub
or
ja
xor
add
dec
das
aam
int
jmp
cmc
mov
les
int3
xorb
inc
mov
or
jg
in
std
mov
mov
sbb
test
ja
inc
sub
js
jmp
js
pushf
das
mov
jbe
sbb
push
imul
sub
inc
sbb
and
jle
adc
jle
pop
jl
cmp
jl
mov
inc
mov
sahf
insl
test
xor
xchg
and
dec
xlat
xchg
lds
cmpsb
jns
lds
add
add
daa
pushf
cli
mov
xchg
out
cltd
xchg
add
cld
add
add
push
inc
mov
adc
mov
or
push
push
test
dec
ret
stos
loope
icebp
inc
stos
lods
daa
mov
push
mov
cltd
test
add
sti
ret
mov
lods
enter
insl
and
fmull
jno
xchg
add
adc
jle
xor
fcmovbe
and
pop
sub
sub
inc
mov
outsb
into
push
push
xchg
pop
aaa
pusha
push
and
rolb
aas
bound
jp
pop
mov
call
popa
push
pop
push
rcrb
stc
cmp
push
pop
xor
popf
push
xchg
cmp
in
jle
fdivs
push
addr16
movq
mov
mov
aaa
ret
pop
loopne
test
in
add
sbb
nop
or
mov
xor
push
daa
lods
push
pop
rolb
jb
fs
out
mov
add
mov
pop
sti
out
xchg
push
xor
in
and
cmpb
cmpsb
jnp
mov
mov
enter
clc
dec
xchg
and
lds
jecxz
mov
jl
into
mov
stc
push
dec
jle
fsubrp
adc
sub
jae
and
aaa
movsb
popf
fldcw
pop
dec
hlt
cmp
dec
ffree
imul
rolb
test
and
inc
mov
out
lds
xor
loopne
std
lret
adc
testb
movsb
test
aad
stos
pop
cmp
inc
lcall
mov
mov
dec
cmpsl
mov
in
cmp
cmp
lret
lret
loopne
std
jno
testl
or
int3
push
je,pt
bound
cli
lods
fwait
daa
dec
imul
xchg
push
ss
and
inc
pop
mov
je
dec
fstps
imull
ret
add
lcall
leavew
and
pop
mull
hlt
add
cld
add
add
ret
ret
dec
or
adc
leave
or
push
fwait
or
dec
std
mov
xchg
mov
xchg
aad
lahf
adc
sub
rorl
jbe
sarb
jle
dec
in
movsb
imul
out
adc
mov
popf
cmp
gs
popa
mov
cmp
ljmp
gs
lret
outsb
inc
cmp
addl
insl
in
in
mul
and
sub
stc
sbb
inc
mov
xor
sbb
mov
test
stc
push
stc
xchg
loopne
pmuludq
cmp
inc
push
call
add
iret
test
sub
sbb
sub
sbb
int3
xchg
push
add
imul
test
in
xchg
inc
and
push
movsl
cli
mov
lds
stos
jo
xlat
mov
adcb
lret
jmp
addr16
push
sub
adc
nop
stc
mov
sbb
add
jno
shrb
jne
mov
mov
test
aad
push
test
cmpsl
cwtl
jg
mov
mov
jmp
out
inc
mov
mov
jmp
cmpsl
ret
repz
push
hlt
movsl
stos
push
xor
stos
sub
cmpsl
rcr
pop
int3
pusha
repz
push
jge
xchg
insl
cmp
and
sbb
cmpsl
or
jg
fwait
aaa
mov
xor
imul
jmp
and
cmp
jb
shr
lods
test
mov
lret
and
sbb
push
xchg
stos
pop
xor
stos
lret
cld
rcrl
jecxz
lret
mov
push
add
aad
stos
jnp
dec
sub
lret
test
inc
icebp
sbb
scas
mov
lret
push
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
inc
sub
test
testb
cld
add
add
cli
or
push
and
jle
mov
subl
orl
nop
jecxz
cmp
jl
xchg
sbb
jmp
jp
leave
mov
and
pusha
push
loopne
mov
mov
mov
push
clc
adcb
jp
insb
lea
mov
jb
icebp
out
mov
mov
sbb
mov
ss
mov
jl
jmp
mov
int3
add
push
inc
and
daa
or
pop
std
or
or
lret
mov
mov
mov
xor
call
jge
or
loopne
sarl
cld
pop
data16
scas
mov
dec
mov
and
out
sbb
mov
lds
inc
clc
shr
jg
pop
aaa
mov
arpl
idivl
sbb
adc
sbb
jns
rorl
xchg
dec
mov
pop
shl
lock
inc
ja
cmc
jae
mov
out
jbe
popf
ss
sti
cmp
adc
enter
test
shlb
add
mov
mov
inc
mov
outsb
out
xor
pop
lea
outsb
loopne
pop
sub
or
mov
in
xorl
inc
int
sbb
pusha
fnstcw
fsubrl
jbe,pt
ret
adc
cmp
mov
pop
push
lret
pop
scas
inc
pop
jo
outsb
daa
xchg
xor
pop
sub
xchg
rep
dec
pop
pop
pop
dec
or
inc
insb
push
push
jo
aam
or
roll
lods
xchg
add
or
sbb
aad
clc
outsl
pop
movsb
in
cmc
lret
loop
test
icebp
mov
inc
sub
lahf
std
cmp
stc
jl
stc
jne
rcll
sbb
add
cld
add
add
repz
jnp
test
jno
lcall
call
dec
ror
mov
push
push
and
xor
push
lret
push
loopne
cld
sub
sarl
adc
enter
pushf
fs
push
negb
clc
nop
test
adc
jo
test
push
ss
iret
dec
insl
inc
xor
xor
mov
mov
push
bound
cmp
jp
xchg
mov
push
adc
es
je
mov
iret
dec
jb
shrb
xor
fwait
cs
jnp
aad
or
and
xchg
in
jbe
in
lea
in
int3
fisubs
aam
add
insb
pop
fld
add
fstps
xchg
jg
imul
cmp
sarl
push
push
or
jge
or
pushf
dec
push
fsubrs
scas
push
and
icebp
mov
dec
int3
icebp
mov
jbe
mov
mov
cmpsl
call
cmpsb
inc
push
adc
into
das
xor
mov
dec
movsb
testl
xor
pop
adc
sarl
push
test
cmp
mov
inc
bound
int
xor
int
testb
lea
lock
lds
xchg
jbe
in
push
lods
xor
mov
sbb
scas
xchg
in
or
mov
xchg
cmp
pop
loopne
dec
dec
lret
cmp
les
xor
sub
mull
in
jae
imul
sti
outsl
das
fs
sbb
incb
sbb
fmull
scas
popf
rcr
data16
outsl
sub
aam
pop
xchg
sbb
push
push
adc
pop
aam
or
ja
dec
jnp
rcrl
jecxz
add
fs
imul
add
add
add
add
cmp
test
sbb
add
adc
add
sbb
pop
out
mov
mov
dec
dec
adcb
sbb
add
add
