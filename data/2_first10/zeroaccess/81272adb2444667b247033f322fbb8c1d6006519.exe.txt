push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
adc
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
pop
mov
aam
jmp
movl
std
sub
inc
pop
jge
divb
into
stos
mov
leave
outsb
sub
mov
push
or
add
faddp
filds
jp
add
mov
repnz
jg
xchg
loopne
pop
imul
or
jle
mov
add
test
or
adc
icebp
in
dec
pop
pop
or
inc
jg
mov
aad
sub
jmp
sub
jae
mov
das
xor
loope
scas
cmpb
fwait
dec
jle
pop
pop
cmp
inc
stos
jns,pt
jp
jl
and
mov
pusha
jmp
mov
cmp
mov
ljmp
mov
clc
push
lret
xchg
stos
push
shrb
push
mov
cmpsb
jp
rcrb
je
repz
lret
push
sub
mov
pop
ljmp
loopne
stc
or
repz
pop
nop
aad
push
or
ror
pop
shll
jns
clc
pop
lods
fidivrl
xchg
test
mov
mov
jno
mov
push
sub
dec
mov
dec
mov
sub
pop
out
sbb
loop
in
into
cwtl
mov
adc
pop
fwait
mov
in
call
inc
scas
fs
mov
mov
push
xchg
std
push
loop
xor
cmp
push
xchg
push
je
xor
sub
cmp
mov
pop
sbbb
sub
xchg
loop
lcall
sarb
pusha
in
pop
mov
sbb
imul
notl
pop
repz
mov
jb
inc
rcl
out
inc
dec
movsl
dec
fldl
dec
ret
fbstp
fiaddl
dec
mov
fcomip
add
lea
mov
push
xchg
or
mov
mov
xorb
sbb
pusha
mov
pop
stos
or
sub
sub
lods
nop
push
lea
push
inc
inc
jb
mov
adc
xchg
lea
pop
push
push
fcomi
and
in
dec
adc
or
mov
or
sti
enter
test
mov
imul
repz
dec
add
filds
inc
jbe
or
int
pushf
jecxz
xchg
gs
pop
icebp
and
inc
lret
imul
ret
push
jnp
add
sub
cmc
mov
ret
cld
decl
fldl
inc
xchg
outsb
out
out
insb
fildll
mov
jnp
in
aam
repz
mov
cmp
sub
push
cmp
pop
cmpsb
adc
cmpsb
sbb
aaa
hlt
ror
jbe
outsb
ljmp
pop
ljmp
imul
push
sub
in
and
sbb
aad
movsb
cmpsb
jae
test
add
aas
or
mov
imul
fsubs
jb
aam
outsl
dec
cmp
and
xchg
and
inc
cwtl
mov
das
test
push
sub
in
test
inc
adc
adc
adc
dec
testb
cmpsb
mov
push
call
lods
pop
movsl
mov
cs
dec
imul
pushf
push
in
jle
dec
outsb
pop
dec
test
dec
in
xchg
lret
push
call
data16
push
pop
or
mov
leave
jbe
sub
lret
lods
add
inc
call
imul
adc
and
es
repnz
dec
cs
cmp
std
dec
lea
sub
arpl
dec
sub
shll
clc
mov
cmpsb
lods
insl
sbb
repz
lret
lret
int3
pop
fdivl
inc
jge
or
pop
outsl
adc
int
push
inc
repnz
dec
mov
mov
mov
ret
outsb
inc
mov
cs
sub
aad
mov
repnz
sub
pushf
out
push
jb
insb
xor
enter
stc
mov
pop
test
lods
mov
inc
cld
inc
xchg
iret
sbb
jmp
xchg
pop
stos
inc
adc
outsb
cltd
push
cmpsl
or
inc
mov
mov
loop
imul
xchg
mov
add
mov
push
pop
pop
mov
and
add
shlb
dec
inc
test
mov
sub
add
mov
adc
cmp
sub
sub
adc
sub
dec
mov
xor
dec
xchg
nop
mov
push
mov
jo
and
test
push
and
daa
inc
push
jmp
ficompl
lea
lods
scas
insl
mov
fsubrl
adc
repnz
cli
mov
sbb
ret
movsl
or
sub
lcall
sbb
mov
sbb
or
adc
leave
cltd
movsl
std
mov
pop
fstp
cmp
sarl
pushf
and
sub
loop
mov
add
cmp
pop
in
loopne
and
sbb
mov
aad
adc
mull
fsubrl
in
inc
jge
in
sbb
aaa
sbb
jle
sbb
jnp
stc
in
imul
das
xchg
aam
xor
add
jge
inc
xorl
sub
into
popf
mov
pop
mov
push
jl
and
cmpsb
mov
jb
int3
push
sbb
mov
loopne
add
inc
movsl
mov
push
and
aam
in
ss
loope
test
push
rcrl
stos
fisubs
cmp
push
inc
push
lret
cmp
mov
xchg
in
pusha
xchg
push
gs
jge
adc
pop
push
rcll
cwtl
pop
add
es
xlat
push
call
in
lcall
aad
rorb
sub
jl
jge
inc
sbb
adc
mov
inc
add
sub
pop
in
lret
cmpsb
jne
sbb
insb
popa
jno
xchg
mov
mov
es
add
pop
push
jae
sti
pop
out
bound
or
inc
lock
inc
out
daa
addb
into
pushf
mov
mov
inc
ljmp
outsl
test
in
subl
pop
cwtl
aad
leave
push
cs
out
aad
jge
sub
bound
and
mov
fidivs
test
mov
cld
sub
mov
or
or
in
in
cld
das
clc
jp
aas
iret
mov
push
or
jno
cmp
push
ja
inc
xor
adc
lock
push
fsubs
add
std
or
in
mov
flds
in
popf
mov
inc
insb
add
push
rcll
stos
add
mov
mov
dec
jae
mov
and
outsb
mov
rclb
push
cmp
dec
add
adcl
stc
lret
shlb
adc
sbbl
pop
or
nop
pushf
adc
out
je
rolb
loopne
jge
xor
mov
jg
adc
xlat
cmp
fsubp
jecxz
push
leave
adc
orb
mov
insb
jge
push
xadd
into
jns
cmp
fwait
sub
jbe
mov
ss
in
in
jp
jg
mov
or
push
fsub
pop
mov
divl
rorb
inc
fmul
shll
push
or
adc
pop
in
sub
mov
lcall
or
inc
fcmovnb
xor
incb
call
cmp
mov
mov
xor
push
into
jae
jbe
je
std
xor
push
adc
mov
sbb
xchg
das
adc
sahf
add
subl
and
xor
fwait
mov
push
stos
std
clc
xor
sub
adc
loope
imul
lods
cmp
sbb
sbb
adc
mov
ret
hlt
xchg
je
add
jae
push
adc
and
clc
cmp
push
sbb
or
add
jbe
movsb
xor
mov
jl
out
add
int
or
add
add
cli
xor
jecxz
xor
and
cmp
push
xchg
mov
cmpsl
pop
rorb
cmp
gs
pushf
mov
xor
sub
fcomps
push
dec
mov
xor
xlat
sub
xchg
sarb
shrl
pop
and
popf
movsb
ret
dec
dec
dec
mov
push
ja
pop
roll
data16
fdivrl
sbb
push
scas
xor
push
call
sub
mov
pop
fnstenv
jge
jge
dec
push
mov
xor
popa
hlt
sbb
dec
mov
jbe
dec
sub
xchg
jbe
mov
sub
lods
inc
sub
push
xor
xor
pop
pop
xor
test
loop
clc
popa
xchg
mov
sub
lret
pop
or
shr
loop
mov
ss
inc
cmp
push
jg
stos
imul
lahf
cltd
push
or
jp
pop
mov
stos
fists
sti
movsb
sbb
int3
shlb
popa
orl
jbe
addb
out
loopne
sub
ljmp
and
addr16
insb
sbb
inc
test
mov
call
hlt
jle
mov
adcl
scas
xor
ffree
sbb
stos
mov
jle
inc
mov
xchg
jp
test
scas
cs
mov
mov
repnz
and
daa
mov
push
push
xchg
ja
lret
push
daa
sbb
xor
ret
add
push
mov
xor
pop
jp
and
add
loopne
adc
loopne
inc
nop
xchg
pop
mov
sbb
inc
or
cmp
ds
pusha
ss
rolb
lods
mov
and
cmp
out
adc
lds
push
xchg
lds
aas
enter
mov
xchg
xchg
rcl
dec
or
lods
xor
dec
lds
jle
decl
imul
push
inc
popf
or
mov
dec
sbb
cmpl
insb
gs
cmc
pop
cmpb
f2xm1
in
mov
pop
je
jne
xchg
repz
and
inc
push
inc
mov
ret
inc
out
rcrl
mov
data16
sub
lea
mov
inc
pop
inc
fstp
enter
inc
loop
gs
frstor
adcb
lea
cli
push
fs
outsb
icebp
mov
mov
test
pushf
push
dec
and
jmp
jae
jnp
stos
mov
jae
jg
insb
in
or
adc
and
cmp
sbb
add
aaa
je
inc
les
ds
push
fsts
mov
jecxz
cmc
inc
into
popa
lock
mov
xchg
imul
push
pop
push
fiadds
or
push
sub
push
shrb
test
add
mov
mov
jecxz
xorl
dec
mov
aas
lods
outsb
pushf
mov
xchg
jg
stos
rcrb
repz
sub
push
mov
xor
mulb
imul
cmp
dec
inc
cli
push
add
lock
and
and
push
test
push
inc
mov
jmp
sbb
cmp
add
lret
sti
ret
popf
mov
pop
dec
mov
mov
xor
ud1
jl
dec
and
lods
xchg
add
pop
pop
ret
test
faddl
mov
sbbb
and
xchg
adc
out
jecxz
cmp
xchg
in
add
lret
add
adc
sahf
push
push
pop
push
fst
rcrl
mov
stos
int3
in
enter
push
sbb
roll
popa
pmullw
pop
sub
fdivrs
ret
xor
mov
scas
out
out
and
fidivrs
aaa
nop
sbbb
lea
inc
push
jmp
mov
setns
or
mov
lea
je
repz
lea
lea
jb
jmp
pop
imul
cmova
adc
mov
sbb
and
es
jnp
mov
lds
xor
imul
cmp
cmp
jns
mov
push
mov
xor
cmp
dec
adc
inc
push
repz
inc
lock
aam
sub
jb
adc
out
ljmp
xchg
sarl
sub
and
cmpsl
hlt
out
imul
out
sub
jg
push
xchg
jb
adc
insl
mov
dec
jb
stos
scas
ljmp
push
ljmp
bound
std
pop
cmc
inc
push
push
inc
jl
jo
jg
or
int3
cmpsl
mov
xchg
xor
jl
pop
inc
out
test
dec
cmc
in
out
sub
push
out
je
pop
mov
add
jg
cmc
mov
pop
ret
hlt
adc
es
jp
pop
mov
loopne
cld
mov
stos
cmpb
jo
fdiv
cmc
call
adc
mov
mov
ret
cwtl
lret
pop
mov
ficomps
or
incl
stc
inc
inc
fwait
lods
inc
mov
jp
jl
jge
inc
and
push
inc
pop
dec
xchg
push
xor
push
and
xchg
dec
mov
aad
neg
jp
sbb
or
out
out
mov
pop
push
cltd
mov
jns
fisubl
add
add
jge
pop
push
push
dec
cmpl
daa
cmpsl
rolb
cmp
sub
xlat
shlb
loop
sbb
lods
cwtl
jb
inc
adc
iret
mov
dec
and
std
outsb
mov
mov
mov
lock
ljmp
bound
xor
bound
daa
rol
adc
enter
inc
jae
mov
adc
dec
imul
ret
popf
stc
pusha
test
jbe
push
loope
xor
push
pop
push
sub
inc
aad
fimull
or
jbe
jl
xchg
test
or
mov
cld
stc
mov
inc
loope
sub
jp
mov
in
iret
dec
stc
out
lock
out
push
cmp
std
push
adc
fucomi
loope
sbb
adc
mov
mov
in
daa
fs
xor
push
fsubs
and
mov
les
jno
jb
mov
scas
into
aaa
mov
fldcw
or
icebp
xor
lahf
adc
insl
xor
mov
stos
pop
mov
xor
pop
repz
js
dec
out
dec
mov
jns
mov
push
dec
sbb
jnp
fidivrl
add
mov
pop
or
scas
ret
in
int
dec
cs
jecxz
mov
testl
mov
or
lods
dec
mov
hlt
into
mov
in
pop
loopne
sbb
lods
cmpsb
push
pusha
lcall
out
sbb
lret
bound
gs
repnz
dec
cli
ffree
dec
jg
rcrl
dec
pop
mov
lea
ss
sbb
dec
repnz
repz
pop
test
lock
js
push
and
cmpsb
xlat
mov
dec
or
sbb
arpl
mov
gs
mov
jg
stos
pop
ja
cmp
mov
and
sti
dec
movsb
mov
sub
sub
sub
insl
xor
inc
movsl
xchg
loopne
fnstsw
xchg
xchg
aaa
inc
test
loop
jnp
data16
jl
nop
mov
enter
sub
in
cmc
shrb
jo
lcall
aas
std
loopne
dec
xor
push
push
sbb
ss
adc
lahf
add
pop
mov
nopl
icebp
ficoms
loope
jge
es
and
xchg
add
xor
push
out
xor
out
cmc
test
and
pop
dec
arpl
jecxz
fcomip
jmp
dec
je
repnz
outsl
lret
jl
mov
loopne
add
xlat
xchg
jbe
sub
scas
mov
mov
into
mov
dec
cmp
add
push
dec
inc
dec
lock
jo
loopne
arpl
ret
loopne
push
pop
dec
orl
push
mov
jbe
js
test
xchg
imul
pop
ds
scas
outsb
xor
cltd
das
lret
out
cltd
cmpsl
gs
jae
shr
add
inc
mov
into
imul
fimull
rclb
mov
mov
inc
movb
and
dec
pop
clc
in
or
or
fisttpl
gs
add
movsb
into
orl
loop
xchg
mov
jecxz
shl
and
xchg
sub
mov
inc
loop
xor
add
and
jb
insl
lea
pop
mov
lock
sbbb
or
mov
stc
mov
jne
out
imul
adc
sbb
je
sbb
add
push
dec
in
aam
es
mov
mov
outsl
daa
dec
xor
repz
in
lret
leave
jno
aad
sbb
xchg
xlat
jnp
fwait
sbb
repz
sub
mov
addr16
stos
cmp
inc
xor
ror
jmp
popa
mov
fildl
fdivs
and
mov
or
lret
cmp
jae
mov
xlat
icebp
nop
out
sbb
pop
fsubs
stos
sbb
and
or
mov
add
jmp
movsb
divl
or
daa
jno
sbb
cld
pminub
sbb
cmp
cmp
xchg
mov
jnp
scas
push
cmpsb
imul
cmp
mov
daa
and
inc
add
jge
pusha
cmp
nop
stc
sti
inc
aam
scas
sub
jle,pt
xor
adc
add
mov
rorb
mov
jge
sub
sbb
cmp
sahf
lea
and
xor
fildl
frstor
ret
ret
mov
cmp
xchg
insl
pop
mov
pextrw
mulb
pushf
scas
insb
inc
or
xchg
or
jne
push
xchg
aaa
sbb
popa
mov
je
mov
fisttps
lcall
mov
scas
xchg
and
mov
int3
leave
jbe
or
fisttps
dec
inc
xchg
mov
cmp
loop
test
jmp
mov
decl
jb
push
xor
sbb
or
lret
vmulsd
sub
push
call
mov
xor
pop
mov
es
test
loopne
xor
es
call
push
xor
loopne
sbb
js
mov
inc
shll
push
mov
jp
jp
push
ljmp
loope
out
lahf
cmc
in
jae
pop
mov
sub
mov
mov
or
and
sahf
fucomi
addb
js
sbb
out
fwait
lret
fwait
xor
andb
inc
cmp
inc
outsl
nop
test
loopne
xor
dec
dec
in
std
andl
pop
ret
cli
mov
lret
or
jmp
loop
add
xor
adc
out
loop
inc
or
adc
xor
stc
cmp
and
pushl
or
mov
cltd
imul
pop
aas
stos
js
dec
fnstcw
sub
inc
mov
jnp
mov
cltd
xor
push
jge
fidivs
jnp
pop
push
lahf
cmp
iret
mov
ss
inc
fistpll
jae
fisttpl
into
jnp
pushf
and
cmp
insl
cmp
mov
mov
sbb
outsb
xchg
dec
sub
and
sahf
rcrw
dec
ret
dec
push
and
add
pop
movswl
add
lret
fucomp
mov
nop
insb
cltd
idivl
sbb
dec
inc
jbe
sbb
pop
mov
fdivrl
adc
stos
adc
mov
dec
clc
pop
loop
mov
push
fstps
iret
mov
nop
adc
jecxz
fcomp
push
xchg
dec
dec
inc
inc
adc
cltd
bound
cmc
inc
lahf
sub
test
inc
out
adc
xchg
lods
xchg
addb
sahf
xchg
inc
loope
xlat
rcrl
xlat
mov
ds
hlt
pusha
add
fldt
sbb
pop
cltd
push
lret
test
sysexit
push
divl
nop
jmp
loop
jae
lock
es
or
mov
arpl
clc
add
jecxz
jmp
dec
add
adc
xchg
jmp
jl
roll
rorl
add
pusha
inc
or
add
xor
cwtl
test
test
dec
js
mov
sub
jne
add
xchg
in
cmpsb
dec
lods
or
mov
insb
in
xor
popf
mov
inc
xchg
push
iret
jmp
dec
mov
jg
xor
nop
sub
jbe
jae
xor
nop
or
jecxz
std
scas
ss
arpl
fildl
cmp
or
sbb
lret
jp
push
lret
mov
fstps
sti
xchg
cmp
adc
mov
lret
repnz
inc
jo
push
pop
sti
add
fimuls
shll
jge
or
and
xor
push
inc
pop
mov
or
inc
pavgw
fdivs
int
in
jae
sbb
paddsb
mov
idiv
sbb
adc
sub
dec
aaa
sbb
push
lds
pop
xchg
jmp
pop
ds
and
fs
cmpsl
lods
and
mov
push
aaa
out
xchg
push
lds
jmp
lret
pop
and
cmp
push
dec
jo
fists
jbe
loope
xor
enter
sar
jnp
push
stc
jl
outsb
inc
fidivs
fnstcw
mov
pop
les
mov
mov
sbb
sub
lods
rcrb
push
notb
cmp
xor
lret
std
xchg
jmp
sub
sub
inc
xchg
lret
jle
inc
jge
aam
jo
adc
fcompl
and
add
dec
push
push
sbb
lea
jp
rorl
xor
pop
testb
test
repnz
mov
icebp
push
mov
aaa
or
cmc
icebp
and
hlt
sbb
sub
jno
mov
es
xchg
adc
dec
adc
cmp
cmp
dec
int
mov
pop
jne
cltd
sbb
lret
fs
push
scas
bound
fcomi
adcb
leave
out
xchg
in
and
cmp
dec
cmp
fbstp
ss
hlt
jno
mov
push
inc
pop
das
std
adc
popa
and
popa
inc
ja
lahf
pusha
scas
jg
add
mov
or
jp
fstl
insb
mov
int3
fldl
adc
cmc
cmpsl
movsb
sbb
popf
es
mov
in
imul
fldt
inc
test
mov
jg
mov
mov
nop
pop
cmp
imul
icebp
jno
test
imul
inc
popa
cmpsl
cmp
mov
jno
cmpsb
dec
inc
sub
cwtl
loopne
fwait
jmp
sbb
out
loop
movsb
add
jns
sbb
push
push
pop
push
imull
inc
cmp
outsb
mov
sbb
cltd
shr
ss
sub
fbld
in
data16
and
andb
test
call
xchg
adc
bound
sbb
mov
lds
ret
dec
mov
or
xor
xchg
xchg
inc
inc
xlat
sahf
or
mov
pop
nop
mov
and
mov
pop
shlb
cmc
out
dec
lret
aam
nop
add
aas
xor
mov
outsl
inc
or
xchg
adc
mov
inc
or
lret
sbb
mov
popa
loop
push
push
jbe
dec
scas
fcmove
jo
cmpsl
mov
jg
fiaddl
or
and
cmp
inc
sub
in
push
pop
adc
jns
mov
nop
scas
idiv
call
int
adc
pusha
addr16
outsb
fdivl
xor
cmp
pushf
adcl
push
rolb
xor
iret
fdivrs
out
jmp
inc
into
jo
pop
sub
xchg
sub
stc
mov
cli
sbb
fimull
dec
cmpsb
sbb
push
xchg
movsl
data16
mov
enter
mov
sub
fisubs
xor
sub
cmp
mov
pop
adc
xchg
xchg
imull
pop
dec
mov
in
jle
and
test
cmp
rorl
xchg
mov
push
jb
fisubrl
div
in
out
into
mov
mov
loope
jg
lds
cmpb
xchg
mov
mov
aad
cmp
aam
mov
ja
mov
cmp
cmp
rolb
ja
and
mov
ja
sbb
push
test
sub
sub
shll
stos
dec
lea
fisubl
lods
lods
push
imul
fcomps
cmp
sub
lock
pushf
stos
test
adc
adc
rcrb
sbb
enter
test
dec
pop
adc
cmc
push
sbb
loope
add
xchg
sbb
rorb
add
lods
mov
fiaddl
push
addl
and
bnd
xchg
sbb
inc
adc
std
sub
or
push
je
xor
out
mov
int
or
adc
dec
jmp
inc
adcb
and
mov
aam
inc
mov
addr16
movsb
popa
cmpsb
in
mov
imul
add
stos
insb
je
mov
aaa
xchg
inc
xchg
and
sti
jns
xor
int3
and
mov
or
jp
in
or
xlat
add
dec
push
xchg
push
andb
sbb
loop
je
fwait
nop
ret
ret
hlt
mov
pop
sub
in
inc
cmp
testb
push
icebp
adc
lahf
dec
scas
lock
lret
in
dec
cltd
dec
aaa
xchg
inc
test
imul
ss
xchg
mov
mov
lds
adc
out
xchg
shrb
scas
add
pop
inc
iret
and
lret
cmp
cli
aaa
rclb
push
stc
adc
sahf
mov
sbb
push
outsl
shr
movsl
jmp
and
jo
imul
outsb
loope
mov
shr
cmp
pushf
loop
ror
mov
popa
push
lret
xor
aad
and
int
shll
mov
sbb
cmp
add
jns
jge
ljmp
mov
rorb
lods
notb
mov
repz
in
dec
and
mov
addl
out
aas
cld
call
stos
outsl
push
fldcw
or
jno
lods
jl
mov
sbbl
or
add
mov
xchg
lret
cltd
xchg
data16
pop
pop
lock
arpl
lcall
fadd
mov
adc
dec
inc
push
push
add
into
sbb
mov
cltd
mov
and
fwait
and
xlat
imulb
movsb
mov
mov
js
cmp
outsb
outsb
xchg
enter
into
sub
or
int
mov
into
push
sbb
loopne
xchg
stc
inc
les
pop
jmp
inc
js
mov
xchg
bound
adc
cltd
into
test
or
lret
insl
pop
ds
loopne
jp
sbb
inc
sub
fimull
mov
mov
push
jle
add
cmp
rcrl
add
mov
rcrb
mov
jmp
popa
xor
pop
inc
stos
ret
adc
add
inc
repz
arpl
jae
pop
mov
fxch
pop
jb
loope
out
push
dec
xor
adc
es
ret
xor
xchg
inc
aam
and
mov
cmc
dec
testb
jmp
dec
adc
fildl
dec
aas
arpl
repz
out
inc
pop
lds
scas
clc
jmp
cwtl
pop
fsubrl
sub
dec
movsl
outsl
and
adc
arpl
push
push
adc
sub
ja
fdivs
into
leave
jmp
int
adc
xor
out
cmp
lock
jbe
mov
and
fstpt
xchg
lea
scas
push
outsb
sbbb
out
arpl
movb
cmp
mov
int
push
sub
push
add
lds
push
or
mov
clc
push
std
das
int
dec
and
es
scas
insb
jmp
mov
pop
and
lds
inc
add
xchg
call
testb
outsb
cltd
mov
movb
pushf
jge
xchg
daa
movsb
fisubs
and
sub
fdivrp
xabort
pop
mov
shlb
jmp
hlt
xlat
test
xchg
sti
fs
mov
sbb
add
xchg
jle
je
xchg
push
mov
fs
jge
sub
in
and
inc
mov
sub
shr
dec
push
jmp
fsubp
cli
fs
xor
dec
das
jg
jecxz
add
popa
pop
sti
cmp
xchg
jbe
mov
sbb
xchg
sbb
or
mov
and
int3
lahf
decl
xchg
sbb
cltd
out
ja
into
push
mov
int
leave
push
xchg
call
mov
xchg
adc
sbb
orb
sbb
rorl
xor
cwtl
pushf
cld
mov
inc
aaa
in
jle
mov
xchg
or
stc
in
xor
jmp
push
mov
or
cmp
data16
popl
dec
add
mov
sbb
mov
inc
cmpl
js
push
adcb
es
jmp
sbb
aad
dec
mov
sbb
sub
std
dec
idivl
xchg
daa
sbb
flds
mov
mov
or
and
sahf
mov
pop
cmp
arpl
or
fs
fmulp
push
lahf
sub
dec
pushf
dec
ja
fistpll
inc
xor
test
pop
scas
mov
int
ss
js
mov
ljmp
push
fisubs
pop
cmp
sbb
stos
push
insl
data16
or
rcr
outsl
bound
push
les
fildl
sbb
in
jno
push
cwtl
es
sub
movsl
roll
icebp
lahf
ret
sub
mov
sahf
mov
scas
mov
testb
mov
add
movsl
jb
imul
cltd
dec
or
pusha
fistpl
imul
pop
mov
into
hlt
adc
aaa
pop
mov
mov
xor
out
xchg
sti
mov
sub
mov
jo
sbb
dec
xor
ja
fistps
mov
xchg
jae
dec
mov
sub
stos
adc
mov
mov
adc
xor
dec
cmpsl
aaa
fisttps
jbe
sub
adc
adc
xor
lock
jne
mov
in
stos
and
jb
xchg
movsb
test
fstps
push
jmp
ret
cld
hlt
test
inc
hlt
aad
ret
xor
mov
push
add
aas
and
sbb
call
jne
mov
test
cltd
test
in
mov
xor
shrl
inc
push
xchg
addr16
xor
jb
add
add
add
or
in
leave
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
aam
loopne
jl
dec
pop
jl
popa
sub
cmp
cs
hlt
shlb
xlat
nop
fwait
mov
sbb
push
popf
pushf
fwait
push
sub
repnz
icebp
xrelease
adc
mov
mov
pop
and
cwtl
or
cmp
fcomip
cmp
pusha
arpl
rclb
loope
iret
and
je
in
push
jb
lea
fsubrs
jno
stos
mov
mov
mov
ds
test
testb
push
es
xchg
add
jp
shlb
fsubl
jo
movsw
in
xchg
daa
dec
fmul
pop
jae
push
adc
test
imul
in
clc
rcr
jmp
xchg
push
outsl
jge
cs
popf
mov
xor
mov
mov
xchg
pop
push
stos
sahf
add
into
sub
pop
and
mov
dec
mov
lahf
push
out
pop
je
add
push
mov
or
out
sbbl
lret
sbb
daa
imul
xor
arpl
jp
cmp
cmc
adc
jns
pop
push
inc
add
mov
add
xchg
decl
insb
sbb
fldcw
mov
or
sbb
cmp
push
inc
call
addr16
xchg
inc
pushf
sub
decl
push
add
cmc
jne
dec
push
dec
rorb
sub
daa
add
sahf
mov
push
inc
cmp
daa
addr16
fdivrs
and
jb
lret
neg
mov
push
pop
pop
add
andb
push
mov
mov
mov
out
popa
cli
out
fs
and
mov
adc
enter
pusha
mov
cmp
or
test
push
outsb
push
sbbl
mov
mov
mov
call
push
pop
xor
sbb
jecxz
lods
jo
jb
cwtl
push
cmpsb
jnp
fadds
cmp
int3
ds
rcrl
mov
sbb
inc
pop
shll
dec
inc
inc
loopne
js
and
jnp
movsb
xchg
outsl
jp
xchg
jmp
inc
scas
test
push
int
cld
aam
insb
jg,pn
jge
movsl
stos
out
adc
insb
jmp
xchg
mov
fstp
push
xor
lea
adc
insl
cmpsl
scas
mov
push
mov
xchg
mov
mov
or
idivb
inc
mov
ret
mov
mov
pusha
scas
xchg
out
es
jnp
test
sub
jp
pop
int
or
push
mov
mov
jbe
out
cmp
and
popa
cmpsb
adc
shl
mov
mov
in
dec
outsb
js
sub
scas
lods
insl
imul
call
icebp
repnz
mov
orb
push
fstl
lea
or
xor
ficompl
hlt
not
cmp
call
pop
ja
jbe
stos
and
fmul
dec
jno
and
test
int
xlat
iret
adc
push
fmuls
sub
ljmp
sub
jnp
mov
ja
sahf
dec
dec
lock
aaa
sbb
fidivs
mov
clc
adc
inc
adc
adc
stos
push
push
cmp
lods
sbb
in
fistpl
add
sub
dec
stc
stos
xor
jle
pushf
clc
outsb
jns
subl
lea
push
int3
outsb
jg
fwait
mov
orl
cs
push
std
leave
cmovb
and
lds
jge
cmp
inc
imul
or
push
xor
cmc
ficompl
in
mov
pusha
inc
jne
notl
sub
dec
xor
mov
push
cld
and
xchg
scas
sbb
mov
fldpi
std
or
pop
inc
test
mov
out
test
jo
lods
inc
mov
aad
mov
sti
inc
push
push
pop
jb
lods
imul
inc
mov
cmpsb
sti
inc
cmp
sarl
aaa
idivl
xchg
or
pop
mov
mov
add
mov
pop
dec
add
cld
cmp
je
xor
jb
cmpsb
xchg
xor
cmp
pusha
sub
inc
xorb
incl
and
fcomps
push
cwtl
xlat
mov
int3
push
incl
roll
dec
mov
mov
sub
mov
xchg
and
stos
push
adc
in
andb
out
loope
vmwrite
adcl
fsts
and
into
rorb
roll
push
aaa
ljmp
inc
sub
mov
xor
aam
ret
mov
inc
dec
cmp
stos
add
or
sbb
lret
repnz
jmp
mov
mov
xchg
aaa
mov
mov
fld
xor
sbb
push
outsl
sti
and
rolb
andl
movsb
imul
sbb
je
lds
sahf
int
cmp
popf
push
fwait
push
sarl
and
test
adc
outsb
mov
into
mov
out
cmc
and
cld
fstps
jge
xor
bound
add
scas
sbb
xlat
repz
jns
jnp
jg
cmp
out
divb
xchg
mov
nop
aam
fildll
push
jmp
add
fwait
or
aam
idivl
dec
dec
stos
xor
sub
mov
sbb
pop
out
jge
xchg
jno
pop
inc
fstpt
mov
shlb
inc
add
mov
stos
or
inc
pop
add
sub
es
jbe
xchg
dec
jp
insl
negl
pop
les
fmuls
sbb
sti
jnp
flds
sub
xchg
fnsave
popf
mov
or
xorb
lret
fwait
lahf
dec
out
mov
stos
scas
imul
adc
pop
mov
sahf
push
shlb
std
test
cmp
arpl
xchg
sbb
daa
mov
mov
das
loope
xchg
iret
iret
push
adc
mov
xor
jb
push
inc
cmpsl
ret
in
sbb
out
mov
xor
and
or
shlb
sub
jbe
and
xchg
rol
mov
mov
cmp
ret
repnz
mov
out
jne
inc
dec
mov
push
test
rclb
adc
insl
xor
push
inc
mov
adc
mov
fcmovb
sub
push
int3
mov
loopne
jno
push
outsw
add
adc
jo
jne
xchg
jbe
ret
mov
std
ret
repz
into
push
sbb
mov
mov
push
je
popf
jo
cmpsb
cmp
jge
shrl
adc
push
sub
nop
pop
sub
jo
adc
arpl
xchg
into
xchg
jbe
nop
ret
jno
mov
add
out
pop
lret
cmp
fisubrs
cmc
es
adc
mov
sahf
pop
xchg
faddl
je
sub
mov
loop
in
sti
iret
cltd
and
jb,pn
cmpsl
iret
icebp
ds
inc
fdivs
popl
fmull
mov
push
mov
repz
cli
push
out
cmp
aaa
cwtl
pop
pusha
jno
jns
cmp
pop
imul
pop
cmp
out
push
add
pusha
ficoml
hlt
and
mov
stc
es
or
fnstcw
xor
pop
jne
fisubl
test
lods
mov
fpatan
cmp
sub
int
insb
push
dec
mov
stos
jle
loopne
add
ficomps
test
push
inc
insl
inc
or
jbe
test
clc
mov
mov
es
push
sahf
add
dec
add
dec
or
shl
leave
popf
and
mov
mov
in
mul
add
dec
cmp
pop
mov
int3
inc
push
loope
jmp
pop
lock
cmp
mov
and
cmp
mov
cmp
cmp
pop
jmp
mov
and
lods
pop
cmp
call
sub
mov
adc
cmpsl
clc
fs
push
inc
fs
scas
dec
adc
aas
stos
mov
popl
push
aam
sub
lcall
jg
cmpsb
stos
and
in
push
cmp
mov
pop
and
xlat
faddp
inc
stc
mov
sub
in
negl
aaa
fstp
sbb
mov
rcrb
push
jnp
movsb
add
xchg
mov
cli
call
sbb
adc
jmp
test
sbb
xchg
loop
mov
cmove
push
cld
mov
pop
dec
mov
ja
xchg
shl
lret
cmp
mov
fmulp
cmp
mov
xor
or
xchg
mov
cmp
or
push
xchg
fisubs
mov
jle
sbb
js
mov
cmc
jmp
mov
sbb
sahf
out
popf
imull
pop
fwait
rcr
jge
pop
ret
icebp
cmpb
orps
ja
int3
lahf
or
pop
jl
ljmp
or
xchg
dec
fbstp
pop
std
add
es
mov
in
aas
jg
adc
popf
mov
pop
mov
rorl
and
fidivrs
mov
pop
mov
mov
call
aad
fcmovnbe
push
and
out
pop
imul
adc
hlt
inc
pop
push
inc
or
mov
inc
outsl
cmpl
fwait
mov
pop
xor
ja
idivb
stos
xchg
mov
lcall
adc
negb
adc
add
in
cmp
push
sbb
popa
insb
jne
mov
mov
test
insb
fcoml
add
push
mov
xorl
rorl
xchg
fsincos
and
xor
mov
xchg
or
sub
icebp
or
inc
int3
xchg
dec
xchg
and
negb
inc
jecxz
fcoms
jmp
pop
repnz
adc
or
call
aas
test
pop
add
adc
push
pop
jg
cltd
lret
lret
push
fstps
push
stos
stc
sbb
pop
dec
sbb
and
jg
sahf
call
lods
aam
clc
popf
xchg
cld
jnp
jle
xor
mov
mov
adc
in
scas
cli
aam
xorb
fdivs
in
xor
sbb
mov
lods
lds
clc
mov
dec
mov
and
shrb
jo
sbb
xor
lea
icebp
add
call
stc
pop
mulb
clc
int
mov
ret
daa
jne
mov
lds
and
movsb
or
scas
cmp
inc
jge
jle
into
cmp
pop
mov
movsl
stos
fisttpll
loopne
mov
out
sbb
or
cmp
aaa
jmp
ljmp
jecxz
in
mov
inc
adc
mov
add
aad
and
pop
sbb
xor
pop
xlat
jbe
xor
pop
cld
int
inc
adc
pop
cmpsb
and
test
das
pusha
shrl
imul
rolb
adc
popf
inc
sub
je
iret
xchg
inc
lret
jo
aam
add
popa
data16
cs
lret
jg
mov
addr16
xor
pop
inc
inc
push
sub
addr16
das
and
dec
out
cmpsb
or
lsl
lret
sbbb
stos
int
hlt
lret
cmpsl
ss
mov
int
mov
sub
pop
dec
add
pushf
mov
xchg
and
xor
daa
jnp
sub
mov
ds
add
std
les
shrl
repz
add
ret
mov
or
push
mov
out
sbb
movsl
jle
jb
fiadds
out
into
rolb
sbb
cld
cmc
jae
inc
push
and
sbb
ret
lret
fsubs
arpl
push
xor
push
enter
out
mov
andl
mov
push
mov
add
mov
ret
add
lods
push
cmp
mov
add
adc
pop
mov
inc
lret
mov
sub
fdivrs
out
push
popa
jae
lret
jnp
and
xor
add
std
insl
leave
sub
adc
repz
mov
sub
jmp
add
sbb
adc
jo
ljmp
clc
add
dec
rclb
rorl
bound
lea
rcrl
jno
jo
shl
rcll
push
mov
int
rclb
jne
cli
in
out
jge
or
push
aad
cmp
lods
dec
aaa
dec
fdivrs
shll
pop
das
mov
cmp
in
mov
push
fwait
cli
lret
outsb
icebp
imul
jmp
fs
loope
imul
inc
mov
or
lock
insb
sub
jecxz
mov
push
pop
test
cmc
bnd
cmp
ljmp
enter
je
in
lcall
pop
js
aad
stos
add
push
lret
sub
int
enter
dec
data16
ja
inc
mov
mov
adc
stc
inc
and
fs
jb
and
push
js
sarl
repnz
lret
and
arpl
jns
sub
inc
jmp
add
scas
mov
call
insb
add
loopne
push
sub
sbb
leave
jle
aad
or
mov
cmp
mov
ja
lret
or
mov
stos
mov
xor
sbbb
lahf
pop
cld
in
int
fldenv
or
mov
je
rcll
sbb
and
call
enter
or
sbb
xchg
mov
fnsave
sahf
sub
hlt
cmc
mov
dec
scas
inc
mov
sbb
daa
mov
lods
mov
xor
dec
sbb
push
push
jne
mov
mov
dec
ret
iret
int
dec
call
loope
lds
jo
popf
mov
js
out
xor
int
mov
addr16
cmpsl
sbb
ljmp
mov
pop
aas
cmpsl
movsl
and
cmc
outsb
int3
mov
push
push
dec
shlb
lock
int3
popf
dec
repnz
int
inc
mov
punpckldq
push
mov
inc
xor
fistl
sbb
pop
fsub
shll
mov
mov
es
insl
pop
lds
in
mov
aam
ljmp
inc
leave
xor
repz
jne
xor
dec
jnp
xlat
inc
mov
sbb
pusha
ljmp
insl
xchg
inc
test
lret
inc
inc
add
pop
mov
push
push
adc
mov
cltd
xchg
std
shlb
scas
fdivrl
icebp
pop
cwtl
pusha
fimuls
pop
add
adc
ss
cld
cld
jae
and
cmp
out
fistl
out
test
pop
call
popa
dec
sbb
xor
call
ss
std
mov
test
mov
outsl
jle
jns
jns
dec
addb
pop
sti
shlb
add
mov
xchg
stos
pusha
mov
ret
testl
out
push
in
add
pushf
sbb
mov
outsl
inc
pop
lea
fsubs
out
mov
idiv
loope
cli
js
push
popa
ucomiss
call
fcompl
push
or
inc
fs
sbb
push
outsb
sub
sbb
sbb
sub
push
wrmsr
loopne
repz
push
stos
mov
ja
cltd
mov
jmp
xor
xchg
sbb
cmp
ljmp
adc
loope
je
cltd
sbb
inc
sarl
add
pop
gs
ret
fisttpl
in
mov
cmp
sub
dec
ja
mov
push
lret
sub
shrb
xchg
push
xchg
addr16
pop
sbb
ja
inc
and
cwtl
sti
mov
stc
out
test
lods
rclb
arpl
sub
dec
test
lds
orb
test
mov
repnz
imul
add
call
lahf
and
lcall
dec
mov
ja
pop
in
test
mov
lock
pushf
add
fistpl
fsts
ss
mov
inc
jbe
inc
roll
repnz
cmc
and
fwait
cmpl
push
outsb
call
arpl
push
loop
dec
push
lret
cmp
stos
sub
pop
es
and
xchg
loope
sbb
cs
push
loop
push
mov
jb
pop
dec
mov
in
test
int3
mov
js
lcall
mov
cmpsl
adc
movsb
jae
test
push
and
mov
push
inc
incb
push
test
sarl
xor
cmp
sub
mov
add
xchg
pop
pop
lds
ret
lds
fisubrl
pop
jmp
jge
sub
sub
sbbb
xchg
pop
adc
xor
or
ror
dec
subb
loop
inc
rcrl
dec
jno
loopne
gs
bswap
cmp
fdivr
fcoms
xchg
jp
out
and
loopne
hlt
adc
stc
js
insb
inc
cs
imul
sbb
fs
sbb
mov
js
sbb
test
aad
int3
jno
dec
inc
jmp
or
cmpsb
mull
data16
xor
cwtl
inc
sbb
std
add
inc
add
adc
aaa
out
scas
out
and
and
stc
cltd
lcall
aad
lret
inc
movsl
xchg
fbld
scas
inc
mov
ret
and
movl
popa
adc
test
lods
or
lods
jb
out
loop
push
xchg
xor
sbb
xchg
mov
fsubp
fldl
ffree
mov
mov
lret
cli
jnp
sbb
pushf
adc
or
rclb
aad
jne
gs
lock
jns
xchg
mov
jbe
inc
pop
fstpt
sub
pop
lea
mov
mov
adc
pop
les
or
or
add
in
jmp
lahf
jecxz
and
and
lret
xchg
mov
xchg
xchg
cmc
nop
mov
add
mov
outsb
sbb
xor
push
pop
add
stc
mov
push
inc
push
out
inc
popa
jmp
jge
sbb
adc
push
xor
bound
sub
cwtl
push
addr16
push
pop
push
sub
std
add
mov
out
mov
mov
lcall
cmp
divl
sub
leave
mov
lret
outsl
test
xor
ljmp
push
jecxz
sbb
lret
jg
aam
imul
xchg
insl
add
cld
clc
dec
lret
and
push
cmp
jl
fwait
inc
xor
lds
mov
xor
dec
imul
shr
push
gs
add
cli
int3
adc
or
xor
add
sub
jl
hlt
shlb
dec
sbb
sub
xor
adc
or
sbb
dec
cmp
imul
in
pushf
jge
imul
arpl
in
psraw
flds
cmpsb
test
sbb
repnz
push
xor
insb
pop
popa
mov
push
inc
lea
mov
adc
mov
sub
shlb
mov
sub
loop
push
aad
mov
arpl
mov
cmpsb
pushf
sbb
xor
mov
ficoml
aam
sub
sahf
push
push
clc
push
out
test
inc
add
adc
arpl
jmp
inc
lock
addr16
jb
pop
sbb
xor
mov
popf
pusha
sub
push
inc
aad
insb
andb
in
pop
mov
lret
loop
dec
lret
mov
jle
shll
stos
adc
add
mov
in
mov
pop
jae,pn
scas
cmovg
push
xchg
mov
int3
int3
xchg
jnp
mov
fstpt
shrl
rcll
mov
pop
push
data16
add
test
imul
jb
in
adc
adc
cmp
xchg
push
call
into
movsl
mov
pushf
dec
inc
mov
inc
mov
adc
mov
xlat
repz
dec
rolb
mov
add
cwtl
andb
fdivrl
test
int3
shlb
jge
test
inc
add
ss
test
insb
test
in
loop
xlat
es
in
test
xchg
aaa
sub
out
outsl
lea
daa
outsb
in
mov
mov
push
adcb
push
leave
clc
lods
in
addr16
mov
and
fcoml
movsb
jo
xchg
arpl
ds
adc
dec
sbb
add
lcall
in
movsl
cmp
sti
mov
aaa
mov
pop
loop
outsl
mov
ljmp
cld
adcb
cli
fnstcw
lea
fists
mov
dec
cwtl
dec
xchg
out
cli
jge
push
in
pop
rcrb
pushf
sbb
cmp
clc
lea
pop
jne
cld
sub
xor
roll
sbb
dec
sub
cld
push
mov
jno
or
pop
inc
in
cmp
aas
mov
mov
or
repnz
mov
das
pop
cmc
arpl
mov
stos
faddl
stc
jp
scas
add
loop
scas
sub
mov
jo
vmwrite
lret
inc
or
push
js
rcr
test
fwait
movsl
xlat
lret
pop
in
push
inc
push
mov
rolb
add
mov
jge
jmp
aas
sub
daa
scas
jle
cli
adc
jle
cwtl
push
std
xchg
outsb
rdtsc
lods
std
test
cmp
icebp
repz
clc
add
and
sbb
stos
xor
stc
inc
jno
sbb
sahf
jmp
stc
sub
call
pop
sahf
dec
es
test
sbb
sub
scas
pop
adc
cmp
stos
pusha
lret
aas
inc
xchg
imul
insl
outsl
dec
push
bound
and
pop
sub
test
subb
imul
stos
aas
add
in
xorb
sar
xor
jl
das
outsb
lahf
ljmp
and
sub
push
push
pushf
in
mov
cmc
jbe
sub
sbb
add
push
lret
fldln2
insb
mov
sub
mov
jle
push
mov
jo
sbbl
imul
lcall
ficoms
pop
loop
and
dec
add
cmp
shll
sub
lods
inc
sub
pop
hlt
or
sahf
inc
out
add
jae
movsb
jbe
mov
jbe
cli
mov
xchg
mov
mov
lret
pop
idiv
clc
dec
loope
mov
dec
xor
cmp
xchg
mov
out
and
dec
cli
dec
add
je
in
in
insl
pusha
push
adc
adc
in
push
inc
lods
sub
mov
outsb
lretw
mov
insb
dec
cmc
sub
shl
dec
jge
cmpb
roll
insb
pop
cltd
loopne
movsb
or
cli
sbb
test
sub
cli
dec
fcoml
push
ds
push
movsw
out
dec
scas
ss
mov
aad
sahf
stos
xchg
mov
mov
out
inc
and
mov
mov
lea
and
pop
ja
in
and
stos
push
pop
cmp
jge
mov
pop
mov
mov
sbb
dec
clc
es
mov
psrld
adc
push
mov
outsb
test
xor
repz
add
subb
mov
add
jecxz
pop
arpl
mov
cmpsl
mov
mov
test
mov
jnp
add
push
gs
lret
test
pop
ljmp
ror
loopnew
testl
jg
lret
xor
or
cmc
or
adc
mov
sbb
xchg
mov
imul
push
fidivl
arpl
cli
nop
lock
in
mov
or
push
sbb
pop
popa
adcb
mov
mov
sub
xchg
cmp
xchg
je
fsubl
test
adc
xor
faddl
sub
sub
mov
rorl
xchg
pusha
mov
mov
jecxz
insl
lahf
fdivl
inc
popa
fistpl
sub
scas
cs
dec
xchg
xchg
fiadds
add
xor
and
fisttpll
pop
sub
push
xchg
jno
cltd
add
fistl
xchg
out
sti
mov
cli
mov
add
fists
push
nop
aam
pop
jl
stos
mov
sbb
jl
aam
mov
jle
push
mov
shlb
mov
fdivrl
cmp
or
imul
xor
and
stc
lods
and
sub
pop
sbb
sti
bound
sbb
lret
fcoms
movsb
test
jecxz
pop
cmpsl
sbb
lahf
jle
cmp
test
loopne
jnp
fstps
sbb
sub
outsl
jae
aad
mov
sbb
mov
orl
fsubrl
push
test
sbb
imul
sub
orb
adcl
cs
outsl
lea
fwait
pusha
mov
or
sarb
repz
sbb
test
pusha
shl
test
fs
push
mov
xchg
push
jns
lahf
jb
imul
cmp
stos
test
push
repz
flds
jecxz
movsb
sub
adc
pop
sub
test
push
fs
lret
repnz
fnstenv
sub
sub
ljmp
xchg
hlt
testl
mov
movsb
inc
push
xchg
in
xchg
arpl
xchg
daa
inc
push
es
or
mov
cmp
cmp
mov
outsl
sub
test
lcall
fisubs
mov
icebp
addb
call
int3
xchg
pusha
xchg
ret
sti
adc
aad
pop
lea
popf
daa
in
lea
mov
call
or
das
pop
pop
cmpl
fildll
jae
jp
xchg
sbb
icebp
int3
inc
out
fsub
je
xor
xor
stos
scas
mov
fwait
int
xor
push
xor
inc
in
sbb
es
cmp
cli
insb
mov
push
hlt
pusha
xchg
push
dec
xchg
mov
pop
xchg
jnp
push
xchg
jbe
cmp
mov
stc
sbb
ficompl
mov
sub
clc
inc
pop
subb
pop
mov
stos
sbb
arpl
test
jg
jnp
call
scas
add
pop
or
out
lods
jl
bound
bound
cmp
adc
pop
cltd
jnp
sbb
push
imul
mov
xor
sahf
addr16
aas
lock
lds
add
push
leave
inc
push
in
loopne
jae
hlt
add
insb
mov
ljmp
iret
jg
loopne
cmc
cmpsl
and
pop
pop
sub
ret
jmp
inc
in
or
xchg
inc
fnsave
pop
xor
ret
push
mov
mov
add
mov
imul
shrb
nop
scas
ds
xchg
jns
cmpb
cmp
mov
ja
push
addl
rol
jne
cs
jbe
xor
stc
xchg
ja
bound
out
sbb
jb
mov
aad
xchg
cltd
pop
enter
sahf
int3
shlb
inc
adc
adcl
xchg
das
rcrb
arpl
dec
hlt
cmc
or
cmp
add
mov
in
add
mov
sbb
xchg
mov
jo
inc
add
cld
mov
push
mov
outsb
repz
mov
dec
mov
sbb
jo
xor
mov
mov
ds
mov
sbb
xlat
or
dec
outsb
fisubl
movsb
pop
xchg
xchg
hlt
mov
aas
jo
scas
push
inc
mov
push
sahf
sti
insl
in
cmp
xchg
pop
sub
jmp
lret
push
mov
inc
xor
mov
call
popf
and
xor
fstpl
test
in
mov
xor
jae
andb
jl
das
add
jl
adc
imul
jg
addr16
and
in
push
push
lea
push
out
push
mov
sub
leave
mov
es
or
jne
shrb
mov
adc
leave
call
ss
push
mov
sub
leave
mov
jns
push
jmp
adc
cmp
pop
cld
mov
loope
pop
xor
jp
mov
jmp
mov
stos
sub
loope
negl
add
sub
xchg
subl
jb
mov
xor
cltd
cmp
xchg
enter
into
dec
stos
int3
cmp
sbb
mov
cmp
faddl
lds
shrl
mov
inc
pcmpeqb
mov
adc
push
xor
inc
inc
lret
cltd
test
leave
cmc
mov
icebp
aad
add
fbstp
mov
mov
and
imul
sub
ljmp
out
out
sbb
scas
loopne
mov
add
xor
nop
and
test
nop
inc
or
sarb
cmp
hlt
pop
push
jb
fdivl
jl
clc
inc
ja
dec
sub
xchg
hlt
out
pop
adc
xor
rclb
insl
jns
notl
daa
cmp
fsts
ret
inc
xchg
xlat
jo
cltd
stos
cmp
xor
push
leave
inc
jo
mov
sahf
push
inc
loopne
mov
addr16
fs
jl
loopne
fs
xchg
sub
sub
sub
adc
cmpl
xor
inc
lcall
jl
sti
or
ret
test
mov
aaa
mov
repz
mov
pop
stc
xchg
jno
idivl
or
jle
shr
mov
jge
xor
imul
shlb
ret
sbb
cli
iret
stos
lea
xor
and
sbb
pop
rcl
xchg
nop
mov
popa
mov
add
and
jmp
and
lcallw
ja
loop
mov
out
push
add
stos
jne
repz
and
mov
or
pop
ss
or
stos
mov
cli
add
out
call
std
xchg
rol
stos
dec
rcrb
imul
push
dec
test
or
cld
les
inc
mov
xchg
roll
mov
lahf
cwtl
xchg
push
insb
dec
int
bound
fisttpl
pop
je
dec
push
mov
in
sub
or
sti
jle
sarb
scas
dec
loopne
pop
and
xlat
xor
lods
dec
mov
pop
and
mov
lods
add
jmp
dec
mov
adc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
push
ja
and
pop
jl
dec
add
icebp
scas
cmp
inc
xchg
xchg
jmp
sarl
push
sub
or
pusha
mov
jecxz
lret
jne
xchg
sarl
push
xor
jne
in
fs
mov
jnp
mov
imul
cmp
stos
jbe
xchg
icebp
push
push
or
testb
mov
add
dec
insl
jg
aas
mov
cmpsl
adcb
xchg
jmp
aaa
xchg
stos
cld
xchg
stos
xor
sub
mov
inc
lock
outsb
dec
xchg
loop
pop
mov
push
and
lret
cld
stos
push
mov
dec
fdivs
fsubrl
mov
jbe
lahf
arpl
sub
repz
aad
jo
mov
xlat
sub
mov
mov
pusha
adc
mov
push
movsb
inc
xor
mov
mov
aad
std
lahf
ficompl
cmp
xor
jns
repz
std
xor
stos
dec
push
cld
es
mov
xor
mov
mov
ror
cmp
fwait
mov
inc
shrb
insb
mov
ljmp
add
rcll
or
xor
dec
cmp
mov
dec
adc
mul
arpl
push
mov
lock
push
sub
cmc
lret
leave
gs
out
push
jno
xor
fidivrl
popf
push
jb
lea
jne
test
rorb
or
ds
mov
sub
inc
pop
stos
out
addb
mov
sub
mov
mov
loop
test
sbb
outsl
pusha
or
mov
imul
xchg
mov
lods
cli
fisttps
pushf
and
addr16
push
jbe
mov
xchg
adc
dec
imul
popf
mov
daa
popa
jle
in
sbbl
nop
icebp
imul
jns
push
fsincos
sub
push
push
imul
jmp
cmp
leave
cli
inc
jg
push
cmp
fisubrs
push
cmpsl
leave
xchg
aad
jae
cmp
in
ret
mov
sbb
push
lock
push
mov
xor
ficoms
or
ret
mov
mov
out
daa
dec
mov
jbe
daa
fwait
jnp
jg
bound
push
or
or
pusha
cmp
scas
js
mov
and
mov
or
mov
cmp
inc
insb
mov
lods
rcrb
ja
cmpsb
fists
sbb
inc
pusha
or
mov
aaa
sbb
iret
push
fcmovbe
inc
mov
xor
cmp
push
loope
mov
xor
mov
pop
adc
and
out
ja
pop
es
cmpsl
pop
mov
jbe
popf
sahf
cld
mull
scas
stos
sub
ja
or
stc
cmp
pop
sbb
cmp
leave
out
adc
inc
das
gs
or
pop
fidivs
sbb
jnp
sub
push
js
fldl
xor
adc
sub
js
sub
das
lods
imul
sub
lock
ds
sub
mov
push
test
jmp
dec
lret
bound
jp
mov
jns
add
inc
into
pop
dec
jmp
fdiv
lret
cmp
shlb
adc
mov
lea
outsl
inc
lret
data16
enter
popa
add
dec
clc
mov
add
and
cmp
cld
mov
cmp
inc
fstps
pop
fldenv
popf
xor
cmpsl
add
sahf
cld
or
mov
lahf
cmp
cltd
cltd
lock
push
jnp
negl
mov
lds
loop
test
clc
inc
das
push
lods
cld
dec
fs
lahf
cmp
mulb
push
cmp
popa
lds
and
mov
push
or
or
and
js
int
shlb
dec
jg
movsb
insl
jo
push
pop
in
das
fs
mov
imul
testb
repnz
jge
mov
jge
into
pop
jns
push
in
cld
mov
mov
rol
push
sub
or
aaa
xlat
outsb
int
add
sti
mov
inc
pop
pop
jg
fsubs
add
mov
sahf
dec
and
xor
sub
mov
lcall
imul
and
pop
or
arpl
sub
cwtl
ja
jns
sbb
sahf
mov
daa
push
sbb
iret
push
out
jecxz
test
mov
xor
shlb
push
or
jg
es
xor
mov
les
dec
popa
dec
mov
adc
jnp
popa
bound
lods
mov
into
jbe
mov
inc
cmp
movsl
stc
pop
jecxz
sbb
mov
add
dec
pop
or
bound
arpl
sbb
in
fs
or
sbb
push
cltd
inc
andb
hlt
int3
jo
jbe
scas
scas
test
gs
mov
das
insl
les
jae
mov
jp
xchg
push
or
test
inc
addl
or
sbb
ss
mov
push
xor
mov
jb
jns
mov
test
inc
dec
xchg
inc
jp
arpl
movsl
and
and
in
mov
test
fwait
jmp
add
sbb
cs
hlt
adc
push
cmp
xor
and
mov
adc
ret
loop
mov
lock
scas
test
nop
jno
xor
and
rcr
fnstsw
and
pushl
or
aad
sbb
sarl
bound
jmp
test
loopne
sbb
insl
mov
mov
adc
cli
mov
mov
sbb
es
push
dec
push
mov
out
cmp
jp
mov
or
sub
and
push
push
push
pop
aaa
scas
cmp
or
icebp
loope
enter
gs
lock
or
push
jmp
xor
sbb
adc
stos
mov
repz
aaa
mov
adc
push
inc
jae
cltd
cwtl
mov
and
jge
dec
xor
pop
jmp
jnp
imul
test
rorl
pop
adc
add
fsubs
mov
enter
add
fdivr
adc
incl
mov
push
xor
adc
or
jl
xor
and
mul
repnz
fildll
scas
inc
sub
test
cmp
movsl
out
mov
adc
inc
lret
push
xor
sub
dec
lret
push
or
adc
das
enter
dec
jae
fwait
xchg
js
xor
mov
cltd
lret
mov
push
loop
loopne
mov
dec
xchg
xchg
rcll
rorl
addb
mov
sbb
push
outsl
inc
or
sbb
cmp
int
push
mov
pop
imul
mov
cmp
sub
je
gs
mov
mov
cmpsb
mov
clc
sti
sti
incl
pop
fldz
add
cmc
push
lea
add
sub
xchg
repz
inc
iret
sub
inc
outsl
jne
push
loop
sbb
andl
dec
js
outsl
mov
ficoml
repz
sbb
mov
imul
mov
rclb
pop
out
arpl
dec
fmull
cmpsl
mov
sbb
loop
mov
imul
adc
mov
aam
sub
jge
mov
cld
jno
leave
cmp
fnstsw
add
cs
jp
test
pop
rcrl
jge
inc
xchg
cmpsl
ucomiss
cld
mov
pop
lock
push
or
mov
xor
mov
cs
pop
dec
pop
push
pop
mov
jne
clc
xor
sub
ljmp
push
ss
mov
cmp
xchg
cmpsb
repz
idivl
aas
test
or
pop
adc
mov
pop
les
sbb
and
stc
xchg
xlat
inc
in
lock
les
sbb
mov
iret
cmp
scas
xor
push
scas
cmp
mov
dec
xchg
out
es
out
xchg
sub
scas
mov
adc
adc
ret
cmpl
fs
mov
mov
cmp
add
or
jge
repnz
xor
pop
dec
imul
divl
nop
cmp
add
xlat
lahf
add
cmp
mov
dec
cmpsb
ret
into
cs
pushf
jge
call
enter
jno
in
loop
mov
fwait
mov
xchg
ret
cwtl
xchg
rorb
stc
repnz
push
outsl
jo
outsl
lds
loopne
dec
mov
xor
sbbl
cltd
scas
hlt
aaa
out
out
dec
ja
fcmove
cmp
lock
jp
adc
leave
mov
sub
jbe
cmp
imul
mov
shll
scas
mov
nop
xlat
inc
shrb
adcl
xor
xor
popf
dec
sbb
mov
cmc
pop
add
adc
pop
sub
cmpsl
sbb
lret
xlat
cmpb
repz
add
subb
rcll
adc
ss
xor
mov
xchg
mov
and
or
ja
mov
pop
movsl
enter
aaa
std
or
lock
sbb
inc
mov
and
mov
sti
insl
fs
cld
add
cwtl
adc
and
mov
sbb
sub
jl
test
rorb
aas
pop
lds
inc
cmp
inc
out
call
xchg
or
cmpsb
mov
aad
jmp
xchg
sarl
mov
mov
sbb
std
ret
sub
mov
and
and
xor
es
mov
jecxz
fsubl
dec
daa
call
in
xor
xor
es
xchg
and
jno
mov
and
call
push
mov
fmuls
loopne
mov
push
add
push
jmp
xorl
insl
mov
xor
rcl
xchg
cmpsb
arpl
mov
cld
or
jmp
movsb
test
nop
sbb
pop
call
adcb
lahf
or
fldl
mov
loopne
sub
xchg
sub
lock
xchg
hlt
add
sub
xlat
idivb
cmp
pop
loopne
ret
lret
mov
cld
ja
jmp
xlat
push
nopl
dec
cmp
clc
shlb
cli
xchg
inc
push
sbb
out
inc
lahf
or
jae
add
cmp
daa
js
cwtl
in
jae
adc
andl
sbb
inc
sarl
push
pop
ja
sub
push
jns
in
repz
sbb
push
pop
imul
or
je
pop
rorl
or
mov
lock
pushf
ret
dec
xchg
dec
mov
xor
and
sub
scas
cs
xor
mov
and
loop
outsl
movsb
jle
cmc
pop
lcall
jecxz
xchg
xor
addr16
cli
ja
and
push
lret
ret
mov
shlb
ror
ficompl
imul
inc
movsb
cld
in
jb
test
cmpsl
test
and
pop
mov
jle
cwtl
loope
jmp
pop
stos
jns
xor
push
mov
jp
sahf
and
or
outsb
ret
cmp
pusha
stos
xchg
lock
notb
sub
sbb
fldt
xchg
insb
sbb
sbb
dec
cmpl
fwait
mov
popa
repnz
jns
xchg
les
test
rcrb
movsl
inc
mov
and
cmc
or
mov
nop
jp
mov
mov
in
jle
insb
push
mov
in
mov
pop
fwait
pop
pop
fisttpll
sbb
push
xchg
cs
dec
cs
sub
sub
mov
mov
or
jle
sbb
sub
fwait
inc
mov
xchg
adc
out
lahf
jnp
jl
test
stos
mov
inc
cmp
xor
lret
lods
push
sbb
adc
jo
les
or
imul
and
push
daa
lods
imul
and
aaa
lock
lret
and
jae
xor
mov
jno
cmp
jle
out
in
cltd
imul
leave
adc
push
ljmp
shl
mov
iret
jbe
sbb
insb
cmpsb
insl
and
jne
or
fnstcw
cwtl
jne
inc
mov
mov
adc
mov
xchg
mov
hlt
push
loopne
outsl
pop
lods
sbb
popf
xor
fistl
dec
testb
jns,pt
lods
int3
pop
popf
xor
push
mov
jecxz
jae
nop
push
ret
jmp
movsb
icebp
imul
lods
js
dec
cwtl
lret
or
cmc
cwtl
fstps
out
imul
cmp
icebp
out
inc
jg
push
inc
icebp
sub
js
sub
cld
loope
xchg
push
add
shl
xor
cmpsb
std
mov
loopne
xor
or
pop
pop
push
pop
in
aaa
pop
dec
mov
push
jnp
cmpb
jnp
scas
or
dec
ja
sti
out
lock
jne
mov
dec
and
and
iret
call
sbb
jns
xor
fstp
adc
pop
mov
sub
sbb
dec
sub
xchg
sbb
sbb
jbe
sbb
lods
sahf
arpl
xchg
stos
int3
in
mov
push
jl
cmp
ret
xlat
mov
pop
pop
testb
xchg
mov
mov
ret
mov
scas
inc
jo
std
stc
je
inc
repz
mov
ret
pop
or
shrb
iret
xor
push
dec
popf
xchg
int3
xor
pop
into
cmpsl
fs
stos
xchg
sti
inc
add
inc
cmpsl
mov
pop
fwait
add
out
mov
dec
dec
jmp
pop
xchg
mov
in
cmp
les
jne
loope
xchg
jbe
cltd
fstpl
shrb
repz
lea
leave
pop
icebp
jnp,pt
lret
in
push
pop
adc
dec
jae
sub
outsb
jle
into
sbb
adc
fwait
mov
jg
mov
in
push
sub
arpl
and
popa
dec
jbe
dec
mov
cltd
adc
rcrb
test
enter
imulb
mov
lea
push
cmpsb
loop
test
push
sbb
les
out
lods
cmp
jns
and
fisttpll
mov
push
dec
mov
xor
sub
ret
sub
push
es
stos
push
xor
sub
or
mov
xor
iret
mov
loopne
fcmovnbe
jnp
sub
pop
fcmovb
iret
adc
mov
rorl
mov
js
mov
mov
dec
in
inc
jnp
mov
sub
iret
cmovl
mov
test
cmp
into
dec
mov
mov
scas
dec
cwtl
sub
test
add
les
pop
rolb
jb
dec
out
cld
lods
pop
ret
pop
popf
sub
adc
outsl
out
fildll
push
push
iret
and
mov
popf
out
ret
add
dec
lret
sbb
outsl
sub
cmc
testb
push
mov
sarb
xchg
cmp
jge
xchg
mov
insl
loopne
xchg
add
leave
inc
out
xlat
add
adc
cmp
std
pop
cmp
clc
hlt
push
fwait
stos
xchg
ja
loopne
adc
les
mov
mov
pusha
push
out
cmp
int3
fnsetpm(287
divb
and
jp
xchg
cmc
or
adc
push
and
xor
mov
jmp
cli
addb
pushf
inc
add
xorl
mov
jno
jno
mov
jb
sub
mov
mov
repz
ret
pop
pop
lcall
mov
add
int
movsb
mov
inc
pop
pop
push
dec
out
std
sub
and
aas
jmp
popa
xorl
lock
divb
callw
inc
sbbl
dec
into
mov
or
push
xorl
popf
in
in
jo
inc
les
fisttps
add
std
sar
sahf
and
cmpsl
push
bound
mull
loop
push
in
loope
sahf
mov
cwtl
pop
dec
cmp
mov
push
inc
mov
or
xor
mov
popf
sti
pop
and
into
and
push
pop
push
mov
xorb
sub
or
repz
roll
mov
ret
add
pop
lock
in
das
lock
xchg
insl
nop
add
cmp
and
mov
cmp
dec
and
ret
sbb
pop
fiaddl
ss
xlat
insl
mov
or
cmp
lahf
inc
jp
dec
es
inc
cmp
leave
into
sub
inc
jmp
lea
jo
mov
sbb
jne
pop
movsl
adc
outsb
fwait
outsb
push
fistpll
sarl
push
lds
or
jnp
bound
fldl
jp
iret
cli
push
mov
or
lcall
mov
loope
pop
sub
loopne
mov
or
push
adc
ret
cmpl
mov
xor
push
shlb
enter
cmp
adc
pop
mov
xchg
xchg
jne
dec
lds
out
pop
mov
fisubrl
sbb
cli
lahf
sub
jmp
adc
dec
adc
fs
movsl
xchg
mov
test
rolb
mov
enter
inc
and
aaa
out
or
loope
lahf
movsb
jmp
adc
adc
push
dec
jo
sti
inc
sbb
add
xchg
rcl
jmp
add
mov
mov
inc
add
lds
cmp
jns
dec
icebp
neg
aaa
lcall
notl
push
push
ljmp
mov
xor
push
xchg
jns
jns
insb
ljmp
ss
jbe
jg
sbb
movsl
pop
jp
stos
ss
xor
sti
outsb
push
fsts
or
mov
loopne
lahf
std
mov
and
das
add
aam
xorb
xchg
cmp
fidivs
outsl
mov
and
mov
xchg
stos
shrb
cltd
aas
and
test
pop
cltd
jp
fldt
or
lods
mov
jecxz
lret
popf
fdivl
movsb
jb
mov
and
fidivrs
dec
fstps
int3
dec
add
jb
pop
cltd
xchg
mov
and
cmpsb
outsb
and
shll
fmul
lret
dec
cs
dec
insb
insb
xchg
lahf
and
lods
push
loop
clc
jo
inc
add
outsb
mov
or
jne
inc
or
jae
fwait
sahf
sbb
push
sub
dec
lods
sbb
adc
lods
gs
jmp
test
adc
cwtl
dec
iret
add
mov
jmp
xor
orl
nop
out
xor
push
sbb
pop
cmp
xor
ficoml
cmp
test
pop
mov
mov
pop
hlt
push
rorl
xchg
jb
scas
inc
add
jb
mov
push
or
sbb
lret
sahf
xchg
xor
mov
aaa
inc
jecxz
xor
lds
mov
inc
movl
sarl
inc
and
fstps
stc
arpl
test
imul
sbbb
lods
shll
or
push
pop
lock
mov
push
and
dec
push
jns
pop
test
sti
insl
das
and
jle
cs
es
sbb
mov
clc
xchg
mov
sub
cwtl
shl
leave
mov
stos
mov
out
hlt
pop
ja
pop
xchg
push
movsb
scas
hlt
fs
cld
loopne
pop
lds
jl
pop
notb
xlat
mov
stc
push
rcrb
dec
test
mov
sbb
clc
sub
aad
pop
pop
add
sbb
cs
xchg
sub
sbbl
adc
jle
cmp
adc
inc
aad
iret
fwait
jecxz
lret
mov
mov
aam
mov
push
or
mov
repnz
daa
mov
jle
sub
loop
loopne
pop
mov
xchg
and
xor
mov
push
std
add
cs
pop
mov
sbb
push
dec
out
sarl
and
sbb
int3
es
daa
bound
inc
pop
stos
inc
adc
into
mov
sbb
sub
push
outsb
fcmovnu
fwait
cld
pop
test
inc
js
dec
aaa
roll
insl
dec
arpl
and
aas
inc
adc
sti
adc
dec
sub
push
push
std
dec
ja
gs
jmp
jne
cli
pop
mov
in
cmp
sbb
pusha
gs
movsl
sub
pop
leave
enter
sbb
clc
gs
pop
decb
fwait
pop
outsl
pop
mov
mov
mov
xchg
add
ss
dec
jbe
jne
inc
xchg
jae
xlat
mov
push
jecxz
loopne
and
and
pusha
ljmp
add
xchg
aaa
jle
cltd
push
ss
std
xor
or
jns
testb
push
add
out
push
gs
les
xchg
and
fmul
cmp
mov
and
jae
fldcw
icebp
inc
adc
add
andl
dec
clc
pop
mov
sahf
loopne
ret
pop
lcall
pop
test
mov
xor
lret
dec
ja
cmc
cmp
mov
in
into
adc
lea
push
push
push
jo
xor
int3
fldl
inc
cld
jg
popa
mov
mov
repz
push
add
dec
insl
pusha
data16
sub
aas
adc
lret
mov
es
mov
ss
fsub
iret
nop
lods
push
xchg
popf
dec
mov
movsl
dec
data16
clc
cmpsl
scas
push
push
or
cmpsl
ds
insb
push
das
xchg
and
lds
add
test
mov
xor
fcmovu
push
mov
dec
js
jbe
insl
sub
pop
push
ret
fcmovu
pop
imul
aaa
mov
inc
fadd
mov
aad
shr
and
cmp
adc
cmp
or
test
in
aaa
aaa
shll
mov
pop
sar
dec
dec
addl
cmp
sbb
lds
or
or
mov
cwtl
ss
pop
leave
push
call
hlt
cs
aad
xchg
or
mov
xor
outsl
bound
or
pusha
lcall
push
jp
inc
mov
jns
das
shlb
cltd
push
mov
cmpsl
lods
aad
fdivl
fistl
nop
mov
cmc
mull
lods
imul
xchg
xor
mov
daa
mov
jmp
scas
in
iret
add
jae
cmc
push
jecxz
jne
jmp
xor
movsl
std
bound
ret
mull
clc
scas
leave
and
fnstenv
cmp
push
enter
jle
jg
push
imulb
filds
dec
adc
xor
in
clc
inc
fwait
sub
mov
iret
jmp
inc
mov
rorb
icebp
mov
loopne
out
jnp
mov
push
int
add
mov
inc
jbe
mov
pop
sbb
or
add
jge
sbb
mov
scas
xchg
or
ret
lods
jo
orl
cli
xchg
enter
call
jo
hlt
sbb
ds
ret
in
into
xchg
mov
push
cmp
pop
out
sti
mov
sbb
mov
xchg
xrelease
cmp
mov
outsb
sti
sub
sub
and
loop
repz
stc
or
add
ficomps
outsb
jae
iret
test
rolb
mov
adc
add
mov
jle
xchg
dec
pop
adc
xor
test
dec
test
and
mov
lods
xlat
pop
mov
nop
push
mov
sbb
pop
rcll
in
mov
das
andb
cmp
fstpt
lock
mov
push
jae
lahf
inc
movb
pop
xor
xchg
pop
jb
int3
rol
mov
push
cltd
xchg
inc
shlb
fsts
loopne
adc
dec
dec
push
stos
xchg
imul
xchg
repz
push
add
add
jmp
push
std
in
repz
loop
pop
mov
scas
add
aas
push
out
mov
pusha
std
or
fdivrp
mov
lea
stos
cli
loope
lock
jp
out
loopne
xchg
shl
das
in
je
sbb
jle
adc
pop
and
into
out
dec
loope
inc
aam
xchg
and
mov
rolb
push
or
js
dec
cmp
cmp
cmp
lret
adc
out
jo
mov
scas
incb
pop
shll
cmp
cmp
push
out
push
jp
test
lret
jbe
pop
lds
scas
xor
outsb
xchg
shl
fists
xchg
jo
fiadds
push
sbb
and
inc
les
ljmp
das
mov
cmp
cmpsb
test
sbb
pop
push
mov
inc
add
sbb
or
out
inc
pop
ss
je
loope
xor
test
sbb
subl
push
mov
inc
enter
jo
decb
or
popf
mov
push
cmp
mov
les
hlt
mov
push
adc
push
subl
icebp
lds
repz
test
lock
iret
fdivl
outsb
leave
jbe
out
cli
popf
iret
xorl
cmp
jae
dec
mov
inc
pop
push
dec
nop
mov
mov
pop
scas
jns
cmp
add
sbb
xchg
cmp
push
xchg
out
mov
dec
repz
int
add
testl
test
mov
jle
or
adc
test
rcrl
lea
mov
hlt
gs
pop
lahf
adc
fs
dec
dec
ljmp
es
negl
mov
aas
icebp
push
sarl
int3
xchg
loope
lahf
push
ror
mov
mov
shlw
insl
push
int
sti
inc
jl
xchg
test
push
dec
pushf
and
xor
push
lea
mov
and
adc
cwtl
or
sub
mov
cmpl
fs
js
clc
xlat
cmp
sbb
cmp
clc
rolb
stc
insb
stc
inc
mov
out
mov
setno
cmp
cmpb
ss
xor
inc
and
xor
inc
pop
sbb
popf
mov
dec
test
xor
std
mov
pop
dec
pusha
movsl
sub
mov
jnp
inc
test
sbb
fidivrl
pop
addl
pop
pop
ret
adc
mov
test
and
jae
push
dec
lcall
xchg
jno
xor
fdivr
out
in
loop
xorl
adc
nop
mov
add
stc
jne
call
push
subb
in
sbb
jno
adc
divb
std
push
in
jp
rorb
fptan
mov
inc
sbb
sbb
dec
leave
pop
jbe
mov
push
andb
adc
cmpsb
sub
imul
clc
std
ja
xchg
sbb
lock
cmp
sbb
inc
pop
das
nop
sub
push
inc
jno
xor
push
sbb
out
xchg
mov
xor
dec
fdivl
cmp
call
or
hlt
xor
arpl
or
xchg
dec
jb
ljmp
daa
lret
mov
sub
mov
add
xchg
stos
cmpsl
repz
ret
adc
lahf
out
cs
lds
movsl
xchg
fdiv
add
mov
inc
lret
cmp
mov
call
add
jns
mov
lcall
sarb
and
xor
shrl
rclb
insl
xchg
adcb
lret
xor
fildl
or
cmp
enter
hlt
xor
shrl
pop
push
pop
mov
loope
mov
dec
mov
xchg
mov
mov
inc
dec
scas
pushf
dec
adc
inc
shrl
fstps
xchg
testb
xchg
adc
xor
jae
out
mov
sub
ja
lods
xchg
xor
push
iret
lea
xchg
xor
inc
adc
mov
pop
sarb
andb
and
cmpsl
xor
xchg
mov
lods
fcomi
mov
push
mov
outsl
fwait
add
push
test
lock
push
cmp
cmp
jbe
mov
in
sbb
rorb
iret
pop
mov
adc
ja
icebp
xchg
sbb
test
out
lcall
mov
jl
sub
test
mov
daa
shl
pop
outsb
arpl
jb
rolb
es
inc
fwait
aad
scas
aas
pop
cmp
movsb
arpl
ds
shl
clc
or
or
in
test
inc
jl
sub
into
xchg
sub
mov
mov
ret
adc
mov
insb
jo
inc
push
jbe
fsubrs
clc
filds
int
fmull
clc
mov
xor
or
out
clc
inc
push
adc
push
bound
xchg
sub
jecxz
and
xor
mov
adc
xor
je
xchg
cli
pop
adc
pop
pop
into
xchg
lcall
pop
add
xchg
in
mov
and
push
insb
adc
and
mov
sub
dec
jns
bound
push
cmp
mov
test
sub
es
xor
sub
das
jmp
xor
inc
clc
or
ficompl
in
or
or
rep
xchg
adc
mov
push
mov
repnz
enter
xor
inc
test
js
scas
pop
aas
lahf
gs
pusha
sub
sub
inc
fmull
sbb
pop
and
mov
leave
mov
mov
mov
out
nop
js
cmpsl
out
les
mov
or
pop
out
push
inc
xor
std
inc
mov
ss
lahf
ret
mov
pop
mov
pop
mov
into
sub
mov
cltd
mov
or
scas
leave
pop
lds
jae
ret
stos
jmp
jbe
arpl
xchg
loop
mov
dec
push
dec
shrb
lea
xor
and
mov
push
xchg
mov
pop
xchg
rol
stos
xchg
sbb
arpl
clc
add
dec
sub
pop
addr16
dec
insl
dec
mov
pop
xorl
jl
mov
cmp
into
xor
lds
mov
jbe
push
adc
movsb
mov
push
adc
xchg
in
std
xchg
inc
mov
outsl
repz
sub
les
add
and
outsl
pop
lahf
pop
and
mov
ret
mov
addr16
enter
bound
dec
rorl
in
or
xchg
pcmpeqb
iret
clc
inc
sbb
add
lods
mov
fdivp
xchg
cwtl
sub
push
mov
or
jge
in
enter
pop
push
std
aam
shl
aas
sti
xor
sahf
idivb
cmp
rcl
sbb
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
mov
sub
pop
jl
jecxz
pop
xchg
dec
out
std
dec
mov
int
xchg
inc
leave
push
adc
fmuls
dec
jmp
adc
mov
mov
pop
jmp
movsl
mov
jae
test
in
dec
test
xor
andb
fimull
pop
cmc
jb
mov
adc
pop
xor
cli
int
pusha
ss
in
sub
mov
and
xor
xor
push
xor
ss
loopne
orb
fdivs
lods
roll
fiadds
out
adc
xor
mov
mov
mov
fwait
daa
stos
cld
ljmp
in
xchg
loope
neg
mov
pop
mov
js
sbb
adc
ret
lds
and
push
xor
add
popa
hlt
add
mov
jge
mov
clc
sti
sbbb
mov
pop
xchg
jnp
mov
scas
fucomi
xor
stos
push
mov
mov
insb
mov
inc
push
inc
test
sbb
or
xchg
repz
sbb
xor
enter
sahf
popf
push
xchg
call
lea
inc
in
test
jnp
loope
ja
pop
daa
scas
insl
gs
push
push
mov
es
jb
ficoml
imul
repz
xchg
adc
rorl
cmp
cwtl
mov
je
push
inc
sti
adc
xor
pop
and
test
lahf
stos
jg
xlat
inc
shlb
daa
mov
mov
std
adc
dec
cmpsl
mov
in
lds
fsub
rorb
fdivl
or
xrelease
sbb
loope
push
xor
cli
push
cltd
dec
iret
push
push
rcrl
and
cmp
xchg
mov
popl
loopne
leave
rorl
xor
not
inc
jg
int3
inc
jae
xor
lret
or
mov
or
add
xor
mov
fwait
arpl
cmp
add
push
or
or
xchg
dec
xlat
iret
out
xchg
fldcw
sbb
jb
fidivl
push
fidivl
xchg
pusha
imul
inc
jns
mov
jle
push
adc
sti
dec
pop
movsb
dec
cmp
cmp
stos
repnz
into
add
data16
flds
xor
in
js
pop
add
sbb
inc
inc
ret
and
cmp
aam
popf
arpl
xor
and
and
dec
int
or
and
stos
andl
in
nop
mov
ljmp
or
and
push
add
int3
test
es
xor
call
xor
jnp
mov
xchg
gs
add
inc
je
and
aam
hlt
int
inc
jno
inc
sti
pop
roll
and
iret
sbb
and
enter
stos
dec
sub
lea
fistps
jbe
cmc
push
test
jge
sbb
int3
jb
mov
jle
cmp
repnz
add
test
xor
loope
sti
mov
in
push
xlat
outsl
or
stc
pusha
in
inc
mov
pushf
xor
jl
add
xchg
or
std
mov
inc
mov
enter
adcl
mov
mov
stos
lahf
push
mov
int
imul
pop
popa
inc
mov
lret
lock
in
fisttpll
fnstcw
add
cli
adc
popf
test
push
lods
mov
ja
inc
mov
push
fildl
dec
mov
movsl
out
xor
repz
fimuls
xchg
add
int3
jl
sbb
adc
loop
flds
xchg
pop
sbb
aas
mov
push
pop
lret
xor
sub
roll
xchg
pusha
stos
bound
cmp
or
movsb
pusha
lcall
dec
dec
cmp
mov
outsb
pop
in
jo
inc
cmc
mov
sub
inc
jmp
sbbl
push
sub
sub
pop
mov
pop
scas
sub
adc
jno
lock
hlt
cmc
pop
pop
mov
mov
shll
pusha
hlt
out
mov
lds
ljmp
mov
jmp
or
sbb
or
pop
out
stos
pop
push
cmp
cmpb
cmp
and
jmp
xor
sbb
mov
daa
sub
enter
leave
xor
xor
call
cmp
cmp
sbb
xor
mov
ret
es
jmp
sar
out
sbbl
add
adcl
push
mov
pop
dec
cltd
shll
dec
and
add
mov
or
sbb
adcb
test
fwait
push
aaa
jb
sahf
add
movsl
push
mov
push
cmp
sub
scas
adc
orb
xchg
stos
sub
xchg
sbb
and
push
aam
pop
outsl
lds
push
jno
cmc
ret
mov
fsubrp
jb
inc
movsb
ss
xor
insl
popa
xor
fldenv
fwait
shr
and
arpl
dec
sub
inc
popf
mov
xor
clc
lret
fdivrl
jl
lcall
push
sub
or
hlt
or
push
push
xor
pop
push
xchg
in
xor
xchg
jecxz
or
inc
mov
xadd
mov
movsb
aad
or
ljmp
shlb
sub
into
loope
std
lahf
pop
test
in
call
inc
repz
adc
inc
mov
addl
ljmp
test
je
mov
mov
decb
xchg
cld
imulb
cld
pop
push
arpl
mov
cmp
push
adc
ret
adc
jnp
sbb
out
fwait
pandn
sbb
jo
pop
arpl
jp
lods
daa
or
shrl
ret
mov
xchg
mov
xor
xchg
push
cmp
test
movsl
dec
test
jle
mov
loope
aaa
and
ss
mov
mov
jno
pop
sahf
popf
xor
cmp
sub
imul
clc
loopne
push
inc
es
cltd
xchg
xchg
lret
gs
sub
call
cwtl
adc
push
repz
mov
adc
sub
pop
cmp
mov
fs
fsubr
mov
lock
sahf
jg
xor
or
jne
push
rcrl
fmul
push
fmuls
cmp
aad
xor
test
nop
jp
cmp
loope,pt
inc
pop
daa
add
scas
addl
push
repz
das
in
leave
addl
add
inc
movsl
in
xchg
ret
sti
mov
sub
mov
or
and
inc
sub
jo
push
push
mov
cmp
mov
xchg
sbb
xor
mov
insb
xchg
addl
andl
call
sub
inc
adc
sbb
in
inc
or
pop
ret
das
cmpsb
outsb
popf
push
pusha
sti
or
add
and
mov
decl
or
sbb
mov
imul
jl
pop
jmp
loopne
mov
sub
jae
pop
stc
sbb
rcr
scas
xor
add
dec
mov
fstl
movsl
sti
sahf
jecxz
jnp
scas
and
cmp
xchg
shlb
mov
cmp
out
add
das
jbe
mov
xlat
insl
addb
js
adc
push
dec
dec
push
test
xchg
movsb
push
outsl
jl
pushf
mov
pushf
icebp
test
and
icebp
std
adc
jbe
jmp
mov
adc
inc
les
push
mov
and
xchg
mov
cmp
pop
xor
pop
fs
lret
pop
sbb
mov
lods
mov
ficoms
pop
sti
inc
and
xchg
or
cld
xchg
pushf
fisubrl
arpl
cmc
loop
mov
sbb
cwtl
je
jae
dec
pop
xor
cmp
cmp
cmc
cwtl
jnp
pop
xlat
inc
scas
hlt
or
dec
pop
ljmp
jnp
fxam
add
pop
add
inc
int3
xchg
jo
test
ja
rcr
lret
or
iret
sub
jmp
or
lret
mov
mov
lds
movsb
scas
jp
and
or
mov
push
popa
adc
sbbb
imul
insl
sub
jmp
cs
sub
cmp
push
mov
jne
xor
cmp
imul
pop
pop
dec
rcll
ss
sbb
push
lret
mov
loopne
push
das
shlb
lods
add
inc
cld
lret
inc
dec
repz
cltd
push
pop
push
inc
xchg
mov
lods
and
sub
push
xor
movsl
jp
adc
dec
push
rorl
or
or
adc
loope
and
fisubrl
stos
cmp
lahf
cmpsl
sub
cmp
inc
jp
pop
mov
lods
cmp
ss
sbb
push
adc
pop
mov
add
adc
test
fidivl
sbb
divl
cmpsl
outsb
mov
mov
stos
outsb
pop
sub
and
cs
out
inc
push
addl
outsb
cmp
outsb
mov
in
sbb
push
sbb
mov
jg
pop
stc
les
inc
jno
mov
add
int3
lods
mov
push
pop
dec
push
push
pushf
and
or
pop
lret
ds
dec
pop
and
cmc
in
andb
dec
pop
fstpl
cltd
jmp
push
push
or
pop
pop
xor
jno
mov
hlt
cmp
sbb
scas
jnp
jmp
std
loopne
dec
call
mov
and
test
xchg
mov
inc
and
jae
ljmp
jp
xlat
fdivrl
orl
stc
frstor
in
add
mov
inc
mov
cmp
xchg
call
cltd
xor
icebp
xorl
lods
in
lret
mov
shl
fdivrs
dec
stc
sbb
and
in
push
in
pop
repz
xlat
fsubs
push
jbe
mov
pop
out
cmp
ja
add
cli
sahf
push
std
add
insl
cmp
loope
push
adc
dec
jb
sub
ss
outsl
push
lock
sbb
mov
jecxz
xor
add
fcoms
cld
dec
jb
aaa
js
pop
jbe
sbb
std
inc
or
sub
mov
je
inc
adc
cmp
jecxz
popf
xchg
lea
jae
push
mov
shrl
mov
push
fstpl
xor
mov
pop
shlb
cmpsb
or
ja
pushf
test
aad
adc
lock
cwtl
mov
or
jp
mov
ror
int
insl
xor
inc
push
cmp
fldl
loope
out
inc
pop
mov
sbb
adc
out
xchg
divl
xor
dec
mov
mov
xchg
cmp
mov
cmp
xor
shlb
paddq
cltd
mov
push
and
jl
shr
sbb
out
xchg
fld1
inc
mov
dec
lods
mov
jg
aam
adc
sahf
pop
call
vmwrite
das
loope
lcall
test
popa
shll
adc
imul
cmc
jl
jl
sarl
test
lret
outsl
dec
test
xchg
pop
imul
jl
sarl
out
insb
outsb
mov
rcl
lock
lcall
cmp
mov
je
mov
notl
mov
hlt
mov
rclb
addb
push
out
mov
xor
adc
cmp
pop
push
push
pop
pop
icebp
sub
je
lods
pushf
jle
je
aad
fdivs
and
movsl
or
push
stos
dec
leave
adc
lea
xchg
push
adc
adcl
mov
dec
jns
or
sahf
lods
pop
and
loopne
mov
xor
sub
adc
lods
mov
icebp
mul
dec
ss
push
push
cltd
jns
imul
mov
repnz
or
int
xchg
out
sub
adc
scas
mov
aam
mov
inc
ds
pop
xor
in
ret
push
mov
rolb
mov
mov
cmp
and
in
push
mov
jno
push
xor
inc
mov
scas
sti
push
ror
sarb
outsl
mov
xorb
push
sbb
js
jge
shlb
xchg
daa
out
adc
addr16
push
fs
push
and
in
jmp
or
xchg
popf
jo
mov
push
loopne
cltd
daa
sarb
idivl
jb
sub
out
and
push
xor
ds
mov
xchg
mov
filds
mov
fsubs
adc
into
movsb
or
mov
aas
jbe
mov
fwait
cld
mov
ljmp
dec
add
or
cmp
insl
mov
movsb
aaa
mov
mov
push
or
lods
das
in
mov
out
cld
lds
loop
loop
fcmovnbe
aas
xchg
not
lods
push
mov
push
mov
pop
lahf
lds
mov
and
or
adc
mov
in
pusha
cmp
data16
sub
xchg
pop
ja
iret
mov
mov
loop
sub
aas
mov
cmc
sub
xchg
cwtl
imul
cmp
fwait
cld
mov
fs
xchg
dec
pushf
fldl
fwait
inc
jno
sbb
sbb
sub
ljmp
enter
xchg
movsl
dec
pop
jp
pop
and
dec
mov
out
inc
xchg
mov
scas
shlb
push
int3
push
and
mov
xor
repz
ret
inc
and
test
inc
out
jno
fsub
lods
or
xor
dec
fld
xchg
fwait
call
sbb
popa
into
sub
dec
mov
xchg
jl
pop
push
hlt
scas
jl
lahf
outsl
popa
push
dec
mov
lahf
xchg
or
iret
cwtl
mov
les
and
es
sbbl
sub
in
pushf
stos
add
mov
movsb
dec
push
mov
scas
mov
push
stos
lods
inc
lea
lret
xchg
out
pop
mov
sub
stc
cmc
adc
mov
jne
and
or
mov
xchg
stos
test
insl
bound
mov
jecxz
insb
push
and
and
push
dec
jae
popa
fdivrl
jle
push
sub
mov
daa
push
sbb
cs
adc
sbb
or
jnp
outsl
fisubs
ss
or
dec
mov
test
pop
mov
xor
out
aad
js
andl
mov
or
gs
rorb
jge
adc
lret
cmp
dec
and
jge
js
in
data16
dec
inc
rolb
div
fwait
addr16
sarb
cmpsl
test
pandn
bound
in
test
outsl
lods
mov
mov
dec
stos
mov
xchg
jbe
inc
jmp
fs
inc
packsswb
mov
add
mov
insb
cmp
lahf
mov
movsb
cmp
and
mov
and
test
inc
or
cmpsl
jo
out
fisubl
add
and
in
insb
lret
add
cmpsb
test
mov
in
add
ret
inc
jmp
push
fidivrs
or
in
and
outsb
sub
mov
cmp
out
aaa
aad
pop
outsl
and
aam
sbb
inc
push
shll
jecxz
std
stos
insb
into
dec
jge
aad
or
adc
jno
fwait
divb
sbb
xchg
ja
fiaddl
clc
repnz
repz
or
je
xchg
xchg
daa
cmpl
loop
dec
cli
push
xchg
adcl
sub
mov
call
stc
lds
jae
adc
jno
jecxz
mov
mov
xor
addr16
mov
lods
leave
loope
movsb
inc
xchg
pop
fcompl
test
and
sub
dec
dec
or
fstl
daa
jmp
stc
cmp
push
xlat
cmp
mov
push
pop
and
pop
cltd
loope
rorl
das
outsl
fildll
cmp
mov
fsubrs
and
xchg
fcoms
mov
jecxz
pop
mov
jo
cmpsl
mov
add
pop
hlt
pop
lods
sbb
lds
xchg
out
push
push
sbbb
and
add
cltd
lcall
pusha
lcall
rcll
gs
outsb
xor
jne
std
fs
xor
cmp
fstp
or
and
dec
sti
sti
je
cmpsb
imul
dec
xchg
xchg
pop
cmpsl
push
movsl
jbe
push
popf
js
inc
jp
cmc
nop
test
dec
mov
dec
cli
ret
pop
popa
adc
mov
notl
out
loope
pop
adc
ret
fldl
push
sub
imul
xchg
repz
lret
push
std
and
aad
jp
pop
jp
sub
sarl
rcll
stc
jne
mov
jno
mov
jecxz
jbe
jge
sbb
sub
mov
inc
push
mov
and
jbe
jp
add
cltd
and
outsb
xchg
jp
mov
es
jg
sti
addl
xchg
mov
shll
in
jno
cli
rcl
movsl
enter
ds
mov
mov
add
push
iret
and
jle
jo
ljmp
jecxz
sbb
push
fcmovnbe
loope
call
lret
add
orb
iret
int3
pusha
loop
aas
add
jle
jno
dec
cld
es
and
inc
lahf
lock
dec
xor
jns
pop
mov
jmp
xor
inc
stos
jp
adc
push
nop
lods
int
sub
ja
es
loopne
shlb
pop
pop
aaa
lret
push
adc
mov
dec
cmpsl
push
orl
cmp
mov
out
testl
and
inc
leave
fcmovnb
pop
in
arpl
jb
enter
pop
mov
hlt
dec
mov
lahf
xchg
pop
js
and
shl
jnp
jle
or
mov
cmp
xchg
int3
push
lcall
cmpsl
jb
adc
mov
sbb
dec
das
dec
cli
cmp
lret
cwtl
adc
mov
clc
data16
fcompl
and
xchg
call
dec
out
xchg
mov
out
push
loope
pop
movsb
movl
dec
xlat
and
or
addl
inc
std
pmulhuw
sub
fistl
add
loop
push
scas
lea
sti
push
test
jmp
adc
pushf
pop
xor
sbb
lcall
test
push
addps
dec
gs
out
lret
fildll
adcl
mov
jns
mov
notb
int
je
cli
fstp
sbb
rcl
mov
out
and
outsb
cmp
mov
pop
into
inc
popf
movswl
int3
out
xor
adc
and
push
add
pop
pop
lret
or
cltd
arpl
popa
fdivs
sbb
iret
xor
data16
fistpl
cs
and
cmp
inc
fstpt
lock
sti
daa
mov
repnz
or
mov
arpl
xchg
stos
xchg
dec
mov
and
mov
aad
dec
push
std
aas
xchg
insb
pusha
adc
xchg
mov
jl
clc
lods
clc
sbb
popa
dec
bound
push
je
ret
dec
clc
sub
sahf
inc
cmpl
push
adc
rclb
xor
add
fbld
jb
in
mov
stc
iret
aaa
pusha
iret
inc
xchg
lahf
mov
cmp
lret
adc
xchg
pop
mov
xchg
sub
push
mov
cli
mov
dec
mov
mov
fidivl
adc
pop
xchg
test
popa
mov
pusha
and
cmp
arpl
add
loope
aad
mov
adc
frstor
je
push
adc
mov
xor
cmp
lahf
pop
gs
push
inc
fbld
frstor
int
jo
mov
push
mov
or
jp
daa
fistpl
mov
imul
in
or
xchg
lret
aad
jno
ljmp
loopne
sub
cmpl
loopne
xor
cmp
jp
or
loope
jmp
mov
sub
mov
inc
stos
push
mov
mov
cld
sarl
push
js
mov
xchg
xchg
cs
ret
sbb
jmp
adc
push
mov
push
mov
or
mov
mov
loope
mov
and
mov
fstps
aam
cmc
cltd
sub
pushf
mov
test
dec
les
addr16
push
lahf
test
in
dec
sbb
lods
setl
inc
shrl
sbb
nop
or
push
out
ljmp
in
out
pop
xor
hlt
call
in
movsb
xor
imul
push
rclb
aam
pop
cmp
add
xor
test
add
sbb
push
dec
sub
lds
imul
sarb
int
into
aad
mov
mov
testl
pop
stos
mov
push
pushf
out
xchg
ret
sub
jecxz
in
mov
xchg
fs
push
lds
fwait
jnp
inc
adc
flds
jl
adc
loopne
rcll
int3
mov
fwait
sub
dec
mov
mov
or
rcll
push
push
adc
out
xchg
jne
jmp
and
add
rcrl
scas
cltd
fimuls
pavgw
popa
std
adc
push
push
or
loope
pop
mov
cmp
jmp
nop
ja
mov
xchg
pop
popa
jne
xor
icebp
and
dec
stos
mov
or
pop
mov
stc
fs
scas
cli
mov
aad
push
insb
testb
in
add
pushf
dec
fsin
les
outsb
loop
add
cltd
push
ret
fidivrs
mov
movsb
call
mov
jb
fimull
mov
sahf
mov
jnp
lds
arpl
pop
xor
mov
jno
int
cmp
idivl
mov
xchg
popa
call
mov
arpl
adc
movsb
shrb
jnp
and
cmp
in
pop
ret
repz
dec
or
dec
dec
nop
sub
lret
xor
in
or
mulb
push
dec
adc
jmp
fistps
movb
data16
jns
inc
test
sbb
mov
and
sbb
pushf
orl
and
mov
xchg
mov
xor
xor
add
cmp
rcl
pop
pushf
or
lahf
sbb
shlb
add
repnz
rorl
mov
sbb
xor
mov
inc
pop
xchg
addr16
cli
mov
sbb
adc
in
push
repnz
jae
insl
idivl
ss
or
jge
xchg
inc
iret
es
jb
pop
push
cwtl
mov
dec
jnp
inc
inc
dec
pop
imul
std
test
ss
pop
insl
xchg
out
or
mov
and
insl
and
push
repz
insb
aad
pusha
fidivrs
push
and
js
mov
hlt
es
mov
cmp
addl
sub
xchg
mov
js
pushf
and
sub
push
xchg
into
sarb
mov
js
dec
fcmove
xor
add
push
and
sahf
in
aam
push
popf
std
or
std
lcall
push
or
lret
in
push
into
leave
pop
scas
ljmp
jl
aam
mov
adc
in
add
icebp
pop
rorl
xchg
pop
xchg
push
pop
mov
js
adc
testl
fildl
jg
aad
mov
mov
sub
pop
adc
addb
aas
mov
cmp
jl
dec
pop
stos
mov
call
and
shlb
pop
pushf
and
mov
aam
xchg
sbb
sub
pop
sbb
pop
scas
sub
outsl
in
mov
cli
push
es
sahf
out
mov
jb
aas
ljmp
popf
xor
jle
xor
mov
fisttpl
into
pop
cmp
arpl
sub
mov
andl
jmp
test
add
and
pop
mov
cmp
ror
scas
inc
jb
dec
ret
repnz
mov
aaa
push
in
sahf
mov
cmp
xor
ret
adc
jb
js
cmpsl
cmpsb
push
jno
dec
and
jge
dec
pop
mov
fisttpll
bound
in
jb
and
pop
bound
clc
cmp
int3
mov
inc
fists
mov
lea
rorl
sub
push
ja
icebp
scas
ja
lods
adc
scas
cmp
add
push
lock
jmp
xor
sub
jg
jnp
mov
fildll
inc
int
and
sbbl
out
and
std
mov
cmp
movsb
or
jp
cmpsl
pop
icebp
push
std
ret
jle
pop
imul
test
push
sahf
or
cmc
dec
cmp
xor
adc
cmp
mov
mov
out
push
sbb
addb
and
cmpb
pop
pop
cmp
cmpsl
mov
notl
loopew
aas
and
aad
inc
xlat
mov
lea
lea
add
jg
adc
stc
in
rcrb
ja
xchg
sbb
and
pop
push
jno
mov
xor
sbb
aam
std
into
xor
loop
inc
enter
mov
test
and
pop
or
jb
pop
dec
imul
push
push
pop
lret
sbb
mov
mov
push
xchg
push
stc
call
dec
imul
je
std
fistps
jmp
stos
push
or
push
rcl
pop
push
adc
ljmp
repz
icebp
mov
ja
lea
dec
xchg
adc
dec
sbb
decl
ljmp
femms
mov
mov
mov
and
scas
cmp
jb
clc
scas
pop
push
insb
movsl
lcall
cmp
inc
enter
dec
inc
adc
xor
pop
insl
ljmp
xlat
push
sti
pop
out
pop
jl
lret
aad
mov
dec
sbb
roll
out
test
jbe
mov
dec
mov
or
mov
jmp
or
adc
call
cmc
in
jmp
daa
jnp
pop
stc
sahf
insl
cmc
xor
outsb
mov
jl
dec
ror
mov
mov
repz
fisttpll
imul
dec
or
xor
mov
jae
or
mov
dec
jns
in
xchg
adc
xor
push
add
dec
ret
push
push
pushf
push
fldl
xchg
fists
or
movsb
mov
sbb
push
push
sbb
jp
sub
enter
add
jnp
arpl
mov
mov
lds
push
mov
xchg
add
subb
jg
jo
jg
cmp
dec
xchg
out
ficomps
int
test
pop
ja
mov
adc
aad
jmp
or
ljmp
test
cmp
mov
mov
xchg
jnp
or
clc
insb
inc
adc
push
mov
pop
mov
mov
push
shlb
stc
loop
add
inc
jmp
and
inc
cmpl
mov
dec
push
clc
bnd
ss
cmp
pushf
imul
decl
aam
sub
push
aas
inc
or
cmp
mov
test
jo
adc
jo
pop
rcll
pushf
shrl
popa
nop
mov
cmpsb
jnp
mov
add
icebp
es
andb
movsl
out
dec
and
loope
dec
jo
cld
push
test
mov
xchg
mov
loope
subl
test
mov
imul
xor
jae
push
mov
lcall
gs
fidivrs
xor
sbb
jb
jb
add
push
push
xchg
mov
mov
mov
xor
movsb
lea
je
sub
fcoml
mov
fildl
mov
out
xor
ret
clc
lea
sbb
ret
push
mov
xlat
mov
cmp
xchg
call
xchg
dec
xlat
sub
push
test
jnp
insl
addr16
xchg
push
pop
test
push
das
cmp
pop
lcall
mov
jecxz
and
pop
addl
add
cmpsb
sbb
add
pop
push
out
ret
lret
enter
xlat
ljmp
lret
movsb
xor
mov
imul
or
inc
mov
inc
cmp
loopne
fsubl
repz
adc
xlat
enter
mov
pusha
push
sbb
dec
inc
nop
add
inc
insl
mov
mov
stc
imul
in
sub
pop
loop
outsb
mov
pop
mov
call
and
stc
aam
gs
xor
int
inc
outsl
inc
clc
push
call
pop
leave
das
mov
int
mov
pop
jle
cmp
je
daa
adc
movsl
sub
pop
div
inc
inc
push
cli
cmp
aam
mov
mov
pop
jmp
push
stos
xlat
mov
add
add
cmpsl
sbbl
xchg
cmpl
jge
insb
ficompl
and
orl
arpl
repnz
jge
xchg
or
mov
pop
test
add
pop
jp
ret
jle
fdivrl
das
push
arpl
imul
out
lock
add
je
pusha
aad
pop
xchg
sbb
lret
push
sub
das
iret
inc
int3
sub
jle
push
das
ljmp
in
sbb
loop
inc
pop
sub
decb
pop
mov
mov
mov
rcrb
aam
sbbb
lods
pop
jg
and
push
addr16
iret
repnz
sub
imulb
push
push
jle
fildl
jne
cwtl
fistps
cs
loop
in
adc
jmp
int3
cmp
xchg
ja
or
cld
mov
xchg
in
inc
sbb
and
loop
jns
cmp
add
xchg
cmp
pop
push
cs
and
imul
int3
dec
bound
push
shll
dec
aad
push
inc
aaa
imul
in
fdivr
outsb
rcr
aas
lds
andl
jnp
mov
xchg
lret
inc
es
adc
cmpsl
roll
adcb
adc
fistl
cmp
xor
xchg
mov
mov
sbb
cmpsl
pop
pop
lock
adc
pop
cmp
jne
int3
cmp
stc
cmp
jns
and
out
push
bound
sub
repz
xor
fdiv
sub
or
sub
ljmp
and
fsubr
in
in
inc
jl
adc
mov
jnp
cwtl
pop
pop
adc
call
pop
adc
mov
mov
mov
adc
dec
cld
and
pop
inc
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
push
mov
jl
pop
pop
jl
inc
aam
mov
test
sahf
vpcmpgtd
shrb
jg
pop
dec
das
ljmp
pop
pop
test
sbb
pop
int3
inc
mov
je
daa
xlat
bound
dec
fwait
addr16
fmull
mov
mov
cli
sub
incb
pop
mov
pop
jne
pop
loop
repz
sbb
nop
bound
mov
xor
add
adc
jmp
leave
push
mov
mov
inc
jae
clts
in
mov
sbb
lods
cmove
icebp
cmpsl
bnd
pop
sbb
xor
mov
mov
js
push
andl
lcall
call
in
scas
jle
loop
test
dec
scas
loope
cltd
out
jnp
into
fcmove
mov
mov
jnp
adc
addr16
and
movsb
mov
xchg
fcmovb
inc
pop
mov
mov
xchg
in
mov
mov
add
cmpsl
test
cmp
loopne
adc
mov
cmp
loop
mov
ds
sbb
test
pmaxsw
mov
mov
sahf
pusha
xchg
xchg
sub
xchg
lcall
xchg
sbb
sub
into
and
cli
js
xchg
pop
dec
cmp
sub
test
je
sahf
cmp
fstps
jbe
adc
aas
jmp
and
ja
stos
sub
add
mov
push
inc
push
movsb
int3
jl
dec
leave
and
enter
sbb
dec
pop
dec
test
inc
daa
xchg
cs
jbe
fsub
sub
add
xor
in
out
lea
xor
dec
jl
mov
mov
sbb
xor
xor
outsl
push
scas
add
mov
call
mov
mov
insb
mov
xor
dec
jge
or
push
aaa
sbb
add
mov
test
add
in
push
js
pop
loop
mov
mov
or
arpl
fs
cltd
jmp
mov
mov
ja
nop
mov
iret
push
fistpll
loopne
jo
lock
fwait
adc
aam
jbe
mov
push
mov
push
cltd
mov
es
mov
xchg
in
add
lcall
jbe
inc
out
push
jecxz
ret
cwtl
pop
out
imul
dec
and
jecxz
sbb
xchg
sub
mov
push
mov
cwtl
pop
add
shll
add
stc
push
cmp
lea
lret
push
xor
out
dec
add
outsl
stos
out
mov
add
cli
mov
sbb
aas
lods
movsl
pop
pop
xor
sbb
aam
push
insl
nop
nop
push
cwtl
int3
rcrb
cmpb
lret
fistpl
mov
insl
xor
push
popl
fmull
inc
dec
pusha
adc
push
xchg
cmp
into
sbb
push
xchg
movsb
xor
out
dec
adc
jno
lahf
cmp
je
fistpll
mov
inc
dec
pop
adc
into
pusha
pop
cmpl
test
call
sub
aas
xchg
dec
jge
insl
mov
and
cmc
add
mov
mov
std
mov
cmp
jnp
out
cmp
adc
pop
mov
push
xor
andb
popf
or
cmpl
outsb
or
fsubrp
out
popa
cmp
and
jg
insb
add
adc
add
out
loope
lahf
mov
int
stc
loop,pn
mov
adc
sbb
push
mov
mov
subb
aad
inc
sbb
pop
mov
mov
inc
divl
push
add
shll
std
fs
dec
sbb
xchg
aam
cld
repz
test
add
andb
fsubr
xchg
popf
fistps
inc
inc
icebp
adc
and
fildl
loop
mov
mov
pushf
adc
mov
jl
jle
fs
mov
dec
rcrb
cmp
jp
addr16
mov
in
mov
push
cmp
pop
inc
push
sub
leave
test
mov
cli
push
xor
cltd
add
mov
fidivs
or
push
test
std
push
les
push
push
cmp
rcrl
mov
loop
ljmp
les
or
sarb
pop
mul
xor
ja
mov
jg
push
pop
sti
pop
mov
pop
dec
pop
push
jnp
xor
adc
push
gs
inc
movsb
btc
jge
test
push
lahf
loopne
out
lods
outsb
mov
pop
or
mov
pand
aaa
jns
insb
mov
pcmpgtw
pop
mov
cmp
pop
out
dec
cmp
push
pop
ss
pop
pop
pushf
inc
fmull
rcll
jle
mov
adc
call
xlat
loope
lret
call
popa
repnz
xchg
call
sarl
sbb
test
js
sbb
test
into
mov
push
or
mov
pop
push
jne
push
jo
popf
or
ja
pusha
adc
and
pushf
bound
ret
add
out
add
shl
stos
lds
fdivr
addr16
xchg
out
pusha
cmp
push
enter
popf
jo
mov
sub
xchg
in
mov
push
jnp
push
rcll
pop
jmp
lcall
in
sarl
lods
xorl
pop
jl
fisubs
ret
inc
add
pop
pop
divl
sti
sub
hlt
sbb
and
sbb
push
jp
mov
push
lcall
iret
add
cmc
push
and
in
jg
cmp
cmpsl
mov
movsl
lds
fs
ret
lcall
ret
mov
sbb
adc
jb
icebp
hlt
push
sub
int3
sbbl
mov
or
mov
sub
ss
out
push
add
adc
mov
jl
mov
pop
fcomps
outsl
aad
dec
xchg
arpl
movsb
dec
iret
pop
sub
pushf
sub
shlb
movsb
and
stos
xchg
sub
jge
fucomp
clc
pop
dec
xchg
and
icebp
sbb
aaa
add
mov
mov
sub
adc
repnz
negb
stc
int3
cmp
mov
or
cmp
xchg
dec
or
popf
cltd
xchg
insl
in
mov
ficoms
dec
add
push
dec
mov
or
pop
mov
pop
mov
ret
push
mov
int3
adc
dec
push
in
mov
pusha
jecxz
stc
insb
pop
call
mov
push
imul
fcoms
inc
jnp
inc
pusha
test
lret
cmp
pop
jle
lods
lods
mov
cmpsl
in
push
xchg
push
jle
shll
xorb
arpl
xchg
push
mov
ljmp
add
xor
lret
inc
cmp
mov
and
inc
xchg
jo
add
lods
arpl
adc
jge
mov
pushf
in
fdivrs
xor
loopne
dec
daa
push
xchg
add
dec
add
inc
fildl
mov
pop
cmp
mov
cmp
in
fildl
shrl
cmp
fisubrl
lods
f2xm1
xor
push
into
loop
daa
mov
out
imul
pop
das
mov
in
add
cmc
pop
jg
in
jns
in
aaa
mov
mov
sub
and
push
mov
pop
mov
dec
push
add
cmp
lret
add
cmp
filds
pop
adc
add
out
pusha
sub
push
mov
mov
iret
mov
pushf
int
rcl
dec
and
in
mov
push
movsl
sbb
dec
sbb
in
cmp
out
inc
mov
xchg
or
dec
movl
std
sbb
cmpsb
lods
push
test
fistl
ret
pushf
aas
std
popf
daa
mov
mov
lock
push
mov
xchg
cmp
lret
push
mov
pop
pop
in
push
pop
mov
lods
xor
pushf
xchg
xchg
imul
pop
lock
adc
push
push
int
adc
mov
push
xchg
push
sbb
mov
cld
adc
inc
mov
inc
jle
ficompl
in
outsl
call
mov
out
and
xchg
lods
mov
test
sbb
pop
xor
popf
test
jbe
xor
in
pop
add
dec
xchg
sbb
pop
aas
mov
sub
paddq
in
xchg
ret
push
pushf
aas
outsb
cmp
jl
and
jg
daa
mov
add
ficoml
popf
sbb
sub
jle
xchg
sub
add
das
mov
mov
push
fbld
das
sbb
push
jbe
aam
xor
adc
push
into
adc
movsl
adc
insb
in
movsl
out
shrb
inc
or
inc
mov
push
adc
jb
js
lods
push
cli
jge
repz
push
and
mov
in
xor
mov
sub
xchg
or
or
je
cmp
mov
and
xchg
pop
mov
pop
and
inc
sub
sbb
adc
pop
jmp
fcomip
repnz
dec
shr
cli
cmc
sub
rcrb
smsw
cld
mov
sti
sub
sbb
add
insb
insb
ror
sbbl
xchg
pop
mov
mov
test
and
in
jg
in
out
and
dec
xchg
sub
insb
lock
mov
xchg
stos
popf
adc
sarb
push
rolb
std
cmp
loope
data16
into
popa
pop
sbbl
jnp,pn
mov
or
sti
aam
insb
xchg
int
push
cwtl
and
scas
sbb
adc
out
or
repz
cld
xchg
sbb
mov
sarb
mov
lahf
mov
test
cmpsb
xor
dec
push
test
sbb
adc
aad
ss
mov
aad
xor
and
inc
xchg
repz
pop
test
sub
lock
int3
jae
lret
mov
es
in
into
imul
cltd
xor
hlt
movsl
sbb
movl
add
pop
sbb
lahf
lea
xlat
repnz
lock
cmpsl
nop
scas
jl
jle
stc
cmp
aaa
xor
mov
adc
ret
cmp
rcl
push
into
stc
cmp
xchg
stos
and
inc
lods
mov
imul
fsub
test
sahf
push
cmp
mov
push
mov
shrl
mov
adc
mov
adc
lods
and
push
pop
cs
repnz
sub
xlat
inc
xchg
je
cmp
jbe
addr16
or
addr16
out
xchg
std
popa
mov
pushf
sub
xchg
lds
push
imul
movsl
cmpl
mov
lcall
cltd
mov
adc
mov
mov
fsubr
xor
push
bnd
cmpsl
or
aad
or
fdivs
dec
or
sub
and
mov
sahf
inc
xor
inc
xlat
outsl
shrb
ret
xor
jb
mov
cmp
int3
pop
int3
aad
xchg
mov
adc
mov
push
or
insb
cmpsb
push
pop
cmovbe
loopne
mov
lock
sti
out
fiadds
lret
test
dec
enter
adc
lcall
imul
decb
aad
sbb
mov
and
add
push
jne
lcall
popa
sub
mov
or
mov
loopne
fwait
enter
fdivrl
mov
rclb
mov
pop
sub
push
adc
fistpl
arpl
pop
mov
fs
pop
lahf
xor
cmp
dec
pop
outsb
dec
jb
lods
push
add
cmp
xor
cmpsl
imul
in
shl
and
mov
inc
or
aam
mov
loopne
outsb
dec
jg
jmp
jo
mov
mov
fisttps
inc
xor
insl
test
popf
xchg
pop
loop
dec
ret
imul
mov
cmp
ret
push
add
inc
fs
lahf
mov
push
and
pop
int3
call
rol
and
fidivrs
sbb
xchg
fs
imul
mov
lods
xchg
data16
pusha
or
out
sub
dec
sbb
popf
imul
pop
imul
int
ja
lret
cmc
inc
int
rorl
aas
test
dec
or
mov
pop
push
xchg
sbb
push
nop
out
outsl
dec
mov
dec
xchg
mov
mov
inc
jmp
call
in
mov
pop
mov
xchg
adc
mov
sarb
pusha
sbb
mov
cmp
sub
bound
into
cmp
test
addr16
mov
inc
iret
sub
add
mov
xor
mov
inc
dec
mov
or
and
and
dec
pop
inc
arpl
dec
je
inc
fistpll
in
mov
test
rcl
imul
stc
in
xor
fucomi
mov
or
xchg
aas
mov
nop
popa
stc
inc
repz
repz
std
outsl
stos
push
lods
addr16
jnp
sbb
jne
cmpsb
ljmp
jnp
int
cmp
test
daa
mov
test
pop
xchg
xor
cmc
jae
cmp
rcrb
sbb
jo
mov
lret
stos
or
or
lock
ds
mov
cmp
mov
cmc
inc
cmpsl
daa
adc
push
lock
lret
and
and
and
imul
test
sbb
aad
test
or
loope
xor
adc
mov
mov
push
add
lahf
iret
ss
or
int3
push
arpl
clc
jne
test
xchg
jmp
sbb
sub
aam
pop
or
repnz
mov
outsb
jmp
int3
hlt
dec
xor
clc
and
test
decb
xor
sbb
lods
lods
inc
je
flds
inc
xor
mov
in
stc
jp
in
leave
xchg
dec
movsl
adc
mov
scas
sbb
mov
push
jne
push
mulb
dec
addb
jne
out
or
ror
mov
lds
pop
xor
push
lock
push
fcmovnbe
xor
inc
bnd
testl
out
dec
lods
orb
fiadds
xchg
jg
fdivrl
divb
in
jo
xchg
mov
sti
outsb
cmp
daa
push
cmpsb
dec
fldenv
sbb
in
fists
outsb
mov
push
outsb
popf
fdivrs
test
pop
push
das
mov
jecxz
jns
out
lods
cmp
jmp
sti
and
sarb
mov
push
test
xchg
xchg
dec
push
shrl
into
adcb
jb
adc
addr16
ret
push
lcall
dec
xchg
jl
cltd
test
shlb
add
cmp
aad
jo
mov
push
pop
ds
ja
push
cmp
and
mov
mov
xchg
xorl
fdivrl
dec
push
cmp
arpl
adc
sbb
mov
xor
or
pop
push
les
and
inc
lret
icebp
pop
push
and
xor
or
leave
mov
test
mov
jbe
inc
cmpsl
dec
orl
int3
aas
add
mov
pop
sahf
xor
cltd
push
dec
xor
hlt
mov
jl
pop
jne
or
dec
mov
adc
jo
and
adc
xchg
push
sbb
push
dec
lret
xchg
inc
mov
hlt
sub
fistl
xor
xchg
shlb
mov
mov
fs
push
ja
nop
sub
js
jle
push
in
ss
xor
jns
fld1
xor
int3
mov
push
dec
cmp
or
or
popa
insb
adc
or
cmp
ret
jp
imul
mov
cmp
mov
lock
lock
inc
std
arpl
test
pop
test
push
mov
mov
xchg
cmpsb
sarl
push
cmc
mov
in
ljmp
push
rcl
cmp
or
ljmp
push
dec
gs
push
dec
xchg
out
jl
sub
or
out
pop
daa
and
stos
or
inc
sub
adc
je
imul
xchg
push
daa
out
sbb
push
in
mov
pop
sbb
mov
fwait
insb
lret
mov
push
mov
adc
movsb
adc
xchg
cmpl
adc
ja
and
scas
imul
jb
addr16
cmpsl
enter
arpl
xor
mov
loopne
pop
sbbl
pop
scas
jmp
jae
pop
push
cs
insb
or
mov
add
xchg
push
add
sahf
cmp
jmp
fdivs
xor
push
mov
jne
or
xor
aad
pop
cmp
das
sub
roll
popa
mov
adc
or
or
push
inc
and
mov
negl
fcompl
jg
push
movsl
ljmp
mov
loopne
jp
insb
cld
rorl
mov
cmp
dec
lods
pop
mov
or
adc
out
xlat
mov
sbb
pop
mov
dec
lcall
loope
pop
daa
push
dec
or
subl
popa
gs
sbbb
fsts
repz
push
adc
int3
inc
sub
out
and
xchg
jns
aas
xchg
in
push
jbe
and
sub
out
ret
xchg
xchg
out
inc
js
push
mov
pop
rorl
jg,pt
hlt
ret
movsl
jge
xchg
jl
jo
or
push
int
sub
push
and
incl
adc
and
pop
jb
or
add
inc
push
or
add
mov
push
dec
pushf
cmpl
xchg
addr16
mov
mov
aas
shld
mov
xor
add
push
imull
sub
mov
adc
mov
mov
testl
nop
dec
ret
fwait
in
xchg
pop
sub
mov
push
mov
mov
sbb
fwait
testb
sbb
popf
aad
test
out
or
add
fmull
ljmp
pop
or
inc
stos
jp
xor
mov
cmp
add
cmp
xchg
jl
cwtl
icebp
fcomps
pop
ja
dec
movsl
mov
ds
sub
jbe,pt
dec
pusha
stos
sti
pusha
inc
cmp
and
ja
enter
add
cs
lds
pop
sbb
adc
movsb
int
sbb
xchg
arpl
lock
pop
movsl
inc
mov
xchg
int3
scas
stc
mov
pop
pop
sti
mov
divb
mov
fbstp
jae
push
nop
dec
jg
push
sbb
lods
add
push
rol
pushf
push
sbb
jo
fldl
sbb
jae
out
call
test
icebp
mov
mov
repz
addr16
sbb
fdivr
fidivs
or
iret
jnp
or
mov
dec
and
repz
adc
dec
jmp
sub
dec
jns
and
pusha
pop
insb
mov
push
scas
xorb
repnz
jge,pn
pop
cmpsb
aam
pushl
jle
cs
push
add
inc
cld
lods
push
lods
and
lods
pop
pop
inc
in
loop
ror
into
shll
repz
xchg
fcompl
stos
inc
jecxz
xor
inc
in
lret
mov
aam
pusha
jne
xchg
ret
push
jmp
insb
xchg
xorb
pushl
aad
movsb
push
pop
aas
sub
and
mov
cltd
stc
mov
shrb
les
repz
mov
mov
mov
cmp
rolb
adc
or
jmp
or
popf
insb
jb
sbb
pop
js
cmp
xor
test
aam
in
mov
mov
or
int
leave
aas
stos
xchg
cmc
jmp
fcoml
jmp
or
insl
jl
add
fistl
or
or
hlt
pop
mov
add
lds
inc
push
pop
inc
xchg
rcrb
stos
dec
mov
outsb
lea
jno
inc
push
sbb
sbb
fldt
inc
mov
call
cli
push
out
das
pop
mov
cmp
pop
mov
cmp
aas
xchg
testb
outsl
mov
stos
and
mov
jne
mov
inc
out
das
pusha
arpl
js
xchg
scas
daa
mov
sub
xchg
pop
cmp
mov
xchg
xor
dec
xchg
xchg
push
pop
dec
adc
inc
sub
in
rcr
imul
or
sbb
jl
out
mov
fadd
jge
mov
xor
ficompl
jo
pop
cmpsb
ds
inc
in
jns
lods
mov
inc
jg
add
pushf
or
sarb
pop
jb
ret
inc
cmc
fnstenv
int
cmp
mov
mov
dec
clc
in
mov
lods
aam
test
aas
and
adc
adc
into
mov
and
fsubl
cli
xchg
push
pop
inc
loope
xor
mov
or
push
pop
sub
fsubs
push
stos
xchg
push
jl
add
add
xchg
jp
sub
sbb
sub
jmp
pop
add
repz
add
pop
cwtl
cmp
adc
int3
lods
scas
lods
arpl
fwait
cmp
add
mov
adc
and
jle
mov
cli
jp
mov
mov
push
enter
dec
or
insl
xchg
aam
idivl
dec
push
lea
roll
push
push
mov
add
push
and
leave
push
xlat
clc
sbb
popa
sub
imul
jae
sub
jno
movsb
dec
push
fld
xor
push
shll
data16
or
jmp
and
popf
and
das
inc
repz
add
int
mov
sahf
mov
fisttpll
shl
rol
test
cwtl
xor
pop
jmp
jne
fcomp
sbb
add
sbb
dec
or
cmp
lock
insb
in
iret
adc
daa
loope
fnstenv
xor
add
mov
pop
cli
scas
and
sahf
andb
adc
pop
push
jp
aad
or
lret
push
sbb
jge
mov
adc
push
clc
lahf
enter
sbb
xchg
sbb
add
outsb
in
jge
addr16
icebp
push
push
or
and
xchg
pop
outsl
jbe
add
faddl
jg
mov
aam
arpl
jp
ud1
or
mov
fnstenv
sbb
cmp
sub
mov
dec
cmp
enter
cmp
mov
jno
adc
xor
jbe
push
fcmovnbe
mov
lahf
int
add
out
jle
lods
stos
sbb
inc
cli
mov
dec
dec
jp
adc
daa
pushf
dec
cmpsl
imul
outsb
lea
push
mov
sarl
pop
cld
xchg
test
push
scas
insl
mov
stos
test
mov
sub
sti
mov
mov
in
jp
dec
mov
sub
testb
adc
sub
xor
push
xchg
mov
mov
daa
mov
push
jg
sbb
xchg
xor
sbb
xchg
sbb
xchg
dec
iret
lods
mov
inc
xor
aas
xchg
push
and
mov
fidivrl
lcall
cs
and
or
fnstsw
test
add
jnp
mov
and
and
out
pop
push
adc
paddd
and
test
mov
ja
adc
ja
pop
cmp
and
mov
fisttps
xor
out
cmp
mov
cmp
pusha
push
dec
add
cmp
scas
sbb
sub
ret
into
jo
clc
and
out
pop
outsb
sbb
mov
inc
lcall
test
xor
outsl
sahf
cmp
add
ret
lret
dec
insb
pushf
mov
test
xchg
sub
mov
stos
scas
fimull
push
sub
push
insl
and
leave
popa
enter
pop
jnp
fcoml
fnstsw
js
in
cmpsl
bound
or
mov
jns
outsl
dec
sbbl
pushl
ficoms
jne
mov
cmpsl
xchg
xor
cmc
xchg
divb
neg
neg
outsb
and
lds
aaa
xor
mov
divb
mov
subb
pop
add
xchg
cmc
leave
cld
and
add
int
ljmp
pop
push
jmp
pop
popa
cmp
in
cvtps2pi
pop
pop
push
aas
pop
sbb
enter
jb
or
push
cld
shll
jae
gs
test
je,pt
addr16
mov
mov
and
inc
lcall
xchg
mov
mov
test
stos
test
sub
lods
lds
ss
push
in
pop
test
lea
mov
mov
insb
fcoms
add
scas
pop
lahf
add
add
xchg
rorl
int
and
pushf
dec
adc
bound
xchg
push
sub
inc
fadds
repz
xchg
insl
lods
push
out
dec
mov
cld
xchg
adc
repz
sahf
loop
jbe
inc
xor
or
mov
add
das
xchg
mov
in
sbb
or
test
sub
gs
repnz
daa
adc
popf
xor
cmp
push
mov
test
dec
mov
repnz
or
arpl
movsb
aas
rorl
stc
mov
in
add
xchg
pusha
in
in
jae
fdiv
push
je,pn
push
and
lea
stc
outsl
test
adc
arpl
push
xchg
jge
aaa
ljmp
popl
fwait
hlt
adc
mov
jl
pop
out
leave
inc
mov
enter
mov
stc
aaa
mov
cli
pop
lret
out
lret
sub
js
in
or
repz
ljmp
cmp
pop
das
loop
pop
mov
mov
fmulp
ljmp
sbb
add
out
jmp
cltd
push
jmp
in
in
or
mov
stos
cld
mov
push
cwtl
add
sub
imul
mov
adc
loop
ret
or
pop
cltd
mov
fxch
lods
lahf
insl
fsubrp
pop
and
or
loopne
xor
dec
loope
push
stc
lods
rcll
ret
dec
nop
outsl
rorb
jnp
xor
mov
es
add
int3
add
inc
jecxz
or
fistpll
movsb
xor
loop
mov
out
xchg
hlt
mov
jne
and
xor
outsl
je
or
imul
push
or
fwait
dec
inc
mov
adc
jecxz
pop
jno
test
or
shll
and
xchg
jecxz
cmp
gs
shrb
fidivl
sarb
mov
cli
push
stc
push
mulb
mov
shll
mov
stc
daa
or
mov
pop
jb
jmp
cmp
xchg
aas
sti
mov
sbb
jg
mov
cmp
data16
loopne
lods
mov
out
dec
sub
cmp
jno
cmpsb
pop
std
pushf
popf
and
jne
jp
jmp
sbb
lret
clc
pop
inc
and
sub
pop
sbb
fstpl
seta
adc
inc
enter
ljmp
and
arpl
jne
pop
divb
stos
movsl
mov
or
movsb
jbe
loopne
push
call
negl
loop
jbe
lcall
jbe
push
insb
out
jg
xor
xchg
adc
mov
add
mov
adc
notb
and
dec
push
rcl
hlt
jo
jl
test
ja
pop
inc
aad
shrb
mov
test
xchg
push
inc
int3
loopne
pop
loopne
xchg
cmpsb
mov
lret
dec
mov
xchg
outsb
pop
jno
push
ljmp
pushf
jmp
int3
push
and
icebp
xor
rcrl
jbe
cmpsb
out
fbstp
cld
imul
lahf
xchg
dec
jnp
lds
push
jo
fistl
out
sbb
out
cmpsb
push
mov
xor
mov
sub
lods
push
enter
mov
mov
ja
mul
sub
mov
add
inc
push
xor
sub
or
xor
test
bound
imul
mov
mov
inc
cmp
dec
and
daa
jmp
sub
mov
sti
mov
dec
cmp
mov
or
inc
daa
pop
push
icebp
leave
add
pop
out
cltd
or
mov
imul
inc
lds
push
ss
push
dec
out
andb
mov
shll
test
div
fwait
push
popf
jg
dec
cmp
aaa
stos
dec
or
sub
notb
mov
inc
sub
daa
fucomp
xchg
in
cmpsl
or
mov
add
mov
orb
test
mov
stos
jo
ret
movsb
out
pop
insl
or
push
rclb
jo
cmpl
mov
inc
push
mov
pusha
in
push
cltd
shrl
enter
and
test
mov
jp
enter
push
jmp
jb
cli
cmp
xchg
sti
and
fbld
dec
ficoms
mov
insb
mov
sahf
mov
mov
loope
popa
ret
sti
push
lret
add
out
inc
adc
sbb
add
rep
push
mov
aaa
cmpsb
and
cmp
pop
ret
jo
xor
in
daa
ds
push
clc
mov
lret
repnz
mov
pushl
insl
xchg
jo
lret
mov
inc
dec
lahf
adc
push
fstps
je
loop
mov
mov
in
mov
or
pop
xor
or
add
into
aaa
lods
mov
jmp
cmp
inc
xchg
dec
outsl
mov
insb
mov
or
out
xchg
mov
xor
add
mov
mov
cmp
out
insl
clc
jbe
call
ret
pop
hlt
std
mov
leave
lea
stos
jbe
cmp
fst
dec
loope
cmp
test
lea
lods
pop
sbb
shrb
push
add
fstl
xchg
jne
pusha
lcall
xchg
insb
cmc
push
cmp
push
cld
insb
clc
push
sub
push
jg
lretw
repz
jno
test
fcmovu
mov
jmp
cwtl
cmp
sub
xor
out
iret
cs
jno
adc
add
sbb
xchg
or
ja
mov
sbb
push
inc
lcall
int3
dec
sbb
sub
push
cmp
hlt
lds
fiadds
add
out
mov
push
jle
fstps
repnz
shrb
mov
cmp
jo
dec
cmp
sbb
fadd
jecxz
jmp
add
add
inc
inc
movl
jo
or
adc
and
adcl
and
decl
sti
jp
xchg
stos
mov
arpl
push
pop
jne
push
cmp
add
bswap
movzbl
mov
ljmp
insl
push
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
test
ret
call
stos
shlb
sub
and
adcb
fistps
lret
iret
cli
jbe
fbstp
rolb
cmpsb
ret
cli
sahf
cmpps
negb
push
adc
imul
adc
and
mov
lret
repz
aad
add
ljmp
and
cld
mov
jo
lcall
sub
push
ds
sub
pop
cmp
sub
jnp
clc
cmp
adc
jg
push
and
cwtl
push
add
pop
mov
addb
or
mov
mov
pop
fsts
out
or
out
xorl
push
sbb
cmpsl
jmp
mov
popf
push
xor
xor
lock
and
jnp
add
cmp
push
sbb
bound
stos
lock
add
test
ret
cli
sbb
enter
push
dec
pop
loopne
imul
xor
aaa
call
inc
or
push
call
aaa
cmpsb
dec
lcall
mov
enter
adc
jne
mov
jae
cmp
test
sub
insl
popf
in
xchg
jo
in
std
sbb
mov
mov
cmp
mov
mul
lock
aaa
hlt
jo
lret
cmp
icebp
pop
sub
ret
jnp
inc
pop
cmp
sub
arpl
out
and
mov
stos
sub
jmp
lds
scas
pop
roll
fs
xchg
ja
or
sbb
jne
pop
insb
mov
lcall
or
leave
sbb
insl
inc
and
lock
add
push
push
add
pushf
mov
imul
xchg
mov
and
cmp
lods
adc
xlat
test
movsb
scas
outsb
or
or
in
inc
adc
inc
inc
cmpsl
xchg
xchg
xchg
popa
subl
rcr
cmp
cmc
xor
jae
lret
inc
mov
fwait
and
pop
in
int3
hlt
aas
popa
pop
test
bound
sahf
dec
pop
fwait
call
and
push
or
add
and
cmp
lahf
cmp
movsb
mov
cmp
dec
in
inc
int3
xchg
pop
push
mov
out
xchg
mov
xorb
pop
pop
mov
and
mov
or
das
insl
mov
cmc
rolb
xor
cmpl
insl
je
sub
inc
xlat
repnz
insl
mov
mov
shr
adc
data16
fsubrs
insb
pop
bound
outsb
rep
push
and
cmc
mov
mov
adc
cmp
push
mov
fnstcw
shl
fucomip
jp
addr16
add
jg
and
fidivrs
xchg
shrl
or
arpl
pop
in
mov
leave
cmp
cmp
mov
inc
xchg
mov
cmp
ss
add
or
popa
out
or
dec
repz
pop
sbb
cltd
or
xchg
inc
subl
jecxz
xor
ret
icebp
pop
fbstp
popa
mov
push
jno
out
or
cmp
push
pop
xor
pop
or
cmp
xchg
out
lret
dec
cmp
loop
jge
mov
loop
mov
adc
and
leave
bound
ss
cmp
xor
mov
and
adc
or
in
sbb
nop
and
cmp
stos
push
orb
gs
out
sbb
pop
rclb
negl
divl
xchg
xlat
dec
test
call
stos
lret
mov
popf
dec
out
sub
nop
repnz
mov
clc
dec
fs
push
jbe
pop
les
in
sub
lcall
movsb
shlb
pop
dec
xor
sahf
sbb
dec
jb
mov
xchg
rol
pop
test
stos
lea
xchg
jle
fstl
test
mov
in
mov
bound
mov
mov
dec
movsl
dec
sbb
add
xchg
sbb
xchg
inc
push
or
les
mov
sar
adc
or
push
test
addr16
mov
xchg
insl
movsb
ds
je
inc
add
mov
mov
jge
dec
fadds
cmp
add
and
mov
mov
mov
mov
sbb
sbb
aam
mov
loopne
mov
mov
out
cli
lods
repz
pop
scas
jne
lcall
dec
fwait
cmp
jge
ljmp
jnp
lock
add
dec
dec
push
mov
mov
add
or
xor
and
push
mov
lods
aam
test
xchg
xchg
fwait
cmovge
dec
add
icebp
jmp
ror
or
rorb
sahf
notb
jecxz
xor
sub
adc
pop
int3
jg
jne
jbe
mov
ror
aad
out
jae
inc
jmp
push
cli
out
rcrb
cmp
mov
mov
push
aam
mov
rorl
xchg
jbe
push
lea
mov
xor
aam
mov
xor
fdivl
mov
fs
stos
sbb
xor
adc
add
jmp
loopne
push
pop
ja
lahf
dec
xchg
or
pop
dec
aas
mov
mov
inc
pop
gs
cmp
cmpl
inc
test
ljmp
dec
ds
test
cmpsl
dec
xor
and
xchg
cltd
jb
notb
and
mov
xor
jno
int3
outsw
push
test
repnz
dec
rclb
sbb
sub
sub
push
inc
iret
sub
notb
popf
dec
nop
xor
mov
cmp
scas
popf
cmp
idivb
pop
aam
jno
and
pop
pop
shl
aaa
add
cmp
dec
adc
iret
inc
mov
and
inc
inc
iret
or
out
cmpl
sbb
pop
call
and
mov
insb
pop
jne
cwtl
dec
mov
and
aad
push
ret
shrl
sbb
bound
lods
inc
nop
icebp
or
pop
jmp
push
adc
add
push
mov
and
fs
stos
dec
push
mov
add
fisubs
cmp
js
inc
adc
mov
in
scas
leave
fildll
cmp
sahf
xorl
add
in
andb
jnp
fs
cli
mov
mov
inc
mov
xor
negb
fdivr
je
mov
faddl
pop
mov
mov
mov
out
ljmp
add
or
sbb
jg
push
outsb
imul
pop
mov
adcb
cmp
cwtl
sbb
fcoms
pop
inc
mov
imul
cmpsl
outsl
mov
lahf
xor
int3
add
fisttps
mov
mov
cmp
pop
inc
ret
loopne
push
pop
mov
call
jle
push
pop
faddl
mov
jmp
push
ret
inc
mov
mov
and
cwtl
xor
test
pushf
push
cld
addb
pop
fistl
mov
dec
pop
jae
movsb
outsl
lcall
adc
addb
jle
cli
pop
call
xor
fdivs
push
cld
pop
sub
fisubl
xchg
and
int3
movsb
lahf
addr16
std
movsb
push
mov
scas
jbe
test
adc
mov
mov
sub
cli
pop
adc
jo
xor
pop
or
mov
push
adc
cld
inc
insl
lods
test
or
je
and
lret
mov
or
test
jg
inc
pop
adc
lahf
or
cli
mov
pop
fstpl
ljmp
movsb
in
sbb
mov
xchg
lgs
arpl
mov
mov
sbbl
mov
jg
and
inc
cmc
jbe
popaw
add
and
data16
cwtl
in
xchg
inc
cmp
and
out
jp
cmp
insl
aaa
and
inc
int
ja
jne
insb
push
jno
sub
aas
xchg
jg
jg
enter
sub
std
mov
sbb
jno
out
fwait
bound
mov
shl
lods
enter
jne
mov
fadds
lea
int
imul
rorb
popf
test
mov
xlat
inc
decl
lea
sub
pop
je
leave
loope
push
pushf
nop
cwtl
std
jno
or
dec
cmp
test
xor
out
sbb
cmp
fstpl
inc
sbb
push
xchg
jl
test
mov
call
fidivs
fwait
pop
jae
jns
stc
jno
cmc
leave
inc
sbbb
loop
out
test
mov
mov
movsb
and
push
paddsw
pop
add
rcrb
mov
mov
fisubl
xor
das
push
xchg
inc
sbb
ds
push
test
mov
dec
jns
movsl
or
add
and
movsb
aas
movsl
test
dec
insb
repnz
mov
pop
jecxz
test
loope
jge
jae
lods
jne
enter
jmp
jnp
xchg
sub
push
mov
dec
xchg
jl
movsl
call
mov
mov
and
xor
test
pop
mov
jbe
dec
push
xlat
mov
cmp
shrl
imul
ret
ret
dec
pop
and
popf
dec
scas
push
sbb
jl
pushf
movsb
push
data16
add
fidivrl
sbb
dec
mov
cmp
test
lea
cmp
mov
pop
movsb
jbe
or
inc
adc
jbe
adc
xchg
pop
push
adc
xlat
sub
dec
mov
flds
sub
xchg
jp
mov
adc
sub
xor
insl
push
mov
push
jge
movq
xchg
sub
sti
arpl
cltd
dec
adc
cmp
pop
gs
iret
fiaddl
dec
jbe
mov
std
push
cmpsb
lods
xchg
rolb
insl
or
test
lret
mov
mov
loope
sbb
push
xchg
push
jge
xor
stos
pop
outsb
lea
pop
rcrl
mov
mov
pop
lcall
test
mov
pop
jp
mov
leave
mov
cmp
sbb
fcmovnu
pop
rcrl
stos
ja
sub
mov
rdmsr
gs
shl
iret
out
repz
adc
cmpl
roll
jb
sbb
rolb
xchg
lods
ss
push
jo
adc
inc
cs
xor
movsb
jge
aad
or
pushf
call
popa
pop
js
roll
push
sbb
je
sub
out
repz
je
sub
ror
fdivrs
js
mov
es
mov
dec
movsl
xor
ret
hlt
sbb
loope
fnstenv
sti
cmpsb
push
sarb
ss
mov
xchg
dec
scas
out
mov
mov
js
mov
outsb
in
xchg
sub
mov
push
sub
push
lea
pop
and
loop
inc
outsb
xchg
sbb
int
daa
fstps
outsl
outsb
daa
mov
dec
mov
xchg
jmp
and
movsl
je
mov
push
dec
sub
sarl
stos
mov
cmp
xchg
movsb
mov
jle
and
fistpll
dec
adc
mov
mov
inc
push
inc
push
xchg
jo
xor
mov
jecxz
repnz
xchg
ss
subb
roll
push
bound
sbb
fimuls
dec
mov
loop
sarl
or
mov
dec
dec
mov
cs
stc
sbb
cmpl
xchg
dec
in
les
lds
cmp
jo
je
and
xchg
adcb
push
es
jle
add
ja
adc
lcall
or
pop
push
xor
or
and
jnp
dec
in
push
outsb
lock
rclb
cld
xchg
mov
push
shrb
or
sbb
hlt
cs
ds
rolb
lock
mov
push
xchg
test
mov
mov
faddl
cmp
fsubs
push
xchg
mov
movsl
fwait
in
aad
add
xor
sub
pop
mov
enter
mov
movsb
movl
adc
xchg
test
loop
add
rorl
jne
ds
ret
out
lret
jge
mov
xlat
sub
mov
mov
mov
arpl
fwait
xchg
lock
bound
sub
test
pop
popf
rep
fiaddl
push
sbb
ret
mov
jnp
or
in
push
mov
add
bound
sbb
mov
flds
mov
cmpsl
es
sub
lret
inc
add
daa
adc
sarl
adc
jge
sub
sub
scas
shll
cld
fstps
add
xchg
out
jle
lret
data16
mov
notl
mov
aaa
add
cli
enter
sub
jne
pop
lret
push
ja
dec
loope
sbb
test
cld
sub
out
dec
add
lea
in
mov
dec
mov
mov
inc
add
push
gs
xor
in
ljmp
jb
idiv
out
sub
cmp
lcall
in
mov
mov
fdivrs
push
mov
adc
loop
jo
loope
cmp
rclb
push
mov
or
jne
adc
mov
sub
std
in
adc
jmp
in
lds
inc
xlat
fcoms
ds
jl
arpl
fcoml
cmp
popa
filds
es
jae
xchg
fisubrs
xchg
mov
repz
mov
xchg
jle
xor
mov
filds
repnz
mov
mov
enter
mov
cmp
sub
ss
inc
xchg
inc
adc
lds
mov
and
daa
mov
cld
not
dec
xchg
pusha
add
leave
xor
sbb
fnsave
cmp
pop
or
sbb
pushl
insl
or
sbb
jge
xor
stos
mov
ficompl
xchg
inc
and
cmc
and
cmpsl
xchg
movsb
mov
mov
xchg
rol
xchg
cltd
pop
and
inc
inc
or
jne
adc
jae
test
es
jle
popa
jmp
ja
pop
std
and
push
mov
psubsb
mov
push
cld
icebp
insl
xlat
ds
dec
mov
mov
adc
in
jge
cbtw
mov
push
jecxz
sti
xor
sub
ljmp
xor
pop
cmpsl
and
jmp
jmp
outsl
rorl
in
movsb
cmpsl
dec
into
addr16
je
xor
mov
cld
xchg
insl
xlat
movsb
mov
dec
nop
lods
test
xlat
repz
push
mov
cmp
stc
sahf
bnd
arpl
xchg
push
popf
add
xchg
sbb
cmp
ret
cli
into
ret
xchg
xchg
lods
jnp
sti
xchg
repz
sub
jne
xlat
in
mov
out
fbld
es
jbe
sbb
mov
jl
mov
int
mov
jb
cmp
stos
test
out
pop
jno
subps
jb
and
and
rolb
insb
xor
clc
movsb
cli
mov
cmp
loop
mov
repz
pop
jo
adc
in
xchg
jne
fistpl
and
inc
and
sub
negb
xchg
xor
inc
and
test
mov
pusha
mov
sbb
mov
rcrb
xchg
or
shll
sahf
push
lahf
cmc
jnp
je
lret
cvtpi2ps
cld
pusha
mov
inc
and
negl
je
ror
dec
mov
pop
xor
mov
push
inc
pop
into
pop
outsl
hlt
mov
mov
in
and
adc
jns
pop
enter
xor
icebp
sbb
lret
pusha
push
fdivr
stos
loope
push
jecxz
fisubrs
mov
sub
cwtl
out
adc
sbb
jmp
fsubrs
mov
out
jbe
xor
adc
and
aaa
ljmp
push
in
add
rorl
jnp
push
roll
negl
and
add
inc
hlt
sub
push
movsl
xchg
pop
xchg
add
adc
fisubl
fstpl
sub
loop
push
in
xor
mov
sub
and
and
mov
mov
or
inc
cli
dec
sahf
push
vsubpd
leave
pop
mov
repz
pushf
loope
and
jl
enter
insl
pop
cmp
mov
iret
sbb
xchg
fists
or
out
pop
mov
out
jmp
cmpsb
js
mov
insl
xor
fiadds
int3
out
ret
jle
cmpsl
xor
add
lret
lea
call
mov
sub
cmp
jno
sbb
inc
dec
arpl
mov
xchg
push
jbe
subl
cld
push
jl
arpl
cld
sbb
fucomi
adc
sub
adc
bound
add
jno
add
pop
insb
sbb
enter
adc
in
cmc
js
cs
test
ret
adc
cmc
les
jne
test
and
add
cmp
insl
pop
outsb
cmp
roll
cmp
mov
dec
xchg
xor
fisubl
std
sar
std
ss
push
test
add
adc
je
mov
mov
je
add
sub
jb
dec
ror
or
stos
xor
dec
scas
sub
push
insl
mov
roll
pop
sbb
lock
push
out
fiaddl
mov
scas
push
fdivrl
cmp
scas
mov
mov
rcr
mov
pop
push
arpl
push
mov
loopne
fcoms
data16
xchg
and
rcrb
push
jl
int3
push
lahf
rol
cmp
fcmovnbe
mov
and
test
dec
pop
jbe
push
dec
fstpt
push
pop
addr16
pop
shl
repz
adc
lcall
inc
mov
pop
jecxz
jg
jno
pop
mov
dec
sub
and
mov
mov
ret
loopne
pop
into
enter
data16
scas
cwtl
call
lea
bound
repz
xlat
insl
push
lea
inc
xchg
jbe
push
cld
icebp
pop
adc
movsl
dec
mov
cli
call
jmp
sbb
cmp
rep
sbb
adc
clc
lret
push
ret
inc
adc
stos
sbb
and
ret
jle
notl
push
mov
push
fsubrs
mov
xchg
nop
dec
cmpsb
and
mov
out
sarl
mov
adc
and
inc
insl
addb
test
fwait
xor
mov
push
fistpl
dec
cli
std
les
fmull
shll
add
add
mov
add
or
inc
push
mov
leave
push
jle
repnz
fcmovne
out
dec
dec
scas
xlat
fdivl
xchg
add
aaa
jmp
jge
mov
dec
xchg
icebp
pop
std
stos
jmp
aas
movsl
and
sbb
cmp
and
or
gs
pop
add
js
xlat
inc
and
dec
hlt
cmp
jae
es
cmp
mov
pop
in
mov
mov
lcall
dec
sbb
mov
movsb
add
test
mov
fwait
or
cmpsl
push
xchg
mov
cltd
sub
loope,pn
inc
ficomps
loopne
pop
repz
sbb
pop
xchg
xchg
ds
lods
imul
jg
gs
in
cmp
xchg
cmp
bound
mov
and
arpl
mov
sbb
push
lock
rcrl
lret
mov
scas
adc
or
jne
das
orl
and
xlat
test
lret
fldt
dec
cli
xchg
and
mov
sub
push
divb
add
or
jo
call
mov
std
sbb
push
jge
jle
sbb
cld
lret
xchg
sub
shr
clc
pop
popa
lds
push
mov
clc
ret
pusha
mov
vpsllq
sbb
and
push
test
mov
leave
sbb
pushf
add
xchg
sbb
loope
imul
sbb
mov
fldcw
fucomip
jl
js
adc
push
sub
mov
mov
addr16
push
jge
xchg
mov
repnz
dec
rorb
movsl
or
je
lcall
mov
mov
or
adcb
pop
mov
gs
iret
add
das
insb
repz
ffree
in
mov
push
and
xchg
and
lds
xchg
rol
mov
into
add
daa
movsb
int
test
push
cmp
inc
ret
add
movsb
mov
or
std
loope
or
test
int
push
lds
xchg
mov
xlat
ficoms
aaa
into
fsubrp
mov
xor
push
scas
cmp
jo
push
sbb
and
lret
add
in
xor
pop
cltd
and
mov
mov
jg
xchg
add
cs
add
sqrtps
mov
mov
add
clc
sbb
out
sub
addr16
cmp
in
mov
xor
ret
cwtl
rolb
lock
inc
mov
sub
fistpll
les
push
jle
lret
popf
mov
lahf
stos
pop
ja
jbe
mov
cmp
xchg
sbb
mov
dec
iret
bound
dec
mov
pop
or
outsb
sti
or
mov
in
dec
ret
xchg
mov
cltd
js
cli
dec
pop
pop
add
bound
pop
cmp
mov
icebp
popa
xor
inc
stc
pop
mov
jb
rclb
aas
data16
cmp
frstor
pop
jle
add
outsb
mov
inc
pop
popf
jns
popf
jge
cld
rcrb
mov
shll
xchg
fsts
mov
out
sbb
fwait
sbb
test
jge
xchg
aad
aaa
idiv
mov
cltd
in
fs
lret
outsl
sbb
push
int
adc
jecxz
cmp
cmp
loope
fildl
xchg
pop
push
add
stos
dec
jnp,pn
lret
fldenv
xor
pusha
push
mov
loop
xchg
fucomip
lahf
cmpsb
out
shlb
jno
mov
add
push
lds
dec
sbb
or
mov
push
imul
arpl
xchg
cli
lret
mov
adc
popf
or
int
frstor
cmpsl
insl
mov
scas
add
sub
sub
xchg
xor
imul
subl
movsl
in
mov
push
push
mov
lods
and
lds
push
add
cmpb
push
sub
rep
dec
sub
sub
jo
pushf
jnp
mov
push
gs
pop
mov
pop
sub
cmp
movl
frstor
mov
pop
clc
cmp
movsl
adc
cli
and
into
dec
cld
pop
and
imul
push
jns
lahf
movsb
inc
pop
stos
xchg
lock
push
pusha
dec
jmp
push
xlat
dec
outsl
fs
lea
jle
lcall
mov
mov
popf
mov
mov
xor
jb
ret
imul
mulb
into
mov
fcompl
mov
lods
or
es
dec
imul
mov
mov
lods
rsqrtps
js
sub
jne
cltd
mov
mov
adc
cmp
add
cmp
insb
sarb
dec
or
insb
xchg
data16
jno
jmp
js
imulb
mov
mov
mov
and
xchg
mov
and
mov
mov
xor
pop
pop
pop
inc
mov
push
je
int3
dec
lods
sub
cli
stos
in
call
xorl
jbe
in
aad
das
adc
jae
xchg
cs
insb
xchg
add
cmp
inc
cmp
lods
xor
pop
pop
pushf
movsb
pop
inc
sub
daa
aas
movsb
sarl
or
or
shl
or
dec
loopne
sbb
aam
jl
fdivs
and
sbb
jg
dec
mov
jb
shrd
dec
and
xor
inc
mov
cmp
loopne
stos
pop
cmpsb
push
add
pop
mov
xchg
inc
lods
cli
jg
iret
jecxz
ds
xchg
dec
icebp
lock
mov
jg
adc
pop
dec
push
cmp
rolb
fwait
repz
mov
popa
pop
or
mov
repz
adc
test
in
xchg
jne
jno
nop
mov
aad
pop
and
add
xor
int3
in
add
or
xchg
gs
stos
lret
fwait
je
insl
mov
xor
sti
repnz
push
jb
out
call
or
scas
pop
jp
testb
add
mov
mov
gs
dec
ret
aaa
int
std
imul
push
push
into
jae
lahf
repnz
adc
int3
popa
pop
sub
push
mov
and
jge
mov
aas
and
pop
cmp
lahf
in
outsb
jle
mov
hlt
hlt
cmp
fstp
gs
je
sahf
aas
nop
stc
add
div
clc
mov
das
leave
dec
inc
loopne
scas
ret
adc
and
ds
push
mov
add
lret
jmp
lods
pop
andb
and
cs
and
or
test
out
adc
dec
sarb
mov
inc
daa
mov
xor
subb
insl
push
cmpsl
sub
pminub
mov
hlt
xchg
imul
jno
sbb
mov
jp
pop
adc
xchg
scas
adc
xchg
test
nop
mov
fstp
dec
adc
aas
add
mov
cmp
aam
add
ret
cmp
jns
jmp
and
xchg
enter
bound
leave
pushf
leave
icebp
divl
cld
xchg
les
adc
jb
imul
les
xchg
in
loope
bound
hlt
mov
push
adc
repnz
lret
sbb
mov
jmp
sbb
and
push
and
mov
sub
adc
stos
shll
push
adc
push
pop
jae
xor
lahf
adcl
or
jg
loope
push
rol
gs
nop
outsl
mov
lock
mov
cwtl
cmpsb
jns
mov
inc
invd
push
pop
stos
cld
hlt
addr16
fildll
mov
inc
ljmp
jbe
fnsave
sub
rorl
sub
incl
mov
or
ret
clc
dec
fsubr
test
clc
imul
xchg
imul
pop
addb
lods
xlat
sarb
mov
std
sbb
add
mov
in
repnz
push
les
sub
cmc
fadd
xor
sbb
frstor
pop
jl
mov
idivb
dec
outsb
pop
shrb
xor
dec
loop
inc
std
jno
outsl
lret
pop
adc
and
inc
cwtl
adc
enter
repnz
popa
imul
and
adc
icebp
or
iret
popf
push
outsl
sahf
sub
cmp
sbb
je
jmp
inc
fnstenv
jns
xor
in
mov
sbb
je
or
mov
ja
ret
pop
lods
popf
and
addr16
lret
int
das
cs
lods
icebp
loop
cmp
mov
dec
cwtl
pop
das
cltd
add
shll
lea
and
xor
lahf
in
pop
push
pop
and
jecxz
or
push
repz
lock
leave
cmp
cmpsb
dec
dec
sub
mov
or
ljmp
mov
mov
mov
mov
xlat
inc
mov
test
lods
sub
es
shlb
mov
xadd
xchg
bnd
mov
sub
fnstenv
cmpsl
into
punpcklwd
pop
mov
lcall
ret
sbb
sub
mov
lahf
add
pop
lret
sahf
sbb
cmp
js
lock
push
aad
clc
push
inc
and
jl
xor
test
mov
fnstcw
hlt
dec
mov
es
int
mov
mov
aaa
aad
and
adc
pop
jg
xor
cmp
incb
jne
dec
outsl
call
lahf
sub
dec
pop
insb
mov
pop
push
sub
out
clc
and
inc
adc
jge
inc
cmp
jecxz
cmpsb
loop
jns
inc
std
nop
lret
cmpsb
adcb
fisubrl
dec
sbb
push
sub
ljmp
push
jmp
xchg
jae
mov
mov
ljmp
dec
stc
inc
mov
xor
out
lock
iret
push
adc
sbbb
jnp
pop
jo
push
lods
rdpmc
fists
cs
xor
mov
dec
mov
ficoms
push
cmc
add
mov
and
mov
mov
xor
mov
or
inc
push
lods
gs
mov
lock
out
dec
aam
inc
jmp
or
ds
pop
push
fcmovu
adc
repnz
pop
cmp
mov
leave
cs
xor
lock
or
pop
pop
xchg
pusha
add
add
popa
sub
adcl
mov
xchg
pop
add
and
loope
out
movb
loop
iret
lret
jno
jle
push
aaa
in
xchg
sbb
xchg
inc
out
or
xchg
mov
jb
jmp
lods
mov
test
pop
mov
add
leave
ss
mov
fcomps
rclb
jmp
jmp
pop
jne
and
jns
cmp
xchg
dec
test
pop
mov
adc
imul
loope
and
jmp
fiaddl
aad
aam
cmp
xchg
movsl
dec
andl
or
dec
inc
sarb
stos
fsubs
push
mov
mov
dec
adc
scas
in
in
push
mov
jns
imul
xor
mov
test
dec
mov
fistps
shlb
mov
mov
int3
jmp
jmp
fs
loope
add
icebp
xor
lods
inc
adc
ljmp
jmp
inc
aad
lcall
negl
xor
mov
add
jns
fcoms
xchg
std
pop
xor
in
dec
push
or
pop
clc
sbb
and
das
pop
lock
mov
adc
push
into
or
pop
xchg
movsl
push
ret
push
mov
pop
jecxz
dec
or
adc
sbb
in
mov
arpl
in
aam
add
mov
jnp
push
or
mov
sub
lcall
xlat
sub
xchg
shr
nop
test
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
cltd
dec
cmpsl
add
nop
jl
pop
pop
jl
jo
out
sbb
out
mov
cmp
rcll
shll
jno
bound
movsb
or
sbb
syscall
lret
ja
xchg
shr
sub
test
pop
mov
out
xchg
add
scas
leave
outsb
popf
fmull
add
iret
pop
shll
mov
sbb
repz
jbe
shl
mov
fsubrs
testb
mov
mov
out
hlt
ja
mov
sbb
dec
cli
mov
rcrb
add
add
adc
addr16
sub
mov
xlat
dec
mov
faddp
pusha
pop
cmp
rcrb
sub
mov
testl
fcmovne
divl
lods
data16
sub
notl
or
fdivr
mov
sub
lods
aad
adc
adc
in
pusha
es
mov
xchg
lock
push
shlb
mov
data16
pop
mov
mov
call
ss
imul
test
mov
vshufps
addb
data16
test
pop
cmp
out
jl
fisubrl
es
dec
les
add
cmp
in
arpl
daa
ret
mov
cmp
cmc
sub
imul
pop
lcall
fucomp
fwait
inc
insl
inc
imul
xchg
and
insl
push
subb
push
pop
out
xchg
push
add
testl
and
les
jle
xlat
or
xchg
int
ret
cs
push
mov
arpl
pop
fnstenv
lret
jb
sbb
xchg
fs
lea
sti
mov
lcall
dec
insl
cltd
push
cmp
in
mov
jg
push
roll
xchg
mov
ljmp
outsb
lds
test
dec
inc
and
sbb
dec
push
push
test
xchg
ficompl
repz
add
cmp
cmp
or
in
xor
cmpsb
and
loope
mov
cmp
das
nop
cs
insb
push
adc
jg
cmpsl
sbb
sub
iret
pop
mov
push
ljmp
sbb
or
add
imul
hlt
int3
cvtdq2ps
push
ds
mov
inc
inc
mov
adc
in
push
scas
adc
mov
dec
inc
cli
icebp
mov
mov
or
sub
jmp
cmp
push
test
push
and
push
rcrb
movb
xchg
imul
out
das
xlat
addr16
or
test
xchg
push
out
rol
cmc
out
out
dec
adc
loopne
into
or
xorl
addr16
or
hlt
mov
or
fmul
scas
adc
inc
mov
pop
aam
adc
xchg
ds
or
das
test
outsb
hlt
dec
push
mov
aad
mull
sbb
lahf
fsub
repz
or
dec
fucomi
jg
sbb
shrl
and
fs
push
inc
dec
xchg
sub
popa
fs
push
push
pop
icebp
mov
mov
daa
cli
movsb
stos
test
out
sti
sbb
scas
lcall
scas
fcmovb
adc
jb
mov
xor
lds
ds
sub
subl
cmp
xchg
jno
rcrl
inc
mov
clc
bound
testl
outsb
jle
inc
out
add
or
sub
mov
fiadds
loope
pop
imul
mov
es
hlt
std
fldenv
dec
scas
xchg
xchg
leave
movsl
xchg
mov
xor
mov
cmpsb
adc
mov
push
sbb
cld
clc
movsl
inc
lahf
je
cmp
lds
orb
call
inc
ret
and
idiv
mov
fcoml
pop
incb
sbb
fnstenv
leave
push
rcrb
sbb
loop
ret
mov
adc
sarb
fcoms
or
loop
jecxz
cld
xor
or
outsb
cmpl
inc
popa
jecxz
test
jb
mov
cmpsb
lds
inc
push
add
mov
movsl
fidivrl
data16
mov
xchg
loop
lock
inc
sbb
les
lods
fsts
cmc
mov
lock
mov
sti
nop
push
out
lock
int3
loope
cmp
xor
add
not
push
scas
add
test
sbb
xor
sub
dec
bnd
adc
sub
bound
pop
mov
jnp
xchg
and
sbb
in
cmp
in
test
sbbl
mov
dec
cmp
push
mov
adc
cmp
dec
les
nop
dec
andb
test
in
push
xor
addl
stos
mov
mov
or
rol
idivb
clc
je
int
pop
je
push
pop
cmp
jge
iret
bound
lea
dec
lcall
scas
test
daa
xor
das
xchg
outsl
fists
or
or
test
mov
and
stc
shl
lahf
les
jle
push
je
fs
roll
test
les
mov
movd
and
push
test
push
dec
out
fdiv
in
out
popa
das
jo
sahf
sub
xor
dec
sbb
jo
out
stos
dec
aad
add
pop
int3
aaa
sub
mov
out
and
repnz
jo
jne
cmc
fmuls
and
inc
das
std
pop
into
or
rol
jl
dec
into
xchg
out
pop
nop
mov
adc
push
repnz
outsb
mov
xor
and
adc
and
sbb
mov
daa
cli
ret
push
mov
cmp
push
loope
inc
xchg
or
jecxz
repnz
dec
test
and
in
xchg
je
fnstenv
int3
mull
mov
dec
pop
lods
sahf
adc
sbb
pop
lcall
nop
xor
ds
ljmp
push
popa
push
add
sub
sub
test
and
adc
cltd
pop
dec
js
or
xchg
sbb
sbb
loope
or
inc
andb
and
pop
shrb
push
sti
mov
cmp
hlt
xchg
testl
negb
test
push
dec
nop
fcoms
adc
lret
mov
add
arpl
mov
lea
push
add
scas
ret
xchg
aam
fdivs
mov
cvtpi2ps
inc
decb
jmp
std
idivb
sbb
icebp
jae
mov
pushf
jo
jp
add
loopne,pt
jno
cmp
fcomp
sub
add
jne
aad
ret
ds
jmp
or
aaa
jg
test
int
cmp
jecxz
dec
popa
rcll
sbb
fidivs
mov
cwtl
ret
fs
push
outsl
shll
xchg
add
int3
sub
in
mov
popa
mov
fidivrl
mov
es
cltd
mov
push
dec
sbb
mov
fiadds
sbb
push
add
lahf
cmp
std
subb
orl
sbb
dec
cld
push
sub
inc
or
inc
inc
orps
jae
popf
mov
ja
cmc
jae
add
das
add
dec
xor
aaa
int3
pop
aaa
push
dec
add
in
fcompl
nop
pushf
jg
cmpsl
jge
das
imul
pop
push
sub
pop
in
scas
mov
movsl
sub
xchg
loopne
ret
cli
mov
mov
push
inc
lock
das
lahf
shr
leave
test
imul
push
stc
insb
js
mov
cmp
testl
mov
pop
mov
in
xchg
jle
cld
cmp
das
fs
jae,pn
es
loop
push
push
cmpsl
cltd
mov
mov
int
popa
adc
jg
movsl
push
test
stos
sbb
sub
outsb
jmp
add
std
imul
das
test
mov
mov
sahf
bound
jge
xchg
icebp
sub
pop
adc
xchg
pop
outsb
out
rcrl
jnp
adc
sub
popf
push
cmpsb
mov
lods
sub
dec
jecxz
jno
mov
add
lahf
mov
loopne
pushf
xchg
pop
push
add
cmp
pop
or
loopne
or
lahf
mov
mov
mov
sub
hlt
and
xor
sbb
lock
xchg
andb
ror
push
test
aaa
out
movsl
mov
pushf
clc
xchg
lods
push
mov
scas
sub
push
mov
xchg
xchg
in
mov
out
cmpsl
mov
daa
jno
cmp
mov
js
pusha
cmp
test
fimuls
jl
pop
out
out
fcompl
dec
sbb
inc
outsl
xor
jge
inc
mov
push
in
adc
cmp
mov
jne
mov
nop
mov
sbb
xchg
stos
idiv
and
xor
lock
pop
jmp
es
repnz
jns
adc
lods
shll
sub
dec
push
jne
jae
mov
cld
add
push
jge
dec
fwait
call
push
push
popf
popa
jmp
inc
jmp
xchg
int3
jb
sub
aaa
cwtl
adc
in
mov
aam
lahf
lret
testl
jl
in
stos
mov
repz
jne
adc
filds
cli
adc
cli
into
cmc
sbb
clc
mov
and
into
add
xchg
out
mov
inc
or
ljmp
mov
loop
cmp
loopne
ja
sub
fadds
lea
push
loop
push
icebp
pop
jmp
add
add
mov
fistl
jmp
or
mov
push
in
dec
mov
push
pusha
nop
les
xchg
jae
into
pop
aaa
das
cmpsl
inc
jno
stc
add
repz
cmpsl
xor
cmp
mov
test
mov
inc
lcall
pop
addl
push
push
sbb
or
adc
inc
dec
leave
loope
loopne
fisubrs
bound
xlat
into
mov
aam
and
mov
shlb
mov
mov
rolb
adcb
dec
mov
jle
insl
lea
sbb
mov
cmp
and
sbb
mov
adcl
jl
es
pcmpgtb
jl
popa
inc
bound
fisubrl
les
imul
das
bound
movb
jl
inc
dec
into
daa
std
dec
pop
rorb
clc
inc
movsl
int3
inc
scas
cmpsl
dec
xor
fwait
mov
cmc
cmpsl
push
jbe
repnz
xorb
loope
popa
stc
and
out
movsb
mov
xor
adc
adc
addr16
dec
aad
repz
mov
xor
xchg
ror
mov
mov
adc
in
cmpsb
push
xchg
loop
inc
jl
ret
sub
xor
jp
iret
pop
jecxz
arpl
push
adc
pop
xchg
sub
jne
mov
mov
out
rcll
sub
repnz
add
push
jp
push
mov
incb
cmp
stc
jae
pop
jge
loop
in
adc
xchg
jle
out
jle
lea
scas
dec
cmp
loopne
aas
sub
jmp
popf
lods
enter
dec
mov
pop
jbe
pop
lods
or
mov
cmpsl
sub
repnz
sbb
test
xlat
dec
inc
test
mov
shlb
mov
xor
xchg
pop
andb
aam
pop
jo
out
mov
cltd
test
lock
dec
cmpb
inc
test
xor
shrl
mov
pop
jge
dec
sbb
sbb
xor
jmp
cmpb
jg
sub
dec
aam
gs
sbb
or
in
lret
mov
mov
ss
mov
pop
loopne
cwtl
ja
loope
sub
shrl
or
call
xchg
decb
int
sub
outsl
xlat
mov
or
jge
pop
inc
mov
push
add
sbb
sub
xlat
fsts
dec
in
mov
adc
mov
je
movsl
mov
xor
ja
mov
nop
fwait
jp
dec
xchg
fmuls
mov
pusha
fwait
inc
repnz
lds
or
roll
ljmp
mov
pop
stos
rcrb
adc
inc
mov
jge
jae
jns
inc
faddp
mov
ljmp
test
add
and
push
sub
test
rclb
lock
pop
testw
fldt
es
loope
mov
jno
out
mov
cmp
std
in
lcall
xchg
arpl
inc
call
leave
and
jl
adc
cmp
inc
inc
cmc
inc
call
pop
mov
xchg
sbb
jbe
dec
sbb
call
sub
jo
ds
bound
dec
jns
push
lahf
add
pop
loop
cmp
leave
out
fstl
outsb
stc
repnz
and
jnp
inc
sbb
cmpsb
std
push
pop
int
lret
lea
xor
jne
pop
jne
loop
pushf
lds
jmp
movhps
add
inc
es
aaa
pop
out
push
daa
mov
adc
scas
out
pop
packuswb
mov
ds
mov
es
jg
xchg
aas
loope
push
gs
add
test
inc
add
sub
xchg
jl
cmp
or
add
insl
mov
jg
cmpb
cmc
das
jb
daa
add
int3
pop
data16
sbb
adc
or
cmp
int3
cmpsl
dec
pop
rcr
cli
bound
mov
in
sub
fmuls
fidivl
nop
test
shlb
inc
repz
add
mov
fdivrs
cltd
les
and
out
and
sub
je
sub
mov
cmpsb
lods
les
fiadds
mov
and
push
cwtl
loope
jae
cmpb
cwtl
pop
and
push
repnz
inc
lock
and
mov
shll
stos
insl
loopne
pop
movsb
gs
arpl
testl
fcoml
test
je
ffree
fucomip
lods
sub
addb
fildll
jae
jo
push
loope
or
xor
dec
popl
mov
shr
adc
adc
add
iret
gs
lds
xchg
mov
ja
jbe
lret
mov
in
and
xor
cmp
movsb
ret
push
dec
add
cmp
xor
cmpsb
pop
iret
jge
mov
aaa
push
xchg
cmp
cmc
scas
push
jmp
jbe
pop
xchg
movsb
ret
ficomps
fildl
pop
mov
imul
shlb
arpl
sub
fadds
popf
clc
mulb
push
pop
jmp
push
test
adc
outsb
fldt
mov
and
imul
shr
and
add
stos
insb
xchg
add
jmp
mov
outsb
mov
xor
popa
movsb
mov
mov
jmp
aas
outsb
insb
addr16
out
mov
push
gs
clc
icebp
dec
bound
aam
not
or
jp
pop
sar
adc
cs
pop
xor
loop
arpl
fildl
inc
push
jne
push
push
jno
add
sbb
jb
out
lcall
lods
or
fists
sbb
aas
in
scas
stc
hlt
and
push
jno
xchg
mul
ret
mov
bound
mov
xchg
aam
jp
dec
sahf
sar
lods
cmp
mov
cmc
mov
push
mov
add
lret
pop
cmpsb
sbb
cmp
xchg
icebp
xchg
inc
mov
sub
push
test
std
push
popa
adc
push
inc
enter
test
sub
xchg
inc
int
fcoms
ret
test
in
cmp
mov
xor
hlt
loope
xchg
inc
pusha
ds
imull
cmp
mov
pop
ljmp
cltd
sahf
cmpsb
test
subl
mov
mov
in
dec
sub
jle
fisubs
pusha
add
and
push
jecxz
and
inc
mov
int3
ja
into
std
push
jb,pt
push
int
ret
pop
les
test
outsb
cmc
sub
loopne
jmp
mov
leave
inc
push
sahf
dec
add
sar
sarb
xlat
andps
fsubs
add
cmp
mov
dec
add
leave
outsl
sbb
mov
stos
popa
and
enter
inc
rcll
out
pop
js
cltd
add
dec
sbbb
mov
pushf
xorb
sti
push
cmp
adc
int3
iret
mov
or
in
jae
xchg
inc
jge
jecxz
ret
repz
lret
orl
leave
cs
fsubrs
movsb
mov
xor
fwait
fwait
mov
cmp
fisttpl
sbb
and
adc
pop
aam
andl
fisubs
sub
cmpsl
push
add
ja
xchg
mov
fsubrl
in
shll
adc
pop
fwait
fwait
mov
lods
adc
xor
inc
roll
push
adc
cld
add
xchg
shl
jmp
pop
jnp
out
jl,pn
xchg
cltd
mov
js
cwtl
cwtl
push
and
test
inc
mov
cmc
mov
push
loop
nop
sahf
jmp
lods
mov
cwtl
dec
je
pop
pushf
mov
jbe
imul
xchg
out
cs
in
jne
or
mov
adc
dec
mov
movsl
test
mov
es
in
jl
insb
fsub
xor
mov
jne
mov
ja
sub
adc
add
mov
ret
pushf
stos
icebp
cltd
xchg
cmp
ret
and
fwait
inc
jge
dec
fnstcw
imul
imul
js
lcall
int3
in
test
std
rorb
ror
pop
adc
cwtl
in
adc
pusha
push
fs
cmp
push
sbb
push
fdivrs
fs
mov
test
cmp
sahf
mov
in
sbb
pop
stos
shrl
fimull
sti
push
cld
push
push
dec
mov
fildl
imul
icebp
aam
iret
test
sbb
jp
repnz
push
out
inc
outsl
lods
cmpsb
sbb
shlb
dec
in
into
jnp
cmp
inc
andb
push
insl
dec
and
jnp
ss
jecxz
jmp
adc
cmpsl
jb
cld
clc
cmp
or
fxch
lock
pop
cmp
mov
fwait
or
mov
jge
jecxz
sub
pusha
mov
jnp
loopne
jb
xchg
and
jbe
lods
aaa
inc
mull
push
pop
cltd
lods
push
dec
jbe
stos
aam
xchg
ror
fld
ficomps
daa
sub
push
mov
ret
insb
adc
out
jns
jo
jg
inc
fs
test
mov
fstpt
and
xchg
mov
sbb
adc
xor
ljmp
mov
int3
mov
lock
cmpsl
imull
xor
ss
jge
sbb
adc
jb
jb
pop
stos
fdiv
imul
push
cli
aaa
ss
push
mov
movsl
int
push
fiadds
and
xor
movsl
xchg
jl
cmp
or
mov
test
sbbl
jp
mov
xchg
bound
pop
aam
pop
imulb
aam
repnz
xchg
das
mov
add
dec
push
es
out
xchg
shl
jp
pop
jb
test
pop
dec
lods
jne
sub
mov
lcall
push
inc
cmp
bound
adc
andl
gs
addl
bound
orl
ror
pop
mov
shlb
sub
stos
jmp
mov
fldl
pop
xchg
js
adc
inc
jle
xchg
outsl
mov
add
mov
repz
iret
dec
fdivrl
enter
pop
fistpl
dec
sub
jge
adc
fbstp
cmp
jg
inc
xchg
fiadds
cmp
call
dec
xlat
lret
mov
and
roll
mov
arpl
cmp
xor
mov
push
and
jl
sub
shr
insb
add
movsb
arpl
pop
ret
aas
jl
mov
mov
test
loopne
repz
fstpl
lds
pop
cmp
ljmp
inc
push
push
push
cmp
fdivrl
pop
mov
enter
gs
lea
adc
sahf
test
mov
aam
idivb
xchg
jp
shrb
mov
cmpb
mov
out
iret
sub
dec
scas
and
mov
fiadds
and
lret
sbb
xchg
loop
cmp
ds
jmp
repz
pushf
pop
push
aam
nop
adc
mov
xlat
lret
test
sti
inc
jo
sub
add
addr16
ret
in
pop
xchg
popf
subb
jno
mov
mov
inc
and
in
sbb
orb
test
pop
pop
add
xor
sarb
ljmp
adc
iret
testl
mov
mov
and
lock
and
insb
cmp
jbe
add
adc
insb
aam
loope
inc
shl
aam
lret
enter
dec
push
jno
sub
push
mov
int3
mov
xor
imul
jge
cmpsl
fcomps
lods
dec
push
inc
push
clc
ja
dec
mov
jp
xchg
mov
sbb
cmpsl
jns
arpl
mov
mov
loopne
dec
push
inc
pusha
ja
sbb
inc
sbb
cmp
rolb
sub
xchg
lret
and
insl
push
pop
adc
cld
test
and
out
add
mov
xor
jp
sbb
push
mov
xchg
loopne
dec
sub
test
lret
xchg
iret
sarb
adc
add
dec
or
or
or
ds
out
jbe
xchg
cmp
add
loop
dec
hlt
rolb
lea
jl
movsb
imull
scas
loopne
nop
and
jg
inc
lds
in
leave
push
cmp
push
rol
xchg
outsb
inc
cwtl
clc
sbb
mov
pushf
mov
lahf
inc
add
add
es
xor
mov
rolb
inc
icebp
int
cwtl
sbb
dec
ja
cltd
les
in
sub
data16
inc
rclb
push
lcall
imul
and
mov
test
mov
subb
daa
sub
dec
aad
fldt
push
sbb
stos
cmp
dec
cwtl
dec
scas
es
testl
sbb
inc
push
lahf
lock
fiaddl
lods
inc
push
add
or
cmpb
rcll
bound
into
sbb
xchg
cld
xor
adc
nop
fidivs
lods
sub
sbb
inc
out
out
add
inc
dec
adc
pop
add
cmc
pop
jnp
push
or
cli
pop
add
sbb
push
fdivp
sub
push
sahf
xchg
xorb
mov
sbbb
aam
mov
inc
add
push
lods
movsl
and
iret
mov
jns,pt
stos
shlb
mov
fwait
add
jbe
bound
mov
xor
filds
negb
enter
sbb
das
arpl
fistl
rolb
sahf
sar
fs
test
sbb
movsb
adc
adc
pushf
lcall
jl
sbb
sbbl
add
sbb
push
cmp
imul
cmp
xchg
cmpsb
movsb
cmp
outsl
xchg
mov
cs
je
adc
pop
or
leave
pop
out
cli
fsubrs
iret
imul
xchg
out
jmp
popf
mov
repz
jo
push
adc
cld
shll
pop
dec
cmp
nop
cltd
cmpsb
int
mov
lahf
testl
xchg
xchg
xor
pop
je
addr16
mov
rorb
dec
and
or
cltd
cmp
nop
mov
addr16
adc
or
cmp
test
add
call
sub
adc
in
add
jae
push
repnz
inc
xchg
xchg
icebp
pop
cmpl
and
popa
xchg
fs
inc
sub
xorl
xchg
jno
mul
jl
popa
pop
test
mov
hlt
lcall
and
enter
sub
fisubl
lret
movb
nopl
sub
push
and
js
std
sti
test
jge
adc
adc
and
dec
add
add
sahf
cmp
nop
push
dec
jbe
or
pop
leave
in
aam
repnz
icebp
in
cmp
fs
imul
loopne
pop
and
cli
nop
je
push
call
adc
pop
dec
and
cmp
test
jge
std
pop
pop
std
push
adc
cld
xor
mov
push
das
inc
cmp
sbb
mov
push
xorb
pop
mov
sbb
mov
or
aaa
in
stos
push
fwait
loope
mov
in
xor
adc
jecxz
xchg
fistps
xchg
fstpt
sahf
outsb
xchg
pop
mov
cld
pusha
fstp
sbb
push
sbb
push
popa
push
inc
ss
outsl
add
mov
in
pop
and
cltd
dec
js
aaa
xchg
in
cmpsl
out
sbb
stc
jns
cwtl
loope
cmpsb
in
addr16
int3
nop
fcoms
insb
into
addb
inc
test
sar
clc
fsubr
inc
add
or
and
jge
sbb
lahf
add
cltd
push
push
pop
sbb
inc
pop
gs
push
inc
fsubrl
adc
inc
mov
ja
cmp
pop
lods
add
data16
pop
aad
mov
mov
movsb
aam
push
lcall
pop
iret
nop
jno
adc
adc
popl
mov
push
out
dec
loope
and
add
out
xor
ss
adc
dec
fmul
test
vmwrite
arpl
das
mov
ljmp
fs
decb
or
and
in
inc
fnstcw
mov
push
mov
ret
lahf
pop
jnp
daa
inc
fwait
pushf
dec
cmp
lds
mov
fsubrl
movq
insl
add
push
shrl
xor
les
mov
enter
shlb
cmpsl
rolb
xchg
loopne
movsb
mov
shl
imul
jecxz
popf
jmp
and
in
lods
nop
lret
mov
xlat
es
sub
mov
adc
xor
loopne
mov
push
push
lds
sbb
xchg
push
das
inc
sub
xchg
dec
sbb
mov
mov
nop
lods
scas
cli
sti
sbb
les
jnp
mov
or
push
lods
xorb
jb
lea
js
mov
and
mov
mov
test
add
xor
jo
inc
mov
scas
sub
inc
sub
push
lcall
not
mov
rorb
lcall
sbb
les
adc
pop
out
fwait
mov
icebp
jnp
dec
xchg
sub
inc
in
cmp
stos
xchg
daa
test
inc
orl
cwtl
inc
aaa
ret
clc
xor
fwait
out
into
xchg
adc
xchg
sbb
adc
xorl
mov
and
push
lds
push
add
pop
push
xor
inc
push
sbb
mov
movsl
lock
and
lcall
or
jmp
jo
jnp
loope
xor
push
movzbl
and
inc
scas
mov
aas
in
sbb
popf
sahf
fadds
xor
xchg
in
lock
pop
push
mov
push
into
inc
repnz
jmp
inc
shlb
or
inc
int3
fnsave
inc
jne
lods
xchg
hlt
and
test
mov
pusha
mov
loope
sbb
mov
mov
loope
int
es
cwtl
mov
mov
clc
xchg
testb
outsl
sbb
or
into
lret
hlt
mov
cmp
or
shll
jne
fstps
cmp
lcall
or
add
sbb
lea
fcoms
aas
arpl
cmp
aaa
pop
fmull
lahf
testb
das
inc
mov
iret
and
mov
jno
jne
pushf
push
push
dec
adc
gs
ds
adc
fnstcw
jge
push
xchg
mov
cmp
dec
lret
jl
jmp
roll
xchg
cmpsb
cmp
sti
fwait
jns
repz
fisubl
call
xchg
jns
and
xchg
imul
jge
push
mov
sti
jbe
lcall
and
fnop
sti
push
xchg
push
push
scas
add
pop
repnz
fs
jo
add
dec
repnz
add
arpl
in
lcall
sub
je
pusha
push
stc
push
sub
mov
repz
in
movsb
cmpsb
insb
imul
popf
inc
dec
mov
popf
arpl
xchg
xor
or
jae
iret
mov
xlat
dec
push
in
mov
add
pop
and
dec
jbe
jge
je
or
and
test
adc
das
fs
ljmp
pop
jmp
dec
xchg
and
xor
sub
jbe
inc
cli
negb
sbb
ds
pop
xchg
test
mov
test
push
mull
push
pop
inc
sbb
mov
sti
fdivs
std
cmp
mov
mov
add
es
pop
lds
or
popl
sbb
lahf
mov
mov
cmp
jg
call
mov
xor
sbb
push
insb
ret
clc
out
mov
aaa
inc
xor
fldcw
adc
loope
popf
sub
mov
sub
lea
mov
std
in
clc
push
sbb
push
xor
xchg
loop,pt
sbb
test
mov
jle
ret
lods
cwtl
int3
inc
dec
out
addr16
and
or
outsl
push
gs
push
xchg
mov
add
divb
cmp
mov
ljmp
or
int
inc
fildll
sarb
or
pop
lret
sbb
lahf
imul
dec
repnz
inc
cmpsb
scas
mov
sub
xor
clc
popa
in
lods
add
xchg
push
push
int3
cs
inc
inc
out
xor
into
loope
nop
outsb
decb
test
cli
mov
movsl
leave
test
aas
cmp
add
lds
test
sub
loop
jae
ficompl
mov
inc
ljmp
fildll
nop
repz
cmp
and
sbb
adc
mov
cmpsl
sbb
lahf
scas
dec
or
and
pushf
pop
iret
or
or
fucomp
sub
pop
sbb
repz
cmp
jb
xor
outsl
mov
fcomp
dec
dec
cmp
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
dec
call
ret
add
scas
xor
jns
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
