add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
gs
sahf
bound
bound
bound
xor
cmp
jns
jne
mov
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
sbb
xchg
loope
cmp
cmp
jb
test
mov
inc
inc
clc
push
je
nop
outsl
into
les
ds
addr16
pop
pop
push
sub
dec
imull
pop
loopne
popa
push
int
mov
jmp
pop
lret
ret
out
imul
sti
mulb
mov
dec
hlt
int3
cs
push
xchg
lods
or
cmp
xor
mov
int3
into
mov
xorl
outsb
and
and
mov
jo
movsb
js
cwtl
ror
out
aas
out
ret
add
movb
push
subb
stos
int
js
fstpl
push
cmp
xchg
mov
fstp
mov
and
div
fxch
add
mov
pop
add
popf
inc
shll
ror
sub
fwait
shl
loop
push
enter
add
jns
lret
stc
and
sub
xor
dec
or
jae
test
out
xchg
dec
sbb
push
jle
jmp
or
add
or
jne
aas
rcr
mov
pop
xchg
ljmp
inc
adc
xor
mov
loope
sbb
jbe
push
loop
push
inc
xchg
scas
repz
psrld
insb
xor
xor
fsubrs
bnd
test
push
int
movb
lret
repnz
popf
cmp
loop
insl
mov
fimull
idivl
insl
sub
push
clc
mov
aas
pop
imul
jp
dec
add
pop
push
dec
mov
insl
inc
loope
add
xor
fildll
jnp
inc
mov
jo
mov
movsb
jg
adc
test
fsubrs
dec
stos
adc
sahf
add
jp
test
sub
dec
in
sbb
inc
push
mov
sbb
and
repnz
xchg
nop
or
inc
test
aas
xlat
ret
ds
inc
or
dec
jecxz
push
ret
and
stos
testl
push
into
sub
jl
lods
aaa
dec
adc
push
xchg
fimuls
jmp
or
in
fidivl
jge
mov
imul
jge
cmpsb
lock
cmpsl
or
mov
sub
cmpps
out
scas
pop
imul
mov
scas
and
pop
cmp
icebp
mov
sbb
mov
sub
sahf
adc
cmpsb
cwtl
cmc
lods
out
int3
call
sub
fs
std
jnp
cmp
pop
mov
sti
aam
mov
movsl
lcall
add
xlat
hlt
je
or
in
xor
and
and
rcrb
scas
adc
adc
inc
mov
mov
or
or
sbb
outsb
inc
repz
xchg
jmp
sub
push
addr16
adcl
ds
pop
scas
loope
lea
bound
sbb
xor
mov
loop
and
popf
aam
mov
movb
jmp
pop
mov
jno
xor
bound
imul
or
inc
pop
cwtl
xchg
xchg
or
jle
pop
arpl
outsl
outsb
aas
jno
das
in
cmpsb
icebp
pop
jae
leave
pop
and
inc
and
pop
mov
mov
outsl
xchg
aad
cmp
dec
ljmp
cmc
inc
push
loope
mov
pop
pop
out
imul
lock
adc
mov
xlat
addl
cmp
add
xchg
pop
jb
and
add
repz
pusha
sub
xchg
ret
inc
pushl
pop
cmpsl
ret
or
stos
popa
ja
test
ret
or
cmpsl
cli
sbb
imul
sub
xor
sti
loop
test
or
push
test
mov
cmpsl
dec
movsl
ja
jecxz
mov
jge
jle
pop
xor
aaa
xor
jns
sbbl
outsl
sahf
aam
out
ret
jge
movsl
pop
divb
mov
push
clc
push
icebp
inc
fstps
ja
flds
rolb
std
jl
add
test
and
inc
jnp
fwait
ret
push
push
test
jns
sbb
std
xchg
mov
mov
xchg
sbb
mov
pop
fildl
pop
mov
fs
or
imul
jmp
addr16
xchg
ftst
jp
sub
daa
xor
inc
dec
in
inc
cmp
xchg
sbb
or
sub
dec
mov
sbb
ret
cmpsb
and
jp
dec
out
test
push
test
and
inc
push
xchg
in
fwait
add
movsb
es
shrl
cmp
push
xchg
aad
jl
imul
dec
ljmp
lock
push
sbb
repnz
pop
pop
push
dec
ret
rorb
cld
sbb
inc
aas
pop
mov
imulb
push
push
ss
cmpsb
add
adc
xlat
or
dec
push
rcl
test
xrelease
and
cmp
iret
cs
adc
cmp
pushf
sub
or
fdivrl
cmp
push
push
aam
sbb
mov
jb
push
rorb
mov
rcr
mov
stos
sbb
hlt
cmp
xchg
enter
adc
es
pop
int
mul
adc
or
xchg
dec
aas
or
and
ja
add
scas
push
dec
mov
mov
imul
inc
pop
inc
loope
inc
bound
out
sbb
dec
mov
call
sbb
pop
lods
add
mov
adc
out
aas
negl
xor
lcall
inc
addr16
icebp
mov
iret
fists
push
add
movsl
lret
ds
xlat
outsl
cmp
push
xchg
cmp
shlb
mov
pusha
push
mov
and
js
fsub
enter
xchg
test
mov
scas
ret
hlt
stc
mov
sub
fsubrl
inc
sbbl
scas
sbbb
and
mov
stos
pop
repnz
cs
mov
cmp
xchg
adc
xor
sbb
sahf
jno
mov
pmaddwd
shl
cmc
cmpsb
push
popf
cmp
mov
xor
inc
lods
lcall
sub
mov
push
fstps
push
mov
xor
pop
aam
cwtl
outsb
mov
rcr
lret
inc
xor
adc
pop
stos
or
test
fs
daa
out
lret
lcall
frndint
xchg
xor
or
jo
jnp
movl
sub
xor
repnz
xor
or
cmpsl
aas
jp
inc
push
data16
or
mov
dec
out
pop
ds
xor
subl
out
mov
dec
rclb
das
dec
outsl
push
bound
push
jl
sub
pop
hlt
ficomps
fsubs
xchg
cmc
add
pop
aaa
push
and
popa
out
push
inc
add
sbb
fdivl
shlb
cmp
push
dec
movsb
adc
outsb
mov
shlb
or
cltd
cmp
pop
arpl
out
hlt
iret
mov
lods
pop
push
sahf
jnp
mov
jne
jmp
int3
out
and
adc
aad
testb
jb
rclb
xor
ss
insb
into
sbb
test
xor
fstpl
dec
dec
or
ds
ror
fdiv
fcomi
sub
xor
js
xchg
vcmpss
loop
jmp
sbb
xchg
lods
mov
call
cmp
bound
sti
or
xor
cmpsb
xor
jnp
das
sahf
aad
xchg
stos
es
fists
add
and
add
add
fisubrs
xchg
pop
mov
pop
mov
jae
or
xorl
xor
fcomps
sbb
dec
jl
and
je
das
sbb
pop
leave
outsl
stos
mov
pop
cltd
adc
xchg
lret
mov
jno
movsb
lret
xchg
lock
fsubrs
test
or
mov
cmp
inc
and
adc
ss
inc
sbb
stos
test
dec
cwtl
mov
popf
in
stos
mov
push
cmpsb
popl
stc
inc
out
push
mov
movsl
push
jae
pop
mov
xor
dec
push
push
popw
lock
fwait
hlt
gs
xchg
mov
pusha
shlb
cmpsb
sub
adc
and
mov
push
imul
mov
jg
push
leave
test
xchg
lret
fs
test
xchg
in
imul
jbe
mov
adcl
sub
inc
mov
push
mov
pop
loope
nop
mov
in
add
pop
sbb
les
sub
jae
inc
push
aaa
inc
push
mov
and
lret
test
inc
popa
ret
dec
aas
cwtl
cmp
outsl
push
add
add
and
push
pop
imul
sbb
movsb
lds
jl
test
xchg
lret
pop
pop
mov
ljmp
dec
fidivs
mov
jle
orb
out
sub
cmp
pop
in
popa
add
push
or
pop
fisttps
and
add
fisttpll
add
popf
push
loopne
pop
xor
xor
aam
xor
dec
popa
fldt
lods
enter
fsts
push
rcrl
lea
lds
rcl
inc
and
je
cmpsb
inc
sbb
push
cmp
int3
adc
push
das
int3
je
adc
jno
push
hlt
dec
iret
mov
sbb
lret
mov
add
leave
sti
inc
mov
sbb
xchg
xlat
jb
ja
imul
jne
mov
xlat
stos
in
dec
pop
lcall
insb
in
or
popa
add
mov
lods
xor
pop
pop
test
ret
push
xchg
shrb
jo
lock
pop
push
fbld
jge
das
leave
cmpsl
ret
in
loop
cmpsl
xchg
cmp
lock
pop
lcall
hlt
lahf
rolb
popa
call
sub
loope
outsb
lds
mov
js
enter
and
xchg
cltd
push
test
leave
movsb
pop
cmp
dec
xor
inc
ja
movsl
leave
lds
fwait
pop
jbe
pop
adc
test
sbb
dec
mov
adc
inc
dec
int
mov
adc
xor
fiaddl
imul
or
fadds
inc
or
xchg
sub
cmpsb
push
xchg
pushf
popa
mov
mov
lahf
inc
loope
cmpsl
xchg
test
incl
mov
daa
adc
jno
mov
ror
push
push
ret
lahf
cmp
fistpll
xor
mov
sub
inc
cmp
mov
loopne
and
or
into
mov
fs
in
cmp
in
inc
in
sbb
xor
push
push
cmp
jae
clc
cli
mov
cmp
js
aam
push
adc
jbe
or
lret
mov
and
mov
add
mov
in
popa
mov
pop
jl
cmpsl
les
mov
mov
leave
std
xor
in
xchg
lahf
insl
cmpsl
and
add
dec
xchg
icebp
and
add
sahf
dec
cld
inc
adc
jo
sub
inc
mov
stos
cmp
dec
call
frstor
xor
scas
jle
push
data16
lahf
xchg
es
jnp
push
adc
and
adc
push
and
insb
rorb
add
or
pop
push
inc
stc
pop
push
or
cmp
rol
scas
mov
pop
lods
jbe
enter
adc
and
loope
sbb
ret
xor
cmp
ficompl
mov
movsl
ss
rorl
lds
shrl
call
cmc
mov
push
int
jno
movsb
fisttpll
ljmp
xchg
xchg
xchg
enter
adc
out
jge
mov
mov
jno
scas
aas
fwait
movsl
notl
rorb
jmp
push
mov
filds
and
int3
in
cmp
inc
mov
push
mov
shl
push
sarb
neg
enter
push
mov
lods
pop
dec
push
ja
mov
mov
adc
mov
jge
ljmp
pop
adcl
divl
mov
cwtl
cs
dec
mov
orl
in
and
aas
lret
pop
push
cld
loop
dec
lahf
stos
mov
pop
adc
or
cmpl
loopne
jmp
push
pop
sub
xchg
xchg
mov
icebp
xorl
iret
sbb
pop
mov
in
imul
aaa
fmull
mov
loopne
dec
rcl
pop
out
push
and
inc
mov
mov
popa
rorb
push
mov
lahf
push
and
sub
sbb
push
sub
dec
negb
cmpsb
data16
push
stos
pop
icebp
frstor
inc
sbbl
fucomip
hlt
pushf
in
lea
loope
out
mov
push
jle
enter
js
fstpl
xor
push
arpl
sbb
pushf
or
shlb
je
sbb
mov
call
int
push
loope
fcmovb
gs
cwtl
adc
add
sub
fisttpl
adc
sbb
dec
pop
xor
jnp
testb
movsb
lods
mov
adcb
dec
and
popf
and
jle
ret
pmulhuw
and
push
sahf
inc
imul
xchg
es
lcall
or
mov
lea
fmull
outsb
andl
pop
jg
nop
setge
push
les
mov
xorb
sub
mov
push
in
inc
lret
pop
or
arpl
dec
fldlg2
or
sbb
cld
test
sub
pop
lea
sub
xor
jne
std
outsl
jne
sub
les
lret
pop
lahf
daa
mov
dec
mov
in
outsb
mov
call
add
or
push
popa
pop
aas
sbb
fs
in
xor
mov
sub
imul
aam
mov
mov
ret
rorb
xchg
fwait
pushf
iret
mov
je
test
dec
lret
sbb
inc
out
sub
test
cmp
clc
xchg
cwtl
inc
dec
shrb
pop
sub
outsb
or
dec
test
test
jge
enter
jecxz
inc
mull
mov
mov
jno
dec
mov
lods
sub
lcall
out
jbe
mov
std
dec
out
and
div
test
mov
xlat
lahf
push
test
fcmovbe
dec
mov
jno
dec
xchg
and
dec
xor
push
sbb
test
push
shrl
add
shll
add
addr16
insb
pop
cs
xchg
sbb
and
int3
inc
push
cld
xor
es
or
cmpsl
pop
iret
rol
ds
adc
rorl
test
mov
jecxz
or
cmp
js
mov
or
arpl
lcall
shll
jecxz
lods
adc
test
mov
fldl
mov
lret
movsl
mov
insl
pop
jge
pusha
call
sbb
mov
cli
push
shrb
and
push
mov
cmc
or
ficompl
cmpsl
lods
das
xchg
outsl
push
gs
or
hlt
pop
loopne
loope
pop
adc
lock
repnz
roll
adcl
inc
xchg
push
ror
insb
in
mov
jge
lea
jae
pop
in
jg
pop
in
gs
shr
jae
out
pop
sahf
mov
xchg
mov
data16
xchg
popa
xchg
inc
xchg
repnz
mov
shrl
addr16
adc
aaa
pop
xchg
mov
or
sahf
ss
add
lea
adc
xor
xchg
mov
mov
iret
sti
inc
js
adc
pop
fisttpll
sbb
add
cwtl
push
cmpsl
pop
mov
int3
dec
icebp
xchg
mov
cmp
dec
inc
or
div
dec
fimuls
push
out
insl
cs
cmpsl
ficoml
jmp
jg
pop
mov
jg
testb
xchg
sub
jl
cmc
mov
sbb
imul
and
movl
out
ficoml
lods
jbe
in
pop
lcall
jne
xchg
movsl
xchg
adcl
or
add
cmp
insb
cmc
gs
orb
int3
xor
mov
cmp
mov
movsb
rolb
lods
shll
icebp
mov
out
cmpsb
adc
stos
xchg
mov
push
dec
or
cli
and
daa
dec
push
xorb
mov
inc
jnp
inc
mov
mov
pop
xor
scas
xchg
add
pop
bound
push
fstpt
xor
adc
or
inc
fcmovbe
xchg
jecxz
dec
imul
xor
das
aas
push
fwait
inc
sub
and
xchg
mov
das
adc
fs
int
xor
dec
movsl
shl
pop
test
mov
jno
dec
and
int
leave
push
cmc
insb
das
test
cmp
loope
pop
mov
mov
loopne
inc
cltd
push
aaa
mov
sub
jnp
movsl
shl
inc
adc
je
stos
out
lret
sbb
xor
jl
mov
jb
pushf
sarb
shlb
xchg
cmc
xchg
mov
testb
cmp
pop
hlt
adc
clc
mov
lock
test
xchg
cld
popf
in
les
or
popa
lods
dec
mov
das
jns
mov
lds
repz
enter
adc
sbb
or
bound
out
jnp
fwait
xor
cmpsb
cmp
in
loopne
mov
adc
cmp
sub
adc
jecxz
popa
shrl
movsl
pop
pop
lcall
sbb
lds
faddl
pop
nop
xor
repz
jecxz
andb
and
cmp
out
test
inc
js
xchg
mov
mov
cmpsl
sub
xchg
dec
mov
add
mov
pop
fs
jg
mov
push
bound
ret
xchg
hlt
mov
int
push
sbb
cmp
insb
jne
sti
pop
xchg
push
cmpsl
sub
or
or
jo
dec
jno
cmp
push
push
fbld
and
dec
mov
adc
stc
es
add
push
les
dec
cs
jo
test
mov
and
jg
mov
inc
es
jnp
adc
cwtl
dec
sub
jl
xor
adc
test
repz
xor
sub
in
and
out
dec
mov
fcom
dec
pop
shr
imul
das
setp
je
pop
mov
in
cs
mov
int
and
scas
xchg
jg
lahf
sbb
dec
sahf
cmp
pop
aas
adc
bswap
lock
std
or
mov
shll
lcall
test
imul
push
add
in
int3
push
clc
or
push
push
es
fdivl
push
adc
adc
in
mov
cmp
jle
inc
push
xor
bound
push
ds
cmp
add
repz
adc
or
loop
lock
push
popf
inc
pop
xor
das
lea
roll
jmp
jbe
test
mov
lods
test
and
push
lret
test
rcrl
mov
cmp
std
cmp
push
fidivl
mov
mov
js
mov
sahf
popf
add
scas
add
or
sub
jb
imul
push
lea
sub
in
sub
in
mov
and
xor
cmp
call
cld
adc
inc
test
rolb
data16
imul
jmp
int3
xchg
jo
lea
xchg
cmc
mov
pop
adc
push
jmp
sti
repz
pop
mov
int3
fwait
and
mov
push
in
and
push
jge
mov
icebp
push
xchg
imul
cmp
mov
lea
fnstenv
inc
jno
cld
adc
sbb
ja
sbb
or
mov
scas
sub
stos
dec
mov
enter
sti
sbb
sbbl
mov
stos
mov
xchg
adc
fsub
jle
mov
jg
mov
out
adc
fisttpll
jl
or
cmpsb
mov
xchg
je
mov
test
in
xchg
mov
jae
adc
lahf
lret
pop
sub
jge
inc
ds
leave
adc
dec
idivl
ss
ret
dec
nop
mov
insl
xor
xor
push
stc
xor
lahf
movl
pop
lea
sbb
cmp
jno
xchg
inc
scas
xchg
clc
dec
and
cmp
and
push
or
mov
mov
cmp
lcall
insb
loope
jmp
dec
add
jg
cltd
cmp
lea
fildl
fldcw
adc
adc
lret
adc
push
or
jg
ret
dec
das
pop
out
ret
cli
add
mov
mov
xchg
jo
fadd
push
lcall
scas
pusha
lcall
mov
inc
mov
out
movsl
xchg
adc
int
xchg
adc
jb
js
inc
in
jg
ret
mov
shlb
and
pop
push
mov
xchg
and
test
sbbl
insl
cmp
bound
jl
repz
pop
repz
or
push
push
addb
test
rcrb
mov
or
loop
je
aaa
add
pushf
stc
pop
sub
outsl
sti
add
jns
fisttps
mov
stc
in
adc
lret
movsb
pop
mov
mov
inc
add
loop
mov
mov
push
out
jp
insl
pop
mov
ja
fadd
xor
dec
sub
sub
jp
insl
xchg
add
dec
lret
inc
add
fdivr
enter
lret
fs
std
dec
pop
decb
mov
or
repz
dec
fcmovnb
sub
cs
test
shrb
das
in
mov
pop
sti
push
xchg
rcrl
add
dec
inc
dec
fnstenv
movsb
insl
push
bnd
aam
xor
inc
ret
in
mov
fiaddl
es
inc
xchg
xchg
cwtl
stc
es
sub
rcrb
fnsave
cmp
lahf
in
push
test
jno
mov
in
out
xchg
sbb
cld
call
jle
xor
cmc
loop
je
test
push
sbb
popw
sub
out
jb
jbe
test
icebp
dec
adc
out
push
add
xchg
int
fcomps
sub
aad
das
jg
push
fcomi
jno
movsb
add
lcall
adc
rcrl
fildl
stc
push
pop
xor
mov
repz
out
and
sbb
mov
jns,pn
mov
or
mov
pop
test
sbb
jmp
xchg
or
negl
or
cmovl
dec
in
xor
loope
mov
stos
cwtl
dec
cld
mov
mov
mov
outsb
push
outsb
pop
icebp
inc
or
jmp
jno
xorl
mov
ss
cmp
fimull
push
pop
jb
push
aas
xor
fcomps
mov
add
sub
sahf
push
inc
push
aas
rcrl
mov
mov
leave
rcrl
arpl
sub
sarl
test
pop
mov
ret
fimuls
insl
fwait
and
push
subl
outsl
xor
stos
jl
cld
jmp
xor
mov
dec
cmpsl
dec
lcall
cmp
mov
negb
imul
fwait
cs
daa
push
cmp
ret
notl
repnz
cmc
dec
sahf
jno
mov
sbbl
and
mov
jp
pushf
imul
xchg
andl
inc
pushf
pmuludq
pop
xchg
add
fdivr
mov
fwait
idivb
mov
jmp
negb
or
mov
cmp
jbe
mov
test
mov
movsb
jecxz
jnp
xchg
and
test
sbb
mov
jecxz
repz
stc
ror
les
push
xchg
sub
add
loop
ret
mov
push
push
sbb
mov
scas
dec
fsubrl
push
into
xchg
xor
enter
and
mov
sub
and
repnz
xchg
push
int
cmpsl
push
adc
test
add
and
fcom
and
jg
lods
push
gs
mov
out
lock
aaa
xchg
sub
ret
mull
push
pop
dec
cmp
ljmp
loop
mov
mov
jns
dec
pop
adc
xchg
or
loopne
cwtl
add
jb
out
sti
lret
fs
push
scas
fnsave
stos
popf
movsl
push
les
push
and
in
push
ret
lds
dec
push
mov
out
adc
xor
xor
cmp
call
ljmp
fdivr
mov
stc
push
stos
push
insl
or
jnp
jmp
push
xorb
xchg
dec
jb
in
pop
adcl
das
mov
adcl
into
arpl
xchg
jle
pop
insb
add
in
or
orb
arpl
xchg
jl
push
fimull
stos
pop
icebp
push
imul
lds
mov
ds
outsl
or
pop
jg
pusha
pop
incl
mov
push
mov
xchg
test
mov
inc
nop
lods
dec
cmp
ds
and
je
sti
or
mov
scas
lret
xchg
sub
cmp
jnp
xchg
adc
and
out
cmpsb
xor
or
jmp
fidivrs
aaa
jecxz
jns
clc
inc
lahf
pop
fisttpll
int3
lea
mov
cmp
scas
fstps
sub
pop
in
cmp
ja
es
lea
sahf
push
aad
loope
rolb
mov
repnz
jmp
aad
js
jno
ss
sbb
jb
in
inc
cli
cmc
and
mov
sarl
arpl
or
out
ret
hlt
in
fsubrs
mov
cmpsb
and
loopne
mov
push
mov
xchg
fwait
hlt
cmpsl
mov
and
sarl
cmp
test
push
push
adc
pop
push
sbb
stos
add
dec
shll
pop
mov
sub
cmp
xchg
lods
aad
clc
adc
shlb
xchg
jae
mov
or
lods
jge
jge
jle
xchg
dec
jne
jg
pop
iret
cmp
mov
out
in
sti
adc
cmc
push
pop
jp
inc
sti
popf
cmp
loopne
pop
lret
jbe
sbb
bound
pop
mov
lea
rorl
and
or
mov
adc
mov
psrlq
jg
call
popa
mov
outsl
repnz
into
in
push
xlat
jle
adc
iret
sahf
clc
out
sbb
adc
push
push
jg
push
lahf
and
mov
enter
jle
arpl
das
sub
dec
aad
test
mov
push
jmp
gs
mov
lret
xor
stos
test
fwait
push
lock
in
xor
imul
jle
inc
es
sub
push
inc
xchg
push
xor
push
mov
insl
subl
mov
sbb
and
pop
insl
mov
fldenv
mov
dec
js
xchg
fwait
sbb
cmp
fwait
and
xchg
mov
pop
test
pop
in
lret
pop
orl
das
xchg
push
lahf
mov
adc
loopne
in
push
popf
and
je
mov
outsl
fucomp
or
adc
sbb
inc
dec
call
lret
dec
push
and
mov
dec
es
mov
out
repnz
pop
mov
inc
stos
push
std
movsl
negb
cli
adc
inc
dec
test
xlat
mov
stos
sub
sbb
add
ja
outsb
or
popa
daa
shlb
and
into
imul
int
rol
dec
pushf
daa
adc
fisttpll
xchg
push
mov
ds
push
popf
das
mov
in
sbb
push
mov
jo
inc
xchg
dec
into
das
pop
pop
mov
jbe
enter
xchg
mov
int3
inc
or
mov
xor
popa
mov
lcall
xor
cs
mov
les
lgs
arpl
xchg
add
inc
dec
std
jno
xrelease
inc
mov
mov
adc
fs
or
loopne
lcall
dec
fwait
lods
sti
repz
popf
mov
add
rclb
imul
cmp
pop
jmp
add
pop
aaa
push
test
ret
cmp
pushl
jns
jae
es
inc
mov
jle
push
ret
sub
mov
xchg
dec
mov
test
pop
sub
stc
test
gs
lea
and
cmp
jge
jge
dec
cmp
popf
dec
mov
cmp
jge
inc
mov
or
pop
stos
cmp
fbld
es
loop
jns
cmp
adc
mov
cmc
clc
stos
xchg
fisubrl
fs
push
dec
jge
cmp
movb
push
push
int3
cmp
pop
push
dec
adc
pop
das
test
std
adcb
loop
movsl
cmp
mov
sub
xor
mov
mov
sub
xchg
push
scas
iret
aad
push
cld
push
add
pushf
test
xchg
js
mov
cmpsb
cmp
cmp
mov
pop
mov
in
push
icebp
loop
xchg
shrb
fsubrl
aas
test
inc
mov
jmp
aas
inc
ret
mov
aam
mov
cli
xchg
xchg
push
test
sbb
repnz
mov
rcll
push
push
xchg
jbe
aam
xchg
cwtl
scas
test
inc
ss
xchg
pop
shrb
or
fs
mov
psubd
sti
mov
adc
jnp
pop
or
dec
pop
popf
add
out
xchg
ja
adc
sub
pop
mov
in
push
push
and
or
stos
pusha
adc
inc
addr16
lahf
cmpsb
or
adc
jl
cmpb
int
bound
pushf
in
xor
jae
cwtl
inc
mov
ljmp
daa
and
lret
or
adc
cld
in
dec
mov
repnz
loope
xor
add
add
xor
test
jle
sub
popf
cmp
xchg
xchg
fistps
flds
fisttpl
pop
popa
shl
inc
cwtl
imul
or
arpl
repnz
cmp
addr16
xor
xor
testb
push
arpl
cmp
cmpsb
sarl
mov
imul
add
sarb
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
addr16
pop
bound
pop
bound
cmp
movb
push
jle
ss
test
mov
jbe
pop
in
fsubl
fbld
ret
addr16
pop
add
dec
and
jmp
inc
dec
jl
sub
mov
add
mov
pop
inc
jmp
in
movsl
jo
sub
lret
or
inc
mov
jnp
cmp
xor
out
mov
enter
mov
cs
or
cmp
push
sub
add
mov
lods
mov
sbb
jae
or
xor
mov
sub
mov
dec
xor
jnp
cmc
into
or
push
stos
adc
adc
jmp
loop
dec
pop
cltd
mov
push
or
xchg
je
stos
out
xor
cmp
stos
jge
outsb
shrb
outsb
mov
push
arpl
adc
push
mov
outsb
dec
gs
cmp
push
mov
mov
add
sub
push
repnz
gs
sub
fidivrl
lahf
sub
cmpsb
sbb
insb
andb
lods
push
push
or
hlt
adc
sahf
cmp
stc
dec
xchg
aas
ja
push
dec
dec
or
loope
mov
dec
scas
std
ficoms
hlt
addr16
enter
scas
shl
dec
lds
les
aam
fldt
pop
mov
mov
iret
adc
hlt
push
pop
je
dec
add
mov
dec
jns
xchg
mov
mov
popf
orl
js
data16
add
fimuls
js
pop
lods
inc
mov
xlat
adc
dec
cmpsl
ss
and
ljmp
mov
loop
and
frstor
or
ss
cmp
stos
push
sbb
xchg
lods
fs
inc
mov
cmc
loopne
mov
dec
or
call
sbb
push
iret
flds
and
lods
adc
shr
push
mov
fcoml
jae
outsb
lds
pop
mov
xor
jno
mov
inc
scas
or
sub
insb
xor
and
and
or
divl
dec
or
xchg
jmp
jae
aaa
roll
out
ja
aaa
xchg
pop
cmpsb
push
pusha
inc
shrb
push
rclb
inc
jns
stos
mov
aaa
sahf
or
pusha
and
mov
push
out
popa
cld
sbb
sarb
add
dec
adc
addr16
mov
out
mov
hlt
dec
or
repz
sbb
pop
mov
pop
aas
popa
or
inc
nop
jo
sub
sbb
pushf
es
cli
aas
repz
xor
stos
xchg
xchg
or
leave
mov
push
dec
cmp
mov
test
orl
ficoms
mov
inc
fs
push
out
sbbb
loope
scas
out
data16
test
out
in
sbb
fidivrl
push
mov
mov
sahf
sub
fimuls
nop
rolb
test
add
and
movsl
xor
stc
divl
repz
inc
jge,pn
inc
jg
xor
fildl
sbb
or
mov
lods
lret
lock
adc
jbe
push
jg
xchg
cmpsb
sub
push
mov
xor
or
dec
int
std
es
test
push
lret
out
or
dec
repnz
test
and
mov
push
dec
fldt
sbb
mov
test
mov
outsb
gs
je
jg
rcl
pushw
loop
ds
outsl
fs
fcomps
push
sub
int3
out
push
mov
ja
ds
pushf
inc
sahf
mov
fiaddl
dec
mov
mov
mov
fmuls
mov
out
lret
cld
mov
subl
scas
rorl
dec
cmp
xchg
loope
aad
sbb
mov
mov
imul
xor
xor
push
jl
or
scas
pusha
mov
pop
out
and
dec
push
test
cld
sbb
inc
dec
inc
sub
insb
jmp
xchg
push
xchg
outsl
adc
cmp
inc
incl
sti
mov
les
lods
sahf
cmc
cmp
adc
mov
movsl
ret
cmp
sub
xchg
mov
and
fcomp
or
cmp
fyl2xp1
jne
add
jnp
add
iret
inc
sub
orb
jne
fdivrl
stos
ror
pop
sub
push
jg
outsl
cmpsb
daa
pusha
jns
js
push
cmp
jg
out
dec
mov
test
fisubrl
stc
pop
out
mov
js
imul
test
pop
add
push
mov
das
ret
pop
cs
xor
mov
mov
mov
sarl
repz
sub
push
sbb
adc
stc
or
stc
sar
push
push
dec
cmpb
cmovle
mov
dec
push
sub
add
dec
into
push
inc
sub
dec
int3
rorl
pop
mov
sub
pop
or
test
test
jmp
dec
and
icebp
cmpsb
dec
fstl
mov
xchg
mov
mov
in
push
xchg
add
mov
xchg
inc
xor
cltd
test
add
lods
test
add
and
mov
xor
cmp
ds
jmp
movsb
outsb
inc
jb
ret
and
xchg
lea
push
add
sar
adc
shr
adcl
xchg
and
mov
cmpsb
xor
jp
sbb
movsb
dec
add
movsl
aad
shrb
jle
gs
into
add
lods
cmp
pop
pop
dec
fisttpll
ret
sub
push
outsb
push
mov
add
nop
mov
mov
sarl
test
inc
pop
mov
pop
jecxz
add
std
push
lock
daa
popf
lock
pop
jnp
test
xlat
adc
mov
imul
pop
movsb
les
pop
dec
cli
int3
lret
mov
out
mov
sti
mov
jmp
stc
cmp
jecxz
or
pop
mov
aaa
mov
sub
cmpsl
jecxz
dec
pop
icebp
repnz
icebp
mov
stos
cmpsb
add
repz
lock
pop
cmp
cmp
cltd
stos
and
pop
xor
ljmp
adc
jmp
push
ljmp
pop
test
sti
stos
adc
fcmovnu
mov
and
call
push
push
cmpsb
int
sbb
xchg
mov
cmpsl
jae
xchg
bound
xor
mov
dec
in
int3
int
inc
enter
jge
dec
push
mov
cmpl
push
xor
sbbb
xchg
shll
add
loope
pop
jg
sbbb
jl
inc
movsb
cmp
jae
mov
sti
loopne
testb
lret
pop
pop
mov
mov
jl
jb
cmp
fbld
adc
ret
in
in
pop
mov
push
clc
mov
ficoml
sbb
and
sti
mov
gs
add
ficomps
cli
push
mov
mov
pop
clc
cmp
sbb
xor
adc
push
je
insl
or
jb
pop
push
add
xor
addr16
mov
sbb
in
push
inc
out
out
es
pop
test
xor
xor
loope
inc
jp
stos
push
dec
cmpsb
sbb
test
sub
fbstp
jnp
shrl
pop
shrb
add
xor
outsl
lods
adc
add
xor
ror
push
xchg
mov
mov
jle
out
xor
mov
repz
push
xor
int
xor
shrb
call
mov
pop
mov
or
scas
jmp
shl
dec
dec
iret
fmull
and
add
xchg
in
jg
data16
scas
pusha
addw
xchg
loop
mov
xor
cmpb
and
cltd
push
mov
arpl
mov
repz
jno
xchg
rcl
in
stc
mov
aas
das
cmpsl
xchg
xor
cmpsb
inc
jmp
int3
pop
fst
lahf
dec
fcmovne
dec
pop
mov
jg
cmp
in
hlt
out
adc
call
dec
int
inc
insb
sbb
leave
jecxz
push
out
enter
inc
loop
mov
gs
jl
jbe
xchg
out
pop
stc
lods
test
negl
cmp
cmpsl
pop
pop
and
pop
push
xchg
push
cmpsl
outsl
sub
lret
enter
and
sub
shll
cmpsl
xlat
into
xchg
jmp
sub
mov
sub
pop
pop
xchg
mov
mov
pop
add
out
inc
mov
out
test
movsl
mov
std
aas
outsl
fmull
xlat
and
or
pop
xchg
cmp
jg
fwait
push
mov
in
jb
in
adc
ret
jbe
xor
sbbb
test
push
leave
ljmp
movsl
hlt
xor
dec
sub
adc
push
add
and
xlat
xchg
js,pn
xor
cmp
stos
inc
into
sbb
mov
adc
in
pop
leave
gs
mov
jns
sbb
dec
push
or
sub
rcrb
fcoml
leave
fnstenv
push
push
push
mov
sbb
xchg
into
inc
and
cmp
or
adc
push
pop
push
xchg
push
aam
inc
push
sub
xlat
lcall
cmc
fisttpll
push
mov
fcmovnu
pop
jecxz
popf
adc
icebp
mov
cmpsl
and
cmp
lock
movsb
lret
test
jl
sub
es
and
adc
sarb
or
jb
jle
inc
test
test
into
mov
jp
jae
dec
pusha
fs
iret
fimuls
inc
mov
add
bound
push
repnz
xchg
mov
jle
jnp
jne
xor
or
popa
out
cmpsl
lret
push
inc
fistpl
pop
ret
jae
lods
nop
fwait
insb
push
sti
jbe
or
cmp
les
out
int
sub
xchg
notb
jbe
adcl
jecxz
add
adc
enter
inc
mov
ja
data16
sbb
add
aaa
clc
popf
aas
rcll
in
dec
shlb
aas
jle
xchg
push
xchg
jge
outsb
mov
add
inc
dec
out
ret
inc
xchg
pop
pop
gs
rclb
push
aaa
cmp
jg
add
inc
inc
jnp
lds
mov
loop
cmp
leave
je
jnp
aaa
cmp
adc
push
dec
test
sub
mov
jmp
push
xlat
inc
xlat
jg
cwtl
shrb
jecxz
jb
and
call
add
pushf
add
and
fstps
out
pop
mov
rorb
and
or
jae
inc
mov
sub
insb
sbb
shll
les
cmp
lds
mov
sbb
xchg
dec
mov
aas
mov
sub
testl
adc
jno
push
bound
sub
xor
pop
shlb
and
sub
in
movsb
xor
push
repnz
xchg
mov
cmovs
xchg
mov
or
daa
dec
mov
outsb
add
mov
iret
push
or
lret
sbb
orl
push
fsubp
test
mov
pop
mov
imul
insl
mov
fsubrs
popa
sbb
cmpsb
stc
dec
scas
aad
mov
or
fsubl
fnsave
jle
lret
dec
mov
in
fwait
in
add
aam
insb
jae
xchg
loope
dec
mov
jg
cld
ficompl
les
cmp
arpl
jb
insb
pusha
mov
and
push
xor
jb
fdecstp
mov
scas
jmp
cmp
and
mov
dec
call
adc
or
out
dec
std
std
mov
mov
lret
add
sbb
push
pop
push
dec
cmp
aas
xlat
sub
adc
fidivrs
add
xor
flds
pop
rol
scas
mulb
add
stos
push
stos
mov
or
nop
lret
mov
ss
mov
cmp
push
jne
aaa
cld
push
mov
pusha
mov
jns
outsl
lret
cmp
imul
push
shrl
movsb
dec
fbstp
mov
int3
aas
add
xor
lahf
mov
jno
ret
jmp
pop
popf
stos
sbb
scas
fs
inc
das
add
inc
outsl
jmp
js
iret
xchg
sbb
xchg
dec
adc
notl
mov
add
pop
ds
push
imul
cli
test
push
mov
repz
insb
js
adc
sti
xor
rorl
jne
icebp
mov
shl
jmp
pop
pushf
pop
test
or
push
clc
push
inc
mov
adc
cmpsb
sub
add
lds
push
inc
or
mov
stc
ret
dec
sbb
pushf
pop
movsb
adc
rcl
mov
lahf
loopne
dec
add
mov
lahf
lcall
pushf
push
dec
xchg
xchg
fcomip
mov
clc
lods
fwait
jo
pushf
mov
jb
mov
ljmp
mov
and
ret
daa
out
adc
push
lret
jbe
bound
pop
cmp
sbb
in
jno
fidivrs
std
mov
xchg
adc
jns
das
xchg
out
jl
iret
cld
inc
ss
push
fsts
pop
shlb
outsl
lret
xor
xor
jne
pop
inc
call
xchg
sbb
shll
imul
enter
test
testb
pop
add
les
mov
cmp
mov
icebp
fdivr
loop
outsl
jne
ljmp
mov
mov
push
pop
mov
push
jno
xchg
sbb
dec
repnz
pop
pop
pop
insl
xchg
pop
inc
mov
adc
aas
ret
inc
fs
mov
or
pushf
rcll
adc
shrb
inc
cli
lahf
add
call
out
sub
mov
xor
lods
adc
dec
xorl
fcomps
mov
jbe
cmpsl
cmp
and
mov
mov
xor
push
jmp
test
addr16
in
decb
and
adcl
pop
jecxz
insb
sbb
je
enter
mov
std
dec
icebp
jmp
cmp
or
shr
add
xchg
iret
push
xchg
mov
lds
and
rorb
mov
push
and
test
jecxz
lds
ss
jl
out
mov
mov
stc
add
mov
iret
jbe
test
cmp
push
popa
cmp
cmp
sbb
fwait
ret
sbb
and
inc
and
fcmove
std
jne
mov
nop
push
mov
or
sahf
mov
test
scas
cwtl
pop
pop
and
daa
bound
and
scas
imul
jo
stos
iret
adc
inc
in
add
popa
pusha
mov
sub
pusha
stos
fwait
aam
decl
das
out
mov
outsb
pop
mov
inc
jnp
fwait
jno
std
mov
pop
orb
je
dec
insb
bnd
xchg
loope
mov
adc
jbe
dec
ja
sbb
jle
push
shrl
sbb
inc
dec
inc
mov
aam
fwait
pop
jb
jae
andb
push
jno
xor
insl
xor
dec
push
lods
inc
dec
ljmp
sarb
xchg
movsl
mov
adc
mov
jae
jp
js
fmull
adc
mov
jns
imul
fildl
xchg
in
cltd
jo
aas
push
cltd
push
stos
push
out
lods
enter
dec
scas
sub
push
insb
ret
inc
out
lock
fbstp
in
add
fwait
int
xchg
mov
cmp
sub
mov
test
popa
arpl
push
add
push
xor
inc
push
inc
push
pop
add
sbb
jle
insb
addr16
in
sub
out
cmp
nop
js
nop
stc
sub
cmc
mov
aam
cmc
cwtl
addr16
data16
push
loope
cld
and
fs
jg
fisubs
leave
lea
mov
push
loope
dec
pinsrw
fisttpl
aaa
leave
ljmp
pop
cmp
lock
jbe
jle
mov
inc
jno
xchg
cltd
sbb
aad
mov
sbb
lret
hlt
mov
ret
into
test
cmp
and
cmc
dec
dec
mov
mov
xlat
or
into
mov
xchg
stc
popf
pop
into
xchg
add
gs
or
add
add
test
aas
lret
sbb
pushf
shll
data16
scas
mov
loope
sub
in
sahf
and
sbb
ret
jae
pop
sub
fwait
cld
je
jg
mov
fimuls
pop
cmpsl
lods
mov
push
jno
adc
jp
mov
cltd
jo
add
sbb
aas
test
jbe
fcom
adc
ljmp
cmp
pop
dec
xchg
pop
pop
cmc
out
and
and
add
add
cld
test
cmp
jg
push
jmp
scas
mov
mov
add
xor
jno
adc
fldl
xor
adc
lods
sub
adc
loop
push
push
fisubs
bound
inc
mov
mov
je
fidivrs
ljmpw
inc
out
push
ret
adc
movsl
inc
in
jp
je
bound
jl
lret
xor
in
sub
imul
test
cli
or
or
jmp
mov
mov
dec
insl
out
loope
or
add
ret
cmp
mov
in
lds
pop
lea
cmp
jae
dec
scas
or
mov
adc
adc
xchg
iret
mov
jge
nop
int3
jo
mov
fsubrs
xchg
sbb
jae
sbb
test
pop
jge
pop
sahf
adc
xor
stos
add
inc
jl
cltd
adc
xor
aam
sbb
push
pop
das
mov
fisttpl
es
inc
and
test
mov
pusha
push
dec
hlt
insl
inc
mov
mov
cs
mov
aaa
jae
push
sbb
mov
out
and
fucomip
stos
adc
imul
push
rcrl
xchg
fsubrs
or
mov
ljmp
add
or
ljmp
in
inc
outsb
aam
push
xor
pop
pop
imul
cmp
xor
jp
imul
ret
in
es
aad
jbe
je
loope
inc
adc
pop
push
loopne
mov
int
js
gs
sbbb
jbe
sbb
jmp
jl
nop
fbstp
push
adc
es
mov
movsl
or
decb
and
inc
push
movsl
ficomps
icebp
push
mov
adc
xor
xchg
fstpl
pop
adc
jns
out
xchg
enter
inc
adc
aas
xchg
out
push
cmc
cli
dec
adc
mov
clc
lahf
push
arpl
aaa
sbb
fstpt
push
outsl
imul
adc
outsl
lock
push
stos
xor
and
pusha
pushf
clc
test
jl
xchg
out
or
adc
mov
mov
mov
sub
lcall
sub
cmpb
lock
pop
xor
jne
or
or
call
inc
dec
fsubrl
lds
jp
inc
mov
adc
push
xor
aad
test
cmp
icebp
insl
mov
adc
cmp
scas
jge
in
leave
xorb
pop
or
ret
xchg
data16
gs
out
push
xchg
outsb
push
jle
movsb
or
add
or
testb
sub
cld
daa
mov
jmp
ljmp
pushl
aaa
lods
nop
test
cmp
lods
or
es
cwtl
das
inc
sub
push
jns
xor
sub
stos
das
ja
sbb
lods
in
icebp
push
push
test
xchg
stos
rcrb
adc
pop
sub
sti
lock
xor
xorb
test
jmp
leave
pop
stos
pop
mov
insb
aas
mov
sahf
cmp
push
jns
into
out
ja
or
cmp
xchg
or
int3
xchg
push
stos
andb
mov
lea
push
lcall
je
xchg
xchg
and
out
push
and
inc
pop
inc
mov
lock
cli
sub
pop
nop
cmp
ljmp
or
add
mov
adc
nop
addb
addb
adc
dec
or
inc
push
and
sub
xlat
push
stos
mov
dec
mov
iret
xchg
push
dec
push
inc
mov
xchg
push
fmulp
insb
ss
sub
jmp
ljmp
pushf
popf
or
mov
mov
cltd
inc
cmp
bound
pop
ss
pop
push
add
fwait
aam
out
pop
dec
sbbb
out
jmp
cmp
dec
fisttpl
xlat
aam
adc
inc
mov
mov
mov
cmp
bound
pop
xlat
inc
mov
cmp
cwtl
lret
fbstp
std
int
cltd
jnp
data16
aad
inc
or
ljmp
notb
adcb
sub
jmp
scas
sbb
jae
xchg
sbb
adc
adc
pshufw
sbb
jae
les
mov
add
inc
jnp
mov
scas
cmp
cld
sub
ljmp
shlb
aam
xor
je
jg
inc
sahf
mov
imull
divb
sti
test
cld
test
pop
pop
rcrl
and
popf
stc
jne
push
dec
sbb
fisttps
dec
mov
sub
gs
pop
imul
push
stc
xor
int
jge
jne
pop
or
mov
sbbb
negl
jne
adc
push
jg
mov
jl
push
fdivl
test
sbb
sub
xchg
push
and
jo
ss
xchg
cmc
adc
ret
sar
jmp
fldcw
or
inc
pop
mov
and
aas
push
push
xor
push
repz
or
sub
sbb
ficomps
fcomps
lock
je
outsb
or
add
mov
les
adc
imul
imul
xchg
out
insb
or
jp
cmp
dec
cmp
test
adcb
fwait
xchg
xor
sub
mov
insl
jge
shlb
adc
jno
mov
xor
xchg
stc
pop
shrl
pop
lcall
pop
iret
popf
sbb
mov
push
mov
mov
push
adc
testb
push
sbb
mov
sbbb
cmp
jp
outsb
inc
in
dec
mov
in
outsb
out
xor
xor
cmp
into
jge
xchg
lods
adc
or
xor
outsl
cmp
mov
mov
pusha
jnp
test
jg
loop
sti
cmp
cmp
inc
shll
mov
lods
imul
outsb
bound
idivl
faddp
add
xor
sub
lock
mov
in
cmc
mov
rcr
cltd
dec
dec
jle
enter
mov
push
add
jnp
inc
cmpsl
pop
xor
push
and
mov
sar
pop
mov
testl
sub
mov
fisttpl
adc
mov
adc
jecxz
or
and
imul
mov
cmc
sbb
or
mov
push
int
cmp
pop
imul
or
test
ret
mov
inc
cmp
xchg
stos
push
adc
sbb
in
adc
fidivrs
lock
lods
loop
dec
cmc
xchg
scas
in
push
lock
mov
lea
pop
jo
hlt
pusha
inc
rclb
popa
fisubs
loopne
sub
lock
cmpsb
mov
push
lcall
repnz
bound
int3
fimuls
ja
cmpb
cmp
push
mov
or
data16
mov
in
mov
pop
mov
sub
lds
cltd
sub
imul
testb
cmpsb
ja
xor
sbb
loopne
jge
dec
sbb
mov
jl
cltd
popa
int
cmp
incl
pop
dec
push
stos
les
cld
lock
xor
out
flds
les
das
out
outsl
mov
and
fnstenv
or
pushf
lret
imul
xchg
and
xchg
sub
bound
sbb
iret
xchg
icebp
mov
fldt
mov
mov
sub
jns
shll
fisubl
push
push
cmp
call
cli
mov
in
data16
push
add
outsl
mov
inc
dec
mov
pop
sub
outsl
mov
jb
addr16
push
in
adc
cmp
out
imul
imul
notb
aaa
xchg
lds
mov
inc
xor
mov
jmp
lahf
xor
cld
xchg
fstl
pop
aam
xchg
dec
adc
call
cmpsl
add
xchg
arpl
ret
inc
dec
cwtl
mov
xchg
std
enter
into
mov
pop
xor
lret
mov
inc
out
adc
lea
ss
ja
add
jb
lcall
nop
jg
lret
sahf
xchg
stc
aas
addb
testb
in
call
cmp
mov
gs
pop
out
cmpsl
out
and
lock
in
rclb
pushf
mov
xchg
sbb
xor
jns
xor
inc
sarl
in
into
lods
cmp
jmp
jns
pop
pop
mov
insl
pop
loop
shll
push
aam
insb
aas
rorb
clc
jne
ljmp
negl
and
movsb
pop
popf
stos
cmp
lret
cmpsl
push
pop
lds
ret
adc
insl
or
or
dec
aad
xor
lods
mov
or
mov
data16
fdivrp
and
in
xor
or
fcmovbe
mov
fdivr
mov
mov
ss
push
adc
xchg
sbb
mov
mov
jl
in
rcl
xor
inc
jge
fldl
or
or
or
stc
mov
push
lahf
push
insl
stos
or
xor
mov
ljmp
add
scas
pop
shll
ljmp
cmp
sub
pop
and
push
push
cs
shl
loope
xchg
cmp
mov
push
idivb
arpl
in
jg
mov
out
sti
xlat
daa
xchg
dec
pop
lea
cmpsl
stc
cmpsb
or
addb
jl
add
mov
dec
cltd
imul
aas
adc
pop
in
lea
pop
mov
cmpb
imul
or
repnz
push
call
xlat
mov
sbb
pop
mov
sarl
in
adcb
cmc
xchg
das
jle
out
int
mov
sub
leave
xchg
test
test
nop
mov
iret
jle
rorb
data16
into
gs
jle
sub
insb
leave
mov
xor
or
fnstcw
lock
data16
arpl
cmp
test
sarl
pop
push
idiv
aam
jl
mov
push
in
lock
xor
pushl
sbb
cmp
sbbl
dec
roll
add
movsb
fnstenv
jno
xlat
imul
fdivrs
lock
sbb
ja
ret
sub
ljmp
sub
xchg
inc
leave
and
push
test
les
add
mov
inc
scas
pop
xchg
pushf
adc
or
cwtl
movsl
mov
push
pop
and
mov
push
push
cmp
lea
xlat
into
inc
push
repz
dec
out
icebp
icebp
int3
push
xor
daa
ljmp
jg
es
xchg
faddl
sub
aaa
and
loope
test
stos
push
das
add
addl
push
cmp
cmpsl
dec
in
arpl
inc
les
repnz
pop
xlat
dec
mov
loopne
cmp
js
adc
sub
cmovae
gs
dec
add
mov
test
mov
adc
add
test
mov
in
testl
outsb
xlat
loopne
adc
in
sub
out
je
and
inc
xor
xor
daa
pop
dec
jge
enter
lret
aad
in
mov
fnstsw
dec
pop
int
adc
add
add
jnp
or
idivl
pop
adc
in
mov
iret
sbb
out
daa
into
xlat
lds
and
and
push
mov
out
inc
divl
and
stos
sub
js
inc
jp
or
mov
pop
jle
adc
mov
icebp
xor
shlb
inc
push
mov
push
enter
or
and
cmp
les
push
fwait
push
jle,pt
int
push
stos
xchg
movsb
fadds
inc
lea
jno
sbb
addl
iret
cltd
add
imul
xchg
imul
jns
enter
repnz
shll
lds
cmpb
dec
sub
sub
or
jl
sub
dec
and
popf
xchg
and
call
sbb
xor
mov
shll
cwtl
sti
and
dec
fstl
lock
js
mov
mov
cmp
mov
push
leave
nop
jl
nop
scas
push
lods
push
push
adc
lods
or
sarb
sub
jmp
and
dec
imul
shll
nop
sub
pushf
pushf
mov
adc
je
or
in
pop
inc
xchg
dec
insl
or
dec
mov
pushf
negl
sbb
or
hlt
sbb
cltd
jbe
lret
pop
popl
insb
mov
pusha
inc
mov
mov
fs
jno
add
enter
bound
ds
in
add
jo
jae
xchg
pop
out
mov
imul
jecxz
movsl
sbb
or
mov
scas
int
movsb
adc
popf
rcr
mov
loopne
mov
jns
mov
sysret
sbb
mov
dec
xor
mov
inc
cmovae
test
jg
jp
inc
mov
xor
mov
and
xor
xchg
es
test
cmp
jecxz
jns
imul
dec
jbe
pop
iret
jae
test
dec
out
and
push
mov
int
aaa
fisttpl
mov
and
jne
xor
int3
xchg
jge
mov
fidivl
mov
jno
push
dec
dec
repnz
xor
xchg
fdivs
mov
adc
xcrypt-cfb
cmpsl
daa
cmp
sbb
sbb
fdivl
lods
std
xor
mov
cld
loopne
and
dec
cmp
cmp
xchg
pop
mov
cmp
loop
and
push
xor
mov
loop
pusha
sub
aam
xchg
lods
push
sbb
test
push
out
mov
fsubs
shrl
sub
jae
out
loope
add
lods
or
cli
mov
and
dec
or
inc
dec
lds
pusha
shlb
adc
insl
inc
push
xor
lds
andl
pop
xor
cmc
fsubrl
xor
sbb
ljmp
xor
dec
adc
jp
xor
loope
jge
mov
das
or
push
fwait
roll
or
sub
mov
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
push
scas
aaa
mov
bound
pop
bound
or
or
repnz
jo
jp
repz
inc
std
data16
xor
pop
xchg
cmp
imul
clc
lea
incb
repnz
dec
mov
out
and
filds
xchg
mov
push
in
std
push
and
call
ljmp
inc
inc
mov
lahf
or
test
int
adc
sub
cwtl
mov
mov
or
push
cmp
push
inc
aaa
push
push
movsb
push
aas
dec
push
rorl
or
out
cld
cwtl
repz
pushf
sahf
call
dec
movsb
inc
xchg
and
xchg
push
fcmove
mov
add
jne
mov
into
cli
imul
sbbl
enter
in
mov
fs
jns
nop
push
sbb
cmp
faddl
push
jns
negl
jno
xlat
lods
inc
cmpl
mov
xchg
add
stc
addl
lods
dec
popa
jg
dec
push
andb
loop
sbb
xor
outsb
mov
inc
lret
sub
inc
icebp
xchg
pop
jg
mov
lds
aaa
nop
enter
shll
pusha
call
test
jnp
xchg
mov
into
push
adc
mov
stos
sub
xchg
cmp
inc
in
test
sub
ss
daa
sbb
mov
mov
adc
aam
fnsave
cmp
adc
xor
jo
std
push
shr
add
es
dec
sbb
push
add
vpmacssdd
test
xchg
out
or
in
sbb
or
jno
addr16
sbb
nop
fisubrs
mov
mov
aaa
stc
pop
xchg
xor
and
cmp
gs
stos
xlat
aaa
xlat
pop
xor
mov
xchg
mov
arpl
mov
loope
mov
mov
pop
pop
mov
outsl
add
gs
pop
test
jbe
sbb
cmp
or
repnz
out
fisttpll
add
cmp
jae
fbld
test
sbb
scas
or
hlt
lods
test
lret
jo
xor
fwait
out
call
mov
mov
or
push
mov
repz
sub
and
jge
inc
mov
fimull
imul
jbe
adc
push
ds
scas
lahf
mov
or
sbb
adc
and
mov
adc
insl
dec
jmp
bnd
or
xor
out
stos
xchg
in
cmc
sub
es
rorb
pop
pop
imul
or
hlt
std
adc
push
xlat
sar
sub
ror
je
call
cmp
pop
shlb
or
fldt
test
and
ret
jp
or
mov
cmp
mov
push
mov
loop
outsb
pop
lahf
fdivrs
sbb
xchg
push
dec
sbb
repnz
jb
leave
xchg
stc
mov
push
mov
loope
sub
add
sti
push
imul
fldenv
fistpll
fcom
stos
push
mov
mov
jne
and
int3
fcmovne
bound
sbb
cwtl
mov
pop
sbb
and
jae
jmp
aaa
popf
addr16
fwait
mov
jne
push
roll
dec
movsb
xor
xchg
mov
and
inc
ljmp
imul
mov
mov
out
flds
or
out
filds
in
xchg
or
mov
mov
test
stos
adc
pop
inc
int
pusha
fcoms
mov
mov
cmp
push
xchg
outsb
mov
std
cld
aas
out
add
cmc
enter
sbb
or
sub
push
addr16
push
out
lahf
inc
test
sub
jno
js
sub
and
cld
dec
clc
in
jecxz
fmuls
in
mov
mov
sbb
inc
and
dec
mov
cmp
jae
mov
testl
jnp
sbb
jmp
addb
and
adc
mov
out
cmp
cmc
shrb
fisttpll
add
imul
xchg
iret
mov
loope
mov
xchg
movb
jo
pushf
cmp
scas
out
ficoml
fidivrl
jp
js
dec
mov
mov
bound
dec
xchg
test
xor
pusha
mov
mov
lods
test
iret
stos
cld
or
out
daa
jne
je
dec
int
loope
pop
fiadds
or
addb
sub
jg
test
pop
iret
movl
jle
in
add
sahf
jmp
mov
mov
in
icebp
xchg
jns
pusha
xchg
adc
cmp
xor
int3
jmp
sbb
mov
bound
int3
cmp
push
imul
xor
je
push
dec
push
fldcw
mov
int3
pop
and
sub
cmp
cmpsl
ja
lea
inc
inc
pop
push
inc
in
add
and
loope
cmp
loop
xorb
inc
idiv
cmp
xchg
fstpl
xchg
sbb
popf
imulb
pop
adc
adc
push
loop
pop
adc
or
push
in
sbb
dec
test
ret
adc
cmp
out
das
fldcw
jecxz
into
mov
fsubrl
adc
out
imul
in
cld
mov
cmpsl
jle
adc
push
xchg
mov
pusha
shld
in
dec
ds
mov
sbb
lahf
mov
enter
js
inc
in
popa
sub
push
mov
pop
enter
int3
loopne
cmp
dec
outsl
xor
fcoms
jmp
push
out
mov
je
mov
stos
cmp
mov
add
dec
fmuls
adc
std
and
mov
mov
cmp
mov
dec
jge
xchg
lods
and
test
cmp
xchg
xlat
lods
aas
xchg
cmp
iret
pop
xor
cltd
scas
xchg
mov
data16
sbb
adcl
or
mov
push
scas
ss
lea
outsl
ljmp
inc
shl
cs
pusha
pop
inc
fiaddl
in
arpl
lret
int
icebp
out
test
outsl
sub
mov
xor
test
adc
cmp
push
cmpsb
pop
std
sub
cmp
jle
rorb
ret
cmp
mov
mov
icebp
xchg
stc
lods
push
adc
lcall
add
out
and
xchg
shl
addl
dec
mov
mov
movsb
fisubs
imul
insb
sub
cli
cmove
sub
fsubl
mov
mov
adc
lahf
pop
lahf
xorb
adc
aam
xchg
lods
into
dec
ret
aaa
lret
pop
sub
ss
push
inc
and
jbe
fmul
nop
xlat
clc
cwtl
rol
xor
js
test
aas
push
and
inc
and
in
xlat
roll
arpl
mov
add
and
subb
icebp
rcrl
inc
mov
rcrb
push
loope
mov
outsb
ret
lcall
fucomip
and
pop
xchg
outsl
pop
sbb
mov
daa
xor
push
pop
push
jns
jg
and
aaa
shlb
dec
data16
xor
dec
stos
mov
dec
loopne
pop
ss
aas
cs
dec
push
mov
cmpsb
fstl
in
js
pop
dec
jge
cmpsl
pop
mov
mov
or
rclb
fdivp
push
mov
mov
add
push
or
and
outsl
cltd
push
inc
aaa
lods
mov
cmp
lcall
xchg
icebp
pop
add
sbb
push
jg
test
sbb
movsl
push
aad
sti
rclb
mov
push
popa
pop
fwait
xor
mov
fs
mov
popa
pop
xchg
adc
push
adc
adc
in
cli
mov
mov
es
jmp
outsb
cmp
or
mov
push
add
cwtl
cmp
push
sub
mov
or
popa
mov
cmp
lods
int
bound
cmp
sub
jne
cmp
sub
inc
repz
push
dec
jge
push
aad
adc
out
add
xchg
imul
mov
jge
adcl
out
and
inc
pop
sbb
xchg
or
insb
push
rclb
mov
mov
mov
test
out
and
out
push
rorb
fsubs
sbb
jmp
ss
mul
or
xor
xchg
test
in
jecxz
cmpsb
pop
or
xchg
mov
inc
outsl
push
stos
dec
mov
ret
outsl
subl
js
cmp
sbbl
push
stc
or
pop
sub
cli
mov
sbb
inc
pop
dec
aas
std
mov
cmp
xchg
ret
in
divl
lock
cmp
xchg
lahf
cmpb
mov
mov
pop
fadd
cmp
daa
xchg
add
or
mov
cmp
mov
mov
add
xchg
jnp
loopne
daa
fimull
ret
call
lahf
adc
push
mov
dec
adc
inc
xchg
hlt
rcr
push
enter
push
sbb
aas
jbe
jle
or
or
cmp
push
jge
pusha
jno
or
jo
stos
and
adc
xor
lds
movsb
sbb
mov
ja
les
ret
mov
jo
push
xchg
hlt
out
mov
cmp
inc
cs
mov
sub
sub
enter
jmp
int3
sahf
push
fcomps
je
sub
aaa
push
dec
xor
jnp
scas
sbb
stos
ret
out
mov
pop
mov
mov
mov
mov
push
pop
add
dec
sub
rcr
dec
jl
pushf
mov
fcmovu
inc
pop
xchg
xbegin
inc
flds
xchg
push
xchg
sub
mov
jo
jnp
insl
jne
lds
cmp
clc
aas
lret
data16
add
xchg
leave
mov
into
scas
fildll
pushf
es
out
lds
repz
rolb
xor
inc
je
shlb
or
rorb
sub
xor
jae
xchg
adc
push
lock
cli
es
mov
push
repnz
pop
inc
outsl
in
mov
cli
rcll
int3
push
decb
sahf
addb
shlb
push
sbb
inc
fisubl
ja
insb
lods
andb
out
popf
mov
dec
jae
push
and
xchg
scas
dec
xchg
sub
cmp
bound
xor
pop
in
inc
fs
les
sbb
clc
sahf
cltd
lret
je
or
aam
fstpt
sbb
fcoms
rcll
mov
es
add
sbb
test
adc
icebp
push
inc
repnz
jp
xlat
sarb
ss
rclb
popa
les
int
cmp
scas
inc
add
xchg
jo
adc
mov
rclb
xchg
xor
mov
leave
dec
jbe
out
xor
pop
xchg
mov
push
mov
xlat
leave
loope
add
sub
pop
mov
dec
cmp
cmc
push
mov
push
pusha
rep
insb
loope
jg
repz
aas
pop
sti
lahf
sub
lret
or
xchg
mov
add
leave
lds
insl
lcall
mov
cmc
cs
out
ds
and
aam
mov
das
aad
push
inc
xor
sbb
jb
sahf
xlat
mov
mov
inc
scas
cmp
xor
pop
testb
xor
fstpt
ret
mov
bound
test
push
dec
sahf
data16
jb
jns
mov
fwait
xchg
lea
jg
lahf
loop
popa
sbb
pop
cmp
es
xor
mov
add
pop
movsl
push
repnz
into
call
in
jmp
cwtl
repnz
roll
test
test
mov
dec
mov
stos
dec
dec
imul
lods
fsts
or
std
sti
mov
and
out
jb
cmp
ret
sub
shll
out
mov
outsb
push
scas
ds
arpl
loopne
add
mov
in
movsl
add
push
mov
mov
pop
pop
in
push
in
or
jne
sub
popa
jge
pop
stos
push
mov
adc
sarl
pop
cmpsb
js
decb
js
ret
xchg
fcmovbe
pop
sbb
xchg
stos
sub
inc
seta
clc
push
jp
dec
jmp
dec
dec
pusha
decl
pop
sub
lahf
cltd
addb
pop
inc
xchg
and
gs
es
bound
push
cmp
and
repz
stc
cmp
mov
add
pop
sbb
pop
push
push
scas
mov
insb
loope
scas
adc
jl
adc
je
xorb
xchg
mov
inc
movb
aas
ja
mov
add
test
xchg
js
jl
or
cmp
dec
pop
cmc
sbb
push
jge
insl
notb
cwtl
xchg
test
cmp
pop
mov
repnz
sbb
xor
ljmp
mov
sti
call
imul
pop
and
stc
stc
pop
xchg
mov
xlat
add
sarb
mov
dec
cmp
cli
jle
sub
mov
shlb
push
repz
push
lahf
arpl
in
clc
xor
scas
popa
stos
outsb
dec
lahf
out
ljmp
popf
call
clc
test
mov
aam
arpl
dec
test
movsb
enter
sub
les
test
out
sti
push
fisttpll
push
and
in
jecxz
movswl
loop
test
jmp
add
pop
push
aad
hlt
ret
popf
xor
xchg
ret
in
inc
fdivrl
pop
shlb
gs
push
aaa
aas
hlt
dec
arpl
insb
inc
xor
cld
mov
out
push
push
mov
pusha
mov
test
jae
bound
jle
sbb
or
movsl
cmc
mov
jno
jno
add
stos
lea
lds
dec
scas
xor
xchg
fstpl
loopne
mov
mov
in
cmp
sahf
outsb
jg
dec
xchg
jp
bound
and
sub
das
jge
cwtl
xchg
mov
sub
cmp
mov
ja
mov
fcmovnbe
xchg
insb
leave
adc
test
jbe
lock
xchg
or
testl
mov
jae
les
cmp
lret
jne
test
sbb
xchg
inc
and
mov
mov
xchg
jl
xchg
push
sub
inc
mov
sahf
and
les
fucomi
popa
add
mov
push
dec
push
dec
or
movsl
mov
xor
pusha
mov
ljmp
popa
xchg
pop
ljmp
mov
jo
popa
subb
or
jb
pop
lods
push
lcall
inc
mov
addr16
add
je
fnstenv
call
sahf
or
cmpsb
xor
sub
xchg
int3
adc
lcall
pop
push
lahf
test
aam
push
cld
stos
pushf
test
loope
cmp
movsl
sbb
sbb
push
es
movsb
out
neg
xchg
sub
divl
xchg
push
mov
push
push
js
pop
inc
lods
xchg
pop
nop
stos
jge
jecxz
adc
in
pop
icebp
sarl
fdivrp
mov
in
es
inc
test
add
test
cmp
dec
mov
gs
lahf
inc
loop
cmpsb
sub
dec
sbb
leave
call
inc
sbb
ja
pop
nop
mull
cmpl
dec
pop
mov
lret
aaa
jb
out
sar
mov
xchg
fidivs
push
xchg
cmpsb
xor
mov
and
and
aaa
rolb
pop
inc
push
jg
loop
cmp
mov
repnz
push
sbb
in
push
aam
sbb
mov
int3
test
mov
jmp
mov
or
arpl
push
sbb
dec
xchg
into
cmp
fcompl
sbb
stos
insl
pop
ljmp
inc
mov
dec
test
sub
stos
decl
xlat
jle
imul
arpl
jb
cwtl
dec
jmp
dec
mov
out
inc
les
sbb
les
xchg
lret
push
fsubrl
scas
mov
mov
int3
xor
rclb
jle
sbb
and
pop
dec
mov
mov
push
dec
sub
mov
cmp
out
out
jmp
pushf
xor
sub
jg
gs
xchg
fstp
leave
jmp
add
add
lcall
adc
mov
rep
in
fmuls
mov
xor
dec
in
xchg
push
cmp
repz
movsl
xchg
jb
mov
js
sbb
mov
sub
jne
xchg
jmp
in
pop
fs
add
nop
mov
inc
dec
es
iret
mov
nop
xlat
stc
lock
test
adc
js
mov
enter
and
pop
je
in
push
adc
pop
ret
push
insl
pushf
lods
repnz
imull
jmp
add
jo
sbb
pop
fildl
ret
mov
pop
scas
mov
xchg
cmpsb
add
inc
and
nop
jmp
mov
xchg
gs
mov
xor
cmpsb
push
xor
in
loope
lcall
mov
push
xchg
xchg
sti
icebp
mov
adc
pop
cltd
jbe
hlt
mov
add
jns
and
jp
mov
mov
fs
setbe
fistpl
sahf
jo
pop
cmp
push
mov
and
ret
aas
pop
mov
push
scas
and
jno
xlat
xor
xor
loope
sbb
mov
push
aad
sti
add
jle
jmp
xchg
lds
push
dec
bound
stos
loop
pushf
adc
stos
inc
mov
les
jbe
sbb
pop
pcmpgtd
into
adc
div
mov
or
sbb
dec
add
or
sub
dec
mov
add
iret
stc
cld
mov
bound
test
int3
test
gs
jmp
pop
cmp
cmpsl
scas
mov
cmp
xor
dec
sbb
aam
jecxz
xchg
adc
and
mov
lret
ja
pop
in
icebp
inc
add
in
or
jae
movsb
xchg
adc
mov
push
sbb
sub
xchg
outsl
inc
jg
icebp
mov
inc
push
lods
cvtps2pi
fnstcw
sarb
mov
push
enter
inc
shlb
cmp
xor
xchg
dec
and
cmc
bound
dec
lahf
sbbl
sub
cs
jg
push
fimuls
jge
dec
mov
pop
mov
repnz
mov
push
fildl
mov
ret
int
in
icebp
xor
imulb
outsb
dec
mov
push
icebp
pop
scas
xor
sub
sahf
sti
pusha
aaa
dec
push
pop
adc
sub
inc
jmp
and
rcll
or
mov
negb
dec
sbb
clc
int3
std
lds
xchg
pop
int
call
sarl
adc
mov
jb
mov
add
push
inc
enter
sub
jns
insl
gs
sbb
pop
pop
repz
xchg
and
loopne
ljmp
ret
inc
addr16
mov
inc
movsb
leave
jl
ret
inc
mov
xor
stc
faddl
push
das
cwtl
sub
into
mov
clc
or
jb
movsb
test
cmpsb
sub
imul
push
add
sbb
negl
lods
pop
enter
jp
mov
push
cwtl
sbb
dec
jmp
mov
xchg
push
mov
enter
cmc
lret
stos
inc
daa
pop
inc
lcall
add
sahf
decl
adc
dec
mov
sbb
divb
test
dec
test
jo
mov
lock
fwait
inc
mov
gs
mov
adc
ss
inc
mov
jns
clc
pop
pop
sub
xchg
push
in
xchg
xor
orl
or
stos
iret
and
xchg
sbb
or
mov
mov
mov
add
ret
jns
bound
jbe
add
pop
or
xor
push
shrb
xchg
mov
ficomps
dec
add
inc
pusha
and
ja
stos
loope
aad
std
xchg
push
push
shll
hlt
out
pop
pusha
xchg
shll
sbb
mov
rorl
cmp
std
mov
nop
dec
sbb
lret
repz
addr16
icebp
xor
js
das
adc
sbb
popf
xor
or
fdivs
in
or
xchg
out
mov
mov
xorb
leave
xlat
les
bound
jmp
shrb
cmc
pop
in
mov
out
enter
arpl
shll
sub
fs
mov
insb
addb
add
jbe
jle
inc
mov
adc
aaa
adc
jg
mov
pop
out
adc
pop
lret
cs
inc
or
xor
mov
add
inc
out
sbb
add
ss
and
xchg
xchg
cmpb
mov
xor
push
ficomps
xchg
ss
arpl
loopne
divl
mov
push
loope
or
std
dec
xchg
in
notb
inc
das
xchg
adc
test
pop
xchg
inc
cmp
inc
in
sub
jno
adc
jns
lea
sbb
sbb
fbstp
or
bound
mov
xor
xor
xor
cltd
dec
outsl
mov
jecxz
movsl
int
nop
out
push
add
rorl
cmc
leave
bound
cmp
and
fdivl
je
and
mov
movsl
dec
xchg
sub
leave
subb
out
loopne
mov
cmpsb
outsl
stos
adc
mov
mov
jne
cmp
fs
dec
pop
cmp
daa
mov
mov
or
data16
cli
test
cltd
adc
cmpsb
dec
pop
rcl
jo
imul
cmp
add
loopne
jne
shll
xchg
aad
mov
dec
cmp
gs
sarb
stc
adc
sub
scas
fbstp
ds
sub
lcall
mov
mov
int3
dec
sarb
sub
or
enter
fwait
mov
loop
adcb
sub
loop
sub
inc
sub
jecxz
jl
or
fwait
cmc
or
push
mov
inc
jb
test
sub
addr16
shrl
addr16
add
sbb
cltd
dec
stc
adc
xlat
icebp
shl
cli
fildl
test
sbb
aad
push
sub
mov
jae
mov
xchg
push
or
aas
push
inc
fnstenv
int3
xchg
test
add
push
jb
and
mov
das
movsl
pop
pop
mov
pop
lods
add
cld
dec
jno
arpl
stos
out
fs
ret
add
pop
movsl
lret
sbb
mov
repnz
mov
lret
mov
jmp
into
mov
fs
sub
inc
push
push
or
scas
test
daa
lret
in
nop
imul
clc
sbb
inc
pop
pushf
dec
pop
ret
fisubl
ficoml
pop
mov
aaa
mov
pop
xchg
push
mov
loopne
rcr
outsl
sbb
dec
sbb
fs
sub
aad
xchg
iret
rorb
mov
lods
inc
adc
shrb
pop
stc
sbb
mov
movsb
int
add
mov
dec
mov
dec
mov
sbb
and
mov
xor
mov
adc
out
pop
pop
ljmp
jle
fs
hlt
js
or
xor
inc
pop
in
pop
mov
cli
out
inc
push
sub
in
dec
negb
push
inc
cmp
or
rcll
add
mov
test
pop
loopne
cmpsb
daa
mov
mov
rclb
negl
jle
sub
mov
jo
lahf
and
aas
sarb
pop
lock
jmp
sbb
fmulp
loop
push
add
movsb
or
add
mov
jp
pop
faddl
inc
sub
lods
dec
pop
int3
xchg
xchg
outsl
inc
outsl
push
add
and
pushf
repz
xchg
mov
mov
pop
dec
testb
cmp
fwait
pop
movl
das
mov
mov
leave
mov
shlb
shrl
push
mov
jno
scas
rol
or
cmc
ficompl
lret
int
idivl
jmp
dec
in
inc
loopne
int
repnz
mov
sti
popa
push
mov
popa
and
and
dec
push
sbb
push
addr16
or
cwtl
stos
out
push
imul
out
or
pop
mov
jb
dec
roll
adc
ret
ja
push
mov
adc
movsb
xchg
test
mov
aad
jg
or
or
ret
dec
aaa
insl
fstl
enter
adc
lcall
mov
jne
mov
cmpb
dec
inc
xchg
inc
xor
or
rolb
sub
hlt
out
popa
out
es
shlb
sub
dec
fistpl
mov
push
loopne
cmp
and
mov
clc
mov
insb
mov
xor
push
sbb
mov
mov
xchg
mov
pop
aas
dec
push
jb
mov
or
jmp
lock
add
sub
les
or
push
mov
aam
or
lock
adc
jnp
jnp
mov
xor
pusha
xor
jle
pop
push
jne
sbb
cmp
mov
push
es
pop
bound
imul
and
cld
xor
stos
fiadds
adc
sbb
xor
or
sbb
fwait
mov
jne
movsl
or
push
aam
xchg
in
cmp
int3
xchg
xor
mov
jns
push
push
jmp
data16
mov
or
jg
test
push
into
cmp
dec
mov
nop
pop
movsb
outsb
mov
es
repnz
imul
inc
jne
clc
inc
adc
adc
pushf
idiv
outsl
xorb
rcl
add
dec
pop
jno
aaa
insb
pop
mov
out
and
mov
mov
xchg
enter
bound
nop
xchg
loope
gs
test
xchg
jnp
into
hlt
sbb
fnstcw
lods
ds
pop
gs
dec
add
rorl
loop
xlat
mov
test
sbb
pop
lea
or
test
or
cmp
jmp
mov
push
sub
test
and
mov
fldcw
mov
hlt
pop
add
adc
push
in
fnstcw
int3
dec
sub
sbb
ds
adc
jbe
repz
adc
fsubrl
or
stos
mov
and
fldl
mov
sbb
inc
and
sbb
cmpb
inc
sub
xor
jmp
mov
xchg
gs
adcl
addr16
cwtl
or
cmp
xor
cmc
rol
push
cmp
or
out
addl
cmp
adc
dec
cmp
mov
mov
dec
cltd
mov
xor
sbb
mov
dec
jp
stos
xor
frstor
pop
add
push
pushf
mov
leave
sub
fisttpl
sbb
arpl
ret
adc
cmp
or
imul
out
or
nop
outsb
xorb
ret
inc
or
add
mov
adc
add
jo
xchg
in
fs
mov
pop
lea
jns
jp
jmp
push
aam
mov
pop
jecxz
rcll
mov
jecxz
jb
and
pop
push
cmpsb
mov
clc
stc
push
nop
inc
dec
or
fidivrl
mul
mov
adc
sbb
fcoml
jge
clc
sub
les
int
les
fists
arpl
push
add
sahf
mov
out
xchg
cmp
push
push
cmp
setno
cwtl
and
mov
mov
pushf
bound
mov
mov
shr
xorl
or
dec
and
jno
add
jmp
mov
rolb
andb
out
inc
push
xor
popf
adc
push
rcl
lock
repz
xchg
push
mov
mov
or
sbb
lods
sbb
sbb
add
push
jbe
sub
iret
sbb
jmp
mov
pop
sub
dec
test
jb
dec
outsl
jp
ja
cwtl
mov
sbb
jo
inc
divw
inc
xchg
js
sahf
sub
pop
pop
repz
dec
hlt
std
add
mov
addb
or
push
push
fidivrs
call
or
inc
pop
and
rcl
out
sub
fnstcw
sub
mov
pop
push
adc
push
std
pop
mov
rclb
out
cmp
mov
cmpsl
cmc
ret
jmp
dec
or
jge
daa
repz
jns
popa
scas
adc
sub
inc
dec
ret
es
push
jb
lock
popf
jmp
shlb
flds
push
mov
fdivs
push
addr16
inc
xchg
mov
sub
dec
fmuls
fldl
lock
aaa
pusha
test
jmp
pop
repz
je
shl
add
in
adc
jp
inc
push
mov
leave
xchg
sub
inc
test
movsl
add
stc
mov
jbe
mov
push
inc
xchg
mov
and
pop
inc
mov
ja
and
mov
sub
ja
or
add
jmp
or
xchg
jne
xor
mov
lds
lods
pop
aad
xchg
sub
mov
mov
push
fs
add
scas
js
aam
cmc
ret
mov
test
cld
std
out
in
pop
fwait
pop
dec
mov
push
shll
push
sub
jle
icebp
lds
scas
in
push
or
jge
inc
xor
int
or
jge
pop
sbb
inc
into
dec
or
inc
nop
mov
inc
jne
mov
xchg
push
insb
adc
adc
or
mov
push
cmp
fdivs
mov
es
xchg
ret
js
mov
mov
lret
shll
in
outsb
push
cmp
adc
dec
jb
push
cmpsl
adc
push
fnstsw
adc
call
xchg
xor
mov
fnsave
push
bound
pusha
movsl
lea
aam
pop
inc
jnp
out
mov
jmp
xor
xor
sbb
adc
out
dec
push
int
cmp
xorb
dec
xchg
scas
or
cmp
xchg
aaa
fwait
dec
andl
push
or
dec
mov
xchg
movsl
jmp
dec
cmp
dec
xchg
sti
push
rorb
sbb
jb
xchg
sub
dec
mov
addr16
or
xchg
jle
into
xor
int3
loop
cmp
pop
into
insl
sti
and
movsl
movsb
repz
or
mov
xchg
mov
xchg
pop
jb
std
lods
xchg
hlt
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
push
pop
adc
bound
pop
bound
outsb
inc
jle
lahf
xlat
lds
movsb
add
sbb
add
loope
leave
jmp
addl
or
jecxz
or
mov
dec
subb
stc
rorl
dec
filds
loope
add
sub
or
mov
sub
mov
lock
mov
pop
test
mov
dec
mov
aaa
flds
xchg
mov
pop
data16
dec
and
jnp
daa
shl
inc
mov
loope
cmovs
test
sub
jno
test
fiaddl
in
nop
loop
gs
icebp
loope
cmp
inc
stos
shl
lock
cmpsb
cmpsb
and
movsb
clc
hlt
xlat
int
fisttpll
pop
jp
adc
dec
cmp
into
insl
popf
jl
adc
loope
cld
mov
loopne
pop
test
cmp
push
dec
pop
dec
ret
test
orl
add
inc
push
out
rcll
stc
inc
subl
sbb
mov
outsb
mov
mov
jp
fdiv
loope
xor
scas
or
sub
mov
pop
mov
and
loop
pop
lcall
or
sti
jnp
pop
sbb
mov
pop
mov
test
movsb
repz
fs
imul
and
cld
lret
jae
std
xchg
cli
xchg
add
jb
xor
insl
pop
fisubs
loop
fistl
or
push
negl
call
orb
mov
mov
leave
add
mov
or
mov
inc
fadd
aam
xchg
insl
sbbl
fsubrs
rcrl
scas
push
add
rcl
inc
jo
or
pop
or
xchg
test
push
loop
int3
adc
mov
jl
pop
cmp
repz
mov
testl
inc
ret
sti
pop
jnp
xchg
jmp
ljmp
xchg
inc
cmp
mov
ja
sbb
cltd
mov
insb
and
xchg
mov
mov
scas
xor
mov
jbe
ror
test
mov
outsb
je
cli
in
add
dec
and
jb
lea
dec
or
out
mov
sub
xchg
mov
lret
movsb
dec
sbb
cmp
adc
dec
aas
adc
adc
pusha
dec
cmp
mov
and
add
ds
scas
jle
dec
mov
in
inc
jno
outsl
push
shr
test
mov
testl
mov
mov
decl
aam
adc
dec
add
pop
pop
xchg
inc
fdivs
push
pusha
xchg
cwtl
cmpsb
xchg
adc
out
icebp
sub
scas
ficomps
subl
cwtl
sbb
cmp
jbe
push
mov
sarb
jmp
mov
pusha
or
jae
jnp
jmp
in
sub
and
arpl
sbb
cmc
xchg
mov
sbb
xchg
shrl
insb
das
decl
cmpsb
push
leave
hlt
icebp
push
xor
lret
pop
xor
mov
repz
inc
pop
lock
or
or
imul
add
add
jmp
mov
daa
scas
dec
loopne
cmpsl
cmpsl
in
mov
push
jecxz
dec
adc
xchg
shr
sbb
add
sbb
outsb
mov
out
into
inc
lods
insl
mov
lret
or
mov
mov
scas
popf
imul
repnz
jnp
add
jmp
scas
pop
and
and
fcmove
je
jge
rcrl
scas
or
pop
orl
ja
mov
outsb
sti
rolb
jmp
scas
or
cltd
xchg
jno
test
jo
dec
outsb
gs
loopne
and
xchg
das
cltd
mov
xlat
stos
add
and
outsl
mov
lods
push
int
mov
aad
xchg
push
lods
scas
lods
outsl
jle
ds
mov
subb
ret
sbb
js
and
push
shll
lods
jge
test
xlat
movl
mull
sbb
xchg
sub
pusha
fs
test
aas
xchg
adc
fmul
out
push
sub
data16
data16
mov
jb
add
fiaddl
mov
mov
fildll
sub
mov
jnp
mov
repz
js
xor
fadd
in
jo
test
cmp
mov
push
mov
sub
mov
imulb
rorb
cmpb
stos
xor
aas
cmpsl
lods
cmp
loop
sub
aad
xchg
xchg
sbb
xchg
push
sub
and
inc
or
into
testl
cmp
cmpsb
push
sub
push
leave
inc
icebp
add
lcall
cmp
cltd
in
push
fidivs
ret
or
adc
sub
lea
cmp
dec
add
dec
cmp
ljmp
and
out
dec
pop
jecxz
incb
push
pop
leave
fcmove
xchg
addr16
out
ret
ja
std
imulb
out
jmp
test
scas
stos
push
xchg
lcall
mov
dec
or
loope
jno
mov
ja
or
mov
inc
filds
es
aaa
sub
sbb
sub
fmull
push
in
adc
fidivrs
cmp
out
fwait
push
sub
sub
in
pop
jno
sub
sbb
mov
or
scas
jno
test
repnz
shlb
or
mov
in
adc
adc
mov
and
pop
mov
popf
mov
nop
into
test
loop
xchg
pop
push
adc
aas
stos
outsl
mov
dec
push
lods
and
sbb
pusha
enter
addr16
ret
fwait
andb
add
jno
lds
jge
and
lods
mov
jae
in
or
adc
adc
popa
sub
fs
das
or
je
cmpsb
mov
jle
or
std
je
mov
insl
stc
sbb
cli
nop
xchg
mov
sbb
pushf
mov
push
pop
adcl
xchg
aad
outsb
xchg
mov
jecxz
xchg
jns
hlt
dec
aad
mov
dec
out
aam
popf
xchg
dec
outsl
lods
cmpsb
xchg
push
mov
inc
stc
add
loop
add
or
mov
pop
sbb
jae
sbb
imul
bound
das
mov
jbe
aas
mov
pop
cmp
test
dec
push
fdivrs
ja
push
fmuls
cmp
sub
adc
jp
loop
test
add
testb
ficomps
or
sarb
jnp
dec
mov
mov
adc
insb
cmpsl
fcomip
out
push
mov
outsl
ret
test
out
sub
test
xor
and
pop
and
outsl
jno
dec
pop
cli
sbb
call
lds
pop
rcrl
push
xchg
test
xchg
test
insl
mov
enter
test
sti
mov
mov
leave
inc
adc
pop
push
push
xchg
int
gs
mov
jle
or
ret
and
leave
lcall
cmp
add
addl
mov
sbb
mov
imul
mov
add
out
dec
push
jae
ret
int3
push
lods
stos
mov
cmp
rcll
adc
mov
xor
or
and
pop
fwait
ret
fincstp
aam
push
mov
loop
jg
jb
in
push
lahf
pop
ss
mov
mov
out
sbb
xchg
stos
push
iret
mov
out
jge
sbb
jo
lds
and
mov
xor
adc
pusha
ja
je
and
jbe
jp
inc
or
adc
and
xor
pop
cli
movsl
mov
add
inc
mov
data16
enter
lret
sahf
idivl
cld
mov
out
clc
arpl
add
and
fdivs
cmpsl
adc
or
push
mov
mov
pop
dec
movsb
lock
mov
daa
fistl
cmp
sarb
sub
inc
mov
stc
and
pop
lods
push
test
sbb
xchg
xor
mov
ret
xor
ss
loope
out
push
xor
xor
addr16
jae
clc
mov
sbbb
aaa
xor
addb
pop
roll
adc
sub
stc
les
jbe
xor
push
mov
xor
notl
repnz
xchg
aas
popa
les
shl
iret
andb
xchg
pop
pop
lret
mov
fisubrl
sbb
cs
jae
lods
mov
test
pop
xchg
xlat
push
aaa
fdivl
jo
push
fcmovnbe
fistpll
mov
test
imul
loope
push
dec
push
xor
jns
ffreep
test
dec
je
jne
out
add
mov
xchg
repz
xchg
rcll
lods
fldcw
sbb
pop
cmp
mov
dec
idivl
lahf
fwait
daa
xor
jmp
cmc
xchg
fsub
fcmovbe
popa
cmp
popf
inc
jae
jae
cmc
outsl
mov
mov
sbb
jno
push
inc
movsl
aam
data16
popf
mov
and
loop
mov
leave
dec
icebp
es
push
lcall
jl
dec
std
jne
cld
mov
mov
xor
in
sbb
sub
imul
in
outsb
clc
test
xchg
push
and
mov
lahf
push
or
scas
sbb
orl
negb
fld
and
pop
mov
mov
icebp
movb
mov
test
xchg
pop
lea
lret
jl
lea
in
addr16
add
aas
add
loopne
fcompl
push
lret
les
or
mov
dec
cltd
loope
inc
sti
jge
in
cli
repnz
iret
add
xor
pop
mov
out
addr16
sbb
pop
shlb
out
xchg
mov
or
jg
cwtl
pop
xor
or
mov
inc
lea
adc
repz
popf
inc
adc
xchg
xchg
inc
cmp
inc
scas
push
into
enter
xchg
inc
loopne
popf
add
xor
mov
jmp
cmp
jne
adc
mov
ds
xchg
push
mov
fs
aas
lods
sub
mov
in
pushf
pop
or
cmp
mov
pop
nop
or
mov
sarl
mov
ja
add
mov
std
cmp
sub
mov
stc
cltd
or
mov
mov
jle
cmp
adc
mov
lret
sbb
js
mov
repz
repz
xor
std
dec
adc
or
push
loope
shrl
inc
bound
movsb
inc
fstps
lret
ljmp
cltd
popa
cmp
sbb
pop
mov
inc
repnz
mov
out
lcall
cld
lahf
loop
pop
xchg
test
pop
sub
push
pop
fidivs
or
out
fldt
and
cmpsb
and
lcall
adc
les
mov
jno
push
leave
and
sti
test
or
data16
mov
lret
rcrb
jmp
icebp
mov
mov
inc
xchg
inc
and
iret
dec
sbb
aad
jecxz
jmp
mov
mov
xchg
in
cli
mov
into
xor
dec
mov
and
data16
addr16
rorl
xchg
xchg
sbb
jbe
and
cmp
mov
sub
pop
push
bound
ds
lahf
cmp
call
sub
rorb
xor
xchg
sub
and
mov
dec
dec
sub
ja
xchg
andl
fistl
movsb
push
pop
lret
dec
pop
jo
cmc
mov
mov
mov
shll
cmp
lret
iret
mov
inc
imul
mov
lea
or
pusha
inc
cmp
addb
test
jp
ljmp
xor
pop
sbb
and
test
add
movsb
lahf
mov
xor
ljmp
jo
in
ret
push
add
cmc
aas
push
sub
xor
cmpsl
xchg
sti
mov
cmp
daa
adc
dec
jl
out
sbb
xchg
ret
in
fistps
shlb
jg
loopne
dec
pop
sbb
icebp
xchg
hlt
xchg
fcoml
mov
out
in
mov
std
hlt
mov
cmp
sbb
sbb
sub
and
dec
jne
sarl
int
jecxz
ljmp
addr16
mov
cmpsb
js
inc
or
stc
and
push
adc
xor
pop
push
movsl
jb
inc
and
xchg
xchg
mov
push
lret
inc
pusha
loopne
ds
adc
and
pushf
in
xor
jns
jns
ficoms
mov
fldl
cmp
adc
imul
movsl
cld
xor
mov
fst
rorb
int
mov
fistl
push
cmp
push
push
mov
dec
jae
xor
jne
and
test
ret
sub
rorl
push
cmc
inc
popa
aas
jns
cmp
into
call
cmp
shlb
rol
addr16
adc
dec
test
call
jmp
sbb
sbb
push
lods
out
pop
lret
inc
pop
int
testb
dec
or
mov
cmp
lods
jns
add
dec
xor
lods
loop
jge
fsubrl
jge
inc
decl
ds
loope
xchg
cmp
adc
xchg
add
add
xchg
inc
jbe,pn
das
cmpsb
mov
pop
mov
mov
jne
test
sub
mov
cltd
enter
mov
and
sbb
stos
ss
push
add
mov
dec
out
loopne
ja
loopne
repz
xor
cmpsb
in
je,pt
int
lods
out
sub
pushf
and
outsb
fsubr
ljmp
push
fldenv
xlat
lock
hlt
cmp
jns
xchg
dec
sbb
leave
adc
mov
lds
inc
imul
imul
out
mov
loopne
or
and
jmp
mov
add
in
jecxz
sub
into
or
lahf
sub
test
mov
cmp
ja
lods
mov
or
fwait
or
jns
mov
sub
ror
cmp
subb
xchg
xlat
test
das
lahf
cmc
dec
movsl
ljmp
out
mov
out
repnz
dec
data16
pop
aam
push
push
fs
adc
scas
dec
jae
das
int
rorb
shlb
and
aad
es
pusha
sbb
test
sbb
sahf
and
aas
add
into
xchg
loopne
loopne
movsl
iret
es
mov
sarl
ret
in
push
call
mov
fdivs
sarl
and
gs
std
fs
inc
push
stos
mov
aaa
fildl
lods
dec
add
movsb
push
or
xchg
fidivrs
int
and
cmp
xor
push
sub
ss
mov
outsl
cmp
repnz
pop
push
add
push
sub
xchg
dec
sti
xchg
mov
testb
fmull
add
pop
jp
shrb
push
lea
dec
frstor
popf
xchg
pop
dec
adc
adc
out
ret
popf
fldl
pop
mov
mov
add
mov
mov
push
xchg
push
dec
jne
mov
mov
fs
xor
arpl
jns
out
xor
rcll
lret
push
fcoml
out
xchg
jp
lds
pop
rsm
nop
cmp
dec
mov
and
iret
sbb
sbb
and
xchg
cmp
cmp
inc
fdivl
jmp
rol
mov
cmp
les
pushl
lea
outsl
xchg
mov
in
xor
push
out
xchg
fwait
clc
xlat
cld
pop
jae
xor
in
test
adc
pushf
mov
jae
push
adcb
mov
lahf
ljmp
mov
mov
movsl
lds
or
jne
xchg
andl
mov
fwait
pop
add
insb
xor
iret
push
insb
sti
push
stos
add
cld
pop
iret
xchg
into
adc
lret
pop
pop
add
jp
movsb
inc
push
inc
ror
xor
shrb
jns,pt
inc
mov
rcll
jnp
ret
lds
sub
xor
xchg
push
cmp
loope
push
lret
aas
test
mov
lahf
dec
xor
inc
sbb
adc
rcrl
lret
xchg
mov
fldenv
sub
jo
es
push
les
insl
mov
mov
cmpb
dec
push
inc
inc
dec
cmp
jecxz
xchg
and
pushf
push
mov
sti
xchg
sub
aaa
data16
movsb
das
or
pop
js
mov
xchg
imul
out
lret
or
mov
mov
dec
int
adc
ljmp
mov
jbe
sub
stc
cli
enter
loope
jg
mov
inc
cmp
lock
outsb
test
aad
comiss
mov
jle
stc
jns
in
xchg
sbb
pop
int
push
xchg
xor
and
movsl
mov
mov
loopne
ret
sbb
fstpl
stc
imul
mov
xchg
and
enter
sbb
fistpl
sub
outsl
lahf
jmp
dec
mov
push
fucomp
fnsave
loope,pt
push
cmp
stc
pop
sahf
jp
pop
fstpl
xchg
lret
sbb
sarl
mov
mov
jmp
out
out
lock
xchg
fildll
call
and
and
mov
xchg
movsbl
xor
ja
stos
xchg
adc
aad
lea
or
lds
fidivs
mov
adc
add
mov
adcl
xchg
jns
fimull
push
push
pop
push
adc
popa
jnp
int3
pop
cmp
cmp
jmp
aam
enter
inc
inc
in
ret
dec
push
lahf
aas
push
adc
repz
pop
or
push
stos
mov
inc
mov
rcrl
divb
movsl
pop
int3
jl
test
dec
aaa
or
inc
jne
xchg
int3
mov
mov
sub
js
mov
out
cmp
inc
sahf
data16
jle
push
mov
jnp
test
imul
dec
push
icebp
add
cmpsl
lret
ficoml
aas
sbb
cmp
push
jbe
iret
bound
pop
dec
aaa
push
loopne
dec
outsl
sub
add
lret
aas
jg
jnp
pop
add
add
jmp
fsub
lods
jg
scas
jo
dec
repz
sbb
insb
jle
sti
leave
fs
cmp
jo
mov
mov
enter
mov
jle
lahf
push
cmp
imul
xor
pushf
rolb
ficompl
sub
das
and
dec
inc
imul
bound
push
or
lret
aad
adc
push
push
ss
xchg
add
scas
adc
lret
test
shll
clc
jmp
mov
jp
push
stc
in
jle
into
fs
ror
stc
lods
push
xor
in
cltd
sbb
pop
mov
and
sahf
add
dec
pop
incl
mov
lret
and
sbb
jl
cmp
push
leave
bound
sub
mov
sub
mov
mov
ds
bound
mov
sbb
outsb
lcall
inc
test
sbb
out
dec
push
xlat
sub
lcall
dec
mov
mov
aas
aas
clc
add
mov
xchg
xor
xchg
adc
push
out
or
mov
dec
cmpsb
sbb
sbb
fwait
test
sarb
add
sub
notb
pop
ja
and
jmp
lret
stos
cmpsl
adc
arpl
adc
adc
and
fadds
flds
ror
inc
stos
xor
inc
in
movsl
dec
into
sbb
push
inc
sub
insl
pop
xchg
bound
gs
iret
jge
push
in
pop
adc
cmp
mov
movsb
jae
dec
xchg
pop
inc
jp
lea
jns
cmp
add
repz
movsl
xor
sub
cmp
inc
adc
sub
mov
push
or
push
out
insb
aaa
rorl
pushf
fsubrs
daa
cli
fnsave
or
jg
in
out
pop
and
arpl
fwait
and
fcoms
add
cltd
jp
jp
int3
lahf
int
push
sahf
pushf
loop
cld
ficoms
push
mov
jns
stos
std
sti
mov
sbb
pusha
shl
sbb
lea
push
in
push
fildll
pushf
imul
fdiv
and
in
sub
pop
mov
hlt
lret
push
dec
out
xchg
push
nop
dec
mov
pushf
xchg
fildl
cmp
scas
jbe
cmp
loopne
xor
aas
jg
pop
leave
ret
cmc
dec
aaa
in
dec
jecxz
call
movsl
lock
hlt
pop
pop
mov
mov
test
ljmp
js
add
lds
ss
fstl
cli
ficoml
push
fstl
xor
push
icebp
adc
xchg
xchg
out
ret
xor
push
stos
inc
jae
imul
mov
cmpsl
out
or
ss
jb
imul
pop
imul
sub
fyl2x
push
pop
sahf
sbb
push
jmp
leave
pop
sbb
call
test
das
stos
lods
ret
imul
fsts
movsl
sbbb
jno
insb
out
xor
xchg
sub
dec
mov
outsl
add
jo
dec
test
cmp
sbb
stc
scas
dec
fdivrl
cmpsl
insb
add
ret
mov
push
xchg
gs
aas
lds
mov
mov
dec
jg
sti
das
add
jg
popl
jle
jnp
xorl
xchg
lret
fs
xlat
es
mov
inc
mov
lret
int3
lret
mov
xchg
cmpsl
mov
mov
xor
mov
jmp
mov
adc
pop
out
ds
ret
jg
mov
lods
sub
add
ret
inc
pop
xor
arpl
or
mov
rolb
sub
sahf
dec
enter
scas
loopne
jbe
shrb
fs
mov
std
loopne
adc
lea
dec
hlt
cmpsl
cmp
into
sahf
mov
cmpb
mov
insl
jae
dec
and
sbb
pusha
push
shll
leave
mov
xchg
and
mov
das
fstp
subb
jne
lret
shl
ss
jb
xchg
mov
sbb
mov
jb
dec
iret
mov
xchg
cmp
jno
cwtl
xor
arpl
fwait
sub
push
movsl
shrb
jg
xor
cltd
mov
sbb
std
popf
pusha
ret
sbb
in
jecxz
push
call
divps
inc
jp
je
sub
sbb
je
mov
scas
jge
sub
roll
popf
aaa
sub
cmpsb
mul
cmp
popa
cmp
pop
popf
xor
xchg
cmp
mov
cmp
rcl
push
xchg
sbb
jl
test
sub
insl
adc
pop
and
pop
out
jl
mov
inc
jecxz
jbe
adc
aam
cmp
fdivs
mov
jle
and
cmpsl
sbb
imul
in
fstcw
cwtl
int3
arpl
inc
xchg
adc
lcall
add
sub
in
out
loopne
jbe
clc
daa
and
cltd
jmp
mov
pop
insl
mov
adc
jecxz
arpl
xor
aaa
xorl
ret
arpl
shrl
popa
loope
mov
jno
mov
lcall
sar
sub
push
mov
pop
icebp
adc
add
xor
push
jl
jp
inc
xchg
into
and
outsb
stos
jo
sbb
cs
lea
pop
sbb
inc
mov
xorb
push
rol
or
mov
test
lods
jp
divb
push
xchg
hlt
jp
loopne
push
push
and
ret
adc
aaa
out
cmp
ss
sbb
xchg
mov
ja
mov
cmp
pop
mov
pop
ljmp
dec
mov
dec
inc
fidivs
es
call
sbb
data16
pop
jp
imul
call
push
aas
gs
cltd
xor
jbe
pop
xor
rcrb
inc
mov
lods
push
insl
mov
incl
lods
xlat
rorl
sbbl
mov
jns
test
inc
mov
mov
les
inc
inc
sahf
xor
nop
loope
stos
cld
mov
xchg
xchg
call
stos
leave
jnp
insb
xor
xor
mov
xor
loop
push
mov
fwait
and
mov
test
ret
lahf
xor
push
pop
insb
fistpll
enter
rcrb
repnz
pusha
adc
mov
out
mov
xor
inc
ljmp
repz
add
jbe
ds
push
daa
out
lods
pop
or
push
xlat
sbb
data16
push
inc
mov
or
jmp
not
add
pop
negb
add
mov
mov
dec
cwtl
cltd
ffree
in
adc
mov
or
cmp
sti
inc
fists
push
addb
xchg
xchg
xchg
inc
std
xchg
inc
inc
test
xlat
jo
std
and
push
pop
push
and
pop
fsts
hlt
and
fsub
into
daa
or
mov
add
stos
notl
mov
sub
adc
incl
jae
pop
inc
call
dec
imul
out
push
jne
xchg
out
jae
cmp
pop
cmc
fucom
popa
push
fistps
adc
push
mov
or
lock
mov
push
mov
clc
lods
mov
fnstenv
cli
mov
test
add
push
mov
add
xor
jbe
jb
jmp
fnstcw
adc
mov
adc
imul
lock
mov
out
dec
andl
aaa
push
repz
fmull
sbb
fs
cmp
sbb
rcrb
sub
jl
mov
cltd
in
or
loopne
sbb
test
adc
out
mov
xchg
sti
jno
in
dec
lock
and
es
xorb
std
repz
mov
repz
jnp
xchg
jno
clc
xlat
push
push
loopne
jp
inc
mov
shrb
jns,pn
js
and
lock
mov
lods
cmp
pop
fdiv
or
lods
and
idivb
adc
ficompl
lds
ljmp
ljmp
xor
adcl
mov
xchg
and
inc
xchg
pop
pusha
sub
lea
lds
cltd
pop
jae
mov
daa
jg
or
jne
dec
dec
cli
sbb
aam
repz
sahf
xchg
jne
jbe
inc
ficoml
xlat
xlat
nop
stc
sbb
jbe
aas
jnp
vmovaps
dec
inc
repnz
ljmp
push
scas
sbb
in
test
push
in
add
sbb
mov
movsl
cltd
inc
int
add
push
jbe
cli
push
loopne
les
mov
xchg
aad
jle
lret
stos
push
cmc
mov
sub
or
sbb
xchg
or
ret
sub
cwtl
xlat
inc
jo
sbb
out
int3
pop
mov
fs
cwtl
cmp
imul
dec
pop
pop
cli
dec
rcrb
cld
sub
jo
xlat
cwtl
xchg
mov
push
testl
fnsave
dec
inc
sbb
bound
scas
sub
movsl
js
mov
mov
jae
outsb
shlb
adc
clc
add
pop
push
addr16
xchg
stos
repnz
std
fs
mov
cmpsb
popf
sub
int
outsb
cmp
stos
push
sub
push
gs
jg
adc
adc
and
scas
adc
int3
push
mov
inc
ljmp
lds
mov
loope
add
test
or
xchg
incl
jg
sub
cld
and
les
push
bound
iret
cmp
ret
lea
mov
xor
in
mov
cli
testl
jbe
outsb
aam
adc
in
daa
push
add
jno
and
mov
inc
pop
fdivs
xchg
pop
stc
movsl
jae
dec
ret
dec
dec
mov
add
icebp
mov
jb
leave
mov
lret
in
push
jl
sti
js
fimuls
outsb
xor
push
mov
sub
jb
mov
xchg
sbb
pushf
lds
imul
leave
push
jmp
data16
mov
fs
push
jne
pop
out
ss
mov
rcll
push
sbb
pop
mov
jmp
or
push
xchg
push
sbbl
sahf
mov
xchg
aad
icebp
push
adc
push
pop
jne
cli
mov
data16
push
add
adc
fwait
inc
lret
into
sub
adc
inc
pop
faddl
xchg
pop
adc
je
enter
push
imul
jnp
mov
pop
cmc
inc
mov
mov
and
push
movb
xchg
outsb
es
sar
mov
in
jl
jns
sbb
xor
je
add
mov
push
loop
inc
sub
cmp
imul
call
mov
mov
cld
ja
xor
ss
jge
mov
jns
xchg
mov
lods
cmp
dec
cmp
fwait
cs
movzbl
ficoml
repz
inc
dec
and
xlat
incl
adc
fistpl
out
popa
outsl
sub
adc
out
push
frstor
out
mov
insb
mov
rclb
dec
and
pop
add
fstl
cmpsb
shlb
add
mov
mov
outsl
cmp
sub
push
enter
out
out
mov
xchg
dec
push
inc
rclb
rolb
xchg
stc
fstpl
jns
in
dec
push
sbb
movsl
push
fdivr
rcr
jecxz
test
aad
ja
adc
cld
addr16
xor
sbb
imul
arpl
mov
out
or
xchg
aaa
jns
and
adc
push
mov
inc
aad
jno
or
xlat
adc
and
insl
cmp
xchg
pop
repnz
sbb
ss
lret
push
imul
xchg
stos
dec
add
xchg
inc
push
pop
pop
adc
pushf
aam
xchg
xor
ss
push
mov
add
push
xor
mov
bound
addr16
xchg
jnp
mov
xchg
outsb
bt
andb
aaa
sub
xchg
repnz
jmp
inc
inc
lcall
pop
test
jns
xlat
das
or
inc
adc
xor
rorb
loopne
mov
pop
aad
inc
arpl
popa
je
jb
call
lret
mov
in
add
scas
push
adc
push
pop
adc
cld
xor
xor
add
adc
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
aaa
call
pop
bound
ret
pcmpgtw
mov
inc
int3
test
int
inc
lahf
mov
ljmp
xchg
pushf
ss
rcr
gs
pop
aas
jp
popa
xor
and
lahf
out
repnz
cwtl
add
das
pop
scas
pop
add
shl
sarb
add
and
shrb
or
sbb
repz
adc
fsub
out
icebp
xor
mov
add
enter
clc
mov
imul
mov
sbbl
rclb
loopne
addr16
inc
dec
out
mov
push
sub
and
adc
inc
mov
jg
mov
fwait
inc
negb
mov
pushf
lock
cmp
mov
mov
or
insb
jnp
push
cmpsb
rclb
std
fwait
xchg
xor
pop
in
mov
pop
inc
rol
enter
cmp
mov
movsl
rcr
nop
pushf
testl
pop
jbe
mov
mov
xchg
test
sarl
enter
lods
stc
sahf
add
addr16
cli
jp
jmp
mov
jge
push
ljmp
out
jge
pushl
inc
jg
pusha
mov
fnstcw
dec
jns
push
mov
sub
push
xchg
cltd
jno
mov
mov
mov
nop
hlt
mov
sbb
jo
dec
sbb
test
sub
pop
lret
sub
add
fnstsw
mov
sub
pop
test
pushl
jno
mov
add
mov
mov
mov
repz
sub
out
orl
movsb
in
jnp
imul
loop
inc
cmpsl
jno
dec
adc
imul
and
cmp
and
push
lods
fistpl
decl
fidivrs
fnstenv
inc
aad
mov
sub
and
adc
add
pop
jge
ljmp
mov
ljmp
lock
or
jl
adc
sbb
cltd
lret
pusha
inc
or
addr16
dec
sbbb
mov
loope
in
dec
repz
lahf
ds
xor
add
in
sub
insb
xchg
loopne
adc
adc
xchg
sub
flds
inc
xchg
enter
jae
mov
jl
dec
in
pop
cmpsl
xor
jge
cmp
arpl
add
xor
mov
shrl
in
xchg
inc
cmp
xchg
jb
jne
cwtl
ljmp
mov
cmp
movsb
push
push
sub
xorl
or
addb
mov
movsl
mov
scas
mov
js
mov
add
cltd
mov
or
adc
sbb
mov
mov
dec
std
mov
jne
in
add
ljmp
sbb
jmp
out
stos
aam
cld
and
stos
sbbl
adc
inc
cmp
adc
xchg
test
jge
sub
stc
das
pop
out
addr16
dec
mov
add
cli
push
push
cld
fistpl
loope
mov
sbb
out
icebp
pop
mov
cltd
or
or
test
lret
mov
pop
cld
jl
dec
fstpl
lds
push
mov
testl
sub
jns
lret
sub
js
hlt
xor
lods
and
inc
pop
xlat
dec
add
mov
pop
shll
xchg
mov
outsb
out
mov
les
push
jae
add
scas
test
in
mov
pusha
push
or
icebp
mov
jno
mov
jnp
out
pop
jns
sbb
in
cld
push
mov
dec
stc
sahf
or
divb
sbb
lret
and
xchg
push
cmp
sub
subl
inc
cld
add
scas
push
adc
cld
xor
pop
adc
push
jl
inc
iret
mov
pushf
push
push
mov
cmp
scas
mov
mov
test
xor
rol
addr16
mov
fstp
pushl
lahf
inc
lea
fsubrl
cs
arpl
add
iret
adc
fdivl
push
adc
ficomps
call
data16
xor
out
jp
mov
ljmp
or
sub
wrmsr
fisubs
aas
mov
or
fs
and
sub
cmp
pop
jl
add
mov
arpl
mov
repnz
mov
dec
shr
adc
add
cmp
inc
jmp
out
rol
mov
inc
dec
pop
clc
stos
jo
dec
adc
mov
sub
mov
dec
leave
inc
data16
hlt
or
add
jbe
addr16
cmp
pop
sbb
sub
or
sub
mov
clc
movsl
cmp
js
sub
xor
push
cmpb
in
lahf
mov
xlat
pop
shll
or
and
scas
int
fisubl
or
xor
mov
xchg
or
dec
mov
and
cmpsl
push
aas
das
shlb
in
sahf
decl
mov
test
dec
inc
jbe
imul
loopne
rorl
pop
push
and
pop
xor
enter
xor
cmp
xchg
pop
cwtl
dec
dec
pop
sbb
xchg
sbb
loopne
inc
bound
lea
push
mov
faddl
lret
loopne
inc
insb
es
jno
iret
cmp
cld
andl
scas
das
ucomiss
rclb
rcll
jl
fadds
and
jl
pop
scas
and
inc
icebp
into
clc
addr16
push
xchg
arpl
dec
jl
add
and
scas
dec
and
jecxz
mov
fldln2
int
stc
add
lret
sub
test
insl
dec
xchg
popf
test
mov
xadd
xchg
dec
lret
fwait
out
out
add
fwait
mov
mov
xor
adc
xchg
stc
sbb
cmp
sub
mov
mov
dec
gs
cmp
ret
and
inc
adc
push
xchg
test
icebp
ds
xchg
jae
out
jp
push
pusha
xchg
mov
mov
loop
mov
out
mov
cs
aam
or
in
xchg
imul
imul
add
cltd
xchg
and
fisubl
sub
stos
cmp
xor
cmpsb
cmpsb
rcll
pxor
arpl
scas
ret
mov
cmp
mov
push
jno
pop
imul
xchg
mov
mov
xorl
repnz
nop
or
jno
cmpsl
in
lods
daa
adc
inc
cwtl
aas
push
jge
jge
xchg
inc
pop
movsb
in
pop
cmp
orl
aad
les
push
pop
mov
sbb
gs
neg
fcomp
dec
inc
and
mov
xchg
or
ljmp
ljmp
cmp
jb
push
in
dec
iret
and
mov
test
sbbl
leave
or
sbb
mov
pushf
mov
stos
push
cmp
hlt
out
xor
popf
push
repnz
mov
data16
pop
xor
pop
clc
mov
xlat
icebp
pop
mov
push
pushf
sbb
cmp
cmpsl
inc
inc
mov
push
mov
lret
jmp
test
sbb
mov
add
adc
dec
outsb
loop
cmpsb
sbb
rolb
jecxz
pop
arpl
pop
push
mov
cmp
jns
add
adcb
push
mov
adc
push
push
hlt
clc
icebp
pop
ljmp
in
xor
add
xor
fxam
jecxz
inc
push
in
xchg
pop
mov
jnp
xor
jecxz
adc
jne
add
arpl
dec
addr16
popa
ret
sbb
push
pusha
ljmp
mov
dec
insl
inc
les
jo
adc
jb
data16
loopne
mov
lahf
sub
xor
jp
subb
push
outsl
sub
sarb
in
inc
lods
iret
push
push
jno
leave
subl
push
arpl
xor
dec
sub
pop
add
int
das
mov
push
movsl
out
inc
mov
int
loop
cmp
rorb
test
and
mov
mov
pop
jmp
into
mov
sbb
mov
dec
ljmp
das
ss
xchg
fdivrl
inc
je
push
fcmovnu
fcoms
pusha
cmp
outsb
aaa
or
fs
push
iret
pop
jo
fcomip
cmp
std
and
sbb
cmpsl
es
les
xor
add
imul
insl
mov
xchg
mov
pop
mull
clc
dec
or
lods
hlt
rclb
and
lcall
add
pop
xor
push
xchg
scas
ror
aas
sub
lcall
in
mov
js
cmp
dec
add
aas
roll
xchg
push
fiadds
rcr
or
cwtl
scas
xchg
test
cmpsb
adc
push
and
scas
into
lock
xchg
push
push
jb
iret
push
dec
inc
xlat
mov
hlt
mov
jae
mov
je
dec
mov
fwait
out
leave
mov
jne
inc
cwtl
iret
jbe
rorb
js
aaa
push
inc
arpl
dec
or
rorl
mov
pop
fwait
cmpl
pop
cltd
jne,pn
hlt
fisttpll
cld
pop
adc
push
cmp
fdivl
repz
loop
add
lods
jbe
jnp
iret
ficomps
jge
pop
mov
int
jns
adc
push
pop
inc
adc
fidivrl
sbb
cmp
jne
pusha
cli
rol
jo
cmpsl
daa
cmpb
dec
in
outsl
stos
fdivrs
aaa
mov
stos
mov
imul
js
aam
and
xchg
test
pop
mov
adc
aam
dec
bnd
cmpsl
pop
sbb
in
mov
enter
pop
scas
rolb
jbe
cwtl
xor
jmp
cmpsl
add
mov
push
imul
sub
push
mov
add
nop
dec
add
cmpsl
push
cmp
jo
icebp
inc
adc
xchg
aam
daa
mov
enter
xchg
or
pop
fadds
pop
mov
addb
adc
jb
in
outsl
out
sbb
pop
out
jp
cmp
pop
bound
mov
dec
sbb
jno
outsb
jo
push
enter
shlb
aad
stc
add
mov
fdivl
sbbl
inc
lret
sti
lock
clc
ret
adc
jp
adc
pusha
pusha
push
lods
cs
sti
add
mov
sub
daa
popa
js
call
adc
das
pusha
cmp
mov
dec
xlat
outsb
addl
cmpb
notb
or
jae
mov
sub
pop
arpl
leave
sbb
xor
push
bound
aas
cld
mov
daa
lds
mov
fisttpll
pop
cmpb
data16
aad
scas
cmpsl
ljmp
rdtsc
leave
movsb
xor
mov
in
data16
inc
sbb
or
pop
mov
sbb
mov
cs
or
jne
push
aam
mov
xor
xchg
ja
pop
lea
in
pop
icebp
sbb
aaa
outsb
cmpsb
add
mov
pop
sbb
xlat
push
dec
pop
push
sub
lahf
je
cmpsb
repz
lahf
decb
mov
xor
lds
and
loop
xchg
pop
pop
lock
or
pop
xorb
sahf
inc
cltd
dec
test
int3
cmpsb
mov
scas
inc
js
shr
lret
and
out
xlat
push
frstor
rorl
and
aam
pop
movsl
fbstp
sbb
cmp
outsl
fs
stos
jg
les
iret
add
popf
repz
ljmp
ret
xchg
mov
decb
gs
jg
mov
div
xchg
int3
ret
lock
inc
mov
ljmp
adc
dec
test
movl
out
lea
or
pop
std
loopne
mov
pop
cmpb
lahf
adc
xlat
mov
sbb
sbb
jle
enter
jns
addr16
xchg
iret
push
and
enter
mov
cmp
bound
into
sbb
mov
mov
xor
mov
std
push
ss
data16
ret
adc
xor
ret
push
enter
push
dec
jmp
mov
push
test
popf
cmp
in
jg
jp
jnp
push
xbegin
sti
lock
into
popf
or
xorl
jns
daa
lcall
daa
iret
dec
or
bound
pop
jle
xchg
push
stos
sub
movsl
jns
mov
es
aas
aad
out
out
mov
mov
scas
mov
out
in
int3
je
ljmp
mov
xor
cmpsb
push
arpl
cmc
sarb
cmc
sbb
dec
pop
cmp
mov
aam
fidivs
mov
and
mov
add
pop
xchg
stos
and
cmc
dec
inc
mov
xchg
in
xor
jne
test
enter
push
cld
mov
pop
xchg
std
test
sbb
dec
push
xor
adc
push
in
les
mov
mov
lods
mov
dec
cmp
leave
mov
iret
xchg
jno
sub
mov
in
in
xchg
or
std
jmp
xchg
cli
inc
push
adc
push
inc
jnp
cmp
jno
ss
shl
fisttpl
inc
push
cld
scas
test
mov
adc
outsl
cmp
into
jmp
movsb
bound
mov
cli
je
clc
adc
mov
add
or
loope
imul
sub
andb
push
call
loope
in
lods
dec
mov
loopne
adc
popa
sub
fbld
push
in
cli
iret
jmp
jb
or
mov
icebp
xchg
add
fistpll
in
daa
push
push
cmpsl
sbb
shl
repnz
das
add
nop
call
cmpsl
inc
lods
or
repnz
out
xor
lcall
jmp
lds
cli
sbb
fidivrs
cmp
rclb
iret
xor
in
je
ret
jg
mov
cmp
adc
les
cmp
fistps
bound
inc
or
pop
in
mov
sbb
add
sbb
pop
rcrb
and
and
dec
jg
jb
out
cmpsb
divl
movl
adc
pop
test
enter
add
pop
jl
jb
dec
cmovns
sub
push
mov
sub
mov
inc
pop
test
cmp
mov
out
mov
xchg
mov
mov
jcxz
and
test
mov
and
test
sti
incb
inc
mov
into
cltd
fbld
mov
lret
dec
shl
xor
rcr
cmp
xchg
repnz
std
arpl
bound
cmp
or
jno
jmp
arpl
pop
mov
dec
adc
int3
add
call
jmp
mov
jle
retw
scas
jp
adc
pop
in
stc
add
fs
fnsave
pop
pop
inc
stos
addr16
addr16
test
popa
jge
fldenv
inc
mov
push
lret
inc
sbb
call
cmpsb
jbe
and
icebp
jo
jmp
cs
imul
ficoms
add
and
or
jg
dec
fdivs
adc
and
jnp
bts
insb
or
cmp
cmpsb
daa
bound
mov
or
adc
inc
mov
and
ret
nop
lret
mov
fwait
jmp
push
xor
ret
mov
icebp
cmpb
sahf
push
iret
lods
cmp
stc
jae
je
cmp
sub
mov
xchg
xor
mov
ja
adc
xor
inc
push
sub
cmp
cli
add
mov
sbb
mov
inc
xlat
sbb
inc
js
pop
jae
ror
pop
ss
lea
sub
fstl
or
leave
dec
pop
ja
mov
pop
add
mov
xchg
loop
mov
add
cwtl
test
pop
not
icebp
lods
mov
mov
mov
push
inc
je
inc
lret
cltd
shll
jl
mov
pop
sbb
sub
les
add
adc
ljmp
dec
scas
xchg
xchg
pop
gs
out
inc
pop
int3
cld
jne
xor
movsb
out
pop
fisubrl
push
rolb
mov
rcrl
sub
shlb
test
into
lds
mov
aam
ljmp
xchg
sbb
js
mov
mov
clc
sbb
data16
xchg
pop
insb
jns
jmp
mov
push
mov
imul
push
and
or
outsl
mov
nop
mov
mov
inc
jo
ficomps
cwtl
xor
dec
sub
mov
push
in
or
test
xchg
cmp
lods
mov
in
lods
fmul
fs
mov
das
gs
dec
pop
jo
sahf
jne
mov
test
push
adc
and
jg
mov
jg
xor
out
push
imul
sbb
mov
jns
inc
popf
sub
xor
cmp
inc
stos
insl
js
xchg
iret
dec
add
fisubrs
in
sbb
push
out
jno
mov
mov
or
and
lods
data16
out
jmp
mov
mov
dec
hlt
jmp
test
lods
mov
iret
popa
es
pop
mov
pop
mov
enter
sbb
lret
cmpsb
adc
add
push
and
add
xchg
ficoms
pop
cli
push
push
mov
sub
ljmp
stos
inc
out
xchg
stc
mov
pusha
xchg
mov
movsb
fcmove
pop
xor
push
sub
pop
jne
je
and
insb
ss
adc
mov
or
icebp
xchg
sub
push
xchg
in
mov
mov
lret
dec
popa
jl
sbbb
xchg
dec
push
jno
jb
add
pop
cmpsl
mov
mov
into
mov
imul
enter
pop
insb
adc
pop
pop
mov
xlat
or
ret
push
ja
or
pusha
cs
cmp
lock
push
or
and
and
xor
lds
add
cld
add
je
dec
lock
push
adc
adc
inc
ds
adc
xchg
dec
test
xor
test
push
jb
push
sub
movsl
or
icebp
ret
mov
outsb
icebp
pop
mov
or
shrb
pop
sbb
push
call
xchg
in
add
mov
add
inc
mov
cmp
lods
cmp
sbb
xor
insb
xchg
adc
es
loop
movaps
daa
notl
adc
add
pop
movsl
scas
imul
scas
sub
pop
add
mov
enter
fldl2t
jp
fiaddl
xchg
pop
push
lods
mov
and
pop
push
jo
inc
add
iret
push
xor
inc
mov
lret
nop
or
or
jns
sahf
js
int
adc
dec
mov
and
cmc
stos
pop
mov
mov
sbb
mov
pop
mov
repz
movsl
xchg
cmp
bound
push
ret
dec
aam
repz
xorb
in
pop
nop
jg,pt
in
push
fisttps
stc
call
or
mov
fs
cli
cwtl
es
pop
ret
inc
lret
mov
xchg
arpl
aaa
mov
or
xor
insb
loope
out
clc
inc
test
inc
add
fmuls
dec
jp
inc
fcmovbe
loope
pop
icebp
rol
pop
mov
cltd
or
sub
xchg
adc
jns
adc
push
xchg
cs
and
xor
sub
rolb
cmpsb
push
mov
adc
jg
pop
push
in
mov
jle
jb
scas
neg
lds
outsb
mov
lret
pop
or
subb
xchg
dec
out
cld
adc
jg
sbb
pop
rol
xchg
push
in
out
movsl
cmp
pop
mov
clc
jns
inc
mov
push
mov
push
jl
push
push
add
push
jge
cltd
sub
pop
push
push
stc
dec
lods
fstl
andl
push
xor
cmp
mov
pop
sbb
jne
dec
arpl
arpl
jbe
push
icebp
mov
inc
rorb
or
mov
out
sti
pop
add
mov
push
sub
std
les
lea
clc
xchg
cld
cli
sbb
and
lret
cs
mov
jbe
call
and
enter
jg
in
xor
addb
or
cmp
mov
jbe
arpl
iret
daa
cmp
and
jb
out
mov
inc
push
imul
sbb
mov
ss
in
add
mov
dec
subb
nop
movsl
sbb
xor
ret
mov
sahf
sarl
cltd
icebp
mov
fldenv
bound
sti
leave
int
xchg
mov
lahf
cmp
jecxz
or
mov
fwait
pusha
fnsave
mov
dec
sahf
jge
lret
mov
shl
stos
insl
arpl
pop
adc
pop
mov
jo
cmc
mov
roll
inc
fcomip
sahf
insl
fldcw
mov
jo
add
adc
fsubl
nop
ja
dec
push
gs
sbb
int3
xchg
xchg
daa
mov
lock
sbb
adc
add
fbstp
sub
xchg
xorb
aad
xchg
lock
adc
inc
fcmovu
push
mov
cmp
outsb
xchg
inc
and
fsub
push
mov
imul
dec
push
imul
inc
loopne
xor
add
in
xor
jae
call
ffree
fcompl
pop
inc
pop
cmp
test
rcrb
in
addr16
dec
sub
mov
add
cli
inc
shl
add
cmp
push
jno
repz
fisttpll
arpl
lret
cmp
jnp
cmc
insl
sub
repz
jmp
rolb
movsb
jmp
jmp
ret
inc
add
sub
or
int
and
xorb
jno
fcmovnbe
mov
movsb
lret
pop
in
pop
int
push
xchg
out
xchg
in
lahf
pop
mov
into
lahf
xor
and
jge
inc
mov
loope
aaa
ja
pusha
call
jge
or
inc
dec
js
xchg
jmp
clc
stos
das
js
ds
adc
mov
pop
sahf
and
inc
push
in
dec
insb
jle
mov
es
pop
lahf
cmp
sub
gs
outsl
xor
lods
mov
push
cwtl
push
loope
ss
fsubl
pusha
iret
add
mov
and
aas
push
xchg
mov
inc
dec
mov
leave
cmp
push
aam
dec
cld
pop
sarb
pop
or
sub
push
leave
mov
leave
je
mov
ret
dec
negl
out
jbe
subl
adc
or
push
push
add
ficoms
jo
add
nop
lcall
test
clc
sahf
jnp
int
ljmp
aaa
stos
inc
fdivrp
insb
inc
test
jb
test
ljmp
mov
xor
sub
add
fwait
jno
sti
push
arpl
mov
sub
rcl
aas
add
pusha
mov
fmuls
pushf
cmp
inc
scas
incb
lock
loop
rcr
ljmp
mov
sub
or
or
sub
in
dec
call
aaa
sub
jecxz
je
js
outsl
fldt
inc
adc
loopne
pushf
arpl
mov
cmp
sub
iret
frstor
pop
jp
jg
sbb
sub
or
pop
fadds
repnz
jbe
xchg
or
xor
imul
stos
testb
addr16
sarb
mov
push
xor
pop
push
stos
fstp
pop
xchg
push
cld
or
push
and
sbb
jg
or
and
adc
pop
dec
ret
add
push
jmp
dec
cmpsb
pop
aad
mov
outsb
aad
xchg
xchg
sbb
aas
das
inc
fcompl
ret
adc
xor
out
popl
add
lcall
stos
xchg
sub
pop
daa
inc
cmpsb
cmp
sarb
rol
or
push
aaa
je
insb
sbb
xlat
outsl
lds
push
mov
pop
xor
ficomps
dec
je
add
ljmp
movsb
movsl
orl
lret
push
test
fstl
arpl
inc
mov
push
sarl
pop
pop
fldenv
cmovno
jmp
mov
lods
fwait
push
jnp
adc
sbb
jns
push
cwtl
shl
jno
cmp
insl
lock
pusha
jbe
test
fwait
mov
sbb
jge
orb
cwtl
sarl
sarb
mov
dec
and
push
push
icebp
jp
inc
daa
mov
lret
add
mov
sbb
stc
xchg
insl
popa
mov
push
ljmp
stc
fists
adc
push
in
shll
sbb
cwtl
lock
fbld
incl
aaa
ret
fwait
push
jae
roll
outsb
and
pop
jge
mov
shl
cwtl
lret
or
out
test
mov
iret
xor
dec
std
and
xlat
dec
lods
das
arpl
pop
fists
mov
adc
sub
dec
out
lds
mov
lahf
out
enter
arpl
xchg
test
clc
dec
dec
cmp
push
push
push
pop
push
out
sti
lds
leave
lods
push
push
cmc
or
push
push
push
shld
add
aad
mov
xor
ljmp
icebp
xchg
pop
jg
push
lods
push
jg
fcmovnu
in
dec
pop
adc
jle
sarb
daa
cmp
sti
dec
or
cmp
adc
in
sahf
subl
cmp
sti
ficompl
adc
and
xlat
mov
pop
sub
push
dec
push
mov
sbb
loopne
mov
xor
out
push
popa
mov
in
pop
pop
test
mov
ljmp
xchg
and
mov
sbb
push
cs
das
inc
lahf
fisubl
sarb
imul
sahf
fst
lret
test
cmp
rorl
iret
aad
cmpsb
cli
add
sbb
mov
mov
adc
call
xchg
cmp
mov
sbb
icebp
stc
ja
adc
leave
out
dec
enter
outsl
adc
in
testb
lahf
insl
lret
cli
out
mov
lea
inc
popa
and
push
repnz
inc
mov
sahf
xor
mov
mov
in
mov
cs
idivl
ljmp
es
and
lods
stos
push
ud2
lods
or
mov
test
mov
insl
je
cmp
test
xchg
mov
mov
xchg
and
lods
inc
aam
shl
or
xchg
dec
lock
sbb
mov
pushf
sbb
xor
mov
inc
xchg
stos
sub
rorl
outsl
repz
jp
add
dec
adcl
inc
outsl
outsb
mov
jnp
xchg
adc
lock
fldcw
nop
in
js
icebp
out
or
mov
jnp
mov
jnp
jnp
sub
ficomps
in
test
mov
scas
inc
jo
mov
test
and
outsb
sub
nop
fstps
jmp
popf
cmp
and
fwait
cs
in
dec
jae
lcall
sbb
mov
xchg
adc
pop
arpl
xlat
add
nop
enter
cmpsb
sbb
sbbb
lcall
cltd
sti
mov
sub
sub
imul
jne
outsb
mov
mov
aaa
sub
fstl
cmpsl
inc
xchg
mov
and
push
xor
popw
mov
jmp
or
dec
test
cmp
idivb
jno
fs
in
sub
shll
lcall
fs
xor
dec
cmpb
jb
mov
scas
inc
pop
push
movsb
out
mov
scas
pop
xchg
push
jnp
shrb
pop
cmp
insb
pop
pushf
scas
fwait
les
add
pop
fadd
aad
cli
sbb
jae
mov
adc
mov
xchg
inc
imulb
sbb
inc
jbe
xchg
lcall
pop
add
clc
mov
sbb
inc
insb
data16
mov
mov
add
aad
fs
adc
push
push
call
dec
das
ret
xor
jle
push
cltd
mov
rolb
mov
mov
xchg
cmovne
push
sbb
aaa
add
jecxz
adc
das
outsl
loopne
in
or
out
add
mov
fiadds
movsb
sbb
adc
aas
xor
add
pop
adc
sub
inc
pusha
xchg
mov
not
testl
pop
sub
jae
in
xchg
fnstsw
dec
inc
into
sub
vshufps
fcoml
pusha
ljmp
pop
adc
dec
cmp
push
out
and
adc
push
xchg
mov
xchg
mov
xchg
mov
sub
js
and
mov
bound
shlb
and
inc
cltd
jge
mov
shl
add
filds
adc
nop
mov
add
out
push
addr16
fistps
mov
sub
movsb
icebp
aas
xor
jne
or
cmp
inc
sbb
jp
mov
xorl
ret
test
pop
cs
shll
push
inc
movsb
cli
xchg
insl
and
sbb
push
stc
inc
lea
rolb
jg
pop
lea
aas
test
movsb
test
cmpb
cld
pop
push
push
inc
in
xchg
rorl
cmp
and
icebp
in
sub
fstps
fildl
popa
loopne
in
insl
cwtl
mov
xor
addb
add
dec
cmpsl
out
push
movsl
mulb
push
cli
movsl
jo
xchg
or
cmp
into
or
sub
mov
jecxz
cmp
fdivs
testl
xchg
outsb
xorb
fs
adc
out
imul
add
cmp
lcall
rcl
les
int
pop
or
jnp
mov
sbb
gs
scas
je
inc
mov
mov
sub
fadd
das
adc
outsl
or
enter
pop
inc
sub
repz
dec
dec
push
test
ds
add
mov
out
push
ja
test
xchg
add
mov
mov
sub
add
jne
shl
stos
sub
lock
in
ficoms
inc
mov
adc
nop
pop
outsb
out
xor
xorl
xchg
mov
adc
or
rclb
xchg
jns
cltd
shlb
pop
shll
pop
movsb
imul
cld
movsb
stos
lret
cmc
outsb
cltd
mov
divl
cwtl
lock
push
outsl
inc
mov
gs
push
std
and
popa
jo
int3
cli
dec
add
in
inc
frstpm(287
clc
sbb
cmp
ljmp
pop
xor
xchg
sbb
dec
and
addr16
cmp
rorb
sar
repnz
out
shr
inc
shr
in
pop
inc
jae
xor
lods
mov
inc
sbb
movaps
into
pop
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
mov
pop
bound
mov
push
pop
popa
jl
rep
cmp
xor
out
dec
nop
lock
sbb
pop
dec
icebp
sbb
out
mov
ret
sahf
mov
ret
stos
jb
in
pushf
push
and
jns
andb
or
sarl
in
sub
insb
jecxz
popf
test
sbb
xor
mov
xor
add
sbb
lahf
pop
shlb
push
jecxz
imul
dec
mov
scas
stos
cwtl
add
cmp
mov
test
jmp
pushl
dec
popa
fiadds
pop
mov
xor
fists
mov
bnd
cltd
xchg
inc
leave
sbb
imul
dec
xchg
pushf
adc
lock
icebp
repnz
lret
or
sub
les
loopne
mov
jg
xor
xchg
cmp
fstp
cmp
es
xchg
pop
sub
test
std
gs
push
pop
daa
sub
icebp
sbb
add
cli
in
sub
iret
push
fidivrl
aas
jbe
fdivr
xor
pop
stc
jecxz
or
cwtl
jnp
aaa
jge
cmp
loop
stc
frstor
jno
shrb
jle
mov
fisttps
mov
js
sub
mov
mov
adc
adcl
mov
inc
pop
out
ljmp
out
cmpsb
fcoml
scas
cmpb
scas
xchg
mov
pop
ss
adcl
sub
adc
xchg
push
rcll
mov
out
adc
jnp
shrl
add
mov
cmp
pop
ja
popa
or
sub
inc
and
pushf
fnstenv
pop
popf
pop
and
cmpsl
mov
shlb
add
test
nop
inc
inc
outsb
xlat
or
pop
mov
into
push
push
stc
fs
and
xchg
xchg
pop
mov
push
jbe
xchg
dec
movsl
xchg
inc
and
cmp
shrb
jo
lods
imul
mov
lods
fisttpll
repz
lock
int
push
xlat
addb
sbb
jmp
xchg
popf
popa
cli
fcoms
pop
sahf
in
ljmp
sub
mov
mov
mov
es
adc
roll
pop
inc
adc
jbe
xchg
ds
mov
scas
xchg
stc
out
adc
mov
cmp
cmp
jge
and
push
jno
rcll
mov
xchg
rclb
cmpsl
outsl
repnz
in
jmp
pop
xchg
inc
stos
push
inc
fisubrl
js
rcll
jle
xchg
push
sub
pop
push
shrb
test
dec
xchg
daa
lahf
leave
pop
and
jge
dec
es
cmp
mov
xchg
aad
out
pop
sub
push
pop
fucomp
cmp
icebp
js
stos
mov
jno
out
fsubs
xchg
xchg
out
adc
sti
xor
push
loop
sti
test
add
lret
jle
orl
pop
movsl
mov
addr16
mov
adc
pop
xchg
push
mov
rcrb
rolb
xor
popa
testl
mov
lods
into
sbb
dec
lcall
jl
mov
out
inc
ds
xchg
in
iret
daa
in
pushf
ja
cmpsl
mov
cmc
jns
pop
punpckhbw
in
addb
std
mov
roll
mov
lret
sub
jo
fmul
movlps
movsl
cli
sarl
xchg
and
cmp
testb
pop
shlb
les
movsb
std
fistpl
out
ljmp
jecxz
movsb
pop
int
jg
jae
xor
cmp
sbb
loope
mov
dec
xchg
stc
and
pop
adc
push
push
pop
sub
out
lcall
push
imull
xchg
addr16
lods
ds
add
mov
xlat
insb
jae
repnz
insl
test
test
stos
sbb
fcomps
pop
mov
fucomp
dec
popa
mov
icebp
pop
adc
cmpsb
xchg
adc
sub
cmc
mov
sub
in
sbb
xchg
mov
int
xchg
cs
add
push
loop
dec
loope
ja
or
test
xlat
fs
cs
gs
arpl
pop
mov
xchg
test
jno
outsb
jg
dec
pop
mov
iret
jb
mov
fs
cmpsb
inc
in
lea
xchg
push
adc
and
in
mov
mov
rcll
je
xor
push
sbb
lock
fdivrl
cmpsl
loope
idiv
mov
leave
popa
rcl
push
jbe
pop
push
mov
adc
call
adc
mov
inc
loop
int
mov
mov
mov
pushf
xlat
mov
movsb
divl
mov
in
cmp
and
adc
inc
sbb
mov
sarb
fsub
lret
and
dec
cmp
pushf
push
cwtl
out
push
xchg
mov
xor
jge
or
es
pop
lahf
roll
mov
inc
pusha
push
xor
aad
inc
into
outsl
push
out
inc
mov
push
inc
push
je
cli
mov
loope
jb
fistl
cmp
movsb
inc
mov
popf
adc
jge
and
mov
not
mov
repnz
cltd
push
mov
movsl
sub
pop
aam
and
xchg
push
xor
movsb
dec
enter
shlb
mov
mov
test
or
or
mov
shll
adc
pop
ret
mov
inc
push
xchg
or
xchg
loope
ja
lock
add
shll
xor
pop
dec
dec
inc
cmp
cmp
adc
add
sarl
inc
inc
imul
int
jne
int
loope
mov
mov
mov
pop
pop
fdivrl
lcall
cld
and
xchg
mov
push
mov
dec
mov
in
stc
mov
sbb
xor
push
xor
mov
mov
add
jne
jmp
les
push
mov
insl
add
pop
xchg
lcall
sahf
rorb
pushf
xorl
iret
lret
push
jnp
xchg
jno
mov
movsl
or
outsl
xchg
rcrl
cli
push
inc
jae
mov
aam
mov
fmulp
add
pop
jns
cmp
mov
mov
outsb
lods
jns
shrb
mov
pushf
dec
mov
mov
jecxz
mov
frndint
sub
mov
sub
sbb
out
popf
aad
lea
inc
fdivrp
fidivl
xor
lds
outsl
lea
mov
nop
xchg
sbb
and
bound
mov
dec
dec
mov
aaa
outsl
in
stos
std
pop
imul
iret
mov
je
andl
or
push
xchg
adc
pop
pop
mov
sub
pop
lcall
mov
movsb
jno
and
mov
pop
and
loopne
cmc
in
sbb
fwait
jp
xor
ss
jbe
add
mov
mov
insb
sbb
push
mov
mov
or
cltd
int
cwtl
pusha
in
mov
inc
std
or
ljmp
int3
cmc
dec
push
cld
mov
test
add
add
in
ficoms
push
in
mul
push
hlt
insl
lock
les
pop
and
sbb
hlt
jl
push
int
rcr
test
in
negl
je
sbb
inc
mov
addr16
mov
and
ljmp
pop
cmp
mov
shlb
add
mov
sub
cwtl
jmp
and
testl
fsubrs
pop
in
pop
lcall
je
jge
mov
loopne
lcall
lcall
inc
push
leave
mov
mov
cmp
mov
xchg
fisttpll
pop
xor
insb
sar
movsl
enter
or
mov
mov
in
aam
adc
xchg
xchg
outsl
mov
dec
outsl
js
outsb
lods
sbbl
lds
xchg
fxam
and
ret
mov
sbb
push
mov
das
daa
dec
das
jnp
icebp
inc
mov
test
or
frstor
sbb
inc
repz
cmp
inc
cmp
adc
je
flds
outsl
test
cmp
rorl
cli
inc
adc
pop
push
inc
scas
imul
sbbl
gs
insl
leave
fistps
or
sbb
add
cmc
paddq
enter
push
sarb
outsb
ss
test
mov
mov
cmp
cwtl
loop
adc
xchg
inc
das
fxch
pusha
xorl
icebp
mov
xchg
in
inc
pop
dec
mov
fwait
push
mov
push
scas
xchg
arpl
fidivs
test
jne
cmp
and
cs
sub
int
jecxz
cld
ja
and
insw
push
imul
rcrb
jns
sarl
dec
sahf
inc
push
mov
and
iret
pop
ljmp
mov
sub
int
or
and
test
cmp
and
and
mov
jb
inc
fwait
push
aad
mov
push
mov
ds
jb
push
movsb
cmp
inc
loope
insl
xchg
iret
rcll
dec
les
cwtl
add
out
das
fstpl
dec
inc
push
push
add
movsb
ffreep
div
arpl
push
push
popa
inc
jle
fsubrl
movsb
jecxz
movb
aas
add
ficoms
repnz
adc
cmc
and
dec
mov
fiaddl
inc
fsubl
movsb
repz
jl
scas
lods
push
int
loope
cltd
add
push
mov
adc
push
mov
cli
pop
xchg
xchg
push
jnp
jle
xor
int3
stos
sbb
xchg
push
rcll
loope
inc
dec
test
data16
in
dec
in
fstps
sub
lret
pushf
mov
mov
in
sub
sarb
jge
jg
lret
pop
xor
cmp
jns
xchg
dec
adc
or
jnp
lret
test
mov
fisttpl
and
cltd
mov
pop
call
pusha
aaa
cmp
push
movsl
xor
fiaddl
popa
iret
fdivrs
out
sti
or
mov
cmp
sub
frstor
lcall
mov
test
xchg
mov
xor
mov
pop
mov
imul
inc
cmp
out
jmp
int3
arpl
icebp
mov
pop
push
out
cmp
test
imul
or
aaa
mov
sub
dec
xchg
add
fs
ret
xchg
es
and
pop
mov
pop
lahf
push
mov
rolb
pop
mov
and
xlat
into
cmc
shlb
mov
sbb
and
int
out
inc
mov
inc
push
push
scas
hlt
enter
mov
in
out
pop
or
and
loopne
inc
mov
lods
jne
mov
arpl
out
mov
test
cmp
pop
ret
imul
sbbb
mov
cmpsb
and
jb
ja
subl
mov
outsl
mov
mov
aad
fstl
or
xchg
mov
out
or
nopl
movsl
pop
sbb
dec
lahf
or
sub
sbb
and
movl
call
mov
mov
ljmp
jl
popl
or
aaa
rclb
orl
ljmp
dec
xor
test
repz
outsl
in
cmpsb
mov
ret
or
icebp
sub
leave
rolb
mov
adc
addr16
add
movsb
or
mov
ret
imul
stc
add
das
leave
fs
lret
jmp
sqrtps
addr16
loopnew
dec
mov
repz
sub
add
dec
cmc
sbb
jbe
icebp
jmp
aam
rol
enter
or
loopne
xorl
out
fcomi
mov
cs
sub
pusha
jno
pop
sbb
inc
cmp
sbb
push
out
mov
fisttps
insb
iret
or
out
and
push
negb
jl
sbb
cmpb
lret
mov
mov
add
jno
xor
outsl
fld
xchg
or
rcl
push
and
fadds
scas
inc
jg
ss
adc
mov
lods
mov
add
lret
pop
lret
jle
sbb
into
notb
sbb
cmpb
sti
and
inc
mov
mov
mov
jo
inc
xor
arpl
scas
ret
inc
scas
or
fistps
xchg
sarb
outsl
mov
dec
out
cmp
and
lea
pop
jecxz
arpl
insb
ljmp
in
test
repz
pop
fldcw
fstpt
iret
xor
loope
ret
push
sbb
incl
rorb
aas
lret
js
movsl
sub
add
scas
lcall
xor
maskmovq
idivl
clc
sbb
pop
insl
pop
cmp
test
push
in
in
test
fsubrl
and
jg
dec
adc
popf
fildll
and
hlt
xlat
test
pushf
sbb
fisttpl
jbe
mov
mov
orb
mov
cmc
jle
shr
or
ds
jmp
js
jmp
sub
pop
cmp
lcall
shll
push
pop
or
ss
and
adc
or
lods
jnp
jp
xchg
lods
ja
std
inc
dec
shll
hlt
lret
dec
scas
outsb
ja
ret
inc
int
test
outsl
inc
or
lret
lods
jg
jmp
enter
pop
arpl
or
or
push
repnz
cmp
push
push
or
cli
out
cmp
call
lods
push
rclb
ficoml
add
mov
mov
lds
and
leave
or
push
arpl
loope
daa
inc
add
adc
lea
fwait
iret
in
es
push
cli
in
popf
dec
fdivr
xchg
jp
ror
or
xchg
in
jb
pop
sbb
mov
sub
sub
and
or
addr16
dec
and
pop
dec
sbb
sahf
fsub
bound
add
adc
adc
ret
stos
call
push
fwait
mov
scas
sahf
loop
sbb
mov
jae
data16
test
mov
pusha
in
fisubs
enter
xchg
dec
push
jb
enter
fs
rcll
shrl
sbb
int3
fdivl
test
insl
pop
add
gs
das
lret
sbb
sub
rcll
fsubs
daa
shrb
or
cmp
jmp
aad
imul
mov
fiaddl
ss
es
test
add
mov
into
cmc
xchg
das
xor
stos
outsl
shr
xor
andb
sbb
mov
mov
and
sbb
mov
mov
xchg
pushf
sbb
or
daa
push
bound
sbb
inc
xchg
and
mov
push
push
xor
rcrb
hlt
push
in
ja
push
mov
pop
mov
push
mov
cmpsl
mov
push
insl
jge
pusha
pop
adc
movsb
cmc
fnstsw
pusha
dec
sbbb
mov
fsts
and
mov
mov
mov
jo
loop
xor
cmpsl
push
lcall
xchg
fistl
sbb
outsb
movsl
jb
fstpt
in
dec
cmpsl
out
push
pusha
add
stos
test
pop
inc
adc
add
xor
fisubrl
cli
insl
fisubl
mov
in
rorb
dec
jo
lea
pop
and
xor
insb
hlt
mull
test
inc
pop
dec
and
cld
movsl
fstps
push
pop
rdpmc
xchg
scas
pop
fwait
cwtl
jecxz
push
out
imul
sbb
mov
gs
sbb
ds
xchg
jbe
fisttpl
leave
add
xchg
in
dec
dec
inc
cmp
sahf
inc
or
push
lcall
mov
lods
inc
rclb
mov
in
movsw
xchg
inc
andl
test
xlat
outsl
sub
xchg
ja
mov
dec
xchg
xor
and
je
dec
rolb
mov
xchg
fmul
mov
xchg
xor
mov
mov
and
sbb
les
mov
xor
loop
in
cmp
stc
and
sub
jb
bound
in
or
mov
and
inc
xor
jmp
rclb
fsts
fs
lds
out
cmpsl
aas
testl
fbstp
mov
shll
popf
mov
xchg
hlt
jne
lcall
inc
and
arpl
xchg
ja
fucomp
popf
das
stos
push
std
mov
in
inc
sbb
cwtl
cmp
jb
sti
scas
dec
cld
adc
lods
loop
stos
loope
imul
push
pop
adc
repz
cli
bound
lds
dec
pop
call
fcmovnb
loopne
push
loopne
bnd
inc
sahf
cmp
add
leave
into
fcomip
and
popa
and
setbe
jecxz
sub
arpl
ljmp
insl
push
jg
xchg
adc
mov
mov
lds
sarb
cwtl
lods
addr16
pop
orb
add
mov
dec
call
sbb
out
mov
outsl
add
sbb
fcmovu
mov
aaa
sbb
cmp
xorb
inc
dec
mov
or
and
pusha
inc
dec
stc
sub
les
pop
mov
sub
xchg
pop
aam
outsl
das
js
adcl
in
cs
stos
mov
inc
or
cltd
sbb
xchg
or
std
cwtl
les
andb
or
sub
cmc
push
int
dec
or
dec
int3
mov
xor
pop
mov
pop
dec
aam
cmp
mov
clc
lods
sub
sbb
cmp
push
into
insb
push
clc
addr16
pop
out
push
xchg
jno
dec
mov
lcall
mov
ja
lds
aad
inc
jecxz
or
ror
test
push
nop
cmp
mov
sbb
pop
push
xor
clc
adc
mov
dec
insb
roll
sub
inc
outsb
aad
xor
add
loopne
sub
dec
sbb
int
or
inc
pop
dec
fbld
addb
jae
mov
sahf
adc
addr16
and
mov
ljmp
push
fdivrl
cmpb
pusha
imul
ret
sub
push
in
pop
ljmp
sub
in
lods
outsb
scas
notl
mov
lret
dec
fiaddl
data16
mov
popf
mov
xor
inc
push
adc
lret
sbb
lret
in
sbb
dec
mov
cmp
mov
push
in
sub
decb
mov
inc
ss
out
dec
in
dec
movsl
adc
out
or
ret
js
out
xor
shrb
push
mov
or
mov
gs
jge
or
mulb
iret
mov
pop
jg
jbe
rcrb
mov
in
cmp
inc
xchg
dec
adc
mov
lret
shll
or
pop
scas
lock
in
mov
lcall
shlb
mov
les
jge
jecxz
inc
inc
inc
jae
add
add
insb
js
lods
call
cltd
scas
rorl
scas
push
clc
cmpl
pusha
leave
mov
out
aaa
mov
jmp
and
divb
into
in
lea
pushf
es
mov
fxch
cmp
hlt
dec
xor
inc
mov
mov
sub
pushf
xchg
cmc
nop
nop
sub
pop
stos
lcall
mov
sbb
sbbl
hlt
pop
mov
cmp
cmp
adc
mov
adc
sub
cmpsb
jnp
mov
jbe
fwait
cltd
sbb
mov
inc
stos
mov
xchg
cmp
fprem1
cld
ljmp
xchg
in
mov
jg
dec
mov
jnp
cmc
add
imul
out
jo
inc
and
negb
xchg
mov
enter
mov
inc
mov
push
shlb
shll
cmpsb
cwtl
roll
sub
jne
jae
adc
in
out
xchg
test
cmpsl
xchg
movsl
fisttpl
or
aas
mov
orb
mov
inc
adc
imul
xchg
dec
outsw
sbb
pusha
and
jo
dec
dec
sbb
jae
cwtl
jle
push
add
sti
mov
filds
fisubs
inc
in
lret
popa
jmp
rol
popf
popa
add
ja
inc
in
xchg
xchg
or
ja
fisubrl
int
call
emms
jge
jne
jmp
and
ja
sarb
pop
xchg
xchg
mov
pop
icebp
inc
xor
pop
arpl
xchg
shlb
lret
dec
or
sub
and
mov
dec
cmpsb
jo
dec
sbb
mov
out
aad
enter
test
mov
push
adc
test
sbb
sbb
sbb
cmp
mov
jecxz
inc
adc
bound
xchg
dec
push
mov
outsl
cmp
dec
not
mov
aaa
pusha
mov
insl
inc
pop
jecxz
jbe
cwtl
or
hlt
enter
bound
pop
cmp
cmpsl
push
mov
fadd
lock
clc
lock
in
sub
cmp
orl
xchg
fmull
xor
xor
push
adc
into
sub
leave
cmp
xor
pop
leave
mov
and
cmpsl
loopne
xor
mov
or
lods
mov
jecxz
inc
jae
mov
or
pop
test
lahf
jnp
aad
and
popf
int
outsl
fnstenv
pop
fists
sbb
adc
std
inc
scas
in
fldt
shr
mov
mov
test
inc
sahf
movsl
mov
sub
mov
pop
adcb
lds
vmovaps
rorb
cmp
adc
in
and
leave
pop
dec
rol
ret
sub
pop
cmpsl
jecxz
or
push
sbb
xor
jmp
call
adc
fadd
sbb
stc
add
mov
xor
add
call
call
out
jne
jg
and
mov
mov
es
pop
cld
int3
add
insb
sub
test
test
sub
inc
push
cwtl
mov
mul
cmc
daa
outsl
jmp
fxch
mov
loopne
push
mov
sahf
xchg
adcl
cmp
int
aam
popf
xchg
sarb
cld
xor
jae
insl
mov
test
int3
in
mov
pop
xchg
adc
xchg
loope
ret
jg
mov
sbbb
xchg
or
out
fistl
outsb
jae
xor
negl
orl
sbb
cmp
enter
shr
ljmp
mov
or
inc
push
cmpsl
in
in
divb
cmp
sbb
scas
cld
stos
lea
lret
daa
add
lea
sti
jmp
fildll
sub
lret
in
inc
adc
scas
lret
aaa
out
sbb
repnz
dec
inc
aas
push
xchg
fwait
sbb
sbb
push
inc
adc
mov
mov
dec
jp
dec
mov
cmp
scas
xchg
lret
lahf
shlb
jno
cs
imul
pusha
int
or
fisubrs
jae
lods
lcall
push
ret
or
inc
add
xor
adc
add
bound
js
aaa
rolb
cmpsl
xor
push
cwtl
xchg
inc
pop
pop
daa
cwtl
sub
xchg
push
jle
push
movsb
inc
testl
xor
xchg
mov
sti
sub
add
dec
test
xlat
gs
dec
enter
or
das
scas
std
lret
mov
paddd
stc
clc
and
push
jbe
mov
gs
testb
inc
loopne
sbb
mov
insb
aad
jge
or
es
enter
sahf
imul
clc
dec
adc
movzwl
lds
pop
mov
jmp
rcll
push
cltd
mov
add
mov
movsl
dec
cmpsb
jle
cmp
adc
call
int
mov
sti
cmpsb
mov
sbb
add
sbb
cmp
mov
mov
and
jmp
lods
and
dec
ret
sbb
loopne
movsb
int3
adc
pop
ret
and
jbe
pop
mov
push
cs
xchg
lods
mov
push
cmp
jmp
mov
mov
pop
mov
xchg
cmp
push
sbb
cmp
stos
mov
idivl
mov
adc
add
pop
je
inc
pop
mov
imul
hlt
test
pop
sbb
xchg
lahf
insl
mov
movsl
cs
pop
addb
in
repnz
mov
mov
out
out
ret
lock
dec
inc
outsb
mov
pop
xchg
in
fists
int3
es
imul
mov
mov
loope
aas
popa
mov
mov
ja
mov
sbb
sahf
xchg
insl
sbb
mov
and
les
rcl
push
in
bound
sbb
call
dec
pop
movsb
inc
test
pop
jae
sub
movsw
lods
pushf
notl
movsl
mov
cmp
sbb
pop
insb
je
scas
popf
lods
imul
cmp
sub
and
insl
push
adc
and
mov
in
lret
xchg
mov
sahf
adc
out
js
lock
xor
je
xor
stos
jae
fldcw
inc
cmpsb
rorb
inc
filds
xchg
pop
stc
loop
jp
repz
lret
xor
mov
cmp
out
scas
loope
es
fadd
pop
pcmpeqw
shr
sub
mov
aaa
lret
sahf
arpl
xor
adc
hlt
xchg
mov
pop
cmp
movsl
stc
jl
and
jno
inc
pusha
movsb
push
leave
pop
fstpl
push
aas
adc
movl
cmpsl
add
jne
and
in
jo
lret
push
sbb
pop
ljmp
lds
rcrl
scas
dec
jno
jb
aaa
jg
cli
std
or
repz
fildll
push
gs
push
ljmp
dec
jns
loope,pn
and
cmc
std
in
ds
jmp
or
mov
pop
pop
cmpsb
fs
sbb
xchg
or
fucomip
cmc
stc
push
cmovnp
jecxz
xchg
or
movsl
enter
xchg
mov
pop
movsb
jb
jb
imul
or
dec
mov
popa
and
fs
jnp
push
mov
and
cmpsl
or
cmpsb
sub
les
push
scas
hlt
dec
xchg
jge
out
and
int3
jb
shll
jle
pop
clc
jecxz
xor
xor
icebp
mov
adc
xor
fcompl
cltd
call
mov
adc
xor
test
ret
imul
cltd
cmpl
or
jnp
popf
les
dec
xchg
push
daa
mov
popa
xchg
jae
pusha
jae
sub
into
jmp
int3
cmp
xchg
repz
cmp
das
repnz
jmp
jae
outsb
cwtl
lret
ret
jp
rol
jl
rcrl
add
cmc
enter
or
in
fdivrp
or
daa
push
cli
aas
xchg
loope
dec
sub
mov
cmp
cmp
add
icebp
jle
inc
in
cmp
in
data16
mov
jae
aas
movsb
mov
add
lret
call
cmp
push
push
dec
mov
push
hlt
sahf
mov
cmp
pusha
pop
in
mov
in
andl
rolb
scas
lcall
pusha
addb
pop
inc
inc
push
jb
fcoml
shrb
xor
lret
inc
sub
into
scas
clc
jle
push
xchg
sub
and
mov
enter
and
les
jb
loope
pop
push
mov
ret
and
dec
and
imul
or
into
jo
int
push
mov
bound
lcall
mov
or
cmp
out
pop
xchg
cmp
call
mov
push
std
inc
movsb
scas
sbb
shlb
cmp
cmpsb
fbstp
mov
sbb
mov
jle
pushf
mov
loope
cmp
mov
dec
fcom
sbb
dec
and
push
pop
mov
mov
push
mov
push
bound
imul
lea
fnstenv
fmul
and
cld
out
subb
rorl
hlt
cmp
jecxz
adc
pop
icebp
mov
or
lahf
bnd
xor
mov
icebp
and
aad
or
sarb
pushf
imul
lods
scas
cmp
dec
cmc
jno
mov
jmp
and
pop
ja
nop
and
pusha
fildll
cmp
bound
sbb
int
shr
xchg
push
out
xchg
call
dec
xchg
hlt
test
in
push
pusha
sub
jb,pn
cli
aas
push
notb
xor
adc
adc
jmp
in
xchg
jno
push
push
mov
inc
inc
xchg
into
test
pop
and
jb
xchg
cmpsb
jns
inc
cld
push
jns
sub
and
addr16
and
int
xor
aad
inc
aas
push
cmp
loop
dec
addl
pop
popf
xorl
sub
xchg
or
mov
mov
fs
dec
enter
jecxz
add
or
es
psrlw
and
fwait
fistpl
jmp
sbb
mov
add
push
test
mov
pop
nop
dec
ret
sahf
test
rcrb
xchg
fiaddl
dec
or
xchg
fidivs
mov
adc
inc
mov
cmpsl
push
repz
mov
mov
insl
or
xlat
xchg
jns
jmp
inc
add
enter
pop
dec
ja
jl
pop
sbb
xor
xor
cmpsb
dec
push
push
pusha
je
movsl
sub
mov
mov
gs
sub
aas
mov
mov
ds
xchg
mov
add
or
in
mov
pop
and
int
shlb
fsts
ljmp
add
jns
iret
movsl
xor
nop
mov
cli
dec
cmpsb
mov
out
pop
sti
add
test
sub
in
xchg
or
jmp
adc
fbld
arpl
adc
cmp
popa
dec
test
adc
stos
push
mov
imul
repnz
cmp
es
movb
mov
xchg
lret
movsb
cltd
or
clc
jo
or
outsl
dec
add
cli
out
mov
repz
dec
rorb
dec
sub
rcll
xor
xchg
mov
xor
inc
mov
dec
pop
fs
inc
shlb
sub
ret
mov
sub
mov
cmp
roll
jmp
movaps
sub
stos
icebp
xchg
out
xchg
xchg
data16
xor
lds
mov
jp
xor
jo
xchg
movsb
jmp
mov
bound
scas
add
call
clc
in
push
mov
lds
and
inc
pop
inc
mov
jecxz
inc
and
jno
lods
es
jl
cli
cli
out
ja
or
inc
lret
cmp
out
mov
jp,pt
cmpsb
lret
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
shl
jg
icebp
js
bound
pop
bound
mov
jge
addl
cmpsl
push
popa
xchg
jo
lea
sbb
mov
cmpsb
lock
cmp
mov
pushf
pop
sub
sbb
mov
loopne
pop
jge
jmp
ja
hlt
mov
mov
pop
or
loope
cld
stos
push
adc
cmpsb
sub
ljmp
or
xchg
lea
sahf
xchg
int
mov
popf
xchg
cmpsb
scas
lret
sub
popl
push
dec
jle
push
push
cwtl
fisubrl
fwait
aad
dec
sub
xor
daa
test
mov
add
push
mov
mov
pop
test
repnz
cwtl
dec
push
xor
cwtl
in
roll
mov
repnz
pop
enter
fwait
pop
jmp
mov
movsl
test
or
fnstcw
cmp
ret
mov
mov
repnz
sub
lcall
mov
test
inc
adc
jb
xor
jno
mov
data16
jle
lahf
push
sub
inc
adc
iret
cmpsl
jg
pop
jp
mov
pop
adc
sbb
push
and
jb
push
imul
outsb
lea
test
nop
and
int3
fists
dec
xchg
adc
popf
add
test
loopne
mov
jne
movsb
mov
jns
popf
add
cs
jp
and
jb
mov
mov
flds
jb
dec
xor
cmp
push
mov
jb
ret
dec
xlat
arpl
mov
sub
pop
loopne
jge
xchg
pop
test
stc
cmp
or
scas
adc
fimuls
aaa
mov
fsubrl
pop
and
sub
sahf
mov
dec
stc
shlb
aam
sti
outsb
xchg
mov
rclb
aam
imul
lcall
jmp
cwtl
out
sub
loop
sub
sub
sbb
xor
mov
popa
cs
hlt
xchg
in
addl
pop
lods
imul
inc
popf
push
sbb
xor
xchg
mov
repnz
gs
sbb
sub
int
push
test
push
fnstsw
ret
mov
lahf
and
add
jo
mov
shrl
loope
mov
movsl
dec
add
dec
les
mov
xchg
scas
and
insb
repz
in
cmp
out
xchg
mov
jp
jnp
movsb
ficoms
push
pop
lods
in
imull
and
jecxz
sbbb
bound
cmp
xor
mov
xor
movsl
adc
in
out
pop
jecxz
les
jge
fsubl
dec
shl
test
add
sub
inc
bnd
ret
das
out
outsb
daa
adc
add
pop
dec
call
xor
pop
mov
subl
xor
jle
pop
pusha
jg
int3
fcomp
sub
adc
int3
sbb
jns
movhps
test
in
das
cmp
sub
xchg
dec
xchg
jmp
out
clc
xchg
jle
enter
push
enter
nop
xchg
outsb
mov
mov
shrb
xor
daa
repz
push
cmp
mov
dec
mov
or
sub
xlat
cli
inc
test
insb
es
movl
fsubrs
fldenv
rcrl
mov
filds
int3
into
xor
jl
das
icebp
jmp
or
or
xchg
and
add
jge
loop
or
or
sub
cmc
repz
jne
aas
idivb
pop
mov
loop
repnz
orb
push
fs
and
xchg
jbe
and
sub
sti
popa
es
inc
and
pop
xchg
push
icebp
inc
xlat
or
popf
sub
fdivrl
dec
mov
das
daa
into
and
xchg
lock
mov
cwtl
fcomp
cmp
fistl
mov
je
lds
pop
cmp
xchg
or
mov
dec
lods
ja
pop
push
in
cmp
repnz
cmc
push
in
pop
pushf
out
out
aad
dec
or
dec
addr16
shll
push
jnp
rorb
das
ljmp
push
xchg
mov
pop
xchg
lahf
pop
jo
js
mov
push
jecxz
or
loope
mov
ss
or
lods
dec
lods
scas
lret
imul
inc
mov
loope
imul
sbb
inc
mov
or
sub
mov
sub
rclb
add
or
mov
or
lret
insl
xchg
pop
je
jae
js
adc
adc
xchg
cmpsb
and
es
popa
mov
lods
stos
rclb
jnp
sub
into
and
scas
ret
je
sti
roll
adc
cli
or
shll
stos
sub
shlb
mov
loope
dec
mov
lea
pop
loop
mov
or
movsl
push
sbb
ss
out
jne
xor
in
ds
test
test
iret
mov
mov
or
add
addr16
xchg
sarl
xor
movsl
mov
jmp
in
and
pop
call
nop
cmp
loope
and
int
push
pop
movsb
gs
ljmp
jg
addr16
jecxz
sarl
mov
push
inc
mov
mov
mov
aas
lods
rcl
fistpll
sub
std
or
cmc
cmp
loopne
adc
outsl
jae
mov
pop
mov
test
loope
xchg
test
pop
sbb
mov
push
mov
push
inc
daa
out
sbb
sub
xor
daa
clc
test
push
cmpb
test
jns
add
or
sidtl
pop
xchg
fs
cmp
push
xchg
popa
mov
int3
popf
dec
clts
and
mov
in
inc
movsb
xor
pop
leave
fnstcw
jmp
loope
or
adc
and
inc
dec
or
jb
cmp
push
jl
lcall
out
bound
hlt
jg
rolb
outsb
mov
mov
mov
cmpsl
fdivl
xor
adc
inc
xor
and
mov
iret
xor
shr
dec
cmp
test
test
sti
ds
aaa
outsb
xor
xchg
test
cmp
mov
add
jne
jp
sub
sub
inc
dec
shlb
aam
out
xchg
mov
mov
dec
fidivrs
mov
add
inc
mov
popa
dec
mov
iret
add
dec
or
nop
clc
ret
orb
or
pop
xor
jg
iret
cmpl
aas
mov
mov
enter
push
push
xchg
out
sbb
add
mov
cld
lcall
out
les
jl
xor
push
repnz
mov
int3
sahf
or
add
fsubrp
jge
jns
cmp
xor
clc
arpl
mov
pop
adc
push
mov
mov
push
cltd
or
xchg
cmpsb
out
movsl
lea
iret
adc
ja
ljmp
dec
jne
fsubrl
or
test
idiv
out
fmuls
push
jle
adc
mov
aam
les
sub
or
aaa
loop
add
test
mov
mov
push
jae
rep
dec
fisubrl
xchg
inc
lahf
xchg
mov
push
or
jge
pop
push
inc
pusha
cmp
aaa
mov
xor
jecxz
rcll
xchg
es
add
test
cli
adc
cwtl
aad
sbb
gs
out
pusha
add
dec
loop,pn
sarl
jp
les
aad
scas
add
jge
sbb
mov
xor
adc
mov
enter
add
in
loop
pop
push
scas
les
out
jmp
push
das
jo
add
jg
or
pop
aas
bound
fwait
mov
mov
jne
jne
sbb
push
rcrb
loopne
ror
js
pop
pop
xchg
mov
inc
xchg
dec
insl
push
fwait
pop
arpl
dec
cmc
cmp
pop
js
sub
popa
ret
fildll
mov
pop
ja
rorb
xchg
xchg
shl
and
dec
mov
shll
or
fildll
movsb
and
xchg
aaa
pop
jecxz
out
jle
ja
sbb
pusha
and
lret
xor
pop
push
aad
aad
jno
dec
cmp
push
xchg
icebp
push
scas
fdivs
scas
das
dec
mov
arpl
cmp
cmp
stc
out
pop
int
iret
fdivl
in
jns
or
loopne
addr16
mov
cmp
fdivrl
cmp
repnz
dec
mov
js
mov
push
hlt
bound
mov
xlat
and
pop
xor
cmp
fsubl
out
insb
test
mov
cs
aas
or
fprem
xor
xor
cmpsb
sub
mov
out
and
xchg
cmpsb
es
xchg
leave
sub
adc
mov
sbb
out
inc
or
add
gs
in
and
je
dec
fisubs
mov
lods
xor
xor
cmp
mov
jge
shr
ja
pop
jno
sahf
jne
xor
sarb
fstps
and
sub
lret
mov
jle
mov
and
pop
mov
or
out
test
jle
orl
add
push
clc
mov
std
mov
test
xor
aaa
xchg
or
mov
hlt
cmp
std
sbb
cmp
jmp
xchg
and
inc
mov
call
cld
mov
das
sub
dec
or
mov
cli
cmp
or
jecxz
fldt
stc
repz
push
dec
mov
stos
mov
cwtl
xchg
sahf
and
sub
sub
dec
add
out
pusha
popf
cltd
aad
xor
cltd
adc
mov
mov
xchg
mov
dec
sub
add
mov
add
xchg
or
pmuludq
push
inc
adc
cmp
pop
cltd
in
shll
xor
jge
gs
in
cmp
jg
insl
in
and
daa
fadds
add
mov
repz
or
xchg
fistl
add
lret
rcrb
lods
gs
imul
jmp
imul
xor
xor
or
and
xor
add
add
scas
sti
fs
xchg
lock
push
and
fmuls
fs
pop
inc
out
cmp
in
mov
inc
jecxz
leave
mov
add
xor
xchg
in
stos
andl
popa
xchg
lahf
lret
sbb
test
add
cmc
and
frstor
std
les
inc
xchg
mov
unpcklps
sub
lods
stc
mov
out
scas
and
xchg
push
inc
mov
push
xor
or
testb
sbb
jl
inc
pop
fwait
aaa
fs
mov
fisttpl
mov
xorb
fsubrs
add
sbb
dec
sub
push
sub
pushf
js
pop
icebp
pop
faddl
xchg
pop
cmp
ret
dec
notl
push
in
in
or
mov
cmp
mov
xchg
push
nop
enter
adc
fildl
and
inc
lret
xor
andl
fisubs
mov
std
jnp
popf
rclb
cltd
mov
mov
mov
int
pusha
inc
jl
add
and
dec
rol
mov
imul
push
enter
adc
negl
adc
popa
mov
add
push
popa
pop
pcmpgtw
jmp
xlat
mov
mov
insl
cmp
nop
mov
or
mov
mov
xorl
pop
lds
pop
sub
les
or
adc
js
or
cli
mov
jl
add
scas
leave
mov
cwtl
cli
ds
cmpsl
dec
mov
pushf
mov
mov
ret
inc
in
pushf
mov
fcomip
and
notb
sbb
pop
sub
out
hlt
jae
dec
popf
or
es
xor
lret
inc
push
lcall
sub
lcall
mov
test
imul
fucomip
shr
xchg
mov
lahf
adc
inc
xchg
sbb
fs
movsl
repnz
mov
inc
lahf
fbld
ja
loopne
arpl
cmp
popa
xor
dec
icebp
frstor
fidivrl
dec
fsubs
adc
mov
loop
insb
mov
jno
cmc
and
movsl
push
shrb
mov
inc
add
aas
xor
repz
cmpsl
in
enter
or
mov
aas
mov
mov
push
in
popa
sub
mov
dec
pop
cmp
mov
and
insb
mov
imul
jmp
xchg
jecxz
xchg
push
sub
mov
int
and
loop
inc
adc
scas
loope
loop
lea
fwait
addr16
fistl
xor
aad
jecxz
into
adcb
mov
sub
outsb
jns
loopne
shll
adc
adc
fsubrs
jle
sub
lods
lret
push
inc
inc
sub
add
push
push
add
mov
cld
ret
test
repz
fisttpll
cltd
cmp
insb
outsb
add
les
add
sbb
ja
pop
scas
sbbl
xchg
jge
jbe
call
in
movsb
xor
mov
aam
scas
push
jmp
int
sti
std
dec
cld
mov
push
sbb
mov
inc
mov
popa
data16
dec
jg
in
imul
fldt
sbb
push
or
adc
lcall
sbb
dec
out
in
mulb
xchg
movsl
xsha256
cmpsb
adc
sub
and
inc
cmpsl
inc
cmpsl
xorb
push
add
push
cmpsb
add
outsl
pushf
test
stc
or
out
outsb
daa
mov
jno
mov
cmp
stos
stos
cmc
fcoml
andb
pop
inc
adc
xorb
inc
pop
push
iret
das
out
test
ret
bsf
sbb
mov
jp
stos
mov
jmp
push
popf
sub
pop
mov
out
sbb
shlb
mov
data16
shll
aam
dec
mov
mov
subb
and
add
cmp
jnp
xchg
inc
popa
push
packsswb
pop
and
lcall
shlb
add
aam
mov
xchg
aam
sbb
lahf
pop
repz
mov
push
add
fnstsw
inc
rcr
sbb
cmp
jle
jno
nop
rcrl
imul
cmpsl
add
xchg
mov
enter
jno
movsb
scas
ja
fucomi
stc
add
or
mov
pop
std
cld
and
xchg
xchg
sbb
stos
cmpsl
or
inc
push
mov
cltd
std
add
xchg
mov
mov
mov
jecxz
lods
daa
xor
aas
and
ljmp
or
push
shr
repz
push
loope
mov
mov
pushf
notb
xor
aaa
mov
pop
sbb
xor
outsb
cwtl
sub
cld
jle
gs
adc
jp
adc
mov
insl
shlb
cmpl
lock
imul
xor
mov
cli
test
insb
sbb
adc
mov
pop
pop
rcl
add
mov
lock
aam
sbb
pop
mov
push
das
test
add
loop
test
adc
mov
jg
mov
push
xchg
into
and
adc
fistl
adc
push
sub
push
xor
jp
push
popf
mov
repnz
enter
cmpsl
inc
mov
dec
mov
and
cli
push
mov
inc
mov
sbb
mov
jo
cli
xor
jp
inc
push
lock
scas
enter
sub
dec
iret
pop
lahf
mov
dec
in
nop
cmp
jbe
imull
mov
push
sub
adc
lret
mov
hlt
aaa
int
mov
cwtl
cmc
not
pop
test
scas
add
int3
shl
lret
xchg
or
lret
mov
pop
push
mov
fistpll
pop
inc
pop
sub
sbb
mov
hlt
test
pop
addl
cltd
sbb
cmp
mov
mov
int
lods
cmp
mov
ret
add
cmpb
mov
push
sbb
add
dec
jg
leave
mov
sub
mov
mov
test
jge
xchg
sbb
push
iret
out
push
mov
in
lret
mov
push
adc
lock
int3
mov
jmp
jp
xchg
cwtl
xchg
mov
mov
clc
jg
jle
fcompl
cmp
ffree
int3
sarl
inc
rolb
icebp
xchg
cvtps2pi
sarl
loope
lods
imulb
fwait
cmovp
xchg
xchg
fldt
mov
jl
or
stos
mov
clc
mov
enter
dec
cs
mov
out
adc
and
into
insb
push
pushf
addr16
test
pop
dec
sti
fiadds
mov
push
inc
cmp
lret
cmp
sbb
roll
push
mov
jmp
or
sbb
push
mov
filds
rol
push
sub
cmpsb
lods
pop
xor
loopne
scas
out
repz
leave
mov
pusha
xchg
mov
cli
shr
cvtdq2ps
sbb
in
out
aaa
push
pop
ficomps
add
fld
push
in
das
stc
addr16
cwtl
inc
scas
xchg
mov
pop
jge
cmp
jmp
leave
cmp
push
mov
cmpsb
arpl
mov
mov
mov
ljmp
adcl
test
dec
enter
sub
push
ljmp
xor
sbb
jbe
leave
in
pop
and
xor
xlat
xchg
dec
add
xor
xchg
cmp
inc
xor
pop
add
stos
pop
dec
xchg
jl
cmovno
sbb
data16
in
push
in
mov
iret
jmp
out
arpl
mov
inc
cmpsl
aaa
sahf
cmp
inc
sbb
movsl
loopne
fisttpl
or
jae
jnp
sub
dec
inc
stos
sub
dec
add
xor
in
cmc
xchg
xchg
cmp
pop
insl
rcrl
into
xchg
push
in
jmp
lods
mov
or
outsb
jmp
lods
mov
divl
xchg
test
in
stos
or
pop
les
test
and
ljmp
inc
xor
lock
or
sub
inc
outsb
orl
outsl
outsl
mov
mov
enter
js
add
jne
adc
hlt
fcmovnb
push
iret
fwait
jno
cli
cmp
cmc
pop
leave
scas
xchg
mov
push
xor
jge
fcmovnbe
pop
cs
das
mov
out
rorl
loop
mov
xchg
cmpsl
repz
lea
enter
ds
lcallw
dec
jg
mov
xchg
addb
in
js
es
sar
push
scas
stos
out
int3
adcb
call
and
xor
pop
push
sub
push
dec
das
repz
leave
aad
mov
sub
mov
test
sbb
adcl
mov
sub
orb
xlat
jns
clc
inc
lea
js
arpl
repnz
push
mov
mov
test
dec
inc
push
inc
add
aaa
sub
dec
xor
push
sbb
repnz
mov
mov
into
pusha
out
cmp
and
jecxz
loop
push
rcrl
sbb
mov
jb
arpl
jg
frstor
mov
mov
daa
push
outsb
jae
scas
stc
sub
sub
sub
jbe
xchg
leave
push
mov
xchg
ds
jl
push
mov
into
jp
mov
cld
out
mov
loope
loope
addr16
xchg
cmpsl
adc
jns
ficoml
lcall
or
mov
jge
clc
stos
dec
xor
and
sti
out
ds
sar
jg
into
pop
jl
aaa
jp
jg
mov
jl
jbe
mov
inc
stc
cmp
add
sub
loope
xchg
rcrl
aaa
mov
ficoml
or
jge
sbb
fcomps
div
mov
dec
fstl
adc
push
inc
inc
imul
cmp
cmc
cmpsb
test
push
pushf
mov
mov
pop
or
or
hlt
pop
pop
lock
aam
stos
and
adc
ds
or
aaa
ret
mov
cltd
and
and
pop
pop
jp
filds
inc
cli
jp
sahf
xchg
jecxz
imul
sbb
jmp
inc
pop
shl
flds
push
push
lret
and
movsl
jne
sahf
aaa
cmpsl
popf
insb
adc
pop
sub
inc
int
mov
rol
daa
cmc
outsb
push
adc
loope
data16
hlt
fadd
incl
rol
mov
lock
mov
or
cmp
dec
sbb
rolb
outsb
pop
cli
dec
scas
adc
add
loop
lds
push
in
jne
fstl
pop
push
fnop
xor
lods
repz
lret
daa
lock
loopne
push
lret
roll
mov
lods
push
lcall
mov
jae
mov
mov
inc
js
jle
iret
xor
mov
jae
push
and
cmp
daa
jp
mov
out
dec
push
mov
cld
ljmp
sub
mov
bound
or
bound
push
and
xor
shr
inc
aaa
outsb
sbb
int3
mov
xor
nop
cwtl
shlb
pop
or
fdivrl
add
sbb
lock
cmp
mov
pop
mov
inc
and
xchg
outsl
shrl
sub
lret
pop
add
xor
mov
pand
push
xor
xor
xor
movsl
enter
sub
sbb
lds
stos
xor
or
pop
js
fs
nop
xchg
sarl
adc
rolb
enter
jmp
mov
andb
add
sub
js
xor
mov
sbb
cltd
add
jmp
adc
and
adc
or
or
fwait
push
or
outsb
or
sbb
jnp
hlt
xchg
sbb
jns
jns
add
mov
popa
incl
rcrb
inc
data16
sub
push
ret
shlb
cmp
xchg
insb
mov
dec
mov
and
xor
xlat
outsl
icebp
cmp
aad
sbb
ret
mov
mov
std
bound
bswap
jp
cmp
pushf
lcall
mov
jno
movsl
fistpll
dec
xchg
pusha
pop
testl
pop
insb
push
je
filds
rcrb
sub
dec
adc
fsubrs
or
mov
std
in
ret
cmpsb
jns
push
gs
add
mov
adc
dec
dec
or
cmp
pop
ss
lock
cmp
dec
rcll
push
mov
add
les
add
jbe
mov
jae
fisubrs
mov
enter
gs
movsl
test
cs
pop
jno
cmp
fldcw
arpl
jnp
fiaddl
mov
sbb
rcpps
jbe
jnp
xor
cmp
lret
pop
jae
in
out
cmp
sub
push
call
les
jb
jnp
or
add
ja
sub
cmp
cmp
iret
jge
lods
sarl
out
mov
inc
call
add
sahf
jmp
or
or
inc
jo
mov
int
cmpb
cmc
sbb
sub
hlt
mov
cmpsb
pop
jp
xor
dec
int3
xchg
lods
in
push
push
jae
mov
maxps
repnz
adc
xchg
mov
and
es
xlat
fwait
push
add
push
mov
cmp
cmc
movsb
fcoml
scas
xor
xchg
sbb
or
push
xchg
out
loopne
lret
mov
cmp
shl
sti
addr16
mov
mov
jbe
lcall
outsb
jo
call
inc
and
adc
nop
sub
fisttpll
cmp
sbb
stos
lahf
outsl
mov
popf
and
xor
js
aam
je
mov
popf
inc
inc
loopne
pop
adc
mov
xchg
jns
dec
cltd
outsl
rcr
call
dec
loope
arpl
or
mov
std
fwait
lret
popa
and
sar
adc
xchg
dec
andb
cld
dec
aaa
xor
les
sbb
push
push
mov
roll
mov
mov
leave
sub
enter
xor
mov
xchg
fisttpl
sets
push
fstpt
add
insl
scas
or
ret
mov
adc
fcompl
into
movsb
xchg
int3
and
push
lcall
add
outsl
test
jae
xchg
pop
inc
xchg
sub
popa
mov
cmp
shrl
dec
repz
push
rclb
fldl
jg
scas
inc
shll
xor
xchg
iret
cmp
scas
mov
add
and
and
push
inc
addr16
lock
shl
xlat
aaa
in
jne
ficoml
adc
in
pop
dec
mov
or
pusha
sbb
cltd
cmp
and
mov
pop
sub
ljmp
cwtl
xchg
mov
scas
push
sub
pusha
mov
push
or
sbb
push
adcl
push
ljmp
dec
sbb
xlat
mov
in
lret
ror
fldt
adcb
add
push
pop
int
xchg
insb
jbe
icebp
inc
mov
loope
cltd
add
mov
and
xchg
push
arpl
adc
mov
sbb
fs
cs
jno
icebp
fwait
or
pop
daa
test
mov
sti
frstpm(287
in
xor
push
lods
pop
jo
pop
jl
sahf
idivl
mov
sub
out
stos
and
xchg
cmp
pop
pop
cmp
pop
push
pusha
das
stos
or
ds
data16
bound
adc
inc
dec
hlt
or
add
adc
pop
inc
push
rolb
add
into
mov
in
pop
dec
test
mov
cmp
cli
addl
decl
inc
xlat
add
adc
or
fwait
shrl
inc
scas
xchg
xor
shr
int
mov
push
hlt
insl
sbb
mov
push
ljmp
fistpll
push
sbb
mov
sub
pop
popf
dec
loope
fwait
lods
xor
cmpsl
xchg
fildll
sbb
daa
sub
lret
movsl
adc
inc
jnp
clc
push
xor
bound
inc
sbb
lahf
fnstcw
in
cmpsb
add
and
lds
filds
clc
add
mov
cltd
adc
dec
and
mov
push
lret
or
jns
fisttps
andb
mov
cs
addr16
cmpsl
dec
cmc
sbb
xor
adc
push
not
das
aad
mov
mov
mov
sbb
push
stos
adc
insl
stc
int3
frstor
outsb
jle
push
shll
or
in
mov
sub
bound
aam
mov
ret
rcl
pop
fdivrl
push
inc
sarb
shll
outsb
fisttpll
sahf
jnp
mov
stc
loopne
cmpsb
jl
jne
int
push
aaa
shlb
mov
out
mov
jle
in
pusha
outsb
adc
sbb
data16
add
sub
pop
adc
fcoms
sub
jge
jecxz
mov
fwait
xchg
fistps
mov
inc
xchg
arpl
push
ljmp
out
out
cmp
and
mov
lods
fidivl
push
stos
mov
pop
stos
push
push
jecxz
sbb
aam
and
lret
enter
inc
fbld
pop
push
sub
jb
mov
sahf
mov
testl
or
push
jp
leave
rcrl
fnstcw
jmp
cld
ret
outsb
mov
jle
push
or
filds
ret
shll
sub
jbe
repz
gs
push
sbb
ret
popl
cs
jae
daa
hlt
aaa
or
jmp
sub
ljmp
fucomip
or
xchg
mov
pop
or
fs
pop
adc
fisttpl
push
fs
cmp
ja
pop
or
mov
lret
mov
mov
out
nop
fisttpll
and
ret
imul
fnstsw
mov
out
data16
pop
xchg
or
call
lret
scas
adcb
lahf
sahf
sub
dec
mov
push
dec
adc
pop
mov
xorb
mov
jecxz
cld
fiadds
arpl
loop
mov
repz
xor
std
adcl
test
mov
jb
popf
aaa
cmc
sahf
adc
push
inc
aaa
mov
ror
mov
orl
js
dec
pop
dec
adc
sub
dec
into
adc
mov
lret
leave
push
lods
gs
inc
lahf
mov
sub
outsl
inc
jge
shl
popf
push
push
fnstsw
mov
mov
test
mov
xorb
fsubrs
loope
jbe
jmp
jne
mov
push
mov
pop
dec
popf
xor
mov
cmp
xchg
lret
inc
adc
repz
push
mov
mov
mov
out
sub
and
dec
inc
aad
jns
add
adc
xchg
sbb
push
data16
and
sbb
cltd
imul
lcall
mov
bound
xor
mov
push
pop
sub
pop
mov
mov
rclb
cltd
jecxz
mov
imul
push
cmp
pushf
imul
mov
cmp
mov
sbb
cmpsl
inc
rcrl
jp
scas
pop
mov
inc
add
out
and
dec
push
mov
imul
popa
and
rolb
test
dec
movsb
jae
cmpsb
popa
adc
jge
mov
jle
sbb
aad
into
aam
dec
insb
push
pop
jl
cmp
popa
inc
inc
das
mov
shr
dec
daa
aad
aaa
lock
push
int
push
or
aam
sub
pusha
aam
outsl
cli
push
add
js
push
add
daa
jmp
adc
dec
dec
lds
ret
leave
popf
xor
add
dec
inc
daa
adc
inc
addr16
push
cmp
jo
int3
enter
sarb
int3
movl
adc
or
xchg
test
pop
cmp
fnstenv
sti
xchg
lahf
sbb
popa
push
mov
and
mov
inc
repz
hlt
xchg
sahf
imul
and
out
rcl
and
xor
into
out
xor
popa
jl
cmc
or
lock
jmp
xor
push
jns
jp
mov
pop
adc
sbb
xor
cmp
jne
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
dec
xchg
fisubrs
bound
bound
pusha
nop
mov
mov
mov
or
popa
and
test
fsub
and
sbb
ret
mov
std
cld
sub
or
stc
lret
mov
adcl
stc
ret
sbb
dec
insl
and
sub
dec
cmp
push
sbb
and
cmp
addb
push
cltd
jo
clc
push
jg
push
dec
dec
dec
push
add
ja,pn
sbb
jbe
sar
cld
lock
mov
sar
scas
sub
add
jle
int3
kaddb
ljmp
enter
mov
addr16
inc
sbb
adc
push
push
lret
dec
outsl
jl
cli
adc
jmp
adc
push
adc
insl
lahf
popf
fcoms
and
dec
mov
mov
sbb
and
mov
cmc
jp
popf
ja
sbb
lods
jp
xor
mov
and
push
fisttpl
dec
sbb
inc
int
pop
imul
pop
xchg
mov
sbb
ljmp
lds
cmp
std
xchg
sbb
inc
std
and
push
pop
addr16
sbb
mov
mov
push
cs
int3
fisubrs
test
and
nop
dec
xorb
outsb
jge
cmp
in
jae
jmp
test
int3
push
mov
mov
adc
mov
sbb
mov
into
rcrl
fistpl
sbb
in
push
outsl
sti
mov
sbb
dec
lret
push
fadd
jecxz
rorl
dec
sbb
mov
rolb
insb
inc
pop
inc
jecxz
ret
or
push
cmp
test
jno
xor
int
leave
jns
rcrb
push
push
rorb
pop
bound
data16
aam
adc
sub
pop
rcrb
sbb
jae
enterw
jb
and
push
dec
and
adc
cmp
adc
adc
aas
lret
xchg
and
cmpsb
repz
mov
shll
push
pushf
add
imul
fstps
arpl
popa
dec
mov
decb
sbb
aam
es
hlt
cmc
pop
iret
andl
insb
or
xlat
lret
or
push
mov
xor
dec
mov
push
fs
mov
inc
ja
std
addr16
dec
iret
pop
arpl
test
call
pop
mov
ret
push
mov
aad
dec
add
sub
ret
daa
scas
xchg
xor
xchg
lahf
jmp
adc
or
pop
pop
fucomip
mov
call
jmp
lcall
out
int3
jb
addb
inc
shll
sbb
mov
sbb
mov
push
xchg
popf
jmp
mov
cmp
xchg
add
aas
call
sub
adc
fwait
lds
sti
pop
shlb
aas
adc
push
out
mov
adc
shl
mov
add
stos
xchg
push
bound
cmp
jae
lcall
push
push
rorb
or
jle
imul
cmp
mov
call
sarb
fisttpll
mov
fcmovne
out
ds
into
xor
lock
insl
not
fsubs
cmp
lock
repz
push
add
pop
jecxz
call
jmp
push
test
sub
pop
pop
adc
mov
and
mov
jge
decb
in
xlat
in
and
ss
loope
test
jne
insb
xchg
or
mov
mov
jno
xchg
pop
stc
and
cmc
int3
cwtl
daa
mov
ja
push
add
enter
sbb
int
cmp
or
jbe
xor
pushf
lds
rcl
sbb
jne
push
hlt
sub
add
arpl
pop
mov
stos
je
cmp
popf
sub
orb
nop
aaa
xor
inc
imul
or
lods
jbe
jle
hlt
pop
inc
mov
jp
loop
mov
or
jmp
mov
js
jge
das
or
gs
pop
mov
cmp
jae
stc
cmp
stos
addr16
xor
repnz
xor
fadds
mov
popf
pop
mov
push
pop
cmp
fisttps
clc
ds
lock
cmp
pop
push
mov
xchg
stos
pop
fsubrp
ret
dec
out
clc
fsubrl
sbb
ja
popa
shl
fmuls
stc
pop
push
cltd
test
pop
jge
jno
xchg
jmp
mov
addb
sbb
jp
adc
push
repz
or
loope
sbbb
mov
ffree
dec
js
sbb
pop
js
jle
movsl
push
stos
xor
es
jb
push
mov
add
or
std
fwait
xchg
pop
cli
mov
int
loopne
dec
stos
neg
cld
jo
fisubs
adc
loop
dec
inc
and
cltd
pmovmskb
xchg
jnp
cmpw
jl,pt
clc
xchg
xor
jl
aaa
pop
andl
mov
xor
push
aad
into
popl
rclb
sarb
jno
mov
or
sub
pop
test
and
cwtl
and
xchg
repnz
cmpsl
or
ret
repnz
xor
push
insl
sub
push
xorb
jb
lea
loop
mov
mov
sub
sub
lret
repnz
cwtl
cmp
fwait
sbb
lret
xchg
push
sahf
js
ret
mov
mov
jle
pop
pop
rcll
sahf
sub
xchg
outsb
lods
fdivrs
mov
push
ljmp
jns
subb
repz
xchg
jb
cli
add
test
test
xor
imul
adc
loop
add
push
pop
out
cmc
in
inc
sbb
cmpsl
mov
sbb
movsl
enter
outsb
jne
lret
cmovns
sub
xchg
push
pop
mov
inc
adc
add
test
cmpsl
pusha
pop
imul
lock
std
popa
into
sbb
out
jecxz
dec
test
push
andl
andb
jbe
cmc
fisubrl
out
call
and
int3
adc
cmp
or
or
test
ja
cwtl
das
out
inc
jns
inc
add
cmp
out
outsb
movsl
movsl
inc
std
int3
repz
jmp
stos
shrb
cmp
jl,pn
divb
add
out
mov
add
add
dec
out
and
adc
or
fists
test
in
insb
cmc
pop
or
bound
add
push
sub
pop
and
adc
jno
xchg
inc
xchg
push
test
lret
stc
fmul
int
inc
loopne
cmp
push
dec
xchg
jge
out
stos
pop
lahf
jne
jne
pop
into
arpl
lock
mov
and
fistl
sbb
mov
cli
cmp
and
popf
jbe
in
and
pusha
cmp
or
pop
std
push
lods
ds
xchg
cmp
mov
sub
inc
add
mov
sub
sbb
mov
js
push
ret
daa
or
jge
addr16
mov
in
mov
jbe
xchg
inc
sbb
jno
sub
cmp
js
ja
movsb
mov
push
out
cmp
test
lock
pusha
mov
jo
cltd
test
and
fisubl
cwtl
add
inc
jge
je
add
push
adc
fs
ljmp
inc
add
mov
repnz
and
push
jl
std
push
ljmp
dec
xchg
xor
inc
stos
push
ds
dec
icebp
jecxz
insl
dec
or
or
jg
pop
iret
lds
dec
mov
pop
jae
mov
sbbb
or
jae
shrd
xlat
mov
xchg
adc
mov
xchg
push
adc
sub
jmp
mov
test
pop
inc
push
jecxz
negl
cmp
push
repz
inc
sahf
or
clc
push
stc
jmp
repnz
sbb
xor
pushf
shr
xor
icebp
ljmp
mov
std
cmp
das
dec
outsl
or
bound
leave
adc
xor
dec
call
and
push
pop
xlat
fwait
inc
sbbl
or
data16
cmpsb
stos
jbe
xchg
and
sub
jp
decb
pop
xchg
push
sbb
add
pop
lock
push
cmp
in
dec
jl
insl
shll
xchg
xchg
adc
cltd
cwtl
inc
push
out
addr16
push
sti
pushf
mov
aam
loope
mov
xorl
ret
fadds
rol
lret
test
gs
imulb
shl
std
xchg
push
xor
out
out
push
pop
gs
jns
sti
movsl
sub
push
jecxz
leave
nop
das
bound
imul
cpuid
dec
jbe
add
dec
mov
dec
dec
pop
cs
je
pop
add
jg
mov
or
push
lret
mov
test
jg
popf
sti
lods
push
lahf
sub
or
stos
shll
mov
and
inc
pop
jne
int
out
out
nop
negb
sub
scas
xor
inc
mov
jmp
test
dec
adc
push
pop
add
test
xchg
sbb
mov
pusha
mov
cmpsl
jge
lods
add
imulb
pop
cmc
pop
icebp
inc
aad
aaa
pop
xor
xchg
rol
jae
popf
push
jae
lods
lods
cmc
mov
pop
lret
jb
push
lahf
pushf
dec
and
xchg
add
idivb
mov
adc
imul
mov
outsb
inc
push
data16
repnz
call
aam
jo
inc
lcall
in
xchg
push
test
in
les
es
or
loop
jle
xor
andb
fwait
xlat
jne
mov
or
mov
mov
pop
sub
xor
leave
push
xor
dec
add
aam
andl
or
std
and
inc
or
inc
inc
dec
jge
cmpsb
cld
jnp
or
jb
mov
or
std
fldt
int3
push
loopne
mov
loop
mov
inc
popf
jnp
add
mov
xchg
mov
xchg
sbb
fidivrs
add
movsl
push
add
inc
cmpb
fldt
subb
jns
clc
test
push
ljmp
xchg
imul
cmpsb
inc
pop
outsb
push
test
cmp
mov
insb
aas
adc
xor
mov
or
push
rclb
mov
jl
ret
lds
xchg
sbb
cmp
scas
fistpl
leave
lea
sbb
mov
push
stos
sbb
fcomip
aas
aas
cwtl
pop
hlt
outsl
popf
into
stos
out
lods
call
mov
mov
das
rcrl
loope
daa
fdivl
dec
xor
je
lock
push
mov
enter
pusha
xchg
leave
cmc
jg
adc
or
int
mov
and
push
and
clc
out
and
mov
movsb
call
in
fsubrl
jp
sub
push
xchg
mov
repz
mov
enter
jbe
or
fists
mov
dec
fwait
xchg
ds
test
push
pop
ret
xlat
lods
cmc
xchg
mov
and
jg
les
cmp
cmp
xlat
sub
jb
dec
xchg
lret
adc
adc
aas
adc
jns
es
in
sbb
imul
dec
xor
inc
xchg
stos
jne
sub
mov
fs
in
outsl
inc
fadds
mov
aaa
push
arpl
inc
mov
mov
push
andb
mov
mov
sar
xchg
or
mov
jno
and
adc
jns
or
push
dec
cmp
in
scas
push
inc
pop
pop
pop
test
adc
imul
adc
ret
jne
xor
aaa
into
loop
inc
mov
jl
dec
adc
or
std
cmp
mov
pop
cmpsb
andb
ror
hlt
enter
scas
out
push
adc
pop
jne
xor
dec
sbb
push
jle
out
dec
mov
lret
cltd
in
ror
inc
adc
je
push
jae
pop
fcomip
mov
mov
mov
adc
bound
pop
xor
add
push
or
jno
add
mov
cmp
inc
daa
pop
adc
pop
pop
in
pop
pop
adc
aad
repz
test
sahf
inc
jp
int
mov
jbe
cmp
sub
xchg
sub
xor
sub
push
gs
or
inc
fisttps
vmovmskpd
aad
jb
hlt
inc
inc
dec
out
into
or
test
js
fldcw
or
jno
aaa
pop
jl
dec
jnp
scas
add
inc
mov
and
data16
mov
cmc
push
loopne
push
loop
cli
lods
enter
push
sbb
je
arpl
jecxz
lea
xor
pop
test
in
test
inc
and
je
add
mul
inc
push
add
rcll
stos
mov
in
jae
push
mov
fdiv
sbb
xchg
push
push
mov
add
push
xor
fwait
pop
push
or
jo
std
xor
or
call
pop
xor
adc
fwait
xchg
pushf
push
sbb
outsl
mov
movsb
addr16
sar
in
pop
lods
fisubrs
pop
mov
xchg
xor
repz
out
negb
lcall
divl
jg
bound
xchg
adc
mov
lahf
popf
fcoms
ret
lods
cmp
xchg
and
lret
or
mov
push
outsb
mov
jne
or
xchg
inc
sbb
loopne
jne
pop
and
adc
mov
xchg
xlat
aaa
sub
ret
rcr
and
js
insl
pop
and
jle
or
push
sbb
lods
cld
bnd
mov
push
jp
imul
dec
mov
inc
and
push
sbb
xchg
jno
add
mov
xor
sar
int3
movsb
push
jge
push
addl
cmc
or
imul
mov
ja
inc
xor
pop
cwtl
sub
sub
xchg
outsl
sub
movsl
add
in
in
mov
pop
int
mov
test
dec
mov
xchg
push
lret
nop
cmpsb
pusha
iret
pop
into
push
and
pop
xchg
daa
cmp
push
std
adc
ds
pusha
adc
decb
sbb
jno
push
push
pop
jg
imul
ljmp
or
pop
xchg
scas
aaa
pop
or
shll
or
push
jb
lea
sar
je
mov
decb
lret
cmpsl
mov
iret
fwait
lock
ljmp
push
push
xchg
ror
jnp
cmp
xor
insb
xchg
cmc
in
sub
loop
ret
xor
sub
ret
cmp
sbb
mov
stos
aad
inc
in
mov
mov
imul
mov
or
cmp
or
lods
xchg
jg
stos
clc
scas
xor
pop
pop
mull
mov
push
lret
rclb
cld
aas
hlt
push
jns
das
xchg
loopne
push
ja
push
mov
xor
fcomps
pop
ficoml
sti
push
pop
pop
jp
sti
in
mov
or
jbe
fisubrl
repnz
ret
in
fwait
sbb
mov
mov
dec
xchg
loop
popf
dec
jnp
into
sbb
pop
nop
outsl
test
add
sub
or
test
pushf
mov
mov
cs
jae
add
decb
mov
fsts
ret
int3
loopne
cmp
jae
mov
mov
jge
aam
xchg
xor
jne
iret
inc
aam
gs
lret
mov
jp
daa
pop
cld
mov
cwtl
movsl
arpl
sahf
pop
push
and
xchg
leave
xor
mov
das
xor
ret
lods
add
or
ret
mov
and
ja
aad
dec
arpl
pop
inc
pop
cli
push
repnz
mov
jl
dec
mov
mov
dec
and
mov
ret
sub
lret
mov
xchg
cltd
in
add
jns
adcl
fsubl
in
push
jecxz
jp
jle
lahf
add
push
arpl
add
stc
push
out
add
call
adc
mov
fsubrl
and
pop
push
mov
loopne
in
or
fmuls
dec
add
xlat
pop
sub
cmp
and
push
push
mov
mov
das
push
sbb
sbb
push
ret
lds
fistps
stc
mov
pop
mov
xchg
icebp
and
add
mov
mov
mov
cmp
dec
adc
push
push
mov
imul
test
sbb
orl
cmc
repnz
sub
call
lock
rorl
push
popf
lea
jne
je
mov
fmull
movsb
or
mov
stc
xchg
in
rcll
nop
jmp
ret
out
nop
lds
push
xor
lock
mov
sar
rcrl
outsl
dec
popf
sub
pop
lret
inc
sub
stc
pushf
lret
les
fisubrs
lds
popf
je
lahf
orb
pop
sbb
gs
fiaddl
cmc
adcl
sub
xchg
add
pop
xor
movsl
sub
dec
icebp
cld
popa
cwtl
mov
mov
daa
lret
inc
mov
movsb
pushf
rcrl
xor
sbb
and
cwtl
dec
or
pop
subb
movsb
je
cltd
lret
mov
xor
sub
scas
sbb
dec
sbb
ljmp
cld
clc
lea
push
in
push
pop
jg
jl
jge
mov
mov
in
and
std
xor
xchg
sub
or
rcrl
push
fstpl
push
push
jmp
xchg
daa
xor
iret
xchg
imul
in
pop
push
pop
in
lods
imul
pop
repz
out
aaa
dec
dec
sbb
sti
out
inc
test
jb
or
push
iret
jmp
xlat
fwait
out
adc
pop
mov
sbb
push
shlb
mov
mov
or
mov
imul
pop
stos
xor
mov
and
lds
mov
in
inc
and
xchg
data16
sub
call
data16
ffreep
in
mov
sbb
xchg
push
mov
hlt
out
xor
int3
push
cmp
xchg
dec
jns
fidivrs
aam
ja
sub
int
inc
cli
rol
dec
adc
iret
dec
xchg
leave
out
test
in
mov
jbe
xor
sub
adc
cltd
ljmp
cwtl
push
or
shll
cmp
lret
mov
mov
cmp
cmp
mov
ss
in
adc
jno
mov
adc
fdivrs
jae
outsl
aad
jmp
in
lret
sub
stos
out
sbb
push
rcr
push
jb
mov
sbb
or
or
test
mov
mov
lds
addl
jp
and
xor
repz
push
xchg
jbe
lods
dec
incl
ja
xchg
and
aam
jnp
movl
jle
cltd
enter
fbld
clc
mov
sub
je
pop
stc
ret
stos
lret
mov
cmovne
std
in
test
push
dec
mov
ds
call
dec
cmp
xchg
sbb
xchg
xchg
loop
push
mov
pop
cwtl
aas
mov
or
cwtl
lcall
push
pop
test
or
mov
xchg
sarl
jecxz
jae
cmp
sbb
lret
cltd
push
test
and
mov
push
in
adc
push
mov
and
and
pop
enter
cld
hlt
push
aaa
ficoml
call
cmc
into
mov
xor
mov
xor
test
int3
stos
and
jle
add
jo
sub
xchg
pop
scas
cmp
sub
sub
insl
pop
dec
jb
xchg
mov
in
and
iret
and
shlb
add
mov
cs
mov
out
inc
and
cmc
sub
sub
pop
ds
push
test
bound
imul
inc
std
mov
and
jge
sbb
testb
push
xchg
mov
rol
mov
push
dec
pop
testl
xchg
stos
xchg
jno
rorb
jb
push
and
stos
push
mov
out
jae
rclb
lcall
dec
jne
movsb
push
icebp
mov
movsl
scas
arpl
in
adc
cmp
add
in
shrb
mov
out
sti
sbb
dec
xor
mov
cmp
cmp
ret
lds
movsb
pop
xlat
sub
mov
xor
cmp
push
jnp
sbb
aad
pop
cwtl
or
add
jbe
test
or
mov
cltd
sahf
mov
pop
in
das
lds
push
outsl
call
and
scas
aaa
cwtl
movsl
xchg
inc
dec
cli
jnp
add
sbb
ja
loope
test
sbb
mov
jge
decl
aad
cmp
jo
mov
sub
test
jmp
pop
insb
xchg
push
lods
lods
add
ret
dec
sub
sbb
and
mov
pop
stc
dec
adc
pop
mov
sarl
call
sbbb
cltd
test
roll
movsl
xor
lret
mov
pop
xchg
imul
sub
in
mov
dec
or
push
lcall
div
outsb
in
ss
push
jg
dec
jg
call
sbb
jle
and
movsl
mov
nop
cmp
jo
test
mov
dec
dec
xor
int
inc
lods
adc
in
mov
ljmp
aas
pop
bound
aad
mov
dec
xchg
add
pusha
inc
pop
push
adc
adc
dec
jp
fistps
rorb
ficoml
test
pop
sbb
fbld
pushf
test
clc
adc
lret
bound
jns
scas
push
ss
pushf
adc
lcall
fiadds
fidivrs
jmp
and
clc
adc
int
xchg
pop
shl
sub
hlt
ja
mull
mov
mov
fistl
in
cmp
loopne
xchg
fldl
pop
in
cmpsl
pop
aaa
pop
sbb
insb
xor
test
and
je
lods
scas
pop
mov
pop
cli
adc
std
fstps
sub
pop
mov
add
xlat
cmp
repz
mov
xor
or
mov
mov
in
in
add
int3
mov
sti
pop
outsb
sti
cli
pop
sbb
ljmp
je
lods
pop
clc
adc
mov
adc
movsl
or
sbb
rolb
stc
fsubrs
testb
pop
aas
notl
aam
sub
cmp
inc
pop
fidivl
cmp
sub
pop
repnz
push
cmp
sti
leave
jns
mov
shlb
push
mov
jge
mov
mov
xor
mov
pop
pop
pusha
jmp
xchg
mov
jge
cmp
or
loopne
out
lods
adc
adc
cwtl
pop
in
xor
shrb
minps
push
mov
and
mov
mov
lret
popf
add
add
add
rolb
xor
ljmp
mov
pop
push
cmp
rorl
js
enter
test
jae
sub
pop
ret
lcall
imul
mov
inc
stc
pop
shl
lea
js
inc
fistpl
push
shrl
test
lret
lret
imul
inc
jp
xor
imul
mov
test
repz
sub
arpl
sbbl
xchg
sbb
mov
rorl
mov
mov
ret
div
push
loope
es
stos
xorb
sbb
sti
xchg
push
mov
shr
mov
lock
and
jg
sbb
xchg
sub
push
insb
mov
or
test
dec
jle
inc
mov
aas
xchg
subl
and
aas
cli
cld
xlat
push
daa
jmp
xchg
popf
adc
pop
out
adc
sbb
pop
push
xchg
inc
ja
jle
mov
inc
push
inc
xor
xor
out
stos
mov
mov
incl
test
add
fdivrl
int3
movsb
nop
mov
hlt
dec
xchg
out
lahf
in
add
cld
jae
xchg
sub
push
mov
sub
or
jno
in
stos
stos
aad
mov
mov
cmpsb
or
popf
and
mov
xchg
sbb
inc
in
icebp
xchg
int3
jbe
ds
rcl
loop
adc
push
add
daa
pop
stc
add
cmpsl
les
or
ret
shrl
mov
cwtl
aam
lock
das
dec
int3
sarb
fimuls
fidivrl
aaa
lods
cmp
cmpsb
movsb
rol
loopne
mov
stos
inc
test
sti
popa
push
cli
mov
loopne
mov
fisubrs
mov
les
sub
pusha
xchg
fld
mov
mov
adc
int
hlt
out
mov
pop
test
aad
mov
call
scas
xor
daa
xor
xchg
jle
popa
add
sub
stc
data16
out
mov
push
aas
js
jo
dec
hlt
or
jae
cmc
mov
push
rolb
ret
pop
pushf
dec
add
stc
dec
ficoml
cli
loopne
fnstenv
cli
into
imul
nop
xor
push
adc
sti
inc
or
add
fidivrs
push
mov
mov
fisttpl
pop
pop
xchg
push
push
or
add
inc
jbe
aas
leave
std
lahf
aam
into
stos
sbb
inc
je
inc
xor
leave
push
fs
sti
rcrb
adc
jge
in
xchg
rorb
jnp
lahf
fsubp
scas
fs
frstor
loopne
mov
sbb
jp
cmpsl
mov
push
pop
inc
imul
aad
leave
fdivs
ss
notb
jmp
addl
mov
pop
ja
inc
sub
sbb
dec
adc
xor
pop
inc
js
or
and
jle
xor
jnp
xor
mov
inc
addl
or
cld
rcrb
xchg
jbe
or
jg
out
not
icebp
xchg
adc
jne
jne
daa
stc
pop
es
xchg
lret
insw
mov
adc
outsb
js
repz
ret
fwait
movsl
lods
inc
subl
push
clc
popa
arpl
in
sub
pop
scas
mov
push
sub
xor
push
lock
xchg
aad
push
jns
lcall
pop
cs
stos
jle
and
aaa
leave
mov
mov
sahf
iret
xlat
mov
or
cmp
dec
add
adc
aam
xchg
inc
sbbb
cs
mov
and
pop
or
test
int3
sub
mov
adc
sti
hlt
lds
fisttps
out
leave
lods
and
push
test
rcrb
xchg
cmp
das
les
ds
decl
outsl
adc
cmpsl
inc
push
fistl
fnsave
jmp
lods
adc
or
addr16
clc
shlb
pushf
das
lock
negb
sub
daa
add
int
sti
xor
icebp
xor
lods
mov
cld
into
jl
test
push
test
sbb
shl
sbb
adc
xchg
aad
cwtl
xor
stos
add
aas
repnz
stc
enter
jl
iret
pop
cmp
shr
add
jb
mov
cwtl
and
jo
pop
pop
dec
pop
imul
jg
mov
mov
inc
sbb
lahf
or
mov
push
xchg
fiadds
clc
and
sbb
xor
push
rol
hlt
in
mov
add
xchg
lret
pop
and
mov
mov
iret
cmp
or
cmpsl
scas
mov
xchg
aad
out
das
dec
aam
movsl
scas
addr16
in
call
into
jnp
dec
mov
inc
pop
xor
sub
stos
xchg
push
pop
push
aas
andl
cmp
add
outsb
xchg
and
test
movsb
xor
insl
das
roll
sub
ret
aad
aam
rep
test
lods
cwtl
notl
xchg
sbb
sub
ret
xlat
sbb
lahf
test
fstl
js
mov
cwtl
fcmovnb
inc
out
jmp
out
or
pandn
jae
aad
and
mov
xchg
inc
jbe
sbb
shrl
pop
mov
pop
andb
mov
cltd
repnz
sbb
mov
jmp
enter
adc
push
xor
in
cmp
rcrb
push
pop
dec
mov
rcr
add
push
sub
lret
into
out
sbbb
inc
inc
push
adc
repz
pmaddwd
leave
or
or
jns
mov
pop
dec
outsl
lahf
add
test
aam
imull
push
sub
mov
ret
out
push
add
inc
jne
mov
pop
fistps
pushl
ljmp
adc
xlat
adc
push
mov
mov
or
push
xor
sub
xchg
lods
loope
outsl
sub
std
sbbb
in
fwait
jb
add
xchg
jge
push
add
jae
lcall
lret
lock
jbe
in
or
push
insl
out
xchg
cmc
in
pop
push
repnz
pop
cld
sub
dec
jno
cmp
lcall
cmpsl
pop
add
cmp
ror
xor
data16
mov
test
push
icebp
test
cld
or
mov
dec
jp
sub
push
add
cmpsb
les
lds
add
cmp
js
repz
popa
xor
out
dec
loop
cltd
mov
ljmp
leave
pop
mov
test
cmp
ja
push
pop
xchg
out
loope
arpl
push
hlt
push
ret
push
loop
mov
xchg
iret
sbb
cmp
mov
mov
and
fdivs
xchg
stos
sub
jae
mov
movsb
lret
lock
inc
mov
jl
add
mov
aas
sub
int3
mov
lcall
jmp
mov
dec
mov
pushf
sahf
mov
lods
les
rorb
push
mov
imul
loopne
in
outsb
pop
inc
call
cs
and
scas
mov
je
sbb
mov
xor
inc
sti
fcoml
test
lret
sbb
in
loop
aaa
jb
fsubrp
or
sbb
push
mov
inc
jge
pop
add
push
subl
fcompl
outsl
sbb
pop
or
sbb
or
cmp
inc
ja
fidivrl
push
inc
xor
sub
shlb
jg
popf
pop
mov
sbb
mov
cwtl
push
ds
push
repz
push
push
mov
jno
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
jl
out
sub
bound
push
jmp
sub
push
xor
cwtl
loope
jbe
sbb
pop
sti
xchg
push
test
hlt
inc
jmp
out
imul
cmpsb
add
xchg
pop
nop
cwtl
push
sub
repz
or
mov
ja
add
push
dec
mov
test
jge
lahf
rorl
cmp
stos
not
inc
jo
adc
jl
and
push
sbb
dec
in
jge
hlt
pop
adc
out
inc
sahf
std
fs
push
sub
jge
mov
cmp
mov
cld
in
int
shll
cmp
cld
add
fwait
mov
jmp
push
jecxz
cmp
jo
pop
insl
stc
ficomps
insl
lea
outsb
fists
rcll
adc
sub
les
mov
add
mov
sub
sahf
sub
cmpsl
pop
mov
adc
lds
mov
dec
fadds
mov
jo
ja
out
ss
sti
pop
stc
enter
lret
loopne,pt
xorl
sti
mov
je
xchg
push
mov
test
sbb
repnz
jg
cmpsl
mov
push
shlb
xor
mov
xchg
push
adc
movsl
sbb
jno
jno
leave
pop
mov
mov
and
mov
std
shlb
imul
in
int3
xor
push
push
fildl
jecxz
mov
inc
insb
sahf
push
aam
das
andl
pop
pusha
mov
sub
js
out
outsb
sti
pop
mov
and
xchg
test
mov
xchg
stos
icebp
dec
test
sub
stos
aad
daa
add
xor
cwtl
xor
lret
dec
adc
out
inc
sbb
xchg
mov
aaa
push
loopne
loop
push
jb
pop
imul
xor
jl
repz
cmp
lret
push
out
adc
xor
cwtl
and
cmp
push
cmpsb
ret
mov
shr
push
orb
cld
repz
test
push
inc
mov
mov
sbbl
imul
scas
js
std
ljmp
pop
cwtl
push
movsl
stos
mov
loope
sbb
adc
or
mov
js
mov
xchg
sub
xchg
les
lret
das
and
mov
cs
xchg
mov
lods
and
jnp
sbb
out
adc
jb
xchg
loopne
add
mov
lods
and
cmpsb
movsl
adc
sbb
dec
xor
mov
fisubrs
hlt
fildl
lock
ss
cmp
es
pop
mov
fidivs
stos
sbb
xchg
movsb
cmp
pop
es
xchg
cwtl
lds
add
outsb
pop
repnz
xor
loopne
cwtl
mov
cmp
fdivrl
and
aad
clc
xchg
and
and
enter
and
out
imul
ss
mov
mov
fistpl
aas
dec
hlt
fistps
sbb
fcompl
and
or
add
adc
bound
pop
jge
mov
mov
cltd
jge
roll
mov
cld
stos
cltd
lret
xor
mov
mov
fwait
push
in
and
outsb
push
in
push
mov
mov
out
shrl
mov
insl
imul
sbb
out
or
fadd
stos
into
cmpsb
mov
in
clc
movsb
sbb
mov
lcall
std
pushf
repnz
jle
jmp
mov
jge
pop
pop
stos
call
aaa
ss
lret
pusha
mov
dec
sbb
fwait
loopne
in
jnp
add
popf
jae
mov
int3
or
mov
pop
adc
mov
sahf
rcl
or
iret
mov
stos
mov
sub
enter
aam
mov
jo
xchg
dec
popa
add
inc
fwait
stos
shrl
xchg
dec
sahf
loop
icebp
xor
ds
ljmp
sub
ds
int
add
movsl
fnstsw
mov
pop
jnp
add
push
or
mov
cmp
push
sub
and
lods
leave
xchg
sub
xor
cmp
rcll
pop
in
mov
and
pop
jle
in
sub
dec
xchg
mov
xchg
fwait
jae
cmp
dec
repnz
arpl
adc
and
and
inc
sub
enter
aad
mov
imull
add
mov
dec
pop
push
cmp
lret
test
mov
cmp
test
jns
jne
fs
or
dec
scas
mov
push
cpuid
pushf
rcl
or
mov
std
outsb
sub
xchg
mov
and
jns
sub
and
dec
leave
inc
push
and
push
or
icebp
inc
cmpl
mov
jmp
xor
dec
jge
call
ret
xor
les
pop
rcll
mov
dec
fnstsw
inc
test
repnz
test
xor
mov
lock
jmp
xor
ret
or
outsl
mov
pop
aaa
ds
cmp
xlat
inc
insl
mov
sub
es
mov
xor
xchg
aam
lret
cmp
fmul
mov
in
jg
test
fldt
pop
mov
jge
sub
push
lret
int
xchg
lret
sbb
iret
push
mov
outsl
ret
mov
rcrl
lock
data16
mov
cli
pop
xor
and
inc
aas
insb
dec
lods
jmp
pop
repz
aas
mov
xchg
xlat
adc
jae
out
sub
rclb
mov
hlt
mov
lock
or
fcomip
add
jle
fsubs
adc
sbb
ss
xor
enter
push
test
push
data16
aas
fnsave
ficoms
cmp
xorb
jp
fsubs
loope
inc
pop
cmc
mov
fists
and
imul
addr16
xor
sbb
mov
test
inc
push
add
mov
adc
sbbl
mov
pusha
push
loop
shlb
stos
sbb
out
push
push
push
mov
mov
lds
imul
sahf
xchg
mov
std
add
jecxz
repnz
push
push
test
adc
punpckldq
int3
ret
loope
dec
or
arpl
mov
inc
jae
pop
xchg
sti
xor
dec
shl
icebp
cs
inc
add
cmpsl
and
push
and
mov
in
shlb
fwait
pop
je
loop
xchg
repnz
imul
adc
jb
cmp
jae
push
mov
stos
push
lcall
push
mov
adc
jb
sub
cli
movsb
xor
jmp
notb
scas
push
sbb
out
jns
lods
xchg
dec
and
scas
sahf
std
xor
inc
lcall
rcrl
sbb
ficoml
add
mov
mov
xchg
mov
sbb
inc
dec
and
pushf
sub
xrelease
cwtl
mov
bound
pushf
sbbb
adc
mov
xchg
inc
xor
add
xchg
push
mov
cmpsl
imul
testl
mov
lcall
xor
movsl
into
inc
pop
out
xor
jb
and
lahf
outsb
mov
test
int3
test
xchg
push
and
aaa
jae
das
jl
scas
faddl
mov
scas
and
push
xor
aaa
mov
cmpsl
idivb
scas
gs
adc
imul
ret
addr16
push
sti
ss
fbld
sbb
scas
dec
adc
fsubrl
sub
pop
and
adc
mov
ja
jmp
sub
cmp
or
fstl
xchg
xchg
test
mov
out
add
sub
std
popf
mov
xor
lahf
insb
dec
sub
mov
xchg
lods
movl
addr16
pop
cmovo
dec
testb
sti
mov
aad
push
pop
mov
scas
cli
loopne
int
adc
ret
sahf
cmpsl
arpl
push
insb
lahf
mov
ret
inc
aaa
outsl
mov
cmp
xchg
lock
push
frndint
mov
inc
jbe
repz
lea
in
call
sub
add
lods
cmp
rorb
das
rolb
push
jno
leave
pushf
mov
pop
sub
test
push
mov
std
std
pop
mov
pop
fs
lods
pushf
in
or
push
iret
adc
daa
imul
mov
mov
dec
pop
ja
ds
cmp
jns
loopne
es
xchg
sbb
stos
rcrl
stc
cmp
or
aas
push
rclb
leave
insb
pusha
xor
inc
fsub
daa
das
movsl
mov
sbb
stos
mov
add
cmp
hlt
adc
sahf
push
pop
out
push
daa
movsl
lahf
push
add
imul
and
push
and
jge
test
fdivl
add
add
ret
cld
sub
mov
cmp
sti
sbbl
leave
js
cs
fimull
xchg
jo
movsl
ret
arpl
sub
dec
sbb
mov
into
addb
pushf
mov
push
pop
mov
push
mov
jmp
sub
xchg
movsl
add
fistpll
cmp
cltd
sti
mov
adc
ss
lcall
xchg
int3
xchg
inc
pop
sti
addr16
imul
cld
mov
je
jns
cmp
test
cmp
les
int
ss
cmp
stc
into
dec
mov
jb
mov
in
pushf
jp
mov
sbb
lds
and
fsubrl
jmp
inc
jne
push
rcr
icebp
inc
es
mov
dec
xor
inc
adc
jecxz
dec
aad
js
jne
popa
in
mov
jnp
mov
in
pushf
pop
cmp
or
pop
lret
xor
mov
test
ds
mov
mov
fsubrl
lock
jo
leave
push
adc
in
lcall
sub
icebp
in
push
mull
jg
faddl
aad
sbb
mov
push
imul
out
sub
cmpsb
clc
ss
imul
fsubl
in
outsl
ds
cmpsb
sbbl
out
fldenv
lock
xchg
inc
mov
add
mov
or
inc
mov
adc
sarl
mulb
mov
jge
sbb
fucom
into
pop
push
mov
ljmp
aam
jo
cwtl
es
sub
aas
or
aam
sbb
ror
and
les
repnz
jp
inc
out
sbb
and
pop
cmpsb
push
cwtl
enter
mov
insl
fstl
rorl
and
pop
test
push
out
test
pop
je
out
shrb
push
pushf
cmp
cmc
inc
leave
xor
cmp
rol
int
mov
das
jns
mov
jge
test
sub
mov
std
dec
jge
xor
loop
call
jnp
xchg
xchg
xchg
icebp
push
loope
mov
call
jge
mov
adc
incl
mov
mov
lock
negb
and
mov
cwtl
arpl
loop
mov
cld
push
cmp
pop
sbb
push
aaa
pop
jae
and
mov
xor
scas
rol
mov
outsb
push
not
out
into
jp
insb
iret
xchg
mov
push
mov
fstps
getsec
jp
inc
iret
adcb
push
aam
test
movsl
xor
pusha
xchg
fsts
ljmp
loop
sbb
xchg
sarl
pop
mov
or
xor
cmp
scas
add
sti
pop
addr16
inc
sahf
mov
sub
out
cmp
mov
cld
inc
movsb
addr16
stos
clc
push
pop
pop
pop
je
sbb
cmc
insb
lods
push
repz
in
ror
jecxz
inc
mov
xchg
rorl
test
mov
hlt
lea
xorl
lahf
sahf
xchg
xchg
sub
sbb
shld
lret
lock
fldln2
out
mov
mov
inc
imul
dec
dec
sub
ret
ja
push
fsubl
push
test
shlb
cmp
les
in
outsb
sub
divl
mov
sbb
jns
mov
dec
mov
xchg
pop
mov
push
int3
jl
movsb
test
sbb
aam
pusha
and
mov
dec
add
fstpt
mov
cwtl
and
stos
into
and
fldpi
push
mov
or
fdivrp
mov
pop
aam
shll
mov
pop
outsl
loop
lods
lahf
rcll
outsl
add
stos
mov
inc
sbb
out
icebp
xchg
cltd
arpl
push
int3
test
clc
fsubr
data16
fs
fists
lahf
data16
add
cwtl
xlat
and
dec
inc
or
mov
pop
aad
push
push
sbb
pop
sahf
mov
stos
loope
mov
ffree
filds
cmp
lods
mov
inc
inc
cmp
es
addr16
xchg
int
push
sub
pop
adc
xchg
fdivrp
test
add
jmp
push
shrl
lcall
mov
sbb
in
repz
inc
in
iret
movsl
adc
push
mov
mov
icebp
cmc
pop
xchg
icebp
js
cltd
inc
add
pop
mov
popa
in
ss
jl
out
jns
and
mov
stc
jbe
mov
sub
or
fwait
or
rol
stos
stos
icebp
mov
sub
cmpsl
addr16
dec
jp
inc
inc
cs
movsb
adc
cmpsl
cmp
mov
cmp
std
mov
lahf
inc
insl
sbb
ds
and
pop
fwait
cmp
iret
cld
mov
test
push
cltd
enter
jb
lcall
inc
cld
inc
into
xchg
rcrb
cmp
dec
dec
nop
gs
add
lea
adc
pop
pop
cmp
add
push
dec
pop
or
sbb
pop
mov
nop
mov
and
and
imul
or
arpl
dec
mov
clc
loope
jp
cli
push
pushf
adc
mov
hlt
test
cmp
or
push
mov
enter
je
mov
adc
scas
daa
add
in
xchg
psllq
orb
adc
popa
loop
jae
jne
or
dec
shlb
enter
xchg
sbb
adc
fs
je
iret
cltd
dec
aam
rcr
out
cmc
pop
js
cli
dec
push
jo
adc
mov
sti
out
and
std
or
ret
out
mov
cmp
jmp
jg
popf
arpl
cmp
loopne
xchg
mov
aad
pop
cmpsl
icebp
sub
fsts
repz
push
mov
dec
jecxz
add
addl
fs
xchg
cmp
xchg
ret
test
repz
cmpsl
cltd
call
lods
push
dec
loop
mov
inc
in
inc
or
cmp
arpl
add
aas
cltd
jo
shrb
pop
mov
mov
sub
out
push
ret
in
push
sbb
xor
add
adc
loopne
loope
xor
test
dec
inc
or
cmp
cwtl
mov
loope
stc
push
inc
repnz
dec
push
cmpsl
cld
push
daa
dec
repz
cli
cmp
pop
repz
in
mov
xchg
xchg
xor
popa
bound
scas
int3
into
in
jmp
ds
dec
adc
jb
subb
fistps
popf
rcr
cmp
pop
xor
and
dec
xor
cmp
jnp
sarb
mov
pop
inc
scas
outsl
dec
cmpsb
and
adcl
sbb
movb
lock
icebp
jmp
gs
adc
loopne
test
out
jecxz
imul
movsl
inc
outsl
sbb
shll
sub
arpl
int
inc
jb
jns
xor
mov
jbe
fists
push
fldt
push
inc
fwait
lcall
jbe
or
addr16
sti
mov
lds
addl
loope
jle
jg
pop
cmp
dec
arpl
push
add
jp
cld
jb
addr16
inc
scas
push
mov
hlt
cmp
push
leave
mov
rcll
mov
xor
mov
push
or
ret
lfs
shlb
ja
jg
stos
and
es
push
cmpsl
fwait
outsl
orl
inc
enter
addb
mov
xchg
and
dec
test
out
mov
ror
sub
ret
mov
shr
and
ss
cmp
pop
mov
insb
imul
ja
add
in
fsave
int3
xor
dec
stc
mov
popf
shlb
push
add
std
cmp
loope
push
fucomip
and
adcb
lcall
pop
imulb
lahf
cmc
fldenv
sti
lcall
mov
add
scas
mov
sahf
cmp
jle
scas
das
fbstp
mov
fiadds
test
cli
outsl
ss
test
sbb
xchg
fsubs
xlat
test
sub
test
pop
out
mov
sti
das
jbe
popa
push
fdiv
out
cmc
jg
fisttpll
addl
mov
sub
outsl
jno
cmp
add
mov
out
or
jmp
in
dec
iret
ljmp
aam
or
popf
nop
pop
mov
sbb
jb
cmp
mov
into
cltd
lock
xchg
adc
fs
add
or
inc
xchg
sub
popf
sub
jnp
bound
xchg
push
sub
jmp
cmp
cmc
test
xor
mov
ret
sti
mov
nop
repnz
adc
ljmp
outsl
add
andb
in
dec
fcmovbe
sbb
clc
cmpsl
sti
shll
inc
and
jecxz
or
and
xchg
lds
mov
and
mov
rorl
or
es
aaa
in
push
xchg
leave
jmp
sub
das
daa
orb
sub
std
cwtl
loop
cld
or
mov
fdivp
mov
jp
mov
bound
fisubrl
mov
cmpsl
into
jo
int3
mov
lea
dec
xchg
fwait
mov
push
xor
xchg
lahf
fiaddl
lret
iret
jnp
sbb
pushf
or
xchg
or
jbe
mov
xchg
lahf
or
push
push
mov
repnz
cli
das
fdivl
jns
pop
sub
icebp
pop
dec
and
pop
push
or
adc
inc
xchg
adcb
cmovb
dec
and
push
pop
add
pop
cltd
mov
mov
cltd
xor
mov
repz
sbb
ds
in
add
stos
pop
dec
dec
rcrl
inc
lret
xchg
inc
jle
test
notb
or
xor
pop
pop
push
push
ret
adc
movsb
dec
test
jno
loopne
scas
lret
jmp
jbe
stos
sti
mov
mov
xor
jae
mov
sub
adc
stc
fcompl
jle
dec
jns
xor
es
outsl
dec
fwait
jbe
add
dec
sbbb
shrl
mov
test
stos
mov
dec
push
movsl
push
jl
call
dec
and
lahf
out
adc
out
mov
xchg
hlt
or
out
xchg
int
pop
jecxz
or
clc
std
push
push
movb
jl
or
jp
cmp
xor
push
xor
xor
adc
addr16
outsb
loopne
push
test
lods
aam
iret
mov
bound
andb
or
xchg
sub
sub
test
out
out
push
or
push
movsl
cmc
push
mov
dec
xchg
das
imul
stc
out
mov
addl
lods
mov
mov
mov
jp
or
stos
jae
loope
pop
outsb
sbb
ret
adc
popa
inc
push
or
xchg
ficoms
push
data16
adc
push
int3
dec
jecxz
and
jae
cmp
mov
mov
mov
inc
jo
mov
addr16
test
mov
js
movsl
jae
lcall
in
mov
dec
stc
call
ja
or
and
in
orb
xor
and
cmp
sub
jns
or
into
in
pushf
sub
imul
cs
mov
inc
scas
mov
cmp
sbb
xor
lods
mov
mov
insb
cmp
outsl
xchg
pop
add
scas
mov
mov
dec
mov
jae
les
cld
dec
jns
pop
mov
xchg
adc
inc
dec
jb
cmpsl
mov
xor
iret
pop
inc
push
rorb
inc
adc
popf
aaa
out
xorl
pop
push
lret
insb
push
sbb
and
in
push
test
jnp
mov
sbb
insb
mov
mov
fwait
dec
pop
test
cmpsl
jnp
movsl
inc
cmp
fimull
fdivp
outsl
movsb
fwait
in
imul
adc
push
mov
mov
in
or
scas
and
cs
xor
jo
lcall
sbb
ja
scas
xor
cmp
outsl
pop
loope
fwait
loope
jg
test
jg
sbb
mov
in
dec
mov
adc
sub
andb
mov
mov
shrb
lea
mov
mov
fsub
outsl
sbb
cli
inc
xor
mov
sub
add
jns
loope
pop
sub
mov
ljmp
outsb
mov
xchg
mov
es
push
and
out
or
jb
pop
fndisi(8087
and
jns
aad
iret
out
fcmovnbe
jbe
cmp
push
mov
stos
inc
inc
outsb
ret
pop
jecxz
or
dec
jae
add
sbb
push
dec
jne
in
mov
arpl
addb
push
sti
mov
lcall
mov
dec
rcrl
pop
adc
ffreep
or
adc
mov
shlb
pop
test
outsb
nop
into
fildl
aam
xchg
jo
ja
push
sbb
daa
dec
fistl
jle
scas
inc
addr16
lds
sub
notl
mov
sbb
aas
mov
pop
add
lea
flds
outsl
ret
mov
test
sahf
das
add
push
in
dec
mov
jg
xor
add
pop
rcll
lret
push
inc
xor
jmp
into
xor
js
sbb
sub
push
ljmp
xor
sahf
dec
pop
xorb
mov
mul
fs
push
rcr
clc
or
js
out
outsl
sbb
add
bound
rolb
jbe
aam
inc
imul
push
inc
outsb
adc
xor
cmp
add
and
cmp
mov
outsl
loopne
xchg
loopne
addb
frstor
xchg
das
lcall
fdivrl
sbb
je
push
adc
xor
cmp
mov
leave
pop
push
stos
aas
inc
mov
sub
stos
and
push
push
aas
push
ret
sbb
mov
adc
and
inc
sub
test
pop
pop
lcall
stc
or
mov
add
mov
movsl
and
pop
ret
cmp
dec
sbb
popf
aaa
push
mov
sbb
pop
rcll
mov
in
fidivl
sub
cltd
push
cmpsl
and
int
mov
pop
xchg
xchg
dec
loopne
inc
out
push
cli
insl
jns
cmp
cmp
and
pop
outsb
jns
rcr
and
shll
aaa
mov
sbb
or
ja
les
xchg
jp
pop
xor
dec
les
mov
inc
mov
out
hlt
inc
sub
sub
xchg
pop
or
and
mov
or
ja
sub
adcl
test
rcrl
fimuls
out
and
daa
push
mov
add
add
out
mov
lock
leave
rcll
loop
xchg
lcall
stos
loop
adc
cmp
fs
xor
sub
rorl
lock
fcmovne
sub
js
aad
into
int
dec
filds
mov
push
jg
cmp
clc
cmp
aas
xor
ja
adc
inc
push
sbb
adcl
push
inc
or
or
mov
dec
imul
pop
pop
test
pop
fsubl
adc
xlat
negl
rorl
mov
jge
aam
and
das
add
imul
out
cli
jl
std
inc
lcall
sub
pop
sub
int3
int
mov
stc
mov
dec
call
addr16
xchg
mov
mov
lock
mov
sub
jne
nop
mov
lcall
push
and
jnp
dec
ud2
mov
dec
mov
in
mov
sti
pusha
lret
xchg
sub
adc
sbb
out
pop
ljmp
test
or
or
cmpsb
or
call
jmp
das
cmp
scas
nop
imul
mov
sub
cmp
je
xor
clc
scas
sub
sub
ss
adc
adc
insl
inc
inc
jb
add
gs
pushf
mov
inc
adc
inc
les
std
jo
aaa
decl
jb
es
push
jecxz
mov
lock
jb
or
push
dec
clc
mov
add
iret
cmp
xor
je
cmp
mov
js
ds
jl
push
mov
ss
sub
inc
lret
add
jl
lods
addb
mov
pop
sbb
ss
test
mov
jle
imulb
push
xchg
inc
test
int
cmc
imul
in
popa
and
mov
mov
jb
sub
jae
dec
loopne
dec
sub
fdiv
int
cmp
dec
dec
pop
sbb
mov
jo
adc
push
cmpl
divb
shr
push
and
ljmp
pop
and
mov
imul
push
aaa
or
repz
fimuls
data16
out
jnp
loop
or
push
add
mov
mov
je
mov
shrl
dec
mov
jnp
movsl
int3
jno
mov
loop
adc
pop
dec
aas
movsb
imul
adc
lock
mov
ss
test
adc
cmp
nop
outsl
lods
js
mov
std
aam
ret
xchg
fdivrl
jecxz
cmp
cmp
dec
rcr
ja
arpl
push
add
mov
into
add
inc
daa
out
popa
lcall
push
inc
push
cli
fnstsw
lret
test
dec
nop
js
cmp
adc
scas
and
leave
pop
pop
lds
fdivs
cmp
adc
fcmovnbe
ret
lods
cmpsl
lcall
jmp
inc
ds
out
xor
xchg
mov
sahf
imul
push
scas
test
inc
mov
sbb
adcl
lcall
mov
push
jns
dec
jnp
dec
jo
jge
dec
xor
stc
mov
xchg
es
or
jge
dec
mov
sub
lahf
es
xlat
sti
adc
test
push
testb
adc
scas
femms
jbe
lret
int
push
sub
jl
ds
adc
dec
mov
mov
or
jae
cmc
mov
lcall
outsl
int
dec
sbb
ljmp
pop
les
test
and
dec
push
ret
jb
jg
in
je
and
ror
mov
aaa
js
inc
iret
push
or
rol
push
lods
enter
cltd
sub
std
popf
mov
push
daa
fnsave
xchg
mov
and
mov
outsb
inc
out
scas
testb
xor
int3
insb
sub
pop
in
loopne
inc
push
xchg
pop
push
pop
push
mov
mov
xchg
xchg
leave
data16
mov
and
jo
pop
sub
fstps
add
xor
je
je
lods
add
call
xchg
ret
bound
sbb
mov
xor
div
xor
jg
movsb
fists
fisttps
mov
inc
jle
sbb
je
and
xor
inc
imul
sub
in
pusha
call
fiadds
bound
mov
ss
test
ss
mov
lock
or
movsl
xorb
popf
jae
jns
rep
pop
jg
in
jp
js
mov
xor
imul
push
fidivrl
pop
inc
pop
cwtl
lods
out
daa
add
lahf
mov
out
add
inc
cmp
sub
xchg
and
inc
mov
in
push
cwtl
test
cli
mov
adc
frstor
inc
addr16
testl
in
sub
repz
jp
lret
mov
cmc
mov
in
rclb
sti
push
sbb
mov
jge
shlb
xchg
dec
or
repz
pop
cwtl
imul
xor
cmpw
stc
jmp
and
mov
ficoml
jnp
data16
sahf
push
mov
xchg
outsl
es
in
pop
push
inc
icebp
popa
dec
aam
scas
jmp
testb
pop
dec
or
inc
push
in
cmp
das
testl
cmp
pop
jae
xchg
pushf
cmpsb
xor
or
mov
test
mov
movsb
push
in
adc
xchg
stos
or
mov
xchg
rolb
movsb
outsb
cwtl
mov
ret
ret
and
sbb
pop
out
fs
push
shlb
jbe
push
mov
jb
pop
inc
mov
push
ret
lds
sti
push
mov
cmp
test
sarl
or
and
xchg
iret
sbb
js
xchg
push
or
mov
cmc
add
into
sub
push
sbb
out
dec
xchg
cmp
jl
sub
rcll
fnsave
orb
mov
add
adc
repnz
aaa
fistl
shll
xadd
scas
in
cmp
mov
iret
stos
movsl
adc
js
xchg
pop
popa
test
mulb
mov
sbb
hlt
cmc
sbb
xchg
or
xor
cli
loop
fimuls
inc
or
and
repnz
pop
xor
sbb
jb
sbb
jns
cmovne
lock
inc
and
in
sbb
ljmp
pop
dec
push
mov
cmpsl
leave
outsl
sbb
test
cmc
xchg
dec
push
lods
cmp
rorl
stc
cmp
xchg
call
negl
xor
xor
inc
and
or
lcall
add
inc
jmp
imul
into
cmp
rcll
inc
test
pusha
mov
mov
xchg
rol
cld
popa
mov
cmpb
lret
push
stos
jb
sbb
xor
pop
addr16
popf
andb
test
je
pop
stc
dec
lods
lahf
aam
pop
int3
and
clc
mov
inc
push
inc
inc
push
inc
jle
je
add
inc
sbb
pop
ficomps
xor
movsb
jp
loope
out
cmp
cmp
adc
arpl
mov
fucomi
inc
jo
jo
xor
cmp
xchg
in
add
jne
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
lahf
stc
aaa
jp
popa
pop
bound
sub
cmp
shl
stc
testb
lock
stc
ret
or
inc
add
mov
push
cmp
xor
fs
shll
mov
mov
lods
lea
inc
lods
mov
mov
mov
dec
mov
leave
add
adc
xor
jbe
mov
repnz
les
jg
ret
push
rcl
mov
cwtl
gs
add
mov
and
pushl
inc
sbb
xchg
sub
jmp
jl
xchg
mov
jae
mov
xchg
jl
jae
stos
inc
cltd
mov
pop
data16
mov
push
popf
out
rorb
mov
xchg
cli
daa
jae
lock
repnz
sti
fistpl
repnz
dec
movsl
mov
and
push
sub
dec
rorb
dec
bnd
fsubl
pop
aaa
int
gs
pop
nop
ret
jnp
adc
in
push
addr16
dec
test
pop
leave
outsl
sti
and
sbb
into
xchg
aad
pushw
push
rolb
pop
cmp
add
mov
icebp
lea
add
notb
or
bound
mov
fstpt
pop
sub
je
cltd
out
cmp
clc
sbb
jl
dec
je
mov
fnstsw
pop
and
aas
mov
cmp
daa
lret
push
xor
into
test
xchg
addr16
add
pop
jne
mov
and
inc
sbb
jmp
or
pop
inc
or
ror
jg
int3
test
jnp
roll
inc
cli
test
loopne
test
adc
mov
shlb
je
inc
std
or
out
add
stos
sbb
pop
mov
negb
cmp
add
push
fadds
scas
sbb
mov
lret
lret
xchg
das
mulb
jecxz
xor
sbb
jmp
dec
roll
inc
sub
jecxz
xchg
loope
push
push
xor
ucomiss
ljmp
xor
iret
ret
hlt
in
icebp
sbb
xadd
push
sahf
jg
cli
add
lret
in
cmpsl
cmp
out
xor
movsb
fs
mov
mov
add
mov
cmp
clc
mov
mov
cmp
int
add
sbb
inc
dec
in
rclb
xchg
int
fdivl
mov
mov
je
arpl
add
jae
cwtl
xchg
mov
aas
popf
scas
stos
rcll
cld
xchg
aam
or
test
cltd
fwait
aad
mov
sbb
xlat
vmovntpd
dec
dec
inc
cmpsl
in
mov
xchg
inc
pop
and
inc
sarb
adc
cmp
push
xchg
mov
loopne
ljmp
and
lret
or
sub
imul
xchg
imul
and
push
or
lcall
gs
push
sbb
adc
jnp
inc
outsl
jl
test
adc
adc
pop
jno
inc
mov
cmp
lahf
movsb
inc
clc
dec
or
push
sbb
jecxz
sbb
mov
outsl
add
fwait
les
mov
mov
fildl
icebp
inc
pop
xor
out
addr16
loopne
mov
cs
icebp
rclb
fisttpll
and
mov
mov
out
mov
aas
jno
mov
cmc
cmpl
lcall
cli
scas
into
add
call
out
sub
rol
fdivs
test
and
rorb
fstpt
orb
pop
and
cmpl
adc
push
fildll
inc
mov
sahf
ds
test
cli
pusha
lods
or
and
mov
ds
xchg
ret
cli
inc
jne
outsb
or
dec
xchg
fildll
sbb
dec
sbb
imul
mov
mov
dec
push
ja
mov
mov
jae
xor
sbb
test
rclb
out
jne
pusha
shl
mov
inc
jb
dec
cmpsl
pop
repz
and
sbb
stos
fstpt
cs
xor
xchg
lock
push
scas
inc
gs
lock
pop
ror
ret
mov
fsubrp
lods
enter
mov
aam
push
call
or
xchg
leave
pop
rcrb
pusha
les
pusha
rclb
popa
inc
out
out
notb
scas
fstl
pushl
popa
lcall
xchg
jp
adc
jecxz
mov
inc
sub
dec
and
test
add
add
les
in
inc
shlb
xchg
lret
push
xor
mov
mov
pop
aas
scas
inc
sub
mov
adc
rclb
outsb
cmp
nop
mov
fchs
cmp
xor
mov
xor
pop
jno
add
xchg
pop
test
jmp
and
sti
cmp
mov
and
inc
push
dec
testl
out
lahf
ret
xchg
rcrl
sbb
or
ja
mov
bound
fs
mov
andb
jge
push
add
pop
repnz
movsb
enter
push
add
sub
or
xchg
lds
int3
mov
mov
push
and
fsubrl
xlat
call
lea
ret
push
sbb
mov
cmp
movsl
jle
mov
and
popa
dec
xor
ljmp
in
shll
pop
adc
cs
aaa
insl
jp
xchg
push
out
jns
rcll
in
repnz
insb
iret
cmp
cmp
popa
stos
dec
orl
lods
faddl
mov
icebp
dec
js
aam
jb
data16
mov
mov
or
add
rcrl
or
xlat
je
xchg
push
mov
xlat
dec
inc
repz
cltd
inc
xchg
push
stos
loop
cmp
push
dec
inc
mov
movd
add
mov
mov
jg
sbb
fld
andb
mov
insl
pop
adc
or
iret
call
adc
inc
jl
popf
repnz
lods
lods
lea
xor
stc
mov
xchg
or
sarl
in
jge
sub
pop
call
xchg
jge
lea
mull
lock
sahf
jle
xchg
outsl
push
aam
aam
std
dec
xor
mov
push
sbb
loopne
inc
aad
scas
iret
add
in
int3
or
call
xchg
push
sbb
addr16
sub
inc
rcll
out
int3
pusha
sub
jb
push
sub
scas
ljmp
int
adc
xorl
mov
das
and
add
add
in
cmovge
mov
mov
xchg
cmp
jl
lret
xchg
aad
xchg
mov
sub
jb
xor
sub
arpl
add
rcl
lahf
dec
cmpsl
sub
fidivrs
mov
and
cmp
aas
xchg
orps
add
dec
out
jge
jle
push
push
shll
sbb
mov
fwait
pop
fadd
jge
xorb
mulb
or
fstl
aam
mov
call
aad
bound
cvtpi2ps
bound
aad
test
cmpsb
outsb
ljmp
jno
cli
xchg
adc
jns
in
mov
inc
sysret
mov
icebp
fs
mov
push
rcll
into
jns
mov
popa
mov
mov
shrb
xlat
imul
jae
lds
aad
popf
outsb
cmpsb
std
fs
jne
std
mov
aas
movsb
jp
push
mov
outsb
loope
loope
daa
arpl
int
pop
sbb
into
cmpsb
lods
pushf
adcl
enterw
jle
or
test
pop
in
int
inc
xor
dec
pop
cmp
or
ljmp
pop
clc
or
and
sub
jle
xchg
leave
lds
ret
jb
or
adc
mov
imul
mov
hlt
call
sub
push
mov
sbb
inc
mov
and
mov
sbb
xor
jno
sub
inc
shl
mov
cmc
pop
or
cmp
pop
xchg
sub
jmp
jns
outsl
andb
mov
lahf
xor
xor
xor
and
cs
in
in
and
out
imul
stos
lock
push
mov
ja
jle
push
popa
andps
mov
sbb
shlb
dec
in
adc
adc
je
pop
adc
ss
repz
jnp
sbb
or
fistps
and
test
dec
and
out
cld
aas
mov
add
pop
mov
and
test
sbb
mov
mov
lock
dec
ss
sbb
hlt
and
dec
pop
adc
outsb
and
je
pusha
add
push
xlat
mov
or
scas
sub
mov
test
ljmp
adc
inc
jp
fdivrs
push
pop
sub
fimuls
push
rcrb
iret
ret
fwait
scas
cli
aas
or
inc
loop
je
test
stos
jecxz
adc
stos
scas
les
lods
xlat
sub
mov
inc
outsb
dec
popa
in
popa
fwait
xchg
arpl
xchg
adc
cli
inc
mov
inc
int3
movsb
mov
dec
add
movsl
sbbl
mov
lds
adc
pusha
push
ret
pop
push
iret
icebp
test
pop
pop
ret
lret
or
mov
cli
add
push
xchg
arpl
mov
adc
lret
add
sarl
popa
sub
std
pop
cmp
mov
ljmp
in
mov
dec
cmp
xchg
inc
jb
mov
pop
xchg
cld
add
jns
mov
jno
insl
xchg
dec
std
pushf
inc
add
in
cmp
in
into
movsb
in
jmp
mov
mov
mov
das
mov
pusha
insl
pop
test
add
dec
mov
int3
loope
test
idivl
lds
mov
cltd
sub
into
dec
xchg
dec
xlat
test
xchg
and
sub
dec
stos
jmp
jmp
test
push
fwait
jno
mov
pusha
mov
dec
ljmp
push
filds
fisttps
scas
gs
pop
in
imul
in
xorb
je
mov
ja
inc
dec
jnp
mov
pop
aaa
imul
push
or
out
jno
jno
rolb
sub
xor
idivl
jnp
aam
xchg
nop
inc
xchg
jae
add
push
or
adc
add
and
stos
sbb
jbe
inc
mov
add
pop
dec
dec
jns
enter
push
mov
xlat
push
insb
or
adc
les
gs
into
out
pop
in
jle
loope
sub
jb
cs
mov
or
loop
es
or
xchg
and
xchg
es
push
das
and
jmp
inc
test
fstpl
jae
sub
pop
pop
push
dec
stos
xchg
out
inc
and
pop
pop
mov
cs
jno
sub
mov
mov
mov
imul
mov
add
xlat
pop
pushf
bound
lods
into
test
lret
mov
dec
lock
lret
lret
pusha
and
imul
arpl
push
scas
lcall
xor
sbb
mov
movsb
negl
out
or
mov
popa
xchg
bswap
aas
mov
imul
cmp
mov
or
lock
push
xor
mov
les
popa
in
dec
xor
ds
adc
sub
mov
mov
movlps
cmpsl
xor
stc
into
out
frstor
cmp
pmulhuw
cmp
or
gs
dec
lods
jle
push
cmpsl
loopne
cmp
aad
repnz
repnz
clc
in
test
xchg
scas
ret
xchg
sub
xor
popf
jo
sbb
push
shrb
xor
cmpsb
jo
add
dec
aam
and
sub
push
mov
stos
mov
outsl
jp
mov
icebp
les
or
sub
movsb
pop
add
push
push
rcrb
negl
rcr
add
add
addb
jmp
cld
lcall
data16
iret
test
or
fistps
ret
stc
aad
call
cmpsl
cld
cs
lret
sahf
push
jnp
xchg
addl
pop
push
sub
cmp
mov
sbb
cld
sbb
mov
ss
adc
dec
xchg
sbb
orb
mov
jge
sahf
mov
loope
movb
mov
mov
fbstp
std
test
mov
add
mov
or
mov
and
sahf
fs
test
es
dec
xchg
testb
xchg
or
mov
repnz
cmp
dec
cmpsl
adc
out
lret
sub
lret
fwait
jg
mov
and
inc
mov
jle
pop
lea
mov
xor
dec
out
outsb
push
leave
idiv
sub
stos
repz
adc
leave
stos
pop
dec
addr16
jl
aad
mov
loop
jae
jg
sub
sbb
mov
xchg
xor
frstor
decl
fidivs
inc
push
mov
push
jno
pop
ja
xlat
dec
sbb
adc
sahf
lods
imul
jo
in
mov
leave
nop
add
aaa
and
inc
jecxz
aam
cmpsl
in
xchg
int3
data16
sub
xchg
jmp
repz
mov
jno
mov
jecxz
pop
dec
arpl
sti
xchg
xchg
pop
xchg
je
in
lock
cmp
cmp
pop
mov
sti
iret
es
jmp
fiaddl
sbb
insl
out
adc
cmp
cmp
sub
mov
ret
push
pushf
mov
ss
scas
push
add
xchg
mov
jb
jl
mov
dec
call
sahf
push
add
add
fcompl
and
push
xor
add
stc
rcr
push
std
dec
outsb
pop
das
sbb
jp
loop
sub
xchg
jbe
push
or
loope
cmp
mov
lahf
leave
mov
mov
aam
jl
pop
dec
ds
popf
xchg
jno
jg
xchg
add
push
push
sarb
cltd
mov
cltd
mov
adc
dec
fdivs
dec
xor
arpl
cld
cmpsl
pop
sbb
mov
or
xchg
pop
xor
push
push
out
jmp
filds
aad
push
les
ftst
arpl
daa
daa
repnz
mov
stos
push
fsubl
leave
adc
iret
ret
cmp
mov
icebp
mov
adc
xchg
xchg
push
fsubrl
lods
push
jle
sbb
mov
cs
fdivs
sbb
fldl
xor
lea
xor
repnz
dec
lds
jecxz
inc
xchg
adc
imul
leave
arpl
mov
imul
popa
jae
imul
mov
in
sbb
adc
pop
jb
out
outsb
sbb
pop
mov
rorb
cmp
es
js
lods
mov
cmp
ss
test
cmp
jne
ds
jecxz
or
mov
fisttps
mov
ljmp
jb
cmpsb
ja
jge
dec
mov
cmp
mov
add
add
adc
xchg
adc
cmpsb
mov
push
rorl
scas
movsb
std
cmc
mov
test
mov
and
out
mov
adc
xor
xchg
push
in
mov
jecxz
xchg
sti
loopne
arpl
jnp
inc
rcrb
sbb
inc
jne
cli
lock
jge
aas
dec
pop
and
dec
pop
into
icebp
or
push
mov
lock
clc
add
sbb
and
sti
fnstsw
mov
push
add
dec
stc
cmp
in
dec
loop
add
mov
xchg
mov
push
fcom
push
or
movsb
mov
dec
test
bound
mov
fiaddl
shrl
mov
iret
lea
xchg
int3
sahf
call
and
and
push
pop
dec
insl
pop
xor
and
add
arpl
repnz
cltd
ja
int
push
push
das
test
push
jp
mov
or
ds
mov
push
ss
and
push
adc
sarl
movsb
rcll
movsb
dec
inc
les
in
cmp
daa
xor
in
jnp
adc
cld
popf
xchg
sbb
loopne
test
cmpb
dec
daa
in
jle
mov
cs
mov
stos
cmc
mov
xor
stos
jne
pop
lret
mov
mov
stc
fwait
orl
js
jnp
stc
jne
sub
jecxz
and
loope
pop
adc
adc
jo
xchg
jmp
cmp
jecxz
popf
xor
mov
mov
mov
push
inc
mov
sbb
pop
xor
repnz
jb
xor
arpl
push
imul
mov
mov
jl
mov
inc
push
jnp
sbb
pop
fisubs
mov
das
sbbl
ret
loopne
sti
mov
aam
xor
icebp
xchg
ss
add
std
fistps
pop
das
mov
cmp
sub
sub
shlb
pop
aas
push
test
subb
jle
sti
sti
xlat
jno
and
call
rorb
mov
fwait
test
neg
std
push
sbb
subl
test
rolb
sti
mov
lods
xchg
int
ret
arpl
add
push
sbb
je
jb
pop
jg
sbb
shl
mov
cmp
jb
push
pop
lahf
inc
xor
mov
or
mov
jge
jg
subl
je
dec
in
inc
inc
dec
pop
adc
jns
pop
scas
inc
adc
mov
and
xchg
daa
push
add
aam
dec
jb
out
mov
fildl
daa
rorl
jbe
mov
add
cwtl
add
pushf
enter
cmp
icebp
fidivrs
mov
pushf
pop
test
pop
fmull
sbb
cmpsb
xlat
push
lgs
mov
sahf
sub
push
push
mov
push
add
pop
in
inc
out
lcall
in
loop
pop
adc
mov
loop
mov
repz
mov
movb
test
idivl
push
and
popf
shrl
sbb
cli
fnstcw
push
xor
mov
adc
imul
jne
ds
clc
mov
sub
out
cwtl
sti
imul
push
jae
lret
shl
mov
dec
gs
jecxz
mov
add
jb
push
test
mov
fs
cmp
enter
movsb
jbe
iret
adc
pop
loop
or
adc
lcall
dec
cmp
jno
movl
cltd
and
inc
mov
mov
test
adc
mov
int3
outsb
scas
inc
sti
loop
popf
cmp
and
cmp
xor
pop
dec
rorb
arpl
push
adc
xor
push
jmp
daa
sbb
xlat
sub
cmp
fnsave
mov
and
sbb
mov
add
fnstsw
jp
xchg
test
lea
xchg
lods
and
sti
cmc
cli
iret
scas
dec
pusha
mov
arpl
pop
lret
sbb
pop
push
sub
inc
fnstsw
mov
jmp
jbe
lock
jns
dec
xor
jge
or
sbb
aad
mov
cmc
es
or
adc
adc
clc
das
icebp
push
dec
loope,pn
subb
pop
mov
loop
sbb
xor
push
add
int
and
and
cmc
xor
repnz
aaa
test
sbb
fcmovnu
aam
shll
fisttps
outsb
mov
dec
dec
hlt
js
mov
adc
jb
mov
popf
div
mov
leave
imul
data16
sub
lods
jge
jl
sbb
fcomps
xor
mov
sbb
xor
jb
jp
adc
ret
lcall
inc
and
xor
cmp
or
lret
mov
add
mov
call
repnz
pop
push
loope
mov
test
loope,pn
xlat
in
jno
jb
sub
out
in
mov
mov
inc
movsb
sub
push
dec
jle
or
ljmp
pusha
fisubrl
sub
mov
int3
out
cmc
pop
jns
pusha
ss
sub
lds
pop
mov
lods
sbb
in
lret
out
jnp
mov
mov
enter
jmp
mov
mov
outsb
loopne
push
cmp
push
adc
mov
rcrb
rcr
push
int3
lds
or
shll
jb
add
lods
mov
pop
xor
nop
jb
add
mov
pop
ret
dec
data16
jb
movsb
add
int
cmpsl
test
pop
dec
loope,pt
push
xchg
les
pop
outsl
mov
into
xchg
pop
cs
xor
sti
inc
mov
or
test
sbb
mov
jbe
jne
add
xor
daa
mov
cmp
inc
mov
cmp
jmp
mov
push
fcmovnb
dec
jbe
ljmp
push
mov
mov
sarl
loop
sbb
adc
ja
mov
nop
orl
dec
dec
pusha
and
jmp
lods
mov
bound
out
sbb
loope
and
lcall
xchg
stos
lret
mov
out
mov
out
jecxz
pop
mov
sub
lret
mov
ljmp
xlat
imul
add
jle
enter
mov
fnsave
xlat
pop
pushf
mov
jnp
sub
mov
clc
xchg
imul
add
cmp
mov
fiaddl
mov
mov
fwait
mov
jg
aas
add
stos
int3
test
pusha
cld
cmp
pusha
imul
sub
xchg
inc
sub
xor
xchg
push
and
adc
mov
xor
mov
and
adc
adc
test
mov
pop
mov
adc
adcb
loope
ds
xchg
mov
mov
shl
je
aaa
dec
sbb
fisubs
push
adc
ud2
mov
bound
cmp
punpckhwd
stos
cmp
test
scas
ds
adc
loop
or
jae
pop
xchg
or
and
jle
stos
outsb
xor
in
inc
jne
dec
jns
mov
in
out
xchg
cmp
lds
gs
lret
lds
nop
xlat
mov
jle
push
jge
mov
push
inc
cmpsb
roll
fstpl
xchg
add
repz
cltd
xor
pop
dec
es
jmp
mov
adc
fdivs
sbb
jge
fsubp
or
sub
push
push
add
outsb
and
pop
sbb
push
xor
std
mov
popl
adc
xchg
insb
xchg
jle
push
xlat
push
or
insl
movsl
addr16
hlt
cmp
or
add
xchg
push
sub
popa
xchg
incl
add
aaa
jno
cli
mov
sahf
pop
aam
ljmp
orl
pop
adc
xor
or
mov
mov
mov
fcmovne
mov
fwait
or
lcall
int
push
mov
and
mull
inc
push
out
mov
push
sub
lock
jae
and
je
mov
sbb
stos
leave
inc
jnp
imul
rcrb
mov
jno
mov
pop
pop
jne
ror
jl
sbb
mov
lcall
cmp
scas
pusha
sti
ret
push
shrb
loop
fldcw
divb
mov
in
ljmp
xchg
inc
or
sbb
ret
push
xchg
xor
xor
and
sub
stos
test
loope
mov
mov
sub
dec
adc
repz
and
fnclex
test
dec
and
adc
jle
xor
xor
test
iret
mov
int3
fwait
or
adc
lret
cmp
cmp
xlat
push
stos
push
out
popf
jno
jnp
movsl
mov
mov
mov
frstor
mov
push
imul
cmp
test
inc
lds
enter
lods
pushf
xchg
or
adc
mov
rolb
in
test
ja
out
in
pop
jge
inc
imulb
add
inc
loop
in
sbb
pop
insl
adc
xchg
pop
xor
xchg
add
mov
mov
out
jge
jle
inc
mov
fsubl
scas
mov
mov
pop
pop
inc
adc
rorb
mov
leave
pop
or
loopne
jo
cmpsb
mov
jbe
popf
cmp
gs
mov
inc
aas
mov
into
imul
pop
xor
xor
xor
cmp
mov
inc
pop
stos
test
cmpsl
adc
test
ret
xor
xchg
xlat
inc
push
push
pop
leave
test
mov
int
cmpl
iret
mov
mov
push
fistl
fmuls
add
push
adc
mov
shlb
popa
add
sbb
and
push
cmp
or
xchg
out
adc
cmp
sbb
mov
cmc
adc
fisubrs
mov
pop
cmp
xchg
test
adc
mov
xor
xchg
hlt
mov
dec
and
andb
lds
out
mov
mov
sti
sub
sub
mov
push
sbb
leave
nop
mov
pop
inc
test
jmp
sub
js
xor
xchg
call
sbb
jns
sbb
push
push
or
mov
add
pop
pop
xlat
push
pop
lret
xor
bnd
fcmovne
popf
or
scas
jae
les
dec
mov
and
xchg
push
mov
dec
loop
pop
leave
ja
adc
pop
out
pushf
ret
sahf
sbbb
ficomps
fcoms
rorl
or
cmp
movsl
cs
add
add
mov
into
sub
or
xchg
inc
sarl
mov
test
push
dec
xchg
subl
xor
add
sbb
push
sbb
jns
loopne
and
xchg
add
mov
and
xor
popa
mov
or
jno
in
sub
jecxz
cmc
cmp
inc
out
dec
cmpl
test
ret
movsb
mov
dec
xorb
jmp
and
ljmp
inc
js
lret
mov
xchg
aaa
mov
jecxz
sti
xchg
ret
aam
notl
pusha
push
jns,pn
mov
xchg
mov
and
inc
cmp
jno
cmpsl
arpl
stos
js
addb
add
mov
or
lods
mov
mov
mov
ret
je
aaa
outsb
inc
test
in
dec
push
popa
or
ret
dec
pop
xor
push
shll
dec
lea
sub
test
lahf
std
in
jp
adc
jmp
mov
arpl
aaa
jp
je
add
mov
and
je
jp
dec
adc
cmpsb
leave
repz
sub
push
loope
shl
mov
test
jnp
mov
outsl
int
mov
scas
dec
sub
mov
into
sub
ret
pop
pop
and
rorl
leave
loop
ret
inc
push
outsl
stc
sub
aas
dec
push
mov
push
fwait
jbe
xor
arpl
jmp
into
xchg
inc
popa
sbb
sub
mov
sbb
push
xor
push
mov
sub
mov
and
and
lcall
sub
sbb
xchg
insb
inc
iret
imul
jo
sub
push
dec
stc
inc
ja
sbb
es
xor
dec
ds
xchg
mov
int3
or
adc
sub
test
fcoml
jmp
testb
insb
pop
add
imul
mov
scas
repnz
inc
aaa
pushf
xor
stos
add
mov
icebp
out
int3
sti
test
lret
pushf
cmpsl
jl
faddl
in
add
lods
cli
clc
and
js
mov
fs
testl
lret
rcr
popa
lret
cli
xchg
adc
test
add
dec
mov
inc
sub
xchg
jno
shll
loopne
jp
mov
push
xchg
xor
jb
mov
push
sub
pop
fnclex
arpl
sub
or
xchg
adc
xchg
daa
mov
and
mov
add
and
sub
and
xchg
push
mov
in
cmp
xchg
jb
pushf
lods
mov
cmpsb
xchg
mov
ret
cmp
dec
push
add
pop
sub
insb
push
pop
loop
ret
mov
mov
shlb
sub
out
mov
movsl
addr16
fwait
xor
into
fisubl
shll
push
push
orb
mov
out
cwtl
xchg
fsubs
stos
repnz
pop
jl
icebp
adc
loopne
cli
mov
push
sbb
xor
adc
push
xchg
inc
repnz
ret
out
scas
xor
setb
cmpsl
dec
sub
jbe
out
icebp
loope
stos
int3
in
push
or
jns
lahf
incb
fcoms
mov
sub
push
push
mov
adc
in
aam
mov
sbb
sti
xchg
xor
jmp
jmp
std
mov
fisttps
ja
call
cli
mov
push
arpl
adc
fildll
js
mulb
mov
xor
pop
add
push
repnz
jns
pop
addr16
inc
imul
ljmp
push
je
or
push
push
outsl
sar
test
bound
es
or
rorl
imul
xchg
jo
jo
add
aad
fcomps
adc
std
dec
jbe
xchg
fsubrl
stos
cld
cmp
sbb
cmpsb
pop
sbb
ret
in
pop
pop
mov
jp
repnz
jmp
mov
addr16
add
push
pop
sub
push
jle
mov
inc
inc
xchg
pop
sbb
in
or
dec
adcb
adc
cs
mov
xchg
call
cmpsl
movsl
fbld
jns
notb
mov
sbb
iret
test
sbb
in
pop
xor
fwait
jbe
mov
inc
mov
stos
dec
push
fxtract
pushf
pushf
mov
fistpl
data16
mov
push
adc
sbb
xchg
outsl
lods
sub
sbb
mov
mov
sub
es
sub
dec
jge
jns
mov
sub
daa
scas
imul
cmp
test
out
stc
jge
push
sub
mov
iret
inc
ja
and
pop
mov
cmp
add
das
add
or
mov
aas
dec
adc
ds
adc
xchg
add
add
add
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
jnp
filds
popa
pop
bound
jg
xor
dec
inc
repnz
shrb
mov
fbstp
popa
rorb
shlb
fistl
sub
into
outsb
mov
jle
push
and
into
xor
xor
cmpl
movsb
lods
xor
dec
inc
stos
ja
repz
pop
pop
mov
insb
loopne
loope
pop
mov
mov
fimuls
ret
ss
add
jp
repz
subl
push
das
dec
ss
jp
aaa
push
fbstp
popf
sbb
out
jmp
adc
das
fwait
jmp
and
leave
inc
mov
dec
addr16
xchg
iret
int3
inc
and
mov
popf
pop
cmpsb
icebp
lahf
arpl
sub
scas
xor
push
push
and
xchg
pop
inc
xor
mov
daa
ret
jecxz
insb
adc
push
pop
das
outsb
das
push
test
add
cmp
xlat
imul
fisubrs
inc
ds
xchg
pop
jle
cmp
leave
add
dec
lods
pop
sbbl
into
mov
rclb
adc
add
sbb
adc
adc
sub
push
idivl
popa
loop
add
aad
jb
in
sbb
fildl
stos
adc
xor
sbb
jecxz
push
mov
dec
icebp
std
lock
mov
pop
sbb
jno
adc
imul
push
pop
push
fscale
jo
pop
adc
sahf
test
and
aam
pop
mov
pop
adcb
pop
addr16
insb
js
repz
jne
imul
ffreep
inc
in
outsb
daa
in
inc
and
push
es
stos
xor
aaa
dec
imul
xchg
jmp
mov
xchg
jl
xchg
inc
enter
out
jl
push
fsubl
push
pop
xchg
adc
scas
xor
ss
aam
pop
pop
xorb
in
lahf
movsb
hlt
hlt
in
outsl
jnp
push
mov
lods
rolb
pop
push
mov
leave
call
dec
scas
inc
notb
pop
push
fwait
aas
icebp
lret
fs
mov
fsubrs
dec
je
mov
push
int3
lods
cmp
xchg
insl
dec
mov
pop
pusha
lcall
push
addr16
das
aad
xor
call
out
je
into
inc
push
insl
sbb
hlt
rclb
cltd
push
jecxz
std
iret
mov
popf
fcmove
fs
cli
loopne
loope
aad
iret
inc
movl
test
cwtl
push
scas
sub
inc
mov
cmp
out
dec
xor
lock
fs
jmp
sbb
sti
cmp
popf
sub
push
lret
mov
mov
inc
sarl
sbb
jne
mov
cmp
mov
inc
dec
inc
ret
lahf
pop
je
scas
addr16
sub
or
jo
sahf
or
push
jecxz
add
movsb
sbb
xchg
fdivs
or
jp
adc
call
ljmp
cmc
adc
ds
xchg
popa
adc
repnz
sbb
fs
mov
jb
inc
aas
lret
paddd
and
in
push
cmp
xor
jne
cmpsl
test
shlb
dec
std
dec
pop
jo
push
mov
push
add
inc
lods
mov
mov
sti
testl
mov
xchg
fsts
iret
dec
dec
pop
xor
cmp
sti
movsl
fs
mov
iret
mov
push
jl
test
push
lds
xchg
test
sarb
cmc
lock
xor
lea
mov
lods
inc
push
push
jae
or
test
repz
jecxz
lret
and
sbbb
hlt
push
push
rorl
or
pop
lock
outsl
pop
das
daa
mov
cli
adc
pmaxsw
out
aas
fsts
or
mov
scas
ret
pop
add
sub
sbb
andl
sbb
mov
insb
mov
pop
fwait
dec
mov
mov
and
and
push
fwait
xchg
in
jo
in
sbb
rol
in
add
mov
shll
mov
inc
pop
aam
fadds
pop
inc
mov
sub
xor
out
push
fdiv
jge
enter
movsl
sub
loope
xchg
mov
stos
icebp
js
jb
add
in
xchg
arpl
mov
cmc
jo
cmp
xchg
test
loope
xor
dec
sub
loopne
add
mov
cmp
test
mov
loopne
adc
mov
lea
outsl
arpl
cmp
fcomps
pop
or
mov
lock
rorl
repnz
adc
push
xchg
cmp
xchg
notb
cmp
mov
jg
jae
inc
push
sbb
or
jb
pop
notl
cltd
stos
or
dec
mov
call
xor
loop
int
lea
xchg
roll
fsubrl
bound
call
rclb
ficompl
mov
int
je
mov
cs
rol
sub
push
sbb
mov
fsubr
sti
mov
xchg
test
adc
arpl
sub
adc
and
xlat
jae
lea
pop
pop
dec
jge
push
pop
mov
cmp
daa
outsb
xchg
popa
push
pushf
into
cld
fs
gs
dec
and
xor
add
lods
stos
dec
idivb
mov
pop
push
sbb
ficompl
adc
mov
shl
mov
and
pusha
out
shr
sub
fildll
dec
cmc
adc
lods
lock
arpl
test
mov
sbb
jge
loope
cmovnp
es
add
pushf
mov
ja
pop
xchg
mov
lods
lahf
ret
add
ljmp
bound
xchg
out
icebp
jae
iret
and
mov
gs
jg
jecxz
push
adc
adc
dec
test
xchg
in
xchg
mov
xor
enter
sbbl
mov
filds
or
arpl
lahf
aas
mov
into
xor
mov
enter
jmp
pop
push
daa
push
push
stos
test
mov
jo
jo
lret
mov
cs
shrb
dec
mov
push
and
lods
sbbl
les
cli
clc
or
mov
jle
jo
div
and
xchg
xchg
jb
pop
enter
inc
stc
xor
mov
repz
mov
and
into
pop
jmp
test
sahf
out
xchg
arpl
stos
sbb
inc
dec
jge
aam
pop
xchg
add
shll
ss
test
pop
pop
dec
negb
mov
xor
xor
xchg
xor
mov
push
in
lea
fnstcw
mov
mov
call
sbb
push
loopne
jge
pushf
fbstp
es
aad
mov
scas
mov
mov
push
iret
mov
dec
int3
lahf
xchg
add
mov
push
xlat
test
not
fstpl
mov
mov
data16
and
loope
dec
movsb
mov
mov
jmp
in
iret
fcomps
push
in
out
adc
add
inc
or
xchg
sti
mov
sub
adc
xor
mov
dec
movsl
sahf
test
fbld
lods
cld
sar
test
sti
sti
pusha
out
cs
sbb
add
mov
repz
repz
xorl
xchg
imul
mov
jb
dec
cmpsl
mov
jo
mov
and
rcl
insl
frstor
sbb
fldenv
and
mov
lahf
jl
or
rclb
pop
hlt
xchg
mov
cmp
mov
sub
imul
out
movb
shrl
and
mov
sub
pop
test
xor
popf
add
xchg
inc
dec
bound
sbb
push
movsl
shrb
or
push
xchg
mov
in
lock
add
test
dec
popa
shll
shrb
dec
iret
outsl
out
sub
adc
in
movsl
xor
int
mov
mov
insl
cmc
jns
aas
lret
xorb
xor
int3
mov
into
mov
ror
mov
or
jnp
jge
loop
mov
scas
sub
push
push
mov
jle
and
lcall
inc
jb
test
sub
sub
test
inc
mov
push
pop
sbb
in
sti
mov
push
dec
mov
lea
adc
imul
in
jb
xchg
pop
adc
push
mov
xlat
in
jle
insb
jecxz
cmpb
sub
push
and
arpl
inc
test
test
adc
mov
mov
xor
std
pop
sub
inc
hlt
icebp
cmp
pop
sbb
sbb
cld
and
int3
in
jnp
outsl
es
xchg
pushf
xchg
std
out
push
xorb
int3
rclb
and
adc
test
push
pop
outsb
mov
frstor
gs
mov
lcall
mov
popf
enter
sub
and
mov
mov
int
outsl
mov
push
iret
fsubrl
stos
jo
xor
jge
pop
repz
cmpsl
lods
lea
scas
pusha
xor
jnp
xchg
addb
jnp
dec
pop
leave
aas
inc
xor
repz
fucom
divb
popa
cld
outsl
mov
outsb
dec
jle
into
aad
jns
ficomps
cmp
dec
ljmp
sahf
mov
call
dec
cmp
and
sbb
push
icebp
push
mov
aaa
sbb
js
add
push
ds
xchg
add
dec
inc
sbb
dec
xchg
push
imul
pop
clc
mov
cmp
addl
adc
adc
flds
jp
cltd
add
call
iret
xor
shrb
and
jbe
push
andb
std
fwait
or
mov
out
mov
push
mov
add
mov
insl
fs
pop
xor
shr
insb
lods
les
adc
inc
or
mov
adc
and
outsl
addl
in
adc
xor
push
mov
call
pop
mov
js
dec
inc
fldt
sbb
push
addr16
sub
scas
sbb
outsl
clc
dec
jno
cs
mov
pop
lods
or
mov
sarl
shlb
xor
mov
std
ret
rcrb
lock
in
and
jp
push
inc
testb
test
cmpb
in
jo,pn
out
sbb
mov
cmp
dec
pop
add
pop
pop
pop
jne
xor
xlat
cs
cs
ds
adc
es
sub
sub
fmull
sbb
add
icebp
add
push
bound
out
cmpb
sub
cmp
mov
clc
pop
daa
or
pop
out
daa
es
ljmp
xadd
adcl
and
jg
rorl
and
mov
cmp
sti
lret
fdivrp
jbe
mov
pop
fdivs
arpl
negb
mov
xchg
js
fists
stc
lods
test
cmpsb
ret
stos
ljmp
popf
out
cmp
dec
mov
sub
imul
outsb
dec
outsl
and
cmp
sbb
fdivrl
pop
movsb
out
xor
pop
push
xchg
mov
fcompl
sub
mov
cmp
xchg
xchg
mov
pop
inc
jbe
cmp
push
fs
in
rcl
inc
popf
out
and
call
xchg
sbb
sub
cmp
mov
cmp
xor
popf
sbb
xlat
mov
dec
mov
lock
mov
push
cmpsl
push
pop
inc
pop
jmp
and
lock
daa
xor
dec
sbb
outsb
cmp
mov
mov
iret
and
aam
loop
out
cmp
xchg
add
stc
jno
ret
xchg
rol
jle
call
fdivr
dec
repnz
fdivrs
dec
jmp
or
and
pop
add
pop
scas
mov
jae
mov
cli
dec
sbb
mov
mov
cld
out
mov
inc
fldenv
mov
cs
mov
mov
mov
jns
xor
in
iret
dec
pop
pop
and
divb
icebp
imul
dec
pop
push
xchg
clc
outsb
or
push
into
pop
cli
and
lds
insl
in
mov
xorl
cwtl
ficompl
sti
in
pop
mov
mov
lcall
dec
or
adc
dec
test
pop
repnz
into
nop
push
and
lds
pop
cltd
xchg
fwait
imulb
pop
sbb
dec
shrl
stos
mov
flds
lods
jae
and
xchg
inc
cmp
lods
dec
pop
dec
push
stc
cmp
orl
insb
push
sub
push
mov
sbbb
push
stos
add
bound
mov
scas
xor
fisubrs
out
pop
jp
mov
mov
dec
push
popa
lods
movsl
mov
out
adc
inc
dec
lods
enter
add
dec
fwait
popa
loop
push
shll
test
lea
lret
aad
data16
iret
push
sbb
sub
xchg
insl
lock
dec
lds
pop
xlat
mov
lret
dec
mov
cmp
inc
push
mov
xchg
loopne
loope
xor
cmp
pop
cmpsl
pop
insb
ljmp
movsb
and
sub
rorl
mov
fld
mov
test
ljmp
mov
repz
jno
out
arpl
xor
pop
outsb
aas
out
mov
fildl
imul
sbb
mul
cli
xchg
pop
cmp
push
imul
dec
fsubs
add
out
add
jo
push
push
mov
sbb
out
jb
notl
xlat
pop
or
dec
out
lret
or
and
add
push
outsl
sbb
scas
dec
out
or
xchg
cmp
je
mov
adc
push
iret
xchg
ret
sahf
imul
daa
inc
fists
dec
out
gs
outsl
mov
mov
mov
shrb
sub
mulb
xchg
mov
aas
ss
std
je
dec
mov
pop
test
cli
sub
sbb
push
cmpsb
cmpsl
jge
cld
xchg
popa
inc
sub
outsl
and
add
idivb
data16
xchg
mov
out
inc
mov
pop
clc
inc
inc
mov
out
fs
mov
xchg
jle
in
mov
ss
add
adc
add
mov
jl
das
ljmp
ret
in
xchg
scas
mov
push
mov
dec
inc
aam
and
aaa
loopne
hlt
cmp
cmp
sub
mov
xor
iret
xor
push
leave
push
inc
and
push
cmp
seto
cmp
add
test
xchg
leave
cld
mov
ja
das
push
push
dec
dec
cmc
mov
mov
adc
movsb
push
sbb
pop
mov
push
dec
adc
xor
jmp
add
ficompl
lock
and
push
clc
test
xchg
jno
lcall
in
mov
sbb
je
orb
xorl
mulb
or
movsb
sbb
pop
lret
mov
and
or
xchg
pushf
sarb
repz
lahf
cltd
dec
and
repz
or
ret
lods
jo
out
cmpsb
enter
decl
aam
mov
or
xchg
jae
loopw
test
and
cmpsl
dec
mov
out
shrb
in
adc
call
int
into
xchg
fmuls
icebp
fisubrl
aaa
xchg
mov
addl
movsl
jmp
and
xchg
dec
mov
jl
mov
ret
xor
push
sub
sub
adc
test
sub
pop
jg
movsl
xchg
aam
adc
pop
cmpsl
scas
popf
test
shrb
xchg
rol
out
shl
mov
pop
dec
mov
sbb
dec
mov
and
mov
or
icebp
and
mov
out
mov
cli
cmc
es
stc
or
mov
and
inc
call
imul
lock
repz
mov
iret
push
mov
rolb
xchg
fs
lahf
mov
iret
ja
xchg
je
sarb
sbb
in
test
adc
xchg
outsl
xchg
mov
sbb
ret
nop
cli
aas
or
aas
mov
pusha
leave
sub
inc
push
mov
stos
mov
fstps
mov
xor
xor
push
adc
pop
cmpsl
js
test
xsha1
cmpsb
int
cmp
scas
pushf
dec
ret
popa
mov
sub
rcrl
adc
and
stos
mov
shrl
jecxz
dec
in
mov
inc
mov
adc
icebp
cmc
ljmp
jecxz
in
fs
pop
adc
sbb
pop
repz
aaa
sub
outsb
cmp
sarl
push
xor
xor
pop
cmp
fidivs
xchg
push
sub
lds
add
cwtl
dec
cmp
mov
sti
popa
repz
lea
pop
xchg
mov
jl
dec
mov
jno
push
shrl
aam
dec
mull
jns
adc
jg
scas
cwtl
in
adc
out
mov
pop
or
test
cld
xor
stos
out
and
scas
xor
daa
push
xchg
push
movsb
or
fscale
leave
xor
stos
dec
outsl
daa
mov
ss
sub
in
pop
cmp
out
rcrl
sub
test
cli
xor
mov
aaa
push
lods
stos
fmull
enter
lds
rcrl
mov
push
stc
mov
das
sbb
insb
jb
gs
jle
mov
or
cmp
dec
subb
add
lods
stc
imul
mov
stos
aad
mov
sub
push
call
lods
lcall
jae
inc
push
push
ss
and
mov
shlb
mov
xlat
add
jp
pusha
inc
cwtl
fsts
addr16
add
jmp
loopne
int
in
jns
sbb
and
inc
aas
lret
loope
pop
mov
cmp
loopne
mov
test
mov
jbe
or
xchg
fs
rcl
mov
movsl
mov
push
cmpb
aam
iret
add
mov
rorb
mov
dec
das
movsb
popf
xlat
loop
mov
sub
aam
out
or
sbb
cmp
or
push
in
mov
addr16
aad
ret
jns
hlt
and
sub
adc
adc
les
aas
push
mov
add
mov
data16
adc
jl
and
aad
gs
popa
out
cmp
loopne
xor
lcall
xlat
sbb
and
test
aaa
xchg
push
xor
lret
cmpsb
jb
and
and
xchg
loopne
aad
jp
enter
adc
cmp
loope
enter
pusha
pusha
adc
cli
push
out
cmpsl
mov
stos
insb
faddl
sbb
cmpsb
in
imul
out
dec
pushl
mov
stos
loop
push
pop
push
nop
and
ret
dec
push
push
xchg
pop
inc
mov
sub
mov
clc
adc
aaa
cmp
mov
cmp
nop
add
scas
mov
cmp
ud0
jno
and
dec
add
push
mov
sbb
cmp
sbb
xchg
rcrb
or
dec
adc
in
icebp
aam
mov
jecxz
ret
gs
mov
adc
into
sub
lret
iret
cli
ret
mov
nop
clc
and
sub
int3
fmulp
push
sub
mov
arpl
add
or
in
ljmp
imul
lds
fimuls
mov
or
movsb
inc
jbe
stos
pop
mov
and
ds
xor
ds
and
sub
adc
repz
xlat
sub
iret
ret
scas
je
dec
sahf
cltd
jmp
pop
mov
into
add
pop
or
ret
data16
cmpsb
push
addr16
adc
fdivrs
stos
aas
fwait
mov
lods
dec
jmp
lret
imul
pop
xchg
cmp
adcl
xor
hlt
mov
inc
mov
mov
jle
inc
mov
jno
push
popf
fsubrs
adc
out
pop
adc
cltd
xchg
mov
push
fildl
sbb
call
std
mov
adc
push
fwait
addb
out
xchg
xor
clc
xchg
push
xor
mov
das
in
in
jns
pop
dec
lods
mov
sub
adc
push
push
repz
cmc
mov
das
and
xchg
repz
stos
cmp
push
cmp
mov
ljmp
in
inc
lret
push
call
push
and
bound
data16
scas
jp
int3
cmp
in
sbb
xor
imul
dec
test
mov
pushf
inc
sbb
lahf
sub
iret
jno
jns
add
test
dec
in
jle
lods
jae
out
xchg
xchg
push
fnsave
scas
pop
add
fnstsw
pop
mov
shrl
mov
stc
insb
inc
decl
fldl
inc
aam
add
adcl
in
mov
adc
aaa
mov
ret
sbb
nop/reserved
xor
push
iret
cmp
lahf
daa
femms
inc
mov
push
and
pusha
test
inc
aas
pushf
enter
inc
pop
xchg
sbb
lahf
sahf
rcrl
push
cmpsw
enter
inc
mov
mov
arpl
mov
sbb
xchg
ja
jae
add
ficomps
popa
mov
pop
popa
xchg
cmp
mov
sub
hlt
and
xchg
jne
cmp
test
sub
sti
inc
arpl
push
push
adc
jecxz
mov
lret
sub
out
lcall
pop
jno
adc
jl
and
cmp
and
cmp
jmp
enter
pop
pop
lods
loope
xchg
test
sbb
jne
jle
pop
imul
add
orb
mov
insb
aaa
stc
inc
and
inc
push
lahf
lds
imul
notb
mov
push
cmpsb
sti
jg
mov
sbb
stos
push
inc
in
push
or
hlt
clc
jle
inc
or
cmp
mov
push
mov
or
out
pop
adc
fisubl
pop
test
out
cmp
push
test
in
dec
jae
xlat
int3
xchg
and
dec
mov
or
fs
insl
push
and
aam
lea
nop
jne
lods
and
mov
mov
mov
jmp
adc
ret
dec
mov
and
adc
sbb
pop
add
popa
mov
mov
cmp
int
adc
dec
mov
xchg
mov
ror
push
dec
in
mov
sub
jns
jne
mov
or
test
cwtl
fstl
mov
jns
aas
sbb
push
mov
jne
js
mov
push
xor
and
inc
sti
into
mov
addr16
adc
inc
gs
add
sbb
jg
pop
adc
xchg
daa
jmp
mov
and
adc
xchg
mov
push
popf
dec
mov
lahf
ret
cs
jmp
movsb
fcmovnu
or
int
hlt
shrb
xchg
jns
or
mov
aaa
cmpb
push
pop
ss
hlt
xor
std
jnp
push
dec
sub
loop
mov
cmp
push
or
ret
jae,pn
pop
fwait
mov
pop
jg
or
or
sub
cwtl
jb
xor
fidivl
push
roll
int
js
push
fwait
mov
jbe
imul
je
rcrb
sbb
xchg
jp
jbe
jge
ss
fdivrl
adc
adc
sub
xchg
and
sbb
scas
and
mov
or
jmp
aam
and
mov
pcmpgtd
shll
fcoml
and
out
jns
mov
jp
mov
adc
pop
inc
lock
push
lcall
bt
out
lds
pushf
bound
xor
nop
jmp
push
dec
or
sub
test
lea
push
enter
cld
mov
call
mov
pop
cmp
add
pop
clc
xor
ss
inc
test
mov
ss
inc
int
adc
inc
mov
hlt
lods
imulb
aas
jmp
out
mov
mov
push
lahf
dec
mov
test
stc
xor
icebp
jbe
scas
mov
or
mov
inc
aas
inc
js
lods
jne
or
aas
pop
xor
cmc
jae
jo
dec
popf
into
leave
pop
mov
xchg
push
adc
add
xchg
iret
inc
clc
loopne
cmp
cmp
and
dec
or
sub
pop
push
js
dec
jge
xchg
in
sbb
movsb
mov
pop
push
jge
push
adc
mov
lock
inc
add
cld
jg
mov
sub
test
addr16
mov
pop
and
dec
test
nop
push
xchg
push
test
movl
andl
mov
pusha
and
jne
arpl
sbb
loopne
jns
cld
lahf
out
cmp
call
lahf
out
jg
test
lret
push
mov
fnstsw
and
jnp
xor
es
adc
lret
popa
mov
sbb
sbb
out
jns
jo
daa
push
mov
in
aaa
loopne
xchg
mov
and
xchg
jge
mov
adc
cmpsl
mov
in
notl
in
mov
jmp
jmp
jmp
and
rolb
movsb
adc
adc
push
dec
add
xchg
cmp
imul
jge
sub
sbb
mov
and
fcoms
mov
mov
in
and
sub
pop
flds
nop
mov
int3
ret
aas
add
mov
scas
stos
fs
push
cwtl
aas
jb
nop
cmp
jp
sbb
mov
cmp
popl
loope
mov
leave
mov
mov
inc
mov
sbb
push
loop
sub
arpl
push
cmpl
mov
or
xchg
loopne
sub
rol
into
sahf
jge
leave
das
shrl
aaa
fimull
dec
jmp
sub
out
mov
sub
pop
cmpsl
jg
sti
jmp
sub
dec
out
pop
insb
sbb
and
xlat
int3
adc
mov
stos
inc
dec
test
insb
jb
pop
sbb
jle
int
mov
fbld
push
jb
fs
testb
scas
nop
jp
frstor
lcall
mov
inc
sahf
xchg
addr16
pushl
dec
stc
mov
ds
mov
insl
incb
and
adc
insl
and
lds
scas
add
inc
adc
lea
xor
dec
inc
cltd
and
into
xchg
mov
jo
adc
dec
inc
mov
outsl
movsb
mov
inc
fstp
fsubp
jl
jl
clc
test
mov
je
ret
in
out
loope
dec
ljmp
mov
pushf
js
pusha
and
xlat
inc
filds
sub
jnp
pop
mov
mov
sbb
loop
xor
add
add
pop
insl
jae
push
cmpb
mov
imul
rcrb
inc
sbb
jo
cmc
imul
mov
fs
adc
inc
popa
fisttpl
sbbl
outsl
xchg
pusha
test
sbb
sub
incb
ds
outsb
xchg
mov
sahf
jl
and
rorl
and
out
pop
or
arpl
sub
xchg
push
or
int
sahf
sbbb
sbb
jmp
loope
sub
mov
aaa
fdivrs
sbb
enter
mov
xchg
push
insb
insl
xor
jnp
scas
fstpt
add
sbb
add
repnz
jg
lret
inc
cmp
std
push
rorl
dec
fdivrl
inc
out
pop
test
push
xor
inc
mov
out
dec
cltd
cmp
and
cs
or
push
stc
inc
mov
mov
add
jns
scas
repz
mov
or
stos
out
inc
popa
aam
push
and
std
mov
jmp
and
repnz
js
and
int3
mov
mov
outsb
popa
insb
aas
gs
roll
lcall
nop
pusha
outsl
lret
mov
push
mov
mov
fcom
jae
arpl
jecxz
shlb
jbe
out
jbe
bound
das
jg
mov
stos
jo
in
imul
xchg
sub
dec
mov
push
test
sbb
pop
fcoml
and
xor
jbe
xor
popf
mov
adc
lock
out
into
mov
add
or
dec
mov
mov
pop
sbb
jecxz
mov
jg
imull
daa
xchg
or
cmp
adc
jg
dec
xor
arpl
push
shlb
xlat
or
cmp
mov
add
sbb
inc
xchg
mov
mov
mov
movsb
xor
add
in
std
test
xchg
or
movsb
add
mov
fistpl
mov
neg
pop
mov
mov
aam
sub
mov
andb
xchg
loop
mov
xchg
enter
sub
lds
lret
ret
add
add
adc
xor
dec
cs
cwtl
roll
inc
lods
adc
mov
mov
inc
and
sub
pop
and
xchg
lock
add
xchg
push
push
loopne
add
lds
dec
xor
jecxz
dec
loope
pop
lcall
jne
in
in
mov
and
cld
pop
mov
and
ljmp
hlt
sub
sub
arpl
mov
and
sub
cld
pop
outsb
enter
daa
int3
cwtl
adc
fidivl
push
push
inc
mov
std
cmp
add
fmull
dec
into
jns
mov
out
xor
xchg
lahf
arpl
push
jle
push
sbb
fwait
mov
adc
movsb
enter
insb
test
dec
repnz
dec
mov
push
mov
aaa
das
fidivl
clc
or
test
dec
dec
add
mov
bound
mov
and
inc
pop
mov
fmul
in
or
lret
ss
pop
lcall
loope
add
inc
or
lcall
or
popa
loopne
test
cld
out
cmp
and
sub
ss
clc
test
call
sbb
movsb
push
insb
adc
pop
jge
mov
lret
xchg
das
add
test
mov
xchg
pushf
mov
pop
mov
mov
mov
mov
xor
jmp
ljmp
xor
and
hlt
enter
jb
into
in
ret
lock
fildll
push
mov
cmp
dec
push
data16
mov
mov
jp
test
and
cmpb
dec
mov
cmp
dec
fistpl
andl
or
mov
cmp
sub
std
fsubl
test
je
add
xchg
cmp
cmc
mov
roll
in
pop
jp
das
test
jnp
sti
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
imul
bound
bound
shlb
sub
lods
xor
xor
cld
or
lahf
outsb
imul
inc
or
mov
int
inc
rclb
and
pop
push
dec
cmp
sbb
in
aam
aaa
mov
xchg
scas
cmp
and
or
lds
arpl
jle
mov
xor
dec
push
inc
mov
repnz
out
int3
test
mov
add
fs
movsl
dec
sub
xchg
add
ljmp
enter
xor
xor
mov
aas
fninit
cli
adc
shll
push
mov
and
icebp
mov
mov
xchg
and
enter
ljmp
fld
lcall
and
inc
inc
orb
int
cld
jecxz
imulb
jb
push
cs
push
mov
fsubs
or
push
cmp
pop
in
in
lock
pop
scas
stos
dec
inc
sub
dec
imul
je
outsb
pop
jns
mov
imul
scas
push
add
lds
sbb
enter
das
scas
pushf
jb
sahf
in
scas
leave
pop
subl
test
fistps
test
lcall
stos
mov
aad
jg
arpl
fbld
inc
mov
or
jb
mov
dec
and
dec
out
dec
and
xor
outsl
sub
repz
mov
mov
cltd
xchg
lahf
nop
ljmp
in
ss
xchg
ss
addr16
popa
push
lds
xor
repnz
popf
mov
test
push
cmpsl
std
in
xchg
pop
fldt
aam
and
mov
leave
mov
jge
daa
push
push
inc
sub
je
aaa
dec
mov
addr16
rcr
loopne
pop
pop
xchg
aas
dec
aam
popa
aad
jb
stos
cmp
pop
imul
sub
and
push
lcall
outsb
fcmovnu
mov
in
fs
in
pop
and
and
sbb
jle
aaa
xor
jae
loopne
pop
mov
int
das
daa
ss
mov
ljmp
dec
xchg
pop
and
loop
adc
cmpb
in
loop
scas
dec
xchg
sbb
loop
shrl
aam
sub
add
sbb
fdiv
or
shrl
das
fdivr
push
popf
popa
int3
js
faddp
pushf
repnz
or
xchg
pop
nop
stos
lea
add
jne
mov
inc
push
xchg
mov
mov
pusha
cmp
push
aam
data16
mov
cmp
cld
stc
xchg
mov
mov
enter
add
es
mov
lahf
or
and
lret
adc
mov
ljmp
jmp
call
adc
jae
addl
lds
mov
in
enter
outsl
insl
popa
addl
dec
cmpsl
mov
mov
and
jbe
pop
shrl
lret
cmp
xor
cmp
imul
adc
std
sub
and
int3
cmpb
subl
addb
mov
push
mov
repnz
ljmp
jno
jmp
pop
popf
pop
stos
add
pop
xchg
xor
jae
sbb
or
icebp
jecxz
loope
inc
push
adc
lock
fucomi
add
arpl
and
enter
or
cmp
jae
pop
mov
fcomps
and
movsl
sub
ret
sti
scas
cmp
les
out
je
xchg
bound
jl
mov
jl
add
mov
inc
ds
push
inc
sbb
fidivs
cwtl
sti
push
inc
push
js
mov
ja
lret
jecxz
aas
mov
and
mov
xchg
loope
int3
cli
loopne
adc
add
hlt
jp
fcmovu
inc
push
andb
jle
and
adc
pop
adc
jne
loop
lock
jmp
cmp
rcr
or
sbb
idivl
pop
adcb
popf
pop
stos
imul
repnz
repz
mov
mov
nop
xor
jno
jo
mov
adc
shl
leave
imul
fsubrl
xor
push
notl
push
lcall
lds
loop
mov
xchg
push
out
loop
std
inc
ja
faddp
sarb
in
dec
sub
adc
mov
popf
xchg
cmp
xor
arpl
cmpsl
cmpsl
imul
mov
stos
stc
and
jge
dec
ja
push
pusha
lret
jp
es
sub
mov
inc
repz
out
push
je
mov
roll
lock
sub
add
mov
rcl
pop
adc
mov
dec
cltd
cmpsl
mov
inc
cmp
ret
sahf
andl
add
push
fimuls
push
sbb
lret
leave
sbb
fdivrs
mov
das
std
adc
int
jb
push
out
push
arpl
cmp
out
sub
ja
xor
addr16
loope
jg
hlt
dec
inc
dec
mov
xchg
in
xchg
shrb
rcl
cltd
adcl
or
xchg
loop
cmp
leave
dec
mov
jg
dec
xlat
test
out
sbbl
sbb
clc
cltd
aas
repnz
stos
icebp
dec
cmpsl
inc
test
cmovbe
mov
inc
push
jnp
cmp
sahf
dec
clc
pop
stc
gs
movsl
jg
stc
movsb
xchg
loop
jmp
push
into
sub
fimull
lahf
ret
jmp
add
pop
add
mov
lock
insb
es
adc
test
push
push
sub
add
xor
inc
xor
leave
push
or
mov
push
mov
sub
or
mov
xchg
fldt
in
inc
mov
aas
fidivl
xchg
xor
frstor
daa
je
jmp
dec
dec
inc
push
jo
jmp
sub
fs
testl
xchg
out
daa
shll
inc
or
xor
popf
outsb
roll
adc
ds
pop
popa
pop
cmpsb
es
jg
dec
mov
gs
sbb
cpuid
pop
out
into
add
pop
pop
cli
ret
cmp
xchg
stc
rclb
daa
add
xchg
mov
jecxz
dec
pop
testl
push
lahf
add
dec
dec
cmpsl
xchg
jb
test
cs
fisttpl
inc
aaa
xchg
mov
jge
fsubs
fisubs
or
clc
insl
cltd
sub
pop
mov
push
xor
cld
and
xor
xor
jp
in
cmp
test
inc
sub
imul
xorl
sbb
push
fidivrl
jl
outsl
pop
xchg
push
and
repnz
or
push
mov
mov
mov
pop
or
xchg
addr16
xor
push
negb
out
xrelease
xor
int3
sahf
sub
and
pusha
das
pop
dec
out
mov
xor
das
into
pusha
insb
addr16
lahf
sub
xlat
sub
fucomip
mov
xor
shr
ror
movl
nop
or
mov
sbb
sahf
pop
outsb
icebp
pop
cmc
je
mov
xchg
inc
test
dec
push
dec
in
push
add
xchg
es
ret
jne
ret
dec
jecxz
repz
pushf
aam
push
rcrl
test
pop
das
jnp
lea
mov
xchg
or
dec
sbb
scas
add
fcmovbe
cwtl
cli
xor
nop
xchg
xor
jne
mov
or
pop
jecxz
or
movsb
mov
ja
scas
push
mov
lock
sbb
pop
rcll
mov
les
out
fdivl
adc
fistpll
pusha
daa
sbb
jb
dec
sbb
icebp
fisttps
add
clc
fwait
out
xor
repz
test
push
push
or
jecxz
lret
test
push
add
ret
push
pop
gs
cmp
mov
nop
divb
lods
sbb
mov
mov
fimull
dec
xor
xchg
repz
jae
stos
hlt
nop
imul
fcomps
jle
push
stos
jecxz
sbb
leave
sub
test
aaa
mov
xor
pop
pop
ret
or
xchg
scas
popa
push
jbe
jb
lea
lahf
in
cli
js
jo
add
sbb
dec
sbb
dec
test
cmp
or
stos
js
or
inc
shlb
push
fsub
add
jns
std
mov
outsb
cltd
or
pop
pushf
outsb
xor
or
into
sub
push
hlt
mov
dec
pushf
leave
shlb
test
cmp
add
mov
add
js
shrb
pop
repz
push
shll
mov
mov
adc
les
enter
mov
mov
dec
push
imulb
pop
out
stos
shlb
push
lcall
pop
fs
out
inc
std
xchg
aad
lret
call
and
dec
rcl
pushf
adcb
jb
cmpsb
and
push
push
test
xor
sub
scas
mov
aas
sbb
leave
out
hlt
jle
mov
fstpt
sub
std
mov
in
scas
mov
pop
bound
dec
push
jno
bound
cmp
jnp
inc
lds
xorl
xchg
movsl
mov
cmp
xlat
sub
inc
jg
xor
jo
in
and
add
cmp
aaa
xor
lods
enter
mov
pop
pop
push
jnp
push
pop
xor
xlat
fdivrl
pop
cltd
xchg
ljmp
movb
cmp
lea
pop
insl
fcoms
cmc
test
clc
mov
jl
xor
fmul
fistpl
fistps
std
loopne
push
sbb
aad
lods
pop
add
xchg
xchg
sub
mov
gs
es
jmp
lret
mov
jnp
cmp
pushf
inc
outsl
cmp
lcall
jno
pushf
mov
in
and
jp
xchg
into
jno
jbe
mulb
sub
loope
jmp
push
out
data16
clc
arpl
outsb
fwait
fimuls
jl
dec
ret
or
adc
jmp
or
sub
dec
test
test
arpl
xor
outsb
fistl
iret
pop
sub
xor
pop
addr16
rorb
inc
jnp
stos
pop
scas
hlt
mov
inc
daa
xchg
jnp
xor
in
scas
outsb
lret
out
les
add
incb
cmpsb
push
lds
inc
jns
outsl
mov
inc
adc
stc
pop
jge
cmp
sub
ja
imul
insl
sbb
pop
mov
and
pop
divb
gs
lahf
sub
mov
add
insb
repz
jg
pop
aad
lret
xchg
rcrl
pop
lahf
pop
mov
mov
sub
xchg
push
ljmp
insb
mov
adc
mov
inc
sub
cli
test
xchg
pop
sub
sbb
jg
sbb
cmp
push
jge
dec
xor
das
pop
xor
insl
xchg
insl
jno
negb
jecxz
mov
xchg
aam
mov
and
xchg
cmovs
scas
xchg
push
jmp
cmp
aam
cmp
pop
lods
or
pop
mov
sbb
sub
adc
lcall
mov
ja
movsl
add
jo
and
and
add
loope
stos
sarl
stos
sbb
in
or
mov
mov
mov
xchg
imul
iret
lcall
sbb
scas
ds
jo
push
pop
andb
leave
mov
mov
sahf
sub
loopne
inc
je
dec
jmp
adcl
add
out
xor
inc
aas
or
lret
sbb
push
jb
fs
adc
and
jge
rorb
cmp
pop
bound
rorl
pop
sub
adc
mov
add
xlat
xchg
shl
dec
push
and
popa
in
jno
cmp
xchg
push
inc
pop
mov
xor
jmp
lret
lods
mov
fmuls
cmpsb
daa
sub
dec
inc
ja
xor
dec
mov
rcrb
add
testl
fsubl
adc
inc
aas
pop
pmullw
ret
pop
lds
jle
add
jb
mov
jp
imul
pop
push
repz
popa
iret
xlat
sbb
xor
ja
inc
push
xchg
nop
cmp
sub
sti
lret
mov
icebp
xchg
add
fs
mov
xlat
xchg
add
adc
std
imul
jns
enter
inc
test
int3
cs
scas
test
push
mov
dec
or
fdecstp
jge
pop
add
lods
je
stc
pop
test
and
mov
xchg
xchg
xchg
jp
mov
lods
push
mov
test
dec
shlb
add
push
xorl
sahf
fldcw
fs
call
sub
mov
dec
adc
rcr
xchg
cwtl
pop
filds
push
push
mov
test
dec
xor
sti
loope
ds
xlat
adc
inc
or
cmp
cmc
bound
sub
out
adc
into
testb
lret
cmp
jns
dec
jg
sbb
mov
mov
pop
pop
repnz
cld
xor
push
leave
adc
jp
dec
lods
repz
sub
pop
ficoml
inc
shll
call
push
into
inc
jg
ljmp
cmp
in
lods
mov
das
movsb
bound
hlt
shl
popa
cltd
enter
inc
and
loop
xor
mov
lret
push
test
addb
in
or
jo
in
es
adcb
inc
xchg
sub
jmp
xor
in
cmp
loop
jle
push
mov
xorl
and
fisubl
ss
push
or
jo
jp
push
adc
cmc
mov
je
pop
cmp
inc
push
mov
or
fidivl
and
pop
subl
xor
inc
sbb
xchg
mov
test
xchg
int
cld
xor
sbb
cs
xchg
jp
lahf
cmp
dec
xchg
icebp
xchg
push
push
and
aas
sbb
pop
aas
movsb
jle
push
cld
pop
lods
loopne
inc
and
dec
mov
cmp
in
adc
dec
movsb
mov
jno
fstpl
notl
jmp
sbbl
mov
pop
sarl
inc
fbstp
sub
mov
sub
repz
aad
xor
or
je
cmp
sbb
call
shlb
cmp
xor
xchg
pop
and
inc
pop
sub
mov
nop
scas
pusha
adc
arpl
data16
nop
jb
shlb
test
adc
xor
fistl
xchg
add
das
out
mov
xchg
adc
jl
mov
sub
mov
xchg
inc
jge
xor
push
mov
in
pop
lods
jns
data16
mov
mov
push
jne
xor
pop
mov
and
mov
mov
xor
loope
out
jle
adc
cs
mov
scas
cwtl
add
into
cmp
sbb
cmp
xchg
xor
cs
popf
xor
mov
add
jbe
jp
mov
and
mov
push
sub
pop
loop
idivl
repz
outsb
aam
sub
lds
mov
push
jb
test
xchg
sub
repz
cld
lret
jecxz
sbb
dec
add
sti
adc
cmpsl
rol
cli
cmp
xor
cmc
test
jmp
es
mov
adc
push
lcall
bnd
jge
arpl
mov
mov
inc
inc
cmp
xchg
xchg
mov
and
xchg
repz
dec
ss
and
daa
arpl
movsb
dec
pop
mov
push
mov
push
xor
std
mov
cltd
test
mov
cwtl
jp
inc
xorl
or
sahf
jae
sti
xchg
mov
fistpl
jecxz
mov
iret
repnz
into
iret
push
add
adc
lret
hlt
xor
test
std
dec
test
in
mov
jbe
in
inc
int3
dec
pusha
out
mov
add
jmp
mov
adc
popa
fwait
les
mov
mov
stos
mov
jo
mov
ss
or
std
loop
adc
and
mov
xchg
jle
hlt
xchg
sub
mov
inc
dec
or
lods
hlt
cmp
mov
lret
xor
xor
mov
in
sub
mov
inc
cs
rcrl
mov
mov
fs
sub
and
rorl
gs
push
int3
push
rcl
outsl
pushf
cmp
push
lret
jmp
jl
je
cmp
movswl
insb
addr16
ret
adc
dec
jge
ds
bound
ss
sub
inc
loope
push
dec
mov
inc
loope
sti
jecxz
jns
std
mov
aad
lret
fsubs
adc
das
mov
subb
sahf
es
jo
int
data16
xchg
iret
inc
pop
testb
dec
frstor
mov
cmp
cmc
or
lret
sbb
ljmp
int
arpl
adc
dec
loope
gs
test
aaa
jl
js
lock
and
push
movl
dec
xor
call
and
ret
out
mov
mov
jne
ljmp
int
xchg
imul
bound
les
addb
stos
jp
jmp
dec
in
nop
xor
leave
dec
inc
jg
inc
movsl
fldenv
jle
and
fsubrp
in
cld
js
scas
lahf
into
lcall
jle
stos
fwait
adc
and
nop
mov
cld
test
neg
aad
aaa
repnz
insb
sbb
outsb
jl
jb
mov
shrl
mov
cmp
push
daa
mov
xor
or
jp
add
test
sub
xchg
jb
std
fcmovb
bound
cmp
faddl
pushf
jnp
decl
mov
int
aaa
test
cmp
in
mov
push
pop
inc
cmp
jbe
sub
push
push
push
dec
out
loopne
call
shr
xor
stc
xchg
insb
xor
data16
or
jne
test
stos
pusha
jae
ds
mov
add
cmp
scas
or
cs
sub
mov
out
jne
outsb
adc
pop
push
out
adc
test
pop
bound
stos
dec
sbb
andb
mov
xor
fists
mov
call
jg,pt
pop
fnstcw
jp
fdivrs
xchg
cmp
jmp
mov
test
xor
mov
xor
shll
sbb
pop
pop
bound
and
jb
pop
and
cmp
dec
jae
lcall
stc
xor
ljmp
pop
negb
jecxz
std
mov
cmp
mov
jns
jns
dec
adc
loopne
out
enter
lods
mov
fisubl
fwait
adc
add
push
cmp
cmp
xchg
jecxz
scas
fbld
enter
xchg
aas
je
imul
ret
test
push
insl
push
inc
ret
mov
shlb
sbb
int3
lods
pusha
lock
mov
and
adc
pushf
sub
ficompl
mov
mov
mov
stos
jbe
dec
jecxz
test
mov
adc
scas
mov
add
xchg
testb
rclb
test
test
and
lret
or
xlat
addr16
imul
or
in
and
ja
mov
imul
int3
pushf
mov
shrl
es
dec
fadds
pushf
shlb
add
lock
mov
and
push
inc
sbbb
xchg
ret
or
sbbl
pusha
ret
and
push
rorl
jmp
mov
out
mov
mov
pop
mull
sbb
data16
sti
bound
pop
test
add
rcrl
scas
into
sub
ret
jle
add
jbe
insl
sbb
out
mov
xchg
push
lret
push
stc
sar
fbstp
adc
mov
xchg
inc
lock
lds
daa
cs
rcr
mov
jo
ret
sub
add
insb
sbb
in
xlat
jp
addr16
sub
mov
pop
mov
rclb
cmp
fs
lahf
ret
jbe
mov
jb
pop
push
mov
sub
and
jg
push
mov
in
fsubrs
mov
cli
push
cmp
movsl
mov
jmp
jbe
inc
shl
and
aas
jle
lahf
aaa
rclb
scas
andb
jmp
sti
mov
xchg
scas
mov
sbb
or
int3
mov
out
xor
loopne
pushf
mov
push
add
mov
mov
ss
lock
ja
xchg
xor
sbb
dec
cmp
push
into
add
xchg
sbb
dec
in
fwait
adc
mov
test
inc
movsb
les
mov
es
dec
daa
ss
ja
jl
mov
xchg
sti
mov
add
push
cs
lods
or
sarl
xchg
sub
lods
and
jmp
aad
xor
sbb
xor
cld
clc
xor
int
mov
out
lret
pop
stos
lods
push
dec
test
push
cmp
stos
ret
stc
adc
mov
push
sbb
cmp
scas
xor
push
ljmp
mov
and
adc
jmp
pop
outsl
xorb
addps
or
add
or
insb
mov
clc
xor
aaa
push
imul
jns
and
fmull
sub
mov
lea
ret
sub
or
inc
scas
in
pop
lods
xor
addb
jns
xor
xchg
cmc
lock
ret
aaa
setnp
or
call
mov
inc
fdivl
sbb
imul
pop
mov
inc
subb
fbld
add
cmc
pushf
sub
imul
sbb
loopne
xor
mov
dec
xchg
sub
xchg
insl
outsb
cmpsl
stos
test
mov
lock
aas
stos
outsb
test
mov
or
fmuls
or
gs
and
or
mov
mov
fimuls
imull
jbe
adc
dec
push
xor
fidivrs
push
or
xchg
xchg
mov
fcmovb
inc
leave
ret
dec
in
mov
xorl
fistl
insb
sahf
xorl
xlat
in
stos
jo
inc
and
scas
mov
outsb
and
or
ret
inc
mov
aaa
imul
jg
roll
sbb
jp
sbb
mov
xchg
cmp
xchg
xorb
inc
les
cwtl
or
fdivl
cwtl
mov
mov
cmpsb
sti
ja
subb
dec
push
bound
lret
xchg
push
std
add
xchg
jmp
rorb
int
mov
jb
xchg
scas
jo
sub
xchg
jg
xchg
fsubrl
mov
test
jl
out
loop
cli
inc
lcall
mov
rcrb
daa
sub
shlb
shll
orb
mov
jmp
pop
aaa
cs
mov
adc
xor
stos
aam
sbb
daa
icebp
pop
int
int
push
sahf
and
sbb
mov
fcmovbe
lahf
call
ficoml
pop
pop
rclb
mov
and
xor
into
push
inc
test
sbb
and
mov
sub
fwait
jno
cltd
inc
xchg
push
call
xlat
push
rcrl
xchg
out
lds
inc
icebp
dec
adc
enter
inc
jmp
mov
cmp
mov
rorb
dec
pop
jp
xchg
jecxz
sub
mov
ret
movsb
divb
cmp
add
lret
xor
outsb
dec
enter
js
and
inc
lds
outsl
fldenv
lea
outsl
loop
lods
sbb
inc
call
cs
outsb
sbb
cmp
or
add
sti
inc
inc
cmp
in
xchg
xchg
dec
inc
add
dec
xor
enter
dec
int3
push
and
insl
das
movsb
std
push
or
sbb
or
add
adc
bound
adc
sbb
jbe
or
jb
jg
lret
adc
popa
add
stos
lret
leave
adc
scas
es
or
mov
pop
std
sbb
movsl
push
imul
sub
lret
dec
jbe
mov
pop
insb
int
mov
push
out
sti
xor
sbb
rcrb
imulb
and
les
rorb
pop
jge
movsl
jle
fsubl
xchg
xchg
sub
dec
push
xor
pusha
test
jmp
dec
addl
daa
cld
push
or
mov
je
sub
aaa
mov
repz
adc
mov
jo
add
xor
mov
pop
loopne
mov
jb
sti
mov
mov
or
aad
loop
xor
loopne
push
xchg
pop
addr16
test
in
stos
pop
jecxz
ds
icebp
jmp
sahf
sub
cmp
pop
fisubl
sub
push
inc
lcall
pop
test
fmul
insl
loope
adc
or
adc
adc
outsb
fnstsw
push
add
or
aaa
push
dec
test
sub
mov
mov
negl
and
or
cmpsl
pop
mov
repz
cs
frstor
repnz
movsb
xor
fdivs
or
mov
flds
jb
popf
pop
fnstsw
jbe
pusha
in
pushw
xor
mov
mov
jo
ljmp
mov
int
leave
or
xchg
lods
popa
in
lods
jne
sub
ja
dec
inc
test
pop
cmpl
imul
jnp
sbb
jg
pop
mov
sarb
push
xchg
inc
cmp
mov
mov
hlt
sti
aad
fcmovbe
fnstsw
pop
das
or
nop
add
and
addb
int3
add
mov
mov
fnstcw
test
in
push
and
xchg
ss
rol
enter
mov
repnz
mov
shr
pop
mov
shrb
xor
mov
mov
mov
bound
add
mov
push
sbb
sbbb
sub
adc
lcall
mov
icebp
icebp
iret
popf
pop
lock
jne
lret
test
lahf
cld
dec
jge
scas
or
jle
inc
mov
and
mov
cmp
dec
repz
in
mov
stc
mov
ret
mov
imul
inc
inc
and
sub
sbbl
inc
sub
pop
jb
inc
movsb
inc
pop
pop
fnstenv
and
pusha
sbb
mov
clc
inc
cmp
push
xor
aam
pop
nop
lcall
cmpsl
fcmovbe
ds
sbb
inc
adc
into
sub
cs
test
inc
sbb
xor
dec
scas
ret
aam
sbb
add
pop
mov
gs
xor
test
dec
xchg
jg
lods
adc
ljmp
sub
pop
xchg
pop
sbb
xor
sub
adcl
cltd
or
xor
ret
aam
mov
icebp
fidivrl
mov
scas
inc
mov
mov
roll
int3
sub
mov
mov
sub
ds
dec
call
test
cwtl
ss
std
mov
js
fwait
or
push
cmp
fdivrs
jae
adc
loopne
cld
lea
add
cmp
adc
fiaddl
xchg
lret
dec
pop
mov
cmp
push
lods
pop
jno
jecxz
and
sbb
push
movzbl
jne
push
cmc
xor
add
scas
jae
inc
mov
cmp
pop
js
pushf
jecxz
push
fldl
fcmovne
cmp
fstpl
sbbb
lcall
andb
push
mov
jle
daa
mov
fldl
addb
jns
into
mov
out
loop
stos
xor
popa
imul
fs
lahf
jbe
sub
cmpsb
jle
inc
aad
ds
fimuls
xor
jae
in
popa
pop
or
sbbb
adc
dec
xchg
mov
add
ficomps
dec
loopne
or
jns
xor
xchg
std
adc
daa
js
and
mov
cmpl
dec
popf
mov
aas
in
cmpl
mov
call
test
push
movsl
inc
sbb
sbb
jg
jmp
cmc
and
push
jnp
leave
pushf
fisubrs
sub
push
clc
lret
lahf
mov
push
ljmp
stc
mov
jnp
lods
bnd
adc
lds
cmpsb
xchg
cmp
testb
cmc
mov
ret
inc
add
fcomi
neg
pop
ret
cmp
push
enter
and
ficomps
lock
int3
and
mov
stos
pop
xorb
push
les
cmp
add
imul
push
in
jo
lods
out
mov
pop
push
out
inc
scas
and
jl
push
aas
mov
or
rol
pop
repnz
dec
mov
sbb
lret
mov
or
test
xchg
and
adc
mov
sub
cli
cmp
ret
or
lcall
xchg
jp
or
shlb
pop
mov
sahf
mov
sahf
mov
imul
lods
out
fisubs
imul
dec
lret
fs
or
shll
aas
leave
test
push
push
je
jbe
cwtl
add
fidivl
loopne
xor
pop
cmp
in
jp
popa
push
jg
in
out
dec
test
mov
pop
inc
mov
fidivrs
adc
or
mov
push
xchg
jle
stos
arpl
adc
cmp
out
mov
xor
incb
xchg
dec
ljmp
inc
cmc
gs
adc
hlt
fsubp
or
stos
sbb
sub
xchg
in
adc
pop
test
and
cmpsl
add
pop
jmp
push
or
adcb
xchg
aas
sarb
mov
pop
xor
aam
int
testl
inc
sbb
scas
mov
and
es
inc
js
pop
pop
into
insl
xor
dec
pop
clc
out
add
test
pop
repz
testl
test
movsl
arpl
test
out
adc
xchg
xchg
in
aad
out
push
pop
enter
mov
adc
and
stos
xchg
pop
inc
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
sub
mov
fisubl
push
pop
bound
dec
lods
std
arpl
scas
or
fimull
lods
mov
pop
pop
pop
and
insl
movsl
into
subb
or
dec
and
inc
dec
stos
adc
add
mov
popa
xor
andl
inc
fs
fnsetpm(287
call
mov
in
insb
mov
mov
adc
mov
test
cmp
sub
pop
xor
sti
mov
jmp
jmp
lcall
std
aad
repz
outsb
xchg
mov
mov
pop
fsts
pop
pop
adc
adc
jo
sbb
mov
ljmp
clc
filds
je
mov
fisubrl
inc
lcall
popa
inc
xor
stos
pmulhw
push
xor
iret
daa
nop
inc
sub
jl
sahf
enter
mov
mov
pop
test
into
mov
pop
sub
stc
add
fs
xor
int3
mov
fldenv
xchg
outsl
mov
pushf
loop
test
fdivs
mov
into
push
aam
sub
sub
enter
sbb
pop
sbb
test
rcrl
xchg
sub
or
xor
scas
aaa
roll
dec
js
jg
add
cld
mov
mov
adc
and
or
fs
mov
pushl
inc
push
jmp
iret
mov
movsl
xor
or
jbe
les
pop
jno
add
sub
adc
data16
pop
push
pop
xlat
mov
pop
fists
stos
cmp
push
xchg
ja
sahf
push
inc
jae
jl
sbb
insl
fists
inc
cmp
inc
shl
and
pop
push
fsts
mov
mov
je
mov
sti
or
and
or
call
insl
leave
xchg
cmp
add
and
sub
js
fcompl
inc
jnp
xchg
xchg
in
push
lock
jne
add
iret
arpl
push
sbb
rorb
push
mov
jle
and
ja
xchg
dec
lret
movsb
jmp
pop
jbe
xor
pop
sub
cmp
jle
mov
cli
adc
push
cmp
mov
ds
idivl
repnz
les
addb
dec
insb
push
adc
shll
jle
scas
sti
jnp
xchg
jmp
push
mov
and
sti
addr16
mov
add
ret
fs
jmp
jo
subl
or
lret
int3
dec
idivl
pop
inc
mov
adc
jg
mov
enter
imul
aam
imul
xor
jge
out
mov
mov
jb
stos
ja
xor
rclb
adc
movsb
pop
mov
and
mov
dec
push
sbbb
leave
inc
inc
cltd
and
cmp
cmp
jge
dec
pop
mov
mov
mov
dec
xchg
outsb
lea
lods
in
in
mov
jp
add
dec
xor
ja
aas
lret
leave
cmc
subps
and
ja
test
mov
daa
cmpsb
mov
bswap
gs
pop
xchg
jae
shlb
xor
subb
fdivl
inc
fstl
das
fimuls
out
out
push
dec
xchg
sbb
mov
cmpsb
in
jl
push
lahf
out
lcall
lret
lea
xchg
fistpl
jne
mov
mov
mov
add
sahf
mov
stos
mov
add
mov
and
xchg
shl
inc
pop
daa
sbb
jne
push
add
mov
aas
mov
insb
jecxz
ss
mov
sti
add
dec
insl
xchg
repnz
inc
pop
inc
push
jecxz
xor
outsl
sub
stos
loopne
push
pop
mov
ljmp
pop
data16
fcmovbe
aas
sti
int
push
jne
mov
adc
xchg
fistps
gs
pushf
bound
loop
jb
nop
leave
movsl
xor
shl
mov
sbb
ljmp
out
inc
imul
popa
jge
sbb
mov
fnstcw
push
jp
sub
dec
idivb
push
inc
mov
fdivs
adc
rorl
jbe
out
lods
pop
dec
ret
out
fwait
pop
and
out
cmc
and
into
movsb
aas
aad
stos
pushf
mov
icebp
cwtl
jle
xchg
js
dec
mov
sbb
and
xor
stc
jbe
fwait
cmp
add
cltd
scas
scas
pop
loop
lea
mov
xchg
test
enter
out
and
xchg
divl
ud2
sti
mov
cwtl
xchg
iret
push
lea
adc
mov
mulb
les
sbb
imul
adc
pop
jp
push
dec
aaa
sub
in
cmp
das
push
pop
pop
mov
push
or
pop
add
imul
mov
push
aas
repz
inc
inc
pop
rorl
sub
jecxz
mov
test
dec
pop
das
pop
out
insl
out
movsb
sahf
leave
sti
es
and
sub
aam
pusha
mov
or
gs
mov
into
sbbl
outsb
lahf
rol
inc
pop
mov
jp
xor
xchg
jp
xor
lods
jnp
push
push
adc
lcall
es
mov
pop
sbbb
adc
push
call
mov
call
mov
fiaddl
xchg
loopne
in
out
sbb
jmp
mov
xchg
test
cltd
in
push
xor
or
mov
pusha
add
mov
scas
jno
int
mov
scas
inc
in
jmp
jb
sbb
and
pop
pop
inc
sbb
jg
sub
add
xchg
dec
sahf
scas
sar
icebp
push
mov
out
cmp
xor
push
add
add
frstor
dec
out
aas
loopne
add
mov
sub
test
add
aad
dec
inc
and
fs
mov
add
mov
aaa
lds
inc
mov
xchg
jno
arpl
cs
pushl
ja
push
mov
push
cmpsl
packssdw
or
push
mov
outsb
dec
mov
jnp
movaps
fbstp
lods
sub
iret
in
sub
iret
add
inc
int3
mov
pop
push
pop
cmp
push
sahf
loope
mov
push
shr
adc
lds
lret
fcoms
and
sbb
cmp
mov
fwait
movsb
in
imul
sbb
or
and
adc
xchg
jmp
pop
lds
test
and
xchg
or
or
fwait
or
mov
in
mov
pop
xor
mov
call
ret
mov
xchg
imul
mov
sub
dec
mov
sub
sbb
add
popa
fisttps
mulb
push
mov
mov
stos
das
add
add
or
mov
fsub
inc
xchg
mov
push
sbb
xchg
cmpsl
pop
jo
xor
mov
push
pop
call
xor
loope
mov
test
sti
dec
addr16
bound
popa
jle
fst
addl
mov
pop
sbb
cmc
or
outsb
gs
pop
aam
xor
inc
jle
or
lds
lods
jo
sbb
fildll
scas
aad
lods
sahf
test
leave
push
mov
pop
lret
in
dec
sub
loope
fs
mov
popf
pop
mov
or
and
jnp
ja
icebp
jb
mov
pop
popf
mov
pusha
push
ss
lret
in
xor
lods
push
ret
mov
mov
mov
jge
mov
lock
jae
es
test
shlb
into
shrl
loope
scas
adc
adc
adc
xchg
fdivrs
dec
mov
les
xchg
and
xor
pop
inc
decl
jg
jae
aaa
jmp
xchg
sub
xchg
pusha
rorb
movsl
sub
mov
jb
mov
and
and
jmp
outsb
pop
cmp
mov
dec
mov
adc
dec
mov
in
fmul
fisubs
xor
mov
rcl
pop
pop
dec
sahf
mov
test
outsb
cmp
pop
cwtl
xchg
sti
lods
pop
xor
and
orl
xchg
ret
sbb
cld
sub
inc
or
xchg
rcrl
or
ds
or
sub
lea
lret
rorl
and
xchg
or
jge
push
clc
out
cvttps2pi
xor
xor
mov
mov
js
jge
dec
repz
pop
stos
mov
inc
dec
xor
push
scas
mov
test
dec
sub
or
push
cmp
jmp
or
mov
loopne
mov
pushf
cmp
int3
xchg
mov
add
jmp
pop
sahf
pusha
clc
push
ds
xlat
xchg
jmp
xor
leave
stc
sti
dec
xchg
icebp
mov
adc
int3
pop
push
aam
out
pop
mov
les
mov
mov
inc
ljmp
aas
inc
or
sarl
mov
dec
add
in
jmp
es
xor
xlat
daa
aad
dec
aas
sub
lret
imul
jl
jge
fisttps
imul
xchg
xchg
push
mov
cmp
jg
cld
loope
xor
stos
hlt
ret
sbb
or
dec
push
daa
jmp
push
xlat
push
pop
cmp
pop
mov
fidivrs
mov
push
std
cmp
and
sub
mov
das
stc
add
or
xchg
call
shlb
out
or
imulb
cmp
adc
pop
mov
hlt
imul
outsl
mov
push
xor
dec
xchg
mov
ljmp
push
push
sarl
test
sub
lahf
jle
movsl
jecxz
push
stos
jo
adc
out
pop
stc
rclb
pop
decl
popa
ds
imul
and
jb
ret
repnz
cmp
ss
or
mov
leave
cltd
or
push
lcall
lock
xchg
inc
imul
into
in
cli
sbb
push
sub
nop
mov
xchg
xchg
test
cmp
icebp
and
lahf
inc
icebp
jno
xchg
jl
xchg
sbb
sbb
enter
xlat
sbb
push
jo
push
xor
jg
lock
pop
orb
xchg
add
cmp
clc
loopne
sub
and
mov
and
dec
out
mov
lods
in
inc
xor
xor
pop
test
sahf
insb
cmpsb
ljmp
mov
pop
cli
xor
add
and
je
es
add
sbb
enter
ret
mov
cmp
adc
leave
xlat
xchg
fwait
mov
sub
lods
int3
push
les
in
cmp
loope
xchg
outsb
out
int
sti
clc
repnz
out
dec
jp
cvtps2pi
pop
jp
scas
cmc
sbb
arpl
xchg
sbb
hlt
test
js
daa
inc
xchg
popl
pop
orb
mov
pushf
push
adc
cmp
jg
lds
lds
add
pop
mov
push
add
shl
push
cmp
daa
lods
push
lods
xor
gs
cmp
lock
add
fnstsw
pop
mov
test
and
enter
jnp
xor
push
fisttpll
sbb
mov
ret
sbb
mov
sub
push
jp
mov
nop
dec
dec
xor
dec
xchg
fwait
cmp
cmp
push
or
fidivrs
cmp
jecxz
adc
rorl
out
mov
cmp
adc
xor
pop
fsubrl
jae
pop
addl
std
sbb
inc
jle
or
push
scas
fsubl
mov
or
icebp
pop
push
mov
bnd
leave
je
sbb
outsl
or
mov
lock
aam
fistpl
nop
inc
sbb
push
mov
fwait
shlb
repz
xor
fcomip
sub
insl
stos
cld
iret
aam
or
jns
lahf
pop
scas
adc
inc
call
and
or
mov
imul
cwtl
jecxz
and
push
faddp
mov
in
push
inc
xor
fldenv
mov
xchg
push
jecxz
sbb
inc
insb
mov
or
xor
push
push
ja
push
loop
outsb
popf
pushf
pop
or
movlps
dec
cmp
cmp
push
pop
js
lcall
shll
xchg
or
adc
call
sti
pop
mov
push
popa
mov
pop
shlb
push
inc
lods
test
mov
sub
test
inc
hlt
mov
into
push
mov
lcall
jb
jl
mov
or
pop
fsubs
jge
xchg
adc
push
inc
pop
in
add
sbb
pop
out
aas
jmp
ud1
xchg
sbb
push
repnz
cmpsb
pop
adc
mov
sbb
push
jb
mov
mov
adc
add
scas
add
dec
pop
xchg
stc
call
and
pushf
dec
sub
addb
cmpsb
mov
cwtl
mov
cmp
and
aam
ret
enter
cmpsl
stos
mov
ljmp
jge
aad
xchg
xchg
jne
adc
xor
push
dec
mov
iret
adc
lods
cmp
sbb
cwtl
es
lock
fbld
fs
enter
lcall
push
sub
mov
dec
xchg
decb
in
in
xor
and
cmp
adc
fimuls
mov
in
test
jecxz
int3
rcr
jge
gs
pop
es
faddp
push
sub
add
shlb
mov
cwtl
jp
addb
fmull
insl
xorl
inc
aaa
inc
sub
scas
jns
nop
adcb
cmpb
sar
test
pusha
test
add
mov
pop
mov
cmp
ret
fisttpll
and
pop
lretw
shl
orl
lret
dec
and
rorb
loope
ljmp
pop
imul
pusha
dec
fdivl
xchg
add
add
mov
nop
repnz
dec
test
pop
inc
inc
or
rclb
sbbl
call
es
pop
scas
sbb
movsl
mov
arpl
mov
adc
sub
repz
push
xchg
xchg
sbb
bound
push
addr16
addr16
lret
in
aas
push
es
add
dec
xchg
jae
mov
lret
jmp
xor
inc
pop
andl
sbb
leave
daa
sar
fimuls
push
out
fmul
mov
rcr
in
mov
push
mov
dec
and
add
mov
inc
arpl
pop
test
into
mov
mov
push
arpl
inc
xchg
sarl
loop
jle
std
adc
into
je
jge
and
scas
cwtl
mov
push
push
out
test
and
cmp
mov
fiadds
or
lret
mov
sub
pop
mov
test
push
pop
iret
ljmp
cmp
mov
stc
arpl
mov
pop
clc
enter
dec
add
ficoms
mov
jb
inc
jne
mov
mov
je
mov
cld
xlat
xchg
jp
mov
sub
addr16
or
xchg
jle
and
push
xorl
jo
jne
cwtl
push
inc
push
xchg
and
iret
mov
into
inc
push
ljmp
movsb
xchg
mov
pop
and
mov
test
mov
fst
mov
and
mov
das
or
push
inc
out
xchg
call
adc
leave
pop
lods
outsl
aad
shr
popf
xor
pop
mov
mov
scas
rcll
push
xchg
mov
push
mov
inc
push
xchg
test
mov
rclb
dec
inc
pop
xor
jle,pt
fidivs
out
push
clc
mov
pop
adc
sbb
mov
movsl
pavgw
fwait
mov
mov
sahf
sub
lahf
xor
mov
dec
pop
jno
xorb
mov
mov
dec
daa
pop
mov
adc
in
mov
pop
dec
ja
push
lea
inc
out
jno
cmp
cmp
sub
pop
cld
frstor
pop
loop
inc
or
push
in
out
icebp
xchg
mov
xchg
xchg
imul
jbe
push
dec
cs
xorb
push
into
xchg
faddl
jo
mov
stc
jecxz
ror
xor
add
adc
xchg
and
subb
mov
ficoml
iret
jg
cmp
sub
lea
outsb
jmp
subb
aas
mov
inc
and
mov
dec
negb
sub
mov
in
push
scas
bndstx
adc
xchg
fists
mov
sbbl
ja
pop
dec
js
jno
into
hlt
ljmp
sar
inc
pop
inc
mov
push
add
ror
xchg
push
or
add
or
push
mov
and
faddl
hlt
cmp
je
pop
inc
movsl
jno
sub
pop
dec
shl
pop
push
sahf
adc
outsl
shll
adc
leave
enter
ret
jge
aam
adc
in
mov
mov
and
and
inc
inc
xchg
sbb
push
loopne
repz
loopne
adc
dec
in
arpl
xchg
add
movsl
jbe
sub
test
pop
fldl
xchg
mov
repz
pop
sar
pop
jp
dec
int
sbb
mov
sahf
xor
jmp
shlb
and
dec
in
sarl
mov
or
adc
sub
out
insl
or
sub
std
mov
ffreep
mov
repz
pmullw
adc
dec
mov
mov
sub
cld
jl
fisttps
aam
jl
xchg
jg
dec
inc
mov
imul
push
mov
xor
fdivrs
push
clc
jno
mov
lahf
jge
xor
lds
or
pop
cmp
lret
adc
fsub
mov
or
aas
adc
dec
call
pusha
test
jmp
mov
add
popa
mov
jbe
fiadds
sbb
mov
fnstcw
loop
lea
stos
es
xor
iret
cmc
out
push
lds
imull
loopne
lds
and
loopne
inc
fcompl
aam
es
cmp
icebp
test
or
jo
roll
hlt
hlt
int
dec
data16
les
mov
pop
add
lea
daa
add
aaa
cmpsb
add
and
cmp
push
es
adc
sub
add
pop
cmp
jge
pop
push
nop
adc
push
jns
dec
mov
ljmp
scas
inc
lret
cli
or
ds
sbbl
jp
mov
sub
jns
out
add
jp
sbb
and
mov
pusha
inc
lds
xchg
lods
fs
add
cmpl
cmpsb
movsb
dec
push
sbb
fdivrs
hlt
dec
lock
outsl
inc
inc
adc
ret
sahf
dec
into
mov
movsl
pop
jbe
lret
mov
dec
adc
insl
sarl
movsb
xchg
cmp
test
push
mov
xor
push
dec
sarb
inc
mov
push
pop
aas
stc
fsts
insb
mov
test
es
jecxz
sahf
cmc
and
mov
and
pop
loope
pop
push
test
jmp
inc
out
imul
pop
mov
aad
ss
cmp
cmpsb
mov
lea
cmp
sub
sarb
sub
sbb
in
in
aas
into
imul
jecxz
jbe
cmp
std
rorl
out
pop
push
int
mov
mov
enter
mov
bound
sub
ror
in
mov
mov
jbe
pop
loopne
jo
aad
inc
and
dec
imul
int3
add
outsb
arpl
mov
mov
inc
outsl
cmp
test
in
mov
and
add
inc
inc
xor
rcl
xchg
pop
pop
pop
in
test
add
jb
fstpl
arpl
sbb
rcrl
fdivs
push
aas
lahf
popf
pop
in
push
mov
mov
fistps
push
inc
mov
pop
cmp
movb
cmp
shl
or
push
movl
cmpsb
mov
cmp
adc
in
xchg
and
shrl
cli
add
fistl
jne
xor
xor
stos
xor
jecxz
loop
and
cld
adc
xor
dec
rcr
sub
adc
dec
add
and
mov
mov
pop
insb
push
mov
out
std
cwtl
test
pop
pop
dec
stos
cld
repz
inc
enter
push
shr
push
in
in
or
ret
push
outsb
mov
je
jo
subl
inc
cmp
add
adc
inc
cmp
cmp
dec
mov
pop
test
test
insb
push
call
push
repnz
mov
pop
insl
xchg
sub
cmpsl
push
dec
loope
notb
pop
adc
orl
add
mov
and
and
adc
mov
adc
addr16
std
mov
mov
addr16
adc
add
add
jmp
test
mov
pop
sbb
adc
inc
pushf
cltd
leave
xchg
movsb
mov
cmpsl
pop
adcb
fnstsw
lea
arpl
pop
pop
pop
inc
fwait
pop
push
jmp
inc
es
cld
pop
addl
mov
sub
cmp
jne
fcmovnb
add
out
out
push
out
sbb
ret
lods
lcall
xor
test
outsl
mov
mov
and
pop
mov
add
fidivrl
subb
sarl
movsl
xor
push
mov
add
mov
xlat
xor
mov
or
shll
mov
fsubrl
jp
outsl
dec
in
out
jp
jle
mov
mov
outsb
and
cmpsb
add
sub
call
or
popf
adc
mov
and
xchg
clc
inc
arpl
fdiv
mov
sub
pop
dec
or
sbb
mov
dec
out
sahf
sahf
pop
mov
mov
xchg
inc
inc
cwtl
mov
mov
repnz
push
insb
fsubrs
out
pop
scas
cmpsl
repnz
ljmp
lahf
sbb
mov
aaa
and
in
dec
xor
les
mov
test
pop
dec
mov
cltd
lahf
loope
dec
xchg
sbb
adc
repz
jbe
rcl
xchg
sbb
jb
in
mov
or
cltd
adc
aas
sub
sbb
cmp
insl
scas
xor
xor
fcmovnb
loop
lret
fildll
fdivr
test
lret
clc
ljmp
mov
bound
push
leave
mov
aad
cmp
push
cmp
pop
add
in
pop
icebp
repnz
repz
add
cmpsb
mov
jmp
out
ss
cmp
push
lds
pop
loopne
test
inc
stos
or
aaa
xchg
scas
xchg
add
add
sub
dec
sub
jle
ret
mov
fnstsw
adc
push
pop
sarb
xchg
je
push
xchg
sub
and
aas
iret
gs
pusha
movsl
and
jmp
mov
xor
outsb
mov
lods
jg
xor
inc
xor
or
roll
or
inc
cmpsl
fcmovu
sub
adc
mov
sbb
jo
push
pop
leave
sbb
fs
outsb
xchg
push
aaa
ds
mov
push
subl
dec
mov
jl
push
jl
popf
xchg
je
test
repz
sub
mov
mov
add
int3
es
sbb
and
add
insb
sbb
in
sub
in
insb
add
leave
and
repnz
mov
cwtl
inc
jp
sbb
jge
push
and
or
dec
pop
push
fucomp
cmp
push
outsl
pop
cmpsl
cwtl
cmp
jge
push
adc
xchg
jecxz
pop
movsb
mov
push
hlt
mov
enter
push
test
xchg
je
leave
sar
out
push
sbb
push
daa
xchg
push
negl
fwait
dec
mov
cwtl
sub
mov
movsb
pop
scas
dec
or
ljmp
and
movsb
sbbb
and
push
dec
imul
cli
pop
cmp
pop
pop
and
fisubl
push
pop
shll
addr16
inc
sub
push
xchg
pushf
aas
jl
aas
sub
jnp
insl
stc
fcmove
movsl
adc
mov
rcrl
inc
adc
scas
jle
in
icebp
xor
push
popf
lret
std
xlat
fwait
jno
por
xchg
mov
push
push
rcr
loop
insl
pop
sbb
xchg
mov
add
stos
pop
lcall
nop
pop
lret
jne
stos
mov
pusha
sbb
ret
push
ds
outsl
stos
pop
stos
aas
xor
add
loop
adc
arpl
imul
push
addb
mov
in
xchg
xor
dec
jae
int3
out
sbb
pusha
dec
clc
xchg
xchg
mov
jne
xor
lods
add
outsl
addr16
repnz
fistpll
fs
xor
fwait
and
pop
imul
cmp
pusha
xchg
xchg
cmpl
jnp
inc
push
int3
pop
lds
push
aam
cmp
fdivrs
or
mov
stos
pusha
clc
sbbb
mov
jno
adc
inc
xchg
mov
ss
test
jo
add
or
test
imul
call
adc
test
mov
bound
imul
sbbb
out
mov
push
push
outsb
loopne
rclb
xchg
in
adc
mov
lcall
mov
lret
xchg
sti
cmp
push
rolb
jne
stos
jne
xchg
cmp
add
mov
mov
and
inc
enter
mov
ret
test
mov
into
xchg
xchg
jle
cmpb
push
je
test
inc
jle
rcll
popa
mov
xor
shrl
ret
xor
jne
inc
mov
jmp
pop
mov
sbb
or
int3
shlb
or
lods
sar
int
adc
push
jno
mov
and
mov
addr16
mov
aad
ret
pop
lods
cld
mov
insb
jns
inc
dec
mov
adc
dec
gs
std
cmp
inc
mov
mov
or
xchg
fcompl
xchg
icebp
aad
rcll
pushf
cmpsl
cmc
scas
fwait
and
cmp
in
inc
jge
aam
fsubl
add
lds
sub
and
lods
push
pop
leave
stc
adc
xchg
push
sti
sub
inc
xor
mov
pop
shlb
push
xchg
loop
or
js
sbb
jmp
mov
jb
stos
repz
dec
lock
ret
loope
enter
add
add
sbb
jae
cmp
mov
mov
xchg
push
push
add
add
lahf
add
ficoms
loop
outsb
jl
sbb
rep
mov
jl
out
jl
mov
pop
mov
inc
lods
cmp
test
or
sbb
mov
mov
dec
dec
sub
test
out
cmpsb
jno,pt
loope
dec
rcll
pop
arpl
cs
and
std
push
xchg
imul
fldenv
mov
mov
aam
jg
push
aam
call
dec
fcoms
xor
inc
xor
xor
icebp
mov
std
int
jno
pushf
xchg
sub
jns
in
cmp
jb
jae
push
jb
xlat
push
push
cmpsl
adc
adc
jno
out
mov
popa
int3
orb
std
adc
scas
stos
js
mov
inc
jbe
or
pop
faddp
sub
insl
jg
js
push
movsb
les
or
cmp
xchg
loop
jge
sub
mov
jnp
ffreep
add
inc
sub
xor
into
cmpsl
je
jnp
add
mov
lret
xchg
push
push
push
mov
push
js
in
pop
jge
mov
fstps
es
fwait
dec
push
addr16
jmp
or
je
push
mov
push
inc
pop
sub
mov
stos
dec
mov
andl
push
mov
add
mov
push
outsb
xor
xlat
std
xor
test
imull
push
add
fadds
cmp
jne,pn
ret
mov
mov
hlt
in
fiadds
and
push
rcl
sub
out
jmp
daa
xor
push
stc
push
cwtl
inc
mov
shl
inc
cmp
cld
jne
sub
cmp
fisttpll
or
pop
fcom
mov
add
cld
inc
adc
ficomps
dec
mov
jne
mov
imul
push
inc
jmp
movsl
call
sbb
mov
jnp
mov
enter
jnp
addr16
jge
xchg
xchg
or
fwait
icebp
lret
addr16
cmp
add
ret
xchg
aaa
mov
xchg
fwait
leave
mov
add
jl
movsb
add
sahf
xchg
aaa
pop
cltd
xchg
ja
dec
inc
adc
xlat
icebp
in
lock
js
out
sbb
push
cmp
stos
dec
aaa
mov
jnp
into
mov
loop
cmc
jle
cmp
je
dec
mov
lea
or
mov
mov
mov
jb
test
mov
mov
pop
pop
sub
mov
loope
jno
and
outsl
jnp
icebp
cmpl
or
idivb
popa
leave
nop
inc
inc
add
pop
in
std
dec
cmpsb
pop
jbe
lahf
cmp
mulb
nop
lea
in
fcmovne
loope
adc
xchg
lock
mov
cmpsb
gs
int3
lods
pusha
ret
aaa
test
in
dec
arpl
pop
jecxz
pop
pop
rolb
ret
cmpsb
xchg
mov
ret
sahf
lea
pop
call
jno
subl
jnp
cmp
or
loope
cmp
in
fdivrl
pop
xchg
jge
call
jl
or
aaa
sub
aad
adc
stc
mov
jge
sarl
mov
js
popa
push
lods
jle
test
push
or
pop
mov
mov
inc
imul
pop
scas
adc
cwtl
inc
dec
jno
xchg
shlb
inc
ss
sub
mov
ficoms
insl
test
test
dec
js
arpl
out
gs
daa
repnz
fwait
outsb
sbb
sahf
loopne
adc
test
aam
test
push
bnd
jns
add
sub
mov
jae
loope
lcall
js
push
mov
pusha
push
jns
movsb
mov
push
test
imul
std
ljmp
xchg
js
pop
xchg
mov
and
add
fsubl
jle
mov
popa
bound
bound
sbb
mov
movsl
mov
cmp
pop
imul
sbb
nop
or
sbb
or
mov
inc
push
push
imul
mov
inc
sbb
pusha
adc
or
xorl
pop
jg
outsb
sbb
popf
push
sti
cmp
fisubrl
test
cs
pop
fstps
ret
cs
sbb
scas
clc
or
xlat
jmp
sub
adc
std
cmp
mov
mov
lods
nop
pop
push
xor
fsubr
xor
fcomi
mov
jno
or
int
movsl
fcomps
lcall
into
dec
scas
or
in
add
mov
popf
les
adc
dec
mov
xor
aaa
pop
push
sbb
mov
fwait
loop
mov
inc
ficompl
fcomp
cmp
add
xor
int3
rorl
mov
test
aaa
andb
leave
shl
mov
jg
punpckldq
push
or
adc
fiadds
cwtl
shlb
rorw
je
push
or
into
sbbl
inc
inc
push
repz
lds
push
and
mov
in
sbb
icebp
mov
mov
push
ret
dec
and
fs
fucomip
je
std
test
or
xchg
pop
notl
loop
icebp
dec
inc
push
clts
hlt
rorl
jbe
push
pop
and
add
mov
lods
mov
jle
sbb
fcompl
or
push
pusha
sbbb
test
punpckldq
xor
pop
enter
inc
sti
stos
adc
jb
mov
lods
out
ret
mov
stos
mov
aaa
dec
push
push
adc
imul
scas
popa
int3
test
mov
jmp
mov
add
dec
dec
loop
cmpb
inc
or
xchg
lahf
pop
loopne
imul
adc
xchg
popa
shrl
jbe
into
add
mov
insl
xor
and
xchg
mulb
mov
stc
in
les
mov
hlt
add
gs
cmp
sarb
pop
and
mov
call
scas
in
adc
mov
scas
pop
fistpll
cwtl
mov
out
fmuls
ljmp
push
add
xchg
sbb
fwait
cmp
aas
xor
inc
xor
jmp
pop
es
sub
bound
loop
sbb
fidivrs
sub
inc
mov
sub
outsb
insl
adc
and
mov
loopne
or
jo
and
negb
stc
dec
bnd
push
xor
mov
aas
insb
dec
xchg
out
loopne
push
rcl
popa
imulb
shll
je
ljmp
add
out
sti
sub
jmp
adc
fisttpl
push
fnstcw
mov
mov
fdivrs
clc
xchg
mov
hlt
mov
and
je
push
adc
pop
addr16
shl
stos
push
cmp
sub
loope
lea
ljmp
fst
cltd
lret
push
or
out
add
mov
mov
es
andl
mov
test
fs
ljmp
cmp
sub
pop
nop
stos
xor
insl
inc
das
push
mov
aam
push
mov
sbb
cmpsl
and
aas
test
out
pop
jne
mov
push
sbb
pop
cwtl
xchg
ds
fsubs
dec
xchg
sahf
jg
jmp
xchg
sub
mov
or
add
sbbl
insb
mov
or
bound
or
test
rcll
ret
mov
stos
lods
adc
add
and
push
dec
jbe
fmull
mov
pop
cmc
xor
jns
jp
inc
push
clc
pusha
push
cld
jnp
pusha
je
inc
sbb
push
mov
adc
adc
mov
push
aas
rol
xor
xchg
cmp
fildll
pop
lods
fisubs
adc
xchg
mov
jne
pop
cmp
dec
inc
cwtl
cmpsb
in
inc
test
aad
mov
imul
test
fwait
ds
aad
jmp
ret
fmuls
insb
aaa
loopne
imul
cmp
insb
in
or
cmp
xorl
xor
imul
popf
pop
dec
loop
shl
jae
adc
lods
push
lcall
loop
mov
dec
rcl
cmp
leave
mov
add
addr16
popa
cmc
arpl
das
mov
push
push
mov
adc
into
js
inc
mov
pop
and
icebp
loopne
popf
push
popa
jbe
out
adc
arpl
insl
js
neg
mov
mov
sub
out
add
mov
cmc
fidivl
call
test
mov
add
add
scas
mov
je
das
sbb
or
lcall
jle
ja
cmc
inc
mov
loopne
in
push
push
or
push
lahf
jbe
push
out
cmp
inc
push
adc
mov
push
fbstp
mov
shrb
and
sub
rorl
pop
orl
push
add
dec
push
scas
mov
add
mov
aam
stc
dec
inc
cli
jl
jge
movsl
hlt
es
push
movsb
loope
mov
add
jns
jp
jne
cmpsl
aas
loope
faddl
sbbl
sarl
pop
jl
or
jns
sahf
push
je
jge
psubb
jg
xor
cmp
mov
adc
in
cmpsl
mov
xchg
sub
outsl
mov
cmp
push
cmpsl
popf
ljmp
mov
and
adc
dec
push
aam
jnp
mov
jge
popa
inc
scas
xchg
sub
adc
or
mov
imul
add
out
jb
jge
inc
jo
add
addr16
repz
sbb
inc
jp
stos
inc
add
xchg
pop
inc
gs
std
jns
adc
lock
scas
rcrl
sub
mov
jne
adc
outsb
jno
ficompl
dec
and
sub
shrl
sub
push
xor
popa
addl
jnp
jno
xchg
xchg
pop
js
lods
dec
push
push
cwtl
ret
jns
or
sub
dec
cli
imul
outsl
in
add
fdivs
loope
lahf
push
mov
sub
jbe
stc
sahf
sub
nop
int
xchg
jo
insl
ret
dec
push
movb
orb
test
cltd
fwait
jp
into
push
xchg
ret
ret
mov
mov
inc
jg
cmp
push
out
cmp
mov
test
ficoms
and
sbbb
inc
mov
sub
enter
mov
mov
jb
add
add
fisubl
push
shl
aas
or
and
insb
out
testb
pushf
mov
inc
dec
pop
inc
mov
xor
mov
cmp
push
mov
cmpb
lods
repz
call
repnz
pop
lahf
push
add
mov
test
lods
lock
mov
cmp
pop
popf
xchg
and
xchg
and
inc
clc
std
mov
mov
and
arpl
je
or
stos
pop
sbb
xchg
sbb
pop
mov
das
ljmp
mov
outsb
out
pop
jnp
icebp
xorl
push
ljmp
movsb
inc
fidivl
shl
mov
xchg
dec
imul
xor
push
add
sbb
arpl
cmp
ret
pop
mov
push
std
js
mov
mov
inc
xchg
ljmp
ss
clc
int
jne
testl
mov
cmp
mov
push
cmpsl
orb
lods
arpl
sub
push
pusha
push
jge
cmpsl
je
lock
add
loope
loop
ret
xlat
lods
pop
negl
mov
xor
push
jbe
in
add
cmpsb
jmp
mov
fbld
push
aad
mov
std
enter
push
or
inc
out
into
lods
pop
adc
adc
dec
in
sub
rorl
sbb
inc
rcl
add
arpl
mov
lea
inc
test
popa
pop
outsl
add
out
mov
lahf
aas
push
inc
cmpl
in
sbb
sub
mov
add
std
push
pop
repnz
mov
xor
mov
mov
jecxz
cmp
inc
or
cmp
in
push
add
cld
xchg
clc
or
push
jne
jbe
scas
ss
mov
jne
dec
scas
jmp
ds
mov
std
fs
in
push
or
xchg
push
sbb
xor
xchg
or
das
into
cmpsb
sbb
leave
sarl
xor
stos
nop/reserved
loop
cmpl
leave
movsb
add
ret
sbb
sahf
dec
xchg
xchg
or
mov
aas
mov
xchg
or
sarl
xlat
mov
cmp
pop
fdivrs
push
in
mov
or
push
push
jo
das
cmpsl
xchg
push
test
push
aam
push
mov
int3
xor
sahf
jno
sti
push
inc
mov
mov
mov
inc
ret
adc
stos
imul
shl
mov
je
and
dec
jp
ffree
out
sbb
dec
test
mov
repz
test
stos
ss
xchg
add
inc
push
sahf
jae
icebp
aam
jns
pushf
test
rcl
mov
scas
ds
lds
mov
push
insb
jnp
std
mov
imul
mov
sbb
lahf
lods
arpl
fdivrs
in
repnz
sbb
jne
adc
adc
xchg
cmp
test
sbb
jl
out
es
cmpsb
dec
negb
dec
pop
std
nop
movsb
mov
add
cmp
fmul
out
add
adc
std
and
inc
out
das
out
fldcw
sbb
mov
sbb
jle
jge
lret
mov
jp
or
and
add
sub
sbb
pop
bsr
fmuls
cmc
mov
sbb
xchg
xorb
gs
and
lea
loopne
out
loopne
pop
inc
push
ficoms
or
fucomp
jbe
xchg
hlt
fucomp
outsl
jns
sub
cmpsl
imul
jecxz
in
aad
fmull
jno
jecxz
fwait
mov
cmpsl
and
mov
fisttpl
and
jg
lahf
sub
push
mov
dec
add
addr16
pop
addb
les
sub
dec
scas
lock
cmp
jnp
jl
jmp
lret
std
xor
cmc
jno
outsb
imul
or
es
imul
mov
cmpsl
jp
ret
addr16
popf
ja
outsl
and
ljmp
sbb
and
sar
pop
lret
test
cltd
jb
lods
pop
jnp
push
cmp
adc
in
rorb
adc
stos
mov
fcmove
sbbb
out
or
stos
add
lods
pop
in
enter
mov
movsb
nop
xor
mov
mov
push
cmp
mov
out
loopne
lock
inc
inc
fimuls
lret
sbb
daa
and
arpl
pop
cmp
fisttpll
xchg
push
xchg
dec
repz
sbb
push
rorb
sub
sbb
jo
les
stos
push
dec
lods
mov
pop
aam
std
ja
ret
pop
fwait
cmp
shll
jg
and
movsl
fiaddl
lret
out
xchg
pop
leave
scas
std
cmp
pop
ret
daa
cmpl
cmp
push
jl
enter
jmp
pop
dec
mov
mov
movsb
push
aas
and
leave
cmp
cs
test
pop
pop
aam
out
push
insl
sub
leave
push
cmp
or
xchg
sub
test
sarl
or
sbb
fistpl
aas
into
mov
mov
cmp
enter
xlat
into
mov
int
bound
add
or
mov
lock
scas
lcall
aam
mov
push
jl
in
xchg
cmpsb
stc
add
and
addl
imul
out
fildll
mov
repnz
mov
mov
mov
inc
in
scas
cmp
mov
std
dec
sbb
inc
stos
add
sub
loop
and
mov
xor
mov
popf
movb
hlt
mov
jno
sahf
xchg
add
jmp
xchg
jecxz
push
add
sbb
insl
mov
pop
shrb
test
test
imul
sbb
jecxz
cmp
mov
mov
inc
sbb
aas
jmp
jbe
sbb
sbb
push
int
stos
cmc
scas
mov
stos
stos
jno
jl
cmp
jge
stos
aam
pop
lods
aam
in
out
push
insb
outsb
mov
xor
daa
outsb
stos
stc
repz
mov
adc
mov
jbe
cmp
push
dec
popa
cmp
enter
test
jmp
incl
jg
popa
jo
xchg
ds
movsl
scas
pushl
repnz
sbb
les
popl
and
test
pop
xchg
cmp
les
mov
leave
sub
rcll
and
sbb
mov
fisubl
je,pt
or
push
in
les
loopne
pop
cmp
addl
sti
imul
in
dec
pop
jmp
ficompl
xor
xchg
iret
stc
lahf
dec
pop
in
and
lcall
rcrb
xor
pop
movsl
push
push
imul
enter
stos
andl
jbe
incb
cmp
or
and
ja
xchg
aad
jge
scas
out
or
cwtl
insl
dec
adc
xor
xor
into
ret
ret
lock
sbb
xchg
loopne
xor
mov
bswap
inc
push
or
dec
inc
jmp
push
xchg
insb
lods
sub
push
test
xor
sub
xchg
push
cmc
and
mov
jb
cmp
cmpsb
fbld
outsl
cmp
out
ficompl
mov
or
pop
roll
fs
sbb
lahf
rcll
cmpsb
cmp
jbe
dec
add
adc
mov
dec
cmp
mov
xchg
inc
addr16
mov
xor
jns
and
cmp
lret
jg
cmp
dec
jge
jmp
vaddss
scas
mov
adcb
daa
sbb
and
shll
out
adc
push
rclb
cmp
push
jns
lahf
popf
or
scas
lods
stos
rolb
das
cmp
das
outsb
sar
sub
iret
ret
out
xor
inc
hlt
xchg
sbb
in
or
repnz
sbbl
fimuls
ds
loopne
and
imul
mov
cmp
jge
loopne
aas
out
xor
cmc
sti
push
or
addr16
or
pop
shrb
fstenv
sbb
aam
notl
adc
call
xchg
cmpsl
and
xor
inc
movsb
mov
lret
je
icebp
test
mov
sub
ja
mov
int3
or
int3
into
jecxz
test
pop
cmpsb
mov
push
sbb
push
mov
test
add
add
dec
int
and
and
aam
cmpl
add
dec
jmp
in
imul
mov
ljmp
in
pop
pop
and
push
jae
aas
push
ret
test
or
push
shrl
cmp
lods
mov
movsl
push
rol
inc
xchg
std
in
add
or
jp
jg
test
pop
jbe
inc
xlat
shrb
fsubrs
icebp
adc
inc
cmp
xchg
pop
jno
dec
jnp
or
push
cmp
nop
fstpt
data16
testb
mov
jns
jle
icebp
into
add
inc
jle
sbb
hlt
popf
lret
jle
punpckhwd
or
xchg
daa
stc
jle
call
sub
jne
arpl
scas
das
arpl
mov
loop
adc
mov
mov
jle
add
push
jl
and
add
es
iret
sub
pop
shr
daa
lods
enter
jbe
decl
mov
pop
inc
scas
push
adc
je
cmpsl
jmp
cli
and
leave
ljmp
cmpsl
jl
mov
jne
pop
cmp
mov
cmp
xor
pop
sub
shll
pop
arpl
loope
cmp
insb
stos
outsl
cmp
pop
jecxz
stos
notl
xchg
clc
rorl
inc
mov
repnz
push
test
pop
xor
shrb
push
scas
mov
lea
dec
lock
xchg
inc
rcr
or
cmc
lcall
xorl
stc
cmp
aaa
orb
enter
js
test
std
sub
jl
das
mov
filds
lds
jl
out
sbb
not
scas
xor
sbb
xchg
movsb
xlat
cs
ja
mov
push
add
addr16
and
sar
lds
and
ja
cmp
mov
sarl
mov
stos
popfw
jg
sbb
dec
xor
dec
xchg
inc
test
push
js
cld
cvttps2pi
shr
pop
fldcw
je
rcr
jmp
xchg
lret
mov
test
add
xchg
mov
pop
xchg
frstor
mov
inc
das
pop
cwtl
xlat
mov
jo
pop
and
cmp
mov
ljmp
scas
dec
ljmp
loope
push
enter
dec
mov
inc
and
xorl
stos
fisttpl
test
jnp
pop
adc
push
cmpsb
cwtl
daa
addr16
ret
mov
int
inc
pop
jnp
js
cmpsb
mov
test
jg
xchg
mov
cmc
enter
sbb
rorb
out
lret
movsb
scas
movsl
cmp
fsubs
mov
loope
or
and
popf
adc
ss
push
xchg
and
mov
jp
xor
movsl
in
sub
jmp
sbb
fidivs
push
xchg
mov
lock
mov
mov
xor
sub
dec
ror
jp
pop
pop
ja
pop
shlb
jmp
les
enter
mov
subl
jmp
jle
xlat
shll
ss
cmp
and
add
daa
loop
sub
repz
push
arpl
mov
int3
jg
das
insl
inc
push
idivl
sti
inc
or
sbb
pop
nop
cmp
cmp
call
out
into
dec
jge
hlt
mov
repnz
dec
leave
adc
push
int3
seta
jns
ret
mov
xor
sub
xor
cltd
mov
jp
gs
gs
gs
test
fnsave
xchg
mov
or
in
shrl
jecxz
mov
pop
es
fcmovu
mov
shlb
mov
and
push
pop
or
mov
lahf
lock
sbb
jmp
adc
sub
mov
sub
in
mov
scas
xchg
cmc
clc
mov
fistpll
xor
hlt
fxtract
and
xchg
out
test
bound
push
or
jno
mov
stc
int3
or
add
dec
ja
insb
cmp
aas
pop
lods
pop
sbb
mov
dec
push
inc
imul
iret
iret
mov
in
enter
mov
adc
mov
mov
xor
lea
adc
cmp
pop
stos
dec
aad
cltd
sbb
mov
outsb
addr16
adc
adc
jge
or
cld
or
out
icebp
das
ror
or
or
leave
out
addl
sbb
fdivrl
je
pop
sti
pop
sub
adc
or
roll
mov
sub
ret
pop
in
iret
pop
push
and
scas
adc
xor
xor
jl
fstpl
insb
movsb
or
sbb
stos
sahf
jno
out
jno
jge
insb
sub
out
mov
xchg
push
jle
mov
int
insl
add
stc
push
sbb
dec
and
or
cmpl
sub
jmp
mov
mov
negb
jecxz
das
xchg
rclb
fs
loop
or
cltd
cmp
es
mov
ja
stos
lret
xchg
sub
dec
mov
rcrl
jo
cmp
push
and
mov
loop
loope
dec
adc
ds
jg
push
jg
inc
adc
sub
in
scas
and
mov
mull
clc
mov
jp
dec
rcll
inc
fs
and
dec
hlt
or
idivl
jno
lahf
jnp
and
addr16
jne
jae
or
jp
and
mov
add
push
imul
cmp
cld
mov
fs
fistps
rcrb
push
or
or
loopne
push
pop
and
mov
jp
mov
push
fstpl
leave
adc
mov
and
fldt
clc
jg
cld
mov
mul
cmp
aam
sbb
stc
and
repz
cs
hlt
mov
imul
and
add
std
popf
pop
and
fcomps
or
add
insb
insb
test
aaa
sahf
sbb
pop
xor
sbb
icebp
gs
rcrb
push
jbe
shlb
or
aaa
cmp
clc
int3
mov
xchg
sahf
mov
nop
outsb
or
mov
out
dec
leave
sub
mov
enter
cmp
cmp
shlb
adc
cmp
aas
lahf
das
inc
cmc
jp
xor
pop
pop
ret
mov
fmul
fisubl
jmp
out
lods
repnz
fmul
aam
push
and
mov
inc
das
mov
sti
es
mov
jo
xlat
mov
adc
dec
fdivs
jecxz
push
fwait
stc
xor
mov
dec
mov
loope
dec
mov
jnp
ljmp
test
lahf
cmp
pop
sahf
xor
ret
cli
fcompl
push
rorb
ljmp
pop
or
pusha
mov
mov
shll
mov
mov
cwtl
outsb
jmp
fsubl
subb
and
nop
dec
pop
and
pop
out
adc
push
subb
int
inc
dec
clc
fdivp
mov
cmp
rsqrtps
in
mov
repz
insl
lds
push
fidivs
adc
xchg
add
outsl
imul
and
adc
dec
sub
in
add
sub
mov
jg
stc
fistpl
adc
sbb
or
repz
adc
add
repnz
mov
mov
negl
fdiv
dec
inc
cmc
jo
dec
sub
lods
iret
lods
mov
sub
jb
xor
andps
mov
add
sahf
sahf
insl
push
jg
aas
call
lret
movsl
sbbl
and
pop
cli
or
fcmovnbe
frstor
xchg
fdivl
les
pop
sub
mov
inc
dec
outsl
inc
xchg
mov
fistl
icebp
hlt
cmp
sbb
mov
jle
mov
fs
bound
inc
test
dec
jecxz
in
clc
jnp
repnz
cli
sub
mov
test
sub
adc
in
stc
arpl
xor
ja
mov
aad
or
inc
in
out
xchg
jl
add
stc
cmpl
rcll
mov
stos
lcall
ljmp
push
push
in
jle
into
outsb
ds
or
inc
dec
imul
pop
dec
sahf
sub
push
or
test
jecxz
inc
test
ss
jnp
pop
sbb
cli
fildl
lret
jp
ficompl
mov
sbb
das
mov
mov
mov
xlat
int
add
pushf
mov
jo
addr16
ret
add
repz
pop
pop
push
movsl
pop
dec
xchg
xchg
add
push
out
or
mov
mov
lds
outsl
jo
pop
test
xor
dec
ret
daa
bound
jno
stos
cmpsl
jmp
aam
inc
mov
shrl
nop
jbe
lods
stos
aad
ja
mov
xchg
lods
dec
cltd
adc
mov
rcr
push
jle
mov
std
repnz
in
cmpsl
fldenv
fdiv
adc
in
fists
js
mov
mov
fs
stc
sub
sbb
dec
dec
inc
sarl
lds
push
jne
mov
inc
mov
inc
add
add
mov
sahf
lds
push
sub
je
jae
mov
out
inc
stc
fisubrl
sarl
clc
mov
jno
ss
leave
js
cmp
dec
jns
in
sub
mov
pop
add
movb
cltd
or
rcl
mov
pop
pop
sti
lret
stos
mov
sub
jl
jne
hlt
scas
mov
inc
in
insl
les
sti
dec
jae
les
test
mov
out
call
in
add
xchg
xor
push
sub
or
or
cli
je
pop
add
xlat
pop
mov
and
push
fwait
leave
aad
xor
and
jns
adc
xor
adc
repz
movsl
dec
push
sub
ret
mov
sub
lds
add
lods
out
pushf
xchg
pushf
or
sahf
lods
adc
add
mov
xor
jp
pop
jnp
cwtl
sbb
lock
ds
and
sbb
and
xchg
jae
je
stos
xchg
in
dec
std
ljmp
shlb
mov
add
mov
push
ds
and
jge
stos
lret
mov
cli
fs
std
cmp
sbb
adc
jo
stc
fiaddl
idivb
aas
rorb
mov
jbe
pop
push
or
mov
jg
and
cmp
clc
insl
dec
adc
movsl
mov
adc
jns
pusha
cld
movsb
adc
dec
sbb
xor
lea
inc
jb
outsl
sahf
pop
out
jle
xor
or
ja
insl
leave
mov
xor
and
movsb
fcomps
mov
or
fsubl
push
lret
pop
shl
stos
push
push
sub
in
cmp
roll
add
lcall
fpatan
xchg
idivl
mov
es
or
adc
daa
cmp
ss
hlt
aam
mov
and
mov
out
push
f2xm1
sbb
mov
dec
dec
mov
inc
jns
fisttpl
pusha
ss
fst
popf
loop
or
lret
jnp
leave
or
or
in
add
pop
js
ret
pusha
rolb
fisubs
pop
dec
pop
jmp
fdivrp
inc
jbe
enter
mov
xorl
das
xchg
int
sub
push
inc
jo
adc
mov
outsl
sbb
add
push
arpl
mov
cmpsb
out
popa
jmp
lock
out
popa
sbb
pop
aaa
fldenv
ret
sbb
mov
loope
cmp
sub
or
roll
pushf
aad
fwait
mov
add
clc
jp
sahf
enter
jg
fistpl
aaa
fwait
xchg
loope
and
repnz
out
xor
mov
pop
fldl
in
cmp
xor
pop
adc
xchg
or
xchg
sbb
aam
inc
mov
in
jl
scas
out
lret
arpl
mov
mov
push
xor
pop
dec
fcoms
push
add
inc
adc
jbe
cmp
lcall
cmpsb
sub
es
and
or
ljmp
xorl
cli
sub
inc
test
insl
and
cli
xchg
lahf
push
outsb
mov
adc
push
jne
and
out
mov
dec
scas
adc
cmc
sub
rdmsr
out
cmp
sbb
mov
mov
fisttpl
dec
mov
mov
sahf
test
push
mov
bound
sub
add
imul
cmc
orl
and
data16
adc
xchg
push
xor
inc
repz
mull
vpshufhw
push
lahf
movsl
cmovl
repz
out
add
inc
pop
mov
fisubl
inc
je
call
push
jne
push
xchg
mov
mov
fisttpll
xor
pushl
test
mov
lahf
lahf
xchg
push
sub
negl
lds
cli
adc
add
sub
pop
or
shll
cld
lods
arpl
dec
jl
scas
fidivl
lahf
adc
dec
sbb
mov
adc
add
mov
dec
sub
pop
add
mov
xchg
mov
add
xor
or
pop
fstpl
cmpsb
pop
mov
rcl
cmp
scas
jmp
push
test
dec
out
loopne
push
cld
jl
je
repnz
push
push
xchg
inc
mov
mov
int
cltd
add
ljmp
stos
fsubl
les
or
pop
sarb
sbb
cltd
and
mov
inc
xor
cmp
bound
daa
imull
jo
insl
roll
addl
pop
outsb
inc
hlt
das
add
hlt
out
sbbl
mov
dec
out
sti
ss
enter
js
and
jecxz
insl
jno
cmp
jp
jecxz
jl
xor
dec
test
mov
pop
sar
jae
pop
pop
jne
aaa
xchg
cmpsl
cli
cld
dec
das
adc
jo
int
mov
clc
jae
and
mul
sub
xor
in
dec
fstpt
popf
enter
fildl
mov
hlt
dec
cmpsl
leave
dec
ss
adc
mov
adcb
jecxz
jg
adc
dec
xor
pop
dec
dec
adc
cltd
pusha
movsl
fists
dec
mov
and
jbe
out
mov
or
mov
mov
adc
std
inc
jnp
out
mov
int
add
push
adc
mov
dec
aam
scas
sbb
in
xchg
mov
popf
inc
dec
jmp
dec
add
mov
lods
imul
pop
fsubr
test
push
inc
sbb
std
fwait
test
jl
mov
adc
arpl
testl
subb
lret
scas
int
push
repz
sahf
mov
mov
sub
jae
push
aam
iret
in
loope
and
test
mov
mov
dec
mov
fdivl
fld
push
testb
or
into
subb
add
clc
jbe
lock
mov
sarb
cli
jle
in
js
loopne
cmpsb
mov
notb
into
jnp
bound
dec
aas
idiv
lods
movsl
das
lcall
dec
mov
pop
push
jp
mov
mov
loop
xor
jae
ret
pop
push
fadd
cmpsl
xchg
int
jecxz
in
cmp
pushf
ficoml
in
enter
xchg
lahf
out
in
ds
add
arpl
cmc
jnp
cwtl
test
gs
inc
jns
xchg
flds
xor
cmpl
mov
enter
xchg
adc
in
inc
sub
adc
mov
sbb
iret
inc
pop
aas
sahf
add
inc
jnp
cld
int
call
add
jb
add
mov
pushl
rorb
decl
hlt
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
adc
push
mov
popa
bound
pop
test
fdivr
mov
xchg
inc
jge
xchg
sbb
out
ds
pusha
clc
cld
dec
push
jge
xor
sbb
stos
inc
jne
xor
enter
pushf
mov
pop
cmp
sbb
sub
ds
push
push
cwtl
lret
xchg
sbb
sub
and
push
pushf
imul
mov
inc
es
xchg
test
adc
and
cltd
fcmovu
int3
out
dec
jae
inc
jnp
jo
or
arpl
cmpsb
or
sub
arpl
nop
pusha
inc
xor
ja
inc
filds
mov
cmc
push
addr16
das
adc
insb
push
incl
repnz
stos
cmp
cmp
lret
into
adc
fmull
lea
sbb
sbb
movsl
lea
cltd
push
scas
das
add
sub
mov
shr
fstl
push
sbb
repnz
jo
mov
dec
xor
dec
rcrb
ljmp
lods
inc
xor
push
fcmove
fcomps
cmpl
loop
stos
xchg
fdivr
icebp
stc
inc
inc
xor
popa
sub
aam
mov
enter
push
xchg
stos
lds
fcomps
int3
faddl
test
xor
jb
mov
push
or
ja
je
sbb
jae
pop
xchg
add
xor
and
cld
jns
test
mov
sbb
xchg
stc
adc
fildll
or
cmc
insl
test
inc
das
add
add
scas
mov
cmp
daa
test
lahf
add
gs
inc
rcrb
icebp
or
idiv
push
xchg
imul
mov
sub
stos
cmp
leave
es
in
shrl
mov
or
aaa
ret
adc
dec
addr16
push
rcll
in
mull
and
xor
cmpsb
dec
es
into
xchg
cmp
insb
test
aad
shl
gs
mov
add
adcl
jle
dec
mov
adc
mov
push
dec
or
out
mov
push
or
iret
and
mov
cmpsl
stos
ja
addr16
das
xor
testb
sub
icebp
ret
adc
add
mov
ret
xadd
jmp
cmp
movsb
pushf
mov
mov
in
lods
popa
mov
jnp
pop
and
inc
pop
cmp
inc
in
sbb
xchg
outsb
mov
adc
js
stos
dec
push
mov
add
fildll
dec
jo
pop
fdivrs
rcr
push
mov
mov
stc
pop
imul
pop
or
push
faddl
xchg
dec
dec
fs
rolb
add
leave
cli
mov
out
push
jmp
mov
xchg
mov
popf
std
and
xor
adc
mov
mov
cmp
in
or
das
push
ficoms
xlat
loope
or
lea
push
popa
call
sub
pop
jl
arpl
lods
mov
dec
dec
mov
pop
mov
dec
movb
cmp
rcrb
ficomps
inc
xor
out
inc
xchg
mov
fs
cmpsl
fstps
repnz
jle
roll
pop
orb
adc
pop
cld
pusha
in
iret
sbb
mov
dec
cmp
mov
cmc
sarl
sbb
nop
jnp
push
push
mulb
jns
test
test
mov
xchg
enter
mov
and
push
adc
aaa
iret
adc
xor
cmpsl
push
mov
movsb
loop
jge
jecxz
shlb
into
or
push
aaa
pop
xor
or
mov
lea
push
aad
std
pop
lods
mov
push
lcall
std
dec
jae
lcall
ret
test
cmp
cmpps
xor
outsb
add
fs
test
adc
sti
mov
cmpsb
sub
int
lahf
mov
push
inc
xor
inc
cli
rol
inc
les
jnp
test
xchg
sbbl
push
sar
mov
out
icebp
sbb
and
mov
ret
daa
and
push
xor
xchg
cmpsl
and
or
dec
lret
jmp
mov
sti
mov
cmp
out
pop
hlt
or
aam
es
push
add
jg
das
cmc
jp
nop
jle
and
or
xchg
jmp
xor
mov
imul
push
fwait
outsl
vcvtsi2sdl
xchg
jmp
or
push
fs
inc
test
and
fs
cmp
lods
sub
dec
mov
xor
ja
xor
ja
and
imul
push
aam
and
push
data16
pop
fildll
jle
mov
sbb
cld
pop
sbb
insb
dec
mov
sbb
iret
leave
push
push
mov
int3
or
and
adc
lret
test
adc
dec
test
lahf
xor
int3
jecxz
or
mov
xchg
sub
mov
in
sbb
adc
cld
jnp
cmp
js
int3
imul
xor
mov
jp
daa
push
and
lock
lcall
or
adc
mov
cmc
dec
sub
fwait
xor
scas
jno
jns
jbe
mov
inc
xchg
fadds
cmp
stc
push
mov
cmpsb
add
xchg
rcrl
in
lods
setnp
mov
xor
loope
inc
mov
adc
push
stos
push
dec
pop
pop
sbb
lds
sbb
add
xor
add
mov
shl
pop
inc
negb
dec
scas
fistl
lret
aaa
mov
pop
lock
cmpsb
push
lahf
movsb
fsubrs
sub
sbb
scas
rcll
ds
out
lods
sbb
addb
aad
inc
xchg
xchg
jl
cmp
out
and
notb
mov
daa
mov
push
je
mov
push
inc
js
adc
adc
pop
pop
xchg
lds
scas
push
cltd
lahf
adc
pop
xor
pop
inc
fs
clc
jmp
mov
adc
fdivrl
jle
ret
mov
ret
popa
sbb
scas
scas
mov
sbb
sahf
dec
mov
and
scas
insb
push
cmp
or
dec
mov
lods
push
cld
les
decl
push
add
test
pop
shlb
les
push
and
loope
outsb
xchg
pop
loop
mov
inc
je
and
outsl
mov
pop
cmpsb
test
and
xchg
pusha
xor
mov
aam
mov
sbb
aam
daa
or
jns
adc
lret
decl
cmp
push
fldl
out
sbbl
xchg
jl
adc
lock
and
data16
add
adc
xchg
dec
and
add
popf
mov
test
push
xchg
push
mov
xor
ss
aad
addl
lock
and
and
sbb
pop
mov
jo
loopne
repnz
jne
in
pop
aaa
jl
ficoml
jo
push
cmp
cmp
ds
lcall
add
xchg
xchg
xchg
std
lret
cmp
jmp
fldt
cmp
inc
pop
push
scas
mov
push
nop
pushf
xchg
cs
dec
mov
jl
mov
cmc
mov
lods
dec
and
dec
pushf
aas
lcall
imul
orb
sbb
xchg
adc
cwtl
ljmp
popa
adc
xchg
jmp
or
repz
je
insl
add
add
insl
shlb
dec
xor
mov
test
mov
in
fstpt
dec
xchg
fldl
adcb
fldcw
in
xlat
iret
add
mov
fstl
movsl
add
jo
inc
cmp
and
rorl
cltd
xor
paddd
lea
pop
mov
inc
jne
sbb
mov
xchg
fcmovb
push
jno
rcrb
scas
pop
pop
adc
insb
dec
jge
in
in
and
leave
fwait
xchg
mov
and
fiadds
push
mov
mov
shll
dec
rcrl
testb
cmc
sub
mov
movsl
mov
imul
loope
jecxz
push
daa
inc
sub
jge
mov
cmc
mov
decl
gs
rcrb
test
out
sub
rcl
movsb
out
fstpt
ss
out
call
adc
cmpsb
or
sahf
ret
mov
dec
mov
loope
cmc
repnz
fisttpl
incl
cltd
fmuls
cwtl
inc
mov
lcall
sbb
inc
js
mov
lahf
dec
jnp
loope
roll
and
stc
mov
inc
mov
mov
pusha
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
sub
add
inc
inc
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
pushf
ds
add
inc
inc
add
inc
add
inc
add
inc
add
add
inc
inc
add
inc
inc
add
mov
inc
add
inc
add
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
or
andl
or
inc
add
inc
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
mov
inc
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
addb
in
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
