push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
inc
cmp
jle
jno
jle
xor
xor
ja
or
std
or
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
adc
bnd
inc
cmpsb
arpl
add
xchg
cmp
aas
jo
sbb
lods
push
mov
loop
dec
mov
mov
dec
or
out
inc
pop
mov
mov
add
cmp
jmp
push
pop
mov
xor
xchg
shlb
cmc
xchg
ds
lds
lods
xchg
bound
bound
cmp
lods
adc
out
adc
or
dec
jb
fcomi
jbe
jge
ret
ljmp
stos
mov
lock
in
pop
mov
fiadds
dec
mov
mov
cmpsb
pop
cmp
mov
in
test
lock
jb
cli
js
cmp
jne
xchg
or
insl
pop
stos
add
call
test
bound
sbb
or
pop
idivb
aas
dec
shrb
pop
mov
push
hlt
mov
sbb
sbb
mov
shll
jae
mov
cmc
dec
shrb
loopne
lock
mov
dec
orl
loopne
cmpl
mov
pop
xchg
daa
ja
mov
add
mov
inc
fdivl
jne
mov
and
outsb
jo
in
test
adcl
jge
jge
jb
fsub
cmp
jb
test
ss
in
add
in
test
insl
inc
out
clc
rcll
and
outsb
jno
cwtl
and
les
xchg
add
pop
aaa
adcb
sbb
cmc
sbb
nop
dec
cmpsb
addr16
enter
daa
push
insl
sahf
mov
in
mov
mov
xlat
nop
stos
sti
out
mov
repz
jno
lods
pop
mov
jle
ficomps
add
gs
jo
in
or
push
xchg
mov
jmp
xor
sub
pop
or
icebp
das
mov
cwtl
push
or
jae
inc
out
cmp
or
mov
mov
fnstsw
stos
sub
sbb
scas
jns
dec
mov
mov
dec
xlat
dec
mov
fstpl
xchg
lock
outsl
sbb
popa
test
sbb
sarb
mov
repnz
test
lcall
divl
xor
in
adc
rcl
test
xchg
ficoms
and
sbb
pop
dec
push
outsb
jno
scas
jge
clc
outsb
inc
push
sbb
push
lret
mov
push
les
jle,pn
inc
popa
shr
mov
fxch
mov
inc
cmpsl
data16
fs
pusha
mov
outsb
orl
addb
mov
out
and
mov
jae
dec
shrb
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
mov
ljmp
jle
jo
jmp
bound
xchg
mov
cmp
mov
loopne
jmp
rorb
pop
popf
icebp
cli
push
stc
and
sti
pop
mov
push
cmpsb
xchg
inc
cmp
fstl
cmp
xor
xchg
aam
add
mov
sub
repnz
cld
dec
into
inc
fildl
xor
in
add
or
scas
sub
gs
jno
repnz
data16
mov
push
pushf
test
lahf
frstor
xchg
icebp
or
sahf
sbb
or
push
pusha
push
push
push
xchg
sarb
or
nop
xlat
mov
iret
lods
sbb
dec
gs
sahf
sbb
test
ds
adc
fs
mov
inc
or
scas
mov
es
in
xor
fwait
stos
push
sub
adc
imul
ss
or
mov
adc
inc
dec
outsb
xchg
ss
add
stos
inc
out
int
mov
inc
push
imul
lds
mov
das
subl
jbe
data16
jle
addr16
test
xchg
rsm
mov
pop
mov
dec
mov
push
add
or
dec
fisubl
imul
dec
outsb
es
mov
or
jns
fidivrs
jae
cs
mov
stos
push
das
ss
scas
lret
push
inc
ds
aam
mul
mov
push
and
sbb
aad
pop
in
or
and
adc
push
test
mov
sbb
push
push
mov
es
ja
and
inc
mov
mov
mov
jge
cli
mov
call
in
jle
or
push
dec
sti
cltd
lret
push
sbb
lea
imul
adc
mov
fwait
pop
adc
mov
repz
mov
popf
sbb
mov
iret
roll
jecxz
cmp
mov
xchg
dec
aaa
test
daa
int3
pop
outsl
mov
ficompl
mov
mov
cmc
je
jge
xor
imul
jae
mov
mov
js
sbb
cmp
dec
aaa
sub
lods
aad
add
fwait
jl
or
cmc
je
lock
out
fcoms
cmp
push
in
mov
stc
push
mov
aaa
lea
add
and
popa
pop
jns
or
pop
push
mov
sub
test
out
inc
ds
filds
xchg
sub
jne
jbe
popf
or
loopne
adc
out
xor
cmc
daa
sbb
jecxz
mov
sti
mov
push
add
cmpsb
or
sahf
push
ss
lods
xchg
in
sbb
inc
jge
push
add
inc
mov
pop
stos
test
adcl
dec
or
cltd
jle
or
mov
cmp
push
shll
dec
sub
mov
divb
push
fldl
and
cmp
std
arpl
popf
or
insb
sbb
jnp
test
stos
xchg
adc
jp
in
add
dec
xchg
mov
push
xor
addr16
jp
cmp
dec
les
test
pop
pop
dec
lret
adc
inc
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
dec
cmp
jle
jno
jle
mov
daa
mov
iret
outsl
push
dec
mov
addr16
fs
bound
idivl
pop
jno
ja
fwait
and
mov
xchg
adc
lods
scas
loopne
daa
out
xor
fldcw
dec
add
aam
mov
add
add
fdivrs
xor
jle
push
in
push
inc
cld
inc
sahf
lret
jp
adc
push
push
pop
pop
ja
jp
pop
push
sbb
cmpsl
test
push
std
adc
clc
and
cmc
sub
shr
xchg
jg
xchg
aas
insb
jb
sbb
adc
lcall
adcl
push
icebp
push
out
mov
add
xor
into
mov
stos
ret
fstpt
test
mov
stos
pavgb
std
loop
pop
test
push
in
insb
push
je
cltd
fwait
jecxz
jns
arpl
fldl
and
ja
inc
push
ds
mov
add
fsts
sub
loop
mov
enter
repz
mov
ficoms
jnp
sub
cmp
das
push
loop
mov
jle
lcall
pop
popa
and
lret
push
cmp
jno
call
push
sub
sbb
and
dec
or
mov
push
xchg
cmpps
push
adc
ficompl
push
loop
or
in
fldenv
cmc
test
ds
imul
imul
pop
dec
and
mov
mov
mov
xchg
lds
popa
cmpsl
dec
xor
repnz
inc
js
js
or
mov
ljmp
imul
or
repz
push
sub
lds
aaa
pushf
lea
push
aad
hlt
lret
pop
mov
inc
jne
and
dec
shlb
sub
aas
cmp
imul
das
out
out
adc
jns
pop
dec
iret
sbb
cld
shr
pop
lcall
push
je
xor
movsl
dec
mov
adc
lods
jno
out
enter
jge
mov
cmp
mov
xchg
or
out
sti
sbb
add
push
jp
adc
fnstsw
pop
iret
out
lock
pop
xchg
mov
jecxz
mov
pop
xor
pop
jl
pop
lcall
mov
std
cld
cmpsl
popa
stc
int3
push
mov
out
nop
jne
repnz
mov
add
loope
pusha
sub
sti
jb
add
dec
mov
notl
jne
pop
lret
and
leave
mov
cwtl
mov
addb
pop
xchg
dec
shll
addl
fucomi
and
pop
bound
fimuls
mov
xchg
mov
fistpll
ret
sub
and
sahf
lea
cwtl
dec
mov
sub
pop
lods
jg
jecxz
mov
xorb
xor
imul
jns
aam
stos
loope
mov
cltd
lahf
fcmovnu
sbb
outsl
dec
imul
push
mov
jg
aas
out
imul
subb
inc
xchg
pop
mov
cmp
and
xlat
push
lock
pop
aas
adc
xchg
fs
and
hlt
out
push
imul
es
adc
mov
adc
add
sub
add
jmp
pop
nop
jl
jge
and
jns
test
jmp
xorb
out
shl
mov
lcall
mov
jge
cli
jg
outsb
pop
cs
xchg
sub
repnz
xor
mov
adc
lcall
pop
xchg
dec
sub
jg
je
shlb
mov
shlb
cmp
xchg
imul
add
idivb
and
rcrb
mull
psraw
sub
push
ja
and
dec
push
mov
ljmp
nop
jnp
cs
xor
add
sub
mov
jno
shlb
sub
fwait
mov
xor
outsl
adc
sbb
hlt
les
ret
es
inc
inc
and
and
or
pop
call
xor
out
cmp
shl
call
and
mov
sarb
popf
jno
mov
into
add
outsl
mov
aas
inc
pop
sub
mov
shrb
jns
xchg
xor
repz
jb
aaa
dec
xchg
add
popa
std
pop
jbe
popf
lods
in
and
and
or
push
cmp
clc
mov
mov
jbe
pop
out
fists
cmp
xor
jg
fists
lods
cltd
sbb
fucomi
fs
daa
xor
mov
mov
arpl
mov
mov
cmpsl
fs
fadd
cltd
adc
adc
jp
dec
imul
xor
imul
mov
push
jo
sub
incl
sub
test
dec
and
mov
sub
frstor
dec
mov
pop
dec
lods
pusha
jp
or
shrl
testb
in
jbe
and
addr16
aam
push
test
sub
mov
lahf
fstpt
ret
shl
dec
stos
fsubl
add
push
adc
dec
lock
je
sub
cmp
push
adc
pusha
pushaw
inc
mov
fwait
in
int
fcomi
pop
mov
ret
dec
loopne
movsb
xchg
out
push
cmpl
jg
shll
inc
lds
push
fsubrl
cmp
sbb
push
mov
or
into
hlt
test
push
roll
nop
push
mov
cmp
add
int3
jne
push
ss
outsl
mov
inc
aad
lahf
cli
daa
jo
add
xor
and
bound
dec
ljmp
sub
inc
sbb
jno
xor
jle
sub
js
jge
aad
adc
dec
mov
sub
dec
jg,pn
imul
dec
jns
cmp
insl
in
cmp
inc
mov
jp
dec
pop
inc
mov
loop
mov
out
iret
fisubs
fwait
jns
adc
xchg
jle
push
xor
daa
popf
rcrb
sahf
push
aaa
inc
or
dec
push
or
iret
fcmovb
cmp
lods
mov
cmp
add
out
rolb
inc
inc
jle
stos
fsts
lds
xchg
movb
cmp
sub
shrl
mull
sub
pop
je
bound
lret
int
adc
mov
xchg
inc
fiaddl
lret
sbb
sub
push
out
loope
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
cmp
xchg
int
xor
cltd
lods
cmc
popa
adc
inc
sbb
out
aam
push
xor
icebp
xor
xor
jg
jecxz
or
das
negb
mov
mov
cs
aas
fildll
orb
mov
cmp
mov
ret
mov
push
inc
out
jg
mov
mov
adc
xchg
rcr
inc
loopne,pt
popf
and
inc
and
shl
dec
inc
jns
lcall
dec
lret
cmp
sub
dec
sub
testb
push
arpl
mov
int3
fbstp
xlat
fcompl
ss
adc
and
push
push
inc
dec
or
insl
jae
sbb
pop
push
outsb
loopne
into
mov
mov
loope
add
es
jp
sub
mov
jnp
aam
and
inc
rcll
ljmp
insb
cmp
add
es
mov
mov
push
lcall
and
push
xor
jl
fucomi
or
push
jle
shrl
js
cltd
mov
bound
inc
or
adc
xchg
in
mov
clc
and
push
xor
or
jno
loop
adc
mov
stos
cltd
add
loope
xor
cmpb
fildl
mov
xchg
and
jns
mov
xlat
push
xor
es
js
lods
inc
fidivrs
and
jle
ss
test
add
dec
popa
in
cli
cmp
iret
xor
insl
cmp
jae
shr
xor
add
fldcw
cmpsl
inc
cmp
push
in
xor
insb
dec
ljmp
xchg
and
test
adc
in
mov
jle
cmp
mov
xor
dec
aaa
cmp
xchg
mov
ds
inc
out
dec
lret
fimuls
imul
popa
shr
ret
aad
push
sub
mov
pop
cli
and
pop
pop
sbb
shrl
lea
jge
lea
rcrb
ljmp
mov
adc
test
push
push
ja
popa
call
fists
mov
mov
lahf
push
test
mov
mov
data16
jl
xchg
ficoms
add
push
out
dec
cs
ficompl
loopne
pusha
push
push
pop
aam
in
mov
stos
sub
sti
stos
fcoms
cmp
int3
mov
push
in
ja
idiv
xor
leave
xor
xchg
fildll
and
pop
xchg
aad
cmpsl
aas
fisttps
adc
pop
je
cmp
imul
out
scas
imul
mov
sub
mov
or
out
mov
stos
add
jnp
ljmp
jg
inc
lret
cmp
adc
sub
mov
loopne
fwait
pop
inc
ret
and
test
pop
mov
mov
xchg
xor
out
push
invd
div
xor
or
fdivrs
popa
andl
cmp
jae
dec
test
repnz
test
or
scas
faddl
xchg
das
jno
sbb
pop
loope
clc
mov
out
inc
cmpsl
cltd
push
dec
dec
and
jmp
adc
pushf
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
test
jle
jno
jle
push
mov
adc
xchg
xor
mov
mov
cmp
movsb
ss
cmp
mov
jle
imulb
xchg
cld
xor
and
les
out
mov
sub
fs
stc
je
lret
lea
std
mov
in
sbb
mov
push
rorb
int
fimuls
adc
push
adc
push
and
loop
mov
lcall
push
mov
in
andb
push
adc
inc
pusha
mulb
mov
mov
jle
dec
fisubl
mov
icebp
pop
nop
cli
dec
mov
pop
dec
xor
int3
inc
std
popa
xchg
pop
popa
out
sbb
rcll
mov
mov
xor
rcrl
and
sub
sub
xchg
pop
inc
das
sbb
jl
outsl
xor
daa
and
mov
jbe
sbb
xchg
mov
lret
mov
adc
in
lods
inc
dec
sbbb
bound
pusha
sub
loop
sub
sub
cmp
cmp
cmp
cmp
or
test
fxch
or
xor
loope
rclb
sbb
pop
jp
jp
sbb
pop
xchg
dec
les
xchg
and
lret
in
pop
dec
cmpsl
push
add
call
lret
lods
stos
shrb
imul
pop
outsl
pop
cmp
fcompl
push
mov
xor
pop
cmovo
inc
jecxz
arpl
ja
arpl
test
stos
mov
into
lcall
loop
stos
inc
daa
mov
pop
jecxz
or
ds
sahf
pop
pusha
jo
or
insb
aam
lret
xchg
inc
cmpsb
iret
ror
add
xchg
sub
push
fdivrs
push
mov
test
cli
and
mov
xchg
and
xchg
or
ret
rolb
js
and
repz
mov
sarb
stos
stos
shrl
and
inc
cmp
jle
adc
xchg
in
std
loope
orb
xchg
fadds
push
shlb
inc
cltd
popf
mov
pop
sbb
sub
mov
inc
sbb
lcall
hlt
xor
pop
adc
mov
mov
out
cmp
cltd
push
add
sbbb
mov
leave
or
out
fsubrl
adc
jle
mov
mov
pop
add
xchg
pop
cmp
xchg
pushf
xor
loopne
or
test
cld
cmc
inc
aad
fildl
shlb
in
cltd
mov
arpl
test
add
out
jl
stc
ret
adc
in
jge
mov
and
xchg
cmp
or
je
mov
outsb
ret
pop
out
push
dec
xchg
in
push
inc
push
push
mov
pop
rcll
push
mov
enter
sub
jae
outsl
js
movsl
idivl
das
fwait
out
xchg
sbb
fistpll
xchg
test
shl
mov
add
cmp
and
cmp
stos
js
pop
sub
popa
add
dec
xchg
or
cs
lods
xchg
pusha
pop
sbb
popa
adc
in
inc
mov
lret
sahf
mov
test
fsubl
push
ret
inc
pop
jle
fnstcw
shl
popf
sub
mov
add
mov
test
inc
pop
sbb
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
dec
in
cmp
xorb
mov
jecxz
les
in
lahf
stos
inc
jmp
insb
push
cmp
fistps
xchg
inc
data16
enter
add
xor
stc
movsl
fistpll
rcrb
jbe
enter
adc
in
and
icebp
test
xchg
push
inc
mov
aaa
adc
push
nopl
inc
adc
pop
fsubrp
das
testb
mov
imul
repz
xlat
daa
mov
lods
xor
cltd
lcall
push
fwait
gs
pop
aaa
call
movsb
pop
sub
dec
or
xor
stos
imul
sbb
lcall
pop
pop
f2xm1
cmp
or
aad
dec
push
jmp
movsb
mov
shlb
cld
add
pop
lds
test
mov
inc
sbb
sbb
pop
test
add
adcb
or
cmp
iret
ret
mov
xchg
movsb
dec
and
addr16
dec
adc
pop
xor
repz
outsb
or
xor
mov
and
mov
test
jne
mov
mov
movsl
out
pusha
jne
jne
mov
xchg
pop
mov
add
dec
scas
test
dec
jno
or
jge
mov
push
shlb
xchg
mov
inc
inc
mov
addl
enter
stc
mov
sub
push
pop
dec
aad
in
mov
and
push
dec
stos
fnstcw
dec
es
fcoml
movsb
mov
stos
std
inc
cli
daa
shlb
fs
xlat
add
shll
xchg
xchg
mov
pop
adc
adc
push
push
popf
sub
mov
jae
repz
and
inc
or
fdiv
movsl
push
jg
popf
loop
and
pusha
pop
sbb
jp
mov
pop
cmpsl
xchg
dec
lahf
lods
les
shrl
enter
dec
hlt
cmpsb
adc
push
pop
mov
jp
add
in
hlt
or
push
aaa
add
pop
mov
movsb
adcb
pop
mov
jno
sub
xchg
or
jmp
hlt
mov
dec
jge
pop
iret
sub
pushf
cli
sub
arpl
daa
std
sub
inc
rcll
xchg
sub
mov
jae
xchg
mov
sbb
jg
jbe
jmp
adc
out
xor
popf
and
cli
mov
mov
test
insl
into
push
out
imul
ret
sub
or
xor
xchg
jg
and
jo
ds
or
adc
sbb
xchg
push
adc
or
adc
inc
insl
jge
jbe
jle
lods
mov
jo
call
out
insb
mov
cmp
and
and
push
mov
jp
mov
push
adc
nop
pop
xchg
mov
jge
inc
and
out
arpl
xor
push
test
xchg
pop
pop
push
mov
mov
inc
data16
lcall
mov
notb
cmp
arpl
imul
add
andb
inc
xor
jg
fisubl
popa
stos
mov
xor
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
dec
push
testl
xorb
fldt
ljmp
call
jge
pop
adc
xchg
stc
xchg
push
scas
sub
setg
in
xchg
xor
adc
fldt
jle
andb
mov
fstpt
sahf
push
mov
xor
inc
or
cltd
pop
pop
jns
mov
or
sub
dec
dec
adcl
call
aas
leave
sbb
adc
mov
mov
daa
pop
ficoms
push
or
inc
cmp
jp
pop
and
int
cmc
and
cmp
in
hlt
negl
jecxz
jmp
outsl
sub
lret
add
bound
pop
movl
incb
jne
pop
jge
dec
mov
ret
push
test
mov
jle
jns
adc
add
pop
iret
mov
dec
xchg
xchg
int3
and
arpl
sub
loope
cmpsl
ja
pop
shl
xor
pop
lret
pop
sub
mov
pop
ljmp
or
jbe
sbb
aad
jle
cli
pushf
les
and
mov
jmp
pop
dec
stos
loop
jno
mov
sbb
push
fcmovb
add
stos
hlt
pop
pushf
jmp
cmp
xchg
inc
ja
mov
xchg
cmp
xor
push
push
into
sbb
rcll
mov
mov
jmp
loop
shlb
cltd
test
xchg
mov
mov
sarb
dec
lahf
ss
repnz
aam
or
and
shrl
inc
pop
lret
sahf
mov
leave
mov
clc
sahf
xchg
push
or
xor
mov
aas
mov
sti
sbb
mov
mov
pushf
xor
lret
xchg
inc
out
mov
out
pusha
in
gs
popa
pop
xchg
inc
or
and
dec
jo
aad
sti
inc
insb
jno
ret
jbe
mov
mov
sbb
push
push
xchg
loop
sbbl
mov
push
sub
stos
sub
subl
sub
cwtl
stos
aaa
mov
inc
xor
mov
shlb
mov
stos
in
pop
lret
and
aam
inc
inc
xchg
sbb
jge
insb
shl
pop
aas
push
popf
and
cld
leave
adc
cs
loopne
xchg
insb
mov
dec
push
scas
adc
or
inc
fsubs
push
ss
jg
sub
cli
addr16
mov
push
inc
inc
cmc
ljmp
adc
rcr
jge
icebp
mov
mov
loope
cmp
dec
ljmp
iret
lcall
imul
cmp
or
dec
es
sbb
xchg
imul
mov
adc
mov
add
stc
sbb
adc
pop
dec
nop
and
xchg
add
mov
mov
cli
jl
aaa
pop
mov
repnz
push
mov
sub
push
ret
js
mov
cs
jnp
ljmp
add
pop
xchg
jns
gs
or
fcom
xor
lar
out
jl
inc
loop
lret
fwait
incl
stc
fdiv
xlat
pushf
sbb
clc
jno
cmpsl
jge
push
test
arpl
jg
mov
jmp
jl
sub
jge
jge
inc
sbb
sbb
xorb
sbb
std
fucomi
rcl
popf
sub
push
arpl
inc
in
fistps
dec
ret
add
js
clc
dec
push
shll
stos
xchg
mov
js
add
std
jno
sbb
and
xor
dec
cmp
mov
or
mov
ds
leave
push
push
cmp
repnz
mov
ja
mov
test
rcrl
xchg
stc
inc
scas
lds
pop
cli
ja
int
icebp
mov
xchg
mov
call
inc
and
lods
loopne
jg
cmp
movb
sti
sbb
test
repnz
daa
divb
ret
and
xchg
sti
add
fmulp
xbegin
and
ret
sarl
push
fs
and
push
dec
idivb
or
mov
push
ficoms
aam
cltd
add
clc
cmpsl
call
and
or
and
test
add
push
enter
jmp
ds
xor
outsl
aad
popa
sub
enter
adc
lea
mov
add
jg
fistpl
cld
cs
stc
rorb
xor
out
imul
lods
ljmp
sub
sbb
push
xchg
imul
roll
loopne
cmp
jns
rolb
push
pop
sbb
inc
je
and
imul
idivb
repz
mov
mov
fsubl
pop
insb
jb
or
in
stc
push
scas
std
push
ss
and
jne
addl
sbbl
sub
lcall
pop
das
sbb
xchg
aam
inc
add
mov
add
into
test
lock
pop
cmpsl
addl
daa
outsl
xchg
popa
lock
add
ljmp
lret
iret
sbbb
mov
std
in
daa
pusha
push
mov
push
imul
addl
ret
stos
shrb
ffree
les
or
lcall
sbb
lret
fiadds
dec
scas
ret
and
sbb
insl
movsl
sbb
push
scas
cli
hlt
inc
test
lds
inc
int
das
ret
inc
push
cmp
mov
add
sbb
mov
stos
jmp
ficoml
mov
fs
push
mov
mov
add
icebp
cmp
gs
and
xchg
adc
pusha
fcmove
lods
pushl
adc
fmulp
daa
inc
adc
pop
push
cs
xchg
decl
cmp
mov
adc
sbb
push
jge
push
push
or
sti
push
xchg
mov
imul
mov
mov
and
sti
hlt
out
out
testb
lahf
jge
loopne
cmpsl
mov
pushf
mov
cmp
push
mov
inc
cltd
sub
fisubrs
sti
aad
pop
xlat
jl
and
aaa
jb
jmp
mov
jge
stos
nop
sub
push
or
les
sti
push
sbb
adc
pop
or
int3
outsl
in
test
fidivs
dec
fistps
aad
sbb
xchg
xor
andl
popa
pop
inc
sbb
and
jp
and
repz
es
test
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
sarl
adc
jle
jno
jle
repnz
insl
orb
adc
ljmp
cmp
sbbb
lret
adc
in
insl
sub
lret
push
jmp
mov
stc
out
dec
lret
stos
fisubrl
jnp
cli
xchg
cltd
dec
or
pop
cld
jb
fimull
es
jge
pop
inc
dec
add
dec
popf
outsl
loop
test
aas
jmp
jae
mov
mov
clc
pop
fs
test
xlat
repz
adc
js
inc
sahf
push
or
jmp
arpl
inc
pop
fidivl
push
pop
mov
mov
loopne
cs
das
add
xor
cmp
xchg
mov
pop
je
stos
mov
jge
aas
dec
scas
arpl
inc
pop
cmp
push
stos
test
mov
lock
inc
mov
outsl
clc
or
scas
mov
insb
enter
sub
icebp
fcmovbe
cwtl
inc
lock
insb
or
jno
xor
stos
xchg
sbb
or
xor
adc
cli
fmull
and
lahf
add
sbb
xorb
ds
and
adc
xchg
mov
add
into
subb
pop
lock
aaa
lea
push
pop
and
int3
das
stc
fsubs
or
mov
cmp
inc
jecxz
adc
out
stos
enter
mov
xchg
cmpsb
ret
inc
mov
jge
test
jnp
and
adc
insl
sbb
insb
movl
out
gs
cmp
clc
loopne
cli
out
mov
pop
gs
ret
test
xor
mov
jmp
ja
enter
jns
movsl
test
aad
xchg
lcall
fcoms
call
scas
sbb
scas
ljmp
mov
xor
gs
ss
sub
das
stc
lret
mov
pop
push
nop
scas
inc
xchg
idiv
push
clc
lret
std
in
mov
lcall
stos
and
enter
xor
xor
mov
decb
jmp
xchg
mov
cmpsb
insl
push
add
pmulhuw
push
mov
loop
pop
xor
outsb
popf
in
orb
pop
push
imul
inc
mov
lods
or
mov
sbb
push
in
add
popf
or
push
adc
ss
sbb
stc
pop
rorb
adc
mov
fdivr
sub
mov
dec
or
aas
inc
xor
sahf
add
xchg
jmp
cmp
add
dec
pop
add
je
out
push
mov
insl
mov
cmp
add
mov
in
cwtl
jne
adc
xor
dec
fisttpll
out
sub
push
add
xchg
pop
mov
repnz
xchg
xor
ljmp
daa
jno
pop
shlb
or
adc
cmc
add
loope
or
add
add
inc
ret
pop
int3
in
push
add
mov
sarl
addr16
movsl
outsl
fdivrl
mov
enter
mov
pop
in
mov
loope
aad
sub
in
dec
shll
loope
mov
ret
daa
sbb
mov
jecxz
jnp
add
xchg
aaa
dec
xchg
dec
cmc
xchg
enter
add
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
ja
adc
mov
jle
sbb
adc
mov
dec
aaa
jl
loop
sbb
add
popa
mov
sub
nop
push
pop
lds
int
and
or
in
sbb
fidivs
cltd
mov
sbb
imul
test
bound
fidivrl
push
sbb
pop
sar
mov
aaa
jge
mov
jle
jg
xchg
ljmp
and
cmc
push
jno
cmc
jmp
jb
push
pop
loop
repnz
adc
sbb
int
lret
in
mov
xor
mov
lcall
jge
test
in
cmp
or
xorb
mov
pop
repnz
je
push
es
sbb
xchg
int
and
mov
in
xlat
push
lods
sbb
pop
mov
mov
push
dec
or
cld
movlps
shrb
pop
pop
in
and
inc
gs
jno
xor
dec
sbb
sbb
call
hlt
fcmovnbe
aam
mov
in
sub
aaa
test
mov
push
jge
jno
cmpsb
adc
int
inc
aas
push
pop
xor
or
bound
dec
mov
clc
and
jp
repz
outsl
testl
pushf
pushf
loop
xor
xor
xor
cmpsb
addr16
xlat
mov
out
movsb
vpbroadcastw
repnz
jns
sub
lds
sub
hlt
call
fsubr
dec
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
mov
jle
mov
jle
daa
es
and
insb
bound
cmp
shlb
sub
movsb
in
popf
jecxz
cmp
cmp
push
mov
scas
jmp
test
mov
ret
loope
fidivs
jae
inc
add
mov
jo
imul
add
test
and
and
insb
in
pop
clc
lcall
jg
outsb
into
xchg
rcrb
cmp
sub
pop
and
xchg
mov
lret
push
inc
xchg
xchg
xchg
adc
daa
stos
call
dec
in
scas
adc
xchg
or
mov
sub
retw
sbb
enter
test
fistps
xchg
jne
cwtl
push
or
push
xor
popf
imul
jl
jb
xor
pop
in
push
aas
dec
inc
sbb
sbb
movsl
jno
push
xchg
popf
movsb
popf
or
and
and
clc
in
and
jae,pn
dec
adc
mov
lahf
stos
push
push
je
arpl
dec
dec
out
xor
ljmp
rol
dec
fbstp
dec
fisttps
dec
lcall
inc
cmp
ffree
stos
or
lea
mov
pop
adc
mov
jmp
pusha
sbb
sbb
adc
cltd
lods
ja
mov
jmp
cmp
mov
push
iret
pushf
in
mov
push
aam
ja
add
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
add
stc
es
jg
icebp
fistps
addr16
inc
inc
cmp
fwait
mov
test
push
dec
and
inc
sub
inc
inc
xchg
and
call
dec
adc
mov
pop
outsl
mov
loop
mov
pop
sub
jecxz
jno
adc
ret
pop
inc
repnz
pop
lahf
ret
mov
or
orb
movsb
and
jne
add
sbb
jbe
jae
jge
les
add
cmp
iret
sbb
jne
adc
mull
std
movsb
xchg
ja
orb
push
test
aaa
setns
out
lahf
jb
mov
or
aad
or
test
or
test
adc
inc
mov
and
sub
xchg
xchg
mov
cmp
call
int3
cltd
icebp
testl
mov
mov
ss
mov
cmp
aaa
ret
fldt
imulb
out
and
inc
jno
es
aas
std
cltd
sbb
call
int
push
add
xchg
fwait
pop
mov
int
icebp
inc
cmp
jg
dec
mov
jb
mov
add
or
xor
jge
and
jmp
add
sarb
lea
shll
push
cwtl
xlat
test
push
je
sub
insl
lock
sbb
and
fs
cmp
adc
add
jno
or
xor
xor
jmp
xchg
push
int3
jns
imul
sub
sahf
in
push
jle
mov
jle
shlb
jb
cmc
iret
idivl
cmpsl
mov
es
adc
push
adc
push
mov
cmp
mov
movsb
and
push
fildl
clc
adc
shl
scas
xchg
mov
jg
inc
xchg
loopne
addb
es
ja
movsl
cmp
pop
stos
mov
inc
testb
mov
add
sub
int3
sub
loopne
or
stc
pop
cltd
loope
cltd
inc
mov
out
outsb
pop
cmpb
int
bound
jb
bound
mov
fldcw
imul
mov
ret
push
lahf
icebp
aad
cmp
xchg
xchg
test
pop
xchg
imul
orb
fistl
jae
sub
pop
imul
popf
das
sahf
inc
cltd
into
insl
test
cmc
test
and
test
sarb
lret
pop
jg
jns
mov
pop
pop
mov
sahf
pop
push
mov
adc
clc
add
fldenv
js
aad
pop
push
dec
xor
sub
cs
dec
pushf
jp
jae
sbb
out
dec
xchg
pushf
push
fnsave
adc
push
push
data16
movsb
jg
movsl
xlat
sbb
cli
lret
lds
mov
pusha
xor
adc
adc
insl
mov
and
mov
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
lods
jp
jle
mov
jle
mov
mov
aam
push
jbe
mov
jl
jmp
mov
int3
sbb
mov
sbb
mov
mov
pop
xor
leave
dec
stc
mov
push
cmp
mov
mov
enter
pop
xor
movl
adc
jge
into
mov
nop
lret
addl
jno
jb
sbbl
inc
push
pop
and
stos
adc
jecxz
sar
inc
repz
mov
pop
inc
aas
sub
inc
int
cmpsl
mov
fisubl
out
lret
movsb
std
sbb
cmp
sbb
sub
fcomps
pushf
nop
jno
adc
jmp
xor
dec
js
out
push
jge
inc
add
iret
jno
stos
divl
mov
ds
insl
mov
movsl
mov
mov
mov
fwait
aas
mov
in
mov
cmpsb
addr16
dec
sub
imul
fidivrl
mov
mov
mov
dec
test
leave
rcll
inc
bound
sub
je
dec
fisttpl
mov
push
pusha
cmp
push
std
inc
cmp
enter
call
subb
sbbb
xchg
lds
ljmp
push
xchg
pushf
in
in
mov
sub
mov
lcall
mov
daa
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
xchg
pop
imull
jle
mov
jle
fstpt
dec
push
push
mov
or
inc
xlat
and
movsl
xchg
imul
pop
jnp
dec
mov
in
cmc
jg
push
in
mov
or
ds
jecxz
cwtl
push
mov
or
cmp
es
aam
leave
jecxz
mov
jo
mov
repz
pushf
mov
outsl
push
cmpsb
xor
add
rcr
jl
xchg
push
push
jle
pop
adc
mov
mov
loope
daa
stos
cmp
pop
adc
xchg
insb
pop
push
xchg
add
scas
call
fsubp
cmp
adcb
cmp
xchg
xor
mov
leave
cmp
or
xorl
scas
jge
int3
xor
not
cmpsb
sub
arpl
and
or
dec
fst
leave
cmp
jmp
or
ljmp
in
test
insb
push
xlat
insb
sub
in
js
and
jl
or
add
mov
inc
mov
cmp
jo
shl
mov
add
pop
mov
mov
jbe
mov
rcrb
in
out
enter
clc
pop
out
add
cmpsl
aas
in
loope
rclb
sahf
outsb
and
jmp
push
in
rcrl
xor
pop
jns
adc
push
into
pop
les
int3
cwtl
jo
xchg
pop
sbb
sub
push
cmpb
test
mov
pusha
shrl
xor
add
mov
mov
mov
mov
jmp
andb
addw
int
sub
mov
jle
decl
dec
mov
push
bound
cltd
jne
sub
subl
aad
mov
pop
orl
jge
mov
adc
cwtl
mov
cmp
sbbb
mov
cmp
jns
ret
es
daa
cmp
xor
ss
or
mov
cmpsb
mov
xchg
gs
rcl
andl
popa
fnstenv
shll
adc
mov
mov
jle
bound
or
cmc
test
xor
cmp
repz
pop
mov
fcmovnbe
xchg
test
scas
mov
leave
iret
fwait
and
fildll
mov
mov
outsl
dec
mov
xchg
xlat
xchg
popa
gs
les
test
jo
in
cmpsb
mov
or
bound
pop
insl
js
mov
sahf
inc
sub
lea
inc
or
movsl
jg
mov
ret
pop
jae
ficompl
aaa
sub
js
pop
dec
popa
fistpl
push
mov
lret
sti
sub
call
in
push
mov
mov
jecxz
xor
aam
sub
frstor
adc
push
mov
add
movsl
add
sbb
mov
sti
les
ss
popa
in
sarb
test
pushf
lods
adc
jb
sub
scas
xchg
xor
add
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
add
dec
xchg
or
pop
movsb
add
and
cmpsl
pop
iret
fdivs
outsb
out
dec
ss
pop
loop
scas
adc
xor
mov
dec
fmull
jbe
fdivrp
inc
es
jae
lods
inc
leave
int3
stos
and
push
sbb
loope
jg
enter
out
mov
aas
jecxz
pop
jns
rorb
mov
daa
fisubrl
ret
pushf
mov
cmpsl
ficomps
jnp
dec
inc
mov
into
and
in
adc
out
mov
test
mov
mov
sbb
or
push
movsl
sti
mov
and
dec
jge
shll
sbb
mov
xchg
xchg
mov
jl
jne
and
inc
jge
xor
inc
sbb
sarb
adc
insb
ljmp
mov
push
mov
fsts
dec
sub
xchg
fistps
out
sub
cmp
test
into
push
mov
pop
inc
scas
and
rorb
mov
cmpsl
pop
push
scas
test
jbe
xor
add
or
cmp
jmp
mov
xor
cmp
lret
inc
fildl
sbb
mov
push
mov
dec
jge
in
popa
gs
test
xchg
shrb
subb
mov
les
jp
and
sti
xor
inc
leave
dec
out
loop
stos
push
mov
cmp
pop
pop
add
in
je
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
stos
dec
jle
cs
mov
jle
mov
testl
jle
arpl
clc
mov
in
out
pop
sub
loop
pushf
add
ret
sti
cltd
test
stc
jne
jo
mov
nop
test
pop
xor
add
pushf
jne
cmp
mov
ds
fildl
inc
pop
inc
push
cmpsb
dec
inc
dec
inc
push
lds
cmc
cmp
in
cld
push
dec
int
dec
xor
and
mov
sub
push
lock
int
push
and
and
ror
test
cwtl
fcompl
and
in
pop
ds
pop
adc
std
shlb
ror
push
and
test
add
cmpsb
inc
cmp
fxrstor
clc
rcrl
movsb
cmp
repz
xchg
sub
cmp
jnp
orl
xlat
aam
in
xlat
and
cmc
arpl
stc
imul
mov
sbb
into
xchg
sbb
inc
loope
adc
push
es
repz
pop
dec
fwait
sti
inc
xlat
aad
add
rolb
mov
outsb
ret
pushf
jecxz
mov
das
sub
xchg
sbb
jno
jg
test
nop
in
pop
or
xchg
sub
inc
pmullw
add
pushf
cmpb
push
jp
jns
and
mov
shll
jo
ss
cwtl
loopne
and
stc
sub
jle
pop
lahf
out
or
dec
push
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
js
mov
jg
jle
jecxz
sub
dec
enter
rorl
movsb
arpl
sarl
mov
mov
repnz
ja
cmp
inc
adc
sti
pop
pop
dec
jge
addl
gs
out
or
aaa
xchg
mov
adc
lods
roll
mov
inc
dec
stc
scas
dec
test
test
andb
or
out
xchg
sub
imul
adc
adc
xor
enter
push
lahf
and
jge
mov
cmp
or
mov
ret
xchg
movsb
or
and
into
xchg
mov
jae
cmp
push
sti
notl
pop
mov
ror
arpl
mov
pop
inc
shl
data16
mov
js
jmp
loope
leave
sbb
andl
jmp
lods
and
insb
sbb
cmp
adc
leave
lret
repz
pop
mov
test
jbe
jmp
xor
jecxz
jl
pop
fcoms
test
or
sbb
lahf
inc
adc
inc
inc
add
inc
rclb
xor
add
mov
mov
jmp
mov
aam
sbb
jae
je
or
mov
clc
subl
pop
xchg
int
decl
dec
pop
sbbb
ja
inc
sahf
rcl
push
push
mov
test
jnp
ljmp
sti
jmp
mov
jns
dec
mov
xlat
popf
xlat
enter
mov
jle
cli
clc
ds
cltd
fsubrp
adc
loope
lret
int
sbb
or
aad
int
sbb
shlb
in
nop
jl
mov
jbe
jbe
mov
cmp
sub
lods
xchg
outsb
mov
iret
arpl
sbb
hlt
insb
or
inc
pop
aas
mov
call
sbb
xchg
inc
mov
dec
pop
into
or
sbb
into
xchg
add
mov
fsubrs
lcall
sub
xchg
pop
mov
xor
out
aad
lea
cmp
dec
inc
fisubrl
jne
adc
push
std
add
repnz
subw
mov
cwtl
cmpsb
jns
and
cwtd
push
in
jmp
test
lds
fndisi(8087
testl
fnsave
xor
iret
loope
dec
sub
shl
and
rcl
or
pop
movsl
test
or
in
lea
dec
test
sti
orb
jge
adc
jne
mov
scas
lret
adc
push
leave
xor
pusha
adc
rcr
dec
fidivl
dec
push
fsubr
add
mov
ud1
sub
sahf
enter
mov
inc
repnz
imul
pop
pop
loope
push
iret
scas
stc
cli
dec
fisubrs
js
jle
and
jae
mov
jle
jae
jne
test
clc
inc
xorb
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
movsb
in
movb
jle
jg
jle
cmp
adc
jecxz
and
push
pop
je
sbbb
xorb
jb
cli
mov
xacquire
jecxz
mov
mov
imul
inc
pusha
mov
pop
inc
in
dec
add
and
sarb
cmp
call
inc
rorl
push
jl
shll
leave
inc
stc
jo
push
mov
mov
mov
insl
popf
xchg
cmp
mov
push
aam
lods
leave
nop
sub
movsl
pop
jb
xchg
xchg
add
mull
push
test
cld
stos
cmp
xorb
fs
push
or
xchg
mov
daa
jecxz
lock
cmp
mov
test
in
xchg
dec
fbstp
add
sti
or
inc
cld
rorl
inc
jp
addb
xchg
inc
push
ret
dec
add
jno
cmpsl
mov
leave
pop
push
xchg
lea
mov
xchg
xor
jg
les
sub
push
pusha
mov
fcoml
and
stos
mov
adc
loope
pop
adc
xorb
cmpsb
shl
repz
jnp
adc
les
mov
mov
xchg
inc
test
idivl
sbb
add
mov
jle
int
mov
sub
jo
sbb
hlt
pop
mov
pop
cltd
es
mov
subl
mov
push
cltd
jle
jns
mov
lods
sahf
sbb
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
fcmovbe
and
jle
jno
jle
movsb
push
push
test
sub
inc
leave
push
xor
push
fstp
mov
or
mov
pop
data16
and
and
mov
inc
or
mov
aad
imul
test
or
xchg
stos
in
lods
in
lock
jne
mov
loopne
lret
push
movsb
push
test
xchg
fwait
xor
fbstp
movsb
push
cmp
das
xchg
or
mov
xor
insb
call
jb
mov
mov
sbb
mov
paddusb
shr
repz
xchg
and
cmp
jmp
rcl
jae
mov
mov
ds
jbe
ljmp
adc
ret
jecxz
into
mov
fs
add
sub
out
iret
cmp
out
or
into
loope
les
or
inc
mov
sarb
push
fcomi
jge
cmp
cltd
aad
cld
cmp
jge
out
fisttps
fistps
adc
dec
shl
outsl
insb
mov
insl
xchg
ljmp
in
fmuls
mov
xor
test
outsl
xor
lcall
mov
lcall
dec
in
cltd
mov
les
mov
adc
jb
and
aad
loop
cmp
imul
cs
push
popl
out
adc
pop
mov
mov
jl
lods
or
dec
fmul
add
scas
cli
lret
jo
pop
mov
xchg
jns
stc
and
imul
pop
sbb
add
pop
lods
outsl
lret
sub
das
cwtl
dec
imul
pop
jnp
mov
jbe
hlt
movb
ja
scas
or
out
jns
and
hlt
pushf
scas
fcmovne
out
testl
adc
cmp
dec
jne
cmpsb
ja
les
push
pop
cmp
aaa
shll
cmp
inc
mov
cltd
jbe
out
movsl
mov
sub
push
test
cmp
or
push
ret
fdiv
sub
ret
popa
xor
inc
inc
jecxz
sub
push
sub
ret
out
stos
mov
cmpsb
dec
mov
aaa
leave
testb
nop
imul
mov
mov
clc
push
xchg
les
ja
mov
lods
xchg
mov
sbb
mov
cmp
mov
lds
push
repz
into
mov
add
xor
test
cs
adc
fsubl
mov
cli
dec
pop
dec
add
out
test
xor
mov
inc
mov
or
int
pop
and
pop
shll
repz
sub
fnstsw
mov
aad
push
mov
movsb
sub
push
xor
xchg
inc
and
loop
mov
rcrl
insl
mov
mov
imul
outsb
jg
cmpsb
adc
jmp
fwait
and
or
and
mov
mov
add
dec
push
xor
inc
outsl
dec
pop
mov
lret
and
push
xchg
push
mov
xor
out
pop
inc
mov
xor
xor
mov
sahf
rclb
push
ljmp
loop
std
popf
jmp
hlt
inc
sahf
push
pop
pushf
imul
int
inc
aad
into
bound
adc
pop
mov
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
rclb
cmp
mov
sub
add
sub
loop
shrb
add
or
pop
push
mov
fisubs
loopne
push
sahf
jl
into
pop
add
and
cmp
cmp
jg
or
repnz
lea
shll
or
jne
icebp
xor
jge
inc
or
xor
push
rcl
adc
cwtl
sbb
daa
add
imul
inc
push
jno
jmp
jg
xchg
adc
push
clc
cmp
push
rcrl
inc
das
cwtl
js
or
rcl
and
fdivr
int
lcall
movsl
sbb
mov
inc
repnz
mov
inc
mov
adc
jg
hlt
mov
nop
lea
mov
jb
stos
imull
shlb
add
insb
cli
add
mov
add
mov
insl
push
cmpb
rorl
pop
push
inc
int3
leave
std
dec
dec
dec
notb
lds
pushf
mov
cltd
pop
add
xchg
push
xorb
ss
loop
sbb
xchg
imul
mov
cld
repnz
xor
dec
fsubl
iret
jge
add
std
inc
into
and
mov
or
xchg
fwait
sbb
lea
les
shrb
das
dec
jns
mov
sbb
fxch
les
jns
cmp
adc
andl
xlat
xor
dec
add
into
mov
hlt
ret
jecxz
or
pop
out
dec
jmp
inc
sub
aaa
test
jo
sub
inc
sbb
xchg
popf
loop
scas
int3
test
hlt
dec
cmp
faddl
ficoml
xorl
cmc
stc
adc
inc
cmp
xchg
out
cmpsl
pop
jg
test
loop
sub
arpl
out
and
mov
pop
ss
outsl
mov
pop
xchg
ret
stos
ret
inc
icebp
je
shl
cmpsb
ret
inc
push
dec
shlb
int3
xor
pop
pushw
out
cmp
adc
shl
cmp
test
enter
and
cmp
je
or
push
pop
push
in
in
mov
sbb
xchg
xchg
pop
add
inc
aam
cmc
sub
aaa
std
es
int
mov
rorl
mov
setae
or
shl
jge
jl
mov
repnz
jge
pop
pop
push
jle,pt
xor
push
stos
je
xchg
fsubs
dec
jmp
sub
sbb
sbb
push
shr
addr16
incl
aad
xor
or
push
cld
loop
inc
loopne
lret
ljmp
xchg
data16
inc
push
pop
and
xchg
in
push
jl
sbb
aam
out
scas
stos
xchg
shrl
jp
jnp
int
jle
enter
loopne
sub
pop
inc
mov
es
or
das
popa
test
fwait
push
jns
es
subl
mov
mov
jmp
test
mov
les
dec
adc
and
cwtl
int3
aas
and
mov
mov
out
jo
aam
mov
int
and
daa
and
out
sub
imul
lds
pop
incl
in
or
mov
or
inc
pop
pop
pushf
std
or
loope
sub
sahf
movsb
mov
xchg
pop
or
xchg
mov
lods
and
sub
mov
adcl
and
insb
xor
ja
push
mov
push
xor
data16
clc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
push
jle
mov
aas
mov
pop
sbb
xchg
sbb
add
xchg
sbb
js
imul
jge
push
js
pop
aaa
add
enter
cmp
sub
xchg
test
mov
out
addb
ljmp
fcmove
pop
das
aaa
xchg
mov
ss
nop
out
insb
dec
int
test
ja
push
push
aas
es
je
jno
inc
sbb
sub
divl
and
cmp
jae
imul
mov
jb
sub
add
jbe
adc
inc
fdiv
loopne
push
test
dec
mov
lods
jg
mov
popa
dec
popl
mov
cmp
fnstsw
mov
adc
cmp
daa
addr16
sub
mov
dec
cld
push
and
jno
mov
js
test
pop
ja
outsb
mov
pop
add
out
das
push
mov
push
mov
xor
dec
fistpl
idiv
sub
fdivs
inc
repnz
out
mov
sbb
mov
pop
or
cltd
stc
xchg
xchg
xchg
push
inc
xchg
cltd
adc
dec
inc
ja
mov
mov
pop
xchg
ret
mov
inc
mov
mov
jp
pusha
and
push
xchg
dec
repz
sbb
mov
int3
push
xchg
adc
outsl
test
pop
lds
adc
nop
mov
sbb
sti
pusha
stc
jle
add
sbb
inc
cmp
mov
mov
or
or
sbbl
xor
jmp
and
sbb
into
into
xchg
cmpsb
mov
pop
aad
jno
testb
cmp
and
fistpll
push
xchg
or
out
dec
cld
jnp
cmp
cmp
stos
or
insb
bound
sti
lahf
rcrb
lret
mov
mov
call
mov
jbe
js
push
mov
pop
pushf
sahf
jp
daa
out
stos
xchg
and
mov
cmpsl
gs
stos
mov
in
cwtl
cmp
xchg
adc
add
or
push
jecxz
jo
paddsw
xchg
movsl
repz
cs
mov
cmp
push
jl
jle
mov
sub
cmc
sbb
mov
imul
jnp
mov
xor
lcall
scas
cmp
out
xchg
test
clc
dec
lods
add
push
cmp
inc
mov
adc
dec
out
inc
pop
push
cwtl
and
mov
leave
and
sbb
lret
cmp
adc
adc
add
ret
jmp
out
cli
adc
dec
lds
mov
rcrb
outsl
cld
out
and
lret
jo
adcl
inc
mov
aam
mov
lods
jo
and
imul
lock
ds
cwtl
and
xorl
inc
repz
xor
idivl
adc
push
jl
mov
push
inc
movsb
inc
data16
out
jbe
es
loop
mov
pushf
mull
cmp
jp
and
dec
or
imul
cmp
inc
or
std
sub
inc
xchg
insl
mov
int
dec
sbb
jne
mov
sbb
and
inc
mov
sarl
scas
jp
xor
adc
lret
in
push
xchg
xchg
mov
inc
pushf
cwtl
inc
cmc
lahf
aaa
add
imull
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
dec
push
addr16
mov
xchg
cmpsb
mov
cmp
xor
sub
pop
in
addr16
pusha
mov
push
sarl
mov
push
leave
movsb
push
in
hlt
push
add
pop
push
jb
and
push
ja
into
add
iret
push
pop
faddl
jo
mov
shll
out
gs
aas
push
stc
imul
xchg
mov
in
fistpll
xor
hlt
pop
and
testl
xor
sti
aaa
lcall
ja
xor
inc
imul
cmpsl
add
ds
inc
aas
sbb
outsb
lds
adc
xor
dec
ss
mov
fisttpl
jle
pop
int3
aad
ja
pushf
into
xlat
in
inc
hlt
mov
popf
pop
sbb
sub
in
push
inc
leave
sub
cli
push
lods
pushf
and
xchg
popf
pop
out
xor
rolb
jmp
jl
xor
stos
imul
movsb
clc
call
jl
pop
rcrl
outsb
xchg
xor
inc
inc
fwait
push
or
or
std
add
outsb
insl
lds
sbb
fstpl
mov
add
daa
addr16
and
sub
lock
or
aaa
leave
mov
mov
push
aaa
inc
test
iret
es
ret
insl
lahf
iret
mov
add
call
mov
pushf
into
or
pop
xor
outsb
push
fcmovb
mov
jo
jge
sbb
cmc
sbb
push
repnz
jl
jmp
sbb
sar
dec
or
test
push
iret
jmp
add
addr16
pop
arpl
ss
ret
ror
xchg
xchg
shll
mov
cmp
fstpl
mov
mov
adc
aam
jl
xlat
mov
dec
mov
test
mov
roll
scas
mov
xor
shlb
pop
popf
les
nop
pop
mov
imul
jns
pop
sahf
and
mov
dec
ror
add
sub
fisubl
push
fisubrl
dec
pop
pop
sbb
xor
mov
lods
mov
lods
xchg
jecxz
pop
mov
xchg
insb
sbb
add
lods
jg
loop
push
out
jbe
pop
or
arpl
pop
or
clc
pushf
test
out
lock
push
mov
lcall
divb
mov
repnz
sbb
pop
pop
fbld
dec
mov
cwtl
fst
movsb
pushf
popf
mov
pushf
adc
push
add
icebp
test
dec
pusha
push
repnz
add
out
es
adc
pop
xor
xchg
xchg
sub
mov
adc
xchg
pop
out
add
mov
lcall
loope
das
lahf
pop
lahf
xor
ffree
arpl
lock
mov
xchg
shl
jmp
and
test
push
out
add
int3
icebp
ljmp
pop
repz
and
popf
sub
xor
je
and
sahf
inc
xor
lret
in
sbb
mov
lock
lret
out
pop
das
push
adc
outsb
mov
jae
sub
out
xchg
mov
push
jecxz
es
or
xor
test
bound
aaa
pop
stos
sbb
mov
pop
inc
add
jp
pop
adc
test
jb
les
mov
flds
push
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
and
je
iret
mov
pop
mov
sub
mov
das
cli
sbb
sbb
adc
dec
int
loopne
cltd
imul
nop
lahf
bound
cld
cmc
jo
lahf
mov
test
mov
orl
inc
arpl
pop
jne
mov
fs
jg
add
xchg
pop
jns
shl
lods
push
test
mov
lock
int3
or
mov
cwtl
jae
jg
mov
imul
hlt
xor
cs
lcall
pusha
loop
add
iret
sub
pusha
add
scas
inc
push
mov
dec
in
jp
mov
loope
jl
movsl
cltd
adc
repnz
testl
pop
lock
cwtl
test
xchg
clc
add
imul
sahf
mov
sti
test
add
lods
scas
push
in
adc
cs
inc
sub
mov
loope
mov
fadd
enter
mov
test
ficomps
cltd
es
jl
xchg
sbb
insb
cmp
daa
jle
push
lods
adc
fdivr
sub
in
inc
ror
cmpsl
mov
xchg
addb
in
test
js
rclb
insb
sub
sahf
add
lret
push
push
inc
push
aam
int
mov
and
mov
das
nop
movsb
cmp
sbb
ljmp
adc
jb
popf
icebp
sbb
push
pop
sub
mov
pop
inc
imul
mov
mov
push
sub
mov
xchg
shll
xchg
ss
lea
das
ljmp
repz
out
xchg
ret
xchg
xchg
jge
ss
outsl
xchg
mov
cmp
push
ss
hlt
aaa
fwait
jle
xlat
stos
repz
add
xchg
pusha
sbb
adc
fs
loop
sub
mov
mov
cmpb
fdivrl
leave
loopne
out
xchg
inc
add
push
inc
and
or
test
sub
push
adc
cs
xor
fwait
adc
jo
jne
mov
mov
mov
sub
fistpll
test
xor
add
push
loope
sub
xor
push
fwait
sbb
mov
xor
jecxz
mov
sub
fs
mov
in
lret
xchg
xor
lds
adc
jbe
scas
in
pop
push
or
call
mov
repz
es
das
lahf
or
mov
mov
adc
cwtl
filds
popf
adc
xor
ja
lret
and
cmpsb
leave
arpl
mov
jge
lret
popa
pop
xor
cmp
int3
lods
stos
aaa
pusha
jge
cwtl
mov
sbb
dec
stos
sub
shrl
push
dec
sbb
inc
fdivrs
mov
js
fisubrl
loopne
jle
mov
inc
clc
sbb
mov
lret
test
mov
jl
push
loope
xor
ljmp
loope
dec
sub
push
and
pop
cmp
xchg
rorl
cmp
sbb
stos
add
add
ret
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
pop
aaa
sub
dec
ss
jmp
jle
je
stc
dec
mov
push
iret
out
pop
add
jmp
fnstcw
aad
cwtl
sub
or
leave
mov
push
sbb
call
daa
jg
adc
int
pop
insb
mov
les
mov
std
xchg
cmp
insb
mov
or
movsl
loopne
scas
or
pop
cli
jne
in
push
loope
cmp
xchg
dec
pop
sti
cmp
lds
cld
std
test
fidivs
gs
xor
ss
fwait
and
pop
cmpsl
pop
fdivs
mov
iret
and
dec
stos
into
int
rcrb
ds
out
inc
or
jmp
cmp
xchg
int
pushf
pop
lods
mov
dec
fidivrl
lods
sti
mov
mov
push
scas
mov
push
cmp
xor
in
pushf
in
lods
sbb
das
insl
sbb
jno
push
dec
cmpsb
lcall
outsb
jecxz
aad
ss
push
jb
push
clc
xchg
jo
or
push
xor
xchg
sub
cmc
fcmovnbe
and
dec
es
cmp
mov
or
test
dec
lahf
pop
fbstp
sbb
fwait
aaa
popf
sbb
stos
mov
out
aad
lahf
mov
stos
or
xor
test
mov
mov
js
loopne,pt
and
ja
push
jae
dec
out
pop
jmp
cmp
mov
mov
or
or
out
pop
add
cmp
cmp
mov
adc
into
inc
in
sbb
mov
xor
in
sarl
push
push
push
push
jecxz
imul
inc
fstp
adc
xor
stc
jb
das
push
lock
adc
xchg
xchg
or
scas
inc
jae
sahf
mov
add
lea
and
xchg
stos
repz
sub
lahf
les
xlat
jecxz
xorl
jp
adc
aas
pop
cli
leave
xchg
sbb
add
ret
pusha
sbbb
push
mov
ja
mov
sbb
lods
in
mov
pop
imul
cmp
cmpsl
mov
push
test
cmp
push
jl
mov
dec
pop
paddsb
stc
adc
lds
mov
pop
jmp
rep
enter
fisubl
ds
repnz
jb
cli
icebp
and
fs
lock
push
cs
jno
pop
mov
sub
int3
xchg
pop
pop
fldl2t
popa
add
push
xchg
ret
cmpsb
es
inc
hlt
ds
mov
xor
sbb
mov
mov
out
xor
jno
dec
ret
inc
mov
fwait
in
sbb
xchg
push
push
je
sub
in
les
test
and
xchg
cld
sti
mov
xchg
ja
das
aad
xor
dec
je
lret
fucomip
aas
test
add
icebp
cltd
sub
outsl
mov
les
pminsw
es
pop
and
iret
inc
addr16
mov
shlb
pop
fstl
roll
ret
icebp
jns
mov
loope
je
mov
push
cmp
push
rcr
in
mov
push
gs
pop
or
lcall
and
inc
add
jmp
repz
inc
or
pop
inc
and
sub
sbb
jle
jmp
jle
cmc
popf
arpl
out
add
pop
icebp
test
mov
enter
and
andl
jbe
mov
lret
mov
test
jge
jg
ljmp
je
insl
mov
mov
mov
aaa
mov
push
add
push
pop
push
adc
sub
cld
ret
add
es
shll
nop
push
mov
cmpb
jl
loopne
fdivrl
push
add
movsb
outsl
adcb
and
in
mov
mov
pop
jmp
test
in
mov
cmp
dec
ja
jle
lret
dec
in
outsl
push
fucom
int
or
lea
pushf
pop
in
stos
dec
mov
arpl
jmp
stc
mov
adc
and
jo
es
lods
nop
jno
lods
xchg
lock
iret
inc
push
test
shl
imul
add
inc
mov
aam
movsl
enter
mov
mov
mov
sbbl
lds
jp
movq
push
and
adc
xchg
push
ret
cmpsb
inc
stc
lock
and
scas
testb
push
test
jne
push
out
xor
cmp
idivb
pop
shrl
sbb
pop
movsb
inc
xchg
scas
mov
and
outsl
jae
insl
movsb
stos
push
jecxz
hlt
cmp
add
jbe
mov
push
dec
ss
popa
fwait
cmp
loop
scas
out
ret
xchg
sbb
sub
mov
mov
mov
push
call
clc
sahf
pop
pop
sub
lods
ss
fwait
mov
push
inc
push
in
mov
lods
mov
in
pop
or
fsubs
or
rolb
pop
xor
daa
sbb
adc
movzbl
mov
xchg
pop
lea
or
in
add
xor
pop
push
mov
jo
ror
gs
iret
dec
repz
dec
and
mov
ret
das
orl
aaa
inc
sbb
insb
sbb
mov
sub
std
rclb
sub
mov
add
js
jl
sub
xchg
pushf
jne
cs
adc
js
cmpsl
jno
pop
shl
sti
out
and
sti
add
out
mov
addb
mov
cmpsb
dec
test
in
jnp
rclb
imul
sbb
mov
sbbb
enter
or
aam
sub
inc
xchg
jb
and
scas
subl
aad
xchg
pop
imul
jo
jmp
fiaddl
push
xor
adc
jne
xor
or
movsb
ss
cmp
adc
cmpsb
add
mov
and
stos
ret
imul
cmp
sub
and
adc
mov
adc
adc
stos
ja
sahf
pop
mov
xchg
lea
push
sub
ljmp
or
cmp
xor
out
sbb
pop
popf
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
xchg
push
test
es
stc
int3
repz
inc
jns
es
cli
mov
jmp
test
xchg
and
mov
into
cmpsb
stos
arpl
cmp
sub
mov
fbstp
movsl
xor
xchg
test
pop
insl
rclb
popf
and
testl
and
cli
pop
mov
divb
pop
push
leave
dec
inc
jge
jno
inc
imul
push
pop
bound
push
mov
push
mov
push
push
and
cmp
jne
int3
std
push
dec
push
sar
or
xchg
mov
xchg
cmpsb
xor
iret
arpl
push
mov
sahf
mov
xchg
int3
ljmp
mov
inc
pop
sub
xor
sbb
add
lahf
mov
rcrb
push
dec
mov
adc
jp
mov
popa
jp
fadd
adc
or
xchg
in
mov
mov
fldenv
js
in
sbb
xor
mov
jecxz
lock
scas
mov
imul
les
push
gs
inc
sub
int3
inc
stos
in
mov
xchg
mov
pop
or
xlat
jmp
sarb
lea
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
in
daa
or
jle
sarb
jle
movsl
gs
xor
outsl
jae
xchg
lods
xchg
dec
pop
push
sahf
mov
sbb
imul
or
sbb
jns
sub
xor
mov
jmp
add
sbb
pop
cltd
dec
push
jl
mov
xor
pusha
xchg
scas
aam
cld
xchg
pop
outsl
xor
cld
loop
xchg
mov
lods
and
loope
out
stos
xchg
stos
dec
mov
inc
fcompl
pop
test
xor
and
fsubrs
arpl
lret
fmul
repnz
out
idiv
and
sub
xchg
dec
mov
mov
arpl
and
int3
inc
out
mov
insb
push
shrb
push
lods
and
xchg
jns
cmp
loopne
popf
jb
mov
dec
jbe
and
fstps
push
push
sub
push
or
push
mov
mov
dec
dec
scas
push
lret
mov
jb
add
cmpsb
sub
int
add
in
test
sbbb
lahf
std
xchg
dec
int
repz
jo
dec
cmpb
xor
sbb
aaa
shr
enter
ret
add
push
mov
inc
xchg
ss
popa
into
mov
lock
dec
sub
mov
mov
mov
iret
pushf
pop
sti
mov
dec
std
icebp
cld
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
pushf
mov
and
sarb
jg
jle
jbe
aad
cmp
fisubl
sbb
inc
es
insb
sbb
sub
iret
ret
andl
mov
push
clc
dec
push
adc
dec
jne
loop
pusha
outsl
xchg
add
cmp
cs
inc
mov
aaa
xor
insl
sub
cmp
xor
jge
cmc
add
cmpsb
jae
xor
mov
mov
adcb
jb
fisttpll
scas
push
mov
test
int3
hlt
xchg
imul
jne
cmp
mov
adc
mov
shl
in
into
xchg
daa
fstpl
mov
ja
imul
lods
jo
and
fs
jbe
pop
loope
cld
push
faddl
leave
xchg
fidivrl
cmp
mov
mov
pushf
scas
dec
mulb
ret
cmpl
stos
jnp
movsb
subb
stos
and
and
inc
aad
cmp
mov
cmp
push
push
jnp
push
in
popa
xchg
mov
leave
push
mov
cmc
push
push
cmp
cmc
fwait
xchg
je
sarb
negl
add
push
movsb
pop
pushf
mov
gs
or
mov
in
ds
ds
test
pushf
bound
pop
cmpsb
sub
xor
pand
add
add
cmp
cli
vpaddw
incl
scas
ljmp
sarb
jle
dec
xchg
xor
dec
pop
push
cmpsb
dec
xchg
pop
add
xchg
xor
xchg
jo
ss
aam
mov
mov
sub
aad
int
loop
in
pusha
je
repnz
xchg
out
sarb
cwtl
mov
out
cmp
lahf
jb
jns
das
nop
shlb
pop
call
mov
mov
or
fwait
sub
jnp
out
mov
inc
push
push
call
jmp
jmp
adcb
lret
and
sbb
leave
mov
pop
ja
xor
lahf
mov
dec
mov
adc
inc
fsubrs
xchg
cmp
and
fucomi
mov
jecxz
aas
sbb
mov
add
and
sbb
mov
jnp
mov
mov
imul
or
mov
bound
jmp
hlt
xor
or
cltd
inc
aas
sbbl
inc
jmp
in
test
jl
imulb
imul
rcrl
ret
push
mov
xchg
pop
mov
leavew
mov
pop
adc
inc
pop
orl
cld
inc
lods
adc
inc
add
dec
inc
pop
test
ja
mov
cmpsb
xor
shlb
mov
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
push
xchg
jne
and
jg
jle
cmc
sti
or
outsl
sti
dec
mov
jne
gs
jle
dec
xor
mov
dec
ds
pop
jbe
inc
mov
nop
addb
mov
pop
sbb
daa
js
shrw
hlt
add
lret
mov
sbb
sbb
repz
push
cld
dec
mov
sub
xchg
sub
xor
jnp
mov
push
or
and
aas
lret
leave
addr16
leave
repnz
mov
or
inc
xor
sub
lock
inc
push
or
jo
lods
pusha
scas
loopne
xor
out
sbb
xor
cmpsl
lcall
push
jle
mov
hlt
stos
xchg
mov
sbb
in
in
hlt
add
dec
pop
dec
xor
aaa
pop
in
jecxz
lret
test
mov
cmp
das
iret
pop
add
mov
dec
adc
sub
mov
test
inc
aaa
dec
fcoms
into
cmp
dec
adc
leave
fwait
out
pop
cmovbe
fstl
cwtl
loopne
cmpsb
pop
add
int3
pop
lock
jnp
test
movsl
cmp
ja
out
lret
cmpsl
into
inc
les
xchg
pop
jnp
adc
push
sbb
int3
push
test
lahf
hlt
dec
xor
pop
sub
ja
mov
out
xchg
in
insb
das
rol
ret
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
push
les
sarb
jle
xchg
subb
xlat
pusha
test
cmc
cltd
data16
push
sbb
or
std
arpl
or
xor
jg
pushf
cmc
and
jge
lret
dec
inc
mov
mov
fsubs
lds
addr16
ds
subl
lds
add
jl
jge
pop
lea
adc
loop
jmp
clc
pusha
ret
cli
pop
das
xor
jge
mov
fs
adc
fcmovne
out
movsl
jmp
movsb
mov
ja
in
ret
xchg
xchg
jo
aad
test
pop
cmp
aad
mov
aas
or
fucomp
lret
aas
jp
jmp
jns
rcrl
cli
jnp
or
mov
in
fs
cmp
mov
sbb
es
push
rcll
scas
push
clc
and
sub
xchg
fistpl
xchg
pop
cwtl
fbld
xor
inc
hlt
gs
add
xor
inc
xchg
adc
push
fs
mov
ljmp
mov
mov
sub
jb
mov
dec
add
and
xchg
inc
or
dec
push
add
pusha
and
jnp
push
jg
ret
adc
loop
andb
shll
sub
cmp
xchg
dec
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
hlt
adc
xchg
jge
jle
sarb
jle
ljmp
cld
xchg
cmc
fnsave
nop
sbb
je
fistps
or
fistps
nop
adcb
xlat
test
xor
stos
sbb
jne
push
hlt
cmp
pop
push
sub
inc
mov
jmp
frstor
jge
mov
int
add
push
lea
push
sub
into
test
jnp
xor
popa
adcb
in
sbb
mov
push
jns
pop
lds
adc
mov
cmp
pop
movsl
xchg
push
outsb
add
jp
les
mov
fdivl
nop
adc
dec
mov
in
push
divb
test
pop
push
clc
in
out
cmc
jge
and
fidivs
xchg
clc
loopne
popa
sbb
lcall
jae
push
movsb
outsb
xchg
leave
ds
pop
add
sbb
dec
add
fists
ret
jg
cld
and
jno
add
push
pop
adc
and
adc
pop
in
dec
lods
jecxz
lret
fldenv
mov
or
dec
mov
test
repz
orl
jle
bound
into
lret
xchg
test
xchg
and
inc
inc
and
inc
fwait
in
fs
mov
cmc
or
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
xor
xor
sarb
jle
mov
mov
stos
push
mov
sub
mov
sub
mov
dec
jne
in
dec
pop
mov
cmc
cmp
mov
cmp
sbb
movsl
mov
or
or
popa
scas
dec
int3
sarl
mov
rcll
xor
popf
pop
inc
push
add
mov
je
add
sub
hlt
or
in
or
outsb
pop
fwait
push
popf
lods
popl
push
xor
fidivrl
int3
adcl
stos
jp
sbb
cmpb
mov
jl
in
jne
pushf
ffreep
or
or
in
leave
jb
mov
push
insl
test
jo
adc
xchg
jmp
fisttpl
mov
mov
out
jg
push
lret
dec
sti
pop
cmpsb
lret
outsl
pop
and
dec
test
in
sub
add
fidivrs
mov
int3
repnz
push
xor
cmpsl
stos
mov
jo
push
das
add
mov
sbb
call
sbb
or
pop
lock
cmpb
std
jae
sbb
lahf
mov
repz
out
call
daa
js
stos
inc
movsb
mov
adc
addr16
sbb
mov
adc
xchg
fldcw
int3
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
dec
fsubr
mov
jle
sarb
jle
sbb
inc
clc
pop
mov
mov
or
pop
and
sarl
std
jecxz
scas
ret
imul
lret
push
addr16
inc
in
inc
mov
and
adc
xor
pop
mov
pop
push
mov
fstpl
adc
adc
lret
imul
xchg
test
call
insl
pusha
jge
pop
add
dec
jmp
imul
mov
and
lods
in
xchg
lea
pop
fnstsw
or
arpl
and
xchg
and
insb
adc
sub
cmp
lcall
xor
jmp
xor
lret
lea
dec
fldl
adc
dec
test
pop
fcmovu
popa
adc
add
flds
ss
cltd
dec
mov
outsl
rcrl
clc
mov
pop
ret
add
inc
sub
mov
bound
xor
clc
shll
insb
mov
xor
push
jmp
fcompl
pop
pop
lea
sbb
jns
pop
negl
out
in
inc
stos
inc
cmp
jl
lock
mov
xchg
pop
cmpsb
mov
cmp
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
in
mov
or
inc
and
push
scas
inc
cmpl
pop
mov
push
cmp
stos
dec
mov
add
jbe
popa
loopne
sub
popf
adc
push
cmp
cmp
or
aad
mov
xlat
not
fwait
das
je
and
inc
insl
sbb
pushf
push
mov
cmp
iret
cmp
sbb
enter
rorl
and
and
cmp
ljmp
imul
lret
std
mov
cmpsl
xchg
pop
loop
xchg
fsubp
xchg
sub
fcompl
jns
sbb
mov
inc
xor
imul
leave
pop
pop
repnz
das
pop
pop
lcall
int3
into
or
cltd
ret
adc
cli
lods
lcall
jno
mov
mov
xchg
dec
pop
ret
aam
cwtl
jmp
fmuls
and
or
movsb
sbb
cmp
mov
js
inc
aas
js
fwait
loopne
imul
loop
idivb
mov
mov
mov
fstl
push
xchg
inc
add
push
adc
orb
lret
pushf
jecxz
cmp
sbb
enter
loope
roll
out
test
sub
scas
leave
mov
mov
out
push
sbb
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
testb
jle
mov
out
push
cwtl
nop
mov
dec
and
lahf
inc
loope
or
sbb
xchg
sub
cmpsl
add
jo
pop
pushf
lds
dec
jle
xor
jle
mov
add
loop
loopnew
add
mov
lods
xchg
push
insl
stos
bound
imul
xchg
stos
pop
adc
sub
dec
sub
add
psubd
sarb
pop
loop
jns
fst
mov
mov
out
fldl
xchg
pop
jg
inc
xchg
pop
outsl
inc
aas
scas
jg
lcall
fiaddl
cmpsb
into
ljmp
jne
jnp
ds
push
movb
iret
sar
insb
pop
mov
scas
pop
push
lahf
push
push
cmpl
popf
jae
mov
push
lods
mov
mov
mov
jmp
test
fstpl
fwait
cmpsl
pushf
mov
lahf
test
nop
mov
add
stc
jns
sbbb
ljmp
fucomi
clc
sbb
mov
mov
popa
xor
jmp
inc
add
add
mov
ja
pop
push
test
out
jge
jns
addr16
cld
lods
pusha
repnz
sub
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
in
out
cmp
popa
fdivrl
push
jo
jle
mov
fisubrl
lea
test
xchg
loop,pn
push
jae
out
das
mov
scas
add
lret
inc
sti
inc
jmp
rcrl
mov
mov
mov
sti
lea
dec
mov
dec
mov
jg
xchg
or
push
push
push
and
ljmp
or
jmp
popa
js
jge
push
outsl
rcrl
add
xor
imull
mov
gs
jle
test
lods
out
scas
test
mov
mull
cmp
xchg
mov
out
leave
lds
push
ss
xchg
rclb
sub
bswap
jno
xlat
push
and
aaa
fwait
or
adc
lock
sbb
sbb
call
lds
out
mov
jo
or
movsb
daa
mov
inc
and
lcall
adc
cltd
scas
pusha
xchg
or
imul
out
inc
dec
popf
sub
scas
push
mov
push
sbb
push
sub
push
ss
lret
sbb
mov
scas
sbb
insb
xor
push
adc
aam
jbe
jnp
or
sti
pushf
mov
lret
arpl
cld
lds
adc
jl
jecxz
movl
jmp
push
mov
pop
scas
das
iret
mov
mov
mov
mov
loop
adc
cli
insb
lea
int3
iret
mov
les
pop
mov
mov
inc
sbb
jb
je
push
ljmp
in
push
arpl
adc
insb
movsl
push
test
pop
mov
mov
cltd
mov
fimull
inc
xchg
into
pop
mov
lds
mov
loop
jne
pop
xor
jb
lcall
jb
adc
mov
mov
cmp
push
jne
sbb
and
sub
popf
ja
dec
cmp
loope
aam
test
sbb
dec
andb
fwait
mov
insl
shlb
jp
fs
or
mov
lret
inc
push
push
clc
xchg
arpl
testl
lea
sar
aam
mov
wrmsr
mov
dec
mov
push
adc
and
test
test
shll
sbb
rorb
rol
sbb
or
dec
inc
add
jb
inc
cmpsb
jg
aas
pop
jle
dec
aad
jmp
lock
or
lods
cld
fs
icebp
mov
and
jmp
out
xchg
imul
bound
add
push
jo
jle
xchg
in
mov
pop
stos
sbb
loopne
call
add
fsubrl
mov
dec
xchg
mov
jecxz
sbb
pushl
mov
shlb
pop
fwait
lcall
xorl
fdivr
cmc
add
pop
test
ds
or
scas
mov
loop
xor
fcmovne
or
int
lock
push
inc
rcll
fs
cmp
mov
cmp
push
out
xchg
movsb
inc
cli
fistpl
pop
popf
mov
scas
or
cmp
sbb
jae
or
pop
pop
outsl
mov
mov
fildl
jbe
ret
mov
and
divb
in
inc
dec
dec
hlt
dec
adc
fisttps
jp
js
leave
xchg
jbe
icebp
insl
mov
sbb
jbe
mov
mov
lods
or
jp
ljmp
push
mov
ja
fidivrl
xchg
jl
pop
push
push
mov
push
cmp
fsubrs
mov
cmp
sbb
pop
cmp
mov
dec
jns
fistl
push
out
inc
imul
sbb
outsl
mov
xchg
out
push
out
cli
pop
adc
jno
pop
ja
popf
adc
and
xorl
push
ret
jge
mov
mov
cmpsl
daa
jns
icebp
or
popa
loop
inc
addr16
ds
jmp
loope
sbb
jo
mov
or
pushf
mov
adc
sbb
push
push
lock
mov
pop
cmp
jo
mov
xchg
mov
cld
movsb
jp
fstps
pop
test
int
aas
xor
and
out
out
loope
xor
ficoml
or
and
mov
pop
enter
icebp
cmp
lock
xor
add
mov
dec
mov
out
and
and
loope
in
jo
push
ss
or
das
or
mov
mov
das
sbb
or
or
mov
xchg
jge
sub
push
cmp
xchg
xchg
or
xorl
jge
mov
stc
loopne
out
int
movsb
push
repnz
mov
ljmp
sub
insb
movsb
mov
testb
xchg
pushf
pop
in
xchg
jp
and
pop
sub
bound
pop
pop
pop
hlt
enter
out
xchg
and
stos
mov
xchg
jbe
ret
cmp
sbb
pop
outsl
jle
es
xor
gs
shll
loop
rol
div
jno
cltd
pop
inc
gs
loop
shlb
mov
sub
mov
imul
mov
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
data16
jg
jle
out
mov
enter
push
repnz
mov
das
and
mov
cmpsl
ss
or
dec
test
fisubrl
mov
sbb
mov
enter
push
lods
iret
mov
xlat
push
test
and
insb
scas
loop
jp
jae
mov
xor
mov
and
xchg
loopne
sub
ljmp
ss
sbb
into
jnp
jno
fucomip
pusha
mov
and
sub
push
pusha
jmp
shlb
sbb
adc
adc
int3
cmp
in
das
sub
mov
push
jp
xchg
jl
mov
jns
dec
adc
sub
insb
in
cmpsb
into
dec
test
jno
bswap
lahf
mov
cld
xchg
push
loopne
stc
push
cltd
sbb
in
sub
xchg
fwait
mov
loope
push
std
or
mov
adc
insb
aaa
ds
scas
es
icebp
hlt
fcmovb
jle
or
cltd
fadds
push
jg
lock
push
fdivp
jo
cwtl
pop
hlt
ljmp
jecxz
lods
xor
in
mov
les
aam
out
push
stos
mov
sbb
adc
pop
jne
cs
inc
mov
push
cli
pushf
neg
ja
jmp
or
push
mov
addr16
push
test
lret
cmp
icebp
bound
test
jae
fucomp
sti
and
lods
pop
lods
das
pop
call
jge
xchg
call
cli
aaa
jg
bound
mov
xchg
mov
xorb
adc
xlat
rorb
jno
popf
jb
add
add
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
outsl
in
fisubrl
inc
jg
jle
pop
loopne
imul
ror
cmp
sbb
xchg
mov
in
push
jno
lcall
xor
hlt
jbe
jbe
mov
cmp
xor
jae
sub
and
dec
iret
icebp
pop
mov
ret
shrl
sahf
push
push
push
pop
sub
fists
push
xchg
cmp
add
hlt
and
in
fcmovnu
cs
adc
mov
mov
es
push
nop
pop
mov
add
dec
enter
aam
mov
ret
pop
dec
or
insl
in
sbb
push
inc
mov
jle
and
jge
ja
lds
loop
insl
imul
jno
push
orl
cli
je
adc
or
enter
add
testl
mov
xor
imul
icebp
pusha
add
test
mov
pop
popf
outsb
sub
push
jno
rclb
dec
repz
mov
subl
xchg
inc
jo
or
shl
out
push
and
pop
fcom
sub
jb
push
mov
cmc
popf
jmp
aas
adc
in
adc
int3
hlt
lcall
insb
jecxz
gs
gs
sti
jnp
xchg
decb
arpl
inc
repnz
mov
push
jle
stc
scas
hlt
clc
in
push
mov
add
popa
push
sbb
roll
or
adcl
ja
sub
ror
cmp
jmp
pushf
lcall
inc
push
sub
js
hlt
xchg
cmpl
lcall
mov
push
js
out
mov
jnp
int
or
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
lock
dec
mov
fisubs
pop
loope
insb
stos
out
addb
lock
ss
push
in
mov
lock
rep
lcall
fcoms
cs
sbbl
mov
adc
je
cld
hlt
orl
stos
inc
out
xor
or
lret
jne
pop
pop
mov
or
xchg
push
int3
sarb
push
test
in
jmp
jae
xchg
shl
sub
add
mov
imul
inc
ja
and
movsl
jge
fsubs
mov
stc
inc
enter
cmp
ja
jnp
enter
mov
mov
sub
outsl
icebp
cmp
dec
jb
jno
and
cwtl
sub
push
xchg
cwtl
mov
adc
ja
rorl
scas
add
aaa
cmp
lds
movsl
nop
sbb
int
jle
std
or
add
lcall
sbb
xor
pop
orb
in
and
aam
out
fs
sub
jp
and
mov
sahf
adc
bound
sbb
iret
sub
stos
outsl
adc
xchg
in
push
test
test
das
jecxz
ds
jae
mov
mov
add
insb
mov
xchg
xlat
add
mov
aas
ret
xor
fdivrl
insb
mov
popf
and
repz
cmpsb
mov
mov
mov
push
inc
xchg
ficomps
pop
das
sysexit
pop
adc
cmp
xchg
pop
mov
pop
or
aas
mov
fs
inc
roll
out
iret
xchg
iret
or
cmp
xchg
insb
pop
aaa
mov
inc
out
mov
dec
out
rorb
or
mov
mov
ficoml
insl
dec
and
cmp
lcall
gs
mov
aas
int
or
xchg
sub
xchg
imul
les
pop
sahf
lods
sbb
in
push
ficompl
inc
rcrl
cwtl
adc
mov
push
icebp
jno
sti
dec
jne
dec
dec
imul
out
jmp
inc
gs
lods
push
mov
xlat
pop
xchg
and
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
loop
mov
jle
fbstp
jle
leave
sarb
bound
leave
fistpll
mov
cltd
inc
js
cmpl
xchg
mov
push
sub
in
pop
aas
push
mov
hlt
mov
test
sbb
mov
fdivrs
mov
aas
js
nop
sti
fdivl
mov
push
cmp
push
xchg
sbb
stc
decl
je
lods
sub
mov
push
es
inc
shrb
sub
mov
pop
cli
jge
rol
dec
in
push
out
loop
repz
sbb
mov
scas
add
add
or
out
movb
mov
push
fucom
add
leave
outsl
push
mov
loop
mov
xchg
aam
in
call
repz
rolb
enter
data16
outsl
insb
lods
rcrb
cmp
ret
shrl
mov
pop
imul
mov
ret
out
pop
aam
and
fidivrs
jle
xor
ja
lods
insl
sarl
mov
sub
push
mov
aas
dec
push
mov
and
or
sti
in
cmp
hlt
popa
test
xchg
rol
sub
ret
into
jge
into
pusha
jno
cmp
cs
pushl
das
scas
xchg
mov
lahf
adc
cmp
pop
sub
push
adc
sarl
push
xchg
pusha
js
mov
insb
jne
xchg
jne
fwait
orb
imul
or
xor
imul
ja
aad
enter
fidivl
jp
xchg
xor
scas
dec
dec
cmp
inc
pushf
push
jmp
imulb
setp
cmp
xchg
xchg
sub
mov
sub
pushf
adc
fwait
cmc
daa
lcall
lret
push
cli
mov
or
data16
jnp
cmpsb
and
fimull
push
jge
leave
mov
push
mov
sti
movsl
daa
mov
test
xchg
enter
ljmp
shrl
fiadds
inc
mov
je
ret
sbb
fmul
into
imul
lods
and
and
dec
sub
cs
lret
leave
bound
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
xchg
shrl
adc
jg
jle
outsl
add
mov
movsl
cltd
xchg
pop
fstps
ror
sbb
idivb
ret
and
xor
or
mov
enter
jle
fucomp
push
mov
push
shrb
or
mov
les
pushf
xchg
ror
pushf
outsb
mov
inc
cltd
pop
icebp
pop
xor
adc
fidivs
fwait
mov
pop
jae
add
pop
nop
addr16
les
inc
testl
xor
mov
mov
adc
pop
adc
pop
pop
mov
sahf
or
inc
jmp
fnsave
scas
mov
ljmp
imul
push
arpl
sbb
in
pop
jbe
cltd
rcr
iret
pusha
stos
fmuls
and
mov
iret
sub
sahf
cmp
mov
jle
inc
and
lcall
aas
xorl
adc
lret
or
mov
bnd
sbb
cmp
or
mov
fcompl
mov
stos
pushf
xchg
jecxz
push
dec
xor
test
sub
cs
ret
xchg
or
and
cmp
xor
adc
mov
ds
int
jecxz
mov
rol
test
popf
call
jge
pop
mov
insl
cmp
dec
pop
sub
js
shr
popf
cmp
jmp
pop
jns
pop
xchg
lock
jge
jmp
out
or
xchg
loop
or
test
les
lret
or
cmp
stc
adc
sbb
xor
and
pushf
mov
lods
ret
pop
dec
imul
test
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
leave
sti
xor
pop
jg
jle
dec
in
adc
into
and
pop
out
int3
loop
iret
adc
mov
imul
adc
mul
jp
repz
xchg
mov
shll
pop
je
rcrb
cltd
das
dec
jle
sahf
mov
mov
cmc
xchg
push
cli
fs
adc
cmp
pushl
inc
pop
inc
out
xor
insl
pop
int3
inc
pop
jge
or
aam
sbb
inc
sub
les
push
scas
dec
fadds
sub
and
push
cmp
call
inc
out
sub
or
test
out
push
arpl
sarl
dec
fcmovu
and
shlb
jbe
mov
iret
je
pop
test
in
xor
aam
sub
ds
and
jmp
mov
ror
push
xchg
pop
icebp
sahf
ret
jge
inc
mov
sahf
aad
push
jp
outsl
sbb
inc
cs
mov
mov
inc
sub
cmp
ljmp
xor
shlb
lock
dec
pop
xchg
add
jnp
jnp
jl
cwtl
lock
repnz
orb
sbb
into
push
into
inc
pop
push
and
or
sbb
into
inc
and
in
xchg
xor
inc
or
shll
mov
ja
ljmp
push
push
mov
xchg
loope
push
fdivrs
xchg
arpl
or
jnp
lcall
sub
addr16
mov
lcall
bound
push
jle
push
cmpsb
inc
xchg
inc
test
cmp
ficoml
dec
std
pop
popf
and
in
cmp
mov
lcall
adc
loop
pop
add
xchg
ja
hlt
add
jmp
jmp
in
mov
shl
jb
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
lcall
jle
lods
stos
jle
adc
sub
adc
neg
shrb
leave
repnz
leave
inc
sbbl
jle
mov
mov
mov
out
mov
fs
mov
lods
jae
xor
pusha
test
inc
cld
stos
dec
lods
xchg
jbe
sbb
adc
stos
mov
out
add
js
adc
mov
ss
stos
aad
mov
je
mov
scas
cmc
shll
mov
lcall
mov
aad
push
add
dec
mov
mov
push
pop
jp
adc
mov
fdivp
stos
lds
jecxz
sar
out
in
adc
adc
add
lret
cmp
push
cld
xchg
add
je
xchg
jns
or
ror
jge
dec
sbb
in
push
pop
dec
mov
clc
dec
mov
xcrypt-cfb
cmpsl
and
inc
inc
mov
inc
or
xchg
in
mov
jmp
xchg
xchg
jb
inc
inc
out
fsts
fisubrs
xchg
xchg
pop
xlat
sbb
call
push
and
mov
inc
xor
sbb
pop
mov
fisttpl
fldenv
mov
sub
fs
dec
sub
inc
pusha
nop
out
mov
push
dec
cltd
pushf
dec
ds
fiadds
lret
stos
mov
jecxz
xchg
cmc
arpl
jmp
inc
int3
jno
idivb
outsl
notl
mov
popa
fmull
sbb
xchg
add
cmc
xor
and
mov
pusha
add
pushf
sub
sub
mov
or
inc
push
mov
fdivr
inc
aas
adc
in
xchg
mov
or
aam
mov
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
stc
xor
jg
jle
sub
or
std
xorps
fwait
mov
inc
movsl
and
pop
data16
mov
loope
xchg
jp
pop
push
popf
and
clc
and
push
add
outsb
mov
dec
inc
stc
jb
cmpsl
testl
push
jb
mov
mov
push
sbb
jge
sbb
push
jno
frstor
fadd
dec
pop
rorb
daa
addr16
daa
sub
lea
jno
mov
test
mov
push
in
mov
cmpsl
test
dec
xchg
cmpb
xor
test
addr16
int
pop
sub
dec
ficompl
jns
fwait
das
mov
mov
jo
ljmp
mov
insl
or
xchg
aad
jmp
inc
push
add
shr
sub
xlat
fisubrs
jle
aas
leave
inc
and
mov
cmp
add
xchg
imul
xor
sub
call
sub
pop
insl
xchg
inc
jp
mov
mov
out
loope
inc
data16
sbb
loop
mov
jmp
lock
call
stos
es
test
cmp
cmpsb
scas
cmp
jle
push
jle
outsl
fstl
sarl
movsl
jmp
or
pop
arpl
and
push
mov
cwtl
sbb
inc
popf
xor
xor
lahf
lcall
jns
dec
xor
adc
nop
sbb
test
xchg
mov
lds
push
push
decl
jbe
outsb
lds
lahf
imulb
xorb
sub
jmp
push
and
or
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
mov
jle
jg
jle
jmp
adc
out
push
xchg
pushf
sarb
arpl
lret
fs
jno
pop
out
in
enter
je
sbb
push
xorl
cmp
cmp
and
lret
cmp
mov
stos
adc
adc
add
cmp
icebp
jecxz
adc
push
sbb
cmc
pop
popa
sub
rclb
xchg
push
mov
iret
and
filds
stc
insl
xchg
adc
inc
xchg
mov
adcl
pop
jge
mov
push
icebp
jg
call
dec
dec
fs
pop
ljmp
xchg
xorl
xor
fistpll
leave
pushf
fsubrs
push
sub
out
imull
icebp
sbb
loop
es
test
pop
fisttps
lods
and
xchg
ja
mov
imul
addb
outsl
lahf
jmp
inc
je
les
stos
and
push
aam
or
lret
pop
cmp
push
mov
xchg
mov
lahf
arpl
sub
cld
push
cmp
or
jbe
stos
fs
pop
cld
orps
adc
push
lahf
cmp
pop
mov
mov
jl
mov
xor
cld
push
jp
mov
xchg
jno
aad
pusha
repnz
inc
test
mov
loop
and
mov
sub
mov
push
sub
push
inc
scas
inc
test
aad
int
addb
sbb
ss
or
jle
scas
js
fimull
out
outsb
fldcw
ret
rorb
mov
mov
xchg
ds
ss
inc
or
sub
lahf
inc
mov
arpl
fwait
mov
jg
test
call
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
mov
in
jle
jg
jle
add
stc
mov
xchg
in
out
mov
popf
or
xchg
out
mov
cmpsb
mov
ljmp
mov
scas
popl
sti
lds
dec
cmp
lds
mov
psrld
adc
or
xlat
mov
aad
pop
fildll
js
inc
mov
ficoml
mov
jmp
add
pop
ss
lds
test
std
lret
pop
popa
aas
push
das
push
inc
xchg
gs
push
ss
cmpb
test
sub
sub
adc
inc
insb
fbld
fwait
or
popa
jl
jae
xlat
call
imul
mov
ja
in
aaa
mov
mov
repnz
test
out
cmp
insl
cs
cmp
cmp
sub
movsl
or
ss
inc
pop
jae
adc
and
shrb
dec
pop
lcall
jo,pt
je,pt
repz
jge
in
int
mov
js
jo
mov
pop
sub
fbld
divl
sbb
inc
cld
xor
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
jecxz
mov
jg
jle
stos
mov
lock
jnp
mov
jns
mov
enter
int
repnz
push
jmp
push
js
push
jg
cmp
push
mov
mov
push
pushl
sti
adc
imul
lds
jmp
lods
mov
jg
jmp
cmpsl
nop
sarb
test
aad
xlat
xchg
xchg
js
dec
xchg
daa
mov
sbb
xor
int3
lods
movsb
lret
xchg
jno
ds
loopne
bound
add
stc
int3
ds
dec
gs
mov
out
adc
sub
add
push
jo
popa
xchg
icebp
xchg
cli
mov
mov
mov
and
outsl
mov
das
xchg
jg
ficoml
pop
stc
mov
or
inc
scas
and
andb
jno
loope
in
repnz
mov
add
add
stos
mov
add
insb
pop
inc
inc
fdivs
or
or
pop
and
nop
movsl
adc
insb
push
cmp
int
mov
lret
sbb
inc
sub
dec
out
jne
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
clc
jge
jle
aas
jg
jle
sub
adc
outsl
cmp
push
dec
add
sarl
fnstsw
inc
add
mov
fdivl
xor
jno
or
cmp
stos
adc
int
pushf
adc
and
div
and
or
or
add
inc
shrl
ret
bound
cmpsb
mov
add
imul
lret
test
les
mov
xchg
xchg
cmpsl
xor
mov
enter
ret
shld
dec
stc
push
xchg
dec
test
aaa
je
jns
xchg
mov
lret
aad
std
jne
js
ja
out
rcll
sub
dec
js
or
stos
lcall
out
cmp
int
xchg
mov
or
cmp
fdivrp
out
aam
add
aas
jp
xor
add
arpl
loop
cmpsb
xchg
mov
lcall
imul
ja
push
and
mov
ja
sbb
sbb
pop
dec
xchg
outsl
mov
aad
jmp
out
cltd
inc
insl
leave
push
stos
std
popa
xor
enter
inc
fistps
fldt
mov
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
sbbb
xchg
jne
clc
jle
aas
jg
jle
push
inc
loope
pop
inc
add
insl
int3
pop
lds
mov
pop
mov
aas
mov
out
mov
cli
xor
lret
bound
inc
mov
in
or
out
popa
fstl
test
repnz
les
addr16
dec
loop
adc
xchg
mov
xchg
inc
jge
out
mov
test
cmp
adc
xchg
lods
repz
cmp
mov
mov
fisttps
fwait
adc
inc
insb
xchg
ja
and
out
jae
aas
sbbl
sbb
cmp
test
fisubrl
mull
cmc
rorl
push
jle
fnstcw
mov
out
push
out
dec
push
push
add
loopne
fwait
mov
loopne
mov
cmp
xor
std
jg
in
push
push
xchg
int3
das
sbb
fldpi
add
mov
or
inc
dec
inc
das
push
cmpsb
lods
les
mov
sub
fwait
lret
jne
out
mov
aad
xchg
jne
lock
int3
mov
js
ret
add
sub
hlt
stos
mov
xchg
push
jle
fdivl
fsubrs
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
aad
jp
stc
jle
aas
jg
jle
mov
cli
pop
pop
sub
dec
dec
add
xor
xchg
dec
vpminsw
out
adc
mov
sub
hlt
add
call
cmc
cmpsl
lret
das
inc
cmpsb
test
lods
lods
jne
int3
icebp
es
data16
das
cwtl
aaa
add
jns
jno
add
loop
inc
lods
xor
call
in
adc
add
fcmovbe
xchg
push
sbb
cwtl
mov
imul
btc
je
movsl
cwtl
jb
imul
cmc
sti
mov
sbb
fcomps
in
repz
xlat
stos
out
out
pop
sbb
xchg
sbb
out
sub
add
ljmp
cmp
push
cmpsl
mov
pop
roll
fbld
test
ljmp
sbb
stos
out
jmp
stc
pop
add
xchg
pop
fwait
mov
lods
ret
dec
aas
mov
xchg
xor
pop
test
mov
jb
cmp
cmc
in
and
jne
push
mov
jecxz
in
push
push
and
mov
call
dec
out
shrl
pop
lret
addr16
xchg
or
scas
add
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
mov
js
mov
jle
aas
jg
jle
lods
mov
xor
ret
cmp
ss
xchg
ffree
imul
push
dec
cmp
or
mov
and
test
pusha
mov
mov
test
xchg
inc
aam
mov
out
jg
cmpsb
movsb
es
cltd
mov
fnstenv
test
loop
sbb
mov
mov
push
repnz
jae
les
adc
push
hlt
ss
xchg
fildl
mov
push
cwtl
lds
dec
sub
lahf
mov
xchg
xchg
or
dec
add
iret
lcall
xchg
push
sub
sti
pop
or
in
jo
push
mov
je
push
fcmovnb
mov
lock
mov
mov
xchg
adc
pop
outsb
sbbb
mov
xlat
and
sub
cwtl
imul
insl
in
ljmp
lods
jnp
lods
push
scas
xchg
pop
and
cmpb
jno
clc
push
ds
adc
add
add
imul
and
fldenv
fildl
jp
jl
mov
fwait
push
xchg
mov
inc
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
fwait
sub
jno
jle
aas
jg
jle
and
inc
pop
or
call
dec
adc
loopne
fistl
cmp
test
pop
mov
pop
jle
jne
xor
inc
xor
stc
dec
push
aad
aam
pop
jns
aaa
out
add
test
hlt
popf
scas
xchg
data16
mov
je
stc
pop
jb
sbb
bound
scas
cmp
sub
insb
mov
mov
out
mov
mov
rorl
sub
push
mov
stos
cmp
jne
adc
add
and
sub
sete
enter
or
mov
xchg
push
std
addb
lret
shll
test
pop
inc
insb
mov
movsl
std
cwtl
adc
adc
repz
icebp
loope
sub
rcrl
shll
scas
cwtl
adc
or
clc
es
sahf
jbe
mov
mov
pop
add
loop
pop
and
outsl
aad
scas
enter
mov
dec
xor
lock
pop
pusha
mov
call
aaa
clc
xor
xlat
in
or
in
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
cmpsl
push
pop
in
xor
jle
aas
jg
jle
cmp
lcall
adc
xchg
in
ljmp
xor
mov
flds
cmp
sarl
insl
jle
daa
or
push
mov
int
idiv
jecxz
lods
or
ja
or
imul
add
inc
pop
movsl
cmp
test
scas
adc
fldenv
xor
adc
dec
ss
sbb
sbb
mov
dec
lods
adc
xor
aam
js
addr16
ljmp
into
pusha
lcall
or
xor
hlt
enter
dec
fcoml
xchg
aam
or
fldt
pushf
scas
sbb
rcr
pusha
xor
sub
outsl
inc
enter
test
push
and
jp
lret
ret
cmp
int
push
mov
std
stos
sbb
aam
popa
push
call
and
jle
jnp
aaa
pop
test
mov
je
mov
setp
dec
mov
repnz
icebp
fcoms
sbb
sub
cmp
xor
pop
push
cmpl
lret
repnz
xor
int
inc
es
inc
fmuls
mov
add
in
imul
jle
aas
jg
jle
sbb
cmpsl
cmp
pop
push
loop
out
xchg
xchg
aam
fmul
imul
mov
inc
mov
aam
enter
add
adc
mov
xchg
pop
pop
shll
mov
push
inc
lock
mov
mov
jnp
data16
std
adc
stos
scas
xchg
les
ret
xchg
enter
mov
push
cmp
aad
loop
les
or
push
mov
cmp
or
mov
imul
arpl
out
cmp
sbb
stc
aad
mov
fiaddl
jb
sbb
cld
or
jb
jb
pop
int3
add
and
jne
outsb
fisubrs
inc
sub
test
addr16
cmpl
mov
xchg
ret
jl
pop
cli
push
push
xchg
adc
out
pushf
jns
mov
idiv
jae
jne
or
sti
bnd
push
mov
mov
dec
xor
ja
and
push
test
adc
mov
loop
icebp
fwait
adcl
pusha
outsl
test
inc
clc
jmp
and
and
sti
sub
xor
jle
in
mov
insl
or
sar
or
pop
in
je
pushf
push
js
xchg
add
inc
in
pop
mov
pop
out
int3
popf
pushf
or
sub
bound
bound
insl
and
lcall
fwait
test
mov
jge
or
xchg
mov
xor
add
adcl
or
cld
mov
frstor
adc
in
mov
sbb
mov
jle
jno
out
pushf
mov
insb
push
xchg
xchg
out
rcrl
and
dec
shl
push
pop
adc
adc
push
mov
push
sbb
xchg
push
cmp
sbb
add
push
mov
imul
push
mov
outsb
in
push
inc
data16
pmuludq
sbb
sahf
out
cmpsb
dec
xlat
push
movsl
xlat
popf
or
stc
cmp
push
lea
jg
pushf
mov
pop
lds
out
dec
mov
popa
icebp
fwait
pop
mov
and
cmp
inc
jnp
dec
int
or
rcr
cmpsb
loop
insb
cmp
les
and
mov
out
jl
cli
jns
dec
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
shlb
pop
cwtl
loope
add
lods
mov
mov
in
imul
out
lea
clc
shl
addr16
push
cmp
stos
adc
push
inc
xor
mov
aaa
popf
dec
insl
roll
mov
rolb
sbb
sbb
iret
sarl
and
sub
hlt
das
rol
mov
or
lds
out
pop
adc
stos
mov
jne
pop
xlat
inc
xor
xchg
mulb
clc
iret
bswap
cmpsl
aaa
adc
xchg
lods
out
fcomi
mov
ds
xor
arpl
adc
pop
add
fimull
rorl
jne
cltd
js
dec
mov
test
sbb
mov
adc
les
push
sbb
fsubr
leave
ds
movl
and
cmp
or
call
push
sahf
cmp
outsl
std
imul
add
and
dec
push
fcomip
xor
lret
das
and
xor
clc
int
xchg
xchg
cs
int
pop
mov
add
in
adc
ret
clc
lds
cs
mov
jmp
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
cld
fiadds
and
bnd
aas
jg
jle
adc
enter
in
cmpb
xchg
push
add
adc
neg
xchg
sub
sti
in
arpl
mov
lret
push
mov
cmpsb
decb
das
sbb
mov
or
mov
mov
mov
mov
cltd
outsl
imul
or
sub
pop
pop
mov
pushf
dec
test
sbb
scas
mov
xchg
js
sbb
pop
in
mov
nop
inc
movsl
push
out
pop
mov
leave
repz
fists
aam
cmp
jb
inc
mov
test
jp
push
loope
xchg
sbb
mov
rorb
mov
nop
scas
sub
lods
adc
xchg
jecxz
out
pop
mov
rolb
ljmp
cmp
cmp
mov
cmp
push
sub
test
jne
mov
dec
stos
push
jl
or
rcll
xor
rorb
jl
jo
outsl
inc
pop
push
popa
add
data16
sub
inc
sub
sub
call
jg
inc
ret
std
ss
xor
xchg
xchg
lret
mov
ror
dec
xchg
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
dec
int3
mov
shll
lock
mov
xor
add
fnstsw
les
je
xor
sbbb
sbb
cmp
mov
cwtl
ficomps
das
sub
lcall
push
xchg
mov
add
out
es
cmp
scas
repz
pop
push
sub
add
loop
out
or
int
and
cwtl
mov
dec
mov
test
jp
movsb
pop
inc
ja
pop
repnz
lea
inc
sarl
xchg
dec
sti
jge
inc
lret
shlb
cmp
adc
push
sub
icebp
std
hlt
xor
daa
and
pop
dec
xchg
icebp
mov
sbb
into
sbbl
imul
jg
popf
adc
sbb
mov
shrl
stos
in
sbb
arpl
fsub
mov
lret
pop
in
aam
jmp
hlt
mov
fistl
sbb
jno
out
xorl
jg
pop
ja
inc
mov
xchg
xchg
dec
xchg
adc
jp
dec
mov
adc
mov
and
outsl
out
shlb
sahf
out
stos
ret
in
lahf
jle
dec
jmp
and
lods
lret
movsl
sub
mov
aas
jg
jle
in
mov
sbb
adc
adc
cmp
in
push
add
enter
or
xchg
dec
or
scas
inc
out
aaa
jle
lods
cmp
movsb
div
pop
mov
xor
jmp
mov
repnz
mov
vmread
hlt
shrl
push
or
out
add
stos
mov
xor
sub
cmp
xchg
rcrb
test
xchg
jae
daa
xchg
sub
cmpsl
mov
sahf
sbb
push
dec
arpl
push
frstor
mov
stos
pop
jb
mov
sbb
push
push
xor
pop
pop
subb
xchg
lahf
out
shl
sbb
in
push
pop
lods
mov
daa
dec
je,pn
movsl
in
dec
es
popa
push
pop
popa
fcmovnb
ss
lahf
mov
xor
nop
enter
cmp
loop
rol
loop
clc
pop
sbb
in
mov
mov
inc
cmpsl
inc
rcl
sub
ficompl
sub
imul
jmp
pop
movsb
dec
adc
test
out
test
insb
jle
test
fisubrl
fwait
jg
push
or
sbb
pop
nop
rorl
cmp
pop
jp
sbb
insb
add
pop
in
cltd
pop
mov
std
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
rorb
jg
jle
mov
into
or
out
insb
push
or
pop
or
inc
adc
add
dec
in
ret
stos
adc
les
mov
cld
dec
inc
mov
lcall
ss
pop
addl
out
pop
out
add
dec
push
jmp
test
fxch
add
mov
mov
cmp
cmp
fwait
repnz
or
dec
decl
push
call
add
mov
cmpsl
push
push
shlb
fsubrs
dec
inc
jmp
cmp
push
mov
push
icebp
enter
pop
mov
xchg
sti
dec
cs
fidivl
inc
adc
push
rorb
addl
mov
cld
sbb
fdiv
mov
xchg
rcr
outsb
push
orb
inc
cmp
sbbb
jmp
cmp
pop
xchg
imulb
jmp
push
enter
pop
cmc
fisubl
es
mov
push
xlat
mov
jb
enter
pop
mov
ret
mov
nop
sti
xchg
xchg
lahf
jmp
mov
movsl
addb
data16
sub
in
shrb
ds
ds
js
jne
inc
mov
mov
jmp
test
test
jge
cmp
out
out
lret
jle
jg
jle
xor
test
bound
test
out
push
loopne
pop
push
test
xchg
ret
mov
or
stos
pop
mov
je
jmp
sub
mov
pop
bound
mov
mull
pop
inc
das
mov
xchg
jb
lods
sub
or
rorb
stc
xchg
dec
movsbl
xchg
adc
adc
fdivs
aaa
xor
pop
je
outsb
mov
sbb
mov
mov
inc
lret
jo
rolb
sub
and
fs
andb
pop
lods
ret
test
jp
and
cli
sbb
jns
cmp
test
adc
sub
inc
jno
es
into
xorb
jmp
popf
lods
or
add
test
mov
jg
testl
dec
jge
test
add
loope
sbb
shll
push
movsl
movsl
in
jne
xor
adc
adc
mov
jb
push
adc
sbb
adc
mov
push
cmc
sbb
sbb
xor
mov
add
jmp
mov
or
lods
jge
out
mov
mov
jle
jg
jle
andb
push
adc
sahf
xor
xor
lds
mov
push
sub
mov
sarb
adc
fisubrl
xchg
dec
jg
push
mov
fcomps
jg
ficompl
or
mov
inc
mov
and
push
ss
hlt
in
aas
popa
loop
lods
mov
sti
ret
cmp
sub
popa
loop
clc
aaa
lock
xor
lock
dec
in
sub
or
cmp
cmc
cmp
and
sub
push
push
sub
rcrl
push
stos
or
in
cmpsl
jae
arpl
mov
inc
out
shlb
fiadds
add
outsb
in
sti
lcall
fstl
push
mov
pop
push
xor
popa
mov
out
loope
mov
loopne
in
push
mov
and
out
xchg
jp
add
sub
jg
test
jecxz
addb
sbb
or
sub
jle
mov
dec
es
mov
xorb
adc
loope
nop
fs
ja
ficompl
cmp
or
cmc
jb
cwtl
fs
cmp
sbb
aad
data16
add
or
add
mov
imul
mov
jmp
inc
sbb
gs
jae
out
rorb
jg
jle
xor
nop
jae
insb
xor
out
lahf
mov
frstor
pop
int3
cmpl
xchg
shufps
and
ds
int3
pop
or
dec
jmp
xor
je
ret
push
popa
cmp
sub
mov
mov
add
adc
rclb
in
xchg
sbb
xor
xchg
push
adc
push
xlat
cmp
mov
cmp
push
or
mov
loopne
jbe
inc
cmp
pop
xor
pop
cmp
push
sbb
mov
xchg
fstl
in
or
lds
mov
adc
dec
rolb
rcll
jo
int3
lcall
fdivrs
int3
addr16
pop
jle
pop
aad
mov
std
stos
inc
mov
ret
adc
sbb
lock
sub
pop
mov
push
inc
rcll
es
xlat
or
fs
xchg
insb
movsl
mov
inc
pop
ror
mov
sti
call
lcall
push
inc
push
das
aaa
cmpsb
scas
or
sbb
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
loop
mov
aas
jg
jle
mov
sbb
xchg
mov
dec
test
inc
data16
movsb
lahf
and
mov
aaa
fisubs
sbb
jb
sub
dec
ret
fstp
mov
lcall
mov
fcoml
inc
stos
and
imul
push
mov
aaa
mov
faddp
adc
fisubrl
cmp
cld
mov
loope
es
jle
xor
mov
cld
and
mov
push
hlt
ja
mov
inc
nop
jae
and
cltd
je
inc
mov
test
fimull
dec
ja
mov
mov
repnz
push
sbb
cltd
scas
mov
mov
inc
cmp
cmp
sub
test
rclb
jbe
xchg
inc
rorb
popf
pop
mov
cmp
inc
mov
dec
push
inc
into
loop
ja
cmpsb
pop
push
inc
inc
lcall
push
xchg
fimuls
imul
popf
xchg
cld
or
pop
cmp
xor
fwait
es
out
cmp
push
xchg
mov
and
mov
mov
outsb
mov
inc
enter
adc
lahf
pop
call
adc
add
orb
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
sub
jle
aas
jg
jle
and
inc
push
xor
xor
ds
dec
lods
push
jl
sub
in
leave
pusha
out
je
aad
divl
dec
jnp
clc
and
mov
fisttpl
aad
push
mov
push
sbb
loopne
fisubs
cmp
push
fbstp
in
bound
arpl
mov
mov
sub
inc
pop
xchg
int
add
cmp
jg
loope
fwait
dec
mov
loop
inc
mov
ret
add
imul
outsl
repnz
sti
lahf
iret
pop
sbb
inc
adc
or
shll
and
test
push
int3
jo
mov
push
cmpsb
pop
pop
add
enter
fstps
mov
sbb
jge
cmp
nop
nop
pop
jb
sbb
nop
ds
rolb
dec
push
jnp
adcl
lret
divl
jle
sub
out
in
sar
mov
fnstenv
les
add
xchg
mov
in
popf
rol
and
imul
loope
bound
repnz
inc
dec
push
xchg
int
dec
mov
rorb
push
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
shll
mov
jg
jle
mov
mov
and
fisttpl
andl
sbb
out
and
leave
push
fmuls
sbb
dec
cmp
mov
stos
outsl
and
pop
mov
sub
into
push
or
out
push
pop
cld
into
push
cmpsb
xor
lods
bound
shll
dec
mov
inc
test
mov
sub
dec
pop
mov
adc
adc
mov
pushf
outsb
icebp
shr
push
stos
decb
push
sub
inc
xor
sub
rcrl
ret
push
xor
pop
movsb
sub
sbb
je
mov
and
cmp
xchg
sub
es
int
adcb
jbe
ja
jb
mov
test
ja
and
jno
jbe
cmp
mov
sbb
adc
movb
lret
rcrb
cmp
push
jb
shll
aaa
pop
mov
movsl
sbb
xor
jle
rorb
mov
lret
insb
cwtl
push
repnz
aad
pop
jnp
push
shlb
dec
into
xchg
xchg
fwait
sbb
in
xchg
pop
pusha
fisubs
pop
add
add
idivl
push
jp
sti
inc
aaa
mov
push
fs
mov
aas
jg
jle
xchg
clc
adc
fisubrs
sub
pushl
ffree
pop
out
sti
push
repz
subl
add
in
pop
sub
mov
daa
fs
shrb
xchg
cmp
lods
leave
adc
cmpsl
aad
mov
add
stc
push
call
sub
imull
hlt
add
xchg
sbb
in
mov
pop
hlt
hlt
sbb
mov
pop
loopne
lods
cmp
adc
popa
jns
push
push
dec
xor
mov
movsl
adc
inc
pop
lock
cmp
jle
insb
ret
iret
push
out
pop
dec
daa
jb
nop
js
mov
adc
clc
pop
ret
xor
sub
push
scas
lock
xchg
or
ja
add
int
cmp
ja
xchg
jb
mov
ljmp
xlat
lock
sbb
in
mov
cltd
cmp
mov
push
cmc
enter
mov
pop
cmc
outsl
push
xor
xchg
xchg
and
insl
jae
mov
or
lea
sub
push
adcb
xor
push
push
jmp
mov
push
cmp
std
add
or
lods
loope
rorl
or
enter
cli
decl
add
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
add
inc
mov
cmpb
jg
jle
jg
pop
dec
nop
fidivrl
cmp
xor
mov
adc
shll
out
or
sti
mov
cmp
popf
push
xor
fcom
iret
pop
adc
and
cmpsb
mov
mov
or
mov
jle
pop
inc
pushf
and
push
add
into
jmp
mov
cmp
int
out
stos
adc
ljmp
cmpsl
xchg
xchg
pop
add
dec
in
cld
dec
test
mov
cltd
jge
and
mov
lea
inc
push
sub
dec
lock
test
aad
out
push
mov
mov
cli
out
push
addr16
mov
adc
push
xchg
push
inc
daa
mov
rcrb
sti
shlb
lea
aam
inc
mov
inc
fstl
pop
sbb
cmp
pop
inc
xchg
sbb
sti
das
pop
xor
push
xor
jo
enter
sbb
popa
cwtl
sarl
jp
jl
push
dec
cmp
std
jb
cwtl
cmpsb
mov
cmp
mov
push
jg
movsl
adc
pop
sarb
out
imul
shll
fucomi
pop
add
add
arpl
imul
mov
std
ret
jle
jg
jle
mov
aas
mov
andb
pop
out
pop
sbb
sbb
mov
pop
xchg
into
sbb
cmp
xor
mov
repnz
fisubl
dec
and
or
loop
aam
ss
ds
nop
push
popf
add
xor
add
lahf
and
mov
push
enter
push
push
xchg
mov
mov
fstpl
mov
sti
out
lods
mov
int3
push
imul
xchg
mov
cmpsl
add
xchg
mov
push
pop
sub
out
test
pop
sub
cmp
paddw
add
dec
outsl
loopne
test
insb
mov
in
jb
mov
gs
or
push
orb
stos
cmpl
adc
xlat
cmp
mov
mov
jo
scas
out
mov
xchg
and
ret
cmpl
jecxz
inc
mov
sub
jge
adc
mov
mov
bound
or
fimuls
adc
mov
and
mov
inc
push
lret
imul
jae
aas
mov
cmp
xchg
or
jle
jg
jle
mov
xchg
cmpsl
xor
push
and
inc
imul
dec
xchg
popf
push
pop
aaa
and
cmpsl
adc
in
sahf
aad
push
adc
andl
les
ds
fistpll
rcrl
adc
ret
out
mov
popa
movsb
xchg
push
or
cmp
sahf
insl
cmpsb
sbb
and
push
and
test
das
xchg
xchg
cwtl
aas
adc
movsb
popf
mov
test
scas
sub
or
add
push
adc
fsubs
test
dec
test
xor
and
push
xchg
cmp
cmp
nop
lahf
pop
push
xchg
fnstenv
sbb
cmp
repz
and
jle
jbe
lcall
lret
or
imul
xchg
stos
loop
xchg
cli
icebp
jae
mov
add
lea
inc
mov
ret
mov
lahf
jmp
ret
ficompl
push
sub
jmp
push
adc
js
inc
out
idivb
aaa
sbb
in
push
sub
in
stc
iret
into
cmp
je
jmp
xchg
mov
mov
push
flds
inc
cmpl
jg
jle
xchg
inc
cmp
add
pushl
arpl
dec
lods
mov
out
add
cs
xor
xchg
shll
out
mov
fsubl
jl
arpl
stc
mov
pop
mov
jg
sbb
push
xchg
dec
aad
into
out
call
imull
dec
test
popaw
lea
arpl
xor
ja
or
inc
ljmp
fwait
aaa
fidivrl
sbb
adc
sbb
cmp
xchg
dec
enter
cmp
mov
in
lods
insb
pop
movsb
out
pop
inc
mov
mov
ss
enter
mov
add
push
push
sub
pop
jb
mov
dec
push
test
les
popf
or
sbb
orb
or
mov
cmpsb
in
cmp
lock
loope
pop
mov
andl
mov
int3
adc
insb
stc
fld
cmp
inc
sbb
or
pop
xchg
pop
lds
push
inc
mov
test
inc
xchg
push
cs
incl
xchg
or
mov
leave
xlat
jl
jmp
dec
adc
jns
rclb
inc
hlt
add
jg
jle
jae
mov
mov
addr16
dec
int
lods
inc
dec
popf
call
jecxz
xorb
outsb
lret
ret
cmc
push
jg
mov
jl
outsb
mov
lret
adc
lea
jle
rorb
jns
and
add
hlt
sub
push
pop
es
xchg
push
jns
mov
mov
inc
filds
bnd
xchg
xchg
adc
in
mov
xchg
or
cli
dec
lahf
ret
jp
jne
mov
test
xchg
sti
mov
fisttpll
daa
add
loop
mov
add
sub
stc
push
clc
pusha
mov
int
iret
insl
outsl
add
movsb
jo
adc
repz
jmp
xlat
call
push
fcomp
push
ficoml
mov
jo
dec
ss
sbb
push
lds
daa
jp
sub
popf
adcb
and
dec
imul
dec
inc
shlb
popl
xor
insb
pop
cltd
fwait
mov
les
xorl
adc
ljmp
fdivp
cmp
pop
orb
out
mov
lock
adc
stos
addr16
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
cmpsb
movb
jle
push
addr16
lcall
loope
push
imul
sbb
rclb
jne
mov
std
push
cmpsb
in
xchg
dec
pop
sub
ja
cmp
orb
mov
lret
aaa
addr16
xor
pop
xlat
pop
fisttps
and
adc
xor
xchg
ret
adc
cmp
add
inc
dec
mov
jle
jae
pop
outsl
scas
mov
dec
sbb
scas
sbb
mov
mov
fnstsw
js
add
dec
jmp
outsl
jg
jge
sti
xchg
cmp
xchg
je
cmp
pop
adc
xlat
sbb
and
cld
clc
jge
lahf
rorb
sub
mov
sbb
pop
cmpsl
jp
adcb
mov
or
sub
mov
out
fmulp
sub
mov
inc
sbb
cmp
jae
inc
lret
mov
inc
mov
cld
mov
push
pop
cli
icebp
cltd
inc
test
inc
mov
xchg
mov
pop
idivl
fldl2t
aad
add
dec
mov
sbb
flds
in
popa
loope
dec
jo
mov
mov
sti
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shl
xchg
pop
pop
xchg
jle
xchg
inc
icebp
sbb
ljmp
lcall
and
lahf
ret
notb
add
shr
jo
frstor
mov
bound
imul
cmp
mov
dec
mov
push
bound
and
ja
and
inc
lahf
mov
jns
call
int3
out
inc
cmp
pop
xchg
push
push
pop
pop
pop
push
lret
scas
dec
push
xor
sub
dec
cmp
inc
mov
in
lock
sub
ja
lods
stc
shlb
xchg
cmp
loope
push
mov
push
inc
jo
imul
imul
rorb
add
and
xor
out
pop
lods
out
jnp
add
add
ja
test
xor
test
test
mov
pop
dec
aad
sub
outsl
lcall
stos
adc
sbb
mov
aaa
vorps
lea
frstor
std
shrd
jmp
psubusb
pop
lds
xor
cmp
fucom
jecxz
mov
mov
and
mov
aad
jno
out
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
