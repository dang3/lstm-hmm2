push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
and
adc
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
jl
jo
pop
pop
sub
stos
popf
loopne
pop
les
cmp
out
sub
xchg
into
and
stc
jo
test
stc
mov
push
cli
inc
pop
or
ror
sub
clc
lds
xor
cld
cmpsb
in
cmp
pop
or
imul
mov
jno
and
sbb
in
js
jle
push
clc
mov
cmc
push
push
movntq
outsl
mov
mov
and
mov
lds
sub
insl
fmuls
add
sahf
repnz
xchg
and
and
jae
dec
push
xchg
mov
xor
xor
cmp
aas
popa
jns
jb
subb
stos
jmp
xchg
pushf
in
dec
xchg
push
fwait
push
aam
jmp
test
sub
push
popf
mov
ljmp
hlt
lds
mov
movsl
das
xor
es
mov
stos
test
xchg
jle
jp
xchg
push
mov
outsb
mov
mov
fldcw
jmp
out
sub
adc
in
push
dec
pop
popf
xchg
xor
push
xchg
pop
jmp
rcr
pop
dec
loope
stos
leave
sub
mov
cld
scas
jmp
push
xchg
std
xor
mov
adcb
lock
xor
add
jecxz
pop
lcall
pop
mov
jns
xchg
xchg
movsb
test
mov
sbb
cwtl
loope
add
lock
popf
mov
push
pusha
ljmp
aaa
lods
out
ret
rcr
ficomps
mov
icebp
jo
xchg
add
out
jns
cmp
test
jne
das
and
mov
xor
pop
je
mov
shll
mov
gs
stos
leave
mov
adc
sub
les
arpl
lret
imul
mov
loop
pushl
jle
std
push
sbb
push
xchg
push
cs
pop
sub
jg
jmp
enter
mov
loope
shlb
dec
and
dec
fsubrl
jno
arpl
add
add
rorl
cmp
out
and
pop
cmp
enter
imul
xchg
cmp
lock
and
jg
dec
inc
jo
adc
and
inc
jns
pop
mov
cmpsb
aam
insb
stos
dec
js
jmp
out
fldt
jge
sub
xchg
jns
stos
fldenv
fdivrl
xchg
jo
fwait
xchg
aad
test
xchg
ret
adc
dec
cmpsb
lcall
xor
add
lcall
add
push
xor
add
push
lret
xchg
movsb
mov
xchg
inc
sahf
push
cwtl
sub
add
inc
mov
dec
inc
lods
jb
sub
add
bound
add
or
adc
mov
gs
push
mov
xchg
lods
in
pop
jmp
add
jae
pop
stos
cmp
lcall
dec
and
test
insl
inc
pusha
rcrb
and
sbb
insl
clc
push
mov
add
ss
scas
mov
imul
subl
jecxz
pop
pop
or
mov
dec
push
ret
push
ja
push
adc
xor
out
push
aas
push
stos
in
inc
adc
into
stos
mov
sub
pop
push
fst
fs
and
or
sbb
cmp
fistpl
push
xor
cmp
and
fwait
mov
sbb
adc
sbb
inc
fadd
inc
loopne
xchg
push
mov
add
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
dec
test
cli
adc
daa
cli
adc
cmp
pop
test
ja
pop
push
or
vrsqrtps
inc
loope
sbb
ja
mov
popl
mov
mov
add
cmpsb
inc
mov
pushw
mov
jecxz
adcl
or
outsb
imulb
push
sbb
in
sub
push
addr16
pushf
out
xchg
and
es
mov
mull
mov
jecxz
pop
push
lahf
subb
gs
cmpsl
pop
fdivl
push
cmp
push
aaa
fidivl
not
ret
push
push
sahf
enter
mov
fstpt
lods
int
inc
inc
in
mov
aas
push
mov
sub
jp
scas
jle
vorps
scas
sarb
movsl
sbb
icebp
xchg
adc
jmp
pop
fiadds
inc
jp
dec
push
adc
lahf
into
mov
and
aaa
imul
popf
xchg
mov
fdivrp
insb
xchg
and
fcomps
pop
outsl
aad
mov
fdivs
iret
gs
pusha
sbb
xlat
sub
in
pop
frstor
mov
lea
js
pop
adc
insl
mov
push
cmc
lret
pop
lahf
pusha
jno
jae
rcrl
imulb
push
iret
xchg
xchg
jg
mov
test
imul
xchg
std
push
or
and
jp
add
xor
ja
mov
shlb
sub
inc
and
rep
xor
mov
aad
jge
mov
cmpsb
dec
sti
jp
cli
inc
out
shlb
aam
ss
movsb
cmpsl
jae
add
fistl
lret
inc
jno
adc
fs
rcr
adc
shl
cmp
nopl
mov
mov
out
ljmp
fidivl
or
inc
xor
adc
lds
inc
mov
adc
gs
sbb
ljmp
and
outsb
push
movsl
mov
movsl
push
jp
push
add
fisubrs
and
ja
push
mov
and
ret
xor
mov
cmpb
xchg
jno
sbb
jg
ret
and
iret
ret
pop
iret
inc
insl
in
cltd
and
sbb
cltd
les
cs
pop
cmpb
daa
push
ljmp
xchg
rcrl
mov
in
dec
insb
cmc
gs
cmp
iret
cs
cmp
jne
jno
lret
jbe
adc
xchg
addl
dec
sbb
lods
dec
mov
ret
xlat
pop
out
repz
arpl
push
mov
xlat
sbb
daa
lock
cmp
xor
lcall
or
shlb
test
shll
in
xor
pop
pop
jno
jl
xlat
adc
mov
xor
sbb
fs
jge
clc
jmp
mov
aaa
imulb
addps
add
lahf
outsl
xor
cmp
mov
adc
jns
mov
popa
push
xchg
sub
xchg
jge
mov
add
inc
addb
hlt
loop
aad
or
scas
jae
xlat
out
sbb
pop
outsl
out
cmp
mov
loope,pt
mov
xchg
std
push
hlt
ret
fisttpll
sar
dec
add
pop
mov
fcoms
or
cmp
insb
lcall
dec
ja
xor
daa
lock
mov
idivl
loope
hlt
sti
test
popf
sahf
adc
add
cs
push
out
leave
fcomps
ret
and
jmp
push
out
and
loop
adc
loopne
je
mov
mov
and
enter
aas
pop
adc
pusha
std
jbe
scas
lods
ljmp
push
es
pop
enter
adc
in
pop
xor
fst
and
xchg
stos
mov
mov
pop
xchg
daa
loopne
xchg
popf
aaa
sbb
clc
mov
shl
push
sub
push
sbb
sub
and
nop
leave
lock
aam
or
adc
mov
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
lds
daa
cli
adc
mov
gs
jb
lret
loope
pop
sahf
cmpsl
push
inc
decl
lret
loopne
ljmp
inc
iret
xor
sub
xor
xorb
mov
lea
push
push
jle
jnp
sub
jmp
in
jge
aam
jbe
or
sub
into
dec
dec
insb
test
enter
push
fildl
adc
and
cs
aam
imul
adc
and
mov
or
outsb
mov
xor
adc
shlb
subb
fsubs
inc
int3
mov
jmp
ja
mov
hlt
cmpsb
mov
cmp
lods
ss
xor
mov
loop
scas
or
jns
and
fists
lea
loope
ja
pop
xchg
shll
lcall
mov
mov
sahf
out
sbb
out
and
push
xchg
adc
mov
push
xchg
stc
in
and
xchg
lods
pop
mov
arpl
shll
pop
cmp
leave
add
dec
sbb
or
out
cmp
test
sahf
xor
pop
imul
das
stos
pop
gs
sub
rcrl
sub
outsb
jnp
rcrl
fisubl
into
cmpsb
jns
sub
aas
mov
inc
and
adc
mov
inc
push
push
hlt
repnz
cmp
jbe
lcall
xchg
mov
mov
out
lcall
xlat
stos
or
stos
mov
sbb
daa
ret
inc
incl
xor
lock
pop
add
lcall
pop
mov
cmpsl
xor
fdivrs
sbb
cmp
add
adc
cmp
gs
enter
and
arpl
push
out
daa
or
scas
pop
testb
dec
add
jne
lds
cmp
gs
mov
lds
add
lds
fnstcw
lret
dec
pop
xor
stos
sbb
fyl2x
adc
and
test
out
jecxz
sbb
pop
pop
cmpsl
cmc
mov
cmc
or
fsubp
dec
iret
movsl
adc
cmpb
repnz
cli
js
loop
fwait
push
mov
repnz
or
fwait
mov
lcall
add
push
mul
inc
dec
dec
sub
adc
in
in
outsb
in
outsb
inc
mov
cli
lds
cmc
sbb
sub
xchg
dec
xor
jns
adc
jnp
insl
arpl
pusha
shrb
adc
xor
dec
push
xchg
mov
rol
je
mov
lock
addr16
inc
xchg
jb
inc
xchg
fimull
xor
sar
or
leave
aas
test
jo
shrl
rcr
andb
mov
inc
pop
rcll
mov
sub
xor
loop
lods
mov
push
sub
mov
and
popa
xor
lret
push
pop
call
ljmp
push
inc
or
arpl
js
dec
in
mov
mov
jge
fstp
rorl
or
push
and
mov
jo
out
jno
and
arpl
xor
sbb
mov
loop
jo
and
and
loop
jg
pop
imul
or
inc
cs
cld
inc
cmp
or
adc
notl
imul
xchg
adc
xchg
and
adc
outsb
inc
cld
mov
mov
andb
movl
insl
call
adc
test
mov
mov
push
imul
pop
or
cmp
cwtl
jne
mov
xchg
aas
xchg
adc
stc
push
les
inc
in
call
mov
js
pop
lods
inc
sahf
ret
xchg
mov
jmp
jno
mov
mov
lock
cmpl
pop
push
pushf
stos
fcmovnbe
insb
data16
adc
or
or
data16
pop
jmp
cs
pop
ret
and
std
rorl
repz
add
test
and
shlb
adc
daa
cli
adc
pop
dec
insb
cmp
sbb
pusha
xchg
jge
jae
push
mov
sbb
ret
dec
pop
fwait
lret
lahf
pop
nop
les
jns
push
cmc
ficoml
inc
aas
and
call
or
lods
clc
pop
aaa
aas
test
shll
cs
mov
cmc
popa
subb
lret
aad
int
sub
adc
ret
xchg
insb
push
call
arpl
inc
leave
xor
xchg
sub
addr16
jp
and
sbb
mov
mov
or
ja
pop
in
popf
push
push
lods
pop
insb
mov
pushf
aas
sahf
movsb
inc
lea
or
and
fdiv
repnz
cmp
xor
sub
add
mov
jae
inc
ds
pusha
pusha
sbb
mov
mov
adc
movsb
lret
lods
xchg
xor
ss
mov
fistps
lea
int3
push
cmpsl
insl
mov
popf
cmp
pop
jmp
pop
xlat
cmpsl
and
incb
push
add
in
inc
cwtl
out
xorb
push
test
sub
adc
inc
int
mov
inc
fldcw
inc
push
sarb
xchg
push
and
bound
cwtl
sti
or
jmp
ss
call
and
cld
dec
adc
sub
jle
mov
pop
jmp
in
pop
pop
dec
mov
mov
popa
sbb
push
lcall
lret
inc
sbb
aaa
and
xchg
lahf
push
cmp
cmp
fwait
js
add
jo
add
push
ret
repnz
push
out
pop
mov
mov
mov
and
mov
xlat
loopne
pop
dec
pusha
or
add
mov
rol
stos
aas
addr16
daa
mov
shlb
stc
mov
inc
xlat
pushf
jnp
inc
jl,pt
jl
pop
adc
ret
aad
mov
xchg
shlb
rcrb
jge
pop
lock
pop
arpl
stos
adc
es
cmpsb
mov
cmpl
xchg
cmpsl
test
in
ja
ret
pop
mov
xorl
push
mov
sbb
xchg
fimuls
or
les
stc
shll
imul
jne
sbb
xchg
cmpb
mov
mov
or
cmpsb
leave
xor
dec
push
push
stos
mov
popa
dec
sub
data16
dec
cmpsl
mov
sub
clc
cmpsl
or
xor
iret
xor
imul
rcrl
arpl
out
scas
xor
sbb
lcall
es
loope
jg
orl
fsubl
mov
xchg
mov
dec
cmp
cld
sub
out
aam
dec
add
sbb
out
cli
sbb
clc
lds
mov
cmp
or
mov
fs
dec
aam
push
add
push
pop
mov
jl
scas
cmp
test
ficomps
mov
jg
add
mov
mov
sti
fs
sbb
sub
lahf
fwait
test
cmpsl
pop
movsb
mov
sbb
movl
subl
pop
insb
aaa
gs
sub
jbe
pop
lret
arpl
loop
add
test
xchg
loope
mov
pop
push
stos
mov
inc
out
mov
repz
lret
sbb
adc
adc
iret
iret
cmp
mov
filds
mov
cltd
mov
cmp
out
call
mov
fcoml
or
mov
xor
xchg
test
add
cli
dec
repnz
cmp
mov
mov
scas
mov
out
sbb
andb
xor
inc
push
or
jle
stos
dec
xor
mov
mov
das
xchg
aas
fcoml
test
pushf
xor
cmc
xchg
je
adc
ja
jecxz
loop
sbb
outsb
gs
pop
xor
das
push
mov
aaa
scas
pop
daa
pop
pop
loopne
push
addl
push
orl
call
cmpl
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
js
dec
test
fsts
adc
cli
adc
dec
ds
test
mov
mov
pop
in
pusha
mov
mov
add
xchg
imul
call
popf
sub
lods
nop
cmpsb
out
jno
inc
in
int
jbe
and
ficoms
loope
inc
ret
clc
js
test
or
das
mov
popf
inc
lea
daa
in
fstl
pushf
jg
sub
cmp
sub
xchg
scas
insb
nop
dec
jle
ljmp
mov
xor
js
lahf
jp
mov
pop
jecxz
int
cmp
mov
mov
and
push
push
mov
out
icebp
dec
js
fcmovbe
ljmp
in
adc
gs
imul
ret
ret
test
add
add
clc
jno
aam
pop
jns
mov
pop
lods
repz
dec
loopne
mov
in
mov
inc
cmp
gs
stc
and
cs
ret
daa
xchg
sbb
mov
mov
pop
jmp
jae
int
jno
pop
xchg
pop
loop
jnp
fninit
mov
nop
aam
mov
and
pop
sub
and
fists
imul
cmpsl
enter
adcb
push
adc
lcall
sbb
adc
sbb
js
jp
nop
jne
icebp
movsl
outsl
fsub
inc
pop
addr16
add
shrl
push
mov
lcall
mov
pop
cmp
rcrb
jl
and
int
sbb
js
add
out
add
sbb
cltd
pop
jle
xchg
jns
test
sub
push
in
leave
mov
mov
push
repz
xor
jmp
fidivrl
fsubr
lock
fisttpll
cld
push
sbbl
dec
add
add
or
enter
es
mov
stos
cld
fwait
mov
dec
push
mov
mov
add
jle
jmp
xchg
loopne
das
and
lret
add
icebp
ret
gs
push
push
sbb
push
adc
faddp
pop
sbb
sahf
scas
mov
fwait
push
push
popf
xor
push
cmpsl
mov
fsts
or
ljmp
pop
mov
xchg
loop
jae
pop
pushf
push
push
jmp
ss
add
adc
jns
data16
sbb
lods
call
sub
push
and
push
loop
fidivl
bound
dec
xchg
popa
xchg
mov
out
and
lock
and
scas
adcb
rep
popf
add
push
mov
loop
stos
dec
jp
cmpsb
movsl
cmp
stc
jmp
rclb
pushf
sbbb
or
into
mov
mov
dec
outsb
xchg
adc
in
adc
imul
js
frstor
test
xor
imul
sbb
int3
mov
mov
adc
popa
pop
jmp
mov
mov
in
fucomip
sbb
cmc
inc
clc
xchg
mov
js
outsb
test
popf
test
push
add
inc
or
lcall
cld
pusha
mov
cmp
stos
mov
lcall
in
xchg
rclb
mov
dec
jbe
int3
insl
decb
add
jge
xor
or
inc
add
icebp
loope
into
pop
add
popa
jl
repz
jp
ret
popa
adc
cmp
lods
arpl
sub
bound
les
nop
jle
lcall
pop
jo
push
mov
inc
xchg
dec
sub
mov
add
sti
and
fwait
pop
xchg
push
fcompp
add
je
push
stos
sbb
cmp
jmp
out
shl
mov
adc
into
xchg
jae
mov
sub
cs
lock
outsl
roll
ja
hlt
lock
cmpsb
xchg
cmp
xchg
pop
sbb
fcmovnb
jmp
xchg
cs
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
out
mov
daa
cli
adc
ljmp
rolb
nop
mov
insb
prefetch
mov
xchg
ja
pop
out
dec
jg
xlat
xor
dec
xchg
or
test
mov
cli
out
roll
mov
cmp
add
cmp
std
call
es
xchg
jge
push
pusha
in
out
les
in
imul
dec
mov
sub
adc
mov
mov
mov
inc
mov
stc
dec
sub
xor
cmp
popf
cwtl
lret
pop
stc
mov
cmp
arpl
or
or
sbb
mov
sbb
dec
jne
xchg
scas
cmp
pop
push
sbb
test
jg
mov
adc
jecxz
pop
cmpsl
addb
xlat
mov
jp
outsl
dec
orl
xor
push
fdivl
inc
lcall
inc
ret
xor
or
lods
ret
xchg
ss
aaa
insb
mov
mov
mov
pop
gs
pop
cwtl
cwtl
jl
int
insb
scas
rcrb
push
jbe
cmp
and
mov
fsubrs
daa
sub
and
push
sbb
dec
dec
dec
movsb
cmp
out
loop
imul
xchg
fdiv
clc
scas
mov
das
icebp
pop
add
fisttpl
sbb
mov
shlb
je
pop
sahf
inc
clc
out
xchg
dec
scas
push
subl
out
nop
mov
inc
mov
mov
loopne
test
or
jp
test
add
cmp
in
mov
jae
stos
js
push
sbbb
stos
sbb
pusha
jle
mov
ss
in
std
push
xor
std
stc
jmp
ret
mov
test
sub
cmp
test
roll
jne
jnp
lcall
mov
xchg
ds
push
js
fs
pop
fistps
add
mov
mov
sarb
mov
push
xchg
incb
jmp
xorl
jg
dec
mov
mov
test
mov
dec
ds
sbb
aam
adc
insb
pop
dec
insl
fwait
mov
pop
mov
int3
jecxz
xor
test
imul
aad
push
inc
add
mov
leave
sub
jg
mov
and
xlat
jbe
out
jo
call
notl
daa
cmc
adc
and
jbe
mov
and
leave
and
mov
mov
roll
rcrl
or
lahf
shll
es
xchg
std
push
scas
sbb
cmp
enter
shll
lds
fs
jae
dec
mov
sub
cmpb
push
cmp
sub
andb
xchg
fmuls
mov
jne
ret
or
pop
movsl
addr16
pop
jge
sbb
pop
inc
push
out
rclb
mov
je
jg
sub
pop
callw
fisttpl
cwtl
push
fnstsw
cmp
mov
rclb
pop
icebp
xchg
xor
cmc
outsl
adc
dec
in
push
pop
ja
nop
imul
push
mov
hlt
out
adc
adc
pop
dec
mov
push
mov
mov
or
xchg
fadds
cmp
movntps
test
fdivrl
push
cmp
lahf
movsl
mov
loope
mov
cmp
js
daa
movsb
dec
mov
pop
mov
ss
sub
scas
mov
in
popa
ds
dec
xchg
insb
mov
xor
aad
inc
lcall
mov
ljmp
sbb
jno
cmpsb
mov
cmpsl
out
std
iret
repz
push
pushf
movsb
test
lds
push
push
jb
ja
stc
xor
incl
cltd
mulb
or
adc
and
xchg
mov
enter
sbb
jb
sbbl
sub
out
iret
outsb
addb
push
cld
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
or
adc
daa
cli
adc
lods
lcall
dec
lds
pushf
js
lret
sbb
sarb
mov
es
stos
pop
sbb
cmp
cmp
repnz
mov
cmp
mov
outsl
push
in
loopne
stc
mov
test
jle
mov
or
js
xor
fidivs
lea
fbld
ja
push
testl
mov
xor
pop
loop
ss
decb
stos
xorl
xchg
int
movsb
sbb
adc
and
inc
cli
xor
sub
sub
stos
jmp
cs
add
out
or
sub
imulb
jmp
ja
mov
ret
sub
stc
adc
out
aaa
in
cmpsl
das
lret
imul
add
and
pop
lods
push
cmp
jg
push
or
gs
mov
lock
hlt
test
dec
mov
shlb
nop
lock
icebp
sbb
xchg
push
jg
add
cmpl
mov
loope
divl
mov
sub
fisubrl
cmpsl
dec
sahf
lret
dec
mov
shl
insb
mov
lret
sub
or
inc
stos
and
xchg
lods
pop
adc
aam
dec
rclb
pcmpeqd
jecxz
lds
push
jne
xor
andb
cld
xchg
decl
loopne
sbb
push
jp
xchg
push
push
fldt
mov
rcr
pop
adc
dec
ljmp
nop
testb
movsb
mov
and
addr16
fbstp
and
sbb
push
clc
pushf
stc
dec
add
daa
fdivs
iret
pushl
rcr
push
mov
ja
adc
cmc
pop
sub
test
mov
mov
not
test
stos
aas
or
sub
and
cmc
add
test
bound
cli
mov
push
cmpsb
cwtl
sahf
jb
lods
add
in
imul
sub
test
jno
std
in
sub
mov
fcoml
lret
popf
es
rorb
cmp
mov
mov
aam
sahf
loop
int
or
inc
and
test
and
mov
movsb
xchg
pop
pop
jae
add
bound
testb
pop
fsts
dec
repz
xor
shlb
cs
lea
sarl
dec
adc
and
daa
sbbl
decl
dec
pop
adc
mov
and
outsl
out
lods
push
loop
aas
jo
cmpsl
push
stc
jmp
into
jge
dec
mov
dec
pop
pop
aam
rorb
push
mov
or
adc
sbb
pop
cltd
pop
in
scas
lret
sub
cmpsb
bound
inc
add
je
test
leave
xor
nop
cs
test
add
cmp
fdivrs
out
mov
enter
and
push
xchg
cltd
add
mov
and
in
mov
cmp
cld
arpl
push
add
cmp
and
dec
repz
movsb
popf
pop
sub
sahf
andl
scas
push
sbb
push
cmp
shlb
add
lock
cmp
lahf
add
sbb
fidivrl
mov
mov
lret
lea
outsl
adc
mov
sbb
jae
mov
pop
push
mov
inc
mov
jl
loope
and
cmp
scas
je
leave
ds
xchg
int
inc
fwait
stos
outsb
cwtl
into
cmp
movsb
add
lock
jge
loopne
lcall
ljmp
cmp
dec
std
js
rorl
clc
iret
xor
push
push
jno
fiadds
xor
orb
push
mov
out
ja
loopne
pop
add
pop
cmp
and
xor
push
mov
fsubp
xor
lahf
shrb
shrl
movsb
xchg
lret
mov
or
aad
test
xor
ret
xor
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
jecxz
jnp
test
mov
scas
dec
sbb
addr16
pusha
fwait
or
or
ret
or
ss
data16
dec
cmpsb
movsl
out
les
mov
aas
addr16
mov
mov
add
test
inc
push
sbb
in
insl
and
call
je
out
stos
mov
popf
sub
mov
xlat
inc
push
adc
fstps
loopne
inc
push
dec
adc
or
int
push
popl
dec
mov
jb
hlt
jg
add
insb
aad
rcrb
add
jge
sbb
or
xchg
iret
inc
sub
lahf
dec
pop
inc
out
in
aad
out
adc
mov
ret
push
pushf
dec
pop
pusha
push
ret
inc
or
sbb
mov
push
loope
add
fildll
jne
or
sbb
and
fisttps
das
pop
push
ds
rolb
lea
pushf
and
out
xchg
setnp
addr16
add
gs
aam
mov
out
sub
lret
fisubs
dec
jns
mov
add
mov
test
push
negl
cmpb
xchg
cwtl
dec
shlb
dec
dec
pushf
push
ds
insb
aaa
xchg
cmp
dec
lret
sbb
inc
add
inc
sub
jecxz
or
movsb
call
loopne
fisubrl
xchg
loopne
jne
sbb
popf
adc
ret
cwtl
push
test
pop
xchg
cltd
and
push
sbb
cld
sub
pop
add
ret
jmp
call
inc
inc
ljmp
ffreep
sbb
push
test
cmp
adc
clc
data16
scas
cmpsl
lock
or
mov
js
or
mov
pop
lds
ja
sbb
inc
add
jne
dec
mov
fldt
aam
js
aaa
xor
imul
outsb
push
lock
xlat
push
divl
test
iret
push
or
test
fdiv
scas
ja
shll
pop
xchg
lret
xor
add
ljmp
add
cld
mov
pop
push
jo
jne
mov
inc
sahf
xchg
lahf
push
mov
or
adc
shlb
scas
xchg
movb
rolb
jge
aas
call
sub
lds
and
jb
imul
mov
mov
sub
je
push
jae
outsl
sub
jo
lret
dec
jmp
movl
aas
inc
mov
icebp
std
pushl
mov
dec
jl
sbb
into
inc
sub
add
pextrw
push
cmpsl
pop
or
adc
hlt
and
xchg
iret
outsl
push
lahf
pop
mov
mov
es
fstl
xchg
mov
pusha
neg
outsb
xor
ss
xor
push
mov
xlat
push
fsubl
jno
cli
cld
clc
shlb
add
icebp
int3
dec
sbb
je
daa
jb
xchg
push
fmuls
inc
lret
sub
testb
sub
adcb
and
ret
data16
dec
fadds
lcall
add
cmp
mov
fistps
xchg
loope
ja
pop
call
or
inc
cli
push
or
and
pop
sbb
jno
jp
dec
lods
sbb
jge
dec
push
shl
jae
mulb
lods
pop
mov
aaa
fs
test
out
mov
push
scas
mov
rcr
fs
repz
cmp
cmp
push
or
sti
xor
loop
pushl
pop
lods
arpl
xchg
and
sub
sbb
sub
sarl
popf
repnz
sar
dec
add
and
pop
push
call
imul
hlt
in
and
add
insl
and
test
adc
into
xor
mov
mov
js
nop
test
test
movb
sbb
cli
mov
sbb
jae
xor
xor
in
mov
mov
jp
movsl
icebp
xchg
add
clc
xor
add
scas
cmp
mov
add
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
btc
adc
aaa
cli
adc
xor
mov
or
lahf
push
cli
and
mov
mov
mov
rcr
mov
imul
stc
xlat
ficomps
shrb
mov
scas
xchg
rclb
adc
scas
jnp
pop
mov
adc
ljmp
pushf
jno
into
inc
or
push
clc
xor
mov
daa
jns
iret
pusha
jle
xchg
loopne
lods
adc
or
dec
mov
in
insb
adc
out
fldl
adcb
and
fyl2x
xchg
test
sub
bound
add
mov
push
nop
pop
mov
xor
das
lret
test
mov
cmpsl
xchg
mov
sbb
dec
pop
push
nop
cld
js
icebp
lods
sar
lods
mov
lret
dec
and
adc
nop
and
es
inc
cli
aaa
dec
fmull
jmp
dec
cmp
sub
faddl
mov
or
sub
push
into
addl
adc
fsubs
hlt
dec
inc
mov
or
pop
push
pushf
popf
es
xor
aad
xchg
out
push
push
mov
jns
cwtl
out
xchg
push
cmp
mov
imul
cs
int
insl
jo
inc
jb
pushf
xchg
hlt
sbb
or
dec
adc
imul
enter
leave
mov
mov
jbe
jmp
shr
mov
or
sub
or
or
push
jb
call
test
pop
adc
or
faddp
mov
sub
outsl
mov
cwtl
push
sbb
je
ja
out
pop
test
sub
xchg
or
test
cmp
movsb
sbb
jge
loope
add
fsubrl
dec
adc
bound
cli
test
jae
cmp
fwait
shlb
pop
xchg
mov
leave
in
lahf
xchg
mov
cmc
out
scas
dec
sbb
int
test
mov
jne
sub
out
sarl
jne
adc
and
sub
pop
mov
xchg
int3
insl
icebp
rcll
cwtl
and
cwtl
push
divl
imul
bound
push
hlt
push
pop
scas
dec
inc
and
pusha
incl
scas
mov
imul
or
adc
scas
sbb
mov
push
out
or
push
inc
outsl
pop
add
jo
cmp
push
push
push
adc
pop
and
lahf
ljmp
outsb
xor
aas
cltd
pop
mov
adc
je
adc
fbstp
jmp
pop
dec
jecxz
push
push
pushf
push
int
sub
sbb
jle
add
repnz
or
and
and
dec
mov
test
lahf
int
adc
icebp
pushf
test
xchg
mov
dec
sub
fdivr
mov
jo
sub
in
add
xorl
cmpsb
out
pop
push
mov
pop
cmpsl
add
ja
inc
mov
fcompl
sub
bound
fidivl
mov
addr16
jnp
xchg
push
mov
imul
sbb
mov
orl
xchg
xchg
xchg
fisttpl
xor
loopne
clc
fnsave
scas
xchg
push
jbe
mov
das
clc
loope
cmp
sub
cld
aas
inc
shl
inc
out
or
in
jae
stos
out
ss
filds
or
icebp
fs
mov
mov
xor
xchg
leave
pusha
cmp
lcall
popf
and
xor
add
fs
or
je
or
push
or
test
gs
les
fs
mov
push
sbb
xor
dec
movsb
adc
scas
inc
cmpl
xor
xchg
push
mov
js
out
cmp
push
out
mov
fsub
dec
nop
scas
and
xor
dec
pop
sahf
dec
mov
shll
add
subb
ret
cmp
adc
insb
je
lahf
sbb
mov
ja
mov
mov
fldl
dec
adcb
or
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
insb
fcomip
bound
pop
mov
xor
rcr
or
dec
sti
jle
adc
popf
push
sub
add
xchg
adc
add
jns
sbb
addr16
call
repnz
push
daa
out
ljmp
mov
out
xor
adc
aaa
call
add
stos
cwtl
jnp
popa
repnz
ds
and
cmp
test
stos
adc
pop
pop
rcll
stos
adc
outsb
popf
pop
loope
cmpl
push
movsb
js
sahf
xor
xor
mov
push
inc
mov
jbe
lret
loop
stos
aaa
adcb
int3
jge
push
mov
lods
cmp
mov
xor
cmp
fmul
pop
xor
adc
lret
xor
pop
fidivrs
jg
je
pop
push
aaa
ret
xchg
mov
jmp
sbb
shl
pop
add
sbb
mov
es
jbe
push
dec
mov
lods
jb
jge
cmpsb
filds
xor
xor
scas
xchg
push
cs
fnsave
mov
and
cmp
cmp
pusha
mov
cmp
xor
dec
mov
cmp
out
fldcw
xor
shrb
ds
shll
repnz
loope
jne
cmp
imul
push
pushf
and
cmp
xor
loop
mov
add
push
adc
cmp
lea
sub
inc
jbe
adc
push
sbb
xlat
mov
adc
inc
loope
cmp
xchg
hlt
cmpsb
pushf
inc
dec
bound
push
fcompp
push
push
sarl
ljmp
cmp
rol
test
mov
cld
dec
cltd
mov
ja
push
arpl
repz
dec
sub
popl
add
arpl
xor
scas
xchg
push
enter
pop
adc
cwtl
xlat
aas
in
test
or
mov
mov
loopne
push
icebp
sti
repz
test
inc
sahf
jae
incb
pop
loop
dec
pop
dec
fdivrl
mov
jnp
fsubrs
fcomps
inc
jns
xor
jg
dec
mov
sahf
in
cmp
and
nop
dec
cmpsl
xchg
or
xor
jbe
in
and
loopne
loopne
and
mov
arpl
divb
fnstsw
xchg
and
arpl
pop
pop
mov
dec
outsl
inc
sahf
mov
icebp
pop
dec
inc
xor
aam
ret
xchg
aas
outsb
mov
xchg
sbb
adc
fldpi
pop
lea
mov
scas
test
lds
pop
lods
inc
fwait
or
add
movsl
shll
lods
push
cmpsl
jl
push
jae
ficoms
inc
fidivrs
adc
mov
push
out
sbb
out
call
mov
movsb
mov
lds
dec
movsb
or
fcompl
fs
ret
mov
in
mov
jo
mov
test
mov
adc
add
and
int
mov
aas
dec
mov
mov
jp
scas
pop
out
push
sbb
fisttpl
enter
xchg
aaa
cmp
jne
mov
cmp
adc
mov
cmp
push
jl
scas
mov
daa
cld
mov
adc
jns
sub
inc
cmpsb
or
mov
mov
pop
insl
loope
bt
cmp
daa
xchg
mov
addr16
mov
sub
cmp
jmp
mov
ljmp
jg
mov
and
bnd
rolb
mov
fisttps
les
ret
cld
pop
mov
xchg
adc
add
leave
and
fs
sahf
jmp
dec
pop
dec
jns
lds
jbe
les
arpl
aas
add
repz
ljmp
and
imul
movl
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
or
adc
cli
adc
test
jl
sbb
stos
mov
push
out
loopne
je
je
pop
lea
xor
pop
stos
jp,pt
mov
ret
in
es
es
not
jne
icebp
mov
vpsrld
mov
jp
push
push
and
cs
push
movsb
jle
aad
insb
inc
pop
dec
stos
jl
lea
inc
dec
fs
in
and
mov
aam
jp
scas
mov
add
mov
test
scas
insl
lcall
popa
sbb
hlt
mov
mov
push
push
xchg
cld
scas
mov
ret
mov
out
out
loopne
adc
dec
xchg
loop
push
inc
mov
ret
push
add
sbb
fmulp
ret
xor
movsl
mov
jns
mov
shrl
xchg
int3
inc
mov
add
xchg
nop
js
hlt
jae
push
in
outsl
test
mov
cmp
sbb
imul
pop
int
insb
add
sbb
dec
push
leave
ss
push
push
and
mov
mov
or
movsl
or
pop
mov
mov
or
dec
push
iret
sub
aam
loope
scas
aam
repz
dec
lea
push
jg
ss
lods
jns
mov
xchg
dec
sbb
adc
dec
jmp
mov
daa
mov
sub
loopne
sbb
mov
adc
jo
cmpsl
lods
lret
in
xor
imul
sbb
dec
out
setns
std
pop
repz
jbe
jns
pop
xorb
es
xchg
shll
dec
dec
mov
sub
pop
jno
stos
jnp
adc
cmpsl
ds
lods
pop
ficoml
ss
test
test
cmp
sbb
xor
and
push
cltd
inc
test
add
sbb
iret
hlt
xor
fnstsw
push
cmp
jl
sti
inc
cwtl
movl
jecxz
mov
mov
push
cmp
nop
adc
mov
stos
dec
xlat
cli
rolb
stc
pusha
out
enter
incb
or
sbb
cwtl
jp
pop
int
sub
and
adc
mov
cmpsl
out
and
xor
sbb
cltd
stc
loopne
and
popl
mov
push
lret
jae
ja
popf
js
adc
subl
xor
ja
mov
int3
xor
push
xor
jnp
std
int
lods
movaps
jne
rorl
fstp
inc
inc
dec
nopl
pop
lds
cmp
sub
adc
add
pop
popf
sub
in
pop
adc
test
jg
lock
scas
adc
aad
jle
add
icebp
test
into
aaa
sarl
popa
and
and
ds
test
in
adc
lahf
out
push
mov
dec
push
hlt
roll
aam
jg
je
lock
adc
inc
cli
push
sub
pop
dec
or
fwait
loop
dec
mov
ret
add
cmpsb
popa
pop
into
jmp
adc
fwait
sub
mov
lahf
push
fwait
insb
jl
icebp
pop
mov
or
lods
rcrb
jno
pop
les
sub
push
dec
jl
and
repz
daa
les
jae
push
les
mov
jle
jbe
cli
lods
cld
popf
mov
call
lahf
ds
scas
int3
inc
or
mov
inc
jle
xor
adc
mov
jo
cmp
sti
xor
sar
push
sub
xchg
cmp
push
and
aam
in
sbb
pop
jno
xchg
sbb
cmpsb
adc
int3
xor
popa
loopne
mov
push
push
mov
push
jecxz
je
mov
dec
xchg
pop
imulb
fs
les
sbb
push
jmp
loopne
cwtl
ret
xchg
in
or
insl
fsubrl
adc
cmp
fnstenv
lock
cmp
sub
inc
mov
mov
bound
fisttps
sub
mov
inc
add
and
add
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
je
pop
lds
mov
adc
cli
adc
add
mov
ret
test
insb
aas
jmp
out
mov
cmp
mov
inc
push
loopne
rclb
mov
daa
lock
push
sub
fnstenv
shlb
daa
pop
pop
lret
test
cwtl
and
cmp
mov
std
je
or
faddl
sbb
pusha
adc
repz
mov
int
popf
lret
loop
push
mov
adc
call
cld
loop
push
xor
inc
push
jmp
dec
sbb
inc
jle
pushl
cmpsl
push
jne
pusha
inc
rorb
orl
clc
sub
sbb
add
push
and
out
push
out
push
xchg
jb
mov
fndisi(8087
or
mov
sub
add
hlt
je
xchg
and
insl
pop
pop
cld
pop
adc
jns
xchg
xor
jmp
sub
xlat
hlt
add
xchg
pop
mov
mov
out
cmpsb
xor
jle
aad
xchg
xor
pop
xchg
je
cs
xchg
add
adc
add
pand
add
ja
mov
or
movsl
cmp
mov
or
jg
push
mov
repz
xor
jnp
sub
xchg
jne
cmp
mov
ja
sub
outsb
push
sbb
aaa
pop
outsb
enter
xchg
inc
and
lods
jge
sbb
cwtl
cmp
in
inc
ja
adc
cmp
mov
push
stc
cmp
sbbl
xchg
ja
ficoml
mov
lock
out
nop
frstor
enter
jecxz
push
es
mov
xor
ficoml
ja
cmp
scas
add
fcmovne
xchg
sub
sub
in
pop
adc
xor
jge
call
mov
push
adc
je
lds
mov
jo
fldenv
sbb
ljmp
fildll
fisubrs
icebp
imul
repz
cmp
ds
jecxz
pop
iret
mov
dec
add
push
mov
mov
rorb
adc
jbe
fldt
arpl
test
inc
mov
cltd
mov
and
and
mov
xchg
jno
mov
lods
inc
xor
mov
out
mov
sbb
jp
sahf
mov
mov
dec
outsb
cmc
rol
into
pusha
daa
push
lcall
sub
jl
sub
xchg
insl
sarl
push
out
push
pusha
xchg
pop
lcall
xor
or
or
ljmp
out
xor
mov
pop
xchg
pop
pop
push
jp
dec
inc
ss
es
lods
lret
inc
js
das
sti
sub
inc
xchg
lea
outsb
rorl
add
ss
jl
xchg
sub
fmuls
mov
adc
es
jbe
mov
sbb
push
xchg
and
dec
adc
mov
aas
and
dec
lahf
loope
cmp
ljmp
in
mov
push
xor
or
sub
cld
or
cmp
int3
bound
mov
arpl
sbb
add
jne
push
xchg
shl
and
nop
jbe
jge
and
movb
int
inc
adc
pop
sub
and
mov
add
call
int3
adc
icebp
adc
adc
push
and
movsl
das
push
xchg
pop
xchg
orl
jge
test
add
sub
sti
fldcw
inc
mov
push
enter
addr16
pop
scas
xchg
rcl
jl
pushf
scas
stos
fwait
jmp
mov
out
push
mov
jae
jle
enter
lea
pop
pushf
xchg
and
imul
lahf
in
pop
out
pop
jne
imul
aam
in
mov
add
scas
test
jbe
sub
cmp
xchg
mov
dec
jb
cmpsb
in
shr
mov
xor
add
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
mov
adc
cli
adc
mov
neg
cmp
cld
imul
xchg
enter
mov
mov
test
dec
push
or
ret
int
cwtl
scas
test
or
or
movq
and
ljmp
mov
jge
pop
aaa
cmc
mov
addr16
mov
xchg
lock
xchg
cmp
int3
jecxz
inc
fwait
push
sub
arpl
dec
xchg
ss
xchg
scas
mov
jecxz
divb
repnz
push
and
jne
inc
pushf
jge
push
shr
push
mov
hlt
hlt
xchg
mov
pop
ja
repnz
xor
adc
loope
xchg
lcall
lcall
mov
mov
dec
sbb
adc
mov
xorl
call
xchg
repz
pop
incb
xor
fxch
outsl
arpl
pop
push
mov
cmp
mov
call
mov
imul
dec
fldl
pop
mov
ret
sarb
mov
pop
mov
fistpll
mov
sbb
mov
inc
and
jp
sub
sub
int3
fcmovne
xchg
mov
repnz
or
jg
cmp
shl
sbb
mov
shlb
adc
push
xor
push
jmp
jns
xor
insb
xchg
cltd
mov
adc
jno
fidivl
addl
data16
fiaddl
je
in
out
adcl
adc
cmp
or
mov
mov
es
cltd
sub
out
and
add
and
lret
xchg
add
scas
mov
rcrl
add
adc
add
aam
orl
jp
incl
add
scas
xchg
test
aam
sti
mov
lods
adc
add
lock
fiadds
dec
nop
sub
imul
jns,pt
fcmovu
or
mov
mov
int3
bound
ret
and
inc
jae
xchg
cmc
fisttpll
pusha
mov
mov
add
in
outsb
push
mov
insb
aas
xchg
pushf
push
js
pop
jmp
or
sbbl
outsb
push
outsb
or
popf
lretw
mov
fwait
mov
mov
mov
cld
test
pop
push
sahf
add
jae
addr16
out
push
jno
sbb
nop
sub
lods
loop
js
ret
push
lret
push
sbb
movsl
sub
gs
and
adc
lock
clc
mov
jle
sbb
fisttpll
pop
inc
add
push
xor
add
test
enter
mov
mov
adc
mov
nop
sbb
leave
push
cmp
movsl
scas
add
test
jns
add
xchg
sub
cmp
ljmp
push
xchg
ljmp
in
adc
and
call
adc
fimull
iret
dec
xor
mov
sub
push
scas
mov
pop
inc
add
adc
push
fidivl
and
lods
pop
xchg
mov
testb
pop
lret
adc
ret
lahf
sub
fldt
pop
in
push
sub
pop
ret
xchg
std
pop
mov
int3
or
scas
lds
xchg
out
xchg
mov
aas
fisubrs
sub
fimuls
jge
sbb
das
xchg
test
fistpll
in
mov
add
loop
ljmp
xchg
lret
subb
cmp
je
std
dec
repz
sti
jmp
inc
je
add
ret
shrl
cmc
cmp
or
iret
sahf
pop
or
out
aaa
out
jae
adc
rcll
jp
test
dec
outsl
popf
cmpb
pop
in
popa
arpl
pop
cmpsl
xchg
int
add
dec
pop
imulb
pop
mov
das
fucom
push
xor
mov
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
jo
in
xchg
adc
or
jnp
dec
outsl
int3
fisttpll
pop
fwait
pop
jg
jno
enter
ljmp
inc
push
xor
dec
cmpsl
fmulp
lock
dec
cli
dec
push
push
jnp
and
out
sahf
mov
or
jge
clc
ljmp
or
repnz
ss
lea
pop
push
mov
mov
cmovno
pushf
repz
add
mov
jne
push
xchg
mov
enter
and
sbb
call
cmpl
jo
ljmp
sbb
xor
stc
in
dec
inc
sbb
lods
jecxz
mov
mov
add
andb
jmp
cmc
mov
test
mov
repz
or
outsl
inc
dec
mov
dec
je
and
enter
xchg
shlb
jns
cmp
dec
je
lds
pop
mov
call
xchg
dec
pushf
and
add
shrl
mov
int
and
inc
xchg
jbe
hlt
cmp
or
jb
testl
fsubl
pop
pop
pop
cmpb
stos
or
push
repz
jp
pop
push
in
andl
scas
inc
pop
mov
jmp
std
in
cld
aam
loope
jns
outsb
push
lret
cltd
sub
push
js
scas
rorl
dec
clc
jp
jae
fildll
outsl
xor
lahf
mov
and
dec
lret
add
pop
cmp
push
xor
popf
ljmp
outsb
lods
adc
sbb
sbb
popl
cmp
xchg
push
fnsave
mov
pop
fcomp
sahf
adc
clc
shlb
add
fstpt
aam
push
xlat
mov
xor
mov
add
or
fmuls
mov
mov
or
ficomps
jb
jbe
cli
sbb
xchg
xchg
lret
xor
jge
cmpb
clc
dec
lods
data16
loop
fxch
fcompl
aaa
xor
xlat
pop
dec
dec
xchg
mov
adc
aaa
in
imul
addr16
or
ds
insb
sub
cmp
adc
mov
jl
mov
es
xchg
add
ja
push
cmp
ds
sbb
cld
mov
ret
movsb
jo
fisubs
xchg
dec
inc
divl
movsb
jmp
pop
xchg
aas
cmp
shll
add
cmc
loope
clc
idivb
mov
xchg
out
push
jp
mov
clc
pop
or
fistps
pop
dec
xor
bound
ds
push
jp
xchg
xor
outsb
add
and
or
scas
jmp
jge
std
rorb
das
lea
dec
sbb
lods
pop
pushf
and
clc
xchg
out
adc
jg
fadds
sbb
mov
aaa
cmp
sbbl
xchg
mov
test
mov
sub
and
pop
insl
push
aam
cmp
add
jnp
and
fwait
adc
jns
cli
pop
pop
push
push
out
dec
pop
adc
adc
pop
sti
out
jp
jle
movsb
arpl
jmp
jg
mov
fstpl
lods
hlt
cmpsb
mov
push
aas
jmp
cli
pop
movsb
mov
loopne
mov
push
scas
adc
iret
mov
lea
iret
cmp
subl
add
and
lret
and
or
cmp
or
dec
lock
cli
popf
test
ss
lock
adc
arpl
add
loop
pusha
das
out
jbe
mov
jbe
aam
push
mov
std
pop
xor
sub
ret
and
xor
xor
aas
rorl
fldcw
add
mov
sbb
inc
movsb
pusha
imul
xor
das
cltd
in
mov
or
es
jmp
notb
mov
and
xchg
outsl
test
stc
jle
add
stos
mov
push
mov
jns
mov
int3
mov
shrd
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
mov
push
dec
lret
adc
cli
adc
mov
jp
adc
pop
outsb
xor
adc
stos
jbe
dec
push
mov
xchg
inc
mov
mov
mov
out
push
stos
imul
dec
sbb
aas
stc
mov
or
popf
adc
inc
lods
dec
jle
pop
pop
jp
lcall
jno
imul
jo
jge
std
test
sub
adcb
jae
jmp
xorb
mov
jno
cmp
fld
notb
mov
mov
xor
bound
subl
stos
push
testb
pop
add
cmpsb
mov
pop
cmpl
fidivl
repz
push
xor
movq
add
cltd
lock
movsl
adc
sti
testb
in
mov
push
push
movsb
lcall
add
sbb
pop
and
cmc
mov
incb
inc
str
jne
add
shrl
push
sahf
cmpsb
ret
adc
pushf
dec
sbb
loope
jp
ss
repnz
sub
in
dec
pop
inc
jg
sbb
mov
repz
lcall
in
or
lcall
dec
xchg
sti
sahf
inc
mov
lods
icebp
imulb
push
xor
sbb
sti
xor
cmovne
repnz
inc
insl
dec
push
mov
into
lods
int
cmpl
shl
xor
add
aaa
divl
inc
or
sahf
int3
push
lock
mov
xchg
pop
lret
or
sahf
loop
cmpsb
mov
orl
and
fwait
sbb
adc
out
aaa
jne
mov
xor
data16
fsubp
add
insl
inc
push
dec
int3
sahf
outsl
mov
andl
nop
adc
pushf
in
sub
lds
mov
cmc
repz
in
adc
pusha
stos
sahf
pop
sbb
xchg
insl
shlb
mov
fwait
enter
cmpsl
or
shl
ror
lahf
mov
add
mov
into
shrl
icebp
xchg
dec
mov
lods
stos
add
ja
leave
rcrb
xor
xchg
xchg
sar
add
xchg
sbb
mov
stos
hlt
and
dec
shl
aas
xchg
mov
or
addr16
faddl
test
iret
and
push
fildl
rolb
hlt
xor
in
inc
movsl
rol
aas
leave
test
imul
scas
push
and
ds
adc
insl
or
mov
call
popa
dec
mov
dec
stos
sahf
aas
les
and
shlb
mov
mov
outsb
push
and
shll
jne
dec
js
insb
pop
mov
push
mov
push
pop
je
sahf
aam
mov
sbb
pop
std
push
jae
loop
mov
pop
bound
pop
pop
in
mov
add
jle
test
hlt
sbb
jle
js
sbb
stos
cmp
outsl
pop
ftst
sub
pop
cmp
out
test
sbb
in
enter
xchg
pop
ss
push
or
cmpl
fdiv
or
push
mov
ja
pop
cli
fistps
outsb
add
xchg
scas
jp
jg
lock
insl
add
cmp
sbb
mov
jecxz
movsl
dec
pop
mov
mov
mov
lea
and
push
lcall
inc
mov
nop
lret
mov
jne
xor
movsl
ret
inc
movaps
mov
and
clc
loop
dec
sbb
inc
inc
push
cwtl
dec
fidivs
inc
sarl
adc
mov
les
xor
xor
lret
mov
cmp
test
push
xchg
mov
and
mov
or
pop
add
jp
iret
ret
xor
test
shlb
int
and
cmp
lcall
cld
mov
mov
ljmp
stos
and
and
xor
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
push
outsb
pop
add
scas
pop
jbe
iret
in
ja
sbb
xchg
inc
movsb
out
pop
testb
movsl
sub
fstpl
cmp
jbe
scas
push
push
dec
and
cli
cltd
pop
mov
fwait
test
pop
cmpsl
sub
cmp
stc
jne
mov
inc
pop
dec
jb
adc
enter
adc
hlt
outsl
jge
jne
enter
arpl
mov
jecxz
inc
fdivrl
fmuls
pop
mov
pop
test
repz
fildl
pop
fildl
cmp
in
pusha
pop
mov
out
hlt
xchg
stc
cltd
dec
add
in
fnstcw
cli
movsb
das
xor
loope
mov
sub
mov
pop
jg
ficompl
mov
push
in
lret
jg
jle
mov
cwtl
cmp
test
pop
sub
dec
call
sub
lea
test
bound
insb
push
cmp
and
test
lods
arpl
aaa
fs
lret
xchg
aad
scas
lahf
push
mov
pop
shrl
scas
neg
clc
fcmovnb
xor
int
pop
shl
hlt
cmp
loopne
jge
shr
add
adc
ret
gs
loope
les
stc
mov
outsl
adc
cmpsl
inc
sbb
jge
lods
push
push
sahf
fbstp
jbe
lea
sub
aad
and
daa
pop
inc
xor
push
test
insb
jecxz
push
leave
cmp
sub
shll
jmp
cmp
dec
inc
ljmp
xchg
xchg
xor
pop
in
sti
jnp
repnz
xchg
xchg
ret
fisubrs
insl
sbb
mov
lret
inc
xor
stos
lock
test
out
decb
and
sub
in
push
fists
xchg
daa
sbb
sbb
mov
inc
cmc
fxch
dec
sub
leave
mov
or
cs
xor
cmp
inc
xchg
dec
lea
inc
adc
push
outsb
fwait
rcrb
aad
jne
mov
dec
lods
stos
iret
sbb
push
pusha
jbe
fsubs
pop
jle
mov
mov
push
fisubrs
xor
inc
sbb
mov
push
jo
dec
pop
cmp
sub
jns
inc
inc
sbb
mov
adc
mov
aaa
dec
add
leave
shll
mov
sub
popl
fcompl
mov
push
push
inc
push
lahf
popf
insl
jle
mov
jl
enter
lods
add
adc
mov
test
outsl
push
cmp
jl
xor
mov
addr16
out
cs
mov
sub
push
cmpsl
ret
in
call
leave
xchg
and
and
pop
in
xchg
lods
insb
mov
aam
ret
mov
sub
sbb
xor
ja
mov
clc
or
bound
sub
movsl
aas
aam
int3
sti
movsb
push
shl
jb
mov
fcoml
cmp
sbb
idiv
fisttps
pop
and
push
pop
lret
sub
sub
shl
mov
test
shrb
mov
jmp
nop
sbb
out
rcl
aam
fiaddl
jl
lret
cmp
cmp
add
jmp
out
dec
ljmp
fs
out
neg
or
or
cmp
mov
jecxz
fstl
rorl
mov
mov
mov
iret
frstor
shrb
fcmovbe
das
daa
faddl
dec
inc
or
xchg
repnz
mov
add
jg
fld
arpl
xchg
push
aas
arpl
jp
in
or
push
xchg
lea
and
adc
les
sbb
imul
in
sbb
and
imul
sub
or
sbb
sub
sti
int
jmp
imul
jp
lods
jmp
jl
out
test
rclb
ficomps
cmp
dec
movsb
lahf
inc
push
rcrl
mov
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
pop
mov
adc
aaa
cli
adc
mov
test
push
stc
cmp
testl
int
shrb
pop
xor
out
in
xchg
xchg
imul
xor
pop
adc
out
jo
ret
jmp
bound
mov
add
imul
nop
mov
mov
pop
or
mov
int3
pop
aam
xor
push
fnstcw
shr
out
inc
test
lret
mov
cmp
inc
daa
fisubrl
fsub
enter
jp
add
pusha
inc
gs
or
pop
scas
addr16
or
cmp
mov
cmp
pop
jbe
gs
insl
stc
mov
scas
sub
push
shll
dec
or
jmp
jnp
ret
pop
jb
add
lcall
or
cmp
repz
out
in
push
sub
sbb
sub
ficompl
jmp
imul
push
lock
insl
jo
add
pop
sbb
sbb
call
mov
test
addr16
hlt
adc
xor
mov
mov
mov
arpl
mov
jmp
mov
mov
inc
cmp
push
shlb
js
xor
lcall
aaa
aad
mov
out
jo
popf
hlt
and
sahf
data16
and
xor
out
sbb
xchg
divb
test
data16
iret
cmp
xor
test
xchg
lock
xchg
fstps
sbb
dec
xorl
fcos
jns
dec
mov
cmpsb
pop
fcmovbe
inc
shr
adc
and
push
sub
mov
imul
cltd
sub
inc
push
inc
es
xchg
sub
imulb
lods
cmp
rcr
jbe
pop
das
outsl
out
stos
mov
rcll
rol
cmp
xchg
ret
dec
and
pop
pop
inc
add
pop
lods
push
mov
inc
mov
jno
push
in
popa
fnstsw
test
icebp
jo
or
pop
adc
cmpsl
adc
sbb
psubw
cmp
xacquire
cmp
inc
and
sub
cmp
jecxz
loopne
and
les
sti
outsb
aad
aaa
push
movsl
pop
lahf
sub
push
imul
adc
dec
mov
mov
incl
dec
jecxz
sub
and
mov
jo
jne
mov
mov
cs
out
jge
fcomps
fstps
loope
jg
push
ja
push
and
addr16
xchg
inc
roll
cmp
or
pop
lea
sub
cmovae
lea
add
add
push
roll
cmpsb
xor
lahf
pushl
popf
push
pop
idivb
xor
scas
add
push
jl
addr16
arpl
popf
or
test
outsb
jno
sbb
std
fnclex
sub
in
or
fisttps
ja
and
rcll
sbb
xor
mov
pop
fldenv
mov
jae
jp
fstpl
lret
ficoms
sbb
adc
mov
cmp
cwtl
push
xchg
inc
aad
repz
flds
xchg
cmp
cld
bound
movsb
shlb
mov
dec
lret
xchg
fildl
movsb
and
fs
lea
pop
cli
sbb
mov
cmp
js
lahf
decl
push
inc
leave
and
and
test
cmp
outsl
out
jecxz
pushf
push
or
inc
xchg
adc
or
pop
insl
push
add
test
int
or
aas
cmp
mov
je
add
rclb
insl
adc
fwait
dec
xor
xor
mov
in
popa
xlat
add
mov
test
jb
mov
or
popf
inc
in
cmp
xlat
xchg
cmp
stos
lret
mov
or
out
jge
pop
sarl
popf
sbb
mov
adc
daa
push
mov
mov
mov
or
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
ljmp
adc
push
mov
jbe
pop
jge
mov
dec
pop
dec
sbb
jle
fldpi
addl
xor
jecxz
and
testb
sar
inc
movsb
in
xor
xchg
inc
jecxz
lret
bound
push
sbb
aam
mov
iret
loop
lock
mov
idivl
pop
lret
mulb
lock
repnz
push
shlb
in
pushf
mov
in
repnz
cmp
pusha
mov
rcr
negl
cmp
xor
sub
ljmp
movsl
js
lcall
jl
xchg
mov
in
enter
pop
mov
or
sbb
inc
out
inc
cmc
testl
ljmp
mov
cli
pop
inc
aad
mov
fs
and
das
push
jl
mov
cltd
test
jae
icebp
mov
jle
xor
pop
push
lea
add
mov
iret
out
adc
in
test
ror
enter
xchg
stos
push
pop
and
gs
cmpsb
adc
mov
test
test
into
jecxz
das
je
ja
mov
pop
pop
mov
cmpsb
dec
or
mov
cli
stos
outsb
lods
mov
xchg
or
idivb
cltd
ja
lds
mov
adc
rcrl
loop
xlat
imul
pop
daa
xchg
test
ror
enter
cwtl
pop
popf
add
loopne
pop
cmc
or
mov
movl
repnz
push
bound
test
adc
mov
jno
addb
push
sub
mov
xor
add
or
outsb
enter
cltd
cmpsl
fildl
movsb
in
fdivrl
sarb
add
dec
jle,pt
or
addb
test
xchg
mov
dec
adc
xchg
or
out
rcr
dec
imul
das
sub
les
jl
mov
lds
fidivl
lahf
mov
insl
loope
jge
push
pop
and
mov
sahf
repnz
fdivrl
in
jb
cmp
or
clc
jnp
in
cmp
in
sub
xchg
scas
push
lret
sar
dec
lret
dec
sarl
mov
std
cmp
adc
and
mov
mov
xchg
inc
fldenv
in
shll
mov
inc
into
adc
je
ljmp
dec
xor
dec
xor
jp
std
jo
rclb
add
adc
iret
inc
stos
xchg
xor
jne
clc
pop
sbb
inc
movsl
sar
pushf
shlb
shl
shrl
fidivrs
pop
test
sub
cmpsl
pushf
test
mov
mov
js
dec
xchg
fldt
outsb
das
and
inc
bound
out
xchg
sub
xchg
shll
sub
frstor
add
ds
mov
adc
jo
mov
imul
fsubs
dec
mov
mull
nop
sub
popf
jmp
ja
pop
in
das
dec
aam
int
add
inc
sarl
push
fwait
repnz
cmp
addl
pslld
sbbl
out
mov
in
shlb
add
mov
scas
mov
mov
cld
sub
fsubr
pop
cmp
push
cmp
push
sbb
adc
daa
jge
ja
pop
in
scas
or
push
jg
int
js
fucomip
lahf
push
movsl
loope
inc
call
push
add
and
dec
lock
mov
push
insl
mov
xchg
negl
mov
arpl
mov
ljmp
ret
idivb
loopne
filds
cmc
ret
jecxz
cmp
hlt
lea
dec
mov
int3
mov
xchg
or
subb
fwait
hlt
scas
cwtl
sbb
scas
rorl
inc
add
roll
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
dec
mov
cli
adc
mov
and
ret
xchg
xor
inc
pushf
daa
roll
mov
dec
jmp
out
sub
stos
popf
jl
inc
mov
inc
ret
mov
int3
addr16
jge
fucomip
roll
rcl
out
rorb
mov
mov
ljmp
ror
push
sbb
jnp
test
xchg
cmp
mov
mov
sbb
xor
add
mov
test
xchg
insl
ja
push
in
imul
adc
dec
xor
xor
cmc
xchg
test
cmp
or
scas
imul
hlt
frstor
hlt
pop
sti
or
xor
mov
mov
pop
in
dec
xlat
jo
lods
call
or
mov
xchg
xor
cmpsl
dec
xor
mov
enter
pop
mov
sbb
push
lret
inc
adc
sub
fdivrp
rorb
or
repnz
cmpsb
sbb
mov
ret
cmp
fnsave
cmpsb
mov
lods
jae
fsub
mov
ret
mov
pop
sti
jb
jne
mov
xor
clc
mov
inc
addr16
lea
testb
dec
int3
test
mov
insb
fldt
cmpsl
lss
sub
cld
dec
call
push
mov
and
data16
nop
jne,pt
ret
jo
push
sahf
mov
cmpsb
xchg
mov
pop
jge
mov
dec
jle
cmpsl
push
ljmp
sub
shl
sub
lea
shlb
jbe
mov
fists
cltd
adc
iret
inc
movsb
cli
push
mov
ds
jnp
hlt
fnstcw
adc
sbb
and
mov
test
mov
fwait
out
xchg
shlb
je
sbb
iret
dec
inc
movsl
gs
ret
test
jne
pop
push
aam
cmp
out
lods
aad
lds
mov
push
cmp
fidivs
add
sbb
test
xor
dec
mov
test
outsl
outsb
outsl
cmpsb
xchg
mov
inc
mov
mov
daa
adc
jno
rol
nop
sub
lods
negl
push
or
xor
roll
xchg
mov
aaa
fisubrl
xchg
mov
outsb
mov
mov
xchg
sbb
rolb
lds
cltd
arpl
test
adc
imul
ret
test
imul
mov
lods
jecxz
out
imulb
test
imul
aaa
cs
fcmovne
int3
mov
loop
mov
add
jns
xchg
mov
les
cmp
mov
dec
inc
js
test
xlat
jg
mov
sahf
jmp
aas
rcrb
cmpsb
dec
in
fdivrs
int
movsb
lret
subb
dec
sbb
mov
mov
cltd
cmp
sbb
loop
loop
iret
pop
xor
pop
fnstcw
loope
dec
pop
int
jp
fstp
js
xchg
push
or
pop
enter
cmp
andb
pop
jns
in
insb
adc
mov
outsb
pop
andl
jmp
sub
xor
sub
inc
lret
dec
fcomip
in
lock
cs
or
adc
sbb
adc
cmp
push
ljmp
repz
mov
sbb
push
xor
inc
push
sbb
push
scas
xor
xlat
inc
fmuls
add
xchg
pop
pop
mov
mov
add
test
push
mov
shll
mov
das
fbld
fwait
lods
into
faddl
mov
jne
xchg
es
push
pop
sub
cwtl
add
je
inc
out
dec
stos
in
addl
mov
sti
jmp
es
hlt
je
js
lahf
aam
ljmp
cwtl
lcall
push
pushf
lret
sub
xchg
jo
jg
hlt
or
xchg
lea
xchg
leave
adc
inc
mov
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
push
ret
lcall
adc
cli
adc
push
fnsave
dec
mov
jecxz
loope
push
scas
mov
sub
dec
add
add
adc
repz
mov
in
shrl
jmp
jb
push
adc
cmc
aad
and
xor
add
repnz
mov
int3
flds
jbe
mov
mov
scas
adc
incb
pop
popf
add
hlt
insb
orb
mov
orb
xor
and
jecxz
gs
fs
dec
js
jns
out
mov
xchg
loope
into
sub
shll
stos
inc
pop
sbb
pop
and
mov
add
and
adc
loope
xchg
in
addr16
adc
xchg
decl
stc
sub
fs
dec
inc
xchg
or
cmp
movb
inc
ds
dec
sbb
push
mov
aaa
icebp
out
popf
jnp
mov
dec
inc
jnp
inc
fs
popa
jecxz
pop
loop
mov
leave
mov
xor
loop
adc
fdiv
movsb
jbe
lock
xor
dec
jbe
mov
inc
push
les
pop
mov
test
sbb
push
sbbb
aam
xor
test
push
addr16
inc
setae
add
lahf
mov
or
mov
pop
xchg
scas
xchg
outsl
jge
adc
cmpsl
int3
mov
sub
rolb
icebp
loopne
rcrb
aam
in
cmp
push
outsl
dec
dec
lcall
jae
mov
out
mov
push
push
mov
into
popf
adc
add
mov
fwait
mov
lahf
incb
jne
aas
xchg
mov
pop
add
inc
pop
xor
aas
test
icebp
push
jmp
mul
outsb
notl
push
lods
fisubl
inc
cltd
xchg
stos
test
cmp
push
leave
arpl
push
into
and
insb
scas
rcrl
cmp
ror
leave
es
dec
shll
push
test
fs
jge
dec
pop
mov
in
test
adc
add
pop
sub
call
push
cli
ret
sub
lock
insl
mov
bound
bound
mov
cltd
sub
mov
jecxz
fdiv
shl
movsl
das
enter
in
js
mov
sub
push
addr16
jo
out
cltd
fcmove
cmp
fbld
jl
mov
cmc
cmc
jnp
popf
sbb
dec
lret
jge
inc
or
add
or
mov
mov
adc
sbb
shll
cld
out
lock
jno
adc
dec
ja
movsb
add
ja
jp
orb
lret
jp
enter
fnstenv
arpl
aam
mov
cs
jo
xchg
andnps
mov
mov
into
in
rol
outsb
or
sbb
pop
div
push
xchg
push
daa
loopne
mov
out
jmp
lock
push
mov
in
scas
fbstp
repnz
fnstcw
roll
shrb
lahf
pop
pushf
sbb
out
xor
out
mov
outsl
mov
rcr
xchg
jmp
js
cs
add
sub
rclb
adc
mov
xor
int
mov
sbb
repnz
js
flds
shll
test
mov
adc
cmp
pop
sub
sub
fcoml
push
in
icebp
xor
out
ficoml
test
xor
lret
mov
lret
flds
int3
ret
push
dec
sbb
or
mov
jle
leave
mov
adc
hlt
aas
mov
sub
bound
arpl
cld
lcall
test
dec
test
pop
pop
sub
and
ds
adc
xchg
pushf
xchg
and
repz
fistps
test
pop
dec
lods
outsl
or
outsb
ljmp
sub
or
scas
sbb
jge
inc
xor
jle
pop
shll
je
pop
mov
xor
jp
mov
rcll
lret
xor
inc
jmp
js
scas
push
aam
sbb
lret
add
adc
mov
cmp
add
xor
add
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
loop
pop
push
inc
adc
aaa
cli
adc
cmpsb
les
jmp
mov
push
cmp
cld
cmpsl
cmp
xchg
xchg
addb
add
pop
cmpsb
jp
sub
cs
or
nop
push
enter
fs
and
lret
std
lds
mov
cmc
xor
test
xchg
mov
xchg
add
mov
mov
xor
pop
mov
pop
cmp
jl
mov
fcoms
pop
jno
int3
or
inc
shrb
pop
popa
popf
cmp
jecxz
dec
add
cwtl
sbb
inc
in
cmp
mov
adc
hlt
test
mov
cmp
std
es
sahf
xchg
or
xor
je
xor
lock
enter
movsb
mov
sbb
sub
cmc
mov
repz
mov
adc
out
ret
mov
jl
sbb
push
pop
fstps
adc
popa
fsub
jo
cmpl
out
and
cld
enter
push
inc
sti
xchg
and
and
dec
cwtl
push
xorb
sub
nop
mov
fisubrl
inc
or
jl
inc
lcall
add
pop
jbe
cmp
sbb
stos
push
loop
scas
in
or
pop
jo
std
test
faddl
pop
add
movsl
mov
scas
sub
inc
cltd
cmp
mov
es
lret
fimuls
scas
add
dec
repnz
adc
pop
mulb
sahf
mov
or
or
in
adc
nop
pop
push
cmp
sbb
jb
inc
enter
andl
push
mov
mov
push
add
sub
xlat
inc
xlat
push
push
add
mov
ret
mov
fldcw
push
xorl
sbb
scas
scas
es
into
sub
inc
aam
jle
xor
hlt
inc
jge
dec
movsb
jmp
pushf
jecxz
cli
push
jbe
mov
sub
jmp
add
jne
sahf
scas
push
and
pop
xor
jo
shlb
ds
mov
loop
iret
pop
dec
fidivl
mov
dec
int
enter
lcall
dec
jno
fcoml
and
cmpsb
xchg
push
xchg
jnp
scas
mov
mov
cmp
nop
rcrb
xor
mov
out
lret
mov
and
xchg
xor
push
adc
adc
outsb
mov
outsl
out
jns
enter
jae
mov
add
cwtl
pop
mov
push
inc
cmp
add
mov
lahf
nop
ss
xchg
xor
dec
xor
aaa
xchg
and
scas
sbb
mov
pop
lcall
add
stos
sub
mul
jbe
or
mov
fiadds
pop
outsb
fcom
cli
push
sbb
out
sub
aaa
adc
movsb
pop
jno
ret
test
xchg
out
ret
insl
and
cmp
enter
popf
mov
adc
xor
lcall
push
mov
lcall
sbb
jo
sbb
xchg
ja
xchg
in
in
sbb
sarb
inc
cmpsl
xchg
sahf
sub
in
pop
jno
sbb
es
mov
rclb
dec
xchg
mov
cmpsb
insb
in
inc
in
scas
mov
push
add
mov
sub
mov
das
dec
cmp
out
add
xchg
push
dec
ljmp
push
add
jge
lret
mov
push
aam
nop
gs
fnstsw
pop
or
pop
dec
sbbl
out
mov
push
mov
js
out
add
lods
sbb
das
inc
bound
outsl
push
dec
push
xchg
leave
mov
sbb
or
stc
jl
ljmp
das
lret
mov
xlat
push
clc
pop
mov
aas
inc
jge
test
sbb
push
daa
jno
popf
inc
arpl
sub
jge
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
push
mov
ljmp
ss
xchg
fdiv
in
out
sbb
cli
outsl
xor
loop
mov
pop
cltd
push
clc
mov
es
add
jg
gs
mov
test
scas
rcll
fs
xor
cmp
adcb
test
loopne
push
sbb
jle
stos
sbb
dec
cld
outsl
mov
xor
or
dec
jmp
mov
and
pop
mov
sahf
xchg
cwtl
sbb
mov
add
pop
cmpsb
int3
xor
ficomps
stc
movsb
push
ret
push
mov
mov
loop
or
leave
and
movsl
and
ret
enter
popa
cmp
sub
jns
sub
orps
jno
fidivs
pop
imul
adc
adc
sub
ja
lock
pop
adc
test
sbb
sub
pop
cwtl
cltd
sbb
dec
in
mov
lods
out
sbb
push
pop
mov
lcall
fdivs
stos
call
cmpl
ficomps
imul
mov
int3
test
push
adc
test
aad
ret
lock
fs
dec
sti
pushf
iret
insb
jne
xchg
adc
mov
cmp
unpckhps
scas
sahf
mov
jl
cmpb
mov
insb
jb
adc
test
dec
sub
in
cmpsl
aaa
inc
dec
dec
pop
les
lcall
or
int3
cmp
and
adc
fcmovne
or
insl
pop
scas
jno
scas
mov
insl
pop
xchg
jne
scas
push
stos
fdivl
xchg
fnstenv
sbbb
fsubrs
pop
test
shr
pop
dec
fwait
xchg
sbb
pop
mov
xchg
clc
outsb
jge
leave
mov
add
and
push
aas
adc
aaa
inc
outsb
dec
xor
push
mov
sbb
pop
dec
pop
pop
xor
and
xchg
sbb
out
mov
jno
sub
ljmp
loopne
mov
inc
loope
xor
jns
dec
lahf
inc
pop
mov
sets
insl
mov
mov
push
lods
fs
pop
cmp
xchg
repz
movsl
push
cmp
std
mov
sbb
cmp
mov
fsts
cmp
fcmovbe
mov
dec
ljmp
push
clc
cmpsl
sahf
xchg
xchg
test
jmp
js
sbb
and
int
push
icebp
sub
mov
push
hlt
jg
xor
mov
ds
fadds
stos
sub
or
dec
cmpsb
push
jmp
inc
mov
sbb
popa
push
ss
lcall
jmp
ja
fildll
data16
xor
js
lds
sar
icebp
mov
jmp
dec
or
mov
les
arpl
test
jmp
rclb
out
pushf
push
mov
push
outsl
xchg
jge
cld
daa
cwtl
cmc
jecxz
cmpsb
adc
scas
xlat
jmp
int3
inc
push
mov
comiss
sub
notl
push
cmp
xor
push
and
push
inc
or
inc
jne
inc
and
adc
sub
data16
nop
testl
mov
mov
cmpsb
in
jno
mov
out
aam
jecxz
jp
pop
adc
insb
movsb
push
shrl
mov
sub
and
repnz
jae
add
push
mov
mov
je
test
clc
mov
xor
mov
enter
mov
fsubl
ss
jle
mov
stos
cmpsb
js
mov
inc
dec
sbb
scas
pop
mov
rcrl
repz
inc
xor
xchg
xchg
fsubrs
mov
pop
jmp
aad
xchg
rclb
shlb
mov
or
test
ljmp
mov
fnsave
cmc
inc
mov
jae
lock
andb
test
pop
out
aaa
aas
loop
xchg
enter
add
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
jecxz
stos
push
adc
aaa
cli
adc
cmovnp
mov
cmp
dec
das
pop
fidivrl
cmpsl
ja
push
cmp
mov
in
insl
stos
movb
inc
lds
sub
fildl
jle
sub
push
fsubs
call
dec
push
sbb
outsl
mov
je
inc
aas
push
dec
mov
mov
pop
aas
jg
movsl
xchg
pop
out
sbb
mov
mov
dec
out
cmp
fisttps
gs
popf
mov
mov
rcl
pop
pop
fwait
lods
nop
pop
loope
mov
pop
xchg
mov
add
mov
inc
fwait
push
jp
dec
or
cwtl
shl
jns
xorb
faddl
inc
cmp
pushf
or
mov
add
dec
jns
jl
sbb
xchg
pushf
mov
or
pop
enter
mov
pop
imul
sub
mov
rcr
fcoml
stc
ss
aas
dec
je
stc
adc
mov
pusha
push
pop
mov
mov
inc
xchg
loopne
or
cld
dec
push
jne
aad
push
mov
icebp
xor
xor
hlt
cmpsl
push
lret
mov
clc
ret
cmp
daa
push
push
fwait
lahf
leave
das
cwtl
rcrb
je
add
nop
mov
scas
jp
xchg
vmovsd
decl
andl
filds
arpl
inc
icebp
jecxz
push
jle
pusha
dec
push
add
out
mov
adc
push
adc
add
xor
out
orb
mov
popa
stc
sub
clc
addr16
hlt
out
gs
push
pop
ficoms
push
iret
mov
cs
sbb
outsl
das
popa
sbb
nop
cmc
orb
mov
pop
and
mov
lret
mov
mov
lcall
cmp
adc
sbb
mov
sti
ljmp
in
push
addr16
xchg
aas
popa
mov
mov
sub
mov
fldt
cmp
fistpl
int
add
push
scas
pop
adc
inc
sbb
pop
lods
mov
xor
sbb
add
mov
std
lods
push
lds
jnp
inc
dec
shlb
lods
mov
sahf
cmp
jo
lahf
cwtl
xchg
inc
push
int3
and
push
lods
out
leave
cmp
xor
in
cld
xor
push
push
xchg
xchg
jns
pushf
daa
mov
jbe
push
pusha
adc
push
xchg
in
or
incb
xchg
add
sub
jmp
dec
inc
sub
jo
add
jmp
jns
lahf
andb
daa
test
repnz
jecxz
cwtl
xchg
outsb
mov
cmp
bound
push
cmpb
imul
dec
mov
adc
nop
jmp
iret
into
gs
or
push
adc
jno
mov
ss
cmc
adc
jecxz
cmp
bnd
pop
adcb
jnp
repnz
clc
std
or
sbb
hlt
popf
push
push
daa
mov
gs
add
pushf
inc
aad
fdivrp
scas
mov
add
jp
popf
iret
stos
and
dec
mov
push
push
dec
adc
xchg
jns
jnp
pop
aam
aam
sahf
xor
mov
cmp
xchg
jg
lock
and
subb
scas
xchg
movsl
mov
scas
push
adcb
or
repz
xor
cltd
cmpsl
jp
jns
dec
insb
sub
clc
call
lret
sbb
and
hlt
xor
push
mov
or
sbb
cmp
add
ljmp
inc
mov
fcoms
clc
insb
lcall
pop
inc
bound
fidivl
jns
popa
movsb
int3
adc
mov
lret
popa
jge
adc
push
mov
loope
repz
dec
sti
aaa
or
pusha
in
cmp
arpl
jmp
adc
sbb
aam
loope
adc
pusha
xor
xadd
xchg
insl
adc
fdivs
fmuls
cmp
sbb
cmpsb
add
outsb
shr
sbb
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
and
inc
adc
aaa
cli
adc
lods
cwtl
cli
ret
fs
out
dec
dec
jp
fst
cwtl
repz
ja
mov
cmc
pushl
inc
and
mov
pop
xor
rolb
lock
jmp
cld
call
loope
es
dec
mov
pushf
cwtl
add
inc
inc
xor
xor
aad
stc
mov
testl
dec
add
pop
xchg
sbb
adc
aam
out
adc
aam
inc
es
cmpb
mov
push
xlat
dec
loope
jle
lods
mov
in
add
fdivp
push
xchg
lcall
sbb
push
push
dec
insl
add
andl
clc
fadds
gs
repz
push
pop
imul
cmp
daa
jbe
faddp
jae
arpl
dec
cmp
notb
stc
xchg
push
jmp
fidivs
js
jno
scas
mov
jae
xchg
pushf
les
rclb
loop
lcall
fwait
add
vpxor
push
sbb
stos
hlt
or
ds
fwait
in
stos
mov
dec
pop
popl
add
sbbb
mov
dec
loope
cmp
in
out
sub
add
hlt
inc
out
test
jnp,pt
les
push
lcall
mov
outsl
int3
ret
jge
es
jae
mov
sbb
xor
xchg
sub
lods
adcl
sub
sarb
adc
mov
not
push
pusha
outsl
sbb
loopne
popf
les
and
inc
aas
xchg
mov
lds
divl
add
xor
jecxz
cmovge
and
sbb
dec
jo
in
cmp
outsl
xchg
mov
xchg
dec
lret
mov
loope
lcall
and
and
sub
rolb
mov
push
or
mov
stc
dec
mov
adc
cmpsb
out
sahf
pushf
sub
adc
lea
push
and
cmp
negl
xor
adc
jl
or
xor
cltd
mov
outsb
lods
movsb
jg
xor
inc
mov
jne
lret
adc
pop
decb
sahf
cs
sub
lret
rcl
lock
shll
dec
sarb
sbb
cmp
subb
stc
push
mov
inc
ja
and
fcompl
test
nop
xor
stos
mov
pop
fwait
es
pop
and
jl
xchg
data16
mov
testb
jne
mov
cmc
xorb
mov
push
test
xor
mov
stc
into
add
inc
and
lods
jae
push
mov
sub
jb
cmpsb
pop
out
adc
lock
lret
jno
rclb
mov
aam
sbb
loop
lock
notb
jp
das
xchg
pop
fnop
adc
pop
ffreep
xchg
into
loope
push
cmp
push
dec
ljmp
and
or
and
bound
or
fdivrs
mov
in
ret
aad
pusha
data16
pusha
imul
pop
push
mov
or
sub
xchg
ds
inc
std
in
aas
cmp
jl
push
mov
insl
out
push
mov
mov
lcall
and
dec
push
push
jl
add
fdivr
sti
call
scas
dec
shrb
mov
xchg
jo
xchg
jnp
dec
pusha
xor
push
xor
insl
mov
sbb
outsl
pop
addl
pop
loope
loop
dec
lods
aas
lock
andb
sbb
adc
imul
pop
or
cmpsb
pusha
enter
mov
mov
in
shrb
pop
mov
lods
jne
or
lods
ljmp
cmc
xlat
sub
in
push
je
popa
dec
mov
jo
cmp
addl
mov
shr
adc
enter
pop
push
outsl
xor
into
les
and
dec
hlt
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
cmp
aaa
cli
adc
stos
cmp
out
inc
inc
and
gs
and
mov
xor
sub
push
pushf
xchg
push
and
push
sbb
cltd
repz
pop
int3
sbb
jo
stc
insl
outsl
pushf
mov
inc
and
push
cmp
dec
push
xchg
pop
mov
ret
fisubrl
xlat
jecxz
jle
cwtl
repz
push
xor
sub
movsb
insb
out
mov
lods
mov
ljmp
push
es
test
jno
push
out
jae
pop
pop
jae
in
pop
fwait
out
xor
pop
mov
adc
and
popf
stc
xchg
clc
repnz
adc
idiv
ss
dec
push
cmp
xchg
outsb
divps
inc
inc
sti
pusha
mov
and
fildl
xchg
loopne
push
add
dec
push
mov
popf
mov
imul
cmp
call
mov
test
data16
insl
mov
pushl
int
mov
pop
xchg
popf
sbb
and
push
inc
cmp
and
cmc
push
mov
rcll
out
sbbb
add
faddl
or
xchg
aad
inc
dec
fs
ss
xor
imul
cli
and
f2xm1
stos
call
pop
lds
dec
insl
jo
test
das
pop
mov
mov
lds
dec
lods
sbb
adc
jb
int
clc
lods
add
mov
cmp
leave
jbe
rcrb
stos
mov
and
jne
sub
lods
out
stc
idiv
call
inc
pop
fidivl
call
gs
leave
xor
cmc
or
jbe
jnp
xor
repz
adcl
test
sahf
dec
jmp
cld
cmp
jo
sbb
dec
mov
mov
sahf
sbbl
cmp
fcmovb
sub
adc
js
ja
and
adc
test
int
ja
mov
xchg
in
orl
xor
push
pop
repz
icebp
sbb
jl,pt
mov
js
loop
mov
std
loop
testb
mov
sbb
repz
or
aad
or
mov
popf
and
outsb
daa
mov
pop
iret
sbb
inc
xchg
jbe
das
or
stos
sub
inc
lds
dec
add
mov
pop
fucomp
xorb
addr16
mov
shl
and
mov
xor
push
in
mov
pop
pop
lock
and
push
sbb
sbb
cs
pushf
pop
xchg
pop
dec
jle
loope
cmp
rclb
dec
test
js
xor
ficomps
movsl
sbb
or
push
inc
cltd
xchg
ret
inc
mov
in
popl
fdivs
jo
push
sbb
rcrb
popf
sahf
jno
inc
sbb
jle
xchg
fistl
pop
inc
ds
sub
ret
das
cltd
jl
jge
sbb
outsb
ds
test
data16
inc
xor
push
js
sub
in
outsb
std
inc
hlt
inc
xor
popf
cmc
adc
jge
dec
jnp
inc
lock
jo
fdivrs
sub
or
jge
push
aas
xchg
cmp
push
std
mov
add
xor
arpl
jg
xor
adc
es
xchg
push
loopne
loope
pop
or
nop
inc
shrl
lods
jne
sbb
dec
xchg
cltd
jg
popf
arpl
and
lods
into
dec
jle
in
mov
sbb
std
movsb
push
shll
out
sub
shl
repnz
push
or
sti
inc
inc
mov
movq
ds
xchg
push
cmpsb
jnp
push
leave
xchg
cmpsl
sub
call
je
test
mov
sahf
xchg
mov
aam
adc
jnp
mov
test
movsb
dec
push
mov
push
or
das
shrb
xor
mov
ja
inc
push
ljmp
sub
sbbl
mov
test
rorb
inc
loop
xor
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
pop
and
xor
adc
cli
adc
aaa
xchg
sahf
into
das
sbb
out
rcll
int
out
into
filds
cmp
xlat
mov
mov
mov
mov
xorb
inc
push
jne
xchg
lods
ljmp
pop
mov
push
mov
repz
dec
jno
mov
call
xchg
mov
mov
es
fisubl
jnp
pop
cmp
mov
pop
ret
add
cmp
mov
ja
hlt
shll
sbb
shll
ljmp
dec
or
repnz
push
hlt
clc
mov
das
sub
clc
sbb
dec
adc
push
outsl
or
aaa
lock
data16
hlt
xor
push
out
lret
pop
cmp
add
push
cmpb
ljmp
std
sub
fdivrs
lods
jbe
jp
jle
clc
mov
inc
push
adc
roll
sbb
xchg
int
dec
mov
loop
test
xchg
test
enter
into
jbe
push
pop
xchg
fs
mov
add
xor
shll
dec
xor
pop
scas
mov
cmp
sar
repz
mov
mov
or
cli
jo
dec
popa
in
cmp
out
imul
or
dec
add
mov
jno
jno
insb
jmp
adc
sbbl
fimuls
push
xchg
ja
sub
je
fsubrl
outsl
aam
aam
xchg
or
mov
fstpl
push
mov
cmpsb
enter
xor
jns
or
inc
mov
outsl
or
or
adc
mov
enter
es
dec
jl
adc
ficoms
mov
pop
sarb
dec
stos
xchg
aas
mov
mov
or
and
loope
xlat
xlat
jecxz
lahf
mov
cmp
lods
mov
adc
xor
inc
xchg
pushw
fcoms
fnstenv
int
test
cmp
lods
xor
add
shrb
cmpb
lret
fisttpll
out
jl
hlt
popa
ja
cmp
notb
xor
sub
icebp
xchg
adc
push
mov
cmp
sub
mov
dec
insb
into
jo
jnp
cmp
mov
sub
jb
fldcw
or
push
sub
pop
add
stos
or
mov
fcmovbe
add
adc
jbe
xchg
addr16
test
jg
xlat
and
mov
mov
sub
out
dec
dec
stos
dec
cmp
jle
lods
lock
jecxz
mov
popf
xor
test
jp
adc
jmp
movsl
cmp
into
gs
jnp
xor
add
fcmovu
lret
js
and
loope
jmp
fsubrl
adc
xor
xor
std
andl
test
cmp
movsb
xchg
jmp
and
dec
ja
xchg
push
cmp
mov
jmp
imulb
fs
lods
mov
lock
lret
in
int
mov
push
imul
insb
fnsave
xchg
xchg
jns
sarb
push
loop
loopne
in
fadds
dec
iret
repz
bound
dec
lock
pop
lahf
mov
cltd
clc
mov
into
mov
roll
bound
xor
push
mov
mov
sahf
cwtl
pop
mov
xchg
aaa
ja
insl
cmp
iret
pushf
into
mov
or
lret
cmp
mov
cmpsb
sub
push
arpl
pop
mov
stos
mov
jo
addl
sbb
add
or
stos
add
aam
mov
jecxz
sub
inc
divb
dec
sub
ret
das
mov
shl
mov
cwtl
cs
stc
and
sub
leave
lock
sub
arpl
xchg
jnp
test
or
mov
sbb
mov
outsl
pushf
cltd
mov
int3
xor
or
cmp
lahf
sbb
add
jecxz
in
lods
push
mov
mov
shrd
shl
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
and
pop
adc
aaa
cli
adc
add
stos
xchg
imul
shl
or
jp
sti
rcrb
fmull
mov
shrl
jnp
movsb
xor
push
sub
add
pop
xchg
sarl
mov
push
mov
lds
movsb
inc
mov
and
push
movsl
cmpsb
gs
cli
cld
or
imul
ljmp
sub
icebp
sbb
push
enter
lea
mov
rclb
loop
and
dec
xchg
cld
sbb
ficoml
out
pop
test
or
lcall
mov
repz
lahf
lret
mov
push
jno
fsubr
pushf
out
mov
cmp
rdmsr
std
imul
mov
xor
pushf
in
lock
jne
dec
insl
jg
xchg
pop
mov
mov
adc
adc
aam
in
lods
mov
push
dec
mov
mov
and
out
adc
shrl
xchg
ljmp
inc
mov
push
out
imul
ja
jo
sbb
inc
or
lret
xchg
xchg
out
pop
adc
mov
stos
mov
cmp
adc
sub
fstpt
outsb
arpl
xlat
xor
pushf
inc
cmp
jno
push
inc
mov
mov
stos
dec
push
xchg
je
push
sbbl
popl
mov
packuswb
mov
fucom
pop
push
add
dec
imul
adc
sub
into
aam
mov
outsl
add
xchg
dec
dec
xchg
inc
rcrb
add
add
sarb
cltd
xor
clc
imul
movsb
cltd
pop
ss
outsb
fcoms
mov
xchg
dec
pop
sub
pusha
outsl
push
xor
dec
cmp
sbb
test
addb
lahf
lods
or
enter
jmp
mov
pop
xchg
jae
jbe
push
push
add
xor
sbb
faddp
inc
aad
loop
xchg
sbb
sti
incb
push
out
push
jle
jae
add
loop
push
div
fwait
dec
push
in
xchg
mov
clc
xor
add
loope
stc
add
sub
xchg
cmp
fs
shrl
sub
gs
jl
lcall
push
push
mov
and
shlb
pop
cmp
loop
mov
fwait
mov
sub
fdiv
or
jae
cwtl
negb
push
push
ljmp
icebp
ret
insl
adc
cs
ss
jmp
fcomp
sarb
cli
mov
pop
mov
pop
loopne
jnp
or
sub
call
jno
mov
xor
mov
jge
rcl
fs
in
add
in
sbb
movsl
rclb
in
mov
or
inc
mov
xchg
std
jmp
pusha
imul
cmp
ret
fwait
or
fcomps
or
rorb
push
fimuls
cmp
imul
inc
imul
push
test
lods
cmp
jecxz
push
icebp
fcmovbe
dec
testb
insb
pop
push
arpl
push
fstpl
push
adc
inc
xor
decb
addb
sub
std
mov
push
clc
mov
jp
not
mov
aam
int
mov
pop
es
pop
jne
sahf
fdivr
ljmp
mov
mov
pop
pushf
aaa
xchg
or
insl
aad
jb
pusha
sti
cld
cmp
sbb
cmpsl
dec
and
fidivs
aaa
and
fildl
rcrl
nop
push
or
daa
arpl
cmp
rcrb
inc
push
fimuls
movsl
add
out
and
mov
out
dec
xchg
or
dec
das
sbb
cld
loopne
out
inc
xor
mov
shld
xchg
cltd
out
xor
dec
dec
or
cmp
cmp
xor
sti
inc
stc
jp
mov
rorl
mov
sbb
cmp
arpl
add
add
sbb
mov
pop
push
xor
push
ficomps
adc
aaa
cli
adc
dec
and
adc
push
das
mov
mov
in
pop
sti
jno
xchg
test
clc
mov
sbb
sub
mov
imul
leave
test
inc
pop
jmp
notl
pop
out
add
dec
pushf
sub
push
jae
stos
jae
inc
jb
fidivrl
adc
insl
xchg
movsb
imul
pop
mov
xchg
scas
jmp
push
dec
sub
arpl
dec
fwait
pusha
adc
aam
arpl
test
inc
or
scas
clc
push
aam
insl
sbbl
int
sbb
jo
jg
js
jecxz
rcl
xor
push
jl
adc
lret
gs
jne
shrl
xor
fcmovu
mov
in
push
out
cmpl
jb
mov
and
sbb
pop
add
mov
jg
rol
mov
push
mov
int3
push
push
pop
jge
adc
std
rcr
cmc
xorps
vsubps
outsb
movsl
sbb
inc
cmpsb
mov
and
movsb
jmp
aas
dec
jo
icebp
sub
adc
push
cltd
enter
in
jl
nop
shrl
adc
sbb
mov
adc
xchg
std
xlat
jbe
push
push
lods
mov
inc
lock
in
cmpsl
scas
push
jp
fsubrp
daa
scas
and
sbb
sarl
jbe
jecxz
out
ds
mov
or
xor
xchg
mov
pop
mov
mov
punpcklwd
lock
adcl
inc
cmc
in
js
and
cmpsb
mov
stos
stos
imul
es
repnz
in
lock
lea
lcall
xchg
sub
mov
mov
aas
xchg
das
fwait
jb
cmp
inc
lock
xor
movsl
ljmp
xchg
fidivs
xor
stos
dec
push
mov
sub
jl
push
ret
icebp
mov
or
cmc
inc
dec
aam
gs
add
add
mov
fwait
adc
lret
sbb
popf
shlb
jb
repz
xchg
mov
lea
or
popa
jbe
push
out
xor
sarb
popa
mov
and
and
pop
lods
insb
mov
in
cmp
xchg
or
mov
jecxz
xor
nop
les
pop
test
adc
and
addr16
xor
mov
xlat
mov
mov
adc
gs
rorb
fdivrs
pop
pop
pop
jae
mov
push
mov
insl
xchg
and
aad
int3
cmp
dec
test
fcoms
cwtl
inc
xchg
lret
mov
insb
sub
jmp
outsb
cmp
push
ss
ret
test
sbb
es
ficoms
dec
push
inc
inc
pop
xchg
sbb
inc
aam
sub
sub
or
fstpt
pop
push
cmp
push
fisubl
out
and
jp
mov
dec
insl
pop
lret
ja
adc
movsl
xor
addr16
inc
mov
mov
frstor
fbstp
jne
jmp
sahf
pop
adc
lea
pusha
add
push
cltd
lds
sbb
xchg
inc
cmpsb
movsb
pushf
js
cli
mov
enter
mov
lock
nop
fistps
inc
sarl
adc
ret
popa
fwait
push
rcl
fwait
push
jmp
pop
pop
in
sub
jle
js
dec
sub
in
pusha
xchg
xor
sub
cwtl
xlat
aas
test
mov
mov
adc
ffreep
stc
push
mov
push
dec
cltd
rorl
jno
push
lret
push
ret
test
mov
mov
push
inc
std
movsl
push
inc
mov
dec
test
mov
ret
dec
jecxz
xchg
out
jns
push
movsl
mov
leave
push
push
mov
xchg
push
enter
xor
hlt
lret
inc
add
push
jae
mov
data16
and
jmp
mov
xchg
data16
xchg
push
or
dec
popf
test
xchg
mov
out
sub
push
pop
nop
jo
and
dec
shll
sbb
shr
not
mov
sbb
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
stc
add
adc
cli
adc
idiv
in
lcall
ss
fidivl
sbbl
or
sbb
pop
add
jns
xor
lahf
pop
cmc
cltd
or
stos
push
mov
jns
jbe
ds
loop
xlat
xor
call
sbb
lea
mov
arpl
jp
dec
jbe
mov
ja
sbb
dec
cmp
and
inc
sahf
cmp
adc
cmc
pop
or
ret
fisubl
lods
movsb
stos
lds
xchg
fs
push
fnsave
jp
ljmp
addr16
or
hlt
xor
or
or
aam
xchg
or
mov
sub
stos
lret
outsl
push
pop
lret
push
dec
or
addr16
std
sbb
insl
loope
sti
jge
xchg
inc
jbe
out
jecxz
and
cmp
sbb
orb
or
clc
push
iret
xchg
xchg
jmp
ret
add
sub
js
lods
in
aad
mov
mov
inc
addl
adc
lahf
leave
add
fdivs
iret
outsl
popa
mov
fucom
lea
jnp
push
mov
cs
movsb
sbb
inc
in
jno
add
push
fdivl
dec
aad
lahf
add
movsb
movsb
jg
test
mov
inc
fs
sbb
pop
fwait
push
test
sbb
jb
xor
xor
or
jnp
dec
out
cld
xchg
or
and
inc
xlat
dec
aam
sbb
cmpsl
fsubrs
xchg
stc
jb
push
pop
divl
xchg
out
push
sahf
mov
and
inc
ds
mov
cld
test
mov
lea
pop
xor
lock
inc
leave
xlat
cwtl
add
lds
cld
sbb
fcmovne
scas
mov
dec
scas
stc
rcrb
ret
cmp
in
insl
and
dec
outsl
sub
push
dec
ja
pop
ss
pop
repnz
mov
insb
shll
xchg
inc
dec
pop
imul
xor
jnp
cmc
add
sub
nop
outsl
aaa
nop
loopne
and
xchg
mov
dec
lods
cmc
mov
ret
push
fiaddl
cld
gs
int
jg
lods
incb
xchg
mov
mov
bound
loope
jmp
mov
push
xor
mov
in
js
jg
or
cmp
push
mov
or
cmc
push
stos
fwait
and
xchg
js
inc
mov
rcl
add
clc
mov
cmp
and
insl
pop
insb
push
leave
xchg
jecxz
lds
imul
mov
lcall
std
dec
loopne
out
loop
jnp
push
adc
fistpll
cld
jo
sbb
adc
add
dec
popf
ja
inc
sub
gs
bound
shll
pop
idivl
shlb
pop
xor
sahf
mov
push
cwtl
test
pop
xchg
mov
mov
push
bound
push
mov
cs
xlat
push
call
or
cltd
xor
cli
mov
sarl
repz
sahf
add
fldl
ret
dec
dec
push
adc
fwait
ja
jmp
jns
loopne
bound
adc
pop
xchg
inc
and
mov
cmpsl
fistpl
out
test
mulb
push
test
aad
sbb
xor
lret
mov
addr16
pop
cmpsb
cmp
add
adc
lret
adc
inc
pop
and
adc
dec
jns
pop
daa
mov
jo
jg
cltd
jnp
mov
subl
shl
jecxz,pn
shrb
xor
mov
inc
adc
in
cmpl
xorb
int3
repnz
aam
cmp
subl
out
sub
shlb
pop
loop
ja
sbb
push
xchg
popa
mov
fucomp
mov
enter
mov
sti
loopne
or
cmpsl
mov
and
fsubrl
out
dec
or
stos
iret
vcvtsd2si
pop
inc
sbb
inc
lret
lret
in
xlat
out
out
jnp
and
mov
cmp
xchg
nop
xor
lcall
inc
int3
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
mov
adc
adc
xchg
mov
loop
dec
test
jmp
popf
mov
clc
pusha
jne
fimull
cmp
add
dec
das
rol
shl
gs
mov
dec
jp
lock
sbb
pop
adc
sahf
inc
test
pop
pop
push
jae
mov
inc
les
and
mov
xchg
repnz
stc
dec
cmp
cmpsb
test
adc
push
dec
push
cmp
mov
inc
xchg
jge
stos
inc
pop
cmp
dec
daa
pop
lods
div
inc
into
or
or
cmp
out
or
imul
in
jo
jbe
icebp
movsl
push
and
mov
loope
pop
out
clc
cmpsb
shlb
arpl
stos
or
nop
fisubrs
jnp
mov
inc
aaa
popf
fistps
into
lods
bswap
addl
pushf
push
xlat
movb
adc
bound
addb
inc
cmp
or
jmp
push
arpl
rolb
jg
arpl
and
shll
out
stos
ljmp
cld
mov
xchg
arpl
sub
push
adc
fisttps
lds
dec
pop
and
sub
lods
add
sub
push
xor
fwait
inc
xlat
leave
add
movsb
push
outsl
les
adc
and
xor
cmc
daa
call
mov
in
jge
std
push
loopne
out
mov
std
xor
flds
add
jae
sub
sbb
xchg
mov
mov
lcall
and
jne
mov
push
movsl
into
xchg
push
enter
mov
xor
mov
jp
stos
mov
xchg
pop
repnz
incl
cmp
sti
cmovne
push
sub
andl
mov
out
sbb
jg
movsl
outsl
scas
mov
sub
or
add
jbe
and
jo
cltd
add
ffree
and
sahf
xor
test
add
hlt
jp
dec
or
add
xchg
fistpl
mov
rcrb
add
jecxz
or
adcl
sahf
pusha
mov
and
mov
adc
dec
mov
cmp
int3
insl
mov
in
mov
jmp
sub
jle
out
outsb
fstpl
into
xor
adc
out
fisubl
incb
add
mov
imul
repnz
mov
lret
clc
jae
icebp
imul
push
aam
xchg
sbbb
das
jmp
mov
cmp
dec
xor
or
in
imul
ljmp
clc
movsb
jmp
xchg
sbb
aam
rcr
orb
push
mov
ljmp
dec
xchg
cmpsl
mov
leave
and
sarl
inc
pop
adc
stos
jmp
les
xchg
dec
adc
push
inc
sbb
faddl
push
push
addl
aad
and
jo
or
cmp
call
sub
loope
or
arpl
pop
mov
add
cmp
mull
jecxz
mov
bound
jnp
in
or
push
test
dec
test
cmpsl
fcompl
xchg
ja
ljmp
ja
aas
rol
leave
cmp
dec
outsb
shlb
ret
xor
imul
fisubs
lods
lret
mov
pop
jle
lods
add
adc
test
out
out
xor
xchg
xor
int3
sbb
js
inc
aaa
jg
and
cmp
push
hlt
or
add
aam
push
mov
neg
sub
inc
int3
add
mov
mov
inc
popa
push
insl
les
pop
enter
loop
xchg
call
sub
add
fidivs
jb
hlt
sbbl
adc
popa
push
jmp
inc
pop
xchg
inc
adc
mov
dec
xor
fucomi
icebp
jle
push
mov
lret
out
flds
dec
cwtl
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
ljmp
aaa
cli
adc
out
sbb
sub
lock
sub
fwait
inc
dec
pop
mov
out
cltd
les
out
in
cwtl
ds
pop
hlt
pop
out
jmp
loope
test
ja
jmp
mov
test
arpl
stos
or
sbb
inc
in
loopne
fstps
push
mov
aaa
and
mov
ud2
out
lds
dec
loopne
mov
out
les
int3
or
push
gs
add
insb
insl
mov
test
push
loop
shrl
xor
fistpll
fsubl
cwtl
stos
arpl
xor
jmp
cli
cmp
pushf
mov
mov
clc
repz
pop
pop
xchg
inc
mov
cmp
out
mov
cltd
dec
scas
loop
dec
jae
repnz
cs
cmp
and
xchg
cmp
jmp
int
mov
pop
push
push
jns
add
mov
or
mov
mov
mov
cli
das
and
jno
add
sub
out
pop
cmp
cmp
dec
rcr
imul
into
shlb
scas
test
fiaddl
mov
mov
das
pop
adcb
jns
pop
mov
sbb
test
fsts
xlat
mov
lds
xor
mov
pop
test
push
cmp
arpl
xchg
add
decb
xor
and
scas
xchg
inc
neg
inc
mov
add
xor
xorb
lods
cld
test
ljmp
mov
cmpsb
gs
inc
cltd
pop
mov
xor
out
in
cmpsb
mov
adcb
dec
push
hlt
dec
and
std
out
fisttpl
pop
cmpb
or
loop
push
clc
jecxz
mov
add
cltd
ss
in
and
sbb
xchg
lock
repnz
adc
clc
out
jae
sbb
fidivrl
es
or
pop
add
sub
sbb
add
sub
bound
and
sbb
sar
mov
jae
cmpsb
xchg
test
in
xchg
das
xchg
outsb
cmp
jb
idiv
ljmp
test
inc
push
aas
xor
scas
add
mov
add
dec
dec
iret
loopne
scas
enter
in
lret
inc
mov
jmp
or
aad
mov
mov
jge
pop
adc
jnp
sahf
je
loop
fisubrl
adc
lea
sub
mov
in
shll
mov
or
loopne
dec
cltd
mov
call
scas
scas
cmpb
test
sub
hlt
adc
stos
pop
rcll
enter
xchg
pop
clc
ror
mov
inc
xchg
cmp
adc
stos
fldt
dec
int
cmp
mov
mov
out
and
or
or
fistpll
cli
pop
sahf
xor
into
jg
js
mov
mov
shll
mov
adc
jg
das
mov
sbb
ds
test
jle
sbb
arpl
ret
aaa
inc
mov
jmp
cli
adc
clc
rcrl
push
sub
mov
inc
jecxz
stos
xchg
adc
cmp
scas
dec
inc
call
fwait
cmp
and
jp
cs
mov
ds
mov
pop
clc
es
mov
sub
loopne
mov
or
filds
sub
daa
mov
mov
push
ror
xor
jecxz
cmp
lcall
mov
inc
pop
rep
cld
adc
mov
test
mov
mov
or
add
imul
or
outsl
add
and
jl
sbb
pusha
and
mov
xchg
push
mov
push
movsb
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
test
add
adc
cli
adc
mov
outsl
outsb
lret
jge
test
les
or
sub
push
add
sub
clc
stc
loope
movsl
adc
pop
outsb
rcll
pop
sbb
sub
push
nop
test
jg
fcompl
ret
mov
and
xchg
fwait
shll
cmp
repnz
sub
shrb
mov
enter
je
sub
and
jmp
lods
aaa
adc
fsts
mov
into
dec
je
sbb
jne
mov
mov
xlat
push
xchg
xor
fistpll
adc
in
outsb
mov
or
in
int3
hlt
pop
cmpsl
pop
add
fdivrl
xor
xchg
push
in
pop
jbe
loope
lea
sub
jno
mov
sbb
add
cld
sbb
into
xchg
cmpxchg
fisttpl
rcrb
and
cmp
lret
cmc
push
xchg
sbb
sub
inc
dec
jle
jl
add
fiadds
mov
push
jecxz
iret
sbb
into
dec
lea
mov
mov
clc
shll
jo
mov
cmovg
test
mov
rcrb
mov
fistl
xor
adc
or
or
jg
arpl
pop
lret
dec
fwait
adc
push
jmp
js
xchg
cld
pop
cmp
lret
xchg
jne
sbb
push
add
cmp
loop
mov
mov
ret
mov
xchg
xchg
xchg
mov
aaa
in
xor
or
mov
loop
xchg
pusha
mov
dec
out
inc
popl
aaa
popf
stc
pop
sbb
push
mov
sahf
and
mov
add
outsb
mov
xchg
fdivrl
mov
jbe
roll
iret
push
mov
mov
xor
lock
adc
jle
add
into
fimuls
mov
jecxz,pn
mov
adc
jg
mov
pop
sub
push
lods
add
inc
adc
gs
and
cmp
test
fnsave
repnz
mov
mov
mov
cmp
mov
icebp
and
lods
lret
sbb
ljmp
jmp
push
cmp
fcomi
jle
jecxz
jle
cltd
mov
inc
lods
mov
lea
imul
xor
frstor
jl
mov
fdivs
cs
hlt
mov
pop
bound
popf
add
mov
rcrl
mov
in
add
mov
popa
out
aad
dec
xor
sarb
lods
jne
mov
mov
and
xchg
das
cmp
mov
es
and
rol
lcall
call
push
xor
addr16
mov
inc
cmpsb
imul
sbb
push
inc
sbb
jle,pn
adc
cld
in
arpl
pop
inc
jb
pushf
mov
movsl
rcrb
addr16
mov
sbb
test
flds
xchg
cli
pop
rolb
sbb
nop
inc
jo
lock
lock
repnz
xchg
hlt
inc
orl
repnz
mov
inc
pop
xchg
pop
daa
inc
loop
mov
mov
and
popf
cmp
nop
xlat
add
icebp
out
adc
mov
daa
aam
push
movsl
aam
push
inc
rcrb
scas
add
stos
pop
movsb
jge
xor
call
lock
xchg
adc
pop
and
mov
subb
jno
adcl
das
xchg
je
cmc
cld
inc
dec
loope
mov
fs
jle
cmpsl
fs
loop
mov
dec
fwait
aad
lret
mov
push
pop
lds
fimuls
add
mov
jns
xlat
cmp
pop
sub
leave
ja
pop
push
mov
ficoms
popa
adc
sbb
mul
insl
adc
jmp
adc
aaa
or
push
out
outsl
xor
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
test
jmp
adc
cli
adc
pop
or
shrb
jne
mov
data16
and
jle
nop
lahf
jecxz
aaa
add
xor
cmp
into
hlt
pusha
xchg
lret
jo,pn
cmp
cwtl
sbb
mull
lods
add
js
mov
in
xor
jle
ror
inc
and
push
sbb
fbld
cmp
in
lret
adc
loop
push
dec
sbb
xor
ds
dec
cmp
inc
lods
movsb
adc
or
imul
test
stc
sub
dec
mov
pop
push
roll
sub
inc
dec
mov
outsl
jno
add
push
or
mov
lds
push
mov
cmpsl
cmp
xchg
enter
xlat
mov
stc
mov
movsl
pop
bound
sbb
sbb
loop
and
add
push
or
addr16
sub
jecxz
mov
icebp
in
lods
xchg
test
shl
lods
mov
sar
push
pop
xchg
and
ret
mov
ljmp
fdivrp
test
mov
jnp
cmp
cwtl
popf
adc
xlat
stc
mov
lret
mov
dec
in
stos
mov
adc
loope
mov
int
inc
xor
cld
adc
inc
cli
andb
loop
push
pushf
sbb
inc
pushf
lahf
insl
outsl
or
xor
xchg
adc
shl
dec
cmpsb
and
frstor
fsin
and
inc
inc
sub
fs
out
mov
jne
pop
rcrb
fsts
mov
mov
pop
cmpsb
inc
adc
cmp
inc
sbb
push
inc
dec
mov
test
scas
xor
les
mov
fnstenv
lods
data16
sbb
or
jo
mov
lock
sub
outsl
hlt
insb
push
xor
enter
xchg
frstor
lods
lret
mov
or
mov
mul
dec
push
pop
daa
push
vmread
cmpsb
adcb
sub
mov
mov
loop,pt
adc
mov
scas
gs
aam
test
out
daa
mov
cs
int
es
push
fwait
fbld
inc
cmp
lretw
mov
icebp
xchg
sub
add
mov
push
sub
xchg
repz
sub
es
aaa
loopne
jne
adc
mov
mov
movsb
lret
mov
mov
xchg
pop
sbb
xchg
ljmp
dec
mov
adc
push
push
fs
xchg
scas
in
and
pop
sbb
cmc
pop
pop
fs
daa
pusha
fdivl
xor
mov
jl
rol
pop
inc
push
into
inc
cmp
sbb
leave
ret
xlat
fwait
push
call
leave
xchg
push
nop
loopne
push
fisttps
jl
ljmp
or
gs
cmpsl
jecxz
xchg
inc
jl
repz
cmp
cmc
jge
cld
arpl
popa
jle
add
test
jbe
mov
je
xchg
aad
cmpsl
mov
jne
mov
sbbl
ja
mov
in
sub
sbb
mov
and
fs
std
sarl
sbbl
lcall
push
ss
pop
xchg
in
push
in
jg
ss
push
rorl
into
inc
lret
xchg
movsb
mov
xor
in
mov
inc
insb
sbb
jecxz
cmp
dec
lods
adc
das
inc
rorb
xor
xor
cli
pop
push
inc
mov
pop
add
adc
push
mov
lea
xchg
pushf
pusha
mov
dec
add
sbb
insl
add
add
lods
push
sbb
sbb
xchg
adc
cmpsb
hlt
add
leave
pop
sbb
mov
aaa
push
ss
clc
sbb
jns
adc
or
lcall
sub
mov
ds
popf
or
out
lea
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
loope
xor
repz
aaa
cli
adc
fnstsw
push
outsb
pop
hlt
push
test
mov
and
mov
pop
adc
std
repz
sub
jnp
bound
pop
push
mov
and
cltd
inc
cwtl
enter
lea
mov
mov
les
and
cltd
outsl
inc
jo
in
movsl
sarb
push
jp
pusha
xchg
push
fs
pop
dec
push
in
das
xor
ret
mov
jmp
mov
in
jns
sub
pop
add
sub
mov
adc
or
sbb
in
add
inc
mov
mov
lea
iret
inc
imul
adc
sti
pushf
sti
outsl
mov
push
in
adc
shlb
sbb
and
js
insb
lret
stc
cmp
xor
call
dec
adc
popf
clts
aaa
dec
xorb
sub
sbb
ret
rcr
jmp
orb
pop
nop
or
and
flds
imul
add
movsb
mov
pop
les
xor
pop
push
pop
adc
or
std
and
into
or
scas
and
ret
jae
jbe
mov
mov
rcll
sbb
and
out
xchg
jl
stos
cmp
test
lret
aaa
push
or
pop
sbb
test
pop
adc
je
loope
or
aad
lret
stos
cmp
stos
rorb
mov
out
xchg
rorb
je
pop
stos
push
fs
push
dec
fnsave
adc
mov
aas
lods
xor
fists
jecxz
jno
mov
idivb
jno
mov
imul
mov
outsl
fsubl
insl
rcr
xor
sub
incb
xchg
stc
outsb
dec
out
test
xor
cli
sbb
movb
and
pusha
xlat
add
stos
xchg
and
mov
xchg
out
imul
xor
icebp
cmpb
push
mov
js
add
imul
outsl
scas
jmp
mull
push
gs
mov
xchg
shrb
sbb
cli
scas
mov
aas
jecxz
pop
push
popf
repz
mov
sbb
or
std
nop
inc
jge
dec
mov
jmp
arpl
enter
push
and
sbb
les
dec
jnp
push
aam
xchg
cmp
adc
test
xchg
sub
subb
sub
mov
mov
or
xor
mov
dec
movsl
fnstenv
dec
adcb
inc
add
hlt
push
cli
sbb
notl
out
js
lds
call
pop
xor
inc
push
or
lds
mov
insl
fidivs
shll
cmp
sbb
xor
xchg
repz
lret
and
rcrb
cs
mov
dec
mov
test
sbbl
mov
call
inc
imul
jo
aam
sbb
daa
popf
leave
cmp
mov
aas
mov
mov
mov
hlt
jecxz
sub
stos
arpl
add
je
xor
iret
andb
rcrl
pop
or
inc
mov
test
ror
adc
ljmp
push
push
hlt
clc
daa
mov
aam
sub
jmp
xchg
sbb
jg
jg
arpl
lock
ds
loop
sub
adc
fmull
bnd
pop
xadd
push
outsl
pushf
adc
or
das
cmp
sub
push
jo
test
cmpsb
fstpl
test
jmp
xorl
lods
cli
ficoml
sbb
mov
les
push
mov
fisubrl
scas
push
jl
or
push
pop
push
loope
call
outsb
inc
add
sub
ja
push
xlat
lods
cwtl
pop
mov
pop
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
jp
mov
aaa
cli
adc
scas
xchg
ret
fwait
repnz
test
dec
out
pop
pop
mov
xor
sub
ret
pushf
xor
adc
xor
mov
mov
sarl
push
mov
iret
xor
ja
js
shll
stos
call
jp
lods
dec
dec
test
jmp
xor
mov
jl
push
loop
arpl
or
jae
cs
jno
les
loope
std
jl
test
in
cmp
pop
in
push
in
insl
xchg
pop
push
sub
adc
inc
jmp
jnp
lea
inc
ja
xchg
mov
mov
fsubrs
push
mov
jmp
jp
lock
add
xlat
hlt
or
or
dec
adc
mov
scas
cmp
fsubp
cs
std
mov
mov
aad
cli
das
cmp
jmp
inc
add
fadd
jge
cmpsl
cmp
scas
cmp
adc
or
popa
data16
sti
cmp
jne
cmp
fdivp
ret
movsb
fildll
fisttpl
and
outsw
popa
out
test
cli
clc
scas
inc
sbb
sub
mov
jo
cmp
movsl
fsubs
dec
and
pop
out
inc
dec
sub
xchg
repz
add
jle
mov
imul
jmp
adc
jmp
mov
add
jns
mov
sahf
push
inc
enter
pushf
xrelease
mov
fisttpl
in
imul
sbb
outsl
push
sub
test
call
push
sbb
in
fnstenv
sub
in
std
movsl
fadd
mov
mov
jb
add
xchg
and
xlat
lods
adc
into
xor
loop
adc
pop
std
mov
stos
jne
scas
ficomps
ret
xchg
mov
push
jb
aam
hlt
int3
push
jecxz
test
cmp
imulb
push
aas
add
adc
xchg
or
mov
dec
ja
push
out
adc
inc
and
push
pop
bound
xor
mov
or
pop
pop
adc
pop
aas
and
pop
jg
xchg
cmp
addr16
sbb
push
jae
lock
inc
push
cmpsb
pop
sub
js
scas
or
sbbl
pop
sub
roll
xchg
lret
mov
push
dec
mov
mov
clc
clc
jae
mov
push
add
mov
pop
lods
cmovns
cmp
jne
outsl
dec
and
in
ljmp
iret
cld
sahf
inc
cmp
popf
xor
xchg
sbb
mov
mov
push
push
shlb
xor
loop
adc
dec
loopne
jle
and
pop
push
mov
aad
ret
mov
and
icebp
aaa
fistpll
inc
pop
popl
mov
pop
pop
jp
shrb
test
mov
fstl
dec
jne
adc
aaa
repnz
cmp
std
arpl
sbb
inc
mov
sbb
sub
mov
push
int3
cmpsb
mov
or
or
lahf
mov
and
jle
andb
fs
neg
lds
test
addl
out
out
or
aam
sbb
xor
sbb
es
out
and
jmp
es
dec
xor
add
es
outsb
inc
cmc
xor
out
pop
dec
mov
pop
pop
jnp
jle
sub
in
lods
stc
mov
pop
push
clc
pop
aaa
cmp
sub
jl
adc
insl
sub
lds
cmpsb
call
outsb
cltd
and
ret
adc
push
xchg
ljmp
pushf
mov
leave
jl
sub
mov
xbegin
loop
in
pop
fs
mov
inc
lahf
mov
sbb
mov
push
mov
sbb
xor
xchg
jns
mov
adc
inc
pushl
or
imul
cmc
inc
push
and
jmp
enter
inc
insb
and
inc
pop
cltd
sub
imul
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
jbe
push
mov
cli
adc
or
ljmp
test
sbb
lods
popa
into
jge
pop
pop
les
and
jg
pop
in
or
je
mov
mov
mov
push
adc
aam
ds
xchg
pushf
int3
fldenv
imul
ret
jbe
mov
sti
loope
sarb
sub
xor
xchg
sub
mov
cmp
or
adc
mov
test
dec
scas
xlat
cwtl
orb
lods
cs
or
push
mov
lds
sbb
adc
mov
mov
mov
push
add
mov
dec
inc
std
dec
xor
pop
pop
out
pop
jae
jmp
rcrl
pop
stc
addr16
mov
mov
mov
out
push
jne
xor
ja
jmp
lods
and
push
inc
cld
add
scas
mov
sti
leave
loop
lahf
push
mov
xchg
scas
cmp
jne
fwait
xchg
movsb
lcall
push
jns
in
xchg
pop
test
adc
outsl
cs
negl
cltd
mov
into
rcr
mov
add
imul
push
std
rcl
add
and
jg
fs
loope
or
fs
cwtl
in
inc
lahf
cmp
leave
pushf
cmp
sbb
fnstsw
dec
inc
jmp
mov
cmpsl
lret
xchg
loope
pusha
popf
cmp
arpl
dec
mov
xchg
imull
jnp
fldenv
out
ds
aas
xchg
fcmovb
mov
cmovo
ss
and
je
cmp
mov
lock
adc
lret
ja
imul
mov
mul
xchg
sbb
push
mov
and
leave
cmp
mov
add
sub
ret
pop
mov
arpl
cli
inc
sub
xchg
jecxz
test
dec
cmc
fwait
je
mov
xor
aam
jbe
lcall
sub
imul
mov
icebp
xchg
loop
mov
rcrb
dec
lods
fldenv
pushl
test
mov
ja
xchg
push
stc
cmp
xchg
pushf
addr16
xchg
mov
jae
cs
les
adc
dec
insl
rclb
loopne
mov
mov
stos
sbb
mov
mov
xchg
pushf
jmp
repnz
jmp
loopne
cli
dec
jge
push
into
sbbl
fs
fstl
mov
mov
mov
or
or
sub
mov
xlat
and
je
or
enter
shl
cmp
xchg
sbb
pop
rolb
fadd
fisttpll
popf
ret
dec
dec
rcrb
shl
out
repz
lcall
in
lahf
sbb
push
je
test
cmp
fcmovb
das
lcall
xor
sbb
inc
xlat
sbb
ret
xor
leave
in
mov
movsl
lds
xor
mov
insl
fadd
push
pop
pop
xor
cld
iret
xor
push
xor
pop
subb
mov
pop
das
adc
ret
pusha
adc
sub
out
jne
imulb
call
add
add
pop
cmp
mov
inc
aam
xor
mov
outsl
cmp
stc
stos
data16
mov
xchg
add
and
sbb
je
push
mov
test
adcl
xchg
inc
push
out
stos
xor
aas
push
pop
lods
mov
pop
jo
or
pop
scas
push
iret
loop
cmc
xchg
cli
add
push
xchg
jmp
adc
dec
faddp
neg
lret
and
rorb
mov
cmpsb
mov
fnstsw
sbb
mov
ror
add
pop
fsub
ret
mov
lahf
xor
orl
fwait
push
pop
fcompl
add
shlb
std
outsb
push
push
xchg
mov
loop
cld
lret
mov
gs
jmp
lea
adc
leave
xor
inc
mov
aaa
cli
adc
aas
or
jnp
ljmp
jmp
lock
adc
jp
mov
mov
mov
push
jno
push
roll
jg
sbbb
cltd
pop
or
xchg
lret
shlb
jne
stos
pop
fildll
lods
lldt
cmp
cmp
pop
and
stos
repnz
sbb
movl
lahf
es
sub
sbb
inc
cs
int3
enter
jl
xor
cltd
xlat
or
xchg
sbb
pop
sub
jns
testb
mov
iret
shrl
das
inc
rcrl
inc
arpl
stos
ss
and
into
mov
mov
imul
data16
stc
std
cmp
sbb
adc
iret
cmpsl
push
fwait
xlat
add
fwait
aad
push
ficompl
cwtl
mov
popf
shlb
pusha
xchg
aam
test
leave
pop
push
js
xor
add
movsb
les
out
inc
jp
scas
or
cli
fistl
repz
and
dec
cmp
rolb
popa
popa
daa
and
sahf
lods
sbb
aaa
inc
pusha
xchg
push
into
jno
out
mov
mov
std
mov
adc
imul
ljmp
mov
ja
inc
jp
pop
inc
sarl
ljmp
repnz
sub
aas
xlat
sub
insl
orl
mov
pop
jno
sahf
movsb
andl
push
lret
mov
aad
mov
sbb
add
ret
and
xor
inc
sbb
mov
dec
mov
mov
dec
jno
mov
cli
adc
mov
ret
pop
or
mov
mov
adc
in
outsb
mov
xor
nop
sub
xlat
outsl
mov
ss
insl
dec
push
cld
int
and
inc
insb
shr
adc
dec
jae
fstpt
hlt
loope
pusha
adc
xor
fucomi
bound
add
push
xchg
sub
and
jl
jp
popf
inc
mov
add
xchg
cmp
daa
stos
and
imul
dec
iret
lret
cmp
sub
push
mov
sbb
pushf
iret
fnstenv
mov
repz
xchg
insl
mov
in
mov
push
jmp
aas
pop
rorb
adc
sbb
movsb
sub
sub
sahf
push
xorl
lret
movsl
stos
ljmp
fnsave
loope
ljmp
push
dec
lret
insl
out
and
adc
xlat
mov
mov
mov
and
xor
test
icebp
lcall
std
clc
popf
add
jno
sbb
adc
out
add
sarl
jecxz
push
adc
movsl
xchg
stos
jl
shlb
or
sub
push
mov
push
push
and
ljmp
clc
aaa
repz
adc
lcall
xchg
jno
pop
mov
ret
imul
lret
out
call
inc
adc
aas
mov
mov
xor
mov
jmp
dec
rorb
lcall
lock
aas
das
dec
inc
hlt
popa
mov
out
cmpsl
cld
push
loope
icebp
push
pushf
dec
bound
mov
cmp
jnp
js
sbb
stos
lret
push
mov
pop
jl
or
mov
xchg
aad
out
push
iret
push
xlat
ja
pop
loop
lahf
jnp
in
mov
lods
pop
push
aaa
fmull
xchg
mov
dec
inc
lea
dec
int3
arpl
imul
pusha
lock
insl
xchg
mov
in
dec
scas
les
aad
imul
or
repnz
and
repz
into
and
arpl
jmp
mov
dec
xor
dec
cmp
test
cmp
je
rcrb
ret
test
insl
mov
pusha
jnp
loope
lret
sahf
pop
add
adc
leave
enter
test
rcrb
and
out
dec
jle
pop
movsl
cli
sahf
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
adcl
leave
sti
mov
xchg
adc
pop
idivb
sub
push
stos
push
lock
out
xor
test
sbb
or
shrl
ljmp
sbb
mov
mov
shlb
cwtl
add
in
popf
ret
pushf
mov
dec
add
clc
pop
stos
mov
les
loope
or
lock
test
dec
loope
add
dec
rol
adc
rcrl
mov
orb
dec
test
adc
rcrb
shl
scas
dec
rcrl
pop
jmp
cmp
pop
pop
jo
inc
xchg
bound
pop
mov
sub
cmp
mov
mov
pop
inc
je
adc
pop
xor
outsl
xor
jae
dec
dec
stos
repnz
mov
jnp
xchg
scas
jno
pop
inc
mov
cmp
movaps
or
inc
jl,pn
andb
repnz
mov
movsl
xor
xchg
and
sbb
pop
pop
or
rorl
adc
cli
loop
mov
out
jae
test
push
nop
dec
sbb
dec
out
int
je
mov
xchg
cmp
push
mov
cmpsl
adc
push
fwait
and
mov
lea
call
repnz
notb
push
nop
ficomps
add
mov
loopne
aam
fnstcw
stc
in
push
fwait
scas
vpsrlq
or
push
lea
fwait
push
mov
ja
push
or
cmp
mulb
dec
jmp
mov
lahf
repz
or
push
mov
out
js
inc
sub
cltd
dec
adc
idivb
cld
pusha
add
xchg
in
pop
inc
inc
xor
call
test
je
in
mov
mov
das
add
notb
shlb
loope
out
into
outsb
pushf
cmp
rorl
dec
shl
jmp
mov
adc
sti
aaa
dec
inc
imul
aad
xor
and
lds
in
test
jge
push
adcl
adcb
pop
je
leave
mov
into
adc
jge
mov
or
mov
mov
hlt
mov
movsl
mov
jbe
rorl
movd
enter
mov
into
sub
ret
divb
insl
push
cmpsl
stc
adc
inc
or
inc
mov
add
fldenv
fcoml
cmpsl
cmc
icebp
daa
xchg
jg
inc
addr16
xchg
icebp
mov
sti
divl
ficomps
mov
and
lret
cmp
add
lret
sbb
mov
jnp
fsin
test
xchg
xor
pusha
push
inc
inc
and
add
inc
in
inc
cmp
lods
out
mov
rclb
outsl
push
or
ret
ffreep
je
dec
shrd
xlat
lea
mov
mov
sub
jp
insb
lock
shll
pop
ret
loope
aam
gs
sti
mov
sub
clc
mov
sbb
je
jo
test
mov
xor
and
dec
arpl
cmp
xor
in
push
ss
lret
dec
cmpb
jp
jmp
enter
and
aad
aaa
xor
sti
xor
add
and
fwait
jmp
push
and
dec
cs
cli
outsl
sbb
push
cmp
ret
and
mov
mov
das
xchg
fcmovb
mov
movsb
sbb
mov
xor
fistps
pusha
push
sub
sahf
loopne,pt
test
jo
sbb
add
xchg
mov
mov
cmp
cli
sbb
mov
repz
and
stos
aas
push
pop
mov
jbe
mov
mov
stos
mov
push
adc
ja
cwtl
mov
pop
stc
sbb
push
mov
out
push
into
mov
push
inc
dec
push
jl
sti
inc
mov
les
add
inc
mov
out
ret
sbb
pop
movsl
in
or
mov
fidivl
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
xlat
stos
push
push
adc
aaa
cli
adc
xchg
adc
pop
movsb
dec
pop
pop
sarl
xchg
aas
push
sbb
mov
xchg
xor
adc
imul
xor
fdivrs
lea
roll
xchg
pop
fucom
scas
lock
ljmp
pop
and
dec
pop
mov
push
bound
fstl
sbb
mov
mov
push
aaa
pusha
pop
push
loopne
mov
test
nop
sub
jg
sti
lcall
push
fstps
xor
pop
cmc
xchg
lahf
mov
test
xor
in
mov
and
lahf
scas
xchg
lods
push
iret
mov
push
dec
mov
aam
fnstenv
push
push
add
inc
mov
loop
or
mov
negb
cmp
pop
ss
pop
and
sbb
xchg
dec
and
call
sub
mov
orl
pop
mov
xor
mov
and
out
sbb
orb
jbe
scas
insl
or
jns
xor
mov
adc
lcall
imul
enter
insb
pop
xor
fmuls
ds
mov
jle
mov
pushf
out
cmp
pop
xor
push
rol
or
jp
jb
icebp
repz
fucomp
dec
mov
mov
lret
push
scas
sbb
mov
and
inc
inc
lds
decl
jo
adc
pop
into
mov
je
popl
adcl
in
mov
sub
pop
mov
inc
data16
dec
bound
jge
int
sub
or
leave
out
pop
test
mov
out
jl
insl
inc
into
pushf
popf
out
shrb
movsl
ja
lods
and
xor
js
or
loope
add
sti
jl
scas
pop
fidivrl
adc
imul
sub
repnz
aas
xor
test
frstor
jbe
cmp
cmc
dec
pop
or
icebp
xor
xchg
divl
xchg
enter
es
pushf
gs
sub
xchg
cmp
pop
adc
clc
icebp
popa
in
inc
stos
cmpl
pop
adc
jl
andl
push
sbbl
imul
xorb
fs
pop
fnstsw
jo
lcall
and
sub
bound
inc
or
mov
inc
stc
xchg
outsb
mov
dec
rclb
add
loope
mov
mov
rorl
mov
inc
inc
mov
rclb
bound
xchg
filds
mov
adc
xchg
inc
mov
dec
xchg
test
movsb
dec
pop
fisttps
ljmp
out
cmp
push
out
pop
jb
das
dec
push
cmp
inc
cmp
out
fwait
xchg
jne
xor
mov
out
jae
push
insl
icebp
ret
addl
stos
or
arpl
pop
and
or
movsb
ljmp
push
and
aad
mov
inc
in
inc
dec
dec
or
arpl
adc
test
ljmp
mov
jge
sbbb
insl
sti
mov
adc
popf
xchg
sub
push
rorb
sbb
push
fnstsw
popa
shrl
jle
jno
rorl
mov
shl
cmpb
cmp
pusha
or
sbb
mov
inc
dec
into
testb
js
scas
test
add
mov
mov
ret
xchg
insb
test
jne
mov
push
rcrl
fdivrl
adc
mov
xchg
mov
gs
pusha
scas
xorl
mov
xor
xor
lods
loop
fcompl
mov
das
test
inc
jb
aam
cmp
dec
push
dec
dec
fsubr
arpl
loope,pt
in
cmp
dec
mov
xchg
jbe
push
roll
xor
cmp
sbb
clc
repz
jb
jge
orb
jmp
mov
das
jnp
sbb
repz
pop
mov
push
inc
fadd
in
mov
hlt
push
xor
jmp
lods
cld
xchg
jmp
xchg
loope
test
lods
adc
aaa
cli
adc
imull
cmp
nop
fwait
das
mov
adc
in
cmp
rolb
mov
push
jmp
imul
sub
sysexit
inc
test
gs
divl
addr16
inc
xor
out
jecxz
pop
sbb
leave
into
ja
fwait
push
repz
js
jecxz
inc
movsl
push
mov
adc
inc
pop
sbb
push
test
fistpl
js
dec
hlt
pop
shrl
or
xchg
xchg
aam
mov
mov
into
or
mov
jae
inc
pushf
pop
sub
adc
subb
icebp
xor
nop
or
int3
inc
push
jl
cmp
mov
out
sub
out
or
jo
enter
bound
fdivs
xlat
ret
push
shrl
xchg
jg
nop
popf
call
rcr
jge
mov
fildll
sbb
arpl
daa
cmp
adc
test
dec
mov
sbb
cmp
push
mov
pop
rorl
dec
xchg
rcl
mov
movb
in
and
pop
dec
xchg
addr16
jmp
sbb
jl
cwtl
scas
sub
sub
jle
movl
cmp
out
test
popf
xchg
mov
into
data16
aas
cltd
pop
subb
sub
adc
sahf
add
adc
ja
bound
pop
add
fsts
shl
xchg
mov
pop
lods
mov
mov
lret
push
jecxz
xchg
lods
lcall
push
or
fsubs
mov
lods
lret
popa
jle
push
jns
xchg
jmp
lods
xor
jp
faddl
lods
xor
pop
xchg
dec
add
or
pop
xor
jns
in
mov
je
stc
pop
xchg
push
pop
cmc
movsb
lret
push
aaa
mov
add
mov
ja
fldt
inc
ror
dec
sub
sti
out
jg
xchg
push
mov
add
xor
xor
fdivs
push
adc
fsubrs
test
push
inc
stc
loope
loop
xchg
xor
imul
hlt
jno
push
jmp
loop
sahf
cwtl
pop
jae
pop
adc
cld
sahf
jecxz
fisttps
notl
mov
dec
ljmp
xor
mov
loop
stc
jg
mov
es
jmp
ljmp
mov
adc
xor
inc
sub
dec
or
stos
inc
push
ljmp
fs
leave
outsb
fadds
lahf
inc
arpl
gs
jno
pop
icebp
sahf
mov
add
hlt
adc
sbb
mov
and
push
arpl
movl
push
aad
sub
addr16
add
addr16
lds
push
inc
add
hlt
aas
stc
sub
mov
mov
daa
push
jns
aas
data16
movsb
push
pop
add
push
fadd
push
scas
or
mov
sbb
sbb
cs
popa
imul
shlb
cmp
loopne
and
insb
cld
lcall
je
std
nop
adc
sbb
add
fistpll
dec
bts
inc
sbb
mov
in
andb
inc
ror
or
test
jae
insl
loopne
jnp
mov
pop
lret
cmpb
jmp
jnp
popf
dec
ds
mov
mov
xchg
fistps
pushf
out
outsl
outsl
outsb
push
stc
stos
jnp
mov
insb
les
lea
mov
push
shll
pop
imul
ret
adc
into
rolb
clc
xlat
dec
lret
pop
call
stos
aaa
mov
lret
jmp
addr16
lock
jno
rorl
int3
mov
rol
push
push
das
lss
mov
xor
stos
ds
gs
aaa
jmp
cmp
xchg
pop
fimull
movsb
ret
push
or
push
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
pop
push
xor
adc
cli
adc
cli
stos
xor
jecxz
or
and
cltd
jb
xchg
and
std
mov
rcrl
push
push
jge
mov
sbb
ds
add
dec
xor
loopne
and
jns
ds
or
cmp
outsb
cmp
ljmp
or
pop
out
xchg
aaa
ds
sbb
xchg
mov
jmp
rcrl
stos
shlb
mov
mov
ja
pushf
xchg
fimull
fstpl
lea
cmp
sbb
aam
xor
pushf
bound
add
mov
pop
test
pop
sub
testl
mov
mov
push
add
xchg
sbb
dec
push
xor
aas
lcall
insb
in
and
fistpl
jo
test
jl
or
sbb
mov
frstor
rcrb
pushf
pop
mov
adc
insb
roll
ret
dec
test
call
dec
dec
arpl
mov
cmpsl
xor
lcall
mov
pushf
nopl
in
adc
or
mov
addb
sar
inc
lea
mov
and
sub
add
cmp
add
sarl
stc
xchg
mov
mov
scas
nop
mov
lods
scas
mov
rorb
xchg
imul
loope
js
stc
sbb
int
enter
insl
stos
inc
les
ret
xchg
jno
inc
out
imulb
outsl
mov
pop
loopne
push
or
push
cli
dec
mov
push
decb
stc
mov
gs
call
fisttpll
cmp
int
xor
dec
outsl
xor
ror
int3
xchg
ljmp
sub
lret
addr16
mov
enter
adc
mov
mov
shll
jmp
add
arpl
pusha
jo
add
or
nop
cmpsl
jbe
sti
add
scas
pop
dec
mov
sub
sbb
rcll
stos
mov
adc
mov
leave
in
dec
or
and
inc
add
lock
fstl
in
push
jnp
int3
imul
push
out
hlt
mov
in
fisubrs
push
loope
das
push
mov
jo
dec
sahf
sbb
push
loopne
rcll
or
pop
sub
test
mov
loop
cmp
cld
push
push
xchg
addr16
or
sub
arpl
sub
popf
test
rep
dec
outsb
enter
mov
pop
inc
or
inc
add
fisubrl
insl
es
lea
mov
outsl
xchg
and
ret
negl
inc
sar
and
int3
in
test
sti
push
mov
mov
fsubl
xor
push
cmc
ret
or
push
dec
pop
test
cmp
jbe
jbe
ljmp
or
sub
into
shrl
push
add
xor
sti
roll
addl
sub
fnstcw
aaa
ljmp
push
popf
loopne
hlt
jno
rclb
xlat
cmpsl
in
out
push
push
loop
ficompl
jno
sub
push
jbe
mov
pusha
loopne
int
es
mov
ja
mov
jns
mov
movsb
aam
imul
pop
xchg
adc
ljmp
cs
data16
push
sbb
mov
mov
mov
pop
mov
subl
adc
mov
cmp
imul
inc
fdivl
dec
adc
jae
repnz
mov
sti
push
std
pop
aas
imul
adc
test
cld
lret
inc
orb
mov
fcoms
jb
jno
dec
ljmp
and
push
fsubrs
pop
icebp
pop
sub
ss
jge
sbb
pushf
imul
test
sub
push
adc
inc
popf
mov
ljmp
hlt
in
rorl
fstp
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
cmp
pushf
adc
aaa
cli
adc
jnp
rcr
jo
jb
fmulp
adc
and
or
and
xor
inc
in
in
mov
mov
int3
add
out
sub
xchg
je
xchg
mov
add
sbb
in
mov
dec
push
mov
test
pop
sbb
push
ljmp
xlat
dec
daa
mov
outsb
lock
arpl
fistl
shl
cmp
jmp
fbstp
out
jbe
lods
fidivrl
mov
fmul
daa
cmpsl
cli
dec
aas
mov
mov
sub
mov
inc
jo
inc
icebp
push
adcb
inc
xchg
icebp
test
lds
mov
pop
inc
rorb
jns
add
jnp
lcall
mov
insl
rolb
in
mov
outsl
dec
mov
and
scas
mov
push
or
add
int3
shl
mov
hlt
dec
sub
cmp
or
jg
mov
pusha
cmp
pop
loop
adc
and
cli
imul
jmp
imul
dec
cmpsb
aam
cltd
add
rorb
arpl
cmpsb
popl
xchg
mov
cmp
ret
inc
out
inc
aam
push
sbb
push
add
pop
lret
rorb
mov
out
push
cmp
rcrb
jbe
test
loop
push
jge
lock
sub
mov
cmc
sbb
pop
pop
jno
sbb
ss
pop
popf
shl
mov
push
sti
jmp
stos
adc
pop
push
test
nop
sbb
jnp
aas
jle
lret
mov
xchg
cmp
or
ss
rolb
add
inc
push
push
xor
out
mov
sbb
push
mov
cmp
jbe
lea
push
mov
push
aam
fiadds
sbb
push
push
adc
mov
lods
mov
jo
pop
pop
cmp
pop
or
stc
add
popf
add
out
inc
hlt
push
addr16
jecxz
xor
and
les
cmp
push
sub
add
loop
cld
xchg
mov
repz
aas
inc
mov
out
adc
cli
cmc
mov
pop
mov
je
or
cwtl
mov
mov
sbb
ds
pop
and
mov
ret
fxch
mov
nop
into
in
push
inc
and
add
mov
icebp
cmp
mov
and
add
fdivrl
fldcw
and
inc
cli
dec
lods
decl
fwait
dec
movsl
jg
xor
push
mov
add
pop
repz
dec
pop
cwtl
jle
xor
jb
iret
int
test
outsl
imulb
and
sub
iret
mov
and
andl
jae
dec
mov
jnp
mov
cs
mov
lods
ljmp
shrb
push
mov
mov
aam
xchg
or
cmovns
xor
mov
in
mov
fwait
sarl
shl
mov
in
jnp
pop
ss
sub
inc
ss
nop
dec
jno
jne
sahf
inc
sbb
sbb
test
jno
sbb
mov
lahf
sub
fdivrl
pop
sahf
testb
insl
cmpsb
shll
and
xchg
out
pusha
cmp
and
inc
testl
sub
rolb
pop
mov
sbbl
fiaddl
into
ss
xor
cs
shrb
dec
es
dec
xor
mov
pop
outsb
cmp
xor
xor
push
dec
lahf
push
add
sub
into
sub
pop
mov
pushf
jns
xchg
je
fistps
inc
stos
sub
adc
jp
dec
cltd
bound
mov
cltd
adc
loop
dec
mov
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
das
imul
aaa
cli
adc
mov
cmp
adc
ret
mov
shr
jb
xchg
xchg
orl
daa
enter
push
aaa
sbb
test
push
movsb
daa
or
pop
andl
jle
insb
cmpsl
push
xor
insl
push
mov
cmpsb
call
test
inc
enter
jmp
jp
cmp
pop
mull
sub
fcompl
adc
lret
ja
call
jl
xor
push
pop
loop
ds
faddp
pop
jl
icebp
orl
push
aas
mov
ds
sbb
out
xor
mov
mov
ret
fdiv
nop
mov
add
pop
fstl
jbe
sub
push
and
cmpb
add
mov
js
adc
adc
add
xchg
xor
adc
addr16
aaa
ret
xor
mov
fnstcw
mulb
push
insb
mov
and
or
daa
pop
jp
addr16
clc
es
mov
outsb
mov
sti
dec
mov
and
fwait
cld
and
scas
lcall
cmpl
cmpsl
xlat
incl
xchg
cmc
lea
cmp
push
lea
mov
sub
outsl
mov
jmp
jbe
mov
lcall
lock
xorb
cli
mov
mov
adc
jb
xchg
sub
pop
in
pop
shlb
shrl
subl
lcall
aad
xchg
repz
fwait
sub
fldt
mov
jecxz
xchg
mov
mov
xor
imul
jbe
out
stc
add
stc
out
dec
xor
sbb
or
roll
adc
adc
enter
add
popf
sub
cli
pop
sti
push
fsubrp
add
imul
inc
push
xchg
std
icebp
jecxz
sub
inc
in
or
dec
lret
push
mov
mov
cmp
aas
iret
push
push
cltd
je
adcl
jmp
add
jo
push
xor
out
arpl
in
jno
or
sahf
insb
ljmp
fildl
mov
adc
add
pop
hlt
mov
mov
out
or
into
inc
sub
mov
or
stos
cmpl
shl
adc
sbb
cmp
and
add
sub
sub
arpl
and
ret
jne
cs
aam
je
bound
or
xchg
fmuls
adc
outsb
pop
jecxz
adc
push
insl
out
loope
pop
sub
iret
pop
lock
lods
leave
jecxz
mov
aad
sbb
stos
fisttpl
mov
cwtl
push
pop
dec
in
js
ljmp
dec
ss
pushf
inc
or
js
fistpl
push
mov
lcall
lods
dec
out
mov
outsb
jmp
aas
shlb
stos
cs
dec
hlt
decl
leave
jae
sub
mov
jge
inc
xchg
jmp
mov
and
ss
dec
je
cmp
xchg
mov
cltd
loop
leave
push
dec
rorl
or
and
insl
insl
or
pushf
mov
and
call
sahf
clc
inc
test
mov
cmp
loopne
hlt
das
incb
mov
push
and
cmp
pop
pop
rcrb
mov
and
pop
fdivrs
call
sub
sbb
jae
in
add
or
outsb
and
adc
shr
cmpsb
popa
addl
rorb
imul
in
sbb
xor
ss
inc
mov
jle
push
mov
in
bound
fimull
into
dec
mov
mov
lret
movsl
xchg
ss
enter
xchg
loop
kmovw
xorl
add
push
nop
adc
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
cmpsb
jecxz
xchg
sti
jb
pop
mov
sbb
push
scas
dec
test
push
shll
push
outsl
or
push
aam
sbb
stc
xchg
sarb
aaa
arpl
repz
nop
xchg
out
mov
lahf
jb
pop
mov
lods
addr16
push
and
imul
aad
cmp
sbb
out
and
negb
cmp
sbb
mov
jecxz
subl
fsts
add
mov
sbb
dec
lods
xchg
xor
scas
push
outsl
ljmp
push
stc
jmp
lods
adc
aaa
hlt
dec
stos
sub
in
sbb
push
dec
fsubs
xchg
or
stos
loop
xor
push
cmpsl
adc
add
inc
adc
sarl
adc
mov
and
and
imul
mov
lods
dec
stos
aas
scas
idivl
mov
cmpb
mov
jg
xor
push
stos
xor
ret
cmpsl
dec
xor
aam
rorl
push
int3
stc
push
lea
sbb
adc
fwait
shl
imull
mov
in
outsb
xchg
cmp
sbb
stos
dec
jl
adc
xchg
sbb
or
mov
xchg
fnstsw
or
mov
and
inc
imul
xor
jge
out
mov
and
jns
xlat
sbb
cld
idivb
test
je
roll
and
dec
lahf
subb
mov
push
movsl
mov
jmp
stos
ficoms
mov
xchg
mov
push
mov
call
jmp
into
pusha
std
imul
sub
aam
test
stos
mov
adc
mov
add
cmpsl
outsb
popa
out
lods
rcrl
mov
aaa
insb
dec
pusha
push
fnsave
fsubl
nop
mov
test
dec
rcl
inc
sub
scas
or
pop
aas
jp
ret
mov
jge
xchg
xor
and
lods
mov
stos
insb
lret
jns
mov
loop
loop
testl
inc
or
mov
pop
in
adc
imul
sbb
call
push
cltd
jge
adc
mov
mov
lock
xchg
xchg
ljmp
int3
cmp
jne
stos
push
cmp
dec
or
push
add
sahf
jl
mov
mov
or
jmp
cld
xlat
shl
not
jno
sbb
ss
les
imul
add
ret
push
ss
ret
and
xchg
stos
adc
pop
test
mov
and
mov
mov
arpl
insb
out
rcll
jp
or
lods
cmp
fcoml
arpl
in
pusha
jecxz
not
xchg
or
inc
mov
insl
mov
scas
out
pushf
adc
aad
cmpsb
xor
insb
outsl
mov
push
mov
cli
mov
sub
cmp
and
or
iret
repz
aad
subb
or
mov
jbe
cmp
ds
push
adc
pop
cmp
lods
add
loop
xchg
imul
add
add
dec
clc
push
fsts
add
lahf
xchg
cmovno
jno
out
std
ds
push
aaa
adc
lcall
in
sti
push
ja
xor
xchg
xchg
mov
jne
pop
inc
pop
out
repz
adc
pop
cld
into
movsb
dec
lods
mov
pop
mov
push
mov
push
inc
push
popa
mov
ja
mov
xor
mov
jle
leave
xchg
xor
ret
xor
mov
lods
orl
dec
mov
in
js
lea
xor
dec
bound
rorl
sub
shlb
out
ret
pop
mov
add
xchg
mov
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
sbb
js
adc
cli
adc
ret
lahf
aam
push
test
add
stos
addr16
inc
mov
jb
nop
mov
sub
adc
andl
sbb
pop
test
pop
mov
imul
sahf
xchg
int
sub
iret
dec
push
in
fwait
in
test
mov
sub
sub
sub
xor
fs
out
xor
dec
gs
mov
xchg
ss
ficoms
and
jecxz
mov
push
xchg
out
movsl
fs
and
filds
imul
mov
fstp
loopne
dec
mov
iret
inc
imul
cmp
and
hlt
test
fwait
xor
cmp
mov
mov
or
lea
cmp
mov
test
xchg
mov
gs
mov
pop
ret
cmpsb
pop
pop
in
mov
mov
pushf
mov
push
xor
cmp
rcl
stos
mov
push
jbe
incl
repnz
xor
pop
add
loop
scas
in
dec
pop
sbb
cmp
lret
sub
fdivl
push
cwtl
mov
adc
fs
es
inc
xchg
mov
fwait
xchg
mov
out
jb
in
cmpsl
jp
daa
loop
lods
lea
hlt
out
stos
cmpsl
add
loope
out
xchg
aas
jno
lea
mov
pop
popf
int3
jns
dec
add
pop
jle
clc
pusha
data16
bound
pop
cmp
cmp
loop
bound
sti
jg
ja
adc
js
sub
push
or
ficoms
sub
xchg
lcall
ret
sahf
inc
pop
fsub
dec
push
jnp
rolb
jae
popa
and
push
jge
mov
dec
inc
scas
cmp
outsb
sub
ljmp
jns
jne
sar
inc
test
les
out
test
adc
inc
je
icebp
mov
cmpsl
xchg
mov
or
sub
xor
xor
loop
xchg
mov
shrb
inc
add
loopne
inc
push
pushf
xchg
icebp
xor
fst
push
fnstsw
cmp
pop
lds
jbe
cmpsb
mov
xchg
jno
lods
int3
mov
push
in
test
push
in
or
cmpb
and
push
out
jo
or
cmp
cli
jl
icebp
xor
jmp
fiaddl
sahf
push
test
leave
inc
jge
out
mull
inc
and
push
pushf
icebp
xchg
xor
mov
dec
or
and
cmp
inc
imul
jb
shlb
nopl
jge
pusha
fldl
sub
call
sbb
out
cwtl
mov
pop
mov
call
inc
and
push
push
or
imul
xchg
scas
xchg
dec
rcrb
pop
inc
mov
cmpsl
mov
in
push
lods
add
adc
push
pop
fnsave
lcall
jl
enter
mov
adc
fxch
xchg
arpl
sbb
iret
testb
dec
fldenv
test
mov
out
in
es
leave
cmp
and
xor
or
pop
incl
inc
stc
ljmp
fsubs
xchg
outsl
out
mov
imul
xchg
mov
sbbl
test
repz
test
leave
roll
add
movsl
scas
cmp
xchg
jnp
xor
and
repz
cmp
orl
cltd
scas
aaa
sahf
fistpll
call
pushf
pop
bound
nop
jmp
pop
cmp
xchg
add
mov
loop
mov
aad
daa
jb
jnp
pusha
mov
test
imul
adc
xchg
test
aad
jp
orb
std
adc
inc
mov
hlt
xor
sti
data16
std
jb
cltd
out
cmp
insl
shrd
shr
mov
mov
xor
xor
or
add
shl
jmp
add
push
adc
aas
imul
pop
adcb
aaa
cli
adc
jnp
rolb
repnz
loop
out
popf
mov
pusha
es
push
cmc
xchg
fnstcw
sbb
out
and
jo
loop
divb
nop
data16
inc
fstl
repz
xchg
nop
xchg
ret
adc
test
and
iret
inc
lea
push
mov
mov
rorl
mov
mov
aaa
sar
jb
scas
push
push
testb
or
mov
dec
bound
sbb
and
jge
mov
shll
repnz
cmpsl
mov
adc
or
cmp
sub
xchg
nop
or
fisttpl
dec
jecxz
cli
dec
mov
push
push
fcmovnu
imul
cli
pop
repnz
fwait
test
xor
push
xchg
inc
adc
mov
xor
push
lcall
push
cmp
jecxz
push
out
and
sub
inc
xor
adc
and
push
push
adc
in
xor
push
push
icebp
push
mov
adc
sbb
mov
jge
push
push
inc
stos
dec
fwait
popa
sub
pop
dec
sbb
xchg
cwtl
or
pop
mov
cmpsb
xor
shrl
push
add
adc
fldt
xchg
ss
mov
push
ss
nop
fcmovu
cmp
jmp
out
iret
pop
outsl
jb
in
or
js
mov
repnz
popf
jle,pt
dec
ljmp
xor
or
jmp
sti
add
mov
pop
cmp
mov
mov
outsb
jno
stos
push
sub
cmp
lret
ljmp
js
gs
push
and
cmpsb
add
out
or
or
stc
popf
dec
mov
cmp
enter
stos
js
inc
subl
cmc
cmp
loopne
ret
sbb
xor
outsb
inc
dec
shlb
clc
cmp
shll
movsb
inc
fdivr
js
fcompl
push
and
pop
insl
sub
in
sbb
mov
rcrl
stos
sub
ret
imul
sahf
rcrl
or
into
xchg
cld
movsb
dec
lahf
loope
repnz
iret
lahf
ret
lds
jae
cmp
and
or
and
vmovdqu
inc
sbb
leave
rol
xchg
push
push
mov
mov
or
pop
insb
scas
jne
movsb
subb
xlat
pushf
push
add
clc
repnz
xor
int3
sahf
arpl
sub
movsb
push
mov
repnz
pop
loope
jge
push
mov
outsl
sub
out
or
int
push
mov
scas
cs
fidivrs
ret
inc
add
leave
inc
mov
cmpsl
push
dec
add
pop
cmp
insl
mov
fcompl
xchg
cmp
lret
mov
mov
pusha
pop
pop
xor
adc
dec
negl
cmp
pop
mov
rcll
mov
push
add
push
push
xchg
jnp
lock
sbb
or
mov
inc
jmp
push
xor
mov
mov
mov
pop
mov
inc
adc
pop
in
push
add
push
jecxz
jecxz
imul
sub
add
sbb
or
enter
addr16
mov
das
add
mov
pop
addr16
cwtl
mov
or
data16
or
mov
scas
dec
stos
push
enter
sub
and
pop
xchg
xor
ja
leave
jp
push
test
inc
lock
js
lds
jmp
fistl
mov
xchg
aad
pop
jbe
dec
add
jne
push
jae
cmp
inc
test
inc
gs
dec
push
xchg
or
sarb
call
push
xor
pushf
push
testb
push
cmp
imulb
and
jae
in
movsb
jo
mov
cmp
push
mov
mov
or
dec
loope
in
pop
mov
jb
sbb
push
push
fisubs
inc
add
xchg
lea
cli
push
scas
cmp
ja
gs
popf
or
imul
aas
lret
jl
aas
cmp
pop
push
movl
adc
inc
mov
lods
enter
add
add
movsl
js
inc
push
dec
xchg
movsb
cmp
idiv
loope
dec
push
adc
sar
xor
loope
jb
dec
sbb
out
sbb
push
aad
and
xor
hlt
jnp
js
and
sbb
imul
lods
vphaddwq
jle
add
and
in
bnd
dec
lds
xchg
das
mov
pop
loop
pop
rcrb
dec
dec
mov
stos
es
aad
mov
cli
fwait
sbb
leave
sub
imul
mov
mov
cwtl
add
push
fcoml
lret
mov
jnp
dec
cld
pop
xor
and
jnp
mulb
push
cld
out
cmp
inc
xchg
popf
std
test
mov
adc
imul
out
push
or
std
sbb
cmp
clc
inc
cltd
and
rclb
add
inc
outsl
daa
in
mov
adc
sub
into
xorl
sub
je
fsubrs
or
sarl
sbb
iret
int
xor
fists
test
sbb
mov
dec
ret
cmp
mov
cwtl
outsl
fldenv
outsl
daa
jne
in
inc
and
inc
test
out
xor
mov
push
push
mov
negl
xchg
adc
inc
aaa
and
stos
dec
pop
in
inc
rcr
mov
and
dec
aad
adc
sbb
rclb
jmp
in
jnp
in
adc
aam
mov
push
xchg
or
mov
in
cmpsl
aam
out
adc
inc
jo
and
out
sar
mov
mov
std
adc
sarl
ja
pop
or
pop
out
or
pop
mov
loop
repnz
ds
mov
sub
mov
add
add
push
sub
leave
daa
push
add
in
out
or
fisttps
or
loope
mov
mov
mov
movl
push
cmp
dec
insl
cmp
pop
out
fidivs
int
lods
xor
xor
nop
sub
js
pop
pop
jmp
shrb
pushf
inc
add
pop
data16
cld
mov
lcall
jo
scas
and
aas
and
negb
mov
dec
in
sbb
arpl
cmp
fisubs
or
pop
cmpsl
sub
jns
js
or
jmp
bnd
sub
rorb
pop
mov
dec
mov
clc
inc
lods
mov
jle
cmp
pop
sti
outsb
xor
filds
sub
push
ret
sahf
ror
insb
mov
out
sbb
mov
add
lods
les
sti
or
push
dec
inc
or
xchg
lods
dec
sbb
fsubrl
lret
dec
cld
adc
or
call
es
aad
mov
push
aas
sub
decl
xchg
adc
ss
adc
inc
ret
cmp
cmp
lods
mov
rorl
sbb
jg
inc
mov
clc
jl
jne
outsb
in
addr16
push
cmpsl
push
jg
sub
or
rorb
popa
xor
jb
mov
jmp
fmull
pusha
and
inc
mov
ss
mov
xchg
dec
push
mov
push
xchg
imul
cmpsl
fwait
xor
fisubl
jno
push
cmp
stos
dec
or
iret
movsl
push
arpl
mov
addb
mov
mov
push
test
xchg
dec
and
aad
mov
pop
inc
push
mov
pop
mov
adc
int3
test
xchg
pop
test
add
shr
xchg
mov
lcall
push
mov
clc
sarl
ret
in
pop
lret
or
xor
mov
add
mov
flds
sbb
push
daa
popf
lret
inc
and
in
test
je
adc
jne
into
mov
cltd
bnd
fcoms
xchg
add
mov
inc
cmp
jo
movsb
and
xlat
mov
pop
or
push
inc
fdivp
dec
push
int
test
mov
scas
ds
jo
xchg
cmc
dec
cmpsl
shr
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
jp
call
je
mov
aam
add
insl
hlt
fisttpl
fsts
jbe
shr
les
je
fisubrl
test
jne
mov
jo
test
roll
sbb
or
ror
pushf
inc
test
sbb
std
mov
addl
pop
das
fwait
repnz
sub
mov
sub
sub
imul
xchg
mov
sub
adc
ja
push
into
loop
pop
das
dec
pop
jae
dec
xor
push
cmc
outsl
clc
iret
imul
pusha
cltd
repnz
lahf
rcrl
xlat
adc
adc
das
mov
or
adc
repz
hlt
aas
sahf
mov
test
push
int
pusha
cmpsb
test
mov
fimuls
adc
mov
mov
aam
add
mov
or
out
rcrb
sbb
leave
loope
fwait
test
mov
lcall
mov
cld
xchg
push
mov
enter
pop
loop
or
dec
cli
loope
sub
std
xchg
xor
into
xor
or
dec
test
push
jl
cs
movsl
and
pop
test
cld
out
xchg
and
xchg
pop
pop
std
int3
sbb
shlb
inc
xchg
or
jmp
xor
shll
jne
push
pop
mov
and
adc
mov
adc
cmp
aaa
or
cmp
gs
mov
mov
push
mov
in
aas
xor
push
lahf
aaa
scas
dec
daa
ja
pushf
or
loopne
imul
xchg
ja
sbb
adc
and
or
insb
push
mov
movsb
scas
cmc
xchg
pop
pop
xchg
jae
or
pop
jp
iret
aas
test
gs
and
xor
xchg
cld
add
test
je
arpl
in
xchg
fs
das
pushf
fadds
ds
mov
cli
mov
push
pushf
cmp
ljmp
mov
in
jl
imul
addr16
mov
dec
cmc
push
mov
lods
sub
xchg
clc
pop
or
flds
push
sahf
arpl
inc
iret
adc
stc
and
jns
pushf
adc
adc
daa
rcll
movsb
loop
or
scas
das
adc
cwtl
xlat
adc
testb
jne
outsl
mov
xor
faddp
xor
int3
fwait
push
scas
add
fdivs
inc
movsb
test
test
mov
and
mov
loope
shr
out
fstpl
and
push
repz
dec
push
int
movsl
decb
xor
daa
divl
movsl
mov
ret
mov
jb
mov
or
cmc
add
push
mov
inc
ljmp
data16
sub
mov
fcoml
inc
imul
jbe
xchg
lahf
sbb
pop
mov
aam
cltd
addr16
addr16
lret
mov
add
inc
xor
mov
mov
sbb
test
and
sti
std
or
frstor
dec
lock
jmp
or
frstor
mov
mov
pop
lea
pop
cmc
pop
sbb
pop
jno
sbb
dec
popf
lcall
andl
or
and
sub
vpmacsdd
xorb
aad
lock
mov
rolb
push
insb
insb
cmp
mov
mov
dec
in
xchg
xor
data16
inc
addb
mov
cs
arpl
mov
push
fistps
xlat
ds
aam
cmp
insb
cmp
pop
dec
leave
pop
cmp
xor
stos
rcpps
scas
xchg
fdivs
or
fisttpl
repz
sahf
jae
sahf
jmp
stc
mov
and
sbbb
pop
inc
fmuls
jbe
lahf
inc
and
push
dec
loope
addl
lock
mov
jmp
mov
dec
js
fs
xor
adc
je
add
push
adc
aaa
cli
adc
cwtl
aad
jo
sub
mov
ds
js
and
ja
adc
rcrl
xor
mov
adc
sub
lods
ja
loope
int
dec
subl
and
ret
xchg
movsl
imulb
pop
popa
adc
cmpsl
lret
rcl
dec
insl
jbe
notb
cld
xchg
out
out
clc
pop
mov
xchg
in
mov
cmc
bound
mov
aam
sub
pushf
xor
xchg
push
inc
mov
cmc
rcl
jae
pop
push
jbe
xchg
mov
into
in
mov
rorb
jno
repnz
dec
sub
jns
bound
and
push
das
mov
or
lods
dec
cmp
cmpl
xor
je
fisubs
sbb
movsl
mov
dec
mov
cmp
sbb
stos
iret
aam
xchg
testb
pusha
xor
scas
adc
out
add
jae
dec
fmull
xor
iret
fwait
inc
cmpsb
push
loop
dec
xor
dec
shlb
test
xchg
mov
mov
fldenv
out
fldcw
push
ss
test
push
cmpsb
cmpsb
pop
mov
push
and
cmp
sbb
in
pop
cmpsl
push
push
fsubr
jmp
push
xor
sbb
push
jne
frstor
call
idiv
inc
xor
data16
addr16
lods
add
jp
jo
aam
out
mov
in
push
inc
cmp
arpl
xor
sbb
test
sahf
mov
sub
lock
xchg
inc
sbb
gs
ret
hlt
sbb
dec
aam
cmc
cmpsl
or
fwait
lahf
jbe
in
roll
cmp
dec
dec
cmp
push
xor
into
adc
icebp
mov
cmp
outsb
add
dec
sar
xor
xor
insb
aas
jo
rorl
push
pop
xor
loopne
mov
or
rorb
rcrb
pxor
roll
inc
andb
xchg
dec
clc
sub
sti
sbb
out
test
ret
sub
enter
lret
cmp
cmp
lds
mov
rcll
mov
mov
test
mov
arpl
mov
adc
inc
or
xor
adc
lcall
jo
ds
std
jecxz
inc
xchg
inc
sub
mov
jmp
push
mov
mov
or
pop
sub
cmpsl
aam
push
arpl
adc
or
sub
push
sbb
loopne
sub
aaa
mov
jnp
imull
jg
decl
ljmp
inc
xchg
fwait
out
sbb
movsl
lret
sub
mov
test
jge
ja
cmpsb
outsb
call
pop
add
push
mov
dec
es
jo
mov
jmp
in
inc
mov
add
xlat
jle
fwait
inc
push
test
pop
or
rcrl
sarb
push
push
ucomiss
lds
outsl
lea
ss
xchg
andl
shlb
js
inc
dec
repnz
fcomip
jno
enter
popa
push
jbe
push
jne
loope
adc
outsb
hlt
mov
jb
sub
ljmp
sti
insb
sbb
ret
lods
jmp
js
jl
push
shll
cli
push
dec
stos
push
or
ret
stos
std
cmp
push
dec
testl
jmp
shll
std
add
fwait
das
pop
lea
or
lret
xchg
test
jecxz
loop
std
and
jb
or
pop
sahf
test
cmp
mov
adc
adc
jge
add
or
popf
adcb
shrl
nop
pop
mov
shr
mov
add
sahf
push
iret
test
loopne
inc
mov
mov
inc
scas
xlat
shlb
jae
jg
das
pop
fdivs
aam
sbb
dec
ret
inc
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
lock
adc
aaa
cli
adc
in
cmp
add
mov
jne
fstp
cmp
cmp
cmp
jmp
add
notb
push
rcl
repz
ljmp
sbb
cld
loope
gs
sbb
cmpsl
adc
inc
sti
adc
out
dec
in
sbb
das
jecxz
add
lahf
jecxz
dec
out
aas
mov
jl
imul
jmp
and
cld
pop
adc
test
test
xor
lcall
adc
jae
test
inc
std
rol
mov
add
lea
imull
movsbl
inc
cmp
cmpsl
leave
add
xor
stos
into
adc
add
adc
mov
mov
divb
adc
inc
inc
lret
adc
push
lret
loopne
out
mov
sub
insb
or
mov
fs
das
and
xlat
out
xchg
lea
mov
dec
jg
mov
pop
arpl
out
scas
es
inc
sahf
lret
pop
ret
xchg
xchg
out
scas
mov
mov
lahf
xlat
call
push
insl
xor
add
fists
insb
sub
roll
or
and
adc
mov
or
scas
xchg
jecxz
xor
test
and
add
mov
stos
sub
xchg
inc
cwtl
out
addl
mov
xchg
cmpl
ja
adc
lret
and
adc
sub
or
and
js
fnstenv
decl
rclb
xorb
popf
add
dec
out
mov
aaa
pusha
mov
mov
std
jp
xchg
cmpb
dec
cmpl
outsl
add
in
gs
fincstp
sbb
mov
rolb
es
sbb
xchg
push
jmp
pop
shl
pop
xor
sbb
cwtl
pushf
lods
sub
mov
fists
out
mov
popa
mov
call
pushf
jecxz
and
arpl
pop
addr16
popf
push
pop
test
push
arpl
les
inc
iret
sub
dec
test
xor
aaa
push
xor
test
adc
xchg
fldl
int3
out
mov
shrl
pop
push
sub
outsl
or
ret
or
sub
test
in
mov
xor
imul
mov
cmp
out
fsubrs
xlat
mul
mov
fmull
out
aas
loop
lock
fildl
dec
and
gs
shl
push
sbbb
cltd
movsb
cmp
cli
repz
dec
bound
sub
push
dec
in
daa
inc
mov
lea
out
cmp
inc
push
dec
mov
out
dec
sbb
rclb
mov
sbb
sub
movups
cld
push
mov
pop
and
ljmp
push
aas
pop
xor
mov
dec
int3
fsubrp
mov
fidivs
dec
jnp
ret
lahf
xor
mov
nop
pushf
psubusb
lea
jne
sub
mov
xor
aas
loope
movsl
inc
mov
dec
jne,pt
push
test
insl
push
loope
pop
push
fiadds
sub
pop
fwait
mov
cmpsl
mov
mov
js
mov
mov
into
jne
sub
push
or
dec
xchg
add
xchg
test
out
and
xor
mov
fstps
cmp
pop
sar
mov
sbb
rcrb
into
in
push
lods
jmp
jecxz
repz
sub
pop
imul
hlt
pop
add
insb
jne
mov
es
dec
sbb
add
cmp
jno,pn
icebp
xchg
fwait
stc
addl
es
xor
push
mov
pop
dec
inc
mov
lret
dec
arpl
mov
roll
push
cmpsl
pop
lock
lret
ret
shlb
or
or
call
ror
and
xchg
mov
sbbl
mov
cmp
mov
xorb
mov
shrd
add
jmp
push
fsubrl
dec
or
mov
adc
aaa
cli
adc
pop
rcr
loop
cs
push
mov
xor
filds
xchg
mov
dec
xchg
out
cmp
push
sbb
pop
pop
imul
jmp
fistpl
xchg
orl
cmpb
xor
pop
inc
repnz
and
negb
in
jp
icebp
push
shlb
or
jmp
jbe
lods
adc
lods
lahf
xchg
loop
jns
dec
mov
test
jmp
jbe
imul
sub
lds
sub
fdivs
ljmp
pop
jae
push
dec
into
mov
cmpsl
mov
adc
scas
push
aaa
inc
jne
lahf
jbe
or
insl
mov
ret
cmp
sub
imul
fcmovnu
or
jbe
in
pop
out
outsl
in
adc
rcll
and
mov
xor
xlat
leave
cli
sbb
jo
fistpll
enter
aas
icebp
lret
inc
std
adc
push
lcall
add
jae
xchg
fdivs
dec
lods
ret
push
inc
leave
xchg
repnz
mov
push
lods
mov
shll
hlt
lds
ret
push
sbb
pop
xchg
lods
femms
fildl
mov
or
lret
mov
lret
repz
mov
fwait
arpl
movsl
pop
push
popa
jo
sub
lea
stos
in
fldt
mov
lret
pop
inc
ljmp
mov
dec
mov
inc
aaa
or
shrl
cld
sub
cmp
sub
dec
mov
fwait
repnz
test
inc
popa
fistpll
pop
imul
sbbb
xchg
mov
ds
lds
xchg
sahf
nop
jmp
jbe
lock
arpl
add
mov
xor
insb
pop
mov
jb
jne
pop
lahf
sub
xchg
add
lods
dec
dec
jno
adc
inc
adc
adcl
addr16
xor
out
add
test
gs
xor
adc
popf
rolb
lods
fiadds
int
outsb
insl
fildl
test
lods
xchg
ret
cmp
jno
mov
sub
testb
bound
mov
ret
roll
or
mov
mov
andb
push
jae
fisttpl
sti
pop
mov
or
ret
insb
or
test
int
ficomps
jns
in
lock
js
scas
jns
xchg
cwtl
shlb
xlat
jecxz
js
xor
xor
cltd
jb
adc
outsb
cli
ja
xchg
int3
in
inc
jmp
rolb
mov
sti
enter
mov
add
mov
insb
repz
popa
inc
in
jmp
into
test
aam
sbb
and
mov
into
cmp
sub
loopne
sub
jmp
lret
xor
sbb
adcb
mov
push
xor
add
sub
stos
jns
adc
mov
lods
fisttpll
movsl
add
sbb
or
dec
test
or
jg
scas
ja
fs
ds
mov
jmp
out
or
fwait
movsl
jno
addr16
fwait
repnz
ja
daa
mov
shr
lcall
inc
sub
cmp
cmp
inc
imul
fidivrl
jg
mov
or
mov
les
jmp
aaa
loop
cmp
and
js
jmp
xchg
mov
sbb
rcrl
dec
addb
mov
enter
aas
leave
push
and
xchg
add
dec
dec
push
inc
enter
addr16
push
mov
in
fstps
add
es
loopne
test
push
xchg
dec
push
sahf
mov
fs
sbb
push
and
repz
and
mov
repz
mov
and
popa
inc
push
fwait
or
jecxz
imul
test
daa
mov
clc
xchg
mov
jbe
sub
call
add
int3
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
inc
jle
adc
aaa
cli
adc
addr16
adc
js
es
or
ja
popf
enter
mov
mov
ret
jecxz
scas
mov
out
push
jl
push
cmovb
mov
ret
out
jle
cmp
outsb
xor
jp
loope
jl
xchg
mov
sub
les
pop
mov
test
xor
pusha
adc
jne
adc
xor
add
inc
es
xchg
sub
into
les
inc
cmp
xor
add
pop
and
into
lcall
mov
push
cld
cwtl
fcoml
mov
pop
not
lret
cli
xchg
adc
pop
gs
imul
bound
mov
cltd
jge
in
inc
xor
imul
xor
xor
cmp
mov
fs
sbb
jmp
push
mov
jns
sahf
jl
lea
shlb
nop
popa
lds
lods
jle
pop
addb
xor
bound
vunpckhps
cmp
xorl
add
lcall
cli
call
mov
xchg
and
sub
mov
test
push
sbb
push
pop
jae
fistpll
inc
test
fcomp
jmp
add
push
and
outsl
aaa
comiss
repnz
orb
add
les
movsb
pop
insl
adcb
shrl
outsb
insl
adc
jge
into
sbb
sub
jb
xor
lcall
stos
xchg
popf
mov
pop
sbb
lea
rcr
mov
xchg
mov
mov
mov
xor
sub
push
lret
xchg
xlat
sbb
andl
cli
nop
sub
ljmp
sbb
ret
je
inc
jle
iret
shlb
push
cmp
cmp
test
cmovge
popa
xchg
mov
in
jmp
pop
dec
andl
pop
inc
jp
adc
jmp
in
push
popa
push
and
mov
adc
mov
dec
shrl
dec
lods
and
fsubrl
adcl
rcll
jb
test
jns
test
sub
mov
mov
jecxz
adc
mov
dec
mov
aas
lods
test
cmp
lcall
sbb
mov
mov
fldt
mulb
mov
fbstp
xchg
cmp
and
push
nop
pushf
out
xchg
clc
mov
mov
call
jns
inc
rclb
ljmp
jb
inc
push
rolb
lret
pop
xchg
jne
mov
jb
jmp
mov
dec
adc
mov
or
popf
arpl
sub
mov
fiadds
mov
cld
les
dec
lods
jbe
in
push
enter
jecxz
and
inc
mov
into
mov
test
ds
and
pop
popa
shll
lret
test
xchg
in
stos
mov
imul
ljmp
dec
cmp
inc
or
inc
fsubrl
mov
mov
pop
loope
loopne
adc
out
and
mov
cmc
pushl
cmp
mov
lods
pop
mov
jno
jb
mov
ljmp
in
add
or
push
inc
push
jne
xlat
cmp
or
fcompp
xchg
mov
jo
dec
insb
push
push
test
out
cmpl
push
push
pop
in
inc
cmp
ss
mov
out
cmp
mov
pop
dec
mov
aam
or
adc
cmp
xchg
mov
push
xchg
xchg
add
shll
cmp
outsb
dec
rcrl
mov
aaa
mov
adc
outsb
pop
test
insb
negb
js
lahf
out
sub
inc
ror
add
js
add
push
div
pop
lds
cmp
fcompl
mov
cmp
push
sbb
repz
jle
iret
add
sbb
ret
mov
iret
push
daa
mov
test
and
in
pop
pop
push
adcb
xchg
mov
or
stc
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
shlb
adc
aaa
cli
adc
cli
aaa
add
xchg
aam
xchg
cmpsb
das
xor
sub
lds
mov
xor
and
fildll
sub
adc
sbb
add
stc
mov
pushaw
test
mov
fwait
lds
xor
roll
test
pop
jne
js
jnp
push
cld
add
inc
repz
xor
jp
adc
pop
ret
xchg
inc
les
das
lea
jle
dec
adc
icebp
scas
je
popf
lock
movsl
sbb
push
ds
mov
mov
push
jle
cmpsb
mul
int3
out
int
pop
dec
jae
xchg
jecxz
sbb
mov
pop
loopne
cltd
out
in
aam
ja
sub
mov
fnstenv
mov
mov
insl
add
adc
or
cmp
dec
jl
or
dec
cld
inc
je
stc
mov
in
repnz
stos
scas
or
sbb
sti
shrb
cmp
dec
repnz
and
fnstsw
and
std
int
or
or
js
jo
sub
pop
out
xor
aam
mov
push
sub
out
xor
push
adc
cmpsb
fidivs
xchg
loope
int
adc
stos
cld
scas
sbb
mov
cmpsb
aaa
data16
movsl
sub
pop
cmp
mov
int3
daa
lock
test
cltd
in
push
sub
jnp
outsl
push
aam
fwait
inc
and
pop
test
mov
jp
inc
arpl
mov
ja
add
inc
pop
jmp
test
mov
cli
xchg
mov
sub
fs
lret
dec
popf
xchg
and
in
test
loop
and
dec
stc
sbbl
pop
lahf
sub
sbbl
push
dec
in
mov
jecxz
inc
cmpsl
sub
pop
and
jnp
aas
xchg
cmp
mov
inc
in
push
inc
ret
pop
pop
sti
popa
cmpsl
push
jecxz
jge
push
nop
enter
int3
cli
push
pop
je
mov
out
xor
fucomip
push
push
stos
insl
pusha
mov
rorl
cltd
aad
jne
xchg
pop
lock
xchg
js
test
fisubl
fsubr
pop
movsb
inc
xor
push
adc
xor
jmp
test
into
shr
cmp
fnstsw
aad
dec
mov
stos
and
int3
pop
das
test
push
jl
sarb
cmp
gs
lret
mov
gs
into
mov
cltd
xor
sub
jmp
jns
jge
jbe
pop
and
inc
sub
ds
dec
dec
dec
xchg
mov
test
pop
jmp
loop
mov
lods
out
mov
les
pop
jmp
adc
imul
jnp
lret
xorl
dec
pop
inc
mov
sub
add
fcmovnu
int
mov
outsl
push
in
push
aad
stos
sbb
outsl
xlat
adc
push
lods
lahf
aad
add
dec
pop
inc
jnp
sbb
test
cmpb
shrb
loope
xchg
inc
data16
adc
inc
sbb
shll
add
add
aas
xchg
sbb
cmpsb
fmuls
add
rcrl
xchg
adc
es
scas
mov
cwtl
maxps
shlb
outsb
addr16
rcl
push
cmp
js
enter
testb
jno
sahf
mov
dec
mov
mov
cs
es
das
and
andb
ret
and
or
decl
cld
loop
jle
cmpsb
cmp
add
sahf
xchg
push
call
imul
pop
ja
mov
lea
jmp
idivb
ja
repz
pop
mov
pushf
int
xor
fsubrl
adc
mov
cmp
pop
fs
fwait
fwait
mov
aas
or
cmc
and
je
pop
push
fists
inc
js
mov
fs
push
aaa
mov
push
cltd
jbe
mov
inc
dec
insb
adc
leave
push
mov
pop
lahf
mov
mov
pop
or
xchg
bound
add
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
and
mov
aaa
cli
adc
jecxz
jbe
mov
gs
dec
aas
lods
ret
push
clc
lret
mov
cmpsl
cmpsl
sub
or
and
call
pop
test
stos
je
cli
aaa
jb
lret
repz
mov
push
sub
pop
mov
jns
lahf
aam
dec
mov
lcall
imulb
vpunpcklbw
scas
pop
sub
xorb
add
xchg
iret
out
ret
adc
and
jecxz
lods
mov
push
mov
int
testb
test
mov
or
loopne
mov
sbb
xchg
scas
push
mov
push
pop
das
out
in
dec
xor
adc
mov
lods
xor
and
sbbb
jb
and
imul
inc
addr16
dec
and
cmp
das
pop
das
inc
xchg
lret
mov
mov
jmp
aaa
sbb
mov
jecxz
mov
nop
add
inc
bnd
cmpsl
cmpsl
addr16
cmp
repz
mov
adc
flds
jae
sub
orl
rorl
movl
les
xchg
pop
or
or
imul
fs
leave
and
movsl
repnz
stc
cld
mov
stos
mov
test
sub
sub
or
xchg
and
imul
jo
loopne
std
cmp
lret
cmc
jmp
dec
addl
dec
mov
pop
rorl
ljmp
sarb
dec
sub
or
int3
leave
cmpsl
mov
lcall
dec
ret
push
cmp
push
jnp
call
cmp
loope
jle
fbstp
adc
add
jg
test
push
dec
movsb
mov
mov
mov
daa
jb
daa
imul
test
cwtl
out
xlat
inc
mov
xor
dec
ret
push
adc
fsts
std
test
inc
sbbb
xor
leave
add
in
bound
pushf
xor
xchg
loopne
imul
sbb
pop
and
dec
mov
xchg
adc
les
sub
out
fsubr
fsubrs
jmp
jbe
sbb
incb
out
sbb
les
insb
scas
aam
push
loop
icebp
pop
jp
cmc
cli
and
mov
clc
int
mov
enter
inc
lds
mov
inc
mov
cmc
inc
imul
push
mov
cmpsl
or
hlt
hlt
sub
in
loop
scas
int
jbe
mov
repnz
jmp
imul
dec
adc
push
pop
push
push
add
in
xchg
sbbb
cwtl
inc
repz
ljmp
sbb
mov
daa
mov
mov
arpl
ljmp
push
push
push
and
jbe
faddl
stos
inc
hlt
sahf
xor
mov
inc
dec
jno
insl
push
xchg
lcall
or
enter
pop
jbe
mov
repz
dec
repz
cmp
dec
adc
insb
jecxz
mov
fs
xlat
sti
out
inc
or
popa
loopne
test
and
xchg
mov
xlat
mov
pushl
imul
jns
push
int
and
add
push
and
test
outsl
repz
iret
jge
push
xor
xchg
mov
cwtl
in
in
je
sbb
mov
cmp
and
sub
jae
hlt
cmp
cmpsl
mov
pop
fildl
jecxz
scas
jecxz
mov
dec
push
pushf
cwtl
lret
inc
and
fdivp
xchg
push
cld
outsl
out
push
pop
mov
insb
ret
mov
lahf
jne
sbb
pop
stos
out
xchg
pop
jl
sarb
mov
xchg
fisttpll
cwtl
jb
aam
add
jmp
adc
mov
and
out
js
mov
sub
adc
aaa
cli
adc
lds
insb
add
xchg
push
clc
pusha
or
mov
repnz
ficompl
push
mov
out
testb
leave
xor
movsb
fidivrs
lds
icebp
movsl
dec
mov
enter
aad
test
hlt
lcall
adc
xchg
cmp
fsubrs
mov
and
inc
xchg
dec
jmp
aas
adc
push
and
outsb
dec
or
mov
push
sbb
arpl
adc
dec
shll
vpsubusw
aaa
notb
das
scas
xor
add
nop
shll
ret
or
fists
and
cli
mov
scas
push
push
in
adcl
inc
fsubr
xchg
rcrb
lock
inc
dec
ror
cmp
or
sbbl
test
lds
in
xchg
sbb
pushf
fwait
jmp
pop
push
xchg
jle
mov
sbb
xchg
cmp
mov
rcrb
xchg
in
rolb
xlat
mov
push
adc
incl
imul
xor
mov
shrb
cwtl
add
fldl
sub
cld
fcomp
push
shrl
insb
jl
add
add
lcall
notb
out
jge
repnz
inc
mov
lret
inc
cltd
arpl
fbstp
data16
adc
mov
pop
or
out
mov
or
jl
dec
push
adc
xor
xchg
jle
data16
pop
xchg
dec
push
je
add
inc
jae
push
jecxz
idivb
mov
fsubrs
jno
notb
cmc
hlt
push
outsl
imul
orl
rcrb
sbb
adc
add
hlt
inc
sbb
arpl
ret
dec
mov
in
pop
test
xor
rcll
sbb
rcrl
lds
lods
push
jge
loope
cmp
std
jg
icebp
in
fs
dec
loope
dec
sahf
pop
test
hlt
mov
jge
out
xabort
lahf
inc
aad
xor
push
aad
xchg
jle
lret
adc
inc
outsb
xchg
cmp
movsl
push
sarl
jl
adc
mov
mov
pushf
jns
test
mov
das
push
mov
push
mov
int
in
lods
bnd
inc
rol
push
xor
leave
mov
fildll
add
mov
aas
jp
ljmp
push
push
sub
es
repz
call
rorl
gs
fdivl
dec
in
int3
push
mov
cmpsl
or
pop
aaa
jecxz
mov
sub
pusha
or
cmc
pushf
addr16
insb
and
cwtl
cmpsb
sbb
mov
ss
xchg
pop
xor
daa
int
jle
sbb
dec
outsl
lock
lock
mov
cld
mov
nop
push
sbb
mov
jge
jno
mov
movsb
inc
jae
jne
push
push
pop
bound
jle
jnp
stc
sub
stos
or
xchg
adc
std
pop
in
xchg
jg
mov
dec
push
xchg
cmc
loopne
cmp
stos
inc
mov
xor
add
xor
pusha
movsb
xchg
js
pop
mov
jo
icebp
xchg
idivl
xchg
out
push
sti
pop
out
nop
ds
aad
sahf
cmc
andl
jmp
fiadds
xchg
jl
repnz
sbb
mov
sbb
sub
xor
imull
mov
sbb
mov
add
sub
dec
lods
fwait
das
stc
pop
xchg
pushf
or
cmp
or
and
jns
cmp
push
dec
out
pushw
adc
lods
insb
sbb
and
cltd
leave
es
dec
es
je
sbb
sbb
js
pushf
pop
jno
call
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
imul
hlt
jnp
sbb
adc
cli
adc
loop
iret
mov
jecxz
fs
adc
aaa
jp
xor
sub
shlb
cltd
xchg
xorb
jns
xor
in
insl
dec
add
inc
daa
insb
jnp
jmp
and
jbe
add
inc
jl
add
mov
std
cmp
xor
xlat
mov
pop
inc
mov
scas
mov
cmp
inc
jo
cmp
pop
lahf
mov
enter
imul
inc
fs
xchg
cltd
or
mov
in
xchg
sub
dec
and
adc
or
add
int
pop
dec
add
mov
lahf
mov
lods
xor
mov
xchg
and
imul
fldcw
or
inc
pop
test
pop
jnp
gs
add
or
pop
pop
jl
inc
lock
lods
pop
lods
xchg
cmp
fistl
xlat
xor
sarb
movl
enter
outsl
inc
xchg
jle
dec
sbb
dec
mov
das
shll
dec
dec
inc
or
push
jmp
in
jnp
mov
and
push
lret
cmp
mov
ja
bound
pusha
stos
cmp
scas
adc
test
popa
pop
push
hlt
and
stc
pop
add
cltd
jo
push
or
push
into
cmp
mov
ss
add
jb
xchg
out
dec
fwait
sub
insl
xor
jle
lods
mov
loope
inc
push
jmp
mov
mov
inc
repnz
mov
xchg
nop
push
pop
pop
cmpsl
and
adc
mov
pop
jnp
xchg
mov
mov
push
xchg
or
add
jae
pop
inc
jbe
rolb
cmp
or
dec
sti
das
adc
in
sub
xor
lret
sub
mov
ffreep
ds
or
add
jmp
jecxz
adc
cmp
or
mov
ror
scas
xlat
fmulp
nop
mov
cmp
lock
xlat
mov
fistpll
ror
inc
stc
inc
push
movsl
fistl
push
jo
mov
mov
das
and
push
in
mulb
icebp
add
xchg
ret
imul
in
adc
push
and
or
jle
or
sahf
mov
inc
shlb
stos
cmc
cltd
sbb
hlt
popa
pop
dec
scas
or
dec
xor
cmp
sbb
sub
aaa
xor
daa
push
or
mov
incb
popa
adc
lea
das
jp
push
push
inc
pusha
sti
shl
dec
es
stos
lds
adc
arpl
pop
loop
popf
stos
leave
jp
jg
or
sub
sahf
cld
lea
mov
stc
pop
in
shll
mov
cmp
inc
mov
cmpsl
pop
and
je
call
lock
mov
cwtl
add
mov
out
dec
fdivl
cs
and
xor
push
pop
inc
pop
fistl
jo
mov
int
jl
aad
pop
rcr
jns
jmp
in
xor
loop
cmc
ja
pop
sbb
sub
push
cli
test
jmp
pusha
shll
push
cmp
ja
cmc
jle
and
xchg
pop
shlb
cmc
in
jle
dec
out
xor
imull
rcrl
and
jnp
fdivs
test
in
mov
stos
push
aad
iret
jecxz
pop
imul
push
shll
mov
mov
daa
call
dec
push
jecxz
repz
js
mov
and
loope
lods
mov
jg
xchg
mov
jbe
dec
pop
xchg
pop
test
sub
fwait
mov
jbe
jmp
sarl
mov
fbstp
das
adc
push
fdivrl
push
insl
sbb
sbb
dec
aam
sbb
dec
std
int
std
leave
lret
mov
repz
gs
jmp
lods
pop
repnz
into
jae
add
shlb
and
cmp
outsb
cld
xor
jns
jns
pop
shl
add
lock
fsubs
fwait
imul
and
jle
xor
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
xchg
sbb
xchg
cli
adc
test
insl
movsl
cwtl
aaa
xchg
mov
cmpsb
jns
cli
add
pop
mov
jbe
mov
test
mov
out
lods
loop
lods
and
je
fisubl
fdivp
jge
adc
rol
xchg
std
mov
pop
mov
icebp
xlat
lods
std
mov
insb
pop
fisubrl
dec
xor
push
jns
jmp
adc
rolb
loopne
mov
mov
dec
mov
std
mov
idivb
clc
lock
sbb
jbe
aad
jne
cwtl
ret
outsl
lahf
fmuls
xchg
mov
ss
xor
stos
xor
sub
push
insb
mov
jnp
mov
int3
cmpsl
aas
cli
repz
mov
lods
inc
sbb
push
test
dec
int
repnz
jp
ret
ljmp
lret
adc
test
bound
and
pop
daa
sub
pusha
fidivrs
icebp
popf
popf
jnp
fisubrl
mov
test
lcall
call
adc
inc
sti
aad
aas
popa
cli
imul
push
jecxz
pop
add
xchg
daa
ds
adc
cmpsl
xor
mov
orb
jns
mov
pop
sti
outsl
sub
sarl
dec
sub
lcall
mulb
loop
dec
fadd
lret
scas
sbb
add
pop
cmp
adc
popa
dec
cmp
dec
into
pushf
insb
jnp
scas
test
daa
sti
movsl
xor
dec
pop
sbbb
xor
cmc
adc
pop
xor
jp
or
lcall
add
icebp
dec
scas
iret
and
stc
cmp
mov
ficomps
push
scas
cld
jnp
add
aaa
sbb
xor
mov
ror
jmp
inc
adc
fidivrl
fildl
add
mov
das
repz
xchg
movsl
outsb
fwait
sbbb
dec
inc
and
insb
insb
movsb
dec
shrb
loop
push
sub
insb
ljmp
and
arpl
sarb
mov
cli
int
sub
xlat
lret
insl
push
dec
jmp
inc
jge
sub
push
xor
shll
sub
dec
add
mov
dec
fidivrs
ret
add
shlb
pop
cmp
xchg
push
sbb
aad
fs
ja
fldl
lret
cmpsb
push
arpl
dec
mov
mov
cmp
rorl
lahf
mov
push
mov
ret
cwtl
mov
aaa
shrb
mov
out
mov
and
or
repz
iret
mov
inc
out
mov
sub
scas
arpl
pop
addr16
cwtl
or
rcr
mov
cltd
pop
pop
scas
adc
xchg
pop
imul
outsl
repz
jl
mov
lods
rclb
dec
leave
xlat
data16
pop
xchg
and
mov
imul
jae
mov
or
rsqrtps
aas
push
insb
ret
sarb
or
xchg
int3
push
and
inc
and
das
adc
lods
sub
cmp
mov
jbe
out
insl
pop
dec
push
mov
xor
push
jecxz
mov
mov
ja
mov
mov
sti
out
movsb
cmp
sbb
mov
and
adc
imul
mov
cltd
jmp
div
and
imul
idivb
mov
cltd
movsl
sub
lcall
xorb
xchg
mov
pop
sbb
negl
lcall
fcom
lds
stc
push
xchg
aaa
lret
sbb
add
gs
sub
je
test
or
mov
xchg
divb
and
inc
aaa
push
and
sbb
mov
push
or
add
add
dec
add
add
ss
ds
xor
ret
push
adcb
or
adc
or
mulb
dec
xor
mov
and
fldt
das
mov
test
mull
call
jo
push
inc
ljmp
ds
push
pusha
dec
ljmp
jo
sbb
adc
cmc
mov
ret
test
xchg
cmc
mov
cmp
outsb
adc
or
dec
pop
movsb
enter
cltd
pop
stos
std
es
in
fwait
mov
add
shrb
mov
ss
and
xchg
pop
mov
push
xchg
int
dec
push
jge
es
inc
ret
pop
xor
jae
mov
inc
pop
dec
das
adc
or
sub
cmpl
addr16
cmpsb
jle
pusha
lods
iret
iret
mov
xor
rol
in
or
sbb
xchg
or
nop
xor
cmp
sahf
outsb
out
sub
mov
cli
subb
rol
mov
pop
lods
lcall
pop
mov
scas
push
inc
stos
push
cmp
iret
std
fwait
sub
fdivp
sub
pop
cmp
mov
test
fisubrl
sub
push
lods
rclb
mov
pop
sub
fisubl
jp
mov
leave
mov
lcall
repz
out
nop
add
sub
sbb
dec
mov
inc
fdivl
sub
adc
inc
push
push
push
dec
add
or
add
mov
inc
xor
out
fcomip
negb
xor
in
cmp
inc
sbb
sbb
add
cmp
push
pop
pop
pop
sahf
mov
inc
push
out
mov
add
lods
mov
xchg
jnp
pop
aaa
sarl
outsl
rol
scas
loop
adc
sarb
adc
test
pop
sub
clc
jmp
or
in
sti
and
mov
mov
mov
cmc
sbb
insl
sub
roll
cmp
aaa
out
pop
dec
jmp
mov
sub
cli
outsl
xor
scas
and
popa
push
xchg
clc
aas
fildl
or
pop
in
or
aas
fmul
adcb
or
aam
add
add
inc
mov
dec
xchg
fmuls
mov
add
pop
mov
inc
in
sub
iret
jp
in
pushf
xor
and
push
ja
int
sub
sar
jb
ljmp
repnz
out
sub
jbe
ljmp
adc
out
clc
popl
fstp
out
outsb
into
pop
xchg
aam
rcll
data16
adc
fs
xor
idivb
push
loop
push
mov
cmc
mov
mov
imul
sahf
outsl
push
mov
cli
sar
dec
das
out
cmp
in
repz
xorb
cmpsl
movsl
jmp
insb
aas
out
imul
cld
lret
sub
test
and
push
add
ret
jno
cmp
movsb
outsb
xor
div
inc
addr16
pop
scas
push
ds
xchg
sbb
inc
ds
or
dec
das
adc
mov
dec
inc
insb
arpl
aaa
orl
xlat
jg
xlat
sbb
jne
lret
or
mov
xor
mov
aaa
popa
push
sub
and
adc
lock
in
sub
iret
adc
in
lret
mov
push
xor
lret
push
jae
shll
or
mov
aad
jmp
pop
xchg
in
fadds
mov
push
mov
pusha
adc
pop
xchg
push
dec
jl
mov
in
movsb
ja
and
adc
push
int3
add
lods
cmp
shll
sarl
jns
in
push
push
data16
lret
push
jne
inc
sbb
mov
or
gs
inc
repnz
loop
lret
pop
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
das
xorb
xchg
cli
adc
adc
mov
inc
js
icebp
pop
int
mov
in
insb
jo
push
push
mov
in
adc
jle
jmp
or
lods
sti
stos
adc
xor
jge
gs
clc
sahf
ret
jg
xor
out
push
and
pop
nop
cmpb
jnp
popa
orb
dec
repz
mov
pop
mov
inc
adc
loope
cmp
dec
ret
pop
pop
xchg
xor
xchg
rorb
add
push
sbb
push
jecxz
mov
push
les
popa
out
push
pop
inc
aas
movsb
pop
sbb
loop
xor
mov
mov
test
jle
or
aas
nop
add
in
mov
cwtl
jnp
stos
dec
or
jecxz
loope
sub
push
push
cs
dec
jge
push
mov
jmp
pusha
or
mov
test
ds
lret
dec
jo
push
int
icebp
push
ja
dec
subb
or
inc
pushf
lea
mov
jp
mov
clc
xchg
sbb
stos
xor
pop
inc
xchg
mov
mov
rorl
push
push
sub
cmp
dec
push
lcall
push
fdivrl
xchg
push
sbb
push
mov
cmp
push
inc
les
xchg
pop
adc
inc
pop
je
or
aas
mov
jmp
decl
scas
je
mov
jo
sub
dec
xor
or
into
mov
xchg
pop
repz
mov
jno
cmp
dec
jns
mov
ja
xchg
sub
bound
fisubs
lea
incl
push
and
fidivrl
mov
pushf
orl
rolb
add
xor
popf
jmp
imul
daa
mov
jecxz
fs
sbb
insl
adcl
push
cld
into
mov
lret
cmp
xchg
cmp
call
sub
fs
inc
jecxz
push
xchg
shll
add
cli
xchg
lret
push
and
fadds
adc
mov
stos
out
cmp
negl
and
mov
xor
pop
and
xlat
or
jbe
pop
dec
push
inc
stc
xchg
testl
shlb
popa
popl
test
lret
ret
mov
lods
int
adc
and
cld
loopne
daa
dec
andl
idivl
or
push
lret
dec
cs
cmpsb
mov
arpl
dec
jo
addr16
jbe
test
mov
pop
fistpl
out
arpl
leave
lds
xchg
inc
xor
push
jle
insl
jecxz
loop
push
adc
testl
data16
inc
xor
in
mov
lds
das
add
lret
test
test
sbb
sub
ljmp
sub
pushf
test
add
inc
cmp
mov
mov
stc
mov
insb
in
sti
jle
and
in
adc
aad
lock
jp
push
fidivl
jle
ja
cmpsl
push
loope
xchg
sbb
daa
leave
xor
and
push
mov
lea
add
cld
mov
inc
adc
imull
push
and
ja
jmp
push
pop
sti
inc
add
fcoml
mov
scas
fists
mov
xchg
jns
dec
nop
xchg
inc
sbb
ja
lret
mov
xor
test
pop
aaa
cwtl
jecxz
dec
or
fildll
lcall
cltd
dec
cli
sub
adc
jecxz
dec
js
ret
push
orb
xor
in
loope
sar
dec
adc
mov
xor
jae
and
imul
xchg
pushf
leave
mov
adc
mov
cwtl
inc
jnp
mov
sahf
movsl
xlat
adc
pop
jnp
fcomps
push
mov
out
mov
fadds
push
add
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
in
lds
clc
adc
add
cmp
out
andb
call
faddp
cld
lahf
js
push
mov
jp
mov
dec
xchg
test
mov
xchg
cmp
add
pop
jg
arpl
push
lea
xlat
out
cmp
pop
xchg
jp
insb
dec
pop
in
fsubp
pop
xchg
cmpsb
movsl
push
shr
insl
fdivrl
xor
test
add
out
dec
lods
mov
in
add
mov
mov
lahf
inc
repz
aam
and
and
dec
fldl
flds
lcall
insl
loop
add
sahf
rclb
ret
stc
leave
shl
pop
out
cmc
mov
icebp
add
sti
jg
movsb
pusha
sbb
jecxz
jg
sbb
add
adc
shrl
cld
push
mov
bound
sbb
movsl
add
pusha
mov
mov
test
push
inc
mov
jecxz
cld
icebp
mov
add
sti
stos
shll
out
and
repnz
popa
sub
int
cwtl
shlb
imul
icebp
ja
xor
call
cmpsl
xor
lahf
je
mov
cwtl
cmp
pop
jge
insb
sbbl
inc
xor
repnz
mov
enter
cmpsl
leave
insl
add
fucomp
insl
shrl
sbb
aam
sbb
stos
stos
in
xor
fnstcw
add
inc
mov
mov
scas
mov
mov
les
test
fisubs
rcr
lcall
adc
jg
loope
lods
push
into
imul
inc
imul
test
mov
in
cmp
mov
mov
fistl
rcrb
mov
outsl
cli
fnsave
js
mov
bound
and
xchg
movsb
jne
popa
outsb
imul
pop
and
pushf
jge
xor
mov
sub
sbb
fs
add
dec
sub
out
fs
lcall
add
mov
pop
sarb
aad
pop
popf
js
jmp
jns
jp
mov
pop
add
btr
insb
pop
mov
lahf
jo
je
jns
sarl
sub
enter
mov
idivb
pop
and
lds
jb
add
data16
cmpsb
cmpsb
loope
lock
clc
or
sbbl
cmpsb
lods
addr16
ss
ds
add
ss
lods
jge
and
xlat
mov
xor
xchg
adc
mov
ss
nop
sti
aas
sub
jecxz
insb
lods
mov
push
mov
adc
mov
hlt
sbb
and
loope
jmp
xor
push
pop
clc
mov
js
or
inc
stos
call
movsb
mov
jo
lahf
pop
jae
push
xor
icebp
push
sub
inc
sbb
jge
inc
cmp
fidivl
lret
movb
push
or
mov
faddl
into
push
sbb
cmpb
mov
jmp
sbb
pusha
pop
adc
mov
adc
add
loop
jecxz
cwtl
add
mov
pop
mov
mov
pop
lcall
inc
dec
std
insb
aas
ficoms
dec
ror
loope
dec
fstl
jnp
idivb
and
pop
ljmp
push
nop
es
jnp
or
sbb
add
sub
insl
dec
sbb
xor
bound
sbb
jge
mov
inc
stos
mov
sbb
gs
negl
cltd
cld
jno
mov
scas
inc
xor
mov
jecxz
lods
lods
pop
popa
repnz
xor
hlt
dec
arpl
cmc
add
pop
sti
repz
fmuls
hlt
mov
cli
imul
sub
lods
das
push
fs
aam
jl
push
dec
or
inc
in
push
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
jnp
clc
adc
mov
rclb
insl
lods
pushf
dec
xorl
leave
in
pusha
mov
popa
adc
pop
adc
gs
and
ljmp
push
mov
cmp
out
out
jl
xor
mov
xchg
cwtl
sub
js
gs
movsl
xchg
arpl
mov
enter
cs
cld
ds
mov
fdivs
stos
movsl
sbb
jp
adc
pop
orb
pop
cmp
cmpsb
xchg
js
leave
push
lahf
and
mulb
adcl
cltd
inc
lret
lds
inc
popa
jae
insb
inc
pop
xchg
jns
sbb
mov
mov
call
inc
mov
loope
mov
testl
or
lock
js
ficoml
lret
xor
mov
dec
dec
jge
jno
sbb
lcall
fidivl
pop
xor
sbb
jg
sub
dec
sub
mov
adc
push
int
jle
loopne
jb
les
pop
outsl
fsubrl
jae
or
sahf
sbb
inc
xor
movsl
mov
push
xor
jp
loopne
pushf
add
or
xor
sar
xor
mov
pop
pop
outsl
insb
pushl
push
cmpsb
rcrb
loopne
dec
call
push
jle
push
pop
add
and
jl
cmp
adc
inc
push
frstor
test
scas
movsb
xchg
xchg
mov
mov
outsb
mov
pop
imulb
jae
fidivrs
mov
ss
inc
aam
dec
lcall
rolb
dec
jbe
test
mov
js
imul
rcrb
mov
adc
mov
fisubrl
out
scas
loop
test
sti
xchg
xor
ljmp
lock
out
push
lock
xchg
xchg
iret
insb
push
cli
jns
jle
fst
inc
add
jne
hlt
and
sub
pop
jno
out
fdivrl
push
ret
inc
jmp
lret
aaa
scas
dec
pop
sbb
mov
negb
movsb
push
fdivp
fbld
shrl
cmpsb
pushf
xor
gs
lcall
lret
rclb
jbe
aad
dec
das
sub
mov
test
and
mov
jp
adc
jp
fldt
mov
push
cmp
jg
sbb
jns
test
loope
pop
sub
adc
pop
jle
andb
cli
arpl
push
insl
and
sarb
lsl
jae
jo
in
sbb
dec
cmp
pop
scas
mov
fnsave
jg
clc
lcall
inc
push
dec
sahf
sbb
loopne
loope
xchg
test
push
pop
push
fwait
xchg
jne
inc
cmpsb
inc
scas
push
xor
sub
mov
test
mov
pusha
movb
inc
call
lea
fstl
repz
ljmp
cmc
sbb
sub
jns
int
ret
sub
sub
cmp
push
loop
push
outsb
mov
das
lods
xchg
mov
adc
mov
mov
adc
or
clc
call
xor
ret
mov
jle
repz
insl
xor
xchg
in
je
sub
fwait
jecxz
xlat
icebp
repnz
adc
mov
fnsetpm(287
call
cltd
mov
imul
xorl
sahf
or
fsubs
cmp
lock
mov
lds
xlat
pop
adc
scas
leave
sub
mov
dec
in
sti
cld
ja
jle
lea
cmp
test
aas
fwait
pop
xchg
push
jmp
jno
jecxz
lret
cmp
lods
mov
xlat
pop
comiss
lock
inc
popf
lret
jp
ljmp
aaa
inc
test
mov
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
inc
push
xchg
cmpsb
out
adc
sub
adc
in
icebp
dec
dec
out
jno
push
fcmovu
sub
jns
fsts
push
orl
cld
lret
sbb
and
xchg
fdivrl
jns
stos
cmc
mov
cmp
xor
je
xchg
jmp
mov
sub
jo
jbe
lock
insl
ja
les
mov
cmc
xchg
sub
cltd
andl
into
pushf
test
movb
shrb
cltd
aad
out
push
ret
dec
mov
adc
push
and
stos
lcall
stos
dec
mov
daa
in
sbb
fs
stos
dec
sub
jl
lods
mov
js
add
adc
scas
jmp
xchg
push
inc
dec
in
test
sti
sarl
xor
clc
fisttpl
push
rcrb
ljmp
cwtl
pop
dec
mov
shrb
cwtl
into
rol
jnp
and
addb
sarl
push
stos
push
mov
cmpsl
push
jb
fs
fbstp
adc
mulb
fucom
lock
inc
stos
sar
jnp
cwtl
shlb
mov
push
mov
stos
xor
leave
or
ret
mov
bnd
push
iret
sub
adc
cmp
push
leave
enter
cmp
inc
pop
scas
push
loop
push
fildl
xor
mov
sbb
testb
adc
pop
xchg
jnp
insb
jg
xchg
iret
fisubl
loopne
mov
dec
call
jbe
std
hlt
nop
mov
outsb
int3
pushf
lret
pop
movsl
add
cmpsb
sahf
jl
int
jne
into
or
mov
in
xchg
test
sub
aam
insb
lea
std
and
test
jb
adcb
mov
or
popf
pop
or
flds
arpl
fildl
inc
test
out
imul
pop
popf
stos
ret
mov
in
jle
push
pop
jge
xchg
rcrl
jge
xchg
push
fsubrs
jle
inc
jo
call
icebp
jge
sbb
int
fwait
pop
in
jmp
mov
cmp
mov
or
add
int
cmpsl
lret
cmp
xchg
ja
and
hlt
in
pusha
aad
movups
stos
in
mov
je
jge
inc
scas
jb
cld
out
nop
in
pop
sti
mov
sbb
jb
inc
mov
aam
ficompl
icebp
aaa
xchg
scas
add
test
jae
mov
push
xor
mov
fists
pop
rclb
std
sub
in
xor
daa
lret
pop
xchg
push
xor
inc
inc
inc
inc
sub
dec
cmp
rcll
test
push
lds
pop
xchg
xchg
movsl
fs
mov
add
xchg
mov
sub
aad
xchg
jnp
push
adc
mov
sub
aaa
stos
int
or
pop
cmc
xor
test
sbb
out
jae
mov
les
adc
jle
call
movsb
jmp
ja
or
jo
cli
dec
dec
dec
rorl
test
push
jmp
sub
sbb
xchg
stos
cltd
ret
push
aad
or
sub
mov
movsb
mov
lods
les
cli
xchg
jo
stos
lods
jbe
test
testb
hlt
inc
mov
pop
stos
addr16
test
stos
pop
xor
hlt
and
adc
adc
std
sti
in
loop
jno
ficomps
xor
mov
mov
jecxz
adc
fwait
inc
or
dec
jb
xchg
push
adc
popf
lcall
stos
sbb
loop
or
stos
int
ljmp
mov
mov
ja
adc
lods
clc
out
leave
mov
or
mov
xchg
stos
scas
cmc
rolb
pminsw
mov
add
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
push
rclb
adc
lret
outsb
push
jle
inc
cmp
mov
lret
push
aad
not
xor
aad
imul
inc
ljmp
mov
jne
aaa
inc
fldenv
and
sbb
stos
pop
dec
add
in
rcll
dec
sub
and
adc
test
pop
xor
int
and
sahf
mov
adc
cmp
and
jbe
adc
push
flds
xchg
mov
imul
scas
repz
pusha
dec
repnz
push
mov
ljmp
and
mov
pop
call
cmpl
repnz
sarb
movsl
or
call
pusha
pop
jns
add
pushf
repnz
call
push
add
cmp
das
and
pop
mov
jl
xchg
int
and
lret
sahf
xchg
adc
les
cwtl
fisubs
adc
pop
or
ljmp
cld
pop
or
mov
pushf
cmpsb
stos
enter
lds
mov
push
xchg
xchg
xor
dec
repnz
mov
mov
xchg
push
jle
sbb
fidivrl
xor
or
loopne
lahf
mov
mov
jle
mov
dec
movsl
mov
lret
sub
xchg
add
xorb
pop
fxch
js
lahf
inc
xor
xor
aas
pop
mov
mov
xchg
xchg
fidivrl
jne
mov
aam
cltd
std
orl
jo
sbb
gs
or
movsl
dec
add
sub
in
xor
movq
repnz
push
jmp
pop
sbb
div
in
pop
imul
dec
cld
std
gs
cmp
stos
jmp
mov
xchg
fwait
cmp
push
fldln2
or
in
mov
loop
mov
addr16
aas
dec
xor
or
ljmp
jmp
scas
pop
push
mov
mov
or
and
push
dec
sub
arpl
ds
imul
lret
mov
dec
mov
push
mov
mov
xchg
movsl
mov
push
cmp
aad
jns
mov
fsub
inc
scas
sarb
jno
mov
mov
push
sti
in
mov
mov
divb
mov
ja
inc
mov
sbb
je
mov
addb
sbb
pop
pop
add
fwait
mov
insl
mov
pushf
mov
jb
jb
lahf
stc
mov
sub
mov
mov
push
daa
jp
cmc
and
popf
xchg
int
mov
scas
jecxz
inc
jecxz
dec
jp
or
insl
or
sbb
int
out
cmpsb
pop
mov
mov
adc
cmp
int3
leave
pop
int3
stos
cwtl
loope
lods
lea
aaa
je
rcll
push
add
loopne
nop
pusha
cmpsb
pop
jns
xor
mov
or
and
mov
lahf
loop
add
pop
das
leave
inc
pop
add
stc
fisubrl
and
mov
xchg
mov
loope
ds
cmp
cmp
pop
les
jl
mov
xor
int
push
mov
adc
dec
sti
jecxz
rcrl
loopne
fcmovne
pop
lods
mov
cmp
rolb
pop
push
pop
add
jae
cmp
push
data16
adc
adc
cmpsb
adc
aas
dec
mov
mov
xchg
xor
cmpsl
inc
dec
sbb
xchg
jle
adc
insb
sub
xchg
sarl
adc
loope
mov
xchg
pop
fadd
sti
ja
dec
fists
insl
lea
out
add
xchg
std
popa
pop
pop
outsb
pop
and
pop
inc
dec
fdivl
orb
in
in
cmp
inc
mov
adc
mov
and
xlat
xchg
cmp
lahf
add
es
test
xor
icebp
mov
faddl
mov
push
punpcklwd
insb
pop
xor
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
dec
out
adc
mov
mov
ss
mov
dec
cmp
outsb
and
mov
or
mov
movsl
repnz
loope
and
jae
bsr
insl
push
pop
adc
mov
dec
loop
xchg
aad
aad
shll
jp
pop
in
outsl
aaa
movsb
lahf
repnz
jne
add
pop
jmp
cmp
repnz
dec
pushf
mov
stos
xor
sti
repnz
in
in
jbe
lods
mov
or
add
and
adc
mov
arpl
adc
lahf
or
pushf
or
sub
hlt
or
push
cmpsl
mov
in
faddl
inc
mov
inc
sub
cmp
notb
loop,pn
dec
adc
push
popf
adc
fimull
pop
jno
ret
add
stc
pop
mov
cltd
std
jae
dec
inc
cwtl
or
lcall
cmp
mov
push
push
rcrb
jmp
fsubl
push
hlt
jl
out
inc
pop
lcall
pop
or
test
loopne
inc
or
mov
fwait
mov
lods
and
sub
js
dec
icebp
xor
mov
jo
or
dec
push
icebp
popa
das
or
push
lock
pop
xchg
mov
cmpsb
fistpll
jecxz
xchg
mov
or
es
mov
adc
mov
cs
pop
push
sub
outsb
pop
mov
lret
adc
lds
push
dec
mov
movsb
mov
inc
cmp
mov
lds
push
cmpsb
jmp
fldt
fstps
add
xor
int3
shrl
or
call
ss
xchg
mov
fwait
divl
sbb
addb
mov
or
bound
cmp
cmp
cmpsb
fsubr
ljmp
fcompl
inc
pushf
outsl
cwtl
inc
cmpsb
popa
xchg
fcmovnbe
dec
mov
fsubrl
fwait
aad
mov
jg
sbb
mov
mov
or
loopne
pop
out
std
xor
sub
pop
mov
mov
ljmp
mov
in
push
mov
dec
jle
inc
imul
lret
stos
je
clc
stos
jae
jp
inc
jb
adc
mov
pop
ret
jns
lods
icebp
pop
bound
lcall
cmp
stos
in
cli
shufps
xor
dec
and
into
mov
fimull
sub
pop
mov
outsl
sub
mov
sub
push
loopne
mov
and
pushf
xchg
lods
pop
aaa
aam
fs
push
fidivrl
jge
add
dec
repnz
pop
shlb
lds
in
lret
push
pop
jns
into
sub
add
popl
and
or
insb
push
test
mov
cmp
adc
mov
mov
in
jp
es
jge
sub
mov
das
sub
in
es
es
cmc
mov
push
inc
std
int3
jl
ret
cmp
je
movsl
lds
push
dec
or
jmp
insb
cwtl
out
cs
jp
into
adc
iret
imul
imul
jg
add
inc
pop
stos
leave
rolb
pop
dec
arpl
xor
mov
push
add
jae
fdivl
dec
adc
imul
add
nop
jne
dec
push
push
mov
sbb
jbe
jmp
jmp
xchg
mov
imul
iret
mov
aaa
test
mov
mov
sub
mov
iret
sbb
fs
xor
decb
fldcw
sub
push
into
movl
movl
movl
movl
mov
mov
jmp
and
mov
out
jno
mov
mov
xchg
cli
adc
aaa
enter
xor
cmp
xor
lods
stos
lea
int
or
push
xor
sub
and
xor
inc
push
push
xchg
pop
inc
fisubs
mov
imul
in
pop
xchg
jp
outsb
ret
jo
dec
push
iret
and
cwtl
xchg
aas
movsb
lret
jb
lods
fildl
idivb
lret
add
cwtl
repz
or
dec
scas
inc
lock
push
cmp
cmc
sub
mov
nop
or
mov
push
movsl
dec
xorb
mov
jbe
dec
xchg
fisubl
jb
jecxz
ja
xchg
xor
das
mov
into
push
xchg
idivb
mov
or
cli
jecxz
mov
mov
xchg
and
dec
nop
jmp
push
cli
mov
xlat
mov
jns
movsb
add
test
rorb
adc
jb
jae
arpl
mov
jae
jmp
inc
aas
xor
mov
stos
xor
gs
and
fiadds
ret
inc
cmp
daa
frstor
outsb
and
inc
in
int3
test
xor
push
cmp
push
lcall
out
xor
pusha
or
mov
js
pop
sti
jb
popf
inc
lcall
fisubl
dec
and
xchg
pusha
jno
lret
cmp
out
ljmp
mov
pop
cmpsb
popf
pop
popa
mov
push
xchg
pop
loop
lahf
test
lret
and
jle
out
lds
sub
loope
xchg
mov
popa
lds
stc
repnz
push
or
mov
into
les
daa
pop
lea
test
mov
frndint
dec
and
testb
jecxz
rcrb
and
mov
mul
push
cld
jg
insb
das
test
pop
imul
lret
lods
lods
push
push
mov
movb
xchg
mov
jo
ja
fadd
cmpsl
push
ja
inc
inc
sbb
aaa
xchg
sbbl
in
mov
jb
xor
push
daa
nop
xor
sti
mov
movsl
pop
sub
pop
mov
xor
adc
dec
cmp
xor
ss
pop
xchg
dec
jmp
and
out
cli
add
mov
add
movsb
mov
arpl
sub
jge
mov
in
pop
cmc
mov
dec
push
ds
loopne
out
jle
into
ss
pop
dec
js
inc
outsw
add
loopne
mov
push
call
xchg
mov
movsb
cltd
ljmp
sbb
testb
gs
mov
ss
or
fmulp
mov
shl
stos
pop
in
add
add
push
mov
inc
xchg
mov
or
inc
std
push
lret
loop
loopne
mov
lret
sbb
xor
mov
int
jb
popf
jecxz
xchg
pop
xor
jecxz
xchg
fisttpll
out
push
add
or
outsb
jp
movb
scas
shlb
push
stos
fnstenv
add
mov
aam
push
pop
das
push
out
inc
xor
adcb
mov
jp
sub
scas
dec
mov
pop
mov
push
push
dec
cmp
sbb
jo
push
cmp
mov
sub
mov
adc
mov
jl
leave
outsl
punpcklbw
cli
pusha
xchg
lret
add
or
cmp
bound
je
pop
mov
sarb
fistl
pop
dec
pop
in
dec
jmp
and
mov
lahf
sbbl
in
stc
mov
mov
cmc
or
dec
call
or
xor
xchg
push
cmp
jecxz
cmpsb
shll
pop
out
inc
js
inc
xchg
stc
inc
dec
ret
fdivr
call
out
jne
xchg
mov
push
inc
imul
mov
mov
maxps
xor
mov
jmp
out
mov
xchg
stc
mov
inc
mov
xchg
cli
adc
cmp
add
cli
sub
xor
leave
daa
cltd
imul
fisttpll
fcomps
lahf
and
cmp
out
scas
push
push
rclb
mov
imul
pop
cmp
sub
push
repz
aaa
bound
shlb
inc
stos
cmp
cld
push
aas
mov
inc
dec
fwait
mov
mov
cmp
cld
push
pop
xor
or
aad
fldln2
adc
sub
imul
stc
pusha
hlt
mov
fwait
push
pop
pop
mov
les
inc
mov
push
ss
in
push
and
mov
addr16
jecxz
xchg
std
ret
ret
pop
rep
ret
adc
mov
scas
js
outsl
xchg
inc
cmc
je
push
gs
dec
out
mov
inc
jne
pop
sbb
add
jle
add
mov
jnp
push
bound
cmp
cmp
imul
dec
cmp
movsb
imul
mov
adc
xor
call
imul
add
sti
xchg
pop
lret
jb
jle
or
clc
add
fwait
movsb
not
sti
xchg
cltd
imul
jl
jno
push
sub
fstpl
test
lock
mov
shrl
and
add
cmp
stos
mov
and
adc
inc
dec
dec
dec
sbb
mov
in
dec
adc
jae
jnp
sarb
xor
lret
out
fwait
lcall
sub
pop
smsw
mov
cmp
imul
sub
stc
shrl
loope
jecxz
or
das
adc
mov
mov
and
scas
add
loop
pop
fisttpll
jno
or
lcall
jg
push
mov
lret
inc
cmc
fcmovne
adc
adc
in
adc
mov
mov
outsl
and
js
push
mov
cmp
ret
in
cmp
adc
push
and
jl
mov
fimull
ret
aam
cmc
out
or
sti
fwait
cmp
and
xor
xor
jmp
cmpsb
xchg
jne
js
mov
adc
add
xlat
sub
inc
push
mov
cmp
fadds
movsl
or
dec
test
pop
xor
lods
add
lret
push
mov
cs
cwtl
xchg
mov
jae
leave
push
push
push
dec
add
sbb
cmc
pop
sbbb
mov
das
sbb
out
pop
stos
adc
mov
enter
sbb
fxch
pop
inc
ss
or
pop
and
lods
ret
jns
push
lahf
out
inc
inc
xor
mov
pop
mov
push
stos
mov
sub
js
adc
xchg
pushf
mov
pop
pop
xchg
add
mov
push
jnp
fisubrs
shrb
jecxz
or
sbbb
cmp
pop
xchg
dec
add
shlb
mov
inc
mov
std
cmpl
cmpsb
dec
adc
leave
dec
sbb
cmpsl
lret
jno
cmp
mov
lds
int3
insl
iret
inc
push
xadd
sub
je
rcr
imul
fcomi
pusha
push
mov
xchg
fwait
adc
nop
sub
adc
or
cmc
ret
jne
popf
cmpsb
sub
cwtl
iret
mov
in
push
inc
jp
iret
dec
fcoml
fmull
js
xor
outsl
shll
in
xor
cmp
jg
imull
leave
mov
jno
cli
xchg
mov
and
xchg
sbb
cmp
xchg
jle
adc
or
jne
mov
popa
inc
cmp
push
jne
hlt
mov
inc
les
sbb
popf
mov
ror
test
test
adc
in
jo
bnd
pop
or
dec
xchg
pushl
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
mov
cli
adc
jnp
mov
pusha
lahf
xor
lods
jne
andl
lock
fnstenv
mov
cmc
push
movsb
out
filds
mov
push
sti
popf
cmpsl
xor
in
xchg
jp
int3
lods
in
ljmp
dec
adc
imull
in
out
dec
sub
in
outsl
int3
mov
push
mov
imul
scas
imul
jecxz
adc
test
enter
clc
into
in
mov
enter
and
fsub
shlb
xor
movsl
xchg
and
cli
lret
lret
push
jb
push
out
xlat
mov
mov
ljmp
xchg
shlb
cmc
mov
daa
lock
insb
mov
inc
je
idiv
jecxz
xor
mov
xchg
adc
ljmp
lods
cwtl
idivb
imul
hlt
inc
mov
push
mov
push
or
and
clc
dec
lahf
das
jne
jnp
add
pop
fsubrl
pop
jnp
mov
dec
jnp
scas
ja
jo
or
cli
mov
jg
icebp
sti
xlat
mov
push
ja
ss
pop
lods
xchg
aaa
cmp
mov
imulb
movsl
mov
insl
bound
cmp
rorl
add
in
test
jecxz
inc
sub
push
dec
inc
jmp
test
xor
add
jne
sub
test
mov
es
adc
aam
push
fbstp
les
test
add
push
push
dec
dec
sbb
mov
xchg
aad
hlt
dec
push
insl
aas
or
cmpsl
dec
fwait
inc
iret
decl
cmp
jo
cmp
mov
or
and
cmc
jecxz
push
pop
adc
inc
andb
sar
rcrb
sbb
mov
fsts
push
jne
xchg
fstp
test
das
fmulp
xor
repnz
or
inc
imul
cmp
adc
xchg
xor
or
aas
test
bound
push
cmp
jb
mov
sahf
loop
lds
sbb
cwtl
push
and
lock
xor
mov
aam
mov
clc
aaa
es
cmpsb
aaa
fcmovbe
jo
das
mov
mov
or
cmp
xchg
xor
std
hlt
mov
test
sti
push
test
mov
sbb
or
fldl
fwait
mov
mov
pop
ret
cltd
out
scas
jecxz
xor
jbe
push
cmp
bnd
int
mov
arpl
inc
xchg
fistl
or
jbe
pushf
xor
loope
jl
popf
inc
mov
cltd
je
rorb
out
ja
xlat
mov
sub
mov
mov
fisubrl
sub
cli
lahf
mov
cli
mov
scas
loope
mov
loop
adc
push
scas
adc
sub
inc
add
decl
loope
lcall
pop
dec
mov
sub
push
sbb
rorb
xor
cmp
pop
and
test
mov
jb
lea
inc
stos
cmp
pop
cmp
jbe
mov
inc
in
mov
sbb
mov
push
test
sbb
dec
sahf
jp
int
ret
jge
enter
ret
push
ljmp
pusha
jmp
or
lcall
lock
mov
push
cmc
lods
cmp
nop
or
adc
adc
push
cmp
pop
leave
aad
sub
mov
test
pop
scas
pop
shrb
push
aaa
in
push
testl
cmp
or
loope
lds
cmpsb
mov
je
in
in
mov
push
fldl
outsb
ja
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
loopne
lahf
push
pop
mov
adc
dec
mov
test
lods
test
fists
popf
hlt
pop
testl
pop
xchg
jo
push
sbb
cli
or
sub
sbb
fucomip
std
push
and
sub
jg
jecxz
cld
inc
push
mov
jecxz
mov
add
fdivrl
mov
push
inc
add
rcrl
xlat
cs
push
jb
imul
cs
or
add
jae
sub
xchg
mov
fdivs
fimull
cwtl
stos
dec
mov
sbb
int
inc
leave
or
xor
in
aas
and
loopne
cmp
imul
mov
or
pop
push
dec
pop
push
popf
adc
in
test
cld
jecxz
enter
or
sub
outsb
push
mov
shlb
mov
call
roll
dec
push
cmp
arpl
std
lret
outsb
stc
aaa
pop
pop
mov
and
xchg
xorl
sbb
inc
jg
xchg
cmp
push
push
push
lods
fcomps
sbb
scas
sub
cmpl
bound
sub
mov
scas
icebp
sub
jg
popf
mov
or
sbb
fs
push
push
cmp
cld
xchg
mov
sbb
xchg
sbb
lahf
push
fucom
and
and
js
pop
testb
mov
iret
popf
add
aas
insl
adc
xchg
mov
mov
lcall
daa
xor
mov
cmp
aad
pop
push
out
or
push
cli
mov
mov
gs
adc
mov
lcall
or
pusha
pop
mov
pop
repnz
in
iret
ja
pushf
pop
mov
rcrb
in
jmp
out
pop
les
cmpl
cli
push
push
mov
fdiv
push
stos
ljmp
mov
inc
sti
in
mov
xchg
stc
sbb
out
sbb
dec
out
repz
mov
iret
in
and
xchg
mov
sbb
scas
pop
arpl
add
loopne
call
inc
pop
subl
mov
pushf
dec
loopne
out
pusha
and
idivb
push
mov
out
jb
scas
test
das
xchg
scas
mov
scas
clc
ret
mov
call
bound
pop
loope
pop
in
adcl
xorb
pushl
mov
repz
arpl
outsl
call
inc
lock
xchg
in
jp
cli
cmp
lahf
ja
mov
push
sbb
xor
mov
mov
lods
xchg
loope
aad
sbb
stos
jmp
mov
dec
notl
cmp
repz
push
jecxz
test
movl
inc
mov
gs
decl
add
or
pushw
das
dec
ss
int
cltd
inc
sbb
xlat
aaa
das
sbb
or
repz
jle
jns
stos
das
mov
add
adc
and
cwtl
mov
movsb
test
test
add
mov
fdivrl
and
pop
dec
add
dec
mov
pop
dec
les
std
jp
inc
int
mov
js
ja
jl
and
mov
popa
push
sti
jg
bndldx
in
dec
sub
mov
cmp
jb
jnp
out
mov
in
mov
dec
data16
movsl
rorl
imul
jecxz
xor
jns
add
lcall
jnp
daa
and
loop
xor
vmread
dec
clc
loopne
pop
dec
sbb
sub
iret
fisttps
imulb
mov
loop
lret
das
repnz
push
mov
into
mov
pop
scas
or
repnz
cmp
cmp
add
mov
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
dec
mov
xor
int
jmp
pop
pop
gs
mov
xchg
push
dec
lock
jl
dec
ret
ror
test
test
in
je
jb
adc
dec
cmp
nop
lods
xchg
mov
test
jb
test
enter
mov
mov
add
test
sub
pop
inc
mov
xchg
push
pop
mov
xchg
xor
in
xor
orl
xchg
rcrl
call
test
mov
mov
outsb
loopne
into
dec
std
ror
push
daa
mov
push
fisubrl
dec
push
mov
subl
int3
daa
adc
pop
lret
repnz
ja
popa
xlat
push
push
aaa
data16
mov
movsl
or
negb
fdivr
inc
fnsave
mov
lcall
sbb
dec
cmc
test
ja
cltd
xchg
or
stos
into
mov
and
jne
cmpsb
mov
outsb
popf
inc
jo
ret
jo
or
enter
push
negb
add
sahf
aas
es
or
cmc
dec
xchg
in
int3
out
dec
and
adc
jmp
scas
loope
xchg
mov
aad
xor
cmp
fidivrl
jmp
repnz
xchg
out
xchg
and
aaa
pop
pop
push
enter
imull
push
rcrb
stos
mov
jecxz
mov
sbb
test
mov
mov
pusha
and
inc
xor
testb
std
movb
je
stos
push
mov
insb
push
push
jmp
jp
mov
stos
cmpl
pop
idivb
and
and
push
sub
mov
sbb
enter
lds
xor
jecxz
mov
jne
sarl
xchg
mov
adc
pusha
in
dec
int
pop
adcb
cmp
fsubl
add
mov
aas
sti
jge
adc
movsl
mov
cmpsb
adc
imul
test
js
xlat
lock
fildll
jg
mov
mov
mov
scas
incb
and
leave
ret
push
sub
cmc
mov
dec
mov
mov
or
push
out
movsb
clc
push
test
enter
xchg
sub
fmull
inc
mov
das
movsb
jge
mov
es
in
sub
mov
cs
fxch
mov
leave
sbb
inc
sbb
xor
shlb
jl
dec
lock
out
push
dec
rorb
icebp
xor
mov
cmp
cmp
hlt
int
int3
shlb
sub
pop
mov
mov
mov
sub
pusha
fidivrl
adc
inc
enter
fbstp
aad
les
adc
and
add
mov
sub
push
jbe
xchg
jno
jle
jmp
push
mov
adc
jno
lret
aaa
xorl
outsb
mov
out
add
push
enter
inc
fsubp
out
ret
inc
call
lahf
cld
adc
cli
and
cmp
aam
mov
mov
mov
pop
jge
mov
sbb
pop
lds
fcmovbe
jnp
stos
aaa
pop
mov
push
adc
pop
jp
lret
inc
jae
add
js
shll
mov
shrd
sub
pushf
mov
cs
pushf
xchg
repz
pop
pop
sbb
push
ds
jmp
je
in
xor
xchg
mov
loop
add
pop
adc
and
cmp
int3
mov
mov
ret
mov
mov
testl
mov
fsubrl
arpl
inc
mov
js
test
add
repz
andl
inc
mov
in
arpl
xchg
push
cwtl
add
movl
movl
movl
mov
mov
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
mov
dec
sbb
daa
mov
adc
mov
int
pushf
mov
push
pop
scas
ret
inc
push
cltd
loope
push
out
or
pop
clc
push
and
std
ss
inc
imull
sarb
adc
xor
subb
pop
mov
movsb
arpl
cli
and
jmp
cld
mov
xor
and
adc
cmp
pop
xlat
xchg
and
cmp
add
push
push
jge
flds
fwait
mov
sbb
and
fdivrl
stc
aam
sahf
jnp
or
js
cmc
imul
dec
cmp
decl
lds
jns
mov
and
arpl
push
cmovns
mov
and
mov
ljmp
jecxz
inc
mov
into
fcmovne
imul
and
or
sbb
enter
lea
pop
hlt
adc
es
clc
scas
aaa
loope
add
enter
adc
ja
xorb
cwtl
or
or
mov
jo
fildl
sbb
and
inc
mov
shl
xchg
or
jno
mov
ret
rcll
shlb
cmp
mov
push
fisttps
lret
xchg
add
shl
nop
and
dec
bound
lea
mov
xchg
adc
push
or
jmp
add
mov
xchg
adc
in
mov
sub
jns
iret
addr16
rolb
jecxz
push
jbe
repnz
mov
pop
cmp
lret
push
ret
sbb
clc
lds
mov
and
pushf
fbstp
xchg
dec
sub
arpl
xor
stos
insl
fsubr
leave
sbb
aad
fdivrl
xchg
xchg
jle
repnz
adc
shll
push
jno
ret
and
cmp
scas
loop
jl
pushf
push
imul
jb
pushf
out
lods
xor
mov
sbb
push
and
in
sub
hlt
sarl
sub
ud2
jp
mov
xor
dec
test
and
lods
pop
push
jne
and
movsb
and
ljmp
mov
mov
imull
js
mov
inc
add
adc
out
fstpl
mov
adc
push
lcall
cmpsb
pop
push
and
and
adc
ja
pop
roll
jno
cmp
ds
fsubp
dec
lods
add
mov
xor
add
ljmp
js
gs
stos
dec
jl
loop
jl
xor
inc
xor
lret
xchg
cwtl
lods
testl
mov
addr16
jae
pop
je
imul
sub
pop
out
pusha
fs
sbb
daa
mov
inc
cwtl
in
add
dec
jg
inc
ljmp
aam
or
test
popf
es
cltd
xchg
sub
inc
out
clc
push
jb
push
and
stos
mov
push
stos
xchg
or
xchg
cmp
cmp
sub
arpl
cmpsb
fmul
idivl
fdiv
int
ret
fcomip
mov
sarl
xor
jmp
lock
loopne
push
addb
mov
mov
jp
fwait
loopne
cli
std
lods
jle
pop
pop
subl
stos
pop
notb
loop
loopne
mov
cmp
int
loope
jecxz
push
jne
pushf
xchg
cwtl
mov
andl
jp
add
into
cltd
pop
pop
repnz
je
xor
xor
mov
cmp
sub
and
lret
pop
mov
fidivs
pop
push
and
inc
inc
arpl
jb
xor
das
fmul
mov
mov
int
pop
adc
adc
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
dec
sub
adc
das
mov
outsl
loopne
shr
xchg
push
pop
fiaddl
pop
aas
pop
mov
mov
data16
sahf
or
xchg
in
enter
es
cltd
mov
lds
jo
add
jp
inc
add
inc
adc
cltd
add
fbld
cltd
cwtl
xor
pop
sub
add
cmp
adc
sbb
jmp
cmp
mov
and
add
mov
jmp
inc
inc
push
nop
decb
inc
pusha
ja
cmc
shll
divb
mov
pop
repz
mov
hlt
loop
je
dec
inc
push
xchg
movsb
aad
xorb
iret
jp
mov
mov
inc
jp
jecxz
dec
clc
ret
push
mov
pusha
add
pop
pop
ss
iret
in
jecxz
xchg
sub
mov
cmp
pop
call
aam
mov
inc
mov
pop
fs
adc
nop
outsl
addb
sub
xchg
mov
data16
cmp
repnz
push
or
outsl
lods
ss
out
add
xchg
imul
push
cmpl
jne
shlb
pop
cmpsb
cmp
shrl
insb
cmp
js
add
cmp
mov
addr16
cltd
jl
sbb
js
mov
icebp
outsl
das
push
ficoml
je
jns
xor
js
stos
mov
xlat
loopne
jp
jp
fsubs
and
loop
mov
and
pop
sbb
jg
jge
pop
leave
inc
xchg
jo
push
mov
mov
iret
push
pop
out
inc
pop
addl
stc
ret
ds
mov
sarl
xlat
dec
pushw
ret
adc
jmp
dec
dec
pop
stos
fldenv
pop
or
sarb
iret
popf
jle
add
pop
js
mov
sbb
cmc
lds
xchg
pusha
lcall
adcl
ss
and
push
lds
aaa
adc
addr16
test
push
inc
mov
jns
lods
sbb
in
cmovo
xchg
add
xor
jl
ret
inc
movsl
mov
aad
jne
xor
mov
addb
out
dec
inc
push
xor
fiaddl
jge
fs
jecxz
in
pop
test
cmp
sbb
mov
mov
in
push
rcr
mov
push
pop
mov
push
jnp
aam
clc
pop
into
sti
and
fldenv
xchg
lahf
xor
pop
js
shll
adc
cmpps
mov
popf
test
inc
xchg
cmpsl
cmp
mov
pop
notb
xchg
mov
sub
mov
adc
loope
mov
sub
cs
mov
cwtl
add
lcall
xchg
lcall
pop
arpl
rol
pop
or
xor
or
fwait
int
je
mov
xchg
cmpsb
pop
mov
lret
movsb
inc
mov
and
je
mov
adc
xchg
jg
cmp
xor
in
jae
iret
or
xor
xor
nop
fwait
idivl
imul
sbb
or
in
cmp
loope
cmp
or
pusha
xchg
fimull
add
iret
or
sub
xchg
pop
std
jae
pop
inc
add
aaa
jb
jl
add
lret
aaa
test
daa
jmp
cs
mov
jnp
out
mov
and
inc
mov
inc
xchg
cmp
push
popa
add
mov
movsl
adc
sub
stos
push
mov
push
nop
out
push
pop
or
insb
dec
mov
call
or
insl
cmp
lods
dec
popf
enter
fisttpll
pop
or
fsubs
out
pop
and
pop
outsb
movsb
mov
sub
xchg
or
push
sub
and
xchg
es
cmp
mov
aam
imul
jne
adc
xor
add
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
xchg
jo
mov
xchg
cli
adc
mov
and
out
imul
dec
rcrb
test
sbb
test
push
cmp
pop
lcall
push
icebp
pop
iret
cmp
js
inc
cmovle
mov
loope
push
mov
into
xlat
push
inc
out
daa
sub
xorb
aaa
xchg
leave
cmc
stos
push
fdivrl
pop
in
mov
xchg
aas
push
out
stos
dec
nop
data16
add
jnp
cmp
aaa
sbb
or
rcll
or
pushf
push
rcr
insl
mov
add
adc
call
cmc
mov
jmp
xchg
pop
xchg
xlat
sub
int3
ret
add
in
jmp
clc
push
cmp
stc
imul
cmp
and
push
in
xchg
ret
dec
push
lret
sub
sub
cmp
push
fsubrs
sti
cli
lahf
out
push
jg
shr
test
xchg
sti
fdivrs
inc
shl
pop
mov
jb
sub
and
outsl
adc
fld
mov
fwait
lds
jmp
dec
lods
sub
push
mov
pop
jae
xchg
adc
pop
cmp
push
call
pop
sub
cld
dec
cmp
mov
jbe
mov
insb
xchg
xlat
not
stc
sbb
inc
shll
sub
add
pop
shrb
and
xchg
js
and
pop
mov
pusha
jne
fwait
mov
iret
sbb
lcall
and
xchg
fwait
sbb
xor
sub
adc
jge
scas
inc
mov
push
in
or
out
std
lahf
jb
pusha
jno
addb
sub
leave
inc
and
push
movsl
ret
mov
movsl
addr16
xorps
sti
xchg
mov
jg
ret
std
cwtl
ret
cmp
mov
sbb
xchg
lcall
pop
aad
adc
test
shl
push
and
sbb
lahf
fistpl
mov
mov
movsb
divb
out
ret
sub
lock
and
icebp
lock
jae
mov
push
mov
jnp
pop
push
test
fimuls
mov
mov
inc
xor
and
add
inc
adc
out
push
scas
sub
lret
les
pop
inc
add
fnstcw
adc
das
int3
loop
mov
mov
shlb
hlt
test
arpl
push
dec
or
jmp
mov
xchg
das
test
mov
add
sbb
push
stos
aas
das
xor
sahf
gs
outsl
push
xor
ss
add
jg
push
rclb
dec
xchg
aaa
faddl
pushf
lock
bound
add
imul
fildl
xchg
frstor
xchg
cmp
mov
cmp
mov
inc
sbb
sub
fucomp
and
inc
jno
ret
pop
imul
or
mov
pop
fdivrl
xorl
jno
in
add
sub
sub
jp
cs
insb
jl
mov
or
inc
jbe
pop
xor
mov
int3
cmc
sbb
cmp
fisubs
lods
xor
mov
stos
add
and
xchg
xchg
cmc
pop
xchg
dec
mov
loop
and
std
xor
mov
movsb
xchg
out
mov
pop
repz
mov
or
hlt
fcmovbe
rcrb
fisubs
popa
shll
inc
icebp
add
lret
bound
movsb
das
pop
jne
out
int
xchg
movl
push
or
mov
scas
or
movsl
jbe
and
ret
push
mov
aad
sub
sbb
ret
push
or
adc
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
mov
adc
fsubrs
dec
and
loop
pop
sub
adc
or
enter
test
cli
sbbb
xchg
stos
repz
cmp
cmp
ss
stc
xor
cmp
mov
outsl
cltd
adc
cld
andl
add
out
lcall
xchg
dec
mov
push
mov
cs
das
mov
or
mov
adc
xor
cli
and
cmpsl
cmp
xor
dec
imul
mov
pop
fidivrs
loopne
push
and
mov
xchg
inc
aam
loope
lahf
rorb
push
sahf
adc
push
xor
dec
fnsave
test
push
das
icebp
out
pop
inc
pop
add
or
adc
cwtl
xor
mov
jle
mov
out
xchg
sahf
sbb
push
jge
mov
mov
repnz
mov
jmp
xchg
bound
std
dec
mov
or
mov
sahf
pushf
or
jbe
pop
add
jmp
stc
sub
not
rcl
pop
jp
lods
jnp
adc
fsts
jge
cmp
inc
out
pusha
jb
out
imull
or
movsl
pop
adc
pop
ds
ret
pushf
movsl
fdivp
out
gs
mov
cmp
push
adc
push
push
adcb
sub
mov
fisubrl
arpl
shrb
add
or
inc
pop
mov
jg
jle
xor
adc
lahf
data16
add
ja
stos
pop
in
sub
mov
push
mov
inc
xchg
push
popf
daa
je
or
scas
enter
scas
es
inc
mov
or
cmp
push
xchg
xor
inc
jne
dec
adc
ja
push
scas
adc
stos
in
lret
lahf
add
into
lahf
push
into
imul
aas
adc
mov
movsb
pop
fildll
xor
pop
gs
push
sub
or
je
stc
ret
mov
clc
lret
adc
lock
xor
jno
mov
adc
movsl
mov
mov
xchg
sub
or
jae
fisttpll
adc
shl
ds
xchg
daa
xchg
sbb
sub
push
rol
in
push
out
xchg
rcr
adc
or
aam
scas
inc
dec
mov
or
dec
lds
les
jns
test
in
cwtl
enter
out
fistps
aaa
and
sub
fnsave
and
sahf
inc
nop
push
in
hlt
outsb
inc
ja
paddb
lret
cwtl
cmpsl
mov
cmp
sbb
adc
inc
add
cltd
fisttpll
push
or
add
cmp
hlt
stos
cli
push
andl
sub
mov
fildl
lds
iret
inc
and
in
and
les
cmpsb
cmp
out
test
fs
adc
into
jno
mov
sbb
pop
sti
sub
dec
mov
mov
pop
lds
add
nop
adc
jbe
xor
mov
je
adc
dec
dec
dec
ja
xlat
fwait
inc
dec
fcom
cmpsl
inc
xchg
cmpsb
repz
xor
push
xchg
popf
lret
adc
pop
rorl
inc
add
call
fsubs
sub
dec
push
into
sbb
push
std
incb
mov
lods
sub
bound
gs
lcall
or
fmull
aaa
lods
test
cmp
fistpl
xchg
and
or
dec
cwtl
outsb
cmp
fwait
mov
and
pop
cmp
sti
cmpsl
sbb
scas
into
and
loop
mov
dec
scas
xchg
adc
sti
xor
rcrl
push
xor
pusha
aad
push
dec
mov
xor
clc
jne
shlb
push
jne
jmp
std
inc
inc
in
pop
push
and
dec
xchg
push
sti
cmp
xlat
cmp
sbb
mov
sti
pop
and
enter
mov
lods
pop
mov
hlt
out
lds
fwait
jle
adc
dec
push
mov
es
pop
aas
jg
mulb
sarb
mov
aad
dec
dec
jg
imull
jl
fwait
or
cmp
push
dec
jns
arpl
sub
mov
push
push
lcall
push
lods
aas
adc
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
jb
clc
adc
adc
popa
pop
inc
data16
cmpsb
mov
iret
ljmp
pop
sbb
cmp
or
fnstenv
xchg
inc
jmp
mov
push
ljmp
gs
gs
xchg
jg
lock
lahf
mov
adc
pop
popf
mov
mov
adc
cli
mov
movsb
pusha
adc
jb
cmp
int
call
mov
repnz
inc
xor
sub
add
out
push
inc
add
or
fsubs
and
int
fisubrs
repz
ficoms
inc
stos
fwait
stos
push
in
sbb
mov
aaa
cmc
pop
adc
test
dec
je
xor
aas
aad
and
inc
scas
lret
inc
inc
out
jo
xchg
cmpsb
jp
scas
mov
adc
or
or
sbb
mov
adcl
insb
cmp
jne
sbb
push
out
or
jmp
pop
jecxz
outsb
orb
mov
push
in
leave
mov
pop
add
pop
push
add
fwait
and
mov
outsl
cmp
aad
int
sahf
mov
sbb
std
sub
or
and
jmp
inc
das
inc
dec
fadd
loopne
test
inc
jne
js
pop
xchg
pop
pop
sahf
ret
lock
sbb
scas
sub
and
adc
pop
popa
xchg
shl
loopne
cld
jae
pop
lcall
inc
loope
sbb
roll
in
add
dec
adc
aaa
adc
mov
pusha
cwtl
cwtl
add
popf
mov
mov
cmp
cmp
mov
mov
ret
roll
int
cmpsb
nop
mul
movsb
push
cli
push
in
jl
adc
add
lods
div
into
pop
sbb
outsl
mov
xchg
jl
inc
fcoms
mov
sbb
rorl
inc
orl
fwait
andl
dec
fs
test
adc
mov
jno
mov
dec
test
jle
mov
xchg
sbb
sar
push
xchg
jb
mov
jge
sbb
adc
ret
mov
add
sbb
adc
or
pop
mov
in
daa
dec
jb
mov
ret
out
imul
scas
andl
sbb
mov
hlt
jno
inc
cs
aaa
cmp
sbb
jle
or
mov
cmp
cwtl
xchg
std
push
sub
or
sub
mov
out
popa
mov
subl
jg
lahf
pop
adc
cmp
pop
lret
dec
cmpsb
mov
in
jg
xlat
imul
test
and
or
inc
loopne
xor
dec
jge
and
pop
xor
cltd
sbb
pushf
or
and
loopne
fs
out
sub
xor
jp
xchg
mov
cmp
arpl
into
cmp
jp
xor
jb
lahf
cs
or
jbe
movsb
push
stos
fnstenv
mov
pushf
lret
repnz
or
fisubs
xlat
lods
dec
push
cmpsl
inc
sbb
pushf
inc
mov
mov
icebp
lret
repnz
ret
int3
std
arpl
int3
imul
sbb
mov
and
aas
and
inc
xchg
lcall
cmc
rcrl
pushf
and
and
jecxz
push
in
pushf
sub
mov
inc
dec
movnti
push
dec
add
xchg
cmp
cmpsl
std
cld
and
popa
int3
mov
inc
loop
inc
subb
mov
daa
jmp
xor
repz
hlt
or
cmpsb
xlat
decb
popa
movl
jb
xchg
and
pop
jecxz
not
pop
lods
repz
aaa
or
pop
push
mov
add
icebp
pushf
and
add
fstsw
dec
mov
add
fnstenv
jmp
cli
push
in
cltd
mov
testb
shrl
daa
adc
loop
les
or
fwait
lods
sahf
cmpsl
add
fsubrs
test
test
scas
xorl
sti
push
pop
stos
shll
and
xlat
mov
push
rol
and
pop
fiadds
in
push
aas
repz
cmp
hlt
sar
mov
rol
out
push
sbb
xchg
mov
insl
sub
add
fwait
lock
sub
testb
ljmp
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
push
xchg
aaa
ja
adc
adc
xchg
xchg
pop
xlat
mov
dec
fildl
dec
mov
popa
lds
hlt
cmpsb
mov
stos
dec
aad
mov
dec
mov
iret
insl
and
cmpsl
inc
mov
addr16
sub
sub
push
scas
adc
xchg
xchg
add
aad
and
es
mov
xor
es
out
jmp
mov
popf
mulb
and
shll
pop
jl
fnsave
sbb
aad
test
jnp
ljmp
or
loop
xchg
xor
push
enter
inc
div
dec
or
repz
and
mov
dec
dec
cmp
inc
cli
ss
fstps
sbb
sub
gs
jae
sub
mov
cmp
mov
dec
cld
mov
sub
int
js,pt
iret
in
iret
aas
out
mov
inc
and
je
pushl
ljmp
adc
cmp
aad
ret
int
mov
pop
mov
jb
out
sub
adc
fldenv
movsl
adc
imul
push
push
enter
inc
stos
fidivs
adc
pop
sbb
push
stos
pop
add
mov
mov
arpl
push
sub
data16
scas
shlb
loopne
fwait
sahf
adc
xor
out
repz
push
xor
mov
sub
xchg
mov
jle
cmp
jp
or
lret
out
sub
dec
jle
and
lods
scas
push
sub
loopne
and
fisttps
lret
into
iret
mov
scas
lods
xchg
mov
lahf
nop
xchg
mov
test
push
dec
es
sub
xchg
jecxz
stc
pushf
and
cmp
insl
cmp
shl
mov
cltd
ja
fstpt
out
inc
xor
jb
lcall
fst
push
or
jae
xchg
adc
shl
dec
and
in
sbb
mov
frstor
push
test
stos
das
jl
dec
sub
xchg
test
lods
and
sub
mov
stc
xchg
xor
je
shr
push
es
inc
lods
cmp
hlt
dec
mov
xchg
push
xor
cmpsl
cmp
icebp
add
insb
inc
xor
sbb
mov
shll
shrl
mov
int3
jle
sarl
scas
cwtl
les
mov
mov
call
outsb
daa
aam
inc
sbb
lods
jge
adc
loopne
bound
adc
xchg
pop
out
mov
sbb
in
test
hlt
cmp
popf
push
out
aad
mov
jle
jl
lret
push
rcll
cwtl
add
lods
sbb
std
leave
jge
fwait
orb
rcrb
lods
or
popw
sbb
sub
jp
sub
xor
out
dec
call
adc
nop
add
out
add
out
sarl
dec
ljmp
pop
push
pop
push
outsb
dec
cmpsl
xchg
cmpsl
sub
mov
scas
and
jae
adc
sub
or
mov
mov
xchg
cli
mov
aaa
or
jl
push
test
xor
sbb
push
out
outsl
icebp
mov
pop
stos
idivl
xor
and
lret
push
xchg
and
xorl
sbb
sbbl
xchg
cmp
sbb
pushf
mov
and
aas
mov
es
das
loope
fcomip
aad
cmp
repz
mov
loopne
addr16
fdiv
mov
test
push
jmp
aad
push
xchg
rol
in
ret
push
shrb
std
jb
inc
fsubrs
fsubr
push
xchg
jl
inc
scas
push
cmp
add
mov
scas
and
pop
push
add
xchg
jae
enter
mov
and
clc
cmp
push
mov
xchg
nop
outsl
lods
sbb
jne
or
pusha
xchg
mov
loopne
lahf
lret
adc
loope
mov
rorl
xchg
adc
push
pop
lret
icebp
lcall
loope
mov
ret
inc
push
xchg
cs
mov
sbb
sub
cmp
out
shll
push
cld
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
cmpsl
imul
adc
adc
nop
outsl
dec
or
inc
fisubs
adc
inc
cmp
jne
jbe
dec
add
jmp
lcall
adc
lcall
and
cmp
sar
leave
frstor
xchg
cmp
or
dec
cmp
mov
or
cmp
inc
xchg
movb
out
fiadds
mov
adc
into
and
into
cltd
sub
out
xchg
mov
fisttps
arpl
and
popf
pusha
add
sbb
in
pop
push
and
mov
sahf
dec
leave
pop
mov
in
cmp
inc
add
rclb
test
les
pop
jnp
mov
scas
jne
insl
sbbb
sub
mov
addr16
inc
mov
mov
mov
push
aad
in
push
lcall
cmp
aam
xor
call
fcoms
inc
cmp
faddl
ljmp
mov
pop
pop
insb
pop
sub
leave
dec
loope
movsl
mov
sub
out
and
push
sarl
in
test
jne
shlb
inc
cld
lcall
rcrl
sub
and
pop
popa
cmp
sub
mov
jg
cmpsb
pop
shl
cmpsl
sub
loope
cmp
ret
dec
cld
out
push
mov
xchg
loopne
mov
cmpsb
out
rolb
cmc
out
aam
in
inc
in
cmp
xlat
in
xchg
ret
repz
jle
sbb
xor
les
push
popa
add
mov
inc
jl
mov
mov
cli
dec
stos
lds
xor
subb
inc
aaa
mov
idivb
pop
and
pop
sbb
jmp
and
and
std
sahf
xor
mov
fwait
int
vmaxpd
imull
push
int
mov
dec
and
pop
sub
sub
enter
mov
add
mov
outsb
in
hlt
clc
fs
gs
out
pop
mov
in
pop
pop
mov
shll
outsb
dec
or
lcall
pusha
sub
mov
mov
and
inc
xchg
and
jno
rorl
xor
dec
push
and
aad
sti
aaa
pushf
push
dec
mov
lods
repnz
mov
sti
std
lods
icebp
ja
jmp
shll
std
imul
out
xchg
cli
jae
in
mov
pop
sbb
cmp
mov
push
mov
and
push
mov
test
int
dec
jge
dec
enter
mov
das
cmp
fs
data16
sub
mov
jbe
jb
lods
sub
imul
pop
std
xchg
outsl
push
mov
sub
cli
inc
pop
xchg
sbb
add
add
fucom
stos
xor
fwait
in
fwait
jnp
jne
mov
int3
push
iret
repz
addr16
jp
ss
sub
sub
test
mov
outsl
leave
hlt
jmp
scas
mov
popa
int3
mov
notb
mov
cmp
add
jnp
dec
testl
mov
in
sbb
jo
adc
jo
mov
push
push
es
psubusw
or
les
nop
enter
pop
pusha
cmp
clc
add
iret
dec
jo
lods
nop
or
jge
dec
cmc
push
jno
jbe
mov
repnz
cmp
popa
testl
push
mov
pop
mov
sub
sbb
popf
lret
in
ljmp
push
mov
sub
sbb
in
jb
test
daa
icebp
gs
sbb
inc
inc
push
mov
xchg
lret
jecxz
cmpsl
xchg
test
jbe
sub
test
inc
and
das
sbbl
sbb
cmp
clc
mov
lahf
rep
ja
inc
cmpsl
iret
cltd
call
insl
jmp
stc
test
stc
xchg
andb
mov
mov
sarb
cmp
xchg
xor
cmp
sbb
jb
mov
push
iret
test
mov
leave
cmp
mov
adc
aam
out
fs
jmp
jmp
jo
jne
inc
mov
sti
sub
adc
jge
mov
mov
push
rcrb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
rclb
xchg
test
mov
int
sub
clc
mov
imul
sub
or
fisubl
xor
mov
test
xchg
out
lahf
loopne
jnp
andb
scas
stc
cmp
out
pop
mov
pop
cmp
adc
bound
lcall
movsl
andb
jge
and
sbb
pop
js
les
mov
mov
adc
xor
sub
clc
andl
imul
aam
xchg
ffreep
pop
repz
dec
push
movsb
mov
cld
inc
mov
mov
lahf
adc
clc
loopne
out
js
test
or
pop
pop
aaa
sbb
not
sub
icebp
ljmp
insl
or
add
mov
faddp
jmp
sub
iret
in
out
mov
push
mov
mov
movups
faddl
outsb
xchg
cld
push
pop
mov
int3
lds
add
mov
xor
stos
lds
add
popa
data16
cwtl
cltd
aam
jns
aas
mov
es
js
mov
mov
sbb
roll
xchg
call
rcll
clc
pop
pop
addr16
shrb
stos
pop
and
in
incl
mov
sbb
outsb
cmp
lods
dec
clc
xor
pop
pop
iret
xchg
mov
mov
hlt
dec
in
mov
cmp
inc
cmp
jecxz
jae
cli
lods
insb
ljmp
pop
test
lds
lret
inc
out
inc
adc
stos
aam
jecxz
loop
pop
repz
in
cltd
and
addr16
shlb
mov
dec
pop
sub
out
mov
sbb
sbb
pop
jo
cmp
mov
cmp
pop
xchg
add
mov
mov
loop
in
add
xchg
stos
pop
mov
ljmp
scas
arpl
mov
lods
dec
jmp
sbb
ljmp
loop
outsl
xchg
adc
popa
fidivs
div
xchg
stos
aad
sub
adc
data16
aam
dec
inc
rclb
push
xchg
mov
mov
inc
sarl
lea
mov
mov
mov
pop
mov
sub
push
andb
fstl
ja
loopne
fsubl
test
mov
mov
mov
adc
xor
pop
cmp
xchg
jecxz
sbb
aam
pop
pop
adc
hlt
cld
xlat
mov
sbb
sahf
dec
aas
push
xchg
mov
mov
push
add
and
add
ret
lret
xchg
push
sbb
andl
jo
inc
sub
in
loopne
int3
je
xchg
adc
imul
sub
pushf
mov
loop
lea
mov
sub
push
jge
lods
xor
jg
xor
fwait
push
test
das
add
imul
adc
scas
push
jmp
adc
into
jbe
cli
shl
dec
imul
insl
cmp
mov
and
adc
xor
mov
je
push
push
scas
push
push
dec
shl
jmp
cmpsw
scas
jg
dec
movb
cmp
fidivrl
mov
movsl
dec
jo
stos
out
fnstenv
and
adc
jg
xor
add
sbb
xchg
jg
repz
flds
inc
popa
sbb
stos
icebp
push
icebp
adc
sbb
or
xchg
lods
daa
add
shlb
pop
test
ja
fisttpll
pop
cmpsb
push
movsl
faddl
push
mov
stc
mov
test
icebp
lods
icebp
stos
cmovae
or
adc
adc
arpl
add
ret
jecxz
xor
in
pushf
push
aaa
lds
cltd
mov
arpl
mov
call
scas
in
adcb
std
lds
aam
mov
in
jmp
pusha
mov
mov
frstor
ljmp
jns
pop
xor
std
adc
xor
lret
repnz
or
popa
mov
sub
mov
rcrl
mov
sbb
jnp
nop
inc
xchg
pop
lret
mov
repnz
or
psubsw
xchg
testl
aaa
adc
cs
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
mov
clc
adc
adc
sbb
dec
test
dec
jnp
in
mov
inc
andb
adc
pop
push
mov
dec
adc
inc
and
add
sbb
and
sbb
mov
mov
pop
dec
popf
adc
movsl
jno
xlat
pop
cmc
jl
hlt
data16
stos
shlb
cmc
insl
rcrb
mulb
or
stos
xor
fcomps
cmp
add
pusha
sbb
mov
lea
sti
adc
jecxz
repnz
rorl
outsl
lds
pop
scas
pop
mov
jns
nop
push
mov
cmc
ficompl
jno
dec
cmpsb
cld
and
leave
push
stos
lea
fcmovnbe
push
in
xlat
repz
iret
mov
inc
pop
adc
dec
jnp
loope
cmc
dec
outsb
loop
ror
xor
test
pop
clc
lea
call
dec
xchg
outsl
iret
push
gs
lret
mov
dec
xor
popa
fnstcw
call
xchg
adc
fcom
adc
test
push
je
xor
add
push
inc
xor
jns
sahf
lcall
iret
fisubl
test
jo
test
shr
jb
sarl
sub
imull
push
call
pop
mov
std
mov
aad
jns
mov
sub
js
mov
pushf
and
popf
xor
inc
imul
pop
mov
ffree
cmc
mov
imul
inc
push
and
sub
and
mov
lcall
mov
cmc
mov
push
cmp
clc
and
xchg
iret
bound
sub
xchg
movsb
xchg
inc
shlb
xchg
rclb
lods
cmp
clc
mov
xchg
or
adc
int
daa
cltd
pop
jns
out
in
push
sub
push
inc
inc
xchg
mov
lcall
pop
inc
jle
fisttpll
into
mov
dec
jmp
clc
sub
out
andb
add
and
mov
repnz
add
pop
dec
outsl
leave
xchg
in
cmc
mov
mov
xor
push
xchg
mov
pop
adc
or
mov
or
and
iret
pop
dec
dec
cltd
mov
ss
xlat
add
xchg
push
xor
sti
push
and
ds
fldcw
cwtl
or
arpl
adc
mov
leave
inc
loope
decb
push
push
xlat
inc
iret
subb
xor
into
bnd
and
xor
subl
jp
mov
inc
rolb
aaa
push
pop
add
mov
out
fcoms
arpl
sbb
jge
pop
sbb
push
dec
xlat
adc
repnz
cld
pop
inc
pop
dec
movsb
jae
pop
adc
shrb
movsl
jns
popa
pop
dec
or
and
sub
push
mov
lods
push
sub
ss
in
inc
out
xor
imul
inc
push
mov
leave
mov
mov
test
mov
in
aaa
js
inc
sar
jge
add
cmp
dec
lods
mov
addr16
xchg
sbb
aad
sbb
xchg
pop
push
mov
in
popa
fwait
int
clc
rcll
pop
shr
mov
push
out
sub
xchg
aas
int3
xor
cld
add
scas
or
add
pushf
stos
xchg
adc
mov
ds
jnp
aaa
insl
loop
mov
mov
cmp
and
insl
aam
pop
cmpsl
push
cmp
sub
or
mov
pop
fbstp
mov
xor
mov
ja
imul
je
lock
lahf
scas
cld
sbb
test
loope
adc
adc
call
pop
sarb
pop
inc
je
add
in
add
push
cmp
sub
xor
xor
stos
and
mov
or
jp
stos
cmp
aas
inc
xor
das
pop
push
or
sub
aaa
into
push
shll
imul
jg
lret
outsl
inc
mov
scas
mov
loope
cmp
add
leave
imul
flds
insl
cmpsb
mov
add
hlt
pop
sbb
pop
xchg
and
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
or
popa
clc
adc
adc
das
in
xchg
xchg
pop
add
out
add
les
push
and
jo
stc
and
roll
xchg
or
arpl
xor
xchg
cmp
or
out
fisttpll
mov
sub
or
mov
pop
arpl
add
mov
test
test
leave
or
dec
add
out
add
cs
mov
pandn
test
outsl
ljmp
lret
add
and
dec
pop
xchg
inc
scas
pop
jecxz
inc
cmpsb
xor
enter
lahf
mov
mov
imul
hlt
scas
rclb
cmp
pop
loopne
xchg
pusha
lret
push
mov
cmp
iret
add
push
adc
cmp
mov
icebp
loopne
xor
xchg
jo
mov
cmc
daa
cmp
mov
fcmovnb
addr16
subb
movsb
push
mov
imul
popf
adc
jecxz
adc
push
inc
fsubrl
push
add
add
adc
je
syscall
sbb
push
dec
pop
and
inc
push
cmpsl
hlt
add
sub
or
jmp
adc
cs
popa
push
push
pop
push
ljmp
sbb
js
add
movsl
push
clc
mov
sbb
jmp
cs
iret
call
adc
clc
arpl
fistl
nop
jne
repz
popa
shrb
sahf
bound
adc
pop
inc
repz
inc
inc
or
push
lcall
xor
mov
add
imul
or
xchg
js
jb
sbb
sub
cli
mov
jne
pop
mov
inc
inc
imul
adc
mov
push
jne
sbb
ds
test
fstps
mov
push
xor
mov
inc
jmp
mov
std
sub
push
push
cmp
loop
add
sub
outsb
aam
test
lods
pop
testl
int
fstpt
std
jne
leave
jmp
je
test
or
and
outsb
push
iret
out
fcmovbe
hlt
insl
ror
test
xor
iret
decl
dec
sub
gs
mov
xchg
push
fsubr
mov
mov
jnp
inc
pop
call
xchg
sbb
mov
mov
flds
clc
xor
cmp
incb
push
popa
mov
and
xor
dec
mov
ja
rol
push
mov
push
sbb
fstps
xchg
mov
dec
lret
dec
mov
fucomi
int
das
or
sub
xorb
lds
cmpsb
sahf
mov
into
repnz
jmp
jb
pushl
fs
sbb
aas
movsl
sub
lea
je
or
xchg
movsl
sbb
aas
inc
pusha
in
repnz
jecxz
dec
cmp
sub
or
addr16
sarl
mov
std
or
aad
and
test
cmp
popf
ja
test
pop
scas
xor
pop
testl
iret
sub
lock
jecxz
or
jnp
push
lret
bnd
testl
pop
aas
dec
dec
mov
notl
les
mov
xor
andl
or
sub
test
inc
cmp
sbb
aas
iret
mov
jmp
hlt
je
nop
scas
cltd
sbb
scas
adc
cli
cld
iret
or
cmp
cli
dec
scas
pop
inc
iret
movsb
add
repnz
pop
inc
cmpsb
movb
iret
xchg
push
int
hlt
push
sbb
sub
push
cmp
sbb
arpl
and
sbb
push
mov
aam
cmp
sub
pop
push
and
es
sbb
dec
dec
ljmp
and
mov
addr16
add
popf
aas
xchg
cmpsl
cmp
into
aam
and
xlat
popa
outsb
in
sahf
out
adc
orb
pop
push
adc
mov
lret
dec
es
loopne
lret
repz
ljmp
orb
pop
pop
aam
mov
add
jg
xor
push
lods
movsb
xchg
sahf
adc
addr16
dec
add
rolb
add
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
mov
push
dec
jne
clc
adc
adc
out
js
pop
xor
dec
arpl
adc
adc
and
push
xchg
and
pop
mov
mov
push
mov
fstpl
jno
dec
dec
in
mov
cmp
call
pop
std
sub
lods
lahf
clc
add
lcall
pop
ja
fsubr
loop
pop
sti
pop
addb
inc
lods
sub
add
mov
sti
sahf
jno
fsubp
sbb
jp
stos
dec
test
pop
xchg
pop
jns
jge
cli
into
in
ret
jb
xchg
int
aas
push
mov
push
arpl
and
jnp
or
sub
cmp
cmc
mov
inc
cmpb
adc
pop
mov
cmp
add
cmp
ret
aas
popw
mov
cld
fistpll
jns
nop
jnp
test
pusha
fwait
test
jb
jl
inc
loop
mov
xor
addr16
pop
in
jecxz
lea
or
fsts
addl
mov
xor
pop
clc
rcrb
dec
loope
int
jno
mov
dec
sbb
fsubrl
lds
sbb
rcl
push
xchg
jb
add
loope
pop
jne
popa
aas
sub
or
rorl
pusha
mov
ret
movsl
insl
fwait
mov
lret
dec
repnz
cmp
mov
cmp
pop
sahf
loop
sub
test
test
adc
mov
xorb
lock
or
ret
xor
aam
loope
xor
cli
inc
adc
sbb
scas
cld
or
jecxz
rcll
jno
sbb
stos
pushf
lock
jne
adc
xor
cli
faddl
push
lahf
sub
data16
arpl
pop
sub
xchg
push
sub
out
rcr
dec
cmpsb
imul
pop
mov
jg
xchg
lea
in
sub
pop
xor
and
pop
push
loopne
pop
ds
cmpsl
arpl
adcb
adc
enter
sbb
fisttps
int
lds
adc
jne
ja
dec
xor
push
fwait
xor
fwait
mov
add
pop
mov
mov
mov
rcl
popf
mov
jne
es
inc
aaa
out
es
repz
xchg
lock
sarl
or
inc
mov
xchg
jns
or
into
mov
jbe
lock
pusha
cltd
pop
in
xor
ljmp
mov
mov
stos
stc
push
jo
lods
and
popf
loop
adc
cmp
inc
mov
adc
adc
aam
call
imul
lods
mov
scas
jl
pusha
xor
mov
sub
mov
add
mov
out
xor
jge
in
adc
mov
je
lcall
xchg
push
sbb
mov
adc
stc
negl
xchg
iret
mov
jecxz
int
lods
mov
and
pop
push
push
sub
push
mov
pop
pop
nop
pop
out
adc
fisubrl
nop
ljmp
lret
jo
add
pop
xchg
or
sub
sbb
sbb
aam
pop
jmp
cmpsb
cmp
and
push
push
xorb
lods
daa
cli
push
leave
movb
call
insb
cld
aam
dec
in
movsl
xchg
xchg
pop
push
xor
jb
gs
mov
imul
mov
xchg
in
fistl
repnz
dec
cmp
xor
dec
test
inc
movsb
xchg
xchg
cmp
jmp
inc
push
xor
xchg
cwtl
ss
jae
fwait
insb
xchg
mov
imul
mov
cmpl
add
out
mov
jno
push
add
jmp
xchg
add
jnp
stc
push
sub
sti
jmp
lret
in
push
lock
adc
mov
das
jge
mov
or
stos
push
sahf
lret
adc
into
adc
pop
mov
fidivrl
sbb
pslld
push
insl
sub
adc
scas
stos
xchg
pop
mov
testb
mov
sbb
pop
fdivrs
lds
push
add
lds
lcall
inc
inc
neg
mov
mov
inc
int3
sti
mov
std
pusha
jle
stc
push
fcomp
mov
mov
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
push
push
or
data16
ljmp
mov
mov
jbe
imul
xchg
mov
lods
sub
icebp
in
imul
ror
fmull
mov
mov
mov
inc
enter
lods
imulb
cmp
xor
hlt
popf
daa
xor
sti
jno
xor
insb
clc
clc
push
xchg
xchg
popf
in
sbb
mov
sbb
out
mov
imul
popf
mov
das
cmp
pop
das
add
jecxz
es
ljmp
sbb
dec
jne
cmp
mov
adc
fyl2x
js
out
addb
xchg
clc
loop
movsb
inc
adc
aas
pop
fsubl
mov
bound
out
jb
mov
jle
sbbb
sbb
jbe
int
sbbl
pop
cmp
mov
cs
bound
dec
adc
cmp
sub
sub
enter
dec
icebp
div
insb
in
inc
xlat
repnz
mov
outsb
add
imul
popa
outsb
jnp
jmp
mov
dec
jp
xchg
das
rolb
fisubl
sbb
gs
aaa
out
fnstsw
jb
lock
xchg
pusha
insb
movsb
xchg
jnp
fldl
xchg
pop
arpl
push
test
jge
pop
arpl
mov
movsl
pop
lods
lds
fsub
add
xor
inc
lods
xor
daa
nop
mov
add
lea
push
stc
push
mov
xchg
pop
mov
mov
mov
daa
push
and
jmp
addr16
lcall
push
mov
imul
cli
sub
xchg
mov
jl
bnd
cmp
inc
cmp
popa
dec
aaa
inc
incl
sbb
fneni(8087
jp
mov
push
cli
popf
repnz
xchg
sbb
lcall
nop
lcall
lcall
jbe
xor
sahf
xor
and
insb
add
fcompl
cltd
pop
cmc
mov
mov
xor
xchg
push
cwtl
aas
xchg
push
sbb
lods
cld
stos
cmp
out
pop
aad
scas
imul
fcoml
mov
mov
xor
adc
ret
mov
add
icebp
stos
test
divl
push
xchg
fists
cmp
jecxz
push
lods
mov
loopne
movsb
sub
stos
scas
stos
addl
rcll
movb
loope
mov
xor
mov
dec
scas
ret
aas
push
in
pmulhw
pop
cltd
scas
fisttpll
popw
adc
add
cmpsb
mov
in
sub
adcl
jge
pop
sbb
ret
xor
lcall
adc
sbb
fwait
pop
loop
cmpsl
xlat
test
dec
push
xlat
push
jecxz
fidivrs
leave
repz
lahf
not
sbb
fwait
icebp
popa
jg
xlat
dec
xchg
cmp
cmp
call
stos
mov
dec
pop
std
or
push
fstp
idivl
push
std
js
and
jmp
mov
loop
jg
adc
lahf
insl
test
dec
dec
aam
cmp
adc
adc
imul
outsl
cmp
loop
dec
das
mov
sbb
fsubrs
mov
lea
ror
aas
cmp
in
adc
xlat
xchg
sub
push
inc
add
xor
js
xchg
and
lds
cmp
adc
and
gs
xor
sub
add
xlat
fistpl
xlat
xchg
jnp
push
int3
push
or
jle
jns
out
jno
jno
jl
cmp
jl
pop
push
xor
sub
or
hlt
lret
out
outsl
mov
ljmp
sarb
mov
aaa
mov
xchg
fidivs
adc
mov
adc
cli
inc
jbe
incl
fwait
outsb
mov
xchg
bound
js
call
ljmp
push
mov
jae
shlb
aad
push
jb
sub
dec
lods
std
pushf
and
andl
add
arpl
stos
adc
mov
orl
mov
scas
aaa
rolb
jb
shlb
rorl
xchg
lock
int3
cld
fmull
cmp
movb
jo
cmc
pop
add
add
rorl
mov
shl
icebp
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
loopne
cmp
adc
aam
mov
xchg
ja
cmp
pop
pop
out
sti
xchg
push
cmpsl
push
xor
mov
pop
mov
dec
pop
ja
mov
push
insl
ret
pop
xchg
or
or
ficoml
pop
jno
or
mov
cmp
nop
sub
inc
mov
dec
inc
pusha
or
push
in
mov
mov
push
stc
out
push
fiaddl
inc
jecxz
mov
pusha
push
and
addr16
adc
mov
aad
push
inc
jne
test
imul
mov
les
dec
in
pop
mov
cld
push
xor
xchg
rcl
subl
in
fdivrs
rcrb
cmc
jns
popa
inc
sub
ret
int3
icebp
jge
daa
inc
jne
mov
xor
shrl
leave
push
pop
push
sub
mov
mov
loopne
ljmp
push
rolb
out
push
mov
daa
fstps
cmp
add
and
push
add
sbb
xchg
dec
cmp
dec
mov
fcmovu
add
jbe
aaa
push
jge
pop
cmp
push
imul
push
ficomps
inc
aad
scas
push
out
xchg
adc
es
push
and
adc
mov
testb
fsubs
lret
fstpt
mov
mov
xor
mov
mov
cmc
popf
pusha
jo
out
dec
out
cmp
xchg
dec
es
imul
cwtl
mov
stos
lea
adc
leave
pop
inc
sub
addl
mov
mov
repnz
gs
xchg
ds
repz
sub
repz
flds
xlat
add
jmp
jge
pop
aas
cwtl
jmp
insb
out
loope
jl
in
dec
inc
adc
jge
rcr
rcrl
popf
sub
data16
cmp
inc
fucomi
shlb
in
xchg
out
xchg
outsb
and
lret
mov
rcrl
fs
ds
cli
out
xchg
mov
les
ds
ds
je
mov
outsb
dec
mov
shlb
cmp
mov
sti
fwait
adc
fisubrs
jns
das
inc
aaa
jo
shrb
pop
out
lods
push
movsl
xor
test
sub
repz
nop
pop
add
mov
mov
stos
dec
imul
push
fdivs
mov
cli
mov
add
fidivrs
rol
pushf
subb
mov
or
push
sub
add
out
sbb
jecxz
cmp
sbb
shrl
test
adc
lret
test
pop
mov
cmp
jo
sbb
das
stos
aas
cli
int
into
xor
aad
sub
mov
in
insl
jne
out
dec
pop
push
inc
xchg
xlat
imul
call
insl
rcrl
push
leave
insl
shll
push
xchg
jg
aad
pop
cmp
and
sub
pop
lods
xchg
cmp
out
icebp
outsb
xor
sbb
sti
out
mull
dec
sub
lock
je
in
xor
sbb
lea
pop
push
pop
push
cmpl
pop
jno
cmc
lock
jge
sub
in
mov
shr
push
jno
dec
and
jbe
cmp
pop
cmpsb
xchg
push
out
mov
test
call
inc
or
sub
mov
mov
mov
fbstp
lods
mov
mov
testl
dec
dec
push
sub
lret
xor
cmp
mov
lcall
cmpsl
cmp
inc
inc
sub
xchg
xchg
loope
jae
loope
xor
sbb
mulb
add
push
repnz
jge
inc
inc
movsl
cmp
iret
inc
cltd
jne
push
sub
notb
inc
jg
scas
or
xchg
sub
fcoms
std
sub
faddp
ds
xor
mov
xchg
cld
lea
or
in
cmp
xchg
cmpsl
push
inc
jle
cmp
cmpsl
and
fildl
js
add
push
pop
dec
out
lods
mov
enter
popf
adc
mov
loope
adc
xor
xchg
mov
lret
lods
and
das
stc
mov
jmp
nop
test
adc
sub
dec
xchg
fstpl
cmpsb
inc
clc
adc
adc
scas
out
psubb
ja
imul
lahf
lea
cmpsl
cmp
fidivs
lret
inc
cmp
jp
jle
pop
sbb
jp
adc
push
stc
pop
in
ss
mov
clc
jge
or
mov
dec
or
test
ret
mov
fldenv
hlt
iret
jl
test
shrb
scas
mov
dec
xor
ret
mov
push
fnsave
aam
imul
icebp
insb
lds
xor
hlt
in
or
popa
cmp
push
scas
fsubrs
sbb
mov
arpl
adc
lock
pop
add
dec
cmp
and
stos
stos
call
mov
jno
in
mov
cmc
fiaddl
inc
push
pop
jle
insb
in
mov
push
clc
mov
cmp
stc
adc
enter
cli
test
inc
pop
outsb
call
xchg
sub
pop
mov
pop
pop
mov
fdivl
sbb
incb
mov
sar
int3
mov
push
cmp
les
sbb
ss
push
xor
xlat
sbb
cmp
jmp
repnz
xor
loope
push
gs
ja
shl
and
or
lret
fwait
xchg
subb
in
arpl
xor
xor
insl
jno
inc
stc
stos
xchg
int
lods
jmp
sti
or
jb
jo
addb
rcll
and
leave
mov
mov
and
cmp
lret
in
out
cmp
outsb
dec
mov
mov
stos
jne
mov
xchg
fidivrs
icebp
xchg
add
hlt
js,pn
or
push
adc
inc
jle
aaa
out
and
dec
movsl
xor
cmpsb
popa
pop
jl
lret
sub
xor
dec
dec
jno
sub
les
aaa
fwait
push
test
rclb
and
mov
sub
mov
pop
push
jae
xlat
popa
ror
pop
jle
push
sub
pop
lea
pop
leave
decl
fwait
mov
mov
mov
and
adc
jo
push
mov
adc
pop
cmc
cmp
std
xor
xor
add
xchg
jns
sub
lock
addl
pop
inc
inc
push
push
fwait
adc
push
and
int
or
daa
mov
sub
mov
pop
gs
push
sbb
add
lret
sti
and
ret
testb
int
popa
inc
jnp
cmp
mov
stos
adc
lret
call
mov
jmp
bound
inc
lahf
mov
pushf
pop
sub
mov
adc
jae
cmp
sbb
sub
push
pop
test
mov
adc
es
sbb
sub
jl
mov
lds
sysexit
out
aam
outsl
cli
mov
add
cs
jg
aaa
mov
adc
mov
les
out
in
ss
or
push
out
and
add
mov
jbe
mov
js
cltd
xchg
adc
jmp
or
dec
push
daa
negl
jno
lea
ja
jge
test
add
loop
inc
cmpsb
ljmp
imul
xchg
sti
push
add
pop
sub
icebp
fisubs
imul
in
popf
cmp
arpl
jae
lock
inc
inc
fnstenv
xchg
pushf
in
in
out
cmpsl
cld
sbb
mov
es
outsb
notl
xchg
loope
add
fsubl
arpl
aas
out
sbb
jo
aad
jmp
mov
pop
xchg
setb
mov
pop
test
xchg
lcall
sub
fptan
call
inc
loope
lcall
leave
mov
subb
in
fbld
sbbb
adc
lods
mov
into
xchg
mov
bound
iret
and
cwtl
adc
outsl
xor
cmp
add
inc
subl
fisubrl
loop
mov
dec
pause
hlt
pop
ret
inc
or
xchg
daa
popf
fistl
faddp
mov
cmp
iret
popa
cmpsl
jge
add
fwait
loopne
add
jno
or
sub
dec
pop
pop
ljmp
iret
jno
mov
sub
mov
pop
sub
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
or
clc
adc
adc
mov
call
inc
lds
or
cld
jbe
mov
inc
pop
pop
shll
es
sub
push
sahf
pop
test
jecxz
lret
cwtl
push
cmc
in
dec
aas
lea
sub
cmpl
add
pusha
or
push
test
out
loopne
repz
cmpb
sub
fdivrs
mov
dec
addl
out
int
dec
out
jmp
nop
adc
pop
fmuls
into
xchg
sub
rolb
sub
sbb
pop
subl
jnp
int3
iret
cmpsb
cmpl
mov
scas
push
xchg
imul
mov
fidivl
ret
rol
mov
dec
ja
outsb
mov
outsb
xor
hlt
push
mov
rorl
daa
jb
jne
mov
dec
mov
jo
jp
aad
lea
xor
push
iret
dec
in
sub
cmp
cmp
inc
xchg
pushf
fs
mov
sbb
cmp
mov
jp
pop
pop
pop
arpl
pusha
aad
pop
and
out
nop
mov
sub
mov
xor
mov
fidivrs
out
ret
fsubr
jle
popl
xor
jo
loop
xchg
pop
xchg
movsb
roll
lock
leave
outsb
push
repnz
fdivl
mov
jp
mov
mov
pop
mov
arpl
imull
xchg
add
mov
addl
das
sub
mov
or
insb
addr16
push
outsl
shrb
fistps
jo
repnz
adc
or
sub
add
into
push
add
sub
mov
cwtl
sub
scas
mov
xchg
lahf
xchg
xchg
or
fisttpl
xchg
xor
push
lea
insl
fadds
cmp
outsb
loop
adc
xorl
jb
enter
lcall
sub
fisubrl
sbb
dec
push
stc
inc
std
mov
cmp
sbb
push
jne
jge
mov
clc
fldt
fdivrs
inc
push
add
loope
call
stos
mov
xchg
loopne
repz
lods
clc
xchg
jne
inc
dec
inc
out
and
insl
xchg
lock
rorb
pop
xrelease
cli
mov
rol
fisttpll
xchg
inc
mov
push
push
mov
jmp
lods
sbb
fdivrp
inc
jp
lea
push
jmp
ret
cmp
jecxz
sub
movsl
repz
sub
mov
mov
loop
xor
clc
push
sbb
sti
and
stos
cld
gs
lds
dec
adc
sub
dec
push
sub
lahf
sbb
mov
or
mov
lea
and
insl
das
pusha
cmp
dec
mov
ret
push
sbb
jmp
clc
aas
dec
nop
jno
mov
cmp
cmp
test
out
andb
iret
and
add
jp
jp
lcall
rorb
push
enter
push
mov
inc
cmp
push
loope
or
sarl
push
jae
outsl
lea
cmp
gs
and
add
mov
test
push
and
dec
mov
jb
adc
push
sbb
push
clc
cmc
mov
xor
push
mov
push
fadds
pusha
and
in
sub
jge
lret
push
arpl
iret
pop
movsb
or
xor
stos
sbbb
addr16
sub
push
add
dec
or
clc
test
lock
jnp
rorb
movsl
out
enter
popf
cmp
pop
pop
icebp
push
repnz
gs
add
fwait
adc
mov
or
xor
shl
add
out
dec
sbb
push
loop
xchg
add
loope
test
adc
sub
cltd
cmp
fmuls
test
jl
ds
add
sub
call
mov
mov
xchg
call
pop
sub
xchg
xor
fwait
test
fs
cwtl
inc
fistpll
outsl
std
ljmp
call
lods
pop
xor
fadds
jle
data16
add
jb
in
adc
mov
out
mov
mov
dec
dec
adc
jbe
jb
stos
scas
or
mov
icebp
ljmp
cs
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
mov
mov
clc
adc
adc
jg
sub
sahf
xor
test
mov
sbb
adc
pop
sub
sub
mov
add
out
icebp
and
inc
bswap
cwtl
nop
js
fimull
mov
push
and
scas
mov
loop
sub
push
add
sbb
inc
test
lea
lock
or
adcb
icebp
jo
sub
xlat
mov
cs
or
mov
ljmp
dec
dec
sbb
popf
mov
sahf
pusha
call
scas
out
cmp
ret
cmp
push
pinsrw
fmull
mov
lds
inc
ret
addl
mov
adc
mov
shrb
in
enter
or
rdmsr
lods
repnz
pop
push
dec
shlb
icebp
and
sub
loope
mov
inc
xchg
pop
inc
sarl
add
in
push
std
andb
ret
adc
add
mov
add
jle
sahf
loopne
jp
sbb
adcb
push
or
addl
mov
xchg
sub
lea
insb
mov
jb
popf
shlb
lock
push
arpl
adc
pusha
add
cmp
scas
stos
aaa
fistps
dec
pusha
popf
push
inc
xchg
mov
shl
cmp
sub
repnz
xor
lods
rdtsc
mov
outsl
and
and
insl
adc
xor
cwtl
adc
pop
inc
incl
loopne
adc
inc
in
shll
fwait
and
ret
pop
test
sbb
int3
js
adc
and
cmovbe
mov
movsb
lcall
cmp
push
and
movsb
mov
mov
pop
out
dec
lea
mov
and
add
adc
imul
mov
mov
pop
add
sub
adc
push
and
cmp
ss
fwait
shlb
out
js
mov
repnz
orl
or
xchg
push
pop
add
lcall
out
pusha
addl
insb
mov
sbb
mov
jbe
shl
sahf
dec
push
mov
fcmovnbe
adc
mov
xor
iret
adc
insl
push
jl
movsb
cmp
movsb
sti
cmp
inc
repnz
push
fs
subb
test
fisttps
ret
xchg
mov
xchg
mov
test
push
fsubrl
xchg
mov
add
dec
push
hlt
sar
lea
or
jle
daa
sub
fbld
mov
lock
adc
cmp
mov
xor
jmp
les
test
gs
leave
fs
xchg
adcb
sbb
jae
xchg
pushl
lock
sbb
mov
xor
rcl
xchg
std
mov
jns
add
mov
and
adc
jae
push
sti
jo
jnp
xchg
mov
aad
add
cmp
rolb
ret
inc
leave
scas
mov
sbb
rcrb
and
je
xchg
cmc
pop
clc
pop
add
xor
aaa
mov
repnz
pushf
jbe
into
mov
pop
bound
mov
inc
xlat
inc
push
in
jle
mov
mov
jno
push
mov
jno
push
add
dec
sti
ss
ja
jge
out
jle
in
adc
cmp
mov
mov
xchg
test
push
jno
mov
adc
jl
pop
mov
sbb
mov
scas
repz
loopne
xchg
jmp
sbb
into
and
pop
add
dec
addr16
addr16
sbb
cmp
test
xor
andb
pop
rclb
mov
int
mov
push
arpl
addr16
scas
and
lret
outsl
sbb
mov
or
mov
in
gs
notb
xchg
inc
popf
or
icebp
push
mov
xor
pop
jle
movsl
or
out
ss
hlt
pop
and
mov
scas
sub
in
scas
aam
cmc
mov
pop
inc
push
xchg
js
fdivs
xchg
cmp
movsl
cmp
cmp
loopne
inc
pusha
pusha
insb
fidivs
bound
pushf
pop
pop
scas
std
fcmovu
aam
xchg
rorl
add
add
push
mov
into
mov
roll
push
jle
xlat
mov
dec
cmpb
movsb
jno
test
cs
pop
bound
lret
jne
mov
hlt
dec
out
fcoml
jb
out
adc
mov
stos
push
jb
pop
or
inc
jp
pop
jae
lahf
adc
xlat
xchg
cltd
pushf
cmp
mov
mov
icebp
xor
call
adc
pop
cmp
movsb
mov
sub
aad
cmp
pop
or
into
xor
js
xor
in
mov
cmp
lcall
loop
sbb
jecxz
hlt
jp
inc
lret
adc
lea
andl
leave
lret
subl
fidivrl
and
enter
stc
or
lret
inc
clc
cmc
iret
mov
arpl
cmpsl
mov
shr
je
mov
js
jp
dec
out
imul
shrl
jae
je
stc
cmp
les
sbb
mov
in
popa
jb
jp
xchg
or
cmpsb
jmp
dec
mov
pop
xor
mov
ret
inc
xchg
jns
sbb
jmp
mov
inc
and
cmp
ret
notb
sbb
push
in
jl
jbe
fsubp
inc
push
push
xchg
xor
or
mov
in
cmc
loope
xlat
subl
popa
fld
inc
cli
pop
in
inc
je
faddl
les
mov
xor
mov
push
popa
mov
fisubrs
add
loop
and
faddl
ds
jbe
xchg
sub
pop
mov
movsb
or
aas
dec
xchg
mov
cmp
int
push
loope
mov
inc
cs
aaa
lea
mov
outsl
mov
sbb
aaa
inc
cmp
sbb
jmp
dec
mov
es
mov
sub
pushf
ffreep
in
insb
iret
cli
xchg
and
lds
pop
js
pop
fistl
test
dec
incb
subl
inc
aas
cmp
add
int
and
int
loope
jg
or
xlat
mov
push
iret
data16
rolb
xchg
inc
pop
shr
shlb
cmpsb
adc
sub
cmpsl
lret
enter
adc
add
mov
clc
pop
subb
arpl
movsl
xor
inc
ss
adc
in
leave
mov
jge
sbb
sbb
and
pop
xchg
arpl
xchg
push
cs
xor
push
test
mov
lods
cmpsl
mov
pop
pop
lea
shl
cmp
stc
mov
jle
mov
cmp
mov
inc
mov
inc
xorb
or
push
lock
add
mov
xor
and
fsub
dec
js
mov
mov
test
arpl
push
pop
xchg
and
xchg
out
cmp
adc
fwait
ror
dec
test
loopne
ret
cld
jo
xor
ja
adc
call
bound
mov
movsb
push
repz
lret
jne
sti
fcoms
call
repnz
sub
popa
jno
in
push
sub
fs
mov
out
jl
fisttpl
sti
cmp
sub
cltd
and
mov
xor
cmc
sbbb
mov
std
lahf
lods
test
daa
mov
pop
push
lea
test
push
je
xchg
add
aam
or
out
testb
inc
push
pop
mov
add
adc
xor
imul
mov
or
jge
mov
and
lcall
inc
leave
enter
xor
bound
inc
add
cs
out
mov
xlat
loop
xor
aad
scas
jb
testb
jno
aas
fsubs
mov
mov
mov
push
adc
shll
outsl
push
dec
repnz
pop
je
loop
add
dec
ljmp
sub
sub
fstpt
cld
jmp
inc
fmuls
pop
cmp
cmc
adc
rcrl
cmp
cmp
inc
sub
pop
je
pop
inc
or
dec
das
fwait
test
punpckhdq
adc
mov
cld
daa
pop
movsb
arpl
inc
jno
sbb
or
inc
fnsave
jge
adc
jno
sbb
sbb
xor
xchg
xor
in
lea
mov
push
in
mov
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
or
adc
push
pcmpgtb
lods
or
xor
mov
jle
jecxz
jl
inc
sbb
add
pop
mov
out
es
in
mov
sub
popf
and
sub
mov
test
add
ret
jae
jnp
pushf
mov
in
cli
xchg
lods
test
fimull
pop
add
push
dec
popf
fcomp
stc
lds
fsubp
xlat
mov
sub
popa
and
sbb
int3
xor
xlat
test
test
test
imul
stos
mov
mul
cwtl
leave
sbb
gs
mov
mov
into
and
es
rcrb
leave
imul
xchg
push
mov
inc
mov
fisubrl
xchg
cwtl
jmp
sub
sti
xchg
cmpsl
cwtl
test
add
mov
dec
lods
add
dec
and
pusha
cld
jle
lcall
addb
fisubrl
notl
xchg
mov
hlt
xchg
mov
mov
mov
call
mov
pop
js
test
xchg
mov
mov
xchg
testl
mov
and
dec
lcall
clc
les
or
leave
dec
test
dec
cltd
test
cmp
cmc
pop
fidivs
ret
sbbl
or
add
push
es
mov
ss
lea
mov
mov
dec
pop
jg
jnp
out
test
sub
add
mov
stc
xchg
mov
scas
xchg
inc
pop
mov
mov
adc
pop
inc
dec
pop
insl
cmp
xor
lahf
jmp
jecxz
mov
js
sub
pop
sub
ss
pop
sbb
stos
insl
adc
cwtl
fldcw
out
mov
std
sbb
pop
xor
dec
and
lcall
and
cmc
xor
insb
icebp
sbb
test
aaa
fwait
dec
and
fs
pop
loope
push
pop
inc
movsb
and
repnz
sbb
mov
jmp
sbbl
aaa
aaa
pushf
std
adc
je
and
jo
xchg
xchg
popf
sub
mov
push
int
and
add
cs
mov
int3
lods
jne
sbb
dec
ljmp
push
xchg
jge
xchg
push
fbstp
push
xor
pushf
loope
imul
xchg
sub
imul
fiadds
lods
fs
cmp
addl
fisttps
cld
push
enter
stos
sti
xor
mov
dec
mov
adc
mov
pop
dec
xchg
dec
cli
std
jne
sub
xor
imul
sbb
and
data16
shlb
enter
rolb
add
sbb
push
lret
test
rcrl
and
dec
jecxz
aad
jno
aaa
stc
adc
xor
aas
popa
popa
les
fsubrs
xchg
ret
push
sbb
fidivrs
mov
pop
imul
arpl
jb
and
or
xchg
inc
inc
and
cmc
rorb
int
mov
and
adc
jno
sub
dec
dec
pop
pop
inc
pop
cwtl
xor
hlt
nop
icebp
jge
push
data16
sbbl
mov
mov
push
stc
cwtl
push
push
mov
jno
adc
shrb
in
cmpsl
push
push
xlat
or
in
lds
xor
sub
xchg
loop
mov
lds
outsl
lds
xorb
add
xchg
add
adc
or
mov
cmp
xchg
add
xlat
fistpl
push
cmp
rcr
mov
sub
fcoml
pop
pushf
cmp
mov
push
mov
jno
fstpl
das
test
or
insl
repnz
scas
mov
aaa
inc
testl
pop
sbb
aaa
pushf
dec
outsl
fimull
jnp
mov
ror
mov
pop
pop
mov
push
lods
push
mov
mov
testl
rorb
cmpsb
mov
mull
xor
fnsave
mov
nop
mov
js
js
mov
push
xor
sub
popf
add
push
lds
mov
movl
jmp
mov
test
adc
inc
and
mov
in
clc
adc
adc
mov
sub
cmpsl
xor
xchg
cmpsl
std
popf
jg
sub
imul
dec
aam
xchg
mov
lahf
and
ret
mov
or
sub
mov
call
in
xchg
stc
into
sub
js
inc
and
jae
xor
mov
mov
sbb
lea
inc
clc
push
xchg
adc
mov
push
stos
out
mov
arpl
sti
pop
fbstp
addr16
pop
lods
dec
sub
stc
pop
dec
push
mov
fdivrl
insb
cltd
cmp
mov
testb
clc
pop
addl
in
sbb
arpl
out
pop
sbb
sbb
fiaddl
xchg
mov
sub
push
ret
inc
call
jnp
xchg
inc
rcll
sahf
dec
jecxz
inc
jbe
sub
push
xchg
inc
jae
push
add
shl
inc
addb
test
lahf
cmpb
lds
mov
xchg
sub
popf
push
and
and
movsb
sti
ret
dec
mov
xor
scas
lea
into
sbb
cmp
dec
notb
das
imul
in
sub
mov
sbb
cmp
sbb
and
andb
aaa
mov
xchg
inc
je
ljmp
movsb
push
push
aas
in
shll
fldt
test
mov
imul
stc
mov
int3
mov
arpl
cmc
mov
fbld
lahf
call
test
pop
or
and
scas
mov
push
push
or
sbb
jle
iret
negl
sub
testl
xchg
add
aad
xchg
inc
xchg
jne
fadds
icebp
xchg
inc
or
pop
incb
sarl
cmpsl
push
push
out
scas
in
xor
ss
pushf
xchg
mov
repnz
in
sbb
push
jg
dec
lret
jmp
pop
mov
movsl
adc
arpl
out
cs
add
pop
movsl
inc
push
insl
sub
xchg
inc
sub
push
jns
pop
ss
sbbb
cmp
mov
mov
decl
cmpsl
jae
fwait
xchg
subb
mov
fiadds
or
lret
sbb
add
pusha
pusha
lods
insw
push
fsubs
lock
in
std
mov
mov
and
adc
pop
or
mov
xchg
imull
aaa
xchg
xor
push
aas
sbb
pop
lea
and
sbb
jb
sbb
dec
xchg
hlt
dec
inc
cmp
push
push
mov
iret
das
sub
test
js
mov
push
sbb
inc
add
sbb
in
arpl
lds
call
mov
dec
dec
cmp
xor
xor
rcr
imul
test
int3
test
and
lret
mov
sbb
in
in
dec
xchg
dec
jecxz
inc
or
dec
daa
lahf
pop
roll
push
cmpsb
sbb
cmpsb
cmp
mov
sub
push
aas
fbstp
pop
out
sti
jp
sbb
mov
or
xchg
ja
in
pop
cmp
icebp
mov
mov
mov
insb
lret
out
icebp
in
in
push
inc
ret
dec
lahf
dec
xor
inc
das
inc
insl
cmp
mov
inc
mov
xchg
add
pop
scas
adc
loop
push
cld
jmp
lods
and
lock
cmp
std
leave
movsl
pop
xchg
repz
sarb
outsl
mov
sbb
jmp
mov
push
hlt
adc
mov
and
jne
mov
mov
mov
daa
int
aas
fmull
add
xchg
je
mov
cwtl
xchg
adc
adc
sbb
fcomps
lods
pushf
ds
xchg
inc
jl
jne
lods
nop
mov
int
clc
push
cmp
hlt
push
aas
and
xor
push
popf
mov
pushf
jns
jb
mov
sti
xor
lahf
and
outsl
add
sbb
fwait
cmp
and
out
stos
dec
in
in
pop
mov
xchg
jbe
mov
pop
std
in
xchg
and
mov
das
scas
inc
sbb
mov
popa
out
andl
jmp
movsl
xorl
jae
mov
out
sbbb
mov
lahf
andl
xor
pop
xor
dec
bound
adc
inc
fimull
getsec
ret
fs
rol
rcll
push
mov
in
sbbl
push
inc
roll
sub
jnp
mov
push
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
lds
in
mov
sbbl
arpl
sub
lods
in
lret
push
adc
in
lods
ficomps
movsb
js
mov
sbb
jne
dec
movsl
popf
in
xchg
mov
mov
int3
in
push
xor
mov
int
cmpsb
jecxz
add
push
and
popf
add
daa
insb
push
lods
sub
int
mov
test
dec
fwait
or
add
jo
sbb
jns
sbb
push
dec
ss
add
cmp
adc
das
push
pusha
aam
ret
je
fdivrs
jne
jp
push
xor
pop
dec
mov
mov
ljmp
aas
mov
hlt
jo
mov
xor
inc
xchg
adc
mov
mov
in
sbb
fs
adc
jbe
shrb
icebp
int
xor
sub
and
hlt
adc
jp
mov
loope
dec
xchg
stos
cmp
icebp
pop
ljmp
sub
sbb
sahf
dec
inc
mov
push
subb
mov
jbe
aaa
pop
mul
fnstcw
sbb
fwait
icebp
fdivrs
xchg
sbb
fsubrl
and
jle
outsb
in
jle
lret
test
dec
test
test
enter
push
mov
xchg
paddd
mov
mov
mov
cmp
mov
fisttpl
push
sub
pop
push
js
out
pushf
dec
dec
dec
hlt
pop
or
movsb
inc
xchg
or
xchg
es
sbb
mov
mov
out
pop
clc
cmpsb
cmp
pop
cmp
mov
pushf
cmp
cmp
pop
push
add
test
stos
or
xchg
imul
and
and
test
dec
inc
adc
bound
mov
and
cmp
fidivl
sbb
adc
arpl
into
jb
add
xchg
pop
js
ds
xor
cmpsb
sub
enter
jo
leave
xchg
mov
in
lods
aas
stos
jmp
ja
jne
int3
les
mov
inc
popa
loop
mov
lea
cmpsb
and
xor
xor
xor
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
