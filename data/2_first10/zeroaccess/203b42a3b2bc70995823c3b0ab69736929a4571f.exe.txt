push
mov
sub
xor
jmp
into
rcr
aad
mov
xchg
cmpb
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
jno
js
subb
xor
out
xlat
popa
inc
movsl
adc
lds
fsubp
lods
fisubs
insl
sub
incl
and
cmc
pop
push
dec
sar
add
sub
xor
pop
testb
mov
pop
dec
push
lret
xchg
fldl
setbe
shll
daa
mov
repnz
inc
push
xchg
add
add
lahf
mov
clc
pusha
mov
out
aas
inc
jmp
pop
vmaxps
jb
in
mov
xor
adc
js
add
mov
xor
mov
mov
daa
and
in
imul
mov
ds
jp
mov
and
xlat
insb
fneni(8087
pop
stos
rcll
jbe
ret
pushf
scas
and
pop
jbe
push
push
push
scas
ficompl
incb
sbb
aaa
xlat
mov
push
lea
jge
push
testb
inc
fmulp
push
push
test
clc
rcll
push
pop
leave
aaa
dec
movsb
and
jmp
fsubr
loopne
pop
dec
adc
sub
sti
push
mov
lods
and
lret
cwtl
es
dec
shrl
daa
xchg
add
enter
dec
pop
mov
adc
mov
ret
cmc
fimull
or
jns
mov
imul
loopne
inc
lret
cmp
add
push
movsb
and
inc
dec
or
sbb
insb
mov
insl
pushf
push
flds
movsb
jno
mov
and
andb
sarb
aaa
idiv
xor
push
insl
stos
sbb
adc
sbb
jle
or
pop
loopne
inc
xlat
insl
sbb
mov
daa
jg
pusha
or
xor
pop
popf
add
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
xchg
aad
jle
js
jle
js
inc
cmp
or
xchg
loop
xchg
mov
pop
add
daa
pusha
mov
call
in
push
push
loopne
sbb
xchg
mov
jb
in
jecxz
push
in
xchg
shr
cwtl
jg
std
outsb
xor
mov
cmp
inc
clc
xor
pop
in
lds
daa
inc
sbb
adc
testl
pop
add
addr16
mov
jmp
inc
and
sbb
jge
hlt
fprem
dec
es
jmp
dec
mov
mov
lds
mov
jmp
cmp
sbb
or
and
cmp
rorb
and
cwtl
and
subb
mov
xor
mov
or
xor
rolb
push
xchg
dec
add
or
dec
std
pop
add
dec
sbb
xchg
arpl
scas
mov
or
aaa
cmp
push
pusha
out
adc
sub
jo
jge
fildll
xchg
xchg
jp
out
roll
and
or
sarb
dec
adc
push
xor
cld
sub
jno
push
lcall
adc
cmc
hlt
pop
roll
cmp
mov
add
add
mov
push
add
imul
adc
in
push
fnsaves
lock
lret
inc
dec
push
stos
sti
xor
jmp
cli
pop
jmp
sbb
dec
ds
adc
lret
test
ret
dec
int3
xchg
add
jg
lods
scas
and
or
icebp
jecxz
pop
jae
xchg
sbb
mov
mov
cli
and
lods
jb
mov
sub
icebp
fistps
dec
adc
or
xchg
lret
inc
mov
pop
addl
cmc
dec
cmp
mov
pusha
adc
scas
jecxz
or
movsb
sbb
mov
jb
sbb
sub
jg
or
pop
adc
mov
mov
hlt
dec
sbb
std
mov
adc
mov
xchg
sub
jb
cmpl
repz
pop
lods
pop
bound
mov
lret
xor
movsl
fisubl
in
adc
addb
inc
inc
mov
cld
fdivrp
push
arpl
call
movl
add
cmpsl
inc
add
imul
lock
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
jl
js
jle
js
lcall
ficompl
pop
iret
das
sahf
xchg
sub
aas
xrelease
lret
ret
inc
or
lret
sbb
cmp
pop
dec
jns
dec
push
adc
decl
mov
mov
aam
dec
dec
push
inc
inc
daa
ljmp
dec
push
push
fsubl
cmovs
xchg
lahf
mov
push
test
xlat
je
ljmp
shrb
mov
adc
mov
sub
xor
push
lret
and
or
in
ret
jb
fsub
xlat
xchg
adc
xor
mov
and
or
das
fsubrs
stos
mov
push
cli
add
pop
add
sub
sbbl
nop
arpl
add
dec
mov
cmpsb
shl
xor
push
scas
add
dec
adc
adc
ss
and
lret
adc
addr16
cmp
xor
and
pop
aas
jl
xor
xchg
sbb
jmp
rcll
or
fwait
aas
push
sbb
fcoms
jl
popf
aam
cmc
test
mov
push
repnz
cltd
je
or
push
sbb
or
jmp
sbb
fisttps
xorl
inc
rol
clc
addl
jo
lahf
in
fdivr
jg
cs
pop
fsubs
into
adcl
and
or
mov
sbb
in
xchg
sub
pop
add
arpl
pop
out
sub
aaa
dec
mov
pop
and
cmp
pop
aad
test
xchg
jne
push
sbb
daa
and
nop
push
push
pop
insb
pop
mov
std
cmovnp
inc
push
movsl
pop
pop
push
punpckhwd
jnp
push
pop
popf
call
leave
enter
and
pop
in
rcrb
xor
push
mov
sbb
test
arpl
pop
push
aas
mov
ffree
lcall
mov
outsl
jmp
mov
jg
iret
in
repz
filds
fadds
sbb
jnp
mov
jnp
and
adc
stc
pop
inc
inc
int3
ljmp
cmpsb
ss
mov
sub
into
fisubrl
add
sbb
movsb
xchg
push
in
fldcw
inc
push
mov
es
mov
add
leave
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
and
js
jle
js
int3
pop
inc
push
es
lods
mov
fcom
ja
cs
test
ret
shll
aad
es
cld
icebp
or
dec
or
daa
bound
scas
and
lock
and
ficoms
out
dec
cmpsb
mov
enter
mov
outsb
idiv
mov
popa
pop
imul
pop
ja
push
scas
xor
dec
test
xchg
push
mov
inc
mov
rorl
bound
out
cmpsb
or
mov
aam
dec
xchg
xor
shll
aas
mov
sbb
mov
mov
adc
xchg
adcl
sbb
bnd
ljmp
out
mov
add
push
add
gs
inc
cmp
stos
or
or
or
inc
pop
mov
pop
mov
mov
bound
lea
addr16
pusha
lret
push
movb
js
inc
inc
sub
dec
add
fisubl
test
testl
mov
xor
adc
mov
stos
aad
or
test
pop
adc
fcmove
cmp
push
imul
les
jno
fcoml
add
int
arpl
cmp
inc
push
sub
std
adc
ficomps
je
dec
sti
pushfw
lcall
push
or
push
cld
push
loop
repnz
xchg
add
fstps
call
mov
push
cmp
leave
push
adc
push
dec
ljmpw
mov
insl
scas
xor
ror
ss
in
lea
in
clc
pop
mov
test
cli
inc
and
sub
cmpsl
out
mov
cwtl
cmp
aaa
mov
inc
dec
push
insl
lret
lock
xor
mov
test
sbb
dec
or
test
mov
and
sbb
int
loopne
dec
iret
inc
mov
ja
nop
inc
cmpsb
pusha
sbb
xlat
rol
push
sti
das
sbb
lret
mov
add
cmp
adc
push
enter
cmpb
movsl
add
mov
pavgw
or
inc
jne
dec
sbb
shll
rcrl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
sbb
dec
add
js
jle
js
add
jl
imul
fnstenv
mull
jmp
sub
add
pop
mov
enter
sbb
xchg
subb
sarl
jecxz
aad
and
pop
inc
jecxz
jno
mov
sub
into
inc
lods
cld
aas
cmp
scas
push
cmp
fwait
movsb
or
icebp
mov
out
mov
hlt
push
lds
mov
push
mov
inc
push
repz
loopne
jmp
mov
cmp
pop
mov
ret
les
es
cmp
xor
mov
adc
sbb
push
inc
sub
mov
shrb
repnz
push
stos
mov
dec
mov
sbb
lcall
xchg
sbb
mov
scas
bound
or
and
clc
jle
adc
mov
loopne
ss
incl
out
cmp
cltd
jbe
cmc
stc
lods
hlt
out
ret
lods
int3
rolb
cmpsb
mov
fisubs
fisubrl
mov
ret
shl
scas
adc
mov
jno
add
call
stos
adc
add
pop
enter
pusha
jp
jge
push
mov
loopne
pop
push
cwtl
loop
xchg
dec
aam
mov
into
in
jae
jnp
scas
aas
call
arpl
push
ret
aad
xchg
rorl
fisubrl
insb
mov
loopne
inc
js
sahf
dec
movsb
lcall
ja
cmc
and
outsl
pop
mov
outsl
or
out
xor
add
mov
jbe
fsts
test
pop
lds
push
pop
das
insl
xor
sbb
fs
ret
arpl
adc
ret
xchg
jo
mov
pop
mov
push
xchg
lock
pop
jns
push
and
daa
pop
lahf
out
sarl
shl
lret
imul
lods
or
xor
cmp
nop
ds
push
lods
xor
pop
mov
xor
repz
jno
addl
idivb
xorl
inc
adcb
adc
inc
stc
jmp
pop
jb
jnp
pop
push
sbb
sbb
data16
adc
lcall
pushw
imulb
add
cmpsb
ret
mov
aaa
xchg
rcrb
or
imul
rcrl
dec
clc
push
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
mov
js
jle
js
xchg
pop
jecxz
outsl
jp
insb
in
and
enter
cmp
add
sub
out
setge
int
test
xorb
jb
and
stc
lods
inc
int3
adc
sbb
add
cli
jmp
fistl
sahf
cmp
fmul
pusha
es
je
sbb
inc
fstpl
out
adc
dec
outsl
outsl
out
subb
add
insb
fmuls
ljmp
mov
psllw
pushf
fldt
into
scas
pop
pop
push
jns
push
push
mov
jb
pop
or
and
mov
sbb
cwtl
and
shlb
xor
and
sub
or
jne
cli
mov
dec
sbb
dec
pinsrw
outsl
sub
mov
leave
roll
pop
jns
cltd
sbb
inc
aaa
dec
daa
inc
add
xor
dec
dec
pop
loope
lahf
cmp
jnp
jae
or
and
adc
xchg
jmp
xlat
dec
ret
mov
cmp
cmpl
insl
lea
sahf
mov
mov
or
jl
call
cmp
mov
cmpsl
sub
pop
xchg
ss
popf
and
sbb
les
push
cmp
cmp
cmp
push
cmp
dec
bound
inc
loope
or
stos
lret
das
stos
xor
repnz
push
push
shrl
mov
mov
sub
rolb
mov
lods
mov
push
add
outsb
push
cmp
into
and
mov
dec
cmpsl
aam
mov
fsubl
inc
pop
movsl
leave
dec
aaa
xor
jecxz
cmp
shrl
sbb
jmp
xor
push
mov
push
jecxz
lock
mov
mov
jle
add
dec
insb
data16
and
lcall
pop
call
loope
mov
loope
push
mov
out
ret
popa
cmp
jl
sub
mov
mov
aas
ret
push
insb
dec
xchg
xor
mov
aad
push
xchg
mov
pop
pop
xor
dec
dec
fldt
xor
pop
inc
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
xor
add
js
jle
js
stos
aaa
cmpsb
aad
push
push
xor
jne
mov
add
iret
fcmovbe
mov
mov
aas
out
dec
aas
push
outsl
stos
pop
push
je
mov
sahf
fninit
push
jnp
inc
xchg
in
sbb
xor
test
or
loope
dec
jle
adc
mov
aas
shrl
or
lea
leave
popf
scas
adc
sbb
xor
dec
mov
mov
jne
dec
out
out
sub
fistpl
jno
adc
inc
sahf
bound
call
mov
mov
gs
mov
out
lret
scas
aas
mov
sub
lcall
sbb
jne
or
jnp
push
jecxz
and
movsb
lods
lock
fldcw
pop
jb
sub
and
cmpsl
adc
inc
scas
imul
add
add
xchg
mov
pop
pop
inc
loope
mov
out
mov
in
dec
push
hlt
sub
in
push
add
jnp
cmp
push
iret
in
push
pop
jle
mov
fisttps
jmp
lcall
and
add
lods
cltd
ja
add
cmp
mov
int
mov
fisubl
xor
jmp
lcall
inc
mov
mov
pop
cwtl
xor
cmovno
cwtl
cld
cwtl
cltd
das
dec
pusha
push
arpl
bound
cs
pop
sub
out
jbe
add
js
mov
cld
push
add
jo
popa
dec
aaa
mov
shrl
mov
mov
sub
lret
mov
cmp
cli
cwtl
push
inc
xchg
test
dec
inc
outsl
sbb
inc
push
sbb
negl
in
push
sbb
xor
and
inc
insb
sarl
rcrl
scas
inc
test
push
into
adc
movsl
fmul
inc
jmp
inc
adc
sahf
jle
fmul
jmp
dec
movsb
lods
fwait
cmpl
mov
lods
push
jns
inc
ficoml
mov
push
and
push
pop
aam
gs
sub
pop
ret
lds
fiadds
xlat
cmp
dec
cwtl
es
leave
add
pop
and
fidivrl
fwait
adc
cltd
pop
fdiv
ljmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
add
pop
insl
mov
js
jle
js
loop
xchg
sub
dec
and
push
pop
and
fsubrp
jle
repz
test
push
std
mov
add
bound
sarl
lods
mov
cmp
movsl
jne
lods
leave
popf
add
xlat
out
arpl
add
and
mov
repz
lahf
call
sahf
lods
mov
sbb
sub
cmpsl
rolb
cmpsb
dec
in
cld
lcall
fidivrl
leave
jnp
ja
outsl
mov
adc
pop
xlat
pop
in
cmp
pop
sahf
insl
data16
fdivs
jns
jmp
aam
repnz
scas
fnstcw
inc
iret
insl
xchg
lods
fndisi(8087
jno
jecxz
add
push
pop
out
sub
adc
jne
inc
aam
mov
and
mov
insb
dec
and
mov
test
call
nop
push
mov
dec
inc
fildl
call
jmp
xlat
cmpsl
and
push
int3
cmp
jae
mov
daa
inc
push
dec
inc
cwtl
dec
push
or
jecxz
fistpl
adc
stos
rorb
fldt
dec
dec
sub
enter
inc
nop
adc
xchg
lods
loopne
sbb
arpl
andl
and
fnsave
mov
jne
sbbl
mov
jecxz
movsl
popl
sub
sbb
lods
icebp
jbe
hlt
push
mov
data16
sbb
mov
jg
or
jge
scas
cmp
xchg
orb
cltd
lcall
mov
insb
lahf
clc
mov
pop
test
pop
push
push
and
repnz
or
adc
and
or
sub
inc
cmp
jne
outsb
je
dec
fadds
and
test
scas
fcmovb
adc
jo
mov
adc
dec
and
jno
adc
jg
dec
inc
pop
add
je
mov
insl
aad
mov
and
add
cmp
mov
mov
insl
into
xor
xchg
fmuls
jno
dec
andb
add
test
lds
test
sahf
js,pt
outsl
mov
or
mov
add
sub
add
jl
call
inc
adcb
cld
mov
addb
fiaddl
adc
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
or
or
or
js
jle
js
sub
sbb
mov
mov
pop
xor
inc
pop
inc
int3
add
mov
sti
xor
add
pop
daa
mov
dec
nop
mov
icebp
xor
scas
jns
or
pop
loopne
out
int3
mov
out
mov
das
lods
insb
cmpsb
inc
and
cmp
mov
std
jbe
sub
jns
jecxz
jnp
mov
icebp
push
clc
jmp
fsubs
push
or
sbb
lcall
sub
out
lcall
arpl
test
fnsave
or
inc
mov
adc
mov
pop
cmpsl
mov
mov
pop
mov
jae
push
lds
outsb
clc
xchg
jl
xchg
outsb
jns
jmp
icebp
push
cwtl
sti
push
adc
rol
les
movb
int
push
xor
xor
mov
inc
inc
test
xchg
mov
insl
nop
dec
mov
mov
sbb
mov
lret
xchg
push
mov
pushf
pop
ds
jb
sub
out
data16
lahf
inc
mov
jecxz
roll
pop
aam
inc
cmp
lcall
sub
lret
sub
cmp
mov
jecxz
fsubl
leave
xor
mov
in
data16
jle
xchg
jo
push
jb
mov
mov
cmp
subb
mov
sbbl
dec
pop
rolb
sarb
mov
mov
test
repnz
pop
mov
outsb
fld
sbb
inc
iret
sarb
push
add
sbb
andb
jns
jae
jnp
movl
insl
ret
sub
lock
mov
sub
xchg
scas
into
lret
cmpsb
popa
loopne
push
push
jne
jne
sbb
cmp
adc
nop
imul
mov
std
push
stc
inc
or
cmp
stos
dec
cmc
movsb
test
or
add
leave
push
mov
add
cmc
mov
sbb
adc
jbe,pt
add
dec
mov
xor
jmp
pusha
jl
inc
mov
jge
push
std
ja
xor
push
add
ljmp
test
sub
jmp
ror
int
rcr
aad
bound
ds
cltd
and
jle
js
stc
mov
dec
fsubs
cmc
sbb
in
mov
add
push
sub
arpl
add
fimull
out
insl
scas
xor
inc
ret
add
test
xchg
and
pop
or
lar
imul
pop
in
pop
std
jnp
and
sbb
or
movsb
sbb
js
cmp
popa
dec
fimull
mov
push
dec
mov
push
push
lret
adc
je
stos
mov
pop
pop
bound
bound
xchg
dec
mov
adc
shrl
gs
mov
fbld
xchg
int
ret
lret
jle
stos
and
jl,pt
and
iret
dec
lahf
xchg
xchg
mov
jmp
mov
sbb
xchg
mov
arpl
or
in
int3
cmp
enter
jno
imul
inc
cmp
test
std
mov
and
test
adc
movsl
inc
test
jb
xor
and
in
lret
inc
ret
jl
es
mov
shll
sbb
dec
cmp
loop
arpl
loop
mov
in
lods
in
in
repnz
cmp
in
lret
jp
lods
adc
push
xchg
aad
and
sbb
fwait
pop
jae
xor
iret
loop
gs
dec
stos
adc
aam
lock
daa
rcr
push
stos
shll
insl
fsubr
test
add
por
clc
test
mov
push
aam
pop
mov
cmp
leave
dec
rcll
pop
stos
push
adc
daa
adc
pop
xchg
lds
mov
mov
adc
add
movsl
pusha
std
mov
in
loope
test
out
pop
mov
fidivl
ret
adc
fisttps
scas
out
mov
fldenv
out
roll
js
and
mov
lods
and
ret
dec
call
lods
jge
dec
movsl
add
xchg
hlt
push
push
jecxz
lret
ss
pop
aam
es
inc
fmuls
cmpsb
or
dec
push
jno
add
decl
rolb
ficoml
dec
cmp
aas
jmp
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
push
lret
pop
js
jle
js
cmc
loope
push
pusha
cld
mov
scas
fadd
lcall
js
push
call
mov
test
out
dec
aad
scas
xchg
lret
sbb
out
mov
add
and
inc
scas
sti
inc
repz
dec
mov
call
lret
jb
iret
lret
mov
lcall
movsl
imul
or
or
mov
sub
push
cwtl
leave
pop
inc
mov
cmpsl
cmp
dec
cmp
outsl
pusha
xchg
dec
fwait
jg
cltd
and
shlb
xchg
dec
aas
cmpsb
mov
dec
lds
fbstp
or
xor
mov
and
pop
mov
lret
test
mov
xchg
stos
ficompl
scas
pop
cmp
or
ret
inc
push
ljmp
adc
xchg
out
jne
out
xchg
pop
imul
push
inc
mov
push
sahf
fdivrs
ja
dec
in
ret
sub
jle
dec
ds
ret
jp
rolb
fisttpl
cmp
and
and
and
aaa
and
jg
sub
and
pop
push
adc
clc
jmp
mov
pop
cwtl
out
enter
inc
int3
testl
push
pushf
testb
adc
loope
sub
adc
jmp
mov
das
dec
pop
sbb
nop
sbb
cmp
xchg
push
pop
aaa
fldcw
cmc
pusha
stos
sub
add
inc
dec
ds
rcrl
out
cmpsl
out
stos
mov
jnp
jecxz
sbb
cmp
movsb
jmp
jnp
push
add
lea
xor
dec
stc
or
out
push
outsl
cmpsb
sbb
cmp
hlt
xchg
add
rcrb
sbb
mov
in
fs
ljmp
add
mov
cltd
inc
mov
pop
pop
lret
js
push
jp
dec
lcall
shrb
mov
push
sbb
imul
scas
mov
fidivs
inc
push
mov
addr16
inc
setg
fstps
push
xor
mov
adc
stos
pop
push
sar
push
mov
xchg
notl
add
fldl
pop
or
pop
jp
mov
mov
pop
das
scas
scas
mov
mov
jmp
ror
ror
ror
test
xchg
push
xor
adc
js
xchg
and
jle
and
mov
psubsb
scas
add
xor
xchg
in
ljmp
dec
push
mov
xchg
rol
jnp
mov
mov
jecxz
adc
loop
adc
sub
xchg
pop
sbb
and
add
pushf
adc
bnd
imul
fmul
ss
jl
xor
jge
inc
sbb
aam
jmp
push
pop
into
adc
cmpsb
jbe
xor
divl
in
sub
jbe
daa
out
bound
fisubrl
aaa
mov
int
ret
aaa
mov
mov
stos
sub
sahf
jg
je
lods
push
arpl
ja
xor
xadd
stos
in
cmpl
outsb
adc
add
divb
adc
push
pop
push
mov
popa
pop
dec
and
xor
int
aaa
or
and
pop
or
and
mov
or
pop
shll
xor
mov
mov
jo
push
push
inc
mov
mov
adcl
shlb
fdivr
ja
xor
loope
out
mov
insb
lea
push
int3
out
ja
or
inc
test
mov
or
add
mov
cmp
fwait
xor
jecxz
inc
jecxz
jo
xchg
test
xor
xchg
imul
jne
cs
mov
mov
mov
in
sbb
mov
enter
repnz
testb
add
jmp
pop
nop
filds
xlat
je
aaa
je
mov
in
push
jbe
ja
pop
pop
enter
or
dec
enter
pop
cli
and
jnp
mov
push
jne
inc
jno
sub
les
cltd
or
test
orb
sub
add
dec
out
xor
dec
test
lock
xchg
pop
pop
aam
shlb
add
mov
out
and
push
push
mov
dec
out
icebp
lds
inc
sbbl
xor
in
leave
xor
shrl
mov
push
push
cmc
repnz
adc
test
test
fwait
leave
cmp
ja
push
mov
and
sub
xlat
jmp
pop
and
insb
and
push
repz
push
and
movb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
jne
imul
jle
js
adc
insb
jne
aam
xor
gs
xor
adc
data16
in
fstpt
outsb
int
pop
inc
adc
push
mov
ds
fsubrl
aam
cmp
push
cwtl
outsb
dec
or
adc
aas
push
in
std
add
and
cmpb
flds
pop
push
clc
loopne
fucom
imul
dec
in
pop
movsl
cmp
lret
movsb
inc
xchg
fwait
sub
aam
push
mov
pop
je
imul
dec
sbb
xor
loopne
xchg
fsubrs
fiadds
dec
push
out
push
pop
loope
jne
imull
ds
sub
dec
clc
or
push
adcl
roll
mov
pop
loope
xor
sub
fisubl
loop
negb
xor
pop
bound
subb
xlat
sahf
sbb
jmp
cld
fdivr
add
add
out
jge
cmpsl
rclb
std
je
imul
mov
lea
xchg
testl
aam
loope
inc
xor
cltd
mov
inc
pop
jbe
sub
mov
das
and
pop
mov
repnz
cli
mov
iret
mov
popf
jne
jbe
out
xchg
dec
into
arpl
mov
add
sub
mov
mov
js
push
adc
jle
stc
aam
sbb
mov
inc
das
dec
xor
inc
loope
push
sbb
test
dec
adc
daa
mov
out
scas
jae
sti
pop
add
into
mov
jecxz
jge
add
rcr
ljmp
iret
mov
addr16
outsb
dec
xor
xchg
inc
xchg
outsb
mov
jns
mov
test
cmp
mov
add
lcall
xor
add
enter
pushf
aad
rcl
jne
jp
lret
adc
imul
gs
lock
mov
nop
decl
mov
lret
lods
aaa
push
loop
repz
outsb
mov
stos
jns
push
mov
dec
xchg
pusha
mov
mul
xchg
mov
imul
mov
je
fstps
add
test
pusha
fdivrl
pop
sarb
notl
pop
into
movsb
push
and
incl
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
sub
js
xor
pop
adc
dec
movsb
sbb
pop
mov
xchg
xchg
jo
arpl
adc
mov
in
mov
push
test
out
adc
rorb
mov
adc
mov
movsb
and
test
mov
inc
pop
cmp
mov
adc
idiv
xor
xchg
leave
movsb
jg
sbb
pop
int3
inc
sub
push
adc
push
sahf
ljmp
popf
inc
dec
inc
es
and
sbb
jmp
cmp
mov
add
inc
cmp
test
mov
shlb
aad
lock
std
cmp
pop
mov
push
sub
rcrb
mov
sub
jnp
mov
push
hlt
pop
sub
rcll
gs
cmp
sbb
pop
xchg
xchg
pop
mov
dec
imul
adc
push
icebp
loope
add
in
adc
mov
ret
or
or
nop
and
shrl
xchg
outsb
lahf
aad
fadds
add
test
into
sbb
adc
idivl
int3
xor
mov
addl
insb
xor
sbb
dec
je
mov
add
or
mov
jmp
insl
shll
pusha
or
lret
mov
xchg
push
xchg
xchg
cmp
cltd
enter
sbb
and
and
xchg
dec
shrl
jge
adc
dec
aas
mov
loop
sub
push
shr
adc
add
out
stos
dec
xchg
popf
mov
out
ret
dec
daa
aad
jne
mov
outsb
inc
insb
sbb
in
mov
arpl
leave
test
xlat
xor
pop
pusha
push
imull
imull
mov
cld
xchg
popf
push
sbb
cs
pop
es
mov
jp
dec
into
jno
es
push
addr16
mov
mov
cmp
pop
xor
add
or
popa
add
lahf
pop
out
push
out
sarb
dec
addl
push
sbb
dec
shlb
int
mov
inc
loopne
or
repnz
pop
stos
sbb
insl
cwtl
cs
in
xor
sbb
add
jmp
into
rol
ror
mov
cmp
adc
js
jle
js
popf
aad
lret
cmp
lock
add
scas
cmpsb
sub
inc
or
pop
popa
or
pusha
in
mov
pusha
aam
in
push
xchg
dec
test
jmp
inc
and
test
shll
mov
mov
scas
xchg
jno
daa
push
lods
insb
stos
jne
mov
cld
mov
mov
push
mov
lods
int3
or
loope
inc
mov
mov
inc
cmc
xor
mov
cmp
or
inc
ret
mov
scas
add
fwait
sbb
pop
fistpl
lods
rol
xorl
cmp
popf
xchg
addr16
mov
push
shrb
sbb
gs
mov
pop
jae,pn
rcrl
fwait
adc
mov
pop
mov
push
lds
out
stos
daa
inc
xchg
add
outsl
sub
jns
mov
xchg
inc
push
daa
sbb
add
pop
lret
push
pop
ret
push
repz
pop
pop
push
or
inc
or
inc
dec
xchg
inc
fldcw
adc
inc
mov
sbb
add
mov
jns
push
cmp
push
cmp
sbb
cmpsl
xchg
inc
pop
or
notb
pop
stos
jbe
or
fdivs
inc
data16
sub
fs
pop
stos
aaa
lret
pop
out
dec
jnp
cmpsb
or
inc
dec
ret
in
push
sbb
lcall
int3
mov
add
dec
and
popf
and
decl
push
in
mov
mov
shlb
sbb
xchg
loope
lret
mov
xor
mov
lea
push
mov
push
jg
jg
dec
jnp
mov
ret
jb
negb
inc
divl
popf
jge
shr
push
mov
xchg
mov
cmpsl
cmp
mov
jp
aas
scas
jmp
add
leave
sbb
jae
cmp
insb
mov
test
pop
jmp
lea
mov
lret
loopne
sub
push
icebp
jge
daa
jg
sub
xorb
scas
or
add
daa
shrl
sbb
cli
imul
sub
xlat
mov
sbb
mov
daa
out
mov
mov
int
pop
push
loope
movsl
enter
dec
adc
adc
cld
pop
jg
jb
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
rcll
js
jle
js
sahf
mov
xchg
cmpb
and
sarb
dec
into
mov
jmp
aas
imul
mov
dec
ljmp
nop
cmp
xlat
inc
insl
inc
or
rcrb
cmp
loope
sub
xor
sbbl
mov
dec
addr16
dec
mov
sub
xor
mov
cmpsb
mov
lcall
lcall
add
jmp
xchg
and
ffreep
pop
mul
test
aad
or
mov
xchg
addb
jae
pop
addr16
cmpsl
scas
jo
or
js
sti
insb
data16
punpckhwd
aas
dec
fnstcw
cmp
stos
and
jne
stc
or
outsl
aaa
mov
sahf
mov
dec
imul
rep
pop
push
popaw
arpl
mov
outsl
lea
shr
fdivrs
jae
and
lds
int
sbb
mov
inc
imul
jp
and
xchg
xchg
insl
fwait
in
mul
inc
bound
mov
insb
adc
pop
and
adc
xchg
add
inc
lock
sbb
adc
cmpl
mov
stos
loopne
bnd
jl
mov
xchg
sbb
and
les
add
addr16
jmp
sbb
mov
push
mov
mov
and
jecxz
shll
jnp
stc
jmp
inc
pop
dec
or
mov
std
movsb
xchg
add
in
test
mov
xor
sub
jle
inc
xchg
sub
loopne
sbb
push
xchg
int3
cmp
adc
lds
rclb
test
xor
cmpsl
rorb
jle
fs
jg
test
push
inc
test
leave
mov
xchg
jecxz
fs
call
xchg
dec
imul
xchg
test
pop
cmpsb
fldl
mov
push
sar
mov
and
fcomp
ret
std
inc
out
mov
mov
xor
xchg
ljmp
sub
es
lds
fistps
aaa
int3
icebp
lahf
xchg
add
pop
mov
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
xchg
xchg
mov
and
jle
js
in
test
out
dec
repz
pop
flds
mov
into
sub
movsl
dec
xor
xor
fimull
cmp
in
sbb
mov
add
aad
jmp
push
es
cld
icebp
lret
mov
pop
imul
adc
inc
push
test
idiv
ds
adc
lods
jae
mov
shl
xchg
inc
lret
out
dec
adc
jle
push
daa
jge
iret
imul
clc
xchg
out
loop
jecxz
jbe
jb
and
iret
mov
dec
stos
jg
push
out
jmp
adc
test
or
out
cmpsb
push
xchg
xchg
push
mov
stc
dec
cs
subl
and
aas
inc
push
mov
push
mov
mov
or
stc
push
repz
mov
aad
ret
mov
mov
jbe
push
xor
movsb
pop
pop
js
loopne
dec
sbb
das
aaa
lea
cmp
jmp
popa
cmp
aad
arpl
pop
add
dec
pop
inc
test
or
nop
jbe
enter
fmul
dec
jo
aas
fmull
inc
xor
add
push
shll
mov
xor
pop
scas
jecxz
aad
adc
arpl
sahf
mov
mov
out
fistpll
adc
mov
sub
adc
mov
sahf
js
dec
movsw
rclb
push
sbb
jl
je
mov
ljmp
inc
and
xorb
mov
jbe
and
cmp
ds
push
mov
or
in
daa
xchg
out
test
mov
in
shrb
jl
imul
ror
icebp
cmc
lahf
mov
jns
repz
data16
cmp
scas
dec
nop
popa
subb
jp
jg
das
sub
jae
push
call
mov
call
adc
cmc
pusha
dec
or
lock
dec
push
pop
push
and
lret
repnz
lock
or
inc
xchg
aam
enter
movnti
mov
mov
cmpsl
lods
in
or
loope
cltd
ret
les
lea
push
cmc
cltd
or
inc
out
xlat
xchg
mov
fadds
std
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
sahf
out
sahf
es
jle
js
imul
add
xchg
push
add
enter
outsb
sbb
arpl
imul
rcrl
xchg
or
push
inc
outsb
popa
push
or
mov
rcrl
out
push
xchg
lea
je
sarl
sbb
push
pop
mov
imul
mov
cmp
sub
add
xchg
fcompl
mov
xor
sbb
mov
push
push
das
hlt
or
sar
mov
inc
dec
mov
icebp
jnp
or
gs
xor
lock
push
sarl
ljmp
inc
add
fisttpll
pop
int
pop
popa
xor
or
rcrb
xchg
jnp
mov
push
push
mov
pop
and
add
xchg
xchg
add
mov
cmpb
dec
cmp
js
mov
cld
stos
arpl
xchg
bswap
data16
arpl
add
ret
sbb
mov
mov
cwtl
rolb
addr16
sahf
xchg
in
or
aad
pop
cmp
js
mov
movsb
adc
push
hlt
add
sbb
push
in
stos
add
push
in
cs
js
push
mov
xchg
fldt
aad
lods
adc
xor
sbb
ljmp
ret
mov
or
lods
dec
pop
push
or
mov
or
cmp
jl
shrl
aas
and
cmp
shrb
out
mov
loop
push
sub
lds
jmp
dec
xchg
andl
mov
sub
pop
jecxz
lea
in
push
shlb
insl
mov
mov
mov
pushf
cmp
sbb
outsl
mov
dec
rorl
cld
mov
cmp
test
or
call
test
and
popf
mov
cltd
adc
jns
es
and
fcompl
pop
jae
lea
aad
int
inc
popa
cmpsl
in
rcll
xchg
mov
test
ds
testl
xor
sti
mov
mov
jmp
add
sbbl
mov
lock
push
and
imul
int3
sub
test
mov
adc
or
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
sbb
mov
sub
dec
jle
js
pop
mov
jae
ds
sub
daa
or
add
stos
xor
xor
ss
movsl
pop
add
add
jmp
ss
popf
xchg
sub
sub
inc
daa
and
sub
sti
fs
pop
jno
scas
push
sub
mov
dec
cmc
jne
and
lock
popf
sub
aad
leave
push
ds
insb
xchg
add
popa
add
ja
lods
mov
nop
sub
mov
into
cmp
int
push
dec
testl
xor
in
test
push
mov
mov
jbe
clc
jecxz
daa
repz
xchg
sub
xchg
xchg
xchg
pop
sbb
mov
jb
lds
cltd
dec
arpl
ds
in
mov
lahf
inc
cmpsl
fdivl
std
std
push
aad
adc
and
xchg
add
dec
imul
cli
adc
push
and
stos
mov
sub
arpl
int3
pop
push
xchg
mov
mov
cmp
mov
nopl
sahf
mov
ret
xchg
dec
lea
repnz
mov
popl
imul
pop
push
lcall
test
cmp
sahf
nop
orb
or
mov
mov
lret
inc
sar
xor
imul
adc
jb
cmp
test
push
lret
mov
ljmp
scas
mov
lds
jnp
cmp
lods
add
aas
popa
cmp
push
dec
ljmp
repz
sub
pop
std
icebp
outsb
push
dec
roll
cmpsl
ja
mov
sub
sahf
push
and
orl
sbb
das
or
mov
mov
jge
iret
push
mov
cli
sbb
rcll
jle
dec
das
push
mov
add
je
dec
pop
jmp
out
and
xorb
cli
daa
xchg
cmpsl
pop
add
xlat
lcall
xchg
pop
lods
sahf
data16
aaa
or
sbb
sub
xchg
orl
add
mov
scas
ljmp
int3
mov
or
adc
push
dec
sub
mov
sbb
mov
shrb
push
mov
pushf
insl
jecxz
pop
bound
push
and
adc
and
push
outsl
cld
in
popf
fdivrl
out
ret
mov
mov
pop
scas
repnz
xchg
gs
pop
sbb
and
sub
cli
sbb
rol
outsl
rol
loop
ljmp
mov
mov
pop
int
ret
ljmp
jle
jns
pop
jge
pushf
sbb
out
dec
jecxz
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
sub
jno
js
dec
jle
js
jp
jns
fsubrl
ljmp
mov
sub
jg
mov
sbb
fisubs
dec
fldl2t
sbb
sub
dec
push
lods
fs
xchg
dec
addb
pop
xchg
push
cmp
dec
lock
add
ds
out
mov
rcl
jb
jge
inc
mov
dec
into
xchg
enter
push
mul
out
cmp
adc
pop
or
bound
jbe
loope
inc
adc
add
aad
enter
into
sbb
mov
xchg
jl
cmp
repnz
int
call
jno
jmp
push
andb
push
and
push
ss
cmp
mov
int3
mov
push
inc
inc
inc
ret
pop
repnz
call
mov
and
fdivrp
std
repz
aad
int3
sbb
lods
pop
inc
xchg
sahf
pop
je
scas
loopne
repz
dec
add
adc
inc
icebp
int3
mov
jnp
lcall
loopne
popa
inc
mov
imul
ljmp
int3
loopne
mov
pushf
gs
jge
mov
out
cmp
lea
scas
std
in
nop
lods
inc
ficoms
add
mov
cld
dec
xchg
add
jecxz
out
aas
adc
sbb
stos
inc
out
inc
push
and
mov
addr16
loopne
sbb
cmp
incl
stc
movsl
outsl
cmpsl
insl
stos
loopne
or
hlt
movsb
roll
push
cmpsb
shll
mov
mov
cwtl
lods
or
in
ret
sahf
fcoml
mov
jo
stc
outsl
push
push
pop
mov
lcall
add
je
int3
popa
lock
movsl
in
adc
push
cld
imul
pop
inc
mov
bound
imul
xchg
call
mov
adc
jo
fcoms
inc
stos
jb
mov
pop
sub
dec
pop
or
loope
lahf
mov
pop
sub
fcmovnb
in
xchg
cmpsb
sarl
in
dec
sbb
scas
ret
xor
mov
rolb
cmp
pop
mov
fiadds
adc
xor
and
idivl
push
cmp
sub
xchg
xor
ss
inc
fstl
daa
sbb
push
negb
dec
sub
cmp
pop
cmpsl
lds
test
dec
daa
leave
bound
out
or
xchg
sub
push
or
mov
xor
fimull
pop
push
xchg
or
cmpsb
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
and
dec
mov
dec
jle
js
mov
in
loope
cmp
aaa
sub
adc
jmp
stc
xor
insb
pop
or
dec
sub
cltd
stos
dec
gs
in
mov
or
rclb
jle
lods
push
sbb
adc
sarb
mov
popa
out
push
jl
jg
mov
xor
andl
rorb
mov
arpl
subl
in
inc
mov
add
dec
mov
clc
mov
mov
sbb
pop
sbb
sub
push
cwtl
push
lock
out
sub
or
rcl
loope
cmp
jecxz
push
pop
dec
movsb
or
mov
mov
addr16
sbb
fs
loop
stos
add
and
xchg
push
iret
fs
or
hlt
scas
repnz
or
test
leave
cmp
ja
fs
inc
shll
loop
add
xchg
fcompl
clc
cld
je
in
lods
ss
or
adc
sbb
outsl
popf
outsb
adc
sub
adc
mov
push
std
pop
xor
or
adc
sbb
push
incl
push
imul
cmp
xor
cmp
das
dec
imul
loopne
adc
or
mov
mov
repz
sarl
dec
fwait
cvtpi2ps
pop
sahf
mov
xchg
call
mov
or
scas
mov
lahf
addr16
fucomip
mov
mov
lds
jmp
sbb
cmp
jle
daa
push
sti
jg
inc
inc
test
pop
mov
arpl
sahf
mov
jb
bound
jmp
test
cmpb
aad
arpl
push
mov
icebp
nop
mov
inc
inc
push
fs
stos
xlat
std
sahf
ljmp
lods
scas
cli
xor
cmpsl
rclb
push
jmp
cltd
xor
enter
jo
and
popa
sub
pop
inc
cmp
je
jecxz
sub
into
xor
mov
stos
sub
inc
dec
cmpsl
mov
cmc
insb
in
push
clc
scas
clc
gs
loopne
sahf
cmp
in
inc
dec
lcall
jecxz
jae
push
fsubrs
mov
mov
cmp
outsb
and
cmp
or
scas
loope
sub
movb
mov
and
xchg
cltd
fildll
or
inc
xlat
aam
aam
fimuls
cmp
pop
xor
int3
dec
mov
cmpsl
imul
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
leave
aas
les
xor
dec
jle
js
fists
mov
dec
xor
dec
xor
in
adc
xorl
shll
push
dec
adc
gs
ret
mov
sbb
stos
fimull
and
jb
roll
movsl
fs
xchg
pop
jae
aaa
ret
xchg
dec
xor
mov
push
add
mov
xor
clc
jae
sbb
inc
pop
cmp
or
mov
push
sub
sub
adc
add
and
mov
or
bound
ds
aam
fiadds
mov
adc
lcall
pop
xchg
cmp
sbb
lahf
mov
fcmovnb
stos
fiadds
mov
les
mov
into
fnstsw
xor
adc
sbb
and
mov
dec
int3
jle
mov
jns
adc
into
in
xor
scas
mov
cmc
ss
mov
fs
into
test
mov
lods
pop
aam
pop
cmpsl
scas
sub
xor
and
xchg
sub
push
mov
cmp
inc
js
ja
sbb
inc
or
pop
mov
fs
pop
mov
pusha
sti
jecxz
add
daa
ljmp
es
pop
push
rol
mov
push
outsb
mov
ret
loopne
icebp
adc
cmp
mov
mov
dec
in
inc
or
pop
mov
or
push
xlat
sbb
jb
inc
in
sub
push
rol
push
or
inc
lret
icebp
xor
adc
pop
test
lods
orb
leave
pop
mov
inc
pop
sub
popf
test
jl
or
add
push
mov
xchg
inc
shl
xrelease
repz
xorl
xchg
in
pusha
xor
xchg
jmp
mov
push
xor
add
mov
aad
pop
xor
pop
data16
fs
push
scas
fcomp
inc
pop
iret
fbstp
inc
cli
push
lret
shll
inc
movsl
mov
mov
sub
mov
xchg
mov
add
mov
xchg
push
and
xlat
inc
pusha
mov
add
shl
movsb
lahf
call
cmc
push
or
int3
jno
push
sub
out
jnp
cld
sarb
fs
xchg
or
inc
lcall
sbb
jge
les
push
fs
cwtl
scas
push
inc
outsl
jne
pop
dec
leave
sbb
testl
inc
enter
jo
jge
into
jg
push
lret
addl
jl
je
xchg
mov
scas
inc
sarb
mov
pusha
movl
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
xchg
xor
dec
jle
js
ret
ror
std
aaa
lret
cmpsl
push
jg
movsb
add
jmp
cld
pop
xchg
mov
or
shl
or
xchg
stos
in
movsl
imul
jo
push
fwait
cli
iret
sbb
xlat
stos
xor
inc
scas
loop
ret
pop
xor
xchg
popa
sub
addr16
xor
dec
icebp
pop
stos
js
ja
movsl
add
add
push
fadds
aam
or
cli
or
jno
push
call
xor
scas
sarl
stos
out
outsb
add
sbb
stc
fs
and
adc
xor
dec
in
push
cmp
scas
lods
cs
dec
aad
out
pop
roll
popf
lret
push
setno
neg
out
popf
pusha
in
inc
xchg
cmp
gs
jae
dec
inc
aam
adcb
and
or
enter
pop
stc
push
xchg
xchg
ret
pop
aam
bound
push
fsubrs
or
push
ret
lahf
inc
cmp
lcall
push
shll
call
inc
cmp
and
sti
in
jp
dec
pop
fwait
int3
push
lods
mov
push
int
out
dec
addb
lea
push
push
xor
pusha
pusha
std
dec
inc
push
pusha
ds
dec
pop
mov
jecxz
es
dec
jmp
icebp
lret
insb
leave
fstl
push
sbb
push
dec
push
out
int3
sub
out
lret
js
mov
adc
mov
cltd
push
sahf
int
push
data16
ret
out
and
add
dec
or
test
mov
push
pop
sidtl
add
jo
adc
jl
lret
negb
inc
scas
mov
divl
js
pop
sti
sbb
and
divb
mov
mov
add
sub
jg
xchg
daa
and
mov
mov
lcall
mov
push
scas
lahf
test
addb
cmpsb
xchg
jmp
outsl
jge
xor
call
addr16
imul
lds
or
inc
les
xchg
rol
mov
cmpb
shl
testb
out
xchg
sbb
mov
xor
sub
fwait
lcall
mov
mov
dec
or
sarb
mov
rcrl
or
test
inc
popf
sbb
mov
mov
sbb
test
push
sarb
push
cmp
or
mov
cmp
pop
in
mov
xor
div
add
mov
inc
jae
rclb
hlt
jl
aam
sarb
in
cmp
pop
leave
cmp
or
inc
clc
jmp
int
rol
ror
aad
inc
jecxz
adcb
cmp
jle
js
dec
lods
ja
ret
mov
add
push
loop
sub
xlat
jle
dec
add
out
or
xor
jne
lods
or
stos
and
icebp
cmp
stos
jp
pop
popf
ret
jle
adc
das
popa
adc
shrl
adc
xor
into
inc
mov
sti
mov
xchg
pop
sahf
mov
jnp
or
or
inc
xchg
pop
pop
mov
sbb
flds
mov
ret
dec
pusha
mov
test
or
sub
mov
pop
mov
aad
xchg
sub
push
stc
scas
dec
sbb
mov
lahf
xor
push
aaa
inc
push
cwtl
sbb
push
mov
loopne
dec
imul
insl
das
aas
jecxz
and
pop
orl
sbb
xchg
mov
sbb
fs
jle
cmp
jecxz
iret
fisubrl
rclb
sbb
test
in
es
lcall
push
hlt
lock
push
je
mov
dec
repz
repnz
in
out
push
ffree
sbb
cmp
lcall
inc
jbe
pop
inc
cmp
mov
das
rorl
xchg
test
xor
adc
inc
dec
push
loop
or
push
bound
mov
xor
lds
clc
stos
mov
aaa
addb
test
in
mov
sbbl
mov
rcr
shr
ljmp
xor
test
fnstsw
nop
pop
add
mov
sub
dec
and
bound
xchg
inc
insb
mov
aaa
xlat
mov
sbb
pop
ffreep
adc
xlat
les
sti
inc
mov
call
test
xchg
lock
jmp
jo
test
sahf
cmp
testl
loope
xorb
adc
jae
insl
or
testb
pop
and
or
call
loop
mov
mov
js
ss
and
pop
in
inc
lods
dec
add
cltd
addr16
sti
and
push
cmpsl
jne
pop
lods
sub
pop
int3
add
into
sub
pusha
icebp
jecxz
and
cmp
ja
sub
push
mov
push
sbb
repnz
negl
mov
dec
sub
inc
orl
fidivrl
jns
lea
ret
pop
scas
aam
sti
outsl
aam
sub
ljmp
jns
jg
sub
les
cld
xor
stc
fildll
rcll
dec
mov
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
sarb
sub
cmp
dec
jle
js
mov
mov
aas
enter
imul
vmaxps
popf
movb
int
sqrtps
imul
pusha
mov
mov
inc
inc
and
ja
insl
xchg
sahf
mov
and
sub
dec
sti
out
mov
lret
inc
inc
out
cmc
add
and
fldt
daa
das
mov
and
sub
sub
pop
mov
loope
adc
mov
jecxz
mov
out
jae
decb
daa
mov
adc
ja
pop
mov
pop
pop
xor
mov
add
rcrb
gs
js
jmp
pop
ljmp
mov
push
and
inc
aaa
cmp
fmulp
xchg
xor
inc
ret
and
inc
push
movsl
push
pavgw
mov
sbb
dec
gs
xorb
rol
movsb
adc
lret
cmpsb
push
or
cmp
bound
ss
dec
dec
mov
inc
add
sbbb
dec
cmp
dec
iret
filds
outsl
cwtl
pop
and
stc
push
sub
insb
push
mov
fistpll
inc
jnp
dec
pop
rsqrtps
popa
in
das
pushf
fcmovb
and
adc
jmp
push
pop
mov
lahf
sbb
adc
xorb
xor
imul
mov
sbb
sahf
fwait
mov
pop
inc
xor
jb
or
pop
mov
and
xchg
sbb
movsb
mov
in
sub
or
mov
in
mov
inc
in
mov
fadds
dec
sub
adcb
add
add
and
mov
adc
iret
adc
sub
mov
xchg
icebp
mov
or
sub
push
ror
imul
pop
push
jp
pop
ds
stos
inc
cmp
inc
push
mov
loopne
addr16
scas
loope
jmp
inc
arpl
xchg
cmp
loop
aaa
push
andb
in
nop
gs
add
arpl
xchg
xor
mov
movsb
dec
push
movsl
test
and
imul
dec
sub
cltd
pop
or
ret
lods
jl
inc
add
stos
inc
push
stos
pop
aaa
and
idiv
sbb
iret
aam
mov
stos
cmp
leave
icebp
xor
mov
orb
lret
add
shll
jmp
shrb
adc
sub
xchg
fmulp
sub
mov
sti
lods
inc
out
xchg
aam
mov
add
dec
inc
ja
sbb
push
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
pop
cmpsb
mov
dec
jle
js
xor
sub
lods
cli
je
imul
jbe
adc
mov
mov
cmpsb
and
adc
sub
sbb
movsb
dec
scas
in
stos
js
roll
in
or
and
mov
fildl
div
inc
fwait
lret
push
pop
adc
out
mov
fimull
mov
jae
lret
inc
mov
out
xchg
xor
scas
inc
xor
incb
je
xorl
fisttps
dec
sbb
fst
std
mov
or
iret
sbb
test
mov
xchg
push
adc
and
in
inc
repz
addr16
dec
pop
das
mov
sbb
xchg
cmp
inc
scas
jmp
push
mov
adc
xorl
push
mov
lods
or
inc
aas
test
mov
fs
paddusb
decb
and
cmpsb
rcll
jae
pushf
mov
xchg
std
push
aas
mov
out
fwait
movsbl
and
aam
pop
in
sahf
mov
fsubrs
ss
repnz
cld
jnp
lock
pmaxsw
lret
les
ja
push
ror
in
icebp
sub
lret
ljmp
xchg
push
adc
cmp
cmp
sti
and
pushf
or
xchg
mov
test
enter
mov
loop
pop
int
lods
dec
div
jmp
xchg
push
rep
sub
mov
cld
movsb
fs
scas
inc
mov
sbb
lret
mov
cmp
outsl
mov
fsub
xchg
xlat
fcomp
jge
xor
adc
push
inc
stc
das
cmp
push
cmc
sbb
and
or
xor
movsl
fcompl
daa
and
adc
and
and
adc
jb
push
cmc
sti
jg
push
sar
stos
jb
or
jmp
sahf
sti
jp
inc
xchg
xor
xchg
inc
push
movsl
stc
cmp
mov
mov
in
push
add
mov
jge
mov
pop
ljmp
lds
mov
xor
dec
std
push
scas
scas
icebp
pop
mov
in
mov
in
ds
or
xor
mov
push
scas
insl
dec
movsb
adc
push
rorl
std
in
lods
jno
in
add
cmp
lret
push
pop
loop
insl
fstps
and
xorl
movsb
push
pop
aad
jge
pop
lahf
push
pop
nop
dec
push
inc
xchg
loope
inc
mov
lcall
xchg
hlt
sti
mov
outsl
xchg
out
jmp
movsl
inc
add
iret
jo
inc
mov
lcall
mov
shr
jmp
add
rol
ror
leave
rcr
aaa
mov
fdivl
js
mov
cmp
mov
fs
add
mov
and
pop
and
cmp
add
cmp
cmc
lcall
imul
stos
mov
sub
fwait
mov
inc
in
mov
xchg
xchg
fcom
in
aas
test
leave
sub
loopne
movsb
icebp
nop
lret
cmp
inc
adc
stos
add
sti
mov
add
mov
jns
mov
movsb
imul
into
pop
xor
mov
stos
sub
and
lods
sub
ds
cli
xchg
leave
sbb
cmpsl
cmp
jmp
add
ret
jmp
sub
add
mov
mov
sarl
xor
les
xchg
addr16
pop
outsl
sbb
jno
adc
mov
mov
and
out
enter
push
inc
cmp
adc
enter
mov
pop
movsl
fisttpl
inc
les
lea
pop
push
in
in
mov
inc
aas
add
mov
and
inc
mov
roll
inc
and
or
xlat
stc
movsb
loope
mov
lcall
out
pop
sub
sbbb
mov
mov
push
sub
pop
mov
sbb
and
dec
test
insl
mov
insl
outsl
push
imul
mov
icebp
add
mov
xchg
jno
pop
shl
mov
inc
jnp
adc
into
cmp
add
cli
pop
jl
pop
push
je
mov
in
jns
sub
pusha
daa
test
push
jl
daa
mov
loopne
mov
or
out
popf
dec
shrl
je
mov
inc
icebp
cmpsl
dec
sub
repnz
or
mov
jecxz
xor
ret
sbb
dec
sub
iret
mov
shrb
mov
push
hlt
repnz
dec
ss
pushf
pop
sbb
dec
rcr
cmpsb
cltd
jnp
sub
movsl
or
ljmp
dec
mov
std
pop
mov
test
inc
insl
sub
mov
push
xor
jb
push
imul
movsl
add
xchg
clc
ljmp
inc
test
cmp
out
mov
cmp
into
push
mov
popf
out
adc
add
scas
test
fsubs
or
sbb
es
andl
inc
mov
xor
je
xchg
aas
and
ja
in
mov
pop
test
mov
push
mov
and
outsb
cmc
mov
iret
pop
movsb
imul
hlt
flds
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
loop
lahf
fmuls
jle
js
hlt
jne
mov
mov
push
imul
lds
mov
sahf
scas
sbb
mov
pusha
add
leave
or
shlb
pminsw
jmp
pushf
jge
ja
xor
fistps
adc
mov
fildll
push
add
aad
lahf
jns
inc
daa
lahf
jmp
or
in
xor
cld
xor
nop
repnz
insb
push
jb
dec
rcll
jae
mov
sub
fwait
aaa
popf
lock
and
xor
add
rcr
fimull
loopne
inc
out
push
pop
mov
xchg
rclb
hlt
fdivrl
in
pop
xor
lret
mov
push
cmc
addl
push
inc
push
sbb
icebp
test
hlt
jns
scas
jmp
int
sbb
ss
pushl
lret
xchg
test
ljmp
add
scas
sub
and
mov
pop
sbb
push
push
mov
jnp
cmp
fwait
bound
mov
mov
mov
std
pop
pushf
shlb
mov
je
cmpsb
or
rclb
mov
aam
lds
mov
pop
lcall
sar
enter
xor
and
fcmovnu
enter
xorl
adc
mov
xchg
sbb
and
or
loope
in
fisubrs
js
in
je
sbb
pop
aaa
jp
pop
sbb
les
mov
pop
mov
push
ss
into
cmp
mov
popa
jge
sbb
mov
cmp
mov
xchg
sbb
xor
mov
xor
lret
in
xchg
aaa
repnz
xlat
out
pop
inc
shlb
andl
push
int3
push
fldpi
das
enter
push
in
in
jg
jge
fisubl
outsb
das
sbbb
and
xor
push
dec
prefetch
mov
jle
loop
loopne
pusha
cmc
fwait
cltd
lods
in
jae
sbb
bound
out
aad
inc
stc
lock
loope
aam
mov
orl
fidivs
inc
lds
or
inc
mov
loopne
jle
push
xor
and
fstpt
shlb
adc
or
sub
xor
fcomps
or
adc
rorl
dec
iret
stc
cmp
mov
mov
push
movsl
cmpb
pop
nop
mov
iret
jo
lcall
xor
xchg
iret
xchg
mov
pop
inc
jne
mov
push
mov
jae
adc
fmull
dec
adc
jmp
add
aas
ret
rol
sbbl
pushf
faddp
js
dec
jle
js
cli
sbb
mov
dec
addr16
cli
mov
stc
xchg
iret
xchg
xchg
xchg
test
adc
push
pop
pop
pop
aas
std
int
xor
out
aad
in
cmpsb
jecxz
scas
cmp
or
cmp
fmul
hlt
push
out
xchg
iret
shrl
xchg
aas
cmpsb
cmp
xor
cwtl
loope
lahf
mov
pop
and
push
fistpll
dec
ja
into
xchg
lods
in
stos
ds
mov
aad
ljmp
add
push
insl
or
fnstsw
hlt
mov
pusha
add
iret
lret
dec
bound
outsl
mov
sub
cld
mov
adc
and
test
lods
rorb
adc
inc
add
mov
mov
lds
stos
ja
mov
jnp
mov
adc
popl
or
sub
push
jmp
orl
add
lret
or
cmpsl
mov
push
outsl
dec
jbe
je
das
lods
sbb
js
xor
leave
and
sbb
and
mov
in
mov
fnstsw
out
inc
clc
pusha
ror
adc
lock
lds
scas
xchg
xor
popl
jbe
mov
lahf
dec
pop
dec
scas
mov
adc
js
mov
jne
aaa
cmp
adc
pop
sti
lods
mov
cs
and
stos
add
call
push
sbb
imul
fdivrs
daa
xchg
ljmp
rcrb
add
stc
or
mov
push
cli
adc
daa
mov
imul
add
adc
inc
pushl
xchg
cmp
adc
loope
xlat
xchg
outsb
hlt
test
mov
dec
mov
mov
add
push
out
sub
push
mov
sub
cmp
movsb
out
lea
adc
out
leave
inc
mov
jbe
push
sbb
adc
push
hlt
repnz
clc
push
in
jmp
add
push
test
adc
sub
aam
fsubs
jecxz
xor
sti
arpl
filds
pop
pop
out
sub
je
mov
mov
mov
fdivrs
jno
cmc
into
ss
sub
xchg
clc
and
pop
dec
cltd
push
negl
adc
or
es
jnp
xor
fs
pushf
mov
xchg
xchg
mov
mov
shlb
adc
insl
push
jnp
add
xor
sub
push
dec
imul
sbb
mov
ficoms
xchg
pushf
sub
iret
and
or
mov
jmp
ds
cmp
mov
fadds
xor
js
dec
jle
js
pushf
jmp
or
push
or
gs
add
outsl
cmpsb
inc
shll
in
aaa
jne
inc
subl
jbe
cli
sar
fstpl
ljmp
add
sbb
cmc
cli
fcomp
test
dec
sahf
pop
int
sub
addb
cld
call
lods
xchg
jnp
stos
lock
dec
outsl
ret
add
push
into
add
mov
shll
fs
out
ret
jb
daa
mov
in
jg
mov
test
jle
ret
adc
mov
test
popf
js
ljmp
mov
ss
push
mov
xor
dec
lahf
dec
cltd
rcll
jb
push
in
in
lahf
scas
lcall
test
pop
test
cmp
fnsetpm(287
pop
adc
push
or
sbb
daa
shrb
xchg
mov
pop
adc
add
cmp
into
cmpsl
jle
lds
test
les
inc
sarl
popa
sbb
mov
jbe
mov
cmp
xor
jmp
hlt
sbb
mov
rclb
insl
mov
cmp
loope
ret
xchg
lahf
and
jmp
xor
les
call
jle
cmpsb
vaddps
sub
dec
add
or
add
jns
mov
pushf
push
ficomps
test
aad
pop
and
ds
xor
loop
jnp
cli
lods
and
aad
outsb
icebp
xchg
divb
xchg
or
jge
outsl
jae
cmp
in
aas
xchg
xchg
cmovnp
pop
cs
push
fs
ret
lahf
enter
adc
stos
lret
push
xchg
jg
jge
inc
jle
js
mov
dec
xor
test
das
mov
push
jg
dec
or
xchg
insb
bound
testl
adc
cltd
dec
adc
mov
jo
xchg
out
push
lahf
insb
rolb
sbb
fcompl
mov
push
clc
mov
sbb
inc
ja
scas
negl
mov
cltd
inc
out
push
rcll
push
cmc
sbb
cmp
fisubs
mov
sbb
shll
mov
adc
repz
sub
jae
popa
lds
imul
ljmp
clc
rol
push
xchg
jge
or
pop
aaa
imul
push
imul
arpl
dec
add
nop
sbb
ret
push
ret
push
pop
adc
ljmp
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
xor
sub
jle
js
addr16
inc
mov
sbb
cwtl
or
dec
jg
in
jmp
adc
lds
adc
fisttpll
push
andl
scas
adcb
gs
cld
popa
sub
sub
mov
dec
mov
popa
cmp
in
out
sub
pop
pop
aaa
inc
mov
sbb
mov
mov
addl
imul
and
push
into
out
cmpsl
scas
clc
jno
jge
cli
xchg
adc
and
movsl
cmp
cmp
shrb
cmpsl
mov
hlt
mov
cmc
je
dec
dec
mov
loop
in
inc
lcall
mov
insl
xor
xor
lods
out
test
int
xor
or
mov
cmp
sti
xchg
inc
rcrl
cmp
fldenv
jl
in
lcall
inc
cltd
icebp
pop
add
clc
ret
loop
fsubrl
cmp
fldl
xlat
xor
fcmove
lret
icebp
xor
and
out
sbb
icebp
cwtl
xor
jp
mov
clc
push
mov
xchg
addb
mov
loope
dec
cmp
es
push
adc
lcall
push
inc
adc
and
mov
xlat
fnstsw
pop
ljmp
cltd
add
outsl
sbb
clc
xchg
testb
or
pop
add
xchg
or
sub
into
and
mov
or
inc
imul
ljmp
int
cmp
xchg
push
divb
in
lds
in
test
aas
sahf
aas
fldcw
pop
dec
outsb
inc
pop
shlb
dec
and
cltd
sub
add
ret
movsl
fldenv
scas
cmc
pop
pop
push
jns
mov
rcrb
jp
sbb
inc
xchg
iret
sbb
sbb
jne
aam
das
jb
or
and
roll
clc
movl
sbb
dec
mov
cli
and
mov
psllw
push
xchg
sbb
mov
pop
loop
cmp
int
jb
rcl
adc
fmull
cmp
in
and
fnstcw
xor
rcll
adc
push
sub
inc
fiaddl
pop
fstpt
dec
in
cli
out
add
cmc
and
cmp
in
stc
addr16
mov
fwait
cltd
mov
nop
outsb
sbb
push
jns
test
inc
nop
rorb
hlt
negl
cmp
inc
jo
rol
xchg
mov
addr16
xchg
push
aas
jge
mov
push
inc
int
fldenv
nop
add
dec
pusha
push
or
push
test
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
daa
out
insb
iret
js
fs
js
scas
jb
jo
and
incl
shrb
dec
pop
mov
in
out
mov
jbe
stc
mov
aaa
xchg
push
pop
cmp
xchg
cltd
mov
xlat
push
mov
dec
cmpsl
push
adc
add
enter
xchg
das
cld
sbb
jl
adc
into
ja
lods
aad
loope
mov
fndisi(8087
ss
sub
imul
lret
xor
xchg
xchg
push
mov
inc
sbb
test
fiadds
sti
dec
stos
adc
push
je
and
loopne
lods
push
dec
movsl
dec
aam
and
xor
insb
movsl
int3
dec
bound
cmp
test
mov
pop
or
je
push
xchg
mov
in
shl
and
cli
cmp
and
stc
pop
xor
test
inc
sahf
push
sahf
lock
data16
jmp
mov
or
xchg
adc
mov
fcoml
jecxz
aaa
sbb
ret
sub
in
cmc
mov
je
cli
rorb
inc
mov
mov
mull
fs
cwtl
xchg
adc
mov
icebp
mov
ja
and
stc
lret
add
scas
jp
adc
das
popf
pop
or
mov
adc
dec
dec
pop
pop
aas
mov
es
lock
out
lods
xchg
push
inc
cmp
addr16
lret
stos
mov
incb
jae
push
lret
les
jno
lret
dec
ffreep
cwtl
add
xor
pop
inc
and
in
pop
jl
cwtl
mov
jge
xchg
fsubr
fsubs
mov
push
xchg
int
ss
push
mov
lock
or
or
xlat
pop
xchg
sub
aaa
outsb
sub
ljmp
or
xchg
add
add
jae
cmp
push
fwait
fwait
lods
push
nop
je
jge
xchg
jae
and
das
lea
out
loop
out
dec
out
loope
jb
clc
mov
into
rcl
lret
je
mov
jp
and
jge
mov
cs
dec
sbb
out
not
or
mov
je
icebp
out
out
imul
insl
aas
and
inc
pop
js
mov
push
test
dec
mov
sub
jo
xlat
or
aad
xchg
mov
pop
inc
test
hlt
pop
adc
xor
arpl
stc
fsubs
rcll
out
or
xchg
out
lods
cli
rdmsr
ret
ss
mov
jecxz
push
int3
scas
addr16
cwtl
mov
sahf
sarl
add
lods
mov
mov
jo
inc
rcll
mov
or
dec
inc
xchg
out
push
or
outsb
xchg
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
pop
cmp
pop
int3
js
fs
js
cmp
pop
nop
mov
push
push
call
dec
das
inc
mov
dec
outsb
xor
mov
jge
cmc
int
xchg
fninit
insb
mov
mov
into
cltd
incb
repnz
loope
mov
icebp
mov
jae
inc
xor
lret
mov
pushf
adc
rcrb
mov
adc
mov
xchg
dec
nop
pop
jno
push
xor
xor
cmpsl
testb
daa
inc
cmp
in
push
or
xchg
call
dec
or
pop
lret
pop
mov
into
orl
daa
mov
push
push
mov
jns
mov
in
pop
and
ds
repz
pop
push
pop
pop
daa
fsubrl
mov
dec
sarl
flds
and
or
xchg
or
or
cmc
popl
cmpsl
mulb
shrb
adc
cmc
popf
jecxz
push
sbb
outsb
roll
stos
jle
popfw
in
cmp
pusha
xchg
mov
std
and
imul
push
aam
add
pop
rcll
ss
in
inc
push
inc
sub
jge
xor
out
xchg
or
sbbl
data16
test
fldenv
test
rclb
mov
dec
cmp
mov
sbb
mov
insb
dec
cs
cmp
xor
lods
fsubl
js
in
push
pop
lret
xor
fwait
push
cmp
or
jo
cwtl
clc
in
repnz
pop
mov
movb
stos
or
cltd
loope
fsts
and
in
fldl
ljmp
sub
jg
xchg
jbe
and
out
lahf
or
cli
outsl
dec
adc
sahf
push
out
pop
movl
stos
test
sbb
cmp
mov
xchg
scas
pop
mov
sbb
cmp
clc
push
rolb
mov
pop
call
fucomp
negl
test
push
sbb
ret
adc
test
push
in
rolb
push
sti
std
cwtl
sbb
mov
fmull
push
pop
call
or
push
or
inc
inc
imul
loopne
xor
int
sub
iret
push
pop
xlat
imul
in
inc
cs
push
dec
sbb
sbb
xor
fwait
pop
arpl
mov
aas
add
test
bound
nop
in
add
sarb
dec
insl
xor
fcoms
arpl
mov
inc
jae
nop
sbb
or
rorb
enter
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
jle
pop
testl
insl
insl
pushl
xor
cmpsl
repz
or
cwtl
insl
xchg
inc
fstpl
cmp
and
pop
xor
pop
ss
imul
xor
test
dec
ret
mov
hlt
sbb
sub
ret
ljmp
pusha
ret
test
add
loop
mov
test
imul
push
out
pop
daa
adc
popl
mov
call
pop
icebp
inc
mov
jne
or
push
sbb
int
mov
lcall
ljmp
leave
or
xor
cltd
xchg
mov
jle
sti
ds
xchg
mov
outsb
fisubrs
cltd
pop
lret
imul
in
shll
mov
orb
popa
or
pop
and
cmp
roll
shr
pop
adc
dec
cmpsb
pop
push
mov
xor
icebp
sub
adc
imul
inc
data16
stc
jae
mov
les
jne
addl
les
pop
push
leave
pop
hlt
test
in
sbb
into
and
movsl
adc
imul
loop
dec
inc
bound
sbb
pop
popf
pop
push
xchg
mov
adc
cmp
or
mov
cs
jae
add
subb
xchg
into
or
stc
mov
pop
push
dec
xchg
add
adcb
notb
cld
push
push
inc
pop
mov
std
mov
or
pushl
jbe
fcomip
andps
xor
mov
mov
int3
add
sub
cmp
loope
mov
into
sbb
fnstcw
in
cwtl
mov
xchg
pop
sub
test
scas
xor
cmc
and
xchg
mov
cli
mov
repz
icebp
inc
pop
xor
or
add
fbstp
dec
icebp
and
pop
call
into
js
mov
xchg
outsl
movsl
fs
lods
cmc
push
mov
push
add
adc
and
outsb
cmp
orl
in
int
dec
addl
mov
inc
lds
js
inc
scas
pusha
jecxz
testl
packuswb
std
mov
adc
dec
rorb
out
insb
cmp
outsb
fucom
pop
lods
push
cmp
ljmp
bound
imul
xor
mov
ret
iret
dec
iret
movsb
sbb
xchg
arpl
push
cmpsb
pop
pop
andl
push
pop
sbb
mov
outsb
jne
jle
add
pop
scas
add
xor
test
mov
imul
jns
mov
and
fnstcw
mov
inc
incl
add
insb
add
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
inc
stc
icebp
mov
js
fs
js
cmp
mov
inc
pop
lret
pop
notb
add
hlt
aad
and
je
dec
scas
test
inc
jne
mov
sti
push
arpl
pop
xchg
dec
hlt
adc
mov
sub
test
and
pop
pop
or
lods
cwtl
pop
loopne
imul
orb
pop
dec
xchg
adc
lea
lds
jecxz
out
mov
addl
add
lret
jecxz
popa
add
cwtl
xchg
push
mov
pop
cwtl
js
add
push
mov
dec
aam
inc
mov
xchg
push
push
fsubs
and
add
nop
or
insb
cwtl
mov
and
gs
scas
cld
cmp
ficoms
mov
xor
out
dec
mov
fidivs
and
ret
push
cmp
mov
and
jle
push
add
insl
lods
lods
clc
push
loope
lods
mov
test
int
aad
les
cmp
cld
dec
std
ror
xchg
int3
xor
popf
dec
mov
cltd
lahf
and
insl
mov
dec
lods
int
fs
cltd
mov
ret
icebp
mov
sub
dec
push
test
and
xchg
lock
nop
inc
xchg
adcb
push
pop
xor
lds
add
lods
lds
lea
pop
mov
and
xlat
jae
mov
dec
fsub
sbb
arpl
pop
sti
cmp
lret
fldenv
mov
jp
dec
leave
jge
hlt
lret
add
dec
mov
sub
repnz
ljmp
out
add
test
add
pop
ret
xchg
in
pop
fmuls
sub
lods
fcomp
out
lret
xor
xlat
jecxz
push
xchg
out
and
movntps
pop
pop
pop
call
fs
icebp
and
fnsave
cmp
xor
orl
pop
out
out
ror
shlb
ljmp
in
mov
xor
insl
sbb
shlb
inc
std
dec
mov
push
cwtl
adc
shrl
jl
jmp
pop
shl
mov
hlt
pusha
push
xchg
sahf
in
in
jno
test
scas
push
push
mov
cmp
and
or
mov
dec
int
sub
jp
fldcw
dec
enter
nop
imul
jl
shll
and
sahf
jno
or
bound
adc
mov
add
fiaddl
lods
fistpll
not
jecxz
xlat
jmp
outsb
and
out
bound
mov
popf
cs
xor
pop
cltd
add
fcompl
push
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
out
decl
js
fs
js
je
enter
out
cmp
xor
ficompl
pop
sti
mov
sub
xchg
inc
xchg
hlt
cld
andb
call
mov
cmp
cwtl
mov
push
mov
mov
jbe
andb
mov
out
push
fstpl
arpl
inc
data16
xchg
adc
pop
mov
nop
mov
pusha
mov
mov
pop
add
mov
inc
in
jl
enter
xor
popa
jge
in
es
or
aas
insl
mov
pop
xchg
shrb
dec
cld
mov
mov
adc
inc
adc
test
dec
dec
je
dec
out
in
icebp
fwait
loopne
ret
shl
push
lret
daa
mov
imul
out
dec
jmp
loop
jp
icebp
xchg
test
iret
sub
xchg
cmp
enter
push
sbb
pop
push
adc
xor
or
mov
cmp
add
into
je
repnz
fcomi
imul
imul
cmpsl
jne
out
fidivl
push
test
subb
push
sbb
inc
lcall
cmp
mov
sti
dec
add
mov
iret
mov
notl
push
mov
in
xchg
mov
scas
or
filds
adcl
push
enter
sbb
xlat
sti
adc
insl
sbb
push
xor
push
adc
lods
dec
dec
cmp
sub
or
in
xor
loop
in
outsl
gs
in
ss
sbb
sahf
xor
aaa
xor
cltd
sbbb
inc
pop
dec
cmp
xor
or
pusha
xchg
jo
gs
pop
cmc
cmp
add
fistpl
shrb
rcll
sahf
sbbb
aam
test
cmp
sbb
jbe
cmp
jns
push
jg
sub
pop
movsb
lods
adc
dec
mov
push
add
pop
pop
es
mov
xor
push
adc
or
push
aaa
pop
and
repz
outsl
sbb
int3
test
ret
call
mov
and
adc
adc
es
xor
neg
decl
ds
enter
pop
push
lds
push
xchg
sub
push
in
mov
into
jmp
mov
lods
and
jo
stc
and
in
jne
xor
jbe
dec
sbb
mov
dec
xor
rcl
jmp
rolb
mov
aas
cmc
dec
sarb
rcrb
pop
ss
xchg
jb
xchg
out
inc
imul
xchg
adc
iret
ss
fcmove
lret
cmp
mov
mov
lcall
mov
mov
jmp
lret
ret
fld
add
fmul
repnz
fdivrs
fs
js
loopne
inc
sub
jne
or
ds
ficomps
sahf
push
in
int
cltd
mov
pop
dec
cmp
sub
xor
xchg
xlat
cmp
lahf
push
or
sub
imul
jo
or
movsb
mov
or
pop
pop
test
pop
cmp
sahf
xchg
cmp
rol
cmpb
cmp
mov
movsb
dec
sbb
daa
out
inc
loopnew
xor
ljmp
pushf
cmp
lret
inc
shlb
pop
sub
out
cs
fbld
pop
int
jno
insb
fcompl
lret
lods
je
out
xor
sbb
jmp
jecxz
arpl
mov
adc
daa
mov
cmp
mov
ja
push
sbb
xchg
xchg
in
imul
fs
mov
insb
ja
test
scas
sbb
mov
addl
or
push
in
mov
cmc
and
and
cmp
arpl
fnstsw
jb
sub
popf
out
inc
shl
hlt
orps
jns
ds
scas
sub
lea
sub
in
cmpl
test
pop
es
xchg
dec
sti
dec
xchg
popa
xor
aas
adc
adc
imul
paddsb
outsb
insb
lcall
cmp
cmp
xchg
jb
xchg
add
in
mov
xor
fsubr
addl
mov
ss
shrb
push
cld
mov
fwait
xchg
dec
adc
jae
lcall
aas
popa
push
pop
push
mov
pop
cmpsl
cmpsl
dec
xor
insb
cmp
lock
cmpsl
cs
mov
xchg
cli
rcrb
test
push
lahf
xor
push
movsl
imul
mov
jl
dec
test
fists
and
xchg
fwait
pushf
out
and
xchg
inc
mov
or
ljmp
in
dec
xorb
mov
pop
dec
lea
clc
shll
mov
sub
repnz
mov
mov
add
rcrb
pusha
aas
sub
adc
pop
or
jbe
test
xchg
sbb
lea
sub
leave
jns
mov
cs
daa
xchg
dec
testb
aam
xchg
add
nop
movsl
imul
rcl
aam
inc
mov
pop
ror
gs
lret
mov
dec
mov
sbb
shll
dec
je
lock
into
inc
xchg
push
jb
lea
mov
nop
jne
hlt
test
pop
aad
sub
adc
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
movsb
hlt
fnstsw
fs
js
jmp
jmp
popf
jg
push
pop
loop
push
or
icebp
scas
add
adc
or
mov
jb
mov
add
adcl
test
push
jl
je
and
dec
sbb
push
sub
mov
leave
inc
scas
adc
push
or
push
aas
xchg
push
iret
aad
sbb
decb
and
rol
stc
cmp
fisubrs
test
leave
jne
or
cmp
fstps
fimull
inc
int
adc
xchg
mov
cwtl
sbb
mov
ss
fcomps
out
popa
orb
imul
imul
stos
dec
jl
mov
mov
mov
stos
cld
push
aam
jl
ds
out
ljmp
adc
dec
gs
adc
pop
sub
dec
jl
mov
in
mov
movsb
sbb
fisttpll
sbb
outsl
jp
mov
add
or
mov
shll
sub
ret
lds
lahf
ds
sbb
xor
dec
rorb
and
add
jae
inc
cmpsb
and
cmp
add
mov
adc
int
mov
dec
mov
fwait
sub
or
loopne
loop
add
fiaddl
out
sub
repnz
insb
ljmp
add
fidivrs
enter
ja
push
add
mov
jns
in
cmc
lea
out
xor
xor
shl
fstps
dec
sub
jbe
clc
push
and
xchg
loopne
int
in
xor
in
mov
sbb
test
mov
call
cli
push
fisttpl
das
lahf
mov
scas
sbb
or
dec
fwait
daa
fcoml
xchg
out
dec
jb
cmp
cli
clc
adc
cmpb
sbb
mov
sub
call
ja
in
clc
mov
movsl
adc
jns
arpl
mov
xchg
push
jne
jo
sahf
shrl
ret
ficompl
cmp
jl
push
pop
iret
mov
pop
nop
jb
ret
gs
and
out
cmpl
jg
test
sbb
mov
mov
and
dec
xor
je
icebp
xchg
test
pop
pop
ret
xchg
sub
cmp
aam
pop
adc
data16
jmp
repz
jo
pusha
jmp
jp
dec
filds
in
or
jecxz
cmc
vmread
dec
push
and
inc
mov
repnz
push
ret
mov
int3
dec
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
or
inc
pop
jno
jg
sar
and
outsl
scas
or
inc
fldt
mov
jae
scas
sti
mov
pop
xchg
mov
out
pop
xchg
cwtl
push
test
jo
test
lcall
mov
repnz
sbb
and
sub
jp
ljmp
add
push
popa
insb
adc
pop
mov
xchg
shll
data16
test
mov
int3
out
shl
cwtl
sbb
sbb
scas
mov
mov
pop
in
mov
in
sub
xchg
inc
pop
ret
lret
fscale
jecxz
or
jl
cmp
fs
fstps
adc
inc
jle
mov
inc
pusha
dec
add
add
xlat
push
nop
fimull
push
xchg
int3
aaa
aam
push
outsb
cmp
scas
push
pop
mov
cmp
jg
inc
xchg
dec
scas
mov
cltd
insl
loopne
xchg
je
insb
insl
adc
arpl
xor
xchg
jns
cli
lds
popa
mov
gs
mov
loope
ret
movsl
push
mov
jle
test
xor
mov
adc
frstor
sub
sbb
jae
mov
loopne
les
xor
lock
scas
mov
pop
insl
es
shr
loop
mov
int3
xor
out
and
cmp
mov
mov
sti
cmp
mov
jno
popa
inc
jl
outsb
dec
daa
ret
pop
sbb
out
xor
sahf
inc
cmp
mov
push
cld
sbb
movsb
ss
or
xor
mov
jnp
frstor
sub
fs
xchg
cltd
je
lods
cli
mov
jg
bswap
mov
xchg
icebp
outsl
aad
int3
inc
cwtl
sub
cmc
or
mov
xor
dec
or
fisttps
je
iret
mov
lods
popf
dec
inc
out
les
mov
xor
sub
pmaxsw
pop
mov
dec
lcall
lret
jns
push
orb
popa
addr16
xchg
sbb
hlt
rcll
das
imul
fwait
xchg
cmc
mov
test
inc
inc
dec
std
jecxz
aam
push
fstpl
daa
outsl
or
jae
lds
adc
aaa
popa
int
lock
sahf
test
push
rclb
mov
jl
fildl
inc
pop
mov
pop
lods
fs
push
jbe
lret
inc
push
jbe
push
jno
pop
out
push
inc
inc
je
negb
and
negb
ja
inc
js
idivb
and
cmp
ljmp
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
inc
jae
aam
out
js
jle
js
sbb
in
xchg
lea
pop
jmp
push
jg
cmp
xor
dec
loope
pop
daa
lret
mov
push
sti
mov
push
inc
xlat
lahf
sub
je
and
cmp
inc
and
adc
fcomip
cs
rcll
mov
cmp
or
mov
mov
jno
dec
dec
in
repnz
cmp
pop
roll
and
iret
loopne
cmp
sub
cmp
mov
dec
pop
aaa
in
or
xchg
push
sahf
icebp
jns
inc
pop
pushf
mull
shll
out
pusha
das
jl
cwtl
out
pop
std
and
stos
nop
subl
lret
dec
sbb
push
jecxz
loope
mov
push
shll
sbb
call
out
cmp
push
clc
orb
push
jecxz
sti
dec
orl
xor
call
adc
xor
lock
iret
jb
mov
inc
int
cld
js
gs
inc
int
scas
rorb
movsl
in
xchg
lods
add
push
stc
add
mov
dec
pushf
std
cmpsb
out
sbb
cmpsl
roll
or
mov
mov
jb
and
push
push
out
mull
lds
scas
flds
mov
sbb
cmp
jge
inc
adc
adc
pop
addr16
cmp
cmpsl
les
mov
push
cmp
pop
and
xor
cwtl
push
mov
cmp
decl
fcoms
sub
sub
in
test
pop
lret
or
push
lods
push
sbb
das
sbb
scas
dec
mov
sub
mov
jge
adc
pop
faddl
lock
jnp
jo
sub
pushf
pop
dec
arpl
js
adc
dec
cmpsb
in
decb
push
xchg
jg
or
into
sti
mov
aad
cmp
xor
adc
push
push
and
pop
arpl
cltd
mov
push
lods
mov
lahf
out
jmp
dec
imull
out
mov
push
xor
jns
daa
movsl
sub
inc
jno
out
fdivp
test
fucomip
jmp
icebp
mov
pop
xchg
xchg
addb
sub
sbb
orb
jno
jmp
out
push
xchg
cmpsb
test
push
dec
push
pop
pop
mov
addr16
jb
insb
or
test
jo
cmp
imul
lods
ficompl
sub
or
sub
cmp
pop
mov
pop
sub
pop
test
xchg
stos
dec
jnp
xlat
xor
mov
adc
mov
mov
in
out
lret
fcmovb
pop
mov
adc
loop
daa
insb
or
jecxz
or
mov
lret
adc
nop
stc
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
loopne
pop
cmp
js
cmpsl
jle
js
fstpt
mov
jbe
fs
xchg
mov
sub
repz
pop
adc
push
mov
inc
mov
call
cwtd
mov
int3
lret
sub
and
and
add
test
jae
enter
test
shrb
sbb
gs
out
je
lea
pop
jmp
call
mov
cmpsl
mov
fs
sbb
jo
lret
pop
pop
jb
roll
add
sbb
insl
mov
iret
jbe
and
aad
pop
jns
leave
lahf
mov
sub
inc
fstps
mov
ljmp
and
call
lods
cmp
sbb
lods
lcall
cwtl
pop
test
xor
mov
pop
nop
gs
sahf
clc
xlat
es
sbb
xor
push
pop
fisttpl
movb
aas
sub
int
stos
cmpsb
sub
lret
imul
enter
push
hlt
or
jbe
sbb
pop
lds
adc
sbb
mov
jae
and
loop
and
xor
scas
inc
dec
sbb
mov
sbb
add
adc
pop
lcall
add
pop
mov
out
test
movsl
sbb
add
sub
xchg
cmpsl
scas
in
or
pop
dec
jns
push
lods
sub
xchg
inc
adc
fimuls
inc
loop
out
iret
clc
push
add
fucomi
xor
cli
stc
and
jmp
xor
mov
xor
xor
mov
push
mov
jle
mov
aad
insb
mov
aas
pop
js
mov
outsl
leave
hlt
dec
jl
jmp
data16
nop
xchg
mov
dec
dec
pop
pop
cli
shl
arpl
sbb
add
sbb
cmp
aad
loop
sub
daa
xchg
add
push
lods
lret
dec
mov
lret
add
loopne
mov
ret
icebp
adc
mov
adc
ficomps
pop
inc
push
adcl
scas
lods
mov
sti
lods
loopne
pshufw
jb
lea
lods
jge
cmpsl
outsl
movl
out
loope
sbb
dec
clc
or
dec
lds
cmpsb
fdivrl
nop
movsl
mov
aad
mov
in
or
xchg
mov
push
push
or
dec
repz
push
adc
jge
ret
std
aam
mov
test
test
rclb
adc
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
ljmp
cmpsl
jle
js
pop
lock
subb
xchg
aam
adc
iret
inc
sbb
dec
sub
out
divl
mov
call
in
rcrb
pusha
shlb
pop
adc
scas
jne
pop
push
fdivrs
notl
and
jle
sbb
cwtl
dec
mov
icebp
dec
mov
jge
and
fwait
jge
xchg
sahf
push
cld
pop
push
std
cmp
jl
and
out
fstps
stos
movsl
mov
lods
pop
clc
daa
mov
push
out
faddl
aas
mov
jg
jne
int3
jne
lods
jl
mov
mov
loop
ret
mov
pushf
lock
xor
rol
pop
bound
adc
sub
mov
and
aam
push
mov
mov
jne
push
adc
inc
repnz
sub
in
dec
xchg
in
aad
push
pop
sahf
pop
inc
popa
cltd
pop
or
mov
adc
mov
sub
in
add
dec
gs
push
pop
jnp
sub
mov
or
pop
movsb
rol
ret
jg
push
add
loopne
add
or
mov
sbb
adc
sub
jno
mov
hlt
aaa
stos
inc
mov
push
scas
adc
add
mulb
lret
mov
pop
add
mov
or
push
lcall
int3
ljmp
repz
jge
das
xchg
push
mov
jne
not
ret
out
sbb
scas
sbb
int3
dec
cmp
cmp
scas
repz
push
pop
pop
pop
push
fisttpll
cli
inc
dec
int3
pop
cmp
icebp
stc
xorb
sbb
vmovdqu
lcall
sti
mov
daa
popa
push
mov
sbb
sahf
add
cwtl
lea
dec
jle
jmp
test
leave
mov
stos
test
aaa
add
and
ljmp
sar
mov
in
cmp
insb
cmp
xor
repnz
xlat
adcb
ss
adc
mov
pop
fimull
int3
lahf
pop
test
xchg
jg
es
or
lahf
ja
sub
mov
adc
mov
xor
add
sub
ds
les
pop
leave
neg
les
sub
jmp
fistpll
xlat
mov
andl
into
jo
loope
cmp
add
add
jne
jmp
lret
cmp
mov
les
mov
js
cmpsl
jle
js
iret
test
out
testl
pop
or
pop
push
xlat
mov
sbb
xor
sub
imul
lods
pop
dec
ret
push
and
xlat
mulps
xchg
dec
push
mov
sarb
cmp
and
mov
mov
insl
popf
push
and
in
out
push
push
sub
mov
cmc
jp
pop
inc
lock
pop
sub
push
fwait
outsb
adc
pop
in
xor
in
or
call
out
fnstsw
mov
sub
push
fists
lret
in
xor
jg
fidivs
add
jno
fbstp
ret
fildll
mov
jae
push
add
test
xchg
ret
test
cmpsl
sbb
mov
sub
hlt
loop
icebp
pop
sbb
aam
xor
pop
jo
inc
pop
ss
cmpb
cmpb
notb
call
shlb
rorb
dec
aaa
jno
rolb
and
mull
aaa
fmul
adc
jmp
push
xchg
int3
test
push
test
in
test
jge
push
inc
cs
enter
xorl
out
mov
xchg
inc
addb
inc
aas
mov
and
dec
mov
adc
cltd
test
out
jmp
mov
push
test
sbbb
jl
jbe
pusha
sbb
in
or
bound
sub
sbb
cld
out
cmp
xor
xlat
pop
rcr
inc
test
push
push
iret
fsubs
test
je
lods
jmp
insl
out
movsb
jecxz
movsb
icebp
xor
pop
adc
xchg
gs
lret
sbb
ret
cli
mov
mov
mov
push
stc
xor
xchg
les
add
adcb
stc
mov
adc
pop
fidivrs
add
arpl
in
es
repz
bound
into
cmc
inc
or
dec
mov
jg
xor
dec
fidivl
dec
icebp
test
fisubrl
repz
or
int
shlb
out
and
xchg
or
adc
outsl
std
pop
xor
dec
jno
test
inc
cmp
mov
inc
sti
mov
push
mov
mov
call
cmp
out
pop
xor
and
mov
popf
pop
ja
in
mov
fwait
ja
outsl
cmpl
in
mov
loope
dec
mov
divl
shlb
movsl
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
add
js
jle
js
ret
addr16
pushf
sbb
push
xor
loope
sub
jae
xchg
adc
push
popa
stos
xchg
pshufw
insb
jns
leave
mov
stos
in
cmp
test
iret
repz
dec
dec
js
push
mov
mov
stc
sahf
scas
push
es
movzbl
pop
movlhps
fistpll
ud1
add
jp
jo
mov
mov
sbb
std
shlb
push
push
out
cmc
lahf
nop
add
mov
or
movsl
ljmp
ds
lcall
out
adc
rclb
xchg
in
and
cmp
fsubrl
enter
and
imul
aam
mov
mov
or
jns
mov
in
mov
mov
or
dec
mov
cld
out
push
push
cmp
lcall
mov
or
out
sub
cltd
popl
fwait
push
dec
fwait
aas
mov
popf
inc
jmp
stc
push
xchg
popa
out
pushf
mov
cwtl
fnstcw
or
neg
repz
add
xchg
inc
dec
dec
push
jmp
out
jmp
clc
dec
pop
jbe
pop
cmp
mov
dec
les
mov
mov
xchg
push
shlb
sbb
dec
nop
push
mov
mov
je
fimuls
movsb
ja
aam
sahf
and
push
insb
out
pop
cmp
nop
shlb
arpl
cmp
scas
dec
ret
push
shll
enter
inc
or
cmovb
out
daa
movsb
call
nop
aad
mov
push
repz
jae
mov
mov
aaa
cmp
mov
mov
ret
pushf
dec
sub
addb
mov
add
push
push
insb
or
in
mov
movsl
fcmovnu
in
bound
out
push
push
cmpsl
jb
psrlq
push
fdivp
mov
xchg
mov
mov
in
or
jno
push
dec
jge
adc
cmp
mov
insl
cmp
fisubs
push
lds
and
ret
push
ja
cli
fidivrs
in
stc
xchg
inc
push
mov
mov
xchg
out
cmpb
mov
xchg
push
imul
dec
push
push
fwait
jmp
sub
xchg
inc
movsb
mov
outsb
push
xchg
jne
in
dec
or
mov
mov
outsb
sti
adc
xchg
or
loop
lods
and
mov
aad
cmp
cmc
test
iret
jl
sbb
cmc
cld
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
stc
repnz
js
jle
js
int
inc
push
out
add
test
lahf
mov
gs
pop
or
iret
stos
loope
pop
pop
rep
xchg
pop
adc
shrb
in
or
dec
adc
js
pop
fistps
push
jnp
cwtl
idivl
mov
js
inc
push
addr16
adc
and
cmpsb
cmpsl
and
nop
dec
inc
outsl
add
insl
push
lret
sbb
jecxz
and
lcall
fldt
ret
sub
andl
mov
mov
lret
adc
sbbb
adc
pop
cmp
loope
mov
or
push
pop
or
sbb
push
sbb
pop
mov
insb
sub
dec
in
pop
push
jmp
xor
push
xlat
in
push
dec
aas
sti
cmp
dec
push
test
inc
lahf
in
or
dec
mov
popa
xchg
repz
cli
and
or
xchg
push
cmp
mov
lods
or
movlhps
cwtl
aam
and
xchg
gs
test
push
push
loop
pusha
cltd
mov
ret
adc
or
je
mov
sbb
add
jg
and
xchg
dec
lret
into
rcl
scas
push
and
push
movsl
xor
cmpsb
scas
in
adc
scas
rcrl
cmp
call
ljmp
jno,pn
sbbl
dec
inc
test
inc
call
add
mov
inc
out
js
mov
inc
xchg
testl
test
dec
movsb
lock
mov
push
pop
mov
addl
in
xor
mov
or
fs
push
std
addl
or
push
jp
push
loop
in
and
dec
and
stc
fwait
negl
cli
in
sti
mov
into
loope
cmpsb
add
sub
mov
pop
mov
adc
mov
divb
cltd
lret
or
xor
lods
std
push
icebp
push
push
jp
cmp
stos
push
insl
push
fs
inc
fcompl
int
jae
cs
sbb
adc
sahf
orl
fwait
add
mov
fistl
nop
cli
cli
jmp
outsl
andl
lcall
pop
movsb
pop
xor
popf
lds
xor
pop
inc
clc
mov
int
orb
fs
inc
push
push
pop
push
jl
sub
mov
pop
sbb
dec
and
dec
ret
mov
faddl
stos
xor
inc
lock
pop
dec
int3
xchg
rcll
push
lods
fcmovnbe
cmp
pop
sbb
int3
sub
dec
xor
add
aam
lret
mov
mov
mov
adcb
push
pop
cmp
scas
lock
or
test
add
lahf
cld
mov
test
add
dec
add
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
ljmp
push
jle
js
and
stos
lock
movsb
adc
rcl
nop
jae
iret
int
mov
mov
mov
push
aad
or
push
jg,pn
pusha
mov
out
push
popf
pop
cmpsl
push
pop
ds
ficoms
push
mov
xchg
popa
jl
add
outsl
sub
jmp
pop
push
cmp
sti
pop
or
out
mov
inc
xor
mov
sbb
testb
movsl
insb
xchg
sti
mov
das
test
push
out
jg
pop
adc
pop
mov
xchg
stos
xchg
cmpsl
pop
lcall
mov
enter
adc
adc
cwtl
sub
push
pop
inc
scas
testl
cld
pop
push
cmp
pop
test
ret
cmp
push
cmpsl
lret
push
sarb
mov
and
mov
jecxz
fcmovne
aas
lock
call
lret
push
es
loope
nop
and
pop
push
movsl
mov
mov
decl
push
icebp
insb
push
jle
xor
jge
ljmp
aaa
xchg
adc
das
push
test
adc
lea
push
imul
adc
out
sub
fwait
jne
mov
jmp
aaa
push
sub
adcl
inc
cmc
jb
cmp
rcl
sbb
sub
add
cmpsb
push
into
mov
jg
mov
jle
fbstp
xchg
adc
in
addr16
mov
dec
jmp
mov
outsb
nop
mov
push
out
add
mov
aam
sbb
mov
mov
jl
or
lods
in
xchg
and
aam
js
fwait
js
lret
pop
lods
into
or
pop
or
pusha
cmpl
int3
scas
jge
jno
jns
mov
sahf
imul
xor
hlt
fs
xor
pushf
dec
gs
shll
lret
ljmp
cmp
sub
insb
sub
loop
or
sbb
fistpl
xchg
inc
mov
push
mov
or
add
shrl
loope
mov
hlt
aaa
jb
mov
jecxz
lds
loop
roll
loope
in
add
out
adc
add
fs
push
cmp
adc
sbb
cmp
push
mov
jge
inc
int3
mov
ret
xlat
add
fcoml
xlat
xchg
mov
cs
pop
adc
loope
pusha
cmp
mov
dec
sahf
mov
stos
hlt
ret
fs
jae
mov
sbb
jmp
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
stos
out
inc
jmp
dec
inc
jp
sarl
callw
push
icebp
mov
ret
and
add
and
or
push
in
negb
and
in
fsubrp
daa
adc
pushf
xor
mov
mov
ss
xor
mov
xor
pop
rcl
loop
pop
enter
ss
or
fs
in
rcrl
lods
outsb
popf
inc
lahf
je
jecxz
cmpsl
xchg
pop
add
push
inc
inc
adc
outsb
sbb
xor
cmp
jo
daa
push
xchg
or
inc
or
aad
adc
xchg
adc
cwtl
mov
jmp
mov
ds
push
jnp
imulb
imul
dec
into
test
jecxz
or
xchg
cwtl
pop
mov
cmp
repnz
sbb
shrl
pop
and
pop
adcl
and
incl
adc
cwtl
sbb
ljmp
jge
sub
push
frstor
out
mov
mov
and
inc
inc
sub
xchg
jb
add
mov
pusha
mov
mov
pop
mov
add
sub
test
gs
popf
out
daa
cmp
sbb
sbb
roll
in
lds
dec
mov
shl
test
lahf
jo
cmp
sub
push
lea
push
loop
or
nop
mov
lock
outsl
addr16
adc
icebp
pop
xchg
jne
dec
into
int
mov
inc
sbb
test
cmp
lret
cmp
iret
int3
mov
in
mov
bound
imul
cbtw
mov
je
push
push
ljmp
fcmovnbe
xorb
mov
jle
ret
mov
lock
jne
xchg
addr16
add
movb
mov
dec
sub
pop
loope
movl
and
loop
xchg
rcl
pop
ds
mov
in
xor
jo
dec
jp
ficomps
mov
or
mov
jo
adc
insb
cmpsb
jae
cli
pushf
outsb
and
vmptrld
sub
mov
pop
testl
jecxz
outsl
push
js
addl
aaa
ret
sbb
add
popa
cld
les
mov
push
mov
icebp
mov
aaa
push
movb
lds
cld
dec
mov
movsb
push
in
ret
pop
ja
test
lret
cs
test
jns
xorl
xor
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
lcall
jle
js
dec
sub
pop
and
mov
insl
push
inc
clc
and
lret
lahf
fisttps
push
push
or
insb
mov
or
loopne
loope
fisttpl
fwait
and
inc
mov
xor
int
cmpsb
jns
fistps
test
inc
lret
les
call
fisttps
sahf
negb
sbb
add
imul
add
aaa
and
xchg
aam
mov
stc
push
bnd
dec
imul
pop
out
ljmp
shl
in
mov
imulb
inc
xlat
shlb
sbb
inc
into
adc
push
imul
icebp
cli
push
sbb
or
and
jb
jne
jle
outsl
std
lret
push
push
and
dec
dec
aaa
push
dec
cld
mov
mov
mov
pop
test
push
movl
lret
addl
hlt
test
xchg
out
cmovle
dec
adcl
hlt
xor
cmpb
pop
mov
push
ja
pop
push
lret
xchg
and
gs
cmp
je
push
icebp
dec
ficoml
jmp
inc
sub
ss
mov
cmpsl
pop
fsubl
xchg
rclb
push
adc
gs
inc
enter
mov
std
lds
mov
loop
insl
xchg
xlat
out
or
outsl
mov
stos
cld
cmp
cltd
rorb
lea
or
fwait
pop
aad
lods
add
dec
pop
inc
movsb
imul
pop
sbb
pop
stc
and
jmp
cmp
xor
mov
inc
cltd
iret
int3
gs
ljmp
scas
data16
lcall
sub
fdiv
adc
test
cmc
cmp
fs
in
push
add
popf
js
pushf
in
xor
js
sbb
lods
mov
outsb
xchg
scas
inc
out
popa
test
aas
fidivrs
xchg
call
iret
xchg
xor
adc
shlb
adc
mov
adc
or
loopne
iret
jnp
pop
adc
xchg
aaa
iret
cmpsb
xchg
lods
push
xchg
add
in
add
add
cmc
push
test
and
or
push
imul
js
std
cmp
adc
adc
or
ret
or
mov
push
jle
jge
out
loope
xor
dec
inc
loope
or
mov
aad
movb
js
addb
xchg
sbb
popaw
stos
pop
dec
sub
out
ret
ffreep
jg
in
dec
fwait
lcall
add
cmp
loop
mov
repnz
divb
jnp
adc
jno
mov
gs
jl
xor
lahf
mov
loopne
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
dec
pop
lcall
js
pop
xchg
stos
fcomps
and
cltd
sub
test
sbb
arpl
sbb
lods
lret
lret
mov
scas
jp
inc
cmp
bound
ljmp
shll
dec
xor
mov
sbb
or
jne
mov
out
push
push
xlat
lret
add
cld
add
xor
jo
out
push
and
dec
stos
mov
inc
out
adc
bound
dec
xchg
repnz
daa
push
push
adc
out
and
aad
mov
mov
mov
insb
push
aad
mov
dec
rcll
lock
mov
mov
adc
inc
testb
add
invd
out
sub
cmp
popf
dec
in
xchg
xlat
ret
fistpll
inc
dec
sub
jecxz
incl
lock
sarl
les
xchg
test
mov
sbb
ss
mov
loop
ret
add
mov
mov
outsb
jge
mov
rol
push
rolb
and
push
mov
push
inc
mov
push
aam
fsubrl
icebp
push
jle
mov
mov
adc
cltd
test
jbe
mov
fdiv
add
mov
js
jns
sbb
andl
insb
mov
jg
pusha
sub
pop
mov
cwtl
fwait
mov
mov
int3
addl
mov
xchg
call
xchg
leave
pop
mov
jb
mov
testb
pusha
and
push
mov
mov
add
cltd
jp
xor
sub
fs
jo
inc
rorl
adc
mov
rolb
jns
add
mov
pop
adc
cmp
cltd
add
mov
xor
aam
mov
test
adc
jno
decb
mov
sti
pusha
pop
or
sub
in
lahf
shrl
sbb
xchg
xor
pop
fucomi
add
into
push
aas
cmpsb
jae
mov
fucomi
jg
ret
dec
fnstcw
cs
push
daa
jmp
std
pusha
xor
ss
adc
dec
add
mov
adc
inc
mov
cltd
test
jecxz
xchg
out
lods
push
mov
lcall
and
popf
pop
or
and
push
movl
pop
int
stos
pop
mov
mov
clc
mov
pop
shlb
ficomps
inc
jnp
je
sahf
push
mov
stc
jl
lret
inc
repz
imul
or
rcl
mov
xchg
das
stc
cmp
rolb
ret
xchg
or
xor
imul
cmc
outsb
fidivrs
push
jmp
cmpsl
ss
inc
push
mov
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
leave
push
cmpl
jle
js
push
xchg
dec
loop
jb
xchg
push
push
and
mov
pop
in
sbb
pushf
enter
sub
xchg
nop
add
mov
orl
ljmp
mov
sbb
in
lret
fsts
dec
and
inc
imulb
fnstcw
int3
mov
xchg
icebp
mov
addb
mov
stc
inc
les
imul
es
cmpsl
sub
and
mov
filds
pop
adc
or
pop
mov
test
icebp
push
and
int3
rcrl
mov
test
cld
dec
xor
mov
ficoml
xor
mov
psubq
cld
and
jb
jbe
loop
cwtl
ds
cmpsl
fldt
pop
mov
mov
mov
mov
mov
add
pusha
xchg
dec
cmp
dec
push
imul
jmp
lcall
ja
pop
sarb
lds
add
andl
push
pop
fwait
ja
pop
xchg
xchg
adcb
movsb
jno
mov
aam
cltd
mov
mov
cmp
cli
and
insb
add
push
jmp
xchg
mull
pop
inc
shlb
fldt
adc
inc
out
jae
clc
stos
test
sarl
cs
add
decl
fistpll
lahf
push
cmp
sub
or
mov
and
xor
cmpsl
cs
test
adc
das
movsl
adc
mov
js
add
outsl
leave
or
je
cmp
sub
mov
jae
call
out
mov
cmpsb
jmp
mov
sub
jmp
testb
mov
push
in
fisubrl
icebp
push
loope
xchg
or
mov
or
dec
out
cmp
cwtl
jnp
mov
mov
shrb
cltd
loope,pt
mov
ss
stos
enter
cmp
xchg
orl
mov
addl
outsb
icebp
std
lahf
jo
mov
xchg
mov
mov
push
or
mov
insl
and
outsl
or
test
add
call
cwtl
xchg
jmp
movsb
imul
in
fbld
mov
or
add
adc
jl
jp
stc
rcrl
lgs
jno
add
inc
aam
push
xor
xorl
pop
cmp
sbb
mov
out
inc
lds
je
and
mov
push
xor
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
cvtps2pi
js
je
js
in
pop
ret
sub
sub
pop
dec
push
clc
sbb
jno
std
testl
xchg
and
sub
sbbb
dec
push
loop
pop
sbb
sub
cmpsl
sbb
sarb
cmp
sbb
or
and
ja
je
repz
iret
mov
jle
cwtl
ds
cmc
push
xor
lea
jb
adc
in
and
lods
scas
fidivrs
popa
int
push
cmpsb
por
popf
cmpsl
and
lret
pop
sbb
inc
aam
fsubl
jge
dec
cmp
dec
in
mov
push
aam
pop
loop
mov
and
test
scas
jbe
cmp
push
xchg
ds
fld
stos
jne
dec
stos
mov
mov
or
shr
insb
sar
mov
lock
jl
or
ljmp
or
xchg
enter
out
outsb
cltd
mov
jecxz
and
in
mov
stc
addl
icebp
sbb
mov
enter
mov
or
lods
cli
jb
ret
in
and
sarb
test
jl
test
arpl
and
jle
pop
out
cmp
sub
jns
loop
cmp
cmp
sbb
push
jg
pushf
sub
gs
test
sbb
js
pop
inc
sub
xchg
add
pop
sbb
push
adc
push
fwait
sub
in
sub
in
call
adc
xor
out
pop
jno
and
pop
mov
imul
mov
stos
lret
mov
inc
lret
cmp
cmc
ror
gs
dec
push
int
add
jg
push
xor
push
subl
or
into
aam
or
aam
adc
xor
push
idiv
adc
stos
add
cltd
xor
cmp
add
jg
movsb
push
aaa
sub
int3
xchg
xchg
pop
jbe
sbb
mov
int3
sub
fidivs
int
pusha
repz
xor
hlt
cmp
push
aas
sbb
mov
seta
ret
popf
xlat
lods
fs
push
out
jp
je
mov
popa
test
cmp
xchg
push
push
ret
xchg
dec
pop
add
ja
cmp
jbe
pop
sbb
es
stos
ret
mov
rorl
imulb
addl
fistps
ret
jge
xor
les
pop
in
loopne
clc
push
cs
pop
push
cmp
fimuls
in
vmovsldup
add
ret
loopne
pop
dec
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
test
test
rolb
js
adc
mov
push
enter
repz
mov
in
add
pop
mov
mov
imul
or
aaa
shl
xor
orl
mov
mov
sarl
mov
pop
cmp
sahf
divb
js
jg
dec
test
sbb
mov
pause
mov
dec
dec
or
ljmp
push
stc
int
push
push
fisubrl
sahf
arpl
pop
fnstcw
mov
mov
imul
push
jbe
pop
adc
nop
sub
repz
lock
pop
add
xor
sub
int3
mov
repz
pop
outsb
cmp
sbb
out
enter
shll
sub
fldz
mov
fimuls
std
cmp
outsb
fsubl
mov
xchg
sbb
and
cmp
jle
loop
jno
lret
inc
mov
stos
xchg
add
popf
inc
mov
mov
into
lret
pop
jle
shl
stos
dec
inc
imul
xchg
xchg
cmc
lret
into
nop
adc
gs
inc
xchg
outsl
mov
dec
or
inc
mov
fildl
mov
aad
cmp
pop
fildl
and
ds
ret
mov
cmp
push
or
repz
push
aas
popa
push
or
or
mov
cmp
or
jno
sub
xchg
lcall
jne
xor
shr
xchg
andl
and
pop
add
ret
add
std
pop
cmpsb
scas
out
addb
int3
sti
sahf
or
push
xchg
addr16
lret
xchg
out
mov
dec
mov
in
dec
xor
aas
push
push
mov
or
dec
xlat
jne
div
xor
cmpl
xchg
push
cwtl
stos
enter
and
int3
inc
into
dec
mov
push
mov
sub
cltd
andb
lcall
cmpl
test
mov
out
cmp
pusha
icebp
mov
xor
pop
das
push
loopne
push
jnp
jno
test
pop
fwait
inc
and
aad
mov
adc
jl
les
xor
mov
dec
push
rolb
out
movsb
inc
sbb
cmp
lds
inc
mov
dec
xor
pop
adc
mov
adc
xor
les
pop
mov
fcmovu
mov
cmc
repnz
mov
enter
leave
popa
inc
xchg
das
imul
xchg
ret
mov
xchg
adc
sbb
jns
loopne
rcrb
mov
mov
add
or
addr16
mov
fs
jb
fiadds
imul
mov
mov
jbe
xchg
sub
add
add
rol
fcmove
rcl
pop
mov
js
into
mov
je
js
or
out
imul
inc
les
mov
cmpsb
mov
rcl
imul
push
inc
xchg
xchg
cmp
imul
lea
cmp
cmp
test
dec
outsl
std
mov
popf
cmp
or
shll
insl
sbb
cltd
andl
xchg
stos
push
out
imul
xchg
pop
mov
test
shll
testl
lcall
sbb
mov
xor
dec
add
sub
lods
and
out
call
stc
subb
xchg
movb
pop
pop
test
movsl
jns
movsb
mov
xchg
xchg
stos
je
xor
and
pop
cmp
jp
or
movntq
out
add
inc
not
push
mov
adc
pop
mov
mov
fmull
jns
insl
mov
adc
nop
dec
scas
jae
mov
lea
pop
leave
push
pusha
mov
and
inc
inc
and
sub
sub
dec
js
pop
cmp
loopne
fs
and
inc
loope
cmp
dec
cmp
jmp
pop
iret
sarl
sub
dec
divb
jo
movsb
push
ds
mov
inc
mov
xchg
fs
jl
sub
fisttpl
mov
outsb
repz
lret
loopne
test
iret
scas
xchg
jnp
dec
mov
aaa
imul
je
add
jg
scas
inc
jmp
mov
adc
imul
add
push
das
mov
call
inc
into
lcall
shll
aam
xchg
pop
aas
jge
js
std
imul
int
mov
xor
test
dec
cmp
and
jne
cmc
sbb
popf
cmp
mov
cmpsb
inc
shll
orb
adc
mov
je
aaa
mov
mov
dec
mov
cltd
push
in
fdivl
pop
xchg
mov
cltd
jmp
lahf
adc
fdivs
testl
push
sahf
push
or
lret
xor
fs
outsb
xchg
orl
mov
jp
imul
or
jle
fdivrp
ret
dec
or
loopne
loope
out
xor
femms
jmp
daa
mov
in
sbb
inc
lods
jmp
xor
push
cli
mov
in
xor
je
adc
push
aas
orb
xchg
aam
cld
pop
roll
movsb
xor
jo
lahf
imul
add
mov
mov
lahf
xorl
aaa
xchg
mov
lds
inc
in
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
ljmp
je
js
out
mov
stos
rcrl
or
sub
out
sub
push
data16
xchg
fisubrl
aaa
imul
pop
jmp
cmp
jns
into
add
rclb
arpl
flds
scas
add
inc
lock
cmp
jnp
repnz
sbb
pop
mov
pop
cmp
leave
loope
xchg
ret
xchg
xlat
xchg
stos
lret
popa
aam
pop
cld
cmp
sbb
shll
mov
lods
inc
xchg
aam
mov
fmull
popa
cmp
add
dec
rorb
out
push
pop
mov
xor
fisttps
add
inc
and
pop
pop
sbb
inc
cs
push
sbb
inc
scas
adc
pushf
daa
scas
jno
dec
stos
mov
divb
sub
xor
dec
jbe
mov
dec
mov
dec
and
cmp
or
sahf
push
pop
int3
pop
sbb
shll
mov
sbb
js
and
xor
std
pop
adc
inc
dec
lds
sbb
push
mov
icebp
and
jne
fisubrl
mov
jae
pop
mov
icebp
insw
stos
add
mov
les
mov
cvtdq2ps
push
in
je
mov
addr16
xor
movsl
stos
imul
push
dec
fldcw
mov
sahf
or
cmp
imul
xchg
popa
cld
loopne
clc
pusha
mov
aaa
pcmpgtb
adc
cmp
mov
adc
mov
pop
cli
cmp
push
xchg
shl
cli
xor
lcall
pop
pop
xor
insl
fsubr
mov
push
scas
add
movl
shl
out
lcall
mov
int3
dec
adc
mov
es
xchg
mov
add
aad
jle,pn
xlat
adc
jmp
movsl
xor
or
jnp
xor
repz
outsl
hlt
test
cmp
lods
pop
cmp
mov
xor
sti
push
push
out
lds
das
mov
pop
jg
cwtl
fstpl
cld
mov
fs
leave
push
pop
pop
hlt
in
or
adcb
or
icebp
hlt
push
or
std
and
xor
cmc
jns
loopne
jg,pn
or
out
push
push
add
cmpsb
lock
aad
push
xchg
sbb
pusha
pop
int3
sub
cmp
popf
mull
and
dec
cmp
hlt
jp
faddl
jge
pop
and
subl
mov
mov
ljmp
popf
cld
cmp
negl
gs
push
mov
jno
jbe
mov
iret
std
insb
pop
jl
cmp
fld
xchg
sbb
fsts
test
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rorl
mov
je
js
out
jmp
jecxz
aad
jecxz
lret
jge
hlt
add
roll
in
add
inc
pop
fdivs
ljmp
cltd
xchg
out
out
push
popa
push
mov
xchg
cli
sar
pop
push
mov
xchg
mov
out
lock
test
int
pop
inc
jl
mov
and
adc
fnstsw
push
stos
or
data16
fdivl
hlt
andl
in
and
push
jnp
adc
xor
movsl
ret
jge
fists
cld
in
jns
or
push
cmp
int
jmp
mov
inc
scas
jmp
sub
lock
pop
adc
dec
inc
int3
cltd
xorb
sarl
call
pop
inc
imul
push
push
inc
fsubr
mov
jl
fadds
add
aad
and
aaa
call
mov
es
and
push
jmp
jae
dec
mov
dec
jb
jl
mov
ljmp
dec
jno
call
adc
data16
dec
sub
ret
ret
jmp
enter
jnp
call
push
inc
inc
gs
popf
iret
inc
ljmp
stc
jne
push
pop
and
inc
inc
xor
push
inc
test
or
repz
lds
fs
or
adc
mov
je
ret
xor
stc
faddl
test
cld
fistps
repz
aam
xor
adc
xchg
pop
daa
xchg
adc
sarl
add
pop
jo
mov
jns
outsb
mov
sub
aam
std
lock
or
rcrb
inc
pop
in
sbb
jae
leave
jno
sub
pop
or
push
addr16
js
movsb
jae
adc
pusha
or
out
fnstsw
rol
mov
enter
jae
in
lds
or
popa
dec
out
dec
aad
mov
in
jle
jno
loope
ret
mov
sub
mov
mov
cs
inc
stos
cld
jb
hlt
push
insb
mov
mov
pop
pop
add
push
int
mov
pop
sbb
and
sub
sub
in
pop
mov
das
outsb
dec
inc
out
in
fmull
out
clc
push
shll
add
xor
jecxz
mov
mov
dec
mov
jne
call
jge,pn
and
mov
adc
sarb
mov
push
je
mov
xchg
add
xchg
test
xchg
cltd
loop
shll
sarl
push
adc
lock
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
inc
xchg
jb
xchg
js
je
js
and
jno
data16
jmp
mov
sub
xchg
aas
push
xchg
sahf
jl
insl
xor
push
out
popf
sub
fbld
out
jbe
mov
cs
imul
test
sbb
lret
cmpb
cmpsb
mov
scas
cmpl
hlt
or
lock
cmp
adc
pop
jne
mov
pop
push
xchg
rcrb
movsb
int3
mov
cmpsb
xchg
mov
ja
cli
jns
cmp
jo
mov
mov
cltd
out
xor
in
aam
mov
fildll
cmpsb
mov
adc
outsl
lods
ljmp
add
xor
sti
mov
jae
scas
lcall
pop
jecxz
test
lds
mov
insl
outsl
icebp
mov
cmpsl
pop
mov
lret
stos
outsb
dec
add
ss
push
pop
loopne
jbe
test
fldt
fisttpl
cmpsl
jbe
popf
aam
fldenv
fnstcw
adc
ss
pop
add
xchg
out
xchg
jb
jo
sbb
and
sub
cmpsb
rcrl
nop
mov
cs
sub
push
rcrb
cltd
dec
or
in
inc
and
int3
nop
xchg
mov
dec
cltd
shll
inc
add
aad
adcb
jo
das
and
daa
cltd
mov
cltd
je
pop
sbb
scas
xor
hlt
adc
aad
cs
loopne
mov
xor
rclb
jp
cli
or
cmp
or
js
incb
lea
pop
mov
loopne
repz
or
pop
mov
cmpsb
mov
ljmp
inc
mov
mov
dec
jmp
push
dec
push
insl
xchg
xchg
add
sti
cmp
jle
sti
push
xchg
cmc
cwtl
imul
mov
mov
js
jno
pop
pop
repnz
outsl
dec
jno
aad
outsb
or
sub
jge
cmpsl
int
mov
sbbb
cmp
cmp
sbb
aad
in
icebp
scas
dec
pushf
mov
insl
in
addr16
sar
jecxz
xchg
xchg
pop
andl
loop
ja
test
push
clc
out
lret
loop
shrl
dec
mov
gs
lret
inc
mov
jb
lahf
cmp
xor
mov
xchg
les
cmp
adc
or
mov
lods
jne
add
add
lds
data16
orl
jmp
loope
fisttpl
pop
inc
aaa
repz
push
rcrl
pop
dec
lcall
test
test
or
imul
jne
fsubp
nop
jb
mov
and
sbb
jbe
cld
sbb
cmpsl
std
jns
gs
mov
or
add
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
imul
ds
js
je
js
aas
in
into
or
loop
xchg
sahf
mov
aaa
xchg
lcall
push
or
inc
shlb
data16
xor
mov
pop
and
xchg
mov
mov
or
rorb
out
movb
mov
in
add
jns
sbbl
inc
mov
lcall
push
lret
xchg
mov
cltd
add
mov
adc
mov
push
je
test
inc
jb
and
insl
jle
aas
lods
cmpsl
movsl
aaa
imul
xchg
repz
push
jne
unpckhps
push
ds
ljmp
cwtl
xchg
outsb
gs
xchg
movsb
cmc
orl
add
inc
mov
icebp
inc
cwtl
rcll
in
daa
loopne
ds
scas
push
fcomip
aam
jl
adc
negl
add
sbb
hlt
adc
add
dec
sub
and
sub
roll
pop
repz
xchg
shl
push
neg
stos
popa
pop
jle
jno
jmp
stc
jle
aaa
call
mov
sbb
fdivrl
push
int
fdivrl
ja
add
enter
sbb
int
adc
mov
cld
arpl
pop
out
sbb
shrb
repz
pop
mov
call
xor
ja
jno
and
test
or
arpl
or
imul
das
adc
fcomi
jecxz,pt
rcrb
int
xchg
inc
or
int
add
stc
out
mov
jbe
call
rcrb
xchg
inc
sbbl
iret
in
jns
sarl
sub
out
adc
ljmp
les
das
sub
pop
neg
fnstcw
mov
fistps
xchg
jl
mov
mov
aaa
cmpsl
mov
cli
aad
dec
test
adc
ficompl
inc
and
pop
cmp
shlb
fildll
sub
push
mov
push
lock
pusha
add
aad
xor
cmp
jle
sbb
pop
in
nop
sub
lret
shll
ret
xorb
jge
inc
loopne
out
mov
ret
mov
push
jp
adc
mov
fmull
sbb
pop
das
aaa
sbbl
fldenv
pop
mov
xor
das
out
sub
std
rclb
jp
xor
fdivl
dec
cmp
ds
xor
pop
mov
fiaddl
jnp,pn
mov
lret
xlat
or
testb
out
mov
push
iret
scas
xor
in
xchg
lds
xor
int
sbbb
js
adc
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
js
xchg
cmp
js
les
cmp
cmpb
xchg
js
inc
andb
cmp
xor
and
sbb
sbb
into
je
jb
adcb
lcall
loopne
fs
mov
jnp
sub
xchg
pop
dec
cmpsb
sbb
arpl
dec
cld
push
xor
push
and
pop
jle
mov
dec
fwait
jne
and
js
cs
fcoml
sbb
jle
sbb
pop
push
ja
data16
pop
and
dec
dec
out
mov
sub
push
sub
mov
xlat
jmp
mov
hlt
arpl
bnd
rcrl
xor
push
push
jmp
pop
rcl
flds
mov
mov
icebp
or
dec
insl
ficomps
mov
lds
dec
rorl
insl
jno
aam
test
mov
test
std
in
ljmp
pushl
sarb
test
out
cmp
inc
in
cmp
inc
mov
sub
addr16
loop
jg
cmp
js
add
ds
loopne
movsl
mov
mov
int3
sub
push
imul
in
inc
push
imull
fnstsw
jg
dec
lcall
mov
lock
movsl
mov
push
adc
vpsrlq
mov
std
cld
jmp
and
adc
lods
pop
cmp
dec
add
testb
mov
test
cltd
push
cwtl
lcall
push
push
dec
int
inc
mov
dec
xchg
leave
shll
test
aad
icebp
movsb
repnz
jg
pop
and
mov
in
dec
scas
inc
dec
push
shll
or
bound
cmp
je
frstor
xchg
pop
add
into
imul
daa
rolb
pop
and
add
inc
add
dec
into
pop
adc
sbb
inc
jne
das
push
dec
rclb
inc
ret
jns
sbb
dec
orl
add
or
cmp
add
or
push
cmc
mov
inc
jp
push
idivl
cmp
sahf
cs
sbb
std
and
cmp
jle
lods
push
sub
test
push
pop
imul
sbb
leave
shll
idivl
sahf
lret
ljmp
fimull
fs
and
xchg
shrb
gs
stos
sti
loope
inc
and
xchg
mov
xor
stos
in
fstpt
movsb
fwait
xor
cli
cmc
cmp
xor
out
jg
jle
sub
cvtpi2ps
xchg
imul
test
push
jae
js
sub
das
push
push
and
mov
nop
mov
xchg
mov
scas
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
mov
scas
ss
js
je
js
xchg
xchg
jge
push
or
pop
and
xor
push
insl
push
mov
cmp
dec
sub
jns
in
jns
mov
sbb
cmp
cltd
sub
fs
adc
inc
cltd
xor
xchg
mov
lock
pushf
fnsave
jecxz
pop
leave
or
adc
cmp
or
cmp
cmp
xchg
add
push
leave
aas
iret
xchg
stos
sbb
cmpsl
cmp
mov
xchg
adc
mov
fidivl
sbb
push
mov
out
mov
xor
popa
pop
and
in
outsl
imul
mov
out
add
bound
sub
adc
adc
repnz
je
lret
dec
psubusb
out
sub
mov
dec
pushf
sub
mov
incb
je
test
js
fsubs
xchg
repz
sbb
sub
rolb
jmp
in
push
mov
sahf
out
pop
ret
push
lods
cmp
ret
popf
mov
adc
enter
sub
xchg
mov
jne
xchg
fisubrs
insl
repnz
jl
sbb
out
ret
mov
jno
jmp
sbb
fwait
jb
mov
push
scas
jb
in
insl
xchg
movsl
fcomip
add
je
sbb
in
ss
in
sub
cmp
out
and
sets
push
jg
loop
xchg
jb
sbb
cmc
xchg
out
fistpll
shl
sbb
mov
call
mov
and
cmp
cmp
pop
roll
js
inc
mov
push
cld
test
sub
sbb
mov
fdivrl
push
cmpsl
test
sbb
cli
xchg
push
lcall
inc
out
orl
repnz
jge
faddl
sbb
sbb
aas
bound
fabs
daa
cmpb
mov
outsb
outsl
iret
sbb
lds
cwtl
ljmp
inc
adc
lea
cmp
popa
fstpl
inc
pop
lds
xchg
inc
cmp
pop
adc
pop
mov
pushw
ja
sti
xor
or
imul
or
rcrl
icebp
data16
jge
iret
dec
mov
loope
push
lret
adc
cmp
loope
hlt
mov
ficomps
enter
add
or
outsb
mov
pop
fisttpl
insl
inc
xlat
je
xchg
insl
dec
lods
jl
cld
dec
xlat
adc
or
jo
cmp
addr16
ja
xchg
cmp
cmp
push
gs
jge
jo
int
sub
jmp
pop
rcrb
dec
rcrb
popf
sar
pop
and
sbb
dec
movsb
js
jp
or
pop
fidivs
mov
outsb
lcall
cwtl
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
or
xor
js
xor
les
dec
adc
fisubrs
lods
pop
aas
mov
sbb
sbb
jl
mov
lahf
loopne
imul
repnz
scas
or
sub
js
hlt
ret
movsl
mov
sub
icebp
xlat
or
mov
cmp
movsb
loop
mov
out
push
cmp
lahf
decl
mov
fcmovbe
ljmp
xchg
stc
popa
subl
mov
add
out
lahf
in
push
aaa
inc
cs
imul
in
fsubrp
ja
xorl
sub
addb
jb
sub
jns
pusha
ret
scas
data16
bound
or
mov
adc
sub
push
dec
int
loope
mov
pop
rcrl
stos
shll
cs
divl
negl
push
lods
xchg
xor
inc
sahf
out
jb
dec
and
xchg
stos
test
cmc
or
ficoms
mov
hlt
sti
jo
xorb
test
aas
dec
mov
sub
mov
mov
lret
adc
and
cmpsb
add
sbb
push
loop
or
iret
fstl
in
sbb
dec
das
push
test
adcb
xor
jb
jne
call
xor
jp
mov
movsl
cmp
mov
in
and
shll
test
shrb
notb
jno
lcall
or
fnstsw
mov
scas
nop
ret
jl
xchg
pushf
nop
aaa
jno
std
cmc
in
xlat
pop
pop
push
inc
xor
sub
inc
cwtl
mov
push
adc
cmpsl
inc
jg
jle
cli
xchg
mov
lock
or
inc
sahf
sbb
je
jnp
jbe
iret
ficoml
cmpb
dec
push
dec
xchg
sub
and
testb
pop
arpl
dec
scas
repnz
cs
ja
frstor
cwtl
adc
sahf
mov
sbb
or
pop
jp
mov
aam
inc
cmp
fbstp
imul
lea
addb
sarl
sbb
ljmp
cmp
sbb
in
mov
pop
andl
ret
pop
mov
dec
push
ds
fcoms
jge
out
jl
adc
das
pop
or
xchg
andl
xor
xchg
loopne
test
inc
mov
sub
aaa
mov
out
shll
in
pop
xchg
adc
lret
stos
js
fnsave
mov
enter
lea
cltd
fstpt
jae
aas
or
imul
push
test
xchg
or
pop
lock
push
test
mov
and
and
outsb
dec
fdivrl
mov
jb
cmp
jmp
rol
ror
aad
xchg
mov
aad
sbb
js
jle
js
into
int3
dec
frndint
sub
mov
into
lds
cld
ficompl
flds
mov
clc
call
mov
daa
sub
or
xchg
popf
fbstp
jno
pop
mov
dec
js
outsb
fcmovu
push
dec
sub
in
sub
xchg
ret
mov
xchg
jg
nopl
jnp
test
sub
mov
testl
mov
gs
or
xchg
loope
jle
push
and
and
jge
dec
xor
test
mov
jmp
pop
jbe
imul
nop
std
mov
cmp
test
into
out
cmpsl
xchg
mov
leave
in
sbb
mov
je
sahf
adc
clc
rcrb
loopne
sbb
and
mov
xor
mov
lret
xchg
xchg
enter
add
or
fdivr
pop
lods
mov
aas
test
stos
sbb
test
enter
xchg
xor
cmc
jno
test
or
insb
outsb
shlb
jbe
fldl
mov
adc
push
scas
repnz
cmp
nop
test
out
div
rclb
mov
pop
rclb
in
js
in
cltd
fwait
sbb
mov
mov
nop
pop
xchg
xchg
adc
stc
jb
mov
push
jnp
imul
stos
out
adc
push
sbb
mov
lds
loop
and
jnp
orl
adc
in
xlat
pop
mov
fdivl
out
or
les
iret
dec
cs
mov
push
jmp
xor
inc
mov
cld
xchg
cmp
inc
push
cmp
sub
xchg
out
movsb
fsub
or
cmpsb
les
aaa
cmp
mov
imull
add
sbb
scas
out
mov
aaa
inc
push
lret
mov
mov
jmp
test
or
fs
or
jmp
cmp
clc
pop
mov
jb
jg
cli
icebp
fs
out
mov
or
pop
mov
scas
in
stos
lret
in
inc
jmp
xlat
sub
mov
or
jmp
or
sub
dec
lret
mov
sub
xchg
sbb
andl
icebp
test
xlat
xchg
dec
dec
add
inc
mov
mov
pop
in
ljmp
push
fcompl
jbe
sbb
sbb
cltd
negl
mov
movsl
icebp
xchg
test
pop
jae
add
mov
dec
xchg
jg
pop
add
push
daa
push
mov
int
jnp
inc
add
sahf
nop
test
mov
into
cmp
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
push
movsb
mov
js
jle
js
icebp
jne
repnz
loop
stc
push
out
sub
pop
cwtl
mov
daa
into
dec
cmp
mov
movsb
pop
or
cmp
dec
lahf
aam
ja
add
push
loope
pop
mov
repnz
test
iret
push
jp
cmpsl
xchg
lret
ror
inc
mov
in
jno
inc
js
adc
notl
mov
stos
mov
out
inc
xchg
add
adc
mov
mov
rclb
push
jae
aad
or
lock
mov
stos
xorl
aad
or
or
add
sbb
push
mov
pop
stos
push
test
fucomp
push
xchg
jbe
cmp
sbb
pop
mov
jge
jae
cli
push
dec
leave
cmpl
sub
sub
ss
or
rclb
pop
call
out
xchg
xor
cmp
cmpsl
add
je
insl
outsl
ret
mov
daa
jg
mov
data16
cmc
rcll
jge
std
mov
xchg
push
add
sti
stc
stos
inc
sub
inc
dec
into
and
push
mov
repnz
xchg
push
push
mov
jno
jle
fdivr
pop
pop
adc
in
cmp
int
frstor
outsl
out
adc
add
jp
mov
popa
fisttpll
mov
sub
imul
scas
int3
cwtl
movsb
mov
cmp
push
loop
mov
shrb
mov
data16
fwait
movsl
sbb
pop
push
cs
and
test
mov
xchg
fsubr
mov
adc
gs
fwait
cmp
stc
fstpt
or
stos
push
fs
shl
call
sbb
mov
scas
ljmp
mov
xorb
jmp
mov
outsl
or
pop
push
pop
out
stos
cmp
icebp
scas
and
mov
xchg
sub
pop
lds
inc
imull
xchg
ficoms
sbb
or
mov
adc
jge
fsubrs
jmp
jae
lahf
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
push
mov
js
xor
int3
jno
push
aaa
mov
int
ret
aam
pop
cmp
sbb
leave
mov
scas
and
push
mov
add
xchg
sub
sbb
dec
pop
gs
fdivl
mov
fs
mov
push
inc
scas
mov
cs
pop
loop
add
push
push
cmpb
xor
dec
mov
mov
in
xchg
cmpl
sti
push
jb
fists
cmp
inc
sub
sbb
or
sbb
push
dec
cmp
sbb
cmp
sub
cltd
cmp
mov
jl
mov
dec
jne
adc
xchg
cmp
es
or
mov
lcall
mov
std
je
add
popa
sub
dec
rcrl
adc
lret
fwait
lock
in
mov
dec
es
inc
lock
dec
mov
mov
cmp
mov
repnz
push
sub
sbbb
mov
mov
mov
pop
or
das
stos
stos
mov
push
jb
push
enter
lret
dec
sub
mov
pop
push
test
mov
jecxz
push
in
mov
lds
fst
fnstcw
into
lea
and
rorl
mov
push
repz
je
aaa
leave
add
add
add
dec
mov
je
dec
mov
fimull
inc
lcall
sub
inc
pop
sub
cld
scas
loope
jle
xchg
xchg
dec
rorl
cmp
push
popf
push
leave
repz
mov
pusha
push
data16
dec
in
pop
std
pop
xor
adc
lcall
dec
xchg
mov
sbb
jg
ret
add
mov
mov
daa
stos
inc
cmp
pop
out
mov
ficoml
push
cmp
ja
stos
sbb
out
nop
out
dec
jle
test
push
outsb
push
mov
mov
sti
sbb
ds
imul
add
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
cmc
mov
js
xor
loop
out
adc
shrl
xor
lock
xor
xor
sub
outsb
cmp
jg
pusha
fsts
jmp
sarb
mov
jns
hlt
mov
lcall
jmp
xchg
rclb
testb
pop
ret
sbb
cmpl
add
ret
addr16
repnz
dec
rclb
ret
mov
and
cwtl
sbb
xchg
pop
pop
arpl
xchg
rclb
mov
xchg
sub
inc
sar
fwait
into
push
test
out
movsb
cmc
repz
mov
push
movsl
scas
push
inc
xchg
sahf
out
rorb
repnz
arpl
adc
lea
sbb
ljmp
leave
das
push
sbb
or
int
lea
daa
adc
lret
cmp
loop
inc
stc
sbb
lcall
daa
leave
sbb
jbe
cltd
shrb
inc
test
mov
jecxz
lock
loopne
repnz
fbld
mov
sbb
mov
cs
scas
xor
or
inc
mov
rcrb
mov
iret
dec
sbb
mov
lret
and
inc
or
pop
xchg
or
sub
dec
cmp
adc
stc
xchg
jns
popa
fdivl
sub
cld
negl
inc
std
dec
stos
jecxz
loope
mov
push
std
scas
mov
enter
jnp
push
push
lret
pop
loope
xchg
jnp
scas
imul
dec
in
mov
mov
adc
and
mov
sub
orl
lods
or
xchg
cwtl
in
cs
aaa
jecxz
or
fidivrl
jmp
or
pop
ficomps
xchg
mov
adc
jg
lds
jecxz
mov
cmpsb
jo
sub
sbb
stc
xor
cmp
cmp
or
sbb
fstl
cmp
movl
jne
and
jmp
int
into
aad
lea
and
xor
sub
push
jp
out
bound
or
jle
sbb
and
push
sub
push
cmpsl
inc
shll
jnp
arpl
jb
xchg
stos
in
nop
jb
jns
js
cmp
scas
insb
bound
dec
inc
mov
add
fstl
test
repnz
jns
mov
sub
xchg
out
xor
pushf
imul
pop
mov
xor
loope
add
adc
lods
sbb
das
pop
sbb
ror
stos
movsl
cmpsb
mov
cli
adc
std
iret
push
stos
pop
xchg
popl
or
lea
lea
imul
aad
mov
into
imul
es
jecxz
inc
pop
lret
push
push
adc
icebp
into
mov
shrl
cmp
pop
in
cmpsl
sti
push
clc
fcmovne
pop
mov
adc
leave
sbb
out
data16
mov
pop
cmp
add
cmpsb
sbb
lahf
push
xchg
cltd
repnz
dec
jne
xchg
and
into
mov
push
jmp
jge
lret
imul
cld
out
mov
pushf
sub
xchg
je
loopne
xor
cmp
adc
movsl
es
scas
xor
fistpl
mov
mov
xor
dec
push
or
repz
push
fadds
mov
or
shlb
ret
daa
xor
lods
xor
js
jmp
ret
pop
js
lods
jae
mov
mov
pop
movsl
mov
adc
sarb
add
ret
mov
int
std
cmp
push
mov
jmp
outsb
popfw
dec
iret
shrl
dec
jb
lret
jne
stos
test
jns
or
es
sub
inc
push
pop
pop
mov
pop
jg
rcll
imul
add
sbb
cmp
mov
xchg
fcmovb
and
jbe
out
or
cltd
push
outsl
ret
fidivl
mov
dec
pusha
sbb
ss
adc
cmpl
dec
daa
ficompl
mov
and
mov
add
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
fidivrl
sub
js
xor
and
inc
xchg
pop
aaa
sbb
cmp
mov
mov
das
mov
fildll
adc
push
ffreep
cwtl
fwait
push
push
inc
jnp
loop
pop
mov
xor
sbbl
jno
ror
push
dec
xchg
cmpsl
pop
vmread
jg
dec
add
cld
fldenv
pushf
rclb
fdivs
fstl
jge
int3
mov
sbb
sbb
ss
sub
pop
lret
lds
leave
out
sub
inc
jne
xchg
push
mov
dec
xor
adc
mov
call
jno
adc
sbb
sub
mov
adc
in
fldcw
sbb
mov
push
adc
mov
aam
mov
cmp
dec
xchg
inc
addb
add
lea
xor
fs
ds
sahf
mov
sbb
in
cld
add
mov
and
ljmp
push
push
lods
rcll
dec
imull
stc
mov
es
sbb
imul
jle
xor
mov
int3
outsb
jno
pop
sahf
outsb
cmp
lods
pushl
fs
push
inc
pop
pop
bound
or
mov
push
aas
jb
test
mov
testl
adc
xorl
imul
fs
int3
xchg
xor
imul
sarl
push
cmpsb
repz
pushl
xor
test
in
sub
cmp
mov
mov
add
pop
and
ret
sbb
cmp
dec
sub
or
jp
mov
mov
adc
and
mov
push
pop
xchg
or
popa
and
adc
mov
test
add
iret
push
xchg
lock
xor
fsub
inc
rcr
xlat
push
mov
loopne
dec
and
loopne
push
hlt
jo
mov
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
int
loopne
shrl
js
mov
xchg
xor
fst
mov
cltd
push
leave
add
mov
push
dec
enter
jbe
outsl
mov
push
adcb
inc
lds
call
mov
testl
add
rcll
dec
or
sbb
ja
push
cmp
or
out
pop
xor
idivb
div
push
cmp
jne
dec
notl
into
call
fmulp
fs
jge
and
outsb
cmp
mov
scas
push
xor
xlat
in
adc
idivb
jecxz
dec
movsb
call
mov
pop
mov
and
cmpsl
mov
lcall
or
daa
cs
cmp
push
push
pop
xchg
mov
push
insl
push
data16
cmpsl
out
les
cs
cmpsl
add
xchg
icebp
sub
jl
call
jbe
xchg
mov
dec
pop
or
adc
mov
lcall
jle
xor
popf
fiadds
test
mov
jp,pt
fnsave
out
adc
sbb
push
pop
xchg
andl
sbb
adc
cmp
dec
repz
dec
int3
ret
xchg
and
pop
mov
js
push
cmc
iret
xchg
ret
imul
lahf
mov
pop
pop
add
push
daa
jne
stos
shlb
aam
stc
sbb
dec
mov
aam
jb
mov
sbb
pop
ret
sbb
sub
pop
dec
mov
in
addr16
pop
popa
jecxz
cs
insb
pop
mov
bswap
push
lret
pusha
xor
xchg
or
cmp
add
jecxz
xor
in
js
mov
lret
mov
mov
pushf
add
mov
hlt
add
js
dec
ljmp
cwtl
movsl
dec
cmp
cmpsl
in
jnp
arpl
aam
pop
aas
pop
fimuls
lock
cmp
sub
aad
orl
or
in
inc
pop
lret
sub
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
push
add
js
jle
js
mov
fildl
pop
pusha
push
out
mov
mov
adc
fists
adc
inc
sahf
dec
js
cmc
push
sbb
adc
xchg
mov
out
arpl
sub
sbb
xor
stos
loope
cmpsl
cmp
bound
cmp
push
pop
movsb
adc
mov
cs
adc
sub
cmp
pop
mov
jge
fstpl
and
xor
mov
jge
fidivrl
and
shll
into
lds
xchg
out
and
repnz
imul
es
and
or
mov
mov
mov
ljmp
jg
popa
push
lock
inc
sarl
ja
xor
mov
stc
das
lret
dec
frstor
sub
dec
and
es
mov
call
fldl
adc
xor
pop
shll
outsl
in
clc
xor
clc
and
mov
xor
and
pop
fcmovb
xor
push
xor
pop
pop
movsl
aam
dec
mov
sbb
dec
adcl
mov
jge
inc
jge
mov
ret
push
test
gs
push
icebp
sbb
sub
repz
pop
xchg
pop
cltd
dec
aas
popl
cmp
mov
mov
cmp
adc
lret
int3
icebp
sub
and
mov
adc
stos
dec
imul
aas
mov
adc
inc
cli
addb
mov
xchg
adcb
stos
mov
roll
cmp
cmpsl
xor
pop
ss
int3
or
mov
rorl
pop
jg
sbb
cmpsl
in
sti
mov
xor
xor
fndisi(8087
mul
adc
enter
inc
dec
pop
les
mov
aam
pushf
arpl
fsubl
jb
and
mov
gs
rorb
push
xor
pusha
pop
or
mov
cmpsb
ja
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
push
inc
add
inc
mov
js
jle
js
cmp
mov
jne
jg
lret
cmp
xchg
xor
adc
mov
push
std
and
ret
sbb
testb
sbb
xchg
movsl
mov
sbb
lret
or
movsb
lea
adcb
pop
lea
adc
fstpt
repz
cld
icebp
or
jecxz
sar
popf
cmp
gs
mov
ss
hlt
xchg
imul
outsb
sub
push
inc
mov
lods
dec
lods
stos
in
inc
hlt
jns
sbb
scas
and
lods
flds
pusha
sbb
outsb
jno
dec
push
mov
addr16
push
ja
lret
adc
sub
xor
adc
jb
cmp
push
test
cmc
scas
add
adc
sub
mov
inc
or
loopne
pop
imul
shr
mov
inc
mov
inc
js
paddsw
out
cltd
psrad
ja
and
int
or
push
ja
xor
and
xchg
in
nop
xor
cmpsb
shlb
push
mov
sbb
dec
pop
adc
hlt
xchg
lcall
int3
and
mov
and
jge
mulb
push
pushf
add
push
or
sbbb
stos
repnz
lahf
and
in
jne
daa
mov
sbb
leave
scas
pop
pop
cmp
mov
dec
sub
xchg
adc
xor
out
inc
popa
adc
mov
sbb
mov
sbb
mov
in
xchg
inc
fistpl
icebp
js
dec
push
xchg
test
jo
dec
int3
inc
loopne
mov
mov
xor
lds
lret
out
outsl
mov
cld
pushf
cmp
notl
es
sbb
mov
pop
sbb
inc
fldenv
inc
in
lea
push
or
lret
xchg
adc
jae
out
push
or
rolb
testl
inc
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
pop
pop
add
js
loopne
dec
icebp
mov
mov
jo
xor
lcall
mov
loope
inc
xor
xor
xor
test
sbb
jmp
imul
mov
sbb
subl
mov
cmp
dec
jo
rolb
fldenv
jge
das
sbb
lods
sub
cmpsb
dec
cltd
cmpsl
jmp
xor
jge
in
sti
cmc
push
push
inc
inc
inc
sbb
sub
adc
movb
lea
outsl
in
pop
dec
test
mov
push
xor
leave
insb
inc
pop
sti
ja
les
or
push
mov
inc
mov
mov
clc
push
mull
stc
inc
scas
jge
inc
sahf
das
es
ljmp
push
add
cmpsl
jg
inc
adc
lock
popf
dec
xor
dec
cmp
jmp
add
inc
fwait
in
inc
nop
and
jbe
in
fs
into
cld
xchg
xor
mov
mov
dec
jae
std
mov
dec
insb
stos
aaa
push
in
mov
imul
in
mov
stos
jnp
insl
mov
lods
pop
sbb
aaa
dec
popf
arpl
arpl
out
or
mulb
lcall
lods
lret
rorl
mov
jge
jae
push
mov
pop
out
inc
iret
ss
pop
pushl
dec
jb
push
movsb
fs
fcompl
popa
cmovle
lret
mov
arpl
rep
fchs
or
addl
pop
add
xor
in
and
repnz
mov
or
inc
fsubp
ljmp
rorb
je
xor
sub
cltd
and
addb
fdivl
xor
into
mov
lods
fimuls
push
pop
mov
adc
and
push
sbb
enter
pop
dec
pop
sub
xor
mov
cli
data16
adc
or
mov
inc
fnstenv
rcrl
cmp
cmpsb
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
mov
cwtl
pop
aas
mov
js
jle
ja
fucomi
stc
in
mov
add
jge
mov
ljmp
jp
push
jbe
and
inc
add
lcall
std
testb
roll
mov
pop
mov
sub
jno
dec
popf
imul
push
or
call
pop
xchg
xchg
enter
fistps
addb
sub
pop
jns
mov
out
enter
pop
out
jns
sti
lock
icebp
jno
scas
mov
rcrl
or
lahf
cmp
cmc
jno
dec
cwtl
cmp
test
or
and
mov
mov
imul
or
add
sti
mov
add
xor
daa
pop
ljmp
sbb
insb
out
xchg
inc
ret
test
mov
mov
sbb
adc
mov
xchg
clc
push
enter
sbb
mov
or
cmp
inc
mov
mov
movsl
cmp
imul
pop
push
movb
dec
sbb
sbb
nop
xchg
outsl
lahf
cmp
aas
imul
mov
push
pop
mov
fcmovb
inc
shr
jge
mov
das
insb
ds
push
jle
adc
xor
xchg
pop
sbb
xchg
mov
fwait
push
add
sub
xchg
add
movsl
bound
lret
sti
enter
cs
shl
call
clc
loope
mov
pushf
mov
fimuls
pop
cmpsl
push
daa
mov
adc
add
insl
inc
push
popa
mov
cmpsb
mov
lods
sbb
xor
xchg
dec
cltd
mov
pushw
repz
lahf
xor
pusha
and
inc
xchg
push
test
xlat
shrb
mov
push
xchg
repz
nop
mov
inc
mov
cmp
fwait
pusha
mov
notl
dec
rolb
mov
cmp
xchg
ja
lahf
sti
pusha
jmp
frstor
xchg
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
push
notl
in
js
test
mov
mov
rcrl
or
pushf
pop
ret
cs
hlt
cmp
pop
adc
jno
lods
fdivrs
push
inc
fimuls
cwtl
ss
imul
add
test
hlt
insb
test
push
shl
pop
stos
mov
or
pop
mov
jl
std
sarl
dec
icebp
mov
arpl
mov
push
adc
daa
imul
repz
push
repz
cltd
jae
sbb
pop
jbe
cmp
aad
fiadds
mov
and
stos
cli
pop
fisttpll
mov
mov
dec
inc
adc
arpl
es
aad
pop
ja
push
out
mov
addr16
dec
test
ret
int
jg
movsb
jbe
pop
repz
cmp
and
xchg
out
pop
ds
lods
add
movsb
sub
push
xor
push
mov
nop
and
shlb
hlt
fstl
sti
sub
icebp
jp
or
aad
and
dec
dec
mov
pushf
imul
lods
idivb
stc
outsl
dec
aas
repz
insl
jecxz
lds
out
call
pop
bound
inc
das
mov
pop
pop
push
cltd
add
jno
ljmp
jmp
pop
sub
icebp
or
mov
push
and
pop
dec
test
mov
sahf
mov
xchg
jae
jl
jmp
aas
pusha
call
xchg
scas
sub
mov
adc
xchg
add
push
les
and
sub
mov
andl
push
cmp
xchg
or
sbb
rolb
push
add
push
out
inc
fwait
dec
cmp
xor
ljmp
push
xor
cmp
cltd
fidivrl
lret
loope
sbb
add
div
lods
push
hlt
pusha
insl
cmpl
xchg
pop
iret
lods
dec
adc
ljmp
add
mov
ret
adc
aas
pop
mov
imul
sbb
into
cld
sbb
xchg
out
repz
addb
aam
fisubrs
pop
sarb
cmc
stc
push
mov
xor
sub
aas
mov
xchg
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
mov
mov
js
sbb
dec
xor
push
sbb
sbb
outsb
inc
pusha
ljmp
dec
cli
out
gs
cmp
cmp
sbb
hlt
test
ja
jne
ds
jno
lock
shll
xor
mov
loopne
jno
mov
out
dec
pop
lahf
mov
xor
push
lahf
pop
loopne
ret
adc
lea
inc
fs
adc
jl
pop
pushf
call
lds
lods
shr
dec
xor
iret
mov
aas
add
xchg
xlat
jmp
cmp
inc
iret
add
xchg
dec
int3
fs
pop
sahf
push
lret
cmp
lret
push
adc
repz
test
cmp
aas
push
popa
pop
fisubs
cmp
ds
addl
iret
std
sbb
xchg
in
xchg
scas
pop
cmp
push
or
lret
mov
mov
mov
sti
sbb
fnstcw
sub
mov
and
stc
cmp
sub
cmpsb
pop
bound
data16
out
xor
bound
arpl
xor
fmull
add
xor
rorb
loope
lea
cmc
sbb
adc
or
push
lahf
add
dec
add
popf
inc
out
test
push
test
sub
scas
loope
push
call
push
cmc
xchg
jb
aam
xchg
and
cmp
push
cmp
jo
test
sub
decb
push
out
lods
cmpsb
outsb
arpl
mov
cli
fwait
stc
pop
cltd
scas
call
mov
aad
jmp
in
pop
cmp
in
lods
hlt
popf
movsb
bound
push
shll
call
je
lods
fimull
mov
stc
in
push
push
pop
mov
mov
sub
cld
add
push
xor
mov
mov
les
mov
fdivr
addr16
mov
fdiv
out
mov
ret
push
jg
or
pusha
push
add
repz
test
adc
popf
sbb
enter
call
insb
loop
push
mov
xchg
imul
inc
pop
daa
scas
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
fbstp
into
mov
js
dec
cli
pop
xchg
or
inc
std
push
sbb
push
pop
repnz
test
das
cmpsb
xor
movsl
or
mulb
jb
js
xchg
lret
popa
push
adc
nop
adc
lret
push
jecxz
movsb
repz
imul
inc
in
aam
mov
dec
pop
pop
xor
stos
cltd
sbb
ljmp
mov
movsb
repz
sbb
xchg
jb
pop
lock
inc
xchg
mov
pop
hlt
in
das
out
loop
xchg
mov
push
mov
sub
ret
add
sub
lahf
in
inc
mov
cmp
pop
lea
bnd
jbe
and
sbb
pop
fs
cmp
add
cmpsb
imul
je
push
cmp
cmp
mov
xchg
repnz
and
scas
insl
icebp
or
pop
adc
xchg
jae
rolb
dec
out
das
xor
daa
push
leave
dec
dec
pop
arpl
dec
pop
sub
dec
sub
nop
stc
aaa
add
ljmp
daa
int
jne
mov
push
int3
les
add
mov
or
jne
or
andb
in
fs
mov
lods
mov
dec
inc
lods
mov
test
pusha
sub
mov
outsb
fs
pop
lods
icebp
in
add
and
mov
leave
or
jae
cmpsb
pop
pop
aam
out
sbb
fists
iret
jp
popa
mov
mov
nop
call
adc
rclb
jae
lret
mov
push
imul
xlat
inc
shrb
mov
cmp
outsb
cli
in
cs
fdivs
mov
push
mov
in
push
shr
cmp
mov
sub
mov
lret
clc
aas
std
or
cltd
lock
out
fsubl
mov
pop
dec
cmpsb
dec
loope
inc
fs
push
jp
pop
jmp
mov
pop
dec
lds
mov
int
and
out
outsw
push
jg
cld
push
pushf
sti
cmp
mov
movsb
orl
divl
xchg
repz
outsb
in
or
cmp
rol
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shll
js
in
js
and
cld
popa
sar
jmp
gs
faddp
cmp
mov
pop
lcall
jne
subps
xchg
lcall
scas
xor
sub
pop
daa
mov
cmp
div
mov
add
add
xlat
xchg
sub
pop
dec
adc
cmc
sarb
sub
hlt
lock
aaa
fnstsw
xor
adc
push
out
sub
pop
inc
lock
outsb
imul
xchg
imul
ret
dec
out
cltd
into
cmpsb
cmp
popf
dec
stos
xor
stos
lret
jae
adc
sti
jp
testl
pextrw
cld
outsb
inc
dec
lret
pop
pop
jbe
adc
xorl
sbb
mov
fwait
cwtl
cli
xchg
test
adc
outsl
lds
test
repnz
and
insl
clc
cli
rcll
ret
add
cmp
jo
rclb
shlb
rol
dec
xchg
movsb
push
mov
aam
push
test
movsb
sbb
lret
jb
lahf
push
sbb
dec
std
sbbl
mov
xchg
jb
sti
ficompl
outsl
into
les
mov
sub
push
pop
ljmp
mov
hlt
sbb
sbb
lods
mov
cmp
mov
fisubs
ds
or
sub
stos
fildl
pop
cld
dec
adc
daa
scas
stos
push
mov
leave
dec
ret
movsb
scas
data16
repnz
push
fisubl
mov
inc
sbb
sbbl
jg
das
mov
clc
sbb
je
dec
adc
repnz
jg
dec
leave
pop
bound
push
lea
pop
jecxz
xlat
adc
into
out
xchg
pop
push
lret
std
jle
lret
adc
in
aad
and
ss
insl
mov
arpl
mov
dec
pop
ds
or
and
lcall
aaa
lea
cmp
mov
xor
mov
lea
stc
out
mov
pop
mov
mov
test
ret
sub
cmp
mov
and
dec
fs
enter
dec
push
cmp
movl
jmp
ret
ret
lret
test
shll
inc
js
in
js
nop
js
sub
and
jecxz
ror
xchg
aas
lods
push
fidivl
dec
jnp
and
xor
cmp
xchg
shl
cmp
popa
test
mov
imul
out
testb
cs
aad
les
stos
mov
adc
outsl
jo
stos
movzbl
inc
out
fidivrs
mov
xchg
insl
mov
push
mov
pop
shll
inc
pop
outsl
cmp
lahf
xchg
adc
mov
jbe
jmp
sbb
addr16
mov
sub
or
jle
loope
mov
gs
and
xchg
addl
push
shrl
sbbl
aam
outsl
add
mov
repz
or
mov
mov
sahf
and
mov
xlat
inc
mov
mov
and
add
rolb
cs
cld
inc
jmp
popa
loop
or
xor
lock
add
push
aas
leave
and
and
push
push
mov
push
jmp
cmc
push
inc
xchg
jne
mov
jge
sub
out
std
mov
push
mov
lock
adc
cltd
cmpsl
cmpl
and
mov
cmp
out
rolb
aaa
sbbb
jl
mov
rolb
stos
arpl
cmp
sbb
inc
lret
orb
mov
lahf
pop
popa
inc
mov
aam
jmp
fldcw
cmp
xlat
xchg
fnstsw
and
and
rclb
outsb
push
aad
mov
mov
pusha
addr16
pop
in
xchg
mov
in
in
cld
cwtl
jnp
mov
dec
popf
js
add
push
and
add
sub
std
subl
push
stc
cltd
sub
xorb
addr16
icebp
push
loop
add
mov
mov
jns
adc
cld
lea
xchg
mov
xchg
push
xchg
and
mov
lahf
push
nop
inc
ljmp
fidivrl
int
jno
and
in
sub
movsb
or
lock
test
in
popa
mov
xchg
int
ficomps
sbb
add
mov
push
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
xchg
scas
inc
lea
js
jle
js
lods
and
sub
fs
xchg
aaa
movsb
pop
shlb
cli
inc
shlb
mov
aaa
imulb
or
insl
sbb
roll
or
shlb
mov
push
dec
mov
sti
adc
out
xlat
jmp
mov
mov
xor
mov
sbb
lea
test
in
mov
mov
scas
jle
sarb
shl
pop
mov
in
inc
adc
ljmp
addr16
mov
push
adc
lods
xchg
shlb
xchg
add
hlt
mov
shlb
mov
sub
jp
push
loopne
cmp
cmp
fxch
in
pop
lahf
pushf
out
sar
mov
ret
sub
mov
call
dec
mov
inc
imul
movsl
xchg
mov
mov
test
adc
xor
pop
cmp
icebp
push
sub
rcr
je
or
cmp
loope
xchg
or
outsl
or
mov
xchg
cwtl
jb
hlt
xor
inc
in
xchg
test
in
and
imul
or
dec
in
jo
pop
mov
test
xchg
data16
clc
add
inc
aas
fcoml
repz
cmp
mov
ds
sahf
and
push
popf
and
xchg
ds
cs
mov
test
clc
out
xor
push
repz
inc
lods
in
int
jmp
movsb
in
pop
push
repnz
icebp
pop
cmpsb
arpl
and
or
inc
cwtl
nop
gs
xchg
jb
popf
scas
into
add
rcrb
adc
int3
daa
push
lods
xor
pop
test
sub
mov
mov
push
imul
lods
loop
imul
movsb
fstpl
movsl
ljmp
pop
pop
icebp
fidivrl
push
lds
pusha
mov
je
cmp
sbb
shrl
pop
and
xor
cwtl
jg
xchg
sbb
add
in
or
mov
in
sbb
lods
test
jmp
sub
mov
or
lods
inc
sbb
push
mov
arpl
inc
dec
pop
mov
dec
stc
rcll
jg
bound
or
xchg
sbb
cs
mov
das
int
mov
add
cmc
cmp
and
or
inc
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
dec
inc
call
js
jle
js
push
push
dec
cmp
jg
fs
fwait
addr16
mov
movsb
movb
dec
sub
addr16
mov
xchg
or
xchg
dec
int3
fidivs
lods
cwtl
ret
adcl
cmp
cwtl
daa
inc
dec
fnsave
mov
sar
push
pop
and
cmp
or
ja
dec
inc
pop
out
adc
sub
stos
sbb
sahf
pop
js
lahf
popa
inc
add
mov
sub
add
xor
mov
fs
scas
aam
jne
sub
out
sub
mov
jecxz
cmp
xchg
cmp
leave
int3
jle
or
aaa
dec
hlt
xchg
in
enter
andb
sbb
xor
push
jnp
jbe
mov
dec
data16
mov
mov
mov
pop
jno
popa
inc
jnp
xchg
fsubrs
jno
xchg
addr16
adcl
popa
sbb
push
xor
cld
dec
pop
sbb
pop
cmp
jp
je
cmc
mov
aaa
insl
jns
dec
stc
mov
nop
idivl
dec
cmp
mov
stc
loope
movsb
sarb
push
or
jp
out
add
mov
xor
repnz
cmp
in
lock
call
pop
pop
cmp
jb
ret
cld
daa
pop
aad
xorl
js
leave
std
mov
pop
inc
and
xor
sbb
dec
data16
aad
cmp
test
cmp
jle
fsubrl
leave
mov
gs
push
push
push
mov
xchg
push
inc
fcoms
loop
xchg
add
push
push
cmpsl
fcoml
add
lock
mov
pop
mov
pop
fistpll
push
xchg
iret
mov
cmp
sub
aas
push
adc
out
movsb
mov
hlt
sbb
adc
adc
popf
xor
mov
filds
nop
and
arpl
add
push
aaa
outsb
pop
cmp
cmp
lret
aam
add
pop
popa
xorl
data16
and
sub
into
push
movl
or
mov
je
rcrb
cmp
sub
jae
out
je
aaa
outsb
cmp
cwtl
in
mov
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
popf
stos
or
in
js
imul
mov
iret
mov
dec
subl
adc
sahf
mov
movsl
jo
fsubrs
or
lcall
pop
sub
fisttpl
pop
test
daa
fld
jg
filds
dec
adc
and
jecxz
sbb
stc
or
xchg
hlt
je
sbb
xor
pop
push
mov
aas
inc
or
lret
add
out
mov
xchg
mov
xchg
clc
aaa
and
mov
out
xorb
jno
cmp
cmp
lods
adc
ss
xchg
add
mov
cmp
xor
mov
ds
aaa
out
sub
rorl
gs
and
cmp
xor
add
shll
movsb
sub
sbb
adc
jne
adc
pop
hlt
adc
int3
in
shlb
jmp
push
in
imull
dec
enter
jge
test
int3
pop
out
sti
adc
mov
jge
add
aad
lods
into
mov
cs
sub
jmp
or
mov
addl
jbe
loop
adc
push
lcall
arpl
add
out
push
pushf
dec
test
mov
outsb
data16
arpl
or
ljmp
pop
leave
subl
adc
pop
mov
and
mov
sar
loop
jne
mov
je
sbb
lods
fstp
je
ja
out
push
fnstenv
mov
lret
adc
cmpsb
insl
and
enter
mov
ficoms
push
nop
adc
ljmp
cmpsl
out
gs
adc
aaa
lods
cmp
pop
jg
and
pop
dec
mov
jle
es
inc
js
mov
cli
dec
shlb
jg
dec
cwtl
idivb
addr16
adc
nop
movsb
out
cmc
sbb
mov
fidivrl
iret
aad
imul
push
jnp
xchg
xchg
and
jns
xor
fcoms
dec
dec
inc
repnz
push
cmp
div
outsb
jle
stc
add
cmp
dec
or
sbb
mov
cwtl
fisttpll
push
inc
js
inc
mov
faddl
and
divb
shll
jmp
ret
int
into
xchg
jle
jl
xor
js
jle
js
arpl
sbb
cmp
jnp
lcall
fisttpll
loopne
ja
orl
jo
scas
mov
adc
cmpsl
xor
xor
icebp
mov
mov
jg
xchg
pop
sub
lock
push
enter
adc
jg
or
leave
mov
int3
dec
sbb
pop
cmpsb
scas
fnstsw
je
push
aad
push
xor
lds
and
in
mulb
adcl
adc
sbb
stos
mov
xchg
lock
sbb
mov
cmp
divl
bound
cli
mov
int3
or
push
and
cmp
cli
stos
xor
ja
jmp
lret
call
mov
lods
mov
imul
and
mov
lods
fistl
mov
outsl
outsb
jno
xorb
fcomip
ret
xchg
and
subl
dec
stos
loop
mov
or
pop
push
rcll
push
add
icebp
and
jne
sarl
lea
stc
fisttpl
jge
mov
sub
inc
adc
pushf
into
nop
mov
inc
ret
mov
cmp
pop
jns
jl
inc
rclb
xchg
mov
and
jb
cld
rorb
in
sub
ja
xchg
movsl
pop
pushf
ljmp
inc
fwait
cs
roll
and
add
insb
popf
inc
mov
dec
shll
push
pop
cmp
adc
imul
repz
xchg
mov
add
imul
stos
aad
pop
mov
cmp
repz
jge
enter
mov
cmc
mov
push
mov
jg
les
push
mov
outsb
aam
fcomps
and
mov
pop
jb
dec
mov
imul
jge
adc
lock
xchg
test
adc
mov
pop
les
dec
test
sbb
mulb
das
add
xor
insb
movsb
inc
cmp
mov
xor
xor
imul
xchg
in
fnsave
cmc
outsb
adc
lea
sub
ljmp
movsb
push
xlat
xor
jge
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
notb
cld
cmp
js
jle
js
fwait
adc
nop
leave
xchg
dec
sbb
std
pop
push
fnstenv
mov
or
mov
or
stc
sub
rorl
das
notb
and
mov
cwtl
and
add
lcall
pop
arpl
push
movsl
sbb
jp
sbb
pop
sub
dec
in
arpl
inc
mov
in
in
out
mov
adc
adc
popa
loope
int
mov
xchg
sbbl
dec
cwtl
mov
cmp
push
stos
cmpsb
cs
mov
mov
add
es
repz
bound
fdivrs
insl
imull
xchg
rclb
xor
xchg
xor
out
sub
loope
mov
ret
dec
sbb
popa
sbb
xor
lcall
and
xchg
and
loopne
xchg
add
stos
pop
leave
insl
xchg
cmpsb
jns
xchg
push
mov
outsb
or
std
fs
push
fnstcw
xchg
dec
aam
jae
enter
lds
repz
and
mov
mov
jp
inc
sbb
sbb
push
inc
movsl
push
push
cld
mov
ret
ja
inc
hlt
cmp
stos
jno
inc
cwtl
sub
dec
sarl
sar
xorl
iret
divl
int3
sbb
inc
daa
jmp
sti
ffreep
jb
clc
pop
ljmp
aaa
iret
pop
in
push
mov
sub
popf
pop
adc
push
clc
cmpsl
scas
mov
mov
pop
pop
popf
in
clc
add
xor
xchg
lret
xchg
adc
in
das
push
and
cmpl
inc
insl
xchg
scas
data16
xchg
mov
push
in
cli
xchg
test
pop
add
lock
pop
in
fidivrl
or
movsl
rolb
lcall
cli
sub
jle
adc
or
imul
lcall
addr16
cld
dec
mov
cmp
movsl
push
and
add
les
jmp
dec
es
xor
call
jb
xor
fisttpl
popf
shll
cmp
or
or
or
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
imul
js
jle
js
cmp
jge
mov
frndint
cmc
push
je
and
lds
jbe
in
push
cmpsl
rcrb
adc
dec
inc
rorb
jp
push
push
inc
cmc
aad
cmpsl
rcl
pop
stos
dec
pop
adc
pushf
push
push
mov
sbb
cli
repz
js
iret
adc
arpl
outsl
or
sub
icebp
fisttps
cwtl
jne
mov
xlat
scas
add
pop
clc
iret
fcomps
push
mov
in
fs
mov
dec
lods
adc
pop
loop
in
adc
jbe
inc
ljmp
xchg
mov
test
rorb
loopne
ja
cmp
popl
je
inc
call
xchg
cwtl
sbb
lods
and
mov
jg
and
movb
out
add
inc
adc
inc
dec
imul
mov
jb
xor
mov
loope
imul
leave
xchg
fcmovu
mov
add
mov
fdivl
xor
arpl
scas
faddl
adc
out
mov
pop
jecxz
sub
jae
xchg
adc
imul
sahf
pop
stc
test
rcrb
fwait
lods
sub
jo
addr16
aad
sbb
mov
or
mov
mov
pushf
inc
pushf
mov
frstor
icebp
jg
inc
aas
jge
shlb
cld
jmp
sub
or
andb
xchg
js
xchg
inc
sbb
xor
xchg
scas
sub
sbb
ret
scas
mov
or
dec
and
ljmp
popf
jge
popa
cmpsb
jmp
out
inc
xor
mov
inc
pop
mov
pop
imul
xchg
imul
out
pushf
xorb
outsb
rorl
jno
dec
mov
fisubrs
loop
jle
mov
sub
push
dec
xor
inc
cmc
popf
cmpl
movsb
and
jecxz
mov
pop
mov
mov
cmp
add
mov
mov
add
push
loop
fwait
push
ss
xor
cltd
int3
pop
fcomps
ja
push
nop
mov
pop
dec
adcb
fwait
lcall
sub
cmpsb
mov
in
aas
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
testl
push
js
in
js
test
xor
fucomip
inc
test
xchg
incb
xor
insb
dec
insb
jb
push
mov
push
out
cmp
inc
fs
push
add
subb
mov
loopne
mov
xchg
pusha
icebp
fs
fdivr
push
aam
pop
cld
add
hlt
add
in
jb
mov
cmc
ret
jecxz
mov
xchg
pushf
inc
cmp
or
jae
popa
xor
fmuls
or
cmc
cmp
lret
and
sbb
fisubl
mov
cltd
pushf
adc
sbb
xchg
add
sub
std
aam
leave
out
cmpsl
xchg
es
aad
pop
out
mov
mov
push
aaa
inc
and
aaa
js
dec
xor
push
lret
out
repz
add
xchg
pop
repz
xchg
aas
mov
adc
lahf
call
dec
in
lcall
int
icebp
lods
add
and
sub
cmp
jecxz
cmpsl
mov
xchg
sbb
sbb
mov
test
xor
daa
mov
daa
insl
or
push
mov
inc
dec
dec
jo
sub
loopne
negl
aad
shl
xchg
filds
dec
push
mov
jmp
push
jecxz
shll
pop
jae
inc
cld
jp
mov
jmp
mov
jl
cmp
and
in
xlat
fmuls
push
push
in
xor
mov
leave
jmp
popa
dec
orb
inc
jmp
dec
andl
insb
sbb
pusha
mulb
movsl
dec
insb
sbb
rcr
mov
movsb
jno
call
test
inc
sbb
test
scas
add
ljmp
popf
pop
mov
bound
mov
pop
jge
out
fdivl
int
xchg
inc
mov
incb
ret
push
shrb
mov
xor
icebp
sahf
pushf
sub
pop
jecxz
inc
insb
stos
jnp
or
push
aad
stos
rcll
cmp
leave
in
or
jg
mov
mov
jo
jno
xlat
pop
cmp
xor
inc
cli
xchg
cmpsl
cwtl
sbbl
push
adc
cmpsb
mov
in
lock
std
push
lds
and
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
fmul
mov
js
jle
js
mov
cmp
and
dec
int3
repnz
mov
mov
xchg
test
repnz
jb
movsb
cmpsl
adc
and
cmc
sub
mov
mov
popf
cmpb
push
roll
test
xchg
subl
ja
in
jmp
lds
xchg
cld
push
lahf
or
xchg
inc
scas
out
int
mov
push
insb
mov
pop
das
inc
ja
push
ljmp
leave
scas
out
mov
cwtl
sub
out
xchg
push
dec
inc
dec
movsb
adcl
sbb
les
cld
inc
scas
stos
pusha
dec
out
lahf
mov
and
sub
xor
into
push
rcll
jg
sub
lahf
xor
fs
shll
pop
sub
or
jmp
in
aaa
push
ljmp
push
jne
fsubl
inc
jae
lcall
jns
inc
adc
fildll
jne
jg
rcrb
fwait
pop
fsubl
pop
jge
mov
sbb
xor
dec
and
mov
lock
fisttpl
cmp
pop
and
pop
or
lock
movsb
insb
movsb
or
rclb
das
fisubrs
push
int3
insb
aam
iret
mov
inc
jge
fs
mov
clc
repz
dec
jne
sub
mov
icebp
in
sbb
sarl
insb
push
ret
lcall
das
cmp
sbb
lods
cmpsl
in
mov
jecxz
testl
sbb
mov
pop
js
xchg
adc
xchg
dec
js
cwtl
jge
xor
lahf
iret
fisubrl
iret
adc
jmp
cmp
push
mov
dec
adc
es
mov
xchg
sbb
mov
fldt
lcall
and
stc
mov
jle
sub
test
sbb
das
mov
sbb
cmpsl
hlt
inc
jne
std
mov
jb
xchg
mov
xchg
cwtl
std
insb
sahf
push
imul
push
dec
shll
sbb
addr16
dec
adc
adc
pushf
sbb
es
jno
mov
sbb
enter
fstps
pop
nop
mov
or
or
and
add
jmp
int3
into
ror
rcl
into
jbe
inc
data16
mov
js
jle
js
and
fwait
sub
cmp
js
test
out
stc
jp
cmpsb
mov
adc
fldenvs
lahf
dec
adc
sbbb
xchg
fldt
xchg
push
es
sahf
subl
push
data16
cmc
xchg
adc
dec
popw
and
and
dec
cwtl
dec
icebp
xor
mov
sub
sub
repnz
cmpsl
or
fsubrl
es
push
mov
jge
sti
xchg
pusha
jo
ja
xor
icebp
sbb
notb
xchg
mov
fisubrl
jo
int3
cmp
and
inc
mov
xlat
cmp
pop
outsb
ljmp
push
inc
nop
cmp
xchg
mov
out
repz
aad
je
add
lret
test
fwait
popf
mov
dec
sub
and
jmp
notl
and
ret
ss
inc
in
add
push
or
loop
sbb
cld
sbb
add
mov
mov
cmc
sbb
int3
sub
aam
cmc
or
lea
sub
fstpt
xchg
call
pop
fimuls
adc
mov
test
mov
pusha
pop
repz
mov
and
xor
inc
mov
or
and
push
pusha
push
inc
xor
jb
mov
out
adc
out
push
pushf
rcrb
jmp
outsl
lret
pop
fldenv
add
fwait
dec
sahf
cli
sub
sbb
xchg
test
lret
cmpsb
sbb
pop
idivl
je
insl
pop
sbb
mov
fisubl
push
aaa
pusha
nop
xchg
popf
cmp
jbe
insl
repz
arpl
out
repz
sbb
xlat
inc
mov
mov
pusha
mov
test
mov
cmp
cmp
pop
popf
addr16
dec
cmp
inc
das
pusha
sub
stos
xchg
stos
mov
js
mov
cmp
neg
push
in
cwtl
imul
dec
testb
sbb
sbb
out
pop
xchg
or
and
mov
sbb
mov
jo
push
lods
cmc
sbb
mov
cmpl
xchg
inc
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
add
movsl
rcrb
js
jle
js
out
xchg
jg
cmp
pop
jge
call
test
mov
sti
aam
pop
mov
cwtl
fists
jp
daa
inc
out
lea
xchg
xchg
inc
enter
sbb
push
fidivrs
xor
mov
mov
negl
pop
mov
jne
dec
mov
pop
jecxz
cs
mov
dec
out
mov
dec
aas
icebp
mov
filds
or
push
jmp
ret
push
adc
fbstp
push
in
jg
mov
mov
mov
les
pop
sbb
pop
jo
inc
xchg
inc
insb
xchg
lret
xor
imulb
test
mov
mov
jle
push
leave
mov
fdivrl
mov
mov
dec
mov
shrl
in
pop
lock
fisubs
jne
rcl
and
test
mov
std
aam
fcoms
add
loope
add
pop
dec
shlb
cmpsl
orb
mov
lret
jmp
sbb
out
cmp
mov
aad
movsb
jecxz
push
mov
mov
mov
xchg
sub
cmp
xor
xlat
cmpsb
flds
gs
lahf
pop
pop
ror
push
push
mov
test
cmp
sbb
ljmp
inc
and
leave
loopne
cmpsl
mov
mov
sub
neg
outsl
fwait
shll
insb
dec
pop
stos
mov
pop
cli
ss
orl
loop
sub
push
sti
jbe
pop
ds
push
notl
jecxz
lock
jg
cmp
lret
iret
loopne
pop
inc
movsb
lret
pop
sub
sub
js
xor
lea
je
pop
testb
in
outsl
xor
sub
shr
jns
das
cmpb
enter
movlps
and
sbb
cmp
test
sbb
cli
enter
sub
popf
cmp
test
pop
xor
enter
mov
stc
add
cmp
and
push
push
out
cwtl
inc
push
dec
inc
inc
mov
arpl
jbe
and
push
sti
or
adc
aaa
jl
int
rcr
int
xchg
sti
cmpl
push
or
adc
cmpl
clc
mov
sub
cmp
ja
jmp
rol
xor
mov
xchg
nop
mov
jle
js
xchg
mov
or
sub
je
or
push
xchg
in
arpl
cmpsb
sbb
mov
int3
out
outsl
push
mov
loope
mov
jno
inc
sbb
nop
dec
cmp
cmp
mov
mov
or
test
push
fwait
jo
pusha
sbbb
mov
push
inc
imul
adc
lahf
popa
hlt
pop
insl
jno
pop
sbb
repnz
mov
js
push
pop
sbb
xor
lock
lods
movsb
lcall
movsb
mov
xchg
cmp
sub
mov
les
pushl
pop
js
clc
xchg
into
enter
pop
and
rolb
movsl
loop
xor
cld
sarb
nop
push
jnp
pop
or
jmp
or
movsl
cli
les
xchg
inc
sbb
cwtl
gs
sahf
jns
mov
jne
push
sbb
inc
inc
xchg
cmpl
mov
jae
dec
in
cld
adc
mov
fbstp
ss
cmp
pop
xor
sub
pop
sbb
push
mov
jg
mov
xchg
cmp
lahf
xor
mov
xor
dec
push
je
xor
or
inc
xchg
sbb
gs
fucomi
add
adcb
outsb
leave
add
mov
rorl
dec
xor
sti
mov
test
sarl
push
adc
fwait
adc
popa
push
sbb
in
mov
xchg
inc
mov
dec
in
stos
jne
sub
xchg
sbb
in
lea
jns
shlb
in
or
andb
cltd
ljmp
push
mov
stc
fcomip
add
fwait
push
adc
imul
test
mov
pusha
jmp
sub
sbb
mov
xor
push
sbb
shlb
mov
aam
adc
stos
aas
add
mov
inc
jg
das
in
inc
ret
out
fdivs
or
push
nop
rcrl
dec
or
or
jno
or
mov
push
fsts
pop
mov
or
lea
push
cld
outsl
jge
stc
push
mov
or
jo
pop
xlat
fildll
out
xlat
leave
sbb
jmp
ja
mov
jo
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
and
jmp
js
in
js
fsubs
ror
or
daa
mov
dec
xchg
lods
icebp
push
bound
add
ret
sahf
pop
inc
sbb
stos
cmp
sbb
add
dec
jp
jno
or
pop
xor
scas
adc
movsb
rcrl
ja
pop
aad
jns
enter
sub
es
dec
rcl
inc
mov
fistpll
lock
push
mov
cld
ljmp
popf
test
daa
jo
dec
daa
or
pop
inc
dec
xor
fwait
push
fdivr
scas
inc
xor
hlt
cmp
xchg
popf
nop
lret
mov
pop
mov
lock
das
push
jb
sbb
movsl
fxch
ljmp
push
sahf
push
jle
lret
xor
lea
sbb
roll
ljmp
ljmp
mov
pop
pop
cmpsl
or
xchg
gs
add
pop
add
and
lds
dec
push
push
imul
xor
inc
sub
jp
cmp
aaa
sbb
xchg
insl
pusha
rcrl
dec
ja
in
cld
cltd
dec
and
xor
and
shr
mov
scas
fldt
sub
test
mov
fbld
insl
sbb
sub
lahf
in
fsubrs
sub
mov
lcall
sub
arpl
pusha
pop
pop
les
out
cli
or
lret
or
or
ss
out
adc
outsl
out
insb
dec
jge
test
jo
mov
mov
or
jae
scas
xchg
out
xchg
mov
movsb
pop
mov
inc
int
in
xchg
cmp
push
mov
sub
out
xchg
adc
out
adc
mov
cmp
or
mov
fmul
push
les
xchg
add
sbb
jne
jnp
loop
in
push
sbb
mov
sbb
mov
loop
push
sbb
sbb
stos
jb
mov
stc
mov
ja
fdiv
pop
xchg
rcrl
mov
das
ds
mov
jbe
cmpl
call
jns
or
cli
pop
pop
mov
adc
lds
dec
pop
stos
je
js
int3
adc
jge
mov
sub
pop
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
nop
xchg
pusha
js
in
js
cld
jp
cs
cmp
hlt
test
pushf
sub
cmp
icebp
lea
imul
sub
movsb
jb
mov
sti
gs
jge
add
sbb
adc
mov
pop
inc
das
and
cmp
mov
ret
popf
orl
push
jecxz
jb
sub
or
xor
xor
clc
insl
xchg
adc
cltd
js
test
pop
add
pop
pop
dec
push
mov
mov
mov
js
and
xor
lock
insb
mov
jle
pop
out
sub
jns
lods
roll
ja
add
outsb
jno
ss
lret
cmp
out
sub
jns
cmp
arpl
inc
movsl
mov
xchg
pop
lcall
std
fistpll
stc
pop
push
or
fucomip
sub
mov
dec
lret
cmc
jne
pop
mov
fdivs
in
aas
enter
jecxz
pop
dec
sbb
push
aad
mov
stc
push
scas
adcb
mov
mov
int3
incb
jmp
sbbl
sbb
add
cmp
std
mov
ficoml
sti
in
int
sti
push
add
inc
popa
mov
jge
out
ljmp
dec
mov
loope
inc
das
sbb
je
push
in
movsl
xor
mov
cmp
insl
aad
mov
push
or
add
sbb
enter
ds
shl
sub
in
mov
movsb
pop
xor
daa
xor
aaa
xor
subl
in
in
cmc
mov
hlt
sbb
add
add
in
push
pop
mov
rolb
inc
pusha
mov
xchg
sub
daa
or
push
mov
add
jne
and
fs
movsl
scas
jae
xchg
fbld
stc
cmc
jns
jle
mov
ret
inc
fisttpl
xor
pushf
xor
popf
and
mov
pop
or
pop
sub
mov
jo
cltd
in
pop
lods
xor
mov
je
xchg
out
dec
inc
dec
mulb
inc
mov
pushf
icebp
inc
mov
pop
insl
or
push
fldl
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
mov
gs
in
js
dec
xor
out
ror
cmpsb
decl
cmp
add
pop
xlat
add
xor
cld
push
les
arpl
loope
sub
iret
dec
inc
or
cwtl
xor
pushf
sbb
in
jg
shlb
jp
insb
cltd
sub
mov
fwait
lods
mov
fwait
xchg
scas
loop
or
or
add
addl
movsb
or
das
imul
sti
add
movsb
js
push
mov
sti
add
add
test
pop
in
xchg
icebp
jae
push
and
add
pop
push
fnstcw
adc
lods
adc
fdivrl
push
out
ja
aam
pop
lahf
bnd
pop
xchg
pop
sbb
cld
idiv
loope
or
pop
add
enter
mov
daa
clc
cmp
push
cli
shl
lods
or
cmp
insb
sub
dec
add
cs
xchg
into
jno
cmp
mov
xor
add
push
hlt
mov
repnz
pop
cltd
in
inc
repz
dec
pop
mov
dec
dec
fidivrs
sub
fildll
in
pop
in
and
int3
clc
rep
add
icebp
adc
cmp
jmp
push
stos
jecxz
js
adc
test
fbstp
jb
add
arpl
in
dec
insl
mov
pushf
ljmp
adc
add
pop
lret
lcall
mov
lcall
je
mov
cltd
or
enter
out
dec
pop
aas
pushf
jmp
mov
mov
hlt
stos
fldenv
adc
jecxz
test
outsb
adc
lds
cmp
jns
hlt
fwait
sub
enter
lock
sub
mov
pop
or
ret
push
pop
sub
or
xchg
out
or
lcall
imul
cmp
ljmp
popa
mov
sbbb
pusha
test
in
cmp
dec
sub
xor
mov
lret
mov
inc
jmp
inc
add
jmp
or
test
lods
adc
ret
ret
mov
jns
cmc
repz
and
cmp
mov
test
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
jnp
pop
or
in
js
js
xchg
jo
cmp
dec
add
push
repz
sbb
sbb
mull
call
dec
mov
or
adcl
gs
divb
call
pop
in
or
out
mov
xchg
jb
or
out
xor
mov
scas
jl
outsl
fcompl
add
pop
push
pushf
push
imul
jecxz
addl
in
lds
fimuls
in
loop
fidivrs
sbb
and
sub
cmp
aas
xor
push
add
or
xor
das
repnz
adc
inc
mov
dec
xchg
xchg
repz
iret
int
std
add
enter
pop
sub
test
popf
sub
cltd
push
in
mov
je
dec
lahf
cmp
mov
push
push
movsl
loope
mov
rcrl
xchg
rolb
fsubs
push
jbe
jmp
and
xor
dec
test
lcall
jne
jle
dec
aas
and
lds
xor
xchg
scas
jb
into
sahf
outsl
push
fs
les
lret
cmc
push
and
add
sub
loop
lret
jl
shrl
mov
inc
std
sbb
mov
jns
in
sub
mov
push
inc
xchg
and
scas
cltd
ja
sub
push
adc
cmp
mov
jl
xor
out
xor
and
bound
mov
pop
popa
sbb
fst
roll
push
mov
jle
into
ret
cmp
cmp
ja
imul
mov
stc
or
gs
sbb
xlat
stc
outsl
negb
sub
mov
pop
xlat
aas
xlat
inc
sub
cmp
and
mov
or
dec
or
pop
cld
imul
xlat
xchg
xor
loope
mov
or
aas
pop
adc
sbb
push
and
and
mov
notb
push
lock
pop
fistps
pop
lret
mov
lds
pop
mov
pop
cmpsl
lcall
sbb
popa
mov
fwait
test
sti
inc
sbb
xchg
iret
imul
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
pop
jle
popa
push
imul
push
pop
pop
cs
dec
imul
rsm
mov
dec
jmp
lahf
sub
icebp
jp
std
dec
adc
push
adc
aas
pusha
pusha
adc
mov
and
add
cmp
mov
pop
arpl
sub
rorb
orl
pop
jle
std
mov
add
out
mov
sub
xchg
loope
dec
fisubs
icebp
cmp
mov
ret
lahf
mov
out
inc
into
mov
adc
test
sub
fdivrs
rorb
jo
pusha
inc
pop
fcmove
jns
pop
sub
cmp
mov
insl
mov
stos
fwait
ja
mov
lret
mov
cmp
jno
mov
ss
add
scas
out
pop
mov
or
es
fs
into
lods
cld
enter
mov
jle
ss
inc
push
mov
js
dec
fstl
cmp
add
subl
ret
lods
ficompl
and
jle
fisttps
cli
insl
subl
jl
or
in
jmp
addb
cli
insl
pushf
popf
cmpsb
dec
and
lds
cmp
dec
aaa
mov
sbb
icebp
sub
mov
sub
stc
iret
add
inc
inc
ljmp
ror
jp
hlt
pop
lock
mov
mov
shll
arpl
pop
adc
out
dec
std
int3
mov
dec
and
mov
dec
test
or
pop
mov
mov
les
nop
shrb
rol
pushf
mov
mov
mov
jnp
add
pushf
mov
outsb
jo
or
ficoms
sub
cld
in
or
cwtl
cmpb
dec
jns
incl
inc
cmp
mov
dec
rcll
es
fs
jp
xor
fstpl
mov
loopne
repnz
arpl
or
stos
cmpsl
cwtl
cmp
daa
ret
pop
jns
in
mov
sub
jns
pop
ljmp
fcom
mov
es
ja
fwait
ret
jo
fwait
sub
xorb
or
xlat
pop
js
lods
inc
gs
fdivrl
mov
jle
mov
jmp
iret
ret
rol
fcmovnu
mov
xor
cmp
jle
js
or
push
mov
out
cwtl
xor
movsl
mov
rol
push
and
lds
dec
dec
fimull
mov
bound
out
push
adc
pushf
stos
fistl
xchg
sahf
sub
std
jne
in
push
lret
push
inc
and
dec
fmull
pop
popa
subl
in
jne
or
out
leave
pop
adc
add
shll
repz
dec
data16
add
es
loope
pushf
pop
rcll
jnp
cmpl
mov
cmc
ret
aaa
cmovle
dec
dec
pop
jge
jbe
push
outsl
das
rclb
jne
fbld
pop
or
cmpsb
mov
jae
scas
or
xchg
daa
cmp
test
dec
adc
xchg
stc
jb
shrb
cld
or
inc
inc
and
jge
jmp
cmpsl
cld
pop
ljmp
addr16
shll
xor
mov
adc
mov
mov
loop
push
mov
push
push
je
pushf
push
fistpll
inc
inc
mov
inc
lcall
push
in
jg
dec
andl
out
cmp
dec
sbb
adc
out
lods
pop
and
clc
mov
fstl
lcall
test
add
mov
test
gs
cmp
push
mov
sub
leave
in
xor
sub
cmp
insb
aas
add
add
nop
push
jae
mov
jb
scas
shlb
nop
rcrl
adc
push
or
popa
imul
ret
inc
push
inc
push
xlat
loope
xor
mov
xchg
pop
or
pop
push
jmp
jnp
cmp
lcall
jecxz
push
push
jns
push
out
leave
sahf
clc
sahf
dec
test
lret
fs
xchg
fs
or
push
mov
fcompl
cld
or
in
cmp
stc
xchg
jae
or
mov
sbb
cli
push
mov
idiv
and
call
cwtl
cmpsb
push
pop
test
bound
cli
stc
fldt
pusha
bound
stos
fcmovnb
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
xchg
js
in
js
movsb
mov
stos
sbb
mov
sub
loop
lods
pop
pushf
test
scas
and
jnp
call
mov
outsl
je
pop
jl
enter
cmpsb
ja
andb
mov
fwait
out
div
jg
fiadds
and
outsl
xchg
inc
push
lock
fwait
jb
cmpsl
dec
sub
repnz
jne
shll
stos
adc
aam
pop
test
and
popa
bound
mov
and
mov
aaa
stos
xor
sahf
cmpsb
std
mov
dec
xor
sub
pop
pop
out
data16
jmp
hlt
lret
les
and
sbb
adc
sbb
test
nop
xchg
lods
push
movsb
jno
mov
cmc
push
xlat
mov
daa
mov
adc
cmp
or
or
dec
cld
mov
adc
jb
shrl
push
adc
xchg
scas
mov
jl
ljmp
mov
scas
xor
int3
lds
add
sarl
jb
scas
add
xchg
pushf
nop
call
jmp
add
sub
jae
fcoms
or
stos
mov
or
arpl
es
push
je
jnp
lret
aaa
or
push
cltd
popa
mov
aam
sub
insb
xor
fadds
movsl
or
enter
and
mov
push
inc
sbb
dec
cmp
jne
sub
xchg
xchg
lock
dec
inc
lods
pusha
daa
add
shll
jl
jmp
cmpsl
mov
lea
stos
mov
xchg
pop
mov
xlat
mov
iret
dec
lret
push
insb
mov
ret
sub
pop
sbb
loope
xchg
es
mov
xchg
outsb
pop
arpl
sub
cld
arpl
sbb
cmp
dec
pop
inc
add
inc
jns
int3
into
arpl
cmpsb
and
mov
sti
out
or
aaa
int
lret
inc
pop
jae
inc
push
fcoms
xor
mov
pop
stos
sbb
stos
jge
jns
and
int3
adc
fcompl
cwtl
pop
js
stos
scas
imul
sar
add
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
fsubl
jne
jno
js
jle
js
sbb
mov
outsl
xor
test
hlt
sbb
cwtl
add
out
popa
xchg
and
lret
ret
mov
outsb
pop
outsb
aad
add
jnp
insl
dec
int3
push
movsb
mov
lods
insb
sub
xchg
dec
xor
mov
jb
loope
xor
mov
push
pushf
lret
mov
sub
enter
push
aaa
daa
push
ret
movsb
adc
lret
or
and
sbb
and
inc
sar
or
ljmp
icebp
stc
in
sub
sbb
adc
das
seta
pushf
jmp
imul
or
adc
aaa
mov
push
or
fs
cwtl
sub
and
sub
xor
aad
out
cmp
add
call
lahf
pop
iret
jnp
outsl
outsl
xchg
xchg
cmp
xor
pop
push
cmp
data16
dec
mov
add
enter
out
into
cmpsl
pop
out
dec
sub
pop
push
sub
push
leave
imul
rorb
nop
jnp
xchg
icebp
dec
pop
and
or
mov
imulb
pop
pop
push
xlat
test
inc
mov
cltd
mov
cmp
pop
outsb
sbb
xchg
fadd
fldpi
cmpxchg
fsubr
xor
dec
push
xor
jo
lock
or
gs
or
xchg
leave
rcll
adc
mov
push
or
adc
mov
jo
mov
dec
outsb
mov
aad
xor
and
mov
cmp
jnp
mov
mov
daa
lahf
mov
call
or
xor
dec
dec
jecxz
ret
mov
das
add
xchg
sub
lret
mov
aad
aam
xor
and
jo
dec
xchg
cmpsb
sbb
sub
push
dec
int
cwtl
popa
mov
pop
lret
adc
cmc
loop
roll
mov
inc
cmp
cmc
mov
aam
lods
push
and
outsl
movsb
andb
fadd
dec
adc
cltd
js
xor
adc
test
in
mov
push
fistpl
xchg
stc
mov
dec
call
and
les
mov
mov
jmp
int
xlat
enter
shll
std
xchg
xchg
push
ja
js
jle
js
pop
pushf
stos
idiv
mov
iret
in
rcrb
add
adc
adc
add
mov
insb
mov
je
js
or
sarb
jmp
adc
xor
jp
mov
inc
flds
cmp
sub
add
and
push
add
push
rcll
push
push
dec
jne
lret
sbb
add
fwait
into
nop
adc
mov
stos
js
imul
not
in
cmp
sbb
lock
mov
jns
loopne
push
cmp
in
divb
nop
mov
xor
cmp
scas
fwait
push
sti
loope
stos
cmp
mov
push
inc
aaa
dec
mov
push
inc
adc
sbb
loopne
dec
arpl
sbb
je
test
int
jecxz
adc
testb
mov
add
push
int
or
jl
shlb
push
pop
pop
mov
cld
fcmovu
ror
xchg
jecxz
sub
jnp
insb
pop
fidivrs
int
sbb
push
sarb
idivl
dec
sahf
xor
out
fldt
cltd
jmp
mov
insl
cli
imul
pop
fsubp
je
fsts
stos
cmp
push
cmpsl
push
nop
lahf
inc
fcoms
sbb
fwait
std
fsubs
push
lea
cs
repz
fisubl
mov
mov
cmp
jg
daa
mov
xchg
adc
jmp
gs
clc
mov
push
mov
cmp
push
rorb
pop
scas
orb
test
xor
das
mov
push
sbbl
push
lret
jae
jmp
divw
xchg
ret
jmp
clc
insl
shl
arpl
mov
push
pusha
in
repz
sub
pop
add
push
and
das
test
out
adcb
cmc
push
insb
mov
out
fldcw
das
adc
shll
xchg
aam
jo
adc
inc
movsb
scas
icebp
jnp
mov
enter
mov
out
jle
loop
lret
popa
sti
push
lods
test
fcmovnu
jne
xchg
sbb
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
lret
jmp
js
jle
js
es
mov
mov
das
lret
add
adc
dec
lds
rorb
movsb
push
adc
or
xchg
fidivs
jnp
jno
ret
movsl
jb
adc
sub
stc
mov
dec
add
sbb
jo
and
rcr
aam
imul
mov
jbe
lret
inc
nop
outsb
fadds
sub
xchg
negl
lea
xlat
insb
stc
fcoms
inc
mov
je
cwtl
jns
jbe
mov
outsb
mov
sub
sarb
cld
out
mov
in
aaa
xchg
cmp
fs
push
sub
push
and
xor
adcl
cmpsb
mov
sbb
xchg
jo
jmp
out
sbb
push
dec
lods
pop
jg
ss
pop
jecxz
movsl
je
add
dec
push
mov
and
jle
cmp
loopne
pop
push
xlat
cli
push
nop
mov
std
push
jae
aaa
sub
sbb
cmp
hlt
cmp
lret
push
mov
dec
jle
pop
popa
push
movsb
sub
int
xchg
or
sub
int3
jl
dec
mov
pop
cmpsl
jecxz
fisttps
sub
fidivrl
pusha
popa
pop
push
cmp
dec
das
rorl
aam
addr16
or
iret
mov
cwtl
pop
xchg
mov
push
or
ss
call
jmp
hlt
lea
hlt
js
aaa
scas
fsubs
mov
sti
push
jmp
inc
jne
int3
xlat
jp
std
fwait
cs
or
push
xchg
scas
les
or
lahf
imul
xchg
imul
aam
fdecstp
xor
add
out
xor
stos
jg
es
aam
sti
push
pusha
mov
cli
xchg
loop
cli
jmp
aad
shlb
test
int
mov
cs
push
or
xor
cli
push
adc
repz
and
xchg
scas
lcall
xlat
inc
out
jno
jmp
mov
xor
pop
add
dec
mov
xor
mov
mov
arpl
and
and
cwtl
or
jae
test
jle
pop
mov
imul
cmp
xchg
adc
iret
sub
pop
ret
xchg
daa
lds
push
shll
stos
mov
or
jns
stos
xchg
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
lcall
js
jle
js
fcoml
dec
jae
mov
das
nop
adc
push
ret
mov
pop
subb
adc
shlb
ja
ds
cmc
insl
and
jecxz
jbe
fisubrl
mov
push
clc
mov
xchg
add
fs
sub
in
outsb
mov
mov
add
pop
inc
fdivl
mov
std
dec
push
stos
out
movsb
xchg
shl
mov
mov
pop
fdivrl
dec
and
xor
js
fbstp
pop
inc
addr16
sti
insl
shr
dec
mov
jnp
sub
fwait
push
scas
xchg
les
jge
sub
cmp
das
cmp
xor
xchg
paddsb
lahf
or
sub
cmp
idivb
repnz
stos
jno
outsl
jno
mov
test
aas
movsb
sbb
loop
in
stos
idiv
xchg
add
inc
movsb
xor
std
pop
jl
or
clc
mov
dec
fcmovne
shrl
xchg
xorb
jno
and
adc
jl
fxch
sub
sahf
test
mov
pushf
arpl
stc
test
mov
outsl
jbe
scas
ret
cli
rcr
add
lds
or
clc
sbb
test
iret
xchg
inc
lods
jmp
xchg
insb
or
pop
jp
dec
enter
rorl
adc
mov
mov
sub
mov
jl
aaa
insb
jle
lahf
addl
cltd
lods
pop
push
ljmp
cwtl
fdiv
add
mov
xor
out
push
dec
cmp
xchg
mov
insb
add
clc
ljmp
shrb
in
mov
mov
jp
dec
stc
pop
sbb
out
push
push
xor
je
or
add
test
bound
in
sub
mov
adc
repz
push
jne
lcall
lds
popa
xor
fnstsw
or
fcompl
sti
sub
adc
cmp
xchg
in
gs
insl
mov
mov
mov
xor
adc
out
mov
jmp
mov
scas
jbe
aad
push
push
mov
push
and
add
aaa
lcall
pop
addb
inc
std
push
add
mov
mov
jmp
enter
cld
imul
rolb
jg
in
js
leave
aas
hlt
cmc
sub
pop
xor
xor
repnz
js
pop
sub
test
loop
cwtl
xor
lcall
or
mov
repnz
addr16
bound
mov
mov
lock
add
stc
fwait
das
push
aad
jmp
ds
dec
pop
mov
shlb
movsl
jge
adc
jae
popa
inc
push
iret
bound
xlat
testb
call
inc
mov
divb
sbb
jmp
imul
fwait
or
xchg
or
cli
add
inc
cwtl
lock
lcall
mov
and
adc
int3
inc
pop
rep
outsb
sahf
sbbb
cmp
jmp
add
das
inc
sar
push
jg
mov
cmp
add
mov
jg
jne
int3
jnp
ja
dec
leave
xor
int
pop
rorb
mov
imul
mov
xor
jne
sbb
mov
test
jecxz
sub
or
adc
and
icebp
mov
jbe
sahf
icebp
pop
jb
or
pushf
or
fxch
add
adc
enter
lret
and
cmp
out
int
pushf
repnz
lahf
dec
aas
rcr
mov
mov
mov
jl
orl
pop
ljmp
adc
in
pusha
sub
dec
cmp
dec
mov
cli
or
cmpsl
popa
mov
xor
outsl
ss
aam
aas
jbe
insb
jle
insl
negb
mov
push
mov
lds
jns
movsl
in
ljmp
repz
mov
call
popa
pop
push
xchg
test
push
in
adc
pop
xor
outsl
in
and
jge
lods
mov
mov
outsl
cld
xor
inc
int3
hlt
test
xlat
arpl
test
movsl
push
push
or
insl
sub
mulb
mov
dec
gs
adc
das
adc
popf
xchg
ret
idivb
lret
pop
lods
or
ljmp
xor
call
stmxcsr
ja
xchg
mov
out
mov
xor
jl
inc
or
clc
mov
or
sub
or
movsb
call
xchg
in
jg
pop
jmp
cltd
cld
cmp
hlt
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
push
or
in
js
sbb
sub
push
cmp
lods
mul
call
pop
out
mov
aam
inc
or
int3
adc
adcb
pop
cmc
lcall
pop
cmovl
pop
mov
scas
test
js
nop
add
sub
dec
add
popa
or
loop
bound
test
xor
outsb
cmpsb
mov
sub
sub
jp
fldcw
cwtl
notb
or
and
mov
add
jecxz
mov
stc
inc
imul
nop
clc
je
lds
pop
out
xor
aaa
out
fcmovbe
sub
mov
aam
inc
cmp
mov
pop
fs
out
decb
cmp
mov
movsb
mov
dec
addr16
sub
jae
fildll
psubsb
adc
dec
sbb
aad
or
repz
or
clc
arpl
or
jae
mov
outsl
loopne
jg
aam
cwtl
int3
xorb
mov
mov
inc
sarl
fwait
aas
cld
push
test
dec
aad
pop
mov
mov
cmp
fcmovbe
xchg
setp
addl
sub
adc
fdivs
shlb
fisttps
loopne
and
jmp
dec
je
sbb
out
inc
jge
jg
sub
xor
pusha
xchg
pop
es
into
fistps
in
push
dec
xor
xor
push
fs
jmp
fwait
pushw
xchg
sti
xchg
outsl
out
pop
lods
clc
and
jb
jo
lcall
mov
daa
es
out
ljmp
jle
mov
or
jge
fcoms
inc
cmp
sub
fcoml
daa
cmp
test
insl
fistps
jmp
inc
lods
xchg
and
int
jbe
adc
fadds
orl
and
mov
leave
test
dec
repnz
dec
or
out
bound
lahf
jp
mov
and
mov
cmc
inc
mov
lcall
jecxz
in
cmpsl
push
or
roll
ret
mov
add
xchg
enterw
loope
sub
inc
je
out
rclb
xchg
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
lock
in
js
jl
sub
xlat
and
repnz
aam
out
cmovl
roll
push
pop
mov
cmpsb
inc
in
sbb
sub
cmpl
mov
aas
stos
xchg
int3
jb
inc
xchg
mov
or
rorb
push
mov
pop
jns
cwtl
cmovb
loope
mov
mov
or
sub
rol
cltd
inc
mov
xor
fsts
leave
shrl
xor
mov
cltd
cmp
xchg
or
cld
fcmovnu
call
loopne
mov
ja
sub
or
fidivrl
push
fs
mulb
mov
popf
icebp
fsubp
fsubrs
mov
inc
xor
pop
rclb
or
jns
inc
dec
mov
stc
cmp
std
divl
std
sub
mov
cli
jmp
adc
jge
je
push
mov
add
pop
enter
mov
mov
push
fiadds
jae
pop
mov
ja
fldenv
adc
movl
aaa
or
arpl
dec
jecxz
sbb
int3
sub
test
mov
mov
xchg
mov
or
xor
out
and
dec
adc
mov
jmp
cmpsb
xor
xor
movsb
idivl
ja
and
cs
mov
gs
sbb
xchg
stos
call
adc
xchg
mov
mov
adc
mov
add
out
stc
push
mov
and
xor
insb
pop
and
jns
add
mov
push
mov
xor
mov
adc
jg
push
lock
dec
fimuls
inc
jmp
jno
leave
push
test
mov
int
fcmovb
out
pop
std
rorb
add
push
in
xor
stc
imull
cs
cwtl
ds
fucomip
pop
sbb
repnz
sub
repz
mov
pop
pop
xchg
scas
cmp
inc
xor
push
fldt
mov
mov
sub
inc
repnz
imul
mov
xor
add
jmp
ror
iret
aam
insl
js
push
mov
js
jle
js
xor
mov
cltd
mov
jl
rolb
das
bound
xor
mull
jge
in
xchg
push
mov
fists
cli
inc
mov
or
adc
mov
das
and
pop
mov
rolb
jne
gs
inc
test
sbb
xor
addr16
pop
in
jg
aas
xor
mov
daa
sahf
fadd
pop
mov
stos
cmp
popa
adc
mov
insb
ficomps
mov
mov
addr16
notl
mov
dec
or
jbe
lahf
pushf
notb
outsb
dec
ja
movsl
jmp
lock
call
notl
inc
scas
cmpsl
stos
shl
xchg
ja
fmulp
lds
cmp
cmpl
mov
repz
mov
mov
sbb
sbb
push
sbb
sar
xchg
ret
lahf
mov
push
pop
xor
mov
das
aad
inc
xor
rclb
sbb
dec
enter
lds
inc
jo
jae
shlb
xor
movb
daa
mov
inc
push
xchg
aam
push
adc
outsl
or
lds
pop
test
add
dec
pusha
test
les
mov
mov
sbb
pop
shrl
cmp
fsub
es
xor
test
rorl
imul
sti
out
adc
push
out
mov
sahf
push
jns
jl
aad
stc
scas
mov
aas
cmp
xchg
and
movsl
push
adc
js
daa
ret
adc
inc
jmp
mov
add
xchg
push
lds
loopne
je
sbb
jmp
sbb
pusha
fs
popl
cmc
fs
das
cmp
xchg
jmp
sbb
into
sti
lds
push
mov
lea
outsb
pop
mov
in
into
cltd
fbld
mov
or
hlt
out
add
lret
sbbb
in
xchg
jmp
xor
in
push
pop
push
fimull
lods
aad
cmpsl
out
add
in
inc
or
fwait
mov
arpl
fdivr
inc
push
or
push
pop
pop
imul
mov
jmp
rol
leave
rcr
rcr
enter
adc
scas
dec
out
push
jg
in
js
jp
inc
mov
je
sub
movsb
clc
movsb
jb
xor
jl
fcomip
pop
les
cmpsl
or
dec
xchg
add
jmp
lock
sub
imul
jl
pop
adc
ret
jl
xchg
fdivl
js
jg
fnstenv
cld
lock
pop
add
jb
pop
popa
es
dec
addl
sub
in
jb
sbb
xchg
test
out
aaa
jl
jmp
test
or
jne
adc
sbb
cmp
stos
cmpsb
jb
adc
cltd
cmp
cmp
arpl
dec
enter
fs
xchg
daa
adc
xchg
outsl
nop
mov
mov
nop
mov
push
jg
xor
pop
cld
mov
hlt
out
mov
cmp
loopne
mov
push
xlat
arpl
inc
and
fidivl
xchg
adc
xor
dec
sub
adc
fidivs
dec
jmp
sub
adc
fucomi
dec
inc
and
dec
les
in
push
push
cs
pusha
inc
dec
fsubs
push
push
fs
popf
inc
imul
cmp
jmp
inc
sub
std
pop
rcl
pop
scas
push
cmpsb
mov
xchg
mov
pop
xlat
sub
nop
sarb
xchg
add
fisubrs
dec
dec
jl
popa
lock
lahf
jg
or
pop
rclb
xchg
sahf
out
ret
js
and
iret
std
inc
addr16
inc
enter
sbb
and
movsl
sbb
jns
adc
jl
push
rcrb
pop
add
cmp
fs
popa
mov
ja
ror
movsb
ss
inc
sbb
insb
movsl
popa
push
mov
dec
lods
lock
add
call
je
mov
pop
icebp
xchg
out
dec
lock
push
cmp
or
stos
fwait
or
and
es
pop
cmp
mov
jmp
repz
imul
add
mov
jp
pop
fstpt
mov
popf
int
sbb
leave
add
cltd
hlt
jnp
mov
and
int
bnd
jne
and
test
mov
stos
fscale
fs
insl
add
pop
xor
jmp
les
int
aam
mov
leave
outsb
add
add
js
jle
js
mov
jne
sub
stos
push
push
inc
cwtl
pushf
or
jno
imul
inc
sahf
js
call
arpl
jbe
rolb
or
inc
mov
and
pop
test
xor
fwait
xchg
pop
mov
add
jle
jg
call
lds
push
sbb
or
ret
fwait
mov
daa
mov
mov
cltd
mov
test
fwait
sarl
out
fs
jno
dec
pop
or
sbb
jnp
and
jge
push
pop
movsl
dec
stc
iret
jecxz
pop
stos
fnstcw
and
lret
sti
cltd
xor
addb
jae
aad
testb
stos
mov
rcl
add
pop
mov
imul
adc
addr16
int3
mov
or
ljmp
and
mov
popf
divb
mov
mov
fidivrl
push
orb
push
xchg
pop
ss
mov
cmp
jbe
xchg
mov
outsl
sbb
jae
push
out
rclb
xor
add
das
sti
popl
insb
push
divl
mov
test
test
jae
out
call
sub
mov
mov
rorb
push
mull
fxam
shlb
cwtl
pop
fldenv
mov
inc
ret
xchg
push
shlb
add
push
stos
add
add
xchg
daa
cmpsb
nop
test
int3
sbb
and
ficoms
lock
lock
mov
mov
mov
out
insb
fnsave
pop
cwtl
xor
fcmovnb
std
popa
test
xor
xlat
push
pop
mov
in
sbb
sub
cmp
aad
hlt
icebp
inc
mov
dec
or
adc
leave
lock
loopne
mov
insl
out
push
sub
mov
popa
xlat
mov
xchg
pop
add
push
xchg
inc
leave
in
pop
adc
jecxz,pt
movsb
repnz
or
push
cltd
lret
push
push
enter
jmp
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
fcmovnb
or
in
js
push
fisttps
stos
mov
inc
push
xor
adc
pushf
add
ret
xchg
or
jecxz
insl
push
push
lahf
js
mov
gs
lods
xchg
mov
movb
cmp
loop,pn
inc
jmp
cmp
push
daa
pcmpgtb
or
cmp
andl
xchg
das
mov
idivl
mov
mov
dec
enter
cmpl
movsl
mov
loop
sbbl
sbb
repz
xchg
loope
outsb
mov
dec
xchg
fcoms
and
sbb
push
pop
mov
mov
movsb
cmp
mov
mov
ficomps
in
sbb
imul
inc
push
sbbl
dec
cmp
sarb
push
pop
and
test
fs
lea
frstor
test
inc
xchg
icebp
add
in
jl
xor
dec
inc
rorb
dec
gs
push
mov
sarl
scas
or
cmp
xchg
pop
mov
ljmp
aad
sahf
pop
into
jae
rcrl
sbb
cmp
xor
sbb
test
mov
dec
pushf
fiadds
testl
shl
inc
inc
push
sbb
xchg
and
sub
jge
inc
jp
movsb
ret
cmp
in
dec
pop
add
inc
mov
inc
fptan
cwtl
xchg
mov
fs
push
jae
sbb
jae
ss
dec
or
inc
jge
clc
dec
data16
fadds
fldl
icebp
cmp
cmp
cmp
and
pop
mov
lcall
lahf
mov
fcmovnu
into
xor
mov
push
pusha
and
xor
add
xchg
call
loopne
sub
jo
sub
and
pop
dec
dec
lea
and
aad
cwtl
sub
sbb
mov
sbb
mov
insb
cmp
sub
lahf
mov
fsubrl
shll
add
cmp
stc
cwtl
test
outsb
ret
mov
into
cmp
out
pop
mov
mov
dec
imul
mov
jmp
lret
ret
vpand
ret
addb
mov
movq
jle
js
pop
popa
lret
xor
cmc
sub
push
and
jp
stos
out
cli
xchg
mov
imul
mov
or
lock
xchg
push
shlb
xor
in
lahf
std
stos
pop
pmuludq
xor
bound
xchg
repnz
push
add
dec
rorb
test
mov
jnp
push
lock
dec
adc
xchg
xchg
xchg
sub
fnstsw
js
adc
xor
adc
mov
adc
sbb
int
dec
movsb
cmp
mov
imul
in
lock
xchg
and
mov
cmpsb
out
xor
jecxz
je
lds
insb
out
dec
fdivrp
mov
loop
fsubl
mov
test
cwtl
sbb
jmp
mov
stos
fwait
xchg
jns
cltd
jecxz
xchg
adc
popl
dec
mov
fistpll
pop
or
lods
pop
stc
push
mov
pop
je
popa
outsb
fldt
enter
arpl
int3
sub
cmpsl
push
mov
sub
fsubs
out
lods
add
pop
cs
mov
sub
sub
aaa
outsb
fisubrl
lock
idiv
add
fdivl
or
dec
cmp
ds
dec
imulb
sub
push
push
or
sbb
jp
push
mov
jne
lret
pop
adc
popf
inc
xor
repz
nop
push
jae
outsl
inc
sub
into
sbb
shll
add
or
jb
push
mov
fdivr
hlt
movsl
mov
sbbl
pushf
or
out
xchg
jl
shll
mull
mov
xchg
add
bound
cltd
push
lods
inc
xchg
xchg
std
sbb
jmp
mov
pop
pop
mov
mov
cmpsl
cs
arpl
and
push
xor
loopne
mov
dec
aaa
pop
inc
fwait
jno
mov
mov
dec
int
out
orb
xlat
inc
mov
push
test
jmp
fadds
dec
mov
xchg
loope
popa
inc
push
out
out
and
mov
sbb
pusha
aad
add
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
lahf
ja
sbb
js
jle
js
lock
aam
xor
out
jge
inc
lods
and
jo
sub
dec
pop
sub
cmpsl
jle
sub
ret
clc
cld
jmp
sub
xchg
mov
stos
fldcw
xchg
sbb
mov
jl
shl
xchg
repz
jns
jle
mov
sahf
jmp
insl
or
dec
xlat
sti
dec
jl
inc
sub
sbb
and
test
lret
mov
insb
stc
add
dec
and
bound
inc
loopne
xchg
jmp
push
shlb
push
pop
add
insb
mov
xor
pop
daa
add
adc
pop
pop
adc
push
sub
mov
stos
cld
inc
mov
scas
mov
inc
orl
mov
out
sub
xor
out
push
cld
insb
mov
xor
mov
xchg
mov
int
inc
out
mov
mov
sub
loope
xchg
dec
push
cmpsl
icebp
dec
sub
cld
push
cmc
mov
ja
xchg
test
sub
in
rol
xchg
adc
lock
fldl
mov
mov
push
xor
cld
fdivl
test
and
mov
add
jbe
mov
mov
and
fcoml
out
jb
loopne
mov
jmp
lret
sbb
mov
jo
add
dec
mov
pop
and
ds
xchg
mov
add
cmp
cwtl
loopne
pop
mov
mov
push
mov
out
cwtl
mov
add
je
mov
mov
in
push
pop
inc
add
dec
or
fidivs
icebp
outsb
shr
cmp
fwait
jmp
sub
cmp
rclb
lret
in
push
cmp
cmp
scas
cmc
push
dec
fiadds
xchg
fidivs
push
inc
adc
std
bound
aaa
test
rcll
fs
mov
jge
mov
sbb
adc
xchg
loop
mov
sub
cmp
push
mov
imul
scas
sub
mov
dec
sub
xorl
cs
shll
pop
dec
je
xor
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
and
mov
jg
in
js
fsub
xor
les
inc
and
cmp
mov
mov
sub
fmull
loopne
jg
pop
lods
fdivl
mov
les
xchg
xor
dec
xchg
gs
js
stos
scas
pop
pop
scas
xchg
or
out
jae
mov
push
scas
ret
aam
jmp
mov
scas
cmp
mov
popa
adc
inc
out
jo
imul
loope
lods
shrb
mov
test
xlat
outsl
push
mov
insb
cmp
or
lahf
out
das
fwait
pop
jno
jmp
std
arpl
pop
clc
xor
sti
imul
out
jge
add
addb
push
or
imul
sbb
scas
pop
or
rclb
nop
les
notl
jbe
add
push
mov
rcr
ljmp
mov
pop
jbe
adc
test
mov
and
push
cmpsb
aaa
in
ror
jp
das
stc
es
adc
test
xor
ss
test
push
pop
pop
cmc
cld
inc
jae
rcl
inc
dec
outsl
pushf
jb
or
xor
mov
push
das
pushf
mov
sbb
lods
jmp
mov
pop
lds
mov
clc
ficompl
and
outsb
pusha
jae
mov
mov
xchg
stc
and
fisubrl
les
dec
push
cmc
insb
rcrl
and
aas
cmp
mov
pushf
std
adc
inc
add
jmp
cmpl
shlb
jbe
or
in
imul
inc
lock
or
mov
mov
dec
xchg
aam
dec
aas
int3
cmpsw
fistpl
xor
in
dec
mov
pop
insb
in
mov
push
mov
cmp
pop
jp
dec
daa
mov
rcr
inc
jnp
push
push
push
xchg
shrl
cmp
mov
repz
inc
movsl
xchg
les
or
sub
ljmp
mov
inc
xchg
push
insb
pop
add
sbb
dec
in
mov
sti
pop
sub
jne
inc
cmpsl
rolb
jb
mov
mov
inc
sbb
sbb
push
mov
inc
shlb
shrl
into
mov
mov
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
sbb
xor
jg
xchg
jle
js
ds
cs
mov
cmpsb
jmp
sbb
dec
pusha
in
jecxz
cmp
pusha
dec
gs
mov
lock
fdivrs
jns
cmpsl
int3
adc
cli
dec
lret
and
cwtl
inc
mov
fisubrl
aam
sub
mov
cmpsb
arpl
popf
ret
push
inc
pusha
or
dec
bound
jl
add
jbe
sbb
shll
xor
pop
aad
xor
dec
mov
out
sti
popa
and
fucomip
mov
test
pop
dec
clc
sub
add
js
mov
ja
dec
push
sub
test
jg
icebp
mov
cwtl
mov
lcall
adc
rcrb
or
cmp
out
xchg
mov
mov
cmp
mov
daa
xor
mov
push
and
out
or
xchg
sbb
push
sub
icebp
insb
add
xchg
jmp
jg
aam
sub
jno
loopne
aaa
sub
jle
mov
bnd
and
lods
add
dec
sub
or
fs
sub
jne
xchg
xor
rcr
jg
arpl
sbb
dec
popf
inc
xor
call
mov
push
mov
mov
es
xor
mov
or
xor
and
pushl
or
xchg
adc
cld
popf
orb
push
or
ss
jle
xchg
fmull
adc
mov
mov
adc
jmp
call
add
out
jmp
test
outsl
and
pop
cli
push
xchg
movsb
shll
fcomps
jp
cmc
aam
sub
std
inc
sub
jecxz
mov
cmp
repz
in
in
sar
lahf
mov
xchg
loopne
stos
lods
mov
push
fs
aas
ret
scas
fildll
add
call
arpl
sbb
roll
shlb
repz
or
sub
pop
cmc
xchg
lret
mov
fwait
xchg
test
adc
test
jne
aaa
pushf
push
bound
xchg
xlat
ss
out
sub
jmp
popf
cltd
jp
push
dec
push
pop
adc
hlt
inc
scas
sub
out
push
inc
pop
mov
mov
arpl
pop
inc
cli
add
or
push
je
pusha
mov
jp
inc
xor
pop
mov
test
sbb
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
xchg
or
jg
xchg
jle
js
mov
mov
in
dec
adc
int
aas
imul
sub
loopne
jne
mov
fcompl
add
arpl
cld
pop
icebp
jmp
cmp
cmp
pop
ret
xor
xchg
inc
dec
mov
jb
enter
mov
pop
mov
xchg
and
daa
push
fcoms
inc
das
jns
fstl
cwtl
jb
cmc
xchg
adc
ja
push
dec
fmuls
sti
in
inc
test
scas
adc
repz
sahf
add
pop
sub
xchg
insl
xchg
xlat
addr16
add
cld
divw
test
or
push
iret
pop
add
mov
in
lahf
pop
out
jne
add
arpl
mov
es
mov
outsb
lods
rclb
mov
pusha
jno
sub
adc
xchg
and
cmp
fsubp
mov
enter
in
dec
bound
add
adc
fdivp
shll
scas
pushf
psubusw
lock
mov
pop
scas
xor
pop
dec
movsl
mov
mov
cmp
adc
jb
mov
push
jge
mov
insl
inc
aaa
jb
jbe
xchg
add
enter
out
les
inc
inc
mov
sub
cmp
pop
popf
ljmp
ja
pop
jle
pop
fs
sbb
mov
push
incb
aad
jmp
aam
cmp
cmc
mov
mov
pop
mov
cli
fwait
out
adc
pop
jbe
mov
cmp
xor
mov
or
es
xchg
xor
and
push
sahf
add
in
xorb
int3
and
jnp
cmp
adc
jae
push
mov
notl
mov
xor
lea
js
ljmp
js
fsub
xchg
jecxz
push
mov
insl
add
xchg
add
aad
dec
movsl
cli
shrl
mov
out
sbb
mov
push
repnz
mov
loope
sub
sub
ret
jmp
mov
xchg
jnp
xor
mov
xor
fistpll
push
add
push
es
clc
faddp
std
dec
clc
cmp
push
push
dec
adc
mov
mov
fiaddl
and
pop
mov
clc
dec
jb
jo
cmpb
stos
imull
mov
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
mov
les
xchg
jle
js
out
in
aad
ja
mov
inc
jno
add
mov
repz
movsb
into
daa
mov
cs
xor
ds
cli
push
dec
push
and
shll
hlt
sub
mov
xchg
ret
mov
loop
ja
rcr
ja
push
adc
shl
out
xchg
sbb
inc
fisubrl
ds
or
inc
stos
aam
lcall
enter
mov
jns
push
mov
push
call
xchg
jmp
dec
lret
int
fwait
jnp
ret
and
jno
fmul
ret
shrl
push
loop
test
jmp
lahf
pop
rolb
pop
dec
fcmove
push
push
aas
mov
mov
xor
sbb
jne
push
pop
fdivp
pushf
scas
sbb
and
in
push
or
xchg
mov
jmp
aaa
or
mov
sub
push
mov
sti
fidivrs
jecxz
jno
inc
push
inc
cmp
pop
xor
mov
pop
jl
les
mov
and
mov
sub
jne
sbb
xchg
mov
aad
push
sahf
xor
pmaddwd
int
mov
out
pop
adc
enter
ficoms
lock
aam
sbb
inc
or
xchg
adc
xor
mov
cld
ja
dec
sub
mov
xchg
inc
push
movzwl
aam
fsubs
iret
xor
js
loopne
cmc
dec
dec
bound
popa
adc
lret
sub
lret
xorl
or
mov
sbb
xor
in
test
pop
or
jg
inc
sahf
in
add
cmp
ds
jbe
subb
mov
ret
aad
mov
cs
mov
pop
pop
lea
movsb
jle
mov
repnz
lahf
xlat
mov
sub
and
aas
mov
cmpsb
pop
xor
mov
sbb
cmp
call
add
subl
popf
fcmovne
cmp
lcall
adc
and
fildl
icebp
dec
adc
inc
mov
adc
add
pop
outsb
std
mov
idivl
int3
hlt
inc
mov
mov
xor
pop
ljmp
sub
mov
jmp
popf
pop
test
lahf
push
jle
jp
cmp
xor
mov
xlat
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
jecxz
sbb
xchg
jle
js
mov
stos
movsl
xchg
ffreep
fstps
daa
pop
pop
mov
jg
xchg
cmp
nop
sub
adc
mov
inc
shl
std
cltd
mov
mov
push
mov
pop
ja
add
mov
call
push
pop
mov
sahf
es
push
push
cmpsb
inc
jae
pop
mov
lret
xchg
int3
popa
loope
into
sarl
pop
mov
stos
mov
scas
test
xchg
and
pop
std
shll
lret
aas
add
push
mov
ljmp
inc
mov
adc
mov
dec
xor
ret
js
ds
repz
and
lret
sbbb
sbb
iret
mov
sbb
in
mov
mov
mov
out
dec
add
lea
fsubl
and
mov
adc
cmp
jne
shl
or
stos
push
push
dec
xchg
cmp
xor
shrb
fidivl
fsubs
jecxz
push
fcoml
pop
lods
jo
dec
adc
shl
enter
mov
add
imul
stos
fsts
mov
mov
sub
mov
pushf
inc
test
sbb
arpl
sbb
orb
and
sti
push
call
push
push
pop
stc
daa
shl
call
aad
pop
popf
sub
cmp
adc
sub
fldt
inc
add
pop
push
cmp
pop
inc
jmp
mov
rcr
sahf
or
fistpll
xchg
aam
jmp
adc
mov
mov
mov
sbb
jge
fldl
mov
cmpsb
out
pop
and
sti
xchg
push
sbb
mov
xchg
mov
pop
xchg
test
lret
push
inc
loop
cmpsb
iret
fimull
jnp
mov
inc
inc
jne
pop
mov
movsb
in
out
push
sub
dec
fcmovnu
dec
out
adc
cmpsb
xor
xor
jo
mov
in
inc
ret
outsb
stc
push
das
xlat
inc
mov
bound
mov
out
insl
ds
inc
mov
les
pop
addb
sti
loop
xchg
dec
mov
int3
jl
and
sbb
psadbw
mov
nop
xchg
fwait
jecxz
dec
inc
inc
in
pop
mov
jp
mov
ficoml
cmc
and
ja
lahf
dec
sub
fdivp
push
stos
xor
insb
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
push
add
xchg
jle
js
pop
idivl
jmp
stc
arpl
xlat
and
stc
dec
out
mov
dec
int3
inc
popa
cmpsb
js
iret
test
or
movsl
cmp
cltd
push
cmp
adc
mov
xor
in
pop
je
cmpsl
jns
mov
scas
jp
test
jmp
gs
adc
daa
rcl
xor
subb
js
lods
pop
arpl
rclb
shl
dec
jecxz
push
pop
les
imul
cmp
outsb
mov
in
jbe
out
sbb
out
out
inc
xchg
cltd
jmp
lods
inc
into
xlat
aad
xor
int3
test
rcll
sbb
pop
xchg
pop
out
adc
mov
add
sti
sub
into
int
pop
or
sahf
loope
cli
loop
push
lds
inc
pusha
jo
pop
sbb
cwtl
xor
push
icebp
xchg
test
inc
xor
mov
test
jp
cmpb
or
cmp
std
int
lret
push
ret
imul
popa
pop
pop
lcall
xchg
inc
out
sbb
stos
icebp
out
add
out
pop
sub
rcrl
jo
lcall
std
jecxz
daa
mov
add
adc
push
insl
pop
aaa
mov
sub
sbb
inc
iret
sub
dec
push
mov
cmp
push
fwait
std
cmp
inc
ds
int
sbb
or
fisubl
cmp
in
mov
fmulp
arpl
ss
imul
insl
xor
mov
insb
xchg
and
shll
data16
push
cmp
mov
and
inc
xlat
add
xchg
aas
enter
fsubl
inc
idivb
and
test
ret
mov
mov
leave
movsb
test
add
out
aas
sahf
or
pop
xchg
or
xor
cltd
or
sbb
cmc
cmp
cs
shrl
xor
les
aam
into
pop
sbb
ss
and
clc
das
add
push
js
lret
subb
decl
sbb
sub
cmp
inc
rorb
in
cmpsl
repz
mov
call
ficoms
sub
movsl
pop
int3
std
loope
pop
popf
mov
scas
lcall
ljmp
aas
and
inc
clc
jmp
jmp
ds
int3
lret
xchg
aam
lods
imul
jbe
jg
xchg
jle
js
addr16
inc
outsb
pop
jl
les
dec
mov
adc
leave
pop
shlb
enter
mov
imul
xor
jo
adc
icebp
lds
or
addb
lcall
je
cli
sbbl
dec
loop
or
nop
ljmp
and
add
out
ds
sahf
aad
pop
leave
adc
dec
out
leave
es
bound
fstps
enter
mov
jl
or
sahf
into
in
jecxz
enter
push
lea
add
adc
repnz
mov
jmp
pop
enter
add
mov
cmp
cmp
rcrl
xor
or
loope
pusha
lea
jo
and
out
adc
lods
repz
sub
mov
mov
jne
sbb
call
testl
lods
sub
push
idivb
push
adc
dec
sarl
loope
jp
cmp
xchg
cmp
cmp
mov
or
jp
insb
call
into
and
movsl
sbb
sub
test
cwtl
mov
in
cmpsl
popa
idivb
xor
adc
adc
xchg
pop
add
add
and
and
sti
xlat
adc
lods
out
test
mov
inc
jge
jns
bound
jg
popf
push
ljmp
mov
jo
gs
out
ljmp
add
adc
sahf
ljmp
jne
push
shrb
shrb
push
fisubs
fwait
jb
adc
lcall
and
shlb
cmp
mov
ss
jp
jo
xor
xor
sub
bound
dec
mov
xor
out
shr
popf
jns
ret
das
pop
jge
ja
cmp
mov
out
push
pop
jbe
inc
add
jns
test
mov
add
lcall
out
call
sahf
sahf
outsb
jp
jecxz
es
subb
imul
clc
les
es
addb
push
out
fdivrl
push
cmpsl
xchg
notl
addr16
add
addr16
dec
jmp
mov
inc
mov
push
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
mov
jg
xchg
jle
js
mov
adc
push
cmp
jns
push
pushf
and
jo
test
and
fwait
iret
bound
pop
or
mov
jnp
xlat
enter
pop
int
dec
xor
arpl
mov
shlb
lods
inc
mov
dec
sub
rcll
add
shrl
insb
xor
fstps
iret
pop
dec
or
out
mov
dec
cltd
mov
jmp
cmp
sub
add
xor
jge
outsb
ds
lods
fwait
test
pop
push
sub
cmp
mov
aam
nop
pop
int
xchg
mov
fldenv
cmp
ret
hlt
adcl
and
bound
fnstcw
push
cmc
sbb
add
ficoml
push
dec
xchg
mov
cmp
add
mov
pop
pop
in
out
sahf
popa
mov
xchg
cmp
pop
fs
xchg
push
leave
loopne
jmp
repz
xor
sbb
xchg
push
rcrl
stos
sarl
mov
repnz
lods
push
push
fwait
inc
nop
cmp
test
mov
ret
add
dec
adc
sub
scas
in
test
data16
jle
push
mov
add
or
inc
andl
jno
testl
pusha
stos
and
ds
mov
loopne
push
push
mov
inc
pop
pop
push
dec
fcomip
jp
mov
icebp
lret
fwait
js
xchg
jle
pop
in
movsl
iret
mull
aas
imulb
call
ret
shll
jle
inc
jg
rclb
arpl
lahf
shlb
jno
jb
mov
cmpsl
mov
xor
aad
push
adc
pushf
daa
inc
repnz
sbb
ljmp
into
std
mov
cmp
xchg
cmp
adc
fsubrs
sbb
mov
jecxz
sub
outsl
pop
adc
cwtl
cmp
je
pop
cltd
dec
insl
add
std
enter
sbb
pop
and
mov
mov
out
dec
xor
into
cli
mov
jnp
insl
incl
cmpsb
pusha
xlat
lods
mov
jecxz
lock
mov
push
and
int3
gs
xchg
jns
inc
jecxz
shl
test
out
lods
dec
jbe
xor
mov
mov
cld
ljmp
xor
sub
jbe
push
push
or
leave
lea
aas
adc
xchg
push
push
xchg
or
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
add
in
cwtl
sbb
dec
leave
addl
stc
mov
lret
ret
inc
mov
test
in
nop
jne
aam
loop
xor
sbb
data16
dec
pop
xorl
mov
add
ljmp
sub
fs
mov
push
cwtl
add
jp
cmp
xor
popa
jno
orb
les
fsub
sub
lret
mov
cli
mov
pop
lock
jne
ds
stc
sub
jae
stos
adc
adc
push
scas
push
dec
xchg
pop
mov
lods
iret
dec
ret
ret
add
or
adc
imul
push
jmp
outsb
popa
pop
xchg
jmp
sbbb
and
in
pop
adc
dec
inc
test
insl
pop
sub
mov
mov
inc
jle
loopne
outsl
pop
inc
subb
jb
fstps
fmuls
add
ss
shrl
fists
xor
sbb
mov
adc
jp
cs
movsb
jmp
adc
in
sbb
xchg
jge
lahf
cmp
fstpl
push
arpl
insb
cmp
pop
gs
xor
and
xor
pop
stos
mov
repz
ret
enter
aad
cld
xlat
sahf
movsb
fsub
jns
xchg
mov
push
bound
test
fdivl
in
pop
xchg
xor
mov
lds
js
xor
lea
pop
movsl
jle
mov
xchg
mov
arpl
out
sub
shrb
lods
mov
pop
mov
test
dec
and
add
add
ja
pop
dec
hlt
add
mov
mov
test
call
cltd
bound
out
jl
repz
es
mov
sahf
lea
push
push
int
cltd
push
xchg
sbb
popf
fbld
xor
lods
xor
xor
out
in
cmp
xor
clc
add
mov
cmp
mov
mov
pop
and
std
xchg
addb
jp
pop
mov
add
and
cmpsl
js
cmpsb
fwait
pop
xor
adc
daa
dec
mov
mov
jl
dec
cmpsl
inc
mov
pop
loop
xlat
push
adc
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
cmp
jg
xchg
jle
js
jo
subl
pusha
xchg
iret
jns
or
pop
out
pop
rcll
lret
icebp
push
outsl
cmp
js
sar
cmp
pop
in
and
jp
mov
clc
cmp
in
jg
lods
js
in
pop
adc
or
jb
lret
into
inc
dec
add
es
stos
cmp
cltd
xor
movsl
jle
push
xchg
cmpsb
aam
aam
add
lods
shll
popa
inc
pop
out
sub
inc
sub
std
sbbl
push
add
adc
push
cmc
int3
sti
cmp
or
jae
shlb
inc
jno
clc
addl
mov
pop
inc
fdivl
test
add
aaa
sahf
leave
mov
inc
and
shlb
lods
dec
frstor
pop
xor
xor
jmp
cmp
push
jecxz
fwait
loopne
outsb
rorl
lods
xchg
fldl
add
sub
add
adc
mov
test
mov
dec
stos
mov
jmp
mov
xchg
or
cs
imul
rclb
mov
push
cmpb
sbb
in
xchg
jae
jg
fwait
xchg
pop
ret
es
mov
popf
and
pop
lock
adc
xlat
adc
dec
pop
inc
out
inc
or
insl
pop
xchg
sbb
icebp
lahf
leave
sub
les
dec
cmp
scas
repnz
or
pop
push
jae
jecxz
imul
push
push
out
int
fidivl
stc
lock
ret
mov
aas
sub
mov
mov
add
inc
xor
inc
sub
loope
xor
push
sbb
mov
add
mov
pop
mov
stos
arpl
faddl
or
lock
rcl
outsl
inc
data16
sub
aam
fcomi
add
fisttpll
push
xor
jno
inc
push
ficomps
lds
inc
mov
cmp
push
ja
in
mov
xor
jb
push
add
out
jmp
mov
xor
ljmp
in
lods
mov
test
and
xchg
ror
cmpb
pop
jl
inc
adc
pusha
test
adc
fcoms
sub
and
andb
dec
cs
nop
pop
mov
jne
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shrb
mov
loop
jg
xchg
jle
js
inc
je
add
push
and
bound
ljmp
ss
leave
add
xchg
and
out
sbb
xchg
xor
lea
sbb
ds
push
pop
mov
fnstsw
daa
or
out
cld
mov
cmpsl
pop
and
or
add
fsub
jnp
imul
in
push
mov
out
adc
fstpl
addr16
ss
pop
xor
lock
mov
sub
shll
mov
add
lds
icebp
add
neg
mov
sbb
repnz
hlt
sub
sbb
inc
or
fbstp
pop
rcrl
loop
cmp
or
push
mov
pop
add
jo
cmp
repz
mov
insb
pop
adc
addl
adc
inc
adcb
jge
scas
nop
xchg
mov
iret
mov
inc
lea
mov
xchg
inc
jge
int3
jp
inc
int
cmpsb
mov
mov
mov
pop
and
pop
in
in
nop
xor
cmp
jnp
pop
sub
mulb
and
mov
gs
fwait
cli
mov
sub
enter
in
push
mov
inc
jg
in
jnp
sarb
vmread
out
xchg
push
sbb
stc
cmp
aad
dec
pop
jle
xchg
ret
pop
fistps
xor
add
rol
rclb
and
xlat
ss
xor
popa
fmuls
cld
pop
cwtl
pop
push
imul
lcall
mov
xchg
mov
cmp
cmpsb
fsubrs
sub
ficoms
pop
daa
xchg
mov
add
ds
adc
movsb
push
mov
imul
and
js
mov
out
mov
fstpl
mov
jp
dec
xchg
xor
es
pop
push
dec
jo
sub
js
mov
loop
movsl
mov
fnstenv
sbb
pop
lea
daa
xchg
sahf
lods
lock
jle
fildll
pop
sbb
pop
mov
xor
inc
call
or
sub
xor
cmpsl
inc
pushf
push
inc
ret
dec
mov
lds
fdivr
imul
pop
scas
cmp
jg
sti
dec
xor
push
and
pop
sbb
pop
pop
xor
add
pushl
or
ss
insb
dec
repz
in
push
or
ljmp
lcall
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
adc
inc
into
jg
jg
add
lea
pushl
pushf
xor
xor
es
adcb
jecxz
push
jg
aaa
aas
int
arpl
mov
or
xor
fwait
or
xor
je
fs
cs
mov
pop
mov
stos
xchg
lcall
stc
mov
mov
mov
and
dec
jae
aam
sbb
or
or
sub
jo
std
sbb
outsb
add
stc
cmpsl
inc
sbb
push
fstl
sbbl
pusha
and
movsl
cmp
or
adc
orb
and
push
out
subb
mov
mov
bound
stc
adc
fdivl
pop
mov
dec
inc
jns
mov
or
push
inc
icebp
fptan
aam
mov
cmc
cli
jbe
popa
rorb
mov
lcall
sub
add
mov
stos
cmp
jnp
push
dec
cmp
inc
popf
push
add
aam
xchg
shlb
into
mov
sub
push
scas
js
sbb
pop
int3
and
jp
jno
push
stos
mov
sub
sbb
roll
sub
les
test
movsb
das
sar
adc
push
mov
or
fistpl
out
stc
push
inc
testb
rolb
jo
inc
push
ficoms
lret
adc
call
scas
leave
xchg
add
fiaddl
jns
dec
subb
fisubs
and
xor
xor
int3
cmp
xor
loopne
fidivrl
cld
or
add
sahf
mov
lods
das
push
sti
and
mov
cmp
adc
xchg
pop
fdivl
xchg
push
pop
xchg
rol
imul
push
fdivs
dec
xor
mov
push
or
test
add
fninit
stc
add
and
mov
je
cwtl
jle
jo
add
jmp
cmp
aad
aad
popa
adc
jge
push
leave
add
jg
add
or
push
xlat
dec
add
push
hlt
mov
lea
nop
out
sub
lods
dec
sbb
iret
int3
gs
fndisi(8087
cmp
cld
push
fwait
loope
jae
popa
sbb
lret
data16
out
cli
sbb
mov
push
enter
pop
shrb
add
jb
sbb
inc
jg
mov
popa
push
int
add
test
cmp
jle
iret
sub
stos
cmp
ret
jp
add
ret
sahf
cld
cmpsb
rcrl
xchg
mov
clc
je,pn
rclb
inc
ret
lret
sbb
hlt
and
xlat
negb
pop
push
xor
arpl
ds
adcb
sbbl
adc
jae
mov
cld
add
sub
stos
sub
cli
roll
adc
loope
cld
push
in
sahf
jo
ret
push
add
test
loop
mov
int3
mov
lods
imul
mov
popa
cmpl
sub
and
push
aas
mov
cmp
pop
mov
push
in
testb
bound
or
mov
rcrl
push
aas
inc
rcrb
add
jbe
cmp
cbtw
push
push
mov
xchg
in
dec
rolb
add
or
loope
pop
sahf
cmp
aad
fldcw
incb
jp
cmp
enter
dec
sbb
sarl
mov
or
cwtl
pushf
ds
lds
cld
add
sbbb
pushf
stos
mov
enter
subl
or
icebp
pop
ss
dec
sbb
scas
stos
xchg
pop
push
fs
adc
dec
das
imul
adc
add
mull
xor
xchg
int3
int
push
ffree
jmp
and
or
xchg
inc
scas
subb
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
mov
xor
add
mov
in
add
xlat
add
repnz
pop
aas
pushf
cmc
sub
sbb
push
jbe
es
cmp
aaa
push
std
and
dec
and
fnstcw
repz
loope
adc
adc
arpl
add
or
and
xchg
nop
adcl
add
dec
in
jmp
jne
or
lret
movsb
xor
push
xlat
movsl
repz
mov
sbbl
jmp
adc
movsl
mov
mov
add
adc
mov
outsb
jecxz
repnz
mov
ror
out
stos
mov
int3
adc
xor
mov
js
sbb
addr16
pop
jp
je
scas
pop
xchg
inc
sub
ret
inc
sbb
cmpsb
sbb
and
adc
mov
mov
cmp
mov
rcrb
mov
stos
push
pop
or
xchg
lcall
rol
out
sti
cmc
leave
test
pushf
inc
shrl
push
sbb
stc
mov
xchg
cmp
push
movsl
mov
pop
test
ret
lock
push
icebp
lods
repnz
ret
out
jg
ljmp
mov
imul
in
mov
push
popf
pop
dec
cmp
push
arpl
sbb
push
dec
ja
inc
imul
sub
cmp
cmp
cmp
inc
xchg
fistps
hlt
into
and
data16
ja
fsub
popf
imul
add
mov
sarb
sar
test
jle
cmpb
add
rolb
mov
in
sub
push
dec
push
adc
pop
jns
dec
cmp
mov
add
jnp
sar
mov
dec
stos
pusha
gs
push
inc
and
mov
test
ss
mov
push
or
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
cmp
std
push
aaa
jg
jnp
js
sti
sub
push
jecxz
jae
sub
in
sahf
mov
scas
push
xchg
sub
push
add
cmpsb
adc
mov
leave
or
lret
imul
imul
loope
push
add
loopne
shlb
movsb
out
mov
lret
mov
fsubr
pusha
dec
mov
cmc
repz
cmp
rolb
add
decb
out
xor
in
sub
cmc
sbb
dec
push
in
mov
inc
adc
icebp
mov
xchg
out
xchg
iret
mov
pop
fdiv
out
cwtl
push
out
cmp
call
inc
cli
movb
sbb
mov
add
aam
mov
outsb
insb
push
scas
inc
int
add
pop
in
jge
jg
push
mov
push
push
sub
mov
inc
movsb
xchg
inc
sbb
lock
ret
push
jecxz
je
popa
jmp
mov
into
mov
lret
fcomp
cmp
push
dec
adc
dec
pop
sahf
jo
pop
in
mov
outsl
xchg
scas
lock
sub
push
push
mov
pop
dec
and
aad
lahf
sar
adc
mov
lods
test
or
cwtl
aad
je
into
call
add
inc
fcomps
call
cmp
adc
jb
lock
and
xchg
and
testl
xchg
adc
mov
pop
insb
lcall
mov
mov
les
roll
shl
pop
mov
fdivl
xchg
sub
gs
stos
std
add
fwait
dec
dec
cmp
sub
xlat
dec
cmpsl
repnz
push
mov
and
pop
cmpl
push
xchg
pop
cld
pop
dec
dec
dec
pop
mov
xchg
mov
addr16
cmp
jge
cmpsb
outsl
and
out
sub
xor
mov
fldcw
dec
ljmp
ljmp
movsl
mov
orb
in
stos
mov
pop
data16
loope
and
popf
daa
xor
xchg
cld
xor
call
in
pop
lcall
fwait
cmovle
test
imul
addr16
shrb
xor
push
sub
sbb
dec
mov
clc
mov
or
pop
mov
mov
jmp
ljmp
jmp
addr16
pop
je
and
fdivrs
es
jl
test
push
jne
cmp
cmp
add
jl
cli
in
or
push
xor
dec
jecxz
cmpl
xorb
lcall
into
psadbw
loopne
pop
mov
jne
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
adc
xchg
das
sbb
js
jle
js
mov
cmp
insb
lcall
mov
filds
lret
aas
scas
decb
ret
cmp
dec
jo
sbb
fcomi
cli
dec
insl
push
inc
and
pushf
cmp
shll
popa
mov
arpl
xchg
orb
jg
mov
xchg
icebp
test
prefetch
sti
jbe
fstl
push
sub
fwait
jmp
shlb
sarb
xchg
test
minps
fnsave
inc
jns
cmp
ror
pop
gs
rcr
dec
fisttps
out
jmp
dec
sti
out
mov
inc
pop
push
int
inc
inc
movsb
sbb
adc
mov
lea
mov
add
loop
std
nop
icebp
popa
mov
shlb
dec
cmp
jg
dec
and
xchg
lret
popa
mov
fdivl
jo
mov
mov
shl
loopne
lret
lods
mov
push
sbb
and
inc
mov
rol
das
daa
enter
cs
xchg
loope
sahf
push
adc
mov
stos
dec
in
js
idiv
fwait
loope
out
push
loope
jns
sahf
jmp
xchg
mov
add
cld
cld
fs
jecxz
sbb
in
xor
xor
cmpl
mov
sub
pop
mov
sbb
xchg
push
out
pop
xor
lret
mov
jge
scas
mov
inc
decl
cmp
sub
hlt
jge
dec
push
mov
mov
pushf
imull
into
xchg
int3
int3
ss
int3
fld
cmc
pop
loopne
int
ljmp
add
or
cmp
mov
jne
dec
dec
xchg
mov
ljmp
xchg
shrl
subb
outsl
lahf
cwtl
scas
and
out
lcall
xor
adc
jns
fs
dec
xchg
jecxz
push
pop
xchg
jnp
pop
loopne
mov
insl
or
stos
mov
dec
daa
add
and
pop
jo
in
mov
int3
fistpl
mov
pop
xchg
xchg
aam
push
ret
ja
mov
mov
dec
cwtl
fbld
mov
aas
xchg
loop
mov
mov
loopne
in
mov
daa
cwtl
loopne
clc
fs
test
decb
rclb
adc
xchg
andb
fs
lock
mov
and
icebp
pop
test
mov
sahf
push
push
stos
or
mul
add
enter
or
pop
fmuls
test
js
scas
icebp
mov
push
xchg
push
push
xor
sub
arpl
mov
mov
inc
dec
aas
or
jno
js
sub
add
or
int3
dec
lret
push
movl
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
movsl
aam
adc
jg
jnp
js
jge
data16
cmc
repz
mov
insl
ljmp
js
jg
cltd
fiadds
inc
cli
cmpsl
mov
jnp
out
and
aam
cli
lods
push
add
jo
cmpl
or
pop
das
pop
sbb
push
mov
mov
jmp
mov
inc
stc
in
jbe
xor
sbb
cmp
les
mov
popf
pop
loopne
rorl
cld
add
and
lods
push
inc
add
mov
and
outsl
das
scas
ja
outsb
add
inc
lret
inc
mov
rcrl
out
adc
cltd
pop
or
test
pop
jo
loopne
jae
adc
and
mov
movsb
daa
aad
mov
dec
sub
dec
pop
testb
clc
popa
jnp
jp
outsl
sbb
push
mov
arpl
loop
dec
mov
test
dec
ret
leave
ret
shrb
jge
nop
outsb
aam
xor
dec
insb
sti
pop
into
push
ja
xor
leave
repz
jb
mov
adc
fdivrs
cmp
cmp
xchg
or
popa
and
fdivp
jne
ja
pushf
fsubs
mov
cmpsb
arpl
lea
jg
mov
leave
lods
sbb
xchg
and
mov
add
pop
cs
jmp
loopne
pop
je
inc
jnp
pop
xchg
outsl
inc
fdivs
iret
add
jns
mov
shll
cmpsl
rorb
cs
scas
leave
inc
insl
js
fwait
aaa
push
inc
cli
mov
mov
mov
movsl
lcall
cmp
sti
jl
lock
mov
gs
xor
jae
ret
movsl
fstps
sar
mov
sub
mov
ror
mov
jne
test
lret
dec
daa
pop
repnz
mov
cmp
xchg
push
and
dec
sbb
jmp
xchg
out
mov
cwtl
mov
pop
mov
mov
and
ja
pop
mov
popf
sarl
sti
adc
addr16
mov
push
test
fdivr
cmp
in
push
add
push
push
data16
push
xchg
jnp
rcrl
shlb
adc
inc
popf
pop
sbb
popf
js
aad
push
out
cmp
mov
lods
mov
cmp
and
pop
ss
out
inc
test
pushf
lods
dec
hlt
js
in
push
push
out
lret
sti
push
xor
cli
inc
or
mov
cmp
xor
push
stos
push
cmpsb
xlat
xchg
mov
pop
add
cltd
lds
pop
dec
mov
out
daa
ret
stos
xor
sbb
into
inc
iret
repnz
outsb
insb
test
add
push
ds
popa
in
leave
and
sbb
movsl
movl
icebp
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
inc
enter
js
jle
js
andl
xchg
push
gs
out
enter
rolb
xchg
fnstsw
test
mov
stc
in
rorb
jmp
sub
adc
cli
push
hlt
mov
adc
mov
jg
dec
mov
xor
jbe
scas
xchg
xor
jmp
rcrl
jge
lods
aas
or
mov
loope
aam
pop
in
mov
cmp
or
and
dec
scas
jnp
cmp
lcall
add
in
ret
icebp
pop
rcrl
ffree
or
jmp
cmc
cmp
test
stc
lds
aam
aas
pop
outsl
fildl
xchg
adc
pop
sbb
push
cltd
adc
insl
mov
rcl
mov
daa
outsl
clc
mov
add
leave
jl
mov
rol
pop
mov
mov
mov
push
push
inc
push
dec
fcmovnu
xchg
xchg
or
std
outsl
jnp
test
xor
outsb
cmpsl
enter
push
or
push
or
pop
mov
xchg
pop
iret
sub
flds
mov
and
aad
mov
je
rcr
or
rolb
cmp
ja
mov
inc
nop
xor
call
test
dec
push
mov
ds
outsl
fstpt
adc
xchg
mov
les
enter
push
lods
je
fisttpll
outsl
icebp
shlb
sub
bound
fistpl
outsb
xchg
mov
push
dec
mov
clc
inc
add
or
inc
jnp
jo
and
add
add
inc
inc
adc
fsubrs
jnp
push
and
fbld
lcall
jg
inc
scas
or
out
imul
subl
es
loope
push
test
xor
jbe
mov
mov
popa
dec
add
neg
inc
inc
cmp
jle
fs
sti
sbb
adc
sub
repnz
sbb
add
int
sub
fidivrs
push
adc
pop
lods
cmp
fsubl
sbb
sub
lods
mov
das
daa
xor
mov
or
fdiv
mov
jge
ljmp
shl
aas
test
push
mov
mov
mov
cwtl
sbb
cmpsb
or
lret
xlat
fcompl
jg
sub
flds
lahf
push
lret
fistpl
test
ja
dec
pop
mov
data16
mov
pop
dec
jb
mov
jecxz
and
cmpsb
out
jns
into
cmp
nop
iret
push
mov
cmp
or
xchg
mov
rclb
push
push
mov
ret
or
and
push
int
add
ret
aas
roll
push
inc
add
add
adc
into
ret
ret
lret
xor
stos
push
and
repz
adc
jg
jnp
js
mov
pop
push
out
in
inc
jbe
inc
cmpb
ss
sub
fidivrl
xchg
mov
call
push
rclb
addr16
fisttpl
inc
lds
xchg
mov
rclb
push
mov
into
mov
gs
xor
xchg
or
cmp
bound
cld
fwait
js
negl
lret
xor
stc
mov
adc
outsl
rclb
push
loope
push
sub
fimuls
inc
aaa
xchg
rolb
inc
or
add
inc
pop
pushf
add
outsb
stos
clc
popa
lahf
test
pushf
add
mov
ja
shll
orb
scas
test
aam
mov
xchg
ret
adc
loop
push
mov
loope
mov
cmpsb
popf
lret
cli
outsb
divl
xchg
fwait
mov
pop
xor
cwtl
push
mov
sar
adcb
xor
adc
pop
out
test
push
xchg
pop
sbb
ror
push
stos
shlb
sti
mov
and
dec
cmc
jge
daa
lods
pusha
cld
flds
or
pop
sbb
rorl
cld
cmc
fdivl
jnp
lret
lret
jb
test
inc
sub
cmc
adc
adc
sahf
adc
mov
fisttps
aad
bound
mov
mov
cmpsb
mov
insb
stc
cmpsl
xor
lock
lahf
movsb
cmp
adc
sbb
pop
inc
mov
and
loop
test
sbb
cmc
fwait
xchg
jns
std
inc
bnd
fadds
lods
mov
fs
and
ss
mov
and
sub
mov
mov
xchg
pop
test
jp
imul
mov
lods
scas
jno
test
lret
jae
mov
out
add
mov
stos
mov
loope
lods
dec
out
pop
xor
sbb
stos
bound
out
pusha
nop
mov
pop
jmp
cmp
mov
lahf
das
sbb
cmp
movsl
pop
mov
mov
add
pop
insl
mov
mov
adc
cmp
adcl
xchg
orl
sbb
pop
bound
mov
scas
and
imul
jp
xchg
rorl
push
mov
pop
mov
adc
pop
imul
out
ljmp
sub
cmpsl
shl
add
lea
or
loopne
sub
pop
pop
insl
stc
xor
pusha
data16
fcomps
popf
int3
adc
cmpsb
lret
aad
hlt
int3
jbe
xchg
jbe
push
lea
sub
push
test
mov
movsb
stc
fwait
cmp
add
cmp
out
cld
popa
pushl
mov
jmp
lret
rol
leave
shll
std
popa
cmp
jnp
js
pusha
dec
push
sbb
scas
jmp
add
jmp
fistps
adc
ljmp
inc
in
inc
mov
and
sbb
mul
xor
mov
inc
cmpsb
insb
sbb
cmp
fstpl
mov
inc
repz
xchg
shr
enter
loopne
lods
arpl
insb
sbb
xchg
dec
mov
push
popf
jbe
jns
scas
mov
lds
ss
add
mov
jp
mov
jae
loop
movsb
ret
lahf
inc
adc
add
sbb
pop
xchg
mov
ret
es
in
int
dec
pop
cld
cmp
icebp
std
pop
rorl
or
arpl
repnz
paddd
push
pop
push
aad
fs
int
lret
cli
or
out
pop
scas
mov
adc
nop
mov
or
je
inc
fcomps
or
pop
jne
sahf
lea
sahf
loope
xor
push
mov
adc
mov
adcl
lds
in
insl
pushf
je
sarl
lahf
popa
ror
scas
cltd
xor
cmp
mov
cmp
mov
push
pop
push
ljmp
mov
or
filds
adc
mov
pop
shr
push
inc
pop
mov
xlat
xchg
enter
push
add
mov
and
mov
sub
popa
mov
dec
ds
sarb
cmpsl
sub
or
jmp
xor
das
addb
push
aas
and
push
xor
push
out
ret
pop
dec
scas
add
clc
push
cmp
push
sub
jecxz
enter
imul
repnz
decb
xorb
dec
mov
mov
push
push
lods
leave
and
adc
fs
mov
pushl
or
jo
insl
and
and
and
mov
xor
movsl
xor
cld
lea
push
sub
js
push
imul
jne
addr16
xchg
movsb
jo
test
lcall
bound
inc
xor
imul
add
xchg
mov
jmp
pusha
cmp
push
mov
insb
mov
sbb
pause
in
ret
mov
ret
dec
mov
lcall
scas
lcall
jecxz
pop
adc
divb
xchg
outsl
xchg
rol
enter
popa
push
or
dec
fwait
pushf
rol
or
jno
fsts
cmp
pop
push
cmc
out
loopne
fldcw
fsubs
hlt
je
xchg
sbb
test
or
adc
or
loop
shll
mov
cmp
test
popl
push
aam
ret
movsl
lret
sti
xor
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
cwtl
in
repz
jg
adc
js
jp
scas
cmp
in
imul
pop
movsb
lea
pop
and
inc
ljmp
dec
sahf
or
mov
pusha
sbb
rcll
out
mov
cmpsl
lret
sbb
add
jmp
dec
xchg
fs
mov
mov
add
out
lcall
mov
stc
cltd
lock
lcall
dec
test
lcall
xor
int3
popa
loopne
fs
subb
je
mov
mov
xchg
mov
xor
mov
push
xchg
imul
negb
push
adc
sub
adc
fisttps
push
loop
or
cmp
jb
in
jns
xlat
pop
sbb
jns
add
and
mov
pop
inc
in
pop
sarb
sbb
adc
xor
cmp
mov
in
jns
dec
int
pop
mov
testl
out
cmp
mov
lods
sub
movl
pop
das
stos
ja
shlb
xchg
mov
popa
lahf
movsl
pop
push
sahf
mov
jns
add
rcr
cli
mov
or
mov
jge
into
loope
and
test
or
je
add
add
out
inc
lea
rcll
daa
sbb
jmp
adc
std
pop
push
dec
push
xchg
insl
push
cs
xchg
movsb
jbe
sub
xchg
dec
pop
mov
sbb
rcrb
mov
jle
xchg
leave
sub
movsb
inc
jmp
sub
push
mov
insl
push
pop
push
push
mov
lahf
jo
mov
add
jmp
adc
push
or
movsb
add
rorb
lock
fldenv
adc
mov
jnp
mov
leave
xchg
dec
push
or
leave
mov
sahf
pop
cmp
fucom
push
mov
push
std
dec
inc
fwait
jl
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
movb
lret
jg
adc
js
stos
push
xor
pop
jb
sub
mov
lea
decl
inc
lret
test
xor
xor
addl
mov
xchg
xchg
xchg
mov
fsub
ret
sbb
jecxz
inc
mov
ret
add
cmp
dec
out
jmp
lods
divl
push
pushl
cmp
mov
xor
pop
pop
dec
and
stc
leave
mov
imul
xchg
out
insl
mov
add
cmp
in
mov
gs
repnz
mov
addr16
outsl
mov
dec
in
fwait
mov
psubusb
xchg
je
adc
xchg
insb
subl
mov
aas
int3
cmpsl
loope
adc
pop
mov
nop
pop
pushl
scas
es
inc
dec
in
popa
pop
dec
je,pn
adc
aas
xor
adc
mov
lds
dec
sbb
aad
mov
loope
push
frstor
jg
imul
fnstsw
cltd
das
jb
xchg
pushf
in
out
lcall
jnp
adc
pop
stc
pop
inc
loop
inc
mov
fwait
jnp
cmp
fwait
jg
mov
mov
xchg
push
nop
lret
sbb
add
dec
push
mov
add
ljmp
fdiv
insb
dec
lret
testb
outsl
cs
or
stc
sub
xchg
in
mov
aas
pop
push
xor
push
cmp
xchg
dec
inc
scas
out
xchg
daa
jle
jge
jnp
fiaddl
fwait
int3
xchg
mov
insl
je
in
dec
rcl
aad
pushf
xchg
shrb
shl
fistl
sub
mov
lcall
sti
xor
inc
cmp
ret
pop
pusha
cltd
mov
shlb
xor
pop
and
aad
inc
add
addr16
in
in
and
mov
xorl
push
es
testb
scas
shlb
cmp
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
add
leave
jg
adc
js
dec
inc
fstps
cmp
lods
push
inc
xchg
mov
and
cmp
push
mov
sarb
mov
scas
fwait
jp
jl
mov
out
add
inc
push
dec
addl
das
aas
dec
sub
xchg
mov
cmp
stos
pushl
stos
es
mov
rcll
roll
push
sbb
incl
xor
xorl
out
rorb
pop
jne
das
stc
jecxz
sbb
xchg
mov
stos
inc
pop
stc
aam
mov
or
lods
fidivrs
cld
add
add
jg
xor
cmpsl
jg
stc
xor
pop
add
fdivrp
call
add
ja
jl
call
les
xor
into
movsl
or
add
out
mov
push
push
mov
pop
dec
outsl
cmp
cli
daa
call
jno
mov
fs
sar
xor
xchg
ja
push
cli
jns
sub
inc
jg
in
or
push
dec
pop
je
in
cli
fisttpl
rolb
lahf
add
fucom
pop
mov
fimull
pminsw
push
or
xchg
sbb
int3
scas
xchg
popf
jp
add
mov
int
jl
lods
gs
mov
push
adc
mov
mov
add
arpl
mov
outsb
and
imul
mov
leave
sbb
mov
nop
mov
jb
mov
jae
lret
mov
xor
ret
and
fstpl
push
inc
out
xor
mov
or
xor
incl
pop
leave
out
sarb
sahf
sub
xor
pop
stos
inc
adc
sar
std
mov
cmp
loopne
test
rcrl
push
inc
xchg
mov
repz
stc
lock
fbstp
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
pop
sti
jb
iret
jg
adc
js
jg
push
xor
roll
and
roll
sar
in
aam
inc
xchg
ret
je
xchg
fwait
andb
setno
je
repnz
iret
notl
push
or
xchg
rorb
jp
jbe
je
into
cmpsl
or
fisttpll
pop
and
mov
sar
pop
mov
jbe
pop
shrb
mov
shl
std
cmpsl
filds
xchg
sub
cwtl
cwtl
shll
pop
insb
jge
dec
add
cmc
outsl
lods
pushf
sbb
adc
mov
mov
pop
xchg
call
lea
movsb
pop
sbb
xchg
adcl
insl
push
popa
in
insb
notl
daa
xchg
jp
movnti
shlb
imul
sub
and
loope
fs
mov
xchg
fucomip
adc
jnp
xchg
sbb
cmpsl
xor
mov
mov
cltd
test
sbb
mov
shrb
test
jmp
fs
test
lret
test
mov
mov
fcompl
cs
sti
pop
xorl
inc
cmp
cmp
mov
xor
and
aad
mov
decl
dec
iret
stos
lds
pop
ffree
sti
xor
cwtl
fdivs
rol
adc
xchg
sub
jp
xor
mov
out
stos
xor
sub
lahf
mov
xor
icebp
cmp
add
in
test
out
repnz
pusha
jmp
dec
and
lret
mov
pop
xlat
mov
mov
cmp
aam
inc
xor
and
leave
orl
mov
push
inc
std
pop
aad
loope
add
cmpsl
dec
jecxz
dec
mov
fnstsw
ja
imul
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
js
add
js
jle
js
loop
imul
in
lret
jae
int3
mov
mov
insb
iret
jne
lret
push
add
inc
fldl
xchg
and
dec
inc
pop
xchg
inc
jle
fs
jge
jne
into
ret
push
pop
mov
ss
inc
cmpl
arpl
adc
repnz
mov
neg
test
cli
sbb
cmp
push
mov
jecxz
fnstenv
mov
dec
adc
or
xchg
rorb
mov
mov
in
and
inc
rorl
mov
call
pop
mov
mov
fs
and
stos
dec
stos
out
mov
adc
xor
ja
mov
xor
in
fstpt
jns
adc
sbb
mov
sub
sbb
add
rcll
jmp
imul
jecxz
sub
ficomps
sub
mov
and
dec
xchg
hlt
call
scas
push
mov
leave
mov
fnsave
imul
test
lods
in
insl
inc
cmp
mov
sbb
shl
in
dec
sub
orl
std
and
mov
test
push
das
lods
and
in
test
test
scas
sbb
or
test
sbb
pop
sbb
insb
mov
sub
xor
add
push
jp
das
lods
jl
adc
push
mov
sarl
inc
mov
cltd
cwtl
std
shll
push
and
jle
lret
rclb
jmp
pop
add
push
mov
jne
jbe
mov
mov
aad
in
add
cmp
lock
push
and
stos
inc
adcl
or
xchg
stc
fiaddl
movsl
popa
lods
add
xchg
xor
test
ret
jle
ds
jo
mov
jnp
fldcw
xchg
mov
ljmp
jb
inc
gs
jg
test
add
popa
cmpsl
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
and
popl
jle
js
and
in
xchg
lock
arpl
stc
jecxz
rorb
jmp
je
cmpsb
push
ret
dec
jnp
test
pop
cmpsb
in
xor
icebp
sub
ss
jb
cltd
xchg
fisttpll
dec
lods
inc
test
mov
clc
adc
xchg
mov
je
outsl
push
repnz
and
sahf
ficoml
sbb
push
decb
ljmp
test
push
mov
ljmp
bound
pop
cmp
or
or
sub
xor
nop
shll
pop
mov
aad
aas
ret
add
mov
ds
popa
mov
push
gs
bnd
data16
jbe
inc
mov
lds
cmovo
js
pop
imul
push
jne
mov
push
ret
lods
std
mov
inc
xchg
fcmovnu
xchg
mov
les
repnz
mov
stos
inc
pop
scas
out
out
cs
repnz
mov
mov
in
mov
in
jo
pop
cmp
hlt
add
mov
lock
xor
ret
in
cmp
pushf
pop
mov
cmp
lcall
jp
out
rorl
jb
nop
cmpsb
or
cmp
inc
xchg
int
mov
xor
dec
ss
mov
dec
adc
cmpsl
inc
xor
hlt
loope
xor
repnz
sarb
mov
outsl
mov
jge
jmp
cmc
clc
cltd
call
das
mov
lods
push
shrl
dec
cmp
test
mov
arpl
cs
stos
cmpsl
adc
add
push
cltd
loope
lahf
dec
pop
lahf
into
je
push
jg
icebp
sti
fldl
xchg
mov
js
dec
jnp
add
lods
add
aam
sub
xchg
xchg
scas
push
fs
inc
js
and
adc
add
pop
xlat
addr16
mov
cmp
mov
int
xor
iret
stos
pop
daa
andl
inc
cld
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
push
fcomps
adc
js
sbb
pop
push
bound
push
in
leave
inc
mov
clc
ds
xor
ss
xchg
mov
sub
roll
sbb
adc
dec
xor
in
je
sti
xor
push
int
mov
loopne
insb
jo
cmp
icebp
idivl
pop
popf
lods
je
sub
or
pop
xchg
insb
inc
pop
xchg
scas
inc
fwait
cmp
push
pop
xchg
adc
mov
pop
push
push
lock
xchg
xchg
rcl
mov
inc
mov
fdivr
stc
pop
jp
cli
add
loope
outsl
pop
js
mov
fildll
int3
inc
sbb
or
hlt
dec
push
fnstenv
xchg
adc
stc
jmp
cmc
jns
cld
aaa
jne
add
inc
xor
mov
cmp
jmp
mov
mov
sti
dec
cld
mov
pop
fs
icebp
std
nop
stos
jns
lods
jecxz
mov
data16
roll
syscall
or
add
sub
fwait
scas
mov
pop
add
arpl
adcb
xchg
mov
pop
gs
fisubrl
repz
sbb
imul
aaa
cmp
jmp
sbb
xchg
pop
int3
xor
jecxz
mulb
xor
mov
sbb
inc
pop
mov
and
movl
jecxz
ds
int
sahf
inc
in
enter
fwait
scas
aaa
push
lahf
xor
push
in
dec
ds
clc
add
dec
jnp
out
mov
sti
loopne
int3
adc
cmpb
xchg
out
lock
loope
sub
pop
stos
adc
add
fwait
add
jl
adc
out
push
int3
inc
cmp
fsubr
in
sbb
popf
arpl
mov
hlt
aas
sbb
sar
jb
pop
push
popa
jmp
xchg
lahf
int3
dec
mov
push
dec
cs
icebp
lcall
rcrl
aam
mov
sbb
loop
push
inc
push
sub
push
outsl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
cli
iret
jge
mov
jg
adc
js
lds
cs
mov
or
cmp
aad
stc
xchg
pop
cmp
test
jg
jne
addr16
jg
dec
inc
das
and
jns
popa
in
push
fcomps
cli
popf
or
push
jns
sub
test
jno
xor
mov
testl
loope
jmp
jmp
mov
inc
ret
or
clc
test
scas
mov
negl
or
mov
jns
popa
sub
sbb
and
std
add
test
out
mov
sbb
into
add
inc
sub
fisubrl
js
ret
out
fcomi
pop
mov
sbb
enter
aas
inc
in
outsl
xchg
ret
mov
pop
cmpsb
cmc
iret
mov
lret
inc
insl
or
icebp
add
ret
cli
in
fdivrl
rcrl
out
andb
addr16
loopne
or
pop
cmc
aam
and
or
cwtl
mov
inc
sbb
clc
inc
nop
fadds
data16
movl
mov
mov
fmull
mov
jb
fs
xchg
cltd
dec
push
lea
jnp
movsb
xchg
add
outsl
inc
xchg
cmp
cltd
mov
std
repz
mov
pop
xchg
and
push
hlt
shll
pop
sub
enter
fdivl
pushf
xor
ret
addl
pop
mov
pop
clc
pop
xlat
xchg
movsb
hlt
bound
mov
hlt
and
repnz
in
pop
cmp
notb
ds
js
call
repnz
push
mov
and
jmp
inc
dec
dec
ror
jg
std
sbb
jne
mov
mov
ficoml
sub
repz
js
out
add
arpl
or
divb
sti
in
rcll
subb
mov
push
movsb
pop
loope
ja
pop
or
daa
push
in
mov
iret
das
cmpsb
not
out
outsb
rclb
cmp
and
add
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
and
shl
dec
aad
js
jle
js
inc
mov
pop
fwait
iret
rorl
out
stos
repnz
outsb
fdivrl
sar
addb
pop
jb
or
notb
imul
fwait
test
fwait
pop
sbb
xchg
sbb
jecxz
into
cmpsb
popa
std
xlat
les
movsl
pop
ret
push
adc
xchg
add
dec
mov
jle
jp
dec
outsb
mov
mov
fnsave
xchg
mov
mov
ret
in
or
sbb
inc
mov
daa
add
xchg
cmp
cmpl
scas
adc
dec
lea
sahf
mov
sbb
mov
add
inc
dec
cli
pop
mov
add
outsb
sti
pop
add
into
stos
jnp
dec
pusha
sbb
xchg
stc
mov
xchg
dec
pop
pop
pop
jns
pop
lret
insl
sti
bound
loopne
mov
ret
xor
aad
sub
fcomps
stos
push
and
and
ja
in
pop
scas
int3
add
mov
cmp
add
adc
push
fdivs
cmp
pop
mov
sahf
sbb
repnz
push
lds
mov
into
push
xor
hlt
leave
jb
out
cli
mov
outsl
sub
jb
test
sbb
mov
xlat
add
rolb
mov
or
inc
dec
stos
jge
stos
out
mov
xor
stos
aam
xor
xor
inc
push
outsl
inc
loop
jae
push
add
aas
aaa
adc
jecxz
push
jge
rcrl
mov
loope
mov
inc
push
ret
pop
pop
cmc
roll
in
inc
mov
sbb
aad
fnclex
ret
loop
cmpb
xor
out
inc
sti
mov
shll
outsb
sahf
fcom
sbb
xor
mov
pcmpeqw
test
lods
dec
mov
jnp
cmpsl
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
pop
pusha
fstpt
adc
js
jle
push
lea
pop
out
push
je
int3
shlb
sbb
mov
adc
bnd
sub
cltd
push
les
roll
loop
int
xchg
cli
and
icebp
adc
adc
pop
add
dec
cmp
jb
inc
and
out
xchg
bound
adcb
jae
and
mov
call
inc
xchg
cmpsl
insb
insl
retw
inc
mov
jb
cld
dec
data16
pop
pop
icebp
xchg
and
test
sbb
outsl
xchg
push
sahf
int3
lahf
inc
xor
mov
popf
jmp
negl
sti
push
in
loope
testl
andb
adc
mov
mov
pop
pop
or
add
adc
mov
jp
mov
lret
sub
dec
sbb
call
sbb
xchg
into
add
push
cmpsl
stos
ss
adc
jbe
fs
jge
stos
pop
lret
js
test
mov
jmp
rcrl
out
js
fwait
sub
dec
daa
rclb
cmpsl
or
nop
insl
icebp
enter
push
movsl
add
scas
mov
mov
sub
xorb
ret
cwtl
mov
pop
icebp
and
sub
sbb
out
push
into
in
lahf
ss
xlat
cwtl
loope
fsubrl
cli
sti
loop
xlat
arpl
jb
cld
shl
xchg
mov
in
cwtl
clc
leave
mov
mov
repnz
cs
fucom
test
call
push
outsb
sbb
inc
jmp
and
sub
inc
lret
mov
je
pusha
sub
cltd
iret
mov
xchg
sbb
mov
xor
jae
mov
add
pushf
aad
cmpsb
push
into
pusha
mov
sti
ja
mov
jmp
adc
mov
sarl
or
jmp
sbb
sbb
cmc
clc
call
sahf
xor
add
xchg
sub
jmp
ret
aas
fxch
rcr
mov
insb
push
js
jg
adc
js
mov
movsb
nop
or
stc
xor
gs
jns
dec
pop
loope
and
lods
fnsave
add
fisubl
push
arpl
ret
jmp
mov
fmull
movsb
mov
or
mov
and
sti
ss
movsb
or
cmp
mov
inc
and
mov
repnz
test
or
push
or
sub
cmp
mov
xchg
out
mov
sub
mov
data16
fmuls
inc
insl
mov
inc
pushf
mov
mov
sub
xchg
iret
ds
xor
dec
das
data16
mov
push
daa
or
aad
and
into
jnp
cltd
lahf
in
pop
cmp
loope
cmp
inc
push
sub
adc
lock
cmp
and
sahf
sbb
xor
push
inc
jne
lods
shll
in
jge
sbb
in
adc
test
pop
cmpsb
add
inc
push
add
dec
cmpsl
repnz
sbb
inc
sub
cmp
and
les
sbb
and
pop
xchg
push
test
mov
or
mov
sti
insb
inc
mov
mov
insb
pop
adc
sub
mov
lock
sbb
hlt
sahf
sub
sbb
push
push
pop
popa
and
push
hlt
into
and
cltd
push
in
add
or
leave
stos
and
jecxz
mov
xchg
sbb
jnp
int
xlat
or
pusha
xchg
inc
aas
push
sbb
sbb
dec
sbb
adc
fcmovne
dec
mov
mov
adc
mov
scas
inc
sbb
bound
cmpl
mov
adc
push
pusha
jl
dec
mov
xor
add
lahf
inc
movb
and
sub
adcb
movsl
ret
leave
fisttps
dec
xchg
and
lea
xor
add
int
int
fnstcw
dec
and
js
jle
js
jecxz
inc
test
gs
xor
cmp
sahf
cwtl
or
hlt
cli
mov
mov
fs
mov
notl
scas
ficoml
mov
jl
jle
push
in
push
jne
xchg
inc
push
jno
loopne
sbb
loopne
push
adc
pop
loope
pop
pop
xchg
sub
fs
ret
cmpsb
clc
movsb
jecxz
in
ss
sti
mov
push
mov
lds
push
sbb
sahf
fcoml
sahf
mov
outsl
out
and
inc
inc
cmp
clc
sarl
outsl
xor
imul
push
dec
xor
std
inc
movsl
sahf
cmp
loope
jmp
imul
sbb
cpuid
push
mov
inc
or
fiaddl
aaa
xchg
cmp
mov
xor
vhsubps
mov
shlb
test
lods
pop
stos
xlat
cld
sti
xor
add
push
movsl
pop
rcl
cmpsb
inc
out
xor
lret
mov
call
sbb
inc
loope
ljmp
xchg
test
jb
mov
jle
push
pop
dec
inc
outsb
jne
add
imul
lds
jg
mov
into
in
test
sti
push
aam
rorb
or
sti
and
pop
js
push
test
xor
ja
in
adc
ficompl
sarl
xor
or
insb
jl
mov
xchg
push
mov
js
cmpb
add
jmp
fstpt
out
aam
sbb
outsl
mov
mov
xchg
or
add
insl
lds
test
pop
cltd
movsb
dec
mov
cmp
pusha
movsb
sub
addr16
push
ret
jne
xor
decl
icebp
inc
pusha
or
dec
loop
roll
out
sbb
nop
xor
loopne
andb
inc
in
inc
cmc
cmp
sbb
icebp
sub
dec
ja
inc
rorb
mov
into
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
rclb
add
sub
jg
adc
js
fidivrl
jge
cmpsb
cmp
cmp
lcall
sub
inc
aam
sti
push
sub
mov
fs
jno
fcompl
xlat
jb
sub
ds
in
cld
call
add
adc
xor
movsb
jge
pop
jp
or
out
cmp
shrb
xor
lods
mov
xchg
cmp
idivb
mov
inc
sub
dec
and
push
mov
xlat
sub
jl
push
in
inc
call
add
mov
stos
add
aam
xor
xlat
cmpsb
fidivrl
popf
adc
lcall
sub
mov
or
or
fs
repz
jp
jbe
sub
push
sub
mov
lods
jo
dec
and
jle
ss
fstp
lret
repnz
test
fs
aam
sub
mov
mov
push
mov
push
dec
mull
sbb
subb
stc
and
movsb
dec
sub
dec
stos
popf
pop
adc
nop
icebp
adc
xchg
adc
aaa
mov
add
std
cld
pop
das
mov
rcll
mov
gs
pop
add
xchg
sub
sub
insb
fistpll
jne
popf
jae
xchg
sbb
scas
es
inc
xor
cmpsb
mov
lcall
adc
fsubrs
sub
scas
mov
sahf
rcrl
adc
or
cld
push
pop
adc
jl
daa
ror
xor
mov
popf
cli
gs
aas
push
shll
notl
inc
and
push
sub
xor
add
mov
mov
in
pop
lret
mov
mov
pop
jl
add
in
fs
pop
adc
add
enter
xor
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
movsb
pop
loope
shl
js
jle
js
ret
sbb
inc
fiaddl
mov
test
and
aam
aam
cmp
add
fldt
xchg
shrb
push
loopne
mov
int3
cmp
scas
cltd
inc
into
pushf
pop
xor
out
adc
xchg
repnz
push
mov
mov
ss
sbb
add
mov
mov
add
sbbb
into
out
and
xor
aas
pop
add
or
hlt
fistl
pop
int
sbb
pop
nop
repz
inc
push
add
rclb
int
adc
mov
xlat
cs
inc
push
cltd
and
pop
xlat
xor
repz
cwtl
cs
test
jae
pusha
dec
mov
lcall
jnp
push
push
daa
mov
fisttpl
xor
aam
sbbl
testb
sbb
fs
adc
lods
test
je
jp
xlat
int
cwtl
faddl
addr16
xchg
test
stos
sti
push
inc
xchg
mov
cmp
jmp
pop
js
dec
fsts
mov
and
ds
mov
and
adc
loop
aam
cmp
ss
mov
xorl
mov
inc
inc
or
adc
test
cmp
push
fistl
out
arpl
orl
xor
je
push
rorl
cmc
jns
dec
xor
xor
decl
in
das
js
repnz
mov
jb
lahf
jbe
add
mov
mov
fdivr
cs
jge
wrmsr
xchg
vpcmpgtb
mov
repnz
addb
pushw
mov
mov
jnp
xor
ja
xchg
sti
xor
mov
loop
dec
pop
je
sub
test
mov
testb
push
fstpt
clc
dec
dec
xor
mov
int3
mov
jmp
int
int
rcl
int
cmp
lds
adc
js
ljmp
popf
mov
stos
shrl
xchg
std
mov
pusha
inc
sbb
into
mov
cmp
stos
jmp
cmp
inc
fwait
out
stos
stc
pushf
xchg
mov
cmp
setnp
xchg
dec
pop
xchg
ret
sbb
pusha
push
push
notl
loopne
sub
mov
xchg
or
test
test
bound
fcmovnb
pop
push
mov
gs
addr16
ja
lret
mov
dec
fwait
xor
push
adc
ret
ljmp
fmul
shl
push
sub
int
push
jno
mov
das
mov
lds
xchg
test
sub
sub
sub
mov
pusha
lods
mov
das
stos
clc
push
dec
stos
dec
dec
xchg
scas
push
sub
lcall
dec
outsl
insl
into
nop
stos
rorl
xor
hlt
add
repnz
ficoms
jmp
pop
mov
cmp
negl
out
pop
repnz
int3
push
fnsave
push
push
xlat
lods
cmp
test
dec
sarb
jmp
fs
add
outsb
mov
out
lods
xor
push
std
out
push
adc
sti
pop
daa
fcoml
jno
je
pop
and
notl
jnp
add
fdivrl
mov
cmp
scas
push
outsl
enter
and
lds
hlt
pop
das
sub
cmp
adc
cli
adc
add
stc
jge
xchg
pop
xchg
insb
jo
mov
loop
orb
and
xchg
jbe
jg
icebp
stos
lds
nop
cmp
push
ret
pop
rcrl
test
ficompl
pop
mov
sbb
jecxz
adc
push
sub
xorl
xor
loope
iret
imul
je
or
inc
dec
fld
and
inc
sti
pop
iret
scas
enter
cli
push
rclb
mov
cmp
scas
add
add
add
lret
xlat
vpsubusw
lret
xor
lock
js
jle
js
sub
sbb
clc
mov
push
sbb
jl
mov
inc
or
icebp
sub
dec
pop
stc
arpl
push
pushf
dec
daa
xlat
dec
and
push
pushf
lds
out
add
les
push
sbbl
mov
jmp
icebp
addr16
xchg
arpl
mov
xor
sub
idivb
push
cmpsb
popf
int
daa
mov
xchg
sbb
sarl
enter
jae
xor
sub
mov
insb
lahf
mov
aaa
sub
mov
jmp
scas
add
push
mov
xor
push
sbb
mov
xchg
fwait
push
aas
xor
push
sbb
fucomi
cltd
test
nop
xorb
roll
imul
js
xor
xchg
xchg
xchg
nop
mov
nop
shl
bound
inc
xor
push
mov
pusha
and
and
fsubrs
in
xchg
popf
lods
xchg
sti
xchg
xor
loopne
test
jecxz
jge
enter
pusha
adc
and
cmp
pop
add
mov
xor
insl
push
adc
bnd
and
dec
sahf
movsb
icebp
loopne
out
cld
push
pop
pop
jecxz
dec
mov
pushf
ljmp
jp
stos
mov
sbb
mov
scas
mov
jae
inc
sahf
mov
popf
lahf
in
mov
jg
loope
add
dec
push
addr16
sbb
mov
sub
inc
sbb
jo
call
loopw
cs
inc
sub
sub
fstpt
int
and
cwtl
fistl
arpl
stc
adc
sbb
cs
aaa
or
push
je
xor
int
sahf
call
wbinvd
or
pop
jbe
mov
or
add
in
scas
pop
in
cs
sub
loopne
testb
icebp
sub
or
xor
jmp
enter
iret
rcl
mov
add
jg
in
js
jle
js
mov
xor
std
nop
ret
stos
sub
jo
sbb
sub
clc
shll
ss
bound
sbb
sub
mov
lock
jg
mov
sbb
adc
mov
das
call
inc
and
inc
lods
mov
pushf
aad
cmp
sub
xchg
jne
repnz
mov
mov
popa
insl
cmp
insb
ret
cmpsb
sahf
repnz
je
xor
je
pop
in
mov
add
and
pop
push
pop
jecxz
mov
mov
test
xchg
mov
adc
xor
nop
fdivl
les
jp
rcl
pop
push
dec
xor
and
arpl
into
jno
decl
fistps
lahf
push
cmc
jns
mov
mov
xchg
iret
pop
ffreep
adc
nop
test
in
jbe
pop
mov
es
iret
mov
repz
test
xor
dec
pusha
jns
imul
aad
mov
or
jg
xor
cmc
pop
lahf
addr16
mov
cmp
adc
cmc
push
mov
xchg
ficompl
arpl
movsb
jne
movsb
pop
in
cmp
fucomip
jg
insl
cwtl
mov
lods
stos
loopne
pop
js
inc
sbb
popf
adc
aad
test
and
push
dec
cmp
push
push
mov
cmp
pop
push
cmp
xor
mov
int
ss
jbe
int
mov
in
jo
add
lahf
jbe
fdivrp
mov
sbb
ss
fs
inc
fbstp
and
cld
jl
cmpsl
jbe
xor
call
js
dec
mov
ret
jp
stos
loop
loopne
sub
jae
inc
aam
sub
js
sbb
jmp
addl
mov
call
fcoms
or
xor
add
into
leave
leave
rcr
fldcw
stc
push
sbb
mov
jle
js
das
add
xchg
in
test
neg
fcmovbe
vaddpd
popf
lret
outsl
xchg
bound
pusha
xlat
scas
pop
cmp
or
and
lcall
out
ret
repnz
in
cmp
mov
xor
sub
add
pop
pop
adc
add
jge
icebp
adc
leave
or
test
sbb
pop
ja
dec
jmp
das
add
lcall
test
mov
push
out
aaa
xchg
xchg
inc
loop
js
dec
arpl
popf
mov
pop
pop
xchg
push
cmpsl
fcmove
add
shlb
fadds
sub
xchg
pushl
mov
cmp
inc
jb
mov
jmp
add
mov
popf
cmp
nop
jb
sahf
outsb
mov
out
shlb
push
in
xchg
stos
pusha
mov
cs
xchg
push
mov
imul
jmp
mov
lods
popa
mov
xor
cmp
ljmp
jnp
stos
sub
xchg
leave
cmp
xchg
ss
jb
dec
cmp
jg
xchg
jl
sbb
dec
nop
xor
cwtl
jnp
jbe
pop
sub
pop
xchg
je
cltd
lock
xor
adc
stc
or
mov
sarl
xorl
les
fidivrl
loop
ja
stos
adc
lods
ucomiss
inc
pop
adc
jae
xchg
dec
pop
or
xor
lret
out
mov
cmp
jae
cmp
dec
adc
hlt
ror
lods
fldt
lret
mov
out
movsl
or
mov
arpl
xacquire
or
sbb
push
inc
test
das
flds
sbb
pop
fsubrl
insb
xchg
sbb
xor
mov
in
cmc
faddp
lods
adc
movsb
mov
mov
mov
xchg
push
jbe
mov
jae
sbb
mov
out
scas
roll
xor
push
dec
sarb
movsb
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
out
add
jle
js
je
popa
mov
aas
pop
mov
cmp
or
fdivl
shrl
jg
test
mov
inc
jge
push
gs
sbb
in
rcr
or
mov
xchg
icebp
repnz
sub
push
mov
and
out
adc
push
xor
out
loopne
and
lods
jae
daa
inc
dec
inc
sbb
push
nop
cwtl
enter
jle
stos
jp
aas
insl
or
pop
ljmp
push
or
xor
lcall
mov
fcomps
add
sbb
rcrb
lock
out
loopne
in
jle
mov
and
idivl
or
in
push
pop
push
xor
jmp
xchg
dec
sbb
mov
mov
es
push
fwait
jne
js
pop
lret
out
cmc
in
mov
outsl
daa
mov
sbb
ljmp
lods
ficoms
xor
jle
jae
sbb
bound
jecxz
stc
push
rorl
ja
in
insb
out
iret
fiadds
adc
mov
cmp
inc
repz
stos
pop
insl
add
nop
fisubrl
pop
xchg
xor
xor
adc
addl
cld
or
xchg
and
jl
insl
adc
das
xor
push
dec
inc
sub
sbb
jb
jecxz
insb
idivb
mov
push
pop
pushf
mov
lods
push
inc
push
push
stos
lahf
xorl
push
daa
scas
fwait
in
sbb
xor
mov
aaa
xor
and
fisubs
mov
lods
mov
xchg
enter
push
and
outsb
punpckhwd
out
adc
ljmp
mov
dec
cmpsl
loopne
sub
aad
push
sub
xor
lcall
movsl
cmp
inc
sbb
jmp
ret
ret
lcall
dec
faddl
insb
into
mov
lret
push
or
add
jmp
cmp
rol
jb
dec
pop
cmpsl
stc
mov
push
out
jg
adc
js
rcl
mov
test
add
pop
and
adcl
xchg
lret
outsl
lods
mov
or
hlt
and
lods
movsb
fcmovnbe
lods
jnp
push
int3
mov
xor
test
ss
and
cmp
adc
shll
ret
inc
mov
adc
add
xor
or
jne
orl
std
sbb
pop
fs
add
aaa
jg
imul
mov
data16
dec
clc
jno
pushf
je
pop
aas
ja
jbe
repnz
imul
ret
push
out
mov
cmpb
pop
stos
push
jl
inc
xchg
mov
cmp
lods
mov
or
add
inc
sbbl
inc
rep
pop
push
cmp
or
adc
dec
jae
xlat
and
xchg
xor
je
push
es
loope
mov
outsl
nopl
fs
lods
fmuls
lea
jmp
mov
movsb
cld
jne
adc
cltd
outsl
pop
mov
std
pop
cmp
push
mov
cli
add
loope
jae
jae
add
cmpsb
inc
test
imul
jge
jns
adc
rcr
push
hlt
lahf
xchg
ljmp
push
or
mov
lds
jle
gs
fisttpl
jp
mov
je
bound
xor
dec
jo
pop
fdivl
loope
lock
mov
imul
out
pop
sti
inc
cmp
sbb
lret
ret
xchg
imul
xchg
adc
rolw
enter
clc
icebp
lock
cmp
loop
clc
repz
push
sub
int3
mov
fstps
pop
add
mov
das
pop
clc
jecxz
pop
push
ljmp
repz
jg
imul
mov
rcr
test
daa
in
nop
lret
scas
jb
mov
jecxz
mov
jmp
rol
enter
lret
pop
jp
das
push
cld
push
jle
js
shl
push
das
adc
movsb
jae
pop
mov
sbb
hlt
data16
insl
sub
test
inc
mov
mov
lea
cmpsb
scas
jge
ja
mov
cmp
push
xchg
or
inc
aam
xchg
ja
dec
xchg
cmpsb
imulb
mov
std
test
jmp
sbb
mov
into
or
inc
xchg
inc
pop
decb
inc
mov
sbb
push
testl
jmp
and
insb
or
clc
std
insl
out
push
je
popf
mov
popa
add
adc
xor
lret
xchg
int3
pslld
xchg
loopne
mov
add
repz
int
inc
xchg
sbb
fiadds
fsubrl
mov
add
out
loop
add
jmp
sub
imul
cmp
aam
sub
sub
cmp
in
je
pop
adc
call
push
rorl
mov
dec
inc
jae
add
iret
fisubl
arpl
loope
ror
xchg
fdivp
push
lahf
rcll
mov
mov
sbb
stos
xchg
jmp
pop
in
cmp
sbb
sahf
pop
sbb
adc
shr
and
ja
jnp
fcmovb
or
je
loop
xlat
adc
jno
pop
sbb
rol
test
lea
clc
repnz
sahf
sbb
jl
movsb
pop
add
je
cmp
jno
sbb
sbb
icebp
mov
sbb
lret
outsl
and
shrl
lcall
xchg
adc
out
ds
faddl
jae
int3
lds
lcall
pop
xlat
and
ss
inc
or
cmp
add
mov
sub
test
cwtl
sub
pop
sti
iret
or
cmpsl
popf
xor
mov
out
inc
xchg
add
in
pop
popa
repnz
dec
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
es
add
jg
adc
js
xchg
xchg
das
test
xlat
icebp
lcall
sbb
adc
mov
lcall
jne
aad
push
aad
cmc
dec
or
pop
xchg
sbb
ret
mov
xor
clc
test
mov
jmp
arpl
cs
add
xchg
pop
and
cmp
lret
mov
cs
jno
inc
out
inc
arpl
push
scas
xchg
adc
jb
sub
jbe
and
mov
icebp
rorl
in
adc
xor
mov
pop
jae
push
xchg
adc
test
nop
adc
pop
push
xchg
loopne
je
inc
inc
gs
and
test
xchg
push
cmp
mov
pop
leave
das
hlt
ss
jl
sub
push
cmp
add
jmp
in
jge
or
out
inc
xchg
sti
push
dec
fisttps
dec
ss
push
sti
pop
popf
jge
imul
mov
fsts
cmpsb
aam
gs
out
inc
jmp
arpl
xchg
pushf
cmp
fsubrs
push
std
negb
fdivr
or
mov
push
jg
shll
negl
add
inc
data16
int3
or
cs
mov
int
inc
sti
and
sbb
pop
sub
cmc
xor
dec
adc
scas
sti
mov
mov
mov
mov
fsubp
jnp,pn
addr16
mov
ss
xchg
jmp
inc
pop
addl
jle
test
in
or
and
ljmp
inc
cmc
lock
movsl
pop
pushf
ret
aam
xor
fwait
stos
xchg
es
push
pop
sub
dec
xchg
jno
cwtl
mov
dec
push
or
and
fisubrl
sub
out
push
cmp
stos
cmp
push
fildl
aaa
mov
or
outsl
jno
and
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
test
mov
adc
js
jl
js
enter
mov
adc
and
movsl
stc
inc
stos
jb
ret
jb
push
fwait
cwtl
scas
movsl
icebp
ljmp
andb
push
or
and
inc
stc
mov
std
or
add
sbb
aad
dec
cmpsl
and
mov
outsb
fstps
out
ret
add
dec
cmp
gs
sbb
push
or
mov
test
add
sub
inc
data16
xor
mov
out
jge
stc
dec
xchg
and
push
cmp
jno
mov
popa
cs
mov
arpl
mov
daa
mov
arpl
mov
insl
fists
cli
cmpl
xchg
mov
rcrb
sbb
jge
sub
pushf
out
xor
sub
adc
movsb
aam
xor
ret
in
in
ja
fiadds
xchg
fidivrl
xchg
push
es
out
dec
mov
insl
xchg
sub
mov
jnp
mov
ljmp
push
cli
ss
je
mov
repnz
sbb
clc
cmp
mov
ret
inc
test
dec
xlat
insb
dec
adc
push
xor
dec
enter
mov
inc
xor
scas
cmpb
xchg
filds
imul
sub
outsl
out
js
cld
lret
pop
push
je
cmp
jg
psubw
mov
ds
pop
xor
into
add
push
test
mov
pop
dec
leave
dec
adc
dec
in
lods
pop
adcb
insb
adc
mov
mov
xchg
push
inc
out
push
sub
inc
nop
bound
sti
or
out
xor
cmp
mov
pop
push
loope
sbb
inc
adc
es
fcmovbe
aam
pop
pop
push
xchg
pop
push
rcl
inc
cmc
adc
jmp
adc
les
jmp
into
iret
into
ror
aad
aad
mov
and
xor
jg
adc
js
fptan
into
mov
stos
mov
sub
sub
stos
pop
loop
in
push
adc
movsb
and
loopne
testb
sarb
jecxz
lret
cmp
in
ss
xchg
push
adcb
cmp
jmp
test
or
test
cmp
push
sub
mov
pop
scas
add
xchg
popf
neg
mov
pop
aad
out
ss
out
ficoml
sbb
pop
sbb
add
mov
icebp
push
cltd
xor
les
call
fmuls
fcomp
or
jl
jecxz
popf
inc
cmp
aas
and
mov
gs
stc
xor
jbe
xchg
ds
dec
int
and
pop
and
inc
push
fadd
imul
sti
or
and
inc
jmp
xor
and
out
bound
adc
rcrl
add
sub
pop
mov
inc
mov
pop
sarb
sbb
popf
test
mov
inc
aad
stc
stos
jne
push
push
stos
lea
stos
push
pop
dec
xchg
push
jbe
mov
enter
mov
fimuls
ljmp
lds
push
hlt
call
or
je
sub
adc
rcr
push
sarl
popa
fcomps
femms
jo
jg
fwait
jmp
jp
outsb
xchg
dec
dec
movsb
xlat
sub
cmp
lret
jl
push
popf
repz
ds
ret
mov
sub
in
in
mov
pop
repnz
insb
and
and
xchg
push
jge
adc
mov
or
xor
fmull
test
xchg
push
es
mov
mov
movsb
mov
fdivp
addr16
lcall
loop
pop
rclb
fsts
or
mov
cmp
cmpsl
cmp
fnstenv
jp
loope
pop
and
cmpsb
lods
lahf
xchg
mov
adc
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
cmp
sub
lret
dec
xchg
rcrb
pushf
inc
xor
sbb
xor
out
fisubl
and
sarb
xchg
aas
push
cwtl
rcl
or
xchg
mov
mov
add
mov
add
sub
xchg
insb
push
stc
adc
shrl
sahf
outsl
mov
iret
mov
fidivl
mov
jecxz
or
rcr
or
mov
adc
ret
add
sub
imul
sbb
cmp
test
mov
sti
into
into
push
jae
mov
mov
sbbl
push
sub
cmp
mov
push
or
push
xchg
ds
xchg
clc
push
sub
jnp
mov
jle
scas
cs
xor
jb
push
xchg
adc
pop
lods
jnp
repnz
and
pop
adc
mov
xor
dec
and
repnz
dec
fwait
enter
mov
call
xor
and
iret
adc
iret
pop
int
dec
shl
ss
jp
ljmp
sti
ljmp
outsl
pop
movsb
std
movsb
or
pop
fistpll
test
test
mov
es
cmc
pop
cmc
push
loopne
cld
popf
sub
stos
or
cmp
cwtl
push
ja
lret
je
pop
addb
sbbb
loope
pop
movsl
or
test
jnp
jl
lahf
jns
leave
xchg
adc
imul
inc
sbb
jmp
and
in
mov
movsb
imul
iret
push
out
sti
ret
xor
hlt
adc
xor
shll
dec
jmp
cmc
lds
cmp
xchg
in
fldt
mov
push
sub
sbb
mov
dec
mov
arpl
dec
mov
pop
bound
push
fsubrs
push
pop
sub
adc
jbe
fld
or
mov
pop
sar
and
loopne
in
in
pop
dec
call
lahf
push
cmpsb
dec
pop
call
fcmovnbe
test
rolb
iret
test
idiv
add
push
sub
mov
iret
push
lret
rcrb
mov
mov
aam
add
in
ret
cmp
inc
add
test
fidivl
and
iret
cmp
aad
push
sbb
dec
loope
or
pop
add
sbb
addr16
jno
pop
ret
test
out
mov
adc
pop
jl
sbb
test
test
out
and
and
pop
je
hlt
sub
in
cmp
rcr
in
add
aam
mov
mov
xor
das
in
mov
pop
mov
loopne
sbb
pop
mov
xor
movsl
mov
jo
rcrb
fcom
enter
pop
jg
out
movsb
sub
sbb
imul
jae
dec
sub
cmp
dec
dec
inc
movsl
mov
push
arpl
sub
lea
inc
arpl
sub
or
sbb
arpl
aam
xor
insl
push
fld
mov
pop
xchg
lcall
dec
loopne
or
cmpb
cwtl
aam
inc
pop
xchg
inc
sbb
pop
xor
scas
adc
inc
lods
pusha
xor
inc
das
mov
mov
inc
inc
das
cld
dec
out
lret
leave
in
pop
cmpsb
dec
cmpsb
inc
fimull
jle
or
jnp
or
clc
mov
adc
insl
pop
fsubl
test
loop
test
ja
add
mov
mulb
pop
adcl
in
dec
cld
in
lret
mov
ficomps
sbb
mov
sub
dec
movsl
pop
nop
mov
push
mov
in
adc
dec
or
in
andl
movsl
and
sti
in
pop
lods
pop
outsl
sbbb
xchg
mull
lock
cmp
xchg
and
movsl
pusha
loope
jg
xor
cltd
scas
cmp
cmp
fists
push
das
xor
push
sbb
enter
dec
roll
ret
flds
divb
pop
addr16
out
inc
inc
adc
ljmp
lds
sub
mov
loop
or
mov
movsb
mov
std
into
cmpsl
lret
testb
or
mov
lods
push
jnp
nop
or
push
xchg
call
mov
aaa
sub
mov
loopne
cld
aam
into
xor
push
frstor
pop
pop
adc
inc
add
xchg
mov
sahf
arpl
xorl
mov
aad
inc
addr16
lods
pop
xor
jo
stc
aaa
test
aas
popf
je
insl
mov
inc
dec
xor
jl
push
lods
xor
pop
cli
mov
clc
out
ds
mov
sbb
ds
mov
push
jle
cmpsl
jns
aad
jne
adc
adc
push
push
test
movhps
addr16
add
test
lock
jbe
jnp
lds
or
adc
xchg
cmpsl
push
jg
jp
ret
aaa
mov
xlat
mov
jnp
pop
sub
fdivl
and
jbe
jb
add
dec
sub
jnp
sub
out
rorl
aad
adc
iret
sub
lcall
sub
push
xchg
je
outsb
rorb
loope
imull
jp
mov
es
adc
pop
fisubl
adc
lods
inc
movsb
je
stos
rorb
sub
test
pop
adc
mov
fstps
add
sarl
hlt
les
mov
push
push
sub
mov
imul
in
push
xor
pop
dec
jl
push
ret
mov
aad
or
xchg
sti
or
jno
add
xor
dec
xor
std
cld
imul
push
fstpt
rorl
mov
js
leave
xchg
imul
jno
in
adcl
xchg
or
pop
xor
sub
push
hlt
mov
leave
lock
out
mov
add
xchg
pop
cltd
and
stc
cmovle
lds
xchg
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
int
popa
jne
addl
xchg
add
into
test
inc
popf
push
pusha
aam
lret
lahf
lds
test
mov
fs
roll
mov
fld
cmp
jb
ljmp
add
pop
fstps
call
mov
or
push
xor
xor
xor
scas
icebp
ja
mov
aas
xchg
int3
cmp
add
pop
cmpsb
dec
das
jbe
pusha
adc
sbb
ljmp
mov
ja
cs
or
ja
bound
or
sbb
mov
or
cwtl
sub
push
xor
addr16
ret
jae
cmpsl
cmp
cwtl
push
into
icebp
push
ja
push
adc
pop
dec
stos
in
sbb
and
cli
adc
adc
negb
pop
lock
pop
or
fninit
lahf
cwtl
sahf
lret
out
lods
lds
fildll
inc
xchg
cs
scas
xor
lret
pop
aad
dec
add
sti
aaa
jne
mov
jne
pop
fs
lcall
add
inc
pusha
xchg
and
cwtl
adc
cwtl
xor
sub
inc
xchg
icebp
push
pop
jns
repz
and
cs
mov
daa
jle
xor
es
sbb
decb
dec
mov
adc
cmp
mov
push
int3
sbb
lahf
repnz
popf
test
xchg
jge
pop
inc
or
mov
shl
sub
es
lahf
sbb
ret
add
jecxz
in
lods
sub
sub
adc
ja
cmc
pop
adc
dec
lock
adc
adc
jne
shr
jg
or
adc
push
mov
xor
and
mov
xor
xchg
fistl
mov
stc
inc
iret
loop
jge
and
pop
imul
mov
stos
mov
push
xchg
xchg
cmp
pop
pop
test
mov
into
lret
sub
std
gs
fstpt
and
sbb
pushf
cwtl
and
into
ret
add
cli
fsubrl
fbstp
cmpsl
pusha
pop
dec
aad
inc
into
jne
pop
push
push
cli
js
xchg
hlt
out
xchg
or
lret
mov
mov
lret
cmp
testb
jo
jo
arpl
je
icebp
out
lret
sbb
test
pusha
adc
pop
xchg
fwait
es
fmul
sub
frstor
ja
scas
out
dec
pusha
cmp
lret
aaa
adc
int
pop
or
ret
jno
push
cli
stc
cmp
and
jb
jb
mov
inc
in
xchg
xchg
rcll
jbe
sbb
enter
dec
aas
into
icebp
sub
jno
add
mov
xchg
fnsave
jle
int
sbb
mov
xchg
cmp
xchg
ficoms
imul
in
test
pop
lahf
adc
mov
in
dec
jne
je
sarb
jb
movd
popa
sbb
jbe
mov
rcll
ljmp
sahf
push
sbb
imull
sbb
decl
mov
cmpsl
mulb
jp
pop
jmp
xor
icebp
xchg
mov
cli
subl
adc
call
movsl
ds
cmpsb
adc
cmp
inc
dec
outsb
xor
divb
cwtl
push
xor
xor
and
and
idivb
push
xchg
sub
mov
test
mov
cmpsl
push
popa
sub
mov
mov
push
xor
add
inc
shl
movsl
mov
or
div
mov
and
add
gs
cmpsb
dec
mov
push
mov
out
dec
cmc
pusha
imul
outsb
or
aad
movsb
and
sub
outsb
jg
rcl
lods
sbb
jbe
ss
jmp
sbb
repz
js
jge
stos
and
ds
jle
jle
into
ljmp
aam
pop
fs
out
xor
cmp
pop
stc
dec
push
jg
insl
sub
xor
sbb
or
in
xchg
data16
mov
xor
cmp
or
pushf
stos
adc
fisubrl
test
inc
stos
cli
mov
pushf
or
xor
sub
lea
pop
movsl
lods
rcr
pushf
and
sbb
out
mov
bound
je
xor
mov
push
cmp
in
cld
sub
sub
mov
popa
mulb
aad
push
mov
pop
std
push
cmp
adc
mov
jle
xor
add
and
insl
nop
pushw
sbb
push
push
je
ror
xchg
rclb
out
fisubl
xor
mov
sti
loope
es
xor
arpl
add
push
sub
in
js
into
outsb
xchg
jg
aam
pop
jmp
jns
cld
and
adc
pushf
ficoml
add
inc
movsl
jae
ret
mov
adc
cltd
je
jp
out
fsubs
and
push
insl
and
sub
and
and
mov
xor
jmp
sub
rcll
sarl
xor
fidivrs
adc
lcall
xchg
jae
lods
xchg
pop
or
xor
xor
stos
pushf
dec
lock
mov
lock
shrl
jg
mov
xchg
stc
nop
jo
es
fnstenv
or
sub
pop
call
adc
sarb
popa
add
xchg
mov
xchg
mov
xorl
mov
mov
sbb
mov
in
push
les
shll
leave
insb
adc
scas
jnp
jo
sbb
cmp
repnz
xor
jno
and
ljmp
jge
xchg
loopew
int
push
insb
insb
cmp
scas
loopne
inc
xchg
pop
pop
pop
aad
sbb
pop
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
or
pop
mov
add
xchg
fildl
and
xor
aas
stos
add
clc
dec
xor
adc
xchg
das
mov
push
lahf
adc
ret
test
xor
xchg
jmp
int3
xchg
rorl
les
mov
cmp
sub
ret
cmpsl
rol
rcrl
repnz
xchg
xor
popl
fnstsw
int3
push
lock
jno
jge
push
movsb
mov
das
mov
cmp
dec
push
adc
sarb
into
pop
and
sbb
jno
fstpt
fildl
outsl
dec
fstpl
add
inc
fcomi
test
pop
cmp
test
sbb
pop
cmpl
fidivl
pusha
or
in
jnp
pop
xchg
int3
pop
inc
mov
adc
int3
mov
mov
xor
or
shl
mov
cs
roll
cmc
lea
and
popa
and
mov
jae
cmc
add
insl
fxsave
xchg
in
out
arpl
movsl
ret
scas
xchg
xor
imul
test
int3
std
sub
pop
fimuls
aad
add
cs
or
mov
outsb
fcmovne
xor
jbe
adc
inc
shrl
in
and
and
nop
call
and
mulb
pop
mov
xor
test
adc
lods
push
pop
mov
aas
insb
jae
add
fnsave
nop
and
dec
push
sub
dec
into
aas
pop
cld
lret
test
add
inc
addb
cld
mov
and
and
jb
flds
ds
jb
sti
mov
arpl
call
jecxz
dec
sub
cmp
in
clc
and
lds
or
out
popf
mov
mov
insb
add
pop
push
mov
hlt
and
ja
jae
mov
or
inc
push
xchg
sub
insl
push
dec
add
fcomip
mov
das
lods
stc
aaa
ror
pushf
scas
and
push
inc
fisttps
pop
or
mov
test
aas
sub
imul
inc
hlt
adc
adc
daa
not
push
scas
sbb
sbb
inc
and
std
inc
ss
jle
push
cmp
rcll
jbe
fisubs
ret
mov
mov
loopne
and
jbe
je
and
mov
mov
add
movsb
test
xchg
mov
push
xchg
sub
movsb
shl
lret
test
or
fdivl
lods
dec
or
into
add
jnp
xchg
orb
jle
es
shlb
rorl
jnp
andb
sub
inc
push
cmp
lods
mov
fimuls
jle
repnz
mov
dec
xchg
int3
dec
sub
inc
dec
inc
int
adc
outsl
stc
fnstenv
sub
mov
fists
movsl
movsb
jmp
or
pop
inc
push
push
aaa
sbb
pop
mov
stos
insb
dec
mov
mov
repnz
mov
dec
data16
mov
in
mov
sub
arpl
rcrb
popf
add
inc
mov
add
stc
movsb
call
sub
mov
pop
and
ficompl
pop
mov
xor
sbb
add
aaa
es
or
cmp
shrb
inc
sbb
sbb
add
shlb
pushf
push
add
lds
push
mov
and
sub
sub
rclb
pop
into
ja
mov
lock
pop
test
in
mov
arpl
push
cs
imul
out
dec
les
or
mov
nop
popf
lcall
mov
pop
out
add
ror
add
and
dec
je
mov
adc
aad
or
adc
push
jno
cmp
stos
and
test
dec
cmp
hlt
dec
jo
movsb
jg
sbb
loop
jp
shl
das
mov
clc
es
scas
insl
shr
or
das
fs
push
push
in
pop
pop
or
pop
or
inc
popa
test
popa
cmp
mov
sbb
add
je
xor
cmpsl
pop
int
mov
ss
add
ds
add
arpl
mov
inc
pop
and
dec
fidivrs
push
movsb
stos
aad
movb
mov
adc
jp
mov
filds
adcl
call
stc
mov
ret
pop
pop
js
lods
cmp
fs
add
cmp
loope
mov
push
sub
cmc
ja
fadds
xor
fadds
outsl
cmpsl
xor
mov
push
lret
stos
xchg
test
mov
lret
lret
add
mov
not
int
pop
inc
test
mov
faddl
nop
and
dec
or
in
mov
cwtl
in
scas
push
lahf
call
daa
cmp
jo
ret
imul
mov
lds
pop
mov
mov
mov
jl
push
xchg
mov
movsb
iret
add
jae
or
fsubl
pop
adc
jmp
gs
call
mov
jecxz
sbb
sub
cmp
pop
fcomps
js
arpl
das
xchg
scas
sbb
scas
and
outsb
jno
pop
mov
or
xchg
ds
add
xor
jecxz
repnz
jg
jp
and
mov
inc
std
adc
lock
add
and
addr16
or
lret
das
insl
jmp
or
push
sub
or
adc
popa
fisubl
std
insl
in
xor
cmp
push
leave
pop
int3
scas
jne
enter
lea
sub
scas
in
negl
leave
fs
mov
mov
add
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
aas
pop
mov
nop
add
xchg
add
test
popf
push
pop
lahf
mov
inc
sbb
in
jg
bound
idivb
push
dec
fs
adc
into
mov
out
stos
xchg
sbb
or
pop
jmp
cmp
push
popa
pop
andb
fisttpll
push
cmp
test
arpl
mov
add
push
icebp
adc
imul
cmp
scas
les
dec
lea
fimuls
call
sarl
cltd
in
out
jne
loope
xchg
out
addr16
push
cltd
push
xchg
bound
dec
mov
nop
inc
xor
and
dec
xchg
stc
gs
xchg
sub
jl
pop
loopne
stos
push
lock
and
sbb
iret
add
movsb
pop
inc
mov
test
stos
loop
loop
mov
fists
adc
fidivrl
adc
and
sub
or
pop
push
lea
idivl
lcall
adc
loope
dec
xor
xchg
mov
add
fwait
out
dec
xchg
fbld
xlat
sbb
ficoml
movsl
adc
fisttpl
ficoml
jge
jle
sbb
cwtl
jbe
mov
int3
mov
lods
ja
std
sbb
notl
sbb
aam
rorb
push
cmp
mov
add
sarl
adc
lea
call
inc
testb
pop
std
mov
cmp
inc
mov
inc
test
mov
push
mov
bnd
sbb
jmp
mov
jns
push
sub
out
mov
jge
in
dec
dec
push
jb
sahf
or
mov
sbb
pop
incb
arpl
xor
mov
jecxz
in
rorb
mov
jge
cld
push
in
clc
sub
pop
push
jg
sub
cmp
leave
fidivl
jns
fisttps
sarl
jge
stos
dec
testb
test
xor
fadd
ljmp
or
sbb
mov
cld
out
mov
ss
loop
adc
or
scas
stc
lea
mov
sbb
loop
scas
aad
hlt
mov
mov
fadds
mov
mov
dec
push
sub
push
stos
cmp
xchg
scas
arpl
sbb
js
push
imul
bound
and
and
std
ljmp
pop
jno
cli
mov
xchg
push
ret
lret
mov
xchg
inc
xlat
dec
call
and
adc
pop
out
and
rorb
mov
push
aad
in
out
repnz
testb
sub
mov
add
xchg
test
ret
sti
mov
rol
or
jmp
sti
sbb
mov
xchg
aas
sub
mov
pop
icebp
push
jmp
scas
dec
xchg
stc
mov
mov
jecxz
push
ss
lds
mov
repnz
ljmp
mov
inc
fcmovnb
imul
dec
aaa
in
mov
jg
mov
pop
std
mov
clc
mov
adc
pop
pop
aaa
inc
mov
pop
add
mov
pusha
aam
test
jmp
jns
inc
iret
push
rep
ror
dec
sbb
inc
cmp
out
stc
add
sbb
jl
push
jae
jne
hlt
jae
and
jne
mov
xchg
adc
sbb
or
cld
movsb
incb
adc
out
xchg
ss
inc
das
or
and
jnp
mov
lds
test
in
fwait
mov
inc
pop
fucom
push
stc
icebp
fdivrs
pop
pop
mull
out
rcrl
or
lods
mov
lock
mov
shrl
xlat
cmp
aaa
out
pop
add
adc
add
fwait
mov
adc
pop
push
fldt
jnp
push
cld
loope
daa
rol
adc
dec
js
lock
add
loop
dec
and
jmp
fsts
cmp
push
popa
dec
lahf
pushf
inc
cli
or
jne
insb
jne
int3
loope
sar
xchg
and
insl
pop
mov
inc
aas
mov
sub
fstpl
pop
jl
or
imul
mov
lcall
dec
xor
xchg
add
add
cmc
call
ficoms
and
pushf
mov
or
mov
mov
jo
out
fistps
and
xchg
ss
sarb
imul
enter
daa
xchg
out
aad
and
fucomi
xchg
jnp
repnz
cmc
dec
cmpsl
sahf
leave
es
mov
push
mov
and
outsb
pop
cld
fisubs
inc
addr16
mov
shrb
jecxz
sbb
pop
sbb
xor
pop
subl
mov
inc
and
or
and
or
inc
jns
jns
andl
mov
leave
lret
es
fimull
inc
sbb
sbb
data16
xor
aaa
pop
xchg
jmp
pop
dec
mov
loop
adc
ret
sbb
jbe
lea
imul
bound
jge
int3
adc
jns
dec
enter
pop
xor
mov
add
lret
outsb
rcl
sbb
lock
cld
and
jle
add
jb
stc
add
push
hlt
pop
decl
sbb
stc
add
pop
add
xchg
inc
pop
mov
loop
mov
mov
xorb
imul
pop
dec
bound
mov
mov
stos
test
andl
xchg
add
xor
cwtl
push
shl
fst
sub
out
mov
loope
shrb
movsb
outsl
inc
roll
sahf
pushf
sbb
mov
call
call
sahf
xchg
ljmp
pushf
in
rcl
ffree
fstps
mov
in
imul
lock
mov
xor
imul
aam
add
dec
dec
dec
inc
dec
sub
pop
fsubrs
add
xchg
add
mov
mov
jb
add
push
cmp
and
dec
aad
das
jbe
sbb
adc
call
push
jns
addr16
scas
mov
cltd
test
xlat
sbb
ja
mov
xor
jge
sbb
ret
aad
xor
popa
mov
int
xor
hlt
or
push
cmp
scas
mov
mov
push
shll
enter
scas
push
insl
bound
add
sub
push
arpl
fwait
repz
aam
adc
loope
daa
sti
in
add
mov
jecxz
mov
popl
out
je
inc
add
cli
iret
std
mov
sti
push
jno
notb
inc
sbb
dec
arpl
lret
stos
ljmp
push
test
pop
addr16
jl
mov
push
mov
jns
push
popa
jbe
mov
mov
push
adcl
scas
push
and
lea
inc
fdivrl
dec
ljmp
pushf
push
mov
xchg
lods
pop
addr16
and
jbe
jnp
xor
mov
out
aaa
adc
cmp
ljmp
inc
adcl
mov
dec
inc
mov
scas
sti
xchg
mov
mov
popl
ficomps
fbld
cmpsl
xchg
push
xor
mov
cmpsl
ds
dec
imul
scas
test
and
fsubrp
daa
out
push
xor
fldl
xor
ficoms
in
push
ds
insb
cmp
sub
mov
jo
inc
mov
push
mov
loop
mov
add
stc
gs
jne
add
popa
test
xor
mov
dec
mov
in
adc
aaa
ja
movsb
les
pusha
ret
pop
leave
imul
insl
mov
into
inc
mov
and
adc
push
jns
stos
mov
or
adc
notb
jp
sub
int3
ja
fbld
cmp
mov
mov
mov
fimull
push
mov
sub
or
lret
stos
movsl
ret
int3
push
mov
lods
icebp
push
mov
dec
fsubs
pop
fsubs
xor
std
jmp
inc
pop
inc
adc
push
cmp
or
bound
lods
mov
test
stc
les
lds
pop
aaa
pop
mov
mov
lahf
pushf
and
out
orb
scas
sub
out
mov
rcll
orb
cld
dec
mov
shlb
push
mov
or
jns
push
ret
iret
push
jae
mov
sbb
xchg
loopne
sbb
in
push
mov
mov
xor
repnz
in
dec
daa
dec
push
jae
mov
mov
out
dec
adc
xor
mov
or
clc
ljmp
and
scas
push
and
adc
pop
arpl
and
dec
xchg
out
adc
xchg
repz
add
dec
in
cmp
dec
mov
hlt
in
pusha
cs
or
cmp
jle
popa
ljmp
cmp
lock
imul
jp
inc
imul
inc
xchg
push
in
jnp
arpl
std
adc
mov
in
sbb
aam
cmc
rorb
test
mov
idivl
in
or
js
pop
iret
mov
sub
loopne
mov
movsb
outsl
rolb
jge
call
or
jnp
add
xor
pop
and
aad
mov
aad
xlat
nop
les
pushf
das
insl
das
shrl
inc
pop
hlt
lcall
add
aam
sub
out
mov
pop
fwait
adc
rcl
jge
int
popf
scas
cld
push
arpl
popa
lahf
push
mov
push
nop
mov
xor
push
xor
mov
adc
cs
sbb
adc
dec
add
and
adc
orl
add
mov
fadds
insl
lahf
mov
mov
in
roll
push
push
pop
cltd
sbb
scas
pop
shll
cmp
iret
cltd
out
fdivrl
sub
add
out
imul
in
adc
les
out
insl
loop
dec
lret
je
pop
dec
jbe
shr
adcb
dec
cmp
xchg
call
fwait
cld
cmp
xchg
leave
adc
mov
shrl
rcr
push
mov
cli
push
pop
movsl
insl
jns
outsb
mov
fidivrs
iret
ja
aaa
adc
out
out
mov
and
mov
pop
cmovs
clc
into
ljmp
add
aas
es
mov
cwtl
hlt
or
mov
leave
add
ret
or
lret
sub
test
cmpsl
repz
imul
cmc
jne
cmc
jp
pop
ja
xor
adc
xor
push
repz
mov
sbb
rorl
das
addr16
add
xor
adc
sub
xor
xlat
popl
arpl
js
add
or
cmc
test
stc
xor
pushfw
ljmp
rcrl
mov
js
xchg
push
adc
inc
xchg
out
rcrl
popa
cmp
cmp
das
int
jbe
std
ljmp
inc
inc
mov
jmp
gs
or
dec
clc
adc
inc
pop
cmp
mov
inc
es
and
dec
jbe
mov
push
mov
fisubl
ja
jecxz
dec
and
sub
cs
iret
lea
fsubl
hlt
scas
pop
mov
repz
int
jmp
clc
sbb
jmp
ds
cmp
push
dec
rcrl
lods
int3
push
or
lods
xchg
mov
imul
mov
js
fwait
stc
or
jnp
pop
mov
out
divb
std
and
pop
call
subl
in
push
dec
dec
pop
jecxz
int3
sbb
or
mov
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
xchg
add
cmpsb
aaa
fildll
fsts
or
dec
cmpsl
fs
out
xchg
lahf
test
lcall
or
divl
cmp
lds
fwait
roll
nop
mov
scas
repnz
mov
aam
mov
or
adc
cmpsb
mov
push
cli
shll
fdivrl
call
inc
xor
fisttpll
pushf
push
out
jno
jle
outsb
ljmp
push
wrmsr
xchg
loope
pop
push
loop
iret
mov
xchg
xlat
jae
xchg
out
jo
mov
jg
cwtl
and
test
repz
jecxz
lahf
push
xchg
cmpsb
out
popf
or
sub
fs
call
xchg
and
adc
enter
loop
pop
jle
xor
mov
mov
lret
lret
add
cmc
insl
repnz
adc
fs
sahf
xor
xor
filds
mov
in
gs
aam
add
fsubrs
push
daa
push
in
mov
pop
mov
aaa
jp
dec
xorb
cmp
cmp
add
loopne
stos
out
cmp
xchg
lock
shrl
cwtl
ja
push
outsb
jp
ret
xchg
pop
outsb
nop
and
xchg
aas
enter
bound
mov
rcrb
push
or
jnp
cli
test
sbb
in
es
cli
cwtl
mov
mov
and
pop
push
ret
pop
cwtl
sbb
out
mov
cmc
mov
adc
rorl
stc
paddq
movl
or
lds
fs
into
mov
mov
cmp
call
aam
mov
shrb
leave
sub
iret
pop
shr
lahf
lods
jne
lret
push
lods
mov
je
add
ss
sbb
cmp
and
fs
cld
sub
adc
scas
movsb
add
mov
pop
sub
ss
mov
popa
mov
arpl
push
fistl
sbb
cld
int3
lret
test
ljmp
mov
insb
pop
lahf
arpl
or
ret
aas
push
mov
mov
stos
pop
popa
and
xchg
dec
out
cmp
xor
fimull
in
lahf
xchg
outsb
out
into
cwtl
shl
jnp
cmovns
pop
and
cmc
fstpl
sbb
pop
int
push
and
sub
pop
mov
daa
repnz
les
push
ja
fldcw
dec
mov
jo
mov
adc
cmp
sahf
dec
adc
scas
or
repnz
scas
js
rorb
pop
pop
or
mov
add
fwait
clc
jo
mov
xlat
mov
adc
add
call
les
out
rcrb
test
enter
test
mov
inc
in
mov
hlt
gs
cltd
int3
dec
fmul
xor
cli
ds
jp
xor
shl
mov
push
inc
es
rorl
pushf
out
pop
inc
push
lea
dec
int3
mov
push
add
cmp
cli
sbb
lods
mov
or
orl
add
add
inc
ds
dec
adc
addr16
sbb
insb
leave
bound
sub
outsl
stc
filds
adc
ficoms
lods
scas
pop
cli
add
jmp
das
mulb
push
bound
out
add
xchg
xchg
js
xchg
push
loope
add
push
jnp
adc
mov
fwait
outsb
xlat
aas
sbb
mov
adc
add
mov
xor
push
mov
ss
dec
pop
mov
or
jns
cwtl
push
mov
sbb
aas
sbb
loope
mov
dec
loop
push
lret
in
fistpll
rorl
add
rorb
subl
enter
mov
loopne
sub
push
fdivrs
call
into
pop
mov
mov
adc
add
leave
jle
mov
pusha
ds
push
dec
ja
add
test
aad
cltd
decb
push
push
inc
inc
stc
add
ds
pop
repnz
pop
mov
cltd
jle
pushf
mov
movsl
mov
mov
jnp
test
mov
insb
sbb
and
xor
jg
pop
or
icebp
mov
in
mov
data16
dec
pop
sbb
stc
movsl
shll
adc
jl
leave
rorb
out
sti
jbe
adc
jg
in
mov
jecxz
jae
xor
scas
out
dec
jbe
daa
aam
jl
inc
add
dec
pop
leave
push
movsb
sar
insl
mov
xchg
mov
fdivr
aaa
cmc
std
loopne
stos
add
out
xor
mov
xor
and
dec
insb
test
in
leave
mov
mov
imul
shl
imul
mov
bound
std
or
sbb
mov
out
jae
jns
xor
addr16
sub
scas
xchg
xchg
add
insb
lahf
sub
int3
sbb
in
cmpsl
cld
shll
push
xchg
and
mov
mov
add
mov
jns
out
sbb
sarl
jecxz
outsb
pop
push
push
and
cld
jne
sti
inc
es
in
xchg
arpl
imul
ror
not
xchg
pop
xchg
sbb
mov
or
sub
notb
xor
pop
scas
jne
ret
pushf
xchg
lahf
out
and
imul
push
push
jbe
pop
xor
enter
repnz
jg
xlat
xlat
mov
push
xor
xchg
lods
aas
shrl
cmp
loopne
outsb
mov
int3
mov
out
pop
mov
fbstp
leave
sti
xchg
add
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
ret
add
xchg
add
lock
pushl
pop
inc
push
mov
orb
ja
mov
ss
adc
cmpl
out
dec
arpl
and
subl
imul
push
aam
mov
and
cld
push
and
sbb
inc
inc
sbb
test
jnp
lret
push
call
lds
sub
or
outsl
les
lods
xor
and
inc
mov
mov
mov
mov
lea
push
xor
xor
idiv
enter
notb
push
mov
int
mov
cwtl
flds
xchg
push
out
sbb
mov
das
in
cmp
xorl
mov
xchg
sub
sbb
add
rol
and
inc
sub
arpl
repz
mov
jbe
push
mov
mov
push
mov
dec
mov
add
or
mov
fiadds
sahf
xchg
cmpb
add
cmpsb
fadds
into
out
push
or
aad
andb
xchg
into
sub
es
and
das
repnz
neg
mov
or
iret
jle
sbb
or
in
or
pop
rclb
ss
loop
pop
mov
pop
outsb
notl
push
push
and
fisubrl
and
push
addr16
mov
push
xchg
adc
inc
jecxz
xor
hlt
ljmp
inc
jecxz
clc
std
xor
pop
xlat
in
test
mov
call
aas
and
xchg
loope
gs
aad
mov
and
test
xchg
jns
fucomip
pushf
stos
jl
jns
rcl
and
dec
fwait
mov
push
stos
fwait
xchg
or
fwait
xorb
mov
jmp
mov
sahf
test
fsubr
clc
push
adc
test
ror
shrb
jae
jecxz
mov
std
xchg
mov
jne
in
pop
add
pop
pop
ja
xor
mov
jge
lcall
lock
notl
fs
test
jg
fimuls
xchg
shrl
push
aaa
or
pop
cld
in
inc
stos
repz
movsb
iret
jb
mov
jno
jg
insl
repnz
sub
mov
sub
test
jno,pt
sbb
shll
inc
xor
pop
xchg
mov
mov
add
ljmp
lods
push
jmp
shrl
inc
jp
int3
das
ss
ljmp
fwait
out
mov
loop
add
aad
cs
cmp
xchg
mov
cmp
dec
es
rcr
jecxz
cmp
xor
aaa
mov
and
or
bound
scas
xlat
or
inc
lods
test
pusha
insb
fs
insb
andl
pop
dec
mov
jae
sub
jne
data16
mov
mov
pop
xor
int3
mov
test
loope
bound
loop
jle
loopne
pop
aas
jg
push
fsubl
push
push
leave
mov
cli
je
add
cmp
xchg
mov
sti
test
test
add
push
and
fadd
je
cmp
shll
cli
adc
sbb
popa
sbb
adc
jb
xchg
lahf
cmp
xlat
mov
mov
in
mov
outsb
filds
ds
mov
or
std
mov
inc
xchg
data16
adc
cmc
insb
testb
push
jge
mov
loopne
sbb
outsl
inc
push
mov
mov
mov
dec
mov
test
cld
int3
popa
pop
fisubs
sbb
sub
cwtl
lret
pop
add
xchg
mov
pop
lods
in
fdivl
xchg
pop
mov
cmpsb
jmp
adc
and
in
push
mov
xorb
push
xchg
mov
test
sti
leave
jmp
lcall
inc
pop
mov
jge
pop
in
mov
pushf
sub
out
xor
addr16
xchg
push
cmp
xor
cmp
or
pop
push
jmp
push
lcall
ret
dec
rolb
nop
jmp
pusha
das
lahf
inc
push
xor
mov
test
mov
or
stos
adc
loope
mov
pusha
and
dec
push
xchg
fcompl
popf
rolb
sub
cmp
std
pop
adc
jge
fisubrs
mov
sub
cmpsb
xchg
ljmp
jl
cmpsl
rorb
push
cmp
mov
dec
imul
sbb
fldt
loopne
in
push
test
sub
subb
cmp
xchg
lcall
or
cltd
cmp
cmp
push
push
dec
xchg
add
sbb
pop
mov
in
dec
and
mov
push
xor
icebp
push
lods
shr
ljmp
cmpsl
cmp
xchg
sub
mov
jmp
push
sub
js
cmp
mov
lock
into
daa
scas
mov
lret
idiv
xor
sahf
push
popf
push
repz
sbb
loop
mov
or
jmp
mov
push
dec
addr16
add
jns
dec
loopne
addl
nop
add
in
cmp
xor
lcall
lea
push
inc
mov
cs
sbb
cmp
mov
mov
pop
pop
inc
mov
adc
lock
mov
sbb
adc
rorl
xchg
sbb
cmc
stos
or
mov
adcl
in
sub
stos
int
jne
add
daa
xor
bound
fstpl
rorl
daa
loopne
xchg
push
jno
add
xchg
sbb
mov
pop
arpl
je
and
pop
pop
pop
pop
push
dec
mov
pop
nop
cli
stos
add
xchg
add
or
outsb
fisubl
jno
test
sahf
fisubl
sbb
dec
shll
xchg
xor
mov
mov
lea
xor
iret
pop
push
xchg
adc
inc
inc
jp
jnp
mov
insb
mov
cmp
lret
adc
sub
inc
pop
gs
ds
bound
shrb
sub
stc
or
xlat
mov
cmp
fstl
xor
fucomi
mov
and
xor
enter
jnp
mov
mov
out
loopne
lcall
pop
sub
mov
dec
and
pop
add
daa
sub
imul
orl
mov
lds
out
icebp
sarl
sbb
dec
lea
xchg
cmpsl
jnp
call
addr16
and
lods
pop
push
mov
sbb
sbb
inc
adc
aaa
pop
and
xor
mov
xchg
push
or
dec
in
adc
loop
lock
aad
dec
stc
cmpsl
lret
icebp
cmpsb
addb
inc
scas
push
dec
adc
call
je
and
push
push
movsb
cmp
ret
xchg
pop
jle
dec
add
mov
cli
sub
push
hlt
jns
pop
add
push
ds
loopne
movsl
or
and
adc
scas
sbb
popa
sub
cmc
stc
imul
push
mov
or
jg
test
inc
dec
cmp
icebp
mov
fstpt
seta
or
sub
mov
ds
jbe
scas
stos
pop
jmp
outsb
dec
cmp
mov
outsb
add
dec
daa
mov
in
sub
stc
idivl
jmp
inc
shrl
or
mov
leave
pop
pusha
fwait
dec
mov
xlat
iret
bound
pop
vmread
sarb
jecxz
iret
mov
and
testb
imul
dec
jnp
mov
cmp
dec
sarl
lcall
jnp
cmp
les
sbb
jl
inc
aam
outsb
adc
cmpsb
cmpsb
mov
cmpsl
cs
iret
mov
js
lcall
les
pop
add
lea
popf
ss
cmpsb
rorl
mov
repz
fnstsw
push
fs
into
mov
and
icebp
js
lret
pop
lcall
ja
push
jmp
arpl
call
fnstenv
inc
sub
jb
out
xor
std
out
dec
scas
sub
fdiv
xorb
and
dec
jbe
rcr
pop
aas
lods
cld
jle
leave
cmp
cmp
inc
gs
pop
sbb
stos
xor
jne
jnp
dec
cmp
and
mov
push
adc
cmc
dec
or
ret
dec
mov
ljmp
insb
inc
push
inc
jns
push
inc
xchg
sbb
fists
fwait
movsb
popl
ds
pop
xor
inc
sub
in
popl
aas
aaa
and
mov
dec
or
sub
push
adc
jg
jp
mov
or
scas
cltd
ljmp
in
add
call
outsl
cld
mov
or
repnz
push
sahf
out
inc
lds
add
jno
pop
hlt
icebp
leave
test
scas
bound
in
bound
inc
arpl
sbb
arpl
sub
mov
inc
fists
push
jbe
jbe
cmp
in
fld
cltd
ret
mov
push
fbstp
movsl
inc
in
mov
mov
xchg
fs
pop
pop
push
xchg
mov
aas
dec
xchg
jb,pt
adc
gs
push
lock
out
sbb
fisubrs
rol
gs
divb
jb
jp
arpl
cli
shl
jl
inc
shll
or
mov
pop
push
inc
xchg
daa
cld
jb
mov
jge
add
sahf
or
cmpsb
pusha
pop
mov
pop
movsl
mov
hlt
nop
fsubs
hlt
dec
jmp
dec
and
lahf
cltd
xor
scas
test
lahf
push
or
jecxz
push
fcmovnb
xchg
fs
lret
repnz
out
in
divb
aas
fwait
cmc
cmpsl
cs
inc
outsb
imul
adc
adc
jp
bound
and
sub
lahf
rorb
iret
cmpsl
mov
jne
pop
mulb
cltd
xor
div
xor
inc
push
sbb
xchg
ror
xchg
jg
ds
jns
mov
push
loopnew
js
xchg
imul
repnz
dec
adc
pop
cmpsl
xchg
flds
inc
lret
imul
add
jge
dec
mov
dec
negl
ficompl
das
sti
adc
clc
mov
jg
cmp
adc
stos
xchg
lea
cmp
jnp
pop
mov
dec
jnp
mov
cmp
xchg
jae
push
orl
dec
add
pop
shrb
xor
aaa
push
adc
xchg
jae
repnz
jo
daa
xor
mov
seto
mov
xchg
push
mov
inc
push
mov
mov
jg
inc
cmp
shlb
dec
call
or
aas
pop
or
pop
rorb
outsb
aaa
sub
push
mov
cltd
rcl
mov
dec
inc
jecxz
mov
add
out
pop
sbb
outsl
stos
sub
scas
add
sbb
or
mov
jne
andl
mov
arpl
pop
xchg
mov
xor
outsl
xor
out
dec
fwait
inc
imul
fadds
push
mov
cmp
test
jge
push
lret
and
stos
scas
loopne
inc
mov
lret
scas
aad
je
mov
and
push
mov
sub
jns
mov
mov
mov
vsqrtss
icebp
or
fisubl
daa
popf
sbb
and
xchg
loopne
scas
cmp
test
iret
adc
pop
mov
add
inc
push
inc
push
push
push
outsl
pop
mov
ret
add
xchg
add
mov
sarl
pop
enter
mov
push
or
roll
lret
clc
push
mov
out
xchg
jb
and
xchg
adc
add
jecxz
sbb
mov
pushf
in
iret
mov
fwait
and
xchg
cmp
jb
or
pushf
pushf
dec
cmpsl
aam
mov
dec
lahf
cmp
and
mov
idivb
mov
jp
clc
imul
mov
fdiv
roll
add
aam
mov
test
leave
mov
sbb
loop
movsb
add
loopne
sub
sbb
addr16
ss
test
mov
sbb
adc
pop
in
mov
je
leave
mov
imul
cmp
sbb
xlat
fsubrl
mov
loopne
xor
cmpsb
mov
pop
insb
fldcw
pop
pop
aas
sbb
aaa
push
adc
push
ss
out
pop
movsl
xchg
mul
mull
test
or
ja
mov
adc
and
fidivrl
outsb
and
mov
out
jo
ds
lcall
sbb
addb
in
push
fwait
cmp
jnp
pop
add
xor
lret
xchg
enter
xchg
push
xlat
or
dec
mov
stc
call
rorb
stos
sub
adc
cli
add
out
push
int
jbe
mov
or
popa
out
dec
out
jge
and
out
lcall
or
pop
and
movsb
fbld
enter
and
lock
lods
xchg
adc
xchg
cli
rcl
icebp
mov
dec
mov
adc
ljmp
adc
inc
mov
loopne
sub
jmp
test
cmc
sti
dec
pop
mov
fsub
mov
add
sbb
inc
dec
std
mov
push
mov
movsl
frstor
test
rolb
xorb
and
or
stos
cltd
scas
lods
insb
mov
ja
fdivl
mov
and
gs
cmpsb
out
push
push
leave
sub
jle
xor
mov
cmp
sti
test
mov
xchg
cmp
xchg
popa
dec
mov
aas
fbld
push
cmc
nop
nop
dec
push
xorb
pop
in
loop
pop
daa
sbb
or
out
outsb
xchg
out
dec
pop
jge
shl
call
popf
add
lock
inc
and
subb
subl
jb
inc
mov
repz
sbb
aam
stos
pusha
fxch
push
fst
scas
insb
push
fimull
jecxz
push
fnstsw
sub
or
jb
pop
cmp
movsb
scas
ror
jmp
outsb
jmp
popf
fadds
mov
mov
push
aas
outsb
fwait
bound
repnz
mov
ret
dec
push
mov
clc
fstpt
adc
stc
push
mov
push
jb
dec
xchg
ljmp
or
rcl
into
push
jp
roll
popf
sbb
mov
fs
mov
dec
loop
mov
mov
cmp
iret
inc
lea
pop
mov
jb
decl
sbb
xchg
sub
stos
push
mov
test
cwtl
lcall
dec
mov
out
lods
ret
lahf
popf
pop
jl
ja
fcomip
push
jmp
push
or
aad
push
adc
inc
movsb
xor
xchg
and
leave
je
fisubs
mov
push
movsb
or
jo
mov
clc
icebp
sub
out
negl
sbbl
popf
les
cltd
insl
sahf
addr16
ficomps
enter
push
stc
icebp
inc
push
pop
cmpsl
push
gs
lret
and
or
sbb
pop
bound
popa
sbb
jl
outsl
adcl
mov
or
mov
or
in
cli
test
push
andl
sbb
mov
jb
ja
xchg
lret
cmp
adc
pop
mov
outsb
arpl
jle
lea
pop
cmp
test
jnp
jge
ud1
jecxz
es
mov
xor
je
aad
pop
aad
mov
dec
cwtl
sti
mov
cmp
cmpsb
xlat
lods
repz
xchg
mov
cwtl
dec
out
mov
and
ljmp
xor
and
cmp
loop
into
fdivs
int3
inc
fldt
bound
and
xlat
std
pop
out
jge
lock
fisttpll
mov
mov
lods
cmp
mov
cmp
jnp
pop
or
jl
test
mov
outsb
mov
shlb
imul
sbb
push
in
and
adc
je
sub
adc
popa
insl
jecxz
cmp
stos
into
jmp
mov
fbstp
movb
pop
stc
pop
jmp
mov
imul
push
add
mov
repz
cmpsl
sub
rorb
mov
mov
fs
insb
popl
repz
test
sub
cmpsb
aad
int
adc
loope
ret
xor
fucomip
xchg
xchg
setno
push
scas
mov
divl
pop
stos
push
push
mov
sub
imul
jge
loop
mov
mov
inc
xchg
repnz
mov
repnz
push
enter
jl
int
mov
adc
bound
stos
jne
sbbl
popf
call
movsl
gs
stos
rcll
adc
js
popf
jb
and
jne
mov
mov
aam
rclb
out
xchg
and
push
and
test
xchg
and
jno
or
inc
pop
sub
xchg
push
lret
aaa
int
fbstp
cmp
aas
aad
sbbl
add
out
clc
imul
pop
aaa
push
jge
bound
es
xor
mov
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
out
ret
push
mov
add
push
push
enter
pushaw
leave
ds
ret
or
les
test
sbb
adc
in
pop
dec
xchg
jecxz
test
pop
test
sbb
mov
inc
fcmovnb
sub
push
jmp
cmp
push
mov
int3
cmpsb
faddl
cmpsb
dec
scas
adc
add
addl
adc
mov
add
mov
mov
ds
xor
arpl
das
jge
scas
aad
mov
sbb
adc
mov
popa
mov
sbb
ficompl
push
bound
fldl
adc
std
lahf
and
out
mov
jno
cld
adcl
xor
test
pop
or
inc
sahf
mov
fisubrl
mov
inc
cmp
stos
out
pop
imulb
add
aas
repz
stc
dec
and
mov
or
das
es
pop
aaa
xchg
rorl
stos
dec
mov
xor
movsl
inc
mov
andb
push
sbbb
mov
cmpsl
xchg
xchg
or
fld
mov
dec
gs
imul
negb
pop
ret
push
lods
jg
mov
lahf
stos
pop
mov
adc
pop
jbe
xor
xor
jge
cmc
and
divb
cmp
cmp
mov
xchg
mov
rorl
add
jb
or
push
ja
inc
or
pusha
fneni(8087
jbe
add
xor
mov
mov
xor
gs
push
stc
call
or
jns
sbb
mov
add
fsubs
push
outsl
pop
xor
inc
call
nop
div
dec
and
roll
sub
cmp
mov
popa
mov
fiadds
mov
pop
mov
test
cli
xchg
int3
ds
jne
xchg
fadds
xorb
loopne
mov
and
xchg
adc
lcall
popl
adc
jmp
std
rorl
fadd
sub
cwtl
pop
je
enter
cmp
dec
jae
or
lret
leave
int3
sbb
sahf
notb
sbb
push
pop
mov
or
shrb
mov
lret
mov
push
pop
adc
sbb
outsb
ret
shll
or
imul
mov
das
les
sbb
fadds
sub
inc
lods
popf
dec
inc
inc
sbb
inc
jp
pop
inc
xchg
test
cmpb
add
push
push
out
cmp
mov
lahf
adc
pop
imul
mov
fs
inc
sbb
xchg
test
sbb
mov
xor
mov
mov
int
lahf
mov
xchg
mov
xchg
xor
mov
sahf
pop
sub
das
mov
sub
inc
add
ds
dec
mov
iret
adc
sahf
pop
push
test
mov
jb
add
pop
dec
cltd
or
cmp
fidivrs
jmp
and
roll
scas
or
sub
xchg
out
inc
dec
stc
cmp
adc
cmp
cmc
call
sbb
int
rcrb
daa
pop
ret
cmpsl
cmpsb
test
stos
add
dec
jne
mov
add
and
cld
rcll
nop
or
fs
shl
nop
sbb
iret
test
divb
ret
adc
dec
leave
pop
add
and
mov
push
xorb
mov
push
lea
and
stos
and
xchg
fbstp
push
mov
push
cmc
sub
shll
movb
lods
imul
cmp
mov
cmpl
jecxz
mov
and
xchg
jb
ljmp
vpmulhuw
adc
jmp
and
dec
leave
cld
dec
ror
lahf
add
sub
stos
leave
enter
jge
fs
lahf
scas
cmp
clc
test
sbb
call
popa
adc
mov
or
dec
mov
popf
lret
inc
les
ret
lcall
ja
popa
jmp
pop
xlat
scas
mov
out
pusha
sub
notb
sbb
mov
int
mov
dec
in
push
jecxz
mov
jbe
or
data16
xchg
scas
cmpsl
test
add
xchg
xor
xchg
cwtl
xor
mov
mov
fildll
inc
jp
add
adcl
pop
aam
jno
loopne
xchg
daa
add
mov
lods
out
loopne
inc
push
sub
sbb
dec
roll
stc
adc
mov
dec
lock
call
ljmp
inc
push
into
pop
cmp
fcoms
dec
cli
and
es
push
fistpll
ret
pop
cltd
es
aas
xchg
stos
cmp
mov
add
in
or
mov
lock
add
mov
push
jo,pt
inc
adc
sarb
and
lods
push
imul
lods
jnp
xlat
in
js
repnz
xor
adc
ret
sub
sub
lock
mov
loope
add
cli
pop
outsb
adc
lret
cwtl
xor
jge
adc
das
xchg
mov
cmp
add
xorb
xchg
or
fidivs
sti
jno
sbb
mov
mov
dec
or
movsl
out
mov
nop
int
cmovg
mov
jne
test
xchg
push
mov
bound
mov
pop
outsw
mov
shl
xchg
stos
sub
insl
outsb
stos
jne
mov
push
inc
pushl
xchg
sub
mov
ud1
rcrb
int3
pop
dec
sub
data16
fs
jno
enter
sbb
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
dec
inc
pop
mov
add
outsl
cltd
mov
inc
cs
test
xchg
or
rcr
mov
pop
fwait
adc
sub
fstps
daa
lahf
fldcw
mov
loope
test
xlat
inc
push
rol
cmpsl
mov
jb
ljmp
mov
or
arpl
mov
pop
movsl
add
leave
std
into
sbb
clc
lret
fs
mov
xor
and
cmp
or
imul
jmp
fldl
push
sub
fs
iret
or
xchg
out
scas
daa
mov
adc
xchg
or
das
mov
push
pop
inc
jae
xchg
push
dec
xchg
movsl
inc
mov
call
or
daa
int
loopne
xor
ficomps
lcall
fdivrl
jg
sbb
ss
inc
lea
cs
mov
outsl
into
ret
add
push
add
orb
adc
movsb
cld
cmpsl
or
int3
rolb
repz
and
jb
jle
popf
cltd
sub
ret
pusha
lahf
mov
out
f2xm1
stos
movsb
sbb
or
add
mov
jecxz
enter
sub
add
jle
data16
pushf
pop
pop
jmp
dec
or
shrb
int
test
mov
jmp
or
xchg
and
jp
dec
or
pop
mov
aaa
out
popf
pop
and
xor
imul
popa
mul
or
std
fsts
mov
fmuls
add
dec
inc
pop
aam
sub
pop
or
int
jbe
cs
mov
dec
icebp
xor
push
ja
cld
add
or
push
pop
pop
arpl
xchg
fwait
dec
insl
je
ficoms
sbb
mov
cwtl
sti
aas
lds
sbb
sub
push
das
lcall
aaa
orb
xor
enter
cwtl
imul
adc
jle
es
les
jbe
les
sub
mov
test
inc
jne
jecxz
cmp
ljmp
adc
js
xrelease
pop
es
imul
or
das
sbb
cmp
or
imul
rcl
aas
aam
insb
clc
xchg
push
jge
pusha
mov
push
push
mov
fcomps
pusha
repz
xchg
jp
pushf
jge
push
mov
mov
and
mulb
xlat
decb
pop
divb
adc
xchg
ret
sbb
xchg
jns
loopne
sbb
xchg
add
stos
pop
xchg
lds
adc
sub
and
fsubrs
add
mov
into
cmc
add
aam
mov
aad
loopne
stos
cmp
shlb
mov
js
dec
adc
push
jle
sbb
insb
inc
adc
xor
sub
xchg
cmp
fstpt
mov
xlat
jae
jle
sub
xchg
decb
jno
ss
adc
mov
dec
push
mov
inc
pop
jne
fbld
mov
sub
stos
lret
in
jg
push
ficoml
add
mov
mov
pushf
lcall
adc
cmp
mov
push
imul
in
adc
and
jo
aad
sarb
cmp
and
adc
pop
sbb
mov
insl
sbb
scas
push
bswap
inc
je
mov
lcall
fildl
xlat
sub
js
xor
xchg
inc
xor
ficomps
fstps
icebp
js
movsl
jle
lcall
fcoml
and
mov
dec
loopne
leave
in
add
gs
and
mov
in
shrb
cmc
jne
xor
mov
xchg
pop
dec
iret
test
cmc
jp
mov
sbb
pop
add
lret
inc
inc
mov
enter
inc
sbb
xchg
dec
sub
jle
lock
inc
fwait
cmc
mov
and
jg
mov
in
outsb
lcall
push
cmp
lods
call
negb
fstpl
pop
pop
out
popf
sahf
ret
sbb
leave
fnstsw
pop
push
xor
in
lahf
jmp
jnp
cmpsb
add
sahf
add
iret
insl
das
and
dec
cmp
clc
jge
dec
xor
mov
or
mov
stc
xor
mov
pop
xchg
jg
sub
insl
push
es
lods
cmp
inc
mov
push
and
pop
sbb
mov
xlat
add
adc
xchg
je
test
push
mov
rcr
pop
push
xchg
andps
jbe
xor
push
adc
in
sbb
sub
mov
clc
or
hlt
pushf
pushw
jb
cli
les
cmpl
mov
or
xorb
mov
aad
movsb
pop
into
lret
dec
lahf
push
inc
in
out
jo
stos
or
ss
cmpsb
push
sarb
call
scas
pinsrw
out
mov
das
push
mov
adcl
mov
mov
jnp
inc
idivl
jne
into
dec
pop
nop
xor
cwtl
addb
lahf
repz
rorl
pop
ds
aas
movsb
jnp
flds
xor
jecxz
sub
imul
out
sub
push
xchg
or
mov
mov
sub
push
test
add
ss
popa
pop
in
les
and
sub
cli
insb
xchg
dec
mov
xchg
jecxz
mov
or
add
loope
sub
movsl
inc
or
rcrl
fldenv
inc
idivb
xor
mov
and
roll
mov
pop
fisttps
imul
shrl
test
adc
sub
lcall
add
pop
pop
dec
push
dec
push
pop
pop
mov
xchg
out
adc
add
xchg
add
add
dec
fadd
scas
lods
aaa
fisubl
sub
cmp
add
cld
push
fstps
in
pop
loop
jbe
or
dec
icebp
lahf
aam
daa
outsb
aaa
icebp
pop
adc
mov
bound
sub
push
xchg
adc
pop
bound
push
mov
clc
scas
mov
fildl
push
shll
pop
and
daa
push
push
sbb
pushf
or
data16
push
xor
dec
inc
in
jns
lcall
mov
lcall
mov
jns
jno
inc
jo
mov
mov
repz
movsl
and
in
js
std
outsl
ljmp
fimull
push
add
pop
cmp
push
adc
dec
int3
or
daa
mov
ret
repz
cmp
outsl
mov
and
dec
xchg
out
aam
lods
lods
pop
dec
or
ljmp
mov
leave
insb
inc
nop
out
les
sbb
test
out
push
dec
jnp
and
out
lahf
mov
sbb
mov
sbb
jecxz
into
mov
xchg
es
mov
sbb
push
jb
xchg
nop
loope
sub
add
scas
pop
push
pop
jae
sbb
xor
or
push
xchg
cmpsb
pop
ja
mov
xorb
fisttpl
rorl
jne
mov
add
adc
and
adc
cmc
out
push
and
addr16
cld
lret
enter
push
adc
mov
std
and
or
mov
dec
add
fsts
xor
sub
sbb
jnp
lods
sub
xor
es
xchg
sbb
jae
xchg
mov
imul
mov
push
lds
adc
jo
movsl
lods
arpl
dec
push
loop
mov
push
dec
ret
rorb
loope
jmp
movups
xchg
out
mov
cwtl
stos
add
popf
cs
arpl
adc
test
je
xchg
push
dec
or
bound
xchg
push
test
jae
repnz
sbb
jg
push
pop
hlt
mov
out
cltd
hlt
xlat
xor
sbb
cs
xor
push
test
rcrb
xor
mov
push
fidivrs
movsl
mov
nop
shll
decb
and
jle
jge
push
mov
rolb
xchg
xlat
cli
xchg
mov
out
add
in
adc
dec
movsb
or
pop
dec
mov
jg
mov
seto
in
rcll
scas
xor
leave
lods
mov
pusha
sbb
xchg
ja
fdivp
inc
inc
jae
push
xchg
xchg
mov
pop
out
push
or
das
scas
jnp
cmp
cltd
fidivs
jmp
pop
in
js
test
ss
cmpsl
inc
es
test
out
dec
cmp
in
cmp
xor
cli
pop
negl
test
mov
aas
xor
dec
dec
xchg
scas
adc
mov
mov
mov
outsb
mov
movsb
fimull
cmpsl
mov
dec
daa
sub
mov
lret
int
inc
xor
popf
sbbl
xor
pop
loopne
cld
or
test
das
inc
pop
inc
pop
cmp
sbb
sub
cmp
jae
movsl
push
push
data16
cmp
fnsave
xchg
jno
imull
test
out
pop
add
dec
sbb
cmpsb
mov
mov
mov
pop
xchg
inc
or
xor
aaa
push
mov
aaa
mov
popa
mov
add
adc
mov
nop
xchg
fdiv
ds
repz
aam
dec
leave
pop
or
dec
or
mov
sahf
in
iret
mov
mov
push
and
and
daa
mov
inc
mov
ja
cmpsl
xchg
rorl
testl
push
mov
cmp
xor
adc
push
ret
call
movsb
mov
add
test
insl
push
or
xor
pop
lods
cs
leave
add
arpl
mov
jno
xchg
mov
jnp
lret
das
das
outsl
mov
scas
push
and
pop
outsb
fcmovb
xor
sbb
mov
cmc
pop
jne
into
cmp
pop
inc
addl
sbb
scas
xchg
rcll
pop
rcrb
xor
adc
jnp
out
mov
pop
lods
adc
in
cmp
pushf
and
fwait
insb
and
xchg
mov
insb
pop
ja
add
xchg
fisttpll
pushf
push
sbb
cld
pop
pushf
lret
insb
push
test
outsl
cmp
mov
cmp
outsl
lret
dec
outsb
jg
cmc
ret
push
repnz
insb
adc
jecxz
shll
inc
loope
out
cltd
negl
fisttpll
inc
cli
mov
jecxz
mov
mov
pop
xchg
insl
cs
push
mov
in
in
sub
stos
push
shrl
mov
jecxz
jno
and
add
mov
scas
pop
sarb
and
lret
push
bound
inc
rcll
loope
jb
loope
dec
xor
in
mov
out
mov
stos
icebp
cmp
sub
inc
push
add
cmp
pop
xchg
push
adc
mov
test
mov
dec
cld
pop
mov
mov
add
xor
jns
jp
inc
dec
adcb
rcll
dec
or
lahf
push
mov
mov
rclb
cmc
xor
dec
jmp
idivb
xor
mov
repz
scas
neg
es
scas
mov
adc
cmp
xor
lds
incb
imul
dec
fcoml
sub
outsl
das
test
out
mov
mov
inc
and
pop
inc
mov
bound
add
inc
push
push
push
push
push
inc
push
test
aad
cwtl
lret
add
xchg
add
insl
pop
outsl
jp
inc
test
rcrb
and
mov
inc
mov
push
scas
test
imul
sub
cli
mov
mov
sti
lock
push
pop
loopne
pop
add
add
or
inc
orb
xor
xor
xchg
push
icebp
add
push
outsl
stc
mov
adc
mov
sub
mov
push
scas
push
mov
sub
ret
inc
add
sbb
cltd
xor
lret
pop
out
scas
imull
push
jmp
cs
push
xor
xor
bound
push
popf
gs
ret
insb
push
add
leave
pushf
rcll
and
nop
aas
or
and
pop
repz
jae
mov
mov
aas
out
test
inc
rcll
fstpt
mov
cltd
fdivl
popl
dec
syscall
and
and
stc
les
push
xlat
and
xor
inc
in
outsl
jo
sbb
dec
add
lret
xchg
out
rcrl
leave
and
mov
arpl
cwtl
xor
sahf
jg
xor
lea
dec
cs
sahf
leave
pop
and
cmp
jl
int3
das
in
sbb
dec
std
jno
adc
xchg
and
jb
cmp
lods
std
push
cmp
sahf
sub
mov
out
mov
call
movsb
push
or
dec
xchg
lds
scas
dec
cmpl
jns
mov
stos
out
sbb
add
add
les
fisubrs
call
icebp
popa
xchg
dec
cltd
push
std
pop
and
cltd
jecxz
add
inc
jl
pop
es
cli
lahf
ret
cli
addr16
jle
dec
or
sbb
mov
stos
sub
add
mov
ret
stos
ss
sub
out
cmp
adcl
ja
lods
lret
cli
jg
xor
pop
adc
pushf
xchg
mov
jae
orb
loopne
jecxz
scas
xchg
dec
fildl
sub
mov
mov
push
aaa
mov
xchg
icebp
xor
addr16
les
cld
bound
fwait
or
adcb
fsubrl
push
insl
push
push
mov
push
dec
movsb
sti
push
in
or
pusha
xorl
mov
mov
movsb
popa
lcall
adc
push
or
stos
fiadds
bound
das
adc
imul
cltd
or
ds
aad
mov
in
dec
pop
test
cmp
xor
es
daa
shlb
or
ret
sbb
sub
sahf
pop
test
mov
test
lock
mov
and
mov
mov
and
ja
int3
push
adc
test
sub
arpl
push
jecxz
in
mov
mov
imul
fwait
jo
push
lret
cld
insl
les
mov
ja
scas
mov
or
aam
mov
mov
icebp
lret
aaa
fst
cmp
shlb
mov
pop
cmpsl
sbb
inc
ss
xor
stc
sbb
outsl
inc
cmpsb
push
out
mov
add
cmp
sbb
xchg
sub
mov
sti
sub
call
xor
imul
fadds
pop
xchg
push
xchg
cmp
inc
push
dec
push
or
out
cld
pop
mov
mov
ret
ret
add
and
push
push
popa
adc
daa
adc
adc
cmp
xor
nop
pop
cli
sub
lods
jo
dec
pop
out
xchg
mov
rol
gs
jmp
sti
jb
enter
sub
mov
mov
addr16
xchg
push
mov
out
push
and
dec
inc
das
jmp
push
in
scas
imul
jmp
rorb
push
jecxz
dec
sbb
clc
scas
imul
int3
aam
cmpsl
aas
or
xorl
rorb
sub
or
inc
jo
fwait
int
push
pop
sub
inc
add
sbb
and
fnstenv
sbb
into
fimuls
mov
jle
cmc
sbb
or
xorb
mov
sub
les
push
sahf
and
lods
les
fistps
leave
xorb
fisubl
pushf
cmpsb
or
sub
pop
aad
or
inc
sti
xor
push
dec
insb
nop
inc
push
mov
std
js
enter
fcompl
lahf
jnp
dec
mov
xor
and
jae
or
jo
sbb
and
xchg
inc
jmp
mov
jmp
pop
mov
test
mov
xor
or
push
mov
mov
jle
repnz
aam
mov
inc
aas
cmp
stos
aaa
sub
push
ds
cwtl
sub
mov
jmp
fsubrp
sbb
outsl
or
ffreep
pop
inc
shlb
dec
sbb
mov
inc
pop
call
mov
jmp
es
dec
dec
aad
or
int
addr16
icebp
mov
jno
xchg
and
inc
xchg
dec
pop
jg
into
jge
mov
mov
aaa
in
lods
xchg
lahf
push
push
cmp
mov
mov
repnz
adcb
cltd
xlat
adc
cmp
mov
sarl
int
xchg
sub
subl
mov
out
dec
pop
imul
mov
jno
loop
fbstp
cmp
sbb
pop
or
mov
lods
repnz
addr16
icebp
loop
push
mov
push
fcmovnu
mov
or
pop
stc
mov
xchg
pop
daa
cmp
jns
mov
int3
repnz
enter
push
popf
test
sbb
inc
and
dec
das
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
mov
add
aad
pop
aam
push
push
aas
and
int3
out
adc
shlb
bound
lahf
sbb
aas
xor
push
cld
sub
cmpsl
sbb
xchg
push
jmp
outsl
loope
fnstsw
jecxz
outsb
add
xchg
pushf
cltd
int
inc
pop
jp
call
add
add
adc
in
out
xor
jne
shll
mov
jmp
lret
mov
ja
out
jo
repnz
push
ret
pushl
fcomps
or
push
outsl
jp
repz
pop
nop
scas
in
xchg
inc
or
push
cs
xchg
ds
cmp
sarl
xchg
xchg
aam
xchg
jecxz
fldl
insb
dec
loop
sbb
sbb
test
repnz
lahf
add
loopne
in
pop
inc
or
or
push
dec
sub
xchg
std
pop
hlt
xchg
push
addl
mov
push
sub
insl
sar
add
push
fdivl
in
cmp
cmp
jno
ds
out
add
scas
rcr
aas
aaa
add
xor
adc
cs
xor
push
aam
cmp
dec
push
mov
and
aaa
cmp
inc
rclb
shlb
sbb
jge
add
lahf
xor
scas
xchg
mov
sbb
add
movsb
xchg
sub
pop
xchg
cmp
add
mov
pop
xlat
mov
nop
and
adc
adc
out
push
inc
out
in
sub
insb
je
inc
mov
push
and
xor
mov
xor
outsb
sub
andl
rcrl
and
and
aaa
lret
push
xchg
mov
out
inc
and
dec
ss
into
and
xchg
stc
dec
cmpb
repz
jae
xchg
fldt
movsl
pop
and
in
xchg
popa
out
dec
repnz
push
es
adc
pop
push
rcl
lods
repnz
enter
jmp
dec
mov
sbb
test
or
ss
mov
jae
addb
sbb
inc
pushf
cmpsb
inc
test
jg
xchg
pop
mov
stos
xlat
cwtl
mov
dec
pushf
jle
in
scas
sbb
xchg
mov
aad
push
pop
jmp
xchg
dec
test
pop
add
cld
pop
pop
in
icebp
movsb
inc
dec
adc
xchg
aaa
cmp
mov
jnp
dec
insb
and
pop
cmp
sbb
mov
and
inc
cs
and
adc
jno
push
add
fnsave
shrd
push
clc
or
inc
into
xor
push
sub
jo
ljmp
jle
inc
inc
adc
cmc
aam
sbb
xor
movsl
adc
dec
sub
lods
push
movsl
mov
hlt
or
pop
or
pop
or
pop
js
dec
mov
test
push
movsl
mov
fdivr
adc
push
test
scas
lea
imul
xchg
hlt
jo
mov
pop
popf
mov
add
out
xchg
jbe
jle
xlat
es
push
addl
ret
push
sub
pop
or
rcrb
and
std
pop
or
movsb
mov
out
mov
lret
scas
pop
out
aad
into
shl
xchg
push
divb
aas
xchg
sub
mov
outsb
mov
ficompl
pop
sbb
add
arpl
pusha
es
push
test
push
mov
mov
inc
or
mov
cltd
cmpl
fwait
leave
cld
iret
jmp
adc
or
repz
xchg
lods
aam
ret
outsl
movsl
loopne
test
dec
rorb
cmp
dec
rcll
sub
faddl
clc
fcompl
movsb
push
adc
popa
mov
add
dec
inc
lock
in
mov
je
dec
ds
out
mov
adc
push
pop
mov
mov
dec
cli
mov
mov
aaa
icebp
cmp
sub
mov
ss
aam
dec
in
push
mov
addr16
jmp
shrb
dec
mov
jae
cmp
in
pusha
push
sbb
ret
pushf
aam
stc
xchg
fxtract
rcl
and
int
xor
imul
call
inc
xchg
fisttpl
leave
repnz
jno
fisttpll
add
mov
adc
xchg
pop
xchg
xchg
jge
bound
popa
loopne
add
mov
mov
mov
push
int
in
lock
xlat
ja
or
push
dec
push
enter
outsb
sbb
jge
lods
fnstcw
arpl
push
inc
pop
loop
jnp
int
fs
jl
xchg
sub
and
adc
sbb
or
lds
sti
jge
loopne
fstps
adc
out
jne
mov
mov
jmp
mov
lea
hlt
fdivs
lahf
xchg
or
mov
jg
pop
lods
lock
jo
dec
cltd
mov
and
jle
mov
stos
movsb
push
jl
int
cmpsl
out
fsubl
add
cwtl
roll
ret
xchg
es
sub
xchg
lods
sub
nop
pop
loopne
add
pop
push
out
add
imul
inc
mov
shll
inc
xor
xor
jb
cmp
cmpsb
inc
jl
insl
sti
sbb
lds
xchg
cmp
inc
je
mov
add
jp
push
cli
mov
mov
mov
sub
push
adc
rcrl
dec
neg
push
dec
out
fstpl
cmp
mov
ljmp
out
stos
mov
repz
roll
and
mov
mov
jnp
inc
add
cld
mov
xchg
jle
test
push
movsb
xor
jb
dec
test
add
push
inc
push
push
push
push
push
inc
rorl
popf
idivb
cmp
movsb
fadds
add
jne
sbb
scas
pop
mov
cmp
push
push
leave
push
jns
push
jp
mov
aad
outsl
scas
add
repz
sub
push
test
cmpsb
inc
data16
xchg
fwait
in
je
mov
xorl
repnz
repnz
push
sub
rorb
testb
inc
lock
mov
je
test
or
xor
adc
call
fidivrs
jns
cmpl
jmp
adc
in
dec
aam
pop
fs
es
jb
push
xor
rcll
fs
push
adc
stc
fstps
and
fldt
test
in
fistpll
mov
push
fcoml
aad
push
popf
xchg
or
xor
jmp
clc
jle
data16
fucom
lcall
int
ja
fstpt
mul
mov
pop
clc
add
add
jge
into
jnp
and
int3
mov
dec
mov
ss
nop
xor
fwait
fwait
mov
pop
enter
shrl
xchg
inc
cmc
or
pop
outsb
inc
pop
jmp
and
jbe
sub
bound
subl
ljmp
and
popa
jne
xor
cli
ds
or
fdivs
pop
cwtl
mov
imul
adc
adc
out
jbe
sahf
and
mov
adc
pushf
daa
lods
stc
lcall
xchg
cmp
add
mov
push
mov
jg
test
sub
icebp
xchg
arpl
xor
xchg
sar
imul
inc
es
enter
and
jmp
aaa
outsb
lds
test
push
cmp
fimuls
pop
aam
int3
or
stc
daa
cmpsb
add
push
mov
sbb
xor
gs
cmpsl
cmp
bound
mov
pop
jl
out
mov
xor
add
in
fs
iret
cmp
xchg
and
ja
cmp
sub
scas
cmp
cld
cmc
pushf
add
stos
shl
popf
fwait
out
icebp
xchg
cli
sub
aas
push
aam
mov
in
imul
mov
add
sbb
push
add
xor
cmp
pop
sti
leave
frstor
dec
mov
pop
jbe
cltd
push
push
mov
bound
xchg
inc
add
in
pop
mov
scas
push
int3
pop
je
dec
movsl
cwtl
or
sub
fsubrl
fmull
or
mov
xchg
inc
out
lea
sbbl
inc
lret
mov
xor
add
sub
and
aaa
push
shrb
fisubrs
mov
adc
rcr
loop
jp
int3
inc
enter
add
cmpsb
loopne
leave
decb
lods
fidivl
out
cmp
pop
mov
or
inc
in
jae
dec
mov
lcall
out
push
adc
outsl
adc
mov
inc
xchg
jnp
ret
or
mov
out
xcrypt-cfb
cmpsl
pusha
sub
xor
push
inc
cmp
dec
lods
and
out
ret
mov
adc
xchg
sub
lret
subl
xor
lret
inc
sarb
int3
fisttpll
aaa
pop
shr
jl
outsl
or
je
mov
mov
int3
cmp
stc
repnz
mov
mov
mov
mov
lahf
xor
adc
popf
xchg
pop
addl
jmp
fdivrp
movsb
add
cltd
mov
pop
push
cmp
sub
adc
test
pop
cmpsb
in
lret
pop
in
sub
cmp
inc
std
sbbl
repnz
lea
xchg
adc
repnz
sub
inc
ficomps
jno
cmp
or
das
push
lods
fs
sahf
cltd
aad
xchg
push
rorl
push
cmp
les
stos
cmp
or
dec
cwtl
inc
adc
jo
add
cmp
inc
xchg
rcrl
iret
mov
xchg
popl
lret
movsb
mov
cltd
pop
aas
push
lret
push
pop
aam
dec
aaa
and
push
testl
cmp
sbb
int
leave
dec
mov
scas
dec
stos
adc
test
cs
cli
dec
lds
ret
notb
adc
icebp
mov
sub
push
cltd
mov
jnp
aas
fdiv
fwait
les
xchg
xor
pop
xor
in
sub
sub
test
popa
push
xchg
pop
xor
lcall
daa
jbe
loop
jbe
xchg
dec
cwtl
cmp
push
mov
addr16
fdivl
adc
negb
mov
gs
or
xchg
cmp
jo
insb
cmp
ja
notb
iret
mov
dec
xchg
add
jne
shrl
inc
pop
hlt
pop
pop
ret
xor
dec
cmp
mov
aas
push
sbb
mov
xchg
dec
insb
test
xchg
lock
lods
pop
xchg
xor
test
adc
fistl
repz
test
stos
cmp
dec
sub
lret
call
imul
sbb
sbbl
inc
adc
and
sub
push
jg
je
rorb
sub
jmp
mov
pusha
xchg
fisubrs
push
rcrb
loope
or
push
mov
push
das
adc
mov
popa
pop
ret
mov
enter
nop
cmpsb
dec
mov
stos
xchg
loope
lcall
jnp
adc
data16
cli
cmp
xor
mov
repz
push
ret
and
add
jae
stc
push
pop
xchg
inc
jns
and
sbb
xchg
sbb
mov
adc
es
lret
pop
dec
push
fbstp
bound
scas
pop
ljmp
mov
out
add
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
or
filds
add
in
rcr
loop
mov
fidivrs
daa
and
inc
fdiv
shll
insb
enter
pop
dec
int3
inc
and
rorb
mov
xor
test
push
jp
mov
in
rorl
jmp
dec
pop
mov
mov
dec
dec
fimuls
sub
push
call
loopne
cli
repz
or
jo
jbe
mov
out
jle
mov
pop
popa
pop
push
fsub
jl
stc
mov
and
les
add
push
fsubr
rcll
mov
inc
pop
jle
add
shl
in
scas
insb
cs
ja
dec
jne
mov
shlb
sub
mov
push
push
push
mov
test
insb
xor
insb
or
add
fisttps
push
hlt
jae
out
sbb
xchg
in
stos
xor
shlb
addb
cli
push
test
iret
gs
fnstenv
xchg
pusha
push
adc
adc
mov
dec
mov
lock
sbb
subl
test
ss
in
inc
int3
xchg
daa
mov
in
lcall
adc
into
js
lods
mov
inc
sbb
js
pop
and
inc
add
xchg
test
xchg
push
jae
loop
and
insl
mov
cmp
std
jge
fadds
and
pop
imul
and
imul
enter
std
inc
add
and
jne
rol
leave
sbb
inc
lret
adc
mov
fldcw
test
and
lea
mov
fdivs
mov
adc
xor
cltd
or
jmp
movl
movsl
jg
mov
cwtl
pop
rorl
inc
dec
xor
fadds
xlat
jp
cmp
mov
push
inc
pop
mov
cwtl
imul
add
adc
mov
out
sbb
sbb
sub
rol
testl
out
cmc
xchg
pop
je
hlt
rcrb
sbb
dec
inc
xchg
decl
inc
push
push
cld
ror
dec
xchg
inc
rol
enter
shl
jnp
push
add
shl
pusha
sbb
test
mov
xorb
call
pop
mov
lock
js
push
push
xorl
mov
imul
call
pop
adc
xchg
mov
adcl
lock
push
test
push
pop
fcmovbe
scas
sub
pop
sub
adc
jg
mov
jb
test
sub
and
pop
in
or
jg
pop
inc
jmp
pop
dec
repnz
sub
inc
xchg
add
das
shlb
cli
inc
and
mov
push
pop
ss
bound
add
sub
adc
xor
jo
scas
jg
add
test
add
sbb
pop
lock
and
movb
cmc
ss
std
xchg
enter
dec
add
cmp
test
dec
dec
imul
xor
incb
clc
adc
cltd
fstl
cmp
sahf
and
sbb
sbb
out
daa
sbb
push
add
lods
leave
shr
imul
xchg
mov
es
cltd
jle
mov
icebp
adc
aaa
imul
xor
imul
lret
fnstcw
test
mov
mov
lds
cmc
loopne
cmpsl
mov
out
out
or
mov
lret
daa
adc
rclb
call
stc
mov
bound
sbb
or
sub
cmp
clc
fcmovnu
ret
js
lret
daa
jl
adc
or
push
shll
adc
ljmp
cvtps2pd
mov
cmp
lock
test
xor
cwtl
mov
fdecstp
lret
out
fstps
cmp
inc
out
daa
leave
idiv
mov
fs
or
mov
jle
mov
jb
inc
scas
cmp
or
cltd
mov
dec
mov
xchg
cli
adc
jge
push
ds
mov
mov
mov
lahf
mov
jle
scas
cmp
add
leave
in
cmp
push
sar
ss
mov
sub
sub
adc
dec
js
ja
and
mov
and
sbb
sub
mov
arpl
lds
das
xlat
mov
and
mov
jns
call
sbb
or
scas
mov
or
mov
aad
inc
adc
sbbb
inc
cwtl
adc
sbb
lahf
pop
and
pop
cmp
aad
adc
lret
and
scas
push
insb
adc
inc
sbbb
lcall
and
sar
stc
sub
lds
into
cmpsl
and
cmp
jg
or
sbb
xor
rolb
repz
iret
pop
adc
in
mov
jle
jge
or
and
mov
inc
fdivrs
dec
mov
inc
ret
xor
mov
push
xchg
mov
int3
aas
xor
sub
push
xchg
xchg
pusha
shl
pop
lcall
mov
sub
inc
jo
add
xchg
sbb
clc
ret
mov
dec
add
out
jge
mov
mov
jne
inc
cs
xor
movsl
out
push
push
mov
jg
sub
jmp
aad
addl
mov
shlb
sbb
add
leave
adcb
cltd
lds
and
cli
xchg
xchg
popa
jne
dec
es
repnz
mov
cmpsb
push
lret
mov
repnz
add
jl
insb
gs
add
stos
adc
push
mov
inc
push
outsl
jnp
fwait
mov
adc
jg
sbb
mov
cmpsb
das
pop
jle
leave
into
lcall
out
inc
and
add
dec
inc
push
push
pop
push
dec
pop
idiv
mov
mov
add
xchg
add
mov
lods
insl
flds
fists
sub
pop
adc
lret
cmpsb
lcall
add
sbb
adc
pushf
imul
jbe
cld
loope
int
jg
add
or
jecxz
dec
notl
insb
js
dec
movsb
subl
ret
enter
lret
cwtl
mov
into
ret
lods
cltd
mov
mov
xchg
ret
push
inc
sub
dec
aam
insl
ret
jmp
negl
icebp
mov
fistpll
dec
call
inc
cmc
int
ret
bound
cmc
test
ds
test
sub
dec
or
cmp
mov
int3
movsl
insb
and
fimull
clc
sbb
adc
pop
fisttps
dec
dec
loope
into
xor
jmp
jp
mov
fstpt
pop
lret
xchg
bound
jmp
sub
clc
das
inc
jbe
lcall
xchg
mov
or
inc
lret
jmp
sbb
mov
adc
xor
cmp
add
lods
int
or
fcmovbe
lds
jge
lcall
dec
cs
dec
loope
mov
icebp
scas
jb
arpl
push
cmpsb
jns
aam
dec
adc
jno
mov
mov
jle
cli
push
xor
divl
xchg
imul
rolb
xor
in
sahf
push
rcrb
mov
or
lcall
inc
outsb
sbb
stc
jnp
cmp
int3
bound
ret
in
cs
fs
lret
xchg
aas
mov
aam
pop
aas
adc
mov
stos
scas
movsl
pop
insb
bound
pop
out
ffreep
cmc
repnz
mov
fnstsw
std
insb
out
pop
mov
lret
inc
lahf
arpl
xchg
lret
push
insb
shll
rclb
ljmp
mov
out
mov
loope
push
ret
adc
iret
mov
sbb
ret
call
gs
mov
pop
ss
js
loop
push
sub
sub
sbb
ja
or
das
fwait
mov
scas
aam
cwtl
push
inc
addb
aad
inc
mov
and
push
addr16
call
jno
cmc
lret
inc
pop
repz
cmp
call
jge
pop
int
push
jmp
inc
loope
push
dec
xchg
repz
popa
push
aad
pushf
ljmp
adc
or
into
lret
mov
or
sbb
das
mov
stos
addr16
fistpl
decb
js
aas
sbb
xchg
dec
andl
mov
adc
into
pop
xchg
xchg
sbb
sub
je
test
xor
dec
push
lret
cmp
or
testb
lahf
or
mov
jb
dec
dec
mov
jno
add
in
jl
jne
jae
pusha
out
push
out
push
mov
lcall
icebp
fwait
add
icebp
push
push
cmp
popaw
cli
mov
mov
jg
in
scas
push
push
insb
sbb
adc
stos
xchg
sub
shrb
scas
inc
pop
hlt
inc
jae
or
es
popf
adc
jnp
push
lahf
test
adc
xchg
fmull
in
sub
jecxz
push
cld
inc
pop
pop
jbe
mov
mov
lcall
mov
rcrl
xchg
mov
jecxz
add
call
rcrb
cmp
jmp
scas
pusha
je
mov
stos
repnz
mulb
pop
scas
hlt
jg
push
or
aad
push
sbb
cmp
jo
sbb
mov
inc
cmp
scas
mov
loopne
insb
sbb
add
push
out
outsl
mov
inc
call
mov
negb
adc
xlat
stc
out
fnstenv
xchg
pop
add
orb
sarb
ficoml
call
fcompl
or
ja
in
scas
in
inc
paddw
out
adc
mov
mov
xchg
xchg
or
mov
movsl
lods
filds
mov
movsl
fisttpll
aam
pop
mov
and
ja
dec
inc
pop
pop
hlt
shlb
lcall
xor
pop
pop
jns
pop
mov
bswap
sub
pop
clc
fmull
test
loop
mov
js
pop
pop
insl
lock
adc
ret
and
mov
shll
rorl
daa
stos
pop
sub
xchg
in
clc
mov
outsb
push
sbb
test
xchg
pop
cmpsl
sub
push
hlt
sbb
add
xor
push
int
lods
clc
and
loop
xchg
fdiv
inc
or
arpl
clc
pop
push
xor
dec
push
stc
xchg
movmskps
adc
popa
enter
repnz
dec
cld
sub
scas
arpl
fdivrl
scas
das
mov
lods
xor
cmp
jmp
lea
add
adc
inc
and
adc
inc
pushf
mov
pop
sbb
cmpsl
std
or
jg
sahf
pop
lods
shlb
nop
sbb
push
test
add
jbe
jmp
cmp
fnstsw
rclb
mov
mov
ret
es
iret
xchg
fbstp
cltd
stc
addr16
loop
test
ljmp
cli
aaa
jle
roll
pushf
fdiv
addr16
inc
xchg
cmp
gs
mov
cmpb
daa
jns
xor
push
mov
adc
lea
push
in
and
cmp
test
pushf
and
cwtl
jecxz
xchg
in
jne
mov
sub
mov
mov
mov
imul
rcll
inc
xchg
adc
sti
pop
sbb
xchg
mov
stos
xor
jae
sbb
addb
mov
rol
rolb
inc
popf
and
push
pop
push
sub
add
inc
pop
inc
pop
pop
pop
mov
push
mov
sbb
dec
ss
add
xchg
add
cmpsl
rcr
cmp
ja
mov
xor
and
xor
push
cwtl
dec
cs
mov
negl
inc
popf
jp
mov
push
shlb
push
sbb
xchg
sub
imul
dec
inc
xor
clc
jo
xchg
dec
jge
mov
mov
sbb
popf
add
gs
sub
mov
imulb
int
cmp
xchg
cmp
mov
push
inc
roll
push
out
mov
or
adc
rcrb
cmp
push
add
sahf
mov
pop
rep
inc
rcl
jns
divb
divl
jp
cld
add
pop
jne
jg
pop
mov
or
xlat
mov
gs
fcmovnbe
xchg
inc
cmp
int
stos
add
xchg
mov
adc
out
cmovne
mov
repz
out
shll
popf
jge
loop
push
dec
insl
cmp
cmp
sub
pusha
sarb
push
iret
pop
stc
lret
xor
mov
in
or
jp
inc
add
xor
jg
dec
and
xchg
mov
pop
add
xchg
mov
test
mov
add
fdivs
adcl
test
rcr
pop
in
push
mov
cltd
rcll
enter
dec
xor
jns
push
daa
pop
adc
mov
sbb
mov
jno
movsl
jb
rcrw
popa
mov
ds
rolb
ds
push
stc
in
stc
pop
cmpsl
mov
pushf
or
jle
cmp
paddsw
ljmp
lods
cmp
outsb
ja
fnsave
in
arpl
aam
movsb
sbb
ret
int3
call
cmp
and
and
jmp
pop
insb
adc
insl
sahf
and
test
mov
jl
popa
int
sub
xchg
je
cmpsb
xlat
sub
mov
lea
pusha
mov
stos
je
mov
rcrb
test
sahf
aaa
out
pop
push
dec
popf
int3
mov
cmpsl
adc
loopne
mov
negl
test
loopne
xchg
ret
mov
push
push
cmp
jmp
mov
dec
cmp
loope
sub
jo
das
cmp
sahf
lods
or
call
repnz
push
fs
jecxz
cld
mov
jge
lahf
and
pop
clc
dec
fidivrl
neg
sar
insl
icebp
es
es
lcall
outsl
mov
sbb
loope
stos
icebp
jmp
xchg
rcll
testl
scas
sahf
jnp
xchg
mov
cs
ds
shrl
sbb
pop
mov
mov
dec
mov
cmpb
xchg
xchg
add
inc
inc
mov
ret
sub
scas
jno
popf
loope
fldcw
cmc
lock
pop
ret
jl
xchg
sbb
sbb
sbb
push
inc
jp
jb
fwait
xchg
repz
xchg
jle
popa
inc
lock
ljmp
scas
es
mov
jb
push
sbbl
adc
inc
ret
xchg
add
adc
fstpt
lcall
test
or
mov
jb
pop
jno
cltd
pop
and
adc
out
xchg
dec
ja
ds
xchg
cmpsb
shll
addr16
lea
es
xchg
pop
ret
ret
lret
xorb
cmp
or
lods
inc
decb
jbe
adc
negl
adc
fmulp
test
xchg
jmp
jnp
push
sbb
repz
xor
push
scas
aam
outsl
push
dec
sub
lcall
add
pusha
jae
mov
fsubrl
jne
sub
fs
inc
fmul
inc
xor
stos
adc
sub
or
fadd
aam
mov
das
cmp
sbb
mov
jo
dec
test
sbb
mov
push
mov
out
addr16
mov
ja
or
inc
dec
ret
jne
cld
bound
rorl
adc
lahf
jg
jmp
xchg
pop
xor
enter
mov
mov
adc
ror
jge
push
mov
daa
leave
push
popf
fwait
int3
jno
je
dec
push
aas
int
pop
ljmp
inc
fbstp
xchg
arpl
fidivrs
js
inc
sbb
lahf
lods
or
nop
mov
nop
mov
sbb
xlat
dec
lods
sbb
pusha
loope
jl
movsb
subl
popf
cmp
or
aam
out
out
xchg
jne
pop
inc
lds
leave
sbb
mov
fwait
adc
sub
ret
neg
jecxz
jo
pop
sub
in
xor
sub
xor
movb
repnz
ljmp
movsb
outsb
sub
lret
cmp
mov
iret
jmp
sar
or
add
lret
sbb
packuswb
repnz
lcall
inc
sbb
cmc
jmp
xor
push
pop
add
lods
pop
xor
xor
xchg
aas
sub
test
ret
push
lods
rclw
aaa
or
mov
jg
outsb
add
imulb
fs
inc
out
mov
in
cld
adc
cmp
add
xchg
push
outsb
test
jl
sbb
push
mov
negl
xor
xor
mov
push
jae
dec
stc
movl
push
mov
in
sub
xor
mov
shrl
inc
stc
sbb
cmp
push
insb
sub
cmp
repnz
adc
roll
aam
les
mov
rclb
inc
inc
vpcmpeqd
fcmovb
clc
sub
push
fnstsw
pop
outsl
jbe
mov
icebp
mov
decb
aad
xor
sbb
test
pop
inc
add
cmpsb
mov
lock
and
jl
sti
sahf
sbb
sarb
mov
ja
fucomip
call
add
inc
push
pop
push
pop
pop
ss
imulb
pop
sub
ds
push
add
ds
xchg
cld
dec
insb
in
lret
dec
bound
push
out
sbb
notl
dec
movsl
test
sub
xchg
mov
jno
int3
out
sti
or
push
or
add
dec
pop
or
sub
cmp
lock
aaa
repz
inc
sub
mov
clc
sub
and
dec
jmp
or
std
mov
loope
in
mov
mov
lahf
scas
dec
stos
aaa
inc
ss
adc
fisttpll
inc
popa
push
faddp
inc
add
jo
pop
inc
arpl
mov
push
sti
mov
push
and
cmp
pop
jp
repnz
fcmovu
inc
mov
cmpsb
sub
pop
inc
loope
je
clc
nop
fs
ret
inc
imul
pop
sub
test
mov
push
or
push
fcomip
mov
aaa
inc
fdivs
data16
popf
mov
std
js
adc
sbb
push
int3
sbb
inc
mov
incl
cmp
movsb
mov
push
and
pop
cld
mov
std
dec
xchg
aad
mov
sbb
sahf
pop
inc
pop
repnz
lods
dec
leave
xchg
out
negb
jl
mov
add
popa
xchg
dec
imul
xchg
rclb
push
enter
jge
sbb
bound
xchg
aad
xchg
hlt
jle
and
xor
mov
repnz
ljmp
bound
and
xchg
rcrb
push
mov
pop
fnstcw
push
fsubr
xchg
pop
je
mov
fisubrl
sbb
icebp
mov
outsl
arpl
hlt
sbb
cmp
pop
jae
test
and
adc
divb
arpl
and
scas
gs
mov
xchg
push
or
notb
mov
and
pushf
fdiv
xorb
jbe
lahf
shrl
lods
dec
adc
repz
stc
dec
and
jge
dec
cld
test
inc
xchg
repz
in
inc
scas
rcrb
dec
repz
jecxz
adc
inc
bound
dec
in
icebp
mov
js
hlt
xor
popf
mov
cltd
sbb
cld
daa
test
lods
ss
mov
xor
jo
clc
inc
pushf
pop
xor
push
jae
adc
xchg
xchg
and
mov
or
out
fsubl
test
mov
repz
aad
daa
sbb
arpl
cltd
rcll
insl
xchg
xor
mov
ficoms
mov
in
iret
xor
ss
aam
xor
inc
push
xor
sti
dec
clc
pop
cmpsb
adc
icebp
nop
arpl
iret
dec
movsb
loope
loop
or
push
lock
loopne
sbb
cmp
aam
adc
lahf
sbb
lods
pop
pop
pop
shr
dec
adc
xor
lds
cmp
shl
mov
pop
adc
adc
and
filds
mov
aaa
pop
dec
cmpsl
enter
test
sub
sbb
and
in
mov
pop
inc
cmpsb
push
mov
das
pushf
jle
repnz
pop
jbe
inc
jae
aam
outsl
and
pop
sub
jg
inc
mov
push
mov
and
mov
xchg
dec
lret
cmp
xor
ret
xchg
push
imul
cmc
pop
cli
call
subb
out
dec
adc
lcall
push
sub
jle
call
cld
popf
bound
div
movsb
mov
insb
pop
xor
lret
cltd
cmpl
out
sub
or
aaa
cmc
push
leave
adc
mov
ljmp
andl
push
in
jae
popa
xchg
sub
and
push
sbb
imul
inc
mov
cltd
push
fbld
jns
icebp
aad
loop
into
in
sbb
mov
lahf
hlt
je
push
pop
sub
mov
cmp
jo
cltd
cmp
pop
jns
lock
lods
dec
xchg
fldl
adc
fstl
shl
cmp
sbb
mov
and
xor
xor
insb
inc
xor
shl
jae
inc
cmc
insb
mov
sbb
xor
xor
pop
jg
xchg
ror
jnp
push
fwait
out
pop
mov
shl
add
es
fwait
or
cmp
push
pop
xchg
lods
loop
inc
jg
out
pandn
pop
ds
mov
add
jbe
adc
rcl
orb
mov
push
imul
mov
xchg
cmp
sub
lahf
popa
cmc
rorl
push
popf
fisubl
rorb
inc
shlb
scas
mov
and
cmp
mov
gs
lds
dec
bound
xchg
scas
mov
insl
mov
out
cmp
or
mov
loopne
stc
inc
int
ficompl
cmp
sub
mov
fsts
fstpt
cltd
ds
jecxz
inc
imul
jge
or
push
out
and
cmc
ljmp
sub
arpl
cmp
xor
fsubl
sbb
inc
mov
xor
or
insl
imul
imul
sub
adc
or
jno
pop
xchg
jae
add
mov
in
stos
push
test
push
xor
mov
mov
dec
scas
sbb
int
adc
push
cli
cmp
sbb
mov
xlat
jge
shrb
clc
xor
rorb
adc
shrl
subl
testl
aas
jecxz
dec
push
cld
and
sub
mov
inc
cli
mov
imul
push
mov
jb
pop
in
dec
jne
add
jge
aad
jg
and
fs
fldt
push
js
sti
insb
mov
add
les
or
hlt
jb
sub
gs
mov
ja
push
xor
sbb
out
je
inc
popf
loop
xor
push
loope
rcll
push
divb
mov
addb
inc
jmp
jle
mov
subl
inc
add
dec
inc
pop
pop
dec
push
dec
push
enter
xchg
stc
add
jge
add
xchg
mov
xchg
mov
in
inc
imul
ret
cltd
ret
fldenv
js
mov
je
jb
in
or
testb
jno
cmp
push
loope
mov
add
jmp
mov
fdivs
insb
mov
jecxz
loope
mov
sbb
mov
xchg
jmp
inc
stos
mov
pop
mov
les
xchg
jnp
stos
sub
je
jecxz
inc
add
popa
mov
lods
xor
popf
test
movsl
loopne
in
pop
lds
mov
stos
pop
jno
adc
xchg
in
mov
adc
call
ja
pushf
test
push
xchg
or
inc
mov
test
xchg
jg
pusha
stc
adc
ss
data16
xor
jns
add
cli
adc
jno
or
ljmp
ret
lds
inc
rcrl
hlt
jle
add
shlb
cmp
adc
stc
jns
add
je
xchg
in
push
mov
fidivl
cmc
not
xor
cmc
je
aad
or
mov
inc
es
ret
sbb
and
call
inc
lret
pushf
loope
hlt
enter
cmp
add
mov
dec
push
lcall
das
and
lret
movsl
lea
jl
outsb
lahf
cmc
repnz
inc
pop
jle
cmp
jecxz
fwait
cmc
shlb
mov
sti
lock
inc
jecxz
mov
add
movsb
leave
call
cli
insb
aam
cmp
xor
cmpsl
add
aad
sbb
loope
mov
cwtl
sbb
xchg
leave
mov
adcl
addr16
bound
jbe
push
xchg
push
xchg
orl
cmc
sahf
pop
das
in
xor
sbb
nop
sub
mov
mov
inc
cmpsb
add
andl
dec
dec
inc
cmpsl
xchg
push
aam
or
xchg
std
lods
jg
pop
in
cmp
call
dec
xchg
psrld
popa
sbb
sub
icebp
mov
inc
movsl
jl
dec
xchg
sub
data16
mov
or
es
mov
mov
xor
cmpb
push
jns
pop
jmp
out
xchg
test
bound
push
test
push
and
jmp
popf
lar
dec
cmpsb
aas
pusha
adc
push
test
push
sub
pop
push
fs
in
adc
dec
jle
loop
inc
movsl
insb
sbb
les
cmp
in
test
mov
mov
push
mov
insb
insb
stos
sbb
in
xchg
mov
sub
mov
push
mov
shrb
notl
sahf
mov
mov
outsb
in
sbb
or
stos
add
pop
mov
int3
mov
jbe
out
mov
push
cmp
out
enter
inc
pop
ffreep
scas
bound
and
leave
cmp
ficomps
mov
sbb
sub
out
sub
imulb
lahf
ret
imulb
pop
in
or
lahf
and
sbb
xchg
push
test
test
arpl
movsl
or
insl
ret
out
push
pop
in
addb
and
dec
es
or
ja
mov
mov
bound
adc
pop
mov
xchg
lock
push
mov
push
cmp
sub
cmpsb
inc
sub
push
je
xchg
xor
xor
add
mov
ret
adcb
rcll
push
stos
sub
cmp
sub
adc
ret
jl
lcall
test
adc
jmp
push
inc
adc
jg
or
jae
ljmp
push
mov
lret
or
mov
jo
jae
dec
arpl
iret
inc
movsw
std
aam
mov
inc
rcrl
push
add
lea
dec
xor
incl
sub
cli
shld
mov
cltd
mov
adc
outsb
ret
and
rcl
rorb
push
dec
mov
mov
sub
in
cld
xchg
push
inc
enter
add
sti
cmpsl
das
jb
addr16
push
lds
fsubrs
data16
sub
iret
popa
mov
adc
sub
mov
push
mov
stos
popf
inc
daa
out
and
sbb
push
pop
ret
lea
lods
push
sahf
rolb
je
sub
out
sti
fwait
xor
psllw
js
jns
lods
dec
mov
popf
xchg
sbb
fs
mov
mov
int3
int
jge
jnp
inc
fwait
xchg
and
xor
jae
out
mov
ljmp
in
repnz
scas
sahf
popa
repnz
and
pop
adc
cmp
ss
imul
dec
sub
mov
ret
xor
mov
jae
xorl
sub
xor
pushf
imul
mov
cmpsb
and
inc
gs
pushf
shll
insl
ds
lods
jno
aas
loope
int3
xlat
cmc
lds
and
ss
and
gs
mov
inc
mov
adc
loop
add
cmp
sbb
lret
ret
mul
push
add
pushf
je
pop
call
lret
sbb
push
icebp
test
stc
repz
test
stos
es
je
adc
mov
decb
das
mov
insb
hlt
jae
aaa
xchg
xor
add
movsl
inc
adc
clc
pushf
cmp
push
test
xchg
gs
pop
jbe
cmpsl
or
mov
push
sub
daa
push
shlb
out
jbe
xchg
lahf
jns
sub
in
add
mov
std
cmp
aad
inc
mov
cltd
imul
aas
mov
inc
dec
dec
inc
cmp
cmp
push
and
cmpl
test
loop
pusha
sti
sub
gs
rorb
js
push
mov
mov
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
cmp
lret
dec
dec
clc
inc
mov
popa
adc
cmp
ficompl
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
